
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a1b8 <.init>:
    a1b8:	stp	x29, x30, [sp, #-16]!
    a1bc:	mov	x29, sp
    a1c0:	bl	aed0 <xgetcwd@plt+0x10>
    a1c4:	ldp	x29, x30, [sp], #16
    a1c8:	ret

Disassembly of section .plt:

000000000000a1d0 <base_len@plt-0x20>:
    a1d0:	stp	x16, x30, [sp, #-16]!
    a1d4:	adrp	x16, 42000 <vasnprintf@@Base+0x1424c>
    a1d8:	ldr	x17, [x16, #4088]
    a1dc:	add	x16, x16, #0xff8
    a1e0:	br	x17
    a1e4:	nop
    a1e8:	nop
    a1ec:	nop

000000000000a1f0 <base_len@plt>:
    a1f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a1f4:	ldr	x17, [x16]
    a1f8:	add	x16, x16, #0x0
    a1fc:	br	x17

000000000000a200 <mbrtowc@plt>:
    a200:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a204:	ldr	x17, [x16, #8]
    a208:	add	x16, x16, #0x8
    a20c:	br	x17

000000000000a210 <memcpy@plt>:
    a210:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a214:	ldr	x17, [x16, #16]
    a218:	add	x16, x16, #0x10
    a21c:	br	x17

000000000000a220 <memmove@plt>:
    a220:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a224:	ldr	x17, [x16, #24]
    a228:	add	x16, x16, #0x18
    a22c:	br	x17

000000000000a230 <pthread_rwlockattr_init@plt>:
    a230:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a234:	ldr	x17, [x16, #32]
    a238:	add	x16, x16, #0x20
    a23c:	br	x17

000000000000a240 <_exit@plt>:
    a240:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a244:	ldr	x17, [x16, #40]
    a248:	add	x16, x16, #0x28
    a24c:	br	x17

000000000000a250 <getcwd@plt>:
    a250:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a254:	ldr	x17, [x16, #48]
    a258:	add	x16, x16, #0x30
    a25c:	br	x17

000000000000a260 <same_nameat@plt>:
    a260:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a264:	ldr	x17, [x16, #56]
    a268:	add	x16, x16, #0x38
    a26c:	br	x17

000000000000a270 <fwrite_unlocked@plt>:
    a270:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a274:	ldr	x17, [x16, #64]
    a278:	add	x16, x16, #0x40
    a27c:	br	x17

000000000000a280 <strlen@plt>:
    a280:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a284:	ldr	x17, [x16, #72]
    a288:	add	x16, x16, #0x48
    a28c:	br	x17

000000000000a290 <exit@plt>:
    a290:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a294:	ldr	x17, [x16, #80]
    a298:	add	x16, x16, #0x50
    a29c:	br	x17

000000000000a2a0 <error@plt>:
    a2a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a2a4:	ldr	x17, [x16, #88]
    a2a8:	add	x16, x16, #0x58
    a2ac:	br	x17

000000000000a2b0 <pthread_mutexattr_settype@plt>:
    a2b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a2b4:	ldr	x17, [x16, #96]
    a2b8:	add	x16, x16, #0x60
    a2bc:	br	x17

000000000000a2c0 <fchdir@plt>:
    a2c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a2c4:	ldr	x17, [x16, #104]
    a2c8:	add	x16, x16, #0x68
    a2cc:	br	x17

000000000000a2d0 <perror@plt>:
    a2d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a2d4:	ldr	x17, [x16, #112]
    a2d8:	add	x16, x16, #0x70
    a2dc:	br	x17

000000000000a2e0 <flockfile@plt>:
    a2e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a2e4:	ldr	x17, [x16, #120]
    a2e8:	add	x16, x16, #0x78
    a2ec:	br	x17

000000000000a2f0 <getegid@plt>:
    a2f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a2f4:	ldr	x17, [x16, #128]
    a2f8:	add	x16, x16, #0x80
    a2fc:	br	x17

000000000000a300 <wctype@plt>:
    a300:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a304:	ldr	x17, [x16, #136]
    a308:	add	x16, x16, #0x88
    a30c:	br	x17

000000000000a310 <remove_directory@plt>:
    a310:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a314:	ldr	x17, [x16, #144]
    a318:	add	x16, x16, #0x90
    a31c:	br	x17

000000000000a320 <sigprocmask@plt>:
    a320:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a324:	ldr	x17, [x16, #152]
    a328:	add	x16, x16, #0x98
    a32c:	br	x17

000000000000a330 <rpl_mbrtowc@plt>:
    a330:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a334:	ldr	x17, [x16, #160]
    a338:	add	x16, x16, #0xa0
    a33c:	br	x17

000000000000a340 <geteuid@plt>:
    a340:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a344:	ldr	x17, [x16, #168]
    a348:	add	x16, x16, #0xa8
    a34c:	br	x17

000000000000a350 <get_roff_encoding@plt>:
    a350:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a354:	ldr	x17, [x16, #176]
    a358:	add	x16, x16, #0xb0
    a35c:	br	x17

000000000000a360 <pthread_rwlock_init@plt>:
    a360:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a364:	ldr	x17, [x16, #184]
    a368:	add	x16, x16, #0xb8
    a36c:	br	x17

000000000000a370 <getresuid@plt>:
    a370:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a374:	ldr	x17, [x16, #192]
    a378:	add	x16, x16, #0xc0
    a37c:	br	x17

000000000000a380 <pthread_rwlockattr_setkind_np@plt>:
    a380:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a384:	ldr	x17, [x16, #200]
    a388:	add	x16, x16, #0xc8
    a38c:	br	x17

000000000000a390 <chdir_long@plt>:
    a390:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a394:	ldr	x17, [x16, #208]
    a398:	add	x16, x16, #0xd0
    a39c:	br	x17

000000000000a3a0 <hash_insert@plt>:
    a3a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a3a4:	ldr	x17, [x16, #216]
    a3a8:	add	x16, x16, #0xd8
    a3ac:	br	x17

000000000000a3b0 <setenv@plt>:
    a3b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a3b4:	ldr	x17, [x16, #224]
    a3b8:	add	x16, x16, #0xe0
    a3bc:	br	x17

000000000000a3c0 <readlink@plt>:
    a3c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a3c4:	ldr	x17, [x16, #232]
    a3c8:	add	x16, x16, #0xe8
    a3cc:	br	x17

000000000000a3d0 <__cxa_finalize@plt>:
    a3d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a3d4:	ldr	x17, [x16, #240]
    a3d8:	add	x16, x16, #0xf0
    a3dc:	br	x17

000000000000a3e0 <sprintf@plt>:
    a3e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a3e4:	ldr	x17, [x16, #248]
    a3e8:	add	x16, x16, #0xf8
    a3ec:	br	x17

000000000000a3f0 <getuid@plt>:
    a3f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a3f4:	ldr	x17, [x16, #256]
    a3f8:	add	x16, x16, #0x100
    a3fc:	br	x17

000000000000a400 <pipe@plt>:
    a400:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a404:	ldr	x17, [x16, #264]
    a408:	add	x16, x16, #0x108
    a40c:	br	x17

000000000000a410 <opendir@plt>:
    a410:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a414:	ldr	x17, [x16, #272]
    a418:	add	x16, x16, #0x110
    a41c:	br	x17

000000000000a420 <__cxa_atexit@plt>:
    a420:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a424:	ldr	x17, [x16, #280]
    a428:	add	x16, x16, #0x118
    a42c:	br	x17

000000000000a430 <fputc@plt>:
    a430:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a434:	ldr	x17, [x16, #288]
    a438:	add	x16, x16, #0x120
    a43c:	br	x17

000000000000a440 <clock_gettime@plt>:
    a440:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a444:	ldr	x17, [x16, #296]
    a448:	add	x16, x16, #0x128
    a44c:	br	x17

000000000000a450 <qsort@plt>:
    a450:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a454:	ldr	x17, [x16, #304]
    a458:	add	x16, x16, #0x130
    a45c:	br	x17

000000000000a460 <kill@plt>:
    a460:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a464:	ldr	x17, [x16, #312]
    a468:	add	x16, x16, #0x138
    a46c:	br	x17

000000000000a470 <_argp_fmtstream_update@plt>:
    a470:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a474:	ldr	x17, [x16, #320]
    a478:	add	x16, x16, #0x140
    a47c:	br	x17

000000000000a480 <__ctype_tolower_loc@plt>:
    a480:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a484:	ldr	x17, [x16, #328]
    a488:	add	x16, x16, #0x148
    a48c:	br	x17

000000000000a490 <snprintf@plt>:
    a490:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a494:	ldr	x17, [x16, #336]
    a498:	add	x16, x16, #0x150
    a49c:	br	x17

000000000000a4a0 <mdir_name@plt>:
    a4a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a4a4:	ldr	x17, [x16, #344]
    a4a8:	add	x16, x16, #0x158
    a4ac:	br	x17

000000000000a4b0 <triple_free@plt>:
    a4b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a4b4:	ldr	x17, [x16, #352]
    a4b8:	add	x16, x16, #0x160
    a4bc:	br	x17

000000000000a4c0 <debug@plt>:
    a4c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a4c4:	ldr	x17, [x16, #360]
    a4c8:	add	x16, x16, #0x168
    a4cc:	br	x17

000000000000a4d0 <hash_free@plt>:
    a4d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a4d4:	ldr	x17, [x16, #368]
    a4d8:	add	x16, x16, #0x170
    a4dc:	br	x17

000000000000a4e0 <fclose@plt>:
    a4e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a4e4:	ldr	x17, [x16, #376]
    a4e8:	add	x16, x16, #0x178
    a4ec:	br	x17

000000000000a4f0 <rpl_regcomp@plt>:
    a4f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a4f4:	ldr	x17, [x16, #384]
    a4f8:	add	x16, x16, #0x180
    a4fc:	br	x17

000000000000a500 <getpid@plt>:
    a500:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a504:	ldr	x17, [x16, #392]
    a508:	add	x16, x16, #0x188
    a50c:	br	x17

000000000000a510 <nl_langinfo@plt>:
    a510:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a514:	ldr	x17, [x16, #400]
    a518:	add	x16, x16, #0x190
    a51c:	br	x17

000000000000a520 <fopen@plt>:
    a520:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a524:	ldr	x17, [x16, #408]
    a528:	add	x16, x16, #0x198
    a52c:	br	x17

000000000000a530 <iswctype@plt>:
    a530:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a534:	ldr	x17, [x16, #416]
    a538:	add	x16, x16, #0x1a0
    a53c:	br	x17

000000000000a540 <malloc@plt>:
    a540:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a544:	ldr	x17, [x16, #424]
    a548:	add	x16, x16, #0x1a8
    a54c:	br	x17

000000000000a550 <record_file@plt>:
    a550:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a554:	ldr	x17, [x16, #432]
    a558:	add	x16, x16, #0x1b0
    a55c:	br	x17

000000000000a560 <futimesat@plt>:
    a560:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a564:	ldr	x17, [x16, #440]
    a568:	add	x16, x16, #0x1b8
    a56c:	br	x17

000000000000a570 <funlockfile@plt>:
    a570:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a574:	ldr	x17, [x16, #448]
    a578:	add	x16, x16, #0x1c0
    a57c:	br	x17

000000000000a580 <stdopen@plt>:
    a580:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a584:	ldr	x17, [x16, #456]
    a588:	add	x16, x16, #0x1c8
    a58c:	br	x17

000000000000a590 <open@plt>:
    a590:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a594:	ldr	x17, [x16, #464]
    a598:	add	x16, x16, #0x1d0
    a59c:	br	x17

000000000000a5a0 <argp_failure@plt>:
    a5a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a5a4:	ldr	x17, [x16, #472]
    a5a8:	add	x16, x16, #0x1d8
    a5ac:	br	x17

000000000000a5b0 <xrealloc@plt>:
    a5b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a5b4:	ldr	x17, [x16, #480]
    a5b8:	add	x16, x16, #0x1e0
    a5bc:	br	x17

000000000000a5c0 <dir_name@plt>:
    a5c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a5c4:	ldr	x17, [x16, #488]
    a5c8:	add	x16, x16, #0x1e8
    a5cc:	br	x17

000000000000a5d0 <idpriv_temp_drop@plt>:
    a5d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a5d4:	ldr	x17, [x16, #496]
    a5d8:	add	x16, x16, #0x1f0
    a5dc:	br	x17

000000000000a5e0 <sigemptyset@plt>:
    a5e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a5e4:	ldr	x17, [x16, #504]
    a5e8:	add	x16, x16, #0x1f8
    a5ec:	br	x17

000000000000a5f0 <futimens@plt>:
    a5f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a5f4:	ldr	x17, [x16, #512]
    a5f8:	add	x16, x16, #0x200
    a5fc:	br	x17

000000000000a600 <strncmp@plt>:
    a600:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a604:	ldr	x17, [x16, #520]
    a608:	add	x16, x16, #0x208
    a60c:	br	x17

000000000000a610 <bindtextdomain@plt>:
    a610:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a614:	ldr	x17, [x16, #528]
    a618:	add	x16, x16, #0x210
    a61c:	br	x17

000000000000a620 <fstatfs@plt>:
    a620:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a624:	ldr	x17, [x16, #536]
    a628:	add	x16, x16, #0x218
    a62c:	br	x17

000000000000a630 <memset@plt>:
    a630:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a634:	ldr	x17, [x16, #544]
    a638:	add	x16, x16, #0x220
    a63c:	br	x17

000000000000a640 <gettimeofday@plt>:
    a640:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a644:	ldr	x17, [x16, #552]
    a648:	add	x16, x16, #0x228
    a64c:	br	x17

000000000000a650 <xmalloc@plt>:
    a650:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a654:	ldr	x17, [x16, #560]
    a658:	add	x16, x16, #0x230
    a65c:	br	x17

000000000000a660 <getpwnam@plt>:
    a660:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a664:	ldr	x17, [x16, #568]
    a668:	add	x16, x16, #0x238
    a66c:	br	x17

000000000000a670 <xstrdup@plt>:
    a670:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a674:	ldr	x17, [x16, #576]
    a678:	add	x16, x16, #0x240
    a67c:	br	x17

000000000000a680 <sleep@plt>:
    a680:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a684:	ldr	x17, [x16, #584]
    a688:	add	x16, x16, #0x248
    a68c:	br	x17

000000000000a690 <same_name@plt>:
    a690:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a694:	ldr	x17, [x16, #592]
    a698:	add	x16, x16, #0x250
    a69c:	br	x17

000000000000a6a0 <strerror_r@plt>:
    a6a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a6a4:	ldr	x17, [x16, #600]
    a6a8:	add	x16, x16, #0x258
    a6ac:	br	x17

000000000000a6b0 <calloc@plt>:
    a6b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a6b4:	ldr	x17, [x16, #608]
    a6b8:	add	x16, x16, #0x260
    a6bc:	br	x17

000000000000a6c0 <last_component@plt>:
    a6c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a6c4:	ldr	x17, [x16, #616]
    a6c8:	add	x16, x16, #0x268
    a6cc:	br	x17

000000000000a6d0 <hard_locale@plt>:
    a6d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a6d4:	ldr	x17, [x16, #624]
    a6d8:	add	x16, x16, #0x270
    a6dc:	br	x17

000000000000a6e0 <bcmp@plt>:
    a6e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a6e4:	ldr	x17, [x16, #632]
    a6e8:	add	x16, x16, #0x278
    a6ec:	br	x17

000000000000a6f0 <hash_insert_if_absent@plt>:
    a6f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a6f4:	ldr	x17, [x16, #640]
    a6f8:	add	x16, x16, #0x280
    a6fc:	br	x17

000000000000a700 <strcasecmp@plt>:
    a700:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a704:	ldr	x17, [x16, #648]
    a708:	add	x16, x16, #0x288
    a70c:	br	x17

000000000000a710 <readdir@plt>:
    a710:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a714:	ldr	x17, [x16, #656]
    a718:	add	x16, x16, #0x290
    a71c:	br	x17

000000000000a720 <realloc@plt>:
    a720:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a724:	ldr	x17, [x16, #664]
    a728:	add	x16, x16, #0x298
    a72c:	br	x17

000000000000a730 <__ctype_toupper_loc@plt>:
    a730:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a734:	ldr	x17, [x16, #672]
    a738:	add	x16, x16, #0x2a0
    a73c:	br	x17

000000000000a740 <hash_initialize@plt>:
    a740:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a744:	ldr	x17, [x16, #680]
    a748:	add	x16, x16, #0x2a8
    a74c:	br	x17

000000000000a750 <try_tempname@plt>:
    a750:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a754:	ldr	x17, [x16, #688]
    a758:	add	x16, x16, #0x2b0
    a75c:	br	x17

000000000000a760 <closedir@plt>:
    a760:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a764:	ldr	x17, [x16, #696]
    a768:	add	x16, x16, #0x2b8
    a76c:	br	x17

000000000000a770 <strerror@plt>:
    a770:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a774:	ldr	x17, [x16, #704]
    a778:	add	x16, x16, #0x2c0
    a77c:	br	x17

000000000000a780 <pthread_mutex_init@plt>:
    a780:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a784:	ldr	x17, [x16, #712]
    a788:	add	x16, x16, #0x2c8
    a78c:	br	x17

000000000000a790 <close@plt>:
    a790:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a794:	ldr	x17, [x16, #720]
    a798:	add	x16, x16, #0x2d0
    a79c:	br	x17

000000000000a7a0 <sigaction@plt>:
    a7a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a7a4:	ldr	x17, [x16, #728]
    a7a8:	add	x16, x16, #0x2d8
    a7ac:	br	x17

000000000000a7b0 <hash_lookup@plt>:
    a7b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a7b4:	ldr	x17, [x16, #736]
    a7b8:	add	x16, x16, #0x2e0
    a7bc:	br	x17

000000000000a7c0 <strrchr@plt>:
    a7c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a7c4:	ldr	x17, [x16, #744]
    a7c8:	add	x16, x16, #0x2e8
    a7cc:	br	x17

000000000000a7d0 <xalloc_die@plt>:
    a7d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a7d4:	ldr	x17, [x16, #752]
    a7d8:	add	x16, x16, #0x2f0
    a7dc:	br	x17

000000000000a7e0 <memmem@plt>:
    a7e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a7e4:	ldr	x17, [x16, #760]
    a7e8:	add	x16, x16, #0x2f8
    a7ec:	br	x17

000000000000a7f0 <__gmon_start__@plt>:
    a7f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a7f4:	ldr	x17, [x16, #768]
    a7f8:	add	x16, x16, #0x300
    a7fc:	br	x17

000000000000a800 <drop_effective_privs@plt>:
    a800:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a804:	ldr	x17, [x16, #776]
    a808:	add	x16, x16, #0x308
    a80c:	br	x17

000000000000a810 <btowc@plt>:
    a810:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a814:	ldr	x17, [x16, #784]
    a818:	add	x16, x16, #0x310
    a81c:	br	x17

000000000000a820 <mkdtemp@plt>:
    a820:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a824:	ldr	x17, [x16, #792]
    a828:	add	x16, x16, #0x318
    a82c:	br	x17

000000000000a830 <argp_fmtstream_printf@plt>:
    a830:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a834:	ldr	x17, [x16, #800]
    a838:	add	x16, x16, #0x320
    a83c:	br	x17

000000000000a840 <abort@plt>:
    a840:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a844:	ldr	x17, [x16, #808]
    a848:	add	x16, x16, #0x328
    a84c:	br	x17

000000000000a850 <_getopt_long_only_r@plt>:
    a850:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a854:	ldr	x17, [x16, #816]
    a858:	add	x16, x16, #0x330
    a85c:	br	x17

000000000000a860 <hash_rehash@plt>:
    a860:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a864:	ldr	x17, [x16, #824]
    a868:	add	x16, x16, #0x338
    a86c:	br	x17

000000000000a870 <mbsinit@plt>:
    a870:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a874:	ldr	x17, [x16, #832]
    a878:	add	x16, x16, #0x340
    a87c:	br	x17

000000000000a880 <__overflow@plt>:
    a880:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a884:	ldr	x17, [x16, #840]
    a888:	add	x16, x16, #0x348
    a88c:	br	x17

000000000000a890 <access@plt>:
    a890:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a894:	ldr	x17, [x16, #848]
    a898:	add	x16, x16, #0x350
    a89c:	br	x17

000000000000a8a0 <fdutimens@plt>:
    a8a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a8a4:	ldr	x17, [x16, #856]
    a8a8:	add	x16, x16, #0x358
    a8ac:	br	x17

000000000000a8b0 <hash_pjw_bare@plt>:
    a8b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a8b4:	ldr	x17, [x16, #864]
    a8b8:	add	x16, x16, #0x360
    a8bc:	br	x17

000000000000a8c0 <textdomain@plt>:
    a8c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a8c4:	ldr	x17, [x16, #872]
    a8c8:	add	x16, x16, #0x368
    a8cc:	br	x17

000000000000a8d0 <strsep@plt>:
    a8d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a8d4:	ldr	x17, [x16, #880]
    a8d8:	add	x16, x16, #0x370
    a8dc:	br	x17

000000000000a8e0 <strcmp@plt>:
    a8e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a8e4:	ldr	x17, [x16, #888]
    a8e8:	add	x16, x16, #0x378
    a8ec:	br	x17

000000000000a8f0 <_getopt_long_r@plt>:
    a8f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a8f4:	ldr	x17, [x16, #896]
    a8f8:	add	x16, x16, #0x380
    a8fc:	br	x17

000000000000a900 <__ctype_b_loc@plt>:
    a900:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a904:	ldr	x17, [x16, #904]
    a908:	add	x16, x16, #0x388
    a90c:	br	x17

000000000000a910 <rmdir@plt>:
    a910:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a914:	ldr	x17, [x16, #912]
    a918:	add	x16, x16, #0x390
    a91c:	br	x17

000000000000a920 <seen_file@plt>:
    a920:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a924:	ldr	x17, [x16, #920]
    a928:	add	x16, x16, #0x398
    a92c:	br	x17

000000000000a930 <strtol@plt>:
    a930:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a934:	ldr	x17, [x16, #928]
    a938:	add	x16, x16, #0x3a0
    a93c:	br	x17

000000000000a940 <chdir@plt>:
    a940:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a944:	ldr	x17, [x16, #936]
    a948:	add	x16, x16, #0x3a8
    a94c:	br	x17

000000000000a950 <dup_safer@plt>:
    a950:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a954:	ldr	x17, [x16, #944]
    a958:	add	x16, x16, #0x3b0
    a95c:	br	x17

000000000000a960 <free@plt>:
    a960:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a964:	ldr	x17, [x16, #952]
    a968:	add	x16, x16, #0x3b8
    a96c:	br	x17

000000000000a970 <renameat2@plt>:
    a970:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a974:	ldr	x17, [x16, #960]
    a978:	add	x16, x16, #0x3c0
    a97c:	br	x17

000000000000a980 <argp_make_fmtstream@plt>:
    a980:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a984:	ldr	x17, [x16, #968]
    a988:	add	x16, x16, #0x3c8
    a98c:	br	x17

000000000000a990 <__ctype_get_mb_cur_max@plt>:
    a990:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a994:	ldr	x17, [x16, #976]
    a998:	add	x16, x16, #0x3d0
    a99c:	br	x17

000000000000a9a0 <getgid@plt>:
    a9a0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a9a4:	ldr	x17, [x16, #984]
    a9a8:	add	x16, x16, #0x3d8
    a9ac:	br	x17

000000000000a9b0 <renameat@plt>:
    a9b0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a9b4:	ldr	x17, [x16, #992]
    a9b8:	add	x16, x16, #0x3e0
    a9bc:	br	x17

000000000000a9c0 <xasprintf@plt>:
    a9c0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a9c4:	ldr	x17, [x16, #1000]
    a9c8:	add	x16, x16, #0x3e8
    a9cc:	br	x17

000000000000a9d0 <vasnprintf@plt>:
    a9d0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a9d4:	ldr	x17, [x16, #1008]
    a9d8:	add	x16, x16, #0x3f0
    a9dc:	br	x17

000000000000a9e0 <printf_fetchargs@plt>:
    a9e0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a9e4:	ldr	x17, [x16, #1016]
    a9e8:	add	x16, x16, #0x3f8
    a9ec:	br	x17

000000000000a9f0 <nanosleep@plt>:
    a9f0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    a9f4:	ldr	x17, [x16, #1024]
    a9f8:	add	x16, x16, #0x400
    a9fc:	br	x17

000000000000aa00 <vasprintf@plt>:
    aa00:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa04:	ldr	x17, [x16, #1032]
    aa08:	add	x16, x16, #0x408
    aa0c:	br	x17

000000000000aa10 <rpl_getopt_internal@plt>:
    aa10:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa14:	ldr	x17, [x16, #1040]
    aa18:	add	x16, x16, #0x410
    aa1c:	br	x17

000000000000aa20 <strndup@plt>:
    aa20:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa24:	ldr	x17, [x16, #1048]
    aa28:	add	x16, x16, #0x418
    aa2c:	br	x17

000000000000aa30 <strspn@plt>:
    aa30:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa34:	ldr	x17, [x16, #1056]
    aa38:	add	x16, x16, #0x420
    aa3c:	br	x17

000000000000aa40 <rpl_ioctl@plt>:
    aa40:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa44:	ldr	x17, [x16, #1064]
    aa48:	add	x16, x16, #0x428
    aa4c:	br	x17

000000000000aa50 <strchr@plt>:
    aa50:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa54:	ldr	x17, [x16, #1072]
    aa58:	add	x16, x16, #0x430
    aa5c:	br	x17

000000000000aa60 <areadlink_with_size@plt>:
    aa60:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa64:	ldr	x17, [x16, #1080]
    aa68:	add	x16, x16, #0x438
    aa6c:	br	x17

000000000000aa70 <argp_error@plt>:
    aa70:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa74:	ldr	x17, [x16, #1088]
    aa78:	add	x16, x16, #0x440
    aa7c:	br	x17

000000000000aa80 <memrchr@plt>:
    aa80:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa84:	ldr	x17, [x16, #1096]
    aa88:	add	x16, x16, #0x448
    aa8c:	br	x17

000000000000aa90 <utimensat@plt>:
    aa90:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aa94:	ldr	x17, [x16, #1104]
    aa98:	add	x16, x16, #0x450
    aa9c:	br	x17

000000000000aaa0 <pipeline_peekline@plt>:
    aaa0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aaa4:	ldr	x17, [x16, #1112]
    aaa8:	add	x16, x16, #0x458
    aaac:	br	x17

000000000000aab0 <fwrite@plt>:
    aab0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aab4:	ldr	x17, [x16, #1120]
    aab8:	add	x16, x16, #0x460
    aabc:	br	x17

000000000000aac0 <rpl_fcntl@plt>:
    aac0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aac4:	ldr	x17, [x16, #1128]
    aac8:	add	x16, x16, #0x468
    aacc:	br	x17

000000000000aad0 <fnmatch@plt>:
    aad0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aad4:	ldr	x17, [x16, #1136]
    aad8:	add	x16, x16, #0x470
    aadc:	br	x17

000000000000aae0 <fcntl@plt>:
    aae0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aae4:	ldr	x17, [x16, #1144]
    aae8:	add	x16, x16, #0x478
    aaec:	br	x17

000000000000aaf0 <idpriv_drop@plt>:
    aaf0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aaf4:	ldr	x17, [x16, #1152]
    aaf8:	add	x16, x16, #0x480
    aafc:	br	x17

000000000000ab00 <rpl_regerror@plt>:
    ab00:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab04:	ldr	x17, [x16, #1160]
    ab08:	add	x16, x16, #0x488
    ab0c:	br	x17

000000000000ab10 <pthread_mutex_destroy@plt>:
    ab10:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab14:	ldr	x17, [x16, #1168]
    ab18:	add	x16, x16, #0x490
    ab1c:	br	x17

000000000000ab20 <strcpy@plt>:
    ab20:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab24:	ldr	x17, [x16, #1176]
    ab28:	add	x16, x16, #0x498
    ab2c:	br	x17

000000000000ab30 <hash_pjw@plt>:
    ab30:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab34:	ldr	x17, [x16, #1184]
    ab38:	add	x16, x16, #0x4a0
    ab3c:	br	x17

000000000000ab40 <_argp_input@plt>:
    ab40:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab44:	ldr	x17, [x16, #1192]
    ab48:	add	x16, x16, #0x4a8
    ab4c:	br	x17

000000000000ab50 <__lxstat@plt>:
    ab50:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab54:	ldr	x17, [x16, #1200]
    ab58:	add	x16, x16, #0x4b0
    ab5c:	br	x17

000000000000ab60 <dup_safer_flag@plt>:
    ab60:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab64:	ldr	x17, [x16, #1208]
    ab68:	add	x16, x16, #0x4b8
    ab6c:	br	x17

000000000000ab70 <memchr@plt>:
    ab70:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab74:	ldr	x17, [x16, #1216]
    ab78:	add	x16, x16, #0x4c0
    ab7c:	br	x17

000000000000ab80 <idpriv_temp_restore@plt>:
    ab80:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab84:	ldr	x17, [x16, #1224]
    ab88:	add	x16, x16, #0x4c8
    ab8c:	br	x17

000000000000ab90 <new_string_list@plt>:
    ab90:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ab94:	ldr	x17, [x16, #1232]
    ab98:	add	x16, x16, #0x4d0
    ab9c:	br	x17

000000000000aba0 <getresgid@plt>:
    aba0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aba4:	ldr	x17, [x16, #1240]
    aba8:	add	x16, x16, #0x4d8
    abac:	br	x17

000000000000abb0 <isatty@plt>:
    abb0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    abb4:	ldr	x17, [x16, #1248]
    abb8:	add	x16, x16, #0x4e0
    abbc:	br	x17

000000000000abc0 <xzalloc@plt>:
    abc0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    abc4:	ldr	x17, [x16, #1256]
    abc8:	add	x16, x16, #0x4e8
    abcc:	br	x17

000000000000abd0 <xstrndup@plt>:
    abd0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    abd4:	ldr	x17, [x16, #1264]
    abd8:	add	x16, x16, #0x4f0
    abdc:	br	x17

000000000000abe0 <pthread_mutexattr_init@plt>:
    abe0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    abe4:	ldr	x17, [x16, #1272]
    abe8:	add	x16, x16, #0x4f8
    abec:	br	x17

000000000000abf0 <setresuid@plt>:
    abf0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    abf4:	ldr	x17, [x16, #1280]
    abf8:	add	x16, x16, #0x500
    abfc:	br	x17

000000000000ac00 <utimes@plt>:
    ac00:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac04:	ldr	x17, [x16, #1288]
    ac08:	add	x16, x16, #0x508
    ac0c:	br	x17

000000000000ac10 <iswalnum@plt>:
    ac10:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac14:	ldr	x17, [x16, #1296]
    ac18:	add	x16, x16, #0x510
    ac1c:	br	x17

000000000000ac20 <__fxstat@plt>:
    ac20:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac24:	ldr	x17, [x16, #1304]
    ac28:	add	x16, x16, #0x518
    ac2c:	br	x17

000000000000ac30 <pthread_mutexattr_destroy@plt>:
    ac30:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac34:	ldr	x17, [x16, #1312]
    ac38:	add	x16, x16, #0x520
    ac3c:	br	x17

000000000000ac40 <strchrnul@plt>:
    ac40:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac44:	ldr	x17, [x16, #1320]
    ac48:	add	x16, x16, #0x528
    ac4c:	br	x17

000000000000ac50 <strstr@plt>:
    ac50:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac54:	ldr	x17, [x16, #1328]
    ac58:	add	x16, x16, #0x530
    ac5c:	br	x17

000000000000ac60 <_argp_fmtstream_ensure@plt>:
    ac60:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac64:	ldr	x17, [x16, #1336]
    ac68:	add	x16, x16, #0x538
    ac6c:	br	x17

000000000000ac70 <argp_state_help@plt>:
    ac70:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac74:	ldr	x17, [x16, #1344]
    ac78:	add	x16, x16, #0x540
    ac7c:	br	x17

000000000000ac80 <dcgettext@plt>:
    ac80:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac84:	ldr	x17, [x16, #1352]
    ac88:	add	x16, x16, #0x548
    ac8c:	br	x17

000000000000ac90 <pthread_rwlockattr_destroy@plt>:
    ac90:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ac94:	ldr	x17, [x16, #1360]
    ac98:	add	x16, x16, #0x550
    ac9c:	br	x17

000000000000aca0 <vsnprintf@plt>:
    aca0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aca4:	ldr	x17, [x16, #1368]
    aca8:	add	x16, x16, #0x558
    acac:	br	x17

000000000000acb0 <argp_fmtstream_free@plt>:
    acb0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    acb4:	ldr	x17, [x16, #1376]
    acb8:	add	x16, x16, #0x560
    acbc:	br	x17

000000000000acc0 <get_locale_charset@plt>:
    acc0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    acc4:	ldr	x17, [x16, #1384]
    acc8:	add	x16, x16, #0x568
    accc:	br	x17

000000000000acd0 <xvasprintf@plt>:
    acd0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    acd4:	ldr	x17, [x16, #1392]
    acd8:	add	x16, x16, #0x570
    acdc:	br	x17

000000000000ace0 <fputs_unlocked@plt>:
    ace0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ace4:	ldr	x17, [x16, #1400]
    ace8:	add	x16, x16, #0x578
    acec:	br	x17

000000000000acf0 <sigaddset@plt>:
    acf0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    acf4:	ldr	x17, [x16, #1408]
    acf8:	add	x16, x16, #0x580
    acfc:	br	x17

000000000000ad00 <pathsearch_executable@plt>:
    ad00:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad04:	ldr	x17, [x16, #1416]
    ad08:	add	x16, x16, #0x588
    ad0c:	br	x17

000000000000ad10 <towupper@plt>:
    ad10:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad14:	ldr	x17, [x16, #1424]
    ad18:	add	x16, x16, #0x590
    ad1c:	br	x17

000000000000ad20 <fd_safer_flag@plt>:
    ad20:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad24:	ldr	x17, [x16, #1432]
    ad28:	add	x16, x16, #0x598
    ad2c:	br	x17

000000000000ad30 <strcspn@plt>:
    ad30:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad34:	ldr	x17, [x16, #1440]
    ad38:	add	x16, x16, #0x5a0
    ad3c:	br	x17

000000000000ad40 <_getopt_internal_r@plt>:
    ad40:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad44:	ldr	x17, [x16, #1448]
    ad48:	add	x16, x16, #0x5a8
    ad4c:	br	x17

000000000000ad50 <vfprintf@plt>:
    ad50:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad54:	ldr	x17, [x16, #1456]
    ad58:	add	x16, x16, #0x5b0
    ad5c:	br	x17

000000000000ad60 <openat@plt>:
    ad60:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad64:	ldr	x17, [x16, #1464]
    ad68:	add	x16, x16, #0x5b8
    ad6c:	br	x17

000000000000ad70 <__assert_fail@plt>:
    ad70:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad74:	ldr	x17, [x16, #1472]
    ad78:	add	x16, x16, #0x5c0
    ad7c:	br	x17

000000000000ad80 <__errno_location@plt>:
    ad80:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad84:	ldr	x17, [x16, #1480]
    ad88:	add	x16, x16, #0x5c8
    ad8c:	br	x17

000000000000ad90 <setresgid@plt>:
    ad90:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ad94:	ldr	x17, [x16, #1488]
    ad98:	add	x16, x16, #0x5d0
    ad9c:	br	x17

000000000000ada0 <getenv@plt>:
    ada0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ada4:	ldr	x17, [x16, #1496]
    ada8:	add	x16, x16, #0x5d8
    adac:	br	x17

000000000000adb0 <locale_charset@plt>:
    adb0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    adb4:	ldr	x17, [x16, #1504]
    adb8:	add	x16, x16, #0x5e0
    adbc:	br	x17

000000000000adc0 <__xstat@plt>:
    adc0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    adc4:	ldr	x17, [x16, #1512]
    adc8:	add	x16, x16, #0x5e8
    adcc:	br	x17

000000000000add0 <pthread_mutex_lock@plt>:
    add0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    add4:	ldr	x17, [x16, #1520]
    add8:	add	x16, x16, #0x5f0
    addc:	br	x17

000000000000ade0 <__getdelim@plt>:
    ade0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ade4:	ldr	x17, [x16, #1528]
    ade8:	add	x16, x16, #0x5f8
    adec:	br	x17

000000000000adf0 <printf_parse@plt>:
    adf0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    adf4:	ldr	x17, [x16, #1536]
    adf8:	add	x16, x16, #0x600
    adfc:	br	x17

000000000000ae00 <fd_safer@plt>:
    ae00:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae04:	ldr	x17, [x16, #1544]
    ae08:	add	x16, x16, #0x608
    ae0c:	br	x17

000000000000ae10 <pthread_mutex_unlock@plt>:
    ae10:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae14:	ldr	x17, [x16, #1552]
    ae18:	add	x16, x16, #0x610
    ae1c:	br	x17

000000000000ae20 <unlink@plt>:
    ae20:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae24:	ldr	x17, [x16, #1560]
    ae28:	add	x16, x16, #0x618
    ae2c:	br	x17

000000000000ae30 <mkdir@plt>:
    ae30:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae34:	ldr	x17, [x16, #1568]
    ae38:	add	x16, x16, #0x620
    ae3c:	br	x17

000000000000ae40 <towlower@plt>:
    ae40:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae44:	ldr	x17, [x16, #1576]
    ae48:	add	x16, x16, #0x628
    ae4c:	br	x17

000000000000ae50 <gettime@plt>:
    ae50:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae54:	ldr	x17, [x16, #1584]
    ae58:	add	x16, x16, #0x630
    ae5c:	br	x17

000000000000ae60 <rpl_re_compile_fastmap@plt>:
    ae60:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae64:	ldr	x17, [x16, #1592]
    ae68:	add	x16, x16, #0x638
    ae6c:	br	x17

000000000000ae70 <fprintf@plt>:
    ae70:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae74:	ldr	x17, [x16, #1600]
    ae78:	add	x16, x16, #0x640
    ae7c:	br	x17

000000000000ae80 <ioctl@plt>:
    ae80:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae84:	ldr	x17, [x16, #1608]
    ae88:	add	x16, x16, #0x648
    ae8c:	br	x17

000000000000ae90 <setlocale@plt>:
    ae90:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    ae94:	ldr	x17, [x16, #1616]
    ae98:	add	x16, x16, #0x650
    ae9c:	br	x17

000000000000aea0 <__fxstatat@plt>:
    aea0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aea4:	ldr	x17, [x16, #1624]
    aea8:	add	x16, x16, #0x658
    aeac:	br	x17

000000000000aeb0 <wcrtomb@plt>:
    aeb0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aeb4:	ldr	x17, [x16, #1632]
    aeb8:	add	x16, x16, #0x660
    aebc:	br	x17

000000000000aec0 <xgetcwd@plt>:
    aec0:	adrp	x16, 43000 <base_len@@Base+0x2ea54>
    aec4:	ldr	x17, [x16, #1640]
    aec8:	add	x16, x16, #0x668
    aecc:	br	x17

Disassembly of section .text:

000000000000aed0 <appendstr@@Base-0xd4>:
    aed0:	adrp	x0, 42000 <vasnprintf@@Base+0x1424c>
    aed4:	ldr	x0, [x0, #3904]
    aed8:	cbz	x0, aee0 <xgetcwd@plt+0x20>
    aedc:	b	a7f0 <__gmon_start__@plt>
    aee0:	ret
    aee4:	nop
    aee8:	adrp	x0, 43000 <base_len@@Base+0x2ea54>
    aeec:	add	x0, x0, #0x6c0
    aef0:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    aef4:	add	x1, x1, #0x6c0
    aef8:	cmp	x1, x0
    aefc:	b.eq	af14 <xgetcwd@plt+0x54>  // b.none
    af00:	adrp	x1, 42000 <vasnprintf@@Base+0x1424c>
    af04:	ldr	x1, [x1, #3776]
    af08:	cbz	x1, af14 <xgetcwd@plt+0x54>
    af0c:	mov	x16, x1
    af10:	br	x16
    af14:	ret
    af18:	adrp	x0, 43000 <base_len@@Base+0x2ea54>
    af1c:	add	x0, x0, #0x6c0
    af20:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    af24:	add	x1, x1, #0x6c0
    af28:	sub	x1, x1, x0
    af2c:	lsr	x2, x1, #63
    af30:	add	x1, x2, x1, asr #3
    af34:	cmp	xzr, x1, asr #1
    af38:	asr	x1, x1, #1
    af3c:	b.eq	af54 <xgetcwd@plt+0x94>  // b.none
    af40:	adrp	x2, 42000 <vasnprintf@@Base+0x1424c>
    af44:	ldr	x2, [x2, #4024]
    af48:	cbz	x2, af54 <xgetcwd@plt+0x94>
    af4c:	mov	x16, x2
    af50:	br	x16
    af54:	ret
    af58:	stp	x29, x30, [sp, #-32]!
    af5c:	mov	x29, sp
    af60:	str	x19, [sp, #16]
    af64:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
    af68:	ldrb	w0, [x19, #1728]
    af6c:	cbnz	w0, af94 <xgetcwd@plt+0xd4>
    af70:	adrp	x0, 42000 <vasnprintf@@Base+0x1424c>
    af74:	ldr	x0, [x0, #3800]
    af78:	cbz	x0, af88 <xgetcwd@plt+0xc8>
    af7c:	adrp	x0, 43000 <base_len@@Base+0x2ea54>
    af80:	ldr	x0, [x0, #1648]
    af84:	bl	a3d0 <__cxa_finalize@plt>
    af88:	bl	aee8 <xgetcwd@plt+0x28>
    af8c:	mov	w0, #0x1                   	// #1
    af90:	strb	w0, [x19, #1728]
    af94:	ldr	x19, [sp, #16]
    af98:	ldp	x29, x30, [sp], #32
    af9c:	ret
    afa0:	b	af18 <xgetcwd@plt+0x58>

000000000000afa4 <appendstr@@Base>:
    afa4:	sub	sp, sp, #0x120
    afa8:	stp	x29, x30, [sp, #224]
    afac:	stp	x20, x19, [sp, #272]
    afb0:	add	x29, sp, #0xe0
    afb4:	mov	x19, x0
    afb8:	stp	x28, x23, [sp, #240]
    afbc:	stp	x22, x21, [sp, #256]
    afc0:	stp	x1, x2, [x29, #-88]
    afc4:	stp	x3, x4, [x29, #-72]
    afc8:	stp	x5, x6, [x29, #-56]
    afcc:	stur	x7, [x29, #-40]
    afd0:	stp	q0, q1, [sp]
    afd4:	stp	q2, q3, [sp, #32]
    afd8:	stp	q4, q5, [sp, #64]
    afdc:	stp	q6, q7, [sp, #96]
    afe0:	cbz	x0, aff4 <appendstr@@Base+0x50>
    afe4:	mov	x0, x19
    afe8:	bl	a280 <strlen@plt>
    afec:	mov	x20, x0
    aff0:	b	aff8 <appendstr@@Base+0x54>
    aff4:	mov	x20, xzr
    aff8:	mov	x8, #0xffffffffffffffc8    	// #-56
    affc:	mov	x10, sp
    b000:	movk	x8, #0xff80, lsl #32
    b004:	sub	x11, x29, #0x58
    b008:	add	x10, x10, #0x80
    b00c:	add	x9, x29, #0x40
    b010:	add	x21, x20, #0x1
    b014:	add	x22, x11, #0x38
    b018:	stp	x10, x8, [x29, #-16]
    b01c:	mov	w8, #0xffffffc8            	// #-56
    b020:	stp	x9, x22, [x29, #-32]
    b024:	tbnz	w8, #31, b030 <appendstr@@Base+0x8c>
    b028:	mov	w23, w8
    b02c:	b	b050 <appendstr@@Base+0xac>
    b030:	add	w23, w8, #0x8
    b034:	cmn	w8, #0x8
    b038:	stur	w23, [x29, #-8]
    b03c:	b.gt	b050 <appendstr@@Base+0xac>
    b040:	add	x8, x22, w8, sxtw
    b044:	ldr	x0, [x8]
    b048:	cbnz	x0, b064 <appendstr@@Base+0xc0>
    b04c:	b	b078 <appendstr@@Base+0xd4>
    b050:	ldur	x8, [x29, #-32]
    b054:	add	x9, x8, #0x8
    b058:	stur	x9, [x29, #-32]
    b05c:	ldr	x0, [x8]
    b060:	cbz	x0, b078 <appendstr@@Base+0xd4>
    b064:	bl	a280 <strlen@plt>
    b068:	add	x21, x0, x21
    b06c:	mov	w8, w23
    b070:	tbz	w8, #31, b028 <appendstr@@Base+0x84>
    b074:	b	b030 <appendstr@@Base+0x8c>
    b078:	mov	x0, x19
    b07c:	mov	x1, x21
    b080:	bl	a5b0 <xrealloc@plt>
    b084:	sub	x9, x29, #0x58
    b088:	mov	x10, sp
    b08c:	mov	x11, #0xffffffffffffffc8    	// #-56
    b090:	mov	x19, x0
    b094:	add	x20, x0, x20
    b098:	add	x8, x29, #0x40
    b09c:	movk	x11, #0xff80, lsl #32
    b0a0:	add	x9, x9, #0x38
    b0a4:	add	x10, x10, #0x80
    b0a8:	stp	x8, x9, [x29, #-32]
    b0ac:	stp	x10, x11, [x29, #-16]
    b0b0:	ldursw	x8, [x29, #-8]
    b0b4:	tbz	w8, #31, b0dc <appendstr@@Base+0x138>
    b0b8:	add	w9, w8, #0x8
    b0bc:	cmn	w8, #0x8
    b0c0:	stur	w9, [x29, #-8]
    b0c4:	b.gt	b0dc <appendstr@@Base+0x138>
    b0c8:	ldur	x9, [x29, #-24]
    b0cc:	add	x8, x9, x8
    b0d0:	ldr	x21, [x8]
    b0d4:	cbnz	x21, b0f0 <appendstr@@Base+0x14c>
    b0d8:	b	b114 <appendstr@@Base+0x170>
    b0dc:	ldur	x8, [x29, #-32]
    b0e0:	add	x9, x8, #0x8
    b0e4:	stur	x9, [x29, #-32]
    b0e8:	ldr	x21, [x8]
    b0ec:	cbz	x21, b114 <appendstr@@Base+0x170>
    b0f0:	mov	x0, x20
    b0f4:	mov	x1, x21
    b0f8:	bl	ab20 <strcpy@plt>
    b0fc:	mov	x0, x21
    b100:	bl	a280 <strlen@plt>
    b104:	add	x20, x20, x0
    b108:	ldursw	x8, [x29, #-8]
    b10c:	tbz	w8, #31, b0dc <appendstr@@Base+0x138>
    b110:	b	b0b8 <appendstr@@Base+0x114>
    b114:	mov	x0, x19
    b118:	ldp	x20, x19, [sp, #272]
    b11c:	ldp	x22, x21, [sp, #256]
    b120:	ldp	x28, x23, [sp, #240]
    b124:	ldp	x29, x30, [sp, #224]
    b128:	add	sp, sp, #0x120
    b12c:	ret

000000000000b130 <do_cleanups_sigsafe@@Base>:
    b130:	stp	x29, x30, [sp, #-48]!
    b134:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    b138:	adrp	x9, 43000 <base_len@@Base+0x2ea54>
    b13c:	stp	x20, x19, [sp, #32]
    b140:	ldr	w20, [x8, #1736]
    b144:	ldr	w8, [x9, #1740]
    b148:	stp	x22, x21, [sp, #16]
    b14c:	mov	x29, sp
    b150:	cmp	w20, w8
    b154:	b.hi	b1b4 <do_cleanups_sigsafe@@Base+0x84>  // b.pmore
    b158:	cbz	w20, b1a4 <do_cleanups_sigsafe@@Base+0x74>
    b15c:	sub	w8, w20, #0x1
    b160:	mov	w9, #0x18                  	// #24
    b164:	mov	w19, w0
    b168:	umull	x21, w8, w9
    b16c:	adrp	x22, 43000 <base_len@@Base+0x2ea54>
    b170:	b	b18c <do_cleanups_sigsafe@@Base+0x5c>
    b174:	add	x8, x8, x21
    b178:	ldp	x9, x0, [x8]
    b17c:	blr	x9
    b180:	sub	w20, w20, #0x1
    b184:	sub	x21, x21, #0x18
    b188:	cbz	w20, b1a4 <do_cleanups_sigsafe@@Base+0x74>
    b18c:	ldr	x8, [x22, #1744]
    b190:	cbz	w19, b174 <do_cleanups_sigsafe@@Base+0x44>
    b194:	add	x9, x8, x21
    b198:	ldr	w9, [x9, #16]
    b19c:	cbnz	w9, b174 <do_cleanups_sigsafe@@Base+0x44>
    b1a0:	b	b180 <do_cleanups_sigsafe@@Base+0x50>
    b1a4:	ldp	x20, x19, [sp, #32]
    b1a8:	ldp	x22, x21, [sp, #16]
    b1ac:	ldp	x29, x30, [sp], #48
    b1b0:	ret
    b1b4:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    b1b8:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    b1bc:	adrp	x3, 2e000 <vasnprintf@@Base+0x24c>
    b1c0:	add	x0, x0, #0xa30
    b1c4:	add	x1, x1, #0xa3e
    b1c8:	add	x3, x3, #0xa48
    b1cc:	mov	w2, #0xa9                  	// #169
    b1d0:	bl	ad70 <__assert_fail@plt>

000000000000b1d4 <do_cleanups@@Base>:
    b1d4:	stp	x29, x30, [sp, #-64]!
    b1d8:	stp	x20, x19, [sp, #48]
    b1dc:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
    b1e0:	adrp	x20, 43000 <base_len@@Base+0x2ea54>
    b1e4:	stp	x22, x21, [sp, #32]
    b1e8:	ldr	w22, [x19, #1736]
    b1ec:	ldr	w8, [x20, #1740]
    b1f0:	str	x23, [sp, #16]
    b1f4:	mov	x29, sp
    b1f8:	cmp	w22, w8
    b1fc:	b.hi	b258 <do_cleanups@@Base+0x84>  // b.pmore
    b200:	adrp	x21, 43000 <base_len@@Base+0x2ea54>
    b204:	cbz	w22, b230 <do_cleanups@@Base+0x5c>
    b208:	sub	w8, w22, #0x1
    b20c:	mov	w9, #0x18                  	// #24
    b210:	umull	x23, w8, w9
    b214:	ldr	x8, [x21, #1744]
    b218:	add	x8, x8, x23
    b21c:	ldp	x9, x0, [x8]
    b220:	blr	x9
    b224:	sub	w22, w22, #0x1
    b228:	sub	x23, x23, #0x18
    b22c:	cbnz	w22, b214 <do_cleanups@@Base+0x40>
    b230:	ldr	x0, [x21, #1744]
    b234:	str	wzr, [x19, #1736]
    b238:	str	wzr, [x20, #1740]
    b23c:	bl	a960 <free@plt>
    b240:	str	xzr, [x21, #1744]
    b244:	ldp	x20, x19, [sp, #48]
    b248:	ldp	x22, x21, [sp, #32]
    b24c:	ldr	x23, [sp, #16]
    b250:	ldp	x29, x30, [sp], #64
    b254:	ret
    b258:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    b25c:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    b260:	adrp	x3, 2e000 <vasnprintf@@Base+0x24c>
    b264:	add	x0, x0, #0xa30
    b268:	add	x1, x1, #0xa3e
    b26c:	add	x3, x3, #0xa48
    b270:	mov	w2, #0xa9                  	// #169
    b274:	bl	ad70 <__assert_fail@plt>

000000000000b278 <push_cleanup@@Base>:
    b278:	sub	sp, sp, #0xe0
    b27c:	stp	x24, x23, [sp, #176]
    b280:	stp	x22, x21, [sp, #192]
    b284:	adrp	x22, 43000 <base_len@@Base+0x2ea54>
    b288:	adrp	x23, 43000 <base_len@@Base+0x2ea54>
    b28c:	ldr	w8, [x22, #1736]
    b290:	ldr	w9, [x23, #1740]
    b294:	stp	x29, x30, [sp, #160]
    b298:	stp	x20, x19, [sp, #208]
    b29c:	add	x29, sp, #0xa0
    b2a0:	cmp	w8, w9
    b2a4:	b.hi	b4ec <push_cleanup@@Base+0x274>  // b.pmore
    b2a8:	adrp	x24, 43000 <base_len@@Base+0x2ea54>
    b2ac:	ldrb	w10, [x24, #1752]
    b2b0:	mov	w19, w2
    b2b4:	mov	x20, x1
    b2b8:	mov	x21, x0
    b2bc:	tbnz	w10, #0, b2e0 <push_cleanup@@Base+0x68>
    b2c0:	adrp	x0, 42000 <vasnprintf@@Base+0x1424c>
    b2c4:	ldr	x0, [x0, #3840]
    b2c8:	bl	2ea08 <vasnprintf@@Base+0xc54>
    b2cc:	cbnz	w0, b39c <push_cleanup@@Base+0x124>
    b2d0:	ldr	w8, [x22, #1736]
    b2d4:	ldr	w9, [x23, #1740]
    b2d8:	mov	w10, #0x1                   	// #1
    b2dc:	strb	w10, [x24, #1752]
    b2e0:	cmp	w8, w9
    b2e4:	adrp	x24, 43000 <base_len@@Base+0x2ea54>
    b2e8:	b.ne	b31c <push_cleanup@@Base+0xa4>  // b.any
    b2ec:	ldr	x0, [x24, #1744]
    b2f0:	cbz	x0, b388 <push_cleanup@@Base+0x110>
    b2f4:	add	w8, w9, #0x1
    b2f8:	mov	w9, #0x18                  	// #24
    b2fc:	umull	x1, w8, w9
    b300:	bl	a5b0 <xrealloc@plt>
    b304:	cbz	x0, b39c <push_cleanup@@Base+0x124>
    b308:	ldr	w9, [x23, #1740]
    b30c:	ldr	w8, [x22, #1736]
    b310:	str	x0, [x24, #1744]
    b314:	add	w9, w9, #0x1
    b318:	str	w9, [x23, #1740]
    b31c:	cmp	w8, w9
    b320:	b.cs	b50c <push_cleanup@@Base+0x294>  // b.hs, b.nlast
    b324:	ldr	x9, [x24, #1744]
    b328:	mov	w10, #0x18                  	// #24
    b32c:	adrp	x2, 43000 <base_len@@Base+0x2ea54>
    b330:	add	w11, w8, #0x1
    b334:	umaddl	x8, w8, w10, x9
    b338:	add	x2, x2, #0x6e0
    b33c:	mov	w0, #0x1                   	// #1
    b340:	mov	x1, xzr
    b344:	stp	x21, x20, [x8]
    b348:	str	w19, [x8, #16]
    b34c:	str	w11, [x22, #1736]
    b350:	bl	a7a0 <sigaction@plt>
    b354:	cbnz	w0, b380 <push_cleanup@@Base+0x108>
    b358:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    b35c:	ldr	x8, [x8, #1760]
    b360:	add	x20, sp, #0x8
    b364:	cbz	x8, b3b8 <push_cleanup@@Base+0x140>
    b368:	adrp	x2, 43000 <base_len@@Base+0x2ea54>
    b36c:	add	x2, x2, #0x778
    b370:	mov	w0, #0x2                   	// #2
    b374:	mov	x1, xzr
    b378:	bl	a7a0 <sigaction@plt>
    b37c:	cbz	w0, b410 <push_cleanup@@Base+0x198>
    b380:	mov	w0, wzr
    b384:	b	b3a0 <push_cleanup@@Base+0x128>
    b388:	add	w8, w9, #0x1
    b38c:	mov	w9, #0x18                  	// #24
    b390:	umull	x0, w8, w9
    b394:	bl	a650 <xmalloc@plt>
    b398:	cbnz	x0, b308 <push_cleanup@@Base+0x90>
    b39c:	mov	w0, #0xffffffff            	// #-1
    b3a0:	ldp	x20, x19, [sp, #208]
    b3a4:	ldp	x22, x21, [sp, #192]
    b3a8:	ldp	x24, x23, [sp, #176]
    b3ac:	ldp	x29, x30, [sp, #160]
    b3b0:	add	sp, sp, #0xe0
    b3b4:	ret
    b3b8:	add	x8, sp, #0x8
    b3bc:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b3c0:	movi	v0.2d, #0x0
    b3c4:	add	x9, x9, #0x78c
    b3c8:	add	x0, x8, #0x8
    b3cc:	stur	q0, [x20, #136]
    b3d0:	stp	q0, q0, [sp, #112]
    b3d4:	stp	q0, q0, [sp, #80]
    b3d8:	stp	q0, q0, [sp, #48]
    b3dc:	stp	q0, q0, [sp, #16]
    b3e0:	str	x9, [sp, #8]
    b3e4:	bl	a5e0 <sigemptyset@plt>
    b3e8:	adrp	x2, 43000 <base_len@@Base+0x2ea54>
    b3ec:	add	x2, x2, #0x6e0
    b3f0:	add	x1, sp, #0x8
    b3f4:	mov	w0, #0x1                   	// #1
    b3f8:	str	wzr, [sp, #144]
    b3fc:	bl	a7a0 <sigaction@plt>
    b400:	mov	w8, w0
    b404:	mov	w0, wzr
    b408:	cbnz	w8, b3a0 <push_cleanup@@Base+0x128>
    b40c:	b	b368 <push_cleanup@@Base+0xf0>
    b410:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    b414:	ldr	x8, [x8, #1912]
    b418:	cbz	x8, b494 <push_cleanup@@Base+0x21c>
    b41c:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
    b420:	add	x19, x19, #0x810
    b424:	mov	w0, #0xf                   	// #15
    b428:	mov	x1, xzr
    b42c:	mov	x2, x19
    b430:	bl	a7a0 <sigaction@plt>
    b434:	mov	w8, w0
    b438:	mov	w0, wzr
    b43c:	cbnz	w8, b3a0 <push_cleanup@@Base+0x128>
    b440:	ldr	x8, [x19]
    b444:	cbnz	x8, b3a0 <push_cleanup@@Base+0x128>
    b448:	add	x8, sp, #0x8
    b44c:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b450:	movi	v0.2d, #0x0
    b454:	add	x9, x9, #0x78c
    b458:	add	x0, x8, #0x8
    b45c:	stur	q0, [x20, #136]
    b460:	stp	q0, q0, [sp, #112]
    b464:	stp	q0, q0, [sp, #80]
    b468:	stp	q0, q0, [sp, #48]
    b46c:	stp	q0, q0, [sp, #16]
    b470:	str	x9, [sp, #8]
    b474:	bl	a5e0 <sigemptyset@plt>
    b478:	adrp	x2, 43000 <base_len@@Base+0x2ea54>
    b47c:	add	x2, x2, #0x810
    b480:	add	x1, sp, #0x8
    b484:	mov	w0, #0xf                   	// #15
    b488:	str	wzr, [sp, #144]
    b48c:	bl	a7a0 <sigaction@plt>
    b490:	b	b380 <push_cleanup@@Base+0x108>
    b494:	add	x8, sp, #0x8
    b498:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b49c:	movi	v0.2d, #0x0
    b4a0:	add	x9, x9, #0x78c
    b4a4:	add	x0, x8, #0x8
    b4a8:	stur	q0, [x20, #136]
    b4ac:	stp	q0, q0, [sp, #112]
    b4b0:	stp	q0, q0, [sp, #80]
    b4b4:	stp	q0, q0, [sp, #48]
    b4b8:	stp	q0, q0, [sp, #16]
    b4bc:	str	x9, [sp, #8]
    b4c0:	bl	a5e0 <sigemptyset@plt>
    b4c4:	adrp	x2, 43000 <base_len@@Base+0x2ea54>
    b4c8:	add	x2, x2, #0x778
    b4cc:	add	x1, sp, #0x8
    b4d0:	mov	w0, #0x2                   	// #2
    b4d4:	str	wzr, [sp, #144]
    b4d8:	bl	a7a0 <sigaction@plt>
    b4dc:	mov	w8, w0
    b4e0:	mov	w0, wzr
    b4e4:	cbnz	w8, b3a0 <push_cleanup@@Base+0x128>
    b4e8:	b	b41c <push_cleanup@@Base+0x1a4>
    b4ec:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    b4f0:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    b4f4:	adrp	x3, 2e000 <vasnprintf@@Base+0x24c>
    b4f8:	add	x0, x0, #0xa30
    b4fc:	add	x1, x1, #0xa3e
    b500:	add	x3, x3, #0xa66
    b504:	mov	w2, #0xc8                  	// #200
    b508:	bl	ad70 <__assert_fail@plt>
    b50c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    b510:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    b514:	adrp	x3, 2e000 <vasnprintf@@Base+0x24c>
    b518:	add	x0, x0, #0xa91
    b51c:	add	x1, x1, #0xa3e
    b520:	add	x3, x3, #0xa66
    b524:	mov	w2, #0xe0                  	// #224
    b528:	bl	ad70 <__assert_fail@plt>

000000000000b52c <pop_cleanup@@Base>:
    b52c:	sub	sp, sp, #0xb0
    b530:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    b534:	ldr	w9, [x8, #1736]
    b538:	stp	x29, x30, [sp, #160]
    b53c:	add	x29, sp, #0xa0
    b540:	cbz	w9, b698 <pop_cleanup@@Base+0x16c>
    b544:	adrp	x11, 43000 <base_len@@Base+0x2ea54>
    b548:	ldr	x11, [x11, #1744]
    b54c:	mov	w13, #0x18                  	// #24
    b550:	mov	x10, xzr
    b554:	sub	x14, x9, #0x1
    b558:	madd	x12, x9, x13, x11
    b55c:	b	b570 <pop_cleanup@@Base+0x44>
    b560:	sub	x10, x10, #0x1
    b564:	cmn	w9, w10
    b568:	sub	x12, x12, #0x18
    b56c:	b.eq	b68c <pop_cleanup@@Base+0x160>  // b.none
    b570:	add	w15, w14, w10
    b574:	umull	x16, w15, w13
    b578:	ldr	x16, [x11, x16]
    b57c:	cmp	x16, x0
    b580:	b.ne	b560 <pop_cleanup@@Base+0x34>  // b.any
    b584:	madd	x15, x15, x13, x11
    b588:	ldr	x15, [x15, #8]
    b58c:	cmp	x15, x1
    b590:	b.ne	b560 <pop_cleanup@@Base+0x34>  // b.any
    b594:	add	w13, w9, w10
    b598:	cmp	w9, w13
    b59c:	b.ls	b5cc <pop_cleanup@@Base+0xa0>  // b.plast
    b5a0:	mov	w13, #0xffffffff            	// #-1
    b5a4:	add	x13, x9, x13
    b5a8:	mov	w14, #0x18                  	// #24
    b5ac:	ldr	x16, [x12, #16]
    b5b0:	ldr	q0, [x12], #24
    b5b4:	add	w15, w13, w10
    b5b8:	adds	x10, x10, #0x1
    b5bc:	umaddl	x15, w15, w14, x11
    b5c0:	str	x16, [x15, #16]
    b5c4:	str	q0, [x15]
    b5c8:	b.cc	b5ac <pop_cleanup@@Base+0x80>  // b.lo, b.ul, b.last
    b5cc:	subs	w9, w9, #0x1
    b5d0:	str	w9, [x8, #1736]
    b5d4:	b.ne	b68c <pop_cleanup@@Base+0x160>  // b.any
    b5d8:	add	x2, sp, #0x8
    b5dc:	mov	w0, #0x1                   	// #1
    b5e0:	mov	x1, xzr
    b5e4:	bl	a7a0 <sigaction@plt>
    b5e8:	cbnz	w0, b614 <pop_cleanup@@Base+0xe8>
    b5ec:	ldr	x8, [sp, #8]
    b5f0:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b5f4:	add	x9, x9, #0x78c
    b5f8:	cmp	x8, x9
    b5fc:	b.ne	b614 <pop_cleanup@@Base+0xe8>  // b.any
    b600:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    b604:	add	x1, x1, #0x6e0
    b608:	mov	w0, #0x1                   	// #1
    b60c:	mov	x2, xzr
    b610:	bl	a7a0 <sigaction@plt>
    b614:	add	x2, sp, #0x8
    b618:	mov	w0, #0x2                   	// #2
    b61c:	mov	x1, xzr
    b620:	bl	a7a0 <sigaction@plt>
    b624:	cbnz	w0, b650 <pop_cleanup@@Base+0x124>
    b628:	ldr	x8, [sp, #8]
    b62c:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b630:	add	x9, x9, #0x78c
    b634:	cmp	x8, x9
    b638:	b.ne	b650 <pop_cleanup@@Base+0x124>  // b.any
    b63c:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    b640:	add	x1, x1, #0x778
    b644:	mov	w0, #0x2                   	// #2
    b648:	mov	x2, xzr
    b64c:	bl	a7a0 <sigaction@plt>
    b650:	add	x2, sp, #0x8
    b654:	mov	w0, #0xf                   	// #15
    b658:	mov	x1, xzr
    b65c:	bl	a7a0 <sigaction@plt>
    b660:	cbnz	w0, b68c <pop_cleanup@@Base+0x160>
    b664:	ldr	x8, [sp, #8]
    b668:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b66c:	add	x9, x9, #0x78c
    b670:	cmp	x8, x9
    b674:	b.ne	b68c <pop_cleanup@@Base+0x160>  // b.any
    b678:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    b67c:	add	x1, x1, #0x810
    b680:	mov	w0, #0xf                   	// #15
    b684:	mov	x2, xzr
    b688:	bl	a7a0 <sigaction@plt>
    b68c:	ldp	x29, x30, [sp, #160]
    b690:	add	sp, sp, #0xb0
    b694:	ret
    b698:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    b69c:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    b6a0:	adrp	x3, 2e000 <vasnprintf@@Base+0x24c>
    b6a4:	add	x0, x0, #0xa9e
    b6a8:	add	x1, x1, #0xa3e
    b6ac:	add	x3, x3, #0xaa6
    b6b0:	mov	w2, #0xf5                  	// #245
    b6b4:	bl	ad70 <__assert_fail@plt>

000000000000b6b8 <pop_all_cleanups@@Base>:
    b6b8:	sub	sp, sp, #0xb0
    b6bc:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    b6c0:	add	x2, sp, #0x8
    b6c4:	mov	w0, #0x1                   	// #1
    b6c8:	mov	x1, xzr
    b6cc:	stp	x29, x30, [sp, #160]
    b6d0:	add	x29, sp, #0xa0
    b6d4:	str	wzr, [x8, #1736]
    b6d8:	bl	a7a0 <sigaction@plt>
    b6dc:	cbnz	w0, b708 <pop_all_cleanups@@Base+0x50>
    b6e0:	ldr	x8, [sp, #8]
    b6e4:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b6e8:	add	x9, x9, #0x78c
    b6ec:	cmp	x8, x9
    b6f0:	b.ne	b708 <pop_all_cleanups@@Base+0x50>  // b.any
    b6f4:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    b6f8:	add	x1, x1, #0x6e0
    b6fc:	mov	w0, #0x1                   	// #1
    b700:	mov	x2, xzr
    b704:	bl	a7a0 <sigaction@plt>
    b708:	add	x2, sp, #0x8
    b70c:	mov	w0, #0x2                   	// #2
    b710:	mov	x1, xzr
    b714:	bl	a7a0 <sigaction@plt>
    b718:	cbnz	w0, b744 <pop_all_cleanups@@Base+0x8c>
    b71c:	ldr	x8, [sp, #8]
    b720:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b724:	add	x9, x9, #0x78c
    b728:	cmp	x8, x9
    b72c:	b.ne	b744 <pop_all_cleanups@@Base+0x8c>  // b.any
    b730:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    b734:	add	x1, x1, #0x778
    b738:	mov	w0, #0x2                   	// #2
    b73c:	mov	x2, xzr
    b740:	bl	a7a0 <sigaction@plt>
    b744:	add	x2, sp, #0x8
    b748:	mov	w0, #0xf                   	// #15
    b74c:	mov	x1, xzr
    b750:	bl	a7a0 <sigaction@plt>
    b754:	cbnz	w0, b780 <pop_all_cleanups@@Base+0xc8>
    b758:	ldr	x8, [sp, #8]
    b75c:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b760:	add	x9, x9, #0x78c
    b764:	cmp	x8, x9
    b768:	b.ne	b780 <pop_all_cleanups@@Base+0xc8>  // b.any
    b76c:	adrp	x1, 43000 <base_len@@Base+0x2ea54>
    b770:	add	x1, x1, #0x810
    b774:	mov	w0, #0xf                   	// #15
    b778:	mov	x2, xzr
    b77c:	bl	a7a0 <sigaction@plt>
    b780:	ldp	x29, x30, [sp, #160]
    b784:	add	sp, sp, #0xb0
    b788:	ret
    b78c:	sub	sp, sp, #0x160
    b790:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    b794:	adrp	x9, 43000 <base_len@@Base+0x2ea54>
    b798:	stp	x20, x19, [sp, #336]
    b79c:	ldr	w20, [x8, #1736]
    b7a0:	ldr	w8, [x9, #1740]
    b7a4:	stp	x29, x30, [sp, #288]
    b7a8:	str	x28, [sp, #304]
    b7ac:	stp	x22, x21, [sp, #320]
    b7b0:	cmp	w20, w8
    b7b4:	add	x29, sp, #0x120
    b7b8:	b.ls	b7dc <pop_all_cleanups@@Base+0x124>  // b.plast
    b7bc:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    b7c0:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    b7c4:	adrp	x3, 2e000 <vasnprintf@@Base+0x24c>
    b7c8:	add	x0, x0, #0xa30
    b7cc:	add	x1, x1, #0xa3e
    b7d0:	add	x3, x3, #0xa48
    b7d4:	mov	w2, #0xa9                  	// #169
    b7d8:	bl	ad70 <__assert_fail@plt>
    b7dc:	mov	w19, w0
    b7e0:	cbz	w20, b818 <pop_all_cleanups@@Base+0x160>
    b7e4:	sub	w8, w20, #0x1
    b7e8:	mov	w9, #0x18                  	// #24
    b7ec:	umull	x21, w8, w9
    b7f0:	adrp	x22, 43000 <base_len@@Base+0x2ea54>
    b7f4:	ldr	x8, [x22, #1744]
    b7f8:	add	x8, x8, x21
    b7fc:	ldr	w9, [x8, #16]
    b800:	cbz	w9, b80c <pop_all_cleanups@@Base+0x154>
    b804:	ldp	x9, x0, [x8]
    b808:	blr	x9
    b80c:	sub	w20, w20, #0x1
    b810:	sub	x21, x21, #0x18
    b814:	cbnz	w20, b7f4 <pop_all_cleanups@@Base+0x13c>
    b818:	add	x8, sp, #0x80
    b81c:	movi	v0.2d, #0x0
    b820:	orr	x0, x8, #0x8
    b824:	str	xzr, [sp, #272]
    b828:	stp	q0, q0, [sp, #240]
    b82c:	stp	q0, q0, [sp, #208]
    b830:	stp	q0, q0, [sp, #176]
    b834:	stp	q0, q0, [sp, #144]
    b838:	str	q0, [sp, #128]
    b83c:	bl	a5e0 <sigemptyset@plt>
    b840:	add	x1, sp, #0x80
    b844:	mov	w0, w19
    b848:	mov	x2, xzr
    b84c:	str	wzr, [sp, #264]
    b850:	bl	a7a0 <sigaction@plt>
    b854:	cbnz	w0, b898 <pop_all_cleanups@@Base+0x1e0>
    b858:	mov	x0, sp
    b85c:	bl	a5e0 <sigemptyset@plt>
    b860:	cbnz	w0, b898 <pop_all_cleanups@@Base+0x1e0>
    b864:	mov	x0, sp
    b868:	mov	w1, w19
    b86c:	bl	acf0 <sigaddset@plt>
    b870:	cbnz	w0, b898 <pop_all_cleanups@@Base+0x1e0>
    b874:	mov	x1, sp
    b878:	mov	w0, #0x1                   	// #1
    b87c:	mov	x2, xzr
    b880:	bl	a320 <sigprocmask@plt>
    b884:	cbnz	w0, b898 <pop_all_cleanups@@Base+0x1e0>
    b888:	bl	a500 <getpid@plt>
    b88c:	mov	w1, w19
    b890:	bl	a460 <kill@plt>
    b894:	bl	a840 <abort@plt>
    b898:	mov	w0, #0x2                   	// #2
    b89c:	bl	a240 <_exit@plt>

000000000000b8a0 <init_debug@@Base>:
    b8a0:	stp	x29, x30, [sp, #-16]!
    b8a4:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    b8a8:	add	x0, x0, #0xacc
    b8ac:	mov	x29, sp
    b8b0:	bl	ada0 <getenv@plt>
    b8b4:	cbz	x0, b8c8 <init_debug@@Base+0x28>
    b8b8:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
    b8bc:	add	x1, x1, #0x7e3
    b8c0:	bl	a8e0 <strcmp@plt>
    b8c4:	cbz	w0, b8d0 <init_debug@@Base+0x30>
    b8c8:	ldp	x29, x30, [sp], #16
    b8cc:	ret
    b8d0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    b8d4:	ldr	x8, [x8, #3808]
    b8d8:	mov	w9, #0x1                   	// #1
    b8dc:	strb	w9, [x8]
    b8e0:	ldp	x29, x30, [sp], #16
    b8e4:	ret

000000000000b8e8 <debug@@Base>:
    b8e8:	sub	sp, sp, #0x140
    b8ec:	stp	x29, x30, [sp, #288]
    b8f0:	str	x28, [sp, #304]
    b8f4:	stp	x1, x2, [sp, #136]
    b8f8:	stp	x3, x4, [sp, #152]
    b8fc:	stp	x5, x6, [sp, #168]
    b900:	str	x7, [sp, #184]
    b904:	stp	q0, q1, [sp]
    b908:	stp	q2, q3, [sp, #32]
    b90c:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
    b910:	ldr	x9, [x9, #3808]
    b914:	add	x29, sp, #0x120
    b918:	stp	q4, q5, [sp, #64]
    b91c:	stp	q6, q7, [sp, #96]
    b920:	ldrb	w10, [x9]
    b924:	cbz	w10, b95c <debug@@Base+0x74>
    b928:	mov	x10, #0xffffffffffffffc8    	// #-56
    b92c:	mov	x12, sp
    b930:	add	x13, sp, #0x88
    b934:	movk	x10, #0xff80, lsl #32
    b938:	add	x11, x29, #0x20
    b93c:	add	x12, x12, #0x80
    b940:	add	x13, x13, #0x38
    b944:	stp	x12, x10, [x29, #-48]
    b948:	stp	x11, x13, [x29, #-64]
    b94c:	ldrb	w9, [x9]
    b950:	ldp	q0, q1, [x29, #-64]
    b954:	stp	q0, q1, [x29, #-96]
    b958:	cbnz	w9, b96c <debug@@Base+0x84>
    b95c:	ldr	x28, [sp, #304]
    b960:	ldp	x29, x30, [sp, #288]
    b964:	add	sp, sp, #0x140
    b968:	ret
    b96c:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
    b970:	ldr	x9, [x9, #3816]
    b974:	mov	x8, x0
    b978:	ldp	q0, q1, [x29, #-96]
    b97c:	sub	x2, x29, #0x20
    b980:	ldr	x0, [x9]
    b984:	mov	x1, x8
    b988:	stp	q0, q1, [x29, #-32]
    b98c:	bl	ad50 <vfprintf@plt>
    b990:	b	b95c <debug@@Base+0x74>

000000000000b994 <debug_error@@Base>:
    b994:	sub	sp, sp, #0x140
    b998:	stp	x29, x30, [sp, #288]
    b99c:	str	x28, [sp, #304]
    b9a0:	stp	x1, x2, [sp, #136]
    b9a4:	stp	x3, x4, [sp, #152]
    b9a8:	stp	x5, x6, [sp, #168]
    b9ac:	str	x7, [sp, #184]
    b9b0:	stp	q0, q1, [sp]
    b9b4:	stp	q2, q3, [sp, #32]
    b9b8:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
    b9bc:	ldr	x9, [x9, #3808]
    b9c0:	add	x29, sp, #0x120
    b9c4:	stp	q4, q5, [sp, #64]
    b9c8:	stp	q6, q7, [sp, #96]
    b9cc:	ldrb	w10, [x9]
    b9d0:	cbz	w10, ba24 <debug_error@@Base+0x90>
    b9d4:	mov	x10, #0xffffffffffffffc8    	// #-56
    b9d8:	mov	x12, sp
    b9dc:	add	x13, sp, #0x88
    b9e0:	movk	x10, #0xff80, lsl #32
    b9e4:	add	x11, x29, #0x20
    b9e8:	add	x12, x12, #0x80
    b9ec:	add	x13, x13, #0x38
    b9f0:	stp	x12, x10, [x29, #-48]
    b9f4:	stp	x11, x13, [x29, #-64]
    b9f8:	ldrb	w9, [x9]
    b9fc:	ldp	q0, q1, [x29, #-64]
    ba00:	stp	q0, q1, [x29, #-96]
    ba04:	cbnz	w9, ba34 <debug_error@@Base+0xa0>
    ba08:	bl	ad80 <__errno_location@plt>
    ba0c:	ldr	w0, [x0]
    ba10:	bl	a770 <strerror@plt>
    ba14:	mov	x1, x0
    ba18:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ba1c:	add	x0, x0, #0xbbf
    ba20:	bl	a4c0 <debug@plt>
    ba24:	ldr	x28, [sp, #304]
    ba28:	ldp	x29, x30, [sp, #288]
    ba2c:	add	sp, sp, #0x140
    ba30:	ret
    ba34:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
    ba38:	ldr	x9, [x9, #3816]
    ba3c:	mov	x8, x0
    ba40:	ldp	q0, q1, [x29, #-96]
    ba44:	sub	x2, x29, #0x20
    ba48:	ldr	x0, [x9]
    ba4c:	mov	x1, x8
    ba50:	stp	q0, q1, [x29, #-32]
    ba54:	bl	ad50 <vfprintf@plt>
    ba58:	b	ba08 <debug_error@@Base+0x74>

000000000000ba5c <get_groff_preconv@@Base>:
    ba5c:	stp	x29, x30, [sp, #-32]!
    ba60:	stp	x20, x19, [sp, #16]
    ba64:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
    ba68:	ldr	x20, [x20, #3832]
    ba6c:	mov	x29, sp
    ba70:	ldr	x19, [x20]
    ba74:	cbnz	x19, bab0 <get_groff_preconv@@Base+0x54>
    ba78:	adrp	x19, 2e000 <vasnprintf@@Base+0x24c>
    ba7c:	add	x19, x19, #0xad6
    ba80:	mov	x0, x19
    ba84:	bl	ad00 <pathsearch_executable@plt>
    ba88:	tbnz	w0, #0, baac <get_groff_preconv@@Base+0x50>
    ba8c:	adrp	x19, 2e000 <vasnprintf@@Base+0x24c>
    ba90:	add	x19, x19, #0xad7
    ba94:	mov	x0, x19
    ba98:	bl	ad00 <pathsearch_executable@plt>
    ba9c:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
    baa0:	add	x8, x8, #0x9c
    baa4:	tst	w0, #0x1
    baa8:	csel	x19, x19, x8, ne  // ne = any
    baac:	str	x19, [x20]
    bab0:	ldrb	w8, [x19]
    bab4:	cmp	w8, #0x0
    bab8:	csel	x0, xzr, x19, eq  // eq = none
    babc:	ldp	x20, x19, [sp, #16]
    bac0:	ldp	x29, x30, [sp], #32
    bac4:	ret

000000000000bac8 <get_page_encoding@@Base>:
    bac8:	stp	x29, x30, [sp, #-48]!
    bacc:	str	x21, [sp, #16]
    bad0:	stp	x20, x19, [sp, #32]
    bad4:	mov	x29, sp
    bad8:	cbz	x0, bae8 <get_page_encoding@@Base+0x20>
    badc:	ldrb	w8, [x0]
    bae0:	mov	x19, x0
    bae4:	cbnz	w8, bafc <get_page_encoding@@Base+0x34>
    bae8:	mov	w0, #0x5                   	// #5
    baec:	mov	x1, xzr
    baf0:	bl	ae90 <setlocale@plt>
    baf4:	mov	x19, x0
    baf8:	cbz	x0, bbcc <get_page_encoding@@Base+0x104>
    bafc:	mov	w1, #0x2e                  	// #46
    bb00:	mov	x0, x19
    bb04:	bl	aa50 <strchr@plt>
    bb08:	cbz	x0, bb98 <get_page_encoding@@Base+0xd0>
    bb0c:	add	x19, x0, #0x1
    bb10:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    bb14:	add	x1, x1, #0xadf
    bb18:	mov	x0, x19
    bb1c:	bl	ad30 <strcspn@plt>
    bb20:	mov	x1, x0
    bb24:	mov	x0, x19
    bb28:	bl	abd0 <xstrndup@plt>
    bb2c:	mov	x19, x0
    bb30:	bl	a670 <xstrdup@plt>
    bb34:	ldrb	w21, [x0]
    bb38:	mov	x20, x0
    bb3c:	cbz	w21, bb64 <get_page_encoding@@Base+0x9c>
    bb40:	bl	a730 <__ctype_toupper_loc@plt>
    bb44:	add	x8, x20, #0x1
    bb48:	ldr	x9, [x0]
    bb4c:	and	x10, x21, #0xff
    bb50:	ldrb	w21, [x8]
    bb54:	ldr	w9, [x9, x10, lsl #2]
    bb58:	sturb	w9, [x8, #-1]
    bb5c:	add	x8, x8, #0x1
    bb60:	cbnz	w21, bb48 <get_page_encoding@@Base+0x80>
    bb64:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    bb68:	adrp	x21, 41000 <vasnprintf@@Base+0x1324c>
    bb6c:	add	x0, x0, #0xd17
    bb70:	add	x21, x21, #0xf68
    bb74:	mov	x1, x20
    bb78:	bl	a8e0 <strcmp@plt>
    bb7c:	cbz	w0, bbd8 <get_page_encoding@@Base+0x110>
    bb80:	ldr	x0, [x21], #16
    bb84:	cbnz	x0, bb74 <get_page_encoding@@Base+0xac>
    bb88:	mov	x0, x20
    bb8c:	bl	a960 <free@plt>
    bb90:	mov	x0, x19
    bb94:	b	bbe4 <get_page_encoding@@Base+0x11c>
    bb98:	adrp	x20, 2e000 <vasnprintf@@Base+0x24c>
    bb9c:	adrp	x21, 41000 <vasnprintf@@Base+0x1324c>
    bba0:	add	x20, x20, #0xc30
    bba4:	add	x21, x21, #0xc88
    bba8:	mov	x0, x20
    bbac:	bl	a280 <strlen@plt>
    bbb0:	mov	x2, x0
    bbb4:	mov	x0, x20
    bbb8:	mov	x1, x19
    bbbc:	bl	a600 <strncmp@plt>
    bbc0:	cbz	w0, bc08 <get_page_encoding@@Base+0x140>
    bbc4:	ldr	x20, [x21], #16
    bbc8:	cbnz	x20, bba8 <get_page_encoding@@Base+0xe0>
    bbcc:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    bbd0:	add	x0, x0, #0x143
    bbd4:	b	bc0c <get_page_encoding@@Base+0x144>
    bbd8:	mov	x0, x20
    bbdc:	bl	a960 <free@plt>
    bbe0:	ldur	x0, [x21, #-8]
    bbe4:	bl	a670 <xstrdup@plt>
    bbe8:	mov	x20, x0
    bbec:	mov	x0, x19
    bbf0:	bl	a960 <free@plt>
    bbf4:	mov	x0, x20
    bbf8:	ldp	x20, x19, [sp, #32]
    bbfc:	ldr	x21, [sp, #16]
    bc00:	ldp	x29, x30, [sp], #48
    bc04:	ret
    bc08:	ldur	x0, [x21, #-8]
    bc0c:	ldp	x20, x19, [sp, #32]
    bc10:	ldr	x21, [sp, #16]
    bc14:	ldp	x29, x30, [sp], #48
    bc18:	b	a670 <xstrdup@plt>

000000000000bc1c <get_canonical_charset_name@@Base>:
    bc1c:	stp	x29, x30, [sp, #-48]!
    bc20:	str	x21, [sp, #16]
    bc24:	stp	x20, x19, [sp, #32]
    bc28:	mov	x29, sp
    bc2c:	mov	x19, x0
    bc30:	bl	a670 <xstrdup@plt>
    bc34:	ldrb	w21, [x0]
    bc38:	mov	x20, x0
    bc3c:	cbz	w21, bc64 <get_canonical_charset_name@@Base+0x48>
    bc40:	bl	a730 <__ctype_toupper_loc@plt>
    bc44:	add	x8, x20, #0x1
    bc48:	ldr	x9, [x0]
    bc4c:	and	x10, x21, #0xff
    bc50:	ldrb	w21, [x8]
    bc54:	ldr	w9, [x9, x10, lsl #2]
    bc58:	sturb	w9, [x8, #-1]
    bc5c:	add	x8, x8, #0x1
    bc60:	cbnz	w21, bc48 <get_canonical_charset_name@@Base+0x2c>
    bc64:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    bc68:	adrp	x21, 41000 <vasnprintf@@Base+0x1324c>
    bc6c:	add	x0, x0, #0xd17
    bc70:	add	x21, x21, #0xf68
    bc74:	mov	x1, x20
    bc78:	bl	a8e0 <strcmp@plt>
    bc7c:	cbz	w0, bc94 <get_canonical_charset_name@@Base+0x78>
    bc80:	ldr	x0, [x21], #16
    bc84:	cbnz	x0, bc74 <get_canonical_charset_name@@Base+0x58>
    bc88:	mov	x0, x20
    bc8c:	bl	a960 <free@plt>
    bc90:	b	bca0 <get_canonical_charset_name@@Base+0x84>
    bc94:	mov	x0, x20
    bc98:	bl	a960 <free@plt>
    bc9c:	ldur	x19, [x21, #-8]
    bca0:	mov	x0, x19
    bca4:	ldp	x20, x19, [sp, #32]
    bca8:	ldr	x21, [sp, #16]
    bcac:	ldp	x29, x30, [sp], #48
    bcb0:	ret

000000000000bcb4 <get_source_encoding@@Base>:
    bcb4:	stp	x29, x30, [sp, #-48]!
    bcb8:	stp	x22, x21, [sp, #16]
    bcbc:	stp	x20, x19, [sp, #32]
    bcc0:	mov	x29, sp
    bcc4:	cbz	x0, bcd4 <get_source_encoding@@Base+0x20>
    bcc8:	ldrb	w8, [x0]
    bccc:	mov	x19, x0
    bcd0:	cbnz	w8, bce8 <get_source_encoding@@Base+0x34>
    bcd4:	mov	w0, #0x5                   	// #5
    bcd8:	mov	x1, xzr
    bcdc:	bl	ae90 <setlocale@plt>
    bce0:	mov	x19, x0
    bce4:	cbz	x0, bd30 <get_source_encoding@@Base+0x7c>
    bce8:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    bcec:	adrp	x22, 41000 <vasnprintf@@Base+0x1324c>
    bcf0:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    bcf4:	add	x21, x21, #0xc30
    bcf8:	add	x22, x22, #0xc88
    bcfc:	add	x20, x20, #0x143
    bd00:	mov	x0, x21
    bd04:	bl	a280 <strlen@plt>
    bd08:	mov	x2, x0
    bd0c:	mov	x0, x21
    bd10:	mov	x1, x19
    bd14:	bl	a600 <strncmp@plt>
    bd18:	cbz	w0, bd28 <get_source_encoding@@Base+0x74>
    bd1c:	ldr	x21, [x22], #16
    bd20:	cbnz	x21, bd00 <get_source_encoding@@Base+0x4c>
    bd24:	b	bd38 <get_source_encoding@@Base+0x84>
    bd28:	ldur	x20, [x22, #-8]
    bd2c:	b	bd38 <get_source_encoding@@Base+0x84>
    bd30:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    bd34:	add	x20, x20, #0x143
    bd38:	mov	x0, x20
    bd3c:	ldp	x20, x19, [sp, #32]
    bd40:	ldp	x22, x21, [sp, #16]
    bd44:	ldp	x29, x30, [sp], #48
    bd48:	ret

000000000000bd4c <get_locale_charset@@Base>:
    bd4c:	stp	x29, x30, [sp, #-48]!
    bd50:	mov	w0, wzr
    bd54:	mov	x1, xzr
    bd58:	str	x21, [sp, #16]
    bd5c:	stp	x20, x19, [sp, #32]
    bd60:	mov	x29, sp
    bd64:	bl	ae90 <setlocale@plt>
    bd68:	cbz	x0, bd78 <get_locale_charset@@Base+0x2c>
    bd6c:	bl	a670 <xstrdup@plt>
    bd70:	mov	x20, x0
    bd74:	b	bd7c <get_locale_charset@@Base+0x30>
    bd78:	mov	x20, xzr
    bd7c:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
    bd80:	add	x1, x1, #0x9c
    bd84:	mov	w0, wzr
    bd88:	bl	ae90 <setlocale@plt>
    bd8c:	bl	adb0 <locale_charset@plt>
    bd90:	mov	x19, x0
    bd94:	mov	w0, wzr
    bd98:	mov	x1, x20
    bd9c:	bl	ae90 <setlocale@plt>
    bda0:	mov	x0, x20
    bda4:	bl	a960 <free@plt>
    bda8:	cbz	x19, be30 <get_locale_charset@@Base+0xe4>
    bdac:	ldrb	w8, [x19]
    bdb0:	cbz	w8, be1c <get_locale_charset@@Base+0xd0>
    bdb4:	mov	x0, x19
    bdb8:	bl	a670 <xstrdup@plt>
    bdbc:	ldrb	w21, [x0]
    bdc0:	mov	x20, x0
    bdc4:	cbz	w21, bdec <get_locale_charset@@Base+0xa0>
    bdc8:	bl	a730 <__ctype_toupper_loc@plt>
    bdcc:	add	x8, x20, #0x1
    bdd0:	ldr	x9, [x0]
    bdd4:	and	x10, x21, #0xff
    bdd8:	ldrb	w21, [x8]
    bddc:	ldr	w9, [x9, x10, lsl #2]
    bde0:	sturb	w9, [x8, #-1]
    bde4:	add	x8, x8, #0x1
    bde8:	cbnz	w21, bdd0 <get_locale_charset@@Base+0x84>
    bdec:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    bdf0:	adrp	x21, 41000 <vasnprintf@@Base+0x1324c>
    bdf4:	add	x0, x0, #0xd17
    bdf8:	add	x21, x21, #0xf68
    bdfc:	mov	x1, x20
    be00:	bl	a8e0 <strcmp@plt>
    be04:	cbz	w0, be24 <get_locale_charset@@Base+0xd8>
    be08:	ldr	x0, [x21], #16
    be0c:	cbnz	x0, bdfc <get_locale_charset@@Base+0xb0>
    be10:	mov	x0, x20
    be14:	bl	a960 <free@plt>
    be18:	b	be30 <get_locale_charset@@Base+0xe4>
    be1c:	mov	x19, xzr
    be20:	b	be30 <get_locale_charset@@Base+0xe4>
    be24:	mov	x0, x20
    be28:	bl	a960 <free@plt>
    be2c:	ldur	x19, [x21, #-8]
    be30:	mov	x0, x19
    be34:	ldp	x20, x19, [sp, #32]
    be38:	ldr	x21, [sp, #16]
    be3c:	ldp	x29, x30, [sp], #48
    be40:	ret

000000000000be44 <find_charset_locale@@Base>:
    be44:	sub	sp, sp, #0x90
    be48:	stp	x29, x30, [sp, #48]
    be4c:	str	x27, [sp, #64]
    be50:	stp	x26, x25, [sp, #80]
    be54:	stp	x24, x23, [sp, #96]
    be58:	stp	x22, x21, [sp, #112]
    be5c:	stp	x20, x19, [sp, #128]
    be60:	add	x29, sp, #0x30
    be64:	mov	x19, x0
    be68:	bl	a670 <xstrdup@plt>
    be6c:	ldrb	w21, [x0]
    be70:	mov	x20, x0
    be74:	cbz	w21, be9c <find_charset_locale@@Base+0x58>
    be78:	bl	a730 <__ctype_toupper_loc@plt>
    be7c:	add	x8, x20, #0x1
    be80:	ldr	x9, [x0]
    be84:	and	x10, x21, #0xff
    be88:	ldrb	w21, [x8]
    be8c:	ldr	w9, [x9, x10, lsl #2]
    be90:	sturb	w9, [x8, #-1]
    be94:	add	x8, x8, #0x1
    be98:	cbnz	w21, be80 <find_charset_locale@@Base+0x3c>
    be9c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    bea0:	adrp	x21, 41000 <vasnprintf@@Base+0x1324c>
    bea4:	add	x0, x0, #0xd17
    bea8:	add	x21, x21, #0xf68
    beac:	mov	x1, x20
    beb0:	bl	a8e0 <strcmp@plt>
    beb4:	cbz	w0, bed0 <find_charset_locale@@Base+0x8c>
    beb8:	ldr	x0, [x21], #16
    bebc:	cbnz	x0, beac <find_charset_locale@@Base+0x68>
    bec0:	mov	x0, x20
    bec4:	bl	a960 <free@plt>
    bec8:	mov	x21, x19
    becc:	b	bedc <find_charset_locale@@Base+0x98>
    bed0:	mov	x0, x20
    bed4:	bl	a960 <free@plt>
    bed8:	ldur	x21, [x21, #-8]
    bedc:	adrp	x8, 2e000 <vasnprintf@@Base+0x24c>
    bee0:	add	x8, x8, #0xae2
    bee4:	ldr	q0, [x8]
    bee8:	ldur	q1, [x8, #10]
    beec:	str	xzr, [x29, #24]
    bef0:	str	xzr, [sp, #8]
    bef4:	str	q0, [sp, #16]
    bef8:	stur	q1, [sp, #26]
    befc:	bl	acc0 <get_locale_charset@plt>
    bf00:	mov	x1, x0
    bf04:	mov	x0, x19
    bf08:	bl	a8e0 <strcmp@plt>
    bf0c:	cbz	w0, bf2c <find_charset_locale@@Base+0xe8>
    bf10:	mov	w0, wzr
    bf14:	mov	x1, xzr
    bf18:	bl	ae90 <setlocale@plt>
    bf1c:	cbz	x0, bf34 <find_charset_locale@@Base+0xf0>
    bf20:	bl	a670 <xstrdup@plt>
    bf24:	mov	x19, x0
    bf28:	b	bf38 <find_charset_locale@@Base+0xf4>
    bf2c:	mov	x23, xzr
    bf30:	b	c0e4 <find_charset_locale@@Base+0x2a0>
    bf34:	mov	x19, xzr
    bf38:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    bf3c:	add	x1, x1, #0xf34
    bf40:	add	x0, sp, #0x10
    bf44:	bl	a520 <fopen@plt>
    bf48:	mov	x20, x0
    bf4c:	cbz	x0, c090 <find_charset_locale@@Base+0x24c>
    bf50:	add	x0, x29, #0x18
    bf54:	add	x1, sp, #0x8
    bf58:	mov	w2, #0xa                   	// #10
    bf5c:	mov	x3, x20
    bf60:	bl	ade0 <__getdelim@plt>
    bf64:	tbnz	x0, #63, c090 <find_charset_locale@@Base+0x24c>
    bf68:	adrp	x25, 2e000 <vasnprintf@@Base+0x24c>
    bf6c:	adrp	x26, 41000 <vasnprintf@@Base+0x1324c>
    bf70:	add	x25, x25, #0xd17
    bf74:	add	x26, x26, #0xf68
    bf78:	b	bfb4 <find_charset_locale@@Base+0x170>
    bf7c:	mov	x0, x23
    bf80:	bl	a960 <free@plt>
    bf84:	mov	x0, x22
    bf88:	bl	a960 <free@plt>
    bf8c:	ldr	x22, [x29, #24]
    bf90:	mov	x0, x22
    bf94:	bl	a960 <free@plt>
    bf98:	add	x0, x29, #0x18
    bf9c:	add	x1, sp, #0x8
    bfa0:	mov	w2, #0xa                   	// #10
    bfa4:	mov	x3, x20
    bfa8:	str	xzr, [x29, #24]
    bfac:	bl	ade0 <__getdelim@plt>
    bfb0:	tbnz	x0, #63, c090 <find_charset_locale@@Base+0x24c>
    bfb4:	ldr	x22, [x29, #24]
    bfb8:	mov	w1, #0x20                  	// #32
    bfbc:	mov	x0, x22
    bfc0:	bl	aa50 <strchr@plt>
    bfc4:	cbz	x0, bf90 <find_charset_locale@@Base+0x14c>
    bfc8:	mov	x23, x0
    bfcc:	add	x0, x0, #0x1
    bfd0:	bl	a670 <xstrdup@plt>
    bfd4:	mov	w1, #0xa                   	// #10
    bfd8:	mov	x22, x0
    bfdc:	bl	aa50 <strchr@plt>
    bfe0:	cbz	x0, bfe8 <find_charset_locale@@Base+0x1a4>
    bfe4:	strb	wzr, [x0]
    bfe8:	mov	x0, x22
    bfec:	bl	a670 <xstrdup@plt>
    bff0:	ldrb	w27, [x0]
    bff4:	mov	x24, x0
    bff8:	cbz	w27, c020 <find_charset_locale@@Base+0x1dc>
    bffc:	bl	a730 <__ctype_toupper_loc@plt>
    c000:	add	x8, x24, #0x1
    c004:	ldr	x9, [x0]
    c008:	and	x10, x27, #0xff
    c00c:	ldrb	w27, [x8]
    c010:	ldr	w9, [x9, x10, lsl #2]
    c014:	sturb	w9, [x8, #-1]
    c018:	add	x8, x8, #0x1
    c01c:	cbnz	w27, c004 <find_charset_locale@@Base+0x1c0>
    c020:	mov	x27, x26
    c024:	mov	x0, x25
    c028:	mov	x1, x24
    c02c:	bl	a8e0 <strcmp@plt>
    c030:	cbz	w0, c04c <find_charset_locale@@Base+0x208>
    c034:	ldr	x0, [x27], #16
    c038:	cbnz	x0, c028 <find_charset_locale@@Base+0x1e4>
    c03c:	mov	x0, x24
    c040:	bl	a960 <free@plt>
    c044:	mov	x1, x22
    c048:	b	c058 <find_charset_locale@@Base+0x214>
    c04c:	mov	x0, x24
    c050:	bl	a960 <free@plt>
    c054:	ldur	x1, [x27, #-8]
    c058:	mov	x0, x21
    c05c:	bl	a8e0 <strcmp@plt>
    c060:	cbnz	w0, bf84 <find_charset_locale@@Base+0x140>
    c064:	ldr	x0, [x29, #24]
    c068:	sub	x1, x23, x0
    c06c:	bl	abd0 <xstrndup@plt>
    c070:	mov	x23, x0
    c074:	mov	w0, wzr
    c078:	mov	x1, x23
    c07c:	bl	ae90 <setlocale@plt>
    c080:	cbz	x0, bf7c <find_charset_locale@@Base+0x138>
    c084:	mov	x0, x22
    c088:	bl	a960 <free@plt>
    c08c:	b	c0bc <find_charset_locale@@Base+0x278>
    c090:	mov	x0, x21
    c094:	bl	a280 <strlen@plt>
    c098:	cmp	x0, #0x5
    c09c:	b.cc	c0b8 <find_charset_locale@@Base+0x274>  // b.lo, b.ul, b.last
    c0a0:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c0a4:	add	x1, x1, #0xafe
    c0a8:	mov	w2, #0x5                   	// #5
    c0ac:	mov	x0, x21
    c0b0:	bl	a600 <strncmp@plt>
    c0b4:	cbz	w0, c108 <find_charset_locale@@Base+0x2c4>
    c0b8:	mov	x23, xzr
    c0bc:	ldr	x0, [x29, #24]
    c0c0:	bl	a960 <free@plt>
    c0c4:	mov	w0, wzr
    c0c8:	mov	x1, x19
    c0cc:	bl	ae90 <setlocale@plt>
    c0d0:	mov	x0, x19
    c0d4:	bl	a960 <free@plt>
    c0d8:	cbz	x20, c0e4 <find_charset_locale@@Base+0x2a0>
    c0dc:	mov	x0, x20
    c0e0:	bl	a4e0 <fclose@plt>
    c0e4:	mov	x0, x23
    c0e8:	ldp	x20, x19, [sp, #128]
    c0ec:	ldp	x22, x21, [sp, #112]
    c0f0:	ldp	x24, x23, [sp, #96]
    c0f4:	ldp	x26, x25, [sp, #80]
    c0f8:	ldr	x27, [sp, #64]
    c0fc:	ldp	x29, x30, [sp, #48]
    c100:	add	sp, sp, #0x90
    c104:	ret
    c108:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c10c:	add	x0, x0, #0xafc
    c110:	bl	a670 <xstrdup@plt>
    c114:	mov	x23, x0
    c118:	mov	w0, wzr
    c11c:	mov	x1, x23
    c120:	bl	ae90 <setlocale@plt>
    c124:	cbnz	x0, c0bc <find_charset_locale@@Base+0x278>
    c128:	mov	x0, x23
    c12c:	bl	a960 <free@plt>
    c130:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c134:	add	x0, x0, #0xb04
    c138:	bl	a670 <xstrdup@plt>
    c13c:	mov	x23, x0
    c140:	mov	w0, wzr
    c144:	mov	x1, x23
    c148:	bl	ae90 <setlocale@plt>
    c14c:	cbnz	x0, c0bc <find_charset_locale@@Base+0x278>
    c150:	mov	x0, x23
    c154:	bl	a960 <free@plt>
    c158:	b	c0b8 <find_charset_locale@@Base+0x274>

000000000000c15c <get_default_device@@Base>:
    c15c:	stp	x29, x30, [sp, #-96]!
    c160:	stp	x28, x27, [sp, #16]
    c164:	stp	x26, x25, [sp, #32]
    c168:	stp	x24, x23, [sp, #48]
    c16c:	stp	x22, x21, [sp, #64]
    c170:	stp	x20, x19, [sp, #80]
    c174:	adrp	x22, 42000 <vasnprintf@@Base+0x1424c>
    c178:	ldr	x22, [x22, #3832]
    c17c:	mov	x20, x1
    c180:	mov	x19, x0
    c184:	mov	x29, sp
    c188:	ldr	x8, [x22]
    c18c:	cbz	x8, c1bc <get_default_device@@Base+0x60>
    c190:	ldrb	w8, [x8]
    c194:	cbz	w8, c1fc <get_default_device@@Base+0xa0>
    c198:	cbz	x19, c1b0 <get_default_device@@Base+0x54>
    c19c:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c1a0:	add	x1, x1, #0xb10
    c1a4:	mov	x0, x19
    c1a8:	bl	a8e0 <strcmp@plt>
    c1ac:	cbz	w0, c344 <get_default_device@@Base+0x1e8>
    c1b0:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    c1b4:	add	x21, x21, #0xb25
    c1b8:	b	c358 <get_default_device@@Base+0x1fc>
    c1bc:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    c1c0:	add	x21, x21, #0xad6
    c1c4:	mov	x0, x21
    c1c8:	bl	ad00 <pathsearch_executable@plt>
    c1cc:	tbnz	w0, #0, c1f0 <get_default_device@@Base+0x94>
    c1d0:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    c1d4:	add	x21, x21, #0xad7
    c1d8:	mov	x0, x21
    c1dc:	bl	ad00 <pathsearch_executable@plt>
    c1e0:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
    c1e4:	add	x8, x8, #0x9c
    c1e8:	tst	w0, #0x1
    c1ec:	csel	x21, x21, x8, ne  // ne = any
    c1f0:	ldrb	w8, [x21]
    c1f4:	str	x21, [x22]
    c1f8:	cbnz	w8, c198 <get_default_device@@Base+0x3c>
    c1fc:	cbz	x19, c350 <get_default_device@@Base+0x1f4>
    c200:	adrp	x22, 2e000 <vasnprintf@@Base+0x24c>
    c204:	add	x22, x22, #0xb10
    c208:	adrp	x27, 42000 <vasnprintf@@Base+0x1424c>
    c20c:	adrp	x23, 2e000 <vasnprintf@@Base+0x24c>
    c210:	adrp	x24, 2e000 <vasnprintf@@Base+0x24c>
    c214:	adrp	x25, 2e000 <vasnprintf@@Base+0x24c>
    c218:	adrp	x26, 2e000 <vasnprintf@@Base+0x24c>
    c21c:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    c220:	add	x27, x27, #0x220
    c224:	add	x23, x23, #0xafe
    c228:	add	x24, x24, #0xd12
    c22c:	add	x25, x25, #0xd08
    c230:	add	x26, x26, #0xc8e
    c234:	add	x21, x21, #0xed8
    c238:	mov	x0, x22
    c23c:	b	c25c <get_default_device@@Base+0x100>
    c240:	mov	x0, x28
    c244:	mov	x1, x23
    c248:	bl	a8e0 <strcmp@plt>
    c24c:	cbz	w0, c33c <get_default_device@@Base+0x1e0>
    c250:	ldr	x0, [x27, #8]
    c254:	add	x27, x27, #0x10
    c258:	cbz	x0, c358 <get_default_device@@Base+0x1fc>
    c25c:	mov	x1, x19
    c260:	bl	a8e0 <strcmp@plt>
    c264:	cbnz	w0, c250 <get_default_device@@Base+0xf4>
    c268:	ldr	x0, [x27]
    c26c:	mov	x1, x20
    c270:	bl	a350 <get_roff_encoding@plt>
    c274:	mov	x28, x0
    c278:	mov	x0, x20
    c27c:	mov	x1, x28
    c280:	bl	a8e0 <strcmp@plt>
    c284:	cbz	w0, c33c <get_default_device@@Base+0x1e0>
    c288:	mov	x0, x20
    c28c:	mov	x1, x22
    c290:	bl	a8e0 <strcmp@plt>
    c294:	cbz	w0, c33c <get_default_device@@Base+0x1e0>
    c298:	mov	x0, x20
    c29c:	mov	x1, x23
    c2a0:	bl	a8e0 <strcmp@plt>
    c2a4:	cbz	w0, c33c <get_default_device@@Base+0x1e0>
    c2a8:	mov	x0, x28
    c2ac:	mov	x1, x22
    c2b0:	bl	a8e0 <strcmp@plt>
    c2b4:	cbz	w0, c33c <get_default_device@@Base+0x1e0>
    c2b8:	mov	x0, x20
    c2bc:	mov	x1, x24
    c2c0:	bl	a8e0 <strcmp@plt>
    c2c4:	cbz	w0, c240 <get_default_device@@Base+0xe4>
    c2c8:	mov	x0, x20
    c2cc:	mov	x1, x25
    c2d0:	bl	a8e0 <strcmp@plt>
    c2d4:	cbz	w0, c240 <get_default_device@@Base+0xe4>
    c2d8:	mov	x0, x20
    c2dc:	mov	x1, x26
    c2e0:	bl	a8e0 <strcmp@plt>
    c2e4:	cbz	w0, c240 <get_default_device@@Base+0xe4>
    c2e8:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c2ec:	mov	x0, x20
    c2f0:	add	x1, x1, #0xdf6
    c2f4:	bl	a8e0 <strcmp@plt>
    c2f8:	cbz	w0, c240 <get_default_device@@Base+0xe4>
    c2fc:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c300:	mov	x0, x20
    c304:	add	x1, x1, #0xd04
    c308:	bl	a8e0 <strcmp@plt>
    c30c:	cbz	w0, c240 <get_default_device@@Base+0xe4>
    c310:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c314:	mov	x0, x20
    c318:	add	x1, x1, #0xc98
    c31c:	bl	a8e0 <strcmp@plt>
    c320:	cbz	w0, c240 <get_default_device@@Base+0xe4>
    c324:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c328:	mov	x0, x20
    c32c:	add	x1, x1, #0xe0f
    c330:	bl	a8e0 <strcmp@plt>
    c334:	cbnz	w0, c250 <get_default_device@@Base+0xf4>
    c338:	b	c240 <get_default_device@@Base+0xe4>
    c33c:	ldr	x21, [x27]
    c340:	b	c358 <get_default_device@@Base+0x1fc>
    c344:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    c348:	add	x21, x21, #0xb1f
    c34c:	b	c358 <get_default_device@@Base+0x1fc>
    c350:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    c354:	add	x21, x21, #0xed8
    c358:	mov	x0, x21
    c35c:	ldp	x20, x19, [sp, #80]
    c360:	ldp	x22, x21, [sp, #64]
    c364:	ldp	x24, x23, [sp, #48]
    c368:	ldp	x26, x25, [sp, #32]
    c36c:	ldp	x28, x27, [sp, #16]
    c370:	ldp	x29, x30, [sp], #96
    c374:	ret

000000000000c378 <get_roff_encoding@@Base>:
    c378:	stp	x29, x30, [sp, #-48]!
    c37c:	stp	x20, x19, [sp, #32]
    c380:	mov	x19, x1
    c384:	stp	x22, x21, [sp, #16]
    c388:	mov	x29, sp
    c38c:	cbz	x0, c4b8 <get_roff_encoding@@Base+0x140>
    c390:	mov	x20, x0
    c394:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c398:	add	x0, x0, #0xb1f
    c39c:	mov	x1, x20
    c3a0:	bl	a8e0 <strcmp@plt>
    c3a4:	cbz	w0, c4c4 <get_roff_encoding@@Base+0x14c>
    c3a8:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c3ac:	add	x0, x0, #0xedf
    c3b0:	mov	x1, x20
    c3b4:	bl	a8e0 <strcmp@plt>
    c3b8:	cbz	w0, c4d0 <get_roff_encoding@@Base+0x158>
    c3bc:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c3c0:	add	x0, x0, #0xb25
    c3c4:	mov	x1, x20
    c3c8:	bl	a8e0 <strcmp@plt>
    c3cc:	cbz	w0, c4dc <get_roff_encoding@@Base+0x164>
    c3d0:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c3d4:	add	x0, x0, #0xed8
    c3d8:	mov	x1, x20
    c3dc:	bl	a8e0 <strcmp@plt>
    c3e0:	cbz	w0, c4e8 <get_roff_encoding@@Base+0x170>
    c3e4:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c3e8:	add	x0, x0, #0xee6
    c3ec:	mov	x1, x20
    c3f0:	bl	a8e0 <strcmp@plt>
    c3f4:	cbz	w0, c4f4 <get_roff_encoding@@Base+0x17c>
    c3f8:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c3fc:	add	x0, x0, #0xeed
    c400:	mov	x1, x20
    c404:	bl	a8e0 <strcmp@plt>
    c408:	cbz	w0, c500 <get_roff_encoding@@Base+0x188>
    c40c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c410:	add	x0, x0, #0xef1
    c414:	mov	x1, x20
    c418:	bl	a8e0 <strcmp@plt>
    c41c:	cbz	w0, c50c <get_roff_encoding@@Base+0x194>
    c420:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c424:	add	x0, x0, #0xef8
    c428:	mov	x1, x20
    c42c:	bl	a8e0 <strcmp@plt>
    c430:	cbz	w0, c518 <get_roff_encoding@@Base+0x1a0>
    c434:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c438:	add	x0, x0, #0xefd
    c43c:	mov	x1, x20
    c440:	bl	a8e0 <strcmp@plt>
    c444:	cbz	w0, c524 <get_roff_encoding@@Base+0x1ac>
    c448:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c44c:	add	x0, x0, #0xf05
    c450:	mov	x1, x20
    c454:	bl	a8e0 <strcmp@plt>
    c458:	cbz	w0, c530 <get_roff_encoding@@Base+0x1b8>
    c45c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c460:	add	x0, x0, #0xf09
    c464:	mov	x1, x20
    c468:	bl	a8e0 <strcmp@plt>
    c46c:	cbz	w0, c53c <get_roff_encoding@@Base+0x1c4>
    c470:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c474:	add	x0, x0, #0xf0e
    c478:	mov	x1, x20
    c47c:	bl	a8e0 <strcmp@plt>
    c480:	cbz	w0, c548 <get_roff_encoding@@Base+0x1d0>
    c484:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c488:	add	x0, x0, #0xf12
    c48c:	mov	x1, x20
    c490:	bl	a8e0 <strcmp@plt>
    c494:	cbz	w0, c554 <get_roff_encoding@@Base+0x1dc>
    c498:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c49c:	add	x0, x0, #0xf16
    c4a0:	mov	x1, x20
    c4a4:	bl	a8e0 <strcmp@plt>
    c4a8:	cbz	w0, c560 <get_roff_encoding@@Base+0x1e8>
    c4ac:	adrp	x21, 2f000 <vasnprintf@@Base+0x124c>
    c4b0:	add	x21, x21, #0x138
    c4b4:	b	c56c <get_roff_encoding@@Base+0x1f4>
    c4b8:	adrp	x21, 2f000 <vasnprintf@@Base+0x124c>
    c4bc:	add	x21, x21, #0x138
    c4c0:	b	c580 <get_roff_encoding@@Base+0x208>
    c4c4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c4c8:	add	x8, x8, #0x2b8
    c4cc:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c4d0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c4d4:	add	x8, x8, #0x2d0
    c4d8:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c4dc:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c4e0:	add	x8, x8, #0x2e8
    c4e4:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c4e8:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c4ec:	add	x8, x8, #0x300
    c4f0:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c4f4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c4f8:	add	x8, x8, #0x318
    c4fc:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c500:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c504:	add	x8, x8, #0x330
    c508:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c50c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c510:	add	x8, x8, #0x348
    c514:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c518:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c51c:	add	x8, x8, #0x360
    c520:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c524:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c528:	add	x8, x8, #0x378
    c52c:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c530:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c534:	add	x8, x8, #0x390
    c538:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c53c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c540:	add	x8, x8, #0x3a8
    c544:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c548:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c54c:	add	x8, x8, #0x3c0
    c550:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c554:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c558:	add	x8, x8, #0x3d8
    c55c:	b	c568 <get_roff_encoding@@Base+0x1f0>
    c560:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c564:	add	x8, x8, #0x3f0
    c568:	ldr	x21, [x8, #8]
    c56c:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c570:	add	x1, x1, #0xb25
    c574:	mov	x0, x20
    c578:	bl	a8e0 <strcmp@plt>
    c57c:	cbz	w0, c598 <get_roff_encoding@@Base+0x220>
    c580:	cmp	x21, #0x0
    c584:	csel	x0, x19, x21, eq  // eq = none
    c588:	ldp	x20, x19, [sp, #32]
    c58c:	ldp	x22, x21, [sp, #16]
    c590:	ldp	x29, x30, [sp], #48
    c594:	ret
    c598:	adrp	x22, 42000 <vasnprintf@@Base+0x1424c>
    c59c:	ldr	x22, [x22, #3832]
    c5a0:	ldr	x8, [x22]
    c5a4:	cbz	x8, c5b4 <get_roff_encoding@@Base+0x23c>
    c5a8:	ldrb	w8, [x8]
    c5ac:	cbnz	w8, c580 <get_roff_encoding@@Base+0x208>
    c5b0:	b	c5f4 <get_roff_encoding@@Base+0x27c>
    c5b4:	adrp	x20, 2e000 <vasnprintf@@Base+0x24c>
    c5b8:	add	x20, x20, #0xad6
    c5bc:	mov	x0, x20
    c5c0:	bl	ad00 <pathsearch_executable@plt>
    c5c4:	tbnz	w0, #0, c5e8 <get_roff_encoding@@Base+0x270>
    c5c8:	adrp	x20, 2e000 <vasnprintf@@Base+0x24c>
    c5cc:	add	x20, x20, #0xad7
    c5d0:	mov	x0, x20
    c5d4:	bl	ad00 <pathsearch_executable@plt>
    c5d8:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
    c5dc:	add	x8, x8, #0x9c
    c5e0:	tst	w0, #0x1
    c5e4:	csel	x20, x20, x8, ne  // ne = any
    c5e8:	ldrb	w8, [x20]
    c5ec:	str	x20, [x22]
    c5f0:	cbnz	w8, c580 <get_roff_encoding@@Base+0x208>
    c5f4:	bl	acc0 <get_locale_charset@plt>
    c5f8:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c5fc:	add	x1, x1, #0xafe
    c600:	bl	a8e0 <strcmp@plt>
    c604:	cbnz	w0, c580 <get_roff_encoding@@Base+0x208>
    c608:	mov	x1, xzr
    c60c:	bl	ae90 <setlocale@plt>
    c610:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c614:	add	x1, x1, #0xb2a
    c618:	mov	w2, #0x5                   	// #5
    c61c:	mov	x20, x0
    c620:	bl	a600 <strncmp@plt>
    c624:	cbz	w0, c6a0 <get_roff_encoding@@Base+0x328>
    c628:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c62c:	add	x1, x1, #0xb30
    c630:	mov	w2, #0x5                   	// #5
    c634:	mov	x0, x20
    c638:	bl	a600 <strncmp@plt>
    c63c:	cbz	w0, c6a0 <get_roff_encoding@@Base+0x328>
    c640:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c644:	add	x1, x1, #0xb36
    c648:	mov	w2, #0x5                   	// #5
    c64c:	mov	x0, x20
    c650:	bl	a600 <strncmp@plt>
    c654:	cbz	w0, c6a0 <get_roff_encoding@@Base+0x328>
    c658:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c65c:	add	x1, x1, #0xb3c
    c660:	mov	w2, #0x5                   	// #5
    c664:	mov	x0, x20
    c668:	bl	a600 <strncmp@plt>
    c66c:	cbz	w0, c6a0 <get_roff_encoding@@Base+0x328>
    c670:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c674:	add	x1, x1, #0xb42
    c678:	mov	w2, #0x5                   	// #5
    c67c:	mov	x0, x20
    c680:	bl	a600 <strncmp@plt>
    c684:	cbz	w0, c6a0 <get_roff_encoding@@Base+0x328>
    c688:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    c68c:	add	x1, x1, #0xb48
    c690:	mov	w2, #0x5                   	// #5
    c694:	mov	x0, x20
    c698:	bl	a600 <strncmp@plt>
    c69c:	cbnz	w0, c580 <get_roff_encoding@@Base+0x208>
    c6a0:	adrp	x21, 2e000 <vasnprintf@@Base+0x24c>
    c6a4:	add	x21, x21, #0xafe
    c6a8:	b	c580 <get_roff_encoding@@Base+0x208>

000000000000c6ac <is_roff_device@@Base>:
    c6ac:	stp	x29, x30, [sp, #-32]!
    c6b0:	str	x19, [sp, #16]
    c6b4:	mov	x19, x0
    c6b8:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c6bc:	add	x0, x0, #0xb1f
    c6c0:	mov	x1, x19
    c6c4:	mov	x29, sp
    c6c8:	bl	a8e0 <strcmp@plt>
    c6cc:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c6d0:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c6d4:	add	x0, x0, #0xedf
    c6d8:	mov	x1, x19
    c6dc:	bl	a8e0 <strcmp@plt>
    c6e0:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c6e4:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c6e8:	add	x0, x0, #0xb25
    c6ec:	mov	x1, x19
    c6f0:	bl	a8e0 <strcmp@plt>
    c6f4:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c6f8:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c6fc:	add	x0, x0, #0xed8
    c700:	mov	x1, x19
    c704:	bl	a8e0 <strcmp@plt>
    c708:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c70c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c710:	add	x0, x0, #0xee6
    c714:	mov	x1, x19
    c718:	bl	a8e0 <strcmp@plt>
    c71c:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c720:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c724:	add	x0, x0, #0xeed
    c728:	mov	x1, x19
    c72c:	bl	a8e0 <strcmp@plt>
    c730:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c734:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c738:	add	x0, x0, #0xef1
    c73c:	mov	x1, x19
    c740:	bl	a8e0 <strcmp@plt>
    c744:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c748:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c74c:	add	x0, x0, #0xef8
    c750:	mov	x1, x19
    c754:	bl	a8e0 <strcmp@plt>
    c758:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c75c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c760:	add	x0, x0, #0xefd
    c764:	mov	x1, x19
    c768:	bl	a8e0 <strcmp@plt>
    c76c:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c770:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c774:	add	x0, x0, #0xf05
    c778:	mov	x1, x19
    c77c:	bl	a8e0 <strcmp@plt>
    c780:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c784:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c788:	add	x0, x0, #0xf09
    c78c:	mov	x1, x19
    c790:	bl	a8e0 <strcmp@plt>
    c794:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c798:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c79c:	add	x0, x0, #0xf0e
    c7a0:	mov	x1, x19
    c7a4:	bl	a8e0 <strcmp@plt>
    c7a8:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c7ac:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c7b0:	add	x0, x0, #0xf12
    c7b4:	mov	x1, x19
    c7b8:	bl	a8e0 <strcmp@plt>
    c7bc:	cbz	w0, c7dc <is_roff_device@@Base+0x130>
    c7c0:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c7c4:	add	x0, x0, #0xf16
    c7c8:	mov	x1, x19
    c7cc:	bl	a8e0 <strcmp@plt>
    c7d0:	cmp	w0, #0x0
    c7d4:	cset	w0, eq  // eq = none
    c7d8:	b	c7e0 <is_roff_device@@Base+0x134>
    c7dc:	mov	w0, #0x1                   	// #1
    c7e0:	ldr	x19, [sp, #16]
    c7e4:	ldp	x29, x30, [sp], #32
    c7e8:	ret

000000000000c7ec <get_output_encoding@@Base>:
    c7ec:	stp	x29, x30, [sp, #-32]!
    c7f0:	str	x19, [sp, #16]
    c7f4:	mov	x19, x0
    c7f8:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c7fc:	add	x0, x0, #0xb1f
    c800:	mov	x1, x19
    c804:	mov	x29, sp
    c808:	bl	a8e0 <strcmp@plt>
    c80c:	cbz	w0, c91c <get_output_encoding@@Base+0x130>
    c810:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c814:	add	x0, x0, #0xedf
    c818:	mov	x1, x19
    c81c:	bl	a8e0 <strcmp@plt>
    c820:	cbz	w0, c928 <get_output_encoding@@Base+0x13c>
    c824:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c828:	add	x0, x0, #0xb25
    c82c:	mov	x1, x19
    c830:	bl	a8e0 <strcmp@plt>
    c834:	cbz	w0, c934 <get_output_encoding@@Base+0x148>
    c838:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c83c:	add	x0, x0, #0xed8
    c840:	mov	x1, x19
    c844:	bl	a8e0 <strcmp@plt>
    c848:	cbz	w0, c940 <get_output_encoding@@Base+0x154>
    c84c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c850:	add	x0, x0, #0xee6
    c854:	mov	x1, x19
    c858:	bl	a8e0 <strcmp@plt>
    c85c:	cbz	w0, c94c <get_output_encoding@@Base+0x160>
    c860:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c864:	add	x0, x0, #0xeed
    c868:	mov	x1, x19
    c86c:	bl	a8e0 <strcmp@plt>
    c870:	cbz	w0, c958 <get_output_encoding@@Base+0x16c>
    c874:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c878:	add	x0, x0, #0xef1
    c87c:	mov	x1, x19
    c880:	bl	a8e0 <strcmp@plt>
    c884:	cbz	w0, c964 <get_output_encoding@@Base+0x178>
    c888:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c88c:	add	x0, x0, #0xef8
    c890:	mov	x1, x19
    c894:	bl	a8e0 <strcmp@plt>
    c898:	cbz	w0, c970 <get_output_encoding@@Base+0x184>
    c89c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c8a0:	add	x0, x0, #0xefd
    c8a4:	mov	x1, x19
    c8a8:	bl	a8e0 <strcmp@plt>
    c8ac:	cbz	w0, c97c <get_output_encoding@@Base+0x190>
    c8b0:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c8b4:	add	x0, x0, #0xf05
    c8b8:	mov	x1, x19
    c8bc:	bl	a8e0 <strcmp@plt>
    c8c0:	cbz	w0, c988 <get_output_encoding@@Base+0x19c>
    c8c4:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c8c8:	add	x0, x0, #0xf09
    c8cc:	mov	x1, x19
    c8d0:	bl	a8e0 <strcmp@plt>
    c8d4:	cbz	w0, c994 <get_output_encoding@@Base+0x1a8>
    c8d8:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c8dc:	add	x0, x0, #0xf0e
    c8e0:	mov	x1, x19
    c8e4:	bl	a8e0 <strcmp@plt>
    c8e8:	cbz	w0, c9a0 <get_output_encoding@@Base+0x1b4>
    c8ec:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c8f0:	add	x0, x0, #0xf12
    c8f4:	mov	x1, x19
    c8f8:	bl	a8e0 <strcmp@plt>
    c8fc:	cbz	w0, c9ac <get_output_encoding@@Base+0x1c0>
    c900:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c904:	add	x0, x0, #0xf16
    c908:	mov	x1, x19
    c90c:	bl	a8e0 <strcmp@plt>
    c910:	cbz	w0, c9b8 <get_output_encoding@@Base+0x1cc>
    c914:	mov	x0, xzr
    c918:	b	c9c4 <get_output_encoding@@Base+0x1d8>
    c91c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c920:	add	x8, x8, #0x2b8
    c924:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c928:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c92c:	add	x8, x8, #0x2d0
    c930:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c934:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c938:	add	x8, x8, #0x2e8
    c93c:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c940:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c944:	add	x8, x8, #0x300
    c948:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c94c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c950:	add	x8, x8, #0x318
    c954:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c958:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c95c:	add	x8, x8, #0x330
    c960:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c964:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c968:	add	x8, x8, #0x348
    c96c:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c970:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c974:	add	x8, x8, #0x360
    c978:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c97c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c980:	add	x8, x8, #0x378
    c984:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c988:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c98c:	add	x8, x8, #0x390
    c990:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c994:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c998:	add	x8, x8, #0x3a8
    c99c:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c9a0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c9a4:	add	x8, x8, #0x3c0
    c9a8:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c9ac:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c9b0:	add	x8, x8, #0x3d8
    c9b4:	b	c9c0 <get_output_encoding@@Base+0x1d4>
    c9b8:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    c9bc:	add	x8, x8, #0x3f0
    c9c0:	ldr	x0, [x8, #16]
    c9c4:	ldr	x19, [sp, #16]
    c9c8:	ldp	x29, x30, [sp], #32
    c9cc:	ret

000000000000c9d0 <get_less_charset@@Base>:
    c9d0:	stp	x29, x30, [sp, #-32]!
    c9d4:	str	x19, [sp, #16]
    c9d8:	mov	x29, sp
    c9dc:	cbz	x0, ca70 <get_less_charset@@Base+0xa0>
    c9e0:	mov	x19, x0
    c9e4:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    c9e8:	add	x0, x0, #0xb10
    c9ec:	mov	x1, x19
    c9f0:	bl	a8e0 <strcmp@plt>
    c9f4:	cbz	w0, ca7c <get_less_charset@@Base+0xac>
    c9f8:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    c9fc:	add	x0, x0, #0x143
    ca00:	mov	x1, x19
    ca04:	bl	a8e0 <strcmp@plt>
    ca08:	cbz	w0, ca88 <get_less_charset@@Base+0xb8>
    ca0c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ca10:	add	x0, x0, #0xafe
    ca14:	mov	x1, x19
    ca18:	bl	a8e0 <strcmp@plt>
    ca1c:	cbz	w0, ca94 <get_less_charset@@Base+0xc4>
    ca20:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ca24:	add	x0, x0, #0xc5f
    ca28:	mov	x1, x19
    ca2c:	bl	a8e0 <strcmp@plt>
    ca30:	cbz	w0, caa0 <get_less_charset@@Base+0xd0>
    ca34:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ca38:	add	x0, x0, #0xc8e
    ca3c:	mov	x1, x19
    ca40:	bl	a8e0 <strcmp@plt>
    ca44:	cbz	w0, caac <get_less_charset@@Base+0xdc>
    ca48:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ca4c:	add	x0, x0, #0xcc8
    ca50:	mov	x1, x19
    ca54:	bl	a8e0 <strcmp@plt>
    ca58:	cbz	w0, cab8 <get_less_charset@@Base+0xe8>
    ca5c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ca60:	add	x0, x0, #0xcf2
    ca64:	mov	x1, x19
    ca68:	bl	a8e0 <strcmp@plt>
    ca6c:	cbz	w0, cac4 <get_less_charset@@Base+0xf4>
    ca70:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    ca74:	add	x0, x0, #0x14e
    ca78:	b	cad0 <get_less_charset@@Base+0x100>
    ca7c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    ca80:	add	x8, x8, #0x420
    ca84:	b	cacc <get_less_charset@@Base+0xfc>
    ca88:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    ca8c:	add	x8, x8, #0x438
    ca90:	b	cacc <get_less_charset@@Base+0xfc>
    ca94:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    ca98:	add	x8, x8, #0x450
    ca9c:	b	cacc <get_less_charset@@Base+0xfc>
    caa0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    caa4:	add	x8, x8, #0x468
    caa8:	b	cacc <get_less_charset@@Base+0xfc>
    caac:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cab0:	add	x8, x8, #0x480
    cab4:	b	cacc <get_less_charset@@Base+0xfc>
    cab8:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cabc:	add	x8, x8, #0x498
    cac0:	b	cacc <get_less_charset@@Base+0xfc>
    cac4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cac8:	add	x8, x8, #0x4b0
    cacc:	ldr	x0, [x8, #8]
    cad0:	ldr	x19, [sp, #16]
    cad4:	ldp	x29, x30, [sp], #32
    cad8:	ret

000000000000cadc <get_jless_charset@@Base>:
    cadc:	stp	x29, x30, [sp, #-32]!
    cae0:	str	x19, [sp, #16]
    cae4:	mov	x29, sp
    cae8:	cbz	x0, cbd8 <get_jless_charset@@Base+0xfc>
    caec:	mov	x19, x0
    caf0:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    caf4:	add	x0, x0, #0xb10
    caf8:	mov	x1, x19
    cafc:	bl	a8e0 <strcmp@plt>
    cb00:	cbz	w0, cb84 <get_jless_charset@@Base+0xa8>
    cb04:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    cb08:	add	x0, x0, #0x143
    cb0c:	mov	x1, x19
    cb10:	bl	a8e0 <strcmp@plt>
    cb14:	cbz	w0, cb90 <get_jless_charset@@Base+0xb4>
    cb18:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    cb1c:	add	x0, x0, #0xafe
    cb20:	mov	x1, x19
    cb24:	bl	a8e0 <strcmp@plt>
    cb28:	cbz	w0, cb9c <get_jless_charset@@Base+0xc0>
    cb2c:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    cb30:	add	x0, x0, #0xc5f
    cb34:	mov	x1, x19
    cb38:	bl	a8e0 <strcmp@plt>
    cb3c:	cbz	w0, cba8 <get_jless_charset@@Base+0xcc>
    cb40:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    cb44:	add	x0, x0, #0xc8e
    cb48:	mov	x1, x19
    cb4c:	bl	a8e0 <strcmp@plt>
    cb50:	cbz	w0, cbb4 <get_jless_charset@@Base+0xd8>
    cb54:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    cb58:	add	x0, x0, #0xcc8
    cb5c:	mov	x1, x19
    cb60:	bl	a8e0 <strcmp@plt>
    cb64:	cbz	w0, cbc0 <get_jless_charset@@Base+0xe4>
    cb68:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    cb6c:	add	x0, x0, #0xcf2
    cb70:	mov	x1, x19
    cb74:	bl	a8e0 <strcmp@plt>
    cb78:	cbz	w0, cbcc <get_jless_charset@@Base+0xf0>
    cb7c:	mov	x0, xzr
    cb80:	b	cbd8 <get_jless_charset@@Base+0xfc>
    cb84:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cb88:	add	x8, x8, #0x420
    cb8c:	b	cbd4 <get_jless_charset@@Base+0xf8>
    cb90:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cb94:	add	x8, x8, #0x438
    cb98:	b	cbd4 <get_jless_charset@@Base+0xf8>
    cb9c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cba0:	add	x8, x8, #0x450
    cba4:	b	cbd4 <get_jless_charset@@Base+0xf8>
    cba8:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cbac:	add	x8, x8, #0x468
    cbb0:	b	cbd4 <get_jless_charset@@Base+0xf8>
    cbb4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cbb8:	add	x8, x8, #0x480
    cbbc:	b	cbd4 <get_jless_charset@@Base+0xf8>
    cbc0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cbc4:	add	x8, x8, #0x498
    cbc8:	b	cbd4 <get_jless_charset@@Base+0xf8>
    cbcc:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    cbd0:	add	x8, x8, #0x4b0
    cbd4:	ldr	x0, [x8, #16]
    cbd8:	ldr	x19, [sp, #16]
    cbdc:	ldp	x29, x30, [sp], #32
    cbe0:	ret

000000000000cbe4 <check_preprocessor_encoding@@Base>:
    cbe4:	stp	x29, x30, [sp, #-96]!
    cbe8:	stp	x28, x27, [sp, #16]
    cbec:	stp	x26, x25, [sp, #32]
    cbf0:	stp	x24, x23, [sp, #48]
    cbf4:	stp	x22, x21, [sp, #64]
    cbf8:	stp	x20, x19, [sp, #80]
    cbfc:	mov	x29, sp
    cc00:	mov	x19, x2
    cc04:	mov	x20, x1
    cc08:	bl	aaa0 <pipeline_peekline@plt>
    cc0c:	cbz	x0, ccf4 <check_preprocessor_encoding@@Base+0x110>
    cc10:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    cc14:	add	x1, x1, #0xb4e
    cc18:	mov	w2, #0x4                   	// #4
    cc1c:	mov	x21, x0
    cc20:	bl	a600 <strncmp@plt>
    cc24:	cbz	w0, cc40 <check_preprocessor_encoding@@Base+0x5c>
    cc28:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    cc2c:	add	x1, x1, #0xb53
    cc30:	mov	w2, #0x4                   	// #4
    cc34:	mov	x0, x21
    cc38:	bl	a600 <strncmp@plt>
    cc3c:	cbnz	w0, ccf4 <check_preprocessor_encoding@@Base+0x110>
    cc40:	mov	w1, #0xa                   	// #10
    cc44:	mov	x0, x21
    cc48:	bl	aa50 <strchr@plt>
    cc4c:	mov	x22, x0
    cc50:	add	x23, x21, #0x4
    cc54:	cbnz	x0, cc64 <check_preprocessor_encoding@@Base+0x80>
    cc58:	mov	x0, x23
    cc5c:	bl	a280 <strlen@plt>
    cc60:	add	x22, x23, x0
    cc64:	adrp	x2, 2e000 <vasnprintf@@Base+0x24c>
    cc68:	sub	x1, x22, x23
    cc6c:	add	x2, x2, #0xb58
    cc70:	mov	w3, #0x3                   	// #3
    cc74:	mov	x0, x23
    cc78:	bl	a7e0 <memmem@plt>
    cc7c:	cbz	x0, ccf4 <check_preprocessor_encoding@@Base+0x110>
    cc80:	add	x25, x0, #0x3
    cc84:	cmp	x25, x22
    cc88:	b.cs	ccf4 <check_preprocessor_encoding@@Base+0x110>  // b.hs, b.nlast
    cc8c:	adrp	x24, 2e000 <vasnprintf@@Base+0x24c>
    cc90:	add	x24, x24, #0xb5c
    cc94:	ldrb	w8, [x25]
    cc98:	cmp	w8, #0x20
    cc9c:	b.eq	cca8 <check_preprocessor_encoding@@Base+0xc4>  // b.none
    cca0:	cbnz	w8, ccb4 <check_preprocessor_encoding@@Base+0xd0>
    cca4:	b	ccf4 <check_preprocessor_encoding@@Base+0x110>
    cca8:	ldrb	w8, [x25, #1]!
    ccac:	cmp	w8, #0x20
    ccb0:	b.eq	cca8 <check_preprocessor_encoding@@Base+0xc4>  // b.none
    ccb4:	mov	w2, #0x7                   	// #7
    ccb8:	mov	x0, x25
    ccbc:	mov	x1, x24
    ccc0:	bl	a600 <strncmp@plt>
    ccc4:	cbz	w0, cd18 <check_preprocessor_encoding@@Base+0x134>
    ccc8:	sub	x2, x22, x25
    cccc:	mov	w1, #0x3b                  	// #59
    ccd0:	mov	x0, x25
    ccd4:	bl	ab70 <memchr@plt>
    ccd8:	cmp	x0, #0x0
    ccdc:	csinc	x25, xzr, x0, eq  // eq = none
    cce0:	mov	x23, xzr
    cce4:	cbz	x25, ccf8 <check_preprocessor_encoding@@Base+0x114>
    cce8:	cmp	x25, x22
    ccec:	b.cc	cc94 <check_preprocessor_encoding@@Base+0xb0>  // b.lo, b.ul, b.last
    ccf0:	b	ccf8 <check_preprocessor_encoding@@Base+0x114>
    ccf4:	mov	x23, xzr
    ccf8:	mov	x0, x23
    ccfc:	ldp	x20, x19, [sp, #80]
    cd00:	ldp	x22, x21, [sp, #64]
    cd04:	ldp	x24, x23, [sp, #48]
    cd08:	ldp	x26, x25, [sp, #32]
    cd0c:	ldp	x28, x27, [sp, #16]
    cd10:	ldp	x29, x30, [sp], #96
    cd14:	ret
    cd18:	add	x24, x25, #0x6
    cd1c:	ldrb	w8, [x24, #1]!
    cd20:	cmp	w8, #0x20
    cd24:	b.eq	cd1c <check_preprocessor_encoding@@Base+0x138>  // b.none
    cd28:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    cd2c:	add	x1, x1, #0xb64
    cd30:	mov	x0, x24
    cd34:	bl	aa30 <strspn@plt>
    cd38:	mov	x25, x0
    cd3c:	mov	x0, x24
    cd40:	mov	x1, x25
    cd44:	bl	abd0 <xstrndup@plt>
    cd48:	mov	x23, x0
    cd4c:	bl	a280 <strlen@plt>
    cd50:	cmp	x0, #0x5
    cd54:	b.cc	cdc0 <check_preprocessor_encoding@@Base+0x1dc>  // b.lo, b.ul, b.last
    cd58:	add	x28, x23, x0
    cd5c:	sub	x27, x28, #0x4
    cd60:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    cd64:	mov	x26, x0
    cd68:	add	x1, x1, #0xf36
    cd6c:	mov	x0, x27
    cd70:	bl	a700 <strcasecmp@plt>
    cd74:	cbnz	w0, cd80 <check_preprocessor_encoding@@Base+0x19c>
    cd78:	add	x8, x26, x23
    cd7c:	sturb	wzr, [x8, #-4]
    cd80:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    cd84:	add	x1, x1, #0xf3b
    cd88:	mov	x0, x27
    cd8c:	bl	a700 <strcasecmp@plt>
    cd90:	cbnz	w0, cd9c <check_preprocessor_encoding@@Base+0x1b8>
    cd94:	add	x8, x26, x23
    cd98:	sturb	wzr, [x8, #-4]
    cd9c:	cmp	x26, #0x6
    cda0:	b.cc	cdc0 <check_preprocessor_encoding@@Base+0x1dc>  // b.lo, b.ul, b.last
    cda4:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    cda8:	sub	x0, x28, #0x5
    cdac:	add	x1, x1, #0xf40
    cdb0:	bl	a700 <strcasecmp@plt>
    cdb4:	cbnz	w0, cdc0 <check_preprocessor_encoding@@Base+0x1dc>
    cdb8:	add	x8, x26, x23
    cdbc:	sturb	wzr, [x8, #-5]
    cdc0:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    cdc4:	adrp	x26, 42000 <vasnprintf@@Base+0x1424c>
    cdc8:	add	x0, x0, #0xf46
    cdcc:	add	x26, x26, #0x4f0
    cdd0:	mov	x1, x23
    cdd4:	bl	a700 <strcasecmp@plt>
    cdd8:	cbz	w0, cde8 <check_preprocessor_encoding@@Base+0x204>
    cddc:	ldr	x0, [x26], #16
    cde0:	cbnz	x0, cdd0 <check_preprocessor_encoding@@Base+0x1ec>
    cde4:	b	cdfc <check_preprocessor_encoding@@Base+0x218>
    cde8:	mov	x0, x23
    cdec:	bl	a960 <free@plt>
    cdf0:	ldur	x0, [x26, #-8]
    cdf4:	bl	a670 <xstrdup@plt>
    cdf8:	mov	x23, x0
    cdfc:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ce00:	add	x0, x0, #0xbaa
    ce04:	mov	x1, x23
    ce08:	bl	a4c0 <debug@plt>
    ce0c:	cbz	x20, ccf8 <check_preprocessor_encoding@@Base+0x114>
    ce10:	cbz	x19, ccf8 <check_preprocessor_encoding@@Base+0x114>
    ce14:	cbz	x23, ccf8 <check_preprocessor_encoding@@Base+0x114>
    ce18:	mov	x0, x23
    ce1c:	mov	x1, x20
    ce20:	bl	a700 <strcasecmp@plt>
    ce24:	cbz	w0, ccf8 <check_preprocessor_encoding@@Base+0x114>
    ce28:	cbz	x22, ce54 <check_preprocessor_encoding@@Base+0x270>
    ce2c:	add	x5, x24, x25
    ce30:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ce34:	sub	w1, w24, w21
    ce38:	sub	w4, w22, w5
    ce3c:	add	x0, x0, #0xc24
    ce40:	mov	x2, x21
    ce44:	mov	x3, x20
    ce48:	bl	a9c0 <xasprintf@plt>
    ce4c:	str	x0, [x19]
    ce50:	b	ccf8 <check_preprocessor_encoding@@Base+0x114>
    ce54:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    ce58:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
    ce5c:	adrp	x3, 2e000 <vasnprintf@@Base+0x24c>
    ce60:	add	x0, x0, #0xbc5
    ce64:	add	x1, x1, #0xbd3
    ce68:	add	x3, x3, #0xbdf
    ce6c:	mov	w2, #0x39a                 	// #922
    ce70:	bl	ad70 <__assert_fail@plt>

000000000000ce74 <string_equals@@Base>:
    ce74:	stp	x29, x30, [sp, #-16]!
    ce78:	mov	x29, sp
    ce7c:	bl	a8e0 <strcmp@plt>
    ce80:	cmp	w0, #0x0
    ce84:	cset	w0, eq  // eq = none
    ce88:	ldp	x29, x30, [sp], #16
    ce8c:	ret

000000000000ce90 <string_hash@@Base>:
    ce90:	stp	x29, x30, [sp, #-32]!
    ce94:	str	x19, [sp, #16]
    ce98:	mov	x29, sp
    ce9c:	mov	x19, x0
    cea0:	bl	a280 <strlen@plt>
    cea4:	mov	x1, x0
    cea8:	mov	x0, x19
    ceac:	ldr	x19, [sp, #16]
    ceb0:	ldp	x29, x30, [sp], #32
    ceb4:	b	a8b0 <hash_pjw_bare@plt>

000000000000ceb8 <plain_free@@Base>:
    ceb8:	b	a960 <free@plt>

000000000000cebc <new_string_list@@Base>:
    cebc:	stp	x29, x30, [sp, #-16]!
    cec0:	and	w4, w1, #0x1
    cec4:	adrp	x1, 42000 <vasnprintf@@Base+0x1424c>
    cec8:	adrp	x2, 42000 <vasnprintf@@Base+0x1424c>
    cecc:	adrp	x3, 42000 <vasnprintf@@Base+0x1424c>
    ced0:	ldr	x8, [x0]
    ced4:	ldr	x1, [x1, #3824]
    ced8:	ldr	x2, [x2, #3864]
    cedc:	ldr	x3, [x3, #4000]
    cee0:	mov	x29, sp
    cee4:	blr	x8
    cee8:	cbz	x0, cef4 <new_string_list@@Base+0x38>
    ceec:	ldp	x29, x30, [sp], #16
    cef0:	ret
    cef4:	bl	a7d0 <xalloc_die@plt>

000000000000cef8 <new_string_map@@Base>:
    cef8:	stp	x29, x30, [sp, #-16]!
    cefc:	mov	x4, x1
    cf00:	adrp	x1, 42000 <vasnprintf@@Base+0x1424c>
    cf04:	adrp	x2, 42000 <vasnprintf@@Base+0x1424c>
    cf08:	adrp	x3, 42000 <vasnprintf@@Base+0x1424c>
    cf0c:	ldr	x8, [x0]
    cf10:	ldr	x1, [x1, #3824]
    cf14:	ldr	x2, [x2, #3864]
    cf18:	ldr	x3, [x3, #4000]
    cf1c:	mov	x29, sp
    cf20:	blr	x8
    cf24:	cbz	x0, cf30 <new_string_map@@Base+0x38>
    cf28:	ldp	x29, x30, [sp], #16
    cf2c:	ret
    cf30:	bl	a7d0 <xalloc_die@plt>

000000000000cf34 <new_string_set@@Base>:
    cf34:	stp	x29, x30, [sp, #-16]!
    cf38:	adrp	x1, 42000 <vasnprintf@@Base+0x1424c>
    cf3c:	adrp	x2, 42000 <vasnprintf@@Base+0x1424c>
    cf40:	adrp	x3, 42000 <vasnprintf@@Base+0x1424c>
    cf44:	ldr	x8, [x0]
    cf48:	ldr	x1, [x1, #3824]
    cf4c:	ldr	x2, [x2, #3864]
    cf50:	ldr	x3, [x3, #4000]
    cf54:	mov	x29, sp
    cf58:	blr	x8
    cf5c:	cbz	x0, cf68 <new_string_set@@Base+0x34>
    cf60:	ldp	x29, x30, [sp], #16
    cf64:	ret
    cf68:	bl	a7d0 <xalloc_die@plt>

000000000000cf6c <get_line_length@@Base>:
    cf6c:	stp	x29, x30, [sp, #-48]!
    cf70:	str	x21, [sp, #16]
    cf74:	adrp	x21, 43000 <base_len@@Base+0x2ea54>
    cf78:	ldr	w0, [x21, #1656]
    cf7c:	stp	x20, x19, [sp, #32]
    cf80:	mov	x29, sp
    cf84:	cmn	w0, #0x1
    cf88:	b.ne	d020 <get_line_length@@Base+0xb4>  // b.any
    cf8c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    cf90:	mov	w8, #0x50                  	// #80
    cf94:	add	x0, x0, #0x156
    cf98:	str	w8, [x21, #1656]
    cf9c:	bl	ada0 <getenv@plt>
    cfa0:	cbz	x0, cfb8 <get_line_length@@Base+0x4c>
    cfa4:	mov	w2, #0xa                   	// #10
    cfa8:	mov	x1, xzr
    cfac:	bl	a930 <strtol@plt>
    cfb0:	cmp	w0, #0x1
    cfb4:	b.ge	d01c <get_line_length@@Base+0xb0>  // b.tcont
    cfb8:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    cfbc:	add	x0, x0, #0x15f
    cfc0:	bl	ada0 <getenv@plt>
    cfc4:	cbz	x0, cfdc <get_line_length@@Base+0x70>
    cfc8:	mov	w2, #0xa                   	// #10
    cfcc:	mov	x1, xzr
    cfd0:	bl	a930 <strtol@plt>
    cfd4:	cmp	w0, #0x1
    cfd8:	b.ge	d01c <get_line_length@@Base+0xb0>  // b.tcont
    cfdc:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    cfe0:	add	x0, x0, #0x167
    cfe4:	mov	w1, wzr
    cfe8:	bl	a590 <open@plt>
    cfec:	tbnz	w0, #31, d030 <get_line_length@@Base+0xc4>
    cff0:	add	x2, x29, #0x18
    cff4:	mov	w1, #0x5413                	// #21523
    cff8:	mov	w19, w0
    cffc:	bl	aa40 <rpl_ioctl@plt>
    d000:	mov	w20, w0
    d004:	mov	w0, w19
    d008:	bl	a790 <close@plt>
    d00c:	cbnz	w20, d064 <get_line_length@@Base+0xf8>
    d010:	ldrh	w0, [x29, #26]
    d014:	cbnz	w0, d01c <get_line_length@@Base+0xb0>
    d018:	mov	w0, #0x50                  	// #80
    d01c:	str	w0, [x21, #1656]
    d020:	ldp	x20, x19, [sp, #32]
    d024:	ldr	x21, [sp, #16]
    d028:	ldp	x29, x30, [sp], #48
    d02c:	ret
    d030:	mov	w0, #0x1                   	// #1
    d034:	mov	w19, #0x1                   	// #1
    d038:	bl	abb0 <isatty@plt>
    d03c:	cbnz	w0, d04c <get_line_length@@Base+0xe0>
    d040:	bl	abb0 <isatty@plt>
    d044:	mov	w19, wzr
    d048:	cbz	w0, d018 <get_line_length@@Base+0xac>
    d04c:	add	x2, x29, #0x18
    d050:	mov	w1, #0x5413                	// #21523
    d054:	mov	w0, w19
    d058:	bl	aa40 <rpl_ioctl@plt>
    d05c:	mov	w20, w0
    d060:	cbz	w20, d010 <get_line_length@@Base+0xa4>
    d064:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d068:	add	x0, x0, #0x170
    d06c:	bl	a2d0 <perror@plt>
    d070:	b	d018 <get_line_length@@Base+0xac>

000000000000d074 <order_files@@Base>:
    d074:	sub	sp, sp, #0x180
    d078:	stp	x29, x30, [sp, #288]
    d07c:	stp	x28, x27, [sp, #304]
    d080:	stp	x26, x25, [sp, #320]
    d084:	stp	x24, x23, [sp, #336]
    d088:	stp	x22, x21, [sp, #352]
    d08c:	stp	x20, x19, [sp, #368]
    d090:	ldr	x20, [x1]
    d094:	mov	x19, x1
    d098:	mov	w1, #0x4000                	// #16384
    d09c:	movk	w1, #0x20, lsl #16
    d0a0:	add	x29, sp, #0x120
    d0a4:	bl	a590 <open@plt>
    d0a8:	tbnz	w0, #31, d27c <order_files@@Base+0x208>
    d0ac:	sub	x1, x29, #0x80
    d0b0:	mov	w21, w0
    d0b4:	bl	a620 <fstatfs@plt>
    d0b8:	tbnz	w0, #31, d274 <order_files@@Base+0x200>
    d0bc:	adrp	x0, 42000 <vasnprintf@@Base+0x1424c>
    d0c0:	ldr	x0, [x0, #3912]
    d0c4:	adrp	x1, 42000 <vasnprintf@@Base+0x1424c>
    d0c8:	adrp	x2, 42000 <vasnprintf@@Base+0x1424c>
    d0cc:	adrp	x4, 42000 <vasnprintf@@Base+0x1424c>
    d0d0:	ldr	x8, [x0]
    d0d4:	ldr	x1, [x1, #3824]
    d0d8:	ldr	x2, [x2, #3864]
    d0dc:	ldr	x4, [x4, #4000]
    d0e0:	mov	x3, xzr
    d0e4:	blr	x8
    d0e8:	cbz	x0, d29c <order_files@@Base+0x228>
    d0ec:	adrp	x26, 42000 <vasnprintf@@Base+0x1424c>
    d0f0:	ldr	x26, [x26, #3984]
    d0f4:	mov	w1, wzr
    d0f8:	str	x0, [x26]
    d0fc:	adrp	x0, 42000 <vasnprintf@@Base+0x1424c>
    d100:	ldr	x0, [x0, #3896]
    d104:	bl	ab90 <new_string_list@plt>
    d108:	ldr	x8, [x20]
    d10c:	mov	x22, x0
    d110:	mov	x0, x20
    d114:	ldr	x9, [x8, #160]
    d118:	add	x8, sp, #0x60
    d11c:	blr	x9
    d120:	ldr	x8, [sp, #96]
    d124:	add	x0, sp, #0x60
    d128:	sub	x1, x29, #0x88
    d12c:	add	x2, sp, #0x58
    d130:	ldr	x8, [x8, #176]
    d134:	blr	x8
    d138:	tbz	w0, #0, d230 <order_files@@Base+0x1bc>
    d13c:	adrp	x23, d000 <get_line_length@@Base+0x94>
    d140:	mov	w27, #0x1                   	// #1
    d144:	add	x23, x23, #0x2a0
    d148:	b	d198 <order_files@@Base+0x124>
    d14c:	tbnz	w0, #31, d29c <order_files@@Base+0x228>
    d150:	mov	w0, w24
    d154:	bl	a790 <close@plt>
    d158:	ldur	x0, [x29, #-136]
    d15c:	bl	a670 <xstrdup@plt>
    d160:	ldr	x8, [x22]
    d164:	mov	x2, x0
    d168:	mov	x0, x22
    d16c:	mov	x1, x23
    d170:	ldr	x8, [x8, #224]
    d174:	blr	x8
    d178:	cbz	x0, d29c <order_files@@Base+0x228>
    d17c:	ldr	x8, [sp, #96]
    d180:	add	x0, sp, #0x60
    d184:	sub	x1, x29, #0x88
    d188:	add	x2, sp, #0x58
    d18c:	ldr	x8, [x8, #176]
    d190:	blr	x8
    d194:	tbz	w0, #0, d230 <order_files@@Base+0x1bc>
    d198:	ldur	x1, [x29, #-136]
    d19c:	mov	w0, w21
    d1a0:	mov	w2, wzr
    d1a4:	bl	ad60 <openat@plt>
    d1a8:	tbnz	w0, #31, d17c <order_files@@Base+0x108>
    d1ac:	ldur	x8, [x29, #-120]
    d1b0:	mov	w1, #0x660b                	// #26123
    d1b4:	movi	v0.2d, #0x0
    d1b8:	mov	x2, sp
    d1bc:	movk	w1, #0xc020, lsl #16
    d1c0:	mov	w24, w0
    d1c4:	stp	q0, q0, [sp]
    d1c8:	str	xzr, [sp, #80]
    d1cc:	stp	q0, q0, [sp, #48]
    d1d0:	str	q0, [sp, #32]
    d1d4:	str	x8, [sp, #8]
    d1d8:	str	wzr, [sp, #16]
    d1dc:	str	w27, [sp, #24]
    d1e0:	bl	aa40 <rpl_ioctl@plt>
    d1e4:	cbnz	w0, d150 <order_files@@Base+0xdc>
    d1e8:	mov	w0, #0x8                   	// #8
    d1ec:	bl	a650 <xmalloc@plt>
    d1f0:	ldr	x8, [sp, #40]
    d1f4:	ldr	x25, [x26]
    d1f8:	ldur	x1, [x29, #-136]
    d1fc:	mov	x2, x0
    d200:	str	x8, [x0]
    d204:	ldr	x8, [x25]
    d208:	sub	x3, x29, #0x8
    d20c:	mov	x0, x25
    d210:	ldr	x8, [x8, #24]
    d214:	blr	x8
    d218:	cbnz	w0, d14c <order_files@@Base+0xd8>
    d21c:	ldr	x8, [x25, #24]
    d220:	cbz	x8, d150 <order_files@@Base+0xdc>
    d224:	ldur	x0, [x29, #-8]
    d228:	blr	x8
    d22c:	b	d150 <order_files@@Base+0xdc>
    d230:	ldr	x8, [sp, #96]
    d234:	add	x0, sp, #0x60
    d238:	ldr	x8, [x8, #184]
    d23c:	blr	x8
    d240:	ldr	x0, [x26]
    d244:	ldr	x8, [x0]
    d248:	ldr	x8, [x8, #40]
    d24c:	blr	x8
    d250:	mov	w0, w21
    d254:	str	xzr, [x26]
    d258:	bl	a790 <close@plt>
    d25c:	ldr	x8, [x20]
    d260:	mov	x0, x20
    d264:	ldr	x8, [x8, #152]
    d268:	blr	x8
    d26c:	str	x22, [x19]
    d270:	b	d27c <order_files@@Base+0x208>
    d274:	mov	w0, w21
    d278:	bl	a790 <close@plt>
    d27c:	ldp	x20, x19, [sp, #368]
    d280:	ldp	x22, x21, [sp, #352]
    d284:	ldp	x24, x23, [sp, #336]
    d288:	ldp	x26, x25, [sp, #320]
    d28c:	ldp	x28, x27, [sp, #304]
    d290:	ldp	x29, x30, [sp, #288]
    d294:	add	sp, sp, #0x180
    d298:	ret
    d29c:	bl	a7d0 <xalloc_die@plt>
    d2a0:	sub	sp, sp, #0x30
    d2a4:	stp	x29, x30, [sp, #16]
    d2a8:	stp	x20, x19, [sp, #32]
    d2ac:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
    d2b0:	ldr	x20, [x20, #3984]
    d2b4:	str	xzr, [sp, #8]
    d2b8:	mov	x19, x1
    d2bc:	mov	x1, x0
    d2c0:	ldr	x8, [x20]
    d2c4:	add	x2, sp, #0x8
    d2c8:	add	x29, sp, #0x10
    d2cc:	ldr	x9, [x8]
    d2d0:	mov	x0, x8
    d2d4:	ldr	x9, [x9, #16]
    d2d8:	blr	x9
    d2dc:	ldr	x0, [x20]
    d2e0:	ldr	x20, [sp, #8]
    d2e4:	str	xzr, [sp, #8]
    d2e8:	add	x2, sp, #0x8
    d2ec:	ldr	x8, [x0]
    d2f0:	mov	x1, x19
    d2f4:	ldr	x8, [x8, #16]
    d2f8:	blr	x8
    d2fc:	ldr	x9, [sp, #8]
    d300:	cbz	x20, d314 <order_files@@Base+0x2a0>
    d304:	ldr	x8, [x20]
    d308:	cbz	x9, d31c <order_files@@Base+0x2a8>
    d30c:	ldr	x9, [x9]
    d310:	b	d320 <order_files@@Base+0x2ac>
    d314:	mov	x8, #0xffffffffffffffff    	// #-1
    d318:	cbnz	x9, d30c <order_files@@Base+0x298>
    d31c:	mov	x9, #0xffffffffffffffff    	// #-1
    d320:	ldp	x20, x19, [sp, #32]
    d324:	ldp	x29, x30, [sp, #16]
    d328:	cmp	x8, x9
    d32c:	cset	w8, hi  // hi = pmore
    d330:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
    d334:	add	sp, sp, #0x30
    d338:	ret

000000000000d33c <pathsearch_executable@@Base>:
    d33c:	sub	sp, sp, #0xe0
    d340:	stp	x20, x19, [sp, #208]
    d344:	mov	x19, x0
    d348:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d34c:	add	x0, x0, #0x182
    d350:	stp	x29, x30, [sp, #128]
    d354:	str	x27, [sp, #144]
    d358:	stp	x26, x25, [sp, #160]
    d35c:	stp	x24, x23, [sp, #176]
    d360:	stp	x22, x21, [sp, #192]
    d364:	add	x29, sp, #0x80
    d368:	bl	ada0 <getenv@plt>
    d36c:	cbz	x0, d3c0 <pathsearch_executable@@Base+0x84>
    d370:	mov	x20, x0
    d374:	mov	w1, #0x2f                  	// #47
    d378:	mov	x0, x19
    d37c:	bl	aa50 <strchr@plt>
    d380:	cbz	x0, d3c8 <pathsearch_executable@@Base+0x8c>
    d384:	mov	x2, sp
    d388:	mov	w0, wzr
    d38c:	mov	x1, x19
    d390:	bl	adc0 <__xstat@plt>
    d394:	cmn	w0, #0x1
    d398:	b.eq	d3c0 <pathsearch_executable@@Base+0x84>  // b.none
    d39c:	ldr	w8, [sp, #16]
    d3a0:	mov	w9, #0x49                  	// #73
    d3a4:	and	w10, w8, #0xf000
    d3a8:	cmp	w10, #0x8, lsl #12
    d3ac:	cset	w10, eq  // eq = none
    d3b0:	tst	w8, w9
    d3b4:	cset	w8, ne  // ne = any
    d3b8:	and	w26, w8, w10
    d3bc:	b	d4bc <pathsearch_executable@@Base+0x180>
    d3c0:	mov	w26, wzr
    d3c4:	b	d4bc <pathsearch_executable@@Base+0x180>
    d3c8:	mov	x0, x20
    d3cc:	bl	a670 <xstrdup@plt>
    d3d0:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    d3d4:	mov	x20, x0
    d3d8:	str	x0, [x29, #24]
    d3dc:	add	x1, x1, #0x3d0
    d3e0:	add	x0, x29, #0x18
    d3e4:	bl	a8d0 <strsep@plt>
    d3e8:	cbz	x0, d4a4 <pathsearch_executable@@Base+0x168>
    d3ec:	adrp	x22, 2f000 <vasnprintf@@Base+0x124c>
    d3f0:	adrp	x23, 2f000 <vasnprintf@@Base+0x124c>
    d3f4:	mov	x1, x0
    d3f8:	mov	w26, wzr
    d3fc:	mov	x21, xzr
    d400:	add	x22, x22, #0x187
    d404:	add	x23, x23, #0x3d0
    d408:	mov	w27, #0x49                  	// #73
    d40c:	b	d424 <pathsearch_executable@@Base+0xe8>
    d410:	add	x0, x29, #0x18
    d414:	mov	x1, x23
    d418:	bl	a8d0 <strsep@plt>
    d41c:	mov	x1, x0
    d420:	cbz	x0, d4ac <pathsearch_executable@@Base+0x170>
    d424:	ldrb	w8, [x1]
    d428:	cbnz	w8, d440 <pathsearch_executable@@Base+0x104>
    d42c:	mov	x1, x21
    d430:	cbnz	x21, d440 <pathsearch_executable@@Base+0x104>
    d434:	bl	aec0 <xgetcwd@plt>
    d438:	mov	x21, x0
    d43c:	mov	x1, x0
    d440:	mov	x0, x22
    d444:	mov	x2, x19
    d448:	bl	a9c0 <xasprintf@plt>
    d44c:	mov	x24, x0
    d450:	mov	x2, sp
    d454:	mov	w0, wzr
    d458:	mov	x1, x24
    d45c:	bl	adc0 <__xstat@plt>
    d460:	mov	w25, w0
    d464:	mov	x0, x24
    d468:	bl	a960 <free@plt>
    d46c:	cmn	w25, #0x1
    d470:	b.eq	d410 <pathsearch_executable@@Base+0xd4>  // b.none
    d474:	ldr	w8, [sp, #16]
    d478:	and	w9, w8, #0xf000
    d47c:	tst	w8, w27
    d480:	cset	w10, ne  // ne = any
    d484:	cmp	w9, #0x8, lsl #12
    d488:	cset	w9, eq  // eq = none
    d48c:	and	w9, w9, w10
    d490:	orr	w26, w26, w9
    d494:	b.ne	d410 <pathsearch_executable@@Base+0xd4>  // b.any
    d498:	and	w8, w8, w27
    d49c:	cbz	w8, d410 <pathsearch_executable@@Base+0xd4>
    d4a0:	b	d4ac <pathsearch_executable@@Base+0x170>
    d4a4:	mov	x21, xzr
    d4a8:	mov	w26, wzr
    d4ac:	mov	x0, x20
    d4b0:	bl	a960 <free@plt>
    d4b4:	mov	x0, x21
    d4b8:	bl	a960 <free@plt>
    d4bc:	and	w0, w26, #0x1
    d4c0:	ldp	x20, x19, [sp, #208]
    d4c4:	ldp	x22, x21, [sp, #192]
    d4c8:	ldp	x24, x23, [sp, #176]
    d4cc:	ldp	x26, x25, [sp, #160]
    d4d0:	ldr	x27, [sp, #144]
    d4d4:	ldp	x29, x30, [sp, #128]
    d4d8:	add	sp, sp, #0xe0
    d4dc:	ret

000000000000d4e0 <directory_on_path@@Base>:
    d4e0:	sub	sp, sp, #0x40
    d4e4:	stp	x20, x19, [sp, #48]
    d4e8:	mov	x20, x0
    d4ec:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d4f0:	add	x0, x0, #0x182
    d4f4:	stp	x29, x30, [sp, #16]
    d4f8:	stp	x22, x21, [sp, #32]
    d4fc:	add	x29, sp, #0x10
    d500:	bl	ada0 <getenv@plt>
    d504:	cbz	x0, d570 <directory_on_path@@Base+0x90>
    d508:	bl	a670 <xstrdup@plt>
    d50c:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    d510:	mov	x19, x0
    d514:	str	x0, [sp, #8]
    d518:	add	x1, x1, #0x3d0
    d51c:	add	x0, sp, #0x8
    d520:	bl	a8d0 <strsep@plt>
    d524:	mov	x21, xzr
    d528:	cbz	x0, d568 <directory_on_path@@Base+0x88>
    d52c:	adrp	x22, 2f000 <vasnprintf@@Base+0x124c>
    d530:	add	x22, x22, #0x3d0
    d534:	ldrb	w8, [x0]
    d538:	cbnz	w8, d54c <directory_on_path@@Base+0x6c>
    d53c:	mov	x0, x21
    d540:	cbnz	x21, d54c <directory_on_path@@Base+0x6c>
    d544:	bl	aec0 <xgetcwd@plt>
    d548:	mov	x21, x0
    d54c:	mov	x1, x20
    d550:	bl	a8e0 <strcmp@plt>
    d554:	cbz	w0, d578 <directory_on_path@@Base+0x98>
    d558:	add	x0, sp, #0x8
    d55c:	mov	x1, x22
    d560:	bl	a8d0 <strsep@plt>
    d564:	cbnz	x0, d534 <directory_on_path@@Base+0x54>
    d568:	mov	w20, wzr
    d56c:	b	d57c <directory_on_path@@Base+0x9c>
    d570:	mov	w20, wzr
    d574:	b	d58c <directory_on_path@@Base+0xac>
    d578:	mov	w20, #0x1                   	// #1
    d57c:	mov	x0, x19
    d580:	bl	a960 <free@plt>
    d584:	mov	x0, x21
    d588:	bl	a960 <free@plt>
    d58c:	mov	w0, w20
    d590:	ldp	x20, x19, [sp, #48]
    d594:	ldp	x22, x21, [sp, #32]
    d598:	ldp	x29, x30, [sp, #16]
    d59c:	add	sp, sp, #0x40
    d5a0:	ret

000000000000d5a4 <sandbox_init@@Base>:
    d5a4:	stp	x29, x30, [sp, #-16]!
    d5a8:	mov	w0, #0x1                   	// #1
    d5ac:	mov	x29, sp
    d5b0:	bl	abc0 <xzalloc@plt>
    d5b4:	strb	wzr, [x0]
    d5b8:	ldp	x29, x30, [sp], #16
    d5bc:	ret

000000000000d5c0 <sandbox_load@@Base>:
    d5c0:	ret

000000000000d5c4 <sandbox_load_permissive@@Base>:
    d5c4:	ret

000000000000d5c8 <sandbox_free@@Base>:
    d5c8:	b	a960 <free@plt>

000000000000d5cc <init_security@@Base>:
    d5cc:	stp	x29, x30, [sp, #-32]!
    d5d0:	str	x19, [sp, #16]
    d5d4:	mov	x29, sp
    d5d8:	bl	a3f0 <getuid@plt>
    d5dc:	adrp	x19, 42000 <vasnprintf@@Base+0x1424c>
    d5e0:	ldr	x19, [x19, #4064]
    d5e4:	str	w0, [x19]
    d5e8:	bl	a340 <geteuid@plt>
    d5ec:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    d5f0:	ldr	x8, [x8, #3784]
    d5f4:	ldr	w1, [x19]
    d5f8:	mov	w2, w0
    d5fc:	str	w0, [x8]
    d600:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    d604:	ldr	x8, [x8, #3952]
    d608:	str	w0, [x8]
    d60c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d610:	add	x0, x0, #0x18d
    d614:	bl	a4c0 <debug@plt>
    d618:	bl	a9a0 <getgid@plt>
    d61c:	adrp	x19, 42000 <vasnprintf@@Base+0x1424c>
    d620:	ldr	x19, [x19, #3960]
    d624:	str	w0, [x19]
    d628:	bl	a2f0 <getegid@plt>
    d62c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    d630:	ldr	x8, [x8, #3760]
    d634:	ldr	w1, [x19]
    d638:	mov	w2, w0
    d63c:	str	w0, [x8]
    d640:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    d644:	ldr	x8, [x8, #3792]
    d648:	str	w0, [x8]
    d64c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d650:	add	x0, x0, #0x19f
    d654:	bl	a4c0 <debug@plt>
    d658:	ldr	x19, [sp, #16]
    d65c:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    d660:	str	wzr, [x8, #2264]
    d664:	ldp	x29, x30, [sp], #32
    d668:	b	a800 <drop_effective_privs@plt>

000000000000d66c <drop_effective_privs@@Base>:
    d66c:	stp	x29, x30, [sp, #-48]!
    d670:	str	x21, [sp, #16]
    d674:	stp	x20, x19, [sp, #32]
    d678:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
    d67c:	adrp	x21, 42000 <vasnprintf@@Base+0x1424c>
    d680:	ldr	x20, [x20, #3952]
    d684:	ldr	x21, [x21, #4064]
    d688:	mov	x29, sp
    d68c:	ldr	w8, [x20]
    d690:	ldr	w9, [x21]
    d694:	cmp	w8, w9
    d698:	b.eq	d6fc <drop_effective_privs@@Base+0x90>  // b.none
    d69c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d6a0:	add	x0, x0, #0x215
    d6a4:	bl	a4c0 <debug@plt>
    d6a8:	bl	a5d0 <idpriv_temp_drop@plt>
    d6ac:	cbz	w0, d6dc <drop_effective_privs@@Base+0x70>
    d6b0:	bl	ad80 <__errno_location@plt>
    d6b4:	ldr	w19, [x0]
    d6b8:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    d6bc:	add	x1, x1, #0x277
    d6c0:	mov	w2, #0x5                   	// #5
    d6c4:	mov	x0, xzr
    d6c8:	bl	ac80 <dcgettext@plt>
    d6cc:	mov	x2, x0
    d6d0:	mov	w0, #0x2                   	// #2
    d6d4:	mov	w1, w19
    d6d8:	bl	a2a0 <error@plt>
    d6dc:	ldr	w8, [x21]
    d6e0:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
    d6e4:	ldr	x9, [x9, #3960]
    d6e8:	str	w8, [x20]
    d6ec:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    d6f0:	ldr	w9, [x9]
    d6f4:	ldr	x8, [x8, #3792]
    d6f8:	str	w9, [x8]
    d6fc:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    d700:	ldr	w9, [x8, #2264]
    d704:	ldr	x21, [sp, #16]
    d708:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d70c:	add	x0, x0, #0x22d
    d710:	add	w1, w9, #0x1
    d714:	str	w1, [x8, #2264]
    d718:	ldp	x20, x19, [sp, #32]
    d71c:	ldp	x29, x30, [sp], #48
    d720:	b	a4c0 <debug@plt>

000000000000d724 <running_setuid@@Base>:
    d724:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    d728:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
    d72c:	ldr	x8, [x8, #4064]
    d730:	ldr	x9, [x9, #3784]
    d734:	ldr	w8, [x8]
    d738:	ldr	w9, [x9]
    d73c:	cmp	w8, w9
    d740:	cset	w0, ne  // ne = any
    d744:	ret

000000000000d748 <get_man_owner@@Base>:
    d748:	stp	x29, x30, [sp, #-32]!
    d74c:	str	x19, [sp, #16]
    d750:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
    d754:	ldr	x0, [x19, #2272]
    d758:	mov	x29, sp
    d75c:	cbnz	x0, d7a4 <get_man_owner@@Base+0x5c>
    d760:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d764:	add	x0, x0, #0x1b1
    d768:	bl	a660 <getpwnam@plt>
    d76c:	str	x0, [x19, #2272]
    d770:	cbnz	x0, d7a4 <get_man_owner@@Base+0x5c>
    d774:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    d778:	add	x1, x1, #0x1b5
    d77c:	mov	w2, #0x5                   	// #5
    d780:	bl	ac80 <dcgettext@plt>
    d784:	adrp	x3, 2f000 <vasnprintf@@Base+0x124c>
    d788:	mov	x2, x0
    d78c:	add	x3, x3, #0x1b1
    d790:	mov	w0, #0x1                   	// #1
    d794:	mov	w1, wzr
    d798:	bl	a2a0 <error@plt>
    d79c:	ldr	x0, [x19, #2272]
    d7a0:	cbz	x0, d7b0 <get_man_owner@@Base+0x68>
    d7a4:	ldr	x19, [sp, #16]
    d7a8:	ldp	x29, x30, [sp], #32
    d7ac:	ret
    d7b0:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d7b4:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    d7b8:	adrp	x3, 2f000 <vasnprintf@@Base+0x124c>
    d7bc:	add	x0, x0, #0x1dd
    d7c0:	add	x1, x1, #0x1e7
    d7c4:	add	x3, x3, #0x1f2
    d7c8:	mov	w2, #0x78                  	// #120
    d7cc:	bl	ad70 <__assert_fail@plt>

000000000000d7d0 <regain_effective_privs@@Base>:
    d7d0:	stp	x29, x30, [sp, #-48]!
    d7d4:	stp	x20, x19, [sp, #32]
    d7d8:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
    d7dc:	ldr	w8, [x19, #2264]
    d7e0:	str	x21, [sp, #16]
    d7e4:	mov	x29, sp
    d7e8:	cbz	w8, d808 <regain_effective_privs@@Base+0x38>
    d7ec:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d7f0:	sub	w1, w8, #0x1
    d7f4:	add	x0, x0, #0x245
    d7f8:	str	w1, [x19, #2264]
    d7fc:	bl	a4c0 <debug@plt>
    d800:	ldr	w8, [x19, #2264]
    d804:	cbnz	w8, d888 <regain_effective_privs@@Base+0xb8>
    d808:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
    d80c:	adrp	x21, 42000 <vasnprintf@@Base+0x1424c>
    d810:	ldr	x20, [x20, #3952]
    d814:	ldr	x21, [x21, #3784]
    d818:	ldr	w8, [x20]
    d81c:	ldr	w9, [x21]
    d820:	cmp	w8, w9
    d824:	b.eq	d888 <regain_effective_privs@@Base+0xb8>  // b.none
    d828:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d82c:	add	x0, x0, #0x25d
    d830:	bl	a4c0 <debug@plt>
    d834:	bl	ab80 <idpriv_temp_restore@plt>
    d838:	cbz	w0, d868 <regain_effective_privs@@Base+0x98>
    d83c:	bl	ad80 <__errno_location@plt>
    d840:	ldr	w19, [x0]
    d844:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    d848:	add	x1, x1, #0x277
    d84c:	mov	w2, #0x5                   	// #5
    d850:	mov	x0, xzr
    d854:	bl	ac80 <dcgettext@plt>
    d858:	mov	x2, x0
    d85c:	mov	w0, #0x2                   	// #2
    d860:	mov	w1, w19
    d864:	bl	a2a0 <error@plt>
    d868:	ldr	w8, [x21]
    d86c:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
    d870:	ldr	x9, [x9, #3760]
    d874:	str	w8, [x20]
    d878:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    d87c:	ldr	w9, [x9]
    d880:	ldr	x8, [x8, #3792]
    d884:	str	w9, [x8]
    d888:	ldp	x20, x19, [sp, #32]
    d88c:	ldr	x21, [sp, #16]
    d890:	ldp	x29, x30, [sp], #48
    d894:	ret

000000000000d898 <drop_privs@@Base>:
    d898:	stp	x29, x30, [sp, #-32]!
    d89c:	str	x19, [sp, #16]
    d8a0:	mov	x29, sp
    d8a4:	bl	aaf0 <idpriv_drop@plt>
    d8a8:	cbz	w0, d8e0 <drop_privs@@Base+0x48>
    d8ac:	bl	ad80 <__errno_location@plt>
    d8b0:	ldr	w19, [x0]
    d8b4:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    d8b8:	add	x1, x1, #0x277
    d8bc:	mov	w2, #0x5                   	// #5
    d8c0:	mov	x0, xzr
    d8c4:	bl	ac80 <dcgettext@plt>
    d8c8:	mov	w1, w19
    d8cc:	ldr	x19, [sp, #16]
    d8d0:	mov	x2, x0
    d8d4:	mov	w0, #0x2                   	// #2
    d8d8:	ldp	x29, x30, [sp], #32
    d8dc:	b	a2a0 <error@plt>
    d8e0:	ldr	x19, [sp, #16]
    d8e4:	ldp	x29, x30, [sp], #32
    d8e8:	ret

000000000000d8ec <create_tempdir@@Base>:
    d8ec:	stp	x29, x30, [sp, #-32]!
    d8f0:	stp	x20, x19, [sp, #16]
    d8f4:	mov	x29, sp
    d8f8:	mov	x19, x0
    d8fc:	bl	a3f0 <getuid@plt>
    d900:	mov	w20, w0
    d904:	bl	a340 <geteuid@plt>
    d908:	cmp	w20, w0
    d90c:	b.ne	d964 <create_tempdir@@Base+0x78>  // b.any
    d910:	bl	a9a0 <getgid@plt>
    d914:	mov	w20, w0
    d918:	bl	a2f0 <getegid@plt>
    d91c:	cmp	w20, w0
    d920:	b.ne	d964 <create_tempdir@@Base+0x78>  // b.any
    d924:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d928:	add	x0, x0, #0x29b
    d92c:	bl	ada0 <getenv@plt>
    d930:	cbz	x0, d944 <create_tempdir@@Base+0x58>
    d934:	mov	w1, #0x2                   	// #2
    d938:	mov	x20, x0
    d93c:	bl	a890 <access@plt>
    d940:	cbz	w0, d99c <create_tempdir@@Base+0xb0>
    d944:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d948:	add	x0, x0, #0x2a2
    d94c:	bl	ada0 <getenv@plt>
    d950:	cbz	x0, d964 <create_tempdir@@Base+0x78>
    d954:	mov	w1, #0x2                   	// #2
    d958:	mov	x20, x0
    d95c:	bl	a890 <access@plt>
    d960:	cbz	w0, d99c <create_tempdir@@Base+0xb0>
    d964:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    d968:	add	x20, x20, #0x2a6
    d96c:	mov	w1, #0x2                   	// #2
    d970:	mov	x0, x20
    d974:	bl	a890 <access@plt>
    d978:	cbz	w0, d99c <create_tempdir@@Base+0xb0>
    d97c:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    d980:	add	x20, x20, #0x2a6
    d984:	mov	w1, #0x2                   	// #2
    d988:	mov	x0, x20
    d98c:	bl	a890 <access@plt>
    d990:	cbz	w0, d99c <create_tempdir@@Base+0xb0>
    d994:	mov	x0, xzr
    d998:	b	d9c0 <create_tempdir@@Base+0xd4>
    d99c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d9a0:	add	x0, x0, #0x28f
    d9a4:	mov	x1, x20
    d9a8:	mov	x2, x19
    d9ac:	bl	a9c0 <xasprintf@plt>
    d9b0:	mov	x19, x0
    d9b4:	bl	a820 <mkdtemp@plt>
    d9b8:	cmp	x0, #0x0
    d9bc:	csel	x0, xzr, x19, eq  // eq = none
    d9c0:	ldp	x20, x19, [sp, #16]
    d9c4:	ldp	x29, x30, [sp], #32
    d9c8:	ret

000000000000d9cc <is_changed@@Base>:
    d9cc:	sub	sp, sp, #0x130
    d9d0:	stp	x20, x19, [sp, #288]
    d9d4:	mov	x19, x1
    d9d8:	mov	x20, x0
    d9dc:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    d9e0:	add	x0, x0, #0x2ab
    d9e4:	mov	x1, x20
    d9e8:	mov	x2, x19
    d9ec:	stp	x29, x30, [sp, #256]
    d9f0:	str	x28, [sp, #272]
    d9f4:	add	x29, sp, #0x100
    d9f8:	bl	a4c0 <debug@plt>
    d9fc:	add	x2, sp, #0x80
    da00:	mov	w0, wzr
    da04:	mov	x1, x20
    da08:	bl	adc0 <__xstat@plt>
    da0c:	cmp	w0, #0x0
    da10:	mov	x2, sp
    da14:	mov	w0, wzr
    da18:	mov	x1, x19
    da1c:	cset	w20, ne  // ne = any
    da20:	bl	adc0 <__xstat@plt>
    da24:	orr	w8, w20, #0x2
    da28:	cmp	w0, #0x0
    da2c:	csel	w8, w20, w8, eq  // eq = none
    da30:	cbz	w8, da3c <is_changed@@Base+0x70>
    da34:	neg	w19, w8
    da38:	b	da8c <is_changed@@Base+0xc0>
    da3c:	ldr	x9, [sp, #176]
    da40:	ldr	x11, [sp, #48]
    da44:	ldr	x10, [sp, #216]
    da48:	ldr	x12, [sp, #88]
    da4c:	cmp	x9, #0x0
    da50:	mov	w8, #0x4                   	// #4
    da54:	cset	w9, eq  // eq = none
    da58:	cmp	x11, #0x0
    da5c:	lsl	w11, w9, #1
    da60:	bfi	w8, w9, #1, #1
    da64:	csel	w8, w8, w11, eq  // eq = none
    da68:	cmp	x10, x12
    da6c:	b.ne	da84 <is_changed@@Base+0xb8>  // b.any
    da70:	ldr	x9, [sp, #224]
    da74:	ldr	x10, [sp, #96]
    da78:	cmp	w9, w10
    da7c:	cset	w9, ne  // ne = any
    da80:	b	da88 <is_changed@@Base+0xbc>
    da84:	mov	w9, #0x1                   	// #1
    da88:	orr	w19, w9, w8
    da8c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    da90:	add	x0, x0, #0x2c2
    da94:	mov	w1, w19
    da98:	bl	a4c0 <debug@plt>
    da9c:	mov	w0, w19
    daa0:	ldp	x20, x19, [sp, #288]
    daa4:	ldr	x28, [sp, #272]
    daa8:	ldp	x29, x30, [sp, #256]
    daac:	add	sp, sp, #0x130
    dab0:	ret

000000000000dab4 <is_directory@@Base>:
    dab4:	sub	sp, sp, #0x90
    dab8:	mov	x1, x0
    dabc:	mov	x2, sp
    dac0:	mov	w0, wzr
    dac4:	stp	x29, x30, [sp, #128]
    dac8:	add	x29, sp, #0x80
    dacc:	bl	adc0 <__xstat@plt>
    dad0:	ldr	w8, [sp, #16]
    dad4:	ldp	x29, x30, [sp, #128]
    dad8:	cmp	w0, #0x0
    dadc:	ubfx	w8, w8, #14, #1
    dae0:	csel	w0, w8, w0, eq  // eq = none
    dae4:	add	sp, sp, #0x90
    dae8:	ret

000000000000daec <escape_shell@@Base>:
    daec:	stp	x29, x30, [sp, #-64]!
    daf0:	stp	x24, x23, [sp, #16]
    daf4:	stp	x22, x21, [sp, #32]
    daf8:	stp	x20, x19, [sp, #48]
    dafc:	mov	x29, sp
    db00:	cbz	x0, dbb4 <escape_shell@@Base+0xc8>
    db04:	mov	x20, x0
    db08:	bl	a280 <strlen@plt>
    db0c:	mov	w8, #0x1                   	// #1
    db10:	bfi	x8, x0, #1, #63
    db14:	mov	x0, x8
    db18:	bl	a650 <xmalloc@plt>
    db1c:	ldrb	w21, [x20]
    db20:	mov	x19, x0
    db24:	mov	x23, x0
    db28:	cbz	w21, dbac <escape_shell@@Base+0xc0>
    db2c:	add	x22, x20, #0x1
    db30:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    db34:	add	x20, x20, #0x2c9
    db38:	mov	w24, #0x5c                  	// #92
    db3c:	mov	x23, x19
    db40:	b	db5c <escape_shell@@Base+0x70>
    db44:	mov	w8, #0x1                   	// #1
    db48:	mov	x9, x23
    db4c:	strb	w21, [x9]
    db50:	ldrb	w21, [x22], #1
    db54:	add	x23, x23, x8
    db58:	cbz	w21, dbac <escape_shell@@Base+0xc0>
    db5c:	and	w8, w21, #0xffffffdf
    db60:	sub	w8, w8, #0x41
    db64:	and	w8, w8, #0xff
    db68:	cmp	w8, #0x1a
    db6c:	b.cc	db44 <escape_shell@@Base+0x58>  // b.lo, b.ul, b.last
    db70:	sub	w8, w21, #0x30
    db74:	and	w8, w8, #0xff
    db78:	cmp	w8, #0xa
    db7c:	mov	w8, #0x1                   	// #1
    db80:	mov	x9, x23
    db84:	b.cc	db4c <escape_shell@@Base+0x60>  // b.lo, b.ul, b.last
    db88:	and	w1, w21, #0xff
    db8c:	mov	w2, #0x8                   	// #8
    db90:	mov	x0, x20
    db94:	bl	ab70 <memchr@plt>
    db98:	cbnz	x0, db44 <escape_shell@@Base+0x58>
    db9c:	mov	x9, x23
    dba0:	strb	w24, [x9], #1
    dba4:	mov	w8, #0x2                   	// #2
    dba8:	b	db4c <escape_shell@@Base+0x60>
    dbac:	strb	wzr, [x23]
    dbb0:	b	dbb8 <escape_shell@@Base+0xcc>
    dbb4:	mov	x19, xzr
    dbb8:	mov	x0, x19
    dbbc:	ldp	x20, x19, [sp, #48]
    dbc0:	ldp	x22, x21, [sp, #32]
    dbc4:	ldp	x24, x23, [sp, #16]
    dbc8:	ldp	x29, x30, [sp], #64
    dbcc:	ret

000000000000dbd0 <remove_directory@@Base>:
    dbd0:	sub	sp, sp, #0xd0
    dbd4:	stp	x29, x30, [sp, #128]
    dbd8:	str	x25, [sp, #144]
    dbdc:	stp	x24, x23, [sp, #160]
    dbe0:	stp	x22, x21, [sp, #176]
    dbe4:	stp	x20, x19, [sp, #192]
    dbe8:	add	x29, sp, #0x80
    dbec:	mov	w21, w1
    dbf0:	mov	x19, x0
    dbf4:	bl	a410 <opendir@plt>
    dbf8:	cbz	x0, dcd8 <remove_directory@@Base+0x108>
    dbfc:	mov	x20, x0
    dc00:	bl	a710 <readdir@plt>
    dc04:	cbz	x0, dce0 <remove_directory@@Base+0x110>
    dc08:	adrp	x22, 2f000 <vasnprintf@@Base+0x124c>
    dc0c:	adrp	x23, 2f000 <vasnprintf@@Base+0x124c>
    dc10:	adrp	x24, 2f000 <vasnprintf@@Base+0x124c>
    dc14:	add	x22, x22, #0x2d2
    dc18:	add	x23, x23, #0x2d1
    dc1c:	add	x24, x24, #0x187
    dc20:	b	dc4c <remove_directory@@Base+0x7c>
    dc24:	mov	x0, x25
    dc28:	mov	w1, w21
    dc2c:	bl	a310 <remove_directory@plt>
    dc30:	cmn	w0, #0x1
    dc34:	b.eq	dcc8 <remove_directory@@Base+0xf8>  // b.none
    dc38:	mov	x0, x25
    dc3c:	bl	a960 <free@plt>
    dc40:	mov	x0, x20
    dc44:	bl	a710 <readdir@plt>
    dc48:	cbz	x0, dce0 <remove_directory@@Base+0x110>
    dc4c:	add	x25, x0, #0x13
    dc50:	mov	x0, x25
    dc54:	mov	x1, x22
    dc58:	bl	a8e0 <strcmp@plt>
    dc5c:	cbz	w0, dc40 <remove_directory@@Base+0x70>
    dc60:	mov	x0, x25
    dc64:	mov	x1, x23
    dc68:	bl	a8e0 <strcmp@plt>
    dc6c:	cbz	w0, dc40 <remove_directory@@Base+0x70>
    dc70:	mov	x0, x24
    dc74:	mov	x1, x19
    dc78:	mov	x2, x25
    dc7c:	bl	a9c0 <xasprintf@plt>
    dc80:	mov	x25, x0
    dc84:	mov	x2, sp
    dc88:	mov	w0, wzr
    dc8c:	mov	x1, x25
    dc90:	bl	adc0 <__xstat@plt>
    dc94:	cmn	w0, #0x1
    dc98:	b.eq	dcc8 <remove_directory@@Base+0xf8>  // b.none
    dc9c:	ldr	w8, [sp, #16]
    dca0:	and	w8, w8, #0xf000
    dca4:	cbz	w21, dcb0 <remove_directory@@Base+0xe0>
    dca8:	cmp	w8, #0x4, lsl #12
    dcac:	b.eq	dc24 <remove_directory@@Base+0x54>  // b.none
    dcb0:	cmp	w8, #0x8, lsl #12
    dcb4:	b.ne	dc38 <remove_directory@@Base+0x68>  // b.any
    dcb8:	mov	x0, x25
    dcbc:	bl	ae20 <unlink@plt>
    dcc0:	cmn	w0, #0x1
    dcc4:	b.ne	dc38 <remove_directory@@Base+0x68>  // b.any
    dcc8:	mov	x0, x25
    dccc:	bl	a960 <free@plt>
    dcd0:	mov	x0, x20
    dcd4:	bl	a760 <closedir@plt>
    dcd8:	mov	w0, #0xffffffff            	// #-1
    dcdc:	b	dcf8 <remove_directory@@Base+0x128>
    dce0:	mov	x0, x20
    dce4:	bl	a760 <closedir@plt>
    dce8:	mov	x0, x19
    dcec:	bl	a910 <rmdir@plt>
    dcf0:	cmn	w0, #0x1
    dcf4:	csetm	w0, eq  // eq = none
    dcf8:	ldp	x20, x19, [sp, #192]
    dcfc:	ldp	x22, x21, [sp, #176]
    dd00:	ldp	x24, x23, [sp, #160]
    dd04:	ldr	x25, [sp, #144]
    dd08:	ldp	x29, x30, [sp, #128]
    dd0c:	add	sp, sp, #0xd0
    dd10:	ret

000000000000dd14 <trim_spaces@@Base>:
    dd14:	stp	x29, x30, [sp, #-32]!
    dd18:	stp	x20, x19, [sp, #16]
    dd1c:	sub	x20, x0, #0x2
    dd20:	mov	x29, sp
    dd24:	ldrb	w8, [x20, #2]
    dd28:	add	x20, x20, #0x1
    dd2c:	cmp	w8, #0x20
    dd30:	b.eq	dd24 <trim_spaces@@Base+0x10>  // b.none
    dd34:	add	x19, x20, #0x1
    dd38:	mov	x0, x19
    dd3c:	bl	a280 <strlen@plt>
    dd40:	lsl	x11, x0, #32
    dd44:	sxtw	x9, w0
    dd48:	mov	x8, #0xffffffff00000000    	// #-4294967296
    dd4c:	mov	x10, x11
    dd50:	cbz	x9, dd68 <trim_spaces@@Base+0x54>
    dd54:	ldrb	w11, [x20, x9]
    dd58:	sub	x9, x9, #0x1
    dd5c:	cmp	w11, #0x20
    dd60:	add	x11, x10, x8
    dd64:	b.eq	dd4c <trim_spaces@@Base+0x38>  // b.none
    dd68:	mov	x0, x19
    dd6c:	ldp	x20, x19, [sp, #16]
    dd70:	asr	x1, x10, #32
    dd74:	ldp	x29, x30, [sp], #32
    dd78:	b	abd0 <xstrndup@plt>

000000000000dd7c <lang_dir@@Base>:
    dd7c:	stp	x29, x30, [sp, #-48]!
    dd80:	stp	x20, x19, [sp, #32]
    dd84:	mov	x20, x0
    dd88:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
    dd8c:	add	x0, x0, #0x9c
    dd90:	str	x21, [sp, #16]
    dd94:	mov	x29, sp
    dd98:	bl	a670 <xstrdup@plt>
    dd9c:	mov	x19, x0
    dda0:	cbz	x20, de5c <lang_dir@@Base+0xe0>
    dda4:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    dda8:	add	x1, x1, #0x2d5
    ddac:	mov	w2, #0x4                   	// #4
    ddb0:	mov	x0, x20
    ddb4:	bl	a600 <strncmp@plt>
    ddb8:	cbz	w0, ddd4 <lang_dir@@Base+0x58>
    ddbc:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    ddc0:	add	x1, x1, #0x2d4
    ddc4:	mov	x0, x20
    ddc8:	bl	ac50 <strstr@plt>
    ddcc:	cbz	x0, de5c <lang_dir@@Base+0xe0>
    ddd0:	add	x20, x0, #0x1
    ddd4:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    ddd8:	add	x0, x20, #0x2
    dddc:	add	x1, x1, #0x2da
    dde0:	bl	ac50 <strstr@plt>
    dde4:	cbz	x0, de5c <lang_dir@@Base+0xe0>
    dde8:	ldrb	w8, [x0, #5]
    ddec:	mov	x21, x0
    ddf0:	cmp	w8, #0x2f
    ddf4:	b.ne	de5c <lang_dir@@Base+0xe0>  // b.any
    ddf8:	ldrb	w1, [x21, #4]
    ddfc:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    de00:	add	x0, x0, #0x2df
    de04:	mov	w2, #0xd                   	// #13
    de08:	bl	ab70 <memchr@plt>
    de0c:	cbz	x0, de5c <lang_dir@@Base+0xe0>
    de10:	add	x8, x20, #0x3
    de14:	cmp	x21, x8
    de18:	b.eq	de70 <lang_dir@@Base+0xf4>  // b.none
    de1c:	add	x20, x20, #0x4
    de20:	mov	w1, #0x2f                  	// #47
    de24:	mov	x0, x20
    de28:	bl	aa50 <strchr@plt>
    de2c:	cbz	x0, de5c <lang_dir@@Base+0xe0>
    de30:	mov	x21, x0
    de34:	mov	x0, x19
    de38:	bl	a960 <free@plt>
    de3c:	sub	x1, x21, x20
    de40:	mov	x0, x20
    de44:	bl	abd0 <xstrndup@plt>
    de48:	mov	x19, x0
    de4c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    de50:	add	x0, x0, #0x2ec
    de54:	mov	x1, x19
    de58:	bl	a4c0 <debug@plt>
    de5c:	mov	x0, x19
    de60:	ldp	x20, x19, [sp, #32]
    de64:	ldr	x21, [sp, #16]
    de68:	ldp	x29, x30, [sp], #48
    de6c:	ret
    de70:	mov	x0, x19
    de74:	bl	a960 <free@plt>
    de78:	ldp	x20, x19, [sp, #32]
    de7c:	ldr	x21, [sp, #16]
    de80:	adrp	x0, 2e000 <vasnprintf@@Base+0x24c>
    de84:	add	x0, x0, #0xc30
    de88:	ldp	x29, x30, [sp], #48
    de8c:	b	a670 <xstrdup@plt>

000000000000de90 <init_locale@@Base>:
    de90:	stp	x29, x30, [sp, #-32]!
    de94:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
    de98:	add	x1, x1, #0x9c
    de9c:	mov	w0, #0x6                   	// #6
    dea0:	stp	x20, x19, [sp, #16]
    dea4:	mov	x29, sp
    dea8:	bl	ae90 <setlocale@plt>
    deac:	cbnz	x0, dee0 <init_locale@@Base+0x50>
    deb0:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    deb4:	add	x0, x0, #0x307
    deb8:	bl	ada0 <getenv@plt>
    debc:	cbnz	x0, dee0 <init_locale@@Base+0x50>
    dec0:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    dec4:	add	x0, x0, #0x31d
    dec8:	bl	ada0 <getenv@plt>
    decc:	cbnz	x0, dee0 <init_locale@@Base+0x50>
    ded0:	adrp	x2, 2f000 <vasnprintf@@Base+0x124c>
    ded4:	add	x2, x2, #0x332
    ded8:	mov	w1, wzr
    dedc:	bl	a2a0 <error@plt>
    dee0:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    dee4:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
    dee8:	add	x0, x0, #0x307
    deec:	add	x1, x1, #0x7e3
    def0:	mov	w2, #0x1                   	// #1
    def4:	bl	a3b0 <setenv@plt>
    def8:	adrp	x19, 2f000 <vasnprintf@@Base+0x124c>
    defc:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    df00:	add	x19, x19, #0x36e
    df04:	add	x20, x20, #0x375
    df08:	mov	x0, x19
    df0c:	mov	x1, x20
    df10:	bl	a610 <bindtextdomain@plt>
    df14:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    df18:	add	x0, x0, #0x387
    df1c:	mov	x1, x20
    df20:	bl	a610 <bindtextdomain@plt>
    df24:	mov	x0, x19
    df28:	ldp	x20, x19, [sp, #16]
    df2c:	ldp	x29, x30, [sp], #32
    df30:	b	a8c0 <textdomain@plt>

000000000000df34 <word_fnmatch@@Base>:
    df34:	stp	x29, x30, [sp, #-64]!
    df38:	stp	x20, x19, [sp, #48]
    df3c:	mov	x20, x0
    df40:	mov	x0, x1
    df44:	str	x23, [sp, #16]
    df48:	stp	x22, x21, [sp, #32]
    df4c:	mov	x29, sp
    df50:	bl	a670 <xstrdup@plt>
    df54:	ldrb	w23, [x0]
    df58:	mov	x19, x0
    df5c:	cbz	w23, dfd0 <word_fnmatch@@Base+0x9c>
    df60:	bl	a900 <__ctype_b_loc@plt>
    df64:	mov	x21, x0
    df68:	add	x22, x19, #0x1
    df6c:	mov	x1, x19
    df70:	b	df84 <word_fnmatch@@Base+0x50>
    df74:	mov	x8, x1
    df78:	ldrb	w23, [x22], #1
    df7c:	mov	x1, x8
    df80:	cbz	w23, dfd0 <word_fnmatch@@Base+0x9c>
    df84:	and	w8, w23, #0xff
    df88:	cmp	w8, #0x5f
    df8c:	b.eq	df74 <word_fnmatch@@Base+0x40>  // b.none
    df90:	ldr	x8, [x21]
    df94:	and	x9, x23, #0xff
    df98:	ldrh	w8, [x8, x9, lsl #1]
    df9c:	tbnz	w8, #10, df74 <word_fnmatch@@Base+0x40>
    dfa0:	sub	x9, x22, #0x1
    dfa4:	add	x8, x1, #0x1
    dfa8:	cmp	x9, x8
    dfac:	b.ls	df78 <word_fnmatch@@Base+0x44>  // b.plast
    dfb0:	mov	w2, #0x10                  	// #16
    dfb4:	mov	x0, x20
    dfb8:	strb	wzr, [x9]
    dfbc:	bl	aad0 <fnmatch@plt>
    dfc0:	mov	x8, x22
    dfc4:	cbnz	w0, df78 <word_fnmatch@@Base+0x44>
    dfc8:	mov	w20, #0x1                   	// #1
    dfcc:	b	dfd4 <word_fnmatch@@Base+0xa0>
    dfd0:	mov	w20, wzr
    dfd4:	mov	x0, x19
    dfd8:	bl	a960 <free@plt>
    dfdc:	mov	w0, w20
    dfe0:	ldp	x20, x19, [sp, #48]
    dfe4:	ldp	x22, x21, [sp, #32]
    dfe8:	ldr	x23, [sp, #16]
    dfec:	ldp	x29, x30, [sp], #64
    dff0:	ret

000000000000dff4 <xregcomp@@Base>:
    dff4:	stp	x29, x30, [sp, #-64]!
    dff8:	str	x23, [sp, #16]
    dffc:	stp	x22, x21, [sp, #32]
    e000:	stp	x20, x19, [sp, #48]
    e004:	mov	x29, sp
    e008:	mov	x19, x1
    e00c:	mov	x20, x0
    e010:	bl	a4f0 <rpl_regcomp@plt>
    e014:	cbz	w0, e088 <xregcomp@@Base+0x94>
    e018:	mov	x1, x20
    e01c:	mov	x2, xzr
    e020:	mov	x3, xzr
    e024:	mov	w21, w0
    e028:	bl	ab00 <rpl_regerror@plt>
    e02c:	mov	x22, x0
    e030:	bl	a650 <xmalloc@plt>
    e034:	mov	x23, x0
    e038:	mov	w0, w21
    e03c:	mov	x1, x20
    e040:	mov	x2, x23
    e044:	mov	x3, x22
    e048:	bl	ab00 <rpl_regerror@plt>
    e04c:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    e050:	add	x1, x1, #0x395
    e054:	mov	w2, #0x5                   	// #5
    e058:	mov	x0, xzr
    e05c:	bl	ac80 <dcgettext@plt>
    e060:	mov	x3, x19
    e064:	mov	x4, x23
    e068:	ldp	x20, x19, [sp, #48]
    e06c:	ldp	x22, x21, [sp, #32]
    e070:	ldr	x23, [sp, #16]
    e074:	mov	x2, x0
    e078:	mov	w0, #0x2                   	// #2
    e07c:	mov	w1, wzr
    e080:	ldp	x29, x30, [sp], #64
    e084:	b	a2a0 <error@plt>
    e088:	ldp	x20, x19, [sp, #48]
    e08c:	ldp	x22, x21, [sp, #32]
    e090:	ldr	x23, [sp, #16]
    e094:	ldp	x29, x30, [sp], #64
    e098:	ret

000000000000e09c <areadlink_with_size@@Base>:
    e09c:	sub	sp, sp, #0xd0
    e0a0:	cmp	x1, #0x401
    e0a4:	mov	w8, #0x401                 	// #1025
    e0a8:	csinc	x8, x8, x1, cs  // cs = hs, nlast
    e0ac:	cmp	x1, #0x0
    e0b0:	mov	w9, #0x80                  	// #128
    e0b4:	stp	x22, x21, [sp, #176]
    e0b8:	stp	x20, x19, [sp, #192]
    e0bc:	mov	x20, x1
    e0c0:	mov	x21, x0
    e0c4:	csel	x22, x9, x8, eq  // eq = none
    e0c8:	stp	x29, x30, [sp, #128]
    e0cc:	stp	x26, x25, [sp, #144]
    e0d0:	stp	x24, x23, [sp, #160]
    e0d4:	add	x29, sp, #0x80
    e0d8:	b	e0e4 <areadlink_with_size@@Base+0x48>
    e0dc:	lsl	x8, x22, #1
    e0e0:	mov	x22, x8
    e0e4:	cbnz	x20, e0fc <areadlink_with_size@@Base+0x60>
    e0e8:	cmp	x22, #0x80
    e0ec:	b.ne	e0fc <areadlink_with_size@@Base+0x60>  // b.any
    e0f0:	mov	x19, xzr
    e0f4:	mov	x23, sp
    e0f8:	b	e110 <areadlink_with_size@@Base+0x74>
    e0fc:	mov	x0, x22
    e100:	bl	a540 <malloc@plt>
    e104:	mov	x23, x0
    e108:	mov	x19, x0
    e10c:	cbz	x0, e1d4 <areadlink_with_size@@Base+0x138>
    e110:	mov	x0, x21
    e114:	mov	x1, x23
    e118:	mov	x2, x22
    e11c:	bl	a3c0 <readlink@plt>
    e120:	mov	x24, x0
    e124:	tbz	x0, #63, e138 <areadlink_with_size@@Base+0x9c>
    e128:	bl	ad80 <__errno_location@plt>
    e12c:	ldr	w26, [x0]
    e130:	cmp	w26, #0x22
    e134:	b.ne	e19c <areadlink_with_size@@Base+0x100>  // b.any
    e138:	cmp	x24, x22
    e13c:	b.cc	e170 <areadlink_with_size@@Base+0xd4>  // b.lo, b.ul, b.last
    e140:	mov	x0, x19
    e144:	bl	a960 <free@plt>
    e148:	lsr	x8, x22, #62
    e14c:	cbz	x8, e0dc <areadlink_with_size@@Base+0x40>
    e150:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    e154:	cmp	x22, x8
    e158:	b.cc	e0e0 <areadlink_with_size@@Base+0x44>  // b.lo, b.ul, b.last
    e15c:	bl	ad80 <__errno_location@plt>
    e160:	mov	x19, xzr
    e164:	mov	w8, #0xc                   	// #12
    e168:	str	w8, [x0]
    e16c:	b	e1d4 <areadlink_with_size@@Base+0x138>
    e170:	add	x20, x24, #0x1
    e174:	strb	wzr, [x23, x24]
    e178:	cbz	x19, e1b4 <areadlink_with_size@@Base+0x118>
    e17c:	cmp	x20, x22
    e180:	b.cs	e1d4 <areadlink_with_size@@Base+0x138>  // b.hs, b.nlast
    e184:	mov	x0, x19
    e188:	mov	x1, x20
    e18c:	bl	a720 <realloc@plt>
    e190:	cmp	x0, #0x0
    e194:	csel	x19, x19, x0, eq  // eq = none
    e198:	b	e1d4 <areadlink_with_size@@Base+0x138>
    e19c:	mov	x25, x0
    e1a0:	mov	x0, x19
    e1a4:	bl	a960 <free@plt>
    e1a8:	mov	x19, xzr
    e1ac:	str	w26, [x25]
    e1b0:	b	e1d4 <areadlink_with_size@@Base+0x138>
    e1b4:	mov	x0, x20
    e1b8:	bl	a540 <malloc@plt>
    e1bc:	mov	x19, x0
    e1c0:	cbz	x0, e1d4 <areadlink_with_size@@Base+0x138>
    e1c4:	mov	x0, x19
    e1c8:	mov	x1, x23
    e1cc:	mov	x2, x20
    e1d0:	bl	a210 <memcpy@plt>
    e1d4:	mov	x0, x19
    e1d8:	ldp	x20, x19, [sp, #192]
    e1dc:	ldp	x22, x21, [sp, #176]
    e1e0:	ldp	x24, x23, [sp, #160]
    e1e4:	ldp	x26, x25, [sp, #144]
    e1e8:	ldp	x29, x30, [sp, #128]
    e1ec:	add	sp, sp, #0xd0
    e1f0:	ret

000000000000e1f4 <argp_make_fmtstream@@Base>:
    e1f4:	stp	x29, x30, [sp, #-64]!
    e1f8:	str	x23, [sp, #16]
    e1fc:	mov	x23, x0
    e200:	mov	w0, #0x48                  	// #72
    e204:	stp	x22, x21, [sp, #32]
    e208:	stp	x20, x19, [sp, #48]
    e20c:	mov	x29, sp
    e210:	mov	x20, x3
    e214:	mov	x21, x2
    e218:	mov	x22, x1
    e21c:	bl	a540 <malloc@plt>
    e220:	mov	x19, x0
    e224:	cbz	x0, e25c <argp_make_fmtstream@@Base+0x68>
    e228:	mov	w0, #0xc8                  	// #200
    e22c:	stp	x23, x22, [x19]
    e230:	stp	x21, x20, [x19, #16]
    e234:	stp	xzr, xzr, [x19, #32]
    e238:	bl	a540 <malloc@plt>
    e23c:	str	x0, [x19, #48]
    e240:	cbz	x0, e250 <argp_make_fmtstream@@Base+0x5c>
    e244:	add	x8, x0, #0xc8
    e248:	stp	x0, x8, [x19, #56]
    e24c:	b	e25c <argp_make_fmtstream@@Base+0x68>
    e250:	mov	x0, x19
    e254:	bl	a960 <free@plt>
    e258:	mov	x19, xzr
    e25c:	mov	x0, x19
    e260:	ldp	x20, x19, [sp, #48]
    e264:	ldp	x22, x21, [sp, #32]
    e268:	ldr	x23, [sp, #16]
    e26c:	ldp	x29, x30, [sp], #64
    e270:	ret

000000000000e274 <argp_fmtstream_free@@Base>:
    e274:	stp	x29, x30, [sp, #-32]!
    e278:	str	x19, [sp, #16]
    e27c:	mov	x29, sp
    e280:	mov	x19, x0
    e284:	bl	a470 <_argp_fmtstream_update@plt>
    e288:	ldp	x0, x8, [x19, #48]
    e28c:	subs	x2, x8, x0
    e290:	b.ls	e2a0 <argp_fmtstream_free@@Base+0x2c>  // b.plast
    e294:	ldr	x3, [x19]
    e298:	mov	w1, #0x1                   	// #1
    e29c:	bl	a270 <fwrite_unlocked@plt>
    e2a0:	ldr	x0, [x19, #48]
    e2a4:	bl	a960 <free@plt>
    e2a8:	mov	x0, x19
    e2ac:	ldr	x19, [sp, #16]
    e2b0:	ldp	x29, x30, [sp], #32
    e2b4:	b	a960 <free@plt>

000000000000e2b8 <_argp_fmtstream_update@@Base>:
    e2b8:	sub	sp, sp, #0x70
    e2bc:	stp	x29, x30, [sp, #16]
    e2c0:	stp	x28, x27, [sp, #32]
    e2c4:	stp	x26, x25, [sp, #48]
    e2c8:	stp	x24, x23, [sp, #64]
    e2cc:	stp	x22, x21, [sp, #80]
    e2d0:	stp	x20, x19, [sp, #96]
    e2d4:	ldr	x8, [x0, #32]
    e2d8:	ldp	x9, x27, [x0, #48]
    e2dc:	mov	x19, x0
    e2e0:	add	x29, sp, #0x10
    e2e4:	add	x21, x9, x8
    e2e8:	cmp	x21, x27
    e2ec:	b.cs	e728 <_argp_fmtstream_update@@Base+0x470>  // b.hs, b.nlast
    e2f0:	ldr	x23, [x19, #40]
    e2f4:	mov	w25, #0x20                  	// #32
    e2f8:	b	e314 <_argp_fmtstream_update@@Base+0x5c>
    e2fc:	mov	x23, xzr
    e300:	add	x20, x24, #0x1
    e304:	str	xzr, [x19, #40]
    e308:	cmp	x20, x27
    e30c:	mov	x21, x20
    e310:	b.cs	e728 <_argp_fmtstream_update@@Base+0x470>  // b.hs, b.nlast
    e314:	cbnz	x23, e370 <_argp_fmtstream_update@@Base+0xb8>
    e318:	ldr	x23, [x19, #8]
    e31c:	cbz	x23, e370 <_argp_fmtstream_update@@Base+0xb8>
    e320:	ldr	x8, [x19, #64]
    e324:	add	x9, x27, x23
    e328:	mov	x20, x23
    e32c:	cmp	x9, x8
    e330:	b.cs	e3a8 <_argp_fmtstream_update@@Base+0xf0>  // b.hs, b.nlast
    e334:	add	x20, x21, x23
    e338:	sub	x2, x27, x21
    e33c:	mov	x0, x20
    e340:	mov	x1, x21
    e344:	bl	a220 <memmove@plt>
    e348:	ldr	x8, [x19, #56]
    e34c:	mov	w1, #0x20                  	// #32
    e350:	mov	x0, x21
    e354:	mov	x2, x23
    e358:	add	x8, x8, x23
    e35c:	str	x8, [x19, #56]
    e360:	bl	a630 <memset@plt>
    e364:	mov	x21, x20
    e368:	ldr	x27, [x19, #56]
    e36c:	str	x23, [x19, #40]
    e370:	sub	x26, x27, x21
    e374:	mov	w1, #0xa                   	// #10
    e378:	mov	x0, x21
    e37c:	mov	x2, x26
    e380:	bl	ab70 <memchr@plt>
    e384:	mov	x24, x0
    e388:	tbnz	x23, #63, e3e4 <_argp_fmtstream_update@@Base+0x12c>
    e38c:	cbz	x24, e3f0 <_argp_fmtstream_update@@Base+0x138>
    e390:	ldr	x20, [x19, #16]
    e394:	sub	x8, x24, x21
    e398:	add	x8, x8, x23
    e39c:	cmp	x8, x20
    e3a0:	b.lt	e2fc <_argp_fmtstream_update@@Base+0x44>  // b.tstop
    e3a4:	b	e404 <_argp_fmtstream_update@@Base+0x14c>
    e3a8:	ldr	x0, [x19]
    e3ac:	ldp	x8, x9, [x0, #40]
    e3b0:	cmp	x8, x9
    e3b4:	b.cs	e3d0 <_argp_fmtstream_update@@Base+0x118>  // b.hs, b.nlast
    e3b8:	add	x9, x8, #0x1
    e3bc:	str	x9, [x0, #40]
    e3c0:	strb	w25, [x8]
    e3c4:	subs	x20, x20, #0x1
    e3c8:	b.ne	e3a8 <_argp_fmtstream_update@@Base+0xf0>  // b.any
    e3cc:	b	e368 <_argp_fmtstream_update@@Base+0xb0>
    e3d0:	mov	w1, #0x20                  	// #32
    e3d4:	bl	a880 <__overflow@plt>
    e3d8:	subs	x20, x20, #0x1
    e3dc:	b.ne	e3a8 <_argp_fmtstream_update@@Base+0xf0>  // b.any
    e3e0:	b	e368 <_argp_fmtstream_update@@Base+0xb0>
    e3e4:	mov	x23, xzr
    e3e8:	str	xzr, [x19, #40]
    e3ec:	cbnz	x24, e390 <_argp_fmtstream_update@@Base+0xd8>
    e3f0:	ldr	x20, [x19, #16]
    e3f4:	add	x8, x23, x26
    e3f8:	mov	x24, x27
    e3fc:	cmp	x8, x20
    e400:	b.cc	e70c <_argp_fmtstream_update@@Base+0x454>  // b.lo, b.ul, b.last
    e404:	ldr	x28, [x19, #24]
    e408:	tbnz	x28, #63, e448 <_argp_fmtstream_update@@Base+0x190>
    e40c:	str	x26, [sp, #8]
    e410:	subs	x26, x20, x23
    e414:	add	x20, x21, x26
    e418:	b.mi	e494 <_argp_fmtstream_update@@Base+0x1dc>  // b.first
    e41c:	bl	a900 <__ctype_b_loc@plt>
    e420:	ldr	x8, [x0]
    e424:	mov	x22, x20
    e428:	ldrb	w9, [x22]
    e42c:	ldrh	w9, [x8, x9, lsl #1]
    e430:	tbnz	w9, #0, e4a0 <_argp_fmtstream_update@@Base+0x1e8>
    e434:	sub	x22, x22, #0x1
    e438:	cmp	x22, x21
    e43c:	b.cs	e428 <_argp_fmtstream_update@@Base+0x170>  // b.hs, b.nlast
    e440:	mov	w8, wzr
    e444:	b	e4a4 <_argp_fmtstream_update@@Base+0x1ec>
    e448:	cmp	x24, x27
    e44c:	sub	x22, x20, #0x1
    e450:	b.cs	e714 <_argp_fmtstream_update@@Base+0x45c>  // b.hs, b.nlast
    e454:	sub	x8, x22, x23
    e458:	add	x0, x21, x8
    e45c:	sub	x2, x27, x24
    e460:	mov	x1, x24
    e464:	bl	a220 <memmove@plt>
    e468:	ldr	x8, [x19, #40]
    e46c:	ldr	x9, [x19, #56]
    e470:	mov	x23, xzr
    e474:	str	xzr, [x19, #40]
    e478:	sub	x8, x22, x8
    e47c:	add	x8, x21, x8
    e480:	sub	x8, x24, x8
    e484:	add	x27, x9, x8
    e488:	str	x27, [x19, #56]
    e48c:	add	x20, x21, x20
    e490:	b	e308 <_argp_fmtstream_update@@Base+0x50>
    e494:	mov	w8, wzr
    e498:	mov	x22, x20
    e49c:	b	e4a4 <_argp_fmtstream_update@@Base+0x1ec>
    e4a0:	mov	w8, #0x1                   	// #1
    e4a4:	add	x23, x22, #0x1
    e4a8:	cmp	x23, x21
    e4ac:	b.ls	e4e4 <_argp_fmtstream_update@@Base+0x22c>  // b.plast
    e4b0:	cbz	w8, e540 <_argp_fmtstream_update@@Base+0x288>
    e4b4:	ldr	x24, [sp, #8]
    e4b8:	sub	x8, x22, #0x1
    e4bc:	mov	x22, x8
    e4c0:	cmp	x8, x21
    e4c4:	b.cc	e544 <_argp_fmtstream_update@@Base+0x28c>  // b.lo, b.ul, b.last
    e4c8:	bl	a900 <__ctype_b_loc@plt>
    e4cc:	mov	x8, x22
    e4d0:	ldr	x9, [x0]
    e4d4:	ldrb	w10, [x8], #-1
    e4d8:	ldrh	w9, [x9, x10, lsl #1]
    e4dc:	tbnz	w9, #0, e4bc <_argp_fmtstream_update@@Base+0x204>
    e4e0:	b	e544 <_argp_fmtstream_update@@Base+0x28c>
    e4e4:	cmp	x20, x24
    e4e8:	b.cs	e518 <_argp_fmtstream_update@@Base+0x260>  // b.hs, b.nlast
    e4ec:	add	x8, x21, x26
    e4f0:	add	x8, x8, #0x1
    e4f4:	mov	x20, x8
    e4f8:	cmp	x8, x24
    e4fc:	b.cs	e518 <_argp_fmtstream_update@@Base+0x260>  // b.hs, b.nlast
    e500:	bl	a900 <__ctype_b_loc@plt>
    e504:	mov	x8, x20
    e508:	ldr	x9, [x0]
    e50c:	ldrb	w10, [x8], #1
    e510:	ldrh	w9, [x9, x10, lsl #1]
    e514:	tbz	w9, #0, e4f4 <_argp_fmtstream_update@@Base+0x23c>
    e518:	cmp	x20, x24
    e51c:	b.eq	e2fc <_argp_fmtstream_update@@Base+0x44>  // b.none
    e520:	bl	a900 <__ctype_b_loc@plt>
    e524:	ldr	x8, [x0]
    e528:	mov	x23, x20
    e52c:	ldrb	w9, [x23, #1]!
    e530:	ldrh	w9, [x8, x9, lsl #1]
    e534:	tbnz	w9, #0, e52c <_argp_fmtstream_update@@Base+0x274>
    e538:	ldr	x24, [sp, #8]
    e53c:	b	e548 <_argp_fmtstream_update@@Base+0x290>
    e540:	ldr	x24, [sp, #8]
    e544:	add	x20, x22, #0x1
    e548:	add	x8, x27, #0x1
    e54c:	cmp	x23, x8
    e550:	b.eq	e574 <_argp_fmtstream_update@@Base+0x2bc>  // b.none
    e554:	cmp	x27, x23
    e558:	b.ls	e5d4 <_argp_fmtstream_update@@Base+0x31c>  // b.plast
    e55c:	mvn	x8, x20
    e560:	add	x8, x8, x23
    e564:	cmp	x8, x28
    e568:	b.ge	e5d4 <_argp_fmtstream_update@@Base+0x31c>  // b.tcont
    e56c:	ldr	x8, [x19, #64]
    e570:	b	e58c <_argp_fmtstream_update@@Base+0x2d4>
    e574:	cmp	x27, x23
    e578:	b.ls	e5d4 <_argp_fmtstream_update@@Base+0x31c>  // b.plast
    e57c:	ldr	x8, [x19, #64]
    e580:	sub	x9, x8, x20
    e584:	cmp	x9, x28
    e588:	b.gt	e5d4 <_argp_fmtstream_update@@Base+0x31c>
    e58c:	sub	x8, x8, x27
    e590:	add	x9, x28, #0x1
    e594:	cmp	x8, x9
    e598:	b.le	e5e0 <_argp_fmtstream_update@@Base+0x328>
    e59c:	sub	x22, x27, x23
    e5a0:	add	x24, x20, #0x1
    e5a4:	add	x0, x24, x28
    e5a8:	mov	x1, x23
    e5ac:	mov	x2, x22
    e5b0:	bl	a220 <memmove@plt>
    e5b4:	ldr	x8, [x19, #24]
    e5b8:	mov	w9, #0xa                   	// #10
    e5bc:	strb	w9, [x20]
    e5c0:	mov	x20, x24
    e5c4:	add	x23, x24, x8
    e5c8:	add	x8, x23, x22
    e5cc:	sub	x24, x8, x21
    e5d0:	b	e624 <_argp_fmtstream_update@@Base+0x36c>
    e5d4:	mov	w8, #0xa                   	// #10
    e5d8:	strb	w8, [x20], #1
    e5dc:	b	e624 <_argp_fmtstream_update@@Base+0x36c>
    e5e0:	ldr	x0, [x19, #48]
    e5e4:	subs	x2, x20, x0
    e5e8:	b.ls	e5f8 <_argp_fmtstream_update@@Base+0x340>  // b.plast
    e5ec:	ldr	x3, [x19]
    e5f0:	mov	w1, #0x1                   	// #1
    e5f4:	bl	a270 <fwrite_unlocked@plt>
    e5f8:	ldr	x0, [x19]
    e5fc:	ldp	x8, x9, [x0, #40]
    e600:	cmp	x8, x9
    e604:	b.cs	e700 <_argp_fmtstream_update@@Base+0x448>  // b.hs, b.nlast
    e608:	add	x9, x8, #0x1
    e60c:	str	x9, [x0, #40]
    e610:	mov	w9, #0xa                   	// #10
    e614:	strb	w9, [x8]
    e618:	ldr	x20, [x19, #48]
    e61c:	sub	x24, x27, x20
    e620:	mov	x21, x20
    e624:	ldr	x8, [x19, #24]
    e628:	sub	x9, x23, x20
    e62c:	cmp	x9, x8
    e630:	b.ge	e69c <_argp_fmtstream_update@@Base+0x3e4>  // b.tcont
    e634:	add	x9, x21, x24
    e638:	add	x9, x9, #0x1
    e63c:	cmp	x23, x9
    e640:	b.ne	e654 <_argp_fmtstream_update@@Base+0x39c>  // b.any
    e644:	ldr	x9, [x19, #64]
    e648:	sub	x9, x9, x23
    e64c:	cmp	x9, x8
    e650:	b.ge	e69c <_argp_fmtstream_update@@Base+0x3e4>  // b.tcont
    e654:	cmp	x8, #0x1
    e658:	b.lt	e6c0 <_argp_fmtstream_update@@Base+0x408>  // b.tstop
    e65c:	mov	x22, xzr
    e660:	ldr	x0, [x19]
    e664:	ldp	x8, x9, [x0, #40]
    e668:	cmp	x8, x9
    e66c:	b.cs	e690 <_argp_fmtstream_update@@Base+0x3d8>  // b.hs, b.nlast
    e670:	add	x9, x8, #0x1
    e674:	str	x9, [x0, #40]
    e678:	strb	w25, [x8]
    e67c:	ldr	x8, [x19, #24]
    e680:	add	x22, x22, #0x1
    e684:	cmp	x8, x22
    e688:	b.gt	e660 <_argp_fmtstream_update@@Base+0x3a8>
    e68c:	b	e6c0 <_argp_fmtstream_update@@Base+0x408>
    e690:	mov	w1, #0x20                  	// #32
    e694:	bl	a880 <__overflow@plt>
    e698:	b	e67c <_argp_fmtstream_update@@Base+0x3c4>
    e69c:	cmp	x8, #0x1
    e6a0:	b.lt	e6c0 <_argp_fmtstream_update@@Base+0x408>  // b.tstop
    e6a4:	mov	x9, xzr
    e6a8:	strb	w25, [x20, x9]
    e6ac:	ldr	x8, [x19, #24]
    e6b0:	add	x9, x9, #0x1
    e6b4:	cmp	x8, x9
    e6b8:	b.gt	e6a8 <_argp_fmtstream_update@@Base+0x3f0>
    e6bc:	add	x20, x20, x9
    e6c0:	cmp	x20, x23
    e6c4:	b.cs	e6e0 <_argp_fmtstream_update@@Base+0x428>  // b.hs, b.nlast
    e6c8:	add	x8, x21, x24
    e6cc:	sub	x2, x8, x23
    e6d0:	mov	x0, x20
    e6d4:	mov	x1, x23
    e6d8:	bl	a220 <memmove@plt>
    e6dc:	ldr	x8, [x19, #24]
    e6e0:	sub	x9, x24, x23
    e6e4:	cmp	x8, #0x0
    e6e8:	add	x9, x9, x21
    e6ec:	csinv	x23, x8, xzr, ne  // ne = any
    e6f0:	add	x27, x20, x9
    e6f4:	str	x27, [x19, #56]
    e6f8:	str	x23, [x19, #40]
    e6fc:	b	e308 <_argp_fmtstream_update@@Base+0x50>
    e700:	mov	w1, #0xa                   	// #10
    e704:	bl	a880 <__overflow@plt>
    e708:	b	e618 <_argp_fmtstream_update@@Base+0x360>
    e70c:	str	x8, [x19, #40]
    e710:	b	e728 <_argp_fmtstream_update@@Base+0x470>
    e714:	add	x8, x23, x26
    e718:	str	x8, [x19, #40]
    e71c:	sub	x8, x22, x8
    e720:	add	x27, x27, x8
    e724:	str	x27, [x19, #56]
    e728:	ldr	x8, [x19, #48]
    e72c:	sub	x8, x27, x8
    e730:	str	x8, [x19, #32]
    e734:	ldp	x20, x19, [sp, #96]
    e738:	ldp	x22, x21, [sp, #80]
    e73c:	ldp	x24, x23, [sp, #64]
    e740:	ldp	x26, x25, [sp, #48]
    e744:	ldp	x28, x27, [sp, #32]
    e748:	ldp	x29, x30, [sp, #16]
    e74c:	add	sp, sp, #0x70
    e750:	ret

000000000000e754 <_argp_fmtstream_ensure@@Base>:
    e754:	stp	x29, x30, [sp, #-32]!
    e758:	stp	x20, x19, [sp, #16]
    e75c:	ldp	x9, x8, [x0, #56]
    e760:	mov	x29, sp
    e764:	sub	x8, x8, x9
    e768:	cmp	x8, x1
    e76c:	b.cs	e7dc <_argp_fmtstream_ensure@@Base+0x88>  // b.hs, b.nlast
    e770:	mov	x20, x1
    e774:	mov	x19, x0
    e778:	bl	a470 <_argp_fmtstream_update@plt>
    e77c:	ldp	x0, x8, [x19, #48]
    e780:	ldr	x3, [x19]
    e784:	mov	w1, #0x1                   	// #1
    e788:	sub	x2, x8, x0
    e78c:	bl	a270 <fwrite_unlocked@plt>
    e790:	mov	x8, x0
    e794:	ldp	x0, x9, [x19, #48]
    e798:	sub	x10, x9, x0
    e79c:	cmp	x8, x10
    e7a0:	b.ne	e7e4 <_argp_fmtstream_ensure@@Base+0x90>  // b.any
    e7a4:	ldr	x8, [x19, #64]
    e7a8:	str	x0, [x19, #56]
    e7ac:	str	xzr, [x19, #32]
    e7b0:	sub	x8, x8, x0
    e7b4:	cmp	x8, x20
    e7b8:	b.cs	e7dc <_argp_fmtstream_ensure@@Base+0x88>  // b.hs, b.nlast
    e7bc:	adds	x20, x8, x20
    e7c0:	b.cs	e80c <_argp_fmtstream_ensure@@Base+0xb8>  // b.hs, b.nlast
    e7c4:	mov	x1, x20
    e7c8:	bl	a720 <realloc@plt>
    e7cc:	cbz	x0, e80c <_argp_fmtstream_ensure@@Base+0xb8>
    e7d0:	add	x8, x0, x20
    e7d4:	stp	x0, x0, [x19, #48]
    e7d8:	str	x8, [x19, #64]
    e7dc:	mov	w0, #0x1                   	// #1
    e7e0:	b	e820 <_argp_fmtstream_ensure@@Base+0xcc>
    e7e4:	ldr	x10, [x19, #32]
    e7e8:	sub	x9, x9, x8
    e7ec:	add	x1, x0, x8
    e7f0:	sub	x2, x9, x0
    e7f4:	sub	x8, x10, x8
    e7f8:	str	x9, [x19, #56]
    e7fc:	str	x8, [x19, #32]
    e800:	bl	a220 <memmove@plt>
    e804:	mov	w0, wzr
    e808:	b	e820 <_argp_fmtstream_ensure@@Base+0xcc>
    e80c:	bl	ad80 <__errno_location@plt>
    e810:	mov	x8, x0
    e814:	mov	w0, wzr
    e818:	mov	w9, #0xc                   	// #12
    e81c:	str	w9, [x8]
    e820:	ldp	x20, x19, [sp, #16]
    e824:	ldp	x29, x30, [sp], #32
    e828:	ret

000000000000e82c <argp_fmtstream_printf@@Base>:
    e82c:	sub	sp, sp, #0x140
    e830:	stp	x29, x30, [sp, #240]
    e834:	add	x29, sp, #0xf0
    e838:	stp	x22, x21, [sp, #288]
    e83c:	mov	x22, #0xffffffffffffffd0    	// #-48
    e840:	mov	x8, sp
    e844:	sub	x9, x29, #0x70
    e848:	stp	x28, x25, [sp, #256]
    e84c:	stp	x24, x23, [sp, #272]
    e850:	stp	x20, x19, [sp, #304]
    e854:	mov	x20, x1
    e858:	mov	x19, x0
    e85c:	mov	w1, #0x96                  	// #150
    e860:	movk	x22, #0xff80, lsl #32
    e864:	add	x23, x29, #0x50
    e868:	add	x24, x8, #0x80
    e86c:	add	x25, x9, #0x30
    e870:	stp	x2, x3, [x29, #-112]
    e874:	stp	x4, x5, [x29, #-96]
    e878:	stp	x6, x7, [x29, #-80]
    e87c:	stp	q1, q2, [sp, #16]
    e880:	stp	q3, q4, [sp, #48]
    e884:	str	q0, [sp]
    e888:	stp	q5, q6, [sp, #80]
    e88c:	str	q7, [sp, #112]
    e890:	mov	x0, x19
    e894:	bl	ac60 <_argp_fmtstream_ensure@plt>
    e898:	cbz	w0, e8ec <argp_fmtstream_printf@@Base+0xc0>
    e89c:	stp	x24, x22, [x29, #-16]
    e8a0:	stp	x23, x25, [x29, #-32]
    e8a4:	ldp	x0, x8, [x19, #56]
    e8a8:	ldp	q0, q1, [x29, #-32]
    e8ac:	sub	x3, x29, #0x40
    e8b0:	mov	x2, x20
    e8b4:	sub	x21, x8, x0
    e8b8:	mov	x1, x21
    e8bc:	stp	q0, q1, [x29, #-64]
    e8c0:	bl	aca0 <vsnprintf@plt>
    e8c4:	mov	w8, w0
    e8c8:	sxtw	x0, w8
    e8cc:	add	w8, w8, #0x1
    e8d0:	cmp	x21, x0
    e8d4:	sxtw	x1, w8
    e8d8:	b.ls	e890 <argp_fmtstream_printf@@Base+0x64>  // b.plast
    e8dc:	ldr	x8, [x19, #56]
    e8e0:	add	x8, x8, x0
    e8e4:	str	x8, [x19, #56]
    e8e8:	b	e8f0 <argp_fmtstream_printf@@Base+0xc4>
    e8ec:	mov	x0, #0xffffffffffffffff    	// #-1
    e8f0:	ldp	x20, x19, [sp, #304]
    e8f4:	ldp	x22, x21, [sp, #288]
    e8f8:	ldp	x24, x23, [sp, #272]
    e8fc:	ldp	x28, x25, [sp, #256]
    e900:	ldp	x29, x30, [sp, #240]
    e904:	add	sp, sp, #0x140
    e908:	ret

000000000000e90c <argp_fmtstream_write@@Base>:
    e90c:	stp	x29, x30, [sp, #-48]!
    e910:	stp	x20, x19, [sp, #32]
    e914:	mov	x20, x0
    e918:	ldr	x0, [x0, #56]
    e91c:	ldr	x8, [x20, #64]
    e920:	str	x21, [sp, #16]
    e924:	mov	x19, x2
    e928:	add	x9, x0, x2
    e92c:	cmp	x9, x8
    e930:	mov	x21, x1
    e934:	mov	x29, sp
    e938:	b.ls	e950 <argp_fmtstream_write@@Base+0x44>  // b.plast
    e93c:	mov	x0, x20
    e940:	mov	x1, x19
    e944:	bl	ac60 <_argp_fmtstream_ensure@plt>
    e948:	cbz	w0, e96c <argp_fmtstream_write@@Base+0x60>
    e94c:	ldr	x0, [x20, #56]
    e950:	mov	x1, x21
    e954:	mov	x2, x19
    e958:	bl	a210 <memcpy@plt>
    e95c:	ldr	x8, [x20, #56]
    e960:	add	x8, x8, x19
    e964:	str	x8, [x20, #56]
    e968:	b	e970 <argp_fmtstream_write@@Base+0x64>
    e96c:	mov	x19, xzr
    e970:	mov	x0, x19
    e974:	ldp	x20, x19, [sp, #32]
    e978:	ldr	x21, [sp, #16]
    e97c:	ldp	x29, x30, [sp], #48
    e980:	ret

000000000000e984 <argp_fmtstream_puts@@Base>:
    e984:	stp	x29, x30, [sp, #-48]!
    e988:	stp	x20, x19, [sp, #32]
    e98c:	mov	x20, x0
    e990:	mov	x0, x1
    e994:	str	x21, [sp, #16]
    e998:	mov	x29, sp
    e99c:	mov	x21, x1
    e9a0:	bl	a280 <strlen@plt>
    e9a4:	cbz	x0, e9fc <argp_fmtstream_puts@@Base+0x78>
    e9a8:	mov	x19, x0
    e9ac:	ldp	x0, x8, [x20, #56]
    e9b0:	add	x9, x0, x19
    e9b4:	cmp	x9, x8
    e9b8:	b.ls	e9d0 <argp_fmtstream_puts@@Base+0x4c>  // b.plast
    e9bc:	mov	x0, x20
    e9c0:	mov	x1, x19
    e9c4:	bl	ac60 <_argp_fmtstream_ensure@plt>
    e9c8:	cbz	w0, e9f0 <argp_fmtstream_puts@@Base+0x6c>
    e9cc:	ldr	x0, [x20, #56]
    e9d0:	mov	x1, x21
    e9d4:	mov	x2, x19
    e9d8:	bl	a210 <memcpy@plt>
    e9dc:	ldr	x8, [x20, #56]
    e9e0:	add	x8, x8, x19
    e9e4:	str	x8, [x20, #56]
    e9e8:	mov	x8, x19
    e9ec:	b	e9f4 <argp_fmtstream_puts@@Base+0x70>
    e9f0:	mov	x8, xzr
    e9f4:	cmp	x8, x19
    e9f8:	csetm	w0, ne  // ne = any
    e9fc:	ldp	x20, x19, [sp, #32]
    ea00:	ldr	x21, [sp, #16]
    ea04:	ldp	x29, x30, [sp], #48
    ea08:	ret

000000000000ea0c <argp_fmtstream_putc@@Base>:
    ea0c:	stp	x29, x30, [sp, #-32]!
    ea10:	stp	x20, x19, [sp, #16]
    ea14:	ldp	x8, x9, [x0, #56]
    ea18:	mov	x19, x0
    ea1c:	mov	w20, w1
    ea20:	mov	x29, sp
    ea24:	cmp	x8, x9
    ea28:	b.cc	ea40 <argp_fmtstream_putc@@Base+0x34>  // b.lo, b.ul, b.last
    ea2c:	mov	w1, #0x1                   	// #1
    ea30:	mov	x0, x19
    ea34:	bl	ac60 <_argp_fmtstream_ensure@plt>
    ea38:	cbz	w0, ea54 <argp_fmtstream_putc@@Base+0x48>
    ea3c:	ldr	x8, [x19, #56]
    ea40:	add	x9, x8, #0x1
    ea44:	and	w0, w20, #0xff
    ea48:	str	x9, [x19, #56]
    ea4c:	strb	w20, [x8]
    ea50:	b	ea58 <argp_fmtstream_putc@@Base+0x4c>
    ea54:	mov	w0, #0xffffffff            	// #-1
    ea58:	ldp	x20, x19, [sp, #16]
    ea5c:	ldp	x29, x30, [sp], #32
    ea60:	ret

000000000000ea64 <argp_fmtstream_set_lmargin@@Base>:
    ea64:	stp	x29, x30, [sp, #-32]!
    ea68:	stp	x20, x19, [sp, #16]
    ea6c:	ldp	x9, x8, [x0, #48]
    ea70:	ldr	x10, [x0, #32]
    ea74:	mov	x19, x0
    ea78:	mov	x20, x1
    ea7c:	sub	x8, x8, x9
    ea80:	cmp	x8, x10
    ea84:	mov	x29, sp
    ea88:	b.ls	ea94 <argp_fmtstream_set_lmargin@@Base+0x30>  // b.plast
    ea8c:	mov	x0, x19
    ea90:	bl	a470 <_argp_fmtstream_update@plt>
    ea94:	ldr	x0, [x19, #8]
    ea98:	str	x20, [x19, #8]
    ea9c:	ldp	x20, x19, [sp, #16]
    eaa0:	ldp	x29, x30, [sp], #32
    eaa4:	ret

000000000000eaa8 <argp_fmtstream_set_rmargin@@Base>:
    eaa8:	stp	x29, x30, [sp, #-32]!
    eaac:	stp	x20, x19, [sp, #16]
    eab0:	ldp	x9, x8, [x0, #48]
    eab4:	ldr	x10, [x0, #32]
    eab8:	mov	x19, x0
    eabc:	mov	x20, x1
    eac0:	sub	x8, x8, x9
    eac4:	cmp	x8, x10
    eac8:	mov	x29, sp
    eacc:	b.ls	ead8 <argp_fmtstream_set_rmargin@@Base+0x30>  // b.plast
    ead0:	mov	x0, x19
    ead4:	bl	a470 <_argp_fmtstream_update@plt>
    ead8:	ldr	x0, [x19, #16]
    eadc:	str	x20, [x19, #16]
    eae0:	ldp	x20, x19, [sp, #16]
    eae4:	ldp	x29, x30, [sp], #32
    eae8:	ret

000000000000eaec <argp_fmtstream_set_wmargin@@Base>:
    eaec:	stp	x29, x30, [sp, #-32]!
    eaf0:	stp	x20, x19, [sp, #16]
    eaf4:	ldp	x9, x8, [x0, #48]
    eaf8:	ldr	x10, [x0, #32]
    eafc:	mov	x19, x0
    eb00:	mov	x20, x1
    eb04:	sub	x8, x8, x9
    eb08:	cmp	x8, x10
    eb0c:	mov	x29, sp
    eb10:	b.ls	eb1c <argp_fmtstream_set_wmargin@@Base+0x30>  // b.plast
    eb14:	mov	x0, x19
    eb18:	bl	a470 <_argp_fmtstream_update@plt>
    eb1c:	ldr	x0, [x19, #24]
    eb20:	str	x20, [x19, #24]
    eb24:	ldp	x20, x19, [sp, #16]
    eb28:	ldp	x29, x30, [sp], #32
    eb2c:	ret

000000000000eb30 <argp_fmtstream_point@@Base>:
    eb30:	stp	x29, x30, [sp, #-32]!
    eb34:	str	x19, [sp, #16]
    eb38:	ldp	x9, x8, [x0, #48]
    eb3c:	ldr	x10, [x0, #32]
    eb40:	mov	x19, x0
    eb44:	mov	x29, sp
    eb48:	sub	x8, x8, x9
    eb4c:	cmp	x8, x10
    eb50:	b.ls	eb5c <argp_fmtstream_point@@Base+0x2c>  // b.plast
    eb54:	mov	x0, x19
    eb58:	bl	a470 <_argp_fmtstream_update@plt>
    eb5c:	ldr	x8, [x19, #40]
    eb60:	ldr	x19, [sp, #16]
    eb64:	bic	x0, x8, x8, asr #63
    eb68:	ldp	x29, x30, [sp], #32
    eb6c:	ret

000000000000eb70 <argp_help@@Base>:
    eb70:	mov	x4, x3
    eb74:	mov	w3, w2
    eb78:	mov	x2, x1
    eb7c:	mov	x1, xzr
    eb80:	b	eb84 <argp_help@@Base+0x14>
    eb84:	stp	x29, x30, [sp, #-96]!
    eb88:	stp	x28, x27, [sp, #16]
    eb8c:	stp	x26, x25, [sp, #32]
    eb90:	stp	x24, x23, [sp, #48]
    eb94:	stp	x22, x21, [sp, #64]
    eb98:	stp	x20, x19, [sp, #80]
    eb9c:	mov	x29, sp
    eba0:	sub	sp, sp, #0x80
    eba4:	stp	x0, x4, [x29, #-88]
    eba8:	cbz	x2, ff00 <argp_help@@Base+0x1390>
    ebac:	mov	x0, x2
    ebb0:	mov	w20, w3
    ebb4:	mov	x21, x2
    ebb8:	mov	x22, x1
    ebbc:	bl	a2e0 <flockfile@plt>
    ebc0:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    ebc4:	ldr	w8, [x8, #1700]
    ebc8:	stur	x22, [x29, #-72]
    ebcc:	cbnz	w8, f08c <argp_help@@Base+0x51c>
    ebd0:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    ebd4:	add	x0, x0, #0x431
    ebd8:	bl	ada0 <getenv@plt>
    ebdc:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    ebe0:	add	x8, x8, #0x680
    ebe4:	ldp	q0, q1, [x8]
    ebe8:	ldr	x8, [x8, #32]
    ebec:	stp	q0, q1, [x29, #-48]
    ebf0:	stur	x8, [x29, #-16]
    ebf4:	cbz	x0, f08c <argp_help@@Base+0x51c>
    ebf8:	stur	w20, [x29, #-116]
    ebfc:	ldrb	w20, [x0]
    ec00:	mov	x23, x0
    ec04:	stur	x21, [x29, #-112]
    ec08:	cbz	w20, efa0 <argp_help@@Base+0x430>
    ec0c:	bl	a900 <__ctype_b_loc@plt>
    ec10:	adrp	x8, 2f000 <vasnprintf@@Base+0x124c>
    ec14:	add	x8, x8, #0x387
    ec18:	cmp	x22, #0x0
    ec1c:	adrp	x26, 2f000 <vasnprintf@@Base+0x124c>
    ec20:	adrp	x25, 2f000 <vasnprintf@@Base+0x124c>
    ec24:	adrp	x21, 2f000 <vasnprintf@@Base+0x124c>
    ec28:	mov	x24, x0
    ec2c:	add	x26, x26, #0x678
    ec30:	add	x25, x25, #0x688
    ec34:	add	x21, x21, #0x698
    ec38:	csel	x8, xzr, x8, eq  // eq = none
    ec3c:	stur	x8, [x29, #-96]
    ec40:	b	ec6c <argp_help@@Base+0xfc>
    ec44:	ldrb	w8, [x20, #15]
    ec48:	ldur	x22, [x29, #-72]
    ec4c:	sub	x9, x29, #0x30
    ec50:	str	w27, [x9, x8]
    ec54:	mov	x8, x19
    ec58:	ldrb	w9, [x8], #1
    ec5c:	cmp	w9, #0x2c
    ec60:	csel	x23, x8, x19, eq  // eq = none
    ec64:	ldrb	w20, [x23]
    ec68:	cbz	w20, efa0 <argp_help@@Base+0x430>
    ec6c:	ldr	x8, [x24]
    ec70:	and	x9, x20, #0xff
    ec74:	ldrh	w9, [x8, x9, lsl #1]
    ec78:	tbz	w9, #13, ec88 <argp_help@@Base+0x118>
    ec7c:	ldrb	w20, [x23, #1]!
    ec80:	ldrh	w9, [x8, x20, lsl #1]
    ec84:	tbnz	w9, #13, ec7c <argp_help@@Base+0x10c>
    ec88:	tbz	w9, #10, ef6c <argp_help@@Base+0x3fc>
    ec8c:	mov	w11, w20
    ec90:	mov	x10, x23
    ec94:	b	ec9c <argp_help@@Base+0x12c>
    ec98:	ldrb	w11, [x10, #1]!
    ec9c:	and	x9, x11, #0xff
    eca0:	ldrh	w9, [x8, x9, lsl #1]
    eca4:	tbnz	w9, #3, ec98 <argp_help@@Base+0x128>
    eca8:	and	w12, w11, #0xff
    ecac:	cmp	w12, #0x5f
    ecb0:	b.eq	ec98 <argp_help@@Base+0x128>  // b.none
    ecb4:	cmp	w12, #0x2d
    ecb8:	b.eq	ec98 <argp_help@@Base+0x128>  // b.none
    ecbc:	mov	x19, x10
    ecc0:	tbz	w9, #13, ecd4 <argp_help@@Base+0x164>
    ecc4:	mov	x19, x10
    ecc8:	ldrb	w11, [x19, #1]!
    eccc:	ldrh	w9, [x8, x11, lsl #1]
    ecd0:	tbnz	w9, #13, ecc8 <argp_help@@Base+0x158>
    ecd4:	ands	w11, w11, #0xff
    ecd8:	sub	x28, x10, x23
    ecdc:	b.eq	ed10 <argp_help@@Base+0x1a0>  // b.none
    ece0:	cmp	w11, #0x2c
    ece4:	b.eq	ed10 <argp_help@@Base+0x1a0>  // b.none
    ece8:	cmp	w11, #0x3d
    ecec:	b.ne	ecfc <argp_help@@Base+0x18c>  // b.any
    ecf0:	ldrb	w9, [x19, #1]!
    ecf4:	ldrh	w9, [x8, x9, lsl #1]
    ecf8:	tbnz	w9, #13, ecf0 <argp_help@@Base+0x180>
    ecfc:	mov	x20, x25
    ed00:	tbnz	w9, #11, ed5c <argp_help@@Base+0x1ec>
    ed04:	mov	w22, wzr
    ed08:	mov	w27, wzr
    ed0c:	b	ed98 <argp_help@@Base+0x228>
    ed10:	and	w8, w20, #0xff
    ed14:	cmp	w8, #0x6e
    ed18:	b.ne	ed4c <argp_help@@Base+0x1dc>  // b.any
    ed1c:	ldrb	w8, [x23, #1]
    ed20:	cmp	w8, #0x6f
    ed24:	b.ne	ed4c <argp_help@@Base+0x1dc>  // b.any
    ed28:	ldrb	w8, [x23, #2]
    ed2c:	cmp	w8, #0x2d
    ed30:	b.ne	ed4c <argp_help@@Base+0x1dc>  // b.any
    ed34:	mov	w27, wzr
    ed38:	add	x23, x23, #0x3
    ed3c:	sub	x28, x28, #0x3
    ed40:	mov	w22, #0x1                   	// #1
    ed44:	mov	x20, x25
    ed48:	b	ed98 <argp_help@@Base+0x228>
    ed4c:	mov	w22, #0x1                   	// #1
    ed50:	mov	w27, #0x1                   	// #1
    ed54:	mov	x20, x25
    ed58:	b	ed98 <argp_help@@Base+0x228>
    ed5c:	mov	w2, #0xa                   	// #10
    ed60:	mov	x0, x19
    ed64:	mov	x1, xzr
    ed68:	bl	a930 <strtol@plt>
    ed6c:	ldr	x8, [x24]
    ed70:	mov	x27, x0
    ed74:	sub	x19, x19, #0x1
    ed78:	ldrb	w9, [x19, #1]!
    ed7c:	ldrh	w9, [x8, x9, lsl #1]
    ed80:	tbnz	w9, #11, ed78 <argp_help@@Base+0x208>
    ed84:	tbz	w9, #13, ed94 <argp_help@@Base+0x224>
    ed88:	ldrb	w9, [x19, #1]!
    ed8c:	ldrh	w9, [x8, x9, lsl #1]
    ed90:	tbnz	w9, #13, ed88 <argp_help@@Base+0x218>
    ed94:	mov	w22, wzr
    ed98:	mov	x0, x26
    ed9c:	bl	a280 <strlen@plt>
    eda0:	cmp	x0, x28
    eda4:	b.ne	edbc <argp_help@@Base+0x24c>  // b.any
    eda8:	mov	x0, x23
    edac:	mov	x1, x26
    edb0:	mov	x2, x28
    edb4:	bl	a600 <strncmp@plt>
    edb8:	cbz	w0, ef24 <argp_help@@Base+0x3b4>
    edbc:	mov	x0, x20
    edc0:	bl	a280 <strlen@plt>
    edc4:	cmp	x0, x28
    edc8:	b.ne	ede0 <argp_help@@Base+0x270>  // b.any
    edcc:	mov	x0, x23
    edd0:	mov	x1, x20
    edd4:	mov	x2, x28
    edd8:	bl	a600 <strncmp@plt>
    eddc:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    ede0:	mov	x0, x21
    ede4:	mov	x20, x21
    ede8:	bl	a280 <strlen@plt>
    edec:	cmp	x0, x28
    edf0:	b.ne	ee08 <argp_help@@Base+0x298>  // b.any
    edf4:	mov	x0, x23
    edf8:	mov	x1, x20
    edfc:	mov	x2, x28
    ee00:	bl	a600 <strncmp@plt>
    ee04:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    ee08:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    ee0c:	add	x20, x20, #0x6a8
    ee10:	mov	x0, x20
    ee14:	bl	a280 <strlen@plt>
    ee18:	cmp	x0, x28
    ee1c:	b.ne	ee34 <argp_help@@Base+0x2c4>  // b.any
    ee20:	mov	x0, x23
    ee24:	mov	x1, x20
    ee28:	mov	x2, x28
    ee2c:	bl	a600 <strncmp@plt>
    ee30:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    ee34:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    ee38:	add	x20, x20, #0x6b8
    ee3c:	mov	x0, x20
    ee40:	bl	a280 <strlen@plt>
    ee44:	cmp	x0, x28
    ee48:	b.ne	ee60 <argp_help@@Base+0x2f0>  // b.any
    ee4c:	mov	x0, x23
    ee50:	mov	x1, x20
    ee54:	mov	x2, x28
    ee58:	bl	a600 <strncmp@plt>
    ee5c:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    ee60:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    ee64:	add	x20, x20, #0x6c8
    ee68:	mov	x0, x20
    ee6c:	bl	a280 <strlen@plt>
    ee70:	cmp	x0, x28
    ee74:	b.ne	ee8c <argp_help@@Base+0x31c>  // b.any
    ee78:	mov	x0, x23
    ee7c:	mov	x1, x20
    ee80:	mov	x2, x28
    ee84:	bl	a600 <strncmp@plt>
    ee88:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    ee8c:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    ee90:	add	x20, x20, #0x6d8
    ee94:	mov	x0, x20
    ee98:	bl	a280 <strlen@plt>
    ee9c:	cmp	x0, x28
    eea0:	b.ne	eeb8 <argp_help@@Base+0x348>  // b.any
    eea4:	mov	x0, x23
    eea8:	mov	x1, x20
    eeac:	mov	x2, x28
    eeb0:	bl	a600 <strncmp@plt>
    eeb4:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    eeb8:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    eebc:	add	x20, x20, #0x6e8
    eec0:	mov	x0, x20
    eec4:	bl	a280 <strlen@plt>
    eec8:	cmp	x0, x28
    eecc:	b.ne	eee4 <argp_help@@Base+0x374>  // b.any
    eed0:	mov	x0, x23
    eed4:	mov	x1, x20
    eed8:	mov	x2, x28
    eedc:	bl	a600 <strncmp@plt>
    eee0:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    eee4:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
    eee8:	add	x20, x20, #0x6f8
    eeec:	mov	x0, x20
    eef0:	bl	a280 <strlen@plt>
    eef4:	cmp	x0, x28
    eef8:	b.ne	ef10 <argp_help@@Base+0x3a0>  // b.any
    eefc:	mov	x0, x23
    ef00:	mov	x1, x20
    ef04:	mov	x2, x28
    ef08:	bl	a600 <strncmp@plt>
    ef0c:	cbz	w0, ef28 <argp_help@@Base+0x3b8>
    ef10:	ldur	x0, [x29, #-96]
    ef14:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    ef18:	mov	w2, #0x5                   	// #5
    ef1c:	add	x1, x1, #0x46e
    ef20:	b	ef44 <argp_help@@Base+0x3d4>
    ef24:	mov	x20, x26
    ef28:	cbz	w22, ec44 <argp_help@@Base+0xd4>
    ef2c:	ldrb	w9, [x20, #14]
    ef30:	cbnz	w9, ec44 <argp_help@@Base+0xd4>
    ef34:	ldur	x0, [x29, #-96]
    ef38:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    ef3c:	mov	w2, #0x5                   	// #5
    ef40:	add	x1, x1, #0x43f
    ef44:	bl	ac80 <dcgettext@plt>
    ef48:	ldur	x22, [x29, #-72]
    ef4c:	mov	x3, x0
    ef50:	mov	w1, wzr
    ef54:	mov	w2, wzr
    ef58:	mov	x0, x22
    ef5c:	mov	w4, w28
    ef60:	mov	x5, x23
    ef64:	bl	a5a0 <argp_failure@plt>
    ef68:	b	ec54 <argp_help@@Base+0xe4>
    ef6c:	tst	w20, #0xff
    ef70:	b.eq	efa0 <argp_help@@Base+0x430>  // b.none
    ef74:	ldur	x0, [x29, #-96]
    ef78:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    ef7c:	add	x1, x1, #0x494
    ef80:	mov	w2, #0x5                   	// #5
    ef84:	bl	ac80 <dcgettext@plt>
    ef88:	mov	x3, x0
    ef8c:	mov	x0, x22
    ef90:	mov	w1, wzr
    ef94:	mov	w2, wzr
    ef98:	mov	x4, x23
    ef9c:	bl	a5a0 <argp_failure@plt>
    efa0:	ldur	w9, [x29, #-40]
    efa4:	ldur	w8, [x29, #-16]
    efa8:	cmp	w9, w8
    efac:	b.ge	f014 <argp_help@@Base+0x4a4>  // b.tcont
    efb0:	ldur	w9, [x29, #-36]
    efb4:	cmp	w9, w8
    efb8:	b.ge	f020 <argp_help@@Base+0x4b0>  // b.tcont
    efbc:	ldur	w9, [x29, #-32]
    efc0:	cmp	w9, w8
    efc4:	b.ge	f02c <argp_help@@Base+0x4bc>  // b.tcont
    efc8:	ldur	w9, [x29, #-28]
    efcc:	cmp	w9, w8
    efd0:	b.ge	f038 <argp_help@@Base+0x4c8>  // b.tcont
    efd4:	ldur	w9, [x29, #-24]
    efd8:	cmp	w9, w8
    efdc:	b.ge	f044 <argp_help@@Base+0x4d4>  // b.tcont
    efe0:	ldur	w9, [x29, #-20]
    efe4:	ldur	x21, [x29, #-112]
    efe8:	ldur	w20, [x29, #-116]
    efec:	cmp	w9, w8
    eff0:	b.ge	ff20 <argp_help@@Base+0x13b0>  // b.tcont
    eff4:	ldp	q0, q1, [x29, #-48]
    eff8:	ldur	w8, [x29, #-16]
    effc:	adrp	x10, 43000 <base_len@@Base+0x2ea54>
    f000:	mov	w9, #0x1                   	// #1
    f004:	add	x10, x10, #0x680
    f008:	stp	q0, q1, [x10]
    f00c:	stp	w8, w9, [x10, #32]
    f010:	b	f08c <argp_help@@Base+0x51c>
    f014:	adrp	x19, 2f000 <vasnprintf@@Base+0x124c>
    f018:	add	x19, x19, #0x698
    f01c:	b	f04c <argp_help@@Base+0x4dc>
    f020:	adrp	x19, 2f000 <vasnprintf@@Base+0x124c>
    f024:	add	x19, x19, #0x6a8
    f028:	b	f04c <argp_help@@Base+0x4dc>
    f02c:	adrp	x19, 2f000 <vasnprintf@@Base+0x124c>
    f030:	add	x19, x19, #0x6b8
    f034:	b	f04c <argp_help@@Base+0x4dc>
    f038:	adrp	x19, 2f000 <vasnprintf@@Base+0x124c>
    f03c:	add	x19, x19, #0x6c8
    f040:	b	f04c <argp_help@@Base+0x4dc>
    f044:	adrp	x19, 2f000 <vasnprintf@@Base+0x124c>
    f048:	add	x19, x19, #0x6d8
    f04c:	ldur	x21, [x29, #-112]
    f050:	ldur	w20, [x29, #-116]
    f054:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    f058:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f05c:	add	x0, x0, #0x387
    f060:	add	x1, x1, #0x4b1
    f064:	mov	w2, #0x5                   	// #5
    f068:	bl	ac80 <dcgettext@plt>
    f06c:	adrp	x4, 2f000 <vasnprintf@@Base+0x124c>
    f070:	mov	x3, x0
    f074:	add	x4, x4, #0x4e5
    f078:	mov	x0, x22
    f07c:	mov	w1, wzr
    f080:	mov	w2, wzr
    f084:	mov	x5, x19
    f088:	bl	a5a0 <argp_failure@plt>
    f08c:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    f090:	ldrsw	x2, [x8, #1696]
    f094:	mov	x0, x21
    f098:	mov	x1, xzr
    f09c:	mov	x3, xzr
    f0a0:	bl	a980 <argp_make_fmtstream@plt>
    f0a4:	cbz	x0, f1f0 <argp_help@@Base+0x680>
    f0a8:	mov	w8, #0xb                   	// #11
    f0ac:	mov	x23, x0
    f0b0:	tst	w20, w8
    f0b4:	stur	x21, [x29, #-112]
    f0b8:	b.eq	f214 <argp_help@@Base+0x6a4>  // b.none
    f0bc:	ldur	x0, [x29, #-88]
    f0c0:	mov	x1, xzr
    f0c4:	bl	1037c <argp_failure@@Base+0x234>
    f0c8:	ldr	w19, [x0, #8]
    f0cc:	mov	x27, x0
    f0d0:	cbz	w19, f218 <argp_help@@Base+0x6a8>
    f0d4:	ldr	x26, [x27]
    f0d8:	adrp	x22, 2f000 <vasnprintf@@Base+0x124c>
    f0dc:	stur	w20, [x29, #-116]
    f0e0:	mov	x28, x27
    f0e4:	mov	w20, w19
    f0e8:	add	x22, x22, #0x3c0
    f0ec:	mov	w24, w19
    f0f0:	mov	x21, x26
    f0f4:	b	f104 <argp_help@@Base+0x594>
    f0f8:	sub	w24, w24, #0x1
    f0fc:	add	x21, x21, #0x38
    f100:	cbz	w24, f148 <argp_help@@Base+0x5d8>
    f104:	ldr	w25, [x21, #8]
    f108:	cbz	w25, f0f8 <argp_help@@Base+0x588>
    f10c:	ldr	x27, [x21]
    f110:	b	f120 <argp_help@@Base+0x5b0>
    f114:	sub	w25, w25, #0x1
    f118:	add	x27, x27, #0x30
    f11c:	cbz	w25, f0f8 <argp_help@@Base+0x588>
    f120:	ldr	x0, [x27]
    f124:	cbz	x0, f114 <argp_help@@Base+0x5a4>
    f128:	ldrb	w8, [x27, #24]
    f12c:	tbnz	w8, #1, f114 <argp_help@@Base+0x5a4>
    f130:	mov	x1, x22
    f134:	bl	a8e0 <strcmp@plt>
    f138:	cbnz	w0, f114 <argp_help@@Base+0x5a4>
    f13c:	cbz	x21, f148 <argp_help@@Base+0x5d8>
    f140:	mov	w8, #0xffffffff            	// #-1
    f144:	str	w8, [x21, #24]
    f148:	adrp	x22, 2f000 <vasnprintf@@Base+0x124c>
    f14c:	add	x22, x22, #0x7a6
    f150:	mov	x21, x26
    f154:	mov	x27, x28
    f158:	b	f168 <argp_help@@Base+0x5f8>
    f15c:	sub	w20, w20, #0x1
    f160:	add	x21, x21, #0x38
    f164:	cbz	w20, f1ac <argp_help@@Base+0x63c>
    f168:	ldr	w24, [x21, #8]
    f16c:	cbz	w24, f15c <argp_help@@Base+0x5ec>
    f170:	ldr	x25, [x21]
    f174:	b	f184 <argp_help@@Base+0x614>
    f178:	sub	w24, w24, #0x1
    f17c:	add	x25, x25, #0x30
    f180:	cbz	w24, f15c <argp_help@@Base+0x5ec>
    f184:	ldr	x0, [x25]
    f188:	cbz	x0, f178 <argp_help@@Base+0x608>
    f18c:	ldrb	w8, [x25, #24]
    f190:	tbnz	w8, #1, f178 <argp_help@@Base+0x608>
    f194:	mov	x1, x22
    f198:	bl	a8e0 <strcmp@plt>
    f19c:	cbnz	w0, f178 <argp_help@@Base+0x608>
    f1a0:	cbz	x21, f1ac <argp_help@@Base+0x63c>
    f1a4:	mov	w8, #0xffffffff            	// #-1
    f1a8:	str	w8, [x21, #24]
    f1ac:	subs	w8, w19, #0x1
    f1b0:	b.eq	f4d4 <argp_help@@Base+0x964>  // b.none
    f1b4:	add	x11, x8, #0x1
    f1b8:	mov	w9, #0x38                  	// #56
    f1bc:	and	x8, x11, #0x1fffffffe
    f1c0:	mov	x10, xzr
    f1c4:	madd	x9, x8, x9, x26
    f1c8:	add	x12, x26, #0x68
    f1cc:	add	w13, w10, #0x1
    f1d0:	stur	w10, [x12, #-56]
    f1d4:	add	x10, x10, #0x2
    f1d8:	str	w13, [x12], #112
    f1dc:	cmp	x8, x10
    f1e0:	b.ne	f1cc <argp_help@@Base+0x65c>  // b.any
    f1e4:	cmp	x11, x8
    f1e8:	b.ne	f4d8 <argp_help@@Base+0x968>  // b.any
    f1ec:	b	f4ec <argp_help@@Base+0x97c>
    f1f0:	mov	x0, x21
    f1f4:	mov	sp, x29
    f1f8:	ldp	x20, x19, [sp, #80]
    f1fc:	ldp	x22, x21, [sp, #64]
    f200:	ldp	x24, x23, [sp, #48]
    f204:	ldp	x26, x25, [sp, #32]
    f208:	ldp	x28, x27, [sp, #16]
    f20c:	ldp	x29, x30, [sp], #96
    f210:	b	a570 <funlockfile@plt>
    f214:	mov	x27, xzr
    f218:	tst	w20, #0x3
    f21c:	b.eq	f514 <argp_help@@Base+0x9a4>  // b.none
    f220:	ldur	x0, [x29, #-88]
    f224:	bl	108b0 <argp_failure@@Base+0x768>
    f228:	add	x9, x0, #0xf
    f22c:	mov	x8, sp
    f230:	and	x9, x9, #0xfffffffffffffff0
    f234:	sub	x19, x8, x9
    f238:	mov	x2, x0
    f23c:	mov	sp, x19
    f240:	mov	x0, x19
    f244:	mov	w1, wzr
    f248:	bl	a630 <memset@plt>
    f24c:	adrp	x24, 2f000 <vasnprintf@@Base+0x124c>
    f250:	adrp	x26, 2f000 <vasnprintf@@Base+0x124c>
    f254:	add	x24, x24, #0x3cb
    f258:	adrp	x28, 43000 <base_len@@Base+0x2ea54>
    f25c:	add	x26, x26, #0x387
    f260:	b	f280 <argp_help@@Base+0x710>
    f264:	add	x9, x8, #0x1
    f268:	str	x9, [x23, #56]
    f26c:	mov	w9, #0xa                   	// #10
    f270:	strb	w9, [x8]
    f274:	adrp	x24, 2f000 <vasnprintf@@Base+0x124c>
    f278:	add	x24, x24, #0x3d2
    f27c:	cbz	w22, f40c <argp_help@@Base+0x89c>
    f280:	ldp	x9, x8, [x23, #48]
    f284:	ldr	x10, [x23, #32]
    f288:	ldrsw	x21, [x28, #1692]
    f28c:	sub	x8, x8, x9
    f290:	cmp	x8, x10
    f294:	b.ls	f2a0 <argp_help@@Base+0x730>  // b.plast
    f298:	mov	x0, x23
    f29c:	bl	a470 <_argp_fmtstream_update@plt>
    f2a0:	ldr	x25, [x23, #24]
    f2a4:	mov	w2, #0x5                   	// #5
    f2a8:	mov	x0, x26
    f2ac:	mov	x1, x24
    f2b0:	str	x21, [x23, #24]
    f2b4:	stur	x19, [x29, #-48]
    f2b8:	bl	ac80 <dcgettext@plt>
    f2bc:	ldur	x3, [x29, #-80]
    f2c0:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f2c4:	mov	x2, x0
    f2c8:	mov	x0, x23
    f2cc:	add	x1, x1, #0x3c5
    f2d0:	bl	a830 <argp_fmtstream_printf@plt>
    f2d4:	ldp	x9, x8, [x23, #48]
    f2d8:	ldr	x10, [x23, #32]
    f2dc:	ldrsw	x22, [x28, #1692]
    f2e0:	sub	x8, x8, x9
    f2e4:	cmp	x8, x10
    f2e8:	b.ls	f2f4 <argp_help@@Base+0x784>  // b.plast
    f2ec:	mov	x0, x23
    f2f0:	bl	a470 <_argp_fmtstream_update@plt>
    f2f4:	ldr	x21, [x23, #8]
    f2f8:	str	x22, [x23, #8]
    f2fc:	tbnz	w20, #1, f318 <argp_help@@Base+0x7a8>
    f300:	mov	x0, x27
    f304:	mov	x1, x23
    f308:	mov	w22, w20
    f30c:	bl	1091c <argp_failure@@Base+0x7d4>
    f310:	orr	w20, w20, #0x2
    f314:	b	f380 <argp_help@@Base+0x810>
    f318:	ldr	w8, [x27, #8]
    f31c:	cbz	w8, f380 <argp_help@@Base+0x810>
    f320:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f324:	mov	w2, #0x5                   	// #5
    f328:	mov	x0, x26
    f32c:	add	x1, x1, #0x3d9
    f330:	bl	ac80 <dcgettext@plt>
    f334:	mov	x22, x0
    f338:	bl	a280 <strlen@plt>
    f33c:	cbz	x0, f380 <argp_help@@Base+0x810>
    f340:	mov	x24, x0
    f344:	ldp	x0, x8, [x23, #56]
    f348:	add	x9, x0, x24
    f34c:	cmp	x9, x8
    f350:	b.ls	f368 <argp_help@@Base+0x7f8>  // b.plast
    f354:	mov	x0, x23
    f358:	mov	x1, x24
    f35c:	bl	ac60 <_argp_fmtstream_ensure@plt>
    f360:	cbz	w0, f380 <argp_help@@Base+0x810>
    f364:	ldr	x0, [x23, #56]
    f368:	mov	x1, x22
    f36c:	mov	x2, x24
    f370:	bl	a210 <memcpy@plt>
    f374:	ldr	x8, [x23, #56]
    f378:	add	x8, x8, x24
    f37c:	str	x8, [x23, #56]
    f380:	ldur	x0, [x29, #-88]
    f384:	ldur	x1, [x29, #-72]
    f388:	sub	x2, x29, #0x30
    f38c:	mov	w3, #0x1                   	// #1
    f390:	mov	x4, x23
    f394:	bl	10cb0 <argp_failure@@Base+0xb68>
    f398:	ldp	x10, x8, [x23, #48]
    f39c:	ldr	x9, [x23, #32]
    f3a0:	mov	w22, w0
    f3a4:	sxtw	x24, w25
    f3a8:	sub	x10, x8, x10
    f3ac:	cmp	x10, x9
    f3b0:	b.ls	f3c8 <argp_help@@Base+0x858>  // b.plast
    f3b4:	mov	x0, x23
    f3b8:	bl	a470 <_argp_fmtstream_update@plt>
    f3bc:	ldp	x10, x8, [x23, #48]
    f3c0:	ldr	x9, [x23, #32]
    f3c4:	sub	x10, x8, x10
    f3c8:	cmp	x10, x9
    f3cc:	sxtw	x21, w21
    f3d0:	str	x24, [x23, #24]
    f3d4:	b.ls	f3e4 <argp_help@@Base+0x874>  // b.plast
    f3d8:	mov	x0, x23
    f3dc:	bl	a470 <_argp_fmtstream_update@plt>
    f3e0:	ldr	x8, [x23, #56]
    f3e4:	ldr	x9, [x23, #64]
    f3e8:	str	x21, [x23, #8]
    f3ec:	cmp	x8, x9
    f3f0:	b.cc	f264 <argp_help@@Base+0x6f4>  // b.lo, b.ul, b.last
    f3f4:	mov	w1, #0x1                   	// #1
    f3f8:	mov	x0, x23
    f3fc:	bl	ac60 <_argp_fmtstream_ensure@plt>
    f400:	cbz	w0, f274 <argp_help@@Base+0x704>
    f404:	ldr	x8, [x23, #56]
    f408:	b	f264 <argp_help@@Base+0x6f4>
    f40c:	ldur	x21, [x29, #-112]
    f410:	mov	w19, #0x1                   	// #1
    f414:	ldur	x24, [x29, #-72]
    f418:	tbz	w20, #4, f43c <argp_help@@Base+0x8cc>
    f41c:	ldur	x0, [x29, #-88]
    f420:	mov	w4, #0x1                   	// #1
    f424:	mov	x1, x24
    f428:	mov	w2, wzr
    f42c:	mov	w3, wzr
    f430:	mov	x5, x23
    f434:	bl	10f4c <argp_failure@@Base+0xe04>
    f438:	orr	w19, w0, w19
    f43c:	tbnz	w20, #2, f450 <argp_help@@Base+0x8e0>
    f440:	tbnz	w20, #3, f484 <argp_help@@Base+0x914>
    f444:	tbnz	w20, #5, fe24 <argp_help@@Base+0x12b4>
    f448:	tbnz	w20, #6, fe48 <argp_help@@Base+0x12d8>
    f44c:	b	feb4 <argp_help@@Base+0x1344>
    f450:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    f454:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f458:	add	x0, x0, #0x387
    f45c:	add	x1, x1, #0x3e6
    f460:	mov	w2, #0x5                   	// #5
    f464:	bl	ac80 <dcgettext@plt>
    f468:	ldur	x2, [x29, #-80]
    f46c:	mov	x1, x0
    f470:	mov	x0, x23
    f474:	mov	x3, x2
    f478:	bl	a830 <argp_fmtstream_printf@plt>
    f47c:	mov	w19, #0x1                   	// #1
    f480:	tbz	w20, #3, f444 <argp_help@@Base+0x8d4>
    f484:	ldr	w26, [x27, #8]
    f488:	stur	w20, [x29, #-116]
    f48c:	cbz	w26, fe18 <argp_help@@Base+0x12a8>
    f490:	cbz	w19, f524 <argp_help@@Base+0x9b4>
    f494:	ldp	x8, x9, [x23, #56]
    f498:	cmp	x8, x9
    f49c:	b.cc	f4b4 <argp_help@@Base+0x944>  // b.lo, b.ul, b.last
    f4a0:	mov	w1, #0x1                   	// #1
    f4a4:	mov	x0, x23
    f4a8:	bl	ac60 <_argp_fmtstream_ensure@plt>
    f4ac:	cbz	w0, f4c4 <argp_help@@Base+0x954>
    f4b0:	ldr	x8, [x23, #56]
    f4b4:	add	x9, x8, #0x1
    f4b8:	mov	w10, #0xa                   	// #10
    f4bc:	str	x9, [x23, #56]
    f4c0:	strb	w10, [x8]
    f4c4:	ldr	w26, [x27, #8]
    f4c8:	stp	xzr, xzr, [x29, #-64]
    f4cc:	cbnz	w26, f528 <argp_help@@Base+0x9b8>
    f4d0:	b	fe14 <argp_help@@Base+0x12a4>
    f4d4:	mov	x9, x26
    f4d8:	add	x9, x9, #0x30
    f4dc:	str	w8, [x9], #56
    f4e0:	add	w8, w8, #0x1
    f4e4:	cmp	w19, w8
    f4e8:	b.ne	f4dc <argp_help@@Base+0x96c>  // b.any
    f4ec:	adrp	x3, 11000 <argp_failure@@Base+0xeb8>
    f4f0:	add	x3, x3, #0x33c
    f4f4:	mov	w2, #0x38                  	// #56
    f4f8:	mov	x0, x26
    f4fc:	mov	x1, x19
    f500:	bl	a450 <qsort@plt>
    f504:	ldur	x21, [x29, #-112]
    f508:	ldur	w20, [x29, #-116]
    f50c:	tst	w20, #0x3
    f510:	b.ne	f220 <argp_help@@Base+0x6b0>  // b.any
    f514:	mov	w19, wzr
    f518:	ldur	x24, [x29, #-72]
    f51c:	tbnz	w20, #4, f41c <argp_help@@Base+0x8ac>
    f520:	b	f43c <argp_help@@Base+0x8cc>
    f524:	stp	xzr, xzr, [x29, #-64]
    f528:	stur	x27, [x29, #-128]
    f52c:	ldr	x27, [x27]
    f530:	add	x8, x23, #0x38
    f534:	stur	x8, [x29, #-80]
    f538:	b	f54c <argp_help@@Base+0x9dc>
    f53c:	subs	w26, w26, #0x1
    f540:	add	x27, x27, #0x38
    f544:	str	x19, [x23, #24]
    f548:	b.eq	fcb4 <argp_help@@Base+0x1144>  // b.none
    f54c:	ldp	x9, x8, [x23, #48]
    f550:	ldr	x10, [x23, #32]
    f554:	ldr	x25, [x27]
    f558:	ldr	x19, [x27, #16]
    f55c:	sub	x8, x8, x9
    f560:	cmp	x8, x10
    f564:	b.ls	f570 <argp_help@@Base+0xa00>  // b.plast
    f568:	mov	x0, x23
    f56c:	bl	a470 <_argp_fmtstream_update@plt>
    f570:	sub	x8, x29, #0x40
    f574:	ldr	x9, [x23, #8]
    f578:	str	xzr, [x23, #8]
    f57c:	ldr	x11, [x23, #24]
    f580:	stur	x8, [x29, #-32]
    f584:	mov	w8, #0x1                   	// #1
    f588:	stp	x27, x23, [x29, #-48]
    f58c:	stur	w8, [x29, #-24]
    f590:	stur	x24, [x29, #-16]
    f594:	ldrb	w8, [x25, #24]
    f598:	stp	x11, x9, [x29, #-104]
    f59c:	tbnz	w8, #3, f5d4 <argp_help@@Base+0xa64>
    f5a0:	ldr	w8, [x27, #8]
    f5a4:	cbz	w8, f5d4 <argp_help@@Base+0xa64>
    f5a8:	mov	x9, x25
    f5ac:	b	f5bc <argp_help@@Base+0xa4c>
    f5b0:	subs	w8, w8, #0x1
    f5b4:	add	x9, x9, #0x30
    f5b8:	b.eq	f5d4 <argp_help@@Base+0xa64>  // b.none
    f5bc:	ldr	x10, [x9]
    f5c0:	cbz	x10, f5b0 <argp_help@@Base+0xa40>
    f5c4:	ldrb	w10, [x9, #24]
    f5c8:	tbnz	w10, #1, f5b0 <argp_help@@Base+0xa40>
    f5cc:	mov	w20, #0x1                   	// #1
    f5d0:	b	f5d8 <argp_help@@Base+0xa68>
    f5d4:	mov	w20, wzr
    f5d8:	ldp	x9, x8, [x23, #48]
    f5dc:	ldr	x10, [x23, #32]
    f5e0:	adrp	x11, 43000 <base_len@@Base+0x2ea54>
    f5e4:	ldrsw	x21, [x11, #1672]
    f5e8:	sub	x8, x8, x9
    f5ec:	cmp	x8, x10
    f5f0:	b.ls	f5fc <argp_help@@Base+0xa8c>  // b.plast
    f5f4:	mov	x0, x23
    f5f8:	bl	a470 <_argp_fmtstream_update@plt>
    f5fc:	str	x21, [x23, #24]
    f600:	ldr	w22, [x27, #8]
    f604:	cbz	w22, f754 <argp_help@@Base+0xbe4>
    f608:	add	x28, x25, #0x18
    f60c:	b	f62c <argp_help@@Base+0xabc>
    f610:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f614:	add	x1, x1, #0x664
    f618:	bl	a830 <argp_fmtstream_printf@plt>
    f61c:	add	x19, x19, #0x1
    f620:	subs	w22, w22, #0x1
    f624:	add	x28, x28, #0x30
    f628:	b.eq	f754 <argp_help@@Base+0xbe4>  // b.none
    f62c:	ldr	w21, [x28]
    f630:	tbnz	w21, #3, f620 <argp_help@@Base+0xab0>
    f634:	ldur	w24, [x28, #-16]
    f638:	sub	w8, w24, #0x1
    f63c:	cmp	w8, #0xfe
    f640:	b.hi	f620 <argp_help@@Base+0xab0>  // b.pmore
    f644:	bl	a900 <__ctype_b_loc@plt>
    f648:	ldr	x8, [x0]
    f64c:	ldrh	w8, [x8, x24, lsl #1]
    f650:	tbz	w8, #14, f620 <argp_help@@Base+0xab0>
    f654:	ldrb	w8, [x19]
    f658:	cmp	w24, w8
    f65c:	b.ne	f620 <argp_help@@Base+0xab0>  // b.any
    f660:	tbnz	w21, #1, f61c <argp_help@@Base+0xaac>
    f664:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    f668:	ldr	w0, [x8, #1672]
    f66c:	sub	x1, x29, #0x30
    f670:	bl	11724 <argp_failure@@Base+0x15dc>
    f674:	ldp	x8, x9, [x23, #56]
    f678:	cmp	x8, x9
    f67c:	b.cc	f698 <argp_help@@Base+0xb28>  // b.lo, b.ul, b.last
    f680:	mov	w1, #0x1                   	// #1
    f684:	mov	x0, x23
    f688:	bl	ac60 <_argp_fmtstream_ensure@plt>
    f68c:	cbz	w0, f6ac <argp_help@@Base+0xb3c>
    f690:	ldur	x8, [x29, #-80]
    f694:	ldr	x8, [x8]
    f698:	ldur	x10, [x29, #-80]
    f69c:	add	x9, x8, #0x1
    f6a0:	str	x9, [x10]
    f6a4:	mov	w9, #0x2d                  	// #45
    f6a8:	strb	w9, [x8]
    f6ac:	ldp	x8, x9, [x23, #56]
    f6b0:	ldrb	w21, [x19]
    f6b4:	cmp	x8, x9
    f6b8:	b.cc	f6d4 <argp_help@@Base+0xb64>  // b.lo, b.ul, b.last
    f6bc:	mov	w1, #0x1                   	// #1
    f6c0:	mov	x0, x23
    f6c4:	bl	ac60 <_argp_fmtstream_ensure@plt>
    f6c8:	cbz	w0, f6e4 <argp_help@@Base+0xb74>
    f6cc:	ldur	x8, [x29, #-80]
    f6d0:	ldr	x8, [x8]
    f6d4:	ldur	x10, [x29, #-80]
    f6d8:	add	x9, x8, #0x1
    f6dc:	str	x9, [x10]
    f6e0:	strb	w21, [x8]
    f6e4:	cbz	w20, f708 <argp_help@@Base+0xb98>
    f6e8:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    f6ec:	ldr	w8, [x8, #1664]
    f6f0:	cbnz	w8, f708 <argp_help@@Base+0xb98>
    f6f4:	ldr	x8, [x25, #16]
    f6f8:	cbz	x8, f61c <argp_help@@Base+0xaac>
    f6fc:	mov	w8, #0x1                   	// #1
    f700:	stur	w8, [x29, #-52]
    f704:	b	f61c <argp_help@@Base+0xaac>
    f708:	ldur	x8, [x29, #-72]
    f70c:	cbz	x8, f724 <argp_help@@Base+0xbb4>
    f710:	ldr	x8, [x27, #40]
    f714:	ldr	x0, [x8, #48]
    f718:	ldr	x1, [x25, #16]
    f71c:	cbnz	x1, f730 <argp_help@@Base+0xbc0>
    f720:	b	f61c <argp_help@@Base+0xaac>
    f724:	mov	x0, xzr
    f728:	ldr	x1, [x25, #16]
    f72c:	cbz	x1, f61c <argp_help@@Base+0xaac>
    f730:	ldr	w21, [x25, #24]
    f734:	mov	w2, #0x5                   	// #5
    f738:	bl	ac80 <dcgettext@plt>
    f73c:	mov	x2, x0
    f740:	mov	x0, x23
    f744:	tbnz	w21, #0, f610 <argp_help@@Base+0xaa0>
    f748:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f74c:	add	x1, x1, #0x3a7
    f750:	b	f618 <argp_help@@Base+0xaa8>
    f754:	ldrb	w8, [x25, #24]
    f758:	tbnz	w8, #3, f82c <argp_help@@Base+0xcbc>
    f75c:	ldp	x9, x8, [x23, #48]
    f760:	ldr	x10, [x23, #32]
    f764:	adrp	x22, 43000 <base_len@@Base+0x2ea54>
    f768:	ldrsw	x19, [x22, #1676]
    f76c:	sub	x8, x8, x9
    f770:	cmp	x8, x10
    f774:	b.ls	f780 <argp_help@@Base+0xc10>  // b.plast
    f778:	mov	x0, x23
    f77c:	bl	a470 <_argp_fmtstream_update@plt>
    f780:	str	x19, [x23, #24]
    f784:	ldr	w19, [x27, #8]
    f788:	ldur	x24, [x29, #-72]
    f78c:	adrp	x28, 2f000 <vasnprintf@@Base+0x124c>
    f790:	add	x28, x28, #0x669
    f794:	cbz	w19, f90c <argp_help@@Base+0xd9c>
    f798:	mov	x20, x25
    f79c:	b	f7b8 <argp_help@@Base+0xc48>
    f7a0:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f7a4:	add	x1, x1, #0x2be
    f7a8:	bl	a830 <argp_fmtstream_printf@plt>
    f7ac:	subs	w19, w19, #0x1
    f7b0:	add	x20, x20, #0x30
    f7b4:	b.eq	f90c <argp_help@@Base+0xd9c>  // b.none
    f7b8:	ldr	x8, [x20]
    f7bc:	cbz	x8, f7ac <argp_help@@Base+0xc3c>
    f7c0:	ldrb	w8, [x20, #24]
    f7c4:	tbnz	w8, #1, f7ac <argp_help@@Base+0xc3c>
    f7c8:	ldr	w0, [x22, #1676]
    f7cc:	sub	x1, x29, #0x30
    f7d0:	bl	11724 <argp_failure@@Base+0x15dc>
    f7d4:	ldr	x2, [x20]
    f7d8:	mov	x0, x23
    f7dc:	mov	x1, x28
    f7e0:	bl	a830 <argp_fmtstream_printf@plt>
    f7e4:	cbz	x24, f7fc <argp_help@@Base+0xc8c>
    f7e8:	ldr	x8, [x27, #40]
    f7ec:	ldr	x0, [x8, #48]
    f7f0:	ldr	x1, [x25, #16]
    f7f4:	cbnz	x1, f808 <argp_help@@Base+0xc98>
    f7f8:	b	f7ac <argp_help@@Base+0xc3c>
    f7fc:	mov	x0, xzr
    f800:	ldr	x1, [x25, #16]
    f804:	cbz	x1, f7ac <argp_help@@Base+0xc3c>
    f808:	ldr	w21, [x25, #24]
    f80c:	mov	w2, #0x5                   	// #5
    f810:	bl	ac80 <dcgettext@plt>
    f814:	mov	x2, x0
    f818:	mov	x0, x23
    f81c:	tbz	w21, #0, f7a0 <argp_help@@Base+0xc30>
    f820:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    f824:	add	x1, x1, #0x66e
    f828:	b	f7a8 <argp_help@@Base+0xc38>
    f82c:	ldp	x9, x8, [x23, #48]
    f830:	ldr	x10, [x23, #32]
    f834:	adrp	x11, 43000 <base_len@@Base+0x2ea54>
    f838:	ldrsw	x19, [x11, #1680]
    f83c:	sub	x8, x8, x9
    f840:	cmp	x8, x10
    f844:	b.ls	f850 <argp_help@@Base+0xce0>  // b.plast
    f848:	mov	x0, x23
    f84c:	bl	a470 <_argp_fmtstream_update@plt>
    f850:	str	x19, [x23, #24]
    f854:	ldr	w20, [x27, #8]
    f858:	ldur	x24, [x29, #-72]
    f85c:	cbz	w20, f90c <argp_help@@Base+0xd9c>
    f860:	mov	x21, x25
    f864:	b	f890 <argp_help@@Base+0xd20>
    f868:	mov	x1, x19
    f86c:	mov	x2, x22
    f870:	bl	a210 <memcpy@plt>
    f874:	ldur	x9, [x29, #-80]
    f878:	ldr	x8, [x9]
    f87c:	add	x8, x8, x22
    f880:	str	x8, [x9]
    f884:	subs	w20, w20, #0x1
    f888:	add	x21, x21, #0x30
    f88c:	b.eq	f90c <argp_help@@Base+0xd9c>  // b.none
    f890:	ldr	x8, [x21]
    f894:	cbz	x8, f884 <argp_help@@Base+0xd14>
    f898:	ldrb	w8, [x21, #24]
    f89c:	tbnz	w8, #1, f884 <argp_help@@Base+0xd14>
    f8a0:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    f8a4:	ldr	w0, [x8, #1680]
    f8a8:	sub	x1, x29, #0x30
    f8ac:	bl	11724 <argp_failure@@Base+0x15dc>
    f8b0:	cbz	x24, f8c0 <argp_help@@Base+0xd50>
    f8b4:	ldr	x8, [x27, #40]
    f8b8:	ldr	x0, [x8, #48]
    f8bc:	b	f8c4 <argp_help@@Base+0xd54>
    f8c0:	mov	x0, xzr
    f8c4:	ldr	x1, [x21]
    f8c8:	mov	w2, #0x5                   	// #5
    f8cc:	bl	ac80 <dcgettext@plt>
    f8d0:	mov	x19, x0
    f8d4:	bl	a280 <strlen@plt>
    f8d8:	cbz	x0, f884 <argp_help@@Base+0xd14>
    f8dc:	mov	x22, x0
    f8e0:	ldp	x0, x8, [x23, #56]
    f8e4:	add	x9, x0, x22
    f8e8:	cmp	x9, x8
    f8ec:	b.ls	f868 <argp_help@@Base+0xcf8>  // b.plast
    f8f0:	mov	x0, x23
    f8f4:	mov	x1, x22
    f8f8:	bl	ac60 <_argp_fmtstream_ensure@plt>
    f8fc:	cbz	w0, f884 <argp_help@@Base+0xd14>
    f900:	ldur	x8, [x29, #-80]
    f904:	ldr	x0, [x8]
    f908:	b	f868 <argp_help@@Base+0xcf8>
    f90c:	ldp	x9, x8, [x23, #48]
    f910:	ldr	x10, [x23, #32]
    f914:	sub	x8, x8, x9
    f918:	cmp	x8, x10
    f91c:	b.ls	f928 <argp_help@@Base+0xdb8>  // b.plast
    f920:	mov	x0, x23
    f924:	bl	a470 <_argp_fmtstream_update@plt>
    f928:	str	xzr, [x23, #8]
    f92c:	ldur	w8, [x29, #-24]
    f930:	cbz	w8, f978 <argp_help@@Base+0xe08>
    f934:	ldrb	w8, [x25, #24]
    f938:	tbnz	w8, #3, f95c <argp_help@@Base+0xdec>
    f93c:	ldr	w19, [x25, #8]
    f940:	sub	w8, w19, #0x1
    f944:	cmp	w8, #0xfe
    f948:	b.hi	f95c <argp_help@@Base+0xdec>  // b.pmore
    f94c:	bl	a900 <__ctype_b_loc@plt>
    f950:	ldr	x8, [x0]
    f954:	ldrh	w8, [x8, x19, lsl #1]
    f958:	tbnz	w8, #14, fc64 <argp_help@@Base+0x10f4>
    f95c:	ldr	x8, [x25]
    f960:	cbnz	x8, fc64 <argp_help@@Base+0x10f4>
    f964:	ldr	x0, [x25, #32]
    f968:	ldr	x1, [x27, #40]
    f96c:	sub	x2, x29, #0x30
    f970:	bl	118f8 <argp_failure@@Base+0x17b0>
    f974:	b	fc60 <argp_help@@Base+0x10f0>
    f978:	ldr	x1, [x25, #32]
    f97c:	cbz	x1, f990 <argp_help@@Base+0xe20>
    f980:	cbz	x24, f998 <argp_help@@Base+0xe28>
    f984:	ldr	x8, [x27, #40]
    f988:	ldr	x0, [x8, #48]
    f98c:	b	f99c <argp_help@@Base+0xe2c>
    f990:	mov	x28, xzr
    f994:	b	f9a8 <argp_help@@Base+0xe38>
    f998:	mov	x0, xzr
    f99c:	mov	w2, #0x5                   	// #5
    f9a0:	bl	ac80 <dcgettext@plt>
    f9a4:	mov	x28, x0
    f9a8:	ldr	x22, [x27, #40]
    f9ac:	mov	x19, x28
    f9b0:	cbz	x22, f9e8 <argp_help@@Base+0xe78>
    f9b4:	ldr	x8, [x22, #40]
    f9b8:	mov	x19, x28
    f9bc:	cbz	x8, f9e8 <argp_help@@Base+0xe78>
    f9c0:	ldur	x1, [x29, #-72]
    f9c4:	ldr	w19, [x25, #8]
    f9c8:	mov	x0, x22
    f9cc:	bl	ab40 <_argp_input@plt>
    f9d0:	ldr	x8, [x22, #40]
    f9d4:	mov	x2, x0
    f9d8:	mov	w0, w19
    f9dc:	mov	x1, x28
    f9e0:	blr	x8
    f9e4:	mov	x19, x0
    f9e8:	cbz	x19, fc00 <argp_help@@Base+0x1090>
    f9ec:	ldrb	w8, [x19]
    f9f0:	cbz	w8, fbf0 <argp_help@@Base+0x1080>
    f9f4:	ldp	x10, x9, [x23, #48]
    f9f8:	ldr	x8, [x23, #32]
    f9fc:	sub	x9, x9, x10
    fa00:	cmp	x9, x8
    fa04:	b.ls	fa1c <argp_help@@Base+0xeac>  // b.plast
    fa08:	mov	x0, x23
    fa0c:	bl	a470 <_argp_fmtstream_update@plt>
    fa10:	ldp	x10, x9, [x23, #48]
    fa14:	ldr	x8, [x23, #32]
    fa18:	sub	x9, x9, x10
    fa1c:	adrp	x11, 43000 <base_len@@Base+0x2ea54>
    fa20:	ldr	x10, [x23, #40]
    fa24:	ldr	w20, [x11, #1684]
    fa28:	cmp	x10, #0x0
    fa2c:	sxtw	x25, w20
    fa30:	csel	w21, w10, wzr, gt
    fa34:	cmp	x9, x8
    fa38:	mov	x22, x25
    fa3c:	b.ls	fa60 <argp_help@@Base+0xef0>  // b.plast
    fa40:	mov	x0, x23
    fa44:	bl	a470 <_argp_fmtstream_update@plt>
    fa48:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    fa4c:	ldr	w20, [x8, #1684]
    fa50:	ldp	x10, x9, [x23, #48]
    fa54:	ldr	x8, [x23, #32]
    fa58:	sxtw	x22, w20
    fa5c:	sub	x9, x9, x10
    fa60:	cmp	x9, x8
    fa64:	str	x25, [x23, #8]
    fa68:	b.ls	fa7c <argp_help@@Base+0xf0c>  // b.plast
    fa6c:	mov	x0, x23
    fa70:	bl	a470 <_argp_fmtstream_update@plt>
    fa74:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    fa78:	ldr	w20, [x8, #1684]
    fa7c:	add	w8, w20, #0x3
    fa80:	cmp	w8, w21
    fa84:	str	x22, [x23, #24]
    fa88:	b.cs	fac8 <argp_help@@Base+0xf58>  // b.hs, b.nlast
    fa8c:	ldp	x8, x9, [x23, #56]
    fa90:	cmp	x8, x9
    fa94:	b.cc	fab0 <argp_help@@Base+0xf40>  // b.lo, b.ul, b.last
    fa98:	mov	w1, #0x1                   	// #1
    fa9c:	mov	x0, x23
    faa0:	bl	ac60 <_argp_fmtstream_ensure@plt>
    faa4:	cbz	w0, fb9c <argp_help@@Base+0x102c>
    faa8:	ldur	x8, [x29, #-80]
    faac:	ldr	x8, [x8]
    fab0:	ldur	x10, [x29, #-80]
    fab4:	add	x9, x8, #0x1
    fab8:	str	x9, [x10]
    fabc:	mov	w9, #0xa                   	// #10
    fac0:	strb	w9, [x8]
    fac4:	b	fb9c <argp_help@@Base+0x102c>
    fac8:	cmp	w20, w21
    facc:	b.ls	fb54 <argp_help@@Base+0xfe4>  // b.plast
    fad0:	ldp	x9, x8, [x23, #48]
    fad4:	ldr	x10, [x23, #32]
    fad8:	sub	x8, x8, x9
    fadc:	cmp	x8, x10
    fae0:	b.ls	faec <argp_help@@Base+0xf7c>  // b.plast
    fae4:	mov	x0, x23
    fae8:	bl	a470 <_argp_fmtstream_update@plt>
    faec:	ldr	x8, [x23, #40]
    faf0:	cmp	x8, #0x0
    faf4:	csel	w8, w8, wzr, gt
    faf8:	sub	w8, w20, w8
    fafc:	cmp	w8, #0x1
    fb00:	b.lt	fb9c <argp_help@@Base+0x102c>  // b.tstop
    fb04:	add	w20, w8, #0x1
    fb08:	b	fb2c <argp_help@@Base+0xfbc>
    fb0c:	ldur	x10, [x29, #-80]
    fb10:	add	x9, x8, #0x1
    fb14:	str	x9, [x10]
    fb18:	mov	w9, #0x20                  	// #32
    fb1c:	strb	w9, [x8]
    fb20:	sub	w20, w20, #0x1
    fb24:	cmp	w20, #0x1
    fb28:	b.le	fb9c <argp_help@@Base+0x102c>
    fb2c:	ldp	x8, x9, [x23, #56]
    fb30:	cmp	x8, x9
    fb34:	b.cc	fb0c <argp_help@@Base+0xf9c>  // b.lo, b.ul, b.last
    fb38:	mov	w1, #0x1                   	// #1
    fb3c:	mov	x0, x23
    fb40:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fb44:	cbz	w0, fb20 <argp_help@@Base+0xfb0>
    fb48:	ldur	x8, [x29, #-80]
    fb4c:	ldr	x8, [x8]
    fb50:	b	fb0c <argp_help@@Base+0xf9c>
    fb54:	ldp	x8, x9, [x23, #56]
    fb58:	add	x10, x8, #0x3
    fb5c:	cmp	x10, x9
    fb60:	b.ls	fb7c <argp_help@@Base+0x100c>  // b.plast
    fb64:	mov	w1, #0x3                   	// #3
    fb68:	mov	x0, x23
    fb6c:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fb70:	cbz	w0, fb9c <argp_help@@Base+0x102c>
    fb74:	ldur	x8, [x29, #-80]
    fb78:	ldr	x8, [x8]
    fb7c:	mov	w9, #0x20                  	// #32
    fb80:	strb	w9, [x8, #2]
    fb84:	mov	w9, #0x2020                	// #8224
    fb88:	strh	w9, [x8]
    fb8c:	ldur	x9, [x29, #-80]
    fb90:	ldr	x8, [x9]
    fb94:	add	x8, x8, #0x3
    fb98:	str	x8, [x9]
    fb9c:	mov	x0, x19
    fba0:	bl	a280 <strlen@plt>
    fba4:	cbz	x0, fbf0 <argp_help@@Base+0x1080>
    fba8:	mov	x22, x0
    fbac:	ldp	x0, x8, [x23, #56]
    fbb0:	add	x9, x0, x22
    fbb4:	cmp	x9, x8
    fbb8:	b.ls	fbd4 <argp_help@@Base+0x1064>  // b.plast
    fbbc:	mov	x0, x23
    fbc0:	mov	x1, x22
    fbc4:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fbc8:	cbz	w0, fbf0 <argp_help@@Base+0x1080>
    fbcc:	ldur	x8, [x29, #-80]
    fbd0:	ldr	x0, [x8]
    fbd4:	mov	x1, x19
    fbd8:	mov	x2, x22
    fbdc:	bl	a210 <memcpy@plt>
    fbe0:	ldur	x9, [x29, #-80]
    fbe4:	ldr	x8, [x9]
    fbe8:	add	x8, x8, x22
    fbec:	str	x8, [x9]
    fbf0:	cmp	x19, x28
    fbf4:	b.eq	fc00 <argp_help@@Base+0x1090>  // b.none
    fbf8:	mov	x0, x19
    fbfc:	bl	a960 <free@plt>
    fc00:	ldp	x9, x8, [x23, #48]
    fc04:	ldr	x10, [x23, #32]
    fc08:	sub	x9, x8, x9
    fc0c:	cmp	x9, x10
    fc10:	b.ls	fc20 <argp_help@@Base+0x10b0>  // b.plast
    fc14:	mov	x0, x23
    fc18:	bl	a470 <_argp_fmtstream_update@plt>
    fc1c:	ldr	x8, [x23, #56]
    fc20:	ldr	x9, [x23, #64]
    fc24:	ldur	x24, [x29, #-72]
    fc28:	str	xzr, [x23, #8]
    fc2c:	cmp	x8, x9
    fc30:	b.cc	fc4c <argp_help@@Base+0x10dc>  // b.lo, b.ul, b.last
    fc34:	mov	w1, #0x1                   	// #1
    fc38:	mov	x0, x23
    fc3c:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fc40:	cbz	w0, fc60 <argp_help@@Base+0x10f0>
    fc44:	ldur	x8, [x29, #-80]
    fc48:	ldr	x8, [x8]
    fc4c:	ldur	x10, [x29, #-80]
    fc50:	add	x9, x8, #0x1
    fc54:	str	x9, [x10]
    fc58:	mov	w9, #0xa                   	// #10
    fc5c:	strb	w9, [x8]
    fc60:	stur	x27, [x29, #-64]
    fc64:	ldp	x10, x9, [x23, #48]
    fc68:	ldr	x8, [x23, #32]
    fc6c:	sub	x9, x9, x10
    fc70:	ldur	x10, [x29, #-96]
    fc74:	cmp	x9, x8
    fc78:	sxtw	x19, w10
    fc7c:	b.ls	fc94 <argp_help@@Base+0x1124>  // b.plast
    fc80:	mov	x0, x23
    fc84:	bl	a470 <_argp_fmtstream_update@plt>
    fc88:	ldp	x10, x9, [x23, #48]
    fc8c:	ldr	x8, [x23, #32]
    fc90:	sub	x9, x9, x10
    fc94:	ldur	x10, [x29, #-104]
    fc98:	str	x19, [x23, #8]
    fc9c:	cmp	x9, x8
    fca0:	sxtw	x19, w10
    fca4:	b.ls	f53c <argp_help@@Base+0x9cc>  // b.plast
    fca8:	mov	x0, x23
    fcac:	bl	a470 <_argp_fmtstream_update@plt>
    fcb0:	b	f53c <argp_help@@Base+0x9cc>
    fcb4:	ldur	w8, [x29, #-52]
    fcb8:	ldur	x27, [x29, #-128]
    fcbc:	cbz	w8, fe14 <argp_help@@Base+0x12a4>
    fcc0:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
    fcc4:	ldr	w8, [x8, #1668]
    fcc8:	cbz	w8, fe14 <argp_help@@Base+0x12a4>
    fccc:	adrp	x8, 2f000 <vasnprintf@@Base+0x124c>
    fcd0:	add	x8, x8, #0x387
    fcd4:	cmp	x24, #0x0
    fcd8:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    fcdc:	csel	x0, xzr, x8, eq  // eq = none
    fce0:	add	x1, x1, #0x5f0
    fce4:	mov	w2, #0x5                   	// #5
    fce8:	bl	ac80 <dcgettext@plt>
    fcec:	mov	x19, x0
    fcf0:	cbz	x24, fd30 <argp_help@@Base+0x11c0>
    fcf4:	ldr	x22, [x24]
    fcf8:	cbz	x22, fd30 <argp_help@@Base+0x11c0>
    fcfc:	ldr	x8, [x22, #40]
    fd00:	cbz	x8, fd30 <argp_help@@Base+0x11c0>
    fd04:	mov	x0, x22
    fd08:	mov	x1, x24
    fd0c:	bl	ab40 <_argp_input@plt>
    fd10:	ldr	x8, [x22, #40]
    fd14:	mov	x2, x0
    fd18:	mov	w0, #0x5                   	// #5
    fd1c:	movk	w0, #0x200, lsl #16
    fd20:	mov	x1, x19
    fd24:	blr	x8
    fd28:	mov	x25, x0
    fd2c:	b	fd34 <argp_help@@Base+0x11c4>
    fd30:	mov	x25, x19
    fd34:	cbz	x25, fe14 <argp_help@@Base+0x12a4>
    fd38:	ldrb	w8, [x25]
    fd3c:	cbz	w8, fe04 <argp_help@@Base+0x1294>
    fd40:	ldp	x8, x9, [x23, #56]
    fd44:	cmp	x8, x9
    fd48:	b.cc	fd64 <argp_help@@Base+0x11f4>  // b.lo, b.ul, b.last
    fd4c:	mov	w1, #0x1                   	// #1
    fd50:	mov	x0, x23
    fd54:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fd58:	cbz	w0, fd78 <argp_help@@Base+0x1208>
    fd5c:	ldur	x8, [x29, #-80]
    fd60:	ldr	x8, [x8]
    fd64:	ldur	x11, [x29, #-80]
    fd68:	add	x9, x8, #0x1
    fd6c:	mov	w10, #0xa                   	// #10
    fd70:	str	x9, [x11]
    fd74:	strb	w10, [x8]
    fd78:	mov	x0, x25
    fd7c:	bl	a280 <strlen@plt>
    fd80:	cbz	x0, fdcc <argp_help@@Base+0x125c>
    fd84:	mov	x22, x0
    fd88:	ldp	x0, x8, [x23, #56]
    fd8c:	add	x9, x0, x22
    fd90:	cmp	x9, x8
    fd94:	b.ls	fdb0 <argp_help@@Base+0x1240>  // b.plast
    fd98:	mov	x0, x23
    fd9c:	mov	x1, x22
    fda0:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fda4:	cbz	w0, fdcc <argp_help@@Base+0x125c>
    fda8:	ldur	x8, [x29, #-80]
    fdac:	ldr	x0, [x8]
    fdb0:	mov	x1, x25
    fdb4:	mov	x2, x22
    fdb8:	bl	a210 <memcpy@plt>
    fdbc:	ldur	x9, [x29, #-80]
    fdc0:	ldr	x8, [x9]
    fdc4:	add	x8, x8, x22
    fdc8:	str	x8, [x9]
    fdcc:	ldp	x8, x9, [x23, #56]
    fdd0:	cmp	x8, x9
    fdd4:	b.cc	fdf0 <argp_help@@Base+0x1280>  // b.lo, b.ul, b.last
    fdd8:	mov	w1, #0x1                   	// #1
    fddc:	mov	x0, x23
    fde0:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fde4:	cbz	w0, fe04 <argp_help@@Base+0x1294>
    fde8:	ldur	x8, [x29, #-80]
    fdec:	ldr	x8, [x8]
    fdf0:	ldur	x11, [x29, #-80]
    fdf4:	add	x9, x8, #0x1
    fdf8:	mov	w10, #0xa                   	// #10
    fdfc:	str	x9, [x11]
    fe00:	strb	w10, [x8]
    fe04:	cmp	x25, x19
    fe08:	b.eq	fe14 <argp_help@@Base+0x12a4>  // b.none
    fe0c:	mov	x0, x25
    fe10:	bl	a960 <free@plt>
    fe14:	mov	w19, #0x1                   	// #1
    fe18:	ldur	x21, [x29, #-112]
    fe1c:	ldur	w20, [x29, #-116]
    fe20:	tbz	w20, #5, f448 <argp_help@@Base+0x8d8>
    fe24:	ldur	x0, [x29, #-88]
    fe28:	mov	w2, #0x1                   	// #1
    fe2c:	mov	x1, x24
    fe30:	mov	w3, w19
    fe34:	mov	w4, wzr
    fe38:	mov	x5, x23
    fe3c:	bl	10f4c <argp_failure@@Base+0xe04>
    fe40:	orr	w19, w0, w19
    fe44:	tbz	w20, #6, feb4 <argp_help@@Base+0x1344>
    fe48:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
    fe4c:	ldr	x20, [x20, #3968]
    fe50:	ldr	x8, [x20]
    fe54:	cbz	x8, feb4 <argp_help@@Base+0x1344>
    fe58:	cbz	w19, fe8c <argp_help@@Base+0x131c>
    fe5c:	ldp	x8, x9, [x23, #56]
    fe60:	cmp	x8, x9
    fe64:	b.cc	fe7c <argp_help@@Base+0x130c>  // b.lo, b.ul, b.last
    fe68:	mov	w1, #0x1                   	// #1
    fe6c:	mov	x0, x23
    fe70:	bl	ac60 <_argp_fmtstream_ensure@plt>
    fe74:	cbz	w0, fe8c <argp_help@@Base+0x131c>
    fe78:	ldr	x8, [x23, #56]
    fe7c:	add	x9, x8, #0x1
    fe80:	mov	w10, #0xa                   	// #10
    fe84:	str	x9, [x23, #56]
    fe88:	strb	w10, [x8]
    fe8c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
    fe90:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
    fe94:	add	x0, x0, #0x387
    fe98:	add	x1, x1, #0x41d
    fe9c:	mov	w2, #0x5                   	// #5
    fea0:	bl	ac80 <dcgettext@plt>
    fea4:	ldr	x2, [x20]
    fea8:	mov	x1, x0
    feac:	mov	x0, x23
    feb0:	bl	a830 <argp_fmtstream_printf@plt>
    feb4:	mov	x0, x21
    feb8:	bl	a570 <funlockfile@plt>
    febc:	cbz	x27, fef8 <argp_help@@Base+0x1388>
    fec0:	ldr	x0, [x27, #24]
    fec4:	cbz	x0, fed8 <argp_help@@Base+0x1368>
    fec8:	ldr	x19, [x0, #40]
    fecc:	bl	a960 <free@plt>
    fed0:	mov	x0, x19
    fed4:	cbnz	x19, fec8 <argp_help@@Base+0x1358>
    fed8:	ldr	w8, [x27, #8]
    fedc:	cbz	w8, fef0 <argp_help@@Base+0x1380>
    fee0:	ldr	x0, [x27]
    fee4:	bl	a960 <free@plt>
    fee8:	ldr	x0, [x27, #16]
    feec:	bl	a960 <free@plt>
    fef0:	mov	x0, x27
    fef4:	bl	a960 <free@plt>
    fef8:	mov	x0, x23
    fefc:	bl	acb0 <argp_fmtstream_free@plt>
    ff00:	mov	sp, x29
    ff04:	ldp	x20, x19, [sp, #80]
    ff08:	ldp	x22, x21, [sp, #64]
    ff0c:	ldp	x24, x23, [sp, #48]
    ff10:	ldp	x26, x25, [sp, #32]
    ff14:	ldp	x28, x27, [sp, #16]
    ff18:	ldp	x29, x30, [sp], #96
    ff1c:	ret
    ff20:	adrp	x19, 2f000 <vasnprintf@@Base+0x124c>
    ff24:	add	x19, x19, #0x6e8
    ff28:	b	f054 <argp_help@@Base+0x4e4>

000000000000ff2c <argp_state_help@@Base>:
    ff2c:	stp	x29, x30, [sp, #-32]!
    ff30:	stp	x20, x19, [sp, #16]
    ff34:	mov	w19, w2
    ff38:	mov	x2, x1
    ff3c:	mov	x29, sp
    ff40:	cbz	x0, ff80 <argp_state_help@@Base+0x54>
    ff44:	cbz	x2, ffa8 <argp_state_help@@Base+0x7c>
    ff48:	ldr	w8, [x0, #28]
    ff4c:	mov	x20, x0
    ff50:	tbnz	w8, #1, ffa8 <argp_state_help@@Base+0x7c>
    ff54:	ldr	x0, [x20]
    ff58:	ldr	x4, [x20, #64]
    ff5c:	lsl	w8, w8, #1
    ff60:	and	w8, w8, #0x80
    ff64:	orr	w19, w8, w19
    ff68:	mov	x1, x20
    ff6c:	mov	w3, w19
    ff70:	bl	eb84 <argp_help@@Base+0x14>
    ff74:	ldrb	w8, [x20, #28]
    ff78:	tbz	w8, #5, ffa0 <argp_state_help@@Base+0x74>
    ff7c:	b	ffa8 <argp_state_help@@Base+0x7c>
    ff80:	cbz	x2, ffa8 <argp_state_help@@Base+0x7c>
    ff84:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    ff88:	ldr	x8, [x8, #4008]
    ff8c:	mov	x0, xzr
    ff90:	mov	x1, xzr
    ff94:	mov	w3, w19
    ff98:	ldr	x4, [x8]
    ff9c:	bl	eb84 <argp_help@@Base+0x14>
    ffa0:	tbnz	w19, #8, ffb4 <argp_state_help@@Base+0x88>
    ffa4:	tbnz	w19, #9, ffc4 <argp_state_help@@Base+0x98>
    ffa8:	ldp	x20, x19, [sp, #16]
    ffac:	ldp	x29, x30, [sp], #32
    ffb0:	ret
    ffb4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
    ffb8:	ldr	x8, [x8, #4048]
    ffbc:	ldr	w0, [x8]
    ffc0:	bl	a290 <exit@plt>
    ffc4:	mov	w0, wzr
    ffc8:	bl	a290 <exit@plt>

000000000000ffcc <argp_error@@Base>:
    ffcc:	sub	sp, sp, #0x120
    ffd0:	stp	x29, x30, [sp, #240]
    ffd4:	stp	x20, x19, [sp, #272]
    ffd8:	add	x29, sp, #0xf0
    ffdc:	mov	x20, x1
    ffe0:	mov	x19, x0
    ffe4:	stp	x28, x21, [sp, #256]
    ffe8:	stp	x2, x3, [x29, #-112]
    ffec:	stp	x4, x5, [x29, #-96]
    fff0:	stp	x6, x7, [x29, #-80]
    fff4:	stp	q1, q2, [sp, #16]
    fff8:	stp	q3, q4, [sp, #48]
    fffc:	str	q0, [sp]
   10000:	stp	q5, q6, [sp, #80]
   10004:	str	q7, [sp, #112]
   10008:	cbz	x0, 10024 <argp_error@@Base+0x58>
   1000c:	ldrb	w8, [x19, #28]
   10010:	tbnz	w8, #1, 10104 <argp_error@@Base+0x138>
   10014:	add	x8, x19, #0x48
   10018:	ldr	x21, [x8]
   1001c:	cbnz	x21, 10034 <argp_error@@Base+0x68>
   10020:	b	10104 <argp_error@@Base+0x138>
   10024:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   10028:	ldr	x8, [x8, #3816]
   1002c:	ldr	x21, [x8]
   10030:	cbz	x21, 10104 <argp_error@@Base+0x138>
   10034:	mov	x0, x21
   10038:	bl	a2e0 <flockfile@plt>
   1003c:	adrp	x13, 42000 <vasnprintf@@Base+0x1424c>
   10040:	ldr	x13, [x13, #4008]
   10044:	mov	x8, #0xffffffffffffffd0    	// #-48
   10048:	mov	x9, sp
   1004c:	sub	x10, x29, #0x70
   10050:	movk	x8, #0xff80, lsl #32
   10054:	add	x11, x29, #0x30
   10058:	add	x12, x19, #0x40
   1005c:	cmp	x19, #0x0
   10060:	add	x9, x9, #0x80
   10064:	add	x10, x10, #0x30
   10068:	stp	x9, x8, [x29, #-16]
   1006c:	stp	x11, x10, [x29, #-32]
   10070:	csel	x8, x12, x13, ne  // ne = any
   10074:	ldr	x0, [x8]
   10078:	mov	x1, x21
   1007c:	bl	ace0 <fputs_unlocked@plt>
   10080:	ldp	x8, x9, [x21, #40]
   10084:	cmp	x8, x9
   10088:	b.cs	10118 <argp_error@@Base+0x14c>  // b.hs, b.nlast
   1008c:	add	x9, x8, #0x1
   10090:	mov	w10, #0x3a                  	// #58
   10094:	str	x9, [x21, #40]
   10098:	strb	w10, [x8]
   1009c:	ldp	x8, x9, [x21, #40]
   100a0:	cmp	x8, x9
   100a4:	b.cs	10128 <argp_error@@Base+0x15c>  // b.hs, b.nlast
   100a8:	add	x9, x8, #0x1
   100ac:	mov	w10, #0x20                  	// #32
   100b0:	str	x9, [x21, #40]
   100b4:	strb	w10, [x8]
   100b8:	ldp	q0, q1, [x29, #-32]
   100bc:	sub	x2, x29, #0x40
   100c0:	mov	x0, x21
   100c4:	mov	x1, x20
   100c8:	stp	q0, q1, [x29, #-64]
   100cc:	bl	ad50 <vfprintf@plt>
   100d0:	ldp	x8, x9, [x21, #40]
   100d4:	cmp	x8, x9
   100d8:	b.cs	10138 <argp_error@@Base+0x16c>  // b.hs, b.nlast
   100dc:	add	x9, x8, #0x1
   100e0:	mov	w10, #0xa                   	// #10
   100e4:	str	x9, [x21, #40]
   100e8:	strb	w10, [x8]
   100ec:	mov	w2, #0x104                 	// #260
   100f0:	mov	x0, x19
   100f4:	mov	x1, x21
   100f8:	bl	ac70 <argp_state_help@plt>
   100fc:	mov	x0, x21
   10100:	bl	a570 <funlockfile@plt>
   10104:	ldp	x20, x19, [sp, #272]
   10108:	ldp	x28, x21, [sp, #256]
   1010c:	ldp	x29, x30, [sp, #240]
   10110:	add	sp, sp, #0x120
   10114:	ret
   10118:	mov	w1, #0x3a                  	// #58
   1011c:	mov	x0, x21
   10120:	bl	a880 <__overflow@plt>
   10124:	b	1009c <argp_error@@Base+0xd0>
   10128:	mov	w1, #0x20                  	// #32
   1012c:	mov	x0, x21
   10130:	bl	a880 <__overflow@plt>
   10134:	b	100b8 <argp_error@@Base+0xec>
   10138:	mov	w1, #0xa                   	// #10
   1013c:	mov	x0, x21
   10140:	bl	a880 <__overflow@plt>
   10144:	b	100ec <argp_error@@Base+0x120>

0000000000010148 <argp_failure@@Base>:
   10148:	sub	sp, sp, #0x1d0
   1014c:	stp	x28, x23, [sp, #416]
   10150:	stp	x22, x21, [sp, #432]
   10154:	stp	x20, x19, [sp, #448]
   10158:	mov	x23, x3
   1015c:	mov	w22, w2
   10160:	mov	w19, w1
   10164:	mov	x20, x0
   10168:	stp	x29, x30, [sp, #400]
   1016c:	add	x29, sp, #0x190
   10170:	stp	x4, x5, [sp, #136]
   10174:	stp	x6, x7, [sp, #152]
   10178:	stp	q0, q1, [sp]
   1017c:	stp	q2, q3, [sp, #32]
   10180:	stp	q4, q5, [sp, #64]
   10184:	stp	q6, q7, [sp, #96]
   10188:	cbz	x0, 101a4 <argp_failure@@Base+0x5c>
   1018c:	ldrb	w8, [x20, #28]
   10190:	tbnz	w8, #1, 10308 <argp_failure@@Base+0x1c0>
   10194:	add	x8, x20, #0x48
   10198:	ldr	x21, [x8]
   1019c:	cbnz	x21, 101b4 <argp_failure@@Base+0x6c>
   101a0:	b	10308 <argp_failure@@Base+0x1c0>
   101a4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   101a8:	ldr	x8, [x8, #3816]
   101ac:	ldr	x21, [x8]
   101b0:	cbz	x21, 10308 <argp_failure@@Base+0x1c0>
   101b4:	mov	x0, x21
   101b8:	bl	a2e0 <flockfile@plt>
   101bc:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   101c0:	ldr	x9, [x9, #4008]
   101c4:	add	x8, x20, #0x40
   101c8:	cmp	x20, #0x0
   101cc:	mov	x1, x21
   101d0:	csel	x8, x8, x9, ne  // ne = any
   101d4:	ldr	x0, [x8]
   101d8:	bl	ace0 <fputs_unlocked@plt>
   101dc:	cbz	x23, 10258 <argp_failure@@Base+0x110>
   101e0:	mov	x8, #0xffffffffffffffe0    	// #-32
   101e4:	mov	x10, sp
   101e8:	add	x11, sp, #0x88
   101ec:	movk	x8, #0xff80, lsl #32
   101f0:	add	x9, x29, #0x40
   101f4:	add	x10, x10, #0x80
   101f8:	add	x11, x11, #0x20
   101fc:	stp	x10, x8, [sp, #184]
   10200:	stp	x9, x11, [sp, #168]
   10204:	ldp	x8, x9, [x21, #40]
   10208:	cmp	x8, x9
   1020c:	b.cs	10330 <argp_failure@@Base+0x1e8>  // b.hs, b.nlast
   10210:	add	x9, x8, #0x1
   10214:	mov	w10, #0x3a                  	// #58
   10218:	str	x9, [x21, #40]
   1021c:	strb	w10, [x8]
   10220:	ldp	x9, x8, [x21, #40]
   10224:	cmp	x9, x8
   10228:	add	x8, sp, #0xa8
   1022c:	b.cs	10340 <argp_failure@@Base+0x1f8>  // b.hs, b.nlast
   10230:	add	x10, x9, #0x1
   10234:	mov	w11, #0x20                  	// #32
   10238:	str	x10, [x21, #40]
   1023c:	strb	w11, [x9]
   10240:	ldp	q0, q1, [x8]
   10244:	sub	x2, x29, #0x20
   10248:	mov	x0, x21
   1024c:	mov	x1, x23
   10250:	stp	q0, q1, [x29, #-32]
   10254:	bl	ad50 <vfprintf@plt>
   10258:	cbz	w22, 102d4 <argp_failure@@Base+0x18c>
   1025c:	ldp	x8, x9, [x21, #40]
   10260:	cmp	x8, x9
   10264:	b.cs	10354 <argp_failure@@Base+0x20c>  // b.hs, b.nlast
   10268:	add	x9, x8, #0x1
   1026c:	mov	w10, #0x3a                  	// #58
   10270:	str	x9, [x21, #40]
   10274:	strb	w10, [x8]
   10278:	ldp	x8, x9, [x21, #40]
   1027c:	cmp	x8, x9
   10280:	b.cs	10364 <argp_failure@@Base+0x21c>  // b.hs, b.nlast
   10284:	add	x9, x8, #0x1
   10288:	mov	w10, #0x20                  	// #32
   1028c:	str	x9, [x21, #40]
   10290:	strb	w10, [x8]
   10294:	add	x1, sp, #0xa8
   10298:	mov	w2, #0xc8                  	// #200
   1029c:	mov	w0, w22
   102a0:	bl	a6a0 <strerror_r@plt>
   102a4:	cbnz	x0, 102cc <argp_failure@@Base+0x184>
   102a8:	mov	w0, w22
   102ac:	bl	a770 <strerror@plt>
   102b0:	cbnz	x0, 102cc <argp_failure@@Base+0x184>
   102b4:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   102b8:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   102bc:	add	x0, x0, #0x387
   102c0:	add	x1, x1, #0x3ab
   102c4:	mov	w2, #0x5                   	// #5
   102c8:	bl	ac80 <dcgettext@plt>
   102cc:	mov	x1, x21
   102d0:	bl	ace0 <fputs_unlocked@plt>
   102d4:	ldp	x8, x9, [x21, #40]
   102d8:	cmp	x8, x9
   102dc:	b.cs	10320 <argp_failure@@Base+0x1d8>  // b.hs, b.nlast
   102e0:	add	x9, x8, #0x1
   102e4:	mov	w10, #0xa                   	// #10
   102e8:	str	x9, [x21, #40]
   102ec:	strb	w10, [x8]
   102f0:	mov	x0, x21
   102f4:	bl	a570 <funlockfile@plt>
   102f8:	cbz	w19, 10308 <argp_failure@@Base+0x1c0>
   102fc:	cbz	x20, 10374 <argp_failure@@Base+0x22c>
   10300:	ldrb	w8, [x20, #28]
   10304:	tbz	w8, #5, 10374 <argp_failure@@Base+0x22c>
   10308:	ldp	x20, x19, [sp, #448]
   1030c:	ldp	x22, x21, [sp, #432]
   10310:	ldp	x28, x23, [sp, #416]
   10314:	ldp	x29, x30, [sp, #400]
   10318:	add	sp, sp, #0x1d0
   1031c:	ret
   10320:	mov	w1, #0xa                   	// #10
   10324:	mov	x0, x21
   10328:	bl	a880 <__overflow@plt>
   1032c:	b	102f0 <argp_failure@@Base+0x1a8>
   10330:	mov	w1, #0x3a                  	// #58
   10334:	mov	x0, x21
   10338:	bl	a880 <__overflow@plt>
   1033c:	b	10220 <argp_failure@@Base+0xd8>
   10340:	mov	w1, #0x20                  	// #32
   10344:	mov	x0, x21
   10348:	bl	a880 <__overflow@plt>
   1034c:	add	x8, sp, #0xa8
   10350:	b	10240 <argp_failure@@Base+0xf8>
   10354:	mov	w1, #0x3a                  	// #58
   10358:	mov	x0, x21
   1035c:	bl	a880 <__overflow@plt>
   10360:	b	10278 <argp_failure@@Base+0x130>
   10364:	mov	w1, #0x20                  	// #32
   10368:	mov	x0, x21
   1036c:	bl	a880 <__overflow@plt>
   10370:	b	10294 <argp_failure@@Base+0x14c>
   10374:	mov	w0, w19
   10378:	bl	a290 <exit@plt>
   1037c:	sub	sp, sp, #0xa0
   10380:	stp	x29, x30, [sp, #64]
   10384:	stp	x28, x27, [sp, #80]
   10388:	stp	x26, x25, [sp, #96]
   1038c:	stp	x24, x23, [sp, #112]
   10390:	stp	x22, x21, [sp, #128]
   10394:	stp	x20, x19, [sp, #144]
   10398:	ldr	x27, [x0, #32]
   1039c:	ldr	x24, [x0]
   103a0:	mov	x26, x0
   103a4:	mov	w0, #0x20                  	// #32
   103a8:	add	x29, sp, #0x40
   103ac:	mov	x28, x1
   103b0:	bl	a540 <malloc@plt>
   103b4:	cbz	x0, 10870 <argp_failure@@Base+0x728>
   103b8:	mov	x22, x0
   103bc:	mov	x20, x0
   103c0:	str	xzr, [x22, #24]!
   103c4:	stur	wzr, [x22, #-16]
   103c8:	str	x22, [sp, #16]
   103cc:	cbz	x24, 10570 <argp_failure@@Base+0x428>
   103d0:	ldrb	w8, [x24, #24]
   103d4:	tbnz	w8, #2, 10890 <argp_failure@@Base+0x748>
   103d8:	mov	w22, wzr
   103dc:	mov	w19, wzr
   103e0:	add	x23, x24, #0x28
   103e4:	b	103ec <argp_failure@@Base+0x2a4>
   103e8:	add	x23, x23, #0x30
   103ec:	ldur	w25, [x23, #-32]
   103f0:	cbnz	w25, 1040c <argp_failure@@Base+0x2c4>
   103f4:	ldur	x8, [x23, #-40]
   103f8:	cbnz	x8, 1040c <argp_failure@@Base+0x2c4>
   103fc:	ldur	x8, [x23, #-8]
   10400:	cbnz	x8, 1040c <argp_failure@@Base+0x2c4>
   10404:	ldr	w8, [x23]
   10408:	cbz	w8, 10444 <argp_failure@@Base+0x2fc>
   1040c:	ldur	w8, [x23, #-16]
   10410:	tbnz	w8, #2, 1041c <argp_failure@@Base+0x2d4>
   10414:	add	w22, w22, #0x1
   10418:	str	w22, [x20, #8]
   1041c:	sub	w9, w25, #0x1
   10420:	cmp	w9, #0xfe
   10424:	b.hi	103e8 <argp_failure@@Base+0x2a0>  // b.pmore
   10428:	tbnz	w8, #3, 103e8 <argp_failure@@Base+0x2a0>
   1042c:	bl	a900 <__ctype_b_loc@plt>
   10430:	ldr	x8, [x0]
   10434:	ldrh	w8, [x8, x25, lsl #1]
   10438:	tbz	w8, #14, 103e8 <argp_failure@@Base+0x2a0>
   1043c:	add	w19, w19, #0x1
   10440:	b	103e8 <argp_failure@@Base+0x2a0>
   10444:	mov	w8, #0x38                  	// #56
   10448:	umull	x0, w22, w8
   1044c:	bl	a540 <malloc@plt>
   10450:	mov	x22, x0
   10454:	str	x0, [x20]
   10458:	add	w0, w19, #0x1
   1045c:	bl	a540 <malloc@plt>
   10460:	str	x0, [x20, #16]
   10464:	cbz	x22, 10850 <argp_failure@@Base+0x708>
   10468:	mov	x23, x0
   1046c:	cbz	x0, 10850 <argp_failure@@Base+0x708>
   10470:	mov	w8, wzr
   10474:	b	10484 <argp_failure@@Base+0x33c>
   10478:	add	x22, x22, #0x38
   1047c:	mov	x24, x8
   10480:	mov	w8, w25
   10484:	ldr	w9, [x24, #8]
   10488:	cbnz	w9, 104a4 <argp_failure@@Base+0x35c>
   1048c:	ldr	x10, [x24]
   10490:	cbnz	x10, 104a4 <argp_failure@@Base+0x35c>
   10494:	ldr	x10, [x24, #32]
   10498:	cbnz	x10, 104a4 <argp_failure@@Base+0x35c>
   1049c:	ldr	w10, [x24, #40]
   104a0:	cbz	w10, 10568 <argp_failure@@Base+0x420>
   104a4:	str	x24, [x22]
   104a8:	str	wzr, [x22, #8]
   104ac:	str	x23, [x22, #16]
   104b0:	ldr	w25, [x24, #40]
   104b4:	cbnz	w25, 104d0 <argp_failure@@Base+0x388>
   104b8:	ldr	x10, [x24]
   104bc:	cbz	x10, 104c8 <argp_failure@@Base+0x380>
   104c0:	mov	w25, w8
   104c4:	b	104d0 <argp_failure@@Base+0x388>
   104c8:	cmp	w9, #0x0
   104cc:	cinc	w25, w8, eq  // eq = none
   104d0:	mov	w9, wzr
   104d4:	str	w25, [x22, #24]
   104d8:	stp	x28, x26, [x22, #32]
   104dc:	add	w8, w9, #0x1
   104e0:	str	w8, [x22, #8]
   104e4:	ldrb	w8, [x24, #24]
   104e8:	tbnz	w8, #3, 10530 <argp_failure@@Base+0x3e8>
   104ec:	ldr	w19, [x24, #8]
   104f0:	sub	w8, w19, #0x1
   104f4:	cmp	w8, #0xfe
   104f8:	b.hi	10530 <argp_failure@@Base+0x3e8>  // b.pmore
   104fc:	bl	a900 <__ctype_b_loc@plt>
   10500:	ldr	x8, [x0]
   10504:	ldrh	w8, [x8, x19, lsl #1]
   10508:	tbz	w8, #14, 10530 <argp_failure@@Base+0x3e8>
   1050c:	ldr	x8, [x20, #16]
   10510:	cmp	x8, x23
   10514:	b.cs	1052c <argp_failure@@Base+0x3e4>  // b.hs, b.nlast
   10518:	ldrb	w9, [x8], #1
   1051c:	cmp	w9, w19, uxtb
   10520:	b.eq	10530 <argp_failure@@Base+0x3e8>  // b.none
   10524:	cmp	x23, x8
   10528:	b.ne	10518 <argp_failure@@Base+0x3d0>  // b.any
   1052c:	strb	w19, [x23], #1
   10530:	ldr	w9, [x24, #56]
   10534:	add	x8, x24, #0x30
   10538:	cbnz	w9, 10554 <argp_failure@@Base+0x40c>
   1053c:	ldr	x9, [x8]
   10540:	cbnz	x9, 10554 <argp_failure@@Base+0x40c>
   10544:	ldr	x9, [x24, #80]
   10548:	cbnz	x9, 10554 <argp_failure@@Base+0x40c>
   1054c:	ldr	w9, [x24, #88]
   10550:	cbz	w9, 10478 <argp_failure@@Base+0x330>
   10554:	ldrb	w9, [x24, #72]
   10558:	tbz	w9, #2, 10478 <argp_failure@@Base+0x330>
   1055c:	ldr	w9, [x22, #8]
   10560:	mov	x24, x8
   10564:	b	104dc <argp_failure@@Base+0x394>
   10568:	ldr	x22, [sp, #16]
   1056c:	strb	wzr, [x23]
   10570:	cbz	x27, 1080c <argp_failure@@Base+0x6c4>
   10574:	ldr	x8, [x27]
   10578:	cbz	x8, 1080c <argp_failure@@Base+0x6c4>
   1057c:	stp	x28, x26, [sp]
   10580:	stur	x20, [x29, #-8]
   10584:	b	105ac <argp_failure@@Base+0x464>
   10588:	ldr	x8, [x21]
   1058c:	ldr	x9, [x21, #16]
   10590:	str	w23, [x20, #8]
   10594:	str	x8, [x20]
   10598:	str	x9, [x20, #16]
   1059c:	mov	x0, x21
   105a0:	bl	a960 <free@plt>
   105a4:	ldr	x8, [x27, #32]!
   105a8:	cbz	x8, 1080c <argp_failure@@Base+0x6c4>
   105ac:	ldr	w19, [x27, #24]
   105b0:	cbz	w19, 105bc <argp_failure@@Base+0x474>
   105b4:	ldr	x20, [x27, #16]
   105b8:	b	105c8 <argp_failure@@Base+0x480>
   105bc:	ldr	x20, [x27, #16]
   105c0:	mov	x1, x28
   105c4:	cbz	x20, 10614 <argp_failure@@Base+0x4cc>
   105c8:	ldr	x21, [x26, #32]
   105cc:	mov	w0, #0x30                  	// #48
   105d0:	bl	a540 <malloc@plt>
   105d4:	mov	x1, x0
   105d8:	cbz	x0, 10614 <argp_failure@@Base+0x4cc>
   105dc:	sub	x8, x27, x21
   105e0:	lsr	x8, x8, #5
   105e4:	str	x20, [x1]
   105e8:	stp	w8, w19, [x1, #8]
   105ec:	stp	x28, x26, [x1, #16]
   105f0:	cbz	x28, 10600 <argp_failure@@Base+0x4b8>
   105f4:	ldr	w8, [x28, #32]
   105f8:	add	w8, w8, #0x1
   105fc:	b	10604 <argp_failure@@Base+0x4bc>
   10600:	mov	w8, wzr
   10604:	ldr	x9, [x22]
   10608:	str	w8, [x1, #32]
   1060c:	str	x1, [x22]
   10610:	str	x9, [x1, #40]
   10614:	ldr	x0, [x27]
   10618:	bl	1037c <argp_failure@@Base+0x234>
   1061c:	ldur	x20, [x29, #-8]
   10620:	mov	x21, x0
   10624:	mov	x9, x22
   10628:	ldr	x10, [x9]
   1062c:	mov	x8, x9
   10630:	add	x9, x10, #0x28
   10634:	cbnz	x10, 10628 <argp_failure@@Base+0x4e0>
   10638:	ldr	x9, [x21, #24]
   1063c:	str	x9, [x8]
   10640:	ldr	w23, [x21, #8]
   10644:	str	xzr, [x21, #24]
   10648:	cbz	w23, 1059c <argp_failure@@Base+0x454>
   1064c:	ldr	w19, [x20, #8]
   10650:	cbz	w19, 10588 <argp_failure@@Base+0x440>
   10654:	add	w22, w19, w23
   10658:	mov	w8, #0x38                  	// #56
   1065c:	umull	x0, w22, w8
   10660:	str	x27, [sp, #32]
   10664:	bl	a540 <malloc@plt>
   10668:	ldr	x27, [x20, #16]
   1066c:	mov	x28, x0
   10670:	mov	x0, x27
   10674:	bl	a280 <strlen@plt>
   10678:	ldr	x25, [x21, #16]
   1067c:	and	x26, x0, #0xffffffff
   10680:	stur	x21, [x29, #-16]
   10684:	mov	x0, x25
   10688:	bl	a280 <strlen@plt>
   1068c:	add	x8, x26, x0
   10690:	add	x0, x8, #0x1
   10694:	bl	a540 <malloc@plt>
   10698:	stur	x28, [x29, #-24]
   1069c:	cbz	x28, 10830 <argp_failure@@Base+0x6e8>
   106a0:	mov	x24, x0
   106a4:	cbz	x0, 10830 <argp_failure@@Base+0x6e8>
   106a8:	str	w22, [sp, #28]
   106ac:	ldur	x22, [x29, #-24]
   106b0:	ldr	x1, [x20]
   106b4:	mov	w21, #0x38                  	// #56
   106b8:	mul	x28, x19, x21
   106bc:	mov	x0, x22
   106c0:	mov	x2, x28
   106c4:	bl	a210 <memcpy@plt>
   106c8:	ldur	x8, [x29, #-16]
   106cc:	add	x0, x22, x28
   106d0:	mul	x2, x23, x21
   106d4:	ldr	x1, [x8]
   106d8:	bl	a210 <memcpy@plt>
   106dc:	mov	x0, x24
   106e0:	mov	x1, x27
   106e4:	mov	x2, x26
   106e8:	bl	a210 <memcpy@plt>
   106ec:	mov	x28, x22
   106f0:	ldr	x8, [x28, #16]
   106f4:	subs	w19, w19, #0x1
   106f8:	sub	x8, x8, x27
   106fc:	add	x8, x24, x8
   10700:	str	x8, [x28, #16]
   10704:	add	x28, x28, #0x38
   10708:	b.ne	106f0 <argp_failure@@Base+0x5a8>  // b.any
   1070c:	add	x27, x24, x26
   10710:	b	10720 <argp_failure@@Base+0x5d8>
   10714:	subs	w23, w23, #0x1
   10718:	add	x28, x28, #0x38
   1071c:	b.eq	107a4 <argp_failure@@Base+0x65c>  // b.none
   10720:	ldr	w22, [x28, #8]
   10724:	str	x27, [x28, #16]
   10728:	cbz	w22, 10714 <argp_failure@@Base+0x5cc>
   1072c:	ldr	x19, [x28]
   10730:	b	1074c <argp_failure@@Base+0x604>
   10734:	strb	w20, [x27], #1
   10738:	add	x25, x25, #0x1
   1073c:	ldur	x20, [x29, #-8]
   10740:	subs	w22, w22, #0x1
   10744:	add	x19, x19, #0x30
   10748:	b.eq	10714 <argp_failure@@Base+0x5cc>  // b.none
   1074c:	ldrb	w8, [x19, #24]
   10750:	tbnz	w8, #3, 10740 <argp_failure@@Base+0x5f8>
   10754:	ldr	w21, [x19, #8]
   10758:	sub	w8, w21, #0x1
   1075c:	cmp	w8, #0xfe
   10760:	b.hi	10740 <argp_failure@@Base+0x5f8>  // b.pmore
   10764:	ldrb	w20, [x25]
   10768:	bl	a900 <__ctype_b_loc@plt>
   1076c:	cmp	w21, w20
   10770:	b.ne	1073c <argp_failure@@Base+0x5f4>  // b.any
   10774:	ldr	x8, [x0]
   10778:	ldrh	w8, [x8, x21, lsl #1]
   1077c:	tbz	w8, #14, 1073c <argp_failure@@Base+0x5f4>
   10780:	mov	x8, x26
   10784:	mov	x9, x24
   10788:	cbz	x26, 10734 <argp_failure@@Base+0x5ec>
   1078c:	ldrb	w10, [x9], #1
   10790:	cmp	w10, w20
   10794:	b.eq	10738 <argp_failure@@Base+0x5f0>  // b.none
   10798:	subs	x8, x8, #0x1
   1079c:	b.ne	1078c <argp_failure@@Base+0x644>  // b.any
   107a0:	b	10734 <argp_failure@@Base+0x5ec>
   107a4:	ldr	x0, [x20]
   107a8:	strb	wzr, [x27]
   107ac:	bl	a960 <free@plt>
   107b0:	ldr	x0, [x20, #16]
   107b4:	bl	a960 <free@plt>
   107b8:	ldp	x8, x21, [x29, #-24]
   107bc:	str	x24, [x20, #16]
   107c0:	ldr	x0, [x21, #24]
   107c4:	str	x8, [x20]
   107c8:	ldr	w8, [sp, #28]
   107cc:	str	w8, [x20, #8]
   107d0:	cbz	x0, 107e4 <argp_failure@@Base+0x69c>
   107d4:	ldr	x19, [x0, #40]
   107d8:	bl	a960 <free@plt>
   107dc:	mov	x0, x19
   107e0:	cbnz	x19, 107d4 <argp_failure@@Base+0x68c>
   107e4:	ldr	w8, [x21, #8]
   107e8:	ldp	x28, x26, [sp]
   107ec:	ldr	x27, [sp, #32]
   107f0:	ldr	x22, [sp, #16]
   107f4:	cbz	w8, 1059c <argp_failure@@Base+0x454>
   107f8:	ldr	x0, [x21]
   107fc:	bl	a960 <free@plt>
   10800:	ldr	x0, [x21, #16]
   10804:	bl	a960 <free@plt>
   10808:	b	1059c <argp_failure@@Base+0x454>
   1080c:	mov	x0, x20
   10810:	ldp	x20, x19, [sp, #144]
   10814:	ldp	x22, x21, [sp, #128]
   10818:	ldp	x24, x23, [sp, #112]
   1081c:	ldp	x26, x25, [sp, #96]
   10820:	ldp	x28, x27, [sp, #80]
   10824:	ldp	x29, x30, [sp, #64]
   10828:	add	sp, sp, #0xa0
   1082c:	ret
   10830:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   10834:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10838:	adrp	x3, 2f000 <vasnprintf@@Base+0x124c>
   1083c:	add	x0, x0, #0x570
   10840:	add	x1, x1, #0x4f1
   10844:	add	x3, x3, #0x589
   10848:	mov	w2, #0x370                 	// #880
   1084c:	bl	ad70 <__assert_fail@plt>
   10850:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   10854:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10858:	adrp	x3, 2f000 <vasnprintf@@Base+0x124c>
   1085c:	add	x0, x0, #0x54d
   10860:	add	x1, x1, #0x4f1
   10864:	add	x3, x3, #0x4fd
   10868:	mov	w2, #0x1db                 	// #475
   1086c:	bl	ad70 <__assert_fail@plt>
   10870:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   10874:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10878:	adrp	x3, 2f000 <vasnprintf@@Base+0x124c>
   1087c:	add	x0, x0, #0x4ed
   10880:	add	x1, x1, #0x4f1
   10884:	add	x3, x3, #0x4fd
   10888:	mov	w2, #0x1c3                 	// #451
   1088c:	bl	ad70 <__assert_fail@plt>
   10890:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   10894:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10898:	adrp	x3, 2f000 <vasnprintf@@Base+0x124c>
   1089c:	add	x0, x0, #0x53d
   108a0:	add	x1, x1, #0x4f1
   108a4:	add	x3, x3, #0x4fd
   108a8:	mov	w2, #0x1cd                 	// #461
   108ac:	bl	ad70 <__assert_fail@plt>
   108b0:	stp	x29, x30, [sp, #-32]!
   108b4:	stp	x20, x19, [sp, #16]
   108b8:	mov	x8, x0
   108bc:	ldr	x0, [x0, #16]
   108c0:	ldr	x20, [x8, #32]
   108c4:	mov	x29, sp
   108c8:	cbz	x0, 108e4 <argp_failure@@Base+0x79c>
   108cc:	mov	w1, #0xa                   	// #10
   108d0:	bl	aa50 <strchr@plt>
   108d4:	cmp	x0, #0x0
   108d8:	cset	w19, ne  // ne = any
   108dc:	cbnz	x20, 108ec <argp_failure@@Base+0x7a4>
   108e0:	b	1090c <argp_failure@@Base+0x7c4>
   108e4:	mov	x19, xzr
   108e8:	cbz	x20, 1090c <argp_failure@@Base+0x7c4>
   108ec:	ldr	x8, [x20]
   108f0:	cbz	x8, 1090c <argp_failure@@Base+0x7c4>
   108f4:	add	x20, x20, #0x20
   108f8:	mov	x0, x8
   108fc:	bl	108b0 <argp_failure@@Base+0x768>
   10900:	ldr	x8, [x20], #32
   10904:	add	x19, x0, x19
   10908:	cbnz	x8, 108f8 <argp_failure@@Base+0x7b0>
   1090c:	mov	x0, x19
   10910:	ldp	x20, x19, [sp, #16]
   10914:	ldp	x29, x30, [sp], #32
   10918:	ret
   1091c:	stp	x29, x30, [sp, #-96]!
   10920:	stp	x28, x27, [sp, #16]
   10924:	stp	x26, x25, [sp, #32]
   10928:	stp	x24, x23, [sp, #48]
   1092c:	stp	x22, x21, [sp, #64]
   10930:	stp	x20, x19, [sp, #80]
   10934:	mov	x29, sp
   10938:	sub	sp, sp, #0x10
   1093c:	ldr	w22, [x0, #8]
   10940:	cbz	w22, 10c90 <argp_failure@@Base+0xb48>
   10944:	mov	x20, x0
   10948:	ldr	x0, [x0, #16]
   1094c:	mov	x19, x1
   10950:	bl	a280 <strlen@plt>
   10954:	add	x9, x0, #0x10
   10958:	mov	x8, sp
   1095c:	and	x9, x9, #0xfffffffffffffff0
   10960:	sub	x23, x8, x9
   10964:	mov	sp, x23
   10968:	stp	x23, x20, [x29, #-16]
   1096c:	ldr	x24, [x20]
   10970:	b	10980 <argp_failure@@Base+0x838>
   10974:	subs	w22, w22, #0x1
   10978:	add	x24, x24, #0x38
   1097c:	b.eq	10a0c <argp_failure@@Base+0x8c4>  // b.none
   10980:	ldr	w25, [x24, #8]
   10984:	cbz	w25, 10974 <argp_failure@@Base+0x82c>
   10988:	ldr	x26, [x24]
   1098c:	ldr	x27, [x24, #16]
   10990:	mov	x28, x26
   10994:	b	109a8 <argp_failure@@Base+0x860>
   10998:	add	x27, x27, #0x1
   1099c:	subs	w25, w25, #0x1
   109a0:	add	x28, x28, #0x30
   109a4:	b.eq	10974 <argp_failure@@Base+0x82c>  // b.none
   109a8:	ldr	w21, [x28, #24]
   109ac:	tbnz	w21, #3, 1099c <argp_failure@@Base+0x854>
   109b0:	ldr	w20, [x28, #8]
   109b4:	sub	w8, w20, #0x1
   109b8:	cmp	w8, #0xfe
   109bc:	b.hi	1099c <argp_failure@@Base+0x854>  // b.pmore
   109c0:	bl	a900 <__ctype_b_loc@plt>
   109c4:	ldr	x8, [x0]
   109c8:	ldrh	w8, [x8, x20, lsl #1]
   109cc:	tbz	w8, #14, 1099c <argp_failure@@Base+0x854>
   109d0:	ldrb	w8, [x27]
   109d4:	cmp	w20, w8
   109d8:	b.ne	1099c <argp_failure@@Base+0x854>  // b.any
   109dc:	tst	w21, #0x4
   109e0:	csel	x26, x28, x26, eq  // eq = none
   109e4:	tbnz	w21, #1, 10998 <argp_failure@@Base+0x850>
   109e8:	ldr	x8, [x28, #16]
   109ec:	cbnz	x8, 10998 <argp_failure@@Base+0x850>
   109f0:	ldr	x8, [x26, #16]
   109f4:	cbnz	x8, 10998 <argp_failure@@Base+0x850>
   109f8:	ldr	w8, [x26, #24]
   109fc:	orr	w8, w8, w21
   10a00:	tbnz	w8, #4, 10998 <argp_failure@@Base+0x850>
   10a04:	strb	w20, [x23], #1
   10a08:	b	10998 <argp_failure@@Base+0x850>
   10a0c:	ldur	x2, [x29, #-16]
   10a10:	cmp	x23, x2
   10a14:	b.ls	10a2c <argp_failure@@Base+0x8e4>  // b.plast
   10a18:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10a1c:	add	x1, x1, #0x5b5
   10a20:	mov	x0, x19
   10a24:	strb	wzr, [x23]
   10a28:	bl	a830 <argp_fmtstream_printf@plt>
   10a2c:	ldur	x8, [x29, #-8]
   10a30:	ldr	w25, [x8, #8]
   10a34:	cbz	w25, 10c90 <argp_failure@@Base+0xb48>
   10a38:	ldr	x26, [x8]
   10a3c:	b	10a4c <argp_failure@@Base+0x904>
   10a40:	subs	w25, w25, #0x1
   10a44:	add	x26, x26, #0x38
   10a48:	b.eq	10bb8 <argp_failure@@Base+0xa70>  // b.none
   10a4c:	ldr	w27, [x26, #8]
   10a50:	cbz	w27, 10a40 <argp_failure@@Base+0x8f8>
   10a54:	ldr	x8, [x26, #40]
   10a58:	ldr	x22, [x26]
   10a5c:	ldr	x21, [x26, #16]
   10a60:	ldr	x23, [x8, #48]
   10a64:	mov	x28, x22
   10a68:	b	10a94 <argp_failure@@Base+0x94c>
   10a6c:	ldr	w2, [x28, #8]
   10a70:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10a74:	mov	x0, x19
   10a78:	add	x1, x1, #0x5bc
   10a7c:	mov	x3, x24
   10a80:	bl	a830 <argp_fmtstream_printf@plt>
   10a84:	add	x21, x21, #0x1
   10a88:	subs	w27, w27, #0x1
   10a8c:	add	x28, x28, #0x30
   10a90:	b.eq	10a40 <argp_failure@@Base+0x8f8>  // b.none
   10a94:	ldr	w20, [x28, #24]
   10a98:	tbnz	w20, #3, 10a88 <argp_failure@@Base+0x940>
   10a9c:	ldr	w24, [x28, #8]
   10aa0:	sub	w8, w24, #0x1
   10aa4:	cmp	w8, #0xfe
   10aa8:	b.hi	10a88 <argp_failure@@Base+0x940>  // b.pmore
   10aac:	bl	a900 <__ctype_b_loc@plt>
   10ab0:	ldr	x8, [x0]
   10ab4:	ldrh	w8, [x8, x24, lsl #1]
   10ab8:	tbz	w8, #14, 10a88 <argp_failure@@Base+0x940>
   10abc:	ldrb	w8, [x21]
   10ac0:	cmp	w24, w8
   10ac4:	b.ne	10a88 <argp_failure@@Base+0x940>  // b.any
   10ac8:	tst	w20, #0x4
   10acc:	csel	x22, x28, x22, eq  // eq = none
   10ad0:	tbnz	w20, #1, 10a84 <argp_failure@@Base+0x93c>
   10ad4:	ldr	w8, [x22, #24]
   10ad8:	ldr	x1, [x28, #16]
   10adc:	orr	w20, w8, w20
   10ae0:	cbnz	x1, 10ae8 <argp_failure@@Base+0x9a0>
   10ae4:	ldr	x1, [x22, #16]
   10ae8:	tbnz	w20, #4, 10a84 <argp_failure@@Base+0x93c>
   10aec:	cbz	x1, 10a84 <argp_failure@@Base+0x93c>
   10af0:	mov	w2, #0x5                   	// #5
   10af4:	mov	x0, x23
   10af8:	bl	ac80 <dcgettext@plt>
   10afc:	mov	x24, x0
   10b00:	tbnz	w20, #0, 10a6c <argp_failure@@Base+0x924>
   10b04:	mov	x0, x24
   10b08:	bl	a280 <strlen@plt>
   10b0c:	ldp	x9, x8, [x19, #48]
   10b10:	ldr	x10, [x19, #32]
   10b14:	add	x20, x0, #0x6
   10b18:	sub	x9, x8, x9
   10b1c:	cmp	x9, x10
   10b20:	b.ls	10b30 <argp_failure@@Base+0x9e8>  // b.plast
   10b24:	mov	x0, x19
   10b28:	bl	a470 <_argp_fmtstream_update@plt>
   10b2c:	ldr	x8, [x19, #56]
   10b30:	ldr	x9, [x19, #40]
   10b34:	ldr	x10, [x19, #16]
   10b38:	bic	x11, x9, x9, asr #63
   10b3c:	ldr	x9, [x19, #64]
   10b40:	add	x11, x20, x11
   10b44:	cmp	x11, x10
   10b48:	b.cs	10b78 <argp_failure@@Base+0xa30>  // b.hs, b.nlast
   10b4c:	cmp	x8, x9
   10b50:	b.cc	10b68 <argp_failure@@Base+0xa20>  // b.lo, b.ul, b.last
   10b54:	mov	w1, #0x1                   	// #1
   10b58:	mov	x0, x19
   10b5c:	bl	ac60 <_argp_fmtstream_ensure@plt>
   10b60:	cbz	w0, 10ba4 <argp_failure@@Base+0xa5c>
   10b64:	ldr	x8, [x19, #56]
   10b68:	add	x9, x8, #0x1
   10b6c:	str	x9, [x19, #56]
   10b70:	mov	w9, #0x20                  	// #32
   10b74:	b	10ba0 <argp_failure@@Base+0xa58>
   10b78:	cmp	x8, x9
   10b7c:	b.cc	10b94 <argp_failure@@Base+0xa4c>  // b.lo, b.ul, b.last
   10b80:	mov	w1, #0x1                   	// #1
   10b84:	mov	x0, x19
   10b88:	bl	ac60 <_argp_fmtstream_ensure@plt>
   10b8c:	cbz	w0, 10ba4 <argp_failure@@Base+0xa5c>
   10b90:	ldr	x8, [x19, #56]
   10b94:	add	x9, x8, #0x1
   10b98:	str	x9, [x19, #56]
   10b9c:	mov	w9, #0xa                   	// #10
   10ba0:	strb	w9, [x8]
   10ba4:	ldr	w2, [x28, #8]
   10ba8:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10bac:	mov	x0, x19
   10bb0:	add	x1, x1, #0x5c7
   10bb4:	b	10a7c <argp_failure@@Base+0x934>
   10bb8:	ldur	x8, [x29, #-8]
   10bbc:	ldr	w24, [x8, #8]
   10bc0:	cbz	w24, 10c90 <argp_failure@@Base+0xb48>
   10bc4:	ldr	x25, [x8]
   10bc8:	adrp	x20, 2f000 <vasnprintf@@Base+0x124c>
   10bcc:	adrp	x22, 2f000 <vasnprintf@@Base+0x124c>
   10bd0:	add	x20, x20, #0x5e8
   10bd4:	add	x22, x22, #0x5d0
   10bd8:	b	10be8 <argp_failure@@Base+0xaa0>
   10bdc:	subs	w24, w24, #0x1
   10be0:	add	x25, x25, #0x38
   10be4:	b.eq	10c90 <argp_failure@@Base+0xb48>  // b.none
   10be8:	ldr	w26, [x25, #8]
   10bec:	cbz	w26, 10bdc <argp_failure@@Base+0xa94>
   10bf0:	ldr	x8, [x25, #40]
   10bf4:	ldr	x27, [x25]
   10bf8:	ldr	x23, [x8, #48]
   10bfc:	mov	x28, x27
   10c00:	b	10c1c <argp_failure@@Base+0xad4>
   10c04:	mov	x0, x19
   10c08:	mov	x1, x20
   10c0c:	bl	a830 <argp_fmtstream_printf@plt>
   10c10:	subs	w26, w26, #0x1
   10c14:	add	x28, x28, #0x30
   10c18:	b.eq	10bdc <argp_failure@@Base+0xa94>  // b.none
   10c1c:	ldr	x2, [x28]
   10c20:	cbz	x2, 10c10 <argp_failure@@Base+0xac8>
   10c24:	ldr	w8, [x28, #24]
   10c28:	tst	w8, #0x4
   10c2c:	csel	x27, x28, x27, eq  // eq = none
   10c30:	tbnz	w8, #1, 10c10 <argp_failure@@Base+0xac8>
   10c34:	ldr	w9, [x27, #24]
   10c38:	ldr	x1, [x28, #16]
   10c3c:	orr	w21, w9, w8
   10c40:	cbz	x1, 10c4c <argp_failure@@Base+0xb04>
   10c44:	tbnz	w21, #4, 10c10 <argp_failure@@Base+0xac8>
   10c48:	b	10c54 <argp_failure@@Base+0xb0c>
   10c4c:	ldr	x1, [x27, #16]
   10c50:	tbnz	w21, #4, 10c10 <argp_failure@@Base+0xac8>
   10c54:	cbz	x1, 10c04 <argp_failure@@Base+0xabc>
   10c58:	mov	w2, #0x5                   	// #5
   10c5c:	mov	x0, x23
   10c60:	bl	ac80 <dcgettext@plt>
   10c64:	ldr	x2, [x28]
   10c68:	mov	x3, x0
   10c6c:	mov	x0, x19
   10c70:	tbnz	w21, #0, 10c84 <argp_failure@@Base+0xb3c>
   10c74:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   10c78:	add	x1, x1, #0x5dd
   10c7c:	bl	a830 <argp_fmtstream_printf@plt>
   10c80:	b	10c10 <argp_failure@@Base+0xac8>
   10c84:	mov	x1, x22
   10c88:	bl	a830 <argp_fmtstream_printf@plt>
   10c8c:	b	10c10 <argp_failure@@Base+0xac8>
   10c90:	mov	sp, x29
   10c94:	ldp	x20, x19, [sp, #80]
   10c98:	ldp	x22, x21, [sp, #64]
   10c9c:	ldp	x24, x23, [sp, #48]
   10ca0:	ldp	x26, x25, [sp, #32]
   10ca4:	ldp	x28, x27, [sp, #16]
   10ca8:	ldp	x29, x30, [sp], #96
   10cac:	ret
   10cb0:	sub	sp, sp, #0x80
   10cb4:	stp	x29, x30, [sp, #32]
   10cb8:	stp	x28, x27, [sp, #48]
   10cbc:	stp	x26, x25, [sp, #64]
   10cc0:	stp	x24, x23, [sp, #80]
   10cc4:	stp	x22, x21, [sp, #96]
   10cc8:	stp	x20, x19, [sp, #112]
   10ccc:	ldr	x26, [x2]
   10cd0:	ldr	x8, [x0, #16]
   10cd4:	ldr	x28, [x0, #32]
   10cd8:	mov	x20, x4
   10cdc:	mov	w19, w3
   10ce0:	mov	x21, x2
   10ce4:	mov	x23, x0
   10ce8:	mov	x22, x1
   10cec:	add	x29, sp, #0x20
   10cf0:	cbz	x8, 10d0c <argp_failure@@Base+0xbc4>
   10cf4:	ldr	x0, [x23, #48]
   10cf8:	mov	w2, #0x5                   	// #5
   10cfc:	mov	x1, x8
   10d00:	bl	ac80 <dcgettext@plt>
   10d04:	mov	x24, x0
   10d08:	b	10d10 <argp_failure@@Base+0xbc8>
   10d0c:	mov	x24, xzr
   10d10:	ldr	x8, [x23, #40]
   10d14:	mov	x25, x24
   10d18:	cbz	x8, 10d44 <argp_failure@@Base+0xbfc>
   10d1c:	mov	x0, x23
   10d20:	mov	x1, x22
   10d24:	bl	ab40 <_argp_input@plt>
   10d28:	ldr	x8, [x23, #40]
   10d2c:	mov	x2, x0
   10d30:	mov	w0, #0x6                   	// #6
   10d34:	movk	w0, #0x200, lsl #16
   10d38:	mov	x1, x24
   10d3c:	blr	x8
   10d40:	mov	x25, x0
   10d44:	cbz	x25, 10d98 <argp_failure@@Base+0xc50>
   10d48:	mov	w1, #0xa                   	// #10
   10d4c:	mov	x0, x25
   10d50:	bl	ac40 <strchrnul@plt>
   10d54:	ldrb	w8, [x0]
   10d58:	mov	x23, x0
   10d5c:	stur	x26, [x29, #-8]
   10d60:	str	x28, [sp, #16]
   10d64:	cbz	w8, 10da4 <argp_failure@@Base+0xc5c>
   10d68:	ldrb	w27, [x26]
   10d6c:	cbz	w27, 10db0 <argp_failure@@Base+0xc68>
   10d70:	mov	w28, wzr
   10d74:	add	x26, x23, #0x1
   10d78:	mov	w1, #0xa                   	// #10
   10d7c:	mov	x0, x26
   10d80:	bl	ac40 <strchrnul@plt>
   10d84:	add	w28, w28, #0x1
   10d88:	cmp	w28, w27
   10d8c:	mov	x23, x0
   10d90:	b.cc	10d74 <argp_failure@@Base+0xc2c>  // b.lo, b.ul, b.last
   10d94:	b	10db4 <argp_failure@@Base+0xc6c>
   10d98:	mov	x23, xzr
   10d9c:	cbnz	x28, 10ec0 <argp_failure@@Base+0xd78>
   10da0:	b	10ef4 <argp_failure@@Base+0xdac>
   10da4:	str	wzr, [sp, #12]
   10da8:	mov	x26, x25
   10dac:	b	10dc8 <argp_failure@@Base+0xc80>
   10db0:	mov	x26, x25
   10db4:	ldr	x8, [x21]
   10db8:	add	x8, x8, #0x1
   10dbc:	str	x8, [x21]
   10dc0:	mov	w8, #0x1                   	// #1
   10dc4:	str	w8, [sp, #12]
   10dc8:	ldp	x9, x8, [x20, #48]
   10dcc:	ldr	x10, [x20, #32]
   10dd0:	sub	x27, x23, x26
   10dd4:	add	x28, x27, #0x1
   10dd8:	sub	x9, x8, x9
   10ddc:	cmp	x9, x10
   10de0:	b.ls	10df0 <argp_failure@@Base+0xca8>  // b.plast
   10de4:	mov	x0, x20
   10de8:	bl	a470 <_argp_fmtstream_update@plt>
   10dec:	ldr	x8, [x20, #56]
   10df0:	ldr	x9, [x20, #40]
   10df4:	ldr	x10, [x20, #16]
   10df8:	bic	x11, x9, x9, asr #63
   10dfc:	ldr	x9, [x20, #64]
   10e00:	add	x11, x28, x11
   10e04:	cmp	x11, x10
   10e08:	b.cs	10e38 <argp_failure@@Base+0xcf0>  // b.hs, b.nlast
   10e0c:	ldr	x28, [sp, #16]
   10e10:	cmp	x8, x9
   10e14:	b.cc	10e2c <argp_failure@@Base+0xce4>  // b.lo, b.ul, b.last
   10e18:	mov	w1, #0x1                   	// #1
   10e1c:	mov	x0, x20
   10e20:	bl	ac60 <_argp_fmtstream_ensure@plt>
   10e24:	cbz	w0, 10e68 <argp_failure@@Base+0xd20>
   10e28:	ldr	x8, [x20, #56]
   10e2c:	add	x9, x8, #0x1
   10e30:	mov	w10, #0x20                  	// #32
   10e34:	b	10e60 <argp_failure@@Base+0xd18>
   10e38:	ldr	x28, [sp, #16]
   10e3c:	cmp	x8, x9
   10e40:	b.cc	10e58 <argp_failure@@Base+0xd10>  // b.lo, b.ul, b.last
   10e44:	mov	w1, #0x1                   	// #1
   10e48:	mov	x0, x20
   10e4c:	bl	ac60 <_argp_fmtstream_ensure@plt>
   10e50:	cbz	w0, 10e68 <argp_failure@@Base+0xd20>
   10e54:	ldr	x8, [x20, #56]
   10e58:	add	x9, x8, #0x1
   10e5c:	mov	w10, #0xa                   	// #10
   10e60:	str	x9, [x20, #56]
   10e64:	strb	w10, [x8]
   10e68:	ldp	x0, x8, [x20, #56]
   10e6c:	add	x9, x0, x27
   10e70:	cmp	x9, x8
   10e74:	b.ls	10e8c <argp_failure@@Base+0xd44>  // b.plast
   10e78:	mov	x0, x20
   10e7c:	mov	x1, x27
   10e80:	bl	ac60 <_argp_fmtstream_ensure@plt>
   10e84:	cbz	w0, 10ea4 <argp_failure@@Base+0xd5c>
   10e88:	ldr	x0, [x20, #56]
   10e8c:	mov	x1, x26
   10e90:	mov	x2, x27
   10e94:	bl	a210 <memcpy@plt>
   10e98:	ldr	x8, [x20, #56]
   10e9c:	add	x8, x8, x27
   10ea0:	str	x8, [x20, #56]
   10ea4:	cmp	x25, x24
   10ea8:	b.eq	10eb4 <argp_failure@@Base+0xd6c>  // b.none
   10eac:	mov	x0, x25
   10eb0:	bl	a960 <free@plt>
   10eb4:	ldur	x26, [x29, #-8]
   10eb8:	ldr	w25, [sp, #12]
   10ebc:	cbz	x28, 10ef4 <argp_failure@@Base+0xdac>
   10ec0:	ldr	x8, [x28]
   10ec4:	cbz	x8, 10ef4 <argp_failure@@Base+0xdac>
   10ec8:	add	x24, x28, #0x20
   10ecc:	mov	x0, x8
   10ed0:	mov	x1, x22
   10ed4:	mov	x2, x21
   10ed8:	mov	w3, w19
   10edc:	mov	x4, x20
   10ee0:	bl	10cb0 <argp_failure@@Base+0xb68>
   10ee4:	ldr	x8, [x24], #32
   10ee8:	cmp	w0, #0x0
   10eec:	cset	w19, eq  // eq = none
   10ef0:	cbnz	x8, 10ecc <argp_failure@@Base+0xd84>
   10ef4:	cbz	w25, 10f24 <argp_failure@@Base+0xddc>
   10ef8:	cbz	w19, 10f24 <argp_failure@@Base+0xddc>
   10efc:	ldrb	w9, [x23]
   10f00:	ldrb	w8, [x26]
   10f04:	cbz	w9, 10f18 <argp_failure@@Base+0xdd0>
   10f08:	add	w8, w8, #0x1
   10f0c:	mov	w19, wzr
   10f10:	strb	w8, [x26]
   10f14:	b	10f24 <argp_failure@@Base+0xddc>
   10f18:	cbz	w8, 10f20 <argp_failure@@Base+0xdd8>
   10f1c:	strb	wzr, [x26]
   10f20:	mov	w19, #0x1                   	// #1
   10f24:	cmp	w19, #0x0
   10f28:	ldp	x20, x19, [sp, #112]
   10f2c:	ldp	x22, x21, [sp, #96]
   10f30:	ldp	x24, x23, [sp, #80]
   10f34:	ldp	x26, x25, [sp, #64]
   10f38:	ldp	x28, x27, [sp, #48]
   10f3c:	ldp	x29, x30, [sp, #32]
   10f40:	cset	w0, eq  // eq = none
   10f44:	add	sp, sp, #0x80
   10f48:	ret
   10f4c:	sub	sp, sp, #0x70
   10f50:	stp	x29, x30, [sp, #16]
   10f54:	stp	x28, x27, [sp, #32]
   10f58:	stp	x26, x25, [sp, #48]
   10f5c:	stp	x24, x23, [sp, #64]
   10f60:	stp	x22, x21, [sp, #80]
   10f64:	stp	x20, x19, [sp, #96]
   10f68:	ldr	x8, [x0, #24]
   10f6c:	mov	x19, x5
   10f70:	mov	w20, w4
   10f74:	mov	w21, w3
   10f78:	mov	w22, w2
   10f7c:	mov	x24, x0
   10f80:	mov	x23, x1
   10f84:	add	x29, sp, #0x10
   10f88:	cbz	x8, 10fd8 <argp_failure@@Base+0xe90>
   10f8c:	ldr	x0, [x24, #48]
   10f90:	mov	w2, #0x5                   	// #5
   10f94:	mov	x1, x8
   10f98:	bl	ac80 <dcgettext@plt>
   10f9c:	ldr	x27, [x24, #32]
   10fa0:	mov	x26, x0
   10fa4:	cbz	x0, 10fe8 <argp_failure@@Base+0xea0>
   10fa8:	mov	w1, #0xb                   	// #11
   10fac:	mov	x0, x26
   10fb0:	bl	aa50 <strchr@plt>
   10fb4:	cmp	x0, #0x0
   10fb8:	csinc	x9, xzr, x0, eq  // eq = none
   10fbc:	cmp	x0, #0x0
   10fc0:	sub	x8, x0, x26
   10fc4:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   10fc8:	csel	x25, x8, xzr, eq  // eq = none
   10fcc:	cmp	w22, #0x0
   10fd0:	csel	x26, x26, x9, eq  // eq = none
   10fd4:	b	10fec <argp_failure@@Base+0xea4>
   10fd8:	ldr	x27, [x24, #32]
   10fdc:	mov	x25, xzr
   10fe0:	mov	x26, xzr
   10fe4:	b	10fec <argp_failure@@Base+0xea4>
   10fe8:	mov	x25, xzr
   10fec:	ldr	x8, [x24, #40]
   10ff0:	mov	w28, #0x1                   	// #1
   10ff4:	movk	w28, #0x200, lsl #16
   10ff8:	cbz	x8, 11044 <argp_failure@@Base+0xefc>
   10ffc:	cbz	x25, 11010 <argp_failure@@Base+0xec8>
   11000:	mov	x0, x26
   11004:	mov	x1, x25
   11008:	bl	aa20 <strndup@plt>
   1100c:	mov	x26, x0
   11010:	mov	x0, x24
   11014:	mov	x1, x23
   11018:	bl	ab40 <_argp_input@plt>
   1101c:	ldr	x8, [x24, #40]
   11020:	cmp	w22, #0x0
   11024:	mov	x2, x0
   11028:	cinc	w0, w28, ne  // ne = any
   1102c:	mov	x1, x26
   11030:	str	x2, [sp, #8]
   11034:	blr	x8
   11038:	mov	x28, x0
   1103c:	cbnz	x28, 11050 <argp_failure@@Base+0xf08>
   11040:	b	11194 <argp_failure@@Base+0x104c>
   11044:	str	xzr, [sp, #8]
   11048:	mov	x28, x26
   1104c:	cbz	x28, 11194 <argp_failure@@Base+0x104c>
   11050:	cbz	w21, 11084 <argp_failure@@Base+0xf3c>
   11054:	ldp	x8, x9, [x19, #56]
   11058:	cmp	x8, x9
   1105c:	b.cc	11074 <argp_failure@@Base+0xf2c>  // b.lo, b.ul, b.last
   11060:	mov	w1, #0x1                   	// #1
   11064:	mov	x0, x19
   11068:	bl	ac60 <_argp_fmtstream_ensure@plt>
   1106c:	cbz	w0, 11084 <argp_failure@@Base+0xf3c>
   11070:	ldr	x8, [x19, #56]
   11074:	add	x9, x8, #0x1
   11078:	mov	w10, #0xa                   	// #10
   1107c:	str	x9, [x19, #56]
   11080:	strb	w10, [x8]
   11084:	str	x27, [sp]
   11088:	cbz	x25, 110d0 <argp_failure@@Base+0xf88>
   1108c:	cmp	x28, x26
   11090:	b.ne	110d0 <argp_failure@@Base+0xf88>  // b.any
   11094:	ldp	x0, x8, [x19, #56]
   11098:	add	x9, x0, x25
   1109c:	cmp	x9, x8
   110a0:	b.ls	110b8 <argp_failure@@Base+0xf70>  // b.plast
   110a4:	mov	x0, x19
   110a8:	mov	x1, x25
   110ac:	bl	ac60 <_argp_fmtstream_ensure@plt>
   110b0:	cbz	w0, 1111c <argp_failure@@Base+0xfd4>
   110b4:	ldr	x0, [x19, #56]
   110b8:	mov	x1, x26
   110bc:	mov	x2, x25
   110c0:	bl	a210 <memcpy@plt>
   110c4:	ldr	x8, [x19, #56]
   110c8:	add	x8, x8, x25
   110cc:	b	11118 <argp_failure@@Base+0xfd0>
   110d0:	mov	x0, x28
   110d4:	bl	a280 <strlen@plt>
   110d8:	cbz	x0, 1111c <argp_failure@@Base+0xfd4>
   110dc:	mov	x27, x0
   110e0:	ldp	x0, x8, [x19, #56]
   110e4:	add	x9, x0, x27
   110e8:	cmp	x9, x8
   110ec:	b.ls	11104 <argp_failure@@Base+0xfbc>  // b.plast
   110f0:	mov	x0, x19
   110f4:	mov	x1, x27
   110f8:	bl	ac60 <_argp_fmtstream_ensure@plt>
   110fc:	cbz	w0, 1111c <argp_failure@@Base+0xfd4>
   11100:	ldr	x0, [x19, #56]
   11104:	mov	x1, x28
   11108:	mov	x2, x27
   1110c:	bl	a210 <memcpy@plt>
   11110:	ldr	x8, [x19, #56]
   11114:	add	x8, x8, x27
   11118:	str	x8, [x19, #56]
   1111c:	ldp	x9, x8, [x19, #48]
   11120:	ldr	x10, [x19, #32]
   11124:	sub	x8, x8, x9
   11128:	cmp	x8, x10
   1112c:	b.ls	11138 <argp_failure@@Base+0xff0>  // b.plast
   11130:	mov	x0, x19
   11134:	bl	a470 <_argp_fmtstream_update@plt>
   11138:	ldr	x8, [x19, #40]
   1113c:	ldr	x9, [x19, #8]
   11140:	ldr	x27, [sp]
   11144:	bic	x8, x8, x8, asr #63
   11148:	cmp	x8, x9
   1114c:	b.ls	11180 <argp_failure@@Base+0x1038>  // b.plast
   11150:	ldp	x8, x9, [x19, #56]
   11154:	cmp	x8, x9
   11158:	b.cc	11170 <argp_failure@@Base+0x1028>  // b.lo, b.ul, b.last
   1115c:	mov	w1, #0x1                   	// #1
   11160:	mov	x0, x19
   11164:	bl	ac60 <_argp_fmtstream_ensure@plt>
   11168:	cbz	w0, 11180 <argp_failure@@Base+0x1038>
   1116c:	ldr	x8, [x19, #56]
   11170:	add	x9, x8, #0x1
   11174:	mov	w10, #0xa                   	// #10
   11178:	str	x9, [x19, #56]
   1117c:	strb	w10, [x8]
   11180:	cmp	x28, x26
   11184:	b.eq	11190 <argp_failure@@Base+0x1048>  // b.none
   11188:	mov	x0, x28
   1118c:	bl	a960 <free@plt>
   11190:	mov	w28, #0x1                   	// #1
   11194:	cbz	x25, 111ac <argp_failure@@Base+0x1064>
   11198:	cbz	x26, 111ac <argp_failure@@Base+0x1064>
   1119c:	ldr	x8, [x24, #40]
   111a0:	cbz	x8, 111ac <argp_failure@@Base+0x1064>
   111a4:	mov	x0, x26
   111a8:	bl	a960 <free@plt>
   111ac:	cbz	w22, 112cc <argp_failure@@Base+0x1184>
   111b0:	ldr	x8, [x24, #40]
   111b4:	cbz	x8, 112cc <argp_failure@@Base+0x1184>
   111b8:	ldr	x2, [sp, #8]
   111bc:	mov	w9, #0x1                   	// #1
   111c0:	movk	w9, #0x200, lsl #16
   111c4:	add	w0, w9, #0x3
   111c8:	mov	x1, xzr
   111cc:	blr	x8
   111d0:	cbz	x0, 112cc <argp_failure@@Base+0x1184>
   111d4:	mov	x24, x0
   111d8:	orr	w8, w28, w21
   111dc:	cbz	w8, 11210 <argp_failure@@Base+0x10c8>
   111e0:	ldp	x8, x9, [x19, #56]
   111e4:	cmp	x8, x9
   111e8:	b.cc	11200 <argp_failure@@Base+0x10b8>  // b.lo, b.ul, b.last
   111ec:	mov	w1, #0x1                   	// #1
   111f0:	mov	x0, x19
   111f4:	bl	ac60 <_argp_fmtstream_ensure@plt>
   111f8:	cbz	w0, 11210 <argp_failure@@Base+0x10c8>
   111fc:	ldr	x8, [x19, #56]
   11200:	add	x9, x8, #0x1
   11204:	mov	w10, #0xa                   	// #10
   11208:	str	x9, [x19, #56]
   1120c:	strb	w10, [x8]
   11210:	mov	x0, x24
   11214:	bl	a280 <strlen@plt>
   11218:	cbz	x0, 1125c <argp_failure@@Base+0x1114>
   1121c:	mov	x25, x0
   11220:	ldp	x0, x8, [x19, #56]
   11224:	add	x9, x0, x25
   11228:	cmp	x9, x8
   1122c:	b.ls	11244 <argp_failure@@Base+0x10fc>  // b.plast
   11230:	mov	x0, x19
   11234:	mov	x1, x25
   11238:	bl	ac60 <_argp_fmtstream_ensure@plt>
   1123c:	cbz	w0, 1125c <argp_failure@@Base+0x1114>
   11240:	ldr	x0, [x19, #56]
   11244:	mov	x1, x24
   11248:	mov	x2, x25
   1124c:	bl	a210 <memcpy@plt>
   11250:	ldr	x8, [x19, #56]
   11254:	add	x8, x8, x25
   11258:	str	x8, [x19, #56]
   1125c:	mov	x0, x24
   11260:	bl	a960 <free@plt>
   11264:	ldp	x9, x8, [x19, #48]
   11268:	ldr	x10, [x19, #32]
   1126c:	sub	x8, x8, x9
   11270:	cmp	x8, x10
   11274:	b.ls	11280 <argp_failure@@Base+0x1138>  // b.plast
   11278:	mov	x0, x19
   1127c:	bl	a470 <_argp_fmtstream_update@plt>
   11280:	ldr	x8, [x19, #40]
   11284:	ldr	x9, [x19, #8]
   11288:	bic	x8, x8, x8, asr #63
   1128c:	cmp	x8, x9
   11290:	b.ls	112c8 <argp_failure@@Base+0x1180>  // b.plast
   11294:	ldp	x8, x9, [x19, #56]
   11298:	cmp	x8, x9
   1129c:	b.cc	112b8 <argp_failure@@Base+0x1170>  // b.lo, b.ul, b.last
   112a0:	mov	w1, #0x1                   	// #1
   112a4:	mov	x0, x19
   112a8:	mov	w28, #0x1                   	// #1
   112ac:	bl	ac60 <_argp_fmtstream_ensure@plt>
   112b0:	cbz	w0, 112cc <argp_failure@@Base+0x1184>
   112b4:	ldr	x8, [x19, #56]
   112b8:	add	x9, x8, #0x1
   112bc:	mov	w10, #0xa                   	// #10
   112c0:	str	x9, [x19, #56]
   112c4:	strb	w10, [x8]
   112c8:	mov	w28, #0x1                   	// #1
   112cc:	cbz	x27, 11318 <argp_failure@@Base+0x11d0>
   112d0:	ldr	x8, [x27]
   112d4:	cbz	x8, 11318 <argp_failure@@Base+0x11d0>
   112d8:	add	x24, x27, #0x20
   112dc:	b	11310 <argp_failure@@Base+0x11c8>
   112e0:	orr	w9, w28, w21
   112e4:	cmp	w9, #0x0
   112e8:	cset	w3, ne  // ne = any
   112ec:	mov	x0, x8
   112f0:	mov	x1, x23
   112f4:	mov	w2, w22
   112f8:	mov	w4, w20
   112fc:	mov	x5, x19
   11300:	bl	10f4c <argp_failure@@Base+0xe04>
   11304:	ldr	x8, [x24], #32
   11308:	orr	w28, w0, w28
   1130c:	cbz	x8, 11318 <argp_failure@@Base+0x11d0>
   11310:	cbz	w20, 112e0 <argp_failure@@Base+0x1198>
   11314:	cbz	w28, 112e0 <argp_failure@@Base+0x1198>
   11318:	mov	w0, w28
   1131c:	ldp	x20, x19, [sp, #96]
   11320:	ldp	x22, x21, [sp, #80]
   11324:	ldp	x24, x23, [sp, #64]
   11328:	ldp	x26, x25, [sp, #48]
   1132c:	ldp	x28, x27, [sp, #32]
   11330:	ldp	x29, x30, [sp, #16]
   11334:	add	sp, sp, #0x70
   11338:	ret
   1133c:	stp	x29, x30, [sp, #-96]!
   11340:	stp	x28, x27, [sp, #16]
   11344:	stp	x26, x25, [sp, #32]
   11348:	stp	x24, x23, [sp, #48]
   1134c:	stp	x22, x21, [sp, #64]
   11350:	stp	x20, x19, [sp, #80]
   11354:	ldr	x8, [x0, #32]
   11358:	ldr	x9, [x1, #32]
   1135c:	ldr	w11, [x0, #24]
   11360:	ldr	w10, [x1, #24]
   11364:	mov	x29, sp
   11368:	cmp	x8, x9
   1136c:	b.eq	11424 <argp_failure@@Base+0x12dc>  // b.none
   11370:	cbz	x8, 1139c <argp_failure@@Base+0x1254>
   11374:	cbz	x9, 113bc <argp_failure@@Base+0x1274>
   11378:	ldr	w10, [x8, #32]
   1137c:	ldr	w11, [x9, #32]
   11380:	cmp	w10, w11
   11384:	b.le	113e4 <argp_failure@@Base+0x129c>
   11388:	ldr	x8, [x8, #16]
   1138c:	ldr	w10, [x8, #32]
   11390:	cmp	w10, w11
   11394:	b.gt	11388 <argp_failure@@Base+0x1240>
   11398:	b	113e4 <argp_failure@@Base+0x129c>
   1139c:	mov	x8, x9
   113a0:	ldr	x9, [x9, #16]
   113a4:	cbnz	x9, 1139c <argp_failure@@Base+0x1254>
   113a8:	ldr	w8, [x8, #12]
   113ac:	subs	w0, w11, w8
   113b0:	b.ne	114d8 <argp_failure@@Base+0x1390>  // b.any
   113b4:	mov	w0, #0xffffffff            	// #-1
   113b8:	b	11708 <argp_failure@@Base+0x15c0>
   113bc:	mov	x9, x8
   113c0:	ldr	x8, [x8, #16]
   113c4:	cbnz	x8, 113bc <argp_failure@@Base+0x1274>
   113c8:	ldr	w8, [x9, #12]
   113cc:	subs	w0, w8, w10
   113d0:	b.ne	114f0 <argp_failure@@Base+0x13a8>  // b.any
   113d4:	mov	w0, #0x1                   	// #1
   113d8:	b	11708 <argp_failure@@Base+0x15c0>
   113dc:	ldr	x9, [x9, #16]
   113e0:	ldr	w11, [x9, #32]
   113e4:	cmp	w11, w10
   113e8:	b.gt	113dc <argp_failure@@Base+0x1294>
   113ec:	mov	x11, x9
   113f0:	mov	x10, x8
   113f4:	ldr	x8, [x8, #16]
   113f8:	ldr	x9, [x9, #16]
   113fc:	cmp	x8, x9
   11400:	b.ne	113ec <argp_failure@@Base+0x12a4>  // b.any
   11404:	ldr	w8, [x10, #12]
   11408:	ldr	w9, [x11, #12]
   1140c:	subs	w0, w8, w9
   11410:	b.ne	114c0 <argp_failure@@Base+0x1378>  // b.any
   11414:	ldr	w8, [x11, #8]
   11418:	ldr	w9, [x10, #8]
   1141c:	sub	w0, w8, w9
   11420:	b	11708 <argp_failure@@Base+0x15c0>
   11424:	mov	x19, x0
   11428:	subs	w0, w11, w10
   1142c:	b.ne	114a8 <argp_failure@@Base+0x1360>  // b.any
   11430:	ldr	w23, [x19, #8]
   11434:	mov	x20, x1
   11438:	cbz	w23, 11508 <argp_failure@@Base+0x13c0>
   1143c:	ldr	x8, [x19]
   11440:	ldr	x22, [x19, #16]
   11444:	sub	w25, w23, #0x1
   11448:	add	x24, x8, #0x18
   1144c:	ldr	w21, [x24]
   11450:	tbnz	w21, #3, 11490 <argp_failure@@Base+0x1348>
   11454:	ldur	w26, [x24, #-16]
   11458:	sub	w8, w26, #0x1
   1145c:	cmp	w8, #0xfe
   11460:	b.hi	11490 <argp_failure@@Base+0x1348>  // b.pmore
   11464:	bl	a900 <__ctype_b_loc@plt>
   11468:	ldr	x8, [x0]
   1146c:	ldrh	w8, [x8, x26, lsl #1]
   11470:	tbz	w8, #14, 11490 <argp_failure@@Base+0x1348>
   11474:	ldrb	w8, [x22]
   11478:	cmp	w26, w8
   1147c:	b.ne	11490 <argp_failure@@Base+0x1348>  // b.any
   11480:	tst	w21, #0x2
   11484:	csel	w21, w26, wzr, eq  // eq = none
   11488:	add	x22, x22, #0x1
   1148c:	b	11494 <argp_failure@@Base+0x134c>
   11490:	mov	w21, wzr
   11494:	subs	w25, w25, #0x1
   11498:	b.cc	1150c <argp_failure@@Base+0x13c4>  // b.lo, b.ul, b.last
   1149c:	add	x24, x24, #0x30
   114a0:	cbz	w21, 1144c <argp_failure@@Base+0x1304>
   114a4:	b	1150c <argp_failure@@Base+0x13c4>
   114a8:	tst	w10, w11
   114ac:	b.lt	11708 <argp_failure@@Base+0x15c0>  // b.tstop
   114b0:	orr	w8, w10, w11
   114b4:	tbz	w8, #31, 11708 <argp_failure@@Base+0x15c0>
   114b8:	sub	w0, w10, w11
   114bc:	b	11708 <argp_failure@@Base+0x15c0>
   114c0:	tst	w9, w8
   114c4:	b.lt	11708 <argp_failure@@Base+0x15c0>  // b.tstop
   114c8:	orr	w10, w9, w8
   114cc:	tbz	w10, #31, 11708 <argp_failure@@Base+0x15c0>
   114d0:	sub	w0, w9, w8
   114d4:	b	11708 <argp_failure@@Base+0x15c0>
   114d8:	tst	w8, w11
   114dc:	b.lt	11708 <argp_failure@@Base+0x15c0>  // b.tstop
   114e0:	orr	w9, w8, w11
   114e4:	tbz	w9, #31, 11708 <argp_failure@@Base+0x15c0>
   114e8:	sub	w0, w8, w11
   114ec:	b	11708 <argp_failure@@Base+0x15c0>
   114f0:	tst	w8, w10
   114f4:	b.lt	11708 <argp_failure@@Base+0x15c0>  // b.tstop
   114f8:	orr	w9, w8, w10
   114fc:	tbz	w9, #31, 11708 <argp_failure@@Base+0x15c0>
   11500:	sub	w0, w10, w8
   11504:	b	11708 <argp_failure@@Base+0x15c0>
   11508:	mov	w21, wzr
   1150c:	ldr	w24, [x20, #8]
   11510:	ldr	x25, [x20]
   11514:	cbz	w24, 11580 <argp_failure@@Base+0x1438>
   11518:	ldr	x20, [x20, #16]
   1151c:	add	x26, x25, #0x18
   11520:	sub	w27, w24, #0x1
   11524:	ldr	w22, [x26]
   11528:	tbnz	w22, #3, 11568 <argp_failure@@Base+0x1420>
   1152c:	ldur	w28, [x26, #-16]
   11530:	sub	w8, w28, #0x1
   11534:	cmp	w8, #0xfe
   11538:	b.hi	11568 <argp_failure@@Base+0x1420>  // b.pmore
   1153c:	bl	a900 <__ctype_b_loc@plt>
   11540:	ldr	x8, [x0]
   11544:	ldrh	w8, [x8, x28, lsl #1]
   11548:	tbz	w8, #14, 11568 <argp_failure@@Base+0x1420>
   1154c:	ldrb	w8, [x20]
   11550:	cmp	w28, w8
   11554:	b.ne	11568 <argp_failure@@Base+0x1420>  // b.any
   11558:	tst	w22, #0x2
   1155c:	csel	w22, w28, wzr, eq  // eq = none
   11560:	add	x20, x20, #0x1
   11564:	b	1156c <argp_failure@@Base+0x1424>
   11568:	mov	w22, wzr
   1156c:	subs	w27, w27, #0x1
   11570:	b.cc	11584 <argp_failure@@Base+0x143c>  // b.lo, b.ul, b.last
   11574:	add	x26, x26, #0x30
   11578:	cbz	w22, 11524 <argp_failure@@Base+0x13dc>
   1157c:	b	11584 <argp_failure@@Base+0x143c>
   11580:	mov	w22, wzr
   11584:	ldr	x9, [x19]
   11588:	ldr	w26, [x25, #24]
   1158c:	ldr	w8, [x9, #24]
   11590:	cbnz	w23, 115a8 <argp_failure@@Base+0x1460>
   11594:	mov	x19, xzr
   11598:	b	115b8 <argp_failure@@Base+0x1470>
   1159c:	subs	w23, w23, #0x1
   115a0:	add	x9, x9, #0x30
   115a4:	b.eq	11594 <argp_failure@@Base+0x144c>  // b.none
   115a8:	ldr	x19, [x9]
   115ac:	cbz	x19, 1159c <argp_failure@@Base+0x1454>
   115b0:	ldrb	w10, [x9, #24]
   115b4:	tbnz	w10, #1, 1159c <argp_failure@@Base+0x1454>
   115b8:	cbnz	w24, 115d0 <argp_failure@@Base+0x1488>
   115bc:	mov	x20, xzr
   115c0:	b	115e0 <argp_failure@@Base+0x1498>
   115c4:	subs	w24, w24, #0x1
   115c8:	add	x25, x25, #0x30
   115cc:	b.eq	115bc <argp_failure@@Base+0x1474>  // b.none
   115d0:	ldr	x20, [x25]
   115d4:	cbz	x20, 115c4 <argp_failure@@Base+0x147c>
   115d8:	ldrb	w9, [x25, #24]
   115dc:	tbnz	w9, #1, 115c4 <argp_failure@@Base+0x147c>
   115e0:	mov	w23, wzr
   115e4:	tbz	w8, #3, 1162c <argp_failure@@Base+0x14e4>
   115e8:	cbz	x19, 1162c <argp_failure@@Base+0x14e4>
   115ec:	bl	a900 <__ctype_b_loc@plt>
   115f0:	ldr	x8, [x0]
   115f4:	ldrb	w9, [x19]
   115f8:	ldrh	w10, [x8, x9, lsl #1]
   115fc:	tbz	w10, #13, 1160c <argp_failure@@Base+0x14c4>
   11600:	ldrb	w9, [x19, #1]!
   11604:	ldrh	w10, [x8, x9, lsl #1]
   11608:	tbnz	w10, #13, 11600 <argp_failure@@Base+0x14b8>
   1160c:	cmp	w9, #0x2d
   11610:	cset	w23, ne  // ne = any
   11614:	cbz	w9, 1162c <argp_failure@@Base+0x14e4>
   11618:	and	x9, x9, #0xff
   1161c:	ldrh	w9, [x8, x9, lsl #1]
   11620:	tbnz	w9, #3, 1162c <argp_failure@@Base+0x14e4>
   11624:	ldrb	w9, [x19, #1]!
   11628:	cbnz	w9, 11618 <argp_failure@@Base+0x14d0>
   1162c:	mov	w9, wzr
   11630:	tbz	w26, #3, 11678 <argp_failure@@Base+0x1530>
   11634:	cbz	x20, 11678 <argp_failure@@Base+0x1530>
   11638:	bl	a900 <__ctype_b_loc@plt>
   1163c:	ldr	x8, [x0]
   11640:	ldrb	w10, [x20]
   11644:	ldrh	w9, [x8, x10, lsl #1]
   11648:	tbz	w9, #13, 11658 <argp_failure@@Base+0x1510>
   1164c:	ldrb	w10, [x20, #1]!
   11650:	ldrh	w9, [x8, x10, lsl #1]
   11654:	tbnz	w9, #13, 1164c <argp_failure@@Base+0x1504>
   11658:	cmp	w10, #0x2d
   1165c:	cset	w9, ne  // ne = any
   11660:	cbz	w10, 11678 <argp_failure@@Base+0x1530>
   11664:	and	x10, x10, #0xff
   11668:	ldrh	w10, [x8, x10, lsl #1]
   1166c:	tbnz	w10, #3, 11678 <argp_failure@@Base+0x1530>
   11670:	ldrb	w10, [x20, #1]!
   11674:	cbnz	w10, 11664 <argp_failure@@Base+0x151c>
   11678:	subs	w0, w23, w9
   1167c:	b.ne	11708 <argp_failure@@Base+0x15c0>  // b.any
   11680:	orr	w8, w22, w21
   11684:	tst	w8, #0xff
   11688:	b.ne	116b8 <argp_failure@@Base+0x1570>  // b.any
   1168c:	cbz	x19, 116b8 <argp_failure@@Base+0x1570>
   11690:	cbz	x20, 116b8 <argp_failure@@Base+0x1570>
   11694:	mov	x0, x19
   11698:	mov	x1, x20
   1169c:	ldp	x20, x19, [sp, #80]
   116a0:	ldp	x22, x21, [sp, #64]
   116a4:	ldp	x24, x23, [sp, #48]
   116a8:	ldp	x26, x25, [sp, #32]
   116ac:	ldp	x28, x27, [sp, #16]
   116b0:	ldp	x29, x30, [sp], #96
   116b4:	b	a700 <strcasecmp@plt>
   116b8:	tst	w21, #0xff
   116bc:	b.ne	116c8 <argp_failure@@Base+0x1580>  // b.any
   116c0:	cbz	x19, 116c8 <argp_failure@@Base+0x1580>
   116c4:	ldrb	w21, [x19]
   116c8:	tst	w22, #0xff
   116cc:	b.ne	116e0 <argp_failure@@Base+0x1598>  // b.any
   116d0:	cbz	x20, 116dc <argp_failure@@Base+0x1594>
   116d4:	ldrb	w22, [x20]
   116d8:	b	116e0 <argp_failure@@Base+0x1598>
   116dc:	mov	w22, wzr
   116e0:	bl	a480 <__ctype_tolower_loc@plt>
   116e4:	ldr	x8, [x0]
   116e8:	and	x9, x21, #0xff
   116ec:	and	x10, x22, #0xff
   116f0:	ldr	w9, [x8, x9, lsl #2]
   116f4:	ldr	w8, [x8, x10, lsl #2]
   116f8:	and	w10, w22, #0xff
   116fc:	subs	w8, w9, w8
   11700:	sub	w9, w10, w21, uxtb
   11704:	csel	w0, w9, w8, eq  // eq = none
   11708:	ldp	x20, x19, [sp, #80]
   1170c:	ldp	x22, x21, [sp, #64]
   11710:	ldp	x24, x23, [sp, #48]
   11714:	ldp	x26, x25, [sp, #32]
   11718:	ldp	x28, x27, [sp, #16]
   1171c:	ldp	x29, x30, [sp], #96
   11720:	ret
   11724:	stp	x29, x30, [sp, #-64]!
   11728:	stp	x22, x21, [sp, #32]
   1172c:	stp	x20, x19, [sp, #48]
   11730:	ldr	w8, [x1, #24]
   11734:	mov	x20, x1
   11738:	mov	w19, w0
   1173c:	str	x23, [sp, #16]
   11740:	mov	x29, sp
   11744:	cbz	w8, 11828 <argp_failure@@Base+0x16e0>
   11748:	ldr	x9, [x20, #16]
   1174c:	ldr	x8, [x20]
   11750:	ldr	x23, [x9]
   11754:	ldr	x22, [x8, #32]
   11758:	cbz	x23, 117a8 <argp_failure@@Base+0x1660>
   1175c:	ldr	w9, [x9, #8]
   11760:	cbz	w9, 117a8 <argp_failure@@Base+0x1660>
   11764:	ldr	w8, [x8, #24]
   11768:	ldr	w9, [x23, #24]
   1176c:	cmp	w8, w9
   11770:	b.eq	117a8 <argp_failure@@Base+0x1660>  // b.none
   11774:	ldr	x21, [x20, #8]
   11778:	ldp	x8, x9, [x21, #56]
   1177c:	cmp	x8, x9
   11780:	b.cc	11798 <argp_failure@@Base+0x1650>  // b.lo, b.ul, b.last
   11784:	mov	w1, #0x1                   	// #1
   11788:	mov	x0, x21
   1178c:	bl	ac60 <_argp_fmtstream_ensure@plt>
   11790:	cbz	w0, 117a8 <argp_failure@@Base+0x1660>
   11794:	ldr	x8, [x21, #56]
   11798:	add	x9, x8, #0x1
   1179c:	mov	w10, #0xa                   	// #10
   117a0:	str	x9, [x21, #56]
   117a4:	strb	w10, [x8]
   117a8:	cbz	x22, 11820 <argp_failure@@Base+0x16d8>
   117ac:	ldr	x0, [x22]
   117b0:	cbz	x0, 11820 <argp_failure@@Base+0x16d8>
   117b4:	ldrb	w8, [x0]
   117b8:	cbz	w8, 11820 <argp_failure@@Base+0x16d8>
   117bc:	cbz	x23, 117e8 <argp_failure@@Base+0x16a0>
   117c0:	ldr	x8, [x23, #32]
   117c4:	cmp	x8, x22
   117c8:	b.eq	11820 <argp_failure@@Base+0x16d8>  // b.none
   117cc:	cbz	x8, 117e0 <argp_failure@@Base+0x1698>
   117d0:	ldr	x8, [x8, #16]
   117d4:	cmp	x8, x22
   117d8:	b.eq	117e0 <argp_failure@@Base+0x1698>  // b.none
   117dc:	cbnz	x8, 117d0 <argp_failure@@Base+0x1688>
   117e0:	cmp	x8, x22
   117e4:	b.eq	11820 <argp_failure@@Base+0x16d8>  // b.none
   117e8:	ldr	x8, [x20, #8]
   117ec:	ldr	x1, [x22, #24]
   117f0:	mov	x2, x20
   117f4:	ldrsw	x23, [x8, #24]
   117f8:	bl	118f8 <argp_failure@@Base+0x17b0>
   117fc:	ldr	x21, [x20, #8]
   11800:	ldp	x9, x8, [x21, #48]
   11804:	ldr	x10, [x21, #32]
   11808:	sub	x8, x8, x9
   1180c:	cmp	x8, x10
   11810:	b.ls	1181c <argp_failure@@Base+0x16d4>  // b.plast
   11814:	mov	x0, x21
   11818:	bl	a470 <_argp_fmtstream_update@plt>
   1181c:	str	x23, [x21, #24]
   11820:	str	wzr, [x20, #24]
   11824:	b	11864 <argp_failure@@Base+0x171c>
   11828:	ldr	x21, [x20, #8]
   1182c:	ldp	x8, x9, [x21, #56]
   11830:	add	x10, x8, #0x2
   11834:	cmp	x10, x9
   11838:	b.ls	11850 <argp_failure@@Base+0x1708>  // b.plast
   1183c:	mov	w1, #0x2                   	// #2
   11840:	mov	x0, x21
   11844:	bl	ac60 <_argp_fmtstream_ensure@plt>
   11848:	cbz	w0, 11864 <argp_failure@@Base+0x171c>
   1184c:	ldr	x8, [x21, #56]
   11850:	mov	w9, #0x202c                	// #8236
   11854:	strh	w9, [x8]
   11858:	ldr	x8, [x21, #56]
   1185c:	add	x8, x8, #0x2
   11860:	str	x8, [x21, #56]
   11864:	ldr	x20, [x20, #8]
   11868:	ldp	x9, x8, [x20, #48]
   1186c:	ldr	x10, [x20, #32]
   11870:	sub	x8, x8, x9
   11874:	cmp	x8, x10
   11878:	b.ls	11884 <argp_failure@@Base+0x173c>  // b.plast
   1187c:	mov	x0, x20
   11880:	bl	a470 <_argp_fmtstream_update@plt>
   11884:	ldr	x8, [x20, #40]
   11888:	cmp	x8, #0x0
   1188c:	csel	w8, w8, wzr, gt
   11890:	sub	w8, w19, w8
   11894:	cmp	w8, #0x1
   11898:	b.lt	118e4 <argp_failure@@Base+0x179c>  // b.tstop
   1189c:	add	w19, w8, #0x1
   118a0:	mov	w21, #0x20                  	// #32
   118a4:	b	118c0 <argp_failure@@Base+0x1778>
   118a8:	add	x9, x8, #0x1
   118ac:	str	x9, [x20, #56]
   118b0:	strb	w21, [x8]
   118b4:	sub	w19, w19, #0x1
   118b8:	cmp	w19, #0x1
   118bc:	b.le	118e4 <argp_failure@@Base+0x179c>
   118c0:	ldp	x8, x9, [x20, #56]
   118c4:	cmp	x8, x9
   118c8:	b.cc	118a8 <argp_failure@@Base+0x1760>  // b.lo, b.ul, b.last
   118cc:	mov	w1, #0x1                   	// #1
   118d0:	mov	x0, x20
   118d4:	bl	ac60 <_argp_fmtstream_ensure@plt>
   118d8:	cbz	w0, 118b4 <argp_failure@@Base+0x176c>
   118dc:	ldr	x8, [x20, #56]
   118e0:	b	118a8 <argp_failure@@Base+0x1760>
   118e4:	ldp	x20, x19, [sp, #48]
   118e8:	ldp	x22, x21, [sp, #32]
   118ec:	ldr	x23, [sp, #16]
   118f0:	ldp	x29, x30, [sp], #64
   118f4:	ret
   118f8:	stp	x29, x30, [sp, #-80]!
   118fc:	stp	x22, x21, [sp, #48]
   11900:	stp	x20, x19, [sp, #64]
   11904:	mov	x19, x2
   11908:	mov	x22, x1
   1190c:	str	x25, [sp, #16]
   11910:	stp	x24, x23, [sp, #32]
   11914:	mov	x29, sp
   11918:	cbz	x0, 11934 <argp_failure@@Base+0x17ec>
   1191c:	mov	x1, x0
   11920:	ldr	x0, [x22, #48]
   11924:	mov	w2, #0x5                   	// #5
   11928:	bl	ac80 <dcgettext@plt>
   1192c:	mov	x20, x0
   11930:	b	1193c <argp_failure@@Base+0x17f4>
   11934:	cbz	x22, 11b84 <argp_failure@@Base+0x1a3c>
   11938:	mov	x20, xzr
   1193c:	ldr	x8, [x22, #40]
   11940:	mov	x21, x20
   11944:	cbz	x8, 11970 <argp_failure@@Base+0x1828>
   11948:	ldr	x1, [x19, #32]
   1194c:	mov	x0, x22
   11950:	bl	ab40 <_argp_input@plt>
   11954:	ldr	x8, [x22, #40]
   11958:	mov	x2, x0
   1195c:	mov	w0, #0x3                   	// #3
   11960:	movk	w0, #0x200, lsl #16
   11964:	mov	x1, x20
   11968:	blr	x8
   1196c:	mov	x21, x0
   11970:	cbz	x21, 11b60 <argp_failure@@Base+0x1a18>
   11974:	ldrb	w8, [x21]
   11978:	cbz	w8, 11b54 <argp_failure@@Base+0x1a0c>
   1197c:	ldr	x8, [x19, #16]
   11980:	ldr	x8, [x8]
   11984:	cbz	x8, 119bc <argp_failure@@Base+0x1874>
   11988:	ldr	x22, [x19, #8]
   1198c:	ldp	x8, x9, [x22, #56]
   11990:	cmp	x8, x9
   11994:	b.cc	119ac <argp_failure@@Base+0x1864>  // b.lo, b.ul, b.last
   11998:	mov	w1, #0x1                   	// #1
   1199c:	mov	x0, x22
   119a0:	bl	ac60 <_argp_fmtstream_ensure@plt>
   119a4:	cbz	w0, 119bc <argp_failure@@Base+0x1874>
   119a8:	ldr	x8, [x22, #56]
   119ac:	add	x9, x8, #0x1
   119b0:	mov	w10, #0xa                   	// #10
   119b4:	str	x9, [x22, #56]
   119b8:	strb	w10, [x8]
   119bc:	ldr	x22, [x19, #8]
   119c0:	adrp	x24, 43000 <base_len@@Base+0x2ea54>
   119c4:	ldr	w23, [x24, #1688]
   119c8:	ldp	x9, x8, [x22, #48]
   119cc:	ldr	x10, [x22, #32]
   119d0:	sub	x8, x8, x9
   119d4:	cmp	x8, x10
   119d8:	b.ls	119e4 <argp_failure@@Base+0x189c>  // b.plast
   119dc:	mov	x0, x22
   119e0:	bl	a470 <_argp_fmtstream_update@plt>
   119e4:	ldr	x8, [x22, #40]
   119e8:	cmp	x8, #0x0
   119ec:	csel	w8, w8, wzr, gt
   119f0:	sub	w8, w23, w8
   119f4:	cmp	w8, #0x1
   119f8:	b.lt	11a44 <argp_failure@@Base+0x18fc>  // b.tstop
   119fc:	add	w23, w8, #0x1
   11a00:	mov	w25, #0x20                  	// #32
   11a04:	b	11a20 <argp_failure@@Base+0x18d8>
   11a08:	add	x9, x8, #0x1
   11a0c:	str	x9, [x22, #56]
   11a10:	strb	w25, [x8]
   11a14:	sub	w23, w23, #0x1
   11a18:	cmp	w23, #0x1
   11a1c:	b.le	11a44 <argp_failure@@Base+0x18fc>
   11a20:	ldp	x8, x9, [x22, #56]
   11a24:	cmp	x8, x9
   11a28:	b.cc	11a08 <argp_failure@@Base+0x18c0>  // b.lo, b.ul, b.last
   11a2c:	mov	w1, #0x1                   	// #1
   11a30:	mov	x0, x22
   11a34:	bl	ac60 <_argp_fmtstream_ensure@plt>
   11a38:	cbz	w0, 11a14 <argp_failure@@Base+0x18cc>
   11a3c:	ldr	x8, [x22, #56]
   11a40:	b	11a08 <argp_failure@@Base+0x18c0>
   11a44:	ldr	x22, [x19, #8]
   11a48:	ldrsw	x25, [x24, #1688]
   11a4c:	ldp	x10, x9, [x22, #48]
   11a50:	ldr	x8, [x22, #32]
   11a54:	sub	x9, x9, x10
   11a58:	cmp	x9, x8
   11a5c:	b.ls	11a80 <argp_failure@@Base+0x1938>  // b.plast
   11a60:	mov	x0, x22
   11a64:	bl	a470 <_argp_fmtstream_update@plt>
   11a68:	ldr	x23, [x19, #8]
   11a6c:	ldrsw	x24, [x24, #1688]
   11a70:	ldp	x10, x9, [x23, #48]
   11a74:	ldr	x8, [x23, #32]
   11a78:	sub	x9, x9, x10
   11a7c:	b	11a88 <argp_failure@@Base+0x1940>
   11a80:	mov	x24, x25
   11a84:	mov	x23, x22
   11a88:	cmp	x9, x8
   11a8c:	str	x25, [x22, #8]
   11a90:	mov	x22, x23
   11a94:	b.ls	11aa4 <argp_failure@@Base+0x195c>  // b.plast
   11a98:	mov	x0, x23
   11a9c:	bl	a470 <_argp_fmtstream_update@plt>
   11aa0:	ldr	x22, [x19, #8]
   11aa4:	mov	x0, x21
   11aa8:	str	x24, [x23, #24]
   11aac:	bl	a280 <strlen@plt>
   11ab0:	cbz	x0, 11af4 <argp_failure@@Base+0x19ac>
   11ab4:	mov	x23, x0
   11ab8:	ldp	x0, x8, [x22, #56]
   11abc:	add	x9, x0, x23
   11ac0:	cmp	x9, x8
   11ac4:	b.ls	11adc <argp_failure@@Base+0x1994>  // b.plast
   11ac8:	mov	x0, x22
   11acc:	mov	x1, x23
   11ad0:	bl	ac60 <_argp_fmtstream_ensure@plt>
   11ad4:	cbz	w0, 11af4 <argp_failure@@Base+0x19ac>
   11ad8:	ldr	x0, [x22, #56]
   11adc:	mov	x1, x21
   11ae0:	mov	x2, x23
   11ae4:	bl	a210 <memcpy@plt>
   11ae8:	ldr	x8, [x22, #56]
   11aec:	add	x8, x8, x23
   11af0:	str	x8, [x22, #56]
   11af4:	ldr	x23, [x19, #8]
   11af8:	ldp	x9, x8, [x23, #48]
   11afc:	ldr	x10, [x23, #32]
   11b00:	mov	x22, x23
   11b04:	sub	x9, x8, x9
   11b08:	cmp	x9, x10
   11b0c:	b.ls	11b20 <argp_failure@@Base+0x19d8>  // b.plast
   11b10:	mov	x0, x23
   11b14:	bl	a470 <_argp_fmtstream_update@plt>
   11b18:	ldr	x22, [x19, #8]
   11b1c:	ldr	x8, [x22, #56]
   11b20:	str	xzr, [x23, #8]
   11b24:	ldr	x9, [x22, #64]
   11b28:	cmp	x8, x9
   11b2c:	b.cc	11b44 <argp_failure@@Base+0x19fc>  // b.lo, b.ul, b.last
   11b30:	mov	w1, #0x1                   	// #1
   11b34:	mov	x0, x22
   11b38:	bl	ac60 <_argp_fmtstream_ensure@plt>
   11b3c:	cbz	w0, 11b54 <argp_failure@@Base+0x1a0c>
   11b40:	ldr	x8, [x22, #56]
   11b44:	add	x9, x8, #0x1
   11b48:	mov	w10, #0xa                   	// #10
   11b4c:	str	x9, [x22, #56]
   11b50:	strb	w10, [x8]
   11b54:	ldr	x8, [x19, #16]
   11b58:	mov	w9, #0x1                   	// #1
   11b5c:	str	w9, [x8, #8]
   11b60:	cmp	x21, x20
   11b64:	b.eq	11b84 <argp_failure@@Base+0x1a3c>  // b.none
   11b68:	mov	x0, x21
   11b6c:	ldp	x20, x19, [sp, #64]
   11b70:	ldp	x22, x21, [sp, #48]
   11b74:	ldp	x24, x23, [sp, #32]
   11b78:	ldr	x25, [sp, #16]
   11b7c:	ldp	x29, x30, [sp], #80
   11b80:	b	a960 <free@plt>
   11b84:	ldp	x20, x19, [sp, #64]
   11b88:	ldp	x22, x21, [sp, #48]
   11b8c:	ldp	x24, x23, [sp, #32]
   11b90:	ldr	x25, [sp, #16]
   11b94:	ldp	x29, x30, [sp], #80
   11b98:	ret

0000000000011b9c <argp_parse@@Base>:
   11b9c:	stp	x29, x30, [sp, #-96]!
   11ba0:	stp	x28, x27, [sp, #16]
   11ba4:	stp	x26, x25, [sp, #32]
   11ba8:	stp	x24, x23, [sp, #48]
   11bac:	stp	x22, x21, [sp, #64]
   11bb0:	stp	x20, x19, [sp, #80]
   11bb4:	mov	x29, sp
   11bb8:	sub	sp, sp, #0x180
   11bbc:	mov	x19, sp
   11bc0:	mov	x28, x4
   11bc4:	mov	w24, w3
   11bc8:	mov	x21, x2
   11bcc:	mov	x25, x0
   11bd0:	str	x5, [x19, #16]
   11bd4:	str	w1, [x19, #28]
   11bd8:	tbnz	w3, #0, 11c04 <argp_parse@@Base+0x68>
   11bdc:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   11be0:	ldr	x8, [x8, #3768]
   11be4:	ldr	x9, [x8]
   11be8:	cbnz	x9, 11bf4 <argp_parse@@Base+0x58>
   11bec:	ldr	x9, [x21]
   11bf0:	str	x9, [x8]
   11bf4:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
   11bf8:	ldr	x20, [x20, #4008]
   11bfc:	ldr	x8, [x20]
   11c00:	cbz	x8, 11f04 <argp_parse@@Base+0x368>
   11c04:	add	x22, x19, #0x28
   11c08:	tbnz	w24, #4, 11ca0 <argp_parse@@Base+0x104>
   11c0c:	mov	x10, sp
   11c10:	sub	x8, x10, #0x80
   11c14:	mov	sp, x8
   11c18:	mov	x11, sp
   11c1c:	sub	x9, x11, #0x40
   11c20:	mov	sp, x9
   11c24:	movi	v0.2d, #0x0
   11c28:	stur	xzr, [x11, #-16]
   11c2c:	stp	q0, q0, [x11, #-48]
   11c30:	stur	q0, [x11, #-64]
   11c34:	stur	x8, [x11, #-32]
   11c38:	stp	q0, q0, [x10, #-32]
   11c3c:	stp	q0, q0, [x10, #-64]
   11c40:	stp	q0, q0, [x10, #-96]
   11c44:	stp	q0, q0, [x10, #-128]
   11c48:	cbz	x25, 11c50 <argp_parse@@Base+0xb4>
   11c4c:	str	x25, [x8], #32
   11c50:	adrp	x10, 42000 <vasnprintf@@Base+0x1424c>
   11c54:	ldr	x10, [x10, #3936]
   11c58:	adrp	x11, 42000 <vasnprintf@@Base+0x1424c>
   11c5c:	add	x11, x11, #0x780
   11c60:	str	x11, [x8]
   11c64:	ldr	x10, [x10]
   11c68:	cbnz	x10, 11c84 <argp_parse@@Base+0xe8>
   11c6c:	adrp	x10, 42000 <vasnprintf@@Base+0x1424c>
   11c70:	ldr	x10, [x10, #4056]
   11c74:	ldr	x10, [x10]
   11c78:	cbnz	x10, 11c84 <argp_parse@@Base+0xe8>
   11c7c:	mov	w10, #0x1                   	// #1
   11c80:	b	11c94 <argp_parse@@Base+0xf8>
   11c84:	adrp	x10, 42000 <vasnprintf@@Base+0x1424c>
   11c88:	add	x10, x10, #0x7b8
   11c8c:	str	x10, [x8, #32]
   11c90:	mov	w10, #0x2                   	// #2
   11c94:	lsl	x10, x10, #5
   11c98:	mov	x25, x9
   11c9c:	str	xzr, [x8, x10]
   11ca0:	mov	w8, #0x1                   	// #1
   11ca4:	movi	v0.2d, #0x0
   11ca8:	bic	w8, w8, w24, lsr #2
   11cac:	stur	q0, [x22, #248]
   11cb0:	stur	q0, [x22, #232]
   11cb4:	stur	q0, [x22, #216]
   11cb8:	stp	x8, xzr, [x29, #-80]
   11cbc:	stp	xzr, xzr, [x29, #-64]
   11cc0:	str	x21, [x19, #32]
   11cc4:	cbz	x25, 11cf8 <argp_parse@@Base+0x15c>
   11cc8:	sub	x1, x29, #0x50
   11ccc:	mov	x0, x25
   11cd0:	bl	128b0 <_argp_input@@Base+0x204>
   11cd4:	ldp	x9, x10, [x29, #-64]
   11cd8:	ldp	x8, x11, [x29, #-80]
   11cdc:	mov	w12, #0x48                  	// #72
   11ce0:	mul	x9, x9, x12
   11ce4:	lsl	x27, x10, #3
   11ce8:	lsl	x10, x11, #5
   11cec:	add	x21, x9, #0x48
   11cf0:	add	x9, x10, #0x20
   11cf4:	b	11d04 <argp_parse@@Base+0x168>
   11cf8:	mov	x27, xzr
   11cfc:	mov	w21, #0x48                  	// #72
   11d00:	mov	w9, #0x20                  	// #32
   11d04:	add	x23, x21, x27
   11d08:	add	x20, x23, x9
   11d0c:	add	x8, x8, x20
   11d10:	add	x0, x8, #0x1
   11d14:	bl	a540 <malloc@plt>
   11d18:	str	x0, [x19, #248]
   11d1c:	cbz	x0, 11d8c <argp_parse@@Base+0x1f0>
   11d20:	ldur	q1, [x22, #216]
   11d24:	ldur	q2, [x22, #232]
   11d28:	ldur	q3, [x22, #248]
   11d2c:	str	x28, [x19, #8]
   11d30:	add	x28, x0, x21
   11d34:	mov	x26, x0
   11d38:	add	x23, x0, x23
   11d3c:	add	x21, x0, x20
   11d40:	movi	v0.2s, #0x1
   11d44:	str	x0, [x19, #120]
   11d48:	mov	x0, x28
   11d4c:	mov	w1, wzr
   11d50:	mov	x2, x27
   11d54:	str	x28, [x19, #136]
   11d58:	stp	x21, x23, [x19, #48]
   11d5c:	str	d0, [x19, #64]
   11d60:	stur	q1, [x19, #72]
   11d64:	stur	q2, [x19, #88]
   11d68:	stur	q3, [x19, #104]
   11d6c:	bl	a630 <memset@plt>
   11d70:	add	x8, x19, #0x28
   11d74:	stp	x8, x21, [x29, #-48]
   11d78:	stp	x23, x28, [x29, #-32]
   11d7c:	tbnz	w24, #3, 11d94 <argp_parse@@Base+0x1f8>
   11d80:	tbz	w24, #2, 11da0 <argp_parse@@Base+0x204>
   11d84:	mov	w8, #0x2b                  	// #43
   11d88:	b	11d98 <argp_parse@@Base+0x1fc>
   11d8c:	mov	w24, #0xc                   	// #12
   11d90:	b	12604 <argp_parse@@Base+0xa68>
   11d94:	mov	w8, #0x2d                  	// #45
   11d98:	strb	w8, [x21], #1
   11d9c:	stur	x21, [x29, #-40]
   11da0:	strb	wzr, [x21]
   11da4:	str	xzr, [x23]
   11da8:	str	x25, [x19, #40]
   11dac:	cbz	x25, 11ddc <argp_parse@@Base+0x240>
   11db0:	sub	x4, x29, #0x30
   11db4:	mov	x0, x25
   11db8:	mov	x1, xzr
   11dbc:	mov	w2, wzr
   11dc0:	mov	x3, x26
   11dc4:	bl	1297c <_argp_input@@Base+0x2d0>
   11dc8:	ldr	x8, [x19, #40]
   11dcc:	ldr	x25, [x19, #120]
   11dd0:	mov	x26, x0
   11dd4:	str	x0, [x19, #128]
   11dd8:	b	11de8 <argp_parse@@Base+0x24c>
   11ddc:	mov	x8, xzr
   11de0:	mov	x25, x26
   11de4:	str	x26, [x19, #128]
   11de8:	adrp	x10, 42000 <vasnprintf@@Base+0x1424c>
   11dec:	adrp	x11, 42000 <vasnprintf@@Base+0x1424c>
   11df0:	ldr	w12, [x19, #28]
   11df4:	ldr	x10, [x10, #3816]
   11df8:	ldr	x11, [x11, #3872]
   11dfc:	ldr	x20, [x19, #32]
   11e00:	mov	w27, #0x6                   	// #6
   11e04:	ldr	x10, [x10]
   11e08:	ldr	x11, [x11]
   11e0c:	add	x9, x19, #0x28
   11e10:	movi	v0.2d, #0x0
   11e14:	movk	w27, #0x100, lsl #16
   11e18:	cmp	x25, x26
   11e1c:	stur	q0, [x19, #152]
   11e20:	str	x8, [x19, #152]
   11e24:	mov	w8, #0x1                   	// #1
   11e28:	add	x21, x9, #0x70
   11e2c:	stur	q0, [x19, #168]
   11e30:	str	w12, [x19, #160]
   11e34:	stur	q0, [x19, #184]
   11e38:	stur	q0, [x19, #200]
   11e3c:	str	x20, [x19, #168]
   11e40:	stp	wzr, w24, [x19, #176]
   11e44:	stp	xzr, x10, [x19, #216]
   11e48:	stp	x11, x9, [x19, #232]
   11e4c:	str	w8, [x19, #144]
   11e50:	b.cs	11f28 <argp_parse@@Base+0x38c>  // b.hs, b.nlast
   11e54:	ldr	x8, [x19, #16]
   11e58:	mov	w24, wzr
   11e5c:	sub	w23, w27, #0x3
   11e60:	str	x8, [x25, #48]
   11e64:	b	11eac <argp_parse@@Base+0x310>
   11e68:	ldr	x9, [x25, #64]
   11e6c:	mov	w0, w23
   11e70:	mov	x1, xzr
   11e74:	mov	x2, x21
   11e78:	str	x9, [x19, #208]
   11e7c:	ldr	q0, [x25, #48]
   11e80:	stur	q0, [x22, #152]
   11e84:	ldr	w9, [x25, #24]
   11e88:	str	w9, [x19, #184]
   11e8c:	blr	x8
   11e90:	ldr	x8, [x19, #208]
   11e94:	mov	w24, w0
   11e98:	str	x8, [x25, #64]
   11e9c:	ldr	x8, [x19, #128]
   11ea0:	add	x25, x25, #0x48
   11ea4:	cmp	x25, x8
   11ea8:	b.cs	11f1c <argp_parse@@Base+0x380>  // b.hs, b.nlast
   11eac:	cmp	w24, #0x7
   11eb0:	b.eq	11eb8 <argp_parse@@Base+0x31c>  // b.none
   11eb4:	cbnz	w24, 12604 <argp_parse@@Base+0xa68>
   11eb8:	ldr	x8, [x25, #32]
   11ebc:	cbz	x8, 11ed0 <argp_parse@@Base+0x334>
   11ec0:	ldr	x8, [x8, #56]
   11ec4:	ldr	w9, [x25, #40]
   11ec8:	ldr	x8, [x8, x9, lsl #3]
   11ecc:	str	x8, [x25, #48]
   11ed0:	ldr	x8, [x25]
   11ed4:	cbnz	x8, 11e68 <argp_parse@@Base+0x2cc>
   11ed8:	ldr	x8, [x25, #8]
   11edc:	ldr	x8, [x8, #32]
   11ee0:	cbz	x8, 11efc <argp_parse@@Base+0x360>
   11ee4:	ldr	x8, [x8]
   11ee8:	cbz	x8, 11efc <argp_parse@@Base+0x360>
   11eec:	ldp	x8, x9, [x25, #48]
   11ef0:	str	x8, [x9]
   11ef4:	ldr	x8, [x25]
   11ef8:	cbnz	x8, 11e68 <argp_parse@@Base+0x2cc>
   11efc:	mov	w24, #0x7                   	// #7
   11f00:	b	11e9c <argp_parse@@Base+0x300>
   11f04:	ldr	x0, [x21]
   11f08:	bl	a6c0 <last_component@plt>
   11f0c:	str	x0, [x20]
   11f10:	add	x22, x19, #0x28
   11f14:	tbz	w24, #4, 11c0c <argp_parse@@Base+0x70>
   11f18:	b	11ca0 <argp_parse@@Base+0x104>
   11f1c:	cmp	w24, #0x7
   11f20:	b.eq	11f28 <argp_parse@@Base+0x38c>  // b.none
   11f24:	cbnz	w24, 12604 <argp_parse@@Base+0xa68>
   11f28:	ldr	w8, [x19, #180]
   11f2c:	tbnz	w8, #1, 11f3c <argp_parse@@Base+0x3a0>
   11f30:	mov	w8, #0x1                   	// #1
   11f34:	str	w8, [x19, #68]
   11f38:	b	11f5c <argp_parse@@Base+0x3c0>
   11f3c:	str	wzr, [x19, #68]
   11f40:	tbz	w8, #0, 11f5c <argp_parse@@Base+0x3c0>
   11f44:	ldr	x8, [x19, #168]
   11f48:	ldr	w9, [x19, #160]
   11f4c:	sub	x8, x8, #0x8
   11f50:	add	w9, w9, #0x1
   11f54:	str	x8, [x19, #168]
   11f58:	str	w9, [x19, #160]
   11f5c:	ldr	x8, [x19, #168]
   11f60:	cmp	x8, x20
   11f64:	b.eq	11f7c <argp_parse@@Base+0x3e0>  // b.none
   11f68:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   11f6c:	ldr	x8, [x8, #4008]
   11f70:	ldr	x8, [x8]
   11f74:	str	x8, [x19, #216]
   11f78:	b	11f8c <argp_parse@@Base+0x3f0>
   11f7c:	ldr	x0, [x20]
   11f80:	cbz	x0, 11f68 <argp_parse@@Base+0x3cc>
   11f84:	bl	a6c0 <last_component@plt>
   11f88:	str	x0, [x19, #216]
   11f8c:	add	x8, x19, #0x28
   11f90:	mov	w26, #0xffffffff            	// #-1
   11f94:	add	x23, x8, #0x18
   11f98:	b	11fb4 <argp_parse@@Base+0x418>
   11f9c:	mov	w8, #0x6                   	// #6
   11fa0:	movk	w8, #0x100, lsl #16
   11fa4:	cbz	w24, 12170 <argp_parse@@Base+0x5d4>
   11fa8:	cmp	w24, #0x7
   11fac:	b.eq	122fc <argp_parse@@Base+0x760>  // b.none
   11fb0:	cbnz	w24, 123e4 <argp_parse@@Base+0x848>
   11fb4:	ldr	w8, [x19, #188]
   11fb8:	cbz	w8, 11fcc <argp_parse@@Base+0x430>
   11fbc:	ldr	w28, [x19, #176]
   11fc0:	cmp	w28, w8
   11fc4:	b.ge	12060 <argp_parse@@Base+0x4c4>  // b.tcont
   11fc8:	str	wzr, [x19, #188]
   11fcc:	ldr	w8, [x19, #144]
   11fd0:	ldr	w28, [x19, #176]
   11fd4:	cbz	w8, 12060 <argp_parse@@Base+0x4c4>
   11fd8:	ldr	w0, [x19, #160]
   11fdc:	ldr	x1, [x19, #168]
   11fe0:	ldrb	w8, [x19, #180]
   11fe4:	ldp	x2, x3, [x19, #48]
   11fe8:	mov	x4, xzr
   11fec:	mov	x5, x23
   11ff0:	str	w28, [x19, #64]
   11ff4:	str	w26, [x19, #72]
   11ff8:	tbnz	w8, #6, 12004 <argp_parse@@Base+0x468>
   11ffc:	bl	a8f0 <_getopt_long_r@plt>
   12000:	b	12008 <argp_parse@@Base+0x46c>
   12004:	bl	a850 <_getopt_long_only_r@plt>
   12008:	ldr	w28, [x19, #64]
   1200c:	mov	w25, w0
   12010:	cmn	w0, #0x1
   12014:	str	w28, [x19, #176]
   12018:	b.eq	12034 <argp_parse@@Base+0x498>  // b.none
   1201c:	cmp	w25, #0x3f
   12020:	b.eq	121b8 <argp_parse@@Base+0x61c>  // b.none
   12024:	cmp	w25, #0x1
   12028:	b.ne	121c8 <argp_parse@@Base+0x62c>  // b.any
   1202c:	ldr	x25, [x19, #80]
   12030:	b	1208c <argp_parse@@Base+0x4f0>
   12034:	cmp	w28, #0x2
   12038:	str	wzr, [x19, #144]
   1203c:	b.lt	12060 <argp_parse@@Base+0x4c4>  // b.tstop
   12040:	ldr	x8, [x19, #168]
   12044:	sub	w9, w28, #0x1
   12048:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   1204c:	add	x1, x1, #0x7d1
   12050:	ldr	x0, [x8, w9, sxtw #3]
   12054:	bl	a8e0 <strcmp@plt>
   12058:	cbnz	w0, 12060 <argp_parse@@Base+0x4c4>
   1205c:	str	w28, [x19, #188]
   12060:	ldr	w8, [x19, #160]
   12064:	cmp	w28, w8
   12068:	b.ge	12310 <argp_parse@@Base+0x774>  // b.tcont
   1206c:	ldrb	w8, [x19, #180]
   12070:	tbnz	w8, #2, 12310 <argp_parse@@Base+0x774>
   12074:	ldr	x8, [x19, #168]
   12078:	add	w9, w28, #0x1
   1207c:	str	w9, [x19, #176]
   12080:	ldr	x25, [x8, w28, sxtw #3]
   12084:	mov	w28, w9
   12088:	str	x25, [x19, #80]
   1208c:	ldp	x9, x10, [x19, #120]
   12090:	sub	w8, w28, #0x1
   12094:	str	w8, [x19, #176]
   12098:	cmp	x9, x10
   1209c:	b.cs	122fc <argp_parse@@Base+0x760>  // b.hs, b.nlast
   120a0:	add	x20, x9, #0x48
   120a4:	add	w9, w8, #0x1
   120a8:	str	w9, [x19, #176]
   120ac:	ldur	x9, [x20, #-72]
   120b0:	cbz	x9, 1213c <argp_parse@@Base+0x5a0>
   120b4:	ldur	x8, [x20, #-8]
   120b8:	mov	w0, wzr
   120bc:	mov	x1, x25
   120c0:	mov	x2, x21
   120c4:	str	x8, [x19, #208]
   120c8:	ldur	q0, [x20, #-24]
   120cc:	stur	q0, [x22, #152]
   120d0:	ldur	w8, [x20, #-48]
   120d4:	str	w8, [x19, #184]
   120d8:	blr	x9
   120dc:	ldr	x8, [x19, #208]
   120e0:	cmp	w0, #0x7
   120e4:	stur	x8, [x20, #-8]
   120e8:	b.ne	12164 <argp_parse@@Base+0x5c8>  // b.any
   120ec:	ldr	w9, [x19, #176]
   120f0:	ldur	x8, [x20, #-72]
   120f4:	sub	w9, w9, #0x1
   120f8:	str	w9, [x19, #176]
   120fc:	cbz	x8, 12140 <argp_parse@@Base+0x5a4>
   12100:	ldur	q0, [x20, #-24]
   12104:	mov	w0, #0x6                   	// #6
   12108:	movk	w0, #0x100, lsl #16
   1210c:	mov	x1, xzr
   12110:	stur	q0, [x22, #152]
   12114:	ldur	w9, [x20, #-48]
   12118:	mov	x2, x21
   1211c:	str	w9, [x19, #184]
   12120:	blr	x8
   12124:	ldr	x8, [x19, #208]
   12128:	mov	w24, w0
   1212c:	stur	x8, [x20, #-8]
   12130:	cmp	w24, #0x7
   12134:	b.eq	1214c <argp_parse@@Base+0x5b0>  // b.none
   12138:	b	11f9c <argp_parse@@Base+0x400>
   1213c:	str	w8, [x19, #176]
   12140:	mov	w24, #0x7                   	// #7
   12144:	cmp	w24, #0x7
   12148:	b.ne	11f9c <argp_parse@@Base+0x400>  // b.any
   1214c:	ldr	x8, [x19, #128]
   12150:	cmp	x20, x8
   12154:	b.cs	11f9c <argp_parse@@Base+0x400>  // b.hs, b.nlast
   12158:	ldr	w8, [x19, #176]
   1215c:	add	x20, x20, #0x48
   12160:	b	120a4 <argp_parse@@Base+0x508>
   12164:	mov	w24, w0
   12168:	mov	w8, wzr
   1216c:	cbnz	w24, 11fa8 <argp_parse@@Base+0x40c>
   12170:	cmp	w8, w27
   12174:	b.ne	12184 <argp_parse@@Base+0x5e8>  // b.any
   12178:	ldr	w8, [x19, #160]
   1217c:	str	w8, [x19, #176]
   12180:	b	12188 <argp_parse@@Base+0x5ec>
   12184:	ldr	w8, [x19, #176]
   12188:	mov	w24, wzr
   1218c:	subs	w8, w8, w28
   12190:	b.ge	121a0 <argp_parse@@Base+0x604>  // b.tcont
   12194:	mov	w8, #0x1                   	// #1
   12198:	str	w8, [x19, #144]
   1219c:	b	11fb0 <argp_parse@@Base+0x414>
   121a0:	ldur	w9, [x20, #-48]
   121a4:	add	w8, w8, w9
   121a8:	add	w8, w8, #0x1
   121ac:	stur	w8, [x20, #-48]
   121b0:	cbz	w24, 11fb4 <argp_parse@@Base+0x418>
   121b4:	b	123e4 <argp_parse@@Base+0x848>
   121b8:	ldr	w8, [x19, #72]
   121bc:	cmn	w8, #0x1
   121c0:	b.eq	1222c <argp_parse@@Base+0x690>  // b.none
   121c4:	b	12520 <argp_parse@@Base+0x984>
   121c8:	asr	w8, w25, #24
   121cc:	cbz	w8, 1222c <argp_parse@@Base+0x690>
   121d0:	ldr	x9, [x19, #120]
   121d4:	sxtw	x8, w8
   121d8:	sub	x10, x8, #0x1
   121dc:	mov	w8, #0x48                  	// #72
   121e0:	mul	x8, x10, x8
   121e4:	ldr	x8, [x9, x8]
   121e8:	cbz	x8, 12634 <argp_parse@@Base+0xa98>
   121ec:	mov	w11, #0x48                  	// #72
   121f0:	madd	x20, x10, x11, x9
   121f4:	ldr	x1, [x19, #80]
   121f8:	ldr	x9, [x20, #64]!
   121fc:	sbfx	w0, w25, #23, #1
   12200:	bfxil	w0, w25, #0, #24
   12204:	mov	x2, x21
   12208:	str	x9, [x19, #208]
   1220c:	ldur	q0, [x20, #-16]
   12210:	stur	q0, [x22, #152]
   12214:	ldur	w9, [x20, #-40]
   12218:	str	w9, [x19, #184]
   1221c:	blr	x8
   12220:	mov	w24, w0
   12224:	mov	w8, wzr
   12228:	b	122a8 <argp_parse@@Base+0x70c>
   1222c:	ldr	x0, [x19, #48]
   12230:	mov	w1, w25
   12234:	bl	aa50 <strchr@plt>
   12238:	cbz	x0, 122bc <argp_parse@@Base+0x720>
   1223c:	ldp	x8, x9, [x19, #120]
   12240:	cmp	x8, x9
   12244:	b.cs	122bc <argp_parse@@Base+0x720>  // b.hs, b.nlast
   12248:	add	x8, x8, #0x30
   1224c:	ldur	x10, [x8, #-32]
   12250:	cmp	x10, x0
   12254:	b.hi	1226c <argp_parse@@Base+0x6d0>  // b.pmore
   12258:	add	x10, x8, #0x18
   1225c:	add	x8, x8, #0x48
   12260:	cmp	x10, x9
   12264:	b.cc	1224c <argp_parse@@Base+0x6b0>  // b.lo, b.ul, b.last
   12268:	b	122bc <argp_parse@@Base+0x720>
   1226c:	ldur	x9, [x8, #-48]
   12270:	cbz	x9, 122bc <argp_parse@@Base+0x720>
   12274:	mov	x20, x8
   12278:	ldr	x1, [x19, #80]
   1227c:	ldr	x10, [x20, #16]!
   12280:	mov	w0, w25
   12284:	mov	x2, x21
   12288:	str	x10, [x19, #208]
   1228c:	ldr	q0, [x8]
   12290:	stur	q0, [x22, #152]
   12294:	ldur	w8, [x8, #-24]
   12298:	str	w8, [x19, #184]
   1229c:	blr	x9
   122a0:	mov	w24, w0
   122a4:	mov	w8, #0x1                   	// #1
   122a8:	ldr	x9, [x19, #208]
   122ac:	cmp	w24, #0x7
   122b0:	str	x9, [x20]
   122b4:	b.ne	11fb0 <argp_parse@@Base+0x414>  // b.any
   122b8:	cbz	w8, 12634 <argp_parse@@Base+0xa98>
   122bc:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   122c0:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   122c4:	add	x0, x0, #0x387
   122c8:	add	x1, x1, #0x801
   122cc:	mov	w2, #0x5                   	// #5
   122d0:	bl	ac80 <dcgettext@plt>
   122d4:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   122d8:	mov	x3, x0
   122dc:	add	x1, x1, #0x7d4
   122e0:	mov	x0, x21
   122e4:	mov	w2, w25
   122e8:	bl	aa70 <argp_error@plt>
   122ec:	mov	w8, wzr
   122f0:	cmn	w25, #0x1
   122f4:	b.ne	1230c <argp_parse@@Base+0x770>  // b.any
   122f8:	b	12310 <argp_parse@@Base+0x774>
   122fc:	mov	w25, #0x1                   	// #1
   12300:	mov	w8, #0x1                   	// #1
   12304:	cmn	w25, #0x1
   12308:	b.eq	12310 <argp_parse@@Base+0x774>  // b.none
   1230c:	tbz	w8, #0, 12520 <argp_parse@@Base+0x984>
   12310:	ldr	w8, [x19, #176]
   12314:	ldr	w9, [x19, #160]
   12318:	cmp	w8, w9
   1231c:	b.ne	123a4 <argp_parse@@Base+0x808>  // b.any
   12320:	ldp	x23, x8, [x19, #120]
   12324:	cmp	x23, x8
   12328:	b.cs	123b4 <argp_parse@@Base+0x818>  // b.hs, b.nlast
   1232c:	mov	w24, wzr
   12330:	sub	w20, w27, #0x4
   12334:	b	1234c <argp_parse@@Base+0x7b0>
   12338:	ldr	w9, [x23, #24]
   1233c:	cbz	w9, 1235c <argp_parse@@Base+0x7c0>
   12340:	add	x23, x23, #0x48
   12344:	cmp	x23, x8
   12348:	b.cs	123bc <argp_parse@@Base+0x820>  // b.hs, b.nlast
   1234c:	cmp	w24, #0x7
   12350:	b.eq	12338 <argp_parse@@Base+0x79c>  // b.none
   12354:	cbz	w24, 12338 <argp_parse@@Base+0x79c>
   12358:	b	123bc <argp_parse@@Base+0x820>
   1235c:	ldr	x9, [x23]
   12360:	cbz	x9, 1239c <argp_parse@@Base+0x800>
   12364:	ldr	x8, [x23, #64]
   12368:	mov	w0, w20
   1236c:	mov	x1, xzr
   12370:	mov	x2, x21
   12374:	str	x8, [x19, #208]
   12378:	ldr	q0, [x23, #48]
   1237c:	stur	q0, [x22, #152]
   12380:	str	wzr, [x19, #184]
   12384:	blr	x9
   12388:	ldr	x8, [x19, #208]
   1238c:	mov	w24, w0
   12390:	str	x8, [x23, #64]
   12394:	ldr	x8, [x19, #128]
   12398:	b	12340 <argp_parse@@Base+0x7a4>
   1239c:	mov	w24, #0x7                   	// #7
   123a0:	b	12340 <argp_parse@@Base+0x7a4>
   123a4:	ldr	x9, [x19, #8]
   123a8:	cbz	x9, 124e8 <argp_parse@@Base+0x94c>
   123ac:	str	w8, [x9]
   123b0:	b	123f4 <argp_parse@@Base+0x858>
   123b4:	mov	w24, wzr
   123b8:	b	123c0 <argp_parse@@Base+0x824>
   123bc:	ldr	x23, [x19, #120]
   123c0:	ldr	x26, [x19, #8]
   123c4:	sub	x25, x8, #0x48
   123c8:	cmp	x25, x23
   123cc:	b.cs	1247c <argp_parse@@Base+0x8e0>  // b.hs, b.nlast
   123d0:	cmp	w24, #0x7
   123d4:	csel	w24, wzr, w24, eq  // eq = none
   123d8:	cbz	x26, 123e4 <argp_parse@@Base+0x848>
   123dc:	ldr	w8, [x19, #176]
   123e0:	str	w8, [x26]
   123e4:	cbz	w24, 123f4 <argp_parse@@Base+0x858>
   123e8:	cmp	w24, #0x7
   123ec:	b.eq	12520 <argp_parse@@Base+0x984>  // b.none
   123f0:	b	12534 <argp_parse@@Base+0x998>
   123f4:	ldp	x23, x8, [x19, #120]
   123f8:	sub	x25, x8, #0x48
   123fc:	cmp	x25, x23
   12400:	b.cs	1240c <argp_parse@@Base+0x870>  // b.hs, b.nlast
   12404:	mov	w24, wzr
   12408:	b	12598 <argp_parse@@Base+0x9fc>
   1240c:	mov	w24, wzr
   12410:	sub	w20, w27, #0x2
   12414:	b	12464 <argp_parse@@Base+0x8c8>
   12418:	ldr	x8, [x25]
   1241c:	cbz	x8, 12474 <argp_parse@@Base+0x8d8>
   12420:	ldr	x9, [x25, #64]
   12424:	mov	w0, w20
   12428:	mov	x1, xzr
   1242c:	mov	x2, x21
   12430:	str	x9, [x19, #208]
   12434:	ldr	q0, [x25, #48]
   12438:	stur	q0, [x22, #152]
   1243c:	ldr	w9, [x25, #24]
   12440:	str	w9, [x19, #184]
   12444:	blr	x8
   12448:	ldr	x8, [x19, #208]
   1244c:	mov	w24, w0
   12450:	str	x8, [x25, #64]
   12454:	ldr	x23, [x19, #120]
   12458:	sub	x25, x25, #0x48
   1245c:	cmp	x25, x23
   12460:	b.cc	12628 <argp_parse@@Base+0xa8c>  // b.lo, b.ul, b.last
   12464:	cmp	w24, #0x7
   12468:	b.eq	12418 <argp_parse@@Base+0x87c>  // b.none
   1246c:	cbz	w24, 12418 <argp_parse@@Base+0x87c>
   12470:	b	12598 <argp_parse@@Base+0x9fc>
   12474:	mov	w24, #0x7                   	// #7
   12478:	b	12458 <argp_parse@@Base+0x8bc>
   1247c:	sub	w20, w27, #0x5
   12480:	b	124d0 <argp_parse@@Base+0x934>
   12484:	ldr	x8, [x25]
   12488:	cbz	x8, 124e0 <argp_parse@@Base+0x944>
   1248c:	ldr	x9, [x25, #64]
   12490:	mov	w0, w20
   12494:	mov	x1, xzr
   12498:	mov	x2, x21
   1249c:	str	x9, [x19, #208]
   124a0:	ldr	q0, [x25, #48]
   124a4:	stur	q0, [x22, #152]
   124a8:	ldr	w9, [x25, #24]
   124ac:	str	w9, [x19, #184]
   124b0:	blr	x8
   124b4:	ldr	x8, [x19, #208]
   124b8:	mov	w24, w0
   124bc:	str	x8, [x25, #64]
   124c0:	ldr	x23, [x19, #120]
   124c4:	sub	x25, x25, #0x48
   124c8:	cmp	x25, x23
   124cc:	b.cc	123d0 <argp_parse@@Base+0x834>  // b.lo, b.ul, b.last
   124d0:	cmp	w24, #0x7
   124d4:	b.eq	12484 <argp_parse@@Base+0x8e8>  // b.none
   124d8:	cbz	w24, 12484 <argp_parse@@Base+0x8e8>
   124dc:	b	123d8 <argp_parse@@Base+0x83c>
   124e0:	mov	w24, #0x7                   	// #7
   124e4:	b	124c4 <argp_parse@@Base+0x928>
   124e8:	ldrb	w8, [x19, #180]
   124ec:	tbnz	w8, #1, 12520 <argp_parse@@Base+0x984>
   124f0:	ldr	x20, [x19, #224]
   124f4:	cbz	x20, 12520 <argp_parse@@Base+0x984>
   124f8:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   124fc:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   12500:	add	x0, x0, #0x387
   12504:	add	x1, x1, #0x7e9
   12508:	mov	w2, #0x5                   	// #5
   1250c:	bl	ac80 <dcgettext@plt>
   12510:	ldr	x2, [x19, #216]
   12514:	mov	x1, x0
   12518:	mov	x0, x20
   1251c:	bl	ae70 <fprintf@plt>
   12520:	ldr	x1, [x19, #224]
   12524:	mov	w2, #0x104                 	// #260
   12528:	mov	x0, x21
   1252c:	bl	ac70 <argp_state_help@plt>
   12530:	mov	w24, #0x7                   	// #7
   12534:	ldp	x23, x8, [x19, #120]
   12538:	cmp	x23, x8
   1253c:	b.cs	12598 <argp_parse@@Base+0x9fc>  // b.hs, b.nlast
   12540:	sub	w20, w27, #0x1
   12544:	b	12554 <argp_parse@@Base+0x9b8>
   12548:	add	x23, x23, #0x48
   1254c:	cmp	x23, x8
   12550:	b.cs	12594 <argp_parse@@Base+0x9f8>  // b.hs, b.nlast
   12554:	ldr	x9, [x23]
   12558:	cbz	x9, 12548 <argp_parse@@Base+0x9ac>
   1255c:	ldr	x8, [x23, #64]
   12560:	mov	w0, w20
   12564:	mov	x1, xzr
   12568:	mov	x2, x21
   1256c:	str	x8, [x19, #208]
   12570:	ldr	q0, [x23, #48]
   12574:	stur	q0, [x22, #152]
   12578:	ldr	w8, [x23, #24]
   1257c:	str	w8, [x19, #184]
   12580:	blr	x9
   12584:	ldr	x8, [x19, #208]
   12588:	str	x8, [x23, #64]
   1258c:	ldr	x8, [x19, #128]
   12590:	b	12548 <argp_parse@@Base+0x9ac>
   12594:	ldr	x23, [x19, #120]
   12598:	ldr	x8, [x19, #128]
   1259c:	sub	x20, x8, #0x48
   125a0:	b	125a8 <argp_parse@@Base+0xa0c>
   125a4:	sub	x20, x20, #0x48
   125a8:	cmp	x20, x23
   125ac:	b.cc	125f0 <argp_parse@@Base+0xa54>  // b.lo, b.ul, b.last
   125b0:	ldr	x8, [x20]
   125b4:	cbz	x8, 125a4 <argp_parse@@Base+0xa08>
   125b8:	ldr	x9, [x20, #64]
   125bc:	add	w0, w27, #0x1
   125c0:	mov	x1, xzr
   125c4:	mov	x2, x21
   125c8:	str	x9, [x19, #208]
   125cc:	ldr	q0, [x20, #48]
   125d0:	stur	q0, [x22, #152]
   125d4:	ldr	w9, [x20, #24]
   125d8:	str	w9, [x19, #184]
   125dc:	blr	x8
   125e0:	ldr	x8, [x19, #208]
   125e4:	str	x8, [x20, #64]
   125e8:	ldr	x23, [x19, #120]
   125ec:	b	125a4 <argp_parse@@Base+0xa08>
   125f0:	ldr	x0, [x19, #248]
   125f4:	cmp	w24, #0x7
   125f8:	mov	w8, #0x16                  	// #22
   125fc:	csel	w24, w8, w24, eq  // eq = none
   12600:	bl	a960 <free@plt>
   12604:	mov	w0, w24
   12608:	mov	sp, x29
   1260c:	ldp	x20, x19, [sp, #80]
   12610:	ldp	x22, x21, [sp, #64]
   12614:	ldp	x24, x23, [sp, #48]
   12618:	ldp	x26, x25, [sp, #32]
   1261c:	ldp	x28, x27, [sp, #16]
   12620:	ldp	x29, x30, [sp], #96
   12624:	ret
   12628:	cmp	w24, #0x7
   1262c:	csel	w24, wzr, w24, eq  // eq = none
   12630:	b	12598 <argp_parse@@Base+0x9fc>
   12634:	ldr	x8, [x19, #56]
   12638:	ldr	w9, [x8, #24]
   1263c:	cmp	w9, w25
   12640:	b.eq	12664 <argp_parse@@Base+0xac8>  // b.none
   12644:	ldr	x9, [x8]
   12648:	cbz	x9, 12664 <argp_parse@@Base+0xac8>
   1264c:	ldr	w10, [x8, #56]
   12650:	add	x9, x8, #0x20
   12654:	mov	x8, x9
   12658:	cmp	w10, w25
   1265c:	b.ne	12644 <argp_parse@@Base+0xaa8>  // b.any
   12660:	mov	x8, x9
   12664:	ldr	x8, [x8]
   12668:	adrp	x9, 2f000 <vasnprintf@@Base+0x124c>
   1266c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   12670:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   12674:	add	x9, x9, #0x7e5
   12678:	cmp	x8, #0x0
   1267c:	add	x0, x0, #0x387
   12680:	add	x1, x1, #0x801
   12684:	mov	w2, #0x5                   	// #5
   12688:	csel	x20, x9, x8, eq  // eq = none
   1268c:	bl	ac80 <dcgettext@plt>
   12690:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   12694:	mov	x3, x0
   12698:	add	x1, x1, #0x7dc
   1269c:	mov	x0, x21
   126a0:	mov	x2, x20
   126a4:	bl	aa70 <argp_error@plt>
   126a8:	b	122ec <argp_parse@@Base+0x750>

00000000000126ac <_argp_input@@Base>:
   126ac:	cbz	x1, 126d8 <_argp_input@@Base+0x2c>
   126b0:	ldr	x9, [x1, #88]
   126b4:	ldp	x8, x9, [x9, #80]
   126b8:	cmp	x8, x9
   126bc:	b.cs	126d8 <_argp_input@@Base+0x2c>  // b.hs, b.nlast
   126c0:	ldr	x10, [x8, #8]
   126c4:	cmp	x10, x0
   126c8:	b.eq	126e0 <_argp_input@@Base+0x34>  // b.none
   126cc:	add	x8, x8, #0x48
   126d0:	cmp	x8, x9
   126d4:	b.cc	126c0 <_argp_input@@Base+0x14>  // b.lo, b.ul, b.last
   126d8:	mov	x0, xzr
   126dc:	ret
   126e0:	ldr	x0, [x8, #48]
   126e4:	ret
   126e8:	stp	x29, x30, [sp, #-32]!
   126ec:	stp	x20, x19, [sp, #16]
   126f0:	mov	x19, x2
   126f4:	mov	x20, x1
   126f8:	mov	w8, w0
   126fc:	cmn	w0, #0x3
   12700:	mov	w0, #0x7                   	// #7
   12704:	mov	x29, sp
   12708:	b.gt	12728 <_argp_input@@Base+0x7c>
   1270c:	cmn	w8, #0x4
   12710:	b.eq	1274c <_argp_input@@Base+0xa0>  // b.none
   12714:	cmn	w8, #0x3
   12718:	b.ne	127e8 <_argp_input@@Base+0x13c>  // b.any
   1271c:	ldr	x1, [x19, #80]
   12720:	mov	w2, #0x201                 	// #513
   12724:	b	12740 <_argp_input@@Base+0x94>
   12728:	cmn	w8, #0x2
   1272c:	b.eq	127a0 <_argp_input@@Base+0xf4>  // b.none
   12730:	cmp	w8, #0x3f
   12734:	b.ne	127e8 <_argp_input@@Base+0x13c>  // b.any
   12738:	ldr	x1, [x19, #80]
   1273c:	mov	w2, #0x27a                 	// #634
   12740:	mov	x0, x19
   12744:	bl	ac70 <argp_state_help@plt>
   12748:	b	127e4 <_argp_input@@Base+0x138>
   1274c:	adrp	x8, 2f000 <vasnprintf@@Base+0x124c>
   12750:	add	x8, x8, #0x793
   12754:	cmp	x20, #0x0
   12758:	csel	x0, x8, x20, eq  // eq = none
   1275c:	mov	w2, #0xa                   	// #10
   12760:	mov	x1, xzr
   12764:	bl	a930 <strtol@plt>
   12768:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
   1276c:	str	w0, [x19, #2280]
   12770:	ldr	w8, [x19, #2280]
   12774:	subs	w8, w8, #0x1
   12778:	str	w8, [x19, #2280]
   1277c:	b.lt	127e4 <_argp_input@@Base+0x138>  // b.tstop
   12780:	mov	w0, #0x1                   	// #1
   12784:	bl	a680 <sleep@plt>
   12788:	ldr	w8, [x19, #2280]
   1278c:	sub	w9, w8, #0x1
   12790:	cmp	w8, #0x0
   12794:	str	w9, [x19, #2280]
   12798:	b.gt	12780 <_argp_input@@Base+0xd4>
   1279c:	b	127e4 <_argp_input@@Base+0x138>
   127a0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   127a4:	ldr	x8, [x8, #3768]
   127a8:	mov	x0, x20
   127ac:	str	x20, [x8]
   127b0:	bl	a6c0 <last_component@plt>
   127b4:	str	x0, [x19, #64]
   127b8:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   127bc:	ldr	x8, [x8, #4008]
   127c0:	str	x0, [x8]
   127c4:	ldr	w8, [x19, #28]
   127c8:	and	w8, w8, #0x3
   127cc:	cmp	w8, #0x1
   127d0:	b.ne	127e4 <_argp_input@@Base+0x138>  // b.any
   127d4:	ldr	x8, [x19, #16]
   127d8:	mov	w0, wzr
   127dc:	str	x20, [x8]
   127e0:	b	127e8 <_argp_input@@Base+0x13c>
   127e4:	mov	w0, wzr
   127e8:	ldp	x20, x19, [sp, #16]
   127ec:	ldp	x29, x30, [sp], #32
   127f0:	ret
   127f4:	stp	x29, x30, [sp, #-32]!
   127f8:	cmp	w0, #0x56
   127fc:	str	x19, [sp, #16]
   12800:	mov	x29, sp
   12804:	b.ne	12834 <_argp_input@@Base+0x188>  // b.any
   12808:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1280c:	ldr	x8, [x8, #4056]
   12810:	mov	x19, x2
   12814:	ldr	x8, [x8]
   12818:	cbz	x8, 1283c <_argp_input@@Base+0x190>
   1281c:	ldr	x0, [x19, #80]
   12820:	mov	x1, x19
   12824:	blr	x8
   12828:	ldrb	w8, [x19, #28]
   1282c:	tbnz	w8, #5, 12864 <_argp_input@@Base+0x1b8>
   12830:	b	128a8 <_argp_input@@Base+0x1fc>
   12834:	mov	w0, #0x7                   	// #7
   12838:	b	12868 <_argp_input@@Base+0x1bc>
   1283c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   12840:	ldr	x8, [x8, #3936]
   12844:	ldr	x2, [x8]
   12848:	cbz	x2, 12874 <_argp_input@@Base+0x1c8>
   1284c:	ldr	x0, [x19, #80]
   12850:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
   12854:	add	x1, x1, #0xbc1
   12858:	bl	ae70 <fprintf@plt>
   1285c:	ldrb	w8, [x19, #28]
   12860:	tbz	w8, #5, 128a8 <_argp_input@@Base+0x1fc>
   12864:	mov	w0, wzr
   12868:	ldr	x19, [sp, #16]
   1286c:	ldp	x29, x30, [sp], #32
   12870:	ret
   12874:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   12878:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   1287c:	add	x0, x0, #0x387
   12880:	add	x1, x1, #0x7ae
   12884:	mov	w2, #0x5                   	// #5
   12888:	bl	ac80 <dcgettext@plt>
   1288c:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   12890:	mov	x2, x0
   12894:	add	x1, x1, #0x3a8
   12898:	mov	x0, x19
   1289c:	bl	aa70 <argp_error@plt>
   128a0:	ldrb	w8, [x19, #28]
   128a4:	tbnz	w8, #5, 12864 <_argp_input@@Base+0x1b8>
   128a8:	mov	w0, wzr
   128ac:	bl	a290 <exit@plt>
   128b0:	stp	x29, x30, [sp, #-32]!
   128b4:	stp	x20, x19, [sp, #16]
   128b8:	ldr	x11, [x0]
   128bc:	ldr	x8, [x0, #32]
   128c0:	mov	x19, x1
   128c4:	mov	x29, sp
   128c8:	cbz	x11, 12928 <_argp_input@@Base+0x27c>
   128cc:	ldr	x12, [x19, #16]
   128d0:	mov	w10, wzr
   128d4:	mov	x9, xzr
   128d8:	add	x11, x11, #0x28
   128dc:	add	x12, x12, #0x1
   128e0:	str	x12, [x19, #16]
   128e4:	b	128f4 <_argp_input@@Base+0x248>
   128e8:	add	x11, x11, #0x30
   128ec:	add	x9, x9, #0x1
   128f0:	add	w10, w10, #0x3
   128f4:	ldur	w12, [x11, #-32]
   128f8:	cbnz	w12, 128e8 <_argp_input@@Base+0x23c>
   128fc:	ldur	x12, [x11, #-40]
   12900:	cbnz	x12, 128e8 <_argp_input@@Base+0x23c>
   12904:	ldur	x12, [x11, #-8]
   12908:	cbnz	x12, 128e8 <_argp_input@@Base+0x23c>
   1290c:	ldr	w12, [x11]
   12910:	cbnz	w12, 128e8 <_argp_input@@Base+0x23c>
   12914:	ldr	x11, [x19]
   12918:	add	x11, x11, w10, uxtw
   1291c:	mov	x10, x19
   12920:	str	x11, [x10], #8
   12924:	b	12938 <_argp_input@@Base+0x28c>
   12928:	ldr	x9, [x0, #8]
   1292c:	cbz	x9, 12944 <_argp_input@@Base+0x298>
   12930:	add	x10, x19, #0x10
   12934:	mov	w9, #0x1                   	// #1
   12938:	ldr	x11, [x10]
   1293c:	add	x9, x11, x9
   12940:	str	x9, [x10]
   12944:	cbz	x8, 12970 <_argp_input@@Base+0x2c4>
   12948:	ldr	x0, [x8]
   1294c:	cbz	x0, 12970 <_argp_input@@Base+0x2c4>
   12950:	add	x20, x8, #0x20
   12954:	mov	x1, x19
   12958:	bl	128b0 <_argp_input@@Base+0x204>
   1295c:	ldr	x8, [x19, #24]
   12960:	add	x8, x8, #0x1
   12964:	str	x8, [x19, #24]
   12968:	ldr	x0, [x20], #32
   1296c:	cbnz	x0, 12954 <_argp_input@@Base+0x2a8>
   12970:	ldp	x20, x19, [sp, #16]
   12974:	ldp	x29, x30, [sp], #32
   12978:	ret
   1297c:	sub	sp, sp, #0x80
   12980:	stp	x29, x30, [sp, #32]
   12984:	stp	x28, x27, [sp, #48]
   12988:	stp	x26, x25, [sp, #64]
   1298c:	stp	x24, x23, [sp, #80]
   12990:	stp	x22, x21, [sp, #96]
   12994:	stp	x20, x19, [sp, #112]
   12998:	ldr	x23, [x0]
   1299c:	ldr	x10, [x0, #32]
   129a0:	mov	x19, x4
   129a4:	mov	x20, x3
   129a8:	add	x29, sp, #0x20
   129ac:	cbz	x23, 12b24 <_argp_input@@Base+0x478>
   129b0:	mov	w28, #0x39000000            	// #956301312
   129b4:	mov	w21, #0x1000000             	// #16777216
   129b8:	mov	x26, x23
   129bc:	stp	x0, x1, [sp]
   129c0:	stur	w2, [x29, #-12]
   129c4:	stur	x10, [x29, #-8]
   129c8:	b	129f8 <_argp_input@@Base+0x34c>
   129cc:	ldr	w10, [x25, #80]
   129d0:	add	x11, x8, #0x20
   129d4:	sub	w10, w20, w10
   129d8:	lsr	w10, w10, #3
   129dc:	mul	w10, w10, w28
   129e0:	bfxil	w10, w9, #0, #24
   129e4:	add	w9, w10, w21
   129e8:	str	w9, [x8, #24]
   129ec:	str	x11, [x19, #16]
   129f0:	str	xzr, [x8, #32]
   129f4:	add	x26, x26, #0x30
   129f8:	ldr	w24, [x26, #8]
   129fc:	cbnz	w24, 12a18 <_argp_input@@Base+0x36c>
   12a00:	ldr	x8, [x26]
   12a04:	cbnz	x8, 12a18 <_argp_input@@Base+0x36c>
   12a08:	ldr	x8, [x26, #32]
   12a0c:	cbnz	x8, 12a18 <_argp_input@@Base+0x36c>
   12a10:	ldr	w8, [x26, #40]
   12a14:	cbz	w8, 12b10 <_argp_input@@Base+0x464>
   12a18:	ldr	w8, [x26, #24]
   12a1c:	tst	w8, #0x4
   12a20:	csel	x23, x26, x23, eq  // eq = none
   12a24:	ldrb	w9, [x23, #24]
   12a28:	tbnz	w9, #3, 129f4 <_argp_input@@Base+0x348>
   12a2c:	sub	w9, w24, #0x1
   12a30:	cmp	w9, #0xfe
   12a34:	b.hi	12a9c <_argp_input@@Base+0x3f0>  // b.pmore
   12a38:	tbnz	w8, #3, 12a9c <_argp_input@@Base+0x3f0>
   12a3c:	bl	a900 <__ctype_b_loc@plt>
   12a40:	ldr	x8, [x0]
   12a44:	ldrh	w8, [x8, x24, lsl #1]
   12a48:	tbz	w8, #14, 12a9c <_argp_input@@Base+0x3f0>
   12a4c:	ldr	x8, [x19, #8]
   12a50:	add	x9, x8, #0x1
   12a54:	str	x9, [x19, #8]
   12a58:	strb	w24, [x8]
   12a5c:	ldr	x8, [x23, #16]
   12a60:	cbz	x8, 12a94 <_argp_input@@Base+0x3e8>
   12a64:	ldr	x8, [x19, #8]
   12a68:	add	x9, x8, #0x1
   12a6c:	str	x9, [x19, #8]
   12a70:	mov	w9, #0x3a                  	// #58
   12a74:	strb	w9, [x8]
   12a78:	ldrb	w8, [x23, #24]
   12a7c:	tbz	w8, #0, 12a94 <_argp_input@@Base+0x3e8>
   12a80:	ldr	x8, [x19, #8]
   12a84:	add	x9, x8, #0x1
   12a88:	str	x9, [x19, #8]
   12a8c:	mov	w9, #0x3a                  	// #58
   12a90:	strb	w9, [x8]
   12a94:	ldr	x8, [x19, #8]
   12a98:	strb	wzr, [x8]
   12a9c:	ldr	x24, [x26]
   12aa0:	cbz	x24, 129f4 <_argp_input@@Base+0x348>
   12aa4:	ldr	x25, [x19]
   12aa8:	ldr	x22, [x25, #16]
   12aac:	ldr	x0, [x22]
   12ab0:	cbz	x0, 12ad8 <_argp_input@@Base+0x42c>
   12ab4:	mov	x27, x22
   12ab8:	mov	x1, x24
   12abc:	bl	a8e0 <strcmp@plt>
   12ac0:	cbz	w0, 12ad0 <_argp_input@@Base+0x424>
   12ac4:	ldr	x0, [x27, #32]!
   12ac8:	cbnz	x0, 12ab8 <_argp_input@@Base+0x40c>
   12acc:	b	12ad8 <_argp_input@@Base+0x42c>
   12ad0:	sub	x8, x27, x22
   12ad4:	tbz	x8, #36, 129f4 <_argp_input@@Base+0x348>
   12ad8:	ldr	x8, [x19, #16]
   12adc:	str	x24, [x8]
   12ae0:	ldr	x9, [x23, #16]
   12ae4:	cbz	x9, 12af8 <_argp_input@@Base+0x44c>
   12ae8:	ldrb	w9, [x23, #24]
   12aec:	tst	w9, #0x1
   12af0:	mov	w9, #0x1                   	// #1
   12af4:	cinc	w9, w9, ne  // ne = any
   12af8:	str	w9, [x8, #8]
   12afc:	str	xzr, [x8, #16]
   12b00:	ldr	w9, [x26, #8]
   12b04:	cbnz	w9, 129cc <_argp_input@@Base+0x320>
   12b08:	ldr	w9, [x23, #8]
   12b0c:	b	129cc <_argp_input@@Base+0x320>
   12b10:	ldp	x0, x1, [sp]
   12b14:	ldur	x10, [x29, #-8]
   12b18:	ldur	w2, [x29, #-12]
   12b1c:	ldr	x8, [x0, #8]
   12b20:	b	12b2c <_argp_input@@Base+0x480>
   12b24:	ldr	x8, [x0, #8]
   12b28:	cbz	x8, 12bd0 <_argp_input@@Base+0x524>
   12b2c:	stp	x8, x0, [x20]
   12b30:	ldr	x8, [x19, #8]
   12b34:	str	wzr, [x20, #24]
   12b38:	str	x1, [x20, #32]
   12b3c:	str	w2, [x20, #40]
   12b40:	stp	xzr, xzr, [x20, #56]
   12b44:	str	x8, [x20, #16]
   12b48:	str	xzr, [x20, #48]
   12b4c:	cbz	x10, 12b74 <_argp_input@@Base+0x4c8>
   12b50:	mov	w8, #0xffffffff            	// #-1
   12b54:	add	w8, w8, #0x1
   12b58:	lsl	x9, x8, #5
   12b5c:	ldr	x9, [x10, x9]
   12b60:	cbnz	x9, 12b54 <_argp_input@@Base+0x4a8>
   12b64:	ldr	x9, [x19, #24]
   12b68:	add	x8, x9, w8, uxtw #3
   12b6c:	str	x9, [x20, #56]
   12b70:	str	x8, [x19, #24]
   12b74:	add	x3, x20, #0x48
   12b78:	cbz	x10, 12bac <_argp_input@@Base+0x500>
   12b7c:	ldr	x0, [x10]
   12b80:	cbz	x0, 12bac <_argp_input@@Base+0x500>
   12b84:	mov	w2, wzr
   12b88:	add	x21, x10, #0x20
   12b8c:	mov	x1, x20
   12b90:	mov	x4, x19
   12b94:	add	w22, w2, #0x1
   12b98:	bl	1297c <_argp_input@@Base+0x2d0>
   12b9c:	mov	x3, x0
   12ba0:	ldr	x0, [x21], #32
   12ba4:	mov	w2, w22
   12ba8:	cbnz	x0, 12b8c <_argp_input@@Base+0x4e0>
   12bac:	ldp	x20, x19, [sp, #112]
   12bb0:	ldp	x22, x21, [sp, #96]
   12bb4:	ldp	x24, x23, [sp, #80]
   12bb8:	ldp	x26, x25, [sp, #64]
   12bbc:	ldp	x28, x27, [sp, #48]
   12bc0:	ldp	x29, x30, [sp, #32]
   12bc4:	mov	x0, x3
   12bc8:	add	sp, sp, #0x80
   12bcc:	ret
   12bd0:	mov	x3, x20
   12bd4:	mov	x20, xzr
   12bd8:	cbnz	x10, 12b7c <_argp_input@@Base+0x4d0>
   12bdc:	b	12bac <_argp_input@@Base+0x500>

0000000000012be0 <argp_usage@@Base>:
   12be0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   12be4:	ldr	x8, [x8, #3816]
   12be8:	mov	w2, #0x106                 	// #262
   12bec:	ldr	x1, [x8]
   12bf0:	b	ac70 <argp_state_help@plt>

0000000000012bf4 <_option_is_short@@Base>:
   12bf4:	stp	x29, x30, [sp, #-32]!
   12bf8:	ldrb	w8, [x0, #24]
   12bfc:	str	x19, [sp, #16]
   12c00:	mov	x29, sp
   12c04:	tbnz	w8, #3, 12c2c <_option_is_short@@Base+0x38>
   12c08:	ldr	w19, [x0, #8]
   12c0c:	sub	w8, w19, #0x1
   12c10:	cmp	w8, #0xfe
   12c14:	b.hi	12c2c <_option_is_short@@Base+0x38>  // b.pmore
   12c18:	bl	a900 <__ctype_b_loc@plt>
   12c1c:	ldr	x8, [x0]
   12c20:	ldrh	w8, [x8, x19, lsl #1]
   12c24:	ubfx	w0, w8, #14, #1
   12c28:	b	12c30 <_option_is_short@@Base+0x3c>
   12c2c:	mov	w0, wzr
   12c30:	ldr	x19, [sp, #16]
   12c34:	ldp	x29, x30, [sp], #32
   12c38:	ret

0000000000012c3c <_option_is_end@@Base>:
   12c3c:	ldr	w8, [x0, #8]
   12c40:	cbz	w8, 12c4c <_option_is_end@@Base+0x10>
   12c44:	mov	w0, wzr
   12c48:	ret
   12c4c:	ldr	x8, [x0]
   12c50:	cbz	x8, 12c5c <_option_is_end@@Base+0x20>
   12c54:	mov	w0, wzr
   12c58:	ret
   12c5c:	ldr	x8, [x0, #32]
   12c60:	cbz	x8, 12c6c <_option_is_end@@Base+0x30>
   12c64:	mov	w0, wzr
   12c68:	ret
   12c6c:	ldr	w8, [x0, #40]
   12c70:	cmp	w8, #0x0
   12c74:	cset	w0, eq  // eq = none
   12c78:	ret
   12c7c:	stp	x29, x30, [sp, #-64]!
   12c80:	str	x23, [sp, #16]
   12c84:	mov	x23, x0
   12c88:	mov	w0, #0x40                  	// #64
   12c8c:	stp	x22, x21, [sp, #32]
   12c90:	stp	x20, x19, [sp, #48]
   12c94:	mov	x29, sp
   12c98:	mov	w21, w4
   12c9c:	mov	x19, x3
   12ca0:	mov	x20, x2
   12ca4:	mov	x22, x1
   12ca8:	bl	a540 <malloc@plt>
   12cac:	cbz	x0, 12cc8 <_option_is_end@@Base+0x8c>
   12cb0:	and	w8, w21, #0x1
   12cb4:	stp	x23, x22, [x0]
   12cb8:	stp	x20, x19, [x0, #16]
   12cbc:	stp	xzr, xzr, [x0, #48]
   12cc0:	strb	w8, [x0, #32]
   12cc4:	str	xzr, [x0, #40]
   12cc8:	ldp	x20, x19, [sp, #48]
   12ccc:	ldp	x22, x21, [sp, #32]
   12cd0:	ldr	x23, [sp, #16]
   12cd4:	ldp	x29, x30, [sp], #64
   12cd8:	ret
   12cdc:	stp	x29, x30, [sp, #-80]!
   12ce0:	stp	x26, x25, [sp, #16]
   12ce4:	mov	x26, x0
   12ce8:	mov	w0, #0x40                  	// #64
   12cec:	stp	x24, x23, [sp, #32]
   12cf0:	stp	x22, x21, [sp, #48]
   12cf4:	stp	x20, x19, [sp, #64]
   12cf8:	mov	x29, sp
   12cfc:	mov	x21, x6
   12d00:	mov	x19, x5
   12d04:	mov	w24, w4
   12d08:	mov	x22, x3
   12d0c:	mov	x23, x2
   12d10:	mov	x25, x1
   12d14:	bl	a540 <malloc@plt>
   12d18:	mov	x20, x0
   12d1c:	cbz	x0, 12d78 <_option_is_end@@Base+0x13c>
   12d20:	and	w8, w24, #0x1
   12d24:	stp	x26, x25, [x20]
   12d28:	stp	x23, x22, [x20, #16]
   12d2c:	strb	w8, [x20, #32]
   12d30:	cbz	x19, 12d70 <_option_is_end@@Base+0x134>
   12d34:	lsr	x8, x19, #61
   12d38:	cbnz	x8, 12d60 <_option_is_end@@Base+0x124>
   12d3c:	lsl	x22, x19, #3
   12d40:	mov	x0, x22
   12d44:	bl	a540 <malloc@plt>
   12d48:	str	x0, [x20, #40]
   12d4c:	cbz	x0, 12d60 <_option_is_end@@Base+0x124>
   12d50:	mov	x1, x21
   12d54:	mov	x2, x22
   12d58:	bl	a210 <memcpy@plt>
   12d5c:	b	12d74 <_option_is_end@@Base+0x138>
   12d60:	mov	x0, x20
   12d64:	bl	a960 <free@plt>
   12d68:	mov	x20, xzr
   12d6c:	b	12d78 <_option_is_end@@Base+0x13c>
   12d70:	str	xzr, [x20, #40]
   12d74:	stp	x19, x19, [x20, #48]
   12d78:	mov	x0, x20
   12d7c:	ldp	x20, x19, [sp, #64]
   12d80:	ldp	x22, x21, [sp, #48]
   12d84:	ldp	x24, x23, [sp, #32]
   12d88:	ldp	x26, x25, [sp, #16]
   12d8c:	ldp	x29, x30, [sp], #80
   12d90:	ret
   12d94:	ldr	x0, [x0, #48]
   12d98:	ret
   12d9c:	stp	x29, x30, [sp, #-16]!
   12da0:	ldr	x9, [x0, #48]
   12da4:	sub	x8, x1, #0x1
   12da8:	mov	x29, sp
   12dac:	cmp	x8, x9
   12db0:	b.cs	12dc4 <_option_is_end@@Base+0x188>  // b.hs, b.nlast
   12db4:	ldr	x9, [x0, #40]
   12db8:	ldr	x0, [x9, x8, lsl #3]
   12dbc:	ldp	x29, x30, [sp], #16
   12dc0:	ret
   12dc4:	bl	a840 <abort@plt>
   12dc8:	stp	x29, x30, [sp, #-16]!
   12dcc:	ldr	x9, [x0, #48]
   12dd0:	sub	x8, x1, #0x1
   12dd4:	mov	x29, sp
   12dd8:	cmp	x8, x9
   12ddc:	b.cs	12df4 <_option_is_end@@Base+0x1b8>  // b.hs, b.nlast
   12de0:	ldr	x9, [x0, #40]
   12de4:	mov	w0, wzr
   12de8:	str	x2, [x9, x8, lsl #3]
   12dec:	ldp	x29, x30, [sp], #16
   12df0:	ret
   12df4:	bl	a840 <abort@plt>
   12df8:	stp	x29, x30, [sp, #-16]!
   12dfc:	ldr	x8, [x0, #48]
   12e00:	sub	x9, x1, #0x1
   12e04:	mov	x29, sp
   12e08:	cmp	x9, x8
   12e0c:	b.cs	12e20 <_option_is_end@@Base+0x1e4>  // b.hs, b.nlast
   12e10:	cmp	x8, x1
   12e14:	csinc	x0, xzr, x1, ls  // ls = plast
   12e18:	ldp	x29, x30, [sp], #16
   12e1c:	ret
   12e20:	bl	a840 <abort@plt>
   12e24:	stp	x29, x30, [sp, #-16]!
   12e28:	ldr	x8, [x0, #48]
   12e2c:	sub	x0, x1, #0x1
   12e30:	mov	x29, sp
   12e34:	cmp	x0, x8
   12e38:	b.cs	12e44 <_option_is_end@@Base+0x208>  // b.hs, b.nlast
   12e3c:	ldp	x29, x30, [sp], #16
   12e40:	ret
   12e44:	bl	a840 <abort@plt>
   12e48:	stp	x29, x30, [sp, #-16]!
   12e4c:	ldr	x8, [x0, #48]
   12e50:	mov	x29, sp
   12e54:	cmp	x8, x1
   12e58:	b.ls	12e6c <_option_is_end@@Base+0x230>  // b.plast
   12e5c:	ldr	x8, [x0, #40]
   12e60:	ldr	x0, [x8, x1, lsl #3]
   12e64:	ldp	x29, x30, [sp], #16
   12e68:	ret
   12e6c:	bl	a840 <abort@plt>
   12e70:	stp	x29, x30, [sp, #-16]!
   12e74:	ldr	x8, [x0, #48]
   12e78:	mov	x29, sp
   12e7c:	cmp	x8, x1
   12e80:	b.ls	12e98 <_option_is_end@@Base+0x25c>  // b.plast
   12e84:	ldr	x8, [x0, #40]
   12e88:	add	x0, x1, #0x1
   12e8c:	str	x2, [x8, x1, lsl #3]
   12e90:	ldp	x29, x30, [sp], #16
   12e94:	ret
   12e98:	bl	a840 <abort@plt>
   12e9c:	stp	x29, x30, [sp, #-64]!
   12ea0:	cmp	x1, x2
   12ea4:	str	x23, [sp, #16]
   12ea8:	stp	x22, x21, [sp, #32]
   12eac:	stp	x20, x19, [sp, #48]
   12eb0:	mov	x29, sp
   12eb4:	b.hi	12f40 <_option_is_end@@Base+0x304>  // b.pmore
   12eb8:	ldr	x8, [x0, #48]
   12ebc:	mov	x21, x2
   12ec0:	mov	x22, x0
   12ec4:	cmp	x8, x2
   12ec8:	b.cc	12f40 <_option_is_end@@Base+0x304>  // b.lo, b.ul, b.last
   12ecc:	mov	x19, x1
   12ed0:	cmp	x1, x21
   12ed4:	b.cs	12f24 <_option_is_end@@Base+0x2e8>  // b.hs, b.nlast
   12ed8:	ldr	x23, [x22, #8]
   12edc:	mov	x20, x3
   12ee0:	cbz	x23, 12f08 <_option_is_end@@Base+0x2cc>
   12ee4:	ldr	x8, [x22, #40]
   12ee8:	mov	x0, x20
   12eec:	ldr	x1, [x8, x19, lsl #3]
   12ef0:	blr	x23
   12ef4:	tbnz	w0, #0, 12f28 <_option_is_end@@Base+0x2ec>
   12ef8:	add	x19, x19, #0x1
   12efc:	cmp	x21, x19
   12f00:	b.ne	12ee4 <_option_is_end@@Base+0x2a8>  // b.any
   12f04:	b	12f24 <_option_is_end@@Base+0x2e8>
   12f08:	ldr	x8, [x22, #40]
   12f0c:	ldr	x9, [x8, x19, lsl #3]
   12f10:	cmp	x9, x20
   12f14:	b.eq	12f28 <_option_is_end@@Base+0x2ec>  // b.none
   12f18:	add	x19, x19, #0x1
   12f1c:	cmp	x21, x19
   12f20:	b.ne	12f0c <_option_is_end@@Base+0x2d0>  // b.any
   12f24:	mov	x19, #0xffffffffffffffff    	// #-1
   12f28:	add	x0, x19, #0x1
   12f2c:	ldp	x20, x19, [sp, #48]
   12f30:	ldp	x22, x21, [sp, #32]
   12f34:	ldr	x23, [sp, #16]
   12f38:	ldp	x29, x30, [sp], #64
   12f3c:	ret
   12f40:	bl	a840 <abort@plt>
   12f44:	stp	x29, x30, [sp, #-64]!
   12f48:	cmp	x1, x2
   12f4c:	str	x23, [sp, #16]
   12f50:	stp	x22, x21, [sp, #32]
   12f54:	stp	x20, x19, [sp, #48]
   12f58:	mov	x29, sp
   12f5c:	b.hi	12fe8 <_option_is_end@@Base+0x3ac>  // b.pmore
   12f60:	ldr	x8, [x0, #48]
   12f64:	mov	x21, x2
   12f68:	mov	x22, x0
   12f6c:	cmp	x8, x2
   12f70:	b.cc	12fe8 <_option_is_end@@Base+0x3ac>  // b.lo, b.ul, b.last
   12f74:	mov	x19, x1
   12f78:	cmp	x1, x21
   12f7c:	b.cs	12fcc <_option_is_end@@Base+0x390>  // b.hs, b.nlast
   12f80:	ldr	x23, [x22, #8]
   12f84:	mov	x20, x3
   12f88:	cbz	x23, 12fb0 <_option_is_end@@Base+0x374>
   12f8c:	ldr	x8, [x22, #40]
   12f90:	mov	x0, x20
   12f94:	ldr	x1, [x8, x19, lsl #3]
   12f98:	blr	x23
   12f9c:	tbnz	w0, #0, 12fd0 <_option_is_end@@Base+0x394>
   12fa0:	add	x19, x19, #0x1
   12fa4:	cmp	x21, x19
   12fa8:	b.ne	12f8c <_option_is_end@@Base+0x350>  // b.any
   12fac:	b	12fcc <_option_is_end@@Base+0x390>
   12fb0:	ldr	x8, [x22, #40]
   12fb4:	ldr	x9, [x8, x19, lsl #3]
   12fb8:	cmp	x9, x20
   12fbc:	b.eq	12fd0 <_option_is_end@@Base+0x394>  // b.none
   12fc0:	add	x19, x19, #0x1
   12fc4:	cmp	x21, x19
   12fc8:	b.ne	12fb4 <_option_is_end@@Base+0x378>  // b.any
   12fcc:	mov	x19, #0xffffffffffffffff    	// #-1
   12fd0:	mov	x0, x19
   12fd4:	ldp	x20, x19, [sp, #48]
   12fd8:	ldp	x22, x21, [sp, #32]
   12fdc:	ldr	x23, [sp, #16]
   12fe0:	ldp	x29, x30, [sp], #64
   12fe4:	ret
   12fe8:	bl	a840 <abort@plt>
   12fec:	stp	x29, x30, [sp, #-48]!
   12ff0:	stp	x22, x21, [sp, #16]
   12ff4:	stp	x20, x19, [sp, #32]
   12ff8:	ldp	x21, x8, [x0, #48]
   12ffc:	mov	x19, x0
   13000:	mov	x20, x1
   13004:	mov	x29, sp
   13008:	cmp	x21, x8
   1300c:	b.ne	13034 <_option_is_end@@Base+0x3f8>  // b.any
   13010:	lsl	x8, x21, #1
   13014:	cmp	x21, #0x0
   13018:	csinv	x8, x8, xzr, ge  // ge = tcont
   1301c:	adds	x8, x8, #0x1
   13020:	csinv	x22, x8, xzr, cc  // cc = lo, ul, last
   13024:	lsr	x8, x22, #61
   13028:	cbz	x8, 13040 <_option_is_end@@Base+0x404>
   1302c:	mov	x0, xzr
   13030:	b	13084 <_option_is_end@@Base+0x448>
   13034:	ldr	x0, [x19, #40]
   13038:	cbnz	x21, 1305c <_option_is_end@@Base+0x420>
   1303c:	b	13074 <_option_is_end@@Base+0x438>
   13040:	ldr	x0, [x19, #40]
   13044:	lsl	x1, x22, #3
   13048:	bl	a720 <realloc@plt>
   1304c:	cbz	x0, 13084 <_option_is_end@@Base+0x448>
   13050:	str	x0, [x19, #40]
   13054:	str	x22, [x19, #56]
   13058:	cbz	x21, 13074 <_option_is_end@@Base+0x438>
   1305c:	mov	x8, x21
   13060:	add	x9, x0, x8, lsl #3
   13064:	ldur	x10, [x9, #-8]
   13068:	subs	x8, x8, #0x1
   1306c:	str	x10, [x9]
   13070:	b.ne	13060 <_option_is_end@@Base+0x424>  // b.any
   13074:	str	x20, [x0]
   13078:	add	x8, x21, #0x1
   1307c:	mov	w0, #0x1                   	// #1
   13080:	str	x8, [x19, #48]
   13084:	ldp	x20, x19, [sp, #32]
   13088:	ldp	x22, x21, [sp, #16]
   1308c:	ldp	x29, x30, [sp], #48
   13090:	ret
   13094:	stp	x29, x30, [sp, #-48]!
   13098:	stp	x22, x21, [sp, #16]
   1309c:	stp	x20, x19, [sp, #32]
   130a0:	ldp	x21, x8, [x0, #48]
   130a4:	mov	x19, x0
   130a8:	mov	x20, x1
   130ac:	mov	x29, sp
   130b0:	cmp	x21, x8
   130b4:	b.ne	130dc <_option_is_end@@Base+0x4a0>  // b.any
   130b8:	lsl	x8, x21, #1
   130bc:	cmp	x21, #0x0
   130c0:	csinv	x8, x8, xzr, ge  // ge = tcont
   130c4:	adds	x8, x8, #0x1
   130c8:	csinv	x22, x8, xzr, cc  // cc = lo, ul, last
   130cc:	lsr	x8, x22, #61
   130d0:	cbz	x8, 130e4 <_option_is_end@@Base+0x4a8>
   130d4:	mov	x0, xzr
   130d8:	b	13108 <_option_is_end@@Base+0x4cc>
   130dc:	ldr	x0, [x19, #40]
   130e0:	b	130fc <_option_is_end@@Base+0x4c0>
   130e4:	ldr	x0, [x19, #40]
   130e8:	lsl	x1, x22, #3
   130ec:	bl	a720 <realloc@plt>
   130f0:	cbz	x0, 13108 <_option_is_end@@Base+0x4cc>
   130f4:	str	x0, [x19, #40]
   130f8:	str	x22, [x19, #56]
   130fc:	str	x20, [x0, x21, lsl #3]
   13100:	add	x0, x21, #0x1
   13104:	str	x0, [x19, #48]
   13108:	ldp	x20, x19, [sp, #32]
   1310c:	ldp	x22, x21, [sp, #16]
   13110:	ldp	x29, x30, [sp], #48
   13114:	ret
   13118:	stp	x29, x30, [sp, #-64]!
   1311c:	stp	x24, x23, [sp, #16]
   13120:	stp	x22, x21, [sp, #32]
   13124:	stp	x20, x19, [sp, #48]
   13128:	ldr	x22, [x0, #48]
   1312c:	sub	x23, x1, #0x1
   13130:	mov	x29, sp
   13134:	cmp	x23, x22
   13138:	b.cs	131d8 <_option_is_end@@Base+0x59c>  // b.hs, b.nlast
   1313c:	ldr	x8, [x0, #56]
   13140:	mov	x20, x0
   13144:	mov	x19, x1
   13148:	mov	x21, x2
   1314c:	cmp	x22, x8
   13150:	b.ne	1318c <_option_is_end@@Base+0x550>  // b.any
   13154:	lsl	x8, x22, #1
   13158:	cmp	x22, #0x0
   1315c:	csinv	x8, x8, xzr, ge  // ge = tcont
   13160:	adds	x8, x8, #0x1
   13164:	csinv	x24, x8, xzr, cc  // cc = lo, ul, last
   13168:	lsr	x8, x24, #61
   1316c:	cbnz	x8, 131bc <_option_is_end@@Base+0x580>
   13170:	ldr	x0, [x20, #40]
   13174:	lsl	x1, x24, #3
   13178:	bl	a720 <realloc@plt>
   1317c:	cbz	x0, 131bc <_option_is_end@@Base+0x580>
   13180:	str	x0, [x20, #40]
   13184:	str	x24, [x20, #56]
   13188:	b	13190 <_option_is_end@@Base+0x554>
   1318c:	ldr	x0, [x20, #40]
   13190:	mov	x8, x22
   13194:	add	x9, x0, x8, lsl #3
   13198:	ldur	x10, [x9, #-8]
   1319c:	sub	x8, x8, #0x1
   131a0:	cmp	x8, x23
   131a4:	str	x10, [x9]
   131a8:	b.hi	13194 <_option_is_end@@Base+0x558>  // b.pmore
   131ac:	add	x8, x22, #0x1
   131b0:	str	x21, [x0, x23, lsl #3]
   131b4:	str	x8, [x20, #48]
   131b8:	b	131c0 <_option_is_end@@Base+0x584>
   131bc:	mov	x19, xzr
   131c0:	mov	x0, x19
   131c4:	ldp	x20, x19, [sp, #48]
   131c8:	ldp	x22, x21, [sp, #32]
   131cc:	ldp	x24, x23, [sp, #16]
   131d0:	ldp	x29, x30, [sp], #64
   131d4:	ret
   131d8:	bl	a840 <abort@plt>
   131dc:	stp	x29, x30, [sp, #-64]!
   131e0:	stp	x22, x21, [sp, #32]
   131e4:	stp	x20, x19, [sp, #48]
   131e8:	ldr	x22, [x0, #48]
   131ec:	sub	x8, x1, #0x1
   131f0:	str	x23, [sp, #16]
   131f4:	mov	x29, sp
   131f8:	cmp	x8, x22
   131fc:	b.cs	132ac <_option_is_end@@Base+0x670>  // b.hs, b.nlast
   13200:	ldr	x8, [x0, #56]
   13204:	mov	x19, x0
   13208:	mov	x20, x1
   1320c:	mov	x21, x2
   13210:	cmp	x22, x8
   13214:	b.ne	1323c <_option_is_end@@Base+0x600>  // b.any
   13218:	lsl	x8, x22, #1
   1321c:	cmp	x22, #0x0
   13220:	csinv	x8, x8, xzr, ge  // ge = tcont
   13224:	adds	x8, x8, #0x1
   13228:	csinv	x23, x8, xzr, cc  // cc = lo, ul, last
   1322c:	lsr	x8, x23, #61
   13230:	cbz	x8, 1324c <_option_is_end@@Base+0x610>
   13234:	mov	x0, xzr
   13238:	b	13298 <_option_is_end@@Base+0x65c>
   1323c:	ldr	x0, [x19, #40]
   13240:	cmp	x22, x20
   13244:	b.hi	1326c <_option_is_end@@Base+0x630>  // b.pmore
   13248:	b	13288 <_option_is_end@@Base+0x64c>
   1324c:	ldr	x0, [x19, #40]
   13250:	lsl	x1, x23, #3
   13254:	bl	a720 <realloc@plt>
   13258:	cbz	x0, 13298 <_option_is_end@@Base+0x65c>
   1325c:	str	x0, [x19, #40]
   13260:	str	x23, [x19, #56]
   13264:	cmp	x22, x20
   13268:	b.ls	13288 <_option_is_end@@Base+0x64c>  // b.plast
   1326c:	mov	x8, x22
   13270:	add	x9, x0, x8, lsl #3
   13274:	ldur	x10, [x9, #-8]
   13278:	sub	x8, x8, #0x1
   1327c:	cmp	x8, x20
   13280:	str	x10, [x9]
   13284:	b.hi	13270 <_option_is_end@@Base+0x634>  // b.pmore
   13288:	str	x21, [x0, x20, lsl #3]
   1328c:	add	x8, x22, #0x1
   13290:	add	x0, x20, #0x1
   13294:	str	x8, [x19, #48]
   13298:	ldp	x20, x19, [sp, #48]
   1329c:	ldp	x22, x21, [sp, #32]
   132a0:	ldr	x23, [sp, #16]
   132a4:	ldp	x29, x30, [sp], #64
   132a8:	ret
   132ac:	bl	a840 <abort@plt>
   132b0:	stp	x29, x30, [sp, #-64]!
   132b4:	stp	x22, x21, [sp, #32]
   132b8:	stp	x20, x19, [sp, #48]
   132bc:	ldr	x22, [x0, #48]
   132c0:	str	x23, [sp, #16]
   132c4:	mov	x29, sp
   132c8:	cmp	x22, x1
   132cc:	b.cc	1337c <_option_is_end@@Base+0x740>  // b.lo, b.ul, b.last
   132d0:	ldr	x8, [x0, #56]
   132d4:	mov	x19, x0
   132d8:	mov	x20, x1
   132dc:	mov	x21, x2
   132e0:	cmp	x22, x8
   132e4:	b.ne	1330c <_option_is_end@@Base+0x6d0>  // b.any
   132e8:	lsl	x8, x22, #1
   132ec:	cmp	x22, #0x0
   132f0:	csinv	x8, x8, xzr, ge  // ge = tcont
   132f4:	adds	x8, x8, #0x1
   132f8:	csinv	x23, x8, xzr, cc  // cc = lo, ul, last
   132fc:	lsr	x8, x23, #61
   13300:	cbz	x8, 1331c <_option_is_end@@Base+0x6e0>
   13304:	mov	x0, xzr
   13308:	b	13368 <_option_is_end@@Base+0x72c>
   1330c:	ldr	x0, [x19, #40]
   13310:	cmp	x22, x20
   13314:	b.hi	1333c <_option_is_end@@Base+0x700>  // b.pmore
   13318:	b	13358 <_option_is_end@@Base+0x71c>
   1331c:	ldr	x0, [x19, #40]
   13320:	lsl	x1, x23, #3
   13324:	bl	a720 <realloc@plt>
   13328:	cbz	x0, 13368 <_option_is_end@@Base+0x72c>
   1332c:	str	x0, [x19, #40]
   13330:	str	x23, [x19, #56]
   13334:	cmp	x22, x20
   13338:	b.ls	13358 <_option_is_end@@Base+0x71c>  // b.plast
   1333c:	mov	x8, x22
   13340:	add	x9, x0, x8, lsl #3
   13344:	ldur	x10, [x9, #-8]
   13348:	sub	x8, x8, #0x1
   1334c:	cmp	x8, x20
   13350:	str	x10, [x9]
   13354:	b.hi	13340 <_option_is_end@@Base+0x704>  // b.pmore
   13358:	str	x21, [x0, x20, lsl #3]
   1335c:	add	x8, x22, #0x1
   13360:	add	x0, x20, #0x1
   13364:	str	x8, [x19, #48]
   13368:	ldp	x20, x19, [sp, #48]
   1336c:	ldp	x22, x21, [sp, #32]
   13370:	ldr	x23, [sp, #16]
   13374:	ldp	x29, x30, [sp], #64
   13378:	ret
   1337c:	bl	a840 <abort@plt>
   13380:	stp	x29, x30, [sp, #-48]!
   13384:	stp	x22, x21, [sp, #16]
   13388:	stp	x20, x19, [sp, #32]
   1338c:	ldr	x21, [x0, #48]
   13390:	sub	x8, x1, #0x1
   13394:	mov	x29, sp
   13398:	cmp	x8, x21
   1339c:	b.cs	1343c <_option_is_end@@Base+0x800>  // b.hs, b.nlast
   133a0:	ldr	x9, [x0, #24]
   133a4:	ldr	x22, [x0, #40]
   133a8:	mov	x19, x0
   133ac:	mov	x20, x1
   133b0:	cbz	x9, 133bc <_option_is_end@@Base+0x780>
   133b4:	ldr	x0, [x22, x8, lsl #3]
   133b8:	blr	x9
   133bc:	subs	x8, x21, x20
   133c0:	b.ls	13420 <_option_is_end@@Base+0x7e4>  // b.plast
   133c4:	cmp	x8, #0x4
   133c8:	mov	x9, x20
   133cc:	b.cc	13404 <_option_is_end@@Base+0x7c8>  // b.lo, b.ul, b.last
   133d0:	and	x10, x8, #0xfffffffffffffffc
   133d4:	add	x11, x22, x20, lsl #3
   133d8:	add	x9, x10, x20
   133dc:	add	x11, x11, #0x8
   133e0:	mov	x12, x10
   133e4:	ldur	q0, [x11, #-8]
   133e8:	ldur	q1, [x11, #8]
   133ec:	subs	x12, x12, #0x4
   133f0:	stp	q0, q1, [x11, #-16]
   133f4:	add	x11, x11, #0x20
   133f8:	b.ne	133e4 <_option_is_end@@Base+0x7a8>  // b.any
   133fc:	cmp	x8, x10
   13400:	b.eq	13420 <_option_is_end@@Base+0x7e4>  // b.none
   13404:	sub	x8, x21, x9
   13408:	add	x9, x22, x9, lsl #3
   1340c:	ldr	x10, [x9]
   13410:	subs	x8, x8, #0x1
   13414:	stur	x10, [x9, #-8]
   13418:	add	x9, x9, #0x8
   1341c:	b.ne	1340c <_option_is_end@@Base+0x7d0>  // b.any
   13420:	sub	x8, x21, #0x1
   13424:	str	x8, [x19, #48]
   13428:	ldp	x20, x19, [sp, #32]
   1342c:	ldp	x22, x21, [sp, #16]
   13430:	mov	w0, #0x1                   	// #1
   13434:	ldp	x29, x30, [sp], #48
   13438:	ret
   1343c:	bl	a840 <abort@plt>
   13440:	stp	x29, x30, [sp, #-48]!
   13444:	stp	x22, x21, [sp, #16]
   13448:	stp	x20, x19, [sp, #32]
   1344c:	ldr	x21, [x0, #48]
   13450:	mov	x29, sp
   13454:	cmp	x21, x1
   13458:	b.ls	13504 <_option_is_end@@Base+0x8c8>  // b.plast
   1345c:	ldr	x8, [x0, #24]
   13460:	ldr	x22, [x0, #40]
   13464:	mov	x19, x0
   13468:	mov	x20, x1
   1346c:	cbz	x8, 13478 <_option_is_end@@Base+0x83c>
   13470:	ldr	x0, [x22, x20, lsl #3]
   13474:	blr	x8
   13478:	add	x8, x20, #0x1
   1347c:	cmp	x8, x21
   13480:	b.cs	134e8 <_option_is_end@@Base+0x8ac>  // b.hs, b.nlast
   13484:	mvn	x9, x20
   13488:	add	x9, x21, x9
   1348c:	cmp	x9, #0x4
   13490:	b.cc	134cc <_option_is_end@@Base+0x890>  // b.lo, b.ul, b.last
   13494:	and	x10, x9, #0xfffffffffffffffc
   13498:	add	x11, x22, x20, lsl #3
   1349c:	add	x8, x8, x10
   134a0:	add	x20, x10, x20
   134a4:	add	x11, x11, #0x10
   134a8:	mov	x12, x10
   134ac:	ldur	q0, [x11, #-8]
   134b0:	ldur	q1, [x11, #8]
   134b4:	subs	x12, x12, #0x4
   134b8:	stp	q0, q1, [x11, #-16]
   134bc:	add	x11, x11, #0x20
   134c0:	b.ne	134ac <_option_is_end@@Base+0x870>  // b.any
   134c4:	cmp	x9, x10
   134c8:	b.eq	134e8 <_option_is_end@@Base+0x8ac>  // b.none
   134cc:	ldr	x10, [x22, x8, lsl #3]
   134d0:	mov	x9, x8
   134d4:	add	x8, x8, #0x1
   134d8:	cmp	x21, x8
   134dc:	str	x10, [x22, x20, lsl #3]
   134e0:	mov	x20, x9
   134e4:	b.ne	134cc <_option_is_end@@Base+0x890>  // b.any
   134e8:	sub	x8, x21, #0x1
   134ec:	str	x8, [x19, #48]
   134f0:	ldp	x20, x19, [sp, #32]
   134f4:	ldp	x22, x21, [sp, #16]
   134f8:	mov	w0, #0x1                   	// #1
   134fc:	ldp	x29, x30, [sp], #48
   13500:	ret
   13504:	bl	a840 <abort@plt>
   13508:	stp	x29, x30, [sp, #-64]!
   1350c:	stp	x22, x21, [sp, #32]
   13510:	stp	x20, x19, [sp, #48]
   13514:	ldr	x22, [x0, #48]
   13518:	str	x23, [sp, #16]
   1351c:	mov	x29, sp
   13520:	cbz	x22, 13628 <_option_is_end@@Base+0x9ec>
   13524:	ldr	x23, [x0, #8]
   13528:	mov	x19, x0
   1352c:	mov	x20, x1
   13530:	cbz	x23, 1355c <_option_is_end@@Base+0x920>
   13534:	mov	x21, xzr
   13538:	ldr	x8, [x19, #40]
   1353c:	mov	x0, x20
   13540:	ldr	x1, [x8, x21, lsl #3]
   13544:	blr	x23
   13548:	tbnz	w0, #0, 13580 <_option_is_end@@Base+0x944>
   1354c:	add	x21, x21, #0x1
   13550:	cmp	x22, x21
   13554:	b.ne	13538 <_option_is_end@@Base+0x8fc>  // b.any
   13558:	b	13628 <_option_is_end@@Base+0x9ec>
   1355c:	ldr	x8, [x19, #40]
   13560:	mov	x21, xzr
   13564:	ldr	x9, [x8, x21, lsl #3]
   13568:	cmp	x9, x20
   1356c:	b.eq	13580 <_option_is_end@@Base+0x944>  // b.none
   13570:	add	x21, x21, #0x1
   13574:	cmp	x22, x21
   13578:	b.ne	13564 <_option_is_end@@Base+0x928>  // b.any
   1357c:	b	13628 <_option_is_end@@Base+0x9ec>
   13580:	cmn	x21, #0x1
   13584:	b.eq	13628 <_option_is_end@@Base+0x9ec>  // b.none
   13588:	ldr	x20, [x19, #48]
   1358c:	cmp	x20, x21
   13590:	b.ls	13640 <_option_is_end@@Base+0xa04>  // b.plast
   13594:	ldr	x8, [x19, #24]
   13598:	ldr	x22, [x19, #40]
   1359c:	cbz	x8, 135a8 <_option_is_end@@Base+0x96c>
   135a0:	ldr	x0, [x22, x21, lsl #3]
   135a4:	blr	x8
   135a8:	add	x8, x21, #0x1
   135ac:	cmp	x8, x20
   135b0:	b.cs	13618 <_option_is_end@@Base+0x9dc>  // b.hs, b.nlast
   135b4:	mvn	x9, x21
   135b8:	add	x9, x20, x9
   135bc:	cmp	x9, #0x4
   135c0:	b.cc	135fc <_option_is_end@@Base+0x9c0>  // b.lo, b.ul, b.last
   135c4:	and	x10, x9, #0xfffffffffffffffc
   135c8:	add	x11, x22, x21, lsl #3
   135cc:	add	x8, x8, x10
   135d0:	add	x21, x21, x10
   135d4:	add	x11, x11, #0x10
   135d8:	mov	x12, x10
   135dc:	ldur	q0, [x11, #-8]
   135e0:	ldur	q1, [x11, #8]
   135e4:	subs	x12, x12, #0x4
   135e8:	stp	q0, q1, [x11, #-16]
   135ec:	add	x11, x11, #0x20
   135f0:	b.ne	135dc <_option_is_end@@Base+0x9a0>  // b.any
   135f4:	cmp	x9, x10
   135f8:	b.eq	13618 <_option_is_end@@Base+0x9dc>  // b.none
   135fc:	ldr	x10, [x22, x8, lsl #3]
   13600:	mov	x9, x8
   13604:	add	x8, x8, #0x1
   13608:	cmp	x20, x8
   1360c:	str	x10, [x22, x21, lsl #3]
   13610:	mov	x21, x9
   13614:	b.ne	135fc <_option_is_end@@Base+0x9c0>  // b.any
   13618:	sub	x8, x20, #0x1
   1361c:	mov	w0, #0x1                   	// #1
   13620:	str	x8, [x19, #48]
   13624:	b	1362c <_option_is_end@@Base+0x9f0>
   13628:	mov	w0, wzr
   1362c:	ldp	x20, x19, [sp, #48]
   13630:	ldp	x22, x21, [sp, #32]
   13634:	ldr	x23, [sp, #16]
   13638:	ldp	x29, x30, [sp], #64
   1363c:	ret
   13640:	bl	a840 <abort@plt>
   13644:	stp	x29, x30, [sp, #-48]!
   13648:	stp	x22, x21, [sp, #16]
   1364c:	stp	x20, x19, [sp, #32]
   13650:	ldr	x20, [x0, #40]
   13654:	mov	x19, x0
   13658:	mov	x29, sp
   1365c:	cbz	x20, 1368c <_option_is_end@@Base+0xa50>
   13660:	ldr	x21, [x19, #24]
   13664:	cbz	x21, 13684 <_option_is_end@@Base+0xa48>
   13668:	ldr	x22, [x19, #48]
   1366c:	cbz	x22, 13684 <_option_is_end@@Base+0xa48>
   13670:	ldr	x0, [x20], #8
   13674:	blr	x21
   13678:	subs	x22, x22, #0x1
   1367c:	b.ne	13670 <_option_is_end@@Base+0xa34>  // b.any
   13680:	ldr	x20, [x19, #40]
   13684:	mov	x0, x20
   13688:	bl	a960 <free@plt>
   1368c:	mov	x0, x19
   13690:	ldp	x20, x19, [sp, #32]
   13694:	ldp	x22, x21, [sp, #16]
   13698:	ldp	x29, x30, [sp], #48
   1369c:	b	a960 <free@plt>
   136a0:	ldr	x9, [x0]
   136a4:	stp	x9, x0, [x8]
   136a8:	ldp	x10, x9, [x0, #40]
   136ac:	stp	x9, x10, [x8, #16]
   136b0:	add	x9, x10, x9, lsl #3
   136b4:	str	x9, [x8, #32]
   136b8:	ret
   136bc:	stp	x29, x30, [sp, #-16]!
   136c0:	cmp	x1, x2
   136c4:	mov	x29, sp
   136c8:	b.hi	136fc <_option_is_end@@Base+0xac0>  // b.pmore
   136cc:	ldr	x9, [x0, #48]
   136d0:	cmp	x9, x2
   136d4:	b.cc	136fc <_option_is_end@@Base+0xac0>  // b.lo, b.ul, b.last
   136d8:	ldr	x10, [x0]
   136dc:	stp	x0, x9, [x8, #8]
   136e0:	str	x10, [x8]
   136e4:	ldr	x9, [x0, #40]
   136e8:	add	x10, x9, x1, lsl #3
   136ec:	add	x9, x9, x2, lsl #3
   136f0:	stp	x10, x9, [x8, #24]
   136f4:	ldp	x29, x30, [sp], #16
   136f8:	ret
   136fc:	bl	a840 <abort@plt>
   13700:	stp	x29, x30, [sp, #-16]!
   13704:	ldp	x8, x9, [x0, #8]
   13708:	mov	x29, sp
   1370c:	ldr	x10, [x8, #48]
   13710:	cmp	x9, x10
   13714:	b.ne	13758 <_option_is_end@@Base+0xb1c>  // b.any
   13718:	ldp	x9, x10, [x0, #24]
   1371c:	cmp	x9, x10
   13720:	b.cs	13784 <_option_is_end@@Base+0xb48>  // b.hs, b.nlast
   13724:	ldr	x10, [x9]
   13728:	str	x10, [x1]
   1372c:	cbz	x2, 13744 <_option_is_end@@Base+0xb08>
   13730:	ldr	x8, [x8, #40]
   13734:	sub	x8, x9, x8
   13738:	asr	x8, x8, #3
   1373c:	add	x8, x8, #0x1
   13740:	str	x8, [x2]
   13744:	add	x8, x9, #0x8
   13748:	str	x8, [x0, #24]
   1374c:	mov	w0, #0x1                   	// #1
   13750:	ldp	x29, x30, [sp], #16
   13754:	ret
   13758:	add	x10, x10, #0x1
   1375c:	cmp	x9, x10
   13760:	b.ne	13790 <_option_is_end@@Base+0xb54>  // b.any
   13764:	ldp	x10, x11, [x0, #24]
   13768:	sub	x9, x9, #0x1
   1376c:	str	x9, [x0, #16]
   13770:	sub	x9, x10, #0x8
   13774:	sub	x10, x11, #0x8
   13778:	stp	x9, x10, [x0, #24]
   1377c:	cmp	x9, x10
   13780:	b.cc	13724 <_option_is_end@@Base+0xae8>  // b.lo, b.ul, b.last
   13784:	mov	w0, wzr
   13788:	ldp	x29, x30, [sp], #16
   1378c:	ret
   13790:	bl	a840 <abort@plt>
   13794:	ret
   13798:	stp	x29, x30, [sp, #-80]!
   1379c:	stp	x24, x23, [sp, #32]
   137a0:	stp	x22, x21, [sp, #48]
   137a4:	stp	x20, x19, [sp, #64]
   137a8:	ldr	x24, [x0, #48]
   137ac:	str	x25, [sp, #16]
   137b0:	mov	x29, sp
   137b4:	cbz	x24, 13804 <_option_is_end@@Base+0xbc8>
   137b8:	mov	x19, x2
   137bc:	mov	x20, x0
   137c0:	mov	x21, x1
   137c4:	mov	x22, xzr
   137c8:	b	137d8 <_option_is_end@@Base+0xb9c>
   137cc:	add	x22, x23, #0x1
   137d0:	cmp	x22, x24
   137d4:	b.cs	13804 <_option_is_end@@Base+0xbc8>  // b.hs, b.nlast
   137d8:	ldr	x8, [x20, #40]
   137dc:	sub	x9, x24, x22
   137e0:	add	x23, x22, x9, lsr #1
   137e4:	mov	x1, x19
   137e8:	ldr	x0, [x8, x23, lsl #3]
   137ec:	blr	x21
   137f0:	tbnz	w0, #31, 137cc <_option_is_end@@Base+0xb90>
   137f4:	cbz	w0, 13828 <_option_is_end@@Base+0xbec>
   137f8:	mov	x24, x23
   137fc:	cmp	x22, x24
   13800:	b.cc	137d8 <_option_is_end@@Base+0xb9c>  // b.lo, b.ul, b.last
   13804:	mov	x22, #0xffffffffffffffff    	// #-1
   13808:	add	x0, x22, #0x1
   1380c:	ldp	x20, x19, [sp, #64]
   13810:	ldp	x22, x21, [sp, #48]
   13814:	ldp	x24, x23, [sp, #32]
   13818:	ldr	x25, [sp, #16]
   1381c:	ldp	x29, x30, [sp], #80
   13820:	ret
   13824:	add	x22, x25, #0x1
   13828:	cmp	x23, x22
   1382c:	b.ls	13808 <_option_is_end@@Base+0xbcc>  // b.plast
   13830:	ldr	x8, [x20, #40]
   13834:	sub	x9, x23, x22
   13838:	lsr	x24, x9, #1
   1383c:	add	x25, x24, x22
   13840:	ldr	x0, [x8, x25, lsl #3]
   13844:	mov	x1, x19
   13848:	blr	x21
   1384c:	tbnz	w0, #31, 13824 <_option_is_end@@Base+0xbe8>
   13850:	cbnz	w0, 13860 <_option_is_end@@Base+0xc24>
   13854:	sub	x23, x25, #0x1
   13858:	cbnz	x24, 13828 <_option_is_end@@Base+0xbec>
   1385c:	b	13808 <_option_is_end@@Base+0xbcc>
   13860:	bl	a840 <abort@plt>
   13864:	stp	x29, x30, [sp, #-80]!
   13868:	cmp	x2, x3
   1386c:	str	x25, [sp, #16]
   13870:	stp	x24, x23, [sp, #32]
   13874:	stp	x22, x21, [sp, #48]
   13878:	stp	x20, x19, [sp, #64]
   1387c:	mov	x29, sp
   13880:	b.hi	13944 <_option_is_end@@Base+0xd08>  // b.pmore
   13884:	ldr	x8, [x0, #48]
   13888:	mov	x23, x3
   1388c:	mov	x22, x0
   13890:	cmp	x8, x3
   13894:	b.cc	13944 <_option_is_end@@Base+0xd08>  // b.lo, b.ul, b.last
   13898:	mov	x19, x2
   1389c:	cmp	x2, x23
   138a0:	b.cs	138e8 <_option_is_end@@Base+0xcac>  // b.hs, b.nlast
   138a4:	mov	x20, x4
   138a8:	mov	x21, x1
   138ac:	b	138bc <_option_is_end@@Base+0xc80>
   138b0:	add	x19, x24, #0x1
   138b4:	cmp	x19, x23
   138b8:	b.cs	138e8 <_option_is_end@@Base+0xcac>  // b.hs, b.nlast
   138bc:	ldr	x8, [x22, #40]
   138c0:	sub	x9, x23, x19
   138c4:	add	x24, x19, x9, lsr #1
   138c8:	mov	x1, x20
   138cc:	ldr	x0, [x8, x24, lsl #3]
   138d0:	blr	x21
   138d4:	tbnz	w0, #31, 138b0 <_option_is_end@@Base+0xc74>
   138d8:	cbz	w0, 1390c <_option_is_end@@Base+0xcd0>
   138dc:	mov	x23, x24
   138e0:	cmp	x19, x23
   138e4:	b.cc	138bc <_option_is_end@@Base+0xc80>  // b.lo, b.ul, b.last
   138e8:	mov	x19, #0xffffffffffffffff    	// #-1
   138ec:	add	x0, x19, #0x1
   138f0:	ldp	x20, x19, [sp, #64]
   138f4:	ldp	x22, x21, [sp, #48]
   138f8:	ldp	x24, x23, [sp, #32]
   138fc:	ldr	x25, [sp, #16]
   13900:	ldp	x29, x30, [sp], #80
   13904:	ret
   13908:	add	x19, x25, #0x1
   1390c:	cmp	x24, x19
   13910:	b.ls	138ec <_option_is_end@@Base+0xcb0>  // b.plast
   13914:	ldr	x8, [x22, #40]
   13918:	sub	x9, x24, x19
   1391c:	lsr	x23, x9, #1
   13920:	add	x25, x23, x19
   13924:	ldr	x0, [x8, x25, lsl #3]
   13928:	mov	x1, x20
   1392c:	blr	x21
   13930:	tbnz	w0, #31, 13908 <_option_is_end@@Base+0xccc>
   13934:	cbnz	w0, 13944 <_option_is_end@@Base+0xd08>
   13938:	sub	x24, x25, #0x1
   1393c:	cbnz	x23, 1390c <_option_is_end@@Base+0xcd0>
   13940:	b	138ec <_option_is_end@@Base+0xcb0>
   13944:	bl	a840 <abort@plt>
   13948:	stp	x29, x30, [sp, #-80]!
   1394c:	stp	x24, x23, [sp, #32]
   13950:	stp	x22, x21, [sp, #48]
   13954:	stp	x20, x19, [sp, #64]
   13958:	ldr	x24, [x0, #48]
   1395c:	str	x25, [sp, #16]
   13960:	mov	x29, sp
   13964:	cbz	x24, 139b4 <_option_is_end@@Base+0xd78>
   13968:	mov	x19, x2
   1396c:	mov	x21, x0
   13970:	mov	x22, x1
   13974:	mov	x20, xzr
   13978:	b	13988 <_option_is_end@@Base+0xd4c>
   1397c:	add	x20, x23, #0x1
   13980:	cmp	x20, x24
   13984:	b.cs	139b4 <_option_is_end@@Base+0xd78>  // b.hs, b.nlast
   13988:	ldr	x8, [x21, #40]
   1398c:	sub	x9, x24, x20
   13990:	add	x23, x20, x9, lsr #1
   13994:	mov	x1, x19
   13998:	ldr	x0, [x8, x23, lsl #3]
   1399c:	blr	x22
   139a0:	tbnz	w0, #31, 1397c <_option_is_end@@Base+0xd40>
   139a4:	cbz	w0, 139d8 <_option_is_end@@Base+0xd9c>
   139a8:	mov	x24, x23
   139ac:	cmp	x20, x24
   139b0:	b.cc	13988 <_option_is_end@@Base+0xd4c>  // b.lo, b.ul, b.last
   139b4:	mov	x20, #0xffffffffffffffff    	// #-1
   139b8:	mov	x0, x20
   139bc:	ldp	x20, x19, [sp, #64]
   139c0:	ldp	x22, x21, [sp, #48]
   139c4:	ldp	x24, x23, [sp, #32]
   139c8:	ldr	x25, [sp, #16]
   139cc:	ldp	x29, x30, [sp], #80
   139d0:	ret
   139d4:	add	x20, x25, #0x1
   139d8:	cmp	x23, x20
   139dc:	b.ls	139b8 <_option_is_end@@Base+0xd7c>  // b.plast
   139e0:	ldr	x8, [x21, #40]
   139e4:	sub	x9, x23, x20
   139e8:	lsr	x24, x9, #1
   139ec:	add	x25, x24, x20
   139f0:	ldr	x0, [x8, x25, lsl #3]
   139f4:	mov	x1, x19
   139f8:	blr	x22
   139fc:	tbnz	w0, #31, 139d4 <_option_is_end@@Base+0xd98>
   13a00:	cbnz	w0, 13a10 <_option_is_end@@Base+0xdd4>
   13a04:	sub	x23, x25, #0x1
   13a08:	cbnz	x24, 139d8 <_option_is_end@@Base+0xd9c>
   13a0c:	b	139b8 <_option_is_end@@Base+0xd7c>
   13a10:	bl	a840 <abort@plt>
   13a14:	stp	x29, x30, [sp, #-80]!
   13a18:	cmp	x2, x3
   13a1c:	str	x25, [sp, #16]
   13a20:	stp	x24, x23, [sp, #32]
   13a24:	stp	x22, x21, [sp, #48]
   13a28:	stp	x20, x19, [sp, #64]
   13a2c:	mov	x29, sp
   13a30:	b.hi	13af4 <_option_is_end@@Base+0xeb8>  // b.pmore
   13a34:	ldr	x8, [x0, #48]
   13a38:	mov	x23, x3
   13a3c:	mov	x22, x0
   13a40:	cmp	x8, x3
   13a44:	b.cc	13af4 <_option_is_end@@Base+0xeb8>  // b.lo, b.ul, b.last
   13a48:	mov	x19, x2
   13a4c:	cmp	x2, x23
   13a50:	b.cs	13a98 <_option_is_end@@Base+0xe5c>  // b.hs, b.nlast
   13a54:	mov	x20, x4
   13a58:	mov	x21, x1
   13a5c:	b	13a6c <_option_is_end@@Base+0xe30>
   13a60:	add	x19, x24, #0x1
   13a64:	cmp	x19, x23
   13a68:	b.cs	13a98 <_option_is_end@@Base+0xe5c>  // b.hs, b.nlast
   13a6c:	ldr	x8, [x22, #40]
   13a70:	sub	x9, x23, x19
   13a74:	add	x24, x19, x9, lsr #1
   13a78:	mov	x1, x20
   13a7c:	ldr	x0, [x8, x24, lsl #3]
   13a80:	blr	x21
   13a84:	tbnz	w0, #31, 13a60 <_option_is_end@@Base+0xe24>
   13a88:	cbz	w0, 13abc <_option_is_end@@Base+0xe80>
   13a8c:	mov	x23, x24
   13a90:	cmp	x19, x23
   13a94:	b.cc	13a6c <_option_is_end@@Base+0xe30>  // b.lo, b.ul, b.last
   13a98:	mov	x19, #0xffffffffffffffff    	// #-1
   13a9c:	mov	x0, x19
   13aa0:	ldp	x20, x19, [sp, #64]
   13aa4:	ldp	x22, x21, [sp, #48]
   13aa8:	ldp	x24, x23, [sp, #32]
   13aac:	ldr	x25, [sp, #16]
   13ab0:	ldp	x29, x30, [sp], #80
   13ab4:	ret
   13ab8:	add	x19, x25, #0x1
   13abc:	cmp	x24, x19
   13ac0:	b.ls	13a9c <_option_is_end@@Base+0xe60>  // b.plast
   13ac4:	ldr	x8, [x22, #40]
   13ac8:	sub	x9, x24, x19
   13acc:	lsr	x23, x9, #1
   13ad0:	add	x25, x23, x19
   13ad4:	ldr	x0, [x8, x25, lsl #3]
   13ad8:	mov	x1, x20
   13adc:	blr	x21
   13ae0:	tbnz	w0, #31, 13ab8 <_option_is_end@@Base+0xe7c>
   13ae4:	cbnz	w0, 13af4 <_option_is_end@@Base+0xeb8>
   13ae8:	sub	x24, x25, #0x1
   13aec:	cbnz	x23, 13abc <_option_is_end@@Base+0xe80>
   13af0:	b	13a9c <_option_is_end@@Base+0xe60>
   13af4:	bl	a840 <abort@plt>
   13af8:	stp	x29, x30, [sp, #-64]!
   13afc:	stp	x24, x23, [sp, #16]
   13b00:	stp	x22, x21, [sp, #32]
   13b04:	stp	x20, x19, [sp, #48]
   13b08:	ldr	x23, [x0, #48]
   13b0c:	mov	x20, x2
   13b10:	mov	x19, x0
   13b14:	mov	x29, sp
   13b18:	cbz	x23, 13b6c <_option_is_end@@Base+0xf30>
   13b1c:	mov	x21, x1
   13b20:	mov	x24, xzr
   13b24:	b	13b38 <_option_is_end@@Base+0xefc>
   13b28:	add	x24, x22, #0x1
   13b2c:	cmp	x23, x24
   13b30:	mov	x22, x24
   13b34:	b.ls	13b5c <_option_is_end@@Base+0xf20>  // b.plast
   13b38:	ldr	x8, [x19, #40]
   13b3c:	sub	x9, x23, x24
   13b40:	add	x22, x24, x9, lsr #1
   13b44:	mov	x1, x20
   13b48:	ldr	x0, [x8, x22, lsl #3]
   13b4c:	blr	x21
   13b50:	tbnz	w0, #31, 13b28 <_option_is_end@@Base+0xeec>
   13b54:	mov	x23, x22
   13b58:	cbnz	w0, 13b2c <_option_is_end@@Base+0xef0>
   13b5c:	ldr	x21, [x19, #48]
   13b60:	cmp	x21, x22
   13b64:	b.cs	13b74 <_option_is_end@@Base+0xf38>  // b.hs, b.nlast
   13b68:	bl	a840 <abort@plt>
   13b6c:	mov	x22, xzr
   13b70:	mov	x21, xzr
   13b74:	ldr	x8, [x19, #56]
   13b78:	cmp	x21, x8
   13b7c:	b.ne	13ba4 <_option_is_end@@Base+0xf68>  // b.any
   13b80:	lsl	x8, x21, #1
   13b84:	cmp	x21, #0x0
   13b88:	csinv	x8, x8, xzr, ge  // ge = tcont
   13b8c:	adds	x8, x8, #0x1
   13b90:	csinv	x23, x8, xzr, cc  // cc = lo, ul, last
   13b94:	lsr	x8, x23, #61
   13b98:	cbz	x8, 13bb4 <_option_is_end@@Base+0xf78>
   13b9c:	mov	x0, xzr
   13ba0:	b	13c00 <_option_is_end@@Base+0xfc4>
   13ba4:	ldr	x0, [x19, #40]
   13ba8:	cmp	x21, x22
   13bac:	b.hi	13bd4 <_option_is_end@@Base+0xf98>  // b.pmore
   13bb0:	b	13bf0 <_option_is_end@@Base+0xfb4>
   13bb4:	ldr	x0, [x19, #40]
   13bb8:	lsl	x1, x23, #3
   13bbc:	bl	a720 <realloc@plt>
   13bc0:	cbz	x0, 13c00 <_option_is_end@@Base+0xfc4>
   13bc4:	str	x0, [x19, #40]
   13bc8:	str	x23, [x19, #56]
   13bcc:	cmp	x21, x22
   13bd0:	b.ls	13bf0 <_option_is_end@@Base+0xfb4>  // b.plast
   13bd4:	mov	x8, x21
   13bd8:	add	x9, x0, x8, lsl #3
   13bdc:	ldur	x10, [x9, #-8]
   13be0:	sub	x8, x8, #0x1
   13be4:	cmp	x8, x22
   13be8:	str	x10, [x9]
   13bec:	b.hi	13bd8 <_option_is_end@@Base+0xf9c>  // b.pmore
   13bf0:	str	x20, [x0, x22, lsl #3]
   13bf4:	add	x8, x21, #0x1
   13bf8:	add	x0, x22, #0x1
   13bfc:	str	x8, [x19, #48]
   13c00:	ldp	x20, x19, [sp, #48]
   13c04:	ldp	x22, x21, [sp, #32]
   13c08:	ldp	x24, x23, [sp, #16]
   13c0c:	ldp	x29, x30, [sp], #64
   13c10:	ret
   13c14:	stp	x29, x30, [sp, #-80]!
   13c18:	stp	x24, x23, [sp, #32]
   13c1c:	stp	x22, x21, [sp, #48]
   13c20:	stp	x20, x19, [sp, #64]
   13c24:	ldr	x24, [x0, #48]
   13c28:	str	x25, [sp, #16]
   13c2c:	mov	x29, sp
   13c30:	cbz	x24, 13d64 <_option_is_end@@Base+0x1128>
   13c34:	mov	x20, x2
   13c38:	mov	x19, x0
   13c3c:	mov	x21, x1
   13c40:	mov	x22, xzr
   13c44:	b	13c54 <_option_is_end@@Base+0x1018>
   13c48:	add	x22, x23, #0x1
   13c4c:	cmp	x22, x24
   13c50:	b.cs	13d64 <_option_is_end@@Base+0x1128>  // b.hs, b.nlast
   13c54:	ldr	x8, [x19, #40]
   13c58:	sub	x9, x24, x22
   13c5c:	add	x23, x22, x9, lsr #1
   13c60:	mov	x1, x20
   13c64:	ldr	x0, [x8, x23, lsl #3]
   13c68:	blr	x21
   13c6c:	tbnz	w0, #31, 13c48 <_option_is_end@@Base+0x100c>
   13c70:	cbz	w0, 13c88 <_option_is_end@@Base+0x104c>
   13c74:	mov	x24, x23
   13c78:	cmp	x22, x24
   13c7c:	b.cc	13c54 <_option_is_end@@Base+0x1018>  // b.lo, b.ul, b.last
   13c80:	b	13d64 <_option_is_end@@Base+0x1128>
   13c84:	add	x22, x25, #0x1
   13c88:	cmp	x23, x22
   13c8c:	b.ls	13cbc <_option_is_end@@Base+0x1080>  // b.plast
   13c90:	ldr	x8, [x19, #40]
   13c94:	sub	x9, x23, x22
   13c98:	lsr	x24, x9, #1
   13c9c:	add	x25, x24, x22
   13ca0:	ldr	x0, [x8, x25, lsl #3]
   13ca4:	mov	x1, x20
   13ca8:	blr	x21
   13cac:	tbnz	w0, #31, 13c84 <_option_is_end@@Base+0x1048>
   13cb0:	cbnz	w0, 13d80 <_option_is_end@@Base+0x1144>
   13cb4:	sub	x23, x25, #0x1
   13cb8:	cbnz	x24, 13c88 <_option_is_end@@Base+0x104c>
   13cbc:	cmn	x22, #0x1
   13cc0:	b.eq	13d64 <_option_is_end@@Base+0x1128>  // b.none
   13cc4:	ldr	x20, [x19, #48]
   13cc8:	cmp	x20, x22
   13ccc:	b.ls	13d80 <_option_is_end@@Base+0x1144>  // b.plast
   13cd0:	ldr	x8, [x19, #24]
   13cd4:	ldr	x21, [x19, #40]
   13cd8:	cbz	x8, 13ce4 <_option_is_end@@Base+0x10a8>
   13cdc:	ldr	x0, [x21, x22, lsl #3]
   13ce0:	blr	x8
   13ce4:	add	x8, x22, #0x1
   13ce8:	cmp	x8, x20
   13cec:	b.cs	13d54 <_option_is_end@@Base+0x1118>  // b.hs, b.nlast
   13cf0:	mvn	x9, x22
   13cf4:	add	x9, x20, x9
   13cf8:	cmp	x9, #0x4
   13cfc:	b.cc	13d38 <_option_is_end@@Base+0x10fc>  // b.lo, b.ul, b.last
   13d00:	and	x10, x9, #0xfffffffffffffffc
   13d04:	add	x11, x21, x22, lsl #3
   13d08:	add	x8, x8, x10
   13d0c:	add	x22, x22, x10
   13d10:	add	x11, x11, #0x10
   13d14:	mov	x12, x10
   13d18:	ldur	q0, [x11, #-8]
   13d1c:	ldur	q1, [x11, #8]
   13d20:	subs	x12, x12, #0x4
   13d24:	stp	q0, q1, [x11, #-16]
   13d28:	add	x11, x11, #0x20
   13d2c:	b.ne	13d18 <_option_is_end@@Base+0x10dc>  // b.any
   13d30:	cmp	x9, x10
   13d34:	b.eq	13d54 <_option_is_end@@Base+0x1118>  // b.none
   13d38:	ldr	x10, [x21, x8, lsl #3]
   13d3c:	mov	x9, x8
   13d40:	add	x8, x8, #0x1
   13d44:	cmp	x20, x8
   13d48:	str	x10, [x21, x22, lsl #3]
   13d4c:	mov	x22, x9
   13d50:	b.ne	13d38 <_option_is_end@@Base+0x10fc>  // b.any
   13d54:	sub	x8, x20, #0x1
   13d58:	mov	w0, #0x1                   	// #1
   13d5c:	str	x8, [x19, #48]
   13d60:	b	13d68 <_option_is_end@@Base+0x112c>
   13d64:	mov	w0, wzr
   13d68:	ldp	x20, x19, [sp, #64]
   13d6c:	ldp	x22, x21, [sp, #48]
   13d70:	ldp	x24, x23, [sp, #32]
   13d74:	ldr	x25, [sp, #16]
   13d78:	ldp	x29, x30, [sp], #80
   13d7c:	ret
   13d80:	bl	a840 <abort@plt>

0000000000013d84 <rotl64@@Base>:
   13d84:	neg	w8, w1
   13d88:	ror	x0, x0, x8
   13d8c:	ret

0000000000013d90 <rotr64@@Base>:
   13d90:	ror	x0, x0, x1
   13d94:	ret

0000000000013d98 <rotl32@@Base>:
   13d98:	neg	w8, w1
   13d9c:	ror	w0, w0, w8
   13da0:	ret

0000000000013da4 <rotr32@@Base>:
   13da4:	ror	w0, w0, w1
   13da8:	ret

0000000000013dac <rotl_sz@@Base>:
   13dac:	sxtw	x9, w1
   13db0:	neg	x9, x9
   13db4:	lsl	x8, x0, x1
   13db8:	lsr	x9, x0, x9
   13dbc:	orr	x0, x9, x8
   13dc0:	ret

0000000000013dc4 <rotr_sz@@Base>:
   13dc4:	sxtw	x9, w1
   13dc8:	neg	x9, x9
   13dcc:	lsr	x8, x0, x1
   13dd0:	lsl	x9, x0, x9
   13dd4:	orr	x0, x9, x8
   13dd8:	ret

0000000000013ddc <rotl16@@Base>:
   13ddc:	neg	w10, w1
   13de0:	and	w8, w0, #0xffff
   13de4:	and	w9, w1, #0xf
   13de8:	and	w10, w10, #0xf
   13dec:	lsl	w9, w0, w9
   13df0:	lsr	w8, w8, w10
   13df4:	orr	w0, w9, w8
   13df8:	ret

0000000000013dfc <rotr16@@Base>:
   13dfc:	and	w8, w0, #0xffff
   13e00:	and	w9, w1, #0xf
   13e04:	neg	w10, w1
   13e08:	lsr	w8, w8, w9
   13e0c:	and	w9, w10, #0xf
   13e10:	lsl	w9, w0, w9
   13e14:	orr	w0, w9, w8
   13e18:	ret

0000000000013e1c <rotl8@@Base>:
   13e1c:	neg	w10, w1
   13e20:	and	w8, w0, #0xff
   13e24:	and	w9, w1, #0x7
   13e28:	and	w10, w10, #0x7
   13e2c:	lsl	w9, w0, w9
   13e30:	lsr	w8, w8, w10
   13e34:	orr	w0, w9, w8
   13e38:	ret

0000000000013e3c <rotr8@@Base>:
   13e3c:	and	w8, w0, #0xff
   13e40:	and	w9, w1, #0x7
   13e44:	neg	w10, w1
   13e48:	lsr	w8, w8, w9
   13e4c:	and	w9, w10, #0x7
   13e50:	lsl	w9, w0, w9
   13e54:	orr	w0, w9, w8
   13e58:	ret

0000000000013e5c <canonicalize_filename_mode@@Base>:
   13e5c:	sub	sp, sp, #0x110
   13e60:	stp	x26, x25, [sp, #208]
   13e64:	and	w26, w1, #0x3
   13e68:	sub	w8, w26, #0x1
   13e6c:	tst	w26, w8
   13e70:	stp	x29, x30, [sp, #176]
   13e74:	stp	x28, x27, [sp, #192]
   13e78:	stp	x24, x23, [sp, #224]
   13e7c:	stp	x22, x21, [sp, #240]
   13e80:	stp	x20, x19, [sp, #256]
   13e84:	add	x29, sp, #0xb0
   13e88:	b.ne	13eb4 <canonicalize_filename_mode@@Base+0x58>  // b.any
   13e8c:	mov	x27, x0
   13e90:	cbz	x0, 13eb4 <canonicalize_filename_mode@@Base+0x58>
   13e94:	ldrb	w8, [x27]
   13e98:	mov	w22, w1
   13e9c:	cmp	w8, #0x2f
   13ea0:	b.eq	13ee8 <canonicalize_filename_mode@@Base+0x8c>  // b.none
   13ea4:	cbnz	w8, 14288 <canonicalize_filename_mode@@Base+0x42c>
   13ea8:	bl	ad80 <__errno_location@plt>
   13eac:	mov	w8, #0x2                   	// #2
   13eb0:	b	13ebc <canonicalize_filename_mode@@Base+0x60>
   13eb4:	bl	ad80 <__errno_location@plt>
   13eb8:	mov	w8, #0x16                  	// #22
   13ebc:	mov	x21, xzr
   13ec0:	str	w8, [x0]
   13ec4:	mov	x0, x21
   13ec8:	ldp	x20, x19, [sp, #256]
   13ecc:	ldp	x22, x21, [sp, #240]
   13ed0:	ldp	x24, x23, [sp, #224]
   13ed4:	ldp	x26, x25, [sp, #208]
   13ed8:	ldp	x28, x27, [sp, #192]
   13edc:	ldp	x29, x30, [sp, #176]
   13ee0:	add	sp, sp, #0x110
   13ee4:	ret
   13ee8:	mov	w0, #0x1000                	// #4096
   13eec:	bl	a650 <xmalloc@plt>
   13ef0:	mov	w8, #0x2f                  	// #47
   13ef4:	mov	x19, x0
   13ef8:	mov	x21, x0
   13efc:	add	x20, x0, #0x1, lsl #12
   13f00:	strb	w8, [x19], #1
   13f04:	ldrb	w8, [x27]
   13f08:	cbz	w8, 142e4 <canonicalize_filename_mode@@Base+0x488>
   13f0c:	and	w9, w22, #0x7
   13f10:	mov	x24, x19
   13f14:	mov	x23, x27
   13f18:	stp	xzr, xzr, [sp, #8]
   13f1c:	str	xzr, [sp, #24]
   13f20:	stp	w22, w9, [sp, #32]
   13f24:	b	13f38 <canonicalize_filename_mode@@Base+0xdc>
   13f28:	mov	x19, x24
   13f2c:	ldrb	w8, [x23]
   13f30:	mov	x24, x19
   13f34:	cbz	w8, 142e8 <canonicalize_filename_mode@@Base+0x48c>
   13f38:	and	w9, w8, #0xff
   13f3c:	cmp	w9, #0x2f
   13f40:	mov	x28, x23
   13f44:	b.ne	13f58 <canonicalize_filename_mode@@Base+0xfc>  // b.any
   13f48:	ldrb	w8, [x28, #1]!
   13f4c:	cmp	w8, #0x2f
   13f50:	b.eq	13f48 <canonicalize_filename_mode@@Base+0xec>  // b.none
   13f54:	mov	x23, x28
   13f58:	mov	w9, w8
   13f5c:	ands	w9, w9, #0xff
   13f60:	b.eq	13f78 <canonicalize_filename_mode@@Base+0x11c>  // b.none
   13f64:	cmp	w9, #0x2f
   13f68:	b.eq	13f78 <canonicalize_filename_mode@@Base+0x11c>  // b.none
   13f6c:	ldrb	w9, [x23, #1]!
   13f70:	ands	w9, w9, #0xff
   13f74:	b.ne	13f64 <canonicalize_filename_mode@@Base+0x108>  // b.any
   13f78:	sub	x25, x23, x28
   13f7c:	cmp	x25, #0x1
   13f80:	b.eq	13fdc <canonicalize_filename_mode@@Base+0x180>  // b.none
   13f84:	cmp	x25, #0x2
   13f88:	b.eq	13f94 <canonicalize_filename_mode@@Base+0x138>  // b.none
   13f8c:	cbnz	x25, 13fe8 <canonicalize_filename_mode@@Base+0x18c>
   13f90:	b	142cc <canonicalize_filename_mode@@Base+0x470>
   13f94:	and	w8, w8, #0xff
   13f98:	cmp	w8, #0x2e
   13f9c:	b.ne	13fe8 <canonicalize_filename_mode@@Base+0x18c>  // b.any
   13fa0:	ldrb	w8, [x28, #1]
   13fa4:	cmp	w8, #0x2e
   13fa8:	b.ne	13fe8 <canonicalize_filename_mode@@Base+0x18c>  // b.any
   13fac:	add	x8, x21, #0x1
   13fb0:	cmp	x24, x8
   13fb4:	b.ls	13f28 <canonicalize_filename_mode@@Base+0xcc>  // b.plast
   13fb8:	sub	x8, x24, #0x1
   13fbc:	mov	x19, x8
   13fc0:	cmp	x8, x21
   13fc4:	b.ls	13f2c <canonicalize_filename_mode@@Base+0xd0>  // b.plast
   13fc8:	mov	x8, x19
   13fcc:	ldrb	w9, [x8, #-1]!
   13fd0:	cmp	w9, #0x2f
   13fd4:	b.ne	13fbc <canonicalize_filename_mode@@Base+0x160>  // b.any
   13fd8:	b	13f2c <canonicalize_filename_mode@@Base+0xd0>
   13fdc:	and	w8, w8, #0xff
   13fe0:	cmp	w8, #0x2e
   13fe4:	b.eq	13f28 <canonicalize_filename_mode@@Base+0xcc>  // b.none
   13fe8:	ldurb	w8, [x24, #-1]
   13fec:	cmp	w8, #0x2f
   13ff0:	b.eq	13ffc <canonicalize_filename_mode@@Base+0x1a0>  // b.none
   13ff4:	mov	w8, #0x2f                  	// #47
   13ff8:	strb	w8, [x24], #1
   13ffc:	add	x8, x24, x25
   14000:	cmp	x8, x20
   14004:	b.cc	14038 <canonicalize_filename_mode@@Base+0x1dc>  // b.lo, b.ul, b.last
   14008:	cmp	x25, #0x1, lsl #12
   1400c:	mov	w9, #0x1000                	// #4096
   14010:	sub	x8, x20, x21
   14014:	csinc	x9, x9, x25, lt  // lt = tstop
   14018:	add	x22, x9, x8
   1401c:	mov	x0, x21
   14020:	mov	x1, x22
   14024:	sub	x19, x24, x21
   14028:	bl	a5b0 <xrealloc@plt>
   1402c:	mov	x21, x0
   14030:	add	x20, x0, x22
   14034:	add	x24, x0, x19
   14038:	mov	x0, x24
   1403c:	mov	x1, x28
   14040:	mov	x2, x25
   14044:	bl	a210 <memcpy@plt>
   14048:	ldr	w8, [sp, #36]
   1404c:	add	x19, x24, x25
   14050:	strb	wzr, [x19]
   14054:	cmp	w8, #0x6
   14058:	b.eq	1408c <canonicalize_filename_mode@@Base+0x230>  // b.none
   1405c:	ldr	w8, [sp, #32]
   14060:	tbnz	w8, #2, 140a4 <canonicalize_filename_mode@@Base+0x248>
   14064:	add	x2, sp, #0x28
   14068:	mov	w0, wzr
   1406c:	mov	x1, x21
   14070:	bl	ab50 <__lxstat@plt>
   14074:	cbz	w0, 140b8 <canonicalize_filename_mode@@Base+0x25c>
   14078:	bl	ad80 <__errno_location@plt>
   1407c:	ldr	w22, [x0]
   14080:	cmp	w26, #0x1
   14084:	b.eq	140d4 <canonicalize_filename_mode@@Base+0x278>  // b.none
   14088:	cbz	w26, 14348 <canonicalize_filename_mode@@Base+0x4ec>
   1408c:	str	wzr, [sp, #56]
   14090:	cmp	w26, #0x2
   14094:	b.eq	140f4 <canonicalize_filename_mode@@Base+0x298>  // b.none
   14098:	ldrb	w8, [x23]
   1409c:	cbz	w8, 140f4 <canonicalize_filename_mode@@Base+0x298>
   140a0:	b	14344 <canonicalize_filename_mode@@Base+0x4e8>
   140a4:	add	x2, sp, #0x28
   140a8:	mov	w0, wzr
   140ac:	mov	x1, x21
   140b0:	bl	adc0 <__xstat@plt>
   140b4:	cbnz	w0, 14078 <canonicalize_filename_mode@@Base+0x21c>
   140b8:	ldr	w8, [sp, #56]
   140bc:	and	w8, w8, #0xf000
   140c0:	cmp	w8, #0xa, lsl #12
   140c4:	b.eq	14100 <canonicalize_filename_mode@@Base+0x2a4>  // b.none
   140c8:	cmp	w8, #0x4, lsl #12
   140cc:	b.eq	140f4 <canonicalize_filename_mode@@Base+0x298>  // b.none
   140d0:	b	14090 <canonicalize_filename_mode@@Base+0x234>
   140d4:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   140d8:	mov	x0, x23
   140dc:	add	x1, x1, #0x1db
   140e0:	bl	aa30 <strspn@plt>
   140e4:	cmp	w22, #0x2
   140e8:	b.ne	14348 <canonicalize_filename_mode@@Base+0x4ec>  // b.any
   140ec:	ldrb	w8, [x23, x0]
   140f0:	cbnz	w8, 14348 <canonicalize_filename_mode@@Base+0x4ec>
   140f4:	mov	x22, x23
   140f8:	mov	x23, x22
   140fc:	b	13f2c <canonicalize_filename_mode@@Base+0xd0>
   14100:	ldr	x0, [sp, #24]
   14104:	cbnz	x0, 14130 <canonicalize_filename_mode@@Base+0x2d4>
   14108:	adrp	x2, 42000 <vasnprintf@@Base+0x1424c>
   1410c:	adrp	x3, 42000 <vasnprintf@@Base+0x1424c>
   14110:	adrp	x4, 42000 <vasnprintf@@Base+0x1424c>
   14114:	ldr	x2, [x2, #3888]
   14118:	ldr	x3, [x3, #3928]
   1411c:	ldr	x4, [x4, #3848]
   14120:	mov	w0, #0x7                   	// #7
   14124:	mov	x1, xzr
   14128:	bl	a740 <hash_initialize@plt>
   1412c:	cbz	x0, 14384 <canonicalize_filename_mode@@Base+0x528>
   14130:	add	x2, sp, #0x28
   14134:	mov	x1, x27
   14138:	mov	x22, x0
   1413c:	bl	a920 <seen_file@plt>
   14140:	str	x22, [sp, #24]
   14144:	tbz	w0, #0, 14154 <canonicalize_filename_mode@@Base+0x2f8>
   14148:	cmp	w26, #0x2
   1414c:	b.eq	13f2c <canonicalize_filename_mode@@Base+0xd0>  // b.none
   14150:	b	14374 <canonicalize_filename_mode@@Base+0x518>
   14154:	add	x2, sp, #0x28
   14158:	mov	x0, x22
   1415c:	mov	x1, x27
   14160:	bl	a550 <record_file@plt>
   14164:	ldr	x1, [sp, #88]
   14168:	mov	x0, x21
   1416c:	bl	aa60 <areadlink_with_size@plt>
   14170:	cbz	x0, 141c4 <canonicalize_filename_mode@@Base+0x368>
   14174:	mov	x28, x0
   14178:	bl	a280 <strlen@plt>
   1417c:	mov	x22, x0
   14180:	mov	x0, x23
   14184:	bl	a280 <strlen@plt>
   14188:	ldr	x8, [sp, #8]
   1418c:	add	x2, x0, #0x1
   14190:	add	x27, x2, x22
   14194:	str	x22, [sp]
   14198:	cbz	x8, 141e0 <canonicalize_filename_mode@@Base+0x384>
   1419c:	cmp	x27, x8
   141a0:	b.ls	14204 <canonicalize_filename_mode@@Base+0x3a8>  // b.plast
   141a4:	ldr	x0, [sp, #16]
   141a8:	mov	x1, x27
   141ac:	mov	x22, x2
   141b0:	bl	a5b0 <xrealloc@plt>
   141b4:	mov	x2, x22
   141b8:	mov	x22, x0
   141bc:	str	x27, [sp, #8]
   141c0:	b	14208 <canonicalize_filename_mode@@Base+0x3ac>
   141c4:	bl	ad80 <__errno_location@plt>
   141c8:	cmp	w26, #0x2
   141cc:	b.ne	1437c <canonicalize_filename_mode@@Base+0x520>  // b.any
   141d0:	ldr	w8, [x0]
   141d4:	cmp	w8, #0xc
   141d8:	b.ne	13f2c <canonicalize_filename_mode@@Base+0xd0>  // b.any
   141dc:	b	1437c <canonicalize_filename_mode@@Base+0x520>
   141e0:	cmp	x27, #0x1, lsl #12
   141e4:	mov	w8, #0x1000                	// #4096
   141e8:	csel	x0, x27, x8, hi  // hi = pmore
   141ec:	str	x0, [sp, #8]
   141f0:	mov	x22, x2
   141f4:	bl	a650 <xmalloc@plt>
   141f8:	mov	x2, x22
   141fc:	mov	x22, x0
   14200:	b	14208 <canonicalize_filename_mode@@Base+0x3ac>
   14204:	ldr	x22, [sp, #16]
   14208:	ldr	x27, [sp]
   1420c:	mov	x1, x23
   14210:	add	x0, x22, x27
   14214:	bl	a220 <memmove@plt>
   14218:	mov	x0, x22
   1421c:	mov	x1, x28
   14220:	mov	x2, x27
   14224:	bl	a210 <memcpy@plt>
   14228:	ldrb	w8, [x28]
   1422c:	cmp	w8, #0x2f
   14230:	add	x8, x21, #0x1
   14234:	b.ne	14248 <canonicalize_filename_mode@@Base+0x3ec>  // b.any
   14238:	mov	w9, #0x2f                  	// #47
   1423c:	strb	w9, [x21]
   14240:	mov	x19, x8
   14244:	b	14274 <canonicalize_filename_mode@@Base+0x418>
   14248:	cmp	x19, x8
   1424c:	b.ls	14274 <canonicalize_filename_mode@@Base+0x418>  // b.plast
   14250:	add	x8, x24, x25
   14254:	sub	x8, x8, #0x1
   14258:	mov	x19, x8
   1425c:	cmp	x8, x21
   14260:	b.ls	14274 <canonicalize_filename_mode@@Base+0x418>  // b.plast
   14264:	mov	x8, x19
   14268:	ldrb	w9, [x8, #-1]!
   1426c:	cmp	w9, #0x2f
   14270:	b.ne	14258 <canonicalize_filename_mode@@Base+0x3fc>  // b.any
   14274:	mov	x0, x28
   14278:	bl	a960 <free@plt>
   1427c:	mov	x27, x22
   14280:	str	x22, [sp, #16]
   14284:	b	140f8 <canonicalize_filename_mode@@Base+0x29c>
   14288:	bl	aec0 <xgetcwd@plt>
   1428c:	mov	x21, x0
   14290:	cbz	x0, 13ec4 <canonicalize_filename_mode@@Base+0x68>
   14294:	mov	x0, x21
   14298:	bl	a280 <strlen@plt>
   1429c:	mov	x20, x0
   142a0:	cmp	x0, #0xfff
   142a4:	b.gt	142d4 <canonicalize_filename_mode@@Base+0x478>
   142a8:	mov	w1, #0x1000                	// #4096
   142ac:	mov	x0, x21
   142b0:	bl	a5b0 <xrealloc@plt>
   142b4:	mov	x21, x0
   142b8:	add	x19, x0, x20
   142bc:	add	x20, x0, #0x1, lsl #12
   142c0:	ldrb	w8, [x27]
   142c4:	cbnz	w8, 13f0c <canonicalize_filename_mode@@Base+0xb0>
   142c8:	b	142e4 <canonicalize_filename_mode@@Base+0x488>
   142cc:	mov	x19, x24
   142d0:	b	142e8 <canonicalize_filename_mode@@Base+0x48c>
   142d4:	add	x20, x21, x20
   142d8:	mov	x19, x20
   142dc:	ldrb	w8, [x27]
   142e0:	cbnz	w8, 13f0c <canonicalize_filename_mode@@Base+0xb0>
   142e4:	stp	xzr, xzr, [sp, #16]
   142e8:	add	x8, x21, #0x1
   142ec:	cmp	x19, x8
   142f0:	b.ls	14304 <canonicalize_filename_mode@@Base+0x4a8>  // b.plast
   142f4:	mov	x8, x19
   142f8:	ldrb	w9, [x8, #-1]!
   142fc:	cmp	w9, #0x2f
   14300:	csel	x19, x8, x19, eq  // eq = none
   14304:	ldr	x22, [sp, #16]
   14308:	mov	x8, x19
   1430c:	strb	wzr, [x8], #1
   14310:	cmp	x20, x8
   14314:	b.eq	1432c <canonicalize_filename_mode@@Base+0x4d0>  // b.none
   14318:	sub	x8, x19, x21
   1431c:	add	x1, x8, #0x1
   14320:	mov	x0, x21
   14324:	bl	a5b0 <xrealloc@plt>
   14328:	mov	x21, x0
   1432c:	mov	x0, x22
   14330:	bl	a960 <free@plt>
   14334:	ldr	x0, [sp, #24]
   14338:	cbz	x0, 13ec4 <canonicalize_filename_mode@@Base+0x68>
   1433c:	bl	a4d0 <hash_free@plt>
   14340:	b	13ec4 <canonicalize_filename_mode@@Base+0x68>
   14344:	mov	w22, #0x14                  	// #20
   14348:	ldr	x0, [sp, #16]
   1434c:	bl	a960 <free@plt>
   14350:	mov	x0, x21
   14354:	bl	a960 <free@plt>
   14358:	ldr	x0, [sp, #24]
   1435c:	cbz	x0, 14364 <canonicalize_filename_mode@@Base+0x508>
   14360:	bl	a4d0 <hash_free@plt>
   14364:	bl	ad80 <__errno_location@plt>
   14368:	mov	x21, xzr
   1436c:	str	w22, [x0]
   14370:	b	13ec4 <canonicalize_filename_mode@@Base+0x68>
   14374:	mov	w22, #0x28                  	// #40
   14378:	b	14348 <canonicalize_filename_mode@@Base+0x4ec>
   1437c:	ldr	w22, [x0]
   14380:	b	14348 <canonicalize_filename_mode@@Base+0x4ec>
   14384:	bl	a7d0 <xalloc_die@plt>

0000000000014388 <set_cloexec_flag@@Base>:
   14388:	stp	x29, x30, [sp, #-32]!
   1438c:	stp	x20, x19, [sp, #16]
   14390:	mov	w20, w1
   14394:	mov	w1, #0x1                   	// #1
   14398:	mov	w2, wzr
   1439c:	mov	x29, sp
   143a0:	mov	w19, w0
   143a4:	bl	aac0 <rpl_fcntl@plt>
   143a8:	tbnz	w0, #31, 143cc <set_cloexec_flag@@Base+0x44>
   143ac:	orr	w8, w0, #0x1
   143b0:	and	w9, w0, #0xfffffffe
   143b4:	tst	w20, #0x1
   143b8:	csel	w2, w8, w9, ne  // ne = any
   143bc:	cmp	w0, w2
   143c0:	b.ne	143d4 <set_cloexec_flag@@Base+0x4c>  // b.any
   143c4:	mov	w0, wzr
   143c8:	b	143e8 <set_cloexec_flag@@Base+0x60>
   143cc:	mov	w0, #0xffffffff            	// #-1
   143d0:	b	143e8 <set_cloexec_flag@@Base+0x60>
   143d4:	mov	w1, #0x2                   	// #2
   143d8:	mov	w0, w19
   143dc:	bl	aac0 <rpl_fcntl@plt>
   143e0:	cmn	w0, #0x1
   143e4:	csetm	w0, eq  // eq = none
   143e8:	ldp	x20, x19, [sp, #16]
   143ec:	ldp	x29, x30, [sp], #32
   143f0:	ret

00000000000143f4 <dup_cloexec@@Base>:
   143f4:	mov	w1, #0x406                 	// #1030
   143f8:	mov	w2, wzr
   143fc:	b	aac0 <rpl_fcntl@plt>

0000000000014400 <dir_name@@Base>:
   14400:	stp	x29, x30, [sp, #-16]!
   14404:	mov	x29, sp
   14408:	bl	a4a0 <mdir_name@plt>
   1440c:	cbz	x0, 14418 <dir_name@@Base+0x18>
   14410:	ldp	x29, x30, [sp], #16
   14414:	ret
   14418:	bl	a7d0 <xalloc_die@plt>

000000000001441c <base_name@@Base>:
   1441c:	stp	x29, x30, [sp, #-32]!
   14420:	stp	x20, x19, [sp, #16]
   14424:	mov	x29, sp
   14428:	mov	x19, x0
   1442c:	bl	a6c0 <last_component@plt>
   14430:	ldrb	w8, [x0]
   14434:	cbz	w8, 14454 <base_name@@Base+0x38>
   14438:	mov	x20, x0
   1443c:	bl	a1f0 <base_len@plt>
   14440:	ldrb	w8, [x20, x0]
   14444:	cmp	w8, #0x2f
   14448:	cinc	x1, x0, eq  // eq = none
   1444c:	mov	x0, x20
   14450:	b	14464 <base_name@@Base+0x48>
   14454:	mov	x0, x19
   14458:	bl	a1f0 <base_len@plt>
   1445c:	mov	x1, x0
   14460:	mov	x0, x19
   14464:	ldp	x20, x19, [sp, #16]
   14468:	ldp	x29, x30, [sp], #32
   1446c:	b	abd0 <xstrndup@plt>

0000000000014470 <dir_len@@Base>:
   14470:	stp	x29, x30, [sp, #-48]!
   14474:	str	x21, [sp, #16]
   14478:	stp	x20, x19, [sp, #32]
   1447c:	mov	x20, x0
   14480:	ldrb	w8, [x20], #-1
   14484:	mov	x29, sp
   14488:	mov	x19, x0
   1448c:	cmp	w8, #0x2f
   14490:	cset	w21, eq  // eq = none
   14494:	bl	a6c0 <last_component@plt>
   14498:	sub	x8, x0, x19
   1449c:	mov	x0, x8
   144a0:	cmp	x8, x21
   144a4:	b.ls	144b8 <dir_len@@Base+0x48>  // b.plast
   144a8:	ldrb	w8, [x20, x0]
   144ac:	cmp	w8, #0x2f
   144b0:	sub	x8, x0, #0x1
   144b4:	b.eq	1449c <dir_len@@Base+0x2c>  // b.none
   144b8:	ldp	x20, x19, [sp, #32]
   144bc:	ldr	x21, [sp, #16]
   144c0:	ldp	x29, x30, [sp], #48
   144c4:	ret

00000000000144c8 <mdir_name@@Base>:
   144c8:	stp	x29, x30, [sp, #-48]!
   144cc:	stp	x22, x21, [sp, #16]
   144d0:	stp	x20, x19, [sp, #32]
   144d4:	mov	x21, x0
   144d8:	ldrb	w8, [x21], #-1
   144dc:	mov	x29, sp
   144e0:	mov	x19, x0
   144e4:	cmp	w8, #0x2f
   144e8:	cset	w22, eq  // eq = none
   144ec:	bl	a6c0 <last_component@plt>
   144f0:	sub	x8, x0, x19
   144f4:	mov	x20, x8
   144f8:	cmp	x8, x22
   144fc:	b.ls	14510 <mdir_name@@Base+0x48>  // b.plast
   14500:	ldrb	w8, [x21, x20]
   14504:	cmp	w8, #0x2f
   14508:	sub	x8, x20, #0x1
   1450c:	b.eq	144f4 <mdir_name@@Base+0x2c>  // b.none
   14510:	cmp	x20, #0x0
   14514:	cinc	x8, x20, eq  // eq = none
   14518:	add	x0, x8, #0x1
   1451c:	bl	a540 <malloc@plt>
   14520:	mov	x21, x0
   14524:	cbz	x0, 1454c <mdir_name@@Base+0x84>
   14528:	mov	x0, x21
   1452c:	mov	x1, x19
   14530:	mov	x2, x20
   14534:	bl	a210 <memcpy@plt>
   14538:	cbnz	x20, 14548 <mdir_name@@Base+0x80>
   1453c:	mov	w8, #0x2e                  	// #46
   14540:	mov	w20, #0x1                   	// #1
   14544:	strb	w8, [x21]
   14548:	strb	wzr, [x21, x20]
   1454c:	mov	x0, x21
   14550:	ldp	x20, x19, [sp, #32]
   14554:	ldp	x22, x21, [sp, #16]
   14558:	ldp	x29, x30, [sp], #48
   1455c:	ret

0000000000014560 <last_component@@Base>:
   14560:	sub	x0, x0, #0x1
   14564:	ldrb	w10, [x0, #1]!
   14568:	cmp	w10, #0x2f
   1456c:	b.eq	14564 <last_component@@Base+0x4>  // b.none
   14570:	mov	w8, wzr
   14574:	mov	x9, x0
   14578:	b	14584 <last_component@@Base+0x24>
   1457c:	ldrb	w10, [x9, #1]!
   14580:	mov	w8, #0x1                   	// #1
   14584:	and	w10, w10, #0xff
   14588:	cmp	w10, #0x2f
   1458c:	b.eq	1457c <last_component@@Base+0x1c>  // b.none
   14590:	cbz	w10, 145a8 <last_component@@Base+0x48>
   14594:	tst	w8, #0x1
   14598:	csel	x0, x9, x0, ne  // ne = any
   1459c:	ldrb	w10, [x9, #1]!
   145a0:	mov	w8, wzr
   145a4:	b	14584 <last_component@@Base+0x24>
   145a8:	ret

00000000000145ac <base_len@@Base>:
   145ac:	stp	x29, x30, [sp, #-32]!
   145b0:	str	x19, [sp, #16]
   145b4:	mov	x29, sp
   145b8:	mov	x19, x0
   145bc:	bl	a280 <strlen@plt>
   145c0:	mov	x8, x0
   145c4:	sub	x9, x19, #0x1
   145c8:	mov	x0, x8
   145cc:	cmp	x8, #0x2
   145d0:	b.cc	145e4 <base_len@@Base+0x38>  // b.lo, b.ul, b.last
   145d4:	ldrb	w8, [x9, x0]
   145d8:	cmp	w8, #0x2f
   145dc:	sub	x8, x0, #0x1
   145e0:	b.eq	145c8 <base_len@@Base+0x1c>  // b.none
   145e4:	ldr	x19, [sp, #16]
   145e8:	ldp	x29, x30, [sp], #32
   145ec:	ret

00000000000145f0 <strip_trailing_slashes@@Base>:
   145f0:	stp	x29, x30, [sp, #-32]!
   145f4:	str	x19, [sp, #16]
   145f8:	mov	x29, sp
   145fc:	mov	x19, x0
   14600:	bl	a6c0 <last_component@plt>
   14604:	ldrb	w8, [x0]
   14608:	cmp	w8, #0x0
   1460c:	csel	x19, x19, x0, eq  // eq = none
   14610:	mov	x0, x19
   14614:	bl	a1f0 <base_len@plt>
   14618:	ldrb	w8, [x19, x0]
   1461c:	strb	wzr, [x19, x0]
   14620:	ldr	x19, [sp, #16]
   14624:	cmp	w8, #0x0
   14628:	cset	w0, ne  // ne = any
   1462c:	ldp	x29, x30, [sp], #32
   14630:	ret

0000000000014634 <fd_safer_flag@@Base>:
   14634:	stp	x29, x30, [sp, #-48]!
   14638:	stp	x20, x19, [sp, #32]
   1463c:	mov	w19, w0
   14640:	cmp	w0, #0x2
   14644:	stp	x22, x21, [sp, #16]
   14648:	mov	x29, sp
   1464c:	b.hi	1467c <fd_safer_flag@@Base+0x48>  // b.pmore
   14650:	mov	w0, w19
   14654:	bl	ab60 <dup_safer_flag@plt>
   14658:	mov	w20, w0
   1465c:	bl	ad80 <__errno_location@plt>
   14660:	ldr	w22, [x0]
   14664:	mov	x21, x0
   14668:	mov	w0, w19
   1466c:	bl	a790 <close@plt>
   14670:	str	w22, [x21]
   14674:	mov	w0, w20
   14678:	b	14680 <fd_safer_flag@@Base+0x4c>
   1467c:	mov	w0, w19
   14680:	ldp	x20, x19, [sp, #32]
   14684:	ldp	x22, x21, [sp, #16]
   14688:	ldp	x29, x30, [sp], #48
   1468c:	ret

0000000000014690 <dup_safer_flag@@Base>:
   14690:	lsl	w8, w1, #12
   14694:	mov	w9, #0x406                 	// #1030
   14698:	and	w1, w9, w8, asr #31
   1469c:	mov	w2, #0x3                   	// #3
   146a0:	b	aac0 <rpl_fcntl@plt>

00000000000146a4 <record_file@@Base>:
   146a4:	stp	x29, x30, [sp, #-48]!
   146a8:	stp	x22, x21, [sp, #16]
   146ac:	stp	x20, x19, [sp, #32]
   146b0:	mov	x29, sp
   146b4:	cbz	x0, 14714 <record_file@@Base+0x70>
   146b8:	mov	x20, x0
   146bc:	mov	w0, #0x18                  	// #24
   146c0:	mov	x21, x2
   146c4:	mov	x22, x1
   146c8:	bl	a650 <xmalloc@plt>
   146cc:	mov	x19, x0
   146d0:	mov	x0, x22
   146d4:	bl	a670 <xstrdup@plt>
   146d8:	str	x0, [x19]
   146dc:	ldr	q0, [x21]
   146e0:	mov	x0, x20
   146e4:	mov	x1, x19
   146e8:	ext	v0.16b, v0.16b, v0.16b, #8
   146ec:	stur	q0, [x19, #8]
   146f0:	bl	a3a0 <hash_insert@plt>
   146f4:	cbz	x0, 14724 <record_file@@Base+0x80>
   146f8:	cmp	x0, x19
   146fc:	b.eq	14714 <record_file@@Base+0x70>  // b.none
   14700:	mov	x0, x19
   14704:	ldp	x20, x19, [sp, #32]
   14708:	ldp	x22, x21, [sp, #16]
   1470c:	ldp	x29, x30, [sp], #48
   14710:	b	a4b0 <triple_free@plt>
   14714:	ldp	x20, x19, [sp, #32]
   14718:	ldp	x22, x21, [sp, #16]
   1471c:	ldp	x29, x30, [sp], #48
   14720:	ret
   14724:	bl	a7d0 <xalloc_die@plt>

0000000000014728 <seen_file@@Base>:
   14728:	cbz	x0, 14760 <seen_file@@Base+0x38>
   1472c:	sub	sp, sp, #0x30
   14730:	stp	x29, x30, [sp, #32]
   14734:	str	x1, [sp, #8]
   14738:	ldr	q0, [x2]
   1473c:	add	x1, sp, #0x8
   14740:	add	x29, sp, #0x20
   14744:	ext	v0.16b, v0.16b, v0.16b, #8
   14748:	stur	q0, [sp, #16]
   1474c:	bl	a7b0 <hash_lookup@plt>
   14750:	ldp	x29, x30, [sp, #32]
   14754:	cmp	x0, #0x0
   14758:	cset	w0, ne  // ne = any
   1475c:	add	sp, sp, #0x30
   14760:	ret

0000000000014764 <mfile_name_concat@@Base>:
   14764:	stp	x29, x30, [sp, #-80]!
   14768:	stp	x26, x25, [sp, #16]
   1476c:	stp	x24, x23, [sp, #32]
   14770:	stp	x22, x21, [sp, #48]
   14774:	stp	x20, x19, [sp, #64]
   14778:	mov	x29, sp
   1477c:	mov	x20, x2
   14780:	mov	x19, x1
   14784:	mov	x22, x0
   14788:	bl	a6c0 <last_component@plt>
   1478c:	mov	x21, x0
   14790:	bl	a1f0 <base_len@plt>
   14794:	sub	x8, x21, x22
   14798:	mov	x24, x0
   1479c:	add	x23, x8, x0
   147a0:	mov	x0, x19
   147a4:	bl	a280 <strlen@plt>
   147a8:	mov	x21, x0
   147ac:	cbz	x24, 147c8 <mfile_name_concat@@Base+0x64>
   147b0:	add	x8, x23, x22
   147b4:	ldurb	w8, [x8, #-1]
   147b8:	cmp	w8, #0x2f
   147bc:	b.ne	147dc <mfile_name_concat@@Base+0x78>  // b.any
   147c0:	mov	w25, wzr
   147c4:	b	147ec <mfile_name_concat@@Base+0x88>
   147c8:	ldrb	w8, [x19]
   147cc:	cmp	w8, #0x2f
   147d0:	mov	w8, #0x2e                  	// #46
   147d4:	csel	w25, w8, wzr, eq  // eq = none
   147d8:	b	147ec <mfile_name_concat@@Base+0x88>
   147dc:	ldrb	w8, [x19]
   147e0:	cmp	w8, #0x2f
   147e4:	mov	w8, #0x2f                  	// #47
   147e8:	csel	w25, wzr, w8, eq  // eq = none
   147ec:	cmp	w25, #0x0
   147f0:	add	x8, x21, x23
   147f4:	cinc	x8, x8, ne  // ne = any
   147f8:	add	x0, x8, #0x1
   147fc:	cset	w26, ne  // ne = any
   14800:	bl	a540 <malloc@plt>
   14804:	mov	x24, x0
   14808:	cbz	x0, 14844 <mfile_name_concat@@Base+0xe0>
   1480c:	mov	x0, x24
   14810:	mov	x1, x22
   14814:	mov	x2, x23
   14818:	bl	a210 <memcpy@plt>
   1481c:	add	x8, x24, x23
   14820:	add	x22, x8, x26
   14824:	strb	w25, [x8]
   14828:	cbz	x20, 14830 <mfile_name_concat@@Base+0xcc>
   1482c:	str	x22, [x20]
   14830:	mov	x0, x22
   14834:	mov	x1, x19
   14838:	mov	x2, x21
   1483c:	bl	a210 <memcpy@plt>
   14840:	strb	wzr, [x22, x21]
   14844:	mov	x0, x24
   14848:	ldp	x20, x19, [sp, #64]
   1484c:	ldp	x22, x21, [sp, #48]
   14850:	ldp	x24, x23, [sp, #32]
   14854:	ldp	x26, x25, [sp, #16]
   14858:	ldp	x29, x30, [sp], #80
   1485c:	ret

0000000000014860 <getprogname@@Base>:
   14860:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   14864:	ldr	x8, [x8, #4008]
   14868:	ldr	x0, [x8]
   1486c:	ret

0000000000014870 <gettime@@Base>:
   14870:	mov	x1, x0
   14874:	mov	w0, wzr
   14878:	b	a440 <clock_gettime@plt>

000000000001487c <current_timespec@@Base>:
   1487c:	sub	sp, sp, #0x20
   14880:	mov	x1, sp
   14884:	mov	w0, wzr
   14888:	stp	x29, x30, [sp, #16]
   1488c:	add	x29, sp, #0x10
   14890:	bl	a440 <clock_gettime@plt>
   14894:	ldp	x0, x1, [sp]
   14898:	ldp	x29, x30, [sp, #16]
   1489c:	add	sp, sp, #0x20
   148a0:	ret

00000000000148a4 <hard_locale@@Base>:
   148a4:	stp	x29, x30, [sp, #-32]!
   148a8:	mov	x1, xzr
   148ac:	str	x19, [sp, #16]
   148b0:	mov	x29, sp
   148b4:	bl	ae90 <setlocale@plt>
   148b8:	cbz	x0, 148e4 <hard_locale@@Base+0x40>
   148bc:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
   148c0:	add	x1, x1, #0xc30
   148c4:	mov	x19, x0
   148c8:	bl	a8e0 <strcmp@plt>
   148cc:	cbz	w0, 148ec <hard_locale@@Base+0x48>
   148d0:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
   148d4:	add	x1, x1, #0xc32
   148d8:	mov	x0, x19
   148dc:	bl	a8e0 <strcmp@plt>
   148e0:	cbz	w0, 148ec <hard_locale@@Base+0x48>
   148e4:	mov	w0, #0x1                   	// #1
   148e8:	b	148f0 <hard_locale@@Base+0x4c>
   148ec:	mov	w0, wzr
   148f0:	ldr	x19, [sp, #16]
   148f4:	ldp	x29, x30, [sp], #32
   148f8:	ret

00000000000148fc <hash_get_n_buckets@@Base>:
   148fc:	ldr	x0, [x0, #16]
   14900:	ret

0000000000014904 <hash_get_n_buckets_used@@Base>:
   14904:	ldr	x0, [x0, #24]
   14908:	ret

000000000001490c <hash_get_n_entries@@Base>:
   1490c:	ldr	x0, [x0, #32]
   14910:	ret

0000000000014914 <hash_get_max_bucket_length@@Base>:
   14914:	ldp	x8, x9, [x0]
   14918:	cmp	x8, x9
   1491c:	b.cs	1495c <hash_get_max_bucket_length@@Base+0x48>  // b.hs, b.nlast
   14920:	mov	x0, xzr
   14924:	b	14934 <hash_get_max_bucket_length@@Base+0x20>
   14928:	add	x8, x8, #0x10
   1492c:	cmp	x8, x9
   14930:	b.cs	14960 <hash_get_max_bucket_length@@Base+0x4c>  // b.hs, b.nlast
   14934:	ldr	x10, [x8]
   14938:	cbz	x10, 14928 <hash_get_max_bucket_length@@Base+0x14>
   1493c:	mov	x10, xzr
   14940:	mov	x11, x8
   14944:	ldr	x11, [x11, #8]
   14948:	add	x10, x10, #0x1
   1494c:	cbnz	x11, 14944 <hash_get_max_bucket_length@@Base+0x30>
   14950:	cmp	x10, x0
   14954:	csel	x0, x10, x0, hi  // hi = pmore
   14958:	b	14928 <hash_get_max_bucket_length@@Base+0x14>
   1495c:	mov	x0, xzr
   14960:	ret

0000000000014964 <hash_table_ok@@Base>:
   14964:	ldp	x9, x10, [x0]
   14968:	cmp	x9, x10
   1496c:	b.cs	149a8 <hash_table_ok@@Base+0x44>  // b.hs, b.nlast
   14970:	mov	x8, xzr
   14974:	mov	x11, xzr
   14978:	b	14988 <hash_table_ok@@Base+0x24>
   1497c:	add	x9, x9, #0x10
   14980:	cmp	x9, x10
   14984:	b.cs	149b0 <hash_table_ok@@Base+0x4c>  // b.hs, b.nlast
   14988:	ldr	x12, [x9]
   1498c:	cbz	x12, 1497c <hash_table_ok@@Base+0x18>
   14990:	mov	x12, x9
   14994:	ldr	x12, [x12, #8]
   14998:	add	x8, x8, #0x1
   1499c:	cbnz	x12, 14994 <hash_table_ok@@Base+0x30>
   149a0:	add	x11, x11, #0x1
   149a4:	b	1497c <hash_table_ok@@Base+0x18>
   149a8:	mov	x11, xzr
   149ac:	mov	x8, xzr
   149b0:	ldr	x9, [x0, #24]
   149b4:	cmp	x11, x9
   149b8:	b.ne	149d0 <hash_table_ok@@Base+0x6c>  // b.any
   149bc:	ldr	x9, [x0, #32]
   149c0:	cmp	x8, x9
   149c4:	b.ne	149d0 <hash_table_ok@@Base+0x6c>  // b.any
   149c8:	mov	w0, #0x1                   	// #1
   149cc:	ret
   149d0:	mov	w0, wzr
   149d4:	ret

00000000000149d8 <hash_print_statistics@@Base>:
   149d8:	stp	x29, x30, [sp, #-48]!
   149dc:	stp	x22, x21, [sp, #16]
   149e0:	stp	x20, x19, [sp, #32]
   149e4:	ldp	x8, x9, [x0]
   149e8:	ldp	x20, x2, [x0, #24]
   149ec:	ldr	x22, [x0, #16]
   149f0:	mov	x19, x1
   149f4:	cmp	x8, x9
   149f8:	mov	x21, xzr
   149fc:	mov	x29, sp
   14a00:	b.cc	14a80 <hash_print_statistics@@Base+0xa8>  // b.lo, b.ul, b.last
   14a04:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   14a08:	add	x1, x1, #0x836
   14a0c:	mov	x0, x19
   14a10:	bl	ae70 <fprintf@plt>
   14a14:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   14a18:	add	x1, x1, #0x84e
   14a1c:	mov	x0, x19
   14a20:	mov	x2, x22
   14a24:	bl	ae70 <fprintf@plt>
   14a28:	mov	x8, #0x4059000000000000    	// #4636737291354636288
   14a2c:	ucvtf	d0, x20
   14a30:	fmov	d1, x8
   14a34:	fmul	d0, d0, d1
   14a38:	ucvtf	d1, x22
   14a3c:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   14a40:	fdiv	d0, d0, d1
   14a44:	add	x1, x1, #0x866
   14a48:	mov	x0, x19
   14a4c:	mov	x2, x20
   14a50:	bl	ae70 <fprintf@plt>
   14a54:	mov	x0, x19
   14a58:	mov	x2, x21
   14a5c:	ldp	x20, x19, [sp, #32]
   14a60:	ldp	x22, x21, [sp, #16]
   14a64:	adrp	x1, 2f000 <vasnprintf@@Base+0x124c>
   14a68:	add	x1, x1, #0x887
   14a6c:	ldp	x29, x30, [sp], #48
   14a70:	b	ae70 <fprintf@plt>
   14a74:	add	x8, x8, #0x10
   14a78:	cmp	x8, x9
   14a7c:	b.cs	14a04 <hash_print_statistics@@Base+0x2c>  // b.hs, b.nlast
   14a80:	ldr	x10, [x8]
   14a84:	cbz	x10, 14a74 <hash_print_statistics@@Base+0x9c>
   14a88:	mov	x10, xzr
   14a8c:	mov	x11, x8
   14a90:	ldr	x11, [x11, #8]
   14a94:	add	x10, x10, #0x1
   14a98:	cbnz	x11, 14a90 <hash_print_statistics@@Base+0xb8>
   14a9c:	cmp	x10, x21
   14aa0:	csel	x21, x10, x21, hi  // hi = pmore
   14aa4:	b	14a74 <hash_print_statistics@@Base+0x9c>

0000000000014aa8 <hash_lookup@@Base>:
   14aa8:	stp	x29, x30, [sp, #-48]!
   14aac:	stp	x20, x19, [sp, #32]
   14ab0:	ldr	x8, [x0, #16]
   14ab4:	ldr	x9, [x0, #48]
   14ab8:	mov	x19, x0
   14abc:	mov	x20, x1
   14ac0:	mov	x0, x1
   14ac4:	mov	x1, x8
   14ac8:	str	x21, [sp, #16]
   14acc:	mov	x29, sp
   14ad0:	blr	x9
   14ad4:	ldr	x8, [x19, #16]
   14ad8:	cmp	x0, x8
   14adc:	b.cs	14b48 <hash_lookup@@Base+0xa0>  // b.hs, b.nlast
   14ae0:	ldr	x8, [x19]
   14ae4:	add	x21, x8, x0, lsl #4
   14ae8:	ldr	x1, [x21]
   14aec:	mov	x0, xzr
   14af0:	cbz	x1, 14b38 <hash_lookup@@Base+0x90>
   14af4:	cbz	x8, 14b38 <hash_lookup@@Base+0x90>
   14af8:	cmp	x1, x20
   14afc:	b.eq	14b24 <hash_lookup@@Base+0x7c>  // b.none
   14b00:	ldr	x8, [x19, #56]
   14b04:	mov	x0, x20
   14b08:	blr	x8
   14b0c:	tbnz	w0, #0, 14b2c <hash_lookup@@Base+0x84>
   14b10:	ldr	x21, [x21, #8]
   14b14:	cbz	x21, 14b34 <hash_lookup@@Base+0x8c>
   14b18:	ldr	x1, [x21]
   14b1c:	cmp	x1, x20
   14b20:	b.ne	14b00 <hash_lookup@@Base+0x58>  // b.any
   14b24:	mov	x0, x20
   14b28:	b	14b38 <hash_lookup@@Base+0x90>
   14b2c:	ldr	x0, [x21]
   14b30:	b	14b38 <hash_lookup@@Base+0x90>
   14b34:	mov	x0, xzr
   14b38:	ldp	x20, x19, [sp, #32]
   14b3c:	ldr	x21, [sp, #16]
   14b40:	ldp	x29, x30, [sp], #48
   14b44:	ret
   14b48:	bl	a840 <abort@plt>

0000000000014b4c <hash_get_first@@Base>:
   14b4c:	stp	x29, x30, [sp, #-16]!
   14b50:	ldr	x8, [x0, #32]
   14b54:	mov	x29, sp
   14b58:	cbz	x8, 14b78 <hash_get_first@@Base+0x2c>
   14b5c:	ldp	x8, x9, [x0]
   14b60:	cmp	x8, x9
   14b64:	b.cs	14b84 <hash_get_first@@Base+0x38>  // b.hs, b.nlast
   14b68:	ldr	x0, [x8], #16
   14b6c:	cbz	x0, 14b60 <hash_get_first@@Base+0x14>
   14b70:	ldp	x29, x30, [sp], #16
   14b74:	ret
   14b78:	mov	x0, xzr
   14b7c:	ldp	x29, x30, [sp], #16
   14b80:	ret
   14b84:	bl	a840 <abort@plt>

0000000000014b88 <hash_get_next@@Base>:
   14b88:	stp	x29, x30, [sp, #-32]!
   14b8c:	stp	x20, x19, [sp, #16]
   14b90:	ldr	x8, [x0, #16]
   14b94:	ldr	x9, [x0, #48]
   14b98:	mov	x19, x0
   14b9c:	mov	x20, x1
   14ba0:	mov	x0, x1
   14ba4:	mov	x1, x8
   14ba8:	mov	x29, sp
   14bac:	blr	x9
   14bb0:	ldr	x8, [x19, #16]
   14bb4:	cmp	x0, x8
   14bb8:	b.cs	14c14 <hash_get_next@@Base+0x8c>  // b.hs, b.nlast
   14bbc:	ldr	x8, [x19]
   14bc0:	add	x9, x8, x0, lsl #4
   14bc4:	ldp	x10, x9, [x9]
   14bc8:	cmp	x10, x20
   14bcc:	b.eq	14bd8 <hash_get_next@@Base+0x50>  // b.none
   14bd0:	cbnz	x9, 14bc4 <hash_get_next@@Base+0x3c>
   14bd4:	b	14be4 <hash_get_next@@Base+0x5c>
   14bd8:	cbz	x9, 14be4 <hash_get_next@@Base+0x5c>
   14bdc:	ldr	x0, [x9]
   14be0:	b	14c08 <hash_get_next@@Base+0x80>
   14be4:	ldr	x9, [x19, #8]
   14be8:	add	x8, x8, x0, lsl #4
   14bec:	add	x8, x8, #0x10
   14bf0:	cmp	x8, x9
   14bf4:	b.cs	14c04 <hash_get_next@@Base+0x7c>  // b.hs, b.nlast
   14bf8:	ldr	x0, [x8], #16
   14bfc:	cbz	x0, 14bf0 <hash_get_next@@Base+0x68>
   14c00:	b	14c08 <hash_get_next@@Base+0x80>
   14c04:	mov	x0, xzr
   14c08:	ldp	x20, x19, [sp, #16]
   14c0c:	ldp	x29, x30, [sp], #32
   14c10:	ret
   14c14:	bl	a840 <abort@plt>

0000000000014c18 <hash_get_entries@@Base>:
   14c18:	ldp	x9, x10, [x0]
   14c1c:	cmp	x9, x10
   14c20:	b.cs	14c7c <hash_get_entries@@Base+0x64>  // b.hs, b.nlast
   14c24:	mov	x11, xzr
   14c28:	ldr	x8, [x9]
   14c2c:	cbz	x8, 14c60 <hash_get_entries@@Base+0x48>
   14c30:	cbz	x9, 14c60 <hash_get_entries@@Base+0x48>
   14c34:	mov	x10, x9
   14c38:	cmp	x11, x2
   14c3c:	b.cs	14c84 <hash_get_entries@@Base+0x6c>  // b.hs, b.nlast
   14c40:	ldr	x8, [x10]
   14c44:	str	x8, [x1, x11, lsl #3]
   14c48:	ldr	x10, [x10, #8]
   14c4c:	add	x8, x11, #0x1
   14c50:	mov	x11, x8
   14c54:	cbnz	x10, 14c38 <hash_get_entries@@Base+0x20>
   14c58:	ldr	x10, [x0, #8]
   14c5c:	b	14c64 <hash_get_entries@@Base+0x4c>
   14c60:	mov	x8, x11
   14c64:	add	x9, x9, #0x10
   14c68:	cmp	x9, x10
   14c6c:	mov	x11, x8
   14c70:	b.cc	14c28 <hash_get_entries@@Base+0x10>  // b.lo, b.ul, b.last
   14c74:	mov	x0, x8
   14c78:	ret
   14c7c:	mov	x0, xzr
   14c80:	ret
   14c84:	mov	x0, x11
   14c88:	ret

0000000000014c8c <hash_do_for_each@@Base>:
   14c8c:	stp	x29, x30, [sp, #-64]!
   14c90:	stp	x24, x23, [sp, #16]
   14c94:	stp	x22, x21, [sp, #32]
   14c98:	stp	x20, x19, [sp, #48]
   14c9c:	ldp	x23, x8, [x0]
   14ca0:	mov	x29, sp
   14ca4:	cmp	x23, x8
   14ca8:	b.cs	14cc0 <hash_do_for_each@@Base+0x34>  // b.hs, b.nlast
   14cac:	mov	x19, x2
   14cb0:	mov	x20, x0
   14cb4:	mov	x21, x1
   14cb8:	mov	x22, xzr
   14cbc:	b	14cd8 <hash_do_for_each@@Base+0x4c>
   14cc0:	mov	x22, xzr
   14cc4:	b	14d10 <hash_do_for_each@@Base+0x84>
   14cc8:	ldr	x8, [x20, #8]
   14ccc:	add	x23, x23, #0x10
   14cd0:	cmp	x23, x8
   14cd4:	b.cs	14d10 <hash_do_for_each@@Base+0x84>  // b.hs, b.nlast
   14cd8:	ldr	x0, [x23]
   14cdc:	cbz	x0, 14ccc <hash_do_for_each@@Base+0x40>
   14ce0:	cbz	x23, 14ccc <hash_do_for_each@@Base+0x40>
   14ce4:	mov	x1, x19
   14ce8:	blr	x21
   14cec:	tbz	w0, #0, 14d10 <hash_do_for_each@@Base+0x84>
   14cf0:	mov	x24, x23
   14cf4:	ldr	x24, [x24, #8]
   14cf8:	add	x22, x22, #0x1
   14cfc:	cbz	x24, 14cc8 <hash_do_for_each@@Base+0x3c>
   14d00:	ldr	x0, [x24]
   14d04:	mov	x1, x19
   14d08:	blr	x21
   14d0c:	tbnz	w0, #0, 14cf4 <hash_do_for_each@@Base+0x68>
   14d10:	mov	x0, x22
   14d14:	ldp	x20, x19, [sp, #48]
   14d18:	ldp	x22, x21, [sp, #32]
   14d1c:	ldp	x24, x23, [sp, #16]
   14d20:	ldp	x29, x30, [sp], #64
   14d24:	ret

0000000000014d28 <hash_string@@Base>:
   14d28:	ldrb	w9, [x0]
   14d2c:	cbz	w9, 14d5c <hash_string@@Base+0x34>
   14d30:	mov	x8, x0
   14d34:	mov	x0, xzr
   14d38:	add	x8, x8, #0x1
   14d3c:	lsl	x10, x0, #5
   14d40:	sub	x10, x10, x0
   14d44:	add	x10, x10, w9, uxtb
   14d48:	ldrb	w9, [x8], #1
   14d4c:	udiv	x11, x10, x1
   14d50:	msub	x0, x11, x1, x10
   14d54:	cbnz	w9, 14d3c <hash_string@@Base+0x14>
   14d58:	ret
   14d5c:	mov	x0, xzr
   14d60:	ret

0000000000014d64 <hash_reset_tuning@@Base>:
   14d64:	adrp	x8, 2f000 <vasnprintf@@Base+0x124c>
   14d68:	add	x8, x8, #0x8a0
   14d6c:	ldr	w9, [x8, #16]
   14d70:	ldr	q0, [x8]
   14d74:	str	w9, [x0, #16]
   14d78:	str	q0, [x0]
   14d7c:	ret

0000000000014d80 <hash_initialize@@Base>:
   14d80:	stp	x29, x30, [sp, #-64]!
   14d84:	adrp	x8, 14000 <canonicalize_filename_mode@@Base+0x1a4>
   14d88:	add	x8, x8, #0xf68
   14d8c:	cmp	x2, #0x0
   14d90:	adrp	x9, 14000 <canonicalize_filename_mode@@Base+0x1a4>
   14d94:	stp	x24, x23, [sp, #16]
   14d98:	stp	x22, x21, [sp, #32]
   14d9c:	mov	x21, x0
   14da0:	add	x9, x9, #0xf78
   14da4:	csel	x23, x8, x2, eq  // eq = none
   14da8:	cmp	x3, #0x0
   14dac:	mov	w0, #0x50                  	// #80
   14db0:	stp	x20, x19, [sp, #48]
   14db4:	mov	x29, sp
   14db8:	mov	x19, x4
   14dbc:	mov	x22, x1
   14dc0:	csel	x24, x9, x3, eq  // eq = none
   14dc4:	bl	a540 <malloc@plt>
   14dc8:	mov	x20, x0
   14dcc:	cbz	x0, 14f50 <hash_initialize@@Base+0x1d0>
   14dd0:	adrp	x9, 2f000 <vasnprintf@@Base+0x124c>
   14dd4:	add	x9, x9, #0x8a0
   14dd8:	cmp	x22, #0x0
   14ddc:	csel	x8, x9, x22, eq  // eq = none
   14de0:	cmp	x8, x9
   14de4:	str	x8, [x20, #40]
   14de8:	b.eq	14e6c <hash_initialize@@Base+0xec>  // b.none
   14dec:	ldr	s0, [x8, #8]
   14df0:	mov	w9, #0xcccd                	// #52429
   14df4:	movk	w9, #0x3dcc, lsl #16
   14df8:	fmov	s1, w9
   14dfc:	fcmp	s0, s1
   14e00:	b.le	14f44 <hash_initialize@@Base+0x1c4>
   14e04:	mov	w9, #0x6666                	// #26214
   14e08:	movk	w9, #0x3f66, lsl #16
   14e0c:	fmov	s1, w9
   14e10:	fcmp	s0, s1
   14e14:	b.pl	14f44 <hash_initialize@@Base+0x1c4>  // b.nfrst
   14e18:	ldr	s1, [x8, #12]
   14e1c:	mov	w9, #0xcccd                	// #52429
   14e20:	movk	w9, #0x3f8c, lsl #16
   14e24:	fmov	s2, w9
   14e28:	fcmp	s1, s2
   14e2c:	b.le	14f44 <hash_initialize@@Base+0x1c4>
   14e30:	ldr	s1, [x8]
   14e34:	fcmp	s1, #0.0
   14e38:	b.lt	14f44 <hash_initialize@@Base+0x1c4>  // b.tstop
   14e3c:	mov	w9, #0xcccd                	// #52429
   14e40:	movk	w9, #0x3dcc, lsl #16
   14e44:	fmov	s2, w9
   14e48:	fadd	s1, s1, s2
   14e4c:	fcmp	s1, s0
   14e50:	b.pl	14f44 <hash_initialize@@Base+0x1c4>  // b.nfrst
   14e54:	ldr	s0, [x8, #4]
   14e58:	fmov	s2, #1.000000000000000000e+00
   14e5c:	fcmp	s0, s2
   14e60:	b.hi	14f44 <hash_initialize@@Base+0x1c4>  // b.pmore
   14e64:	fcmp	s1, s0
   14e68:	b.pl	14f44 <hash_initialize@@Base+0x1c4>  // b.nfrst
   14e6c:	ldrb	w9, [x8, #16]
   14e70:	cbnz	w9, 14e94 <hash_initialize@@Base+0x114>
   14e74:	ldr	s0, [x8, #8]
   14e78:	ucvtf	s1, x21
   14e7c:	mov	w8, #0x5f800000            	// #1602224128
   14e80:	fdiv	s0, s1, s0
   14e84:	fmov	s1, w8
   14e88:	fcmp	s0, s1
   14e8c:	b.ge	14f44 <hash_initialize@@Base+0x1c4>  // b.tcont
   14e90:	fcvtzu	x21, s0
   14e94:	cmp	x21, #0xa
   14e98:	mov	w8, #0xa                   	// #10
   14e9c:	csel	x8, x21, x8, hi  // hi = pmore
   14ea0:	orr	x21, x8, #0x1
   14ea4:	cmn	x21, #0x1
   14ea8:	b.eq	14f44 <hash_initialize@@Base+0x1c4>  // b.none
   14eac:	cmp	x21, #0xa
   14eb0:	b.cc	14ee8 <hash_initialize@@Base+0x168>  // b.lo, b.ul, b.last
   14eb4:	mov	w9, #0xc                   	// #12
   14eb8:	mov	w10, #0x9                   	// #9
   14ebc:	mov	w8, #0x3                   	// #3
   14ec0:	udiv	x11, x21, x8
   14ec4:	msub	x11, x11, x8, x21
   14ec8:	cbz	x11, 14eec <hash_initialize@@Base+0x16c>
   14ecc:	add	x10, x10, x9
   14ed0:	add	x10, x10, #0x4
   14ed4:	add	x8, x8, #0x2
   14ed8:	cmp	x10, x21
   14edc:	add	x9, x9, #0x8
   14ee0:	b.cc	14ec0 <hash_initialize@@Base+0x140>  // b.lo, b.ul, b.last
   14ee4:	b	14eec <hash_initialize@@Base+0x16c>
   14ee8:	mov	w8, #0x3                   	// #3
   14eec:	udiv	x9, x21, x8
   14ef0:	msub	x8, x9, x8, x21
   14ef4:	cbnz	x8, 14f08 <hash_initialize@@Base+0x188>
   14ef8:	add	x21, x21, #0x2
   14efc:	cmn	x21, #0x1
   14f00:	b.ne	14eac <hash_initialize@@Base+0x12c>  // b.any
   14f04:	b	14f44 <hash_initialize@@Base+0x1c4>
   14f08:	lsr	x8, x21, #60
   14f0c:	cbnz	x8, 14f44 <hash_initialize@@Base+0x1c4>
   14f10:	str	x21, [x20, #16]
   14f14:	cbz	x21, 14f44 <hash_initialize@@Base+0x1c4>
   14f18:	mov	w1, #0x10                  	// #16
   14f1c:	mov	x0, x21
   14f20:	bl	a6b0 <calloc@plt>
   14f24:	str	x0, [x20]
   14f28:	cbz	x0, 14f44 <hash_initialize@@Base+0x1c4>
   14f2c:	add	x8, x0, x21, lsl #4
   14f30:	stp	xzr, xzr, [x20, #24]
   14f34:	stp	x23, x24, [x20, #48]
   14f38:	str	x8, [x20, #8]
   14f3c:	stp	x19, xzr, [x20, #64]
   14f40:	b	14f50 <hash_initialize@@Base+0x1d0>
   14f44:	mov	x0, x20
   14f48:	bl	a960 <free@plt>
   14f4c:	mov	x20, xzr
   14f50:	mov	x0, x20
   14f54:	ldp	x20, x19, [sp, #48]
   14f58:	ldp	x22, x21, [sp, #32]
   14f5c:	ldp	x24, x23, [sp, #16]
   14f60:	ldp	x29, x30, [sp], #64
   14f64:	ret
   14f68:	ror	x8, x0, #3
   14f6c:	udiv	x9, x8, x1
   14f70:	msub	x0, x9, x1, x8
   14f74:	ret
   14f78:	cmp	x0, x1
   14f7c:	cset	w0, eq  // eq = none
   14f80:	ret

0000000000014f84 <hash_clear@@Base>:
   14f84:	stp	x29, x30, [sp, #-48]!
   14f88:	str	x21, [sp, #16]
   14f8c:	stp	x20, x19, [sp, #32]
   14f90:	ldp	x20, x8, [x0]
   14f94:	mov	x19, x0
   14f98:	mov	x29, sp
   14f9c:	b	14fac <hash_clear@@Base+0x28>
   14fa0:	stp	xzr, xzr, [x20]
   14fa4:	ldr	x8, [x19, #8]
   14fa8:	add	x20, x20, #0x10
   14fac:	cmp	x20, x8
   14fb0:	b.cs	15018 <hash_clear@@Base+0x94>  // b.hs, b.nlast
   14fb4:	ldr	x9, [x20]
   14fb8:	cbz	x9, 14fa8 <hash_clear@@Base+0x24>
   14fbc:	ldr	x8, [x19, #64]
   14fc0:	ldr	x21, [x20, #8]
   14fc4:	cmp	x8, #0x0
   14fc8:	cset	w9, ne  // ne = any
   14fcc:	cbnz	x21, 15004 <hash_clear@@Base+0x80>
   14fd0:	cbz	w9, 14fa0 <hash_clear@@Base+0x1c>
   14fd4:	ldr	x0, [x20]
   14fd8:	blr	x8
   14fdc:	b	14fa0 <hash_clear@@Base+0x1c>
   14fe0:	str	xzr, [x21]
   14fe4:	ldr	x9, [x19, #72]
   14fe8:	ldr	x10, [x21, #8]
   14fec:	cmp	x8, #0x0
   14ff0:	str	x9, [x21, #8]
   14ff4:	str	x21, [x19, #72]
   14ff8:	cset	w9, ne  // ne = any
   14ffc:	mov	x21, x10
   15000:	cbz	x10, 14fd0 <hash_clear@@Base+0x4c>
   15004:	tbz	w9, #0, 14fe0 <hash_clear@@Base+0x5c>
   15008:	ldr	x0, [x21]
   1500c:	blr	x8
   15010:	ldr	x8, [x19, #64]
   15014:	b	14fe0 <hash_clear@@Base+0x5c>
   15018:	stp	xzr, xzr, [x19, #24]
   1501c:	ldp	x20, x19, [sp, #32]
   15020:	ldr	x21, [sp, #16]
   15024:	ldp	x29, x30, [sp], #48
   15028:	ret

000000000001502c <hash_free@@Base>:
   1502c:	stp	x29, x30, [sp, #-48]!
   15030:	stp	x20, x19, [sp, #32]
   15034:	ldr	x8, [x0, #64]
   15038:	mov	x19, x0
   1503c:	str	x21, [sp, #16]
   15040:	mov	x29, sp
   15044:	cbz	x8, 1509c <hash_free@@Base+0x70>
   15048:	ldr	x8, [x19, #32]
   1504c:	cbz	x8, 1509c <hash_free@@Base+0x70>
   15050:	ldp	x20, x8, [x19]
   15054:	b	15060 <hash_free@@Base+0x34>
   15058:	ldr	x8, [x19, #8]
   1505c:	add	x20, x20, #0x10
   15060:	cmp	x20, x8
   15064:	b.cs	1509c <hash_free@@Base+0x70>  // b.hs, b.nlast
   15068:	ldr	x0, [x20]
   1506c:	cbz	x0, 1505c <hash_free@@Base+0x30>
   15070:	cbz	x20, 1505c <hash_free@@Base+0x30>
   15074:	ldr	x8, [x19, #64]
   15078:	blr	x8
   1507c:	ldr	x21, [x20, #8]
   15080:	cbz	x21, 15058 <hash_free@@Base+0x2c>
   15084:	ldr	x0, [x21]
   15088:	ldr	x8, [x19, #64]
   1508c:	blr	x8
   15090:	ldr	x21, [x21, #8]
   15094:	cbnz	x21, 15084 <hash_free@@Base+0x58>
   15098:	b	15058 <hash_free@@Base+0x2c>
   1509c:	ldp	x20, x8, [x19]
   150a0:	b	150a8 <hash_free@@Base+0x7c>
   150a4:	add	x20, x20, #0x10
   150a8:	cmp	x20, x8
   150ac:	b.cs	150d0 <hash_free@@Base+0xa4>  // b.hs, b.nlast
   150b0:	ldr	x0, [x20, #8]
   150b4:	cbz	x0, 150a4 <hash_free@@Base+0x78>
   150b8:	ldr	x21, [x0, #8]
   150bc:	bl	a960 <free@plt>
   150c0:	mov	x0, x21
   150c4:	cbnz	x21, 150b8 <hash_free@@Base+0x8c>
   150c8:	ldr	x8, [x19, #8]
   150cc:	b	150a4 <hash_free@@Base+0x78>
   150d0:	ldr	x0, [x19, #72]
   150d4:	cbz	x0, 150e8 <hash_free@@Base+0xbc>
   150d8:	ldr	x20, [x0, #8]
   150dc:	bl	a960 <free@plt>
   150e0:	mov	x0, x20
   150e4:	cbnz	x20, 150d8 <hash_free@@Base+0xac>
   150e8:	ldr	x0, [x19]
   150ec:	bl	a960 <free@plt>
   150f0:	mov	x0, x19
   150f4:	ldp	x20, x19, [sp, #32]
   150f8:	ldr	x21, [sp, #16]
   150fc:	ldp	x29, x30, [sp], #48
   15100:	b	a960 <free@plt>

0000000000015104 <hash_rehash@@Base>:
   15104:	sub	sp, sp, #0x90
   15108:	stp	x29, x30, [sp, #80]
   1510c:	stp	x24, x23, [sp, #96]
   15110:	stp	x22, x21, [sp, #112]
   15114:	stp	x20, x19, [sp, #128]
   15118:	ldr	x21, [x0, #40]
   1511c:	mov	x19, x0
   15120:	add	x29, sp, #0x50
   15124:	ldrb	w8, [x21, #16]
   15128:	cbnz	w8, 1514c <hash_rehash@@Base+0x48>
   1512c:	ldr	s0, [x21, #8]
   15130:	ucvtf	s1, x1
   15134:	mov	w8, #0x5f800000            	// #1602224128
   15138:	fdiv	s0, s1, s0
   1513c:	fmov	s1, w8
   15140:	fcmp	s0, s1
   15144:	b.ge	151d0 <hash_rehash@@Base+0xcc>  // b.tcont
   15148:	fcvtzu	x1, s0
   1514c:	cmp	x1, #0xa
   15150:	mov	w8, #0xa                   	// #10
   15154:	csel	x8, x1, x8, hi  // hi = pmore
   15158:	orr	x20, x8, #0x1
   1515c:	cmn	x20, #0x1
   15160:	b.eq	151d0 <hash_rehash@@Base+0xcc>  // b.none
   15164:	cmp	x20, #0xa
   15168:	b.cc	151a0 <hash_rehash@@Base+0x9c>  // b.lo, b.ul, b.last
   1516c:	mov	w9, #0xc                   	// #12
   15170:	mov	w10, #0x9                   	// #9
   15174:	mov	w8, #0x3                   	// #3
   15178:	udiv	x11, x20, x8
   1517c:	msub	x11, x11, x8, x20
   15180:	cbz	x11, 151a4 <hash_rehash@@Base+0xa0>
   15184:	add	x10, x10, x9
   15188:	add	x10, x10, #0x4
   1518c:	add	x8, x8, #0x2
   15190:	cmp	x10, x20
   15194:	add	x9, x9, #0x8
   15198:	b.cc	15178 <hash_rehash@@Base+0x74>  // b.lo, b.ul, b.last
   1519c:	b	151a4 <hash_rehash@@Base+0xa0>
   151a0:	mov	w8, #0x3                   	// #3
   151a4:	udiv	x9, x20, x8
   151a8:	msub	x8, x9, x8, x20
   151ac:	cbnz	x8, 151c0 <hash_rehash@@Base+0xbc>
   151b0:	add	x20, x20, #0x2
   151b4:	cmn	x20, #0x1
   151b8:	b.ne	15164 <hash_rehash@@Base+0x60>  // b.any
   151bc:	b	151d0 <hash_rehash@@Base+0xcc>
   151c0:	sub	x8, x20, #0x1
   151c4:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
   151c8:	cmp	x8, x9
   151cc:	b.ls	151ec <hash_rehash@@Base+0xe8>  // b.plast
   151d0:	mov	w0, wzr
   151d4:	ldp	x20, x19, [sp, #128]
   151d8:	ldp	x22, x21, [sp, #112]
   151dc:	ldp	x24, x23, [sp, #96]
   151e0:	ldp	x29, x30, [sp, #80]
   151e4:	add	sp, sp, #0x90
   151e8:	ret
   151ec:	ldr	x8, [x19, #16]
   151f0:	cmp	x20, x8
   151f4:	b.ne	15200 <hash_rehash@@Base+0xfc>  // b.any
   151f8:	mov	w0, #0x1                   	// #1
   151fc:	b	151d4 <hash_rehash@@Base+0xd0>
   15200:	mov	w1, #0x10                  	// #16
   15204:	mov	x0, x20
   15208:	bl	a6b0 <calloc@plt>
   1520c:	str	x0, [sp]
   15210:	cbz	x0, 151d4 <hash_rehash@@Base+0xd0>
   15214:	add	x8, x0, x20, lsl #4
   15218:	stp	xzr, xzr, [sp, #24]
   1521c:	stp	x8, x20, [sp, #8]
   15220:	str	x21, [sp, #40]
   15224:	ldr	q0, [x19, #48]
   15228:	mov	x0, sp
   1522c:	mov	x1, x19
   15230:	mov	w2, wzr
   15234:	str	q0, [sp, #48]
   15238:	ldr	q0, [x19, #64]
   1523c:	str	q0, [sp, #64]
   15240:	bl	15334 <hash_rehash@@Base+0x230>
   15244:	tbz	w0, #0, 15270 <hash_rehash@@Base+0x16c>
   15248:	ldr	x0, [x19]
   1524c:	bl	a960 <free@plt>
   15250:	ldr	q0, [sp]
   15254:	mov	w0, #0x1                   	// #1
   15258:	str	q0, [x19]
   1525c:	ldr	q0, [sp, #16]
   15260:	str	q0, [x19, #16]
   15264:	ldr	x8, [sp, #72]
   15268:	str	x8, [x19, #72]
   1526c:	b	151d4 <hash_rehash@@Base+0xd0>
   15270:	ldr	x8, [sp, #72]
   15274:	add	x21, x19, #0x48
   15278:	str	x8, [x21]
   1527c:	ldp	x22, x23, [sp]
   15280:	b	1528c <hash_rehash@@Base+0x188>
   15284:	str	xzr, [x22, #8]
   15288:	add	x22, x22, #0x10
   1528c:	cmp	x22, x23
   15290:	b.cs	15310 <hash_rehash@@Base+0x20c>  // b.hs, b.nlast
   15294:	ldr	x8, [x22]
   15298:	cbz	x8, 15288 <hash_rehash@@Base+0x184>
   1529c:	ldr	x24, [x22, #8]
   152a0:	cbz	x24, 15284 <hash_rehash@@Base+0x180>
   152a4:	ldr	x1, [x19, #16]
   152a8:	b	152d8 <hash_rehash@@Base+0x1d4>
   152ac:	str	x20, [x9]
   152b0:	ldr	x9, [x19, #24]
   152b4:	add	x9, x9, #0x1
   152b8:	str	x9, [x19, #24]
   152bc:	mov	x9, x21
   152c0:	str	xzr, [x24]
   152c4:	ldr	x10, [x9]
   152c8:	str	x10, [x24, #8]
   152cc:	str	x24, [x9]
   152d0:	mov	x24, x8
   152d4:	cbz	x8, 15284 <hash_rehash@@Base+0x180>
   152d8:	ldr	x20, [x24]
   152dc:	ldr	x8, [x19, #48]
   152e0:	mov	x0, x20
   152e4:	blr	x8
   152e8:	ldr	x1, [x19, #16]
   152ec:	cmp	x0, x1
   152f0:	b.cs	15330 <hash_rehash@@Base+0x22c>  // b.hs, b.nlast
   152f4:	ldr	x8, [x19]
   152f8:	add	x9, x8, x0, lsl #4
   152fc:	ldr	x10, [x9]
   15300:	ldr	x8, [x24, #8]
   15304:	cbz	x10, 152ac <hash_rehash@@Base+0x1a8>
   15308:	add	x9, x9, #0x8
   1530c:	b	152c4 <hash_rehash@@Base+0x1c0>
   15310:	mov	x1, sp
   15314:	mov	x0, x19
   15318:	mov	w2, wzr
   1531c:	bl	15334 <hash_rehash@@Base+0x230>
   15320:	tbz	w0, #0, 15330 <hash_rehash@@Base+0x22c>
   15324:	ldr	x0, [sp]
   15328:	bl	a960 <free@plt>
   1532c:	b	151d0 <hash_rehash@@Base+0xcc>
   15330:	bl	a840 <abort@plt>
   15334:	stp	x29, x30, [sp, #-80]!
   15338:	stp	x26, x25, [sp, #16]
   1533c:	stp	x24, x23, [sp, #32]
   15340:	stp	x22, x21, [sp, #48]
   15344:	stp	x20, x19, [sp, #64]
   15348:	ldp	x24, x8, [x1]
   1534c:	mov	x29, sp
   15350:	cmp	x24, x8
   15354:	b.cs	1548c <hash_rehash@@Base+0x388>  // b.hs, b.nlast
   15358:	mov	w19, w2
   1535c:	mov	x20, x1
   15360:	mov	x21, x0
   15364:	add	x25, x0, #0x48
   15368:	b	1539c <hash_rehash@@Base+0x298>
   1536c:	str	x22, [x8]
   15370:	ldr	x8, [x21, #24]
   15374:	add	x8, x8, #0x1
   15378:	str	x8, [x21, #24]
   1537c:	str	xzr, [x24]
   15380:	ldr	x8, [x20, #24]
   15384:	sub	x8, x8, #0x1
   15388:	str	x8, [x20, #24]
   1538c:	ldr	x8, [x20, #8]
   15390:	add	x24, x24, #0x10
   15394:	cmp	x24, x8
   15398:	b.cs	1548c <hash_rehash@@Base+0x388>  // b.hs, b.nlast
   1539c:	ldr	x22, [x24]
   153a0:	cbz	x22, 1538c <hash_rehash@@Base+0x288>
   153a4:	ldr	x23, [x24, #8]
   153a8:	cbz	x23, 1541c <hash_rehash@@Base+0x318>
   153ac:	ldr	x1, [x21, #16]
   153b0:	b	153e0 <hash_rehash@@Base+0x2dc>
   153b4:	str	x22, [x9]
   153b8:	ldr	x9, [x21, #24]
   153bc:	add	x9, x9, #0x1
   153c0:	str	x9, [x21, #24]
   153c4:	mov	x9, x25
   153c8:	str	xzr, [x23]
   153cc:	ldr	x10, [x9]
   153d0:	str	x10, [x23, #8]
   153d4:	str	x23, [x9]
   153d8:	mov	x23, x8
   153dc:	cbz	x8, 15418 <hash_rehash@@Base+0x314>
   153e0:	ldr	x22, [x23]
   153e4:	ldr	x8, [x21, #48]
   153e8:	mov	x0, x22
   153ec:	blr	x8
   153f0:	ldr	x1, [x21, #16]
   153f4:	cmp	x0, x1
   153f8:	b.cs	154a8 <hash_rehash@@Base+0x3a4>  // b.hs, b.nlast
   153fc:	ldr	x8, [x21]
   15400:	add	x9, x8, x0, lsl #4
   15404:	ldr	x10, [x9]
   15408:	ldr	x8, [x23, #8]
   1540c:	cbz	x10, 153b4 <hash_rehash@@Base+0x2b0>
   15410:	add	x9, x9, #0x8
   15414:	b	153cc <hash_rehash@@Base+0x2c8>
   15418:	ldr	x22, [x24]
   1541c:	str	xzr, [x24, #8]
   15420:	tbnz	w19, #0, 1538c <hash_rehash@@Base+0x288>
   15424:	ldr	x8, [x21, #48]
   15428:	ldr	x1, [x21, #16]
   1542c:	mov	x0, x22
   15430:	blr	x8
   15434:	ldr	x8, [x21, #16]
   15438:	cmp	x0, x8
   1543c:	b.cs	154a8 <hash_rehash@@Base+0x3a4>  // b.hs, b.nlast
   15440:	ldr	x26, [x21]
   15444:	mov	x23, x0
   15448:	add	x8, x26, x0, lsl #4
   1544c:	ldr	x9, [x8]
   15450:	cbz	x9, 1536c <hash_rehash@@Base+0x268>
   15454:	ldr	x0, [x25]
   15458:	cbz	x0, 15468 <hash_rehash@@Base+0x364>
   1545c:	ldr	x8, [x0, #8]
   15460:	str	x8, [x25]
   15464:	b	15474 <hash_rehash@@Base+0x370>
   15468:	mov	w0, #0x10                  	// #16
   1546c:	bl	a540 <malloc@plt>
   15470:	cbz	x0, 15490 <hash_rehash@@Base+0x38c>
   15474:	str	x22, [x0]
   15478:	add	x8, x26, x23, lsl #4
   1547c:	ldr	x9, [x8, #8]
   15480:	str	x9, [x0, #8]
   15484:	str	x0, [x8, #8]
   15488:	b	1537c <hash_rehash@@Base+0x278>
   1548c:	mov	w0, #0x1                   	// #1
   15490:	ldp	x20, x19, [sp, #64]
   15494:	ldp	x22, x21, [sp, #48]
   15498:	ldp	x24, x23, [sp, #32]
   1549c:	ldp	x26, x25, [sp, #16]
   154a0:	ldp	x29, x30, [sp], #80
   154a4:	ret
   154a8:	bl	a840 <abort@plt>

00000000000154ac <hash_insert_if_absent@@Base>:
   154ac:	stp	x29, x30, [sp, #-80]!
   154b0:	str	x25, [sp, #16]
   154b4:	stp	x24, x23, [sp, #32]
   154b8:	stp	x22, x21, [sp, #48]
   154bc:	stp	x20, x19, [sp, #64]
   154c0:	mov	x29, sp
   154c4:	cbz	x1, 15790 <hash_insert_if_absent@@Base+0x2e4>
   154c8:	mov	x20, x1
   154cc:	ldr	x8, [x0, #48]
   154d0:	ldr	x1, [x0, #16]
   154d4:	mov	x19, x0
   154d8:	mov	x0, x20
   154dc:	mov	x21, x2
   154e0:	blr	x8
   154e4:	ldr	x8, [x19, #16]
   154e8:	cmp	x0, x8
   154ec:	b.cs	15790 <hash_insert_if_absent@@Base+0x2e4>  // b.hs, b.nlast
   154f0:	ldr	x25, [x19]
   154f4:	mov	x22, x0
   154f8:	add	x23, x25, x0, lsl #4
   154fc:	ldr	x1, [x23]
   15500:	cbz	x1, 15528 <hash_insert_if_absent@@Base+0x7c>
   15504:	cmp	x1, x20
   15508:	b.eq	1569c <hash_insert_if_absent@@Base+0x1f0>  // b.none
   1550c:	ldr	x8, [x19, #56]
   15510:	mov	x0, x20
   15514:	blr	x8
   15518:	mov	x24, x23
   1551c:	tbz	w0, #0, 156b0 <hash_insert_if_absent@@Base+0x204>
   15520:	ldr	x8, [x24]
   15524:	cbnz	x8, 156a0 <hash_insert_if_absent@@Base+0x1f4>
   15528:	ldr	x8, [x19, #40]
   1552c:	ldp	x10, x9, [x19, #16]
   15530:	ldr	s1, [x8, #8]
   15534:	ucvtf	s0, x10
   15538:	ucvtf	s2, x9
   1553c:	fmul	s3, s1, s0
   15540:	fcmp	s3, s2
   15544:	b.pl	15680 <hash_insert_if_absent@@Base+0x1d4>  // b.nfrst
   15548:	adrp	x9, 2f000 <vasnprintf@@Base+0x124c>
   1554c:	add	x9, x9, #0x8a0
   15550:	cmp	x8, x9
   15554:	b.eq	155e4 <hash_insert_if_absent@@Base+0x138>  // b.none
   15558:	mov	w10, #0xcccd                	// #52429
   1555c:	movk	w10, #0x3dcc, lsl #16
   15560:	fmov	s3, w10
   15564:	fcmp	s1, s3
   15568:	b.le	155d4 <hash_insert_if_absent@@Base+0x128>
   1556c:	mov	w10, #0x6666                	// #26214
   15570:	movk	w10, #0x3f66, lsl #16
   15574:	fmov	s3, w10
   15578:	fcmp	s1, s3
   1557c:	b.pl	155d4 <hash_insert_if_absent@@Base+0x128>  // b.nfrst
   15580:	ldr	s3, [x8, #12]
   15584:	mov	w10, #0xcccd                	// #52429
   15588:	movk	w10, #0x3f8c, lsl #16
   1558c:	fmov	s4, w10
   15590:	fcmp	s3, s4
   15594:	b.le	155d4 <hash_insert_if_absent@@Base+0x128>
   15598:	ldr	s3, [x8]
   1559c:	fcmp	s3, #0.0
   155a0:	b.lt	155d4 <hash_insert_if_absent@@Base+0x128>  // b.tstop
   155a4:	mov	w10, #0xcccd                	// #52429
   155a8:	movk	w10, #0x3dcc, lsl #16
   155ac:	fmov	s4, w10
   155b0:	fadd	s3, s3, s4
   155b4:	fcmp	s3, s1
   155b8:	b.pl	155d4 <hash_insert_if_absent@@Base+0x128>  // b.nfrst
   155bc:	ldr	s4, [x8, #4]
   155c0:	fmov	s5, #1.000000000000000000e+00
   155c4:	fcmp	s4, s5
   155c8:	b.hi	155d4 <hash_insert_if_absent@@Base+0x128>  // b.pmore
   155cc:	fcmp	s3, s4
   155d0:	b.mi	155e8 <hash_insert_if_absent@@Base+0x13c>  // b.first
   155d4:	mov	w8, #0xcccd                	// #52429
   155d8:	movk	w8, #0x3f4c, lsl #16
   155dc:	fmov	s1, w8
   155e0:	str	x9, [x19, #40]
   155e4:	mov	x8, x9
   155e8:	fmul	s3, s1, s0
   155ec:	fcmp	s3, s2
   155f0:	b.pl	15680 <hash_insert_if_absent@@Base+0x1d4>  // b.nfrst
   155f4:	ldr	s2, [x8, #12]
   155f8:	ldrb	w8, [x8, #16]
   155fc:	fmul	s0, s2, s0
   15600:	cmp	w8, #0x0
   15604:	fmul	s1, s1, s0
   15608:	mov	w8, #0x5f800000            	// #1602224128
   1560c:	fcsel	s0, s1, s0, eq  // eq = none
   15610:	fmov	s1, w8
   15614:	fcmp	s0, s1
   15618:	b.ge	1572c <hash_insert_if_absent@@Base+0x280>  // b.tcont
   1561c:	fcvtzu	x1, s0
   15620:	mov	x0, x19
   15624:	bl	a860 <hash_rehash@plt>
   15628:	tbz	w0, #0, 1572c <hash_insert_if_absent@@Base+0x280>
   1562c:	ldr	x8, [x19, #48]
   15630:	ldr	x1, [x19, #16]
   15634:	mov	x0, x20
   15638:	blr	x8
   1563c:	ldr	x8, [x19, #16]
   15640:	cmp	x0, x8
   15644:	b.cs	15790 <hash_insert_if_absent@@Base+0x2e4>  // b.hs, b.nlast
   15648:	ldr	x22, [x19]
   1564c:	mov	x21, x0
   15650:	add	x23, x22, x0, lsl #4
   15654:	ldr	x1, [x23]
   15658:	cbz	x1, 15680 <hash_insert_if_absent@@Base+0x1d4>
   1565c:	cmp	x1, x20
   15660:	mov	x8, x20
   15664:	b.eq	1567c <hash_insert_if_absent@@Base+0x1d0>  // b.none
   15668:	ldr	x8, [x19, #56]
   1566c:	mov	x0, x20
   15670:	blr	x8
   15674:	tbz	w0, #0, 15754 <hash_insert_if_absent@@Base+0x2a8>
   15678:	ldr	x8, [x23]
   1567c:	cbnz	x8, 15790 <hash_insert_if_absent@@Base+0x2e4>
   15680:	ldr	x8, [x23]
   15684:	cbz	x8, 156e0 <hash_insert_if_absent@@Base+0x234>
   15688:	ldr	x0, [x19, #72]
   1568c:	cbz	x0, 156fc <hash_insert_if_absent@@Base+0x250>
   15690:	ldr	x8, [x0, #8]
   15694:	str	x8, [x19, #72]
   15698:	b	15708 <hash_insert_if_absent@@Base+0x25c>
   1569c:	mov	x8, x20
   156a0:	mov	w0, wzr
   156a4:	cbz	x21, 15730 <hash_insert_if_absent@@Base+0x284>
   156a8:	str	x8, [x21]
   156ac:	b	15730 <hash_insert_if_absent@@Base+0x284>
   156b0:	add	x24, x25, x22, lsl #4
   156b4:	ldr	x8, [x24, #8]!
   156b8:	cbz	x8, 15528 <hash_insert_if_absent@@Base+0x7c>
   156bc:	ldr	x1, [x8]
   156c0:	cmp	x1, x20
   156c4:	b.eq	15748 <hash_insert_if_absent@@Base+0x29c>  // b.none
   156c8:	ldr	x8, [x19, #56]
   156cc:	mov	x0, x20
   156d0:	blr	x8
   156d4:	ldr	x24, [x24]
   156d8:	tbz	w0, #0, 156b4 <hash_insert_if_absent@@Base+0x208>
   156dc:	b	15520 <hash_insert_if_absent@@Base+0x74>
   156e0:	str	x20, [x23]
   156e4:	ldur	q0, [x19, #24]
   156e8:	mov	w0, #0x1                   	// #1
   156ec:	dup	v1.2d, x0
   156f0:	add	v0.2d, v0.2d, v1.2d
   156f4:	stur	q0, [x19, #24]
   156f8:	b	15730 <hash_insert_if_absent@@Base+0x284>
   156fc:	mov	w0, #0x10                  	// #16
   15700:	bl	a540 <malloc@plt>
   15704:	cbz	x0, 1572c <hash_insert_if_absent@@Base+0x280>
   15708:	str	x20, [x0]
   1570c:	ldr	x8, [x23, #8]
   15710:	str	x8, [x0, #8]
   15714:	str	x0, [x23, #8]
   15718:	ldr	x8, [x19, #32]
   1571c:	mov	w0, #0x1                   	// #1
   15720:	add	x8, x8, #0x1
   15724:	str	x8, [x19, #32]
   15728:	b	15730 <hash_insert_if_absent@@Base+0x284>
   1572c:	mov	w0, #0xffffffff            	// #-1
   15730:	ldp	x20, x19, [sp, #64]
   15734:	ldp	x22, x21, [sp, #48]
   15738:	ldp	x24, x23, [sp, #32]
   1573c:	ldr	x25, [sp, #16]
   15740:	ldp	x29, x30, [sp], #80
   15744:	ret
   15748:	mov	x8, x20
   1574c:	cbnz	x8, 156a0 <hash_insert_if_absent@@Base+0x1f4>
   15750:	b	15528 <hash_insert_if_absent@@Base+0x7c>
   15754:	add	x21, x22, x21, lsl #4
   15758:	ldr	x8, [x21, #8]!
   1575c:	cbz	x8, 15680 <hash_insert_if_absent@@Base+0x1d4>
   15760:	ldr	x1, [x8]
   15764:	cmp	x1, x20
   15768:	b.eq	15788 <hash_insert_if_absent@@Base+0x2dc>  // b.none
   1576c:	ldr	x8, [x19, #56]
   15770:	mov	x0, x20
   15774:	blr	x8
   15778:	ldr	x21, [x21]
   1577c:	tbz	w0, #0, 15758 <hash_insert_if_absent@@Base+0x2ac>
   15780:	ldr	x8, [x21]
   15784:	b	1567c <hash_insert_if_absent@@Base+0x1d0>
   15788:	mov	x8, x20
   1578c:	b	1567c <hash_insert_if_absent@@Base+0x1d0>
   15790:	bl	a840 <abort@plt>

0000000000015794 <hash_insert@@Base>:
   15794:	stp	x29, x30, [sp, #-32]!
   15798:	mov	x29, sp
   1579c:	add	x2, x29, #0x18
   157a0:	str	x19, [sp, #16]
   157a4:	mov	x19, x1
   157a8:	bl	a6f0 <hash_insert_if_absent@plt>
   157ac:	ldr	x8, [x29, #24]
   157b0:	cmp	w0, #0x0
   157b4:	csel	x8, x8, x19, eq  // eq = none
   157b8:	ldr	x19, [sp, #16]
   157bc:	cmn	w0, #0x1
   157c0:	csel	x0, xzr, x8, eq  // eq = none
   157c4:	ldp	x29, x30, [sp], #32
   157c8:	ret

00000000000157cc <hash_delete@@Base>:
   157cc:	stp	x29, x30, [sp, #-64]!
   157d0:	stp	x22, x21, [sp, #32]
   157d4:	stp	x20, x19, [sp, #48]
   157d8:	ldr	x8, [x0, #16]
   157dc:	ldr	x9, [x0, #48]
   157e0:	mov	x20, x0
   157e4:	mov	x19, x1
   157e8:	mov	x0, x1
   157ec:	mov	x1, x8
   157f0:	str	x23, [sp, #16]
   157f4:	mov	x29, sp
   157f8:	blr	x9
   157fc:	ldr	x8, [x20, #16]
   15800:	cmp	x0, x8
   15804:	b.cs	15a00 <hash_delete@@Base+0x234>  // b.hs, b.nlast
   15808:	ldr	x23, [x20]
   1580c:	mov	x21, x0
   15810:	add	x22, x23, x0, lsl #4
   15814:	ldr	x1, [x22]
   15818:	cbz	x1, 15888 <hash_delete@@Base+0xbc>
   1581c:	cmp	x1, x19
   15820:	b.eq	15838 <hash_delete@@Base+0x6c>  // b.none
   15824:	ldr	x8, [x20, #56]
   15828:	mov	x0, x19
   1582c:	blr	x8
   15830:	tbz	w0, #0, 15850 <hash_delete@@Base+0x84>
   15834:	ldr	x19, [x22]
   15838:	add	x8, x23, x21, lsl #4
   1583c:	ldr	x8, [x8, #8]
   15840:	cbz	x8, 15890 <hash_delete@@Base+0xc4>
   15844:	ldr	q0, [x8]
   15848:	str	q0, [x22]
   1584c:	b	158b0 <hash_delete@@Base+0xe4>
   15850:	add	x21, x23, x21, lsl #4
   15854:	ldr	x9, [x21, #8]!
   15858:	cbz	x9, 15888 <hash_delete@@Base+0xbc>
   1585c:	ldr	x1, [x9]
   15860:	cmp	x1, x19
   15864:	b.eq	1589c <hash_delete@@Base+0xd0>  // b.none
   15868:	ldr	x8, [x20, #56]
   1586c:	mov	x0, x19
   15870:	blr	x8
   15874:	ldr	x8, [x21]
   15878:	tbnz	w0, #0, 158a4 <hash_delete@@Base+0xd8>
   1587c:	ldr	x9, [x8, #8]!
   15880:	mov	x21, x8
   15884:	cbnz	x9, 1585c <hash_delete@@Base+0x90>
   15888:	mov	x19, xzr
   1588c:	b	159e8 <hash_delete@@Base+0x21c>
   15890:	str	xzr, [x22]
   15894:	cbnz	x19, 158c4 <hash_delete@@Base+0xf8>
   15898:	b	159e8 <hash_delete@@Base+0x21c>
   1589c:	mov	x8, x9
   158a0:	b	158a8 <hash_delete@@Base+0xdc>
   158a4:	ldr	x19, [x8]
   158a8:	ldr	x9, [x8, #8]
   158ac:	str	x9, [x21]
   158b0:	str	xzr, [x8]
   158b4:	ldr	x9, [x20, #72]
   158b8:	str	x9, [x8, #8]
   158bc:	str	x8, [x20, #72]
   158c0:	cbz	x19, 159e8 <hash_delete@@Base+0x21c>
   158c4:	ldr	x8, [x20, #32]
   158c8:	sub	x8, x8, #0x1
   158cc:	str	x8, [x20, #32]
   158d0:	ldr	x8, [x22]
   158d4:	cbnz	x8, 159e8 <hash_delete@@Base+0x21c>
   158d8:	ldp	x10, x9, [x20, #16]
   158dc:	ldr	x8, [x20, #40]
   158e0:	sub	x9, x9, #0x1
   158e4:	str	x9, [x20, #24]
   158e8:	ldr	s2, [x8]
   158ec:	ucvtf	s0, x10
   158f0:	ucvtf	s1, x9
   158f4:	fmul	s3, s2, s0
   158f8:	fcmp	s3, s1
   158fc:	b.le	159e8 <hash_delete@@Base+0x21c>
   15900:	adrp	x9, 2f000 <vasnprintf@@Base+0x124c>
   15904:	add	x9, x9, #0x8a0
   15908:	cmp	x8, x9
   1590c:	b.eq	15994 <hash_delete@@Base+0x1c8>  // b.none
   15910:	ldr	s3, [x8, #8]
   15914:	mov	w10, #0xcccd                	// #52429
   15918:	movk	w10, #0x3dcc, lsl #16
   1591c:	fmov	s4, w10
   15920:	fcmp	s3, s4
   15924:	b.le	1598c <hash_delete@@Base+0x1c0>
   15928:	mov	w10, #0x6666                	// #26214
   1592c:	movk	w10, #0x3f66, lsl #16
   15930:	fmov	s4, w10
   15934:	fcmp	s3, s4
   15938:	b.pl	1598c <hash_delete@@Base+0x1c0>  // b.nfrst
   1593c:	fcmp	s2, #0.0
   15940:	b.lt	1598c <hash_delete@@Base+0x1c0>  // b.tstop
   15944:	ldr	s4, [x8, #12]
   15948:	mov	w10, #0xcccd                	// #52429
   1594c:	movk	w10, #0x3f8c, lsl #16
   15950:	fmov	s5, w10
   15954:	fcmp	s4, s5
   15958:	b.le	1598c <hash_delete@@Base+0x1c0>
   1595c:	mov	w10, #0xcccd                	// #52429
   15960:	movk	w10, #0x3dcc, lsl #16
   15964:	fmov	s4, w10
   15968:	fadd	s4, s2, s4
   1596c:	fcmp	s4, s3
   15970:	b.pl	1598c <hash_delete@@Base+0x1c0>  // b.nfrst
   15974:	ldr	s3, [x8, #4]
   15978:	fmov	s5, #1.000000000000000000e+00
   1597c:	fcmp	s3, s5
   15980:	b.hi	1598c <hash_delete@@Base+0x1c0>  // b.pmore
   15984:	fcmp	s4, s3
   15988:	b.mi	15998 <hash_delete@@Base+0x1cc>  // b.first
   1598c:	fmov	s2, wzr
   15990:	str	x9, [x20, #40]
   15994:	mov	x8, x9
   15998:	fmul	s2, s2, s0
   1599c:	fcmp	s2, s1
   159a0:	b.le	159e8 <hash_delete@@Base+0x21c>
   159a4:	ldr	s1, [x8, #4]
   159a8:	ldrb	w9, [x8, #16]
   159ac:	fmul	s0, s1, s0
   159b0:	cbnz	w9, 159bc <hash_delete@@Base+0x1f0>
   159b4:	ldr	s1, [x8, #8]
   159b8:	fmul	s0, s0, s1
   159bc:	fcvtzu	x1, s0
   159c0:	mov	x0, x20
   159c4:	bl	a860 <hash_rehash@plt>
   159c8:	tbnz	w0, #0, 159e8 <hash_delete@@Base+0x21c>
   159cc:	ldr	x0, [x20, #72]
   159d0:	cbz	x0, 159e4 <hash_delete@@Base+0x218>
   159d4:	ldr	x21, [x0, #8]
   159d8:	bl	a960 <free@plt>
   159dc:	mov	x0, x21
   159e0:	cbnz	x21, 159d4 <hash_delete@@Base+0x208>
   159e4:	str	xzr, [x20, #72]
   159e8:	mov	x0, x19
   159ec:	ldp	x20, x19, [sp, #48]
   159f0:	ldp	x22, x21, [sp, #32]
   159f4:	ldr	x23, [sp, #16]
   159f8:	ldp	x29, x30, [sp], #64
   159fc:	ret
   15a00:	bl	a840 <abort@plt>
   15a04:	stp	x29, x30, [sp, #-64]!
   15a08:	stp	x24, x23, [sp, #16]
   15a0c:	mov	x24, x0
   15a10:	mov	w0, #0x40                  	// #64
   15a14:	stp	x22, x21, [sp, #32]
   15a18:	stp	x20, x19, [sp, #48]
   15a1c:	mov	x29, sp
   15a20:	mov	x20, x4
   15a24:	mov	x22, x3
   15a28:	mov	x21, x2
   15a2c:	mov	x23, x1
   15a30:	bl	a540 <malloc@plt>
   15a34:	mov	x19, x0
   15a38:	cbz	x0, 15a78 <hash_delete@@Base+0x2ac>
   15a3c:	mov	w8, #0xb                   	// #11
   15a40:	mov	w0, #0xb                   	// #11
   15a44:	mov	w1, #0x8                   	// #8
   15a48:	stp	x24, x23, [x19]
   15a4c:	stp	x22, x20, [x19, #16]
   15a50:	str	x21, [x19, #32]
   15a54:	str	x8, [x19, #48]
   15a58:	bl	a6b0 <calloc@plt>
   15a5c:	str	x0, [x19, #40]
   15a60:	cbz	x0, 15a6c <hash_delete@@Base+0x2a0>
   15a64:	str	xzr, [x19, #56]
   15a68:	b	15a78 <hash_delete@@Base+0x2ac>
   15a6c:	mov	x0, x19
   15a70:	bl	a960 <free@plt>
   15a74:	mov	x19, xzr
   15a78:	mov	x0, x19
   15a7c:	ldp	x20, x19, [sp, #48]
   15a80:	ldp	x22, x21, [sp, #32]
   15a84:	ldp	x24, x23, [sp, #16]
   15a88:	ldp	x29, x30, [sp], #64
   15a8c:	ret
   15a90:	ldr	x0, [x0, #56]
   15a94:	ret
   15a98:	stp	x29, x30, [sp, #-64]!
   15a9c:	stp	x22, x21, [sp, #32]
   15aa0:	stp	x20, x19, [sp, #48]
   15aa4:	ldr	x8, [x0, #32]
   15aa8:	mov	x19, x2
   15aac:	mov	x22, x0
   15ab0:	mov	x20, x1
   15ab4:	str	x23, [sp, #16]
   15ab8:	mov	x29, sp
   15abc:	cbz	x8, 15ad0 <hash_delete@@Base+0x304>
   15ac0:	mov	x0, x20
   15ac4:	blr	x8
   15ac8:	mov	x21, x0
   15acc:	b	15ad4 <hash_delete@@Base+0x308>
   15ad0:	mov	x21, x20
   15ad4:	ldp	x9, x8, [x22, #40]
   15ad8:	udiv	x10, x21, x8
   15adc:	msub	x8, x10, x8, x21
   15ae0:	ldr	x23, [x9, x8, lsl #3]
   15ae4:	cbz	x23, 15b30 <hash_delete@@Base+0x364>
   15ae8:	ldr	x22, [x22, #8]
   15aec:	b	15b00 <hash_delete@@Base+0x334>
   15af0:	cmp	x1, x20
   15af4:	b.eq	15b20 <hash_delete@@Base+0x354>  // b.none
   15af8:	ldr	x23, [x23]
   15afc:	cbz	x23, 15b30 <hash_delete@@Base+0x364>
   15b00:	ldr	x8, [x23, #8]
   15b04:	cmp	x8, x21
   15b08:	b.ne	15af8 <hash_delete@@Base+0x32c>  // b.any
   15b0c:	ldr	x1, [x23, #16]
   15b10:	cbz	x22, 15af0 <hash_delete@@Base+0x324>
   15b14:	mov	x0, x20
   15b18:	blr	x22
   15b1c:	tbz	w0, #0, 15af8 <hash_delete@@Base+0x32c>
   15b20:	ldr	x8, [x23, #24]
   15b24:	mov	w0, #0x1                   	// #1
   15b28:	str	x8, [x19]
   15b2c:	b	15b34 <hash_delete@@Base+0x368>
   15b30:	mov	w0, wzr
   15b34:	ldp	x20, x19, [sp, #48]
   15b38:	ldp	x22, x21, [sp, #32]
   15b3c:	ldr	x23, [sp, #16]
   15b40:	ldp	x29, x30, [sp], #64
   15b44:	ret
   15b48:	stp	x29, x30, [sp, #-80]!
   15b4c:	stp	x26, x25, [sp, #16]
   15b50:	stp	x24, x23, [sp, #32]
   15b54:	stp	x22, x21, [sp, #48]
   15b58:	stp	x20, x19, [sp, #64]
   15b5c:	ldr	x8, [x0, #32]
   15b60:	mov	x22, x3
   15b64:	mov	x20, x2
   15b68:	mov	x19, x0
   15b6c:	mov	x21, x1
   15b70:	mov	x29, sp
   15b74:	cbz	x8, 15b88 <hash_delete@@Base+0x3bc>
   15b78:	mov	x0, x21
   15b7c:	blr	x8
   15b80:	mov	x23, x0
   15b84:	b	15b8c <hash_delete@@Base+0x3c0>
   15b88:	mov	x23, x21
   15b8c:	ldp	x9, x8, [x19, #40]
   15b90:	udiv	x10, x23, x8
   15b94:	msub	x24, x10, x8, x23
   15b98:	ldr	x25, [x9, x24, lsl #3]
   15b9c:	cbz	x25, 15bec <hash_delete@@Base+0x420>
   15ba0:	ldr	x26, [x19, #8]
   15ba4:	b	15bb8 <hash_delete@@Base+0x3ec>
   15ba8:	cmp	x1, x21
   15bac:	b.eq	15bd8 <hash_delete@@Base+0x40c>  // b.none
   15bb0:	ldr	x25, [x25]
   15bb4:	cbz	x25, 15bec <hash_delete@@Base+0x420>
   15bb8:	ldr	x8, [x25, #8]
   15bbc:	cmp	x8, x23
   15bc0:	b.ne	15bb0 <hash_delete@@Base+0x3e4>  // b.any
   15bc4:	ldr	x1, [x25, #16]
   15bc8:	cbz	x26, 15ba8 <hash_delete@@Base+0x3dc>
   15bcc:	mov	x0, x21
   15bd0:	blr	x26
   15bd4:	tbz	w0, #0, 15bb0 <hash_delete@@Base+0x3e4>
   15bd8:	ldr	x8, [x25, #24]
   15bdc:	mov	w0, wzr
   15be0:	str	x8, [x22]
   15be4:	str	x20, [x25, #24]
   15be8:	b	15cd0 <hash_delete@@Base+0x504>
   15bec:	mov	w0, #0x20                  	// #32
   15bf0:	bl	a540 <malloc@plt>
   15bf4:	cbz	x0, 15ccc <hash_delete@@Base+0x500>
   15bf8:	stp	x21, x20, [x0, #16]
   15bfc:	str	x23, [x0, #8]
   15c00:	ldr	x8, [x19, #40]
   15c04:	lsl	x9, x24, #3
   15c08:	ldr	x10, [x8, x9]
   15c0c:	str	x10, [x0]
   15c10:	str	x0, [x8, x9]
   15c14:	ldp	x22, x8, [x19, #48]
   15c18:	add	x9, x8, #0x1
   15c1c:	adds	x8, x9, x9, lsr #1
   15c20:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   15c24:	cmp	x8, x22
   15c28:	str	x9, [x19, #56]
   15c2c:	b.ls	15c8c <hash_delete@@Base+0x4c0>  // b.plast
   15c30:	adrp	x10, 2f000 <vasnprintf@@Base+0x124c>
   15c34:	mov	x9, xzr
   15c38:	add	x10, x10, #0x8b8
   15c3c:	ldr	x20, [x10, x9]
   15c40:	cmp	x20, x8
   15c44:	b.cs	15c58 <hash_delete@@Base+0x48c>  // b.hs, b.nlast
   15c48:	add	x9, x9, #0x8
   15c4c:	cmp	x9, #0x740
   15c50:	b.ne	15c3c <hash_delete@@Base+0x470>  // b.any
   15c54:	mov	x20, #0xffffffffffffffff    	// #-1
   15c58:	cmp	x20, x22
   15c5c:	b.ls	15c8c <hash_delete@@Base+0x4c0>  // b.plast
   15c60:	lsr	x8, x20, #61
   15c64:	cbnz	x8, 15c8c <hash_delete@@Base+0x4c0>
   15c68:	ldr	x21, [x19, #40]
   15c6c:	mov	w1, #0x8                   	// #8
   15c70:	mov	x0, x20
   15c74:	bl	a6b0 <calloc@plt>
   15c78:	cbz	x0, 15c8c <hash_delete@@Base+0x4c0>
   15c7c:	cbnz	x22, 15c98 <hash_delete@@Base+0x4cc>
   15c80:	stp	x0, x20, [x19, #40]
   15c84:	mov	x0, x21
   15c88:	bl	a960 <free@plt>
   15c8c:	mov	w0, #0x1                   	// #1
   15c90:	b	15cd0 <hash_delete@@Base+0x504>
   15c94:	cbz	x22, 15c80 <hash_delete@@Base+0x4b4>
   15c98:	sub	x22, x22, #0x1
   15c9c:	ldr	x8, [x21, x22, lsl #3]
   15ca0:	cbz	x8, 15c94 <hash_delete@@Base+0x4c8>
   15ca4:	ldp	x11, x9, [x8]
   15ca8:	udiv	x10, x9, x20
   15cac:	msub	x9, x10, x20, x9
   15cb0:	lsl	x9, x9, #3
   15cb4:	ldr	x10, [x0, x9]
   15cb8:	str	x10, [x8]
   15cbc:	str	x8, [x0, x9]
   15cc0:	mov	x8, x11
   15cc4:	cbnz	x11, 15ca4 <hash_delete@@Base+0x4d8>
   15cc8:	b	15c94 <hash_delete@@Base+0x4c8>
   15ccc:	mov	w0, #0xffffffff            	// #-1
   15cd0:	ldp	x20, x19, [sp, #64]
   15cd4:	ldp	x22, x21, [sp, #48]
   15cd8:	ldp	x24, x23, [sp, #32]
   15cdc:	ldp	x26, x25, [sp, #16]
   15ce0:	ldp	x29, x30, [sp], #80
   15ce4:	ret
   15ce8:	stp	x29, x30, [sp, #-80]!
   15cec:	stp	x24, x23, [sp, #32]
   15cf0:	stp	x22, x21, [sp, #48]
   15cf4:	stp	x20, x19, [sp, #64]
   15cf8:	ldr	x8, [x0, #32]
   15cfc:	mov	x20, x2
   15d00:	mov	x19, x0
   15d04:	mov	x21, x1
   15d08:	str	x25, [sp, #16]
   15d0c:	mov	x29, sp
   15d10:	cbz	x8, 15d24 <hash_delete@@Base+0x558>
   15d14:	mov	x0, x21
   15d18:	blr	x8
   15d1c:	mov	x23, x0
   15d20:	b	15d28 <hash_delete@@Base+0x55c>
   15d24:	mov	x23, x21
   15d28:	ldp	x9, x8, [x19, #40]
   15d2c:	udiv	x10, x23, x8
   15d30:	msub	x8, x10, x8, x23
   15d34:	add	x25, x9, x8, lsl #3
   15d38:	ldr	x22, [x25]
   15d3c:	cbz	x22, 15d84 <hash_delete@@Base+0x5b8>
   15d40:	ldr	x24, [x19, #8]
   15d44:	b	15d5c <hash_delete@@Base+0x590>
   15d48:	cmp	x1, x21
   15d4c:	b.eq	15d8c <hash_delete@@Base+0x5c0>  // b.none
   15d50:	mov	x25, x22
   15d54:	ldr	x22, [x22]
   15d58:	cbz	x22, 15d84 <hash_delete@@Base+0x5b8>
   15d5c:	ldr	x8, [x22, #8]
   15d60:	cmp	x8, x23
   15d64:	b.ne	15d50 <hash_delete@@Base+0x584>  // b.any
   15d68:	ldr	x1, [x22, #16]
   15d6c:	cbz	x24, 15d48 <hash_delete@@Base+0x57c>
   15d70:	mov	x0, x21
   15d74:	blr	x24
   15d78:	tbnz	w0, #0, 15d8c <hash_delete@@Base+0x5c0>
   15d7c:	ldr	x22, [x25]
   15d80:	b	15d50 <hash_delete@@Base+0x584>
   15d84:	mov	w0, wzr
   15d88:	b	15dc4 <hash_delete@@Base+0x5f8>
   15d8c:	ldr	x8, [x22, #24]
   15d90:	str	x8, [x20]
   15d94:	ldr	x8, [x22]
   15d98:	str	x8, [x25]
   15d9c:	ldr	x9, [x19, #56]
   15da0:	ldr	x8, [x19, #16]
   15da4:	sub	x9, x9, #0x1
   15da8:	str	x9, [x19, #56]
   15dac:	cbz	x8, 15db8 <hash_delete@@Base+0x5ec>
   15db0:	ldr	x0, [x22, #16]
   15db4:	blr	x8
   15db8:	mov	x0, x22
   15dbc:	bl	a960 <free@plt>
   15dc0:	mov	w0, #0x1                   	// #1
   15dc4:	ldp	x20, x19, [sp, #64]
   15dc8:	ldp	x22, x21, [sp, #48]
   15dcc:	ldp	x24, x23, [sp, #32]
   15dd0:	ldr	x25, [sp, #16]
   15dd4:	ldp	x29, x30, [sp], #80
   15dd8:	ret
   15ddc:	stp	x29, x30, [sp, #-80]!
   15de0:	stp	x24, x23, [sp, #32]
   15de4:	stp	x22, x21, [sp, #48]
   15de8:	stp	x20, x19, [sp, #64]
   15dec:	ldr	x8, [x0, #56]
   15df0:	mov	x19, x0
   15df4:	str	x25, [sp, #16]
   15df8:	mov	x29, sp
   15dfc:	cbz	x8, 15e58 <hash_delete@@Base+0x68c>
   15e00:	ldr	x21, [x19, #48]
   15e04:	cbz	x21, 15e58 <hash_delete@@Base+0x68c>
   15e08:	ldp	x22, x23, [x19, #16]
   15e0c:	ldr	x24, [x19, #40]
   15e10:	b	15e18 <hash_delete@@Base+0x64c>
   15e14:	cbz	x21, 15e58 <hash_delete@@Base+0x68c>
   15e18:	sub	x21, x21, #0x1
   15e1c:	ldr	x20, [x24, x21, lsl #3]
   15e20:	cbnz	x20, 15e38 <hash_delete@@Base+0x66c>
   15e24:	b	15e14 <hash_delete@@Base+0x648>
   15e28:	mov	x0, x20
   15e2c:	bl	a960 <free@plt>
   15e30:	mov	x20, x25
   15e34:	cbz	x25, 15e14 <hash_delete@@Base+0x648>
   15e38:	ldr	x25, [x20]
   15e3c:	cbz	x23, 15e48 <hash_delete@@Base+0x67c>
   15e40:	ldr	x0, [x20, #24]
   15e44:	blr	x23
   15e48:	cbz	x22, 15e28 <hash_delete@@Base+0x65c>
   15e4c:	ldr	x0, [x20, #16]
   15e50:	blr	x22
   15e54:	b	15e28 <hash_delete@@Base+0x65c>
   15e58:	ldr	x0, [x19, #40]
   15e5c:	bl	a960 <free@plt>
   15e60:	mov	x0, x19
   15e64:	ldp	x20, x19, [sp, #64]
   15e68:	ldp	x22, x21, [sp, #48]
   15e6c:	ldp	x24, x23, [sp, #32]
   15e70:	ldr	x25, [sp, #16]
   15e74:	ldp	x29, x30, [sp], #80
   15e78:	b	a960 <free@plt>
   15e7c:	ldr	x9, [x0]
   15e80:	str	xzr, [x8, #24]
   15e84:	stp	x9, x0, [x8]
   15e88:	ldr	x9, [x0, #48]
   15e8c:	stp	xzr, x9, [x8, #40]
   15e90:	ret
   15e94:	ldr	x8, [x0, #24]
   15e98:	cbz	x8, 15ebc <hash_delete@@Base+0x6f0>
   15e9c:	ldr	x9, [x8, #16]
   15ea0:	str	x9, [x1]
   15ea4:	ldr	x9, [x8, #24]
   15ea8:	str	x9, [x2]
   15eac:	ldr	x8, [x8]
   15eb0:	str	x8, [x0, #24]
   15eb4:	mov	w0, #0x1                   	// #1
   15eb8:	ret
   15ebc:	ldp	x8, x9, [x0, #40]
   15ec0:	cmp	x8, x9
   15ec4:	b.cs	15ee4 <hash_delete@@Base+0x718>  // b.hs, b.nlast
   15ec8:	ldr	x10, [x0, #8]
   15ecc:	ldr	x10, [x10, #40]
   15ed0:	ldr	x11, [x10, x8, lsl #3]
   15ed4:	add	x8, x8, #0x1
   15ed8:	cbnz	x11, 15ef0 <hash_delete@@Base+0x724>
   15edc:	cmp	x9, x8
   15ee0:	b.ne	15ed0 <hash_delete@@Base+0x704>  // b.any
   15ee4:	str	x9, [x0, #40]
   15ee8:	mov	w0, wzr
   15eec:	ret
   15ef0:	ldr	x9, [x11, #16]
   15ef4:	str	x9, [x1]
   15ef8:	ldr	x9, [x11, #24]
   15efc:	str	x9, [x2]
   15f00:	ldr	x9, [x11]
   15f04:	str	x8, [x0, #40]
   15f08:	str	x9, [x0, #24]
   15f0c:	mov	w0, #0x1                   	// #1
   15f10:	ret
   15f14:	ret

0000000000015f18 <hash_pjw@@Base>:
   15f18:	ldrb	w9, [x0]
   15f1c:	cbz	w9, 15f3c <hash_pjw@@Base+0x24>
   15f20:	mov	x8, xzr
   15f24:	add	x10, x0, #0x1
   15f28:	ror	x8, x8, #55
   15f2c:	add	x8, x8, w9, uxtb
   15f30:	ldrb	w9, [x10], #1
   15f34:	cbnz	w9, 15f28 <hash_pjw@@Base+0x10>
   15f38:	b	15f40 <hash_pjw@@Base+0x28>
   15f3c:	mov	x8, xzr
   15f40:	udiv	x9, x8, x1
   15f44:	msub	x0, x9, x1, x8
   15f48:	ret

0000000000015f4c <hash_pjw_bare@@Base>:
   15f4c:	cbz	x1, 15f80 <hash_pjw_bare@@Base+0x34>
   15f50:	mov	x10, xzr
   15f54:	mov	x8, xzr
   15f58:	mov	w9, #0x1                   	// #1
   15f5c:	ldrb	w11, [x0, x10]
   15f60:	ror	x8, x8, #55
   15f64:	mov	w10, w9
   15f68:	cmp	x10, x1
   15f6c:	add	x8, x8, x11
   15f70:	add	w9, w9, #0x1
   15f74:	b.cc	15f5c <hash_pjw_bare@@Base+0x10>  // b.lo, b.ul, b.last
   15f78:	mov	x0, x8
   15f7c:	ret
   15f80:	mov	x0, xzr
   15f84:	ret
   15f88:	stp	x29, x30, [sp, #-64]!
   15f8c:	str	x23, [sp, #16]
   15f90:	mov	x23, x0
   15f94:	mov	w0, #0x38                  	// #56
   15f98:	stp	x22, x21, [sp, #32]
   15f9c:	stp	x20, x19, [sp, #48]
   15fa0:	mov	x29, sp
   15fa4:	mov	x21, x3
   15fa8:	mov	x20, x2
   15fac:	mov	x22, x1
   15fb0:	bl	a540 <malloc@plt>
   15fb4:	mov	x19, x0
   15fb8:	cbz	x0, 15ff4 <hash_pjw_bare@@Base+0xa8>
   15fbc:	mov	w8, #0xb                   	// #11
   15fc0:	mov	w0, #0xb                   	// #11
   15fc4:	mov	w1, #0x8                   	// #8
   15fc8:	stp	x23, x22, [x19]
   15fcc:	stp	x21, x20, [x19, #16]
   15fd0:	str	x8, [x19, #40]
   15fd4:	bl	a6b0 <calloc@plt>
   15fd8:	str	x0, [x19, #32]
   15fdc:	cbz	x0, 15fe8 <hash_pjw_bare@@Base+0x9c>
   15fe0:	str	xzr, [x19, #48]
   15fe4:	b	15ff4 <hash_pjw_bare@@Base+0xa8>
   15fe8:	mov	x0, x19
   15fec:	bl	a960 <free@plt>
   15ff0:	mov	x19, xzr
   15ff4:	mov	x0, x19
   15ff8:	ldp	x20, x19, [sp, #48]
   15ffc:	ldp	x22, x21, [sp, #32]
   16000:	ldr	x23, [sp, #16]
   16004:	ldp	x29, x30, [sp], #64
   16008:	ret
   1600c:	ldr	x0, [x0, #48]
   16010:	ret
   16014:	stp	x29, x30, [sp, #-48]!
   16018:	stp	x22, x21, [sp, #16]
   1601c:	stp	x20, x19, [sp, #32]
   16020:	ldr	x8, [x0, #24]
   16024:	mov	x21, x0
   16028:	mov	x19, x1
   1602c:	mov	x29, sp
   16030:	cbz	x8, 16044 <hash_pjw_bare@@Base+0xf8>
   16034:	mov	x0, x19
   16038:	blr	x8
   1603c:	mov	x20, x0
   16040:	b	16048 <hash_pjw_bare@@Base+0xfc>
   16044:	mov	x20, x19
   16048:	ldp	x9, x8, [x21, #32]
   1604c:	udiv	x10, x20, x8
   16050:	msub	x8, x10, x8, x20
   16054:	ldr	x22, [x9, x8, lsl #3]
   16058:	cbz	x22, 1609c <hash_pjw_bare@@Base+0x150>
   1605c:	ldr	x21, [x21, #8]
   16060:	b	16074 <hash_pjw_bare@@Base+0x128>
   16064:	cmp	x1, x19
   16068:	b.eq	16094 <hash_pjw_bare@@Base+0x148>  // b.none
   1606c:	ldr	x22, [x22]
   16070:	cbz	x22, 1609c <hash_pjw_bare@@Base+0x150>
   16074:	ldr	x8, [x22, #8]
   16078:	cmp	x8, x20
   1607c:	b.ne	1606c <hash_pjw_bare@@Base+0x120>  // b.any
   16080:	ldr	x1, [x22, #16]
   16084:	cbz	x21, 16064 <hash_pjw_bare@@Base+0x118>
   16088:	mov	x0, x19
   1608c:	blr	x21
   16090:	tbz	w0, #0, 1606c <hash_pjw_bare@@Base+0x120>
   16094:	mov	w0, #0x1                   	// #1
   16098:	b	160a0 <hash_pjw_bare@@Base+0x154>
   1609c:	mov	w0, wzr
   160a0:	ldp	x20, x19, [sp, #32]
   160a4:	ldp	x22, x21, [sp, #16]
   160a8:	ldp	x29, x30, [sp], #48
   160ac:	ret
   160b0:	stp	x29, x30, [sp, #-64]!
   160b4:	stp	x24, x23, [sp, #16]
   160b8:	stp	x22, x21, [sp, #32]
   160bc:	stp	x20, x19, [sp, #48]
   160c0:	ldr	x8, [x0, #24]
   160c4:	mov	x19, x0
   160c8:	mov	x20, x1
   160cc:	mov	x29, sp
   160d0:	cbz	x8, 160e4 <hash_pjw_bare@@Base+0x198>
   160d4:	mov	x0, x20
   160d8:	blr	x8
   160dc:	mov	x21, x0
   160e0:	b	160e8 <hash_pjw_bare@@Base+0x19c>
   160e4:	mov	x21, x20
   160e8:	ldp	x9, x8, [x19, #32]
   160ec:	udiv	x10, x21, x8
   160f0:	msub	x22, x10, x8, x21
   160f4:	ldr	x23, [x9, x22, lsl #3]
   160f8:	cbz	x23, 1613c <hash_pjw_bare@@Base+0x1f0>
   160fc:	ldr	x24, [x19, #8]
   16100:	b	16114 <hash_pjw_bare@@Base+0x1c8>
   16104:	cmp	x1, x20
   16108:	b.eq	16134 <hash_pjw_bare@@Base+0x1e8>  // b.none
   1610c:	ldr	x23, [x23]
   16110:	cbz	x23, 1613c <hash_pjw_bare@@Base+0x1f0>
   16114:	ldr	x8, [x23, #8]
   16118:	cmp	x8, x21
   1611c:	b.ne	1610c <hash_pjw_bare@@Base+0x1c0>  // b.any
   16120:	ldr	x1, [x23, #16]
   16124:	cbz	x24, 16104 <hash_pjw_bare@@Base+0x1b8>
   16128:	mov	x0, x20
   1612c:	blr	x24
   16130:	tbz	w0, #0, 1610c <hash_pjw_bare@@Base+0x1c0>
   16134:	mov	w0, wzr
   16138:	b	1621c <hash_pjw_bare@@Base+0x2d0>
   1613c:	mov	w0, #0x18                  	// #24
   16140:	bl	a540 <malloc@plt>
   16144:	cbz	x0, 16218 <hash_pjw_bare@@Base+0x2cc>
   16148:	stp	x21, x20, [x0, #8]
   1614c:	ldr	x8, [x19, #32]
   16150:	lsl	x9, x22, #3
   16154:	ldr	x10, [x8, x9]
   16158:	str	x10, [x0]
   1615c:	str	x0, [x8, x9]
   16160:	ldp	x22, x8, [x19, #40]
   16164:	add	x9, x8, #0x1
   16168:	adds	x8, x9, x9, lsr #1
   1616c:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   16170:	cmp	x8, x22
   16174:	str	x9, [x19, #48]
   16178:	b.ls	161d8 <hash_pjw_bare@@Base+0x28c>  // b.plast
   1617c:	adrp	x10, 2f000 <vasnprintf@@Base+0x124c>
   16180:	mov	x9, xzr
   16184:	add	x10, x10, #0xff8
   16188:	ldr	x20, [x10, x9]
   1618c:	cmp	x20, x8
   16190:	b.cs	161a4 <hash_pjw_bare@@Base+0x258>  // b.hs, b.nlast
   16194:	add	x9, x9, #0x8
   16198:	cmp	x9, #0x740
   1619c:	b.ne	16188 <hash_pjw_bare@@Base+0x23c>  // b.any
   161a0:	mov	x20, #0xffffffffffffffff    	// #-1
   161a4:	cmp	x20, x22
   161a8:	b.ls	161d8 <hash_pjw_bare@@Base+0x28c>  // b.plast
   161ac:	lsr	x8, x20, #61
   161b0:	cbnz	x8, 161d8 <hash_pjw_bare@@Base+0x28c>
   161b4:	ldr	x21, [x19, #32]
   161b8:	mov	w1, #0x8                   	// #8
   161bc:	mov	x0, x20
   161c0:	bl	a6b0 <calloc@plt>
   161c4:	cbz	x0, 161d8 <hash_pjw_bare@@Base+0x28c>
   161c8:	cbnz	x22, 161e4 <hash_pjw_bare@@Base+0x298>
   161cc:	stp	x0, x20, [x19, #32]
   161d0:	mov	x0, x21
   161d4:	bl	a960 <free@plt>
   161d8:	mov	w0, #0x1                   	// #1
   161dc:	b	1621c <hash_pjw_bare@@Base+0x2d0>
   161e0:	cbz	x22, 161cc <hash_pjw_bare@@Base+0x280>
   161e4:	sub	x22, x22, #0x1
   161e8:	ldr	x8, [x21, x22, lsl #3]
   161ec:	cbz	x8, 161e0 <hash_pjw_bare@@Base+0x294>
   161f0:	ldp	x11, x9, [x8]
   161f4:	udiv	x10, x9, x20
   161f8:	msub	x9, x10, x20, x9
   161fc:	lsl	x9, x9, #3
   16200:	ldr	x10, [x0, x9]
   16204:	str	x10, [x8]
   16208:	str	x8, [x0, x9]
   1620c:	mov	x8, x11
   16210:	cbnz	x11, 161f0 <hash_pjw_bare@@Base+0x2a4>
   16214:	b	161e0 <hash_pjw_bare@@Base+0x294>
   16218:	mov	w0, #0xffffffff            	// #-1
   1621c:	ldp	x20, x19, [sp, #48]
   16220:	ldp	x22, x21, [sp, #32]
   16224:	ldp	x24, x23, [sp, #16]
   16228:	ldp	x29, x30, [sp], #64
   1622c:	ret
   16230:	stp	x29, x30, [sp, #-64]!
   16234:	stp	x24, x23, [sp, #16]
   16238:	stp	x22, x21, [sp, #32]
   1623c:	stp	x20, x19, [sp, #48]
   16240:	ldr	x8, [x0, #24]
   16244:	mov	x19, x0
   16248:	mov	x20, x1
   1624c:	mov	x29, sp
   16250:	cbz	x8, 16264 <hash_pjw_bare@@Base+0x318>
   16254:	mov	x0, x20
   16258:	blr	x8
   1625c:	mov	x22, x0
   16260:	b	16268 <hash_pjw_bare@@Base+0x31c>
   16264:	mov	x22, x20
   16268:	ldp	x9, x8, [x19, #32]
   1626c:	udiv	x10, x22, x8
   16270:	msub	x8, x10, x8, x22
   16274:	add	x24, x9, x8, lsl #3
   16278:	ldr	x21, [x24]
   1627c:	cbz	x21, 162c4 <hash_pjw_bare@@Base+0x378>
   16280:	ldr	x23, [x19, #8]
   16284:	b	1629c <hash_pjw_bare@@Base+0x350>
   16288:	cmp	x1, x20
   1628c:	b.eq	162cc <hash_pjw_bare@@Base+0x380>  // b.none
   16290:	mov	x24, x21
   16294:	ldr	x21, [x21]
   16298:	cbz	x21, 162c4 <hash_pjw_bare@@Base+0x378>
   1629c:	ldr	x8, [x21, #8]
   162a0:	cmp	x8, x22
   162a4:	b.ne	16290 <hash_pjw_bare@@Base+0x344>  // b.any
   162a8:	ldr	x1, [x21, #16]
   162ac:	cbz	x23, 16288 <hash_pjw_bare@@Base+0x33c>
   162b0:	mov	x0, x20
   162b4:	blr	x23
   162b8:	tbnz	w0, #0, 162cc <hash_pjw_bare@@Base+0x380>
   162bc:	ldr	x21, [x24]
   162c0:	b	16290 <hash_pjw_bare@@Base+0x344>
   162c4:	mov	w0, wzr
   162c8:	b	162fc <hash_pjw_bare@@Base+0x3b0>
   162cc:	ldr	x8, [x21]
   162d0:	str	x8, [x24]
   162d4:	ldr	x9, [x19, #48]
   162d8:	ldr	x8, [x19, #16]
   162dc:	sub	x9, x9, #0x1
   162e0:	str	x9, [x19, #48]
   162e4:	cbz	x8, 162f0 <hash_pjw_bare@@Base+0x3a4>
   162e8:	ldr	x0, [x21, #16]
   162ec:	blr	x8
   162f0:	mov	x0, x21
   162f4:	bl	a960 <free@plt>
   162f8:	mov	w0, #0x1                   	// #1
   162fc:	ldp	x20, x19, [sp, #48]
   16300:	ldp	x22, x21, [sp, #32]
   16304:	ldp	x24, x23, [sp, #16]
   16308:	ldp	x29, x30, [sp], #64
   1630c:	ret
   16310:	stp	x29, x30, [sp, #-64]!
   16314:	stp	x24, x23, [sp, #16]
   16318:	stp	x22, x21, [sp, #32]
   1631c:	stp	x20, x19, [sp, #48]
   16320:	ldr	x8, [x0, #48]
   16324:	mov	x19, x0
   16328:	mov	x29, sp
   1632c:	cbz	x8, 1637c <hash_pjw_bare@@Base+0x430>
   16330:	ldr	x21, [x19, #40]
   16334:	cbz	x21, 1637c <hash_pjw_bare@@Base+0x430>
   16338:	ldr	x22, [x19, #16]
   1633c:	ldr	x23, [x19, #32]
   16340:	b	16348 <hash_pjw_bare@@Base+0x3fc>
   16344:	cbz	x21, 1637c <hash_pjw_bare@@Base+0x430>
   16348:	sub	x21, x21, #0x1
   1634c:	ldr	x20, [x23, x21, lsl #3]
   16350:	cbnz	x20, 16368 <hash_pjw_bare@@Base+0x41c>
   16354:	b	16344 <hash_pjw_bare@@Base+0x3f8>
   16358:	mov	x0, x20
   1635c:	bl	a960 <free@plt>
   16360:	mov	x20, x24
   16364:	cbz	x24, 16344 <hash_pjw_bare@@Base+0x3f8>
   16368:	ldr	x24, [x20]
   1636c:	cbz	x22, 16358 <hash_pjw_bare@@Base+0x40c>
   16370:	ldr	x0, [x20, #16]
   16374:	blr	x22
   16378:	b	16358 <hash_pjw_bare@@Base+0x40c>
   1637c:	ldr	x0, [x19, #32]
   16380:	bl	a960 <free@plt>
   16384:	mov	x0, x19
   16388:	ldp	x20, x19, [sp, #48]
   1638c:	ldp	x22, x21, [sp, #32]
   16390:	ldp	x24, x23, [sp, #16]
   16394:	ldp	x29, x30, [sp], #64
   16398:	b	a960 <free@plt>
   1639c:	ldr	x9, [x0]
   163a0:	str	xzr, [x8, #24]
   163a4:	stp	x9, x0, [x8]
   163a8:	ldr	x9, [x0, #40]
   163ac:	stp	xzr, x9, [x8, #40]
   163b0:	ret
   163b4:	ldr	x8, [x0, #24]
   163b8:	cbz	x8, 163d4 <hash_pjw_bare@@Base+0x488>
   163bc:	ldr	x9, [x8, #16]
   163c0:	str	x9, [x1]
   163c4:	ldr	x8, [x8]
   163c8:	str	x8, [x0, #24]
   163cc:	mov	w0, #0x1                   	// #1
   163d0:	ret
   163d4:	ldp	x8, x9, [x0, #40]
   163d8:	cmp	x8, x9
   163dc:	b.cs	163fc <hash_pjw_bare@@Base+0x4b0>  // b.hs, b.nlast
   163e0:	ldr	x10, [x0, #8]
   163e4:	ldr	x10, [x10, #32]
   163e8:	ldr	x11, [x10, x8, lsl #3]
   163ec:	add	x8, x8, #0x1
   163f0:	cbnz	x11, 16408 <hash_pjw_bare@@Base+0x4bc>
   163f4:	cmp	x9, x8
   163f8:	b.ne	163e8 <hash_pjw_bare@@Base+0x49c>  // b.any
   163fc:	str	x9, [x0, #40]
   16400:	mov	w0, wzr
   16404:	ret
   16408:	ldr	x9, [x11, #16]
   1640c:	str	x9, [x1]
   16410:	ldr	x9, [x11]
   16414:	str	x8, [x0, #40]
   16418:	str	x9, [x0, #24]
   1641c:	mov	w0, #0x1                   	// #1
   16420:	ret
   16424:	ret

0000000000016428 <triple_hash@@Base>:
   16428:	stp	x29, x30, [sp, #-32]!
   1642c:	stp	x20, x19, [sp, #16]
   16430:	mov	x19, x0
   16434:	ldr	x0, [x0]
   16438:	mov	x29, sp
   1643c:	mov	x20, x1
   16440:	bl	ab30 <hash_pjw@plt>
   16444:	ldr	x8, [x19, #8]
   16448:	eor	x8, x8, x0
   1644c:	udiv	x9, x8, x20
   16450:	msub	x0, x9, x20, x8
   16454:	ldp	x20, x19, [sp, #16]
   16458:	ldp	x29, x30, [sp], #32
   1645c:	ret

0000000000016460 <triple_hash_no_name@@Base>:
   16460:	ldr	x8, [x0, #8]
   16464:	udiv	x9, x8, x1
   16468:	msub	x0, x9, x1, x8
   1646c:	ret

0000000000016470 <triple_compare@@Base>:
   16470:	ldr	x8, [x0, #8]
   16474:	ldr	x9, [x1, #8]
   16478:	cmp	x8, x9
   1647c:	b.ne	1649c <triple_compare@@Base+0x2c>  // b.any
   16480:	ldr	x8, [x0, #16]
   16484:	ldr	x9, [x1, #16]
   16488:	cmp	x8, x9
   1648c:	b.ne	1649c <triple_compare@@Base+0x2c>  // b.any
   16490:	ldr	x0, [x0]
   16494:	ldr	x1, [x1]
   16498:	b	a690 <same_name@plt>
   1649c:	mov	w0, wzr
   164a0:	ret

00000000000164a4 <triple_compare_ino_str@@Base>:
   164a4:	stp	x29, x30, [sp, #-16]!
   164a8:	ldr	x8, [x0, #8]
   164ac:	ldr	x9, [x1, #8]
   164b0:	mov	x29, sp
   164b4:	cmp	x8, x9
   164b8:	b.ne	164e8 <triple_compare_ino_str@@Base+0x44>  // b.any
   164bc:	ldr	x8, [x0, #16]
   164c0:	ldr	x9, [x1, #16]
   164c4:	cmp	x8, x9
   164c8:	b.ne	164e8 <triple_compare_ino_str@@Base+0x44>  // b.any
   164cc:	ldr	x0, [x0]
   164d0:	ldr	x1, [x1]
   164d4:	bl	a8e0 <strcmp@plt>
   164d8:	cmp	w0, #0x0
   164dc:	cset	w0, eq  // eq = none
   164e0:	ldp	x29, x30, [sp], #16
   164e4:	ret
   164e8:	mov	w0, wzr
   164ec:	ldp	x29, x30, [sp], #16
   164f0:	ret

00000000000164f4 <triple_free@@Base>:
   164f4:	stp	x29, x30, [sp, #-32]!
   164f8:	str	x19, [sp, #16]
   164fc:	mov	x19, x0
   16500:	ldr	x0, [x0]
   16504:	mov	x29, sp
   16508:	bl	a960 <free@plt>
   1650c:	mov	x0, x19
   16510:	ldr	x19, [sp, #16]
   16514:	ldp	x29, x30, [sp], #32
   16518:	b	a960 <free@plt>

000000000001651c <idpriv_drop@@Base>:
   1651c:	sub	sp, sp, #0x30
   16520:	stp	x29, x30, [sp, #16]
   16524:	stp	x20, x19, [sp, #32]
   16528:	add	x29, sp, #0x10
   1652c:	bl	a3f0 <getuid@plt>
   16530:	mov	w20, w0
   16534:	bl	a9a0 <getgid@plt>
   16538:	mov	w1, w0
   1653c:	mov	w2, w0
   16540:	mov	w19, w0
   16544:	bl	ad90 <setresgid@plt>
   16548:	tbnz	w0, #31, 165d8 <idpriv_drop@@Base+0xbc>
   1654c:	mov	w0, w20
   16550:	mov	w1, w20
   16554:	mov	w2, w20
   16558:	bl	abf0 <setresuid@plt>
   1655c:	tbnz	w0, #31, 165d8 <idpriv_drop@@Base+0xbc>
   16560:	sub	x0, x29, #0x4
   16564:	add	x1, sp, #0x8
   16568:	add	x2, sp, #0x4
   1656c:	bl	a370 <getresuid@plt>
   16570:	tbnz	w0, #31, 165ec <idpriv_drop@@Base+0xd0>
   16574:	ldur	w8, [x29, #-4]
   16578:	cmp	w8, w20
   1657c:	b.ne	165ec <idpriv_drop@@Base+0xd0>  // b.any
   16580:	ldr	w8, [sp, #8]
   16584:	cmp	w8, w20
   16588:	b.ne	165ec <idpriv_drop@@Base+0xd0>  // b.any
   1658c:	ldr	w8, [sp, #4]
   16590:	cmp	w8, w20
   16594:	b.ne	165ec <idpriv_drop@@Base+0xd0>  // b.any
   16598:	sub	x0, x29, #0x4
   1659c:	add	x1, sp, #0x8
   165a0:	add	x2, sp, #0x4
   165a4:	bl	aba0 <getresgid@plt>
   165a8:	tbnz	w0, #31, 165ec <idpriv_drop@@Base+0xd0>
   165ac:	ldur	w8, [x29, #-4]
   165b0:	cmp	w8, w19
   165b4:	b.ne	165ec <idpriv_drop@@Base+0xd0>  // b.any
   165b8:	ldr	w8, [sp, #8]
   165bc:	cmp	w8, w19
   165c0:	b.ne	165ec <idpriv_drop@@Base+0xd0>  // b.any
   165c4:	ldr	w8, [sp, #4]
   165c8:	cmp	w8, w19
   165cc:	b.ne	165ec <idpriv_drop@@Base+0xd0>  // b.any
   165d0:	mov	w0, wzr
   165d4:	b	165dc <idpriv_drop@@Base+0xc0>
   165d8:	mov	w0, #0xffffffff            	// #-1
   165dc:	ldp	x20, x19, [sp, #32]
   165e0:	ldp	x29, x30, [sp, #16]
   165e4:	add	sp, sp, #0x30
   165e8:	ret
   165ec:	bl	a840 <abort@plt>

00000000000165f0 <idpriv_temp_drop@@Base>:
   165f0:	sub	sp, sp, #0x50
   165f4:	stp	x29, x30, [sp, #16]
   165f8:	str	x23, [sp, #32]
   165fc:	stp	x22, x21, [sp, #48]
   16600:	stp	x20, x19, [sp, #64]
   16604:	add	x29, sp, #0x10
   16608:	bl	a3f0 <getuid@plt>
   1660c:	mov	w20, w0
   16610:	bl	a9a0 <getgid@plt>
   16614:	adrp	x23, 43000 <base_len@@Base+0x2ea54>
   16618:	ldr	w8, [x23, #1708]
   1661c:	mov	w19, w0
   16620:	cmn	w8, #0x1
   16624:	b.ne	16630 <idpriv_temp_drop@@Base+0x40>  // b.any
   16628:	bl	a340 <geteuid@plt>
   1662c:	str	w0, [x23, #1708]
   16630:	adrp	x22, 43000 <base_len@@Base+0x2ea54>
   16634:	ldr	w2, [x22, #1712]
   16638:	cmn	w2, #0x1
   1663c:	b.ne	1664c <idpriv_temp_drop@@Base+0x5c>  // b.any
   16640:	bl	a2f0 <getegid@plt>
   16644:	mov	w2, w0
   16648:	str	w0, [x22, #1712]
   1664c:	mov	w0, #0xffffffff            	// #-1
   16650:	mov	w1, w19
   16654:	mov	w21, #0xffffffff            	// #-1
   16658:	bl	ad90 <setresgid@plt>
   1665c:	tbnz	w0, #31, 166f4 <idpriv_temp_drop@@Base+0x104>
   16660:	ldr	w2, [x23, #1708]
   16664:	mov	w0, #0xffffffff            	// #-1
   16668:	mov	w1, w20
   1666c:	mov	w21, #0xffffffff            	// #-1
   16670:	bl	abf0 <setresuid@plt>
   16674:	tbnz	w0, #31, 166f4 <idpriv_temp_drop@@Base+0x104>
   16678:	add	x0, x29, #0x1c
   1667c:	add	x1, x29, #0x18
   16680:	sub	x2, x29, #0x4
   16684:	bl	a370 <getresuid@plt>
   16688:	tbnz	w0, #31, 16710 <idpriv_temp_drop@@Base+0x120>
   1668c:	ldr	w8, [x29, #28]
   16690:	cmp	w8, w20
   16694:	b.ne	16710 <idpriv_temp_drop@@Base+0x120>  // b.any
   16698:	ldr	w8, [x29, #24]
   1669c:	cmp	w8, w20
   166a0:	b.ne	16710 <idpriv_temp_drop@@Base+0x120>  // b.any
   166a4:	ldur	w8, [x29, #-4]
   166a8:	ldr	w9, [x23, #1708]
   166ac:	cmp	w8, w9
   166b0:	b.ne	16710 <idpriv_temp_drop@@Base+0x120>  // b.any
   166b4:	add	x0, x29, #0x1c
   166b8:	add	x1, x29, #0x18
   166bc:	sub	x2, x29, #0x4
   166c0:	bl	aba0 <getresgid@plt>
   166c4:	tbnz	w0, #31, 16710 <idpriv_temp_drop@@Base+0x120>
   166c8:	ldr	w8, [x29, #28]
   166cc:	cmp	w8, w19
   166d0:	b.ne	16710 <idpriv_temp_drop@@Base+0x120>  // b.any
   166d4:	ldr	w8, [x29, #24]
   166d8:	cmp	w8, w19
   166dc:	b.ne	16710 <idpriv_temp_drop@@Base+0x120>  // b.any
   166e0:	ldur	w8, [x29, #-4]
   166e4:	ldr	w9, [x22, #1712]
   166e8:	cmp	w8, w9
   166ec:	b.ne	16710 <idpriv_temp_drop@@Base+0x120>  // b.any
   166f0:	mov	w21, wzr
   166f4:	mov	w0, w21
   166f8:	ldp	x20, x19, [sp, #64]
   166fc:	ldp	x22, x21, [sp, #48]
   16700:	ldr	x23, [sp, #32]
   16704:	ldp	x29, x30, [sp, #16]
   16708:	add	sp, sp, #0x50
   1670c:	ret
   16710:	bl	a840 <abort@plt>

0000000000016714 <idpriv_temp_restore@@Base>:
   16714:	sub	sp, sp, #0x50
   16718:	stp	x29, x30, [sp, #16]
   1671c:	str	x23, [sp, #32]
   16720:	stp	x22, x21, [sp, #48]
   16724:	stp	x20, x19, [sp, #64]
   16728:	add	x29, sp, #0x10
   1672c:	bl	a3f0 <getuid@plt>
   16730:	mov	w20, w0
   16734:	bl	a9a0 <getgid@plt>
   16738:	adrp	x23, 43000 <base_len@@Base+0x2ea54>
   1673c:	ldr	w1, [x23, #1708]
   16740:	cmn	w1, #0x1
   16744:	b.eq	16820 <idpriv_temp_restore@@Base+0x10c>  // b.none
   16748:	adrp	x22, 43000 <base_len@@Base+0x2ea54>
   1674c:	ldr	w8, [x22, #1712]
   16750:	cmn	w8, #0x1
   16754:	b.eq	16820 <idpriv_temp_restore@@Base+0x10c>  // b.none
   16758:	mov	w19, w0
   1675c:	mov	w0, #0xffffffff            	// #-1
   16760:	mov	w2, #0xffffffff            	// #-1
   16764:	mov	w21, #0xffffffff            	// #-1
   16768:	bl	abf0 <setresuid@plt>
   1676c:	tbnz	w0, #31, 16804 <idpriv_temp_restore@@Base+0xf0>
   16770:	ldr	w1, [x22, #1712]
   16774:	mov	w0, #0xffffffff            	// #-1
   16778:	mov	w2, #0xffffffff            	// #-1
   1677c:	mov	w21, #0xffffffff            	// #-1
   16780:	bl	ad90 <setresgid@plt>
   16784:	tbnz	w0, #31, 16804 <idpriv_temp_restore@@Base+0xf0>
   16788:	add	x0, x29, #0x1c
   1678c:	add	x1, x29, #0x18
   16790:	sub	x2, x29, #0x4
   16794:	bl	a370 <getresuid@plt>
   16798:	tbnz	w0, #31, 16820 <idpriv_temp_restore@@Base+0x10c>
   1679c:	ldr	w8, [x29, #28]
   167a0:	cmp	w8, w20
   167a4:	b.ne	16820 <idpriv_temp_restore@@Base+0x10c>  // b.any
   167a8:	ldr	w9, [x29, #24]
   167ac:	ldr	w8, [x23, #1708]
   167b0:	cmp	w9, w8
   167b4:	b.ne	16820 <idpriv_temp_restore@@Base+0x10c>  // b.any
   167b8:	ldur	w9, [x29, #-4]
   167bc:	cmp	w9, w8
   167c0:	b.ne	16820 <idpriv_temp_restore@@Base+0x10c>  // b.any
   167c4:	add	x0, x29, #0x1c
   167c8:	add	x1, x29, #0x18
   167cc:	sub	x2, x29, #0x4
   167d0:	bl	aba0 <getresgid@plt>
   167d4:	tbnz	w0, #31, 16820 <idpriv_temp_restore@@Base+0x10c>
   167d8:	ldr	w8, [x29, #28]
   167dc:	cmp	w8, w19
   167e0:	b.ne	16820 <idpriv_temp_restore@@Base+0x10c>  // b.any
   167e4:	ldr	w9, [x29, #24]
   167e8:	ldr	w8, [x22, #1712]
   167ec:	cmp	w9, w8
   167f0:	b.ne	16820 <idpriv_temp_restore@@Base+0x10c>  // b.any
   167f4:	ldur	w9, [x29, #-4]
   167f8:	cmp	w9, w8
   167fc:	b.ne	16820 <idpriv_temp_restore@@Base+0x10c>  // b.any
   16800:	mov	w21, wzr
   16804:	mov	w0, w21
   16808:	ldp	x20, x19, [sp, #64]
   1680c:	ldp	x22, x21, [sp, #48]
   16810:	ldr	x23, [sp, #32]
   16814:	ldp	x29, x30, [sp, #16]
   16818:	add	sp, sp, #0x50
   1681c:	ret
   16820:	bl	a840 <abort@plt>
   16824:	stp	x29, x30, [sp, #-64]!
   16828:	stp	x24, x23, [sp, #16]
   1682c:	mov	x24, x0
   16830:	mov	w0, #0x68                  	// #104
   16834:	stp	x22, x21, [sp, #32]
   16838:	stp	x20, x19, [sp, #48]
   1683c:	mov	x29, sp
   16840:	mov	w22, w4
   16844:	mov	x20, x3
   16848:	mov	x21, x2
   1684c:	mov	x23, x1
   16850:	bl	a540 <malloc@plt>
   16854:	mov	x19, x0
   16858:	cbz	x0, 168a4 <idpriv_temp_restore@@Base+0x190>
   1685c:	and	w8, w22, #0x1
   16860:	mov	w9, #0xb                   	// #11
   16864:	mov	w0, #0xb                   	// #11
   16868:	mov	w1, #0x8                   	// #8
   1686c:	stp	x24, x23, [x19]
   16870:	stp	x21, x20, [x19, #16]
   16874:	strb	w8, [x19, #32]
   16878:	str	x9, [x19, #48]
   1687c:	bl	a6b0 <calloc@plt>
   16880:	str	x0, [x19, #40]
   16884:	cbz	x0, 16898 <idpriv_temp_restore@@Base+0x184>
   16888:	add	x8, x19, #0x38
   1688c:	stp	x8, x8, [x19, #72]
   16890:	str	xzr, [x19, #96]
   16894:	b	168a4 <idpriv_temp_restore@@Base+0x190>
   16898:	mov	x0, x19
   1689c:	bl	a960 <free@plt>
   168a0:	mov	x19, xzr
   168a4:	mov	x0, x19
   168a8:	ldp	x20, x19, [sp, #48]
   168ac:	ldp	x22, x21, [sp, #32]
   168b0:	ldp	x24, x23, [sp, #16]
   168b4:	ldp	x29, x30, [sp], #64
   168b8:	ret
   168bc:	stp	x29, x30, [sp, #-80]!
   168c0:	stp	x26, x25, [sp, #16]
   168c4:	mov	x26, x0
   168c8:	mov	w0, #0x68                  	// #104
   168cc:	stp	x24, x23, [sp, #32]
   168d0:	stp	x22, x21, [sp, #48]
   168d4:	stp	x20, x19, [sp, #64]
   168d8:	mov	x29, sp
   168dc:	mov	x20, x6
   168e0:	mov	x21, x5
   168e4:	mov	w24, w4
   168e8:	mov	x22, x3
   168ec:	mov	x23, x2
   168f0:	mov	x25, x1
   168f4:	bl	a540 <malloc@plt>
   168f8:	mov	x19, x0
   168fc:	cbz	x0, 16a28 <idpriv_temp_restore@@Base+0x314>
   16900:	and	w9, w24, #0x1
   16904:	adds	x10, x21, x21, lsr #1
   16908:	strb	w9, [x19, #32]
   1690c:	csinv	x9, x10, xzr, cc  // cc = lo, ul, last
   16910:	mov	w11, #0xa                   	// #10
   16914:	cmp	x9, #0xa
   16918:	adrp	x10, 30000 <vasnprintf@@Base+0x224c>
   1691c:	mov	x8, xzr
   16920:	stp	x26, x25, [x19]
   16924:	stp	x23, x22, [x19, #16]
   16928:	csel	x9, x9, x11, hi  // hi = pmore
   1692c:	add	x10, x10, #0x738
   16930:	ldr	x22, [x10, x8, lsl #3]
   16934:	cmp	x22, x9
   16938:	b.cs	1694c <idpriv_temp_restore@@Base+0x238>  // b.hs, b.nlast
   1693c:	add	x8, x8, #0x1
   16940:	cmp	x8, #0xe8
   16944:	b.ne	16930 <idpriv_temp_restore@@Base+0x21c>  // b.any
   16948:	b	16a1c <idpriv_temp_restore@@Base+0x308>
   1694c:	cmp	x8, #0xda
   16950:	str	x22, [x19, #48]
   16954:	b.hi	16a1c <idpriv_temp_restore@@Base+0x308>  // b.pmore
   16958:	mov	w1, #0x8                   	// #8
   1695c:	mov	x0, x22
   16960:	bl	a6b0 <calloc@plt>
   16964:	str	x0, [x19, #40]
   16968:	cbz	x0, 16a1c <idpriv_temp_restore@@Base+0x308>
   1696c:	add	x25, x19, #0x38
   16970:	str	x21, [x19, #96]
   16974:	cbz	x21, 169e4 <idpriv_temp_restore@@Base+0x2d0>
   16978:	mov	x23, x25
   1697c:	b	169b8 <idpriv_temp_restore@@Base+0x2a4>
   16980:	ldr	x8, [x19, #40]
   16984:	udiv	x9, x0, x22
   16988:	msub	x9, x9, x22, x0
   1698c:	str	x0, [x24, #8]
   16990:	lsl	x9, x9, #3
   16994:	ldr	x10, [x8, x9]
   16998:	subs	x21, x21, #0x1
   1699c:	add	x20, x20, #0x8
   169a0:	str	x10, [x24]
   169a4:	str	x24, [x8, x9]
   169a8:	str	x23, [x24, #24]
   169ac:	str	x24, [x23, #16]
   169b0:	mov	x23, x24
   169b4:	b.eq	169e8 <idpriv_temp_restore@@Base+0x2d4>  // b.none
   169b8:	mov	w0, #0x28                  	// #40
   169bc:	bl	a540 <malloc@plt>
   169c0:	cbz	x0, 169f4 <idpriv_temp_restore@@Base+0x2e0>
   169c4:	mov	x24, x0
   169c8:	ldr	x0, [x20]
   169cc:	ldr	x8, [x19, #16]
   169d0:	str	x0, [x24, #32]
   169d4:	cbz	x8, 16980 <idpriv_temp_restore@@Base+0x26c>
   169d8:	blr	x8
   169dc:	ldr	x22, [x19, #48]
   169e0:	b	16980 <idpriv_temp_restore@@Base+0x26c>
   169e4:	mov	x24, x25
   169e8:	str	x25, [x24, #16]
   169ec:	str	x24, [x19, #80]
   169f0:	b	16a28 <idpriv_temp_restore@@Base+0x314>
   169f4:	cmp	x23, x25
   169f8:	b.eq	16a14 <idpriv_temp_restore@@Base+0x300>  // b.none
   169fc:	ldr	x20, [x23, #24]
   16a00:	mov	x0, x23
   16a04:	bl	a960 <free@plt>
   16a08:	cmp	x20, x25
   16a0c:	mov	x23, x20
   16a10:	b.ne	169fc <idpriv_temp_restore@@Base+0x2e8>  // b.any
   16a14:	ldr	x0, [x19, #40]
   16a18:	bl	a960 <free@plt>
   16a1c:	mov	x0, x19
   16a20:	bl	a960 <free@plt>
   16a24:	mov	x19, xzr
   16a28:	mov	x0, x19
   16a2c:	ldp	x20, x19, [sp, #64]
   16a30:	ldp	x22, x21, [sp, #48]
   16a34:	ldp	x24, x23, [sp, #32]
   16a38:	ldp	x26, x25, [sp, #16]
   16a3c:	ldp	x29, x30, [sp], #80
   16a40:	ret
   16a44:	ldr	x0, [x0, #96]
   16a48:	ret
   16a4c:	ldr	x0, [x1, #32]
   16a50:	ret
   16a54:	stp	x29, x30, [sp, #-48]!
   16a58:	stp	x20, x19, [sp, #32]
   16a5c:	ldr	x8, [x1, #32]
   16a60:	str	x21, [sp, #16]
   16a64:	mov	x29, sp
   16a68:	cmp	x8, x2
   16a6c:	b.eq	16afc <idpriv_temp_restore@@Base+0x3e8>  // b.none
   16a70:	ldr	x8, [x0, #16]
   16a74:	mov	x19, x1
   16a78:	mov	x21, x2
   16a7c:	mov	x20, x0
   16a80:	cbz	x8, 16a90 <idpriv_temp_restore@@Base+0x37c>
   16a84:	mov	x0, x21
   16a88:	blr	x8
   16a8c:	b	16a94 <idpriv_temp_restore@@Base+0x380>
   16a90:	mov	x0, x21
   16a94:	ldr	x9, [x19, #8]
   16a98:	cmp	x0, x9
   16a9c:	b.ne	16aa8 <idpriv_temp_restore@@Base+0x394>  // b.any
   16aa0:	str	x21, [x19, #32]
   16aa4:	b	16afc <idpriv_temp_restore@@Base+0x3e8>
   16aa8:	ldp	x10, x8, [x20, #40]
   16aac:	udiv	x11, x9, x8
   16ab0:	msub	x9, x11, x8, x9
   16ab4:	add	x9, x10, x9, lsl #3
   16ab8:	ldr	x10, [x9]
   16abc:	cmp	x10, x19
   16ac0:	b.eq	16ad0 <idpriv_temp_restore@@Base+0x3bc>  // b.none
   16ac4:	cbz	x10, 16b10 <idpriv_temp_restore@@Base+0x3fc>
   16ac8:	mov	x9, x10
   16acc:	b	16ab8 <idpriv_temp_restore@@Base+0x3a4>
   16ad0:	ldr	x10, [x19]
   16ad4:	str	x10, [x9]
   16ad8:	str	x21, [x19, #32]
   16adc:	str	x0, [x19, #8]
   16ae0:	ldr	x9, [x20, #40]
   16ae4:	udiv	x10, x0, x8
   16ae8:	msub	x8, x10, x8, x0
   16aec:	lsl	x8, x8, #3
   16af0:	ldr	x10, [x9, x8]
   16af4:	str	x10, [x19]
   16af8:	str	x19, [x9, x8]
   16afc:	ldp	x20, x19, [sp, #32]
   16b00:	ldr	x21, [sp, #16]
   16b04:	mov	w0, wzr
   16b08:	ldp	x29, x30, [sp], #48
   16b0c:	ret
   16b10:	bl	a840 <abort@plt>
   16b14:	ldr	x8, [x1, #16]
   16b18:	add	x9, x0, #0x38
   16b1c:	cmp	x8, x9
   16b20:	csel	x0, xzr, x8, eq  // eq = none
   16b24:	ret
   16b28:	ldr	x8, [x1, #24]
   16b2c:	add	x9, x0, #0x38
   16b30:	cmp	x8, x9
   16b34:	csel	x0, xzr, x8, eq  // eq = none
   16b38:	ret
   16b3c:	stp	x29, x30, [sp, #-16]!
   16b40:	ldr	x9, [x0, #96]
   16b44:	mov	x29, sp
   16b48:	cmp	x9, x1
   16b4c:	b.ls	16ba0 <idpriv_temp_restore@@Base+0x48c>  // b.plast
   16b50:	sub	x10, x9, #0x1
   16b54:	cmp	x1, x10, lsr #1
   16b58:	b.ls	16b80 <idpriv_temp_restore@@Base+0x46c>  // b.plast
   16b5c:	ldr	x8, [x0, #80]
   16b60:	cmp	x10, x1
   16b64:	b.eq	16b94 <idpriv_temp_restore@@Base+0x480>  // b.none
   16b68:	sub	x9, x1, x9
   16b6c:	add	x9, x9, #0x1
   16b70:	ldr	x8, [x8, #24]
   16b74:	adds	x9, x9, #0x1
   16b78:	b.cc	16b70 <idpriv_temp_restore@@Base+0x45c>  // b.lo, b.ul, b.last
   16b7c:	b	16b94 <idpriv_temp_restore@@Base+0x480>
   16b80:	ldr	x8, [x0, #72]
   16b84:	cbz	x1, 16b94 <idpriv_temp_restore@@Base+0x480>
   16b88:	ldr	x8, [x8, #16]
   16b8c:	subs	x1, x1, #0x1
   16b90:	b.ne	16b88 <idpriv_temp_restore@@Base+0x474>  // b.any
   16b94:	ldr	x0, [x8, #32]
   16b98:	ldp	x29, x30, [sp], #16
   16b9c:	ret
   16ba0:	bl	a840 <abort@plt>
   16ba4:	stp	x29, x30, [sp, #-48]!
   16ba8:	stp	x20, x19, [sp, #32]
   16bac:	ldr	x8, [x0, #96]
   16bb0:	str	x21, [sp, #16]
   16bb4:	mov	x29, sp
   16bb8:	cmp	x8, x1
   16bbc:	b.ls	16cac <idpriv_temp_restore@@Base+0x598>  // b.plast
   16bc0:	sub	x9, x8, #0x1
   16bc4:	mov	x19, x0
   16bc8:	mov	x21, x2
   16bcc:	cmp	x1, x9, lsr #1
   16bd0:	b.ls	16bf8 <idpriv_temp_restore@@Base+0x4e4>  // b.plast
   16bd4:	ldr	x20, [x19, #80]
   16bd8:	cmp	x9, x1
   16bdc:	b.eq	16c0c <idpriv_temp_restore@@Base+0x4f8>  // b.none
   16be0:	sub	x8, x1, x8
   16be4:	add	x8, x8, #0x1
   16be8:	ldr	x20, [x20, #24]
   16bec:	adds	x8, x8, #0x1
   16bf0:	b.cc	16be8 <idpriv_temp_restore@@Base+0x4d4>  // b.lo, b.ul, b.last
   16bf4:	b	16c0c <idpriv_temp_restore@@Base+0x4f8>
   16bf8:	ldr	x20, [x19, #72]
   16bfc:	cbz	x1, 16c0c <idpriv_temp_restore@@Base+0x4f8>
   16c00:	ldr	x20, [x20, #16]
   16c04:	subs	x1, x1, #0x1
   16c08:	b.ne	16c00 <idpriv_temp_restore@@Base+0x4ec>  // b.any
   16c0c:	ldr	x8, [x20, #32]
   16c10:	cmp	x8, x21
   16c14:	b.eq	16c98 <idpriv_temp_restore@@Base+0x584>  // b.none
   16c18:	ldr	x8, [x19, #16]
   16c1c:	cbz	x8, 16c2c <idpriv_temp_restore@@Base+0x518>
   16c20:	mov	x0, x21
   16c24:	blr	x8
   16c28:	b	16c30 <idpriv_temp_restore@@Base+0x51c>
   16c2c:	mov	x0, x21
   16c30:	ldr	x9, [x20, #8]
   16c34:	cmp	x0, x9
   16c38:	b.ne	16c44 <idpriv_temp_restore@@Base+0x530>  // b.any
   16c3c:	str	x21, [x20, #32]
   16c40:	b	16c98 <idpriv_temp_restore@@Base+0x584>
   16c44:	ldp	x10, x8, [x19, #40]
   16c48:	udiv	x11, x9, x8
   16c4c:	msub	x9, x11, x8, x9
   16c50:	add	x9, x10, x9, lsl #3
   16c54:	ldr	x10, [x9]
   16c58:	cmp	x10, x20
   16c5c:	b.eq	16c6c <idpriv_temp_restore@@Base+0x558>  // b.none
   16c60:	cbz	x10, 16cac <idpriv_temp_restore@@Base+0x598>
   16c64:	mov	x9, x10
   16c68:	b	16c54 <idpriv_temp_restore@@Base+0x540>
   16c6c:	ldr	x10, [x20]
   16c70:	str	x10, [x9]
   16c74:	str	x21, [x20, #32]
   16c78:	str	x0, [x20, #8]
   16c7c:	ldr	x9, [x19, #40]
   16c80:	udiv	x10, x0, x8
   16c84:	msub	x8, x10, x8, x0
   16c88:	lsl	x8, x8, #3
   16c8c:	ldr	x10, [x9, x8]
   16c90:	str	x10, [x20]
   16c94:	str	x20, [x9, x8]
   16c98:	mov	x0, x20
   16c9c:	ldp	x20, x19, [sp, #32]
   16ca0:	ldr	x21, [sp, #16]
   16ca4:	ldp	x29, x30, [sp], #48
   16ca8:	ret
   16cac:	bl	a840 <abort@plt>
   16cb0:	stp	x29, x30, [sp, #-96]!
   16cb4:	str	x27, [sp, #16]
   16cb8:	subs	x27, x2, x1
   16cbc:	stp	x26, x25, [sp, #32]
   16cc0:	stp	x24, x23, [sp, #48]
   16cc4:	stp	x22, x21, [sp, #64]
   16cc8:	stp	x20, x19, [sp, #80]
   16ccc:	mov	x29, sp
   16cd0:	b.cc	16ef4 <idpriv_temp_restore@@Base+0x7e0>  // b.lo, b.ul, b.last
   16cd4:	ldr	x26, [x0, #96]
   16cd8:	mov	x19, x2
   16cdc:	mov	x21, x0
   16ce0:	cmp	x26, x2
   16ce4:	b.cc	16ef4 <idpriv_temp_restore@@Base+0x7e0>  // b.lo, b.ul, b.last
   16ce8:	ldr	x8, [x21, #16]
   16cec:	mov	x22, x3
   16cf0:	mov	x20, x1
   16cf4:	cbz	x8, 16d08 <idpriv_temp_restore@@Base+0x5f4>
   16cf8:	mov	x0, x22
   16cfc:	blr	x8
   16d00:	mov	x23, x0
   16d04:	b	16d0c <idpriv_temp_restore@@Base+0x5f8>
   16d08:	mov	x23, x22
   16d0c:	ldp	x9, x8, [x21, #40]
   16d10:	ldr	x24, [x21, #8]
   16d14:	udiv	x10, x23, x8
   16d18:	msub	x8, x10, x8, x23
   16d1c:	ldrb	w10, [x21, #32]
   16d20:	ldr	x25, [x9, x8, lsl #3]
   16d24:	cbz	w10, 16d98 <idpriv_temp_restore@@Base+0x684>
   16d28:	cbz	x25, 16df8 <idpriv_temp_restore@@Base+0x6e4>
   16d2c:	mov	x26, xzr
   16d30:	b	16d4c <idpriv_temp_restore@@Base+0x638>
   16d34:	cmp	x1, x22
   16d38:	b.eq	16d6c <idpriv_temp_restore@@Base+0x658>  // b.none
   16d3c:	mov	x0, x26
   16d40:	ldr	x25, [x25]
   16d44:	mov	x26, x0
   16d48:	cbz	x25, 16dfc <idpriv_temp_restore@@Base+0x6e8>
   16d4c:	ldr	x8, [x25, #8]
   16d50:	cmp	x8, x23
   16d54:	b.ne	16d3c <idpriv_temp_restore@@Base+0x628>  // b.any
   16d58:	ldr	x1, [x25, #32]
   16d5c:	cbz	x24, 16d34 <idpriv_temp_restore@@Base+0x620>
   16d60:	mov	x0, x22
   16d64:	blr	x24
   16d68:	tbz	w0, #0, 16d3c <idpriv_temp_restore@@Base+0x628>
   16d6c:	mov	x0, x25
   16d70:	cbz	x26, 16d40 <idpriv_temp_restore@@Base+0x62c>
   16d74:	ldr	x21, [x21, #72]
   16d78:	cbz	x20, 16d8c <idpriv_temp_restore@@Base+0x678>
   16d7c:	mov	x8, x20
   16d80:	ldr	x21, [x21, #16]
   16d84:	subs	x8, x8, #0x1
   16d88:	b.ne	16d80 <idpriv_temp_restore@@Base+0x66c>  // b.any
   16d8c:	cbz	x27, 16e8c <idpriv_temp_restore@@Base+0x778>
   16d90:	sub	x19, x20, x19
   16d94:	b	16eac <idpriv_temp_restore@@Base+0x798>
   16d98:	cbnz	x25, 16db0 <idpriv_temp_restore@@Base+0x69c>
   16d9c:	b	16dd0 <idpriv_temp_restore@@Base+0x6bc>
   16da0:	cmp	x1, x22
   16da4:	b.eq	16dd0 <idpriv_temp_restore@@Base+0x6bc>  // b.none
   16da8:	ldr	x25, [x25]
   16dac:	cbz	x25, 16dd0 <idpriv_temp_restore@@Base+0x6bc>
   16db0:	ldr	x8, [x25, #8]
   16db4:	cmp	x8, x23
   16db8:	b.ne	16da8 <idpriv_temp_restore@@Base+0x694>  // b.any
   16dbc:	ldr	x1, [x25, #32]
   16dc0:	cbz	x24, 16da0 <idpriv_temp_restore@@Base+0x68c>
   16dc4:	mov	x0, x22
   16dc8:	blr	x24
   16dcc:	tbz	w0, #0, 16da8 <idpriv_temp_restore@@Base+0x694>
   16dd0:	cbz	x20, 16e60 <idpriv_temp_restore@@Base+0x74c>
   16dd4:	ldr	x8, [x21, #72]
   16dd8:	cmp	x8, x25
   16ddc:	b.eq	16e8c <idpriv_temp_restore@@Base+0x778>  // b.none
   16de0:	subs	x20, x20, #0x1
   16de4:	b.eq	16e60 <idpriv_temp_restore@@Base+0x74c>  // b.none
   16de8:	ldr	x8, [x8, #16]
   16dec:	cmp	x8, x25
   16df0:	b.ne	16de0 <idpriv_temp_restore@@Base+0x6cc>  // b.any
   16df4:	b	16e8c <idpriv_temp_restore@@Base+0x778>
   16df8:	mov	x0, xzr
   16dfc:	cbz	x20, 16e2c <idpriv_temp_restore@@Base+0x718>
   16e00:	ldr	x8, [x21, #72]
   16e04:	add	x9, x21, #0x38
   16e08:	cmp	x8, x9
   16e0c:	b.eq	16e2c <idpriv_temp_restore@@Base+0x718>  // b.none
   16e10:	cmp	x8, x0
   16e14:	b.eq	16e8c <idpriv_temp_restore@@Base+0x778>  // b.none
   16e18:	subs	x20, x20, #0x1
   16e1c:	b.eq	16e2c <idpriv_temp_restore@@Base+0x718>  // b.none
   16e20:	ldr	x8, [x8, #16]
   16e24:	cmp	x8, x9
   16e28:	b.ne	16e10 <idpriv_temp_restore@@Base+0x6fc>  // b.any
   16e2c:	ldr	x9, [x21, #96]
   16e30:	cmp	x9, x19
   16e34:	b.ls	16ed8 <idpriv_temp_restore@@Base+0x7c4>  // b.plast
   16e38:	ldr	x8, [x21, #80]
   16e3c:	cmp	x8, x0
   16e40:	b.eq	16e8c <idpriv_temp_restore@@Base+0x778>  // b.none
   16e44:	sub	x9, x19, x9
   16e48:	adds	x9, x9, #0x1
   16e4c:	b.cs	16ed8 <idpriv_temp_restore@@Base+0x7c4>  // b.hs, b.nlast
   16e50:	ldr	x8, [x8, #24]
   16e54:	cmp	x8, x0
   16e58:	b.ne	16e48 <idpriv_temp_restore@@Base+0x734>  // b.any
   16e5c:	b	16e8c <idpriv_temp_restore@@Base+0x778>
   16e60:	cmp	x26, x19
   16e64:	b.ls	16ed4 <idpriv_temp_restore@@Base+0x7c0>  // b.plast
   16e68:	ldr	x8, [x21, #80]
   16e6c:	cmp	x8, x25
   16e70:	b.eq	16e8c <idpriv_temp_restore@@Base+0x778>  // b.none
   16e74:	sub	x9, x19, x26
   16e78:	adds	x9, x9, #0x1
   16e7c:	b.cs	16ed4 <idpriv_temp_restore@@Base+0x7c0>  // b.hs, b.nlast
   16e80:	ldr	x8, [x8, #24]
   16e84:	cmp	x8, x25
   16e88:	b.ne	16e78 <idpriv_temp_restore@@Base+0x764>  // b.any
   16e8c:	mov	x0, xzr
   16e90:	b	16ed8 <idpriv_temp_restore@@Base+0x7c4>
   16e94:	cmp	x1, x22
   16e98:	b.eq	16ecc <idpriv_temp_restore@@Base+0x7b8>  // b.none
   16e9c:	ldr	x21, [x21, #16]
   16ea0:	adds	x19, x19, #0x1
   16ea4:	mov	x0, xzr
   16ea8:	b.cs	16ed8 <idpriv_temp_restore@@Base+0x7c4>  // b.hs, b.nlast
   16eac:	ldr	x8, [x21, #8]
   16eb0:	cmp	x8, x23
   16eb4:	b.ne	16e9c <idpriv_temp_restore@@Base+0x788>  // b.any
   16eb8:	ldr	x1, [x21, #32]
   16ebc:	cbz	x24, 16e94 <idpriv_temp_restore@@Base+0x780>
   16ec0:	mov	x0, x22
   16ec4:	blr	x24
   16ec8:	tbz	w0, #0, 16e9c <idpriv_temp_restore@@Base+0x788>
   16ecc:	mov	x0, x21
   16ed0:	b	16ed8 <idpriv_temp_restore@@Base+0x7c4>
   16ed4:	mov	x0, x25
   16ed8:	ldp	x20, x19, [sp, #80]
   16edc:	ldp	x22, x21, [sp, #64]
   16ee0:	ldp	x24, x23, [sp, #48]
   16ee4:	ldp	x26, x25, [sp, #32]
   16ee8:	ldr	x27, [sp, #16]
   16eec:	ldp	x29, x30, [sp], #96
   16ef0:	ret
   16ef4:	bl	a840 <abort@plt>
   16ef8:	stp	x29, x30, [sp, #-80]!
   16efc:	cmp	x1, x2
   16f00:	stp	x26, x25, [sp, #16]
   16f04:	stp	x24, x23, [sp, #32]
   16f08:	stp	x22, x21, [sp, #48]
   16f0c:	stp	x20, x19, [sp, #64]
   16f10:	mov	x29, sp
   16f14:	b.hi	170a8 <idpriv_temp_restore@@Base+0x994>  // b.pmore
   16f18:	ldr	x8, [x0, #96]
   16f1c:	mov	x20, x2
   16f20:	mov	x23, x0
   16f24:	cmp	x8, x2
   16f28:	b.cc	170a8 <idpriv_temp_restore@@Base+0x994>  // b.lo, b.ul, b.last
   16f2c:	ldr	x8, [x23, #16]
   16f30:	mov	x21, x3
   16f34:	mov	x19, x1
   16f38:	cbz	x8, 16f4c <idpriv_temp_restore@@Base+0x838>
   16f3c:	mov	x0, x21
   16f40:	blr	x8
   16f44:	mov	x22, x0
   16f48:	b	16f50 <idpriv_temp_restore@@Base+0x83c>
   16f4c:	mov	x22, x21
   16f50:	ldp	x9, x8, [x23, #40]
   16f54:	ldr	x24, [x23, #8]
   16f58:	udiv	x10, x22, x8
   16f5c:	msub	x8, x10, x8, x22
   16f60:	ldrb	w10, [x23, #32]
   16f64:	ldr	x25, [x9, x8, lsl #3]
   16f68:	cbz	w10, 16fdc <idpriv_temp_restore@@Base+0x8c8>
   16f6c:	cbz	x25, 17048 <idpriv_temp_restore@@Base+0x934>
   16f70:	mov	x8, xzr
   16f74:	b	16f8c <idpriv_temp_restore@@Base+0x878>
   16f78:	cmp	x1, x21
   16f7c:	b.eq	16fb0 <idpriv_temp_restore@@Base+0x89c>  // b.none
   16f80:	mov	x8, x26
   16f84:	ldr	x25, [x25]
   16f88:	cbz	x25, 1701c <idpriv_temp_restore@@Base+0x908>
   16f8c:	ldr	x9, [x25, #8]
   16f90:	mov	x26, x8
   16f94:	cmp	x9, x22
   16f98:	b.ne	16f80 <idpriv_temp_restore@@Base+0x86c>  // b.any
   16f9c:	ldr	x1, [x25, #32]
   16fa0:	cbz	x24, 16f78 <idpriv_temp_restore@@Base+0x864>
   16fa4:	mov	x0, x21
   16fa8:	blr	x24
   16fac:	tbz	w0, #0, 16f80 <idpriv_temp_restore@@Base+0x86c>
   16fb0:	mov	x8, x25
   16fb4:	cbz	x26, 16f84 <idpriv_temp_restore@@Base+0x870>
   16fb8:	ldr	x23, [x23, #72]
   16fbc:	cbz	x19, 16fd0 <idpriv_temp_restore@@Base+0x8bc>
   16fc0:	mov	x8, x19
   16fc4:	ldr	x23, [x23, #16]
   16fc8:	subs	x8, x8, #0x1
   16fcc:	b.ne	16fc4 <idpriv_temp_restore@@Base+0x8b0>  // b.any
   16fd0:	cmp	x19, x20
   16fd4:	b.cc	17080 <idpriv_temp_restore@@Base+0x96c>  // b.lo, b.ul, b.last
   16fd8:	b	17048 <idpriv_temp_restore@@Base+0x934>
   16fdc:	cbnz	x25, 16ff4 <idpriv_temp_restore@@Base+0x8e0>
   16fe0:	b	17048 <idpriv_temp_restore@@Base+0x934>
   16fe4:	cmp	x1, x21
   16fe8:	b.eq	17014 <idpriv_temp_restore@@Base+0x900>  // b.none
   16fec:	ldr	x25, [x25]
   16ff0:	cbz	x25, 17048 <idpriv_temp_restore@@Base+0x934>
   16ff4:	ldr	x8, [x25, #8]
   16ff8:	cmp	x8, x22
   16ffc:	b.ne	16fec <idpriv_temp_restore@@Base+0x8d8>  // b.any
   17000:	ldr	x1, [x25, #32]
   17004:	cbz	x24, 16fe4 <idpriv_temp_restore@@Base+0x8d0>
   17008:	mov	x0, x21
   1700c:	blr	x24
   17010:	tbz	w0, #0, 16fec <idpriv_temp_restore@@Base+0x8d8>
   17014:	mov	x8, x25
   17018:	b	17020 <idpriv_temp_restore@@Base+0x90c>
   1701c:	cbz	x8, 17048 <idpriv_temp_restore@@Base+0x934>
   17020:	add	x10, x23, #0x38
   17024:	mov	x9, #0xffffffffffffffff    	// #-1
   17028:	ldr	x8, [x8, #24]
   1702c:	add	x9, x9, #0x1
   17030:	cmp	x8, x10
   17034:	b.ne	17028 <idpriv_temp_restore@@Base+0x914>  // b.any
   17038:	cmp	x9, x20
   1703c:	ccmp	x9, x19, #0x0, cc  // cc = lo, ul, last
   17040:	csinv	x0, x9, xzr, cs  // cs = hs, nlast
   17044:	b	1704c <idpriv_temp_restore@@Base+0x938>
   17048:	mov	x0, #0xffffffffffffffff    	// #-1
   1704c:	ldp	x20, x19, [sp, #64]
   17050:	ldp	x22, x21, [sp, #48]
   17054:	ldp	x24, x23, [sp, #32]
   17058:	ldp	x26, x25, [sp, #16]
   1705c:	ldp	x29, x30, [sp], #80
   17060:	ret
   17064:	cmp	x1, x21
   17068:	b.eq	170a0 <idpriv_temp_restore@@Base+0x98c>  // b.none
   1706c:	ldr	x23, [x23, #16]
   17070:	add	x19, x19, #0x1
   17074:	cmp	x20, x19
   17078:	mov	x0, #0xffffffffffffffff    	// #-1
   1707c:	b.eq	1704c <idpriv_temp_restore@@Base+0x938>  // b.none
   17080:	ldr	x8, [x23, #8]
   17084:	cmp	x8, x22
   17088:	b.ne	1706c <idpriv_temp_restore@@Base+0x958>  // b.any
   1708c:	ldr	x1, [x23, #32]
   17090:	cbz	x24, 17064 <idpriv_temp_restore@@Base+0x950>
   17094:	mov	x0, x21
   17098:	blr	x24
   1709c:	tbz	w0, #0, 1706c <idpriv_temp_restore@@Base+0x958>
   170a0:	mov	x0, x19
   170a4:	b	1704c <idpriv_temp_restore@@Base+0x938>
   170a8:	bl	a840 <abort@plt>
   170ac:	stp	x29, x30, [sp, #-48]!
   170b0:	stp	x20, x19, [sp, #32]
   170b4:	mov	x20, x0
   170b8:	mov	w0, #0x28                  	// #40
   170bc:	str	x21, [sp, #16]
   170c0:	mov	x29, sp
   170c4:	mov	x21, x1
   170c8:	bl	a540 <malloc@plt>
   170cc:	mov	x19, x0
   170d0:	cbz	x0, 17134 <idpriv_temp_restore@@Base+0xa20>
   170d4:	str	x21, [x19, #32]
   170d8:	ldr	x8, [x20, #16]
   170dc:	cbz	x8, 170ec <idpriv_temp_restore@@Base+0x9d8>
   170e0:	mov	x0, x21
   170e4:	blr	x8
   170e8:	mov	x21, x0
   170ec:	str	x21, [x19, #8]
   170f0:	ldp	x9, x8, [x20, #40]
   170f4:	mov	x0, x20
   170f8:	udiv	x10, x21, x8
   170fc:	msub	x8, x10, x8, x21
   17100:	lsl	x8, x8, #3
   17104:	ldr	x10, [x9, x8]
   17108:	str	x10, [x19]
   1710c:	str	x19, [x9, x8]
   17110:	ldr	x8, [x20, #72]
   17114:	add	x10, x20, #0x38
   17118:	stp	x8, x10, [x19, #16]
   1711c:	str	x19, [x8, #24]
   17120:	ldr	x8, [x20, #96]
   17124:	str	x19, [x20, #72]
   17128:	add	x8, x8, #0x1
   1712c:	str	x8, [x20, #96]
   17130:	bl	17ca4 <idpriv_temp_restore@@Base+0x1590>
   17134:	mov	x0, x19
   17138:	ldp	x20, x19, [sp, #32]
   1713c:	ldr	x21, [sp, #16]
   17140:	ldp	x29, x30, [sp], #48
   17144:	ret
   17148:	stp	x29, x30, [sp, #-48]!
   1714c:	stp	x20, x19, [sp, #32]
   17150:	mov	x20, x0
   17154:	mov	w0, #0x28                  	// #40
   17158:	str	x21, [sp, #16]
   1715c:	mov	x29, sp
   17160:	mov	x21, x1
   17164:	bl	a540 <malloc@plt>
   17168:	mov	x19, x0
   1716c:	cbz	x0, 171d0 <idpriv_temp_restore@@Base+0xabc>
   17170:	str	x21, [x19, #32]
   17174:	ldr	x8, [x20, #16]
   17178:	cbz	x8, 17188 <idpriv_temp_restore@@Base+0xa74>
   1717c:	mov	x0, x21
   17180:	blr	x8
   17184:	mov	x21, x0
   17188:	str	x21, [x19, #8]
   1718c:	ldp	x9, x8, [x20, #40]
   17190:	mov	x0, x20
   17194:	udiv	x10, x21, x8
   17198:	msub	x8, x10, x8, x21
   1719c:	lsl	x8, x8, #3
   171a0:	ldr	x10, [x9, x8]
   171a4:	str	x10, [x19]
   171a8:	str	x19, [x9, x8]
   171ac:	ldr	x8, [x20, #80]
   171b0:	add	x10, x20, #0x38
   171b4:	stp	x10, x8, [x19, #16]
   171b8:	str	x19, [x8, #16]
   171bc:	ldr	x8, [x20, #96]
   171c0:	str	x19, [x20, #80]
   171c4:	add	x8, x8, #0x1
   171c8:	str	x8, [x20, #96]
   171cc:	bl	17ca4 <idpriv_temp_restore@@Base+0x1590>
   171d0:	mov	x0, x19
   171d4:	ldp	x20, x19, [sp, #32]
   171d8:	ldr	x21, [sp, #16]
   171dc:	ldp	x29, x30, [sp], #48
   171e0:	ret
   171e4:	stp	x29, x30, [sp, #-48]!
   171e8:	stp	x20, x19, [sp, #32]
   171ec:	mov	x20, x0
   171f0:	mov	w0, #0x28                  	// #40
   171f4:	stp	x22, x21, [sp, #16]
   171f8:	mov	x29, sp
   171fc:	mov	x22, x2
   17200:	mov	x21, x1
   17204:	bl	a540 <malloc@plt>
   17208:	mov	x19, x0
   1720c:	cbz	x0, 1726c <idpriv_temp_restore@@Base+0xb58>
   17210:	str	x22, [x19, #32]
   17214:	ldr	x8, [x20, #16]
   17218:	cbz	x8, 17228 <idpriv_temp_restore@@Base+0xb14>
   1721c:	mov	x0, x22
   17220:	blr	x8
   17224:	mov	x22, x0
   17228:	str	x22, [x19, #8]
   1722c:	ldp	x9, x8, [x20, #40]
   17230:	mov	x0, x20
   17234:	udiv	x10, x22, x8
   17238:	msub	x8, x10, x8, x22
   1723c:	lsl	x8, x8, #3
   17240:	ldr	x10, [x9, x8]
   17244:	str	x10, [x19]
   17248:	str	x19, [x9, x8]
   1724c:	ldr	x8, [x21, #24]
   17250:	stp	x21, x8, [x19, #16]
   17254:	str	x19, [x8, #16]
   17258:	str	x19, [x21, #24]
   1725c:	ldr	x8, [x20, #96]
   17260:	add	x8, x8, #0x1
   17264:	str	x8, [x20, #96]
   17268:	bl	17ca4 <idpriv_temp_restore@@Base+0x1590>
   1726c:	mov	x0, x19
   17270:	ldp	x20, x19, [sp, #32]
   17274:	ldp	x22, x21, [sp, #16]
   17278:	ldp	x29, x30, [sp], #48
   1727c:	ret
   17280:	stp	x29, x30, [sp, #-48]!
   17284:	stp	x20, x19, [sp, #32]
   17288:	mov	x20, x0
   1728c:	mov	w0, #0x28                  	// #40
   17290:	stp	x22, x21, [sp, #16]
   17294:	mov	x29, sp
   17298:	mov	x22, x2
   1729c:	mov	x21, x1
   172a0:	bl	a540 <malloc@plt>
   172a4:	mov	x19, x0
   172a8:	cbz	x0, 17308 <idpriv_temp_restore@@Base+0xbf4>
   172ac:	str	x22, [x19, #32]
   172b0:	ldr	x8, [x20, #16]
   172b4:	cbz	x8, 172c4 <idpriv_temp_restore@@Base+0xbb0>
   172b8:	mov	x0, x22
   172bc:	blr	x8
   172c0:	mov	x22, x0
   172c4:	str	x22, [x19, #8]
   172c8:	ldp	x9, x8, [x20, #40]
   172cc:	mov	x0, x20
   172d0:	udiv	x10, x22, x8
   172d4:	msub	x8, x10, x8, x22
   172d8:	lsl	x8, x8, #3
   172dc:	ldr	x10, [x9, x8]
   172e0:	str	x10, [x19]
   172e4:	str	x19, [x9, x8]
   172e8:	ldr	x8, [x21, #16]
   172ec:	stp	x8, x21, [x19, #16]
   172f0:	str	x19, [x8, #24]
   172f4:	str	x19, [x21, #16]
   172f8:	ldr	x8, [x20, #96]
   172fc:	add	x8, x8, #0x1
   17300:	str	x8, [x20, #96]
   17304:	bl	17ca4 <idpriv_temp_restore@@Base+0x1590>
   17308:	mov	x0, x19
   1730c:	ldp	x20, x19, [sp, #32]
   17310:	ldp	x22, x21, [sp, #16]
   17314:	ldp	x29, x30, [sp], #48
   17318:	ret
   1731c:	stp	x29, x30, [sp, #-64]!
   17320:	stp	x22, x21, [sp, #32]
   17324:	stp	x20, x19, [sp, #48]
   17328:	str	x23, [sp, #16]
   1732c:	ldr	x23, [x0, #96]
   17330:	mov	x29, sp
   17334:	cmp	x23, x1
   17338:	b.cc	17420 <idpriv_temp_restore@@Base+0xd0c>  // b.lo, b.ul, b.last
   1733c:	mov	x19, x0
   17340:	mov	w0, #0x28                  	// #40
   17344:	mov	x21, x1
   17348:	mov	x22, x2
   1734c:	bl	a540 <malloc@plt>
   17350:	mov	x20, x0
   17354:	cbz	x0, 17408 <idpriv_temp_restore@@Base+0xcf4>
   17358:	str	x22, [x20, #32]
   1735c:	ldr	x8, [x19, #16]
   17360:	cbz	x8, 17370 <idpriv_temp_restore@@Base+0xc5c>
   17364:	mov	x0, x22
   17368:	blr	x8
   1736c:	mov	x22, x0
   17370:	str	x22, [x20, #8]
   17374:	ldp	x9, x8, [x19, #40]
   17378:	cmp	x21, x23, lsr #1
   1737c:	udiv	x10, x22, x8
   17380:	msub	x8, x10, x8, x22
   17384:	lsl	x8, x8, #3
   17388:	ldr	x10, [x9, x8]
   1738c:	str	x10, [x20]
   17390:	str	x20, [x9, x8]
   17394:	b.ls	173c8 <idpriv_temp_restore@@Base+0xcb4>  // b.plast
   17398:	cmp	x23, x21
   1739c:	add	x8, x19, #0x38
   173a0:	b.eq	173b4 <idpriv_temp_restore@@Base+0xca0>  // b.none
   173a4:	sub	x9, x21, x23
   173a8:	ldr	x8, [x8, #24]
   173ac:	adds	x9, x9, #0x1
   173b0:	b.cc	173a8 <idpriv_temp_restore@@Base+0xc94>  // b.lo, b.ul, b.last
   173b4:	str	x8, [x20, #16]
   173b8:	ldr	x9, [x8, #24]!
   173bc:	str	x9, [x20, #24]
   173c0:	add	x9, x9, #0x10
   173c4:	b	173ec <idpriv_temp_restore@@Base+0xcd8>
   173c8:	add	x8, x19, #0x38
   173cc:	cbz	x21, 173dc <idpriv_temp_restore@@Base+0xcc8>
   173d0:	ldr	x8, [x8, #16]
   173d4:	subs	x21, x21, #0x1
   173d8:	b.ne	173d0 <idpriv_temp_restore@@Base+0xcbc>  // b.any
   173dc:	str	x8, [x20, #24]
   173e0:	ldr	x9, [x8, #16]!
   173e4:	str	x9, [x20, #16]
   173e8:	add	x9, x9, #0x18
   173ec:	str	x20, [x9]
   173f0:	str	x20, [x8]
   173f4:	ldr	x8, [x19, #96]
   173f8:	mov	x0, x19
   173fc:	add	x8, x8, #0x1
   17400:	str	x8, [x19, #96]
   17404:	bl	17ca4 <idpriv_temp_restore@@Base+0x1590>
   17408:	mov	x0, x20
   1740c:	ldp	x20, x19, [sp, #48]
   17410:	ldp	x22, x21, [sp, #32]
   17414:	ldr	x23, [sp, #16]
   17418:	ldp	x29, x30, [sp], #64
   1741c:	ret
   17420:	bl	a840 <abort@plt>
   17424:	stp	x29, x30, [sp, #-32]!
   17428:	str	x19, [sp, #16]
   1742c:	ldr	x8, [x1, #8]
   17430:	ldp	x10, x9, [x0, #40]
   17434:	mov	x19, x1
   17438:	mov	x29, sp
   1743c:	udiv	x11, x8, x9
   17440:	msub	x8, x11, x9, x8
   17444:	add	x8, x10, x8, lsl #3
   17448:	ldr	x9, [x8]
   1744c:	cmp	x9, x1
   17450:	b.eq	17468 <idpriv_temp_restore@@Base+0xd54>  // b.none
   17454:	cbz	x9, 174b0 <idpriv_temp_restore@@Base+0xd9c>
   17458:	mov	x8, x9
   1745c:	ldr	x9, [x9]
   17460:	cmp	x9, x19
   17464:	b.ne	17454 <idpriv_temp_restore@@Base+0xd40>  // b.any
   17468:	ldr	x9, [x19]
   1746c:	str	x9, [x8]
   17470:	ldp	x9, x8, [x19, #16]
   17474:	str	x9, [x8, #16]
   17478:	str	x8, [x9, #24]
   1747c:	ldr	x9, [x0, #96]
   17480:	ldr	x8, [x0, #24]
   17484:	sub	x9, x9, #0x1
   17488:	str	x9, [x0, #96]
   1748c:	cbz	x8, 17498 <idpriv_temp_restore@@Base+0xd84>
   17490:	ldr	x0, [x19, #32]
   17494:	blr	x8
   17498:	mov	x0, x19
   1749c:	bl	a960 <free@plt>
   174a0:	ldr	x19, [sp, #16]
   174a4:	mov	w0, #0x1                   	// #1
   174a8:	ldp	x29, x30, [sp], #32
   174ac:	ret
   174b0:	bl	a840 <abort@plt>
   174b4:	stp	x29, x30, [sp, #-32]!
   174b8:	ldr	x9, [x0, #96]
   174bc:	str	x19, [sp, #16]
   174c0:	mov	x29, sp
   174c4:	cmp	x9, x1
   174c8:	b.ls	17580 <idpriv_temp_restore@@Base+0xe6c>  // b.plast
   174cc:	sub	x8, x9, #0x1
   174d0:	add	x19, x0, #0x38
   174d4:	cmp	x1, x8, lsr #1
   174d8:	b.ls	17500 <idpriv_temp_restore@@Base+0xdec>  // b.plast
   174dc:	sub	x9, x1, x9
   174e0:	mov	x10, x19
   174e4:	ldr	x19, [x19, #24]
   174e8:	adds	x9, x9, #0x1
   174ec:	b.cc	174e0 <idpriv_temp_restore@@Base+0xdcc>  // b.lo, b.ul, b.last
   174f0:	ldr	x9, [x19, #24]
   174f4:	str	x9, [x10, #24]
   174f8:	str	x10, [x9, #16]
   174fc:	b	17520 <idpriv_temp_restore@@Base+0xe0c>
   17500:	add	x9, x1, #0x1
   17504:	mov	x10, x19
   17508:	ldr	x19, [x19, #16]
   1750c:	subs	x9, x9, #0x1
   17510:	b.ne	17504 <idpriv_temp_restore@@Base+0xdf0>  // b.any
   17514:	ldr	x9, [x19, #16]
   17518:	str	x9, [x10, #16]
   1751c:	str	x10, [x9, #24]
   17520:	ldr	x9, [x19, #8]
   17524:	ldp	x11, x10, [x0, #40]
   17528:	udiv	x12, x9, x10
   1752c:	msub	x9, x12, x10, x9
   17530:	add	x9, x11, x9, lsl #3
   17534:	ldr	x10, [x9]
   17538:	cmp	x10, x19
   1753c:	b.eq	1754c <idpriv_temp_restore@@Base+0xe38>  // b.none
   17540:	cbz	x10, 17580 <idpriv_temp_restore@@Base+0xe6c>
   17544:	mov	x9, x10
   17548:	b	17534 <idpriv_temp_restore@@Base+0xe20>
   1754c:	ldr	x10, [x19]
   17550:	str	x10, [x9]
   17554:	ldr	x9, [x0, #24]
   17558:	str	x8, [x0, #96]
   1755c:	cbz	x9, 17568 <idpriv_temp_restore@@Base+0xe54>
   17560:	ldr	x0, [x19, #32]
   17564:	blr	x9
   17568:	mov	x0, x19
   1756c:	bl	a960 <free@plt>
   17570:	ldr	x19, [sp, #16]
   17574:	mov	w0, #0x1                   	// #1
   17578:	ldp	x29, x30, [sp], #32
   1757c:	ret
   17580:	bl	a840 <abort@plt>
   17584:	stp	x29, x30, [sp, #-48]!
   17588:	stp	x20, x19, [sp, #32]
   1758c:	str	x21, [sp, #16]
   17590:	ldr	x21, [x0, #96]
   17594:	mov	x3, x1
   17598:	mov	x1, xzr
   1759c:	mov	x29, sp
   175a0:	mov	x2, x21
   175a4:	mov	x20, x0
   175a8:	bl	16cb0 <idpriv_temp_restore@@Base+0x59c>
   175ac:	cbz	x0, 17618 <idpriv_temp_restore@@Base+0xf04>
   175b0:	ldr	x8, [x0, #8]
   175b4:	ldp	x10, x9, [x20, #40]
   175b8:	mov	x19, x0
   175bc:	udiv	x11, x8, x9
   175c0:	msub	x8, x11, x9, x8
   175c4:	add	x8, x10, x8, lsl #3
   175c8:	ldr	x9, [x8]
   175cc:	cmp	x9, x19
   175d0:	b.eq	175e0 <idpriv_temp_restore@@Base+0xecc>  // b.none
   175d4:	cbz	x9, 17628 <idpriv_temp_restore@@Base+0xf14>
   175d8:	mov	x8, x9
   175dc:	b	175c8 <idpriv_temp_restore@@Base+0xeb4>
   175e0:	ldr	x9, [x19]
   175e4:	str	x9, [x8]
   175e8:	ldp	x9, x8, [x19, #16]
   175ec:	str	x9, [x8, #16]
   175f0:	str	x8, [x9, #24]
   175f4:	ldr	x8, [x20, #24]
   175f8:	sub	x9, x21, #0x1
   175fc:	str	x9, [x20, #96]
   17600:	cbz	x8, 1760c <idpriv_temp_restore@@Base+0xef8>
   17604:	ldr	x0, [x19, #32]
   17608:	blr	x8
   1760c:	mov	x0, x19
   17610:	bl	a960 <free@plt>
   17614:	mov	w0, #0x1                   	// #1
   17618:	ldp	x20, x19, [sp, #32]
   1761c:	ldr	x21, [sp, #16]
   17620:	ldp	x29, x30, [sp], #48
   17624:	ret
   17628:	bl	a840 <abort@plt>
   1762c:	stp	x29, x30, [sp, #-64]!
   17630:	stp	x22, x21, [sp, #32]
   17634:	stp	x20, x19, [sp, #48]
   17638:	ldr	x20, [x0, #72]
   1763c:	add	x21, x0, #0x38
   17640:	mov	x19, x0
   17644:	str	x23, [sp, #16]
   17648:	cmp	x20, x21
   1764c:	mov	x29, sp
   17650:	b.eq	17684 <idpriv_temp_restore@@Base+0xf70>  // b.none
   17654:	ldr	x22, [x19, #24]
   17658:	b	17670 <idpriv_temp_restore@@Base+0xf5c>
   1765c:	mov	x0, x20
   17660:	bl	a960 <free@plt>
   17664:	cmp	x23, x21
   17668:	mov	x20, x23
   1766c:	b.eq	17684 <idpriv_temp_restore@@Base+0xf70>  // b.none
   17670:	ldr	x23, [x20, #16]
   17674:	cbz	x22, 1765c <idpriv_temp_restore@@Base+0xf48>
   17678:	ldr	x0, [x20, #32]
   1767c:	blr	x22
   17680:	b	1765c <idpriv_temp_restore@@Base+0xf48>
   17684:	ldr	x0, [x19, #40]
   17688:	bl	a960 <free@plt>
   1768c:	mov	x0, x19
   17690:	ldp	x20, x19, [sp, #48]
   17694:	ldp	x22, x21, [sp, #32]
   17698:	ldr	x23, [sp, #16]
   1769c:	ldp	x29, x30, [sp], #64
   176a0:	b	a960 <free@plt>
   176a4:	ldr	x9, [x0]
   176a8:	add	x10, x0, #0x38
   176ac:	stp	x9, x0, [x8]
   176b0:	ldr	x9, [x0, #72]
   176b4:	stp	x9, x10, [x8, #24]
   176b8:	ret
   176bc:	stp	x29, x30, [sp, #-16]!
   176c0:	subs	x10, x2, x1
   176c4:	mov	x29, sp
   176c8:	b.cc	177a4 <idpriv_temp_restore@@Base+0x1090>  // b.lo, b.ul, b.last
   176cc:	ldr	x11, [x0, #96]
   176d0:	subs	x12, x11, x2
   176d4:	b.cc	177a4 <idpriv_temp_restore@@Base+0x1090>  // b.lo, b.ul, b.last
   176d8:	ldr	x9, [x0]
   176dc:	cmp	x10, x1
   176e0:	stp	x9, x0, [x8]
   176e4:	b.cs	17728 <idpriv_temp_restore@@Base+0x1014>  // b.hs, b.nlast
   176e8:	cmp	x12, x1
   176ec:	b.cs	17728 <idpriv_temp_restore@@Base+0x1014>  // b.hs, b.nlast
   176f0:	add	x9, x0, #0x38
   176f4:	cbz	x12, 17708 <idpriv_temp_restore@@Base+0xff4>
   176f8:	sub	x11, x2, x11
   176fc:	ldr	x9, [x9, #24]
   17700:	adds	x11, x11, #0x1
   17704:	b.cc	176fc <idpriv_temp_restore@@Base+0xfe8>  // b.lo, b.ul, b.last
   17708:	str	x9, [x8, #32]
   1770c:	cbz	x10, 17720 <idpriv_temp_restore@@Base+0x100c>
   17710:	sub	x10, x1, x2
   17714:	ldr	x9, [x9, #24]
   17718:	adds	x10, x10, #0x1
   1771c:	b.cc	17714 <idpriv_temp_restore@@Base+0x1000>  // b.lo, b.ul, b.last
   17720:	add	x8, x8, #0x18
   17724:	b	17798 <idpriv_temp_restore@@Base+0x1084>
   17728:	cmp	x10, x12
   1772c:	b.ls	17764 <idpriv_temp_restore@@Base+0x1050>  // b.plast
   17730:	ldr	x10, [x0, #72]
   17734:	add	x9, x0, #0x38
   17738:	cbz	x1, 17748 <idpriv_temp_restore@@Base+0x1034>
   1773c:	ldr	x10, [x10, #16]
   17740:	subs	x1, x1, #0x1
   17744:	b.ne	1773c <idpriv_temp_restore@@Base+0x1028>  // b.any
   17748:	str	x10, [x8, #24]
   1774c:	cbz	x12, 17794 <idpriv_temp_restore@@Base+0x1080>
   17750:	sub	x10, x2, x11
   17754:	ldr	x9, [x9, #24]
   17758:	adds	x10, x10, #0x1
   1775c:	b.cc	17754 <idpriv_temp_restore@@Base+0x1040>  // b.lo, b.ul, b.last
   17760:	b	17794 <idpriv_temp_restore@@Base+0x1080>
   17764:	ldr	x9, [x0, #72]
   17768:	cbz	x1, 1777c <idpriv_temp_restore@@Base+0x1068>
   1776c:	mov	x11, x1
   17770:	ldr	x9, [x9, #16]
   17774:	subs	x11, x11, #0x1
   17778:	b.ne	17770 <idpriv_temp_restore@@Base+0x105c>  // b.any
   1777c:	str	x9, [x8, #24]
   17780:	cbz	x10, 17794 <idpriv_temp_restore@@Base+0x1080>
   17784:	sub	x10, x1, x2
   17788:	ldr	x9, [x9, #16]
   1778c:	adds	x10, x10, #0x1
   17790:	b.cc	17788 <idpriv_temp_restore@@Base+0x1074>  // b.lo, b.ul, b.last
   17794:	add	x8, x8, #0x20
   17798:	str	x9, [x8]
   1779c:	ldp	x29, x30, [sp], #16
   177a0:	ret
   177a4:	bl	a840 <abort@plt>
   177a8:	ldp	x8, x9, [x0, #24]
   177ac:	cmp	x8, x9
   177b0:	b.eq	177d4 <idpriv_temp_restore@@Base+0x10c0>  // b.none
   177b4:	ldr	x9, [x8, #32]
   177b8:	str	x9, [x1]
   177bc:	cbz	x2, 177c4 <idpriv_temp_restore@@Base+0x10b0>
   177c0:	str	x8, [x2]
   177c4:	ldr	x8, [x8, #16]
   177c8:	str	x8, [x0, #24]
   177cc:	mov	w0, #0x1                   	// #1
   177d0:	ret
   177d4:	mov	w0, wzr
   177d8:	ret
   177dc:	ret
   177e0:	stp	x29, x30, [sp, #-64]!
   177e4:	stp	x24, x23, [sp, #16]
   177e8:	stp	x22, x21, [sp, #32]
   177ec:	stp	x20, x19, [sp, #48]
   177f0:	ldr	x22, [x0, #72]
   177f4:	add	x23, x0, #0x38
   177f8:	mov	x29, sp
   177fc:	cmp	x22, x23
   17800:	b.eq	1784c <idpriv_temp_restore@@Base+0x1138>  // b.none
   17804:	mov	x20, x2
   17808:	mov	x21, x1
   1780c:	mov	w24, #0x2                   	// #2
   17810:	ldr	x0, [x22, #32]
   17814:	mov	x1, x20
   17818:	blr	x21
   1781c:	cmp	w0, #0x0
   17820:	cset	w8, eq  // eq = none
   17824:	csel	x9, x22, x19, eq  // eq = none
   17828:	csel	w8, w24, w8, gt
   1782c:	csel	x19, x19, x9, gt
   17830:	cbnz	w8, 17844 <idpriv_temp_restore@@Base+0x1130>
   17834:	ldr	x22, [x22, #16]
   17838:	cmp	x22, x23
   1783c:	b.ne	17810 <idpriv_temp_restore@@Base+0x10fc>  // b.any
   17840:	b	1784c <idpriv_temp_restore@@Base+0x1138>
   17844:	cmp	w8, #0x2
   17848:	b.ne	17850 <idpriv_temp_restore@@Base+0x113c>  // b.any
   1784c:	mov	x19, xzr
   17850:	mov	x0, x19
   17854:	ldp	x20, x19, [sp, #48]
   17858:	ldp	x22, x21, [sp, #32]
   1785c:	ldp	x24, x23, [sp, #16]
   17860:	ldp	x29, x30, [sp], #64
   17864:	ret
   17868:	stp	x29, x30, [sp, #-48]!
   1786c:	cmp	x3, x2
   17870:	stp	x22, x21, [sp, #16]
   17874:	stp	x20, x19, [sp, #32]
   17878:	mov	x29, sp
   1787c:	b.cc	17924 <idpriv_temp_restore@@Base+0x1210>  // b.lo, b.ul, b.last
   17880:	ldr	x8, [x0, #96]
   17884:	cmp	x8, x3
   17888:	b.cc	17924 <idpriv_temp_restore@@Base+0x1210>  // b.lo, b.ul, b.last
   1788c:	cmp	x3, x2
   17890:	b.eq	1790c <idpriv_temp_restore@@Base+0x11f8>  // b.none
   17894:	sub	x9, x8, #0x1
   17898:	mov	x19, x4
   1789c:	mov	x20, x1
   178a0:	cmp	x2, x9, lsr #1
   178a4:	b.ls	178cc <idpriv_temp_restore@@Base+0x11b8>  // b.plast
   178a8:	ldr	x21, [x0, #80]
   178ac:	cmp	x9, x2
   178b0:	b.eq	178e4 <idpriv_temp_restore@@Base+0x11d0>  // b.none
   178b4:	sub	x8, x2, x8
   178b8:	add	x8, x8, #0x1
   178bc:	ldr	x21, [x21, #24]
   178c0:	adds	x8, x8, #0x1
   178c4:	b.cc	178bc <idpriv_temp_restore@@Base+0x11a8>  // b.lo, b.ul, b.last
   178c8:	b	178e4 <idpriv_temp_restore@@Base+0x11d0>
   178cc:	ldr	x21, [x0, #72]
   178d0:	cbz	x2, 178e4 <idpriv_temp_restore@@Base+0x11d0>
   178d4:	mov	x8, x2
   178d8:	ldr	x21, [x21, #16]
   178dc:	subs	x8, x8, #0x1
   178e0:	b.ne	178d8 <idpriv_temp_restore@@Base+0x11c4>  // b.any
   178e4:	sub	x22, x2, x3
   178e8:	ldr	x0, [x21, #32]
   178ec:	mov	x1, x19
   178f0:	blr	x20
   178f4:	cmp	w0, #0x0
   178f8:	b.gt	1790c <idpriv_temp_restore@@Base+0x11f8>
   178fc:	cbz	w0, 17910 <idpriv_temp_restore@@Base+0x11fc>
   17900:	ldr	x21, [x21, #16]
   17904:	adds	x22, x22, #0x1
   17908:	b.cc	178e8 <idpriv_temp_restore@@Base+0x11d4>  // b.lo, b.ul, b.last
   1790c:	mov	x21, xzr
   17910:	mov	x0, x21
   17914:	ldp	x20, x19, [sp, #32]
   17918:	ldp	x22, x21, [sp, #16]
   1791c:	ldp	x29, x30, [sp], #48
   17920:	ret
   17924:	bl	a840 <abort@plt>
   17928:	stp	x29, x30, [sp, #-80]!
   1792c:	stp	x24, x23, [sp, #32]
   17930:	stp	x22, x21, [sp, #48]
   17934:	stp	x20, x19, [sp, #64]
   17938:	ldr	x22, [x0, #72]
   1793c:	add	x23, x0, #0x38
   17940:	str	x25, [sp, #16]
   17944:	mov	x29, sp
   17948:	cmp	x22, x23
   1794c:	b.eq	179a0 <idpriv_temp_restore@@Base+0x128c>  // b.none
   17950:	mov	x20, x2
   17954:	mov	x21, x1
   17958:	mov	x24, xzr
   1795c:	mov	w25, #0x2                   	// #2
   17960:	ldr	x0, [x22, #32]
   17964:	mov	x1, x20
   17968:	blr	x21
   1796c:	cmp	w0, #0x0
   17970:	cset	w8, eq  // eq = none
   17974:	csel	x9, x24, x19, eq  // eq = none
   17978:	csel	w8, w25, w8, gt
   1797c:	csel	x19, x19, x9, gt
   17980:	cbnz	w8, 17998 <idpriv_temp_restore@@Base+0x1284>
   17984:	ldr	x22, [x22, #16]
   17988:	add	x24, x24, #0x1
   1798c:	cmp	x22, x23
   17990:	b.ne	17960 <idpriv_temp_restore@@Base+0x124c>  // b.any
   17994:	b	179a0 <idpriv_temp_restore@@Base+0x128c>
   17998:	cmp	w8, #0x2
   1799c:	b.ne	179a4 <idpriv_temp_restore@@Base+0x1290>  // b.any
   179a0:	mov	x19, #0xffffffffffffffff    	// #-1
   179a4:	mov	x0, x19
   179a8:	ldp	x20, x19, [sp, #64]
   179ac:	ldp	x22, x21, [sp, #48]
   179b0:	ldp	x24, x23, [sp, #32]
   179b4:	ldr	x25, [sp, #16]
   179b8:	ldp	x29, x30, [sp], #80
   179bc:	ret
   179c0:	stp	x29, x30, [sp, #-64]!
   179c4:	cmp	x3, x2
   179c8:	str	x23, [sp, #16]
   179cc:	stp	x22, x21, [sp, #32]
   179d0:	stp	x20, x19, [sp, #48]
   179d4:	mov	x29, sp
   179d8:	b.cc	17a90 <idpriv_temp_restore@@Base+0x137c>  // b.lo, b.ul, b.last
   179dc:	ldr	x8, [x0, #96]
   179e0:	mov	x21, x3
   179e4:	cmp	x8, x3
   179e8:	b.cc	17a90 <idpriv_temp_restore@@Base+0x137c>  // b.lo, b.ul, b.last
   179ec:	mov	x19, x2
   179f0:	cmp	x21, x2
   179f4:	b.eq	17a74 <idpriv_temp_restore@@Base+0x1360>  // b.none
   179f8:	sub	x9, x8, #0x1
   179fc:	mov	x20, x4
   17a00:	mov	x22, x1
   17a04:	cmp	x19, x9, lsr #1
   17a08:	b.ls	17a30 <idpriv_temp_restore@@Base+0x131c>  // b.plast
   17a0c:	ldr	x23, [x0, #80]
   17a10:	cmp	x9, x19
   17a14:	b.eq	17a60 <idpriv_temp_restore@@Base+0x134c>  // b.none
   17a18:	sub	x8, x19, x8
   17a1c:	add	x8, x8, #0x1
   17a20:	ldr	x23, [x23, #24]
   17a24:	adds	x8, x8, #0x1
   17a28:	b.cc	17a20 <idpriv_temp_restore@@Base+0x130c>  // b.lo, b.ul, b.last
   17a2c:	b	17a60 <idpriv_temp_restore@@Base+0x134c>
   17a30:	ldr	x23, [x0, #72]
   17a34:	cbz	x19, 17a60 <idpriv_temp_restore@@Base+0x134c>
   17a38:	mov	x8, x19
   17a3c:	ldr	x23, [x23, #16]
   17a40:	subs	x8, x8, #0x1
   17a44:	b.ne	17a3c <idpriv_temp_restore@@Base+0x1328>  // b.any
   17a48:	b	17a60 <idpriv_temp_restore@@Base+0x134c>
   17a4c:	cbz	w0, 17a78 <idpriv_temp_restore@@Base+0x1364>
   17a50:	ldr	x23, [x23, #16]
   17a54:	add	x19, x19, #0x1
   17a58:	cmp	x21, x19
   17a5c:	b.eq	17a74 <idpriv_temp_restore@@Base+0x1360>  // b.none
   17a60:	ldr	x0, [x23, #32]
   17a64:	mov	x1, x20
   17a68:	blr	x22
   17a6c:	cmp	w0, #0x0
   17a70:	b.le	17a4c <idpriv_temp_restore@@Base+0x1338>
   17a74:	mov	x19, #0xffffffffffffffff    	// #-1
   17a78:	mov	x0, x19
   17a7c:	ldp	x20, x19, [sp, #48]
   17a80:	ldp	x22, x21, [sp, #32]
   17a84:	ldr	x23, [sp, #16]
   17a88:	ldp	x29, x30, [sp], #64
   17a8c:	ret
   17a90:	bl	a840 <abort@plt>
   17a94:	stp	x29, x30, [sp, #-64]!
   17a98:	stp	x22, x21, [sp, #32]
   17a9c:	stp	x20, x19, [sp, #48]
   17aa0:	ldr	x22, [x0, #72]
   17aa4:	str	x23, [sp, #16]
   17aa8:	add	x23, x0, #0x38
   17aac:	mov	x21, x2
   17ab0:	mov	x19, x0
   17ab4:	cmp	x22, x23
   17ab8:	mov	x29, sp
   17abc:	b.eq	17ae0 <idpriv_temp_restore@@Base+0x13cc>  // b.none
   17ac0:	mov	x20, x1
   17ac4:	ldr	x0, [x22, #32]
   17ac8:	mov	x1, x21
   17acc:	blr	x20
   17ad0:	tbz	w0, #31, 17b40 <idpriv_temp_restore@@Base+0x142c>
   17ad4:	ldr	x22, [x22, #16]
   17ad8:	cmp	x22, x23
   17adc:	b.ne	17ac4 <idpriv_temp_restore@@Base+0x13b0>  // b.any
   17ae0:	mov	w0, #0x28                  	// #40
   17ae4:	bl	a540 <malloc@plt>
   17ae8:	mov	x20, x0
   17aec:	cbz	x0, 17bb0 <idpriv_temp_restore@@Base+0x149c>
   17af0:	str	x21, [x20, #32]
   17af4:	ldr	x8, [x19, #16]
   17af8:	cbz	x8, 17b08 <idpriv_temp_restore@@Base+0x13f4>
   17afc:	mov	x0, x21
   17b00:	blr	x8
   17b04:	mov	x21, x0
   17b08:	str	x21, [x20, #8]
   17b0c:	ldp	x9, x8, [x19, #40]
   17b10:	udiv	x10, x21, x8
   17b14:	msub	x8, x10, x8, x21
   17b18:	lsl	x8, x8, #3
   17b1c:	ldr	x10, [x9, x8]
   17b20:	str	x10, [x20]
   17b24:	str	x20, [x9, x8]
   17b28:	ldr	x8, [x19, #80]
   17b2c:	stp	x23, x8, [x20, #16]
   17b30:	str	x20, [x8, #16]
   17b34:	ldr	x8, [x19, #96]
   17b38:	str	x20, [x19, #80]
   17b3c:	b	17ba0 <idpriv_temp_restore@@Base+0x148c>
   17b40:	mov	w0, #0x28                  	// #40
   17b44:	bl	a540 <malloc@plt>
   17b48:	mov	x20, x0
   17b4c:	cbz	x0, 17bb0 <idpriv_temp_restore@@Base+0x149c>
   17b50:	str	x21, [x20, #32]
   17b54:	ldr	x8, [x19, #16]
   17b58:	cbz	x8, 17b68 <idpriv_temp_restore@@Base+0x1454>
   17b5c:	mov	x0, x21
   17b60:	blr	x8
   17b64:	mov	x21, x0
   17b68:	str	x21, [x20, #8]
   17b6c:	ldp	x9, x8, [x19, #40]
   17b70:	udiv	x10, x21, x8
   17b74:	msub	x8, x10, x8, x21
   17b78:	lsl	x8, x8, #3
   17b7c:	ldr	x10, [x9, x8]
   17b80:	str	x10, [x20]
   17b84:	str	x20, [x9, x8]
   17b88:	str	x22, [x20, #16]
   17b8c:	ldr	x8, [x22, #24]
   17b90:	str	x8, [x20, #24]
   17b94:	str	x20, [x8, #16]
   17b98:	str	x20, [x22, #24]
   17b9c:	ldr	x8, [x19, #96]
   17ba0:	add	x8, x8, #0x1
   17ba4:	mov	x0, x19
   17ba8:	str	x8, [x19, #96]
   17bac:	bl	17ca4 <idpriv_temp_restore@@Base+0x1590>
   17bb0:	mov	x0, x20
   17bb4:	ldp	x20, x19, [sp, #48]
   17bb8:	ldp	x22, x21, [sp, #32]
   17bbc:	ldr	x23, [sp, #16]
   17bc0:	ldp	x29, x30, [sp], #64
   17bc4:	ret
   17bc8:	stp	x29, x30, [sp, #-64]!
   17bcc:	stp	x22, x21, [sp, #32]
   17bd0:	stp	x20, x19, [sp, #48]
   17bd4:	ldr	x19, [x0, #72]
   17bd8:	str	x23, [sp, #16]
   17bdc:	add	x23, x0, #0x38
   17be0:	mov	x29, sp
   17be4:	cmp	x19, x23
   17be8:	b.eq	17c1c <idpriv_temp_restore@@Base+0x1508>  // b.none
   17bec:	mov	x21, x2
   17bf0:	mov	x20, x0
   17bf4:	mov	x22, x1
   17bf8:	ldr	x0, [x19, #32]
   17bfc:	mov	x1, x21
   17c00:	blr	x22
   17c04:	cmp	w0, #0x0
   17c08:	b.gt	17c1c <idpriv_temp_restore@@Base+0x1508>
   17c0c:	cbz	w0, 17c24 <idpriv_temp_restore@@Base+0x1510>
   17c10:	ldr	x19, [x19, #16]
   17c14:	cmp	x19, x23
   17c18:	b.ne	17bf8 <idpriv_temp_restore@@Base+0x14e4>  // b.any
   17c1c:	mov	w0, wzr
   17c20:	b	17c8c <idpriv_temp_restore@@Base+0x1578>
   17c24:	ldr	x8, [x19, #8]
   17c28:	ldp	x10, x9, [x20, #40]
   17c2c:	udiv	x11, x8, x9
   17c30:	msub	x8, x11, x9, x8
   17c34:	add	x8, x10, x8, lsl #3
   17c38:	ldr	x9, [x8]
   17c3c:	cmp	x9, x19
   17c40:	b.eq	17c50 <idpriv_temp_restore@@Base+0x153c>  // b.none
   17c44:	cbz	x9, 17ca0 <idpriv_temp_restore@@Base+0x158c>
   17c48:	mov	x8, x9
   17c4c:	b	17c38 <idpriv_temp_restore@@Base+0x1524>
   17c50:	ldr	x9, [x19]
   17c54:	str	x9, [x8]
   17c58:	ldp	x9, x8, [x19, #16]
   17c5c:	str	x9, [x8, #16]
   17c60:	str	x8, [x9, #24]
   17c64:	ldr	x9, [x20, #96]
   17c68:	ldr	x8, [x20, #24]
   17c6c:	sub	x9, x9, #0x1
   17c70:	str	x9, [x20, #96]
   17c74:	cbz	x8, 17c80 <idpriv_temp_restore@@Base+0x156c>
   17c78:	ldr	x0, [x19, #32]
   17c7c:	blr	x8
   17c80:	mov	x0, x19
   17c84:	bl	a960 <free@plt>
   17c88:	mov	w0, #0x1                   	// #1
   17c8c:	ldp	x20, x19, [sp, #48]
   17c90:	ldp	x22, x21, [sp, #32]
   17c94:	ldr	x23, [sp, #16]
   17c98:	ldp	x29, x30, [sp], #64
   17c9c:	ret
   17ca0:	bl	a840 <abort@plt>
   17ca4:	stp	x29, x30, [sp, #-48]!
   17ca8:	stp	x22, x21, [sp, #16]
   17cac:	stp	x20, x19, [sp, #32]
   17cb0:	ldr	x8, [x0, #96]
   17cb4:	ldr	x22, [x0, #48]
   17cb8:	mov	x29, sp
   17cbc:	adds	x8, x8, x8, lsr #1
   17cc0:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   17cc4:	cmp	x8, x22
   17cc8:	b.ls	17d70 <idpriv_temp_restore@@Base+0x165c>  // b.plast
   17ccc:	adrp	x10, 30000 <vasnprintf@@Base+0x224c>
   17cd0:	mov	x19, x0
   17cd4:	mov	x9, xzr
   17cd8:	add	x10, x10, #0x738
   17cdc:	ldr	x20, [x10, x9]
   17ce0:	cmp	x20, x8
   17ce4:	b.cs	17cf8 <idpriv_temp_restore@@Base+0x15e4>  // b.hs, b.nlast
   17ce8:	add	x9, x9, #0x8
   17cec:	cmp	x9, #0x740
   17cf0:	b.ne	17cdc <idpriv_temp_restore@@Base+0x15c8>  // b.any
   17cf4:	mov	x20, #0xffffffffffffffff    	// #-1
   17cf8:	cmp	x20, x22
   17cfc:	b.ls	17d70 <idpriv_temp_restore@@Base+0x165c>  // b.plast
   17d00:	lsr	x8, x20, #61
   17d04:	cbnz	x8, 17d70 <idpriv_temp_restore@@Base+0x165c>
   17d08:	ldr	x21, [x19, #40]
   17d0c:	mov	w1, #0x8                   	// #8
   17d10:	mov	x0, x20
   17d14:	bl	a6b0 <calloc@plt>
   17d18:	cbz	x0, 17d70 <idpriv_temp_restore@@Base+0x165c>
   17d1c:	cbnz	x22, 17d3c <idpriv_temp_restore@@Base+0x1628>
   17d20:	stp	x0, x20, [x19, #40]
   17d24:	mov	x0, x21
   17d28:	ldp	x20, x19, [sp, #32]
   17d2c:	ldp	x22, x21, [sp, #16]
   17d30:	ldp	x29, x30, [sp], #48
   17d34:	b	a960 <free@plt>
   17d38:	cbz	x22, 17d20 <idpriv_temp_restore@@Base+0x160c>
   17d3c:	sub	x22, x22, #0x1
   17d40:	ldr	x8, [x21, x22, lsl #3]
   17d44:	cbz	x8, 17d38 <idpriv_temp_restore@@Base+0x1624>
   17d48:	ldp	x11, x9, [x8]
   17d4c:	udiv	x10, x9, x20
   17d50:	msub	x9, x10, x20, x9
   17d54:	lsl	x9, x9, #3
   17d58:	ldr	x10, [x0, x9]
   17d5c:	str	x10, [x8]
   17d60:	str	x8, [x0, x9]
   17d64:	mov	x8, x11
   17d68:	cbnz	x11, 17d48 <idpriv_temp_restore@@Base+0x1634>
   17d6c:	b	17d38 <idpriv_temp_restore@@Base+0x1624>
   17d70:	ldp	x20, x19, [sp, #32]
   17d74:	ldp	x22, x21, [sp, #16]
   17d78:	ldp	x29, x30, [sp], #48
   17d7c:	ret

0000000000017d80 <gl_list_nx_create_empty@@Base>:
   17d80:	ldr	x5, [x0]
   17d84:	and	w4, w4, #0x1
   17d88:	br	x5

0000000000017d8c <gl_list_nx_create@@Base>:
   17d8c:	ldr	x7, [x0, #8]
   17d90:	and	w4, w4, #0x1
   17d94:	br	x7

0000000000017d98 <gl_list_size@@Base>:
   17d98:	ldr	x8, [x0]
   17d9c:	ldr	x1, [x8, #16]
   17da0:	br	x1

0000000000017da4 <gl_list_node_value@@Base>:
   17da4:	ldr	x8, [x0]
   17da8:	ldr	x2, [x8, #24]
   17dac:	br	x2

0000000000017db0 <gl_list_node_nx_set_value@@Base>:
   17db0:	ldr	x8, [x0]
   17db4:	ldr	x3, [x8, #32]
   17db8:	br	x3

0000000000017dbc <gl_list_next_node@@Base>:
   17dbc:	ldr	x8, [x0]
   17dc0:	ldr	x2, [x8, #40]
   17dc4:	br	x2

0000000000017dc8 <gl_list_previous_node@@Base>:
   17dc8:	ldr	x8, [x0]
   17dcc:	ldr	x2, [x8, #48]
   17dd0:	br	x2

0000000000017dd4 <gl_list_get_at@@Base>:
   17dd4:	ldr	x8, [x0]
   17dd8:	ldr	x2, [x8, #56]
   17ddc:	br	x2

0000000000017de0 <gl_list_nx_set_at@@Base>:
   17de0:	ldr	x8, [x0]
   17de4:	ldr	x3, [x8, #64]
   17de8:	br	x3

0000000000017dec <gl_list_search@@Base>:
   17dec:	stp	x29, x30, [sp, #-32]!
   17df0:	stp	x20, x19, [sp, #16]
   17df4:	ldr	x8, [x0]
   17df8:	mov	x29, sp
   17dfc:	mov	x19, x0
   17e00:	mov	x20, x1
   17e04:	ldr	x8, [x8, #16]
   17e08:	blr	x8
   17e0c:	ldr	x8, [x19]
   17e10:	mov	x2, x0
   17e14:	mov	x0, x19
   17e18:	mov	x3, x20
   17e1c:	ldr	x4, [x8, #72]
   17e20:	ldp	x20, x19, [sp, #16]
   17e24:	mov	x1, xzr
   17e28:	ldp	x29, x30, [sp], #32
   17e2c:	br	x4

0000000000017e30 <gl_list_search_from@@Base>:
   17e30:	stp	x29, x30, [sp, #-48]!
   17e34:	stp	x20, x19, [sp, #32]
   17e38:	ldr	x8, [x0]
   17e3c:	str	x21, [sp, #16]
   17e40:	mov	x29, sp
   17e44:	mov	x19, x2
   17e48:	ldr	x8, [x8, #16]
   17e4c:	mov	x20, x0
   17e50:	mov	x21, x1
   17e54:	blr	x8
   17e58:	ldr	x8, [x20]
   17e5c:	mov	x2, x0
   17e60:	mov	x0, x20
   17e64:	mov	x1, x21
   17e68:	ldr	x4, [x8, #72]
   17e6c:	mov	x3, x19
   17e70:	ldp	x20, x19, [sp, #32]
   17e74:	ldr	x21, [sp, #16]
   17e78:	ldp	x29, x30, [sp], #48
   17e7c:	br	x4

0000000000017e80 <gl_list_search_from_to@@Base>:
   17e80:	ldr	x8, [x0]
   17e84:	ldr	x4, [x8, #72]
   17e88:	br	x4

0000000000017e8c <gl_list_indexof@@Base>:
   17e8c:	stp	x29, x30, [sp, #-32]!
   17e90:	stp	x20, x19, [sp, #16]
   17e94:	ldr	x8, [x0]
   17e98:	mov	x29, sp
   17e9c:	mov	x19, x0
   17ea0:	mov	x20, x1
   17ea4:	ldr	x8, [x8, #16]
   17ea8:	blr	x8
   17eac:	ldr	x8, [x19]
   17eb0:	mov	x2, x0
   17eb4:	mov	x0, x19
   17eb8:	mov	x3, x20
   17ebc:	ldr	x4, [x8, #80]
   17ec0:	ldp	x20, x19, [sp, #16]
   17ec4:	mov	x1, xzr
   17ec8:	ldp	x29, x30, [sp], #32
   17ecc:	br	x4

0000000000017ed0 <gl_list_indexof_from@@Base>:
   17ed0:	stp	x29, x30, [sp, #-48]!
   17ed4:	stp	x20, x19, [sp, #32]
   17ed8:	ldr	x8, [x0]
   17edc:	str	x21, [sp, #16]
   17ee0:	mov	x29, sp
   17ee4:	mov	x19, x2
   17ee8:	ldr	x8, [x8, #16]
   17eec:	mov	x20, x0
   17ef0:	mov	x21, x1
   17ef4:	blr	x8
   17ef8:	ldr	x8, [x20]
   17efc:	mov	x2, x0
   17f00:	mov	x0, x20
   17f04:	mov	x1, x21
   17f08:	ldr	x4, [x8, #80]
   17f0c:	mov	x3, x19
   17f10:	ldp	x20, x19, [sp, #32]
   17f14:	ldr	x21, [sp, #16]
   17f18:	ldp	x29, x30, [sp], #48
   17f1c:	br	x4

0000000000017f20 <gl_list_indexof_from_to@@Base>:
   17f20:	ldr	x8, [x0]
   17f24:	ldr	x4, [x8, #80]
   17f28:	br	x4

0000000000017f2c <gl_list_nx_add_first@@Base>:
   17f2c:	ldr	x8, [x0]
   17f30:	ldr	x2, [x8, #88]
   17f34:	br	x2

0000000000017f38 <gl_list_nx_add_last@@Base>:
   17f38:	ldr	x8, [x0]
   17f3c:	ldr	x2, [x8, #96]
   17f40:	br	x2

0000000000017f44 <gl_list_nx_add_before@@Base>:
   17f44:	ldr	x8, [x0]
   17f48:	ldr	x3, [x8, #104]
   17f4c:	br	x3

0000000000017f50 <gl_list_nx_add_after@@Base>:
   17f50:	ldr	x8, [x0]
   17f54:	ldr	x3, [x8, #112]
   17f58:	br	x3

0000000000017f5c <gl_list_nx_add_at@@Base>:
   17f5c:	ldr	x8, [x0]
   17f60:	ldr	x3, [x8, #120]
   17f64:	br	x3

0000000000017f68 <gl_list_remove_node@@Base>:
   17f68:	ldr	x8, [x0]
   17f6c:	ldr	x2, [x8, #128]
   17f70:	br	x2

0000000000017f74 <gl_list_remove_at@@Base>:
   17f74:	ldr	x8, [x0]
   17f78:	ldr	x2, [x8, #136]
   17f7c:	br	x2

0000000000017f80 <gl_list_remove@@Base>:
   17f80:	ldr	x8, [x0]
   17f84:	ldr	x2, [x8, #144]
   17f88:	br	x2

0000000000017f8c <gl_list_free@@Base>:
   17f8c:	ldr	x8, [x0]
   17f90:	ldr	x1, [x8, #152]
   17f94:	br	x1

0000000000017f98 <gl_list_iterator@@Base>:
   17f98:	ldr	x9, [x0]
   17f9c:	ldr	x1, [x9, #160]
   17fa0:	br	x1

0000000000017fa4 <gl_list_iterator_from_to@@Base>:
   17fa4:	ldr	x9, [x0]
   17fa8:	ldr	x3, [x9, #168]
   17fac:	br	x3

0000000000017fb0 <gl_list_iterator_next@@Base>:
   17fb0:	ldr	x8, [x0]
   17fb4:	ldr	x3, [x8, #176]
   17fb8:	br	x3

0000000000017fbc <gl_list_iterator_free@@Base>:
   17fbc:	ldr	x8, [x0]
   17fc0:	ldr	x1, [x8, #184]
   17fc4:	br	x1

0000000000017fc8 <gl_sortedlist_search@@Base>:
   17fc8:	ldr	x8, [x0]
   17fcc:	ldr	x3, [x8, #192]
   17fd0:	br	x3

0000000000017fd4 <gl_sortedlist_search_from_to@@Base>:
   17fd4:	ldr	x8, [x0]
   17fd8:	ldr	x5, [x8, #200]
   17fdc:	br	x5

0000000000017fe0 <gl_sortedlist_indexof@@Base>:
   17fe0:	ldr	x8, [x0]
   17fe4:	ldr	x3, [x8, #208]
   17fe8:	br	x3

0000000000017fec <gl_sortedlist_indexof_from_to@@Base>:
   17fec:	ldr	x8, [x0]
   17ff0:	ldr	x5, [x8, #216]
   17ff4:	br	x5

0000000000017ff8 <gl_sortedlist_nx_add@@Base>:
   17ff8:	ldr	x8, [x0]
   17ffc:	ldr	x3, [x8, #224]
   18000:	br	x3

0000000000018004 <gl_sortedlist_remove@@Base>:
   18004:	ldr	x8, [x0]
   18008:	ldr	x3, [x8, #232]
   1800c:	br	x3

0000000000018010 <locale_charset@@Base>:
   18010:	stp	x29, x30, [sp, #-16]!
   18014:	mov	w0, #0xe                   	// #14
   18018:	mov	x29, sp
   1801c:	bl	a510 <nl_langinfo@plt>
   18020:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
   18024:	add	x8, x8, #0x9c
   18028:	cmp	x0, #0x0
   1802c:	csel	x8, x8, x0, eq  // eq = none
   18030:	ldrb	w9, [x8]
   18034:	adrp	x10, 2e000 <vasnprintf@@Base+0x24c>
   18038:	add	x10, x10, #0xecd
   1803c:	cmp	w9, #0x0
   18040:	csel	x0, x10, x8, eq  // eq = none
   18044:	ldp	x29, x30, [sp], #16
   18048:	ret

000000000001804c <glthread_rwlock_init_for_glibc@@Base>:
   1804c:	sub	sp, sp, #0x30
   18050:	stp	x20, x19, [sp, #32]
   18054:	mov	x19, x0
   18058:	add	x0, sp, #0x8
   1805c:	stp	x29, x30, [sp, #16]
   18060:	add	x29, sp, #0x10
   18064:	bl	a230 <pthread_rwlockattr_init@plt>
   18068:	mov	w20, w0
   1806c:	cbnz	w0, 1809c <glthread_rwlock_init_for_glibc@@Base+0x50>
   18070:	add	x0, sp, #0x8
   18074:	mov	w1, #0x2                   	// #2
   18078:	bl	a380 <pthread_rwlockattr_setkind_np@plt>
   1807c:	mov	w20, w0
   18080:	cbnz	w0, 18094 <glthread_rwlock_init_for_glibc@@Base+0x48>
   18084:	add	x1, sp, #0x8
   18088:	mov	x0, x19
   1808c:	bl	a360 <pthread_rwlock_init@plt>
   18090:	mov	w20, w0
   18094:	add	x0, sp, #0x8
   18098:	bl	ac90 <pthread_rwlockattr_destroy@plt>
   1809c:	mov	w0, w20
   180a0:	ldp	x20, x19, [sp, #32]
   180a4:	ldp	x29, x30, [sp, #16]
   180a8:	add	sp, sp, #0x30
   180ac:	ret

00000000000180b0 <glthread_recursive_lock_init_multithreaded@@Base>:
   180b0:	sub	sp, sp, #0x30
   180b4:	stp	x20, x19, [sp, #32]
   180b8:	mov	x19, x0
   180bc:	add	x0, sp, #0x8
   180c0:	stp	x29, x30, [sp, #16]
   180c4:	add	x29, sp, #0x10
   180c8:	bl	abe0 <pthread_mutexattr_init@plt>
   180cc:	mov	w20, w0
   180d0:	cbnz	w0, 18114 <glthread_recursive_lock_init_multithreaded@@Base+0x64>
   180d4:	add	x0, sp, #0x8
   180d8:	mov	w1, #0x1                   	// #1
   180dc:	bl	a2b0 <pthread_mutexattr_settype@plt>
   180e0:	cbz	w0, 180f4 <glthread_recursive_lock_init_multithreaded@@Base+0x44>
   180e4:	mov	w20, w0
   180e8:	add	x0, sp, #0x8
   180ec:	bl	ac30 <pthread_mutexattr_destroy@plt>
   180f0:	b	18114 <glthread_recursive_lock_init_multithreaded@@Base+0x64>
   180f4:	add	x1, sp, #0x8
   180f8:	mov	x0, x19
   180fc:	bl	a780 <pthread_mutex_init@plt>
   18100:	mov	w19, w0
   18104:	add	x0, sp, #0x8
   18108:	bl	ac30 <pthread_mutexattr_destroy@plt>
   1810c:	cmp	w19, #0x0
   18110:	csel	w20, w0, w19, eq  // eq = none
   18114:	mov	w0, w20
   18118:	ldp	x20, x19, [sp, #32]
   1811c:	ldp	x29, x30, [sp, #16]
   18120:	add	sp, sp, #0x30
   18124:	ret

0000000000018128 <glthread_once_singlethreaded@@Base>:
   18128:	ldrb	w8, [x0]
   1812c:	cbz	w8, 18138 <glthread_once_singlethreaded@@Base+0x10>
   18130:	mov	w0, wzr
   18134:	ret
   18138:	mov	w8, #0xff                  	// #255
   1813c:	strb	w8, [x0]
   18140:	mov	w0, #0x1                   	// #1
   18144:	ret

0000000000018148 <mmalloca@@Base>:
   18148:	stp	x29, x30, [sp, #-16]!
   1814c:	cmn	x0, #0x21
   18150:	mov	x29, sp
   18154:	b.hi	18184 <mmalloca@@Base+0x3c>  // b.pmore
   18158:	add	x0, x0, #0x20
   1815c:	bl	a540 <malloc@plt>
   18160:	cbz	x0, 1817c <mmalloca@@Base+0x34>
   18164:	add	x9, x0, #0x10
   18168:	and	x9, x9, #0xffffffffffffffe0
   1816c:	mov	x8, x0
   18170:	orr	x0, x9, #0x10
   18174:	sub	w8, w0, w8
   18178:	sturb	w8, [x0, #-1]
   1817c:	ldp	x29, x30, [sp], #16
   18180:	ret
   18184:	mov	x0, xzr
   18188:	ldp	x29, x30, [sp], #16
   1818c:	ret

0000000000018190 <freea@@Base>:
   18190:	stp	x29, x30, [sp, #-16]!
   18194:	tst	x0, #0xf
   18198:	mov	x29, sp
   1819c:	b.ne	181bc <freea@@Base+0x2c>  // b.any
   181a0:	tbnz	w0, #4, 181ac <freea@@Base+0x1c>
   181a4:	ldp	x29, x30, [sp], #16
   181a8:	ret
   181ac:	ldurb	w8, [x0, #-1]
   181b0:	sub	x0, x0, x8
   181b4:	ldp	x29, x30, [sp], #16
   181b8:	b	a960 <free@plt>
   181bc:	bl	a840 <abort@plt>

00000000000181c0 <gl_map_nx_create_empty@@Base>:
   181c0:	ldr	x5, [x0]
   181c4:	br	x5

00000000000181c8 <gl_map_size@@Base>:
   181c8:	ldr	x8, [x0]
   181cc:	ldr	x1, [x8, #8]
   181d0:	br	x1

00000000000181d4 <gl_map_search@@Base>:
   181d4:	ldr	x8, [x0]
   181d8:	ldr	x3, [x8, #16]
   181dc:	br	x3

00000000000181e0 <gl_map_nx_getput@@Base>:
   181e0:	ldr	x8, [x0]
   181e4:	ldr	x4, [x8, #24]
   181e8:	br	x4

00000000000181ec <gl_map_getremove@@Base>:
   181ec:	ldr	x8, [x0]
   181f0:	ldr	x3, [x8, #32]
   181f4:	br	x3

00000000000181f8 <gl_map_free@@Base>:
   181f8:	ldr	x8, [x0]
   181fc:	ldr	x1, [x8, #40]
   18200:	br	x1

0000000000018204 <gl_map_iterator@@Base>:
   18204:	ldr	x9, [x0]
   18208:	ldr	x1, [x9, #48]
   1820c:	br	x1

0000000000018210 <gl_map_iterator_next@@Base>:
   18210:	ldr	x8, [x0]
   18214:	ldr	x3, [x8, #56]
   18218:	br	x3

000000000001821c <gl_map_iterator_free@@Base>:
   1821c:	ldr	x8, [x0]
   18220:	ldr	x1, [x8, #64]
   18224:	br	x1

0000000000018228 <gl_map_get@@Base>:
   18228:	sub	sp, sp, #0x20
   1822c:	stp	x29, x30, [sp, #16]
   18230:	str	xzr, [sp, #8]
   18234:	ldr	x8, [x0]
   18238:	add	x2, sp, #0x8
   1823c:	add	x29, sp, #0x10
   18240:	ldr	x8, [x8, #16]
   18244:	blr	x8
   18248:	ldr	x0, [sp, #8]
   1824c:	ldp	x29, x30, [sp, #16]
   18250:	add	sp, sp, #0x20
   18254:	ret

0000000000018258 <gl_map_nx_put@@Base>:
   18258:	sub	sp, sp, #0x30
   1825c:	stp	x29, x30, [sp, #16]
   18260:	stp	x20, x19, [sp, #32]
   18264:	ldr	x8, [x0]
   18268:	add	x3, sp, #0x8
   1826c:	add	x29, sp, #0x10
   18270:	mov	x20, x0
   18274:	ldr	x8, [x8, #24]
   18278:	blr	x8
   1827c:	mov	w19, w0
   18280:	cbnz	w0, 18294 <gl_map_nx_put@@Base+0x3c>
   18284:	ldr	x8, [x20, #24]
   18288:	cbz	x8, 18294 <gl_map_nx_put@@Base+0x3c>
   1828c:	ldr	x0, [sp, #8]
   18290:	blr	x8
   18294:	mov	w0, w19
   18298:	ldp	x20, x19, [sp, #32]
   1829c:	ldp	x29, x30, [sp, #16]
   182a0:	add	sp, sp, #0x30
   182a4:	ret

00000000000182a8 <gl_map_remove@@Base>:
   182a8:	sub	sp, sp, #0x30
   182ac:	stp	x29, x30, [sp, #16]
   182b0:	stp	x20, x19, [sp, #32]
   182b4:	ldr	x8, [x0]
   182b8:	add	x2, sp, #0x8
   182bc:	add	x29, sp, #0x10
   182c0:	mov	x20, x0
   182c4:	ldr	x8, [x8, #32]
   182c8:	blr	x8
   182cc:	mov	w19, w0
   182d0:	tbz	w0, #0, 182e4 <gl_map_remove@@Base+0x3c>
   182d4:	ldr	x8, [x20, #24]
   182d8:	cbz	x8, 182e4 <gl_map_remove@@Base+0x3c>
   182dc:	ldr	x0, [sp, #8]
   182e0:	blr	x8
   182e4:	and	w0, w19, #0x1
   182e8:	ldp	x20, x19, [sp, #32]
   182ec:	ldp	x29, x30, [sp, #16]
   182f0:	add	sp, sp, #0x30
   182f4:	ret

00000000000182f8 <get_nonblocking_flag@@Base>:
   182f8:	stp	x29, x30, [sp, #-16]!
   182fc:	mov	w1, #0x3                   	// #3
   18300:	mov	w2, wzr
   18304:	mov	x29, sp
   18308:	bl	aae0 <fcntl@plt>
   1830c:	ubfx	w8, w0, #11, #1
   18310:	cmp	w0, #0x0
   18314:	csinv	w0, w8, wzr, ge  // ge = tcont
   18318:	ldp	x29, x30, [sp], #16
   1831c:	ret

0000000000018320 <set_nonblocking_flag@@Base>:
   18320:	stp	x29, x30, [sp, #-32]!
   18324:	stp	x20, x19, [sp, #16]
   18328:	mov	w20, w1
   1832c:	mov	w1, #0x3                   	// #3
   18330:	mov	w2, wzr
   18334:	mov	x29, sp
   18338:	mov	w19, w0
   1833c:	bl	aae0 <fcntl@plt>
   18340:	tbnz	w0, #31, 18370 <set_nonblocking_flag@@Base+0x50>
   18344:	eor	w8, w20, w0, lsr #11
   18348:	tbz	w8, #0, 18378 <set_nonblocking_flag@@Base+0x58>
   1834c:	orr	w8, w0, #0x800
   18350:	and	w9, w0, #0xfffff7ff
   18354:	tst	w20, #0x1
   18358:	mov	w0, w19
   1835c:	ldp	x20, x19, [sp, #16]
   18360:	csel	w2, w8, w9, ne  // ne = any
   18364:	mov	w1, #0x4                   	// #4
   18368:	ldp	x29, x30, [sp], #32
   1836c:	b	aae0 <fcntl@plt>
   18370:	mov	w0, #0xffffffff            	// #-1
   18374:	b	1837c <set_nonblocking_flag@@Base+0x5c>
   18378:	mov	w0, wzr
   1837c:	ldp	x20, x19, [sp, #16]
   18380:	ldp	x29, x30, [sp], #32
   18384:	ret

0000000000018388 <openat_save_fail@@Base>:
   18388:	stp	x29, x30, [sp, #-32]!
   1838c:	stp	x20, x19, [sp, #16]
   18390:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   18394:	ldr	x8, [x8, #3976]
   18398:	mov	w20, w0
   1839c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   183a0:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   183a4:	ldr	w19, [x8]
   183a8:	add	x0, x0, #0x387
   183ac:	add	x1, x1, #0xe78
   183b0:	mov	w2, #0x5                   	// #5
   183b4:	mov	x29, sp
   183b8:	bl	ac80 <dcgettext@plt>
   183bc:	mov	x2, x0
   183c0:	mov	w0, w19
   183c4:	mov	w1, w20
   183c8:	bl	a2a0 <error@plt>
   183cc:	bl	a840 <abort@plt>

00000000000183d0 <openat_restore_fail@@Base>:
   183d0:	stp	x29, x30, [sp, #-32]!
   183d4:	stp	x20, x19, [sp, #16]
   183d8:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   183dc:	ldr	x8, [x8, #3976]
   183e0:	mov	w20, w0
   183e4:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   183e8:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   183ec:	ldr	w19, [x8]
   183f0:	add	x0, x0, #0x387
   183f4:	add	x1, x1, #0xea3
   183f8:	mov	w2, #0x5                   	// #5
   183fc:	mov	x29, sp
   18400:	bl	ac80 <dcgettext@plt>
   18404:	mov	x2, x0
   18408:	mov	w0, w19
   1840c:	mov	w1, w20
   18410:	bl	a2a0 <error@plt>
   18414:	bl	a840 <abort@plt>

0000000000018418 <set_program_name@@Base>:
   18418:	stp	x29, x30, [sp, #-32]!
   1841c:	stp	x20, x19, [sp, #16]
   18420:	mov	x29, sp
   18424:	cbz	x0, 184b0 <set_program_name@@Base+0x98>
   18428:	mov	w1, #0x2f                  	// #47
   1842c:	mov	x19, x0
   18430:	bl	a7c0 <strrchr@plt>
   18434:	cmp	x0, #0x0
   18438:	csinc	x20, x19, x0, eq  // eq = none
   1843c:	sub	x8, x20, x19
   18440:	cmp	x8, #0x7
   18444:	b.lt	1848c <set_program_name@@Base+0x74>  // b.tstop
   18448:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1844c:	sub	x0, x20, #0x7
   18450:	add	x1, x1, #0xf09
   18454:	mov	w2, #0x7                   	// #7
   18458:	bl	a600 <strncmp@plt>
   1845c:	cbnz	w0, 1848c <set_program_name@@Base+0x74>
   18460:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   18464:	add	x1, x1, #0xf11
   18468:	mov	w2, #0x3                   	// #3
   1846c:	mov	x0, x20
   18470:	bl	a600 <strncmp@plt>
   18474:	mov	x19, x20
   18478:	cbnz	w0, 1848c <set_program_name@@Base+0x74>
   1847c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   18480:	ldr	x8, [x8, #4008]
   18484:	add	x19, x20, #0x3
   18488:	str	x19, [x8]
   1848c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   18490:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   18494:	ldr	x8, [x8, #3992]
   18498:	ldr	x9, [x9, #3768]
   1849c:	str	x19, [x8]
   184a0:	str	x19, [x9]
   184a4:	ldp	x20, x19, [sp, #16]
   184a8:	ldp	x29, x30, [sp], #32
   184ac:	ret
   184b0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   184b4:	ldr	x8, [x8, #3816]
   184b8:	adrp	x0, 30000 <vasnprintf@@Base+0x224c>
   184bc:	add	x0, x0, #0xed1
   184c0:	mov	w1, #0x37                  	// #55
   184c4:	ldr	x3, [x8]
   184c8:	mov	w2, #0x1                   	// #1
   184cc:	bl	aab0 <fwrite@plt>
   184d0:	bl	a840 <abort@plt>

00000000000184d4 <gl_rbtree_list_check_invariants@@Base>:
   184d4:	ldr	x0, [x0, #40]
   184d8:	cbz	x0, 184e4 <gl_rbtree_list_check_invariants@@Base+0x10>
   184dc:	mov	x1, xzr
   184e0:	b	184e8 <gl_rbtree_list_check_invariants@@Base+0x14>
   184e4:	ret
   184e8:	stp	x29, x30, [sp, #-48]!
   184ec:	stp	x20, x19, [sp, #32]
   184f0:	str	x21, [sp, #16]
   184f4:	mov	x21, x0
   184f8:	ldr	x0, [x0]
   184fc:	mov	x20, x1
   18500:	mov	x29, sp
   18504:	cbz	x0, 18590 <gl_rbtree_list_check_invariants@@Base+0xbc>
   18508:	mov	x1, x21
   1850c:	bl	184e8 <gl_rbtree_list_check_invariants@@Base+0x14>
   18510:	mov	w19, w0
   18514:	ldr	x0, [x21, #8]
   18518:	cbz	x0, 18524 <gl_rbtree_list_check_invariants@@Base+0x50>
   1851c:	mov	x1, x21
   18520:	bl	184e8 <gl_rbtree_list_check_invariants@@Base+0x14>
   18524:	ldr	x8, [x21, #16]
   18528:	cmp	x8, x20
   1852c:	b.ne	185b0 <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.any
   18530:	ldr	x9, [x21]
   18534:	ldr	x8, [x21, #32]
   18538:	cbz	x9, 185a0 <gl_rbtree_list_check_invariants@@Base+0xcc>
   1853c:	ldr	x9, [x9, #32]
   18540:	add	x9, x9, #0x1
   18544:	ldr	x10, [x21, #8]
   18548:	cbz	x10, 18550 <gl_rbtree_list_check_invariants@@Base+0x7c>
   1854c:	ldr	x10, [x10, #32]
   18550:	add	x9, x10, x9
   18554:	cmp	x8, x9
   18558:	b.ne	185b0 <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.any
   1855c:	ldr	w8, [x21, #24]
   18560:	cmp	w8, #0x2
   18564:	b.cs	185b0 <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.hs, b.nlast
   18568:	cbnz	x20, 18570 <gl_rbtree_list_check_invariants@@Base+0x9c>
   1856c:	cbnz	w8, 185b0 <gl_rbtree_list_check_invariants@@Base+0xdc>
   18570:	cmp	w19, w0
   18574:	b.ne	185b0 <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.any
   18578:	cmp	w8, #0x0
   1857c:	cinc	w0, w19, eq  // eq = none
   18580:	ldp	x20, x19, [sp, #32]
   18584:	ldr	x21, [sp, #16]
   18588:	ldp	x29, x30, [sp], #48
   1858c:	ret
   18590:	mov	w19, wzr
   18594:	ldr	x0, [x21, #8]
   18598:	cbnz	x0, 1851c <gl_rbtree_list_check_invariants@@Base+0x48>
   1859c:	b	18524 <gl_rbtree_list_check_invariants@@Base+0x50>
   185a0:	mov	w9, #0x1                   	// #1
   185a4:	ldr	x10, [x21, #8]
   185a8:	cbnz	x10, 1854c <gl_rbtree_list_check_invariants@@Base+0x78>
   185ac:	b	18550 <gl_rbtree_list_check_invariants@@Base+0x7c>
   185b0:	bl	a840 <abort@plt>
   185b4:	stp	x29, x30, [sp, #-64]!
   185b8:	str	x23, [sp, #16]
   185bc:	mov	x23, x0
   185c0:	mov	w0, #0x30                  	// #48
   185c4:	stp	x22, x21, [sp, #32]
   185c8:	stp	x20, x19, [sp, #48]
   185cc:	mov	x29, sp
   185d0:	mov	w21, w4
   185d4:	mov	x19, x3
   185d8:	mov	x20, x2
   185dc:	mov	x22, x1
   185e0:	bl	a540 <malloc@plt>
   185e4:	cbz	x0, 185fc <gl_rbtree_list_check_invariants@@Base+0x128>
   185e8:	and	w8, w21, #0x1
   185ec:	stp	x23, x22, [x0]
   185f0:	stp	x20, x19, [x0, #16]
   185f4:	strb	w8, [x0, #32]
   185f8:	str	xzr, [x0, #40]
   185fc:	ldp	x20, x19, [sp, #48]
   18600:	ldp	x22, x21, [sp, #32]
   18604:	ldr	x23, [sp, #16]
   18608:	ldp	x29, x30, [sp], #64
   1860c:	ret
   18610:	stp	x29, x30, [sp, #-80]!
   18614:	stp	x26, x25, [sp, #16]
   18618:	mov	x26, x0
   1861c:	mov	w0, #0x30                  	// #48
   18620:	stp	x24, x23, [sp, #32]
   18624:	stp	x22, x21, [sp, #48]
   18628:	stp	x20, x19, [sp, #64]
   1862c:	mov	x29, sp
   18630:	mov	x20, x6
   18634:	mov	x21, x5
   18638:	mov	w24, w4
   1863c:	mov	x22, x3
   18640:	mov	x23, x2
   18644:	mov	x25, x1
   18648:	bl	a540 <malloc@plt>
   1864c:	mov	x19, x0
   18650:	cbz	x0, 186c0 <gl_rbtree_list_check_invariants@@Base+0x1ec>
   18654:	and	w8, w24, #0x1
   18658:	stp	x26, x25, [x19]
   1865c:	stp	x23, x22, [x19, #16]
   18660:	strb	w8, [x19, #32]
   18664:	cbz	x21, 1868c <gl_rbtree_list_check_invariants@@Base+0x1b8>
   18668:	add	x8, x21, #0x1
   1866c:	cmp	x8, #0x2
   18670:	b.cc	18694 <gl_rbtree_list_check_invariants@@Base+0x1c0>  // b.lo, b.ul, b.last
   18674:	mov	w0, wzr
   18678:	cmp	x8, #0x3
   1867c:	lsr	x8, x8, #1
   18680:	add	w0, w0, #0x1
   18684:	b.hi	18678 <gl_rbtree_list_check_invariants@@Base+0x1a4>  // b.pmore
   18688:	b	18698 <gl_rbtree_list_check_invariants@@Base+0x1c4>
   1868c:	str	xzr, [x19, #40]
   18690:	b	186c0 <gl_rbtree_list_check_invariants@@Base+0x1ec>
   18694:	mov	w0, wzr
   18698:	mov	x1, x21
   1869c:	mov	x2, x20
   186a0:	bl	19ba0 <gl_rbtree_list_check_invariants@@Base+0x16cc>
   186a4:	str	x0, [x19, #40]
   186a8:	cbz	x0, 186b4 <gl_rbtree_list_check_invariants@@Base+0x1e0>
   186ac:	str	xzr, [x0, #16]
   186b0:	b	186c0 <gl_rbtree_list_check_invariants@@Base+0x1ec>
   186b4:	mov	x0, x19
   186b8:	bl	a960 <free@plt>
   186bc:	mov	x19, xzr
   186c0:	mov	x0, x19
   186c4:	ldp	x20, x19, [sp, #64]
   186c8:	ldp	x22, x21, [sp, #48]
   186cc:	ldp	x24, x23, [sp, #32]
   186d0:	ldp	x26, x25, [sp, #16]
   186d4:	ldp	x29, x30, [sp], #80
   186d8:	ret
   186dc:	ldr	x8, [x0, #40]
   186e0:	cbz	x8, 186ec <gl_rbtree_list_check_invariants@@Base+0x218>
   186e4:	ldr	x0, [x8, #32]
   186e8:	ret
   186ec:	mov	x0, xzr
   186f0:	ret
   186f4:	ldr	x0, [x1, #40]
   186f8:	ret
   186fc:	mov	w0, wzr
   18700:	str	x2, [x1, #40]
   18704:	ret
   18708:	ldr	x8, [x1, #8]
   1870c:	cbz	x8, 18720 <gl_rbtree_list_check_invariants@@Base+0x24c>
   18710:	mov	x0, x8
   18714:	ldr	x8, [x8]
   18718:	cbnz	x8, 18710 <gl_rbtree_list_check_invariants@@Base+0x23c>
   1871c:	b	18738 <gl_rbtree_list_check_invariants@@Base+0x264>
   18720:	ldr	x0, [x1, #16]
   18724:	cbz	x0, 18738 <gl_rbtree_list_check_invariants@@Base+0x264>
   18728:	ldr	x8, [x0, #8]
   1872c:	cmp	x8, x1
   18730:	mov	x1, x0
   18734:	b.eq	18720 <gl_rbtree_list_check_invariants@@Base+0x24c>  // b.none
   18738:	ret
   1873c:	ldr	x8, [x1]
   18740:	cbz	x8, 18754 <gl_rbtree_list_check_invariants@@Base+0x280>
   18744:	mov	x0, x8
   18748:	ldr	x8, [x8, #8]
   1874c:	cbnz	x8, 18744 <gl_rbtree_list_check_invariants@@Base+0x270>
   18750:	b	1876c <gl_rbtree_list_check_invariants@@Base+0x298>
   18754:	ldr	x0, [x1, #16]
   18758:	cbz	x0, 1876c <gl_rbtree_list_check_invariants@@Base+0x298>
   1875c:	ldr	x8, [x0]
   18760:	cmp	x8, x1
   18764:	mov	x1, x0
   18768:	b.eq	18754 <gl_rbtree_list_check_invariants@@Base+0x280>  // b.none
   1876c:	ret
   18770:	stp	x29, x30, [sp, #-16]!
   18774:	ldr	x8, [x0, #40]
   18778:	mov	x29, sp
   1877c:	cbz	x8, 187c4 <gl_rbtree_list_check_invariants@@Base+0x2f0>
   18780:	ldr	x9, [x8, #32]
   18784:	cmp	x9, x1
   18788:	b.ls	187c4 <gl_rbtree_list_check_invariants@@Base+0x2f0>  // b.plast
   1878c:	mov	x9, x8
   18790:	ldr	x8, [x8]
   18794:	cbz	x8, 187a8 <gl_rbtree_list_check_invariants@@Base+0x2d4>
   18798:	ldr	x10, [x8, #32]
   1879c:	subs	x10, x1, x10
   187a0:	b.cc	1878c <gl_rbtree_list_check_invariants@@Base+0x2b8>  // b.lo, b.ul, b.last
   187a4:	mov	x1, x10
   187a8:	cbz	x1, 187b8 <gl_rbtree_list_check_invariants@@Base+0x2e4>
   187ac:	ldr	x8, [x9, #8]
   187b0:	sub	x1, x1, #0x1
   187b4:	b	1878c <gl_rbtree_list_check_invariants@@Base+0x2b8>
   187b8:	ldr	x0, [x9, #40]
   187bc:	ldp	x29, x30, [sp], #16
   187c0:	ret
   187c4:	bl	a840 <abort@plt>
   187c8:	stp	x29, x30, [sp, #-16]!
   187cc:	ldr	x8, [x0, #40]
   187d0:	mov	x29, sp
   187d4:	cbz	x8, 1881c <gl_rbtree_list_check_invariants@@Base+0x348>
   187d8:	ldr	x9, [x8, #32]
   187dc:	cmp	x9, x1
   187e0:	b.ls	1881c <gl_rbtree_list_check_invariants@@Base+0x348>  // b.plast
   187e4:	mov	x0, x8
   187e8:	ldr	x8, [x8]
   187ec:	cbz	x8, 18800 <gl_rbtree_list_check_invariants@@Base+0x32c>
   187f0:	ldr	x9, [x8, #32]
   187f4:	subs	x9, x1, x9
   187f8:	b.cc	187e4 <gl_rbtree_list_check_invariants@@Base+0x310>  // b.lo, b.ul, b.last
   187fc:	mov	x1, x9
   18800:	cbz	x1, 18810 <gl_rbtree_list_check_invariants@@Base+0x33c>
   18804:	ldr	x8, [x0, #8]
   18808:	sub	x1, x1, #0x1
   1880c:	b	187e4 <gl_rbtree_list_check_invariants@@Base+0x310>
   18810:	str	x2, [x0, #40]
   18814:	ldp	x29, x30, [sp], #16
   18818:	ret
   1881c:	bl	a840 <abort@plt>
   18820:	stp	x29, x30, [sp, #-96]!
   18824:	stp	x28, x27, [sp, #16]
   18828:	stp	x26, x25, [sp, #32]
   1882c:	stp	x24, x23, [sp, #48]
   18830:	stp	x22, x21, [sp, #64]
   18834:	stp	x20, x19, [sp, #80]
   18838:	mov	x29, sp
   1883c:	sub	sp, sp, #0x750
   18840:	cmp	x1, x2
   18844:	b.hi	1893c <gl_rbtree_list_check_invariants@@Base+0x468>  // b.pmore
   18848:	ldr	x8, [x0, #40]
   1884c:	mov	x19, x3
   18850:	mov	x20, x2
   18854:	cbz	x8, 18930 <gl_rbtree_list_check_invariants@@Base+0x45c>
   18858:	ldr	x9, [x8, #32]
   1885c:	cmp	x9, x20
   18860:	b.cc	1893c <gl_rbtree_list_check_invariants@@Base+0x468>  // b.lo, b.ul, b.last
   18864:	ldr	x22, [x0, #8]
   18868:	cbz	x1, 18940 <gl_rbtree_list_check_invariants@@Base+0x46c>
   1886c:	add	x9, sp, #0x8
   18870:	mov	x23, xzr
   18874:	mov	x24, xzr
   18878:	add	x25, x9, #0x8
   1887c:	sub	x26, x9, #0x8
   18880:	cbz	x8, 188a8 <gl_rbtree_list_check_invariants@@Base+0x3d4>
   18884:	add	x9, x25, x23, lsl #4
   18888:	ldr	x10, [x8, #32]
   1888c:	cmp	x10, x1
   18890:	b.ls	188a8 <gl_rbtree_list_check_invariants@@Base+0x3d4>  // b.plast
   18894:	stp	x8, xzr, [x9, #-8]
   18898:	ldr	x8, [x8]
   1889c:	add	x23, x23, #0x1
   188a0:	add	x9, x9, #0x10
   188a4:	cbnz	x8, 18888 <gl_rbtree_list_check_invariants@@Base+0x3b4>
   188a8:	cbz	x23, 189d4 <gl_rbtree_list_check_invariants@@Base+0x500>
   188ac:	add	x27, x26, x23, lsl #4
   188b0:	ldr	x8, [x27]
   188b4:	cbz	x8, 188cc <gl_rbtree_list_check_invariants@@Base+0x3f8>
   188b8:	sub	x23, x23, #0x1
   188bc:	add	x1, x8, x1
   188c0:	sub	x27, x27, #0x10
   188c4:	cbnz	x23, 188b0 <gl_rbtree_list_check_invariants@@Base+0x3dc>
   188c8:	b	189d4 <gl_rbtree_list_check_invariants@@Base+0x500>
   188cc:	ldur	x21, [x27, #-8]
   188d0:	ldr	x8, [x21]
   188d4:	cbz	x8, 188dc <gl_rbtree_list_check_invariants@@Base+0x408>
   188d8:	ldr	x8, [x8, #32]
   188dc:	add	x28, x8, #0x1
   188e0:	cmp	x1, x28
   188e4:	b.cs	18910 <gl_rbtree_list_check_invariants@@Base+0x43c>  // b.hs, b.nlast
   188e8:	ldr	x1, [x21, #40]
   188ec:	cbz	x22, 18904 <gl_rbtree_list_check_invariants@@Base+0x430>
   188f0:	mov	x0, x19
   188f4:	blr	x22
   188f8:	mov	x1, x28
   188fc:	tbz	w0, #0, 18910 <gl_rbtree_list_check_invariants@@Base+0x43c>
   18900:	b	189d8 <gl_rbtree_list_check_invariants@@Base+0x504>
   18904:	cmp	x1, x19
   18908:	mov	x1, x28
   1890c:	b.eq	189d8 <gl_rbtree_list_check_invariants@@Base+0x504>  // b.none
   18910:	add	x24, x24, #0x1
   18914:	cmp	x24, x20
   18918:	b.cs	189d4 <gl_rbtree_list_check_invariants@@Base+0x500>  // b.hs, b.nlast
   1891c:	str	x28, [x27]
   18920:	ldr	x8, [x21, #8]
   18924:	sub	x1, x1, x28
   18928:	cbnz	x8, 18884 <gl_rbtree_list_check_invariants@@Base+0x3b0>
   1892c:	b	188a8 <gl_rbtree_list_check_invariants@@Base+0x3d4>
   18930:	mov	x9, xzr
   18934:	cmp	x9, x20
   18938:	b.cs	18864 <gl_rbtree_list_check_invariants@@Base+0x390>  // b.hs, b.nlast
   1893c:	bl	a840 <abort@plt>
   18940:	add	x24, sp, #0x8
   18944:	mov	x26, xzr
   18948:	mov	x23, xzr
   1894c:	add	x25, x24, #0x8
   18950:	mov	w27, #0x1                   	// #1
   18954:	cbz	x8, 18970 <gl_rbtree_list_check_invariants@@Base+0x49c>
   18958:	add	x9, x25, x26, lsl #4
   1895c:	stp	x8, xzr, [x9, #-8]
   18960:	ldr	x8, [x8]
   18964:	add	x26, x26, #0x1
   18968:	add	x9, x9, #0x10
   1896c:	cbnz	x8, 1895c <gl_rbtree_list_check_invariants@@Base+0x488>
   18970:	add	x9, x26, #0x1
   18974:	add	x8, x24, x26, lsl #4
   18978:	mov	x26, x9
   1897c:	sub	x26, x26, #0x1
   18980:	cbz	x26, 189d4 <gl_rbtree_list_check_invariants@@Base+0x500>
   18984:	ldur	x9, [x8, #-8]
   18988:	sub	x28, x8, #0x10
   1898c:	mov	x8, x28
   18990:	cbnz	x9, 1897c <gl_rbtree_list_check_invariants@@Base+0x4a8>
   18994:	ldr	x21, [x28]
   18998:	ldr	x1, [x21, #40]
   1899c:	cbz	x22, 189b0 <gl_rbtree_list_check_invariants@@Base+0x4dc>
   189a0:	mov	x0, x19
   189a4:	blr	x22
   189a8:	tbz	w0, #0, 189b8 <gl_rbtree_list_check_invariants@@Base+0x4e4>
   189ac:	b	189d8 <gl_rbtree_list_check_invariants@@Base+0x504>
   189b0:	cmp	x1, x19
   189b4:	b.eq	189d8 <gl_rbtree_list_check_invariants@@Base+0x504>  // b.none
   189b8:	add	x23, x23, #0x1
   189bc:	cmp	x23, x20
   189c0:	b.cs	189d4 <gl_rbtree_list_check_invariants@@Base+0x500>  // b.hs, b.nlast
   189c4:	str	x27, [x28, #8]
   189c8:	ldr	x8, [x21, #8]
   189cc:	cbnz	x8, 18958 <gl_rbtree_list_check_invariants@@Base+0x484>
   189d0:	b	18970 <gl_rbtree_list_check_invariants@@Base+0x49c>
   189d4:	mov	x21, xzr
   189d8:	mov	x0, x21
   189dc:	add	sp, sp, #0x750
   189e0:	ldp	x20, x19, [sp, #80]
   189e4:	ldp	x22, x21, [sp, #64]
   189e8:	ldp	x24, x23, [sp, #48]
   189ec:	ldp	x26, x25, [sp, #32]
   189f0:	ldp	x28, x27, [sp, #16]
   189f4:	ldp	x29, x30, [sp], #96
   189f8:	ret
   189fc:	stp	x29, x30, [sp, #-96]!
   18a00:	stp	x28, x27, [sp, #16]
   18a04:	stp	x26, x25, [sp, #32]
   18a08:	stp	x24, x23, [sp, #48]
   18a0c:	stp	x22, x21, [sp, #64]
   18a10:	stp	x20, x19, [sp, #80]
   18a14:	mov	x29, sp
   18a18:	sub	sp, sp, #0x750
   18a1c:	cmp	x1, x2
   18a20:	b.hi	18b18 <gl_rbtree_list_check_invariants@@Base+0x644>  // b.pmore
   18a24:	ldr	x8, [x0, #40]
   18a28:	mov	x20, x3
   18a2c:	mov	x21, x2
   18a30:	cbz	x8, 18b0c <gl_rbtree_list_check_invariants@@Base+0x638>
   18a34:	ldr	x9, [x8, #32]
   18a38:	cmp	x9, x21
   18a3c:	b.cc	18b18 <gl_rbtree_list_check_invariants@@Base+0x644>  // b.lo, b.ul, b.last
   18a40:	ldr	x22, [x0, #8]
   18a44:	cbz	x1, 18b1c <gl_rbtree_list_check_invariants@@Base+0x648>
   18a48:	add	x9, sp, #0x8
   18a4c:	mov	x23, xzr
   18a50:	mov	x19, xzr
   18a54:	add	x24, x9, #0x8
   18a58:	sub	x25, x9, #0x8
   18a5c:	cbz	x8, 18a84 <gl_rbtree_list_check_invariants@@Base+0x5b0>
   18a60:	add	x9, x24, x23, lsl #4
   18a64:	ldr	x10, [x8, #32]
   18a68:	cmp	x10, x1
   18a6c:	b.ls	18a84 <gl_rbtree_list_check_invariants@@Base+0x5b0>  // b.plast
   18a70:	stp	x8, xzr, [x9, #-8]
   18a74:	ldr	x8, [x8]
   18a78:	add	x23, x23, #0x1
   18a7c:	add	x9, x9, #0x10
   18a80:	cbnz	x8, 18a64 <gl_rbtree_list_check_invariants@@Base+0x590>
   18a84:	cbz	x23, 18bb0 <gl_rbtree_list_check_invariants@@Base+0x6dc>
   18a88:	add	x26, x25, x23, lsl #4
   18a8c:	ldr	x8, [x26]
   18a90:	cbz	x8, 18aa8 <gl_rbtree_list_check_invariants@@Base+0x5d4>
   18a94:	sub	x23, x23, #0x1
   18a98:	add	x1, x8, x1
   18a9c:	sub	x26, x26, #0x10
   18aa0:	cbnz	x23, 18a8c <gl_rbtree_list_check_invariants@@Base+0x5b8>
   18aa4:	b	18bb0 <gl_rbtree_list_check_invariants@@Base+0x6dc>
   18aa8:	ldur	x27, [x26, #-8]
   18aac:	ldr	x8, [x27]
   18ab0:	cbz	x8, 18ab8 <gl_rbtree_list_check_invariants@@Base+0x5e4>
   18ab4:	ldr	x8, [x8, #32]
   18ab8:	add	x28, x8, #0x1
   18abc:	cmp	x1, x28
   18ac0:	b.cs	18aec <gl_rbtree_list_check_invariants@@Base+0x618>  // b.hs, b.nlast
   18ac4:	ldr	x1, [x27, #40]
   18ac8:	cbz	x22, 18ae0 <gl_rbtree_list_check_invariants@@Base+0x60c>
   18acc:	mov	x0, x20
   18ad0:	blr	x22
   18ad4:	mov	x1, x28
   18ad8:	tbz	w0, #0, 18aec <gl_rbtree_list_check_invariants@@Base+0x618>
   18adc:	b	18bb4 <gl_rbtree_list_check_invariants@@Base+0x6e0>
   18ae0:	cmp	x1, x20
   18ae4:	mov	x1, x28
   18ae8:	b.eq	18bb4 <gl_rbtree_list_check_invariants@@Base+0x6e0>  // b.none
   18aec:	add	x19, x19, #0x1
   18af0:	cmp	x19, x21
   18af4:	b.cs	18bb0 <gl_rbtree_list_check_invariants@@Base+0x6dc>  // b.hs, b.nlast
   18af8:	str	x28, [x26]
   18afc:	ldr	x8, [x27, #8]
   18b00:	sub	x1, x1, x28
   18b04:	cbnz	x8, 18a60 <gl_rbtree_list_check_invariants@@Base+0x58c>
   18b08:	b	18a84 <gl_rbtree_list_check_invariants@@Base+0x5b0>
   18b0c:	mov	x9, xzr
   18b10:	cmp	x9, x21
   18b14:	b.cs	18a40 <gl_rbtree_list_check_invariants@@Base+0x56c>  // b.hs, b.nlast
   18b18:	bl	a840 <abort@plt>
   18b1c:	add	x23, sp, #0x8
   18b20:	mov	x25, xzr
   18b24:	mov	x19, xzr
   18b28:	add	x24, x23, #0x8
   18b2c:	mov	w26, #0x1                   	// #1
   18b30:	cbz	x8, 18b4c <gl_rbtree_list_check_invariants@@Base+0x678>
   18b34:	add	x9, x24, x25, lsl #4
   18b38:	stp	x8, xzr, [x9, #-8]
   18b3c:	ldr	x8, [x8]
   18b40:	add	x25, x25, #0x1
   18b44:	add	x9, x9, #0x10
   18b48:	cbnz	x8, 18b38 <gl_rbtree_list_check_invariants@@Base+0x664>
   18b4c:	add	x9, x25, #0x1
   18b50:	add	x8, x23, x25, lsl #4
   18b54:	mov	x25, x9
   18b58:	sub	x25, x25, #0x1
   18b5c:	cbz	x25, 18bb0 <gl_rbtree_list_check_invariants@@Base+0x6dc>
   18b60:	ldur	x9, [x8, #-8]
   18b64:	sub	x27, x8, #0x10
   18b68:	mov	x8, x27
   18b6c:	cbnz	x9, 18b58 <gl_rbtree_list_check_invariants@@Base+0x684>
   18b70:	ldr	x28, [x27]
   18b74:	ldr	x1, [x28, #40]
   18b78:	cbz	x22, 18b8c <gl_rbtree_list_check_invariants@@Base+0x6b8>
   18b7c:	mov	x0, x20
   18b80:	blr	x22
   18b84:	tbz	w0, #0, 18b94 <gl_rbtree_list_check_invariants@@Base+0x6c0>
   18b88:	b	18bb4 <gl_rbtree_list_check_invariants@@Base+0x6e0>
   18b8c:	cmp	x1, x20
   18b90:	b.eq	18bb4 <gl_rbtree_list_check_invariants@@Base+0x6e0>  // b.none
   18b94:	add	x19, x19, #0x1
   18b98:	cmp	x19, x21
   18b9c:	b.cs	18bb0 <gl_rbtree_list_check_invariants@@Base+0x6dc>  // b.hs, b.nlast
   18ba0:	str	x26, [x27, #8]
   18ba4:	ldr	x8, [x28, #8]
   18ba8:	cbnz	x8, 18b34 <gl_rbtree_list_check_invariants@@Base+0x660>
   18bac:	b	18b4c <gl_rbtree_list_check_invariants@@Base+0x678>
   18bb0:	mov	x19, #0xffffffffffffffff    	// #-1
   18bb4:	mov	x0, x19
   18bb8:	add	sp, sp, #0x750
   18bbc:	ldp	x20, x19, [sp, #80]
   18bc0:	ldp	x22, x21, [sp, #64]
   18bc4:	ldp	x24, x23, [sp, #48]
   18bc8:	ldp	x26, x25, [sp, #32]
   18bcc:	ldp	x28, x27, [sp, #16]
   18bd0:	ldp	x29, x30, [sp], #96
   18bd4:	ret
   18bd8:	stp	x29, x30, [sp, #-48]!
   18bdc:	stp	x20, x19, [sp, #32]
   18be0:	mov	x20, x0
   18be4:	mov	w0, #0x30                  	// #48
   18be8:	str	x21, [sp, #16]
   18bec:	mov	x29, sp
   18bf0:	mov	x21, x1
   18bf4:	bl	a540 <malloc@plt>
   18bf8:	mov	x19, x0
   18bfc:	cbz	x0, 18c5c <gl_rbtree_list_check_invariants@@Base+0x788>
   18c00:	mov	w8, #0x1                   	// #1
   18c04:	stp	xzr, xzr, [x19]
   18c08:	stp	x8, x21, [x19, #32]
   18c0c:	ldr	x8, [x20, #40]
   18c10:	cbz	x8, 18c50 <gl_rbtree_list_check_invariants@@Base+0x77c>
   18c14:	mov	x2, x8
   18c18:	ldr	x8, [x8]
   18c1c:	cbnz	x8, 18c14 <gl_rbtree_list_check_invariants@@Base+0x740>
   18c20:	mov	x8, x2
   18c24:	str	x19, [x2]
   18c28:	str	x2, [x19, #16]
   18c2c:	ldr	x9, [x8, #32]
   18c30:	add	x9, x9, #0x1
   18c34:	str	x9, [x8, #32]
   18c38:	ldr	x8, [x8, #16]
   18c3c:	cbnz	x8, 18c2c <gl_rbtree_list_check_invariants@@Base+0x758>
   18c40:	mov	x0, x20
   18c44:	mov	x1, x19
   18c48:	bl	19cb0 <gl_rbtree_list_check_invariants@@Base+0x17dc>
   18c4c:	b	18c5c <gl_rbtree_list_check_invariants@@Base+0x788>
   18c50:	str	wzr, [x19, #24]
   18c54:	str	x19, [x20, #40]
   18c58:	str	xzr, [x19, #16]
   18c5c:	mov	x0, x19
   18c60:	ldp	x20, x19, [sp, #32]
   18c64:	ldr	x21, [sp, #16]
   18c68:	ldp	x29, x30, [sp], #48
   18c6c:	ret
   18c70:	stp	x29, x30, [sp, #-48]!
   18c74:	stp	x20, x19, [sp, #32]
   18c78:	mov	x20, x0
   18c7c:	mov	w0, #0x30                  	// #48
   18c80:	str	x21, [sp, #16]
   18c84:	mov	x29, sp
   18c88:	mov	x21, x1
   18c8c:	bl	a540 <malloc@plt>
   18c90:	mov	x19, x0
   18c94:	cbz	x0, 18cf4 <gl_rbtree_list_check_invariants@@Base+0x820>
   18c98:	mov	w8, #0x1                   	// #1
   18c9c:	stp	xzr, xzr, [x19]
   18ca0:	stp	x8, x21, [x19, #32]
   18ca4:	ldr	x8, [x20, #40]
   18ca8:	cbz	x8, 18ce8 <gl_rbtree_list_check_invariants@@Base+0x814>
   18cac:	mov	x2, x8
   18cb0:	ldr	x8, [x8, #8]
   18cb4:	cbnz	x8, 18cac <gl_rbtree_list_check_invariants@@Base+0x7d8>
   18cb8:	mov	x8, x2
   18cbc:	str	x19, [x2, #8]
   18cc0:	str	x2, [x19, #16]
   18cc4:	ldr	x9, [x8, #32]
   18cc8:	add	x9, x9, #0x1
   18ccc:	str	x9, [x8, #32]
   18cd0:	ldr	x8, [x8, #16]
   18cd4:	cbnz	x8, 18cc4 <gl_rbtree_list_check_invariants@@Base+0x7f0>
   18cd8:	mov	x0, x20
   18cdc:	mov	x1, x19
   18ce0:	bl	19cb0 <gl_rbtree_list_check_invariants@@Base+0x17dc>
   18ce4:	b	18cf4 <gl_rbtree_list_check_invariants@@Base+0x820>
   18ce8:	str	wzr, [x19, #24]
   18cec:	str	x19, [x20, #40]
   18cf0:	str	xzr, [x19, #16]
   18cf4:	mov	x0, x19
   18cf8:	ldp	x20, x19, [sp, #32]
   18cfc:	ldr	x21, [sp, #16]
   18d00:	ldp	x29, x30, [sp], #48
   18d04:	ret
   18d08:	stp	x29, x30, [sp, #-48]!
   18d0c:	stp	x20, x19, [sp, #32]
   18d10:	mov	x20, x0
   18d14:	mov	w0, #0x30                  	// #48
   18d18:	stp	x22, x21, [sp, #16]
   18d1c:	mov	x29, sp
   18d20:	mov	x22, x2
   18d24:	mov	x21, x1
   18d28:	bl	a540 <malloc@plt>
   18d2c:	mov	x19, x0
   18d30:	cbz	x0, 18d90 <gl_rbtree_list_check_invariants@@Base+0x8bc>
   18d34:	mov	w8, #0x1                   	// #1
   18d38:	stp	xzr, xzr, [x19]
   18d3c:	stp	x8, x22, [x19, #32]
   18d40:	ldr	x8, [x21]
   18d44:	cbz	x8, 18d5c <gl_rbtree_list_check_invariants@@Base+0x888>
   18d48:	mov	x21, x8
   18d4c:	ldr	x8, [x8, #8]
   18d50:	cbnz	x8, 18d48 <gl_rbtree_list_check_invariants@@Base+0x874>
   18d54:	add	x8, x21, #0x8
   18d58:	b	18d60 <gl_rbtree_list_check_invariants@@Base+0x88c>
   18d5c:	mov	x8, x21
   18d60:	str	x19, [x8]
   18d64:	mov	x8, x21
   18d68:	str	x21, [x19, #16]
   18d6c:	ldr	x9, [x8, #32]
   18d70:	add	x9, x9, #0x1
   18d74:	str	x9, [x8, #32]
   18d78:	ldr	x8, [x8, #16]
   18d7c:	cbnz	x8, 18d6c <gl_rbtree_list_check_invariants@@Base+0x898>
   18d80:	mov	x0, x20
   18d84:	mov	x1, x19
   18d88:	mov	x2, x21
   18d8c:	bl	19cb0 <gl_rbtree_list_check_invariants@@Base+0x17dc>
   18d90:	mov	x0, x19
   18d94:	ldp	x20, x19, [sp, #32]
   18d98:	ldp	x22, x21, [sp, #16]
   18d9c:	ldp	x29, x30, [sp], #48
   18da0:	ret
   18da4:	stp	x29, x30, [sp, #-48]!
   18da8:	stp	x20, x19, [sp, #32]
   18dac:	mov	x20, x0
   18db0:	mov	w0, #0x30                  	// #48
   18db4:	stp	x22, x21, [sp, #16]
   18db8:	mov	x29, sp
   18dbc:	mov	x22, x2
   18dc0:	mov	x21, x1
   18dc4:	bl	a540 <malloc@plt>
   18dc8:	mov	x19, x0
   18dcc:	cbz	x0, 18e28 <gl_rbtree_list_check_invariants@@Base+0x954>
   18dd0:	mov	w8, #0x1                   	// #1
   18dd4:	stp	xzr, xzr, [x19]
   18dd8:	stp	x8, x22, [x19, #32]
   18ddc:	mov	x8, x21
   18de0:	ldr	x9, [x8, #8]!
   18de4:	cbz	x9, 18df8 <gl_rbtree_list_check_invariants@@Base+0x924>
   18de8:	mov	x21, x9
   18dec:	ldr	x9, [x9]
   18df0:	cbnz	x9, 18de8 <gl_rbtree_list_check_invariants@@Base+0x914>
   18df4:	mov	x8, x21
   18df8:	str	x19, [x8]
   18dfc:	mov	x8, x21
   18e00:	str	x21, [x19, #16]
   18e04:	ldr	x9, [x8, #32]
   18e08:	add	x9, x9, #0x1
   18e0c:	str	x9, [x8, #32]
   18e10:	ldr	x8, [x8, #16]
   18e14:	cbnz	x8, 18e04 <gl_rbtree_list_check_invariants@@Base+0x930>
   18e18:	mov	x0, x20
   18e1c:	mov	x1, x19
   18e20:	mov	x2, x21
   18e24:	bl	19cb0 <gl_rbtree_list_check_invariants@@Base+0x17dc>
   18e28:	mov	x0, x19
   18e2c:	ldp	x20, x19, [sp, #32]
   18e30:	ldp	x22, x21, [sp, #16]
   18e34:	ldp	x29, x30, [sp], #48
   18e38:	ret
   18e3c:	stp	x29, x30, [sp, #-64]!
   18e40:	stp	x22, x21, [sp, #32]
   18e44:	stp	x20, x19, [sp, #48]
   18e48:	str	x23, [sp, #16]
   18e4c:	ldr	x23, [x0, #40]
   18e50:	mov	x21, x2
   18e54:	mov	x19, x0
   18e58:	mov	x29, sp
   18e5c:	cbz	x23, 18f2c <gl_rbtree_list_check_invariants@@Base+0xa58>
   18e60:	ldr	x8, [x23, #32]
   18e64:	cmp	x8, x1
   18e68:	b.cc	18f38 <gl_rbtree_list_check_invariants@@Base+0xa64>  // b.lo, b.ul, b.last
   18e6c:	b.ne	18ec8 <gl_rbtree_list_check_invariants@@Base+0x9f4>  // b.any
   18e70:	mov	w0, #0x30                  	// #48
   18e74:	bl	a540 <malloc@plt>
   18e78:	mov	x20, x0
   18e7c:	cbz	x0, 18f80 <gl_rbtree_list_check_invariants@@Base+0xaac>
   18e80:	mov	w8, #0x1                   	// #1
   18e84:	stp	xzr, xzr, [x20]
   18e88:	stp	x8, x21, [x20, #32]
   18e8c:	cbz	x23, 18f3c <gl_rbtree_list_check_invariants@@Base+0xa68>
   18e90:	mov	x2, x23
   18e94:	ldr	x23, [x23, #8]
   18e98:	cbnz	x23, 18e90 <gl_rbtree_list_check_invariants@@Base+0x9bc>
   18e9c:	mov	x8, x2
   18ea0:	str	x20, [x2, #8]
   18ea4:	str	x2, [x20, #16]
   18ea8:	ldr	x9, [x8, #32]
   18eac:	add	x9, x9, #0x1
   18eb0:	str	x9, [x8, #32]
   18eb4:	ldr	x8, [x8, #16]
   18eb8:	cbnz	x8, 18ea8 <gl_rbtree_list_check_invariants@@Base+0x9d4>
   18ebc:	mov	x0, x19
   18ec0:	mov	x1, x20
   18ec4:	b	18f7c <gl_rbtree_list_check_invariants@@Base+0xaa8>
   18ec8:	mov	x22, x23
   18ecc:	ldr	x23, [x23]
   18ed0:	cbz	x23, 18ee4 <gl_rbtree_list_check_invariants@@Base+0xa10>
   18ed4:	ldr	x8, [x23, #32]
   18ed8:	subs	x8, x1, x8
   18edc:	b.cc	18ec8 <gl_rbtree_list_check_invariants@@Base+0x9f4>  // b.lo, b.ul, b.last
   18ee0:	mov	x1, x8
   18ee4:	cbz	x1, 18ef4 <gl_rbtree_list_check_invariants@@Base+0xa20>
   18ee8:	ldr	x23, [x22, #8]
   18eec:	sub	x1, x1, #0x1
   18ef0:	b	18ec8 <gl_rbtree_list_check_invariants@@Base+0x9f4>
   18ef4:	mov	w0, #0x30                  	// #48
   18ef8:	bl	a540 <malloc@plt>
   18efc:	mov	x20, x0
   18f00:	cbz	x0, 18f80 <gl_rbtree_list_check_invariants@@Base+0xaac>
   18f04:	mov	w8, #0x1                   	// #1
   18f08:	stp	xzr, xzr, [x20]
   18f0c:	stp	x8, x21, [x20, #32]
   18f10:	ldr	x8, [x22]
   18f14:	cbz	x8, 18f4c <gl_rbtree_list_check_invariants@@Base+0xa78>
   18f18:	mov	x22, x8
   18f1c:	ldr	x8, [x8, #8]
   18f20:	cbnz	x8, 18f18 <gl_rbtree_list_check_invariants@@Base+0xa44>
   18f24:	add	x8, x22, #0x8
   18f28:	b	18f50 <gl_rbtree_list_check_invariants@@Base+0xa7c>
   18f2c:	mov	x8, xzr
   18f30:	cmp	x8, x1
   18f34:	b.cs	18e6c <gl_rbtree_list_check_invariants@@Base+0x998>  // b.hs, b.nlast
   18f38:	bl	a840 <abort@plt>
   18f3c:	str	wzr, [x20, #24]
   18f40:	str	x20, [x19, #40]
   18f44:	str	xzr, [x20, #16]
   18f48:	b	18f80 <gl_rbtree_list_check_invariants@@Base+0xaac>
   18f4c:	mov	x8, x22
   18f50:	str	x20, [x8]
   18f54:	mov	x8, x22
   18f58:	str	x22, [x20, #16]
   18f5c:	ldr	x9, [x8, #32]
   18f60:	add	x9, x9, #0x1
   18f64:	str	x9, [x8, #32]
   18f68:	ldr	x8, [x8, #16]
   18f6c:	cbnz	x8, 18f5c <gl_rbtree_list_check_invariants@@Base+0xa88>
   18f70:	mov	x0, x19
   18f74:	mov	x1, x20
   18f78:	mov	x2, x22
   18f7c:	bl	19cb0 <gl_rbtree_list_check_invariants@@Base+0x17dc>
   18f80:	mov	x0, x20
   18f84:	ldp	x20, x19, [sp, #48]
   18f88:	ldp	x22, x21, [sp, #32]
   18f8c:	ldr	x23, [sp, #16]
   18f90:	ldp	x29, x30, [sp], #64
   18f94:	ret
   18f98:	stp	x29, x30, [sp, #-32]!
   18f9c:	stp	x20, x19, [sp, #16]
   18fa0:	ldp	x8, x2, [x1, #8]
   18fa4:	ldr	x10, [x1]
   18fa8:	mov	x19, x1
   18fac:	mov	x20, x0
   18fb0:	mov	x29, sp
   18fb4:	cbz	x10, 18ff0 <gl_rbtree_list_check_invariants@@Base+0xb1c>
   18fb8:	cbz	x8, 19040 <gl_rbtree_list_check_invariants@@Base+0xb6c>
   18fbc:	mov	x9, x10
   18fc0:	mov	x8, x9
   18fc4:	ldr	x9, [x9, #8]
   18fc8:	cbnz	x9, 18fc0 <gl_rbtree_list_check_invariants@@Base+0xaec>
   18fcc:	ldr	x9, [x8, #16]
   18fd0:	ldr	x1, [x8]
   18fd4:	ldr	w11, [x8, #24]
   18fd8:	cmp	x9, x19
   18fdc:	b.eq	19074 <gl_rbtree_list_check_invariants@@Base+0xba0>  // b.none
   18fe0:	cbz	x1, 18fe8 <gl_rbtree_list_check_invariants@@Base+0xb14>
   18fe4:	str	x9, [x1, #16]
   18fe8:	str	x1, [x9, #8]
   18fec:	b	19078 <gl_rbtree_list_check_invariants@@Base+0xba4>
   18ff0:	cbz	x8, 18ffc <gl_rbtree_list_check_invariants@@Base+0xb28>
   18ff4:	str	x2, [x8, #16]
   18ff8:	str	wzr, [x8, #24]
   18ffc:	cbz	x2, 1910c <gl_rbtree_list_check_invariants@@Base+0xc38>
   19000:	ldr	x9, [x2]
   19004:	cmp	x9, x19
   19008:	cset	w9, ne  // ne = any
   1900c:	str	x8, [x2, w9, uxtw #3]
   19010:	mov	x9, x2
   19014:	ldr	x10, [x9, #32]
   19018:	sub	x10, x10, #0x1
   1901c:	str	x10, [x9, #32]
   19020:	ldr	x9, [x9, #16]
   19024:	cbnz	x9, 19014 <gl_rbtree_list_check_invariants@@Base+0xb40>
   19028:	cbnz	x8, 1912c <gl_rbtree_list_check_invariants@@Base+0xc58>
   1902c:	ldr	w8, [x19, #24]
   19030:	cbnz	w8, 1912c <gl_rbtree_list_check_invariants@@Base+0xc58>
   19034:	mov	x0, x20
   19038:	mov	x1, xzr
   1903c:	b	19128 <gl_rbtree_list_check_invariants@@Base+0xc54>
   19040:	str	x2, [x10, #16]
   19044:	str	wzr, [x10, #24]
   19048:	cbz	x2, 19154 <gl_rbtree_list_check_invariants@@Base+0xc80>
   1904c:	ldr	x8, [x2]
   19050:	cmp	x8, x19
   19054:	cset	w8, ne  // ne = any
   19058:	str	x10, [x2, w8, uxtw #3]
   1905c:	ldr	x8, [x2, #32]
   19060:	sub	x8, x8, #0x1
   19064:	str	x8, [x2, #32]
   19068:	ldr	x2, [x2, #16]
   1906c:	cbnz	x2, 1905c <gl_rbtree_list_check_invariants@@Base+0xb88>
   19070:	b	1912c <gl_rbtree_list_check_invariants@@Base+0xc58>
   19074:	cbz	x19, 190a0 <gl_rbtree_list_check_invariants@@Base+0xbcc>
   19078:	mov	x12, x9
   1907c:	ldr	x13, [x12, #32]
   19080:	sub	x13, x13, #0x1
   19084:	str	x13, [x12, #32]
   19088:	ldr	x12, [x12, #16]
   1908c:	cbnz	x12, 1907c <gl_rbtree_list_check_invariants@@Base+0xba8>
   19090:	cmp	x9, x19
   19094:	b.eq	190a0 <gl_rbtree_list_check_invariants@@Base+0xbcc>  // b.none
   19098:	str	x10, [x8]
   1909c:	str	x8, [x10, #16]
   190a0:	ldr	x10, [x19, #8]
   190a4:	str	x10, [x8, #8]
   190a8:	str	x8, [x10, #16]
   190ac:	ldr	w10, [x19, #24]
   190b0:	str	w10, [x8, #24]
   190b4:	ldr	x10, [x19, #32]
   190b8:	str	x2, [x8, #16]
   190bc:	str	x10, [x8, #32]
   190c0:	cbz	x2, 190e0 <gl_rbtree_list_check_invariants@@Base+0xc0c>
   190c4:	mov	x10, x2
   190c8:	ldr	x12, [x10], #8
   190cc:	cmp	x12, x19
   190d0:	csel	x10, x2, x10, eq  // eq = none
   190d4:	str	x8, [x10]
   190d8:	cbnz	w11, 1912c <gl_rbtree_list_check_invariants@@Base+0xc58>
   190dc:	b	190ec <gl_rbtree_list_check_invariants@@Base+0xc18>
   190e0:	add	x10, x20, #0x28
   190e4:	str	x8, [x10]
   190e8:	cbnz	w11, 1912c <gl_rbtree_list_check_invariants@@Base+0xc58>
   190ec:	cbz	x1, 1911c <gl_rbtree_list_check_invariants@@Base+0xc48>
   190f0:	ldr	w10, [x1, #24]
   190f4:	cmp	w10, #0x1
   190f8:	b.ne	1911c <gl_rbtree_list_check_invariants@@Base+0xc48>  // b.any
   190fc:	str	wzr, [x1, #24]
   19100:	ldr	x8, [x20, #24]
   19104:	cbnz	x8, 19134 <gl_rbtree_list_check_invariants@@Base+0xc60>
   19108:	b	1913c <gl_rbtree_list_check_invariants@@Base+0xc68>
   1910c:	str	x8, [x20, #40]
   19110:	ldr	x8, [x20, #24]
   19114:	cbnz	x8, 19134 <gl_rbtree_list_check_invariants@@Base+0xc60>
   19118:	b	1913c <gl_rbtree_list_check_invariants@@Base+0xc68>
   1911c:	cmp	x9, x19
   19120:	csel	x2, x9, x8, ne  // ne = any
   19124:	mov	x0, x20
   19128:	bl	19f58 <gl_rbtree_list_check_invariants@@Base+0x1a84>
   1912c:	ldr	x8, [x20, #24]
   19130:	cbz	x8, 1913c <gl_rbtree_list_check_invariants@@Base+0xc68>
   19134:	ldr	x0, [x19, #40]
   19138:	blr	x8
   1913c:	mov	x0, x19
   19140:	bl	a960 <free@plt>
   19144:	ldp	x20, x19, [sp, #16]
   19148:	mov	w0, #0x1                   	// #1
   1914c:	ldp	x29, x30, [sp], #32
   19150:	ret
   19154:	str	x10, [x20, #40]
   19158:	ldr	x8, [x20, #24]
   1915c:	cbnz	x8, 19134 <gl_rbtree_list_check_invariants@@Base+0xc60>
   19160:	b	1913c <gl_rbtree_list_check_invariants@@Base+0xc68>
   19164:	stp	x29, x30, [sp, #-16]!
   19168:	ldr	x9, [x0, #40]
   1916c:	mov	x29, sp
   19170:	cbz	x9, 191c0 <gl_rbtree_list_check_invariants@@Base+0xcec>
   19174:	ldr	x8, [x9, #32]
   19178:	cmp	x8, x1
   1917c:	b.ls	191c0 <gl_rbtree_list_check_invariants@@Base+0xcec>  // b.plast
   19180:	mov	x8, x9
   19184:	ldr	x9, [x9]
   19188:	cbz	x9, 1919c <gl_rbtree_list_check_invariants@@Base+0xcc8>
   1918c:	ldr	x10, [x9, #32]
   19190:	subs	x10, x1, x10
   19194:	b.cc	19180 <gl_rbtree_list_check_invariants@@Base+0xcac>  // b.lo, b.ul, b.last
   19198:	mov	x1, x10
   1919c:	cbz	x1, 191ac <gl_rbtree_list_check_invariants@@Base+0xcd8>
   191a0:	ldr	x9, [x8, #8]
   191a4:	sub	x1, x1, #0x1
   191a8:	b	19180 <gl_rbtree_list_check_invariants@@Base+0xcac>
   191ac:	mov	x1, x8
   191b0:	bl	18f98 <gl_rbtree_list_check_invariants@@Base+0xac4>
   191b4:	mov	w0, #0x1                   	// #1
   191b8:	ldp	x29, x30, [sp], #16
   191bc:	ret
   191c0:	bl	a840 <abort@plt>
   191c4:	stp	x29, x30, [sp, #-96]!
   191c8:	stp	x28, x27, [sp, #16]
   191cc:	stp	x26, x25, [sp, #32]
   191d0:	stp	x24, x23, [sp, #48]
   191d4:	stp	x22, x21, [sp, #64]
   191d8:	stp	x20, x19, [sp, #80]
   191dc:	mov	x29, sp
   191e0:	sub	sp, sp, #0x750
   191e4:	ldr	x8, [x0, #40]
   191e8:	cbz	x8, 192ac <gl_rbtree_list_check_invariants@@Base+0xdd8>
   191ec:	ldr	x23, [x8, #32]
   191f0:	ldr	x24, [x0, #8]
   191f4:	add	x26, sp, #0x8
   191f8:	mov	x19, x0
   191fc:	mov	x20, x1
   19200:	mov	x25, xzr
   19204:	mov	x22, xzr
   19208:	add	x27, x26, #0x8
   1920c:	mov	w10, #0x1                   	// #1
   19210:	cbz	x8, 1922c <gl_rbtree_list_check_invariants@@Base+0xd58>
   19214:	add	x9, x27, x25, lsl #4
   19218:	stp	x8, xzr, [x9, #-8]
   1921c:	ldr	x8, [x8]
   19220:	add	x25, x25, #0x1
   19224:	add	x9, x9, #0x10
   19228:	cbnz	x8, 19218 <gl_rbtree_list_check_invariants@@Base+0xd44>
   1922c:	add	x9, x25, #0x1
   19230:	add	x8, x26, x25, lsl #4
   19234:	mov	x25, x9
   19238:	sub	x25, x25, #0x1
   1923c:	cbz	x25, 192ac <gl_rbtree_list_check_invariants@@Base+0xdd8>
   19240:	ldur	x9, [x8, #-8]
   19244:	sub	x28, x8, #0x10
   19248:	mov	x8, x28
   1924c:	cbnz	x9, 19238 <gl_rbtree_list_check_invariants@@Base+0xd64>
   19250:	ldr	x21, [x28]
   19254:	ldr	x1, [x21, #40]
   19258:	cbz	x24, 19270 <gl_rbtree_list_check_invariants@@Base+0xd9c>
   1925c:	mov	x0, x20
   19260:	blr	x24
   19264:	mov	w10, #0x1                   	// #1
   19268:	tbz	w0, #0, 19278 <gl_rbtree_list_check_invariants@@Base+0xda4>
   1926c:	b	19294 <gl_rbtree_list_check_invariants@@Base+0xdc0>
   19270:	cmp	x1, x20
   19274:	b.eq	19294 <gl_rbtree_list_check_invariants@@Base+0xdc0>  // b.none
   19278:	add	x22, x22, #0x1
   1927c:	cmp	x22, x23
   19280:	b.cs	192ac <gl_rbtree_list_check_invariants@@Base+0xdd8>  // b.hs, b.nlast
   19284:	str	x10, [x28, #8]
   19288:	ldr	x8, [x21, #8]
   1928c:	cbnz	x8, 19214 <gl_rbtree_list_check_invariants@@Base+0xd40>
   19290:	b	1922c <gl_rbtree_list_check_invariants@@Base+0xd58>
   19294:	cbz	x21, 192ac <gl_rbtree_list_check_invariants@@Base+0xdd8>
   19298:	mov	x0, x19
   1929c:	mov	x1, x21
   192a0:	bl	18f98 <gl_rbtree_list_check_invariants@@Base+0xac4>
   192a4:	mov	w0, #0x1                   	// #1
   192a8:	b	192b0 <gl_rbtree_list_check_invariants@@Base+0xddc>
   192ac:	mov	w0, wzr
   192b0:	add	sp, sp, #0x750
   192b4:	ldp	x20, x19, [sp, #80]
   192b8:	ldp	x22, x21, [sp, #64]
   192bc:	ldp	x24, x23, [sp, #48]
   192c0:	ldp	x26, x25, [sp, #32]
   192c4:	ldp	x28, x27, [sp, #16]
   192c8:	ldp	x29, x30, [sp], #96
   192cc:	ret
   192d0:	stp	x29, x30, [sp, #-80]!
   192d4:	stp	x28, x25, [sp, #16]
   192d8:	stp	x24, x23, [sp, #32]
   192dc:	stp	x22, x21, [sp, #48]
   192e0:	stp	x20, x19, [sp, #64]
   192e4:	mov	x29, sp
   192e8:	sub	sp, sp, #0x740
   192ec:	ldr	x8, [x0, #40]
   192f0:	mov	x9, sp
   192f4:	mov	x19, x0
   192f8:	mov	x21, xzr
   192fc:	add	x22, x9, #0x8
   19300:	sub	x23, x9, #0x8
   19304:	mov	w24, #0x1                   	// #1
   19308:	cbz	x8, 19324 <gl_rbtree_list_check_invariants@@Base+0xe50>
   1930c:	add	x9, x22, x21, lsl #4
   19310:	stp	x8, xzr, [x9, #-8]
   19314:	ldr	x8, [x8]
   19318:	add	x21, x21, #0x1
   1931c:	add	x9, x9, #0x10
   19320:	cbnz	x8, 19310 <gl_rbtree_list_check_invariants@@Base+0xe3c>
   19324:	cbz	x21, 19370 <gl_rbtree_list_check_invariants@@Base+0xe9c>
   19328:	add	x25, x23, x21, lsl #4
   1932c:	b	19340 <gl_rbtree_list_check_invariants@@Base+0xe6c>
   19330:	mov	x0, x20
   19334:	bl	a960 <free@plt>
   19338:	sub	x25, x25, #0x10
   1933c:	cbz	x21, 19370 <gl_rbtree_list_check_invariants@@Base+0xe9c>
   19340:	ldp	x20, x8, [x25, #-8]
   19344:	cbz	x8, 19360 <gl_rbtree_list_check_invariants@@Base+0xe8c>
   19348:	ldr	x8, [x19, #24]
   1934c:	sub	x21, x21, #0x1
   19350:	cbz	x8, 19330 <gl_rbtree_list_check_invariants@@Base+0xe5c>
   19354:	ldr	x0, [x20, #40]
   19358:	blr	x8
   1935c:	b	19330 <gl_rbtree_list_check_invariants@@Base+0xe5c>
   19360:	str	x24, [x25]
   19364:	ldr	x8, [x20, #8]
   19368:	cbnz	x8, 1930c <gl_rbtree_list_check_invariants@@Base+0xe38>
   1936c:	b	19324 <gl_rbtree_list_check_invariants@@Base+0xe50>
   19370:	mov	x0, x19
   19374:	add	sp, sp, #0x740
   19378:	ldp	x20, x19, [sp, #64]
   1937c:	ldp	x22, x21, [sp, #48]
   19380:	ldp	x24, x23, [sp, #32]
   19384:	ldp	x28, x25, [sp, #16]
   19388:	ldp	x29, x30, [sp], #80
   1938c:	b	a960 <free@plt>
   19390:	ldr	x9, [x0]
   19394:	stp	x9, x0, [x8]
   19398:	ldr	x9, [x0, #40]
   1939c:	cbz	x9, 193b4 <gl_rbtree_list_check_invariants@@Base+0xee0>
   193a0:	mov	x10, x9
   193a4:	ldr	x9, [x9]
   193a8:	cbnz	x9, 193a0 <gl_rbtree_list_check_invariants@@Base+0xecc>
   193ac:	stp	x10, xzr, [x8, #24]
   193b0:	ret
   193b4:	mov	x10, xzr
   193b8:	stp	x10, xzr, [x8, #24]
   193bc:	ret
   193c0:	stp	x29, x30, [sp, #-16]!
   193c4:	ldr	x9, [x0, #40]
   193c8:	mov	x29, sp
   193cc:	cbz	x9, 193e0 <gl_rbtree_list_check_invariants@@Base+0xf0c>
   193d0:	ldr	x10, [x9, #32]
   193d4:	cmp	x1, x2
   193d8:	b.ls	193ec <gl_rbtree_list_check_invariants@@Base+0xf18>  // b.plast
   193dc:	b	19480 <gl_rbtree_list_check_invariants@@Base+0xfac>
   193e0:	mov	x10, xzr
   193e4:	cmp	x1, x2
   193e8:	b.hi	19480 <gl_rbtree_list_check_invariants@@Base+0xfac>  // b.pmore
   193ec:	cmp	x10, x2
   193f0:	b.cc	19480 <gl_rbtree_list_check_invariants@@Base+0xfac>  // b.lo, b.ul, b.last
   193f4:	ldr	x11, [x0]
   193f8:	cmp	x10, x1
   193fc:	stp	x11, x0, [x8]
   19400:	b.ls	19434 <gl_rbtree_list_check_invariants@@Base+0xf60>  // b.plast
   19404:	mov	x12, x9
   19408:	mov	x11, x12
   1940c:	ldr	x12, [x12]
   19410:	cbz	x12, 19424 <gl_rbtree_list_check_invariants@@Base+0xf50>
   19414:	ldr	x13, [x12, #32]
   19418:	subs	x13, x1, x13
   1941c:	b.cc	19408 <gl_rbtree_list_check_invariants@@Base+0xf34>  // b.lo, b.ul, b.last
   19420:	mov	x1, x13
   19424:	cbz	x1, 19438 <gl_rbtree_list_check_invariants@@Base+0xf64>
   19428:	ldr	x12, [x11, #8]
   1942c:	sub	x1, x1, #0x1
   19430:	b	19408 <gl_rbtree_list_check_invariants@@Base+0xf34>
   19434:	mov	x11, xzr
   19438:	cmp	x10, x2
   1943c:	str	x11, [x8, #24]
   19440:	b.ls	19470 <gl_rbtree_list_check_invariants@@Base+0xf9c>  // b.plast
   19444:	mov	x10, x9
   19448:	ldr	x9, [x9]
   1944c:	cbz	x9, 19460 <gl_rbtree_list_check_invariants@@Base+0xf8c>
   19450:	ldr	x11, [x9, #32]
   19454:	subs	x11, x2, x11
   19458:	b.cc	19444 <gl_rbtree_list_check_invariants@@Base+0xf70>  // b.lo, b.ul, b.last
   1945c:	mov	x2, x11
   19460:	cbz	x2, 19474 <gl_rbtree_list_check_invariants@@Base+0xfa0>
   19464:	ldr	x9, [x10, #8]
   19468:	sub	x2, x2, #0x1
   1946c:	b	19444 <gl_rbtree_list_check_invariants@@Base+0xf70>
   19470:	mov	x10, xzr
   19474:	str	x10, [x8, #32]
   19478:	ldp	x29, x30, [sp], #16
   1947c:	ret
   19480:	bl	a840 <abort@plt>
   19484:	ldp	x8, x9, [x0, #24]
   19488:	cmp	x8, x9
   1948c:	b.eq	194dc <gl_rbtree_list_check_invariants@@Base+0x1008>  // b.none
   19490:	ldr	x9, [x8, #40]
   19494:	str	x9, [x1]
   19498:	cbz	x2, 194a0 <gl_rbtree_list_check_invariants@@Base+0xfcc>
   1949c:	str	x8, [x2]
   194a0:	ldr	x10, [x8, #8]
   194a4:	cbz	x10, 194b8 <gl_rbtree_list_check_invariants@@Base+0xfe4>
   194a8:	mov	x9, x10
   194ac:	ldr	x10, [x10]
   194b0:	cbnz	x10, 194a8 <gl_rbtree_list_check_invariants@@Base+0xfd4>
   194b4:	b	194d0 <gl_rbtree_list_check_invariants@@Base+0xffc>
   194b8:	ldr	x9, [x8, #16]
   194bc:	cbz	x9, 194d0 <gl_rbtree_list_check_invariants@@Base+0xffc>
   194c0:	ldr	x10, [x9, #8]
   194c4:	cmp	x10, x8
   194c8:	mov	x8, x9
   194cc:	b.eq	194b8 <gl_rbtree_list_check_invariants@@Base+0xfe4>  // b.none
   194d0:	str	x9, [x0, #24]
   194d4:	mov	w0, #0x1                   	// #1
   194d8:	ret
   194dc:	mov	w0, wzr
   194e0:	ret
   194e4:	ret
   194e8:	stp	x29, x30, [sp, #-48]!
   194ec:	stp	x22, x21, [sp, #16]
   194f0:	stp	x20, x19, [sp, #32]
   194f4:	ldr	x20, [x0, #40]
   194f8:	mov	x29, sp
   194fc:	cbz	x20, 19564 <gl_rbtree_list_check_invariants@@Base+0x1090>
   19500:	mov	x19, x2
   19504:	mov	x21, x1
   19508:	b	19518 <gl_rbtree_list_check_invariants@@Base+0x1044>
   1950c:	add	x20, x20, #0x8
   19510:	ldr	x20, [x20]
   19514:	cbz	x20, 19564 <gl_rbtree_list_check_invariants@@Base+0x1090>
   19518:	ldr	x0, [x20, #40]
   1951c:	mov	x1, x19
   19520:	blr	x21
   19524:	tbnz	w0, #31, 1950c <gl_rbtree_list_check_invariants@@Base+0x1038>
   19528:	cbnz	w0, 19510 <gl_rbtree_list_check_invariants@@Base+0x103c>
   1952c:	ldr	x22, [x20]
   19530:	cbnz	x22, 19544 <gl_rbtree_list_check_invariants@@Base+0x1070>
   19534:	b	19564 <gl_rbtree_list_check_invariants@@Base+0x1090>
   19538:	add	x22, x22, #0x8
   1953c:	ldr	x22, [x22]
   19540:	cbz	x22, 19564 <gl_rbtree_list_check_invariants@@Base+0x1090>
   19544:	ldr	x0, [x22, #40]
   19548:	mov	x1, x19
   1954c:	blr	x21
   19550:	tbnz	w0, #31, 19538 <gl_rbtree_list_check_invariants@@Base+0x1064>
   19554:	cbnz	w0, 19578 <gl_rbtree_list_check_invariants@@Base+0x10a4>
   19558:	mov	x20, x22
   1955c:	ldr	x22, [x22]
   19560:	cbnz	x22, 19544 <gl_rbtree_list_check_invariants@@Base+0x1070>
   19564:	mov	x0, x20
   19568:	ldp	x20, x19, [sp, #32]
   1956c:	ldp	x22, x21, [sp, #16]
   19570:	ldp	x29, x30, [sp], #48
   19574:	ret
   19578:	bl	a840 <abort@plt>
   1957c:	stp	x29, x30, [sp, #-64]!
   19580:	cmp	x2, x3
   19584:	stp	x24, x23, [sp, #16]
   19588:	stp	x22, x21, [sp, #32]
   1958c:	stp	x20, x19, [sp, #48]
   19590:	mov	x29, sp
   19594:	b.hi	196b8 <gl_rbtree_list_check_invariants@@Base+0x11e4>  // b.pmore
   19598:	ldr	x22, [x0, #40]
   1959c:	mov	x19, x4
   195a0:	mov	x23, x3
   195a4:	mov	x21, x2
   195a8:	mov	x20, x1
   195ac:	cbz	x22, 195c0 <gl_rbtree_list_check_invariants@@Base+0x10ec>
   195b0:	ldr	x8, [x22, #32]
   195b4:	cmp	x8, x23
   195b8:	b.cs	195cc <gl_rbtree_list_check_invariants@@Base+0x10f8>  // b.hs, b.nlast
   195bc:	b	196b8 <gl_rbtree_list_check_invariants@@Base+0x11e4>
   195c0:	mov	x8, xzr
   195c4:	cmp	x8, x23
   195c8:	b.cc	196b8 <gl_rbtree_list_check_invariants@@Base+0x11e4>  // b.lo, b.ul, b.last
   195cc:	cbnz	x22, 19604 <gl_rbtree_list_check_invariants@@Base+0x1130>
   195d0:	mov	x0, x22
   195d4:	ldp	x20, x19, [sp, #48]
   195d8:	ldp	x22, x21, [sp, #32]
   195dc:	ldp	x24, x23, [sp, #16]
   195e0:	ldp	x29, x30, [sp], #64
   195e4:	ret
   195e8:	add	x8, x24, #0x1
   195ec:	sub	x21, x21, x8
   195f0:	sub	x23, x23, x8
   195f4:	add	x22, x22, #0x8
   195f8:	ldr	x8, [x22]
   195fc:	mov	x22, x8
   19600:	cbz	x8, 195d0 <gl_rbtree_list_check_invariants@@Base+0x10fc>
   19604:	ldr	x8, [x22]
   19608:	cbz	x8, 1961c <gl_rbtree_list_check_invariants@@Base+0x1148>
   1960c:	ldr	x24, [x8, #32]
   19610:	cmp	x21, x24
   19614:	b.hi	195e8 <gl_rbtree_list_check_invariants@@Base+0x1114>  // b.pmore
   19618:	b	19628 <gl_rbtree_list_check_invariants@@Base+0x1154>
   1961c:	mov	x24, xzr
   19620:	cmp	x21, x24
   19624:	b.hi	195e8 <gl_rbtree_list_check_invariants@@Base+0x1114>  // b.pmore
   19628:	cmp	x23, x24
   1962c:	b.ls	195fc <gl_rbtree_list_check_invariants@@Base+0x1128>  // b.plast
   19630:	ldr	x0, [x22, #40]
   19634:	mov	x1, x19
   19638:	blr	x20
   1963c:	tbnz	w0, #31, 19648 <gl_rbtree_list_check_invariants@@Base+0x1174>
   19640:	cbnz	w0, 195f8 <gl_rbtree_list_check_invariants@@Base+0x1124>
   19644:	b	19658 <gl_rbtree_list_check_invariants@@Base+0x1184>
   19648:	mvn	x8, x24
   1964c:	mov	x21, xzr
   19650:	add	x23, x23, x8
   19654:	b	195f4 <gl_rbtree_list_check_invariants@@Base+0x1120>
   19658:	ldr	x23, [x22]
   1965c:	cbnz	x23, 19680 <gl_rbtree_list_check_invariants@@Base+0x11ac>
   19660:	b	195d0 <gl_rbtree_list_check_invariants@@Base+0x10fc>
   19664:	mvn	x8, x8
   19668:	add	x21, x21, x8
   1966c:	add	x8, x23, #0x8
   19670:	mov	x23, x22
   19674:	mov	x22, x23
   19678:	ldr	x23, [x8]
   1967c:	cbz	x23, 195d0 <gl_rbtree_list_check_invariants@@Base+0x10fc>
   19680:	ldr	x8, [x23]
   19684:	cbz	x8, 1968c <gl_rbtree_list_check_invariants@@Base+0x11b8>
   19688:	ldr	x8, [x8, #32]
   1968c:	cmp	x21, x8
   19690:	b.hi	19664 <gl_rbtree_list_check_invariants@@Base+0x1190>  // b.pmore
   19694:	ldr	x0, [x23, #40]
   19698:	mov	x1, x19
   1969c:	blr	x20
   196a0:	tbnz	w0, #31, 196b0 <gl_rbtree_list_check_invariants@@Base+0x11dc>
   196a4:	mov	x8, x23
   196a8:	cbz	w0, 19674 <gl_rbtree_list_check_invariants@@Base+0x11a0>
   196ac:	b	196b8 <gl_rbtree_list_check_invariants@@Base+0x11e4>
   196b0:	mov	x21, xzr
   196b4:	b	1966c <gl_rbtree_list_check_invariants@@Base+0x1198>
   196b8:	bl	a840 <abort@plt>
   196bc:	stp	x29, x30, [sp, #-64]!
   196c0:	stp	x22, x21, [sp, #32]
   196c4:	stp	x20, x19, [sp, #48]
   196c8:	ldr	x21, [x0, #40]
   196cc:	str	x23, [sp, #16]
   196d0:	mov	x29, sp
   196d4:	cbz	x21, 19724 <gl_rbtree_list_check_invariants@@Base+0x1250>
   196d8:	mov	x19, x2
   196dc:	mov	x20, x1
   196e0:	mov	x22, xzr
   196e4:	b	196f4 <gl_rbtree_list_check_invariants@@Base+0x1220>
   196e8:	cbz	w0, 19740 <gl_rbtree_list_check_invariants@@Base+0x126c>
   196ec:	ldr	x21, [x21]
   196f0:	cbz	x21, 19724 <gl_rbtree_list_check_invariants@@Base+0x1250>
   196f4:	ldr	x0, [x21, #40]
   196f8:	mov	x1, x19
   196fc:	blr	x20
   19700:	tbz	w0, #31, 196e8 <gl_rbtree_list_check_invariants@@Base+0x1214>
   19704:	ldr	x8, [x21]
   19708:	cbz	x8, 19714 <gl_rbtree_list_check_invariants@@Base+0x1240>
   1970c:	ldr	x8, [x8, #32]
   19710:	add	x22, x8, x22
   19714:	add	x22, x22, #0x1
   19718:	add	x21, x21, #0x8
   1971c:	ldr	x21, [x21]
   19720:	cbnz	x21, 196f4 <gl_rbtree_list_check_invariants@@Base+0x1220>
   19724:	mov	x21, #0xffffffffffffffff    	// #-1
   19728:	mov	x0, x21
   1972c:	ldp	x20, x19, [sp, #48]
   19730:	ldp	x22, x21, [sp, #32]
   19734:	ldr	x23, [sp, #16]
   19738:	ldp	x29, x30, [sp], #64
   1973c:	ret
   19740:	ldr	x23, [x21]
   19744:	cbz	x23, 197ac <gl_rbtree_list_check_invariants@@Base+0x12d8>
   19748:	ldr	x8, [x23, #32]
   1974c:	add	x21, x8, x22
   19750:	b	19760 <gl_rbtree_list_check_invariants@@Base+0x128c>
   19754:	ldr	x8, [x23, #32]
   19758:	add	x21, x8, x22
   1975c:	cbz	x23, 19728 <gl_rbtree_list_check_invariants@@Base+0x1254>
   19760:	ldr	x0, [x23, #40]
   19764:	mov	x1, x19
   19768:	blr	x20
   1976c:	tbnz	w0, #31, 1978c <gl_rbtree_list_check_invariants@@Base+0x12b8>
   19770:	cbnz	w0, 197b4 <gl_rbtree_list_check_invariants@@Base+0x12e0>
   19774:	ldr	x23, [x23]
   19778:	cbnz	x23, 19754 <gl_rbtree_list_check_invariants@@Base+0x1280>
   1977c:	mov	x8, xzr
   19780:	add	x21, x8, x22
   19784:	cbnz	x23, 19760 <gl_rbtree_list_check_invariants@@Base+0x128c>
   19788:	b	19728 <gl_rbtree_list_check_invariants@@Base+0x1254>
   1978c:	ldr	x8, [x23]
   19790:	cbz	x8, 1979c <gl_rbtree_list_check_invariants@@Base+0x12c8>
   19794:	ldr	x8, [x8, #32]
   19798:	add	x22, x8, x22
   1979c:	ldr	x23, [x23, #8]
   197a0:	add	x22, x22, #0x1
   197a4:	cbnz	x23, 19760 <gl_rbtree_list_check_invariants@@Base+0x128c>
   197a8:	b	19728 <gl_rbtree_list_check_invariants@@Base+0x1254>
   197ac:	mov	x21, x22
   197b0:	b	19728 <gl_rbtree_list_check_invariants@@Base+0x1254>
   197b4:	bl	a840 <abort@plt>
   197b8:	stp	x29, x30, [sp, #-80]!
   197bc:	cmp	x2, x3
   197c0:	str	x25, [sp, #16]
   197c4:	stp	x24, x23, [sp, #32]
   197c8:	stp	x22, x21, [sp, #48]
   197cc:	stp	x20, x19, [sp, #64]
   197d0:	mov	x29, sp
   197d4:	b.hi	1992c <gl_rbtree_list_check_invariants@@Base+0x1458>  // b.pmore
   197d8:	ldr	x24, [x0, #40]
   197dc:	mov	x19, x4
   197e0:	mov	x22, x3
   197e4:	mov	x20, x2
   197e8:	mov	x21, x1
   197ec:	cbz	x24, 19800 <gl_rbtree_list_check_invariants@@Base+0x132c>
   197f0:	ldr	x8, [x24, #32]
   197f4:	cmp	x8, x22
   197f8:	b.cs	1980c <gl_rbtree_list_check_invariants@@Base+0x1338>  // b.hs, b.nlast
   197fc:	b	1992c <gl_rbtree_list_check_invariants@@Base+0x1458>
   19800:	mov	x8, xzr
   19804:	cmp	x8, x22
   19808:	b.cc	1992c <gl_rbtree_list_check_invariants@@Base+0x1458>  // b.lo, b.ul, b.last
   1980c:	cbz	x24, 19888 <gl_rbtree_list_check_invariants@@Base+0x13b4>
   19810:	mov	x23, xzr
   19814:	b	19838 <gl_rbtree_list_check_invariants@@Base+0x1364>
   19818:	add	x8, x25, #0x1
   1981c:	sub	x20, x20, x8
   19820:	sub	x22, x22, x8
   19824:	add	x23, x8, x23
   19828:	add	x24, x24, #0x8
   1982c:	ldr	x8, [x24]
   19830:	mov	x24, x8
   19834:	cbz	x8, 19888 <gl_rbtree_list_check_invariants@@Base+0x13b4>
   19838:	ldr	x8, [x24]
   1983c:	cbz	x8, 19850 <gl_rbtree_list_check_invariants@@Base+0x137c>
   19840:	ldr	x25, [x8, #32]
   19844:	cmp	x20, x25
   19848:	b.hi	19818 <gl_rbtree_list_check_invariants@@Base+0x1344>  // b.pmore
   1984c:	b	1985c <gl_rbtree_list_check_invariants@@Base+0x1388>
   19850:	mov	x25, xzr
   19854:	cmp	x20, x25
   19858:	b.hi	19818 <gl_rbtree_list_check_invariants@@Base+0x1344>  // b.pmore
   1985c:	cmp	x22, x25
   19860:	b.ls	19830 <gl_rbtree_list_check_invariants@@Base+0x135c>  // b.plast
   19864:	ldr	x0, [x24, #40]
   19868:	mov	x1, x19
   1986c:	blr	x21
   19870:	tbnz	w0, #31, 1987c <gl_rbtree_list_check_invariants@@Base+0x13a8>
   19874:	cbnz	w0, 1982c <gl_rbtree_list_check_invariants@@Base+0x1358>
   19878:	b	198a8 <gl_rbtree_list_check_invariants@@Base+0x13d4>
   1987c:	mov	x20, xzr
   19880:	add	x8, x25, #0x1
   19884:	b	19820 <gl_rbtree_list_check_invariants@@Base+0x134c>
   19888:	mov	x22, #0xffffffffffffffff    	// #-1
   1988c:	mov	x0, x22
   19890:	ldp	x20, x19, [sp, #64]
   19894:	ldp	x22, x21, [sp, #48]
   19898:	ldp	x24, x23, [sp, #32]
   1989c:	ldr	x25, [sp, #16]
   198a0:	ldp	x29, x30, [sp], #80
   198a4:	ret
   198a8:	ldr	x24, [x24]
   198ac:	cbz	x24, 19924 <gl_rbtree_list_check_invariants@@Base+0x1450>
   198b0:	ldr	x8, [x24, #32]
   198b4:	add	x22, x8, x23
   198b8:	b	198d0 <gl_rbtree_list_check_invariants@@Base+0x13fc>
   198bc:	mvn	x8, x25
   198c0:	add	x20, x20, x8
   198c4:	add	x24, x24, #0x8
   198c8:	ldr	x24, [x24]
   198cc:	cbz	x24, 1988c <gl_rbtree_list_check_invariants@@Base+0x13b8>
   198d0:	ldr	x8, [x24]
   198d4:	cbz	x8, 198e8 <gl_rbtree_list_check_invariants@@Base+0x1414>
   198d8:	ldr	x25, [x8, #32]
   198dc:	cmp	x20, x25
   198e0:	b.hi	198bc <gl_rbtree_list_check_invariants@@Base+0x13e8>  // b.pmore
   198e4:	b	198f4 <gl_rbtree_list_check_invariants@@Base+0x1420>
   198e8:	mov	x25, xzr
   198ec:	cmp	x20, x25
   198f0:	b.hi	198bc <gl_rbtree_list_check_invariants@@Base+0x13e8>  // b.pmore
   198f4:	ldr	x0, [x24, #40]
   198f8:	mov	x1, x19
   198fc:	blr	x21
   19900:	tbnz	w0, #31, 19918 <gl_rbtree_list_check_invariants@@Base+0x1444>
   19904:	cbnz	w0, 1992c <gl_rbtree_list_check_invariants@@Base+0x1458>
   19908:	add	x22, x25, x23
   1990c:	ldr	x24, [x24]
   19910:	cbnz	x24, 198d0 <gl_rbtree_list_check_invariants@@Base+0x13fc>
   19914:	b	1988c <gl_rbtree_list_check_invariants@@Base+0x13b8>
   19918:	add	x8, x25, x23
   1991c:	add	x23, x8, #0x1
   19920:	b	198c4 <gl_rbtree_list_check_invariants@@Base+0x13f0>
   19924:	mov	x22, x23
   19928:	b	1988c <gl_rbtree_list_check_invariants@@Base+0x13b8>
   1992c:	bl	a840 <abort@plt>
   19930:	stp	x29, x30, [sp, #-48]!
   19934:	stp	x22, x21, [sp, #16]
   19938:	stp	x20, x19, [sp, #32]
   1993c:	ldr	x8, [x0, #40]
   19940:	mov	x22, x2
   19944:	mov	x19, x0
   19948:	mov	x29, sp
   1994c:	cbz	x8, 199b8 <gl_rbtree_list_check_invariants@@Base+0x14e4>
   19950:	mov	x20, x1
   19954:	b	19960 <gl_rbtree_list_check_invariants@@Base+0x148c>
   19958:	ldr	x8, [x21, #8]
   1995c:	cbz	x8, 19a1c <gl_rbtree_list_check_invariants@@Base+0x1548>
   19960:	ldr	x0, [x8, #40]
   19964:	mov	x1, x22
   19968:	mov	x21, x8
   1996c:	blr	x20
   19970:	tbnz	w0, #31, 19958 <gl_rbtree_list_check_invariants@@Base+0x1484>
   19974:	cbz	w0, 199e4 <gl_rbtree_list_check_invariants@@Base+0x1510>
   19978:	ldr	x8, [x21]
   1997c:	cbnz	x8, 19960 <gl_rbtree_list_check_invariants@@Base+0x148c>
   19980:	mov	w0, #0x30                  	// #48
   19984:	bl	a540 <malloc@plt>
   19988:	mov	x20, x0
   1998c:	cbz	x0, 19ad4 <gl_rbtree_list_check_invariants@@Base+0x1600>
   19990:	mov	w8, #0x1                   	// #1
   19994:	stp	xzr, xzr, [x20]
   19998:	stp	x8, x22, [x20, #32]
   1999c:	ldr	x8, [x21]
   199a0:	cbz	x8, 19aa0 <gl_rbtree_list_check_invariants@@Base+0x15cc>
   199a4:	mov	x21, x8
   199a8:	ldr	x8, [x8, #8]
   199ac:	cbnz	x8, 199a4 <gl_rbtree_list_check_invariants@@Base+0x14d0>
   199b0:	add	x8, x21, #0x8
   199b4:	b	19aa4 <gl_rbtree_list_check_invariants@@Base+0x15d0>
   199b8:	mov	w0, #0x30                  	// #48
   199bc:	bl	a540 <malloc@plt>
   199c0:	mov	x20, x0
   199c4:	cbz	x0, 19ad4 <gl_rbtree_list_check_invariants@@Base+0x1600>
   199c8:	mov	w8, #0x1                   	// #1
   199cc:	stp	xzr, xzr, [x20]
   199d0:	str	wzr, [x20, #24]
   199d4:	stp	x8, x22, [x20, #32]
   199d8:	str	x20, [x19, #40]
   199dc:	str	xzr, [x20, #16]
   199e0:	b	19ad4 <gl_rbtree_list_check_invariants@@Base+0x1600>
   199e4:	mov	w0, #0x30                  	// #48
   199e8:	bl	a540 <malloc@plt>
   199ec:	mov	x20, x0
   199f0:	cbz	x0, 19ad4 <gl_rbtree_list_check_invariants@@Base+0x1600>
   199f4:	mov	w8, #0x1                   	// #1
   199f8:	stp	xzr, xzr, [x20]
   199fc:	stp	x8, x22, [x20, #32]
   19a00:	ldr	x8, [x21]
   19a04:	cbz	x8, 19a78 <gl_rbtree_list_check_invariants@@Base+0x15a4>
   19a08:	mov	x21, x8
   19a0c:	ldr	x8, [x8, #8]
   19a10:	cbnz	x8, 19a08 <gl_rbtree_list_check_invariants@@Base+0x1534>
   19a14:	add	x8, x21, #0x8
   19a18:	b	19a7c <gl_rbtree_list_check_invariants@@Base+0x15a8>
   19a1c:	mov	w0, #0x30                  	// #48
   19a20:	bl	a540 <malloc@plt>
   19a24:	mov	x20, x0
   19a28:	cbz	x0, 19ad4 <gl_rbtree_list_check_invariants@@Base+0x1600>
   19a2c:	mov	w9, #0x1                   	// #1
   19a30:	add	x8, x21, #0x8
   19a34:	stp	xzr, xzr, [x20]
   19a38:	stp	x9, x22, [x20, #32]
   19a3c:	ldr	x9, [x8]
   19a40:	cbz	x9, 19a54 <gl_rbtree_list_check_invariants@@Base+0x1580>
   19a44:	mov	x21, x9
   19a48:	ldr	x9, [x9]
   19a4c:	cbnz	x9, 19a44 <gl_rbtree_list_check_invariants@@Base+0x1570>
   19a50:	mov	x8, x21
   19a54:	str	x20, [x8]
   19a58:	mov	x8, x21
   19a5c:	str	x21, [x20, #16]
   19a60:	ldr	x9, [x8, #32]
   19a64:	add	x9, x9, #0x1
   19a68:	str	x9, [x8, #32]
   19a6c:	ldr	x8, [x8, #16]
   19a70:	cbnz	x8, 19a60 <gl_rbtree_list_check_invariants@@Base+0x158c>
   19a74:	b	19ac4 <gl_rbtree_list_check_invariants@@Base+0x15f0>
   19a78:	mov	x8, x21
   19a7c:	str	x20, [x8]
   19a80:	mov	x8, x21
   19a84:	str	x21, [x20, #16]
   19a88:	ldr	x9, [x8, #32]
   19a8c:	add	x9, x9, #0x1
   19a90:	str	x9, [x8, #32]
   19a94:	ldr	x8, [x8, #16]
   19a98:	cbnz	x8, 19a88 <gl_rbtree_list_check_invariants@@Base+0x15b4>
   19a9c:	b	19ac4 <gl_rbtree_list_check_invariants@@Base+0x15f0>
   19aa0:	mov	x8, x21
   19aa4:	str	x20, [x8]
   19aa8:	mov	x8, x21
   19aac:	str	x21, [x20, #16]
   19ab0:	ldr	x9, [x8, #32]
   19ab4:	add	x9, x9, #0x1
   19ab8:	str	x9, [x8, #32]
   19abc:	ldr	x8, [x8, #16]
   19ac0:	cbnz	x8, 19ab0 <gl_rbtree_list_check_invariants@@Base+0x15dc>
   19ac4:	mov	x0, x19
   19ac8:	mov	x1, x20
   19acc:	mov	x2, x21
   19ad0:	bl	19cb0 <gl_rbtree_list_check_invariants@@Base+0x17dc>
   19ad4:	mov	x0, x20
   19ad8:	ldp	x20, x19, [sp, #32]
   19adc:	ldp	x22, x21, [sp, #16]
   19ae0:	ldp	x29, x30, [sp], #48
   19ae4:	ret
   19ae8:	stp	x29, x30, [sp, #-64]!
   19aec:	stp	x22, x21, [sp, #32]
   19af0:	stp	x20, x19, [sp, #48]
   19af4:	ldr	x21, [x0, #40]
   19af8:	str	x23, [sp, #16]
   19afc:	mov	x29, sp
   19b00:	cbz	x21, 19b84 <gl_rbtree_list_check_invariants@@Base+0x16b0>
   19b04:	mov	x20, x2
   19b08:	mov	x19, x0
   19b0c:	mov	x22, x1
   19b10:	b	19b20 <gl_rbtree_list_check_invariants@@Base+0x164c>
   19b14:	add	x21, x21, #0x8
   19b18:	ldr	x21, [x21]
   19b1c:	cbz	x21, 19b84 <gl_rbtree_list_check_invariants@@Base+0x16b0>
   19b20:	ldr	x0, [x21, #40]
   19b24:	mov	x1, x20
   19b28:	blr	x22
   19b2c:	tbnz	w0, #31, 19b14 <gl_rbtree_list_check_invariants@@Base+0x1640>
   19b30:	cbnz	w0, 19b18 <gl_rbtree_list_check_invariants@@Base+0x1644>
   19b34:	ldr	x23, [x21]
   19b38:	cbnz	x23, 19b4c <gl_rbtree_list_check_invariants@@Base+0x1678>
   19b3c:	b	19b70 <gl_rbtree_list_check_invariants@@Base+0x169c>
   19b40:	add	x23, x23, #0x8
   19b44:	ldr	x23, [x23]
   19b48:	cbz	x23, 19b6c <gl_rbtree_list_check_invariants@@Base+0x1698>
   19b4c:	ldr	x0, [x23, #40]
   19b50:	mov	x1, x20
   19b54:	blr	x22
   19b58:	tbnz	w0, #31, 19b40 <gl_rbtree_list_check_invariants@@Base+0x166c>
   19b5c:	cbnz	w0, 19b9c <gl_rbtree_list_check_invariants@@Base+0x16c8>
   19b60:	mov	x21, x23
   19b64:	ldr	x23, [x23]
   19b68:	cbnz	x23, 19b4c <gl_rbtree_list_check_invariants@@Base+0x1678>
   19b6c:	cbz	x21, 19b84 <gl_rbtree_list_check_invariants@@Base+0x16b0>
   19b70:	mov	x0, x19
   19b74:	mov	x1, x21
   19b78:	bl	18f98 <gl_rbtree_list_check_invariants@@Base+0xac4>
   19b7c:	mov	w0, #0x1                   	// #1
   19b80:	b	19b88 <gl_rbtree_list_check_invariants@@Base+0x16b4>
   19b84:	mov	w0, wzr
   19b88:	ldp	x20, x19, [sp, #48]
   19b8c:	ldp	x22, x21, [sp, #32]
   19b90:	ldr	x23, [sp, #16]
   19b94:	ldp	x29, x30, [sp], #64
   19b98:	ret
   19b9c:	bl	a840 <abort@plt>
   19ba0:	stp	x29, x30, [sp, #-64]!
   19ba4:	stp	x22, x21, [sp, #32]
   19ba8:	mov	w21, w0
   19bac:	mov	w0, #0x30                  	// #48
   19bb0:	str	x23, [sp, #16]
   19bb4:	stp	x20, x19, [sp, #48]
   19bb8:	mov	x29, sp
   19bbc:	mov	x22, x2
   19bc0:	mov	x20, x1
   19bc4:	bl	a540 <malloc@plt>
   19bc8:	mov	x19, x0
   19bcc:	cbz	x0, 19c60 <gl_rbtree_list_check_invariants@@Base+0x178c>
   19bd0:	sub	x8, x20, #0x1
   19bd4:	lsr	x23, x8, #1
   19bd8:	cbz	x23, 19bfc <gl_rbtree_list_check_invariants@@Base+0x1728>
   19bdc:	sub	w0, w21, #0x1
   19be0:	mov	x1, x23
   19be4:	mov	x2, x22
   19be8:	bl	19ba0 <gl_rbtree_list_check_invariants@@Base+0x16cc>
   19bec:	str	x0, [x19]
   19bf0:	cbz	x0, 19c54 <gl_rbtree_list_check_invariants@@Base+0x1780>
   19bf4:	str	x19, [x0, #16]
   19bf8:	b	19c00 <gl_rbtree_list_check_invariants@@Base+0x172c>
   19bfc:	str	xzr, [x19]
   19c00:	add	x8, x22, x23, lsl #3
   19c04:	ldr	x9, [x8]
   19c08:	lsr	x1, x20, #1
   19c0c:	str	x9, [x19, #40]
   19c10:	cbz	x1, 19c30 <gl_rbtree_list_check_invariants@@Base+0x175c>
   19c14:	sub	w0, w21, #0x1
   19c18:	add	x2, x8, #0x8
   19c1c:	bl	19ba0 <gl_rbtree_list_check_invariants@@Base+0x16cc>
   19c20:	str	x0, [x19, #8]
   19c24:	cbz	x0, 19c48 <gl_rbtree_list_check_invariants@@Base+0x1774>
   19c28:	str	x19, [x0, #16]
   19c2c:	b	19c34 <gl_rbtree_list_check_invariants@@Base+0x1760>
   19c30:	str	xzr, [x19, #8]
   19c34:	cmp	w21, #0x0
   19c38:	cset	w8, eq  // eq = none
   19c3c:	str	w8, [x19, #24]
   19c40:	str	x20, [x19, #32]
   19c44:	b	19c60 <gl_rbtree_list_check_invariants@@Base+0x178c>
   19c48:	ldr	x0, [x19]
   19c4c:	cbz	x0, 19c54 <gl_rbtree_list_check_invariants@@Base+0x1780>
   19c50:	bl	19c78 <gl_rbtree_list_check_invariants@@Base+0x17a4>
   19c54:	mov	x0, x19
   19c58:	bl	a960 <free@plt>
   19c5c:	mov	x19, xzr
   19c60:	mov	x0, x19
   19c64:	ldp	x20, x19, [sp, #48]
   19c68:	ldp	x22, x21, [sp, #32]
   19c6c:	ldr	x23, [sp, #16]
   19c70:	ldp	x29, x30, [sp], #64
   19c74:	ret
   19c78:	stp	x29, x30, [sp, #-32]!
   19c7c:	str	x19, [sp, #16]
   19c80:	mov	x19, x0
   19c84:	ldr	x0, [x0]
   19c88:	mov	x29, sp
   19c8c:	cbz	x0, 19c94 <gl_rbtree_list_check_invariants@@Base+0x17c0>
   19c90:	bl	19c78 <gl_rbtree_list_check_invariants@@Base+0x17a4>
   19c94:	ldr	x0, [x19, #8]
   19c98:	cbz	x0, 19ca0 <gl_rbtree_list_check_invariants@@Base+0x17cc>
   19c9c:	bl	19c78 <gl_rbtree_list_check_invariants@@Base+0x17a4>
   19ca0:	mov	x0, x19
   19ca4:	ldr	x19, [sp, #16]
   19ca8:	ldp	x29, x30, [sp], #32
   19cac:	b	a960 <free@plt>
   19cb0:	stp	x29, x30, [sp, #-16]!
   19cb4:	mov	w9, #0x1                   	// #1
   19cb8:	mov	x29, sp
   19cbc:	ldr	w8, [x2, #24]
   19cc0:	cbz	w8, 19d40 <gl_rbtree_list_check_invariants@@Base+0x186c>
   19cc4:	ldr	x8, [x2, #16]
   19cc8:	ldp	x11, x10, [x8]
   19ccc:	cmp	x11, x2
   19cd0:	mov	x12, x10
   19cd4:	b.eq	19ce4 <gl_rbtree_list_check_invariants@@Base+0x1810>  // b.none
   19cd8:	cmp	x10, x2
   19cdc:	mov	x12, x11
   19ce0:	b.ne	19d3c <gl_rbtree_list_check_invariants@@Base+0x1868>  // b.any
   19ce4:	cbz	x12, 19d18 <gl_rbtree_list_check_invariants@@Base+0x1844>
   19ce8:	ldr	w13, [x12, #24]
   19cec:	cmp	w13, #0x1
   19cf0:	b.ne	19d18 <gl_rbtree_list_check_invariants@@Base+0x1844>  // b.any
   19cf4:	str	w9, [x1, #24]
   19cf8:	str	wzr, [x12, #24]
   19cfc:	str	wzr, [x2, #24]
   19d00:	ldr	x2, [x8, #16]
   19d04:	mov	x1, x8
   19d08:	cbnz	x2, 19cbc <gl_rbtree_list_check_invariants@@Base+0x17e8>
   19d0c:	mov	w12, wzr
   19d10:	mov	x2, x8
   19d14:	b	19f40 <gl_rbtree_list_check_invariants@@Base+0x1a6c>
   19d18:	ldr	x12, [x8, #16]
   19d1c:	cbz	x12, 19d4c <gl_rbtree_list_check_invariants@@Base+0x1878>
   19d20:	ldr	x9, [x12]
   19d24:	cmp	x9, x8
   19d28:	b.eq	19d70 <gl_rbtree_list_check_invariants@@Base+0x189c>  // b.none
   19d2c:	mov	x9, x12
   19d30:	ldr	x13, [x9, #8]!
   19d34:	cmp	x13, x8
   19d38:	b.eq	19d50 <gl_rbtree_list_check_invariants@@Base+0x187c>  // b.none
   19d3c:	bl	a840 <abort@plt>
   19d40:	mov	w12, #0x1                   	// #1
   19d44:	mov	x2, x1
   19d48:	b	19f40 <gl_rbtree_list_check_invariants@@Base+0x1a6c>
   19d4c:	add	x9, x0, #0x28
   19d50:	cmp	x11, x2
   19d54:	b.eq	19d7c <gl_rbtree_list_check_invariants@@Base+0x18a8>  // b.none
   19d58:	ldr	x13, [x2]
   19d5c:	cmp	x13, x1
   19d60:	b.eq	19d94 <gl_rbtree_list_check_invariants@@Base+0x18c0>  // b.none
   19d64:	mov	x10, x2
   19d68:	mov	x2, x1
   19d6c:	b	19ecc <gl_rbtree_list_check_invariants@@Base+0x19f8>
   19d70:	mov	x9, x12
   19d74:	cmp	x11, x2
   19d78:	b.ne	19d58 <gl_rbtree_list_check_invariants@@Base+0x1884>  // b.any
   19d7c:	ldr	x13, [x2, #8]
   19d80:	cmp	x13, x1
   19d84:	b.eq	19dd8 <gl_rbtree_list_check_invariants@@Base+0x1904>  // b.none
   19d88:	mov	x11, x2
   19d8c:	mov	x2, x1
   19d90:	b	19e38 <gl_rbtree_list_check_invariants@@Base+0x1964>
   19d94:	ldp	x10, x12, [x1]
   19d98:	ldr	x11, [x2, #8]
   19d9c:	str	x12, [x2]
   19da0:	stp	x2, x8, [x1, #8]
   19da4:	str	x1, [x2, #16]
   19da8:	cbz	x12, 19ea0 <gl_rbtree_list_check_invariants@@Base+0x19cc>
   19dac:	ldr	x13, [x12, #32]
   19db0:	str	x2, [x12, #16]
   19db4:	add	x12, x13, #0x1
   19db8:	cbz	x11, 19dc0 <gl_rbtree_list_check_invariants@@Base+0x18ec>
   19dbc:	ldr	x11, [x11, #32]
   19dc0:	add	x11, x11, x12
   19dc4:	str	x11, [x2, #32]
   19dc8:	cbz	x10, 19eac <gl_rbtree_list_check_invariants@@Base+0x19d8>
   19dcc:	ldr	x10, [x10, #32]
   19dd0:	add	x10, x10, #0x1
   19dd4:	b	19eb0 <gl_rbtree_list_check_invariants@@Base+0x19dc>
   19dd8:	ldp	x11, x10, [x1]
   19ddc:	ldr	x12, [x2]
   19de0:	str	x11, [x2, #8]
   19de4:	str	x2, [x1]
   19de8:	str	x8, [x1, #16]
   19dec:	str	x1, [x2, #16]
   19df0:	cbz	x11, 19df8 <gl_rbtree_list_check_invariants@@Base+0x1924>
   19df4:	str	x2, [x11, #16]
   19df8:	cbz	x12, 19f4c <gl_rbtree_list_check_invariants@@Base+0x1a78>
   19dfc:	ldr	x12, [x12, #32]
   19e00:	add	x12, x12, #0x1
   19e04:	cbz	x11, 19e0c <gl_rbtree_list_check_invariants@@Base+0x1938>
   19e08:	ldr	x11, [x11, #32]
   19e0c:	add	x11, x11, x12
   19e10:	str	x11, [x2, #32]
   19e14:	add	x11, x11, #0x1
   19e18:	cbz	x10, 19e20 <gl_rbtree_list_check_invariants@@Base+0x194c>
   19e1c:	ldr	x10, [x10, #32]
   19e20:	add	x10, x11, x10
   19e24:	str	x10, [x1, #32]
   19e28:	str	x1, [x8]
   19e2c:	ldr	x13, [x1, #8]
   19e30:	ldp	x10, x12, [x8, #8]
   19e34:	mov	x11, x1
   19e38:	ldr	x14, [x11]
   19e3c:	str	x13, [x8]
   19e40:	stp	x8, x12, [x11, #8]
   19e44:	str	x11, [x8, #16]
   19e48:	cbz	x13, 19e7c <gl_rbtree_list_check_invariants@@Base+0x19a8>
   19e4c:	ldr	x12, [x13, #32]
   19e50:	str	x8, [x13, #16]
   19e54:	add	x12, x12, #0x1
   19e58:	cbz	x10, 19e60 <gl_rbtree_list_check_invariants@@Base+0x198c>
   19e5c:	ldr	x10, [x10, #32]
   19e60:	add	x10, x10, x12
   19e64:	mov	w12, #0x1                   	// #1
   19e68:	str	x10, [x8, #32]
   19e6c:	cbz	x14, 19e88 <gl_rbtree_list_check_invariants@@Base+0x19b4>
   19e70:	ldr	x13, [x14, #32]
   19e74:	add	x13, x13, #0x1
   19e78:	b	19e8c <gl_rbtree_list_check_invariants@@Base+0x19b8>
   19e7c:	mov	w12, #0x1                   	// #1
   19e80:	cbnz	x10, 19e5c <gl_rbtree_list_check_invariants@@Base+0x1988>
   19e84:	b	19e60 <gl_rbtree_list_check_invariants@@Base+0x198c>
   19e88:	mov	w13, #0x1                   	// #1
   19e8c:	add	x10, x13, x10
   19e90:	str	x10, [x11, #32]
   19e94:	str	x11, [x9]
   19e98:	str	wzr, [x11, #24]
   19e9c:	b	19f3c <gl_rbtree_list_check_invariants@@Base+0x1a68>
   19ea0:	mov	w12, #0x1                   	// #1
   19ea4:	cbnz	x11, 19dbc <gl_rbtree_list_check_invariants@@Base+0x18e8>
   19ea8:	b	19dc0 <gl_rbtree_list_check_invariants@@Base+0x18ec>
   19eac:	mov	w10, #0x1                   	// #1
   19eb0:	add	x10, x10, x11
   19eb4:	str	x10, [x1, #32]
   19eb8:	str	x1, [x8, #8]
   19ebc:	ldr	x11, [x8]
   19ec0:	ldr	x13, [x1]
   19ec4:	ldr	x12, [x8, #16]
   19ec8:	mov	x10, x1
   19ecc:	ldr	x14, [x10, #8]
   19ed0:	str	x13, [x8, #8]
   19ed4:	str	x8, [x10]
   19ed8:	str	x12, [x10, #16]
   19edc:	str	x10, [x8, #16]
   19ee0:	cbz	x13, 19ee8 <gl_rbtree_list_check_invariants@@Base+0x1a14>
   19ee4:	str	x8, [x13, #16]
   19ee8:	cbz	x11, 19f00 <gl_rbtree_list_check_invariants@@Base+0x1a2c>
   19eec:	ldr	x11, [x11, #32]
   19ef0:	add	x11, x11, #0x1
   19ef4:	cbz	x13, 19f08 <gl_rbtree_list_check_invariants@@Base+0x1a34>
   19ef8:	ldr	x12, [x13, #32]
   19efc:	b	19f0c <gl_rbtree_list_check_invariants@@Base+0x1a38>
   19f00:	mov	w11, #0x1                   	// #1
   19f04:	cbnz	x13, 19ef8 <gl_rbtree_list_check_invariants@@Base+0x1a24>
   19f08:	mov	x12, xzr
   19f0c:	add	x11, x12, x11
   19f10:	str	x11, [x8, #32]
   19f14:	add	x11, x11, #0x1
   19f18:	cbz	x14, 19f24 <gl_rbtree_list_check_invariants@@Base+0x1a50>
   19f1c:	ldr	x12, [x14, #32]
   19f20:	b	19f28 <gl_rbtree_list_check_invariants@@Base+0x1a54>
   19f24:	mov	x12, xzr
   19f28:	add	x11, x11, x12
   19f2c:	mov	w12, #0x1                   	// #1
   19f30:	str	x11, [x10, #32]
   19f34:	str	x10, [x9]
   19f38:	str	wzr, [x10, #24]
   19f3c:	str	w12, [x8, #24]
   19f40:	str	w12, [x2, #24]
   19f44:	ldp	x29, x30, [sp], #16
   19f48:	ret
   19f4c:	mov	w12, #0x1                   	// #1
   19f50:	cbnz	x11, 19e08 <gl_rbtree_list_check_invariants@@Base+0x1934>
   19f54:	b	19e0c <gl_rbtree_list_check_invariants@@Base+0x1938>
   19f58:	stp	x29, x30, [sp, #-16]!
   19f5c:	add	x9, x0, #0x28
   19f60:	mov	w10, #0x1                   	// #1
   19f64:	mov	x29, sp
   19f68:	b	19f88 <gl_rbtree_list_check_invariants@@Base+0x1ab4>
   19f6c:	ldr	w8, [x2, #24]
   19f70:	cbnz	w8, 1a134 <gl_rbtree_list_check_invariants@@Base+0x1c60>
   19f74:	str	w10, [x12, #24]
   19f78:	ldr	x8, [x2, #16]
   19f7c:	mov	x1, x2
   19f80:	mov	x2, x8
   19f84:	cbz	x8, 1a3f0 <gl_rbtree_list_check_invariants@@Base+0x1f1c>
   19f88:	ldr	x13, [x2, #16]
   19f8c:	mov	x8, x9
   19f90:	cbz	x13, 19fb8 <gl_rbtree_list_check_invariants@@Base+0x1ae4>
   19f94:	ldr	x8, [x13]
   19f98:	cmp	x8, x2
   19f9c:	b.eq	19fb4 <gl_rbtree_list_check_invariants@@Base+0x1ae0>  // b.none
   19fa0:	mov	x8, x13
   19fa4:	ldr	x11, [x8, #8]!
   19fa8:	cmp	x11, x2
   19fac:	b.eq	19fb8 <gl_rbtree_list_check_invariants@@Base+0x1ae4>  // b.none
   19fb0:	b	1a404 <gl_rbtree_list_check_invariants@@Base+0x1f30>
   19fb4:	mov	x8, x13
   19fb8:	ldp	x12, x11, [x2]
   19fbc:	cmp	x12, x1
   19fc0:	b.eq	1a010 <gl_rbtree_list_check_invariants@@Base+0x1b3c>  // b.none
   19fc4:	cmp	x11, x1
   19fc8:	b.ne	1a404 <gl_rbtree_list_check_invariants@@Base+0x1f30>  // b.any
   19fcc:	ldr	w11, [x12, #24]
   19fd0:	cmp	w11, #0x1
   19fd4:	b.ne	1a0fc <gl_rbtree_list_check_invariants@@Base+0x1c28>  // b.any
   19fd8:	mov	x11, x12
   19fdc:	ldr	x14, [x12]
   19fe0:	ldr	x15, [x11, #8]!
   19fe4:	str	x15, [x2]
   19fe8:	str	x2, [x11]
   19fec:	str	x13, [x12, #16]
   19ff0:	str	x12, [x2, #16]
   19ff4:	cbz	x15, 1a0b8 <gl_rbtree_list_check_invariants@@Base+0x1be4>
   19ff8:	ldr	x13, [x15, #32]
   19ffc:	str	x2, [x15, #16]
   1a000:	add	x13, x13, #0x1
   1a004:	cbz	x1, 1a0c0 <gl_rbtree_list_check_invariants@@Base+0x1bec>
   1a008:	ldr	x15, [x1, #32]
   1a00c:	b	1a0c4 <gl_rbtree_list_check_invariants@@Base+0x1bf0>
   1a010:	ldr	w12, [x11, #24]
   1a014:	cmp	w12, #0x1
   1a018:	b.ne	1a080 <gl_rbtree_list_check_invariants@@Base+0x1bac>  // b.any
   1a01c:	ldp	x14, x12, [x11]
   1a020:	str	x14, [x2, #8]
   1a024:	str	x2, [x11]
   1a028:	str	x13, [x11, #16]
   1a02c:	str	x11, [x2, #16]
   1a030:	cbz	x14, 1a038 <gl_rbtree_list_check_invariants@@Base+0x1b64>
   1a034:	str	x2, [x14, #16]
   1a038:	cbz	x1, 1a128 <gl_rbtree_list_check_invariants@@Base+0x1c54>
   1a03c:	ldr	x13, [x1, #32]
   1a040:	add	x13, x13, #0x1
   1a044:	cbz	x14, 1a04c <gl_rbtree_list_check_invariants@@Base+0x1b78>
   1a048:	ldr	x14, [x14, #32]
   1a04c:	add	x13, x14, x13
   1a050:	str	x13, [x2, #32]
   1a054:	add	x13, x13, #0x1
   1a058:	cbz	x12, 1a060 <gl_rbtree_list_check_invariants@@Base+0x1b8c>
   1a05c:	ldr	x12, [x12, #32]
   1a060:	add	x12, x13, x12
   1a064:	str	x12, [x11, #32]
   1a068:	str	x11, [x8]
   1a06c:	str	w10, [x2, #24]
   1a070:	str	wzr, [x11, #24]
   1a074:	ldr	x12, [x2, #8]
   1a078:	mov	x8, x11
   1a07c:	mov	x11, x12
   1a080:	ldr	x13, [x11, #8]
   1a084:	cbz	x13, 1a094 <gl_rbtree_list_check_invariants@@Base+0x1bc0>
   1a088:	ldr	w12, [x13, #24]
   1a08c:	cmp	w12, #0x1
   1a090:	b.eq	1a260 <gl_rbtree_list_check_invariants@@Base+0x1d8c>  // b.none
   1a094:	ldr	x12, [x11]
   1a098:	cbz	x12, 1a0a8 <gl_rbtree_list_check_invariants@@Base+0x1bd4>
   1a09c:	ldr	w14, [x12, #24]
   1a0a0:	cmp	w14, #0x1
   1a0a4:	b.eq	1a2c8 <gl_rbtree_list_check_invariants@@Base+0x1df4>  // b.none
   1a0a8:	ldr	w8, [x2, #24]
   1a0ac:	cbnz	w8, 1a254 <gl_rbtree_list_check_invariants@@Base+0x1d80>
   1a0b0:	mov	x12, x11
   1a0b4:	b	19f74 <gl_rbtree_list_check_invariants@@Base+0x1aa0>
   1a0b8:	mov	w13, #0x1                   	// #1
   1a0bc:	cbnz	x1, 1a008 <gl_rbtree_list_check_invariants@@Base+0x1b34>
   1a0c0:	mov	x15, xzr
   1a0c4:	add	x13, x15, x13
   1a0c8:	str	x13, [x2, #32]
   1a0cc:	cbz	x14, 1a0dc <gl_rbtree_list_check_invariants@@Base+0x1c08>
   1a0d0:	ldr	x14, [x14, #32]
   1a0d4:	add	x14, x14, #0x1
   1a0d8:	b	1a0e0 <gl_rbtree_list_check_invariants@@Base+0x1c0c>
   1a0dc:	mov	w14, #0x1                   	// #1
   1a0e0:	add	x13, x14, x13
   1a0e4:	str	x13, [x12, #32]
   1a0e8:	str	x12, [x8]
   1a0ec:	str	w10, [x2, #24]
   1a0f0:	str	wzr, [x12, #24]
   1a0f4:	ldr	x12, [x2]
   1a0f8:	mov	x8, x11
   1a0fc:	ldr	x13, [x12]
   1a100:	cbz	x13, 1a110 <gl_rbtree_list_check_invariants@@Base+0x1c3c>
   1a104:	ldr	w11, [x13, #24]
   1a108:	cmp	w11, #0x1
   1a10c:	b.eq	1a144 <gl_rbtree_list_check_invariants@@Base+0x1c70>  // b.none
   1a110:	ldr	x11, [x12, #8]
   1a114:	cbz	x11, 19f6c <gl_rbtree_list_check_invariants@@Base+0x1a98>
   1a118:	ldr	w14, [x11, #24]
   1a11c:	cmp	w14, #0x1
   1a120:	b.ne	19f6c <gl_rbtree_list_check_invariants@@Base+0x1a98>  // b.any
   1a124:	b	1a1a8 <gl_rbtree_list_check_invariants@@Base+0x1cd4>
   1a128:	mov	w13, #0x1                   	// #1
   1a12c:	cbnz	x14, 1a048 <gl_rbtree_list_check_invariants@@Base+0x1b74>
   1a130:	b	1a04c <gl_rbtree_list_check_invariants@@Base+0x1b78>
   1a134:	str	wzr, [x2, #24]
   1a138:	mov	w8, #0x1                   	// #1
   1a13c:	mov	x11, x12
   1a140:	b	1a3ec <gl_rbtree_list_check_invariants@@Base+0x1f18>
   1a144:	ldr	x10, [x12, #8]
   1a148:	ldr	x9, [x2, #8]
   1a14c:	str	x10, [x2]
   1a150:	str	x2, [x12, #8]
   1a154:	ldr	x11, [x2, #16]
   1a158:	str	x11, [x12, #16]
   1a15c:	str	x12, [x2, #16]
   1a160:	cbz	x10, 1a314 <gl_rbtree_list_check_invariants@@Base+0x1e40>
   1a164:	ldr	x11, [x10, #32]
   1a168:	str	x2, [x10, #16]
   1a16c:	add	x10, x11, #0x1
   1a170:	cbz	x9, 1a178 <gl_rbtree_list_check_invariants@@Base+0x1ca4>
   1a174:	ldr	x9, [x9, #32]
   1a178:	add	x9, x9, x10
   1a17c:	str	x9, [x2, #32]
   1a180:	ldr	x10, [x13, #32]
   1a184:	add	x9, x9, x10
   1a188:	add	x9, x9, #0x1
   1a18c:	str	x9, [x12, #32]
   1a190:	str	x12, [x8]
   1a194:	ldr	w8, [x2, #24]
   1a198:	str	w8, [x12, #24]
   1a19c:	str	wzr, [x2, #24]
   1a1a0:	ldr	x11, [x12]
   1a1a4:	b	1a3e8 <gl_rbtree_list_check_invariants@@Base+0x1f14>
   1a1a8:	ldp	x10, x9, [x11]
   1a1ac:	str	x10, [x12, #8]
   1a1b0:	str	x12, [x11]
   1a1b4:	ldr	x14, [x12, #16]
   1a1b8:	str	x14, [x11, #16]
   1a1bc:	str	x11, [x12, #16]
   1a1c0:	cbz	x10, 1a1c8 <gl_rbtree_list_check_invariants@@Base+0x1cf4>
   1a1c4:	str	x12, [x10, #16]
   1a1c8:	cbz	x13, 1a320 <gl_rbtree_list_check_invariants@@Base+0x1e4c>
   1a1cc:	ldr	x13, [x13, #32]
   1a1d0:	add	x13, x13, #0x1
   1a1d4:	cbz	x10, 1a1dc <gl_rbtree_list_check_invariants@@Base+0x1d08>
   1a1d8:	ldr	x10, [x10, #32]
   1a1dc:	add	x10, x10, x13
   1a1e0:	str	x10, [x12, #32]
   1a1e4:	add	x10, x10, #0x1
   1a1e8:	cbz	x9, 1a1f0 <gl_rbtree_list_check_invariants@@Base+0x1d1c>
   1a1ec:	ldr	x9, [x9, #32]
   1a1f0:	add	x9, x10, x9
   1a1f4:	mov	w10, #0x1                   	// #1
   1a1f8:	str	x9, [x11, #32]
   1a1fc:	str	x11, [x2]
   1a200:	str	w10, [x12, #24]
   1a204:	ldp	x9, x13, [x11]
   1a208:	str	wzr, [x11, #24]
   1a20c:	ldr	x12, [x2, #8]
   1a210:	str	x13, [x2]
   1a214:	str	x2, [x11, #8]
   1a218:	ldr	x14, [x2, #16]
   1a21c:	str	x14, [x11, #16]
   1a220:	str	x11, [x2, #16]
   1a224:	cbz	x13, 1a234 <gl_rbtree_list_check_invariants@@Base+0x1d60>
   1a228:	ldr	x10, [x13, #32]
   1a22c:	str	x2, [x13, #16]
   1a230:	add	x10, x10, #0x1
   1a234:	cbz	x12, 1a23c <gl_rbtree_list_check_invariants@@Base+0x1d68>
   1a238:	ldr	x12, [x12, #32]
   1a23c:	add	x10, x12, x10
   1a240:	str	x10, [x2, #32]
   1a244:	cbz	x9, 1a32c <gl_rbtree_list_check_invariants@@Base+0x1e58>
   1a248:	ldr	x9, [x9, #32]
   1a24c:	add	x9, x9, #0x1
   1a250:	b	1a330 <gl_rbtree_list_check_invariants@@Base+0x1e5c>
   1a254:	mov	w8, #0x1                   	// #1
   1a258:	str	wzr, [x2, #24]
   1a25c:	b	1a3ec <gl_rbtree_list_check_invariants@@Base+0x1f18>
   1a260:	ldr	x9, [x11]
   1a264:	ldr	x10, [x2]
   1a268:	str	x9, [x2, #8]
   1a26c:	str	x2, [x11]
   1a270:	ldr	x12, [x2, #16]
   1a274:	str	x12, [x11, #16]
   1a278:	str	x11, [x2, #16]
   1a27c:	cbz	x9, 1a284 <gl_rbtree_list_check_invariants@@Base+0x1db0>
   1a280:	str	x2, [x9, #16]
   1a284:	cbz	x10, 1a350 <gl_rbtree_list_check_invariants@@Base+0x1e7c>
   1a288:	ldr	x10, [x10, #32]
   1a28c:	add	x10, x10, #0x1
   1a290:	cbz	x9, 1a298 <gl_rbtree_list_check_invariants@@Base+0x1dc4>
   1a294:	ldr	x9, [x9, #32]
   1a298:	add	x9, x9, x10
   1a29c:	str	x9, [x2, #32]
   1a2a0:	ldr	x10, [x13, #32]
   1a2a4:	add	x9, x9, x10
   1a2a8:	add	x9, x9, #0x1
   1a2ac:	str	x9, [x11, #32]
   1a2b0:	str	x11, [x8]
   1a2b4:	ldr	w8, [x2, #24]
   1a2b8:	str	w8, [x11, #24]
   1a2bc:	str	wzr, [x2, #24]
   1a2c0:	ldr	x11, [x11, #8]
   1a2c4:	b	1a3e8 <gl_rbtree_list_check_invariants@@Base+0x1f14>
   1a2c8:	ldp	x9, x10, [x12]
   1a2cc:	str	x10, [x11]
   1a2d0:	str	x11, [x12, #8]
   1a2d4:	ldr	x14, [x11, #16]
   1a2d8:	str	x14, [x12, #16]
   1a2dc:	str	x12, [x11, #16]
   1a2e0:	cbz	x10, 1a35c <gl_rbtree_list_check_invariants@@Base+0x1e88>
   1a2e4:	ldr	x14, [x10, #32]
   1a2e8:	str	x11, [x10, #16]
   1a2ec:	add	x10, x14, #0x1
   1a2f0:	cbz	x13, 1a2f8 <gl_rbtree_list_check_invariants@@Base+0x1e24>
   1a2f4:	ldr	x13, [x13, #32]
   1a2f8:	add	x13, x13, x10
   1a2fc:	mov	w10, #0x1                   	// #1
   1a300:	str	x13, [x11, #32]
   1a304:	cbz	x9, 1a368 <gl_rbtree_list_check_invariants@@Base+0x1e94>
   1a308:	ldr	x9, [x9, #32]
   1a30c:	add	x9, x9, #0x1
   1a310:	b	1a36c <gl_rbtree_list_check_invariants@@Base+0x1e98>
   1a314:	mov	w10, #0x1                   	// #1
   1a318:	cbnz	x9, 1a174 <gl_rbtree_list_check_invariants@@Base+0x1ca0>
   1a31c:	b	1a178 <gl_rbtree_list_check_invariants@@Base+0x1ca4>
   1a320:	mov	w13, #0x1                   	// #1
   1a324:	cbnz	x10, 1a1d8 <gl_rbtree_list_check_invariants@@Base+0x1d04>
   1a328:	b	1a1dc <gl_rbtree_list_check_invariants@@Base+0x1d08>
   1a32c:	mov	w9, #0x1                   	// #1
   1a330:	add	x9, x9, x10
   1a334:	str	x9, [x11, #32]
   1a338:	str	x11, [x8]
   1a33c:	ldr	w8, [x2, #24]
   1a340:	str	w8, [x11, #24]
   1a344:	str	wzr, [x2, #24]
   1a348:	ldr	x11, [x11]
   1a34c:	b	1a3e8 <gl_rbtree_list_check_invariants@@Base+0x1f14>
   1a350:	mov	w10, #0x1                   	// #1
   1a354:	cbnz	x9, 1a294 <gl_rbtree_list_check_invariants@@Base+0x1dc0>
   1a358:	b	1a298 <gl_rbtree_list_check_invariants@@Base+0x1dc4>
   1a35c:	mov	w10, #0x1                   	// #1
   1a360:	cbnz	x13, 1a2f4 <gl_rbtree_list_check_invariants@@Base+0x1e20>
   1a364:	b	1a2f8 <gl_rbtree_list_check_invariants@@Base+0x1e24>
   1a368:	mov	w9, #0x1                   	// #1
   1a36c:	add	x9, x9, x13
   1a370:	str	x9, [x12, #32]
   1a374:	str	x12, [x2, #8]
   1a378:	str	w10, [x11, #24]
   1a37c:	ldp	x10, x9, [x12]
   1a380:	str	wzr, [x12, #24]
   1a384:	ldr	x11, [x2]
   1a388:	str	x10, [x2, #8]
   1a38c:	str	x2, [x12]
   1a390:	ldr	x13, [x2, #16]
   1a394:	str	x13, [x12, #16]
   1a398:	str	x12, [x2, #16]
   1a39c:	cbz	x10, 1a3a4 <gl_rbtree_list_check_invariants@@Base+0x1ed0>
   1a3a0:	str	x2, [x10, #16]
   1a3a4:	cbz	x11, 1a3f8 <gl_rbtree_list_check_invariants@@Base+0x1f24>
   1a3a8:	ldr	x11, [x11, #32]
   1a3ac:	add	x11, x11, #0x1
   1a3b0:	cbz	x10, 1a3b8 <gl_rbtree_list_check_invariants@@Base+0x1ee4>
   1a3b4:	ldr	x10, [x10, #32]
   1a3b8:	add	x10, x10, x11
   1a3bc:	str	x10, [x2, #32]
   1a3c0:	add	x10, x10, #0x1
   1a3c4:	cbz	x9, 1a3cc <gl_rbtree_list_check_invariants@@Base+0x1ef8>
   1a3c8:	ldr	x9, [x9, #32]
   1a3cc:	add	x9, x10, x9
   1a3d0:	str	x9, [x12, #32]
   1a3d4:	str	x12, [x8]
   1a3d8:	ldr	w8, [x2, #24]
   1a3dc:	str	w8, [x12, #24]
   1a3e0:	str	wzr, [x2, #24]
   1a3e4:	ldr	x11, [x12, #8]
   1a3e8:	mov	w8, wzr
   1a3ec:	str	w8, [x11, #24]
   1a3f0:	ldp	x29, x30, [sp], #16
   1a3f4:	ret
   1a3f8:	mov	w11, #0x1                   	// #1
   1a3fc:	cbnz	x10, 1a3b4 <gl_rbtree_list_check_invariants@@Base+0x1ee0>
   1a400:	b	1a3b8 <gl_rbtree_list_check_invariants@@Base+0x1ee4>
   1a404:	bl	a840 <abort@plt>

000000000001a408 <renameatu@@Base>:
   1a408:	sub	sp, sp, #0x150
   1a40c:	stp	x29, x30, [sp, #256]
   1a410:	stp	x28, x25, [sp, #272]
   1a414:	stp	x24, x23, [sp, #288]
   1a418:	stp	x22, x21, [sp, #304]
   1a41c:	stp	x20, x19, [sp, #320]
   1a420:	add	x29, sp, #0x100
   1a424:	mov	w25, w4
   1a428:	mov	x19, x3
   1a42c:	mov	w20, w2
   1a430:	mov	x21, x1
   1a434:	mov	w22, w0
   1a438:	bl	a970 <renameat2@plt>
   1a43c:	mov	w24, w0
   1a440:	bl	ad80 <__errno_location@plt>
   1a444:	tbz	w24, #31, 1a5a8 <renameatu@@Base+0x1a0>
   1a448:	ldr	w8, [x0]
   1a44c:	mov	x23, x0
   1a450:	cmp	w8, #0x16
   1a454:	b.eq	1a468 <renameatu@@Base+0x60>  // b.none
   1a458:	cmp	w8, #0x5f
   1a45c:	b.eq	1a468 <renameatu@@Base+0x60>  // b.none
   1a460:	cmp	w8, #0x26
   1a464:	b.ne	1a5a8 <renameatu@@Base+0x1a0>  // b.any
   1a468:	cbz	w25, 1a4c0 <renameatu@@Base+0xb8>
   1a46c:	cmp	w25, #0x1
   1a470:	b.ne	1a4ac <renameatu@@Base+0xa4>  // b.any
   1a474:	mov	x3, sp
   1a478:	mov	w4, #0x100                 	// #256
   1a47c:	mov	w0, wzr
   1a480:	mov	w1, w20
   1a484:	mov	x2, x19
   1a488:	bl	aea0 <__fxstatat@plt>
   1a48c:	cbz	w0, 1a4a4 <renameatu@@Base+0x9c>
   1a490:	ldr	w8, [x23]
   1a494:	cmp	w8, #0x2
   1a498:	b.eq	1a4bc <renameatu@@Base+0xb4>  // b.none
   1a49c:	cmp	w8, #0x4b
   1a4a0:	b.ne	1a4b4 <renameatu@@Base+0xac>  // b.any
   1a4a4:	mov	w8, #0x11                  	// #17
   1a4a8:	b	1a4b0 <renameatu@@Base+0xa8>
   1a4ac:	mov	w8, #0x5f                  	// #95
   1a4b0:	str	w8, [x23]
   1a4b4:	mov	w24, #0xffffffff            	// #-1
   1a4b8:	b	1a5a8 <renameatu@@Base+0x1a0>
   1a4bc:	mov	w25, #0x1                   	// #1
   1a4c0:	mov	x0, x21
   1a4c4:	bl	a280 <strlen@plt>
   1a4c8:	mov	x24, x0
   1a4cc:	mov	x0, x19
   1a4d0:	bl	a280 <strlen@plt>
   1a4d4:	cbz	x24, 1a590 <renameatu@@Base+0x188>
   1a4d8:	cbz	x0, 1a590 <renameatu@@Base+0x188>
   1a4dc:	add	x8, x24, x21
   1a4e0:	ldurb	w8, [x8, #-1]
   1a4e4:	cmp	w8, #0x2f
   1a4e8:	b.eq	1a4fc <renameatu@@Base+0xf4>  // b.none
   1a4ec:	add	x8, x0, x19
   1a4f0:	ldurb	w8, [x8, #-1]
   1a4f4:	cmp	w8, #0x2f
   1a4f8:	b.ne	1a590 <renameatu@@Base+0x188>  // b.any
   1a4fc:	add	x3, sp, #0x80
   1a500:	mov	w4, #0x100                 	// #256
   1a504:	mov	w0, wzr
   1a508:	mov	w1, w22
   1a50c:	mov	x2, x21
   1a510:	bl	aea0 <__fxstatat@plt>
   1a514:	cbnz	w0, 1a4b4 <renameatu@@Base+0xac>
   1a518:	cbz	w25, 1a534 <renameatu@@Base+0x12c>
   1a51c:	ldr	w8, [sp, #144]
   1a520:	and	w8, w8, #0xf000
   1a524:	cmp	w8, #0x4, lsl #12
   1a528:	b.eq	1a590 <renameatu@@Base+0x188>  // b.none
   1a52c:	mov	w8, #0x2                   	// #2
   1a530:	b	1a4b0 <renameatu@@Base+0xa8>
   1a534:	mov	x3, sp
   1a538:	mov	w4, #0x100                 	// #256
   1a53c:	mov	w0, wzr
   1a540:	mov	w1, w20
   1a544:	mov	x2, x19
   1a548:	bl	aea0 <__fxstatat@plt>
   1a54c:	cbz	w0, 1a570 <renameatu@@Base+0x168>
   1a550:	ldr	w8, [x23]
   1a554:	cmp	w8, #0x2
   1a558:	b.ne	1a4b4 <renameatu@@Base+0xac>  // b.any
   1a55c:	ldr	w8, [sp, #144]
   1a560:	and	w8, w8, #0xf000
   1a564:	cmp	w8, #0x4, lsl #12
   1a568:	b.ne	1a4b4 <renameatu@@Base+0xac>  // b.any
   1a56c:	b	1a590 <renameatu@@Base+0x188>
   1a570:	ldr	w8, [sp, #16]
   1a574:	and	w8, w8, #0xf000
   1a578:	cmp	w8, #0x4, lsl #12
   1a57c:	b.ne	1a5c8 <renameatu@@Base+0x1c0>  // b.any
   1a580:	ldr	w8, [sp, #144]
   1a584:	and	w8, w8, #0xf000
   1a588:	cmp	w8, #0x4, lsl #12
   1a58c:	b.ne	1a5d0 <renameatu@@Base+0x1c8>  // b.any
   1a590:	mov	w0, w22
   1a594:	mov	x1, x21
   1a598:	mov	w2, w20
   1a59c:	mov	x3, x19
   1a5a0:	bl	a9b0 <renameat@plt>
   1a5a4:	mov	w24, w0
   1a5a8:	mov	w0, w24
   1a5ac:	ldp	x20, x19, [sp, #320]
   1a5b0:	ldp	x22, x21, [sp, #304]
   1a5b4:	ldp	x24, x23, [sp, #288]
   1a5b8:	ldp	x28, x25, [sp, #272]
   1a5bc:	ldp	x29, x30, [sp, #256]
   1a5c0:	add	sp, sp, #0x150
   1a5c4:	ret
   1a5c8:	mov	w8, #0x14                  	// #20
   1a5cc:	b	1a4b0 <renameatu@@Base+0xa8>
   1a5d0:	mov	w8, #0x15                  	// #21
   1a5d4:	b	1a4b0 <renameatu@@Base+0xa8>

000000000001a5d8 <same_name@@Base>:
   1a5d8:	mov	x8, x0
   1a5dc:	mov	w0, #0xffffff9c            	// #-100
   1a5e0:	mov	w2, #0xffffff9c            	// #-100
   1a5e4:	mov	x3, x1
   1a5e8:	mov	x1, x8
   1a5ec:	b	a260 <same_nameat@plt>

000000000001a5f0 <same_nameat@@Base>:
   1a5f0:	sub	sp, sp, #0x150
   1a5f4:	stp	x22, x21, [sp, #304]
   1a5f8:	mov	w21, w0
   1a5fc:	mov	x0, x1
   1a600:	stp	x29, x30, [sp, #256]
   1a604:	stp	x28, x25, [sp, #272]
   1a608:	stp	x24, x23, [sp, #288]
   1a60c:	stp	x20, x19, [sp, #320]
   1a610:	add	x29, sp, #0x100
   1a614:	mov	x20, x3
   1a618:	mov	w19, w2
   1a61c:	mov	x22, x1
   1a620:	bl	a6c0 <last_component@plt>
   1a624:	mov	x23, x0
   1a628:	mov	x0, x20
   1a62c:	bl	a6c0 <last_component@plt>
   1a630:	mov	x24, x0
   1a634:	mov	x0, x23
   1a638:	bl	a1f0 <base_len@plt>
   1a63c:	mov	x25, x0
   1a640:	mov	x0, x24
   1a644:	bl	a1f0 <base_len@plt>
   1a648:	cmp	x25, x0
   1a64c:	b.ne	1a664 <same_nameat@@Base+0x74>  // b.any
   1a650:	mov	x0, x23
   1a654:	mov	x1, x24
   1a658:	mov	x2, x25
   1a65c:	bl	a6e0 <bcmp@plt>
   1a660:	cbz	w0, 1a688 <same_nameat@@Base+0x98>
   1a664:	mov	w19, wzr
   1a668:	mov	w0, w19
   1a66c:	ldp	x20, x19, [sp, #320]
   1a670:	ldp	x22, x21, [sp, #304]
   1a674:	ldp	x24, x23, [sp, #288]
   1a678:	ldp	x28, x25, [sp, #272]
   1a67c:	ldp	x29, x30, [sp, #256]
   1a680:	add	sp, sp, #0x150
   1a684:	ret
   1a688:	mov	x0, x22
   1a68c:	bl	a5c0 <dir_name@plt>
   1a690:	mov	x22, x0
   1a694:	add	x3, sp, #0x80
   1a698:	mov	w4, #0x100                 	// #256
   1a69c:	mov	w0, wzr
   1a6a0:	mov	w1, w21
   1a6a4:	mov	x2, x22
   1a6a8:	bl	aea0 <__fxstatat@plt>
   1a6ac:	cbz	w0, 1a6cc <same_nameat@@Base+0xdc>
   1a6b0:	bl	ad80 <__errno_location@plt>
   1a6b4:	ldr	w1, [x0]
   1a6b8:	adrp	x2, 2f000 <vasnprintf@@Base+0x124c>
   1a6bc:	add	x2, x2, #0x3a8
   1a6c0:	mov	w0, #0x1                   	// #1
   1a6c4:	mov	x3, x22
   1a6c8:	bl	a2a0 <error@plt>
   1a6cc:	mov	x0, x22
   1a6d0:	bl	a960 <free@plt>
   1a6d4:	mov	x0, x20
   1a6d8:	bl	a5c0 <dir_name@plt>
   1a6dc:	mov	x20, x0
   1a6e0:	mov	x3, sp
   1a6e4:	mov	w4, #0x100                 	// #256
   1a6e8:	mov	w0, wzr
   1a6ec:	mov	w1, w19
   1a6f0:	mov	x2, x20
   1a6f4:	bl	aea0 <__fxstatat@plt>
   1a6f8:	cbz	w0, 1a718 <same_nameat@@Base+0x128>
   1a6fc:	bl	ad80 <__errno_location@plt>
   1a700:	ldr	w1, [x0]
   1a704:	adrp	x2, 2f000 <vasnprintf@@Base+0x124c>
   1a708:	add	x2, x2, #0x3a8
   1a70c:	mov	w0, #0x1                   	// #1
   1a710:	mov	x3, x20
   1a714:	bl	a2a0 <error@plt>
   1a718:	ldp	x11, x8, [sp]
   1a71c:	ldp	x10, x9, [sp, #128]
   1a720:	mov	x0, x20
   1a724:	cmp	x9, x8
   1a728:	cset	w8, eq  // eq = none
   1a72c:	cmp	x10, x11
   1a730:	cset	w9, eq  // eq = none
   1a734:	and	w19, w8, w9
   1a738:	bl	a960 <free@plt>
   1a73c:	b	1a668 <same_nameat@@Base+0x78>

000000000001a740 <save_cwd@@Base>:
   1a740:	stp	x29, x30, [sp, #-32]!
   1a744:	str	x19, [sp, #16]
   1a748:	mov	x19, x0
   1a74c:	str	xzr, [x0, #8]
   1a750:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1a754:	add	x0, x0, #0x2d2
   1a758:	mov	w1, #0x80000               	// #524288
   1a75c:	mov	x29, sp
   1a760:	bl	a590 <open@plt>
   1a764:	mov	w1, #0x80000               	// #524288
   1a768:	str	w0, [x19]
   1a76c:	bl	ad20 <fd_safer_flag@plt>
   1a770:	str	w0, [x19]
   1a774:	tbnz	w0, #31, 1a780 <save_cwd@@Base+0x40>
   1a778:	mov	w0, wzr
   1a77c:	b	1a798 <save_cwd@@Base+0x58>
   1a780:	mov	x0, xzr
   1a784:	mov	x1, xzr
   1a788:	bl	a250 <getcwd@plt>
   1a78c:	cmp	x0, #0x0
   1a790:	str	x0, [x19, #8]
   1a794:	csetm	w0, eq  // eq = none
   1a798:	ldr	x19, [sp, #16]
   1a79c:	ldp	x29, x30, [sp], #32
   1a7a0:	ret

000000000001a7a4 <restore_cwd@@Base>:
   1a7a4:	mov	x8, x0
   1a7a8:	ldr	w0, [x0]
   1a7ac:	tbnz	w0, #31, 1a7b4 <restore_cwd@@Base+0x10>
   1a7b0:	b	a2c0 <fchdir@plt>
   1a7b4:	ldr	x0, [x8, #8]
   1a7b8:	b	a390 <chdir_long@plt>

000000000001a7bc <free_cwd@@Base>:
   1a7bc:	stp	x29, x30, [sp, #-32]!
   1a7c0:	str	x19, [sp, #16]
   1a7c4:	mov	x19, x0
   1a7c8:	ldr	w0, [x0]
   1a7cc:	mov	x29, sp
   1a7d0:	tbnz	w0, #31, 1a7d8 <free_cwd@@Base+0x1c>
   1a7d4:	bl	a790 <close@plt>
   1a7d8:	ldr	x0, [x19, #8]
   1a7dc:	ldr	x19, [sp, #16]
   1a7e0:	ldp	x29, x30, [sp], #32
   1a7e4:	b	a960 <free@plt>

000000000001a7e8 <gl_scratch_buffer_grow@@Base>:
   1a7e8:	stp	x29, x30, [sp, #-48]!
   1a7ec:	stp	x20, x19, [sp, #32]
   1a7f0:	mov	x19, x0
   1a7f4:	ldr	x0, [x0]
   1a7f8:	ldr	x8, [x19, #8]
   1a7fc:	str	x21, [sp, #16]
   1a800:	add	x21, x19, #0x10
   1a804:	cmp	x0, x21
   1a808:	lsl	x20, x8, #1
   1a80c:	mov	x29, sp
   1a810:	b.eq	1a81c <gl_scratch_buffer_grow@@Base+0x34>  // b.none
   1a814:	bl	a960 <free@plt>
   1a818:	ldr	x8, [x19, #8]
   1a81c:	cmp	x20, x8
   1a820:	b.cc	1a84c <gl_scratch_buffer_grow@@Base+0x64>  // b.lo, b.ul, b.last
   1a824:	mov	x0, x20
   1a828:	bl	a540 <malloc@plt>
   1a82c:	cbz	x0, 1a858 <gl_scratch_buffer_grow@@Base+0x70>
   1a830:	str	x0, [x19]
   1a834:	mov	w0, #0x1                   	// #1
   1a838:	str	x20, [x19, #8]
   1a83c:	ldp	x20, x19, [sp, #32]
   1a840:	ldr	x21, [sp, #16]
   1a844:	ldp	x29, x30, [sp], #48
   1a848:	ret
   1a84c:	bl	ad80 <__errno_location@plt>
   1a850:	mov	w8, #0xc                   	// #12
   1a854:	str	w8, [x0]
   1a858:	mov	w0, wzr
   1a85c:	str	x21, [x19]
   1a860:	mov	w20, #0x400                 	// #1024
   1a864:	b	1a838 <gl_scratch_buffer_grow@@Base+0x50>

000000000001a868 <gl_scratch_buffer_grow_preserve@@Base>:
   1a868:	stp	x29, x30, [sp, #-64]!
   1a86c:	stp	x24, x23, [sp, #16]
   1a870:	stp	x22, x21, [sp, #32]
   1a874:	stp	x20, x19, [sp, #48]
   1a878:	ldp	x21, x23, [x0]
   1a87c:	add	x24, x0, #0x10
   1a880:	mov	x19, x0
   1a884:	mov	x29, sp
   1a888:	cmp	x21, x24
   1a88c:	lsl	x20, x23, #1
   1a890:	b.eq	1a8b8 <gl_scratch_buffer_grow_preserve@@Base+0x50>  // b.none
   1a894:	cmp	x20, x23
   1a898:	b.cc	1a8f4 <gl_scratch_buffer_grow_preserve@@Base+0x8c>  // b.lo, b.ul, b.last
   1a89c:	mov	x0, x21
   1a8a0:	mov	x1, x20
   1a8a4:	bl	a720 <realloc@plt>
   1a8a8:	mov	x22, x0
   1a8ac:	cbnz	x0, 1a8d4 <gl_scratch_buffer_grow_preserve@@Base+0x6c>
   1a8b0:	ldr	x21, [x19]
   1a8b4:	b	1a900 <gl_scratch_buffer_grow_preserve@@Base+0x98>
   1a8b8:	mov	x0, x20
   1a8bc:	bl	a540 <malloc@plt>
   1a8c0:	cbz	x0, 1a8e0 <gl_scratch_buffer_grow_preserve@@Base+0x78>
   1a8c4:	mov	x1, x21
   1a8c8:	mov	x2, x23
   1a8cc:	mov	x22, x0
   1a8d0:	bl	a210 <memcpy@plt>
   1a8d4:	str	x22, [x19]
   1a8d8:	mov	w0, #0x1                   	// #1
   1a8dc:	str	x20, [x19, #8]
   1a8e0:	ldp	x20, x19, [sp, #48]
   1a8e4:	ldp	x22, x21, [sp, #32]
   1a8e8:	ldp	x24, x23, [sp, #16]
   1a8ec:	ldp	x29, x30, [sp], #64
   1a8f0:	ret
   1a8f4:	bl	ad80 <__errno_location@plt>
   1a8f8:	mov	w8, #0xc                   	// #12
   1a8fc:	str	w8, [x0]
   1a900:	mov	x0, x21
   1a904:	bl	a960 <free@plt>
   1a908:	mov	w0, wzr
   1a90c:	mov	w20, #0x400                 	// #1024
   1a910:	str	x24, [x19]
   1a914:	b	1a8dc <gl_scratch_buffer_grow_preserve@@Base+0x74>

000000000001a918 <gl_scratch_buffer_set_array_size@@Base>:
   1a918:	stp	x29, x30, [sp, #-48]!
   1a91c:	umulh	x8, x1, x2
   1a920:	cmp	xzr, x8
   1a924:	stp	x20, x19, [sp, #32]
   1a928:	mov	x19, x0
   1a92c:	cset	w8, ne  // ne = any
   1a930:	str	x21, [sp, #16]
   1a934:	mov	x29, sp
   1a938:	cbz	x1, 1a980 <gl_scratch_buffer_set_array_size@@Base+0x68>
   1a93c:	orr	x9, x2, x1
   1a940:	lsr	x9, x9, #32
   1a944:	cbz	x9, 1a980 <gl_scratch_buffer_set_array_size@@Base+0x68>
   1a948:	cbz	w8, 1a980 <gl_scratch_buffer_set_array_size@@Base+0x68>
   1a94c:	mov	x20, x19
   1a950:	ldr	x0, [x20], #16
   1a954:	cmp	x0, x20
   1a958:	b.eq	1a960 <gl_scratch_buffer_set_array_size@@Base+0x48>  // b.none
   1a95c:	bl	a960 <free@plt>
   1a960:	mov	w8, #0x400                 	// #1024
   1a964:	stp	x20, x8, [x19]
   1a968:	bl	ad80 <__errno_location@plt>
   1a96c:	mov	x8, x0
   1a970:	mov	w9, #0xc                   	// #12
   1a974:	mov	w0, wzr
   1a978:	str	w9, [x8]
   1a97c:	b	1a9b8 <gl_scratch_buffer_set_array_size@@Base+0xa0>
   1a980:	ldr	x8, [x19, #8]
   1a984:	mul	x20, x1, x2
   1a988:	cmp	x20, x8
   1a98c:	b.ls	1a9b4 <gl_scratch_buffer_set_array_size@@Base+0x9c>  // b.plast
   1a990:	mov	x21, x19
   1a994:	ldr	x0, [x21], #16
   1a998:	cmp	x0, x21
   1a99c:	b.eq	1a9a4 <gl_scratch_buffer_set_array_size@@Base+0x8c>  // b.none
   1a9a0:	bl	a960 <free@plt>
   1a9a4:	mov	x0, x20
   1a9a8:	bl	a540 <malloc@plt>
   1a9ac:	cbz	x0, 1a9c8 <gl_scratch_buffer_set_array_size@@Base+0xb0>
   1a9b0:	stp	x0, x20, [x19]
   1a9b4:	mov	w0, #0x1                   	// #1
   1a9b8:	ldp	x20, x19, [sp, #32]
   1a9bc:	ldr	x21, [sp, #16]
   1a9c0:	ldp	x29, x30, [sp], #48
   1a9c4:	ret
   1a9c8:	mov	w8, #0x400                 	// #1024
   1a9cc:	stp	x21, x8, [x19]
   1a9d0:	b	1a9b8 <gl_scratch_buffer_set_array_size@@Base+0xa0>

000000000001a9d4 <gl_set_nx_create_empty@@Base>:
   1a9d4:	ldr	x4, [x0]
   1a9d8:	br	x4

000000000001a9dc <gl_set_size@@Base>:
   1a9dc:	ldr	x8, [x0]
   1a9e0:	ldr	x1, [x8, #8]
   1a9e4:	br	x1

000000000001a9e8 <gl_set_search@@Base>:
   1a9e8:	ldr	x8, [x0]
   1a9ec:	ldr	x2, [x8, #16]
   1a9f0:	br	x2

000000000001a9f4 <gl_set_nx_add@@Base>:
   1a9f4:	ldr	x8, [x0]
   1a9f8:	ldr	x2, [x8, #24]
   1a9fc:	br	x2

000000000001aa00 <gl_set_remove@@Base>:
   1aa00:	ldr	x8, [x0]
   1aa04:	ldr	x2, [x8, #32]
   1aa08:	br	x2

000000000001aa0c <gl_set_free@@Base>:
   1aa0c:	ldr	x8, [x0]
   1aa10:	ldr	x1, [x8, #40]
   1aa14:	br	x1

000000000001aa18 <gl_set_iterator@@Base>:
   1aa18:	ldr	x9, [x0]
   1aa1c:	ldr	x1, [x9, #48]
   1aa20:	br	x1

000000000001aa24 <gl_set_iterator_next@@Base>:
   1aa24:	ldr	x8, [x0]
   1aa28:	ldr	x2, [x8, #56]
   1aa2c:	br	x2

000000000001aa30 <gl_set_iterator_free@@Base>:
   1aa30:	ldr	x8, [x0]
   1aa34:	ldr	x1, [x8, #64]
   1aa38:	br	x1

000000000001aa3c <get_handler@@Base>:
   1aa3c:	ldr	x0, [x0]
   1aa40:	ret

000000000001aa44 <gl_sockets_startup@@Base>:
   1aa44:	mov	w0, wzr
   1aa48:	ret

000000000001aa4c <gl_sockets_cleanup@@Base>:
   1aa4c:	mov	w0, wzr
   1aa50:	ret

000000000001aa54 <get_stat_atime_ns@@Base>:
   1aa54:	ldr	x0, [x0, #80]
   1aa58:	ret

000000000001aa5c <get_stat_ctime_ns@@Base>:
   1aa5c:	ldr	x0, [x0, #112]
   1aa60:	ret

000000000001aa64 <get_stat_mtime_ns@@Base>:
   1aa64:	ldr	x0, [x0, #96]
   1aa68:	ret

000000000001aa6c <get_stat_birthtime_ns@@Base>:
   1aa6c:	mov	x0, xzr
   1aa70:	ret

000000000001aa74 <get_stat_atime@@Base>:
   1aa74:	ldp	x8, x1, [x0, #72]
   1aa78:	mov	x0, x8
   1aa7c:	ret

000000000001aa80 <get_stat_ctime@@Base>:
   1aa80:	ldp	x8, x1, [x0, #104]
   1aa84:	mov	x0, x8
   1aa88:	ret

000000000001aa8c <get_stat_mtime@@Base>:
   1aa8c:	ldp	x8, x1, [x0, #88]
   1aa90:	mov	x0, x8
   1aa94:	ret

000000000001aa98 <get_stat_birthtime@@Base>:
   1aa98:	mov	x0, #0xffffffffffffffff    	// #-1
   1aa9c:	mov	x1, #0xffffffffffffffff    	// #-1
   1aaa0:	ret

000000000001aaa4 <stat_time_normalize@@Base>:
   1aaa4:	ret

000000000001aaa8 <statat@@Base>:
   1aaa8:	mov	x3, x2
   1aaac:	mov	x2, x1
   1aab0:	mov	w1, w0
   1aab4:	mov	w0, wzr
   1aab8:	mov	w4, wzr
   1aabc:	b	aea0 <__fxstatat@plt>

000000000001aac0 <lstatat@@Base>:
   1aac0:	mov	x3, x2
   1aac4:	mov	x2, x1
   1aac8:	mov	w4, #0x100                 	// #256
   1aacc:	mov	w1, w0
   1aad0:	mov	w0, wzr
   1aad4:	b	aea0 <__fxstatat@plt>

000000000001aad8 <stdopen@@Base>:
   1aad8:	stp	x29, x30, [sp, #-16]!
   1aadc:	mov	w1, #0x1                   	// #1
   1aae0:	mov	w0, wzr
   1aae4:	mov	x29, sp
   1aae8:	bl	aac0 <rpl_fcntl@plt>
   1aaec:	tbz	w0, #31, 1ab20 <stdopen@@Base+0x48>
   1aaf0:	adrp	x0, 30000 <vasnprintf@@Base+0x224c>
   1aaf4:	add	x0, x0, #0xf15
   1aaf8:	mov	w1, #0x1                   	// #1
   1aafc:	bl	a590 <open@plt>
   1ab00:	tbz	w0, #31, 1ab18 <stdopen@@Base+0x40>
   1ab04:	adrp	x0, 30000 <vasnprintf@@Base+0x224c>
   1ab08:	add	x0, x0, #0xf1f
   1ab0c:	mov	w1, #0x1                   	// #1
   1ab10:	bl	a590 <open@plt>
   1ab14:	tbnz	w0, #31, 1ab8c <stdopen@@Base+0xb4>
   1ab18:	cmp	w0, #0x3
   1ab1c:	b.ge	1ab7c <stdopen@@Base+0xa4>  // b.tcont
   1ab20:	mov	w0, #0x1                   	// #1
   1ab24:	mov	w1, #0x1                   	// #1
   1ab28:	bl	aac0 <rpl_fcntl@plt>
   1ab2c:	tbnz	w0, #31, 1ab60 <stdopen@@Base+0x88>
   1ab30:	mov	w0, #0x2                   	// #2
   1ab34:	mov	w1, #0x1                   	// #1
   1ab38:	bl	aac0 <rpl_fcntl@plt>
   1ab3c:	tbz	w0, #31, 1ab80 <stdopen@@Base+0xa8>
   1ab40:	adrp	x0, 30000 <vasnprintf@@Base+0x224c>
   1ab44:	add	x0, x0, #0xf1f
   1ab48:	mov	w1, wzr
   1ab4c:	bl	a590 <open@plt>
   1ab50:	tbnz	w0, #31, 1ab8c <stdopen@@Base+0xb4>
   1ab54:	cmp	w0, #0x2
   1ab58:	b.gt	1ab7c <stdopen@@Base+0xa4>
   1ab5c:	b	1ab80 <stdopen@@Base+0xa8>
   1ab60:	adrp	x0, 30000 <vasnprintf@@Base+0x224c>
   1ab64:	add	x0, x0, #0xf1f
   1ab68:	mov	w1, wzr
   1ab6c:	bl	a590 <open@plt>
   1ab70:	tbnz	w0, #31, 1ab8c <stdopen@@Base+0xb4>
   1ab74:	cmp	w0, #0x2
   1ab78:	b.le	1ab30 <stdopen@@Base+0x58>
   1ab7c:	bl	a790 <close@plt>
   1ab80:	mov	w0, wzr
   1ab84:	ldp	x29, x30, [sp], #16
   1ab88:	ret
   1ab8c:	bl	ad80 <__errno_location@plt>
   1ab90:	ldr	w0, [x0]
   1ab94:	ldp	x29, x30, [sp], #16
   1ab98:	ret

000000000001ab9c <strnlen1@@Base>:
   1ab9c:	stp	x29, x30, [sp, #-32]!
   1aba0:	stp	x20, x19, [sp, #16]
   1aba4:	mov	x19, x1
   1aba8:	mov	w1, wzr
   1abac:	mov	x2, x19
   1abb0:	mov	x29, sp
   1abb4:	mov	x20, x0
   1abb8:	bl	ab70 <memchr@plt>
   1abbc:	sub	x8, x0, x20
   1abc0:	cmp	x0, #0x0
   1abc4:	csinc	x0, x19, x8, eq  // eq = none
   1abc8:	ldp	x20, x19, [sp, #16]
   1abcc:	ldp	x29, x30, [sp], #32
   1abd0:	ret

000000000001abd4 <try_tempname@@Base>:
   1abd4:	sub	sp, sp, #0x80
   1abd8:	stp	x29, x30, [sp, #32]
   1abdc:	stp	x28, x27, [sp, #48]
   1abe0:	stp	x26, x25, [sp, #64]
   1abe4:	stp	x24, x23, [sp, #80]
   1abe8:	stp	x22, x21, [sp, #96]
   1abec:	stp	x20, x19, [sp, #112]
   1abf0:	add	x29, sp, #0x20
   1abf4:	mov	x20, x3
   1abf8:	mov	x21, x2
   1abfc:	mov	w23, w1
   1ac00:	mov	x22, x0
   1ac04:	bl	ad80 <__errno_location@plt>
   1ac08:	ldr	w24, [x0]
   1ac0c:	mov	x19, x0
   1ac10:	mov	x0, x22
   1ac14:	bl	a280 <strlen@plt>
   1ac18:	add	w8, w23, #0x6
   1ac1c:	cmp	w8, w0
   1ac20:	b.gt	1ac54 <try_tempname@@Base+0x80>
   1ac24:	sub	w8, w0, w23
   1ac28:	sub	w8, w8, #0x6
   1ac2c:	add	x23, x22, w8, sxtw
   1ac30:	ldr	w8, [x23]
   1ac34:	ldrh	w9, [x23, #4]
   1ac38:	mov	w10, #0x5858                	// #22616
   1ac3c:	movk	w10, #0x5858, lsl #16
   1ac40:	mov	w11, #0x5858                	// #22616
   1ac44:	eor	w8, w8, w10
   1ac48:	eor	w9, w9, w11
   1ac4c:	orr	w8, w8, w9
   1ac50:	cbz	w8, 1ac80 <try_tempname@@Base+0xac>
   1ac54:	mov	w0, #0xffffffff            	// #-1
   1ac58:	mov	w8, #0x16                  	// #22
   1ac5c:	str	w8, [x19]
   1ac60:	ldp	x20, x19, [sp, #112]
   1ac64:	ldp	x22, x21, [sp, #96]
   1ac68:	ldp	x24, x23, [sp, #80]
   1ac6c:	ldp	x26, x25, [sp, #64]
   1ac70:	ldp	x28, x27, [sp, #48]
   1ac74:	ldp	x29, x30, [sp, #32]
   1ac78:	add	sp, sp, #0x80
   1ac7c:	ret
   1ac80:	add	x0, sp, #0x10
   1ac84:	mov	x1, xzr
   1ac88:	str	w24, [sp, #4]
   1ac8c:	bl	a640 <gettimeofday@plt>
   1ac90:	ldp	x9, x8, [sp, #16]
   1ac94:	eor	x8, x9, x8, lsl #16
   1ac98:	str	x8, [sp, #8]
   1ac9c:	bl	a500 <getpid@plt>
   1aca0:	adrp	x25, 43000 <base_len@@Base+0x2ea54>
   1aca4:	ldr	x10, [sp, #8]
   1aca8:	ldr	x9, [x25, #2304]
   1acac:	mov	x27, #0x2109                	// #8457
   1acb0:	sxtw	x8, w0
   1acb4:	movk	x27, #0x1084, lsl #16
   1acb8:	mov	w26, #0xa2f8                	// #41720
   1acbc:	movk	x27, #0x842, lsl #32
   1acc0:	adrp	x24, 30000 <vasnprintf@@Base+0x224c>
   1acc4:	eor	x8, x10, x8
   1acc8:	movk	w26, #0x3, lsl #16
   1accc:	movk	x27, #0x8421, lsl #48
   1acd0:	mov	w28, #0x3e                  	// #62
   1acd4:	add	x24, x24, #0xf29
   1acd8:	add	x8, x8, x9
   1acdc:	str	x8, [x25, #2304]
   1ace0:	mov	x10, #0x5b1b                	// #23323
   1ace4:	movk	x10, #0xa12a, lsl #16
   1ace8:	movk	x10, #0xa63, lsl #32
   1acec:	movk	x10, #0x2219, lsl #48
   1acf0:	mov	x12, #0x9d65                	// #40293
   1acf4:	umulh	x10, x8, x10
   1acf8:	movk	x12, #0xeb0a, lsl #16
   1acfc:	movk	x12, #0x9357, lsl #32
   1ad00:	lsr	x14, x10, #9
   1ad04:	lsr	x10, x10, #10
   1ad08:	movk	x12, #0x48aa, lsl #48
   1ad0c:	mov	x13, #0xac13                	// #44051
   1ad10:	umulh	x10, x10, x27
   1ad14:	umulh	x12, x8, x12
   1ad18:	movk	x13, #0x68cb, lsl #16
   1ad1c:	lsr	x10, x10, #4
   1ad20:	movk	x13, #0x544e, lsl #32
   1ad24:	msub	x10, x10, x28, x14
   1ad28:	lsr	x14, x12, #22
   1ad2c:	lsr	x12, x12, #23
   1ad30:	movk	x13, #0x2581, lsl #48
   1ad34:	umulh	x12, x12, x27
   1ad38:	umulh	x13, x8, x13
   1ad3c:	lsr	x12, x12, #4
   1ad40:	msub	x12, x12, x28, x14
   1ad44:	lsr	x14, x13, #27
   1ad48:	lsr	x13, x13, #28
   1ad4c:	lsr	x9, x8, #1
   1ad50:	mov	x15, #0x243d                	// #9277
   1ad54:	umulh	x13, x13, x27
   1ad58:	umulh	x9, x9, x27
   1ad5c:	movk	x15, #0x95d9, lsl #16
   1ad60:	lsr	x13, x13, #4
   1ad64:	movk	x15, #0x9f5e, lsl #32
   1ad68:	msub	x13, x13, x28, x14
   1ad6c:	lsr	x14, x9, #4
   1ad70:	lsr	x9, x9, #5
   1ad74:	lsr	x11, x8, #3
   1ad78:	movk	x15, #0x2332, lsl #48
   1ad7c:	umulh	x9, x9, x27
   1ad80:	umulh	x11, x11, x15
   1ad84:	msub	x8, x14, x28, x8
   1ad88:	lsr	x9, x9, #4
   1ad8c:	msub	x9, x9, x28, x14
   1ad90:	lsr	x14, x11, #12
   1ad94:	lsr	x11, x11, #13
   1ad98:	ldrb	w8, [x24, x8]
   1ad9c:	ldrb	w10, [x24, x10]
   1ada0:	umulh	x11, x11, x27
   1ada4:	lsr	x11, x11, #4
   1ada8:	msub	x11, x11, x28, x14
   1adac:	strb	w8, [x23]
   1adb0:	strb	w10, [x23, #2]
   1adb4:	ldrb	w8, [x24, x12]
   1adb8:	ldrb	w9, [x24, x9]
   1adbc:	ldrb	w10, [x24, x11]
   1adc0:	ldrb	w11, [x24, x13]
   1adc4:	mov	x0, x22
   1adc8:	mov	x1, x21
   1adcc:	strb	w8, [x23, #4]
   1add0:	strb	w9, [x23, #1]
   1add4:	strb	w10, [x23, #3]
   1add8:	strb	w11, [x23, #5]
   1addc:	blr	x20
   1ade0:	tbz	w0, #31, 1ae14 <try_tempname@@Base+0x240>
   1ade4:	ldr	w8, [x19]
   1ade8:	cmp	w8, #0x11
   1adec:	b.ne	1ae1c <try_tempname@@Base+0x248>  // b.any
   1adf0:	ldr	x8, [x25, #2304]
   1adf4:	mov	w9, #0x1e61                	// #7777
   1adf8:	subs	w26, w26, #0x1
   1adfc:	add	x8, x8, x9
   1ae00:	str	x8, [x25, #2304]
   1ae04:	b.ne	1ace0 <try_tempname@@Base+0x10c>  // b.any
   1ae08:	mov	w0, #0xffffffff            	// #-1
   1ae0c:	mov	w8, #0x11                  	// #17
   1ae10:	b	1ac5c <try_tempname@@Base+0x88>
   1ae14:	ldr	w8, [sp, #4]
   1ae18:	b	1ac5c <try_tempname@@Base+0x88>
   1ae1c:	mov	w0, #0xffffffff            	// #-1
   1ae20:	b	1ac60 <try_tempname@@Base+0x8c>

000000000001ae24 <gen_tempname@@Base>:
   1ae24:	sub	sp, sp, #0x20
   1ae28:	stp	x29, x30, [sp, #16]
   1ae2c:	add	x29, sp, #0x10
   1ae30:	cmp	w3, #0x3
   1ae34:	stur	w2, [x29, #-4]
   1ae38:	b.cs	1ae5c <gen_tempname@@Base+0x38>  // b.hs, b.nlast
   1ae3c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1ae40:	add	x8, x8, #0xca0
   1ae44:	ldr	x3, [x8, w3, sxtw #3]
   1ae48:	sub	x2, x29, #0x4
   1ae4c:	bl	a750 <try_tempname@plt>
   1ae50:	ldp	x29, x30, [sp, #16]
   1ae54:	add	sp, sp, #0x20
   1ae58:	ret
   1ae5c:	adrp	x0, 30000 <vasnprintf@@Base+0x224c>
   1ae60:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1ae64:	adrp	x3, 30000 <vasnprintf@@Base+0x224c>
   1ae68:	add	x0, x0, #0xf68
   1ae6c:	add	x1, x1, #0xf8b
   1ae70:	add	x3, x3, #0xf96
   1ae74:	mov	w2, #0x13f                 	// #319
   1ae78:	bl	ad70 <__assert_fail@plt>
   1ae7c:	ldr	w8, [x1]
   1ae80:	mov	w9, #0xc2                  	// #194
   1ae84:	mov	w2, #0x180                 	// #384
   1ae88:	and	w8, w8, #0xfffffffc
   1ae8c:	orr	w1, w8, w9
   1ae90:	b	a590 <open@plt>
   1ae94:	mov	w1, #0x1c0                 	// #448
   1ae98:	b	ae30 <mkdir@plt>
   1ae9c:	sub	sp, sp, #0xa0
   1aea0:	mov	x1, x0
   1aea4:	mov	x2, sp
   1aea8:	mov	w0, wzr
   1aeac:	stp	x29, x30, [sp, #128]
   1aeb0:	str	x19, [sp, #144]
   1aeb4:	add	x29, sp, #0x80
   1aeb8:	bl	ab50 <__lxstat@plt>
   1aebc:	mov	w19, w0
   1aec0:	bl	ad80 <__errno_location@plt>
   1aec4:	cbz	w19, 1aed4 <gen_tempname@@Base+0xb0>
   1aec8:	ldr	w8, [x0]
   1aecc:	cmp	w8, #0x4b
   1aed0:	b.ne	1aedc <gen_tempname@@Base+0xb8>  // b.any
   1aed4:	mov	w8, #0x11                  	// #17
   1aed8:	str	w8, [x0]
   1aedc:	ldr	w8, [x0]
   1aee0:	ldr	x19, [sp, #144]
   1aee4:	ldp	x29, x30, [sp, #128]
   1aee8:	cmp	w8, #0x2
   1aeec:	csetm	w0, ne  // ne = any
   1aef0:	add	sp, sp, #0xa0
   1aef4:	ret

000000000001aef8 <make_timespec@@Base>:
   1aef8:	ret

000000000001aefc <timespec_cmp@@Base>:
   1aefc:	cmp	x0, x2
   1af00:	b.ge	1af0c <timespec_cmp@@Base+0x10>  // b.tcont
   1af04:	mov	w0, #0xffffffff            	// #-1
   1af08:	ret
   1af0c:	b.le	1af18 <timespec_cmp@@Base+0x1c>
   1af10:	mov	w0, #0x1                   	// #1
   1af14:	ret
   1af18:	sub	w0, w1, w3
   1af1c:	ret

000000000001af20 <timespec_sign@@Base>:
   1af20:	orr	x8, x1, x0
   1af24:	cmp	x8, #0x0
   1af28:	cset	w8, ne  // ne = any
   1af2c:	cmp	x0, #0x0
   1af30:	csinv	w0, w8, wzr, ge  // ge = tcont
   1af34:	ret

000000000001af38 <timespectod@@Base>:
   1af38:	mov	x8, #0xcd6500000000        	// #225833675390976
   1af3c:	movk	x8, #0x41cd, lsl #48
   1af40:	scvtf	d1, x1
   1af44:	fmov	d2, x8
   1af48:	scvtf	d0, x0
   1af4c:	fdiv	d1, d1, d2
   1af50:	fadd	d0, d1, d0
   1af54:	ret

000000000001af58 <dup_safer@@Base>:
   1af58:	mov	w2, #0x3                   	// #3
   1af5c:	mov	w1, wzr
   1af60:	b	aac0 <rpl_fcntl@plt>

000000000001af64 <fd_safer@@Base>:
   1af64:	stp	x29, x30, [sp, #-48]!
   1af68:	stp	x20, x19, [sp, #32]
   1af6c:	mov	w19, w0
   1af70:	cmp	w0, #0x2
   1af74:	stp	x22, x21, [sp, #16]
   1af78:	mov	x29, sp
   1af7c:	b.hi	1afac <fd_safer@@Base+0x48>  // b.pmore
   1af80:	mov	w0, w19
   1af84:	bl	a950 <dup_safer@plt>
   1af88:	mov	w20, w0
   1af8c:	bl	ad80 <__errno_location@plt>
   1af90:	ldr	w22, [x0]
   1af94:	mov	x21, x0
   1af98:	mov	w0, w19
   1af9c:	bl	a790 <close@plt>
   1afa0:	str	w22, [x21]
   1afa4:	mov	w0, w20
   1afa8:	b	1afb0 <fd_safer@@Base+0x4c>
   1afac:	mov	w0, w19
   1afb0:	ldp	x20, x19, [sp, #32]
   1afb4:	ldp	x22, x21, [sp, #16]
   1afb8:	ldp	x29, x30, [sp], #48
   1afbc:	ret

000000000001afc0 <pipe_safer@@Base>:
   1afc0:	stp	x29, x30, [sp, #-48]!
   1afc4:	stp	x22, x21, [sp, #16]
   1afc8:	stp	x20, x19, [sp, #32]
   1afcc:	mov	x29, sp
   1afd0:	mov	x19, x0
   1afd4:	bl	a400 <pipe@plt>
   1afd8:	cbnz	w0, 1b028 <pipe_safer@@Base+0x68>
   1afdc:	ldr	w0, [x19]
   1afe0:	bl	ae00 <fd_safer@plt>
   1afe4:	str	w0, [x19]
   1afe8:	tbnz	w0, #31, 1b004 <pipe_safer@@Base+0x44>
   1afec:	ldr	w0, [x19, #4]
   1aff0:	bl	ae00 <fd_safer@plt>
   1aff4:	str	w0, [x19, #4]
   1aff8:	tbnz	w0, #31, 1b00c <pipe_safer@@Base+0x4c>
   1affc:	mov	w0, wzr
   1b000:	b	1b02c <pipe_safer@@Base+0x6c>
   1b004:	mov	w21, #0x1                   	// #1
   1b008:	b	1b010 <pipe_safer@@Base+0x50>
   1b00c:	mov	x21, xzr
   1b010:	bl	ad80 <__errno_location@plt>
   1b014:	mov	x20, x0
   1b018:	ldr	w22, [x0]
   1b01c:	ldr	w0, [x19, x21, lsl #2]
   1b020:	bl	a790 <close@plt>
   1b024:	str	w22, [x20]
   1b028:	mov	w0, #0xffffffff            	// #-1
   1b02c:	ldp	x20, x19, [sp, #32]
   1b030:	ldp	x22, x21, [sp, #16]
   1b034:	ldp	x29, x30, [sp], #48
   1b038:	ret

000000000001b03c <fdutimens@@Base>:
   1b03c:	sub	sp, sp, #0x140
   1b040:	stp	x29, x30, [sp, #224]
   1b044:	add	x29, sp, #0xe0
   1b048:	cmp	x2, #0x0
   1b04c:	sub	x8, x29, #0x20
   1b050:	stp	x22, x21, [sp, #288]
   1b054:	stp	x20, x19, [sp, #304]
   1b058:	mov	x22, x2
   1b05c:	mov	x20, x1
   1b060:	mov	w19, w0
   1b064:	csel	x21, xzr, x8, eq  // eq = none
   1b068:	str	x28, [sp, #240]
   1b06c:	stp	x26, x25, [sp, #256]
   1b070:	stp	x24, x23, [sp, #272]
   1b074:	cbz	x2, 1b0d4 <fdutimens@@Base+0x98>
   1b078:	ldr	q0, [x22]
   1b07c:	mov	w9, #0xca00                	// #51712
   1b080:	movk	w9, #0x3b9a, lsl #16
   1b084:	stur	q0, [x29, #-32]
   1b088:	ldr	q0, [x22, #16]
   1b08c:	stur	q0, [x29, #-16]
   1b090:	ldr	x10, [x21, #8]
   1b094:	cmp	x10, x9
   1b098:	and	x11, x10, #0xfffffffffffffffe
   1b09c:	b.cc	1b0ac <fdutimens@@Base+0x70>  // b.lo, b.ul, b.last
   1b0a0:	mov	w8, #0x3ffffffe            	// #1073741822
   1b0a4:	cmp	x11, x8
   1b0a8:	b.ne	1b0c8 <fdutimens@@Base+0x8c>  // b.any
   1b0ac:	ldr	x8, [x21, #24]
   1b0b0:	cmp	x8, x9
   1b0b4:	and	x9, x8, #0xfffffffffffffffe
   1b0b8:	b.cc	1b0e0 <fdutimens@@Base+0xa4>  // b.lo, b.ul, b.last
   1b0bc:	mov	w12, #0x3ffffffe            	// #1073741822
   1b0c0:	cmp	x9, x12
   1b0c4:	b.eq	1b0e0 <fdutimens@@Base+0xa4>  // b.none
   1b0c8:	bl	ad80 <__errno_location@plt>
   1b0cc:	mov	w8, #0x16                  	// #22
   1b0d0:	b	1b144 <fdutimens@@Base+0x108>
   1b0d4:	mov	w26, wzr
   1b0d8:	tbnz	w19, #31, 1b138 <fdutimens@@Base+0xfc>
   1b0dc:	b	1b170 <fdutimens@@Base+0x134>
   1b0e0:	mov	w12, #0x3ffffffe            	// #1073741822
   1b0e4:	cmp	x11, x12
   1b0e8:	b.ne	1b104 <fdutimens@@Base+0xc8>  // b.any
   1b0ec:	mov	w11, #0x3ffffffe            	// #1073741822
   1b0f0:	cmp	x10, x11
   1b0f4:	cset	w10, eq  // eq = none
   1b0f8:	mov	w11, #0x1                   	// #1
   1b0fc:	str	xzr, [x21]
   1b100:	b	1b10c <fdutimens@@Base+0xd0>
   1b104:	mov	w11, wzr
   1b108:	mov	w10, wzr
   1b10c:	mov	w12, #0x3ffffffe            	// #1073741822
   1b110:	cmp	x9, x12
   1b114:	b.ne	1b12c <fdutimens@@Base+0xf0>  // b.any
   1b118:	mov	w9, #0x3ffffffe            	// #1073741822
   1b11c:	cmp	x8, x9
   1b120:	cinc	w10, w10, eq  // eq = none
   1b124:	mov	w11, #0x1                   	// #1
   1b128:	str	xzr, [x21, #16]
   1b12c:	cmp	w10, #0x1
   1b130:	cinc	w26, w11, eq  // eq = none
   1b134:	tbz	w19, #31, 1b170 <fdutimens@@Base+0x134>
   1b138:	cbnz	x20, 1b170 <fdutimens@@Base+0x134>
   1b13c:	bl	ad80 <__errno_location@plt>
   1b140:	mov	w8, #0x9                   	// #9
   1b144:	str	w8, [x0]
   1b148:	mov	w23, #0xffffffff            	// #-1
   1b14c:	mov	w0, w23
   1b150:	ldp	x20, x19, [sp, #304]
   1b154:	ldp	x22, x21, [sp, #288]
   1b158:	ldp	x24, x23, [sp, #272]
   1b15c:	ldp	x26, x25, [sp, #256]
   1b160:	ldr	x28, [sp, #240]
   1b164:	ldp	x29, x30, [sp, #224]
   1b168:	add	sp, sp, #0x140
   1b16c:	ret
   1b170:	adrp	x25, 43000 <base_len@@Base+0x2ea54>
   1b174:	ldr	w8, [x25, #2312]
   1b178:	add	x24, sp, #0x40
   1b17c:	tbnz	w8, #31, 1b238 <fdutimens@@Base+0x1fc>
   1b180:	cmp	w26, #0x2
   1b184:	b.ne	1b1e8 <fdutimens@@Base+0x1ac>  // b.any
   1b188:	add	x2, sp, #0x40
   1b18c:	mov	w0, wzr
   1b190:	tbnz	w19, #31, 1b1a4 <fdutimens@@Base+0x168>
   1b194:	mov	w1, w19
   1b198:	bl	ac20 <__fxstat@plt>
   1b19c:	cbnz	w0, 1b148 <fdutimens@@Base+0x10c>
   1b1a0:	b	1b1b0 <fdutimens@@Base+0x174>
   1b1a4:	mov	x1, x20
   1b1a8:	bl	adc0 <__xstat@plt>
   1b1ac:	cbnz	w0, 1b148 <fdutimens@@Base+0x10c>
   1b1b0:	ldr	x8, [x21, #8]
   1b1b4:	mov	w9, #0x3ffffffe            	// #1073741822
   1b1b8:	cmp	x8, x9
   1b1bc:	b.ne	1b1cc <fdutimens@@Base+0x190>  // b.any
   1b1c0:	ldur	q0, [x24, #72]
   1b1c4:	str	q0, [x21]
   1b1c8:	b	1b1e4 <fdutimens@@Base+0x1a8>
   1b1cc:	ldr	x8, [x21, #24]
   1b1d0:	mov	w9, #0x3ffffffe            	// #1073741822
   1b1d4:	cmp	x8, x9
   1b1d8:	b.ne	1b1e4 <fdutimens@@Base+0x1a8>  // b.any
   1b1dc:	ldur	q0, [x24, #88]
   1b1e0:	str	q0, [x21, #16]
   1b1e4:	mov	w26, #0x3                   	// #3
   1b1e8:	tbz	w19, #31, 1b214 <fdutimens@@Base+0x1d8>
   1b1ec:	mov	w0, #0xffffff9c            	// #-100
   1b1f0:	mov	x1, x20
   1b1f4:	mov	x2, x21
   1b1f8:	mov	w3, wzr
   1b1fc:	bl	aa90 <utimensat@plt>
   1b200:	cmp	w0, #0x1
   1b204:	b.lt	1b30c <fdutimens@@Base+0x2d0>  // b.tstop
   1b208:	bl	ad80 <__errno_location@plt>
   1b20c:	mov	w8, #0x26                  	// #38
   1b210:	str	w8, [x0]
   1b214:	tbnz	w19, #31, 1b238 <fdutimens@@Base+0x1fc>
   1b218:	mov	w0, w19
   1b21c:	mov	x1, x21
   1b220:	bl	a5f0 <futimens@plt>
   1b224:	cmp	w0, #0x1
   1b228:	b.lt	1b2b4 <fdutimens@@Base+0x278>  // b.tstop
   1b22c:	bl	ad80 <__errno_location@plt>
   1b230:	mov	w8, #0x26                  	// #38
   1b234:	str	w8, [x0]
   1b238:	mov	w8, #0xffffffff            	// #-1
   1b23c:	adrp	x9, 43000 <base_len@@Base+0x2ea54>
   1b240:	str	w8, [x25, #2312]
   1b244:	str	w8, [x9, #2316]
   1b248:	cbz	w26, 1b290 <fdutimens@@Base+0x254>
   1b24c:	cmp	w26, #0x3
   1b250:	b.ne	1b298 <fdutimens@@Base+0x25c>  // b.any
   1b254:	cbz	x22, 1b2f0 <fdutimens@@Base+0x2b4>
   1b258:	ldr	x8, [x21, #8]
   1b25c:	mov	w9, #0x3fffffff            	// #1073741823
   1b260:	cmp	x8, x9
   1b264:	b.eq	1b2e0 <fdutimens@@Base+0x2a4>  // b.none
   1b268:	mov	w9, #0x3ffffffe            	// #1073741822
   1b26c:	cmp	x8, x9
   1b270:	b.ne	1b338 <fdutimens@@Base+0x2fc>  // b.any
   1b274:	ldr	x8, [x21, #24]
   1b278:	mov	w9, #0x3ffffffe            	// #1073741822
   1b27c:	cmp	x8, x9
   1b280:	b.eq	1b4b0 <fdutimens@@Base+0x474>  // b.none
   1b284:	ldur	q0, [x24, #72]
   1b288:	str	q0, [x21]
   1b28c:	b	1b338 <fdutimens@@Base+0x2fc>
   1b290:	cbnz	x22, 1b36c <fdutimens@@Base+0x330>
   1b294:	b	1b2f0 <fdutimens@@Base+0x2b4>
   1b298:	add	x2, sp, #0x40
   1b29c:	mov	w0, wzr
   1b2a0:	tbnz	w19, #31, 1b2d0 <fdutimens@@Base+0x294>
   1b2a4:	mov	w1, w19
   1b2a8:	bl	ac20 <__fxstat@plt>
   1b2ac:	cbnz	w0, 1b148 <fdutimens@@Base+0x10c>
   1b2b0:	b	1b254 <fdutimens@@Base+0x218>
   1b2b4:	mov	w23, w0
   1b2b8:	cbz	w0, 1b324 <fdutimens@@Base+0x2e8>
   1b2bc:	bl	ad80 <__errno_location@plt>
   1b2c0:	ldr	w8, [x0]
   1b2c4:	cmp	w8, #0x26
   1b2c8:	b.eq	1b238 <fdutimens@@Base+0x1fc>  // b.none
   1b2cc:	b	1b324 <fdutimens@@Base+0x2e8>
   1b2d0:	mov	x1, x20
   1b2d4:	bl	adc0 <__xstat@plt>
   1b2d8:	cbnz	w0, 1b148 <fdutimens@@Base+0x10c>
   1b2dc:	b	1b254 <fdutimens@@Base+0x218>
   1b2e0:	ldr	x8, [x21, #24]
   1b2e4:	mov	w9, #0x3fffffff            	// #1073741823
   1b2e8:	cmp	x8, x9
   1b2ec:	b.ne	1b330 <fdutimens@@Base+0x2f4>  // b.any
   1b2f0:	mov	x21, xzr
   1b2f4:	tbz	w19, #31, 1b3bc <fdutimens@@Base+0x380>
   1b2f8:	mov	w0, #0xffffff9c            	// #-100
   1b2fc:	mov	x1, x20
   1b300:	mov	x2, x21
   1b304:	bl	a560 <futimesat@plt>
   1b308:	b	1b3e0 <fdutimens@@Base+0x3a4>
   1b30c:	mov	w23, w0
   1b310:	cbz	w0, 1b324 <fdutimens@@Base+0x2e8>
   1b314:	bl	ad80 <__errno_location@plt>
   1b318:	ldr	w8, [x0]
   1b31c:	cmp	w8, #0x26
   1b320:	b.eq	1b214 <fdutimens@@Base+0x1d8>  // b.none
   1b324:	mov	w8, #0x1                   	// #1
   1b328:	str	w8, [x25, #2312]
   1b32c:	b	1b14c <fdutimens@@Base+0x110>
   1b330:	mov	x0, x21
   1b334:	bl	ae50 <gettime@plt>
   1b338:	ldr	x8, [x21, #24]
   1b33c:	mov	w9, #0x3fffffff            	// #1073741823
   1b340:	cmp	x8, x9
   1b344:	b.eq	1b360 <fdutimens@@Base+0x324>  // b.none
   1b348:	mov	w9, #0x3ffffffe            	// #1073741822
   1b34c:	cmp	x8, x9
   1b350:	b.ne	1b368 <fdutimens@@Base+0x32c>  // b.any
   1b354:	ldur	q0, [x24, #88]
   1b358:	str	q0, [x21, #16]
   1b35c:	b	1b368 <fdutimens@@Base+0x32c>
   1b360:	add	x0, x21, #0x10
   1b364:	bl	ae50 <gettime@plt>
   1b368:	sub	x21, x29, #0x20
   1b36c:	ldr	x8, [x21]
   1b370:	mov	x9, #0xf7cf                	// #63439
   1b374:	movk	x9, #0xe353, lsl #16
   1b378:	movk	x9, #0x9ba5, lsl #32
   1b37c:	str	x8, [sp, #32]
   1b380:	ldr	x8, [x21, #8]
   1b384:	movk	x9, #0x20c4, lsl #48
   1b388:	smulh	x8, x8, x9
   1b38c:	asr	x10, x8, #7
   1b390:	add	x8, x10, x8, lsr #63
   1b394:	str	x8, [sp, #40]
   1b398:	ldr	x8, [x21, #16]
   1b39c:	str	x8, [sp, #48]
   1b3a0:	ldr	x8, [x21, #24]
   1b3a4:	add	x21, sp, #0x20
   1b3a8:	smulh	x8, x8, x9
   1b3ac:	asr	x9, x8, #7
   1b3b0:	add	x8, x9, x8, lsr #63
   1b3b4:	str	x8, [sp, #56]
   1b3b8:	tbnz	w19, #31, 1b2f8 <fdutimens@@Base+0x2bc>
   1b3bc:	mov	w0, w19
   1b3c0:	mov	x1, xzr
   1b3c4:	mov	x2, x21
   1b3c8:	bl	a560 <futimesat@plt>
   1b3cc:	cbz	w0, 1b3e8 <fdutimens@@Base+0x3ac>
   1b3d0:	cbz	x20, 1b148 <fdutimens@@Base+0x10c>
   1b3d4:	mov	x0, x20
   1b3d8:	mov	x1, x21
   1b3dc:	bl	ac00 <utimes@plt>
   1b3e0:	mov	w23, w0
   1b3e4:	b	1b14c <fdutimens@@Base+0x110>
   1b3e8:	cbz	x21, 1b4b0 <fdutimens@@Base+0x474>
   1b3ec:	ldr	x24, [x21, #8]
   1b3f0:	ldr	x20, [x21, #24]
   1b3f4:	mov	w22, #0xa11f                	// #41247
   1b3f8:	movk	w22, #0x7, lsl #16
   1b3fc:	cmp	x24, x22
   1b400:	b.gt	1b40c <fdutimens@@Base+0x3d0>
   1b404:	cmp	x20, x22
   1b408:	b.le	1b4b0 <fdutimens@@Base+0x474>
   1b40c:	add	x2, sp, #0x40
   1b410:	mov	w0, wzr
   1b414:	mov	w1, w19
   1b418:	bl	ac20 <__fxstat@plt>
   1b41c:	mov	w23, wzr
   1b420:	cbnz	w0, 1b14c <fdutimens@@Base+0x110>
   1b424:	ldr	q0, [x21]
   1b428:	add	x9, x21, #0x10
   1b42c:	ldr	x10, [x21]
   1b430:	ldr	x8, [x21, #16]
   1b434:	str	q0, [sp]
   1b438:	ldr	q0, [x9]
   1b43c:	ldr	x11, [sp, #136]
   1b440:	ldr	x9, [sp, #152]
   1b444:	mov	x2, xzr
   1b448:	cmp	x24, x22
   1b44c:	str	q0, [sp, #16]
   1b450:	b.le	1b478 <fdutimens@@Base+0x43c>
   1b454:	sub	x10, x11, x10
   1b458:	cmp	x10, #0x1
   1b45c:	b.ne	1b478 <fdutimens@@Base+0x43c>  // b.any
   1b460:	ldr	x10, [sp, #144]
   1b464:	cbz	x10, 1b470 <fdutimens@@Base+0x434>
   1b468:	mov	x2, xzr
   1b46c:	b	1b478 <fdutimens@@Base+0x43c>
   1b470:	mov	x2, sp
   1b474:	str	xzr, [sp, #8]
   1b478:	cmp	x20, x22
   1b47c:	b.le	1b494 <fdutimens@@Base+0x458>
   1b480:	sub	x8, x9, x8
   1b484:	cmp	x8, #0x1
   1b488:	b.ne	1b494 <fdutimens@@Base+0x458>  // b.any
   1b48c:	ldr	x8, [sp, #160]
   1b490:	cbz	x8, 1b49c <fdutimens@@Base+0x460>
   1b494:	cbnz	x2, 1b4a4 <fdutimens@@Base+0x468>
   1b498:	b	1b4b0 <fdutimens@@Base+0x474>
   1b49c:	mov	x2, sp
   1b4a0:	str	xzr, [sp, #24]
   1b4a4:	mov	w0, w19
   1b4a8:	mov	x1, xzr
   1b4ac:	bl	a560 <futimesat@plt>
   1b4b0:	mov	w23, wzr
   1b4b4:	b	1b14c <fdutimens@@Base+0x110>

000000000001b4b8 <utimens@@Base>:
   1b4b8:	mov	x8, x0
   1b4bc:	mov	w0, #0xffffffff            	// #-1
   1b4c0:	mov	x2, x1
   1b4c4:	mov	x1, x8
   1b4c8:	b	a8a0 <fdutimens@plt>

000000000001b4cc <lutimens@@Base>:
   1b4cc:	sub	sp, sp, #0xe0
   1b4d0:	stp	x29, x30, [sp, #160]
   1b4d4:	add	x29, sp, #0xa0
   1b4d8:	cmp	x1, #0x0
   1b4dc:	sub	x8, x29, #0x20
   1b4e0:	stp	x22, x21, [sp, #192]
   1b4e4:	stp	x20, x19, [sp, #208]
   1b4e8:	mov	x21, x1
   1b4ec:	mov	x19, x0
   1b4f0:	csel	x20, xzr, x8, eq  // eq = none
   1b4f4:	stp	x24, x23, [sp, #176]
   1b4f8:	cbz	x1, 1b578 <lutimens@@Base+0xac>
   1b4fc:	ldr	q0, [x21]
   1b500:	mov	w9, #0xca00                	// #51712
   1b504:	movk	w9, #0x3b9a, lsl #16
   1b508:	stur	q0, [x29, #-32]
   1b50c:	ldr	q0, [x21, #16]
   1b510:	stur	q0, [x29, #-16]
   1b514:	ldr	x10, [x20, #8]
   1b518:	cmp	x10, x9
   1b51c:	and	x11, x10, #0xfffffffffffffffe
   1b520:	b.cc	1b530 <lutimens@@Base+0x64>  // b.lo, b.ul, b.last
   1b524:	mov	w8, #0x3ffffffe            	// #1073741822
   1b528:	cmp	x11, x8
   1b52c:	b.ne	1b54c <lutimens@@Base+0x80>  // b.any
   1b530:	ldr	x8, [x20, #24]
   1b534:	cmp	x8, x9
   1b538:	and	x9, x8, #0xfffffffffffffffe
   1b53c:	b.cc	1b580 <lutimens@@Base+0xb4>  // b.lo, b.ul, b.last
   1b540:	mov	w12, #0x3ffffffe            	// #1073741822
   1b544:	cmp	x9, x12
   1b548:	b.eq	1b580 <lutimens@@Base+0xb4>  // b.none
   1b54c:	bl	ad80 <__errno_location@plt>
   1b550:	mov	w8, #0x16                  	// #22
   1b554:	str	w8, [x0]
   1b558:	mov	w22, #0xffffffff            	// #-1
   1b55c:	mov	w0, w22
   1b560:	ldp	x20, x19, [sp, #208]
   1b564:	ldp	x22, x21, [sp, #192]
   1b568:	ldp	x24, x23, [sp, #176]
   1b56c:	ldp	x29, x30, [sp, #160]
   1b570:	add	sp, sp, #0xe0
   1b574:	ret
   1b578:	mov	w24, wzr
   1b57c:	b	1b5d4 <lutimens@@Base+0x108>
   1b580:	mov	w12, #0x3ffffffe            	// #1073741822
   1b584:	cmp	x11, x12
   1b588:	b.ne	1b5a4 <lutimens@@Base+0xd8>  // b.any
   1b58c:	mov	w11, #0x3ffffffe            	// #1073741822
   1b590:	cmp	x10, x11
   1b594:	cset	w10, eq  // eq = none
   1b598:	mov	w11, #0x1                   	// #1
   1b59c:	str	xzr, [x20]
   1b5a0:	b	1b5ac <lutimens@@Base+0xe0>
   1b5a4:	mov	w11, wzr
   1b5a8:	mov	w10, wzr
   1b5ac:	mov	w12, #0x3ffffffe            	// #1073741822
   1b5b0:	cmp	x9, x12
   1b5b4:	b.ne	1b5cc <lutimens@@Base+0x100>  // b.any
   1b5b8:	mov	w9, #0x3ffffffe            	// #1073741822
   1b5bc:	cmp	x8, x9
   1b5c0:	cinc	w10, w10, eq  // eq = none
   1b5c4:	mov	w11, #0x1                   	// #1
   1b5c8:	str	xzr, [x20, #16]
   1b5cc:	cmp	w10, #0x1
   1b5d0:	cinc	w24, w11, eq  // eq = none
   1b5d4:	adrp	x23, 43000 <base_len@@Base+0x2ea54>
   1b5d8:	ldr	w8, [x23, #2316]
   1b5dc:	tbnz	w8, #31, 1b65c <lutimens@@Base+0x190>
   1b5e0:	cmp	w24, #0x2
   1b5e4:	b.ne	1b634 <lutimens@@Base+0x168>  // b.any
   1b5e8:	mov	x2, sp
   1b5ec:	mov	w0, wzr
   1b5f0:	mov	x1, x19
   1b5f4:	bl	ab50 <__lxstat@plt>
   1b5f8:	cbnz	w0, 1b558 <lutimens@@Base+0x8c>
   1b5fc:	ldr	x8, [x20, #8]
   1b600:	mov	w9, #0x3ffffffe            	// #1073741822
   1b604:	cmp	x8, x9
   1b608:	b.ne	1b618 <lutimens@@Base+0x14c>  // b.any
   1b60c:	ldur	q0, [sp, #72]
   1b610:	str	q0, [x20]
   1b614:	b	1b630 <lutimens@@Base+0x164>
   1b618:	ldr	x8, [x20, #24]
   1b61c:	mov	w9, #0x3ffffffe            	// #1073741822
   1b620:	cmp	x8, x9
   1b624:	b.ne	1b630 <lutimens@@Base+0x164>  // b.any
   1b628:	ldur	q0, [sp, #88]
   1b62c:	str	q0, [x20, #16]
   1b630:	mov	w24, #0x3                   	// #3
   1b634:	mov	w0, #0xffffff9c            	// #-100
   1b638:	mov	w3, #0x100                 	// #256
   1b63c:	mov	x1, x19
   1b640:	mov	x2, x20
   1b644:	bl	aa90 <utimensat@plt>
   1b648:	cmp	w0, #0x1
   1b64c:	b.lt	1b6d4 <lutimens@@Base+0x208>  // b.tstop
   1b650:	bl	ad80 <__errno_location@plt>
   1b654:	mov	w8, #0x26                  	// #38
   1b658:	str	w8, [x0]
   1b65c:	mov	w8, #0xffffffff            	// #-1
   1b660:	str	w8, [x23, #2316]
   1b664:	cbz	w24, 1b6bc <lutimens@@Base+0x1f0>
   1b668:	cmp	w24, #0x3
   1b66c:	b.eq	1b684 <lutimens@@Base+0x1b8>  // b.none
   1b670:	mov	x2, sp
   1b674:	mov	w0, wzr
   1b678:	mov	x1, x19
   1b67c:	bl	ab50 <__lxstat@plt>
   1b680:	cbnz	w0, 1b558 <lutimens@@Base+0x8c>
   1b684:	cbz	x21, 1b710 <lutimens@@Base+0x244>
   1b688:	ldr	x8, [x20, #8]
   1b68c:	mov	w9, #0x3fffffff            	// #1073741823
   1b690:	cmp	x8, x9
   1b694:	b.eq	1b700 <lutimens@@Base+0x234>  // b.none
   1b698:	mov	w9, #0x3ffffffe            	// #1073741822
   1b69c:	cmp	x8, x9
   1b6a0:	b.ne	1b72c <lutimens@@Base+0x260>  // b.any
   1b6a4:	ldr	x8, [x20, #24]
   1b6a8:	mov	w9, #0x3ffffffe            	// #1073741822
   1b6ac:	cmp	x8, x9
   1b6b0:	b.ne	1b718 <lutimens@@Base+0x24c>  // b.any
   1b6b4:	mov	w22, wzr
   1b6b8:	b	1b55c <lutimens@@Base+0x90>
   1b6bc:	mov	x2, sp
   1b6c0:	mov	w0, wzr
   1b6c4:	mov	x1, x19
   1b6c8:	bl	ab50 <__lxstat@plt>
   1b6cc:	cbnz	w0, 1b558 <lutimens@@Base+0x8c>
   1b6d0:	b	1b760 <lutimens@@Base+0x294>
   1b6d4:	mov	w22, w0
   1b6d8:	cbz	w0, 1b6ec <lutimens@@Base+0x220>
   1b6dc:	bl	ad80 <__errno_location@plt>
   1b6e0:	ldr	w8, [x0]
   1b6e4:	cmp	w8, #0x26
   1b6e8:	b.eq	1b65c <lutimens@@Base+0x190>  // b.none
   1b6ec:	adrp	x8, 43000 <base_len@@Base+0x2ea54>
   1b6f0:	mov	w9, #0x1                   	// #1
   1b6f4:	str	w9, [x8, #2312]
   1b6f8:	str	w9, [x23, #2316]
   1b6fc:	b	1b55c <lutimens@@Base+0x90>
   1b700:	ldr	x8, [x20, #24]
   1b704:	mov	w9, #0x3fffffff            	// #1073741823
   1b708:	cmp	x8, x9
   1b70c:	b.ne	1b724 <lutimens@@Base+0x258>  // b.any
   1b710:	mov	x20, xzr
   1b714:	b	1b760 <lutimens@@Base+0x294>
   1b718:	ldur	q0, [sp, #72]
   1b71c:	str	q0, [x20]
   1b720:	b	1b72c <lutimens@@Base+0x260>
   1b724:	mov	x0, x20
   1b728:	bl	ae50 <gettime@plt>
   1b72c:	ldr	x8, [x20, #24]
   1b730:	mov	w9, #0x3fffffff            	// #1073741823
   1b734:	cmp	x8, x9
   1b738:	b.eq	1b754 <lutimens@@Base+0x288>  // b.none
   1b73c:	mov	w9, #0x3ffffffe            	// #1073741822
   1b740:	cmp	x8, x9
   1b744:	b.ne	1b75c <lutimens@@Base+0x290>  // b.any
   1b748:	ldur	q0, [sp, #88]
   1b74c:	str	q0, [x20, #16]
   1b750:	b	1b75c <lutimens@@Base+0x290>
   1b754:	add	x0, x20, #0x10
   1b758:	bl	ae50 <gettime@plt>
   1b75c:	sub	x20, x29, #0x20
   1b760:	ldr	w8, [sp, #16]
   1b764:	and	w8, w8, #0xf000
   1b768:	cmp	w8, #0xa, lsl #12
   1b76c:	b.ne	1b77c <lutimens@@Base+0x2b0>  // b.any
   1b770:	bl	ad80 <__errno_location@plt>
   1b774:	mov	w8, #0x26                  	// #38
   1b778:	b	1b554 <lutimens@@Base+0x88>
   1b77c:	mov	w0, #0xffffffff            	// #-1
   1b780:	mov	x1, x19
   1b784:	mov	x2, x20
   1b788:	bl	a8a0 <fdutimens@plt>
   1b78c:	mov	w22, w0
   1b790:	b	1b55c <lutimens@@Base+0x90>

000000000001b794 <xnmalloc@@Base>:
   1b794:	stp	x29, x30, [sp, #-32]!
   1b798:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1b79c:	udiv	x8, x8, x1
   1b7a0:	cmp	x8, x0
   1b7a4:	str	x19, [sp, #16]
   1b7a8:	mov	x29, sp
   1b7ac:	b.cc	1b7d0 <xnmalloc@@Base+0x3c>  // b.lo, b.ul, b.last
   1b7b0:	mul	x19, x1, x0
   1b7b4:	mov	x0, x19
   1b7b8:	bl	a540 <malloc@plt>
   1b7bc:	cbz	x19, 1b7c4 <xnmalloc@@Base+0x30>
   1b7c0:	cbz	x0, 1b7d0 <xnmalloc@@Base+0x3c>
   1b7c4:	ldr	x19, [sp, #16]
   1b7c8:	ldp	x29, x30, [sp], #32
   1b7cc:	ret
   1b7d0:	bl	a7d0 <xalloc_die@plt>

000000000001b7d4 <xmalloc@@Base>:
   1b7d4:	stp	x29, x30, [sp, #-32]!
   1b7d8:	str	x19, [sp, #16]
   1b7dc:	mov	x29, sp
   1b7e0:	mov	x19, x0
   1b7e4:	bl	a540 <malloc@plt>
   1b7e8:	cbz	x19, 1b7f0 <xmalloc@@Base+0x1c>
   1b7ec:	cbz	x0, 1b7fc <xmalloc@@Base+0x28>
   1b7f0:	ldr	x19, [sp, #16]
   1b7f4:	ldp	x29, x30, [sp], #32
   1b7f8:	ret
   1b7fc:	bl	a7d0 <xalloc_die@plt>

000000000001b800 <xnrealloc@@Base>:
   1b800:	stp	x29, x30, [sp, #-32]!
   1b804:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1b808:	udiv	x8, x8, x2
   1b80c:	cmp	x8, x1
   1b810:	str	x19, [sp, #16]
   1b814:	mov	x29, sp
   1b818:	b.cc	1b850 <xnrealloc@@Base+0x50>  // b.lo, b.ul, b.last
   1b81c:	mul	x19, x2, x1
   1b820:	cbz	x0, 1b834 <xnrealloc@@Base+0x34>
   1b824:	cbnz	x19, 1b834 <xnrealloc@@Base+0x34>
   1b828:	bl	a960 <free@plt>
   1b82c:	mov	x0, xzr
   1b830:	b	1b844 <xnrealloc@@Base+0x44>
   1b834:	mov	x1, x19
   1b838:	bl	a720 <realloc@plt>
   1b83c:	cbz	x19, 1b844 <xnrealloc@@Base+0x44>
   1b840:	cbz	x0, 1b850 <xnrealloc@@Base+0x50>
   1b844:	ldr	x19, [sp, #16]
   1b848:	ldp	x29, x30, [sp], #32
   1b84c:	ret
   1b850:	bl	a7d0 <xalloc_die@plt>

000000000001b854 <xrealloc@@Base>:
   1b854:	stp	x29, x30, [sp, #-32]!
   1b858:	str	x19, [sp, #16]
   1b85c:	mov	x19, x1
   1b860:	mov	x29, sp
   1b864:	cbz	x0, 1b878 <xrealloc@@Base+0x24>
   1b868:	cbnz	x19, 1b878 <xrealloc@@Base+0x24>
   1b86c:	bl	a960 <free@plt>
   1b870:	mov	x0, xzr
   1b874:	b	1b888 <xrealloc@@Base+0x34>
   1b878:	mov	x1, x19
   1b87c:	bl	a720 <realloc@plt>
   1b880:	cbz	x19, 1b888 <xrealloc@@Base+0x34>
   1b884:	cbz	x0, 1b894 <xrealloc@@Base+0x40>
   1b888:	ldr	x19, [sp, #16]
   1b88c:	ldp	x29, x30, [sp], #32
   1b890:	ret
   1b894:	bl	a7d0 <xalloc_die@plt>

000000000001b898 <x2nrealloc@@Base>:
   1b898:	stp	x29, x30, [sp, #-32]!
   1b89c:	ldr	x8, [x1]
   1b8a0:	str	x19, [sp, #16]
   1b8a4:	mov	x29, sp
   1b8a8:	cbz	x0, 1b8e0 <x2nrealloc@@Base+0x48>
   1b8ac:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1b8b0:	movk	x9, #0x5554
   1b8b4:	udiv	x9, x9, x2
   1b8b8:	cmp	x9, x8
   1b8bc:	b.ls	1b928 <x2nrealloc@@Base+0x90>  // b.plast
   1b8c0:	add	x8, x8, x8, lsr #1
   1b8c4:	add	x8, x8, #0x1
   1b8c8:	mul	x19, x8, x2
   1b8cc:	str	x8, [x1]
   1b8d0:	cbnz	x19, 1b90c <x2nrealloc@@Base+0x74>
   1b8d4:	bl	a960 <free@plt>
   1b8d8:	mov	x0, xzr
   1b8dc:	b	1b91c <x2nrealloc@@Base+0x84>
   1b8e0:	cbnz	x8, 1b8f4 <x2nrealloc@@Base+0x5c>
   1b8e4:	mov	w8, #0x80                  	// #128
   1b8e8:	udiv	x8, x8, x2
   1b8ec:	cmp	x2, #0x80
   1b8f0:	cinc	x8, x8, hi  // hi = pmore
   1b8f4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   1b8f8:	udiv	x9, x9, x2
   1b8fc:	cmp	x9, x8
   1b900:	b.cc	1b928 <x2nrealloc@@Base+0x90>  // b.lo, b.ul, b.last
   1b904:	mul	x19, x8, x2
   1b908:	str	x8, [x1]
   1b90c:	mov	x1, x19
   1b910:	bl	a720 <realloc@plt>
   1b914:	cbz	x19, 1b91c <x2nrealloc@@Base+0x84>
   1b918:	cbz	x0, 1b928 <x2nrealloc@@Base+0x90>
   1b91c:	ldr	x19, [sp, #16]
   1b920:	ldp	x29, x30, [sp], #32
   1b924:	ret
   1b928:	bl	a7d0 <xalloc_die@plt>

000000000001b92c <xcharalloc@@Base>:
   1b92c:	stp	x29, x30, [sp, #-32]!
   1b930:	str	x19, [sp, #16]
   1b934:	mov	x29, sp
   1b938:	mov	x19, x0
   1b93c:	bl	a540 <malloc@plt>
   1b940:	cbz	x19, 1b948 <xcharalloc@@Base+0x1c>
   1b944:	cbz	x0, 1b954 <xcharalloc@@Base+0x28>
   1b948:	ldr	x19, [sp, #16]
   1b94c:	ldp	x29, x30, [sp], #32
   1b950:	ret
   1b954:	bl	a7d0 <xalloc_die@plt>

000000000001b958 <x2realloc@@Base>:
   1b958:	stp	x29, x30, [sp, #-32]!
   1b95c:	str	x19, [sp, #16]
   1b960:	ldr	x19, [x1]
   1b964:	mov	x29, sp
   1b968:	cbz	x0, 1b998 <x2realloc@@Base+0x40>
   1b96c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   1b970:	movk	x8, #0x5554
   1b974:	cmp	x19, x8
   1b978:	b.cs	1b9c8 <x2realloc@@Base+0x70>  // b.hs, b.nlast
   1b97c:	add	x8, x19, x19, lsr #1
   1b980:	adds	x19, x8, #0x1
   1b984:	str	x19, [x1]
   1b988:	b.ne	1b9ac <x2realloc@@Base+0x54>  // b.any
   1b98c:	bl	a960 <free@plt>
   1b990:	mov	x0, xzr
   1b994:	b	1b9bc <x2realloc@@Base+0x64>
   1b998:	cbz	x19, 1b9a4 <x2realloc@@Base+0x4c>
   1b99c:	tbz	x19, #63, 1b9a8 <x2realloc@@Base+0x50>
   1b9a0:	b	1b9c8 <x2realloc@@Base+0x70>
   1b9a4:	mov	w19, #0x80                  	// #128
   1b9a8:	str	x19, [x1]
   1b9ac:	mov	x1, x19
   1b9b0:	bl	a720 <realloc@plt>
   1b9b4:	cbz	x19, 1b9bc <x2realloc@@Base+0x64>
   1b9b8:	cbz	x0, 1b9c8 <x2realloc@@Base+0x70>
   1b9bc:	ldr	x19, [sp, #16]
   1b9c0:	ldp	x29, x30, [sp], #32
   1b9c4:	ret
   1b9c8:	bl	a7d0 <xalloc_die@plt>

000000000001b9cc <xzalloc@@Base>:
   1b9cc:	stp	x29, x30, [sp, #-32]!
   1b9d0:	str	x19, [sp, #16]
   1b9d4:	mov	x29, sp
   1b9d8:	mov	x19, x0
   1b9dc:	bl	a540 <malloc@plt>
   1b9e0:	cbz	x19, 1b9e8 <xzalloc@@Base+0x1c>
   1b9e4:	cbz	x0, 1b9fc <xzalloc@@Base+0x30>
   1b9e8:	mov	x2, x19
   1b9ec:	ldr	x19, [sp, #16]
   1b9f0:	mov	w1, wzr
   1b9f4:	ldp	x29, x30, [sp], #32
   1b9f8:	b	a630 <memset@plt>
   1b9fc:	bl	a7d0 <xalloc_die@plt>

000000000001ba00 <xcalloc@@Base>:
   1ba00:	stp	x29, x30, [sp, #-16]!
   1ba04:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1ba08:	udiv	x8, x8, x1
   1ba0c:	cmp	x8, x0
   1ba10:	mov	x29, sp
   1ba14:	b.cc	1ba28 <xcalloc@@Base+0x28>  // b.lo, b.ul, b.last
   1ba18:	bl	a6b0 <calloc@plt>
   1ba1c:	cbz	x0, 1ba28 <xcalloc@@Base+0x28>
   1ba20:	ldp	x29, x30, [sp], #16
   1ba24:	ret
   1ba28:	bl	a7d0 <xalloc_die@plt>

000000000001ba2c <xmemdup@@Base>:
   1ba2c:	stp	x29, x30, [sp, #-32]!
   1ba30:	stp	x20, x19, [sp, #16]
   1ba34:	mov	x20, x0
   1ba38:	mov	x0, x1
   1ba3c:	mov	x29, sp
   1ba40:	mov	x19, x1
   1ba44:	bl	a540 <malloc@plt>
   1ba48:	cbz	x19, 1ba50 <xmemdup@@Base+0x24>
   1ba4c:	cbz	x0, 1ba64 <xmemdup@@Base+0x38>
   1ba50:	mov	x1, x20
   1ba54:	mov	x2, x19
   1ba58:	ldp	x20, x19, [sp, #16]
   1ba5c:	ldp	x29, x30, [sp], #32
   1ba60:	b	a210 <memcpy@plt>
   1ba64:	bl	a7d0 <xalloc_die@plt>

000000000001ba68 <xstrdup@@Base>:
   1ba68:	stp	x29, x30, [sp, #-32]!
   1ba6c:	stp	x20, x19, [sp, #16]
   1ba70:	mov	x29, sp
   1ba74:	mov	x19, x0
   1ba78:	bl	a280 <strlen@plt>
   1ba7c:	add	x20, x0, #0x1
   1ba80:	mov	x0, x20
   1ba84:	bl	a540 <malloc@plt>
   1ba88:	cbz	x20, 1ba90 <xstrdup@@Base+0x28>
   1ba8c:	cbz	x0, 1baa4 <xstrdup@@Base+0x3c>
   1ba90:	mov	x1, x19
   1ba94:	mov	x2, x20
   1ba98:	ldp	x20, x19, [sp, #16]
   1ba9c:	ldp	x29, x30, [sp], #32
   1baa0:	b	a210 <memcpy@plt>
   1baa4:	bl	a7d0 <xalloc_die@plt>

000000000001baa8 <xalloc_die@@Base>:
   1baa8:	stp	x29, x30, [sp, #-32]!
   1baac:	str	x19, [sp, #16]
   1bab0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1bab4:	ldr	x8, [x8, #3976]
   1bab8:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1babc:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1bac0:	add	x0, x0, #0x387
   1bac4:	ldr	w19, [x8]
   1bac8:	add	x1, x1, #0xfbe
   1bacc:	mov	w2, #0x5                   	// #5
   1bad0:	mov	x29, sp
   1bad4:	bl	ac80 <dcgettext@plt>
   1bad8:	adrp	x2, 2f000 <vasnprintf@@Base+0x124c>
   1badc:	mov	x3, x0
   1bae0:	add	x2, x2, #0x3a8
   1bae4:	mov	w0, w19
   1bae8:	mov	w1, wzr
   1baec:	bl	a2a0 <error@plt>
   1baf0:	bl	a840 <abort@plt>

000000000001baf4 <xgetcwd@@Base>:
   1baf4:	stp	x29, x30, [sp, #-32]!
   1baf8:	mov	x0, xzr
   1bafc:	mov	x1, xzr
   1bb00:	str	x19, [sp, #16]
   1bb04:	mov	x29, sp
   1bb08:	bl	a250 <getcwd@plt>
   1bb0c:	mov	x19, x0
   1bb10:	cbnz	x0, 1bb24 <xgetcwd@@Base+0x30>
   1bb14:	bl	ad80 <__errno_location@plt>
   1bb18:	ldr	w8, [x0]
   1bb1c:	cmp	w8, #0xc
   1bb20:	b.eq	1bb34 <xgetcwd@@Base+0x40>  // b.none
   1bb24:	mov	x0, x19
   1bb28:	ldr	x19, [sp, #16]
   1bb2c:	ldp	x29, x30, [sp], #32
   1bb30:	ret
   1bb34:	bl	a7d0 <xalloc_die@plt>

000000000001bb38 <gl_list_create_empty@@Base>:
   1bb38:	stp	x29, x30, [sp, #-16]!
   1bb3c:	ldr	x8, [x0]
   1bb40:	and	w4, w4, #0x1
   1bb44:	mov	x29, sp
   1bb48:	blr	x8
   1bb4c:	cbz	x0, 1bb58 <gl_list_create_empty@@Base+0x20>
   1bb50:	ldp	x29, x30, [sp], #16
   1bb54:	ret
   1bb58:	bl	a7d0 <xalloc_die@plt>

000000000001bb5c <gl_list_create@@Base>:
   1bb5c:	stp	x29, x30, [sp, #-16]!
   1bb60:	ldr	x8, [x0, #8]
   1bb64:	and	w4, w4, #0x1
   1bb68:	mov	x29, sp
   1bb6c:	blr	x8
   1bb70:	cbz	x0, 1bb7c <gl_list_create@@Base+0x20>
   1bb74:	ldp	x29, x30, [sp], #16
   1bb78:	ret
   1bb7c:	bl	a7d0 <xalloc_die@plt>

000000000001bb80 <gl_list_node_set_value@@Base>:
   1bb80:	stp	x29, x30, [sp, #-16]!
   1bb84:	ldr	x8, [x0]
   1bb88:	mov	x29, sp
   1bb8c:	ldr	x8, [x8, #32]
   1bb90:	blr	x8
   1bb94:	tbnz	w0, #31, 1bba0 <gl_list_node_set_value@@Base+0x20>
   1bb98:	ldp	x29, x30, [sp], #16
   1bb9c:	ret
   1bba0:	bl	a7d0 <xalloc_die@plt>

000000000001bba4 <gl_list_set_at@@Base>:
   1bba4:	stp	x29, x30, [sp, #-16]!
   1bba8:	ldr	x8, [x0]
   1bbac:	mov	x29, sp
   1bbb0:	ldr	x8, [x8, #64]
   1bbb4:	blr	x8
   1bbb8:	cbz	x0, 1bbc4 <gl_list_set_at@@Base+0x20>
   1bbbc:	ldp	x29, x30, [sp], #16
   1bbc0:	ret
   1bbc4:	bl	a7d0 <xalloc_die@plt>

000000000001bbc8 <gl_list_add_first@@Base>:
   1bbc8:	stp	x29, x30, [sp, #-16]!
   1bbcc:	ldr	x8, [x0]
   1bbd0:	mov	x29, sp
   1bbd4:	ldr	x8, [x8, #88]
   1bbd8:	blr	x8
   1bbdc:	cbz	x0, 1bbe8 <gl_list_add_first@@Base+0x20>
   1bbe0:	ldp	x29, x30, [sp], #16
   1bbe4:	ret
   1bbe8:	bl	a7d0 <xalloc_die@plt>

000000000001bbec <gl_list_add_last@@Base>:
   1bbec:	stp	x29, x30, [sp, #-16]!
   1bbf0:	ldr	x8, [x0]
   1bbf4:	mov	x29, sp
   1bbf8:	ldr	x8, [x8, #96]
   1bbfc:	blr	x8
   1bc00:	cbz	x0, 1bc0c <gl_list_add_last@@Base+0x20>
   1bc04:	ldp	x29, x30, [sp], #16
   1bc08:	ret
   1bc0c:	bl	a7d0 <xalloc_die@plt>

000000000001bc10 <gl_list_add_before@@Base>:
   1bc10:	stp	x29, x30, [sp, #-16]!
   1bc14:	ldr	x8, [x0]
   1bc18:	mov	x29, sp
   1bc1c:	ldr	x8, [x8, #104]
   1bc20:	blr	x8
   1bc24:	cbz	x0, 1bc30 <gl_list_add_before@@Base+0x20>
   1bc28:	ldp	x29, x30, [sp], #16
   1bc2c:	ret
   1bc30:	bl	a7d0 <xalloc_die@plt>

000000000001bc34 <gl_list_add_after@@Base>:
   1bc34:	stp	x29, x30, [sp, #-16]!
   1bc38:	ldr	x8, [x0]
   1bc3c:	mov	x29, sp
   1bc40:	ldr	x8, [x8, #112]
   1bc44:	blr	x8
   1bc48:	cbz	x0, 1bc54 <gl_list_add_after@@Base+0x20>
   1bc4c:	ldp	x29, x30, [sp], #16
   1bc50:	ret
   1bc54:	bl	a7d0 <xalloc_die@plt>

000000000001bc58 <gl_list_add_at@@Base>:
   1bc58:	stp	x29, x30, [sp, #-16]!
   1bc5c:	ldr	x8, [x0]
   1bc60:	mov	x29, sp
   1bc64:	ldr	x8, [x8, #120]
   1bc68:	blr	x8
   1bc6c:	cbz	x0, 1bc78 <gl_list_add_at@@Base+0x20>
   1bc70:	ldp	x29, x30, [sp], #16
   1bc74:	ret
   1bc78:	bl	a7d0 <xalloc_die@plt>

000000000001bc7c <gl_sortedlist_add@@Base>:
   1bc7c:	stp	x29, x30, [sp, #-16]!
   1bc80:	ldr	x8, [x0]
   1bc84:	mov	x29, sp
   1bc88:	ldr	x8, [x8, #224]
   1bc8c:	blr	x8
   1bc90:	cbz	x0, 1bc9c <gl_sortedlist_add@@Base+0x20>
   1bc94:	ldp	x29, x30, [sp], #16
   1bc98:	ret
   1bc9c:	bl	a7d0 <xalloc_die@plt>

000000000001bca0 <gl_map_create_empty@@Base>:
   1bca0:	stp	x29, x30, [sp, #-16]!
   1bca4:	ldr	x8, [x0]
   1bca8:	mov	x29, sp
   1bcac:	blr	x8
   1bcb0:	cbz	x0, 1bcbc <gl_map_create_empty@@Base+0x1c>
   1bcb4:	ldp	x29, x30, [sp], #16
   1bcb8:	ret
   1bcbc:	bl	a7d0 <xalloc_die@plt>

000000000001bcc0 <gl_map_put@@Base>:
   1bcc0:	sub	sp, sp, #0x30
   1bcc4:	stp	x29, x30, [sp, #16]
   1bcc8:	stp	x20, x19, [sp, #32]
   1bccc:	ldr	x8, [x0]
   1bcd0:	add	x3, sp, #0x8
   1bcd4:	add	x29, sp, #0x10
   1bcd8:	mov	x20, x0
   1bcdc:	ldr	x8, [x8, #24]
   1bce0:	blr	x8
   1bce4:	mov	w19, w0
   1bce8:	cbz	w0, 1bcf4 <gl_map_put@@Base+0x34>
   1bcec:	tbz	w19, #31, 1bd04 <gl_map_put@@Base+0x44>
   1bcf0:	bl	a7d0 <xalloc_die@plt>
   1bcf4:	ldr	x8, [x20, #24]
   1bcf8:	cbz	x8, 1bd04 <gl_map_put@@Base+0x44>
   1bcfc:	ldr	x0, [sp, #8]
   1bd00:	blr	x8
   1bd04:	cmp	w19, #0x0
   1bd08:	ldp	x20, x19, [sp, #32]
   1bd0c:	ldp	x29, x30, [sp, #16]
   1bd10:	cset	w0, ne  // ne = any
   1bd14:	add	sp, sp, #0x30
   1bd18:	ret

000000000001bd1c <gl_map_getput@@Base>:
   1bd1c:	stp	x29, x30, [sp, #-16]!
   1bd20:	ldr	x8, [x0]
   1bd24:	mov	x29, sp
   1bd28:	ldr	x8, [x8, #24]
   1bd2c:	blr	x8
   1bd30:	tbnz	w0, #31, 1bd44 <gl_map_getput@@Base+0x28>
   1bd34:	cmp	w0, #0x0
   1bd38:	cset	w0, ne  // ne = any
   1bd3c:	ldp	x29, x30, [sp], #16
   1bd40:	ret
   1bd44:	bl	a7d0 <xalloc_die@plt>

000000000001bd48 <gl_set_create_empty@@Base>:
   1bd48:	stp	x29, x30, [sp, #-16]!
   1bd4c:	ldr	x8, [x0]
   1bd50:	mov	x29, sp
   1bd54:	blr	x8
   1bd58:	cbz	x0, 1bd64 <gl_set_create_empty@@Base+0x1c>
   1bd5c:	ldp	x29, x30, [sp], #16
   1bd60:	ret
   1bd64:	bl	a7d0 <xalloc_die@plt>

000000000001bd68 <gl_set_add@@Base>:
   1bd68:	stp	x29, x30, [sp, #-16]!
   1bd6c:	ldr	x8, [x0]
   1bd70:	mov	x29, sp
   1bd74:	ldr	x8, [x8, #24]
   1bd78:	blr	x8
   1bd7c:	tbnz	w0, #31, 1bd90 <gl_set_add@@Base+0x28>
   1bd80:	cmp	w0, #0x0
   1bd84:	cset	w0, ne  // ne = any
   1bd88:	ldp	x29, x30, [sp], #16
   1bd8c:	ret
   1bd90:	bl	a7d0 <xalloc_die@plt>

000000000001bd94 <xsum@@Base>:
   1bd94:	adds	x8, x0, x1
   1bd98:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   1bd9c:	ret

000000000001bda0 <xsum3@@Base>:
   1bda0:	adds	x8, x0, x1
   1bda4:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   1bda8:	adds	x8, x8, x2
   1bdac:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   1bdb0:	ret

000000000001bdb4 <xsum4@@Base>:
   1bdb4:	adds	x8, x0, x1
   1bdb8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   1bdbc:	adds	x8, x8, x2
   1bdc0:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   1bdc4:	adds	x8, x8, x3
   1bdc8:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   1bdcc:	ret

000000000001bdd0 <xmax@@Base>:
   1bdd0:	cmp	x0, x1
   1bdd4:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   1bdd8:	ret

000000000001bddc <xstdopen@@Base>:
   1bddc:	stp	x29, x30, [sp, #-32]!
   1bde0:	stp	x20, x19, [sp, #16]
   1bde4:	mov	x29, sp
   1bde8:	bl	a580 <stdopen@plt>
   1bdec:	cbz	w0, 1be30 <xstdopen@@Base+0x54>
   1bdf0:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1bdf4:	ldr	x8, [x8, #3976]
   1bdf8:	mov	w19, w0
   1bdfc:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1be00:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1be04:	ldr	w20, [x8]
   1be08:	add	x0, x0, #0x387
   1be0c:	add	x1, x1, #0xfcf
   1be10:	mov	w2, #0x5                   	// #5
   1be14:	bl	ac80 <dcgettext@plt>
   1be18:	mov	x2, x0
   1be1c:	mov	w0, w20
   1be20:	mov	w1, w19
   1be24:	ldp	x20, x19, [sp, #16]
   1be28:	ldp	x29, x30, [sp], #32
   1be2c:	b	a2a0 <error@plt>
   1be30:	ldp	x20, x19, [sp, #16]
   1be34:	ldp	x29, x30, [sp], #32
   1be38:	ret

000000000001be3c <xstrndup@@Base>:
   1be3c:	stp	x29, x30, [sp, #-16]!
   1be40:	mov	x29, sp
   1be44:	bl	aa20 <strndup@plt>
   1be48:	cbz	x0, 1be54 <xstrndup@@Base+0x18>
   1be4c:	ldp	x29, x30, [sp], #16
   1be50:	ret
   1be54:	bl	a7d0 <xalloc_die@plt>

000000000001be58 <xvasprintf@@Base>:
   1be58:	sub	sp, sp, #0x80
   1be5c:	str	x23, [sp, #80]
   1be60:	mov	x8, x0
   1be64:	mov	x23, xzr
   1be68:	mov	x9, x0
   1be6c:	stp	x29, x30, [sp, #64]
   1be70:	stp	x22, x21, [sp, #96]
   1be74:	stp	x20, x19, [sp, #112]
   1be78:	add	x29, sp, #0x40
   1be7c:	ldrb	w10, [x9]
   1be80:	cmp	w10, #0x25
   1be84:	b.ne	1bea0 <xvasprintf@@Base+0x48>  // b.any
   1be88:	ldrb	w10, [x9, #1]
   1be8c:	cmp	w10, #0x73
   1be90:	b.ne	1bf14 <xvasprintf@@Base+0xbc>  // b.any
   1be94:	sub	x23, x23, #0x1
   1be98:	add	x9, x9, #0x2
   1be9c:	b	1be7c <xvasprintf@@Base+0x24>
   1bea0:	cbnz	w10, 1bf14 <xvasprintf@@Base+0xbc>
   1bea4:	ldp	q1, q0, [x1]
   1bea8:	stp	q1, q0, [sp]
   1beac:	stp	q1, q0, [sp, #32]
   1beb0:	cbz	x23, 1bf6c <xvasprintf@@Base+0x114>
   1beb4:	ldr	x20, [sp, #40]
   1beb8:	ldr	w8, [sp, #56]
   1bebc:	mov	x19, xzr
   1bec0:	mov	x21, x23
   1bec4:	b	1bee8 <xvasprintf@@Base+0x90>
   1bec8:	add	x8, x20, w8, sxtw
   1becc:	ldr	x0, [x8]
   1bed0:	bl	a280 <strlen@plt>
   1bed4:	adds	x8, x19, x0
   1bed8:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
   1bedc:	adds	x21, x21, #0x1
   1bee0:	mov	w8, w22
   1bee4:	b.cs	1bf50 <xvasprintf@@Base+0xf8>  // b.hs, b.nlast
   1bee8:	tbnz	w8, #31, 1bef4 <xvasprintf@@Base+0x9c>
   1beec:	mov	w22, w8
   1bef0:	b	1bf04 <xvasprintf@@Base+0xac>
   1bef4:	add	w22, w8, #0x8
   1bef8:	cmn	w8, #0x8
   1befc:	str	w22, [sp, #56]
   1bf00:	b.le	1bec8 <xvasprintf@@Base+0x70>
   1bf04:	ldr	x8, [sp, #32]
   1bf08:	add	x9, x8, #0x8
   1bf0c:	str	x9, [sp, #32]
   1bf10:	b	1becc <xvasprintf@@Base+0x74>
   1bf14:	ldp	q1, q0, [x1]
   1bf18:	mov	x0, sp
   1bf1c:	add	x2, sp, #0x20
   1bf20:	mov	x1, x8
   1bf24:	stp	q1, q0, [sp, #32]
   1bf28:	bl	aa00 <vasprintf@plt>
   1bf2c:	tbnz	w0, #31, 1bf38 <xvasprintf@@Base+0xe0>
   1bf30:	ldr	x19, [sp]
   1bf34:	b	1bff8 <xvasprintf@@Base+0x1a0>
   1bf38:	bl	ad80 <__errno_location@plt>
   1bf3c:	ldr	w8, [x0]
   1bf40:	cmp	w8, #0xc
   1bf44:	b.eq	1c014 <xvasprintf@@Base+0x1bc>  // b.none
   1bf48:	mov	x19, xzr
   1bf4c:	b	1bff8 <xvasprintf@@Base+0x1a0>
   1bf50:	lsr	x8, x19, #31
   1bf54:	cbz	x8, 1bf84 <xvasprintf@@Base+0x12c>
   1bf58:	bl	ad80 <__errno_location@plt>
   1bf5c:	mov	w8, #0x4b                  	// #75
   1bf60:	mov	x19, xzr
   1bf64:	str	w8, [x0]
   1bf68:	b	1bff8 <xvasprintf@@Base+0x1a0>
   1bf6c:	mov	w0, #0x1                   	// #1
   1bf70:	bl	a650 <xmalloc@plt>
   1bf74:	mov	x19, x0
   1bf78:	mov	x20, x0
   1bf7c:	strb	wzr, [x0]
   1bf80:	b	1bff8 <xvasprintf@@Base+0x1a0>
   1bf84:	add	x0, x19, #0x1
   1bf88:	bl	a650 <xmalloc@plt>
   1bf8c:	mov	x19, x0
   1bf90:	mov	x20, x0
   1bf94:	b	1bfd0 <xvasprintf@@Base+0x178>
   1bf98:	ldr	x8, [sp]
   1bf9c:	add	x9, x8, #0x8
   1bfa0:	str	x9, [sp]
   1bfa4:	ldr	x21, [x8]
   1bfa8:	mov	x0, x21
   1bfac:	bl	a280 <strlen@plt>
   1bfb0:	mov	x22, x0
   1bfb4:	mov	x0, x20
   1bfb8:	mov	x1, x21
   1bfbc:	mov	x2, x22
   1bfc0:	bl	a210 <memcpy@plt>
   1bfc4:	adds	x23, x23, #0x1
   1bfc8:	add	x20, x20, x22
   1bfcc:	b.cs	1bff4 <xvasprintf@@Base+0x19c>  // b.hs, b.nlast
   1bfd0:	ldrsw	x8, [sp, #24]
   1bfd4:	tbz	w8, #31, 1bf98 <xvasprintf@@Base+0x140>
   1bfd8:	add	w9, w8, #0x8
   1bfdc:	cmn	w8, #0x8
   1bfe0:	str	w9, [sp, #24]
   1bfe4:	b.gt	1bf98 <xvasprintf@@Base+0x140>
   1bfe8:	ldr	x9, [sp, #8]
   1bfec:	add	x8, x9, x8
   1bff0:	b	1bfa4 <xvasprintf@@Base+0x14c>
   1bff4:	strb	wzr, [x20]
   1bff8:	mov	x0, x19
   1bffc:	ldp	x20, x19, [sp, #112]
   1c000:	ldp	x22, x21, [sp, #96]
   1c004:	ldr	x23, [sp, #80]
   1c008:	ldp	x29, x30, [sp, #64]
   1c00c:	add	sp, sp, #0x80
   1c010:	ret
   1c014:	bl	a7d0 <xalloc_die@plt>

000000000001c018 <xasprintf@@Base>:
   1c018:	sub	sp, sp, #0x120
   1c01c:	stp	x29, x30, [sp, #256]
   1c020:	add	x29, sp, #0x100
   1c024:	mov	x8, #0xffffffffffffffc8    	// #-56
   1c028:	mov	x9, sp
   1c02c:	sub	x10, x29, #0x78
   1c030:	movk	x8, #0xff80, lsl #32
   1c034:	add	x11, x29, #0x20
   1c038:	add	x9, x9, #0x80
   1c03c:	add	x10, x10, #0x38
   1c040:	stp	x9, x8, [x29, #-16]
   1c044:	stp	x11, x10, [x29, #-32]
   1c048:	stp	x1, x2, [x29, #-120]
   1c04c:	stp	x3, x4, [x29, #-104]
   1c050:	stp	x5, x6, [x29, #-88]
   1c054:	stur	x7, [x29, #-72]
   1c058:	stp	q0, q1, [sp]
   1c05c:	ldp	q0, q1, [x29, #-32]
   1c060:	sub	x1, x29, #0x40
   1c064:	str	x28, [sp, #272]
   1c068:	stp	q2, q3, [sp, #32]
   1c06c:	stp	q4, q5, [sp, #64]
   1c070:	stp	q6, q7, [sp, #96]
   1c074:	stp	q0, q1, [x29, #-64]
   1c078:	bl	acd0 <xvasprintf@plt>
   1c07c:	ldr	x28, [sp, #272]
   1c080:	ldp	x29, x30, [sp, #256]
   1c084:	add	sp, sp, #0x120
   1c088:	ret

000000000001c08c <asnprintf@@Base>:
   1c08c:	sub	sp, sp, #0x100
   1c090:	stp	x29, x30, [sp, #240]
   1c094:	add	x29, sp, #0xf0
   1c098:	mov	x8, #0xffffffffffffffd8    	// #-40
   1c09c:	mov	x9, sp
   1c0a0:	sub	x10, x29, #0x68
   1c0a4:	movk	x8, #0xff80, lsl #32
   1c0a8:	add	x11, x29, #0x10
   1c0ac:	add	x9, x9, #0x80
   1c0b0:	add	x10, x10, #0x28
   1c0b4:	stp	x9, x8, [x29, #-16]
   1c0b8:	stp	x11, x10, [x29, #-32]
   1c0bc:	stp	x3, x4, [x29, #-104]
   1c0c0:	stp	x5, x6, [x29, #-88]
   1c0c4:	stur	x7, [x29, #-72]
   1c0c8:	stp	q1, q2, [sp, #16]
   1c0cc:	str	q0, [sp]
   1c0d0:	ldp	q0, q1, [x29, #-32]
   1c0d4:	sub	x3, x29, #0x40
   1c0d8:	stp	q3, q4, [sp, #48]
   1c0dc:	stp	q5, q6, [sp, #80]
   1c0e0:	str	q7, [sp, #112]
   1c0e4:	stp	q0, q1, [x29, #-64]
   1c0e8:	bl	a9d0 <vasnprintf@plt>
   1c0ec:	ldp	x29, x30, [sp, #240]
   1c0f0:	add	sp, sp, #0x100
   1c0f4:	ret

000000000001c0f8 <chdir_long@@Base>:
   1c0f8:	stp	x29, x30, [sp, #-80]!
   1c0fc:	stp	x26, x25, [sp, #16]
   1c100:	stp	x24, x23, [sp, #32]
   1c104:	stp	x22, x21, [sp, #48]
   1c108:	stp	x20, x19, [sp, #64]
   1c10c:	mov	x29, sp
   1c110:	mov	x21, x0
   1c114:	bl	a940 <chdir@plt>
   1c118:	mov	w20, w0
   1c11c:	cbz	w0, 1c350 <chdir_long@@Base+0x258>
   1c120:	bl	ad80 <__errno_location@plt>
   1c124:	ldr	w8, [x0]
   1c128:	cmp	w8, #0x24
   1c12c:	b.ne	1c350 <chdir_long@@Base+0x258>  // b.any
   1c130:	mov	x19, x0
   1c134:	mov	x0, x21
   1c138:	bl	a280 <strlen@plt>
   1c13c:	cbz	x0, 1c39c <chdir_long@@Base+0x2a4>
   1c140:	mov	x22, x0
   1c144:	cmp	x0, #0xfff
   1c148:	b.ls	1c3bc <chdir_long@@Base+0x2c4>  // b.plast
   1c14c:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1c150:	add	x1, x1, #0x1db
   1c154:	mov	x0, x21
   1c158:	bl	aa30 <strspn@plt>
   1c15c:	cbz	x0, 1c1c4 <chdir_long@@Base+0xcc>
   1c160:	mov	x23, x0
   1c164:	cmp	x0, #0x2
   1c168:	b.ne	1c1d0 <chdir_long@@Base+0xd8>  // b.any
   1c16c:	add	x0, x21, #0x3
   1c170:	sub	x2, x22, #0x3
   1c174:	mov	w1, #0x2f                  	// #47
   1c178:	mov	w24, #0x2f                  	// #47
   1c17c:	bl	ab70 <memchr@plt>
   1c180:	cbz	x0, 1c2f0 <chdir_long@@Base+0x1f8>
   1c184:	mov	x23, x0
   1c188:	strb	wzr, [x0]
   1c18c:	mov	w0, #0xffffff9c            	// #-100
   1c190:	mov	w2, #0x4900                	// #18688
   1c194:	mov	x1, x21
   1c198:	bl	ad60 <openat@plt>
   1c19c:	strb	w24, [x23]
   1c1a0:	tbnz	w0, #31, 1c324 <chdir_long@@Base+0x22c>
   1c1a4:	add	x23, x23, #0x1
   1c1a8:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1c1ac:	mov	w20, w0
   1c1b0:	add	x1, x1, #0x1db
   1c1b4:	mov	x0, x23
   1c1b8:	bl	aa30 <strspn@plt>
   1c1bc:	add	x23, x23, x0
   1c1c0:	b	1c1f0 <chdir_long@@Base+0xf8>
   1c1c4:	mov	w20, #0xffffff9c            	// #-100
   1c1c8:	mov	x23, x21
   1c1cc:	b	1c1f0 <chdir_long@@Base+0xf8>
   1c1d0:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1c1d4:	add	x1, x1, #0x1db
   1c1d8:	mov	w0, #0xffffff9c            	// #-100
   1c1dc:	mov	w2, #0x4900                	// #18688
   1c1e0:	bl	ad60 <openat@plt>
   1c1e4:	tbnz	w0, #31, 1c324 <chdir_long@@Base+0x22c>
   1c1e8:	mov	w20, w0
   1c1ec:	add	x23, x21, x23
   1c1f0:	ldrb	w8, [x23]
   1c1f4:	cmp	w8, #0x2f
   1c1f8:	b.eq	1c3dc <chdir_long@@Base+0x2e4>  // b.none
   1c1fc:	add	x25, x21, x22
   1c200:	cmp	x23, x25
   1c204:	b.hi	1c3fc <chdir_long@@Base+0x304>  // b.pmore
   1c208:	sub	x8, x25, x23
   1c20c:	cmp	x8, #0x1, lsl #12
   1c210:	b.lt	1c2b8 <chdir_long@@Base+0x1c0>  // b.tstop
   1c214:	adrp	x21, 31000 <vasnprintf@@Base+0x324c>
   1c218:	mov	w26, #0x2f                  	// #47
   1c21c:	add	x21, x21, #0x1db
   1c220:	b	1c248 <chdir_long@@Base+0x150>
   1c224:	strb	w26, [x24], #1
   1c228:	mov	x0, x24
   1c22c:	mov	x1, x21
   1c230:	bl	aa30 <strspn@plt>
   1c234:	add	x23, x24, x0
   1c238:	sub	x8, x25, x23
   1c23c:	cmp	x8, #0xfff
   1c240:	mov	w20, w22
   1c244:	b.le	1c2bc <chdir_long@@Base+0x1c4>
   1c248:	mov	w1, #0x2f                  	// #47
   1c24c:	mov	w2, #0x1000                	// #4096
   1c250:	mov	x0, x23
   1c254:	bl	aa80 <memrchr@plt>
   1c258:	cbz	x0, 1c2f0 <chdir_long@@Base+0x1f8>
   1c25c:	sub	x8, x0, x23
   1c260:	mov	x24, x0
   1c264:	cmp	x8, #0x1, lsl #12
   1c268:	strb	wzr, [x0]
   1c26c:	b.ge	1c37c <chdir_long@@Base+0x284>  // b.tcont
   1c270:	mov	w2, #0x4900                	// #18688
   1c274:	mov	w0, w20
   1c278:	mov	x1, x23
   1c27c:	bl	ad60 <openat@plt>
   1c280:	tbnz	w0, #31, 1c32c <chdir_long@@Base+0x234>
   1c284:	mov	w22, w0
   1c288:	tbnz	w20, #31, 1c224 <chdir_long@@Base+0x12c>
   1c28c:	mov	w0, w20
   1c290:	bl	a790 <close@plt>
   1c294:	cbz	w0, 1c224 <chdir_long@@Base+0x12c>
   1c298:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   1c29c:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1c2a0:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   1c2a4:	add	x0, x0, #0x4f
   1c2a8:	add	x1, x1, #0xff1
   1c2ac:	add	x3, x3, #0x5c
   1c2b0:	mov	w2, #0x40                  	// #64
   1c2b4:	bl	ad70 <__assert_fail@plt>
   1c2b8:	mov	w22, w20
   1c2bc:	cmp	x23, x25
   1c2c0:	b.cs	1c2fc <chdir_long@@Base+0x204>  // b.hs, b.nlast
   1c2c4:	mov	w2, #0x4900                	// #18688
   1c2c8:	mov	w0, w22
   1c2cc:	mov	x1, x23
   1c2d0:	bl	ad60 <openat@plt>
   1c2d4:	tbnz	w0, #31, 1c36c <chdir_long@@Base+0x274>
   1c2d8:	mov	w20, w0
   1c2dc:	tbnz	w22, #31, 1c300 <chdir_long@@Base+0x208>
   1c2e0:	mov	w0, w22
   1c2e4:	bl	a790 <close@plt>
   1c2e8:	cbz	w0, 1c300 <chdir_long@@Base+0x208>
   1c2ec:	b	1c298 <chdir_long@@Base+0x1a0>
   1c2f0:	mov	w8, #0x24                  	// #36
   1c2f4:	str	w8, [x19]
   1c2f8:	b	1c34c <chdir_long@@Base+0x254>
   1c2fc:	mov	w20, w22
   1c300:	mov	w0, w20
   1c304:	bl	a2c0 <fchdir@plt>
   1c308:	cbnz	w0, 1c334 <chdir_long@@Base+0x23c>
   1c30c:	tbnz	w20, #31, 1c31c <chdir_long@@Base+0x224>
   1c310:	mov	w0, w20
   1c314:	bl	a790 <close@plt>
   1c318:	cbnz	w0, 1c298 <chdir_long@@Base+0x1a0>
   1c31c:	mov	w20, wzr
   1c320:	b	1c350 <chdir_long@@Base+0x258>
   1c324:	ldr	w21, [x19]
   1c328:	b	1c348 <chdir_long@@Base+0x250>
   1c32c:	mov	w8, #0x2f                  	// #47
   1c330:	strb	w8, [x24]
   1c334:	ldr	w21, [x19]
   1c338:	tbnz	w20, #31, 1c348 <chdir_long@@Base+0x250>
   1c33c:	mov	w0, w20
   1c340:	bl	a790 <close@plt>
   1c344:	cbnz	w0, 1c298 <chdir_long@@Base+0x1a0>
   1c348:	str	w21, [x19]
   1c34c:	mov	w20, #0xffffffff            	// #-1
   1c350:	mov	w0, w20
   1c354:	ldp	x20, x19, [sp, #64]
   1c358:	ldp	x22, x21, [sp, #48]
   1c35c:	ldp	x24, x23, [sp, #32]
   1c360:	ldp	x26, x25, [sp, #16]
   1c364:	ldp	x29, x30, [sp], #80
   1c368:	ret
   1c36c:	mov	w20, w22
   1c370:	ldr	w21, [x19]
   1c374:	tbz	w20, #31, 1c33c <chdir_long@@Base+0x244>
   1c378:	b	1c348 <chdir_long@@Base+0x250>
   1c37c:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   1c380:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1c384:	adrp	x3, 30000 <vasnprintf@@Base+0x224c>
   1c388:	add	x0, x0, #0x3c
   1c38c:	add	x1, x1, #0xff1
   1c390:	add	x3, x3, #0xffe
   1c394:	mov	w2, #0xb3                  	// #179
   1c398:	bl	ad70 <__assert_fail@plt>
   1c39c:	adrp	x0, 30000 <vasnprintf@@Base+0x224c>
   1c3a0:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1c3a4:	adrp	x3, 30000 <vasnprintf@@Base+0x224c>
   1c3a8:	add	x0, x0, #0xfe9
   1c3ac:	add	x1, x1, #0xff1
   1c3b0:	add	x3, x3, #0xffe
   1c3b4:	mov	w2, #0x7e                  	// #126
   1c3b8:	bl	ad70 <__assert_fail@plt>
   1c3bc:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   1c3c0:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1c3c4:	adrp	x3, 30000 <vasnprintf@@Base+0x224c>
   1c3c8:	add	x0, x0, #0x15
   1c3cc:	add	x1, x1, #0xff1
   1c3d0:	add	x3, x3, #0xffe
   1c3d4:	mov	w2, #0x7f                  	// #127
   1c3d8:	bl	ad70 <__assert_fail@plt>
   1c3dc:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   1c3e0:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1c3e4:	adrp	x3, 30000 <vasnprintf@@Base+0x224c>
   1c3e8:	add	x0, x0, #0x21
   1c3ec:	add	x1, x1, #0xff1
   1c3f0:	add	x3, x3, #0xffe
   1c3f4:	mov	w2, #0xa2                  	// #162
   1c3f8:	bl	ad70 <__assert_fail@plt>
   1c3fc:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   1c400:	adrp	x1, 30000 <vasnprintf@@Base+0x224c>
   1c404:	adrp	x3, 30000 <vasnprintf@@Base+0x224c>
   1c408:	add	x0, x0, #0x2d
   1c40c:	add	x1, x1, #0xff1
   1c410:	add	x3, x3, #0xffe
   1c414:	mov	w2, #0xa3                  	// #163
   1c418:	bl	ad70 <__assert_fail@plt>

000000000001c41c <rpl_fcntl@@Base>:
   1c41c:	sub	sp, sp, #0x100
   1c420:	stp	x29, x30, [sp, #208]
   1c424:	add	x29, sp, #0xd0
   1c428:	mov	x8, #0xffffffffffffffd0    	// #-48
   1c42c:	mov	x9, sp
   1c430:	sub	x10, x29, #0x50
   1c434:	stp	x20, x19, [sp, #240]
   1c438:	mov	w19, w0
   1c43c:	movk	x8, #0xff80, lsl #32
   1c440:	add	x11, x29, #0x30
   1c444:	cmp	w1, #0xb
   1c448:	add	x9, x9, #0x80
   1c44c:	add	x10, x10, #0x30
   1c450:	stp	x22, x21, [sp, #224]
   1c454:	stp	x2, x3, [x29, #-80]
   1c458:	stp	x4, x5, [x29, #-64]
   1c45c:	stp	x6, x7, [x29, #-48]
   1c460:	stp	q1, q2, [sp, #16]
   1c464:	stp	q3, q4, [sp, #48]
   1c468:	str	q0, [sp]
   1c46c:	stp	q5, q6, [sp, #80]
   1c470:	str	q7, [sp, #112]
   1c474:	stp	x9, x8, [x29, #-16]
   1c478:	stp	x11, x10, [x29, #-32]
   1c47c:	b.hi	1c4c8 <rpl_fcntl@@Base+0xac>  // b.pmore
   1c480:	mov	w8, #0x1                   	// #1
   1c484:	lsl	w8, w8, w1
   1c488:	mov	w9, #0x514                 	// #1300
   1c48c:	tst	w8, w9
   1c490:	b.ne	1c500 <rpl_fcntl@@Base+0xe4>  // b.any
   1c494:	mov	w9, #0xa0a                 	// #2570
   1c498:	tst	w8, w9
   1c49c:	b.ne	1c4f4 <rpl_fcntl@@Base+0xd8>  // b.any
   1c4a0:	cbnz	w1, 1c4c8 <rpl_fcntl@@Base+0xac>
   1c4a4:	ldursw	x8, [x29, #-8]
   1c4a8:	tbz	w8, #31, 1c5a8 <rpl_fcntl@@Base+0x18c>
   1c4ac:	add	w9, w8, #0x8
   1c4b0:	cmn	w8, #0x8
   1c4b4:	stur	w9, [x29, #-8]
   1c4b8:	b.gt	1c5a8 <rpl_fcntl@@Base+0x18c>
   1c4bc:	ldur	x9, [x29, #-24]
   1c4c0:	add	x8, x9, x8
   1c4c4:	b	1c5b4 <rpl_fcntl@@Base+0x198>
   1c4c8:	sub	w8, w1, #0x400
   1c4cc:	cmp	w8, #0xa
   1c4d0:	b.hi	1c584 <rpl_fcntl@@Base+0x168>  // b.pmore
   1c4d4:	mov	w9, #0x1                   	// #1
   1c4d8:	lsl	w9, w9, w8
   1c4dc:	mov	w10, #0x285                 	// #645
   1c4e0:	tst	w9, w10
   1c4e4:	b.ne	1c500 <rpl_fcntl@@Base+0xe4>  // b.any
   1c4e8:	mov	w10, #0x502                 	// #1282
   1c4ec:	tst	w9, w10
   1c4f0:	b.eq	1c558 <rpl_fcntl@@Base+0x13c>  // b.none
   1c4f4:	mov	w0, w19
   1c4f8:	bl	aae0 <fcntl@plt>
   1c4fc:	b	1c53c <rpl_fcntl@@Base+0x120>
   1c500:	ldursw	x8, [x29, #-8]
   1c504:	tbz	w8, #31, 1c524 <rpl_fcntl@@Base+0x108>
   1c508:	add	w9, w8, #0x8
   1c50c:	cmn	w8, #0x8
   1c510:	stur	w9, [x29, #-8]
   1c514:	b.gt	1c524 <rpl_fcntl@@Base+0x108>
   1c518:	ldur	x9, [x29, #-24]
   1c51c:	add	x8, x9, x8
   1c520:	b	1c530 <rpl_fcntl@@Base+0x114>
   1c524:	ldur	x8, [x29, #-32]
   1c528:	add	x9, x8, #0x8
   1c52c:	stur	x9, [x29, #-32]
   1c530:	ldr	w2, [x8]
   1c534:	mov	w0, w19
   1c538:	bl	aae0 <fcntl@plt>
   1c53c:	mov	w20, w0
   1c540:	mov	w0, w20
   1c544:	ldp	x20, x19, [sp, #240]
   1c548:	ldp	x22, x21, [sp, #224]
   1c54c:	ldp	x29, x30, [sp, #208]
   1c550:	add	sp, sp, #0x100
   1c554:	ret
   1c558:	cmp	w8, #0x6
   1c55c:	b.ne	1c584 <rpl_fcntl@@Base+0x168>  // b.any
   1c560:	ldursw	x8, [x29, #-8]
   1c564:	tbz	w8, #31, 1c5c4 <rpl_fcntl@@Base+0x1a8>
   1c568:	add	w9, w8, #0x8
   1c56c:	cmn	w8, #0x8
   1c570:	stur	w9, [x29, #-8]
   1c574:	b.gt	1c5c4 <rpl_fcntl@@Base+0x1a8>
   1c578:	ldur	x9, [x29, #-24]
   1c57c:	add	x8, x9, x8
   1c580:	b	1c5d0 <rpl_fcntl@@Base+0x1b4>
   1c584:	ldursw	x8, [x29, #-8]
   1c588:	tbz	w8, #31, 1c630 <rpl_fcntl@@Base+0x214>
   1c58c:	add	w9, w8, #0x8
   1c590:	cmn	w8, #0x8
   1c594:	stur	w9, [x29, #-8]
   1c598:	b.gt	1c630 <rpl_fcntl@@Base+0x214>
   1c59c:	ldur	x9, [x29, #-24]
   1c5a0:	add	x8, x9, x8
   1c5a4:	b	1c63c <rpl_fcntl@@Base+0x220>
   1c5a8:	ldur	x8, [x29, #-32]
   1c5ac:	add	x9, x8, #0x8
   1c5b0:	stur	x9, [x29, #-32]
   1c5b4:	ldr	w2, [x8]
   1c5b8:	mov	w0, w19
   1c5bc:	mov	w1, wzr
   1c5c0:	b	1c538 <rpl_fcntl@@Base+0x11c>
   1c5c4:	ldur	x8, [x29, #-32]
   1c5c8:	add	x9, x8, #0x8
   1c5cc:	stur	x9, [x29, #-32]
   1c5d0:	adrp	x22, 43000 <base_len@@Base+0x2ea54>
   1c5d4:	ldr	w9, [x22, #2320]
   1c5d8:	ldr	w21, [x8]
   1c5dc:	tbnz	w9, #31, 1c658 <rpl_fcntl@@Base+0x23c>
   1c5e0:	mov	w1, #0x406                 	// #1030
   1c5e4:	mov	w0, w19
   1c5e8:	mov	w2, w21
   1c5ec:	bl	aae0 <fcntl@plt>
   1c5f0:	mov	w20, w0
   1c5f4:	tbz	w0, #31, 1c64c <rpl_fcntl@@Base+0x230>
   1c5f8:	bl	ad80 <__errno_location@plt>
   1c5fc:	ldr	w8, [x0]
   1c600:	cmp	w8, #0x16
   1c604:	b.ne	1c64c <rpl_fcntl@@Base+0x230>  // b.any
   1c608:	mov	w0, w19
   1c60c:	mov	w1, wzr
   1c610:	mov	w2, w21
   1c614:	bl	aae0 <fcntl@plt>
   1c618:	mov	w20, w0
   1c61c:	tbnz	w0, #31, 1c540 <rpl_fcntl@@Base+0x124>
   1c620:	mov	w8, #0xffffffff            	// #-1
   1c624:	str	w8, [x22, #2320]
   1c628:	mov	w8, #0x1                   	// #1
   1c62c:	b	1c678 <rpl_fcntl@@Base+0x25c>
   1c630:	ldur	x8, [x29, #-32]
   1c634:	add	x9, x8, #0x8
   1c638:	stur	x9, [x29, #-32]
   1c63c:	ldr	x2, [x8]
   1c640:	mov	w0, w19
   1c644:	bl	aae0 <fcntl@plt>
   1c648:	b	1c53c <rpl_fcntl@@Base+0x120>
   1c64c:	mov	w8, #0x1                   	// #1
   1c650:	str	w8, [x22, #2320]
   1c654:	b	1c540 <rpl_fcntl@@Base+0x124>
   1c658:	mov	w0, w19
   1c65c:	mov	w1, wzr
   1c660:	mov	w2, w21
   1c664:	bl	aae0 <fcntl@plt>
   1c668:	ldr	w8, [x22, #2320]
   1c66c:	mov	w20, w0
   1c670:	cmn	w8, #0x1
   1c674:	cset	w8, eq  // eq = none
   1c678:	cbz	w8, 1c540 <rpl_fcntl@@Base+0x124>
   1c67c:	tbnz	w20, #31, 1c540 <rpl_fcntl@@Base+0x124>
   1c680:	mov	w1, #0x1                   	// #1
   1c684:	mov	w0, w20
   1c688:	bl	aae0 <fcntl@plt>
   1c68c:	tbnz	w0, #31, 1c6a8 <rpl_fcntl@@Base+0x28c>
   1c690:	orr	w2, w0, #0x1
   1c694:	mov	w1, #0x2                   	// #2
   1c698:	mov	w0, w20
   1c69c:	bl	aae0 <fcntl@plt>
   1c6a0:	cmn	w0, #0x1
   1c6a4:	b.ne	1c540 <rpl_fcntl@@Base+0x124>  // b.any
   1c6a8:	bl	ad80 <__errno_location@plt>
   1c6ac:	ldr	w21, [x0]
   1c6b0:	mov	x19, x0
   1c6b4:	mov	w0, w20
   1c6b8:	bl	a790 <close@plt>
   1c6bc:	str	w21, [x19]
   1c6c0:	mov	w20, #0xffffffff            	// #-1
   1c6c4:	b	1c540 <rpl_fcntl@@Base+0x124>

000000000001c6c8 <_getopt_internal_r@@Base>:
   1c6c8:	sub	sp, sp, #0x80
   1c6cc:	cmp	w0, #0x1
   1c6d0:	stp	x29, x30, [sp, #32]
   1c6d4:	stp	x28, x27, [sp, #48]
   1c6d8:	stp	x26, x25, [sp, #64]
   1c6dc:	stp	x24, x23, [sp, #80]
   1c6e0:	stp	x22, x21, [sp, #96]
   1c6e4:	stp	x20, x19, [sp, #112]
   1c6e8:	add	x29, sp, #0x20
   1c6ec:	b.lt	1cd78 <_getopt_internal_r@@Base+0x6b0>  // b.tstop
   1c6f0:	ldp	w25, w23, [x6]
   1c6f4:	mov	x19, x6
   1c6f8:	mov	w26, w5
   1c6fc:	mov	x27, x4
   1c700:	mov	x28, x3
   1c704:	mov	x22, x2
   1c708:	mov	w21, w0
   1c70c:	mov	x20, x1
   1c710:	str	xzr, [x6, #16]
   1c714:	cbz	w25, 1c73c <_getopt_internal_r@@Base+0x74>
   1c718:	ldr	w8, [x19, #24]
   1c71c:	cbz	w8, 1c744 <_getopt_internal_r@@Base+0x7c>
   1c720:	ldrb	w8, [x22]
   1c724:	cmp	w8, #0x2d
   1c728:	b.eq	1c734 <_getopt_internal_r@@Base+0x6c>  // b.none
   1c72c:	cmp	w8, #0x2b
   1c730:	b.ne	1c79c <_getopt_internal_r@@Base+0xd4>  // b.any
   1c734:	add	x22, x22, #0x1
   1c738:	b	1c79c <_getopt_internal_r@@Base+0xd4>
   1c73c:	mov	w25, #0x1                   	// #1
   1c740:	str	w25, [x19]
   1c744:	stp	w25, w25, [x19, #44]
   1c748:	str	xzr, [x19, #32]
   1c74c:	ldrb	w8, [x22]
   1c750:	cmp	w8, #0x2b
   1c754:	b.eq	1c770 <_getopt_internal_r@@Base+0xa8>  // b.none
   1c758:	cmp	w8, #0x2d
   1c75c:	b.ne	1c77c <_getopt_internal_r@@Base+0xb4>  // b.any
   1c760:	mov	w8, #0x2                   	// #2
   1c764:	str	w8, [x19, #40]
   1c768:	add	x22, x22, #0x1
   1c76c:	b	1c794 <_getopt_internal_r@@Base+0xcc>
   1c770:	str	wzr, [x19, #40]
   1c774:	add	x22, x22, #0x1
   1c778:	b	1c794 <_getopt_internal_r@@Base+0xcc>
   1c77c:	cbnz	w7, 1c790 <_getopt_internal_r@@Base+0xc8>
   1c780:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   1c784:	add	x0, x0, #0xca
   1c788:	bl	ada0 <getenv@plt>
   1c78c:	cbz	x0, 1cdb8 <_getopt_internal_r@@Base+0x6f0>
   1c790:	str	wzr, [x19, #40]
   1c794:	mov	w8, #0x1                   	// #1
   1c798:	str	w8, [x19, #24]
   1c79c:	ldrb	w8, [x22]
   1c7a0:	ldr	x24, [x19, #32]
   1c7a4:	cmp	w8, #0x3a
   1c7a8:	csel	w2, wzr, w23, eq  // eq = none
   1c7ac:	cbz	x24, 1c840 <_getopt_internal_r@@Base+0x178>
   1c7b0:	ldrb	w8, [x24]
   1c7b4:	cbz	w8, 1c840 <_getopt_internal_r@@Base+0x178>
   1c7b8:	stur	w2, [x29, #-4]
   1c7bc:	add	x23, x24, #0x1
   1c7c0:	str	x23, [x19, #32]
   1c7c4:	ldrb	w26, [x24]
   1c7c8:	mov	x0, x22
   1c7cc:	mov	w1, w26
   1c7d0:	bl	aa50 <strchr@plt>
   1c7d4:	ldrb	w8, [x24, #1]
   1c7d8:	cbnz	w8, 1c7e4 <_getopt_internal_r@@Base+0x11c>
   1c7dc:	add	w25, w25, #0x1
   1c7e0:	str	w25, [x19]
   1c7e4:	orr	w8, w26, #0x1
   1c7e8:	cmp	w8, #0x3b
   1c7ec:	b.eq	1ca34 <_getopt_internal_r@@Base+0x36c>  // b.none
   1c7f0:	cbz	x0, 1ca34 <_getopt_internal_r@@Base+0x36c>
   1c7f4:	ldrb	w9, [x0]
   1c7f8:	ldrb	w8, [x0, #1]
   1c7fc:	cmp	w9, #0x57
   1c800:	b.ne	1ca48 <_getopt_internal_r@@Base+0x380>  // b.any
   1c804:	cbz	x28, 1ca48 <_getopt_internal_r@@Base+0x380>
   1c808:	cmp	w8, #0x3b
   1c80c:	b.ne	1ca48 <_getopt_internal_r@@Base+0x380>  // b.any
   1c810:	ldrb	w8, [x23]
   1c814:	cbnz	w8, 1ce2c <_getopt_internal_r@@Base+0x764>
   1c818:	cmp	w25, w21
   1c81c:	b.ne	1ce28 <_getopt_internal_r@@Base+0x760>  // b.any
   1c820:	ldur	w8, [x29, #-4]
   1c824:	cbnz	w8, 1cf04 <_getopt_internal_r@@Base+0x83c>
   1c828:	str	w26, [x19, #8]
   1c82c:	ldrb	w8, [x22]
   1c830:	mov	w9, #0x3f                  	// #63
   1c834:	cmp	w8, #0x3a
   1c838:	csel	w26, w8, w9, eq  // eq = none
   1c83c:	b	1cd7c <_getopt_internal_r@@Base+0x6b4>
   1c840:	ldr	w23, [x19, #48]
   1c844:	str	x28, [sp, #16]
   1c848:	cmp	w23, w25
   1c84c:	b.le	1c858 <_getopt_internal_r@@Base+0x190>
   1c850:	mov	w23, w25
   1c854:	str	w25, [x19, #48]
   1c858:	ldr	w28, [x19, #44]
   1c85c:	cmp	w28, w25
   1c860:	b.le	1c86c <_getopt_internal_r@@Base+0x1a4>
   1c864:	mov	w28, w25
   1c868:	str	w25, [x19, #44]
   1c86c:	ldr	w24, [x19, #40]
   1c870:	cmp	w24, #0x1
   1c874:	b.ne	1cad8 <_getopt_internal_r@@Base+0x410>  // b.any
   1c878:	cmp	w28, w23
   1c87c:	b.eq	1ca6c <_getopt_internal_r@@Base+0x3a4>  // b.none
   1c880:	cmp	w23, w25
   1c884:	b.eq	1ca6c <_getopt_internal_r@@Base+0x3a4>  // b.none
   1c888:	cmp	w25, w23
   1c88c:	b.le	1ca80 <_getopt_internal_r@@Base+0x3b8>
   1c890:	cmp	w28, w23
   1c894:	b.ge	1ca80 <_getopt_internal_r@@Base+0x3b8>  // b.tcont
   1c898:	add	x9, x20, w23, sxtw #3
   1c89c:	sxtw	x8, w23
   1c8a0:	add	x10, x20, #0x10
   1c8a4:	add	x11, x9, #0x10
   1c8a8:	mov	w12, w28
   1c8ac:	mov	w13, w25
   1c8b0:	sub	w14, w13, w23
   1c8b4:	sub	w15, w23, w12
   1c8b8:	cmp	w14, w15
   1c8bc:	b.le	1c93c <_getopt_internal_r@@Base+0x274>
   1c8c0:	cmp	w15, #0x1
   1c8c4:	sub	w13, w13, w15
   1c8c8:	b.lt	1c9a8 <_getopt_internal_r@@Base+0x2e0>  // b.tstop
   1c8cc:	sxtw	x14, w12
   1c8d0:	sxtw	x16, w13
   1c8d4:	cmp	w15, #0x4
   1c8d8:	mov	w15, w15
   1c8dc:	b.cc	1c908 <_getopt_internal_r@@Base+0x240>  // b.lo, b.ul, b.last
   1c8e0:	add	x18, x16, x15
   1c8e4:	add	x17, x20, x14, lsl #3
   1c8e8:	add	x18, x20, x18, lsl #3
   1c8ec:	cmp	x17, x18
   1c8f0:	b.cs	1c9bc <_getopt_internal_r@@Base+0x2f4>  // b.hs, b.nlast
   1c8f4:	add	x17, x14, x15
   1c8f8:	add	x17, x20, x17, lsl #3
   1c8fc:	add	x18, x20, x16, lsl #3
   1c900:	cmp	x18, x17
   1c904:	b.cs	1c9bc <_getopt_internal_r@@Base+0x2f4>  // b.hs, b.nlast
   1c908:	mov	x17, xzr
   1c90c:	add	x16, x17, x16
   1c910:	add	x18, x17, x14
   1c914:	add	x14, x20, x16, lsl #3
   1c918:	add	x16, x20, x18, lsl #3
   1c91c:	sub	x15, x15, x17
   1c920:	ldr	x17, [x14]
   1c924:	ldr	x18, [x16]
   1c928:	subs	x15, x15, #0x1
   1c92c:	str	x17, [x16], #8
   1c930:	str	x18, [x14], #8
   1c934:	b.ne	1c920 <_getopt_internal_r@@Base+0x258>  // b.any
   1c938:	b	1c9a8 <_getopt_internal_r@@Base+0x2e0>
   1c93c:	cmp	w14, #0x1
   1c940:	b.lt	1c9a4 <_getopt_internal_r@@Base+0x2dc>  // b.tstop
   1c944:	sxtw	x15, w12
   1c948:	cmp	w14, #0x3
   1c94c:	mov	w16, w14
   1c950:	b.ls	1c974 <_getopt_internal_r@@Base+0x2ac>  // b.plast
   1c954:	add	x17, x20, x15, lsl #3
   1c958:	add	x18, x9, x16, lsl #3
   1c95c:	cmp	x17, x18
   1c960:	b.cs	1c9f8 <_getopt_internal_r@@Base+0x330>  // b.hs, b.nlast
   1c964:	add	x17, x15, x16
   1c968:	add	x17, x20, x17, lsl #3
   1c96c:	cmp	x9, x17
   1c970:	b.cs	1c9f8 <_getopt_internal_r@@Base+0x330>  // b.hs, b.nlast
   1c974:	mov	x17, xzr
   1c978:	add	x18, x8, x17
   1c97c:	add	x0, x17, x15
   1c980:	add	x15, x20, x18, lsl #3
   1c984:	add	x18, x20, x0, lsl #3
   1c988:	sub	x16, x16, x17
   1c98c:	ldr	x17, [x15]
   1c990:	ldr	x0, [x18]
   1c994:	subs	x16, x16, #0x1
   1c998:	str	x17, [x18], #8
   1c99c:	str	x0, [x15], #8
   1c9a0:	b.ne	1c98c <_getopt_internal_r@@Base+0x2c4>  // b.any
   1c9a4:	add	w12, w14, w12
   1c9a8:	cmp	w13, w23
   1c9ac:	b.le	1ca80 <_getopt_internal_r@@Base+0x3b8>
   1c9b0:	cmp	w23, w12
   1c9b4:	b.gt	1c8b0 <_getopt_internal_r@@Base+0x1e8>
   1c9b8:	b	1ca80 <_getopt_internal_r@@Base+0x3b8>
   1c9bc:	and	x17, x15, #0xfffffffc
   1c9c0:	add	x18, x10, x14, lsl #3
   1c9c4:	add	x0, x10, x16, lsl #3
   1c9c8:	mov	x1, x17
   1c9cc:	ldp	q0, q3, [x18, #-16]
   1c9d0:	ldp	q1, q2, [x0, #-16]
   1c9d4:	subs	x1, x1, #0x4
   1c9d8:	stp	q1, q2, [x18, #-16]
   1c9dc:	stp	q0, q3, [x0, #-16]
   1c9e0:	add	x18, x18, #0x20
   1c9e4:	add	x0, x0, #0x20
   1c9e8:	b.ne	1c9cc <_getopt_internal_r@@Base+0x304>  // b.any
   1c9ec:	cmp	x17, x15
   1c9f0:	b.eq	1c9a8 <_getopt_internal_r@@Base+0x2e0>  // b.none
   1c9f4:	b	1c90c <_getopt_internal_r@@Base+0x244>
   1c9f8:	and	x17, x16, #0xfffffffc
   1c9fc:	add	x18, x10, x15, lsl #3
   1ca00:	mov	x0, x17
   1ca04:	mov	x1, x11
   1ca08:	ldp	q0, q3, [x18, #-16]
   1ca0c:	ldp	q1, q2, [x1, #-16]
   1ca10:	subs	x0, x0, #0x4
   1ca14:	stp	q1, q2, [x18, #-16]
   1ca18:	stp	q0, q3, [x1, #-16]
   1ca1c:	add	x18, x18, #0x20
   1ca20:	add	x1, x1, #0x20
   1ca24:	b.ne	1ca08 <_getopt_internal_r@@Base+0x340>  // b.any
   1ca28:	cmp	x17, x16
   1ca2c:	b.ne	1c978 <_getopt_internal_r@@Base+0x2b0>  // b.any
   1ca30:	b	1c9a4 <_getopt_internal_r@@Base+0x2dc>
   1ca34:	ldur	w8, [x29, #-4]
   1ca38:	cbnz	w8, 1cdec <_getopt_internal_r@@Base+0x724>
   1ca3c:	str	w26, [x19, #8]
   1ca40:	mov	w26, #0x3f                  	// #63
   1ca44:	b	1cd7c <_getopt_internal_r@@Base+0x6b4>
   1ca48:	cmp	w8, #0x3a
   1ca4c:	b.ne	1cd7c <_getopt_internal_r@@Base+0x6b4>  // b.any
   1ca50:	ldrb	w9, [x0, #2]
   1ca54:	ldrb	w8, [x23]
   1ca58:	cmp	w9, #0x3a
   1ca5c:	b.ne	1cda0 <_getopt_internal_r@@Base+0x6d8>  // b.any
   1ca60:	cbnz	w8, 1cda4 <_getopt_internal_r@@Base+0x6dc>
   1ca64:	str	xzr, [x19, #16]
   1ca68:	b	1cdb0 <_getopt_internal_r@@Base+0x6e8>
   1ca6c:	cmp	w23, w25
   1ca70:	b.eq	1ca8c <_getopt_internal_r@@Base+0x3c4>  // b.none
   1ca74:	mov	w28, w25
   1ca78:	str	w25, [x19, #44]
   1ca7c:	b	1ca8c <_getopt_internal_r@@Base+0x3c4>
   1ca80:	add	w8, w28, w25
   1ca84:	sub	w28, w8, w23
   1ca88:	stp	w28, w25, [x19, #44]
   1ca8c:	cmp	w25, w21
   1ca90:	b.ge	1cad0 <_getopt_internal_r@@Base+0x408>  // b.tcont
   1ca94:	add	x8, x20, w25, sxtw #3
   1ca98:	b	1cab0 <_getopt_internal_r@@Base+0x3e8>
   1ca9c:	add	w25, w25, #0x1
   1caa0:	cmp	w21, w25
   1caa4:	add	x8, x8, #0x8
   1caa8:	str	w25, [x19]
   1caac:	b.eq	1cacc <_getopt_internal_r@@Base+0x404>  // b.none
   1cab0:	ldr	x9, [x8]
   1cab4:	ldrb	w10, [x9]
   1cab8:	cmp	w10, #0x2d
   1cabc:	b.ne	1ca9c <_getopt_internal_r@@Base+0x3d4>  // b.any
   1cac0:	ldrb	w9, [x9, #1]
   1cac4:	cbz	w9, 1ca9c <_getopt_internal_r@@Base+0x3d4>
   1cac8:	b	1cad0 <_getopt_internal_r@@Base+0x408>
   1cacc:	mov	w25, w21
   1cad0:	mov	w23, w25
   1cad4:	str	w25, [x19, #48]
   1cad8:	cmp	w25, w21
   1cadc:	b.eq	1cd6c <_getopt_internal_r@@Base+0x6a4>  // b.none
   1cae0:	ldr	x0, [x20, w25, sxtw #3]
   1cae4:	str	w26, [sp, #12]
   1cae8:	mov	x26, x27
   1caec:	adrp	x27, 2f000 <vasnprintf@@Base+0x124c>
   1caf0:	add	x27, x27, #0x7d1
   1caf4:	mov	x1, x27
   1caf8:	stur	w2, [x29, #-4]
   1cafc:	bl	a8e0 <strcmp@plt>
   1cb00:	cbz	w0, 1cb64 <_getopt_internal_r@@Base+0x49c>
   1cb04:	cmp	w25, w21
   1cb08:	b.eq	1cd6c <_getopt_internal_r@@Base+0x6a4>  // b.none
   1cb0c:	sxtw	x8, w25
   1cb10:	ldr	x23, [x20, x8, lsl #3]
   1cb14:	ldrb	w8, [x23]
   1cb18:	cmp	w8, #0x2d
   1cb1c:	b.ne	1cd28 <_getopt_internal_r@@Base+0x660>  // b.any
   1cb20:	mov	x28, x23
   1cb24:	ldrb	w1, [x28, #1]!
   1cb28:	cbz	w1, 1cd28 <_getopt_internal_r@@Base+0x660>
   1cb2c:	ldr	x8, [sp, #16]
   1cb30:	cbz	x8, 1cecc <_getopt_internal_r@@Base+0x804>
   1cb34:	cmp	w1, #0x2d
   1cb38:	b.ne	1ce6c <_getopt_internal_r@@Base+0x7a4>  // b.any
   1cb3c:	ldr	x3, [sp, #16]
   1cb40:	ldr	w5, [sp, #12]
   1cb44:	add	x8, x23, #0x2
   1cb48:	mov	w0, w21
   1cb4c:	mov	x1, x20
   1cb50:	mov	x2, x22
   1cb54:	mov	x4, x26
   1cb58:	str	x8, [x19, #32]
   1cb5c:	str	x27, [sp]
   1cb60:	b	1ce5c <_getopt_internal_r@@Base+0x794>
   1cb64:	add	w8, w25, #0x1
   1cb68:	cmp	w28, w23
   1cb6c:	str	w8, [x19]
   1cb70:	b.eq	1cd40 <_getopt_internal_r@@Base+0x678>  // b.none
   1cb74:	cmp	w23, w8
   1cb78:	b.eq	1cd40 <_getopt_internal_r@@Base+0x678>  // b.none
   1cb7c:	cmp	w25, w23
   1cb80:	b.lt	1cd54 <_getopt_internal_r@@Base+0x68c>  // b.tstop
   1cb84:	cmp	w28, w23
   1cb88:	b.ge	1cd54 <_getopt_internal_r@@Base+0x68c>  // b.tcont
   1cb8c:	add	x10, x20, w23, sxtw #3
   1cb90:	sxtw	x9, w23
   1cb94:	add	x11, x20, #0x10
   1cb98:	add	x12, x10, #0x10
   1cb9c:	mov	w13, w28
   1cba0:	mov	w14, w8
   1cba4:	sub	w15, w14, w23
   1cba8:	sub	w16, w23, w13
   1cbac:	cmp	w15, w16
   1cbb0:	b.le	1cc30 <_getopt_internal_r@@Base+0x568>
   1cbb4:	cmp	w16, #0x1
   1cbb8:	sub	w14, w14, w16
   1cbbc:	b.lt	1cc9c <_getopt_internal_r@@Base+0x5d4>  // b.tstop
   1cbc0:	sxtw	x15, w13
   1cbc4:	sxtw	x17, w14
   1cbc8:	cmp	w16, #0x4
   1cbcc:	mov	w16, w16
   1cbd0:	b.cc	1cbfc <_getopt_internal_r@@Base+0x534>  // b.lo, b.ul, b.last
   1cbd4:	add	x0, x17, x16
   1cbd8:	add	x18, x20, x15, lsl #3
   1cbdc:	add	x0, x20, x0, lsl #3
   1cbe0:	cmp	x18, x0
   1cbe4:	b.cs	1ccb0 <_getopt_internal_r@@Base+0x5e8>  // b.hs, b.nlast
   1cbe8:	add	x18, x15, x16
   1cbec:	add	x18, x20, x18, lsl #3
   1cbf0:	add	x0, x20, x17, lsl #3
   1cbf4:	cmp	x0, x18
   1cbf8:	b.cs	1ccb0 <_getopt_internal_r@@Base+0x5e8>  // b.hs, b.nlast
   1cbfc:	mov	x18, xzr
   1cc00:	add	x17, x18, x17
   1cc04:	add	x0, x18, x15
   1cc08:	add	x15, x20, x17, lsl #3
   1cc0c:	add	x17, x20, x0, lsl #3
   1cc10:	sub	x16, x16, x18
   1cc14:	ldr	x18, [x15]
   1cc18:	ldr	x0, [x17]
   1cc1c:	subs	x16, x16, #0x1
   1cc20:	str	x18, [x17], #8
   1cc24:	str	x0, [x15], #8
   1cc28:	b.ne	1cc14 <_getopt_internal_r@@Base+0x54c>  // b.any
   1cc2c:	b	1cc9c <_getopt_internal_r@@Base+0x5d4>
   1cc30:	cmp	w15, #0x1
   1cc34:	b.lt	1cc98 <_getopt_internal_r@@Base+0x5d0>  // b.tstop
   1cc38:	sxtw	x16, w13
   1cc3c:	cmp	w15, #0x3
   1cc40:	mov	w17, w15
   1cc44:	b.ls	1cc68 <_getopt_internal_r@@Base+0x5a0>  // b.plast
   1cc48:	add	x18, x20, x16, lsl #3
   1cc4c:	add	x0, x10, x17, lsl #3
   1cc50:	cmp	x18, x0
   1cc54:	b.cs	1ccec <_getopt_internal_r@@Base+0x624>  // b.hs, b.nlast
   1cc58:	add	x18, x16, x17
   1cc5c:	add	x18, x20, x18, lsl #3
   1cc60:	cmp	x10, x18
   1cc64:	b.cs	1ccec <_getopt_internal_r@@Base+0x624>  // b.hs, b.nlast
   1cc68:	mov	x18, xzr
   1cc6c:	add	x0, x9, x18
   1cc70:	add	x1, x18, x16
   1cc74:	add	x16, x20, x0, lsl #3
   1cc78:	add	x0, x20, x1, lsl #3
   1cc7c:	sub	x17, x17, x18
   1cc80:	ldr	x18, [x16]
   1cc84:	ldr	x1, [x0]
   1cc88:	subs	x17, x17, #0x1
   1cc8c:	str	x18, [x0], #8
   1cc90:	str	x1, [x16], #8
   1cc94:	b.ne	1cc80 <_getopt_internal_r@@Base+0x5b8>  // b.any
   1cc98:	add	w13, w15, w13
   1cc9c:	cmp	w14, w23
   1cca0:	b.le	1cd54 <_getopt_internal_r@@Base+0x68c>
   1cca4:	cmp	w23, w13
   1cca8:	b.gt	1cba4 <_getopt_internal_r@@Base+0x4dc>
   1ccac:	b	1cd54 <_getopt_internal_r@@Base+0x68c>
   1ccb0:	and	x18, x16, #0xfffffffc
   1ccb4:	add	x0, x11, x15, lsl #3
   1ccb8:	add	x1, x11, x17, lsl #3
   1ccbc:	mov	x2, x18
   1ccc0:	ldp	q0, q3, [x0, #-16]
   1ccc4:	ldp	q1, q2, [x1, #-16]
   1ccc8:	subs	x2, x2, #0x4
   1cccc:	stp	q1, q2, [x0, #-16]
   1ccd0:	stp	q0, q3, [x1, #-16]
   1ccd4:	add	x0, x0, #0x20
   1ccd8:	add	x1, x1, #0x20
   1ccdc:	b.ne	1ccc0 <_getopt_internal_r@@Base+0x5f8>  // b.any
   1cce0:	cmp	x18, x16
   1cce4:	b.eq	1cc9c <_getopt_internal_r@@Base+0x5d4>  // b.none
   1cce8:	b	1cc00 <_getopt_internal_r@@Base+0x538>
   1ccec:	and	x18, x17, #0xfffffffc
   1ccf0:	add	x0, x11, x16, lsl #3
   1ccf4:	mov	x1, x18
   1ccf8:	mov	x2, x12
   1ccfc:	ldp	q0, q3, [x0, #-16]
   1cd00:	ldp	q1, q2, [x2, #-16]
   1cd04:	subs	x1, x1, #0x4
   1cd08:	stp	q1, q2, [x0, #-16]
   1cd0c:	stp	q0, q3, [x2, #-16]
   1cd10:	add	x0, x0, #0x20
   1cd14:	add	x2, x2, #0x20
   1cd18:	b.ne	1ccfc <_getopt_internal_r@@Base+0x634>  // b.any
   1cd1c:	cmp	x18, x17
   1cd20:	b.ne	1cc6c <_getopt_internal_r@@Base+0x5a4>  // b.any
   1cd24:	b	1cc98 <_getopt_internal_r@@Base+0x5d0>
   1cd28:	cbz	w24, 1cd78 <_getopt_internal_r@@Base+0x6b0>
   1cd2c:	add	w8, w25, #0x1
   1cd30:	str	x23, [x19, #16]
   1cd34:	str	w8, [x19]
   1cd38:	mov	w26, #0x1                   	// #1
   1cd3c:	b	1cd7c <_getopt_internal_r@@Base+0x6b4>
   1cd40:	cmp	w28, w23
   1cd44:	b.ne	1cd60 <_getopt_internal_r@@Base+0x698>  // b.any
   1cd48:	mov	w28, w8
   1cd4c:	str	w8, [x19, #44]
   1cd50:	b	1cd60 <_getopt_internal_r@@Base+0x698>
   1cd54:	add	w9, w28, w8
   1cd58:	sub	w28, w9, w23
   1cd5c:	stp	w28, w8, [x19, #44]
   1cd60:	str	w21, [x19, #48]
   1cd64:	str	w21, [x19]
   1cd68:	mov	w23, w21
   1cd6c:	cmp	w28, w23
   1cd70:	b.eq	1cd78 <_getopt_internal_r@@Base+0x6b0>  // b.none
   1cd74:	str	w28, [x19]
   1cd78:	mov	w26, #0xffffffff            	// #-1
   1cd7c:	mov	w0, w26
   1cd80:	ldp	x20, x19, [sp, #112]
   1cd84:	ldp	x22, x21, [sp, #96]
   1cd88:	ldp	x24, x23, [sp, #80]
   1cd8c:	ldp	x26, x25, [sp, #64]
   1cd90:	ldp	x28, x27, [sp, #48]
   1cd94:	ldp	x29, x30, [sp, #32]
   1cd98:	add	sp, sp, #0x80
   1cd9c:	ret
   1cda0:	cbz	w8, 1cdc4 <_getopt_internal_r@@Base+0x6fc>
   1cda4:	add	w8, w25, #0x1
   1cda8:	str	x23, [x19, #16]
   1cdac:	str	w8, [x19]
   1cdb0:	str	xzr, [x19, #32]
   1cdb4:	b	1cd7c <_getopt_internal_r@@Base+0x6b4>
   1cdb8:	mov	w8, #0x1                   	// #1
   1cdbc:	str	w8, [x19, #40]
   1cdc0:	b	1c794 <_getopt_internal_r@@Base+0xcc>
   1cdc4:	cmp	w25, w21
   1cdc8:	b.ne	1cee0 <_getopt_internal_r@@Base+0x818>  // b.any
   1cdcc:	ldur	w8, [x29, #-4]
   1cdd0:	cbnz	w8, 1cf40 <_getopt_internal_r@@Base+0x878>
   1cdd4:	str	w26, [x19, #8]
   1cdd8:	ldrb	w8, [x22]
   1cddc:	mov	w9, #0x3f                  	// #63
   1cde0:	cmp	w8, #0x3a
   1cde4:	csel	w26, w8, w9, eq  // eq = none
   1cde8:	b	1cdb0 <_getopt_internal_r@@Base+0x6e8>
   1cdec:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1cdf0:	ldr	x8, [x8, #3816]
   1cdf4:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1cdf8:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1cdfc:	add	x0, x0, #0x387
   1ce00:	ldr	x21, [x8]
   1ce04:	add	x1, x1, #0x81
   1ce08:	mov	w2, #0x5                   	// #5
   1ce0c:	bl	ac80 <dcgettext@plt>
   1ce10:	ldr	x2, [x20]
   1ce14:	mov	x1, x0
   1ce18:	mov	x0, x21
   1ce1c:	mov	w3, w26
   1ce20:	bl	ae70 <fprintf@plt>
   1ce24:	b	1ca3c <_getopt_internal_r@@Base+0x374>
   1ce28:	ldr	x23, [x20, w25, sxtw #3]
   1ce2c:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
   1ce30:	add	x8, x8, #0xc6
   1ce34:	str	x23, [x19, #16]
   1ce38:	str	x23, [x19, #32]
   1ce3c:	str	xzr, [x19, #16]
   1ce40:	str	x8, [sp]
   1ce44:	mov	w0, w21
   1ce48:	mov	x1, x20
   1ce4c:	mov	x2, x22
   1ce50:	mov	x3, x28
   1ce54:	mov	x4, x27
   1ce58:	mov	w5, wzr
   1ce5c:	ldur	w7, [x29, #-4]
   1ce60:	mov	x6, x19
   1ce64:	bl	1cf7c <_getopt_internal_r@@Base+0x8b4>
   1ce68:	b	1cd80 <_getopt_internal_r@@Base+0x6b8>
   1ce6c:	ldr	w8, [sp, #12]
   1ce70:	cbz	w8, 1cecc <_getopt_internal_r@@Base+0x804>
   1ce74:	ldrb	w8, [x23, #2]
   1ce78:	mov	x27, x26
   1ce7c:	cbz	w8, 1cef4 <_getopt_internal_r@@Base+0x82c>
   1ce80:	ldr	x3, [sp, #16]
   1ce84:	ldr	w5, [sp, #12]
   1ce88:	ldur	w7, [x29, #-4]
   1ce8c:	adrp	x8, 2e000 <vasnprintf@@Base+0x24c>
   1ce90:	add	x8, x8, #0xb5a
   1ce94:	mov	w0, w21
   1ce98:	mov	x1, x20
   1ce9c:	mov	x2, x22
   1cea0:	mov	x4, x27
   1cea4:	mov	x6, x19
   1cea8:	str	x28, [x19, #32]
   1ceac:	str	x8, [sp]
   1ceb0:	bl	1cf7c <_getopt_internal_r@@Base+0x8b4>
   1ceb4:	mov	w26, w0
   1ceb8:	cmn	w0, #0x1
   1cebc:	b.ne	1cd7c <_getopt_internal_r@@Base+0x6b4>  // b.any
   1cec0:	ldrsw	x25, [x19]
   1cec4:	ldr	x23, [x20, x25, lsl #3]
   1cec8:	b	1ced0 <_getopt_internal_r@@Base+0x808>
   1cecc:	mov	x27, x26
   1ced0:	ldr	x28, [sp, #16]
   1ced4:	add	x24, x23, #0x1
   1ced8:	str	x24, [x19, #32]
   1cedc:	b	1c7bc <_getopt_internal_r@@Base+0xf4>
   1cee0:	add	w8, w25, #0x1
   1cee4:	str	w8, [x19]
   1cee8:	ldr	x8, [x20, w25, sxtw #3]
   1ceec:	str	x8, [x19, #16]
   1cef0:	b	1cdb0 <_getopt_internal_r@@Base+0x6e8>
   1cef4:	mov	x0, x22
   1cef8:	bl	aa50 <strchr@plt>
   1cefc:	cbnz	x0, 1ced0 <_getopt_internal_r@@Base+0x808>
   1cf00:	b	1ce80 <_getopt_internal_r@@Base+0x7b8>
   1cf04:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1cf08:	ldr	x8, [x8, #3816]
   1cf0c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1cf10:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1cf14:	add	x0, x0, #0x387
   1cf18:	ldr	x21, [x8]
   1cf1c:	add	x1, x1, #0x9d
   1cf20:	mov	w2, #0x5                   	// #5
   1cf24:	bl	ac80 <dcgettext@plt>
   1cf28:	ldr	x2, [x20]
   1cf2c:	mov	x1, x0
   1cf30:	mov	x0, x21
   1cf34:	mov	w3, w26
   1cf38:	bl	ae70 <fprintf@plt>
   1cf3c:	b	1c828 <_getopt_internal_r@@Base+0x160>
   1cf40:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1cf44:	ldr	x8, [x8, #3816]
   1cf48:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1cf4c:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1cf50:	add	x0, x0, #0x387
   1cf54:	ldr	x21, [x8]
   1cf58:	add	x1, x1, #0x9d
   1cf5c:	mov	w2, #0x5                   	// #5
   1cf60:	bl	ac80 <dcgettext@plt>
   1cf64:	ldr	x2, [x20]
   1cf68:	mov	x1, x0
   1cf6c:	mov	x0, x21
   1cf70:	mov	w3, w26
   1cf74:	bl	ae70 <fprintf@plt>
   1cf78:	b	1cdd4 <_getopt_internal_r@@Base+0x70c>
   1cf7c:	sub	sp, sp, #0xb0
   1cf80:	stp	x29, x30, [sp, #80]
   1cf84:	add	x29, sp, #0x50
   1cf88:	stp	x28, x27, [sp, #96]
   1cf8c:	stp	x26, x25, [sp, #112]
   1cf90:	stp	x24, x23, [sp, #128]
   1cf94:	stp	x22, x21, [sp, #144]
   1cf98:	stp	x20, x19, [sp, #160]
   1cf9c:	stp	w7, w5, [x29, #-8]
   1cfa0:	ldr	x24, [x6, #32]
   1cfa4:	ldr	x22, [x29, #96]
   1cfa8:	mov	x21, x6
   1cfac:	mov	x25, x3
   1cfb0:	mov	x20, x24
   1cfb4:	str	x2, [sp, #40]
   1cfb8:	stur	x1, [x29, #-32]
   1cfbc:	str	w0, [sp, #36]
   1cfc0:	ldrb	w8, [x20]
   1cfc4:	cbz	w8, 1cfdc <_getopt_internal_r@@Base+0x914>
   1cfc8:	cmp	w8, #0x3d
   1cfcc:	b.eq	1cfdc <_getopt_internal_r@@Base+0x914>  // b.none
   1cfd0:	add	x20, x20, #0x1
   1cfd4:	ldrb	w8, [x20]
   1cfd8:	cbnz	w8, 1cfc8 <_getopt_internal_r@@Base+0x900>
   1cfdc:	ldr	x26, [x25]
   1cfe0:	cbz	x26, 1d138 <_getopt_internal_r@@Base+0xa70>
   1cfe4:	mov	x28, xzr
   1cfe8:	sub	x23, x20, x24
   1cfec:	mov	x27, x26
   1cff0:	mov	x19, x25
   1cff4:	stur	x4, [x29, #-24]
   1cff8:	b	1d008 <_getopt_internal_r@@Base+0x940>
   1cffc:	ldr	x27, [x19, #32]!
   1d000:	add	x28, x28, #0x1
   1d004:	cbz	x27, 1d038 <_getopt_internal_r@@Base+0x970>
   1d008:	mov	x0, x27
   1d00c:	mov	x1, x24
   1d010:	mov	x2, x23
   1d014:	bl	a600 <strncmp@plt>
   1d018:	cbnz	w0, 1cffc <_getopt_internal_r@@Base+0x934>
   1d01c:	mov	x0, x27
   1d020:	bl	a280 <strlen@plt>
   1d024:	cmp	x23, x0
   1d028:	b.ne	1cffc <_getopt_internal_r@@Base+0x934>  // b.any
   1d02c:	ldur	x4, [x29, #-24]
   1d030:	mov	w12, w28
   1d034:	b	1d17c <_getopt_internal_r@@Base+0xab4>
   1d038:	str	x25, [sp, #24]
   1d03c:	cbz	x26, 1d15c <_getopt_internal_r@@Base+0xa94>
   1d040:	stp	x22, x21, [sp]
   1d044:	mov	x21, xzr
   1d048:	mov	x22, x25
   1d04c:	mov	w25, wzr
   1d050:	mov	x27, xzr
   1d054:	mov	x19, xzr
   1d058:	mov	w8, #0xffffffff            	// #-1
   1d05c:	str	wzr, [sp, #20]
   1d060:	stur	w8, [x29, #-12]
   1d064:	b	1d080 <_getopt_internal_r@@Base+0x9b8>
   1d068:	mov	x19, x22
   1d06c:	mov	w8, w21
   1d070:	stur	w21, [x29, #-12]
   1d074:	ldr	x26, [x22, #32]!
   1d078:	add	x21, x21, #0x1
   1d07c:	cbz	x26, 1d144 <_getopt_internal_r@@Base+0xa7c>
   1d080:	mov	x0, x26
   1d084:	mov	x1, x24
   1d088:	mov	x2, x23
   1d08c:	bl	a600 <strncmp@plt>
   1d090:	cbnz	w0, 1d074 <_getopt_internal_r@@Base+0x9ac>
   1d094:	cbz	x19, 1d068 <_getopt_internal_r@@Base+0x9a0>
   1d098:	ldur	w8, [x29, #-4]
   1d09c:	cbnz	w8, 1d0c0 <_getopt_internal_r@@Base+0x9f8>
   1d0a0:	ldr	w8, [x19, #8]
   1d0a4:	ldr	w9, [x22, #8]
   1d0a8:	cmp	w8, w9
   1d0ac:	b.ne	1d0c0 <_getopt_internal_r@@Base+0x9f8>  // b.any
   1d0b0:	ldr	x8, [x19, #16]
   1d0b4:	ldr	x9, [x22, #16]
   1d0b8:	cmp	x8, x9
   1d0bc:	b.eq	1d120 <_getopt_internal_r@@Base+0xa58>  // b.none
   1d0c0:	cbnz	w25, 1d074 <_getopt_internal_r@@Base+0x9ac>
   1d0c4:	ldur	w8, [x29, #-8]
   1d0c8:	cbz	w8, 1d10c <_getopt_internal_r@@Base+0xa44>
   1d0cc:	cbnz	x27, 1d104 <_getopt_internal_r@@Base+0xa3c>
   1d0d0:	mov	x0, x28
   1d0d4:	bl	a540 <malloc@plt>
   1d0d8:	mov	x27, x0
   1d0dc:	mov	w25, #0x1                   	// #1
   1d0e0:	cbz	x0, 1d074 <_getopt_internal_r@@Base+0x9ac>
   1d0e4:	mov	x0, x27
   1d0e8:	mov	w1, wzr
   1d0ec:	mov	x2, x28
   1d0f0:	bl	a630 <memset@plt>
   1d0f4:	ldur	w8, [x29, #-12]
   1d0f8:	strb	w25, [x27, w8, sxtw]
   1d0fc:	mov	w8, #0x1                   	// #1
   1d100:	str	w8, [sp, #20]
   1d104:	mov	w25, wzr
   1d108:	b	1d114 <_getopt_internal_r@@Base+0xa4c>
   1d10c:	mov	w25, #0x1                   	// #1
   1d110:	cbz	x27, 1d074 <_getopt_internal_r@@Base+0x9ac>
   1d114:	mov	w8, #0x1                   	// #1
   1d118:	strb	w8, [x27, x21]
   1d11c:	b	1d074 <_getopt_internal_r@@Base+0x9ac>
   1d120:	cbnz	w25, 1d074 <_getopt_internal_r@@Base+0x9ac>
   1d124:	ldr	w8, [x19, #24]
   1d128:	ldr	w9, [x22, #24]
   1d12c:	cmp	w8, w9
   1d130:	b.ne	1d0c4 <_getopt_internal_r@@Base+0x9fc>  // b.any
   1d134:	b	1d074 <_getopt_internal_r@@Base+0x9ac>
   1d138:	str	x25, [sp, #24]
   1d13c:	mov	w28, wzr
   1d140:	b	1d160 <_getopt_internal_r@@Base+0xa98>
   1d144:	ldp	x22, x21, [sp]
   1d148:	ldur	x4, [x29, #-24]
   1d14c:	ldr	w26, [sp, #20]
   1d150:	ldur	w12, [x29, #-12]
   1d154:	cbz	x27, 1d174 <_getopt_internal_r@@Base+0xaac>
   1d158:	b	1d1a8 <_getopt_internal_r@@Base+0xae0>
   1d15c:	ldur	x4, [x29, #-24]
   1d160:	mov	x19, xzr
   1d164:	mov	x27, xzr
   1d168:	mov	w25, wzr
   1d16c:	mov	w12, #0xffffffff            	// #-1
   1d170:	cbnz	x27, 1d1a8 <_getopt_internal_r@@Base+0xae0>
   1d174:	cbnz	w25, 1d1a8 <_getopt_internal_r@@Base+0xae0>
   1d178:	cbz	x19, 1d224 <_getopt_internal_r@@Base+0xb5c>
   1d17c:	ldr	w9, [x21]
   1d180:	str	xzr, [x21, #32]
   1d184:	add	w8, w9, #0x1
   1d188:	str	w8, [x21]
   1d18c:	ldrb	w11, [x20]
   1d190:	ldr	w10, [x19, #8]
   1d194:	cbz	w11, 1d1dc <_getopt_internal_r@@Base+0xb14>
   1d198:	cbz	w10, 1d29c <_getopt_internal_r@@Base+0xbd4>
   1d19c:	add	x8, x20, #0x1
   1d1a0:	str	x8, [x21, #16]
   1d1a4:	b	1d204 <_getopt_internal_r@@Base+0xb3c>
   1d1a8:	ldur	w8, [x29, #-8]
   1d1ac:	cbnz	w8, 1d2dc <_getopt_internal_r@@Base+0xc14>
   1d1b0:	cbz	w26, 1d1bc <_getopt_internal_r@@Base+0xaf4>
   1d1b4:	mov	x0, x27
   1d1b8:	bl	a960 <free@plt>
   1d1bc:	ldr	x20, [x21, #32]
   1d1c0:	mov	x0, x20
   1d1c4:	bl	a280 <strlen@plt>
   1d1c8:	ldr	w8, [x21]
   1d1cc:	add	x9, x20, x0
   1d1d0:	str	wzr, [x21, #8]
   1d1d4:	str	x9, [x21, #32]
   1d1d8:	b	1d270 <_getopt_internal_r@@Base+0xba8>
   1d1dc:	cmp	w10, #0x1
   1d1e0:	b.ne	1d204 <_getopt_internal_r@@Base+0xb3c>  // b.any
   1d1e4:	ldr	w10, [sp, #36]
   1d1e8:	cmp	w8, w10
   1d1ec:	b.ge	1d2b4 <_getopt_internal_r@@Base+0xbec>  // b.tcont
   1d1f0:	add	w9, w9, #0x2
   1d1f4:	str	w9, [x21]
   1d1f8:	ldur	x9, [x29, #-32]
   1d1fc:	ldr	x8, [x9, w8, sxtw #3]
   1d200:	b	1d1a0 <_getopt_internal_r@@Base+0xad8>
   1d204:	cbz	x4, 1d20c <_getopt_internal_r@@Base+0xb44>
   1d208:	str	w12, [x4]
   1d20c:	ldr	x8, [x19, #16]
   1d210:	ldr	w0, [x19, #24]
   1d214:	cbz	x8, 1d27c <_getopt_internal_r@@Base+0xbb4>
   1d218:	str	w0, [x8]
   1d21c:	mov	w0, wzr
   1d220:	b	1d27c <_getopt_internal_r@@Base+0xbb4>
   1d224:	ldur	w8, [x29, #-4]
   1d228:	cbz	w8, 1d25c <_getopt_internal_r@@Base+0xb94>
   1d22c:	ldrsw	x8, [x21]
   1d230:	ldur	x9, [x29, #-32]
   1d234:	ldr	x8, [x9, x8, lsl #3]
   1d238:	ldrb	w8, [x8, #1]
   1d23c:	cmp	w8, #0x2d
   1d240:	b.eq	1d25c <_getopt_internal_r@@Base+0xb94>  // b.none
   1d244:	ldrb	w1, [x24]
   1d248:	ldr	x0, [sp, #40]
   1d24c:	bl	aa50 <strchr@plt>
   1d250:	cbz	x0, 1d25c <_getopt_internal_r@@Base+0xb94>
   1d254:	mov	w0, #0xffffffff            	// #-1
   1d258:	b	1d27c <_getopt_internal_r@@Base+0xbb4>
   1d25c:	ldur	w8, [x29, #-8]
   1d260:	cbnz	w8, 1d3cc <_getopt_internal_r@@Base+0xd04>
   1d264:	ldr	w8, [x21]
   1d268:	str	xzr, [x21, #32]
   1d26c:	str	wzr, [x21, #8]
   1d270:	add	w8, w8, #0x1
   1d274:	str	w8, [x21]
   1d278:	mov	w0, #0x3f                  	// #63
   1d27c:	ldp	x20, x19, [sp, #160]
   1d280:	ldp	x22, x21, [sp, #144]
   1d284:	ldp	x24, x23, [sp, #128]
   1d288:	ldp	x26, x25, [sp, #112]
   1d28c:	ldp	x28, x27, [sp, #96]
   1d290:	ldp	x29, x30, [sp, #80]
   1d294:	add	sp, sp, #0xb0
   1d298:	ret
   1d29c:	ldur	w8, [x29, #-8]
   1d2a0:	cbnz	w8, 1d410 <_getopt_internal_r@@Base+0xd48>
   1d2a4:	ldr	w8, [x19, #24]
   1d2a8:	mov	w0, #0x3f                  	// #63
   1d2ac:	str	w8, [x21, #8]
   1d2b0:	b	1d27c <_getopt_internal_r@@Base+0xbb4>
   1d2b4:	ldur	w8, [x29, #-8]
   1d2b8:	cbnz	w8, 1d454 <_getopt_internal_r@@Base+0xd8c>
   1d2bc:	ldr	w8, [x19, #24]
   1d2c0:	mov	w9, #0x3f                  	// #63
   1d2c4:	str	w8, [x21, #8]
   1d2c8:	ldr	x8, [sp, #40]
   1d2cc:	ldrb	w8, [x8]
   1d2d0:	cmp	w8, #0x3a
   1d2d4:	csel	w0, w8, w9, eq  // eq = none
   1d2d8:	b	1d27c <_getopt_internal_r@@Base+0xbb4>
   1d2dc:	adrp	x19, 42000 <vasnprintf@@Base+0x1424c>
   1d2e0:	ldr	x19, [x19, #3816]
   1d2e4:	ldr	x20, [x19]
   1d2e8:	cbz	w25, 1d324 <_getopt_internal_r@@Base+0xc5c>
   1d2ec:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1d2f0:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1d2f4:	add	x0, x0, #0x387
   1d2f8:	add	x1, x1, #0xda
   1d2fc:	mov	w2, #0x5                   	// #5
   1d300:	bl	ac80 <dcgettext@plt>
   1d304:	ldur	x8, [x29, #-32]
   1d308:	ldr	x4, [x21, #32]
   1d30c:	mov	x1, x0
   1d310:	mov	x0, x20
   1d314:	ldr	x2, [x8]
   1d318:	mov	x3, x22
   1d31c:	bl	ae70 <fprintf@plt>
   1d320:	b	1d1b0 <_getopt_internal_r@@Base+0xae8>
   1d324:	mov	x0, x20
   1d328:	bl	a2e0 <flockfile@plt>
   1d32c:	ldr	x20, [x19]
   1d330:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1d334:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1d338:	add	x0, x0, #0x387
   1d33c:	add	x1, x1, #0xfa
   1d340:	mov	w2, #0x5                   	// #5
   1d344:	bl	ac80 <dcgettext@plt>
   1d348:	ldur	x8, [x29, #-32]
   1d34c:	ldr	x4, [x21, #32]
   1d350:	mov	x1, x0
   1d354:	mov	x0, x20
   1d358:	ldr	x2, [x8]
   1d35c:	mov	x3, x22
   1d360:	mov	x23, x21
   1d364:	mov	x24, x22
   1d368:	bl	ae70 <fprintf@plt>
   1d36c:	ldr	x25, [sp, #24]
   1d370:	cbz	w28, 1d3b0 <_getopt_internal_r@@Base+0xce8>
   1d374:	adrp	x20, 31000 <vasnprintf@@Base+0x324c>
   1d378:	mov	w21, w28
   1d37c:	add	x20, x20, #0x129
   1d380:	mov	x22, x27
   1d384:	ldrb	w8, [x22]
   1d388:	cbz	w8, 1d3a0 <_getopt_internal_r@@Base+0xcd8>
   1d38c:	ldr	x0, [x19]
   1d390:	ldr	x3, [x25]
   1d394:	mov	x1, x20
   1d398:	mov	x2, x24
   1d39c:	bl	ae70 <fprintf@plt>
   1d3a0:	add	x22, x22, #0x1
   1d3a4:	subs	x21, x21, #0x1
   1d3a8:	add	x25, x25, #0x20
   1d3ac:	b.ne	1d384 <_getopt_internal_r@@Base+0xcbc>  // b.any
   1d3b0:	ldr	x1, [x19]
   1d3b4:	mov	w0, #0xa                   	// #10
   1d3b8:	bl	a430 <fputc@plt>
   1d3bc:	ldr	x0, [x19]
   1d3c0:	bl	a570 <funlockfile@plt>
   1d3c4:	mov	x21, x23
   1d3c8:	b	1d1b0 <_getopt_internal_r@@Base+0xae8>
   1d3cc:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1d3d0:	ldr	x8, [x8, #3816]
   1d3d4:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1d3d8:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1d3dc:	add	x0, x0, #0x387
   1d3e0:	ldr	x20, [x8]
   1d3e4:	add	x1, x1, #0x131
   1d3e8:	mov	w2, #0x5                   	// #5
   1d3ec:	bl	ac80 <dcgettext@plt>
   1d3f0:	ldur	x8, [x29, #-32]
   1d3f4:	ldr	x4, [x21, #32]
   1d3f8:	mov	x1, x0
   1d3fc:	mov	x0, x20
   1d400:	ldr	x2, [x8]
   1d404:	mov	x3, x22
   1d408:	bl	ae70 <fprintf@plt>
   1d40c:	b	1d264 <_getopt_internal_r@@Base+0xb9c>
   1d410:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1d414:	ldr	x8, [x8, #3816]
   1d418:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1d41c:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1d420:	add	x0, x0, #0x387
   1d424:	ldr	x20, [x8]
   1d428:	add	x1, x1, #0x151
   1d42c:	mov	w2, #0x5                   	// #5
   1d430:	bl	ac80 <dcgettext@plt>
   1d434:	ldur	x8, [x29, #-32]
   1d438:	ldr	x4, [x19]
   1d43c:	mov	x1, x0
   1d440:	mov	x0, x20
   1d444:	ldr	x2, [x8]
   1d448:	mov	x3, x22
   1d44c:	bl	ae70 <fprintf@plt>
   1d450:	b	1d2a4 <_getopt_internal_r@@Base+0xbdc>
   1d454:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1d458:	ldr	x8, [x8, #3816]
   1d45c:	adrp	x0, 2f000 <vasnprintf@@Base+0x124c>
   1d460:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1d464:	add	x0, x0, #0x387
   1d468:	ldr	x20, [x8]
   1d46c:	add	x1, x1, #0x17e
   1d470:	mov	w2, #0x5                   	// #5
   1d474:	bl	ac80 <dcgettext@plt>
   1d478:	ldur	x8, [x29, #-32]
   1d47c:	ldr	x4, [x19]
   1d480:	mov	x1, x0
   1d484:	mov	x0, x20
   1d488:	ldr	x2, [x8]
   1d48c:	mov	x3, x22
   1d490:	bl	ae70 <fprintf@plt>
   1d494:	b	1d2bc <_getopt_internal_r@@Base+0xbf4>

000000000001d498 <rpl_getopt_internal@@Base>:
   1d498:	stp	x29, x30, [sp, #-32]!
   1d49c:	stp	x20, x19, [sp, #16]
   1d4a0:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
   1d4a4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1d4a8:	ldr	x20, [x20, #4032]
   1d4ac:	ldr	x8, [x8, #3856]
   1d4b0:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
   1d4b4:	add	x19, x19, #0x918
   1d4b8:	ldr	w9, [x20]
   1d4bc:	ldr	w8, [x8]
   1d4c0:	mov	w7, w6
   1d4c4:	mov	x6, x19
   1d4c8:	mov	x29, sp
   1d4cc:	stp	w9, w8, [x19]
   1d4d0:	bl	ad40 <_getopt_internal_r@plt>
   1d4d4:	ldr	w8, [x19]
   1d4d8:	adrp	x10, 42000 <vasnprintf@@Base+0x1424c>
   1d4dc:	adrp	x12, 42000 <vasnprintf@@Base+0x1424c>
   1d4e0:	ldr	x9, [x19, #16]
   1d4e4:	ldr	x10, [x10, #4016]
   1d4e8:	ldr	w11, [x19, #8]
   1d4ec:	ldr	x12, [x12, #3880]
   1d4f0:	str	w8, [x20]
   1d4f4:	ldp	x20, x19, [sp, #16]
   1d4f8:	str	x9, [x10]
   1d4fc:	str	w11, [x12]
   1d500:	ldp	x29, x30, [sp], #32
   1d504:	ret

000000000001d508 <rpl_getopt@@Base>:
   1d508:	stp	x29, x30, [sp, #-32]!
   1d50c:	stp	x20, x19, [sp, #16]
   1d510:	adrp	x20, 42000 <vasnprintf@@Base+0x1424c>
   1d514:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1d518:	ldr	x20, [x20, #4032]
   1d51c:	ldr	x8, [x8, #3856]
   1d520:	adrp	x19, 43000 <base_len@@Base+0x2ea54>
   1d524:	add	x19, x19, #0x918
   1d528:	ldr	w9, [x20]
   1d52c:	ldr	w8, [x8]
   1d530:	mov	w7, #0x1                   	// #1
   1d534:	mov	x3, xzr
   1d538:	mov	x4, xzr
   1d53c:	mov	w5, wzr
   1d540:	mov	x6, x19
   1d544:	mov	x29, sp
   1d548:	stp	w9, w8, [x19]
   1d54c:	bl	ad40 <_getopt_internal_r@plt>
   1d550:	ldr	w8, [x19]
   1d554:	adrp	x10, 42000 <vasnprintf@@Base+0x1424c>
   1d558:	adrp	x12, 42000 <vasnprintf@@Base+0x1424c>
   1d55c:	ldr	x9, [x19, #16]
   1d560:	ldr	x10, [x10, #4016]
   1d564:	ldr	w11, [x19, #8]
   1d568:	ldr	x12, [x12, #3880]
   1d56c:	str	w8, [x20]
   1d570:	ldp	x20, x19, [sp, #16]
   1d574:	str	x9, [x10]
   1d578:	str	w11, [x12]
   1d57c:	ldp	x29, x30, [sp], #32
   1d580:	ret

000000000001d584 <rpl_getopt_long@@Base>:
   1d584:	mov	w5, wzr
   1d588:	mov	w6, wzr
   1d58c:	b	aa10 <rpl_getopt_internal@plt>

000000000001d590 <_getopt_long_r@@Base>:
   1d590:	mov	x6, x5
   1d594:	mov	w5, wzr
   1d598:	mov	w7, wzr
   1d59c:	b	ad40 <_getopt_internal_r@plt>

000000000001d5a0 <rpl_getopt_long_only@@Base>:
   1d5a0:	mov	w5, #0x1                   	// #1
   1d5a4:	mov	w6, wzr
   1d5a8:	b	aa10 <rpl_getopt_internal@plt>

000000000001d5ac <_getopt_long_only_r@@Base>:
   1d5ac:	mov	x6, x5
   1d5b0:	mov	w5, #0x1                   	// #1
   1d5b4:	mov	w7, wzr
   1d5b8:	b	ad40 <_getopt_internal_r@plt>

000000000001d5bc <rpl_ioctl@@Base>:
   1d5bc:	sub	sp, sp, #0xe0
   1d5c0:	stp	x29, x30, [sp, #208]
   1d5c4:	add	x29, sp, #0xd0
   1d5c8:	mov	x9, #0xffffffffffffffd0    	// #-48
   1d5cc:	mov	x10, sp
   1d5d0:	sub	x11, x29, #0x50
   1d5d4:	movk	x9, #0xff80, lsl #32
   1d5d8:	add	x12, x29, #0x10
   1d5dc:	mov	x8, #0xffffffffffffffd0    	// #-48
   1d5e0:	add	x10, x10, #0x80
   1d5e4:	add	x11, x11, #0x30
   1d5e8:	stp	x2, x3, [x29, #-80]
   1d5ec:	stp	x4, x5, [x29, #-64]
   1d5f0:	stp	x6, x7, [x29, #-48]
   1d5f4:	stp	q1, q2, [sp, #16]
   1d5f8:	stp	q3, q4, [sp, #48]
   1d5fc:	str	q0, [sp]
   1d600:	stp	q5, q6, [sp, #80]
   1d604:	str	q7, [sp, #112]
   1d608:	stp	x10, x9, [x29, #-16]
   1d60c:	stp	x12, x11, [x29, #-32]
   1d610:	tbz	w8, #31, 1d630 <rpl_ioctl@@Base+0x74>
   1d614:	add	w9, w8, #0x8
   1d618:	cmn	w8, #0x8
   1d61c:	stur	w9, [x29, #-8]
   1d620:	b.gt	1d630 <rpl_ioctl@@Base+0x74>
   1d624:	ldur	x9, [x29, #-24]
   1d628:	add	x8, x9, x8
   1d62c:	b	1d63c <rpl_ioctl@@Base+0x80>
   1d630:	ldur	x8, [x29, #-32]
   1d634:	add	x9, x8, #0x8
   1d638:	stur	x9, [x29, #-32]
   1d63c:	ldr	x2, [x8]
   1d640:	mov	w1, w1
   1d644:	bl	ae80 <ioctl@plt>
   1d648:	ldp	x29, x30, [sp, #208]
   1d64c:	add	sp, sp, #0xe0
   1d650:	ret

000000000001d654 <rpl_mbrtowc@@Base>:
   1d654:	sub	sp, sp, #0x40
   1d658:	stp	x29, x30, [sp, #16]
   1d65c:	add	x29, sp, #0x10
   1d660:	cmp	x0, #0x0
   1d664:	sub	x8, x29, #0x4
   1d668:	stp	x20, x19, [sp, #48]
   1d66c:	csel	x20, x8, x0, eq  // eq = none
   1d670:	mov	x0, x20
   1d674:	stp	x22, x21, [sp, #32]
   1d678:	mov	x22, x2
   1d67c:	mov	x19, x1
   1d680:	bl	a200 <mbrtowc@plt>
   1d684:	mov	x21, x0
   1d688:	cbz	x22, 1d6ac <rpl_mbrtowc@@Base+0x58>
   1d68c:	cmn	x21, #0x2
   1d690:	b.cc	1d6ac <rpl_mbrtowc@@Base+0x58>  // b.lo, b.ul, b.last
   1d694:	mov	w0, wzr
   1d698:	bl	a6d0 <hard_locale@plt>
   1d69c:	tbnz	w0, #0, 1d6ac <rpl_mbrtowc@@Base+0x58>
   1d6a0:	ldrb	w8, [x19]
   1d6a4:	mov	w21, #0x1                   	// #1
   1d6a8:	str	w8, [x20]
   1d6ac:	mov	x0, x21
   1d6b0:	ldp	x20, x19, [sp, #48]
   1d6b4:	ldp	x22, x21, [sp, #32]
   1d6b8:	ldp	x29, x30, [sp, #16]
   1d6bc:	add	sp, sp, #0x40
   1d6c0:	ret

000000000001d6c4 <rpl_nanosleep@@Base>:
   1d6c4:	sub	sp, sp, #0x40
   1d6c8:	stp	x29, x30, [sp, #16]
   1d6cc:	stp	x22, x21, [sp, #32]
   1d6d0:	stp	x20, x19, [sp, #48]
   1d6d4:	ldr	x8, [x0, #8]
   1d6d8:	mov	w9, #0xca00                	// #51712
   1d6dc:	movk	w9, #0x3b9a, lsl #16
   1d6e0:	add	x29, sp, #0x10
   1d6e4:	cmp	x8, x9
   1d6e8:	b.cc	1d700 <rpl_nanosleep@@Base+0x3c>  // b.lo, b.ul, b.last
   1d6ec:	bl	ad80 <__errno_location@plt>
   1d6f0:	mov	w8, #0x16                  	// #22
   1d6f4:	str	w8, [x0]
   1d6f8:	mov	w0, #0xffffffff            	// #-1
   1d6fc:	b	1d764 <rpl_nanosleep@@Base+0xa0>
   1d700:	ldr	x20, [x0]
   1d704:	mov	w21, #0xa400                	// #41984
   1d708:	mov	x22, #0xffffffffffff5c00    	// #-41984
   1d70c:	mov	x19, x1
   1d710:	movk	w21, #0x1f, lsl #16
   1d714:	movk	x22, #0xffe0, lsl #16
   1d718:	cmp	x20, x21
   1d71c:	str	x8, [sp, #8]
   1d720:	b.le	1d754 <rpl_nanosleep@@Base+0x90>
   1d724:	mov	x0, sp
   1d728:	mov	x1, x19
   1d72c:	str	x21, [sp]
   1d730:	bl	a9f0 <nanosleep@plt>
   1d734:	mov	x8, xzr
   1d738:	add	x20, x20, x22
   1d73c:	cbz	w0, 1d718 <rpl_nanosleep@@Base+0x54>
   1d740:	cbz	x19, 1d764 <rpl_nanosleep@@Base+0xa0>
   1d744:	ldr	x8, [x19]
   1d748:	add	x8, x8, x20
   1d74c:	str	x8, [x19]
   1d750:	b	1d764 <rpl_nanosleep@@Base+0xa0>
   1d754:	mov	x0, sp
   1d758:	mov	x1, x19
   1d75c:	str	x20, [sp]
   1d760:	bl	a9f0 <nanosleep@plt>
   1d764:	ldp	x20, x19, [sp, #48]
   1d768:	ldp	x22, x21, [sp, #32]
   1d76c:	ldp	x29, x30, [sp, #16]
   1d770:	add	sp, sp, #0x40
   1d774:	ret

000000000001d778 <openat_proc_name@@Base>:
   1d778:	sub	sp, sp, #0x60
   1d77c:	stp	x29, x30, [sp, #32]
   1d780:	stp	x22, x21, [sp, #64]
   1d784:	stp	x20, x19, [sp, #80]
   1d788:	ldrb	w8, [x2]
   1d78c:	mov	x19, x0
   1d790:	str	x23, [sp, #48]
   1d794:	add	x29, sp, #0x20
   1d798:	cbz	w8, 1d7f8 <openat_proc_name@@Base+0x80>
   1d79c:	adrp	x23, 43000 <base_len@@Base+0x2ea54>
   1d7a0:	ldr	w8, [x23, #2384]
   1d7a4:	mov	x20, x2
   1d7a8:	mov	w21, w1
   1d7ac:	cbz	w8, 1d800 <openat_proc_name@@Base+0x88>
   1d7b0:	tbnz	w8, #31, 1d858 <openat_proc_name@@Base+0xe0>
   1d7b4:	mov	x0, x20
   1d7b8:	bl	a280 <strlen@plt>
   1d7bc:	add	x0, x0, #0x1b
   1d7c0:	cmp	x0, #0xfc1
   1d7c4:	b.cc	1d7d4 <openat_proc_name@@Base+0x5c>  // b.lo, b.ul, b.last
   1d7c8:	bl	a540 <malloc@plt>
   1d7cc:	mov	x19, x0
   1d7d0:	cbz	x0, 1d86c <openat_proc_name@@Base+0xf4>
   1d7d4:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1d7d8:	add	x1, x1, #0x1cb
   1d7dc:	mov	x0, x19
   1d7e0:	mov	w2, w21
   1d7e4:	bl	a3e0 <sprintf@plt>
   1d7e8:	add	x0, x19, w0, sxtw
   1d7ec:	mov	x1, x20
   1d7f0:	bl	ab20 <strcpy@plt>
   1d7f4:	b	1d86c <openat_proc_name@@Base+0xf4>
   1d7f8:	strb	wzr, [x19]
   1d7fc:	b	1d86c <openat_proc_name@@Base+0xf4>
   1d800:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   1d804:	add	x0, x0, #0x1a6
   1d808:	mov	w1, #0x4900                	// #18688
   1d80c:	bl	a590 <open@plt>
   1d810:	tbnz	w0, #31, 1d860 <openat_proc_name@@Base+0xe8>
   1d814:	mov	w22, w0
   1d818:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   1d81c:	add	x1, x1, #0x1b4
   1d820:	mov	x0, sp
   1d824:	mov	w2, w22
   1d828:	bl	a3e0 <sprintf@plt>
   1d82c:	mov	x0, sp
   1d830:	mov	w1, wzr
   1d834:	bl	a890 <access@plt>
   1d838:	cmp	w0, #0x0
   1d83c:	mov	w8, #0x1                   	// #1
   1d840:	cneg	w8, w8, ne  // ne = any
   1d844:	mov	w0, w22
   1d848:	str	w8, [x23, #2384]
   1d84c:	bl	a790 <close@plt>
   1d850:	ldr	w8, [x23, #2384]
   1d854:	tbz	w8, #31, 1d7b4 <openat_proc_name@@Base+0x3c>
   1d858:	mov	x19, xzr
   1d85c:	b	1d86c <openat_proc_name@@Base+0xf4>
   1d860:	mov	w8, #0xffffffff            	// #-1
   1d864:	mov	x19, xzr
   1d868:	str	w8, [x23, #2384]
   1d86c:	mov	x0, x19
   1d870:	ldp	x20, x19, [sp, #80]
   1d874:	ldp	x22, x21, [sp, #64]
   1d878:	ldr	x23, [sp, #48]
   1d87c:	ldp	x29, x30, [sp, #32]
   1d880:	add	sp, sp, #0x60
   1d884:	ret

000000000001d888 <printf_fetchargs@@Base>:
   1d888:	ldr	x8, [x1]
   1d88c:	cbz	x8, 1dac4 <printf_fetchargs@@Base+0x23c>
   1d890:	ldr	x12, [x1, #8]
   1d894:	adrp	x10, 31000 <vasnprintf@@Base+0x324c>
   1d898:	adrp	x11, 31000 <vasnprintf@@Base+0x324c>
   1d89c:	adrp	x13, 31000 <vasnprintf@@Base+0x324c>
   1d8a0:	mov	x8, xzr
   1d8a4:	add	x9, x0, #0x18
   1d8a8:	add	x10, x10, #0x1e0
   1d8ac:	add	x11, x11, #0x214
   1d8b0:	add	x12, x12, #0x10
   1d8b4:	add	x13, x13, #0x1f8
   1d8b8:	b	1d8ec <printf_fetchargs@@Base+0x64>
   1d8bc:	ldrsw	x14, [x0, #28]
   1d8c0:	tbnz	w14, #31, 1daa8 <printf_fetchargs@@Base+0x220>
   1d8c4:	ldr	x14, [x0]
   1d8c8:	add	x15, x14, #0x8
   1d8cc:	str	x15, [x0]
   1d8d0:	ldr	x14, [x14]
   1d8d4:	str	x14, [x12]
   1d8d8:	ldr	x14, [x1]
   1d8dc:	add	x8, x8, #0x1
   1d8e0:	add	x12, x12, #0x20
   1d8e4:	cmp	x8, x14
   1d8e8:	b.cs	1dac4 <printf_fetchargs@@Base+0x23c>  // b.hs, b.nlast
   1d8ec:	ldur	w14, [x12, #-16]
   1d8f0:	sub	w14, w14, #0x1
   1d8f4:	cmp	w14, #0x15
   1d8f8:	b.hi	1dacc <printf_fetchargs@@Base+0x244>  // b.pmore
   1d8fc:	adr	x15, 1d8bc <printf_fetchargs@@Base+0x34>
   1d900:	ldrb	w16, [x10, x14]
   1d904:	add	x15, x15, x16, lsl #2
   1d908:	br	x15
   1d90c:	ldrsw	x14, [x9]
   1d910:	tbz	w14, #31, 1d8c4 <printf_fetchargs@@Base+0x3c>
   1d914:	add	w15, w14, #0x8
   1d918:	cmn	w14, #0x8
   1d91c:	str	w15, [x9]
   1d920:	b.gt	1d8c4 <printf_fetchargs@@Base+0x3c>
   1d924:	ldr	x15, [x0, #8]
   1d928:	add	x14, x15, x14
   1d92c:	b	1d8d0 <printf_fetchargs@@Base+0x48>
   1d930:	ldrsw	x14, [x9]
   1d934:	tbz	w14, #31, 1d954 <printf_fetchargs@@Base+0xcc>
   1d938:	add	w15, w14, #0x8
   1d93c:	cmn	w14, #0x8
   1d940:	str	w15, [x9]
   1d944:	b.gt	1d954 <printf_fetchargs@@Base+0xcc>
   1d948:	ldr	x15, [x0, #8]
   1d94c:	add	x14, x15, x14
   1d950:	b	1d960 <printf_fetchargs@@Base+0xd8>
   1d954:	ldr	x14, [x0]
   1d958:	add	x15, x14, #0x8
   1d95c:	str	x15, [x0]
   1d960:	ldr	w14, [x14]
   1d964:	str	w14, [x12]
   1d968:	b	1d8d8 <printf_fetchargs@@Base+0x50>
   1d96c:	ldrsw	x14, [x9]
   1d970:	tbz	w14, #31, 1d9b4 <printf_fetchargs@@Base+0x12c>
   1d974:	add	w15, w14, #0x8
   1d978:	cmn	w14, #0x8
   1d97c:	str	w15, [x9]
   1d980:	b.gt	1d9b4 <printf_fetchargs@@Base+0x12c>
   1d984:	ldr	x15, [x0, #8]
   1d988:	add	x14, x15, x14
   1d98c:	b	1d9c0 <printf_fetchargs@@Base+0x138>
   1d990:	ldrsw	x14, [x9]
   1d994:	tbz	w14, #31, 1d9cc <printf_fetchargs@@Base+0x144>
   1d998:	add	w15, w14, #0x8
   1d99c:	cmn	w14, #0x8
   1d9a0:	str	w15, [x9]
   1d9a4:	b.gt	1d9cc <printf_fetchargs@@Base+0x144>
   1d9a8:	ldr	x15, [x0, #8]
   1d9ac:	add	x14, x15, x14
   1d9b0:	b	1d9d8 <printf_fetchargs@@Base+0x150>
   1d9b4:	ldr	x14, [x0]
   1d9b8:	add	x15, x14, #0x8
   1d9bc:	str	x15, [x0]
   1d9c0:	ldr	w14, [x14]
   1d9c4:	strb	w14, [x12]
   1d9c8:	b	1d8d8 <printf_fetchargs@@Base+0x50>
   1d9cc:	ldr	x14, [x0]
   1d9d0:	add	x15, x14, #0x8
   1d9d4:	str	x15, [x0]
   1d9d8:	ldr	w14, [x14]
   1d9dc:	strh	w14, [x12]
   1d9e0:	b	1d8d8 <printf_fetchargs@@Base+0x50>
   1d9e4:	ldrsw	x14, [x0, #28]
   1d9e8:	tbz	w14, #31, 1da50 <printf_fetchargs@@Base+0x1c8>
   1d9ec:	add	w15, w14, #0x10
   1d9f0:	cmn	w14, #0x10
   1d9f4:	str	w15, [x0, #28]
   1d9f8:	b.gt	1da50 <printf_fetchargs@@Base+0x1c8>
   1d9fc:	ldr	x15, [x0, #16]
   1da00:	add	x14, x15, x14
   1da04:	b	1da64 <printf_fetchargs@@Base+0x1dc>
   1da08:	ldrsw	x14, [x9]
   1da0c:	tbz	w14, #31, 1da70 <printf_fetchargs@@Base+0x1e8>
   1da10:	add	w15, w14, #0x8
   1da14:	cmn	w14, #0x8
   1da18:	str	w15, [x9]
   1da1c:	b.gt	1da70 <printf_fetchargs@@Base+0x1e8>
   1da20:	ldr	x15, [x0, #8]
   1da24:	add	x14, x15, x14
   1da28:	b	1da7c <printf_fetchargs@@Base+0x1f4>
   1da2c:	ldrsw	x14, [x9]
   1da30:	tbz	w14, #31, 1da8c <printf_fetchargs@@Base+0x204>
   1da34:	add	w15, w14, #0x8
   1da38:	cmn	w14, #0x8
   1da3c:	str	w15, [x9]
   1da40:	b.gt	1da8c <printf_fetchargs@@Base+0x204>
   1da44:	ldr	x15, [x0, #8]
   1da48:	add	x14, x15, x14
   1da4c:	b	1da98 <printf_fetchargs@@Base+0x210>
   1da50:	ldr	x14, [x0]
   1da54:	add	x14, x14, #0xf
   1da58:	and	x14, x14, #0xfffffffffffffff0
   1da5c:	add	x15, x14, #0x10
   1da60:	str	x15, [x0]
   1da64:	ldr	q0, [x14]
   1da68:	str	q0, [x12]
   1da6c:	b	1d8d8 <printf_fetchargs@@Base+0x50>
   1da70:	ldr	x14, [x0]
   1da74:	add	x15, x14, #0x8
   1da78:	str	x15, [x0]
   1da7c:	ldr	x14, [x14]
   1da80:	cmp	x14, #0x0
   1da84:	csel	x14, x11, x14, eq  // eq = none
   1da88:	b	1d8d4 <printf_fetchargs@@Base+0x4c>
   1da8c:	ldr	x14, [x0]
   1da90:	add	x15, x14, #0x8
   1da94:	str	x15, [x0]
   1da98:	ldr	x14, [x14]
   1da9c:	cmp	x14, #0x0
   1daa0:	csel	x14, x13, x14, eq  // eq = none
   1daa4:	b	1d8d4 <printf_fetchargs@@Base+0x4c>
   1daa8:	add	w15, w14, #0x10
   1daac:	cmn	w14, #0x10
   1dab0:	str	w15, [x0, #28]
   1dab4:	b.gt	1d8c4 <printf_fetchargs@@Base+0x3c>
   1dab8:	ldr	x15, [x0, #16]
   1dabc:	add	x14, x15, x14
   1dac0:	b	1d8d0 <printf_fetchargs@@Base+0x48>
   1dac4:	mov	w0, wzr
   1dac8:	ret
   1dacc:	mov	w0, #0xffffffff            	// #-1
   1dad0:	ret

000000000001dad4 <printf_parse@@Base>:
   1dad4:	sub	sp, sp, #0xb0
   1dad8:	add	x8, x1, #0x20
   1dadc:	add	x9, x2, #0x10
   1dae0:	stp	x29, x30, [sp, #80]
   1dae4:	stp	x28, x27, [sp, #96]
   1dae8:	stp	x26, x25, [sp, #112]
   1daec:	stp	x24, x23, [sp, #128]
   1daf0:	stp	x22, x21, [sp, #144]
   1daf4:	stp	x20, x19, [sp, #160]
   1daf8:	stp	xzr, x8, [x1]
   1dafc:	str	x8, [sp, #32]
   1db00:	stp	xzr, x9, [x2]
   1db04:	ldrb	w8, [x0]
   1db08:	add	x29, sp, #0x50
   1db0c:	mov	x23, x0
   1db10:	stur	x9, [x29, #-16]
   1db14:	cbz	w8, 1e4a4 <printf_parse@@Base+0x9d0>
   1db18:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1db1c:	movk	x0, #0x999a
   1db20:	adrp	x25, 31000 <vasnprintf@@Base+0x324c>
   1db24:	adrp	x20, 31000 <vasnprintf@@Base+0x324c>
   1db28:	movk	x0, #0x1999, lsl #48
   1db2c:	mov	w5, #0x7                   	// #7
   1db30:	add	x25, x25, #0x246
   1db34:	mov	w3, #0x1                   	// #1
   1db38:	add	x20, x20, #0x21c
   1db3c:	mov	w4, #0x7                   	// #7
   1db40:	stur	xzr, [x29, #-8]
   1db44:	str	xzr, [sp, #40]
   1db48:	str	xzr, [sp, #24]
   1db4c:	stp	x2, x1, [x29, #-32]
   1db50:	b	1db60 <printf_parse@@Base+0x8c>
   1db54:	mov	x23, x13
   1db58:	ldrb	w8, [x23]
   1db5c:	cbz	w8, 1e52c <printf_parse@@Base+0xa58>
   1db60:	and	w8, w8, #0xff
   1db64:	cmp	w8, #0x25
   1db68:	add	x13, x23, #0x1
   1db6c:	b.ne	1db54 <printf_parse@@Base+0x80>  // b.any
   1db70:	ldp	x6, x7, [x1]
   1db74:	mov	w8, #0x58                  	// #88
   1db78:	mov	x28, #0xffffffffffffffff    	// #-1
   1db7c:	mul	x8, x6, x8
   1db80:	add	x24, x7, x8
   1db84:	str	x23, [x7, x8]
   1db88:	mov	x11, x24
   1db8c:	mov	x10, x24
   1db90:	mov	x9, x24
   1db94:	mov	x8, x24
   1db98:	mov	x27, x24
   1db9c:	mov	x19, x24
   1dba0:	mov	x26, x24
   1dba4:	str	wzr, [x11, #16]!
   1dba8:	str	xzr, [x10, #24]!
   1dbac:	str	xzr, [x9, #32]!
   1dbb0:	str	x28, [x8, #40]!
   1dbb4:	str	xzr, [x27, #48]!
   1dbb8:	str	xzr, [x19, #56]!
   1dbbc:	str	x28, [x26, #64]!
   1dbc0:	str	x28, [x24, #80]!
   1dbc4:	ldrb	w14, [x23, #1]
   1dbc8:	sub	w12, w14, #0x30
   1dbcc:	cmp	w12, #0x9
   1dbd0:	b.hi	1dc44 <printf_parse@@Base+0x170>  // b.pmore
   1dbd4:	add	x12, x23, #0x2
   1dbd8:	mov	x15, x12
   1dbdc:	ldrb	w16, [x15], #1
   1dbe0:	sub	w17, w16, #0x30
   1dbe4:	cmp	w17, #0xa
   1dbe8:	b.cc	1dbdc <printf_parse@@Base+0x108>  // b.lo, b.ul, b.last
   1dbec:	cmp	w16, #0x24
   1dbf0:	b.ne	1dc40 <printf_parse@@Base+0x16c>  // b.any
   1dbf4:	mov	x13, xzr
   1dbf8:	add	x15, x13, x13, lsl #2
   1dbfc:	cmp	x13, x0
   1dc00:	and	x13, x14, #0xff
   1dc04:	ldrb	w14, [x12], #1
   1dc08:	lsl	x15, x15, #1
   1dc0c:	sub	x13, x13, #0x30
   1dc10:	csinv	x15, x15, xzr, cc  // cc = lo, ul, last
   1dc14:	adds	x13, x15, x13
   1dc18:	sub	w15, w14, #0x30
   1dc1c:	csinv	x13, x13, xzr, cc  // cc = lo, ul, last
   1dc20:	cmp	w15, #0xa
   1dc24:	b.cc	1dbf8 <printf_parse@@Base+0x124>  // b.lo, b.ul, b.last
   1dc28:	add	x14, x13, #0x1
   1dc2c:	cmp	x14, #0x2
   1dc30:	b.cc	1e4b4 <printf_parse@@Base+0x9e0>  // b.lo, b.ul, b.last
   1dc34:	sub	x28, x13, #0x1
   1dc38:	mov	x13, x12
   1dc3c:	b	1dc44 <printf_parse@@Base+0x170>
   1dc40:	mov	x28, #0xffffffffffffffff    	// #-1
   1dc44:	mov	w14, wzr
   1dc48:	add	x12, x13, #0x1
   1dc4c:	add	x21, x13, #0x2
   1dc50:	sub	x13, x13, #0x1
   1dc54:	b	1dc70 <printf_parse@@Base+0x19c>
   1dc58:	mov	w16, #0x40                  	// #64
   1dc5c:	orr	w14, w14, w16
   1dc60:	add	x12, x12, #0x1
   1dc64:	add	x21, x21, #0x1
   1dc68:	str	w14, [x11]
   1dc6c:	add	x13, x13, #0x1
   1dc70:	ldurb	w15, [x12, #-1]
   1dc74:	sub	w16, w15, #0x20
   1dc78:	cmp	w16, #0x29
   1dc7c:	b.hi	1dcbc <printf_parse@@Base+0x1e8>  // b.pmore
   1dc80:	adr	x17, 1dc58 <printf_parse@@Base+0x184>
   1dc84:	ldrb	w18, [x20, x16]
   1dc88:	add	x17, x17, x18, lsl #2
   1dc8c:	mov	w16, #0x1                   	// #1
   1dc90:	br	x17
   1dc94:	mov	w16, #0x8                   	// #8
   1dc98:	b	1dc5c <printf_parse@@Base+0x188>
   1dc9c:	mov	w16, #0x10                  	// #16
   1dca0:	b	1dc5c <printf_parse@@Base+0x188>
   1dca4:	mov	w16, #0x4                   	// #4
   1dca8:	b	1dc5c <printf_parse@@Base+0x188>
   1dcac:	mov	w16, #0x2                   	// #2
   1dcb0:	b	1dc5c <printf_parse@@Base+0x188>
   1dcb4:	mov	w16, #0x20                  	// #32
   1dcb8:	b	1dc5c <printf_parse@@Base+0x188>
   1dcbc:	sub	w8, w15, #0x30
   1dcc0:	cmp	w8, #0x9
   1dcc4:	sub	x21, x12, #0x1
   1dcc8:	b.hi	1dec4 <printf_parse@@Base+0x3f0>  // b.pmore
   1dccc:	str	x21, [x10]
   1dcd0:	ldrb	w8, [x13, #1]!
   1dcd4:	sub	w8, w8, #0x30
   1dcd8:	cmp	w8, #0xa
   1dcdc:	b.cc	1dcd0 <printf_parse@@Base+0x1fc>  // b.lo, b.ul, b.last
   1dce0:	str	x13, [x9]
   1dce4:	ldr	x9, [sp, #40]
   1dce8:	sub	x8, x13, x21
   1dcec:	mov	x21, x13
   1dcf0:	cmp	x9, x8
   1dcf4:	csel	x9, x8, x9, cc  // cc = lo, ul, last
   1dcf8:	str	x9, [sp, #40]
   1dcfc:	b	1dec0 <printf_parse@@Base+0x3ec>
   1dd00:	sub	x11, x12, #0x1
   1dd04:	str	x11, [x10]
   1dd08:	ldr	x10, [sp, #40]
   1dd0c:	str	x12, [x9]
   1dd10:	ldrb	w9, [x12]
   1dd14:	cmp	x10, #0x0
   1dd18:	csinc	x10, x10, xzr, ne  // ne = any
   1dd1c:	str	x10, [sp, #40]
   1dd20:	sub	w10, w9, #0x30
   1dd24:	cmp	w10, #0x9
   1dd28:	b.hi	1dde4 <printf_parse@@Base+0x310>  // b.pmore
   1dd2c:	mov	x10, x21
   1dd30:	ldrb	w11, [x10], #1
   1dd34:	sub	w13, w11, #0x30
   1dd38:	cmp	w13, #0xa
   1dd3c:	b.cc	1dd30 <printf_parse@@Base+0x25c>  // b.lo, b.ul, b.last
   1dd40:	cmp	w11, #0x24
   1dd44:	b.ne	1dde4 <printf_parse@@Base+0x310>  // b.any
   1dd48:	mov	x10, xzr
   1dd4c:	add	x11, x10, x10, lsl #2
   1dd50:	cmp	x10, x0
   1dd54:	and	x10, x9, #0xff
   1dd58:	ldrb	w9, [x21], #1
   1dd5c:	lsl	x11, x11, #1
   1dd60:	sub	x10, x10, #0x30
   1dd64:	csinv	x11, x11, xzr, cc  // cc = lo, ul, last
   1dd68:	adds	x10, x11, x10
   1dd6c:	sub	w11, w9, #0x30
   1dd70:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
   1dd74:	cmp	w11, #0xa
   1dd78:	b.cc	1dd4c <printf_parse@@Base+0x278>  // b.lo, b.ul, b.last
   1dd7c:	add	x9, x10, #0x1
   1dd80:	cmp	x9, #0x2
   1dd84:	b.cc	1e4b4 <printf_parse@@Base+0x9e0>  // b.lo, b.ul, b.last
   1dd88:	sub	x22, x10, #0x1
   1dd8c:	str	x22, [x8]
   1dd90:	cmp	x22, x4
   1dd94:	b.cc	1de08 <printf_parse@@Base+0x334>  // b.lo, b.ul, b.last
   1dd98:	lsl	x8, x4, #1
   1dd9c:	cmp	x4, #0x0
   1dda0:	csinv	x8, x8, xzr, ge  // ge = tcont
   1dda4:	cmp	x8, x22
   1dda8:	csinc	x9, x8, x22, hi  // hi = pmore
   1ddac:	lsr	x8, x9, #59
   1ddb0:	stp	x27, x19, [sp]
   1ddb4:	cbnz	x8, 1e4ec <printf_parse@@Base+0xa18>
   1ddb8:	ldr	x0, [x2, #8]
   1ddbc:	ldur	x8, [x29, #-16]
   1ddc0:	mov	x25, x7
   1ddc4:	mov	x27, x6
   1ddc8:	mov	x19, x5
   1ddcc:	cmp	x0, x8
   1ddd0:	lsl	x1, x9, #5
   1ddd4:	str	x9, [sp, #16]
   1ddd8:	b.eq	1de10 <printf_parse@@Base+0x33c>  // b.none
   1dddc:	bl	a720 <realloc@plt>
   1dde0:	b	1de18 <printf_parse@@Base+0x344>
   1dde4:	ldur	x10, [x29, #-8]
   1dde8:	adds	x9, x10, #0x1
   1ddec:	str	x10, [x8]
   1ddf0:	b.cs	1e4b4 <printf_parse@@Base+0x9e0>  // b.hs, b.nlast
   1ddf4:	ldur	x22, [x29, #-8]
   1ddf8:	mov	x21, x12
   1ddfc:	stur	x9, [x29, #-8]
   1de00:	cmp	x22, x4
   1de04:	b.cs	1dd98 <printf_parse@@Base+0x2c4>  // b.hs, b.nlast
   1de08:	ldr	x23, [x2, #8]
   1de0c:	b	1de70 <printf_parse@@Base+0x39c>
   1de10:	mov	x0, x1
   1de14:	bl	a540 <malloc@plt>
   1de18:	ldp	x2, x1, [x29, #-32]
   1de1c:	ldr	x4, [sp, #16]
   1de20:	mov	x23, x0
   1de24:	cbz	x0, 1e4ec <printf_parse@@Base+0xa18>
   1de28:	ldr	x8, [x2, #8]
   1de2c:	ldur	x9, [x29, #-16]
   1de30:	cmp	x8, x9
   1de34:	b.ne	1de54 <printf_parse@@Base+0x380>  // b.any
   1de38:	ldr	x8, [x2]
   1de3c:	ldur	x1, [x29, #-16]
   1de40:	mov	x0, x23
   1de44:	lsl	x2, x8, #5
   1de48:	bl	a210 <memcpy@plt>
   1de4c:	ldr	x4, [sp, #16]
   1de50:	ldp	x2, x1, [x29, #-32]
   1de54:	str	x23, [x2, #8]
   1de58:	mov	x5, x19
   1de5c:	mov	x6, x27
   1de60:	ldp	x27, x19, [sp]
   1de64:	mov	x7, x25
   1de68:	adrp	x25, 31000 <vasnprintf@@Base+0x324c>
   1de6c:	add	x25, x25, #0x246
   1de70:	ldr	x8, [x2]
   1de74:	cmp	x8, x22
   1de78:	b.hi	1de94 <printf_parse@@Base+0x3c0>  // b.pmore
   1de7c:	add	x9, x23, x8, lsl #5
   1de80:	add	x8, x8, #0x1
   1de84:	cmp	x8, x22
   1de88:	str	wzr, [x9], #32
   1de8c:	b.ls	1de80 <printf_parse@@Base+0x3ac>  // b.plast
   1de90:	str	x8, [x2]
   1de94:	add	x8, x23, x22, lsl #5
   1de98:	ldr	w9, [x8]
   1de9c:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1dea0:	movk	x0, #0x999a
   1dea4:	movk	x0, #0x1999, lsl #48
   1dea8:	mov	w3, #0x1                   	// #1
   1deac:	cmp	w9, #0x5
   1deb0:	b.eq	1dec0 <printf_parse@@Base+0x3ec>  // b.none
   1deb4:	cbnz	w9, 1e4b4 <printf_parse@@Base+0x9e0>
   1deb8:	mov	w9, #0x5                   	// #5
   1debc:	str	w9, [x8]
   1dec0:	ldrb	w15, [x21]
   1dec4:	cmp	w15, #0x2e
   1dec8:	b.ne	1dfac <printf_parse@@Base+0x4d8>  // b.any
   1decc:	ldrb	w8, [x21, #1]
   1ded0:	str	x21, [x27]
   1ded4:	mov	x27, x21
   1ded8:	cmp	w8, #0x2a
   1dedc:	b.ne	1df80 <printf_parse@@Base+0x4ac>  // b.any
   1dee0:	add	x9, x21, #0x2
   1dee4:	ldr	x10, [sp, #24]
   1dee8:	str	x9, [x19]
   1deec:	ldrb	w8, [x21, #2]
   1def0:	mov	w11, #0x2                   	// #2
   1def4:	cmp	x10, #0x2
   1def8:	csel	x10, x10, x11, hi  // hi = pmore
   1defc:	str	x10, [sp, #24]
   1df00:	sub	w10, w8, #0x30
   1df04:	cmp	w10, #0x9
   1df08:	b.hi	1e0c8 <printf_parse@@Base+0x5f4>  // b.pmore
   1df0c:	add	x27, x21, #0x3
   1df10:	mov	x10, x27
   1df14:	ldrb	w11, [x10], #1
   1df18:	sub	w12, w11, #0x30
   1df1c:	cmp	w12, #0xa
   1df20:	b.cc	1df14 <printf_parse@@Base+0x440>  // b.lo, b.ul, b.last
   1df24:	cmp	w11, #0x24
   1df28:	b.ne	1e0c8 <printf_parse@@Base+0x5f4>  // b.any
   1df2c:	mov	x9, xzr
   1df30:	add	x10, x9, x9, lsl #2
   1df34:	cmp	x9, x0
   1df38:	and	x9, x8, #0xff
   1df3c:	ldrb	w8, [x27], #1
   1df40:	lsl	x10, x10, #1
   1df44:	sub	x9, x9, #0x30
   1df48:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
   1df4c:	adds	x9, x10, x9
   1df50:	sub	w10, w8, #0x30
   1df54:	csinv	x9, x9, xzr, cc  // cc = lo, ul, last
   1df58:	cmp	w10, #0xa
   1df5c:	b.cc	1df30 <printf_parse@@Base+0x45c>  // b.lo, b.ul, b.last
   1df60:	add	x8, x9, #0x1
   1df64:	cmp	x8, #0x2
   1df68:	b.cc	1e4b4 <printf_parse@@Base+0x9e0>  // b.lo, b.ul, b.last
   1df6c:	sub	x19, x9, #0x1
   1df70:	str	x19, [x26]
   1df74:	cmp	x19, x4
   1df78:	b.cc	1e0e0 <printf_parse@@Base+0x60c>  // b.lo, b.ul, b.last
   1df7c:	b	1e2e8 <printf_parse@@Base+0x814>
   1df80:	ldrb	w8, [x27, #1]!
   1df84:	sub	w8, w8, #0x30
   1df88:	cmp	w8, #0xa
   1df8c:	b.cc	1df80 <printf_parse@@Base+0x4ac>  // b.lo, b.ul, b.last
   1df90:	ldr	x9, [sp, #24]
   1df94:	sub	x8, x27, x21
   1df98:	str	x27, [x19]
   1df9c:	cmp	x9, x8
   1dfa0:	csel	x9, x8, x9, cc  // cc = lo, ul, last
   1dfa4:	str	x9, [sp, #24]
   1dfa8:	b	1dfb0 <printf_parse@@Base+0x4dc>
   1dfac:	mov	x27, x21
   1dfb0:	mov	w8, wzr
   1dfb4:	add	x23, x27, #0x1
   1dfb8:	b	1dfc4 <printf_parse@@Base+0x4f0>
   1dfbc:	orr	w8, w8, #0x4
   1dfc0:	add	x23, x23, #0x1
   1dfc4:	ldurb	w9, [x23, #-1]
   1dfc8:	sub	w10, w9, #0x4c
   1dfcc:	cmp	w10, #0x2e
   1dfd0:	b.hi	1e004 <printf_parse@@Base+0x530>  // b.pmore
   1dfd4:	adr	x11, 1dfbc <printf_parse@@Base+0x4e8>
   1dfd8:	ldrb	w12, [x25, x10]
   1dfdc:	add	x11, x11, x12, lsl #2
   1dfe0:	br	x11
   1dfe4:	add	w8, w8, #0x8
   1dfe8:	add	x23, x23, #0x1
   1dfec:	b	1dfc4 <printf_parse@@Base+0x4f0>
   1dff0:	and	w9, w8, #0x1
   1dff4:	lsl	w9, w3, w9
   1dff8:	orr	w8, w9, w8
   1dffc:	add	x23, x23, #0x1
   1e000:	b	1dfc4 <printf_parse@@Base+0x4f0>
   1e004:	sub	w10, w9, #0x25
   1e008:	cmp	w10, #0x53
   1e00c:	b.hi	1e4b4 <printf_parse@@Base+0x9e0>  // b.pmore
   1e010:	adrp	x13, 31000 <vasnprintf@@Base+0x324c>
   1e014:	add	x13, x13, #0x276
   1e018:	adr	x11, 1e030 <printf_parse@@Base+0x55c>
   1e01c:	ldrh	w12, [x13, x10, lsl #1]
   1e020:	add	x11, x11, x12, lsl #2
   1e024:	mov	w19, #0xe                   	// #14
   1e028:	mov	w21, #0x63                  	// #99
   1e02c:	br	x11
   1e030:	tst	w8, #0x4
   1e034:	ccmp	w8, #0x10, #0x0, eq  // eq = none
   1e038:	mov	w8, #0xb                   	// #11
   1e03c:	cinc	w19, w8, ge  // ge = tcont
   1e040:	mov	w21, w9
   1e044:	cmn	x28, #0x1
   1e048:	str	x28, [x24]
   1e04c:	b.eq	1e060 <printf_parse@@Base+0x58c>  // b.none
   1e050:	cmp	x28, x4
   1e054:	b.cs	1e080 <printf_parse@@Base+0x5ac>  // b.hs, b.nlast
   1e058:	ldr	x24, [x2, #8]
   1e05c:	b	1e17c <printf_parse@@Base+0x6a8>
   1e060:	ldur	x9, [x29, #-8]
   1e064:	adds	x8, x9, #0x1
   1e068:	str	x9, [x24]
   1e06c:	b.cs	1e4b4 <printf_parse@@Base+0x9e0>  // b.hs, b.nlast
   1e070:	ldur	x28, [x29, #-8]
   1e074:	stur	x8, [x29, #-8]
   1e078:	cmp	x28, x4
   1e07c:	b.cc	1e058 <printf_parse@@Base+0x584>  // b.lo, b.ul, b.last
   1e080:	lsl	x8, x4, #1
   1e084:	cmp	x4, #0x0
   1e088:	csinv	x8, x8, xzr, ge  // ge = tcont
   1e08c:	cmp	x8, x28
   1e090:	csinc	x9, x8, x28, hi  // hi = pmore
   1e094:	lsr	x8, x9, #59
   1e098:	cbnz	x8, 1e4ec <printf_parse@@Base+0xa18>
   1e09c:	ldr	x0, [x2, #8]
   1e0a0:	ldur	x8, [x29, #-16]
   1e0a4:	mov	x25, x7
   1e0a8:	mov	x27, x6
   1e0ac:	mov	x26, x5
   1e0b0:	cmp	x0, x8
   1e0b4:	lsl	x1, x9, #5
   1e0b8:	b.eq	1e108 <printf_parse@@Base+0x634>  // b.none
   1e0bc:	mov	x22, x9
   1e0c0:	bl	a720 <realloc@plt>
   1e0c4:	b	1e114 <printf_parse@@Base+0x640>
   1e0c8:	ldr	x19, [x26]
   1e0cc:	cmn	x19, #0x1
   1e0d0:	b.eq	1e2c4 <printf_parse@@Base+0x7f0>  // b.none
   1e0d4:	mov	x27, x9
   1e0d8:	cmp	x19, x4
   1e0dc:	b.cs	1e2e8 <printf_parse@@Base+0x814>  // b.hs, b.nlast
   1e0e0:	ldr	x23, [x2, #8]
   1e0e4:	b	1e418 <printf_parse@@Base+0x944>
   1e0e8:	cmp	w8, #0xf
   1e0ec:	mov	w19, #0xa                   	// #10
   1e0f0:	b.gt	1e040 <printf_parse@@Base+0x56c>
   1e0f4:	tbnz	w8, #2, 1e040 <printf_parse@@Base+0x56c>
   1e0f8:	cmp	w8, #0x7
   1e0fc:	b.le	1e394 <printf_parse@@Base+0x8c0>
   1e100:	mov	w19, #0x8                   	// #8
   1e104:	b	1e040 <printf_parse@@Base+0x56c>
   1e108:	mov	x0, x1
   1e10c:	mov	x22, x9
   1e110:	bl	a540 <malloc@plt>
   1e114:	ldp	x2, x1, [x29, #-32]
   1e118:	mov	x4, x22
   1e11c:	mov	x24, x0
   1e120:	cbz	x0, 1e4ec <printf_parse@@Base+0xa18>
   1e124:	ldr	x8, [x2, #8]
   1e128:	ldur	x9, [x29, #-16]
   1e12c:	cmp	x8, x9
   1e130:	b.ne	1e154 <printf_parse@@Base+0x680>  // b.any
   1e134:	ldr	x8, [x2]
   1e138:	ldur	x1, [x29, #-16]
   1e13c:	mov	x0, x24
   1e140:	mov	x22, x4
   1e144:	lsl	x2, x8, #5
   1e148:	bl	a210 <memcpy@plt>
   1e14c:	ldp	x2, x1, [x29, #-32]
   1e150:	mov	x4, x22
   1e154:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1e158:	movk	x0, #0x999a
   1e15c:	mov	x7, x25
   1e160:	adrp	x25, 31000 <vasnprintf@@Base+0x324c>
   1e164:	movk	x0, #0x1999, lsl #48
   1e168:	mov	w3, #0x1                   	// #1
   1e16c:	mov	x5, x26
   1e170:	mov	x6, x27
   1e174:	add	x25, x25, #0x246
   1e178:	str	x24, [x2, #8]
   1e17c:	ldr	x8, [x2]
   1e180:	cmp	x8, x28
   1e184:	b.hi	1e1a0 <printf_parse@@Base+0x6cc>  // b.pmore
   1e188:	add	x9, x24, x8, lsl #5
   1e18c:	add	x8, x8, #0x1
   1e190:	cmp	x8, x28
   1e194:	str	wzr, [x9], #32
   1e198:	b.ls	1e18c <printf_parse@@Base+0x6b8>  // b.plast
   1e19c:	str	x8, [x2]
   1e1a0:	add	x8, x24, x28, lsl #5
   1e1a4:	ldr	w9, [x8]
   1e1a8:	cbz	w9, 1e1bc <printf_parse@@Base+0x6e8>
   1e1ac:	cmp	w9, w19
   1e1b0:	mov	w9, w21
   1e1b4:	b.eq	1e1c4 <printf_parse@@Base+0x6f0>  // b.none
   1e1b8:	b	1e4b4 <printf_parse@@Base+0x9e0>
   1e1bc:	str	w19, [x8]
   1e1c0:	mov	w9, w21
   1e1c4:	mov	w8, #0x58                  	// #88
   1e1c8:	madd	x8, x6, x8, x7
   1e1cc:	strb	w9, [x8, #72]
   1e1d0:	str	x23, [x8, #8]
   1e1d4:	ldr	x8, [x1]
   1e1d8:	add	x8, x8, #0x1
   1e1dc:	cmp	x8, x5
   1e1e0:	str	x8, [x1]
   1e1e4:	b.cc	1db58 <printf_parse@@Base+0x84>  // b.lo, b.ul, b.last
   1e1e8:	mov	x9, #0xe8ba                	// #59578
   1e1ec:	movk	x9, #0x8ba2, lsl #16
   1e1f0:	lsl	x19, x5, #1
   1e1f4:	cmp	x5, #0x0
   1e1f8:	movk	x9, #0xba2e, lsl #32
   1e1fc:	csinv	x8, x19, xzr, ge  // ge = tcont
   1e200:	movk	x9, #0x2e8, lsl #48
   1e204:	cmp	x8, x9
   1e208:	b.hi	1e4ec <printf_parse@@Base+0xa18>  // b.pmore
   1e20c:	ldr	x0, [x1, #8]
   1e210:	ldr	x9, [sp, #32]
   1e214:	cmp	x0, x9
   1e218:	mov	w9, #0x58                  	// #88
   1e21c:	mul	x1, x8, x9
   1e220:	b.eq	1e230 <printf_parse@@Base+0x75c>  // b.none
   1e224:	mov	x21, x4
   1e228:	bl	a720 <realloc@plt>
   1e22c:	b	1e23c <printf_parse@@Base+0x768>
   1e230:	mov	x0, x1
   1e234:	mov	x21, x4
   1e238:	bl	a540 <malloc@plt>
   1e23c:	ldp	x2, x1, [x29, #-32]
   1e240:	mov	x4, x21
   1e244:	mov	x24, x0
   1e248:	cbz	x0, 1e4ec <printf_parse@@Base+0xa18>
   1e24c:	ldr	x8, [x1, #8]
   1e250:	ldr	x9, [sp, #32]
   1e254:	cmp	x8, x9
   1e258:	b.ne	1e280 <printf_parse@@Base+0x7ac>  // b.any
   1e25c:	ldr	x8, [x1]
   1e260:	ldr	x1, [sp, #32]
   1e264:	mov	w9, #0x58                  	// #88
   1e268:	mov	x0, x24
   1e26c:	mul	x2, x8, x9
   1e270:	mov	x21, x4
   1e274:	bl	a210 <memcpy@plt>
   1e278:	ldp	x2, x1, [x29, #-32]
   1e27c:	mov	x4, x21
   1e280:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1e284:	movk	x0, #0x999a
   1e288:	adrp	x25, 31000 <vasnprintf@@Base+0x324c>
   1e28c:	mov	x5, x19
   1e290:	movk	x0, #0x1999, lsl #48
   1e294:	mov	w3, #0x1                   	// #1
   1e298:	add	x25, x25, #0x246
   1e29c:	str	x24, [x1, #8]
   1e2a0:	b	1db58 <printf_parse@@Base+0x84>
   1e2a4:	cmp	w8, #0xf
   1e2a8:	mov	w19, #0x9                   	// #9
   1e2ac:	b.gt	1e040 <printf_parse@@Base+0x56c>
   1e2b0:	tbnz	w8, #2, 1e040 <printf_parse@@Base+0x56c>
   1e2b4:	cmp	w8, #0x7
   1e2b8:	b.le	1e464 <printf_parse@@Base+0x990>
   1e2bc:	mov	w19, #0x7                   	// #7
   1e2c0:	b	1e040 <printf_parse@@Base+0x56c>
   1e2c4:	ldur	x10, [x29, #-8]
   1e2c8:	adds	x8, x10, #0x1
   1e2cc:	str	x10, [x26]
   1e2d0:	b.cs	1e4b4 <printf_parse@@Base+0x9e0>  // b.hs, b.nlast
   1e2d4:	ldur	x19, [x29, #-8]
   1e2d8:	mov	x27, x9
   1e2dc:	stur	x8, [x29, #-8]
   1e2e0:	cmp	x19, x4
   1e2e4:	b.cc	1e0e0 <printf_parse@@Base+0x60c>  // b.lo, b.ul, b.last
   1e2e8:	lsl	x8, x4, #1
   1e2ec:	cmp	x4, #0x0
   1e2f0:	csinv	x8, x8, xzr, ge  // ge = tcont
   1e2f4:	cmp	x8, x19
   1e2f8:	csinc	x9, x8, x19, hi  // hi = pmore
   1e2fc:	lsr	x8, x9, #59
   1e300:	cbnz	x8, 1e4ec <printf_parse@@Base+0xa18>
   1e304:	ldr	x0, [x2, #8]
   1e308:	ldur	x8, [x29, #-16]
   1e30c:	mov	x21, x7
   1e310:	mov	x26, x6
   1e314:	mov	x22, x5
   1e318:	cmp	x0, x8
   1e31c:	lsl	x1, x9, #5
   1e320:	str	x9, [sp, #16]
   1e324:	b.eq	1e3ac <printf_parse@@Base+0x8d8>  // b.none
   1e328:	bl	a720 <realloc@plt>
   1e32c:	b	1e3b4 <printf_parse@@Base+0x8e0>
   1e330:	mov	w19, #0x10                  	// #16
   1e334:	mov	w21, #0x73                  	// #115
   1e338:	b	1e044 <printf_parse@@Base+0x570>
   1e33c:	cmp	w8, #0x7
   1e340:	mov	w8, #0xd                   	// #13
   1e344:	cinc	w19, w8, gt
   1e348:	mov	w21, #0x63                  	// #99
   1e34c:	b	1e044 <printf_parse@@Base+0x570>
   1e350:	mov	w19, #0x16                  	// #22
   1e354:	cmp	w8, #0xf
   1e358:	mov	w21, #0x6e                  	// #110
   1e35c:	b.gt	1e044 <printf_parse@@Base+0x570>
   1e360:	tbnz	w8, #2, 1e044 <printf_parse@@Base+0x570>
   1e364:	cmp	w8, #0x7
   1e368:	b.le	1e47c <printf_parse@@Base+0x9a8>
   1e36c:	mov	w19, #0x15                  	// #21
   1e370:	b	1e49c <printf_parse@@Base+0x9c8>
   1e374:	mov	w19, #0x11                  	// #17
   1e378:	mov	w21, #0x70                  	// #112
   1e37c:	b	1e044 <printf_parse@@Base+0x570>
   1e380:	cmp	w8, #0x7
   1e384:	mov	w8, #0xf                   	// #15
   1e388:	cinc	w19, w8, gt
   1e38c:	mov	w21, #0x73                  	// #115
   1e390:	b	1e044 <printf_parse@@Base+0x570>
   1e394:	tbnz	w8, #1, 1e45c <printf_parse@@Base+0x988>
   1e398:	tst	w8, #0x1
   1e39c:	mov	w8, #0x4                   	// #4
   1e3a0:	mov	w10, #0x6                   	// #6
   1e3a4:	csel	w19, w10, w8, eq  // eq = none
   1e3a8:	b	1e040 <printf_parse@@Base+0x56c>
   1e3ac:	mov	x0, x1
   1e3b0:	bl	a540 <malloc@plt>
   1e3b4:	ldp	x2, x1, [x29, #-32]
   1e3b8:	ldr	x4, [sp, #16]
   1e3bc:	mov	x23, x0
   1e3c0:	cbz	x0, 1e4ec <printf_parse@@Base+0xa18>
   1e3c4:	ldr	x8, [x2, #8]
   1e3c8:	ldur	x9, [x29, #-16]
   1e3cc:	cmp	x8, x9
   1e3d0:	b.ne	1e3f0 <printf_parse@@Base+0x91c>  // b.any
   1e3d4:	ldr	x8, [x2]
   1e3d8:	ldur	x1, [x29, #-16]
   1e3dc:	mov	x0, x23
   1e3e0:	lsl	x2, x8, #5
   1e3e4:	bl	a210 <memcpy@plt>
   1e3e8:	ldr	x4, [sp, #16]
   1e3ec:	ldp	x2, x1, [x29, #-32]
   1e3f0:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1e3f4:	movk	x0, #0x999a
   1e3f8:	adrp	x25, 31000 <vasnprintf@@Base+0x324c>
   1e3fc:	movk	x0, #0x1999, lsl #48
   1e400:	mov	w3, #0x1                   	// #1
   1e404:	mov	x5, x22
   1e408:	mov	x6, x26
   1e40c:	mov	x7, x21
   1e410:	add	x25, x25, #0x246
   1e414:	str	x23, [x2, #8]
   1e418:	ldr	x8, [x2]
   1e41c:	cmp	x8, x19
   1e420:	b.hi	1e43c <printf_parse@@Base+0x968>  // b.pmore
   1e424:	add	x9, x23, x8, lsl #5
   1e428:	add	x8, x8, #0x1
   1e42c:	cmp	x8, x19
   1e430:	str	wzr, [x9], #32
   1e434:	b.ls	1e428 <printf_parse@@Base+0x954>  // b.plast
   1e438:	str	x8, [x2]
   1e43c:	add	x8, x23, x19, lsl #5
   1e440:	ldr	w9, [x8]
   1e444:	cmp	w9, #0x5
   1e448:	b.eq	1dfb0 <printf_parse@@Base+0x4dc>  // b.none
   1e44c:	cbnz	w9, 1e4b4 <printf_parse@@Base+0x9e0>
   1e450:	mov	w9, #0x5                   	// #5
   1e454:	str	w9, [x8]
   1e458:	b	1dfb0 <printf_parse@@Base+0x4dc>
   1e45c:	mov	w19, #0x2                   	// #2
   1e460:	b	1e040 <printf_parse@@Base+0x56c>
   1e464:	tbnz	w8, #1, 1e490 <printf_parse@@Base+0x9bc>
   1e468:	tst	w8, #0x1
   1e46c:	mov	w8, #0x5                   	// #5
   1e470:	mov	w10, #0x3                   	// #3
   1e474:	csel	w19, w8, w10, eq  // eq = none
   1e478:	b	1e040 <printf_parse@@Base+0x56c>
   1e47c:	tbnz	w8, #1, 1e498 <printf_parse@@Base+0x9c4>
   1e480:	tst	w8, #0x1
   1e484:	mov	w8, #0x13                  	// #19
   1e488:	cinc	w19, w8, eq  // eq = none
   1e48c:	b	1e49c <printf_parse@@Base+0x9c8>
   1e490:	mov	w19, #0x1                   	// #1
   1e494:	b	1e040 <printf_parse@@Base+0x56c>
   1e498:	mov	w19, #0x12                  	// #18
   1e49c:	mov	w21, #0x6e                  	// #110
   1e4a0:	b	1e044 <printf_parse@@Base+0x570>
   1e4a4:	mov	x8, xzr
   1e4a8:	mov	x10, xzr
   1e4ac:	mov	x11, xzr
   1e4b0:	b	1e540 <printf_parse@@Base+0xa6c>
   1e4b4:	ldr	x0, [x2, #8]
   1e4b8:	ldur	x8, [x29, #-16]
   1e4bc:	cmp	x0, x8
   1e4c0:	b.eq	1e4cc <printf_parse@@Base+0x9f8>  // b.none
   1e4c4:	bl	a960 <free@plt>
   1e4c8:	ldur	x1, [x29, #-24]
   1e4cc:	ldr	x0, [x1, #8]
   1e4d0:	ldr	x8, [sp, #32]
   1e4d4:	cmp	x0, x8
   1e4d8:	b.eq	1e4e0 <printf_parse@@Base+0xa0c>  // b.none
   1e4dc:	bl	a960 <free@plt>
   1e4e0:	bl	ad80 <__errno_location@plt>
   1e4e4:	mov	w8, #0x16                  	// #22
   1e4e8:	b	1e520 <printf_parse@@Base+0xa4c>
   1e4ec:	ldr	x0, [x2, #8]
   1e4f0:	ldur	x8, [x29, #-16]
   1e4f4:	cmp	x0, x8
   1e4f8:	b.eq	1e504 <printf_parse@@Base+0xa30>  // b.none
   1e4fc:	bl	a960 <free@plt>
   1e500:	ldur	x1, [x29, #-24]
   1e504:	ldr	x0, [x1, #8]
   1e508:	ldr	x8, [sp, #32]
   1e50c:	cmp	x0, x8
   1e510:	b.eq	1e518 <printf_parse@@Base+0xa44>  // b.none
   1e514:	bl	a960 <free@plt>
   1e518:	bl	ad80 <__errno_location@plt>
   1e51c:	mov	w8, #0xc                   	// #12
   1e520:	str	w8, [x0]
   1e524:	mov	w0, #0xffffffff            	// #-1
   1e528:	b	1e558 <printf_parse@@Base+0xa84>
   1e52c:	ldr	x8, [x1, #8]
   1e530:	ldr	x10, [sp, #24]
   1e534:	ldr	x11, [sp, #40]
   1e538:	str	x8, [sp, #32]
   1e53c:	ldr	x8, [x1]
   1e540:	mov	w9, #0x58                  	// #88
   1e544:	mul	x8, x8, x9
   1e548:	ldr	x9, [sp, #32]
   1e54c:	mov	w0, wzr
   1e550:	str	x23, [x9, x8]
   1e554:	stp	x11, x10, [x1, #16]
   1e558:	ldp	x20, x19, [sp, #160]
   1e55c:	ldp	x22, x21, [sp, #144]
   1e560:	ldp	x24, x23, [sp, #128]
   1e564:	ldp	x26, x25, [sp, #112]
   1e568:	ldp	x28, x27, [sp, #96]
   1e56c:	ldp	x29, x30, [sp, #80]
   1e570:	add	sp, sp, #0xb0
   1e574:	ret

000000000001e578 <rpl_re_compile_pattern@@Base>:
   1e578:	stp	x29, x30, [sp, #-16]!
   1e57c:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   1e580:	ldr	x9, [x9, #3920]
   1e584:	mov	x8, x1
   1e588:	mov	x1, x0
   1e58c:	mov	x0, x2
   1e590:	ldr	x3, [x9]
   1e594:	ldrb	w9, [x2, #56]
   1e598:	mov	x29, sp
   1e59c:	ubfx	x10, x3, #21, #11
   1e5a0:	and	w10, w10, #0x10
   1e5a4:	and	w9, w9, #0xffffffef
   1e5a8:	orr	w9, w9, w10
   1e5ac:	orr	w9, w9, #0x80
   1e5b0:	strb	w9, [x2, #56]
   1e5b4:	mov	x2, x8
   1e5b8:	bl	1e5f4 <rpl_re_compile_pattern@@Base+0x7c>
   1e5bc:	cbz	w0, 1e5e8 <rpl_re_compile_pattern@@Base+0x70>
   1e5c0:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
   1e5c4:	add	x8, x8, #0x620
   1e5c8:	ldr	x8, [x8, w0, sxtw #3]
   1e5cc:	adrp	x9, 31000 <vasnprintf@@Base+0x324c>
   1e5d0:	add	x9, x9, #0x49f
   1e5d4:	mov	w2, #0x5                   	// #5
   1e5d8:	add	x1, x9, x8
   1e5dc:	mov	x0, xzr
   1e5e0:	ldp	x29, x30, [sp], #16
   1e5e4:	b	ac80 <dcgettext@plt>
   1e5e8:	mov	x0, xzr
   1e5ec:	ldp	x29, x30, [sp], #16
   1e5f0:	ret
   1e5f4:	sub	sp, sp, #0x130
   1e5f8:	stp	x29, x30, [sp, #208]
   1e5fc:	add	x29, sp, #0xd0
   1e600:	stp	x28, x27, [sp, #224]
   1e604:	stp	x26, x25, [sp, #240]
   1e608:	stp	x24, x23, [sp, #256]
   1e60c:	stp	x22, x21, [sp, #272]
   1e610:	stp	x20, x19, [sp, #288]
   1e614:	stur	wzr, [x29, #-44]
   1e618:	ldrb	w8, [x0, #56]
   1e61c:	ldp	x20, x9, [x0]
   1e620:	mov	w10, #0x90                  	// #144
   1e624:	mov	x21, x3
   1e628:	mov	x22, x2
   1e62c:	mov	x23, x1
   1e630:	mov	x19, x0
   1e634:	and	w8, w8, w10
   1e638:	cmp	x9, #0x117
   1e63c:	stp	xzr, x3, [x0, #16]
   1e640:	str	xzr, [x0, #48]
   1e644:	strb	w8, [x0, #56]
   1e648:	b.ls	1ed84 <rpl_re_compile_pattern@@Base+0x80c>  // b.plast
   1e64c:	mov	w8, #0x118                 	// #280
   1e650:	str	x8, [x19, #16]
   1e654:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   1e658:	movk	x8, #0x5554
   1e65c:	movk	x8, #0x555, lsl #48
   1e660:	movi	v0.2d, #0x0
   1e664:	cmp	x22, x8
   1e668:	mov	w8, #0xf                   	// #15
   1e66c:	str	xzr, [x20, #272]
   1e670:	stp	q0, q0, [x20, #240]
   1e674:	stp	q0, q0, [x20, #208]
   1e678:	stp	q0, q0, [x20, #176]
   1e67c:	stp	q0, q0, [x20, #144]
   1e680:	stp	q0, q0, [x20, #112]
   1e684:	stp	q0, q0, [x20, #80]
   1e688:	stp	q0, q0, [x20, #48]
   1e68c:	stp	q0, q0, [x20, #16]
   1e690:	str	q0, [x20]
   1e694:	str	w8, [x20, #128]
   1e698:	b.hi	1e8bc <rpl_re_compile_pattern@@Base+0x344>  // b.pmore
   1e69c:	add	x24, x22, #0x1
   1e6a0:	lsl	x0, x24, #4
   1e6a4:	str	x24, [x20, #8]
   1e6a8:	bl	a540 <malloc@plt>
   1e6ac:	mov	w8, #0x1                   	// #1
   1e6b0:	str	x0, [x20]
   1e6b4:	mov	x25, x8
   1e6b8:	cmp	x8, x22
   1e6bc:	lsl	x8, x8, #1
   1e6c0:	b.ls	1e6b4 <rpl_re_compile_pattern@@Base+0x13c>  // b.plast
   1e6c4:	mov	w0, #0x18                  	// #24
   1e6c8:	mov	x1, x25
   1e6cc:	bl	a6b0 <calloc@plt>
   1e6d0:	sub	x8, x25, #0x1
   1e6d4:	str	x0, [x20, #64]
   1e6d8:	str	x8, [x20, #136]
   1e6dc:	bl	a990 <__ctype_get_mb_cur_max@plt>
   1e6e0:	str	w0, [x20, #180]
   1e6e4:	mov	w0, #0xe                   	// #14
   1e6e8:	bl	a510 <nl_langinfo@plt>
   1e6ec:	ldrb	w8, [x0]
   1e6f0:	orr	w8, w8, #0x20
   1e6f4:	cmp	w8, #0x75
   1e6f8:	b.ne	1e744 <rpl_re_compile_pattern@@Base+0x1cc>  // b.any
   1e6fc:	ldrb	w8, [x0, #1]
   1e700:	orr	w8, w8, #0x20
   1e704:	cmp	w8, #0x74
   1e708:	b.ne	1e744 <rpl_re_compile_pattern@@Base+0x1cc>  // b.any
   1e70c:	ldrb	w8, [x0, #2]
   1e710:	orr	w8, w8, #0x20
   1e714:	cmp	w8, #0x66
   1e718:	b.ne	1e744 <rpl_re_compile_pattern@@Base+0x1cc>  // b.any
   1e71c:	ldrb	w8, [x0, #3]!
   1e720:	adrp	x1, 2e000 <vasnprintf@@Base+0x24c>
   1e724:	add	x1, x1, #0xd71
   1e728:	cmp	w8, #0x2d
   1e72c:	cinc	x0, x0, eq  // eq = none
   1e730:	bl	a8e0 <strcmp@plt>
   1e734:	cbnz	w0, 1e744 <rpl_re_compile_pattern@@Base+0x1cc>
   1e738:	ldrb	w8, [x20, #176]
   1e73c:	orr	w8, w8, #0x4
   1e740:	strb	w8, [x20, #176]
   1e744:	ldrb	w8, [x20, #176]
   1e748:	ldr	w9, [x20, #180]
   1e74c:	and	w10, w8, #0xfffffff7
   1e750:	cmp	w9, #0x2
   1e754:	strb	w10, [x20, #176]
   1e758:	b.lt	1e7d4 <rpl_re_compile_pattern@@Base+0x25c>  // b.tstop
   1e75c:	tbnz	w8, #2, 1e7c8 <rpl_re_compile_pattern@@Base+0x250>
   1e760:	mov	w0, #0x20                  	// #32
   1e764:	mov	w1, #0x1                   	// #1
   1e768:	bl	a6b0 <calloc@plt>
   1e76c:	str	x0, [x20, #120]
   1e770:	cbz	x0, 1e8bc <rpl_re_compile_pattern@@Base+0x344>
   1e774:	mov	x25, xzr
   1e778:	mov	w26, #0x1                   	// #1
   1e77c:	b	1e78c <rpl_re_compile_pattern@@Base+0x214>
   1e780:	add	x25, x25, #0x1
   1e784:	cmp	x25, #0x40
   1e788:	b.eq	1e8d4 <rpl_re_compile_pattern@@Base+0x35c>  // b.none
   1e78c:	mov	w0, w25
   1e790:	bl	a810 <btowc@plt>
   1e794:	cmn	w0, #0x1
   1e798:	b.eq	1e7b0 <rpl_re_compile_pattern@@Base+0x238>  // b.none
   1e79c:	ldr	x8, [x20, #120]
   1e7a0:	lsl	x10, x26, x25
   1e7a4:	ldr	x9, [x8]
   1e7a8:	orr	x9, x9, x10
   1e7ac:	str	x9, [x8]
   1e7b0:	cmp	w25, w0
   1e7b4:	b.eq	1e780 <rpl_re_compile_pattern@@Base+0x208>  // b.none
   1e7b8:	ldrb	w8, [x20, #176]
   1e7bc:	orr	w8, w8, #0x8
   1e7c0:	strb	w8, [x20, #176]
   1e7c4:	b	1e780 <rpl_re_compile_pattern@@Base+0x208>
   1e7c8:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
   1e7cc:	add	x8, x8, #0x6a8
   1e7d0:	str	x8, [x20, #120]
   1e7d4:	ldr	x8, [x20]
   1e7d8:	cbz	x8, 1e8bc <rpl_re_compile_pattern@@Base+0x344>
   1e7dc:	ldr	x8, [x20, #64]
   1e7e0:	cbz	x8, 1e8bc <rpl_re_compile_pattern@@Base+0x344>
   1e7e4:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1e7e8:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   1e7ec:	ldr	x8, [x8, #3944]
   1e7f0:	ldr	x9, [x9, #4040]
   1e7f4:	stur	wzr, [x29, #-44]
   1e7f8:	orr	x8, x9, x8
   1e7fc:	cbz	x8, 1e810 <rpl_re_compile_pattern@@Base+0x298>
   1e800:	add	x0, x20, #0xe8
   1e804:	mov	x1, xzr
   1e808:	bl	a780 <pthread_mutex_init@plt>
   1e80c:	cbnz	w0, 1e8bc <rpl_re_compile_pattern@@Base+0x344>
   1e810:	ldr	x28, [x19, #40]
   1e814:	and	x27, x21, #0x400000
   1e818:	movi	v0.2d, #0x0
   1e81c:	ubfx	x8, x21, #22, #1
   1e820:	stp	q0, q0, [sp, #128]
   1e824:	strb	w8, [sp, #144]
   1e828:	orr	x8, x27, x28
   1e82c:	cmp	x8, #0x0
   1e830:	cset	w25, ne  // ne = any
   1e834:	str	x23, [sp, #8]
   1e838:	stp	q0, q0, [sp, #80]
   1e83c:	stur	q0, [sp, #112]
   1e840:	stp	q0, q0, [sp, #48]
   1e844:	stp	q0, q0, [sp, #16]
   1e848:	stp	x22, x22, [sp, #88]
   1e84c:	str	x28, [sp, #128]
   1e850:	strb	w25, [sp, #147]
   1e854:	ldr	w8, [x20, #180]
   1e858:	cmp	x22, #0x1
   1e85c:	str	w8, [sp, #152]
   1e860:	ldrb	w9, [x20, #176]
   1e864:	stp	x22, x22, [sp, #104]
   1e868:	ubfx	w10, w9, #2, #1
   1e86c:	ubfx	w9, w9, #3, #1
   1e870:	strb	w10, [sp, #145]
   1e874:	strb	w9, [sp, #146]
   1e878:	b.lt	1e9ec <rpl_re_compile_pattern@@Base+0x474>  // b.tstop
   1e87c:	cmp	w8, #0x2
   1e880:	b.lt	1e8a0 <rpl_re_compile_pattern@@Base+0x328>  // b.tstop
   1e884:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
   1e888:	cmp	x22, x8
   1e88c:	b.hi	1f848 <rpl_re_compile_pattern@@Base+0x12d0>  // b.pmore
   1e890:	lsl	x0, x24, #2
   1e894:	bl	a540 <malloc@plt>
   1e898:	cbz	x0, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1e89c:	str	x0, [sp, #24]
   1e8a0:	cbz	w25, 1e9f8 <rpl_re_compile_pattern@@Base+0x480>
   1e8a4:	mov	x0, x24
   1e8a8:	bl	a540 <malloc@plt>
   1e8ac:	cbz	x0, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1e8b0:	mov	w25, #0x1                   	// #1
   1e8b4:	str	x0, [sp, #16]
   1e8b8:	b	1e9fc <rpl_re_compile_pattern@@Base+0x484>
   1e8bc:	mov	w21, #0xc                   	// #12
   1e8c0:	mov	x0, x20
   1e8c4:	stur	w21, [x29, #-44]
   1e8c8:	bl	20068 <rpl_regfree@@Base+0x68>
   1e8cc:	stp	xzr, xzr, [x19]
   1e8d0:	b	1f824 <rpl_re_compile_pattern@@Base+0x12ac>
   1e8d4:	mov	x26, xzr
   1e8d8:	mov	w27, #0x1                   	// #1
   1e8dc:	b	1e8ec <rpl_re_compile_pattern@@Base+0x374>
   1e8e0:	add	x26, x26, #0x1
   1e8e4:	cmp	x26, #0x40
   1e8e8:	b.eq	1e92c <rpl_re_compile_pattern@@Base+0x3b4>  // b.none
   1e8ec:	add	x25, x26, #0x40
   1e8f0:	mov	w0, w25
   1e8f4:	bl	a810 <btowc@plt>
   1e8f8:	cmn	w0, #0x1
   1e8fc:	b.eq	1e914 <rpl_re_compile_pattern@@Base+0x39c>  // b.none
   1e900:	ldr	x8, [x20, #120]
   1e904:	lsl	x10, x27, x26
   1e908:	ldr	x9, [x8, #8]
   1e90c:	orr	x9, x9, x10
   1e910:	str	x9, [x8, #8]
   1e914:	cmp	w25, w0
   1e918:	b.eq	1e8e0 <rpl_re_compile_pattern@@Base+0x368>  // b.none
   1e91c:	ldrb	w8, [x20, #176]
   1e920:	orr	w8, w8, #0x8
   1e924:	strb	w8, [x20, #176]
   1e928:	b	1e8e0 <rpl_re_compile_pattern@@Base+0x368>
   1e92c:	mov	x26, xzr
   1e930:	mov	w27, #0x1                   	// #1
   1e934:	b	1e944 <rpl_re_compile_pattern@@Base+0x3cc>
   1e938:	add	x26, x26, #0x1
   1e93c:	cmp	x26, #0x40
   1e940:	b.eq	1e98c <rpl_re_compile_pattern@@Base+0x414>  // b.none
   1e944:	add	x25, x26, #0x80
   1e948:	mov	w0, w25
   1e94c:	bl	a810 <btowc@plt>
   1e950:	cmn	w0, #0x1
   1e954:	b.eq	1e96c <rpl_re_compile_pattern@@Base+0x3f4>  // b.none
   1e958:	ldr	x8, [x20, #120]
   1e95c:	lsl	x10, x27, x26
   1e960:	ldr	x9, [x8, #16]
   1e964:	orr	x9, x9, x10
   1e968:	str	x9, [x8, #16]
   1e96c:	cmp	w25, #0x7f
   1e970:	b.hi	1e938 <rpl_re_compile_pattern@@Base+0x3c0>  // b.pmore
   1e974:	cmp	w25, w0
   1e978:	b.eq	1e938 <rpl_re_compile_pattern@@Base+0x3c0>  // b.none
   1e97c:	ldrb	w8, [x20, #176]
   1e980:	orr	w8, w8, #0x8
   1e984:	strb	w8, [x20, #176]
   1e988:	b	1e938 <rpl_re_compile_pattern@@Base+0x3c0>
   1e98c:	mov	x26, xzr
   1e990:	mov	w27, #0x1                   	// #1
   1e994:	b	1e9a4 <rpl_re_compile_pattern@@Base+0x42c>
   1e998:	add	x26, x26, #0x1
   1e99c:	cmp	x26, #0x40
   1e9a0:	b.eq	1e7d4 <rpl_re_compile_pattern@@Base+0x25c>  // b.none
   1e9a4:	add	x25, x26, #0xc0
   1e9a8:	mov	w0, w25
   1e9ac:	bl	a810 <btowc@plt>
   1e9b0:	cmn	w0, #0x1
   1e9b4:	b.eq	1e9cc <rpl_re_compile_pattern@@Base+0x454>  // b.none
   1e9b8:	ldr	x8, [x20, #120]
   1e9bc:	lsl	x10, x27, x26
   1e9c0:	ldr	x9, [x8, #24]
   1e9c4:	orr	x9, x9, x10
   1e9c8:	str	x9, [x8, #24]
   1e9cc:	cmp	w25, #0x7f
   1e9d0:	b.hi	1e998 <rpl_re_compile_pattern@@Base+0x420>  // b.pmore
   1e9d4:	cmp	w25, w0
   1e9d8:	b.eq	1e998 <rpl_re_compile_pattern@@Base+0x420>  // b.none
   1e9dc:	ldrb	w8, [x20, #176]
   1e9e0:	orr	w8, w8, #0x8
   1e9e4:	strb	w8, [x20, #176]
   1e9e8:	b	1e998 <rpl_re_compile_pattern@@Base+0x420>
   1e9ec:	mov	x0, xzr
   1e9f0:	mov	x24, xzr
   1e9f4:	b	1ea04 <rpl_re_compile_pattern@@Base+0x48c>
   1e9f8:	mov	x0, xzr
   1e9fc:	str	x24, [sp, #72]
   1ea00:	ldr	w8, [x20, #180]
   1ea04:	cmp	w25, #0x0
   1ea08:	csel	x9, x23, x0, eq  // eq = none
   1ea0c:	cmp	w8, #0x2
   1ea10:	str	x9, [sp, #16]
   1ea14:	cbz	x27, 1eb14 <rpl_re_compile_pattern@@Base+0x59c>
   1ea18:	b.ge	1ea7c <rpl_re_compile_pattern@@Base+0x504>  // b.tcont
   1ea1c:	cmp	x24, x22
   1ea20:	csel	x22, x22, x24, gt
   1ea24:	cmp	x22, #0x1
   1ea28:	b.lt	1eb54 <rpl_re_compile_pattern@@Base+0x5dc>  // b.tstop
   1ea2c:	bl	a730 <__ctype_toupper_loc@plt>
   1ea30:	mov	x9, xzr
   1ea34:	mov	x8, xzr
   1ea38:	add	x9, x23, x9
   1ea3c:	ldrb	w9, [x9, x8]
   1ea40:	cbnz	x28, 1ea70 <rpl_re_compile_pattern@@Base+0x4f8>
   1ea44:	ldr	x10, [x0]
   1ea48:	ldr	x11, [sp, #16]
   1ea4c:	ldr	w9, [x10, w9, uxtw #2]
   1ea50:	strb	w9, [x11, x8]
   1ea54:	add	x8, x8, #0x1
   1ea58:	cmp	x8, x22
   1ea5c:	b.ge	1eb58 <rpl_re_compile_pattern@@Base+0x5e0>  // b.tcont
   1ea60:	ldr	x23, [sp, #8]
   1ea64:	ldr	x9, [sp, #48]
   1ea68:	ldr	x28, [sp, #128]
   1ea6c:	b	1ea38 <rpl_re_compile_pattern@@Base+0x4c0>
   1ea70:	ldrb	w9, [x28, x9]
   1ea74:	b	1ea44 <rpl_re_compile_pattern@@Base+0x4cc>
   1ea78:	str	x23, [sp, #72]
   1ea7c:	add	x0, sp, #0x8
   1ea80:	bl	231e4 <rpl_re_set_registers@@Base+0x94>
   1ea84:	cbnz	w0, 1f84c <rpl_re_compile_pattern@@Base+0x12d4>
   1ea88:	ldr	x8, [sp, #64]
   1ea8c:	cmp	x8, x22
   1ea90:	b.ge	1ebb8 <rpl_re_compile_pattern@@Base+0x640>  // b.tcont
   1ea94:	ldr	x8, [sp, #56]
   1ea98:	ldrsw	x9, [x20, #180]
   1ea9c:	ldr	x24, [sp, #72]
   1eaa0:	add	x8, x8, x9
   1eaa4:	cmp	x24, x8
   1eaa8:	b.gt	1ebb8 <rpl_re_compile_pattern@@Base+0x640>
   1eaac:	ldr	w8, [sp, #152]
   1eab0:	lsl	x23, x24, #1
   1eab4:	cmp	w8, #0x2
   1eab8:	b.lt	1eaf4 <rpl_re_compile_pattern@@Base+0x57c>  // b.tstop
   1eabc:	lsr	x8, x23, #61
   1eac0:	cbnz	x8, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1eac4:	ldr	x0, [sp, #24]
   1eac8:	lsl	x1, x24, #3
   1eacc:	bl	a720 <realloc@plt>
   1ead0:	cbz	x0, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1ead4:	mov	x8, x0
   1ead8:	ldr	x0, [sp, #32]
   1eadc:	str	x8, [sp, #24]
   1eae0:	cbz	x0, 1eaf4 <rpl_re_compile_pattern@@Base+0x57c>
   1eae4:	lsl	x1, x24, #4
   1eae8:	bl	a720 <realloc@plt>
   1eaec:	cbz	x0, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1eaf0:	str	x0, [sp, #32]
   1eaf4:	ldrb	w8, [sp, #147]
   1eaf8:	cbz	w8, 1ea78 <rpl_re_compile_pattern@@Base+0x500>
   1eafc:	ldr	x0, [sp, #16]
   1eb00:	mov	x1, x23
   1eb04:	bl	a720 <realloc@plt>
   1eb08:	cbz	x0, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1eb0c:	str	x0, [sp, #16]
   1eb10:	b	1ea78 <rpl_re_compile_pattern@@Base+0x500>
   1eb14:	b.lt	1eb24 <rpl_re_compile_pattern@@Base+0x5ac>  // b.tstop
   1eb18:	add	x0, sp, #0x8
   1eb1c:	bl	23888 <rpl_re_set_registers@@Base+0x738>
   1eb20:	b	1ebb8 <rpl_re_compile_pattern@@Base+0x640>
   1eb24:	cbz	x28, 1eb60 <rpl_re_compile_pattern@@Base+0x5e8>
   1eb28:	cmp	x24, x22
   1eb2c:	csel	x8, x22, x24, gt
   1eb30:	cmp	x8, #0x1
   1eb34:	b.lt	1eb68 <rpl_re_compile_pattern@@Base+0x5f0>  // b.tstop
   1eb38:	ldrb	w10, [x23]
   1eb3c:	cmp	x8, #0x1
   1eb40:	ldrb	w10, [x28, x10]
   1eb44:	strb	w10, [x9]
   1eb48:	b.ne	1eb70 <rpl_re_compile_pattern@@Base+0x5f8>  // b.any
   1eb4c:	mov	w9, #0x1                   	// #1
   1eb50:	b	1ebb4 <rpl_re_compile_pattern@@Base+0x63c>
   1eb54:	mov	x8, xzr
   1eb58:	stp	x8, x8, [sp, #56]
   1eb5c:	b	1ebb8 <rpl_re_compile_pattern@@Base+0x640>
   1eb60:	stp	x24, x24, [sp, #56]
   1eb64:	b	1ebb8 <rpl_re_compile_pattern@@Base+0x640>
   1eb68:	mov	x9, xzr
   1eb6c:	b	1ebb4 <rpl_re_compile_pattern@@Base+0x63c>
   1eb70:	ldrb	w10, [x23, #1]
   1eb74:	cmp	x8, #0x3
   1eb78:	ldrb	w10, [x28, x10]
   1eb7c:	strb	w10, [x9, #1]
   1eb80:	mov	w9, #0x2                   	// #2
   1eb84:	b.lt	1ebb4 <rpl_re_compile_pattern@@Base+0x63c>  // b.tstop
   1eb88:	ldr	x10, [sp, #8]
   1eb8c:	ldr	x11, [sp, #48]
   1eb90:	ldr	x12, [sp, #128]
   1eb94:	add	x10, x10, x11
   1eb98:	ldrb	w10, [x10, x9]
   1eb9c:	ldr	x11, [sp, #16]
   1eba0:	ldrb	w10, [x12, x10]
   1eba4:	strb	w10, [x11, x9]
   1eba8:	add	x9, x9, #0x1
   1ebac:	cmp	x9, x8
   1ebb0:	b.lt	1eb88 <rpl_re_compile_pattern@@Base+0x610>  // b.tstop
   1ebb4:	stp	x9, x9, [sp, #56]
   1ebb8:	stur	wzr, [x29, #-44]
   1ebbc:	ldr	x22, [x19]
   1ebc0:	orr	x2, x21, #0x800000
   1ebc4:	sub	x0, x29, #0x28
   1ebc8:	add	x1, sp, #0x8
   1ebcc:	str	xzr, [x19, #48]
   1ebd0:	str	x21, [x22, #216]
   1ebd4:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   1ebd8:	ldr	x8, [sp, #80]
   1ebdc:	sub	x2, x29, #0x28
   1ebe0:	sub	x5, x29, #0x2c
   1ebe4:	mov	x1, x19
   1ebe8:	add	x8, x8, w0, sxtw
   1ebec:	add	x0, sp, #0x8
   1ebf0:	mov	x3, x21
   1ebf4:	mov	x4, xzr
   1ebf8:	str	x8, [sp, #80]
   1ebfc:	bl	23a90 <rpl_re_set_registers@@Base+0x940>
   1ec00:	mov	x21, x0
   1ec04:	cbnz	x0, 1ec10 <rpl_re_compile_pattern@@Base+0x698>
   1ec08:	ldur	w8, [x29, #-44]
   1ec0c:	cbnz	w8, 1edf4 <rpl_re_compile_pattern@@Base+0x87c>
   1ec10:	ldr	w8, [x22, #128]
   1ec14:	cmp	w8, #0xf
   1ec18:	b.eq	1eda4 <rpl_re_compile_pattern@@Base+0x82c>  // b.none
   1ec1c:	ldr	x0, [x22, #112]
   1ec20:	add	w9, w8, #0x1
   1ec24:	sxtw	x8, w8
   1ec28:	add	x23, x0, x8, lsl #6
   1ec2c:	mov	w10, #0x2                   	// #2
   1ec30:	mov	x11, #0xffffffffffffffff    	// #-1
   1ec34:	str	w9, [x22, #128]
   1ec38:	str	xzr, [x23, #8]!
   1ec3c:	stp	xzr, xzr, [x23, #16]
   1ec40:	str	xzr, [x23, #8]
   1ec44:	str	w10, [x23, #48]
   1ec48:	str	xzr, [x23, #32]
   1ec4c:	str	x11, [x23, #56]
   1ec50:	mov	x8, x23
   1ec54:	cbz	x21, 1eca0 <rpl_re_compile_pattern@@Base+0x728>
   1ec58:	ldr	w8, [x22, #128]
   1ec5c:	cmp	w8, #0xf
   1ec60:	b.eq	1edc8 <rpl_re_compile_pattern@@Base+0x850>  // b.none
   1ec64:	ldr	x0, [x22, #112]
   1ec68:	add	w9, w8, #0x1
   1ec6c:	sxtw	x8, w8
   1ec70:	add	x8, x0, x8, lsl #6
   1ec74:	mov	w10, #0x10                  	// #16
   1ec78:	mov	x11, #0xffffffffffffffff    	// #-1
   1ec7c:	str	w9, [x22, #128]
   1ec80:	str	xzr, [x8, #8]!
   1ec84:	stp	x21, x23, [x8, #8]
   1ec88:	str	w10, [x8, #48]
   1ec8c:	stp	xzr, xzr, [x8, #24]
   1ec90:	str	x11, [x8, #56]
   1ec94:	str	x8, [x21]
   1ec98:	cbz	x23, 1edec <rpl_re_compile_pattern@@Base+0x874>
   1ec9c:	str	x8, [x23]
   1eca0:	cbz	x23, 1edec <rpl_re_compile_pattern@@Base+0x874>
   1eca4:	cbz	x8, 1edec <rpl_re_compile_pattern@@Base+0x874>
   1eca8:	str	x8, [x20, #104]
   1ecac:	ldr	x21, [x19]
   1ecb0:	ldr	x8, [x21, #8]
   1ecb4:	lsl	x0, x8, #3
   1ecb8:	bl	a540 <malloc@plt>
   1ecbc:	ldr	x8, [x21, #8]
   1ecc0:	str	x0, [x21, #24]
   1ecc4:	lsl	x0, x8, #3
   1ecc8:	bl	a540 <malloc@plt>
   1eccc:	ldr	x8, [x21, #8]
   1ecd0:	str	x0, [x21, #32]
   1ecd4:	add	x8, x8, x8, lsl #1
   1ecd8:	lsl	x0, x8, #3
   1ecdc:	bl	a540 <malloc@plt>
   1ece0:	ldr	x8, [x21, #8]
   1ece4:	str	x0, [x21, #40]
   1ece8:	add	x8, x8, x8, lsl #1
   1ecec:	lsl	x0, x8, #3
   1ecf0:	bl	a540 <malloc@plt>
   1ecf4:	ldr	x9, [x21, #24]
   1ecf8:	str	x0, [x21, #48]
   1ecfc:	cbz	x9, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1ed00:	ldr	x9, [x21, #32]
   1ed04:	cbz	x9, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1ed08:	mov	x8, x0
   1ed0c:	mov	w0, #0xc                   	// #12
   1ed10:	cbz	x8, 1f84c <rpl_re_compile_pattern@@Base+0x12d4>
   1ed14:	ldr	x8, [x21, #40]
   1ed18:	cbz	x8, 1f84c <rpl_re_compile_pattern@@Base+0x12d4>
   1ed1c:	ldr	x22, [x19, #48]
   1ed20:	lsl	x0, x22, #3
   1ed24:	bl	a540 <malloc@plt>
   1ed28:	str	x0, [x21, #224]
   1ed2c:	cbz	x0, 1f060 <rpl_re_compile_pattern@@Base+0xae8>
   1ed30:	cbz	x22, 1eea8 <rpl_re_compile_pattern@@Base+0x930>
   1ed34:	cmp	x22, #0x4
   1ed38:	b.cs	1ed44 <rpl_re_compile_pattern@@Base+0x7cc>  // b.hs, b.nlast
   1ed3c:	mov	x8, xzr
   1ed40:	b	1ee98 <rpl_re_compile_pattern@@Base+0x920>
   1ed44:	adrp	x10, 31000 <vasnprintf@@Base+0x324c>
   1ed48:	ldr	q0, [x10, #800]
   1ed4c:	mov	w10, #0x2                   	// #2
   1ed50:	and	x8, x22, #0xfffffffffffffffc
   1ed54:	dup	v1.2d, x10
   1ed58:	mov	w10, #0x4                   	// #4
   1ed5c:	add	x9, x0, #0x10
   1ed60:	dup	v2.2d, x10
   1ed64:	mov	x10, x8
   1ed68:	add	v3.2d, v0.2d, v1.2d
   1ed6c:	stp	q0, q3, [x9, #-16]
   1ed70:	add	v0.2d, v0.2d, v2.2d
   1ed74:	subs	x10, x10, #0x4
   1ed78:	add	x9, x9, #0x20
   1ed7c:	b.ne	1ed68 <rpl_re_compile_pattern@@Base+0x7f0>  // b.any
   1ed80:	b	1eea0 <rpl_re_compile_pattern@@Base+0x928>
   1ed84:	mov	w1, #0x118                 	// #280
   1ed88:	mov	x0, x20
   1ed8c:	bl	a720 <realloc@plt>
   1ed90:	cbz	x0, 1ee80 <rpl_re_compile_pattern@@Base+0x908>
   1ed94:	mov	x20, x0
   1ed98:	mov	w8, #0x118                 	// #280
   1ed9c:	stp	x0, x8, [x19]
   1eda0:	b	1e64c <rpl_re_compile_pattern@@Base+0xd4>
   1eda4:	mov	w0, #0x3c8                 	// #968
   1eda8:	bl	a540 <malloc@plt>
   1edac:	cbz	x0, 1ee88 <rpl_re_compile_pattern@@Base+0x910>
   1edb0:	ldr	x9, [x22, #112]
   1edb4:	mov	w8, wzr
   1edb8:	str	x9, [x0]
   1edbc:	str	x0, [x22, #112]
   1edc0:	str	wzr, [x22, #128]
   1edc4:	b	1ec20 <rpl_re_compile_pattern@@Base+0x6a8>
   1edc8:	mov	w0, #0x3c8                 	// #968
   1edcc:	bl	a540 <malloc@plt>
   1edd0:	cbz	x0, 1edec <rpl_re_compile_pattern@@Base+0x874>
   1edd4:	ldr	x9, [x22, #112]
   1edd8:	mov	w8, wzr
   1eddc:	str	x9, [x0]
   1ede0:	str	x0, [x22, #112]
   1ede4:	str	wzr, [x22, #128]
   1ede8:	b	1ec68 <rpl_re_compile_pattern@@Base+0x6f0>
   1edec:	mov	w8, #0xc                   	// #12
   1edf0:	stur	w8, [x29, #-44]
   1edf4:	str	xzr, [x20, #104]
   1edf8:	ldr	x21, [x19]
   1edfc:	ldr	x0, [x21, #112]
   1ee00:	cbz	x0, 1ee14 <rpl_re_compile_pattern@@Base+0x89c>
   1ee04:	ldr	x22, [x0]
   1ee08:	bl	a960 <free@plt>
   1ee0c:	mov	x0, x22
   1ee10:	cbnz	x22, 1ee04 <rpl_re_compile_pattern@@Base+0x88c>
   1ee14:	ldr	x0, [x21, #32]
   1ee18:	mov	w8, #0xf                   	// #15
   1ee1c:	str	w8, [x21, #128]
   1ee20:	stp	xzr, xzr, [x21, #104]
   1ee24:	bl	a960 <free@plt>
   1ee28:	str	xzr, [x21, #32]
   1ee2c:	ldr	x0, [sp, #24]
   1ee30:	bl	a960 <free@plt>
   1ee34:	ldr	x0, [sp, #32]
   1ee38:	bl	a960 <free@plt>
   1ee3c:	ldrb	w8, [sp, #147]
   1ee40:	cbz	w8, 1ee4c <rpl_re_compile_pattern@@Base+0x8d4>
   1ee44:	ldr	x0, [sp, #16]
   1ee48:	bl	a960 <free@plt>
   1ee4c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   1ee50:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   1ee54:	ldr	x8, [x8, #3944]
   1ee58:	ldr	x9, [x9, #4040]
   1ee5c:	orr	x8, x9, x8
   1ee60:	cbz	x8, 1ee6c <rpl_re_compile_pattern@@Base+0x8f4>
   1ee64:	add	x0, x20, #0xe8
   1ee68:	bl	ab10 <pthread_mutex_destroy@plt>
   1ee6c:	mov	x0, x20
   1ee70:	bl	20068 <rpl_regfree@@Base+0x68>
   1ee74:	stp	xzr, xzr, [x19]
   1ee78:	ldur	w21, [x29, #-44]
   1ee7c:	b	1f824 <rpl_re_compile_pattern@@Base+0x12ac>
   1ee80:	mov	w21, #0xc                   	// #12
   1ee84:	b	1f824 <rpl_re_compile_pattern@@Base+0x12ac>
   1ee88:	mov	x23, xzr
   1ee8c:	mov	x8, x23
   1ee90:	cbnz	x21, 1ec58 <rpl_re_compile_pattern@@Base+0x6e0>
   1ee94:	b	1eca0 <rpl_re_compile_pattern@@Base+0x728>
   1ee98:	str	x8, [x0, x8, lsl #3]
   1ee9c:	add	x8, x8, #0x1
   1eea0:	cmp	x22, x8
   1eea4:	b.ne	1ee98 <rpl_re_compile_pattern@@Base+0x920>  // b.any
   1eea8:	ldr	x9, [x21, #104]
   1eeac:	ldrb	w8, [x9, #48]
   1eeb0:	cmp	w8, #0x11
   1eeb4:	b.eq	1eeec <rpl_re_compile_pattern@@Base+0x974>  // b.none
   1eeb8:	cmp	w8, #0x4
   1eebc:	b.ne	1ef3c <rpl_re_compile_pattern@@Base+0x9c4>  // b.any
   1eec0:	ldr	x8, [x9, #40]
   1eec4:	mov	w11, #0x1                   	// #1
   1eec8:	sbfiz	x8, x8, #3, #32
   1eecc:	ldr	x8, [x0, x8]
   1eed0:	str	x8, [x9, #40]
   1eed4:	ldr	x10, [x21, #160]
   1eed8:	lsl	w8, w11, w8
   1eedc:	sxtw	x8, w8
   1eee0:	orr	x8, x10, x8
   1eee4:	str	x8, [x21, #160]
   1eee8:	b	1ef3c <rpl_re_compile_pattern@@Base+0x9c4>
   1eeec:	ldr	x8, [x9, #8]
   1eef0:	cbz	x8, 1ef3c <rpl_re_compile_pattern@@Base+0x9c4>
   1eef4:	ldrb	w10, [x8, #48]
   1eef8:	cmp	w10, #0x11
   1eefc:	b.ne	1ef3c <rpl_re_compile_pattern@@Base+0x9c4>  // b.any
   1ef00:	ldr	x10, [x8, #8]
   1ef04:	ldr	x8, [x8, #40]
   1ef08:	str	x10, [x9, #8]
   1ef0c:	cbz	x10, 1ef14 <rpl_re_compile_pattern@@Base+0x99c>
   1ef10:	str	x9, [x10]
   1ef14:	ldr	x10, [x9, #40]
   1ef18:	cmp	x8, #0x3f
   1ef1c:	ldr	x10, [x0, x10, lsl #3]
   1ef20:	str	x10, [x0, x8, lsl #3]
   1ef24:	b.gt	1ef3c <rpl_re_compile_pattern@@Base+0x9c4>
   1ef28:	ldr	x10, [x21, #160]
   1ef2c:	mov	w11, #0x1                   	// #1
   1ef30:	lsl	x8, x11, x8
   1ef34:	bic	x8, x10, x8
   1ef38:	b	1eee4 <rpl_re_compile_pattern@@Base+0x96c>
   1ef3c:	mov	w8, #0x1                   	// #1
   1ef40:	ldr	x10, [x9, #8]
   1ef44:	cbnz	x10, 1ef70 <rpl_re_compile_pattern@@Base+0x9f8>
   1ef48:	mov	x11, xzr
   1ef4c:	b	1ef58 <rpl_re_compile_pattern@@Base+0x9e0>
   1ef50:	ldr	x9, [x11]
   1ef54:	cbz	x9, 1f01c <rpl_re_compile_pattern@@Base+0xaa4>
   1ef58:	ldr	x10, [x9, #16]
   1ef5c:	mov	x12, x11
   1ef60:	mov	x11, x9
   1ef64:	cmp	x10, x12
   1ef68:	b.eq	1ef50 <rpl_re_compile_pattern@@Base+0x9d8>  // b.none
   1ef6c:	cbz	x10, 1ef50 <rpl_re_compile_pattern@@Base+0x9d8>
   1ef70:	ldrb	w9, [x10, #48]
   1ef74:	cmp	w9, #0x11
   1ef78:	b.eq	1efc0 <rpl_re_compile_pattern@@Base+0xa48>  // b.none
   1ef7c:	cmp	w9, #0x4
   1ef80:	mov	x9, x10
   1ef84:	b.ne	1ef40 <rpl_re_compile_pattern@@Base+0x9c8>  // b.any
   1ef88:	ldr	x11, [x21, #224]
   1ef8c:	mov	x9, x10
   1ef90:	cbz	x11, 1ef40 <rpl_re_compile_pattern@@Base+0x9c8>
   1ef94:	ldr	x9, [x10, #40]
   1ef98:	sbfiz	x9, x9, #3, #32
   1ef9c:	ldr	x9, [x11, x9]
   1efa0:	str	x9, [x10, #40]
   1efa4:	ldr	x11, [x21, #160]
   1efa8:	lsl	w9, w8, w9
   1efac:	sxtw	x9, w9
   1efb0:	orr	x9, x11, x9
   1efb4:	str	x9, [x21, #160]
   1efb8:	mov	x9, x10
   1efbc:	b	1ef40 <rpl_re_compile_pattern@@Base+0x9c8>
   1efc0:	ldr	x11, [x10, #8]
   1efc4:	mov	x9, x10
   1efc8:	cbz	x11, 1ef40 <rpl_re_compile_pattern@@Base+0x9c8>
   1efcc:	ldrb	w9, [x11, #48]
   1efd0:	cmp	w9, #0x11
   1efd4:	mov	x9, x10
   1efd8:	b.ne	1ef40 <rpl_re_compile_pattern@@Base+0x9c8>  // b.any
   1efdc:	ldr	x9, [x11, #8]
   1efe0:	ldr	x11, [x11, #40]
   1efe4:	str	x9, [x10, #8]
   1efe8:	cbz	x9, 1eff0 <rpl_re_compile_pattern@@Base+0xa78>
   1efec:	str	x10, [x9]
   1eff0:	ldr	x9, [x21, #224]
   1eff4:	ldr	x12, [x10, #40]
   1eff8:	cmp	x11, #0x3f
   1effc:	ldr	x12, [x9, x12, lsl #3]
   1f000:	str	x12, [x9, x11, lsl #3]
   1f004:	mov	x9, x10
   1f008:	b.gt	1ef40 <rpl_re_compile_pattern@@Base+0x9c8>
   1f00c:	ldr	x9, [x21, #160]
   1f010:	lsl	x11, x8, x11
   1f014:	bic	x9, x9, x11
   1f018:	b	1efb4 <rpl_re_compile_pattern@@Base+0xa3c>
   1f01c:	ldr	x8, [x19, #48]
   1f020:	cbz	x8, 1f048 <rpl_re_compile_pattern@@Base+0xad0>
   1f024:	ldr	x0, [x21, #224]
   1f028:	mov	x9, xzr
   1f02c:	ldr	x10, [x0, x9, lsl #3]
   1f030:	cmp	x9, x10
   1f034:	b.ne	1f050 <rpl_re_compile_pattern@@Base+0xad8>  // b.any
   1f038:	add	x9, x9, #0x1
   1f03c:	cmp	x8, x9
   1f040:	b.ne	1f02c <rpl_re_compile_pattern@@Base+0xab4>  // b.any
   1f044:	b	1f058 <rpl_re_compile_pattern@@Base+0xae0>
   1f048:	ldr	x0, [x21, #224]
   1f04c:	b	1f058 <rpl_re_compile_pattern@@Base+0xae0>
   1f050:	cmp	x8, x9
   1f054:	b.ne	1f060 <rpl_re_compile_pattern@@Base+0xae8>  // b.any
   1f058:	bl	a960 <free@plt>
   1f05c:	str	xzr, [x21, #224]
   1f060:	ldr	x8, [x21, #104]
   1f064:	mov	x22, x8
   1f068:	ldr	x8, [x8, #8]
   1f06c:	cbnz	x8, 1f064 <rpl_re_compile_pattern@@Base+0xaec>
   1f070:	ldr	x8, [x22, #16]
   1f074:	cbnz	x8, 1f064 <rpl_re_compile_pattern@@Base+0xaec>
   1f078:	mov	x2, xzr
   1f07c:	b	1f088 <rpl_re_compile_pattern@@Base+0xb10>
   1f080:	ldr	x2, [x9, #8]
   1f084:	mov	x22, x9
   1f088:	stur	wzr, [x29, #-40]
   1f08c:	cbz	x2, 1f0b4 <rpl_re_compile_pattern@@Base+0xb3c>
   1f090:	ldrb	w8, [x2, #48]
   1f094:	cmp	w8, #0x11
   1f098:	b.ne	1f0b4 <rpl_re_compile_pattern@@Base+0xb3c>  // b.any
   1f09c:	sub	x0, x29, #0x28
   1f0a0:	mov	x1, x19
   1f0a4:	bl	27754 <rpl_re_set_registers@@Base+0x4604>
   1f0a8:	str	x0, [x22, #8]
   1f0ac:	cbz	x0, 1f0b4 <rpl_re_compile_pattern@@Base+0xb3c>
   1f0b0:	str	x22, [x0]
   1f0b4:	ldr	x2, [x22, #16]
   1f0b8:	cbz	x2, 1f0e0 <rpl_re_compile_pattern@@Base+0xb68>
   1f0bc:	ldrb	w8, [x2, #48]
   1f0c0:	cmp	w8, #0x11
   1f0c4:	b.ne	1f0e0 <rpl_re_compile_pattern@@Base+0xb68>  // b.any
   1f0c8:	sub	x0, x29, #0x28
   1f0cc:	mov	x1, x19
   1f0d0:	bl	27754 <rpl_re_set_registers@@Base+0x4604>
   1f0d4:	str	x0, [x22, #16]
   1f0d8:	cbz	x0, 1f0e0 <rpl_re_compile_pattern@@Base+0xb68>
   1f0dc:	str	x22, [x0]
   1f0e0:	ldur	w0, [x29, #-40]
   1f0e4:	cbnz	w0, 1f84c <rpl_re_compile_pattern@@Base+0x12d4>
   1f0e8:	ldr	x9, [x22]
   1f0ec:	cbz	x9, 1f104 <rpl_re_compile_pattern@@Base+0xb8c>
   1f0f0:	ldr	x8, [x9, #16]
   1f0f4:	cmp	x8, x22
   1f0f8:	b.eq	1f080 <rpl_re_compile_pattern@@Base+0xb08>  // b.none
   1f0fc:	cbz	x8, 1f080 <rpl_re_compile_pattern@@Base+0xb08>
   1f100:	b	1f064 <rpl_re_compile_pattern@@Base+0xaec>
   1f104:	ldr	x8, [x21, #104]
   1f108:	mov	x22, x8
   1f10c:	ldr	x8, [x8, #8]
   1f110:	cbnz	x8, 1f108 <rpl_re_compile_pattern@@Base+0xb90>
   1f114:	ldr	x8, [x22, #16]
   1f118:	cbnz	x8, 1f108 <rpl_re_compile_pattern@@Base+0xb90>
   1f11c:	ldrb	w8, [x22, #48]
   1f120:	cmp	w8, #0x10
   1f124:	b.ne	1f140 <rpl_re_compile_pattern@@Base+0xbc8>  // b.any
   1f128:	ldr	x8, [x22, #8]
   1f12c:	ldr	x9, [x8, #24]
   1f130:	str	x9, [x22, #24]
   1f134:	ldr	x8, [x8, #56]
   1f138:	str	x8, [x22, #56]
   1f13c:	b	1f180 <rpl_re_compile_pattern@@Base+0xc08>
   1f140:	ldp	x1, x2, [x22, #40]
   1f144:	mov	x0, x21
   1f148:	str	x22, [x22, #24]
   1f14c:	bl	279e4 <rpl_re_set_registers@@Base+0x4894>
   1f150:	cmn	x0, #0x1
   1f154:	str	x0, [x22, #56]
   1f158:	b.eq	1f848 <rpl_re_compile_pattern@@Base+0x12d0>  // b.none
   1f15c:	ldrb	w8, [x22, #48]
   1f160:	cmp	w8, #0xc
   1f164:	b.ne	1f180 <rpl_re_compile_pattern@@Base+0xc08>  // b.any
   1f168:	ldr	x8, [x21]
   1f16c:	ldr	w9, [x22, #40]
   1f170:	add	x8, x8, x0, lsl #4
   1f174:	ldr	w10, [x8, #8]
   1f178:	bfi	w10, w9, #8, #10
   1f17c:	str	w10, [x8, #8]
   1f180:	ldr	x9, [x22]
   1f184:	cbz	x9, 1f1a4 <rpl_re_compile_pattern@@Base+0xc2c>
   1f188:	ldr	x8, [x9, #16]
   1f18c:	cmp	x8, x22
   1f190:	mov	x22, x9
   1f194:	b.eq	1f11c <rpl_re_compile_pattern@@Base+0xba4>  // b.none
   1f198:	mov	x22, x9
   1f19c:	cbz	x8, 1f11c <rpl_re_compile_pattern@@Base+0xba4>
   1f1a0:	b	1f108 <rpl_re_compile_pattern@@Base+0xb90>
   1f1a4:	ldr	x22, [x21, #104]
   1f1a8:	ldrb	w8, [x22, #48]
   1f1ac:	cmp	w8, #0x10
   1f1b0:	b.eq	1f1c8 <rpl_re_compile_pattern@@Base+0xc50>  // b.none
   1f1b4:	cmp	w8, #0xb
   1f1b8:	b.ne	1f1d8 <rpl_re_compile_pattern@@Base+0xc60>  // b.any
   1f1bc:	ldr	x8, [x22, #8]
   1f1c0:	str	x22, [x8, #32]
   1f1c4:	b	1f1f8 <rpl_re_compile_pattern@@Base+0xc80>
   1f1c8:	ldp	x8, x9, [x22, #8]
   1f1cc:	ldr	x10, [x9, #24]
   1f1d0:	str	x10, [x8, #32]
   1f1d4:	b	1f1f0 <rpl_re_compile_pattern@@Base+0xc78>
   1f1d8:	ldr	x8, [x22, #8]
   1f1dc:	cbz	x8, 1f1e8 <rpl_re_compile_pattern@@Base+0xc70>
   1f1e0:	ldr	x9, [x22, #32]
   1f1e4:	str	x9, [x8, #32]
   1f1e8:	ldr	x9, [x22, #16]
   1f1ec:	cbz	x9, 1f1f8 <rpl_re_compile_pattern@@Base+0xc80>
   1f1f0:	ldr	x10, [x22, #32]
   1f1f4:	str	x10, [x9, #32]
   1f1f8:	mov	x10, x22
   1f1fc:	b	1f218 <rpl_re_compile_pattern@@Base+0xca0>
   1f200:	ldp	x8, x10, [x9, #8]
   1f204:	ldr	x11, [x10, #24]
   1f208:	str	x11, [x8, #32]
   1f20c:	ldr	x11, [x9, #32]
   1f210:	str	x11, [x10, #32]
   1f214:	mov	x10, x9
   1f218:	mov	x9, x8
   1f21c:	cbnz	x8, 1f244 <rpl_re_compile_pattern@@Base+0xccc>
   1f220:	b	1f22c <rpl_re_compile_pattern@@Base+0xcb4>
   1f224:	ldr	x10, [x8]
   1f228:	cbz	x10, 1f294 <rpl_re_compile_pattern@@Base+0xd1c>
   1f22c:	ldr	x9, [x10, #16]
   1f230:	mov	x11, x8
   1f234:	mov	x8, x10
   1f238:	cmp	x9, x11
   1f23c:	b.eq	1f224 <rpl_re_compile_pattern@@Base+0xcac>  // b.none
   1f240:	cbz	x9, 1f224 <rpl_re_compile_pattern@@Base+0xcac>
   1f244:	ldrb	w8, [x9, #48]
   1f248:	cmp	w8, #0x10
   1f24c:	b.eq	1f200 <rpl_re_compile_pattern@@Base+0xc88>  // b.none
   1f250:	cmp	w8, #0xb
   1f254:	b.ne	1f268 <rpl_re_compile_pattern@@Base+0xcf0>  // b.any
   1f258:	ldr	x8, [x9, #8]
   1f25c:	mov	x10, x9
   1f260:	str	x9, [x8, #32]
   1f264:	b	1f218 <rpl_re_compile_pattern@@Base+0xca0>
   1f268:	ldr	x8, [x9, #8]
   1f26c:	cbz	x8, 1f278 <rpl_re_compile_pattern@@Base+0xd00>
   1f270:	ldr	x10, [x9, #32]
   1f274:	str	x10, [x8, #32]
   1f278:	ldr	x11, [x9, #16]
   1f27c:	mov	x10, x9
   1f280:	cbz	x11, 1f218 <rpl_re_compile_pattern@@Base+0xca0>
   1f284:	ldr	x10, [x9, #32]
   1f288:	str	x10, [x11, #32]
   1f28c:	mov	x10, x9
   1f290:	b	1f218 <rpl_re_compile_pattern@@Base+0xca0>
   1f294:	mov	x0, x21
   1f298:	mov	x1, x22
   1f29c:	bl	27514 <rpl_re_set_registers@@Base+0x43c4>
   1f2a0:	cbz	w0, 1f2bc <rpl_re_compile_pattern@@Base+0xd44>
   1f2a4:	b	1f84c <rpl_re_compile_pattern@@Base+0x12d4>
   1f2a8:	mov	x0, x21
   1f2ac:	mov	x1, x23
   1f2b0:	bl	27514 <rpl_re_set_registers@@Base+0x43c4>
   1f2b4:	mov	x22, x23
   1f2b8:	cbnz	w0, 1f84c <rpl_re_compile_pattern@@Base+0x12d4>
   1f2bc:	ldr	x23, [x22, #8]
   1f2c0:	cbnz	x23, 1f2a8 <rpl_re_compile_pattern@@Base+0xd30>
   1f2c4:	mov	x8, xzr
   1f2c8:	b	1f2d4 <rpl_re_compile_pattern@@Base+0xd5c>
   1f2cc:	ldr	x22, [x8]
   1f2d0:	cbz	x22, 1f2f0 <rpl_re_compile_pattern@@Base+0xd78>
   1f2d4:	ldr	x23, [x22, #16]
   1f2d8:	mov	x9, x8
   1f2dc:	mov	x8, x22
   1f2e0:	cmp	x23, x9
   1f2e4:	b.eq	1f2cc <rpl_re_compile_pattern@@Base+0xd54>  // b.none
   1f2e8:	cbz	x23, 1f2cc <rpl_re_compile_pattern@@Base+0xd54>
   1f2ec:	b	1f2a8 <rpl_re_compile_pattern@@Base+0xd30>
   1f2f0:	ldr	x8, [x21, #16]
   1f2f4:	cbz	x8, 1f384 <rpl_re_compile_pattern@@Base+0xe0c>
   1f2f8:	mov	w24, wzr
   1f2fc:	mov	x22, xzr
   1f300:	mov	w23, #0x18                  	// #24
   1f304:	ldr	x8, [x21, #48]
   1f308:	madd	x8, x22, x23, x8
   1f30c:	ldr	x8, [x8, #8]
   1f310:	cbnz	x8, 1f348 <rpl_re_compile_pattern@@Base+0xdd0>
   1f314:	sub	x0, x29, #0x28
   1f318:	mov	w3, #0x1                   	// #1
   1f31c:	mov	x1, x21
   1f320:	mov	x2, x22
   1f324:	bl	27bb0 <rpl_re_set_registers@@Base+0x4a60>
   1f328:	cbnz	w0, 1f84c <rpl_re_compile_pattern@@Base+0x12d4>
   1f32c:	ldr	x8, [x21, #48]
   1f330:	madd	x8, x22, x23, x8
   1f334:	ldr	x8, [x8, #8]
   1f338:	cbnz	x8, 1f348 <rpl_re_compile_pattern@@Base+0xdd0>
   1f33c:	ldur	x0, [x29, #-24]
   1f340:	bl	a960 <free@plt>
   1f344:	mov	w24, #0x1                   	// #1
   1f348:	ldr	x9, [x21, #16]
   1f34c:	add	x8, x22, #0x1
   1f350:	mov	w10, w24
   1f354:	cmp	x8, x9
   1f358:	cset	w11, ne  // ne = any
   1f35c:	csinc	x22, xzr, x22, eq  // eq = none
   1f360:	and	w24, w24, w11
   1f364:	tbnz	w10, #0, 1f304 <rpl_re_compile_pattern@@Base+0xd8c>
   1f368:	cmp	x8, x9
   1f36c:	b.ne	1f304 <rpl_re_compile_pattern@@Base+0xd8c>  // b.any
   1f370:	add	x8, x8, x8, lsl #1
   1f374:	lsl	x0, x8, #3
   1f378:	ldrb	w8, [x19, #56]
   1f37c:	tbz	w8, #4, 1f390 <rpl_re_compile_pattern@@Base+0xe18>
   1f380:	b	1f3a0 <rpl_re_compile_pattern@@Base+0xe28>
   1f384:	mov	x0, xzr
   1f388:	ldrb	w8, [x19, #56]
   1f38c:	tbnz	w8, #4, 1f3a0 <rpl_re_compile_pattern@@Base+0xe28>
   1f390:	ldr	x8, [x19, #48]
   1f394:	cbz	x8, 1f3a0 <rpl_re_compile_pattern@@Base+0xe28>
   1f398:	ldrb	w8, [x21, #176]
   1f39c:	tbnz	w8, #0, 1f3a8 <rpl_re_compile_pattern@@Base+0xe30>
   1f3a0:	ldr	x8, [x21, #152]
   1f3a4:	cbz	x8, 1f4b4 <rpl_re_compile_pattern@@Base+0xf3c>
   1f3a8:	bl	a540 <malloc@plt>
   1f3ac:	str	x0, [x21, #56]
   1f3b0:	cbz	x0, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1f3b4:	ldr	x8, [x21, #16]
   1f3b8:	cbz	x8, 1f4b4 <rpl_re_compile_pattern@@Base+0xf3c>
   1f3bc:	stp	xzr, xzr, [x0]
   1f3c0:	str	xzr, [x0, #16]
   1f3c4:	ldr	x9, [x21, #16]
   1f3c8:	cmp	x9, #0x2
   1f3cc:	b.cc	1f3fc <rpl_re_compile_pattern@@Base+0xe84>  // b.lo, b.ul, b.last
   1f3d0:	mov	w8, #0x1                   	// #1
   1f3d4:	mov	w10, #0x18                  	// #24
   1f3d8:	ldr	x9, [x21, #56]
   1f3dc:	add	x8, x8, #0x1
   1f3e0:	add	x9, x9, x10
   1f3e4:	stp	xzr, xzr, [x9]
   1f3e8:	str	xzr, [x9, #16]
   1f3ec:	ldr	x9, [x21, #16]
   1f3f0:	add	x10, x10, #0x18
   1f3f4:	cmp	x8, x9
   1f3f8:	b.cc	1f3d8 <rpl_re_compile_pattern@@Base+0xe60>  // b.lo, b.ul, b.last
   1f3fc:	cbz	x9, 1f4b4 <rpl_re_compile_pattern@@Base+0xf3c>
   1f400:	ldr	x8, [x21, #48]
   1f404:	mov	x22, xzr
   1f408:	mov	w23, #0x18                  	// #24
   1f40c:	b	1f420 <rpl_re_compile_pattern@@Base+0xea8>
   1f410:	ldr	x9, [x21, #16]
   1f414:	add	x22, x22, #0x1
   1f418:	cmp	x22, x9
   1f41c:	b.cs	1f4b4 <rpl_re_compile_pattern@@Base+0xf3c>  // b.hs, b.nlast
   1f420:	madd	x10, x22, x23, x8
   1f424:	ldr	x11, [x10, #8]
   1f428:	cmp	x11, #0x1
   1f42c:	b.lt	1f414 <rpl_re_compile_pattern@@Base+0xe9c>  // b.tstop
   1f430:	ldr	x24, [x10, #16]
   1f434:	mov	x28, xzr
   1f438:	b	1f464 <rpl_re_compile_pattern@@Base+0xeec>
   1f43c:	madd	x10, x11, x23, x10
   1f440:	ldr	x0, [x10, #16]
   1f444:	add	x10, x9, #0x1
   1f448:	str	x10, [x25]
   1f44c:	str	x22, [x0, x9, lsl #3]
   1f450:	madd	x9, x22, x23, x8
   1f454:	ldr	x9, [x9, #8]
   1f458:	add	x28, x28, #0x1
   1f45c:	cmp	x28, x9
   1f460:	b.ge	1f410 <rpl_re_compile_pattern@@Base+0xe98>  // b.tcont
   1f464:	ldr	x10, [x21, #56]
   1f468:	ldr	x11, [x24, x28, lsl #3]
   1f46c:	madd	x12, x11, x23, x10
   1f470:	mov	x25, x12
   1f474:	ldr	x13, [x12]
   1f478:	ldr	x9, [x25, #8]!
   1f47c:	cmp	x13, x9
   1f480:	b.ne	1f43c <rpl_re_compile_pattern@@Base+0xec4>  // b.any
   1f484:	lsl	x8, x13, #1
   1f488:	add	x8, x8, #0x2
   1f48c:	str	x8, [x12]
   1f490:	madd	x26, x11, x23, x10
   1f494:	ldr	x0, [x26, #16]!
   1f498:	lsl	x1, x8, #3
   1f49c:	bl	a720 <realloc@plt>
   1f4a0:	cbz	x0, 1f848 <rpl_re_compile_pattern@@Base+0x12d0>
   1f4a4:	str	x0, [x26]
   1f4a8:	ldr	x9, [x25]
   1f4ac:	ldr	x8, [x21, #48]
   1f4b0:	b	1f444 <rpl_re_compile_pattern@@Base+0xecc>
   1f4b4:	stur	wzr, [x29, #-44]
   1f4b8:	cbnz	x27, 1f5ac <rpl_re_compile_pattern@@Base+0x1034>
   1f4bc:	ldrb	w9, [x20, #176]
   1f4c0:	tbz	w9, #2, 1f5ac <rpl_re_compile_pattern@@Base+0x1034>
   1f4c4:	ldr	x8, [x19, #40]
   1f4c8:	cbnz	x8, 1f5ac <rpl_re_compile_pattern@@Base+0x1034>
   1f4cc:	ldr	x11, [x20, #16]
   1f4d0:	cbz	x11, 1f578 <rpl_re_compile_pattern@@Base+0x1000>
   1f4d4:	ldr	x10, [x20]
   1f4d8:	adrp	x13, 31000 <vasnprintf@@Base+0x324c>
   1f4dc:	mov	w8, wzr
   1f4e0:	mov	w12, wzr
   1f4e4:	add	x13, x13, #0x350
   1f4e8:	mov	w14, #0x1                   	// #1
   1f4ec:	mov	w15, #0x8b                  	// #139
   1f4f0:	mov	x16, x10
   1f4f4:	b	1f514 <rpl_re_compile_pattern@@Base+0xf9c>
   1f4f8:	ldrsb	w17, [x16]
   1f4fc:	cmp	w17, #0x0
   1f500:	cset	w17, lt  // lt = tstop
   1f504:	orr	w12, w12, w17
   1f508:	subs	x11, x11, #0x1
   1f50c:	add	x16, x16, #0x10
   1f510:	b.eq	1f854 <rpl_re_compile_pattern@@Base+0x12dc>  // b.none
   1f514:	ldrb	w17, [x16, #8]
   1f518:	sub	w17, w17, #0x1
   1f51c:	cmp	w17, #0xb
   1f520:	b.hi	1f8d8 <rpl_re_compile_pattern@@Base+0x1360>  // b.pmore
   1f524:	adr	x18, 1f4f8 <rpl_re_compile_pattern@@Base+0xf80>
   1f528:	ldrb	w0, [x13, x17]
   1f52c:	add	x18, x18, x0, lsl #2
   1f530:	br	x18
   1f534:	ldr	x17, [x16]
   1f538:	ldr	x18, [x17, #16]
   1f53c:	cbnz	x18, 1f5ac <rpl_re_compile_pattern@@Base+0x1034>
   1f540:	ldr	x17, [x17, #24]
   1f544:	cbz	x17, 1f508 <rpl_re_compile_pattern@@Base+0xf90>
   1f548:	b	1f5ac <rpl_re_compile_pattern@@Base+0x1034>
   1f54c:	ldr	w17, [x16]
   1f550:	sub	w17, w17, #0x10
   1f554:	ror	w17, w17, #4
   1f558:	cmp	w17, #0x7
   1f55c:	b.hi	1f5ac <rpl_re_compile_pattern@@Base+0x1034>  // b.pmore
   1f560:	lsl	w17, w14, w17
   1f564:	tst	w17, w15
   1f568:	b.ne	1f508 <rpl_re_compile_pattern@@Base+0xf90>  // b.any
   1f56c:	b	1f5ac <rpl_re_compile_pattern@@Base+0x1034>
   1f570:	mov	w8, #0x1                   	// #1
   1f574:	b	1f508 <rpl_re_compile_pattern@@Base+0xf90>
   1f578:	mov	w8, wzr
   1f57c:	ldr	x10, [x20, #152]
   1f580:	mov	w12, #0x2                   	// #2
   1f584:	and	w9, w9, #0xfffffff9
   1f588:	mov	w11, #0x1                   	// #1
   1f58c:	cmp	x10, #0x0
   1f590:	cset	w10, gt
   1f594:	orr	w8, w8, w10
   1f598:	tst	w8, #0x1
   1f59c:	csel	w8, w12, wzr, ne  // ne = any
   1f5a0:	orr	w8, w8, w9
   1f5a4:	str	w11, [x20, #180]
   1f5a8:	strb	w8, [x20, #176]
   1f5ac:	ldr	x8, [x20, #104]
   1f5b0:	ldr	x24, [x20, #48]
   1f5b4:	ldr	x8, [x8, #24]
   1f5b8:	ldr	x23, [x8, #56]
   1f5bc:	mov	w8, #0x18                  	// #24
   1f5c0:	str	x23, [x20, #144]
   1f5c4:	madd	x8, x23, x8, x24
   1f5c8:	ldr	x22, [x8, #8]
   1f5cc:	stur	x22, [x29, #-32]
   1f5d0:	ldr	x25, [x8, #8]
   1f5d4:	cmp	x25, #0x1
   1f5d8:	b.lt	1f71c <rpl_re_compile_pattern@@Base+0x11a4>  // b.tstop
   1f5dc:	lsl	x0, x22, #3
   1f5e0:	stur	x22, [x29, #-40]
   1f5e4:	bl	a540 <malloc@plt>
   1f5e8:	stur	x0, [x29, #-24]
   1f5ec:	cbz	x0, 1f8c8 <rpl_re_compile_pattern@@Base+0x1350>
   1f5f0:	mov	w8, #0x18                  	// #24
   1f5f4:	madd	x8, x23, x8, x24
   1f5f8:	ldr	x1, [x8, #16]
   1f5fc:	lsl	x2, x25, #3
   1f600:	mov	x21, x0
   1f604:	bl	a210 <memcpy@plt>
   1f608:	cmp	x22, #0x1
   1f60c:	stur	wzr, [x29, #-12]
   1f610:	b.lt	1f728 <rpl_re_compile_pattern@@Base+0x11b0>  // b.tstop
   1f614:	ldr	x8, [x20, #152]
   1f618:	cmp	x8, #0x1
   1f61c:	b.lt	1f728 <rpl_re_compile_pattern@@Base+0x11b0>  // b.tstop
   1f620:	mov	x8, xzr
   1f624:	mov	w23, #0x18                  	// #24
   1f628:	ldr	x9, [x21, x8, lsl #3]
   1f62c:	ldr	x10, [x20]
   1f630:	add	x11, x10, x9, lsl #4
   1f634:	ldrb	w11, [x11, #8]
   1f638:	cmp	w11, #0x4
   1f63c:	b.ne	1f708 <rpl_re_compile_pattern@@Base+0x1190>  // b.any
   1f640:	cmp	x22, #0x1
   1f644:	b.lt	1f694 <rpl_re_compile_pattern@@Base+0x111c>  // b.tstop
   1f648:	mov	x11, xzr
   1f64c:	add	x12, x10, x9, lsl #4
   1f650:	b	1f660 <rpl_re_compile_pattern@@Base+0x10e8>
   1f654:	add	x11, x11, #0x1
   1f658:	cmp	x22, x11
   1f65c:	b.eq	1f708 <rpl_re_compile_pattern@@Base+0x1190>  // b.none
   1f660:	ldr	x13, [x21, x11, lsl #3]
   1f664:	add	x14, x10, x13, lsl #4
   1f668:	ldrb	w14, [x14, #8]
   1f66c:	cmp	w14, #0x9
   1f670:	b.ne	1f654 <rpl_re_compile_pattern@@Base+0x10dc>  // b.any
   1f674:	lsl	x13, x13, #4
   1f678:	ldr	x13, [x10, x13]
   1f67c:	ldr	x14, [x12]
   1f680:	cmp	x13, x14
   1f684:	b.ne	1f654 <rpl_re_compile_pattern@@Base+0x10dc>  // b.any
   1f688:	cmp	x11, x22
   1f68c:	b.ne	1f6a0 <rpl_re_compile_pattern@@Base+0x1128>  // b.any
   1f690:	b	1f708 <rpl_re_compile_pattern@@Base+0x1190>
   1f694:	mov	x11, xzr
   1f698:	cmp	x11, x22
   1f69c:	b.eq	1f708 <rpl_re_compile_pattern@@Base+0x1190>  // b.none
   1f6a0:	ldr	x10, [x20, #40]
   1f6a4:	madd	x9, x9, x23, x10
   1f6a8:	ldr	x9, [x9, #16]
   1f6ac:	subs	x10, x22, #0x1
   1f6b0:	ldr	x9, [x9]
   1f6b4:	b.lt	1f6ec <rpl_re_compile_pattern@@Base+0x1174>  // b.tstop
   1f6b8:	mov	x11, xzr
   1f6bc:	b.eq	1f6e0 <rpl_re_compile_pattern@@Base+0x1168>  // b.none
   1f6c0:	add	x12, x11, x10
   1f6c4:	lsr	x12, x12, #1
   1f6c8:	ldr	x13, [x21, x12, lsl #3]
   1f6cc:	cmp	x13, x9
   1f6d0:	csinc	x11, x11, x12, ge  // ge = tcont
   1f6d4:	csel	x10, x10, x12, lt  // lt = tstop
   1f6d8:	cmp	x11, x10
   1f6dc:	b.cc	1f6c0 <rpl_re_compile_pattern@@Base+0x1148>  // b.lo, b.ul, b.last
   1f6e0:	ldr	x10, [x21, x11, lsl #3]
   1f6e4:	cmp	x10, x9
   1f6e8:	b.eq	1f708 <rpl_re_compile_pattern@@Base+0x1190>  // b.none
   1f6ec:	ldr	x8, [x20, #48]
   1f6f0:	sub	x0, x29, #0x28
   1f6f4:	madd	x1, x9, x23, x8
   1f6f8:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   1f6fc:	cbnz	w0, 1f7c0 <rpl_re_compile_pattern@@Base+0x1248>
   1f700:	ldur	x22, [x29, #-32]
   1f704:	mov	x8, xzr
   1f708:	add	x8, x8, #0x1
   1f70c:	cmp	x8, x22
   1f710:	b.ge	1f728 <rpl_re_compile_pattern@@Base+0x11b0>  // b.tcont
   1f714:	ldur	x21, [x29, #-24]
   1f718:	b	1f628 <rpl_re_compile_pattern@@Base+0x10b0>
   1f71c:	stp	xzr, xzr, [x29, #-40]
   1f720:	stur	xzr, [x29, #-24]
   1f724:	stur	wzr, [x29, #-12]
   1f728:	sub	x0, x29, #0xc
   1f72c:	sub	x2, x29, #0x28
   1f730:	mov	x1, x20
   1f734:	mov	w3, wzr
   1f738:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   1f73c:	str	x0, [x20, #72]
   1f740:	cbz	x0, 1f8c0 <rpl_re_compile_pattern@@Base+0x1348>
   1f744:	ldrsb	w8, [x0, #104]
   1f748:	tbnz	w8, #31, 1f758 <rpl_re_compile_pattern@@Base+0x11e0>
   1f74c:	stp	x0, x0, [x20, #88]
   1f750:	str	x0, [x20, #80]
   1f754:	b	1f7b4 <rpl_re_compile_pattern@@Base+0x123c>
   1f758:	sub	x0, x29, #0xc
   1f75c:	sub	x2, x29, #0x28
   1f760:	mov	w3, #0x1                   	// #1
   1f764:	mov	x1, x20
   1f768:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   1f76c:	str	x0, [x20, #80]
   1f770:	sub	x0, x29, #0xc
   1f774:	sub	x2, x29, #0x28
   1f778:	mov	w3, #0x2                   	// #2
   1f77c:	mov	x1, x20
   1f780:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   1f784:	str	x0, [x20, #88]
   1f788:	sub	x0, x29, #0xc
   1f78c:	sub	x2, x29, #0x28
   1f790:	mov	w3, #0x6                   	// #6
   1f794:	mov	x1, x20
   1f798:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   1f79c:	ldr	x8, [x20, #80]
   1f7a0:	str	x0, [x20, #96]
   1f7a4:	cbz	x8, 1f8c0 <rpl_re_compile_pattern@@Base+0x1348>
   1f7a8:	cbz	x0, 1f8c0 <rpl_re_compile_pattern@@Base+0x1348>
   1f7ac:	ldr	x8, [x20, #88]
   1f7b0:	cbz	x8, 1f8c0 <rpl_re_compile_pattern@@Base+0x1348>
   1f7b4:	ldur	x0, [x29, #-24]
   1f7b8:	bl	a960 <free@plt>
   1f7bc:	mov	w0, wzr
   1f7c0:	stur	w0, [x29, #-44]
   1f7c4:	ldr	x21, [x19]
   1f7c8:	ldr	x0, [x21, #112]
   1f7cc:	cbz	x0, 1f7e0 <rpl_re_compile_pattern@@Base+0x1268>
   1f7d0:	ldr	x22, [x0]
   1f7d4:	bl	a960 <free@plt>
   1f7d8:	mov	x0, x22
   1f7dc:	cbnz	x22, 1f7d0 <rpl_re_compile_pattern@@Base+0x1258>
   1f7e0:	ldr	x0, [x21, #32]
   1f7e4:	mov	w8, #0xf                   	// #15
   1f7e8:	str	w8, [x21, #128]
   1f7ec:	stp	xzr, xzr, [x21, #104]
   1f7f0:	bl	a960 <free@plt>
   1f7f4:	str	xzr, [x21, #32]
   1f7f8:	ldr	x0, [sp, #24]
   1f7fc:	bl	a960 <free@plt>
   1f800:	ldr	x0, [sp, #32]
   1f804:	bl	a960 <free@plt>
   1f808:	ldrb	w8, [sp, #147]
   1f80c:	cbz	w8, 1f818 <rpl_re_compile_pattern@@Base+0x12a0>
   1f810:	ldr	x0, [sp, #16]
   1f814:	bl	a960 <free@plt>
   1f818:	ldur	w8, [x29, #-44]
   1f81c:	cbnz	w8, 1ee4c <rpl_re_compile_pattern@@Base+0x8d4>
   1f820:	mov	w21, wzr
   1f824:	mov	w0, w21
   1f828:	ldp	x20, x19, [sp, #288]
   1f82c:	ldp	x22, x21, [sp, #272]
   1f830:	ldp	x24, x23, [sp, #256]
   1f834:	ldp	x26, x25, [sp, #240]
   1f838:	ldp	x28, x27, [sp, #224]
   1f83c:	ldp	x29, x30, [sp, #208]
   1f840:	add	sp, sp, #0x130
   1f844:	ret
   1f848:	mov	w0, #0xc                   	// #12
   1f84c:	stur	w0, [x29, #-44]
   1f850:	b	1edf8 <rpl_re_compile_pattern@@Base+0x880>
   1f854:	orr	w11, w12, w8
   1f858:	tbz	w11, #0, 1f57c <rpl_re_compile_pattern@@Base+0x1004>
   1f85c:	mov	x9, xzr
   1f860:	mov	w11, #0x1                   	// #1
   1f864:	add	x12, x10, x9
   1f868:	ldr	w13, [x12, #8]
   1f86c:	and	w14, w13, #0xff
   1f870:	cmp	w14, #0x5
   1f874:	b.eq	1f890 <rpl_re_compile_pattern@@Base+0x1318>  // b.none
   1f878:	cmp	w14, #0x1
   1f87c:	b.ne	1f89c <rpl_re_compile_pattern@@Base+0x1324>  // b.any
   1f880:	ldrsb	w10, [x10, x9]
   1f884:	tbz	w10, #31, 1f89c <rpl_re_compile_pattern@@Base+0x1324>
   1f888:	and	w10, w13, #0xffdfffff
   1f88c:	b	1f898 <rpl_re_compile_pattern@@Base+0x1320>
   1f890:	and	w10, w13, #0xffffff00
   1f894:	orr	w10, w10, #0x7
   1f898:	str	w10, [x12, #8]
   1f89c:	ldr	x10, [x20, #16]
   1f8a0:	cmp	x11, x10
   1f8a4:	b.cs	1f8b8 <rpl_re_compile_pattern@@Base+0x1340>  // b.hs, b.nlast
   1f8a8:	ldr	x10, [x20]
   1f8ac:	add	x9, x9, #0x10
   1f8b0:	add	x11, x11, #0x1
   1f8b4:	b	1f864 <rpl_re_compile_pattern@@Base+0x12ec>
   1f8b8:	ldrb	w9, [x20, #176]
   1f8bc:	b	1f57c <rpl_re_compile_pattern@@Base+0x1004>
   1f8c0:	ldur	w0, [x29, #-12]
   1f8c4:	b	1f7c0 <rpl_re_compile_pattern@@Base+0x1248>
   1f8c8:	mov	w0, #0xc                   	// #12
   1f8cc:	stp	xzr, xzr, [x29, #-40]
   1f8d0:	stur	w0, [x29, #-12]
   1f8d4:	b	1f7c0 <rpl_re_compile_pattern@@Base+0x1248>
   1f8d8:	bl	a840 <abort@plt>

000000000001f8dc <rpl_re_set_syntax@@Base>:
   1f8dc:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   1f8e0:	ldr	x9, [x9, #3920]
   1f8e4:	ldr	x8, [x9]
   1f8e8:	str	x0, [x9]
   1f8ec:	mov	x0, x8
   1f8f0:	ret

000000000001f8f4 <rpl_re_compile_fastmap@@Base>:
   1f8f4:	stp	x29, x30, [sp, #-48]!
   1f8f8:	stp	x20, x19, [sp, #32]
   1f8fc:	ldr	x20, [x0, #32]
   1f900:	str	x21, [sp, #16]
   1f904:	ldr	x21, [x0]
   1f908:	movi	v0.2d, #0x0
   1f90c:	stp	q0, q0, [x20, #224]
   1f910:	stp	q0, q0, [x20, #192]
   1f914:	stp	q0, q0, [x20, #160]
   1f918:	stp	q0, q0, [x20, #128]
   1f91c:	stp	q0, q0, [x20, #96]
   1f920:	stp	q0, q0, [x20, #64]
   1f924:	stp	q0, q0, [x20, #32]
   1f928:	stp	q0, q0, [x20]
   1f92c:	ldr	x1, [x21, #72]
   1f930:	mov	x2, x20
   1f934:	mov	x29, sp
   1f938:	mov	x19, x0
   1f93c:	bl	1f9b0 <rpl_re_compile_fastmap@@Base+0xbc>
   1f940:	ldp	x8, x1, [x21, #72]
   1f944:	cmp	x8, x1
   1f948:	b.eq	1f95c <rpl_re_compile_fastmap@@Base+0x68>  // b.none
   1f94c:	mov	x0, x19
   1f950:	mov	x2, x20
   1f954:	bl	1f9b0 <rpl_re_compile_fastmap@@Base+0xbc>
   1f958:	ldr	x8, [x21, #72]
   1f95c:	ldr	x1, [x21, #88]
   1f960:	cmp	x8, x1
   1f964:	b.eq	1f978 <rpl_re_compile_fastmap@@Base+0x84>  // b.none
   1f968:	mov	x0, x19
   1f96c:	mov	x2, x20
   1f970:	bl	1f9b0 <rpl_re_compile_fastmap@@Base+0xbc>
   1f974:	ldr	x8, [x21, #72]
   1f978:	ldr	x1, [x21, #96]
   1f97c:	cmp	x8, x1
   1f980:	b.eq	1f990 <rpl_re_compile_fastmap@@Base+0x9c>  // b.none
   1f984:	mov	x0, x19
   1f988:	mov	x2, x20
   1f98c:	bl	1f9b0 <rpl_re_compile_fastmap@@Base+0xbc>
   1f990:	ldrb	w8, [x19, #56]
   1f994:	ldr	x21, [sp, #16]
   1f998:	mov	w0, wzr
   1f99c:	orr	w8, w8, #0x8
   1f9a0:	strb	w8, [x19, #56]
   1f9a4:	ldp	x20, x19, [sp, #32]
   1f9a8:	ldp	x29, x30, [sp], #48
   1f9ac:	ret
   1f9b0:	sub	sp, sp, #0x1b0
   1f9b4:	stp	x29, x30, [sp, #336]
   1f9b8:	stp	x28, x27, [sp, #352]
   1f9bc:	stp	x26, x25, [sp, #368]
   1f9c0:	stp	x24, x23, [sp, #384]
   1f9c4:	stp	x22, x21, [sp, #400]
   1f9c8:	stp	x20, x19, [sp, #416]
   1f9cc:	ldr	x28, [x0]
   1f9d0:	mov	x20, x2
   1f9d4:	mov	x25, x0
   1f9d8:	add	x29, sp, #0x150
   1f9dc:	ldr	w8, [x28, #180]
   1f9e0:	cmp	w8, #0x1
   1f9e4:	b.ne	1f9f4 <rpl_re_compile_fastmap@@Base+0x100>  // b.any
   1f9e8:	ldrb	w8, [x25, #26]
   1f9ec:	ubfx	w24, w8, #6, #1
   1f9f0:	b	1f9f8 <rpl_re_compile_fastmap@@Base+0x104>
   1f9f4:	mov	w24, wzr
   1f9f8:	ldr	x8, [x1, #16]
   1f9fc:	cmp	x8, #0x1
   1fa00:	b.lt	1fe54 <rpl_re_compile_fastmap@@Base+0x560>  // b.tstop
   1fa04:	add	x8, sp, #0x38
   1fa08:	mov	x9, xzr
   1fa0c:	add	x10, x20, #0x3
   1fa10:	mov	w26, #0x1                   	// #1
   1fa14:	orr	x8, x8, #0x1
   1fa18:	stp	x8, x10, [sp]
   1fa1c:	stp	x25, x28, [sp, #16]
   1fa20:	str	x1, [sp, #40]
   1fa24:	b	1fa3c <rpl_re_compile_fastmap@@Base+0x148>
   1fa28:	ldp	x1, x9, [sp, #40]
   1fa2c:	ldr	x8, [x1, #16]
   1fa30:	add	x9, x9, #0x1
   1fa34:	cmp	x9, x8
   1fa38:	b.ge	1fe54 <rpl_re_compile_fastmap@@Base+0x560>  // b.tcont
   1fa3c:	ldr	x8, [x1, #24]
   1fa40:	ldr	x10, [x28]
   1fa44:	str	x9, [sp, #48]
   1fa48:	ldr	x19, [x8, x9, lsl #3]
   1fa4c:	add	x9, x10, x19, lsl #4
   1fa50:	ldrb	w8, [x9, #8]
   1fa54:	sub	w11, w8, #0x1
   1fa58:	cmp	w11, #0x6
   1fa5c:	b.hi	1fa28 <rpl_re_compile_fastmap@@Base+0x134>  // b.pmore
   1fa60:	adrp	x14, 31000 <vasnprintf@@Base+0x324c>
   1fa64:	add	x14, x14, #0x35c
   1fa68:	adr	x12, 1fa28 <rpl_re_compile_fastmap@@Base+0x134>
   1fa6c:	ldrb	w13, [x14, x11]
   1fa70:	add	x12, x12, x13, lsl #2
   1fa74:	br	x12
   1fa78:	ldrb	w21, [x9]
   1fa7c:	strb	w26, [x20, x21]
   1fa80:	cbz	w24, 1fa94 <rpl_re_compile_fastmap@@Base+0x1a0>
   1fa84:	bl	a480 <__ctype_tolower_loc@plt>
   1fa88:	ldr	x8, [x0]
   1fa8c:	ldrsw	x8, [x8, x21, lsl #2]
   1fa90:	strb	w26, [x20, x8]
   1fa94:	ldrb	w8, [x25, #26]
   1fa98:	tbz	w8, #6, 1fa28 <rpl_re_compile_fastmap@@Base+0x134>
   1fa9c:	ldr	w8, [x28, #180]
   1faa0:	cmp	w8, #0x2
   1faa4:	b.lt	1fa28 <rpl_re_compile_fastmap@@Base+0x134>  // b.tstop
   1faa8:	ldr	x9, [x28]
   1faac:	lsl	x8, x19, #4
   1fab0:	add	x10, x19, #0x1
   1fab4:	mov	w14, #0x1                   	// #1
   1fab8:	ldrb	w9, [x9, x8]
   1fabc:	movk	w14, #0x20, lsl #16
   1fac0:	strb	w9, [sp, #56]
   1fac4:	ldr	x9, [x28, #16]
   1fac8:	cmp	x10, x9
   1facc:	ldr	x9, [sp]
   1fad0:	b.cs	1fb10 <rpl_re_compile_fastmap@@Base+0x21c>  // b.hs, b.nlast
   1fad4:	ldr	x9, [sp]
   1fad8:	ldr	x11, [x28]
   1fadc:	add	w13, w14, #0xfe
   1fae0:	add	x11, x11, x8
   1fae4:	ldr	w12, [x11, #24]
   1fae8:	and	w12, w12, w13
   1faec:	cmp	w12, w14
   1faf0:	b.ne	1fb10 <rpl_re_compile_fastmap@@Base+0x21c>  // b.any
   1faf4:	ldrb	w11, [x11, #16]
   1faf8:	add	x10, x10, #0x1
   1fafc:	add	x8, x8, #0x10
   1fb00:	strb	w11, [x9], #1
   1fb04:	ldr	x11, [x28, #16]
   1fb08:	cmp	x10, x11
   1fb0c:	b.cc	1fad8 <rpl_re_compile_fastmap@@Base+0x1e4>  // b.lo, b.ul, b.last
   1fb10:	add	x8, sp, #0x38
   1fb14:	sub	x22, x9, x8
   1fb18:	sub	x0, x29, #0xc
   1fb1c:	add	x1, sp, #0x38
   1fb20:	sub	x3, x29, #0x18
   1fb24:	mov	x2, x22
   1fb28:	stur	xzr, [x29, #-24]
   1fb2c:	bl	a330 <rpl_mbrtowc@plt>
   1fb30:	cmp	x0, x22
   1fb34:	b.ne	1fa28 <rpl_re_compile_fastmap@@Base+0x134>  // b.any
   1fb38:	ldur	w0, [x29, #-12]
   1fb3c:	bl	ae40 <towlower@plt>
   1fb40:	mov	w1, w0
   1fb44:	add	x0, sp, #0x38
   1fb48:	sub	x2, x29, #0x18
   1fb4c:	bl	aeb0 <wcrtomb@plt>
   1fb50:	cmn	x0, #0x1
   1fb54:	b.eq	1fa28 <rpl_re_compile_fastmap@@Base+0x134>  // b.none
   1fb58:	ldrb	w8, [sp, #56]
   1fb5c:	strb	w26, [x20, x8]
   1fb60:	b	1fa28 <rpl_re_compile_fastmap@@Base+0x134>
   1fb64:	lsl	x8, x19, #4
   1fb68:	str	x8, [sp, #32]
   1fb6c:	ldr	x8, [x10, x8]
   1fb70:	ldr	x9, [sp, #8]
   1fb74:	mov	x22, xzr
   1fb78:	ldr	x19, [x8]
   1fb7c:	mov	w8, #0x83                  	// #131
   1fb80:	b	1fba8 <rpl_re_compile_fastmap@@Base+0x2b4>
   1fb84:	bl	a480 <__ctype_tolower_loc@plt>
   1fb88:	ldr	x8, [x0]
   1fb8c:	ldr	w8, [x8, x22, lsl #2]
   1fb90:	strb	w26, [x20, w8, sxtw]
   1fb94:	add	x22, x22, #0x1
   1fb98:	add	w8, w21, #0x1
   1fb9c:	cmp	x22, #0x40
   1fba0:	add	x9, x27, #0x1
   1fba4:	b.eq	1fc3c <rpl_re_compile_fastmap@@Base+0x348>  // b.none
   1fba8:	lsr	x10, x19, x22
   1fbac:	mov	w21, w8
   1fbb0:	mov	x27, x9
   1fbb4:	tbz	w10, #0, 1fb94 <rpl_re_compile_fastmap@@Base+0x2a0>
   1fbb8:	strb	w26, [x20, x22]
   1fbbc:	cbz	w24, 1fb94 <rpl_re_compile_fastmap@@Base+0x2a0>
   1fbc0:	add	w8, w22, #0x80
   1fbc4:	cmp	w8, #0x180
   1fbc8:	b.cc	1fb84 <rpl_re_compile_fastmap@@Base+0x290>  // b.lo, b.ul, b.last
   1fbcc:	mov	w8, w22
   1fbd0:	b	1fb90 <rpl_re_compile_fastmap@@Base+0x29c>
   1fbd4:	ldr	w8, [x28, #180]
   1fbd8:	ldr	x21, [x9]
   1fbdc:	cmp	w8, #0x2
   1fbe0:	b.lt	1fd78 <rpl_re_compile_fastmap@@Base+0x484>  // b.tstop
   1fbe4:	ldr	x8, [x21, #72]
   1fbe8:	cbnz	x8, 1fbfc <rpl_re_compile_fastmap@@Base+0x308>
   1fbec:	ldrb	w8, [x21, #32]
   1fbf0:	tbnz	w8, #0, 1fbfc <rpl_re_compile_fastmap@@Base+0x308>
   1fbf4:	ldr	x8, [x21, #64]
   1fbf8:	cbz	x8, 1fd78 <rpl_re_compile_fastmap@@Base+0x484>
   1fbfc:	sturb	wzr, [x29, #-24]
   1fc00:	b	1fc10 <rpl_re_compile_fastmap@@Base+0x31c>
   1fc04:	add	w8, w8, #0x1
   1fc08:	sturb	w8, [x29, #-24]
   1fc0c:	tbnz	w8, #8, 1fa28 <rpl_re_compile_fastmap@@Base+0x134>
   1fc10:	sub	x1, x29, #0x18
   1fc14:	add	x3, sp, #0x38
   1fc18:	mov	w2, #0x1                   	// #1
   1fc1c:	mov	x0, xzr
   1fc20:	str	xzr, [sp, #56]
   1fc24:	bl	a330 <rpl_mbrtowc@plt>
   1fc28:	ldurb	w8, [x29, #-24]
   1fc2c:	cmn	x0, #0x2
   1fc30:	b.ne	1fc04 <rpl_re_compile_fastmap@@Base+0x310>  // b.any
   1fc34:	strb	w26, [x20, x8]
   1fc38:	b	1fc04 <rpl_re_compile_fastmap@@Base+0x310>
   1fc3c:	ldr	x8, [x28]
   1fc40:	ldr	x9, [sp, #32]
   1fc44:	mov	x25, xzr
   1fc48:	ldr	x8, [x8, x9]
   1fc4c:	ldr	x23, [x8, #8]
   1fc50:	b	1fc7c <rpl_re_compile_fastmap@@Base+0x388>
   1fc54:	bl	a480 <__ctype_tolower_loc@plt>
   1fc58:	ldr	x8, [x0]
   1fc5c:	ldr	w8, [x8, x22, lsl #2]
   1fc60:	strb	w26, [x20, w8, sxtw]
   1fc64:	add	x25, x25, #0x1
   1fc68:	add	x22, x22, #0x1
   1fc6c:	add	w21, w19, #0x1
   1fc70:	cmp	x25, #0x40
   1fc74:	add	x27, x28, #0x1
   1fc78:	b.eq	1fca8 <rpl_re_compile_fastmap@@Base+0x3b4>  // b.none
   1fc7c:	lsr	x8, x23, x25
   1fc80:	mov	w19, w21
   1fc84:	mov	x28, x27
   1fc88:	tbz	w8, #0, 1fc64 <rpl_re_compile_fastmap@@Base+0x370>
   1fc8c:	strb	w26, [x20, x22]
   1fc90:	cbz	w24, 1fc64 <rpl_re_compile_fastmap@@Base+0x370>
   1fc94:	add	w8, w22, #0x80
   1fc98:	cmp	w8, #0x180
   1fc9c:	b.cc	1fc54 <rpl_re_compile_fastmap@@Base+0x360>  // b.lo, b.ul, b.last
   1fca0:	mov	w8, w22
   1fca4:	b	1fc60 <rpl_re_compile_fastmap@@Base+0x36c>
   1fca8:	ldp	x8, x9, [sp, #24]
   1fcac:	mov	x25, xzr
   1fcb0:	ldr	x8, [x8]
   1fcb4:	ldr	x8, [x8, x9]
   1fcb8:	ldr	x23, [x8, #16]
   1fcbc:	b	1fce8 <rpl_re_compile_fastmap@@Base+0x3f4>
   1fcc0:	bl	a480 <__ctype_tolower_loc@plt>
   1fcc4:	ldr	x8, [x0]
   1fcc8:	ldr	w8, [x8, x22, lsl #2]
   1fccc:	strb	w26, [x20, w8, sxtw]
   1fcd0:	add	x25, x25, #0x1
   1fcd4:	add	x22, x22, #0x1
   1fcd8:	add	w19, w27, #0x1
   1fcdc:	cmp	x25, #0x40
   1fce0:	add	x28, x21, #0x1
   1fce4:	b.eq	1fd14 <rpl_re_compile_fastmap@@Base+0x420>  // b.none
   1fce8:	lsr	x8, x23, x25
   1fcec:	mov	w27, w19
   1fcf0:	mov	x21, x28
   1fcf4:	tbz	w8, #0, 1fcd0 <rpl_re_compile_fastmap@@Base+0x3dc>
   1fcf8:	strb	w26, [x20, x22]
   1fcfc:	cbz	w24, 1fcd0 <rpl_re_compile_fastmap@@Base+0x3dc>
   1fd00:	add	w8, w22, #0x80
   1fd04:	cmp	w8, #0x180
   1fd08:	b.cc	1fcc0 <rpl_re_compile_fastmap@@Base+0x3cc>  // b.lo, b.ul, b.last
   1fd0c:	mov	w8, w22
   1fd10:	b	1fccc <rpl_re_compile_fastmap@@Base+0x3d8>
   1fd14:	ldp	x28, x9, [sp, #24]
   1fd18:	ldr	x25, [sp, #16]
   1fd1c:	mov	x23, xzr
   1fd20:	ldr	x8, [x28]
   1fd24:	ldr	x8, [x8, x9]
   1fd28:	ldr	x19, [x8, #24]
   1fd2c:	b	1fd58 <rpl_re_compile_fastmap@@Base+0x464>
   1fd30:	bl	a480 <__ctype_tolower_loc@plt>
   1fd34:	ldr	x8, [x0]
   1fd38:	ldr	w8, [x8, x22, lsl #2]
   1fd3c:	strb	w26, [x20, w8, sxtw]
   1fd40:	add	x23, x23, #0x1
   1fd44:	add	x22, x22, #0x1
   1fd48:	add	w27, w27, #0x1
   1fd4c:	cmp	x23, #0x40
   1fd50:	add	x21, x21, #0x1
   1fd54:	b.eq	1fa28 <rpl_re_compile_fastmap@@Base+0x134>  // b.none
   1fd58:	lsr	x8, x19, x23
   1fd5c:	tbz	w8, #0, 1fd40 <rpl_re_compile_fastmap@@Base+0x44c>
   1fd60:	strb	w26, [x21]
   1fd64:	cbz	w24, 1fd40 <rpl_re_compile_fastmap@@Base+0x44c>
   1fd68:	cmp	w27, #0x180
   1fd6c:	b.cc	1fd30 <rpl_re_compile_fastmap@@Base+0x43c>  // b.lo, b.ul, b.last
   1fd70:	mov	w8, w22
   1fd74:	b	1fd3c <rpl_re_compile_fastmap@@Base+0x448>
   1fd78:	ldr	x8, [x21, #40]
   1fd7c:	cmp	x8, #0x1
   1fd80:	b.lt	1fa28 <rpl_re_compile_fastmap@@Base+0x134>  // b.tstop
   1fd84:	mov	x19, xzr
   1fd88:	b	1fd9c <rpl_re_compile_fastmap@@Base+0x4a8>
   1fd8c:	ldr	x8, [x21, #40]
   1fd90:	add	x19, x19, #0x1
   1fd94:	cmp	x19, x8
   1fd98:	b.ge	1fa28 <rpl_re_compile_fastmap@@Base+0x134>  // b.tcont
   1fd9c:	stur	xzr, [x29, #-24]
   1fda0:	ldr	x8, [x21]
   1fda4:	add	x0, sp, #0x38
   1fda8:	sub	x2, x29, #0x18
   1fdac:	ldr	w1, [x8, x19, lsl #2]
   1fdb0:	bl	aeb0 <wcrtomb@plt>
   1fdb4:	cmn	x0, #0x1
   1fdb8:	b.eq	1fdd8 <rpl_re_compile_fastmap@@Base+0x4e4>  // b.none
   1fdbc:	ldrb	w22, [sp, #56]
   1fdc0:	strb	w26, [x20, x22]
   1fdc4:	cbz	w24, 1fdd8 <rpl_re_compile_fastmap@@Base+0x4e4>
   1fdc8:	bl	a480 <__ctype_tolower_loc@plt>
   1fdcc:	ldr	x8, [x0]
   1fdd0:	ldrsw	x8, [x8, x22, lsl #2]
   1fdd4:	strb	w26, [x20, x8]
   1fdd8:	ldrb	w8, [x25, #26]
   1fddc:	tbz	w8, #6, 1fd8c <rpl_re_compile_fastmap@@Base+0x498>
   1fde0:	ldr	w8, [x28, #180]
   1fde4:	cmp	w8, #0x2
   1fde8:	b.lt	1fd8c <rpl_re_compile_fastmap@@Base+0x498>  // b.tstop
   1fdec:	ldr	x8, [x21]
   1fdf0:	ldr	w0, [x8, x19, lsl #2]
   1fdf4:	bl	ae40 <towlower@plt>
   1fdf8:	mov	w1, w0
   1fdfc:	add	x0, sp, #0x38
   1fe00:	sub	x2, x29, #0x18
   1fe04:	bl	aeb0 <wcrtomb@plt>
   1fe08:	cmn	x0, #0x1
   1fe0c:	b.eq	1fd8c <rpl_re_compile_fastmap@@Base+0x498>  // b.none
   1fe10:	ldrb	w8, [sp, #56]
   1fe14:	strb	w26, [x20, x8]
   1fe18:	b	1fd8c <rpl_re_compile_fastmap@@Base+0x498>
   1fe1c:	movi	v0.16b, #0x1
   1fe20:	cmp	w8, #0x2
   1fe24:	stp	q0, q0, [x20, #224]
   1fe28:	stp	q0, q0, [x20, #192]
   1fe2c:	stp	q0, q0, [x20, #160]
   1fe30:	stp	q0, q0, [x20, #128]
   1fe34:	stp	q0, q0, [x20, #96]
   1fe38:	stp	q0, q0, [x20, #64]
   1fe3c:	stp	q0, q0, [x20, #32]
   1fe40:	stp	q0, q0, [x20]
   1fe44:	b.ne	1fe54 <rpl_re_compile_fastmap@@Base+0x560>  // b.any
   1fe48:	ldrb	w8, [x25, #56]
   1fe4c:	orr	w8, w8, #0x1
   1fe50:	strb	w8, [x25, #56]
   1fe54:	ldp	x20, x19, [sp, #416]
   1fe58:	ldp	x22, x21, [sp, #400]
   1fe5c:	ldp	x24, x23, [sp, #384]
   1fe60:	ldp	x26, x25, [sp, #368]
   1fe64:	ldp	x28, x27, [sp, #352]
   1fe68:	ldp	x29, x30, [sp, #336]
   1fe6c:	add	sp, sp, #0x1b0
   1fe70:	ret

000000000001fe74 <rpl_regcomp@@Base>:
   1fe74:	stp	x29, x30, [sp, #-48]!
   1fe78:	stp	x20, x19, [sp, #32]
   1fe7c:	mov	x19, x0
   1fe80:	stp	xzr, xzr, [x0]
   1fe84:	str	xzr, [x0, #16]
   1fe88:	mov	w0, #0x100                 	// #256
   1fe8c:	stp	x22, x21, [sp, #16]
   1fe90:	mov	x29, sp
   1fe94:	mov	w21, w2
   1fe98:	mov	x20, x1
   1fe9c:	bl	a540 <malloc@plt>
   1fea0:	str	x0, [x19, #32]
   1fea4:	cbz	x0, 1ff58 <rpl_regcomp@@Base+0xe4>
   1fea8:	mov	w8, #0xb2fc                	// #45820
   1feac:	mov	w9, #0x2c6                 	// #710
   1feb0:	tst	w21, #0x1
   1feb4:	movk	w8, #0x3, lsl #16
   1feb8:	movk	w9, #0x101, lsl #16
   1febc:	lsl	w10, w21, #21
   1fec0:	csel	x8, x9, x8, eq  // eq = none
   1fec4:	and	w9, w10, #0x400000
   1fec8:	orr	x22, x8, x9
   1fecc:	tbnz	w21, #2, 1fedc <rpl_regcomp@@Base+0x68>
   1fed0:	ldrb	w8, [x19, #56]
   1fed4:	and	w8, w8, #0x7f
   1fed8:	b	1fef4 <rpl_regcomp@@Base+0x80>
   1fedc:	ldrb	w8, [x19, #56]
   1fee0:	mov	w9, #0xb2be                	// #45758
   1fee4:	movk	w9, #0x143, lsl #16
   1fee8:	and	x9, x22, x9
   1feec:	orr	x22, x9, #0x100
   1fef0:	orr	w8, w8, #0xffffff80
   1fef4:	lsl	w9, w21, #1
   1fef8:	strb	w8, [x19, #56]
   1fefc:	and	w8, w8, #0xffffffef
   1ff00:	and	w9, w9, #0x10
   1ff04:	orr	w8, w8, w9
   1ff08:	mov	x0, x20
   1ff0c:	strb	w8, [x19, #56]
   1ff10:	str	xzr, [x19, #40]
   1ff14:	bl	a280 <strlen@plt>
   1ff18:	mov	x2, x0
   1ff1c:	mov	x0, x19
   1ff20:	mov	x1, x20
   1ff24:	mov	x3, x22
   1ff28:	bl	1e5f4 <rpl_re_compile_pattern@@Base+0x7c>
   1ff2c:	cmp	w0, #0x10
   1ff30:	mov	w8, #0x8                   	// #8
   1ff34:	csel	w20, w8, w0, eq  // eq = none
   1ff38:	cbnz	w20, 1ff60 <rpl_regcomp@@Base+0xec>
   1ff3c:	mov	x0, x19
   1ff40:	bl	ae60 <rpl_re_compile_fastmap@plt>
   1ff44:	mov	w0, w20
   1ff48:	ldp	x20, x19, [sp, #32]
   1ff4c:	ldp	x22, x21, [sp, #16]
   1ff50:	ldp	x29, x30, [sp], #48
   1ff54:	ret
   1ff58:	mov	w20, #0xc                   	// #12
   1ff5c:	b	1ff44 <rpl_regcomp@@Base+0xd0>
   1ff60:	ldr	x0, [x19, #32]
   1ff64:	bl	a960 <free@plt>
   1ff68:	str	xzr, [x19, #32]
   1ff6c:	b	1ff44 <rpl_regcomp@@Base+0xd0>

000000000001ff70 <rpl_regerror@@Base>:
   1ff70:	stp	x29, x30, [sp, #-48]!
   1ff74:	cmp	w0, #0x11
   1ff78:	stp	x22, x21, [sp, #16]
   1ff7c:	stp	x20, x19, [sp, #32]
   1ff80:	mov	x29, sp
   1ff84:	b.cs	1fffc <rpl_regerror@@Base+0x8c>  // b.hs, b.nlast
   1ff88:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
   1ff8c:	add	x8, x8, #0x620
   1ff90:	ldr	x8, [x8, w0, uxtw #3]
   1ff94:	adrp	x9, 31000 <vasnprintf@@Base+0x324c>
   1ff98:	add	x9, x9, #0x49f
   1ff9c:	mov	x19, x2
   1ffa0:	add	x1, x9, x8
   1ffa4:	mov	w2, #0x5                   	// #5
   1ffa8:	mov	x0, xzr
   1ffac:	mov	x20, x3
   1ffb0:	bl	ac80 <dcgettext@plt>
   1ffb4:	mov	x21, x0
   1ffb8:	bl	a280 <strlen@plt>
   1ffbc:	add	x22, x0, #0x1
   1ffc0:	cbz	x20, 1ffdc <rpl_regerror@@Base+0x6c>
   1ffc4:	cmp	x22, x20
   1ffc8:	mov	x2, x22
   1ffcc:	b.hi	1fff0 <rpl_regerror@@Base+0x80>  // b.pmore
   1ffd0:	mov	x0, x19
   1ffd4:	mov	x1, x21
   1ffd8:	bl	a210 <memcpy@plt>
   1ffdc:	mov	x0, x22
   1ffe0:	ldp	x20, x19, [sp, #32]
   1ffe4:	ldp	x22, x21, [sp, #16]
   1ffe8:	ldp	x29, x30, [sp], #48
   1ffec:	ret
   1fff0:	sub	x2, x20, #0x1
   1fff4:	strb	wzr, [x19, x2]
   1fff8:	b	1ffd0 <rpl_regerror@@Base+0x60>
   1fffc:	bl	a840 <abort@plt>

0000000000020000 <rpl_regfree@@Base>:
   20000:	stp	x29, x30, [sp, #-32]!
   20004:	stp	x20, x19, [sp, #16]
   20008:	ldr	x20, [x0]
   2000c:	mov	x19, x0
   20010:	mov	x29, sp
   20014:	cbz	x20, 20040 <rpl_regfree@@Base+0x40>
   20018:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   2001c:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   20020:	ldr	x8, [x8, #3944]
   20024:	ldr	x9, [x9, #4040]
   20028:	orr	x8, x9, x8
   2002c:	cbz	x8, 20038 <rpl_regfree@@Base+0x38>
   20030:	add	x0, x20, #0xe8
   20034:	bl	ab10 <pthread_mutex_destroy@plt>
   20038:	mov	x0, x20
   2003c:	bl	20068 <rpl_regfree@@Base+0x68>
   20040:	ldr	x0, [x19, #32]
   20044:	stp	xzr, xzr, [x19]
   20048:	bl	a960 <free@plt>
   2004c:	ldr	x0, [x19, #40]
   20050:	str	xzr, [x19, #32]
   20054:	bl	a960 <free@plt>
   20058:	str	xzr, [x19, #40]
   2005c:	ldp	x20, x19, [sp, #16]
   20060:	ldp	x29, x30, [sp], #32
   20064:	ret
   20068:	stp	x29, x30, [sp, #-64]!
   2006c:	stp	x24, x23, [sp, #16]
   20070:	stp	x22, x21, [sp, #32]
   20074:	stp	x20, x19, [sp, #48]
   20078:	ldr	x8, [x0]
   2007c:	mov	x19, x0
   20080:	mov	x29, sp
   20084:	cbz	x8, 2010c <rpl_regfree@@Base+0x10c>
   20088:	ldr	x9, [x19, #16]
   2008c:	cbz	x9, 2010c <rpl_regfree@@Base+0x10c>
   20090:	mov	w23, #0xff                  	// #255
   20094:	mov	x21, xzr
   20098:	mov	w22, #0x1                   	// #1
   2009c:	movk	w23, #0x4, lsl #16
   200a0:	add	x9, x8, x21
   200a4:	ldr	w9, [x9, #8]
   200a8:	and	w9, w9, w23
   200ac:	cmp	w9, #0x3
   200b0:	b.eq	200e4 <rpl_regfree@@Base+0xe4>  // b.none
   200b4:	cmp	w9, #0x6
   200b8:	b.ne	200f0 <rpl_regfree@@Base+0xf0>  // b.any
   200bc:	ldr	x20, [x8, x21]
   200c0:	ldr	x0, [x20]
   200c4:	bl	a960 <free@plt>
   200c8:	ldr	x0, [x20, #8]
   200cc:	bl	a960 <free@plt>
   200d0:	ldr	x0, [x20, #16]
   200d4:	bl	a960 <free@plt>
   200d8:	ldr	x0, [x20, #24]
   200dc:	bl	a960 <free@plt>
   200e0:	b	200e8 <rpl_regfree@@Base+0xe8>
   200e4:	ldr	x20, [x8, x21]
   200e8:	mov	x0, x20
   200ec:	bl	a960 <free@plt>
   200f0:	ldr	x8, [x19, #16]
   200f4:	cmp	x22, x8
   200f8:	b.cs	2010c <rpl_regfree@@Base+0x10c>  // b.hs, b.nlast
   200fc:	ldr	x8, [x19]
   20100:	add	x22, x22, #0x1
   20104:	add	x21, x21, #0x10
   20108:	b	200a0 <rpl_regfree@@Base+0xa0>
   2010c:	ldr	x0, [x19, #24]
   20110:	bl	a960 <free@plt>
   20114:	ldr	x8, [x19, #16]
   20118:	cbz	x8, 20170 <rpl_regfree@@Base+0x170>
   2011c:	mov	x20, xzr
   20120:	mov	w21, #0x10                  	// #16
   20124:	b	2013c <rpl_regfree@@Base+0x13c>
   20128:	ldr	x8, [x19, #16]
   2012c:	add	x20, x20, #0x1
   20130:	add	x21, x21, #0x18
   20134:	cmp	x20, x8
   20138:	b.cs	20170 <rpl_regfree@@Base+0x170>  // b.hs, b.nlast
   2013c:	ldr	x8, [x19, #48]
   20140:	cbz	x8, 2014c <rpl_regfree@@Base+0x14c>
   20144:	ldr	x0, [x8, x21]
   20148:	bl	a960 <free@plt>
   2014c:	ldr	x8, [x19, #56]
   20150:	cbz	x8, 2015c <rpl_regfree@@Base+0x15c>
   20154:	ldr	x0, [x8, x21]
   20158:	bl	a960 <free@plt>
   2015c:	ldr	x8, [x19, #40]
   20160:	cbz	x8, 20128 <rpl_regfree@@Base+0x128>
   20164:	ldr	x0, [x8, x21]
   20168:	bl	a960 <free@plt>
   2016c:	b	20128 <rpl_regfree@@Base+0x128>
   20170:	ldr	x0, [x19, #40]
   20174:	bl	a960 <free@plt>
   20178:	ldr	x0, [x19, #48]
   2017c:	bl	a960 <free@plt>
   20180:	ldr	x0, [x19, #56]
   20184:	bl	a960 <free@plt>
   20188:	ldr	x0, [x19]
   2018c:	bl	a960 <free@plt>
   20190:	ldr	x0, [x19, #64]
   20194:	cbz	x0, 201f8 <rpl_regfree@@Base+0x1f8>
   20198:	mov	x20, xzr
   2019c:	mov	w21, #0x18                  	// #24
   201a0:	madd	x23, x20, x21, x0
   201a4:	mov	x22, x23
   201a8:	ldr	x8, [x22], #16
   201ac:	cmp	x8, #0x1
   201b0:	b.lt	201d4 <rpl_regfree@@Base+0x1d4>  // b.tstop
   201b4:	mov	x24, xzr
   201b8:	ldr	x8, [x22]
   201bc:	ldr	x0, [x8, x24, lsl #3]
   201c0:	bl	2317c <rpl_re_set_registers@@Base+0x2c>
   201c4:	ldr	x8, [x23]
   201c8:	add	x24, x24, #0x1
   201cc:	cmp	x24, x8
   201d0:	b.lt	201b8 <rpl_regfree@@Base+0x1b8>  // b.tstop
   201d4:	ldr	x0, [x22]
   201d8:	bl	a960 <free@plt>
   201dc:	ldr	x8, [x19, #136]
   201e0:	cmp	x20, x8
   201e4:	b.cs	201f4 <rpl_regfree@@Base+0x1f4>  // b.hs, b.nlast
   201e8:	ldr	x0, [x19, #64]
   201ec:	add	x20, x20, #0x1
   201f0:	b	201a0 <rpl_regfree@@Base+0x1a0>
   201f4:	ldr	x0, [x19, #64]
   201f8:	bl	a960 <free@plt>
   201fc:	ldr	x0, [x19, #120]
   20200:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
   20204:	add	x8, x8, #0x6a8
   20208:	cmp	x0, x8
   2020c:	b.eq	20214 <rpl_regfree@@Base+0x214>  // b.none
   20210:	bl	a960 <free@plt>
   20214:	ldr	x0, [x19, #224]
   20218:	bl	a960 <free@plt>
   2021c:	mov	x0, x19
   20220:	ldp	x20, x19, [sp, #48]
   20224:	ldp	x22, x21, [sp, #32]
   20228:	ldp	x24, x23, [sp, #16]
   2022c:	ldp	x29, x30, [sp], #64
   20230:	b	a960 <free@plt>

0000000000020234 <rpl_regexec@@Base>:
   20234:	cmp	w4, #0x7
   20238:	b.ls	20244 <rpl_regexec@@Base+0x10>  // b.plast
   2023c:	mov	w0, #0x2                   	// #2
   20240:	ret
   20244:	sub	sp, sp, #0x70
   20248:	stp	x26, x25, [sp, #48]
   2024c:	ldr	x26, [x0]
   20250:	stp	x24, x23, [sp, #64]
   20254:	stp	x22, x21, [sp, #80]
   20258:	stp	x20, x19, [sp, #96]
   2025c:	mov	w22, w4
   20260:	mov	x19, x3
   20264:	mov	x21, x2
   20268:	mov	x20, x1
   2026c:	mov	x23, x0
   20270:	stp	x29, x30, [sp, #16]
   20274:	stp	x28, x27, [sp, #32]
   20278:	add	x29, sp, #0x10
   2027c:	tbnz	w4, #2, 20294 <rpl_regexec@@Base+0x60>
   20280:	mov	x0, x20
   20284:	bl	a280 <strlen@plt>
   20288:	mov	x24, x0
   2028c:	mov	x25, xzr
   20290:	b	20298 <rpl_regexec@@Base+0x64>
   20294:	ldp	x25, x24, [x19]
   20298:	adrp	x27, 42000 <vasnprintf@@Base+0x1424c>
   2029c:	adrp	x28, 42000 <vasnprintf@@Base+0x1424c>
   202a0:	ldr	x27, [x27, #3944]
   202a4:	ldr	x28, [x28, #4040]
   202a8:	orr	x8, x28, x27
   202ac:	cbz	x8, 202b8 <rpl_regexec@@Base+0x84>
   202b0:	add	x0, x26, #0xe8
   202b4:	bl	add0 <pthread_mutex_lock@plt>
   202b8:	ldrb	w8, [x23, #56]
   202bc:	tbnz	w8, #4, 202e8 <rpl_regexec@@Base+0xb4>
   202c0:	mov	x0, x23
   202c4:	mov	x1, x20
   202c8:	mov	x2, x24
   202cc:	mov	x3, x25
   202d0:	mov	x4, x24
   202d4:	mov	x5, x24
   202d8:	mov	x6, x21
   202dc:	mov	x7, x19
   202e0:	str	w22, [sp]
   202e4:	b	2030c <rpl_regexec@@Base+0xd8>
   202e8:	str	w22, [sp]
   202ec:	mov	x0, x23
   202f0:	mov	x1, x20
   202f4:	mov	x2, x24
   202f8:	mov	x3, x25
   202fc:	mov	x4, x24
   20300:	mov	x5, x24
   20304:	mov	x6, xzr
   20308:	mov	x7, xzr
   2030c:	bl	2034c <rpl_regexec@@Base+0x118>
   20310:	mov	w19, w0
   20314:	orr	x8, x28, x27
   20318:	cbz	x8, 20324 <rpl_regexec@@Base+0xf0>
   2031c:	add	x0, x26, #0xe8
   20320:	bl	ae10 <pthread_mutex_unlock@plt>
   20324:	cmp	w19, #0x0
   20328:	ldp	x20, x19, [sp, #96]
   2032c:	ldp	x22, x21, [sp, #80]
   20330:	ldp	x24, x23, [sp, #64]
   20334:	ldp	x26, x25, [sp, #48]
   20338:	ldp	x28, x27, [sp, #32]
   2033c:	ldp	x29, x30, [sp, #16]
   20340:	cset	w0, ne  // ne = any
   20344:	add	sp, sp, #0x70
   20348:	ret
   2034c:	stp	x29, x30, [sp, #-96]!
   20350:	stp	x28, x27, [sp, #16]
   20354:	stp	x26, x25, [sp, #32]
   20358:	stp	x24, x23, [sp, #48]
   2035c:	stp	x22, x21, [sp, #64]
   20360:	stp	x20, x19, [sp, #80]
   20364:	mov	x29, sp
   20368:	sub	sp, sp, #0x2a0
   2036c:	ldr	x24, [x0]
   20370:	movi	v0.2d, #0x0
   20374:	stp	q0, q0, [sp, #528]
   20378:	stp	q0, q0, [sp, #496]
   2037c:	stp	q0, q0, [sp, #464]
   20380:	stp	q0, q0, [sp, #432]
   20384:	stp	q0, q0, [sp, #400]
   20388:	stp	q0, q0, [sp, #368]
   2038c:	stp	q0, q0, [sp, #336]
   20390:	stp	q0, q0, [sp, #304]
   20394:	str	x24, [sp, #456]
   20398:	ldr	x8, [x0, #32]
   2039c:	mov	x25, x7
   203a0:	mov	x20, x5
   203a4:	mov	x26, x3
   203a8:	str	x2, [sp, #288]
   203ac:	str	x1, [sp, #272]
   203b0:	cbz	x8, 203d0 <rpl_regexec@@Base+0x19c>
   203b4:	ldrb	w9, [x0, #56]
   203b8:	mov	w10, #0x9                   	// #9
   203bc:	and	w9, w9, w10
   203c0:	cmp	w9, #0x8
   203c4:	ccmp	x26, x4, #0x4, eq  // eq = none
   203c8:	csel	x21, x8, xzr, ne  // ne = any
   203cc:	b	203d4 <rpl_regexec@@Base+0x1a0>
   203d0:	mov	x21, xzr
   203d4:	ldr	x8, [x0, #48]
   203d8:	ldr	x9, [x0, #16]
   203dc:	mvn	x10, x8
   203e0:	add	x10, x10, x6
   203e4:	cmp	x8, x6
   203e8:	csel	x28, x10, xzr, cc  // cc = lo, ul, last
   203ec:	cbz	x9, 228dc <rpl_regexec@@Base+0x26a8>
   203f0:	ldr	x10, [x24, #72]
   203f4:	cbz	x10, 228dc <rpl_regexec@@Base+0x26a8>
   203f8:	ldr	x9, [x24, #80]
   203fc:	cbz	x9, 228dc <rpl_regexec@@Base+0x26a8>
   20400:	ldr	x8, [x24, #88]
   20404:	cbz	x8, 228dc <rpl_regexec@@Base+0x26a8>
   20408:	ldr	x11, [x24, #96]
   2040c:	cbz	x11, 228dc <rpl_regexec@@Base+0x26a8>
   20410:	ldr	x10, [x10, #16]
   20414:	ldr	x22, [x0, #40]
   20418:	cbnz	x10, 20424 <rpl_regexec@@Base+0x1f0>
   2041c:	ldr	x9, [x9, #16]
   20420:	cbz	x9, 228bc <rpl_regexec@@Base+0x2688>
   20424:	mov	x23, x4
   20428:	sub	x8, x6, x28
   2042c:	str	x8, [sp, #232]
   20430:	str	x6, [sp, #152]
   20434:	cbz	x8, 20440 <rpl_regexec@@Base+0x20c>
   20438:	mov	w8, #0x1                   	// #1
   2043c:	b	2044c <rpl_regexec@@Base+0x218>
   20440:	ldr	x8, [x24, #152]
   20444:	cmp	x8, #0x0
   20448:	cset	w8, ne  // ne = any
   2044c:	str	w8, [sp, #188]
   20450:	ldr	x8, [x24, #16]
   20454:	ldrsw	x10, [x24, #180]
   20458:	ldr	x9, [x0, #24]
   2045c:	ldr	x13, [sp, #288]
   20460:	add	x12, x8, #0x1
   20464:	cmp	x12, x10
   20468:	ldr	x14, [sp, #272]
   2046c:	add	x11, x13, #0x1
   20470:	and	x12, x9, #0x400000
   20474:	ubfx	x9, x9, #22, #1
   20478:	csinc	x8, x10, x8, lt  // lt = tstop
   2047c:	strb	w9, [sp, #440]
   20480:	orr	x9, x22, x12
   20484:	cmp	x11, x8
   20488:	csinc	x27, x8, x13, ge  // ge = tcont
   2048c:	cmp	x9, #0x0
   20490:	cset	w19, ne  // ne = any
   20494:	str	x14, [sp, #304]
   20498:	stp	x13, x13, [sp, #384]
   2049c:	str	x22, [sp, #424]
   204a0:	str	w10, [sp, #448]
   204a4:	strb	w19, [sp, #443]
   204a8:	ldrb	w8, [x24, #176]
   204ac:	cmp	w10, #0x2
   204b0:	str	x0, [sp, #264]
   204b4:	stp	x13, x13, [sp, #400]
   204b8:	ubfx	w9, w8, #2, #1
   204bc:	ubfx	w8, w8, #3, #1
   204c0:	strb	w9, [sp, #441]
   204c4:	strb	w8, [sp, #442]
   204c8:	b.lt	204e8 <rpl_regexec@@Base+0x2b4>  // b.tstop
   204cc:	lsr	x8, x27, #61
   204d0:	cbnz	x8, 22a98 <rpl_regexec@@Base+0x2864>
   204d4:	lsl	x0, x27, #2
   204d8:	bl	a540 <malloc@plt>
   204dc:	cbz	x0, 22a98 <rpl_regexec@@Base+0x2864>
   204e0:	ldr	x14, [sp, #272]
   204e4:	str	x0, [sp, #320]
   204e8:	cbz	w19, 20508 <rpl_regexec@@Base+0x2d4>
   204ec:	mov	x0, x27
   204f0:	bl	a540 <malloc@plt>
   204f4:	cbz	x0, 22a98 <rpl_regexec@@Base+0x2864>
   204f8:	ldr	x14, [sp, #272]
   204fc:	mov	w8, wzr
   20500:	str	x0, [sp, #312]
   20504:	b	2050c <rpl_regexec@@Base+0x2d8>
   20508:	mov	w8, #0x1                   	// #1
   2050c:	add	x9, x24, #0xb8
   20510:	stp	x28, x25, [sp, #160]
   20514:	str	x27, [sp, #368]
   20518:	str	x9, [sp, #432]
   2051c:	ldrb	w9, [x24, #176]
   20520:	ldr	w10, [x29, #96]
   20524:	ubfx	w9, w9, #4, #1
   20528:	str	w10, [sp, #284]
   2052c:	strb	w9, [sp, #446]
   20530:	cbz	w8, 2054c <rpl_regexec@@Base+0x318>
   20534:	str	x14, [sp, #312]
   20538:	ldr	w8, [x24, #180]
   2053c:	ldr	x25, [sp, #288]
   20540:	cmp	w8, #0x1
   20544:	csel	x8, xzr, x25, gt
   20548:	b	20554 <rpl_regexec@@Base+0x320>
   2054c:	ldr	x25, [sp, #288]
   20550:	mov	x8, xzr
   20554:	stp	x8, x8, [sp, #352]
   20558:	ldr	x8, [sp, #264]
   2055c:	stp	x20, x20, [sp, #400]
   20560:	ldr	w9, [sp, #284]
   20564:	ldrb	w8, [x8, #56]
   20568:	lsr	w8, w8, #7
   2056c:	strb	w8, [sp, #445]
   20570:	ldr	x20, [x24, #152]
   20574:	mov	x8, #0xffffffffffffffff    	// #-1
   20578:	str	w9, [sp, #464]
   2057c:	str	x8, [sp, #472]
   20580:	lsl	x19, x20, #1
   20584:	cmp	x20, #0x1
   20588:	b.lt	205cc <rpl_regexec@@Base+0x398>  // b.tstop
   2058c:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   20590:	movk	x8, #0x666, lsl #48
   20594:	cmp	x19, x8
   20598:	b.hi	22a98 <rpl_regexec@@Base+0x2864>  // b.pmore
   2059c:	add	x8, x20, x20, lsl #2
   205a0:	lsl	x0, x8, #4
   205a4:	bl	a540 <malloc@plt>
   205a8:	mov	x25, x0
   205ac:	str	x0, [sp, #520]
   205b0:	lsl	x0, x20, #4
   205b4:	bl	a540 <malloc@plt>
   205b8:	mov	w20, #0xc                   	// #12
   205bc:	str	x0, [sp, #552]
   205c0:	cbz	x25, 22a18 <rpl_regexec@@Base+0x27e4>
   205c4:	ldr	x25, [sp, #288]
   205c8:	cbz	x0, 22a18 <rpl_regexec@@Base+0x27e4>
   205cc:	ldr	x9, [sp, #232]
   205d0:	mov	w8, #0x1                   	// #1
   205d4:	str	x19, [sp, #512]
   205d8:	str	w8, [sp, #528]
   205dc:	cmp	x9, #0x1
   205e0:	str	x19, [sp, #544]
   205e4:	b.hi	205f8 <rpl_regexec@@Base+0x3c4>  // b.pmore
   205e8:	ldrb	w8, [x24, #176]
   205ec:	tbnz	w8, #1, 205f8 <rpl_regexec@@Base+0x3c4>
   205f0:	str	xzr, [sp, #488]
   205f4:	b	20618 <rpl_regexec@@Base+0x3e4>
   205f8:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
   205fc:	cmp	x27, x8
   20600:	b.hi	22a98 <rpl_regexec@@Base+0x2864>  // b.pmore
   20604:	lsl	x8, x27, #3
   20608:	add	x0, x8, #0x8
   2060c:	bl	a540 <malloc@plt>
   20610:	str	x0, [sp, #488]
   20614:	cbz	x0, 22a98 <rpl_regexec@@Base+0x2864>
   20618:	ldr	w9, [sp, #284]
   2061c:	mov	w10, #0x6                   	// #6
   20620:	stur	x26, [x29, #-112]
   20624:	add	x8, sp, #0x130
   20628:	tst	w9, #0x1
   2062c:	mov	w9, #0x4                   	// #4
   20630:	csel	w9, w10, w9, eq  // eq = none
   20634:	str	w9, [sp, #416]
   20638:	ldr	w10, [x24, #180]
   2063c:	cmp	x23, x26
   20640:	csel	x27, x23, x26, lt  // lt = tstop
   20644:	csel	x19, x26, x23, lt  // lt = tstop
   20648:	str	w10, [sp, #228]
   2064c:	cbz	x21, 20660 <rpl_regexec@@Base+0x42c>
   20650:	cmp	w10, #0x1
   20654:	b.ne	20668 <rpl_regexec@@Base+0x434>  // b.any
   20658:	mov	w9, #0x4                   	// #4
   2065c:	b	20684 <rpl_regexec@@Base+0x450>
   20660:	mov	w9, #0x8                   	// #8
   20664:	b	2069c <rpl_regexec@@Base+0x468>
   20668:	ldr	x9, [sp, #264]
   2066c:	ldr	x9, [x9, #24]
   20670:	and	x9, x9, #0x400000
   20674:	orr	x9, x22, x9
   20678:	cmp	x9, #0x0
   2067c:	cset	w9, eq  // eq = none
   20680:	lsl	w9, w9, #2
   20684:	cmp	x23, x26
   20688:	cset	w10, ge  // ge = tcont
   2068c:	cmp	x22, #0x0
   20690:	cset	w11, ne  // ne = any
   20694:	bfi	w11, w10, #1, #1
   20698:	orr	w9, w11, w9
   2069c:	add	x8, x8, #0x38
   206a0:	str	x8, [sp, #144]
   206a4:	add	x8, sp, #0x130
   206a8:	cmp	x23, x26
   206ac:	sub	x10, x29, #0x70
   206b0:	add	x8, x8, #0xc0
   206b4:	mov	x11, #0xffffffffffffffff    	// #-1
   206b8:	str	x8, [sp, #208]
   206bc:	csel	x8, xzr, x10, lt  // lt = tstop
   206c0:	sub	x12, x29, #0x60
   206c4:	sub	w23, w9, #0x4
   206c8:	cneg	x9, x11, ge  // ge = tcont
   206cc:	cmp	x8, #0x0
   206d0:	str	x9, [sp, #296]
   206d4:	add	x9, x12, #0x20
   206d8:	str	x8, [sp, #192]
   206dc:	cset	w8, ne  // ne = any
   206e0:	str	x9, [sp, #176]
   206e4:	str	w8, [sp, #204]
   206e8:	stp	x27, x23, [sp, #240]
   206ec:	cmp	w23, #0x4
   206f0:	b.hi	2086c <rpl_regexec@@Base+0x638>  // b.pmore
   206f4:	adrp	x10, 31000 <vasnprintf@@Base+0x324c>
   206f8:	add	x10, x10, #0x363
   206fc:	adr	x8, 2070c <rpl_regexec@@Base+0x4d8>
   20700:	ldrb	w9, [x10, x23]
   20704:	add	x8, x8, x9, lsl #2
   20708:	br	x8
   2070c:	cmp	x26, x27
   20710:	b.lt	22848 <rpl_regexec@@Base+0x2614>  // b.tstop
   20714:	ldr	x9, [sp, #272]
   20718:	cmp	x26, x25
   2071c:	b.ge	2072c <rpl_regexec@@Base+0x4f8>  // b.tcont
   20720:	ldrb	w8, [x9, x26]
   20724:	cbnz	x22, 20734 <rpl_regexec@@Base+0x500>
   20728:	b	20738 <rpl_regexec@@Base+0x504>
   2072c:	mov	w8, wzr
   20730:	cbz	x22, 20738 <rpl_regexec@@Base+0x504>
   20734:	ldrb	w8, [x22, w8, uxtw]
   20738:	ldrb	w8, [x21, w8, uxtw]
   2073c:	cbnz	w8, 207b4 <rpl_regexec@@Base+0x580>
   20740:	cmp	x26, x27
   20744:	sub	x26, x26, #0x1
   20748:	stur	x26, [x29, #-112]
   2074c:	b.gt	20718 <rpl_regexec@@Base+0x4e4>
   20750:	b	22848 <rpl_regexec@@Base+0x2614>
   20754:	cmp	x26, x19
   20758:	b.ge	207ac <rpl_regexec@@Base+0x578>  // b.tcont
   2075c:	ldr	x9, [sp, #272]
   20760:	ldrb	w8, [x9, x26]
   20764:	ldrb	w8, [x22, x8]
   20768:	ldrb	w8, [x21, x8]
   2076c:	cbnz	w8, 207ac <rpl_regexec@@Base+0x578>
   20770:	add	x26, x26, #0x1
   20774:	cmp	x26, x19
   20778:	stur	x26, [x29, #-112]
   2077c:	b.lt	20760 <rpl_regexec@@Base+0x52c>  // b.tstop
   20780:	b	207ac <rpl_regexec@@Base+0x578>
   20784:	ldr	x9, [sp, #272]
   20788:	cmp	x26, x19
   2078c:	b.ge	207ac <rpl_regexec@@Base+0x578>  // b.tcont
   20790:	ldrb	w8, [x9, x26]
   20794:	ldrb	w8, [x21, x8]
   20798:	cbnz	w8, 207ac <rpl_regexec@@Base+0x578>
   2079c:	add	x26, x26, #0x1
   207a0:	cmp	x26, x19
   207a4:	stur	x26, [x29, #-112]
   207a8:	b.lt	20790 <rpl_regexec@@Base+0x55c>  // b.tstop
   207ac:	cmp	x26, x19
   207b0:	b.eq	2098c <rpl_regexec@@Base+0x758>  // b.none
   207b4:	ldr	w2, [sp, #284]
   207b8:	add	x0, sp, #0x130
   207bc:	mov	x1, x26
   207c0:	bl	28a7c <rpl_re_set_registers@@Base+0x592c>
   207c4:	cbnz	w0, 22a84 <rpl_regexec@@Base+0x2850>
   207c8:	ldr	w8, [sp, #228]
   207cc:	cmp	w8, #0x1
   207d0:	b.eq	207ec <rpl_regexec@@Base+0x5b8>  // b.none
   207d4:	ldr	x8, [sp, #352]
   207d8:	cbz	x8, 207ec <rpl_regexec@@Base+0x5b8>
   207dc:	ldr	x8, [sp, #320]
   207e0:	ldr	w8, [x8]
   207e4:	cmn	w8, #0x1
   207e8:	b.eq	2228c <rpl_regexec@@Base+0x2058>  // b.none
   207ec:	ldr	x8, [sp, #208]
   207f0:	str	wzr, [sp, #528]
   207f4:	stur	wzr, [x29, #-100]
   207f8:	stp	xzr, xzr, [x8]
   207fc:	ldr	x20, [sp, #456]
   20800:	ldr	x15, [sp, #376]
   20804:	ldr	x26, [x20, #72]
   20808:	ldrsb	w8, [x26, #104]
   2080c:	tbnz	w8, #31, 20818 <rpl_regexec@@Base+0x5e4>
   20810:	ldr	w28, [sp, #204]
   20814:	b	209fc <rpl_regexec@@Base+0x7c8>
   20818:	cmp	x15, #0x0
   2081c:	b.le	209a0 <rpl_regexec@@Base+0x76c>
   20820:	ldr	x9, [sp, #392]
   20824:	ldr	w28, [sp, #204]
   20828:	sub	x8, x15, #0x1
   2082c:	cmp	x9, x8
   20830:	b.eq	209ac <rpl_regexec@@Base+0x778>  // b.none
   20834:	ldr	w9, [sp, #448]
   20838:	cmp	w9, #0x2
   2083c:	b.lt	208f4 <rpl_regexec@@Base+0x6c0>  // b.tstop
   20840:	ldr	x8, [sp, #320]
   20844:	mov	x9, x15
   20848:	sub	x8, x8, #0x4
   2084c:	ldr	w25, [x8, x9, lsl #2]
   20850:	cmn	w25, #0x1
   20854:	b.ne	20920 <rpl_regexec@@Base+0x6ec>  // b.any
   20858:	sub	x9, x9, #0x1
   2085c:	cmp	x9, #0x0
   20860:	b.gt	2084c <rpl_regexec@@Base+0x618>
   20864:	ldr	w3, [sp, #416]
   20868:	b	20940 <rpl_regexec@@Base+0x70c>
   2086c:	ldr	x8, [sp, #344]
   20870:	ldr	x10, [sp, #360]
   20874:	sub	x9, x26, x8
   20878:	cmp	x9, x10
   2087c:	b.cs	2089c <rpl_regexec@@Base+0x668>  // b.hs, b.nlast
   20880:	cmp	x26, x25
   20884:	b.ge	208c4 <rpl_regexec@@Base+0x690>  // b.tcont
   20888:	ldr	x10, [sp, #312]
   2088c:	ldrb	w9, [x10, x9]
   20890:	ldrb	w9, [x21, x9]
   20894:	cbz	w9, 208d0 <rpl_regexec@@Base+0x69c>
   20898:	b	207b4 <rpl_regexec@@Base+0x580>
   2089c:	ldr	w2, [sp, #284]
   208a0:	add	x0, sp, #0x130
   208a4:	mov	x1, x26
   208a8:	bl	28a7c <rpl_re_set_registers@@Base+0x592c>
   208ac:	cbnz	w0, 22a84 <rpl_regexec@@Base+0x2850>
   208b0:	ldur	x26, [x29, #-112]
   208b4:	ldr	x8, [sp, #344]
   208b8:	sub	x9, x26, x8
   208bc:	cmp	x26, x25
   208c0:	b.lt	20888 <rpl_regexec@@Base+0x654>  // b.tstop
   208c4:	mov	x9, xzr
   208c8:	ldrb	w9, [x21, x9]
   208cc:	cbnz	w9, 207b4 <rpl_regexec@@Base+0x580>
   208d0:	ldr	x9, [sp, #296]
   208d4:	mov	w20, #0x1                   	// #1
   208d8:	add	x26, x26, x9
   208dc:	cmp	x26, x27
   208e0:	stur	x26, [x29, #-112]
   208e4:	b.lt	22a18 <rpl_regexec@@Base+0x27e4>  // b.tstop
   208e8:	cmp	x26, x19
   208ec:	b.le	20870 <rpl_regexec@@Base+0x63c>
   208f0:	b	22a18 <rpl_regexec@@Base+0x27e4>
   208f4:	ldr	x9, [sp, #312]
   208f8:	ldr	x10, [sp, #432]
   208fc:	ldrb	w8, [x9, x8]
   20900:	lsr	x9, x8, #3
   20904:	and	x9, x9, #0x18
   20908:	ldr	x9, [x10, x9]
   2090c:	lsr	x9, x9, x8
   20910:	tbnz	w9, #0, 209f8 <rpl_regexec@@Base+0x7c4>
   20914:	cmp	w8, #0xa
   20918:	b.eq	20930 <rpl_regexec@@Base+0x6fc>  // b.none
   2091c:	b	209fc <rpl_regexec@@Base+0x7c8>
   20920:	ldrb	w8, [sp, #446]
   20924:	cbnz	w8, 209dc <rpl_regexec@@Base+0x7a8>
   20928:	cmp	w25, #0xa
   2092c:	b.ne	209fc <rpl_regexec@@Base+0x7c8>  // b.any
   20930:	ldrb	w8, [sp, #445]
   20934:	cmp	w8, #0x0
   20938:	cset	w8, ne  // ne = any
   2093c:	lsl	w3, w8, #1
   20940:	tbnz	w3, #0, 209f8 <rpl_regexec@@Base+0x7c4>
   20944:	cbz	w3, 209fc <rpl_regexec@@Base+0x7c8>
   20948:	tbz	w3, #1, 20958 <rpl_regexec@@Base+0x724>
   2094c:	tbz	w3, #2, 20958 <rpl_regexec@@Base+0x724>
   20950:	ldr	x26, [x20, #96]
   20954:	b	209fc <rpl_regexec@@Base+0x7c8>
   20958:	tbnz	w3, #1, 20984 <rpl_regexec@@Base+0x750>
   2095c:	ldr	x26, [x20, #72]
   20960:	tbz	w3, #2, 209fc <rpl_regexec@@Base+0x7c8>
   20964:	ldr	x2, [x26, #80]
   20968:	sub	x0, x29, #0x64
   2096c:	mov	x1, x20
   20970:	mov	x25, x15
   20974:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   20978:	mov	x15, x25
   2097c:	mov	x26, x0
   20980:	b	209fc <rpl_regexec@@Base+0x7c8>
   20984:	ldr	x26, [x20, #88]
   20988:	b	209fc <rpl_regexec@@Base+0x7c8>
   2098c:	cmp	x19, x25
   20990:	b.ge	209c0 <rpl_regexec@@Base+0x78c>  // b.tcont
   20994:	ldr	x8, [sp, #272]
   20998:	ldrb	w8, [x8, x19]
   2099c:	b	209c4 <rpl_regexec@@Base+0x790>
   209a0:	ldr	w3, [sp, #416]
   209a4:	ldr	w28, [sp, #204]
   209a8:	b	20940 <rpl_regexec@@Base+0x70c>
   209ac:	ldr	w8, [sp, #464]
   209b0:	mov	w9, #0xa                   	// #10
   209b4:	and	w8, w8, #0x2
   209b8:	eor	w3, w8, w9
   209bc:	b	20940 <rpl_regexec@@Base+0x70c>
   209c0:	mov	w8, wzr
   209c4:	cbz	x22, 209cc <rpl_regexec@@Base+0x798>
   209c8:	ldrb	w8, [x22, w8, uxtw]
   209cc:	ldrb	w8, [x21, w8, uxtw]
   209d0:	mov	x26, x19
   209d4:	cbnz	w8, 207b4 <rpl_regexec@@Base+0x580>
   209d8:	b	22848 <rpl_regexec@@Base+0x2614>
   209dc:	mov	w0, w25
   209e0:	str	x15, [sp, #112]
   209e4:	bl	ac10 <iswalnum@plt>
   209e8:	ldr	x15, [sp, #112]
   209ec:	cmp	w25, #0x5f
   209f0:	b.eq	209f8 <rpl_regexec@@Base+0x7c4>  // b.none
   209f4:	cbz	w0, 20928 <rpl_regexec@@Base+0x6f4>
   209f8:	ldr	x26, [x20, #80]
   209fc:	cbz	x26, 22a8c <rpl_regexec@@Base+0x2858>
   20a00:	ldr	x8, [sp, #488]
   20a04:	mov	w25, w28
   20a08:	cbz	x8, 20a1c <rpl_regexec@@Base+0x7e8>
   20a0c:	str	x26, [x8, x15, lsl #3]
   20a10:	ldr	x8, [x20, #152]
   20a14:	mov	w25, w28
   20a18:	cbnz	x8, 222f4 <rpl_regexec@@Base+0x20c0>
   20a1c:	ldrsb	w8, [x26, #104]
   20a20:	tbnz	w8, #4, 222d8 <rpl_regexec@@Base+0x20a4>
   20a24:	str	xzr, [sp, #216]
   20a28:	mov	x28, #0xffffffffffffffff    	// #-1
   20a2c:	ldr	x9, [sp, #408]
   20a30:	ldr	x8, [sp, #376]
   20a34:	cmp	x9, x8
   20a38:	b.le	20a48 <rpl_regexec@@Base+0x814>
   20a3c:	ldr	x9, [sp, #192]
   20a40:	str	x9, [sp, #256]
   20a44:	b	20a90 <rpl_regexec@@Base+0x85c>
   20a48:	ldr	x8, [sp, #192]
   20a4c:	str	x8, [sp, #256]
   20a50:	ldr	x9, [sp, #256]
   20a54:	cbnz	x9, 21fac <rpl_regexec@@Base+0x1d78>
   20a58:	b	21fb8 <rpl_regexec@@Base+0x1d84>
   20a5c:	cbz	x12, 20a78 <rpl_regexec@@Base+0x844>
   20a60:	ldr	x28, [sp, #376]
   20a64:	ldr	w8, [sp, #188]
   20a68:	cbz	w8, 222b4 <rpl_regexec@@Base+0x2080>
   20a6c:	mov	w8, #0x1                   	// #1
   20a70:	str	xzr, [sp, #256]
   20a74:	str	x8, [sp, #216]
   20a78:	ldr	x9, [sp, #408]
   20a7c:	ldr	x8, [sp, #376]
   20a80:	and	w25, w25, w23
   20a84:	ldr	x23, [sp, #248]
   20a88:	cmp	x9, x8
   20a8c:	b.le	21fa4 <rpl_regexec@@Base+0x1d70>
   20a90:	ldr	x10, [sp, #368]
   20a94:	ldr	x9, [sp, #392]
   20a98:	add	x11, x8, #0x1
   20a9c:	mov	x12, x26
   20aa0:	cmp	x11, x10
   20aa4:	b.lt	20ab0 <rpl_regexec@@Base+0x87c>  // b.tstop
   20aa8:	cmp	x10, x9
   20aac:	b.lt	21d60 <rpl_regexec@@Base+0x1b2c>  // b.tstop
   20ab0:	ldr	x10, [sp, #352]
   20ab4:	cmp	x11, x10
   20ab8:	b.lt	20ac4 <rpl_regexec@@Base+0x890>  // b.tstop
   20abc:	cmp	x10, x9
   20ac0:	b.lt	21d60 <rpl_regexec@@Base+0x1b2c>  // b.tstop
   20ac4:	ldrb	w8, [x12, #104]
   20ac8:	tbnz	w8, #5, 20cf4 <rpl_regexec@@Base+0xac0>
   20acc:	ldr	x8, [sp, #376]
   20ad0:	ldr	x9, [sp, #312]
   20ad4:	mov	x27, x12
   20ad8:	add	x10, x8, #0x1
   20adc:	str	x10, [sp, #376]
   20ae0:	ldrb	w26, [x9, x8]
   20ae4:	ldr	x0, [x27, #88]!
   20ae8:	cbz	x0, 210b4 <rpl_regexec@@Base+0xe80>
   20aec:	ldr	x26, [x0, x26, lsl #3]
   20af0:	ldr	x27, [sp, #240]
   20af4:	ldr	x8, [sp, #488]
   20af8:	cbz	x8, 20b28 <rpl_regexec@@Base+0x8f4>
   20afc:	sub	x0, x29, #0x64
   20b00:	add	x1, sp, #0x130
   20b04:	mov	x2, x26
   20b08:	mov	x23, x11
   20b0c:	mov	x20, x15
   20b10:	mov	x26, x12
   20b14:	bl	2aa28 <rpl_re_set_registers@@Base+0x78d8>
   20b18:	mov	x12, x26
   20b1c:	mov	x11, x23
   20b20:	mov	x15, x20
   20b24:	mov	x26, x0
   20b28:	cbz	x26, 20b8c <rpl_regexec@@Base+0x958>
   20b2c:	ldrsb	w8, [x26, #104]
   20b30:	cmp	x12, x26
   20b34:	cset	w23, eq  // eq = none
   20b38:	tst	w25, w23
   20b3c:	csel	x15, x11, x15, ne  // ne = any
   20b40:	tbz	w8, #4, 20a78 <rpl_regexec@@Base+0x844>
   20b44:	tbz	w8, #31, 20a60 <rpl_regexec@@Base+0x82c>
   20b48:	ldr	x8, [sp, #376]
   20b4c:	tbnz	x8, #63, 20b84 <rpl_regexec@@Base+0x950>
   20b50:	ldr	x9, [sp, #392]
   20b54:	cmp	x9, x8
   20b58:	b.eq	21e58 <rpl_regexec@@Base+0x1c24>  // b.none
   20b5c:	ldr	w9, [sp, #448]
   20b60:	cmp	w9, #0x2
   20b64:	b.lt	20c18 <rpl_regexec@@Base+0x9e4>  // b.tstop
   20b68:	ldr	x9, [sp, #320]
   20b6c:	ldr	w20, [x9, x8, lsl #2]
   20b70:	cmn	w20, #0x1
   20b74:	b.ne	20c40 <rpl_regexec@@Base+0xa0c>  // b.any
   20b78:	cmp	x8, #0x0
   20b7c:	sub	x8, x8, #0x1
   20b80:	b.gt	20b6c <rpl_regexec@@Base+0x938>
   20b84:	ldr	w8, [sp, #416]
   20b88:	b	20c70 <rpl_regexec@@Base+0xa3c>
   20b8c:	ldur	w8, [x29, #-100]
   20b90:	cbnz	w8, 22a98 <rpl_regexec@@Base+0x2864>
   20b94:	ldr	x8, [sp, #216]
   20b98:	ldr	w9, [sp, #188]
   20b9c:	cmp	x8, #0x0
   20ba0:	cset	w8, ne  // ne = any
   20ba4:	bic	w8, w8, w9
   20ba8:	tbnz	w8, #0, 222c0 <rpl_regexec@@Base+0x208c>
   20bac:	ldr	x10, [sp, #488]
   20bb0:	ldr	x23, [sp, #248]
   20bb4:	cbz	x10, 21fa4 <rpl_regexec@@Base+0x1d70>
   20bb8:	str	w25, [sp, #120]
   20bbc:	mov	x25, x11
   20bc0:	mov	x20, x15
   20bc4:	str	x12, [sp, #128]
   20bc8:	ldr	x8, [sp, #496]
   20bcc:	ldr	x9, [sp, #376]
   20bd0:	add	x10, x10, #0x8
   20bd4:	cmp	x9, x8
   20bd8:	b.ge	21fa0 <rpl_regexec@@Base+0x1d6c>  // b.tcont
   20bdc:	add	x11, x9, #0x1
   20be0:	str	x11, [sp, #376]
   20be4:	ldr	x12, [x10, x9, lsl #3]
   20be8:	mov	x9, x11
   20bec:	cbz	x12, 20bd4 <rpl_regexec@@Base+0x9a0>
   20bf0:	sub	x0, x29, #0x64
   20bf4:	add	x1, sp, #0x130
   20bf8:	mov	x2, xzr
   20bfc:	bl	2aa28 <rpl_re_set_registers@@Base+0x78d8>
   20c00:	mov	x26, x0
   20c04:	cbnz	x0, 20cdc <rpl_regexec@@Base+0xaa8>
   20c08:	ldur	w8, [x29, #-100]
   20c0c:	cbnz	w8, 20cdc <rpl_regexec@@Base+0xaa8>
   20c10:	ldr	x10, [sp, #488]
   20c14:	b	20bc8 <rpl_regexec@@Base+0x994>
   20c18:	ldr	x9, [sp, #312]
   20c1c:	ldr	x10, [sp, #432]
   20c20:	ldrb	w8, [x9, x8]
   20c24:	lsr	x9, x8, #3
   20c28:	and	x9, x9, #0x18
   20c2c:	ldr	x9, [x10, x9]
   20c30:	lsr	x9, x9, x8
   20c34:	tbz	w9, #0, 20c64 <rpl_regexec@@Base+0xa30>
   20c38:	mov	w8, #0x1                   	// #1
   20c3c:	b	20c70 <rpl_regexec@@Base+0xa3c>
   20c40:	ldrb	w8, [sp, #446]
   20c44:	cbnz	w8, 21e8c <rpl_regexec@@Base+0x1c58>
   20c48:	cmp	w20, #0xa
   20c4c:	b.ne	20c6c <rpl_regexec@@Base+0xa38>  // b.any
   20c50:	ldrb	w8, [sp, #445]
   20c54:	cmp	w8, #0x0
   20c58:	cset	w8, ne  // ne = any
   20c5c:	lsl	w8, w8, #1
   20c60:	b	20c70 <rpl_regexec@@Base+0xa3c>
   20c64:	cmp	w8, #0xa
   20c68:	b.eq	20c50 <rpl_regexec@@Base+0xa1c>  // b.none
   20c6c:	mov	w8, wzr
   20c70:	ldr	x9, [x26, #16]
   20c74:	cmp	x9, #0x1
   20c78:	b.lt	20a78 <rpl_regexec@@Base+0x844>  // b.tstop
   20c7c:	ldr	x11, [sp, #456]
   20c80:	ldr	x10, [x26, #24]
   20c84:	ldr	x11, [x11]
   20c88:	b	20c98 <rpl_regexec@@Base+0xa64>
   20c8c:	subs	x9, x9, #0x1
   20c90:	add	x10, x10, #0x8
   20c94:	b.eq	20a78 <rpl_regexec@@Base+0x844>  // b.none
   20c98:	ldr	x12, [x10]
   20c9c:	add	x13, x11, x12, lsl #4
   20ca0:	ldr	w13, [x13, #8]
   20ca4:	and	w14, w13, #0xff
   20ca8:	cmp	w14, #0x2
   20cac:	b.ne	20c8c <rpl_regexec@@Base+0xa58>  // b.any
   20cb0:	tst	w13, #0x3ff00
   20cb4:	b.eq	20a5c <rpl_regexec@@Base+0x828>  // b.none
   20cb8:	tbnz	w8, #0, 20cc0 <rpl_regexec@@Base+0xa8c>
   20cbc:	tbnz	w13, #10, 20c8c <rpl_regexec@@Base+0xa58>
   20cc0:	tbz	w8, #0, 20cc8 <rpl_regexec@@Base+0xa94>
   20cc4:	tbnz	w13, #11, 20c8c <rpl_regexec@@Base+0xa58>
   20cc8:	tbnz	w8, #1, 20cd0 <rpl_regexec@@Base+0xa9c>
   20ccc:	tbnz	w13, #13, 20c8c <rpl_regexec@@Base+0xa58>
   20cd0:	tbnz	w8, #3, 20a5c <rpl_regexec@@Base+0x828>
   20cd4:	tbnz	w13, #15, 20c8c <rpl_regexec@@Base+0xa58>
   20cd8:	b	20a5c <rpl_regexec@@Base+0x828>
   20cdc:	mov	x11, x25
   20ce0:	ldr	w25, [sp, #120]
   20ce4:	ldr	x12, [sp, #128]
   20ce8:	mov	x15, x20
   20cec:	cbnz	x26, 20b2c <rpl_regexec@@Base+0x8f8>
   20cf0:	b	222c0 <rpl_regexec@@Base+0x208c>
   20cf4:	ldr	x8, [x12, #16]
   20cf8:	str	x24, [sp, #136]
   20cfc:	cmp	x8, #0x1
   20d00:	b.lt	21de4 <rpl_regexec@@Base+0x1bb0>  // b.tstop
   20d04:	ldr	x13, [sp, #456]
   20d08:	mov	x23, xzr
   20d0c:	str	x11, [sp, #104]
   20d10:	str	x12, [sp, #128]
   20d14:	stp	x15, x13, [sp, #112]
   20d18:	b	20d2c <rpl_regexec@@Base+0xaf8>
   20d1c:	ldr	x8, [x12, #16]
   20d20:	add	x23, x23, #0x1
   20d24:	cmp	x23, x8
   20d28:	b.ge	21de4 <rpl_regexec@@Base+0x1bb0>  // b.tcont
   20d2c:	ldr	x8, [x12, #24]
   20d30:	ldr	x20, [x8, x23, lsl #3]
   20d34:	ldr	x8, [x13]
   20d38:	add	x8, x8, x20, lsl #4
   20d3c:	ldr	w24, [x8, #8]
   20d40:	tbz	w24, #20, 20d1c <rpl_regexec@@Base+0xae8>
   20d44:	tst	w24, #0x3ff00
   20d48:	b.eq	20e20 <rpl_regexec@@Base+0xbec>  // b.none
   20d4c:	ldr	x8, [sp, #376]
   20d50:	tbnz	x8, #63, 20d88 <rpl_regexec@@Base+0xb54>
   20d54:	ldr	x9, [sp, #392]
   20d58:	cmp	x9, x8
   20d5c:	b.eq	21008 <rpl_regexec@@Base+0xdd4>  // b.none
   20d60:	ldr	w9, [sp, #448]
   20d64:	cmp	w9, #0x2
   20d68:	b.lt	20d90 <rpl_regexec@@Base+0xb5c>  // b.tstop
   20d6c:	ldr	x9, [sp, #320]
   20d70:	ldr	w26, [x9, x8, lsl #2]
   20d74:	cmn	w26, #0x1
   20d78:	b.ne	20dbc <rpl_regexec@@Base+0xb88>  // b.any
   20d7c:	cmp	x8, #0x0
   20d80:	sub	x8, x8, #0x1
   20d84:	b.gt	20d70 <rpl_regexec@@Base+0xb3c>
   20d88:	ldr	w8, [sp, #416]
   20d8c:	b	20dec <rpl_regexec@@Base+0xbb8>
   20d90:	ldr	x9, [sp, #312]
   20d94:	ldr	x10, [sp, #432]
   20d98:	ldrb	w8, [x9, x8]
   20d9c:	lsr	x9, x8, #3
   20da0:	and	x9, x9, #0x18
   20da4:	ldr	x9, [x10, x9]
   20da8:	lsr	x9, x9, x8
   20dac:	tbz	w9, #0, 20de0 <rpl_regexec@@Base+0xbac>
   20db0:	mov	w9, wzr
   20db4:	mov	w8, #0x1                   	// #1
   20db8:	b	20dfc <rpl_regexec@@Base+0xbc8>
   20dbc:	ldrb	w8, [sp, #446]
   20dc0:	cbnz	w8, 2103c <rpl_regexec@@Base+0xe08>
   20dc4:	cmp	w26, #0xa
   20dc8:	b.ne	20de8 <rpl_regexec@@Base+0xbb4>  // b.any
   20dcc:	ldrb	w8, [sp, #445]
   20dd0:	cmp	w8, #0x0
   20dd4:	cset	w8, ne  // ne = any
   20dd8:	lsl	w8, w8, #1
   20ddc:	b	20dec <rpl_regexec@@Base+0xbb8>
   20de0:	cmp	w8, #0xa
   20de4:	b.eq	20dcc <rpl_regexec@@Base+0xb98>  // b.none
   20de8:	mov	w8, wzr
   20dec:	tst	w8, #0x1
   20df0:	cset	w9, eq  // eq = none
   20df4:	tbz	w24, #10, 20dfc <rpl_regexec@@Base+0xbc8>
   20df8:	tbz	w8, #0, 20d1c <rpl_regexec@@Base+0xae8>
   20dfc:	ldr	x10, [x13]
   20e00:	add	x10, x10, x20, lsl #4
   20e04:	ldr	w10, [x10, #8]
   20e08:	tbnz	w9, #0, 20e10 <rpl_regexec@@Base+0xbdc>
   20e0c:	tbnz	w10, #11, 20d1c <rpl_regexec@@Base+0xae8>
   20e10:	tbnz	w8, #1, 20e18 <rpl_regexec@@Base+0xbe4>
   20e14:	tbnz	w10, #13, 20d1c <rpl_regexec@@Base+0xae8>
   20e18:	tbnz	w8, #3, 20e20 <rpl_regexec@@Base+0xbec>
   20e1c:	tbnz	w10, #15, 20d1c <rpl_regexec@@Base+0xae8>
   20e20:	ldr	x3, [sp, #376]
   20e24:	add	x2, sp, #0x130
   20e28:	mov	x0, x13
   20e2c:	mov	x1, x20
   20e30:	bl	2c21c <rpl_re_set_registers@@Base+0x90cc>
   20e34:	ldp	x13, x12, [sp, #120]
   20e38:	ldp	x11, x15, [sp, #104]
   20e3c:	cbz	w0, 20d1c <rpl_regexec@@Base+0xae8>
   20e40:	ldr	w10, [sp, #528]
   20e44:	ldp	x9, x26, [sp, #368]
   20e48:	ldr	x24, [sp, #496]
   20e4c:	ldr	x8, [sp, #392]
   20e50:	sxtw	x11, w0
   20e54:	add	x27, x26, x11
   20e58:	cmp	w10, w0
   20e5c:	csel	w10, w0, w10, lt  // lt = tstop
   20e60:	cmp	x9, x27
   20e64:	str	x11, [sp, #96]
   20e68:	str	w10, [sp, #528]
   20e6c:	b.gt	20e78 <rpl_regexec@@Base+0xc44>
   20e70:	cmp	x9, x8
   20e74:	b.lt	20e8c <rpl_regexec@@Base+0xc58>  // b.tstop
   20e78:	ldr	x9, [sp, #352]
   20e7c:	cmp	x9, x27
   20e80:	b.gt	20ea0 <rpl_regexec@@Base+0xc6c>
   20e84:	cmp	x9, x8
   20e88:	b.ge	20ea0 <rpl_regexec@@Base+0xc6c>  // b.tcont
   20e8c:	add	w1, w27, #0x1
   20e90:	add	x0, sp, #0x130
   20e94:	bl	2a848 <rpl_re_set_registers@@Base+0x76f8>
   20e98:	ldr	x13, [sp, #120]
   20e9c:	cbnz	w0, 21e6c <rpl_regexec@@Base+0x1c38>
   20ea0:	subs	x8, x27, x24
   20ea4:	b.le	20ec8 <rpl_regexec@@Base+0xc94>
   20ea8:	ldr	x9, [sp, #488]
   20eac:	lsl	x2, x8, #3
   20eb0:	mov	w1, wzr
   20eb4:	add	x9, x9, x24, lsl #3
   20eb8:	add	x0, x9, #0x8
   20ebc:	bl	a630 <memset@plt>
   20ec0:	ldr	x13, [sp, #120]
   20ec4:	str	x27, [sp, #496]
   20ec8:	stur	wzr, [x29, #-40]
   20ecc:	ldr	x8, [x13, #24]
   20ed0:	ldr	x9, [sp, #488]
   20ed4:	ldr	x10, [x13, #48]
   20ed8:	ldr	x8, [x8, x20, lsl #3]
   20edc:	ldr	x20, [x9, x27, lsl #3]
   20ee0:	mov	w9, #0x18                  	// #24
   20ee4:	madd	x2, x8, x9, x10
   20ee8:	cbz	x20, 20f04 <rpl_regexec@@Base+0xcd0>
   20eec:	ldr	x1, [x20, #80]
   20ef0:	sub	x0, x29, #0x60
   20ef4:	bl	2ac30 <rpl_re_set_registers@@Base+0x7ae0>
   20ef8:	stur	w0, [x29, #-40]
   20efc:	cbz	w0, 20f14 <rpl_regexec@@Base+0xce0>
   20f00:	b	21e70 <rpl_regexec@@Base+0x1c3c>
   20f04:	ldr	x8, [x2, #16]
   20f08:	ldr	q0, [x2]
   20f0c:	stur	x8, [x29, #-80]
   20f10:	stur	q0, [x29, #-96]
   20f14:	cmp	x27, #0x0
   20f18:	b.le	2101c <rpl_regexec@@Base+0xde8>
   20f1c:	ldr	x9, [sp, #392]
   20f20:	ldr	x1, [sp, #120]
   20f24:	sub	x8, x27, #0x1
   20f28:	cmp	x9, x8
   20f2c:	b.eq	21028 <rpl_regexec@@Base+0xdf4>  // b.none
   20f30:	ldr	w9, [sp, #448]
   20f34:	cmp	w9, #0x2
   20f38:	b.lt	20f6c <rpl_regexec@@Base+0xd38>  // b.tstop
   20f3c:	ldr	x9, [sp, #320]
   20f40:	ldr	x8, [sp, #96]
   20f44:	sub	x9, x9, #0x4
   20f48:	add	x8, x26, x8
   20f4c:	ldr	w26, [x9, x8, lsl #2]
   20f50:	cmn	w26, #0x1
   20f54:	b.ne	20f94 <rpl_regexec@@Base+0xd60>  // b.any
   20f58:	sub	x8, x8, #0x1
   20f5c:	cmp	x8, #0x0
   20f60:	b.gt	20f4c <rpl_regexec@@Base+0xd18>
   20f64:	ldr	w3, [sp, #416]
   20f68:	b	20fc4 <rpl_regexec@@Base+0xd90>
   20f6c:	ldr	x9, [sp, #312]
   20f70:	ldr	x10, [sp, #432]
   20f74:	ldrb	w8, [x9, x8]
   20f78:	lsr	x9, x8, #3
   20f7c:	and	x9, x9, #0x18
   20f80:	ldr	x9, [x10, x9]
   20f84:	lsr	x9, x9, x8
   20f88:	tbz	w9, #0, 20fb8 <rpl_regexec@@Base+0xd84>
   20f8c:	mov	w3, #0x1                   	// #1
   20f90:	b	20fc4 <rpl_regexec@@Base+0xd90>
   20f94:	ldrb	w8, [sp, #446]
   20f98:	cbnz	w8, 21080 <rpl_regexec@@Base+0xe4c>
   20f9c:	cmp	w26, #0xa
   20fa0:	b.ne	20fc0 <rpl_regexec@@Base+0xd8c>  // b.any
   20fa4:	ldrb	w8, [sp, #445]
   20fa8:	cmp	w8, #0x0
   20fac:	cset	w8, ne  // ne = any
   20fb0:	lsl	w3, w8, #1
   20fb4:	b	20fc4 <rpl_regexec@@Base+0xd90>
   20fb8:	cmp	w8, #0xa
   20fbc:	b.eq	20fa4 <rpl_regexec@@Base+0xd70>  // b.none
   20fc0:	mov	w3, wzr
   20fc4:	sub	x0, x29, #0x28
   20fc8:	sub	x2, x29, #0x60
   20fcc:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   20fd0:	ldr	x8, [sp, #488]
   20fd4:	str	x0, [x8, x27, lsl #3]
   20fd8:	cbz	x20, 20fe4 <rpl_regexec@@Base+0xdb0>
   20fdc:	ldur	x0, [x29, #-80]
   20fe0:	bl	a960 <free@plt>
   20fe4:	ldr	x8, [sp, #488]
   20fe8:	ldp	x11, x15, [sp, #104]
   20fec:	ldp	x13, x12, [sp, #120]
   20ff0:	ldr	x8, [x8, x27, lsl #3]
   20ff4:	ldr	x27, [sp, #240]
   20ff8:	cbnz	x8, 20d1c <rpl_regexec@@Base+0xae8>
   20ffc:	ldur	w0, [x29, #-40]
   21000:	cbz	w0, 20d1c <rpl_regexec@@Base+0xae8>
   21004:	b	21e7c <rpl_regexec@@Base+0x1c48>
   21008:	ldr	w8, [sp, #464]
   2100c:	mov	w9, #0xa                   	// #10
   21010:	and	w8, w8, #0x2
   21014:	eor	w8, w8, w9
   21018:	b	20dec <rpl_regexec@@Base+0xbb8>
   2101c:	ldr	w3, [sp, #416]
   21020:	ldr	x1, [sp, #120]
   21024:	b	20fc4 <rpl_regexec@@Base+0xd90>
   21028:	ldr	w8, [sp, #464]
   2102c:	mov	w9, #0xa                   	// #10
   21030:	and	w8, w8, #0x2
   21034:	eor	w3, w8, w9
   21038:	b	20fc4 <rpl_regexec@@Base+0xd90>
   2103c:	mov	w0, w26
   21040:	str	x20, [sp, #96]
   21044:	mov	w27, w25
   21048:	mov	x25, x11
   2104c:	mov	x20, x15
   21050:	bl	ac10 <iswalnum@plt>
   21054:	mov	w9, wzr
   21058:	cmp	w26, #0x5f
   2105c:	mov	w8, #0x1                   	// #1
   21060:	mov	x15, x20
   21064:	mov	x11, x25
   21068:	mov	w25, w27
   2106c:	b.eq	210a0 <rpl_regexec@@Base+0xe6c>  // b.none
   21070:	ldp	x13, x12, [sp, #120]
   21074:	ldr	x20, [sp, #96]
   21078:	cbz	w0, 20dc4 <rpl_regexec@@Base+0xb90>
   2107c:	b	20dfc <rpl_regexec@@Base+0xbc8>
   21080:	mov	w0, w26
   21084:	bl	ac10 <iswalnum@plt>
   21088:	cmp	w26, #0x5f
   2108c:	mov	w3, #0x1                   	// #1
   21090:	b.eq	210ac <rpl_regexec@@Base+0xe78>  // b.none
   21094:	ldr	x1, [sp, #120]
   21098:	cbz	w0, 20f9c <rpl_regexec@@Base+0xd68>
   2109c:	b	20fc4 <rpl_regexec@@Base+0xd90>
   210a0:	ldp	x13, x12, [sp, #120]
   210a4:	ldr	x20, [sp, #96]
   210a8:	b	20dfc <rpl_regexec@@Base+0xbc8>
   210ac:	ldr	x1, [sp, #120]
   210b0:	b	20fc4 <rpl_regexec@@Base+0xd90>
   210b4:	ldr	x23, [x12, #96]
   210b8:	cbnz	x23, 21d90 <rpl_regexec@@Base+0x1b5c>
   210bc:	ldr	x8, [sp, #456]
   210c0:	mov	w0, #0x3800                	// #14336
   210c4:	stp	x12, x24, [sp, #128]
   210c8:	stp	x19, x22, [sp]
   210cc:	str	w25, [sp, #120]
   210d0:	stp	x11, x15, [sp, #104]
   210d4:	str	x8, [sp, #72]
   210d8:	bl	a540 <malloc@plt>
   210dc:	str	x0, [sp, #40]
   210e0:	cbz	x0, 21f5c <rpl_regexec@@Base+0x1d28>
   210e4:	stp	xzr, xzr, [x27]
   210e8:	ldr	x8, [sp, #128]
   210ec:	movi	v0.2d, #0x0
   210f0:	stp	q0, q0, [x29, #-96]
   210f4:	ldr	x8, [x8, #16]
   210f8:	cmp	x8, #0x1
   210fc:	b.lt	21a58 <rpl_regexec@@Base+0x1824>  // b.tstop
   21100:	ldr	x9, [sp, #40]
   21104:	mov	w8, #0x1800                	// #6144
   21108:	str	xzr, [sp, #48]
   2110c:	str	xzr, [sp, #96]
   21110:	add	x8, x9, x8
   21114:	str	x8, [sp, #24]
   21118:	b	21150 <rpl_regexec@@Base+0xf1c>
   2111c:	ldr	x8, [sp, #64]
   21120:	str	x24, [x0]
   21124:	add	x8, x8, #0x1
   21128:	str	x8, [sp, #96]
   2112c:	movi	v0.2d, #0x0
   21130:	stp	q0, q0, [x29, #-96]
   21134:	ldr	x8, [sp, #128]
   21138:	ldr	x9, [sp, #48]
   2113c:	ldr	x8, [x8, #16]
   21140:	add	x9, x9, #0x1
   21144:	str	x9, [sp, #48]
   21148:	cmp	x9, x8
   2114c:	b.ge	2163c <rpl_regexec@@Base+0x1408>  // b.tcont
   21150:	ldr	x8, [sp, #128]
   21154:	ldr	x10, [sp, #48]
   21158:	ldr	x9, [x8, #24]
   2115c:	ldr	x8, [sp, #72]
   21160:	ldr	x9, [x9, x10, lsl #3]
   21164:	ldr	x8, [x8]
   21168:	add	x8, x8, x9, lsl #4
   2116c:	str	x8, [sp, #32]
   21170:	ldr	w9, [x8, #8]!
   21174:	and	w10, w9, #0xff
   21178:	cmp	w10, #0x1
   2117c:	str	w10, [sp, #56]
   21180:	b.ne	21238 <rpl_regexec@@Base+0x1004>  // b.any
   21184:	ldr	x10, [sp, #32]
   21188:	sub	x13, x29, #0x60
   2118c:	mov	w14, #0x1                   	// #1
   21190:	ldrb	w10, [x10]
   21194:	lsr	x11, x10, #3
   21198:	and	x11, x11, #0x18
   2119c:	ldr	x12, [x13, x11]
   211a0:	lsl	x10, x14, x10
   211a4:	orr	x10, x10, x12
   211a8:	str	x10, [x13, x11]
   211ac:	and	w10, w9, #0x3ff00
   211b0:	cbz	w10, 21414 <rpl_regexec@@Base+0x11e0>
   211b4:	tbz	w9, #13, 211d0 <rpl_regexec@@Base+0xf9c>
   211b8:	ldur	x10, [x29, #-96]
   211bc:	movi	v0.2d, #0x0
   211c0:	stp	q0, q0, [x29, #-96]
   211c4:	tbz	w10, #10, 21134 <rpl_regexec@@Base+0xf00>
   211c8:	mov	w10, #0x400                 	// #1024
   211cc:	stur	x10, [x29, #-96]
   211d0:	tbnz	w9, #15, 2112c <rpl_regexec@@Base+0xef8>
   211d4:	tbz	w9, #10, 21370 <rpl_regexec@@Base+0x113c>
   211d8:	ldr	w10, [sp, #56]
   211dc:	cmp	w10, #0x1
   211e0:	b.ne	211ec <rpl_regexec@@Base+0xfb8>  // b.any
   211e4:	ldrb	w10, [x8, #2]
   211e8:	tbz	w10, #6, 2112c <rpl_regexec@@Base+0xef8>
   211ec:	ldr	x10, [sp, #72]
   211f0:	ldr	w10, [x10, #180]
   211f4:	cmp	w10, #0x1
   211f8:	b.le	21330 <rpl_regexec@@Base+0x10fc>
   211fc:	ldr	x10, [sp, #72]
   21200:	ldp	q2, q3, [x29, #-96]
   21204:	ldr	x11, [x10, #120]
   21208:	ldur	q0, [x10, #184]
   2120c:	ldr	q1, [x11]
   21210:	orn	v0.16b, v0.16b, v1.16b
   21214:	and	v0.16b, v2.16b, v0.16b
   21218:	stur	q0, [x29, #-96]
   2121c:	ldur	q1, [x10, #200]
   21220:	ldr	q2, [x11, #16]
   21224:	mov	x10, v0.d[1]
   21228:	fmov	x11, d0
   2122c:	orn	v0.16b, v1.16b, v2.16b
   21230:	and	v0.16b, v3.16b, v0.16b
   21234:	b	21354 <rpl_regexec@@Base+0x1120>
   21238:	ldr	w10, [sp, #56]
   2123c:	cmp	w10, #0x7
   21240:	b.eq	212bc <rpl_regexec@@Base+0x1088>  // b.none
   21244:	ldr	w10, [sp, #56]
   21248:	cmp	w10, #0x5
   2124c:	b.eq	21284 <rpl_regexec@@Base+0x1050>  // b.none
   21250:	ldr	w10, [sp, #56]
   21254:	cmp	w10, #0x3
   21258:	b.ne	21134 <rpl_regexec@@Base+0xf00>  // b.any
   2125c:	ldr	x10, [sp, #32]
   21260:	ldp	q1, q2, [x29, #-96]
   21264:	ldr	x10, [x10]
   21268:	ldr	q0, [x10]
   2126c:	orr	v0.16b, v1.16b, v0.16b
   21270:	stur	q0, [x29, #-96]
   21274:	ldr	q0, [x10, #16]
   21278:	orr	v0.16b, v2.16b, v0.16b
   2127c:	stur	q0, [x29, #-80]
   21280:	b	211ac <rpl_regexec@@Base+0xf78>
   21284:	ldr	x10, [sp, #72]
   21288:	ldr	w10, [x10, #180]
   2128c:	cmp	w10, #0x2
   21290:	b.lt	212f4 <rpl_regexec@@Base+0x10c0>  // b.tstop
   21294:	ldr	x10, [sp, #72]
   21298:	ldp	q1, q2, [x29, #-96]
   2129c:	ldr	x10, [x10, #120]
   212a0:	ldr	q0, [x10]
   212a4:	orr	v0.16b, v1.16b, v0.16b
   212a8:	ldr	q1, [x10, #16]
   212ac:	fmov	x11, d0
   212b0:	orr	v1.16b, v2.16b, v1.16b
   212b4:	stp	q0, q1, [x29, #-96]
   212b8:	b	21300 <rpl_regexec@@Base+0x10cc>
   212bc:	mov	x10, #0xffffffffffffffff    	// #-1
   212c0:	stp	x10, x10, [x29, #-96]
   212c4:	ldr	x10, [sp, #72]
   212c8:	ldr	x10, [x10, #216]
   212cc:	tbz	w10, #6, 212d4 <rpl_regexec@@Base+0x10a0>
   212d0:	tbz	w10, #7, 211ac <rpl_regexec@@Base+0xf78>
   212d4:	tst	x10, #0x40
   212d8:	mov	x11, #0xfffffffffffffffe    	// #-2
   212dc:	mov	x12, #0xfffffffffffffbfe    	// #-1026
   212e0:	csel	x11, x12, x11, eq  // eq = none
   212e4:	tst	x10, #0x80
   212e8:	mov	x10, #0xfffffffffffffbff    	// #-1025
   212ec:	csel	x10, x10, x11, eq  // eq = none
   212f0:	b	21328 <rpl_regexec@@Base+0x10f4>
   212f4:	movi	v0.2d, #0xffffffffffffffff
   212f8:	mov	x11, #0xffffffffffffffff    	// #-1
   212fc:	stp	q0, q0, [x29, #-96]
   21300:	ldr	x10, [sp, #72]
   21304:	and	x12, x11, #0xfffffffffffffbff
   21308:	ldr	x10, [x10, #216]
   2130c:	tst	x10, #0x40
   21310:	csel	x11, x12, x11, eq  // eq = none
   21314:	tbz	w10, #6, 2131c <rpl_regexec@@Base+0x10e8>
   21318:	tbz	w10, #7, 211ac <rpl_regexec@@Base+0xf78>
   2131c:	and	x12, x11, #0xfffffffffffffffe
   21320:	tst	x10, #0x80
   21324:	csel	x10, x11, x12, eq  // eq = none
   21328:	stur	x10, [x29, #-96]
   2132c:	b	211ac <rpl_regexec@@Base+0xf78>
   21330:	ldr	x10, [sp, #72]
   21334:	ldp	q1, q2, [x29, #-96]
   21338:	ldur	q0, [x10, #184]
   2133c:	and	v0.16b, v1.16b, v0.16b
   21340:	stur	q0, [x29, #-96]
   21344:	ldur	q1, [x10, #200]
   21348:	mov	x10, v0.d[1]
   2134c:	fmov	x11, d0
   21350:	and	v0.16b, v2.16b, v1.16b
   21354:	orr	x10, x10, x11
   21358:	fmov	x11, d0
   2135c:	orr	x10, x10, x11
   21360:	mov	x11, v0.d[1]
   21364:	orr	x10, x10, x11
   21368:	stur	q0, [x29, #-80]
   2136c:	cbz	x10, 21134 <rpl_regexec@@Base+0xf00>
   21370:	tbz	w9, #11, 21414 <rpl_regexec@@Base+0x11e0>
   21374:	ldr	w9, [sp, #56]
   21378:	cmp	w9, #0x1
   2137c:	b.ne	21388 <rpl_regexec@@Base+0x1154>  // b.any
   21380:	ldrb	w8, [x8, #2]
   21384:	tbnz	w8, #6, 2112c <rpl_regexec@@Base+0xef8>
   21388:	ldr	x8, [sp, #72]
   2138c:	ldr	w8, [x8, #180]
   21390:	cmp	w8, #0x1
   21394:	b.le	213d4 <rpl_regexec@@Base+0x11a0>
   21398:	ldr	x8, [sp, #72]
   2139c:	ldp	q2, q3, [x29, #-96]
   213a0:	ldr	x9, [x8, #120]
   213a4:	ldur	q0, [x8, #184]
   213a8:	ldr	q1, [x9]
   213ac:	and	v0.16b, v1.16b, v0.16b
   213b0:	bic	v0.16b, v2.16b, v0.16b
   213b4:	stur	q0, [x29, #-96]
   213b8:	ldur	q1, [x8, #200]
   213bc:	ldr	q2, [x9, #16]
   213c0:	mov	x8, v0.d[1]
   213c4:	fmov	x9, d0
   213c8:	and	v0.16b, v2.16b, v1.16b
   213cc:	bic	v0.16b, v3.16b, v0.16b
   213d0:	b	213f8 <rpl_regexec@@Base+0x11c4>
   213d4:	ldr	x8, [sp, #72]
   213d8:	ldp	q1, q2, [x29, #-96]
   213dc:	ldur	q0, [x8, #184]
   213e0:	bic	v0.16b, v1.16b, v0.16b
   213e4:	stur	q0, [x29, #-96]
   213e8:	ldur	q1, [x8, #200]
   213ec:	mov	x8, v0.d[1]
   213f0:	fmov	x9, d0
   213f4:	bic	v0.16b, v2.16b, v1.16b
   213f8:	orr	x8, x8, x9
   213fc:	fmov	x9, d0
   21400:	orr	x8, x8, x9
   21404:	mov	x9, v0.d[1]
   21408:	orr	x8, x8, x9
   2140c:	stur	q0, [x29, #-80]
   21410:	cbz	x8, 21134 <rpl_regexec@@Base+0xf00>
   21414:	ldr	x8, [sp, #96]
   21418:	cmp	x8, #0x1
   2141c:	b.lt	215cc <rpl_regexec@@Base+0x1398>  // b.tstop
   21420:	ldp	x8, x22, [x29, #-96]
   21424:	ldr	x19, [sp, #40]
   21428:	ldr	x23, [sp, #24]
   2142c:	str	xzr, [sp, #64]
   21430:	str	x8, [sp, #80]
   21434:	ldp	x8, x25, [x29, #-80]
   21438:	str	x8, [sp, #88]
   2143c:	b	21460 <rpl_regexec@@Base+0x122c>
   21440:	ldr	x8, [sp, #64]
   21444:	ldr	x9, [sp, #96]
   21448:	add	x23, x23, #0x20
   2144c:	add	x19, x19, #0x18
   21450:	add	x8, x8, #0x1
   21454:	cmp	x8, x9
   21458:	str	x8, [sp, #64]
   2145c:	b.ge	215b4 <rpl_regexec@@Base+0x1380>  // b.tcont
   21460:	ldr	w8, [sp, #56]
   21464:	cmp	w8, #0x1
   21468:	b.ne	21488 <rpl_regexec@@Base+0x1254>  // b.any
   2146c:	ldr	x8, [sp, #32]
   21470:	ldrb	w8, [x8]
   21474:	lsr	x9, x8, #3
   21478:	and	x9, x9, #0x18
   2147c:	ldr	x9, [x23, x9]
   21480:	lsr	x8, x9, x8
   21484:	tbz	w8, #0, 21440 <rpl_regexec@@Base+0x120c>
   21488:	ldp	x13, x14, [x23]
   2148c:	ldr	x8, [sp, #80]
   21490:	ldp	x16, x15, [x23, #16]
   21494:	and	x9, x14, x22
   21498:	and	x11, x13, x8
   2149c:	ldr	x8, [sp, #88]
   214a0:	orr	x10, x9, x11
   214a4:	and	x8, x16, x8
   214a8:	orr	x12, x10, x8
   214ac:	and	x10, x15, x25
   214b0:	orr	x12, x12, x10
   214b4:	cbz	x12, 21440 <rpl_regexec@@Base+0x120c>
   214b8:	ldr	x17, [sp, #80]
   214bc:	bic	x12, x13, x17
   214c0:	bic	x17, x17, x13
   214c4:	str	x17, [sp, #80]
   214c8:	ldr	x17, [sp, #88]
   214cc:	bic	x13, x14, x22
   214d0:	bic	x22, x22, x14
   214d4:	bic	x14, x16, x17
   214d8:	bic	x17, x17, x16
   214dc:	orr	x16, x13, x12
   214e0:	str	x17, [sp, #88]
   214e4:	orr	x17, x16, x14
   214e8:	bic	x16, x15, x25
   214ec:	orr	x17, x17, x16
   214f0:	bic	x25, x25, x15
   214f4:	cbz	x17, 21584 <rpl_regexec@@Base+0x1350>
   214f8:	ldr	x17, [sp, #96]
   214fc:	ldr	x15, [sp, #24]
   21500:	add	x15, x15, x17, lsl #5
   21504:	stp	x12, x13, [x15]
   21508:	stp	x14, x16, [x15, #16]
   2150c:	stp	x11, x9, [x23]
   21510:	stp	x8, x10, [x23, #16]
   21514:	ldr	x10, [sp, #40]
   21518:	ldr	x8, [x19, #8]
   2151c:	mov	w9, #0x18                  	// #24
   21520:	mov	x11, x19
   21524:	madd	x24, x17, x9, x10
   21528:	str	x8, [x24, #8]
   2152c:	ldr	x9, [x19, #8]
   21530:	cmp	x9, #0x1
   21534:	b.lt	21570 <rpl_regexec@@Base+0x133c>  // b.tstop
   21538:	lsl	x0, x8, #3
   2153c:	mov	x20, x9
   21540:	str	x8, [x24]
   21544:	bl	a540 <malloc@plt>
   21548:	ldr	x9, [sp, #40]
   2154c:	ldr	x10, [sp, #96]
   21550:	mov	w8, #0x18                  	// #24
   21554:	madd	x8, x10, x8, x9
   21558:	str	x0, [x8, #16]
   2155c:	cbz	x0, 21a8c <rpl_regexec@@Base+0x1858>
   21560:	ldr	x1, [x19, #16]
   21564:	lsl	x2, x20, #3
   21568:	bl	a210 <memcpy@plt>
   2156c:	b	21578 <rpl_regexec@@Base+0x1344>
   21570:	stp	xzr, xzr, [x24]
   21574:	str	xzr, [x24, #16]
   21578:	ldr	x8, [sp, #96]
   2157c:	add	x8, x8, #0x1
   21580:	str	x8, [sp, #96]
   21584:	ldr	x8, [sp, #128]
   21588:	ldr	x9, [sp, #48]
   2158c:	mov	x0, x19
   21590:	ldr	x8, [x8, #24]
   21594:	ldr	x1, [x8, x9, lsl #3]
   21598:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   2159c:	tbz	w0, #0, 21a84 <rpl_regexec@@Base+0x1850>
   215a0:	ldp	x8, x9, [sp, #80]
   215a4:	orr	x8, x22, x8
   215a8:	orr	x8, x8, x9
   215ac:	orr	x8, x8, x25
   215b0:	cbnz	x8, 21440 <rpl_regexec@@Base+0x120c>
   215b4:	ldr	x8, [sp, #88]
   215b8:	stur	x22, [x29, #-88]
   215bc:	stp	x8, x25, [x29, #-80]
   215c0:	ldr	x8, [sp, #80]
   215c4:	stur	x8, [x29, #-96]
   215c8:	b	215d0 <rpl_regexec@@Base+0x139c>
   215cc:	str	xzr, [sp, #64]
   215d0:	ldr	x8, [sp, #96]
   215d4:	ldr	x9, [sp, #64]
   215d8:	cmp	x9, x8
   215dc:	b.ne	21134 <rpl_regexec@@Base+0xf00>  // b.any
   215e0:	ldr	x8, [sp, #24]
   215e4:	ldr	x10, [sp, #64]
   215e8:	ldp	q1, q0, [x29, #-96]
   215ec:	ldr	x9, [sp, #48]
   215f0:	mov	w0, #0x8                   	// #8
   215f4:	add	x8, x8, x10, lsl #5
   215f8:	stp	q1, q0, [x8]
   215fc:	ldr	x8, [sp, #128]
   21600:	ldr	x8, [x8, #24]
   21604:	ldr	x24, [x8, x9, lsl #3]
   21608:	ldr	x9, [sp, #40]
   2160c:	mov	w8, #0x18                  	// #24
   21610:	madd	x23, x10, x8, x9
   21614:	mov	w8, #0x1                   	// #1
   21618:	dup	v0.2d, x8
   2161c:	str	q0, [x23]
   21620:	bl	a540 <malloc@plt>
   21624:	str	x0, [x23, #16]
   21628:	cbnz	x0, 2111c <rpl_regexec@@Base+0xee8>
   2162c:	ldr	x8, [sp, #64]
   21630:	stp	xzr, xzr, [x23]
   21634:	str	x8, [sp, #96]
   21638:	b	21aa0 <rpl_regexec@@Base+0x186c>
   2163c:	ldr	x8, [sp, #96]
   21640:	cmp	x8, #0x0
   21644:	b.le	21a5c <rpl_regexec@@Base+0x1828>
   21648:	ldr	x23, [sp, #96]
   2164c:	add	x8, x23, #0x1
   21650:	lsl	x0, x8, #3
   21654:	stp	x8, xzr, [x29, #-40]
   21658:	bl	a540 <malloc@plt>
   2165c:	cmp	x0, #0x0
   21660:	mov	w8, #0xc                   	// #12
   21664:	csel	w9, w8, wzr, eq  // eq = none
   21668:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2166c:	movk	x8, #0xa855
   21670:	movk	x8, #0xaaa, lsl #48
   21674:	mov	x19, x0
   21678:	cmp	x23, x8
   2167c:	stur	x0, [x29, #-24]
   21680:	stur	w9, [x29, #-12]
   21684:	b.hi	21f94 <rpl_regexec@@Base+0x1d60>  // b.pmore
   21688:	cbz	x19, 21f94 <rpl_regexec@@Base+0x1d60>
   2168c:	ldr	x8, [sp, #96]
   21690:	mov	w25, w9
   21694:	add	x8, x8, x8, lsl #1
   21698:	lsl	x0, x8, #3
   2169c:	bl	a540 <malloc@plt>
   216a0:	str	x0, [sp, #64]
   216a4:	cbz	x0, 21f94 <rpl_regexec@@Base+0x1d60>
   216a8:	ldr	x8, [sp, #96]
   216ac:	ldr	x9, [sp, #64]
   216b0:	mov	x22, xzr
   216b4:	mov	x20, xzr
   216b8:	lsl	x8, x8, #3
   216bc:	add	x9, x9, x8
   216c0:	add	x8, x9, x8
   216c4:	stp	xzr, xzr, [sp, #80]
   216c8:	str	wzr, [sp, #20]
   216cc:	stp	x9, xzr, [sp, #48]
   216d0:	str	x8, [sp, #32]
   216d4:	b	2173c <rpl_regexec@@Base+0x1508>
   216d8:	ldr	x9, [sp, #48]
   216dc:	lsl	x8, x20, #3
   216e0:	ldr	x10, [sp, #32]
   216e4:	str	x0, [x9, x8]
   216e8:	ldr	x9, [sp, #64]
   216ec:	ldr	x9, [x9, x8]
   216f0:	str	x9, [x10, x8]
   216f4:	ldr	x8, [sp, #24]
   216f8:	ldr	x12, [sp, #96]
   216fc:	add	x8, x8, x20, lsl #5
   21700:	add	x20, x20, #0x1
   21704:	ldp	x9, x10, [x8]
   21708:	cmp	x20, x12
   2170c:	ldr	x12, [sp, #56]
   21710:	ldp	x11, x8, [x8, #16]
   21714:	orr	x22, x10, x22
   21718:	orr	x12, x9, x12
   2171c:	ldr	x9, [sp, #80]
   21720:	str	x12, [sp, #56]
   21724:	orr	x9, x11, x9
   21728:	str	x9, [sp, #80]
   2172c:	ldr	x9, [sp, #88]
   21730:	orr	x9, x8, x9
   21734:	str	x9, [sp, #88]
   21738:	b.eq	21870 <rpl_regexec@@Base+0x163c>  // b.none
   2173c:	ldr	x9, [sp, #40]
   21740:	mov	w8, #0x18                  	// #24
   21744:	stur	xzr, [x29, #-32]
   21748:	madd	x19, x20, x8, x9
   2174c:	ldr	x8, [x19, #8]!
   21750:	cmp	x8, #0x1
   21754:	b.lt	217c0 <rpl_regexec@@Base+0x158c>  // b.tstop
   21758:	ldr	x10, [sp, #40]
   2175c:	mov	w9, #0x18                  	// #24
   21760:	mov	x24, xzr
   21764:	madd	x9, x20, x9, x10
   21768:	ldr	x23, [x9, #16]
   2176c:	ldr	x9, [sp, #72]
   21770:	b	21780 <rpl_regexec@@Base+0x154c>
   21774:	add	x24, x24, #0x1
   21778:	cmp	x24, x8
   2177c:	b.ge	217bc <rpl_regexec@@Base+0x1588>  // b.tcont
   21780:	ldr	x10, [x9, #24]
   21784:	ldr	x11, [x23, x24, lsl #3]
   21788:	ldr	x10, [x10, x11, lsl #3]
   2178c:	cmn	x10, #0x1
   21790:	b.eq	21774 <rpl_regexec@@Base+0x1540>  // b.none
   21794:	ldr	x8, [x9, #48]
   21798:	mov	w9, #0x18                  	// #24
   2179c:	sub	x0, x29, #0x28
   217a0:	madd	x1, x10, x9, x8
   217a4:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   217a8:	cbnz	w0, 21f14 <rpl_regexec@@Base+0x1ce0>
   217ac:	ldr	x8, [x19]
   217b0:	ldr	x9, [sp, #72]
   217b4:	mov	w25, wzr
   217b8:	b	21774 <rpl_regexec@@Base+0x1540>
   217bc:	stur	w25, [x29, #-12]
   217c0:	ldr	x1, [sp, #72]
   217c4:	sub	x0, x29, #0xc
   217c8:	sub	x2, x29, #0x28
   217cc:	mov	w3, wzr
   217d0:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   217d4:	ldur	w25, [x29, #-12]
   217d8:	ldr	x8, [sp, #64]
   217dc:	str	x0, [x8, x20, lsl #3]
   217e0:	cbnz	x0, 217e8 <rpl_regexec@@Base+0x15b4>
   217e4:	cbnz	w25, 21f18 <rpl_regexec@@Base+0x1ce4>
   217e8:	ldrsb	w8, [x0, #104]
   217ec:	tbz	w8, #31, 216d8 <rpl_regexec@@Base+0x14a4>
   217f0:	ldr	x1, [sp, #72]
   217f4:	sub	x0, x29, #0xc
   217f8:	sub	x2, x29, #0x28
   217fc:	mov	w3, #0x1                   	// #1
   21800:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   21804:	ldr	x8, [sp, #48]
   21808:	str	x0, [x8, x20, lsl #3]
   2180c:	cbnz	x0, 21818 <rpl_regexec@@Base+0x15e4>
   21810:	ldur	w8, [x29, #-12]
   21814:	cbnz	w8, 21f18 <rpl_regexec@@Base+0x1ce4>
   21818:	ldr	x8, [sp, #64]
   2181c:	ldr	x8, [x8, x20, lsl #3]
   21820:	cmp	x8, x0
   21824:	b.eq	21844 <rpl_regexec@@Base+0x1610>  // b.none
   21828:	ldr	x8, [sp, #72]
   2182c:	ldr	w9, [sp, #20]
   21830:	ldr	w8, [x8, #180]
   21834:	cmp	w8, #0x1
   21838:	cset	w8, gt
   2183c:	orr	w9, w9, w8
   21840:	str	w9, [sp, #20]
   21844:	ldr	x1, [sp, #72]
   21848:	sub	x0, x29, #0xc
   2184c:	sub	x2, x29, #0x28
   21850:	mov	w3, #0x2                   	// #2
   21854:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   21858:	ldur	w25, [x29, #-12]
   2185c:	ldr	x8, [sp, #32]
   21860:	str	x0, [x8, x20, lsl #3]
   21864:	cbnz	x0, 216f4 <rpl_regexec@@Base+0x14c0>
   21868:	cbz	w25, 216f4 <rpl_regexec@@Base+0x14c0>
   2186c:	b	21f18 <rpl_regexec@@Base+0x1ce4>
   21870:	ldr	w8, [sp, #20]
   21874:	tbnz	w8, #0, 21ad8 <rpl_regexec@@Base+0x18a4>
   21878:	mov	w0, #0x8                   	// #8
   2187c:	mov	w1, #0x100                 	// #256
   21880:	bl	a6b0 <calloc@plt>
   21884:	str	x0, [x27]
   21888:	cbz	x0, 21f18 <rpl_regexec@@Base+0x1ce4>
   2188c:	ldr	x8, [sp, #56]
   21890:	cbz	x8, 218f4 <rpl_regexec@@Base+0x16c0>
   21894:	ldr	x9, [sp, #56]
   21898:	mov	x8, xzr
   2189c:	mov	w10, #0x1                   	// #1
   218a0:	tbnz	w9, #0, 218b8 <rpl_regexec@@Base+0x1684>
   218a4:	lsl	x10, x10, #1
   218a8:	lsr	x9, x9, #1
   218ac:	add	x8, x8, #0x1
   218b0:	cbnz	x9, 218a0 <rpl_regexec@@Base+0x166c>
   218b4:	b	218f4 <rpl_regexec@@Base+0x16c0>
   218b8:	ldr	x12, [sp, #24]
   218bc:	mov	x11, #0xfffffffffffffff8    	// #-8
   218c0:	ldr	x13, [x12], #32
   218c4:	add	x11, x11, #0x8
   218c8:	tst	x13, x10
   218cc:	b.eq	218c0 <rpl_regexec@@Base+0x168c>  // b.none
   218d0:	ldr	x12, [sp, #72]
   218d4:	ldr	x13, [sp, #48]
   218d8:	ldr	x12, [x12, #184]
   218dc:	tst	x12, x10
   218e0:	ldr	x12, [sp, #64]
   218e4:	csel	x12, x12, x13, eq  // eq = none
   218e8:	ldr	x11, [x12, x11]
   218ec:	str	x11, [x0, x8, lsl #3]
   218f0:	b	218a4 <rpl_regexec@@Base+0x1670>
   218f4:	cbz	x22, 21960 <rpl_regexec@@Base+0x172c>
   218f8:	ldr	x9, [sp, #40]
   218fc:	mov	w8, #0x1808                	// #6152
   21900:	mov	w10, #0x1                   	// #1
   21904:	add	x8, x9, x8
   21908:	mov	w9, #0x40                  	// #64
   2190c:	tbnz	w22, #0, 21924 <rpl_regexec@@Base+0x16f0>
   21910:	lsl	x10, x10, #1
   21914:	lsr	x22, x22, #1
   21918:	add	x9, x9, #0x1
   2191c:	cbnz	x22, 2190c <rpl_regexec@@Base+0x16d8>
   21920:	b	21960 <rpl_regexec@@Base+0x172c>
   21924:	mov	x11, #0xfffffffffffffff8    	// #-8
   21928:	mov	x12, x8
   2192c:	ldr	x13, [x12], #32
   21930:	add	x11, x11, #0x8
   21934:	tst	x13, x10
   21938:	b.eq	2192c <rpl_regexec@@Base+0x16f8>  // b.none
   2193c:	ldr	x12, [sp, #72]
   21940:	ldr	x13, [sp, #48]
   21944:	ldr	x12, [x12, #192]
   21948:	tst	x12, x10
   2194c:	ldr	x12, [sp, #64]
   21950:	csel	x12, x12, x13, eq  // eq = none
   21954:	ldr	x11, [x12, x11]
   21958:	str	x11, [x0, x9, lsl #3]
   2195c:	b	21910 <rpl_regexec@@Base+0x16dc>
   21960:	ldr	x8, [sp, #80]
   21964:	cbz	x8, 219dc <rpl_regexec@@Base+0x17a8>
   21968:	ldr	x9, [sp, #40]
   2196c:	mov	w8, #0x1810                	// #6160
   21970:	mov	w10, #0x1                   	// #1
   21974:	add	x8, x9, x8
   21978:	mov	w9, #0x80                  	// #128
   2197c:	ldr	x11, [sp, #80]
   21980:	tbnz	w11, #0, 219a0 <rpl_regexec@@Base+0x176c>
   21984:	ldr	x11, [sp, #80]
   21988:	lsl	x10, x10, #1
   2198c:	add	x9, x9, #0x1
   21990:	lsr	x11, x11, #1
   21994:	str	x11, [sp, #80]
   21998:	cbnz	x11, 2197c <rpl_regexec@@Base+0x1748>
   2199c:	b	219dc <rpl_regexec@@Base+0x17a8>
   219a0:	mov	x11, #0xfffffffffffffff8    	// #-8
   219a4:	mov	x12, x8
   219a8:	ldr	x13, [x12], #32
   219ac:	add	x11, x11, #0x8
   219b0:	tst	x13, x10
   219b4:	b.eq	219a8 <rpl_regexec@@Base+0x1774>  // b.none
   219b8:	ldr	x12, [sp, #72]
   219bc:	ldr	x13, [sp, #48]
   219c0:	ldr	x12, [x12, #200]
   219c4:	tst	x12, x10
   219c8:	ldr	x12, [sp, #64]
   219cc:	csel	x12, x12, x13, eq  // eq = none
   219d0:	ldr	x11, [x12, x11]
   219d4:	str	x11, [x0, x9, lsl #3]
   219d8:	b	21984 <rpl_regexec@@Base+0x1750>
   219dc:	ldr	x8, [sp, #88]
   219e0:	cbz	x8, 21cb8 <rpl_regexec@@Base+0x1a84>
   219e4:	ldr	x9, [sp, #40]
   219e8:	mov	w8, #0x1818                	// #6168
   219ec:	mov	w10, #0x1                   	// #1
   219f0:	add	x8, x9, x8
   219f4:	mov	w9, #0xc0                  	// #192
   219f8:	ldr	x11, [sp, #88]
   219fc:	tbnz	w11, #0, 21a1c <rpl_regexec@@Base+0x17e8>
   21a00:	ldr	x11, [sp, #88]
   21a04:	lsl	x10, x10, #1
   21a08:	add	x9, x9, #0x1
   21a0c:	lsr	x11, x11, #1
   21a10:	str	x11, [sp, #88]
   21a14:	cbnz	x11, 219f8 <rpl_regexec@@Base+0x17c4>
   21a18:	b	21cb8 <rpl_regexec@@Base+0x1a84>
   21a1c:	mov	x11, #0xfffffffffffffff8    	// #-8
   21a20:	mov	x12, x8
   21a24:	ldr	x13, [x12], #32
   21a28:	add	x11, x11, #0x8
   21a2c:	tst	x13, x10
   21a30:	b.eq	21a24 <rpl_regexec@@Base+0x17f0>  // b.none
   21a34:	ldr	x12, [sp, #72]
   21a38:	ldr	x13, [sp, #48]
   21a3c:	ldr	x12, [x12, #208]
   21a40:	tst	x12, x10
   21a44:	ldr	x12, [sp, #64]
   21a48:	csel	x12, x12, x13, eq  // eq = none
   21a4c:	ldr	x11, [x12, x11]
   21a50:	str	x11, [x0, x9, lsl #3]
   21a54:	b	21a00 <rpl_regexec@@Base+0x17cc>
   21a58:	str	xzr, [sp, #96]
   21a5c:	ldr	x0, [sp, #40]
   21a60:	bl	a960 <free@plt>
   21a64:	ldr	x8, [sp, #96]
   21a68:	cbnz	x8, 21f5c <rpl_regexec@@Base+0x1d28>
   21a6c:	mov	w0, #0x8                   	// #8
   21a70:	mov	w1, #0x100                 	// #256
   21a74:	bl	a6b0 <calloc@plt>
   21a78:	str	x0, [x27]
   21a7c:	cbnz	x0, 21d48 <rpl_regexec@@Base+0x1b14>
   21a80:	b	21f5c <rpl_regexec@@Base+0x1d28>
   21a84:	ldr	x8, [sp, #88]
   21a88:	b	21a94 <rpl_regexec@@Base+0x1860>
   21a8c:	ldr	x8, [sp, #88]
   21a90:	stp	xzr, xzr, [x24]
   21a94:	stp	x8, x25, [x29, #-80]
   21a98:	ldr	x8, [sp, #80]
   21a9c:	stp	x8, x22, [x29, #-96]
   21aa0:	ldr	x8, [sp, #96]
   21aa4:	cmp	x8, #0x1
   21aa8:	b.lt	21acc <rpl_regexec@@Base+0x1898>  // b.tstop
   21aac:	ldr	x8, [sp, #40]
   21ab0:	add	x23, x8, #0x10
   21ab4:	ldr	x0, [x23], #24
   21ab8:	bl	a960 <free@plt>
   21abc:	ldr	x8, [sp, #96]
   21ac0:	subs	x8, x8, #0x1
   21ac4:	str	x8, [sp, #96]
   21ac8:	b.ne	21ab4 <rpl_regexec@@Base+0x1880>  // b.any
   21acc:	mov	x8, #0xffffffffffffffff    	// #-1
   21ad0:	str	x8, [sp, #96]
   21ad4:	b	21a5c <rpl_regexec@@Base+0x1828>
   21ad8:	mov	w0, #0x8                   	// #8
   21adc:	mov	w1, #0x200                 	// #512
   21ae0:	bl	a6b0 <calloc@plt>
   21ae4:	ldr	x8, [sp, #128]
   21ae8:	str	x0, [x8, #96]
   21aec:	cbz	x0, 21f18 <rpl_regexec@@Base+0x1ce4>
   21af0:	ldr	x8, [sp, #56]
   21af4:	cbz	x8, 21b54 <rpl_regexec@@Base+0x1920>
   21af8:	ldp	x10, x9, [sp, #56]
   21afc:	mov	x8, xzr
   21b00:	mov	w11, #0x1                   	// #1
   21b04:	sub	x9, x9, #0x8
   21b08:	tbnz	w10, #0, 21b20 <rpl_regexec@@Base+0x18ec>
   21b0c:	lsl	x11, x11, #1
   21b10:	lsr	x10, x10, #1
   21b14:	add	x8, x8, #0x1
   21b18:	cbnz	x10, 21b08 <rpl_regexec@@Base+0x18d4>
   21b1c:	b	21b54 <rpl_regexec@@Base+0x1920>
   21b20:	ldr	x13, [sp, #24]
   21b24:	mov	x12, x9
   21b28:	ldr	x14, [x13], #32
   21b2c:	add	x12, x12, #0x8
   21b30:	tst	x14, x11
   21b34:	b.eq	21b28 <rpl_regexec@@Base+0x18f4>  // b.none
   21b38:	ldr	x14, [sp, #96]
   21b3c:	ldr	x13, [x12]
   21b40:	ldr	x12, [x12, x14, lsl #3]
   21b44:	add	x14, x0, x8, lsl #3
   21b48:	str	x13, [x14]
   21b4c:	str	x12, [x14, #2048]
   21b50:	b	21b0c <rpl_regexec@@Base+0x18d8>
   21b54:	cbz	x22, 21bc0 <rpl_regexec@@Base+0x198c>
   21b58:	ldr	x8, [sp, #64]
   21b5c:	ldr	x10, [sp, #40]
   21b60:	mov	w9, #0x1808                	// #6152
   21b64:	mov	w11, #0x1                   	// #1
   21b68:	sub	x8, x8, #0x8
   21b6c:	add	x9, x10, x9
   21b70:	mov	w10, #0x40                  	// #64
   21b74:	tbnz	w22, #0, 21b8c <rpl_regexec@@Base+0x1958>
   21b78:	lsl	x11, x11, #1
   21b7c:	lsr	x22, x22, #1
   21b80:	add	x10, x10, #0x1
   21b84:	cbnz	x22, 21b74 <rpl_regexec@@Base+0x1940>
   21b88:	b	21bc0 <rpl_regexec@@Base+0x198c>
   21b8c:	mov	x13, x9
   21b90:	mov	x12, x8
   21b94:	ldr	x14, [x13], #32
   21b98:	add	x12, x12, #0x8
   21b9c:	tst	x14, x11
   21ba0:	b.eq	21b94 <rpl_regexec@@Base+0x1960>  // b.none
   21ba4:	ldr	x14, [sp, #96]
   21ba8:	ldr	x13, [x12]
   21bac:	ldr	x12, [x12, x14, lsl #3]
   21bb0:	add	x14, x0, x10, lsl #3
   21bb4:	str	x13, [x14]
   21bb8:	str	x12, [x14, #2048]
   21bbc:	b	21b78 <rpl_regexec@@Base+0x1944>
   21bc0:	ldr	x8, [sp, #80]
   21bc4:	cbz	x8, 21c3c <rpl_regexec@@Base+0x1a08>
   21bc8:	ldr	x8, [sp, #64]
   21bcc:	ldr	x10, [sp, #40]
   21bd0:	mov	w9, #0x1810                	// #6160
   21bd4:	mov	w11, #0x1                   	// #1
   21bd8:	sub	x8, x8, #0x8
   21bdc:	add	x9, x10, x9
   21be0:	mov	w10, #0x80                  	// #128
   21be4:	ldr	x12, [sp, #80]
   21be8:	tbnz	w12, #0, 21c08 <rpl_regexec@@Base+0x19d4>
   21bec:	ldr	x12, [sp, #80]
   21bf0:	lsl	x11, x11, #1
   21bf4:	add	x10, x10, #0x1
   21bf8:	lsr	x12, x12, #1
   21bfc:	str	x12, [sp, #80]
   21c00:	cbnz	x12, 21be4 <rpl_regexec@@Base+0x19b0>
   21c04:	b	21c3c <rpl_regexec@@Base+0x1a08>
   21c08:	mov	x13, x9
   21c0c:	mov	x12, x8
   21c10:	ldr	x14, [x13], #32
   21c14:	add	x12, x12, #0x8
   21c18:	tst	x14, x11
   21c1c:	b.eq	21c10 <rpl_regexec@@Base+0x19dc>  // b.none
   21c20:	ldr	x14, [sp, #96]
   21c24:	ldr	x13, [x12]
   21c28:	ldr	x12, [x12, x14, lsl #3]
   21c2c:	add	x14, x0, x10, lsl #3
   21c30:	str	x13, [x14]
   21c34:	str	x12, [x14, #2048]
   21c38:	b	21bec <rpl_regexec@@Base+0x19b8>
   21c3c:	ldr	x8, [sp, #88]
   21c40:	cbz	x8, 21cb8 <rpl_regexec@@Base+0x1a84>
   21c44:	ldr	x8, [sp, #64]
   21c48:	ldr	x10, [sp, #40]
   21c4c:	mov	w9, #0x1818                	// #6168
   21c50:	mov	w11, #0x1                   	// #1
   21c54:	sub	x8, x8, #0x8
   21c58:	add	x9, x10, x9
   21c5c:	mov	w10, #0xc0                  	// #192
   21c60:	ldr	x12, [sp, #88]
   21c64:	tbnz	w12, #0, 21c84 <rpl_regexec@@Base+0x1a50>
   21c68:	ldr	x12, [sp, #88]
   21c6c:	lsl	x11, x11, #1
   21c70:	add	x10, x10, #0x1
   21c74:	lsr	x12, x12, #1
   21c78:	str	x12, [sp, #88]
   21c7c:	cbnz	x12, 21c60 <rpl_regexec@@Base+0x1a2c>
   21c80:	b	21cb8 <rpl_regexec@@Base+0x1a84>
   21c84:	mov	x13, x9
   21c88:	mov	x12, x8
   21c8c:	ldr	x14, [x13], #32
   21c90:	add	x12, x12, #0x8
   21c94:	tst	x14, x11
   21c98:	b.eq	21c8c <rpl_regexec@@Base+0x1a58>  // b.none
   21c9c:	ldr	x14, [sp, #96]
   21ca0:	ldr	x13, [x12]
   21ca4:	ldr	x12, [x12, x14, lsl #3]
   21ca8:	add	x14, x0, x10, lsl #3
   21cac:	str	x13, [x14]
   21cb0:	str	x12, [x14, #2048]
   21cb4:	b	21c68 <rpl_regexec@@Base+0x1a34>
   21cb8:	ldr	x8, [sp, #56]
   21cbc:	tbz	w8, #10, 21d08 <rpl_regexec@@Base+0x1ad4>
   21cc0:	ldr	x9, [sp, #96]
   21cc4:	ldr	x8, [sp, #64]
   21cc8:	add	x8, x8, x9, lsl #4
   21ccc:	ldr	x10, [sp, #24]
   21cd0:	ldrb	w10, [x10, #1]
   21cd4:	tbnz	w10, #2, 21cf4 <rpl_regexec@@Base+0x1ac0>
   21cd8:	ldr	x10, [sp, #24]
   21cdc:	add	x8, x8, #0x8
   21ce0:	subs	x9, x9, #0x1
   21ce4:	add	x10, x10, #0x20
   21ce8:	str	x10, [sp, #24]
   21cec:	b.ne	21ccc <rpl_regexec@@Base+0x1a98>  // b.any
   21cf0:	b	21d08 <rpl_regexec@@Base+0x1ad4>
   21cf4:	ldr	x8, [x8]
   21cf8:	ldr	w9, [sp, #20]
   21cfc:	str	x8, [x0, #80]
   21d00:	tbz	w9, #0, 21d08 <rpl_regexec@@Base+0x1ad4>
   21d04:	str	x8, [x0, #2128]
   21d08:	ldr	x0, [sp, #64]
   21d0c:	bl	a960 <free@plt>
   21d10:	ldur	x0, [x29, #-24]
   21d14:	bl	a960 <free@plt>
   21d18:	mov	w23, #0x10                  	// #16
   21d1c:	ldr	x8, [sp, #40]
   21d20:	ldr	x0, [x8, x23]
   21d24:	bl	a960 <free@plt>
   21d28:	ldr	x8, [sp, #96]
   21d2c:	add	x23, x23, #0x18
   21d30:	subs	x8, x8, #0x1
   21d34:	str	x8, [sp, #96]
   21d38:	b.ne	21d1c <rpl_regexec@@Base+0x1ae8>  // b.any
   21d3c:	ldr	x0, [sp, #40]
   21d40:	bl	a960 <free@plt>
   21d44:	ldr	x0, [x27]
   21d48:	ldp	x12, x24, [sp, #128]
   21d4c:	ldp	x11, x15, [sp, #104]
   21d50:	ldr	w25, [sp, #120]
   21d54:	ldp	x19, x22, [sp]
   21d58:	cbnz	x0, 20aec <rpl_regexec@@Base+0x8b8>
   21d5c:	b	210b4 <rpl_regexec@@Base+0xe80>
   21d60:	add	w1, w8, #0x2
   21d64:	add	x0, sp, #0x130
   21d68:	mov	x23, x11
   21d6c:	mov	x20, x15
   21d70:	mov	x26, x12
   21d74:	bl	2a848 <rpl_re_set_registers@@Base+0x76f8>
   21d78:	mov	x12, x26
   21d7c:	mov	x11, x23
   21d80:	mov	x15, x20
   21d84:	stur	w0, [x29, #-100]
   21d88:	cbz	w0, 20ac4 <rpl_regexec@@Base+0x890>
   21d8c:	b	22ab0 <rpl_regexec@@Base+0x287c>
   21d90:	ldr	x8, [sp, #376]
   21d94:	cmp	x8, #0x0
   21d98:	b.le	21ec0 <rpl_regexec@@Base+0x1c8c>
   21d9c:	ldr	x10, [sp, #392]
   21da0:	ldr	x27, [sp, #240]
   21da4:	sub	x9, x8, #0x1
   21da8:	cmp	x10, x9
   21dac:	b.eq	21ecc <rpl_regexec@@Base+0x1c98>  // b.none
   21db0:	ldr	w10, [sp, #448]
   21db4:	cmp	w10, #0x2
   21db8:	b.lt	21df0 <rpl_regexec@@Base+0x1bbc>  // b.tstop
   21dbc:	ldr	x9, [sp, #320]
   21dc0:	sub	x9, x9, #0x4
   21dc4:	ldr	w10, [x9, x8, lsl #2]
   21dc8:	cmn	w10, #0x1
   21dcc:	b.ne	21e18 <rpl_regexec@@Base+0x1be4>  // b.any
   21dd0:	sub	x8, x8, #0x1
   21dd4:	cmp	x8, #0x0
   21dd8:	b.gt	21dc4 <rpl_regexec@@Base+0x1b90>
   21ddc:	ldr	w8, [sp, #416]
   21de0:	b	21e48 <rpl_regexec@@Base+0x1c14>
   21de4:	ldr	x24, [sp, #136]
   21de8:	stur	wzr, [x29, #-100]
   21dec:	b	20acc <rpl_regexec@@Base+0x898>
   21df0:	ldr	x8, [sp, #312]
   21df4:	ldr	x10, [sp, #432]
   21df8:	ldrb	w8, [x8, x9]
   21dfc:	lsr	x9, x8, #3
   21e00:	and	x9, x9, #0x18
   21e04:	ldr	x9, [x10, x9]
   21e08:	lsr	x9, x9, x8
   21e0c:	tbz	w9, #0, 21e3c <rpl_regexec@@Base+0x1c08>
   21e10:	mov	w8, #0x1                   	// #1
   21e14:	b	21e48 <rpl_regexec@@Base+0x1c14>
   21e18:	ldrb	w8, [sp, #446]
   21e1c:	cbnz	w8, 21ed4 <rpl_regexec@@Base+0x1ca0>
   21e20:	cmp	w10, #0xa
   21e24:	b.ne	21e44 <rpl_regexec@@Base+0x1c10>  // b.any
   21e28:	ldrb	w8, [sp, #445]
   21e2c:	cmp	w8, #0x0
   21e30:	cset	w8, ne  // ne = any
   21e34:	lsl	w8, w8, #1
   21e38:	b	21e48 <rpl_regexec@@Base+0x1c14>
   21e3c:	cmp	w8, #0xa
   21e40:	b.eq	21e28 <rpl_regexec@@Base+0x1bf4>  // b.none
   21e44:	mov	w8, wzr
   21e48:	ubfiz	w8, w8, #8, #1
   21e4c:	orr	x8, x8, x26
   21e50:	ldr	x26, [x23, x8, lsl #3]
   21e54:	b	20af4 <rpl_regexec@@Base+0x8c0>
   21e58:	ldr	w8, [sp, #464]
   21e5c:	mov	w9, #0xa                   	// #10
   21e60:	and	w8, w8, #0x2
   21e64:	eor	w8, w8, w9
   21e68:	b	20c70 <rpl_regexec@@Base+0xa3c>
   21e6c:	stur	w0, [x29, #-40]
   21e70:	ldr	x27, [sp, #240]
   21e74:	ldp	x11, x15, [sp, #104]
   21e78:	ldr	x12, [sp, #128]
   21e7c:	ldr	x24, [sp, #136]
   21e80:	mov	x26, xzr
   21e84:	stur	w0, [x29, #-100]
   21e88:	b	20af4 <rpl_regexec@@Base+0x8c0>
   21e8c:	mov	w0, w20
   21e90:	str	x15, [sp, #112]
   21e94:	bl	ac10 <iswalnum@plt>
   21e98:	cmp	w20, #0x5f
   21e9c:	mov	w8, #0x1                   	// #1
   21ea0:	b.eq	21eb4 <rpl_regexec@@Base+0x1c80>  // b.none
   21ea4:	ldr	x27, [sp, #240]
   21ea8:	ldr	x15, [sp, #112]
   21eac:	cbz	w0, 20c48 <rpl_regexec@@Base+0xa14>
   21eb0:	b	20c70 <rpl_regexec@@Base+0xa3c>
   21eb4:	ldr	x27, [sp, #240]
   21eb8:	ldr	x15, [sp, #112]
   21ebc:	b	20c70 <rpl_regexec@@Base+0xa3c>
   21ec0:	ldr	w8, [sp, #416]
   21ec4:	ldr	x27, [sp, #240]
   21ec8:	b	21e48 <rpl_regexec@@Base+0x1c14>
   21ecc:	mov	w8, #0xa                   	// #10
   21ed0:	b	21e48 <rpl_regexec@@Base+0x1c14>
   21ed4:	mov	w0, w10
   21ed8:	str	x12, [sp, #128]
   21edc:	str	x11, [sp, #104]
   21ee0:	mov	x20, x15
   21ee4:	mov	w27, w10
   21ee8:	bl	ac10 <iswalnum@plt>
   21eec:	cmp	w27, #0x5f
   21ef0:	mov	w8, #0x1                   	// #1
   21ef4:	b.eq	21f80 <rpl_regexec@@Base+0x1d4c>  // b.none
   21ef8:	mov	w10, w27
   21efc:	ldr	x27, [sp, #240]
   21f00:	ldr	x11, [sp, #104]
   21f04:	ldr	x12, [sp, #128]
   21f08:	mov	x15, x20
   21f0c:	cbz	w0, 21e20 <rpl_regexec@@Base+0x1bec>
   21f10:	b	21e48 <rpl_regexec@@Base+0x1c14>
   21f14:	stur	w0, [x29, #-12]
   21f18:	ldr	x0, [sp, #64]
   21f1c:	bl	a960 <free@plt>
   21f20:	ldur	x0, [x29, #-24]
   21f24:	bl	a960 <free@plt>
   21f28:	ldr	x8, [sp, #96]
   21f2c:	cmp	x8, #0x1
   21f30:	b.lt	21f54 <rpl_regexec@@Base+0x1d20>  // b.tstop
   21f34:	ldr	x8, [sp, #40]
   21f38:	add	x23, x8, #0x10
   21f3c:	ldr	x0, [x23], #24
   21f40:	bl	a960 <free@plt>
   21f44:	ldr	x8, [sp, #96]
   21f48:	subs	x8, x8, #0x1
   21f4c:	str	x8, [sp, #96]
   21f50:	b.ne	21f3c <rpl_regexec@@Base+0x1d08>  // b.any
   21f54:	ldr	x0, [sp, #40]
   21f58:	bl	a960 <free@plt>
   21f5c:	ldp	x12, x24, [sp, #128]
   21f60:	ldr	x27, [sp, #240]
   21f64:	ldp	x11, x15, [sp, #104]
   21f68:	ldr	w25, [sp, #120]
   21f6c:	ldp	x19, x22, [sp]
   21f70:	mov	w8, #0xc                   	// #12
   21f74:	mov	x26, xzr
   21f78:	stur	w8, [x29, #-100]
   21f7c:	b	20af4 <rpl_regexec@@Base+0x8c0>
   21f80:	ldr	x27, [sp, #240]
   21f84:	ldr	x11, [sp, #104]
   21f88:	ldr	x12, [sp, #128]
   21f8c:	mov	x15, x20
   21f90:	b	21e48 <rpl_regexec@@Base+0x1c14>
   21f94:	mov	x0, x19
   21f98:	bl	a960 <free@plt>
   21f9c:	b	21f34 <rpl_regexec@@Base+0x1d00>
   21fa0:	mov	x15, x20
   21fa4:	ldr	x9, [sp, #256]
   21fa8:	cbz	x9, 21fb8 <rpl_regexec@@Base+0x1d84>
   21fac:	ldr	x8, [x9]
   21fb0:	add	x8, x8, x15
   21fb4:	str	x8, [x9]
   21fb8:	ldr	x25, [sp, #288]
   21fbc:	cmn	x28, #0x1
   21fc0:	b.eq	22284 <rpl_regexec@@Base+0x2050>  // b.none
   21fc4:	cmn	x28, #0x2
   21fc8:	b.eq	22a98 <rpl_regexec@@Base+0x2864>  // b.none
   21fcc:	ldr	x25, [sp, #264]
   21fd0:	str	x28, [sp, #472]
   21fd4:	ldr	x26, [sp, #232]
   21fd8:	ldrb	w8, [x25, #56]
   21fdc:	cmp	x26, #0x2
   21fe0:	b.cc	21fe8 <rpl_regexec@@Base+0x1db4>  // b.lo, b.ul, b.last
   21fe4:	tbz	w8, #4, 21ff0 <rpl_regexec@@Base+0x1dbc>
   21fe8:	ldr	x9, [x24, #152]
   21fec:	cbz	x9, 22108 <rpl_regexec@@Base+0x1ed4>
   21ff0:	ldr	x8, [sp, #488]
   21ff4:	ldr	x23, [x8, x28, lsl #3]
   21ff8:	tbnz	x28, #63, 22030 <rpl_regexec@@Base+0x1dfc>
   21ffc:	ldr	x8, [sp, #392]
   22000:	cmp	x8, x28
   22004:	b.eq	22410 <rpl_regexec@@Base+0x21dc>  // b.none
   22008:	ldr	w8, [sp, #448]
   2200c:	cmp	w8, #0x2
   22010:	b.lt	22038 <rpl_regexec@@Base+0x1e04>  // b.tstop
   22014:	ldr	x8, [sp, #320]
   22018:	ldr	w20, [x8, x28, lsl #2]
   2201c:	cmn	w20, #0x1
   22020:	b.ne	22060 <rpl_regexec@@Base+0x1e2c>  // b.any
   22024:	cmp	x28, #0x0
   22028:	sub	x28, x28, #0x1
   2202c:	b.gt	22018 <rpl_regexec@@Base+0x1de4>
   22030:	ldr	w8, [sp, #416]
   22034:	b	22090 <rpl_regexec@@Base+0x1e5c>
   22038:	ldr	x8, [sp, #312]
   2203c:	ldr	x9, [sp, #432]
   22040:	ldrb	w8, [x8, x28]
   22044:	lsr	x10, x8, #3
   22048:	and	x10, x10, #0x18
   2204c:	ldr	x9, [x9, x10]
   22050:	lsr	x9, x9, x8
   22054:	tbz	w9, #0, 22084 <rpl_regexec@@Base+0x1e50>
   22058:	mov	w8, #0x1                   	// #1
   2205c:	b	22090 <rpl_regexec@@Base+0x1e5c>
   22060:	ldrb	w8, [sp, #446]
   22064:	cbnz	w8, 224a4 <rpl_regexec@@Base+0x2270>
   22068:	cmp	w20, #0xa
   2206c:	b.ne	2208c <rpl_regexec@@Base+0x1e58>  // b.any
   22070:	ldrb	w8, [sp, #445]
   22074:	cmp	w8, #0x0
   22078:	cset	w8, ne  // ne = any
   2207c:	lsl	w8, w8, #1
   22080:	b	22090 <rpl_regexec@@Base+0x1e5c>
   22084:	cmp	w8, #0xa
   22088:	b.eq	22070 <rpl_regexec@@Base+0x1e3c>  // b.none
   2208c:	mov	w8, wzr
   22090:	ldr	x9, [x23, #16]
   22094:	cmp	x9, #0x1
   22098:	b.lt	220fc <rpl_regexec@@Base+0x1ec8>  // b.tstop
   2209c:	ldr	x11, [sp, #456]
   220a0:	ldr	x10, [x23, #24]
   220a4:	ldr	x11, [x11]
   220a8:	b	220b8 <rpl_regexec@@Base+0x1e84>
   220ac:	subs	x9, x9, #0x1
   220b0:	add	x10, x10, #0x8
   220b4:	b.eq	220fc <rpl_regexec@@Base+0x1ec8>  // b.none
   220b8:	ldr	x12, [x10]
   220bc:	add	x13, x11, x12, lsl #4
   220c0:	ldr	w13, [x13, #8]
   220c4:	and	w14, w13, #0xff
   220c8:	cmp	w14, #0x2
   220cc:	b.ne	220ac <rpl_regexec@@Base+0x1e78>  // b.any
   220d0:	tst	w13, #0x3ff00
   220d4:	b.eq	22100 <rpl_regexec@@Base+0x1ecc>  // b.none
   220d8:	tbnz	w8, #0, 220e0 <rpl_regexec@@Base+0x1eac>
   220dc:	tbnz	w13, #10, 220ac <rpl_regexec@@Base+0x1e78>
   220e0:	tbz	w8, #0, 220e8 <rpl_regexec@@Base+0x1eb4>
   220e4:	tbnz	w13, #11, 220ac <rpl_regexec@@Base+0x1e78>
   220e8:	tbnz	w8, #1, 220f0 <rpl_regexec@@Base+0x1ebc>
   220ec:	tbnz	w13, #13, 220ac <rpl_regexec@@Base+0x1e78>
   220f0:	tbnz	w8, #3, 22100 <rpl_regexec@@Base+0x1ecc>
   220f4:	tbnz	w13, #15, 220ac <rpl_regexec@@Base+0x1e78>
   220f8:	b	22100 <rpl_regexec@@Base+0x1ecc>
   220fc:	mov	x12, xzr
   22100:	str	x12, [sp, #480]
   22104:	ldrb	w8, [x25, #56]
   22108:	cmp	x26, #0x2
   2210c:	b.cc	2211c <rpl_regexec@@Base+0x1ee8>  // b.lo, b.ul, b.last
   22110:	tbnz	w8, #4, 2211c <rpl_regexec@@Base+0x1ee8>
   22114:	ldrb	w8, [x24, #176]
   22118:	tbnz	w8, #0, 22124 <rpl_regexec@@Base+0x1ef0>
   2211c:	ldr	x8, [x24, #152]
   22120:	cbz	x8, 22868 <rpl_regexec@@Base+0x2634>
   22124:	ldr	x23, [sp, #472]
   22128:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
   2212c:	cmp	x23, x8
   22130:	b.cs	22a98 <rpl_regexec@@Base+0x2864>  // b.hs, b.nlast
   22134:	ldr	x28, [sp, #456]
   22138:	ldr	x25, [sp, #480]
   2213c:	lsl	x8, x23, #3
   22140:	add	x20, x8, #0x8
   22144:	mov	x0, x20
   22148:	bl	a540 <malloc@plt>
   2214c:	mov	x26, x0
   22150:	cbz	x0, 22aa0 <rpl_regexec@@Base+0x286c>
   22154:	ldr	x8, [x28, #152]
   22158:	cbz	x8, 2223c <rpl_regexec@@Base+0x2008>
   2215c:	mov	x0, x20
   22160:	bl	a540 <malloc@plt>
   22164:	cbz	x0, 22aa0 <rpl_regexec@@Base+0x286c>
   22168:	mov	w1, wzr
   2216c:	mov	x2, x20
   22170:	mov	x27, x0
   22174:	bl	a630 <memset@plt>
   22178:	ldr	x8, [sp, #176]
   2217c:	add	x0, sp, #0x130
   22180:	sub	x1, x29, #0x60
   22184:	stp	x26, x27, [x29, #-96]
   22188:	stp	x25, x23, [x29, #-80]
   2218c:	stp	xzr, xzr, [x8, #8]
   22190:	str	xzr, [x8]
   22194:	bl	2c72c <rpl_re_set_registers@@Base+0x95dc>
   22198:	cbnz	w0, 227b8 <rpl_regexec@@Base+0x2584>
   2219c:	ldr	x8, [x26]
   221a0:	str	x24, [sp, #136]
   221a4:	cbz	x8, 225f0 <rpl_regexec@@Base+0x23bc>
   221a8:	mov	x24, xzr
   221ac:	ldr	x9, [x27, x24, lsl #3]
   221b0:	cbnz	x8, 221d4 <rpl_regexec@@Base+0x1fa0>
   221b4:	str	x9, [x26, x24, lsl #3]
   221b8:	cmp	x23, x24
   221bc:	b.eq	22220 <rpl_regexec@@Base+0x1fec>  // b.none
   221c0:	add	x8, x26, x24, lsl #3
   221c4:	ldr	x8, [x8, #8]
   221c8:	add	x24, x24, #0x1
   221cc:	ldr	x9, [x27, x24, lsl #3]
   221d0:	cbz	x8, 221b4 <rpl_regexec@@Base+0x1f80>
   221d4:	cbz	x9, 22218 <rpl_regexec@@Base+0x1fe4>
   221d8:	add	x1, x8, #0x8
   221dc:	add	x2, x9, #0x8
   221e0:	sub	x0, x29, #0x28
   221e4:	bl	2ac30 <rpl_re_set_registers@@Base+0x7ae0>
   221e8:	stur	w0, [x29, #-12]
   221ec:	cbnz	w0, 222d0 <rpl_regexec@@Base+0x209c>
   221f0:	sub	x0, x29, #0xc
   221f4:	sub	x2, x29, #0x28
   221f8:	mov	x1, x28
   221fc:	bl	2bfa0 <rpl_re_set_registers@@Base+0x8e50>
   22200:	ldur	x8, [x29, #-24]
   22204:	str	x0, [x26, x24, lsl #3]
   22208:	mov	x0, x8
   2220c:	bl	a960 <free@plt>
   22210:	ldur	w20, [x29, #-12]
   22214:	cbnz	w20, 22224 <rpl_regexec@@Base+0x1ff0>
   22218:	cmp	x23, x24
   2221c:	b.ne	221c0 <rpl_regexec@@Base+0x1f8c>  // b.any
   22220:	mov	w20, wzr
   22224:	ldr	x24, [sp, #136]
   22228:	mov	x0, x27
   2222c:	bl	a960 <free@plt>
   22230:	cbz	w20, 22850 <rpl_regexec@@Base+0x261c>
   22234:	mov	x27, xzr
   22238:	b	227bc <rpl_regexec@@Base+0x2588>
   2223c:	ldr	x8, [sp, #176]
   22240:	add	x0, sp, #0x130
   22244:	sub	x1, x29, #0x60
   22248:	stp	x26, xzr, [x29, #-96]
   2224c:	stp	x25, x23, [x29, #-80]
   22250:	stp	xzr, xzr, [x8]
   22254:	str	xzr, [x8, #16]
   22258:	bl	2c72c <rpl_re_set_registers@@Base+0x95dc>
   2225c:	cbnz	w0, 22498 <rpl_regexec@@Base+0x2264>
   22260:	ldr	x8, [x26]
   22264:	cbnz	x8, 22850 <rpl_regexec@@Base+0x261c>
   22268:	mov	x27, xzr
   2226c:	ldr	x25, [sp, #288]
   22270:	mov	x0, x26
   22274:	bl	a960 <free@plt>
   22278:	mov	x0, x27
   2227c:	bl	a960 <free@plt>
   22280:	ldp	x27, x23, [sp, #240]
   22284:	add	x0, sp, #0x130
   22288:	bl	293bc <rpl_re_set_registers@@Base+0x626c>
   2228c:	ldur	x8, [x29, #-112]
   22290:	ldr	x9, [sp, #296]
   22294:	mov	w20, #0x1                   	// #1
   22298:	add	x26, x8, x9
   2229c:	cmp	x26, x27
   222a0:	stur	x26, [x29, #-112]
   222a4:	b.lt	22a18 <rpl_regexec@@Base+0x27e4>  // b.tstop
   222a8:	cmp	x19, x26
   222ac:	b.ge	206ec <rpl_regexec@@Base+0x4b8>  // b.tcont
   222b0:	b	22a18 <rpl_regexec@@Base+0x27e4>
   222b4:	ldr	x25, [sp, #288]
   222b8:	ldr	x23, [sp, #248]
   222bc:	b	21fbc <rpl_regexec@@Base+0x1d88>
   222c0:	ldr	x23, [sp, #248]
   222c4:	ldr	x9, [sp, #256]
   222c8:	cbnz	x9, 21fac <rpl_regexec@@Base+0x1d78>
   222cc:	b	21fb8 <rpl_regexec@@Base+0x1d84>
   222d0:	mov	w20, w0
   222d4:	b	22224 <rpl_regexec@@Base+0x1ff0>
   222d8:	tbnz	w8, #31, 22424 <rpl_regexec@@Base+0x21f0>
   222dc:	ldr	w8, [sp, #188]
   222e0:	cbz	w8, 22468 <rpl_regexec@@Base+0x2234>
   222e4:	mov	x28, x15
   222e8:	mov	w8, #0x1                   	// #1
   222ec:	str	x8, [sp, #216]
   222f0:	b	20a2c <rpl_regexec@@Base+0x7f8>
   222f4:	ldr	x8, [x26, #16]
   222f8:	str	x24, [sp, #136]
   222fc:	cmp	x8, #0x1
   22300:	b.lt	223d4 <rpl_regexec@@Base+0x21a0>  // b.tstop
   22304:	ldr	x23, [sp, #456]
   22308:	mov	x24, xzr
   2230c:	b	2231c <rpl_regexec@@Base+0x20e8>
   22310:	add	x24, x24, #0x1
   22314:	cmp	x24, x8
   22318:	b.ge	223d4 <rpl_regexec@@Base+0x21a0>  // b.tcont
   2231c:	ldr	x9, [x26, #24]
   22320:	ldr	x25, [x9, x24, lsl #3]
   22324:	ldr	x9, [x23]
   22328:	add	x10, x9, x25, lsl #4
   2232c:	ldrb	w10, [x10, #8]
   22330:	cmp	w10, #0x8
   22334:	b.ne	22310 <rpl_regexec@@Base+0x20dc>  // b.any
   22338:	lsl	x10, x25, #4
   2233c:	ldr	x9, [x9, x10]
   22340:	cmp	x9, #0x3f
   22344:	b.gt	22310 <rpl_regexec@@Base+0x20dc>
   22348:	ldr	x10, [x23, #160]
   2234c:	lsr	x9, x10, x9
   22350:	tbz	w9, #0, 22310 <rpl_regexec@@Base+0x20dc>
   22354:	ldr	x27, [sp, #536]
   22358:	ldr	x8, [sp, #544]
   2235c:	mov	x28, x15
   22360:	cmp	x27, x8
   22364:	b.eq	223ac <rpl_regexec@@Base+0x2178>  // b.none
   22368:	ldr	x20, [sp, #552]
   2236c:	mov	w0, #0x1                   	// #1
   22370:	mov	w1, #0x30                  	// #48
   22374:	bl	a6b0 <calloc@plt>
   22378:	lsl	x8, x27, #3
   2237c:	str	x0, [x20, x8]
   22380:	ldr	x9, [sp, #552]
   22384:	ldr	x8, [x9, x8]
   22388:	cbz	x8, 227ec <rpl_regexec@@Base+0x25b8>
   2238c:	add	x9, x27, #0x1
   22390:	str	x25, [x8, #8]
   22394:	str	x9, [sp, #536]
   22398:	str	xzr, [x8]
   2239c:	ldr	x8, [x26, #16]
   223a0:	ldr	x27, [sp, #240]
   223a4:	mov	x15, x28
   223a8:	b	22310 <rpl_regexec@@Base+0x20dc>
   223ac:	ldr	x0, [sp, #552]
   223b0:	lsl	x1, x27, #4
   223b4:	bl	a720 <realloc@plt>
   223b8:	cbz	x0, 227ec <rpl_regexec@@Base+0x25b8>
   223bc:	lsl	x8, x27, #1
   223c0:	ldr	x27, [sp, #536]
   223c4:	mov	x20, x0
   223c8:	str	x0, [sp, #552]
   223cc:	str	x8, [sp, #544]
   223d0:	b	2236c <rpl_regexec@@Base+0x2138>
   223d4:	stur	wzr, [x29, #-100]
   223d8:	ldrb	w8, [x26, #104]
   223dc:	ldr	x24, [sp, #136]
   223e0:	ldr	x23, [sp, #248]
   223e4:	mov	w25, wzr
   223e8:	tbz	w8, #6, 20a1c <rpl_regexec@@Base+0x7e8>
   223ec:	add	x1, x26, #0x8
   223f0:	add	x0, sp, #0x130
   223f4:	mov	x20, x15
   223f8:	bl	29fb0 <rpl_re_set_registers@@Base+0x6e60>
   223fc:	stur	w0, [x29, #-100]
   22400:	cbnz	w0, 2280c <rpl_regexec@@Base+0x25d8>
   22404:	mov	w25, wzr
   22408:	mov	x15, x20
   2240c:	b	20a1c <rpl_regexec@@Base+0x7e8>
   22410:	ldr	w8, [sp, #464]
   22414:	mov	w9, #0xa                   	// #10
   22418:	and	w8, w8, #0x2
   2241c:	eor	w8, w8, w9
   22420:	b	22090 <rpl_regexec@@Base+0x1e5c>
   22424:	tbnz	x15, #63, 22460 <rpl_regexec@@Base+0x222c>
   22428:	ldr	x8, [sp, #392]
   2242c:	cmp	x8, x15
   22430:	b.eq	227f8 <rpl_regexec@@Base+0x25c4>  // b.none
   22434:	ldr	w8, [sp, #448]
   22438:	cmp	w8, #0x2
   2243c:	b.lt	22470 <rpl_regexec@@Base+0x223c>  // b.tstop
   22440:	ldr	x8, [sp, #320]
   22444:	mov	x9, x15
   22448:	ldr	w20, [x8, x9, lsl #2]
   2244c:	cmn	w20, #0x1
   22450:	b.ne	224c0 <rpl_regexec@@Base+0x228c>  // b.any
   22454:	cmp	x9, #0x0
   22458:	sub	x9, x9, #0x1
   2245c:	b.gt	22448 <rpl_regexec@@Base+0x2214>
   22460:	ldr	w8, [sp, #416]
   22464:	b	22510 <rpl_regexec@@Base+0x22dc>
   22468:	mov	x28, x15
   2246c:	b	21fb8 <rpl_regexec@@Base+0x1d84>
   22470:	ldr	x8, [sp, #312]
   22474:	ldr	x9, [sp, #432]
   22478:	ldrb	w8, [x8, x15]
   2247c:	lsr	x10, x8, #3
   22480:	and	x10, x10, #0x18
   22484:	ldr	x9, [x9, x10]
   22488:	lsr	x9, x9, x8
   2248c:	tbz	w9, #0, 224e4 <rpl_regexec@@Base+0x22b0>
   22490:	mov	w8, #0x1                   	// #1
   22494:	b	22510 <rpl_regexec@@Base+0x22dc>
   22498:	mov	w20, w0
   2249c:	mov	x27, xzr
   224a0:	b	227bc <rpl_regexec@@Base+0x2588>
   224a4:	mov	w0, w20
   224a8:	bl	ac10 <iswalnum@plt>
   224ac:	cmp	w20, #0x5f
   224b0:	mov	w8, #0x1                   	// #1
   224b4:	b.eq	22090 <rpl_regexec@@Base+0x1e5c>  // b.none
   224b8:	cbz	w0, 22068 <rpl_regexec@@Base+0x1e34>
   224bc:	b	22090 <rpl_regexec@@Base+0x1e5c>
   224c0:	ldrb	w8, [sp, #446]
   224c4:	cbnz	w8, 22814 <rpl_regexec@@Base+0x25e0>
   224c8:	cmp	w20, #0xa
   224cc:	b.ne	22500 <rpl_regexec@@Base+0x22cc>  // b.any
   224d0:	ldrb	w8, [sp, #445]
   224d4:	cmp	w8, #0x0
   224d8:	cset	w8, ne  // ne = any
   224dc:	lsl	w8, w8, #1
   224e0:	b	22510 <rpl_regexec@@Base+0x22dc>
   224e4:	cmp	w8, #0xa
   224e8:	b.ne	22508 <rpl_regexec@@Base+0x22d4>  // b.any
   224ec:	ldrb	w8, [sp, #445]
   224f0:	cmp	w8, #0x0
   224f4:	cset	w8, ne  // ne = any
   224f8:	lsl	w8, w8, #1
   224fc:	b	2250c <rpl_regexec@@Base+0x22d8>
   22500:	mov	w8, wzr
   22504:	b	22510 <rpl_regexec@@Base+0x22dc>
   22508:	mov	w8, wzr
   2250c:	ldp	x27, x23, [sp, #240]
   22510:	ldr	x9, [x26, #16]
   22514:	cmp	x9, #0x1
   22518:	b.lt	20a24 <rpl_regexec@@Base+0x7f0>  // b.tstop
   2251c:	ldr	x11, [sp, #456]
   22520:	ldr	x10, [x26, #24]
   22524:	ldr	x11, [x11]
   22528:	b	22540 <rpl_regexec@@Base+0x230c>
   2252c:	subs	x9, x9, #0x1
   22530:	add	x10, x10, #0x8
   22534:	mov	x28, #0xffffffffffffffff    	// #-1
   22538:	str	xzr, [sp, #216]
   2253c:	b.eq	20a2c <rpl_regexec@@Base+0x7f8>  // b.none
   22540:	ldr	x12, [x10]
   22544:	add	x13, x11, x12, lsl #4
   22548:	ldr	w13, [x13, #8]
   2254c:	and	w14, w13, #0xff
   22550:	cmp	w14, #0x2
   22554:	b.ne	2252c <rpl_regexec@@Base+0x22f8>  // b.any
   22558:	tst	w13, #0x3ff00
   2255c:	b.eq	22580 <rpl_regexec@@Base+0x234c>  // b.none
   22560:	tbnz	w8, #0, 22568 <rpl_regexec@@Base+0x2334>
   22564:	tbnz	w13, #10, 2252c <rpl_regexec@@Base+0x22f8>
   22568:	tbz	w8, #0, 22570 <rpl_regexec@@Base+0x233c>
   2256c:	tbnz	w13, #11, 2252c <rpl_regexec@@Base+0x22f8>
   22570:	tbnz	w8, #1, 22578 <rpl_regexec@@Base+0x2344>
   22574:	tbnz	w13, #13, 2252c <rpl_regexec@@Base+0x22f8>
   22578:	tbnz	w8, #3, 22580 <rpl_regexec@@Base+0x234c>
   2257c:	tbnz	w13, #15, 2252c <rpl_regexec@@Base+0x22f8>
   22580:	ldr	w9, [sp, #188]
   22584:	cmp	x12, #0x0
   22588:	cset	w8, ne  // ne = any
   2258c:	str	x8, [sp, #216]
   22590:	cset	w8, eq  // eq = none
   22594:	orr	w8, w9, w8
   22598:	mov	x9, x15
   2259c:	csinv	x28, x15, xzr, ne  // ne = any
   225a0:	tbz	w8, #0, 225b0 <rpl_regexec@@Base+0x237c>
   225a4:	ldp	x27, x23, [sp, #240]
   225a8:	mov	x15, x9
   225ac:	b	20a2c <rpl_regexec@@Base+0x7f8>
   225b0:	ldr	x25, [sp, #288]
   225b4:	ldp	x27, x23, [sp, #240]
   225b8:	mov	x28, x9
   225bc:	b	21fbc <rpl_regexec@@Base+0x1d88>
   225c0:	ldr	w8, [sp, #464]
   225c4:	mov	w9, #0xa                   	// #10
   225c8:	and	w8, w8, #0x2
   225cc:	eor	w8, w8, w9
   225d0:	b	226e8 <rpl_regexec@@Base+0x24b4>
   225d4:	mov	w0, w25
   225d8:	bl	ac10 <iswalnum@plt>
   225dc:	cmp	w25, #0x5f
   225e0:	mov	w8, #0x1                   	// #1
   225e4:	b.eq	226e8 <rpl_regexec@@Base+0x24b4>  // b.none
   225e8:	cbz	w0, 226c0 <rpl_regexec@@Base+0x248c>
   225ec:	b	226e8 <rpl_regexec@@Base+0x24b4>
   225f0:	ldr	x8, [x27]
   225f4:	cbnz	x8, 227a0 <rpl_regexec@@Base+0x256c>
   225f8:	cmp	x23, #0x1
   225fc:	b.lt	2226c <rpl_regexec@@Base+0x2038>  // b.tstop
   22600:	ldr	x8, [sp, #488]
   22604:	ldr	x25, [sp, #288]
   22608:	lsl	x20, x23, #3
   2260c:	sub	x9, x8, #0x8
   22610:	mov	x8, x23
   22614:	b	2262c <rpl_regexec@@Base+0x23f8>
   22618:	add	x8, x23, #0x1
   2261c:	cmp	x8, #0x2
   22620:	sub	x20, x20, #0x8
   22624:	mov	x8, x23
   22628:	b.lt	227b0 <rpl_regexec@@Base+0x257c>  // b.tstop
   2262c:	ldr	x24, [x9, x8, lsl #3]
   22630:	sub	x23, x8, #0x1
   22634:	cbz	x24, 22618 <rpl_regexec@@Base+0x23e4>
   22638:	ldrb	w10, [x24, #104]
   2263c:	tbz	w10, #4, 22618 <rpl_regexec@@Base+0x23e4>
   22640:	cmp	x8, #0x0
   22644:	b.le	22684 <rpl_regexec@@Base+0x2450>
   22648:	ldr	x9, [sp, #392]
   2264c:	add	x9, x9, #0x1
   22650:	cmp	x9, x8
   22654:	b.eq	225c0 <rpl_regexec@@Base+0x238c>  // b.none
   22658:	ldr	w9, [sp, #448]
   2265c:	cmp	w9, #0x2
   22660:	b.lt	2268c <rpl_regexec@@Base+0x2458>  // b.tstop
   22664:	ldr	x9, [sp, #320]
   22668:	sub	x9, x9, #0x4
   2266c:	ldr	w25, [x9, x8, lsl #2]
   22670:	cmn	w25, #0x1
   22674:	b.ne	226b8 <rpl_regexec@@Base+0x2484>  // b.any
   22678:	sub	x8, x8, #0x1
   2267c:	cmp	x8, #0x0
   22680:	b.gt	2266c <rpl_regexec@@Base+0x2438>
   22684:	ldr	w8, [sp, #416]
   22688:	b	226e8 <rpl_regexec@@Base+0x24b4>
   2268c:	ldr	x9, [sp, #312]
   22690:	ldr	x10, [sp, #432]
   22694:	add	x8, x9, x8
   22698:	ldurb	w8, [x8, #-1]
   2269c:	lsr	x9, x8, #3
   226a0:	and	x9, x9, #0x18
   226a4:	ldr	x9, [x10, x9]
   226a8:	lsr	x9, x9, x8
   226ac:	tbz	w9, #0, 226dc <rpl_regexec@@Base+0x24a8>
   226b0:	mov	w8, #0x1                   	// #1
   226b4:	b	226e8 <rpl_regexec@@Base+0x24b4>
   226b8:	ldrb	w8, [sp, #446]
   226bc:	cbnz	w8, 225d4 <rpl_regexec@@Base+0x23a0>
   226c0:	cmp	w25, #0xa
   226c4:	b.ne	226e4 <rpl_regexec@@Base+0x24b0>  // b.any
   226c8:	ldrb	w8, [sp, #445]
   226cc:	cmp	w8, #0x0
   226d0:	cset	w8, ne  // ne = any
   226d4:	lsl	w8, w8, #1
   226d8:	b	226e8 <rpl_regexec@@Base+0x24b4>
   226dc:	cmp	w8, #0xa
   226e0:	b.eq	226c8 <rpl_regexec@@Base+0x2494>  // b.none
   226e4:	mov	w8, wzr
   226e8:	ldr	x9, [x24, #16]
   226ec:	cmp	x9, #0x1
   226f0:	b.lt	22758 <rpl_regexec@@Base+0x2524>  // b.tstop
   226f4:	ldr	x11, [sp, #456]
   226f8:	ldr	x10, [x24, #24]
   226fc:	ldr	x24, [sp, #136]
   22700:	ldr	x11, [x11]
   22704:	b	22714 <rpl_regexec@@Base+0x24e0>
   22708:	subs	x9, x9, #0x1
   2270c:	add	x10, x10, #0x8
   22710:	b.eq	2275c <rpl_regexec@@Base+0x2528>  // b.none
   22714:	ldr	x25, [x10]
   22718:	add	x12, x11, x25, lsl #4
   2271c:	ldr	w12, [x12, #8]
   22720:	and	w13, w12, #0xff
   22724:	cmp	w13, #0x2
   22728:	b.ne	22708 <rpl_regexec@@Base+0x24d4>  // b.any
   2272c:	tst	w12, #0x3ff00
   22730:	b.eq	22760 <rpl_regexec@@Base+0x252c>  // b.none
   22734:	tbnz	w8, #0, 2273c <rpl_regexec@@Base+0x2508>
   22738:	tbnz	w12, #10, 22708 <rpl_regexec@@Base+0x24d4>
   2273c:	tbz	w8, #0, 22744 <rpl_regexec@@Base+0x2510>
   22740:	tbnz	w12, #11, 22708 <rpl_regexec@@Base+0x24d4>
   22744:	tbnz	w8, #1, 2274c <rpl_regexec@@Base+0x2518>
   22748:	tbnz	w12, #13, 22708 <rpl_regexec@@Base+0x24d4>
   2274c:	tbnz	w8, #3, 22760 <rpl_regexec@@Base+0x252c>
   22750:	tbnz	w12, #15, 22708 <rpl_regexec@@Base+0x24d4>
   22754:	b	22760 <rpl_regexec@@Base+0x252c>
   22758:	ldr	x24, [sp, #136]
   2275c:	mov	x25, xzr
   22760:	mov	x0, x27
   22764:	mov	w1, wzr
   22768:	mov	x2, x20
   2276c:	bl	a630 <memset@plt>
   22770:	ldr	x8, [sp, #176]
   22774:	add	x0, sp, #0x130
   22778:	sub	x1, x29, #0x60
   2277c:	stp	x26, x27, [x29, #-96]
   22780:	stp	x25, x23, [x29, #-80]
   22784:	stp	xzr, xzr, [x8, #8]
   22788:	str	xzr, [x8]
   2278c:	bl	2c72c <rpl_re_set_registers@@Base+0x95dc>
   22790:	cbnz	w0, 227b8 <rpl_regexec@@Base+0x2584>
   22794:	ldr	x8, [x26]
   22798:	cbz	x8, 225f0 <rpl_regexec@@Base+0x23bc>
   2279c:	b	227a4 <rpl_regexec@@Base+0x2570>
   227a0:	mov	x8, xzr
   227a4:	tbz	x23, #63, 221a8 <rpl_regexec@@Base+0x1f74>
   227a8:	mov	w20, wzr
   227ac:	b	22228 <rpl_regexec@@Base+0x1ff4>
   227b0:	ldr	x24, [sp, #136]
   227b4:	b	22270 <rpl_regexec@@Base+0x203c>
   227b8:	mov	w20, w0
   227bc:	mov	x0, x26
   227c0:	bl	a960 <free@plt>
   227c4:	mov	x0, x27
   227c8:	bl	a960 <free@plt>
   227cc:	ldr	x25, [sp, #264]
   227d0:	ldp	x26, x27, [sp, #232]
   227d4:	cbz	w20, 22868 <rpl_regexec@@Base+0x2634>
   227d8:	ldr	x25, [sp, #288]
   227dc:	ldr	x23, [sp, #248]
   227e0:	cmp	w20, #0x1
   227e4:	b.eq	22284 <rpl_regexec@@Base+0x2050>  // b.none
   227e8:	b	22a18 <rpl_regexec@@Base+0x27e4>
   227ec:	ldr	x24, [sp, #136]
   227f0:	mov	w28, #0xc                   	// #12
   227f4:	b	21fcc <rpl_regexec@@Base+0x1d98>
   227f8:	ldr	w8, [sp, #464]
   227fc:	mov	w9, #0xa                   	// #10
   22800:	and	w8, w8, #0x2
   22804:	eor	w8, w8, w9
   22808:	b	22510 <rpl_regexec@@Base+0x22dc>
   2280c:	sxtw	x28, w0
   22810:	b	21fb8 <rpl_regexec@@Base+0x1d84>
   22814:	mov	w0, w20
   22818:	mov	x28, x15
   2281c:	bl	ac10 <iswalnum@plt>
   22820:	cmp	w20, #0x5f
   22824:	mov	w8, #0x1                   	// #1
   22828:	b.eq	2283c <rpl_regexec@@Base+0x2608>  // b.none
   2282c:	ldp	x27, x23, [sp, #240]
   22830:	mov	x15, x28
   22834:	cbz	w0, 224c8 <rpl_regexec@@Base+0x2294>
   22838:	b	22510 <rpl_regexec@@Base+0x22dc>
   2283c:	ldp	x27, x23, [sp, #240]
   22840:	mov	x15, x28
   22844:	b	22510 <rpl_regexec@@Base+0x22dc>
   22848:	mov	w20, #0x1                   	// #1
   2284c:	b	22a18 <rpl_regexec@@Base+0x27e4>
   22850:	ldr	x0, [sp, #488]
   22854:	bl	a960 <free@plt>
   22858:	stp	x25, x26, [sp, #480]
   2285c:	ldr	x25, [sp, #264]
   22860:	ldr	x26, [sp, #232]
   22864:	str	x23, [sp, #472]
   22868:	cbz	x26, 22a14 <rpl_regexec@@Base+0x27e0>
   2286c:	ldp	x21, x19, [sp, #160]
   22870:	cmp	x26, #0x1
   22874:	b.eq	22894 <rpl_regexec@@Base+0x2660>  // b.none
   22878:	ldr	x9, [sp, #152]
   2287c:	mvn	x8, x21
   22880:	add	x0, x19, #0x10
   22884:	mov	w1, #0xff                  	// #255
   22888:	add	x8, x8, x9
   2288c:	lsl	x2, x8, #4
   22890:	bl	a630 <memset@plt>
   22894:	ldr	x8, [sp, #472]
   22898:	cmp	x26, #0x2
   2289c:	stp	xzr, x8, [x19]
   228a0:	b.cc	22908 <rpl_regexec@@Base+0x26d4>  // b.lo, b.ul, b.last
   228a4:	ldrb	w8, [x25, #56]
   228a8:	tbnz	w8, #4, 22908 <rpl_regexec@@Base+0x26d4>
   228ac:	ldrb	w8, [x24, #176]
   228b0:	tbnz	w8, #0, 228e4 <rpl_regexec@@Base+0x26b0>
   228b4:	mov	w4, wzr
   228b8:	b	228f0 <rpl_regexec@@Base+0x26bc>
   228bc:	ldr	x8, [x8, #16]
   228c0:	cbz	x8, 228cc <rpl_regexec@@Base+0x2698>
   228c4:	ldrsb	w8, [x0, #56]
   228c8:	tbnz	w8, #31, 20424 <rpl_regexec@@Base+0x1f0>
   228cc:	mov	x23, xzr
   228d0:	cbz	x26, 22928 <rpl_regexec@@Base+0x26f4>
   228d4:	mov	x26, x23
   228d8:	cbz	x4, 20428 <rpl_regexec@@Base+0x1f4>
   228dc:	mov	w20, #0x1                   	// #1
   228e0:	b	22a60 <rpl_regexec@@Base+0x282c>
   228e4:	ldr	x8, [x24, #152]
   228e8:	cmp	x8, #0x0
   228ec:	cset	w4, gt
   228f0:	add	x1, sp, #0x130
   228f4:	mov	x0, x25
   228f8:	mov	x2, x26
   228fc:	mov	x3, x19
   22900:	bl	29480 <rpl_re_set_registers@@Base+0x6330>
   22904:	cbnz	w0, 22a84 <rpl_regexec@@Base+0x2850>
   22908:	ldrb	w9, [sp, #444]
   2290c:	ldr	x10, [sp, #352]
   22910:	ldr	x11, [sp, #328]
   22914:	ldur	x12, [x29, #-112]
   22918:	ldr	x17, [sp, #144]
   2291c:	mov	x8, xzr
   22920:	add	x13, x19, #0x8
   22924:	b	22978 <rpl_regexec@@Base+0x2744>
   22928:	mov	x26, x23
   2292c:	b	20428 <rpl_regexec@@Base+0x1f4>
   22930:	add	x15, x11, x14, lsl #3
   22934:	cmp	x14, x10
   22938:	ldr	x16, [x13]
   2293c:	csel	x14, x17, x15, eq  // eq = none
   22940:	ldr	x14, [x14]
   22944:	add	x15, x11, x16, lsl #3
   22948:	cmp	x16, x10
   2294c:	stur	x14, [x13, #-8]
   22950:	csel	x15, x17, x15, eq  // eq = none
   22954:	ldr	x15, [x15]
   22958:	str	x15, [x13]
   2295c:	add	x14, x14, x12
   22960:	add	x15, x15, x12
   22964:	stp	x14, x15, [x13, #-8]
   22968:	add	x8, x8, #0x1
   2296c:	cmp	x8, x26
   22970:	add	x13, x13, #0x10
   22974:	b.cs	22990 <rpl_regexec@@Base+0x275c>  // b.hs, b.nlast
   22978:	ldur	x14, [x13, #-8]
   2297c:	cmn	x14, #0x1
   22980:	b.eq	22968 <rpl_regexec@@Base+0x2734>  // b.none
   22984:	cbnz	w9, 22930 <rpl_regexec@@Base+0x26fc>
   22988:	ldr	x15, [x13]
   2298c:	b	2295c <rpl_regexec@@Base+0x2728>
   22990:	cmp	x21, #0x1
   22994:	b.lt	229a8 <rpl_regexec@@Base+0x2774>  // b.tstop
   22998:	add	x0, x19, x26, lsl #4
   2299c:	lsl	x2, x21, #4
   229a0:	mov	w1, #0xff                  	// #255
   229a4:	bl	a630 <memset@plt>
   229a8:	ldr	x8, [x24, #224]
   229ac:	mov	w20, wzr
   229b0:	cbz	x8, 22a18 <rpl_regexec@@Base+0x27e4>
   229b4:	cmp	x26, #0x2
   229b8:	b.cc	22a18 <rpl_regexec@@Base+0x27e4>  // b.lo, b.ul, b.last
   229bc:	ldp	x11, x10, [sp, #152]
   229c0:	ldr	x13, [sp, #168]
   229c4:	mov	x9, xzr
   229c8:	mvn	x10, x10
   229cc:	add	x10, x10, x11
   229d0:	add	x11, x13, #0x18
   229d4:	b	229e8 <rpl_regexec@@Base+0x27b4>
   229d8:	add	x9, x9, #0x1
   229dc:	cmp	x10, x9
   229e0:	add	x11, x11, #0x10
   229e4:	b.eq	22a14 <rpl_regexec@@Base+0x27e0>  // b.none
   229e8:	ldr	x12, [x8, x9, lsl #3]
   229ec:	cmp	x9, x12
   229f0:	b.eq	229d8 <rpl_regexec@@Base+0x27a4>  // b.none
   229f4:	add	x12, x13, x12, lsl #4
   229f8:	ldr	x12, [x12, #16]
   229fc:	stur	x12, [x11, #-8]
   22a00:	ldr	x12, [x8, x9, lsl #3]
   22a04:	add	x12, x13, x12, lsl #4
   22a08:	ldr	x12, [x12, #24]
   22a0c:	str	x12, [x11]
   22a10:	b	229d8 <rpl_regexec@@Base+0x27a4>
   22a14:	mov	w20, wzr
   22a18:	ldr	x0, [sp, #488]
   22a1c:	bl	a960 <free@plt>
   22a20:	ldr	x8, [x24, #152]
   22a24:	cbz	x8, 22a40 <rpl_regexec@@Base+0x280c>
   22a28:	add	x0, sp, #0x130
   22a2c:	bl	293bc <rpl_re_set_registers@@Base+0x626c>
   22a30:	ldr	x0, [sp, #552]
   22a34:	bl	a960 <free@plt>
   22a38:	ldr	x0, [sp, #520]
   22a3c:	bl	a960 <free@plt>
   22a40:	ldr	x0, [sp, #320]
   22a44:	bl	a960 <free@plt>
   22a48:	ldr	x0, [sp, #328]
   22a4c:	bl	a960 <free@plt>
   22a50:	ldrb	w8, [sp, #443]
   22a54:	cbz	w8, 22a60 <rpl_regexec@@Base+0x282c>
   22a58:	ldr	x0, [sp, #312]
   22a5c:	bl	a960 <free@plt>
   22a60:	mov	w0, w20
   22a64:	add	sp, sp, #0x2a0
   22a68:	ldp	x20, x19, [sp, #80]
   22a6c:	ldp	x22, x21, [sp, #64]
   22a70:	ldp	x24, x23, [sp, #48]
   22a74:	ldp	x26, x25, [sp, #32]
   22a78:	ldp	x28, x27, [sp, #16]
   22a7c:	ldp	x29, x30, [sp], #96
   22a80:	ret
   22a84:	mov	w20, w0
   22a88:	b	22a18 <rpl_regexec@@Base+0x27e4>
   22a8c:	ldur	w8, [x29, #-100]
   22a90:	cmp	w8, #0xc
   22a94:	b.ne	22ad8 <rpl_regexec@@Base+0x28a4>  // b.any
   22a98:	mov	w20, #0xc                   	// #12
   22a9c:	b	22a18 <rpl_regexec@@Base+0x27e4>
   22aa0:	mov	x0, x26
   22aa4:	bl	a960 <free@plt>
   22aa8:	mov	w20, #0xc                   	// #12
   22aac:	b	22a18 <rpl_regexec@@Base+0x27e4>
   22ab0:	cmp	w0, #0xc
   22ab4:	b.eq	22a98 <rpl_regexec@@Base+0x2864>  // b.none
   22ab8:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   22abc:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   22ac0:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   22ac4:	add	x0, x0, #0x930
   22ac8:	add	x1, x1, #0x82d
   22acc:	add	x3, x3, #0x942
   22ad0:	mov	w2, #0x46c                 	// #1132
   22ad4:	bl	ad70 <__assert_fail@plt>
   22ad8:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   22adc:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   22ae0:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   22ae4:	add	x0, x0, #0x930
   22ae8:	add	x1, x1, #0x82d
   22aec:	add	x3, x3, #0x942
   22af0:	mov	w2, #0x435                 	// #1077
   22af4:	bl	ad70 <__assert_fail@plt>

0000000000022af8 <rpl_re_match@@Base>:
   22af8:	mov	x6, x4
   22afc:	mov	w7, #0x1                   	// #1
   22b00:	mov	x4, xzr
   22b04:	mov	x5, x2
   22b08:	b	22b0c <rpl_re_match@@Base+0x14>
   22b0c:	sub	sp, sp, #0x80
   22b10:	cmp	x3, x2
   22b14:	cset	w8, gt
   22b18:	orr	x8, x8, x3, lsr #63
   22b1c:	stp	x29, x30, [sp, #32]
   22b20:	stp	x28, x27, [sp, #48]
   22b24:	stp	x26, x25, [sp, #64]
   22b28:	stp	x24, x23, [sp, #80]
   22b2c:	stp	x22, x21, [sp, #96]
   22b30:	stp	x20, x19, [sp, #112]
   22b34:	add	x29, sp, #0x20
   22b38:	cbnz	x8, 22e64 <rpl_re_match@@Base+0x36c>
   22b3c:	add	x8, x4, x3
   22b40:	adrp	x10, 42000 <vasnprintf@@Base+0x1424c>
   22b44:	bic	x9, x8, x8, asr #63
   22b48:	cmp	x8, x2
   22b4c:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   22b50:	ldr	x20, [x0]
   22b54:	ldr	x10, [x10, #3944]
   22b58:	ldr	x8, [x8, #4040]
   22b5c:	mov	w23, w7
   22b60:	mov	x22, x6
   22b64:	mov	x24, x5
   22b68:	mov	x19, x3
   22b6c:	mov	x25, x2
   22b70:	mov	x26, x1
   22b74:	mov	x21, x0
   22b78:	orr	x8, x8, x10
   22b7c:	csel	x27, x2, x9, gt
   22b80:	cbz	x8, 22b8c <rpl_re_match@@Base+0x94>
   22b84:	add	x0, x20, #0xe8
   22b88:	bl	add0 <pthread_mutex_lock@plt>
   22b8c:	ldrb	w28, [x21, #56]
   22b90:	cmp	x27, x19
   22b94:	stur	x20, [x29, #-8]
   22b98:	stur	w23, [x29, #-12]
   22b9c:	b.le	22bc0 <rpl_re_match@@Base+0xc8>
   22ba0:	tbnz	w28, #3, 22bc0 <rpl_re_match@@Base+0xc8>
   22ba4:	ldr	x9, [x21, #32]
   22ba8:	mov	w8, w28
   22bac:	cbz	x9, 22bc4 <rpl_re_match@@Base+0xcc>
   22bb0:	mov	x0, x21
   22bb4:	bl	ae60 <rpl_re_compile_fastmap@plt>
   22bb8:	ldrb	w8, [x21, #56]
   22bbc:	b	22bc4 <rpl_re_match@@Base+0xcc>
   22bc0:	mov	w8, w28
   22bc4:	mov	x20, xzr
   22bc8:	mov	w23, #0x1                   	// #1
   22bcc:	cbz	x22, 22c0c <rpl_re_match@@Base+0x114>
   22bd0:	tbnz	w8, #4, 22c0c <rpl_re_match@@Base+0x114>
   22bd4:	and	w8, w8, #0x6
   22bd8:	cmp	w8, #0x4
   22bdc:	b.ne	22c00 <rpl_re_match@@Base+0x108>  // b.any
   22be0:	ldr	x8, [x22]
   22be4:	ldr	x9, [x21, #48]
   22be8:	cmp	x8, x9
   22bec:	b.hi	22c04 <rpl_re_match@@Base+0x10c>  // b.pmore
   22bf0:	cmp	x8, #0x1
   22bf4:	csel	x20, xzr, x22, lt  // lt = tstop
   22bf8:	csinc	x23, x8, xzr, ge  // ge = tcont
   22bfc:	b	22c0c <rpl_re_match@@Base+0x114>
   22c00:	ldr	x9, [x21, #48]
   22c04:	add	x23, x9, #0x1
   22c08:	mov	x20, x22
   22c0c:	lsl	x0, x23, #4
   22c10:	bl	a540 <malloc@plt>
   22c14:	cbz	x0, 22e6c <rpl_re_match@@Base+0x374>
   22c18:	mov	x22, x0
   22c1c:	ubfx	w8, w28, #5, #2
   22c20:	mov	x0, x21
   22c24:	mov	x1, x26
   22c28:	mov	x2, x25
   22c2c:	mov	x3, x19
   22c30:	mov	x4, x27
   22c34:	mov	x5, x24
   22c38:	mov	x6, x23
   22c3c:	mov	x7, x22
   22c40:	str	w8, [sp]
   22c44:	bl	2034c <rpl_regexec@@Base+0x118>
   22c48:	cbz	w0, 22ca8 <rpl_re_match@@Base+0x1b0>
   22c4c:	ldur	x20, [x29, #-8]
   22c50:	cmp	w0, #0x1
   22c54:	mov	x8, #0xfffffffffffffffe    	// #-2
   22c58:	cinc	x21, x8, eq  // eq = none
   22c5c:	mov	x0, x22
   22c60:	bl	a960 <free@plt>
   22c64:	adrp	x8, 42000 <vasnprintf@@Base+0x1424c>
   22c68:	adrp	x9, 42000 <vasnprintf@@Base+0x1424c>
   22c6c:	ldr	x8, [x8, #3944]
   22c70:	ldr	x9, [x9, #4040]
   22c74:	orr	x8, x9, x8
   22c78:	cbz	x8, 22c84 <rpl_re_match@@Base+0x18c>
   22c7c:	add	x0, x20, #0xe8
   22c80:	bl	ae10 <pthread_mutex_unlock@plt>
   22c84:	mov	x0, x21
   22c88:	ldp	x20, x19, [sp, #112]
   22c8c:	ldp	x22, x21, [sp, #96]
   22c90:	ldp	x24, x23, [sp, #80]
   22c94:	ldp	x26, x25, [sp, #64]
   22c98:	ldp	x28, x27, [sp, #48]
   22c9c:	ldp	x29, x30, [sp, #32]
   22ca0:	add	sp, sp, #0x80
   22ca4:	ret
   22ca8:	cbz	x20, 22dec <rpl_re_match@@Base+0x2f4>
   22cac:	ldrb	w8, [x21, #56]
   22cb0:	ubfx	w8, w8, #1, #2
   22cb4:	cmp	w8, #0x2
   22cb8:	b.eq	22d34 <rpl_re_match@@Base+0x23c>  // b.none
   22cbc:	cmp	w8, #0x1
   22cc0:	add	x26, x23, #0x1
   22cc4:	b.eq	22d08 <rpl_re_match@@Base+0x210>  // b.none
   22cc8:	cbnz	w8, 22eb8 <rpl_re_match@@Base+0x3c0>
   22ccc:	lsl	x25, x26, #3
   22cd0:	mov	x0, x25
   22cd4:	bl	a540 <malloc@plt>
   22cd8:	str	x0, [x20, #8]
   22cdc:	cbz	x0, 22eb0 <rpl_re_match@@Base+0x3b8>
   22ce0:	mov	x24, x0
   22ce4:	mov	x0, x25
   22ce8:	bl	a540 <malloc@plt>
   22cec:	str	x0, [x20, #16]
   22cf0:	cbz	x0, 22ea8 <rpl_re_match@@Base+0x3b0>
   22cf4:	str	x26, [x20]
   22cf8:	mov	w8, #0x1                   	// #1
   22cfc:	cmp	x23, #0x1
   22d00:	b.ge	22d4c <rpl_re_match@@Base+0x254>  // b.tcont
   22d04:	b	22d24 <rpl_re_match@@Base+0x22c>
   22d08:	ldr	x9, [x20]
   22d0c:	cmp	x26, x9
   22d10:	b.hi	22e78 <rpl_re_match@@Base+0x380>  // b.pmore
   22d14:	mov	w8, #0x1                   	// #1
   22d18:	mov	x26, x9
   22d1c:	cmp	x23, #0x1
   22d20:	b.ge	22d4c <rpl_re_match@@Base+0x254>  // b.tcont
   22d24:	mov	x23, xzr
   22d28:	cmp	x23, x26
   22d2c:	b.cc	22db4 <rpl_re_match@@Base+0x2bc>  // b.lo, b.ul, b.last
   22d30:	b	22dd8 <rpl_re_match@@Base+0x2e0>
   22d34:	ldr	x26, [x20]
   22d38:	cmp	x26, x23
   22d3c:	b.cc	22ef8 <rpl_re_match@@Base+0x400>  // b.lo, b.ul, b.last
   22d40:	mov	w8, #0x2                   	// #2
   22d44:	cmp	x23, #0x1
   22d48:	b.lt	22d24 <rpl_re_match@@Base+0x22c>  // b.tstop
   22d4c:	ldp	x9, x10, [x20, #8]
   22d50:	cmp	x23, #0x3
   22d54:	b.ls	22d74 <rpl_re_match@@Base+0x27c>  // b.plast
   22d58:	lsl	x11, x23, #3
   22d5c:	add	x12, x10, x11
   22d60:	cmp	x9, x12
   22d64:	b.cs	22e1c <rpl_re_match@@Base+0x324>  // b.hs, b.nlast
   22d68:	add	x11, x9, x11
   22d6c:	cmp	x10, x11
   22d70:	b.cs	22e1c <rpl_re_match@@Base+0x324>  // b.hs, b.nlast
   22d74:	mov	x11, xzr
   22d78:	sub	x12, x23, x11
   22d7c:	lsl	x13, x11, #3
   22d80:	add	x11, x22, x11, lsl #4
   22d84:	add	x10, x10, x13
   22d88:	add	x11, x11, #0x8
   22d8c:	add	x9, x9, x13
   22d90:	ldur	x13, [x11, #-8]
   22d94:	subs	x12, x12, #0x1
   22d98:	str	x13, [x9], #8
   22d9c:	ldr	x13, [x11], #16
   22da0:	str	x13, [x10], #8
   22da4:	b.ne	22d90 <rpl_re_match@@Base+0x298>  // b.any
   22da8:	ldr	x26, [x20]
   22dac:	cmp	x23, x26
   22db0:	b.cs	22dd8 <rpl_re_match@@Base+0x2e0>  // b.hs, b.nlast
   22db4:	ldp	x10, x9, [x20, #8]
   22db8:	mov	x11, #0xffffffffffffffff    	// #-1
   22dbc:	lsl	x12, x23, #3
   22dc0:	str	x11, [x9, x12]
   22dc4:	str	x11, [x10, x12]
   22dc8:	ldr	x12, [x20]
   22dcc:	add	x23, x23, #0x1
   22dd0:	cmp	x23, x12
   22dd4:	b.cc	22dbc <rpl_re_match@@Base+0x2c4>  // b.lo, b.ul, b.last
   22dd8:	ldrb	w9, [x21, #56]
   22ddc:	and	w9, w9, #0xfffffff9
   22de0:	orr	w9, w9, w8, lsl #1
   22de4:	strb	w9, [x21, #56]
   22de8:	cbz	w8, 22e10 <rpl_re_match@@Base+0x318>
   22dec:	ldr	x21, [x22]
   22df0:	ldur	x20, [x29, #-8]
   22df4:	ldur	w8, [x29, #-12]
   22df8:	tbz	w8, #0, 22c5c <rpl_re_match@@Base+0x164>
   22dfc:	cmp	x21, x19
   22e00:	b.ne	22ed8 <rpl_re_match@@Base+0x3e0>  // b.any
   22e04:	ldr	x8, [x22, #8]
   22e08:	sub	x21, x8, x19
   22e0c:	b	22c5c <rpl_re_match@@Base+0x164>
   22e10:	ldur	x20, [x29, #-8]
   22e14:	mov	x21, #0xfffffffffffffffe    	// #-2
   22e18:	b	22c5c <rpl_re_match@@Base+0x164>
   22e1c:	and	x11, x23, #0xfffffffffffffffc
   22e20:	add	x12, x22, #0x20
   22e24:	add	x13, x9, #0x10
   22e28:	add	x14, x10, #0x10
   22e2c:	mov	x15, x11
   22e30:	sub	x16, x12, #0x20
   22e34:	ld2	{v0.2d, v1.2d}, [x12]
   22e38:	ld2	{v2.2d, v3.2d}, [x16]
   22e3c:	add	x12, x12, #0x40
   22e40:	subs	x15, x15, #0x4
   22e44:	stp	q2, q0, [x13, #-16]
   22e48:	stp	q3, q1, [x14, #-16]
   22e4c:	add	x13, x13, #0x20
   22e50:	add	x14, x14, #0x20
   22e54:	b.ne	22e30 <rpl_re_match@@Base+0x338>  // b.any
   22e58:	cmp	x23, x11
   22e5c:	b.ne	22d78 <rpl_re_match@@Base+0x280>  // b.any
   22e60:	b	22da8 <rpl_re_match@@Base+0x2b0>
   22e64:	mov	x21, #0xffffffffffffffff    	// #-1
   22e68:	b	22c84 <rpl_re_match@@Base+0x18c>
   22e6c:	ldur	x20, [x29, #-8]
   22e70:	mov	x21, #0xfffffffffffffffe    	// #-2
   22e74:	b	22c64 <rpl_re_match@@Base+0x16c>
   22e78:	ldr	x0, [x20, #8]
   22e7c:	lsl	x25, x26, #3
   22e80:	mov	x1, x25
   22e84:	bl	a720 <realloc@plt>
   22e88:	cbz	x0, 22eb0 <rpl_re_match@@Base+0x3b8>
   22e8c:	mov	x24, x0
   22e90:	ldr	x0, [x20, #16]
   22e94:	mov	x1, x25
   22e98:	bl	a720 <realloc@plt>
   22e9c:	cbz	x0, 22ea8 <rpl_re_match@@Base+0x3b0>
   22ea0:	stp	x24, x0, [x20, #8]
   22ea4:	b	22cf4 <rpl_re_match@@Base+0x1fc>
   22ea8:	mov	x0, x24
   22eac:	bl	a960 <free@plt>
   22eb0:	mov	w8, wzr
   22eb4:	b	22dd8 <rpl_re_match@@Base+0x2e0>
   22eb8:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   22ebc:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   22ec0:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   22ec4:	add	x0, x0, #0x8b2
   22ec8:	add	x1, x1, #0x82d
   22ecc:	add	x3, x3, #0x8cf
   22ed0:	mov	w2, #0x1f9                 	// #505
   22ed4:	bl	ad70 <__assert_fail@plt>
   22ed8:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   22edc:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   22ee0:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   22ee4:	add	x0, x0, #0x814
   22ee8:	add	x1, x1, #0x82d
   22eec:	add	x3, x3, #0x839
   22ef0:	mov	w2, #0x1be                 	// #446
   22ef4:	bl	ad70 <__assert_fail@plt>
   22ef8:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   22efc:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   22f00:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   22f04:	add	x0, x0, #0x918
   22f08:	add	x1, x1, #0x82d
   22f0c:	add	x3, x3, #0x8cf
   22f10:	mov	w2, #0x1fb                 	// #507
   22f14:	bl	ad70 <__assert_fail@plt>

0000000000022f18 <rpl_re_search@@Base>:
   22f18:	mov	x6, x5
   22f1c:	mov	x5, x2
   22f20:	mov	w7, wzr
   22f24:	b	22b0c <rpl_re_match@@Base+0x14>

0000000000022f28 <rpl_re_match_2@@Base>:
   22f28:	stp	x29, x30, [sp, #-96]!
   22f2c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   22f30:	sub	x9, x9, x4
   22f34:	orr	x8, x4, x2
   22f38:	cmp	x9, x2
   22f3c:	orr	x8, x8, x7
   22f40:	cset	w9, lt  // lt = tstop
   22f44:	orr	x8, x9, x8, lsr #63
   22f48:	stp	x28, x27, [sp, #16]
   22f4c:	stp	x26, x25, [sp, #32]
   22f50:	stp	x24, x23, [sp, #48]
   22f54:	stp	x22, x21, [sp, #64]
   22f58:	stp	x20, x19, [sp, #80]
   22f5c:	mov	x29, sp
   22f60:	cbnz	x8, 2302c <rpl_re_match_2@@Base+0x104>
   22f64:	mov	x19, x7
   22f68:	mov	x20, x6
   22f6c:	mov	x21, x5
   22f70:	mov	x27, x4
   22f74:	mov	x28, x2
   22f78:	mov	x23, x1
   22f7c:	mov	x22, x0
   22f80:	cmp	x4, #0x1
   22f84:	add	x24, x4, x2
   22f88:	b.lt	22fcc <rpl_re_match_2@@Base+0xa4>  // b.tstop
   22f8c:	mov	x26, x3
   22f90:	cmp	x28, #0x1
   22f94:	b.lt	22fd4 <rpl_re_match_2@@Base+0xac>  // b.tstop
   22f98:	mov	x0, x24
   22f9c:	bl	a540 <malloc@plt>
   22fa0:	cbz	x0, 2302c <rpl_re_match_2@@Base+0x104>
   22fa4:	mov	x1, x23
   22fa8:	mov	x2, x28
   22fac:	mov	x25, x0
   22fb0:	bl	a210 <memcpy@plt>
   22fb4:	add	x0, x25, x28
   22fb8:	mov	x1, x26
   22fbc:	mov	x2, x27
   22fc0:	bl	a210 <memcpy@plt>
   22fc4:	mov	x23, x25
   22fc8:	b	22fdc <rpl_re_match_2@@Base+0xb4>
   22fcc:	mov	x25, xzr
   22fd0:	b	22fdc <rpl_re_match_2@@Base+0xb4>
   22fd4:	mov	x25, xzr
   22fd8:	mov	x23, x26
   22fdc:	mov	w7, #0x1                   	// #1
   22fe0:	mov	x0, x22
   22fe4:	mov	x1, x23
   22fe8:	mov	x2, x24
   22fec:	mov	x3, x21
   22ff0:	mov	x4, xzr
   22ff4:	mov	x5, x19
   22ff8:	mov	x6, x20
   22ffc:	bl	22b0c <rpl_re_match@@Base+0x14>
   23000:	mov	x19, x0
   23004:	mov	x0, x25
   23008:	bl	a960 <free@plt>
   2300c:	mov	x0, x19
   23010:	ldp	x20, x19, [sp, #80]
   23014:	ldp	x22, x21, [sp, #64]
   23018:	ldp	x24, x23, [sp, #48]
   2301c:	ldp	x26, x25, [sp, #32]
   23020:	ldp	x28, x27, [sp, #16]
   23024:	ldp	x29, x30, [sp], #96
   23028:	ret
   2302c:	mov	x0, #0xfffffffffffffffe    	// #-2
   23030:	b	23010 <rpl_re_match_2@@Base+0xe8>

0000000000023034 <rpl_re_search_2@@Base>:
   23034:	sub	sp, sp, #0x70
   23038:	stp	x29, x30, [sp, #16]
   2303c:	add	x29, sp, #0x10
   23040:	stp	x22, x21, [sp, #80]
   23044:	ldr	x22, [x29, #96]
   23048:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2304c:	sub	x9, x9, x4
   23050:	orr	x8, x4, x2
   23054:	cmp	x9, x2
   23058:	orr	x8, x8, x22
   2305c:	cset	w9, lt  // lt = tstop
   23060:	orr	x8, x9, x8, lsr #63
   23064:	stp	x28, x27, [sp, #32]
   23068:	stp	x26, x25, [sp, #48]
   2306c:	stp	x24, x23, [sp, #64]
   23070:	stp	x20, x19, [sp, #96]
   23074:	cbnz	x8, 23148 <rpl_re_search_2@@Base+0x114>
   23078:	mov	x20, x6
   2307c:	mov	x21, x5
   23080:	mov	x28, x4
   23084:	mov	x19, x2
   23088:	mov	x24, x1
   2308c:	mov	x23, x0
   23090:	cmp	x4, #0x1
   23094:	add	x25, x4, x2
   23098:	b.lt	230e4 <rpl_re_search_2@@Base+0xb0>  // b.tstop
   2309c:	mov	x27, x3
   230a0:	cmp	x19, #0x1
   230a4:	b.lt	230ec <rpl_re_search_2@@Base+0xb8>  // b.tstop
   230a8:	mov	x0, x25
   230ac:	str	x7, [sp, #8]
   230b0:	bl	a540 <malloc@plt>
   230b4:	cbz	x0, 23148 <rpl_re_search_2@@Base+0x114>
   230b8:	mov	x1, x24
   230bc:	mov	x2, x19
   230c0:	mov	x26, x0
   230c4:	bl	a210 <memcpy@plt>
   230c8:	add	x0, x26, x19
   230cc:	mov	x1, x27
   230d0:	mov	x2, x28
   230d4:	bl	a210 <memcpy@plt>
   230d8:	ldr	x7, [sp, #8]
   230dc:	mov	x24, x26
   230e0:	b	230f4 <rpl_re_search_2@@Base+0xc0>
   230e4:	mov	x26, xzr
   230e8:	b	230f4 <rpl_re_search_2@@Base+0xc0>
   230ec:	mov	x26, xzr
   230f0:	mov	x24, x27
   230f4:	mov	x0, x23
   230f8:	mov	x1, x24
   230fc:	mov	x2, x25
   23100:	mov	x3, x21
   23104:	mov	x4, x20
   23108:	mov	x5, x22
   2310c:	mov	x6, x7
   23110:	mov	w7, wzr
   23114:	bl	22b0c <rpl_re_match@@Base+0x14>
   23118:	mov	x19, x0
   2311c:	mov	x0, x26
   23120:	bl	a960 <free@plt>
   23124:	mov	x0, x19
   23128:	ldp	x20, x19, [sp, #96]
   2312c:	ldp	x22, x21, [sp, #80]
   23130:	ldp	x24, x23, [sp, #64]
   23134:	ldp	x26, x25, [sp, #48]
   23138:	ldp	x28, x27, [sp, #32]
   2313c:	ldp	x29, x30, [sp, #16]
   23140:	add	sp, sp, #0x70
   23144:	ret
   23148:	mov	x0, #0xfffffffffffffffe    	// #-2
   2314c:	b	23128 <rpl_re_search_2@@Base+0xf4>

0000000000023150 <rpl_re_set_registers@@Base>:
   23150:	ldrb	w8, [x0, #56]
   23154:	cmp	x2, #0x0
   23158:	csel	x9, xzr, x4, eq  // eq = none
   2315c:	csel	x10, xzr, x3, eq  // eq = none
   23160:	and	w8, w8, #0xfffffff9
   23164:	orr	w11, w8, #0x2
   23168:	csel	w8, w8, w11, eq  // eq = none
   2316c:	strb	w8, [x0, #56]
   23170:	stp	x10, x9, [x1, #8]
   23174:	str	x2, [x1]
   23178:	ret
   2317c:	stp	x29, x30, [sp, #-32]!
   23180:	str	x19, [sp, #16]
   23184:	mov	x19, x0
   23188:	ldr	x0, [x0, #48]
   2318c:	mov	x29, sp
   23190:	bl	a960 <free@plt>
   23194:	ldr	x0, [x19, #72]
   23198:	bl	a960 <free@plt>
   2319c:	ldr	x8, [x19, #80]
   231a0:	add	x9, x19, #0x8
   231a4:	cmp	x8, x9
   231a8:	b.eq	231bc <rpl_re_set_registers@@Base+0x6c>  // b.none
   231ac:	ldr	x0, [x8, #16]
   231b0:	bl	a960 <free@plt>
   231b4:	ldr	x0, [x19, #80]
   231b8:	bl	a960 <free@plt>
   231bc:	ldr	x0, [x19, #24]
   231c0:	bl	a960 <free@plt>
   231c4:	ldr	x0, [x19, #96]
   231c8:	bl	a960 <free@plt>
   231cc:	ldr	x0, [x19, #88]
   231d0:	bl	a960 <free@plt>
   231d4:	mov	x0, x19
   231d8:	ldr	x19, [sp, #16]
   231dc:	ldp	x29, x30, [sp], #32
   231e0:	b	a960 <free@plt>
   231e4:	sub	sp, sp, #0xb0
   231e8:	stp	x29, x30, [sp, #80]
   231ec:	stp	x28, x27, [sp, #96]
   231f0:	stp	x26, x25, [sp, #112]
   231f4:	stp	x24, x23, [sp, #128]
   231f8:	stp	x22, x21, [sp, #144]
   231fc:	stp	x20, x19, [sp, #160]
   23200:	ldr	x8, [x0, #64]
   23204:	ldr	x9, [x0, #88]
   23208:	ldrb	w10, [x0, #138]
   2320c:	ldr	x25, [x0, #48]
   23210:	mov	x19, x0
   23214:	cmp	x8, x9
   23218:	csel	x26, x9, x8, gt
   2321c:	add	x29, sp, #0x50
   23220:	cbnz	w10, 23234 <rpl_re_set_registers@@Base+0xe4>
   23224:	ldr	x8, [x19, #120]
   23228:	cbnz	x8, 23234 <rpl_re_set_registers@@Base+0xe4>
   2322c:	ldrb	w8, [x19, #140]
   23230:	cbz	w8, 2323c <rpl_re_set_registers@@Base+0xec>
   23234:	ldr	x22, [x19, #56]
   23238:	b	23408 <rpl_re_set_registers@@Base+0x2b8>
   2323c:	cmp	x26, x25
   23240:	b.le	233e8 <rpl_re_set_registers@@Base+0x298>
   23244:	add	x20, x19, #0x20
   23248:	b	23280 <rpl_re_set_registers@@Base+0x130>
   2324c:	and	x21, x23, #0xff
   23250:	bl	a730 <__ctype_toupper_loc@plt>
   23254:	ldr	x8, [x0]
   23258:	ldr	x9, [x19, #8]
   2325c:	add	x27, x25, #0x1
   23260:	ldr	w8, [x8, x21, lsl #2]
   23264:	strb	w8, [x9, x25]
   23268:	ldp	x8, x9, [x19, #8]
   2326c:	ldrb	w8, [x8, x25]
   23270:	str	w8, [x9, x25, lsl #2]
   23274:	cmp	x26, x27
   23278:	mov	x25, x27
   2327c:	b.le	23704 <rpl_re_set_registers@@Base+0x5b4>
   23280:	ldr	x21, [x19, #40]
   23284:	ldr	x22, [x19]
   23288:	add	x8, x21, x25
   2328c:	ldrsb	w23, [x22, x8]
   23290:	tbnz	w23, #31, 232a0 <rpl_re_set_registers@@Base+0x150>
   23294:	mov	x0, x20
   23298:	bl	a870 <mbsinit@plt>
   2329c:	cbnz	w0, 2324c <rpl_re_set_registers@@Base+0xfc>
   232a0:	ldr	x8, [x20]
   232a4:	add	x9, x22, x21
   232a8:	sub	x2, x26, x25
   232ac:	add	x1, x9, x25
   232b0:	add	x0, sp, #0x4
   232b4:	mov	x3, x20
   232b8:	stur	x8, [x29, #-8]
   232bc:	bl	a330 <rpl_mbrtowc@plt>
   232c0:	sub	x23, x0, #0x1
   232c4:	mov	x21, x0
   232c8:	cmn	x23, #0x4
   232cc:	b.hi	23398 <rpl_re_set_registers@@Base+0x248>  // b.pmore
   232d0:	ldr	w0, [sp, #4]
   232d4:	bl	ad10 <towupper@plt>
   232d8:	ldr	w8, [sp, #4]
   232dc:	mov	w22, w0
   232e0:	cmp	w0, w8
   232e4:	b.ne	23300 <rpl_re_set_registers@@Base+0x1b0>  // b.any
   232e8:	ldp	x9, x8, [x19]
   232ec:	ldr	x10, [x19, #40]
   232f0:	add	x0, x8, x25
   232f4:	add	x8, x9, x10
   232f8:	add	x1, x8, x25
   232fc:	b	23324 <rpl_re_set_registers@@Base+0x1d4>
   23300:	add	x0, sp, #0x8
   23304:	sub	x2, x29, #0x8
   23308:	mov	w1, w22
   2330c:	bl	aeb0 <wcrtomb@plt>
   23310:	cmp	x21, x0
   23314:	b.ne	233f0 <rpl_re_set_registers@@Base+0x2a0>  // b.any
   23318:	ldr	x8, [x19, #8]
   2331c:	add	x1, sp, #0x8
   23320:	add	x0, x8, x25
   23324:	mov	x2, x21
   23328:	bl	a210 <memcpy@plt>
   2332c:	ldr	x8, [x19, #16]
   23330:	add	x24, x21, x25
   23334:	add	x27, x25, #0x1
   23338:	cmp	x27, x24
   2333c:	str	w22, [x8, x25, lsl #2]
   23340:	b.ge	23274 <rpl_re_set_registers@@Base+0x124>  // b.tcont
   23344:	add	x8, x8, x25, lsl #2
   23348:	lsl	x9, x21, #2
   2334c:	add	x0, x8, #0x4
   23350:	sub	x2, x9, #0x4
   23354:	mov	w1, #0xff                  	// #255
   23358:	bl	a630 <memset@plt>
   2335c:	cmp	x23, #0x2
   23360:	b.cc	23380 <rpl_re_set_registers@@Base+0x230>  // b.lo, b.ul, b.last
   23364:	and	x8, x23, #0xfffffffffffffffe
   23368:	add	x27, x27, x8
   2336c:	mov	x9, x8
   23370:	subs	x9, x9, #0x2
   23374:	b.ne	23370 <rpl_re_set_registers@@Base+0x220>  // b.any
   23378:	cmp	x23, x8
   2337c:	b.eq	23390 <rpl_re_set_registers@@Base+0x240>  // b.none
   23380:	add	x8, x21, x25
   23384:	sub	x8, x8, x27
   23388:	subs	x8, x8, #0x1
   2338c:	b.ne	23388 <rpl_re_set_registers@@Base+0x238>  // b.any
   23390:	mov	x27, x24
   23394:	b	23274 <rpl_re_set_registers@@Base+0x124>
   23398:	add	x8, x21, #0x1
   2339c:	cmp	x8, #0x2
   233a0:	b.cc	233b4 <rpl_re_set_registers@@Base+0x264>  // b.lo, b.ul, b.last
   233a4:	ldr	x8, [x19, #64]
   233a8:	ldr	x9, [x19, #88]
   233ac:	cmp	x8, x9
   233b0:	b.lt	233f8 <rpl_re_set_registers@@Base+0x2a8>  // b.tstop
   233b4:	ldr	x8, [x19, #40]
   233b8:	ldp	x9, x10, [x19]
   233bc:	add	x27, x25, #0x1
   233c0:	cmn	x21, #0x1
   233c4:	add	x8, x8, x25
   233c8:	ldrb	w8, [x9, x8]
   233cc:	strb	w8, [x10, x25]
   233d0:	ldr	x9, [x19, #16]
   233d4:	str	w8, [x9, x25, lsl #2]
   233d8:	b.ne	23274 <rpl_re_set_registers@@Base+0x124>  // b.any
   233dc:	ldur	x8, [x29, #-8]
   233e0:	str	x8, [x20]
   233e4:	b	23274 <rpl_re_set_registers@@Base+0x124>
   233e8:	mov	x27, x25
   233ec:	b	23704 <rpl_re_set_registers@@Base+0x5b4>
   233f0:	mov	x27, x25
   233f4:	b	23418 <rpl_re_set_registers@@Base+0x2c8>
   233f8:	ldur	x8, [x29, #-8]
   233fc:	mov	x27, x25
   23400:	str	x8, [x20]
   23404:	b	23704 <rpl_re_set_registers@@Base+0x5b4>
   23408:	cmp	x25, x26
   2340c:	mov	x27, x25
   23410:	mov	x25, x22
   23414:	b.ge	23704 <rpl_re_set_registers@@Base+0x5b4>  // b.tcont
   23418:	mov	x23, x19
   2341c:	ldr	x8, [x23, #32]!
   23420:	sub	x2, x26, x27
   23424:	stur	x8, [x29, #-8]
   23428:	ldr	x8, [x23, #88]
   2342c:	cbnz	x8, 23524 <rpl_re_set_registers@@Base+0x3d4>
   23430:	ldr	x8, [x19]
   23434:	ldr	x9, [x19, #40]
   23438:	add	x8, x8, x9
   2343c:	add	x24, x8, x25
   23440:	mov	x0, sp
   23444:	mov	x1, x24
   23448:	mov	x3, x23
   2344c:	bl	a330 <rpl_mbrtowc@plt>
   23450:	sub	x28, x0, #0x1
   23454:	mov	x20, x0
   23458:	cmn	x28, #0x4
   2345c:	b.hi	23578 <rpl_re_set_registers@@Base+0x428>  // b.pmore
   23460:	ldr	w0, [sp]
   23464:	bl	ad10 <towupper@plt>
   23468:	ldr	w8, [sp]
   2346c:	mov	w21, w0
   23470:	cmp	w0, w8
   23474:	b.ne	23484 <rpl_re_set_registers@@Base+0x334>  // b.any
   23478:	ldr	x8, [x19, #8]
   2347c:	mov	x1, x24
   23480:	b	234a4 <rpl_re_set_registers@@Base+0x354>
   23484:	add	x0, sp, #0x8
   23488:	sub	x2, x29, #0x8
   2348c:	mov	w1, w21
   23490:	bl	aeb0 <wcrtomb@plt>
   23494:	subs	x9, x0, x20
   23498:	b.ne	235e0 <rpl_re_set_registers@@Base+0x490>  // b.any
   2349c:	ldr	x8, [x19, #8]
   234a0:	add	x1, sp, #0x8
   234a4:	add	x0, x8, x27
   234a8:	mov	x2, x20
   234ac:	bl	a210 <memcpy@plt>
   234b0:	ldrb	w8, [x19, #140]
   234b4:	cbnz	w8, 23634 <rpl_re_set_registers@@Base+0x4e4>
   234b8:	ldr	x8, [x19, #16]
   234bc:	add	x22, x20, x25
   234c0:	add	x23, x20, x27
   234c4:	add	x25, x27, #0x1
   234c8:	cmp	x25, x23
   234cc:	str	w21, [x8, x27, lsl #2]
   234d0:	b.ge	23408 <rpl_re_set_registers@@Base+0x2b8>  // b.tcont
   234d4:	add	x0, x8, x25, lsl #2
   234d8:	lsl	x8, x20, #2
   234dc:	sub	x2, x8, #0x4
   234e0:	mov	w1, #0xff                  	// #255
   234e4:	bl	a630 <memset@plt>
   234e8:	cmp	x28, #0x2
   234ec:	b.cc	2350c <rpl_re_set_registers@@Base+0x3bc>  // b.lo, b.ul, b.last
   234f0:	and	x8, x28, #0xfffffffffffffffe
   234f4:	add	x25, x25, x8
   234f8:	mov	x9, x8
   234fc:	subs	x9, x9, #0x2
   23500:	b.ne	234fc <rpl_re_set_registers@@Base+0x3ac>  // b.any
   23504:	cmp	x28, x8
   23508:	b.eq	2351c <rpl_re_set_registers@@Base+0x3cc>  // b.none
   2350c:	add	x8, x20, x27
   23510:	sub	x8, x8, x25
   23514:	subs	x8, x8, #0x1
   23518:	b.ne	23514 <rpl_re_set_registers@@Base+0x3c4>  // b.any
   2351c:	mov	x25, x23
   23520:	b	23408 <rpl_re_set_registers@@Base+0x2b8>
   23524:	ldr	w9, [x19, #144]
   23528:	add	x24, sp, #0x8
   2352c:	cmp	w9, #0x1
   23530:	b.lt	23440 <rpl_re_set_registers@@Base+0x2f0>  // b.tstop
   23534:	cmp	x2, #0x1
   23538:	b.lt	23440 <rpl_re_set_registers@@Base+0x2f0>  // b.tstop
   2353c:	ldr	x11, [x19, #40]
   23540:	ldr	x12, [x19]
   23544:	mov	x10, xzr
   23548:	add	x11, x25, x11
   2354c:	add	x11, x12, x11
   23550:	ldrb	w12, [x11, x10]
   23554:	add	x24, sp, #0x8
   23558:	ldrb	w12, [x8, x12]
   2355c:	strb	w12, [x24, x10]
   23560:	add	x10, x10, #0x1
   23564:	cmp	x10, x9
   23568:	b.cs	23440 <rpl_re_set_registers@@Base+0x2f0>  // b.hs, b.nlast
   2356c:	cmp	x2, x10
   23570:	b.gt	23550 <rpl_re_set_registers@@Base+0x400>
   23574:	b	23440 <rpl_re_set_registers@@Base+0x2f0>
   23578:	add	x8, x20, #0x1
   2357c:	cmp	x8, #0x2
   23580:	b.cc	23594 <rpl_re_set_registers@@Base+0x444>  // b.lo, b.ul, b.last
   23584:	ldr	x8, [x19, #64]
   23588:	ldr	x9, [x19, #88]
   2358c:	cmp	x8, x9
   23590:	b.lt	236fc <rpl_re_set_registers@@Base+0x5ac>  // b.tstop
   23594:	ldr	x8, [x19, #40]
   23598:	ldr	x10, [x19]
   2359c:	ldr	x9, [x19, #120]
   235a0:	add	x8, x8, x25
   235a4:	ldrb	w8, [x10, x8]
   235a8:	cbnz	x9, 23734 <rpl_re_set_registers@@Base+0x5e4>
   235ac:	ldr	x9, [x19, #8]
   235b0:	strb	w8, [x9, x27]
   235b4:	ldrb	w9, [x19, #140]
   235b8:	cbnz	w9, 2373c <rpl_re_set_registers@@Base+0x5ec>
   235bc:	ldr	x9, [x19, #16]
   235c0:	add	x22, x25, #0x1
   235c4:	add	x25, x27, #0x1
   235c8:	cmn	x20, #0x1
   235cc:	str	w8, [x9, x27, lsl #2]
   235d0:	b.ne	23408 <rpl_re_set_registers@@Base+0x2b8>  // b.any
   235d4:	ldur	x8, [x29, #-8]
   235d8:	str	x8, [x23]
   235dc:	b	23408 <rpl_re_set_registers@@Base+0x2b8>
   235e0:	mov	x22, x0
   235e4:	cmn	x0, #0x1
   235e8:	b.eq	23478 <rpl_re_set_registers@@Base+0x328>  // b.none
   235ec:	ldr	x8, [x19, #64]
   235f0:	add	x24, x22, x27
   235f4:	cmp	x24, x8
   235f8:	b.hi	236fc <rpl_re_set_registers@@Base+0x5ac>  // b.pmore
   235fc:	ldr	x0, [x19, #24]
   23600:	mov	x23, x9
   23604:	cbnz	x0, 23618 <rpl_re_set_registers@@Base+0x4c8>
   23608:	lsl	x0, x8, #3
   2360c:	bl	a540 <malloc@plt>
   23610:	str	x0, [x19, #24]
   23614:	cbz	x0, 2372c <rpl_re_set_registers@@Base+0x5dc>
   23618:	ldrb	w8, [x19, #140]
   2361c:	cbnz	w8, 23760 <rpl_re_set_registers@@Base+0x610>
   23620:	cbz	x27, 23758 <rpl_re_set_registers@@Base+0x608>
   23624:	cmp	x27, #0x4
   23628:	b.cs	236bc <rpl_re_set_registers@@Base+0x56c>  // b.hs, b.nlast
   2362c:	mov	x8, xzr
   23630:	b	23748 <rpl_re_set_registers@@Base+0x5f8>
   23634:	ldr	x8, [x19, #24]
   23638:	cmp	x20, #0x4
   2363c:	b.cs	23648 <rpl_re_set_registers@@Base+0x4f8>  // b.hs, b.nlast
   23640:	mov	x9, xzr
   23644:	b	23698 <rpl_re_set_registers@@Base+0x548>
   23648:	adrp	x11, 31000 <vasnprintf@@Base+0x324c>
   2364c:	ldr	q1, [x11, #800]
   23650:	mov	w11, #0x2                   	// #2
   23654:	and	x9, x20, #0xfffffffffffffffc
   23658:	add	x10, x8, x27, lsl #3
   2365c:	dup	v2.2d, x11
   23660:	mov	w11, #0x4                   	// #4
   23664:	dup	v0.2d, x25
   23668:	add	x10, x10, #0x10
   2366c:	dup	v3.2d, x11
   23670:	mov	x11, x9
   23674:	add	v4.2d, v1.2d, v0.2d
   23678:	add	v5.2d, v4.2d, v2.2d
   2367c:	add	v1.2d, v1.2d, v3.2d
   23680:	subs	x11, x11, #0x4
   23684:	stp	q4, q5, [x10, #-16]
   23688:	add	x10, x10, #0x20
   2368c:	b.ne	23674 <rpl_re_set_registers@@Base+0x524>  // b.any
   23690:	cmp	x20, x9
   23694:	b.eq	234b8 <rpl_re_set_registers@@Base+0x368>  // b.none
   23698:	sub	x10, x20, x9
   2369c:	add	x11, x25, x9
   236a0:	add	x9, x27, x9
   236a4:	add	x8, x8, x9, lsl #3
   236a8:	str	x11, [x8], #8
   236ac:	subs	x10, x10, #0x1
   236b0:	add	x11, x11, #0x1
   236b4:	b.ne	236a8 <rpl_re_set_registers@@Base+0x558>  // b.any
   236b8:	b	234b8 <rpl_re_set_registers@@Base+0x368>
   236bc:	adrp	x10, 31000 <vasnprintf@@Base+0x324c>
   236c0:	ldr	q0, [x10, #800]
   236c4:	mov	w10, #0x2                   	// #2
   236c8:	and	x8, x27, #0xfffffffffffffffc
   236cc:	dup	v1.2d, x10
   236d0:	mov	w10, #0x4                   	// #4
   236d4:	add	x9, x0, #0x10
   236d8:	dup	v2.2d, x10
   236dc:	mov	x10, x8
   236e0:	add	v3.2d, v0.2d, v1.2d
   236e4:	stp	q0, q3, [x9, #-16]
   236e8:	add	v0.2d, v0.2d, v2.2d
   236ec:	subs	x10, x10, #0x4
   236f0:	add	x9, x9, #0x20
   236f4:	b.ne	236e0 <rpl_re_set_registers@@Base+0x590>  // b.any
   236f8:	b	23750 <rpl_re_set_registers@@Base+0x600>
   236fc:	ldur	x8, [x29, #-8]
   23700:	str	x8, [x23]
   23704:	mov	w0, wzr
   23708:	stp	x27, x25, [x19, #48]
   2370c:	ldp	x20, x19, [sp, #160]
   23710:	ldp	x22, x21, [sp, #144]
   23714:	ldp	x24, x23, [sp, #128]
   23718:	ldp	x26, x25, [sp, #112]
   2371c:	ldp	x28, x27, [sp, #96]
   23720:	ldp	x29, x30, [sp, #80]
   23724:	add	sp, sp, #0xb0
   23728:	ret
   2372c:	mov	w0, #0xc                   	// #12
   23730:	b	2370c <rpl_re_set_registers@@Base+0x5bc>
   23734:	ldrb	w8, [x9, x8]
   23738:	b	235ac <rpl_re_set_registers@@Base+0x45c>
   2373c:	ldr	x9, [x19, #24]
   23740:	str	x25, [x9, x27, lsl #3]
   23744:	b	235bc <rpl_re_set_registers@@Base+0x46c>
   23748:	str	x8, [x0, x8, lsl #3]
   2374c:	add	x8, x8, #0x1
   23750:	cmp	x27, x8
   23754:	b.ne	23748 <rpl_re_set_registers@@Base+0x5f8>  // b.any
   23758:	mov	w8, #0x1                   	// #1
   2375c:	strb	w8, [x19, #140]
   23760:	ldr	x8, [x19, #8]
   23764:	add	x1, sp, #0x8
   23768:	mov	x2, x22
   2376c:	add	x0, x8, x27
   23770:	bl	a210 <memcpy@plt>
   23774:	ldr	x8, [x19, #16]
   23778:	cmp	x22, #0x2
   2377c:	mov	x16, x23
   23780:	str	w21, [x8, x27, lsl #2]
   23784:	ldr	x9, [x19, #24]
   23788:	str	x25, [x9, x27, lsl #3]
   2378c:	b.cc	23850 <rpl_re_set_registers@@Base+0x700>  // b.lo, b.ul, b.last
   23790:	sub	x11, x22, #0x1
   23794:	cmp	x11, #0x4
   23798:	b.cs	237a4 <rpl_re_set_registers@@Base+0x654>  // b.hs, b.nlast
   2379c:	mov	w10, #0x1                   	// #1
   237a0:	b	23824 <rpl_re_set_registers@@Base+0x6d4>
   237a4:	adrp	x13, 31000 <vasnprintf@@Base+0x324c>
   237a8:	ldr	q3, [x13, #816]
   237ac:	mov	w15, #0x2                   	// #2
   237b0:	and	x12, x11, #0xfffffffffffffffc
   237b4:	add	x14, x27, #0x3
   237b8:	dup	v4.2d, x15
   237bc:	mov	w15, #0x4                   	// #4
   237c0:	dup	v0.2d, x20
   237c4:	dup	v1.2d, x28
   237c8:	dup	v2.2d, x25
   237cc:	orr	x10, x12, #0x1
   237d0:	add	x13, x8, x14, lsl #2
   237d4:	add	x14, x9, x14, lsl #3
   237d8:	movi	v5.2d, #0xffffffffffffffff
   237dc:	dup	v6.2d, x15
   237e0:	mov	x15, x12
   237e4:	add	v7.2d, v3.2d, v4.2d
   237e8:	cmhi	v16.2d, v0.2d, v3.2d
   237ec:	cmhi	v17.2d, v0.2d, v7.2d
   237f0:	bsl	v16.16b, v3.16b, v1.16b
   237f4:	bsl	v17.16b, v7.16b, v1.16b
   237f8:	add	v7.2d, v16.2d, v2.2d
   237fc:	add	v16.2d, v17.2d, v2.2d
   23800:	subs	x15, x15, #0x4
   23804:	add	v3.2d, v3.2d, v6.2d
   23808:	stp	q7, q16, [x14, #-16]
   2380c:	stp	d5, d5, [x13, #-8]
   23810:	add	x13, x13, #0x10
   23814:	add	x14, x14, #0x20
   23818:	b.ne	237e4 <rpl_re_set_registers@@Base+0x694>  // b.any
   2381c:	cmp	x11, x12
   23820:	b.eq	23850 <rpl_re_set_registers@@Base+0x700>  // b.none
   23824:	add	x8, x8, x27, lsl #2
   23828:	add	x9, x9, x27, lsl #3
   2382c:	mov	w11, #0xffffffff            	// #-1
   23830:	cmp	x10, x20
   23834:	csel	x12, x10, x28, cc  // cc = lo, ul, last
   23838:	add	x12, x12, x25
   2383c:	str	x12, [x9, x10, lsl #3]
   23840:	str	w11, [x8, x10, lsl #2]
   23844:	add	x10, x10, #0x1
   23848:	cmp	x22, x10
   2384c:	b.ne	23830 <rpl_re_set_registers@@Base+0x6e0>  // b.any
   23850:	ldp	x8, x9, [x19, #88]
   23854:	add	x8, x8, x16
   23858:	cmp	x9, x25
   2385c:	str	x8, [x19, #88]
   23860:	b.le	23870 <rpl_re_set_registers@@Base+0x720>
   23864:	ldr	x9, [x19, #104]
   23868:	add	x9, x9, x16
   2386c:	str	x9, [x19, #104]
   23870:	ldr	x9, [x19, #64]
   23874:	add	x22, x20, x25
   23878:	mov	x25, x24
   2387c:	cmp	x9, x8
   23880:	csel	x26, x8, x9, gt
   23884:	b	23408 <rpl_re_set_registers@@Base+0x2b8>
   23888:	sub	sp, sp, #0x90
   2388c:	stp	x29, x30, [sp, #64]
   23890:	stp	x24, x23, [sp, #96]
   23894:	stp	x22, x21, [sp, #112]
   23898:	stp	x20, x19, [sp, #128]
   2389c:	ldr	x8, [x0, #64]
   238a0:	ldr	x9, [x0, #88]
   238a4:	ldr	x23, [x0, #48]
   238a8:	mov	x19, x0
   238ac:	str	x25, [sp, #80]
   238b0:	cmp	x8, x9
   238b4:	csel	x22, x9, x8, gt
   238b8:	cmp	x22, x23
   238bc:	add	x29, sp, #0x40
   238c0:	b.le	23a6c <rpl_re_set_registers@@Base+0x91c>
   238c4:	add	x20, x19, #0x20
   238c8:	ldr	x8, [x19, #120]
   238cc:	ldr	x24, [x19, #32]
   238d0:	sub	x2, x22, x23
   238d4:	cbnz	x8, 239c4 <rpl_re_set_registers@@Base+0x874>
   238d8:	ldr	x8, [x19]
   238dc:	ldr	x9, [x19, #40]
   238e0:	add	x8, x8, x9
   238e4:	add	x1, x8, x23
   238e8:	add	x0, x29, #0x1c
   238ec:	mov	x3, x20
   238f0:	bl	a330 <rpl_mbrtowc@plt>
   238f4:	add	x8, x0, #0x1
   238f8:	cmp	x8, #0x2
   238fc:	b.cc	2391c <rpl_re_set_registers@@Base+0x7cc>  // b.lo, b.ul, b.last
   23900:	mov	x21, x0
   23904:	cmn	x0, #0x2
   23908:	b.ne	23944 <rpl_re_set_registers@@Base+0x7f4>  // b.any
   2390c:	ldr	x8, [x19, #64]
   23910:	ldr	x9, [x19, #88]
   23914:	cmp	x8, x9
   23918:	b.lt	23a68 <rpl_re_set_registers@@Base+0x918>  // b.tstop
   2391c:	ldr	x8, [x19, #40]
   23920:	ldr	x9, [x19]
   23924:	add	x8, x8, x23
   23928:	ldrb	w8, [x9, x8]
   2392c:	str	w8, [x29, #28]
   23930:	ldr	x9, [x19, #120]
   23934:	cbnz	x9, 23a5c <rpl_re_set_registers@@Base+0x90c>
   23938:	mov	w21, #0x1                   	// #1
   2393c:	str	x24, [x20]
   23940:	b	23948 <rpl_re_set_registers@@Base+0x7f8>
   23944:	ldr	w8, [x29, #28]
   23948:	ldr	x9, [x19, #16]
   2394c:	add	x25, x21, x23
   23950:	add	x24, x23, #0x1
   23954:	cmp	x24, x25
   23958:	str	w8, [x9, x23, lsl #2]
   2395c:	b.ge	239b4 <rpl_re_set_registers@@Base+0x864>  // b.tcont
   23960:	add	x8, x9, x23, lsl #2
   23964:	lsl	x9, x21, #2
   23968:	add	x0, x8, #0x4
   2396c:	sub	x2, x9, #0x4
   23970:	mov	w1, #0xff                  	// #255
   23974:	bl	a630 <memset@plt>
   23978:	sub	x8, x21, #0x1
   2397c:	cmp	x8, #0x2
   23980:	b.cc	239a0 <rpl_re_set_registers@@Base+0x850>  // b.lo, b.ul, b.last
   23984:	and	x9, x8, #0xfffffffffffffffe
   23988:	add	x24, x24, x9
   2398c:	mov	x10, x9
   23990:	subs	x10, x10, #0x2
   23994:	b.ne	23990 <rpl_re_set_registers@@Base+0x840>  // b.any
   23998:	cmp	x8, x9
   2399c:	b.eq	239b0 <rpl_re_set_registers@@Base+0x860>  // b.none
   239a0:	add	x8, x23, x21
   239a4:	sub	x8, x8, x24
   239a8:	subs	x8, x8, #0x1
   239ac:	b.ne	239a8 <rpl_re_set_registers@@Base+0x858>  // b.any
   239b0:	mov	x24, x25
   239b4:	cmp	x22, x24
   239b8:	mov	x23, x24
   239bc:	b.gt	238c8 <rpl_re_set_registers@@Base+0x778>
   239c0:	b	23a70 <rpl_re_set_registers@@Base+0x920>
   239c4:	ldr	w9, [x19, #144]
   239c8:	mov	x1, sp
   239cc:	cmp	w9, #0x1
   239d0:	b.lt	238e8 <rpl_re_set_registers@@Base+0x798>  // b.tstop
   239d4:	cmp	x2, #0x1
   239d8:	b.lt	238e8 <rpl_re_set_registers@@Base+0x798>  // b.tstop
   239dc:	ldr	x9, [x19, #40]
   239e0:	ldp	x10, x11, [x19]
   239e4:	mov	x1, sp
   239e8:	add	x9, x23, x9
   239ec:	ldrb	w9, [x10, x9]
   239f0:	ldrb	w8, [x8, x9]
   239f4:	strb	w8, [x11, x23]
   239f8:	strb	w8, [sp]
   239fc:	ldr	w8, [x19, #144]
   23a00:	cmp	w8, #0x2
   23a04:	b.lt	238e8 <rpl_re_set_registers@@Base+0x798>  // b.tstop
   23a08:	cmp	x2, #0x2
   23a0c:	b.lt	238e8 <rpl_re_set_registers@@Base+0x798>  // b.tstop
   23a10:	mov	w8, #0x1                   	// #1
   23a14:	ldr	x9, [x19, #40]
   23a18:	ldp	x10, x12, [x19]
   23a1c:	ldr	x11, [x19, #120]
   23a20:	mov	x1, sp
   23a24:	add	x9, x10, x9
   23a28:	add	x9, x9, x23
   23a2c:	ldrb	w9, [x9, x8]
   23a30:	add	x10, x12, x23
   23a34:	ldrb	w9, [x11, x9]
   23a38:	strb	w9, [x10, x8]
   23a3c:	strb	w9, [x1, x8]
   23a40:	ldr	w9, [x19, #144]
   23a44:	add	x8, x8, #0x1
   23a48:	cmp	w9, w8
   23a4c:	b.le	238e8 <rpl_re_set_registers@@Base+0x798>
   23a50:	cmp	x2, x8
   23a54:	b.gt	23a14 <rpl_re_set_registers@@Base+0x8c4>
   23a58:	b	238e8 <rpl_re_set_registers@@Base+0x798>
   23a5c:	ldrb	w8, [x9, w8, uxtw]
   23a60:	str	w8, [x29, #28]
   23a64:	b	23938 <rpl_re_set_registers@@Base+0x7e8>
   23a68:	str	x24, [x20]
   23a6c:	mov	x24, x23
   23a70:	stp	x24, x24, [x19, #48]
   23a74:	ldp	x20, x19, [sp, #128]
   23a78:	ldp	x22, x21, [sp, #112]
   23a7c:	ldp	x24, x23, [sp, #96]
   23a80:	ldr	x25, [sp, #80]
   23a84:	ldp	x29, x30, [sp, #64]
   23a88:	add	sp, sp, #0x90
   23a8c:	ret
   23a90:	sub	sp, sp, #0x80
   23a94:	stp	x29, x30, [sp, #32]
   23a98:	stp	x28, x27, [sp, #48]
   23a9c:	stp	x26, x25, [sp, #64]
   23aa0:	stp	x24, x23, [sp, #80]
   23aa4:	stp	x22, x21, [sp, #96]
   23aa8:	stp	x20, x19, [sp, #112]
   23aac:	ldr	x28, [x1]
   23ab0:	add	x29, sp, #0x20
   23ab4:	mov	x19, x5
   23ab8:	mov	x21, x4
   23abc:	ldr	x8, [x28, #168]
   23ac0:	mov	x23, x2
   23ac4:	mov	x25, x0
   23ac8:	stur	x3, [x29, #-8]
   23acc:	stp	x8, x1, [sp, #8]
   23ad0:	bl	2425c <rpl_re_set_registers@@Base+0x110c>
   23ad4:	mov	x20, x0
   23ad8:	cbnz	x0, 23ae4 <rpl_re_set_registers@@Base+0x994>
   23adc:	ldr	w8, [x19]
   23ae0:	cbnz	w8, 23cc0 <rpl_re_set_registers@@Base+0xb70>
   23ae4:	ldrb	w8, [x23, #8]
   23ae8:	cmp	w8, #0xa
   23aec:	b.ne	23c0c <rpl_re_set_registers@@Base+0xabc>  // b.any
   23af0:	str	x19, [sp]
   23af4:	ldur	x8, [x29, #-8]
   23af8:	ldr	x22, [sp]
   23afc:	mov	w19, #0xa                   	// #10
   23b00:	mov	x24, #0xffffffffffffffff    	// #-1
   23b04:	orr	x26, x8, #0x800000
   23b08:	b	23b1c <rpl_re_set_registers@@Base+0x9cc>
   23b0c:	ldrb	w8, [x23, #8]
   23b10:	mov	x20, x0
   23b14:	cmp	w8, #0xa
   23b18:	b.ne	23c10 <rpl_re_set_registers@@Base+0xac0>  // b.any
   23b1c:	mov	x0, x23
   23b20:	mov	x1, x25
   23b24:	mov	x2, x26
   23b28:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   23b2c:	ldr	x8, [x25, #72]
   23b30:	add	x8, x8, w0, sxtw
   23b34:	str	x8, [x25, #72]
   23b38:	ldrb	w8, [x23, #8]
   23b3c:	orr	w9, w8, #0x8
   23b40:	cmp	w9, #0xa
   23b44:	b.ne	23b94 <rpl_re_set_registers@@Base+0xa44>  // b.any
   23b48:	mov	x27, xzr
   23b4c:	ldr	w8, [x28, #128]
   23b50:	cmp	w8, #0xf
   23b54:	b.eq	23be8 <rpl_re_set_registers@@Base+0xa98>  // b.none
   23b58:	ldr	x0, [x28, #112]
   23b5c:	add	w9, w8, #0x1
   23b60:	sxtw	x8, w8
   23b64:	add	x0, x0, x8, lsl #6
   23b68:	str	w9, [x28, #128]
   23b6c:	str	xzr, [x0, #8]!
   23b70:	stp	x20, x27, [x0, #8]
   23b74:	str	w19, [x0, #48]
   23b78:	stp	xzr, xzr, [x0, #24]
   23b7c:	str	x24, [x0, #56]
   23b80:	cbz	x20, 23b88 <rpl_re_set_registers@@Base+0xa38>
   23b84:	str	x0, [x20]
   23b88:	cbz	x27, 23b0c <rpl_re_set_registers@@Base+0x9bc>
   23b8c:	str	x0, [x27]
   23b90:	b	23b0c <rpl_re_set_registers@@Base+0x9bc>
   23b94:	cbz	x21, 23ba0 <rpl_re_set_registers@@Base+0xa50>
   23b98:	cmp	w8, #0x9
   23b9c:	b.eq	23b48 <rpl_re_set_registers@@Base+0x9f8>  // b.none
   23ba0:	ldp	x8, x1, [sp, #8]
   23ba4:	ldur	x3, [x29, #-8]
   23ba8:	ldr	x19, [x28, #168]
   23bac:	mov	x0, x25
   23bb0:	mov	x2, x23
   23bb4:	mov	x4, x21
   23bb8:	mov	x5, x22
   23bbc:	str	x8, [x28, #168]
   23bc0:	bl	2425c <rpl_re_set_registers@@Base+0x110c>
   23bc4:	mov	x27, x0
   23bc8:	cbnz	x0, 23bd4 <rpl_re_set_registers@@Base+0xa84>
   23bcc:	ldr	w8, [x22]
   23bd0:	cbnz	w8, 23c30 <rpl_re_set_registers@@Base+0xae0>
   23bd4:	ldr	x8, [x28, #168]
   23bd8:	orr	x8, x8, x19
   23bdc:	mov	w19, #0xa                   	// #10
   23be0:	str	x8, [x28, #168]
   23be4:	b	23b4c <rpl_re_set_registers@@Base+0x9fc>
   23be8:	mov	w0, #0x3c8                 	// #968
   23bec:	bl	a540 <malloc@plt>
   23bf0:	cbz	x0, 23cc8 <rpl_re_set_registers@@Base+0xb78>
   23bf4:	ldr	x9, [x28, #112]
   23bf8:	mov	w8, wzr
   23bfc:	str	x9, [x0]
   23c00:	str	x0, [x28, #112]
   23c04:	str	wzr, [x28, #128]
   23c08:	b	23b5c <rpl_re_set_registers@@Base+0xa0c>
   23c0c:	mov	x0, x20
   23c10:	ldp	x20, x19, [sp, #112]
   23c14:	ldp	x22, x21, [sp, #96]
   23c18:	ldp	x24, x23, [sp, #80]
   23c1c:	ldp	x26, x25, [sp, #64]
   23c20:	ldp	x28, x27, [sp, #48]
   23c24:	ldp	x29, x30, [sp, #32]
   23c28:	add	sp, sp, #0x80
   23c2c:	ret
   23c30:	cbz	x20, 23cc0 <rpl_re_set_registers@@Base+0xb70>
   23c34:	mov	w21, #0xff                  	// #255
   23c38:	movk	w21, #0x4, lsl #16
   23c3c:	mov	x22, x20
   23c40:	ldr	x20, [x20, #8]
   23c44:	cbnz	x20, 23c3c <rpl_re_set_registers@@Base+0xaec>
   23c48:	ldr	x20, [x22, #16]
   23c4c:	cbnz	x20, 23c3c <rpl_re_set_registers@@Base+0xaec>
   23c50:	ldr	w8, [x22, #48]
   23c54:	and	w8, w8, w21
   23c58:	cmp	w8, #0x3
   23c5c:	b.eq	23c90 <rpl_re_set_registers@@Base+0xb40>  // b.none
   23c60:	cmp	w8, #0x6
   23c64:	b.ne	23c9c <rpl_re_set_registers@@Base+0xb4c>  // b.any
   23c68:	ldr	x19, [x22, #40]
   23c6c:	ldr	x0, [x19]
   23c70:	bl	a960 <free@plt>
   23c74:	ldr	x0, [x19, #8]
   23c78:	bl	a960 <free@plt>
   23c7c:	ldr	x0, [x19, #16]
   23c80:	bl	a960 <free@plt>
   23c84:	ldr	x0, [x19, #24]
   23c88:	bl	a960 <free@plt>
   23c8c:	b	23c94 <rpl_re_set_registers@@Base+0xb44>
   23c90:	ldr	x19, [x22, #40]
   23c94:	mov	x0, x19
   23c98:	bl	a960 <free@plt>
   23c9c:	ldr	x8, [x22]
   23ca0:	cbz	x8, 23cc0 <rpl_re_set_registers@@Base+0xb70>
   23ca4:	ldr	x20, [x8, #16]
   23ca8:	cmp	x20, x22
   23cac:	mov	x22, x8
   23cb0:	b.eq	23c50 <rpl_re_set_registers@@Base+0xb00>  // b.none
   23cb4:	mov	x22, x8
   23cb8:	cbz	x20, 23c50 <rpl_re_set_registers@@Base+0xb00>
   23cbc:	b	23c3c <rpl_re_set_registers@@Base+0xaec>
   23cc0:	mov	x0, xzr
   23cc4:	b	23c10 <rpl_re_set_registers@@Base+0xac0>
   23cc8:	ldr	x9, [sp]
   23ccc:	mov	w8, #0xc                   	// #12
   23cd0:	str	w8, [x9]
   23cd4:	b	23c10 <rpl_re_set_registers@@Base+0xac0>
   23cd8:	sub	sp, sp, #0x50
   23cdc:	stp	x29, x30, [sp, #16]
   23ce0:	stp	x24, x23, [sp, #32]
   23ce4:	stp	x22, x21, [sp, #48]
   23ce8:	stp	x20, x19, [sp, #64]
   23cec:	ldr	x9, [x1, #104]
   23cf0:	ldr	x8, [x1, #72]
   23cf4:	mov	x19, x0
   23cf8:	add	x29, sp, #0x10
   23cfc:	cmp	x9, x8
   23d00:	b.le	23de4 <rpl_re_set_registers@@Base+0xc94>
   23d04:	ldr	x9, [x1, #8]
   23d08:	mov	x23, x19
   23d0c:	mov	x20, x2
   23d10:	mov	x21, x1
   23d14:	ldrb	w24, [x9, x8]
   23d18:	strb	w24, [x23], #8
   23d1c:	ldr	w8, [x23]
   23d20:	and	w9, w8, #0xff9fffff
   23d24:	str	w9, [x23]
   23d28:	ldr	w11, [x1, #144]
   23d2c:	cmp	w11, #0x2
   23d30:	b.lt	23d54 <rpl_re_set_registers@@Base+0xc04>  // b.tstop
   23d34:	ldr	x9, [x21, #72]
   23d38:	ldr	x10, [x21, #48]
   23d3c:	cmp	x9, x10
   23d40:	b.eq	23d54 <rpl_re_set_registers@@Base+0xc04>  // b.none
   23d44:	ldr	x10, [x21, #16]
   23d48:	ldr	w9, [x10, x9, lsl #2]
   23d4c:	cmn	w9, #0x1
   23d50:	b.eq	23f24 <rpl_re_set_registers@@Base+0xdd4>  // b.none
   23d54:	mov	w9, #0xff00                	// #65280
   23d58:	cmp	w24, #0x5c
   23d5c:	movk	w9, #0xff9f, lsl #16
   23d60:	b.ne	23df4 <rpl_re_set_registers@@Base+0xca4>  // b.any
   23d64:	ldr	x12, [x21, #72]
   23d68:	ldr	x13, [x21, #88]
   23d6c:	add	x10, x12, #0x1
   23d70:	cmp	x10, x13
   23d74:	b.ge	23e44 <rpl_re_set_registers@@Base+0xcf4>  // b.tcont
   23d78:	ldrb	w13, [x21, #139]
   23d7c:	cbnz	w13, 241f8 <rpl_re_set_registers@@Base+0x10a8>
   23d80:	ldr	x11, [x21, #8]
   23d84:	ldrb	w22, [x11, x10]
   23d88:	and	w8, w8, w9
   23d8c:	orr	w24, w8, #0x1
   23d90:	strb	w22, [x19]
   23d94:	str	w24, [x19, #8]
   23d98:	ldr	w8, [x21, #144]
   23d9c:	cmp	w8, #0x2
   23da0:	b.lt	23eb4 <rpl_re_set_registers@@Base+0xd64>  // b.tstop
   23da4:	ldr	x8, [x21, #72]
   23da8:	ldr	x9, [x21, #16]
   23dac:	add	x8, x9, x8, lsl #2
   23db0:	ldr	w21, [x8, #4]
   23db4:	mov	w0, w21
   23db8:	bl	ac10 <iswalnum@plt>
   23dbc:	ldr	w9, [x23]
   23dc0:	cmp	w0, #0x0
   23dc4:	mov	w8, #0x5f                  	// #95
   23dc8:	mov	w10, #0x400000              	// #4194304
   23dcc:	ccmp	w21, w8, #0x4, eq  // eq = none
   23dd0:	csel	w8, w10, wzr, eq  // eq = none
   23dd4:	and	w9, w9, #0xffbfffff
   23dd8:	orr	w8, w8, w9
   23ddc:	and	x9, x22, #0xff
   23de0:	b	23edc <rpl_re_set_registers@@Base+0xd8c>
   23de4:	mov	w8, #0x2                   	// #2
   23de8:	mov	w0, wzr
   23dec:	strb	w8, [x19, #8]
   23df0:	b	24054 <rpl_re_set_registers@@Base+0xf04>
   23df4:	and	w8, w8, w9
   23df8:	orr	w22, w8, #0x1
   23dfc:	str	w22, [x23]
   23e00:	ldr	w8, [x21, #144]
   23e04:	cmp	w8, #0x2
   23e08:	b.lt	23e54 <rpl_re_set_registers@@Base+0xd04>  // b.tstop
   23e0c:	ldr	x8, [x21, #72]
   23e10:	ldr	x9, [x21, #16]
   23e14:	ldr	w22, [x9, x8, lsl #2]
   23e18:	mov	w0, w22
   23e1c:	bl	ac10 <iswalnum@plt>
   23e20:	ldr	w9, [x23]
   23e24:	cmp	w0, #0x0
   23e28:	mov	w8, #0x5f                  	// #95
   23e2c:	ccmp	w22, w8, #0x4, eq  // eq = none
   23e30:	mov	w8, #0x400000              	// #4194304
   23e34:	csel	w8, w8, wzr, eq  // eq = none
   23e38:	and	w9, w9, #0xffbfffff
   23e3c:	orr	w8, w8, w9
   23e40:	b	23e80 <rpl_re_set_registers@@Base+0xd30>
   23e44:	and	w8, w8, w9
   23e48:	mov	w9, #0x24                  	// #36
   23e4c:	orr	w8, w8, w9
   23e50:	b	2404c <rpl_re_set_registers@@Base+0xefc>
   23e54:	bl	a900 <__ctype_b_loc@plt>
   23e58:	ldr	x8, [x0]
   23e5c:	cmp	w24, #0x5f
   23e60:	cset	w9, eq  // eq = none
   23e64:	ldrh	w8, [x8, x24, lsl #1]
   23e68:	and	w8, w8, #0x8
   23e6c:	orr	w8, w9, w8, lsr #3
   23e70:	cmp	w8, #0x0
   23e74:	mov	w8, #0x400000              	// #4194304
   23e78:	csel	w8, w8, wzr, ne  // ne = any
   23e7c:	orr	w8, w8, w22
   23e80:	sub	w9, w24, #0xa
   23e84:	cmp	w9, #0x73
   23e88:	mov	w0, #0x1                   	// #1
   23e8c:	str	w8, [x23]
   23e90:	b.hi	24054 <rpl_re_set_registers@@Base+0xf04>  // b.pmore
   23e94:	adrp	x10, 31000 <vasnprintf@@Base+0x324c>
   23e98:	add	x10, x10, #0x368
   23e9c:	adr	x11, 23eac <rpl_re_set_registers@@Base+0xd5c>
   23ea0:	ldrb	w12, [x10, x9]
   23ea4:	add	x11, x11, x12, lsl #2
   23ea8:	br	x11
   23eac:	tbnz	w20, #11, 24044 <rpl_re_set_registers@@Base+0xef4>
   23eb0:	b	24050 <rpl_re_set_registers@@Base+0xf00>
   23eb4:	bl	a900 <__ctype_b_loc@plt>
   23eb8:	ldr	x8, [x0]
   23ebc:	and	x9, x22, #0xff
   23ec0:	and	w10, w22, #0xff
   23ec4:	cmp	w10, #0x5f
   23ec8:	ldrh	w8, [x8, x9, lsl #1]
   23ecc:	cset	w10, eq  // eq = none
   23ed0:	ubfx	w8, w8, #3, #1
   23ed4:	orr	w8, w8, w10
   23ed8:	orr	w8, w24, w8, lsl #22
   23edc:	and	w10, w22, #0xff
   23ee0:	sub	w10, w10, #0x27
   23ee4:	cmp	w10, #0x56
   23ee8:	mov	w0, #0x2                   	// #2
   23eec:	str	w8, [x23]
   23ef0:	b.hi	24054 <rpl_re_set_registers@@Base+0xf04>  // b.pmore
   23ef4:	adrp	x11, 31000 <vasnprintf@@Base+0x324c>
   23ef8:	add	x11, x11, #0x3dc
   23efc:	adr	x12, 23f0c <rpl_re_set_registers@@Base+0xdbc>
   23f00:	ldrb	w13, [x11, x10]
   23f04:	add	x12, x12, x13, lsl #2
   23f08:	br	x12
   23f0c:	tbnz	w20, #14, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   23f10:	and	w8, w8, #0xffffff00
   23f14:	sub	x9, x9, #0x31
   23f18:	orr	w8, w8, #0x4
   23f1c:	str	x9, [x19]
   23f20:	b	24174 <rpl_re_set_registers@@Base+0x1024>
   23f24:	mov	w9, #0xff00                	// #65280
   23f28:	movk	w9, #0xff9f, lsl #16
   23f2c:	mov	w10, #0x1                   	// #1
   23f30:	movk	w10, #0x20, lsl #16
   23f34:	and	w8, w8, w9
   23f38:	orr	w8, w8, w10
   23f3c:	b	2404c <rpl_re_set_registers@@Base+0xefc>
   23f40:	tbnz	w20, #3, 23f8c <rpl_re_set_registers@@Base+0xe3c>
   23f44:	ldr	x9, [x21, #72]
   23f48:	ldr	x10, [x21, #88]
   23f4c:	add	x9, x9, #0x1
   23f50:	cmp	x9, x10
   23f54:	b.eq	23f8c <rpl_re_set_registers@@Base+0xe3c>  // b.none
   23f58:	mov	x0, sp
   23f5c:	mov	x1, x21
   23f60:	mov	x2, x20
   23f64:	str	x9, [x21, #72]
   23f68:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   23f6c:	ldr	x8, [x21, #72]
   23f70:	sub	x8, x8, #0x1
   23f74:	str	x8, [x21, #72]
   23f78:	ldrb	w8, [sp, #8]
   23f7c:	sub	w8, w8, #0x9
   23f80:	cmp	w8, #0x1
   23f84:	b.hi	24050 <rpl_re_set_registers@@Base+0xf00>  // b.pmore
   23f88:	ldr	w8, [x23]
   23f8c:	and	w8, w8, #0xffffff00
   23f90:	mov	w9, #0x20                  	// #32
   23f94:	b	2400c <rpl_re_set_registers@@Base+0xebc>
   23f98:	tbz	w20, #13, 24050 <rpl_re_set_registers@@Base+0xf00>
   23f9c:	and	w8, w8, #0xffffff00
   23fa0:	orr	w8, w8, #0x8
   23fa4:	b	2404c <rpl_re_set_registers@@Base+0xefc>
   23fa8:	tbz	w20, #13, 24050 <rpl_re_set_registers@@Base+0xf00>
   23fac:	mov	w9, #0x9                   	// #9
   23fb0:	b	24048 <rpl_re_set_registers@@Base+0xef8>
   23fb4:	mov	w9, #0xb                   	// #11
   23fb8:	b	24048 <rpl_re_set_registers@@Base+0xef8>
   23fbc:	mov	w9, #0x402                 	// #1026
   23fc0:	tst	x20, x9
   23fc4:	b.ne	24050 <rpl_re_set_registers@@Base+0xf00>  // b.any
   23fc8:	mov	w9, #0x12                  	// #18
   23fcc:	b	24048 <rpl_re_set_registers@@Base+0xef8>
   23fd0:	mov	w9, #0x5                   	// #5
   23fd4:	b	24048 <rpl_re_set_registers@@Base+0xef8>
   23fd8:	mov	w9, #0x402                 	// #1026
   23fdc:	tst	x20, x9
   23fe0:	b.ne	24050 <rpl_re_set_registers@@Base+0xf00>  // b.any
   23fe4:	mov	w9, #0x13                  	// #19
   23fe8:	b	24048 <rpl_re_set_registers@@Base+0xef8>
   23fec:	mov	w9, #0x14                  	// #20
   23ff0:	b	24048 <rpl_re_set_registers@@Base+0xef8>
   23ff4:	mov	w9, #0x8                   	// #8
   23ff8:	movk	w9, #0x80, lsl #16
   23ffc:	tst	x20, x9
   24000:	b.eq	24088 <rpl_re_set_registers@@Base+0xf38>  // b.none
   24004:	and	w8, w8, #0xffffff00
   24008:	mov	w9, #0x10                  	// #16
   2400c:	orr	w8, w8, #0xc
   24010:	str	w9, [x19]
   24014:	str	w8, [x19, #8]
   24018:	b	24050 <rpl_re_set_registers@@Base+0xf00>
   2401c:	mvn	w9, w20
   24020:	mov	w10, #0x1200                	// #4608
   24024:	tst	x9, x10
   24028:	b.ne	24050 <rpl_re_set_registers@@Base+0xf00>  // b.any
   2402c:	mov	w9, #0x17                  	// #23
   24030:	b	24048 <rpl_re_set_registers@@Base+0xef8>
   24034:	mov	w9, #0x8400                	// #33792
   24038:	and	x9, x20, x9
   2403c:	cmp	x9, #0x8, lsl #12
   24040:	b.ne	24050 <rpl_re_set_registers@@Base+0xf00>  // b.any
   24044:	mov	w9, #0xa                   	// #10
   24048:	bfxil	w8, w9, #0, #8
   2404c:	str	w8, [x23]
   24050:	mov	w0, #0x1                   	// #1
   24054:	ldp	x20, x19, [sp, #64]
   24058:	ldp	x22, x21, [sp, #48]
   2405c:	ldp	x24, x23, [sp, #32]
   24060:	ldp	x29, x30, [sp, #16]
   24064:	add	sp, sp, #0x50
   24068:	ret
   2406c:	mvn	w9, w20
   24070:	mov	w10, #0x1200                	// #4608
   24074:	tst	x9, x10
   24078:	b.ne	24050 <rpl_re_set_registers@@Base+0xf00>  // b.any
   2407c:	and	w8, w8, #0xffffff00
   24080:	orr	w8, w8, #0x18
   24084:	b	2404c <rpl_re_set_registers@@Base+0xefc>
   24088:	ldr	x9, [x21, #72]
   2408c:	cbz	x9, 24004 <rpl_re_set_registers@@Base+0xeb4>
   24090:	tbz	w20, #11, 24050 <rpl_re_set_registers@@Base+0xf00>
   24094:	ldr	x10, [x21, #8]
   24098:	add	x9, x9, x10
   2409c:	ldurb	w9, [x9, #-1]
   240a0:	cmp	w9, #0xa
   240a4:	b.eq	24004 <rpl_re_set_registers@@Base+0xeb4>  // b.none
   240a8:	b	24050 <rpl_re_set_registers@@Base+0xf00>
   240ac:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   240b0:	and	w8, w8, #0xffffff00
   240b4:	mov	w9, #0x80                  	// #128
   240b8:	b	2416c <rpl_re_set_registers@@Base+0x101c>
   240bc:	tbnz	w20, #13, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   240c0:	and	w8, w8, #0xffffff00
   240c4:	orr	w8, w8, #0x8
   240c8:	b	241c8 <rpl_re_set_registers@@Base+0x1078>
   240cc:	tbnz	w20, #13, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   240d0:	mov	w9, #0x9                   	// #9
   240d4:	b	241c4 <rpl_re_set_registers@@Base+0x1074>
   240d8:	mov	w9, #0x402                 	// #1026
   240dc:	and	x9, x20, x9
   240e0:	cmp	x9, #0x2
   240e4:	b.ne	241f0 <rpl_re_set_registers@@Base+0x10a0>  // b.any
   240e8:	mov	w9, #0x12                  	// #18
   240ec:	b	241c4 <rpl_re_set_registers@@Base+0x1074>
   240f0:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   240f4:	and	w8, w8, #0xffffff00
   240f8:	mov	w9, #0x6                   	// #6
   240fc:	b	2416c <rpl_re_set_registers@@Base+0x101c>
   24100:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   24104:	and	w8, w8, #0xffffff00
   24108:	mov	w9, #0x9                   	// #9
   2410c:	b	2416c <rpl_re_set_registers@@Base+0x101c>
   24110:	mov	w9, #0x402                 	// #1026
   24114:	and	x9, x20, x9
   24118:	cmp	x9, #0x2
   2411c:	b.ne	241f0 <rpl_re_set_registers@@Base+0x10a0>  // b.any
   24120:	mov	w9, #0x13                  	// #19
   24124:	b	241c4 <rpl_re_set_registers@@Base+0x1074>
   24128:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   2412c:	and	w8, w8, #0xffffff00
   24130:	mov	w9, #0x200                 	// #512
   24134:	b	2416c <rpl_re_set_registers@@Base+0x101c>
   24138:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   2413c:	mov	w9, #0x23                  	// #35
   24140:	b	241c4 <rpl_re_set_registers@@Base+0x1074>
   24144:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   24148:	mov	w9, #0x21                  	// #33
   2414c:	b	241c4 <rpl_re_set_registers@@Base+0x1074>
   24150:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   24154:	and	w8, w8, #0xffffff00
   24158:	mov	w9, #0x40                  	// #64
   2415c:	b	2416c <rpl_re_set_registers@@Base+0x101c>
   24160:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   24164:	and	w8, w8, #0xffffff00
   24168:	mov	w9, #0x100                 	// #256
   2416c:	orr	w8, w8, #0xc
   24170:	str	w9, [x19]
   24174:	str	w8, [x19, #8]
   24178:	mov	w0, #0x2                   	// #2
   2417c:	b	24054 <rpl_re_set_registers@@Base+0xf04>
   24180:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   24184:	mov	w9, #0x22                  	// #34
   24188:	b	241c4 <rpl_re_set_registers@@Base+0x1074>
   2418c:	tbnz	w20, #19, 241f0 <rpl_re_set_registers@@Base+0x10a0>
   24190:	and	w8, w8, #0xffffff00
   24194:	orr	w8, w8, #0x20
   24198:	b	241c8 <rpl_re_set_registers@@Base+0x1078>
   2419c:	mov	w9, #0x1200                	// #4608
   241a0:	and	x9, x20, x9
   241a4:	cmp	x9, #0x200
   241a8:	b.ne	241f0 <rpl_re_set_registers@@Base+0x10a0>  // b.any
   241ac:	mov	w9, #0x17                  	// #23
   241b0:	b	241c4 <rpl_re_set_registers@@Base+0x1074>
   241b4:	mov	w9, #0x8400                	// #33792
   241b8:	tst	x20, x9
   241bc:	b.ne	241f0 <rpl_re_set_registers@@Base+0x10a0>  // b.any
   241c0:	mov	w9, #0xa                   	// #10
   241c4:	bfxil	w8, w9, #0, #8
   241c8:	str	w8, [x23]
   241cc:	mov	w0, #0x2                   	// #2
   241d0:	b	24054 <rpl_re_set_registers@@Base+0xf04>
   241d4:	mov	w9, #0x1200                	// #4608
   241d8:	and	x9, x20, x9
   241dc:	cmp	x9, #0x200
   241e0:	b.ne	241f0 <rpl_re_set_registers@@Base+0x10a0>  // b.any
   241e4:	and	w8, w8, #0xffffff00
   241e8:	orr	w8, w8, #0x18
   241ec:	b	241c8 <rpl_re_set_registers@@Base+0x1078>
   241f0:	mov	w0, #0x2                   	// #2
   241f4:	b	24054 <rpl_re_set_registers@@Base+0xf04>
   241f8:	cmp	w11, #0x2
   241fc:	b.lt	2422c <rpl_re_set_registers@@Base+0x10dc>  // b.tstop
   24200:	ldr	x11, [x21, #16]
   24204:	ldr	w13, [x11, x10, lsl #2]
   24208:	cmn	w13, #0x1
   2420c:	b.eq	23d80 <rpl_re_set_registers@@Base+0xc30>  // b.none
   24210:	ldr	x13, [x21, #48]
   24214:	add	x12, x12, #0x2
   24218:	cmp	x13, x12
   2421c:	b.eq	2422c <rpl_re_set_registers@@Base+0x10dc>  // b.none
   24220:	ldr	w11, [x11, x12, lsl #2]
   24224:	cmn	w11, #0x1
   24228:	b.eq	23d80 <rpl_re_set_registers@@Base+0xc30>  // b.none
   2422c:	ldrb	w11, [x21, #140]
   24230:	mov	x12, x10
   24234:	cbz	w11, 24240 <rpl_re_set_registers@@Base+0x10f0>
   24238:	ldr	x12, [x21, #24]
   2423c:	ldr	x12, [x12, x10, lsl #3]
   24240:	ldr	x13, [x21, #40]
   24244:	ldr	x14, [x21]
   24248:	add	x12, x13, x12
   2424c:	ldrsb	w22, [x14, x12]
   24250:	cbz	w11, 23d88 <rpl_re_set_registers@@Base+0xc38>
   24254:	tbnz	w22, #31, 23d80 <rpl_re_set_registers@@Base+0xc30>
   24258:	b	23d88 <rpl_re_set_registers@@Base+0xc38>
   2425c:	stp	x29, x30, [sp, #-96]!
   24260:	stp	x28, x27, [sp, #16]
   24264:	stp	x26, x25, [sp, #32]
   24268:	stp	x24, x23, [sp, #48]
   2426c:	stp	x22, x21, [sp, #64]
   24270:	stp	x20, x19, [sp, #80]
   24274:	ldr	x27, [x1]
   24278:	mov	x29, sp
   2427c:	mov	x19, x5
   24280:	mov	x21, x4
   24284:	mov	x22, x3
   24288:	mov	x23, x2
   2428c:	mov	x24, x1
   24290:	mov	x25, x0
   24294:	bl	24548 <rpl_re_set_registers@@Base+0x13f8>
   24298:	mov	x20, x0
   2429c:	cbnz	x0, 242a8 <rpl_re_set_registers@@Base+0x1158>
   242a0:	ldr	w8, [x19]
   242a4:	cbnz	w8, 24404 <rpl_re_set_registers@@Base+0x12b4>
   242a8:	mov	x28, #0xffffffffffffffff    	// #-1
   242ac:	b	242b8 <rpl_re_set_registers@@Base+0x1168>
   242b0:	cmp	x20, #0x0
   242b4:	csel	x20, x26, x20, eq  // eq = none
   242b8:	ldrb	w8, [x23, #8]
   242bc:	orr	w9, w8, #0x8
   242c0:	cmp	w9, #0xa
   242c4:	b.eq	24408 <rpl_re_set_registers@@Base+0x12b8>  // b.none
   242c8:	cbz	x21, 242d4 <rpl_re_set_registers@@Base+0x1184>
   242cc:	cmp	w8, #0x9
   242d0:	b.eq	24408 <rpl_re_set_registers@@Base+0x12b8>  // b.none
   242d4:	mov	x0, x25
   242d8:	mov	x1, x24
   242dc:	mov	x2, x23
   242e0:	mov	x3, x22
   242e4:	mov	x4, x21
   242e8:	mov	x5, x19
   242ec:	bl	24548 <rpl_re_set_registers@@Base+0x13f8>
   242f0:	mov	x26, x0
   242f4:	cbnz	x0, 24300 <rpl_re_set_registers@@Base+0x11b0>
   242f8:	ldr	w8, [x19]
   242fc:	cbnz	w8, 24374 <rpl_re_set_registers@@Base+0x1224>
   24300:	cbz	x20, 242b0 <rpl_re_set_registers@@Base+0x1160>
   24304:	cbz	x26, 242b0 <rpl_re_set_registers@@Base+0x1160>
   24308:	ldr	w8, [x27, #128]
   2430c:	cmp	w8, #0xf
   24310:	b.eq	24350 <rpl_re_set_registers@@Base+0x1200>  // b.none
   24314:	ldr	x0, [x27, #112]
   24318:	add	w9, w8, #0x1
   2431c:	sxtw	x8, w8
   24320:	add	x8, x0, x8, lsl #6
   24324:	str	w9, [x27, #128]
   24328:	str	xzr, [x8, #8]!
   2432c:	mov	w9, #0x10                  	// #16
   24330:	stp	x20, x26, [x8, #8]
   24334:	str	w9, [x8, #48]
   24338:	stp	xzr, xzr, [x8, #24]
   2433c:	str	x28, [x8, #56]
   24340:	str	x8, [x20]
   24344:	str	x8, [x26]
   24348:	mov	x20, x8
   2434c:	b	242b8 <rpl_re_set_registers@@Base+0x1168>
   24350:	mov	w0, #0x3c8                 	// #968
   24354:	bl	a540 <malloc@plt>
   24358:	cbz	x0, 24428 <rpl_re_set_registers@@Base+0x12d8>
   2435c:	ldr	x9, [x27, #112]
   24360:	mov	w8, wzr
   24364:	str	x9, [x0]
   24368:	str	x0, [x27, #112]
   2436c:	str	wzr, [x27, #128]
   24370:	b	24318 <rpl_re_set_registers@@Base+0x11c8>
   24374:	cbz	x20, 24408 <rpl_re_set_registers@@Base+0x12b8>
   24378:	mov	w21, #0xff                  	// #255
   2437c:	movk	w21, #0x4, lsl #16
   24380:	mov	x22, x20
   24384:	ldr	x20, [x20, #8]
   24388:	cbnz	x20, 24380 <rpl_re_set_registers@@Base+0x1230>
   2438c:	ldr	x20, [x22, #16]
   24390:	cbnz	x20, 24380 <rpl_re_set_registers@@Base+0x1230>
   24394:	ldr	w8, [x22, #48]
   24398:	and	w8, w8, w21
   2439c:	cmp	w8, #0x3
   243a0:	b.eq	243d4 <rpl_re_set_registers@@Base+0x1284>  // b.none
   243a4:	cmp	w8, #0x6
   243a8:	b.ne	243e0 <rpl_re_set_registers@@Base+0x1290>  // b.any
   243ac:	ldr	x19, [x22, #40]
   243b0:	ldr	x0, [x19]
   243b4:	bl	a960 <free@plt>
   243b8:	ldr	x0, [x19, #8]
   243bc:	bl	a960 <free@plt>
   243c0:	ldr	x0, [x19, #16]
   243c4:	bl	a960 <free@plt>
   243c8:	ldr	x0, [x19, #24]
   243cc:	bl	a960 <free@plt>
   243d0:	b	243d8 <rpl_re_set_registers@@Base+0x1288>
   243d4:	ldr	x19, [x22, #40]
   243d8:	mov	x0, x19
   243dc:	bl	a960 <free@plt>
   243e0:	ldr	x8, [x22]
   243e4:	cbz	x8, 24404 <rpl_re_set_registers@@Base+0x12b4>
   243e8:	ldr	x20, [x8, #16]
   243ec:	cmp	x20, x22
   243f0:	mov	x22, x8
   243f4:	b.eq	24394 <rpl_re_set_registers@@Base+0x1244>  // b.none
   243f8:	mov	x22, x8
   243fc:	cbz	x20, 24394 <rpl_re_set_registers@@Base+0x1244>
   24400:	b	24380 <rpl_re_set_registers@@Base+0x1230>
   24404:	mov	x20, xzr
   24408:	mov	x0, x20
   2440c:	ldp	x20, x19, [sp, #80]
   24410:	ldp	x22, x21, [sp, #64]
   24414:	ldp	x24, x23, [sp, #48]
   24418:	ldp	x26, x25, [sp, #32]
   2441c:	ldp	x28, x27, [sp, #16]
   24420:	ldp	x29, x30, [sp], #96
   24424:	ret
   24428:	mov	w22, #0xff                  	// #255
   2442c:	movk	w22, #0x4, lsl #16
   24430:	mov	x23, x26
   24434:	ldr	x26, [x26, #8]
   24438:	cbnz	x26, 24430 <rpl_re_set_registers@@Base+0x12e0>
   2443c:	ldr	x26, [x23, #16]
   24440:	cbnz	x26, 24430 <rpl_re_set_registers@@Base+0x12e0>
   24444:	ldr	w8, [x23, #48]
   24448:	and	w8, w8, w22
   2444c:	cmp	w8, #0x3
   24450:	b.eq	24484 <rpl_re_set_registers@@Base+0x1334>  // b.none
   24454:	cmp	w8, #0x6
   24458:	b.ne	24490 <rpl_re_set_registers@@Base+0x1340>  // b.any
   2445c:	ldr	x21, [x23, #40]
   24460:	ldr	x0, [x21]
   24464:	bl	a960 <free@plt>
   24468:	ldr	x0, [x21, #8]
   2446c:	bl	a960 <free@plt>
   24470:	ldr	x0, [x21, #16]
   24474:	bl	a960 <free@plt>
   24478:	ldr	x0, [x21, #24]
   2447c:	bl	a960 <free@plt>
   24480:	b	24488 <rpl_re_set_registers@@Base+0x1338>
   24484:	ldr	x21, [x23, #40]
   24488:	mov	x0, x21
   2448c:	bl	a960 <free@plt>
   24490:	ldr	x8, [x23]
   24494:	cbz	x8, 244b4 <rpl_re_set_registers@@Base+0x1364>
   24498:	ldr	x26, [x8, #16]
   2449c:	cmp	x26, x23
   244a0:	mov	x23, x8
   244a4:	b.eq	24444 <rpl_re_set_registers@@Base+0x12f4>  // b.none
   244a8:	mov	x23, x8
   244ac:	cbz	x26, 24444 <rpl_re_set_registers@@Base+0x12f4>
   244b0:	b	24430 <rpl_re_set_registers@@Base+0x12e0>
   244b4:	mov	x21, x20
   244b8:	ldr	x20, [x20, #8]
   244bc:	cbnz	x20, 244b4 <rpl_re_set_registers@@Base+0x1364>
   244c0:	ldr	x20, [x21, #16]
   244c4:	cbnz	x20, 244b4 <rpl_re_set_registers@@Base+0x1364>
   244c8:	ldr	w8, [x21, #48]
   244cc:	and	w8, w8, w22
   244d0:	cmp	w8, #0x3
   244d4:	b.eq	24508 <rpl_re_set_registers@@Base+0x13b8>  // b.none
   244d8:	cmp	w8, #0x6
   244dc:	b.ne	24514 <rpl_re_set_registers@@Base+0x13c4>  // b.any
   244e0:	ldr	x20, [x21, #40]
   244e4:	ldr	x0, [x20]
   244e8:	bl	a960 <free@plt>
   244ec:	ldr	x0, [x20, #8]
   244f0:	bl	a960 <free@plt>
   244f4:	ldr	x0, [x20, #16]
   244f8:	bl	a960 <free@plt>
   244fc:	ldr	x0, [x20, #24]
   24500:	bl	a960 <free@plt>
   24504:	b	2450c <rpl_re_set_registers@@Base+0x13bc>
   24508:	ldr	x20, [x21, #40]
   2450c:	mov	x0, x20
   24510:	bl	a960 <free@plt>
   24514:	ldr	x8, [x21]
   24518:	cbz	x8, 24538 <rpl_re_set_registers@@Base+0x13e8>
   2451c:	ldr	x20, [x8, #16]
   24520:	cmp	x20, x21
   24524:	mov	x21, x8
   24528:	b.eq	244c8 <rpl_re_set_registers@@Base+0x1378>  // b.none
   2452c:	mov	x21, x8
   24530:	cbz	x20, 244c8 <rpl_re_set_registers@@Base+0x1378>
   24534:	b	244b4 <rpl_re_set_registers@@Base+0x1364>
   24538:	mov	x20, xzr
   2453c:	mov	w8, #0xc                   	// #12
   24540:	str	w8, [x19]
   24544:	b	24408 <rpl_re_set_registers@@Base+0x12b8>
   24548:	sub	sp, sp, #0x120
   2454c:	stp	x29, x30, [sp, #192]
   24550:	stp	x28, x27, [sp, #208]
   24554:	stp	x26, x25, [sp, #224]
   24558:	stp	x24, x23, [sp, #240]
   2455c:	stp	x22, x21, [sp, #256]
   24560:	stp	x20, x19, [sp, #272]
   24564:	ldr	w8, [x2, #8]
   24568:	add	x29, sp, #0xc0
   2456c:	str	xzr, [sp, #48]
   24570:	and	w9, w8, #0xff
   24574:	sub	w9, w9, #0x1
   24578:	cmp	w9, #0x23
   2457c:	b.hi	26418 <rpl_re_set_registers@@Base+0x32c8>  // b.pmore
   24580:	stp	x0, x3, [sp, #32]
   24584:	ldr	x23, [x1]
   24588:	adrp	x10, 31000 <vasnprintf@@Base+0x324c>
   2458c:	add	x10, x10, #0x434
   24590:	adr	x11, 245b4 <rpl_re_set_registers@@Base+0x1464>
   24594:	ldrh	w12, [x10, x9, lsl #1]
   24598:	add	x11, x11, x12, lsl #2
   2459c:	mov	x28, x5
   245a0:	mov	x25, x4
   245a4:	mov	x14, x2
   245a8:	mov	x26, x1
   245ac:	str	x2, [sp, #56]
   245b0:	br	x11
   245b4:	ldr	x9, [sp, #40]
   245b8:	tbnz	w9, #5, 246b8 <rpl_re_set_registers@@Base+0x1568>
   245bc:	tbnz	w9, #4, 24b3c <rpl_re_set_registers@@Base+0x19ec>
   245c0:	ldr	x9, [sp, #40]
   245c4:	tbnz	w9, #17, 24654 <rpl_re_set_registers@@Base+0x1504>
   245c8:	and	w9, w8, #0xff
   245cc:	cmp	w9, #0x9
   245d0:	b.ne	24654 <rpl_re_set_registers@@Base+0x1504>  // b.any
   245d4:	mov	w8, #0x10                  	// #16
   245d8:	b	26410 <rpl_re_set_registers@@Base+0x32c0>
   245dc:	ldr	x9, [sp, #32]
   245e0:	and	w8, w8, #0xff
   245e4:	cmp	w8, #0x23
   245e8:	adrp	x2, 31000 <vasnprintf@@Base+0x324c>
   245ec:	ldr	x1, [x9, #120]
   245f0:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   245f4:	cset	w4, eq  // eq = none
   245f8:	add	x2, x2, #0x6e6
   245fc:	add	x3, x3, #0x9c
   24600:	b	24628 <rpl_re_set_registers@@Base+0x14d8>
   24604:	ldr	x9, [sp, #32]
   24608:	and	w8, w8, #0xff
   2460c:	cmp	w8, #0x21
   24610:	adrp	x2, 31000 <vasnprintf@@Base+0x324c>
   24614:	ldr	x1, [x9, #120]
   24618:	adrp	x3, 2f000 <vasnprintf@@Base+0x124c>
   2461c:	cset	w4, eq  // eq = none
   24620:	add	x2, x2, #0x6e0
   24624:	add	x3, x3, #0x2cf
   24628:	mov	x0, x23
   2462c:	mov	x5, x28
   24630:	bl	265f8 <rpl_re_set_registers@@Base+0x34a8>
   24634:	str	x0, [sp, #48]
   24638:	cbnz	x0, 2464c <rpl_re_set_registers@@Base+0x14fc>
   2463c:	ldr	w8, [x28]
   24640:	ldr	x14, [sp, #56]
   24644:	cbz	w8, 25214 <rpl_re_set_registers@@Base+0x20c4>
   24648:	b	24bc0 <rpl_re_set_registers@@Base+0x1a70>
   2464c:	ldr	x14, [sp, #56]
   24650:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   24654:	and	w8, w8, #0xffffff00
   24658:	orr	w8, w8, #0x1
   2465c:	str	w8, [x14, #8]
   24660:	ldr	w8, [x23, #128]
   24664:	cmp	w8, #0xf
   24668:	b.eq	26178 <rpl_re_set_registers@@Base+0x3028>  // b.none
   2466c:	ldr	x0, [x23, #112]
   24670:	add	w9, w8, #0x1
   24674:	sxtw	x8, w8
   24678:	add	x10, x0, x8, lsl #6
   2467c:	str	w9, [x23, #128]
   24680:	str	xzr, [x10, #8]!
   24684:	stp	xzr, xzr, [x10, #8]
   24688:	ldr	q0, [x14]
   2468c:	mov	x9, #0xffffffffffffffff    	// #-1
   24690:	stp	xzr, xzr, [x10, #24]
   24694:	str	x10, [sp, #48]
   24698:	stur	q0, [x10, #40]
   2469c:	ldr	w8, [x10, #48]
   246a0:	str	x9, [x10, #56]
   246a4:	and	w8, w8, #0xfff3ffff
   246a8:	str	w8, [x10, #48]
   246ac:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   246b0:	ldr	x9, [sp, #40]
   246b4:	tbz	w9, #24, 245b4 <rpl_re_set_registers@@Base+0x1464>
   246b8:	mov	w8, #0xd                   	// #13
   246bc:	b	26410 <rpl_re_set_registers@@Base+0x32c0>
   246c0:	ldr	w8, [x14]
   246c4:	ldr	x10, [x23, #168]
   246c8:	mov	w9, #0x1                   	// #1
   246cc:	lsl	w8, w9, w8
   246d0:	sxtw	x9, w8
   246d4:	tst	x10, x9
   246d8:	b.eq	261a8 <rpl_re_set_registers@@Base+0x3058>  // b.none
   246dc:	ldr	x10, [x23, #160]
   246e0:	ldr	w8, [x23, #128]
   246e4:	orr	x9, x10, x9
   246e8:	cmp	w8, #0xf
   246ec:	str	x9, [x23, #160]
   246f0:	b.eq	26218 <rpl_re_set_registers@@Base+0x30c8>  // b.none
   246f4:	ldr	x0, [x23, #112]
   246f8:	add	w9, w8, #0x1
   246fc:	sxtw	x8, w8
   24700:	add	x10, x0, x8, lsl #6
   24704:	str	w9, [x23, #128]
   24708:	str	xzr, [x10, #8]!
   2470c:	stp	xzr, xzr, [x10, #8]
   24710:	ldr	q0, [x14]
   24714:	mov	x8, #0xffffffffffffffff    	// #-1
   24718:	str	x8, [x10, #56]
   2471c:	stp	xzr, xzr, [x10, #24]
   24720:	stur	q0, [x10, #40]
   24724:	ldr	w9, [x10, #48]
   24728:	str	x10, [sp, #48]
   2472c:	and	w8, w9, #0xfff3ffff
   24730:	str	w8, [x10, #48]
   24734:	ldr	x8, [x23, #152]
   24738:	ldrb	w9, [x23, #176]
   2473c:	add	x8, x8, #0x1
   24740:	orr	w9, w9, #0x2
   24744:	str	x8, [x23, #152]
   24748:	strb	w9, [x23, #176]
   2474c:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   24750:	ldr	x19, [x26, #48]
   24754:	mov	x0, x14
   24758:	add	x8, x19, #0x1
   2475c:	str	x8, [x26, #48]
   24760:	ldp	x20, x21, [sp, #32]
   24764:	orr	x2, x21, #0x800000
   24768:	mov	x1, x20
   2476c:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   24770:	ldr	x8, [x20, #72]
   24774:	ldr	x14, [sp, #56]
   24778:	add	x8, x8, w0, sxtw
   2477c:	str	x8, [x20, #72]
   24780:	ldrb	w8, [x14, #8]
   24784:	cmp	w8, #0x9
   24788:	b.ne	24b98 <rpl_re_set_registers@@Base+0x1a48>  // b.any
   2478c:	mov	x25, xzr
   24790:	cmp	x19, #0x8
   24794:	b.hi	247b0 <rpl_re_set_registers@@Base+0x1660>  // b.pmore
   24798:	ldr	x8, [x23, #168]
   2479c:	mov	w9, #0x1                   	// #1
   247a0:	lsl	w9, w9, w19
   247a4:	sxtw	x9, w9
   247a8:	orr	x8, x8, x9
   247ac:	str	x8, [x23, #168]
   247b0:	ldr	w8, [x23, #128]
   247b4:	cmp	w8, #0xf
   247b8:	b.eq	2630c <rpl_re_set_registers@@Base+0x31bc>  // b.none
   247bc:	ldr	x0, [x23, #112]
   247c0:	add	w9, w8, #0x1
   247c4:	sxtw	x8, w8
   247c8:	add	x8, x0, x8, lsl #6
   247cc:	str	w9, [x23, #128]
   247d0:	mov	x9, x8
   247d4:	mov	w10, #0x11                  	// #17
   247d8:	mov	x11, #0xffffffffffffffff    	// #-1
   247dc:	str	xzr, [x9, #8]!
   247e0:	stp	x25, xzr, [x9, #8]
   247e4:	str	w10, [x9, #48]
   247e8:	stp	xzr, xzr, [x9, #24]
   247ec:	str	x11, [x9, #56]
   247f0:	cbz	x25, 247f8 <rpl_re_set_registers@@Base+0x16a8>
   247f4:	str	x9, [x25]
   247f8:	str	x9, [sp, #48]
   247fc:	str	x19, [x8, #48]
   24800:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   24804:	ldr	w8, [x23, #128]
   24808:	cmp	w8, #0xf
   2480c:	b.eq	261b0 <rpl_re_set_registers@@Base+0x3060>  // b.none
   24810:	ldr	x0, [x23, #112]
   24814:	ldr	x10, [sp, #32]
   24818:	add	w9, w8, #0x1
   2481c:	sxtw	x8, w8
   24820:	add	x19, x0, x8, lsl #6
   24824:	str	w9, [x23, #128]
   24828:	str	xzr, [x19, #8]!
   2482c:	stp	xzr, xzr, [x19, #8]
   24830:	ldr	q0, [x14]
   24834:	mov	x9, #0xffffffffffffffff    	// #-1
   24838:	stp	xzr, xzr, [x19, #24]
   2483c:	str	x9, [x19, #56]
   24840:	stur	q0, [x19, #40]
   24844:	ldr	w8, [x19, #48]
   24848:	and	w8, w8, #0xfff3ffff
   2484c:	str	w8, [x19, #48]
   24850:	ldr	w8, [x23, #180]
   24854:	cmp	w8, #0x2
   24858:	b.lt	24b34 <rpl_re_set_registers@@Base+0x19e4>  // b.tstop
   2485c:	ldr	x9, [x10, #104]
   24860:	ldr	x8, [x10, #72]
   24864:	cmp	x9, x8
   24868:	b.le	24b34 <rpl_re_set_registers@@Base+0x19e4>
   2486c:	mov	w20, #0x10                  	// #16
   24870:	mov	x21, #0xffffffffffffffff    	// #-1
   24874:	ldr	x22, [sp, #32]
   24878:	ldr	x9, [x22, #48]
   2487c:	cmp	x8, x9
   24880:	b.eq	24b34 <rpl_re_set_registers@@Base+0x19e4>  // b.none
   24884:	ldr	x9, [x22, #16]
   24888:	ldr	w8, [x9, x8, lsl #2]
   2488c:	cmn	w8, #0x1
   24890:	b.ne	24b34 <rpl_re_set_registers@@Base+0x19e4>  // b.any
   24894:	ldr	x2, [sp, #40]
   24898:	mov	x0, x14
   2489c:	mov	x1, x22
   248a0:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   248a4:	ldr	x8, [x22, #72]
   248a8:	add	x8, x8, w0, sxtw
   248ac:	str	x8, [x22, #72]
   248b0:	ldr	w8, [x23, #128]
   248b4:	cmp	w8, #0xf
   248b8:	b.eq	24958 <rpl_re_set_registers@@Base+0x1808>  // b.none
   248bc:	ldr	x0, [x23, #112]
   248c0:	add	w9, w8, #0x1
   248c4:	sxtw	x8, w8
   248c8:	add	x22, x0, x8, lsl #6
   248cc:	str	w9, [x23, #128]
   248d0:	str	xzr, [x22, #8]!
   248d4:	stp	xzr, xzr, [x22, #8]
   248d8:	ldr	x14, [sp, #56]
   248dc:	ldr	q0, [x14]
   248e0:	stp	xzr, xzr, [x22, #24]
   248e4:	str	x21, [x22, #56]
   248e8:	stur	q0, [x22, #40]
   248ec:	ldr	w8, [x22, #48]
   248f0:	and	w8, w8, #0xfff3ffff
   248f4:	str	w8, [x22, #48]
   248f8:	ldr	w8, [x23, #128]
   248fc:	cmp	w8, #0xf
   24900:	b.eq	2497c <rpl_re_set_registers@@Base+0x182c>  // b.none
   24904:	ldr	x0, [x23, #112]
   24908:	add	w9, w8, #0x1
   2490c:	sxtw	x8, w8
   24910:	str	w9, [x23, #128]
   24914:	add	x9, x0, x8, lsl #6
   24918:	str	xzr, [x9, #8]!
   2491c:	stp	x19, x22, [x9, #8]
   24920:	str	w20, [x9, #48]
   24924:	stp	xzr, xzr, [x9, #24]
   24928:	str	x21, [x9, #56]
   2492c:	str	x9, [x19]
   24930:	cbz	x22, 2640c <rpl_re_set_registers@@Base+0x32bc>
   24934:	ldr	x8, [sp, #32]
   24938:	str	x9, [x22]
   2493c:	mov	x19, x9
   24940:	str	x19, [sp, #48]
   24944:	ldr	x9, [x8, #104]
   24948:	ldr	x8, [x8, #72]
   2494c:	cmp	x9, x8
   24950:	b.gt	24874 <rpl_re_set_registers@@Base+0x1724>
   24954:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   24958:	mov	w0, #0x3c8                 	// #968
   2495c:	bl	a540 <malloc@plt>
   24960:	cbz	x0, 249a4 <rpl_re_set_registers@@Base+0x1854>
   24964:	ldr	x9, [x23, #112]
   24968:	mov	w8, wzr
   2496c:	str	x9, [x0]
   24970:	str	x0, [x23, #112]
   24974:	str	wzr, [x23, #128]
   24978:	b	248c0 <rpl_re_set_registers@@Base+0x1770>
   2497c:	mov	w0, #0x3c8                 	// #968
   24980:	bl	a540 <malloc@plt>
   24984:	ldr	x14, [sp, #56]
   24988:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   2498c:	ldr	x9, [x23, #112]
   24990:	mov	w8, wzr
   24994:	str	x9, [x0]
   24998:	str	x0, [x23, #112]
   2499c:	str	wzr, [x23, #128]
   249a0:	b	24908 <rpl_re_set_registers@@Base+0x17b8>
   249a4:	ldr	x14, [sp, #56]
   249a8:	mov	x22, xzr
   249ac:	b	248f8 <rpl_re_set_registers@@Base+0x17a8>
   249b0:	ldr	w8, [x23, #128]
   249b4:	cmp	w8, #0xf
   249b8:	b.eq	261dc <rpl_re_set_registers@@Base+0x308c>  // b.none
   249bc:	ldr	x0, [x23, #112]
   249c0:	add	w9, w8, #0x1
   249c4:	sxtw	x8, w8
   249c8:	add	x10, x0, x8, lsl #6
   249cc:	str	w9, [x23, #128]
   249d0:	str	xzr, [x10, #8]!
   249d4:	stp	xzr, xzr, [x10, #8]
   249d8:	ldr	q0, [x14]
   249dc:	mov	x9, #0xffffffffffffffff    	// #-1
   249e0:	stp	xzr, xzr, [x10, #24]
   249e4:	str	x9, [x10, #56]
   249e8:	stur	q0, [x10, #40]
   249ec:	ldr	w8, [x10, #48]
   249f0:	str	x10, [sp, #48]
   249f4:	and	w8, w8, #0xfff3ffff
   249f8:	str	w8, [x10, #48]
   249fc:	ldr	w8, [x23, #180]
   24a00:	cmp	w8, #0x2
   24a04:	b.lt	25214 <rpl_re_set_registers@@Base+0x20c4>  // b.tstop
   24a08:	ldrb	w8, [x23, #176]
   24a0c:	orr	w8, w8, #0x2
   24a10:	strb	w8, [x23, #176]
   24a14:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   24a18:	ldr	w8, [x14]
   24a1c:	mov	w9, #0x30f                 	// #783
   24a20:	tst	w8, w9
   24a24:	b.eq	24a54 <rpl_re_set_registers@@Base+0x1904>  // b.none
   24a28:	ldrb	w8, [x23, #176]
   24a2c:	tbnz	w8, #4, 24a50 <rpl_re_set_registers@@Base+0x1900>
   24a30:	orr	w9, w8, #0x10
   24a34:	strb	w9, [x23, #176]
   24a38:	tbnz	w8, #3, 2643c <rpl_re_set_registers@@Base+0x32ec>
   24a3c:	adrp	x9, 31000 <vasnprintf@@Base+0x324c>
   24a40:	ldr	q0, [x9, #832]
   24a44:	stur	q0, [x23, #184]
   24a48:	tbz	w8, #2, 26448 <rpl_re_set_registers@@Base+0x32f8>
   24a4c:	stp	xzr, xzr, [x23, #200]
   24a50:	ldr	w8, [x14]
   24a54:	cmp	w8, #0x200
   24a58:	b.eq	25ea4 <rpl_re_set_registers@@Base+0x2d54>  // b.none
   24a5c:	ldr	x21, [sp, #40]
   24a60:	cmp	w8, #0x100
   24a64:	b.ne	25f9c <rpl_re_set_registers@@Base+0x2e4c>  // b.any
   24a68:	mov	w8, #0x6                   	// #6
   24a6c:	str	w8, [x14]
   24a70:	ldr	w8, [x23, #128]
   24a74:	cmp	w8, #0xf
   24a78:	b.eq	26388 <rpl_re_set_registers@@Base+0x3238>  // b.none
   24a7c:	ldr	x0, [x23, #112]
   24a80:	add	w9, w8, #0x1
   24a84:	sxtw	x8, w8
   24a88:	add	x19, x0, x8, lsl #6
   24a8c:	str	w9, [x23, #128]
   24a90:	str	xzr, [x19, #8]!
   24a94:	stp	xzr, xzr, [x19, #8]
   24a98:	ldr	q0, [x14]
   24a9c:	mov	x8, #0xffffffffffffffff    	// #-1
   24aa0:	str	x8, [x19, #56]
   24aa4:	stp	xzr, xzr, [x19, #24]
   24aa8:	stur	q0, [x19, #40]
   24aac:	ldr	w9, [x19, #48]
   24ab0:	and	w8, w9, #0xfff3ffff
   24ab4:	str	w8, [x19, #48]
   24ab8:	mov	w8, #0x9                   	// #9
   24abc:	b	25efc <rpl_re_set_registers@@Base+0x2dac>
   24ac0:	mov	w8, #0x5                   	// #5
   24ac4:	b	26410 <rpl_re_set_registers@@Base+0x32c0>
   24ac8:	mov	w0, #0x20                  	// #32
   24acc:	mov	w1, #0x1                   	// #1
   24ad0:	stur	xzr, [x29, #-16]
   24ad4:	bl	a6b0 <calloc@plt>
   24ad8:	mov	x25, x0
   24adc:	mov	w0, #0x50                  	// #80
   24ae0:	mov	w1, #0x1                   	// #1
   24ae4:	bl	a6b0 <calloc@plt>
   24ae8:	mov	x24, x0
   24aec:	cbz	x25, 26204 <rpl_re_set_registers@@Base+0x30b4>
   24af0:	cbz	x24, 26204 <rpl_re_set_registers@@Base+0x30b4>
   24af4:	ldr	x21, [sp, #56]
   24af8:	ldp	x19, x20, [sp, #32]
   24afc:	mov	x0, x21
   24b00:	mov	x1, x19
   24b04:	mov	x2, x20
   24b08:	bl	26934 <rpl_re_set_registers@@Base+0x37e4>
   24b0c:	ldr	w8, [x21, #8]
   24b10:	mov	x2, x21
   24b14:	mov	w3, w0
   24b18:	and	w9, w8, #0xff
   24b1c:	cmp	w9, #0x19
   24b20:	b.eq	24bc8 <rpl_re_set_registers@@Base+0x1a78>  // b.none
   24b24:	cmp	w9, #0x2
   24b28:	b.eq	261a0 <rpl_re_set_registers@@Base+0x3050>  // b.none
   24b2c:	str	wzr, [sp, #48]
   24b30:	b	24c20 <rpl_re_set_registers@@Base+0x1ad0>
   24b34:	str	x19, [sp, #48]
   24b38:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   24b3c:	ldp	x19, x20, [sp, #32]
   24b40:	mov	x0, x14
   24b44:	mov	x21, x14
   24b48:	mov	x1, x19
   24b4c:	mov	x2, x20
   24b50:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   24b54:	ldr	x8, [x19, #72]
   24b58:	mov	x1, x26
   24b5c:	mov	x2, x21
   24b60:	mov	x3, x20
   24b64:	add	x8, x8, w0, sxtw
   24b68:	str	x8, [x19, #72]
   24b6c:	mov	x0, x19
   24b70:	mov	x4, x25
   24b74:	mov	x5, x28
   24b78:	ldp	x20, x19, [sp, #272]
   24b7c:	ldp	x22, x21, [sp, #256]
   24b80:	ldp	x24, x23, [sp, #240]
   24b84:	ldp	x26, x25, [sp, #224]
   24b88:	ldp	x28, x27, [sp, #208]
   24b8c:	ldp	x29, x30, [sp, #192]
   24b90:	add	sp, sp, #0x120
   24b94:	b	24548 <rpl_re_set_registers@@Base+0x13f8>
   24b98:	add	x4, x25, #0x1
   24b9c:	mov	x0, x20
   24ba0:	mov	x1, x26
   24ba4:	mov	x2, x14
   24ba8:	mov	x3, x21
   24bac:	mov	x5, x28
   24bb0:	mov	x20, x14
   24bb4:	bl	23a90 <rpl_re_set_registers@@Base+0x940>
   24bb8:	ldr	w8, [x28]
   24bbc:	cbz	w8, 26010 <rpl_re_set_registers@@Base+0x2ec0>
   24bc0:	str	xzr, [sp, #48]
   24bc4:	b	26418 <rpl_re_set_registers@@Base+0x32c8>
   24bc8:	ldrb	w8, [x24, #32]
   24bcc:	orr	w8, w8, #0x1
   24bd0:	strb	w8, [x24, #32]
   24bd4:	tbz	w20, #8, 24be4 <rpl_re_set_registers@@Base+0x1a94>
   24bd8:	ldr	x8, [x25]
   24bdc:	orr	x8, x8, #0x400
   24be0:	str	x8, [x25]
   24be4:	ldr	x8, [x19, #72]
   24be8:	mov	x0, x2
   24bec:	mov	x1, x19
   24bf0:	mov	x2, x20
   24bf4:	add	x8, x8, w3, sxtw
   24bf8:	str	x8, [x19, #72]
   24bfc:	bl	26934 <rpl_re_set_registers@@Base+0x37e4>
   24c00:	ldr	x2, [sp, #56]
   24c04:	ldr	w8, [x2, #8]
   24c08:	and	w9, w8, #0xff
   24c0c:	cmp	w9, #0x2
   24c10:	b.eq	261a0 <rpl_re_set_registers@@Base+0x3050>  // b.none
   24c14:	mov	w3, w0
   24c18:	mov	w9, #0x1                   	// #1
   24c1c:	str	w9, [sp, #48]
   24c20:	and	w9, w8, #0xff
   24c24:	cmp	w9, #0x15
   24c28:	b.ne	24c38 <rpl_re_set_registers@@Base+0x1ae8>  // b.any
   24c2c:	and	w8, w8, #0xffffff00
   24c30:	orr	w8, w8, #0x1
   24c34:	str	w8, [x2, #8]
   24c38:	ldr	x4, [sp, #40]
   24c3c:	sub	x8, x29, #0x50
   24c40:	mov	w27, #0x3                   	// #3
   24c44:	sub	x0, x29, #0x20
   24c48:	mov	w5, #0x1                   	// #1
   24c4c:	mov	x1, x19
   24c50:	stur	x8, [x29, #-24]
   24c54:	stur	w27, [x29, #-32]
   24c58:	mov	w21, #0x1                   	// #1
   24c5c:	bl	26a94 <rpl_re_set_registers@@Base+0x3944>
   24c60:	cbnz	w0, 26170 <rpl_re_set_registers@@Base+0x3020>
   24c64:	ldr	x20, [sp, #40]
   24c68:	ldr	x22, [sp, #56]
   24c6c:	stp	xzr, xzr, [sp, #8]
   24c70:	mov	x0, x22
   24c74:	mov	x1, x19
   24c78:	mov	x2, x20
   24c7c:	bl	26934 <rpl_re_set_registers@@Base+0x37e4>
   24c80:	ldur	w22, [x29, #-32]
   24c84:	mov	w26, w0
   24c88:	cmp	w22, #0x2
   24c8c:	b.eq	24e08 <rpl_re_set_registers@@Base+0x1cb8>  // b.none
   24c90:	cmp	w22, #0x4
   24c94:	b.ne	24cc4 <rpl_re_set_registers@@Base+0x1b74>  // b.any
   24c98:	ldr	x0, [x19, #120]
   24c9c:	ldur	x4, [x29, #-24]
   24ca0:	ldr	x5, [sp, #40]
   24ca4:	sub	x3, x29, #0x10
   24ca8:	mov	x1, x25
   24cac:	mov	x2, x24
   24cb0:	bl	26d38 <rpl_re_set_registers@@Base+0x3be8>
   24cb4:	ldr	x14, [sp, #56]
   24cb8:	str	w0, [x28]
   24cbc:	cbz	w0, 24e44 <rpl_re_set_registers@@Base+0x1cf4>
   24cc0:	b	262c8 <rpl_re_set_registers@@Base+0x3178>
   24cc4:	ldr	x8, [sp, #56]
   24cc8:	ldrb	w8, [x8, #8]
   24ccc:	cmp	w8, #0x16
   24cd0:	b.eq	24ce0 <rpl_re_set_registers@@Base+0x1b90>  // b.none
   24cd4:	cmp	w8, #0x2
   24cd8:	b.ne	24de4 <rpl_re_set_registers@@Base+0x1c94>  // b.any
   24cdc:	b	26164 <rpl_re_set_registers@@Base+0x3014>
   24ce0:	ldr	x8, [x19, #72]
   24ce4:	ldr	x2, [sp, #40]
   24ce8:	add	x0, sp, #0x40
   24cec:	mov	x1, x19
   24cf0:	add	x8, x8, w26, sxtw
   24cf4:	str	x8, [x19, #72]
   24cf8:	bl	26934 <rpl_re_set_registers@@Base+0x37e4>
   24cfc:	ldrb	w8, [sp, #72]
   24d00:	cmp	w8, #0x15
   24d04:	b.eq	24dcc <rpl_re_set_registers@@Base+0x1c7c>  // b.none
   24d08:	cmp	w8, #0x2
   24d0c:	str	x28, [sp, #24]
   24d10:	b.eq	26168 <rpl_re_set_registers@@Base+0x3018>  // b.none
   24d14:	ldr	x20, [sp, #40]
   24d18:	mov	w3, w0
   24d1c:	add	x8, sp, #0x50
   24d20:	sub	x0, x29, #0x30
   24d24:	add	x2, sp, #0x40
   24d28:	mov	w5, #0x1                   	// #1
   24d2c:	mov	x1, x19
   24d30:	mov	x4, x20
   24d34:	stur	x8, [x29, #-40]
   24d38:	stur	w27, [x29, #-48]
   24d3c:	bl	26a94 <rpl_re_set_registers@@Base+0x3944>
   24d40:	cbnz	w0, 262c0 <rpl_re_set_registers@@Base+0x3170>
   24d44:	ldr	x0, [sp, #56]
   24d48:	mov	x1, x19
   24d4c:	mov	x2, x20
   24d50:	bl	26934 <rpl_re_set_registers@@Base+0x37e4>
   24d54:	ldr	w8, [x23, #180]
   24d58:	ldur	w19, [x29, #-48]
   24d5c:	mov	w26, w0
   24d60:	mov	w0, #0xb                   	// #11
   24d64:	cmp	w8, #0x1
   24d68:	csel	x20, x24, xzr, gt
   24d6c:	cmp	w19, #0x2
   24d70:	b.eq	262c0 <rpl_re_set_registers@@Base+0x3170>  // b.none
   24d74:	ldr	x14, [sp, #56]
   24d78:	cmp	w19, #0x4
   24d7c:	b.eq	262c0 <rpl_re_set_registers@@Base+0x3170>  // b.none
   24d80:	cmp	w22, #0x3
   24d84:	b.ne	24d9c <rpl_re_set_registers@@Base+0x1c4c>  // b.any
   24d88:	ldur	x0, [x29, #-24]
   24d8c:	bl	a280 <strlen@plt>
   24d90:	ldr	x14, [sp, #56]
   24d94:	cmp	x0, #0x1
   24d98:	b.hi	262bc <rpl_re_set_registers@@Base+0x316c>  // b.pmore
   24d9c:	cmp	w19, #0x3
   24da0:	b.ne	24db8 <rpl_re_set_registers@@Base+0x1c68>  // b.any
   24da4:	ldur	x0, [x29, #-40]
   24da8:	bl	a280 <strlen@plt>
   24dac:	ldr	x14, [sp, #56]
   24db0:	cmp	x0, #0x1
   24db4:	b.hi	262bc <rpl_re_set_registers@@Base+0x316c>  // b.pmore
   24db8:	cmp	w22, #0x3
   24dbc:	b.eq	24ee0 <rpl_re_set_registers@@Base+0x1d90>  // b.none
   24dc0:	cbnz	w22, 24eec <rpl_re_set_registers@@Base+0x1d9c>
   24dc4:	ldurb	w27, [x29, #-24]
   24dc8:	b	24ef0 <rpl_re_set_registers@@Base+0x1da0>
   24dcc:	ldr	x8, [x19, #72]
   24dd0:	neg	w9, w26
   24dd4:	add	x8, x8, w9, sxtw
   24dd8:	str	x8, [x19, #72]
   24ddc:	ldr	x8, [sp, #56]
   24de0:	strb	w21, [x8, #8]
   24de4:	cmp	w22, #0x3
   24de8:	b.hi	265d8 <rpl_re_set_registers@@Base+0x3488>  // b.pmore
   24dec:	adrp	x11, 31000 <vasnprintf@@Base+0x324c>
   24df0:	mov	w8, w22
   24df4:	add	x11, x11, #0x47c
   24df8:	adr	x9, 24e08 <rpl_re_set_registers@@Base+0x1cb8>
   24dfc:	ldrb	w10, [x11, x8]
   24e00:	add	x9, x9, x10, lsl #2
   24e04:	br	x9
   24e08:	ldur	x27, [x29, #-24]
   24e0c:	mov	x0, x27
   24e10:	bl	a280 <strlen@plt>
   24e14:	cmp	x0, #0x1
   24e18:	b.ne	262b8 <rpl_re_set_registers@@Base+0x3168>  // b.any
   24e1c:	ldrb	w8, [x27]
   24e20:	mov	w27, #0x3                   	// #3
   24e24:	lsr	x9, x8, #3
   24e28:	and	x9, x9, #0x18
   24e2c:	ldr	x10, [x25, x9]
   24e30:	lsl	x8, x21, x8
   24e34:	orr	x8, x8, x10
   24e38:	str	x8, [x25, x9]
   24e3c:	ldr	x14, [sp, #56]
   24e40:	str	wzr, [x28]
   24e44:	ldrb	w8, [x14, #8]
   24e48:	cmp	w8, #0x15
   24e4c:	b.eq	25094 <rpl_re_set_registers@@Base+0x1f44>  // b.none
   24e50:	cmp	w8, #0x2
   24e54:	b.eq	26164 <rpl_re_set_registers@@Base+0x3014>  // b.none
   24e58:	ldr	x20, [sp, #40]
   24e5c:	sub	x8, x29, #0x50
   24e60:	sub	x0, x29, #0x20
   24e64:	mov	x1, x19
   24e68:	mov	x2, x14
   24e6c:	mov	w3, w26
   24e70:	mov	x4, x20
   24e74:	mov	w5, wzr
   24e78:	stur	x8, [x29, #-24]
   24e7c:	stur	w27, [x29, #-32]
   24e80:	mov	x22, x14
   24e84:	bl	26a94 <rpl_re_set_registers@@Base+0x3944>
   24e88:	cbz	w0, 24c70 <rpl_re_set_registers@@Base+0x1b20>
   24e8c:	b	26170 <rpl_re_set_registers@@Base+0x3020>
   24e90:	ldurb	w8, [x29, #-24]
   24e94:	ldr	x14, [sp, #56]
   24e98:	lsr	x9, x8, #3
   24e9c:	and	x9, x9, #0x18
   24ea0:	ldr	x10, [x25, x9]
   24ea4:	lsl	x8, x21, x8
   24ea8:	orr	x8, x8, x10
   24eac:	str	x8, [x25, x9]
   24eb0:	b	24e44 <rpl_re_set_registers@@Base+0x1cf4>
   24eb4:	ldr	x8, [x24, #40]
   24eb8:	ldr	x9, [sp, #16]
   24ebc:	cmp	x9, x8
   24ec0:	b.eq	25004 <rpl_re_set_registers@@Base+0x1eb4>  // b.none
   24ec4:	ldr	x0, [x24]
   24ec8:	ldr	x14, [sp, #56]
   24ecc:	ldur	w9, [x29, #-24]
   24ed0:	add	x10, x8, #0x1
   24ed4:	str	x10, [x24, #40]
   24ed8:	str	w9, [x0, x8, lsl #2]
   24edc:	b	24e44 <rpl_re_set_registers@@Base+0x1cf4>
   24ee0:	ldur	x8, [x29, #-24]
   24ee4:	ldrb	w27, [x8]
   24ee8:	b	24ef0 <rpl_re_set_registers@@Base+0x1da0>
   24eec:	mov	w27, wzr
   24ef0:	cmp	w19, #0x3
   24ef4:	b.eq	24f04 <rpl_re_set_registers@@Base+0x1db4>  // b.none
   24ef8:	cbnz	w19, 24f10 <rpl_re_set_registers@@Base+0x1dc0>
   24efc:	ldurb	w28, [x29, #-40]
   24f00:	b	24f14 <rpl_re_set_registers@@Base+0x1dc4>
   24f04:	ldur	x8, [x29, #-40]
   24f08:	ldrb	w28, [x8]
   24f0c:	b	24f14 <rpl_re_set_registers@@Base+0x1dc4>
   24f10:	mov	w28, wzr
   24f14:	cmp	w22, #0x3
   24f18:	b.eq	24f20 <rpl_re_set_registers@@Base+0x1dd0>  // b.none
   24f1c:	cbnz	w22, 24f38 <rpl_re_set_registers@@Base+0x1de8>
   24f20:	cbz	x20, 24f3c <rpl_re_set_registers@@Base+0x1dec>
   24f24:	mov	w0, w27
   24f28:	bl	a810 <btowc@plt>
   24f2c:	ldr	x14, [sp, #56]
   24f30:	mov	w27, w0
   24f34:	b	24f3c <rpl_re_set_registers@@Base+0x1dec>
   24f38:	ldur	w27, [x29, #-24]
   24f3c:	cmp	w19, #0x3
   24f40:	b.eq	24f48 <rpl_re_set_registers@@Base+0x1df8>  // b.none
   24f44:	cbnz	w19, 24f60 <rpl_re_set_registers@@Base+0x1e10>
   24f48:	cbz	x20, 24f64 <rpl_re_set_registers@@Base+0x1e14>
   24f4c:	mov	w0, w28
   24f50:	bl	a810 <btowc@plt>
   24f54:	ldr	x14, [sp, #56]
   24f58:	mov	w28, w0
   24f5c:	b	24f64 <rpl_re_set_registers@@Base+0x1e14>
   24f60:	ldur	w28, [x29, #-40]
   24f64:	cmn	w27, #0x1
   24f68:	mov	w0, #0x3                   	// #3
   24f6c:	b.eq	262c0 <rpl_re_set_registers@@Base+0x3170>  // b.none
   24f70:	cmn	w28, #0x1
   24f74:	b.eq	262c0 <rpl_re_set_registers@@Base+0x3170>  // b.none
   24f78:	ldr	x8, [sp, #40]
   24f7c:	tbz	w8, #16, 24f88 <rpl_re_set_registers@@Base+0x1e38>
   24f80:	cmp	w27, w28
   24f84:	b.hi	26568 <rpl_re_set_registers@@Base+0x3418>  // b.pmore
   24f88:	cbz	x20, 24fb4 <rpl_re_set_registers@@Base+0x1e64>
   24f8c:	ldr	x8, [x20, #64]
   24f90:	ldr	x9, [sp, #8]
   24f94:	cmp	x9, x8
   24f98:	b.eq	2503c <rpl_re_set_registers@@Base+0x1eec>  // b.none
   24f9c:	ldp	x22, x10, [x20, #8]
   24fa0:	lsl	x9, x8, #2
   24fa4:	add	x8, x8, #0x1
   24fa8:	str	w27, [x22, x9]
   24fac:	str	x8, [x20, #64]
   24fb0:	str	w28, [x10, x9]
   24fb4:	mov	w9, w28
   24fb8:	ldp	x28, x19, [sp, #24]
   24fbc:	mov	x8, xzr
   24fc0:	mov	w10, w27
   24fc4:	mov	w27, #0x3                   	// #3
   24fc8:	b	24fd8 <rpl_re_set_registers@@Base+0x1e88>
   24fcc:	add	x8, x8, #0x1
   24fd0:	cmp	x8, #0x100
   24fd4:	b.eq	24e40 <rpl_re_set_registers@@Base+0x1cf0>  // b.none
   24fd8:	cmp	x8, x10
   24fdc:	b.cc	24fcc <rpl_re_set_registers@@Base+0x1e7c>  // b.lo, b.ul, b.last
   24fe0:	cmp	x8, x9
   24fe4:	b.hi	24fcc <rpl_re_set_registers@@Base+0x1e7c>  // b.pmore
   24fe8:	lsr	x11, x8, #3
   24fec:	and	x11, x11, #0x1ffffffffffffff8
   24ff0:	ldr	x12, [x25, x11]
   24ff4:	lsl	x13, x21, x8
   24ff8:	orr	x12, x12, x13
   24ffc:	str	x12, [x25, x11]
   25000:	b	24fcc <rpl_re_set_registers@@Base+0x1e7c>
   25004:	ldr	x8, [sp, #16]
   25008:	ldr	x0, [x24]
   2500c:	mov	w19, #0x1                   	// #1
   25010:	bfi	x19, x8, #1, #63
   25014:	lsl	x1, x19, #2
   25018:	bl	a720 <realloc@plt>
   2501c:	cbz	x0, 265b4 <rpl_re_set_registers@@Base+0x3464>
   25020:	ldr	x8, [x24, #40]
   25024:	str	x19, [sp, #16]
   25028:	ldr	x19, [sp, #32]
   2502c:	ldr	x14, [sp, #56]
   25030:	mov	w27, #0x3                   	// #3
   25034:	str	x0, [x24]
   25038:	b	24ecc <rpl_re_set_registers@@Base+0x1d7c>
   2503c:	ldr	x8, [sp, #8]
   25040:	ldr	x0, [x20, #8]
   25044:	mov	w19, #0x1                   	// #1
   25048:	bfi	x19, x8, #1, #63
   2504c:	lsl	x1, x19, #2
   25050:	str	x1, [sp, #8]
   25054:	bl	a720 <realloc@plt>
   25058:	ldr	x8, [x20, #16]
   2505c:	ldr	x1, [sp, #8]
   25060:	mov	x22, x0
   25064:	mov	x0, x8
   25068:	bl	a720 <realloc@plt>
   2506c:	str	x0, [sp]
   25070:	cbz	x22, 265c0 <rpl_re_set_registers@@Base+0x3470>
   25074:	ldr	x8, [sp]
   25078:	cbz	x8, 265c0 <rpl_re_set_registers@@Base+0x3470>
   2507c:	ldr	x10, [sp]
   25080:	ldr	x8, [x20, #64]
   25084:	stp	x22, x10, [x20, #8]
   25088:	ldr	x14, [sp, #56]
   2508c:	str	x19, [sp, #8]
   25090:	b	24fa0 <rpl_re_set_registers@@Base+0x1e50>
   25094:	ldr	x8, [x19, #72]
   25098:	add	x8, x8, w26, sxtw
   2509c:	str	x8, [x19, #72]
   250a0:	ldr	w8, [sp, #48]
   250a4:	cbz	w8, 250b8 <rpl_re_set_registers@@Base+0x1f68>
   250a8:	ldp	q0, q1, [x25]
   250ac:	mvn	v0.16b, v0.16b
   250b0:	mvn	v1.16b, v1.16b
   250b4:	stp	q0, q1, [x25]
   250b8:	ldr	w8, [x23, #180]
   250bc:	cmp	w8, #0x2
   250c0:	b.lt	25100 <rpl_re_set_registers@@Base+0x1fb0>  // b.tstop
   250c4:	ldr	x9, [x23, #120]
   250c8:	ldp	x11, x12, [x25]
   250cc:	ldr	x10, [x9]
   250d0:	and	x10, x11, x10
   250d4:	str	x10, [x25]
   250d8:	ldr	x10, [x9, #8]
   250dc:	and	x10, x12, x10
   250e0:	str	x10, [x25, #8]
   250e4:	ldr	x10, [x9, #16]
   250e8:	ldp	x11, x12, [x25, #16]
   250ec:	and	x10, x11, x10
   250f0:	str	x10, [x25, #16]
   250f4:	ldr	x9, [x9, #24]
   250f8:	and	x9, x12, x9
   250fc:	str	x9, [x25, #24]
   25100:	ldr	x9, [x24, #40]
   25104:	cbnz	x9, 25120 <rpl_re_set_registers@@Base+0x1fd0>
   25108:	ldr	x9, [x24, #48]
   2510c:	cbnz	x9, 25120 <rpl_re_set_registers@@Base+0x1fd0>
   25110:	ldr	x9, [x24, #56]
   25114:	cbnz	x9, 25120 <rpl_re_set_registers@@Base+0x1fd0>
   25118:	ldr	x9, [x24, #64]
   2511c:	cbz	x9, 260c4 <rpl_re_set_registers@@Base+0x2f74>
   25120:	ldrb	w9, [x23, #176]
   25124:	ldr	w8, [x23, #128]
   25128:	orr	w9, w9, #0x2
   2512c:	cmp	w8, #0xf
   25130:	strb	w9, [x23, #176]
   25134:	b.eq	26240 <rpl_re_set_registers@@Base+0x30f0>  // b.none
   25138:	ldr	x0, [x23, #112]
   2513c:	add	w9, w8, #0x1
   25140:	sxtw	x8, w8
   25144:	add	x19, x0, x8, lsl #6
   25148:	mov	w10, #0x6                   	// #6
   2514c:	mov	x11, #0xffffffffffffffff    	// #-1
   25150:	str	w9, [x23, #128]
   25154:	str	xzr, [x19, #8]!
   25158:	stp	xzr, xzr, [x19, #16]
   2515c:	str	xzr, [x19, #8]
   25160:	str	w10, [x19, #48]
   25164:	stp	xzr, x24, [x19, #32]
   25168:	str	x11, [x19, #56]
   2516c:	ldr	x8, [x25]
   25170:	cbnz	x8, 2518c <rpl_re_set_registers@@Base+0x203c>
   25174:	ldr	x8, [x25, #8]
   25178:	cbnz	x8, 2518c <rpl_re_set_registers@@Base+0x203c>
   2517c:	ldr	x8, [x25, #16]
   25180:	cbnz	x8, 2518c <rpl_re_set_registers@@Base+0x203c>
   25184:	ldr	x8, [x25, #24]
   25188:	cbz	x8, 26150 <rpl_re_set_registers@@Base+0x3000>
   2518c:	ldr	w8, [x23, #128]
   25190:	cmp	w8, #0xf
   25194:	b.eq	26268 <rpl_re_set_registers@@Base+0x3118>  // b.none
   25198:	ldr	x0, [x23, #112]
   2519c:	add	w9, w8, #0x1
   251a0:	sxtw	x8, w8
   251a4:	add	x20, x0, x8, lsl #6
   251a8:	str	w9, [x23, #128]
   251ac:	mov	w9, #0x3                   	// #3
   251b0:	mov	x8, #0xffffffffffffffff    	// #-1
   251b4:	str	xzr, [x20, #8]!
   251b8:	stp	xzr, xzr, [x20, #16]
   251bc:	str	xzr, [x20, #8]
   251c0:	str	w9, [x20, #48]
   251c4:	stp	xzr, x25, [x20, #32]
   251c8:	str	x8, [x20, #56]
   251cc:	ldr	w8, [x23, #128]
   251d0:	cmp	w8, #0xf
   251d4:	b.eq	26290 <rpl_re_set_registers@@Base+0x3140>  // b.none
   251d8:	ldr	x0, [x23, #112]
   251dc:	add	w9, w8, #0x1
   251e0:	sxtw	x8, w8
   251e4:	add	x8, x0, x8, lsl #6
   251e8:	mov	w10, #0xa                   	// #10
   251ec:	mov	x11, #0xffffffffffffffff    	// #-1
   251f0:	str	w9, [x23, #128]
   251f4:	str	xzr, [x8, #8]!
   251f8:	stp	x20, x19, [x8, #8]
   251fc:	str	w10, [x8, #48]
   25200:	stp	xzr, xzr, [x8, #24]
   25204:	str	x11, [x8, #56]
   25208:	str	x8, [x20]
   2520c:	str	x8, [sp, #48]
   25210:	str	x8, [x19]
   25214:	ldp	x20, x21, [sp, #32]
   25218:	mov	x0, x14
   2521c:	str	x28, [sp, #24]
   25220:	mov	x1, x20
   25224:	mov	x2, x21
   25228:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   2522c:	ldr	x8, [x20, #72]
   25230:	ldp	x9, x12, [sp, #48]
   25234:	add	x25, x23, #0x80
   25238:	add	x26, x23, #0x70
   2523c:	mov	w23, #0x1                   	// #1
   25240:	mov	x28, #0xffffffffffffffff    	// #-1
   25244:	add	x8, x8, w0, sxtw
   25248:	str	x8, [x20, #72]
   2524c:	ldrb	w8, [x12, #8]
   25250:	str	x9, [sp, #48]
   25254:	cmp	w8, #0x17
   25258:	b.hi	26418 <rpl_re_set_registers@@Base+0x32c8>  // b.pmore
   2525c:	mov	w10, #0x800                 	// #2048
   25260:	lsl	w9, w23, w8
   25264:	movk	w10, #0x8c, lsl #16
   25268:	tst	w9, w10
   2526c:	b.eq	26418 <rpl_re_set_registers@@Base+0x32c8>  // b.none
   25270:	ldr	q0, [x12]
   25274:	ldr	x19, [x20, #72]
   25278:	mov	w24, #0xa                   	// #10
   2527c:	cmp	w8, #0x17
   25280:	stur	q0, [x29, #-80]
   25284:	b.ne	25324 <rpl_re_set_registers@@Base+0x21d4>  // b.any
   25288:	mov	x10, #0xffffffffffffffff    	// #-1
   2528c:	mov	x0, x12
   25290:	mov	x1, x20
   25294:	mov	x2, x21
   25298:	mov	x22, x10
   2529c:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   252a0:	ldr	x8, [x20, #72]
   252a4:	ldr	x12, [sp, #56]
   252a8:	add	x8, x8, w0, sxtw
   252ac:	str	x8, [x20, #72]
   252b0:	ldrb	w8, [x12, #8]
   252b4:	ldrb	w9, [x12]
   252b8:	cmp	w8, #0x18
   252bc:	b.eq	2533c <rpl_re_set_registers@@Base+0x21ec>  // b.none
   252c0:	cmp	w8, #0x2
   252c4:	b.eq	25968 <rpl_re_set_registers@@Base+0x2818>  // b.none
   252c8:	cmp	w9, #0x2c
   252cc:	b.eq	2533c <rpl_re_set_registers@@Base+0x21ec>  // b.none
   252d0:	cmp	w9, #0x30
   252d4:	mov	x10, #0xfffffffffffffffe    	// #-2
   252d8:	b.cc	2528c <rpl_re_set_registers@@Base+0x213c>  // b.lo, b.ul, b.last
   252dc:	cmp	w8, #0x1
   252e0:	b.ne	2528c <rpl_re_set_registers@@Base+0x213c>  // b.any
   252e4:	cmn	x22, #0x2
   252e8:	mov	x10, #0xfffffffffffffffe    	// #-2
   252ec:	b.eq	2528c <rpl_re_set_registers@@Base+0x213c>  // b.none
   252f0:	cmp	w9, #0x39
   252f4:	b.hi	2528c <rpl_re_set_registers@@Base+0x213c>  // b.pmore
   252f8:	cmn	x22, #0x1
   252fc:	b.eq	2531c <rpl_re_set_registers@@Base+0x21cc>  // b.none
   25300:	madd	x8, x22, x24, x9
   25304:	mov	w10, #0x8030                	// #32816
   25308:	sub	x9, x8, #0x30
   2530c:	cmp	x8, x10
   25310:	mov	w8, #0x8000                	// #32768
   25314:	csel	x10, x8, x9, gt
   25318:	b	2528c <rpl_re_set_registers@@Base+0x213c>
   2531c:	sub	x10, x9, #0x30
   25320:	b	2528c <rpl_re_set_registers@@Base+0x213c>
   25324:	cmp	w8, #0x12
   25328:	cset	w22, eq  // eq = none
   2532c:	cmp	w8, #0x13
   25330:	mov	w8, #0x1                   	// #1
   25334:	cneg	x23, x8, ne  // ne = any
   25338:	b	25470 <rpl_re_set_registers@@Base+0x2320>
   2533c:	cmn	x22, #0x1
   25340:	b.ne	2535c <rpl_re_set_registers@@Base+0x220c>  // b.any
   25344:	cmp	w9, #0x2c
   25348:	b.ne	2541c <rpl_re_set_registers@@Base+0x22cc>  // b.any
   2534c:	cmp	w8, #0x1
   25350:	b.ne	2541c <rpl_re_set_registers@@Base+0x22cc>  // b.any
   25354:	mov	x22, xzr
   25358:	b	2537c <rpl_re_set_registers@@Base+0x222c>
   2535c:	cmn	x22, #0x2
   25360:	b.eq	25968 <rpl_re_set_registers@@Base+0x2818>  // b.none
   25364:	cmp	w8, #0x18
   25368:	b.eq	25430 <rpl_re_set_registers@@Base+0x22e0>  // b.none
   2536c:	cmp	w8, #0x1
   25370:	b.ne	25968 <rpl_re_set_registers@@Base+0x2818>  // b.any
   25374:	cmp	w9, #0x2c
   25378:	b.ne	25968 <rpl_re_set_registers@@Base+0x2818>  // b.any
   2537c:	mov	x10, #0xffffffffffffffff    	// #-1
   25380:	mov	x0, x12
   25384:	mov	x1, x20
   25388:	mov	x2, x21
   2538c:	mov	x23, x10
   25390:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   25394:	ldr	x8, [x20, #72]
   25398:	ldr	x12, [sp, #56]
   2539c:	add	x8, x8, w0, sxtw
   253a0:	str	x8, [x20, #72]
   253a4:	ldrb	w8, [x12, #8]
   253a8:	cmp	w8, #0x18
   253ac:	b.eq	25434 <rpl_re_set_registers@@Base+0x22e4>  // b.none
   253b0:	cmp	w8, #0x2
   253b4:	b.eq	25964 <rpl_re_set_registers@@Base+0x2814>  // b.none
   253b8:	ldrb	w9, [x12]
   253bc:	mov	w11, #0xa                   	// #10
   253c0:	cmp	w9, #0x2c
   253c4:	b.eq	25438 <rpl_re_set_registers@@Base+0x22e8>  // b.none
   253c8:	cmp	w9, #0x30
   253cc:	mov	x10, #0xfffffffffffffffe    	// #-2
   253d0:	b.cc	25380 <rpl_re_set_registers@@Base+0x2230>  // b.lo, b.ul, b.last
   253d4:	cmp	w8, #0x1
   253d8:	b.ne	25380 <rpl_re_set_registers@@Base+0x2230>  // b.any
   253dc:	cmn	x23, #0x2
   253e0:	mov	x10, #0xfffffffffffffffe    	// #-2
   253e4:	b.eq	25380 <rpl_re_set_registers@@Base+0x2230>  // b.none
   253e8:	cmp	w9, #0x39
   253ec:	b.hi	25380 <rpl_re_set_registers@@Base+0x2230>  // b.pmore
   253f0:	cmn	x23, #0x1
   253f4:	b.eq	25414 <rpl_re_set_registers@@Base+0x22c4>  // b.none
   253f8:	madd	x8, x23, x11, x9
   253fc:	mov	w10, #0x8030                	// #32816
   25400:	sub	x9, x8, #0x30
   25404:	cmp	x8, x10
   25408:	mov	w8, #0x8000                	// #32768
   2540c:	csel	x10, x8, x9, gt
   25410:	b	25380 <rpl_re_set_registers@@Base+0x2230>
   25414:	sub	x10, x9, #0x30
   25418:	b	25380 <rpl_re_set_registers@@Base+0x2230>
   2541c:	ldr	x8, [sp, #24]
   25420:	mov	x14, xzr
   25424:	mov	w9, #0xa                   	// #10
   25428:	str	w9, [x8]
   2542c:	b	25dc8 <rpl_re_set_registers@@Base+0x2c78>
   25430:	mov	x23, x22
   25434:	mov	w11, #0xa                   	// #10
   25438:	cmn	x23, #0x2
   2543c:	b.eq	25964 <rpl_re_set_registers@@Base+0x2814>  // b.none
   25440:	cmn	x23, #0x1
   25444:	cset	w9, eq  // eq = none
   25448:	cmp	x22, x23
   2544c:	cset	w10, le
   25450:	cmp	w8, #0x18
   25454:	b.ne	25ba4 <rpl_re_set_registers@@Base+0x2a54>  // b.any
   25458:	orr	w8, w10, w9
   2545c:	tbz	w8, #0, 25ba4 <rpl_re_set_registers@@Base+0x2a54>
   25460:	cmn	x23, #0x1
   25464:	csel	x8, x22, x23, eq  // eq = none
   25468:	cmp	x8, #0x8, lsl #12
   2546c:	b.ge	25d24 <rpl_re_set_registers@@Base+0x2bd4>  // b.tcont
   25470:	mov	x0, x12
   25474:	mov	x1, x20
   25478:	mov	x2, x21
   2547c:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   25480:	ldr	x8, [x20, #72]
   25484:	ldr	x19, [sp, #48]
   25488:	add	x8, x8, w0, sxtw
   2548c:	str	x8, [x20, #72]
   25490:	cbz	x19, 25854 <rpl_re_set_registers@@Base+0x2704>
   25494:	ldr	x12, [sp, #56]
   25498:	orr	x8, x23, x22
   2549c:	mov	w13, #0xa                   	// #10
   254a0:	cbz	x8, 25860 <rpl_re_set_registers@@Base+0x2710>
   254a4:	cmp	x22, #0x1
   254a8:	b.ge	25904 <rpl_re_set_registers@@Base+0x27b4>  // b.tcont
   254ac:	mov	x14, xzr
   254b0:	mov	x21, x19
   254b4:	ldrb	w8, [x21, #48]
   254b8:	cmp	w8, #0x11
   254bc:	b.ne	25524 <rpl_re_set_registers@@Base+0x23d4>  // b.any
   254c0:	ldr	x8, [x21, #40]
   254c4:	mov	x10, x21
   254c8:	mov	x9, x10
   254cc:	ldr	x10, [x10, #8]
   254d0:	cbnz	x10, 254c8 <rpl_re_set_registers@@Base+0x2378>
   254d4:	ldr	x10, [x9, #16]
   254d8:	cbnz	x10, 254c8 <rpl_re_set_registers@@Base+0x2378>
   254dc:	ldr	w10, [x9, #48]
   254e0:	and	w11, w10, #0xff
   254e4:	cmp	w11, #0x11
   254e8:	b.ne	25500 <rpl_re_set_registers@@Base+0x23b0>  // b.any
   254ec:	ldr	x11, [x9, #40]
   254f0:	cmp	x11, x8
   254f4:	b.ne	25500 <rpl_re_set_registers@@Base+0x23b0>  // b.any
   254f8:	orr	w10, w10, #0x80000
   254fc:	str	w10, [x9, #48]
   25500:	ldr	x11, [x9]
   25504:	cbz	x11, 25524 <rpl_re_set_registers@@Base+0x23d4>
   25508:	ldr	x10, [x11, #16]
   2550c:	cmp	x10, x9
   25510:	mov	x9, x11
   25514:	b.eq	254dc <rpl_re_set_registers@@Base+0x238c>  // b.none
   25518:	mov	x9, x11
   2551c:	cbz	x10, 254dc <rpl_re_set_registers@@Base+0x238c>
   25520:	b	254c8 <rpl_re_set_registers@@Base+0x2378>
   25524:	ldr	w8, [x25]
   25528:	cmn	x23, #0x1
   2552c:	cinc	w19, w13, eq  // eq = none
   25530:	cmp	w8, #0xf
   25534:	b.eq	2592c <rpl_re_set_registers@@Base+0x27dc>  // b.none
   25538:	ldr	x0, [x26]
   2553c:	mov	w11, #0x10                  	// #16
   25540:	add	w9, w8, #0x1
   25544:	sxtw	x8, w8
   25548:	add	x22, x22, #0x2
   2554c:	add	x27, x0, x8, lsl #6
   25550:	str	w9, [x25]
   25554:	cmp	x22, x23
   25558:	str	xzr, [x27, #8]!
   2555c:	stp	x21, xzr, [x27, #8]
   25560:	str	w19, [x27, #48]
   25564:	stp	xzr, xzr, [x27, #24]
   25568:	str	x28, [x27, #56]
   2556c:	str	x27, [x21]
   25570:	b.gt	257f8 <rpl_re_set_registers@@Base+0x26a8>
   25574:	mov	x20, x27
   25578:	ldr	w8, [x25]
   2557c:	cmp	w8, #0xf
   25580:	b.eq	25738 <rpl_re_set_registers@@Base+0x25e8>  // b.none
   25584:	ldr	x0, [x26]
   25588:	add	w10, w8, #0x1
   2558c:	sxtw	x8, w8
   25590:	add	x19, x0, x8, lsl #6
   25594:	str	w10, [x25]
   25598:	str	xzr, [x19, #8]!
   2559c:	add	x9, x21, #0x28
   255a0:	stp	xzr, xzr, [x19, #8]
   255a4:	ldr	q0, [x9]
   255a8:	add	x24, sp, #0x50
   255ac:	stp	xzr, xzr, [x19, #24]
   255b0:	str	x28, [x19, #56]
   255b4:	stur	q0, [x19, #40]
   255b8:	ldr	w8, [x19, #48]
   255bc:	and	w8, w8, #0xfff3ffff
   255c0:	str	w8, [x19, #48]
   255c4:	mov	x8, x19
   255c8:	str	x19, [sp, #80]
   255cc:	str	x27, [x8]
   255d0:	ldr	x8, [x24]
   255d4:	ldr	w9, [x8, #48]
   255d8:	orr	w9, w9, #0x40000
   255dc:	str	w9, [x8, #48]
   255e0:	ldr	x8, [x21, #8]
   255e4:	ldr	x27, [x24]
   255e8:	cbz	x8, 25604 <rpl_re_set_registers@@Base+0x24b4>
   255ec:	add	x24, x27, #0x8
   255f0:	mov	x21, x8
   255f4:	b	25620 <rpl_re_set_registers@@Base+0x24d0>
   255f8:	ldr	x21, [x8]
   255fc:	ldr	x27, [x27]
   25600:	cbz	x21, 256a8 <rpl_re_set_registers@@Base+0x2558>
   25604:	mov	x9, x8
   25608:	mov	x8, x21
   2560c:	ldr	x21, [x21, #16]
   25610:	cmp	x21, x9
   25614:	b.eq	255f8 <rpl_re_set_registers@@Base+0x24a8>  // b.none
   25618:	cbz	x21, 255f8 <rpl_re_set_registers@@Base+0x24a8>
   2561c:	add	x24, x27, #0x10
   25620:	ldr	w8, [x25]
   25624:	cmp	w8, #0xf
   25628:	b.eq	25670 <rpl_re_set_registers@@Base+0x2520>  // b.none
   2562c:	ldr	x0, [x26]
   25630:	add	w10, w8, #0x1
   25634:	sxtw	x8, w8
   25638:	add	x8, x0, x8, lsl #6
   2563c:	str	w10, [x25]
   25640:	str	xzr, [x8, #8]!
   25644:	add	x9, x21, #0x28
   25648:	stp	xzr, xzr, [x8, #8]
   2564c:	ldr	q0, [x9]
   25650:	stp	xzr, xzr, [x8, #24]
   25654:	str	x28, [x8, #56]
   25658:	stur	q0, [x8, #40]
   2565c:	ldr	w9, [x8, #48]
   25660:	and	w9, w9, #0xfff3ffff
   25664:	str	w9, [x8, #48]
   25668:	str	x8, [x24]
   2566c:	b	255cc <rpl_re_set_registers@@Base+0x247c>
   25670:	mov	w0, #0x3c8                 	// #968
   25674:	str	x14, [sp, #16]
   25678:	bl	a540 <malloc@plt>
   2567c:	cbz	x0, 257b8 <rpl_re_set_registers@@Base+0x2668>
   25680:	ldr	x9, [x26]
   25684:	ldr	x12, [sp, #56]
   25688:	ldr	x14, [sp, #16]
   2568c:	mov	w8, wzr
   25690:	mov	w13, #0xa                   	// #10
   25694:	mov	w11, #0x10                  	// #16
   25698:	str	x9, [x0]
   2569c:	str	x0, [x26]
   256a0:	str	wzr, [x25]
   256a4:	b	25630 <rpl_re_set_registers@@Base+0x24e0>
   256a8:	ldr	w8, [x25]
   256ac:	cmp	w8, #0xf
   256b0:	b.eq	25770 <rpl_re_set_registers@@Base+0x2620>  // b.none
   256b4:	ldr	x0, [x26]
   256b8:	add	w9, w8, #0x1
   256bc:	sxtw	x8, w8
   256c0:	add	x21, x0, x8, lsl #6
   256c4:	str	w9, [x25]
   256c8:	str	xzr, [x21, #8]!
   256cc:	stp	x20, x19, [x21, #8]
   256d0:	str	w11, [x21, #48]
   256d4:	stp	xzr, xzr, [x21, #24]
   256d8:	str	x28, [x21, #56]
   256dc:	str	x21, [x20]
   256e0:	cbz	x19, 25db0 <rpl_re_set_registers@@Base+0x2c60>
   256e4:	str	x21, [x19]
   256e8:	ldr	w8, [x25]
   256ec:	cmp	w8, #0xf
   256f0:	b.eq	25778 <rpl_re_set_registers@@Base+0x2628>  // b.none
   256f4:	ldr	x0, [x26]
   256f8:	add	w9, w8, #0x1
   256fc:	sxtw	x8, w8
   25700:	add	x20, x0, x8, lsl #6
   25704:	cmp	x22, x23
   25708:	str	w9, [x25]
   2570c:	str	xzr, [x20, #8]!
   25710:	stp	x21, xzr, [x20, #8]
   25714:	str	w13, [x20, #48]
   25718:	stp	xzr, xzr, [x20, #24]
   2571c:	str	x28, [x20, #56]
   25720:	str	x20, [x21]
   25724:	b.ge	257f4 <rpl_re_set_registers@@Base+0x26a4>  // b.tcont
   25728:	ldr	x27, [x19]
   2572c:	add	x22, x22, #0x1
   25730:	mov	x21, x19
   25734:	b	25578 <rpl_re_set_registers@@Base+0x2428>
   25738:	mov	w0, #0x3c8                 	// #968
   2573c:	str	x14, [sp, #16]
   25740:	bl	a540 <malloc@plt>
   25744:	cbz	x0, 257b0 <rpl_re_set_registers@@Base+0x2660>
   25748:	ldr	x9, [x26]
   2574c:	ldr	x12, [sp, #56]
   25750:	ldr	x14, [sp, #16]
   25754:	mov	w8, wzr
   25758:	mov	w13, #0xa                   	// #10
   2575c:	mov	w11, #0x10                  	// #16
   25760:	str	x9, [x0]
   25764:	str	x0, [x26]
   25768:	str	wzr, [x25]
   2576c:	b	25588 <rpl_re_set_registers@@Base+0x2438>
   25770:	str	x14, [sp, #16]
   25774:	b	257c0 <rpl_re_set_registers@@Base+0x2670>
   25778:	mov	w0, #0x3c8                 	// #968
   2577c:	mov	x20, x14
   25780:	bl	a540 <malloc@plt>
   25784:	ldr	x12, [sp, #56]
   25788:	mov	w11, #0x10                  	// #16
   2578c:	mov	w13, #0xa                   	// #10
   25790:	cbz	x0, 25db0 <rpl_re_set_registers@@Base+0x2c60>
   25794:	ldr	x9, [x26]
   25798:	mov	x14, x20
   2579c:	mov	w8, wzr
   257a0:	str	x9, [x0]
   257a4:	str	x0, [x26]
   257a8:	str	wzr, [x25]
   257ac:	b	256f8 <rpl_re_set_registers@@Base+0x25a8>
   257b0:	str	xzr, [sp, #80]
   257b4:	b	257bc <rpl_re_set_registers@@Base+0x266c>
   257b8:	str	xzr, [x24]
   257bc:	mov	x19, xzr
   257c0:	mov	w0, #0x3c8                 	// #968
   257c4:	bl	a540 <malloc@plt>
   257c8:	ldr	x12, [sp, #56]
   257cc:	ldr	x14, [sp, #16]
   257d0:	mov	w13, #0xa                   	// #10
   257d4:	mov	w11, #0x10                  	// #16
   257d8:	cbz	x0, 25db0 <rpl_re_set_registers@@Base+0x2c60>
   257dc:	ldr	x9, [x26]
   257e0:	mov	w8, wzr
   257e4:	str	x9, [x0]
   257e8:	str	x0, [x26]
   257ec:	str	wzr, [x25]
   257f0:	b	256b8 <rpl_re_set_registers@@Base+0x2568>
   257f4:	mov	x27, x20
   257f8:	ldp	x20, x21, [sp, #32]
   257fc:	mov	w23, #0x1                   	// #1
   25800:	cbz	x14, 25848 <rpl_re_set_registers@@Base+0x26f8>
   25804:	ldr	w8, [x25]
   25808:	cmp	w8, #0xf
   2580c:	b.eq	25bb8 <rpl_re_set_registers@@Base+0x2a68>  // b.none
   25810:	ldr	x0, [x26]
   25814:	add	w9, w8, #0x1
   25818:	sxtw	x8, w8
   2581c:	add	x8, x0, x8, lsl #6
   25820:	str	w9, [x25]
   25824:	str	xzr, [x8, #8]!
   25828:	stp	x14, x27, [x8, #8]
   2582c:	str	w11, [x8, #48]
   25830:	stp	xzr, xzr, [x8, #24]
   25834:	str	x28, [x8, #56]
   25838:	str	x8, [x14]
   2583c:	mov	x14, x8
   25840:	str	x8, [x27]
   25844:	b	2584c <rpl_re_set_registers@@Base+0x26fc>
   25848:	mov	x14, x27
   2584c:	mov	w8, wzr
   25850:	b	25de0 <rpl_re_set_registers@@Base+0x2c90>
   25854:	ldr	x12, [sp, #56]
   25858:	mov	x14, xzr
   2585c:	b	25dc4 <rpl_re_set_registers@@Base+0x2c74>
   25860:	mov	x8, x19
   25864:	mov	w23, #0x1                   	// #1
   25868:	mov	x19, x8
   2586c:	ldr	x8, [x8, #8]
   25870:	cbnz	x8, 25868 <rpl_re_set_registers@@Base+0x2718>
   25874:	ldr	x8, [x19, #16]
   25878:	cbnz	x8, 25868 <rpl_re_set_registers@@Base+0x2718>
   2587c:	ldr	w8, [x19, #48]
   25880:	mov	w9, #0xff                  	// #255
   25884:	movk	w9, #0x4, lsl #16
   25888:	and	w8, w8, w9
   2588c:	cmp	w8, #0x3
   25890:	b.eq	258c4 <rpl_re_set_registers@@Base+0x2774>  // b.none
   25894:	cmp	w8, #0x6
   25898:	b.ne	258d8 <rpl_re_set_registers@@Base+0x2788>  // b.any
   2589c:	ldr	x23, [x19, #40]
   258a0:	ldr	x0, [x23]
   258a4:	bl	a960 <free@plt>
   258a8:	ldr	x0, [x23, #8]
   258ac:	bl	a960 <free@plt>
   258b0:	ldr	x0, [x23, #16]
   258b4:	bl	a960 <free@plt>
   258b8:	ldr	x0, [x23, #24]
   258bc:	bl	a960 <free@plt>
   258c0:	b	258c8 <rpl_re_set_registers@@Base+0x2778>
   258c4:	ldr	x23, [x19, #40]
   258c8:	mov	x0, x23
   258cc:	bl	a960 <free@plt>
   258d0:	ldr	x12, [sp, #56]
   258d4:	mov	w23, #0x1                   	// #1
   258d8:	ldr	x9, [x19]
   258dc:	cbz	x9, 258fc <rpl_re_set_registers@@Base+0x27ac>
   258e0:	ldr	x8, [x9, #16]
   258e4:	cmp	x8, x19
   258e8:	mov	x19, x9
   258ec:	b.eq	2587c <rpl_re_set_registers@@Base+0x272c>  // b.none
   258f0:	mov	x19, x9
   258f4:	cbz	x8, 2587c <rpl_re_set_registers@@Base+0x272c>
   258f8:	b	25868 <rpl_re_set_registers@@Base+0x2718>
   258fc:	mov	x14, xzr
   25900:	b	25dc8 <rpl_re_set_registers@@Base+0x2c78>
   25904:	mov	x14, x19
   25908:	mov	x15, x19
   2590c:	mov	w11, #0x10                  	// #16
   25910:	b.ne	25984 <rpl_re_set_registers@@Base+0x2834>  // b.any
   25914:	ldr	x21, [sp, #40]
   25918:	cmp	x22, x23
   2591c:	b.ne	25bec <rpl_re_set_registers@@Base+0x2a9c>  // b.any
   25920:	ldr	x20, [sp, #32]
   25924:	mov	w23, #0x1                   	// #1
   25928:	b	2584c <rpl_re_set_registers@@Base+0x26fc>
   2592c:	mov	w0, #0x3c8                 	// #968
   25930:	mov	x20, x14
   25934:	bl	a540 <malloc@plt>
   25938:	ldr	x12, [sp, #56]
   2593c:	mov	w13, #0xa                   	// #10
   25940:	mov	w11, #0x10                  	// #16
   25944:	cbz	x0, 25db0 <rpl_re_set_registers@@Base+0x2c60>
   25948:	ldr	x9, [x26]
   2594c:	mov	x14, x20
   25950:	mov	w8, wzr
   25954:	str	x9, [x0]
   25958:	str	x0, [x26]
   2595c:	str	wzr, [x25]
   25960:	b	25540 <rpl_re_set_registers@@Base+0x23f0>
   25964:	mov	w23, #0x1                   	// #1
   25968:	tbz	w21, #21, 25d48 <rpl_re_set_registers@@Base+0x2bf8>
   2596c:	str	x19, [x20, #72]
   25970:	ldur	q0, [x29, #-80]
   25974:	ldr	x14, [sp, #48]
   25978:	str	q0, [x12]
   2597c:	strb	w23, [x12, #8]
   25980:	b	25dc8 <rpl_re_set_registers@@Base+0x2c78>
   25984:	ldr	x14, [x19]
   25988:	mov	x15, x19
   2598c:	mov	w21, #0x2                   	// #2
   25990:	ldr	w8, [x25]
   25994:	cmp	w8, #0xf
   25998:	b.eq	25b20 <rpl_re_set_registers@@Base+0x29d0>  // b.none
   2599c:	ldr	x0, [x26]
   259a0:	add	w10, w8, #0x1
   259a4:	sxtw	x8, w8
   259a8:	add	x20, x0, x8, lsl #6
   259ac:	str	w10, [x25]
   259b0:	str	xzr, [x20, #8]!
   259b4:	add	x9, x15, #0x28
   259b8:	stp	xzr, xzr, [x20, #8]
   259bc:	ldr	q0, [x9]
   259c0:	add	x27, sp, #0x50
   259c4:	stp	xzr, xzr, [x20, #24]
   259c8:	str	x28, [x20, #56]
   259cc:	stur	q0, [x20, #40]
   259d0:	ldr	w8, [x20, #48]
   259d4:	and	w8, w8, #0xfff3ffff
   259d8:	str	w8, [x20, #48]
   259dc:	mov	x8, x20
   259e0:	str	x20, [sp, #80]
   259e4:	str	x14, [x8]
   259e8:	ldr	x8, [x27]
   259ec:	ldr	w9, [x8, #48]
   259f0:	orr	w9, w9, #0x40000
   259f4:	str	w9, [x8, #48]
   259f8:	ldr	x8, [x15, #8]
   259fc:	ldr	x14, [x27]
   25a00:	cbz	x8, 25a1c <rpl_re_set_registers@@Base+0x28cc>
   25a04:	add	x27, x14, #0x8
   25a08:	mov	x15, x8
   25a0c:	b	25a38 <rpl_re_set_registers@@Base+0x28e8>
   25a10:	ldr	x15, [x8]
   25a14:	ldr	x14, [x14]
   25a18:	cbz	x15, 25ac8 <rpl_re_set_registers@@Base+0x2978>
   25a1c:	mov	x9, x8
   25a20:	mov	x8, x15
   25a24:	ldr	x15, [x15, #16]
   25a28:	cmp	x15, x9
   25a2c:	b.eq	25a10 <rpl_re_set_registers@@Base+0x28c0>  // b.none
   25a30:	cbz	x15, 25a10 <rpl_re_set_registers@@Base+0x28c0>
   25a34:	add	x27, x14, #0x10
   25a38:	ldr	w8, [x25]
   25a3c:	cmp	w8, #0xf
   25a40:	b.eq	25a88 <rpl_re_set_registers@@Base+0x2938>  // b.none
   25a44:	ldr	x0, [x26]
   25a48:	add	w10, w8, #0x1
   25a4c:	sxtw	x8, w8
   25a50:	add	x8, x0, x8, lsl #6
   25a54:	str	w10, [x25]
   25a58:	str	xzr, [x8, #8]!
   25a5c:	add	x9, x15, #0x28
   25a60:	stp	xzr, xzr, [x8, #8]
   25a64:	ldr	q0, [x9]
   25a68:	stp	xzr, xzr, [x8, #24]
   25a6c:	str	x28, [x8, #56]
   25a70:	stur	q0, [x8, #40]
   25a74:	ldr	w9, [x8, #48]
   25a78:	and	w9, w9, #0xfff3ffff
   25a7c:	str	w9, [x8, #48]
   25a80:	str	x8, [x27]
   25a84:	b	259e4 <rpl_re_set_registers@@Base+0x2894>
   25a88:	mov	w0, #0x3c8                 	// #968
   25a8c:	str	x15, [sp, #16]
   25a90:	mov	x24, x14
   25a94:	bl	a540 <malloc@plt>
   25a98:	cbz	x0, 25b68 <rpl_re_set_registers@@Base+0x2a18>
   25a9c:	ldr	x9, [x26]
   25aa0:	ldr	x12, [sp, #56]
   25aa4:	ldr	x15, [sp, #16]
   25aa8:	mov	w8, wzr
   25aac:	mov	w13, #0xa                   	// #10
   25ab0:	mov	w11, #0x10                  	// #16
   25ab4:	mov	x14, x24
   25ab8:	str	x9, [x0]
   25abc:	str	x0, [x26]
   25ac0:	str	wzr, [x25]
   25ac4:	b	25a48 <rpl_re_set_registers@@Base+0x28f8>
   25ac8:	ldr	w8, [x25]
   25acc:	cmp	w8, #0xf
   25ad0:	b.eq	25b70 <rpl_re_set_registers@@Base+0x2a20>  // b.none
   25ad4:	ldr	x0, [x26]
   25ad8:	mov	x15, x20
   25adc:	add	w9, w8, #0x1
   25ae0:	sxtw	x8, w8
   25ae4:	add	x14, x0, x8, lsl #6
   25ae8:	str	w9, [x25]
   25aec:	str	xzr, [x14, #8]!
   25af0:	stp	x19, x15, [x14, #8]
   25af4:	str	w11, [x14, #48]
   25af8:	stp	xzr, xzr, [x14, #24]
   25afc:	str	x28, [x14, #56]
   25b00:	str	x14, [x19]
   25b04:	cbz	x15, 25db0 <rpl_re_set_registers@@Base+0x2c60>
   25b08:	cmp	x21, x22
   25b0c:	add	x21, x21, #0x1
   25b10:	mov	x19, x14
   25b14:	str	x14, [x15]
   25b18:	b.ne	25990 <rpl_re_set_registers@@Base+0x2840>  // b.any
   25b1c:	b	25914 <rpl_re_set_registers@@Base+0x27c4>
   25b20:	mov	w0, #0x3c8                 	// #968
   25b24:	mov	x24, x15
   25b28:	mov	x20, x14
   25b2c:	bl	a540 <malloc@plt>
   25b30:	cbz	x0, 25b60 <rpl_re_set_registers@@Base+0x2a10>
   25b34:	ldr	x9, [x26]
   25b38:	ldr	x12, [sp, #56]
   25b3c:	mov	w8, wzr
   25b40:	mov	w13, #0xa                   	// #10
   25b44:	mov	w11, #0x10                  	// #16
   25b48:	mov	x14, x20
   25b4c:	mov	x15, x24
   25b50:	str	x9, [x0]
   25b54:	str	x0, [x26]
   25b58:	str	wzr, [x25]
   25b5c:	b	259a0 <rpl_re_set_registers@@Base+0x2850>
   25b60:	str	xzr, [sp, #80]
   25b64:	b	25b6c <rpl_re_set_registers@@Base+0x2a1c>
   25b68:	str	xzr, [x27]
   25b6c:	mov	x20, xzr
   25b70:	mov	w0, #0x3c8                 	// #968
   25b74:	bl	a540 <malloc@plt>
   25b78:	ldr	x12, [sp, #56]
   25b7c:	mov	w13, #0xa                   	// #10
   25b80:	mov	w11, #0x10                  	// #16
   25b84:	cbz	x0, 25db0 <rpl_re_set_registers@@Base+0x2c60>
   25b88:	ldr	x9, [x26]
   25b8c:	mov	x15, x20
   25b90:	mov	w8, wzr
   25b94:	str	x9, [x0]
   25b98:	str	x0, [x26]
   25b9c:	str	wzr, [x25]
   25ba0:	b	25adc <rpl_re_set_registers@@Base+0x298c>
   25ba4:	ldr	x8, [sp, #24]
   25ba8:	mov	x14, xzr
   25bac:	mov	w23, #0x1                   	// #1
   25bb0:	str	w11, [x8]
   25bb4:	b	25dc8 <rpl_re_set_registers@@Base+0x2c78>
   25bb8:	mov	w0, #0x3c8                 	// #968
   25bbc:	mov	x19, x14
   25bc0:	bl	a540 <malloc@plt>
   25bc4:	cbz	x0, 25d3c <rpl_re_set_registers@@Base+0x2bec>
   25bc8:	ldr	x9, [x26]
   25bcc:	ldr	x12, [sp, #56]
   25bd0:	mov	w8, wzr
   25bd4:	mov	w11, #0x10                  	// #16
   25bd8:	mov	x14, x19
   25bdc:	str	x9, [x0]
   25be0:	str	x0, [x26]
   25be4:	str	wzr, [x25]
   25be8:	b	25814 <rpl_re_set_registers@@Base+0x26c4>
   25bec:	mov	x20, x15
   25bf0:	ldr	x19, [x20], #40
   25bf4:	ldr	w8, [x25]
   25bf8:	cmp	w8, #0xf
   25bfc:	b.eq	25d64 <rpl_re_set_registers@@Base+0x2c14>  // b.none
   25c00:	ldr	x0, [x26]
   25c04:	add	w9, w8, #0x1
   25c08:	sxtw	x8, w8
   25c0c:	add	x21, x0, x8, lsl #6
   25c10:	str	w9, [x25]
   25c14:	str	xzr, [x21, #8]!
   25c18:	stp	xzr, xzr, [x21, #8]
   25c1c:	ldr	q0, [x20]
   25c20:	add	x20, sp, #0x50
   25c24:	stp	xzr, xzr, [x21, #24]
   25c28:	str	x28, [x21, #56]
   25c2c:	stur	q0, [x21, #40]
   25c30:	ldr	w8, [x21, #48]
   25c34:	and	w8, w8, #0xfff3ffff
   25c38:	str	w8, [x21, #48]
   25c3c:	mov	x8, x21
   25c40:	str	x21, [sp, #80]
   25c44:	str	x19, [x8]
   25c48:	ldr	x8, [x20]
   25c4c:	ldr	w9, [x8, #48]
   25c50:	orr	w9, w9, #0x40000
   25c54:	str	w9, [x8, #48]
   25c58:	ldr	x8, [x15, #8]
   25c5c:	ldr	x19, [x20]
   25c60:	cbz	x8, 25c7c <rpl_re_set_registers@@Base+0x2b2c>
   25c64:	add	x20, x19, #0x8
   25c68:	mov	x15, x8
   25c6c:	b	25c98 <rpl_re_set_registers@@Base+0x2b48>
   25c70:	ldr	x15, [x8]
   25c74:	ldr	x19, [x19]
   25c78:	cbz	x15, 254b4 <rpl_re_set_registers@@Base+0x2364>
   25c7c:	mov	x9, x8
   25c80:	mov	x8, x15
   25c84:	ldr	x15, [x15, #16]
   25c88:	cmp	x15, x9
   25c8c:	b.eq	25c70 <rpl_re_set_registers@@Base+0x2b20>  // b.none
   25c90:	cbz	x15, 25c70 <rpl_re_set_registers@@Base+0x2b20>
   25c94:	add	x20, x19, #0x10
   25c98:	ldr	w8, [x25]
   25c9c:	cmp	w8, #0xf
   25ca0:	b.eq	25ce8 <rpl_re_set_registers@@Base+0x2b98>  // b.none
   25ca4:	ldr	x0, [x26]
   25ca8:	add	w10, w8, #0x1
   25cac:	sxtw	x8, w8
   25cb0:	add	x8, x0, x8, lsl #6
   25cb4:	str	w10, [x25]
   25cb8:	str	xzr, [x8, #8]!
   25cbc:	add	x9, x15, #0x28
   25cc0:	stp	xzr, xzr, [x8, #8]
   25cc4:	ldr	q0, [x9]
   25cc8:	stp	xzr, xzr, [x8, #24]
   25ccc:	str	x28, [x8, #56]
   25cd0:	stur	q0, [x8, #40]
   25cd4:	ldr	w9, [x8, #48]
   25cd8:	and	w9, w9, #0xfff3ffff
   25cdc:	str	w9, [x8, #48]
   25ce0:	str	x8, [x20]
   25ce4:	b	25c44 <rpl_re_set_registers@@Base+0x2af4>
   25ce8:	mov	w0, #0x3c8                 	// #968
   25cec:	mov	x27, x15
   25cf0:	mov	x24, x14
   25cf4:	bl	a540 <malloc@plt>
   25cf8:	cbz	x0, 25da8 <rpl_re_set_registers@@Base+0x2c58>
   25cfc:	ldr	x9, [x26]
   25d00:	ldr	x12, [sp, #56]
   25d04:	mov	w8, wzr
   25d08:	mov	w13, #0xa                   	// #10
   25d0c:	mov	x14, x24
   25d10:	mov	x15, x27
   25d14:	str	x9, [x0]
   25d18:	str	x0, [x26]
   25d1c:	str	wzr, [x25]
   25d20:	b	25ca8 <rpl_re_set_registers@@Base+0x2b58>
   25d24:	ldr	x8, [sp, #24]
   25d28:	mov	w9, #0xf                   	// #15
   25d2c:	mov	x14, xzr
   25d30:	mov	w23, #0x1                   	// #1
   25d34:	str	w9, [x8]
   25d38:	b	25dc8 <rpl_re_set_registers@@Base+0x2c78>
   25d3c:	ldr	x12, [sp, #56]
   25d40:	mov	x14, xzr
   25d44:	b	25dc8 <rpl_re_set_registers@@Base+0x2c78>
   25d48:	ldr	x9, [sp, #24]
   25d4c:	cmp	w8, #0x2
   25d50:	mov	w8, #0x9                   	// #9
   25d54:	cinc	w8, w8, ne  // ne = any
   25d58:	mov	x14, xzr
   25d5c:	str	w8, [x9]
   25d60:	b	25dc8 <rpl_re_set_registers@@Base+0x2c78>
   25d64:	mov	w0, #0x3c8                 	// #968
   25d68:	mov	x24, x15
   25d6c:	mov	x21, x14
   25d70:	bl	a540 <malloc@plt>
   25d74:	cbz	x0, 25da0 <rpl_re_set_registers@@Base+0x2c50>
   25d78:	ldr	x9, [x26]
   25d7c:	ldr	x12, [sp, #56]
   25d80:	mov	w8, wzr
   25d84:	mov	w13, #0xa                   	// #10
   25d88:	mov	x14, x21
   25d8c:	mov	x15, x24
   25d90:	str	x9, [x0]
   25d94:	str	x0, [x26]
   25d98:	str	wzr, [x25]
   25d9c:	b	25c04 <rpl_re_set_registers@@Base+0x2ab4>
   25da0:	str	xzr, [sp, #80]
   25da4:	b	25dac <rpl_re_set_registers@@Base+0x2c5c>
   25da8:	str	xzr, [x20]
   25dac:	ldr	x12, [sp, #56]
   25db0:	ldp	x8, x20, [sp, #24]
   25db4:	ldr	x21, [sp, #40]
   25db8:	mov	w9, #0xc                   	// #12
   25dbc:	mov	x14, xzr
   25dc0:	str	w9, [x8]
   25dc4:	mov	w23, #0x1                   	// #1
   25dc8:	cmp	x14, #0x0
   25dcc:	cset	w8, eq  // eq = none
   25dd0:	cbnz	x14, 25de0 <rpl_re_set_registers@@Base+0x2c90>
   25dd4:	ldr	x9, [sp, #24]
   25dd8:	ldr	w9, [x9]
   25ddc:	cbnz	w9, 26030 <rpl_re_set_registers@@Base+0x2ee0>
   25de0:	mov	x9, x14
   25de4:	tbz	w21, #24, 2524c <rpl_re_set_registers@@Base+0x20fc>
   25de8:	ldrb	w9, [x12, #8]
   25dec:	cmp	w9, #0x17
   25df0:	b.eq	25e00 <rpl_re_set_registers@@Base+0x2cb0>  // b.none
   25df4:	cmp	w9, #0xb
   25df8:	mov	x9, x14
   25dfc:	b.ne	2524c <rpl_re_set_registers@@Base+0x20fc>  // b.any
   25e00:	ldr	x22, [sp, #24]
   25e04:	tbz	w8, #0, 25e18 <rpl_re_set_registers@@Base+0x2cc8>
   25e08:	mov	w8, #0xd                   	// #13
   25e0c:	str	xzr, [sp, #48]
   25e10:	str	w8, [x22]
   25e14:	b	26418 <rpl_re_set_registers@@Base+0x32c8>
   25e18:	mov	w19, #0xff                  	// #255
   25e1c:	movk	w19, #0x4, lsl #16
   25e20:	mov	x21, x14
   25e24:	ldr	x14, [x14, #8]
   25e28:	cbnz	x14, 25e20 <rpl_re_set_registers@@Base+0x2cd0>
   25e2c:	ldr	x14, [x21, #16]
   25e30:	cbnz	x14, 25e20 <rpl_re_set_registers@@Base+0x2cd0>
   25e34:	ldr	w8, [x21, #48]
   25e38:	and	w8, w8, w19
   25e3c:	cmp	w8, #0x3
   25e40:	b.eq	25e74 <rpl_re_set_registers@@Base+0x2d24>  // b.none
   25e44:	cmp	w8, #0x6
   25e48:	b.ne	25e80 <rpl_re_set_registers@@Base+0x2d30>  // b.any
   25e4c:	ldr	x20, [x21, #40]
   25e50:	ldr	x0, [x20]
   25e54:	bl	a960 <free@plt>
   25e58:	ldr	x0, [x20, #8]
   25e5c:	bl	a960 <free@plt>
   25e60:	ldr	x0, [x20, #16]
   25e64:	bl	a960 <free@plt>
   25e68:	ldr	x0, [x20, #24]
   25e6c:	bl	a960 <free@plt>
   25e70:	b	25e78 <rpl_re_set_registers@@Base+0x2d28>
   25e74:	ldr	x20, [x21, #40]
   25e78:	mov	x0, x20
   25e7c:	bl	a960 <free@plt>
   25e80:	ldr	x8, [x21]
   25e84:	cbz	x8, 25e08 <rpl_re_set_registers@@Base+0x2cb8>
   25e88:	ldr	x14, [x8, #16]
   25e8c:	cmp	x14, x21
   25e90:	mov	x21, x8
   25e94:	b.eq	25e34 <rpl_re_set_registers@@Base+0x2ce4>  // b.none
   25e98:	mov	x21, x8
   25e9c:	cbz	x14, 25e34 <rpl_re_set_registers@@Base+0x2ce4>
   25ea0:	b	25e20 <rpl_re_set_registers@@Base+0x2cd0>
   25ea4:	mov	w8, #0x5                   	// #5
   25ea8:	str	w8, [x14]
   25eac:	ldr	w8, [x23, #128]
   25eb0:	ldr	x21, [sp, #40]
   25eb4:	cmp	w8, #0xf
   25eb8:	b.eq	263b4 <rpl_re_set_registers@@Base+0x3264>  // b.none
   25ebc:	ldr	x0, [x23, #112]
   25ec0:	add	w9, w8, #0x1
   25ec4:	sxtw	x8, w8
   25ec8:	add	x19, x0, x8, lsl #6
   25ecc:	str	w9, [x23, #128]
   25ed0:	str	xzr, [x19, #8]!
   25ed4:	stp	xzr, xzr, [x19, #8]
   25ed8:	ldr	q0, [x14]
   25edc:	mov	x8, #0xffffffffffffffff    	// #-1
   25ee0:	str	x8, [x19, #56]
   25ee4:	stp	xzr, xzr, [x19, #24]
   25ee8:	stur	q0, [x19, #40]
   25eec:	ldr	w9, [x19, #48]
   25ef0:	and	w8, w9, #0xfff3ffff
   25ef4:	str	w8, [x19, #48]
   25ef8:	mov	w8, #0xa                   	// #10
   25efc:	str	w8, [x14]
   25f00:	ldr	w8, [x23, #128]
   25f04:	cmp	w8, #0xf
   25f08:	b.eq	26334 <rpl_re_set_registers@@Base+0x31e4>  // b.none
   25f0c:	ldr	x0, [x23, #112]
   25f10:	add	w9, w8, #0x1
   25f14:	sxtw	x8, w8
   25f18:	add	x20, x0, x8, lsl #6
   25f1c:	str	w9, [x23, #128]
   25f20:	str	xzr, [x20, #8]!
   25f24:	stp	xzr, xzr, [x20, #8]
   25f28:	ldr	q0, [x14]
   25f2c:	mov	x9, #0xffffffffffffffff    	// #-1
   25f30:	stp	xzr, xzr, [x20, #24]
   25f34:	str	x9, [x20, #56]
   25f38:	stur	q0, [x20, #40]
   25f3c:	ldr	w8, [x20, #48]
   25f40:	and	w8, w8, #0xfff3ffff
   25f44:	str	w8, [x20, #48]
   25f48:	ldr	w8, [x23, #128]
   25f4c:	cmp	w8, #0xf
   25f50:	b.eq	26360 <rpl_re_set_registers@@Base+0x3210>  // b.none
   25f54:	ldr	x0, [x23, #112]
   25f58:	add	w9, w8, #0x1
   25f5c:	sxtw	x8, w8
   25f60:	add	x8, x0, x8, lsl #6
   25f64:	mov	w10, #0xa                   	// #10
   25f68:	mov	x11, #0xffffffffffffffff    	// #-1
   25f6c:	str	w9, [x23, #128]
   25f70:	str	xzr, [x8, #8]!
   25f74:	stp	x19, x20, [x8, #8]
   25f78:	str	w10, [x8, #48]
   25f7c:	stp	xzr, xzr, [x8, #24]
   25f80:	str	x11, [x8, #56]
   25f84:	cbz	x19, 25f8c <rpl_re_set_registers@@Base+0x2e3c>
   25f88:	str	x8, [x19]
   25f8c:	cbz	x20, 2640c <rpl_re_set_registers@@Base+0x32bc>
   25f90:	str	x8, [x20]
   25f94:	cbnz	x19, 25fe8 <rpl_re_set_registers@@Base+0x2e98>
   25f98:	b	2640c <rpl_re_set_registers@@Base+0x32bc>
   25f9c:	ldr	w8, [x23, #128]
   25fa0:	cmp	w8, #0xf
   25fa4:	b.eq	263e0 <rpl_re_set_registers@@Base+0x3290>  // b.none
   25fa8:	ldr	x0, [x23, #112]
   25fac:	add	w9, w8, #0x1
   25fb0:	sxtw	x8, w8
   25fb4:	add	x10, x0, x8, lsl #6
   25fb8:	str	w9, [x23, #128]
   25fbc:	str	xzr, [x10, #8]!
   25fc0:	stp	xzr, xzr, [x10, #8]
   25fc4:	ldr	q0, [x14]
   25fc8:	mov	x9, #0xffffffffffffffff    	// #-1
   25fcc:	stp	xzr, xzr, [x10, #24]
   25fd0:	str	x9, [x10, #56]
   25fd4:	stur	q0, [x10, #40]
   25fd8:	ldr	w8, [x10, #48]
   25fdc:	and	w8, w8, #0xfff3ffff
   25fe0:	str	w8, [x10, #48]
   25fe4:	mov	x8, x10
   25fe8:	ldr	x19, [sp, #32]
   25fec:	mov	x0, x14
   25ff0:	mov	x2, x21
   25ff4:	str	x8, [sp, #48]
   25ff8:	mov	x1, x19
   25ffc:	bl	23cd8 <rpl_re_set_registers@@Base+0xb88>
   26000:	ldr	x8, [x19, #72]
   26004:	add	x8, x8, w0, sxtw
   26008:	str	x8, [x19, #72]
   2600c:	b	26418 <rpl_re_set_registers@@Base+0x32c8>
   26010:	ldrb	w8, [x20, #8]
   26014:	mov	x25, x0
   26018:	cmp	w8, #0x9
   2601c:	b.ne	264d0 <rpl_re_set_registers@@Base+0x3380>  // b.any
   26020:	mov	x14, x20
   26024:	cmp	x19, #0x8
   26028:	b.ls	24798 <rpl_re_set_registers@@Base+0x1648>  // b.plast
   2602c:	b	247b0 <rpl_re_set_registers@@Base+0x1660>
   26030:	ldr	x9, [sp, #48]
   26034:	cbz	x9, 24bc0 <rpl_re_set_registers@@Base+0x1a70>
   26038:	mov	w20, #0xff                  	// #255
   2603c:	movk	w20, #0x4, lsl #16
   26040:	mov	x21, x9
   26044:	ldr	x9, [x9, #8]
   26048:	cbnz	x9, 26040 <rpl_re_set_registers@@Base+0x2ef0>
   2604c:	ldr	x9, [x21, #16]
   26050:	cbnz	x9, 26040 <rpl_re_set_registers@@Base+0x2ef0>
   26054:	ldr	w8, [x21, #48]
   26058:	and	w8, w8, w20
   2605c:	cmp	w8, #0x3
   26060:	b.eq	26094 <rpl_re_set_registers@@Base+0x2f44>  // b.none
   26064:	cmp	w8, #0x6
   26068:	b.ne	260a0 <rpl_re_set_registers@@Base+0x2f50>  // b.any
   2606c:	ldr	x19, [x21, #40]
   26070:	ldr	x0, [x19]
   26074:	bl	a960 <free@plt>
   26078:	ldr	x0, [x19, #8]
   2607c:	bl	a960 <free@plt>
   26080:	ldr	x0, [x19, #16]
   26084:	bl	a960 <free@plt>
   26088:	ldr	x0, [x19, #24]
   2608c:	bl	a960 <free@plt>
   26090:	b	26098 <rpl_re_set_registers@@Base+0x2f48>
   26094:	ldr	x19, [x21, #40]
   26098:	mov	x0, x19
   2609c:	bl	a960 <free@plt>
   260a0:	ldr	x8, [x21]
   260a4:	cbz	x8, 24bc0 <rpl_re_set_registers@@Base+0x1a70>
   260a8:	ldr	x9, [x8, #16]
   260ac:	cmp	x9, x21
   260b0:	mov	x21, x8
   260b4:	b.eq	26054 <rpl_re_set_registers@@Base+0x2f04>  // b.none
   260b8:	mov	x21, x8
   260bc:	cbz	x9, 26054 <rpl_re_set_registers@@Base+0x2f04>
   260c0:	b	26040 <rpl_re_set_registers@@Base+0x2ef0>
   260c4:	cmp	w8, #0x2
   260c8:	b.lt	260dc <rpl_re_set_registers@@Base+0x2f8c>  // b.tstop
   260cc:	ldr	x8, [x24, #72]
   260d0:	cbnz	x8, 25120 <rpl_re_set_registers@@Base+0x1fd0>
   260d4:	ldrb	w8, [x24, #32]
   260d8:	tbnz	w8, #0, 25120 <rpl_re_set_registers@@Base+0x1fd0>
   260dc:	ldr	x0, [x24]
   260e0:	bl	a960 <free@plt>
   260e4:	ldr	x0, [x24, #8]
   260e8:	bl	a960 <free@plt>
   260ec:	ldr	x0, [x24, #16]
   260f0:	bl	a960 <free@plt>
   260f4:	ldr	x0, [x24, #24]
   260f8:	bl	a960 <free@plt>
   260fc:	mov	x0, x24
   26100:	bl	a960 <free@plt>
   26104:	ldr	w8, [x23, #128]
   26108:	cmp	w8, #0xf
   2610c:	b.eq	26590 <rpl_re_set_registers@@Base+0x3440>  // b.none
   26110:	ldr	x0, [x23, #112]
   26114:	ldr	x14, [sp, #56]
   26118:	add	w9, w8, #0x1
   2611c:	sxtw	x8, w8
   26120:	add	x8, x0, x8, lsl #6
   26124:	mov	w10, #0x3                   	// #3
   26128:	mov	x11, #0xffffffffffffffff    	// #-1
   2612c:	str	w9, [x23, #128]
   26130:	str	xzr, [x8, #8]!
   26134:	stp	xzr, xzr, [x8, #16]
   26138:	str	xzr, [x8, #8]
   2613c:	str	w10, [x8, #48]
   26140:	stp	xzr, x25, [x8, #32]
   26144:	str	x8, [sp, #48]
   26148:	str	x11, [x8, #56]
   2614c:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   26150:	mov	x0, x25
   26154:	bl	a960 <free@plt>
   26158:	ldr	x14, [sp, #56]
   2615c:	str	x19, [sp, #48]
   26160:	b	25214 <rpl_re_set_registers@@Base+0x20c4>
   26164:	str	x28, [sp, #24]
   26168:	mov	w0, #0x7                   	// #7
   2616c:	b	262c0 <rpl_re_set_registers@@Base+0x3170>
   26170:	str	x28, [sp, #24]
   26174:	b	262c0 <rpl_re_set_registers@@Base+0x3170>
   26178:	mov	w0, #0x3c8                 	// #968
   2617c:	bl	a540 <malloc@plt>
   26180:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   26184:	ldr	x9, [x23, #112]
   26188:	ldr	x14, [sp, #56]
   2618c:	mov	w8, wzr
   26190:	str	x9, [x0]
   26194:	str	x0, [x23, #112]
   26198:	str	wzr, [x23, #128]
   2619c:	b	24670 <rpl_re_set_registers@@Base+0x1520>
   261a0:	mov	w8, #0x2                   	// #2
   261a4:	b	265b8 <rpl_re_set_registers@@Base+0x3468>
   261a8:	mov	w8, #0x6                   	// #6
   261ac:	b	26410 <rpl_re_set_registers@@Base+0x32c0>
   261b0:	mov	w0, #0x3c8                 	// #968
   261b4:	bl	a540 <malloc@plt>
   261b8:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   261bc:	ldr	x9, [x23, #112]
   261c0:	ldr	x10, [sp, #32]
   261c4:	ldr	x14, [sp, #56]
   261c8:	mov	w8, wzr
   261cc:	str	x9, [x0]
   261d0:	str	x0, [x23, #112]
   261d4:	str	wzr, [x23, #128]
   261d8:	b	24818 <rpl_re_set_registers@@Base+0x16c8>
   261dc:	mov	w0, #0x3c8                 	// #968
   261e0:	bl	a540 <malloc@plt>
   261e4:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   261e8:	ldr	x9, [x23, #112]
   261ec:	ldr	x14, [sp, #56]
   261f0:	mov	w8, wzr
   261f4:	str	x9, [x0]
   261f8:	str	x0, [x23, #112]
   261fc:	str	wzr, [x23, #128]
   26200:	b	249c0 <rpl_re_set_registers@@Base+0x1870>
   26204:	mov	x0, x25
   26208:	bl	a960 <free@plt>
   2620c:	mov	x0, x24
   26210:	bl	a960 <free@plt>
   26214:	b	2640c <rpl_re_set_registers@@Base+0x32bc>
   26218:	mov	w0, #0x3c8                 	// #968
   2621c:	bl	a540 <malloc@plt>
   26220:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   26224:	ldr	x9, [x23, #112]
   26228:	ldr	x14, [sp, #56]
   2622c:	mov	w8, wzr
   26230:	str	x9, [x0]
   26234:	str	x0, [x23, #112]
   26238:	str	wzr, [x23, #128]
   2623c:	b	246f8 <rpl_re_set_registers@@Base+0x15a8>
   26240:	mov	w0, #0x3c8                 	// #968
   26244:	bl	a540 <malloc@plt>
   26248:	cbz	x0, 265b4 <rpl_re_set_registers@@Base+0x3464>
   2624c:	ldr	x9, [x23, #112]
   26250:	ldr	x14, [sp, #56]
   26254:	mov	w8, wzr
   26258:	str	x9, [x0]
   2625c:	str	x0, [x23, #112]
   26260:	str	wzr, [x23, #128]
   26264:	b	2513c <rpl_re_set_registers@@Base+0x1fec>
   26268:	mov	w0, #0x3c8                 	// #968
   2626c:	bl	a540 <malloc@plt>
   26270:	cbz	x0, 265b4 <rpl_re_set_registers@@Base+0x3464>
   26274:	ldr	x9, [x23, #112]
   26278:	ldr	x14, [sp, #56]
   2627c:	mov	w8, wzr
   26280:	str	x9, [x0]
   26284:	str	x0, [x23, #112]
   26288:	str	wzr, [x23, #128]
   2628c:	b	2519c <rpl_re_set_registers@@Base+0x204c>
   26290:	mov	w0, #0x3c8                 	// #968
   26294:	bl	a540 <malloc@plt>
   26298:	cbz	x0, 265b4 <rpl_re_set_registers@@Base+0x3464>
   2629c:	ldr	x9, [x23, #112]
   262a0:	ldr	x14, [sp, #56]
   262a4:	mov	w8, wzr
   262a8:	str	x9, [x0]
   262ac:	str	x0, [x23, #112]
   262b0:	str	wzr, [x23, #128]
   262b4:	b	251dc <rpl_re_set_registers@@Base+0x208c>
   262b8:	str	x28, [sp, #24]
   262bc:	mov	w0, #0x3                   	// #3
   262c0:	ldr	x28, [sp, #24]
   262c4:	str	w0, [x28]
   262c8:	mov	x0, x25
   262cc:	bl	a960 <free@plt>
   262d0:	ldr	x0, [x24]
   262d4:	bl	a960 <free@plt>
   262d8:	ldr	x0, [x24, #8]
   262dc:	bl	a960 <free@plt>
   262e0:	ldr	x0, [x24, #16]
   262e4:	bl	a960 <free@plt>
   262e8:	ldr	x0, [x24, #24]
   262ec:	bl	a960 <free@plt>
   262f0:	mov	x0, x24
   262f4:	bl	a960 <free@plt>
   262f8:	ldr	w8, [x28]
   262fc:	ldr	x14, [sp, #56]
   26300:	str	xzr, [sp, #48]
   26304:	cbz	w8, 25214 <rpl_re_set_registers@@Base+0x20c4>
   26308:	b	26418 <rpl_re_set_registers@@Base+0x32c8>
   2630c:	mov	w0, #0x3c8                 	// #968
   26310:	bl	a540 <malloc@plt>
   26314:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   26318:	ldr	x9, [x23, #112]
   2631c:	ldr	x14, [sp, #56]
   26320:	mov	w8, wzr
   26324:	str	x9, [x0]
   26328:	str	x0, [x23, #112]
   2632c:	str	wzr, [x23, #128]
   26330:	b	247c0 <rpl_re_set_registers@@Base+0x1670>
   26334:	mov	w0, #0x3c8                 	// #968
   26338:	bl	a540 <malloc@plt>
   2633c:	cbz	x0, 264c0 <rpl_re_set_registers@@Base+0x3370>
   26340:	ldr	x9, [x23, #112]
   26344:	ldr	x21, [sp, #40]
   26348:	ldr	x14, [sp, #56]
   2634c:	mov	w8, wzr
   26350:	str	x9, [x0]
   26354:	str	x0, [x23, #112]
   26358:	str	wzr, [x23, #128]
   2635c:	b	25f10 <rpl_re_set_registers@@Base+0x2dc0>
   26360:	mov	w0, #0x3c8                 	// #968
   26364:	bl	a540 <malloc@plt>
   26368:	ldr	x14, [sp, #56]
   2636c:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   26370:	ldr	x9, [x23, #112]
   26374:	mov	w8, wzr
   26378:	str	x9, [x0]
   2637c:	str	x0, [x23, #112]
   26380:	str	wzr, [x23, #128]
   26384:	b	25f58 <rpl_re_set_registers@@Base+0x2e08>
   26388:	mov	w0, #0x3c8                 	// #968
   2638c:	bl	a540 <malloc@plt>
   26390:	cbz	x0, 26570 <rpl_re_set_registers@@Base+0x3420>
   26394:	ldr	x9, [x23, #112]
   26398:	ldr	x21, [sp, #40]
   2639c:	ldr	x14, [sp, #56]
   263a0:	mov	w8, wzr
   263a4:	str	x9, [x0]
   263a8:	str	x0, [x23, #112]
   263ac:	str	wzr, [x23, #128]
   263b0:	b	24a80 <rpl_re_set_registers@@Base+0x1930>
   263b4:	mov	w0, #0x3c8                 	// #968
   263b8:	bl	a540 <malloc@plt>
   263bc:	cbz	x0, 2657c <rpl_re_set_registers@@Base+0x342c>
   263c0:	ldr	x9, [x23, #112]
   263c4:	ldr	x21, [sp, #40]
   263c8:	ldr	x14, [sp, #56]
   263cc:	mov	w8, wzr
   263d0:	str	x9, [x0]
   263d4:	str	x0, [x23, #112]
   263d8:	str	wzr, [x23, #128]
   263dc:	b	25ec0 <rpl_re_set_registers@@Base+0x2d70>
   263e0:	mov	w0, #0x3c8                 	// #968
   263e4:	bl	a540 <malloc@plt>
   263e8:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x32bc>
   263ec:	ldr	x9, [x23, #112]
   263f0:	ldr	x21, [sp, #40]
   263f4:	ldr	x14, [sp, #56]
   263f8:	mov	w8, wzr
   263fc:	str	x9, [x0]
   26400:	str	x0, [x23, #112]
   26404:	str	wzr, [x23, #128]
   26408:	b	25fac <rpl_re_set_registers@@Base+0x2e5c>
   2640c:	mov	w8, #0xc                   	// #12
   26410:	str	xzr, [sp, #48]
   26414:	str	w8, [x28]
   26418:	ldr	x0, [sp, #48]
   2641c:	ldp	x20, x19, [sp, #272]
   26420:	ldp	x22, x21, [sp, #256]
   26424:	ldp	x24, x23, [sp, #240]
   26428:	ldp	x26, x25, [sp, #224]
   2642c:	ldp	x28, x27, [sp, #208]
   26430:	ldp	x29, x30, [sp, #192]
   26434:	add	sp, sp, #0x120
   26438:	ret
   2643c:	mov	x20, xzr
   26440:	mov	x19, xzr
   26444:	b	26450 <rpl_re_set_registers@@Base+0x3300>
   26448:	mov	w19, #0x2                   	// #2
   2644c:	mov	w20, #0x80                  	// #128
   26450:	bl	a900 <__ctype_b_loc@plt>
   26454:	ldr	x8, [x0]
   26458:	ldr	x14, [sp, #56]
   2645c:	mov	w9, #0x1                   	// #1
   26460:	add	x8, x8, x20, lsl #1
   26464:	b	2647c <rpl_re_set_registers@@Base+0x332c>
   26468:	add	x19, x19, #0x1
   2646c:	add	x20, x20, #0x40
   26470:	cmp	x19, #0x4
   26474:	add	x8, x8, #0x80
   26478:	b.eq	24a50 <rpl_re_set_registers@@Base+0x1900>  // b.none
   2647c:	add	x11, x23, x19, lsl #3
   26480:	mov	x10, xzr
   26484:	add	x11, x11, #0xb8
   26488:	b	264a8 <rpl_re_set_registers@@Base+0x3358>
   2648c:	ldr	x12, [x11]
   26490:	lsl	x13, x9, x10
   26494:	orr	x12, x12, x13
   26498:	str	x12, [x11]
   2649c:	add	x10, x10, #0x1
   264a0:	cmp	x10, #0x40
   264a4:	b.eq	26468 <rpl_re_set_registers@@Base+0x3318>  // b.none
   264a8:	add	x12, x20, x10
   264ac:	cmp	x12, #0x5f
   264b0:	b.eq	2648c <rpl_re_set_registers@@Base+0x333c>  // b.none
   264b4:	ldrh	w12, [x8, x10, lsl #1]
   264b8:	tbz	w12, #3, 2649c <rpl_re_set_registers@@Base+0x334c>
   264bc:	b	2648c <rpl_re_set_registers@@Base+0x333c>
   264c0:	ldr	x21, [sp, #40]
   264c4:	ldr	x14, [sp, #56]
   264c8:	mov	x20, xzr
   264cc:	b	25f48 <rpl_re_set_registers@@Base+0x2df8>
   264d0:	cbz	x25, 26560 <rpl_re_set_registers@@Base+0x3410>
   264d4:	mov	w19, #0xff                  	// #255
   264d8:	movk	w19, #0x4, lsl #16
   264dc:	mov	x21, x25
   264e0:	ldr	x25, [x25, #8]
   264e4:	cbnz	x25, 264dc <rpl_re_set_registers@@Base+0x338c>
   264e8:	ldr	x25, [x21, #16]
   264ec:	cbnz	x25, 264dc <rpl_re_set_registers@@Base+0x338c>
   264f0:	ldr	w8, [x21, #48]
   264f4:	and	w8, w8, w19
   264f8:	cmp	w8, #0x3
   264fc:	b.eq	26530 <rpl_re_set_registers@@Base+0x33e0>  // b.none
   26500:	cmp	w8, #0x6
   26504:	b.ne	2653c <rpl_re_set_registers@@Base+0x33ec>  // b.any
   26508:	ldr	x20, [x21, #40]
   2650c:	ldr	x0, [x20]
   26510:	bl	a960 <free@plt>
   26514:	ldr	x0, [x20, #8]
   26518:	bl	a960 <free@plt>
   2651c:	ldr	x0, [x20, #16]
   26520:	bl	a960 <free@plt>
   26524:	ldr	x0, [x20, #24]
   26528:	bl	a960 <free@plt>
   2652c:	b	26534 <rpl_re_set_registers@@Base+0x33e4>
   26530:	ldr	x20, [x21, #40]
   26534:	mov	x0, x20
   26538:	bl	a960 <free@plt>
   2653c:	ldr	x8, [x21]
   26540:	cbz	x8, 26560 <rpl_re_set_registers@@Base+0x3410>
   26544:	ldr	x25, [x8, #16]
   26548:	cmp	x25, x21
   2654c:	mov	x21, x8
   26550:	b.eq	264f0 <rpl_re_set_registers@@Base+0x33a0>  // b.none
   26554:	mov	x21, x8
   26558:	cbz	x25, 264f0 <rpl_re_set_registers@@Base+0x33a0>
   2655c:	b	264dc <rpl_re_set_registers@@Base+0x338c>
   26560:	mov	w8, #0x8                   	// #8
   26564:	b	26410 <rpl_re_set_registers@@Base+0x32c0>
   26568:	mov	w0, #0xb                   	// #11
   2656c:	b	262c0 <rpl_re_set_registers@@Base+0x3170>
   26570:	mov	x19, xzr
   26574:	mov	w8, #0x9                   	// #9
   26578:	b	26584 <rpl_re_set_registers@@Base+0x3434>
   2657c:	mov	x19, xzr
   26580:	mov	w8, #0xa                   	// #10
   26584:	ldr	x21, [sp, #40]
   26588:	ldr	x14, [sp, #56]
   2658c:	b	25efc <rpl_re_set_registers@@Base+0x2dac>
   26590:	mov	w0, #0x3c8                 	// #968
   26594:	bl	a540 <malloc@plt>
   26598:	cbz	x0, 265b4 <rpl_re_set_registers@@Base+0x3464>
   2659c:	ldr	x9, [x23, #112]
   265a0:	mov	w8, wzr
   265a4:	str	x9, [x0]
   265a8:	str	x0, [x23, #112]
   265ac:	str	wzr, [x23, #128]
   265b0:	b	26114 <rpl_re_set_registers@@Base+0x2fc4>
   265b4:	mov	w8, #0xc                   	// #12
   265b8:	str	w8, [x28]
   265bc:	b	262c8 <rpl_re_set_registers@@Base+0x3178>
   265c0:	mov	x0, x22
   265c4:	bl	a960 <free@plt>
   265c8:	ldr	x0, [sp]
   265cc:	bl	a960 <free@plt>
   265d0:	mov	w0, #0xc                   	// #12
   265d4:	b	262c0 <rpl_re_set_registers@@Base+0x3170>
   265d8:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   265dc:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   265e0:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   265e4:	add	x0, x0, #0x980
   265e8:	add	x1, x1, #0x6ec
   265ec:	add	x3, x3, #0x6f8
   265f0:	mov	w2, #0xced                 	// #3309
   265f4:	bl	ad70 <__assert_fail@plt>
   265f8:	sub	sp, sp, #0x60
   265fc:	stp	x26, x25, [sp, #32]
   26600:	stp	x20, x19, [sp, #80]
   26604:	mov	x26, x1
   26608:	mov	x20, x0
   2660c:	mov	w0, #0x20                  	// #32
   26610:	mov	w1, #0x1                   	// #1
   26614:	stp	x29, x30, [sp, #16]
   26618:	stp	x24, x23, [sp, #48]
   2661c:	stp	x22, x21, [sp, #64]
   26620:	add	x29, sp, #0x10
   26624:	mov	x21, x5
   26628:	mov	w23, w4
   2662c:	mov	x24, x3
   26630:	mov	x25, x2
   26634:	str	xzr, [sp, #8]
   26638:	bl	a6b0 <calloc@plt>
   2663c:	cbz	x0, 268f8 <rpl_re_set_registers@@Base+0x37a8>
   26640:	mov	x22, x0
   26644:	mov	w0, #0x50                  	// #80
   26648:	mov	w1, #0x1                   	// #1
   2664c:	bl	a6b0 <calloc@plt>
   26650:	cbz	x0, 26838 <rpl_re_set_registers@@Base+0x36e8>
   26654:	mov	x19, x0
   26658:	and	w8, w23, #0x1
   2665c:	strb	w8, [x0, #32]
   26660:	add	x3, sp, #0x8
   26664:	mov	x0, x26
   26668:	mov	x1, x22
   2666c:	mov	x2, x19
   26670:	mov	x4, x25
   26674:	mov	x5, xzr
   26678:	bl	26d38 <rpl_re_set_registers@@Base+0x3be8>
   2667c:	cbnz	w0, 26840 <rpl_re_set_registers@@Base+0x36f0>
   26680:	ldrb	w8, [x24]
   26684:	cbz	w8, 266b0 <rpl_re_set_registers@@Base+0x3560>
   26688:	add	x9, x24, #0x1
   2668c:	mov	w10, #0x1                   	// #1
   26690:	lsr	w11, w8, #3
   26694:	and	x11, x11, #0x18
   26698:	ldr	x12, [x22, x11]
   2669c:	lsl	x8, x10, x8
   266a0:	orr	x8, x12, x8
   266a4:	str	x8, [x22, x11]
   266a8:	ldrb	w8, [x9], #1
   266ac:	cbnz	w8, 26690 <rpl_re_set_registers@@Base+0x3540>
   266b0:	tbz	w23, #0, 266c4 <rpl_re_set_registers@@Base+0x3574>
   266b4:	ldp	q0, q1, [x22]
   266b8:	mvn	v0.16b, v0.16b
   266bc:	mvn	v1.16b, v1.16b
   266c0:	stp	q0, q1, [x22]
   266c4:	ldr	w8, [x20, #180]
   266c8:	cmp	w8, #0x2
   266cc:	b.lt	2670c <rpl_re_set_registers@@Base+0x35bc>  // b.tstop
   266d0:	ldr	x8, [x20, #120]
   266d4:	ldp	x10, x11, [x22]
   266d8:	ldr	x9, [x8]
   266dc:	and	x9, x10, x9
   266e0:	str	x9, [x22]
   266e4:	ldr	x9, [x8, #8]
   266e8:	and	x9, x11, x9
   266ec:	str	x9, [x22, #8]
   266f0:	ldr	x9, [x8, #16]
   266f4:	ldp	x10, x11, [x22, #16]
   266f8:	and	x9, x10, x9
   266fc:	str	x9, [x22, #16]
   26700:	ldr	x8, [x8, #24]
   26704:	and	x8, x11, x8
   26708:	str	x8, [x22, #24]
   2670c:	ldr	w8, [x20, #128]
   26710:	cmp	w8, #0xf
   26714:	b.eq	26880 <rpl_re_set_registers@@Base+0x3730>  // b.none
   26718:	ldr	x0, [x20, #112]
   2671c:	add	w9, w8, #0x1
   26720:	sxtw	x8, w8
   26724:	add	x23, x0, x8, lsl #6
   26728:	str	w9, [x20, #128]
   2672c:	mov	w9, #0x3                   	// #3
   26730:	mov	x8, #0xffffffffffffffff    	// #-1
   26734:	str	xzr, [x23, #8]!
   26738:	stp	xzr, xzr, [x23, #16]
   2673c:	str	xzr, [x23, #8]
   26740:	str	w9, [x23, #48]
   26744:	stp	xzr, x22, [x23, #32]
   26748:	str	x8, [x23, #56]
   2674c:	ldr	w8, [x20, #180]
   26750:	cmp	w8, #0x2
   26754:	b.lt	267f0 <rpl_re_set_registers@@Base+0x36a0>  // b.tstop
   26758:	ldrb	w9, [x20, #176]
   2675c:	ldr	w8, [x20, #128]
   26760:	orr	w9, w9, #0x2
   26764:	cmp	w8, #0xf
   26768:	strb	w9, [x20, #176]
   2676c:	b.eq	268a4 <rpl_re_set_registers@@Base+0x3754>  // b.none
   26770:	ldr	x0, [x20, #112]
   26774:	add	w9, w8, #0x1
   26778:	sxtw	x8, w8
   2677c:	add	x21, x0, x8, lsl #6
   26780:	str	w9, [x20, #128]
   26784:	mov	w9, #0x6                   	// #6
   26788:	mov	x8, #0xffffffffffffffff    	// #-1
   2678c:	str	xzr, [x21, #8]!
   26790:	stp	xzr, xzr, [x21, #16]
   26794:	str	xzr, [x21, #8]
   26798:	str	w9, [x21, #48]
   2679c:	stp	xzr, x19, [x21, #32]
   267a0:	str	x8, [x21, #56]
   267a4:	ldr	w8, [x20, #128]
   267a8:	cmp	w8, #0xf
   267ac:	b.eq	26908 <rpl_re_set_registers@@Base+0x37b8>  // b.none
   267b0:	ldr	x0, [x20, #112]
   267b4:	add	w9, w8, #0x1
   267b8:	sxtw	x8, w8
   267bc:	add	x8, x0, x8, lsl #6
   267c0:	str	w9, [x20, #128]
   267c4:	mov	w9, #0xa                   	// #10
   267c8:	mov	x10, #0xffffffffffffffff    	// #-1
   267cc:	str	xzr, [x8, #8]!
   267d0:	stp	x23, x21, [x8, #8]
   267d4:	str	w9, [x8, #48]
   267d8:	stp	xzr, xzr, [x8, #24]
   267dc:	str	x10, [x8, #56]
   267e0:	str	x8, [x23]
   267e4:	str	x8, [x21]
   267e8:	mov	x23, x8
   267ec:	b	26818 <rpl_re_set_registers@@Base+0x36c8>
   267f0:	ldr	x0, [x19]
   267f4:	bl	a960 <free@plt>
   267f8:	ldr	x0, [x19, #8]
   267fc:	bl	a960 <free@plt>
   26800:	ldr	x0, [x19, #16]
   26804:	bl	a960 <free@plt>
   26808:	ldr	x0, [x19, #24]
   2680c:	bl	a960 <free@plt>
   26810:	mov	x0, x19
   26814:	bl	a960 <free@plt>
   26818:	mov	x0, x23
   2681c:	ldp	x20, x19, [sp, #80]
   26820:	ldp	x22, x21, [sp, #64]
   26824:	ldp	x24, x23, [sp, #48]
   26828:	ldp	x26, x25, [sp, #32]
   2682c:	ldp	x29, x30, [sp, #16]
   26830:	add	sp, sp, #0x60
   26834:	ret
   26838:	mov	x0, x22
   2683c:	b	268f4 <rpl_re_set_registers@@Base+0x37a4>
   26840:	mov	w25, w0
   26844:	mov	x0, x22
   26848:	bl	a960 <free@plt>
   2684c:	ldr	x0, [x19]
   26850:	bl	a960 <free@plt>
   26854:	ldr	x0, [x19, #8]
   26858:	bl	a960 <free@plt>
   2685c:	ldr	x0, [x19, #16]
   26860:	bl	a960 <free@plt>
   26864:	ldr	x0, [x19, #24]
   26868:	bl	a960 <free@plt>
   2686c:	mov	x0, x19
   26870:	bl	a960 <free@plt>
   26874:	mov	x23, xzr
   26878:	str	w25, [x21]
   2687c:	b	26818 <rpl_re_set_registers@@Base+0x36c8>
   26880:	mov	w0, #0x3c8                 	// #968
   26884:	bl	a540 <malloc@plt>
   26888:	cbz	x0, 268c8 <rpl_re_set_registers@@Base+0x3778>
   2688c:	ldr	x9, [x20, #112]
   26890:	mov	w8, wzr
   26894:	str	x9, [x0]
   26898:	str	x0, [x20, #112]
   2689c:	str	wzr, [x20, #128]
   268a0:	b	2671c <rpl_re_set_registers@@Base+0x35cc>
   268a4:	mov	w0, #0x3c8                 	// #968
   268a8:	bl	a540 <malloc@plt>
   268ac:	cbz	x0, 268c8 <rpl_re_set_registers@@Base+0x3778>
   268b0:	ldr	x9, [x20, #112]
   268b4:	mov	w8, wzr
   268b8:	str	x9, [x0]
   268bc:	str	x0, [x20, #112]
   268c0:	str	wzr, [x20, #128]
   268c4:	b	26774 <rpl_re_set_registers@@Base+0x3624>
   268c8:	mov	x0, x22
   268cc:	bl	a960 <free@plt>
   268d0:	ldr	x0, [x19]
   268d4:	bl	a960 <free@plt>
   268d8:	ldr	x0, [x19, #8]
   268dc:	bl	a960 <free@plt>
   268e0:	ldr	x0, [x19, #16]
   268e4:	bl	a960 <free@plt>
   268e8:	ldr	x0, [x19, #24]
   268ec:	bl	a960 <free@plt>
   268f0:	mov	x0, x19
   268f4:	bl	a960 <free@plt>
   268f8:	mov	x23, xzr
   268fc:	mov	w8, #0xc                   	// #12
   26900:	str	w8, [x21]
   26904:	b	26818 <rpl_re_set_registers@@Base+0x36c8>
   26908:	mov	w0, #0x3c8                 	// #968
   2690c:	bl	a540 <malloc@plt>
   26910:	cbz	x0, 2692c <rpl_re_set_registers@@Base+0x37dc>
   26914:	ldr	x9, [x20, #112]
   26918:	mov	w8, wzr
   2691c:	str	x9, [x0]
   26920:	str	x0, [x20, #112]
   26924:	str	wzr, [x20, #128]
   26928:	b	267b4 <rpl_re_set_registers@@Base+0x3664>
   2692c:	mov	x23, xzr
   26930:	b	26818 <rpl_re_set_registers@@Base+0x36c8>
   26934:	ldr	x9, [x1, #104]
   26938:	ldr	x8, [x1, #72]
   2693c:	cmp	x9, x8
   26940:	b.le	269b4 <rpl_re_set_registers@@Base+0x3864>
   26944:	ldr	x9, [x1, #8]
   26948:	ldrb	w8, [x9, x8]
   2694c:	strb	w8, [x0]
   26950:	ldr	w9, [x1, #144]
   26954:	cmp	w9, #0x2
   26958:	b.lt	2697c <rpl_re_set_registers@@Base+0x382c>  // b.tstop
   2695c:	ldr	x9, [x1, #72]
   26960:	ldr	x10, [x1, #48]
   26964:	cmp	x9, x10
   26968:	b.eq	2697c <rpl_re_set_registers@@Base+0x382c>  // b.none
   2696c:	ldr	x10, [x1, #16]
   26970:	ldr	w9, [x10, x9, lsl #2]
   26974:	cmn	w9, #0x1
   26978:	b.eq	26a34 <rpl_re_set_registers@@Base+0x38e4>  // b.none
   2697c:	tbz	w2, #0, 269c4 <rpl_re_set_registers@@Base+0x3874>
   26980:	cmp	w8, #0x5c
   26984:	b.ne	269c4 <rpl_re_set_registers@@Base+0x3874>  // b.any
   26988:	ldr	x8, [x1, #72]
   2698c:	ldr	x9, [x1, #88]
   26990:	add	x8, x8, #0x1
   26994:	cmp	x8, x9
   26998:	b.ge	26a34 <rpl_re_set_registers@@Base+0x38e4>  // b.tcont
   2699c:	ldr	x9, [x1, #8]
   269a0:	str	x8, [x1, #72]
   269a4:	ldrb	w9, [x9, x8]
   269a8:	mov	w8, #0x1                   	// #1
   269ac:	strb	w9, [x0]
   269b0:	b	26a38 <rpl_re_set_registers@@Base+0x38e8>
   269b4:	mov	w9, #0x2                   	// #2
   269b8:	strb	w9, [x0, #8]
   269bc:	mov	w0, wzr
   269c0:	ret
   269c4:	cmp	w8, #0x5c
   269c8:	b.gt	26a1c <rpl_re_set_registers@@Base+0x38cc>
   269cc:	cmp	w8, #0x2d
   269d0:	b.eq	26a44 <rpl_re_set_registers@@Base+0x38f4>  // b.none
   269d4:	cmp	w8, #0x5b
   269d8:	b.ne	26a34 <rpl_re_set_registers@@Base+0x38e4>  // b.any
   269dc:	ldr	x8, [x1, #72]
   269e0:	ldr	x9, [x1, #88]
   269e4:	add	x8, x8, #0x1
   269e8:	cmp	x8, x9
   269ec:	b.ge	26a5c <rpl_re_set_registers@@Base+0x390c>  // b.tcont
   269f0:	ldr	x9, [x1, #8]
   269f4:	ldrb	w8, [x9, x8]
   269f8:	cmp	w8, #0x3d
   269fc:	strb	w8, [x0]
   26a00:	b.eq	26a78 <rpl_re_set_registers@@Base+0x3928>  // b.none
   26a04:	cmp	w8, #0x3a
   26a08:	b.eq	26a80 <rpl_re_set_registers@@Base+0x3930>  // b.none
   26a0c:	cmp	w8, #0x2e
   26a10:	b.ne	26a60 <rpl_re_set_registers@@Base+0x3910>  // b.any
   26a14:	mov	w8, #0x1a                  	// #26
   26a18:	b	26a88 <rpl_re_set_registers@@Base+0x3938>
   26a1c:	cmp	w8, #0x5d
   26a20:	b.eq	26a4c <rpl_re_set_registers@@Base+0x38fc>  // b.none
   26a24:	cmp	w8, #0x5e
   26a28:	b.ne	26a34 <rpl_re_set_registers@@Base+0x38e4>  // b.any
   26a2c:	mov	w8, #0x19                  	// #25
   26a30:	b	26a50 <rpl_re_set_registers@@Base+0x3900>
   26a34:	mov	w8, #0x1                   	// #1
   26a38:	strb	w8, [x0, #8]
   26a3c:	mov	w0, w8
   26a40:	ret
   26a44:	mov	w8, #0x16                  	// #22
   26a48:	b	26a50 <rpl_re_set_registers@@Base+0x3900>
   26a4c:	mov	w8, #0x15                  	// #21
   26a50:	strb	w8, [x0, #8]
   26a54:	mov	w0, #0x1                   	// #1
   26a58:	ret
   26a5c:	strb	wzr, [x0]
   26a60:	mov	w8, #0x1                   	// #1
   26a64:	mov	w9, #0x5b                  	// #91
   26a68:	strb	w8, [x0, #8]
   26a6c:	strb	w9, [x0]
   26a70:	mov	w0, w8
   26a74:	ret
   26a78:	mov	w8, #0x1c                  	// #28
   26a7c:	b	26a88 <rpl_re_set_registers@@Base+0x3938>
   26a80:	tbz	w2, #2, 26a60 <rpl_re_set_registers@@Base+0x3910>
   26a84:	mov	w8, #0x1e                  	// #30
   26a88:	strb	w8, [x0, #8]
   26a8c:	mov	w0, #0x2                   	// #2
   26a90:	ret
   26a94:	sub	sp, sp, #0x30
   26a98:	stp	x29, x30, [sp, #32]
   26a9c:	ldr	w8, [x1, #144]
   26aa0:	ldr	x9, [x1, #72]
   26aa4:	add	x29, sp, #0x20
   26aa8:	cmp	w8, #0x1
   26aac:	b.eq	26b1c <rpl_re_set_registers@@Base+0x39cc>  // b.none
   26ab0:	ldr	x8, [x1, #48]
   26ab4:	add	x10, x9, #0x1
   26ab8:	cmp	x10, x8
   26abc:	b.ge	26b1c <rpl_re_set_registers@@Base+0x39cc>  // b.tcont
   26ac0:	ldr	x10, [x1, #16]
   26ac4:	sub	x8, x8, x9
   26ac8:	mov	w11, #0x1                   	// #1
   26acc:	add	x12, x10, x9, lsl #2
   26ad0:	ldr	w13, [x12, x11, lsl #2]
   26ad4:	cmn	w13, #0x1
   26ad8:	b.ne	26af0 <rpl_re_set_registers@@Base+0x39a0>  // b.any
   26adc:	add	x11, x11, #0x1
   26ae0:	cmp	x8, x11
   26ae4:	b.ne	26ad0 <rpl_re_set_registers@@Base+0x3980>  // b.any
   26ae8:	mov	x11, x8
   26aec:	b	26af8 <rpl_re_set_registers@@Base+0x39a8>
   26af0:	cmp	w11, #0x2
   26af4:	b.lt	26b1c <rpl_re_set_registers@@Base+0x39cc>  // b.tstop
   26af8:	mov	w12, #0x1                   	// #1
   26afc:	str	w12, [x0]
   26b00:	ldr	w9, [x10, x9, lsl #2]
   26b04:	mov	w8, wzr
   26b08:	str	w9, [x0, #8]
   26b0c:	ldr	x9, [x1, #72]
   26b10:	add	x9, x9, w11, sxtw
   26b14:	str	x9, [x1, #72]
   26b18:	b	26d20 <rpl_re_set_registers@@Base+0x3bd0>
   26b1c:	add	x8, x9, w3, sxtw
   26b20:	str	x8, [x1, #72]
   26b24:	ldrb	w10, [x2, #8]
   26b28:	sub	w9, w10, #0x16
   26b2c:	cmp	w9, #0x8
   26b30:	b.hi	26d10 <rpl_re_set_registers@@Base+0x3bc0>  // b.pmore
   26b34:	adrp	x11, 31000 <vasnprintf@@Base+0x324c>
   26b38:	add	x11, x11, #0x480
   26b3c:	adr	x12, 26b4c <rpl_re_set_registers@@Base+0x39fc>
   26b40:	ldrb	w13, [x11, x9]
   26b44:	add	x12, x12, x13, lsl #2
   26b48:	br	x12
   26b4c:	ldr	x9, [x1, #104]
   26b50:	cmp	x9, x8
   26b54:	b.le	26c94 <rpl_re_set_registers@@Base+0x3b44>
   26b58:	ldrb	w9, [x2]
   26b5c:	mov	x8, xzr
   26b60:	and	w10, w10, #0xff
   26b64:	cmp	w10, #0x1e
   26b68:	b.ne	26b74 <rpl_re_set_registers@@Base+0x3a24>  // b.any
   26b6c:	ldrb	w10, [x1, #139]
   26b70:	cbnz	w10, 26bc8 <rpl_re_set_registers@@Base+0x3a78>
   26b74:	ldr	x10, [x1, #72]
   26b78:	ldr	x11, [x1, #8]
   26b7c:	add	x12, x10, #0x1
   26b80:	str	x12, [x1, #72]
   26b84:	ldrb	w10, [x11, x10]
   26b88:	ldr	x11, [x1, #104]
   26b8c:	cmp	x11, x12
   26b90:	b.le	26c94 <rpl_re_set_registers@@Base+0x3b44>
   26b94:	cmp	w9, w10, uxtb
   26b98:	b.ne	26bac <rpl_re_set_registers@@Base+0x3a5c>  // b.any
   26b9c:	ldr	x11, [x1, #8]
   26ba0:	ldrb	w11, [x11, x12]
   26ba4:	cmp	w11, #0x5d
   26ba8:	b.eq	26c9c <rpl_re_set_registers@@Base+0x3b4c>  // b.none
   26bac:	ldr	x11, [x0, #8]
   26bb0:	strb	w10, [x11, x8]
   26bb4:	add	x8, x8, #0x1
   26bb8:	cmp	x8, #0x20
   26bbc:	b.eq	26c94 <rpl_re_set_registers@@Base+0x3b44>  // b.none
   26bc0:	ldrb	w10, [x2, #8]
   26bc4:	b	26b60 <rpl_re_set_registers@@Base+0x3a10>
   26bc8:	ldrb	w10, [x1, #140]
   26bcc:	cbz	w10, 26c50 <rpl_re_set_registers@@Base+0x3b00>
   26bd0:	ldr	x11, [x1, #72]
   26bd4:	ldr	x13, [x1, #48]
   26bd8:	subs	x12, x13, x11
   26bdc:	b.eq	26bf0 <rpl_re_set_registers@@Base+0x3aa0>  // b.none
   26be0:	ldr	x10, [x1, #16]
   26be4:	ldr	w10, [x10, x11, lsl #2]
   26be8:	cmn	w10, #0x1
   26bec:	b.eq	26c70 <rpl_re_set_registers@@Base+0x3b20>  // b.none
   26bf0:	ldr	x10, [x1, #24]
   26bf4:	ldr	x14, [x1, #40]
   26bf8:	ldr	x15, [x1]
   26bfc:	ldr	x10, [x10, x11, lsl #3]
   26c00:	add	x10, x14, x10
   26c04:	ldrsb	w10, [x15, x10]
   26c08:	tbnz	w10, #31, 26c70 <rpl_re_set_registers@@Base+0x3b20>
   26c0c:	ldr	w14, [x1, #144]
   26c10:	cmp	w14, #0x1
   26c14:	b.eq	26c84 <rpl_re_set_registers@@Base+0x3b34>  // b.none
   26c18:	add	x14, x11, #0x1
   26c1c:	cmp	x14, x13
   26c20:	b.ge	26c84 <rpl_re_set_registers@@Base+0x3b34>  // b.tcont
   26c24:	ldr	x13, [x1, #16]
   26c28:	add	x14, x13, x11, lsl #2
   26c2c:	mov	w13, #0x1                   	// #1
   26c30:	ldr	w15, [x14, x13, lsl #2]
   26c34:	cmn	w15, #0x1
   26c38:	b.ne	26c88 <rpl_re_set_registers@@Base+0x3b38>  // b.any
   26c3c:	add	x13, x13, #0x1
   26c40:	cmp	x12, x13
   26c44:	b.ne	26c30 <rpl_re_set_registers@@Base+0x3ae0>  // b.any
   26c48:	mov	x13, x12
   26c4c:	b	26c88 <rpl_re_set_registers@@Base+0x3b38>
   26c50:	ldr	x10, [x1, #72]
   26c54:	ldr	x11, [x1, #40]
   26c58:	ldr	x13, [x1]
   26c5c:	add	x12, x10, #0x1
   26c60:	str	x12, [x1, #72]
   26c64:	add	x10, x10, x11
   26c68:	ldrb	w10, [x13, x10]
   26c6c:	b	26b88 <rpl_re_set_registers@@Base+0x3a38>
   26c70:	ldr	x10, [x1, #8]
   26c74:	add	x12, x11, #0x1
   26c78:	str	x12, [x1, #72]
   26c7c:	ldrb	w10, [x10, x11]
   26c80:	b	26b88 <rpl_re_set_registers@@Base+0x3a38>
   26c84:	mov	w13, #0x1                   	// #1
   26c88:	add	x12, x11, w13, sxtw
   26c8c:	str	x12, [x1, #72]
   26c90:	b	26b88 <rpl_re_set_registers@@Base+0x3a38>
   26c94:	mov	w8, #0x7                   	// #7
   26c98:	b	26d20 <rpl_re_set_registers@@Base+0x3bd0>
   26c9c:	add	x9, x12, #0x1
   26ca0:	str	x9, [x1, #72]
   26ca4:	ldr	x9, [x0, #8]
   26ca8:	strb	wzr, [x9, w8, uxtw]
   26cac:	ldrb	w8, [x2, #8]
   26cb0:	cmp	w8, #0x1e
   26cb4:	b.eq	26cd4 <rpl_re_set_registers@@Base+0x3b84>  // b.none
   26cb8:	cmp	w8, #0x1c
   26cbc:	b.eq	26cdc <rpl_re_set_registers@@Base+0x3b8c>  // b.none
   26cc0:	cmp	w8, #0x1a
   26cc4:	mov	w8, wzr
   26cc8:	b.ne	26d20 <rpl_re_set_registers@@Base+0x3bd0>  // b.any
   26ccc:	mov	w9, #0x3                   	// #3
   26cd0:	b	26ce0 <rpl_re_set_registers@@Base+0x3b90>
   26cd4:	mov	w9, #0x4                   	// #4
   26cd8:	b	26ce0 <rpl_re_set_registers@@Base+0x3b90>
   26cdc:	mov	w9, #0x2                   	// #2
   26ce0:	mov	w8, wzr
   26ce4:	str	w9, [x0]
   26ce8:	b	26d20 <rpl_re_set_registers@@Base+0x3bd0>
   26cec:	tbnz	w5, #0, 26d10 <rpl_re_set_registers@@Base+0x3bc0>
   26cf0:	stp	x2, x0, [sp]
   26cf4:	add	x0, sp, #0x10
   26cf8:	mov	x2, x4
   26cfc:	bl	26934 <rpl_re_set_registers@@Base+0x37e4>
   26d00:	ldrb	w8, [sp, #24]
   26d04:	ldp	x2, x0, [sp]
   26d08:	cmp	w8, #0x15
   26d0c:	b.ne	26d30 <rpl_re_set_registers@@Base+0x3be0>  // b.any
   26d10:	str	wzr, [x0]
   26d14:	ldrb	w9, [x2]
   26d18:	mov	w8, wzr
   26d1c:	strb	w9, [x0, #8]
   26d20:	ldp	x29, x30, [sp, #32]
   26d24:	mov	w0, w8
   26d28:	add	sp, sp, #0x30
   26d2c:	ret
   26d30:	mov	w8, #0xb                   	// #11
   26d34:	b	26d20 <rpl_re_set_registers@@Base+0x3bd0>
   26d38:	stp	x29, x30, [sp, #-64]!
   26d3c:	stp	x24, x23, [sp, #16]
   26d40:	stp	x22, x21, [sp, #32]
   26d44:	stp	x20, x19, [sp, #48]
   26d48:	mov	x21, x4
   26d4c:	mov	x23, x3
   26d50:	mov	x22, x2
   26d54:	mov	x19, x1
   26d58:	mov	x20, x0
   26d5c:	mov	x29, sp
   26d60:	tbz	w5, #22, 26d94 <rpl_re_set_registers@@Base+0x3c44>
   26d64:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26d68:	add	x1, x1, #0x75e
   26d6c:	mov	x0, x21
   26d70:	bl	a8e0 <strcmp@plt>
   26d74:	cbz	w0, 26d8c <rpl_re_set_registers@@Base+0x3c3c>
   26d78:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26d7c:	add	x1, x1, #0x764
   26d80:	mov	x0, x21
   26d84:	bl	a8e0 <strcmp@plt>
   26d88:	cbnz	w0, 26d94 <rpl_re_set_registers@@Base+0x3c44>
   26d8c:	adrp	x21, 31000 <vasnprintf@@Base+0x324c>
   26d90:	add	x21, x21, #0x76a
   26d94:	ldr	x8, [x23]
   26d98:	ldr	x9, [x22, #72]
   26d9c:	cmp	x8, x9
   26da0:	b.eq	27398 <rpl_re_set_registers@@Base+0x4248>  // b.none
   26da4:	mov	x0, x21
   26da8:	bl	a300 <wctype@plt>
   26dac:	ldr	x8, [x22, #72]
   26db0:	ldr	x9, [x22, #24]
   26db4:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26db8:	add	x1, x1, #0x6e0
   26dbc:	add	x10, x8, #0x1
   26dc0:	str	x10, [x22, #72]
   26dc4:	str	x0, [x9, x8, lsl #3]
   26dc8:	mov	x0, x21
   26dcc:	bl	a8e0 <strcmp@plt>
   26dd0:	cbz	w0, 26eb8 <rpl_re_set_registers@@Base+0x3d68>
   26dd4:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26dd8:	add	x1, x1, #0x770
   26ddc:	mov	x0, x21
   26de0:	bl	a8e0 <strcmp@plt>
   26de4:	cbz	w0, 26f00 <rpl_re_set_registers@@Base+0x3db0>
   26de8:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26dec:	add	x1, x1, #0x764
   26df0:	mov	x0, x21
   26df4:	bl	a8e0 <strcmp@plt>
   26df8:	cbz	w0, 26f48 <rpl_re_set_registers@@Base+0x3df8>
   26dfc:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e00:	add	x1, x1, #0x6e6
   26e04:	mov	x0, x21
   26e08:	bl	a8e0 <strcmp@plt>
   26e0c:	cbz	w0, 26f90 <rpl_re_set_registers@@Base+0x3e40>
   26e10:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e14:	add	x1, x1, #0x76a
   26e18:	mov	x0, x21
   26e1c:	bl	a8e0 <strcmp@plt>
   26e20:	cbz	w0, 26fd8 <rpl_re_set_registers@@Base+0x3e88>
   26e24:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e28:	add	x1, x1, #0x78f
   26e2c:	mov	x0, x21
   26e30:	bl	a8e0 <strcmp@plt>
   26e34:	cbz	w0, 27020 <rpl_re_set_registers@@Base+0x3ed0>
   26e38:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e3c:	add	x1, x1, #0x776
   26e40:	mov	x0, x21
   26e44:	bl	a8e0 <strcmp@plt>
   26e48:	cbz	w0, 27080 <rpl_re_set_registers@@Base+0x3f30>
   26e4c:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e50:	add	x1, x1, #0x75e
   26e54:	mov	x0, x21
   26e58:	bl	a8e0 <strcmp@plt>
   26e5c:	cbz	w0, 270cc <rpl_re_set_registers@@Base+0x3f7c>
   26e60:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e64:	add	x1, x1, #0x77c
   26e68:	mov	x0, x21
   26e6c:	bl	a8e0 <strcmp@plt>
   26e70:	cbz	w0, 27118 <rpl_re_set_registers@@Base+0x3fc8>
   26e74:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e78:	add	x1, x1, #0x782
   26e7c:	mov	x0, x21
   26e80:	bl	a8e0 <strcmp@plt>
   26e84:	cbz	w0, 2719c <rpl_re_set_registers@@Base+0x404c>
   26e88:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26e8c:	add	x1, x1, #0x788
   26e90:	mov	x0, x21
   26e94:	bl	a8e0 <strcmp@plt>
   26e98:	cbz	w0, 27220 <rpl_re_set_registers@@Base+0x40d0>
   26e9c:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   26ea0:	add	x1, x1, #0x78e
   26ea4:	mov	x0, x21
   26ea8:	bl	a8e0 <strcmp@plt>
   26eac:	cbz	w0, 272a4 <rpl_re_set_registers@@Base+0x4154>
   26eb0:	mov	w0, #0x4                   	// #4
   26eb4:	b	2706c <rpl_re_set_registers@@Base+0x3f1c>
   26eb8:	bl	a900 <__ctype_b_loc@plt>
   26ebc:	ldr	x8, [x0]
   26ec0:	mov	x9, xzr
   26ec4:	mov	w10, #0x1                   	// #1
   26ec8:	cbz	x20, 26edc <rpl_re_set_registers@@Base+0x3d8c>
   26ecc:	b	27174 <rpl_re_set_registers@@Base+0x4024>
   26ed0:	add	x9, x9, #0x1
   26ed4:	cmp	x9, #0x100
   26ed8:	b.eq	27068 <rpl_re_set_registers@@Base+0x3f18>  // b.none
   26edc:	ldrh	w11, [x8, x9, lsl #1]
   26ee0:	tbz	w11, #3, 26ed0 <rpl_re_set_registers@@Base+0x3d80>
   26ee4:	ubfx	x11, x9, #6, #2
   26ee8:	lsl	x11, x11, #3
   26eec:	ldr	x12, [x19, x11]
   26ef0:	lsl	x13, x10, x9
   26ef4:	orr	x12, x12, x13
   26ef8:	str	x12, [x19, x11]
   26efc:	b	26ed0 <rpl_re_set_registers@@Base+0x3d80>
   26f00:	bl	a900 <__ctype_b_loc@plt>
   26f04:	ldr	x8, [x0]
   26f08:	mov	x9, xzr
   26f0c:	mov	w10, #0x1                   	// #1
   26f10:	cbz	x20, 26f24 <rpl_re_set_registers@@Base+0x3dd4>
   26f14:	b	271f8 <rpl_re_set_registers@@Base+0x40a8>
   26f18:	add	x9, x9, #0x1
   26f1c:	cmp	x9, #0x100
   26f20:	b.eq	27068 <rpl_re_set_registers@@Base+0x3f18>  // b.none
   26f24:	ldrh	w11, [x8, x9, lsl #1]
   26f28:	tbz	w11, #1, 26f18 <rpl_re_set_registers@@Base+0x3dc8>
   26f2c:	ubfx	x11, x9, #6, #2
   26f30:	lsl	x11, x11, #3
   26f34:	ldr	x12, [x19, x11]
   26f38:	lsl	x13, x10, x9
   26f3c:	orr	x12, x12, x13
   26f40:	str	x12, [x19, x11]
   26f44:	b	26f18 <rpl_re_set_registers@@Base+0x3dc8>
   26f48:	bl	a900 <__ctype_b_loc@plt>
   26f4c:	ldr	x8, [x0]
   26f50:	mov	x9, xzr
   26f54:	mov	w10, #0x1                   	// #1
   26f58:	cbz	x20, 26f6c <rpl_re_set_registers@@Base+0x3e1c>
   26f5c:	b	2727c <rpl_re_set_registers@@Base+0x412c>
   26f60:	add	x9, x9, #0x1
   26f64:	cmp	x9, #0x100
   26f68:	b.eq	27068 <rpl_re_set_registers@@Base+0x3f18>  // b.none
   26f6c:	ldrh	w11, [x8, x9, lsl #1]
   26f70:	tbz	w11, #9, 26f60 <rpl_re_set_registers@@Base+0x3e10>
   26f74:	ubfx	x11, x9, #6, #2
   26f78:	lsl	x11, x11, #3
   26f7c:	ldr	x12, [x19, x11]
   26f80:	lsl	x13, x10, x9
   26f84:	orr	x12, x12, x13
   26f88:	str	x12, [x19, x11]
   26f8c:	b	26f60 <rpl_re_set_registers@@Base+0x3e10>
   26f90:	bl	a900 <__ctype_b_loc@plt>
   26f94:	ldr	x8, [x0]
   26f98:	mov	x9, xzr
   26f9c:	mov	w10, #0x1                   	// #1
   26fa0:	cbz	x20, 26fb4 <rpl_re_set_registers@@Base+0x3e64>
   26fa4:	b	27300 <rpl_re_set_registers@@Base+0x41b0>
   26fa8:	add	x9, x9, #0x1
   26fac:	cmp	x9, #0x100
   26fb0:	b.eq	27068 <rpl_re_set_registers@@Base+0x3f18>  // b.none
   26fb4:	ldrh	w11, [x8, x9, lsl #1]
   26fb8:	tbz	w11, #13, 26fa8 <rpl_re_set_registers@@Base+0x3e58>
   26fbc:	ubfx	x11, x9, #6, #2
   26fc0:	lsl	x11, x11, #3
   26fc4:	ldr	x12, [x19, x11]
   26fc8:	lsl	x13, x10, x9
   26fcc:	orr	x12, x12, x13
   26fd0:	str	x12, [x19, x11]
   26fd4:	b	26fa8 <rpl_re_set_registers@@Base+0x3e58>
   26fd8:	bl	a900 <__ctype_b_loc@plt>
   26fdc:	ldr	x8, [x0]
   26fe0:	mov	x9, xzr
   26fe4:	mov	w10, #0x1                   	// #1
   26fe8:	cbz	x20, 26ffc <rpl_re_set_registers@@Base+0x3eac>
   26fec:	b	27338 <rpl_re_set_registers@@Base+0x41e8>
   26ff0:	add	x9, x9, #0x1
   26ff4:	cmp	x9, #0x100
   26ff8:	b.eq	27068 <rpl_re_set_registers@@Base+0x3f18>  // b.none
   26ffc:	ldrh	w11, [x8, x9, lsl #1]
   27000:	tbz	w11, #10, 26ff0 <rpl_re_set_registers@@Base+0x3ea0>
   27004:	ubfx	x11, x9, #6, #2
   27008:	lsl	x11, x11, #3
   2700c:	ldr	x12, [x19, x11]
   27010:	lsl	x13, x10, x9
   27014:	orr	x12, x12, x13
   27018:	str	x12, [x19, x11]
   2701c:	b	26ff0 <rpl_re_set_registers@@Base+0x3ea0>
   27020:	bl	a900 <__ctype_b_loc@plt>
   27024:	ldr	x8, [x0]
   27028:	mov	x9, xzr
   2702c:	mov	w10, #0x1                   	// #1
   27030:	cbz	x20, 27044 <rpl_re_set_registers@@Base+0x3ef4>
   27034:	b	27370 <rpl_re_set_registers@@Base+0x4220>
   27038:	add	x9, x9, #0x1
   2703c:	cmp	x9, #0x100
   27040:	b.eq	27068 <rpl_re_set_registers@@Base+0x3f18>  // b.none
   27044:	ldrh	w11, [x8, x9, lsl #1]
   27048:	tbz	w11, #11, 27038 <rpl_re_set_registers@@Base+0x3ee8>
   2704c:	ubfx	x11, x9, #6, #2
   27050:	lsl	x11, x11, #3
   27054:	ldr	x12, [x19, x11]
   27058:	lsl	x13, x10, x9
   2705c:	orr	x12, x12, x13
   27060:	str	x12, [x19, x11]
   27064:	b	27038 <rpl_re_set_registers@@Base+0x3ee8>
   27068:	mov	w0, wzr
   2706c:	ldp	x20, x19, [sp, #48]
   27070:	ldp	x22, x21, [sp, #32]
   27074:	ldp	x24, x23, [sp, #16]
   27078:	ldp	x29, x30, [sp], #64
   2707c:	ret
   27080:	bl	a900 <__ctype_b_loc@plt>
   27084:	ldr	x8, [x0]
   27088:	mov	x9, xzr
   2708c:	mov	w10, #0x1                   	// #1
   27090:	cbz	x20, 270a8 <rpl_re_set_registers@@Base+0x3f58>
   27094:	b	273cc <rpl_re_set_registers@@Base+0x427c>
   27098:	add	x9, x9, #0x1
   2709c:	cmp	x9, #0x100
   270a0:	mov	w0, wzr
   270a4:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   270a8:	ldrh	w11, [x8, x9, lsl #1]
   270ac:	tbz	w11, #14, 27098 <rpl_re_set_registers@@Base+0x3f48>
   270b0:	ubfx	x11, x9, #6, #2
   270b4:	lsl	x11, x11, #3
   270b8:	ldr	x12, [x19, x11]
   270bc:	lsl	x13, x10, x9
   270c0:	orr	x12, x12, x13
   270c4:	str	x12, [x19, x11]
   270c8:	b	27098 <rpl_re_set_registers@@Base+0x3f48>
   270cc:	bl	a900 <__ctype_b_loc@plt>
   270d0:	ldr	x8, [x0]
   270d4:	mov	x9, xzr
   270d8:	mov	w10, #0x1                   	// #1
   270dc:	cbz	x20, 270f4 <rpl_re_set_registers@@Base+0x3fa4>
   270e0:	b	27404 <rpl_re_set_registers@@Base+0x42b4>
   270e4:	add	x9, x9, #0x1
   270e8:	cmp	x9, #0x100
   270ec:	mov	w0, wzr
   270f0:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   270f4:	ldrh	w11, [x8, x9, lsl #1]
   270f8:	tbz	w11, #8, 270e4 <rpl_re_set_registers@@Base+0x3f94>
   270fc:	ubfx	x11, x9, #6, #2
   27100:	lsl	x11, x11, #3
   27104:	ldr	x12, [x19, x11]
   27108:	lsl	x13, x10, x9
   2710c:	orr	x12, x12, x13
   27110:	str	x12, [x19, x11]
   27114:	b	270e4 <rpl_re_set_registers@@Base+0x3f94>
   27118:	bl	a900 <__ctype_b_loc@plt>
   2711c:	ldr	x8, [x0]
   27120:	mov	x9, xzr
   27124:	mov	w10, #0x1                   	// #1
   27128:	cbz	x20, 27140 <rpl_re_set_registers@@Base+0x3ff0>
   2712c:	b	2743c <rpl_re_set_registers@@Base+0x42ec>
   27130:	add	x9, x9, #0x1
   27134:	cmp	x9, #0x100
   27138:	mov	w0, wzr
   2713c:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27140:	ldrh	w11, [x8, x9, lsl #1]
   27144:	tbz	w11, #0, 27130 <rpl_re_set_registers@@Base+0x3fe0>
   27148:	ubfx	x11, x9, #6, #2
   2714c:	lsl	x11, x11, #3
   27150:	ldr	x12, [x19, x11]
   27154:	lsl	x13, x10, x9
   27158:	orr	x12, x12, x13
   2715c:	str	x12, [x19, x11]
   27160:	b	27130 <rpl_re_set_registers@@Base+0x3fe0>
   27164:	add	x9, x9, #0x1
   27168:	cmp	x9, #0x100
   2716c:	mov	w0, wzr
   27170:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27174:	ldrh	w11, [x8, x9, lsl #1]
   27178:	tbz	w11, #3, 27164 <rpl_re_set_registers@@Base+0x4014>
   2717c:	ldrb	w11, [x20, x9]
   27180:	lsr	x12, x11, #3
   27184:	and	x12, x12, #0x18
   27188:	ldr	x13, [x19, x12]
   2718c:	lsl	x11, x10, x11
   27190:	orr	x11, x11, x13
   27194:	str	x11, [x19, x12]
   27198:	b	27164 <rpl_re_set_registers@@Base+0x4014>
   2719c:	bl	a900 <__ctype_b_loc@plt>
   271a0:	ldr	x8, [x0]
   271a4:	mov	x9, xzr
   271a8:	mov	w10, #0x1                   	// #1
   271ac:	cbz	x20, 271c4 <rpl_re_set_registers@@Base+0x4074>
   271b0:	b	27474 <rpl_re_set_registers@@Base+0x4324>
   271b4:	add	x9, x9, #0x1
   271b8:	cmp	x9, #0x100
   271bc:	mov	w0, wzr
   271c0:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   271c4:	ldrsh	w11, [x8, x9, lsl #1]
   271c8:	tbz	w11, #31, 271b4 <rpl_re_set_registers@@Base+0x4064>
   271cc:	ubfx	x11, x9, #6, #2
   271d0:	lsl	x11, x11, #3
   271d4:	ldr	x12, [x19, x11]
   271d8:	lsl	x13, x10, x9
   271dc:	orr	x12, x12, x13
   271e0:	str	x12, [x19, x11]
   271e4:	b	271b4 <rpl_re_set_registers@@Base+0x4064>
   271e8:	add	x9, x9, #0x1
   271ec:	cmp	x9, #0x100
   271f0:	mov	w0, wzr
   271f4:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   271f8:	ldrh	w11, [x8, x9, lsl #1]
   271fc:	tbz	w11, #1, 271e8 <rpl_re_set_registers@@Base+0x4098>
   27200:	ldrb	w11, [x20, x9]
   27204:	lsr	x12, x11, #3
   27208:	and	x12, x12, #0x18
   2720c:	ldr	x13, [x19, x12]
   27210:	lsl	x11, x10, x11
   27214:	orr	x11, x11, x13
   27218:	str	x11, [x19, x12]
   2721c:	b	271e8 <rpl_re_set_registers@@Base+0x4098>
   27220:	bl	a900 <__ctype_b_loc@plt>
   27224:	ldr	x8, [x0]
   27228:	mov	x9, xzr
   2722c:	mov	w10, #0x1                   	// #1
   27230:	cbz	x20, 27248 <rpl_re_set_registers@@Base+0x40f8>
   27234:	b	274ac <rpl_re_set_registers@@Base+0x435c>
   27238:	add	x9, x9, #0x1
   2723c:	cmp	x9, #0x100
   27240:	mov	w0, wzr
   27244:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27248:	ldrh	w11, [x8, x9, lsl #1]
   2724c:	tbz	w11, #2, 27238 <rpl_re_set_registers@@Base+0x40e8>
   27250:	ubfx	x11, x9, #6, #2
   27254:	lsl	x11, x11, #3
   27258:	ldr	x12, [x19, x11]
   2725c:	lsl	x13, x10, x9
   27260:	orr	x12, x12, x13
   27264:	str	x12, [x19, x11]
   27268:	b	27238 <rpl_re_set_registers@@Base+0x40e8>
   2726c:	add	x9, x9, #0x1
   27270:	cmp	x9, #0x100
   27274:	mov	w0, wzr
   27278:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   2727c:	ldrh	w11, [x8, x9, lsl #1]
   27280:	tbz	w11, #9, 2726c <rpl_re_set_registers@@Base+0x411c>
   27284:	ldrb	w11, [x20, x9]
   27288:	lsr	x12, x11, #3
   2728c:	and	x12, x12, #0x18
   27290:	ldr	x13, [x19, x12]
   27294:	lsl	x11, x10, x11
   27298:	orr	x11, x11, x13
   2729c:	str	x11, [x19, x12]
   272a0:	b	2726c <rpl_re_set_registers@@Base+0x411c>
   272a4:	bl	a900 <__ctype_b_loc@plt>
   272a8:	ldr	x8, [x0]
   272ac:	mov	x9, xzr
   272b0:	mov	w10, #0x1                   	// #1
   272b4:	cbz	x20, 272cc <rpl_re_set_registers@@Base+0x417c>
   272b8:	b	274e4 <rpl_re_set_registers@@Base+0x4394>
   272bc:	add	x9, x9, #0x1
   272c0:	cmp	x9, #0x100
   272c4:	mov	w0, wzr
   272c8:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   272cc:	ldrh	w11, [x8, x9, lsl #1]
   272d0:	tbz	w11, #12, 272bc <rpl_re_set_registers@@Base+0x416c>
   272d4:	ubfx	x11, x9, #6, #2
   272d8:	lsl	x11, x11, #3
   272dc:	ldr	x12, [x19, x11]
   272e0:	lsl	x13, x10, x9
   272e4:	orr	x12, x12, x13
   272e8:	str	x12, [x19, x11]
   272ec:	b	272bc <rpl_re_set_registers@@Base+0x416c>
   272f0:	add	x9, x9, #0x1
   272f4:	cmp	x9, #0x100
   272f8:	mov	w0, wzr
   272fc:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27300:	ldrh	w11, [x8, x9, lsl #1]
   27304:	tbz	w11, #13, 272f0 <rpl_re_set_registers@@Base+0x41a0>
   27308:	ldrb	w11, [x20, x9]
   2730c:	lsr	x12, x11, #3
   27310:	and	x12, x12, #0x18
   27314:	ldr	x13, [x19, x12]
   27318:	lsl	x11, x10, x11
   2731c:	orr	x11, x11, x13
   27320:	str	x11, [x19, x12]
   27324:	b	272f0 <rpl_re_set_registers@@Base+0x41a0>
   27328:	add	x9, x9, #0x1
   2732c:	cmp	x9, #0x100
   27330:	mov	w0, wzr
   27334:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27338:	ldrh	w11, [x8, x9, lsl #1]
   2733c:	tbz	w11, #10, 27328 <rpl_re_set_registers@@Base+0x41d8>
   27340:	ldrb	w11, [x20, x9]
   27344:	lsr	x12, x11, #3
   27348:	and	x12, x12, #0x18
   2734c:	ldr	x13, [x19, x12]
   27350:	lsl	x11, x10, x11
   27354:	orr	x11, x11, x13
   27358:	str	x11, [x19, x12]
   2735c:	b	27328 <rpl_re_set_registers@@Base+0x41d8>
   27360:	add	x9, x9, #0x1
   27364:	cmp	x9, #0x100
   27368:	mov	w0, wzr
   2736c:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27370:	ldrh	w11, [x8, x9, lsl #1]
   27374:	tbz	w11, #11, 27360 <rpl_re_set_registers@@Base+0x4210>
   27378:	ldrb	w11, [x20, x9]
   2737c:	lsr	x12, x11, #3
   27380:	and	x12, x12, #0x18
   27384:	ldr	x13, [x19, x12]
   27388:	lsl	x11, x10, x11
   2738c:	orr	x11, x11, x13
   27390:	str	x11, [x19, x12]
   27394:	b	27360 <rpl_re_set_registers@@Base+0x4210>
   27398:	ldr	x0, [x22, #24]
   2739c:	mov	w24, #0x1                   	// #1
   273a0:	bfi	x24, x8, #1, #63
   273a4:	lsl	x1, x24, #3
   273a8:	bl	a720 <realloc@plt>
   273ac:	cbz	x0, 2750c <rpl_re_set_registers@@Base+0x43bc>
   273b0:	str	x0, [x22, #24]
   273b4:	str	x24, [x23]
   273b8:	b	26da4 <rpl_re_set_registers@@Base+0x3c54>
   273bc:	add	x9, x9, #0x1
   273c0:	cmp	x9, #0x100
   273c4:	mov	w0, wzr
   273c8:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   273cc:	ldrh	w11, [x8, x9, lsl #1]
   273d0:	tbz	w11, #14, 273bc <rpl_re_set_registers@@Base+0x426c>
   273d4:	ldrb	w11, [x20, x9]
   273d8:	lsr	x12, x11, #3
   273dc:	and	x12, x12, #0x18
   273e0:	ldr	x13, [x19, x12]
   273e4:	lsl	x11, x10, x11
   273e8:	orr	x11, x11, x13
   273ec:	str	x11, [x19, x12]
   273f0:	b	273bc <rpl_re_set_registers@@Base+0x426c>
   273f4:	add	x9, x9, #0x1
   273f8:	cmp	x9, #0x100
   273fc:	mov	w0, wzr
   27400:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27404:	ldrh	w11, [x8, x9, lsl #1]
   27408:	tbz	w11, #8, 273f4 <rpl_re_set_registers@@Base+0x42a4>
   2740c:	ldrb	w11, [x20, x9]
   27410:	lsr	x12, x11, #3
   27414:	and	x12, x12, #0x18
   27418:	ldr	x13, [x19, x12]
   2741c:	lsl	x11, x10, x11
   27420:	orr	x11, x11, x13
   27424:	str	x11, [x19, x12]
   27428:	b	273f4 <rpl_re_set_registers@@Base+0x42a4>
   2742c:	add	x9, x9, #0x1
   27430:	cmp	x9, #0x100
   27434:	mov	w0, wzr
   27438:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   2743c:	ldrh	w11, [x8, x9, lsl #1]
   27440:	tbz	w11, #0, 2742c <rpl_re_set_registers@@Base+0x42dc>
   27444:	ldrb	w11, [x20, x9]
   27448:	lsr	x12, x11, #3
   2744c:	and	x12, x12, #0x18
   27450:	ldr	x13, [x19, x12]
   27454:	lsl	x11, x10, x11
   27458:	orr	x11, x11, x13
   2745c:	str	x11, [x19, x12]
   27460:	b	2742c <rpl_re_set_registers@@Base+0x42dc>
   27464:	add	x9, x9, #0x1
   27468:	cmp	x9, #0x100
   2746c:	mov	w0, wzr
   27470:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   27474:	ldrsh	w11, [x8, x9, lsl #1]
   27478:	tbz	w11, #31, 27464 <rpl_re_set_registers@@Base+0x4314>
   2747c:	ldrb	w11, [x20, x9]
   27480:	lsr	x12, x11, #3
   27484:	and	x12, x12, #0x18
   27488:	ldr	x13, [x19, x12]
   2748c:	lsl	x11, x10, x11
   27490:	orr	x11, x11, x13
   27494:	str	x11, [x19, x12]
   27498:	b	27464 <rpl_re_set_registers@@Base+0x4314>
   2749c:	add	x9, x9, #0x1
   274a0:	cmp	x9, #0x100
   274a4:	mov	w0, wzr
   274a8:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   274ac:	ldrh	w11, [x8, x9, lsl #1]
   274b0:	tbz	w11, #2, 2749c <rpl_re_set_registers@@Base+0x434c>
   274b4:	ldrb	w11, [x20, x9]
   274b8:	lsr	x12, x11, #3
   274bc:	and	x12, x12, #0x18
   274c0:	ldr	x13, [x19, x12]
   274c4:	lsl	x11, x10, x11
   274c8:	orr	x11, x11, x13
   274cc:	str	x11, [x19, x12]
   274d0:	b	2749c <rpl_re_set_registers@@Base+0x434c>
   274d4:	add	x9, x9, #0x1
   274d8:	cmp	x9, #0x100
   274dc:	mov	w0, wzr
   274e0:	b.eq	2706c <rpl_re_set_registers@@Base+0x3f1c>  // b.none
   274e4:	ldrh	w11, [x8, x9, lsl #1]
   274e8:	tbz	w11, #12, 274d4 <rpl_re_set_registers@@Base+0x4384>
   274ec:	ldrb	w11, [x20, x9]
   274f0:	lsr	x12, x11, #3
   274f4:	and	x12, x12, #0x18
   274f8:	ldr	x13, [x19, x12]
   274fc:	lsl	x11, x10, x11
   27500:	orr	x11, x11, x13
   27504:	str	x11, [x19, x12]
   27508:	b	274d4 <rpl_re_set_registers@@Base+0x4384>
   2750c:	mov	w0, #0xc                   	// #12
   27510:	b	2706c <rpl_re_set_registers@@Base+0x3f1c>
   27514:	stp	x29, x30, [sp, #-64]!
   27518:	stp	x22, x21, [sp, #32]
   2751c:	stp	x20, x19, [sp, #48]
   27520:	ldr	w9, [x1, #48]
   27524:	ldr	x19, [x1, #56]
   27528:	str	x23, [sp, #16]
   2752c:	mov	x29, sp
   27530:	and	w8, w9, #0xff
   27534:	sub	w10, w8, #0x2
   27538:	cmp	w10, #0xe
   2753c:	mov	x8, x0
   27540:	b.hi	27678 <rpl_re_set_registers@@Base+0x4528>  // b.pmore
   27544:	adrp	x11, 31000 <vasnprintf@@Base+0x324c>
   27548:	add	x11, x11, #0x489
   2754c:	adr	x12, 27560 <rpl_re_set_registers@@Base+0x4410>
   27550:	ldrb	w13, [x11, x10]
   27554:	add	x12, x12, x13, lsl #2
   27558:	mov	w0, wzr
   2755c:	br	x12
   27560:	ldr	x9, [x1, #32]
   27564:	ldr	x8, [x8, #40]
   27568:	mov	w10, #0x18                  	// #24
   2756c:	ldr	x20, [x9, #56]
   27570:	madd	x19, x19, x10, x8
   27574:	mov	w8, #0x1                   	// #1
   27578:	dup	v0.2d, x8
   2757c:	mov	w0, #0x8                   	// #8
   27580:	str	q0, [x19]
   27584:	bl	a540 <malloc@plt>
   27588:	str	x0, [x19, #16]
   2758c:	cbz	x0, 276c8 <rpl_re_set_registers@@Base+0x4578>
   27590:	mov	x8, x0
   27594:	mov	w0, wzr
   27598:	str	x20, [x8]
   2759c:	b	276b4 <rpl_re_set_registers@@Base+0x4564>
   275a0:	ldrb	w9, [x8, #176]
   275a4:	add	x10, x1, #0x20
   275a8:	orr	w9, w9, #0x1
   275ac:	strb	w9, [x8, #176]
   275b0:	ldp	x9, x11, [x1, #8]
   275b4:	add	x12, x9, #0x18
   275b8:	cmp	x9, #0x0
   275bc:	csel	x9, x10, x12, eq  // eq = none
   275c0:	ldr	x9, [x9]
   275c4:	cmp	x11, #0x0
   275c8:	ldr	x20, [x9, #56]
   275cc:	add	x9, x11, #0x18
   275d0:	csel	x9, x10, x9, eq  // eq = none
   275d4:	tbnz	x20, #63, 276d4 <rpl_re_set_registers@@Base+0x4584>
   275d8:	ldr	x9, [x9]
   275dc:	ldr	x21, [x9, #56]
   275e0:	tbnz	x21, #63, 276f4 <rpl_re_set_registers@@Base+0x45a4>
   275e4:	ldr	x22, [x8, #40]
   275e8:	mov	w8, #0x18                  	// #24
   275ec:	mov	w0, #0x10                  	// #16
   275f0:	madd	x23, x19, x8, x22
   275f4:	mov	w8, #0x2                   	// #2
   275f8:	str	x8, [x23]
   275fc:	bl	a540 <malloc@plt>
   27600:	str	x0, [x23, #16]
   27604:	cbz	x0, 276cc <rpl_re_set_registers@@Base+0x457c>
   27608:	mov	w9, #0x18                  	// #24
   2760c:	madd	x9, x19, x9, x22
   27610:	mov	x8, x0
   27614:	cmp	x20, x21
   27618:	add	x9, x9, #0x8
   2761c:	b.ne	27694 <rpl_re_set_registers@@Base+0x4544>  // b.any
   27620:	mov	w10, #0x1                   	// #1
   27624:	mov	w0, wzr
   27628:	str	x10, [x9]
   2762c:	str	x20, [x8]
   27630:	b	276b4 <rpl_re_set_registers@@Base+0x4564>
   27634:	ldr	x9, [x1, #32]
   27638:	ldr	x20, [x9, #56]
   2763c:	ldr	x9, [x8, #24]
   27640:	str	x20, [x9, x19, lsl #3]
   27644:	ldrb	w9, [x1, #48]
   27648:	cmp	w9, #0x4
   2764c:	b.ne	27670 <rpl_re_set_registers@@Base+0x4520>  // b.any
   27650:	ldr	x8, [x8, #40]
   27654:	mov	w9, #0x18                  	// #24
   27658:	mov	w10, #0x1                   	// #1
   2765c:	dup	v0.2d, x10
   27660:	madd	x19, x19, x9, x8
   27664:	b	2757c <rpl_re_set_registers@@Base+0x442c>
   27668:	ldr	x8, [x1, #32]
   2766c:	cbnz	x8, 27714 <rpl_re_set_registers@@Base+0x45c4>
   27670:	mov	w0, wzr
   27674:	b	276b4 <rpl_re_set_registers@@Base+0x4564>
   27678:	tbnz	w9, #3, 27734 <rpl_re_set_registers@@Base+0x45e4>
   2767c:	ldr	x9, [x1, #32]
   27680:	ldr	x8, [x8, #24]
   27684:	mov	w0, wzr
   27688:	ldr	x9, [x9, #56]
   2768c:	str	x9, [x8, x19, lsl #3]
   27690:	b	276b4 <rpl_re_set_registers@@Base+0x4564>
   27694:	mov	w10, #0x2                   	// #2
   27698:	cmp	x20, x21
   2769c:	mov	w0, wzr
   276a0:	str	x10, [x9]
   276a4:	b.ge	276b0 <rpl_re_set_registers@@Base+0x4560>  // b.tcont
   276a8:	stp	x20, x21, [x8]
   276ac:	b	276b4 <rpl_re_set_registers@@Base+0x4564>
   276b0:	stp	x21, x20, [x8]
   276b4:	ldp	x20, x19, [sp, #48]
   276b8:	ldp	x22, x21, [sp, #32]
   276bc:	ldr	x23, [sp, #16]
   276c0:	ldp	x29, x30, [sp], #64
   276c4:	ret
   276c8:	stp	xzr, xzr, [x19]
   276cc:	mov	w0, #0xc                   	// #12
   276d0:	b	276b4 <rpl_re_set_registers@@Base+0x4564>
   276d4:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   276d8:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   276dc:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   276e0:	add	x0, x0, #0x7db
   276e4:	add	x1, x1, #0x6ec
   276e8:	add	x3, x3, #0x7a8
   276ec:	mov	w2, #0x5af                 	// #1455
   276f0:	bl	ad70 <__assert_fail@plt>
   276f4:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   276f8:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   276fc:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   27700:	add	x0, x0, #0x7e5
   27704:	add	x1, x1, #0x6ec
   27708:	add	x3, x3, #0x7a8
   2770c:	mov	w2, #0x5b0                 	// #1456
   27710:	bl	ad70 <__assert_fail@plt>
   27714:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   27718:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   2771c:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   27720:	add	x0, x0, #0x795
   27724:	add	x1, x1, #0x6ec
   27728:	add	x3, x3, #0x7a8
   2772c:	mov	w2, #0x59f                 	// #1439
   27730:	bl	ad70 <__assert_fail@plt>
   27734:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   27738:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   2773c:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   27740:	add	x0, x0, #0x7f0
   27744:	add	x1, x1, #0x6ec
   27748:	add	x3, x3, #0x7a8
   2774c:	mov	w2, #0x5c2                 	// #1474
   27750:	bl	ad70 <__assert_fail@plt>
   27754:	stp	x29, x30, [sp, #-80]!
   27758:	stp	x24, x23, [sp, #32]
   2775c:	stp	x22, x21, [sp, #48]
   27760:	stp	x20, x19, [sp, #64]
   27764:	ldr	x21, [x2, #8]
   27768:	ldr	x22, [x1]
   2776c:	mov	x19, x2
   27770:	mov	x20, x0
   27774:	str	x25, [sp, #16]
   27778:	mov	x29, sp
   2777c:	cbz	x21, 277a0 <rpl_re_set_registers@@Base+0x4650>
   27780:	ldrb	w8, [x1, #56]
   27784:	tbz	w8, #4, 277a0 <rpl_re_set_registers@@Base+0x4650>
   27788:	ldr	x8, [x19, #40]
   2778c:	cmp	x8, #0x3f
   27790:	b.gt	27900 <rpl_re_set_registers@@Base+0x47b0>
   27794:	ldr	x9, [x22, #160]
   27798:	lsr	x8, x9, x8
   2779c:	tbz	w8, #0, 27900 <rpl_re_set_registers@@Base+0x47b0>
   277a0:	ldr	w8, [x22, #128]
   277a4:	cmp	w8, #0xf
   277a8:	b.eq	2791c <rpl_re_set_registers@@Base+0x47cc>  // b.none
   277ac:	ldr	x0, [x22, #112]
   277b0:	add	w9, w8, #0x1
   277b4:	sxtw	x8, w8
   277b8:	add	x23, x0, x8, lsl #6
   277bc:	mov	w10, #0x8                   	// #8
   277c0:	mov	x11, #0xffffffffffffffff    	// #-1
   277c4:	str	w9, [x22, #128]
   277c8:	str	xzr, [x23, #8]!
   277cc:	stp	xzr, xzr, [x23, #16]
   277d0:	str	xzr, [x23, #8]
   277d4:	str	w10, [x23, #48]
   277d8:	str	xzr, [x23, #32]
   277dc:	str	x11, [x23, #56]
   277e0:	ldr	w8, [x22, #128]
   277e4:	cmp	w8, #0xf
   277e8:	b.eq	27940 <rpl_re_set_registers@@Base+0x47f0>  // b.none
   277ec:	ldr	x0, [x22, #112]
   277f0:	add	w9, w8, #0x1
   277f4:	sxtw	x8, w8
   277f8:	add	x24, x0, x8, lsl #6
   277fc:	mov	w10, #0x9                   	// #9
   27800:	mov	x11, #0xffffffffffffffff    	// #-1
   27804:	str	w9, [x22, #128]
   27808:	str	xzr, [x24, #8]!
   2780c:	stp	xzr, xzr, [x24, #16]
   27810:	str	xzr, [x24, #8]
   27814:	str	w10, [x24, #48]
   27818:	str	xzr, [x24, #32]
   2781c:	str	x11, [x24, #56]
   27820:	mov	x25, x24
   27824:	cbz	x21, 27870 <rpl_re_set_registers@@Base+0x4720>
   27828:	ldr	w8, [x22, #128]
   2782c:	cmp	w8, #0xf
   27830:	b.eq	27988 <rpl_re_set_registers@@Base+0x4838>  // b.none
   27834:	ldr	x0, [x22, #112]
   27838:	add	w9, w8, #0x1
   2783c:	sxtw	x8, w8
   27840:	add	x25, x0, x8, lsl #6
   27844:	mov	w10, #0x10                  	// #16
   27848:	mov	x11, #0xffffffffffffffff    	// #-1
   2784c:	str	w9, [x22, #128]
   27850:	str	xzr, [x25, #8]!
   27854:	stp	x21, x24, [x25, #8]
   27858:	str	w10, [x25, #48]
   2785c:	stp	xzr, xzr, [x25, #24]
   27860:	str	x11, [x25, #56]
   27864:	str	x25, [x21]
   27868:	cbz	x24, 27870 <rpl_re_set_registers@@Base+0x4720>
   2786c:	str	x25, [x24]
   27870:	ldr	w8, [x22, #128]
   27874:	cmp	w8, #0xf
   27878:	b.eq	27964 <rpl_re_set_registers@@Base+0x4814>  // b.none
   2787c:	ldr	x0, [x22, #112]
   27880:	add	w9, w8, #0x1
   27884:	sxtw	x8, w8
   27888:	add	x21, x0, x8, lsl #6
   2788c:	mov	w10, #0x10                  	// #16
   27890:	mov	x11, #0xffffffffffffffff    	// #-1
   27894:	str	w9, [x22, #128]
   27898:	str	xzr, [x21, #8]!
   2789c:	stp	x23, x25, [x21, #8]
   278a0:	str	w10, [x21, #48]
   278a4:	stp	xzr, xzr, [x21, #24]
   278a8:	str	x11, [x21, #56]
   278ac:	cbz	x23, 278b4 <rpl_re_set_registers@@Base+0x4764>
   278b0:	str	x21, [x23]
   278b4:	cbz	x25, 278bc <rpl_re_set_registers@@Base+0x476c>
   278b8:	str	x21, [x25]
   278bc:	cbz	x24, 279cc <rpl_re_set_registers@@Base+0x487c>
   278c0:	cbz	x23, 279cc <rpl_re_set_registers@@Base+0x487c>
   278c4:	cbz	x25, 279cc <rpl_re_set_registers@@Base+0x487c>
   278c8:	cbz	x21, 279cc <rpl_re_set_registers@@Base+0x487c>
   278cc:	ldr	x8, [x19, #40]
   278d0:	str	x8, [x24, #40]
   278d4:	str	x8, [x23, #40]
   278d8:	ldr	w8, [x19, #48]
   278dc:	ldr	w9, [x24, #48]
   278e0:	and	w8, w8, #0x80000
   278e4:	and	w9, w9, #0xfff7ffff
   278e8:	orr	w9, w9, w8
   278ec:	str	w9, [x24, #48]
   278f0:	ldr	w9, [x23, #48]
   278f4:	and	w9, w9, #0xfff7ffff
   278f8:	orr	w8, w9, w8
   278fc:	str	w8, [x23, #48]
   27900:	mov	x0, x21
   27904:	ldp	x20, x19, [sp, #64]
   27908:	ldp	x22, x21, [sp, #48]
   2790c:	ldp	x24, x23, [sp, #32]
   27910:	ldr	x25, [sp, #16]
   27914:	ldp	x29, x30, [sp], #80
   27918:	ret
   2791c:	mov	w0, #0x3c8                 	// #968
   27920:	bl	a540 <malloc@plt>
   27924:	cbz	x0, 279ac <rpl_re_set_registers@@Base+0x485c>
   27928:	ldr	x9, [x22, #112]
   2792c:	mov	w8, wzr
   27930:	str	x9, [x0]
   27934:	str	x0, [x22, #112]
   27938:	str	wzr, [x22, #128]
   2793c:	b	277b0 <rpl_re_set_registers@@Base+0x4660>
   27940:	mov	w0, #0x3c8                 	// #968
   27944:	bl	a540 <malloc@plt>
   27948:	cbz	x0, 279b4 <rpl_re_set_registers@@Base+0x4864>
   2794c:	ldr	x9, [x22, #112]
   27950:	mov	w8, wzr
   27954:	str	x9, [x0]
   27958:	str	x0, [x22, #112]
   2795c:	str	wzr, [x22, #128]
   27960:	b	277f0 <rpl_re_set_registers@@Base+0x46a0>
   27964:	mov	w0, #0x3c8                 	// #968
   27968:	bl	a540 <malloc@plt>
   2796c:	cbz	x0, 279c4 <rpl_re_set_registers@@Base+0x4874>
   27970:	ldr	x9, [x22, #112]
   27974:	mov	w8, wzr
   27978:	str	x9, [x0]
   2797c:	str	x0, [x22, #112]
   27980:	str	wzr, [x22, #128]
   27984:	b	27880 <rpl_re_set_registers@@Base+0x4730>
   27988:	mov	w0, #0x3c8                 	// #968
   2798c:	bl	a540 <malloc@plt>
   27990:	cbz	x0, 279dc <rpl_re_set_registers@@Base+0x488c>
   27994:	ldr	x9, [x22, #112]
   27998:	mov	w8, wzr
   2799c:	str	x9, [x0]
   279a0:	str	x0, [x22, #112]
   279a4:	str	wzr, [x22, #128]
   279a8:	b	27838 <rpl_re_set_registers@@Base+0x46e8>
   279ac:	mov	x23, xzr
   279b0:	b	277e0 <rpl_re_set_registers@@Base+0x4690>
   279b4:	mov	x24, xzr
   279b8:	mov	x25, x24
   279bc:	cbnz	x21, 27828 <rpl_re_set_registers@@Base+0x46d8>
   279c0:	b	27870 <rpl_re_set_registers@@Base+0x4720>
   279c4:	mov	x21, xzr
   279c8:	cbnz	x24, 278c0 <rpl_re_set_registers@@Base+0x4770>
   279cc:	mov	w8, #0xc                   	// #12
   279d0:	mov	x21, xzr
   279d4:	str	w8, [x20]
   279d8:	b	27900 <rpl_re_set_registers@@Base+0x47b0>
   279dc:	mov	x25, xzr
   279e0:	b	27870 <rpl_re_set_registers@@Base+0x4720>
   279e4:	stp	x29, x30, [sp, #-80]!
   279e8:	stp	x26, x25, [sp, #16]
   279ec:	stp	x24, x23, [sp, #32]
   279f0:	stp	x22, x21, [sp, #48]
   279f4:	stp	x20, x19, [sp, #64]
   279f8:	ldp	x24, x8, [x0, #8]
   279fc:	mov	x20, x2
   27a00:	mov	x19, x0
   27a04:	mov	x21, x1
   27a08:	cmp	x8, x24
   27a0c:	mov	x29, sp
   27a10:	b.cs	27adc <rpl_re_set_registers@@Base+0x498c>  // b.hs, b.nlast
   27a14:	ldr	x9, [x19]
   27a18:	add	x8, x9, x8, lsl #4
   27a1c:	stp	x21, x20, [x8]
   27a20:	ldr	x8, [x19]
   27a24:	ldr	x9, [x19, #16]
   27a28:	add	x9, x8, x9, lsl #4
   27a2c:	ldr	w10, [x9, #8]
   27a30:	and	w8, w20, #0xff
   27a34:	cmp	w8, #0x5
   27a38:	and	w10, w10, #0xfffc00ff
   27a3c:	str	w10, [x9, #8]
   27a40:	b.ne	27a58 <rpl_re_set_registers@@Base+0x4908>  // b.any
   27a44:	ldr	w9, [x19, #180]
   27a48:	cmp	w9, #0x1
   27a4c:	b.le	27a58 <rpl_re_set_registers@@Base+0x4908>
   27a50:	mov	w8, #0x100000              	// #1048576
   27a54:	b	27a64 <rpl_re_set_registers@@Base+0x4914>
   27a58:	cmp	w8, #0x6
   27a5c:	cset	w8, eq  // eq = none
   27a60:	lsl	w8, w8, #20
   27a64:	ldr	x9, [x19]
   27a68:	ldr	x10, [x19, #16]
   27a6c:	add	x9, x9, x10, lsl #4
   27a70:	ldr	w10, [x9, #8]
   27a74:	and	w10, w10, #0xffefffff
   27a78:	orr	w8, w10, w8
   27a7c:	str	w8, [x9, #8]
   27a80:	ldp	x9, x8, [x19, #16]
   27a84:	mov	x10, #0xffffffffffffffff    	// #-1
   27a88:	str	x10, [x8, x9, lsl #3]
   27a8c:	ldr	x8, [x19, #40]
   27a90:	ldr	x9, [x19, #16]
   27a94:	mov	w10, #0x18                  	// #24
   27a98:	madd	x8, x9, x10, x8
   27a9c:	stp	xzr, xzr, [x8]
   27aa0:	str	xzr, [x8, #16]
   27aa4:	ldr	x8, [x19, #48]
   27aa8:	ldr	x9, [x19, #16]
   27aac:	madd	x8, x9, x10, x8
   27ab0:	stp	xzr, xzr, [x8]
   27ab4:	str	xzr, [x8, #16]
   27ab8:	ldr	x0, [x19, #16]
   27abc:	add	x8, x0, #0x1
   27ac0:	str	x8, [x19, #16]
   27ac4:	ldp	x20, x19, [sp, #64]
   27ac8:	ldp	x22, x21, [sp, #48]
   27acc:	ldp	x24, x23, [sp, #32]
   27ad0:	ldp	x26, x25, [sp, #16]
   27ad4:	ldp	x29, x30, [sp], #80
   27ad8:	ret
   27adc:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   27ae0:	lsl	x26, x24, #1
   27ae4:	movk	x8, #0xaaa, lsl #48
   27ae8:	cmp	x26, x8
   27aec:	b.hi	27b7c <rpl_re_set_registers@@Base+0x4a2c>  // b.pmore
   27af0:	ldr	x0, [x19]
   27af4:	lsl	x1, x24, #5
   27af8:	bl	a720 <realloc@plt>
   27afc:	cbz	x0, 27b7c <rpl_re_set_registers@@Base+0x4a2c>
   27b00:	ldr	x8, [x19, #24]
   27b04:	lsl	x23, x24, #4
   27b08:	str	x0, [x19]
   27b0c:	mov	x1, x23
   27b10:	mov	x0, x8
   27b14:	bl	a720 <realloc@plt>
   27b18:	ldr	x8, [x19, #32]
   27b1c:	mov	x22, x0
   27b20:	mov	x1, x23
   27b24:	mov	x0, x8
   27b28:	bl	a720 <realloc@plt>
   27b2c:	mov	x23, x0
   27b30:	ldr	x0, [x19, #40]
   27b34:	add	x8, x24, x24, lsl #1
   27b38:	lsl	x25, x8, #4
   27b3c:	mov	x1, x25
   27b40:	bl	a720 <realloc@plt>
   27b44:	ldr	x8, [x19, #48]
   27b48:	mov	x24, x0
   27b4c:	mov	x1, x25
   27b50:	mov	x0, x8
   27b54:	bl	a720 <realloc@plt>
   27b58:	cbz	x22, 27b84 <rpl_re_set_registers@@Base+0x4a34>
   27b5c:	cbz	x23, 27b84 <rpl_re_set_registers@@Base+0x4a34>
   27b60:	cbz	x24, 27b84 <rpl_re_set_registers@@Base+0x4a34>
   27b64:	cbz	x0, 27b84 <rpl_re_set_registers@@Base+0x4a34>
   27b68:	ldr	x8, [x19, #16]
   27b6c:	stp	x22, x23, [x19, #24]
   27b70:	stp	x24, x0, [x19, #40]
   27b74:	str	x26, [x19, #8]
   27b78:	b	27a14 <rpl_re_set_registers@@Base+0x48c4>
   27b7c:	mov	x0, #0xffffffffffffffff    	// #-1
   27b80:	b	27ac4 <rpl_re_set_registers@@Base+0x4974>
   27b84:	mov	x19, x0
   27b88:	mov	x0, x22
   27b8c:	bl	a960 <free@plt>
   27b90:	mov	x0, x23
   27b94:	bl	a960 <free@plt>
   27b98:	mov	x0, x24
   27b9c:	bl	a960 <free@plt>
   27ba0:	mov	x0, x19
   27ba4:	bl	a960 <free@plt>
   27ba8:	mov	x0, #0xffffffffffffffff    	// #-1
   27bac:	b	27ac4 <rpl_re_set_registers@@Base+0x4974>
   27bb0:	sub	sp, sp, #0x90
   27bb4:	stp	x29, x30, [sp, #64]
   27bb8:	stp	x26, x25, [sp, #80]
   27bbc:	stp	x24, x23, [sp, #96]
   27bc0:	stp	x22, x21, [sp, #112]
   27bc4:	stp	x20, x19, [sp, #128]
   27bc8:	ldr	x23, [x1, #40]
   27bcc:	mov	w8, #0x18                  	// #24
   27bd0:	mov	x19, x0
   27bd4:	add	x29, sp, #0x40
   27bd8:	madd	x25, x2, x8, x23
   27bdc:	ldr	x8, [x25, #8]!
   27be0:	mov	w21, w3
   27be4:	mov	x20, x2
   27be8:	mov	x22, x1
   27bec:	add	x24, x8, #0x1
   27bf0:	lsl	x0, x24, #3
   27bf4:	stp	x24, xzr, [sp, #32]
   27bf8:	bl	a540 <malloc@plt>
   27bfc:	str	x0, [sp, #48]
   27c00:	cbz	x0, 27e1c <rpl_re_set_registers@@Base+0x4ccc>
   27c04:	ldr	x8, [x22, #48]
   27c08:	mov	w9, #0x18                  	// #24
   27c0c:	madd	x8, x20, x9, x8
   27c10:	mov	x9, #0xffffffffffffffff    	// #-1
   27c14:	str	x9, [x8, #8]
   27c18:	ldr	x9, [x22]
   27c1c:	add	x8, x9, x20, lsl #4
   27c20:	ldr	w8, [x8, #8]
   27c24:	ubfx	w4, w8, #8, #10
   27c28:	cbz	w4, 27c74 <rpl_re_set_registers@@Base+0x4b24>
   27c2c:	ldr	x10, [x25]
   27c30:	cbz	x10, 27c74 <rpl_re_set_registers@@Base+0x4b24>
   27c34:	mov	w10, #0x18                  	// #24
   27c38:	madd	x10, x20, x10, x23
   27c3c:	ldr	x10, [x10, #16]
   27c40:	ldr	x10, [x10]
   27c44:	add	x9, x9, x10, lsl #4
   27c48:	ldrb	w9, [x9, #10]
   27c4c:	tbnz	w9, #2, 27c74 <rpl_re_set_registers@@Base+0x4b24>
   27c50:	mov	x0, x22
   27c54:	mov	x1, x20
   27c58:	mov	x2, x20
   27c5c:	mov	x3, x20
   27c60:	bl	27eac <rpl_re_set_registers@@Base+0x4d5c>
   27c64:	cbnz	w0, 27dd8 <rpl_re_set_registers@@Base+0x4c88>
   27c68:	ldr	x8, [x22]
   27c6c:	add	x8, x8, x20, lsl #4
   27c70:	ldr	w8, [x8, #8]
   27c74:	tbz	w8, #3, 27d3c <rpl_re_set_registers@@Base+0x4bec>
   27c78:	ldr	x8, [x22, #40]
   27c7c:	mov	w9, #0x18                  	// #24
   27c80:	madd	x9, x20, x9, x8
   27c84:	ldr	x9, [x9, #8]
   27c88:	cmp	x9, #0x1
   27c8c:	b.lt	27d3c <rpl_re_set_registers@@Base+0x4bec>  // b.tstop
   27c90:	mov	w25, wzr
   27c94:	mov	x24, xzr
   27c98:	mov	w26, #0x18                  	// #24
   27c9c:	b	27cbc <rpl_re_set_registers@@Base+0x4b6c>
   27ca0:	mov	w25, #0x1                   	// #1
   27ca4:	ldr	x8, [x22, #40]
   27ca8:	add	x24, x24, #0x1
   27cac:	madd	x9, x20, x26, x8
   27cb0:	ldr	x9, [x9, #8]
   27cb4:	cmp	x24, x9
   27cb8:	b.ge	27d60 <rpl_re_set_registers@@Base+0x4c10>  // b.tcont
   27cbc:	madd	x8, x20, x26, x8
   27cc0:	ldr	x8, [x8, #16]
   27cc4:	ldr	x23, [x8, x24, lsl #3]
   27cc8:	ldr	x8, [x22, #48]
   27ccc:	madd	x9, x23, x26, x8
   27cd0:	ldr	x9, [x9, #8]
   27cd4:	cmn	x9, #0x1
   27cd8:	b.eq	27ca0 <rpl_re_set_registers@@Base+0x4b50>  // b.none
   27cdc:	cbnz	x9, 27cfc <rpl_re_set_registers@@Base+0x4bac>
   27ce0:	mov	x0, sp
   27ce4:	mov	x1, x22
   27ce8:	mov	x2, x23
   27cec:	mov	w3, wzr
   27cf0:	bl	27bb0 <rpl_re_set_registers@@Base+0x4a60>
   27cf4:	cbz	w0, 27d10 <rpl_re_set_registers@@Base+0x4bc0>
   27cf8:	b	27dd8 <rpl_re_set_registers@@Base+0x4c88>
   27cfc:	madd	x8, x23, x26, x8
   27d00:	ldr	x9, [x8, #16]
   27d04:	ldr	q0, [x8]
   27d08:	str	x9, [sp, #16]
   27d0c:	str	q0, [sp]
   27d10:	add	x0, sp, #0x20
   27d14:	mov	x1, sp
   27d18:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   27d1c:	cbnz	w0, 27dd8 <rpl_re_set_registers@@Base+0x4c88>
   27d20:	ldr	x8, [x22, #48]
   27d24:	madd	x8, x23, x26, x8
   27d28:	ldr	x8, [x8, #8]
   27d2c:	cbnz	x8, 27ca4 <rpl_re_set_registers@@Base+0x4b54>
   27d30:	ldr	x0, [sp, #16]
   27d34:	bl	a960 <free@plt>
   27d38:	b	27ca0 <rpl_re_set_registers@@Base+0x4b50>
   27d3c:	mov	w23, #0x1                   	// #1
   27d40:	cbz	x24, 27d70 <rpl_re_set_registers@@Base+0x4c20>
   27d44:	ldr	x25, [sp, #40]
   27d48:	cbnz	x25, 27df4 <rpl_re_set_registers@@Base+0x4ca4>
   27d4c:	ldr	x8, [sp, #48]
   27d50:	mov	w9, #0x1                   	// #1
   27d54:	str	x20, [x8]
   27d58:	str	x9, [sp, #40]
   27d5c:	b	27d90 <rpl_re_set_registers@@Base+0x4c40>
   27d60:	ldr	x24, [sp, #32]
   27d64:	tst	w25, #0x1
   27d68:	cset	w23, eq  // eq = none
   27d6c:	cbnz	x24, 27d44 <rpl_re_set_registers@@Base+0x4bf4>
   27d70:	mov	w8, #0x1                   	// #1
   27d74:	dup	v0.2d, x8
   27d78:	mov	w0, #0x8                   	// #8
   27d7c:	str	q0, [sp, #32]
   27d80:	bl	a540 <malloc@plt>
   27d84:	str	x0, [sp, #48]
   27d88:	cbz	x0, 27e24 <rpl_re_set_registers@@Base+0x4cd4>
   27d8c:	str	x20, [x0]
   27d90:	ldr	x8, [x22, #48]
   27d94:	orr	w9, w23, w21
   27d98:	tbz	w9, #0, 27db8 <rpl_re_set_registers@@Base+0x4c68>
   27d9c:	ldr	x9, [sp, #48]
   27da0:	ldr	q0, [sp, #32]
   27da4:	mov	w10, #0x18                  	// #24
   27da8:	madd	x8, x20, x10, x8
   27dac:	str	x9, [x8, #16]
   27db0:	str	q0, [x8]
   27db4:	b	27dc4 <rpl_re_set_registers@@Base+0x4c74>
   27db8:	mov	w9, #0x18                  	// #24
   27dbc:	madd	x8, x20, x9, x8
   27dc0:	str	xzr, [x8, #8]
   27dc4:	ldr	x8, [sp, #48]
   27dc8:	ldr	q0, [sp, #32]
   27dcc:	mov	w0, wzr
   27dd0:	str	x8, [x19, #16]
   27dd4:	str	q0, [x19]
   27dd8:	ldp	x20, x19, [sp, #128]
   27ddc:	ldp	x22, x21, [sp, #112]
   27de0:	ldp	x24, x23, [sp, #96]
   27de4:	ldp	x26, x25, [sp, #80]
   27de8:	ldp	x29, x30, [sp, #64]
   27dec:	add	sp, sp, #0x90
   27df0:	ret
   27df4:	cmp	x24, x25
   27df8:	b.ne	27e30 <rpl_re_set_registers@@Base+0x4ce0>  // b.any
   27dfc:	ldr	x0, [sp, #48]
   27e00:	lsl	x8, x24, #1
   27e04:	lsl	x1, x24, #4
   27e08:	str	x8, [sp, #32]
   27e0c:	bl	a720 <realloc@plt>
   27e10:	cbz	x0, 27e1c <rpl_re_set_registers@@Base+0x4ccc>
   27e14:	str	x0, [sp, #48]
   27e18:	b	27e34 <rpl_re_set_registers@@Base+0x4ce4>
   27e1c:	mov	w0, #0xc                   	// #12
   27e20:	b	27dd8 <rpl_re_set_registers@@Base+0x4c88>
   27e24:	stp	xzr, xzr, [sp, #32]
   27e28:	mov	w0, #0xc                   	// #12
   27e2c:	b	27dd8 <rpl_re_set_registers@@Base+0x4c88>
   27e30:	ldr	x0, [sp, #48]
   27e34:	ldr	x8, [x0]
   27e38:	cmp	x8, x20
   27e3c:	b.le	27e68 <rpl_re_set_registers@@Base+0x4d18>
   27e40:	cmp	x25, #0x1
   27e44:	b.lt	27e98 <rpl_re_set_registers@@Base+0x4d48>  // b.tstop
   27e48:	mov	x9, x25
   27e4c:	add	x10, x0, x9, lsl #3
   27e50:	ldur	x11, [x10, #-8]
   27e54:	subs	x8, x9, #0x1
   27e58:	mov	x9, x8
   27e5c:	str	x11, [x10]
   27e60:	b.gt	27e4c <rpl_re_set_registers@@Base+0x4cfc>
   27e64:	b	27e9c <rpl_re_set_registers@@Base+0x4d4c>
   27e68:	add	x8, x0, x25, lsl #3
   27e6c:	ldur	x9, [x8, #-8]
   27e70:	mov	x8, x25
   27e74:	cmp	x9, x20
   27e78:	b.le	27e9c <rpl_re_set_registers@@Base+0x4d4c>
   27e7c:	add	x10, x0, x8, lsl #3
   27e80:	str	x9, [x10]
   27e84:	ldur	x9, [x10, #-16]
   27e88:	sub	x8, x8, #0x1
   27e8c:	cmp	x9, x20
   27e90:	b.gt	27e7c <rpl_re_set_registers@@Base+0x4d2c>
   27e94:	b	27e9c <rpl_re_set_registers@@Base+0x4d4c>
   27e98:	mov	x8, x25
   27e9c:	str	x20, [x0, x8, lsl #3]
   27ea0:	add	x8, x25, #0x1
   27ea4:	str	x8, [sp, #40]
   27ea8:	b	27d90 <rpl_re_set_registers@@Base+0x4c40>
   27eac:	stp	x29, x30, [sp, #-96]!
   27eb0:	stp	x26, x25, [sp, #32]
   27eb4:	stp	x24, x23, [sp, #48]
   27eb8:	stp	x22, x21, [sp, #64]
   27ebc:	stp	x20, x19, [sp, #80]
   27ec0:	mov	w19, w4
   27ec4:	mov	x20, x3
   27ec8:	mov	x22, x2
   27ecc:	mov	x23, x1
   27ed0:	mov	x21, x0
   27ed4:	mov	w25, #0x18                  	// #24
   27ed8:	str	x27, [sp, #16]
   27edc:	mov	x29, sp
   27ee0:	ubfiz	w26, w19, #8, #10
   27ee4:	mov	x27, x23
   27ee8:	b	27f9c <rpl_re_set_registers@@Base+0x4e4c>
   27eec:	ldr	x9, [x21, #24]
   27ef0:	ldr	x10, [x21, #40]
   27ef4:	mov	x0, x21
   27ef8:	ldr	x24, [x9, x27, lsl #3]
   27efc:	madd	x9, x22, x25, x10
   27f00:	str	xzr, [x9, #8]
   27f04:	add	x8, x8, x24, lsl #4
   27f08:	ldp	x1, x2, [x8]
   27f0c:	bl	279e4 <rpl_re_set_registers@@Base+0x4894>
   27f10:	cmn	x0, #0x1
   27f14:	b.eq	28278 <rpl_re_set_registers@@Base+0x5128>  // b.none
   27f18:	ldr	x8, [x21]
   27f1c:	lsl	x9, x0, #4
   27f20:	mov	x23, x0
   27f24:	mov	x1, x23
   27f28:	add	x8, x8, x9
   27f2c:	ldr	w10, [x8, #8]
   27f30:	and	w10, w10, #0xfffc00ff
   27f34:	orr	w10, w10, w26
   27f38:	str	w10, [x8, #8]
   27f3c:	ldr	x8, [x21]
   27f40:	add	x10, x8, x24, lsl #4
   27f44:	ldr	w10, [x10, #8]
   27f48:	add	x8, x8, x9
   27f4c:	ldr	w11, [x8, #8]
   27f50:	and	w10, w10, #0x3ff00
   27f54:	orr	w10, w10, w11
   27f58:	str	w10, [x8, #8]
   27f5c:	ldr	x8, [x21]
   27f60:	add	x8, x8, x9
   27f64:	ldr	w9, [x8, #8]
   27f68:	orr	w9, w9, #0x40000
   27f6c:	str	w9, [x8, #8]
   27f70:	ldr	x8, [x21, #32]
   27f74:	str	x24, [x8, x0, lsl #3]
   27f78:	ldr	x8, [x21, #24]
   27f7c:	ldr	x9, [x8, x27, lsl #3]
   27f80:	str	x9, [x8, x22, lsl #3]
   27f84:	ldr	x8, [x21, #40]
   27f88:	madd	x0, x22, x25, x8
   27f8c:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   27f90:	mov	x27, x24
   27f94:	mov	x22, x23
   27f98:	tbz	w0, #0, 28278 <rpl_re_set_registers@@Base+0x5128>
   27f9c:	ldr	x8, [x21]
   27fa0:	add	x10, x8, x27, lsl #4
   27fa4:	ldrb	w9, [x10, #8]!
   27fa8:	cmp	w9, #0x4
   27fac:	b.eq	27eec <rpl_re_set_registers@@Base+0x4d9c>  // b.none
   27fb0:	ldr	x9, [x21, #40]
   27fb4:	madd	x11, x27, x25, x9
   27fb8:	ldr	x11, [x11, #8]
   27fbc:	cbz	x11, 28230 <rpl_re_set_registers@@Base+0x50e0>
   27fc0:	madd	x12, x27, x25, x9
   27fc4:	ldr	x12, [x12, #16]
   27fc8:	cmp	x11, #0x1
   27fcc:	ldr	x23, [x12]
   27fd0:	madd	x12, x22, x25, x9
   27fd4:	str	xzr, [x12, #8]
   27fd8:	b.eq	28188 <rpl_re_set_registers@@Base+0x5038>  // b.none
   27fdc:	ldr	x12, [x21, #16]
   27fe0:	sub	x1, x12, #0x1
   27fe4:	cmp	x1, #0x1
   27fe8:	b.lt	28030 <rpl_re_set_registers@@Base+0x4ee0>  // b.tstop
   27fec:	add	x10, x8, x1, lsl #4
   27ff0:	ldr	w11, [x10, #8]
   27ff4:	tbz	w11, #18, 28030 <rpl_re_set_registers@@Base+0x4ee0>
   27ff8:	ldr	x10, [x21, #32]
   27ffc:	add	x12, x8, x12, lsl #4
   28000:	sub	x12, x12, #0x18
   28004:	ldr	x13, [x10, x1, lsl #3]
   28008:	cmp	x13, x23
   2800c:	b.ne	2801c <rpl_re_set_registers@@Base+0x4ecc>  // b.any
   28010:	ubfx	w11, w11, #8, #10
   28014:	cmp	w11, w19
   28018:	b.eq	28178 <rpl_re_set_registers@@Base+0x5028>  // b.none
   2801c:	ldr	w11, [x12], #-16
   28020:	sub	x1, x1, #0x1
   28024:	cmp	x1, #0x1
   28028:	b.lt	28030 <rpl_re_set_registers@@Base+0x4ee0>  // b.tstop
   2802c:	tbnz	w11, #18, 28004 <rpl_re_set_registers@@Base+0x4eb4>
   28030:	add	x8, x8, x23, lsl #4
   28034:	ldp	x1, x2, [x8]
   28038:	mov	x0, x21
   2803c:	bl	279e4 <rpl_re_set_registers@@Base+0x4894>
   28040:	cmn	x0, #0x1
   28044:	b.eq	28278 <rpl_re_set_registers@@Base+0x5128>  // b.none
   28048:	ldr	x8, [x21]
   2804c:	lsl	x9, x0, #4
   28050:	mov	x24, x0
   28054:	mov	x1, x24
   28058:	add	x8, x8, x9
   2805c:	ldr	w10, [x8, #8]
   28060:	and	w10, w10, #0xfffc00ff
   28064:	orr	w10, w10, w26
   28068:	str	w10, [x8, #8]
   2806c:	ldr	x8, [x21]
   28070:	add	x10, x8, x23, lsl #4
   28074:	ldr	w10, [x10, #8]
   28078:	add	x8, x8, x9
   2807c:	ldr	w11, [x8, #8]
   28080:	and	w10, w10, #0x3ff00
   28084:	orr	w10, w10, w11
   28088:	str	w10, [x8, #8]
   2808c:	ldr	x8, [x21]
   28090:	add	x8, x8, x9
   28094:	ldr	w9, [x8, #8]
   28098:	orr	w9, w9, #0x40000
   2809c:	str	w9, [x8, #8]
   280a0:	ldr	x8, [x21, #32]
   280a4:	str	x23, [x8, x0, lsl #3]
   280a8:	ldr	x8, [x21, #40]
   280ac:	madd	x0, x22, x25, x8
   280b0:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   280b4:	tbz	w0, #0, 28278 <rpl_re_set_registers@@Base+0x5128>
   280b8:	mov	x0, x21
   280bc:	mov	x1, x23
   280c0:	mov	x2, x24
   280c4:	mov	x3, x20
   280c8:	mov	w4, w19
   280cc:	bl	27eac <rpl_re_set_registers@@Base+0x4d5c>
   280d0:	cbnz	w0, 28240 <rpl_re_set_registers@@Base+0x50f0>
   280d4:	ldr	x8, [x21, #40]
   280d8:	ldr	x9, [x21]
   280dc:	mov	x0, x21
   280e0:	madd	x8, x27, x25, x8
   280e4:	ldr	x8, [x8, #16]
   280e8:	ldr	x27, [x8, #8]
   280ec:	add	x8, x9, x27, lsl #4
   280f0:	ldp	x1, x2, [x8]
   280f4:	bl	279e4 <rpl_re_set_registers@@Base+0x4894>
   280f8:	cmn	x0, #0x1
   280fc:	b.eq	28278 <rpl_re_set_registers@@Base+0x5128>  // b.none
   28100:	ldr	x8, [x21]
   28104:	lsl	x9, x0, #4
   28108:	mov	x23, x0
   2810c:	mov	x1, x23
   28110:	add	x8, x8, x9
   28114:	ldr	w10, [x8, #8]
   28118:	and	w10, w10, #0xfffc00ff
   2811c:	orr	w10, w10, w26
   28120:	str	w10, [x8, #8]
   28124:	ldr	x8, [x21]
   28128:	add	x10, x8, x27, lsl #4
   2812c:	ldr	w10, [x10, #8]
   28130:	add	x8, x8, x9
   28134:	ldr	w11, [x8, #8]
   28138:	and	w10, w10, #0x3ff00
   2813c:	orr	w10, w10, w11
   28140:	str	w10, [x8, #8]
   28144:	ldr	x8, [x21]
   28148:	add	x8, x8, x9
   2814c:	ldr	w9, [x8, #8]
   28150:	orr	w9, w9, #0x40000
   28154:	str	w9, [x8, #8]
   28158:	ldr	x8, [x21, #32]
   2815c:	str	x27, [x8, x0, lsl #3]
   28160:	ldr	x8, [x21, #40]
   28164:	madd	x0, x22, x25, x8
   28168:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   2816c:	mov	x22, x23
   28170:	tbnz	w0, #0, 27f9c <rpl_re_set_registers@@Base+0x4e4c>
   28174:	b	28278 <rpl_re_set_registers@@Base+0x5128>
   28178:	madd	x0, x22, x25, x9
   2817c:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   28180:	tbnz	w0, #0, 280d4 <rpl_re_set_registers@@Base+0x4f84>
   28184:	b	28278 <rpl_re_set_registers@@Base+0x5128>
   28188:	cmp	x27, x20
   2818c:	b.ne	28198 <rpl_re_set_registers@@Base+0x5048>  // b.any
   28190:	cmp	x22, x27
   28194:	b.ne	2825c <rpl_re_set_registers@@Base+0x510c>  // b.any
   28198:	add	x8, x8, x23, lsl #4
   2819c:	ldp	x1, x2, [x8]
   281a0:	ldr	w26, [x10]
   281a4:	mov	x0, x21
   281a8:	bl	279e4 <rpl_re_set_registers@@Base+0x4894>
   281ac:	cmn	x0, #0x1
   281b0:	b.eq	28278 <rpl_re_set_registers@@Base+0x5128>  // b.none
   281b4:	ldr	x8, [x21]
   281b8:	lsl	x9, x0, #4
   281bc:	ubfx	w11, w26, #8, #10
   281c0:	orr	w19, w11, w19
   281c4:	add	x8, x8, x9
   281c8:	ldr	w10, [x8, #8]
   281cc:	mov	x24, x0
   281d0:	mov	x1, x24
   281d4:	bfi	w10, w19, #8, #10
   281d8:	str	w10, [x8, #8]
   281dc:	ldr	x8, [x21]
   281e0:	add	x10, x8, x23, lsl #4
   281e4:	ldr	w10, [x10, #8]
   281e8:	add	x8, x8, x9
   281ec:	ldr	w11, [x8, #8]
   281f0:	and	w10, w10, #0x3ff00
   281f4:	orr	w10, w10, w11
   281f8:	str	w10, [x8, #8]
   281fc:	ldr	x8, [x21]
   28200:	add	x8, x8, x9
   28204:	ldr	w9, [x8, #8]
   28208:	orr	w9, w9, #0x40000
   2820c:	str	w9, [x8, #8]
   28210:	ldr	x8, [x21, #32]
   28214:	str	x23, [x8, x0, lsl #3]
   28218:	ldr	x8, [x21, #40]
   2821c:	madd	x0, x22, x25, x8
   28220:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   28224:	mov	x22, x24
   28228:	tbnz	w0, #0, 27ee0 <rpl_re_set_registers@@Base+0x4d90>
   2822c:	b	28278 <rpl_re_set_registers@@Base+0x5128>
   28230:	ldr	x8, [x21, #24]
   28234:	mov	w0, wzr
   28238:	ldr	x9, [x8, x27, lsl #3]
   2823c:	str	x9, [x8, x22, lsl #3]
   28240:	ldp	x20, x19, [sp, #80]
   28244:	ldp	x22, x21, [sp, #64]
   28248:	ldp	x24, x23, [sp, #48]
   2824c:	ldp	x26, x25, [sp, #32]
   28250:	ldr	x27, [sp, #16]
   28254:	ldp	x29, x30, [sp], #96
   28258:	ret
   2825c:	mov	w8, #0x18                  	// #24
   28260:	madd	x0, x22, x8, x9
   28264:	mov	x1, x23
   28268:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   2826c:	tbz	w0, #0, 28278 <rpl_re_set_registers@@Base+0x5128>
   28270:	mov	w0, wzr
   28274:	b	28240 <rpl_re_set_registers@@Base+0x50f0>
   28278:	mov	w0, #0xc                   	// #12
   2827c:	b	28240 <rpl_re_set_registers@@Base+0x50f0>
   28280:	stp	x29, x30, [sp, #-48]!
   28284:	str	x21, [sp, #16]
   28288:	stp	x20, x19, [sp, #32]
   2828c:	mov	x29, sp
   28290:	cbz	x1, 28378 <rpl_re_set_registers@@Base+0x5228>
   28294:	ldr	x10, [x1, #8]
   28298:	mov	x20, x1
   2829c:	cbz	x10, 28378 <rpl_re_set_registers@@Base+0x5228>
   282a0:	ldp	x8, x11, [x0]
   282a4:	mov	x19, x0
   282a8:	add	x9, x11, x10, lsl #1
   282ac:	cmp	x8, x9
   282b0:	b.ge	282dc <rpl_re_set_registers@@Base+0x518c>  // b.tcont
   282b4:	ldr	x0, [x19, #16]
   282b8:	add	x21, x8, x10
   282bc:	lsl	x1, x21, #4
   282c0:	bl	a720 <realloc@plt>
   282c4:	cbz	x0, 28404 <rpl_re_set_registers@@Base+0x52b4>
   282c8:	lsl	x8, x21, #1
   282cc:	str	x0, [x19, #16]
   282d0:	str	x8, [x19]
   282d4:	ldr	x11, [x19, #8]
   282d8:	ldr	x10, [x20, #8]
   282dc:	cbz	x11, 283f0 <rpl_re_set_registers@@Base+0x52a0>
   282e0:	sub	x8, x10, #0x1
   282e4:	sub	x9, x11, #0x1
   282e8:	orr	x12, x8, x9
   282ec:	add	x21, x11, x10, lsl #1
   282f0:	tbnz	x12, #63, 2833c <rpl_re_set_registers@@Base+0x51ec>
   282f4:	ldr	x10, [x19, #16]
   282f8:	ldr	x11, [x20, #16]
   282fc:	b	28314 <rpl_re_set_registers@@Base+0x51c4>
   28300:	sub	x8, x8, #0x1
   28304:	sub	x21, x21, #0x1
   28308:	str	x12, [x10, x21, lsl #3]
   2830c:	orr	x12, x8, x9
   28310:	tbnz	x12, #63, 2833c <rpl_re_set_registers@@Base+0x51ec>
   28314:	ldr	x13, [x10, x9, lsl #3]
   28318:	ldr	x12, [x11, x8, lsl #3]
   2831c:	cmp	x13, x12
   28320:	b.ne	2832c <rpl_re_set_registers@@Base+0x51dc>  // b.any
   28324:	sub	x8, x8, #0x1
   28328:	b	28330 <rpl_re_set_registers@@Base+0x51e0>
   2832c:	b.lt	28300 <rpl_re_set_registers@@Base+0x51b0>  // b.tstop
   28330:	sub	x9, x9, #0x1
   28334:	orr	x12, x8, x9
   28338:	tbz	x12, #63, 28314 <rpl_re_set_registers@@Base+0x51c4>
   2833c:	tbnz	x8, #63, 2835c <rpl_re_set_registers@@Base+0x520c>
   28340:	ldr	x9, [x19, #16]
   28344:	ldr	x1, [x20, #16]
   28348:	add	x8, x8, #0x1
   2834c:	sub	x21, x21, x8
   28350:	add	x0, x9, x21, lsl #3
   28354:	lsl	x2, x8, #3
   28358:	bl	a210 <memcpy@plt>
   2835c:	ldr	x10, [x19, #8]
   28360:	ldr	x8, [x20, #8]
   28364:	sub	x9, x10, #0x1
   28368:	add	x8, x9, x8, lsl #1
   2836c:	sub	x11, x8, x21
   28370:	adds	x11, x11, #0x1
   28374:	b.cc	2838c <rpl_re_set_registers@@Base+0x523c>  // b.lo, b.ul, b.last
   28378:	mov	w0, wzr
   2837c:	ldp	x20, x19, [sp, #32]
   28380:	ldr	x21, [sp, #16]
   28384:	ldp	x29, x30, [sp], #48
   28388:	ret
   2838c:	ldr	x0, [x19, #16]
   28390:	add	x10, x11, x10
   28394:	str	x10, [x19, #8]
   28398:	add	x10, x0, x9, lsl #3
   2839c:	lsl	x2, x11, #3
   283a0:	neg	x11, x11
   283a4:	ldr	x12, [x0, x8, lsl #3]
   283a8:	ldr	x13, [x0, x9, lsl #3]
   283ac:	cmp	x12, x13
   283b0:	b.le	283cc <rpl_re_set_registers@@Base+0x527c>
   283b4:	sub	x8, x8, #0x1
   283b8:	str	x12, [x10, x2]
   283bc:	adds	x11, x11, #0x1
   283c0:	sub	x2, x2, #0x8
   283c4:	b.cc	283a4 <rpl_re_set_registers@@Base+0x5254>  // b.lo, b.ul, b.last
   283c8:	b	28378 <rpl_re_set_registers@@Base+0x5228>
   283cc:	str	x13, [x10, x2]
   283d0:	cmp	x9, #0x0
   283d4:	sub	x9, x9, #0x1
   283d8:	neg	x11, x11
   283dc:	sub	x10, x10, #0x8
   283e0:	b.gt	2839c <rpl_re_set_registers@@Base+0x524c>
   283e4:	add	x1, x0, x21, lsl #3
   283e8:	bl	a210 <memcpy@plt>
   283ec:	b	28378 <rpl_re_set_registers@@Base+0x5228>
   283f0:	str	x10, [x19, #8]
   283f4:	ldp	x8, x1, [x20, #8]
   283f8:	ldr	x0, [x19, #16]
   283fc:	lsl	x2, x8, #3
   28400:	b	283e8 <rpl_re_set_registers@@Base+0x5298>
   28404:	mov	w0, #0xc                   	// #12
   28408:	b	2837c <rpl_re_set_registers@@Base+0x522c>
   2840c:	stp	x29, x30, [sp, #-32]!
   28410:	stp	x20, x19, [sp, #16]
   28414:	ldr	x9, [x0]
   28418:	mov	x19, x0
   2841c:	mov	x20, x1
   28420:	mov	x29, sp
   28424:	cbz	x9, 28448 <rpl_re_set_registers@@Base+0x52f8>
   28428:	ldr	x8, [x19, #8]
   2842c:	cbnz	x8, 28478 <rpl_re_set_registers@@Base+0x5328>
   28430:	ldr	x8, [x19, #16]
   28434:	str	x20, [x8]
   28438:	ldr	x8, [x19, #8]
   2843c:	add	x8, x8, #0x1
   28440:	str	x8, [x19, #8]
   28444:	b	28468 <rpl_re_set_registers@@Base+0x5318>
   28448:	mov	w8, #0x1                   	// #1
   2844c:	dup	v0.2d, x8
   28450:	mov	w0, #0x8                   	// #8
   28454:	str	q0, [x19]
   28458:	bl	a540 <malloc@plt>
   2845c:	str	x0, [x19, #16]
   28460:	cbz	x0, 284a4 <rpl_re_set_registers@@Base+0x5354>
   28464:	str	x20, [x0]
   28468:	mov	w0, #0x1                   	// #1
   2846c:	ldp	x20, x19, [sp, #16]
   28470:	ldp	x29, x30, [sp], #32
   28474:	ret
   28478:	cmp	x9, x8
   2847c:	b.ne	284ac <rpl_re_set_registers@@Base+0x535c>  // b.any
   28480:	ldr	x0, [x19, #16]
   28484:	lsl	x8, x9, #1
   28488:	lsl	x1, x9, #4
   2848c:	str	x8, [x19]
   28490:	bl	a720 <realloc@plt>
   28494:	cbz	x0, 2846c <rpl_re_set_registers@@Base+0x531c>
   28498:	ldr	x8, [x19, #8]
   2849c:	str	x0, [x19, #16]
   284a0:	b	284b0 <rpl_re_set_registers@@Base+0x5360>
   284a4:	stp	xzr, xzr, [x19]
   284a8:	b	2846c <rpl_re_set_registers@@Base+0x531c>
   284ac:	ldr	x0, [x19, #16]
   284b0:	ldr	x9, [x0]
   284b4:	cmp	x9, x20
   284b8:	b.le	284e4 <rpl_re_set_registers@@Base+0x5394>
   284bc:	cmp	x8, #0x1
   284c0:	b.lt	2850c <rpl_re_set_registers@@Base+0x53bc>  // b.tstop
   284c4:	mov	x9, x8
   284c8:	add	x10, x0, x9, lsl #3
   284cc:	ldur	x11, [x10, #-8]
   284d0:	subs	x8, x9, #0x1
   284d4:	mov	x9, x8
   284d8:	str	x11, [x10]
   284dc:	b.gt	284c8 <rpl_re_set_registers@@Base+0x5378>
   284e0:	b	2850c <rpl_re_set_registers@@Base+0x53bc>
   284e4:	add	x9, x0, x8, lsl #3
   284e8:	ldur	x9, [x9, #-8]
   284ec:	cmp	x9, x20
   284f0:	b.le	2850c <rpl_re_set_registers@@Base+0x53bc>
   284f4:	add	x10, x0, x8, lsl #3
   284f8:	str	x9, [x10]
   284fc:	ldur	x9, [x10, #-16]
   28500:	sub	x8, x8, #0x1
   28504:	cmp	x9, x20
   28508:	b.gt	284f4 <rpl_re_set_registers@@Base+0x53a4>
   2850c:	str	x20, [x0, x8, lsl #3]
   28510:	b	28438 <rpl_re_set_registers@@Base+0x52e8>
   28514:	sub	sp, sp, #0xb0
   28518:	stp	x29, x30, [sp, #80]
   2851c:	stp	x28, x27, [sp, #96]
   28520:	stp	x26, x25, [sp, #112]
   28524:	stp	x24, x23, [sp, #128]
   28528:	stp	x22, x21, [sp, #144]
   2852c:	stp	x20, x19, [sp, #160]
   28530:	ldr	x28, [x2, #8]
   28534:	add	x29, sp, #0x50
   28538:	cbz	x28, 28564 <rpl_re_set_registers@@Base+0x5414>
   2853c:	mov	x26, x2
   28540:	mov	x19, x1
   28544:	subs	x8, x28, #0x1
   28548:	add	x22, x28, w3, uxtw
   2854c:	b.lt	285cc <rpl_re_set_registers@@Base+0x547c>  // b.tstop
   28550:	ldr	x9, [x26, #16]
   28554:	cmp	x28, #0x4
   28558:	b.cs	28570 <rpl_re_set_registers@@Base+0x5420>  // b.hs, b.nlast
   2855c:	mov	x10, xzr
   28560:	b	285b4 <rpl_re_set_registers@@Base+0x5464>
   28564:	mov	x27, xzr
   28568:	str	wzr, [x0]
   2856c:	b	288e8 <rpl_re_set_registers@@Base+0x5798>
   28570:	and	x10, x28, #0xfffffffffffffffc
   28574:	movi	v1.2d, #0x0
   28578:	movi	v0.2d, #0x0
   2857c:	mov	v1.d[0], x22
   28580:	add	x11, x9, #0x10
   28584:	mov	x12, x10
   28588:	ldp	q2, q3, [x11, #-16]
   2858c:	subs	x12, x12, #0x4
   28590:	add	x11, x11, #0x20
   28594:	add	v1.2d, v2.2d, v1.2d
   28598:	add	v0.2d, v3.2d, v0.2d
   2859c:	b.ne	28588 <rpl_re_set_registers@@Base+0x5438>  // b.any
   285a0:	add	v0.2d, v0.2d, v1.2d
   285a4:	addp	d0, v0.2d
   285a8:	cmp	x28, x10
   285ac:	fmov	x22, d0
   285b0:	b.eq	285cc <rpl_re_set_registers@@Base+0x547c>  // b.none
   285b4:	sub	x11, x28, x10
   285b8:	add	x9, x9, x10, lsl #3
   285bc:	ldr	x10, [x9], #8
   285c0:	subs	x11, x11, #0x1
   285c4:	add	x22, x10, x22
   285c8:	b.ne	285bc <rpl_re_set_registers@@Base+0x546c>  // b.any
   285cc:	ldr	x9, [x19, #136]
   285d0:	ldr	x10, [x19, #64]
   285d4:	and	x11, x9, x22
   285d8:	mov	w9, #0x18                  	// #24
   285dc:	mul	x9, x11, x9
   285e0:	ldr	x9, [x10, x9]
   285e4:	cmp	x9, #0x1
   285e8:	b.lt	28678 <rpl_re_set_registers@@Base+0x5528>  // b.tstop
   285ec:	mov	w12, #0x18                  	// #24
   285f0:	madd	x10, x11, x12, x10
   285f4:	ldr	x10, [x10, #16]
   285f8:	mov	x11, xzr
   285fc:	b	2860c <rpl_re_set_registers@@Base+0x54bc>
   28600:	add	x11, x11, #0x1
   28604:	cmp	x11, x9
   28608:	b.ge	28678 <rpl_re_set_registers@@Base+0x5528>  // b.tcont
   2860c:	ldr	x27, [x10, x11, lsl #3]
   28610:	ldr	x12, [x27]
   28614:	cmp	x12, x22
   28618:	b.ne	28600 <rpl_re_set_registers@@Base+0x54b0>  // b.any
   2861c:	ldrb	w12, [x27, #104]
   28620:	and	w12, w12, #0xf
   28624:	cmp	w12, w3
   28628:	b.ne	28600 <rpl_re_set_registers@@Base+0x54b0>  // b.any
   2862c:	cbz	x26, 28600 <rpl_re_set_registers@@Base+0x54b0>
   28630:	ldr	x12, [x27, #80]
   28634:	cbz	x12, 28600 <rpl_re_set_registers@@Base+0x54b0>
   28638:	ldr	x13, [x12, #8]
   2863c:	cmp	x13, x28
   28640:	b.ne	28600 <rpl_re_set_registers@@Base+0x54b0>  // b.any
   28644:	mov	x13, x8
   28648:	add	x14, x13, #0x1
   2864c:	cmp	x14, #0x1
   28650:	b.lt	288e8 <rpl_re_set_registers@@Base+0x5798>  // b.tstop
   28654:	ldr	x14, [x12, #16]
   28658:	ldr	x15, [x26, #16]
   2865c:	lsl	x16, x13, #3
   28660:	sub	x13, x13, #0x1
   28664:	ldr	x14, [x14, x16]
   28668:	ldr	x15, [x15, x16]
   2866c:	cmp	x14, x15
   28670:	b.eq	28648 <rpl_re_set_registers@@Base+0x54f8>  // b.none
   28674:	b	28600 <rpl_re_set_registers@@Base+0x54b0>
   28678:	str	x0, [sp]
   2867c:	mov	w0, #0x70                  	// #112
   28680:	mov	w1, #0x1                   	// #1
   28684:	stur	w3, [x29, #-20]
   28688:	bl	a6b0 <calloc@plt>
   2868c:	cbz	x0, 28918 <rpl_re_set_registers@@Base+0x57c8>
   28690:	mov	x27, x0
   28694:	add	x9, x0, #0x8
   28698:	cmp	x28, #0x1
   2869c:	str	x28, [x0, #16]
   286a0:	str	x19, [sp, #16]
   286a4:	b.lt	288bc <rpl_re_set_registers@@Base+0x576c>  // b.tstop
   286a8:	lsl	x20, x28, #3
   286ac:	mov	x0, x20
   286b0:	stur	x9, [x29, #-32]
   286b4:	str	x28, [x27, #8]
   286b8:	bl	a540 <malloc@plt>
   286bc:	str	x0, [x27, #24]
   286c0:	cbz	x0, 2892c <rpl_re_set_registers@@Base+0x57dc>
   286c4:	ldr	x26, [x26, #16]
   286c8:	mov	x2, x20
   286cc:	mov	x25, x0
   286d0:	str	x20, [sp, #40]
   286d4:	mov	x1, x26
   286d8:	bl	a210 <memcpy@plt>
   286dc:	ldur	w15, [x29, #-20]
   286e0:	ldur	x16, [x29, #-32]
   286e4:	mov	x20, xzr
   286e8:	mov	x8, xzr
   286ec:	and	w18, w15, #0xf
   286f0:	strb	w18, [x27, #104]
   286f4:	str	x16, [x27, #80]
   286f8:	ldr	x23, [x19]
   286fc:	add	x9, x25, #0x8
   28700:	mov	x21, #0xffffffffffffffff    	// #-1
   28704:	mov	x24, x28
   28708:	mov	x17, x16
   2870c:	str	x9, [sp, #8]
   28710:	stp	x28, x23, [sp, #24]
   28714:	b	28734 <rpl_re_set_registers@@Base+0x55e4>
   28718:	mov	x24, x9
   2871c:	add	x8, x8, #0x1
   28720:	add	x20, x20, #0x1
   28724:	sub	x21, x21, #0x1
   28728:	cmp	x20, x28
   2872c:	add	x25, x25, #0x8
   28730:	b.eq	288d4 <rpl_re_set_registers@@Base+0x5784>  // b.none
   28734:	ldr	x9, [x26, x20, lsl #3]
   28738:	add	x9, x23, x9, lsl #4
   2873c:	ldr	w19, [x9, #8]
   28740:	and	w9, w19, #0x3ffff
   28744:	cmp	w9, #0x1
   28748:	b.eq	28720 <rpl_re_set_registers@@Base+0x55d0>  // b.none
   2874c:	lsr	w11, w19, #15
   28750:	and	w10, w19, #0xff
   28754:	and	w11, w11, #0x20
   28758:	and	w9, w19, #0x3ff00
   2875c:	orr	w18, w18, w11
   28760:	cmp	w10, #0x2
   28764:	strb	w18, [x27, #104]
   28768:	b.eq	2877c <rpl_re_set_registers@@Base+0x562c>  // b.none
   2876c:	cmp	w10, #0x4
   28770:	b.ne	28788 <rpl_re_set_registers@@Base+0x5638>  // b.any
   28774:	mov	w10, #0x40                  	// #64
   28778:	b	28780 <rpl_re_set_registers@@Base+0x5630>
   2877c:	mov	w10, #0x10                  	// #16
   28780:	orr	w18, w18, w10
   28784:	strb	w18, [x27, #104]
   28788:	cbz	w9, 28720 <rpl_re_set_registers@@Base+0x55d0>
   2878c:	cmp	x17, x16
   28790:	b.eq	2879c <rpl_re_set_registers@@Base+0x564c>  // b.none
   28794:	tbz	w15, #0, 28814 <rpl_re_set_registers@@Base+0x56c4>
   28798:	b	28818 <rpl_re_set_registers@@Base+0x56c8>
   2879c:	mov	w0, #0x18                  	// #24
   287a0:	stur	w18, [x29, #-4]
   287a4:	bl	a540 <malloc@plt>
   287a8:	cbz	x0, 28910 <rpl_re_set_registers@@Base+0x57c0>
   287ac:	mov	x8, x28
   287b0:	mov	x28, x26
   287b4:	ldr	x26, [sp, #40]
   287b8:	str	x0, [x27, #80]
   287bc:	stp	x8, x8, [x0]
   287c0:	mov	x23, x0
   287c4:	mov	x0, x26
   287c8:	stur	x24, [x29, #-16]
   287cc:	bl	a540 <malloc@plt>
   287d0:	mov	x24, x23
   287d4:	str	x0, [x23, #16]
   287d8:	cbz	x0, 2890c <rpl_re_set_registers@@Base+0x57bc>
   287dc:	mov	x1, x28
   287e0:	mov	x2, x26
   287e4:	mov	x26, x28
   287e8:	bl	a210 <memcpy@plt>
   287ec:	ldur	w18, [x29, #-4]
   287f0:	ldur	w15, [x29, #-20]
   287f4:	ldur	x16, [x29, #-32]
   287f8:	ldp	x28, x23, [sp, #24]
   287fc:	mov	x17, x24
   28800:	ldur	x24, [x29, #-16]
   28804:	mov	x8, xzr
   28808:	orr	w18, w18, #0xffffff80
   2880c:	strb	w18, [x27, #104]
   28810:	tbnz	w15, #0, 28818 <rpl_re_set_registers@@Base+0x56c8>
   28814:	tbnz	w19, #8, 28830 <rpl_re_set_registers@@Base+0x56e0>
   28818:	tbz	w15, #0, 28820 <rpl_re_set_registers@@Base+0x56d0>
   2881c:	tbnz	w19, #9, 28830 <rpl_re_set_registers@@Base+0x56e0>
   28820:	tbnz	w15, #1, 28828 <rpl_re_set_registers@@Base+0x56d8>
   28824:	tbnz	w19, #12, 28830 <rpl_re_set_registers@@Base+0x56e0>
   28828:	tbnz	w15, #2, 28720 <rpl_re_set_registers@@Base+0x55d0>
   2882c:	tbz	w19, #14, 28720 <rpl_re_set_registers@@Base+0x55d0>
   28830:	subs	x10, x20, x8
   28834:	b.mi	2871c <rpl_re_set_registers@@Base+0x55cc>  // b.first
   28838:	cmp	x24, x10
   2883c:	b.le	2871c <rpl_re_set_registers@@Base+0x55cc>
   28840:	sub	x9, x24, #0x1
   28844:	cmp	x9, x10
   28848:	str	x9, [x27, #16]
   2884c:	b.le	28718 <rpl_re_set_registers@@Base+0x55c8>
   28850:	mvn	x11, x20
   28854:	add	x13, x24, x8
   28858:	add	x11, x13, x11
   2885c:	cmp	x11, #0x4
   28860:	b.cc	28894 <rpl_re_set_registers@@Base+0x5744>  // b.lo, b.ul, b.last
   28864:	and	x12, x11, #0xfffffffffffffffc
   28868:	add	x13, x13, x21
   2886c:	add	x10, x10, x12
   28870:	and	x13, x13, #0xfffffffffffffffc
   28874:	sub	x14, x25, x8, lsl #3
   28878:	ldur	q0, [x14, #8]
   2887c:	ldur	q1, [x14, #24]
   28880:	subs	x13, x13, #0x4
   28884:	stp	q0, q1, [x14], #32
   28888:	b.ne	28878 <rpl_re_set_registers@@Base+0x5728>  // b.any
   2888c:	cmp	x11, x12
   28890:	b.eq	28718 <rpl_re_set_registers@@Base+0x55c8>  // b.none
   28894:	ldr	x11, [sp, #8]
   28898:	add	x11, x11, x10, lsl #3
   2889c:	mvn	x10, x10
   288a0:	add	x10, x10, x24
   288a4:	ldr	x12, [x11]
   288a8:	subs	x10, x10, #0x1
   288ac:	stur	x12, [x11, #-8]
   288b0:	add	x11, x11, #0x8
   288b4:	b.ne	288a4 <rpl_re_set_registers@@Base+0x5754>  // b.any
   288b8:	b	28718 <rpl_re_set_registers@@Base+0x55c8>
   288bc:	ldur	w8, [x29, #-20]
   288c0:	stp	xzr, xzr, [x9]
   288c4:	str	xzr, [x9, #16]
   288c8:	str	x9, [x27, #80]
   288cc:	and	w8, w8, #0xf
   288d0:	strb	w8, [x27, #104]
   288d4:	ldr	x0, [sp, #16]
   288d8:	mov	x1, x27
   288dc:	mov	x2, x22
   288e0:	bl	28938 <rpl_re_set_registers@@Base+0x57e8>
   288e4:	cbnz	w0, 28910 <rpl_re_set_registers@@Base+0x57c0>
   288e8:	mov	x0, x27
   288ec:	ldp	x20, x19, [sp, #160]
   288f0:	ldp	x22, x21, [sp, #144]
   288f4:	ldp	x24, x23, [sp, #128]
   288f8:	ldp	x26, x25, [sp, #112]
   288fc:	ldp	x28, x27, [sp, #96]
   28900:	ldp	x29, x30, [sp, #80]
   28904:	add	sp, sp, #0xb0
   28908:	ret
   2890c:	stp	xzr, xzr, [x24]
   28910:	mov	x0, x27
   28914:	bl	2317c <rpl_re_set_registers@@Base+0x2c>
   28918:	ldr	x9, [sp]
   2891c:	mov	x27, xzr
   28920:	mov	w8, #0xc                   	// #12
   28924:	str	w8, [x9]
   28928:	b	288e8 <rpl_re_set_registers@@Base+0x5798>
   2892c:	mov	x0, x27
   28930:	bl	a960 <free@plt>
   28934:	b	28918 <rpl_re_set_registers@@Base+0x57c8>
   28938:	stp	x29, x30, [sp, #-64]!
   2893c:	stp	x24, x23, [sp, #16]
   28940:	stp	x22, x21, [sp, #32]
   28944:	stp	x20, x19, [sp, #48]
   28948:	ldr	x22, [x1, #16]
   2894c:	mov	x21, x0
   28950:	mov	x29, sp
   28954:	mov	x20, x2
   28958:	lsl	x0, x22, #3
   2895c:	mov	x19, x1
   28960:	str	x2, [x1]
   28964:	stp	x22, xzr, [x1, #32]
   28968:	bl	a540 <malloc@plt>
   2896c:	str	x0, [x19, #48]
   28970:	cbz	x0, 28a74 <rpl_re_set_registers@@Base+0x5924>
   28974:	cmp	x22, #0x1
   28978:	b.lt	289e8 <rpl_re_set_registers@@Base+0x5898>  // b.tstop
   2897c:	mov	x23, xzr
   28980:	b	2899c <rpl_re_set_registers@@Base+0x584c>
   28984:	add	x9, x8, #0x1
   28988:	str	x9, [x19, #40]
   2898c:	str	x24, [x0, x8, lsl #3]
   28990:	add	x23, x23, #0x1
   28994:	cmp	x23, x22
   28998:	b.ge	289e8 <rpl_re_set_registers@@Base+0x5898>  // b.tcont
   2899c:	ldr	x8, [x19, #24]
   289a0:	ldr	x24, [x8, x23, lsl #3]
   289a4:	ldr	x8, [x21]
   289a8:	add	x8, x8, x24, lsl #4
   289ac:	ldrb	w8, [x8, #8]
   289b0:	tbnz	w8, #3, 28990 <rpl_re_set_registers@@Base+0x5840>
   289b4:	ldp	x9, x8, [x19, #32]
   289b8:	cmp	x9, x8
   289bc:	b.ne	28984 <rpl_re_set_registers@@Base+0x5834>  // b.any
   289c0:	lsl	x8, x9, #1
   289c4:	add	x8, x8, #0x2
   289c8:	lsl	x1, x8, #3
   289cc:	str	x8, [x19, #32]
   289d0:	bl	a720 <realloc@plt>
   289d4:	cbz	x0, 28a74 <rpl_re_set_registers@@Base+0x5924>
   289d8:	ldr	x8, [x19, #40]
   289dc:	ldr	x22, [x19, #16]
   289e0:	str	x0, [x19, #48]
   289e4:	b	28984 <rpl_re_set_registers@@Base+0x5834>
   289e8:	ldr	x9, [x21, #136]
   289ec:	ldr	x8, [x21, #64]
   289f0:	mov	w11, #0x18                  	// #24
   289f4:	and	x10, x9, x20
   289f8:	madd	x20, x10, x11, x8
   289fc:	mov	x21, x20
   28a00:	ldr	x11, [x21, #8]!
   28a04:	ldr	x9, [x20]
   28a08:	cmp	x11, x9
   28a0c:	b.le	28a40 <rpl_re_set_registers@@Base+0x58f0>
   28a10:	mov	w11, #0x18                  	// #24
   28a14:	madd	x8, x10, x11, x8
   28a18:	ldr	x8, [x8, #16]
   28a1c:	mov	w0, wzr
   28a20:	add	x10, x9, #0x1
   28a24:	str	x10, [x20]
   28a28:	str	x19, [x8, x9, lsl #3]
   28a2c:	ldp	x20, x19, [sp, #48]
   28a30:	ldp	x22, x21, [sp, #32]
   28a34:	ldp	x24, x23, [sp, #16]
   28a38:	ldp	x29, x30, [sp], #64
   28a3c:	ret
   28a40:	mov	w11, #0x18                  	// #24
   28a44:	madd	x22, x10, x11, x8
   28a48:	ldr	x0, [x22, #16]!
   28a4c:	lsl	x8, x9, #1
   28a50:	add	x23, x8, #0x2
   28a54:	lsl	x1, x23, #3
   28a58:	bl	a720 <realloc@plt>
   28a5c:	cbz	x0, 28a74 <rpl_re_set_registers@@Base+0x5924>
   28a60:	str	x0, [x22]
   28a64:	str	x23, [x21]
   28a68:	ldr	x9, [x20]
   28a6c:	mov	x8, x0
   28a70:	b	28a1c <rpl_re_set_registers@@Base+0x58cc>
   28a74:	mov	w0, #0xc                   	// #12
   28a78:	b	28a2c <rpl_re_set_registers@@Base+0x58dc>
   28a7c:	sub	sp, sp, #0x80
   28a80:	stp	x29, x30, [sp, #32]
   28a84:	stp	x28, x27, [sp, #48]
   28a88:	stp	x26, x25, [sp, #64]
   28a8c:	stp	x24, x23, [sp, #80]
   28a90:	stp	x22, x21, [sp, #96]
   28a94:	stp	x20, x19, [sp, #112]
   28a98:	mov	x24, x0
   28a9c:	ldr	x8, [x24, #40]!
   28aa0:	mov	x19, x0
   28aa4:	mov	x20, x1
   28aa8:	mov	w21, w2
   28aac:	cmp	x8, x1
   28ab0:	add	x29, sp, #0x20
   28ab4:	b.le	28cac <rpl_re_set_registers@@Base+0x5b5c>
   28ab8:	ldr	w8, [x19, #144]
   28abc:	cmp	w8, #0x2
   28ac0:	b.lt	28ac8 <rpl_re_set_registers@@Base+0x5978>  // b.tstop
   28ac4:	str	xzr, [x19, #32]
   28ac8:	ldr	x9, [x19, #80]
   28acc:	ldr	x10, [x19, #96]
   28ad0:	strb	wzr, [x19, #140]
   28ad4:	tst	w21, #0x1
   28ad8:	str	x9, [x19, #88]
   28adc:	str	x10, [x19, #104]
   28ae0:	stp	xzr, xzr, [x24]
   28ae4:	str	xzr, [x24, #16]
   28ae8:	ldrb	w9, [x19, #139]
   28aec:	mov	w10, #0x4                   	// #4
   28af0:	mov	w11, #0x6                   	// #6
   28af4:	mov	x8, xzr
   28af8:	csel	w10, w11, w10, eq  // eq = none
   28afc:	mov	x25, x20
   28b00:	str	w10, [x19, #112]
   28b04:	cbnz	w9, 28b18 <rpl_re_set_registers@@Base+0x59c8>
   28b08:	ldr	x9, [x19]
   28b0c:	mov	x8, xzr
   28b10:	mov	x25, x20
   28b14:	str	x9, [x19, #8]
   28b18:	cbz	x25, 28c2c <rpl_re_set_registers@@Base+0x5adc>
   28b1c:	ldr	x9, [x19, #56]
   28b20:	cmp	x25, x9
   28b24:	b.ge	28cb8 <rpl_re_set_registers@@Base+0x5b68>  // b.tcont
   28b28:	ldrb	w8, [x19, #140]
   28b2c:	cbnz	w8, 28df4 <rpl_re_set_registers@@Base+0x5ca4>
   28b30:	cmp	x25, #0x0
   28b34:	b.le	28b78 <rpl_re_set_registers@@Base+0x5a28>
   28b38:	ldr	x9, [x19, #88]
   28b3c:	sub	x8, x25, #0x1
   28b40:	cmp	x9, x8
   28b44:	b.eq	28eb4 <rpl_re_set_registers@@Base+0x5d64>  // b.none
   28b48:	ldr	w9, [x19, #144]
   28b4c:	cmp	w9, #0x2
   28b50:	b.lt	28b80 <rpl_re_set_registers@@Base+0x5a30>  // b.tstop
   28b54:	ldr	x8, [x19, #16]
   28b58:	mov	x9, x25
   28b5c:	sub	x8, x8, #0x4
   28b60:	ldr	w21, [x8, x9, lsl #2]
   28b64:	cmn	w21, #0x1
   28b68:	b.ne	28ba8 <rpl_re_set_registers@@Base+0x5a58>  // b.any
   28b6c:	sub	x9, x9, #0x1
   28b70:	cmp	x9, #0x0
   28b74:	b.gt	28b60 <rpl_re_set_registers@@Base+0x5a10>
   28b78:	ldr	w8, [x19, #112]
   28b7c:	b	28bd8 <rpl_re_set_registers@@Base+0x5a88>
   28b80:	ldr	x9, [x19, #8]
   28b84:	ldrb	w8, [x9, x8]
   28b88:	ldr	x9, [x19, #128]
   28b8c:	lsr	x10, x8, #3
   28b90:	and	x10, x10, #0x18
   28b94:	ldr	x9, [x9, x10]
   28b98:	lsr	x9, x9, x8
   28b9c:	tbz	w9, #0, 28bcc <rpl_re_set_registers@@Base+0x5a7c>
   28ba0:	mov	w8, #0x1                   	// #1
   28ba4:	b	28bd8 <rpl_re_set_registers@@Base+0x5a88>
   28ba8:	ldrb	w8, [x19, #142]
   28bac:	cbnz	w8, 28fbc <rpl_re_set_registers@@Base+0x5e6c>
   28bb0:	cmp	w21, #0xa
   28bb4:	b.ne	28bd4 <rpl_re_set_registers@@Base+0x5a84>  // b.any
   28bb8:	ldrb	w8, [x19, #141]
   28bbc:	cmp	w8, #0x0
   28bc0:	cset	w8, ne  // ne = any
   28bc4:	lsl	w8, w8, #1
   28bc8:	b	28bd8 <rpl_re_set_registers@@Base+0x5a88>
   28bcc:	cmp	w8, #0xa
   28bd0:	b.eq	28bb8 <rpl_re_set_registers@@Base+0x5a68>  // b.none
   28bd4:	mov	w8, wzr
   28bd8:	ldr	w9, [x19, #144]
   28bdc:	str	w8, [x19, #112]
   28be0:	cmp	w9, #0x2
   28be4:	b.lt	28c00 <rpl_re_set_registers@@Base+0x5ab0>  // b.tstop
   28be8:	ldr	x8, [x19, #48]
   28bec:	ldr	x0, [x19, #16]
   28bf0:	sub	x8, x8, x25
   28bf4:	add	x1, x0, x25, lsl #2
   28bf8:	lsl	x2, x8, #2
   28bfc:	bl	a220 <memmove@plt>
   28c00:	ldrb	w8, [x19, #139]
   28c04:	cbnz	w8, 28e9c <rpl_re_set_registers@@Base+0x5d4c>
   28c08:	ldr	q0, [x19, #48]
   28c0c:	dup	v1.2d, x25
   28c10:	sub	v0.2d, v0.2d, v1.2d
   28c14:	str	q0, [x19, #48]
   28c18:	ldrb	w8, [x19, #139]
   28c1c:	cbnz	w8, 28c2c <rpl_re_set_registers@@Base+0x5adc>
   28c20:	ldr	x8, [x19, #8]
   28c24:	add	x8, x8, x25
   28c28:	str	x8, [x19, #8]
   28c2c:	ldr	x8, [x19, #88]
   28c30:	ldr	x10, [x19, #104]
   28c34:	ldr	w11, [x19, #144]
   28c38:	str	x20, [x19, #40]
   28c3c:	sub	x9, x8, x25
   28c40:	sub	x8, x10, x25
   28c44:	cmp	w11, #0x2
   28c48:	str	x9, [x19, #88]
   28c4c:	str	x8, [x19, #104]
   28c50:	b.lt	28c6c <rpl_re_set_registers@@Base+0x5b1c>  // b.tstop
   28c54:	ldrb	w8, [x19, #136]
   28c58:	cbz	w8, 28c7c <rpl_re_set_registers@@Base+0x5b2c>
   28c5c:	mov	x0, x19
   28c60:	bl	231e4 <rpl_re_set_registers@@Base+0x94>
   28c64:	cbnz	w0, 28c8c <rpl_re_set_registers@@Base+0x5b3c>
   28c68:	b	28c84 <rpl_re_set_registers@@Base+0x5b34>
   28c6c:	ldrb	w8, [x19, #139]
   28c70:	cbnz	w8, 28ec4 <rpl_re_set_registers@@Base+0x5d74>
   28c74:	str	x9, [x19, #48]
   28c78:	b	28c84 <rpl_re_set_registers@@Base+0x5b34>
   28c7c:	mov	x0, x19
   28c80:	bl	23888 <rpl_re_set_registers@@Base+0x738>
   28c84:	mov	w0, wzr
   28c88:	str	xzr, [x19, #72]
   28c8c:	ldp	x20, x19, [sp, #112]
   28c90:	ldp	x22, x21, [sp, #96]
   28c94:	ldp	x24, x23, [sp, #80]
   28c98:	ldp	x26, x25, [sp, #64]
   28c9c:	ldp	x28, x27, [sp, #48]
   28ca0:	ldp	x29, x30, [sp, #32]
   28ca4:	add	sp, sp, #0x80
   28ca8:	ret
   28cac:	sub	x25, x20, x8
   28cb0:	cbnz	x25, 28b1c <rpl_re_set_registers@@Base+0x59cc>
   28cb4:	b	28c2c <rpl_re_set_registers@@Base+0x5adc>
   28cb8:	ldrb	w10, [x19, #140]
   28cbc:	ldr	x26, [x19, #48]
   28cc0:	cbnz	w10, 292b4 <rpl_re_set_registers@@Base+0x6164>
   28cc4:	ldr	w10, [x19, #144]
   28cc8:	str	xzr, [x19, #48]
   28ccc:	cmp	w10, #0x2
   28cd0:	b.lt	28f28 <rpl_re_set_registers@@Base+0x5dd8>  // b.tstop
   28cd4:	ldrb	w11, [x19, #137]
   28cd8:	cbz	w11, 28d80 <rpl_re_set_registers@@Base+0x5c30>
   28cdc:	ldr	x13, [x19]
   28ce0:	sub	x10, x25, x10
   28ce4:	add	x11, x13, x8
   28ce8:	add	x10, x11, x10
   28cec:	cmp	x10, x13
   28cf0:	add	x22, x11, x25
   28cf4:	csel	x12, x13, x10, cc  // cc = lo, ul, last
   28cf8:	add	x10, x13, x25
   28cfc:	add	x13, x10, x8
   28d00:	sub	x13, x13, #0x1
   28d04:	cmp	x13, x12
   28d08:	b.cc	28d80 <rpl_re_set_registers@@Base+0x5c30>  // b.lo, b.ul, b.last
   28d0c:	ldrb	w13, [x13]
   28d10:	sub	x10, x10, #0x1
   28d14:	and	w13, w13, #0xc0
   28d18:	cmp	w13, #0x80
   28d1c:	b.eq	28cfc <rpl_re_set_registers@@Base+0x5bac>  // b.none
   28d20:	ldr	x12, [x19, #88]
   28d24:	ldr	x9, [x19, #120]
   28d28:	add	x23, x10, x8
   28d2c:	mov	x1, x23
   28d30:	add	x11, x11, x12
   28d34:	sub	x2, x11, x23
   28d38:	cbnz	x9, 2935c <rpl_re_set_registers@@Base+0x620c>
   28d3c:	sub	x0, x29, #0xc
   28d40:	sub	x3, x29, #0x8
   28d44:	stur	xzr, [x29, #-8]
   28d48:	bl	a330 <rpl_mbrtowc@plt>
   28d4c:	sub	x8, x22, x23
   28d50:	subs	x8, x0, x8
   28d54:	mov	w9, #0xffffffff            	// #-1
   28d58:	b.cc	28d70 <rpl_re_set_registers@@Base+0x5c20>  // b.lo, b.ul, b.last
   28d5c:	cmn	x0, #0x3
   28d60:	b.hi	28d70 <rpl_re_set_registers@@Base+0x5c20>  // b.pmore
   28d64:	str	xzr, [x19, #32]
   28d68:	str	x8, [x19, #48]
   28d6c:	ldur	w9, [x29, #-12]
   28d70:	cmn	w9, #0x1
   28d74:	b.ne	28fec <rpl_re_set_registers@@Base+0x5e9c>  // b.any
   28d78:	ldr	x8, [x19, #40]
   28d7c:	ldr	x9, [x19, #56]
   28d80:	add	x27, x9, x8
   28d84:	subs	x8, x27, x20
   28d88:	b.ge	28fd8 <rpl_re_set_registers@@Base+0x5e88>  // b.tcont
   28d8c:	add	x22, x19, #0x20
   28d90:	ldr	x8, [x19, #80]
   28d94:	ldr	x9, [x19]
   28d98:	ldr	x28, [x19, #32]
   28d9c:	sub	x0, x29, #0x8
   28da0:	sub	x23, x8, x27
   28da4:	add	x1, x9, x27
   28da8:	mov	x2, x23
   28dac:	mov	x3, x22
   28db0:	bl	a330 <rpl_mbrtowc@plt>
   28db4:	sub	x8, x0, #0x1
   28db8:	cmn	x8, #0x3
   28dbc:	b.cs	28dd4 <rpl_re_set_registers@@Base+0x5c84>  // b.hs, b.nlast
   28dc0:	ldur	w9, [x29, #-8]
   28dc4:	add	x27, x0, x27
   28dc8:	subs	x8, x27, x20
   28dcc:	b.lt	28d90 <rpl_re_set_registers@@Base+0x5c40>  // b.tstop
   28dd0:	b	28fe0 <rpl_re_set_registers@@Base+0x5e90>
   28dd4:	mov	w9, wzr
   28dd8:	cbz	x23, 28de8 <rpl_re_set_registers@@Base+0x5c98>
   28ddc:	cbz	x0, 28de8 <rpl_re_set_registers@@Base+0x5c98>
   28de0:	ldr	x8, [x19]
   28de4:	ldrb	w9, [x8, x27]
   28de8:	str	x28, [x22]
   28dec:	mov	w0, #0x1                   	// #1
   28df0:	b	28dc4 <rpl_re_set_registers@@Base+0x5c74>
   28df4:	ldr	x10, [x19, #48]
   28df8:	ldr	x9, [x19, #24]
   28dfc:	mov	x11, xzr
   28e00:	b	28e10 <rpl_re_set_registers@@Base+0x5cc0>
   28e04:	cmp	x11, x13
   28e08:	mov	x10, x13
   28e0c:	b.ge	28e40 <rpl_re_set_registers@@Base+0x5cf0>  // b.tcont
   28e10:	add	x8, x11, x10
   28e14:	cmp	x8, #0x0
   28e18:	cinc	x8, x8, lt  // lt = tstop
   28e1c:	asr	x8, x8, #1
   28e20:	ldr	x12, [x9, x8, lsl #3]
   28e24:	mov	x13, x8
   28e28:	cmp	x12, x25
   28e2c:	b.gt	28e04 <rpl_re_set_registers@@Base+0x5cb4>
   28e30:	b.ge	28e40 <rpl_re_set_registers@@Base+0x5cf0>  // b.tcont
   28e34:	add	x11, x8, #0x1
   28e38:	mov	x13, x10
   28e3c:	b	28e04 <rpl_re_set_registers@@Base+0x5cb4>
   28e40:	cmp	x12, x25
   28e44:	cinc	x22, x8, lt  // lt = tstop
   28e48:	cset	w9, lt  // lt = tstop
   28e4c:	cmp	x22, #0x0
   28e50:	b.le	28e94 <rpl_re_set_registers@@Base+0x5d44>
   28e54:	ldr	x11, [x19, #88]
   28e58:	sub	x10, x22, #0x1
   28e5c:	cmp	x11, x10
   28e60:	b.eq	292d8 <rpl_re_set_registers@@Base+0x6188>  // b.none
   28e64:	ldr	w11, [x19, #144]
   28e68:	cmp	w11, #0x2
   28e6c:	b.lt	28f68 <rpl_re_set_registers@@Base+0x5e18>  // b.tstop
   28e70:	ldr	x10, [x19, #16]
   28e74:	add	x8, x9, x8
   28e78:	sub	x9, x10, #0x4
   28e7c:	ldr	w21, [x9, x8, lsl #2]
   28e80:	cmn	w21, #0x1
   28e84:	b.ne	28f98 <rpl_re_set_registers@@Base+0x5e48>  // b.any
   28e88:	sub	x8, x8, #0x1
   28e8c:	cmp	x8, #0x0
   28e90:	b.gt	28e7c <rpl_re_set_registers@@Base+0x5d2c>
   28e94:	ldr	w9, [x19, #112]
   28e98:	b	290e0 <rpl_re_set_registers@@Base+0x5f90>
   28e9c:	ldr	x0, [x19, #8]
   28ea0:	ldr	x8, [x19, #48]
   28ea4:	add	x1, x0, x25
   28ea8:	sub	x2, x8, x25
   28eac:	bl	a220 <memmove@plt>
   28eb0:	b	28c08 <rpl_re_set_registers@@Base+0x5ab8>
   28eb4:	and	w8, w21, #0x2
   28eb8:	mov	w9, #0xa                   	// #10
   28ebc:	eor	w8, w8, w9
   28ec0:	b	28bd8 <rpl_re_set_registers@@Base+0x5a88>
   28ec4:	ldrb	w8, [x19, #136]
   28ec8:	cbz	w8, 2905c <rpl_re_set_registers@@Base+0x5f0c>
   28ecc:	ldr	x8, [x19, #64]
   28ed0:	ldr	x21, [x19, #48]
   28ed4:	cmp	x8, x9
   28ed8:	csel	x22, x9, x8, gt
   28edc:	cmp	x21, x22
   28ee0:	b.ge	28f90 <rpl_re_set_registers@@Base+0x5e40>  // b.tcont
   28ee4:	bl	a730 <__ctype_toupper_loc@plt>
   28ee8:	ldr	x8, [x19]
   28eec:	ldr	x9, [x19, #120]
   28ef0:	add	x8, x8, x20
   28ef4:	ldrb	w8, [x8, x21]
   28ef8:	cbnz	x9, 28f20 <rpl_re_set_registers@@Base+0x5dd0>
   28efc:	ldr	x9, [x0]
   28f00:	ldr	x10, [x19, #8]
   28f04:	ldr	w8, [x9, w8, uxtw #2]
   28f08:	strb	w8, [x10, x21]
   28f0c:	add	x21, x21, #0x1
   28f10:	cmp	x21, x22
   28f14:	b.ge	28f90 <rpl_re_set_registers@@Base+0x5e40>  // b.tcont
   28f18:	ldr	x20, [x24]
   28f1c:	b	28ee8 <rpl_re_set_registers@@Base+0x5d98>
   28f20:	ldrb	w8, [x9, x8]
   28f24:	b	28efc <rpl_re_set_registers@@Base+0x5dac>
   28f28:	ldr	x9, [x19]
   28f2c:	add	x8, x25, x8
   28f30:	add	x8, x8, x9
   28f34:	ldr	x9, [x19, #120]
   28f38:	ldurb	w8, [x8, #-1]
   28f3c:	str	xzr, [x19, #56]
   28f40:	cbz	x9, 28f48 <rpl_re_set_registers@@Base+0x5df8>
   28f44:	ldrb	w8, [x9, x8]
   28f48:	ldr	x9, [x19, #128]
   28f4c:	lsr	x10, x8, #3
   28f50:	and	x10, x10, #0x18
   28f54:	ldr	x9, [x9, x10]
   28f58:	lsr	x9, x9, x8
   28f5c:	tbz	w9, #0, 290b8 <rpl_re_set_registers@@Base+0x5f68>
   28f60:	mov	w8, #0x1                   	// #1
   28f64:	b	29274 <rpl_re_set_registers@@Base+0x6124>
   28f68:	ldr	x8, [x19, #8]
   28f6c:	ldr	x9, [x19, #128]
   28f70:	ldrb	w8, [x8, x10]
   28f74:	lsr	x10, x8, #3
   28f78:	and	x10, x10, #0x18
   28f7c:	ldr	x9, [x9, x10]
   28f80:	lsr	x9, x9, x8
   28f84:	tbz	w9, #0, 290d4 <rpl_re_set_registers@@Base+0x5f84>
   28f88:	mov	w9, #0x1                   	// #1
   28f8c:	b	290e0 <rpl_re_set_registers@@Base+0x5f90>
   28f90:	stp	x21, x21, [x19, #48]
   28f94:	b	28c84 <rpl_re_set_registers@@Base+0x5b34>
   28f98:	ldrb	w8, [x19, #142]
   28f9c:	cbnz	w8, 2931c <rpl_re_set_registers@@Base+0x61cc>
   28fa0:	cmp	w21, #0xa
   28fa4:	b.ne	290dc <rpl_re_set_registers@@Base+0x5f8c>  // b.any
   28fa8:	ldrb	w8, [x19, #141]
   28fac:	cmp	w8, #0x0
   28fb0:	cset	w8, ne  // ne = any
   28fb4:	lsl	w9, w8, #1
   28fb8:	b	290e0 <rpl_re_set_registers@@Base+0x5f90>
   28fbc:	mov	w0, w21
   28fc0:	bl	ac10 <iswalnum@plt>
   28fc4:	cmp	w21, #0x5f
   28fc8:	mov	w8, #0x1                   	// #1
   28fcc:	b.eq	28bd8 <rpl_re_set_registers@@Base+0x5a88>  // b.none
   28fd0:	cbz	w0, 28bb0 <rpl_re_set_registers@@Base+0x5a60>
   28fd4:	b	28bd8 <rpl_re_set_registers@@Base+0x5a88>
   28fd8:	str	x8, [x19, #48]
   28fdc:	b	29010 <rpl_re_set_registers@@Base+0x5ec0>
   28fe0:	cmn	w9, #0x1
   28fe4:	str	x8, [x19, #48]
   28fe8:	b.eq	29010 <rpl_re_set_registers@@Base+0x5ec0>  // b.none
   28fec:	ldrb	w8, [x19, #142]
   28ff0:	cbnz	w8, 29338 <rpl_re_set_registers@@Base+0x61e8>
   28ff4:	cmp	w9, #0xa
   28ff8:	b.ne	2928c <rpl_re_set_registers@@Base+0x613c>  // b.any
   28ffc:	ldrb	w8, [x19, #141]
   29000:	cmp	w8, #0x0
   29004:	cset	w8, ne  // ne = any
   29008:	lsl	w8, w8, #1
   2900c:	b	29290 <rpl_re_set_registers@@Base+0x6140>
   29010:	cmp	x26, #0x0
   29014:	b.le	29054 <rpl_re_set_registers@@Base+0x5f04>
   29018:	ldr	x9, [x19, #88]
   2901c:	sub	x8, x26, #0x1
   29020:	cmp	x9, x8
   29024:	b.eq	2930c <rpl_re_set_registers@@Base+0x61bc>  // b.none
   29028:	ldr	w9, [x19, #144]
   2902c:	cmp	w9, #0x2
   29030:	b.lt	29234 <rpl_re_set_registers@@Base+0x60e4>  // b.tstop
   29034:	ldr	x8, [x19, #16]
   29038:	sub	x8, x8, #0x4
   2903c:	ldr	w21, [x8, x26, lsl #2]
   29040:	cmn	w21, #0x1
   29044:	b.ne	2927c <rpl_re_set_registers@@Base+0x612c>  // b.any
   29048:	sub	x26, x26, #0x1
   2904c:	cmp	x26, #0x0
   29050:	b.gt	2903c <rpl_re_set_registers@@Base+0x5eec>
   29054:	ldr	w8, [x19, #112]
   29058:	b	29290 <rpl_re_set_registers@@Base+0x6140>
   2905c:	ldr	x10, [x19, #120]
   29060:	cbz	x10, 28c84 <rpl_re_set_registers@@Base+0x5b34>
   29064:	ldr	x11, [x19, #64]
   29068:	ldr	x8, [x19, #48]
   2906c:	cmp	x11, x9
   29070:	csel	x9, x9, x11, gt
   29074:	cmp	x8, x9
   29078:	b.ge	2925c <rpl_re_set_registers@@Base+0x610c>  // b.tcont
   2907c:	ldp	x11, x13, [x19]
   29080:	add	x12, x8, x20
   29084:	ldrb	w11, [x11, x12]
   29088:	ldrb	w10, [x10, x11]
   2908c:	strb	w10, [x13, x8]
   29090:	add	x8, x8, #0x1
   29094:	cmp	x8, x9
   29098:	b.ge	2925c <rpl_re_set_registers@@Base+0x610c>  // b.tcont
   2909c:	ldr	x10, [x19, #40]
   290a0:	ldp	x11, x13, [x19]
   290a4:	ldr	x12, [x19, #120]
   290a8:	add	x10, x11, x10
   290ac:	ldrb	w10, [x10, x8]
   290b0:	ldrb	w10, [x12, x10]
   290b4:	b	2908c <rpl_re_set_registers@@Base+0x5f3c>
   290b8:	cmp	w8, #0xa
   290bc:	b.ne	29270 <rpl_re_set_registers@@Base+0x6120>  // b.any
   290c0:	ldrb	w8, [x19, #141]
   290c4:	cmp	w8, #0x0
   290c8:	cset	w8, ne  // ne = any
   290cc:	lsl	w8, w8, #1
   290d0:	b	29274 <rpl_re_set_registers@@Base+0x6124>
   290d4:	cmp	w8, #0xa
   290d8:	b.eq	28fa8 <rpl_re_set_registers@@Base+0x5e58>  // b.none
   290dc:	mov	w9, wzr
   290e0:	ldr	x8, [x19, #48]
   290e4:	cmp	x22, x25
   290e8:	str	w9, [x19, #112]
   290ec:	b.ne	29178 <rpl_re_set_registers@@Base+0x6028>  // b.any
   290f0:	subs	x9, x8, x25
   290f4:	b.le	29178 <rpl_re_set_registers@@Base+0x6028>
   290f8:	ldr	x10, [x19, #24]
   290fc:	ldr	x10, [x10, x25, lsl #3]
   29100:	cmp	x10, x25
   29104:	b.ne	29178 <rpl_re_set_registers@@Base+0x6028>  // b.any
   29108:	ldr	x0, [x19, #16]
   2910c:	lsl	x2, x9, #2
   29110:	add	x1, x0, x25, lsl #2
   29114:	bl	a220 <memmove@plt>
   29118:	ldr	x0, [x19, #8]
   2911c:	ldr	x8, [x19, #48]
   29120:	add	x1, x0, x25
   29124:	sub	x2, x8, x25
   29128:	bl	a220 <memmove@plt>
   2912c:	ldr	q0, [x19, #48]
   29130:	dup	v1.2d, x25
   29134:	sub	v0.2d, v0.2d, v1.2d
   29138:	fmov	x8, d0
   2913c:	cmp	x8, #0x1
   29140:	str	q0, [x19, #48]
   29144:	b.lt	28c18 <rpl_re_set_registers@@Base+0x5ac8>  // b.tstop
   29148:	ldr	x9, [x19, #24]
   2914c:	mov	x8, xzr
   29150:	add	x10, x9, x25, lsl #3
   29154:	lsl	x11, x8, #3
   29158:	ldr	x12, [x10, x11]
   2915c:	add	x8, x8, #0x1
   29160:	sub	x12, x12, x25
   29164:	str	x12, [x9, x11]
   29168:	ldr	x11, [x19, #48]
   2916c:	cmp	x8, x11
   29170:	b.lt	29154 <rpl_re_set_registers@@Base+0x6004>  // b.tstop
   29174:	b	28c18 <rpl_re_set_registers@@Base+0x5ac8>
   29178:	ldr	x9, [x19, #80]
   2917c:	ldr	x10, [x19, #96]
   29180:	sub	x11, x25, x20
   29184:	strb	wzr, [x19, #140]
   29188:	add	x9, x11, x9
   2918c:	add	x10, x11, x10
   29190:	str	x9, [x19, #88]
   29194:	str	x10, [x19, #104]
   29198:	mov	x9, x22
   2919c:	subs	x22, x22, #0x1
   291a0:	b.lt	291b8 <rpl_re_set_registers@@Base+0x6068>  // b.tstop
   291a4:	ldr	x10, [x19, #24]
   291a8:	add	x10, x10, x9, lsl #3
   291ac:	ldur	x10, [x10, #-8]
   291b0:	cmp	x10, x25
   291b4:	b.eq	29198 <rpl_re_set_registers@@Base+0x6048>  // b.none
   291b8:	cmp	x9, x8
   291bc:	b.ge	291e0 <rpl_re_set_registers@@Base+0x6090>  // b.tcont
   291c0:	ldr	x10, [x19, #16]
   291c4:	ldr	w11, [x10, x9, lsl #2]
   291c8:	cmn	w11, #0x1
   291cc:	b.ne	291e0 <rpl_re_set_registers@@Base+0x6090>  // b.any
   291d0:	add	x9, x9, #0x1
   291d4:	cmp	x8, x9
   291d8:	b.ne	291c4 <rpl_re_set_registers@@Base+0x6074>  // b.any
   291dc:	b	291e8 <rpl_re_set_registers@@Base+0x6098>
   291e0:	cmp	x9, x8
   291e4:	b.ne	291f4 <rpl_re_set_registers@@Base+0x60a4>  // b.any
   291e8:	mov	x8, xzr
   291ec:	stp	xzr, xzr, [x19, #48]
   291f0:	b	28c18 <rpl_re_set_registers@@Base+0x5ac8>
   291f4:	ldr	x8, [x19, #24]
   291f8:	ldr	x8, [x8, x9, lsl #3]
   291fc:	subs	x21, x8, x25
   29200:	str	x21, [x19, #48]
   29204:	b.eq	29264 <rpl_re_set_registers@@Base+0x6114>  // b.none
   29208:	cmp	x21, #0x1
   2920c:	b.lt	29220 <rpl_re_set_registers@@Base+0x60d0>  // b.tstop
   29210:	ldr	x0, [x19, #16]
   29214:	lsl	x2, x21, #2
   29218:	mov	w1, #0xff                  	// #255
   2921c:	bl	a630 <memset@plt>
   29220:	ldr	x0, [x19, #8]
   29224:	mov	w1, #0xff                  	// #255
   29228:	mov	x2, x21
   2922c:	bl	a630 <memset@plt>
   29230:	b	2929c <rpl_re_set_registers@@Base+0x614c>
   29234:	ldr	x9, [x19, #8]
   29238:	ldrb	w8, [x9, x8]
   2923c:	ldr	x9, [x19, #128]
   29240:	lsr	x10, x8, #3
   29244:	and	x10, x10, #0x18
   29248:	ldr	x9, [x9, x10]
   2924c:	lsr	x9, x9, x8
   29250:	tbz	w9, #0, 292a8 <rpl_re_set_registers@@Base+0x6158>
   29254:	mov	w8, #0x1                   	// #1
   29258:	b	29290 <rpl_re_set_registers@@Base+0x6140>
   2925c:	stp	x8, x8, [x19, #48]
   29260:	b	28c84 <rpl_re_set_registers@@Base+0x5b34>
   29264:	mov	x8, xzr
   29268:	str	xzr, [x19, #56]
   2926c:	b	28c18 <rpl_re_set_registers@@Base+0x5ac8>
   29270:	mov	w8, wzr
   29274:	str	w8, [x19, #112]
   29278:	b	28c18 <rpl_re_set_registers@@Base+0x5ac8>
   2927c:	ldrb	w8, [x19, #142]
   29280:	cbnz	w8, 293a0 <rpl_re_set_registers@@Base+0x6250>
   29284:	cmp	w21, #0xa
   29288:	b.eq	28ffc <rpl_re_set_registers@@Base+0x5eac>  // b.none
   2928c:	mov	w8, wzr
   29290:	ldr	x21, [x19, #48]
   29294:	str	w8, [x19, #112]
   29298:	cbnz	x21, 292e8 <rpl_re_set_registers@@Base+0x6198>
   2929c:	ldr	x8, [x19, #48]
   292a0:	str	x8, [x19, #56]
   292a4:	b	28c18 <rpl_re_set_registers@@Base+0x5ac8>
   292a8:	cmp	w8, #0xa
   292ac:	b.ne	2928c <rpl_re_set_registers@@Base+0x613c>  // b.any
   292b0:	b	28ffc <rpl_re_set_registers@@Base+0x5eac>
   292b4:	ldr	x10, [x19, #80]
   292b8:	ldr	x11, [x19, #96]
   292bc:	sub	x12, x25, x20
   292c0:	strb	wzr, [x19, #140]
   292c4:	add	x10, x12, x10
   292c8:	add	x11, x12, x11
   292cc:	str	x10, [x19, #88]
   292d0:	str	x11, [x19, #104]
   292d4:	b	28cc4 <rpl_re_set_registers@@Base+0x5b74>
   292d8:	and	w8, w21, #0x2
   292dc:	mov	w9, #0xa                   	// #10
   292e0:	eor	w9, w8, w9
   292e4:	b	290e0 <rpl_re_set_registers@@Base+0x5f90>
   292e8:	cmp	x21, #0x1
   292ec:	b.lt	29300 <rpl_re_set_registers@@Base+0x61b0>  // b.tstop
   292f0:	ldr	x0, [x19, #16]
   292f4:	lsl	x2, x21, #2
   292f8:	mov	w1, #0xff                  	// #255
   292fc:	bl	a630 <memset@plt>
   29300:	ldrb	w8, [x19, #139]
   29304:	cbnz	w8, 29220 <rpl_re_set_registers@@Base+0x60d0>
   29308:	b	2929c <rpl_re_set_registers@@Base+0x614c>
   2930c:	and	w8, w21, #0x2
   29310:	mov	w9, #0xa                   	// #10
   29314:	eor	w8, w8, w9
   29318:	b	29290 <rpl_re_set_registers@@Base+0x6140>
   2931c:	mov	w0, w21
   29320:	bl	ac10 <iswalnum@plt>
   29324:	cmp	w21, #0x5f
   29328:	mov	w9, #0x1                   	// #1
   2932c:	b.eq	290e0 <rpl_re_set_registers@@Base+0x5f90>  // b.none
   29330:	cbz	w0, 28fa0 <rpl_re_set_registers@@Base+0x5e50>
   29334:	b	290e0 <rpl_re_set_registers@@Base+0x5f90>
   29338:	mov	w0, w9
   2933c:	mov	w21, w9
   29340:	bl	ac10 <iswalnum@plt>
   29344:	cmp	w21, #0x5f
   29348:	mov	w8, #0x1                   	// #1
   2934c:	b.eq	29290 <rpl_re_set_registers@@Base+0x6140>  // b.none
   29350:	mov	w9, w21
   29354:	cbz	w0, 28ff4 <rpl_re_set_registers@@Base+0x5ea4>
   29358:	b	29290 <rpl_re_set_registers@@Base+0x6140>
   2935c:	cmp	x2, #0x6
   29360:	mov	w11, #0x6                   	// #6
   29364:	csel	x11, x2, x11, lt  // lt = tstop
   29368:	cmp	w11, #0x1
   2936c:	add	x1, sp, #0xc
   29370:	b.lt	28d3c <rpl_re_set_registers@@Base+0x5bec>  // b.tstop
   29374:	sxtw	x11, w11
   29378:	sub	x12, x1, #0x1
   2937c:	add	x13, x8, x11
   29380:	add	x13, x10, x13
   29384:	ldurb	w13, [x13, #-1]
   29388:	add	x1, sp, #0xc
   2938c:	ldrb	w13, [x9, x13]
   29390:	strb	w13, [x12, x11]
   29394:	subs	x11, x11, #0x1
   29398:	b.gt	2937c <rpl_re_set_registers@@Base+0x622c>
   2939c:	b	28d3c <rpl_re_set_registers@@Base+0x5bec>
   293a0:	mov	w0, w21
   293a4:	bl	ac10 <iswalnum@plt>
   293a8:	cmp	w21, #0x5f
   293ac:	mov	w8, #0x1                   	// #1
   293b0:	b.eq	29290 <rpl_re_set_registers@@Base+0x6140>  // b.none
   293b4:	cbz	w0, 29284 <rpl_re_set_registers@@Base+0x6134>
   293b8:	b	29290 <rpl_re_set_registers@@Base+0x6140>
   293bc:	stp	x29, x30, [sp, #-64]!
   293c0:	stp	x22, x21, [sp, #32]
   293c4:	stp	x20, x19, [sp, #48]
   293c8:	ldr	x8, [x0, #232]
   293cc:	mov	x19, x0
   293d0:	str	x23, [sp, #16]
   293d4:	mov	x29, sp
   293d8:	cmp	x8, #0x1
   293dc:	b.lt	29464 <rpl_re_set_registers@@Base+0x6314>  // b.tstop
   293e0:	mov	x22, xzr
   293e4:	b	29400 <rpl_re_set_registers@@Base+0x62b0>
   293e8:	mov	x0, x20
   293ec:	bl	a960 <free@plt>
   293f0:	ldr	x8, [x19, #232]
   293f4:	add	x22, x22, #0x1
   293f8:	cmp	x22, x8
   293fc:	b.ge	29464 <rpl_re_set_registers@@Base+0x6314>  // b.tcont
   29400:	ldr	x8, [x19, #248]
   29404:	ldr	x20, [x8, x22, lsl #3]
   29408:	ldr	x8, [x20, #32]
   2940c:	cmp	x8, #0x1
   29410:	b.lt	29440 <rpl_re_set_registers@@Base+0x62f0>  // b.tstop
   29414:	mov	x23, xzr
   29418:	ldr	x8, [x20, #40]
   2941c:	ldr	x21, [x8, x23, lsl #3]
   29420:	ldr	x0, [x21, #32]
   29424:	bl	a960 <free@plt>
   29428:	mov	x0, x21
   2942c:	bl	a960 <free@plt>
   29430:	ldr	x8, [x20, #32]
   29434:	add	x23, x23, #0x1
   29438:	cmp	x23, x8
   2943c:	b.lt	29418 <rpl_re_set_registers@@Base+0x62c8>  // b.tstop
   29440:	ldr	x0, [x20, #40]
   29444:	bl	a960 <free@plt>
   29448:	ldr	x8, [x20, #16]
   2944c:	cbz	x8, 293e8 <rpl_re_set_registers@@Base+0x6298>
   29450:	ldr	x0, [x8, #16]
   29454:	bl	a960 <free@plt>
   29458:	ldr	x0, [x20, #16]
   2945c:	bl	a960 <free@plt>
   29460:	b	293e8 <rpl_re_set_registers@@Base+0x6298>
   29464:	str	xzr, [x19, #232]
   29468:	str	xzr, [x19, #200]
   2946c:	ldp	x20, x19, [sp, #48]
   29470:	ldp	x22, x21, [sp, #32]
   29474:	ldr	x23, [sp, #16]
   29478:	ldp	x29, x30, [sp], #64
   2947c:	ret
   29480:	stp	x29, x30, [sp, #-96]!
   29484:	stp	x28, x27, [sp, #16]
   29488:	stp	x26, x25, [sp, #32]
   2948c:	stp	x24, x23, [sp, #48]
   29490:	stp	x22, x21, [sp, #64]
   29494:	stp	x20, x19, [sp, #80]
   29498:	mov	x29, sp
   2949c:	sub	sp, sp, #0x60
   294a0:	adrp	x8, 31000 <vasnprintf@@Base+0x324c>
   294a4:	add	x8, x8, #0x6c8
   294a8:	ldr	q0, [x8]
   294ac:	ldr	x8, [x8, #16]
   294b0:	ldr	x26, [x0]
   294b4:	mov	x20, x3
   294b8:	mov	x21, x2
   294bc:	mov	x22, x1
   294c0:	stur	q0, [x29, #-32]
   294c4:	stur	x8, [x29, #-16]
   294c8:	tbz	w4, #0, 294e4 <rpl_re_set_registers@@Base+0x6394>
   294cc:	mov	w0, #0x60                  	// #96
   294d0:	bl	a540 <malloc@plt>
   294d4:	stur	x0, [x29, #-16]
   294d8:	cbz	x0, 29db8 <rpl_re_set_registers@@Base+0x6c68>
   294dc:	sub	x19, x29, #0x20
   294e0:	b	294e8 <rpl_re_set_registers@@Base+0x6398>
   294e4:	mov	x19, xzr
   294e8:	ldr	x23, [x26, #144]
   294ec:	lsl	x24, x21, #4
   294f0:	cmp	x24, #0xfbf
   294f4:	b.hi	29514 <rpl_re_set_registers@@Base+0x63c4>  // b.pmore
   294f8:	add	x9, x24, #0xf
   294fc:	mov	x8, sp
   29500:	and	x9, x9, #0xfffffffffffffff0
   29504:	sub	x0, x8, x9
   29508:	mov	sp, x0
   2950c:	stur	wzr, [x29, #-60]
   29510:	b	29528 <rpl_re_set_registers@@Base+0x63d8>
   29514:	mov	x0, x24
   29518:	bl	a540 <malloc@plt>
   2951c:	cbz	x0, 29d64 <rpl_re_set_registers@@Base+0x6c14>
   29520:	mov	w8, #0x1                   	// #1
   29524:	stur	w8, [x29, #-60]
   29528:	mov	x1, x20
   2952c:	mov	x2, x24
   29530:	stur	x0, [x29, #-56]
   29534:	bl	a210 <memcpy@plt>
   29538:	ldp	x25, x8, [x20]
   2953c:	cmp	x25, x8
   29540:	b.le	295b4 <rpl_re_set_registers@@Base+0x6464>
   29544:	mov	x24, xzr
   29548:	mov	x0, x24
   2954c:	bl	a960 <free@plt>
   29550:	ldur	w8, [x29, #-60]
   29554:	cbz	w8, 29560 <rpl_re_set_registers@@Base+0x6410>
   29558:	ldur	x0, [x29, #-56]
   2955c:	bl	a960 <free@plt>
   29560:	cbz	x19, 29d5c <rpl_re_set_registers@@Base+0x6c0c>
   29564:	ldr	x8, [x19]
   29568:	ldr	x0, [x19, #16]
   2956c:	cmp	x8, #0x1
   29570:	b.lt	29d58 <rpl_re_set_registers@@Base+0x6c08>  // b.tstop
   29574:	mov	x20, xzr
   29578:	mov	x21, xzr
   2957c:	add	x8, x0, x20
   29580:	ldr	x0, [x8, #40]
   29584:	bl	a960 <free@plt>
   29588:	ldr	x8, [x19, #16]
   2958c:	add	x8, x8, x20
   29590:	ldr	x0, [x8, #16]
   29594:	bl	a960 <free@plt>
   29598:	ldr	x8, [x19]
   2959c:	ldr	x0, [x19, #16]
   295a0:	add	x21, x21, #0x1
   295a4:	add	x20, x20, #0x30
   295a8:	cmp	x21, x8
   295ac:	b.lt	2957c <rpl_re_set_registers@@Base+0x642c>  // b.tstop
   295b0:	b	29d58 <rpl_re_set_registers@@Base+0x6c08>
   295b4:	stp	x24, x26, [x29, #-48]
   295b8:	mov	x24, xzr
   295bc:	mov	x0, xzr
   295c0:	mov	x18, xzr
   295c4:	add	x8, x20, #0x8
   295c8:	stur	x8, [x29, #-72]
   295cc:	b	295ec <rpl_re_set_registers@@Base+0x649c>
   295d0:	mov	x0, xzr
   295d4:	tbnz	x26, #63, 29b3c <rpl_re_set_registers@@Base+0x69ec>
   295d8:	ldr	x8, [x20, #8]
   295dc:	mov	x23, x26
   295e0:	ldur	x26, [x29, #-40]
   295e4:	cmp	x25, x8
   295e8:	b.gt	29548 <rpl_re_set_registers@@Base+0x63f8>
   295ec:	ldr	x8, [x26]
   295f0:	add	x8, x8, x23, lsl #4
   295f4:	ldr	w9, [x8, #8]
   295f8:	and	w10, w9, #0xff
   295fc:	cmp	w10, #0x9
   29600:	b.eq	2962c <rpl_re_set_registers@@Base+0x64dc>  // b.none
   29604:	cmp	w10, #0x8
   29608:	b.ne	296a4 <rpl_re_set_registers@@Base+0x6554>  // b.any
   2960c:	ldr	x8, [x8]
   29610:	add	x8, x8, #0x1
   29614:	cmp	x8, x21
   29618:	b.ge	296a4 <rpl_re_set_registers@@Base+0x6554>  // b.tcont
   2961c:	add	x8, x20, x8, lsl #4
   29620:	mov	x9, #0xffffffffffffffff    	// #-1
   29624:	stp	x25, x9, [x8]
   29628:	b	296a4 <rpl_re_set_registers@@Base+0x6554>
   2962c:	ldr	x8, [x8]
   29630:	add	x8, x8, #0x1
   29634:	cmp	x8, x21
   29638:	b.ge	296a4 <rpl_re_set_registers@@Base+0x6554>  // b.tcont
   2963c:	lsl	x10, x8, #4
   29640:	ldr	x11, [x20, x10]
   29644:	cmp	x11, x25
   29648:	b.ge	29664 <rpl_re_set_registers@@Base+0x6514>  // b.tcont
   2964c:	mov	x27, x0
   29650:	ldur	x0, [x29, #-56]
   29654:	add	x8, x20, x8, lsl #4
   29658:	str	x25, [x8, #8]
   2965c:	mov	x1, x20
   29660:	b	29684 <rpl_re_set_registers@@Base+0x6534>
   29664:	tbz	w9, #19, 2969c <rpl_re_set_registers@@Base+0x654c>
   29668:	ldur	x9, [x29, #-56]
   2966c:	ldr	x9, [x9, x10]
   29670:	cmn	x9, #0x1
   29674:	b.eq	2969c <rpl_re_set_registers@@Base+0x654c>  // b.none
   29678:	ldur	x1, [x29, #-56]
   2967c:	mov	x27, x0
   29680:	mov	x0, x20
   29684:	ldur	x2, [x29, #-48]
   29688:	mov	x26, x18
   2968c:	bl	a210 <memcpy@plt>
   29690:	mov	x0, x27
   29694:	mov	x18, x26
   29698:	b	296a4 <rpl_re_set_registers@@Base+0x6554>
   2969c:	add	x8, x20, x8, lsl #4
   296a0:	str	x25, [x8, #8]
   296a4:	ldr	x8, [x20, #8]
   296a8:	cmp	x25, x8
   296ac:	b.ne	29760 <rpl_re_set_registers@@Base+0x6610>  // b.any
   296b0:	ldr	x8, [x22, #176]
   296b4:	cmp	x23, x8
   296b8:	b.ne	29760 <rpl_re_set_registers@@Base+0x6610>  // b.any
   296bc:	cbz	x19, 29dfc <rpl_re_set_registers@@Base+0x6cac>
   296c0:	mov	x8, xzr
   296c4:	cbz	x21, 296f4 <rpl_re_set_registers@@Base+0x65a4>
   296c8:	ldur	x9, [x29, #-72]
   296cc:	b	296e0 <rpl_re_set_registers@@Base+0x6590>
   296d0:	add	x8, x8, #0x1
   296d4:	cmp	x21, x8
   296d8:	add	x9, x9, #0x10
   296dc:	b.eq	29cf4 <rpl_re_set_registers@@Base+0x6ba4>  // b.none
   296e0:	ldur	x10, [x9, #-8]
   296e4:	tbnz	x10, #63, 296d0 <rpl_re_set_registers@@Base+0x6580>
   296e8:	ldr	x10, [x9]
   296ec:	cmn	x10, #0x1
   296f0:	b.ne	296d0 <rpl_re_set_registers@@Base+0x6580>  // b.any
   296f4:	cmp	x8, x21
   296f8:	b.eq	29cf4 <rpl_re_set_registers@@Base+0x6ba4>  // b.none
   296fc:	ldr	x9, [x19]
   29700:	sub	x8, x9, #0x1
   29704:	cmp	x9, #0x0
   29708:	str	x8, [x19]
   2970c:	b.le	29e84 <rpl_re_set_registers@@Base+0x6d34>
   29710:	ldr	x9, [x19, #16]
   29714:	add	x8, x8, x8, lsl #1
   29718:	lsl	x23, x8, #4
   2971c:	ldur	x2, [x29, #-48]
   29720:	add	x8, x9, x23
   29724:	ldr	x1, [x8, #16]
   29728:	ldr	x25, [x8]
   2972c:	mov	x0, x20
   29730:	bl	a210 <memcpy@plt>
   29734:	mov	x0, x24
   29738:	bl	a960 <free@plt>
   2973c:	ldr	x8, [x19, #16]
   29740:	add	x8, x8, x23
   29744:	ldr	x0, [x8, #16]
   29748:	bl	a960 <free@plt>
   2974c:	ldr	x8, [x19, #16]
   29750:	add	x8, x8, x23
   29754:	ldp	x18, x0, [x8, #24]
   29758:	ldr	x24, [x8, #40]
   2975c:	ldr	x23, [x8, #8]
   29760:	ldr	x27, [x22, #152]
   29764:	ldr	x8, [x27]
   29768:	add	x9, x8, x23, lsl #4
   2976c:	ldr	w9, [x9, #8]
   29770:	tbnz	w9, #3, 297f0 <rpl_re_set_registers@@Base+0x66a0>
   29774:	tbnz	w9, #20, 2980c <rpl_re_set_registers@@Base+0x66bc>
   29778:	and	w9, w9, #0xff
   2977c:	cmp	w9, #0x4
   29780:	b.ne	29830 <rpl_re_set_registers@@Base+0x66e0>  // b.any
   29784:	lsl	x9, x23, #4
   29788:	ldr	x8, [x8, x9]
   2978c:	add	x8, x20, x8, lsl #4
   29790:	ldp	x8, x9, [x8, #16]
   29794:	sub	x28, x9, x8
   29798:	cbz	x19, 299fc <rpl_re_set_registers@@Base+0x68ac>
   2979c:	cmn	x9, #0x1
   297a0:	b.eq	29b48 <rpl_re_set_registers@@Base+0x69f8>  // b.none
   297a4:	cmn	x8, #0x1
   297a8:	b.eq	29b48 <rpl_re_set_registers@@Base+0x69f8>  // b.none
   297ac:	cbz	x28, 29a14 <rpl_re_set_registers@@Base+0x68c4>
   297b0:	ldr	x9, [x22, #48]
   297b4:	sub	x9, x9, x25
   297b8:	cmp	x9, x28
   297bc:	b.lt	29b48 <rpl_re_set_registers@@Base+0x69f8>  // b.tstop
   297c0:	ldr	x9, [x22, #8]
   297c4:	mov	x2, x28
   297c8:	stur	x18, [x29, #-88]
   297cc:	add	x0, x9, x8
   297d0:	add	x1, x9, x25
   297d4:	bl	a6e0 <bcmp@plt>
   297d8:	cbnz	w0, 29b48 <rpl_re_set_registers@@Base+0x69f8>
   297dc:	ldr	x8, [x27, #24]
   297e0:	ldur	x18, [x29, #-88]
   297e4:	add	x25, x28, x25
   297e8:	ldr	x26, [x8, x23, lsl #3]
   297ec:	b	29864 <rpl_re_set_registers@@Base+0x6714>
   297f0:	ldr	x8, [x22, #184]
   297f4:	ldr	x26, [x27, #40]
   297f8:	ldr	x28, [x8, x25, lsl #3]
   297fc:	cbz	x18, 298c4 <rpl_re_set_registers@@Base+0x6774>
   29800:	cbnz	x0, 29bb0 <rpl_re_set_registers@@Base+0x6a60>
   29804:	str	x23, [x24]
   29808:	b	298dc <rpl_re_set_registers@@Base+0x678c>
   2980c:	mov	x0, x27
   29810:	mov	x1, x23
   29814:	mov	x2, x22
   29818:	mov	x3, x25
   2981c:	mov	x26, x18
   29820:	bl	2c21c <rpl_re_set_registers@@Base+0x90cc>
   29824:	mov	x18, x26
   29828:	sxtw	x28, w0
   2982c:	cbnz	x28, 29854 <rpl_re_set_registers@@Base+0x6704>
   29830:	ldr	x8, [x27]
   29834:	mov	x0, x22
   29838:	mov	x2, x25
   2983c:	mov	x26, x18
   29840:	add	x1, x8, x23, lsl #4
   29844:	bl	2c534 <rpl_re_set_registers@@Base+0x93e4>
   29848:	tbz	w0, #0, 29b44 <rpl_re_set_registers@@Base+0x69f4>
   2984c:	mov	w28, #0x1                   	// #1
   29850:	mov	x18, x26
   29854:	ldr	x8, [x27, #24]
   29858:	add	x25, x28, x25
   2985c:	ldr	x26, [x8, x23, lsl #3]
   29860:	cbz	x19, 295d0 <rpl_re_set_registers@@Base+0x6480>
   29864:	ldr	x8, [x22, #168]
   29868:	cmp	x25, x8
   2986c:	b.gt	29b48 <rpl_re_set_registers@@Base+0x69f8>
   29870:	ldr	x8, [x22, #184]
   29874:	ldr	x8, [x8, x25, lsl #3]
   29878:	cbz	x8, 29b48 <rpl_re_set_registers@@Base+0x69f8>
   2987c:	ldr	x9, [x8, #16]
   29880:	subs	x9, x9, #0x1
   29884:	b.lt	29b48 <rpl_re_set_registers@@Base+0x69f8>  // b.tstop
   29888:	ldr	x8, [x8, #24]
   2988c:	mov	x10, xzr
   29890:	b.eq	298b4 <rpl_re_set_registers@@Base+0x6764>  // b.none
   29894:	add	x11, x10, x9
   29898:	lsr	x11, x11, #1
   2989c:	ldr	x12, [x8, x11, lsl #3]
   298a0:	cmp	x12, x26
   298a4:	csinc	x10, x10, x11, ge  // ge = tcont
   298a8:	csel	x9, x9, x11, lt  // lt = tstop
   298ac:	cmp	x10, x9
   298b0:	b.cc	29894 <rpl_re_set_registers@@Base+0x6744>  // b.lo, b.ul, b.last
   298b4:	ldr	x8, [x8, x10, lsl #3]
   298b8:	cmp	x8, x26
   298bc:	b.eq	295d0 <rpl_re_set_registers@@Base+0x6480>  // b.none
   298c0:	b	29b44 <rpl_re_set_registers@@Base+0x69f4>
   298c4:	mov	w0, #0x8                   	// #8
   298c8:	bl	a540 <malloc@plt>
   298cc:	mov	x24, x0
   298d0:	cbz	x0, 29e18 <rpl_re_set_registers@@Base+0x6cc8>
   298d4:	str	x23, [x24]
   298d8:	mov	w18, #0x1                   	// #1
   298dc:	mov	w0, #0x1                   	// #1
   298e0:	mov	w11, #0x18                  	// #24
   298e4:	madd	x8, x23, x11, x26
   298e8:	ldr	x8, [x8, #8]
   298ec:	cmp	x8, #0x1
   298f0:	b.lt	29b44 <rpl_re_set_registers@@Base+0x69f4>  // b.tstop
   298f4:	ldr	x10, [x28, #16]
   298f8:	madd	x11, x23, x11, x26
   298fc:	ldr	x11, [x11, #16]
   29900:	mov	x9, xzr
   29904:	sub	x12, x10, #0x1
   29908:	mov	x26, #0xffffffffffffffff    	// #-1
   2990c:	b	2991c <rpl_re_set_registers@@Base+0x67cc>
   29910:	add	x9, x9, #0x1
   29914:	cmp	x9, x8
   29918:	b.eq	295d4 <rpl_re_set_registers@@Base+0x6484>  // b.none
   2991c:	cmp	x10, #0x1
   29920:	b.lt	29910 <rpl_re_set_registers@@Base+0x67c0>  // b.tstop
   29924:	ldr	x27, [x11, x9, lsl #3]
   29928:	ldr	x13, [x28, #24]
   2992c:	mov	x14, xzr
   29930:	cbz	x12, 29958 <rpl_re_set_registers@@Base+0x6808>
   29934:	mov	x15, x12
   29938:	add	x16, x14, x15
   2993c:	lsr	x16, x16, #1
   29940:	ldr	x17, [x13, x16, lsl #3]
   29944:	cmp	x17, x27
   29948:	csinc	x14, x14, x16, ge  // ge = tcont
   2994c:	csel	x15, x15, x16, lt  // lt = tstop
   29950:	cmp	x14, x15
   29954:	b.cc	29938 <rpl_re_set_registers@@Base+0x67e8>  // b.lo, b.ul, b.last
   29958:	ldr	x13, [x13, x14, lsl #3]
   2995c:	cmp	x13, x27
   29960:	b.ne	29910 <rpl_re_set_registers@@Base+0x67c0>  // b.any
   29964:	cmn	x26, #0x1
   29968:	b.ne	29974 <rpl_re_set_registers@@Base+0x6824>  // b.any
   2996c:	mov	x26, x27
   29970:	b	29910 <rpl_re_set_registers@@Base+0x67c0>
   29974:	subs	x8, x0, #0x1
   29978:	b.lt	299b8 <rpl_re_set_registers@@Base+0x6868>  // b.tstop
   2997c:	mov	x9, xzr
   29980:	b.eq	299a4 <rpl_re_set_registers@@Base+0x6854>  // b.none
   29984:	add	x10, x9, x8
   29988:	lsr	x10, x10, #1
   2998c:	ldr	x11, [x24, x10, lsl #3]
   29990:	cmp	x11, x26
   29994:	csinc	x9, x9, x10, ge  // ge = tcont
   29998:	csel	x8, x8, x10, lt  // lt = tstop
   2999c:	cmp	x9, x8
   299a0:	b.cc	29984 <rpl_re_set_registers@@Base+0x6834>  // b.lo, b.ul, b.last
   299a4:	ldr	x8, [x24, x9, lsl #3]
   299a8:	cmp	x8, x26
   299ac:	b.ne	299b8 <rpl_re_set_registers@@Base+0x6868>  // b.any
   299b0:	mov	x26, x27
   299b4:	b	295d4 <rpl_re_set_registers@@Base+0x6484>
   299b8:	cbz	x19, 295d4 <rpl_re_set_registers@@Base+0x6484>
   299bc:	stp	x18, x0, [x29, #-88]
   299c0:	ldp	x23, x9, [x19]
   299c4:	stur	x22, [x29, #-96]
   299c8:	add	x8, x23, #0x1
   299cc:	cmp	x8, x9
   299d0:	str	x8, [x19]
   299d4:	b.ne	29a24 <rpl_re_set_registers@@Base+0x68d4>  // b.any
   299d8:	ldr	x0, [x19, #16]
   299dc:	add	x8, x8, x8, lsl #1
   299e0:	lsl	x1, x8, #5
   299e4:	bl	a720 <realloc@plt>
   299e8:	cbz	x0, 29e18 <rpl_re_set_registers@@Base+0x6cc8>
   299ec:	ldr	x8, [x19, #8]
   299f0:	lsl	x8, x8, #1
   299f4:	stp	x8, x0, [x19, #8]
   299f8:	b	29a28 <rpl_re_set_registers@@Base+0x68d8>
   299fc:	cbz	x28, 29a14 <rpl_re_set_registers@@Base+0x68c4>
   29a00:	ldr	x8, [x27, #24]
   29a04:	mov	x0, xzr
   29a08:	add	x25, x28, x25
   29a0c:	ldr	x26, [x8, x23, lsl #3]
   29a10:	b	295d4 <rpl_re_set_registers@@Base+0x6484>
   29a14:	cbz	x18, 29aac <rpl_re_set_registers@@Base+0x695c>
   29a18:	cbnz	x0, 29c4c <rpl_re_set_registers@@Base+0x6afc>
   29a1c:	str	x23, [x24]
   29a20:	b	29ac4 <rpl_re_set_registers@@Base+0x6974>
   29a24:	ldr	x0, [x19, #16]
   29a28:	mov	w8, #0x30                  	// #48
   29a2c:	madd	x28, x23, x8, x0
   29a30:	stp	x25, x27, [x28]
   29a34:	ldur	x27, [x29, #-48]
   29a38:	mov	x22, x0
   29a3c:	mov	x0, x27
   29a40:	bl	a540 <malloc@plt>
   29a44:	str	x0, [x28, #16]
   29a48:	cbz	x0, 29e18 <rpl_re_set_registers@@Base+0x6cc8>
   29a4c:	mov	x1, x20
   29a50:	mov	x2, x27
   29a54:	bl	a210 <memcpy@plt>
   29a58:	ldur	x0, [x29, #-80]
   29a5c:	mov	w8, #0x30                  	// #48
   29a60:	madd	x8, x23, x8, x22
   29a64:	add	x28, x8, #0x18
   29a68:	cmp	x0, #0x1
   29a6c:	str	x0, [x8, #32]
   29a70:	b.lt	29b2c <rpl_re_set_registers@@Base+0x69dc>  // b.tstop
   29a74:	lsl	x27, x0, #3
   29a78:	str	x0, [x28]
   29a7c:	mov	x0, x27
   29a80:	bl	a540 <malloc@plt>
   29a84:	mov	w8, #0x30                  	// #48
   29a88:	madd	x8, x23, x8, x22
   29a8c:	str	x0, [x8, #40]
   29a90:	cbz	x0, 29e14 <rpl_re_set_registers@@Base+0x6cc4>
   29a94:	mov	x1, x24
   29a98:	mov	x2, x27
   29a9c:	bl	a210 <memcpy@plt>
   29aa0:	ldp	x18, x0, [x29, #-88]
   29aa4:	ldur	x22, [x29, #-96]
   29aa8:	b	295d4 <rpl_re_set_registers@@Base+0x6484>
   29aac:	mov	w0, #0x8                   	// #8
   29ab0:	bl	a540 <malloc@plt>
   29ab4:	mov	x24, x0
   29ab8:	cbz	x0, 29e18 <rpl_re_set_registers@@Base+0x6cc8>
   29abc:	str	x23, [x24]
   29ac0:	mov	w18, #0x1                   	// #1
   29ac4:	mov	w0, #0x1                   	// #1
   29ac8:	ldr	x8, [x22, #184]
   29acc:	ldr	x8, [x8, x25, lsl #3]
   29ad0:	ldr	x9, [x8, #16]
   29ad4:	subs	x9, x9, #0x1
   29ad8:	b.lt	29830 <rpl_re_set_registers@@Base+0x66e0>  // b.tstop
   29adc:	ldr	x10, [x27, #40]
   29ae0:	mov	w11, #0x18                  	// #24
   29ae4:	ldr	x8, [x8, #24]
   29ae8:	madd	x10, x23, x11, x10
   29aec:	ldr	x10, [x10, #16]
   29af0:	ldr	x26, [x10]
   29af4:	mov	x10, xzr
   29af8:	b.eq	29b1c <rpl_re_set_registers@@Base+0x69cc>  // b.none
   29afc:	add	x11, x10, x9
   29b00:	lsr	x11, x11, #1
   29b04:	ldr	x12, [x8, x11, lsl #3]
   29b08:	cmp	x12, x26
   29b0c:	csinc	x10, x10, x11, ge  // ge = tcont
   29b10:	csel	x9, x9, x11, lt  // lt = tstop
   29b14:	cmp	x10, x9
   29b18:	b.cc	29afc <rpl_re_set_registers@@Base+0x69ac>  // b.lo, b.ul, b.last
   29b1c:	ldr	x8, [x8, x10, lsl #3]
   29b20:	cmp	x8, x26
   29b24:	b.eq	295d4 <rpl_re_set_registers@@Base+0x6484>  // b.none
   29b28:	b	2982c <rpl_re_set_registers@@Base+0x66dc>
   29b2c:	stp	xzr, xzr, [x28]
   29b30:	str	xzr, [x28, #16]
   29b34:	ldp	x22, x18, [x29, #-96]
   29b38:	b	295d4 <rpl_re_set_registers@@Base+0x6484>
   29b3c:	cmn	x26, #0x2
   29b40:	b.eq	29e18 <rpl_re_set_registers@@Base+0x6cc8>  // b.none
   29b44:	cbz	x19, 29ddc <rpl_re_set_registers@@Base+0x6c8c>
   29b48:	ldr	x9, [x19]
   29b4c:	sub	x8, x9, #0x1
   29b50:	cmp	x9, #0x0
   29b54:	str	x8, [x19]
   29b58:	b.le	29e84 <rpl_re_set_registers@@Base+0x6d34>
   29b5c:	ldr	x9, [x19, #16]
   29b60:	add	x8, x8, x8, lsl #1
   29b64:	lsl	x23, x8, #4
   29b68:	ldur	x2, [x29, #-48]
   29b6c:	add	x8, x9, x23
   29b70:	ldr	x1, [x8, #16]
   29b74:	ldr	x25, [x8]
   29b78:	mov	x0, x20
   29b7c:	bl	a210 <memcpy@plt>
   29b80:	mov	x0, x24
   29b84:	bl	a960 <free@plt>
   29b88:	ldr	x8, [x19, #16]
   29b8c:	add	x8, x8, x23
   29b90:	ldr	x0, [x8, #16]
   29b94:	bl	a960 <free@plt>
   29b98:	ldr	x8, [x19, #16]
   29b9c:	add	x8, x8, x23
   29ba0:	ldp	x18, x0, [x8, #24]
   29ba4:	ldr	x24, [x8, #40]
   29ba8:	ldr	x26, [x8, #8]
   29bac:	b	295d8 <rpl_re_set_registers@@Base+0x6488>
   29bb0:	cmp	x18, x0
   29bb4:	b.ne	29bdc <rpl_re_set_registers@@Base+0x6a8c>  // b.any
   29bb8:	stur	x0, [x29, #-80]
   29bbc:	lsl	x1, x18, #4
   29bc0:	mov	x0, x24
   29bc4:	mov	x27, x18
   29bc8:	bl	a720 <realloc@plt>
   29bcc:	cbz	x0, 29e18 <rpl_re_set_registers@@Base+0x6cc8>
   29bd0:	mov	x24, x0
   29bd4:	ldur	x0, [x29, #-80]
   29bd8:	lsl	x18, x27, #1
   29bdc:	ldr	x8, [x24]
   29be0:	cmp	x8, x23
   29be4:	b.le	29c14 <rpl_re_set_registers@@Base+0x6ac4>
   29be8:	cmp	x0, #0x1
   29bec:	mov	x8, x0
   29bf0:	b.lt	29c40 <rpl_re_set_registers@@Base+0x6af0>  // b.tstop
   29bf4:	mov	x9, x0
   29bf8:	add	x10, x24, x9, lsl #3
   29bfc:	ldur	x11, [x10, #-8]
   29c00:	subs	x8, x9, #0x1
   29c04:	mov	x9, x8
   29c08:	str	x11, [x10]
   29c0c:	b.gt	29bf8 <rpl_re_set_registers@@Base+0x6aa8>
   29c10:	b	29c40 <rpl_re_set_registers@@Base+0x6af0>
   29c14:	add	x8, x24, x0, lsl #3
   29c18:	ldur	x9, [x8, #-8]
   29c1c:	mov	x8, x0
   29c20:	cmp	x9, x23
   29c24:	b.le	29c40 <rpl_re_set_registers@@Base+0x6af0>
   29c28:	add	x10, x24, x8, lsl #3
   29c2c:	str	x9, [x10]
   29c30:	ldur	x9, [x10, #-16]
   29c34:	sub	x8, x8, #0x1
   29c38:	cmp	x9, x23
   29c3c:	b.gt	29c28 <rpl_re_set_registers@@Base+0x6ad8>
   29c40:	add	x0, x0, #0x1
   29c44:	str	x23, [x24, x8, lsl #3]
   29c48:	b	298e0 <rpl_re_set_registers@@Base+0x6790>
   29c4c:	mov	x12, x18
   29c50:	cmp	x18, x0
   29c54:	stur	x0, [x29, #-80]
   29c58:	b.ne	29c78 <rpl_re_set_registers@@Base+0x6b28>  // b.any
   29c5c:	lsl	x1, x12, #4
   29c60:	mov	x0, x24
   29c64:	mov	x26, x12
   29c68:	bl	a720 <realloc@plt>
   29c6c:	cbz	x0, 29e18 <rpl_re_set_registers@@Base+0x6cc8>
   29c70:	lsl	x12, x26, #1
   29c74:	mov	x24, x0
   29c78:	ldr	x8, [x24]
   29c7c:	cmp	x8, x23
   29c80:	b.le	29cb0 <rpl_re_set_registers@@Base+0x6b60>
   29c84:	ldur	x8, [x29, #-80]
   29c88:	cmp	x8, #0x1
   29c8c:	b.lt	29ce0 <rpl_re_set_registers@@Base+0x6b90>  // b.tstop
   29c90:	ldur	x9, [x29, #-80]
   29c94:	add	x10, x24, x9, lsl #3
   29c98:	ldur	x11, [x10, #-8]
   29c9c:	subs	x8, x9, #0x1
   29ca0:	mov	x9, x8
   29ca4:	str	x11, [x10]
   29ca8:	b.gt	29c94 <rpl_re_set_registers@@Base+0x6b44>
   29cac:	b	29ce0 <rpl_re_set_registers@@Base+0x6b90>
   29cb0:	ldur	x10, [x29, #-80]
   29cb4:	add	x8, x24, x10, lsl #3
   29cb8:	ldur	x9, [x8, #-8]
   29cbc:	mov	x8, x10
   29cc0:	cmp	x9, x23
   29cc4:	b.le	29ce0 <rpl_re_set_registers@@Base+0x6b90>
   29cc8:	add	x10, x24, x8, lsl #3
   29ccc:	str	x9, [x10]
   29cd0:	ldur	x9, [x10, #-16]
   29cd4:	sub	x8, x8, #0x1
   29cd8:	cmp	x9, x23
   29cdc:	b.gt	29cc8 <rpl_re_set_registers@@Base+0x6b78>
   29ce0:	ldur	x0, [x29, #-80]
   29ce4:	mov	x18, x12
   29ce8:	str	x23, [x24, x8, lsl #3]
   29cec:	add	x0, x0, #0x1
   29cf0:	b	29ac8 <rpl_re_set_registers@@Base+0x6978>
   29cf4:	mov	x0, x24
   29cf8:	bl	a960 <free@plt>
   29cfc:	ldur	w8, [x29, #-60]
   29d00:	cbz	w8, 29d0c <rpl_re_set_registers@@Base+0x6bbc>
   29d04:	ldur	x0, [x29, #-56]
   29d08:	bl	a960 <free@plt>
   29d0c:	ldr	x8, [x19]
   29d10:	ldr	x0, [x19, #16]
   29d14:	cmp	x8, #0x1
   29d18:	b.lt	29d58 <rpl_re_set_registers@@Base+0x6c08>  // b.tstop
   29d1c:	mov	x20, xzr
   29d20:	mov	x21, xzr
   29d24:	add	x8, x0, x20
   29d28:	ldr	x0, [x8, #40]
   29d2c:	bl	a960 <free@plt>
   29d30:	ldr	x8, [x19, #16]
   29d34:	add	x8, x8, x20
   29d38:	ldr	x0, [x8, #16]
   29d3c:	bl	a960 <free@plt>
   29d40:	ldr	x8, [x19]
   29d44:	ldr	x0, [x19, #16]
   29d48:	add	x21, x21, #0x1
   29d4c:	add	x20, x20, #0x30
   29d50:	cmp	x21, x8
   29d54:	b.lt	29d24 <rpl_re_set_registers@@Base+0x6bd4>  // b.tstop
   29d58:	bl	a960 <free@plt>
   29d5c:	mov	w0, wzr
   29d60:	b	29dbc <rpl_re_set_registers@@Base+0x6c6c>
   29d64:	cbz	x19, 29db8 <rpl_re_set_registers@@Base+0x6c68>
   29d68:	ldr	x8, [x19]
   29d6c:	ldr	x0, [x19, #16]
   29d70:	cmp	x8, #0x1
   29d74:	b.lt	29db4 <rpl_re_set_registers@@Base+0x6c64>  // b.tstop
   29d78:	mov	x20, xzr
   29d7c:	mov	x21, xzr
   29d80:	add	x8, x0, x20
   29d84:	ldr	x0, [x8, #40]
   29d88:	bl	a960 <free@plt>
   29d8c:	ldr	x8, [x19, #16]
   29d90:	add	x8, x8, x20
   29d94:	ldr	x0, [x8, #16]
   29d98:	bl	a960 <free@plt>
   29d9c:	ldr	x8, [x19]
   29da0:	ldr	x0, [x19, #16]
   29da4:	add	x21, x21, #0x1
   29da8:	add	x20, x20, #0x30
   29dac:	cmp	x21, x8
   29db0:	b.lt	29d80 <rpl_re_set_registers@@Base+0x6c30>  // b.tstop
   29db4:	bl	a960 <free@plt>
   29db8:	mov	w0, #0xc                   	// #12
   29dbc:	mov	sp, x29
   29dc0:	ldp	x20, x19, [sp, #80]
   29dc4:	ldp	x22, x21, [sp, #64]
   29dc8:	ldp	x24, x23, [sp, #48]
   29dcc:	ldp	x26, x25, [sp, #32]
   29dd0:	ldp	x28, x27, [sp, #16]
   29dd4:	ldp	x29, x30, [sp], #96
   29dd8:	ret
   29ddc:	mov	x0, x24
   29de0:	bl	a960 <free@plt>
   29de4:	ldur	w8, [x29, #-60]
   29de8:	cbz	w8, 29df4 <rpl_re_set_registers@@Base+0x6ca4>
   29dec:	ldur	x0, [x29, #-56]
   29df0:	bl	a960 <free@plt>
   29df4:	mov	w0, #0x1                   	// #1
   29df8:	b	29dbc <rpl_re_set_registers@@Base+0x6c6c>
   29dfc:	mov	x0, x24
   29e00:	bl	a960 <free@plt>
   29e04:	ldur	w8, [x29, #-60]
   29e08:	cbz	w8, 29d5c <rpl_re_set_registers@@Base+0x6c0c>
   29e0c:	ldur	x0, [x29, #-56]
   29e10:	b	29d58 <rpl_re_set_registers@@Base+0x6c08>
   29e14:	stp	xzr, xzr, [x28]
   29e18:	mov	x0, x24
   29e1c:	bl	a960 <free@plt>
   29e20:	ldur	w8, [x29, #-60]
   29e24:	cbz	w8, 29e30 <rpl_re_set_registers@@Base+0x6ce0>
   29e28:	ldur	x0, [x29, #-56]
   29e2c:	bl	a960 <free@plt>
   29e30:	cbz	x19, 29db8 <rpl_re_set_registers@@Base+0x6c68>
   29e34:	ldr	x8, [x19]
   29e38:	ldr	x0, [x19, #16]
   29e3c:	cmp	x8, #0x1
   29e40:	b.lt	29db4 <rpl_re_set_registers@@Base+0x6c64>  // b.tstop
   29e44:	mov	x20, xzr
   29e48:	mov	x21, xzr
   29e4c:	add	x8, x0, x20
   29e50:	ldr	x0, [x8, #40]
   29e54:	bl	a960 <free@plt>
   29e58:	ldr	x8, [x19, #16]
   29e5c:	add	x8, x8, x20
   29e60:	ldr	x0, [x8, #16]
   29e64:	bl	a960 <free@plt>
   29e68:	ldr	x8, [x19]
   29e6c:	ldr	x0, [x19, #16]
   29e70:	add	x21, x21, #0x1
   29e74:	add	x20, x20, #0x30
   29e78:	cmp	x21, x8
   29e7c:	b.lt	29e4c <rpl_re_set_registers@@Base+0x6cfc>  // b.tstop
   29e80:	b	29db4 <rpl_re_set_registers@@Base+0x6c64>
   29e84:	adrp	x0, 31000 <vasnprintf@@Base+0x324c>
   29e88:	adrp	x1, 31000 <vasnprintf@@Base+0x324c>
   29e8c:	adrp	x3, 31000 <vasnprintf@@Base+0x324c>
   29e90:	add	x0, x0, #0x979
   29e94:	add	x1, x1, #0x82d
   29e98:	add	x3, x3, #0x982
   29e9c:	mov	w2, #0x555                 	// #1365
   29ea0:	bl	ad70 <__assert_fail@plt>
   29ea4:	stp	x29, x30, [sp, #-80]!
   29ea8:	stp	x24, x23, [sp, #32]
   29eac:	stp	x22, x21, [sp, #48]
   29eb0:	stp	x20, x19, [sp, #64]
   29eb4:	ldr	x8, [x1, #8]
   29eb8:	str	x25, [sp, #16]
   29ebc:	mov	x29, sp
   29ec0:	cmp	x8, #0x1
   29ec4:	b.lt	29f8c <rpl_re_set_registers@@Base+0x6e3c>  // b.tstop
   29ec8:	ldr	x22, [x0, #152]
   29ecc:	mov	x19, x2
   29ed0:	mov	x20, x1
   29ed4:	mov	x21, x0
   29ed8:	mov	x23, xzr
   29edc:	b	29f00 <rpl_re_set_registers@@Base+0x6db0>
   29ee0:	add	x8, x8, #0x1
   29ee4:	str	x24, [x9, #8]
   29ee8:	str	x8, [x21, #232]
   29eec:	str	x19, [x9]
   29ef0:	ldr	x8, [x20, #8]
   29ef4:	add	x23, x23, #0x1
   29ef8:	cmp	x23, x8
   29efc:	b.ge	29f8c <rpl_re_set_registers@@Base+0x6e3c>  // b.tcont
   29f00:	ldr	x9, [x20, #16]
   29f04:	ldr	x24, [x9, x23, lsl #3]
   29f08:	ldr	x9, [x22]
   29f0c:	add	x10, x9, x24, lsl #4
   29f10:	ldrb	w10, [x10, #8]
   29f14:	cmp	w10, #0x8
   29f18:	b.ne	29ef4 <rpl_re_set_registers@@Base+0x6da4>  // b.any
   29f1c:	lsl	x10, x24, #4
   29f20:	ldr	x9, [x9, x10]
   29f24:	cmp	x9, #0x3f
   29f28:	b.gt	29ef4 <rpl_re_set_registers@@Base+0x6da4>
   29f2c:	ldr	x10, [x22, #160]
   29f30:	lsr	x9, x10, x9
   29f34:	tbz	w9, #0, 29ef4 <rpl_re_set_registers@@Base+0x6da4>
   29f38:	ldp	x25, x8, [x21, #232]
   29f3c:	cmp	x25, x8
   29f40:	b.eq	29f70 <rpl_re_set_registers@@Base+0x6e20>  // b.none
   29f44:	mov	w0, #0x1                   	// #1
   29f48:	mov	w1, #0x30                  	// #48
   29f4c:	bl	a6b0 <calloc@plt>
   29f50:	ldr	x8, [x21, #232]
   29f54:	ldr	x9, [x21, #248]
   29f58:	lsl	x10, x8, #3
   29f5c:	str	x0, [x9, x10]
   29f60:	ldr	x9, [x21, #248]
   29f64:	ldr	x9, [x9, x10]
   29f68:	cbnz	x9, 29ee0 <rpl_re_set_registers@@Base+0x6d90>
   29f6c:	b	29fa8 <rpl_re_set_registers@@Base+0x6e58>
   29f70:	ldr	x0, [x21, #248]
   29f74:	lsl	x1, x25, #4
   29f78:	bl	a720 <realloc@plt>
   29f7c:	cbz	x0, 29fa8 <rpl_re_set_registers@@Base+0x6e58>
   29f80:	lsl	x8, x25, #1
   29f84:	stp	x8, x0, [x21, #240]
   29f88:	b	29f44 <rpl_re_set_registers@@Base+0x6df4>
   29f8c:	mov	w0, wzr
   29f90:	ldp	x20, x19, [sp, #64]
   29f94:	ldp	x22, x21, [sp, #48]
   29f98:	ldp	x24, x23, [sp, #32]
   29f9c:	ldr	x25, [sp, #16]
   29fa0:	ldp	x29, x30, [sp], #80
   29fa4:	ret
   29fa8:	mov	w0, #0xc                   	// #12
   29fac:	b	29f90 <rpl_re_set_registers@@Base+0x6e40>
   29fb0:	sub	sp, sp, #0xd0
   29fb4:	stp	x29, x30, [sp, #112]
   29fb8:	stp	x28, x27, [sp, #128]
   29fbc:	stp	x26, x25, [sp, #144]
   29fc0:	stp	x24, x23, [sp, #160]
   29fc4:	stp	x22, x21, [sp, #176]
   29fc8:	stp	x20, x19, [sp, #192]
   29fcc:	ldr	x8, [x1, #8]
   29fd0:	add	x29, sp, #0x70
   29fd4:	cmp	x8, #0x1
   29fd8:	b.lt	2a7ec <rpl_re_set_registers@@Base+0x769c>  // b.tstop
   29fdc:	ldr	x10, [x0, #152]
   29fe0:	ldr	x8, [x0, #72]
   29fe4:	mov	x28, x0
   29fe8:	mov	x9, xzr
   29fec:	mov	w23, #0x28                  	// #40
   29ff0:	stur	x8, [x29, #-48]
   29ff4:	str	x1, [sp]
   29ff8:	str	x10, [sp, #16]
   29ffc:	b	2a020 <rpl_re_set_registers@@Base+0x6ed0>
   2a000:	stur	wzr, [x29, #-4]
   2a004:	ldr	x1, [sp]
   2a008:	ldr	x9, [sp, #40]
   2a00c:	ldr	x10, [sp, #16]
   2a010:	ldr	x8, [x1, #8]
   2a014:	add	x9, x9, #0x1
   2a018:	cmp	x9, x8
   2a01c:	b.ge	2a7ec <rpl_re_set_registers@@Base+0x769c>  // b.tcont
   2a020:	ldr	x8, [x1, #16]
   2a024:	str	x9, [sp, #40]
   2a028:	ldr	x9, [x8, x9, lsl #3]
   2a02c:	ldr	x8, [x10]
   2a030:	stur	x9, [x29, #-40]
   2a034:	add	x19, x8, x9, lsl #4
   2a038:	ldr	w21, [x19, #8]!
   2a03c:	and	w8, w21, #0xff
   2a040:	cmp	w8, #0x4
   2a044:	b.ne	2a004 <rpl_re_set_registers@@Base+0x6eb4>  // b.any
   2a048:	tst	w21, #0x3ff00
   2a04c:	b.eq	2a11c <rpl_re_set_registers@@Base+0x6fcc>  // b.none
   2a050:	ldur	x9, [x29, #-48]
   2a054:	tbnz	x9, #63, 2a08c <rpl_re_set_registers@@Base+0x6f3c>
   2a058:	ldr	x8, [x28, #88]
   2a05c:	cmp	x8, x9
   2a060:	b.eq	2a7b8 <rpl_re_set_registers@@Base+0x7668>  // b.none
   2a064:	ldr	w8, [x28, #144]
   2a068:	cmp	w8, #0x2
   2a06c:	b.lt	2a094 <rpl_re_set_registers@@Base+0x6f44>  // b.tstop
   2a070:	ldr	x8, [x28, #16]
   2a074:	ldr	w24, [x8, x9, lsl #2]
   2a078:	cmn	w24, #0x1
   2a07c:	b.ne	2a0c0 <rpl_re_set_registers@@Base+0x6f70>  // b.any
   2a080:	cmp	x9, #0x0
   2a084:	sub	x9, x9, #0x1
   2a088:	b.gt	2a074 <rpl_re_set_registers@@Base+0x6f24>
   2a08c:	ldr	w8, [x28, #112]
   2a090:	b	2a0f0 <rpl_re_set_registers@@Base+0x6fa0>
   2a094:	ldr	x8, [x28, #8]
   2a098:	ldrb	w8, [x8, x9]
   2a09c:	ldr	x9, [x28, #128]
   2a0a0:	lsr	x10, x8, #3
   2a0a4:	and	x10, x10, #0x18
   2a0a8:	ldr	x9, [x9, x10]
   2a0ac:	lsr	x9, x9, x8
   2a0b0:	tbz	w9, #0, 2a0e4 <rpl_re_set_registers@@Base+0x6f94>
   2a0b4:	mov	w9, wzr
   2a0b8:	mov	w8, #0x1                   	// #1
   2a0bc:	b	2a100 <rpl_re_set_registers@@Base+0x6fb0>
   2a0c0:	ldrb	w8, [x28, #142]
   2a0c4:	cbnz	w8, 2a7cc <rpl_re_set_registers@@Base+0x767c>
   2a0c8:	cmp	w24, #0xa
   2a0cc:	b.ne	2a0ec <rpl_re_set_registers@@Base+0x6f9c>  // b.any
   2a0d0:	ldrb	w8, [x28, #141]
   2a0d4:	cmp	w8, #0x0
   2a0d8:	cset	w8, ne  // ne = any
   2a0dc:	lsl	w8, w8, #1
   2a0e0:	b	2a0f0 <rpl_re_set_registers@@Base+0x6fa0>
   2a0e4:	cmp	w8, #0xa
   2a0e8:	b.eq	2a0d0 <rpl_re_set_registers@@Base+0x6f80>  // b.none
   2a0ec:	mov	w8, wzr
   2a0f0:	tst	w8, #0x1
   2a0f4:	cset	w9, eq  // eq = none
   2a0f8:	tbz	w21, #10, 2a100 <rpl_re_set_registers@@Base+0x6fb0>
   2a0fc:	tbz	w8, #0, 2a004 <rpl_re_set_registers@@Base+0x6eb4>
   2a100:	ldr	w10, [x19]
   2a104:	tbnz	w9, #0, 2a10c <rpl_re_set_registers@@Base+0x6fbc>
   2a108:	tbnz	w10, #11, 2a004 <rpl_re_set_registers@@Base+0x6eb4>
   2a10c:	tbnz	w8, #1, 2a114 <rpl_re_set_registers@@Base+0x6fc4>
   2a110:	tbnz	w10, #13, 2a004 <rpl_re_set_registers@@Base+0x6eb4>
   2a114:	tbnz	w8, #3, 2a11c <rpl_re_set_registers@@Base+0x6fcc>
   2a118:	tbnz	w10, #15, 2a004 <rpl_re_set_registers@@Base+0x6eb4>
   2a11c:	ldr	x10, [x28, #200]
   2a120:	ldr	x20, [x28, #152]
   2a124:	ldr	x19, [x28, #8]
   2a128:	mov	x8, xzr
   2a12c:	cmp	x10, #0x1
   2a130:	str	x10, [sp, #8]
   2a134:	b.lt	2a170 <rpl_re_set_registers@@Base+0x7020>  // b.tstop
   2a138:	ldr	x9, [x28, #216]
   2a13c:	ldur	x24, [x29, #-48]
   2a140:	add	x11, x10, x8
   2a144:	cmp	x11, #0x0
   2a148:	cinc	x11, x11, lt  // lt = tstop
   2a14c:	asr	x11, x11, #1
   2a150:	madd	x12, x11, x23, x9
   2a154:	ldr	x12, [x12, #8]
   2a158:	cmp	x12, x24
   2a15c:	csel	x10, x10, x11, lt  // lt = tstop
   2a160:	csinc	x8, x8, x11, ge  // ge = tcont
   2a164:	cmp	x8, x10
   2a168:	b.lt	2a140 <rpl_re_set_registers@@Base+0x6ff0>  // b.tstop
   2a16c:	b	2a174 <rpl_re_set_registers@@Base+0x7024>
   2a170:	ldur	x24, [x29, #-48]
   2a174:	ldr	x9, [sp, #8]
   2a178:	cmp	x8, x9
   2a17c:	b.ge	2a1bc <rpl_re_set_registers@@Base+0x706c>  // b.tcont
   2a180:	cmn	x8, #0x1
   2a184:	b.eq	2a1bc <rpl_re_set_registers@@Base+0x706c>  // b.none
   2a188:	ldr	x9, [x28, #216]
   2a18c:	madd	x10, x8, x23, x9
   2a190:	ldr	x10, [x10, #8]
   2a194:	cmp	x10, x24
   2a198:	b.ne	2a1bc <rpl_re_set_registers@@Base+0x706c>  // b.any
   2a19c:	madd	x8, x8, x23, x9
   2a1a0:	ldr	x9, [x8]
   2a1a4:	ldur	x10, [x29, #-40]
   2a1a8:	cmp	x9, x10
   2a1ac:	b.eq	2a000 <rpl_re_set_registers@@Base+0x6eb0>  // b.none
   2a1b0:	ldrb	w9, [x8, #32]
   2a1b4:	add	x8, x8, #0x28
   2a1b8:	cbnz	w9, 2a1a0 <rpl_re_set_registers@@Base+0x7050>
   2a1bc:	ldr	x8, [x28, #232]
   2a1c0:	cmp	x8, #0x1
   2a1c4:	b.lt	2a000 <rpl_re_set_registers@@Base+0x6eb0>  // b.tstop
   2a1c8:	ldur	x9, [x29, #-40]
   2a1cc:	ldr	x8, [x20]
   2a1d0:	mov	x12, xzr
   2a1d4:	lsl	x9, x9, #4
   2a1d8:	ldr	x21, [x8, x9]
   2a1dc:	stp	x21, x20, [sp, #24]
   2a1e0:	ldr	x9, [x28, #248]
   2a1e4:	ldr	x27, [x9, x12, lsl #3]
   2a1e8:	ldr	x9, [x27, #8]
   2a1ec:	lsl	x9, x9, #4
   2a1f0:	ldr	x8, [x8, x9]
   2a1f4:	cmp	x8, x21
   2a1f8:	b.ne	2a378 <rpl_re_set_registers@@Base+0x7228>  // b.any
   2a1fc:	stp	x12, x27, [sp, #48]
   2a200:	ldr	x8, [x27, #32]
   2a204:	ldr	x20, [x27]
   2a208:	mov	x23, xzr
   2a20c:	mov	x22, x24
   2a210:	cmp	x8, #0x1
   2a214:	b.lt	2a32c <rpl_re_set_registers@@Base+0x71dc>  // b.tstop
   2a218:	mov	x21, x20
   2a21c:	ldr	x9, [x27, #40]
   2a220:	ldr	x26, [x9, x23, lsl #3]
   2a224:	ldr	x20, [x26, #8]
   2a228:	sub	x25, x20, x21
   2a22c:	cmp	x25, #0x1
   2a230:	b.lt	2a264 <rpl_re_set_registers@@Base+0x7114>  // b.tstop
   2a234:	ldr	x9, [x28, #48]
   2a238:	mov	x24, x28
   2a23c:	add	x28, x25, x22
   2a240:	cmp	x28, x9
   2a244:	b.gt	2a2a8 <rpl_re_set_registers@@Base+0x7158>
   2a248:	mov	x28, x24
   2a24c:	add	x0, x19, x22
   2a250:	add	x1, x19, x21
   2a254:	mov	x2, x25
   2a258:	bl	a6e0 <bcmp@plt>
   2a25c:	ldur	x24, [x29, #-48]
   2a260:	cbnz	w0, 2a324 <rpl_re_set_registers@@Base+0x71d4>
   2a264:	ldur	x3, [x29, #-40]
   2a268:	mov	x0, x28
   2a26c:	mov	x1, x27
   2a270:	mov	x2, x26
   2a274:	mov	x4, x24
   2a278:	bl	2ae20 <rpl_re_set_registers@@Base+0x7cd0>
   2a27c:	cmp	w0, #0x1
   2a280:	b.hi	2a824 <rpl_re_set_registers@@Base+0x76d4>  // b.pmore
   2a284:	ldr	x8, [x27, #32]
   2a288:	ldr	x19, [x28, #8]
   2a28c:	add	x23, x23, #0x1
   2a290:	add	x22, x25, x22
   2a294:	cmp	x23, x8
   2a298:	mov	x21, x20
   2a29c:	mov	x9, x27
   2a2a0:	b.lt	2a21c <rpl_re_set_registers@@Base+0x70cc>  // b.tstop
   2a2a4:	b	2a32c <rpl_re_set_registers@@Base+0x71dc>
   2a2a8:	ldr	x10, [x24, #88]
   2a2ac:	mov	x11, x24
   2a2b0:	cmp	x28, x10
   2a2b4:	b.gt	2a344 <rpl_re_set_registers@@Base+0x71f4>
   2a2b8:	ldr	x8, [x11, #64]
   2a2bc:	ldr	x19, [x11, #192]
   2a2c0:	cmp	x8, x28
   2a2c4:	b.gt	2a2d0 <rpl_re_set_registers@@Base+0x7180>
   2a2c8:	cmp	x8, x10
   2a2cc:	b.lt	2a2e0 <rpl_re_set_registers@@Base+0x7190>  // b.tstop
   2a2d0:	cmp	x9, x28
   2a2d4:	b.gt	2a2f0 <rpl_re_set_registers@@Base+0x71a0>
   2a2d8:	cmp	x9, x10
   2a2dc:	b.ge	2a2f0 <rpl_re_set_registers@@Base+0x71a0>  // b.tcont
   2a2e0:	add	w1, w28, #0x1
   2a2e4:	mov	x0, x24
   2a2e8:	bl	2a848 <rpl_re_set_registers@@Base+0x76f8>
   2a2ec:	cbnz	w0, 2a824 <rpl_re_set_registers@@Base+0x76d4>
   2a2f0:	subs	x8, x28, x19
   2a2f4:	b.le	2a318 <rpl_re_set_registers@@Base+0x71c8>
   2a2f8:	ldr	x9, [x24, #184]
   2a2fc:	lsl	x2, x8, #3
   2a300:	mov	w1, wzr
   2a304:	mov	x27, x24
   2a308:	add	x9, x9, x19, lsl #3
   2a30c:	add	x0, x9, #0x8
   2a310:	bl	a630 <memset@plt>
   2a314:	str	x28, [x24, #192]
   2a318:	ldr	x19, [x24, #8]
   2a31c:	ldr	x27, [sp, #56]
   2a320:	b	2a248 <rpl_re_set_registers@@Base+0x70f8>
   2a324:	ldr	x8, [x27, #32]
   2a328:	mov	x20, x21
   2a32c:	cmp	x23, x8
   2a330:	b.ge	2a358 <rpl_re_set_registers@@Base+0x7208>  // b.tcont
   2a334:	ldp	x21, x20, [sp, #24]
   2a338:	ldr	x12, [sp, #48]
   2a33c:	mov	w23, #0x28                  	// #40
   2a340:	b	2a378 <rpl_re_set_registers@@Base+0x7228>
   2a344:	ldur	x24, [x29, #-48]
   2a348:	mov	x20, x21
   2a34c:	mov	x28, x11
   2a350:	cmp	x23, x8
   2a354:	b.lt	2a334 <rpl_re_set_registers@@Base+0x71e4>  // b.tstop
   2a358:	ldr	x21, [sp, #24]
   2a35c:	ldr	x12, [sp, #48]
   2a360:	cmp	x23, #0x0
   2a364:	cinc	x25, x20, ne  // ne = any
   2a368:	cmp	x25, x24
   2a36c:	mov	w23, #0x28                  	// #40
   2a370:	b.le	2a390 <rpl_re_set_registers@@Base+0x7240>
   2a374:	ldr	x20, [sp, #32]
   2a378:	ldr	x8, [x28, #232]
   2a37c:	add	x12, x12, #0x1
   2a380:	cmp	x12, x8
   2a384:	b.ge	2a534 <rpl_re_set_registers@@Base+0x73e4>  // b.tcont
   2a388:	ldr	x8, [x20]
   2a38c:	b	2a1e0 <rpl_re_set_registers@@Base+0x7090>
   2a390:	ldr	x20, [sp, #32]
   2a394:	b	2a3a8 <rpl_re_set_registers@@Base+0x7258>
   2a398:	ldr	x27, [sp, #56]
   2a39c:	cmp	x25, x24
   2a3a0:	add	x25, x25, #0x1
   2a3a4:	b.ge	2a378 <rpl_re_set_registers@@Base+0x7228>  // b.tcont
   2a3a8:	ldr	x8, [x27]
   2a3ac:	cmp	x25, x8
   2a3b0:	b.le	2a3d8 <rpl_re_set_registers@@Base+0x7288>
   2a3b4:	ldr	x8, [x28, #48]
   2a3b8:	cmp	x22, x8
   2a3bc:	b.ge	2a4e8 <rpl_re_set_registers@@Base+0x7398>  // b.tcont
   2a3c0:	add	x9, x25, x19
   2a3c4:	ldrb	w8, [x19, x22]
   2a3c8:	ldurb	w9, [x9, #-1]
   2a3cc:	cmp	w8, w9
   2a3d0:	b.ne	2a378 <rpl_re_set_registers@@Base+0x7228>  // b.any
   2a3d4:	add	x22, x22, #0x1
   2a3d8:	ldr	x8, [x28, #184]
   2a3dc:	ldr	x9, [x8, x25, lsl #3]
   2a3e0:	cbz	x9, 2a398 <rpl_re_set_registers@@Base+0x7248>
   2a3e4:	ldr	x8, [x9, #16]
   2a3e8:	cmp	x8, #0x1
   2a3ec:	b.lt	2a398 <rpl_re_set_registers@@Base+0x7248>  // b.tstop
   2a3f0:	ldr	x9, [x9, #24]
   2a3f4:	ldr	x10, [x20]
   2a3f8:	b	2a408 <rpl_re_set_registers@@Base+0x72b8>
   2a3fc:	subs	x8, x8, #0x1
   2a400:	add	x9, x9, #0x8
   2a404:	b.eq	2a398 <rpl_re_set_registers@@Base+0x7248>  // b.none
   2a408:	ldr	x26, [x9]
   2a40c:	add	x11, x10, x26, lsl #4
   2a410:	ldrb	w11, [x11, #8]
   2a414:	cmp	w11, #0x9
   2a418:	b.ne	2a3fc <rpl_re_set_registers@@Base+0x72ac>  // b.any
   2a41c:	lsl	x11, x26, #4
   2a420:	ldr	x11, [x10, x11]
   2a424:	cmp	x11, x21
   2a428:	b.ne	2a3fc <rpl_re_set_registers@@Base+0x72ac>  // b.any
   2a42c:	cmn	x26, #0x1
   2a430:	b.eq	2a398 <rpl_re_set_registers@@Base+0x7248>  // b.none
   2a434:	ldr	x1, [x27, #16]
   2a438:	cbnz	x1, 2a45c <rpl_re_set_registers@@Base+0x730c>
   2a43c:	ldr	x8, [x27]
   2a440:	mov	w0, #0x18                  	// #24
   2a444:	sub	x8, x25, x8
   2a448:	add	x1, x8, #0x1
   2a44c:	bl	a6b0 <calloc@plt>
   2a450:	mov	x1, x0
   2a454:	str	x0, [x27, #16]
   2a458:	cbz	x0, 2a818 <rpl_re_set_registers@@Base+0x76c8>
   2a45c:	ldp	x3, x2, [x27]
   2a460:	mov	w6, #0x9                   	// #9
   2a464:	mov	x0, x28
   2a468:	mov	x4, x26
   2a46c:	mov	x5, x25
   2a470:	bl	2afec <rpl_re_set_registers@@Base+0x7e9c>
   2a474:	ldr	x12, [sp, #48]
   2a478:	cmp	w0, #0x1
   2a47c:	b.eq	2a398 <rpl_re_set_registers@@Base+0x7248>  // b.none
   2a480:	mov	w27, w0
   2a484:	cbnz	w0, 2a828 <rpl_re_set_registers@@Base+0x76d8>
   2a488:	ldr	x27, [sp, #56]
   2a48c:	ldp	x9, x8, [x27, #24]
   2a490:	cmp	x8, x9
   2a494:	b.eq	2a510 <rpl_re_set_registers@@Base+0x73c0>  // b.none
   2a498:	mov	w0, #0x1                   	// #1
   2a49c:	mov	w1, #0x28                  	// #40
   2a4a0:	bl	a6b0 <calloc@plt>
   2a4a4:	cbz	x0, 2a818 <rpl_re_set_registers@@Base+0x76c8>
   2a4a8:	ldp	x9, x8, [x27, #32]
   2a4ac:	ldur	x3, [x29, #-40]
   2a4b0:	mov	x2, x0
   2a4b4:	mov	x1, x27
   2a4b8:	str	x0, [x8, x9, lsl #3]
   2a4bc:	stp	x26, x25, [x0]
   2a4c0:	add	x8, x9, #0x1
   2a4c4:	mov	x0, x28
   2a4c8:	mov	x4, x24
   2a4cc:	str	x8, [x27, #32]
   2a4d0:	bl	2ae20 <rpl_re_set_registers@@Base+0x7cd0>
   2a4d4:	cmp	w0, #0x1
   2a4d8:	b.hi	2a824 <rpl_re_set_registers@@Base+0x76d4>  // b.pmore
   2a4dc:	ldr	x19, [x28, #8]
   2a4e0:	ldr	x12, [sp, #48]
   2a4e4:	b	2a398 <rpl_re_set_registers@@Base+0x7248>
   2a4e8:	ldr	x8, [x28, #88]
   2a4ec:	cmp	x22, x8
   2a4f0:	b.ge	2a378 <rpl_re_set_registers@@Base+0x7228>  // b.tcont
   2a4f4:	add	w1, w22, #0x1
   2a4f8:	mov	x0, x28
   2a4fc:	bl	2a848 <rpl_re_set_registers@@Base+0x76f8>
   2a500:	cbnz	w0, 2a824 <rpl_re_set_registers@@Base+0x76d4>
   2a504:	ldr	x19, [x28, #8]
   2a508:	ldp	x12, x27, [sp, #48]
   2a50c:	b	2a3c0 <rpl_re_set_registers@@Base+0x7270>
   2a510:	ldr	x0, [x27, #40]
   2a514:	mov	w19, #0x1                   	// #1
   2a518:	bfi	x19, x8, #1, #63
   2a51c:	lsl	x1, x19, #3
   2a520:	bl	a720 <realloc@plt>
   2a524:	cbz	x0, 2a818 <rpl_re_set_registers@@Base+0x76c8>
   2a528:	str	x0, [x27, #40]
   2a52c:	str	x19, [x27, #24]
   2a530:	b	2a498 <rpl_re_set_registers@@Base+0x7348>
   2a534:	ldr	x8, [x28, #200]
   2a538:	ldr	x19, [sp, #8]
   2a53c:	stur	wzr, [x29, #-4]
   2a540:	cmp	x19, x8
   2a544:	b.lt	2a55c <rpl_re_set_registers@@Base+0x740c>  // b.tstop
   2a548:	b	2a004 <rpl_re_set_registers@@Base+0x6eb4>
   2a54c:	ldr	x8, [x28, #200]
   2a550:	add	x19, x19, #0x1
   2a554:	cmp	x19, x8
   2a558:	b.ge	2a004 <rpl_re_set_registers@@Base+0x6eb4>  // b.tcont
   2a55c:	ldr	x8, [x28, #216]
   2a560:	mul	x9, x19, x23
   2a564:	ldur	x10, [x29, #-40]
   2a568:	ldr	x9, [x8, x9]
   2a56c:	cmp	x9, x10
   2a570:	b.ne	2a54c <rpl_re_set_registers@@Base+0x73fc>  // b.any
   2a574:	madd	x9, x19, x23, x8
   2a578:	ldr	x9, [x9, #8]
   2a57c:	ldur	x10, [x29, #-48]
   2a580:	cmp	x9, x10
   2a584:	b.ne	2a54c <rpl_re_set_registers@@Base+0x73fc>  // b.any
   2a588:	str	x19, [sp, #8]
   2a58c:	madd	x8, x19, x23, x8
   2a590:	ldp	x21, x19, [x8, #16]
   2a594:	ldr	x8, [sp, #16]
   2a598:	cmp	x19, x21
   2a59c:	ldr	x23, [x8, #48]
   2a5a0:	b.ne	2a5bc <rpl_re_set_registers@@Base+0x746c>  // b.any
   2a5a4:	ldr	x8, [x8, #40]
   2a5a8:	ldur	x10, [x29, #-40]
   2a5ac:	mov	w9, #0x18                  	// #24
   2a5b0:	madd	x8, x10, x9, x8
   2a5b4:	ldr	x8, [x8, #16]
   2a5b8:	b	2a5c8 <rpl_re_set_registers@@Base+0x7478>
   2a5bc:	ldr	x8, [x8, #24]
   2a5c0:	ldur	x9, [x29, #-40]
   2a5c4:	add	x8, x8, x9, lsl #3
   2a5c8:	ldur	x9, [x29, #-48]
   2a5cc:	ldr	x26, [x8]
   2a5d0:	add	x8, x19, x9
   2a5d4:	sub	x22, x8, x21
   2a5d8:	cmp	x22, #0x0
   2a5dc:	b.le	2a620 <rpl_re_set_registers@@Base+0x74d0>
   2a5e0:	ldr	x9, [x28, #88]
   2a5e4:	sub	x8, x22, #0x1
   2a5e8:	cmp	x9, x8
   2a5ec:	b.eq	2a788 <rpl_re_set_registers@@Base+0x7638>  // b.none
   2a5f0:	ldr	w9, [x28, #144]
   2a5f4:	cmp	w9, #0x2
   2a5f8:	b.lt	2a628 <rpl_re_set_registers@@Base+0x74d8>  // b.tstop
   2a5fc:	ldr	x8, [x28, #16]
   2a600:	mov	x9, x22
   2a604:	sub	x8, x8, #0x4
   2a608:	ldr	w24, [x8, x9, lsl #2]
   2a60c:	cmn	w24, #0x1
   2a610:	b.ne	2a650 <rpl_re_set_registers@@Base+0x7500>  // b.any
   2a614:	sub	x9, x9, #0x1
   2a618:	cmp	x9, #0x0
   2a61c:	b.gt	2a608 <rpl_re_set_registers@@Base+0x74b8>
   2a620:	ldr	w25, [x28, #112]
   2a624:	b	2a680 <rpl_re_set_registers@@Base+0x7530>
   2a628:	ldr	x9, [x28, #8]
   2a62c:	ldrb	w8, [x9, x8]
   2a630:	ldr	x9, [x28, #128]
   2a634:	lsr	x10, x8, #3
   2a638:	and	x10, x10, #0x18
   2a63c:	ldr	x9, [x9, x10]
   2a640:	lsr	x9, x9, x8
   2a644:	tbz	w9, #0, 2a674 <rpl_re_set_registers@@Base+0x7524>
   2a648:	mov	w25, #0x1                   	// #1
   2a64c:	b	2a680 <rpl_re_set_registers@@Base+0x7530>
   2a650:	ldrb	w8, [x28, #142]
   2a654:	cbnz	w8, 2a79c <rpl_re_set_registers@@Base+0x764c>
   2a658:	cmp	w24, #0xa
   2a65c:	b.ne	2a67c <rpl_re_set_registers@@Base+0x752c>  // b.any
   2a660:	ldrb	w8, [x28, #141]
   2a664:	cmp	w8, #0x0
   2a668:	cset	w8, ne  // ne = any
   2a66c:	lsl	w25, w8, #1
   2a670:	b	2a680 <rpl_re_set_registers@@Base+0x7530>
   2a674:	cmp	w8, #0xa
   2a678:	b.eq	2a660 <rpl_re_set_registers@@Base+0x7510>  // b.none
   2a67c:	mov	w25, wzr
   2a680:	ldr	x8, [x28, #184]
   2a684:	ldur	x9, [x29, #-48]
   2a688:	mov	w10, #0x18                  	// #24
   2a68c:	madd	x24, x26, x10, x23
   2a690:	ldr	x9, [x8, x9, lsl #3]
   2a694:	ldr	x8, [x8, x22, lsl #3]
   2a698:	cbz	x9, 2a6f8 <rpl_re_set_registers@@Base+0x75a8>
   2a69c:	ldr	x20, [x9, #16]
   2a6a0:	mov	w23, #0x28                  	// #40
   2a6a4:	cbz	x8, 2a704 <rpl_re_set_registers@@Base+0x75b4>
   2a6a8:	ldr	x1, [x8, #80]
   2a6ac:	sub	x0, x29, #0x20
   2a6b0:	mov	x2, x24
   2a6b4:	bl	2ac30 <rpl_re_set_registers@@Base+0x7ae0>
   2a6b8:	stur	w0, [x29, #-4]
   2a6bc:	cbnz	w0, 2a830 <rpl_re_set_registers@@Base+0x76e0>
   2a6c0:	ldr	x1, [sp, #16]
   2a6c4:	sub	x0, x29, #0x4
   2a6c8:	sub	x2, x29, #0x20
   2a6cc:	mov	w3, w25
   2a6d0:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   2a6d4:	ldr	x8, [x28, #184]
   2a6d8:	lsl	x22, x22, #3
   2a6dc:	str	x0, [x8, x22]
   2a6e0:	ldur	x0, [x29, #-16]
   2a6e4:	bl	a960 <free@plt>
   2a6e8:	ldr	x8, [x28, #184]
   2a6ec:	ldr	x9, [x8, x22]
   2a6f0:	cbz	x9, 2a730 <rpl_re_set_registers@@Base+0x75e0>
   2a6f4:	b	2a738 <rpl_re_set_registers@@Base+0x75e8>
   2a6f8:	mov	x20, xzr
   2a6fc:	mov	w23, #0x28                  	// #40
   2a700:	cbnz	x8, 2a6a8 <rpl_re_set_registers@@Base+0x7558>
   2a704:	ldr	x1, [sp, #16]
   2a708:	sub	x0, x29, #0x4
   2a70c:	mov	x2, x24
   2a710:	mov	w3, w25
   2a714:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   2a718:	ldr	x8, [x28, #184]
   2a71c:	lsl	x9, x22, #3
   2a720:	str	x0, [x8, x9]
   2a724:	ldr	x8, [x28, #184]
   2a728:	ldr	x9, [x8, x9]
   2a72c:	cbnz	x9, 2a738 <rpl_re_set_registers@@Base+0x75e8>
   2a730:	ldur	w27, [x29, #-4]
   2a734:	cbnz	w27, 2a7f4 <rpl_re_set_registers@@Base+0x76a4>
   2a738:	cmp	x19, x21
   2a73c:	ldr	x19, [sp, #8]
   2a740:	b.ne	2a54c <rpl_re_set_registers@@Base+0x73fc>  // b.any
   2a744:	ldur	x9, [x29, #-48]
   2a748:	ldr	x8, [x8, x9, lsl #3]
   2a74c:	ldr	x8, [x8, #16]
   2a750:	cmp	x8, x20
   2a754:	b.le	2a54c <rpl_re_set_registers@@Base+0x73fc>
   2a758:	ldur	x2, [x29, #-48]
   2a75c:	mov	x0, x28
   2a760:	mov	x1, x24
   2a764:	bl	29ea4 <rpl_re_set_registers@@Base+0x6d54>
   2a768:	stur	w0, [x29, #-4]
   2a76c:	cbnz	w0, 2a840 <rpl_re_set_registers@@Base+0x76f0>
   2a770:	mov	x0, x28
   2a774:	mov	x1, x24
   2a778:	bl	29fb0 <rpl_re_set_registers@@Base+0x6e60>
   2a77c:	stur	w0, [x29, #-4]
   2a780:	cbz	w0, 2a54c <rpl_re_set_registers@@Base+0x73fc>
   2a784:	b	2a840 <rpl_re_set_registers@@Base+0x76f0>
   2a788:	ldr	w8, [x28, #160]
   2a78c:	mov	w9, #0xa                   	// #10
   2a790:	and	w8, w8, #0x2
   2a794:	eor	w25, w8, w9
   2a798:	b	2a680 <rpl_re_set_registers@@Base+0x7530>
   2a79c:	mov	w0, w24
   2a7a0:	bl	ac10 <iswalnum@plt>
   2a7a4:	cmp	w24, #0x5f
   2a7a8:	mov	w25, #0x1                   	// #1
   2a7ac:	b.eq	2a680 <rpl_re_set_registers@@Base+0x7530>  // b.none
   2a7b0:	cbz	w0, 2a658 <rpl_re_set_registers@@Base+0x7508>
   2a7b4:	b	2a680 <rpl_re_set_registers@@Base+0x7530>
   2a7b8:	ldr	w8, [x28, #160]
   2a7bc:	mov	w9, #0xa                   	// #10
   2a7c0:	and	w8, w8, #0x2
   2a7c4:	eor	w8, w8, w9
   2a7c8:	b	2a0f0 <rpl_re_set_registers@@Base+0x6fa0>
   2a7cc:	mov	w0, w24
   2a7d0:	bl	ac10 <iswalnum@plt>
   2a7d4:	mov	w9, wzr
   2a7d8:	cmp	w24, #0x5f
   2a7dc:	mov	w8, #0x1                   	// #1
   2a7e0:	b.eq	2a100 <rpl_re_set_registers@@Base+0x6fb0>  // b.none
   2a7e4:	cbz	w0, 2a0c8 <rpl_re_set_registers@@Base+0x6f78>
   2a7e8:	b	2a100 <rpl_re_set_registers@@Base+0x6fb0>
   2a7ec:	mov	w27, wzr
   2a7f0:	stur	wzr, [x29, #-4]
   2a7f4:	mov	w0, w27
   2a7f8:	ldp	x20, x19, [sp, #192]
   2a7fc:	ldp	x22, x21, [sp, #176]
   2a800:	ldp	x24, x23, [sp, #160]
   2a804:	ldp	x26, x25, [sp, #144]
   2a808:	ldp	x28, x27, [sp, #128]
   2a80c:	ldp	x29, x30, [sp, #112]
   2a810:	add	sp, sp, #0xd0
   2a814:	ret
   2a818:	mov	w27, #0xc                   	// #12
   2a81c:	stur	w27, [x29, #-4]
   2a820:	b	2a7f4 <rpl_re_set_registers@@Base+0x76a4>
   2a824:	mov	w27, w0
   2a828:	stur	w27, [x29, #-4]
   2a82c:	b	2a7f4 <rpl_re_set_registers@@Base+0x76a4>
   2a830:	mov	w27, w0
   2a834:	ldur	x0, [x29, #-16]
   2a838:	bl	a960 <free@plt>
   2a83c:	b	2a7f4 <rpl_re_set_registers@@Base+0x76a4>
   2a840:	mov	w27, w0
   2a844:	b	2a7f4 <rpl_re_set_registers@@Base+0x76a4>
   2a848:	stp	x29, x30, [sp, #-48]!
   2a84c:	stp	x20, x19, [sp, #32]
   2a850:	ldr	x8, [x0, #64]
   2a854:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
   2a858:	str	x21, [sp, #16]
   2a85c:	mov	x29, sp
   2a860:	cmp	x8, x9
   2a864:	b.hi	2aa20 <rpl_re_set_registers@@Base+0x78d0>  // b.pmore
   2a868:	ldr	x9, [x0, #88]
   2a86c:	lsl	x8, x8, #1
   2a870:	ldr	w11, [x0, #144]
   2a874:	sxtw	x10, w1
   2a878:	cmp	x9, x8
   2a87c:	csel	x8, x9, x8, lt  // lt = tstop
   2a880:	cmp	x8, x10
   2a884:	mov	x19, x0
   2a888:	csel	x20, x8, x10, gt
   2a88c:	cmp	w11, #0x2
   2a890:	b.lt	2a8cc <rpl_re_set_registers@@Base+0x777c>  // b.tstop
   2a894:	lsr	x8, x20, #61
   2a898:	cbnz	x8, 2aa20 <rpl_re_set_registers@@Base+0x78d0>
   2a89c:	ldr	x0, [x19, #16]
   2a8a0:	lsl	x1, x20, #2
   2a8a4:	bl	a720 <realloc@plt>
   2a8a8:	cbz	x0, 2aa20 <rpl_re_set_registers@@Base+0x78d0>
   2a8ac:	mov	x8, x0
   2a8b0:	ldr	x0, [x19, #24]
   2a8b4:	str	x8, [x19, #16]
   2a8b8:	cbz	x0, 2a8cc <rpl_re_set_registers@@Base+0x777c>
   2a8bc:	lsl	x1, x20, #3
   2a8c0:	bl	a720 <realloc@plt>
   2a8c4:	cbz	x0, 2aa20 <rpl_re_set_registers@@Base+0x78d0>
   2a8c8:	str	x0, [x19, #24]
   2a8cc:	ldrb	w8, [x19, #139]
   2a8d0:	cbz	w8, 2a8e8 <rpl_re_set_registers@@Base+0x7798>
   2a8d4:	ldr	x0, [x19, #8]
   2a8d8:	mov	x1, x20
   2a8dc:	bl	a720 <realloc@plt>
   2a8e0:	cbz	x0, 2aa20 <rpl_re_set_registers@@Base+0x78d0>
   2a8e4:	str	x0, [x19, #8]
   2a8e8:	ldr	x0, [x19, #184]
   2a8ec:	str	x20, [x19, #64]
   2a8f0:	cbz	x0, 2a908 <rpl_re_set_registers@@Base+0x77b8>
   2a8f4:	lsl	x8, x20, #3
   2a8f8:	add	x1, x8, #0x8
   2a8fc:	bl	a720 <realloc@plt>
   2a900:	cbz	x0, 2aa20 <rpl_re_set_registers@@Base+0x78d0>
   2a904:	str	x0, [x19, #184]
   2a908:	ldr	w8, [x19, #144]
   2a90c:	ldrb	w9, [x19, #136]
   2a910:	cmp	w8, #0x2
   2a914:	cbz	w9, 2a92c <rpl_re_set_registers@@Base+0x77dc>
   2a918:	b.lt	2a93c <rpl_re_set_registers@@Base+0x77ec>  // b.tstop
   2a91c:	mov	x0, x19
   2a920:	bl	231e4 <rpl_re_set_registers@@Base+0x94>
   2a924:	cbz	w0, 2aa0c <rpl_re_set_registers@@Base+0x78bc>
   2a928:	b	2aa10 <rpl_re_set_registers@@Base+0x78c0>
   2a92c:	b.lt	2a9a4 <rpl_re_set_registers@@Base+0x7854>  // b.tstop
   2a930:	mov	x0, x19
   2a934:	bl	23888 <rpl_re_set_registers@@Base+0x738>
   2a938:	b	2aa0c <rpl_re_set_registers@@Base+0x78bc>
   2a93c:	ldr	x8, [x19, #64]
   2a940:	ldr	x9, [x19, #88]
   2a944:	ldr	x20, [x19, #48]
   2a948:	cmp	x8, x9
   2a94c:	csel	x21, x9, x8, gt
   2a950:	cmp	x20, x21
   2a954:	b.ge	2a99c <rpl_re_set_registers@@Base+0x784c>  // b.tcont
   2a958:	bl	a730 <__ctype_toupper_loc@plt>
   2a95c:	ldr	x8, [x19]
   2a960:	ldr	x9, [x19, #40]
   2a964:	add	x8, x8, x9
   2a968:	ldr	x9, [x19, #120]
   2a96c:	ldrb	w8, [x8, x20]
   2a970:	cbnz	x9, 2a994 <rpl_re_set_registers@@Base+0x7844>
   2a974:	ldr	x9, [x0]
   2a978:	ldr	x10, [x19, #8]
   2a97c:	ldr	w8, [x9, w8, uxtw #2]
   2a980:	strb	w8, [x10, x20]
   2a984:	add	x20, x20, #0x1
   2a988:	cmp	x20, x21
   2a98c:	b.lt	2a95c <rpl_re_set_registers@@Base+0x780c>  // b.tstop
   2a990:	b	2a99c <rpl_re_set_registers@@Base+0x784c>
   2a994:	ldrb	w8, [x9, x8]
   2a998:	b	2a974 <rpl_re_set_registers@@Base+0x7824>
   2a99c:	stp	x20, x20, [x19, #48]
   2a9a0:	b	2aa0c <rpl_re_set_registers@@Base+0x78bc>
   2a9a4:	ldr	x10, [x19, #120]
   2a9a8:	cbz	x10, 2aa0c <rpl_re_set_registers@@Base+0x78bc>
   2a9ac:	ldr	x9, [x19, #64]
   2a9b0:	ldr	x11, [x19, #88]
   2a9b4:	ldr	x8, [x19, #48]
   2a9b8:	cmp	x9, x11
   2a9bc:	csel	x9, x11, x9, gt
   2a9c0:	cmp	x8, x9
   2a9c4:	b.ge	2aa08 <rpl_re_set_registers@@Base+0x78b8>  // b.tcont
   2a9c8:	ldr	x11, [x19, #40]
   2a9cc:	ldp	x12, x13, [x19]
   2a9d0:	add	x11, x11, x8
   2a9d4:	ldrb	w11, [x12, x11]
   2a9d8:	ldrb	w10, [x10, x11]
   2a9dc:	strb	w10, [x13, x8]
   2a9e0:	add	x8, x8, #0x1
   2a9e4:	cmp	x8, x9
   2a9e8:	b.ge	2aa08 <rpl_re_set_registers@@Base+0x78b8>  // b.tcont
   2a9ec:	ldr	x10, [x19, #40]
   2a9f0:	ldp	x11, x13, [x19]
   2a9f4:	ldr	x12, [x19, #120]
   2a9f8:	add	x10, x11, x10
   2a9fc:	ldrb	w10, [x10, x8]
   2aa00:	ldrb	w10, [x12, x10]
   2aa04:	b	2a9dc <rpl_re_set_registers@@Base+0x788c>
   2aa08:	stp	x8, x8, [x19, #48]
   2aa0c:	mov	w0, wzr
   2aa10:	ldp	x20, x19, [sp, #32]
   2aa14:	ldr	x21, [sp, #16]
   2aa18:	ldp	x29, x30, [sp], #48
   2aa1c:	ret
   2aa20:	mov	w0, #0xc                   	// #12
   2aa24:	b	2aa10 <rpl_re_set_registers@@Base+0x78c0>
   2aa28:	sub	sp, sp, #0x60
   2aa2c:	stp	x29, x30, [sp, #32]
   2aa30:	stp	x24, x23, [sp, #48]
   2aa34:	stp	x22, x21, [sp, #64]
   2aa38:	stp	x20, x19, [sp, #80]
   2aa3c:	ldr	x20, [x1, #72]
   2aa40:	ldp	x8, x9, [x1, #184]
   2aa44:	ldr	x22, [x1, #152]
   2aa48:	mov	x24, x2
   2aa4c:	mov	x19, x1
   2aa50:	cmp	x20, x9
   2aa54:	mov	x21, x0
   2aa58:	add	x29, sp, #0x20
   2aa5c:	b.le	2aa6c <rpl_re_set_registers@@Base+0x791c>
   2aa60:	str	x24, [x8, x20, lsl #3]
   2aa64:	str	x20, [x19, #192]
   2aa68:	b	2ab90 <rpl_re_set_registers@@Base+0x7a40>
   2aa6c:	ldr	x9, [x8, x20, lsl #3]
   2aa70:	cbz	x9, 2aaa4 <rpl_re_set_registers@@Base+0x7954>
   2aa74:	ldr	x2, [x9, #80]
   2aa78:	cbz	x24, 2aaac <rpl_re_set_registers@@Base+0x795c>
   2aa7c:	ldr	x23, [x24, #80]
   2aa80:	mov	x0, sp
   2aa84:	mov	x1, x23
   2aa88:	bl	2ac30 <rpl_re_set_registers@@Base+0x7ae0>
   2aa8c:	str	w0, [x21]
   2aa90:	cbnz	w0, 2abf8 <rpl_re_set_registers@@Base+0x7aa8>
   2aa94:	ldr	x8, [x19, #72]
   2aa98:	cmp	x8, #0x0
   2aa9c:	b.gt	2aacc <rpl_re_set_registers@@Base+0x797c>
   2aaa0:	b	2ab08 <rpl_re_set_registers@@Base+0x79b8>
   2aaa4:	str	x24, [x8, x20, lsl #3]
   2aaa8:	b	2ab90 <rpl_re_set_registers@@Base+0x7a40>
   2aaac:	ldr	x8, [x2, #16]
   2aab0:	ldr	q0, [x2]
   2aab4:	mov	x23, xzr
   2aab8:	str	x8, [sp, #16]
   2aabc:	mov	x8, x20
   2aac0:	str	q0, [sp]
   2aac4:	cmp	x8, #0x0
   2aac8:	b.le	2ab08 <rpl_re_set_registers@@Base+0x79b8>
   2aacc:	ldr	x10, [x19, #88]
   2aad0:	sub	x9, x8, #0x1
   2aad4:	cmp	x10, x9
   2aad8:	b.eq	2ac00 <rpl_re_set_registers@@Base+0x7ab0>  // b.none
   2aadc:	ldr	w10, [x19, #144]
   2aae0:	cmp	w10, #0x2
   2aae4:	b.lt	2ab10 <rpl_re_set_registers@@Base+0x79c0>  // b.tstop
   2aae8:	ldr	x9, [x19, #16]
   2aaec:	sub	x9, x9, #0x4
   2aaf0:	ldr	w24, [x9, x8, lsl #2]
   2aaf4:	cmn	w24, #0x1
   2aaf8:	b.ne	2ab38 <rpl_re_set_registers@@Base+0x79e8>  // b.any
   2aafc:	sub	x8, x8, #0x1
   2ab00:	cmp	x8, #0x0
   2ab04:	b.gt	2aaf0 <rpl_re_set_registers@@Base+0x79a0>
   2ab08:	ldr	w3, [x19, #112]
   2ab0c:	b	2ab68 <rpl_re_set_registers@@Base+0x7a18>
   2ab10:	ldr	x8, [x19, #8]
   2ab14:	ldrb	w8, [x8, x9]
   2ab18:	ldr	x9, [x19, #128]
   2ab1c:	lsr	x10, x8, #3
   2ab20:	and	x10, x10, #0x18
   2ab24:	ldr	x9, [x9, x10]
   2ab28:	lsr	x9, x9, x8
   2ab2c:	tbz	w9, #0, 2ab5c <rpl_re_set_registers@@Base+0x7a0c>
   2ab30:	mov	w3, #0x1                   	// #1
   2ab34:	b	2ab68 <rpl_re_set_registers@@Base+0x7a18>
   2ab38:	ldrb	w8, [x19, #142]
   2ab3c:	cbnz	w8, 2ac14 <rpl_re_set_registers@@Base+0x7ac4>
   2ab40:	cmp	w24, #0xa
   2ab44:	b.ne	2ab64 <rpl_re_set_registers@@Base+0x7a14>  // b.any
   2ab48:	ldrb	w8, [x19, #141]
   2ab4c:	cmp	w8, #0x0
   2ab50:	cset	w8, ne  // ne = any
   2ab54:	lsl	w3, w8, #1
   2ab58:	b	2ab68 <rpl_re_set_registers@@Base+0x7a18>
   2ab5c:	cmp	w8, #0xa
   2ab60:	b.eq	2ab48 <rpl_re_set_registers@@Base+0x79f8>  // b.none
   2ab64:	mov	w3, wzr
   2ab68:	mov	x2, sp
   2ab6c:	mov	x0, x21
   2ab70:	mov	x1, x22
   2ab74:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   2ab78:	ldr	x8, [x19, #184]
   2ab7c:	mov	x24, x0
   2ab80:	str	x0, [x8, x20, lsl #3]
   2ab84:	cbz	x23, 2ab90 <rpl_re_set_registers@@Base+0x7a40>
   2ab88:	ldr	x0, [sp, #16]
   2ab8c:	bl	a960 <free@plt>
   2ab90:	cbz	x24, 2abdc <rpl_re_set_registers@@Base+0x7a8c>
   2ab94:	ldr	x8, [x22, #152]
   2ab98:	cbz	x8, 2abdc <rpl_re_set_registers@@Base+0x7a8c>
   2ab9c:	add	x22, x24, #0x8
   2aba0:	mov	x0, x19
   2aba4:	mov	x1, x22
   2aba8:	mov	x2, x20
   2abac:	bl	29ea4 <rpl_re_set_registers@@Base+0x6d54>
   2abb0:	str	w0, [x21]
   2abb4:	cbnz	w0, 2abf8 <rpl_re_set_registers@@Base+0x7aa8>
   2abb8:	ldrb	w8, [x24, #104]
   2abbc:	tbz	w8, #6, 2abdc <rpl_re_set_registers@@Base+0x7a8c>
   2abc0:	mov	x0, x19
   2abc4:	mov	x1, x22
   2abc8:	bl	29fb0 <rpl_re_set_registers@@Base+0x6e60>
   2abcc:	str	w0, [x21]
   2abd0:	cbnz	w0, 2abf8 <rpl_re_set_registers@@Base+0x7aa8>
   2abd4:	ldr	x8, [x19, #184]
   2abd8:	ldr	x24, [x8, x20, lsl #3]
   2abdc:	mov	x0, x24
   2abe0:	ldp	x20, x19, [sp, #80]
   2abe4:	ldp	x22, x21, [sp, #64]
   2abe8:	ldp	x24, x23, [sp, #48]
   2abec:	ldp	x29, x30, [sp, #32]
   2abf0:	add	sp, sp, #0x60
   2abf4:	ret
   2abf8:	mov	x24, xzr
   2abfc:	b	2abdc <rpl_re_set_registers@@Base+0x7a8c>
   2ac00:	ldr	w8, [x19, #160]
   2ac04:	mov	w9, #0xa                   	// #10
   2ac08:	and	w8, w8, #0x2
   2ac0c:	eor	w3, w8, w9
   2ac10:	b	2ab68 <rpl_re_set_registers@@Base+0x7a18>
   2ac14:	mov	w0, w24
   2ac18:	bl	ac10 <iswalnum@plt>
   2ac1c:	cmp	w24, #0x5f
   2ac20:	mov	w3, #0x1                   	// #1
   2ac24:	b.eq	2ab68 <rpl_re_set_registers@@Base+0x7a18>  // b.none
   2ac28:	cbz	w0, 2ab40 <rpl_re_set_registers@@Base+0x79f0>
   2ac2c:	b	2ab68 <rpl_re_set_registers@@Base+0x7a18>
   2ac30:	stp	x29, x30, [sp, #-80]!
   2ac34:	stp	x20, x19, [sp, #64]
   2ac38:	mov	x20, x2
   2ac3c:	mov	x19, x0
   2ac40:	stp	x26, x25, [sp, #16]
   2ac44:	stp	x24, x23, [sp, #32]
   2ac48:	stp	x22, x21, [sp, #48]
   2ac4c:	mov	x29, sp
   2ac50:	cbz	x1, 2ad78 <rpl_re_set_registers@@Base+0x7c28>
   2ac54:	ldr	x24, [x1, #8]
   2ac58:	mov	x21, x1
   2ac5c:	cbz	x20, 2ad40 <rpl_re_set_registers@@Base+0x7bf0>
   2ac60:	cmp	x24, #0x1
   2ac64:	b.lt	2ad40 <rpl_re_set_registers@@Base+0x7bf0>  // b.tstop
   2ac68:	ldr	x23, [x20, #8]
   2ac6c:	cmp	x23, #0x1
   2ac70:	b.lt	2ad40 <rpl_re_set_registers@@Base+0x7bf0>  // b.tstop
   2ac74:	add	x8, x23, x24
   2ac78:	lsl	x0, x8, #3
   2ac7c:	str	x8, [x19]
   2ac80:	bl	a540 <malloc@plt>
   2ac84:	str	x0, [x19, #16]
   2ac88:	cbz	x0, 2ae18 <rpl_re_set_registers@@Base+0x7cc8>
   2ac8c:	mov	x25, xzr
   2ac90:	mov	x22, xzr
   2ac94:	mov	x11, xzr
   2ac98:	mov	x9, xzr
   2ac9c:	mov	w10, #0x1                   	// #1
   2aca0:	add	x8, x0, x22, lsl #3
   2aca4:	mov	x26, x11
   2aca8:	tbz	w10, #0, 2add0 <rpl_re_set_registers@@Base+0x7c80>
   2acac:	ldr	x10, [x21, #16]
   2acb0:	ldr	x11, [x20, #16]
   2acb4:	ldr	x13, [x10, x9, lsl #3]
   2acb8:	ldr	x12, [x11, x26, lsl #3]
   2acbc:	cmp	x13, x12
   2acc0:	b.le	2ace4 <rpl_re_set_registers@@Base+0x7b94>
   2acc4:	add	x26, x26, #0x1
   2acc8:	cmp	x23, x26
   2accc:	add	x22, x22, #0x1
   2acd0:	cset	w10, gt
   2acd4:	cmp	x24, x9
   2acd8:	str	x12, [x8], #8
   2acdc:	b.gt	2aca8 <rpl_re_set_registers@@Base+0x7b58>
   2ace0:	b	2ad18 <rpl_re_set_registers@@Base+0x7bc8>
   2ace4:	str	x13, [x8]
   2ace8:	ldr	x23, [x20, #8]
   2acec:	ldr	x24, [x21, #8]
   2acf0:	cinc	x11, x26, eq  // eq = none
   2acf4:	add	x9, x9, #0x1
   2acf8:	cmp	x23, x11
   2acfc:	add	x22, x22, #0x1
   2ad00:	cset	w10, gt
   2ad04:	cmp	x24, x9
   2ad08:	sub	x25, x25, #0x1
   2ad0c:	b.gt	2aca0 <rpl_re_set_registers@@Base+0x7b50>
   2ad10:	cmp	x13, x12
   2ad14:	cinc	x26, x26, eq  // eq = none
   2ad18:	cbz	w10, 2adf4 <rpl_re_set_registers@@Base+0x7ca4>
   2ad1c:	ldr	x8, [x20, #16]
   2ad20:	sub	x9, x23, x26
   2ad24:	add	x0, x0, x22, lsl #3
   2ad28:	lsl	x2, x9, #3
   2ad2c:	add	x1, x8, x26, lsl #3
   2ad30:	bl	a210 <memcpy@plt>
   2ad34:	sub	x8, x22, x26
   2ad38:	add	x22, x8, x23
   2ad3c:	b	2adf4 <rpl_re_set_registers@@Base+0x7ca4>
   2ad40:	cmp	x24, #0x1
   2ad44:	b.lt	2ad78 <rpl_re_set_registers@@Base+0x7c28>  // b.tstop
   2ad48:	str	x24, [x19, #8]
   2ad4c:	ldr	x20, [x21, #8]
   2ad50:	cmp	x20, #0x1
   2ad54:	b.lt	2adc0 <rpl_re_set_registers@@Base+0x7c70>  // b.tstop
   2ad58:	lsl	x0, x24, #3
   2ad5c:	str	x24, [x19]
   2ad60:	bl	a540 <malloc@plt>
   2ad64:	str	x0, [x19, #16]
   2ad68:	cbz	x0, 2ae14 <rpl_re_set_registers@@Base+0x7cc4>
   2ad6c:	ldr	x1, [x21, #16]
   2ad70:	lsl	x2, x20, #3
   2ad74:	b	2adb4 <rpl_re_set_registers@@Base+0x7c64>
   2ad78:	cbz	x20, 2adc0 <rpl_re_set_registers@@Base+0x7c70>
   2ad7c:	ldr	x8, [x20, #8]
   2ad80:	cmp	x8, #0x1
   2ad84:	b.lt	2adc0 <rpl_re_set_registers@@Base+0x7c70>  // b.tstop
   2ad88:	str	x8, [x19, #8]
   2ad8c:	ldr	x21, [x20, #8]
   2ad90:	cmp	x21, #0x1
   2ad94:	b.lt	2adc0 <rpl_re_set_registers@@Base+0x7c70>  // b.tstop
   2ad98:	lsl	x0, x8, #3
   2ad9c:	str	x8, [x19]
   2ada0:	bl	a540 <malloc@plt>
   2ada4:	str	x0, [x19, #16]
   2ada8:	cbz	x0, 2ae14 <rpl_re_set_registers@@Base+0x7cc4>
   2adac:	ldr	x1, [x20, #16]
   2adb0:	lsl	x2, x21, #3
   2adb4:	bl	a210 <memcpy@plt>
   2adb8:	mov	w0, wzr
   2adbc:	b	2adfc <rpl_re_set_registers@@Base+0x7cac>
   2adc0:	mov	w0, wzr
   2adc4:	stp	xzr, xzr, [x19]
   2adc8:	str	xzr, [x19, #16]
   2adcc:	b	2adfc <rpl_re_set_registers@@Base+0x7cac>
   2add0:	ldr	x10, [x21, #16]
   2add4:	sub	x11, x24, x9
   2add8:	lsl	x2, x11, #3
   2addc:	mov	x0, x8
   2ade0:	add	x1, x10, x9, lsl #3
   2ade4:	bl	a210 <memcpy@plt>
   2ade8:	ldr	x8, [x21, #8]
   2adec:	add	x8, x8, x25
   2adf0:	add	x22, x8, x22
   2adf4:	mov	w0, wzr
   2adf8:	str	x22, [x19, #8]
   2adfc:	ldp	x20, x19, [sp, #64]
   2ae00:	ldp	x22, x21, [sp, #48]
   2ae04:	ldp	x24, x23, [sp, #32]
   2ae08:	ldp	x26, x25, [sp, #16]
   2ae0c:	ldp	x29, x30, [sp], #80
   2ae10:	ret
   2ae14:	stp	xzr, xzr, [x19]
   2ae18:	mov	w0, #0xc                   	// #12
   2ae1c:	b	2adfc <rpl_re_set_registers@@Base+0x7cac>
   2ae20:	stp	x29, x30, [sp, #-96]!
   2ae24:	stp	x28, x27, [sp, #16]
   2ae28:	stp	x26, x25, [sp, #32]
   2ae2c:	stp	x24, x23, [sp, #48]
   2ae30:	stp	x22, x21, [sp, #64]
   2ae34:	stp	x20, x19, [sp, #80]
   2ae38:	mov	x22, x2
   2ae3c:	mov	x23, x3
   2ae40:	ldr	x2, [x2]
   2ae44:	ldr	x3, [x22, #8]
   2ae48:	mov	x20, x4
   2ae4c:	mov	x21, x1
   2ae50:	add	x1, x22, #0x10
   2ae54:	mov	w6, #0x8                   	// #8
   2ae58:	mov	x4, x23
   2ae5c:	mov	x5, x20
   2ae60:	mov	x29, sp
   2ae64:	mov	x19, x0
   2ae68:	bl	2afec <rpl_re_set_registers@@Base+0x7e9c>
   2ae6c:	cbz	w0, 2ae8c <rpl_re_set_registers@@Base+0x7d3c>
   2ae70:	ldp	x20, x19, [sp, #80]
   2ae74:	ldp	x22, x21, [sp, #64]
   2ae78:	ldp	x24, x23, [sp, #48]
   2ae7c:	ldp	x26, x25, [sp, #32]
   2ae80:	ldp	x28, x27, [sp, #16]
   2ae84:	ldp	x29, x30, [sp], #96
   2ae88:	ret
   2ae8c:	ldp	x27, x8, [x19, #200]
   2ae90:	ldr	x26, [x21]
   2ae94:	ldr	x25, [x22, #8]
   2ae98:	cmp	x27, x8
   2ae9c:	b.ge	2aeb0 <rpl_re_set_registers@@Base+0x7d60>  // b.tcont
   2aea0:	ldr	x24, [x19, #216]
   2aea4:	subs	x8, x27, #0x1
   2aea8:	b.ge	2aef8 <rpl_re_set_registers@@Base+0x7da8>  // b.tcont
   2aeac:	b	2af1c <rpl_re_set_registers@@Base+0x7dcc>
   2aeb0:	ldr	x0, [x19, #216]
   2aeb4:	add	x8, x8, x8, lsl #2
   2aeb8:	lsl	x1, x8, #4
   2aebc:	bl	a720 <realloc@plt>
   2aec0:	cbz	x0, 2afdc <rpl_re_set_registers@@Base+0x7e8c>
   2aec4:	ldp	x27, x28, [x19, #200]
   2aec8:	mov	w8, #0x28                  	// #40
   2aecc:	mov	x24, x0
   2aed0:	str	x0, [x19, #216]
   2aed4:	madd	x0, x27, x8, x0
   2aed8:	add	x8, x28, x28, lsl #2
   2aedc:	lsl	x2, x8, #3
   2aee0:	mov	w1, wzr
   2aee4:	bl	a630 <memset@plt>
   2aee8:	lsl	x8, x28, #1
   2aeec:	str	x8, [x19, #208]
   2aef0:	subs	x8, x27, #0x1
   2aef4:	b.lt	2af1c <rpl_re_set_registers@@Base+0x7dcc>  // b.tstop
   2aef8:	mov	w9, #0x28                  	// #40
   2aefc:	madd	x9, x8, x9, x24
   2af00:	ldr	x9, [x9, #8]
   2af04:	cmp	x9, x20
   2af08:	b.ne	2af1c <rpl_re_set_registers@@Base+0x7dcc>  // b.any
   2af0c:	mov	w9, #0x28                  	// #40
   2af10:	madd	x8, x8, x9, x24
   2af14:	mov	w9, #0x1                   	// #1
   2af18:	strb	w9, [x8, #32]
   2af1c:	mov	w9, #0x28                  	// #40
   2af20:	subs	x8, x25, x26
   2af24:	add	x10, x27, #0x1
   2af28:	madd	x9, x27, x9, x24
   2af2c:	csetm	w11, eq  // eq = none
   2af30:	stp	x23, x20, [x9]
   2af34:	stp	x26, x25, [x9, #16]
   2af38:	strh	w11, [x9, #34]
   2af3c:	str	x10, [x19, #200]
   2af40:	strb	wzr, [x9, #32]
   2af44:	ldrsw	x9, [x19, #224]
   2af48:	cmp	x8, x9
   2af4c:	b.le	2af54 <rpl_re_set_registers@@Base+0x7e04>
   2af50:	str	w8, [x19, #224]
   2af54:	ldr	x9, [x22, #8]
   2af58:	ldr	x10, [x21]
   2af5c:	ldr	x8, [x19, #64]
   2af60:	ldr	x21, [x19, #192]
   2af64:	add	x9, x9, x20
   2af68:	sub	x20, x9, x10
   2af6c:	cmp	x8, x20
   2af70:	b.gt	2af80 <rpl_re_set_registers@@Base+0x7e30>
   2af74:	ldr	x9, [x19, #88]
   2af78:	cmp	x8, x9
   2af7c:	b.lt	2af98 <rpl_re_set_registers@@Base+0x7e48>  // b.tstop
   2af80:	ldr	x8, [x19, #48]
   2af84:	cmp	x8, x20
   2af88:	b.gt	2afa8 <rpl_re_set_registers@@Base+0x7e58>
   2af8c:	ldr	x9, [x19, #88]
   2af90:	cmp	x8, x9
   2af94:	b.ge	2afa8 <rpl_re_set_registers@@Base+0x7e58>  // b.tcont
   2af98:	add	w1, w20, #0x1
   2af9c:	mov	x0, x19
   2afa0:	bl	2a848 <rpl_re_set_registers@@Base+0x76f8>
   2afa4:	cbnz	w0, 2ae70 <rpl_re_set_registers@@Base+0x7d20>
   2afa8:	subs	x8, x20, x21
   2afac:	b.le	2afd4 <rpl_re_set_registers@@Base+0x7e84>
   2afb0:	ldr	x9, [x19, #184]
   2afb4:	lsl	x2, x8, #3
   2afb8:	mov	w1, wzr
   2afbc:	add	x9, x9, x21, lsl #3
   2afc0:	add	x0, x9, #0x8
   2afc4:	bl	a630 <memset@plt>
   2afc8:	mov	w0, wzr
   2afcc:	str	x20, [x19, #192]
   2afd0:	b	2ae70 <rpl_re_set_registers@@Base+0x7d20>
   2afd4:	mov	w0, wzr
   2afd8:	b	2ae70 <rpl_re_set_registers@@Base+0x7d20>
   2afdc:	ldr	x0, [x19, #216]
   2afe0:	bl	a960 <free@plt>
   2afe4:	mov	w0, #0xc                   	// #12
   2afe8:	b	2ae70 <rpl_re_set_registers@@Base+0x7d20>
   2afec:	sub	sp, sp, #0x100
   2aff0:	stp	x29, x30, [sp, #160]
   2aff4:	stp	x28, x27, [sp, #176]
   2aff8:	stp	x26, x25, [sp, #192]
   2affc:	stp	x24, x23, [sp, #208]
   2b000:	stp	x22, x21, [sp, #224]
   2b004:	stp	x20, x19, [sp, #240]
   2b008:	ldr	x8, [x0, #152]
   2b00c:	add	x29, sp, #0xa0
   2b010:	stur	wzr, [x29, #-36]
   2b014:	lsl	x10, x2, #4
   2b018:	str	x8, [sp, #48]
   2b01c:	ldr	x8, [x8]
   2b020:	ldrsw	x9, [x0, #224]
   2b024:	ldr	x21, [x1, #8]
   2b028:	mov	x22, x2
   2b02c:	ldr	x8, [x8, x10]
   2b030:	mov	x27, x1
   2b034:	mov	x20, x0
   2b038:	mov	x19, x3
   2b03c:	str	x8, [sp, #56]
   2b040:	add	x8, x9, x5
   2b044:	cmp	x21, x8
   2b048:	str	w6, [sp, #44]
   2b04c:	mov	x26, x4
   2b050:	str	x5, [sp, #32]
   2b054:	str	x4, [sp, #8]
   2b058:	b.le	2b7d0 <rpl_re_set_registers@@Base+0x8680>
   2b05c:	ldr	x23, [x27, #16]
   2b060:	mov	x24, x5
   2b064:	ldr	x8, [x27]
   2b068:	ldr	x28, [x20, #184]
   2b06c:	ldr	x21, [x20, #72]
   2b070:	str	x23, [x20, #184]
   2b074:	cmp	x8, #0x0
   2b078:	csel	x26, x19, x8, eq  // eq = none
   2b07c:	cmp	x26, #0x0
   2b080:	str	x26, [x20, #72]
   2b084:	b.le	2b0c8 <rpl_re_set_registers@@Base+0x7f78>
   2b088:	ldr	x9, [x20, #88]
   2b08c:	sub	x8, x26, #0x1
   2b090:	cmp	x9, x8
   2b094:	b.eq	2b820 <rpl_re_set_registers@@Base+0x86d0>  // b.none
   2b098:	ldr	w9, [x20, #144]
   2b09c:	cmp	w9, #0x2
   2b0a0:	b.lt	2b0d0 <rpl_re_set_registers@@Base+0x7f80>  // b.tstop
   2b0a4:	ldr	x8, [x20, #16]
   2b0a8:	mov	x9, x26
   2b0ac:	sub	x8, x8, #0x4
   2b0b0:	ldr	w25, [x8, x9, lsl #2]
   2b0b4:	cmn	w25, #0x1
   2b0b8:	b.ne	2b0f8 <rpl_re_set_registers@@Base+0x7fa8>  // b.any
   2b0bc:	sub	x9, x9, #0x1
   2b0c0:	cmp	x9, #0x0
   2b0c4:	b.gt	2b0b0 <rpl_re_set_registers@@Base+0x7f60>
   2b0c8:	ldr	w23, [x20, #112]
   2b0cc:	b	2b128 <rpl_re_set_registers@@Base+0x7fd8>
   2b0d0:	ldr	x9, [x20, #8]
   2b0d4:	ldrb	w8, [x9, x8]
   2b0d8:	ldr	x9, [x20, #128]
   2b0dc:	lsr	x10, x8, #3
   2b0e0:	and	x10, x10, #0x18
   2b0e4:	ldr	x9, [x9, x10]
   2b0e8:	lsr	x9, x9, x8
   2b0ec:	tbz	w9, #0, 2b11c <rpl_re_set_registers@@Base+0x7fcc>
   2b0f0:	mov	w23, #0x1                   	// #1
   2b0f4:	b	2b128 <rpl_re_set_registers@@Base+0x7fd8>
   2b0f8:	ldrb	w8, [x20, #142]
   2b0fc:	cbnz	w8, 2b854 <rpl_re_set_registers@@Base+0x8704>
   2b100:	cmp	w25, #0xa
   2b104:	b.ne	2b124 <rpl_re_set_registers@@Base+0x7fd4>  // b.any
   2b108:	ldrb	w8, [x20, #141]
   2b10c:	cmp	w8, #0x0
   2b110:	cset	w8, ne  // ne = any
   2b114:	lsl	w23, w8, #1
   2b118:	b	2b128 <rpl_re_set_registers@@Base+0x7fd8>
   2b11c:	cmp	w8, #0xa
   2b120:	b.eq	2b108 <rpl_re_set_registers@@Base+0x7fb8>  // b.none
   2b124:	mov	w23, wzr
   2b128:	cmp	x26, x19
   2b12c:	stp	x28, x27, [sp, #16]
   2b130:	b.ne	2b1d4 <rpl_re_set_registers@@Base+0x8084>  // b.any
   2b134:	mov	w8, #0x1                   	// #1
   2b138:	dup	v0.2d, x8
   2b13c:	mov	w0, #0x8                   	// #8
   2b140:	stur	q0, [x29, #-64]
   2b144:	bl	a540 <malloc@plt>
   2b148:	stur	x0, [x29, #-48]
   2b14c:	cbz	x0, 2b844 <rpl_re_set_registers@@Base+0x86f4>
   2b150:	str	x22, [x0]
   2b154:	ldp	x0, x22, [sp, #48]
   2b158:	ldr	w3, [sp, #44]
   2b15c:	sub	x1, x29, #0x40
   2b160:	stur	wzr, [x29, #-36]
   2b164:	mov	x2, x22
   2b168:	bl	2b878 <rpl_re_set_registers@@Base+0x8728>
   2b16c:	stur	w0, [x29, #-36]
   2b170:	cbnz	w0, 2b834 <rpl_re_set_registers@@Base+0x86e4>
   2b174:	ldur	x8, [x29, #-56]
   2b178:	cbz	x8, 2b19c <rpl_re_set_registers@@Base+0x804c>
   2b17c:	ldr	w4, [sp, #44]
   2b180:	sub	x1, x29, #0x40
   2b184:	mov	x0, x20
   2b188:	mov	x2, x26
   2b18c:	mov	x3, x22
   2b190:	bl	2b9bc <rpl_re_set_registers@@Base+0x886c>
   2b194:	stur	w0, [x29, #-36]
   2b198:	cbnz	w0, 2b834 <rpl_re_set_registers@@Base+0x86e4>
   2b19c:	ldr	x1, [sp, #48]
   2b1a0:	sub	x0, x29, #0x24
   2b1a4:	sub	x2, x29, #0x40
   2b1a8:	mov	w3, w23
   2b1ac:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   2b1b0:	mov	x28, x0
   2b1b4:	cbnz	x0, 2b1c0 <rpl_re_set_registers@@Base+0x8070>
   2b1b8:	ldur	w8, [x29, #-36]
   2b1bc:	cbnz	w8, 2b79c <rpl_re_set_registers@@Base+0x864c>
   2b1c0:	ldr	x8, [x20, #184]
   2b1c4:	str	x28, [x8, x26, lsl #3]
   2b1c8:	cmp	x26, x24
   2b1cc:	b.ge	2b6c8 <rpl_re_set_registers@@Base+0x8578>  // b.tcont
   2b1d0:	b	2b24c <rpl_re_set_registers@@Base+0x80fc>
   2b1d4:	ldr	x8, [x20, #184]
   2b1d8:	ldr	x28, [x8, x26, lsl #3]
   2b1dc:	cbz	x28, 2b238 <rpl_re_set_registers@@Base+0x80e8>
   2b1e0:	ldrb	w8, [x28, #104]
   2b1e4:	ldr	x22, [sp, #56]
   2b1e8:	tbz	w8, #6, 2b23c <rpl_re_set_registers@@Base+0x80ec>
   2b1ec:	ldr	x8, [x28, #16]
   2b1f0:	cmp	x8, #0x1
   2b1f4:	stur	x8, [x29, #-56]
   2b1f8:	b.lt	2b77c <rpl_re_set_registers@@Base+0x862c>  // b.tstop
   2b1fc:	lsl	x19, x8, #3
   2b200:	mov	x0, x19
   2b204:	stur	x8, [x29, #-64]
   2b208:	bl	a540 <malloc@plt>
   2b20c:	stur	x0, [x29, #-48]
   2b210:	cbz	x0, 2b844 <rpl_re_set_registers@@Base+0x86f4>
   2b214:	ldr	x1, [x28, #24]
   2b218:	mov	x2, x19
   2b21c:	bl	a210 <memcpy@plt>
   2b220:	ldrb	w8, [x28, #104]
   2b224:	stur	wzr, [x29, #-36]
   2b228:	tbnz	w8, #6, 2b17c <rpl_re_set_registers@@Base+0x802c>
   2b22c:	cmp	x26, x24
   2b230:	b.ge	2b6c8 <rpl_re_set_registers@@Base+0x8578>  // b.tcont
   2b234:	b	2b24c <rpl_re_set_registers@@Base+0x80fc>
   2b238:	ldr	x22, [sp, #56]
   2b23c:	stp	xzr, xzr, [x29, #-64]
   2b240:	stur	xzr, [x29, #-48]
   2b244:	cmp	x26, x24
   2b248:	b.ge	2b6c8 <rpl_re_set_registers@@Base+0x8578>  // b.tcont
   2b24c:	str	x21, [sp]
   2b250:	ldr	w21, [sp, #44]
   2b254:	ldr	x23, [sp, #48]
   2b258:	mov	w8, #0x1                   	// #1
   2b25c:	mov	x9, xzr
   2b260:	dup	v0.2d, x8
   2b264:	str	q0, [sp, #80]
   2b268:	b	2b288 <rpl_re_set_registers@@Base+0x8138>
   2b26c:	ldp	x9, x26, [sp, #64]
   2b270:	ldr	x8, [x20, #184]
   2b274:	cmp	x28, #0x0
   2b278:	csinc	x9, xzr, x9, ne  // ne = any
   2b27c:	cmp	x26, x24
   2b280:	str	x28, [x8, x26, lsl #3]
   2b284:	b.eq	2b6c0 <rpl_re_set_registers@@Base+0x8570>  // b.none
   2b288:	ldrsw	x8, [x20, #224]
   2b28c:	cmp	x9, x8
   2b290:	b.gt	2b6c4 <rpl_re_set_registers@@Base+0x8574>
   2b294:	stur	xzr, [x29, #-56]
   2b298:	ldr	x8, [x20, #184]
   2b29c:	str	x9, [sp, #64]
   2b2a0:	add	x9, x26, #0x1
   2b2a4:	str	x9, [sp, #72]
   2b2a8:	ldr	x8, [x8, x9, lsl #3]
   2b2ac:	cbz	x8, 2b2c4 <rpl_re_set_registers@@Base+0x8174>
   2b2b0:	add	x1, x8, #0x8
   2b2b4:	sub	x0, x29, #0x40
   2b2b8:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   2b2bc:	stur	w0, [x29, #-36]
   2b2c0:	cbnz	w0, 2b79c <rpl_re_set_registers@@Base+0x864c>
   2b2c4:	cbz	x28, 2b590 <rpl_re_set_registers@@Base+0x8440>
   2b2c8:	ldr	x22, [x20, #152]
   2b2cc:	stur	wzr, [x29, #-4]
   2b2d0:	stp	xzr, xzr, [x29, #-32]
   2b2d4:	stur	xzr, [x29, #-16]
   2b2d8:	ldr	x8, [x28, #40]
   2b2dc:	cmp	x8, #0x1
   2b2e0:	b.lt	2b580 <rpl_re_set_registers@@Base+0x8430>  // b.tstop
   2b2e4:	mov	x24, xzr
   2b2e8:	b	2b318 <rpl_re_set_registers@@Base+0x81c8>
   2b2ec:	ldur	x8, [x29, #-56]
   2b2f0:	cbnz	x8, 2b444 <rpl_re_set_registers@@Base+0x82f4>
   2b2f4:	ldur	x8, [x29, #-48]
   2b2f8:	str	x19, [x8]
   2b2fc:	ldur	x8, [x29, #-56]
   2b300:	add	x8, x8, #0x1
   2b304:	stur	x8, [x29, #-56]
   2b308:	ldr	x8, [x28, #40]
   2b30c:	add	x24, x24, #0x1
   2b310:	cmp	x24, x8
   2b314:	b.ge	2b56c <rpl_re_set_registers@@Base+0x841c>  // b.tcont
   2b318:	ldr	x8, [x28, #48]
   2b31c:	ldr	x19, [x8, x24, lsl #3]
   2b320:	ldr	x8, [x22]
   2b324:	add	x9, x8, x19, lsl #4
   2b328:	ldrb	w9, [x9, #10]
   2b32c:	tbz	w9, #4, 2b400 <rpl_re_set_registers@@Base+0x82b0>
   2b330:	mov	x0, x22
   2b334:	mov	x1, x19
   2b338:	mov	x2, x20
   2b33c:	mov	x3, x26
   2b340:	bl	2c21c <rpl_re_set_registers@@Base+0x90cc>
   2b344:	mov	w23, w0
   2b348:	cmp	w0, #0x2
   2b34c:	b.lt	2b3f8 <rpl_re_set_registers@@Base+0x82a8>  // b.tstop
   2b350:	ldr	x8, [x20, #184]
   2b354:	ldr	x9, [x22, #24]
   2b358:	add	x27, x26, w23, uxtw
   2b35c:	ldr	x8, [x8, x27, lsl #3]
   2b360:	ldr	x21, [x9, x19, lsl #3]
   2b364:	stur	xzr, [x29, #-24]
   2b368:	cbz	x8, 2b380 <rpl_re_set_registers@@Base+0x8230>
   2b36c:	add	x1, x8, #0x8
   2b370:	sub	x0, x29, #0x20
   2b374:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   2b378:	stur	w0, [x29, #-4]
   2b37c:	cbnz	w0, 2b7a4 <rpl_re_set_registers@@Base+0x8654>
   2b380:	ldur	x9, [x29, #-32]
   2b384:	cbz	x9, 2b3a8 <rpl_re_set_registers@@Base+0x8258>
   2b388:	ldur	x8, [x29, #-24]
   2b38c:	cbnz	x8, 2b4d8 <rpl_re_set_registers@@Base+0x8388>
   2b390:	ldur	x8, [x29, #-16]
   2b394:	str	x21, [x8]
   2b398:	ldur	x8, [x29, #-24]
   2b39c:	add	x8, x8, #0x1
   2b3a0:	stur	x8, [x29, #-24]
   2b3a4:	b	2b3c8 <rpl_re_set_registers@@Base+0x8278>
   2b3a8:	mov	w8, #0x1                   	// #1
   2b3ac:	dup	v0.2d, x8
   2b3b0:	mov	w0, #0x8                   	// #8
   2b3b4:	stur	q0, [x29, #-32]
   2b3b8:	bl	a540 <malloc@plt>
   2b3bc:	stur	x0, [x29, #-16]
   2b3c0:	cbz	x0, 2b7c4 <rpl_re_set_registers@@Base+0x8674>
   2b3c4:	str	x21, [x0]
   2b3c8:	sub	x0, x29, #0x4
   2b3cc:	sub	x2, x29, #0x20
   2b3d0:	mov	x1, x22
   2b3d4:	bl	2bfa0 <rpl_re_set_registers@@Base+0x8e50>
   2b3d8:	ldr	x8, [x20, #184]
   2b3dc:	lsl	x9, x27, #3
   2b3e0:	str	x0, [x8, x9]
   2b3e4:	ldr	x8, [x20, #184]
   2b3e8:	ldr	x8, [x8, x9]
   2b3ec:	cbnz	x8, 2b3f8 <rpl_re_set_registers@@Base+0x82a8>
   2b3f0:	ldur	w25, [x29, #-4]
   2b3f4:	cbnz	w25, 2b7a8 <rpl_re_set_registers@@Base+0x8658>
   2b3f8:	cbnz	w23, 2b414 <rpl_re_set_registers@@Base+0x82c4>
   2b3fc:	ldr	x8, [x22]
   2b400:	add	x1, x8, x19, lsl #4
   2b404:	mov	x0, x20
   2b408:	mov	x2, x26
   2b40c:	bl	2c534 <rpl_re_set_registers@@Base+0x93e4>
   2b410:	tbz	w0, #0, 2b308 <rpl_re_set_registers@@Base+0x81b8>
   2b414:	ldr	x8, [x22, #24]
   2b418:	ldur	x9, [x29, #-64]
   2b41c:	ldr	x19, [x8, x19, lsl #3]
   2b420:	cbnz	x9, 2b2ec <rpl_re_set_registers@@Base+0x819c>
   2b424:	ldr	q0, [sp, #80]
   2b428:	mov	w0, #0x8                   	// #8
   2b42c:	stur	q0, [x29, #-64]
   2b430:	bl	a540 <malloc@plt>
   2b434:	stur	x0, [x29, #-48]
   2b438:	cbz	x0, 2b78c <rpl_re_set_registers@@Base+0x863c>
   2b43c:	str	x19, [x0]
   2b440:	b	2b308 <rpl_re_set_registers@@Base+0x81b8>
   2b444:	cmp	x9, x8
   2b448:	b.ne	2b470 <rpl_re_set_registers@@Base+0x8320>  // b.any
   2b44c:	ldur	x0, [x29, #-48]
   2b450:	lsl	x8, x9, #1
   2b454:	lsl	x1, x9, #4
   2b458:	stur	x8, [x29, #-64]
   2b45c:	bl	a720 <realloc@plt>
   2b460:	cbz	x0, 2b790 <rpl_re_set_registers@@Base+0x8640>
   2b464:	ldur	x8, [x29, #-56]
   2b468:	stur	x0, [x29, #-48]
   2b46c:	b	2b474 <rpl_re_set_registers@@Base+0x8324>
   2b470:	ldur	x0, [x29, #-48]
   2b474:	ldr	x9, [x0]
   2b478:	cmp	x9, x19
   2b47c:	b.le	2b4a8 <rpl_re_set_registers@@Base+0x8358>
   2b480:	cmp	x8, #0x1
   2b484:	b.lt	2b4d0 <rpl_re_set_registers@@Base+0x8380>  // b.tstop
   2b488:	mov	x9, x8
   2b48c:	add	x10, x0, x9, lsl #3
   2b490:	ldur	x11, [x10, #-8]
   2b494:	subs	x8, x9, #0x1
   2b498:	mov	x9, x8
   2b49c:	str	x11, [x10]
   2b4a0:	b.gt	2b48c <rpl_re_set_registers@@Base+0x833c>
   2b4a4:	b	2b4d0 <rpl_re_set_registers@@Base+0x8380>
   2b4a8:	add	x9, x0, x8, lsl #3
   2b4ac:	ldur	x9, [x9, #-8]
   2b4b0:	cmp	x9, x19
   2b4b4:	b.le	2b4d0 <rpl_re_set_registers@@Base+0x8380>
   2b4b8:	add	x10, x0, x8, lsl #3
   2b4bc:	str	x9, [x10]
   2b4c0:	ldur	x9, [x10, #-16]
   2b4c4:	sub	x8, x8, #0x1
   2b4c8:	cmp	x9, x19
   2b4cc:	b.gt	2b4b8 <rpl_re_set_registers@@Base+0x8368>
   2b4d0:	str	x19, [x0, x8, lsl #3]
   2b4d4:	b	2b2fc <rpl_re_set_registers@@Base+0x81ac>
   2b4d8:	cmp	x9, x8
   2b4dc:	b.ne	2b504 <rpl_re_set_registers@@Base+0x83b4>  // b.any
   2b4e0:	ldur	x0, [x29, #-16]
   2b4e4:	lsl	x8, x9, #1
   2b4e8:	lsl	x1, x9, #4
   2b4ec:	stur	x8, [x29, #-32]
   2b4f0:	bl	a720 <realloc@plt>
   2b4f4:	cbz	x0, 2b790 <rpl_re_set_registers@@Base+0x8640>
   2b4f8:	ldur	x8, [x29, #-24]
   2b4fc:	stur	x0, [x29, #-16]
   2b500:	b	2b508 <rpl_re_set_registers@@Base+0x83b8>
   2b504:	ldur	x0, [x29, #-16]
   2b508:	ldr	x9, [x0]
   2b50c:	cmp	x9, x21
   2b510:	b.le	2b53c <rpl_re_set_registers@@Base+0x83ec>
   2b514:	cmp	x8, #0x1
   2b518:	b.lt	2b564 <rpl_re_set_registers@@Base+0x8414>  // b.tstop
   2b51c:	mov	x9, x8
   2b520:	add	x10, x0, x9, lsl #3
   2b524:	ldur	x11, [x10, #-8]
   2b528:	subs	x8, x9, #0x1
   2b52c:	mov	x9, x8
   2b530:	str	x11, [x10]
   2b534:	b.gt	2b520 <rpl_re_set_registers@@Base+0x83d0>
   2b538:	b	2b564 <rpl_re_set_registers@@Base+0x8414>
   2b53c:	add	x9, x0, x8, lsl #3
   2b540:	ldur	x9, [x9, #-8]
   2b544:	cmp	x9, x21
   2b548:	b.le	2b564 <rpl_re_set_registers@@Base+0x8414>
   2b54c:	add	x10, x0, x8, lsl #3
   2b550:	str	x9, [x10]
   2b554:	ldur	x9, [x10, #-16]
   2b558:	sub	x8, x8, #0x1
   2b55c:	cmp	x9, x21
   2b560:	b.gt	2b54c <rpl_re_set_registers@@Base+0x83fc>
   2b564:	str	x21, [x0, x8, lsl #3]
   2b568:	b	2b398 <rpl_re_set_registers@@Base+0x8248>
   2b56c:	ldur	x0, [x29, #-16]
   2b570:	ldr	x24, [sp, #32]
   2b574:	ldr	w21, [sp, #44]
   2b578:	ldr	x23, [sp, #48]
   2b57c:	b	2b584 <rpl_re_set_registers@@Base+0x8434>
   2b580:	mov	x0, xzr
   2b584:	bl	a960 <free@plt>
   2b588:	ldr	x22, [sp, #56]
   2b58c:	stur	wzr, [x29, #-36]
   2b590:	ldur	x8, [x29, #-56]
   2b594:	cbz	x8, 2b5d4 <rpl_re_set_registers@@Base+0x8484>
   2b598:	sub	x1, x29, #0x40
   2b59c:	mov	x0, x23
   2b5a0:	mov	x2, x22
   2b5a4:	mov	w3, w21
   2b5a8:	bl	2b878 <rpl_re_set_registers@@Base+0x8728>
   2b5ac:	stur	w0, [x29, #-36]
   2b5b0:	cbnz	w0, 2b79c <rpl_re_set_registers@@Base+0x864c>
   2b5b4:	ldr	x2, [sp, #72]
   2b5b8:	sub	x1, x29, #0x40
   2b5bc:	mov	x0, x20
   2b5c0:	mov	x3, x22
   2b5c4:	mov	w4, w21
   2b5c8:	bl	2b9bc <rpl_re_set_registers@@Base+0x886c>
   2b5cc:	stur	w0, [x29, #-36]
   2b5d0:	cbnz	w0, 2b79c <rpl_re_set_registers@@Base+0x864c>
   2b5d4:	tbnz	x26, #63, 2b60c <rpl_re_set_registers@@Base+0x84bc>
   2b5d8:	ldr	x8, [x20, #88]
   2b5dc:	cmp	x8, x26
   2b5e0:	b.eq	2b690 <rpl_re_set_registers@@Base+0x8540>  // b.none
   2b5e4:	ldr	w8, [x20, #144]
   2b5e8:	cmp	w8, #0x2
   2b5ec:	b.lt	2b614 <rpl_re_set_registers@@Base+0x84c4>  // b.tstop
   2b5f0:	ldr	x8, [x20, #16]
   2b5f4:	ldr	w19, [x8, x26, lsl #2]
   2b5f8:	cmn	w19, #0x1
   2b5fc:	b.ne	2b63c <rpl_re_set_registers@@Base+0x84ec>  // b.any
   2b600:	cmp	x26, #0x0
   2b604:	sub	x26, x26, #0x1
   2b608:	b.gt	2b5f4 <rpl_re_set_registers@@Base+0x84a4>
   2b60c:	ldr	w3, [x20, #112]
   2b610:	b	2b66c <rpl_re_set_registers@@Base+0x851c>
   2b614:	ldr	x8, [x20, #8]
   2b618:	ldr	x9, [x20, #128]
   2b61c:	ldrb	w8, [x8, x26]
   2b620:	lsr	x10, x8, #3
   2b624:	and	x10, x10, #0x18
   2b628:	ldr	x9, [x9, x10]
   2b62c:	lsr	x9, x9, x8
   2b630:	tbz	w9, #0, 2b660 <rpl_re_set_registers@@Base+0x8510>
   2b634:	mov	w3, #0x1                   	// #1
   2b638:	b	2b66c <rpl_re_set_registers@@Base+0x851c>
   2b63c:	ldrb	w8, [x20, #142]
   2b640:	cbnz	w8, 2b6a4 <rpl_re_set_registers@@Base+0x8554>
   2b644:	cmp	w19, #0xa
   2b648:	b.ne	2b668 <rpl_re_set_registers@@Base+0x8518>  // b.any
   2b64c:	ldrb	w8, [x20, #141]
   2b650:	cmp	w8, #0x0
   2b654:	cset	w8, ne  // ne = any
   2b658:	lsl	w3, w8, #1
   2b65c:	b	2b66c <rpl_re_set_registers@@Base+0x851c>
   2b660:	cmp	w8, #0xa
   2b664:	b.eq	2b64c <rpl_re_set_registers@@Base+0x84fc>  // b.none
   2b668:	mov	w3, wzr
   2b66c:	sub	x0, x29, #0x24
   2b670:	sub	x2, x29, #0x40
   2b674:	mov	x1, x23
   2b678:	bl	28514 <rpl_re_set_registers@@Base+0x53c4>
   2b67c:	mov	x28, x0
   2b680:	cbnz	x0, 2b26c <rpl_re_set_registers@@Base+0x811c>
   2b684:	ldur	w8, [x29, #-36]
   2b688:	cbz	w8, 2b26c <rpl_re_set_registers@@Base+0x811c>
   2b68c:	b	2b79c <rpl_re_set_registers@@Base+0x864c>
   2b690:	ldr	w8, [x20, #160]
   2b694:	mov	w9, #0xa                   	// #10
   2b698:	and	w8, w8, #0x2
   2b69c:	eor	w3, w8, w9
   2b6a0:	b	2b66c <rpl_re_set_registers@@Base+0x851c>
   2b6a4:	mov	w0, w19
   2b6a8:	bl	ac10 <iswalnum@plt>
   2b6ac:	cmp	w19, #0x5f
   2b6b0:	mov	w3, #0x1                   	// #1
   2b6b4:	b.eq	2b66c <rpl_re_set_registers@@Base+0x851c>  // b.none
   2b6b8:	cbz	w0, 2b644 <rpl_re_set_registers@@Base+0x84f4>
   2b6bc:	b	2b66c <rpl_re_set_registers@@Base+0x851c>
   2b6c0:	mov	x26, x24
   2b6c4:	ldr	x21, [sp]
   2b6c8:	ldur	x0, [x29, #-48]
   2b6cc:	bl	a960 <free@plt>
   2b6d0:	ldr	x8, [x20, #184]
   2b6d4:	ldr	x9, [x8, x24, lsl #3]
   2b6d8:	ldr	x8, [sp, #24]
   2b6dc:	cmp	x9, #0x0
   2b6e0:	str	x26, [x8]
   2b6e4:	ldr	x8, [sp, #16]
   2b6e8:	str	x21, [x20, #72]
   2b6ec:	str	x8, [x20, #184]
   2b6f0:	add	x8, x9, #0x8
   2b6f4:	csel	x8, xzr, x8, eq  // eq = none
   2b6f8:	cbz	x9, 2b754 <rpl_re_set_registers@@Base+0x8604>
   2b6fc:	ldr	x9, [x8, #8]
   2b700:	subs	x9, x9, #0x1
   2b704:	b.lt	2b754 <rpl_re_set_registers@@Base+0x8604>  // b.tstop
   2b708:	ldr	x8, [x8, #16]
   2b70c:	mov	x10, xzr
   2b710:	b.eq	2b73c <rpl_re_set_registers@@Base+0x85ec>  // b.none
   2b714:	ldr	x13, [sp, #8]
   2b718:	add	x11, x10, x9
   2b71c:	lsr	x11, x11, #1
   2b720:	ldr	x12, [x8, x11, lsl #3]
   2b724:	cmp	x12, x13
   2b728:	csinc	x10, x10, x11, ge  // ge = tcont
   2b72c:	csel	x9, x9, x11, lt  // lt = tstop
   2b730:	cmp	x10, x9
   2b734:	b.cc	2b718 <rpl_re_set_registers@@Base+0x85c8>  // b.lo, b.ul, b.last
   2b738:	b	2b740 <rpl_re_set_registers@@Base+0x85f0>
   2b73c:	ldr	x13, [sp, #8]
   2b740:	ldr	x8, [x8, x10, lsl #3]
   2b744:	cmp	x8, x13
   2b748:	b.ne	2b754 <rpl_re_set_registers@@Base+0x8604>  // b.any
   2b74c:	mov	w19, wzr
   2b750:	b	2b758 <rpl_re_set_registers@@Base+0x8608>
   2b754:	mov	w19, #0x1                   	// #1
   2b758:	mov	w0, w19
   2b75c:	ldp	x20, x19, [sp, #240]
   2b760:	ldp	x22, x21, [sp, #224]
   2b764:	ldp	x24, x23, [sp, #208]
   2b768:	ldp	x26, x25, [sp, #192]
   2b76c:	ldp	x28, x27, [sp, #176]
   2b770:	ldp	x29, x30, [sp, #160]
   2b774:	add	sp, sp, #0x100
   2b778:	ret
   2b77c:	stp	xzr, xzr, [x29, #-64]
   2b780:	stur	xzr, [x29, #-48]
   2b784:	stur	wzr, [x29, #-36]
   2b788:	b	2b19c <rpl_re_set_registers@@Base+0x804c>
   2b78c:	stp	xzr, xzr, [x29, #-64]
   2b790:	ldur	x0, [x29, #-16]
   2b794:	mov	w25, #0xc                   	// #12
   2b798:	b	2b7ac <rpl_re_set_registers@@Base+0x865c>
   2b79c:	ldur	x0, [x29, #-48]
   2b7a0:	b	2b7b8 <rpl_re_set_registers@@Base+0x8668>
   2b7a4:	mov	w25, w0
   2b7a8:	ldur	x0, [x29, #-16]
   2b7ac:	bl	a960 <free@plt>
   2b7b0:	ldur	x0, [x29, #-48]
   2b7b4:	stur	w25, [x29, #-36]
   2b7b8:	bl	a960 <free@plt>
   2b7bc:	ldur	w19, [x29, #-36]
   2b7c0:	b	2b758 <rpl_re_set_registers@@Base+0x8608>
   2b7c4:	stp	xzr, xzr, [x29, #-32]
   2b7c8:	mov	w25, #0xc                   	// #12
   2b7cc:	b	2b7ac <rpl_re_set_registers@@Base+0x865c>
   2b7d0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2b7d4:	sub	x9, x9, x21
   2b7d8:	cmp	x9, x8
   2b7dc:	b.le	2b870 <rpl_re_set_registers@@Base+0x8720>
   2b7e0:	add	x24, x8, #0x1
   2b7e4:	add	x25, x24, x21
   2b7e8:	lsr	x8, x25, #61
   2b7ec:	cbnz	x8, 2b870 <rpl_re_set_registers@@Base+0x8720>
   2b7f0:	ldr	x0, [x27, #16]
   2b7f4:	lsl	x1, x25, #3
   2b7f8:	bl	a720 <realloc@plt>
   2b7fc:	cbz	x0, 2b870 <rpl_re_set_registers@@Base+0x8720>
   2b800:	mov	x23, x0
   2b804:	stp	x25, x0, [x27, #8]
   2b808:	add	x0, x0, x21, lsl #3
   2b80c:	lsl	x2, x24, #3
   2b810:	mov	w1, wzr
   2b814:	bl	a630 <memset@plt>
   2b818:	ldr	x24, [sp, #32]
   2b81c:	b	2b064 <rpl_re_set_registers@@Base+0x7f14>
   2b820:	ldr	w8, [x20, #160]
   2b824:	mov	w9, #0xa                   	// #10
   2b828:	and	w8, w8, #0x2
   2b82c:	eor	w23, w8, w9
   2b830:	b	2b128 <rpl_re_set_registers@@Base+0x7fd8>
   2b834:	mov	w19, w0
   2b838:	ldur	x0, [x29, #-48]
   2b83c:	bl	a960 <free@plt>
   2b840:	b	2b758 <rpl_re_set_registers@@Base+0x8608>
   2b844:	mov	w19, #0xc                   	// #12
   2b848:	stp	xzr, xzr, [x29, #-64]
   2b84c:	stur	w19, [x29, #-36]
   2b850:	b	2b758 <rpl_re_set_registers@@Base+0x8608>
   2b854:	mov	w0, w25
   2b858:	bl	ac10 <iswalnum@plt>
   2b85c:	cmp	w25, #0x5f
   2b860:	mov	w23, #0x1                   	// #1
   2b864:	b.eq	2b128 <rpl_re_set_registers@@Base+0x7fd8>  // b.none
   2b868:	cbz	w0, 2b100 <rpl_re_set_registers@@Base+0x7fb0>
   2b86c:	b	2b128 <rpl_re_set_registers@@Base+0x7fd8>
   2b870:	mov	w19, #0xc                   	// #12
   2b874:	b	2b758 <rpl_re_set_registers@@Base+0x8608>
   2b878:	sub	sp, sp, #0x70
   2b87c:	stp	x29, x30, [sp, #32]
   2b880:	stp	x24, x23, [sp, #64]
   2b884:	stp	x22, x21, [sp, #80]
   2b888:	stp	x20, x19, [sp, #96]
   2b88c:	ldr	x23, [x1, #8]
   2b890:	mov	x22, x0
   2b894:	str	x25, [sp, #48]
   2b898:	add	x29, sp, #0x20
   2b89c:	lsl	x0, x23, #3
   2b8a0:	mov	w20, w3
   2b8a4:	mov	x21, x2
   2b8a8:	mov	x19, x1
   2b8ac:	stp	x23, xzr, [sp, #8]
   2b8b0:	bl	a540 <malloc@plt>
   2b8b4:	str	x0, [sp, #24]
   2b8b8:	cbz	x0, 2b9b4 <rpl_re_set_registers@@Base+0x8864>
   2b8bc:	cmp	x23, #0x1
   2b8c0:	b.lt	2b978 <rpl_re_set_registers@@Base+0x8828>  // b.tstop
   2b8c4:	mov	x24, xzr
   2b8c8:	mov	w25, #0x18                  	// #24
   2b8cc:	b	2b8ec <rpl_re_set_registers@@Base+0x879c>
   2b8d0:	add	x0, sp, #0x8
   2b8d4:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   2b8d8:	cbnz	w0, 2b968 <rpl_re_set_registers@@Base+0x8818>
   2b8dc:	ldr	x8, [x19, #8]
   2b8e0:	add	x24, x24, #0x1
   2b8e4:	cmp	x24, x8
   2b8e8:	b.ge	2b978 <rpl_re_set_registers@@Base+0x8828>  // b.tcont
   2b8ec:	ldr	x8, [x19, #16]
   2b8f0:	ldr	x9, [x22, #48]
   2b8f4:	ldr	x2, [x8, x24, lsl #3]
   2b8f8:	madd	x1, x2, x25, x9
   2b8fc:	ldr	x8, [x1, #8]
   2b900:	cmp	x8, #0x1
   2b904:	b.lt	2b8d0 <rpl_re_set_registers@@Base+0x8780>  // b.tstop
   2b908:	madd	x9, x2, x25, x9
   2b90c:	ldr	x9, [x9, #16]
   2b910:	ldr	x10, [x22]
   2b914:	b	2b924 <rpl_re_set_registers@@Base+0x87d4>
   2b918:	subs	x8, x8, #0x1
   2b91c:	add	x9, x9, #0x8
   2b920:	b.eq	2b8d0 <rpl_re_set_registers@@Base+0x8780>  // b.none
   2b924:	ldr	x11, [x9]
   2b928:	add	x12, x10, x11, lsl #4
   2b92c:	ldrb	w12, [x12, #8]
   2b930:	cmp	w12, w20
   2b934:	b.ne	2b918 <rpl_re_set_registers@@Base+0x87c8>  // b.any
   2b938:	lsl	x12, x11, #4
   2b93c:	ldr	x12, [x10, x12]
   2b940:	cmp	x12, x21
   2b944:	b.ne	2b918 <rpl_re_set_registers@@Base+0x87c8>  // b.any
   2b948:	cmn	x11, #0x1
   2b94c:	b.eq	2b8d0 <rpl_re_set_registers@@Base+0x8780>  // b.none
   2b950:	add	x1, sp, #0x8
   2b954:	mov	x0, x22
   2b958:	mov	x3, x21
   2b95c:	mov	w4, w20
   2b960:	bl	2be70 <rpl_re_set_registers@@Base+0x8d20>
   2b964:	cbz	w0, 2b8dc <rpl_re_set_registers@@Base+0x878c>
   2b968:	mov	w23, w0
   2b96c:	ldr	x0, [sp, #24]
   2b970:	bl	a960 <free@plt>
   2b974:	b	2b994 <rpl_re_set_registers@@Base+0x8844>
   2b978:	ldr	x0, [x19, #16]
   2b97c:	bl	a960 <free@plt>
   2b980:	ldr	x8, [sp, #24]
   2b984:	ldur	q0, [sp, #8]
   2b988:	mov	w23, wzr
   2b98c:	str	x8, [x19, #16]
   2b990:	str	q0, [x19]
   2b994:	mov	w0, w23
   2b998:	ldp	x20, x19, [sp, #96]
   2b99c:	ldp	x22, x21, [sp, #80]
   2b9a0:	ldp	x24, x23, [sp, #64]
   2b9a4:	ldr	x25, [sp, #48]
   2b9a8:	ldp	x29, x30, [sp, #32]
   2b9ac:	add	sp, sp, #0x70
   2b9b0:	ret
   2b9b4:	mov	w23, #0xc                   	// #12
   2b9b8:	b	2b994 <rpl_re_set_registers@@Base+0x8844>
   2b9bc:	sub	sp, sp, #0xb0
   2b9c0:	stp	x29, x30, [sp, #80]
   2b9c4:	stp	x28, x27, [sp, #96]
   2b9c8:	stp	x26, x25, [sp, #112]
   2b9cc:	stp	x24, x23, [sp, #128]
   2b9d0:	stp	x22, x21, [sp, #144]
   2b9d4:	stp	x20, x19, [sp, #160]
   2b9d8:	ldr	x8, [x0, #200]
   2b9dc:	ldr	x26, [x0, #152]
   2b9e0:	mov	x21, x2
   2b9e4:	mov	x22, x0
   2b9e8:	cmp	x8, #0x1
   2b9ec:	mov	x24, x1
   2b9f0:	mov	x28, xzr
   2b9f4:	add	x29, sp, #0x50
   2b9f8:	b.lt	2ba34 <rpl_re_set_registers@@Base+0x88e4>  // b.tstop
   2b9fc:	ldr	x9, [x22, #216]
   2ba00:	mov	w10, #0x28                  	// #40
   2ba04:	mov	x11, x8
   2ba08:	add	x12, x11, x28
   2ba0c:	cmp	x12, #0x0
   2ba10:	cinc	x12, x12, lt  // lt = tstop
   2ba14:	asr	x12, x12, #1
   2ba18:	madd	x13, x12, x10, x9
   2ba1c:	ldr	x13, [x13, #8]
   2ba20:	cmp	x13, x21
   2ba24:	csel	x11, x11, x12, lt  // lt = tstop
   2ba28:	csinc	x28, x28, x12, ge  // ge = tcont
   2ba2c:	cmp	x28, x11
   2ba30:	b.lt	2ba08 <rpl_re_set_registers@@Base+0x88b8>  // b.tstop
   2ba34:	cmp	x28, x8
   2ba38:	b.ge	2be44 <rpl_re_set_registers@@Base+0x8cf4>  // b.tcont
   2ba3c:	cmn	x28, #0x1
   2ba40:	mov	w0, wzr
   2ba44:	b.eq	2be48 <rpl_re_set_registers@@Base+0x8cf8>  // b.none
   2ba48:	ldr	x8, [x22, #216]
   2ba4c:	mov	w9, #0x28                  	// #40
   2ba50:	madd	x9, x28, x9, x8
   2ba54:	ldr	x9, [x9, #8]
   2ba58:	cmp	x9, x21
   2ba5c:	b.ne	2be48 <rpl_re_set_registers@@Base+0x8cf8>  // b.any
   2ba60:	mov	w9, #0x1                   	// #1
   2ba64:	dup	v0.2d, x9
   2ba68:	str	x3, [sp, #32]
   2ba6c:	str	w4, [sp, #40]
   2ba70:	str	q0, [sp, #16]
   2ba74:	mov	w9, #0x28                  	// #40
   2ba78:	madd	x19, x28, x9, x8
   2ba7c:	b	2ba8c <rpl_re_set_registers@@Base+0x893c>
   2ba80:	ldrb	w8, [x19, #32]
   2ba84:	add	x19, x19, #0x28
   2ba88:	cbz	w8, 2be44 <rpl_re_set_registers@@Base+0x8cf4>
   2ba8c:	ldr	x8, [x24, #8]
   2ba90:	subs	x9, x8, #0x1
   2ba94:	b.lt	2ba80 <rpl_re_set_registers@@Base+0x8930>  // b.tstop
   2ba98:	ldr	x10, [x19]
   2ba9c:	ldr	x8, [x24, #16]
   2baa0:	mov	x11, xzr
   2baa4:	b.eq	2bacc <rpl_re_set_registers@@Base+0x897c>  // b.none
   2baa8:	mov	x12, x9
   2baac:	add	x13, x11, x12
   2bab0:	lsr	x13, x13, #1
   2bab4:	ldr	x14, [x8, x13, lsl #3]
   2bab8:	cmp	x14, x10
   2babc:	csinc	x11, x11, x13, ge  // ge = tcont
   2bac0:	csel	x12, x12, x13, lt  // lt = tstop
   2bac4:	cmp	x11, x12
   2bac8:	b.cc	2baac <rpl_re_set_registers@@Base+0x895c>  // b.lo, b.ul, b.last
   2bacc:	ldr	x11, [x8, x11, lsl #3]
   2bad0:	cmp	x11, x10
   2bad4:	b.ne	2ba80 <rpl_re_set_registers@@Base+0x8930>  // b.any
   2bad8:	ldp	x12, x11, [x19, #16]
   2badc:	add	x11, x11, x21
   2bae0:	sub	x20, x11, x12
   2bae4:	cmp	x20, x21
   2bae8:	b.ne	2bba8 <rpl_re_set_registers@@Base+0x8a58>  // b.any
   2baec:	ldr	x11, [x26, #40]
   2baf0:	mov	w12, #0x18                  	// #24
   2baf4:	madd	x10, x10, x12, x11
   2baf8:	ldr	x10, [x10, #16]
   2bafc:	ldr	x20, [x10]
   2bb00:	mov	x10, xzr
   2bb04:	cbz	x9, 2bb28 <rpl_re_set_registers@@Base+0x89d8>
   2bb08:	add	x11, x10, x9
   2bb0c:	lsr	x11, x11, #1
   2bb10:	ldr	x12, [x8, x11, lsl #3]
   2bb14:	cmp	x12, x20
   2bb18:	csinc	x10, x10, x11, ge  // ge = tcont
   2bb1c:	csel	x9, x9, x11, lt  // lt = tstop
   2bb20:	cmp	x10, x9
   2bb24:	b.cc	2bb08 <rpl_re_set_registers@@Base+0x89b8>  // b.lo, b.ul, b.last
   2bb28:	ldr	x8, [x8, x10, lsl #3]
   2bb2c:	cmp	x8, x20
   2bb30:	b.eq	2bc04 <rpl_re_set_registers@@Base+0x8ab4>  // b.none
   2bb34:	ldr	q0, [sp, #16]
   2bb38:	mov	w0, #0x8                   	// #8
   2bb3c:	stur	q0, [x29, #-32]
   2bb40:	bl	a540 <malloc@plt>
   2bb44:	stur	x0, [x29, #-16]
   2bb48:	cbz	x0, 2bdac <rpl_re_set_registers@@Base+0x8c5c>
   2bb4c:	mov	w23, wzr
   2bb50:	str	x20, [x0]
   2bb54:	ldr	x2, [sp, #32]
   2bb58:	ldr	w3, [sp, #40]
   2bb5c:	sub	x1, x29, #0x20
   2bb60:	mov	x0, x26
   2bb64:	stur	w23, [x29, #-4]
   2bb68:	mov	x20, x26
   2bb6c:	bl	2b878 <rpl_re_set_registers@@Base+0x8728>
   2bb70:	mov	w26, w0
   2bb74:	sub	x1, x29, #0x20
   2bb78:	mov	x0, x24
   2bb7c:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   2bb80:	ldur	x8, [x29, #-16]
   2bb84:	mov	w27, w0
   2bb88:	mov	x0, x8
   2bb8c:	bl	a960 <free@plt>
   2bb90:	orr	w8, w26, w23
   2bb94:	orr	w8, w8, w27
   2bb98:	cbnz	w8, 2bdb8 <rpl_re_set_registers@@Base+0x8c68>
   2bb9c:	mov	w8, #0x2                   	// #2
   2bba0:	mov	x26, x20
   2bba4:	b	2bd9c <rpl_re_set_registers@@Base+0x8c4c>
   2bba8:	ldr	x8, [x22, #184]
   2bbac:	ldr	x9, [x26, #24]
   2bbb0:	ldr	x27, [x8, x20, lsl #3]
   2bbb4:	ldr	x23, [x9, x10, lsl #3]
   2bbb8:	cbz	x27, 2bc0c <rpl_re_set_registers@@Base+0x8abc>
   2bbbc:	ldr	x25, [x27, #16]
   2bbc0:	cmp	x25, #0x0
   2bbc4:	b.le	2bc34 <rpl_re_set_registers@@Base+0x8ae4>
   2bbc8:	ldr	x8, [x27, #24]
   2bbcc:	mov	x10, xzr
   2bbd0:	subs	x9, x25, #0x1
   2bbd4:	b.eq	2bbf8 <rpl_re_set_registers@@Base+0x8aa8>  // b.none
   2bbd8:	add	x11, x10, x9
   2bbdc:	lsr	x11, x11, #1
   2bbe0:	ldr	x12, [x8, x11, lsl #3]
   2bbe4:	cmp	x12, x23
   2bbe8:	csinc	x10, x10, x11, ge  // ge = tcont
   2bbec:	csel	x9, x9, x11, lt  // lt = tstop
   2bbf0:	cmp	x10, x9
   2bbf4:	b.cc	2bbd8 <rpl_re_set_registers@@Base+0x8a88>  // b.lo, b.ul, b.last
   2bbf8:	ldr	x8, [x8, x10, lsl #3]
   2bbfc:	cmp	x8, x23
   2bc00:	b.ne	2bc3c <rpl_re_set_registers@@Base+0x8aec>  // b.any
   2bc04:	mov	w8, #0x4                   	// #4
   2bc08:	b	2bd9c <rpl_re_set_registers@@Base+0x8c4c>
   2bc0c:	mov	w8, #0x1                   	// #1
   2bc10:	dup	v0.2d, x8
   2bc14:	mov	w0, #0x8                   	// #8
   2bc18:	stur	q0, [x29, #-32]
   2bc1c:	bl	a540 <malloc@plt>
   2bc20:	stur	x0, [x29, #-16]
   2bc24:	cbz	x0, 2bddc <rpl_re_set_registers@@Base+0x8c8c>
   2bc28:	str	x23, [x0]
   2bc2c:	stur	wzr, [x29, #-4]
   2bc30:	b	2bd48 <rpl_re_set_registers@@Base+0x8bf8>
   2bc34:	stur	x25, [x29, #-24]
   2bc38:	b	2bccc <rpl_re_set_registers@@Base+0x8b7c>
   2bc3c:	cmp	x25, #0x1
   2bc40:	stur	x25, [x29, #-24]
   2bc44:	b.lt	2bccc <rpl_re_set_registers@@Base+0x8b7c>  // b.tstop
   2bc48:	lsl	x0, x25, #3
   2bc4c:	stur	x25, [x29, #-32]
   2bc50:	stp	x0, x26, [sp]
   2bc54:	bl	a540 <malloc@plt>
   2bc58:	stur	x0, [x29, #-16]
   2bc5c:	cbz	x0, 2be04 <rpl_re_set_registers@@Base+0x8cb4>
   2bc60:	ldr	x1, [x27, #24]
   2bc64:	ldr	x2, [sp]
   2bc68:	mov	x26, x0
   2bc6c:	bl	a210 <memcpy@plt>
   2bc70:	lsl	x8, x25, #1
   2bc74:	lsl	x1, x25, #4
   2bc78:	mov	x0, x26
   2bc7c:	stur	wzr, [x29, #-4]
   2bc80:	stur	x8, [x29, #-32]
   2bc84:	bl	a720 <realloc@plt>
   2bc88:	cbz	x0, 2be14 <rpl_re_set_registers@@Base+0x8cc4>
   2bc8c:	ldr	x9, [x0]
   2bc90:	ldur	x8, [x29, #-24]
   2bc94:	ldr	x26, [sp, #8]
   2bc98:	stur	x0, [x29, #-16]
   2bc9c:	cmp	x9, x23
   2bca0:	b.le	2bd08 <rpl_re_set_registers@@Base+0x8bb8>
   2bca4:	cmp	x8, #0x1
   2bca8:	b.lt	2bd38 <rpl_re_set_registers@@Base+0x8be8>  // b.tstop
   2bcac:	mov	x10, x8
   2bcb0:	add	x11, x0, x10, lsl #3
   2bcb4:	ldur	x12, [x11, #-8]
   2bcb8:	subs	x9, x10, #0x1
   2bcbc:	mov	x10, x9
   2bcc0:	str	x12, [x11]
   2bcc4:	b.gt	2bcb0 <rpl_re_set_registers@@Base+0x8b60>
   2bcc8:	b	2bd3c <rpl_re_set_registers@@Base+0x8bec>
   2bccc:	mov	w25, wzr
   2bcd0:	stp	xzr, xzr, [x29, #-32]
   2bcd4:	stur	xzr, [x29, #-16]
   2bcd8:	mov	w8, #0x1                   	// #1
   2bcdc:	dup	v0.2d, x8
   2bce0:	mov	w0, #0x8                   	// #8
   2bce4:	stur	w25, [x29, #-4]
   2bce8:	stur	q0, [x29, #-32]
   2bcec:	bl	a540 <malloc@plt>
   2bcf0:	stur	x0, [x29, #-16]
   2bcf4:	cbz	x0, 2bdf8 <rpl_re_set_registers@@Base+0x8ca8>
   2bcf8:	str	x23, [x0]
   2bcfc:	cbz	w25, 2bd48 <rpl_re_set_registers@@Base+0x8bf8>
   2bd00:	bl	a960 <free@plt>
   2bd04:	b	2be24 <rpl_re_set_registers@@Base+0x8cd4>
   2bd08:	add	x9, x0, x8, lsl #3
   2bd0c:	ldur	x10, [x9, #-8]
   2bd10:	mov	x9, x8
   2bd14:	cmp	x10, x23
   2bd18:	b.le	2bd3c <rpl_re_set_registers@@Base+0x8bec>
   2bd1c:	add	x11, x0, x9, lsl #3
   2bd20:	str	x10, [x11]
   2bd24:	ldur	x10, [x11, #-16]
   2bd28:	sub	x9, x9, #0x1
   2bd2c:	cmp	x10, x23
   2bd30:	b.gt	2bd1c <rpl_re_set_registers@@Base+0x8bcc>
   2bd34:	b	2bd3c <rpl_re_set_registers@@Base+0x8bec>
   2bd38:	mov	x9, x8
   2bd3c:	add	x8, x8, #0x1
   2bd40:	str	x23, [x0, x9, lsl #3]
   2bd44:	stur	x8, [x29, #-24]
   2bd48:	sub	x0, x29, #0x4
   2bd4c:	sub	x2, x29, #0x20
   2bd50:	mov	x1, x26
   2bd54:	bl	2bfa0 <rpl_re_set_registers@@Base+0x8e50>
   2bd58:	ldr	x8, [x22, #184]
   2bd5c:	lsl	x20, x20, #3
   2bd60:	str	x0, [x8, x20]
   2bd64:	ldur	x0, [x29, #-16]
   2bd68:	bl	a960 <free@plt>
   2bd6c:	ldr	x8, [x22, #184]
   2bd70:	ldur	w9, [x29, #-4]
   2bd74:	ldr	x8, [x8, x20]
   2bd78:	cmp	x8, #0x0
   2bd7c:	cset	w10, eq  // eq = none
   2bd80:	cmp	w9, #0x0
   2bd84:	cset	w11, ne  // ne = any
   2bd88:	and	w8, w10, w11
   2bd8c:	tst	w10, w11
   2bd90:	ldur	w10, [x29, #-36]
   2bd94:	csel	w10, w9, w10, ne  // ne = any
   2bd98:	stur	w10, [x29, #-36]
   2bd9c:	cbz	w8, 2ba80 <rpl_re_set_registers@@Base+0x8930>
   2bda0:	cmp	w8, #0x4
   2bda4:	b.eq	2ba80 <rpl_re_set_registers@@Base+0x8930>  // b.none
   2bda8:	b	2be34 <rpl_re_set_registers@@Base+0x8ce4>
   2bdac:	stp	xzr, xzr, [x29, #-32]
   2bdb0:	mov	w23, #0xc                   	// #12
   2bdb4:	b	2bb54 <rpl_re_set_registers@@Base+0x8a04>
   2bdb8:	cmp	w26, #0x0
   2bdbc:	csel	w8, w27, w26, eq  // eq = none
   2bdc0:	cmp	w23, #0x0
   2bdc4:	csel	w8, w8, w23, eq  // eq = none
   2bdc8:	stur	w8, [x29, #-36]
   2bdcc:	stur	w8, [x29, #-4]
   2bdd0:	mov	w8, #0x1                   	// #1
   2bdd4:	mov	x26, x20
   2bdd8:	b	2bd9c <rpl_re_set_registers@@Base+0x8c4c>
   2bddc:	mov	w9, #0xc                   	// #12
   2bde0:	mov	w8, #0xc                   	// #12
   2bde4:	stp	xzr, xzr, [x29, #-32]
   2bde8:	stur	w8, [x29, #-36]
   2bdec:	stur	w9, [x29, #-4]
   2bdf0:	mov	w8, #0x1                   	// #1
   2bdf4:	b	2bd9c <rpl_re_set_registers@@Base+0x8c4c>
   2bdf8:	stp	xzr, xzr, [x29, #-32]
   2bdfc:	cbnz	w25, 2be24 <rpl_re_set_registers@@Base+0x8cd4>
   2be00:	b	2be20 <rpl_re_set_registers@@Base+0x8cd0>
   2be04:	ldr	x26, [sp, #8]
   2be08:	mov	w25, #0xc                   	// #12
   2be0c:	stp	xzr, xzr, [x29, #-32]
   2be10:	b	2bcd8 <rpl_re_set_registers@@Base+0x8b88>
   2be14:	ldur	x0, [x29, #-16]
   2be18:	bl	a960 <free@plt>
   2be1c:	ldr	x26, [sp, #8]
   2be20:	mov	w25, #0xc                   	// #12
   2be24:	stur	w25, [x29, #-4]
   2be28:	mov	w8, #0x1                   	// #1
   2be2c:	stur	w25, [x29, #-36]
   2be30:	b	2bd9c <rpl_re_set_registers@@Base+0x8c4c>
   2be34:	cmp	w8, #0x2
   2be38:	b.ne	2be68 <rpl_re_set_registers@@Base+0x8d18>  // b.any
   2be3c:	ldr	x8, [x22, #216]
   2be40:	b	2ba74 <rpl_re_set_registers@@Base+0x8924>
   2be44:	mov	w0, wzr
   2be48:	ldp	x20, x19, [sp, #160]
   2be4c:	ldp	x22, x21, [sp, #144]
   2be50:	ldp	x24, x23, [sp, #128]
   2be54:	ldp	x26, x25, [sp, #112]
   2be58:	ldp	x28, x27, [sp, #96]
   2be5c:	ldp	x29, x30, [sp, #80]
   2be60:	add	sp, sp, #0xb0
   2be64:	ret
   2be68:	ldur	w0, [x29, #-36]
   2be6c:	b	2be48 <rpl_re_set_registers@@Base+0x8cf8>
   2be70:	stp	x29, x30, [sp, #-64]!
   2be74:	stp	x24, x23, [sp, #16]
   2be78:	stp	x22, x21, [sp, #32]
   2be7c:	stp	x20, x19, [sp, #48]
   2be80:	mov	w21, w4
   2be84:	mov	x22, x3
   2be88:	mov	x19, x2
   2be8c:	mov	x20, x1
   2be90:	mov	x23, x0
   2be94:	mov	w24, #0x18                  	// #24
   2be98:	mov	x29, sp
   2be9c:	b	2beb0 <rpl_re_set_registers@@Base+0x8d60>
   2bea0:	cbz	x9, 2bf80 <rpl_re_set_registers@@Base+0x8e30>
   2bea4:	madd	x8, x19, x24, x8
   2bea8:	ldr	x8, [x8, #16]
   2beac:	ldr	x19, [x8]
   2beb0:	ldr	x8, [x20, #8]
   2beb4:	subs	x9, x8, #0x1
   2beb8:	b.lt	2bef4 <rpl_re_set_registers@@Base+0x8da4>  // b.tstop
   2bebc:	ldr	x8, [x20, #16]
   2bec0:	mov	x10, xzr
   2bec4:	b.eq	2bee8 <rpl_re_set_registers@@Base+0x8d98>  // b.none
   2bec8:	add	x11, x10, x9
   2becc:	lsr	x11, x11, #1
   2bed0:	ldr	x12, [x8, x11, lsl #3]
   2bed4:	cmp	x12, x19
   2bed8:	csinc	x10, x10, x11, ge  // ge = tcont
   2bedc:	csel	x9, x9, x11, lt  // lt = tstop
   2bee0:	cmp	x10, x9
   2bee4:	b.cc	2bec8 <rpl_re_set_registers@@Base+0x8d78>  // b.lo, b.ul, b.last
   2bee8:	ldr	x8, [x8, x10, lsl #3]
   2beec:	cmp	x8, x19
   2bef0:	b.eq	2bf80 <rpl_re_set_registers@@Base+0x8e30>  // b.none
   2bef4:	ldr	x8, [x23]
   2bef8:	add	x9, x8, x19, lsl #4
   2befc:	ldrb	w9, [x9, #8]
   2bf00:	cmp	w9, w21
   2bf04:	b.ne	2bf18 <rpl_re_set_registers@@Base+0x8dc8>  // b.any
   2bf08:	lsl	x9, x19, #4
   2bf0c:	ldr	x8, [x8, x9]
   2bf10:	cmp	x8, x22
   2bf14:	b.eq	2bf68 <rpl_re_set_registers@@Base+0x8e18>  // b.none
   2bf18:	mov	x0, x20
   2bf1c:	mov	x1, x19
   2bf20:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   2bf24:	tbz	w0, #0, 2bf98 <rpl_re_set_registers@@Base+0x8e48>
   2bf28:	ldr	x8, [x23, #40]
   2bf2c:	madd	x9, x19, x24, x8
   2bf30:	ldr	x9, [x9, #8]
   2bf34:	cmp	x9, #0x2
   2bf38:	b.ne	2bea0 <rpl_re_set_registers@@Base+0x8d50>  // b.any
   2bf3c:	madd	x8, x19, x24, x8
   2bf40:	ldr	x8, [x8, #16]
   2bf44:	mov	x0, x23
   2bf48:	mov	x1, x20
   2bf4c:	mov	x3, x22
   2bf50:	ldr	x2, [x8, #8]
   2bf54:	mov	w4, w21
   2bf58:	bl	2be70 <rpl_re_set_registers@@Base+0x8d20>
   2bf5c:	cbnz	w0, 2bf84 <rpl_re_set_registers@@Base+0x8e34>
   2bf60:	ldr	x8, [x23, #40]
   2bf64:	b	2bea4 <rpl_re_set_registers@@Base+0x8d54>
   2bf68:	cmp	w21, #0x9
   2bf6c:	b.ne	2bf80 <rpl_re_set_registers@@Base+0x8e30>  // b.any
   2bf70:	mov	x0, x20
   2bf74:	mov	x1, x19
   2bf78:	bl	2840c <rpl_re_set_registers@@Base+0x52bc>
   2bf7c:	tbz	w0, #0, 2bf98 <rpl_re_set_registers@@Base+0x8e48>
   2bf80:	mov	w0, wzr
   2bf84:	ldp	x20, x19, [sp, #48]
   2bf88:	ldp	x22, x21, [sp, #32]
   2bf8c:	ldp	x24, x23, [sp, #16]
   2bf90:	ldp	x29, x30, [sp], #64
   2bf94:	ret
   2bf98:	mov	w0, #0xc                   	// #12
   2bf9c:	b	2bf84 <rpl_re_set_registers@@Base+0x8e34>
   2bfa0:	stp	x29, x30, [sp, #-80]!
   2bfa4:	stp	x26, x25, [sp, #16]
   2bfa8:	stp	x24, x23, [sp, #32]
   2bfac:	stp	x22, x21, [sp, #48]
   2bfb0:	stp	x20, x19, [sp, #64]
   2bfb4:	ldr	x25, [x2, #8]
   2bfb8:	mov	x19, x0
   2bfbc:	mov	x29, sp
   2bfc0:	cbz	x25, 2c1ec <rpl_re_set_registers@@Base+0x909c>
   2bfc4:	mov	x22, x2
   2bfc8:	mov	x20, x1
   2bfcc:	subs	x8, x25, #0x1
   2bfd0:	mov	x21, x25
   2bfd4:	b.lt	2c04c <rpl_re_set_registers@@Base+0x8efc>  // b.tstop
   2bfd8:	ldr	x9, [x22, #16]
   2bfdc:	cmp	x25, #0x4
   2bfe0:	b.cs	2bff0 <rpl_re_set_registers@@Base+0x8ea0>  // b.hs, b.nlast
   2bfe4:	mov	x10, xzr
   2bfe8:	mov	x21, x25
   2bfec:	b	2c034 <rpl_re_set_registers@@Base+0x8ee4>
   2bff0:	and	x10, x25, #0xfffffffffffffffc
   2bff4:	movi	v1.2d, #0x0
   2bff8:	movi	v0.2d, #0x0
   2bffc:	mov	v1.d[0], x25
   2c000:	add	x11, x9, #0x10
   2c004:	mov	x12, x10
   2c008:	ldp	q2, q3, [x11, #-16]
   2c00c:	subs	x12, x12, #0x4
   2c010:	add	x11, x11, #0x20
   2c014:	add	v1.2d, v2.2d, v1.2d
   2c018:	add	v0.2d, v3.2d, v0.2d
   2c01c:	b.ne	2c008 <rpl_re_set_registers@@Base+0x8eb8>  // b.any
   2c020:	add	v0.2d, v0.2d, v1.2d
   2c024:	addp	d0, v0.2d
   2c028:	cmp	x25, x10
   2c02c:	fmov	x21, d0
   2c030:	b.eq	2c04c <rpl_re_set_registers@@Base+0x8efc>  // b.none
   2c034:	sub	x11, x25, x10
   2c038:	add	x9, x9, x10, lsl #3
   2c03c:	ldr	x10, [x9], #8
   2c040:	subs	x11, x11, #0x1
   2c044:	add	x21, x10, x21
   2c048:	b.ne	2c03c <rpl_re_set_registers@@Base+0x8eec>  // b.any
   2c04c:	ldr	x9, [x20, #136]
   2c050:	ldr	x10, [x20, #64]
   2c054:	and	x11, x9, x21
   2c058:	mov	w9, #0x18                  	// #24
   2c05c:	mul	x9, x11, x9
   2c060:	ldr	x9, [x10, x9]
   2c064:	cmp	x9, #0x1
   2c068:	b.lt	2c0e0 <rpl_re_set_registers@@Base+0x8f90>  // b.tstop
   2c06c:	mov	w12, #0x18                  	// #24
   2c070:	madd	x10, x11, x12, x10
   2c074:	ldr	x10, [x10, #16]
   2c078:	mov	x11, xzr
   2c07c:	b	2c08c <rpl_re_set_registers@@Base+0x8f3c>
   2c080:	add	x11, x11, #0x1
   2c084:	cmp	x11, x9
   2c088:	b.ge	2c0e0 <rpl_re_set_registers@@Base+0x8f90>  // b.tcont
   2c08c:	cbz	x22, 2c080 <rpl_re_set_registers@@Base+0x8f30>
   2c090:	ldr	x23, [x10, x11, lsl #3]
   2c094:	ldr	x12, [x23]
   2c098:	cmp	x21, x12
   2c09c:	b.ne	2c080 <rpl_re_set_registers@@Base+0x8f30>  // b.any
   2c0a0:	ldr	x12, [x23, #16]
   2c0a4:	cmp	x12, x25
   2c0a8:	b.ne	2c080 <rpl_re_set_registers@@Base+0x8f30>  // b.any
   2c0ac:	mov	x12, x8
   2c0b0:	add	x13, x12, #0x1
   2c0b4:	cmp	x13, #0x1
   2c0b8:	b.lt	2c1d0 <rpl_re_set_registers@@Base+0x9080>  // b.tstop
   2c0bc:	ldr	x13, [x23, #24]
   2c0c0:	ldr	x14, [x22, #16]
   2c0c4:	lsl	x15, x12, #3
   2c0c8:	sub	x12, x12, #0x1
   2c0cc:	ldr	x13, [x13, x15]
   2c0d0:	ldr	x14, [x14, x15]
   2c0d4:	cmp	x13, x14
   2c0d8:	b.eq	2c0b0 <rpl_re_set_registers@@Base+0x8f60>  // b.none
   2c0dc:	b	2c080 <rpl_re_set_registers@@Base+0x8f30>
   2c0e0:	mov	w0, #0x70                  	// #112
   2c0e4:	mov	w1, #0x1                   	// #1
   2c0e8:	bl	a6b0 <calloc@plt>
   2c0ec:	cbz	x0, 2c20c <rpl_re_set_registers@@Base+0x90bc>
   2c0f0:	mov	x23, x0
   2c0f4:	add	x26, x0, #0x8
   2c0f8:	cmp	x25, #0x1
   2c0fc:	str	x25, [x0, #16]
   2c100:	b.lt	2c1b0 <rpl_re_set_registers@@Base+0x9060>  // b.tstop
   2c104:	lsl	x24, x25, #3
   2c108:	mov	x0, x24
   2c10c:	str	x25, [x23, #8]
   2c110:	bl	a540 <malloc@plt>
   2c114:	str	x0, [x23, #24]
   2c118:	cbz	x0, 2c204 <rpl_re_set_registers@@Base+0x90b4>
   2c11c:	ldr	x22, [x22, #16]
   2c120:	mov	x2, x24
   2c124:	mov	x1, x22
   2c128:	bl	a210 <memcpy@plt>
   2c12c:	str	x26, [x23, #80]
   2c130:	ldr	x8, [x20]
   2c134:	mov	w9, wzr
   2c138:	b	2c15c <rpl_re_set_registers@@Base+0x900c>
   2c13c:	ldr	w10, [x10]
   2c140:	tst	w10, #0x3ff00
   2c144:	b.eq	2c150 <rpl_re_set_registers@@Base+0x9000>  // b.none
   2c148:	orr	w9, w9, #0xffffff80
   2c14c:	strb	w9, [x23, #104]
   2c150:	subs	x25, x25, #0x1
   2c154:	add	x22, x22, #0x8
   2c158:	b.eq	2c1bc <rpl_re_set_registers@@Base+0x906c>  // b.none
   2c15c:	ldr	x10, [x22]
   2c160:	add	x10, x8, x10, lsl #4
   2c164:	ldr	w11, [x10, #8]!
   2c168:	and	w12, w11, #0x3ffff
   2c16c:	cmp	w12, #0x1
   2c170:	b.eq	2c150 <rpl_re_set_registers@@Base+0x9000>  // b.none
   2c174:	lsr	w12, w11, #15
   2c178:	and	w11, w11, #0xff
   2c17c:	and	w12, w12, #0x20
   2c180:	orr	w9, w12, w9
   2c184:	cmp	w11, #0xc
   2c188:	strb	w9, [x23, #104]
   2c18c:	b.eq	2c148 <rpl_re_set_registers@@Base+0x8ff8>  // b.none
   2c190:	cmp	w11, #0x4
   2c194:	b.eq	2c1a8 <rpl_re_set_registers@@Base+0x9058>  // b.none
   2c198:	cmp	w11, #0x2
   2c19c:	b.ne	2c13c <rpl_re_set_registers@@Base+0x8fec>  // b.any
   2c1a0:	orr	w9, w9, #0x10
   2c1a4:	b	2c14c <rpl_re_set_registers@@Base+0x8ffc>
   2c1a8:	orr	w9, w9, #0x40
   2c1ac:	b	2c14c <rpl_re_set_registers@@Base+0x8ffc>
   2c1b0:	stp	xzr, xzr, [x26]
   2c1b4:	str	xzr, [x26, #16]
   2c1b8:	str	x26, [x23, #80]
   2c1bc:	mov	x0, x20
   2c1c0:	mov	x1, x23
   2c1c4:	mov	x2, x21
   2c1c8:	bl	28938 <rpl_re_set_registers@@Base+0x57e8>
   2c1cc:	cbnz	w0, 2c1f8 <rpl_re_set_registers@@Base+0x90a8>
   2c1d0:	mov	x0, x23
   2c1d4:	ldp	x20, x19, [sp, #64]
   2c1d8:	ldp	x22, x21, [sp, #48]
   2c1dc:	ldp	x24, x23, [sp, #32]
   2c1e0:	ldp	x26, x25, [sp, #16]
   2c1e4:	ldp	x29, x30, [sp], #80
   2c1e8:	ret
   2c1ec:	mov	x23, xzr
   2c1f0:	str	wzr, [x19]
   2c1f4:	b	2c1d0 <rpl_re_set_registers@@Base+0x9080>
   2c1f8:	mov	x0, x23
   2c1fc:	bl	2317c <rpl_re_set_registers@@Base+0x2c>
   2c200:	b	2c20c <rpl_re_set_registers@@Base+0x90bc>
   2c204:	mov	x0, x23
   2c208:	bl	a960 <free@plt>
   2c20c:	mov	x23, xzr
   2c210:	mov	w8, #0xc                   	// #12
   2c214:	str	w8, [x19]
   2c218:	b	2c1d0 <rpl_re_set_registers@@Base+0x9080>
   2c21c:	stp	x29, x30, [sp, #-48]!
   2c220:	stp	x22, x21, [sp, #16]
   2c224:	stp	x20, x19, [sp, #32]
   2c228:	ldr	x8, [x0]
   2c22c:	mov	x29, sp
   2c230:	add	x9, x8, x1, lsl #4
   2c234:	ldrb	w10, [x9, #8]
   2c238:	cmp	w10, #0x7
   2c23c:	b.eq	2c428 <rpl_re_set_registers@@Base+0x92d8>  // b.none
   2c240:	ldr	w9, [x2, #144]
   2c244:	cmp	w9, #0x1
   2c248:	b.ne	2c2a0 <rpl_re_set_registers@@Base+0x9150>  // b.any
   2c24c:	mov	w20, #0x1                   	// #1
   2c250:	cmp	w10, #0x5
   2c254:	b.eq	2c2ec <rpl_re_set_registers@@Base+0x919c>  // b.none
   2c258:	cmp	w10, #0x6
   2c25c:	mov	w0, wzr
   2c260:	b.ne	2c404 <rpl_re_set_registers@@Base+0x92b4>  // b.any
   2c264:	cmp	w20, #0x2
   2c268:	b.lt	2c404 <rpl_re_set_registers@@Base+0x92b4>  // b.tstop
   2c26c:	lsl	x10, x1, #4
   2c270:	ldr	x21, [x8, x10]
   2c274:	ldr	x8, [x21, #64]
   2c278:	cbnz	x8, 2c28c <rpl_re_set_registers@@Base+0x913c>
   2c27c:	ldr	x10, [x21, #72]
   2c280:	cbnz	x10, 2c28c <rpl_re_set_registers@@Base+0x913c>
   2c284:	ldr	x10, [x21, #40]
   2c288:	cbz	x10, 2c420 <rpl_re_set_registers@@Base+0x92d0>
   2c28c:	cmp	w9, #0x1
   2c290:	b.ne	2c334 <rpl_re_set_registers@@Base+0x91e4>  // b.any
   2c294:	ldr	x9, [x2, #8]
   2c298:	ldrb	w19, [x9, x3]
   2c29c:	b	2c33c <rpl_re_set_registers@@Base+0x91ec>
   2c2a0:	ldr	x11, [x2, #48]
   2c2a4:	add	x12, x3, #0x1
   2c2a8:	cmp	x12, x11
   2c2ac:	b.ge	2c2e0 <rpl_re_set_registers@@Base+0x9190>  // b.tcont
   2c2b0:	ldr	x13, [x2, #16]
   2c2b4:	sub	w20, w11, w3
   2c2b8:	sub	x12, x11, x3
   2c2bc:	mov	w11, #0x1                   	// #1
   2c2c0:	add	x13, x13, x3, lsl #2
   2c2c4:	ldr	w14, [x13, x11, lsl #2]
   2c2c8:	cmn	w14, #0x1
   2c2cc:	b.ne	2c324 <rpl_re_set_registers@@Base+0x91d4>  // b.any
   2c2d0:	add	x11, x11, #0x1
   2c2d4:	cmp	x12, x11
   2c2d8:	b.ne	2c2c4 <rpl_re_set_registers@@Base+0x9174>  // b.any
   2c2dc:	b	2c2e4 <rpl_re_set_registers@@Base+0x9194>
   2c2e0:	mov	w20, #0x1                   	// #1
   2c2e4:	cmp	w10, #0x5
   2c2e8:	b.ne	2c258 <rpl_re_set_registers@@Base+0x9108>  // b.any
   2c2ec:	cmp	w20, #0x2
   2c2f0:	b.lt	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.tstop
   2c2f4:	ldr	x8, [x0, #216]
   2c2f8:	tbnz	w8, #6, 2c30c <rpl_re_set_registers@@Base+0x91bc>
   2c2fc:	ldr	x9, [x2, #8]
   2c300:	ldrb	w9, [x9, x3]
   2c304:	cmp	w9, #0xa
   2c308:	b.eq	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.none
   2c30c:	tbz	w8, #7, 2c31c <rpl_re_set_registers@@Base+0x91cc>
   2c310:	ldr	x8, [x2, #8]
   2c314:	ldrb	w8, [x8, x3]
   2c318:	cbz	w8, 2c400 <rpl_re_set_registers@@Base+0x92b0>
   2c31c:	mov	w0, w20
   2c320:	b	2c404 <rpl_re_set_registers@@Base+0x92b4>
   2c324:	mov	w20, w11
   2c328:	cmp	w10, #0x5
   2c32c:	b.eq	2c2ec <rpl_re_set_registers@@Base+0x919c>  // b.none
   2c330:	b	2c258 <rpl_re_set_registers@@Base+0x9108>
   2c334:	ldr	x9, [x2, #16]
   2c338:	ldr	w19, [x9, x3, lsl #2]
   2c33c:	ldr	x9, [x21, #40]
   2c340:	cmp	x9, #0x1
   2c344:	b.lt	2c368 <rpl_re_set_registers@@Base+0x9218>  // b.tstop
   2c348:	ldr	x10, [x21]
   2c34c:	mov	x11, xzr
   2c350:	ldr	w12, [x10, x11, lsl #2]
   2c354:	cmp	w19, w12
   2c358:	b.eq	2c3dc <rpl_re_set_registers@@Base+0x928c>  // b.none
   2c35c:	add	x11, x11, #0x1
   2c360:	cmp	x11, x9
   2c364:	b.lt	2c350 <rpl_re_set_registers@@Base+0x9200>  // b.tstop
   2c368:	ldr	x9, [x21, #72]
   2c36c:	cmp	x9, #0x1
   2c370:	b.lt	2c3a0 <rpl_re_set_registers@@Base+0x9250>  // b.tstop
   2c374:	mov	x22, xzr
   2c378:	ldr	x8, [x21, #24]
   2c37c:	mov	w0, w19
   2c380:	ldr	x1, [x8, x22, lsl #3]
   2c384:	bl	a530 <iswctype@plt>
   2c388:	cbnz	w0, 2c3dc <rpl_re_set_registers@@Base+0x928c>
   2c38c:	ldr	x8, [x21, #72]
   2c390:	add	x22, x22, #0x1
   2c394:	cmp	x22, x8
   2c398:	b.lt	2c378 <rpl_re_set_registers@@Base+0x9228>  // b.tstop
   2c39c:	ldr	x8, [x21, #64]
   2c3a0:	cmp	x8, #0x1
   2c3a4:	b.lt	2c3ec <rpl_re_set_registers@@Base+0x929c>  // b.tstop
   2c3a8:	ldr	x9, [x21, #8]
   2c3ac:	mov	x10, xzr
   2c3b0:	b	2c3c0 <rpl_re_set_registers@@Base+0x9270>
   2c3b4:	add	x10, x10, #0x1
   2c3b8:	cmp	x10, x8
   2c3bc:	b.ge	2c3ec <rpl_re_set_registers@@Base+0x929c>  // b.tcont
   2c3c0:	ldr	w11, [x9, x10, lsl #2]
   2c3c4:	cmp	w11, w19
   2c3c8:	b.hi	2c3b4 <rpl_re_set_registers@@Base+0x9264>  // b.pmore
   2c3cc:	ldr	x11, [x21, #16]
   2c3d0:	ldr	w11, [x11, x10, lsl #2]
   2c3d4:	cmp	w19, w11
   2c3d8:	b.hi	2c3b4 <rpl_re_set_registers@@Base+0x9264>  // b.pmore
   2c3dc:	mov	w0, w20
   2c3e0:	ldrb	w8, [x21, #32]
   2c3e4:	tbnz	w8, #0, 2c3f8 <rpl_re_set_registers@@Base+0x92a8>
   2c3e8:	b	2c404 <rpl_re_set_registers@@Base+0x92b4>
   2c3ec:	mov	w0, wzr
   2c3f0:	ldrb	w8, [x21, #32]
   2c3f4:	tbz	w8, #0, 2c404 <rpl_re_set_registers@@Base+0x92b4>
   2c3f8:	cmp	w0, #0x0
   2c3fc:	b.le	2c414 <rpl_re_set_registers@@Base+0x92c4>
   2c400:	mov	w0, wzr
   2c404:	ldp	x20, x19, [sp, #32]
   2c408:	ldp	x22, x21, [sp, #16]
   2c40c:	ldp	x29, x30, [sp], #48
   2c410:	ret
   2c414:	cmp	w20, #0x1
   2c418:	csinc	w0, w20, wzr, gt
   2c41c:	b	2c404 <rpl_re_set_registers@@Base+0x92b4>
   2c420:	mov	w19, wzr
   2c424:	b	2c33c <rpl_re_set_registers@@Base+0x91ec>
   2c428:	ldr	x8, [x2, #8]
   2c42c:	ldrb	w10, [x8, x3]
   2c430:	cmp	w10, #0xc2
   2c434:	b.cc	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.lo, b.ul, b.last
   2c438:	ldr	x9, [x2, #88]
   2c43c:	add	x11, x3, #0x2
   2c440:	cmp	x11, x9
   2c444:	b.gt	2c400 <rpl_re_set_registers@@Base+0x92b0>
   2c448:	add	x11, x3, x8
   2c44c:	ldrb	w11, [x11, #1]
   2c450:	cmp	w10, #0xdf
   2c454:	b.hi	2c474 <rpl_re_set_registers@@Base+0x9324>  // b.pmore
   2c458:	sxtb	w8, w11
   2c45c:	cmp	w11, #0xbf
   2c460:	mov	w9, #0xffffffff            	// #-1
   2c464:	ccmp	w8, w9, #0x0, ls  // ls = plast
   2c468:	mov	w8, #0x2                   	// #2
   2c46c:	csel	w0, wzr, w8, gt
   2c470:	b	2c404 <rpl_re_set_registers@@Base+0x92b4>
   2c474:	cmp	w10, #0xef
   2c478:	b.hi	2c494 <rpl_re_set_registers@@Base+0x9344>  // b.pmore
   2c47c:	cmp	w10, #0xe0
   2c480:	mov	w10, #0x3                   	// #3
   2c484:	b.ne	2c4f0 <rpl_re_set_registers@@Base+0x93a0>  // b.any
   2c488:	cmp	w11, #0xa0
   2c48c:	b.cc	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.lo, b.ul, b.last
   2c490:	b	2c4f0 <rpl_re_set_registers@@Base+0x93a0>
   2c494:	cmp	w10, #0xf7
   2c498:	b.hi	2c4b4 <rpl_re_set_registers@@Base+0x9364>  // b.pmore
   2c49c:	cmp	w10, #0xf0
   2c4a0:	mov	w10, #0x4                   	// #4
   2c4a4:	b.ne	2c4f0 <rpl_re_set_registers@@Base+0x93a0>  // b.any
   2c4a8:	cmp	w11, #0x90
   2c4ac:	b.cc	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.lo, b.ul, b.last
   2c4b0:	b	2c4f0 <rpl_re_set_registers@@Base+0x93a0>
   2c4b4:	cmp	w10, #0xfb
   2c4b8:	b.hi	2c4d4 <rpl_re_set_registers@@Base+0x9384>  // b.pmore
   2c4bc:	cmp	w10, #0xf8
   2c4c0:	mov	w10, #0x5                   	// #5
   2c4c4:	b.ne	2c4f0 <rpl_re_set_registers@@Base+0x93a0>  // b.any
   2c4c8:	cmp	w11, #0x88
   2c4cc:	b.cc	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.lo, b.ul, b.last
   2c4d0:	b	2c4f0 <rpl_re_set_registers@@Base+0x93a0>
   2c4d4:	cmp	w10, #0xfd
   2c4d8:	b.hi	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.pmore
   2c4dc:	cmp	w10, #0xfc
   2c4e0:	mov	w10, #0x6                   	// #6
   2c4e4:	b.ne	2c4f0 <rpl_re_set_registers@@Base+0x93a0>  // b.any
   2c4e8:	cmp	w11, #0x84
   2c4ec:	b.cc	2c400 <rpl_re_set_registers@@Base+0x92b0>  // b.lo, b.ul, b.last
   2c4f0:	add	x11, x10, x3
   2c4f4:	cmp	x11, x9
   2c4f8:	b.gt	2c400 <rpl_re_set_registers@@Base+0x92b0>
   2c4fc:	add	x8, x3, x8
   2c500:	sub	x9, x10, #0x1
   2c504:	add	x8, x8, #0x1
   2c508:	ldrb	w11, [x8]
   2c50c:	mov	w0, wzr
   2c510:	sxtb	w12, w11
   2c514:	tbz	w12, #31, 2c404 <rpl_re_set_registers@@Base+0x92b4>
   2c518:	cmp	w11, #0xbf
   2c51c:	b.hi	2c404 <rpl_re_set_registers@@Base+0x92b4>  // b.pmore
   2c520:	subs	x9, x9, #0x1
   2c524:	add	x8, x8, #0x1
   2c528:	b.ne	2c508 <rpl_re_set_registers@@Base+0x93b8>  // b.any
   2c52c:	mov	w0, w10
   2c530:	b	2c404 <rpl_re_set_registers@@Base+0x92b4>
   2c534:	sub	sp, sp, #0x30
   2c538:	stp	x29, x30, [sp, #16]
   2c53c:	ldr	w10, [x1, #8]
   2c540:	str	x19, [sp, #32]
   2c544:	add	x29, sp, #0x10
   2c548:	and	w8, w10, #0xff
   2c54c:	sub	w11, w8, #0x1
   2c550:	cmp	w11, #0x6
   2c554:	mov	w8, wzr
   2c558:	b.hi	2c6a4 <rpl_re_set_registers@@Base+0x9554>  // b.pmore
   2c55c:	ldr	x9, [x0, #8]
   2c560:	adrp	x12, 31000 <vasnprintf@@Base+0x324c>
   2c564:	add	x12, x12, #0x498
   2c568:	ldrb	w9, [x9, x2]
   2c56c:	adr	x13, 2c57c <rpl_re_set_registers@@Base+0x942c>
   2c570:	ldrb	w14, [x12, x11]
   2c574:	add	x13, x13, x14, lsl #2
   2c578:	br	x13
   2c57c:	ldrb	w8, [x1]
   2c580:	cmp	w8, w9
   2c584:	b.eq	2c5d8 <rpl_re_set_registers@@Base+0x9488>  // b.none
   2c588:	b	2c6a0 <rpl_re_set_registers@@Base+0x9550>
   2c58c:	ldr	x8, [x1]
   2c590:	lsr	x11, x9, #3
   2c594:	and	x11, x11, #0x18
   2c598:	ldr	x8, [x8, x11]
   2c59c:	lsr	x8, x8, x9
   2c5a0:	tbnz	w8, #0, 2c5d8 <rpl_re_set_registers@@Base+0x9488>
   2c5a4:	b	2c6a0 <rpl_re_set_registers@@Base+0x9550>
   2c5a8:	sxtb	w8, w9
   2c5ac:	tbnz	w8, #31, 2c6a0 <rpl_re_set_registers@@Base+0x9550>
   2c5b0:	cbz	w9, 2c5cc <rpl_re_set_registers@@Base+0x947c>
   2c5b4:	cmp	w9, #0xa
   2c5b8:	b.ne	2c5d8 <rpl_re_set_registers@@Base+0x9488>  // b.any
   2c5bc:	ldr	x8, [x0, #152]
   2c5c0:	ldrb	w8, [x8, #216]
   2c5c4:	tbnz	w8, #6, 2c5d8 <rpl_re_set_registers@@Base+0x9488>
   2c5c8:	b	2c6a0 <rpl_re_set_registers@@Base+0x9550>
   2c5cc:	ldr	x8, [x0, #152]
   2c5d0:	ldrb	w8, [x8, #216]
   2c5d4:	tbnz	w8, #7, 2c6a0 <rpl_re_set_registers@@Base+0x9550>
   2c5d8:	tst	w10, #0x3ff00
   2c5dc:	b.eq	2c620 <rpl_re_set_registers@@Base+0x94d0>  // b.none
   2c5e0:	tbnz	x2, #63, 2c618 <rpl_re_set_registers@@Base+0x94c8>
   2c5e4:	ldr	x8, [x0, #88]
   2c5e8:	cmp	x8, x2
   2c5ec:	b.eq	2c6cc <rpl_re_set_registers@@Base+0x957c>  // b.none
   2c5f0:	ldr	w8, [x0, #144]
   2c5f4:	cmp	w8, #0x2
   2c5f8:	b.lt	2c628 <rpl_re_set_registers@@Base+0x94d8>  // b.tstop
   2c5fc:	ldr	x9, [x0, #16]
   2c600:	ldr	w8, [x9, x2, lsl #2]
   2c604:	cmn	w8, #0x1
   2c608:	b.ne	2c64c <rpl_re_set_registers@@Base+0x94fc>  // b.any
   2c60c:	cmp	x2, #0x0
   2c610:	sub	x2, x2, #0x1
   2c614:	b.gt	2c600 <rpl_re_set_registers@@Base+0x94b0>
   2c618:	ldr	w11, [x0, #112]
   2c61c:	b	2c67c <rpl_re_set_registers@@Base+0x952c>
   2c620:	mov	w8, #0x1                   	// #1
   2c624:	b	2c6a4 <rpl_re_set_registers@@Base+0x9554>
   2c628:	ldr	x8, [x0, #128]
   2c62c:	lsr	x11, x9, #3
   2c630:	and	x11, x11, #0x18
   2c634:	ldr	x8, [x8, x11]
   2c638:	lsr	x8, x8, x9
   2c63c:	tbz	w8, #0, 2c670 <rpl_re_set_registers@@Base+0x9520>
   2c640:	mov	w12, wzr
   2c644:	mov	w11, #0x1                   	// #1
   2c648:	b	2c68c <rpl_re_set_registers@@Base+0x953c>
   2c64c:	ldrb	w9, [x0, #142]
   2c650:	cbnz	w9, 2c6e0 <rpl_re_set_registers@@Base+0x9590>
   2c654:	cmp	w8, #0xa
   2c658:	b.ne	2c678 <rpl_re_set_registers@@Base+0x9528>  // b.any
   2c65c:	ldrb	w8, [x0, #141]
   2c660:	cmp	w8, #0x0
   2c664:	cset	w8, ne  // ne = any
   2c668:	lsl	w11, w8, #1
   2c66c:	b	2c67c <rpl_re_set_registers@@Base+0x952c>
   2c670:	cmp	w9, #0xa
   2c674:	b.eq	2c65c <rpl_re_set_registers@@Base+0x950c>  // b.none
   2c678:	mov	w11, wzr
   2c67c:	tst	w11, #0x1
   2c680:	cset	w12, eq  // eq = none
   2c684:	tbz	w10, #10, 2c68c <rpl_re_set_registers@@Base+0x953c>
   2c688:	tbz	w11, #0, 2c6a0 <rpl_re_set_registers@@Base+0x9550>
   2c68c:	ldr	w8, [x1, #8]
   2c690:	tbnz	w12, #0, 2c698 <rpl_re_set_registers@@Base+0x9548>
   2c694:	tbnz	w8, #11, 2c6a0 <rpl_re_set_registers@@Base+0x9550>
   2c698:	tbnz	w11, #1, 2c6b8 <rpl_re_set_registers@@Base+0x9568>
   2c69c:	tbz	w8, #13, 2c6b8 <rpl_re_set_registers@@Base+0x9568>
   2c6a0:	mov	w8, wzr
   2c6a4:	mov	w0, w8
   2c6a8:	ldr	x19, [sp, #32]
   2c6ac:	ldp	x29, x30, [sp, #16]
   2c6b0:	add	sp, sp, #0x30
   2c6b4:	ret
   2c6b8:	tst	w8, #0x8000
   2c6bc:	cset	w8, eq  // eq = none
   2c6c0:	and	w9, w11, #0x8
   2c6c4:	orr	w0, w8, w9, lsr #3
   2c6c8:	b	2c6a8 <rpl_re_set_registers@@Base+0x9558>
   2c6cc:	ldr	w8, [x0, #160]
   2c6d0:	mov	w9, #0xa                   	// #10
   2c6d4:	and	w8, w8, #0x2
   2c6d8:	eor	w11, w8, w9
   2c6dc:	b	2c67c <rpl_re_set_registers@@Base+0x952c>
   2c6e0:	str	x0, [sp]
   2c6e4:	mov	w0, w8
   2c6e8:	stur	w10, [x29, #-4]
   2c6ec:	str	x1, [x29, #24]
   2c6f0:	mov	w19, w8
   2c6f4:	bl	ac10 <iswalnum@plt>
   2c6f8:	mov	w12, wzr
   2c6fc:	cmp	w19, #0x5f
   2c700:	mov	w11, #0x1                   	// #1
   2c704:	b.eq	2c724 <rpl_re_set_registers@@Base+0x95d4>  // b.none
   2c708:	mov	w9, w0
   2c70c:	ldr	x1, [x29, #24]
   2c710:	ldr	x0, [sp]
   2c714:	ldur	w10, [x29, #-4]
   2c718:	mov	w8, w19
   2c71c:	cbz	w9, 2c654 <rpl_re_set_registers@@Base+0x9504>
   2c720:	b	2c68c <rpl_re_set_registers@@Base+0x953c>
   2c724:	ldr	x1, [x29, #24]
   2c728:	b	2c68c <rpl_re_set_registers@@Base+0x953c>
   2c72c:	sub	sp, sp, #0xa0
   2c730:	stp	x29, x30, [sp, #64]
   2c734:	stp	x28, x27, [sp, #80]
   2c738:	stp	x26, x25, [sp, #96]
   2c73c:	stp	x24, x23, [sp, #112]
   2c740:	stp	x22, x21, [sp, #128]
   2c744:	stp	x20, x19, [sp, #144]
   2c748:	ldp	x22, x21, [x1, #16]
   2c74c:	mov	w8, #0x1                   	// #1
   2c750:	mov	x20, x0
   2c754:	dup	v0.2d, x8
   2c758:	mov	w0, #0x8                   	// #8
   2c75c:	add	x29, sp, #0x40
   2c760:	mov	x19, x1
   2c764:	str	q0, [sp, #32]
   2c768:	bl	a540 <malloc@plt>
   2c76c:	str	x0, [sp, #48]
   2c770:	cbz	x0, 2cab8 <rpl_re_set_registers@@Base+0x9968>
   2c774:	str	x22, [x0]
   2c778:	add	x3, sp, #0x20
   2c77c:	mov	x0, x20
   2c780:	mov	x1, x19
   2c784:	mov	x2, x21
   2c788:	bl	2cacc <rpl_re_set_registers@@Base+0x997c>
   2c78c:	cbnz	w0, 2cab0 <rpl_re_set_registers@@Base+0x9960>
   2c790:	add	x8, x19, #0x20
   2c794:	str	x8, [sp, #24]
   2c798:	mov	w8, #0x1                   	// #1
   2c79c:	mov	w10, wzr
   2c7a0:	dup	v0.2d, x8
   2c7a4:	str	q0, [sp]
   2c7a8:	b	2c7c8 <rpl_re_set_registers@@Base+0x9678>
   2c7ac:	add	x3, sp, #0x20
   2c7b0:	mov	x0, x20
   2c7b4:	mov	x1, x19
   2c7b8:	mov	x2, x21
   2c7bc:	bl	2cacc <rpl_re_set_registers@@Base+0x997c>
   2c7c0:	ldr	w10, [sp, #20]
   2c7c4:	cbnz	w0, 2cab0 <rpl_re_set_registers@@Base+0x9960>
   2c7c8:	mov	x26, x21
   2c7cc:	subs	x21, x21, #0x1
   2c7d0:	b.lt	2ca58 <rpl_re_set_registers@@Base+0x9908>  // b.tstop
   2c7d4:	ldr	x0, [x19]
   2c7d8:	ldr	w9, [x20, #224]
   2c7dc:	ldr	x8, [x0, x26, lsl #3]
   2c7e0:	cmp	x8, #0x0
   2c7e4:	csinc	w10, wzr, w10, ne  // ne = any
   2c7e8:	cmp	w10, w9
   2c7ec:	b.gt	2ca68 <rpl_re_set_registers@@Base+0x9918>
   2c7f0:	str	xzr, [sp, #40]
   2c7f4:	ldr	x8, [x20, #184]
   2c7f8:	str	w10, [sp, #20]
   2c7fc:	ldr	x27, [x8, x21, lsl #3]
   2c800:	cbz	x27, 2c7ac <rpl_re_set_registers@@Base+0x965c>
   2c804:	ldr	x8, [x27, #40]
   2c808:	cmp	x8, #0x1
   2c80c:	b.lt	2c7ac <rpl_re_set_registers@@Base+0x965c>  // b.tstop
   2c810:	ldr	x28, [x20, #152]
   2c814:	mov	x22, xzr
   2c818:	b	2c850 <rpl_re_set_registers@@Base+0x9700>
   2c81c:	ldr	x9, [sp, #32]
   2c820:	cbz	x9, 2c9a4 <rpl_re_set_registers@@Base+0x9854>
   2c824:	ldr	x8, [sp, #40]
   2c828:	cbnz	x8, 2c9c4 <rpl_re_set_registers@@Base+0x9874>
   2c82c:	ldr	x8, [sp, #48]
   2c830:	str	x23, [x8]
   2c834:	ldr	x8, [sp, #40]
   2c838:	add	x8, x8, #0x1
   2c83c:	str	x8, [sp, #40]
   2c840:	ldr	x8, [x27, #40]
   2c844:	add	x22, x22, #0x1
   2c848:	cmp	x22, x8
   2c84c:	b.ge	2c7ac <rpl_re_set_registers@@Base+0x965c>  // b.tcont
   2c850:	ldr	x8, [x27, #48]
   2c854:	ldr	x23, [x8, x22, lsl #3]
   2c858:	ldr	x8, [x28]
   2c85c:	add	x8, x8, x23, lsl #4
   2c860:	ldrb	w8, [x8, #10]
   2c864:	tbnz	w8, #4, 2c8e0 <rpl_re_set_registers@@Base+0x9790>
   2c868:	ldr	x8, [x28]
   2c86c:	mov	x0, x20
   2c870:	mov	x2, x21
   2c874:	add	x1, x8, x23, lsl #4
   2c878:	bl	2c534 <rpl_re_set_registers@@Base+0x93e4>
   2c87c:	tbz	w0, #0, 2c840 <rpl_re_set_registers@@Base+0x96f0>
   2c880:	ldr	x8, [x19]
   2c884:	ldr	x9, [x8, x26, lsl #3]
   2c888:	cbz	x9, 2c840 <rpl_re_set_registers@@Base+0x96f0>
   2c88c:	ldr	x8, [x9, #16]
   2c890:	subs	x10, x8, #0x1
   2c894:	b.lt	2c840 <rpl_re_set_registers@@Base+0x96f0>  // b.tstop
   2c898:	ldr	x8, [x28, #24]
   2c89c:	ldr	x9, [x9, #24]
   2c8a0:	mov	x11, xzr
   2c8a4:	ldr	x8, [x8, x23, lsl #3]
   2c8a8:	b.eq	2c8cc <rpl_re_set_registers@@Base+0x977c>  // b.none
   2c8ac:	add	x12, x11, x10
   2c8b0:	lsr	x12, x12, #1
   2c8b4:	ldr	x13, [x9, x12, lsl #3]
   2c8b8:	cmp	x13, x8
   2c8bc:	csinc	x11, x11, x12, ge  // ge = tcont
   2c8c0:	csel	x10, x10, x12, lt  // lt = tstop
   2c8c4:	cmp	x11, x10
   2c8c8:	b.cc	2c8ac <rpl_re_set_registers@@Base+0x975c>  // b.lo, b.ul, b.last
   2c8cc:	ldr	x9, [x9, x11, lsl #3]
   2c8d0:	cmp	x9, x8
   2c8d4:	b.ne	2c840 <rpl_re_set_registers@@Base+0x96f0>  // b.any
   2c8d8:	mov	w0, #0x1                   	// #1
   2c8dc:	b	2c974 <rpl_re_set_registers@@Base+0x9824>
   2c8e0:	ldr	x24, [x20, #152]
   2c8e4:	ldr	x25, [x19, #24]
   2c8e8:	mov	x1, x23
   2c8ec:	mov	x2, x20
   2c8f0:	mov	x0, x24
   2c8f4:	mov	x3, x21
   2c8f8:	bl	2c21c <rpl_re_set_registers@@Base+0x90cc>
   2c8fc:	cmp	w0, #0x1
   2c900:	b.lt	2c970 <rpl_re_set_registers@@Base+0x9820>  // b.tstop
   2c904:	add	x8, x21, w0, uxtw
   2c908:	cmp	x8, x25
   2c90c:	b.gt	2c974 <rpl_re_set_registers@@Base+0x9824>
   2c910:	ldr	x9, [x19]
   2c914:	ldr	x9, [x9, x8, lsl #3]
   2c918:	cbz	x9, 2c868 <rpl_re_set_registers@@Base+0x9718>
   2c91c:	ldr	x8, [x9, #16]
   2c920:	subs	x10, x8, #0x1
   2c924:	b.lt	2c868 <rpl_re_set_registers@@Base+0x9718>  // b.tstop
   2c928:	ldr	x8, [x24, #24]
   2c92c:	ldr	x9, [x9, #24]
   2c930:	mov	x11, xzr
   2c934:	ldr	x8, [x8, x23, lsl #3]
   2c938:	b.eq	2c95c <rpl_re_set_registers@@Base+0x980c>  // b.none
   2c93c:	add	x12, x11, x10
   2c940:	lsr	x12, x12, #1
   2c944:	ldr	x13, [x9, x12, lsl #3]
   2c948:	cmp	x13, x8
   2c94c:	csinc	x11, x11, x12, ge  // ge = tcont
   2c950:	csel	x10, x10, x12, lt  // lt = tstop
   2c954:	cmp	x11, x10
   2c958:	b.cc	2c93c <rpl_re_set_registers@@Base+0x97ec>  // b.lo, b.ul, b.last
   2c95c:	cbz	w0, 2c868 <rpl_re_set_registers@@Base+0x9718>
   2c960:	ldr	x9, [x9, x11, lsl #3]
   2c964:	cmp	x9, x8
   2c968:	b.eq	2c974 <rpl_re_set_registers@@Base+0x9824>  // b.none
   2c96c:	b	2c868 <rpl_re_set_registers@@Base+0x9718>
   2c970:	cbz	w0, 2c868 <rpl_re_set_registers@@Base+0x9718>
   2c974:	ldr	x8, [x19, #40]
   2c978:	cbz	x8, 2c81c <rpl_re_set_registers@@Base+0x96cc>
   2c97c:	ldr	x8, [x28, #24]
   2c980:	ldr	x1, [sp, #24]
   2c984:	add	x3, x21, w0, sxtw
   2c988:	mov	x0, x20
   2c98c:	ldr	x2, [x8, x23, lsl #3]
   2c990:	mov	x4, x23
   2c994:	mov	x5, x21
   2c998:	bl	2d92c <rpl_re_set_registers@@Base+0xa7dc>
   2c99c:	tbz	w0, #0, 2c81c <rpl_re_set_registers@@Base+0x96cc>
   2c9a0:	b	2c840 <rpl_re_set_registers@@Base+0x96f0>
   2c9a4:	ldr	q0, [sp]
   2c9a8:	mov	w0, #0x8                   	// #8
   2c9ac:	str	q0, [sp, #32]
   2c9b0:	bl	a540 <malloc@plt>
   2c9b4:	str	x0, [sp, #48]
   2c9b8:	cbz	x0, 2caa4 <rpl_re_set_registers@@Base+0x9954>
   2c9bc:	str	x23, [x0]
   2c9c0:	b	2c840 <rpl_re_set_registers@@Base+0x96f0>
   2c9c4:	cmp	x9, x8
   2c9c8:	b.ne	2c9f0 <rpl_re_set_registers@@Base+0x98a0>  // b.any
   2c9cc:	ldr	x0, [sp, #48]
   2c9d0:	lsl	x8, x9, #1
   2c9d4:	lsl	x1, x9, #4
   2c9d8:	str	x8, [sp, #32]
   2c9dc:	bl	a720 <realloc@plt>
   2c9e0:	cbz	x0, 2cac4 <rpl_re_set_registers@@Base+0x9974>
   2c9e4:	ldr	x8, [sp, #40]
   2c9e8:	str	x0, [sp, #48]
   2c9ec:	b	2c9f4 <rpl_re_set_registers@@Base+0x98a4>
   2c9f0:	ldr	x0, [sp, #48]
   2c9f4:	ldr	x9, [x0]
   2c9f8:	cmp	x9, x23
   2c9fc:	b.le	2ca28 <rpl_re_set_registers@@Base+0x98d8>
   2ca00:	cmp	x8, #0x1
   2ca04:	b.lt	2ca50 <rpl_re_set_registers@@Base+0x9900>  // b.tstop
   2ca08:	mov	x9, x8
   2ca0c:	add	x10, x0, x9, lsl #3
   2ca10:	ldur	x11, [x10, #-8]
   2ca14:	subs	x8, x9, #0x1
   2ca18:	mov	x9, x8
   2ca1c:	str	x11, [x10]
   2ca20:	b.gt	2ca0c <rpl_re_set_registers@@Base+0x98bc>
   2ca24:	b	2ca50 <rpl_re_set_registers@@Base+0x9900>
   2ca28:	add	x9, x0, x8, lsl #3
   2ca2c:	ldur	x9, [x9, #-8]
   2ca30:	cmp	x9, x23
   2ca34:	b.le	2ca50 <rpl_re_set_registers@@Base+0x9900>
   2ca38:	add	x10, x0, x8, lsl #3
   2ca3c:	str	x9, [x10]
   2ca40:	ldur	x9, [x10, #-16]
   2ca44:	sub	x8, x8, #0x1
   2ca48:	cmp	x9, x23
   2ca4c:	b.gt	2ca38 <rpl_re_set_registers@@Base+0x98e8>
   2ca50:	str	x23, [x0, x8, lsl #3]
   2ca54:	b	2c834 <rpl_re_set_registers@@Base+0x96e4>
   2ca58:	mov	w23, wzr
   2ca5c:	ldr	x0, [sp, #48]
   2ca60:	bl	a960 <free@plt>
   2ca64:	b	2ca80 <rpl_re_set_registers@@Base+0x9930>
   2ca68:	lsl	x2, x26, #3
   2ca6c:	mov	w1, wzr
   2ca70:	bl	a630 <memset@plt>
   2ca74:	ldr	x0, [sp, #48]
   2ca78:	bl	a960 <free@plt>
   2ca7c:	mov	w23, wzr
   2ca80:	mov	w0, w23
   2ca84:	ldp	x20, x19, [sp, #144]
   2ca88:	ldp	x22, x21, [sp, #128]
   2ca8c:	ldp	x24, x23, [sp, #112]
   2ca90:	ldp	x26, x25, [sp, #96]
   2ca94:	ldp	x28, x27, [sp, #80]
   2ca98:	ldp	x29, x30, [sp, #64]
   2ca9c:	add	sp, sp, #0xa0
   2caa0:	ret
   2caa4:	stp	xzr, xzr, [sp, #32]
   2caa8:	mov	w23, #0xc                   	// #12
   2caac:	b	2ca5c <rpl_re_set_registers@@Base+0x990c>
   2cab0:	mov	w23, w0
   2cab4:	b	2ca5c <rpl_re_set_registers@@Base+0x990c>
   2cab8:	stp	xzr, xzr, [sp, #32]
   2cabc:	mov	w23, #0xc                   	// #12
   2cac0:	b	2ca80 <rpl_re_set_registers@@Base+0x9930>
   2cac4:	mov	w23, #0xc                   	// #12
   2cac8:	b	2ca5c <rpl_re_set_registers@@Base+0x990c>
   2cacc:	sub	sp, sp, #0x140
   2cad0:	stp	x29, x30, [sp, #224]
   2cad4:	stp	x28, x27, [sp, #240]
   2cad8:	stp	x26, x25, [sp, #256]
   2cadc:	stp	x24, x23, [sp, #272]
   2cae0:	stp	x22, x21, [sp, #288]
   2cae4:	stp	x20, x19, [sp, #304]
   2cae8:	add	x29, sp, #0xe0
   2caec:	ldr	x24, [x0, #152]
   2caf0:	stur	wzr, [x29, #-100]
   2caf4:	ldr	x8, [x0, #184]
   2caf8:	mov	x19, x2
   2cafc:	mov	x20, x1
   2cb00:	mov	x25, x0
   2cb04:	ldr	x21, [x8, x2, lsl #3]
   2cb08:	ldr	x8, [x3, #8]
   2cb0c:	add	x9, x21, #0x8
   2cb10:	cmp	x21, #0x0
   2cb14:	csel	x28, xzr, x9, eq  // eq = none
   2cb18:	cbz	x8, 2ce54 <rpl_re_set_registers@@Base+0x9d04>
   2cb1c:	mov	x23, x3
   2cb20:	cbz	x21, 2ce6c <rpl_re_set_registers@@Base+0x9d1c>
   2cb24:	sub	x0, x29, #0x60
   2cb28:	mov	x1, x24
   2cb2c:	mov	x2, x23
   2cb30:	stur	wzr, [x29, #-96]
   2cb34:	bl	2bfa0 <rpl_re_set_registers@@Base+0x8e50>
   2cb38:	ldur	w27, [x29, #-96]
   2cb3c:	cbnz	w27, 2d41c <rpl_re_set_registers@@Base+0xa2cc>
   2cb40:	str	x25, [sp, #112]
   2cb44:	mov	x25, x0
   2cb48:	ldr	x8, [x25, #56]!
   2cb4c:	mov	x26, x0
   2cb50:	cbnz	x8, 2cbc8 <rpl_re_set_registers@@Base+0x9a78>
   2cb54:	ldr	x8, [x23, #8]
   2cb58:	lsl	x0, x8, #3
   2cb5c:	stp	x8, xzr, [x26, #56]
   2cb60:	bl	a540 <malloc@plt>
   2cb64:	cmp	x0, #0x0
   2cb68:	mov	w27, #0xc                   	// #12
   2cb6c:	csel	w8, w27, wzr, eq  // eq = none
   2cb70:	str	x0, [x26, #72]
   2cb74:	stur	w8, [x29, #-96]
   2cb78:	cbz	x0, 2d41c <rpl_re_set_registers@@Base+0xa2cc>
   2cb7c:	ldr	x8, [x23, #8]
   2cb80:	cmp	x8, #0x1
   2cb84:	b.lt	2cbc8 <rpl_re_set_registers@@Base+0x9a78>  // b.tstop
   2cb88:	mov	x26, x21
   2cb8c:	mov	x21, xzr
   2cb90:	mov	w22, #0x18                  	// #24
   2cb94:	ldr	x8, [x23, #16]
   2cb98:	ldr	x9, [x24, #56]
   2cb9c:	mov	x0, x25
   2cba0:	ldr	x8, [x8, x21, lsl #3]
   2cba4:	madd	x1, x8, x22, x9
   2cba8:	bl	28280 <rpl_re_set_registers@@Base+0x5130>
   2cbac:	cbnz	w0, 2d414 <rpl_re_set_registers@@Base+0xa2c4>
   2cbb0:	ldr	x8, [x23, #8]
   2cbb4:	add	x21, x21, #0x1
   2cbb8:	cmp	x21, x8
   2cbbc:	b.lt	2cb94 <rpl_re_set_registers@@Base+0x9a44>  // b.tstop
   2cbc0:	mov	x21, x26
   2cbc4:	stur	wzr, [x29, #-96]
   2cbc8:	mov	x0, x23
   2cbcc:	mov	x1, x28
   2cbd0:	mov	x2, x25
   2cbd4:	bl	2d44c <rpl_re_set_registers@@Base+0xa2fc>
   2cbd8:	stur	w0, [x29, #-100]
   2cbdc:	cbnz	w0, 2d42c <rpl_re_set_registers@@Base+0xa2dc>
   2cbe0:	ldr	x8, [x20, #40]
   2cbe4:	ldr	x25, [sp, #112]
   2cbe8:	cbz	x8, 2ce6c <rpl_re_set_registers@@Base+0x9d1c>
   2cbec:	mov	x22, x28
   2cbf0:	cmp	x8, #0x1
   2cbf4:	str	x21, [sp, #104]
   2cbf8:	b.lt	2ce60 <rpl_re_set_registers@@Base+0x9d10>  // b.tstop
   2cbfc:	ldr	x8, [sp, #112]
   2cc00:	mov	x25, xzr
   2cc04:	mov	w14, #0x18                  	// #24
   2cc08:	ldr	x26, [x8, #216]
   2cc0c:	b	2cc20 <rpl_re_set_registers@@Base+0x9ad0>
   2cc10:	ldr	x8, [x20, #40]
   2cc14:	add	x25, x25, #0x1
   2cc18:	cmp	x25, x8
   2cc1c:	b.ge	2ce60 <rpl_re_set_registers@@Base+0x9d10>  // b.tcont
   2cc20:	ldr	x8, [x20, #48]
   2cc24:	mov	w9, #0x28                  	// #40
   2cc28:	ldr	x8, [x8, x25, lsl #3]
   2cc2c:	madd	x9, x8, x9, x26
   2cc30:	ldr	x9, [x9, #16]
   2cc34:	cmp	x9, x19
   2cc38:	b.ge	2cc10 <rpl_re_set_registers@@Base+0x9ac0>  // b.tcont
   2cc3c:	mov	w9, #0x28                  	// #40
   2cc40:	madd	x9, x8, x9, x26
   2cc44:	ldr	x9, [x9, #8]
   2cc48:	cmp	x9, x19
   2cc4c:	b.lt	2cc10 <rpl_re_set_registers@@Base+0x9ac0>  // b.tstop
   2cc50:	mov	w9, #0x28                  	// #40
   2cc54:	madd	x8, x8, x9, x26
   2cc58:	ldr	x10, [x8]
   2cc5c:	ldr	x9, [x24]
   2cc60:	ldr	x11, [x8, #24]
   2cc64:	lsl	x8, x10, #4
   2cc68:	ldr	x21, [x9, x8]
   2cc6c:	ldr	x8, [x23, #8]
   2cc70:	cmp	x11, x19
   2cc74:	b.ne	2ccdc <rpl_re_set_registers@@Base+0x9b8c>  // b.any
   2cc78:	cmp	x8, #0x1
   2cc7c:	b.lt	2cc10 <rpl_re_set_registers@@Base+0x9ac0>  // b.tstop
   2cc80:	ldr	x10, [x23, #16]
   2cc84:	mov	x28, #0xffffffffffffffff    	// #-1
   2cc88:	mov	x1, #0xffffffffffffffff    	// #-1
   2cc8c:	b	2ccac <rpl_re_set_registers@@Base+0x9b5c>
   2cc90:	lsl	x12, x11, #4
   2cc94:	ldr	x12, [x9, x12]
   2cc98:	cmp	x21, x12
   2cc9c:	csel	x28, x11, x28, eq  // eq = none
   2cca0:	subs	x8, x8, #0x1
   2cca4:	add	x10, x10, #0x8
   2cca8:	b.eq	2cd48 <rpl_re_set_registers@@Base+0x9bf8>  // b.none
   2ccac:	ldr	x11, [x10]
   2ccb0:	add	x12, x9, x11, lsl #4
   2ccb4:	ldrb	w12, [x12, #8]
   2ccb8:	cmp	w12, #0x9
   2ccbc:	b.eq	2cc90 <rpl_re_set_registers@@Base+0x9b40>  // b.none
   2ccc0:	cmp	w12, #0x8
   2ccc4:	b.ne	2cca0 <rpl_re_set_registers@@Base+0x9b50>  // b.any
   2ccc8:	lsl	x12, x11, #4
   2cccc:	ldr	x12, [x9, x12]
   2ccd0:	cmp	x21, x12
   2ccd4:	csel	x1, x11, x1, eq  // eq = none
   2ccd8:	b	2cca0 <rpl_re_set_registers@@Base+0x9b50>
   2ccdc:	cmp	x8, #0x1
   2cce0:	b.lt	2cc10 <rpl_re_set_registers@@Base+0x9ac0>  // b.tstop
   2cce4:	mov	x28, xzr
   2cce8:	ldr	x10, [x23, #16]
   2ccec:	ldr	x1, [x10, x28, lsl #3]
   2ccf0:	add	x10, x9, x1, lsl #4
   2ccf4:	ldr	w10, [x10, #8]
   2ccf8:	and	w10, w10, #0xfe
   2ccfc:	orr	w10, w10, #0x1
   2cd00:	cmp	w10, #0x9
   2cd04:	b.ne	2cd34 <rpl_re_set_registers@@Base+0x9be4>  // b.any
   2cd08:	lsl	x10, x1, #4
   2cd0c:	ldr	x9, [x9, x10]
   2cd10:	cmp	x21, x9
   2cd14:	b.ne	2cd34 <rpl_re_set_registers@@Base+0x9be4>  // b.any
   2cd18:	mov	x0, x24
   2cd1c:	mov	x2, x23
   2cd20:	mov	x3, x22
   2cd24:	bl	2d614 <rpl_re_set_registers@@Base+0xa4c4>
   2cd28:	cbnz	w0, 2d3e8 <rpl_re_set_registers@@Base+0xa298>
   2cd2c:	ldr	x8, [x23, #8]
   2cd30:	mov	w14, #0x18                  	// #24
   2cd34:	add	x28, x28, #0x1
   2cd38:	cmp	x28, x8
   2cd3c:	b.ge	2cc10 <rpl_re_set_registers@@Base+0x9ac0>  // b.tcont
   2cd40:	ldr	x9, [x24]
   2cd44:	b	2cce8 <rpl_re_set_registers@@Base+0x9b98>
   2cd48:	tbnz	x1, #63, 2cd64 <rpl_re_set_registers@@Base+0x9c14>
   2cd4c:	mov	x0, x24
   2cd50:	mov	x2, x23
   2cd54:	mov	x3, x22
   2cd58:	bl	2d614 <rpl_re_set_registers@@Base+0xa4c4>
   2cd5c:	mov	w14, #0x18                  	// #24
   2cd60:	cbnz	w0, 2d3e8 <rpl_re_set_registers@@Base+0xa298>
   2cd64:	tbnz	x28, #63, 2cc10 <rpl_re_set_registers@@Base+0x9ac0>
   2cd68:	ldr	x8, [x23, #8]
   2cd6c:	cmp	x8, #0x1
   2cd70:	b.lt	2cc10 <rpl_re_set_registers@@Base+0x9ac0>  // b.tstop
   2cd74:	mov	x21, xzr
   2cd78:	b	2cda8 <rpl_re_set_registers@@Base+0x9c58>
   2cd7c:	mov	x0, x24
   2cd80:	mov	x2, x23
   2cd84:	mov	x3, x22
   2cd88:	bl	2d614 <rpl_re_set_registers@@Base+0xa4c4>
   2cd8c:	cbnz	w0, 2d3e8 <rpl_re_set_registers@@Base+0xa298>
   2cd90:	ldr	x8, [x23, #8]
   2cd94:	sub	x21, x21, #0x1
   2cd98:	mov	w14, #0x18                  	// #24
   2cd9c:	add	x21, x21, #0x1
   2cda0:	cmp	x21, x8
   2cda4:	b.ge	2cc10 <rpl_re_set_registers@@Base+0x9ac0>  // b.tcont
   2cda8:	ldr	x9, [x23, #16]
   2cdac:	ldr	x1, [x9, x21, lsl #3]
   2cdb0:	ldr	x9, [x24, #56]
   2cdb4:	madd	x10, x1, x14, x9
   2cdb8:	ldr	x10, [x10, #8]
   2cdbc:	subs	x10, x10, #0x1
   2cdc0:	b.lt	2ce00 <rpl_re_set_registers@@Base+0x9cb0>  // b.tstop
   2cdc4:	madd	x9, x1, x14, x9
   2cdc8:	ldr	x9, [x9, #16]
   2cdcc:	mov	x11, xzr
   2cdd0:	b.eq	2cdf4 <rpl_re_set_registers@@Base+0x9ca4>  // b.none
   2cdd4:	add	x12, x11, x10
   2cdd8:	lsr	x12, x12, #1
   2cddc:	ldr	x13, [x9, x12, lsl #3]
   2cde0:	cmp	x13, x28
   2cde4:	csinc	x11, x11, x12, ge  // ge = tcont
   2cde8:	csel	x10, x10, x12, lt  // lt = tstop
   2cdec:	cmp	x11, x10
   2cdf0:	b.cc	2cdd4 <rpl_re_set_registers@@Base+0x9c84>  // b.lo, b.ul, b.last
   2cdf4:	ldr	x9, [x9, x11, lsl #3]
   2cdf8:	cmp	x9, x28
   2cdfc:	b.eq	2cd9c <rpl_re_set_registers@@Base+0x9c4c>  // b.none
   2ce00:	ldr	x9, [x24, #48]
   2ce04:	madd	x10, x1, x14, x9
   2ce08:	ldr	x10, [x10, #8]
   2ce0c:	subs	x10, x10, #0x1
   2ce10:	b.lt	2cd7c <rpl_re_set_registers@@Base+0x9c2c>  // b.tstop
   2ce14:	madd	x9, x1, x14, x9
   2ce18:	ldr	x9, [x9, #16]
   2ce1c:	mov	x11, xzr
   2ce20:	b.eq	2ce44 <rpl_re_set_registers@@Base+0x9cf4>  // b.none
   2ce24:	add	x12, x11, x10
   2ce28:	lsr	x12, x12, #1
   2ce2c:	ldr	x13, [x9, x12, lsl #3]
   2ce30:	cmp	x13, x28
   2ce34:	csinc	x11, x11, x12, ge  // ge = tcont
   2ce38:	csel	x10, x10, x12, lt  // lt = tstop
   2ce3c:	cmp	x11, x10
   2ce40:	b.cc	2ce24 <rpl_re_set_registers@@Base+0x9cd4>  // b.lo, b.ul, b.last
   2ce44:	ldr	x9, [x9, x11, lsl #3]
   2ce48:	cmp	x9, x28
   2ce4c:	b.ne	2cd7c <rpl_re_set_registers@@Base+0x9c2c>  // b.any
   2ce50:	b	2cd9c <rpl_re_set_registers@@Base+0x9c4c>
   2ce54:	ldr	x8, [x20]
   2ce58:	str	xzr, [x8, x19, lsl #3]
   2ce5c:	b	2ce8c <rpl_re_set_registers@@Base+0x9d3c>
   2ce60:	ldp	x21, x25, [sp, #104]
   2ce64:	mov	x28, x22
   2ce68:	stur	wzr, [x29, #-100]
   2ce6c:	sub	x0, x29, #0x64
   2ce70:	mov	x1, x24
   2ce74:	mov	x2, x23
   2ce78:	bl	2bfa0 <rpl_re_set_registers@@Base+0x8e50>
   2ce7c:	ldr	x8, [x20]
   2ce80:	str	x0, [x8, x19, lsl #3]
   2ce84:	ldur	w27, [x29, #-100]
   2ce88:	cbnz	w27, 2d3c4 <rpl_re_set_registers@@Base+0xa274>
   2ce8c:	cbz	x21, 2d3c0 <rpl_re_set_registers@@Base+0xa270>
   2ce90:	ldr	x8, [x25, #184]
   2ce94:	ldr	x8, [x8, x19, lsl #3]
   2ce98:	ldrb	w8, [x8, #104]
   2ce9c:	tbz	w8, #6, 2d3c0 <rpl_re_set_registers@@Base+0xa270>
   2cea0:	ldr	x8, [x25, #200]
   2cea4:	ldr	x14, [x25, #152]
   2cea8:	cmp	x8, #0x1
   2ceac:	b.lt	2cef8 <rpl_re_set_registers@@Base+0x9da8>  // b.tstop
   2ceb0:	ldr	x9, [x25, #216]
   2ceb4:	mov	x21, xzr
   2ceb8:	mov	w10, #0x28                  	// #40
   2cebc:	mov	x11, x8
   2cec0:	add	x12, x11, x21
   2cec4:	cmp	x12, #0x0
   2cec8:	cinc	x12, x12, lt  // lt = tstop
   2cecc:	asr	x12, x12, #1
   2ced0:	madd	x13, x12, x10, x9
   2ced4:	ldr	x13, [x13, #8]
   2ced8:	cmp	x13, x19
   2cedc:	csel	x11, x11, x12, lt  // lt = tstop
   2cee0:	csinc	x21, x21, x12, ge  // ge = tcont
   2cee4:	cmp	x21, x11
   2cee8:	b.lt	2cec0 <rpl_re_set_registers@@Base+0x9d70>  // b.tstop
   2ceec:	cmp	x21, x8
   2cef0:	b.lt	2cf04 <rpl_re_set_registers@@Base+0x9db4>  // b.tstop
   2cef4:	b	2d3bc <rpl_re_set_registers@@Base+0xa26c>
   2cef8:	mov	x21, xzr
   2cefc:	cmp	x21, x8
   2cf00:	b.ge	2d3bc <rpl_re_set_registers@@Base+0xa26c>  // b.tcont
   2cf04:	cmn	x21, #0x1
   2cf08:	b.eq	2d3bc <rpl_re_set_registers@@Base+0xa26c>  // b.none
   2cf0c:	ldr	x8, [x25, #216]
   2cf10:	mov	w9, #0x28                  	// #40
   2cf14:	madd	x8, x21, x9, x8
   2cf18:	ldr	x8, [x8, #8]
   2cf1c:	cmp	x8, x19
   2cf20:	b.ne	2d3bc <rpl_re_set_registers@@Base+0xa26c>  // b.any
   2cf24:	stur	xzr, [x29, #-96]
   2cf28:	ldr	x8, [x28, #8]
   2cf2c:	cmp	x8, #0x0
   2cf30:	b.le	2d3bc <rpl_re_set_registers@@Base+0xa26c>
   2cf34:	add	x1, x20, #0x20
   2cf38:	sub	x8, x29, #0x60
   2cf3c:	add	x9, x19, #0x1
   2cf40:	stp	x9, x1, [sp, #32]
   2cf44:	mov	w9, #0x1                   	// #1
   2cf48:	add	x8, x8, #0x20
   2cf4c:	mov	x24, xzr
   2cf50:	str	x8, [sp, #8]
   2cf54:	dup	v0.2d, x9
   2cf58:	stp	xzr, x25, [sp, #104]
   2cf5c:	str	q0, [sp, #16]
   2cf60:	stp	x14, x28, [sp, #88]
   2cf64:	b	2cf7c <rpl_re_set_registers@@Base+0x9e2c>
   2cf68:	ldr	x28, [sp, #96]
   2cf6c:	add	x24, x24, #0x1
   2cf70:	ldr	x8, [x28, #8]
   2cf74:	cmp	x24, x8
   2cf78:	b.ge	2d3f4 <rpl_re_set_registers@@Base+0xa2a4>  // b.tcont
   2cf7c:	ldr	x8, [x28, #16]
   2cf80:	ldr	x9, [x20, #16]
   2cf84:	ldr	x26, [x8, x24, lsl #3]
   2cf88:	ldr	x8, [x14]
   2cf8c:	cmp	x26, x9
   2cf90:	add	x8, x8, x26, lsl #4
   2cf94:	ldrb	w8, [x8, #8]
   2cf98:	b.ne	2cfb4 <rpl_re_set_registers@@Base+0x9e64>  // b.any
   2cf9c:	cmp	w8, #0x4
   2cfa0:	b.ne	2cf68 <rpl_re_set_registers@@Base+0x9e18>  // b.any
   2cfa4:	ldr	x8, [x20, #24]
   2cfa8:	cmp	x8, x19
   2cfac:	b.ne	2cfbc <rpl_re_set_registers@@Base+0x9e6c>  // b.any
   2cfb0:	b	2cf68 <rpl_re_set_registers@@Base+0x9e18>
   2cfb4:	cmp	w8, #0x4
   2cfb8:	b.ne	2cf68 <rpl_re_set_registers@@Base+0x9e18>  // b.any
   2cfbc:	ldr	x8, [x25, #216]
   2cfc0:	mov	w9, #0x28                  	// #40
   2cfc4:	mov	x28, x21
   2cfc8:	madd	x22, x21, x9, x8
   2cfcc:	b	2cfe8 <rpl_re_set_registers@@Base+0x9e98>
   2cfd0:	ldr	x14, [sp, #88]
   2cfd4:	mov	x1, x23
   2cfd8:	ldrb	w8, [x22, #32]
   2cfdc:	add	x22, x22, #0x28
   2cfe0:	add	x28, x28, #0x1
   2cfe4:	cbz	w8, 2cf68 <rpl_re_set_registers@@Base+0x9e18>
   2cfe8:	ldr	x8, [x22]
   2cfec:	cmp	x8, x26
   2cff0:	b.ne	2cfd8 <rpl_re_set_registers@@Base+0x9e88>  // b.any
   2cff4:	ldp	x9, x8, [x22, #16]
   2cff8:	subs	x8, x8, x9
   2cffc:	add	x5, x8, x19
   2d000:	b.eq	2d010 <rpl_re_set_registers@@Base+0x9ec0>  // b.none
   2d004:	ldr	x8, [x14, #24]
   2d008:	add	x8, x8, x26, lsl #3
   2d00c:	b	2d020 <rpl_re_set_registers@@Base+0x9ed0>
   2d010:	ldr	x8, [x14, #40]
   2d014:	mov	w9, #0x18                  	// #24
   2d018:	madd	x8, x26, x9, x8
   2d01c:	ldr	x8, [x8, #16]
   2d020:	ldr	x9, [x20, #24]
   2d024:	cmp	x5, x9
   2d028:	b.gt	2cfd8 <rpl_re_set_registers@@Base+0x9e88>
   2d02c:	ldr	x9, [x20]
   2d030:	ldr	x10, [x9, x5, lsl #3]
   2d034:	cbz	x10, 2cfd8 <rpl_re_set_registers@@Base+0x9e88>
   2d038:	ldr	x9, [x10, #16]
   2d03c:	subs	x9, x9, #0x1
   2d040:	b.lt	2cfd8 <rpl_re_set_registers@@Base+0x9e88>  // b.tstop
   2d044:	ldr	x4, [x8]
   2d048:	ldr	x8, [x10, #24]
   2d04c:	mov	x10, xzr
   2d050:	b.eq	2d074 <rpl_re_set_registers@@Base+0x9f24>  // b.none
   2d054:	add	x11, x10, x9
   2d058:	lsr	x11, x11, #1
   2d05c:	ldr	x12, [x8, x11, lsl #3]
   2d060:	cmp	x12, x4
   2d064:	csinc	x10, x10, x11, ge  // ge = tcont
   2d068:	csel	x9, x9, x11, lt  // lt = tstop
   2d06c:	cmp	x10, x9
   2d070:	b.cc	2d054 <rpl_re_set_registers@@Base+0x9f04>  // b.lo, b.ul, b.last
   2d074:	ldr	x8, [x8, x10, lsl #3]
   2d078:	cmp	x8, x4
   2d07c:	b.ne	2cfd8 <rpl_re_set_registers@@Base+0x9e88>  // b.any
   2d080:	mov	x0, x25
   2d084:	mov	x2, x26
   2d088:	mov	x3, x19
   2d08c:	mov	x23, x1
   2d090:	bl	2d92c <rpl_re_set_registers@@Base+0xa7dc>
   2d094:	tbnz	w0, #0, 2cfd0 <rpl_re_set_registers@@Base+0x9e80>
   2d098:	ldr	x8, [sp, #104]
   2d09c:	cbz	x8, 2d0c8 <rpl_re_set_registers@@Base+0x9f78>
   2d0a0:	ldr	x8, [sp, #56]
   2d0a4:	stp	x26, x19, [x29, #-80]
   2d0a8:	cbz	x8, 2d198 <rpl_re_set_registers@@Base+0xa048>
   2d0ac:	cbnz	x27, 2d3a4 <rpl_re_set_registers@@Base+0xa254>
   2d0b0:	ldr	x22, [sp, #80]
   2d0b4:	mov	w8, #0x1                   	// #1
   2d0b8:	mov	w23, #0x1                   	// #1
   2d0bc:	str	x28, [x22]
   2d0c0:	stur	x8, [x29, #-56]
   2d0c4:	b	2d200 <rpl_re_set_registers@@Base+0xa0b0>
   2d0c8:	ldr	x8, [x20, #48]
   2d0cc:	ldp	q1, q0, [x20, #16]
   2d0d0:	ldr	q2, [x20]
   2d0d4:	stur	x8, [x29, #-48]
   2d0d8:	stp	q1, q0, [x29, #-80]
   2d0dc:	stur	q2, [x29, #-96]
   2d0e0:	ldr	x8, [x20, #40]
   2d0e4:	cmp	x8, #0x1
   2d0e8:	stur	x8, [x29, #-56]
   2d0ec:	b.lt	2d188 <rpl_re_set_registers@@Base+0xa038>  // b.tstop
   2d0f0:	lsl	x27, x8, #3
   2d0f4:	mov	x0, x27
   2d0f8:	stur	x8, [x29, #-64]
   2d0fc:	str	x8, [sp, #104]
   2d100:	bl	a540 <malloc@plt>
   2d104:	stur	x0, [x29, #-48]
   2d108:	cbz	x0, 2d434 <rpl_re_set_registers@@Base+0xa2e4>
   2d10c:	ldr	x1, [x20, #48]
   2d110:	mov	x2, x27
   2d114:	mov	x22, x0
   2d118:	bl	a210 <memcpy@plt>
   2d11c:	ldr	x12, [sp, #104]
   2d120:	stp	x26, x19, [x29, #-80]
   2d124:	lsl	x8, x12, #1
   2d128:	lsl	x1, x12, #4
   2d12c:	mov	x0, x22
   2d130:	str	x8, [sp, #56]
   2d134:	stur	x8, [x29, #-64]
   2d138:	mov	x27, x12
   2d13c:	bl	a720 <realloc@plt>
   2d140:	cbz	x0, 2d444 <rpl_re_set_registers@@Base+0xa2f4>
   2d144:	mov	x22, x0
   2d148:	mov	x12, x27
   2d14c:	stur	x0, [x29, #-48]
   2d150:	ldr	x8, [x22]
   2d154:	cmp	x8, x28
   2d158:	b.le	2d1c8 <rpl_re_set_registers@@Base+0xa078>
   2d15c:	cmp	x12, #0x1
   2d160:	mov	x8, x12
   2d164:	b.lt	2d1f4 <rpl_re_set_registers@@Base+0xa0a4>  // b.tstop
   2d168:	mov	x9, x12
   2d16c:	add	x10, x22, x9, lsl #3
   2d170:	ldur	x11, [x10, #-8]
   2d174:	subs	x8, x9, #0x1
   2d178:	mov	x9, x8
   2d17c:	str	x11, [x10]
   2d180:	b.gt	2d16c <rpl_re_set_registers@@Base+0xa01c>
   2d184:	b	2d1f4 <rpl_re_set_registers@@Base+0xa0a4>
   2d188:	ldr	x8, [sp, #8]
   2d18c:	stp	xzr, xzr, [x8]
   2d190:	str	xzr, [x8, #16]
   2d194:	stp	x26, x19, [x29, #-80]
   2d198:	ldr	q0, [sp, #16]
   2d19c:	mov	w0, #0x8                   	// #8
   2d1a0:	stur	q0, [x29, #-64]
   2d1a4:	bl	a540 <malloc@plt>
   2d1a8:	stur	x0, [x29, #-48]
   2d1ac:	cbz	x0, 2d434 <rpl_re_set_registers@@Base+0xa2e4>
   2d1b0:	mov	w8, #0x1                   	// #1
   2d1b4:	mov	x22, x0
   2d1b8:	str	x28, [x0]
   2d1bc:	mov	w23, #0x1                   	// #1
   2d1c0:	str	x8, [sp, #56]
   2d1c4:	b	2d200 <rpl_re_set_registers@@Base+0xa0b0>
   2d1c8:	add	x8, x22, x12, lsl #3
   2d1cc:	ldur	x9, [x8, #-8]
   2d1d0:	mov	x8, x12
   2d1d4:	cmp	x9, x28
   2d1d8:	b.le	2d1f4 <rpl_re_set_registers@@Base+0xa0a4>
   2d1dc:	add	x10, x22, x8, lsl #3
   2d1e0:	str	x9, [x10]
   2d1e4:	ldur	x9, [x10, #-16]
   2d1e8:	sub	x8, x8, #0x1
   2d1ec:	cmp	x9, x28
   2d1f0:	b.gt	2d1dc <rpl_re_set_registers@@Base+0xa08c>
   2d1f4:	add	x23, x12, #0x1
   2d1f8:	str	x28, [x22, x8, lsl #3]
   2d1fc:	stur	x23, [x29, #-56]
   2d200:	ldur	x8, [x29, #-96]
   2d204:	sub	x1, x29, #0x60
   2d208:	mov	x0, x25
   2d20c:	str	x8, [sp, #104]
   2d210:	ldr	x8, [x8, x19, lsl #3]
   2d214:	stp	x24, x8, [sp, #64]
   2d218:	bl	2c72c <rpl_re_set_registers@@Base+0x95dc>
   2d21c:	cbnz	w0, 2d424 <rpl_re_set_registers@@Base+0xa2d4>
   2d220:	ldr	x24, [x20, #8]
   2d224:	ldr	x14, [sp, #88]
   2d228:	str	x22, [sp, #80]
   2d22c:	cbz	x24, 2d2bc <rpl_re_set_registers@@Base+0xa16c>
   2d230:	mov	x22, x14
   2d234:	str	x23, [sp, #48]
   2d238:	tbnz	x19, #63, 2d2ac <rpl_re_set_registers@@Base+0xa15c>
   2d23c:	ldr	x23, [sp, #104]
   2d240:	ldr	x25, [sp, #32]
   2d244:	b	2d25c <rpl_re_set_registers@@Base+0xa10c>
   2d248:	str	x8, [x24]
   2d24c:	subs	x25, x25, #0x1
   2d250:	add	x23, x23, #0x8
   2d254:	add	x24, x24, #0x8
   2d258:	b.eq	2d2ac <rpl_re_set_registers@@Base+0xa15c>  // b.none
   2d25c:	ldr	x9, [x24]
   2d260:	ldr	x8, [x23]
   2d264:	cbz	x9, 2d248 <rpl_re_set_registers@@Base+0xa0f8>
   2d268:	cbz	x8, 2d24c <rpl_re_set_registers@@Base+0xa0fc>
   2d26c:	add	x1, x9, #0x8
   2d270:	add	x2, x8, #0x8
   2d274:	sub	x0, x29, #0x28
   2d278:	bl	2ac30 <rpl_re_set_registers@@Base+0x7ae0>
   2d27c:	stur	w0, [x29, #-12]
   2d280:	cbnz	w0, 2d424 <rpl_re_set_registers@@Base+0xa2d4>
   2d284:	sub	x0, x29, #0xc
   2d288:	sub	x2, x29, #0x28
   2d28c:	mov	x1, x22
   2d290:	bl	2bfa0 <rpl_re_set_registers@@Base+0x8e50>
   2d294:	str	x0, [x24]
   2d298:	ldur	x0, [x29, #-24]
   2d29c:	bl	a960 <free@plt>
   2d2a0:	ldur	w27, [x29, #-12]
   2d2a4:	cbz	w27, 2d24c <rpl_re_set_registers@@Base+0xa0fc>
   2d2a8:	b	2d3f8 <rpl_re_set_registers@@Base+0xa2a8>
   2d2ac:	ldr	x25, [sp, #112]
   2d2b0:	mov	x14, x22
   2d2b4:	ldr	x22, [sp, #80]
   2d2b8:	ldr	x23, [sp, #48]
   2d2bc:	ldr	x8, [sp, #104]
   2d2c0:	ldr	x9, [sp, #72]
   2d2c4:	subs	x27, x23, #0x1
   2d2c8:	str	x9, [x8, x19, lsl #3]
   2d2cc:	b.lt	2d388 <rpl_re_set_registers@@Base+0xa238>  // b.tstop
   2d2d0:	ldr	x24, [sp, #64]
   2d2d4:	ldr	x1, [sp, #40]
   2d2d8:	mov	x8, xzr
   2d2dc:	b.eq	2d304 <rpl_re_set_registers@@Base+0xa1b4>  // b.none
   2d2e0:	mov	x9, x27
   2d2e4:	add	x10, x8, x9
   2d2e8:	lsr	x10, x10, #1
   2d2ec:	ldr	x11, [x22, x10, lsl #3]
   2d2f0:	cmp	x11, x28
   2d2f4:	csinc	x8, x8, x10, ge  // ge = tcont
   2d2f8:	csel	x9, x9, x10, lt  // lt = tstop
   2d2fc:	cmp	x8, x9
   2d300:	b.cc	2d2e4 <rpl_re_set_registers@@Base+0xa194>  // b.lo, b.ul, b.last
   2d304:	ldr	x9, [x22, x8, lsl #3]
   2d308:	cmp	x9, x28
   2d30c:	csinv	x9, x8, xzr, eq  // eq = none
   2d310:	tbnz	x9, #63, 2d390 <rpl_re_set_registers@@Base+0xa240>
   2d314:	cmp	x23, x9
   2d318:	b.le	2d390 <rpl_re_set_registers@@Base+0xa240>
   2d31c:	cmp	x27, x9
   2d320:	stur	x27, [x29, #-56]
   2d324:	b.le	2d394 <rpl_re_set_registers@@Base+0xa244>
   2d328:	mvn	x9, x8
   2d32c:	add	x9, x23, x9
   2d330:	cmp	x9, #0x4
   2d334:	b.cc	2d36c <rpl_re_set_registers@@Base+0xa21c>  // b.lo, b.ul, b.last
   2d338:	and	x10, x9, #0xfffffffffffffffc
   2d33c:	add	x11, x22, x8, lsl #3
   2d340:	add	x8, x8, x10
   2d344:	add	x11, x11, #0x10
   2d348:	mov	x12, x10
   2d34c:	ldur	q0, [x11, #-8]
   2d350:	ldur	q1, [x11, #8]
   2d354:	subs	x12, x12, #0x4
   2d358:	stp	q0, q1, [x11, #-16]
   2d35c:	add	x11, x11, #0x20
   2d360:	b.ne	2d34c <rpl_re_set_registers@@Base+0xa1fc>  // b.any
   2d364:	cmp	x9, x10
   2d368:	b.eq	2d394 <rpl_re_set_registers@@Base+0xa244>  // b.none
   2d36c:	add	x9, x22, x8, lsl #3
   2d370:	ldr	x10, [x9, #8]
   2d374:	add	x8, x8, #0x1
   2d378:	cmp	x27, x8
   2d37c:	str	x10, [x9]
   2d380:	b.ne	2d36c <rpl_re_set_registers@@Base+0xa21c>  // b.any
   2d384:	b	2d394 <rpl_re_set_registers@@Base+0xa244>
   2d388:	ldr	x24, [sp, #64]
   2d38c:	ldr	x1, [sp, #40]
   2d390:	mov	x27, x23
   2d394:	ldr	x8, [x25, #216]
   2d398:	mov	w9, #0x28                  	// #40
   2d39c:	madd	x22, x28, x9, x8
   2d3a0:	b	2cfd8 <rpl_re_set_registers@@Base+0x9e88>
   2d3a4:	ldr	x8, [sp, #56]
   2d3a8:	ldr	x22, [sp, #80]
   2d3ac:	mov	x12, x27
   2d3b0:	cmp	x8, x27
   2d3b4:	b.eq	2d124 <rpl_re_set_registers@@Base+0x9fd4>  // b.none
   2d3b8:	b	2d150 <rpl_re_set_registers@@Base+0xa000>
   2d3bc:	stur	wzr, [x29, #-100]
   2d3c0:	mov	w27, wzr
   2d3c4:	mov	w0, w27
   2d3c8:	ldp	x20, x19, [sp, #304]
   2d3cc:	ldp	x22, x21, [sp, #288]
   2d3d0:	ldp	x24, x23, [sp, #272]
   2d3d4:	ldp	x26, x25, [sp, #256]
   2d3d8:	ldp	x28, x27, [sp, #240]
   2d3dc:	ldp	x29, x30, [sp, #224]
   2d3e0:	add	sp, sp, #0x140
   2d3e4:	ret
   2d3e8:	mov	w27, w0
   2d3ec:	stur	w0, [x29, #-100]
   2d3f0:	b	2d3c4 <rpl_re_set_registers@@Base+0xa274>
   2d3f4:	mov	w27, wzr
   2d3f8:	ldur	x8, [x29, #-96]
   2d3fc:	cbz	x8, 2d408 <rpl_re_set_registers@@Base+0xa2b8>
   2d400:	ldur	x0, [x29, #-48]
   2d404:	bl	a960 <free@plt>
   2d408:	stur	w27, [x29, #-100]
   2d40c:	cbz	w27, 2d3c0 <rpl_re_set_registers@@Base+0xa270>
   2d410:	b	2d3c4 <rpl_re_set_registers@@Base+0xa274>
   2d414:	mov	w27, #0xc                   	// #12
   2d418:	stur	w0, [x29, #-96]
   2d41c:	stur	w27, [x29, #-100]
   2d420:	b	2d3c4 <rpl_re_set_registers@@Base+0xa274>
   2d424:	mov	w27, w0
   2d428:	b	2d3f8 <rpl_re_set_registers@@Base+0xa2a8>
   2d42c:	mov	w27, w0
   2d430:	b	2d3c4 <rpl_re_set_registers@@Base+0xa274>
   2d434:	ldr	x8, [sp, #8]
   2d438:	mov	w27, #0xc                   	// #12
   2d43c:	stp	xzr, xzr, [x8]
   2d440:	b	2d3f8 <rpl_re_set_registers@@Base+0xa2a8>
   2d444:	mov	w27, #0xc                   	// #12
   2d448:	b	2d3f8 <rpl_re_set_registers@@Base+0xa2a8>
   2d44c:	stp	x29, x30, [sp, #-48]!
   2d450:	stp	x22, x21, [sp, #16]
   2d454:	stp	x20, x19, [sp, #32]
   2d458:	ldr	x9, [x1, #8]
   2d45c:	mov	x29, sp
   2d460:	cbz	x9, 2d5f8 <rpl_re_set_registers@@Base+0xa4a8>
   2d464:	ldr	x10, [x2, #8]
   2d468:	mov	x20, x2
   2d46c:	cbz	x10, 2d5f8 <rpl_re_set_registers@@Base+0xa4a8>
   2d470:	ldp	x8, x13, [x0]
   2d474:	add	x11, x10, x9
   2d478:	mov	x21, x1
   2d47c:	mov	x19, x0
   2d480:	add	x12, x13, x11
   2d484:	cmp	x12, x8
   2d488:	b.le	2d4b4 <rpl_re_set_registers@@Base+0xa364>
   2d48c:	ldr	x0, [x19, #16]
   2d490:	add	x22, x8, x11
   2d494:	lsl	x1, x22, #3
   2d498:	bl	a720 <realloc@plt>
   2d49c:	cbz	x0, 2d60c <rpl_re_set_registers@@Base+0xa4bc>
   2d4a0:	str	x0, [x19, #16]
   2d4a4:	str	x22, [x19]
   2d4a8:	ldr	x13, [x19, #8]
   2d4ac:	ldr	x9, [x21, #8]
   2d4b0:	ldr	x10, [x20, #8]
   2d4b4:	ldr	x11, [x21, #16]
   2d4b8:	ldr	x12, [x20, #16]
   2d4bc:	add	x8, x9, x13
   2d4c0:	add	x8, x8, x10
   2d4c4:	sub	x13, x13, #0x1
   2d4c8:	sub	x9, x9, #0x1
   2d4cc:	mov	x14, x10
   2d4d0:	sub	x10, x14, #0x1
   2d4d4:	ldr	x16, [x12, x10, lsl #3]
   2d4d8:	ldr	x15, [x11, x9, lsl #3]
   2d4dc:	cmp	x15, x16
   2d4e0:	b.eq	2d508 <rpl_re_set_registers@@Base+0xa3b8>  // b.none
   2d4e4:	b.lt	2d4f8 <rpl_re_set_registers@@Base+0xa3a8>  // b.tstop
   2d4e8:	cmp	x9, #0x0
   2d4ec:	sub	x9, x9, #0x1
   2d4f0:	b.gt	2d4d8 <rpl_re_set_registers@@Base+0xa388>
   2d4f4:	b	2d560 <rpl_re_set_registers@@Base+0xa410>
   2d4f8:	cmp	x14, #0x2
   2d4fc:	mov	x14, x10
   2d500:	b.ge	2d4d0 <rpl_re_set_registers@@Base+0xa380>  // b.tcont
   2d504:	b	2d560 <rpl_re_set_registers@@Base+0xa410>
   2d508:	tbnz	x13, #63, 2d530 <rpl_re_set_registers@@Base+0xa3e0>
   2d50c:	ldr	x17, [x19, #16]
   2d510:	ldr	x16, [x17, x13, lsl #3]
   2d514:	cmp	x16, x15
   2d518:	b.le	2d538 <rpl_re_set_registers@@Base+0xa3e8>
   2d51c:	sub	x16, x13, #0x1
   2d520:	cmp	x13, #0x0
   2d524:	mov	x13, x16
   2d528:	b.gt	2d510 <rpl_re_set_registers@@Base+0xa3c0>
   2d52c:	b	2d540 <rpl_re_set_registers@@Base+0xa3f0>
   2d530:	mov	x16, x13
   2d534:	b	2d540 <rpl_re_set_registers@@Base+0xa3f0>
   2d538:	mov	x16, x13
   2d53c:	b.eq	2d550 <rpl_re_set_registers@@Base+0xa400>  // b.none
   2d540:	ldr	x13, [x19, #16]
   2d544:	sub	x8, x8, #0x1
   2d548:	str	x15, [x13, x8, lsl #3]
   2d54c:	mov	x13, x16
   2d550:	cmp	x9, #0x1
   2d554:	b.lt	2d560 <rpl_re_set_registers@@Base+0xa410>  // b.tstop
   2d558:	cmp	x14, #0x2
   2d55c:	b.ge	2d4c8 <rpl_re_set_registers@@Base+0xa378>  // b.tcont
   2d560:	ldp	x12, x0, [x19, #8]
   2d564:	ldr	x13, [x21, #8]
   2d568:	ldr	x14, [x20, #8]
   2d56c:	subs	x9, x12, #0x1
   2d570:	add	x9, x9, x13
   2d574:	add	x10, x9, x14
   2d578:	sub	x15, x10, x8
   2d57c:	add	x9, x15, #0x1
   2d580:	subs	x11, x12, #0x1
   2d584:	add	x16, x9, x12
   2d588:	str	x16, [x19, #8]
   2d58c:	b.lt	2d5e8 <rpl_re_set_registers@@Base+0xa498>  // b.tstop
   2d590:	tbnz	x15, #63, 2d5e8 <rpl_re_set_registers@@Base+0xa498>
   2d594:	add	x12, x12, x14
   2d598:	add	x12, x12, x13
   2d59c:	sub	x12, x12, x8
   2d5a0:	add	x12, x0, x12, lsl #3
   2d5a4:	ldr	x14, [x0, x10, lsl #3]
   2d5a8:	ldr	x13, [x0, x11, lsl #3]
   2d5ac:	cmp	x14, x13
   2d5b0:	b.gt	2d5cc <rpl_re_set_registers@@Base+0xa47c>
   2d5b4:	sub	x14, x11, #0x1
   2d5b8:	cmp	x11, #0x0
   2d5bc:	str	x13, [x12, x11, lsl #3]
   2d5c0:	mov	x11, x14
   2d5c4:	b.gt	2d5a4 <rpl_re_set_registers@@Base+0xa454>
   2d5c8:	b	2d5e8 <rpl_re_set_registers@@Base+0xa498>
   2d5cc:	mov	x13, xzr
   2d5d0:	sub	x10, x10, #0x1
   2d5d4:	sub	x9, x9, #0x1
   2d5d8:	str	x14, [x12, x11, lsl #3]
   2d5dc:	sub	x12, x12, #0x8
   2d5e0:	cbnz	x9, 2d5a4 <rpl_re_set_registers@@Base+0xa454>
   2d5e4:	b	2d5ec <rpl_re_set_registers@@Base+0xa49c>
   2d5e8:	mov	x13, x9
   2d5ec:	add	x1, x0, x8, lsl #3
   2d5f0:	lsl	x2, x13, #3
   2d5f4:	bl	a210 <memcpy@plt>
   2d5f8:	mov	w0, wzr
   2d5fc:	ldp	x20, x19, [sp, #32]
   2d600:	ldp	x22, x21, [sp, #16]
   2d604:	ldp	x29, x30, [sp], #48
   2d608:	ret
   2d60c:	mov	w0, #0xc                   	// #12
   2d610:	b	2d5fc <rpl_re_set_registers@@Base+0xa4ac>
   2d614:	sub	sp, sp, #0x80
   2d618:	stp	x29, x30, [sp, #32]
   2d61c:	stp	x28, x27, [sp, #48]
   2d620:	stp	x26, x25, [sp, #64]
   2d624:	stp	x24, x23, [sp, #80]
   2d628:	stp	x22, x21, [sp, #96]
   2d62c:	stp	x20, x19, [sp, #112]
   2d630:	ldr	x25, [x0, #56]
   2d634:	mov	w8, #0x18                  	// #24
   2d638:	stp	xzr, xzr, [sp, #8]
   2d63c:	str	xzr, [sp, #24]
   2d640:	madd	x24, x1, x8, x25
   2d644:	ldr	x8, [x24, #8]!
   2d648:	add	x29, sp, #0x20
   2d64c:	cmp	x8, #0x1
   2d650:	b.lt	2d8f0 <rpl_re_set_registers@@Base+0xa7a0>  // b.tstop
   2d654:	mov	w27, #0x18                  	// #24
   2d658:	madd	x9, x1, x27, x25
   2d65c:	mov	x21, x3
   2d660:	mov	x20, x1
   2d664:	mov	x22, x0
   2d668:	mov	x19, x2
   2d66c:	mov	x26, xzr
   2d670:	add	x28, x9, #0x10
   2d674:	b	2d684 <rpl_re_set_registers@@Base+0xa534>
   2d678:	add	x26, x26, #0x1
   2d67c:	cmp	x26, x8
   2d680:	b.ge	2d7f8 <rpl_re_set_registers@@Base+0xa6a8>  // b.tcont
   2d684:	ldr	x11, [x28]
   2d688:	ldr	x9, [x11, x26, lsl #3]
   2d68c:	cmp	x9, x20
   2d690:	b.eq	2d678 <rpl_re_set_registers@@Base+0xa528>  // b.none
   2d694:	ldr	x10, [x22]
   2d698:	add	x10, x10, x9, lsl #4
   2d69c:	ldrb	w10, [x10, #8]
   2d6a0:	tbz	w10, #3, 2d678 <rpl_re_set_registers@@Base+0xa528>
   2d6a4:	ldr	x10, [x22, #40]
   2d6a8:	madd	x12, x9, x27, x10
   2d6ac:	ldp	x13, x10, [x12, #8]
   2d6b0:	ldr	x12, [x10]
   2d6b4:	cmp	x13, #0x1
   2d6b8:	b.le	2d6cc <rpl_re_set_registers@@Base+0xa57c>
   2d6bc:	ldr	x10, [x10, #8]
   2d6c0:	subs	x13, x8, #0x1
   2d6c4:	b.ge	2d6d8 <rpl_re_set_registers@@Base+0xa588>  // b.tcont
   2d6c8:	b	2d70c <rpl_re_set_registers@@Base+0xa5bc>
   2d6cc:	mov	x10, #0xffffffffffffffff    	// #-1
   2d6d0:	subs	x13, x8, #0x1
   2d6d4:	b.lt	2d70c <rpl_re_set_registers@@Base+0xa5bc>  // b.tstop
   2d6d8:	mov	x14, xzr
   2d6dc:	b.eq	2d700 <rpl_re_set_registers@@Base+0xa5b0>  // b.none
   2d6e0:	add	x15, x14, x13
   2d6e4:	lsr	x15, x15, #1
   2d6e8:	ldr	x16, [x11, x15, lsl #3]
   2d6ec:	cmp	x16, x12
   2d6f0:	csinc	x14, x14, x15, ge  // ge = tcont
   2d6f4:	csel	x13, x13, x15, lt  // lt = tstop
   2d6f8:	cmp	x14, x13
   2d6fc:	b.cc	2d6e0 <rpl_re_set_registers@@Base+0xa590>  // b.lo, b.ul, b.last
   2d700:	ldr	x13, [x11, x14, lsl #3]
   2d704:	cmp	x13, x12
   2d708:	b.eq	2d750 <rpl_re_set_registers@@Base+0xa600>  // b.none
   2d70c:	ldr	x13, [x19, #8]
   2d710:	subs	x14, x13, #0x1
   2d714:	b.lt	2d750 <rpl_re_set_registers@@Base+0xa600>  // b.tstop
   2d718:	ldr	x13, [x19, #16]
   2d71c:	mov	x15, xzr
   2d720:	b.eq	2d744 <rpl_re_set_registers@@Base+0xa5f4>  // b.none
   2d724:	add	x16, x15, x14
   2d728:	lsr	x16, x16, #1
   2d72c:	ldr	x17, [x13, x16, lsl #3]
   2d730:	cmp	x17, x12
   2d734:	csinc	x15, x15, x16, ge  // ge = tcont
   2d738:	csel	x14, x14, x16, lt  // lt = tstop
   2d73c:	cmp	x15, x14
   2d740:	b.cc	2d724 <rpl_re_set_registers@@Base+0xa5d4>  // b.lo, b.ul, b.last
   2d744:	ldr	x13, [x13, x15, lsl #3]
   2d748:	cmp	x13, x12
   2d74c:	b.eq	2d7d8 <rpl_re_set_registers@@Base+0xa688>  // b.none
   2d750:	cmp	x10, #0x1
   2d754:	b.lt	2d678 <rpl_re_set_registers@@Base+0xa528>  // b.tstop
   2d758:	subs	x12, x8, #0x1
   2d75c:	b.lt	2d794 <rpl_re_set_registers@@Base+0xa644>  // b.tstop
   2d760:	mov	x13, xzr
   2d764:	b.eq	2d788 <rpl_re_set_registers@@Base+0xa638>  // b.none
   2d768:	add	x14, x13, x12
   2d76c:	lsr	x14, x14, #1
   2d770:	ldr	x15, [x11, x14, lsl #3]
   2d774:	cmp	x15, x10
   2d778:	csinc	x13, x13, x14, ge  // ge = tcont
   2d77c:	csel	x12, x12, x14, lt  // lt = tstop
   2d780:	cmp	x13, x12
   2d784:	b.cc	2d768 <rpl_re_set_registers@@Base+0xa618>  // b.lo, b.ul, b.last
   2d788:	ldr	x11, [x11, x13, lsl #3]
   2d78c:	cmp	x11, x10
   2d790:	b.eq	2d678 <rpl_re_set_registers@@Base+0xa528>  // b.none
   2d794:	ldr	x11, [x19, #8]
   2d798:	subs	x12, x11, #0x1
   2d79c:	b.lt	2d678 <rpl_re_set_registers@@Base+0xa528>  // b.tstop
   2d7a0:	ldr	x11, [x19, #16]
   2d7a4:	mov	x13, xzr
   2d7a8:	b.eq	2d7cc <rpl_re_set_registers@@Base+0xa67c>  // b.none
   2d7ac:	add	x14, x13, x12
   2d7b0:	lsr	x14, x14, #1
   2d7b4:	ldr	x15, [x11, x14, lsl #3]
   2d7b8:	cmp	x15, x10
   2d7bc:	csinc	x13, x13, x14, ge  // ge = tcont
   2d7c0:	csel	x12, x12, x14, lt  // lt = tstop
   2d7c4:	cmp	x13, x12
   2d7c8:	b.cc	2d7ac <rpl_re_set_registers@@Base+0xa65c>  // b.lo, b.ul, b.last
   2d7cc:	ldr	x11, [x11, x13, lsl #3]
   2d7d0:	cmp	x11, x10
   2d7d4:	b.ne	2d678 <rpl_re_set_registers@@Base+0xa528>  // b.any
   2d7d8:	ldr	x8, [x22, #56]
   2d7dc:	add	x0, sp, #0x8
   2d7e0:	mov	x1, x21
   2d7e4:	madd	x2, x9, x27, x8
   2d7e8:	bl	2d44c <rpl_re_set_registers@@Base+0xa2fc>
   2d7ec:	cbnz	w0, 2d920 <rpl_re_set_registers@@Base+0xa7d0>
   2d7f0:	ldr	x8, [x24]
   2d7f4:	b	2d678 <rpl_re_set_registers@@Base+0xa528>
   2d7f8:	cmp	x8, #0x0
   2d7fc:	b.le	2d8f0 <rpl_re_set_registers@@Base+0xa7a0>
   2d800:	mov	w9, #0x18                  	// #24
   2d804:	madd	x9, x20, x9, x25
   2d808:	ldp	x10, x0, [sp, #16]
   2d80c:	ldr	x9, [x9, #16]
   2d810:	mov	x8, xzr
   2d814:	sub	x11, x10, #0x1
   2d818:	b	2d82c <rpl_re_set_registers@@Base+0xa6dc>
   2d81c:	ldr	x12, [x24]
   2d820:	add	x8, x8, #0x1
   2d824:	cmp	x8, x12
   2d828:	b.ge	2d8f4 <rpl_re_set_registers@@Base+0xa7a4>  // b.tcont
   2d82c:	ldr	x12, [x9, x8, lsl #3]
   2d830:	cmp	x10, #0x1
   2d834:	b.lt	2d870 <rpl_re_set_registers@@Base+0xa720>  // b.tstop
   2d838:	mov	x13, xzr
   2d83c:	cbz	x11, 2d864 <rpl_re_set_registers@@Base+0xa714>
   2d840:	mov	x14, x11
   2d844:	add	x15, x13, x14
   2d848:	lsr	x15, x15, #1
   2d84c:	ldr	x16, [x0, x15, lsl #3]
   2d850:	cmp	x16, x12
   2d854:	csinc	x13, x13, x15, ge  // ge = tcont
   2d858:	csel	x14, x14, x15, lt  // lt = tstop
   2d85c:	cmp	x13, x14
   2d860:	b.cc	2d844 <rpl_re_set_registers@@Base+0xa6f4>  // b.lo, b.ul, b.last
   2d864:	ldr	x13, [x0, x13, lsl #3]
   2d868:	cmp	x13, x12
   2d86c:	b.eq	2d81c <rpl_re_set_registers@@Base+0xa6cc>  // b.none
   2d870:	ldr	x16, [x19, #8]
   2d874:	subs	x15, x16, #0x1
   2d878:	b.lt	2d81c <rpl_re_set_registers@@Base+0xa6cc>  // b.tstop
   2d87c:	ldr	x13, [x19, #16]
   2d880:	mov	x14, xzr
   2d884:	b.eq	2d8ac <rpl_re_set_registers@@Base+0xa75c>  // b.none
   2d888:	mov	x17, x15
   2d88c:	add	x18, x14, x17
   2d890:	lsr	x18, x18, #1
   2d894:	ldr	x1, [x13, x18, lsl #3]
   2d898:	cmp	x1, x12
   2d89c:	csinc	x14, x14, x18, ge  // ge = tcont
   2d8a0:	csel	x17, x17, x18, lt  // lt = tstop
   2d8a4:	cmp	x14, x17
   2d8a8:	b.cc	2d88c <rpl_re_set_registers@@Base+0xa73c>  // b.lo, b.ul, b.last
   2d8ac:	ldr	x17, [x13, x14, lsl #3]
   2d8b0:	cmp	x17, x12
   2d8b4:	csinv	x12, x14, xzr, eq  // eq = none
   2d8b8:	tbnz	x12, #63, 2d81c <rpl_re_set_registers@@Base+0xa6cc>
   2d8bc:	cmp	x16, x12
   2d8c0:	b.le	2d81c <rpl_re_set_registers@@Base+0xa6cc>
   2d8c4:	cmp	x15, x12
   2d8c8:	str	x15, [x19, #8]
   2d8cc:	b.le	2d81c <rpl_re_set_registers@@Base+0xa6cc>
   2d8d0:	add	x12, x13, x14, lsl #3
   2d8d4:	ldr	x15, [x12, #8]
   2d8d8:	add	x14, x14, #0x1
   2d8dc:	str	x15, [x12]
   2d8e0:	ldr	x12, [x19, #8]
   2d8e4:	cmp	x14, x12
   2d8e8:	b.lt	2d8d0 <rpl_re_set_registers@@Base+0xa780>  // b.tstop
   2d8ec:	b	2d81c <rpl_re_set_registers@@Base+0xa6cc>
   2d8f0:	ldr	x0, [sp, #24]
   2d8f4:	mov	w23, wzr
   2d8f8:	bl	a960 <free@plt>
   2d8fc:	mov	w0, w23
   2d900:	ldp	x20, x19, [sp, #112]
   2d904:	ldp	x22, x21, [sp, #96]
   2d908:	ldp	x24, x23, [sp, #80]
   2d90c:	ldp	x26, x25, [sp, #64]
   2d910:	ldp	x28, x27, [sp, #48]
   2d914:	ldp	x29, x30, [sp, #32]
   2d918:	add	sp, sp, #0x80
   2d91c:	ret
   2d920:	mov	w23, w0
   2d924:	ldr	x0, [sp, #24]
   2d928:	b	2d8f8 <rpl_re_set_registers@@Base+0xa7a8>
   2d92c:	sub	sp, sp, #0x80
   2d930:	stp	x29, x30, [sp, #32]
   2d934:	stp	x28, x27, [sp, #48]
   2d938:	stp	x26, x25, [sp, #64]
   2d93c:	stp	x24, x23, [sp, #80]
   2d940:	stp	x22, x21, [sp, #96]
   2d944:	stp	x20, x19, [sp, #112]
   2d948:	stp	x2, x4, [sp, #8]
   2d94c:	ldr	x8, [x0, #200]
   2d950:	ldr	x9, [x0, #152]
   2d954:	add	x29, sp, #0x20
   2d958:	mov	x19, x5
   2d95c:	mov	x21, x3
   2d960:	mov	x23, x0
   2d964:	cmp	x8, #0x1
   2d968:	mov	x24, x1
   2d96c:	mov	x25, xzr
   2d970:	stur	x9, [x29, #-8]
   2d974:	b.lt	2d9b0 <rpl_re_set_registers@@Base+0xa860>  // b.tstop
   2d978:	ldr	x9, [x23, #216]
   2d97c:	mov	w10, #0x28                  	// #40
   2d980:	mov	x11, x8
   2d984:	add	x12, x11, x25
   2d988:	cmp	x12, #0x0
   2d98c:	cinc	x12, x12, lt  // lt = tstop
   2d990:	asr	x12, x12, #1
   2d994:	madd	x13, x12, x10, x9
   2d998:	ldr	x13, [x13, #8]
   2d99c:	cmp	x13, x21
   2d9a0:	csel	x11, x11, x12, lt  // lt = tstop
   2d9a4:	csinc	x25, x25, x12, ge  // ge = tcont
   2d9a8:	cmp	x25, x11
   2d9ac:	b.lt	2d984 <rpl_re_set_registers@@Base+0xa834>  // b.tstop
   2d9b0:	cmp	x25, x8
   2d9b4:	b.ge	2d9d0 <rpl_re_set_registers@@Base+0xa880>  // b.tcont
   2d9b8:	ldr	x9, [x23, #216]
   2d9bc:	mov	w10, #0x28                  	// #40
   2d9c0:	madd	x9, x25, x10, x9
   2d9c4:	ldr	x9, [x9, #8]
   2d9c8:	cmp	x9, x21
   2d9cc:	b.eq	2d9d4 <rpl_re_set_registers@@Base+0xa884>  // b.none
   2d9d0:	mov	x25, #0xffffffffffffffff    	// #-1
   2d9d4:	cmp	x8, #0x1
   2d9d8:	b.lt	2da24 <rpl_re_set_registers@@Base+0xa8d4>  // b.tstop
   2d9dc:	ldr	x9, [x23, #216]
   2d9e0:	mov	x26, xzr
   2d9e4:	mov	w10, #0x28                  	// #40
   2d9e8:	mov	x11, x8
   2d9ec:	add	x12, x11, x26
   2d9f0:	cmp	x12, #0x0
   2d9f4:	cinc	x12, x12, lt  // lt = tstop
   2d9f8:	asr	x12, x12, #1
   2d9fc:	madd	x13, x12, x10, x9
   2da00:	ldr	x13, [x13, #8]
   2da04:	cmp	x13, x19
   2da08:	csel	x11, x11, x12, lt  // lt = tstop
   2da0c:	csinc	x26, x26, x12, ge  // ge = tcont
   2da10:	cmp	x26, x11
   2da14:	b.lt	2d9ec <rpl_re_set_registers@@Base+0xa89c>  // b.tstop
   2da18:	cmp	x26, x8
   2da1c:	b.lt	2da30 <rpl_re_set_registers@@Base+0xa8e0>  // b.tstop
   2da20:	b	2da48 <rpl_re_set_registers@@Base+0xa8f8>
   2da24:	mov	x26, xzr
   2da28:	cmp	x26, x8
   2da2c:	b.ge	2da48 <rpl_re_set_registers@@Base+0xa8f8>  // b.tcont
   2da30:	ldr	x8, [x23, #216]
   2da34:	mov	w9, #0x28                  	// #40
   2da38:	madd	x8, x26, x9, x8
   2da3c:	ldr	x8, [x8, #8]
   2da40:	cmp	x8, x19
   2da44:	b.eq	2da4c <rpl_re_set_registers@@Base+0xa8fc>  // b.none
   2da48:	mov	x26, #0xffffffffffffffff    	// #-1
   2da4c:	ldr	x8, [x24, #8]
   2da50:	cmp	x8, #0x1
   2da54:	b.lt	2dba8 <rpl_re_set_registers@@Base+0xaa58>  // b.tstop
   2da58:	mov	x22, xzr
   2da5c:	mov	w20, #0x28                  	// #40
   2da60:	b	2da80 <rpl_re_set_registers@@Base+0xa930>
   2da64:	mov	w0, #0xffffffff            	// #-1
   2da68:	cmp	w0, w28
   2da6c:	b.ne	2dba0 <rpl_re_set_registers@@Base+0xaa50>  // b.any
   2da70:	ldr	x8, [x24, #8]
   2da74:	add	x22, x22, #0x1
   2da78:	cmp	x22, x8
   2da7c:	b.ge	2dba8 <rpl_re_set_registers@@Base+0xaa58>  // b.tcont
   2da80:	ldr	x8, [x24, #16]
   2da84:	ldr	x9, [x23, #216]
   2da88:	ldur	x12, [x29, #-8]
   2da8c:	ldr	x8, [x8, x22, lsl #3]
   2da90:	ldr	x12, [x12]
   2da94:	madd	x10, x8, x20, x9
   2da98:	ldr	x11, [x10]
   2da9c:	ldr	x10, [x10, #16]
   2daa0:	lsl	x11, x11, #4
   2daa4:	ldr	x27, [x12, x11]
   2daa8:	cmp	x10, x21
   2daac:	b.le	2dac0 <rpl_re_set_registers@@Base+0xa970>
   2dab0:	mov	w28, #0xffffffff            	// #-1
   2dab4:	cmp	x10, x19
   2dab8:	b.gt	2da64 <rpl_re_set_registers@@Base+0xa914>
   2dabc:	b	2db3c <rpl_re_set_registers@@Base+0xa9ec>
   2dac0:	madd	x11, x8, x20, x9
   2dac4:	ldr	x11, [x11, #24]
   2dac8:	cmp	x11, x21
   2dacc:	b.ge	2dae0 <rpl_re_set_registers@@Base+0xa990>  // b.tcont
   2dad0:	mov	w28, #0x1                   	// #1
   2dad4:	cmp	x10, x19
   2dad8:	b.gt	2da64 <rpl_re_set_registers@@Base+0xa914>
   2dadc:	b	2db3c <rpl_re_set_registers@@Base+0xa9ec>
   2dae0:	cmp	x10, x21
   2dae4:	cset	w1, eq  // eq = none
   2dae8:	cmp	x11, x21
   2daec:	cset	w11, eq  // eq = none
   2daf0:	bfi	w1, w11, #1, #1
   2daf4:	cbz	w1, 2db30 <rpl_re_set_registers@@Base+0xa9e0>
   2daf8:	ldr	x3, [sp, #8]
   2dafc:	mov	x0, x23
   2db00:	mov	x2, x27
   2db04:	mov	x4, x25
   2db08:	bl	2dbcc <rpl_re_set_registers@@Base+0xaa7c>
   2db0c:	ldr	x8, [x24, #16]
   2db10:	ldr	x9, [x23, #216]
   2db14:	mov	w28, w0
   2db18:	ldr	x8, [x8, x22, lsl #3]
   2db1c:	madd	x10, x8, x20, x9
   2db20:	ldr	x10, [x10, #16]
   2db24:	cmp	x10, x19
   2db28:	b.le	2db3c <rpl_re_set_registers@@Base+0xa9ec>
   2db2c:	b	2da64 <rpl_re_set_registers@@Base+0xa914>
   2db30:	mov	w28, wzr
   2db34:	cmp	x10, x19
   2db38:	b.gt	2da64 <rpl_re_set_registers@@Base+0xa914>
   2db3c:	madd	x8, x8, x20, x9
   2db40:	ldr	x8, [x8, #24]
   2db44:	cmp	x8, x19
   2db48:	b.ge	2db5c <rpl_re_set_registers@@Base+0xaa0c>  // b.tcont
   2db4c:	mov	w0, #0x1                   	// #1
   2db50:	cmp	w0, w28
   2db54:	b.eq	2da70 <rpl_re_set_registers@@Base+0xa920>  // b.none
   2db58:	b	2dba0 <rpl_re_set_registers@@Base+0xaa50>
   2db5c:	cmp	x10, x19
   2db60:	cset	w1, eq  // eq = none
   2db64:	cmp	x8, x19
   2db68:	cset	w8, eq  // eq = none
   2db6c:	bfi	w1, w8, #1, #1
   2db70:	cbz	w1, 2db94 <rpl_re_set_registers@@Base+0xaa44>
   2db74:	ldr	x3, [sp, #16]
   2db78:	mov	x0, x23
   2db7c:	mov	x2, x27
   2db80:	mov	x4, x26
   2db84:	bl	2dbcc <rpl_re_set_registers@@Base+0xaa7c>
   2db88:	cmp	w0, w28
   2db8c:	b.eq	2da70 <rpl_re_set_registers@@Base+0xa920>  // b.none
   2db90:	b	2dba0 <rpl_re_set_registers@@Base+0xaa50>
   2db94:	mov	w0, wzr
   2db98:	cmp	w0, w28
   2db9c:	b.eq	2da70 <rpl_re_set_registers@@Base+0xa920>  // b.none
   2dba0:	mov	w0, #0x1                   	// #1
   2dba4:	b	2dbac <rpl_re_set_registers@@Base+0xaa5c>
   2dba8:	mov	w0, wzr
   2dbac:	ldp	x20, x19, [sp, #112]
   2dbb0:	ldp	x22, x21, [sp, #96]
   2dbb4:	ldp	x24, x23, [sp, #80]
   2dbb8:	ldp	x26, x25, [sp, #64]
   2dbbc:	ldp	x28, x27, [sp, #48]
   2dbc0:	ldp	x29, x30, [sp, #32]
   2dbc4:	add	sp, sp, #0x80
   2dbc8:	ret
   2dbcc:	sub	sp, sp, #0x80
   2dbd0:	stp	x29, x30, [sp, #32]
   2dbd4:	stp	x28, x27, [sp, #48]
   2dbd8:	stp	x26, x25, [sp, #64]
   2dbdc:	stp	x24, x23, [sp, #80]
   2dbe0:	stp	x22, x21, [sp, #96]
   2dbe4:	stp	x20, x19, [sp, #112]
   2dbe8:	ldr	x24, [x0, #152]
   2dbec:	mov	w8, #0x18                  	// #24
   2dbf0:	mov	w23, w1
   2dbf4:	add	x29, sp, #0x20
   2dbf8:	ldr	x9, [x24, #48]
   2dbfc:	madd	x13, x3, x8, x9
   2dc00:	ldr	x8, [x13, #8]!
   2dc04:	cmp	x8, #0x1
   2dc08:	b.lt	2dd80 <rpl_re_set_registers@@Base+0xac30>  // b.tstop
   2dc0c:	mov	w12, #0x18                  	// #24
   2dc10:	cmp	x2, #0x3f
   2dc14:	and	w10, w23, #0x2
   2dc18:	mov	w11, #0x1                   	// #1
   2dc1c:	madd	x9, x3, x12, x9
   2dc20:	cset	w12, gt
   2dc24:	lsl	x11, x11, x2
   2dc28:	add	x25, x9, #0x10
   2dc2c:	orr	w9, w12, w10, lsr #1
   2dc30:	mov	x19, x4
   2dc34:	mov	x20, x3
   2dc38:	mov	x21, x2
   2dc3c:	mov	x22, x0
   2dc40:	mov	x26, xzr
   2dc44:	stur	w9, [x29, #-12]
   2dc48:	stur	x11, [x29, #-8]
   2dc4c:	mvn	w9, w11
   2dc50:	mov	w11, #0x28                  	// #40
   2dc54:	str	w9, [sp, #16]
   2dc58:	str	x13, [sp, #8]
   2dc5c:	b	2dc78 <rpl_re_set_registers@@Base+0xab28>
   2dc60:	ldr	x13, [sp, #8]
   2dc64:	mov	w11, #0x28                  	// #40
   2dc68:	ldr	x8, [x13]
   2dc6c:	add	x26, x26, #0x1
   2dc70:	cmp	x26, x8
   2dc74:	b.ge	2dd80 <rpl_re_set_registers@@Base+0xac30>  // b.tcont
   2dc78:	ldr	x9, [x25]
   2dc7c:	ldr	x27, [x9, x26, lsl #3]
   2dc80:	ldr	x9, [x24]
   2dc84:	add	x9, x9, x27, lsl #4
   2dc88:	ldrb	w10, [x9, #8]
   2dc8c:	cmp	w10, #0x9
   2dc90:	b.eq	2dd54 <rpl_re_set_registers@@Base+0xac04>  // b.none
   2dc94:	cmp	w10, #0x8
   2dc98:	b.eq	2dd68 <rpl_re_set_registers@@Base+0xac18>  // b.none
   2dc9c:	cmp	w10, #0x4
   2dca0:	b.ne	2dc6c <rpl_re_set_registers@@Base+0xab1c>  // b.any
   2dca4:	cmn	x19, #0x1
   2dca8:	b.eq	2dc6c <rpl_re_set_registers@@Base+0xab1c>  // b.none
   2dcac:	ldr	x8, [x22, #216]
   2dcb0:	madd	x8, x19, x11, x8
   2dcb4:	add	x28, x8, #0x22
   2dcb8:	b	2dcd8 <rpl_re_set_registers@@Base+0xab88>
   2dcbc:	ldrh	w8, [x28]
   2dcc0:	ldr	w9, [sp, #16]
   2dcc4:	and	w8, w8, w9
   2dcc8:	strh	w8, [x28]
   2dccc:	ldurb	w8, [x28, #-2]
   2dcd0:	add	x28, x28, #0x28
   2dcd4:	cbz	w8, 2dc60 <rpl_re_set_registers@@Base+0xab10>
   2dcd8:	ldur	x8, [x28, #-34]
   2dcdc:	cmp	x8, x27
   2dce0:	b.ne	2dccc <rpl_re_set_registers@@Base+0xab7c>  // b.any
   2dce4:	cmp	x21, #0x3f
   2dce8:	b.gt	2dcfc <rpl_re_set_registers@@Base+0xabac>
   2dcec:	ldrh	w8, [x28]
   2dcf0:	ldur	x9, [x29, #-8]
   2dcf4:	tst	x9, x8
   2dcf8:	b.eq	2dccc <rpl_re_set_registers@@Base+0xab7c>  // b.none
   2dcfc:	ldr	x8, [x24, #40]
   2dd00:	mov	w9, #0x18                  	// #24
   2dd04:	madd	x8, x27, x9, x8
   2dd08:	ldr	x8, [x8, #16]
   2dd0c:	ldr	x3, [x8]
   2dd10:	cmp	x3, x20
   2dd14:	b.eq	2dd88 <rpl_re_set_registers@@Base+0xac38>  // b.none
   2dd18:	mov	x0, x22
   2dd1c:	mov	w1, w23
   2dd20:	mov	x2, x21
   2dd24:	mov	x4, x19
   2dd28:	bl	2dbcc <rpl_re_set_registers@@Base+0xaa7c>
   2dd2c:	cbz	w0, 2dd44 <rpl_re_set_registers@@Base+0xabf4>
   2dd30:	cmn	w0, #0x1
   2dd34:	b.eq	2dd94 <rpl_re_set_registers@@Base+0xac44>  // b.none
   2dd38:	cmp	x21, #0x3f
   2dd3c:	b.le	2dcbc <rpl_re_set_registers@@Base+0xab6c>
   2dd40:	b	2dccc <rpl_re_set_registers@@Base+0xab7c>
   2dd44:	ldur	w8, [x29, #-12]
   2dd48:	tbz	w8, #0, 2dcbc <rpl_re_set_registers@@Base+0xab6c>
   2dd4c:	tbz	w23, #1, 2dccc <rpl_re_set_registers@@Base+0xab7c>
   2dd50:	b	2dd90 <rpl_re_set_registers@@Base+0xac40>
   2dd54:	tbz	w23, #1, 2dc6c <rpl_re_set_registers@@Base+0xab1c>
   2dd58:	ldr	x9, [x9]
   2dd5c:	cmp	x9, x21
   2dd60:	b.ne	2dc6c <rpl_re_set_registers@@Base+0xab1c>  // b.any
   2dd64:	b	2dd90 <rpl_re_set_registers@@Base+0xac40>
   2dd68:	tbz	w23, #0, 2dc6c <rpl_re_set_registers@@Base+0xab1c>
   2dd6c:	ldr	x9, [x9]
   2dd70:	cmp	x9, x21
   2dd74:	b.ne	2dc6c <rpl_re_set_registers@@Base+0xab1c>  // b.any
   2dd78:	mov	w0, #0xffffffff            	// #-1
   2dd7c:	b	2dd94 <rpl_re_set_registers@@Base+0xac44>
   2dd80:	ubfx	w0, w23, #1, #1
   2dd84:	b	2dd94 <rpl_re_set_registers@@Base+0xac44>
   2dd88:	sbfx	w0, w23, #0, #1
   2dd8c:	b	2dd94 <rpl_re_set_registers@@Base+0xac44>
   2dd90:	mov	w0, wzr
   2dd94:	ldp	x20, x19, [sp, #112]
   2dd98:	ldp	x22, x21, [sp, #96]
   2dd9c:	ldp	x24, x23, [sp, #80]
   2dda0:	ldp	x26, x25, [sp, #64]
   2dda4:	ldp	x28, x27, [sp, #48]
   2dda8:	ldp	x29, x30, [sp, #32]
   2ddac:	add	sp, sp, #0x80
   2ddb0:	ret

000000000002ddb4 <vasnprintf@@Base>:
   2ddb4:	stp	x29, x30, [sp, #-96]!
   2ddb8:	stp	x28, x27, [sp, #16]
   2ddbc:	stp	x26, x25, [sp, #32]
   2ddc0:	stp	x24, x23, [sp, #48]
   2ddc4:	stp	x22, x21, [sp, #64]
   2ddc8:	stp	x20, x19, [sp, #80]
   2ddcc:	mov	x29, sp
   2ddd0:	sub	sp, sp, #0x400
   2ddd4:	mov	x19, sp
   2ddd8:	mov	x21, x2
   2dddc:	mov	x22, x1
   2dde0:	mov	x20, x0
   2dde4:	add	x1, x19, #0x168
   2dde8:	add	x2, x19, #0x70
   2ddec:	mov	x0, x21
   2ddf0:	mov	x23, x3
   2ddf4:	bl	adf0 <printf_parse@plt>
   2ddf8:	tbnz	w0, #31, 2de5c <vasnprintf@@Base+0xa8>
   2ddfc:	ldp	q1, q0, [x23]
   2de00:	add	x0, x19, #0x50
   2de04:	add	x1, x19, #0x70
   2de08:	add	x28, x19, #0x168
   2de0c:	stp	q1, q0, [x19, #80]
   2de10:	bl	a9e0 <printf_fetchargs@plt>
   2de14:	tbnz	w0, #31, 2de64 <vasnprintf@@Base+0xb0>
   2de18:	ldp	x8, x9, [x28, #16]
   2de1c:	adds	x8, x8, #0x7
   2de20:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   2de24:	adds	x8, x8, x9
   2de28:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   2de2c:	adds	x8, x8, #0x6
   2de30:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   2de34:	cmp	x0, #0xf9f
   2de38:	b.hi	2dea4 <vasnprintf@@Base+0xf0>  // b.pmore
   2de3c:	add	x9, x0, #0xf
   2de40:	mov	x8, sp
   2de44:	and	x9, x9, #0xfffffffffffffff0
   2de48:	sub	x8, x8, x9
   2de4c:	str	x8, [x19, #64]
   2de50:	mov	sp, x8
   2de54:	mov	x0, xzr
   2de58:	b	2deb8 <vasnprintf@@Base+0x104>
   2de5c:	mov	x20, xzr
   2de60:	b	2e7a4 <vasnprintf@@Base+0x9f0>
   2de64:	ldr	x0, [x28, #8]
   2de68:	add	x8, x19, #0x168
   2de6c:	add	x8, x8, #0x20
   2de70:	cmp	x0, x8
   2de74:	b.eq	2de7c <vasnprintf@@Base+0xc8>  // b.none
   2de78:	bl	a960 <free@plt>
   2de7c:	ldr	x0, [x19, #120]
   2de80:	add	x8, x19, #0x70
   2de84:	add	x8, x8, #0x10
   2de88:	cmp	x0, x8
   2de8c:	b.eq	2de94 <vasnprintf@@Base+0xe0>  // b.none
   2de90:	bl	a960 <free@plt>
   2de94:	bl	ad80 <__errno_location@plt>
   2de98:	mov	x20, xzr
   2de9c:	mov	w8, #0x16                  	// #22
   2dea0:	b	2e7a0 <vasnprintf@@Base+0x9ec>
   2dea4:	cmn	x0, #0x1
   2dea8:	b.eq	2e764 <vasnprintf@@Base+0x9b0>  // b.none
   2deac:	bl	a540 <malloc@plt>
   2deb0:	str	x0, [x19, #64]
   2deb4:	cbz	x0, 2e764 <vasnprintf@@Base+0x9b0>
   2deb8:	str	x0, [x19, #32]
   2debc:	str	x22, [x19]
   2dec0:	cbz	x20, 2decc <vasnprintf@@Base+0x118>
   2dec4:	ldr	x24, [x22]
   2dec8:	b	2ded0 <vasnprintf@@Base+0x11c>
   2decc:	mov	x24, xzr
   2ded0:	ldr	x8, [x19, #64]
   2ded4:	ldr	x22, [x28, #8]
   2ded8:	mov	x23, xzr
   2dedc:	mov	x27, xzr
   2dee0:	add	x9, x8, #0x1
   2dee4:	add	x8, x8, #0x2
   2dee8:	mov	x14, x20
   2deec:	str	x9, [x19, #40]
   2def0:	str	x8, [x19, #24]
   2def4:	b	2df18 <vasnprintf@@Base+0x164>
   2def8:	mov	x21, x14
   2defc:	mov	w8, #0x25                  	// #37
   2df00:	strb	w8, [x21, x23]
   2df04:	mov	x23, x25
   2df08:	mov	x14, x21
   2df0c:	ldr	x21, [x22, #8]
   2df10:	add	x27, x27, #0x1
   2df14:	add	x22, x22, #0x58
   2df18:	ldr	x8, [x22]
   2df1c:	cmp	x21, x8
   2df20:	b.eq	2dfe0 <vasnprintf@@Base+0x22c>  // b.none
   2df24:	mov	x26, x22
   2df28:	mov	x22, x27
   2df2c:	sub	x27, x8, x21
   2df30:	adds	x8, x23, x27
   2df34:	csinv	x25, x8, xzr, cc  // cc = lo, ul, last
   2df38:	mov	w9, #0xc                   	// #12
   2df3c:	cmp	x25, x24
   2df40:	b.ls	2df84 <vasnprintf@@Base+0x1d0>  // b.plast
   2df44:	lsl	x8, x24, #1
   2df48:	cmp	x24, #0x0
   2df4c:	csinv	x8, x8, xzr, ge  // ge = tcont
   2df50:	csel	x8, x9, x8, eq  // eq = none
   2df54:	cmp	x25, x8
   2df58:	csel	x24, x25, x8, hi  // hi = pmore
   2df5c:	cmn	x24, #0x1
   2df60:	b.eq	2e740 <vasnprintf@@Base+0x98c>  // b.none
   2df64:	cmp	x14, x20
   2df68:	str	x14, [x19, #56]
   2df6c:	b.eq	2df8c <vasnprintf@@Base+0x1d8>  // b.none
   2df70:	cbz	x14, 2df8c <vasnprintf@@Base+0x1d8>
   2df74:	mov	x0, x14
   2df78:	mov	x1, x24
   2df7c:	bl	a720 <realloc@plt>
   2df80:	b	2df94 <vasnprintf@@Base+0x1e0>
   2df84:	mov	x28, x14
   2df88:	b	2dfbc <vasnprintf@@Base+0x208>
   2df8c:	mov	x0, x24
   2df90:	bl	a540 <malloc@plt>
   2df94:	mov	x28, x0
   2df98:	cbz	x0, 2e8ec <vasnprintf@@Base+0xb38>
   2df9c:	cbz	x23, 2dfbc <vasnprintf@@Base+0x208>
   2dfa0:	ldr	x8, [x19, #56]
   2dfa4:	cmp	x8, x20
   2dfa8:	b.ne	2dfbc <vasnprintf@@Base+0x208>  // b.any
   2dfac:	mov	x1, x20
   2dfb0:	mov	x0, x28
   2dfb4:	mov	x2, x23
   2dfb8:	bl	a210 <memcpy@plt>
   2dfbc:	add	x0, x28, x23
   2dfc0:	mov	x1, x21
   2dfc4:	mov	x2, x27
   2dfc8:	bl	a210 <memcpy@plt>
   2dfcc:	mov	x23, x25
   2dfd0:	mov	x14, x28
   2dfd4:	add	x28, x19, #0x168
   2dfd8:	mov	x27, x22
   2dfdc:	mov	x22, x26
   2dfe0:	ldr	x8, [x28]
   2dfe4:	cmp	x27, x8
   2dfe8:	b.eq	2e858 <vasnprintf@@Base+0xaa4>  // b.none
   2dfec:	ldrb	w10, [x22, #72]
   2dff0:	ldr	x8, [x22, #80]
   2dff4:	cmp	w10, #0x25
   2dff8:	b.ne	2e05c <vasnprintf@@Base+0x2a8>  // b.any
   2dffc:	cmn	x8, #0x1
   2e000:	b.ne	2ea00 <vasnprintf@@Base+0xc4c>  // b.any
   2e004:	adds	x8, x23, #0x1
   2e008:	csinv	x25, x8, xzr, cc  // cc = lo, ul, last
   2e00c:	cmp	x25, x24
   2e010:	b.ls	2def8 <vasnprintf@@Base+0x144>  // b.plast
   2e014:	lsl	x8, x24, #1
   2e018:	cmp	x24, #0x0
   2e01c:	csinv	x8, x8, xzr, ge  // ge = tcont
   2e020:	mov	w9, #0xc                   	// #12
   2e024:	csel	x8, x9, x8, eq  // eq = none
   2e028:	cmp	x25, x8
   2e02c:	csel	x24, x25, x8, hi  // hi = pmore
   2e030:	cmn	x24, #0x1
   2e034:	b.eq	2e740 <vasnprintf@@Base+0x98c>  // b.none
   2e038:	mov	x26, x23
   2e03c:	cmp	x14, x20
   2e040:	b.eq	2e200 <vasnprintf@@Base+0x44c>  // b.none
   2e044:	cbz	x14, 2e200 <vasnprintf@@Base+0x44c>
   2e048:	mov	x0, x14
   2e04c:	mov	x1, x24
   2e050:	mov	x23, x14
   2e054:	bl	a720 <realloc@plt>
   2e058:	b	2e20c <vasnprintf@@Base+0x458>
   2e05c:	cmn	x8, #0x1
   2e060:	b.eq	2ea00 <vasnprintf@@Base+0xc4c>  // b.none
   2e064:	ldr	x9, [x19, #120]
   2e068:	lsl	x11, x8, #5
   2e06c:	cmp	w10, #0x6e
   2e070:	ldr	w26, [x9, x11]
   2e074:	b.ne	2e0ac <vasnprintf@@Base+0x2f8>  // b.any
   2e078:	sub	w10, w26, #0x12
   2e07c:	cmp	w10, #0x4
   2e080:	b.hi	2ea00 <vasnprintf@@Base+0xc4c>  // b.pmore
   2e084:	adrp	x13, 31000 <vasnprintf@@Base+0x324c>
   2e088:	add	x13, x13, #0x9ea
   2e08c:	adr	x11, 2e09c <vasnprintf@@Base+0x2e8>
   2e090:	ldrh	w12, [x13, x10, lsl #1]
   2e094:	add	x11, x11, x12, lsl #2
   2e098:	br	x11
   2e09c:	add	x8, x9, x8, lsl #5
   2e0a0:	ldr	x8, [x8, #16]
   2e0a4:	str	x23, [x8]
   2e0a8:	b	2df0c <vasnprintf@@Base+0x158>
   2e0ac:	str	x27, [x19, #16]
   2e0b0:	ldr	w8, [x22, #16]
   2e0b4:	ldr	x9, [x19, #64]
   2e0b8:	ldr	x27, [x19, #40]
   2e0bc:	mov	w10, #0x25                  	// #37
   2e0c0:	strb	w10, [x9]
   2e0c4:	tbnz	w8, #0, 2e1a8 <vasnprintf@@Base+0x3f4>
   2e0c8:	tbnz	w8, #1, 2e1bc <vasnprintf@@Base+0x408>
   2e0cc:	tbnz	w8, #2, 2e1c8 <vasnprintf@@Base+0x414>
   2e0d0:	tbnz	w8, #3, 2e1d4 <vasnprintf@@Base+0x420>
   2e0d4:	tbnz	w8, #4, 2e1e0 <vasnprintf@@Base+0x42c>
   2e0d8:	tbnz	w8, #6, 2e1ec <vasnprintf@@Base+0x438>
   2e0dc:	mov	x25, x14
   2e0e0:	tbz	w8, #5, 2e0ec <vasnprintf@@Base+0x338>
   2e0e4:	mov	w8, #0x30                  	// #48
   2e0e8:	strb	w8, [x27], #1
   2e0ec:	ldp	x1, x8, [x22, #24]
   2e0f0:	cmp	x1, x8
   2e0f4:	b.eq	2e10c <vasnprintf@@Base+0x358>  // b.none
   2e0f8:	sub	x21, x8, x1
   2e0fc:	mov	x0, x27
   2e100:	mov	x2, x21
   2e104:	bl	a210 <memcpy@plt>
   2e108:	add	x27, x27, x21
   2e10c:	ldp	x1, x8, [x22, #48]
   2e110:	cmp	x1, x8
   2e114:	b.eq	2e12c <vasnprintf@@Base+0x378>  // b.none
   2e118:	sub	x21, x8, x1
   2e11c:	mov	x0, x27
   2e120:	mov	x2, x21
   2e124:	bl	a210 <memcpy@plt>
   2e128:	add	x27, x27, x21
   2e12c:	mov	x14, x25
   2e130:	cmp	w26, #0x10
   2e134:	b.hi	2e168 <vasnprintf@@Base+0x3b4>  // b.pmore
   2e138:	mov	w8, #0x1                   	// #1
   2e13c:	mov	w9, #0x4180                	// #16768
   2e140:	lsl	w8, w8, w26
   2e144:	movk	w9, #0x1, lsl #16
   2e148:	tst	w8, w9
   2e14c:	b.ne	2e160 <vasnprintf@@Base+0x3ac>  // b.any
   2e150:	tst	w8, #0x600
   2e154:	b.eq	2e72c <vasnprintf@@Base+0x978>  // b.none
   2e158:	mov	w8, #0x6c                  	// #108
   2e15c:	strb	w8, [x27], #1
   2e160:	mov	w8, #0x6c                  	// #108
   2e164:	strb	w8, [x27], #1
   2e168:	ldrb	w8, [x22, #72]
   2e16c:	strb	wzr, [x27, #1]
   2e170:	strb	w8, [x27]
   2e174:	ldr	x8, [x22, #40]
   2e178:	cmn	x8, #0x1
   2e17c:	b.eq	2e240 <vasnprintf@@Base+0x48c>  // b.none
   2e180:	ldr	x9, [x19, #120]
   2e184:	lsl	x10, x8, #5
   2e188:	ldr	w10, [x9, x10]
   2e18c:	cmp	w10, #0x5
   2e190:	b.ne	2ea00 <vasnprintf@@Base+0xc4c>  // b.any
   2e194:	add	x8, x9, x8, lsl #5
   2e198:	ldr	w8, [x8, #16]
   2e19c:	mov	w28, #0x1                   	// #1
   2e1a0:	str	w8, [x19, #80]
   2e1a4:	b	2e244 <vasnprintf@@Base+0x490>
   2e1a8:	ldr	x9, [x19, #40]
   2e1ac:	ldr	x27, [x19, #24]
   2e1b0:	mov	w10, #0x27                  	// #39
   2e1b4:	strb	w10, [x9]
   2e1b8:	tbz	w8, #1, 2e0cc <vasnprintf@@Base+0x318>
   2e1bc:	mov	w9, #0x2d                  	// #45
   2e1c0:	strb	w9, [x27], #1
   2e1c4:	tbz	w8, #2, 2e0d0 <vasnprintf@@Base+0x31c>
   2e1c8:	mov	w9, #0x2b                  	// #43
   2e1cc:	strb	w9, [x27], #1
   2e1d0:	tbz	w8, #3, 2e0d4 <vasnprintf@@Base+0x320>
   2e1d4:	mov	w9, #0x20                  	// #32
   2e1d8:	strb	w9, [x27], #1
   2e1dc:	tbz	w8, #4, 2e0d8 <vasnprintf@@Base+0x324>
   2e1e0:	mov	w9, #0x23                  	// #35
   2e1e4:	strb	w9, [x27], #1
   2e1e8:	tbz	w8, #6, 2e0dc <vasnprintf@@Base+0x328>
   2e1ec:	mov	w9, #0x49                  	// #73
   2e1f0:	strb	w9, [x27], #1
   2e1f4:	mov	x25, x14
   2e1f8:	tbnz	w8, #5, 2e0e4 <vasnprintf@@Base+0x330>
   2e1fc:	b	2e0ec <vasnprintf@@Base+0x338>
   2e200:	mov	x0, x24
   2e204:	mov	x23, x14
   2e208:	bl	a540 <malloc@plt>
   2e20c:	mov	x21, x0
   2e210:	cbz	x0, 2e8fc <vasnprintf@@Base+0xb48>
   2e214:	cbz	x26, 2e238 <vasnprintf@@Base+0x484>
   2e218:	cmp	x23, x20
   2e21c:	b.ne	2e238 <vasnprintf@@Base+0x484>  // b.any
   2e220:	mov	x0, x21
   2e224:	mov	x1, x20
   2e228:	mov	x2, x26
   2e22c:	mov	x23, x26
   2e230:	bl	a210 <memcpy@plt>
   2e234:	b	2defc <vasnprintf@@Base+0x148>
   2e238:	mov	x23, x26
   2e23c:	b	2defc <vasnprintf@@Base+0x148>
   2e240:	mov	w28, wzr
   2e244:	ldr	x8, [x22, #64]
   2e248:	cmn	x8, #0x1
   2e24c:	b.eq	2e27c <vasnprintf@@Base+0x4c8>  // b.none
   2e250:	ldr	x9, [x19, #120]
   2e254:	lsl	x10, x8, #5
   2e258:	ldr	w10, [x9, x10]
   2e25c:	cmp	w10, #0x5
   2e260:	b.ne	2ea00 <vasnprintf@@Base+0xc4c>  // b.any
   2e264:	add	x8, x9, x8, lsl #5
   2e268:	ldr	w8, [x8, #16]
   2e26c:	add	w9, w28, #0x1
   2e270:	add	x10, x19, #0x50
   2e274:	str	w8, [x10, w28, uxtw #2]
   2e278:	mov	w28, w9
   2e27c:	adds	x8, x23, #0x2
   2e280:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   2e284:	cmp	x8, x24
   2e288:	str	x27, [x19, #48]
   2e28c:	b.ls	2e2d8 <vasnprintf@@Base+0x524>  // b.plast
   2e290:	lsl	x9, x24, #1
   2e294:	cmp	x24, #0x0
   2e298:	csinv	x9, x9, xzr, ge  // ge = tcont
   2e29c:	mov	w10, #0xc                   	// #12
   2e2a0:	csel	x9, x10, x9, eq  // eq = none
   2e2a4:	cmp	x8, x9
   2e2a8:	csel	x24, x8, x9, hi  // hi = pmore
   2e2ac:	cmn	x24, #0x1
   2e2b0:	b.eq	2e73c <vasnprintf@@Base+0x988>  // b.none
   2e2b4:	mov	x25, x23
   2e2b8:	cmp	x14, x20
   2e2bc:	b.eq	2e2e0 <vasnprintf@@Base+0x52c>  // b.none
   2e2c0:	cbz	x14, 2e2e0 <vasnprintf@@Base+0x52c>
   2e2c4:	mov	x0, x14
   2e2c8:	mov	x1, x24
   2e2cc:	mov	x23, x14
   2e2d0:	bl	a720 <realloc@plt>
   2e2d4:	b	2e2ec <vasnprintf@@Base+0x538>
   2e2d8:	mov	x21, x14
   2e2dc:	b	2e318 <vasnprintf@@Base+0x564>
   2e2e0:	mov	x0, x24
   2e2e4:	mov	x23, x14
   2e2e8:	bl	a540 <malloc@plt>
   2e2ec:	mov	x21, x0
   2e2f0:	mov	x14, x23
   2e2f4:	cbz	x0, 2e73c <vasnprintf@@Base+0x988>
   2e2f8:	mov	x23, x25
   2e2fc:	cbz	x25, 2e318 <vasnprintf@@Base+0x564>
   2e300:	cmp	x14, x20
   2e304:	b.ne	2e318 <vasnprintf@@Base+0x564>  // b.any
   2e308:	mov	x0, x21
   2e30c:	mov	x1, x20
   2e310:	mov	x2, x23
   2e314:	bl	a210 <memcpy@plt>
   2e318:	strb	wzr, [x21, x23]
   2e31c:	bl	ad80 <__errno_location@plt>
   2e320:	ldr	w8, [x0]
   2e324:	str	x0, [x19, #56]
   2e328:	str	w8, [x19, #12]
   2e32c:	mov	x14, x21
   2e330:	sub	x25, x24, x23
   2e334:	mov	w9, #0x7fffffff            	// #2147483647
   2e338:	cmp	x25, x9
   2e33c:	csel	x21, x25, x9, cc  // cc = lo, ul, last
   2e340:	ldr	x9, [x19, #56]
   2e344:	mov	w8, #0xffffffff            	// #-1
   2e348:	str	w8, [x19, #76]
   2e34c:	sub	w8, w26, #0x1
   2e350:	cmp	w8, #0x10
   2e354:	str	wzr, [x9]
   2e358:	b.hi	2ea00 <vasnprintf@@Base+0xc4c>  // b.pmore
   2e35c:	adrp	x11, 31000 <vasnprintf@@Base+0x324c>
   2e360:	add	x11, x11, #0x9d8
   2e364:	adr	x9, 2e37c <vasnprintf@@Base+0x5c8>
   2e368:	ldrb	w10, [x11, x8]
   2e36c:	add	x9, x9, x10, lsl #2
   2e370:	mov	w27, w26
   2e374:	mov	x26, x14
   2e378:	br	x9
   2e37c:	ldr	x8, [x19, #120]
   2e380:	ldr	x9, [x22, #80]
   2e384:	cmp	w28, #0x2
   2e388:	add	x8, x8, x9, lsl #5
   2e38c:	ldr	x8, [x8, #16]
   2e390:	b.eq	2e43c <vasnprintf@@Base+0x688>  // b.none
   2e394:	cmp	w28, #0x1
   2e398:	b.eq	2e41c <vasnprintf@@Base+0x668>  // b.none
   2e39c:	cbnz	w28, 2ea00 <vasnprintf@@Base+0xc4c>
   2e3a0:	ldr	x2, [x19, #64]
   2e3a4:	add	x0, x14, x23
   2e3a8:	add	x4, x19, #0x4c
   2e3ac:	mov	x1, x21
   2e3b0:	mov	x3, x8
   2e3b4:	bl	a490 <snprintf@plt>
   2e3b8:	b	2e4cc <vasnprintf@@Base+0x718>
   2e3bc:	ldr	x8, [x19, #120]
   2e3c0:	ldr	x9, [x22, #80]
   2e3c4:	cmp	w28, #0x2
   2e3c8:	add	x8, x8, x9, lsl #5
   2e3cc:	ldr	w8, [x8, #16]
   2e3d0:	b.eq	2e4b0 <vasnprintf@@Base+0x6fc>  // b.none
   2e3d4:	cmp	w28, #0x1
   2e3d8:	b.eq	2e3fc <vasnprintf@@Base+0x648>  // b.none
   2e3dc:	cbnz	w28, 2ea00 <vasnprintf@@Base+0xc4c>
   2e3e0:	ldr	x2, [x19, #64]
   2e3e4:	add	x0, x14, x23
   2e3e8:	add	x4, x19, #0x4c
   2e3ec:	mov	x1, x21
   2e3f0:	mov	w3, w8
   2e3f4:	bl	a490 <snprintf@plt>
   2e3f8:	b	2e4cc <vasnprintf@@Base+0x718>
   2e3fc:	ldr	w3, [x19, #80]
   2e400:	ldr	x2, [x19, #64]
   2e404:	add	x0, x14, x23
   2e408:	add	x5, x19, #0x4c
   2e40c:	mov	x1, x21
   2e410:	mov	w4, w8
   2e414:	bl	a490 <snprintf@plt>
   2e418:	b	2e4cc <vasnprintf@@Base+0x718>
   2e41c:	ldr	w3, [x19, #80]
   2e420:	ldr	x2, [x19, #64]
   2e424:	add	x0, x14, x23
   2e428:	add	x5, x19, #0x4c
   2e42c:	mov	x1, x21
   2e430:	mov	x4, x8
   2e434:	bl	a490 <snprintf@plt>
   2e438:	b	2e4cc <vasnprintf@@Base+0x718>
   2e43c:	ldp	w3, w4, [x19, #80]
   2e440:	ldr	x2, [x19, #64]
   2e444:	add	x0, x14, x23
   2e448:	add	x6, x19, #0x4c
   2e44c:	mov	x1, x21
   2e450:	mov	x5, x8
   2e454:	bl	a490 <snprintf@plt>
   2e458:	b	2e4cc <vasnprintf@@Base+0x718>
   2e45c:	ldr	x8, [x19, #120]
   2e460:	ldr	x9, [x22, #80]
   2e464:	cmp	w28, #0x2
   2e468:	add	x8, x8, x9, lsl #5
   2e46c:	ldr	q0, [x8, #16]
   2e470:	b.eq	2e600 <vasnprintf@@Base+0x84c>  // b.none
   2e474:	cmp	w28, #0x1
   2e478:	b.eq	2e61c <vasnprintf@@Base+0x868>  // b.none
   2e47c:	cbnz	w28, 2ea00 <vasnprintf@@Base+0xc4c>
   2e480:	ldr	x2, [x19, #64]
   2e484:	add	x0, x14, x23
   2e488:	add	x3, x19, #0x4c
   2e48c:	mov	x1, x21
   2e490:	bl	a490 <snprintf@plt>
   2e494:	b	2e4cc <vasnprintf@@Base+0x718>
   2e498:	ldr	x8, [x19, #120]
   2e49c:	ldr	x9, [x22, #80]
   2e4a0:	cmp	w28, #0x2
   2e4a4:	add	x8, x8, x9, lsl #5
   2e4a8:	ldrsb	w8, [x8, #16]
   2e4ac:	b.ne	2e3d4 <vasnprintf@@Base+0x620>  // b.any
   2e4b0:	ldp	w3, w4, [x19, #80]
   2e4b4:	ldr	x2, [x19, #64]
   2e4b8:	add	x0, x14, x23
   2e4bc:	add	x6, x19, #0x4c
   2e4c0:	mov	x1, x21
   2e4c4:	mov	w5, w8
   2e4c8:	bl	a490 <snprintf@plt>
   2e4cc:	ldr	w8, [x19, #76]
   2e4d0:	mov	x14, x26
   2e4d4:	tbnz	w8, #31, 2e504 <vasnprintf@@Base+0x750>
   2e4d8:	cmp	x21, x8
   2e4dc:	b.ls	2e4ec <vasnprintf@@Base+0x738>  // b.plast
   2e4e0:	add	x9, x14, x23
   2e4e4:	ldrb	w9, [x9, x8]
   2e4e8:	cbnz	w9, 2ea00 <vasnprintf@@Base+0xc4c>
   2e4ec:	cmp	w0, w8
   2e4f0:	b.le	2e528 <vasnprintf@@Base+0x774>
   2e4f4:	mov	w8, w0
   2e4f8:	str	w0, [x19, #76]
   2e4fc:	tbz	w0, #31, 2e528 <vasnprintf@@Base+0x774>
   2e500:	b	2e830 <vasnprintf@@Base+0xa7c>
   2e504:	ldr	x9, [x19, #48]
   2e508:	ldrb	w8, [x9, #1]
   2e50c:	cbz	w8, 2e51c <vasnprintf@@Base+0x768>
   2e510:	strb	wzr, [x9, #1]
   2e514:	mov	w26, w27
   2e518:	b	2e330 <vasnprintf@@Base+0x57c>
   2e51c:	tbnz	w0, #31, 2e830 <vasnprintf@@Base+0xa7c>
   2e520:	mov	w8, w0
   2e524:	str	w0, [x19, #76]
   2e528:	add	w9, w8, #0x1
   2e52c:	cmp	x21, x9
   2e530:	b.hi	2e6e0 <vasnprintf@@Base+0x92c>  // b.pmore
   2e534:	mov	w9, #0x7ffffffe            	// #2147483646
   2e538:	cmp	x25, x9
   2e53c:	b.hi	2e7c8 <vasnprintf@@Base+0xa14>  // b.pmore
   2e540:	add	w8, w8, #0x2
   2e544:	adds	x8, x23, x8
   2e548:	lsl	x9, x24, #1
   2e54c:	csinv	x10, x8, xzr, cc  // cc = lo, ul, last
   2e550:	cmp	x24, #0x0
   2e554:	csinv	x8, x9, xzr, ge  // ge = tcont
   2e558:	cmp	x10, x8
   2e55c:	csel	x9, x8, x10, cc  // cc = lo, ul, last
   2e560:	cmp	x9, x24
   2e564:	b.hi	2e670 <vasnprintf@@Base+0x8bc>  // b.pmore
   2e568:	mov	w26, w27
   2e56c:	b	2e330 <vasnprintf@@Base+0x57c>
   2e570:	ldr	x8, [x19, #120]
   2e574:	ldr	x9, [x22, #80]
   2e578:	cmp	w28, #0x2
   2e57c:	add	x8, x8, x9, lsl #5
   2e580:	ldrb	w8, [x8, #16]
   2e584:	b.ne	2e3d4 <vasnprintf@@Base+0x620>  // b.any
   2e588:	b	2e4b0 <vasnprintf@@Base+0x6fc>
   2e58c:	ldr	x8, [x19, #120]
   2e590:	ldr	x9, [x22, #80]
   2e594:	cmp	w28, #0x2
   2e598:	add	x8, x8, x9, lsl #5
   2e59c:	ldrsh	w8, [x8, #16]
   2e5a0:	b.ne	2e3d4 <vasnprintf@@Base+0x620>  // b.any
   2e5a4:	b	2e4b0 <vasnprintf@@Base+0x6fc>
   2e5a8:	ldr	x8, [x19, #120]
   2e5ac:	ldr	x9, [x22, #80]
   2e5b0:	cmp	w28, #0x2
   2e5b4:	add	x8, x8, x9, lsl #5
   2e5b8:	ldrh	w8, [x8, #16]
   2e5bc:	b.ne	2e3d4 <vasnprintf@@Base+0x620>  // b.any
   2e5c0:	b	2e4b0 <vasnprintf@@Base+0x6fc>
   2e5c4:	ldr	x8, [x19, #120]
   2e5c8:	ldr	x9, [x22, #80]
   2e5cc:	cmp	w28, #0x2
   2e5d0:	add	x8, x8, x9, lsl #5
   2e5d4:	ldr	d0, [x8, #16]
   2e5d8:	b.eq	2e638 <vasnprintf@@Base+0x884>  // b.none
   2e5dc:	cmp	w28, #0x1
   2e5e0:	b.eq	2e654 <vasnprintf@@Base+0x8a0>  // b.none
   2e5e4:	cbnz	w28, 2ea00 <vasnprintf@@Base+0xc4c>
   2e5e8:	ldr	x2, [x19, #64]
   2e5ec:	add	x0, x14, x23
   2e5f0:	add	x3, x19, #0x4c
   2e5f4:	mov	x1, x21
   2e5f8:	bl	a490 <snprintf@plt>
   2e5fc:	b	2e4cc <vasnprintf@@Base+0x718>
   2e600:	ldp	w3, w4, [x19, #80]
   2e604:	ldr	x2, [x19, #64]
   2e608:	add	x0, x14, x23
   2e60c:	add	x5, x19, #0x4c
   2e610:	mov	x1, x21
   2e614:	bl	a490 <snprintf@plt>
   2e618:	b	2e4cc <vasnprintf@@Base+0x718>
   2e61c:	ldr	w3, [x19, #80]
   2e620:	ldr	x2, [x19, #64]
   2e624:	add	x0, x14, x23
   2e628:	add	x4, x19, #0x4c
   2e62c:	mov	x1, x21
   2e630:	bl	a490 <snprintf@plt>
   2e634:	b	2e4cc <vasnprintf@@Base+0x718>
   2e638:	ldp	w3, w4, [x19, #80]
   2e63c:	ldr	x2, [x19, #64]
   2e640:	add	x0, x14, x23
   2e644:	add	x5, x19, #0x4c
   2e648:	mov	x1, x21
   2e64c:	bl	a490 <snprintf@plt>
   2e650:	b	2e4cc <vasnprintf@@Base+0x718>
   2e654:	ldr	w3, [x19, #80]
   2e658:	ldr	x2, [x19, #64]
   2e65c:	add	x0, x14, x23
   2e660:	add	x4, x19, #0x4c
   2e664:	mov	x1, x21
   2e668:	bl	a490 <snprintf@plt>
   2e66c:	b	2e4cc <vasnprintf@@Base+0x718>
   2e670:	cmp	x24, #0x0
   2e674:	mov	w10, #0xc                   	// #12
   2e678:	csel	x8, x10, x8, eq  // eq = none
   2e67c:	cmp	x9, x8
   2e680:	csel	x24, x9, x8, hi  // hi = pmore
   2e684:	cmn	x24, #0x1
   2e688:	b.eq	2e73c <vasnprintf@@Base+0x988>  // b.none
   2e68c:	cmp	x14, x20
   2e690:	b.eq	2e6a8 <vasnprintf@@Base+0x8f4>  // b.none
   2e694:	cbz	x14, 2e6a8 <vasnprintf@@Base+0x8f4>
   2e698:	mov	x0, x14
   2e69c:	mov	x1, x24
   2e6a0:	bl	a720 <realloc@plt>
   2e6a4:	b	2e6b0 <vasnprintf@@Base+0x8fc>
   2e6a8:	mov	x0, x24
   2e6ac:	bl	a540 <malloc@plt>
   2e6b0:	mov	x21, x0
   2e6b4:	mov	x14, x26
   2e6b8:	cbz	x0, 2e73c <vasnprintf@@Base+0x988>
   2e6bc:	mov	w26, w27
   2e6c0:	cbz	x23, 2e32c <vasnprintf@@Base+0x578>
   2e6c4:	cmp	x14, x20
   2e6c8:	b.ne	2e32c <vasnprintf@@Base+0x578>  // b.any
   2e6cc:	mov	x0, x21
   2e6d0:	mov	x1, x20
   2e6d4:	mov	x2, x23
   2e6d8:	bl	a210 <memcpy@plt>
   2e6dc:	b	2e32c <vasnprintf@@Base+0x578>
   2e6e0:	add	x23, x23, w8, uxtw
   2e6e4:	ldr	x8, [x19, #56]
   2e6e8:	ldr	w9, [x19, #12]
   2e6ec:	ldr	x27, [x19, #16]
   2e6f0:	add	x28, x19, #0x168
   2e6f4:	str	w9, [x8]
   2e6f8:	b	2df0c <vasnprintf@@Base+0x158>
   2e6fc:	add	x8, x9, x8, lsl #5
   2e700:	ldr	x8, [x8, #16]
   2e704:	strb	w23, [x8]
   2e708:	b	2df0c <vasnprintf@@Base+0x158>
   2e70c:	add	x8, x9, x8, lsl #5
   2e710:	ldr	x8, [x8, #16]
   2e714:	strh	w23, [x8]
   2e718:	b	2df0c <vasnprintf@@Base+0x158>
   2e71c:	add	x8, x9, x8, lsl #5
   2e720:	ldr	x8, [x8, #16]
   2e724:	str	w23, [x8]
   2e728:	b	2df0c <vasnprintf@@Base+0x158>
   2e72c:	cmp	w26, #0xc
   2e730:	b.ne	2e168 <vasnprintf@@Base+0x3b4>  // b.any
   2e734:	mov	w8, #0x4c                  	// #76
   2e738:	b	2e164 <vasnprintf@@Base+0x3b0>
   2e73c:	add	x28, x19, #0x168
   2e740:	ldr	x22, [x19, #32]
   2e744:	cmp	x14, x20
   2e748:	b.eq	2e758 <vasnprintf@@Base+0x9a4>  // b.none
   2e74c:	cbz	x14, 2e758 <vasnprintf@@Base+0x9a4>
   2e750:	mov	x0, x14
   2e754:	bl	a960 <free@plt>
   2e758:	cbz	x22, 2e764 <vasnprintf@@Base+0x9b0>
   2e75c:	mov	x0, x22
   2e760:	bl	a960 <free@plt>
   2e764:	ldr	x0, [x28, #8]
   2e768:	add	x8, x19, #0x168
   2e76c:	add	x8, x8, #0x20
   2e770:	cmp	x0, x8
   2e774:	b.eq	2e77c <vasnprintf@@Base+0x9c8>  // b.none
   2e778:	bl	a960 <free@plt>
   2e77c:	ldr	x0, [x19, #120]
   2e780:	add	x8, x19, #0x70
   2e784:	add	x8, x8, #0x10
   2e788:	cmp	x0, x8
   2e78c:	b.eq	2e794 <vasnprintf@@Base+0x9e0>  // b.none
   2e790:	bl	a960 <free@plt>
   2e794:	bl	ad80 <__errno_location@plt>
   2e798:	mov	x20, xzr
   2e79c:	mov	w8, #0xc                   	// #12
   2e7a0:	str	w8, [x0]
   2e7a4:	mov	x0, x20
   2e7a8:	mov	sp, x29
   2e7ac:	ldp	x20, x19, [sp, #80]
   2e7b0:	ldp	x22, x21, [sp, #64]
   2e7b4:	ldp	x24, x23, [sp, #48]
   2e7b8:	ldp	x26, x25, [sp, #32]
   2e7bc:	ldp	x28, x27, [sp, #16]
   2e7c0:	ldp	x29, x30, [sp], #96
   2e7c4:	ret
   2e7c8:	cmp	x14, x20
   2e7cc:	b.eq	2e7dc <vasnprintf@@Base+0xa28>  // b.none
   2e7d0:	cbz	x14, 2e7dc <vasnprintf@@Base+0xa28>
   2e7d4:	mov	x0, x14
   2e7d8:	bl	a960 <free@plt>
   2e7dc:	ldr	x0, [x19, #32]
   2e7e0:	add	x20, x19, #0x168
   2e7e4:	cbz	x0, 2e7ec <vasnprintf@@Base+0xa38>
   2e7e8:	bl	a960 <free@plt>
   2e7ec:	ldr	x0, [x20, #8]
   2e7f0:	add	x8, x19, #0x168
   2e7f4:	add	x8, x8, #0x20
   2e7f8:	cmp	x0, x8
   2e7fc:	b.eq	2e804 <vasnprintf@@Base+0xa50>  // b.none
   2e800:	bl	a960 <free@plt>
   2e804:	ldr	x0, [x19, #120]
   2e808:	add	x8, x19, #0x70
   2e80c:	add	x8, x8, #0x10
   2e810:	cmp	x0, x8
   2e814:	b.eq	2e81c <vasnprintf@@Base+0xa68>  // b.none
   2e818:	bl	a960 <free@plt>
   2e81c:	ldr	x9, [x19, #56]
   2e820:	mov	w8, #0x4b                  	// #75
   2e824:	mov	x20, xzr
   2e828:	str	w8, [x9]
   2e82c:	b	2e7a4 <vasnprintf@@Base+0x9f0>
   2e830:	ldr	x8, [x19, #56]
   2e834:	add	x23, x19, #0x168
   2e838:	ldr	w21, [x8]
   2e83c:	cbnz	w21, 2e954 <vasnprintf@@Base+0xba0>
   2e840:	ldrb	w8, [x22, #72]
   2e844:	orr	w8, w8, #0x10
   2e848:	cmp	w8, #0x73
   2e84c:	b.ne	2e950 <vasnprintf@@Base+0xb9c>  // b.any
   2e850:	mov	w21, #0x54                  	// #84
   2e854:	b	2e954 <vasnprintf@@Base+0xba0>
   2e858:	adds	x8, x23, #0x1
   2e85c:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   2e860:	cmp	x8, x24
   2e864:	b.ls	2e8b4 <vasnprintf@@Base+0xb00>  // b.plast
   2e868:	lsl	x9, x24, #1
   2e86c:	cmp	x24, #0x0
   2e870:	csinv	x9, x9, xzr, ge  // ge = tcont
   2e874:	mov	w10, #0xc                   	// #12
   2e878:	csel	x9, x10, x9, eq  // eq = none
   2e87c:	ldr	x22, [x19, #32]
   2e880:	cmp	x8, x9
   2e884:	csel	x24, x8, x9, hi  // hi = pmore
   2e888:	cmn	x24, #0x1
   2e88c:	b.eq	2e744 <vasnprintf@@Base+0x990>  // b.none
   2e890:	mov	x26, x23
   2e894:	cmp	x14, x20
   2e898:	b.eq	2e9b4 <vasnprintf@@Base+0xc00>  // b.none
   2e89c:	cbz	x14, 2e9b4 <vasnprintf@@Base+0xc00>
   2e8a0:	mov	x0, x14
   2e8a4:	mov	x1, x24
   2e8a8:	mov	x23, x14
   2e8ac:	bl	a720 <realloc@plt>
   2e8b0:	b	2e9c0 <vasnprintf@@Base+0xc0c>
   2e8b4:	ldr	x22, [x19, #32]
   2e8b8:	mov	x21, x14
   2e8bc:	ldr	x25, [x19]
   2e8c0:	cmp	x21, x20
   2e8c4:	strb	wzr, [x21, x23]
   2e8c8:	b.eq	2e90c <vasnprintf@@Base+0xb58>  // b.none
   2e8cc:	add	x1, x23, #0x1
   2e8d0:	cmp	x1, x24
   2e8d4:	b.cs	2e908 <vasnprintf@@Base+0xb54>  // b.hs, b.nlast
   2e8d8:	mov	x0, x21
   2e8dc:	bl	a720 <realloc@plt>
   2e8e0:	cmp	x0, #0x0
   2e8e4:	csel	x20, x21, x0, eq  // eq = none
   2e8e8:	b	2e90c <vasnprintf@@Base+0xb58>
   2e8ec:	ldr	x22, [x19, #32]
   2e8f0:	ldr	x14, [x19, #56]
   2e8f4:	add	x28, x19, #0x168
   2e8f8:	b	2e744 <vasnprintf@@Base+0x990>
   2e8fc:	ldr	x22, [x19, #32]
   2e900:	mov	x14, x23
   2e904:	b	2e744 <vasnprintf@@Base+0x990>
   2e908:	mov	x20, x21
   2e90c:	cbz	x22, 2e918 <vasnprintf@@Base+0xb64>
   2e910:	mov	x0, x22
   2e914:	bl	a960 <free@plt>
   2e918:	ldr	x0, [x28, #8]
   2e91c:	add	x8, x19, #0x168
   2e920:	add	x8, x8, #0x20
   2e924:	cmp	x0, x8
   2e928:	b.eq	2e930 <vasnprintf@@Base+0xb7c>  // b.none
   2e92c:	bl	a960 <free@plt>
   2e930:	ldr	x0, [x19, #120]
   2e934:	add	x8, x19, #0x70
   2e938:	add	x8, x8, #0x10
   2e93c:	cmp	x0, x8
   2e940:	b.eq	2e948 <vasnprintf@@Base+0xb94>  // b.none
   2e944:	bl	a960 <free@plt>
   2e948:	str	x23, [x25]
   2e94c:	b	2e7a4 <vasnprintf@@Base+0x9f0>
   2e950:	mov	w21, #0x16                  	// #22
   2e954:	cmp	x14, x20
   2e958:	b.eq	2e968 <vasnprintf@@Base+0xbb4>  // b.none
   2e95c:	cbz	x14, 2e968 <vasnprintf@@Base+0xbb4>
   2e960:	mov	x0, x14
   2e964:	bl	a960 <free@plt>
   2e968:	ldr	x0, [x19, #32]
   2e96c:	cbz	x0, 2e974 <vasnprintf@@Base+0xbc0>
   2e970:	bl	a960 <free@plt>
   2e974:	ldr	x0, [x23, #8]
   2e978:	add	x8, x19, #0x168
   2e97c:	add	x8, x8, #0x20
   2e980:	cmp	x0, x8
   2e984:	b.eq	2e98c <vasnprintf@@Base+0xbd8>  // b.none
   2e988:	bl	a960 <free@plt>
   2e98c:	ldr	x0, [x19, #120]
   2e990:	add	x8, x19, #0x70
   2e994:	add	x8, x8, #0x10
   2e998:	cmp	x0, x8
   2e99c:	b.eq	2e9a4 <vasnprintf@@Base+0xbf0>  // b.none
   2e9a0:	bl	a960 <free@plt>
   2e9a4:	ldr	x8, [x19, #56]
   2e9a8:	mov	x20, xzr
   2e9ac:	str	w21, [x8]
   2e9b0:	b	2e7a4 <vasnprintf@@Base+0x9f0>
   2e9b4:	mov	x0, x24
   2e9b8:	mov	x23, x14
   2e9bc:	bl	a540 <malloc@plt>
   2e9c0:	mov	x21, x0
   2e9c4:	cbz	x0, 2e9ec <vasnprintf@@Base+0xc38>
   2e9c8:	cbz	x26, 2e9f4 <vasnprintf@@Base+0xc40>
   2e9cc:	cmp	x23, x20
   2e9d0:	b.ne	2e9f4 <vasnprintf@@Base+0xc40>  // b.any
   2e9d4:	mov	x0, x21
   2e9d8:	mov	x1, x20
   2e9dc:	mov	x2, x26
   2e9e0:	mov	x23, x26
   2e9e4:	bl	a210 <memcpy@plt>
   2e9e8:	b	2e8bc <vasnprintf@@Base+0xb08>
   2e9ec:	mov	x14, x23
   2e9f0:	b	2e744 <vasnprintf@@Base+0x990>
   2e9f4:	ldr	x25, [x19]
   2e9f8:	mov	x23, x26
   2e9fc:	b	2e8c0 <vasnprintf@@Base+0xb0c>
   2ea00:	bl	a840 <abort@plt>
   2ea04:	nop
   2ea08:	adrp	x2, 43000 <base_len@@Base+0x2ea54>
   2ea0c:	mov	x1, #0x0                   	// #0
   2ea10:	ldr	x2, [x2, #1648]
   2ea14:	b	a420 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000002ea18 <.fini>:
   2ea18:	stp	x29, x30, [sp, #-16]!
   2ea1c:	mov	x29, sp
   2ea20:	ldp	x29, x30, [sp], #16
   2ea24:	ret
