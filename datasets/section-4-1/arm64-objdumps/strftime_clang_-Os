
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//strftime_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000008b0 <_init>:
 8b0:	stp	x29, x30, [sp, #-16]!
 8b4:	mov	x29, sp
 8b8:	bl	9d0 <call_weak_fn>
 8bc:	ldp	x29, x30, [sp], #16
 8c0:	ret

Disassembly of section .plt:

00000000000008d0 <.plt>:
 8d0:	stp	x16, x30, [sp, #-16]!
 8d4:	adrp	x16, 10000 <__FRAME_END__+0xf25c>
 8d8:	ldr	x17, [x16, #4088]
 8dc:	add	x16, x16, #0xff8
 8e0:	br	x17
 8e4:	nop
 8e8:	nop
 8ec:	nop

00000000000008f0 <strlen@plt>:
 8f0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 8f4:	ldr	x17, [x16]
 8f8:	add	x16, x16, #0x0
 8fc:	br	x17

0000000000000900 <__cxa_finalize@plt>:
 900:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 904:	ldr	x17, [x16, #8]
 908:	add	x16, x16, #0x8
 90c:	br	x17

0000000000000910 <strftime@plt>:
 910:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 914:	ldr	x17, [x16, #16]
 918:	add	x16, x16, #0x10
 91c:	br	x17

0000000000000920 <localtime@plt>:
 920:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 924:	ldr	x17, [x16, #24]
 928:	add	x16, x16, #0x18
 92c:	br	x17

0000000000000930 <time@plt>:
 930:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 934:	ldr	x17, [x16, #32]
 938:	add	x16, x16, #0x20
 93c:	br	x17

0000000000000940 <xrealloc@plt>:
 940:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 944:	ldr	x17, [x16, #40]
 948:	add	x16, x16, #0x28
 94c:	br	x17

0000000000000950 <builtin_usage@plt>:
 950:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 954:	ldr	x17, [x16, #48]
 958:	add	x16, x16, #0x30
 95c:	br	x17

0000000000000960 <__gmon_start__@plt>:
 960:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 964:	ldr	x17, [x16, #56]
 968:	add	x16, x16, #0x38
 96c:	br	x17

0000000000000970 <puts@plt>:
 970:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 974:	ldr	x17, [x16, #64]
 978:	add	x16, x16, #0x40
 97c:	br	x17

0000000000000980 <free@plt>:
 980:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 984:	ldr	x17, [x16, #72]
 988:	add	x16, x16, #0x48
 98c:	br	x17

0000000000000990 <no_options@plt>:
 990:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 994:	ldr	x17, [x16, #80]
 998:	add	x16, x16, #0x50
 99c:	br	x17

00000000000009a0 <legal_number@plt>:
 9a0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 9a4:	ldr	x17, [x16, #88]
 9a8:	add	x16, x16, #0x58
 9ac:	br	x17

00000000000009b0 <putchar@plt>:
 9b0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 9b4:	ldr	x17, [x16, #96]
 9b8:	add	x16, x16, #0x60
 9bc:	br	x17

00000000000009c0 <sh_invalidnum@plt>:
 9c0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 9c4:	ldr	x17, [x16, #104]
 9c8:	add	x16, x16, #0x68
 9cc:	br	x17

Disassembly of section .text:

00000000000009d0 <call_weak_fn>:
 9d0:	adrp	x0, 10000 <__FRAME_END__+0xf25c>
 9d4:	ldr	x0, [x0, #4056]
 9d8:	cbz	x0, 9e0 <call_weak_fn+0x10>
 9dc:	b	960 <__gmon_start__@plt>
 9e0:	ret
 9e4:	nop

00000000000009e8 <deregister_tm_clones>:
 9e8:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 9ec:	add	x0, x0, #0xe0
 9f0:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 9f4:	add	x1, x1, #0xe0
 9f8:	cmp	x1, x0
 9fc:	b.eq	a14 <deregister_tm_clones+0x2c>  // b.none
 a00:	adrp	x1, 10000 <__FRAME_END__+0xf25c>
 a04:	ldr	x1, [x1, #4040]
 a08:	cbz	x1, a14 <deregister_tm_clones+0x2c>
 a0c:	mov	x16, x1
 a10:	br	x16
 a14:	ret

0000000000000a18 <register_tm_clones>:
 a18:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 a1c:	add	x0, x0, #0xe0
 a20:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 a24:	add	x1, x1, #0xe0
 a28:	sub	x1, x1, x0
 a2c:	lsr	x2, x1, #63
 a30:	add	x1, x2, x1, asr #3
 a34:	cmp	xzr, x1, asr #1
 a38:	asr	x1, x1, #1
 a3c:	b.eq	a54 <register_tm_clones+0x3c>  // b.none
 a40:	adrp	x2, 10000 <__FRAME_END__+0xf25c>
 a44:	ldr	x2, [x2, #4064]
 a48:	cbz	x2, a54 <register_tm_clones+0x3c>
 a4c:	mov	x16, x2
 a50:	br	x16
 a54:	ret

0000000000000a58 <__do_global_dtors_aux>:
 a58:	stp	x29, x30, [sp, #-32]!
 a5c:	mov	x29, sp
 a60:	str	x19, [sp, #16]
 a64:	adrp	x19, 11000 <strlen@GLIBC_2.17>
 a68:	ldrb	w0, [x19, #224]
 a6c:	cbnz	w0, a94 <__do_global_dtors_aux+0x3c>
 a70:	adrp	x0, 10000 <__FRAME_END__+0xf25c>
 a74:	ldr	x0, [x0, #4048]
 a78:	cbz	x0, a88 <__do_global_dtors_aux+0x30>
 a7c:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 a80:	ldr	x0, [x0, #112]
 a84:	bl	900 <__cxa_finalize@plt>
 a88:	bl	9e8 <deregister_tm_clones>
 a8c:	mov	w0, #0x1                   	// #1
 a90:	strb	w0, [x19, #224]
 a94:	ldr	x19, [sp, #16]
 a98:	ldp	x29, x30, [sp], #32
 a9c:	ret

0000000000000aa0 <frame_dummy>:
 aa0:	b	a18 <register_tm_clones>

0000000000000aa4 <strftime_builtin>:
 aa4:	sub	sp, sp, #0x50
 aa8:	stp	x29, x30, [sp, #16]
 aac:	stp	x24, x23, [sp, #32]
 ab0:	stp	x22, x21, [sp, #48]
 ab4:	stp	x20, x19, [sp, #64]
 ab8:	add	x29, sp, #0x10
 abc:	cbz	x0, b1c <strftime_builtin+0x78>
 ac0:	mov	x20, x0
 ac4:	bl	990 <no_options@plt>
 ac8:	cbnz	w0, b20 <strftime_builtin+0x7c>
 acc:	ldr	x8, [x20, #8]
 ad0:	ldr	x19, [x8]
 ad4:	cbz	x19, b28 <strftime_builtin+0x84>
 ad8:	ldrb	w8, [x19]
 adc:	cbz	w8, b28 <strftime_builtin+0x84>
 ae0:	ldr	x20, [x20]
 ae4:	cbz	x20, b34 <strftime_builtin+0x90>
 ae8:	ldr	x8, [x20, #8]
 aec:	ldr	x0, [x8]
 af0:	cbz	x0, b34 <strftime_builtin+0x90>
 af4:	mov	x1, sp
 af8:	bl	9a0 <legal_number@plt>
 afc:	cbz	w0, b08 <strftime_builtin+0x64>
 b00:	ldr	x0, [sp]
 b04:	tbz	x0, #63, b3c <strftime_builtin+0x98>
 b08:	ldr	x8, [x20, #8]
 b0c:	ldr	x0, [x8]
 b10:	bl	9c0 <sh_invalidnum@plt>
 b14:	mov	w0, #0x1                   	// #1
 b18:	b	ba8 <strftime_builtin+0x104>
 b1c:	bl	950 <builtin_usage@plt>
 b20:	mov	w0, #0x102                 	// #258
 b24:	b	ba8 <strftime_builtin+0x104>
 b28:	mov	w0, #0xa                   	// #10
 b2c:	bl	9b0 <putchar@plt>
 b30:	b	ba4 <strftime_builtin+0x100>
 b34:	mov	x0, xzr
 b38:	bl	930 <time@plt>
 b3c:	str	x0, [sp, #8]
 b40:	add	x0, sp, #0x8
 b44:	bl	920 <localtime@plt>
 b48:	mov	x20, x0
 b4c:	mov	x0, x19
 b50:	bl	8f0 <strlen@plt>
 b54:	lsl	x23, x0, #2
 b58:	mov	x21, xzr
 b5c:	mov	w24, #0x3                   	// #3
 b60:	mov	x22, x23
 b64:	mov	x0, x21
 b68:	mov	x1, x22
 b6c:	bl	940 <xrealloc@plt>
 b70:	mov	x1, x22
 b74:	mov	x2, x19
 b78:	mov	x3, x20
 b7c:	mov	x21, x0
 b80:	bl	910 <strftime@plt>
 b84:	cbnz	x0, b94 <strftime_builtin+0xf0>
 b88:	subs	x24, x24, #0x1
 b8c:	add	x22, x22, x23
 b90:	b.ne	b64 <strftime_builtin+0xc0>  // b.any
 b94:	mov	x0, x21
 b98:	bl	970 <puts@plt>
 b9c:	mov	x0, x21
 ba0:	bl	980 <free@plt>
 ba4:	mov	w0, wzr
 ba8:	ldp	x20, x19, [sp, #64]
 bac:	ldp	x22, x21, [sp, #48]
 bb0:	ldp	x24, x23, [sp, #32]
 bb4:	ldp	x29, x30, [sp, #16]
 bb8:	add	sp, sp, #0x50
 bbc:	ret

Disassembly of section .fini:

0000000000000bc0 <_fini>:
 bc0:	stp	x29, x30, [sp, #-16]!
 bc4:	mov	x29, sp
 bc8:	ldp	x29, x30, [sp], #16
 bcc:	ret
