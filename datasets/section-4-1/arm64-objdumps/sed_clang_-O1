
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004026c8 <.init>:
  4026c8:	stp	x29, x30, [sp, #-16]!
  4026cc:	mov	x29, sp
  4026d0:	bl	402e90 <wcrtomb@plt+0x60>
  4026d4:	ldp	x29, x30, [sp], #16
  4026d8:	ret

Disassembly of section .plt:

00000000004026e0 <mbrtowc@plt-0x20>:
  4026e0:	stp	x16, x30, [sp, #-16]!
  4026e4:	adrp	x16, 431000 <_obstack_memory_used@@Base+0x1f17c>
  4026e8:	ldr	x17, [x16, #4088]
  4026ec:	add	x16, x16, #0xff8
  4026f0:	br	x17
  4026f4:	nop
  4026f8:	nop
  4026fc:	nop

0000000000402700 <mbrtowc@plt>:
  402700:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16]
  402708:	add	x16, x16, #0x0
  40270c:	br	x17

0000000000402710 <memcpy@plt>:
  402710:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #8]
  402718:	add	x16, x16, #0x8
  40271c:	br	x17

0000000000402720 <memmove@plt>:
  402720:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #16]
  402728:	add	x16, x16, #0x10
  40272c:	br	x17

0000000000402730 <isalpha@plt>:
  402730:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #24]
  402738:	add	x16, x16, #0x18
  40273c:	br	x17

0000000000402740 <fwrite_unlocked@plt>:
  402740:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #32]
  402748:	add	x16, x16, #0x20
  40274c:	br	x17

0000000000402750 <strlen@plt>:
  402750:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #40]
  402758:	add	x16, x16, #0x28
  40275c:	br	x17

0000000000402760 <__sprintf_chk@plt>:
  402760:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #48]
  402768:	add	x16, x16, #0x30
  40276c:	br	x17

0000000000402770 <acl_set_fd@plt>:
  402770:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #56]
  402778:	add	x16, x16, #0x38
  40277c:	br	x17

0000000000402780 <exit@plt>:
  402780:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #64]
  402788:	add	x16, x16, #0x40
  40278c:	br	x17

0000000000402790 <error@plt>:
  402790:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #72]
  402798:	add	x16, x16, #0x48
  40279c:	br	x17

00000000004027a0 <acl_entries@plt>:
  4027a0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #80]
  4027a8:	add	x16, x16, #0x50
  4027ac:	br	x17

00000000004027b0 <wctype@plt>:
  4027b0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #88]
  4027b8:	add	x16, x16, #0x58
  4027bc:	br	x17

00000000004027c0 <readlink@plt>:
  4027c0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #96]
  4027c8:	add	x16, x16, #0x60
  4027cc:	br	x17

00000000004027d0 <ferror_unlocked@plt>:
  4027d0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #104]
  4027d8:	add	x16, x16, #0x68
  4027dc:	br	x17

00000000004027e0 <ftell@plt>:
  4027e0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #112]
  4027e8:	add	x16, x16, #0x70
  4027ec:	br	x17

00000000004027f0 <__cxa_atexit@plt>:
  4027f0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #120]
  4027f8:	add	x16, x16, #0x78
  4027fc:	br	x17

0000000000402800 <qsort@plt>:
  402800:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #128]
  402808:	add	x16, x16, #0x80
  40280c:	br	x17

0000000000402810 <setvbuf@plt>:
  402810:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #136]
  402818:	add	x16, x16, #0x88
  40281c:	br	x17

0000000000402820 <isblank@plt>:
  402820:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #144]
  402828:	add	x16, x16, #0x90
  40282c:	br	x17

0000000000402830 <__fwriting@plt>:
  402830:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #152]
  402838:	add	x16, x16, #0x98
  40283c:	br	x17

0000000000402840 <fileno@plt>:
  402840:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #160]
  402848:	add	x16, x16, #0xa0
  40284c:	br	x17

0000000000402850 <putc_unlocked@plt>:
  402850:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #168]
  402858:	add	x16, x16, #0xa8
  40285c:	br	x17

0000000000402860 <acl_delete_def_file@plt>:
  402860:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #176]
  402868:	add	x16, x16, #0xb0
  40286c:	br	x17

0000000000402870 <fclose@plt>:
  402870:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #184]
  402878:	add	x16, x16, #0xb8
  40287c:	br	x17

0000000000402880 <atoi@plt>:
  402880:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #192]
  402888:	add	x16, x16, #0xc0
  40288c:	br	x17

0000000000402890 <wctob@plt>:
  402890:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #200]
  402898:	add	x16, x16, #0xc8
  40289c:	br	x17

00000000004028a0 <nl_langinfo@plt>:
  4028a0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #208]
  4028a8:	add	x16, x16, #0xd0
  4028ac:	br	x17

00000000004028b0 <fopen@plt>:
  4028b0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #216]
  4028b8:	add	x16, x16, #0xd8
  4028bc:	br	x17

00000000004028c0 <isspace@plt>:
  4028c0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #224]
  4028c8:	add	x16, x16, #0xe0
  4028cc:	br	x17

00000000004028d0 <iswctype@plt>:
  4028d0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #232]
  4028d8:	add	x16, x16, #0xe8
  4028dc:	br	x17

00000000004028e0 <malloc@plt>:
  4028e0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #240]
  4028e8:	add	x16, x16, #0xf0
  4028ec:	br	x17

00000000004028f0 <toupper@plt>:
  4028f0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #248]
  4028f8:	add	x16, x16, #0xf8
  4028fc:	br	x17

0000000000402900 <chmod@plt>:
  402900:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #256]
  402908:	add	x16, x16, #0x100
  40290c:	br	x17

0000000000402910 <getdelim@plt>:
  402910:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #264]
  402918:	add	x16, x16, #0x108
  40291c:	br	x17

0000000000402920 <islower@plt>:
  402920:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #272]
  402928:	add	x16, x16, #0x110
  40292c:	br	x17

0000000000402930 <isxdigit@plt>:
  402930:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #280]
  402938:	add	x16, x16, #0x118
  40293c:	br	x17

0000000000402940 <popen@plt>:
  402940:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #288]
  402948:	add	x16, x16, #0x120
  40294c:	br	x17

0000000000402950 <strncmp@plt>:
  402950:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #296]
  402958:	add	x16, x16, #0x128
  40295c:	br	x17

0000000000402960 <bindtextdomain@plt>:
  402960:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #304]
  402968:	add	x16, x16, #0x130
  40296c:	br	x17

0000000000402970 <isdigit@plt>:
  402970:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #312]
  402978:	add	x16, x16, #0x138
  40297c:	br	x17

0000000000402980 <__libc_start_main@plt>:
  402980:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #320]
  402988:	add	x16, x16, #0x140
  40298c:	br	x17

0000000000402990 <strverscmp@plt>:
  402990:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #328]
  402998:	add	x16, x16, #0x148
  40299c:	br	x17

00000000004029a0 <__printf_chk@plt>:
  4029a0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #336]
  4029a8:	add	x16, x16, #0x150
  4029ac:	br	x17

00000000004029b0 <acl_get_tag_type@plt>:
  4029b0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #344]
  4029b8:	add	x16, x16, #0x158
  4029bc:	br	x17

00000000004029c0 <memset@plt>:
  4029c0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #352]
  4029c8:	add	x16, x16, #0x160
  4029cc:	br	x17

00000000004029d0 <fdopen@plt>:
  4029d0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #360]
  4029d8:	add	x16, x16, #0x168
  4029dc:	br	x17

00000000004029e0 <fchmod@plt>:
  4029e0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #368]
  4029e8:	add	x16, x16, #0x170
  4029ec:	br	x17

00000000004029f0 <putchar_unlocked@plt>:
  4029f0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #376]
  4029f8:	add	x16, x16, #0x178
  4029fc:	br	x17

0000000000402a00 <__vfprintf_chk@plt>:
  402a00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #384]
  402a08:	add	x16, x16, #0x180
  402a0c:	br	x17

0000000000402a10 <calloc@plt>:
  402a10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #392]
  402a18:	add	x16, x16, #0x188
  402a1c:	br	x17

0000000000402a20 <bcmp@plt>:
  402a20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #400]
  402a28:	add	x16, x16, #0x190
  402a2c:	br	x17

0000000000402a30 <isupper@plt>:
  402a30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #408]
  402a38:	add	x16, x16, #0x198
  402a3c:	br	x17

0000000000402a40 <realloc@plt>:
  402a40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #416]
  402a48:	add	x16, x16, #0x1a0
  402a4c:	br	x17

0000000000402a50 <__ctype_toupper_loc@plt>:
  402a50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #424]
  402a58:	add	x16, x16, #0x1a8
  402a5c:	br	x17

0000000000402a60 <acl_set_file@plt>:
  402a60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #432]
  402a68:	add	x16, x16, #0x1b0
  402a6c:	br	x17

0000000000402a70 <rewind@plt>:
  402a70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #440]
  402a78:	add	x16, x16, #0x1b8
  402a7c:	br	x17

0000000000402a80 <acl_from_mode@plt>:
  402a80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #448]
  402a88:	add	x16, x16, #0x1c0
  402a8c:	br	x17

0000000000402a90 <acl_get_fd@plt>:
  402a90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #456]
  402a98:	add	x16, x16, #0x1c8
  402a9c:	br	x17

0000000000402aa0 <strdup@plt>:
  402aa0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #464]
  402aa8:	add	x16, x16, #0x1d0
  402aac:	br	x17

0000000000402ab0 <getc_unlocked@plt>:
  402ab0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #472]
  402ab8:	add	x16, x16, #0x1d8
  402abc:	br	x17

0000000000402ac0 <strerror@plt>:
  402ac0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #480]
  402ac8:	add	x16, x16, #0x1e0
  402acc:	br	x17

0000000000402ad0 <strrchr@plt>:
  402ad0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #488]
  402ad8:	add	x16, x16, #0x1e8
  402adc:	br	x17

0000000000402ae0 <__gmon_start__@plt>:
  402ae0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #496]
  402ae8:	add	x16, x16, #0x1f0
  402aec:	br	x17

0000000000402af0 <btowc@plt>:
  402af0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #504]
  402af8:	add	x16, x16, #0x1f8
  402afc:	br	x17

0000000000402b00 <abort@plt>:
  402b00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #512]
  402b08:	add	x16, x16, #0x200
  402b0c:	br	x17

0000000000402b10 <mkostemp@plt>:
  402b10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #520]
  402b18:	add	x16, x16, #0x208
  402b1c:	br	x17

0000000000402b20 <iscntrl@plt>:
  402b20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #528]
  402b28:	add	x16, x16, #0x210
  402b2c:	br	x17

0000000000402b30 <mbsinit@plt>:
  402b30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #536]
  402b38:	add	x16, x16, #0x218
  402b3c:	br	x17

0000000000402b40 <ispunct@plt>:
  402b40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #544]
  402b48:	add	x16, x16, #0x220
  402b4c:	br	x17

0000000000402b50 <puts@plt>:
  402b50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #552]
  402b58:	add	x16, x16, #0x228
  402b5c:	br	x17

0000000000402b60 <fread_unlocked@plt>:
  402b60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #560]
  402b68:	add	x16, x16, #0x230
  402b6c:	br	x17

0000000000402b70 <textdomain@plt>:
  402b70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #568]
  402b78:	add	x16, x16, #0x238
  402b7c:	br	x17

0000000000402b80 <getopt_long@plt>:
  402b80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #576]
  402b88:	add	x16, x16, #0x240
  402b8c:	br	x17

0000000000402b90 <__fprintf_chk@plt>:
  402b90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #584]
  402b98:	add	x16, x16, #0x248
  402b9c:	br	x17

0000000000402ba0 <strcmp@plt>:
  402ba0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #592]
  402ba8:	add	x16, x16, #0x250
  402bac:	br	x17

0000000000402bb0 <__ctype_b_loc@plt>:
  402bb0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #600]
  402bb8:	add	x16, x16, #0x258
  402bbc:	br	x17

0000000000402bc0 <acl_get_file@plt>:
  402bc0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #608]
  402bc8:	add	x16, x16, #0x260
  402bcc:	br	x17

0000000000402bd0 <free@plt>:
  402bd0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #616]
  402bd8:	add	x16, x16, #0x268
  402bdc:	br	x17

0000000000402be0 <ungetc@plt>:
  402be0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #624]
  402be8:	add	x16, x16, #0x270
  402bec:	br	x17

0000000000402bf0 <__ctype_get_mb_cur_max@plt>:
  402bf0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #632]
  402bf8:	add	x16, x16, #0x278
  402bfc:	br	x17

0000000000402c00 <acl_get_entry@plt>:
  402c00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #640]
  402c08:	add	x16, x16, #0x280
  402c0c:	br	x17

0000000000402c10 <strchr@plt>:
  402c10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #648]
  402c18:	add	x16, x16, #0x288
  402c1c:	br	x17

0000000000402c20 <feof_unlocked@plt>:
  402c20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #656]
  402c28:	add	x16, x16, #0x290
  402c2c:	br	x17

0000000000402c30 <memrchr@plt>:
  402c30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #664]
  402c38:	add	x16, x16, #0x298
  402c3c:	br	x17

0000000000402c40 <rename@plt>:
  402c40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #672]
  402c48:	add	x16, x16, #0x2a0
  402c4c:	br	x17

0000000000402c50 <fwrite@plt>:
  402c50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #680]
  402c58:	add	x16, x16, #0x2a8
  402c5c:	br	x17

0000000000402c60 <fflush_unlocked@plt>:
  402c60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #688]
  402c68:	add	x16, x16, #0x2b0
  402c6c:	br	x17

0000000000402c70 <dcngettext@plt>:
  402c70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #696]
  402c78:	add	x16, x16, #0x2b8
  402c7c:	br	x17

0000000000402c80 <strcpy@plt>:
  402c80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #704]
  402c88:	add	x16, x16, #0x2c0
  402c8c:	br	x17

0000000000402c90 <clearerr_unlocked@plt>:
  402c90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #712]
  402c98:	add	x16, x16, #0x2c8
  402c9c:	br	x17

0000000000402ca0 <__lxstat@plt>:
  402ca0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #720]
  402ca8:	add	x16, x16, #0x2d0
  402cac:	br	x17

0000000000402cb0 <memchr@plt>:
  402cb0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #728]
  402cb8:	add	x16, x16, #0x2d8
  402cbc:	br	x17

0000000000402cc0 <isatty@plt>:
  402cc0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #736]
  402cc8:	add	x16, x16, #0x2e0
  402ccc:	br	x17

0000000000402cd0 <isgraph@plt>:
  402cd0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #744]
  402cd8:	add	x16, x16, #0x2e8
  402cdc:	br	x17

0000000000402ce0 <iswalnum@plt>:
  402ce0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #752]
  402ce8:	add	x16, x16, #0x2f0
  402cec:	br	x17

0000000000402cf0 <__fxstat@plt>:
  402cf0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #760]
  402cf8:	add	x16, x16, #0x2f8
  402cfc:	br	x17

0000000000402d00 <strstr@plt>:
  402d00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #768]
  402d08:	add	x16, x16, #0x300
  402d0c:	br	x17

0000000000402d10 <dcgettext@plt>:
  402d10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #776]
  402d18:	add	x16, x16, #0x308
  402d1c:	br	x17

0000000000402d20 <fputs_unlocked@plt>:
  402d20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #784]
  402d28:	add	x16, x16, #0x310
  402d2c:	br	x17

0000000000402d30 <strcoll@plt>:
  402d30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #792]
  402d38:	add	x16, x16, #0x318
  402d3c:	br	x17

0000000000402d40 <isalnum@plt>:
  402d40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #800]
  402d48:	add	x16, x16, #0x320
  402d4c:	br	x17

0000000000402d50 <pclose@plt>:
  402d50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #808]
  402d58:	add	x16, x16, #0x328
  402d5c:	br	x17

0000000000402d60 <towupper@plt>:
  402d60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #816]
  402d68:	add	x16, x16, #0x330
  402d6c:	br	x17

0000000000402d70 <iswprint@plt>:
  402d70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #824]
  402d78:	add	x16, x16, #0x338
  402d7c:	br	x17

0000000000402d80 <umask@plt>:
  402d80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #832]
  402d88:	add	x16, x16, #0x340
  402d8c:	br	x17

0000000000402d90 <__assert_fail@plt>:
  402d90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #840]
  402d98:	add	x16, x16, #0x348
  402d9c:	br	x17

0000000000402da0 <__errno_location@plt>:
  402da0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #848]
  402da8:	add	x16, x16, #0x350
  402dac:	br	x17

0000000000402db0 <tolower@plt>:
  402db0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #856]
  402db8:	add	x16, x16, #0x358
  402dbc:	br	x17

0000000000402dc0 <getenv@plt>:
  402dc0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #864]
  402dc8:	add	x16, x16, #0x360
  402dcc:	br	x17

0000000000402dd0 <unlink@plt>:
  402dd0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #872]
  402dd8:	add	x16, x16, #0x368
  402ddc:	br	x17

0000000000402de0 <fchown@plt>:
  402de0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #880]
  402de8:	add	x16, x16, #0x370
  402dec:	br	x17

0000000000402df0 <towlower@plt>:
  402df0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #888]
  402df8:	add	x16, x16, #0x378
  402dfc:	br	x17

0000000000402e00 <isprint@plt>:
  402e00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #896]
  402e08:	add	x16, x16, #0x380
  402e0c:	br	x17

0000000000402e10 <setlocale@plt>:
  402e10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #904]
  402e18:	add	x16, x16, #0x388
  402e1c:	br	x17

0000000000402e20 <acl_free@plt>:
  402e20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #912]
  402e28:	add	x16, x16, #0x390
  402e2c:	br	x17

0000000000402e30 <wcrtomb@plt>:
  402e30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #920]
  402e38:	add	x16, x16, #0x398
  402e3c:	br	x17

Disassembly of section .text:

0000000000402e40 <_obstack_begin@@Base-0xed24>:
  402e40:	mov	x29, #0x0                   	// #0
  402e44:	mov	x30, #0x0                   	// #0
  402e48:	mov	x5, x0
  402e4c:	ldr	x1, [sp]
  402e50:	add	x2, sp, #0x8
  402e54:	mov	x6, sp
  402e58:	movz	x0, #0x0, lsl #48
  402e5c:	movk	x0, #0x0, lsl #32
  402e60:	movk	x0, #0x40, lsl #16
  402e64:	movk	x0, #0x8950
  402e68:	movz	x3, #0x0, lsl #48
  402e6c:	movk	x3, #0x0, lsl #32
  402e70:	movk	x3, #0x41, lsl #16
  402e74:	movk	x3, #0xef90
  402e78:	movz	x4, #0x0, lsl #48
  402e7c:	movk	x4, #0x0, lsl #32
  402e80:	movk	x4, #0x41, lsl #16
  402e84:	movk	x4, #0xf010
  402e88:	bl	402980 <__libc_start_main@plt>
  402e8c:	bl	402b00 <abort@plt>
  402e90:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x1f17c>
  402e94:	ldr	x0, [x0, #4064]
  402e98:	cbz	x0, 402ea0 <wcrtomb@plt+0x70>
  402e9c:	b	402ae0 <__gmon_start__@plt>
  402ea0:	ret
  402ea4:	nop
  402ea8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  402eac:	add	x0, x0, #0x4f8
  402eb0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  402eb4:	add	x1, x1, #0x4f8
  402eb8:	cmp	x1, x0
  402ebc:	b.eq	402ed4 <wcrtomb@plt+0xa4>  // b.none
  402ec0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  402ec4:	ldr	x1, [x1, #96]
  402ec8:	cbz	x1, 402ed4 <wcrtomb@plt+0xa4>
  402ecc:	mov	x16, x1
  402ed0:	br	x16
  402ed4:	ret
  402ed8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  402edc:	add	x0, x0, #0x4f8
  402ee0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  402ee4:	add	x1, x1, #0x4f8
  402ee8:	sub	x1, x1, x0
  402eec:	lsr	x2, x1, #63
  402ef0:	add	x1, x2, x1, asr #3
  402ef4:	cmp	xzr, x1, asr #1
  402ef8:	asr	x1, x1, #1
  402efc:	b.eq	402f14 <wcrtomb@plt+0xe4>  // b.none
  402f00:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xd17c>
  402f04:	ldr	x2, [x2, #104]
  402f08:	cbz	x2, 402f14 <wcrtomb@plt+0xe4>
  402f0c:	mov	x16, x2
  402f10:	br	x16
  402f14:	ret
  402f18:	stp	x29, x30, [sp, #-32]!
  402f1c:	mov	x29, sp
  402f20:	str	x19, [sp, #16]
  402f24:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x2017c>
  402f28:	ldrb	w0, [x19, #1328]
  402f2c:	cbnz	w0, 402f3c <wcrtomb@plt+0x10c>
  402f30:	bl	402ea8 <wcrtomb@plt+0x78>
  402f34:	mov	w0, #0x1                   	// #1
  402f38:	strb	w0, [x19, #1328]
  402f3c:	ldr	x19, [sp, #16]
  402f40:	ldp	x29, x30, [sp], #32
  402f44:	ret
  402f48:	b	402ed8 <wcrtomb@plt+0xa8>
  402f4c:	stp	x29, x30, [sp, #-32]!
  402f50:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  402f54:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  402f58:	stp	x20, x19, [sp, #16]
  402f5c:	ldr	x8, [x8, #1336]
  402f60:	ldr	x20, [x9, #1280]
  402f64:	mov	x19, x0
  402f68:	mov	x29, sp
  402f6c:	cbnz	x8, 402fb0 <wcrtomb@plt+0x180>
  402f70:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  402f74:	add	x1, x1, #0x722
  402f78:	mov	w2, #0x5                   	// #5
  402f7c:	mov	x0, xzr
  402f80:	bl	402d10 <dcgettext@plt>
  402f84:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  402f88:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  402f8c:	adrp	x11, 432000 <_obstack_memory_used@@Base+0x2017c>
  402f90:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  402f94:	ldr	x3, [x8, #1968]
  402f98:	ldr	x8, [x10, #1552]
  402f9c:	ldr	x10, [x11, #1544]
  402fa0:	ldr	x4, [x9, #1352]
  402fa4:	mov	x2, x0
  402fa8:	sub	x5, x8, x10
  402fac:	b	402fdc <wcrtomb@plt+0x1ac>
  402fb0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  402fb4:	add	x1, x1, #0x708
  402fb8:	mov	w2, #0x5                   	// #5
  402fbc:	mov	x0, xzr
  402fc0:	bl	402d10 <dcgettext@plt>
  402fc4:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  402fc8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  402fcc:	add	x9, x9, #0x538
  402fd0:	ldr	x3, [x8, #1968]
  402fd4:	ldp	x4, x5, [x9]
  402fd8:	mov	x2, x0
  402fdc:	mov	w1, #0x1                   	// #1
  402fe0:	mov	x0, x20
  402fe4:	mov	x6, x19
  402fe8:	bl	402b90 <__fprintf_chk@plt>
  402fec:	mov	w0, #0x1                   	// #1
  402ff0:	bl	402780 <exit@plt>
  402ff4:	sub	sp, sp, #0x70
  402ff8:	stp	x22, x21, [sp, #80]
  402ffc:	stp	x20, x19, [sp, #96]
  403000:	mov	x19, x0
  403004:	cmp	x1, #0x1
  403008:	mov	x22, x0
  40300c:	stp	x29, x30, [sp, #16]
  403010:	stp	x28, x27, [sp, #32]
  403014:	stp	x26, x25, [sp, #48]
  403018:	stp	x24, x23, [sp, #64]
  40301c:	add	x29, sp, #0x10
  403020:	str	xzr, [sp]
  403024:	b.lt	4032d8 <wcrtomb@plt+0x4a8>  // b.tstop
  403028:	mov	w20, w2
  40302c:	mov	w28, wzr
  403030:	add	x21, x19, x1
  403034:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  403038:	mov	x27, #0xffffffff00000000    	// #-4294967296
  40303c:	mov	x23, x19
  403040:	mov	x22, x19
  403044:	b	403070 <wcrtomb@plt+0x240>
  403048:	add	w8, w28, #0x1
  40304c:	cmp	w8, #0x2
  403050:	b.cs	403294 <wcrtomb@plt+0x464>  // b.hs, b.nlast
  403054:	mov	w28, wzr
  403058:	ldrb	w8, [x23], #1
  40305c:	strb	w8, [x22], #1
  403060:	mov	x24, x23
  403064:	cmp	x24, x21
  403068:	mov	x23, x24
  40306c:	b.cs	4032d8 <wcrtomb@plt+0x4a8>  // b.hs, b.nlast
  403070:	ldr	w8, [x26, #2292]
  403074:	cmp	w8, #0x1
  403078:	b.ne	40309c <wcrtomb@plt+0x26c>  // b.any
  40307c:	mov	w0, #0x1                   	// #1
  403080:	cmp	w0, #0x1
  403084:	b.eq	4030b8 <wcrtomb@plt+0x288>  // b.none
  403088:	lsl	x8, x0, #32
  40308c:	cmp	x8, x27
  403090:	b.ne	40315c <wcrtomb@plt+0x32c>  // b.any
  403094:	mov	w0, #0x1                   	// #1
  403098:	b	40316c <wcrtomb@plt+0x33c>
  40309c:	sub	x2, x21, x23
  4030a0:	mov	x3, sp
  4030a4:	mov	x0, xzr
  4030a8:	mov	x1, x23
  4030ac:	bl	411af4 <wcrtomb@plt+0xecc4>
  4030b0:	cmp	w0, #0x1
  4030b4:	b.ne	403088 <wcrtomb@plt+0x258>  // b.any
  4030b8:	ldrb	w8, [x23]
  4030bc:	cmp	w8, #0x5c
  4030c0:	b.ne	40310c <wcrtomb@plt+0x2dc>  // b.any
  4030c4:	cbnz	w28, 40310c <wcrtomb@plt+0x2dc>
  4030c8:	add	x25, x23, #0x1
  4030cc:	cmp	x25, x21
  4030d0:	b.cs	40310c <wcrtomb@plt+0x2dc>  // b.hs, b.nlast
  4030d4:	ldrb	w9, [x25]
  4030d8:	sub	w8, w9, #0x61
  4030dc:	cmp	w8, #0x17
  4030e0:	b.hi	403198 <wcrtomb@plt+0x368>  // b.pmore
  4030e4:	adrp	x11, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4030e8:	add	x11, x11, #0xa0
  4030ec:	adr	x9, 403100 <wcrtomb@plt+0x2d0>
  4030f0:	ldrb	w10, [x11, x8]
  4030f4:	add	x9, x9, x10, lsl #2
  4030f8:	mov	w3, #0xa                   	// #10
  4030fc:	br	x9
  403100:	mov	w28, wzr
  403104:	mov	w8, #0x7                   	// #7
  403108:	b	403288 <wcrtomb@plt+0x458>
  40310c:	cmp	w20, #0x2
  403110:	b.ne	403058 <wcrtomb@plt+0x228>  // b.any
  403114:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  403118:	ldr	w9, [x9, #2296]
  40311c:	cbz	w9, 403058 <wcrtomb@plt+0x228>
  403120:	sub	w9, w8, #0x2e
  403124:	cmp	w9, #0x2f
  403128:	b.hi	403058 <wcrtomb@plt+0x228>  // b.pmore
  40312c:	adrp	x12, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403130:	add	x12, x12, #0x70
  403134:	adr	x10, 403048 <wcrtomb@plt+0x218>
  403138:	ldrb	w11, [x12, x9]
  40313c:	add	x10, x10, x11, lsl #2
  403140:	br	x10
  403144:	cmn	w28, #0x1
  403148:	b.ne	403058 <wcrtomb@plt+0x228>  // b.any
  40314c:	ldurb	w9, [x23, #-1]
  403150:	cmp	w9, #0x5b
  403154:	csel	w28, w8, w28, eq  // eq = none
  403158:	b	403058 <wcrtomb@plt+0x228>
  40315c:	mov	x9, #0xfffffffe00000000    	// #-8589934592
  403160:	cmp	x8, x9
  403164:	b.eq	403094 <wcrtomb@plt+0x264>  // b.none
  403168:	cbz	w0, 403094 <wcrtomb@plt+0x264>
  40316c:	sxtw	x24, w0
  403170:	mov	x0, x22
  403174:	mov	x1, x23
  403178:	mov	x2, x24
  40317c:	bl	402720 <memmove@plt>
  403180:	add	x22, x22, x24
  403184:	add	x24, x23, x24
  403188:	b	403064 <wcrtomb@plt+0x234>
  40318c:	cmp	w28, #0x0
  403190:	csinv	w28, w28, wzr, ne  // ne = any
  403194:	b	403058 <wcrtomb@plt+0x228>
  403198:	cmp	w9, #0xa
  40319c:	b.ne	4031ac <wcrtomb@plt+0x37c>  // b.any
  4031a0:	mov	w28, wzr
  4031a4:	mov	w8, #0xa                   	// #10
  4031a8:	b	403288 <wcrtomb@plt+0x458>
  4031ac:	mov	w28, wzr
  4031b0:	cbz	w20, 4032c0 <wcrtomb@plt+0x490>
  4031b4:	mov	w8, #0x5c                  	// #92
  4031b8:	strb	w8, [x22], #1
  4031bc:	mov	x23, x25
  4031c0:	b	403058 <wcrtomb@plt+0x228>
  4031c4:	mov	w28, wzr
  4031c8:	mov	w8, #0xc                   	// #12
  4031cc:	b	403288 <wcrtomb@plt+0x458>
  4031d0:	add	x24, x23, #0x2
  4031d4:	cmp	x24, x21
  4031d8:	b.cs	4032ac <wcrtomb@plt+0x47c>  // b.hs, b.nlast
  4031dc:	bl	402a50 <__ctype_toupper_loc@plt>
  4031e0:	ldr	x8, [x0]
  4031e4:	ldrb	w9, [x24]
  4031e8:	ldr	w8, [x8, x9, lsl #2]
  4031ec:	eor	w8, w8, #0x40
  4031f0:	strb	w8, [x22], #1
  4031f4:	ldrb	w8, [x24]
  4031f8:	cmp	w8, #0x5c
  4031fc:	b.ne	4032c8 <wcrtomb@plt+0x498>  // b.any
  403200:	ldrb	w8, [x23, #3]
  403204:	cmp	w8, #0x5c
  403208:	b.ne	4032fc <wcrtomb@plt+0x4cc>  // b.any
  40320c:	mov	w8, #0x3                   	// #3
  403210:	b	4032cc <wcrtomb@plt+0x49c>
  403214:	mov	w3, #0x10                  	// #16
  403218:	b	403220 <wcrtomb@plt+0x3f0>
  40321c:	mov	w3, #0x8                   	// #8
  403220:	sub	x0, x29, #0x4
  403224:	mov	x1, x25
  403228:	mov	x2, x21
  40322c:	bl	403308 <wcrtomb@plt+0x4d8>
  403230:	cmp	w20, #0x1
  403234:	mov	x24, x0
  403238:	b.ne	403258 <wcrtomb@plt+0x428>  // b.any
  40323c:	ldurb	w8, [x29, #-4]
  403240:	cmp	w8, #0x5c
  403244:	b.eq	403250 <wcrtomb@plt+0x420>  // b.none
  403248:	cmp	w8, #0x26
  40324c:	b.ne	403258 <wcrtomb@plt+0x428>  // b.any
  403250:	mov	w8, #0x5c                  	// #92
  403254:	strb	w8, [x22], #1
  403258:	ldurb	w8, [x29, #-4]
  40325c:	mov	w28, wzr
  403260:	strb	w8, [x22], #1
  403264:	b	403064 <wcrtomb@plt+0x234>
  403268:	mov	w28, wzr
  40326c:	mov	w8, #0xd                   	// #13
  403270:	b	403288 <wcrtomb@plt+0x458>
  403274:	mov	w28, wzr
  403278:	mov	w8, #0x9                   	// #9
  40327c:	b	403288 <wcrtomb@plt+0x458>
  403280:	mov	w28, wzr
  403284:	mov	w8, #0xb                   	// #11
  403288:	strb	w8, [x22], #1
  40328c:	add	x24, x23, #0x2
  403290:	b	403064 <wcrtomb@plt+0x234>
  403294:	ldurb	w8, [x23, #-2]
  403298:	cmp	w28, w8
  40329c:	b.eq	403058 <wcrtomb@plt+0x228>  // b.none
  4032a0:	ldurb	w8, [x23, #-1]
  4032a4:	cmp	w28, w8
  4032a8:	b	403190 <wcrtomb@plt+0x360>
  4032ac:	mov	w28, wzr
  4032b0:	cbz	w20, 403064 <wcrtomb@plt+0x234>
  4032b4:	mov	w8, #0x5c                  	// #92
  4032b8:	strb	w8, [x22], #1
  4032bc:	b	403064 <wcrtomb@plt+0x234>
  4032c0:	mov	x23, x25
  4032c4:	b	403058 <wcrtomb@plt+0x228>
  4032c8:	mov	w8, #0x2                   	// #2
  4032cc:	mov	w28, wzr
  4032d0:	add	x24, x25, x8
  4032d4:	b	403064 <wcrtomb@plt+0x234>
  4032d8:	sub	x0, x22, x19
  4032dc:	ldp	x20, x19, [sp, #96]
  4032e0:	ldp	x22, x21, [sp, #80]
  4032e4:	ldp	x24, x23, [sp, #64]
  4032e8:	ldp	x26, x25, [sp, #48]
  4032ec:	ldp	x28, x27, [sp, #32]
  4032f0:	ldp	x29, x30, [sp, #16]
  4032f4:	add	sp, sp, #0x70
  4032f8:	ret
  4032fc:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403300:	add	x0, x0, #0x5b7
  403304:	bl	402f4c <wcrtomb@plt+0x11c>
  403308:	add	x8, x1, #0x1
  40330c:	cmp	x8, x2
  403310:	b.cs	4033b0 <wcrtomb@plt+0x580>  // b.hs, b.nlast
  403314:	adrp	x11, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403318:	mov	x10, xzr
  40331c:	mov	w9, wzr
  403320:	mov	w8, #0x1                   	// #1
  403324:	add	x11, x11, #0x62c
  403328:	add	x12, x1, x10
  40332c:	ldrb	w12, [x12, #1]
  403330:	sub	w12, w12, #0x30
  403334:	cmp	w12, #0x36
  403338:	b.hi	403348 <wcrtomb@plt+0x518>  // b.pmore
  40333c:	sxtb	x12, w12
  403340:	ldr	w12, [x11, x12, lsl #2]
  403344:	b	40334c <wcrtomb@plt+0x51c>
  403348:	mov	w12, #0xffffffff            	// #-1
  40334c:	cmp	w12, #0x0
  403350:	cset	w14, ge  // ge = tcont
  403354:	cmp	w12, w3
  403358:	madd	w13, w9, w3, w12
  40335c:	cset	w12, lt  // lt = tstop
  403360:	and	w15, w14, w12
  403364:	tst	w14, w12
  403368:	csel	w9, w13, w9, ne  // ne = any
  40336c:	cmp	w15, #0x1
  403370:	b.ne	4033d0 <wcrtomb@plt+0x5a0>  // b.any
  403374:	mul	w8, w8, w3
  403378:	cmp	w8, #0xff
  40337c:	add	x12, x10, #0x1
  403380:	b.gt	403398 <wcrtomb@plt+0x568>
  403384:	add	x10, x1, x10
  403388:	add	x10, x10, #0x2
  40338c:	cmp	x10, x2
  403390:	mov	x10, x12
  403394:	b.cc	403328 <wcrtomb@plt+0x4f8>  // b.lo, b.ul, b.last
  403398:	add	x8, x1, x12
  40339c:	add	x8, x8, #0x1
  4033a0:	add	x10, x12, #0x1
  4033a4:	cmp	x10, #0x1
  4033a8:	b.eq	4033c0 <wcrtomb@plt+0x590>  // b.none
  4033ac:	b	4033c4 <wcrtomb@plt+0x594>
  4033b0:	mov	w9, wzr
  4033b4:	mov	w10, #0x1                   	// #1
  4033b8:	cmp	x10, #0x1
  4033bc:	b.ne	4033c4 <wcrtomb@plt+0x594>  // b.any
  4033c0:	ldrb	w9, [x1]
  4033c4:	strb	w9, [x0]
  4033c8:	mov	x0, x8
  4033cc:	ret
  4033d0:	add	x8, x1, x10
  4033d4:	add	x8, x8, #0x1
  4033d8:	add	x10, x10, #0x1
  4033dc:	cmp	x10, #0x1
  4033e0:	b.eq	4033c0 <wcrtomb@plt+0x590>  // b.none
  4033e4:	b	4033c4 <wcrtomb@plt+0x594>
  4033e8:	stp	x29, x30, [sp, #-48]!
  4033ec:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4033f0:	str	x21, [sp, #16]
  4033f4:	add	x9, x1, x2
  4033f8:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  4033fc:	str	xzr, [x8, #1568]
  403400:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403404:	str	x9, [x21, #1560]
  403408:	ldr	x9, [x8, #1360]
  40340c:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  403410:	stp	x20, x19, [sp, #32]
  403414:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x2017c>
  403418:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  40341c:	add	x10, x10, #0x538
  403420:	add	x9, x9, #0x1
  403424:	mov	x29, sp
  403428:	str	x1, [x19, #1544]
  40342c:	str	x1, [x20, #1552]
  403430:	stp	xzr, xzr, [x10]
  403434:	str	x9, [x8, #1360]
  403438:	str	x9, [x10, #16]
  40343c:	bl	403468 <wcrtomb@plt+0x638>
  403440:	str	xzr, [x19, #1544]
  403444:	str	xzr, [x20, #1552]
  403448:	str	xzr, [x21, #1560]
  40344c:	ldp	x20, x19, [sp, #32]
  403450:	ldr	x21, [sp, #16]
  403454:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403458:	mov	w9, #0x1                   	// #1
  40345c:	strb	w9, [x8, #1368]
  403460:	ldp	x29, x30, [sp], #48
  403464:	ret
  403468:	sub	sp, sp, #0xb0
  40346c:	stp	x29, x30, [sp, #80]
  403470:	add	x29, sp, #0x50
  403474:	stp	x28, x27, [sp, #96]
  403478:	stp	x26, x25, [sp, #112]
  40347c:	stp	x24, x23, [sp, #128]
  403480:	stp	x22, x21, [sp, #144]
  403484:	stp	x20, x19, [sp, #160]
  403488:	stur	x0, [x29, #-8]
  40348c:	cbnz	x0, 4034cc <wcrtomb@plt+0x69c>
  403490:	mov	w0, #0x1                   	// #1
  403494:	mov	w1, #0x18                  	// #24
  403498:	bl	411a14 <wcrtomb@plt+0xebe4>
  40349c:	stur	x0, [x29, #-8]
  4034a0:	stp	xzr, xzr, [x0, #8]
  4034a4:	str	xzr, [x0]
  4034a8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4034ac:	adrp	x3, 411000 <wcrtomb@plt+0xe1d0>
  4034b0:	adrp	x4, 402000 <mbrtowc@plt-0x700>
  4034b4:	add	x0, x0, #0x598
  4034b8:	add	x3, x3, #0x9fc
  4034bc:	add	x4, x4, #0xbd0
  4034c0:	mov	x1, xzr
  4034c4:	mov	x2, xzr
  4034c8:	bl	411b64 <_obstack_begin@@Base>
  4034cc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4034d0:	ldr	x8, [x8, #1384]
  4034d4:	cbz	x8, 4034e4 <wcrtomb@plt+0x6b4>
  4034d8:	mov	w1, #0xa                   	// #10
  4034dc:	mov	x0, xzr
  4034e0:	bl	404248 <wcrtomb@plt+0x1418>
  4034e4:	mov	x27, #0x1                   	// #1
  4034e8:	movk	x27, #0x9010, lsl #32
  4034ec:	adrp	x25, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4034f0:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  4034f4:	mov	w20, #0x1                   	// #1
  4034f8:	movk	x27, #0x20, lsl #48
  4034fc:	add	x25, x25, #0xb8
  403500:	mov	w23, #0xffffffff            	// #-1
  403504:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  403508:	adrp	x28, 432000 <_obstack_memory_used@@Base+0x2017c>
  40350c:	b	40352c <wcrtomb@plt+0x6fc>
  403510:	str	w23, [x24, #24]
  403514:	bl	40489c <wcrtomb@plt+0x1a6c>
  403518:	bl	404838 <wcrtomb@plt+0x1a08>
  40351c:	ldur	x8, [x29, #-8]
  403520:	ldr	x9, [x8, #16]
  403524:	add	x9, x9, #0x1
  403528:	str	x9, [x8, #16]
  40352c:	bl	404384 <wcrtomb@plt+0x1554>
  403530:	cmp	w0, #0x3b
  403534:	b.eq	40352c <wcrtomb@plt+0x6fc>  // b.none
  403538:	mov	w19, w0
  40353c:	bl	402bb0 <__ctype_b_loc@plt>
  403540:	ldr	x8, [x0]
  403544:	ldrh	w8, [x8, w19, sxtw #1]
  403548:	tbnz	w8, #13, 40352c <wcrtomb@plt+0x6fc>
  40354c:	cmn	w19, #0x1
  403550:	b.eq	403da4 <wcrtomb@plt+0xf74>  // b.none
  403554:	mov	x21, x0
  403558:	sub	x0, x29, #0x8
  40355c:	bl	404414 <wcrtomb@plt+0x15e4>
  403560:	mov	x24, x0
  403564:	add	x0, sp, #0x28
  403568:	mov	w1, w19
  40356c:	bl	404474 <wcrtomb@plt+0x1644>
  403570:	tbz	w0, #0, 403608 <wcrtomb@plt+0x7d8>
  403574:	ldr	w8, [sp, #40]
  403578:	and	w8, w8, #0xfffffffe
  40357c:	cmp	w8, #0x4
  403580:	b.eq	403df4 <wcrtomb@plt+0xfc4>  // b.none
  403584:	add	x0, sp, #0x28
  403588:	mov	w1, #0x20                  	// #32
  40358c:	bl	411a40 <wcrtomb@plt+0xec10>
  403590:	str	x0, [x24]
  403594:	bl	404640 <wcrtomb@plt+0x1810>
  403598:	mov	w19, w0
  40359c:	cmp	w0, #0x2c
  4035a0:	b.ne	4035d0 <wcrtomb@plt+0x7a0>  // b.any
  4035a4:	bl	404640 <wcrtomb@plt+0x1810>
  4035a8:	mov	w1, w0
  4035ac:	add	x0, sp, #0x28
  4035b0:	bl	404474 <wcrtomb@plt+0x1644>
  4035b4:	tbz	w0, #0, 403e24 <wcrtomb@plt+0xff4>
  4035b8:	add	x0, sp, #0x28
  4035bc:	mov	w1, #0x20                  	// #32
  4035c0:	bl	411a40 <wcrtomb@plt+0xec10>
  4035c4:	str	x0, [x24, #8]
  4035c8:	bl	404640 <wcrtomb@plt+0x1810>
  4035cc:	mov	w19, w0
  4035d0:	ldr	x8, [x24]
  4035d4:	ldr	w9, [x8]
  4035d8:	cmp	w9, #0x2
  4035dc:	b.ne	403608 <wcrtomb@plt+0x7d8>  // b.any
  4035e0:	ldr	x8, [x8, #8]
  4035e4:	cbnz	x8, 403608 <wcrtomb@plt+0x7d8>
  4035e8:	ldr	x8, [x24, #8]
  4035ec:	cbz	x8, 403e30 <wcrtomb@plt+0x1000>
  4035f0:	ldr	w8, [x8]
  4035f4:	cmp	w8, #0x1
  4035f8:	b.ne	403e30 <wcrtomb@plt+0x1000>  // b.any
  4035fc:	ldr	w8, [x26, #2296]
  403600:	cmp	w8, #0x2
  403604:	b.eq	403e30 <wcrtomb@plt+0x1000>  // b.none
  403608:	cmp	w19, #0x21
  40360c:	b.ne	403624 <wcrtomb@plt+0x7f4>  // b.any
  403610:	strb	w20, [x24, #20]
  403614:	bl	404640 <wcrtomb@plt+0x1810>
  403618:	mov	w19, w0
  40361c:	cmp	w0, #0x21
  403620:	b.eq	403e00 <wcrtomb@plt+0xfd0>  // b.none
  403624:	ldr	w8, [x26, #2296]
  403628:	cmp	w8, #0x2
  40362c:	b.ne	403650 <wcrtomb@plt+0x820>  // b.any
  403630:	sub	w8, w19, #0x3d
  403634:	cmp	w8, #0x3d
  403638:	b.hi	403650 <wcrtomb@plt+0x820>  // b.pmore
  40363c:	lsl	x9, x20, x8
  403640:	tst	x9, x27
  403644:	b.eq	403728 <wcrtomb@plt+0x8f8>  // b.none
  403648:	ldr	x8, [x24, #8]
  40364c:	cbnz	x8, 403e0c <wcrtomb@plt+0xfdc>
  403650:	add	w8, w19, #0x1
  403654:	cmp	w8, #0x7e
  403658:	strb	w19, [x24, #21]
  40365c:	b.hi	403de0 <wcrtomb@plt+0xfb0>  // b.pmore
  403660:	adr	x9, 403518 <wcrtomb@plt+0x6e8>
  403664:	ldrh	w10, [x25, x8, lsl #1]
  403668:	add	x9, x9, x10, lsl #2
  40366c:	br	x9
  403670:	ldur	x8, [x29, #-8]
  403674:	ldr	x19, [x22, #1400]
  403678:	ldr	x21, [x8, #16]
  40367c:	bl	4046c8 <wcrtomb@plt+0x1898>
  403680:	mov	x2, x0
  403684:	mov	x0, x19
  403688:	mov	x1, x21
  40368c:	mov	x3, xzr
  403690:	bl	404768 <wcrtomb@plt+0x1938>
  403694:	str	x0, [x22, #1400]
  403698:	b	40351c <wcrtomb@plt+0x6ec>
  40369c:	bl	404640 <wcrtomb@plt+0x1810>
  4036a0:	cmp	w0, #0x5c
  4036a4:	b.eq	403714 <wcrtomb@plt+0x8e4>  // b.none
  4036a8:	cmn	w0, #0x1
  4036ac:	b.eq	403e3c <wcrtomb@plt+0x100c>  // b.none
  4036b0:	ldr	w8, [x26, #2296]
  4036b4:	cmp	w8, #0x2
  4036b8:	b.eq	403e3c <wcrtomb@plt+0x100c>  // b.none
  4036bc:	bl	40489c <wcrtomb@plt+0x1a6c>
  4036c0:	mov	w1, #0xa                   	// #10
  4036c4:	b	40371c <wcrtomb@plt+0x8ec>
  4036c8:	ldr	x8, [x24, #8]
  4036cc:	cbnz	x8, 403e0c <wcrtomb@plt+0xfdc>
  4036d0:	bl	404640 <wcrtomb@plt+0x1810>
  4036d4:	ldr	x8, [x21]
  4036d8:	and	w9, w0, #0xff
  4036dc:	ldrh	w8, [x8, w9, uxtw #1]
  4036e0:	tbz	w8, #11, 403510 <wcrtomb@plt+0x6e0>
  4036e4:	ldr	w8, [x26, #2296]
  4036e8:	cmp	w8, #0x2
  4036ec:	b.eq	403510 <wcrtomb@plt+0x6e0>  // b.none
  4036f0:	bl	40492c <wcrtomb@plt+0x1afc>
  4036f4:	str	w0, [x24, #24]
  4036f8:	b	403518 <wcrtomb@plt+0x6e8>
  4036fc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403700:	ldr	x1, [x8, #1144]
  403704:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  403708:	mov	w2, #0x1                   	// #1
  40370c:	add	x0, x0, #0x590
  403710:	b	403784 <wcrtomb@plt+0x954>
  403714:	bl	404384 <wcrtomb@plt+0x1554>
  403718:	mov	w1, w0
  40371c:	add	x0, x24, #0x18
  403720:	bl	404248 <wcrtomb@plt+0x1418>
  403724:	b	40351c <wcrtomb@plt+0x6ec>
  403728:	mov	x9, #0x8200                	// #33280
  40372c:	movk	x9, #0x4b0, lsl #16
  403730:	movk	x9, #0x100, lsl #32
  403734:	lsl	x8, x20, x8
  403738:	movk	x9, #0x2200, lsl #48
  40373c:	tst	x8, x9
  403740:	b.eq	403650 <wcrtomb@plt+0x820>  // b.none
  403744:	b	403de0 <wcrtomb@plt+0xfb0>
  403748:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40374c:	ldrb	w8, [x8, #1900]
  403750:	cbnz	w8, 403eb0 <wcrtomb@plt+0x1080>
  403754:	bl	404640 <wcrtomb@plt+0x1810>
  403758:	cmp	w0, #0xa
  40375c:	b.eq	403768 <wcrtomb@plt+0x938>  // b.none
  403760:	cmn	w0, #0x1
  403764:	b.ne	4036a0 <wcrtomb@plt+0x870>  // b.any
  403768:	str	xzr, [x24, #32]
  40376c:	b	40351c <wcrtomb@plt+0x6ec>
  403770:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403774:	ldr	x1, [x8, #1136]
  403778:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  40377c:	add	x0, x0, #0x588
  403780:	mov	w2, wzr
  403784:	bl	404a20 <wcrtomb@plt+0x1bf0>
  403788:	str	x0, [x24, #24]
  40378c:	b	40351c <wcrtomb@plt+0x6ec>
  403790:	ldr	x8, [x24]
  403794:	cbnz	x8, 403e48 <wcrtomb@plt+0x1018>
  403798:	bl	404384 <wcrtomb@plt+0x1554>
  40379c:	mov	w19, w0
  4037a0:	cmp	w0, #0x6e
  4037a4:	b.ne	403808 <wcrtomb@plt+0x9d8>  // b.any
  4037a8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4037ac:	ldr	x8, [x8, #1344]
  4037b0:	cmp	x8, #0x1
  4037b4:	b.hi	403808 <wcrtomb@plt+0x9d8>  // b.pmore
  4037b8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4037bc:	ldrb	w8, [x8, #1368]
  4037c0:	cbnz	w8, 403808 <wcrtomb@plt+0x9d8>
  4037c4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4037c8:	ldr	x8, [x8, #1544]
  4037cc:	cbz	x8, 4037e4 <wcrtomb@plt+0x9b4>
  4037d0:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4037d4:	ldr	x9, [x9, #1552]
  4037d8:	add	x10, x8, #0x2
  4037dc:	cmp	x9, x10
  4037e0:	b.eq	403800 <wcrtomb@plt+0x9d0>  // b.none
  4037e4:	cbnz	x8, 403808 <wcrtomb@plt+0x9d8>
  4037e8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4037ec:	ldr	x0, [x8, #1568]
  4037f0:	cbz	x0, 403808 <wcrtomb@plt+0x9d8>
  4037f4:	bl	4027e0 <ftell@plt>
  4037f8:	cmp	x0, #0x2
  4037fc:	b.ne	403808 <wcrtomb@plt+0x9d8>  // b.any
  403800:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403804:	strb	w20, [x8, #1888]
  403808:	cmn	w19, #0x1
  40380c:	b.eq	40352c <wcrtomb@plt+0x6fc>  // b.none
  403810:	cmp	w19, #0xa
  403814:	b.eq	40352c <wcrtomb@plt+0x6fc>  // b.none
  403818:	bl	404384 <wcrtomb@plt+0x1554>
  40381c:	mov	w19, w0
  403820:	cmn	w19, #0x1
  403824:	b.ne	403810 <wcrtomb@plt+0x9e0>  // b.any
  403828:	b	40352c <wcrtomb@plt+0x6fc>
  40382c:	ldr	x8, [x24]
  403830:	cbnz	x8, 403e54 <wcrtomb@plt+0x1024>
  403834:	bl	4046c8 <wcrtomb@plt+0x1898>
  403838:	ldrb	w8, [x0]
  40383c:	cbz	w8, 403e60 <wcrtomb@plt+0x1030>
  403840:	ldur	x8, [x29, #-8]
  403844:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  403848:	mov	x19, x0
  40384c:	ldr	x0, [x21, #1408]
  403850:	ldr	x1, [x8, #16]
  403854:	mov	x2, x19
  403858:	mov	x3, xzr
  40385c:	bl	404768 <wcrtomb@plt+0x1938>
  403860:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403864:	ldrb	w8, [x8, #1904]
  403868:	str	x0, [x21, #1408]
  40386c:	cbz	w8, 40351c <wcrtomb@plt+0x6ec>
  403870:	mov	x0, x19
  403874:	bl	402aa0 <strdup@plt>
  403878:	str	x0, [x24, #24]
  40387c:	b	40351c <wcrtomb@plt+0x6ec>
  403880:	ldr	x8, [x28, #1376]
  403884:	cbz	x8, 403e6c <wcrtomb@plt+0x103c>
  403888:	ldr	x8, [x24]
  40388c:	cbnz	x8, 403e78 <wcrtomb@plt+0x1048>
  403890:	bl	404838 <wcrtomb@plt+0x1a08>
  403894:	ldur	x8, [x29, #-8]
  403898:	ldr	x9, [x28, #1376]
  40389c:	mov	w11, #0x28                  	// #40
  4038a0:	ldr	x10, [x8]
  4038a4:	ldr	x9, [x9]
  4038a8:	ldr	x8, [x8, #16]
  4038ac:	madd	x9, x9, x11, x10
  4038b0:	str	x8, [x9, #24]
  4038b4:	ldr	x0, [x28, #1376]
  4038b8:	bl	4040fc <wcrtomb@plt+0x12cc>
  4038bc:	str	x0, [x28, #1376]
  4038c0:	b	40351c <wcrtomb@plt+0x6ec>
  4038c4:	ldur	x8, [x29, #-8]
  4038c8:	ldr	x0, [x28, #1376]
  4038cc:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  4038d0:	mov	x2, xzr
  4038d4:	ldr	x1, [x8, #16]
  4038d8:	add	x3, x3, #0x538
  4038dc:	bl	404768 <wcrtomb@plt+0x1938>
  4038e0:	str	x0, [x28, #1376]
  4038e4:	ldrb	w8, [x24, #20]
  4038e8:	cmp	w8, #0x0
  4038ec:	cset	w8, eq  // eq = none
  4038f0:	strb	w8, [x24, #20]
  4038f4:	b	40351c <wcrtomb@plt+0x6ec>
  4038f8:	bl	404384 <wcrtomb@plt+0x1554>
  4038fc:	mov	w1, wzr
  403900:	mov	w19, w0
  403904:	bl	404bf0 <wcrtomb@plt+0x1dc0>
  403908:	cbz	x0, 403e84 <wcrtomb@plt+0x1054>
  40390c:	mov	x21, x0
  403910:	bl	409c88 <wcrtomb@plt+0x6e58>
  403914:	mov	x27, x0
  403918:	mov	x0, x21
  40391c:	str	x21, [sp, #16]
  403920:	bl	409c90 <wcrtomb@plt+0x6e60>
  403924:	mov	x1, x0
  403928:	mov	x0, x27
  40392c:	mov	w2, wzr
  403930:	bl	402ff4 <wcrtomb@plt+0x1c4>
  403934:	mov	x22, x0
  403938:	mov	w0, w19
  40393c:	mov	w1, wzr
  403940:	bl	404bf0 <wcrtomb@plt+0x1dc0>
  403944:	cbz	x0, 403e84 <wcrtomb@plt+0x1054>
  403948:	mov	x19, x0
  40394c:	bl	409c88 <wcrtomb@plt+0x6e58>
  403950:	mov	x28, x0
  403954:	mov	x0, x19
  403958:	bl	409c90 <wcrtomb@plt+0x6e60>
  40395c:	mov	x1, x0
  403960:	mov	x0, x28
  403964:	mov	w2, wzr
  403968:	bl	402ff4 <wcrtomb@plt+0x1c4>
  40396c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403970:	ldr	w8, [x8, #2292]
  403974:	mov	x21, x0
  403978:	str	x19, [sp, #8]
  40397c:	cmp	w8, #0x2
  403980:	b.lt	403ba0 <wcrtomb@plt+0xd70>  // b.tstop
  403984:	mov	w1, #0x8                   	// #8
  403988:	mov	x0, x22
  40398c:	bl	411a14 <wcrtomb@plt+0xebe4>
  403990:	stp	x0, xzr, [sp, #24]
  403994:	cbz	x22, 403c74 <wcrtomb@plt+0xe44>
  403998:	mov	x19, xzr
  40399c:	mov	x20, xzr
  4039a0:	b	4039e0 <wcrtomb@plt+0xbb0>
  4039a4:	add	x1, x27, x19
  4039a8:	sub	x2, x22, x19
  4039ac:	add	x3, sp, #0x20
  4039b0:	mov	x0, xzr
  4039b4:	bl	411af4 <wcrtomb@plt+0xecc4>
  4039b8:	sub	x8, x0, #0x1
  4039bc:	ldr	x9, [sp, #24]
  4039c0:	cmn	x8, #0x4
  4039c4:	csinc	x8, x0, xzr, ls  // ls = plast
  4039c8:	add	x25, x20, #0x1
  4039cc:	add	x19, x8, x19
  4039d0:	cmp	x22, x19
  4039d4:	str	x8, [x9, x20, lsl #3]
  4039d8:	mov	x20, x25
  4039dc:	b.ls	403c78 <wcrtomb@plt+0xe48>  // b.plast
  4039e0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4039e4:	ldr	w8, [x8, #2292]
  4039e8:	cmp	w8, #0x1
  4039ec:	b.ne	4039a4 <wcrtomb@plt+0xb74>  // b.any
  4039f0:	mov	w0, #0x1                   	// #1
  4039f4:	b	4039b8 <wcrtomb@plt+0xb88>
  4039f8:	bl	4049a8 <wcrtomb@plt+0x1b78>
  4039fc:	mov	x19, x0
  403a00:	bl	409c88 <wcrtomb@plt+0x6e58>
  403a04:	ldrb	w8, [x0]
  403a08:	cbz	w8, 403e90 <wcrtomb@plt+0x1060>
  403a0c:	bl	411a84 <wcrtomb@plt+0xec54>
  403a10:	str	x0, [x24, #24]
  403a14:	mov	x0, x19
  403a18:	bl	409ddc <wcrtomb@plt+0x6fac>
  403a1c:	b	40351c <wcrtomb@plt+0x6ec>
  403a20:	bl	404384 <wcrtomb@plt+0x1554>
  403a24:	mov	w1, #0x1                   	// #1
  403a28:	mov	w21, w0
  403a2c:	bl	404bf0 <wcrtomb@plt+0x1dc0>
  403a30:	cbz	x0, 403e9c <wcrtomb@plt+0x106c>
  403a34:	mov	x19, x0
  403a38:	mov	w0, w21
  403a3c:	mov	w1, wzr
  403a40:	bl	404bf0 <wcrtomb@plt+0x1dc0>
  403a44:	cbz	x0, 403e9c <wcrtomb@plt+0x106c>
  403a48:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  403a4c:	add	x9, x9, #0x5b0
  403a50:	ldp	x9, x8, [x9]
  403a54:	mov	x21, x0
  403a58:	sub	x8, x8, x9
  403a5c:	cmp	x8, #0x27
  403a60:	b.hi	403a74 <wcrtomb@plt+0xc44>  // b.pmore
  403a64:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  403a68:	mov	w1, #0x28                  	// #40
  403a6c:	add	x0, x0, #0x598
  403a70:	bl	411c4c <_obstack_newchunk@@Base>
  403a74:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  403a78:	add	x9, x9, #0x5a8
  403a7c:	ldp	x22, x8, [x9]
  403a80:	mov	x23, x25
  403a84:	add	x8, x8, #0x28
  403a88:	cmp	x8, x22
  403a8c:	str	x8, [x9, #8]
  403a90:	b.ne	403aa4 <wcrtomb@plt+0xc74>  // b.any
  403a94:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  403a98:	ldrb	w8, [x9, #1512]
  403a9c:	orr	w8, w8, #0x2
  403aa0:	strb	w8, [x9, #1512]
  403aa4:	adrp	x13, 432000 <_obstack_memory_used@@Base+0x2017c>
  403aa8:	add	x13, x13, #0x5a0
  403aac:	ldr	x8, [x13, #40]
  403ab0:	ldp	x10, x11, [x13, #16]
  403ab4:	ldr	x9, [x13]
  403ab8:	mov	x0, x21
  403abc:	add	x10, x8, x10
  403ac0:	bic	x8, x10, x8
  403ac4:	sub	x12, x11, x9
  403ac8:	sub	x9, x8, x9
  403acc:	cmp	x9, x12
  403ad0:	csel	x8, x11, x8, hi  // hi = pmore
  403ad4:	stp	x8, x8, [x13, #8]
  403ad8:	str	x22, [x24, #24]
  403adc:	bl	409c88 <wcrtomb@plt+0x6e58>
  403ae0:	mov	x25, x0
  403ae4:	mov	x0, x21
  403ae8:	bl	409c90 <wcrtomb@plt+0x6e60>
  403aec:	mov	x2, x0
  403af0:	mov	x0, x22
  403af4:	mov	x1, x25
  403af8:	bl	404da8 <wcrtomb@plt+0x1f78>
  403afc:	mov	x0, x21
  403b00:	bl	409ddc <wcrtomb@plt+0x6fac>
  403b04:	ldr	x0, [x24, #24]
  403b08:	bl	404fa0 <wcrtomb@plt+0x2170>
  403b0c:	ldr	x8, [x24, #24]
  403b10:	mov	w1, w0
  403b14:	mov	x0, x19
  403b18:	ldrb	w8, [x8, #32]
  403b1c:	lsr	w8, w8, #4
  403b20:	add	w2, w8, #0x1
  403b24:	bl	4082bc <wcrtomb@plt+0x548c>
  403b28:	ldr	x8, [x24, #24]
  403b2c:	str	x0, [x8]
  403b30:	mov	x0, x19
  403b34:	bl	409ddc <wcrtomb@plt+0x6fac>
  403b38:	ldr	x8, [x24, #24]
  403b3c:	mov	x25, x23
  403b40:	mov	w23, #0xffffffff            	// #-1
  403b44:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  403b48:	ldrb	w8, [x8, #32]
  403b4c:	tbz	w8, #3, 40351c <wcrtomb@plt+0x6ec>
  403b50:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403b54:	ldrb	w8, [x8, #1900]
  403b58:	cbz	w8, 40351c <wcrtomb@plt+0x6ec>
  403b5c:	b	403eb0 <wcrtomb@plt+0x1080>
  403b60:	bl	4046c8 <wcrtomb@plt+0x1898>
  403b64:	ldrb	w8, [x0]
  403b68:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403b6c:	mov	x19, x0
  403b70:	add	x1, x1, #0x771
  403b74:	cmp	w8, #0x0
  403b78:	adrp	x8, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403b7c:	add	x8, x8, #0x76d
  403b80:	csel	x0, x8, x0, eq  // eq = none
  403b84:	bl	402990 <strverscmp@plt>
  403b88:	cmp	w0, #0x1
  403b8c:	b.ge	403ebc <wcrtomb@plt+0x108c>  // b.tcont
  403b90:	mov	x0, x19
  403b94:	bl	402bd0 <free@plt>
  403b98:	str	wzr, [x26, #2296]
  403b9c:	b	40352c <wcrtomb@plt+0x6fc>
  403ba0:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  403ba4:	add	x9, x9, #0x5b0
  403ba8:	ldp	x9, x8, [x9]
  403bac:	sub	x8, x8, x9
  403bb0:	cmp	x8, #0xff
  403bb4:	b.hi	403bc8 <wcrtomb@plt+0xd98>  // b.pmore
  403bb8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  403bbc:	mov	w1, #0x100                 	// #256
  403bc0:	add	x0, x0, #0x598
  403bc4:	bl	411c4c <_obstack_newchunk@@Base>
  403bc8:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  403bcc:	add	x10, x10, #0x5a8
  403bd0:	ldp	x8, x9, [x10]
  403bd4:	add	x9, x9, #0x100
  403bd8:	cmp	x9, x8
  403bdc:	str	x9, [x10, #8]
  403be0:	b.ne	403bf4 <wcrtomb@plt+0xdc4>  // b.any
  403be4:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  403be8:	ldrb	w9, [x10, #1512]
  403bec:	orr	w9, w9, #0x2
  403bf0:	strb	w9, [x10, #1512]
  403bf4:	adrp	x14, 432000 <_obstack_memory_used@@Base+0x2017c>
  403bf8:	add	x14, x14, #0x5a0
  403bfc:	ldr	x9, [x14, #40]
  403c00:	ldp	x11, x12, [x14, #16]
  403c04:	ldr	x10, [x14]
  403c08:	add	x11, x9, x11
  403c0c:	bic	x9, x11, x9
  403c10:	sub	x13, x12, x10
  403c14:	sub	x10, x9, x10
  403c18:	cmp	x10, x13
  403c1c:	csel	x9, x12, x9, hi  // hi = pmore
  403c20:	cmp	x22, x21
  403c24:	stp	x9, x9, [x14, #8]
  403c28:	b.ne	403e18 <wcrtomb@plt+0xfe8>  // b.any
  403c2c:	mov	x9, xzr
  403c30:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  403c34:	strb	w9, [x8, x9]
  403c38:	add	x9, x9, #0x1
  403c3c:	cmp	x9, #0x100
  403c40:	b.ne	403c34 <wcrtomb@plt+0xe04>  // b.any
  403c44:	cbz	x21, 403c5c <wcrtomb@plt+0xe2c>
  403c48:	ldrb	w9, [x28], #1
  403c4c:	ldrb	w10, [x27], #1
  403c50:	subs	x21, x21, #0x1
  403c54:	strb	w9, [x8, x10]
  403c58:	b.ne	403c48 <wcrtomb@plt+0xe18>  // b.any
  403c5c:	mov	x27, #0x1                   	// #1
  403c60:	movk	x27, #0x9010, lsl #32
  403c64:	movk	x27, #0x20, lsl #48
  403c68:	adrp	x28, 432000 <_obstack_memory_used@@Base+0x2017c>
  403c6c:	str	x8, [x24, #24]
  403c70:	b	403d88 <wcrtomb@plt+0xf58>
  403c74:	mov	x25, xzr
  403c78:	mov	w0, #0x1                   	// #1
  403c7c:	bfi	x0, x25, #1, #63
  403c80:	mov	w1, #0x8                   	// #8
  403c84:	str	xzr, [sp, #32]
  403c88:	bl	411a14 <wcrtomb@plt+0xebe4>
  403c8c:	str	x0, [x24, #24]
  403c90:	cbz	x25, 403d54 <wcrtomb@plt+0xf24>
  403c94:	mov	x26, xzr
  403c98:	mov	x22, xzr
  403c9c:	add	x19, x0, #0x8
  403ca0:	str	x0, [sp]
  403ca4:	b	403cf8 <wcrtomb@plt+0xec8>
  403ca8:	add	x1, x28, x22
  403cac:	add	x3, sp, #0x20
  403cb0:	mov	x0, xzr
  403cb4:	mov	x2, x24
  403cb8:	bl	411af4 <wcrtomb@plt+0xecc4>
  403cbc:	sub	x8, x0, #0x1
  403cc0:	cmn	x8, #0x4
  403cc4:	csinc	x20, x0, xzr, ls  // ls = plast
  403cc8:	add	x0, x20, #0x1
  403ccc:	bl	4119fc <wcrtomb@plt+0xebcc>
  403cd0:	add	x1, x28, x22
  403cd4:	mov	x2, x20
  403cd8:	mov	x23, x0
  403cdc:	str	x0, [x19], #16
  403ce0:	bl	402710 <memcpy@plt>
  403ce4:	add	x26, x26, #0x1
  403ce8:	cmp	x25, x26
  403cec:	add	x22, x20, x22
  403cf0:	strb	wzr, [x23, x20]
  403cf4:	b.eq	403d44 <wcrtomb@plt+0xf14>  // b.none
  403cf8:	subs	x24, x21, x22
  403cfc:	b.ls	403e18 <wcrtomb@plt+0xfe8>  // b.plast
  403d00:	ldr	x8, [sp, #24]
  403d04:	ldr	x23, [x8, x26, lsl #3]
  403d08:	add	x0, x23, #0x1
  403d0c:	bl	4119fc <wcrtomb@plt+0xebcc>
  403d10:	mov	x1, x27
  403d14:	mov	x2, x23
  403d18:	mov	x20, x0
  403d1c:	stur	x0, [x19, #-8]
  403d20:	bl	402710 <memcpy@plt>
  403d24:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403d28:	ldr	w8, [x8, #2292]
  403d2c:	add	x27, x27, x23
  403d30:	strb	wzr, [x20, x23]
  403d34:	cmp	w8, #0x1
  403d38:	b.ne	403ca8 <wcrtomb@plt+0xe78>  // b.any
  403d3c:	mov	w0, #0x1                   	// #1
  403d40:	b	403cbc <wcrtomb@plt+0xe8c>
  403d44:	ldr	x0, [sp]
  403d48:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  403d4c:	mov	w23, #0xffffffff            	// #-1
  403d50:	b	403d58 <wcrtomb@plt+0xf28>
  403d54:	mov	x22, xzr
  403d58:	mov	x27, #0x1                   	// #1
  403d5c:	movk	x27, #0x9010, lsl #32
  403d60:	lsl	x8, x25, #4
  403d64:	cmp	x21, x22
  403d68:	mov	w20, #0x1                   	// #1
  403d6c:	movk	x27, #0x20, lsl #48
  403d70:	adrp	x28, 432000 <_obstack_memory_used@@Base+0x2017c>
  403d74:	str	xzr, [x0, x8]
  403d78:	b.ne	403e18 <wcrtomb@plt+0xfe8>  // b.any
  403d7c:	adrp	x25, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403d80:	add	x25, x25, #0xb8
  403d84:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  403d88:	ldr	x19, [sp, #16]
  403d8c:	bl	404838 <wcrtomb@plt+0x1a08>
  403d90:	mov	x0, x19
  403d94:	bl	409ddc <wcrtomb@plt+0x6fac>
  403d98:	ldr	x0, [sp, #8]
  403d9c:	bl	409ddc <wcrtomb@plt+0x6fac>
  403da0:	b	40351c <wcrtomb@plt+0x6ec>
  403da4:	ldr	w8, [x26, #2296]
  403da8:	cmp	w8, #0x2
  403dac:	b.ne	403dbc <wcrtomb@plt+0xf8c>  // b.any
  403db0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403db4:	ldr	x8, [x8, #1384]
  403db8:	cbnz	x8, 403ec8 <wcrtomb@plt+0x1098>
  403dbc:	ldur	x0, [x29, #-8]
  403dc0:	ldp	x20, x19, [sp, #160]
  403dc4:	ldp	x22, x21, [sp, #144]
  403dc8:	ldp	x24, x23, [sp, #128]
  403dcc:	ldp	x26, x25, [sp, #112]
  403dd0:	ldp	x28, x27, [sp, #96]
  403dd4:	ldp	x29, x30, [sp, #80]
  403dd8:	add	sp, sp, #0xb0
  403ddc:	ret
  403de0:	mov	w0, w19
  403de4:	bl	404674 <wcrtomb@plt+0x1844>
  403de8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403dec:	add	x1, x1, #0x3b0
  403df0:	b	403ed0 <wcrtomb@plt+0x10a0>
  403df4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403df8:	add	x1, x1, #0x2c8
  403dfc:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e00:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e04:	add	x1, x1, #0x2ab
  403e08:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e0c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e10:	add	x1, x1, #0x3c0
  403e14:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e18:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e1c:	add	x1, x1, #0x4dd
  403e20:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e24:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e28:	add	x1, x1, #0x2b9
  403e2c:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e30:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e34:	add	x1, x1, #0x55c
  403e38:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e3c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e40:	add	x1, x1, #0x32f
  403e44:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e48:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e4c:	add	x1, x1, #0x38c
  403e50:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e54:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e58:	add	x1, x1, #0x36f
  403e5c:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e60:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e64:	add	x1, x1, #0x5a5
  403e68:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e6c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e70:	add	x1, x1, #0x301
  403e74:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e78:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e7c:	add	x1, x1, #0x350
  403e80:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e84:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e88:	add	x1, x1, #0x412
  403e8c:	b	403ea4 <wcrtomb@plt+0x1074>
  403e90:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403e94:	add	x1, x1, #0x607
  403e98:	b	403ed0 <wcrtomb@plt+0x10a0>
  403e9c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403ea0:	add	x1, x1, #0x3f9
  403ea4:	mov	w2, #0x5                   	// #5
  403ea8:	bl	402d10 <dcgettext@plt>
  403eac:	bl	402f4c <wcrtomb@plt+0x11c>
  403eb0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403eb4:	add	x1, x1, #0x5df
  403eb8:	b	403ed0 <wcrtomb@plt+0x10a0>
  403ebc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403ec0:	add	x1, x1, #0x53e
  403ec4:	b	403ed0 <wcrtomb@plt+0x10a0>
  403ec8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403ecc:	add	x1, x1, #0x592
  403ed0:	mov	w2, #0x5                   	// #5
  403ed4:	mov	x0, xzr
  403ed8:	bl	402d10 <dcgettext@plt>
  403edc:	bl	402f4c <wcrtomb@plt+0x11c>
  403ee0:	stp	x29, x30, [sp, #-64]!
  403ee4:	stp	x22, x21, [sp, #32]
  403ee8:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  403eec:	ldr	x8, [x22, #1312]
  403ef0:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  403ef4:	stp	x20, x19, [sp, #48]
  403ef8:	mov	x19, x1
  403efc:	str	x8, [x21, #1568]
  403f00:	ldrb	w8, [x1]
  403f04:	mov	x20, x0
  403f08:	str	x23, [sp, #16]
  403f0c:	mov	x29, sp
  403f10:	cmp	w8, #0x2d
  403f14:	b.ne	403f20 <wcrtomb@plt+0x10f0>  // b.any
  403f18:	ldrb	w8, [x19, #1]
  403f1c:	cbz	w8, 403f38 <wcrtomb@plt+0x1108>
  403f20:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  403f24:	add	x1, x1, #0x748
  403f28:	mov	w2, #0x1                   	// #1
  403f2c:	mov	x0, x19
  403f30:	bl	4092a8 <wcrtomb@plt+0x6478>
  403f34:	str	x0, [x21, #1568]
  403f38:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403f3c:	add	x8, x8, #0x538
  403f40:	mov	w23, #0x1                   	// #1
  403f44:	mov	x0, x20
  403f48:	stp	x19, x23, [x8]
  403f4c:	str	xzr, [x8, #16]
  403f50:	bl	403468 <wcrtomb@plt+0x638>
  403f54:	ldr	x8, [x21, #1568]
  403f58:	ldr	x9, [x22, #1312]
  403f5c:	mov	x19, x0
  403f60:	cmp	x8, x9
  403f64:	b.eq	403f70 <wcrtomb@plt+0x1140>  // b.none
  403f68:	mov	x0, x8
  403f6c:	bl	40982c <wcrtomb@plt+0x69fc>
  403f70:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403f74:	str	xzr, [x21, #1568]
  403f78:	strb	w23, [x8, #1368]
  403f7c:	mov	x0, x19
  403f80:	ldp	x20, x19, [sp, #48]
  403f84:	ldp	x22, x21, [sp, #32]
  403f88:	ldr	x23, [sp, #16]
  403f8c:	ldp	x29, x30, [sp], #64
  403f90:	ret
  403f94:	stp	x29, x30, [sp, #-80]!
  403f98:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  403f9c:	ldr	x8, [x8, #1376]
  403fa0:	stp	x26, x25, [sp, #16]
  403fa4:	stp	x24, x23, [sp, #32]
  403fa8:	stp	x22, x21, [sp, #48]
  403fac:	stp	x20, x19, [sp, #64]
  403fb0:	mov	x29, sp
  403fb4:	cbnz	x8, 4040cc <wcrtomb@plt+0x129c>
  403fb8:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  403fbc:	ldr	x20, [x22, #1384]
  403fc0:	mov	x19, x0
  403fc4:	cbz	x20, 404008 <wcrtomb@plt+0x11d8>
  403fc8:	mov	x0, x20
  403fcc:	bl	409c90 <wcrtomb@plt+0x6e60>
  403fd0:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  403fd4:	ldr	x8, [x23, #1392]
  403fd8:	str	x0, [x8, #8]
  403fdc:	cbz	x0, 403ffc <wcrtomb@plt+0x11cc>
  403fe0:	mov	x21, x0
  403fe4:	mov	x0, x20
  403fe8:	bl	409c88 <wcrtomb@plt+0x6e58>
  403fec:	mov	x1, x21
  403ff0:	bl	411a40 <wcrtomb@plt+0xec10>
  403ff4:	ldr	x8, [x23, #1392]
  403ff8:	str	x0, [x8]
  403ffc:	ldr	x0, [x22, #1384]
  404000:	bl	409ddc <wcrtomb@plt+0x6fac>
  404004:	str	xzr, [x22, #1384]
  404008:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  40400c:	ldr	x20, [x23, #1400]
  404010:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  404014:	cbz	x20, 404080 <wcrtomb@plt+0x1250>
  404018:	add	x24, x19, #0x10
  40401c:	mov	w25, #0x28                  	// #40
  404020:	b	404058 <wcrtomb@plt+0x1228>
  404024:	ldr	x8, [x20, #8]
  404028:	mov	x26, x24
  40402c:	ldrb	w8, [x8]
  404030:	cbnz	w8, 4040b0 <wcrtomb@plt+0x1280>
  404034:	ldr	x8, [x19]
  404038:	ldr	x9, [x20]
  40403c:	ldr	x10, [x26]
  404040:	mov	x0, x20
  404044:	madd	x8, x9, x25, x8
  404048:	str	x10, [x8, #24]
  40404c:	bl	4040fc <wcrtomb@plt+0x12cc>
  404050:	mov	x20, x0
  404054:	cbz	x0, 404080 <wcrtomb@plt+0x1250>
  404058:	ldr	x26, [x22, #1408]
  40405c:	cbz	x26, 404024 <wcrtomb@plt+0x11f4>
  404060:	ldr	x21, [x20, #8]
  404064:	ldr	x0, [x26, #8]
  404068:	mov	x1, x21
  40406c:	bl	402ba0 <strcmp@plt>
  404070:	cbz	w0, 404034 <wcrtomb@plt+0x1204>
  404074:	ldr	x26, [x26, #40]
  404078:	cbnz	x26, 404064 <wcrtomb@plt+0x1234>
  40407c:	b	404024 <wcrtomb@plt+0x11f4>
  404080:	ldr	x0, [x22, #1408]
  404084:	str	xzr, [x23, #1400]
  404088:	cbz	x0, 404094 <wcrtomb@plt+0x1264>
  40408c:	bl	4040fc <wcrtomb@plt+0x12cc>
  404090:	cbnz	x0, 40408c <wcrtomb@plt+0x125c>
  404094:	str	xzr, [x22, #1408]
  404098:	ldp	x20, x19, [sp, #64]
  40409c:	ldp	x22, x21, [sp, #48]
  4040a0:	ldp	x24, x23, [sp, #32]
  4040a4:	ldp	x26, x25, [sp, #16]
  4040a8:	ldp	x29, x30, [sp], #80
  4040ac:	ret
  4040b0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4040b4:	add	x1, x1, #0x74b
  4040b8:	mov	w2, #0x5                   	// #5
  4040bc:	mov	x0, xzr
  4040c0:	bl	402d10 <dcgettext@plt>
  4040c4:	ldr	x1, [x20, #8]
  4040c8:	bl	40915c <wcrtomb@plt+0x632c>
  4040cc:	ldr	x9, [x8, #32]
  4040d0:	ldr	q0, [x8, #16]
  4040d4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4040d8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4040dc:	add	x8, x8, #0x538
  4040e0:	add	x1, x1, #0x2f3
  4040e4:	mov	w2, #0x5                   	// #5
  4040e8:	mov	x0, xzr
  4040ec:	str	x9, [x8, #16]
  4040f0:	str	q0, [x8]
  4040f4:	bl	402d10 <dcgettext@plt>
  4040f8:	bl	402f4c <wcrtomb@plt+0x11c>
  4040fc:	stp	x29, x30, [sp, #-32]!
  404100:	str	x19, [sp, #16]
  404104:	mov	x29, sp
  404108:	cbz	x0, 40411c <wcrtomb@plt+0x12ec>
  40410c:	ldr	x19, [x0, #40]
  404110:	ldr	x0, [x0, #8]
  404114:	bl	402bd0 <free@plt>
  404118:	b	404120 <wcrtomb@plt+0x12f0>
  40411c:	mov	x19, xzr
  404120:	mov	x0, x19
  404124:	ldr	x19, [sp, #16]
  404128:	ldp	x29, x30, [sp], #32
  40412c:	ret
  404130:	stp	x29, x30, [sp, #-32]!
  404134:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404138:	str	x19, [sp, #16]
  40413c:	ldr	x19, [x8, #1416]
  404140:	mov	x29, sp
  404144:	cbnz	x19, 40415c <wcrtomb@plt+0x132c>
  404148:	ldr	x19, [sp, #16]
  40414c:	ldp	x29, x30, [sp], #32
  404150:	ret
  404154:	ldr	x19, [x19, #24]
  404158:	cbz	x19, 404148 <wcrtomb@plt+0x1318>
  40415c:	ldr	x0, [x19, #16]
  404160:	cbz	x0, 404154 <wcrtomb@plt+0x1324>
  404164:	bl	402a70 <rewind@plt>
  404168:	b	404154 <wcrtomb@plt+0x1324>
  40416c:	stp	x29, x30, [sp, #-48]!
  404170:	str	x21, [sp, #16]
  404174:	stp	x20, x19, [sp, #32]
  404178:	mov	x29, sp
  40417c:	bl	4041e0 <wcrtomb@plt+0x13b0>
  404180:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x2017c>
  404184:	ldr	x20, [x19, #1416]
  404188:	cbnz	x20, 4041b8 <wcrtomb@plt+0x1388>
  40418c:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  404190:	ldr	x21, [x20, #1424]
  404194:	cbnz	x21, 4041d0 <wcrtomb@plt+0x13a0>
  404198:	str	xzr, [x20, #1424]
  40419c:	str	xzr, [x19, #1416]
  4041a0:	ldp	x20, x19, [sp, #32]
  4041a4:	ldr	x21, [sp, #16]
  4041a8:	ldp	x29, x30, [sp], #48
  4041ac:	ret
  4041b0:	ldr	x20, [x20, #24]
  4041b4:	cbz	x20, 40418c <wcrtomb@plt+0x135c>
  4041b8:	ldr	x0, [x20, #16]
  4041bc:	cbz	x0, 4041b0 <wcrtomb@plt+0x1380>
  4041c0:	bl	40982c <wcrtomb@plt+0x69fc>
  4041c4:	b	4041b0 <wcrtomb@plt+0x1380>
  4041c8:	ldr	x21, [x21, #24]
  4041cc:	cbz	x21, 404198 <wcrtomb@plt+0x1368>
  4041d0:	ldr	x0, [x21, #16]
  4041d4:	cbz	x0, 4041c8 <wcrtomb@plt+0x1398>
  4041d8:	bl	40982c <wcrtomb@plt+0x69fc>
  4041dc:	b	4041c8 <wcrtomb@plt+0x1398>
  4041e0:	stp	x29, x30, [sp, #-32]!
  4041e4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4041e8:	str	x19, [sp, #16]
  4041ec:	ldr	x19, [x8, #1416]
  4041f0:	mov	x29, sp
  4041f4:	cbnz	x19, 404218 <wcrtomb@plt+0x13e8>
  4041f8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4041fc:	ldr	x19, [x8, #1424]
  404200:	cbnz	x19, 404234 <wcrtomb@plt+0x1404>
  404204:	ldr	x19, [sp, #16]
  404208:	ldp	x29, x30, [sp], #32
  40420c:	ret
  404210:	ldr	x19, [x19, #24]
  404214:	cbz	x19, 4041f8 <wcrtomb@plt+0x13c8>
  404218:	ldr	x0, [x19]
  40421c:	cbz	x0, 404210 <wcrtomb@plt+0x13e0>
  404220:	bl	402bd0 <free@plt>
  404224:	str	xzr, [x19]
  404228:	b	404210 <wcrtomb@plt+0x13e0>
  40422c:	ldr	x19, [x19, #24]
  404230:	cbz	x19, 404204 <wcrtomb@plt+0x13d4>
  404234:	ldr	x0, [x19]
  404238:	cbz	x0, 40422c <wcrtomb@plt+0x13fc>
  40423c:	bl	402bd0 <free@plt>
  404240:	str	xzr, [x19]
  404244:	b	40422c <wcrtomb@plt+0x13fc>
  404248:	stp	x29, x30, [sp, #-48]!
  40424c:	stp	x22, x21, [sp, #16]
  404250:	stp	x20, x19, [sp, #32]
  404254:	mov	w20, w1
  404258:	mov	x19, x0
  40425c:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  404260:	mov	x29, sp
  404264:	cbz	x0, 404288 <wcrtomb@plt+0x1458>
  404268:	ldr	x0, [x21, #1384]
  40426c:	cbz	x0, 404274 <wcrtomb@plt+0x1444>
  404270:	bl	409ddc <wcrtomb@plt+0x6fac>
  404274:	bl	409c48 <wcrtomb@plt+0x6e18>
  404278:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40427c:	str	x0, [x21, #1384]
  404280:	stp	xzr, xzr, [x19]
  404284:	str	x19, [x8, #1392]
  404288:	cmn	w20, #0x1
  40428c:	b.eq	404374 <wcrtomb@plt+0x1544>  // b.none
  404290:	cmp	w20, #0xa
  404294:	b.eq	4042a4 <wcrtomb@plt+0x1474>  // b.none
  404298:	ldr	x0, [x21, #1384]
  40429c:	mov	w1, w20
  4042a0:	bl	409d80 <wcrtomb@plt+0x6f50>
  4042a4:	bl	404384 <wcrtomb@plt+0x1554>
  4042a8:	mov	w20, w0
  4042ac:	cmp	w0, #0x5c
  4042b0:	b.eq	4042c8 <wcrtomb@plt+0x1498>  // b.none
  4042b4:	cmn	w20, #0x1
  4042b8:	b.eq	4042fc <wcrtomb@plt+0x14cc>  // b.none
  4042bc:	cmp	w20, #0xa
  4042c0:	b.ne	4042e4 <wcrtomb@plt+0x14b4>  // b.any
  4042c4:	b	4042fc <wcrtomb@plt+0x14cc>
  4042c8:	bl	404384 <wcrtomb@plt+0x1554>
  4042cc:	mov	w20, w0
  4042d0:	cmn	w0, #0x1
  4042d4:	b.eq	4042e4 <wcrtomb@plt+0x14b4>  // b.none
  4042d8:	ldr	x0, [x21, #1384]
  4042dc:	mov	w1, #0x5c                  	// #92
  4042e0:	bl	409d80 <wcrtomb@plt+0x6f50>
  4042e4:	ldr	x0, [x21, #1384]
  4042e8:	cmn	w20, #0x1
  4042ec:	b.eq	40436c <wcrtomb@plt+0x153c>  // b.none
  4042f0:	mov	w1, w20
  4042f4:	bl	405140 <wcrtomb@plt+0x2310>
  4042f8:	b	4042a8 <wcrtomb@plt+0x1478>
  4042fc:	ldr	x0, [x21, #1384]
  404300:	mov	w1, #0xa                   	// #10
  404304:	bl	409d80 <wcrtomb@plt+0x6f50>
  404308:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40430c:	ldr	x20, [x21, #1384]
  404310:	ldr	x8, [x8, #1392]
  404314:	cmp	x19, #0x0
  404318:	mov	x0, x20
  40431c:	csel	x22, x19, x8, ne  // ne = any
  404320:	bl	409c88 <wcrtomb@plt+0x6e58>
  404324:	mov	x19, x0
  404328:	mov	x0, x20
  40432c:	bl	409c90 <wcrtomb@plt+0x6e60>
  404330:	mov	x1, x0
  404334:	mov	x0, x19
  404338:	mov	w2, wzr
  40433c:	bl	402ff4 <wcrtomb@plt+0x1c4>
  404340:	str	x0, [x22, #8]
  404344:	mov	x19, x0
  404348:	ldr	x0, [x21, #1384]
  40434c:	bl	409c88 <wcrtomb@plt+0x6e58>
  404350:	mov	x1, x19
  404354:	bl	411a40 <wcrtomb@plt+0xec10>
  404358:	str	x0, [x22]
  40435c:	ldr	x0, [x21, #1384]
  404360:	bl	409ddc <wcrtomb@plt+0x6fac>
  404364:	str	xzr, [x21, #1384]
  404368:	b	404374 <wcrtomb@plt+0x1544>
  40436c:	mov	w1, #0xa                   	// #10
  404370:	bl	409d80 <wcrtomb@plt+0x6f50>
  404374:	ldp	x20, x19, [sp, #32]
  404378:	ldp	x22, x21, [sp, #16]
  40437c:	ldp	x29, x30, [sp], #48
  404380:	ret
  404384:	stp	x29, x30, [sp, #-32]!
  404388:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40438c:	ldr	x9, [x8, #1552]
  404390:	str	x19, [sp, #16]
  404394:	mov	x29, sp
  404398:	cbz	x9, 4043c4 <wcrtomb@plt+0x1594>
  40439c:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  4043a0:	ldr	x10, [x10, #1560]
  4043a4:	cmp	x9, x10
  4043a8:	b.cs	4043d8 <wcrtomb@plt+0x15a8>  // b.hs, b.nlast
  4043ac:	add	x10, x9, #0x1
  4043b0:	str	x10, [x8, #1552]
  4043b4:	ldrb	w0, [x9]
  4043b8:	cmp	w0, #0xa
  4043bc:	b.eq	4043e4 <wcrtomb@plt+0x15b4>  // b.none
  4043c0:	b	4043f4 <wcrtomb@plt+0x15c4>
  4043c4:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x2017c>
  4043c8:	ldr	x0, [x19, #1568]
  4043cc:	cbz	x0, 4043d8 <wcrtomb@plt+0x15a8>
  4043d0:	bl	402c20 <feof_unlocked@plt>
  4043d4:	cbz	w0, 404400 <wcrtomb@plt+0x15d0>
  4043d8:	mov	w0, #0xffffffff            	// #-1
  4043dc:	cmp	w0, #0xa
  4043e0:	b.ne	4043f4 <wcrtomb@plt+0x15c4>  // b.any
  4043e4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4043e8:	ldr	x9, [x8, #1344]
  4043ec:	add	x9, x9, #0x1
  4043f0:	str	x9, [x8, #1344]
  4043f4:	ldr	x19, [sp, #16]
  4043f8:	ldp	x29, x30, [sp], #32
  4043fc:	ret
  404400:	ldr	x0, [x19, #1568]
  404404:	bl	402ab0 <getc_unlocked@plt>
  404408:	cmp	w0, #0xa
  40440c:	b.eq	4043e4 <wcrtomb@plt+0x15b4>  // b.none
  404410:	b	4043f4 <wcrtomb@plt+0x15c4>
  404414:	stp	x29, x30, [sp, #-32]!
  404418:	stp	x20, x19, [sp, #16]
  40441c:	ldr	x20, [x0]
  404420:	mov	x19, x0
  404424:	mov	x29, sp
  404428:	ldp	x8, x9, [x20, #8]
  40442c:	cmp	x9, x8
  404430:	b.ne	40444c <wcrtomb@plt+0x161c>  // b.any
  404434:	ldr	x0, [x20]
  404438:	add	x1, x8, #0x28
  40443c:	mov	w2, #0x28                  	// #40
  404440:	str	x1, [x20, #8]
  404444:	bl	4118f4 <wcrtomb@plt+0xeac4>
  404448:	str	x0, [x20]
  40444c:	ldr	x8, [x20]
  404450:	ldr	x9, [x20, #16]
  404454:	mov	w10, #0x28                  	// #40
  404458:	madd	x0, x9, x10, x8
  40445c:	stp	xzr, xzr, [x0]
  404460:	stur	xzr, [x0, #14]
  404464:	str	x20, [x19]
  404468:	ldp	x20, x19, [sp, #16]
  40446c:	ldp	x29, x30, [sp], #32
  404470:	ret
  404474:	stp	x29, x30, [sp, #-48]!
  404478:	stp	x20, x19, [sp, #32]
  40447c:	mov	w20, w1
  404480:	mov	x19, x0
  404484:	mov	x8, #0xffffffffffffffff    	// #-1
  404488:	cmp	w1, #0x5c
  40448c:	stp	x22, x21, [sp, #16]
  404490:	mov	x29, sp
  404494:	str	wzr, [x0]
  404498:	stp	xzr, xzr, [x0, #16]
  40449c:	str	x8, [x0, #8]
  4044a0:	b.eq	4044ac <wcrtomb@plt+0x167c>  // b.none
  4044a4:	cmp	w20, #0x2f
  4044a8:	b.ne	40455c <wcrtomb@plt+0x172c>  // b.any
  4044ac:	mov	w8, #0x1                   	// #1
  4044b0:	cmp	w20, #0x5c
  4044b4:	str	w8, [x19]
  4044b8:	b.ne	4044c4 <wcrtomb@plt+0x1694>  // b.any
  4044bc:	bl	404384 <wcrtomb@plt+0x1554>
  4044c0:	mov	w20, w0
  4044c4:	mov	w1, #0x1                   	// #1
  4044c8:	mov	w0, w20
  4044cc:	bl	404bf0 <wcrtomb@plt+0x1dc0>
  4044d0:	cbz	x0, 40462c <wcrtomb@plt+0x17fc>
  4044d4:	mov	x20, x0
  4044d8:	bl	404640 <wcrtomb@plt+0x1810>
  4044dc:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  4044e0:	ldr	w8, [x22, #2296]
  4044e4:	cmp	w8, #0x2
  4044e8:	b.ne	404524 <wcrtomb@plt+0x16f4>  // b.any
  4044ec:	mov	w21, wzr
  4044f0:	bl	40489c <wcrtomb@plt+0x1a6c>
  4044f4:	mov	x0, x20
  4044f8:	mov	w1, w21
  4044fc:	mov	w2, wzr
  404500:	bl	4082bc <wcrtomb@plt+0x548c>
  404504:	str	x0, [x19, #24]
  404508:	mov	x0, x20
  40450c:	bl	409ddc <wcrtomb@plt+0x6fac>
  404510:	mov	w0, #0x1                   	// #1
  404514:	ldp	x20, x19, [sp, #32]
  404518:	ldp	x22, x21, [sp, #16]
  40451c:	ldp	x29, x30, [sp], #48
  404520:	ret
  404524:	mov	w21, wzr
  404528:	b	404544 <wcrtomb@plt+0x1714>
  40452c:	mov	w8, #0x2                   	// #2
  404530:	orr	w21, w21, w8
  404534:	bl	404640 <wcrtomb@plt+0x1810>
  404538:	ldr	w8, [x22, #2296]
  40453c:	cmp	w8, #0x2
  404540:	b.eq	4044f0 <wcrtomb@plt+0x16c0>  // b.none
  404544:	cmp	w0, #0x49
  404548:	b.eq	40452c <wcrtomb@plt+0x16fc>  // b.none
  40454c:	cmp	w0, #0x4d
  404550:	b.ne	4044f0 <wcrtomb@plt+0x16c0>  // b.any
  404554:	mov	w8, #0x4                   	// #4
  404558:	b	404530 <wcrtomb@plt+0x1700>
  40455c:	bl	402bb0 <__ctype_b_loc@plt>
  404560:	ldr	x8, [x0]
  404564:	and	w9, w20, #0xff
  404568:	ldrh	w8, [x8, w9, uxtw #1]
  40456c:	tbnz	w8, #11, 4045b8 <wcrtomb@plt+0x1788>
  404570:	cmp	w20, #0x2b
  404574:	cset	w8, ne  // ne = any
  404578:	cmp	w20, #0x7e
  40457c:	cset	w9, ne  // ne = any
  404580:	and	w8, w8, w9
  404584:	tbnz	w8, #0, 404600 <wcrtomb@plt+0x17d0>
  404588:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40458c:	ldr	w8, [x8, #2296]
  404590:	cmp	w8, #0x2
  404594:	b.eq	404600 <wcrtomb@plt+0x17d0>  // b.none
  404598:	bl	404640 <wcrtomb@plt+0x1810>
  40459c:	bl	40492c <wcrtomb@plt+0x1afc>
  4045a0:	str	x0, [x19, #16]
  4045a4:	cbz	x0, 404510 <wcrtomb@plt+0x16e0>
  4045a8:	cmp	w20, #0x2b
  4045ac:	b.ne	404620 <wcrtomb@plt+0x17f0>  // b.any
  4045b0:	mov	w8, #0x4                   	// #4
  4045b4:	b	404624 <wcrtomb@plt+0x17f4>
  4045b8:	mov	w0, w20
  4045bc:	bl	40492c <wcrtomb@plt+0x1afc>
  4045c0:	mov	w8, #0x2                   	// #2
  4045c4:	str	x0, [x19, #8]
  4045c8:	str	w8, [x19]
  4045cc:	bl	404640 <wcrtomb@plt+0x1810>
  4045d0:	cmp	w0, #0x7e
  4045d4:	b.ne	404610 <wcrtomb@plt+0x17e0>  // b.any
  4045d8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4045dc:	ldr	w8, [x8, #2296]
  4045e0:	cmp	w8, #0x2
  4045e4:	b.eq	404610 <wcrtomb@plt+0x17e0>  // b.none
  4045e8:	bl	404640 <wcrtomb@plt+0x1810>
  4045ec:	bl	40492c <wcrtomb@plt+0x1afc>
  4045f0:	cbz	x0, 404510 <wcrtomb@plt+0x16e0>
  4045f4:	str	x0, [x19, #16]
  4045f8:	mov	w8, #0x3                   	// #3
  4045fc:	b	404624 <wcrtomb@plt+0x17f4>
  404600:	cmp	w20, #0x24
  404604:	b.ne	404618 <wcrtomb@plt+0x17e8>  // b.any
  404608:	mov	w8, #0x6                   	// #6
  40460c:	b	404624 <wcrtomb@plt+0x17f4>
  404610:	bl	40489c <wcrtomb@plt+0x1a6c>
  404614:	b	404510 <wcrtomb@plt+0x16e0>
  404618:	mov	w0, wzr
  40461c:	b	404514 <wcrtomb@plt+0x16e4>
  404620:	mov	w8, #0x5                   	// #5
  404624:	str	w8, [x19]
  404628:	b	404510 <wcrtomb@plt+0x16e0>
  40462c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404630:	add	x1, x1, #0x3de
  404634:	mov	w2, #0x5                   	// #5
  404638:	bl	402d10 <dcgettext@plt>
  40463c:	bl	402f4c <wcrtomb@plt+0x11c>
  404640:	stp	x29, x30, [sp, #-32]!
  404644:	str	x19, [sp, #16]
  404648:	mov	x29, sp
  40464c:	bl	404384 <wcrtomb@plt+0x1554>
  404650:	mov	w19, w0
  404654:	bl	402bb0 <__ctype_b_loc@plt>
  404658:	ldr	x8, [x0]
  40465c:	ldrh	w8, [x8, w19, sxtw #1]
  404660:	tbnz	w8, #0, 40464c <wcrtomb@plt+0x181c>
  404664:	mov	w0, w19
  404668:	ldr	x19, [sp, #16]
  40466c:	ldp	x29, x30, [sp], #32
  404670:	ret
  404674:	stp	x29, x30, [sp, #-48]!
  404678:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40467c:	stp	x20, x19, [sp, #32]
  404680:	mov	w19, w0
  404684:	add	x1, x1, #0x57c
  404688:	mov	w2, #0x5                   	// #5
  40468c:	mov	x0, xzr
  404690:	str	x21, [sp, #16]
  404694:	mov	x29, sp
  404698:	bl	402d10 <dcgettext@plt>
  40469c:	mov	x20, x0
  4046a0:	bl	402750 <strlen@plt>
  4046a4:	bl	4118c8 <wcrtomb@plt+0xea98>
  4046a8:	and	w4, w19, #0xff
  4046ac:	mov	w1, #0x1                   	// #1
  4046b0:	mov	x2, #0xffffffffffffffff    	// #-1
  4046b4:	mov	x3, x20
  4046b8:	mov	x21, x0
  4046bc:	bl	402760 <__sprintf_chk@plt>
  4046c0:	mov	x0, x21
  4046c4:	bl	402f4c <wcrtomb@plt+0x11c>
  4046c8:	stp	x29, x30, [sp, #-32]!
  4046cc:	stp	x20, x19, [sp, #16]
  4046d0:	mov	x29, sp
  4046d4:	bl	409c48 <wcrtomb@plt+0x6e18>
  4046d8:	mov	x19, x0
  4046dc:	bl	404640 <wcrtomb@plt+0x1810>
  4046e0:	mov	w20, w0
  4046e4:	cmn	w0, #0x1
  4046e8:	b.eq	40472c <wcrtomb@plt+0x18fc>  // b.none
  4046ec:	cmp	w20, #0xa
  4046f0:	b.eq	40472c <wcrtomb@plt+0x18fc>  // b.none
  4046f4:	bl	402bb0 <__ctype_b_loc@plt>
  4046f8:	ldr	x8, [x0]
  4046fc:	ldrh	w8, [x8, w20, sxtw #1]
  404700:	tbnz	w8, #0, 40472c <wcrtomb@plt+0x18fc>
  404704:	cmp	w20, #0x23
  404708:	b.eq	40472c <wcrtomb@plt+0x18fc>  // b.none
  40470c:	cmp	w20, #0x3b
  404710:	b.eq	40472c <wcrtomb@plt+0x18fc>  // b.none
  404714:	cmp	w20, #0x7d
  404718:	b.eq	40472c <wcrtomb@plt+0x18fc>  // b.none
  40471c:	mov	x0, x19
  404720:	mov	w1, w20
  404724:	bl	405140 <wcrtomb@plt+0x2310>
  404728:	b	4046e0 <wcrtomb@plt+0x18b0>
  40472c:	mov	w0, w20
  404730:	bl	40489c <wcrtomb@plt+0x1a6c>
  404734:	mov	x0, x19
  404738:	mov	w1, wzr
  40473c:	bl	409d80 <wcrtomb@plt+0x6f50>
  404740:	mov	x0, x19
  404744:	bl	409c88 <wcrtomb@plt+0x6e58>
  404748:	bl	411a84 <wcrtomb@plt+0xec54>
  40474c:	mov	x20, x0
  404750:	mov	x0, x19
  404754:	bl	409ddc <wcrtomb@plt+0x6fac>
  404758:	mov	x0, x20
  40475c:	ldp	x20, x19, [sp, #16]
  404760:	ldp	x29, x30, [sp], #32
  404764:	ret
  404768:	stp	x29, x30, [sp, #-48]!
  40476c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404770:	add	x8, x8, #0x5b0
  404774:	ldp	x8, x9, [x8]
  404778:	stp	x22, x21, [sp, #16]
  40477c:	stp	x20, x19, [sp, #32]
  404780:	mov	x19, x3
  404784:	sub	x8, x9, x8
  404788:	mov	x21, x2
  40478c:	mov	x22, x1
  404790:	cmp	x8, #0x2f
  404794:	mov	x20, x0
  404798:	mov	x29, sp
  40479c:	b.hi	4047b0 <wcrtomb@plt+0x1980>  // b.pmore
  4047a0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4047a4:	add	x0, x0, #0x598
  4047a8:	mov	w1, #0x30                  	// #48
  4047ac:	bl	411c4c <_obstack_newchunk@@Base>
  4047b0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4047b4:	add	x8, x8, #0x5a8
  4047b8:	ldp	x0, x9, [x8]
  4047bc:	add	x9, x9, #0x30
  4047c0:	cmp	x9, x0
  4047c4:	str	x9, [x8, #8]
  4047c8:	b.ne	4047dc <wcrtomb@plt+0x19ac>  // b.any
  4047cc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4047d0:	ldrb	w9, [x8, #1512]
  4047d4:	orr	w9, w9, #0x2
  4047d8:	strb	w9, [x8, #1512]
  4047dc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4047e0:	add	x8, x8, #0x5a0
  4047e4:	ldr	x9, [x8, #40]
  4047e8:	ldp	x11, x12, [x8, #16]
  4047ec:	ldr	x10, [x8]
  4047f0:	add	x11, x9, x11
  4047f4:	bic	x9, x11, x9
  4047f8:	sub	x13, x12, x10
  4047fc:	sub	x10, x9, x10
  404800:	cmp	x10, x13
  404804:	csel	x9, x12, x9, hi  // hi = pmore
  404808:	stp	x9, x9, [x8, #8]
  40480c:	stp	x22, x21, [x0]
  404810:	cbz	x19, 404824 <wcrtomb@plt+0x19f4>
  404814:	ldr	x8, [x19, #16]
  404818:	ldr	q0, [x19]
  40481c:	str	x8, [x0, #32]
  404820:	str	q0, [x0, #16]
  404824:	str	x20, [x0, #40]
  404828:	ldp	x20, x19, [sp, #32]
  40482c:	ldp	x22, x21, [sp, #16]
  404830:	ldp	x29, x30, [sp], #48
  404834:	ret
  404838:	stp	x29, x30, [sp, #-16]!
  40483c:	mov	x29, sp
  404840:	bl	404640 <wcrtomb@plt+0x1810>
  404844:	cmp	w0, #0x22
  404848:	b.le	40486c <wcrtomb@plt+0x1a3c>
  40484c:	cmp	w0, #0x7d
  404850:	b.eq	404864 <wcrtomb@plt+0x1a34>  // b.none
  404854:	cmp	w0, #0x3b
  404858:	b.eq	40487c <wcrtomb@plt+0x1a4c>  // b.none
  40485c:	cmp	w0, #0x23
  404860:	b.ne	404884 <wcrtomb@plt+0x1a54>  // b.any
  404864:	bl	40489c <wcrtomb@plt+0x1a6c>
  404868:	b	40487c <wcrtomb@plt+0x1a4c>
  40486c:	cmn	w0, #0x1
  404870:	b.eq	40487c <wcrtomb@plt+0x1a4c>  // b.none
  404874:	cmp	w0, #0xa
  404878:	b.ne	404884 <wcrtomb@plt+0x1a54>  // b.any
  40487c:	ldp	x29, x30, [sp], #16
  404880:	ret
  404884:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404888:	add	x1, x1, #0x310
  40488c:	mov	w2, #0x5                   	// #5
  404890:	mov	x0, xzr
  404894:	bl	402d10 <dcgettext@plt>
  404898:	bl	402f4c <wcrtomb@plt+0x11c>
  40489c:	stp	x29, x30, [sp, #-16]!
  4048a0:	cmn	w0, #0x1
  4048a4:	mov	x29, sp
  4048a8:	b.eq	4048fc <wcrtomb@plt+0x1acc>  // b.none
  4048ac:	mov	w8, w0
  4048b0:	cmp	w0, #0xa
  4048b4:	b.ne	4048cc <wcrtomb@plt+0x1a9c>  // b.any
  4048b8:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4048bc:	ldr	x10, [x9, #1344]
  4048c0:	cbz	x10, 4048cc <wcrtomb@plt+0x1a9c>
  4048c4:	sub	x10, x10, #0x1
  4048c8:	str	x10, [x9, #1344]
  4048cc:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  4048d0:	ldr	x9, [x10, #1552]
  4048d4:	cbz	x9, 404904 <wcrtomb@plt+0x1ad4>
  4048d8:	adrp	x11, 432000 <_obstack_memory_used@@Base+0x2017c>
  4048dc:	ldr	x11, [x11, #1544]
  4048e0:	cmp	x9, x11
  4048e4:	b.ls	40491c <wcrtomb@plt+0x1aec>  // b.plast
  4048e8:	sub	x11, x9, #0x1
  4048ec:	str	x11, [x10, #1552]
  4048f0:	ldurb	w9, [x9, #-1]
  4048f4:	cmp	w9, w8
  4048f8:	b.ne	40491c <wcrtomb@plt+0x1aec>  // b.any
  4048fc:	ldp	x29, x30, [sp], #16
  404900:	ret
  404904:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  404908:	ldr	x1, [x9, #1568]
  40490c:	mov	w0, w8
  404910:	bl	402be0 <ungetc@plt>
  404914:	ldp	x29, x30, [sp], #16
  404918:	ret
  40491c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404920:	add	x0, x0, #0x775
  404924:	mov	w1, w8
  404928:	bl	40915c <wcrtomb@plt+0x632c>
  40492c:	stp	x29, x30, [sp, #-48]!
  404930:	stp	x22, x21, [sp, #16]
  404934:	stp	x20, x19, [sp, #32]
  404938:	mov	x29, sp
  40493c:	mov	w19, w0
  404940:	bl	402bb0 <__ctype_b_loc@plt>
  404944:	ldr	x8, [x0]
  404948:	and	w9, w19, #0xff
  40494c:	ldrh	w8, [x8, w9, uxtw #1]
  404950:	tbnz	w8, #11, 40495c <wcrtomb@plt+0x1b2c>
  404954:	mov	x20, xzr
  404958:	b	40498c <wcrtomb@plt+0x1b5c>
  40495c:	mov	x21, x0
  404960:	mov	x20, xzr
  404964:	mov	w22, #0xa                   	// #10
  404968:	mul	x8, x20, x22
  40496c:	add	x8, x8, w19, sxtw
  404970:	sub	x20, x8, #0x30
  404974:	bl	404384 <wcrtomb@plt+0x1554>
  404978:	ldr	x8, [x21]
  40497c:	and	w9, w0, #0xff
  404980:	mov	w19, w0
  404984:	ldrh	w8, [x8, w9, uxtw #1]
  404988:	tbnz	w8, #11, 404968 <wcrtomb@plt+0x1b38>
  40498c:	mov	w0, w19
  404990:	bl	40489c <wcrtomb@plt+0x1a6c>
  404994:	mov	x0, x20
  404998:	ldp	x20, x19, [sp, #32]
  40499c:	ldp	x22, x21, [sp, #16]
  4049a0:	ldp	x29, x30, [sp], #48
  4049a4:	ret
  4049a8:	stp	x29, x30, [sp, #-32]!
  4049ac:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4049b0:	ldrb	w8, [x8, #1900]
  4049b4:	str	x19, [sp, #16]
  4049b8:	mov	x29, sp
  4049bc:	cbnz	w8, 404a08 <wcrtomb@plt+0x1bd8>
  4049c0:	bl	409c48 <wcrtomb@plt+0x6e18>
  4049c4:	mov	x19, x0
  4049c8:	bl	404640 <wcrtomb@plt+0x1810>
  4049cc:	mov	w1, w0
  4049d0:	cmn	w0, #0x1
  4049d4:	b.eq	4049ec <wcrtomb@plt+0x1bbc>  // b.none
  4049d8:	cmp	w1, #0xa
  4049dc:	b.eq	4049ec <wcrtomb@plt+0x1bbc>  // b.none
  4049e0:	mov	x0, x19
  4049e4:	bl	405140 <wcrtomb@plt+0x2310>
  4049e8:	b	4049cc <wcrtomb@plt+0x1b9c>
  4049ec:	mov	x0, x19
  4049f0:	mov	w1, wzr
  4049f4:	bl	409d80 <wcrtomb@plt+0x6f50>
  4049f8:	mov	x0, x19
  4049fc:	ldr	x19, [sp, #16]
  404a00:	ldp	x29, x30, [sp], #32
  404a04:	ret
  404a08:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404a0c:	add	x1, x1, #0x5df
  404a10:	mov	w2, #0x5                   	// #5
  404a14:	mov	x0, xzr
  404a18:	bl	402d10 <dcgettext@plt>
  404a1c:	bl	402f4c <wcrtomb@plt+0x11c>
  404a20:	stp	x29, x30, [sp, #-80]!
  404a24:	stp	x26, x25, [sp, #16]
  404a28:	stp	x24, x23, [sp, #32]
  404a2c:	stp	x22, x21, [sp, #48]
  404a30:	stp	x20, x19, [sp, #64]
  404a34:	mov	x29, sp
  404a38:	mov	w21, w2
  404a3c:	mov	x22, x1
  404a40:	mov	x20, x0
  404a44:	bl	4049a8 <wcrtomb@plt+0x1b78>
  404a48:	mov	x19, x0
  404a4c:	bl	409c88 <wcrtomb@plt+0x6e58>
  404a50:	ldrb	w8, [x0]
  404a54:	cbz	w8, 404bd8 <wcrtomb@plt+0x1da8>
  404a58:	ldr	x24, [x20]
  404a5c:	mov	x23, x0
  404a60:	cmp	x24, #0x0
  404a64:	cset	w25, ne  // ne = any
  404a68:	cbz	x24, 404a84 <wcrtomb@plt+0x1c54>
  404a6c:	ldr	x0, [x24]
  404a70:	mov	x1, x23
  404a74:	bl	402ba0 <strcmp@plt>
  404a78:	cbz	w0, 404a84 <wcrtomb@plt+0x1c54>
  404a7c:	ldr	x24, [x24, #24]
  404a80:	b	404a60 <wcrtomb@plt+0x1c30>
  404a84:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404a88:	ldr	w8, [x8, #2296]
  404a8c:	cbz	w8, 404b48 <wcrtomb@plt+0x1d18>
  404a90:	tbnz	w25, #0, 404bb4 <wcrtomb@plt+0x1d84>
  404a94:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404a98:	add	x8, x8, #0x5b0
  404a9c:	ldp	x8, x9, [x8]
  404aa0:	sub	x8, x9, x8
  404aa4:	cmp	x8, #0x1f
  404aa8:	b.hi	404abc <wcrtomb@plt+0x1c8c>  // b.pmore
  404aac:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  404ab0:	add	x0, x0, #0x598
  404ab4:	mov	w1, #0x20                  	// #32
  404ab8:	bl	411c4c <_obstack_newchunk@@Base>
  404abc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404ac0:	add	x8, x8, #0x5a8
  404ac4:	ldp	x24, x9, [x8]
  404ac8:	add	x9, x9, #0x20
  404acc:	cmp	x9, x24
  404ad0:	str	x9, [x8, #8]
  404ad4:	b.ne	404ae8 <wcrtomb@plt+0x1cb8>  // b.any
  404ad8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404adc:	ldrb	w9, [x8, #1512]
  404ae0:	orr	w9, w9, #0x2
  404ae4:	strb	w9, [x8, #1512]
  404ae8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404aec:	add	x8, x8, #0x5a0
  404af0:	ldr	x9, [x8, #40]
  404af4:	ldp	x11, x12, [x8, #16]
  404af8:	ldr	x10, [x8]
  404afc:	mov	x0, x23
  404b00:	add	x11, x9, x11
  404b04:	bic	x9, x11, x9
  404b08:	sub	x13, x12, x10
  404b0c:	sub	x10, x9, x10
  404b10:	cmp	x10, x13
  404b14:	csel	x9, x12, x9, hi  // hi = pmore
  404b18:	stp	x9, x9, [x8, #8]
  404b1c:	bl	411a84 <wcrtomb@plt+0xec54>
  404b20:	mov	x1, x22
  404b24:	mov	w2, w21
  404b28:	str	x0, [x24]
  404b2c:	bl	4092a8 <wcrtomb@plt+0x6478>
  404b30:	str	x0, [x24, #16]
  404b34:	strb	wzr, [x24, #8]
  404b38:	ldr	x8, [x20]
  404b3c:	str	x8, [x24, #24]
  404b40:	str	x24, [x20]
  404b44:	b	404bb4 <wcrtomb@plt+0x1d84>
  404b48:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b4c:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b50:	adrp	x12, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b54:	adrp	x13, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b58:	ldr	x8, [x8, #1312]
  404b5c:	ldr	x10, [x10, #1304]
  404b60:	ldr	x12, [x12, #1280]
  404b64:	ldr	x0, [x13, #944]
  404b68:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b6c:	adrp	x11, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b70:	adrp	x13, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b74:	str	x8, [x9, #1520]
  404b78:	str	x10, [x11, #1528]
  404b7c:	str	x12, [x13, #1536]
  404b80:	cbz	x0, 404a90 <wcrtomb@plt+0x1c60>
  404b84:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  404b88:	add	x26, x26, #0x3b0
  404b8c:	mov	x1, x23
  404b90:	bl	402ba0 <strcmp@plt>
  404b94:	cbz	w0, 404ba4 <wcrtomb@plt+0x1d74>
  404b98:	ldr	x0, [x26, #40]!
  404b9c:	cbnz	x0, 404b8c <wcrtomb@plt+0x1d5c>
  404ba0:	b	404a90 <wcrtomb@plt+0x1c60>
  404ba4:	ldr	x8, [x26, #32]
  404ba8:	mov	x24, x26
  404bac:	ldr	x8, [x8]
  404bb0:	str	x8, [x26, #16]
  404bb4:	mov	x0, x19
  404bb8:	bl	409ddc <wcrtomb@plt+0x6fac>
  404bbc:	mov	x0, x24
  404bc0:	ldp	x20, x19, [sp, #64]
  404bc4:	ldp	x22, x21, [sp, #48]
  404bc8:	ldp	x24, x23, [sp, #32]
  404bcc:	ldp	x26, x25, [sp, #16]
  404bd0:	ldp	x29, x30, [sp], #80
  404bd4:	ret
  404bd8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404bdc:	add	x1, x1, #0x607
  404be0:	mov	w2, #0x5                   	// #5
  404be4:	mov	x0, xzr
  404be8:	bl	402d10 <dcgettext@plt>
  404bec:	bl	402f4c <wcrtomb@plt+0x11c>
  404bf0:	sub	sp, sp, #0x50
  404bf4:	stp	x24, x23, [sp, #32]
  404bf8:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  404bfc:	ldr	w8, [x24, #2292]
  404c00:	stp	x22, x21, [sp, #48]
  404c04:	stp	x20, x19, [sp, #64]
  404c08:	mov	w20, w1
  404c0c:	mov	w21, w0
  404c10:	cmp	w8, #0x1
  404c14:	stp	x29, x30, [sp, #16]
  404c18:	add	x29, sp, #0x10
  404c1c:	str	xzr, [sp, #8]
  404c20:	b.eq	404c34 <wcrtomb@plt+0x1e04>  // b.none
  404c24:	add	x1, sp, #0x8
  404c28:	mov	w0, w21
  404c2c:	bl	40818c <wcrtomb@plt+0x535c>
  404c30:	cbnz	w0, 404d9c <wcrtomb@plt+0x1f6c>
  404c34:	str	xzr, [sp, #8]
  404c38:	bl	409c48 <wcrtomb@plt+0x6e18>
  404c3c:	mov	x19, x0
  404c40:	b	404c68 <wcrtomb@plt+0x1e38>
  404c44:	mov	w1, #0x5c                  	// #92
  404c48:	mov	x0, x19
  404c4c:	bl	409d80 <wcrtomb@plt+0x6f50>
  404c50:	mov	w22, w23
  404c54:	mov	x0, x19
  404c58:	mov	w1, w22
  404c5c:	bl	409d80 <wcrtomb@plt+0x6f50>
  404c60:	mov	w8, wzr
  404c64:	cbnz	w8, 404d5c <wcrtomb@plt+0x1f2c>
  404c68:	bl	404384 <wcrtomb@plt+0x1554>
  404c6c:	mov	w22, w0
  404c70:	cmn	w0, #0x1
  404c74:	b.eq	404d64 <wcrtomb@plt+0x1f34>  // b.none
  404c78:	cmp	w22, #0xa
  404c7c:	b.eq	404d64 <wcrtomb@plt+0x1f34>  // b.none
  404c80:	ldr	w8, [x24, #2292]
  404c84:	cmp	w8, #0x1
  404c88:	b.ne	404c98 <wcrtomb@plt+0x1e68>  // b.any
  404c8c:	mov	w0, wzr
  404c90:	cbnz	w0, 404c54 <wcrtomb@plt+0x1e24>
  404c94:	b	404ca8 <wcrtomb@plt+0x1e78>
  404c98:	add	x1, sp, #0x8
  404c9c:	mov	w0, w22
  404ca0:	bl	40818c <wcrtomb@plt+0x535c>
  404ca4:	cbnz	w0, 404c54 <wcrtomb@plt+0x1e24>
  404ca8:	cmp	w22, w21
  404cac:	b.ne	404cb8 <wcrtomb@plt+0x1e88>  // b.any
  404cb0:	mov	w8, #0x1                   	// #1
  404cb4:	b	404c64 <wcrtomb@plt+0x1e34>
  404cb8:	cmp	w22, #0x5c
  404cbc:	b.ne	404d18 <wcrtomb@plt+0x1ee8>  // b.any
  404cc0:	bl	404384 <wcrtomb@plt+0x1554>
  404cc4:	cmn	w0, #0x1
  404cc8:	b.eq	404d50 <wcrtomb@plt+0x1f20>  // b.none
  404ccc:	cmp	w20, #0x0
  404cd0:	cset	w8, ne  // ne = any
  404cd4:	cmp	w0, #0x6e
  404cd8:	mov	w23, w0
  404cdc:	cset	w9, eq  // eq = none
  404ce0:	cmp	w0, #0xa
  404ce4:	mov	w22, #0xa                   	// #10
  404ce8:	b.eq	404c54 <wcrtomb@plt+0x1e24>  // b.none
  404cec:	and	w8, w8, w9
  404cf0:	tbnz	w8, #0, 404c54 <wcrtomb@plt+0x1e24>
  404cf4:	cmp	w20, #0x0
  404cf8:	cset	w8, eq  // eq = none
  404cfc:	cmp	w23, #0x26
  404d00:	cset	w9, eq  // eq = none
  404d04:	cmp	w23, w21
  404d08:	b.ne	404c44 <wcrtomb@plt+0x1e14>  // b.any
  404d0c:	and	w8, w8, w9
  404d10:	cbz	w8, 404c50 <wcrtomb@plt+0x1e20>
  404d14:	b	404c44 <wcrtomb@plt+0x1e14>
  404d18:	cbz	w20, 404c54 <wcrtomb@plt+0x1e24>
  404d1c:	cmp	w22, #0x5b
  404d20:	b.ne	404c54 <wcrtomb@plt+0x1e24>  // b.any
  404d24:	mov	w1, #0x5b                  	// #91
  404d28:	mov	x0, x19
  404d2c:	bl	409d80 <wcrtomb@plt+0x6f50>
  404d30:	add	x1, sp, #0x8
  404d34:	mov	x0, x19
  404d38:	bl	405158 <wcrtomb@plt+0x2328>
  404d3c:	mov	w22, w0
  404d40:	cmp	w0, #0x5d
  404d44:	b.eq	404c54 <wcrtomb@plt+0x1e24>  // b.none
  404d48:	mov	w8, #0x3                   	// #3
  404d4c:	b	404c64 <wcrtomb@plt+0x1e34>
  404d50:	mov	w8, #0x3                   	// #3
  404d54:	mov	w22, #0xffffffff            	// #-1
  404d58:	b	404c64 <wcrtomb@plt+0x1e34>
  404d5c:	cmp	w8, #0x3
  404d60:	b.ne	404d80 <wcrtomb@plt+0x1f50>  // b.any
  404d64:	cmp	w22, #0xa
  404d68:	b.ne	404d74 <wcrtomb@plt+0x1f44>  // b.any
  404d6c:	mov	w0, #0xa                   	// #10
  404d70:	bl	40489c <wcrtomb@plt+0x1a6c>
  404d74:	mov	x0, x19
  404d78:	bl	409ddc <wcrtomb@plt+0x6fac>
  404d7c:	mov	x19, xzr
  404d80:	mov	x0, x19
  404d84:	ldp	x20, x19, [sp, #64]
  404d88:	ldp	x22, x21, [sp, #48]
  404d8c:	ldp	x24, x23, [sp, #32]
  404d90:	ldp	x29, x30, [sp, #16]
  404d94:	add	sp, sp, #0x50
  404d98:	ret
  404d9c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404da0:	add	x0, x0, #0x50b
  404da4:	bl	402f4c <wcrtomb@plt+0x11c>
  404da8:	sub	sp, sp, #0x80
  404dac:	stp	x29, x30, [sp, #32]
  404db0:	stp	x28, x27, [sp, #48]
  404db4:	stp	x26, x25, [sp, #64]
  404db8:	stp	x24, x23, [sp, #80]
  404dbc:	stp	x22, x21, [sp, #96]
  404dc0:	stp	x20, x19, [sp, #112]
  404dc4:	ldrb	w8, [x0, #32]
  404dc8:	mov	x19, x0
  404dcc:	add	x29, sp, #0x20
  404dd0:	mov	x20, x2
  404dd4:	and	w8, w8, #0xf
  404dd8:	strb	w8, [x0, #32]
  404ddc:	mov	x0, x1
  404de0:	mov	x1, x2
  404de4:	bl	411a40 <wcrtomb@plt+0xec10>
  404de8:	mov	w2, #0x1                   	// #1
  404dec:	mov	x1, x20
  404df0:	mov	x21, x0
  404df4:	bl	402ff4 <wcrtomb@plt+0x1c4>
  404df8:	cmp	x0, #0x1
  404dfc:	add	x22, x21, x0
  404e00:	b.lt	404f50 <wcrtomb@plt+0x2120>  // b.tstop
  404e04:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404e08:	mov	w25, wzr
  404e0c:	mov	w2, wzr
  404e10:	mov	x28, sp
  404e14:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  404e18:	add	x24, x24, #0x1b6
  404e1c:	mov	x26, x21
  404e20:	b	404e58 <wcrtomb@plt+0x2028>
  404e24:	sub	x1, x26, x21
  404e28:	mov	x0, x21
  404e2c:	bl	4052b4 <wcrtomb@plt+0x2484>
  404e30:	mov	x20, x0
  404e34:	add	x21, x26, #0x1
  404e38:	mov	x27, x26
  404e3c:	mov	w2, w25
  404e40:	str	x0, [x28, #24]
  404e44:	str	wzr, [x0, #16]
  404e48:	add	x26, x27, #0x1
  404e4c:	cmp	x26, x22
  404e50:	mov	x28, x20
  404e54:	b.cs	404f58 <wcrtomb@plt+0x2128>  // b.hs, b.nlast
  404e58:	ldrb	w8, [x26]
  404e5c:	cmp	w8, #0x26
  404e60:	b.eq	404e24 <wcrtomb@plt+0x1ff4>  // b.none
  404e64:	cmp	w8, #0x5c
  404e68:	b.ne	404ec0 <wcrtomb@plt+0x2090>  // b.any
  404e6c:	sub	x1, x26, x21
  404e70:	mov	x0, x21
  404e74:	bl	4052b4 <wcrtomb@plt+0x2484>
  404e78:	add	x27, x26, #0x1
  404e7c:	mov	x20, x0
  404e80:	cmp	x27, x22
  404e84:	str	x0, [x28, #24]
  404e88:	b.eq	404eb0 <wcrtomb@plt+0x2080>  // b.none
  404e8c:	ldr	w8, [x23, #2296]
  404e90:	cmp	w8, #0x2
  404e94:	b.ne	404ecc <wcrtomb@plt+0x209c>  // b.any
  404e98:	bl	402bb0 <__ctype_b_loc@plt>
  404e9c:	ldr	x9, [x0]
  404ea0:	ldrb	w8, [x27]
  404ea4:	ldrh	w9, [x9, x8, lsl #1]
  404ea8:	tbnz	w9, #11, 404ecc <wcrtomb@plt+0x209c>
  404eac:	strb	w8, [x26]
  404eb0:	ldr	x8, [x20, #8]
  404eb4:	add	x8, x8, #0x1
  404eb8:	str	x8, [x20, #8]
  404ebc:	b	404f0c <wcrtomb@plt+0x20dc>
  404ec0:	mov	x27, x26
  404ec4:	mov	x20, x28
  404ec8:	b	404e48 <wcrtomb@plt+0x2018>
  404ecc:	ldrb	w10, [x27]
  404ed0:	sub	w9, w10, #0x30
  404ed4:	cmp	w9, #0x45
  404ed8:	b.hi	404f20 <wcrtomb@plt+0x20f0>  // b.pmore
  404edc:	adr	x11, 404ef4 <wcrtomb@plt+0x20c4>
  404ee0:	ldrb	w8, [x24, x9]
  404ee4:	add	x11, x11, x8, lsl #2
  404ee8:	mov	w2, #0x2                   	// #2
  404eec:	mov	w8, #0x2                   	// #2
  404ef0:	br	x11
  404ef4:	str	w9, [x20, #16]
  404ef8:	ldrb	w8, [x19, #32]
  404efc:	cmp	w9, w8, lsr #4
  404f00:	b.le	404f0c <wcrtomb@plt+0x20dc>
  404f04:	bfi	w8, w9, #4, #28
  404f08:	strb	w8, [x19, #32]
  404f0c:	mov	w2, w25
  404f10:	mov	w8, w25
  404f14:	add	x21, x26, #0x2
  404f18:	mov	w25, w8
  404f1c:	b	404e48 <wcrtomb@plt+0x2018>
  404f20:	strb	w10, [x26]
  404f24:	b	404eb0 <wcrtomb@plt+0x2080>
  404f28:	mov	w2, wzr
  404f2c:	mov	w8, wzr
  404f30:	b	404f14 <wcrtomb@plt+0x20e4>
  404f34:	mov	w2, #0x1                   	// #1
  404f38:	mov	w8, #0x1                   	// #1
  404f3c:	b	404f14 <wcrtomb@plt+0x20e4>
  404f40:	orr	w2, w25, #0x4
  404f44:	b	404f10 <wcrtomb@plt+0x20e0>
  404f48:	orr	w2, w25, #0x8
  404f4c:	b	404f10 <wcrtomb@plt+0x20e0>
  404f50:	mov	w2, wzr
  404f54:	mov	x20, sp
  404f58:	cmp	x21, x22
  404f5c:	b.cs	404f74 <wcrtomb@plt+0x2144>  // b.hs, b.nlast
  404f60:	sub	x1, x22, x21
  404f64:	mov	x0, x21
  404f68:	bl	4052b4 <wcrtomb@plt+0x2484>
  404f6c:	str	x0, [x20, #24]
  404f70:	mov	x20, x0
  404f74:	str	xzr, [x20, #24]
  404f78:	ldr	x8, [sp, #24]
  404f7c:	str	x8, [x19, #8]
  404f80:	ldp	x20, x19, [sp, #112]
  404f84:	ldp	x22, x21, [sp, #96]
  404f88:	ldp	x24, x23, [sp, #80]
  404f8c:	ldp	x26, x25, [sp, #64]
  404f90:	ldp	x28, x27, [sp, #48]
  404f94:	ldp	x29, x30, [sp, #32]
  404f98:	add	sp, sp, #0x80
  404f9c:	ret
  404fa0:	stp	x29, x30, [sp, #-64]!
  404fa4:	stp	x22, x21, [sp, #32]
  404fa8:	mov	x21, x0
  404fac:	stp	x24, x23, [sp, #16]
  404fb0:	stp	x20, x19, [sp, #48]
  404fb4:	str	xzr, [x21, #16]!
  404fb8:	ldrb	w8, [x21, #16]
  404fbc:	adrp	x22, 41f000 <_obstack_memory_used@@Base+0xd17c>
  404fc0:	mov	x20, x0
  404fc4:	mov	w19, wzr
  404fc8:	add	x22, x22, #0x1fc
  404fcc:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  404fd0:	and	w8, w8, #0xf0
  404fd4:	mov	w24, #0x1                   	// #1
  404fd8:	mov	x29, sp
  404fdc:	str	xzr, [x21, #8]
  404fe0:	strb	w8, [x21, #16]
  404fe4:	bl	404640 <wcrtomb@plt+0x1810>
  404fe8:	add	w8, w0, #0x1
  404fec:	cmp	w8, #0x7e
  404ff0:	b.hi	4050f0 <wcrtomb@plt+0x22c0>  // b.pmore
  404ff4:	adr	x9, 405004 <wcrtomb@plt+0x21d4>
  404ff8:	ldrb	w10, [x22, x8]
  404ffc:	add	x9, x9, x10, lsl #2
  405000:	br	x9
  405004:	ldr	x8, [x21]
  405008:	cbnz	x8, 4050fc <wcrtomb@plt+0x22cc>
  40500c:	bl	40492c <wcrtomb@plt+0x1afc>
  405010:	str	x0, [x21]
  405014:	cbnz	x0, 404fe4 <wcrtomb@plt+0x21b4>
  405018:	b	405108 <wcrtomb@plt+0x22d8>
  40501c:	ldr	w8, [x23, #2296]
  405020:	cmp	w8, #0x2
  405024:	b.eq	4050f0 <wcrtomb@plt+0x22c0>  // b.none
  405028:	mov	w8, #0x2                   	// #2
  40502c:	orr	w19, w19, w8
  405030:	b	404fe4 <wcrtomb@plt+0x21b4>
  405034:	ldr	w8, [x23, #2296]
  405038:	cmp	w8, #0x2
  40503c:	b.eq	4050f0 <wcrtomb@plt+0x22c0>  // b.none
  405040:	mov	w8, #0x4                   	// #4
  405044:	orr	w19, w19, w8
  405048:	b	404fe4 <wcrtomb@plt+0x21b4>
  40504c:	ldr	w8, [x23, #2296]
  405050:	cmp	w8, #0x2
  405054:	b.eq	4050f0 <wcrtomb@plt+0x22c0>  // b.none
  405058:	ldrb	w8, [x20, #32]
  40505c:	orr	w8, w8, #0x8
  405060:	strb	w8, [x20, #32]
  405064:	b	404fe4 <wcrtomb@plt+0x21b4>
  405068:	ldrb	w8, [x20, #32]
  40506c:	tbnz	w8, #0, 40511c <wcrtomb@plt+0x22ec>
  405070:	orr	w8, w8, #0x1
  405074:	strb	w8, [x20, #32]
  405078:	b	404fe4 <wcrtomb@plt+0x21b4>
  40507c:	ldrb	w8, [x20, #32]
  405080:	tst	w8, #0x6
  405084:	b.ne	405128 <wcrtomb@plt+0x22f8>  // b.any
  405088:	ubfx	w9, w8, #3, #1
  40508c:	lsl	w9, w24, w9
  405090:	ubfiz	w9, w9, #1, #2
  405094:	and	w8, w8, #0xfffffff9
  405098:	orr	w8, w9, w8
  40509c:	strb	w8, [x20, #32]
  4050a0:	b	404fe4 <wcrtomb@plt+0x21b4>
  4050a4:	bl	40489c <wcrtomb@plt+0x1a6c>
  4050a8:	b	4050d8 <wcrtomb@plt+0x22a8>
  4050ac:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4050b0:	ldr	x1, [x8, #1144]
  4050b4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4050b8:	add	x0, x0, #0x590
  4050bc:	mov	w2, #0x1                   	// #1
  4050c0:	bl	404a20 <wcrtomb@plt+0x1bf0>
  4050c4:	str	x0, [x20, #24]
  4050c8:	b	4050d8 <wcrtomb@plt+0x22a8>
  4050cc:	bl	404384 <wcrtomb@plt+0x1554>
  4050d0:	cmp	w0, #0xa
  4050d4:	b.ne	4050f0 <wcrtomb@plt+0x22c0>  // b.any
  4050d8:	mov	w0, w19
  4050dc:	ldp	x20, x19, [sp, #48]
  4050e0:	ldp	x22, x21, [sp, #32]
  4050e4:	ldp	x24, x23, [sp, #16]
  4050e8:	ldp	x29, x30, [sp], #64
  4050ec:	ret
  4050f0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4050f4:	add	x1, x1, #0x42b
  4050f8:	b	405130 <wcrtomb@plt+0x2300>
  4050fc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405100:	add	x1, x1, #0x489
  405104:	b	405130 <wcrtomb@plt+0x2300>
  405108:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40510c:	add	x1, x1, #0x4b0
  405110:	mov	w2, #0x5                   	// #5
  405114:	bl	402d10 <dcgettext@plt>
  405118:	bl	402f4c <wcrtomb@plt+0x11c>
  40511c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405120:	add	x1, x1, #0x465
  405124:	b	405130 <wcrtomb@plt+0x2300>
  405128:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40512c:	add	x1, x1, #0x441
  405130:	mov	w2, #0x5                   	// #5
  405134:	mov	x0, xzr
  405138:	bl	402d10 <dcgettext@plt>
  40513c:	bl	402f4c <wcrtomb@plt+0x11c>
  405140:	stp	x29, x30, [sp, #-16]!
  405144:	mov	x29, sp
  405148:	bl	409d80 <wcrtomb@plt+0x6f50>
  40514c:	bl	404384 <wcrtomb@plt+0x1554>
  405150:	ldp	x29, x30, [sp], #16
  405154:	ret
  405158:	stp	x29, x30, [sp, #-64]!
  40515c:	stp	x24, x23, [sp, #16]
  405160:	stp	x22, x21, [sp, #32]
  405164:	stp	x20, x19, [sp, #48]
  405168:	mov	x29, sp
  40516c:	mov	x19, x1
  405170:	mov	x20, x0
  405174:	bl	404384 <wcrtomb@plt+0x1554>
  405178:	mov	w21, w0
  40517c:	cmp	w0, #0x5e
  405180:	b.ne	405194 <wcrtomb@plt+0x2364>  // b.any
  405184:	mov	w1, #0x5e                  	// #94
  405188:	mov	x0, x20
  40518c:	bl	405140 <wcrtomb@plt+0x2310>
  405190:	mov	w21, w0
  405194:	cmp	w21, #0x5d
  405198:	mov	w23, wzr
  40519c:	b.ne	4051b0 <wcrtomb@plt+0x2380>  // b.any
  4051a0:	mov	x0, x20
  4051a4:	mov	w1, w21
  4051a8:	bl	405140 <wcrtomb@plt+0x2310>
  4051ac:	mov	w21, w0
  4051b0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4051b4:	ldr	w8, [x8, #2292]
  4051b8:	cmp	w8, #0x1
  4051bc:	b.ne	4051c8 <wcrtomb@plt+0x2398>  // b.any
  4051c0:	mov	w0, wzr
  4051c4:	b	4051d4 <wcrtomb@plt+0x23a4>
  4051c8:	mov	w0, w21
  4051cc:	mov	x1, x19
  4051d0:	bl	40818c <wcrtomb@plt+0x535c>
  4051d4:	sub	w8, w21, #0x2e
  4051d8:	cmp	w8, #0x2f
  4051dc:	b.hi	405220 <wcrtomb@plt+0x23f0>  // b.pmore
  4051e0:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4051e4:	add	x9, x9, #0x27b
  4051e8:	adr	x10, 4051f8 <wcrtomb@plt+0x23c8>
  4051ec:	ldrb	w11, [x9, x8]
  4051f0:	add	x10, x10, x11, lsl #2
  4051f4:	br	x10
  4051f8:	cbnz	w0, 405254 <wcrtomb@plt+0x2424>
  4051fc:	cmp	w23, #0x1
  405200:	b.eq	40525c <wcrtomb@plt+0x242c>  // b.none
  405204:	cmp	w23, #0x2
  405208:	b.ne	405288 <wcrtomb@plt+0x2458>  // b.any
  40520c:	cmp	w21, w24
  405210:	b.ne	405288 <wcrtomb@plt+0x2458>  // b.any
  405214:	mov	w8, #0x4                   	// #4
  405218:	mov	w23, #0x3                   	// #3
  40521c:	b	405290 <wcrtomb@plt+0x2460>
  405220:	cmn	w21, #0x1
  405224:	mov	w8, #0x1                   	// #1
  405228:	b.eq	405234 <wcrtomb@plt+0x2404>  // b.none
  40522c:	cmp	w21, #0xa
  405230:	b.ne	405288 <wcrtomb@plt+0x2458>  // b.any
  405234:	mov	w22, w21
  405238:	b	405290 <wcrtomb@plt+0x2460>
  40523c:	cbnz	w0, 405254 <wcrtomb@plt+0x2424>
  405240:	cmp	w23, #0x0
  405244:	csinc	w23, w23, wzr, ne  // ne = any
  405248:	mov	w8, #0x4                   	// #4
  40524c:	b	405290 <wcrtomb@plt+0x2460>
  405250:	cbz	w0, 40526c <wcrtomb@plt+0x243c>
  405254:	mov	w8, #0x4                   	// #4
  405258:	b	405290 <wcrtomb@plt+0x2460>
  40525c:	mov	w8, #0x4                   	// #4
  405260:	mov	w23, #0x2                   	// #2
  405264:	mov	w24, w21
  405268:	b	405290 <wcrtomb@plt+0x2460>
  40526c:	cmp	w23, #0x2
  405270:	b.cs	405280 <wcrtomb@plt+0x2450>  // b.hs, b.nlast
  405274:	mov	w8, #0x1                   	// #1
  405278:	mov	w22, w21
  40527c:	b	405290 <wcrtomb@plt+0x2460>
  405280:	cmp	w23, #0x3
  405284:	csel	w23, wzr, w23, eq  // eq = none
  405288:	mov	w8, wzr
  40528c:	and	w23, w23, #0xfffffffe
  405290:	orr	w8, w8, #0x4
  405294:	cmp	w8, #0x4
  405298:	b.eq	4051a0 <wcrtomb@plt+0x2370>  // b.none
  40529c:	mov	w0, w22
  4052a0:	ldp	x20, x19, [sp, #48]
  4052a4:	ldp	x22, x21, [sp, #32]
  4052a8:	ldp	x24, x23, [sp, #16]
  4052ac:	ldp	x29, x30, [sp], #64
  4052b0:	ret
  4052b4:	stp	x29, x30, [sp, #-48]!
  4052b8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4052bc:	add	x8, x8, #0x5b0
  4052c0:	ldp	x8, x9, [x8]
  4052c4:	str	x21, [sp, #16]
  4052c8:	stp	x20, x19, [sp, #32]
  4052cc:	mov	w19, w2
  4052d0:	sub	x8, x9, x8
  4052d4:	mov	x20, x1
  4052d8:	cmp	x8, #0x1f
  4052dc:	mov	x21, x0
  4052e0:	mov	x29, sp
  4052e4:	b.hi	4052f8 <wcrtomb@plt+0x24c8>  // b.pmore
  4052e8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4052ec:	add	x0, x0, #0x598
  4052f0:	mov	w1, #0x20                  	// #32
  4052f4:	bl	411c4c <_obstack_newchunk@@Base>
  4052f8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4052fc:	add	x8, x8, #0x5a8
  405300:	ldp	x0, x9, [x8]
  405304:	add	x9, x9, #0x20
  405308:	cmp	x9, x0
  40530c:	str	x9, [x8, #8]
  405310:	b.ne	405324 <wcrtomb@plt+0x24f4>  // b.any
  405314:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405318:	ldrb	w9, [x8, #1512]
  40531c:	orr	w9, w9, #0x2
  405320:	strb	w9, [x8, #1512]
  405324:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405328:	add	x8, x8, #0x5a0
  40532c:	ldr	x9, [x8, #40]
  405330:	ldp	x10, x12, [x8, #16]
  405334:	ldr	x11, [x8]
  405338:	add	x10, x9, x10
  40533c:	bic	x9, x10, x9
  405340:	sub	x10, x12, x11
  405344:	sub	x11, x9, x11
  405348:	cmp	x11, x10
  40534c:	mov	w10, #0xffffffff            	// #-1
  405350:	csel	x9, x12, x9, hi  // hi = pmore
  405354:	stp	x9, x9, [x8, #8]
  405358:	stp	x21, x20, [x0]
  40535c:	stp	w10, w19, [x0, #16]
  405360:	ldp	x20, x19, [sp, #32]
  405364:	ldr	x21, [sp, #16]
  405368:	ldp	x29, x30, [sp], #48
  40536c:	ret
  405370:	stp	x29, x30, [sp, #-32]!
  405374:	stp	x20, x19, [sp, #16]
  405378:	mov	x29, sp
  40537c:	mov	w20, w0
  405380:	bl	402bb0 <__ctype_b_loc@plt>
  405384:	and	w19, w20, #0xff
  405388:	cmp	w19, #0x5c
  40538c:	b.eq	4053b4 <wcrtomb@plt+0x2584>  // b.none
  405390:	ldr	x8, [x0]
  405394:	and	x9, x20, #0xff
  405398:	ldrh	w8, [x8, x9, lsl #1]
  40539c:	tbz	w8, #14, 4053b4 <wcrtomb@plt+0x2584>
  4053a0:	mov	w0, w19
  4053a4:	bl	4029f0 <putchar_unlocked@plt>
  4053a8:	ldp	x20, x19, [sp, #16]
  4053ac:	ldp	x29, x30, [sp], #32
  4053b0:	ret
  4053b4:	mov	w0, #0x5c                  	// #92
  4053b8:	bl	4029f0 <putchar_unlocked@plt>
  4053bc:	sub	w8, w19, #0x7
  4053c0:	cmp	w8, #0x6
  4053c4:	b.hi	4053e8 <wcrtomb@plt+0x25b8>  // b.pmore
  4053c8:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4053cc:	add	x9, x9, #0x7c8
  4053d0:	adr	x10, 4053e0 <wcrtomb@plt+0x25b0>
  4053d4:	ldrb	w11, [x9, x8]
  4053d8:	add	x10, x10, x11, lsl #2
  4053dc:	br	x10
  4053e0:	mov	w0, #0x61                  	// #97
  4053e4:	b	4053a4 <wcrtomb@plt+0x2574>
  4053e8:	cmp	w19, #0x5c
  4053ec:	b.ne	4053f8 <wcrtomb@plt+0x25c8>  // b.any
  4053f0:	mov	w0, #0x5c                  	// #92
  4053f4:	b	4053a4 <wcrtomb@plt+0x2574>
  4053f8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4053fc:	add	x1, x1, #0x840
  405400:	mov	w0, #0x1                   	// #1
  405404:	mov	w2, w19
  405408:	bl	4029a0 <__printf_chk@plt>
  40540c:	b	4053a8 <wcrtomb@plt+0x2578>
  405410:	mov	w0, #0x74                  	// #116
  405414:	b	4053a4 <wcrtomb@plt+0x2574>
  405418:	mov	w0, #0x6e                  	// #110
  40541c:	b	4053a4 <wcrtomb@plt+0x2574>
  405420:	mov	w0, #0x76                  	// #118
  405424:	b	4053a4 <wcrtomb@plt+0x2574>
  405428:	mov	w0, #0x66                  	// #102
  40542c:	b	4053a4 <wcrtomb@plt+0x2574>
  405430:	mov	w0, #0x72                  	// #114
  405434:	b	4053a4 <wcrtomb@plt+0x2574>
  405438:	stp	x29, x30, [sp, #-64]!
  40543c:	stp	x24, x23, [sp, #16]
  405440:	stp	x22, x21, [sp, #32]
  405444:	stp	x20, x19, [sp, #48]
  405448:	mov	x29, sp
  40544c:	cbz	x0, 405538 <wcrtomb@plt+0x2708>
  405450:	ldrb	w8, [x1, #21]
  405454:	mov	x19, x1
  405458:	mov	x20, x0
  40545c:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  405460:	cmp	w8, #0x7d
  405464:	b.ne	405474 <wcrtomb@plt+0x2644>  // b.any
  405468:	ldr	w8, [x22, #1576]
  40546c:	sub	w8, w8, #0x1
  405470:	str	w8, [x22, #1576]
  405474:	ldr	w8, [x22, #1576]
  405478:	cmp	w8, #0x1
  40547c:	b.lt	4054ac <wcrtomb@plt+0x267c>  // b.tstop
  405480:	adrp	x21, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405484:	mov	w23, wzr
  405488:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  40548c:	add	x21, x21, #0xa4b
  405490:	ldr	x1, [x24, #1304]
  405494:	mov	x0, x21
  405498:	bl	402d20 <fputs_unlocked@plt>
  40549c:	ldr	w8, [x22, #1576]
  4054a0:	add	w23, w23, #0x1
  4054a4:	cmp	w23, w8
  4054a8:	b.lt	405490 <wcrtomb@plt+0x2660>  // b.tstop
  4054ac:	ldr	x0, [x19]
  4054b0:	bl	40554c <wcrtomb@plt+0x271c>
  4054b4:	ldr	x8, [x19, #8]
  4054b8:	cbz	x8, 4054c4 <wcrtomb@plt+0x2694>
  4054bc:	mov	w0, #0x2c                  	// #44
  4054c0:	bl	4029f0 <putchar_unlocked@plt>
  4054c4:	ldr	x0, [x19, #8]
  4054c8:	bl	40554c <wcrtomb@plt+0x271c>
  4054cc:	ldrb	w8, [x19, #20]
  4054d0:	ldrb	w9, [x19, #21]
  4054d4:	cmp	w8, #0x0
  4054d8:	cset	w8, ne  // ne = any
  4054dc:	cmp	w9, #0x7b
  4054e0:	cset	w9, eq  // eq = none
  4054e4:	cmp	w8, w9
  4054e8:	b.eq	4054f4 <wcrtomb@plt+0x26c4>  // b.none
  4054ec:	mov	w0, #0x21                  	// #33
  4054f0:	bl	4029f0 <putchar_unlocked@plt>
  4054f4:	ldr	x8, [x19]
  4054f8:	cbnz	x8, 405504 <wcrtomb@plt+0x26d4>
  4054fc:	ldr	x8, [x19, #8]
  405500:	cbz	x8, 40550c <wcrtomb@plt+0x26dc>
  405504:	mov	w0, #0x20                  	// #32
  405508:	bl	4029f0 <putchar_unlocked@plt>
  40550c:	mov	x0, x20
  405510:	mov	x1, x19
  405514:	bl	405618 <wcrtomb@plt+0x27e8>
  405518:	mov	w0, #0xa                   	// #10
  40551c:	bl	4029f0 <putchar_unlocked@plt>
  405520:	ldrb	w8, [x19, #21]
  405524:	cmp	w8, #0x7b
  405528:	b.ne	405538 <wcrtomb@plt+0x2708>  // b.any
  40552c:	ldr	w8, [x22, #1576]
  405530:	add	w8, w8, #0x1
  405534:	str	w8, [x22, #1576]
  405538:	ldp	x20, x19, [sp, #48]
  40553c:	ldp	x22, x21, [sp, #32]
  405540:	ldp	x24, x23, [sp, #16]
  405544:	ldp	x29, x30, [sp], #64
  405548:	ret
  40554c:	stp	x29, x30, [sp, #-32]!
  405550:	str	x19, [sp, #16]
  405554:	mov	x29, sp
  405558:	cbz	x0, 40560c <wcrtomb@plt+0x27dc>
  40555c:	ldr	w8, [x0]
  405560:	mov	x19, x0
  405564:	cmp	w8, #0x6
  405568:	b.hi	40560c <wcrtomb@plt+0x27dc>  // b.pmore
  40556c:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405570:	add	x9, x9, #0x7cf
  405574:	adr	x10, 405584 <wcrtomb@plt+0x2754>
  405578:	ldrb	w11, [x9, x8]
  40557c:	add	x10, x10, x11, lsl #2
  405580:	br	x10
  405584:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405588:	ldr	x1, [x8, #1304]
  40558c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405590:	add	x0, x0, #0x853
  405594:	bl	402d20 <fputs_unlocked@plt>
  405598:	b	40560c <wcrtomb@plt+0x27dc>
  40559c:	ldr	x0, [x19, #24]
  4055a0:	bl	405850 <wcrtomb@plt+0x2a20>
  4055a4:	ldr	x0, [x19, #24]
  4055a8:	mov	w1, #0x1                   	// #1
  4055ac:	bl	4058a4 <wcrtomb@plt+0x2a74>
  4055b0:	b	40560c <wcrtomb@plt+0x27dc>
  4055b4:	ldr	x2, [x19, #8]
  4055b8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4055bc:	add	x1, x1, #0x868
  4055c0:	b	4055f8 <wcrtomb@plt+0x27c8>
  4055c4:	ldp	x2, x3, [x19, #8]
  4055c8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4055cc:	add	x1, x1, #0x85f
  4055d0:	mov	w0, #0x1                   	// #1
  4055d4:	bl	4029a0 <__printf_chk@plt>
  4055d8:	b	40560c <wcrtomb@plt+0x27dc>
  4055dc:	ldr	x2, [x19, #16]
  4055e0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4055e4:	add	x1, x1, #0x867
  4055e8:	b	4055f8 <wcrtomb@plt+0x27c8>
  4055ec:	ldr	x2, [x19, #16]
  4055f0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4055f4:	add	x1, x1, #0x862
  4055f8:	mov	w0, #0x1                   	// #1
  4055fc:	bl	4029a0 <__printf_chk@plt>
  405600:	b	40560c <wcrtomb@plt+0x27dc>
  405604:	mov	w0, #0x24                  	// #36
  405608:	bl	4029f0 <putchar_unlocked@plt>
  40560c:	ldr	x19, [sp, #16]
  405610:	ldp	x29, x30, [sp], #32
  405614:	ret
  405618:	stp	x29, x30, [sp, #-32]!
  40561c:	stp	x20, x19, [sp, #16]
  405620:	mov	x29, sp
  405624:	cbz	x1, 405660 <wcrtomb@plt+0x2830>
  405628:	mov	x20, x0
  40562c:	ldrb	w0, [x1, #21]
  405630:	mov	x19, x1
  405634:	bl	4029f0 <putchar_unlocked@plt>
  405638:	ldrb	w8, [x19, #21]
  40563c:	sub	w8, w8, #0x23
  405640:	cmp	w8, #0x5a
  405644:	b.hi	405778 <wcrtomb@plt+0x2948>  // b.pmore
  405648:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40564c:	add	x9, x9, #0x7d6
  405650:	adr	x10, 405660 <wcrtomb@plt+0x2830>
  405654:	ldrb	w11, [x9, x8]
  405658:	add	x10, x10, x11, lsl #2
  40565c:	br	x10
  405660:	ldp	x20, x19, [sp, #16]
  405664:	ldp	x29, x30, [sp], #32
  405668:	ret
  40566c:	ldr	w2, [x19, #24]
  405670:	cmn	w2, #0x1
  405674:	b.eq	405660 <wcrtomb@plt+0x2830>  // b.none
  405678:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40567c:	add	x1, x1, #0xb52
  405680:	mov	w0, #0x1                   	// #1
  405684:	bl	4029a0 <__printf_chk@plt>
  405688:	b	405660 <wcrtomb@plt+0x2830>
  40568c:	ldr	x8, [x19, #24]
  405690:	ldr	x9, [x20, #16]
  405694:	cmp	x8, x9
  405698:	b.cs	405660 <wcrtomb@plt+0x2830>  // b.hs, b.nlast
  40569c:	ldr	x9, [x20]
  4056a0:	mov	w10, #0x28                  	// #40
  4056a4:	madd	x8, x8, x10, x9
  4056a8:	ldr	x2, [x8, #24]
  4056ac:	cbz	x2, 405660 <wcrtomb@plt+0x2830>
  4056b0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  4056b4:	add	x1, x1, #0x7be
  4056b8:	b	405734 <wcrtomb@plt+0x2904>
  4056bc:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  4056c0:	ldr	x1, [x20, #1304]
  4056c4:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4056c8:	add	x0, x0, #0x8c7
  4056cc:	bl	402d20 <fputs_unlocked@plt>
  4056d0:	ldr	x2, [x19, #32]
  4056d4:	cbz	x2, 405660 <wcrtomb@plt+0x2830>
  4056d8:	ldr	x3, [x20, #1304]
  4056dc:	ldr	x0, [x19, #24]
  4056e0:	b	405704 <wcrtomb@plt+0x28d4>
  4056e4:	ldr	x0, [x19, #24]
  4056e8:	bl	405a14 <wcrtomb@plt+0x2be4>
  4056ec:	b	405660 <wcrtomb@plt+0x2830>
  4056f0:	mov	w0, #0x20                  	// #32
  4056f4:	bl	4029f0 <putchar_unlocked@plt>
  4056f8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4056fc:	ldp	x0, x2, [x19, #24]
  405700:	ldr	x3, [x8, #1304]
  405704:	mov	w1, #0x1                   	// #1
  405708:	bl	402740 <fwrite_unlocked@plt>
  40570c:	b	405660 <wcrtomb@plt+0x2830>
  405710:	mov	w0, #0x20                  	// #32
  405714:	bl	4029f0 <putchar_unlocked@plt>
  405718:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40571c:	ldr	x0, [x19, #24]
  405720:	ldr	x1, [x8, #1304]
  405724:	b	405764 <wcrtomb@plt+0x2934>
  405728:	ldr	x2, [x19, #24]
  40572c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  405730:	add	x1, x1, #0x7bf
  405734:	mov	w0, #0x1                   	// #1
  405738:	bl	4029a0 <__printf_chk@plt>
  40573c:	b	405660 <wcrtomb@plt+0x2830>
  405740:	mov	x0, x19
  405744:	bl	405a38 <wcrtomb@plt+0x2c08>
  405748:	b	405660 <wcrtomb@plt+0x2830>
  40574c:	mov	w0, #0x20                  	// #32
  405750:	bl	4029f0 <putchar_unlocked@plt>
  405754:	ldr	x8, [x19, #24]
  405758:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  40575c:	ldr	x1, [x9, #1304]
  405760:	ldr	x0, [x8]
  405764:	bl	402d20 <fputs_unlocked@plt>
  405768:	b	405660 <wcrtomb@plt+0x2830>
  40576c:	ldr	x0, [x19, #24]
  405770:	bl	40596c <wcrtomb@plt+0x2b3c>
  405774:	b	405660 <wcrtomb@plt+0x2830>
  405778:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40577c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405780:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405784:	add	x0, x0, #0x76f
  405788:	add	x1, x1, #0x872
  40578c:	add	x3, x3, #0x87e
  405790:	mov	w2, #0x194                 	// #404
  405794:	bl	402d90 <__assert_fail@plt>
  405798:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40579c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4057a0:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4057a4:	add	x0, x0, #0x76f
  4057a8:	add	x1, x1, #0x872
  4057ac:	add	x3, x3, #0x87e
  4057b0:	mov	w2, #0x123                 	// #291
  4057b4:	bl	402d90 <__assert_fail@plt>
  4057b8:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4057bc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4057c0:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4057c4:	add	x0, x0, #0x76f
  4057c8:	add	x1, x1, #0x872
  4057cc:	add	x3, x3, #0x87e
  4057d0:	mov	w2, #0x17e                 	// #382
  4057d4:	bl	402d90 <__assert_fail@plt>
  4057d8:	cbz	x0, 40584c <wcrtomb@plt+0x2a1c>
  4057dc:	stp	x29, x30, [sp, #-48]!
  4057e0:	stp	x20, x19, [sp, #32]
  4057e4:	mov	x19, x0
  4057e8:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4057ec:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  4057f0:	mov	w8, #0x1                   	// #1
  4057f4:	add	x0, x0, #0x846
  4057f8:	stp	x22, x21, [sp, #16]
  4057fc:	mov	x29, sp
  405800:	str	w8, [x20, #1576]
  405804:	bl	402b50 <puts@plt>
  405808:	ldr	x8, [x19, #16]
  40580c:	cbz	x8, 40583c <wcrtomb@plt+0x2a0c>
  405810:	mov	x21, xzr
  405814:	mov	x22, xzr
  405818:	ldr	x8, [x19]
  40581c:	mov	x0, x19
  405820:	add	x1, x8, x21
  405824:	bl	405438 <wcrtomb@plt+0x2608>
  405828:	ldr	x8, [x19, #16]
  40582c:	add	x22, x22, #0x1
  405830:	add	x21, x21, #0x28
  405834:	cmp	x22, x8
  405838:	b.cc	405818 <wcrtomb@plt+0x29e8>  // b.lo, b.ul, b.last
  40583c:	str	wzr, [x20, #1576]
  405840:	ldp	x20, x19, [sp, #32]
  405844:	ldp	x22, x21, [sp, #16]
  405848:	ldp	x29, x30, [sp], #48
  40584c:	ret
  405850:	stp	x29, x30, [sp, #-32]!
  405854:	str	x19, [sp, #16]
  405858:	mov	x29, sp
  40585c:	cbz	x0, 405884 <wcrtomb@plt+0x2a54>
  405860:	mov	x19, x0
  405864:	mov	w0, #0x2f                  	// #47
  405868:	bl	4029f0 <putchar_unlocked@plt>
  40586c:	ldr	x1, [x19, #72]
  405870:	add	x0, x19, #0x5a
  405874:	bl	405900 <wcrtomb@plt+0x2ad0>
  405878:	mov	w0, #0x2f                  	// #47
  40587c:	bl	4029f0 <putchar_unlocked@plt>
  405880:	b	405898 <wcrtomb@plt+0x2a68>
  405884:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405888:	ldr	x1, [x8, #1304]
  40588c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405890:	add	x0, x0, #0x86c
  405894:	bl	402d20 <fputs_unlocked@plt>
  405898:	ldr	x19, [sp, #16]
  40589c:	ldp	x29, x30, [sp], #32
  4058a0:	ret
  4058a4:	stp	x29, x30, [sp, #-32]!
  4058a8:	stp	x20, x19, [sp, #16]
  4058ac:	mov	x29, sp
  4058b0:	cbz	x0, 4058f4 <wcrtomb@plt+0x2ac4>
  4058b4:	ldrb	w8, [x0, #64]
  4058b8:	mov	w19, w1
  4058bc:	mov	x20, x0
  4058c0:	tbz	w8, #1, 4058d8 <wcrtomb@plt+0x2aa8>
  4058c4:	tst	w19, #0x1
  4058c8:	mov	w8, #0x69                  	// #105
  4058cc:	mov	w9, #0x49                  	// #73
  4058d0:	csel	w0, w9, w8, ne  // ne = any
  4058d4:	bl	4029f0 <putchar_unlocked@plt>
  4058d8:	ldrb	w8, [x20, #64]
  4058dc:	tbz	w8, #2, 4058f4 <wcrtomb@plt+0x2ac4>
  4058e0:	tst	w19, #0x1
  4058e4:	mov	w8, #0x6d                  	// #109
  4058e8:	mov	w9, #0x4d                  	// #77
  4058ec:	csel	w0, w9, w8, ne  // ne = any
  4058f0:	bl	4029f0 <putchar_unlocked@plt>
  4058f4:	ldp	x20, x19, [sp, #16]
  4058f8:	ldp	x29, x30, [sp], #32
  4058fc:	ret
  405900:	stp	x29, x30, [sp, #-48]!
  405904:	stp	x22, x21, [sp, #16]
  405908:	stp	x20, x19, [sp, #32]
  40590c:	mov	x29, sp
  405910:	cbz	x1, 40595c <wcrtomb@plt+0x2b2c>
  405914:	adrp	x21, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405918:	mov	x19, x1
  40591c:	mov	x20, x0
  405920:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  405924:	add	x21, x21, #0x86f
  405928:	b	405938 <wcrtomb@plt+0x2b08>
  40592c:	bl	405370 <wcrtomb@plt+0x2540>
  405930:	add	x20, x20, #0x1
  405934:	cbz	x19, 40595c <wcrtomb@plt+0x2b2c>
  405938:	ldrb	w0, [x20]
  40593c:	sub	x19, x19, #0x1
  405940:	cmp	w0, #0x2f
  405944:	b.ne	40592c <wcrtomb@plt+0x2afc>  // b.any
  405948:	ldr	x1, [x22, #1304]
  40594c:	mov	x0, x21
  405950:	bl	402d20 <fputs_unlocked@plt>
  405954:	add	x20, x20, #0x1
  405958:	cbnz	x19, 405938 <wcrtomb@plt+0x2b08>
  40595c:	ldp	x20, x19, [sp, #32]
  405960:	ldp	x22, x21, [sp, #16]
  405964:	ldp	x29, x30, [sp], #48
  405968:	ret
  40596c:	stp	x29, x30, [sp, #-32]!
  405970:	str	x19, [sp, #16]
  405974:	mov	x29, sp
  405978:	cbz	x0, 405a08 <wcrtomb@plt+0x2bd8>
  40597c:	mov	x19, x0
  405980:	ldr	x0, [x0]
  405984:	bl	405850 <wcrtomb@plt+0x2a20>
  405988:	ldr	x0, [x19, #8]
  40598c:	bl	405b44 <wcrtomb@plt+0x2d14>
  405990:	mov	w0, #0x2f                  	// #47
  405994:	bl	4029f0 <putchar_unlocked@plt>
  405998:	ldr	x0, [x19]
  40599c:	mov	w1, wzr
  4059a0:	bl	4058a4 <wcrtomb@plt+0x2a74>
  4059a4:	ldrb	w8, [x19, #32]
  4059a8:	tbz	w8, #0, 4059b4 <wcrtomb@plt+0x2b84>
  4059ac:	mov	w0, #0x67                  	// #103
  4059b0:	bl	4029f0 <putchar_unlocked@plt>
  4059b4:	ldrb	w8, [x19, #32]
  4059b8:	tbz	w8, #3, 4059c4 <wcrtomb@plt+0x2b94>
  4059bc:	mov	w0, #0x65                  	// #101
  4059c0:	bl	4029f0 <putchar_unlocked@plt>
  4059c4:	ldrb	w8, [x19, #32]
  4059c8:	tst	w8, #0x6
  4059cc:	b.eq	4059d8 <wcrtomb@plt+0x2ba8>  // b.none
  4059d0:	mov	w0, #0x70                  	// #112
  4059d4:	bl	4029f0 <putchar_unlocked@plt>
  4059d8:	ldr	x2, [x19, #16]
  4059dc:	cbz	x2, 4059f0 <wcrtomb@plt+0x2bc0>
  4059e0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4059e4:	add	x1, x1, #0x868
  4059e8:	mov	w0, #0x1                   	// #1
  4059ec:	bl	4029a0 <__printf_chk@plt>
  4059f0:	ldr	x8, [x19, #24]
  4059f4:	cbz	x8, 405a08 <wcrtomb@plt+0x2bd8>
  4059f8:	mov	w0, #0x77                  	// #119
  4059fc:	bl	4029f0 <putchar_unlocked@plt>
  405a00:	ldr	x0, [x19, #24]
  405a04:	bl	405a14 <wcrtomb@plt+0x2be4>
  405a08:	ldr	x19, [sp, #16]
  405a0c:	ldp	x29, x30, [sp], #32
  405a10:	ret
  405a14:	cbz	x0, 405a34 <wcrtomb@plt+0x2c04>
  405a18:	stp	x29, x30, [sp, #-16]!
  405a1c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405a20:	ldr	x0, [x0]
  405a24:	ldr	x1, [x8, #1304]
  405a28:	mov	x29, sp
  405a2c:	bl	402d20 <fputs_unlocked@plt>
  405a30:	ldp	x29, x30, [sp], #16
  405a34:	ret
  405a38:	stp	x29, x30, [sp, #-48]!
  405a3c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405a40:	stp	x20, x19, [sp, #32]
  405a44:	ldr	w20, [x8, #2292]
  405a48:	mov	x19, x0
  405a4c:	mov	w0, #0x2f                  	// #47
  405a50:	str	x21, [sp, #16]
  405a54:	mov	x29, sp
  405a58:	bl	4029f0 <putchar_unlocked@plt>
  405a5c:	cmp	w20, #0x1
  405a60:	b.le	405ae0 <wcrtomb@plt+0x2cb0>
  405a64:	ldr	x8, [x19, #24]
  405a68:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  405a6c:	ldr	x0, [x8]
  405a70:	cbz	x0, 405a90 <wcrtomb@plt+0x2c60>
  405a74:	mov	w21, #0x2                   	// #2
  405a78:	ldr	x1, [x20, #1304]
  405a7c:	bl	402d20 <fputs_unlocked@plt>
  405a80:	ldr	x8, [x19, #24]
  405a84:	ldr	x0, [x8, w21, uxtw #3]
  405a88:	add	w21, w21, #0x2
  405a8c:	cbnz	x0, 405a78 <wcrtomb@plt+0x2c48>
  405a90:	mov	w0, #0x2f                  	// #47
  405a94:	bl	4029f0 <putchar_unlocked@plt>
  405a98:	ldr	x8, [x19, #24]
  405a9c:	ldr	x9, [x8]
  405aa0:	cbz	x9, 405ac8 <wcrtomb@plt+0x2c98>
  405aa4:	mov	w21, #0x1                   	// #1
  405aa8:	ldr	x0, [x8, w21, uxtw #3]
  405aac:	ldr	x1, [x20, #1304]
  405ab0:	bl	402d20 <fputs_unlocked@plt>
  405ab4:	ldr	x8, [x19, #24]
  405ab8:	add	w9, w21, #0x1
  405abc:	add	w21, w21, #0x2
  405ac0:	ldr	x9, [x8, w9, uxtw #3]
  405ac4:	cbnz	x9, 405aa8 <wcrtomb@plt+0x2c78>
  405ac8:	mov	w0, #0x2f                  	// #47
  405acc:	bl	4029f0 <putchar_unlocked@plt>
  405ad0:	ldp	x20, x19, [sp, #32]
  405ad4:	ldr	x21, [sp, #16]
  405ad8:	ldp	x29, x30, [sp], #48
  405adc:	ret
  405ae0:	mov	x20, xzr
  405ae4:	b	405af4 <wcrtomb@plt+0x2cc4>
  405ae8:	add	x20, x20, #0x1
  405aec:	cmp	x20, #0x100
  405af0:	b.eq	405b10 <wcrtomb@plt+0x2ce0>  // b.none
  405af4:	ldr	x8, [x19, #24]
  405af8:	ldrb	w8, [x8, x20]
  405afc:	cmp	w8, w20, uxtb
  405b00:	b.eq	405ae8 <wcrtomb@plt+0x2cb8>  // b.none
  405b04:	mov	w0, w20
  405b08:	bl	4029f0 <putchar_unlocked@plt>
  405b0c:	b	405ae8 <wcrtomb@plt+0x2cb8>
  405b10:	mov	w0, #0x2f                  	// #47
  405b14:	bl	4029f0 <putchar_unlocked@plt>
  405b18:	mov	x20, xzr
  405b1c:	b	405b2c <wcrtomb@plt+0x2cfc>
  405b20:	add	x20, x20, #0x1
  405b24:	cmp	x20, #0x100
  405b28:	b.eq	405ac8 <wcrtomb@plt+0x2c98>  // b.none
  405b2c:	ldr	x8, [x19, #24]
  405b30:	ldrb	w0, [x8, x20]
  405b34:	cmp	x20, x0
  405b38:	b.eq	405b20 <wcrtomb@plt+0x2cf0>  // b.none
  405b3c:	bl	4029f0 <putchar_unlocked@plt>
  405b40:	b	405b20 <wcrtomb@plt+0x2cf0>
  405b44:	stp	x29, x30, [sp, #-64]!
  405b48:	str	x23, [sp, #16]
  405b4c:	stp	x22, x21, [sp, #32]
  405b50:	stp	x20, x19, [sp, #48]
  405b54:	mov	x29, sp
  405b58:	cbz	x0, 405c14 <wcrtomb@plt+0x2de4>
  405b5c:	adrp	x20, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405b60:	adrp	x22, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405b64:	mov	x19, x0
  405b68:	mov	w23, wzr
  405b6c:	add	x20, x20, #0x8c9
  405b70:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  405b74:	add	x22, x22, #0x834
  405b78:	b	405b90 <wcrtomb@plt+0x2d60>
  405b7c:	mov	w0, #0x1                   	// #1
  405b80:	mov	x1, x20
  405b84:	bl	4029a0 <__printf_chk@plt>
  405b88:	ldr	x19, [x19, #24]
  405b8c:	cbz	x19, 405c14 <wcrtomb@plt+0x2de4>
  405b90:	ldr	w8, [x19, #20]
  405b94:	cmp	w8, w23
  405b98:	b.eq	405be0 <wcrtomb@plt+0x2db0>  // b.none
  405b9c:	mov	w0, #0x5c                  	// #92
  405ba0:	bl	4029f0 <putchar_unlocked@plt>
  405ba4:	ldrsw	x8, [x19, #20]
  405ba8:	cmp	w8, #0x3
  405bac:	b.cs	405bb8 <wcrtomb@plt+0x2d88>  // b.hs, b.nlast
  405bb0:	ldr	w0, [x22, x8, lsl #2]
  405bb4:	b	405bd8 <wcrtomb@plt+0x2da8>
  405bb8:	and	w8, w8, #0xc
  405bbc:	cmp	w8, #0x4
  405bc0:	b.eq	405bd4 <wcrtomb@plt+0x2da4>  // b.none
  405bc4:	cmp	w8, #0x8
  405bc8:	b.ne	405bdc <wcrtomb@plt+0x2dac>  // b.any
  405bcc:	mov	w0, #0x6c                  	// #108
  405bd0:	b	405bd8 <wcrtomb@plt+0x2da8>
  405bd4:	mov	w0, #0x75                  	// #117
  405bd8:	bl	4029f0 <putchar_unlocked@plt>
  405bdc:	ldr	w23, [x19, #20]
  405be0:	ldr	x2, [x19, #8]
  405be4:	cbz	x2, 405bf8 <wcrtomb@plt+0x2dc8>
  405be8:	ldr	x3, [x21, #1304]
  405bec:	ldr	x0, [x19]
  405bf0:	mov	w1, #0x1                   	// #1
  405bf4:	bl	402740 <fwrite_unlocked@plt>
  405bf8:	ldr	w2, [x19, #16]
  405bfc:	cmn	w2, #0x1
  405c00:	b.eq	405b88 <wcrtomb@plt+0x2d58>  // b.none
  405c04:	cbnz	w2, 405b7c <wcrtomb@plt+0x2d4c>
  405c08:	mov	w0, #0x26                  	// #38
  405c0c:	bl	4029f0 <putchar_unlocked@plt>
  405c10:	b	405b88 <wcrtomb@plt+0x2d58>
  405c14:	ldp	x20, x19, [sp, #48]
  405c18:	ldp	x22, x21, [sp, #32]
  405c1c:	ldr	x23, [sp, #16]
  405c20:	ldp	x29, x30, [sp], #64
  405c24:	ret
  405c28:	sub	sp, sp, #0x100
  405c2c:	stp	x20, x19, [sp, #240]
  405c30:	mov	x19, x0
  405c34:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  405c38:	mov	x20, x1
  405c3c:	add	x0, x0, #0x630
  405c40:	mov	w2, #0x32                  	// #50
  405c44:	mov	x1, xzr
  405c48:	stp	x29, x30, [sp, #208]
  405c4c:	stp	x22, x21, [sp, #224]
  405c50:	add	x29, sp, #0xd0
  405c54:	bl	405d6c <wcrtomb@plt+0x2f3c>
  405c58:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  405c5c:	add	x0, x0, #0x660
  405c60:	mov	x1, xzr
  405c64:	mov	x2, xzr
  405c68:	bl	405d6c <wcrtomb@plt+0x2f3c>
  405c6c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  405c70:	add	x0, x0, #0x690
  405c74:	mov	x1, xzr
  405c78:	mov	x2, xzr
  405c7c:	bl	405d6c <wcrtomb@plt+0x2f3c>
  405c80:	mov	w8, #0x1                   	// #1
  405c84:	strb	w8, [sp, #32]
  405c88:	cbz	x20, 405c9c <wcrtomb@plt+0x2e6c>
  405c8c:	ldr	x8, [x20]
  405c90:	cbz	x8, 405c9c <wcrtomb@plt+0x2e6c>
  405c94:	str	x20, [sp, #8]
  405c98:	b	405cb4 <wcrtomb@plt+0x2e84>
  405c9c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405ca0:	ldr	x8, [x8, #1912]
  405ca4:	cbnz	x8, 405d54 <wcrtomb@plt+0x2f24>
  405ca8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405cac:	add	x8, x8, #0x458
  405cb0:	str	x8, [sp, #8]
  405cb4:	adrp	x8, 405000 <wcrtomb@plt+0x21d0>
  405cb8:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  405cbc:	add	x8, x8, #0xdc4
  405cc0:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  405cc4:	add	x20, x20, #0x630
  405cc8:	stp	xzr, xzr, [sp, #16]
  405ccc:	str	x8, [sp, #40]
  405cd0:	str	xzr, [sp, #192]
  405cd4:	b	405cec <wcrtomb@plt+0x2ebc>
  405cd8:	add	x1, sp, #0x8
  405cdc:	mov	x0, x19
  405ce0:	bl	405f9c <wcrtomb@plt+0x316c>
  405ce4:	cmn	w0, #0x1
  405ce8:	b.ne	405d24 <wcrtomb@plt+0x2ef4>  // b.any
  405cec:	add	x0, sp, #0x8
  405cf0:	mov	x1, x19
  405cf4:	mov	w2, wzr
  405cf8:	bl	405dcc <wcrtomb@plt+0x2f9c>
  405cfc:	tbz	w0, #0, 405d1c <wcrtomb@plt+0x2eec>
  405d00:	ldrb	w8, [x22, #1904]
  405d04:	cbz	w8, 405cd8 <wcrtomb@plt+0x2ea8>
  405d08:	add	x0, sp, #0x8
  405d0c:	bl	405edc <wcrtomb@plt+0x30ac>
  405d10:	mov	x0, x20
  405d14:	bl	405f2c <wcrtomb@plt+0x30fc>
  405d18:	b	405cd8 <wcrtomb@plt+0x2ea8>
  405d1c:	mov	w21, wzr
  405d20:	b	405d28 <wcrtomb@plt+0x2ef8>
  405d24:	mov	w21, w0
  405d28:	add	x0, sp, #0x8
  405d2c:	bl	40677c <wcrtomb@plt+0x394c>
  405d30:	ldr	x8, [sp, #16]
  405d34:	ldp	x20, x19, [sp, #240]
  405d38:	ldp	x29, x30, [sp, #208]
  405d3c:	cmp	x8, #0x0
  405d40:	mov	w8, #0x2                   	// #2
  405d44:	csel	w0, w21, w8, eq  // eq = none
  405d48:	ldp	x22, x21, [sp, #224]
  405d4c:	add	sp, sp, #0x100
  405d50:	ret
  405d54:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405d58:	add	x1, x1, #0x997
  405d5c:	mov	w2, #0x5                   	// #5
  405d60:	mov	x0, xzr
  405d64:	bl	402d10 <dcgettext@plt>
  405d68:	bl	40915c <wcrtomb@plt+0x632c>
  405d6c:	stp	x29, x30, [sp, #-48]!
  405d70:	stp	x20, x19, [sp, #32]
  405d74:	mov	x19, x0
  405d78:	add	x0, x2, #0x1
  405d7c:	str	x21, [sp, #16]
  405d80:	mov	x29, sp
  405d84:	mov	x21, x2
  405d88:	mov	x20, x1
  405d8c:	bl	4119fc <wcrtomb@plt+0xebcc>
  405d90:	mov	w8, #0x1                   	// #1
  405d94:	stp	x0, x0, [x19]
  405d98:	stp	xzr, x21, [x19, #16]
  405d9c:	strb	w8, [x19, #32]
  405da0:	cbz	x20, 405db0 <wcrtomb@plt+0x2f80>
  405da4:	ldur	x8, [x20, #36]
  405da8:	stur	x8, [x19, #36]
  405dac:	b	405db4 <wcrtomb@plt+0x2f84>
  405db0:	stur	xzr, [x19, #36]
  405db4:	ldp	x20, x19, [sp, #32]
  405db8:	ldr	x21, [sp, #16]
  405dbc:	ldp	x29, x30, [sp], #48
  405dc0:	ret
  405dc4:	mov	w0, wzr
  405dc8:	ret
  405dcc:	stp	x29, x30, [sp, #-64]!
  405dd0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405dd4:	ldr	x8, [x8, #1728]
  405dd8:	stp	x22, x21, [sp, #32]
  405ddc:	stp	x20, x19, [sp, #48]
  405de0:	mov	w21, w2
  405de4:	mov	x19, x1
  405de8:	mov	x20, x0
  405dec:	stp	x24, x23, [sp, #16]
  405df0:	mov	x29, sp
  405df4:	cbz	x8, 405dfc <wcrtomb@plt+0x2fcc>
  405df8:	bl	406894 <wcrtomb@plt+0x3a64>
  405dfc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405e00:	strb	wzr, [x8, #1736]
  405e04:	cbnz	w21, 405e10 <wcrtomb@plt+0x2fe0>
  405e08:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405e0c:	str	xzr, [x8, #1600]
  405e10:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405e14:	mov	w9, #0x1                   	// #1
  405e18:	strb	w9, [x8, #1616]
  405e1c:	ldr	x8, [x20, #32]
  405e20:	mov	x0, x20
  405e24:	blr	x8
  405e28:	tbz	w0, #0, 405e40 <wcrtomb@plt+0x3010>
  405e2c:	ldr	x8, [x20, #16]
  405e30:	mov	w0, #0x1                   	// #1
  405e34:	add	x8, x8, #0x1
  405e38:	str	x8, [x20, #16]
  405e3c:	b	405ec8 <wcrtomb@plt+0x3098>
  405e40:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  405e44:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  405e48:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  405e4c:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  405e50:	b	405e84 <wcrtomb@plt+0x3054>
  405e54:	ldrb	w8, [x23, #1892]
  405e58:	strb	w8, [x20, #24]
  405e5c:	ldr	x8, [x20]
  405e60:	mov	x1, x20
  405e64:	add	x9, x8, #0x8
  405e68:	str	x9, [x20]
  405e6c:	ldr	x0, [x8]
  405e70:	bl	4069d4 <wcrtomb@plt+0x3ba4>
  405e74:	ldr	x8, [x20, #32]
  405e78:	mov	x0, x20
  405e7c:	blr	x8
  405e80:	tbnz	w0, #0, 405e2c <wcrtomb@plt+0x2ffc>
  405e84:	mov	x0, x20
  405e88:	bl	40677c <wcrtomb@plt+0x394c>
  405e8c:	ldr	x8, [x20]
  405e90:	ldr	x8, [x8]
  405e94:	cbz	x8, 405ec4 <wcrtomb@plt+0x3094>
  405e98:	ldrb	w8, [x20, #24]
  405e9c:	cbz	w8, 405e5c <wcrtomb@plt+0x302c>
  405ea0:	mov	x0, x19
  405ea4:	str	xzr, [x20, #16]
  405ea8:	str	xzr, [x21, #1648]
  405eac:	bl	406988 <wcrtomb@plt+0x3b58>
  405eb0:	bl	404130 <wcrtomb@plt+0x1300>
  405eb4:	ldr	x8, [x22, #1912]
  405eb8:	cbz	x8, 405e54 <wcrtomb@plt+0x3024>
  405ebc:	strb	wzr, [x24, #1752]
  405ec0:	b	405e54 <wcrtomb@plt+0x3024>
  405ec4:	mov	w0, wzr
  405ec8:	ldp	x20, x19, [sp, #48]
  405ecc:	ldp	x22, x21, [sp, #32]
  405ed0:	ldp	x24, x23, [sp, #16]
  405ed4:	ldp	x29, x30, [sp], #64
  405ed8:	ret
  405edc:	stp	x29, x30, [sp, #-32]!
  405ee0:	str	x19, [sp, #16]
  405ee4:	mov	x19, x0
  405ee8:	ldr	x0, [x0, #184]
  405eec:	mov	x29, sp
  405ef0:	cbz	x0, 405efc <wcrtomb@plt+0x30cc>
  405ef4:	bl	402840 <fileno@plt>
  405ef8:	cbz	w0, 405f04 <wcrtomb@plt+0x30d4>
  405efc:	ldr	x2, [x19, #48]
  405f00:	b	405f0c <wcrtomb@plt+0x30dc>
  405f04:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405f08:	add	x2, x2, #0xa3e
  405f0c:	ldr	x3, [x19, #16]
  405f10:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405f14:	add	x1, x1, #0xa26
  405f18:	mov	w0, #0x1                   	// #1
  405f1c:	bl	4029a0 <__printf_chk@plt>
  405f20:	ldr	x19, [sp, #16]
  405f24:	ldp	x29, x30, [sp], #32
  405f28:	ret
  405f2c:	stp	x29, x30, [sp, #-32]!
  405f30:	stp	x20, x19, [sp, #16]
  405f34:	ldr	x19, [x0, #8]
  405f38:	mov	x29, sp
  405f3c:	cbnz	x19, 405f44 <wcrtomb@plt+0x3114>
  405f40:	ldr	x19, [x0]
  405f44:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  405f48:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  405f4c:	ldr	x1, [x10, #1304]
  405f50:	ldr	x20, [x0, #16]
  405f54:	add	x8, x8, #0x660
  405f58:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405f5c:	adrp	x10, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405f60:	add	x9, x9, #0xa4e
  405f64:	add	x10, x10, #0xa44
  405f68:	cmp	x0, x8
  405f6c:	csel	x0, x10, x9, eq  // eq = none
  405f70:	bl	402d20 <fputs_unlocked@plt>
  405f74:	cbz	x20, 405f88 <wcrtomb@plt+0x3158>
  405f78:	ldrb	w0, [x19], #1
  405f7c:	sub	x20, x20, #0x1
  405f80:	bl	405370 <wcrtomb@plt+0x2540>
  405f84:	cbnz	x20, 405f78 <wcrtomb@plt+0x3148>
  405f88:	mov	w0, #0xa                   	// #10
  405f8c:	bl	4029f0 <putchar_unlocked@plt>
  405f90:	ldp	x20, x19, [sp, #16]
  405f94:	ldp	x29, x30, [sp], #32
  405f98:	ret
  405f9c:	stp	x29, x30, [sp, #-96]!
  405fa0:	stp	x28, x27, [sp, #16]
  405fa4:	stp	x26, x25, [sp, #32]
  405fa8:	stp	x24, x23, [sp, #48]
  405fac:	stp	x22, x21, [sp, #64]
  405fb0:	stp	x20, x19, [sp, #80]
  405fb4:	mov	x29, sp
  405fb8:	sub	sp, sp, #0x1, lsl #12
  405fbc:	sub	sp, sp, #0x10
  405fc0:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  405fc4:	ldrb	w8, [x26, #1904]
  405fc8:	ldr	x9, [x0, #16]
  405fcc:	cmp	w8, #0x0
  405fd0:	cset	w8, ne  // ne = any
  405fd4:	cmp	x9, #0x1
  405fd8:	b.lt	406648 <wcrtomb@plt+0x3818>  // b.tstop
  405fdc:	ldr	x19, [x0]
  405fe0:	mov	w10, #0x28                  	// #40
  405fe4:	adrp	x22, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405fe8:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xd17c>
  405fec:	mov	x20, x0
  405ff0:	mov	x21, x1
  405ff4:	add	x22, x22, #0xa58
  405ff8:	madd	x28, x9, x10, x19
  405ffc:	add	x24, x24, #0x8ce
  406000:	tbz	w8, #0, 406020 <wcrtomb@plt+0x31f0>
  406004:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406008:	ldr	x1, [x8, #1304]
  40600c:	mov	x0, x22
  406010:	bl	402d20 <fputs_unlocked@plt>
  406014:	mov	x0, x20
  406018:	mov	x1, x19
  40601c:	bl	405438 <wcrtomb@plt+0x2608>
  406020:	mov	x0, x19
  406024:	mov	x1, x21
  406028:	bl	406ef4 <wcrtomb@plt+0x40c4>
  40602c:	ldrb	w8, [x19, #20]
  406030:	and	w9, w0, #0x1
  406034:	cmp	w8, w9
  406038:	b.ne	406058 <wcrtomb@plt+0x3228>  // b.any
  40603c:	add	x19, x19, #0x28
  406040:	ldrb	w8, [x26, #1904]
  406044:	cmp	w8, #0x0
  406048:	cset	w8, ne  // ne = any
  40604c:	cmp	x19, x28
  406050:	b.cc	406000 <wcrtomb@plt+0x31d0>  // b.lo, b.ul, b.last
  406054:	b	406648 <wcrtomb@plt+0x3818>
  406058:	ldrb	w1, [x19, #21]
  40605c:	sub	w8, w1, #0x23
  406060:	cmp	w8, #0x5a
  406064:	b.hi	406758 <wcrtomb@plt+0x3928>  // b.pmore
  406068:	adr	x9, 40603c <wcrtomb@plt+0x320c>
  40606c:	ldrh	w10, [x24, x8, lsl #1]
  406070:	add	x9, x9, x10, lsl #2
  406074:	br	x9
  406078:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  40607c:	add	x23, x23, #0x6d0
  406080:	mov	x0, x23
  406084:	bl	406c28 <wcrtomb@plt+0x3df8>
  406088:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40608c:	ldr	x0, [x23, #16]
  406090:	ldr	x3, [x21, #16]
  406094:	ldrb	w4, [x8, #1128]
  406098:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40609c:	add	x2, x2, #0xa76
  4060a0:	b	4062f8 <wcrtomb@plt+0x34c8>
  4060a4:	ldr	x8, [x19, #24]
  4060a8:	cbz	x8, 40603c <wcrtomb@plt+0x320c>
  4060ac:	bl	407054 <wcrtomb@plt+0x4224>
  4060b0:	ldr	x8, [x19, #24]
  4060b4:	add	x19, x19, #0x28
  4060b8:	str	x8, [x0]
  4060bc:	b	406040 <wcrtomb@plt+0x3210>
  4060c0:	ldr	x24, [x19, #32]
  4060c4:	mov	x0, xzr
  4060c8:	bl	407140 <wcrtomb@plt+0x4310>
  4060cc:	cbz	w24, 40652c <wcrtomb@plt+0x36fc>
  4060d0:	ldr	x8, [x19, #24]
  4060d4:	sub	w9, w24, #0x1
  4060d8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  4060dc:	add	x1, x1, #0xd72
  4060e0:	strb	wzr, [x8, w9, sxtw]
  4060e4:	ldr	x0, [x19, #24]
  4060e8:	bl	402940 <popen@plt>
  4060ec:	mov	x23, x0
  4060f0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4060f4:	add	x0, x0, #0x6d0
  4060f8:	bl	406c28 <wcrtomb@plt+0x3df8>
  4060fc:	cbnz	x23, 406560 <wcrtomb@plt+0x3730>
  406100:	b	406764 <wcrtomb@plt+0x3934>
  406104:	bl	407054 <wcrtomb@plt+0x4224>
  406108:	ldr	x8, [x19, #24]
  40610c:	str	x8, [x0, #8]
  406110:	ldr	x8, [x19, #32]
  406114:	str	x8, [x0, #16]
  406118:	b	40603c <wcrtomb@plt+0x320c>
  40611c:	ldrb	w8, [x26, #1904]
  406120:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  406124:	str	xzr, [x9, #1600]
  406128:	cbnz	w8, 40651c <wcrtomb@plt+0x36ec>
  40612c:	b	40603c <wcrtomb@plt+0x320c>
  406130:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406134:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  406138:	add	x0, x0, #0x630
  40613c:	add	x1, x1, #0x660
  406140:	bl	4072ac <wcrtomb@plt+0x447c>
  406144:	ldrb	w8, [x26, #1904]
  406148:	cbnz	w8, 40642c <wcrtomb@plt+0x35fc>
  40614c:	b	40603c <wcrtomb@plt+0x320c>
  406150:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406154:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  406158:	add	x0, x0, #0x630
  40615c:	add	x1, x1, #0x468
  406160:	mov	w2, #0x1                   	// #1
  406164:	bl	406d64 <wcrtomb@plt+0x3f34>
  406168:	mov	x0, x21
  40616c:	bl	4074f8 <wcrtomb@plt+0x46c8>
  406170:	tbnz	w0, #0, 406710 <wcrtomb@plt+0x38e0>
  406174:	mov	w2, #0x1                   	// #1
  406178:	mov	x0, x21
  40617c:	mov	x1, x20
  406180:	bl	405dcc <wcrtomb@plt+0x2f9c>
  406184:	tbnz	w0, #0, 406514 <wcrtomb@plt+0x36e4>
  406188:	b	406710 <wcrtomb@plt+0x38e0>
  40618c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406190:	ldrb	w9, [x8, #1736]
  406194:	tbz	w9, #0, 4064b0 <wcrtomb@plt+0x3680>
  406198:	strb	wzr, [x8, #1736]
  40619c:	b	40603c <wcrtomb@plt+0x320c>
  4061a0:	ldr	x8, [x19, #24]
  4061a4:	ldr	x0, [x8, #16]
  4061a8:	cbz	x0, 40603c <wcrtomb@plt+0x320c>
  4061ac:	bl	402c20 <feof_unlocked@plt>
  4061b0:	cbnz	w0, 40603c <wcrtomb@plt+0x320c>
  4061b4:	str	xzr, [sp]
  4061b8:	ldr	x8, [x19, #24]
  4061bc:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4061c0:	ldrb	w2, [x9, #1128]
  4061c4:	mov	x0, sp
  4061c8:	ldr	x3, [x8, #16]
  4061cc:	add	x1, sp, #0x8
  4061d0:	bl	409700 <wcrtomb@plt+0x68d0>
  4061d4:	mov	x23, x0
  4061d8:	cmn	w23, #0x1
  4061dc:	b.eq	40663c <wcrtomb@plt+0x380c>  // b.none
  4061e0:	bl	407054 <wcrtomb@plt+0x4224>
  4061e4:	mov	w8, #0x1                   	// #1
  4061e8:	strb	w8, [x0, #32]
  4061ec:	ldr	x8, [sp]
  4061f0:	sxtw	x9, w23
  4061f4:	add	x19, x19, #0x28
  4061f8:	stp	x8, x9, [x0, #8]
  4061fc:	b	406040 <wcrtomb@plt+0x3210>
  406200:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  406204:	add	x25, x25, #0x638
  406208:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40620c:	ldp	x23, x24, [x25]
  406210:	ldrb	w1, [x8, #1128]
  406214:	mov	x0, x23
  406218:	mov	x2, x24
  40621c:	bl	402cb0 <memchr@plt>
  406220:	cbz	x0, 406628 <wcrtomb@plt+0x37f8>
  406224:	ldr	x9, [x25, #16]
  406228:	ldr	x10, [x25]
  40622c:	add	x8, x0, #0x1
  406230:	sub	x11, x23, x8
  406234:	sub	x12, x24, x8
  406238:	str	x8, [x25]
  40623c:	add	x8, x11, x9
  406240:	add	x9, x12, x10
  406244:	stp	x9, x8, [x25, #8]
  406248:	ldrb	w8, [x26, #1904]
  40624c:	ldr	x19, [x20]
  406250:	cbz	w8, 406260 <wcrtomb@plt+0x3430>
  406254:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406258:	add	x0, x0, #0x630
  40625c:	bl	405f2c <wcrtomb@plt+0x30fc>
  406260:	mov	w8, #0x1                   	// #1
  406264:	b	40662c <wcrtomb@plt+0x37fc>
  406268:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  40626c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  406270:	add	x0, x0, #0x660
  406274:	add	x1, x1, #0x630
  406278:	bl	4072ac <wcrtomb@plt+0x447c>
  40627c:	b	406514 <wcrtomb@plt+0x36e4>
  406280:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  406284:	add	x25, x25, #0x638
  406288:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40628c:	mov	x27, x24
  406290:	ldp	x23, x24, [x25]
  406294:	ldrb	w1, [x8, #1128]
  406298:	mov	x0, x23
  40629c:	mov	x2, x24
  4062a0:	bl	402cb0 <memchr@plt>
  4062a4:	ldrb	w8, [x25, #24]
  4062a8:	sub	x9, x0, x23
  4062ac:	cmp	x0, #0x0
  4062b0:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  4062b4:	and	w8, w8, #0x1
  4062b8:	csel	x1, x9, x24, ne  // ne = any
  4062bc:	csinc	w2, w8, wzr, eq  // eq = none
  4062c0:	add	x3, x3, #0x6d0
  4062c4:	mov	x0, x23
  4062c8:	mov	x24, x27
  4062cc:	b	406488 <wcrtomb@plt+0x3658>
  4062d0:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  4062d4:	add	x23, x23, #0x6d0
  4062d8:	mov	x0, x23
  4062dc:	bl	406c28 <wcrtomb@plt+0x3df8>
  4062e0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4062e4:	ldr	x0, [x23, #16]
  4062e8:	ldr	x3, [x21, #48]
  4062ec:	ldrb	w4, [x8, #1128]
  4062f0:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4062f4:	add	x2, x2, #0xa7c
  4062f8:	mov	w1, #0x1                   	// #1
  4062fc:	bl	402b90 <__fprintf_chk@plt>
  406300:	ldr	x0, [x23, #16]
  406304:	bl	406c68 <wcrtomb@plt+0x3e38>
  406308:	b	40603c <wcrtomb@plt+0x320c>
  40630c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406310:	ldrb	w8, [x8, #1888]
  406314:	cbnz	w8, 406334 <wcrtomb@plt+0x3504>
  406318:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40631c:	add	x8, x8, #0x638
  406320:	ldp	x0, x1, [x8]
  406324:	ldrb	w2, [x8, #24]
  406328:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  40632c:	add	x3, x3, #0x6d0
  406330:	bl	4070a0 <wcrtomb@plt+0x4270>
  406334:	mov	x0, x21
  406338:	bl	4074f8 <wcrtomb@plt+0x46c8>
  40633c:	tbnz	w0, #0, 4066dc <wcrtomb@plt+0x38ac>
  406340:	mov	x0, x21
  406344:	mov	x1, x20
  406348:	mov	w2, wzr
  40634c:	bl	405dcc <wcrtomb@plt+0x2f9c>
  406350:	tbnz	w0, #0, 406514 <wcrtomb@plt+0x36e4>
  406354:	b	4066dc <wcrtomb@plt+0x38ac>
  406358:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40635c:	add	x8, x8, #0x638
  406360:	ldp	x0, x1, [x8]
  406364:	ldrb	w2, [x8, #24]
  406368:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  40636c:	add	x3, x3, #0x6d0
  406370:	b	406488 <wcrtomb@plt+0x3658>
  406374:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406378:	add	x0, x0, #0x660
  40637c:	mov	w1, wzr
  406380:	bl	4071a8 <wcrtomb@plt+0x4378>
  406384:	ldrb	w8, [x26, #1904]
  406388:	cbz	w8, 40603c <wcrtomb@plt+0x320c>
  40638c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406390:	add	x0, x0, #0x630
  406394:	bl	405f2c <wcrtomb@plt+0x30fc>
  406398:	b	40642c <wcrtomb@plt+0x35fc>
  40639c:	ldr	x23, [x19, #24]
  4063a0:	ldr	x8, [x23, #16]
  4063a4:	cbz	x8, 40603c <wcrtomb@plt+0x320c>
  4063a8:	adrp	x27, 432000 <_obstack_memory_used@@Base+0x2017c>
  4063ac:	add	x27, x27, #0x638
  4063b0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4063b4:	ldp	x24, x25, [x27]
  4063b8:	ldrb	w1, [x8, #1128]
  4063bc:	mov	x0, x24
  4063c0:	mov	x2, x25
  4063c4:	bl	402cb0 <memchr@plt>
  4063c8:	ldrb	w8, [x27, #24]
  4063cc:	sub	x9, x0, x24
  4063d0:	cmp	x0, #0x0
  4063d4:	adrp	x22, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4063d8:	and	w8, w8, #0x1
  4063dc:	csel	x1, x9, x25, ne  // ne = any
  4063e0:	csinc	w2, w8, wzr, eq  // eq = none
  4063e4:	mov	x0, x24
  4063e8:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4063ec:	mov	x3, x23
  4063f0:	add	x22, x22, #0xa58
  4063f4:	add	x24, x24, #0x8ce
  4063f8:	b	406488 <wcrtomb@plt+0x3658>
  4063fc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406400:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  406404:	add	x0, x0, #0x660
  406408:	add	x1, x1, #0x630
  40640c:	b	406420 <wcrtomb@plt+0x35f0>
  406410:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406414:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  406418:	add	x0, x0, #0x630
  40641c:	add	x1, x1, #0x660
  406420:	bl	407210 <wcrtomb@plt+0x43e0>
  406424:	ldrb	w8, [x26, #1904]
  406428:	cbz	w8, 40603c <wcrtomb@plt+0x320c>
  40642c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406430:	add	x0, x0, #0x660
  406434:	b	406524 <wcrtomb@plt+0x36f4>
  406438:	ldr	x3, [x19, #24]
  40643c:	ldr	x8, [x3, #16]
  406440:	cbz	x8, 40603c <wcrtomb@plt+0x320c>
  406444:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406448:	add	x8, x8, #0x638
  40644c:	ldp	x0, x1, [x8]
  406450:	ldrb	w2, [x8, #24]
  406454:	b	406488 <wcrtomb@plt+0x3658>
  406458:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40645c:	ldr	w8, [x8, #2292]
  406460:	cmp	w8, #0x2
  406464:	b.lt	4064e0 <wcrtomb@plt+0x36b0>  // b.tstop
  406468:	ldr	x0, [x19, #24]
  40646c:	bl	407a1c <wcrtomb@plt+0x4bec>
  406470:	b	406514 <wcrtomb@plt+0x36e4>
  406474:	ldp	x0, x8, [x19, #24]
  406478:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  40647c:	add	x3, x3, #0x6d0
  406480:	mov	w2, #0x1                   	// #1
  406484:	sub	x1, x8, #0x1
  406488:	bl	4070a0 <wcrtomb@plt+0x4270>
  40648c:	b	40603c <wcrtomb@plt+0x320c>
  406490:	ldr	x0, [x19, #24]
  406494:	bl	407574 <wcrtomb@plt+0x4744>
  406498:	b	406514 <wcrtomb@plt+0x36e4>
  40649c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4064a0:	ldrb	w9, [x8, #1736]
  4064a4:	cmp	w9, #0x1
  4064a8:	b.ne	40603c <wcrtomb@plt+0x320c>  // b.any
  4064ac:	strb	wzr, [x8, #1736]
  4064b0:	ldr	x8, [x20]
  4064b4:	ldr	x9, [x19, #24]
  4064b8:	mov	w10, #0x28                  	// #40
  4064bc:	madd	x19, x9, x10, x8
  4064c0:	b	406040 <wcrtomb@plt+0x3210>
  4064c4:	ldr	w8, [x19, #24]
  4064c8:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4064cc:	ldr	w9, [x9, #1152]
  4064d0:	cmn	w8, #0x1
  4064d4:	csel	w0, w9, w8, eq  // eq = none
  4064d8:	bl	4072fc <wcrtomb@plt+0x44cc>
  4064dc:	b	40603c <wcrtomb@plt+0x320c>
  4064e0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4064e4:	add	x8, x8, #0x638
  4064e8:	ldr	x9, [x8, #8]
  4064ec:	cmp	x9, #0x1
  4064f0:	b.lt	406514 <wcrtomb@plt+0x36e4>  // b.tstop
  4064f4:	ldr	x8, [x8]
  4064f8:	add	x9, x8, x9
  4064fc:	ldr	x10, [x19, #24]
  406500:	ldrb	w11, [x8]
  406504:	ldrb	w10, [x10, x11]
  406508:	strb	w10, [x8], #1
  40650c:	cmp	x8, x9
  406510:	b.cc	4064fc <wcrtomb@plt+0x36cc>  // b.lo, b.ul, b.last
  406514:	ldrb	w8, [x26, #1904]
  406518:	cbz	w8, 40603c <wcrtomb@plt+0x320c>
  40651c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406520:	add	x0, x0, #0x630
  406524:	bl	405f2c <wcrtomb@plt+0x30fc>
  406528:	b	40603c <wcrtomb@plt+0x320c>
  40652c:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  406530:	add	x23, x23, #0x630
  406534:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  406538:	add	x1, x1, #0x13b
  40653c:	mov	w2, #0x1                   	// #1
  406540:	mov	x0, x23
  406544:	bl	406d64 <wcrtomb@plt+0x3f34>
  406548:	ldr	x0, [x23, #8]
  40654c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  406550:	add	x1, x1, #0xd72
  406554:	bl	402940 <popen@plt>
  406558:	mov	x23, x0
  40655c:	cbz	x23, 406764 <wcrtomb@plt+0x3934>
  406560:	mov	x0, x23
  406564:	bl	402c20 <feof_unlocked@plt>
  406568:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  40656c:	cbz	w0, 4065a4 <wcrtomb@plt+0x3774>
  406570:	mov	x0, x23
  406574:	bl	402d50 <pclose@plt>
  406578:	cbz	w24, 4065dc <wcrtomb@plt+0x37ac>
  40657c:	ldr	x0, [x25, #1760]
  406580:	bl	406c68 <wcrtomb@plt+0x3e38>
  406584:	b	40661c <wcrtomb@plt+0x37ec>
  406588:	ldr	x3, [x25, #1760]
  40658c:	add	x0, sp, #0x8
  406590:	mov	w1, #0x1                   	// #1
  406594:	bl	40952c <wcrtomb@plt+0x66fc>
  406598:	mov	x0, x23
  40659c:	bl	402c20 <feof_unlocked@plt>
  4065a0:	cbnz	w0, 406570 <wcrtomb@plt+0x3740>
  4065a4:	add	x0, sp, #0x8
  4065a8:	mov	w1, #0x1                   	// #1
  4065ac:	mov	w2, #0x1000                	// #4096
  4065b0:	mov	x3, x23
  4065b4:	bl	402b60 <fread_unlocked@plt>
  4065b8:	cmp	w0, #0x1
  4065bc:	b.lt	406598 <wcrtomb@plt+0x3768>  // b.tstop
  4065c0:	sxtw	x2, w0
  4065c4:	cbnz	w24, 406588 <wcrtomb@plt+0x3758>
  4065c8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4065cc:	add	x0, x0, #0x708
  4065d0:	add	x1, sp, #0x8
  4065d4:	bl	406d64 <wcrtomb@plt+0x3f34>
  4065d8:	b	406598 <wcrtomb@plt+0x3768>
  4065dc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4065e0:	ldr	x9, [x8, #1816]
  4065e4:	cbz	x9, 40660c <wcrtomb@plt+0x37dc>
  4065e8:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  4065ec:	ldr	x10, [x10, #1808]
  4065f0:	sub	x9, x9, #0x1
  4065f4:	adrp	x11, 432000 <_obstack_memory_used@@Base+0x2017c>
  4065f8:	ldrb	w11, [x11, #1128]
  4065fc:	ldrb	w10, [x10, x9]
  406600:	cmp	w10, w11
  406604:	b.ne	40660c <wcrtomb@plt+0x37dc>  // b.any
  406608:	str	x9, [x8, #1816]
  40660c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406610:	add	x0, x0, #0x708
  406614:	mov	w1, #0x1                   	// #1
  406618:	bl	4071a8 <wcrtomb@plt+0x4378>
  40661c:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406620:	add	x24, x24, #0x8ce
  406624:	b	40603c <wcrtomb@plt+0x320c>
  406628:	mov	w8, wzr
  40662c:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406630:	add	x24, x24, #0x8ce
  406634:	tbnz	w8, #0, 406040 <wcrtomb@plt+0x3210>
  406638:	b	4066e8 <wcrtomb@plt+0x38b8>
  40663c:	ldr	x0, [sp]
  406640:	bl	402bd0 <free@plt>
  406644:	b	40603c <wcrtomb@plt+0x320c>
  406648:	cbz	w8, 406650 <wcrtomb@plt+0x3820>
  40664c:	bl	407124 <wcrtomb@plt+0x42f4>
  406650:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406654:	ldrb	w8, [x8, #1888]
  406658:	cbnz	w8, 4066e8 <wcrtomb@plt+0x38b8>
  40665c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406660:	add	x8, x8, #0x638
  406664:	ldp	x0, x1, [x8]
  406668:	ldrb	w2, [x8, #24]
  40666c:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  406670:	add	x3, x3, #0x6d0
  406674:	bl	4070a0 <wcrtomb@plt+0x4270>
  406678:	b	4066e8 <wcrtomb@plt+0x38b8>
  40667c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406680:	ldrb	w8, [x8, #1888]
  406684:	cbnz	w8, 4066a4 <wcrtomb@plt+0x3874>
  406688:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40668c:	add	x8, x8, #0x638
  406690:	ldp	x0, x1, [x8]
  406694:	ldrb	w2, [x8, #24]
  406698:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  40669c:	add	x3, x3, #0x6d0
  4066a0:	bl	4070a0 <wcrtomb@plt+0x4270>
  4066a4:	bl	406894 <wcrtomb@plt+0x3a64>
  4066a8:	ldr	w8, [x19, #24]
  4066ac:	cmn	w8, #0x1
  4066b0:	csel	w0, wzr, w8, eq  // eq = none
  4066b4:	b	4066ec <wcrtomb@plt+0x38bc>
  4066b8:	ldr	w8, [x19, #16]
  4066bc:	cmp	w8, #0x1
  4066c0:	b.eq	4066dc <wcrtomb@plt+0x38ac>  // b.none
  4066c4:	ldp	x0, x8, [x19, #24]
  4066c8:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  4066cc:	add	x3, x3, #0x6d0
  4066d0:	mov	w2, #0x1                   	// #1
  4066d4:	sub	x1, x8, #0x1
  4066d8:	bl	4070a0 <wcrtomb@plt+0x4270>
  4066dc:	ldrb	w8, [x26, #1904]
  4066e0:	cbz	w8, 4066e8 <wcrtomb@plt+0x38b8>
  4066e4:	bl	407124 <wcrtomb@plt+0x42f4>
  4066e8:	mov	w0, #0xffffffff            	// #-1
  4066ec:	add	sp, sp, #0x1, lsl #12
  4066f0:	add	sp, sp, #0x10
  4066f4:	ldp	x20, x19, [sp, #80]
  4066f8:	ldp	x22, x21, [sp, #64]
  4066fc:	ldp	x24, x23, [sp, #48]
  406700:	ldp	x26, x25, [sp, #32]
  406704:	ldp	x28, x27, [sp, #16]
  406708:	ldp	x29, x30, [sp], #96
  40670c:	ret
  406710:	ldrb	w8, [x26, #1904]
  406714:	cbz	w8, 40671c <wcrtomb@plt+0x38ec>
  406718:	bl	407124 <wcrtomb@plt+0x42f4>
  40671c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406720:	ldr	x9, [x8, #1600]
  406724:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  406728:	ldr	w10, [x10, #2296]
  40672c:	mov	w0, #0xffffffff            	// #-1
  406730:	sub	x1, x9, #0x1
  406734:	str	x1, [x8, #1600]
  406738:	cbnz	w10, 4066ec <wcrtomb@plt+0x38bc>
  40673c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406740:	ldrb	w8, [x8, #1888]
  406744:	cbnz	w8, 4066ec <wcrtomb@plt+0x38bc>
  406748:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40674c:	add	x8, x8, #0x638
  406750:	ldr	x0, [x8]
  406754:	b	406668 <wcrtomb@plt+0x3838>
  406758:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40675c:	add	x0, x0, #0xa81
  406760:	bl	40915c <wcrtomb@plt+0x632c>
  406764:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406768:	add	x1, x1, #0xa62
  40676c:	mov	w2, #0x5                   	// #5
  406770:	mov	x0, xzr
  406774:	bl	402d10 <dcgettext@plt>
  406778:	bl	40915c <wcrtomb@plt+0x632c>
  40677c:	stp	x29, x30, [sp, #-64]!
  406780:	stp	x24, x23, [sp, #16]
  406784:	stp	x22, x21, [sp, #32]
  406788:	stp	x20, x19, [sp, #48]
  40678c:	mov	x19, x0
  406790:	ldr	x0, [x0, #184]
  406794:	adrp	x8, 405000 <wcrtomb@plt+0x21d0>
  406798:	add	x8, x8, #0xdc4
  40679c:	mov	x29, sp
  4067a0:	str	x8, [x19, #32]
  4067a4:	cbz	x0, 406880 <wcrtomb@plt+0x3a50>
  4067a8:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  4067ac:	ldr	x8, [x23, #1912]
  4067b0:	cbz	x8, 406878 <wcrtomb@plt+0x3a48>
  4067b4:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  4067b8:	ldr	x8, [x24, #1760]
  4067bc:	cbz	x8, 406878 <wcrtomb@plt+0x3a48>
  4067c0:	ldr	x20, [x19, #48]
  4067c4:	bl	402840 <fileno@plt>
  4067c8:	ldr	x8, [x24, #1760]
  4067cc:	mov	w21, w0
  4067d0:	mov	x0, x8
  4067d4:	bl	402840 <fileno@plt>
  4067d8:	ldp	w1, w2, [x19, #80]
  4067dc:	mov	w22, w0
  4067e0:	bl	402de0 <fchown@plt>
  4067e4:	cmn	w0, #0x1
  4067e8:	b.ne	4067fc <wcrtomb@plt+0x39cc>  // b.any
  4067ec:	ldr	w2, [x19, #84]
  4067f0:	mov	w1, #0xffffffff            	// #-1
  4067f4:	mov	w0, w22
  4067f8:	bl	402de0 <fchown@plt>
  4067fc:	ldp	x2, x0, [x19, #40]
  406800:	ldr	w4, [x19, #72]
  406804:	mov	w1, w21
  406808:	mov	w3, w22
  40680c:	bl	409e0c <wcrtomb@plt+0x6fdc>
  406810:	ldr	x0, [x19, #184]
  406814:	bl	40982c <wcrtomb@plt+0x69fc>
  406818:	ldr	x0, [x24, #1760]
  40681c:	bl	40982c <wcrtomb@plt+0x69fc>
  406820:	ldr	x0, [x23, #1912]
  406824:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406828:	add	x1, x1, #0xb29
  40682c:	bl	402ba0 <strcmp@plt>
  406830:	cbz	w0, 406858 <wcrtomb@plt+0x3a28>
  406834:	mov	x0, x20
  406838:	bl	408088 <wcrtomb@plt+0x5258>
  40683c:	ldr	x2, [x19, #40]
  406840:	mov	x21, x0
  406844:	mov	x0, x20
  406848:	mov	x1, x21
  40684c:	bl	409b84 <wcrtomb@plt+0x6d54>
  406850:	mov	x0, x21
  406854:	bl	402bd0 <free@plt>
  406858:	ldr	x0, [x19, #40]
  40685c:	mov	x1, x20
  406860:	mov	x2, x0
  406864:	bl	409b84 <wcrtomb@plt+0x6d54>
  406868:	bl	408944 <wcrtomb@plt+0x5b14>
  40686c:	ldr	x0, [x19, #40]
  406870:	bl	402bd0 <free@plt>
  406874:	b	40687c <wcrtomb@plt+0x3a4c>
  406878:	bl	40982c <wcrtomb@plt+0x69fc>
  40687c:	str	xzr, [x19, #184]
  406880:	ldp	x20, x19, [sp, #48]
  406884:	ldp	x22, x21, [sp, #32]
  406888:	ldp	x24, x23, [sp, #16]
  40688c:	ldp	x29, x30, [sp], #64
  406890:	ret
  406894:	stp	x29, x30, [sp, #-64]!
  406898:	str	x28, [sp, #16]
  40689c:	stp	x22, x21, [sp, #32]
  4068a0:	stp	x20, x19, [sp, #48]
  4068a4:	mov	x29, sp
  4068a8:	sub	sp, sp, #0x2, lsl #12
  4068ac:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4068b0:	add	x0, x0, #0x6d0
  4068b4:	bl	406c28 <wcrtomb@plt+0x3df8>
  4068b8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4068bc:	ldr	x21, [x8, #1728]
  4068c0:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  4068c4:	cbz	x21, 406964 <wcrtomb@plt+0x3b34>
  4068c8:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  4068cc:	b	4068e0 <wcrtomb@plt+0x3ab0>
  4068d0:	mov	x0, x19
  4068d4:	bl	40982c <wcrtomb@plt+0x69fc>
  4068d8:	ldr	x21, [x21, #24]
  4068dc:	cbz	x21, 406964 <wcrtomb@plt+0x3b34>
  4068e0:	ldr	x0, [x21, #8]
  4068e4:	cbz	x0, 4068f8 <wcrtomb@plt+0x3ac8>
  4068e8:	ldr	x2, [x21, #16]
  4068ec:	ldr	x3, [x20, #1760]
  4068f0:	mov	w1, #0x1                   	// #1
  4068f4:	bl	40952c <wcrtomb@plt+0x66fc>
  4068f8:	ldr	x8, [x21]
  4068fc:	cbz	x8, 4068d8 <wcrtomb@plt+0x3aa8>
  406900:	ldr	x0, [x21]
  406904:	ldr	x1, [x22, #1136]
  406908:	mov	w2, wzr
  40690c:	bl	4092a8 <wcrtomb@plt+0x6478>
  406910:	cbz	x0, 4068d8 <wcrtomb@plt+0x3aa8>
  406914:	mov	x19, x0
  406918:	mov	x0, sp
  40691c:	mov	w1, #0x1                   	// #1
  406920:	mov	w2, #0x2000                	// #8192
  406924:	mov	x3, x19
  406928:	bl	409658 <wcrtomb@plt+0x6828>
  40692c:	cbz	x0, 4068d0 <wcrtomb@plt+0x3aa0>
  406930:	mov	x2, x0
  406934:	ldr	x3, [x20, #1760]
  406938:	mov	x0, sp
  40693c:	mov	w1, #0x1                   	// #1
  406940:	bl	40952c <wcrtomb@plt+0x66fc>
  406944:	mov	x0, sp
  406948:	mov	w1, #0x1                   	// #1
  40694c:	mov	w2, #0x2000                	// #8192
  406950:	mov	x3, x19
  406954:	bl	409658 <wcrtomb@plt+0x6828>
  406958:	mov	x2, x0
  40695c:	cbnz	x0, 406934 <wcrtomb@plt+0x3b04>
  406960:	b	4068d0 <wcrtomb@plt+0x3aa0>
  406964:	ldr	x0, [x20, #1760]
  406968:	bl	406c68 <wcrtomb@plt+0x3e38>
  40696c:	bl	406c88 <wcrtomb@plt+0x3e58>
  406970:	add	sp, sp, #0x2, lsl #12
  406974:	ldp	x20, x19, [sp, #48]
  406978:	ldp	x22, x21, [sp, #32]
  40697c:	ldr	x28, [sp, #16]
  406980:	ldp	x29, x30, [sp], #64
  406984:	ret
  406988:	ldr	w8, [x0, #16]
  40698c:	cbz	w8, 4069d0 <wcrtomb@plt+0x3ba0>
  406990:	ldr	x9, [x0]
  406994:	b	4069a8 <wcrtomb@plt+0x3b78>
  406998:	mov	w10, wzr
  40699c:	str	w10, [x9, #16]
  4069a0:	add	x9, x9, #0x28
  4069a4:	cbz	w8, 4069d0 <wcrtomb@plt+0x3ba0>
  4069a8:	ldr	x10, [x9]
  4069ac:	sub	w8, w8, #0x1
  4069b0:	cbz	x10, 406998 <wcrtomb@plt+0x3b68>
  4069b4:	ldr	w11, [x10]
  4069b8:	cmp	w11, #0x2
  4069bc:	b.ne	406998 <wcrtomb@plt+0x3b68>  // b.any
  4069c0:	ldr	x10, [x10, #8]
  4069c4:	cbnz	x10, 406998 <wcrtomb@plt+0x3b68>
  4069c8:	mov	w10, #0x1                   	// #1
  4069cc:	b	40699c <wcrtomb@plt+0x3b6c>
  4069d0:	ret
  4069d4:	stp	x29, x30, [sp, #-48]!
  4069d8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4069dc:	stp	x22, x21, [sp, #16]
  4069e0:	stp	x20, x19, [sp, #32]
  4069e4:	str	xzr, [x8, #1696]
  4069e8:	str	x0, [x1, #48]
  4069ec:	ldrb	w8, [x0]
  4069f0:	mov	x19, x1
  4069f4:	mov	x20, x0
  4069f8:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  4069fc:	cmp	w8, #0x2d
  406a00:	mov	x29, sp
  406a04:	b.ne	406a30 <wcrtomb@plt+0x3c00>  // b.any
  406a08:	ldrb	w8, [x20, #1]
  406a0c:	cbnz	w8, 406a30 <wcrtomb@plt+0x3c00>
  406a10:	ldr	x8, [x21, #1912]
  406a14:	cbnz	x8, 406a30 <wcrtomb@plt+0x3c00>
  406a18:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  406a1c:	ldr	x0, [x20, #1312]
  406a20:	bl	402c90 <clearerr_unlocked@plt>
  406a24:	ldr	x8, [x20, #1312]
  406a28:	str	x8, [x19, #184]
  406a2c:	b	406a64 <wcrtomb@plt+0x3c34>
  406a30:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406a34:	ldrb	w8, [x8, #1896]
  406a38:	cbz	w8, 406a48 <wcrtomb@plt+0x3c18>
  406a3c:	mov	x0, x20
  406a40:	bl	40993c <wcrtomb@plt+0x6b0c>
  406a44:	str	x0, [x19, #48]
  406a48:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406a4c:	ldr	x1, [x8, #1136]
  406a50:	mov	x0, x20
  406a54:	mov	w2, wzr
  406a58:	bl	4092a8 <wcrtomb@plt+0x6478>
  406a5c:	str	x0, [x19, #184]
  406a60:	cbz	x0, 406a98 <wcrtomb@plt+0x3c68>
  406a64:	adrp	x8, 406000 <wcrtomb@plt+0x31d0>
  406a68:	add	x8, x8, #0xce8
  406a6c:	str	x8, [x19, #32]
  406a70:	ldr	x8, [x21, #1912]
  406a74:	cbz	x8, 406b00 <wcrtomb@plt+0x3cd0>
  406a78:	ldr	x0, [x19, #48]
  406a7c:	bl	411a84 <wcrtomb@plt+0xec54>
  406a80:	mov	w1, #0x2f                  	// #47
  406a84:	mov	x20, x0
  406a88:	bl	402ad0 <strrchr@plt>
  406a8c:	cbz	x0, 406b38 <wcrtomb@plt+0x3d08>
  406a90:	strb	wzr, [x0]
  406a94:	b	406b40 <wcrtomb@plt+0x3d10>
  406a98:	bl	402da0 <__errno_location@plt>
  406a9c:	ldr	w0, [x0]
  406aa0:	bl	402ac0 <strerror@plt>
  406aa4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406aa8:	ldr	x21, [x8, #1280]
  406aac:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406ab0:	mov	x22, x0
  406ab4:	add	x1, x1, #0x9a6
  406ab8:	mov	w2, #0x5                   	// #5
  406abc:	mov	x0, xzr
  406ac0:	bl	402d10 <dcgettext@plt>
  406ac4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406ac8:	ldr	x3, [x8, #1968]
  406acc:	mov	x2, x0
  406ad0:	mov	w1, #0x1                   	// #1
  406ad4:	mov	x0, x21
  406ad8:	mov	x4, x20
  406adc:	mov	x5, x22
  406ae0:	bl	402b90 <__fprintf_chk@plt>
  406ae4:	ldr	x8, [x19, #8]
  406ae8:	adrp	x9, 405000 <wcrtomb@plt+0x21d0>
  406aec:	add	x9, x9, #0xdc4
  406af0:	str	x9, [x19, #32]
  406af4:	add	x8, x8, #0x1
  406af8:	str	x8, [x19, #8]
  406afc:	b	406bb8 <wcrtomb@plt+0x3d88>
  406b00:	ldr	x0, [x19, #184]
  406b04:	cbz	x0, 406b24 <wcrtomb@plt+0x3cf4>
  406b08:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406b0c:	ldrb	w8, [x8, #1884]
  406b10:	cbz	w8, 406b24 <wcrtomb@plt+0x3cf4>
  406b14:	mov	w2, #0x2                   	// #2
  406b18:	mov	x1, xzr
  406b1c:	mov	x3, xzr
  406b20:	bl	402810 <setvbuf@plt>
  406b24:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406b28:	ldr	x8, [x8, #1304]
  406b2c:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  406b30:	str	x8, [x9, #1760]
  406b34:	b	406bb8 <wcrtomb@plt+0x3d88>
  406b38:	mov	w8, #0x2e                  	// #46
  406b3c:	strh	w8, [x20]
  406b40:	ldr	x0, [x19, #184]
  406b44:	bl	402840 <fileno@plt>
  406b48:	bl	402cc0 <isatty@plt>
  406b4c:	cbnz	w0, 406bc8 <wcrtomb@plt+0x3d98>
  406b50:	ldr	x0, [x19, #184]
  406b54:	bl	402840 <fileno@plt>
  406b58:	add	x1, x19, #0x38
  406b5c:	bl	41f028 <_obstack_memory_used@@Base+0xd1a4>
  406b60:	ldr	w8, [x19, #72]
  406b64:	and	w8, w8, #0xf000
  406b68:	cmp	w8, #0x8, lsl #12
  406b6c:	b.ne	406bd4 <wcrtomb@plt+0x3da4>  // b.any
  406b70:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406b74:	ldr	x3, [x8, #1144]
  406b78:	add	x21, x19, #0x28
  406b7c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406b80:	add	x2, x2, #0xfc9
  406b84:	mov	x0, x21
  406b88:	mov	x1, x20
  406b8c:	bl	409434 <wcrtomb@plt+0x6604>
  406b90:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  406b94:	add	x22, x22, #0x6d8
  406b98:	str	x0, [x22, #8]
  406b9c:	ldr	x0, [x19, #40]
  406ba0:	bl	408938 <wcrtomb@plt+0x5b08>
  406ba4:	mov	x0, x20
  406ba8:	strb	wzr, [x22]
  406bac:	bl	402bd0 <free@plt>
  406bb0:	ldr	x8, [x22, #8]
  406bb4:	cbz	x8, 406bf0 <wcrtomb@plt+0x3dc0>
  406bb8:	ldp	x20, x19, [sp, #32]
  406bbc:	ldp	x22, x21, [sp, #16]
  406bc0:	ldp	x29, x30, [sp], #48
  406bc4:	ret
  406bc8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406bcc:	add	x1, x1, #0x9bd
  406bd0:	b	406bdc <wcrtomb@plt+0x3dac>
  406bd4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406bd8:	add	x1, x1, #0x9dd
  406bdc:	mov	w2, #0x5                   	// #5
  406be0:	mov	x0, xzr
  406be4:	bl	402d10 <dcgettext@plt>
  406be8:	ldr	x1, [x19, #48]
  406bec:	bl	40915c <wcrtomb@plt+0x632c>
  406bf0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406bf4:	add	x1, x1, #0xa02
  406bf8:	mov	w2, #0x5                   	// #5
  406bfc:	mov	x0, xzr
  406c00:	bl	402d10 <dcgettext@plt>
  406c04:	ldr	x19, [x21]
  406c08:	mov	x20, x0
  406c0c:	bl	402da0 <__errno_location@plt>
  406c10:	ldr	w0, [x0]
  406c14:	bl	402ac0 <strerror@plt>
  406c18:	mov	x2, x0
  406c1c:	mov	x0, x20
  406c20:	mov	x1, x19
  406c24:	bl	40915c <wcrtomb@plt+0x632c>
  406c28:	stp	x29, x30, [sp, #-32]!
  406c2c:	ldrb	w8, [x0, #8]
  406c30:	str	x19, [sp, #16]
  406c34:	mov	x29, sp
  406c38:	cbz	w8, 406c5c <wcrtomb@plt+0x3e2c>
  406c3c:	ldr	x3, [x0, #16]
  406c40:	mov	x19, x0
  406c44:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406c48:	add	x0, x0, #0x468
  406c4c:	mov	w1, #0x1                   	// #1
  406c50:	mov	w2, #0x1                   	// #1
  406c54:	bl	40952c <wcrtomb@plt+0x66fc>
  406c58:	strb	wzr, [x19, #8]
  406c5c:	ldr	x19, [sp, #16]
  406c60:	ldp	x29, x30, [sp], #32
  406c64:	ret
  406c68:	stp	x29, x30, [sp, #-16]!
  406c6c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406c70:	ldrb	w8, [x8, #1884]
  406c74:	mov	x29, sp
  406c78:	cbz	w8, 406c80 <wcrtomb@plt+0x3e50>
  406c7c:	bl	4097b8 <wcrtomb@plt+0x6988>
  406c80:	ldp	x29, x30, [sp], #16
  406c84:	ret
  406c88:	stp	x29, x30, [sp, #-48]!
  406c8c:	stp	x20, x19, [sp, #32]
  406c90:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  406c94:	ldr	x19, [x20, #1728]
  406c98:	str	x21, [sp, #16]
  406c9c:	mov	x29, sp
  406ca0:	cbnz	x19, 406cd4 <wcrtomb@plt+0x3ea4>
  406ca4:	str	xzr, [x20, #1728]
  406ca8:	ldp	x20, x19, [sp, #32]
  406cac:	ldr	x21, [sp, #16]
  406cb0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406cb4:	str	xzr, [x8, #1776]
  406cb8:	ldp	x29, x30, [sp], #48
  406cbc:	ret
  406cc0:	ldr	x21, [x19, #24]
  406cc4:	mov	x0, x19
  406cc8:	bl	402bd0 <free@plt>
  406ccc:	mov	x19, x21
  406cd0:	cbz	x21, 406ca4 <wcrtomb@plt+0x3e74>
  406cd4:	ldrb	w8, [x19, #32]
  406cd8:	cbz	w8, 406cc0 <wcrtomb@plt+0x3e90>
  406cdc:	ldr	x0, [x19, #8]
  406ce0:	bl	402bd0 <free@plt>
  406ce4:	b	406cc0 <wcrtomb@plt+0x3e90>
  406ce8:	stp	x29, x30, [sp, #-32]!
  406cec:	str	x19, [sp, #16]
  406cf0:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x2017c>
  406cf4:	ldr	x3, [x0, #184]
  406cf8:	ldrb	w2, [x19, #1128]
  406cfc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406d00:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  406d04:	add	x0, x0, #0x6f8
  406d08:	add	x1, x1, #0x700
  406d0c:	mov	x29, sp
  406d10:	bl	409700 <wcrtomb@plt+0x68d0>
  406d14:	subs	x2, x0, #0x1
  406d18:	b.lt	406d54 <wcrtomb@plt+0x3f24>  // b.tstop
  406d1c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406d20:	ldr	x1, [x8, #1784]
  406d24:	ldrb	w9, [x19, #1128]
  406d28:	ldrb	w8, [x1, x2]
  406d2c:	cmp	w8, w9
  406d30:	b.eq	406d40 <wcrtomb@plt+0x3f10>  // b.none
  406d34:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406d38:	mov	x2, x0
  406d3c:	strb	wzr, [x8, #1616]
  406d40:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  406d44:	add	x0, x0, #0x630
  406d48:	bl	406d64 <wcrtomb@plt+0x3f34>
  406d4c:	mov	w0, #0x1                   	// #1
  406d50:	b	406d58 <wcrtomb@plt+0x3f28>
  406d54:	mov	w0, wzr
  406d58:	ldr	x19, [sp, #16]
  406d5c:	ldp	x29, x30, [sp], #32
  406d60:	ret
  406d64:	stp	x29, x30, [sp, #-64]!
  406d68:	str	x23, [sp, #16]
  406d6c:	stp	x22, x21, [sp, #32]
  406d70:	stp	x20, x19, [sp, #48]
  406d74:	ldp	x8, x9, [x0, #16]
  406d78:	mov	x19, x0
  406d7c:	mov	x20, x2
  406d80:	mov	x21, x1
  406d84:	add	x22, x8, x2
  406d88:	cmp	x9, x22
  406d8c:	mov	x29, sp
  406d90:	b.cs	406da0 <wcrtomb@plt+0x3f70>  // b.hs, b.nlast
  406d94:	mov	x0, x19
  406d98:	mov	x1, x22
  406d9c:	bl	406e44 <wcrtomb@plt+0x4014>
  406da0:	ldp	x8, x9, [x19, #8]
  406da4:	mov	x1, x21
  406da8:	mov	x2, x20
  406dac:	add	x0, x8, x9
  406db0:	bl	402710 <memcpy@plt>
  406db4:	str	x22, [x19, #16]
  406db8:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  406dbc:	ldr	w8, [x23, #2292]
  406dc0:	cmp	w8, #0x2
  406dc4:	b.lt	406e30 <wcrtomb@plt+0x4000>  // b.tstop
  406dc8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  406dcc:	ldrb	w8, [x8, #2288]
  406dd0:	cbnz	w8, 406e30 <wcrtomb@plt+0x4000>
  406dd4:	add	x22, x19, #0x24
  406dd8:	b	406de8 <wcrtomb@plt+0x3fb8>
  406ddc:	add	x21, x21, x0
  406de0:	sub	x20, x20, x0
  406de4:	cbz	x0, 406e30 <wcrtomb@plt+0x4000>
  406de8:	cbz	x20, 406e30 <wcrtomb@plt+0x4000>
  406dec:	ldr	w8, [x23, #2292]
  406df0:	cmp	w8, #0x1
  406df4:	b.ne	406e08 <wcrtomb@plt+0x3fd8>  // b.any
  406df8:	mov	w0, #0x1                   	// #1
  406dfc:	cmn	x0, #0x2
  406e00:	b.cc	406ddc <wcrtomb@plt+0x3fac>  // b.lo, b.ul, b.last
  406e04:	b	406e24 <wcrtomb@plt+0x3ff4>
  406e08:	mov	x0, xzr
  406e0c:	mov	x1, x21
  406e10:	mov	x2, x20
  406e14:	mov	x3, x22
  406e18:	bl	411af4 <wcrtomb@plt+0xecc4>
  406e1c:	cmn	x0, #0x2
  406e20:	b.cc	406ddc <wcrtomb@plt+0x3fac>  // b.lo, b.ul, b.last
  406e24:	mov	w0, #0x1                   	// #1
  406e28:	stur	xzr, [x19, #36]
  406e2c:	b	406ddc <wcrtomb@plt+0x3fac>
  406e30:	ldp	x20, x19, [sp, #48]
  406e34:	ldp	x22, x21, [sp, #32]
  406e38:	ldr	x23, [sp, #16]
  406e3c:	ldp	x29, x30, [sp], #64
  406e40:	ret
  406e44:	stp	x29, x30, [sp, #-48]!
  406e48:	str	x21, [sp, #16]
  406e4c:	stp	x20, x19, [sp, #32]
  406e50:	mov	x19, x0
  406e54:	ldp	x0, x8, [x0]
  406e58:	ldr	x10, [x19, #24]
  406e5c:	mov	x20, x1
  406e60:	mov	x29, sp
  406e64:	sub	x9, x8, x0
  406e68:	sxtw	x11, w9
  406e6c:	cmp	x11, x10, lsl #1
  406e70:	b.ls	406ea4 <wcrtomb@plt+0x4074>  // b.plast
  406e74:	ldr	x2, [x19, #16]
  406e78:	mov	x1, x8
  406e7c:	bl	402720 <memmove@plt>
  406e80:	ldp	x9, x8, [x19]
  406e84:	ldr	x10, [x19, #24]
  406e88:	sub	x8, x8, x9
  406e8c:	add	x8, x10, x8
  406e90:	cmp	x8, x20
  406e94:	str	x8, [x19, #24]
  406e98:	str	x9, [x19, #8]
  406e9c:	b.hi	406ee4 <wcrtomb@plt+0x40b4>  // b.pmore
  406ea0:	mov	x9, xzr
  406ea4:	ldr	x8, [x19, #24]
  406ea8:	mov	w10, #0x32                  	// #50
  406eac:	ldr	x0, [x19]
  406eb0:	sxtw	x21, w9
  406eb4:	lsl	x8, x8, #1
  406eb8:	cmp	x8, x20
  406ebc:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  406ec0:	cmp	x8, #0x32
  406ec4:	csel	x8, x8, x10, hi  // hi = pmore
  406ec8:	str	x8, [x19, #24]
  406ecc:	add	x8, x21, x8
  406ed0:	add	x1, x8, #0x1
  406ed4:	mov	w2, #0x1                   	// #1
  406ed8:	bl	4118f4 <wcrtomb@plt+0xeac4>
  406edc:	add	x8, x0, x21
  406ee0:	stp	x0, x8, [x19]
  406ee4:	ldp	x20, x19, [sp, #32]
  406ee8:	ldr	x21, [sp, #16]
  406eec:	ldp	x29, x30, [sp], #48
  406ef0:	ret
  406ef4:	stp	x29, x30, [sp, #-32]!
  406ef8:	stp	x20, x19, [sp, #16]
  406efc:	mov	x19, x0
  406f00:	ldr	x0, [x0]
  406f04:	mov	x29, sp
  406f08:	cbz	x0, 406ff4 <wcrtomb@plt+0x41c4>
  406f0c:	ldr	w8, [x19, #16]
  406f10:	mov	x20, x1
  406f14:	cmp	w8, #0x1
  406f18:	b.ne	406f50 <wcrtomb@plt+0x4120>  // b.any
  406f1c:	ldr	x0, [x19, #8]
  406f20:	ldr	w8, [x0]
  406f24:	cmp	w8, #0x2
  406f28:	b.ne	406fe0 <wcrtomb@plt+0x41b0>  // b.any
  406f2c:	ldr	x8, [x20, #16]
  406f30:	ldr	x9, [x0, #8]
  406f34:	cmp	x8, x9
  406f38:	b.cc	406f44 <wcrtomb@plt+0x4114>  // b.lo, b.ul, b.last
  406f3c:	mov	w10, #0x2                   	// #2
  406f40:	str	w10, [x19, #16]
  406f44:	cmp	x8, x9
  406f48:	cset	w0, ls  // ls = plast
  406f4c:	b	406ff8 <wcrtomb@plt+0x41c8>
  406f50:	ldr	x9, [x19, #8]
  406f54:	cbz	x9, 406fd4 <wcrtomb@plt+0x41a4>
  406f58:	ldr	w9, [x0]
  406f5c:	cmp	w9, #0x2
  406f60:	b.ne	407008 <wcrtomb@plt+0x41d8>  // b.any
  406f64:	cmp	w8, #0x2
  406f68:	b.eq	407014 <wcrtomb@plt+0x41e4>  // b.none
  406f6c:	ldr	x8, [x20, #16]
  406f70:	ldr	x9, [x0, #8]
  406f74:	cmp	x8, x9
  406f78:	b.cc	407014 <wcrtomb@plt+0x41e4>  // b.lo, b.ul, b.last
  406f7c:	ldr	x8, [x19, #8]
  406f80:	mov	w0, #0x1                   	// #1
  406f84:	str	w0, [x19, #16]
  406f88:	ldr	w9, [x8]
  406f8c:	sub	w9, w9, #0x1
  406f90:	cmp	w9, #0x4
  406f94:	b.hi	406f1c <wcrtomb@plt+0x40ec>  // b.pmore
  406f98:	adrp	x10, 41f000 <_obstack_memory_used@@Base+0xd17c>
  406f9c:	add	x10, x10, #0x984
  406fa0:	adr	x11, 406f1c <wcrtomb@plt+0x40ec>
  406fa4:	ldrb	w12, [x10, x9]
  406fa8:	add	x11, x11, x12, lsl #2
  406fac:	br	x11
  406fb0:	ldr	x9, [x20, #16]
  406fb4:	ldr	x8, [x8, #8]
  406fb8:	cmp	x9, x8
  406fbc:	b.cc	406fc8 <wcrtomb@plt+0x4198>  // b.lo, b.ul, b.last
  406fc0:	mov	w10, #0x2                   	// #2
  406fc4:	str	w10, [x19, #16]
  406fc8:	cmp	x9, x8
  406fcc:	b.ls	406ff4 <wcrtomb@plt+0x41c4>  // b.plast
  406fd0:	ldr	x0, [x19]
  406fd4:	mov	x1, x20
  406fd8:	bl	407bc0 <wcrtomb@plt+0x4d90>
  406fdc:	b	406ff8 <wcrtomb@plt+0x41c8>
  406fe0:	mov	x1, x20
  406fe4:	bl	407bc0 <wcrtomb@plt+0x4d90>
  406fe8:	tbz	w0, #0, 406ff4 <wcrtomb@plt+0x41c4>
  406fec:	mov	w8, #0x2                   	// #2
  406ff0:	str	w8, [x19, #16]
  406ff4:	mov	w0, #0x1                   	// #1
  406ff8:	ldp	x20, x19, [sp, #16]
  406ffc:	and	w0, w0, #0x1
  407000:	ldp	x29, x30, [sp], #32
  407004:	ret
  407008:	mov	x1, x20
  40700c:	bl	407bc0 <wcrtomb@plt+0x4d90>
  407010:	tbnz	w0, #0, 406f7c <wcrtomb@plt+0x414c>
  407014:	mov	w0, wzr
  407018:	b	406ff8 <wcrtomb@plt+0x41c8>
  40701c:	ldr	x9, [x20, #16]
  407020:	ldr	x10, [x8, #16]
  407024:	add	x9, x10, x9
  407028:	str	x9, [x8, #8]
  40702c:	b	406ff4 <wcrtomb@plt+0x41c4>
  407030:	ldr	x9, [x20, #16]
  407034:	ldr	x10, [x8, #16]
  407038:	add	x11, x10, x9
  40703c:	udiv	x12, x9, x10
  407040:	neg	x9, x9
  407044:	madd	x9, x12, x10, x9
  407048:	add	x9, x11, x9
  40704c:	str	x9, [x8, #8]
  407050:	b	406ff4 <wcrtomb@plt+0x41c4>
  407054:	stp	x29, x30, [sp, #-16]!
  407058:	mov	w0, #0x1                   	// #1
  40705c:	mov	w1, #0x28                  	// #40
  407060:	mov	x29, sp
  407064:	bl	411a14 <wcrtomb@plt+0xebe4>
  407068:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40706c:	ldr	x9, [x8, #1776]
  407070:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  407074:	add	x10, x10, #0x6c0
  407078:	movi	v0.2d, #0x0
  40707c:	add	x11, x9, #0x18
  407080:	cmp	x9, #0x0
  407084:	csel	x9, x10, x11, eq  // eq = none
  407088:	strb	wzr, [x0, #32]
  40708c:	stp	q0, q0, [x0]
  407090:	str	x0, [x9]
  407094:	str	x0, [x8, #1776]
  407098:	ldp	x29, x30, [sp], #16
  40709c:	ret
  4070a0:	cbz	x0, 407120 <wcrtomb@plt+0x42f0>
  4070a4:	stp	x29, x30, [sp, #-48]!
  4070a8:	stp	x22, x21, [sp, #16]
  4070ac:	mov	x22, x0
  4070b0:	mov	x0, x3
  4070b4:	stp	x20, x19, [sp, #32]
  4070b8:	mov	x29, sp
  4070bc:	mov	x19, x3
  4070c0:	mov	w20, w2
  4070c4:	mov	x21, x1
  4070c8:	bl	406c28 <wcrtomb@plt+0x3df8>
  4070cc:	cbz	x21, 4070e4 <wcrtomb@plt+0x42b4>
  4070d0:	ldr	x3, [x19, #16]
  4070d4:	mov	w1, #0x1                   	// #1
  4070d8:	mov	x0, x22
  4070dc:	mov	x2, x21
  4070e0:	bl	40952c <wcrtomb@plt+0x66fc>
  4070e4:	cbz	w20, 407104 <wcrtomb@plt+0x42d4>
  4070e8:	ldr	x3, [x19, #16]
  4070ec:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4070f0:	add	x0, x0, #0x468
  4070f4:	mov	w1, #0x1                   	// #1
  4070f8:	mov	w2, #0x1                   	// #1
  4070fc:	bl	40952c <wcrtomb@plt+0x66fc>
  407100:	b	40710c <wcrtomb@plt+0x42dc>
  407104:	mov	w8, #0x1                   	// #1
  407108:	strb	w8, [x19, #8]
  40710c:	ldr	x0, [x19, #16]
  407110:	bl	406c68 <wcrtomb@plt+0x3e38>
  407114:	ldp	x20, x19, [sp, #32]
  407118:	ldp	x22, x21, [sp, #16]
  40711c:	ldp	x29, x30, [sp], #48
  407120:	ret
  407124:	stp	x29, x30, [sp, #-16]!
  407128:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40712c:	add	x0, x0, #0xabd
  407130:	mov	x29, sp
  407134:	bl	402b50 <puts@plt>
  407138:	ldp	x29, x30, [sp], #16
  40713c:	ret
  407140:	stp	x29, x30, [sp, #-16]!
  407144:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407148:	ldr	x8, [x8, #1824]
  40714c:	mov	x1, x0
  407150:	mov	x29, sp
  407154:	cbz	x8, 40717c <wcrtomb@plt+0x434c>
  407158:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40715c:	str	xzr, [x8, #1816]
  407160:	cbz	x1, 407194 <wcrtomb@plt+0x4364>
  407164:	ldur	x8, [x1, #36]
  407168:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  40716c:	add	x9, x9, #0x72c
  407170:	str	x8, [x9]
  407174:	ldp	x29, x30, [sp], #16
  407178:	ret
  40717c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  407180:	add	x0, x0, #0x708
  407184:	mov	w2, #0x32                  	// #50
  407188:	bl	405d6c <wcrtomb@plt+0x2f3c>
  40718c:	ldp	x29, x30, [sp], #16
  407190:	ret
  407194:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407198:	add	x8, x8, #0x72c
  40719c:	str	xzr, [x8]
  4071a0:	ldp	x29, x30, [sp], #16
  4071a4:	ret
  4071a8:	sub	sp, sp, #0x30
  4071ac:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4071b0:	add	x8, x8, #0x630
  4071b4:	cbz	w1, 4071e0 <wcrtomb@plt+0x43b0>
  4071b8:	ldp	q0, q1, [x8]
  4071bc:	ldr	q2, [x8, #32]
  4071c0:	stp	q0, q1, [sp]
  4071c4:	str	q2, [sp, #32]
  4071c8:	ldp	q4, q3, [x0, #16]
  4071cc:	ldr	q5, [x0]
  4071d0:	stp	q4, q3, [x8, #16]
  4071d4:	str	q5, [x8]
  4071d8:	str	q2, [x0, #32]
  4071dc:	b	407204 <wcrtomb@plt+0x43d4>
  4071e0:	ldp	q0, q1, [x8]
  4071e4:	ldr	w9, [x8, #32]
  4071e8:	stp	q0, q1, [sp]
  4071ec:	str	w9, [sp, #32]
  4071f0:	ldr	w10, [x0, #32]
  4071f4:	ldp	q3, q2, [x0]
  4071f8:	str	w10, [x8, #32]
  4071fc:	stp	q3, q2, [x8]
  407200:	str	w9, [x0, #32]
  407204:	stp	q0, q1, [x0]
  407208:	add	sp, sp, #0x30
  40720c:	ret
  407210:	stp	x29, x30, [sp, #-32]!
  407214:	stp	x20, x19, [sp, #16]
  407218:	ldp	x9, x8, [x1]
  40721c:	ldr	x10, [x1, #24]
  407220:	mov	x19, x1
  407224:	mov	x20, x0
  407228:	sub	x8, x8, x9
  40722c:	add	x9, x10, x8
  407230:	str	x9, [x1, #24]
  407234:	ldr	x8, [x0, #16]
  407238:	mov	x29, sp
  40723c:	cmp	x9, x8
  407240:	b.cs	407278 <wcrtomb@plt+0x4448>  // b.hs, b.nlast
  407244:	lsl	x9, x9, #1
  407248:	ldr	x0, [x19]
  40724c:	cmp	x9, x8
  407250:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  407254:	cmp	x8, #0x32
  407258:	mov	w9, #0x32                  	// #50
  40725c:	csel	x8, x8, x9, hi  // hi = pmore
  407260:	str	x8, [x19, #24]
  407264:	bl	402bd0 <free@plt>
  407268:	ldr	x8, [x19, #24]
  40726c:	add	x0, x8, #0x1
  407270:	bl	4119fc <wcrtomb@plt+0xebcc>
  407274:	str	x0, [x19]
  407278:	ldr	x0, [x19]
  40727c:	str	x0, [x19, #8]
  407280:	ldr	x8, [x20, #16]
  407284:	str	x8, [x19, #16]
  407288:	ldrb	w8, [x20, #32]
  40728c:	strb	w8, [x19, #32]
  407290:	ldp	x1, x2, [x20, #8]
  407294:	bl	402710 <memcpy@plt>
  407298:	ldur	x8, [x20, #36]
  40729c:	stur	x8, [x19, #36]
  4072a0:	ldp	x20, x19, [sp, #16]
  4072a4:	ldp	x29, x30, [sp], #32
  4072a8:	ret
  4072ac:	stp	x29, x30, [sp, #-32]!
  4072b0:	stp	x20, x19, [sp, #16]
  4072b4:	mov	x19, x1
  4072b8:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  4072bc:	mov	x20, x0
  4072c0:	add	x1, x1, #0x468
  4072c4:	mov	w2, #0x1                   	// #1
  4072c8:	mov	x0, x19
  4072cc:	mov	x29, sp
  4072d0:	bl	406d64 <wcrtomb@plt+0x3f34>
  4072d4:	ldp	x1, x2, [x20, #8]
  4072d8:	mov	x0, x19
  4072dc:	bl	406d64 <wcrtomb@plt+0x3f34>
  4072e0:	ldrb	w8, [x20, #32]
  4072e4:	strb	w8, [x19, #32]
  4072e8:	ldur	x8, [x20, #36]
  4072ec:	stur	x8, [x19, #36]
  4072f0:	ldp	x20, x19, [sp, #16]
  4072f4:	ldp	x29, x30, [sp], #32
  4072f8:	ret
  4072fc:	sub	sp, sp, #0x120
  407300:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407304:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407308:	add	x9, x9, #0x638
  40730c:	add	x8, x8, #0x6d0
  407310:	stp	x28, x27, [sp, #208]
  407314:	stp	x26, x25, [sp, #224]
  407318:	stp	x20, x19, [sp, #272]
  40731c:	ldp	x26, x27, [x9]
  407320:	ldr	x19, [x8, #16]
  407324:	mov	w20, w0
  407328:	mov	x0, x8
  40732c:	stp	x29, x30, [sp, #192]
  407330:	stp	x24, x23, [sp, #240]
  407334:	stp	x22, x21, [sp, #256]
  407338:	add	x29, sp, #0xc0
  40733c:	bl	406c28 <wcrtomb@plt+0x3df8>
  407340:	cbz	x27, 4074a0 <wcrtomb@plt+0x4670>
  407344:	add	x8, sp, #0x4
  407348:	mov	x24, xzr
  40734c:	sxtw	x21, w20
  407350:	orr	x23, x8, #0x1
  407354:	orr	x22, x8, #0x2
  407358:	b	40737c <wcrtomb@plt+0x454c>
  40735c:	add	x0, sp, #0x4
  407360:	mov	w1, #0x1                   	// #1
  407364:	mov	x2, x25
  407368:	mov	x3, x19
  40736c:	bl	40952c <wcrtomb@plt+0x66fc>
  407370:	add	x24, x24, x25
  407374:	add	x26, x26, #0x1
  407378:	cbz	x27, 4074a0 <wcrtomb@plt+0x4670>
  40737c:	ldrsb	w25, [x26]
  407380:	tbnz	w25, #31, 407398 <wcrtomb@plt+0x4568>
  407384:	and	x28, x25, #0xff
  407388:	bl	402bb0 <__ctype_b_loc@plt>
  40738c:	ldr	x8, [x0]
  407390:	ldrh	w8, [x8, x28, lsl #1]
  407394:	tbnz	w8, #14, 4073d0 <wcrtomb@plt+0x45a0>
  407398:	mov	w8, #0x5c                  	// #92
  40739c:	strb	w8, [sp, #4]
  4073a0:	ldrb	w4, [x26]
  4073a4:	sub	w8, w4, #0x7
  4073a8:	cmp	w8, #0x6
  4073ac:	b.hi	407404 <wcrtomb@plt+0x45d4>  // b.pmore
  4073b0:	adrp	x11, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4073b4:	add	x11, x11, #0x989
  4073b8:	adr	x9, 4073c8 <wcrtomb@plt+0x4598>
  4073bc:	ldrb	w10, [x11, x8]
  4073c0:	add	x9, x9, x10, lsl #2
  4073c4:	br	x9
  4073c8:	mov	w8, #0x61                  	// #97
  4073cc:	b	407440 <wcrtomb@plt+0x4610>
  4073d0:	strb	w25, [sp, #4]
  4073d4:	ldrb	w8, [x26]
  4073d8:	cmp	w8, #0x5c
  4073dc:	mov	x8, x23
  4073e0:	b.ne	407448 <wcrtomb@plt+0x4618>  // b.any
  4073e4:	mov	w8, #0x5c                  	// #92
  4073e8:	b	407440 <wcrtomb@plt+0x4610>
  4073ec:	mov	w8, #0x74                  	// #116
  4073f0:	b	407440 <wcrtomb@plt+0x4610>
  4073f4:	mov	w8, #0x6e                  	// #110
  4073f8:	b	407440 <wcrtomb@plt+0x4610>
  4073fc:	mov	w8, #0x76                  	// #118
  407400:	b	407440 <wcrtomb@plt+0x4610>
  407404:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xd17c>
  407408:	mov	w1, #0x1                   	// #1
  40740c:	mov	w2, #0xb3                  	// #179
  407410:	mov	x0, x23
  407414:	add	x3, x3, #0x841
  407418:	bl	402760 <__sprintf_chk@plt>
  40741c:	mov	x0, x23
  407420:	bl	402750 <strlen@plt>
  407424:	add	x8, x23, x0
  407428:	b	407448 <wcrtomb@plt+0x4618>
  40742c:	mov	w8, #0x62                  	// #98
  407430:	b	407440 <wcrtomb@plt+0x4610>
  407434:	mov	w8, #0x66                  	// #102
  407438:	b	407440 <wcrtomb@plt+0x4610>
  40743c:	mov	w8, #0x72                  	// #114
  407440:	strb	w8, [sp, #5]
  407444:	mov	x8, x22
  407448:	add	x9, sp, #0x4
  40744c:	sub	x27, x27, #0x1
  407450:	cmp	w20, #0x1
  407454:	sub	x25, x8, x9
  407458:	b.lt	40735c <wcrtomb@plt+0x452c>  // b.tstop
  40745c:	add	x8, x25, x24
  407460:	cmp	x8, x21
  407464:	b.cc	40735c <wcrtomb@plt+0x452c>  // b.lo, b.ul, b.last
  407468:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40746c:	mov	w1, #0x1                   	// #1
  407470:	mov	w2, #0x1                   	// #1
  407474:	add	x0, x0, #0x8c7
  407478:	mov	x3, x19
  40747c:	bl	40952c <wcrtomb@plt+0x66fc>
  407480:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  407484:	mov	w1, #0x1                   	// #1
  407488:	mov	w2, #0x1                   	// #1
  40748c:	add	x0, x0, #0x468
  407490:	mov	x3, x19
  407494:	bl	40952c <wcrtomb@plt+0x66fc>
  407498:	mov	x24, xzr
  40749c:	b	40735c <wcrtomb@plt+0x452c>
  4074a0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4074a4:	add	x0, x0, #0xacb
  4074a8:	mov	w1, #0x1                   	// #1
  4074ac:	mov	w2, #0x1                   	// #1
  4074b0:	mov	x3, x19
  4074b4:	bl	40952c <wcrtomb@plt+0x66fc>
  4074b8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4074bc:	add	x0, x0, #0x468
  4074c0:	mov	w1, #0x1                   	// #1
  4074c4:	mov	w2, #0x1                   	// #1
  4074c8:	mov	x3, x19
  4074cc:	bl	40952c <wcrtomb@plt+0x66fc>
  4074d0:	mov	x0, x19
  4074d4:	bl	406c68 <wcrtomb@plt+0x3e38>
  4074d8:	ldp	x20, x19, [sp, #272]
  4074dc:	ldp	x22, x21, [sp, #256]
  4074e0:	ldp	x24, x23, [sp, #240]
  4074e4:	ldp	x26, x25, [sp, #224]
  4074e8:	ldp	x28, x27, [sp, #208]
  4074ec:	ldp	x29, x30, [sp, #192]
  4074f0:	add	sp, sp, #0x120
  4074f4:	ret
  4074f8:	stp	x29, x30, [sp, #-32]!
  4074fc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407500:	ldr	x8, [x8, #1696]
  407504:	str	x19, [sp, #16]
  407508:	mov	x29, sp
  40750c:	cbz	x8, 407518 <wcrtomb@plt+0x46e8>
  407510:	mov	w0, wzr
  407514:	b	407548 <wcrtomb@plt+0x4718>
  407518:	mov	x19, x0
  40751c:	ldr	x0, [x0, #184]
  407520:	cbz	x0, 40752c <wcrtomb@plt+0x46fc>
  407524:	bl	402c20 <feof_unlocked@plt>
  407528:	cbz	w0, 407558 <wcrtomb@plt+0x4728>
  40752c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407530:	ldrb	w8, [x8, #1892]
  407534:	cbz	w8, 407540 <wcrtomb@plt+0x4710>
  407538:	mov	w0, #0x1                   	// #1
  40753c:	b	407548 <wcrtomb@plt+0x4718>
  407540:	mov	x0, x19
  407544:	bl	407c94 <wcrtomb@plt+0x4e64>
  407548:	ldr	x19, [sp, #16]
  40754c:	and	w0, w0, #0x1
  407550:	ldp	x29, x30, [sp], #32
  407554:	ret
  407558:	ldr	x0, [x19, #184]
  40755c:	bl	402ab0 <getc_unlocked@plt>
  407560:	cmn	w0, #0x1
  407564:	b.eq	40752c <wcrtomb@plt+0x46fc>  // b.none
  407568:	ldr	x1, [x19, #184]
  40756c:	bl	402be0 <ungetc@plt>
  407570:	b	407510 <wcrtomb@plt+0x46e0>
  407574:	stp	x29, x30, [sp, #-96]!
  407578:	stp	x28, x27, [sp, #16]
  40757c:	stp	x26, x25, [sp, #32]
  407580:	stp	x24, x23, [sp, #48]
  407584:	stp	x22, x21, [sp, #64]
  407588:	stp	x20, x19, [sp, #80]
  40758c:	mov	x29, sp
  407590:	sub	sp, sp, #0x1, lsl #12
  407594:	sub	sp, sp, #0x10
  407598:	adrp	x28, 432000 <_obstack_memory_used@@Base+0x2017c>
  40759c:	add	x28, x28, #0x630
  4075a0:	mov	x19, x0
  4075a4:	mov	x0, x28
  4075a8:	bl	407140 <wcrtomb@plt+0x4310>
  4075ac:	ldrb	w8, [x19, #32]
  4075b0:	ldr	x0, [x19]
  4075b4:	ldp	x1, x2, [x28, #8]
  4075b8:	adrp	x4, 432000 <_obstack_memory_used@@Base+0x2017c>
  4075bc:	lsr	w8, w8, #4
  4075c0:	add	w5, w8, #0x1
  4075c4:	add	x4, x4, #0x738
  4075c8:	mov	x3, xzr
  4075cc:	bl	408570 <wcrtomb@plt+0x5740>
  4075d0:	cbz	w0, 40799c <wcrtomb@plt+0x4b6c>
  4075d4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4075d8:	ldrb	w8, [x8, #1904]
  4075dc:	adrp	x27, 432000 <_obstack_memory_used@@Base+0x2017c>
  4075e0:	add	x27, x27, #0x740
  4075e4:	cbz	w8, 4076ac <wcrtomb@plt+0x487c>
  4075e8:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  4075ec:	ldr	x8, [x20, #1848]
  4075f0:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  4075f4:	cbz	x8, 407614 <wcrtomb@plt+0x47e4>
  4075f8:	ldr	x8, [x24, #1856]
  4075fc:	ldr	x8, [x8]
  407600:	cmn	x8, #0x1
  407604:	b.eq	407614 <wcrtomb@plt+0x47e4>  // b.none
  407608:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40760c:	add	x0, x0, #0xacd
  407610:	bl	402b50 <puts@plt>
  407614:	ldr	x8, [x20, #1848]
  407618:	cbz	x8, 4076ac <wcrtomb@plt+0x487c>
  40761c:	adrp	x22, 41f000 <_obstack_memory_used@@Base+0xd17c>
  407620:	adrp	x23, 41f000 <_obstack_memory_used@@Base+0xd17c>
  407624:	mov	x21, xzr
  407628:	add	x22, x22, #0xae5
  40762c:	add	x23, x23, #0xaf9
  407630:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  407634:	b	407650 <wcrtomb@plt+0x4820>
  407638:	mov	x0, x23
  40763c:	bl	402b50 <puts@plt>
  407640:	ldr	x8, [x20, #1848]
  407644:	add	x21, x21, #0x1
  407648:	cmp	x8, x21
  40764c:	b.ls	4076ac <wcrtomb@plt+0x487c>  // b.plast
  407650:	ldr	x8, [x24, #1856]
  407654:	ldr	x3, [x8, x21, lsl #3]
  407658:	cmn	x3, #0x1
  40765c:	b.eq	4076ac <wcrtomb@plt+0x487c>  // b.none
  407660:	ldr	x8, [x27, #8]
  407664:	lsl	x26, x21, #3
  407668:	mov	w0, #0x1                   	// #1
  40766c:	mov	x1, x22
  407670:	ldr	w4, [x8, x26]
  407674:	mov	w2, w21
  407678:	bl	4029a0 <__printf_chk@plt>
  40767c:	ldp	x8, x9, [x27]
  407680:	ldr	x8, [x8, x26]
  407684:	ldr	x9, [x9, x26]
  407688:	subs	x1, x9, x8
  40768c:	b.eq	407638 <wcrtomb@plt+0x4808>  // b.none
  407690:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407694:	ldr	x9, [x9, #1592]
  407698:	ldr	x3, [x25, #1304]
  40769c:	mov	w2, #0x1                   	// #1
  4076a0:	add	x0, x9, x8
  4076a4:	bl	402740 <fwrite_unlocked@plt>
  4076a8:	b	407638 <wcrtomb@plt+0x4808>
  4076ac:	ldr	x8, [x19, #8]
  4076b0:	cbnz	x8, 407750 <wcrtomb@plt+0x4920>
  4076b4:	ldr	x8, [x19, #16]
  4076b8:	cmp	x8, #0x1
  4076bc:	b.hi	407750 <wcrtomb@plt+0x4920>  // b.pmore
  4076c0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4076c4:	ldr	x8, [x8, #1856]
  4076c8:	ldr	x8, [x8]
  4076cc:	cbnz	x8, 40771c <wcrtomb@plt+0x48ec>
  4076d0:	ldrb	w9, [x19, #32]
  4076d4:	tbnz	w9, #0, 40771c <wcrtomb@plt+0x48ec>
  4076d8:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4076dc:	ldr	x9, [x9, #1864]
  4076e0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4076e4:	mov	w10, #0x1                   	// #1
  4076e8:	adrp	x11, 432000 <_obstack_memory_used@@Base+0x2017c>
  4076ec:	add	x11, x11, #0x638
  4076f0:	strb	w10, [x8, #1736]
  4076f4:	ldr	x8, [x9]
  4076f8:	ldp	x10, x12, [x11]
  4076fc:	add	x10, x10, x8
  407700:	sub	x8, x12, x8
  407704:	stp	x10, x8, [x11]
  407708:	ldr	x8, [x9]
  40770c:	ldr	x9, [x11, #16]
  407710:	sub	x8, x9, x8
  407714:	str	x8, [x11, #16]
  407718:	b	4078b8 <wcrtomb@plt+0x4a88>
  40771c:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407720:	ldr	x9, [x9, #1864]
  407724:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  407728:	ldr	x10, [x10, #1600]
  40772c:	ldr	x9, [x9]
  407730:	cmp	x9, x10
  407734:	b.ne	407750 <wcrtomb@plt+0x4920>  // b.any
  407738:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  40773c:	mov	w10, #0x1                   	// #1
  407740:	strb	w10, [x9, #1736]
  407744:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407748:	str	x8, [x9, #1600]
  40774c:	b	4078b8 <wcrtomb@plt+0x4a88>
  407750:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  407754:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  407758:	mov	x20, xzr
  40775c:	mov	x28, xzr
  407760:	mov	x25, xzr
  407764:	add	x21, x21, #0x708
  407768:	add	x22, x22, #0x738
  40776c:	mov	w26, #0x1                   	// #1
  407770:	ldp	x8, x9, [x27]
  407774:	ldr	x23, [x8]
  407778:	ldr	x24, [x9]
  40777c:	subs	x2, x23, x25
  407780:	b.ls	40779c <wcrtomb@plt+0x496c>  // b.plast
  407784:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407788:	ldr	x8, [x8, #1592]
  40778c:	mov	x0, x21
  407790:	add	x1, x8, x25
  407794:	bl	406d64 <wcrtomb@plt+0x3f34>
  407798:	mov	x25, x23
  40779c:	cmp	x23, x28
  4077a0:	sub	x24, x24, x23
  4077a4:	b.hi	4077b0 <wcrtomb@plt+0x4980>  // b.pmore
  4077a8:	cbz	x20, 4077b0 <wcrtomb@plt+0x4980>
  4077ac:	cbz	x24, 4077c0 <wcrtomb@plt+0x4990>
  4077b0:	ldr	x8, [x19, #16]
  4077b4:	add	x20, x20, #0x1
  4077b8:	cmp	x20, x8
  4077bc:	b.cs	4077f4 <wcrtomb@plt+0x49c4>  // b.hs, b.nlast
  4077c0:	cbnz	x24, 4077d8 <wcrtomb@plt+0x49a8>
  4077c4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4077c8:	ldr	x8, [x8, #1600]
  4077cc:	mov	w24, #0x1                   	// #1
  4077d0:	cmp	x25, x8
  4077d4:	b.cs	407824 <wcrtomb@plt+0x49f4>  // b.hs, b.nlast
  4077d8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4077dc:	ldr	x8, [x8, #1592]
  4077e0:	mov	x0, x21
  4077e4:	mov	x2, x24
  4077e8:	add	x1, x8, x23
  4077ec:	bl	406d64 <wcrtomb@plt+0x3f34>
  4077f0:	b	407810 <wcrtomb@plt+0x49e0>
  4077f4:	mov	w8, #0x1                   	// #1
  4077f8:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4077fc:	strb	w8, [x9, #1736]
  407800:	ldr	x0, [x19, #8]
  407804:	bl	407d1c <wcrtomb@plt+0x4eec>
  407808:	ldrb	w8, [x19, #32]
  40780c:	and	w26, w8, #0x1
  407810:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407814:	ldr	x8, [x8, #1864]
  407818:	add	x25, x24, x23
  40781c:	mov	w24, wzr
  407820:	ldr	x28, [x8]
  407824:	tbnz	w24, #0, 407864 <wcrtomb@plt+0x4a34>
  407828:	tbz	w26, #0, 407864 <wcrtomb@plt+0x4a34>
  40782c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407830:	ldr	x2, [x8, #1600]
  407834:	cmp	x25, x2
  407838:	b.hi	407864 <wcrtomb@plt+0x4a34>  // b.pmore
  40783c:	ldrb	w8, [x19, #32]
  407840:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407844:	ldr	x0, [x19]
  407848:	ldr	x1, [x9, #1592]
  40784c:	lsr	w8, w8, #4
  407850:	add	w5, w8, #0x1
  407854:	mov	x3, x25
  407858:	mov	x4, x22
  40785c:	bl	408570 <wcrtomb@plt+0x5740>
  407860:	cbnz	w0, 407770 <wcrtomb@plt+0x4940>
  407864:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407868:	ldr	x8, [x8, #1600]
  40786c:	adrp	x28, 432000 <_obstack_memory_used@@Base+0x2017c>
  407870:	add	x28, x28, #0x630
  407874:	subs	x2, x8, x25
  407878:	b.ls	407894 <wcrtomb@plt+0x4a64>  // b.plast
  40787c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407880:	ldr	x8, [x8, #1592]
  407884:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  407888:	add	x0, x0, #0x708
  40788c:	add	x1, x8, x25
  407890:	bl	406d64 <wcrtomb@plt+0x3f34>
  407894:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407898:	ldrb	w8, [x8, #1616]
  40789c:	mov	x0, x21
  4078a0:	mov	w1, wzr
  4078a4:	strb	w8, [x21, #32]
  4078a8:	bl	4071a8 <wcrtomb@plt+0x4378>
  4078ac:	ldr	x8, [x19, #16]
  4078b0:	cmp	x20, x8
  4078b4:	b.cc	40799c <wcrtomb@plt+0x4b6c>  // b.lo, b.ul, b.last
  4078b8:	ldrb	w8, [x19, #32]
  4078bc:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  4078c0:	add	x22, x22, #0x638
  4078c4:	tbz	w8, #1, 4078dc <wcrtomb@plt+0x4aac>
  4078c8:	ldp	x0, x1, [x22]
  4078cc:	ldrb	w2, [x22, #24]
  4078d0:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  4078d4:	add	x3, x3, #0x6d0
  4078d8:	bl	4070a0 <wcrtomb@plt+0x4270>
  4078dc:	ldrb	w8, [x19, #32]
  4078e0:	tbz	w8, #3, 40796c <wcrtomb@plt+0x4b3c>
  4078e4:	mov	x0, xzr
  4078e8:	bl	407140 <wcrtomb@plt+0x4310>
  4078ec:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  4078f0:	add	x1, x1, #0x13b
  4078f4:	mov	w2, #0x1                   	// #1
  4078f8:	mov	x0, x28
  4078fc:	bl	406d64 <wcrtomb@plt+0x3f34>
  407900:	ldr	x0, [x28, #8]
  407904:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  407908:	add	x1, x1, #0xd72
  40790c:	bl	402940 <popen@plt>
  407910:	cbz	x0, 407a08 <wcrtomb@plt+0x4bd8>
  407914:	mov	x20, x0
  407918:	bl	402c20 <feof_unlocked@plt>
  40791c:	cbz	w0, 4079c0 <wcrtomb@plt+0x4b90>
  407920:	mov	x0, x20
  407924:	bl	402d50 <pclose@plt>
  407928:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  40792c:	add	x0, x0, #0x708
  407930:	mov	w1, #0x1                   	// #1
  407934:	bl	4071a8 <wcrtomb@plt+0x4378>
  407938:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40793c:	ldr	x8, [x8, #1600]
  407940:	cbz	x8, 40796c <wcrtomb@plt+0x4b3c>
  407944:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407948:	ldr	x9, [x9, #1592]
  40794c:	sub	x8, x8, #0x1
  407950:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  407954:	ldrb	w10, [x10, #1128]
  407958:	ldrb	w9, [x9, x8]
  40795c:	cmp	w9, w10
  407960:	b.ne	40796c <wcrtomb@plt+0x4b3c>  // b.any
  407964:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407968:	str	x8, [x9, #1600]
  40796c:	ldrb	w8, [x19, #32]
  407970:	tbz	w8, #2, 407988 <wcrtomb@plt+0x4b58>
  407974:	ldp	x0, x1, [x22]
  407978:	ldrb	w2, [x22, #24]
  40797c:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  407980:	add	x3, x3, #0x6d0
  407984:	bl	4070a0 <wcrtomb@plt+0x4270>
  407988:	ldr	x3, [x19, #24]
  40798c:	cbz	x3, 40799c <wcrtomb@plt+0x4b6c>
  407990:	ldp	x0, x1, [x22]
  407994:	ldrb	w2, [x22, #24]
  407998:	bl	4070a0 <wcrtomb@plt+0x4270>
  40799c:	add	sp, sp, #0x1, lsl #12
  4079a0:	add	sp, sp, #0x10
  4079a4:	ldp	x20, x19, [sp, #80]
  4079a8:	ldp	x22, x21, [sp, #64]
  4079ac:	ldp	x24, x23, [sp, #48]
  4079b0:	ldp	x26, x25, [sp, #32]
  4079b4:	ldp	x28, x27, [sp, #16]
  4079b8:	ldp	x29, x30, [sp], #96
  4079bc:	ret
  4079c0:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  4079c4:	add	x21, x21, #0x708
  4079c8:	b	4079d8 <wcrtomb@plt+0x4ba8>
  4079cc:	mov	x0, x20
  4079d0:	bl	402c20 <feof_unlocked@plt>
  4079d4:	cbnz	w0, 407920 <wcrtomb@plt+0x4af0>
  4079d8:	add	x0, sp, #0x8
  4079dc:	mov	w1, #0x1                   	// #1
  4079e0:	mov	w2, #0x1000                	// #4096
  4079e4:	mov	x3, x20
  4079e8:	bl	402b60 <fread_unlocked@plt>
  4079ec:	cmp	w0, #0x1
  4079f0:	b.lt	4079cc <wcrtomb@plt+0x4b9c>  // b.tstop
  4079f4:	sxtw	x2, w0
  4079f8:	add	x1, sp, #0x8
  4079fc:	mov	x0, x21
  407a00:	bl	406d64 <wcrtomb@plt+0x3f34>
  407a04:	b	4079cc <wcrtomb@plt+0x4b9c>
  407a08:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  407a0c:	add	x1, x1, #0xa62
  407a10:	mov	w2, #0x5                   	// #5
  407a14:	bl	402d10 <dcgettext@plt>
  407a18:	bl	40915c <wcrtomb@plt+0x632c>
  407a1c:	sub	sp, sp, #0x70
  407a20:	stp	x24, x23, [sp, #64]
  407a24:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  407a28:	ldr	x8, [x23, #1600]
  407a2c:	stp	x29, x30, [sp, #16]
  407a30:	stp	x28, x27, [sp, #32]
  407a34:	stp	x26, x25, [sp, #48]
  407a38:	stp	x22, x21, [sp, #80]
  407a3c:	stp	x20, x19, [sp, #96]
  407a40:	add	x29, sp, #0x10
  407a44:	str	xzr, [sp, #8]
  407a48:	cbz	x8, 407ba0 <wcrtomb@plt+0x4d70>
  407a4c:	adrp	x28, 432000 <_obstack_memory_used@@Base+0x2017c>
  407a50:	mov	x19, x0
  407a54:	mov	x26, xzr
  407a58:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  407a5c:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  407a60:	add	x28, x28, #0x638
  407a64:	b	407ac4 <wcrtomb@plt+0x4c94>
  407a68:	ldp	x8, x9, [x28]
  407a6c:	add	x10, x26, x21
  407a70:	add	x8, x8, x26
  407a74:	sub	x9, x9, x10
  407a78:	add	x1, x8, x21
  407a7c:	add	x0, x8, x22
  407a80:	add	x2, x9, #0x1
  407a84:	bl	402720 <memmove@plt>
  407a88:	ldr	x8, [x28, #8]
  407a8c:	add	x24, x27, x26
  407a90:	add	x8, x8, x27
  407a94:	str	x8, [x28, #8]
  407a98:	ldr	x8, [x25, #1592]
  407a9c:	ldr	x1, [x19, x20, lsl #3]
  407aa0:	mov	x2, x22
  407aa4:	add	x0, x8, x26
  407aa8:	bl	402710 <memcpy@plt>
  407aac:	mov	x26, x24
  407ab0:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  407ab4:	ldr	x8, [x23, #1600]
  407ab8:	add	x26, x26, x21
  407abc:	cmp	x8, x26
  407ac0:	b.ls	407ba0 <wcrtomb@plt+0x4d70>  // b.plast
  407ac4:	ldr	w9, [x24, #2292]
  407ac8:	cmp	w9, #0x1
  407acc:	b.ne	407ad8 <wcrtomb@plt+0x4ca8>  // b.any
  407ad0:	mov	w0, #0x1                   	// #1
  407ad4:	b	407af0 <wcrtomb@plt+0x4cc0>
  407ad8:	ldr	x9, [x25, #1592]
  407adc:	sub	x2, x8, x26
  407ae0:	add	x3, sp, #0x8
  407ae4:	mov	x0, xzr
  407ae8:	add	x1, x9, x26
  407aec:	bl	411af4 <wcrtomb@plt+0xecc4>
  407af0:	ldr	x1, [x19]
  407af4:	sub	x8, x0, #0x1
  407af8:	cmn	x8, #0x4
  407afc:	csinc	x21, x0, xzr, ls  // ls = plast
  407b00:	cbz	x1, 407ab4 <wcrtomb@plt+0x4c84>
  407b04:	ldr	x8, [x25, #1592]
  407b08:	mov	x2, x21
  407b0c:	add	x22, x8, x26
  407b10:	mov	x0, x22
  407b14:	bl	402950 <strncmp@plt>
  407b18:	mov	w20, wzr
  407b1c:	cbz	w0, 407b3c <wcrtomb@plt+0x4d0c>
  407b20:	add	w20, w20, #0x2
  407b24:	ldr	x1, [x19, w20, uxtw #3]
  407b28:	cbz	x1, 407ab4 <wcrtomb@plt+0x4c84>
  407b2c:	mov	x0, x22
  407b30:	mov	x2, x21
  407b34:	bl	402950 <strncmp@plt>
  407b38:	cbnz	w0, 407b20 <wcrtomb@plt+0x4cf0>
  407b3c:	orr	w20, w20, #0x1
  407b40:	ldr	x0, [x19, w20, uxtw #3]
  407b44:	ldrb	w8, [x0]
  407b48:	cbz	w8, 407b88 <wcrtomb@plt+0x4d58>
  407b4c:	bl	402750 <strlen@plt>
  407b50:	mov	x22, x0
  407b54:	subs	x27, x22, x21
  407b58:	b.ls	407b94 <wcrtomb@plt+0x4d64>  // b.plast
  407b5c:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  407b60:	add	x9, x9, #0x640
  407b64:	ldp	x8, x9, [x9]
  407b68:	add	x8, x27, x8
  407b6c:	add	x1, x8, #0x1
  407b70:	cmp	x9, x1
  407b74:	b.cs	407a68 <wcrtomb@plt+0x4c38>  // b.hs, b.nlast
  407b78:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  407b7c:	add	x0, x0, #0x630
  407b80:	bl	406e44 <wcrtomb@plt+0x4014>
  407b84:	b	407a68 <wcrtomb@plt+0x4c38>
  407b88:	mov	w22, #0x1                   	// #1
  407b8c:	subs	x27, x22, x21
  407b90:	b.hi	407b5c <wcrtomb@plt+0x4d2c>  // b.pmore
  407b94:	mov	x24, x26
  407b98:	b.cc	407a68 <wcrtomb@plt+0x4c38>  // b.lo, b.ul, b.last
  407b9c:	b	407a98 <wcrtomb@plt+0x4c68>
  407ba0:	ldp	x20, x19, [sp, #96]
  407ba4:	ldp	x22, x21, [sp, #80]
  407ba8:	ldp	x24, x23, [sp, #64]
  407bac:	ldp	x26, x25, [sp, #48]
  407bb0:	ldp	x28, x27, [sp, #32]
  407bb4:	ldp	x29, x30, [sp, #16]
  407bb8:	add	sp, sp, #0x70
  407bbc:	ret
  407bc0:	stp	x29, x30, [sp, #-16]!
  407bc4:	ldr	w9, [x0]
  407bc8:	mov	x29, sp
  407bcc:	cmp	w9, #0x6
  407bd0:	b.hi	407c88 <wcrtomb@plt+0x4e58>  // b.pmore
  407bd4:	adrp	x10, 41f000 <_obstack_memory_used@@Base+0xd17c>
  407bd8:	add	x10, x10, #0x990
  407bdc:	adr	x11, 407bf4 <wcrtomb@plt+0x4dc4>
  407be0:	ldrb	w12, [x10, x9]
  407be4:	add	x11, x11, x12, lsl #2
  407be8:	mov	x8, x0
  407bec:	mov	w0, #0x1                   	// #1
  407bf0:	br	x11
  407bf4:	ldr	x8, [x8, #8]
  407bf8:	ldr	x9, [x1, #16]
  407bfc:	cmp	x8, x9
  407c00:	cset	w0, ls  // ls = plast
  407c04:	b	407c7c <wcrtomb@plt+0x4e4c>
  407c08:	ldr	x8, [x8, #8]
  407c0c:	ldr	x9, [x1, #16]
  407c10:	cmp	x8, x9
  407c14:	b	407c78 <wcrtomb@plt+0x4e48>
  407c18:	ldr	x0, [x8, #24]
  407c1c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407c20:	add	x8, x8, #0x638
  407c24:	ldp	x1, x2, [x8]
  407c28:	mov	x3, xzr
  407c2c:	mov	x4, xzr
  407c30:	mov	w5, wzr
  407c34:	bl	408570 <wcrtomb@plt+0x5740>
  407c38:	cmp	w0, #0x0
  407c3c:	cset	w0, ne  // ne = any
  407c40:	b	407c7c <wcrtomb@plt+0x4e4c>
  407c44:	ldr	x9, [x1, #16]
  407c48:	ldr	x10, [x8, #8]
  407c4c:	subs	x9, x9, x10
  407c50:	b.cs	407c68 <wcrtomb@plt+0x4e38>  // b.hs, b.nlast
  407c54:	mov	w0, wzr
  407c58:	b	407c7c <wcrtomb@plt+0x4e4c>
  407c5c:	mov	x0, x1
  407c60:	bl	4074f8 <wcrtomb@plt+0x46c8>
  407c64:	b	407c7c <wcrtomb@plt+0x4e4c>
  407c68:	ldr	x8, [x8, #16]
  407c6c:	udiv	x10, x9, x8
  407c70:	msub	x8, x10, x8, x9
  407c74:	cmp	x8, #0x0
  407c78:	cset	w0, eq  // eq = none
  407c7c:	and	w0, w0, #0x1
  407c80:	ldp	x29, x30, [sp], #16
  407c84:	ret
  407c88:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  407c8c:	add	x0, x0, #0xa9c
  407c90:	bl	40915c <wcrtomb@plt+0x632c>
  407c94:	stp	x29, x30, [sp, #-32]!
  407c98:	stp	x20, x19, [sp, #16]
  407c9c:	mov	x19, x0
  407ca0:	mov	x29, sp
  407ca4:	b	407cb0 <wcrtomb@plt+0x4e80>
  407ca8:	mov	w8, #0x1                   	// #1
  407cac:	tbz	w8, #0, 407d0c <wcrtomb@plt+0x4edc>
  407cb0:	mov	x0, x19
  407cb4:	bl	40677c <wcrtomb@plt+0x394c>
  407cb8:	ldr	x8, [x19]
  407cbc:	ldr	x9, [x8]
  407cc0:	cbz	x9, 407d00 <wcrtomb@plt+0x4ed0>
  407cc4:	add	x9, x8, #0x8
  407cc8:	str	x9, [x19]
  407ccc:	ldr	x0, [x8]
  407cd0:	mov	x1, x19
  407cd4:	bl	4069d4 <wcrtomb@plt+0x3ba4>
  407cd8:	ldr	x0, [x19, #184]
  407cdc:	cbz	x0, 407ca8 <wcrtomb@plt+0x4e78>
  407ce0:	bl	402ab0 <getc_unlocked@plt>
  407ce4:	cmn	w0, #0x1
  407ce8:	b.eq	407ca8 <wcrtomb@plt+0x4e78>  // b.none
  407cec:	ldr	x1, [x19, #184]
  407cf0:	bl	402be0 <ungetc@plt>
  407cf4:	mov	w20, wzr
  407cf8:	mov	w8, wzr
  407cfc:	b	407cac <wcrtomb@plt+0x4e7c>
  407d00:	mov	w8, wzr
  407d04:	mov	w20, #0x1                   	// #1
  407d08:	b	407cac <wcrtomb@plt+0x4e7c>
  407d0c:	and	w0, w20, #0x1
  407d10:	ldp	x20, x19, [sp, #16]
  407d14:	ldp	x29, x30, [sp], #32
  407d18:	ret
  407d1c:	stp	x29, x30, [sp, #-64]!
  407d20:	stp	x24, x23, [sp, #16]
  407d24:	stp	x22, x21, [sp, #32]
  407d28:	stp	x20, x19, [sp, #48]
  407d2c:	mov	x29, sp
  407d30:	cbz	x0, 407de8 <wcrtomb@plt+0x4fb8>
  407d34:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  407d38:	mov	x19, x0
  407d3c:	mov	w8, wzr
  407d40:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  407d44:	add	x22, x22, #0x740
  407d48:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  407d4c:	b	407d6c <wcrtomb@plt+0x4f3c>
  407d50:	ldr	x9, [x23, #1592]
  407d54:	mov	w2, w20
  407d58:	add	x0, x9, x8
  407d5c:	bl	407dfc <wcrtomb@plt+0x4fcc>
  407d60:	mov	w8, wzr
  407d64:	ldr	x19, [x19, #24]
  407d68:	cbz	x19, 407de8 <wcrtomb@plt+0x4fb8>
  407d6c:	ldp	w24, w9, [x19, #16]
  407d70:	ldr	x1, [x19, #8]
  407d74:	sxtw	x24, w24
  407d78:	tst	w9, #0xc
  407d7c:	csel	w8, w8, wzr, eq  // eq = none
  407d80:	orr	w20, w8, w9
  407d84:	cbz	x1, 407d98 <wcrtomb@plt+0x4f68>
  407d88:	ldr	x0, [x19]
  407d8c:	mov	w2, w20
  407d90:	bl	407dfc <wcrtomb@plt+0x4fcc>
  407d94:	and	w20, w20, #0xfffffff3
  407d98:	tbnz	w24, #31, 407d60 <wcrtomb@plt+0x4f30>
  407d9c:	ldr	x8, [x21, #1848]
  407da0:	cmp	x8, x24
  407da4:	b.ls	407d60 <wcrtomb@plt+0x4f30>  // b.plast
  407da8:	ldp	x10, x8, [x22]
  407dac:	lsl	x11, x24, #3
  407db0:	ldr	x9, [x8, x11]
  407db4:	ldr	x8, [x10, x11]
  407db8:	subs	x1, x9, x8
  407dbc:	b.ne	407d50 <wcrtomb@plt+0x4f20>  // b.any
  407dc0:	ldrb	w10, [x19, #20]
  407dc4:	tst	w10, #0xc
  407dc8:	b.eq	407ddc <wcrtomb@plt+0x4fac>  // b.none
  407dcc:	and	w8, w20, #0xc
  407dd0:	ldr	x19, [x19, #24]
  407dd4:	cbnz	x19, 407d6c <wcrtomb@plt+0x4f3c>
  407dd8:	b	407de8 <wcrtomb@plt+0x4fb8>
  407ddc:	cmp	x9, x8
  407de0:	b.ne	407d50 <wcrtomb@plt+0x4f20>  // b.any
  407de4:	b	407d60 <wcrtomb@plt+0x4f30>
  407de8:	ldp	x20, x19, [sp, #48]
  407dec:	ldp	x22, x21, [sp, #32]
  407df0:	ldp	x24, x23, [sp, #16]
  407df4:	ldp	x29, x30, [sp], #64
  407df8:	ret
  407dfc:	sub	sp, sp, #0x60
  407e00:	stp	x20, x19, [sp, #80]
  407e04:	mov	x19, x1
  407e08:	mov	x20, x0
  407e0c:	stp	x29, x30, [sp, #16]
  407e10:	str	x25, [sp, #32]
  407e14:	stp	x24, x23, [sp, #48]
  407e18:	stp	x22, x21, [sp, #64]
  407e1c:	add	x29, sp, #0x10
  407e20:	cbz	w2, 408028 <wcrtomb@plt+0x51f8>
  407e24:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407e28:	add	x8, x8, #0x718
  407e2c:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  407e30:	ldp	x8, x9, [x8]
  407e34:	ldrsw	x10, [x23, #2292]
  407e38:	mov	w22, w2
  407e3c:	sub	x11, x9, x8
  407e40:	mul	x9, x10, x19
  407e44:	cmp	x11, x9
  407e48:	b.cs	407e5c <wcrtomb@plt+0x502c>  // b.hs, b.nlast
  407e4c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  407e50:	add	x1, x9, x8
  407e54:	add	x0, x0, #0x708
  407e58:	bl	406e44 <wcrtomb@plt+0x4014>
  407e5c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  407e60:	add	x8, x8, #0x72c
  407e64:	ldr	x8, [x8]
  407e68:	str	x8, [x29, #24]
  407e6c:	cbz	x19, 40803c <wcrtomb@plt+0x520c>
  407e70:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  407e74:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  407e78:	add	x21, x21, #0x708
  407e7c:	add	x24, x24, #0x710
  407e80:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  407e84:	ldr	w8, [x23, #2292]
  407e88:	cmp	w8, #0x1
  407e8c:	b.ne	407eac <wcrtomb@plt+0x507c>  // b.any
  407e90:	ldrb	w0, [x20]
  407e94:	bl	402af0 <btowc@plt>
  407e98:	stur	w0, [x29, #-4]
  407e9c:	mov	w0, #0x1                   	// #1
  407ea0:	cmn	x0, #0x2
  407ea4:	b.ne	407ec8 <wcrtomb@plt+0x5098>  // b.any
  407ea8:	b	407f00 <wcrtomb@plt+0x50d0>
  407eac:	sub	x0, x29, #0x4
  407eb0:	add	x3, x29, #0x18
  407eb4:	mov	x1, x20
  407eb8:	mov	x2, x19
  407ebc:	bl	411af4 <wcrtomb@plt+0xecc4>
  407ec0:	cmn	x0, #0x2
  407ec4:	b.eq	407f00 <wcrtomb@plt+0x50d0>  // b.none
  407ec8:	cbz	x0, 407f00 <wcrtomb@plt+0x50d0>
  407ecc:	cmn	x0, #0x1
  407ed0:	b.ne	407f18 <wcrtomb@plt+0x50e8>  // b.any
  407ed4:	ands	w22, w22, #0xfffffff3
  407ed8:	b.eq	407f00 <wcrtomb@plt+0x50d0>  // b.none
  407edc:	mov	w2, #0x1                   	// #1
  407ee0:	mov	x0, x21
  407ee4:	mov	x1, x20
  407ee8:	bl	406d64 <wcrtomb@plt+0x3f34>
  407eec:	add	x20, x20, #0x1
  407ef0:	sub	x19, x19, #0x1
  407ef4:	mov	w8, #0x2                   	// #2
  407ef8:	stur	xzr, [x21, #36]
  407efc:	b	407fd8 <wcrtomb@plt+0x51a8>
  407f00:	mov	x0, x21
  407f04:	mov	x1, x20
  407f08:	mov	x2, x19
  407f0c:	bl	406d64 <wcrtomb@plt+0x3f34>
  407f10:	mov	w8, #0x1                   	// #1
  407f14:	b	407fd8 <wcrtomb@plt+0x51a8>
  407f18:	add	x20, x20, x0
  407f1c:	tst	w22, #0xc
  407f20:	sub	x19, x19, x0
  407f24:	b.eq	407f38 <wcrtomb@plt+0x5108>  // b.none
  407f28:	ldur	w0, [x29, #-4]
  407f2c:	tbnz	w22, #2, 407f48 <wcrtomb@plt+0x5118>
  407f30:	bl	402df0 <towlower@plt>
  407f34:	b	407f4c <wcrtomb@plt+0x511c>
  407f38:	ldur	w0, [x29, #-4]
  407f3c:	tbnz	w22, #0, 407f80 <wcrtomb@plt+0x5150>
  407f40:	bl	402df0 <towlower@plt>
  407f44:	b	407f84 <wcrtomb@plt+0x5154>
  407f48:	bl	402d60 <towupper@plt>
  407f4c:	mov	w1, w0
  407f50:	ands	w22, w22, #0xfffffff3
  407f54:	stur	w0, [x29, #-4]
  407f58:	b.ne	407f88 <wcrtomb@plt+0x5158>  // b.any
  407f5c:	ldr	w8, [x23, #2292]
  407f60:	cmp	w8, #0x1
  407f64:	b.ne	407fec <wcrtomb@plt+0x51bc>  // b.any
  407f68:	mov	w0, w1
  407f6c:	bl	402890 <wctob@plt>
  407f70:	ldp	x8, x9, [x24]
  407f74:	strb	w0, [x8, x9]
  407f78:	mov	w0, #0x1                   	// #1
  407f7c:	b	407ffc <wcrtomb@plt+0x51cc>
  407f80:	bl	402d60 <towupper@plt>
  407f84:	stur	w0, [x29, #-4]
  407f88:	ldr	w8, [x23, #2292]
  407f8c:	cmp	w8, #0x1
  407f90:	b.ne	407fac <wcrtomb@plt+0x517c>  // b.any
  407f94:	ldur	w0, [x29, #-4]
  407f98:	bl	402890 <wctob@plt>
  407f9c:	ldp	x8, x9, [x24]
  407fa0:	strb	w0, [x8, x9]
  407fa4:	mov	w0, #0x1                   	// #1
  407fa8:	b	407fc0 <wcrtomb@plt+0x5190>
  407fac:	ldp	x8, x9, [x24]
  407fb0:	ldur	w1, [x29, #-4]
  407fb4:	add	x2, x24, #0x1c
  407fb8:	add	x0, x8, x9
  407fbc:	bl	402e30 <wcrtomb@plt>
  407fc0:	ldr	x8, [x25, #1816]
  407fc4:	cmn	x0, #0x2
  407fc8:	add	x8, x8, x0
  407fcc:	str	x8, [x25, #1816]
  407fd0:	b.cs	408058 <wcrtomb@plt+0x5228>  // b.hs, b.nlast
  407fd4:	mov	w8, wzr
  407fd8:	orr	w8, w8, #0x2
  407fdc:	cmp	w8, #0x2
  407fe0:	b.ne	40803c <wcrtomb@plt+0x520c>  // b.any
  407fe4:	cbnz	x19, 407e84 <wcrtomb@plt+0x5054>
  407fe8:	b	40803c <wcrtomb@plt+0x520c>
  407fec:	ldp	x8, x9, [x24]
  407ff0:	add	x2, x24, #0x1c
  407ff4:	add	x0, x8, x9
  407ff8:	bl	402e30 <wcrtomb@plt>
  407ffc:	ldr	x8, [x25, #1816]
  408000:	cmn	x0, #0x2
  408004:	add	x8, x8, x0
  408008:	str	x8, [x25, #1816]
  40800c:	b.cs	408058 <wcrtomb@plt+0x5228>  // b.hs, b.nlast
  408010:	mov	x0, x21
  408014:	mov	x1, x20
  408018:	mov	x2, x19
  40801c:	bl	406d64 <wcrtomb@plt+0x3f34>
  408020:	mov	w22, wzr
  408024:	b	407f10 <wcrtomb@plt+0x50e0>
  408028:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  40802c:	add	x0, x0, #0x708
  408030:	mov	x1, x20
  408034:	mov	x2, x19
  408038:	bl	406d64 <wcrtomb@plt+0x3f34>
  40803c:	ldp	x20, x19, [sp, #80]
  408040:	ldp	x22, x21, [sp, #64]
  408044:	ldp	x24, x23, [sp, #48]
  408048:	ldr	x25, [sp, #32]
  40804c:	ldp	x29, x30, [sp, #16]
  408050:	add	sp, sp, #0x60
  408054:	ret
  408058:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40805c:	ldr	x19, [x8, #1280]
  408060:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408064:	add	x1, x1, #0xafb
  408068:	mov	w2, #0x5                   	// #5
  40806c:	mov	x0, xzr
  408070:	bl	402d10 <dcgettext@plt>
  408074:	mov	x2, x0
  408078:	mov	w1, #0x1                   	// #1
  40807c:	mov	x0, x19
  408080:	bl	402b90 <__fprintf_chk@plt>
  408084:	bl	402b00 <abort@plt>
  408088:	stp	x29, x30, [sp, #-80]!
  40808c:	str	x25, [sp, #16]
  408090:	stp	x24, x23, [sp, #32]
  408094:	stp	x22, x21, [sp, #48]
  408098:	stp	x20, x19, [sp, #64]
  40809c:	mov	x29, sp
  4080a0:	mov	x19, x0
  4080a4:	bl	402750 <strlen@plt>
  4080a8:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  4080ac:	ldr	x22, [x23, #1912]
  4080b0:	mov	x20, x0
  4080b4:	mov	x0, x22
  4080b8:	bl	402750 <strlen@plt>
  4080bc:	mov	x21, x0
  4080c0:	mov	w1, #0x2a                  	// #42
  4080c4:	mov	x0, x22
  4080c8:	bl	402c10 <strchr@plt>
  4080cc:	cbz	x0, 4080f0 <wcrtomb@plt+0x52c0>
  4080d0:	sub	w22, w20, #0x1
  4080d4:	add	x0, x0, #0x1
  4080d8:	mov	w1, #0x2a                  	// #42
  4080dc:	mov	w24, w21
  4080e0:	bl	402c10 <strchr@plt>
  4080e4:	add	w21, w21, w22
  4080e8:	cbnz	x0, 4080d4 <wcrtomb@plt+0x52a4>
  4080ec:	add	w21, w22, w24
  4080f0:	add	w8, w21, #0x1
  4080f4:	sxtw	x0, w8
  4080f8:	bl	4118c8 <wcrtomb@plt+0xea98>
  4080fc:	ldr	x22, [x23, #1912]
  408100:	mov	x21, x0
  408104:	mov	w1, #0x2a                  	// #42
  408108:	mov	x0, x22
  40810c:	bl	402c10 <strchr@plt>
  408110:	cbz	x0, 408160 <wcrtomb@plt+0x5330>
  408114:	mov	x23, x0
  408118:	sxtw	x25, w20
  40811c:	mov	x20, x21
  408120:	sub	x24, x23, x22
  408124:	mov	x0, x20
  408128:	mov	x1, x22
  40812c:	mov	x2, x24
  408130:	bl	402710 <memcpy@plt>
  408134:	add	x0, x20, x24
  408138:	mov	x1, x19
  40813c:	bl	402c80 <strcpy@plt>
  408140:	add	x22, x23, #0x1
  408144:	add	x20, x0, x25
  408148:	mov	w1, #0x2a                  	// #42
  40814c:	mov	x0, x22
  408150:	bl	402c10 <strchr@plt>
  408154:	mov	x23, x0
  408158:	cbnz	x0, 408120 <wcrtomb@plt+0x52f0>
  40815c:	b	408164 <wcrtomb@plt+0x5334>
  408160:	mov	x20, x21
  408164:	mov	x0, x20
  408168:	mov	x1, x22
  40816c:	bl	402c80 <strcpy@plt>
  408170:	mov	x0, x21
  408174:	ldp	x20, x19, [sp, #64]
  408178:	ldp	x22, x21, [sp, #48]
  40817c:	ldp	x24, x23, [sp, #32]
  408180:	ldr	x25, [sp, #16]
  408184:	ldp	x29, x30, [sp], #80
  408188:	ret
  40818c:	sub	sp, sp, #0x40
  408190:	stp	x29, x30, [sp, #16]
  408194:	add	x29, sp, #0x10
  408198:	stp	x22, x21, [sp, #32]
  40819c:	mov	w21, w0
  4081a0:	sturb	w0, [x29, #-4]
  4081a4:	mov	x0, x1
  4081a8:	stp	x20, x19, [sp, #48]
  4081ac:	mov	x19, x1
  4081b0:	bl	402b30 <mbsinit@plt>
  4081b4:	mov	w22, w0
  4081b8:	sub	x1, x29, #0x4
  4081bc:	mov	w2, #0x1                   	// #1
  4081c0:	mov	x0, xzr
  4081c4:	mov	x3, x19
  4081c8:	mov	w20, #0x1                   	// #1
  4081cc:	bl	411af4 <wcrtomb@plt+0xecc4>
  4081d0:	mov	x2, x0
  4081d4:	add	w8, w2, #0x2
  4081d8:	cmp	w8, #0x3
  4081dc:	b.hi	408224 <wcrtomb@plt+0x53f4>  // b.pmore
  4081e0:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4081e4:	add	x9, x9, #0xb2b
  4081e8:	adr	x10, 4081f8 <wcrtomb@plt+0x53c8>
  4081ec:	ldrb	w11, [x9, x8]
  4081f0:	add	x10, x10, x11, lsl #2
  4081f4:	br	x10
  4081f8:	mov	w20, wzr
  4081fc:	str	xzr, [x19]
  408200:	b	40820c <wcrtomb@plt+0x53dc>
  408204:	cmp	w22, #0x0
  408208:	cset	w20, eq  // eq = none
  40820c:	mov	w0, w20
  408210:	ldp	x20, x19, [sp, #48]
  408214:	ldp	x22, x21, [sp, #32]
  408218:	ldp	x29, x30, [sp, #16]
  40821c:	add	sp, sp, #0x40
  408220:	ret
  408224:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408228:	add	x0, x0, #0xb2f
  40822c:	mov	w1, w21
  408230:	bl	40915c <wcrtomb@plt+0x632c>
  408234:	stp	x29, x30, [sp, #-16]!
  408238:	mov	x29, sp
  40823c:	bl	40f8e4 <wcrtomb@plt+0xcab4>
  408240:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408244:	add	x1, x1, #0xb56
  408248:	bl	402ba0 <strcmp@plt>
  40824c:	cmp	w0, #0x0
  408250:	cset	w8, eq  // eq = none
  408254:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  408258:	strb	w8, [x9, #2288]
  40825c:	bl	402bf0 <__ctype_get_mb_cur_max@plt>
  408260:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408264:	str	w0, [x8, #2292]
  408268:	ldp	x29, x30, [sp], #16
  40826c:	ret
  408270:	stp	x29, x30, [sp, #-16]!
  408274:	mov	x1, x0
  408278:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  40827c:	add	x0, x0, #0x7bf
  408280:	mov	x29, sp
  408284:	bl	40915c <wcrtomb@plt+0x632c>
  408288:	stp	x29, x30, [sp, #-32]!
  40828c:	str	x19, [sp, #16]
  408290:	mov	x19, x0
  408294:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408298:	add	x0, x0, #0xb5c
  40829c:	mov	x29, sp
  4082a0:	bl	402dc0 <getenv@plt>
  4082a4:	cbz	x0, 4082b4 <wcrtomb@plt+0x5484>
  4082a8:	ldr	x19, [sp, #16]
  4082ac:	ldp	x29, x30, [sp], #32
  4082b0:	ret
  4082b4:	mov	x0, x19
  4082b8:	bl	408270 <wcrtomb@plt+0x5440>
  4082bc:	stp	x29, x30, [sp, #-64]!
  4082c0:	str	x23, [sp, #16]
  4082c4:	stp	x22, x21, [sp, #32]
  4082c8:	stp	x20, x19, [sp, #48]
  4082cc:	mov	x29, sp
  4082d0:	mov	w19, w2
  4082d4:	mov	w23, w1
  4082d8:	mov	x22, x0
  4082dc:	bl	409c90 <wcrtomb@plt+0x6e60>
  4082e0:	cbz	x0, 408338 <wcrtomb@plt+0x5508>
  4082e4:	mov	x21, x0
  4082e8:	add	x0, x0, #0x5f
  4082ec:	bl	4119fc <wcrtomb@plt+0xebcc>
  4082f0:	mov	x20, x0
  4082f4:	str	w23, [x0, #64]
  4082f8:	add	x23, x0, #0x5a
  4082fc:	mov	x0, x22
  408300:	bl	409c88 <wcrtomb@plt+0x6e58>
  408304:	mov	x1, x0
  408308:	mov	x0, x23
  40830c:	mov	x2, x21
  408310:	bl	402710 <memcpy@plt>
  408314:	mov	w2, #0x2                   	// #2
  408318:	mov	x0, x23
  40831c:	mov	x1, x21
  408320:	bl	402ff4 <wcrtomb@plt+0x1c4>
  408324:	str	x0, [x20, #72]
  408328:	mov	x0, x20
  40832c:	mov	w1, w19
  408330:	bl	408374 <wcrtomb@plt+0x5544>
  408334:	b	408344 <wcrtomb@plt+0x5514>
  408338:	cmp	w23, #0x1
  40833c:	b.ge	40835c <wcrtomb@plt+0x552c>  // b.tcont
  408340:	mov	x20, xzr
  408344:	mov	x0, x20
  408348:	ldp	x20, x19, [sp, #48]
  40834c:	ldp	x22, x21, [sp, #32]
  408350:	ldr	x23, [sp, #16]
  408354:	ldp	x29, x30, [sp], #64
  408358:	ret
  40835c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408360:	add	x1, x1, #0xbe4
  408364:	mov	w2, #0x5                   	// #5
  408368:	mov	x0, xzr
  40836c:	bl	402d10 <dcgettext@plt>
  408370:	bl	402f4c <wcrtomb@plt+0x11c>
  408374:	sub	sp, sp, #0x110
  408378:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40837c:	stp	x28, x23, [sp, #224]
  408380:	ldr	w10, [x8, #1880]
  408384:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  408388:	ldr	w8, [x23, #2296]
  40838c:	mov	w9, #0xb27c                	// #45692
  408390:	mov	w11, #0x246                 	// #582
  408394:	movk	w9, #0x7, lsl #16
  408398:	movk	w11, #0x105, lsl #16
  40839c:	tst	w10, #0x1
  4083a0:	stp	x22, x21, [sp, #240]
  4083a4:	stp	x20, x19, [sp, #256]
  4083a8:	mov	w20, w1
  4083ac:	csel	w21, w9, w11, ne  // ne = any
  4083b0:	cmp	w8, #0x2
  4083b4:	mov	x19, x0
  4083b8:	stp	x29, x30, [sp, #208]
  4083bc:	add	x29, sp, #0xd0
  4083c0:	b.eq	408404 <wcrtomb@plt+0x55d4>  // b.none
  4083c4:	cmp	w8, #0x1
  4083c8:	b.eq	4083e8 <wcrtomb@plt+0x55b8>  // b.none
  4083cc:	cbnz	w8, 4083ec <wcrtomb@plt+0x55bc>
  4083d0:	mov	w8, #0xb27e                	// #45694
  4083d4:	movk	w8, #0x105, lsl #16
  4083d8:	and	w21, w21, w8
  4083dc:	ldr	w22, [x19, #64]
  4083e0:	tbz	w22, #1, 4083f4 <wcrtomb@plt+0x55c4>
  4083e4:	b	408420 <wcrtomb@plt+0x55f0>
  4083e8:	orr	w21, w21, #0x20000
  4083ec:	ldr	w22, [x19, #64]
  4083f0:	tbnz	w22, #1, 408420 <wcrtomb@plt+0x55f0>
  4083f4:	mov	w0, #0x100                 	// #256
  4083f8:	bl	4028e0 <malloc@plt>
  4083fc:	str	x0, [x19, #32]
  408400:	b	408424 <wcrtomb@plt+0x55f4>
  408404:	orr	w8, w9, #0x80000
  408408:	mov	w9, #0x646                 	// #1606
  40840c:	tst	w10, #0x1
  408410:	movk	w9, #0x10f, lsl #16
  408414:	csel	w21, w8, w9, ne  // ne = any
  408418:	ldr	w22, [x19, #64]
  40841c:	tbz	w22, #1, 4083f4 <wcrtomb@plt+0x55c4>
  408420:	orr	w21, w21, #0x400000
  408424:	cmp	w20, #0x0
  408428:	cset	w8, eq  // eq = none
  40842c:	bfi	w21, w8, #25, #1
  408430:	and	w8, w21, #0xffffffbf
  408434:	orr	w8, w8, #0x100
  408438:	tst	w22, #0x4
  40843c:	csel	w22, w21, w8, eq  // eq = none
  408440:	mov	x0, x22
  408444:	bl	4120d8 <_obstack_memory_used@@Base+0x254>
  408448:	ldr	x1, [x19, #72]
  40844c:	add	x21, x19, #0x5a
  408450:	mov	x0, x21
  408454:	mov	x2, x19
  408458:	bl	411ef8 <_obstack_memory_used@@Base+0x74>
  40845c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408460:	ldrb	w8, [x8, #1128]
  408464:	cmp	w8, #0xa
  408468:	b.ne	40847c <wcrtomb@plt+0x564c>  // b.any
  40846c:	ldrb	w9, [x19, #64]
  408470:	lsl	w9, w9, #5
  408474:	and	w9, w9, #0xffffff80
  408478:	b	408480 <wcrtomb@plt+0x5650>
  40847c:	mov	w9, wzr
  408480:	ldrb	w10, [x19, #56]
  408484:	str	xzr, [x19, #40]
  408488:	and	w10, w10, #0x7f
  40848c:	orr	w9, w10, w9
  408490:	strb	w9, [x19, #56]
  408494:	cbnz	x0, 408538 <wcrtomb@plt+0x5708>
  408498:	cbz	w20, 4084b4 <wcrtomb@plt+0x5684>
  40849c:	ldr	x9, [x19, #48]
  4084a0:	sub	w20, w20, #0x1
  4084a4:	cmp	x9, w20, sxtw
  4084a8:	b.cs	4084b4 <wcrtomb@plt+0x5684>  // b.hs, b.nlast
  4084ac:	ldr	w9, [x23, #2296]
  4084b0:	cbz	w9, 40853c <wcrtomb@plt+0x570c>
  4084b4:	cmp	w8, #0xa
  4084b8:	cset	w8, ne  // ne = any
  4084bc:	lsl	w20, w8, #1
  4084c0:	bl	40be9c <wcrtomb@plt+0x906c>
  4084c4:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x2017c>
  4084c8:	add	x1, x1, #0x8fc
  4084cc:	mov	x2, x22
  4084d0:	mov	w3, w20
  4084d4:	str	x0, [x19, #80]
  4084d8:	bl	40beb4 <wcrtomb@plt+0x9084>
  4084dc:	ldp	x1, x2, [x19, #72]
  4084e0:	mov	w3, #0x1                   	// #1
  4084e4:	mov	x0, x21
  4084e8:	bl	40a900 <wcrtomb@plt+0x7ad0>
  4084ec:	ldr	x8, [x19, #72]
  4084f0:	cmp	x8, #0x1
  4084f4:	b.ne	408520 <wcrtomb@plt+0x56f0>  // b.any
  4084f8:	ldrb	w8, [x21]
  4084fc:	cmp	w8, #0x24
  408500:	b.eq	408518 <wcrtomb@plt+0x56e8>  // b.none
  408504:	cmp	w8, #0x5e
  408508:	b.ne	408520 <wcrtomb@plt+0x56f0>  // b.any
  40850c:	mov	w8, #0x1                   	// #1
  408510:	strb	w8, [x19, #88]
  408514:	b	408520 <wcrtomb@plt+0x56f0>
  408518:	mov	w8, #0x1                   	// #1
  40851c:	strb	w8, [x19, #89]
  408520:	ldp	x20, x19, [sp, #256]
  408524:	ldp	x22, x21, [sp, #240]
  408528:	ldp	x28, x23, [sp, #224]
  40852c:	ldp	x29, x30, [sp, #208]
  408530:	add	sp, sp, #0x110
  408534:	ret
  408538:	bl	402f4c <wcrtomb@plt+0x11c>
  40853c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408540:	add	x1, x1, #0xb9a
  408544:	mov	w2, #0x5                   	// #5
  408548:	mov	x0, xzr
  40854c:	bl	402d10 <dcgettext@plt>
  408550:	mov	x3, x0
  408554:	add	x0, sp, #0x8
  408558:	mov	w1, #0x1                   	// #1
  40855c:	mov	w2, #0xc8                  	// #200
  408560:	mov	w4, w20
  408564:	bl	402760 <__sprintf_chk@plt>
  408568:	add	x0, sp, #0x8
  40856c:	bl	402f4c <wcrtomb@plt+0x11c>
  408570:	sub	sp, sp, #0x70
  408574:	stp	x24, x23, [sp, #64]
  408578:	stp	x22, x21, [sp, #80]
  40857c:	stp	x20, x19, [sp, #96]
  408580:	mov	w20, w5
  408584:	mov	x19, x4
  408588:	mov	x22, x3
  40858c:	mov	x24, x2
  408590:	mov	x21, x1
  408594:	stp	x29, x30, [sp, #16]
  408598:	stp	x28, x27, [sp, #32]
  40859c:	stp	x26, x25, [sp, #48]
  4085a0:	add	x29, sp, #0x10
  4085a4:	cbz	x0, 4085b8 <wcrtomb@plt+0x5788>
  4085a8:	mov	x23, x0
  4085ac:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4085b0:	str	x0, [x8, #1872]
  4085b4:	b	4085c4 <wcrtomb@plt+0x5794>
  4085b8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4085bc:	ldr	x23, [x8, #1872]
  4085c0:	cbz	x23, 408920 <wcrtomb@plt+0x5af0>
  4085c4:	mov	w8, #0x7fffffff            	// #2147483647
  4085c8:	cmp	x24, x8
  4085cc:	b.cs	408908 <wcrtomb@plt+0x5ad8>  // b.hs, b.nlast
  4085d0:	cbz	w20, 408608 <wcrtomb@plt+0x57d8>
  4085d4:	ldrb	w8, [x23, #56]
  4085d8:	tbz	w8, #4, 408608 <wcrtomb@plt+0x57d8>
  4085dc:	ldr	x0, [x23, #80]
  4085e0:	cbz	x0, 4085f4 <wcrtomb@plt+0x57c4>
  4085e4:	bl	40b0fc <wcrtomb@plt+0x82cc>
  4085e8:	ldr	x0, [x23, #80]
  4085ec:	bl	402bd0 <free@plt>
  4085f0:	str	xzr, [x23, #80]
  4085f4:	mov	x0, x23
  4085f8:	bl	4126b4 <_obstack_memory_used@@Base+0x830>
  4085fc:	mov	x0, x23
  408600:	mov	w1, w20
  408604:	bl	408374 <wcrtomb@plt+0x5544>
  408608:	ldrb	w8, [x23, #56]
  40860c:	ldrb	w9, [x23, #88]
  408610:	and	w8, w8, #0xfffffffb
  408614:	orr	w8, w8, #0x2
  408618:	strb	w8, [x23, #56]
  40861c:	cbnz	w9, 408628 <wcrtomb@plt+0x57f8>
  408620:	ldrb	w8, [x23, #89]
  408624:	cbz	w8, 40870c <wcrtomb@plt+0x58dc>
  408628:	ldrb	w8, [x23, #89]
  40862c:	cbz	w8, 408640 <wcrtomb@plt+0x5810>
  408630:	ldrb	w8, [x23, #64]
  408634:	tbnz	w8, #2, 408654 <wcrtomb@plt+0x5824>
  408638:	mov	x0, xzr
  40863c:	b	408668 <wcrtomb@plt+0x5838>
  408640:	cbz	x22, 408674 <wcrtomb@plt+0x5844>
  408644:	ldrb	w8, [x23, #64]
  408648:	tbnz	w8, #2, 408754 <wcrtomb@plt+0x5924>
  40864c:	mov	w0, wzr
  408650:	b	4086ec <wcrtomb@plt+0x58bc>
  408654:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408658:	ldrb	w1, [x8, #1128]
  40865c:	add	x0, x21, x22
  408660:	sub	x2, x24, x22
  408664:	bl	402cb0 <memchr@plt>
  408668:	sub	x8, x0, x21
  40866c:	cmp	x0, #0x0
  408670:	csel	x22, x24, x8, eq  // eq = none
  408674:	cbz	w20, 4086e8 <wcrtomb@plt+0x58b8>
  408678:	ldr	x8, [x19, #8]
  40867c:	cbnz	x8, 4086a8 <wcrtomb@plt+0x5878>
  408680:	mov	w0, #0x1                   	// #1
  408684:	mov	w1, #0x8                   	// #8
  408688:	mov	w20, #0x1                   	// #1
  40868c:	bl	411a14 <wcrtomb@plt+0xebe4>
  408690:	str	x0, [x19, #8]
  408694:	mov	w0, #0x1                   	// #1
  408698:	mov	w1, #0x8                   	// #8
  40869c:	bl	411a14 <wcrtomb@plt+0xebe4>
  4086a0:	str	x0, [x19, #16]
  4086a4:	str	x20, [x19]
  4086a8:	ldr	x8, [x19, #8]
  4086ac:	str	x22, [x8]
  4086b0:	ldr	x9, [x19, #16]
  4086b4:	str	x22, [x9]
  4086b8:	ldr	x10, [x19]
  4086bc:	cmp	x10, #0x2
  4086c0:	b.cc	4086e8 <wcrtomb@plt+0x58b8>  // b.lo, b.ul, b.last
  4086c4:	mov	w10, #0x1                   	// #1
  4086c8:	mov	x11, #0xffffffffffffffff    	// #-1
  4086cc:	lsl	x12, x10, #3
  4086d0:	str	x11, [x9, x12]
  4086d4:	str	x11, [x8, x12]
  4086d8:	ldr	x12, [x19]
  4086dc:	add	x10, x10, #0x1
  4086e0:	cmp	x10, x12
  4086e4:	b.cc	4086cc <wcrtomb@plt+0x589c>  // b.lo, b.ul, b.last
  4086e8:	mov	w0, #0x1                   	// #1
  4086ec:	ldp	x20, x19, [sp, #96]
  4086f0:	ldp	x22, x21, [sp, #80]
  4086f4:	ldp	x24, x23, [sp, #64]
  4086f8:	ldp	x26, x25, [sp, #48]
  4086fc:	ldp	x28, x27, [sp, #32]
  408700:	ldp	x29, x30, [sp, #16]
  408704:	add	sp, sp, #0x70
  408708:	ret
  40870c:	cbz	x22, 408788 <wcrtomb@plt+0x5958>
  408710:	ldrb	w8, [x23, #64]
  408714:	tbz	w8, #2, 408728 <wcrtomb@plt+0x58f8>
  408718:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  40871c:	ldrb	w1, [x26, #1128]
  408720:	cmp	w1, #0xa
  408724:	b.ne	40881c <wcrtomb@plt+0x59ec>  // b.any
  408728:	cmp	w20, #0x0
  40872c:	sub	x4, x24, x22
  408730:	csel	x5, x19, xzr, ne  // ne = any
  408734:	mov	x0, x23
  408738:	mov	x1, x21
  40873c:	mov	x2, x24
  408740:	mov	x3, x22
  408744:	bl	413294 <_obstack_memory_used@@Base+0x1410>
  408748:	mvn	w8, w0
  40874c:	lsr	w0, w8, #31
  408750:	b	4086ec <wcrtomb@plt+0x58bc>
  408754:	add	x8, x22, x21
  408758:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  40875c:	ldurb	w8, [x8, #-1]
  408760:	ldrb	w1, [x9, #1128]
  408764:	cmp	w8, w1
  408768:	b.eq	408674 <wcrtomb@plt+0x5844>  // b.none
  40876c:	add	x0, x21, x22
  408770:	sub	x2, x24, x22
  408774:	bl	402cb0 <memchr@plt>
  408778:	cbz	x0, 4086ec <wcrtomb@plt+0x58bc>
  40877c:	sub	x8, x0, x21
  408780:	add	x22, x8, #0x1
  408784:	b	408674 <wcrtomb@plt+0x5844>
  408788:	ldr	x0, [x23, #80]
  40878c:	bl	40a8f0 <wcrtomb@plt+0x7ac0>
  408790:	mov	x25, x0
  408794:	cbz	x0, 4087bc <wcrtomb@plt+0x598c>
  408798:	add	x2, x21, x24
  40879c:	mov	w3, #0x1                   	// #1
  4087a0:	mov	x0, x25
  4087a4:	mov	x1, x21
  4087a8:	mov	x4, xzr
  4087ac:	mov	x5, xzr
  4087b0:	mov	w26, #0x1                   	// #1
  4087b4:	bl	40a8d4 <wcrtomb@plt+0x7aa4>
  4087b8:	cbz	x0, 408814 <wcrtomb@plt+0x59e4>
  4087bc:	cbnz	w20, 4087c8 <wcrtomb@plt+0x5998>
  4087c0:	ldrb	w8, [x23, #64]
  4087c4:	tbnz	w8, #2, 4087dc <wcrtomb@plt+0x59ac>
  4087c8:	cbnz	x25, 408810 <wcrtomb@plt+0x59e0>
  4087cc:	ldr	x0, [x23, #80]
  4087d0:	bl	40a8f8 <wcrtomb@plt+0x7ac8>
  4087d4:	mov	w8, w0
  4087d8:	tbz	w8, #0, 408810 <wcrtomb@plt+0x59e0>
  4087dc:	sturb	wzr, [x29, #-4]
  4087e0:	ldr	x0, [x23, #80]
  4087e4:	add	x2, x21, x24
  4087e8:	sub	x5, x29, #0x4
  4087ec:	mov	w3, #0x1                   	// #1
  4087f0:	mov	x1, x21
  4087f4:	mov	x4, xzr
  4087f8:	mov	w26, #0x1                   	// #1
  4087fc:	bl	40a8d4 <wcrtomb@plt+0x7aa4>
  408800:	cbz	x0, 40880c <wcrtomb@plt+0x59dc>
  408804:	cbz	w20, 4088e8 <wcrtomb@plt+0x5ab8>
  408808:	mov	w26, wzr
  40880c:	cbnz	w26, 408814 <wcrtomb@plt+0x59e4>
  408810:	mov	w26, wzr
  408814:	cbnz	w26, 4086ec <wcrtomb@plt+0x58bc>
  408818:	b	408710 <wcrtomb@plt+0x58e0>
  40881c:	mov	x25, x21
  408820:	cbz	x22, 408838 <wcrtomb@plt+0x5a08>
  408824:	mov	x0, x21
  408828:	mov	x2, x22
  40882c:	bl	402c30 <memrchr@plt>
  408830:	cmp	x0, #0x0
  408834:	csinc	x25, x21, x0, eq  // eq = none
  408838:	cmp	w20, #0x0
  40883c:	add	x27, x21, x22
  408840:	add	x24, x21, x24
  408844:	csel	x22, x19, xzr, ne  // ne = any
  408848:	ldrb	w1, [x26, #1128]
  40884c:	sub	x2, x24, x25
  408850:	mov	x0, x25
  408854:	bl	402cb0 <memchr@plt>
  408858:	cmp	x0, #0x0
  40885c:	csel	x28, x24, x0, eq  // eq = none
  408860:	sub	x3, x27, x25
  408864:	sub	x2, x28, x25
  408868:	sub	x4, x28, x27
  40886c:	mov	x0, x23
  408870:	mov	x1, x25
  408874:	mov	x5, x22
  408878:	bl	413294 <_obstack_memory_used@@Base+0x1410>
  40887c:	tbz	w0, #31, 408894 <wcrtomb@plt+0x5a64>
  408880:	add	x25, x28, #0x1
  408884:	cmp	x28, x24
  408888:	mov	x27, x25
  40888c:	b.ne	408848 <wcrtomb@plt+0x5a18>  // b.any
  408890:	b	408748 <wcrtomb@plt+0x5918>
  408894:	sub	x8, x25, x21
  408898:	add	w0, w0, w8
  40889c:	cbz	w20, 408748 <wcrtomb@plt+0x5918>
  4088a0:	ldr	x9, [x19]
  4088a4:	cbz	x9, 408748 <wcrtomb@plt+0x5918>
  4088a8:	ldp	x9, x10, [x19, #8]
  4088ac:	mov	x11, xzr
  4088b0:	b	4088c4 <wcrtomb@plt+0x5a94>
  4088b4:	ldr	x12, [x19]
  4088b8:	add	x11, x11, #0x1
  4088bc:	cmp	x11, x12
  4088c0:	b.cs	408748 <wcrtomb@plt+0x5918>  // b.hs, b.nlast
  4088c4:	ldr	x12, [x9, x11, lsl #3]
  4088c8:	tbnz	x12, #63, 4088d4 <wcrtomb@plt+0x5aa4>
  4088cc:	add	x12, x12, x8
  4088d0:	str	x12, [x9, x11, lsl #3]
  4088d4:	ldr	x12, [x10, x11, lsl #3]
  4088d8:	tbnz	x12, #63, 4088b4 <wcrtomb@plt+0x5a84>
  4088dc:	add	x12, x12, x8
  4088e0:	str	x12, [x10, x11, lsl #3]
  4088e4:	b	4088b4 <wcrtomb@plt+0x5a84>
  4088e8:	ldrb	w8, [x23, #64]
  4088ec:	tbz	w8, #2, 408808 <wcrtomb@plt+0x59d8>
  4088f0:	ldurb	w8, [x29, #-4]
  4088f4:	cbnz	w8, 408808 <wcrtomb@plt+0x59d8>
  4088f8:	mov	w26, #0x1                   	// #1
  4088fc:	mov	w0, #0x1                   	// #1
  408900:	cbnz	w26, 408814 <wcrtomb@plt+0x59e4>
  408904:	b	408810 <wcrtomb@plt+0x59e0>
  408908:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40890c:	add	x1, x1, #0xb6c
  408910:	mov	w2, #0x5                   	// #5
  408914:	mov	x0, xzr
  408918:	bl	402d10 <dcgettext@plt>
  40891c:	bl	40915c <wcrtomb@plt+0x632c>
  408920:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408924:	add	x1, x1, #0xbc5
  408928:	mov	w2, #0x5                   	// #5
  40892c:	mov	x0, xzr
  408930:	bl	402d10 <dcgettext@plt>
  408934:	bl	402f4c <wcrtomb@plt+0x11c>
  408938:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40893c:	str	x0, [x8, #1920]
  408940:	ret
  408944:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408948:	str	xzr, [x8, #1920]
  40894c:	ret
  408950:	sub	sp, sp, #0x80
  408954:	stp	x20, x19, [sp, #112]
  408958:	mov	w20, w0
  40895c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408960:	add	x0, x0, #0xf95
  408964:	stp	x29, x30, [sp, #32]
  408968:	stp	x28, x27, [sp, #48]
  40896c:	stp	x26, x25, [sp, #64]
  408970:	stp	x24, x23, [sp, #80]
  408974:	stp	x22, x21, [sp, #96]
  408978:	add	x29, sp, #0x20
  40897c:	mov	x19, x1
  408980:	bl	402dc0 <getenv@plt>
  408984:	ldr	x8, [x19]
  408988:	mov	x21, x0
  40898c:	mov	x0, x8
  408990:	bl	40f920 <wcrtomb@plt+0xcaf0>
  408994:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408998:	add	x1, x1, #0x13b
  40899c:	mov	w0, #0x6                   	// #6
  4089a0:	bl	402e10 <setlocale@plt>
  4089a4:	bl	408234 <wcrtomb@plt+0x5404>
  4089a8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x2017c>
  4089ac:	add	x0, x0, #0x8fc
  4089b0:	bl	40f6b0 <wcrtomb@plt+0xc880>
  4089b4:	adrp	x0, 408000 <wcrtomb@plt+0x51d0>
  4089b8:	add	x0, x0, #0xdc8
  4089bc:	bl	41f018 <_obstack_memory_used@@Base+0xd194>
  4089c0:	adrp	x22, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4089c4:	add	x22, x22, #0xfc9
  4089c8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4089cc:	add	x1, x1, #0xf9a
  4089d0:	mov	x0, x22
  4089d4:	bl	402960 <bindtextdomain@plt>
  4089d8:	mov	x0, x22
  4089dc:	bl	402b70 <textdomain@plt>
  4089e0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4089e4:	add	x0, x0, #0xb5c
  4089e8:	bl	402dc0 <getenv@plt>
  4089ec:	cmp	x0, #0x0
  4089f0:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4089f4:	cset	w8, ne  // ne = any
  4089f8:	str	w8, [x9, #2296]
  4089fc:	cbz	x21, 408a20 <wcrtomb@plt+0x5bf0>
  408a00:	mov	x0, x21
  408a04:	bl	402880 <atoi@plt>
  408a08:	cmp	w0, #0x2
  408a0c:	b.cc	408a20 <wcrtomb@plt+0x5bf0>  // b.lo, b.ul, b.last
  408a10:	sxtw	x8, w0
  408a14:	sub	x8, x8, #0x1
  408a18:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  408a1c:	str	x8, [x9, #1152]
  408a20:	adrp	x21, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408a24:	adrp	x22, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408a28:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408a2c:	add	x21, x21, #0xfac
  408a30:	add	x22, x22, #0xc90
  408a34:	mov	w27, #0x1                   	// #1
  408a38:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  408a3c:	add	x24, x24, #0xc10
  408a40:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  408a44:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  408a48:	mov	w0, w20
  408a4c:	mov	x1, x19
  408a50:	mov	x2, x21
  408a54:	mov	x3, x22
  408a58:	mov	x4, xzr
  408a5c:	bl	402b80 <getopt_long@plt>
  408a60:	add	w8, w0, #0x1
  408a64:	cmp	w8, #0x7b
  408a68:	b.hi	408a84 <wcrtomb@plt+0x5c54>  // b.pmore
  408a6c:	adr	x9, 408a7c <wcrtomb@plt+0x5c4c>
  408a70:	ldrb	w10, [x24, x8]
  408a74:	add	x9, x9, x10, lsl #2
  408a78:	br	x9
  408a7c:	str	w27, [x26, #1880]
  408a80:	b	408a48 <wcrtomb@plt+0x5c18>
  408a84:	cmp	w0, #0x100
  408a88:	b.eq	408ab4 <wcrtomb@plt+0x5c84>  // b.none
  408a8c:	cmp	w0, #0x101
  408a90:	b.ne	408cc8 <wcrtomb@plt+0x5e98>  // b.any
  408a94:	strb	w27, [x25, #1904]
  408a98:	b	408a48 <wcrtomb@plt+0x5c18>
  408a9c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408aa0:	strb	w27, [x8, #1888]
  408aa4:	b	408a48 <wcrtomb@plt+0x5c18>
  408aa8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408aac:	strb	w27, [x8, #1884]
  408ab0:	b	408a48 <wcrtomb@plt+0x5c18>
  408ab4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408ab8:	strb	w27, [x8, #1900]
  408abc:	b	408a48 <wcrtomb@plt+0x5c18>
  408ac0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408ac4:	mov	x28, x24
  408ac8:	ldr	x24, [x8, #1288]
  408acc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408ad0:	strb	w27, [x8, #1892]
  408ad4:	cbz	x24, 408bd4 <wcrtomb@plt+0x5da4>
  408ad8:	mov	w1, #0x2a                  	// #42
  408adc:	mov	x0, x24
  408ae0:	bl	402c10 <strchr@plt>
  408ae4:	cbz	x0, 408bf0 <wcrtomb@plt+0x5dc0>
  408ae8:	mov	x0, x24
  408aec:	b	408bdc <wcrtomb@plt+0x5dac>
  408af0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408af4:	strb	wzr, [x8, #1128]
  408af8:	b	408a48 <wcrtomb@plt+0x5c18>
  408afc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408b00:	mov	x28, x25
  408b04:	ldr	x25, [x8, #1288]
  408b08:	mov	x27, x26
  408b0c:	mov	x26, x22
  408b10:	mov	x22, x21
  408b14:	mov	x21, x24
  408b18:	ldr	x24, [x23, #1928]
  408b1c:	mov	x0, x25
  408b20:	bl	402750 <strlen@plt>
  408b24:	mov	x2, x0
  408b28:	mov	x0, x24
  408b2c:	mov	x1, x25
  408b30:	mov	x24, x21
  408b34:	mov	x21, x22
  408b38:	mov	x22, x26
  408b3c:	mov	x26, x27
  408b40:	mov	x25, x28
  408b44:	mov	w27, #0x1                   	// #1
  408b48:	bl	4033e8 <wcrtomb@plt+0x5b8>
  408b4c:	str	x0, [x23, #1928]
  408b50:	b	408a48 <wcrtomb@plt+0x5c18>
  408b54:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408b58:	ldr	x0, [x8, #1288]
  408b5c:	bl	402880 <atoi@plt>
  408b60:	sxtw	x8, w0
  408b64:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  408b68:	str	x8, [x9, #1152]
  408b6c:	b	408a48 <wcrtomb@plt+0x5c18>
  408b70:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408b74:	mov	w9, #0x2                   	// #2
  408b78:	str	w9, [x8, #2296]
  408b7c:	b	408a48 <wcrtomb@plt+0x5c18>
  408b80:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408b84:	strb	w27, [x8, #1896]
  408b88:	b	408a48 <wcrtomb@plt+0x5c18>
  408b8c:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408b90:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408b94:	add	x9, x9, #0xfbf
  408b98:	str	x9, [x8, #1136]
  408b9c:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408ba0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408ba4:	add	x9, x9, #0xfc2
  408ba8:	str	x9, [x8, #1144]
  408bac:	b	408a48 <wcrtomb@plt+0x5c18>
  408bb0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408bb4:	ldr	x0, [x23, #1928]
  408bb8:	ldr	x1, [x8, #1288]
  408bbc:	bl	403ee0 <wcrtomb@plt+0x10b0>
  408bc0:	str	x0, [x23, #1928]
  408bc4:	b	408a48 <wcrtomb@plt+0x5c18>
  408bc8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408bcc:	strb	w27, [x8, #1892]
  408bd0:	b	408a48 <wcrtomb@plt+0x5c18>
  408bd4:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408bd8:	add	x0, x0, #0xb29
  408bdc:	bl	411a84 <wcrtomb@plt+0xec54>
  408be0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408be4:	str	x0, [x8, #1912]
  408be8:	mov	x24, x28
  408bec:	b	408a48 <wcrtomb@plt+0x5c18>
  408bf0:	mov	x0, x24
  408bf4:	bl	402750 <strlen@plt>
  408bf8:	add	x0, x0, #0x2
  408bfc:	bl	4119fc <wcrtomb@plt+0xebcc>
  408c00:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408c04:	ldr	x1, [x8, #1288]
  408c08:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408c0c:	str	x0, [x8, #1912]
  408c10:	mov	w8, #0x2a                  	// #42
  408c14:	strb	w8, [x0], #1
  408c18:	bl	402c80 <strcpy@plt>
  408c1c:	mov	x24, x28
  408c20:	b	408a48 <wcrtomb@plt+0x5c18>
  408c24:	ldr	x21, [x23, #1928]
  408c28:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  408c2c:	cbnz	x21, 408c64 <wcrtomb@plt+0x5e34>
  408c30:	ldrsw	x8, [x22, #1296]
  408c34:	cmp	w8, w20
  408c38:	b.ge	408cc8 <wcrtomb@plt+0x5e98>  // b.tcont
  408c3c:	add	w9, w8, #0x1
  408c40:	str	w9, [x22, #1296]
  408c44:	ldr	x20, [x19, x8, lsl #3]
  408c48:	mov	x0, x20
  408c4c:	bl	402750 <strlen@plt>
  408c50:	mov	x2, x0
  408c54:	mov	x0, x21
  408c58:	mov	x1, x20
  408c5c:	bl	4033e8 <wcrtomb@plt+0x5b8>
  408c60:	str	x0, [x23, #1928]
  408c64:	ldr	x0, [x23, #1928]
  408c68:	bl	403f94 <wcrtomb@plt+0x1164>
  408c6c:	ldrb	w8, [x25, #1904]
  408c70:	cbz	w8, 408c7c <wcrtomb@plt+0x5e4c>
  408c74:	ldr	x0, [x23, #1928]
  408c78:	bl	4057d8 <wcrtomb@plt+0x29a8>
  408c7c:	ldrsw	x8, [x22, #1296]
  408c80:	ldr	x0, [x23, #1928]
  408c84:	add	x1, x19, x8, lsl #3
  408c88:	bl	405c28 <wcrtomb@plt+0x2df8>
  408c8c:	ldr	x8, [x23, #1928]
  408c90:	mov	w19, w0
  408c94:	mov	x0, x8
  408c98:	bl	40416c <wcrtomb@plt+0x133c>
  408c9c:	mov	x0, xzr
  408ca0:	bl	40982c <wcrtomb@plt+0x69fc>
  408ca4:	mov	w0, w19
  408ca8:	ldp	x20, x19, [sp, #112]
  408cac:	ldp	x22, x21, [sp, #96]
  408cb0:	ldp	x24, x23, [sp, #80]
  408cb4:	ldp	x26, x25, [sp, #64]
  408cb8:	ldp	x28, x27, [sp, #48]
  408cbc:	ldp	x29, x30, [sp, #32]
  408cc0:	add	sp, sp, #0x80
  408cc4:	ret
  408cc8:	mov	w0, #0x1                   	// #1
  408ccc:	bl	408eac <wcrtomb@plt+0x607c>
  408cd0:	mov	w0, wzr
  408cd4:	bl	408eac <wcrtomb@plt+0x607c>
  408cd8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408cdc:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  408ce0:	adrp	x10, 432000 <_obstack_memory_used@@Base+0x2017c>
  408ce4:	ldr	x19, [x8, #1304]
  408ce8:	ldr	x20, [x9, #1968]
  408cec:	ldr	x21, [x10, #1160]
  408cf0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408cf4:	add	x1, x1, #0xfcd
  408cf8:	mov	w2, #0x5                   	// #5
  408cfc:	mov	x0, xzr
  408d00:	bl	402d10 <dcgettext@plt>
  408d04:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408d08:	mov	x22, x0
  408d0c:	add	x1, x1, #0xfda
  408d10:	mov	w2, #0x5                   	// #5
  408d14:	mov	x0, xzr
  408d18:	bl	402d10 <dcgettext@plt>
  408d1c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408d20:	mov	x23, x0
  408d24:	add	x1, x1, #0xfe3
  408d28:	mov	w2, #0x5                   	// #5
  408d2c:	mov	x0, xzr
  408d30:	bl	402d10 <dcgettext@plt>
  408d34:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408d38:	mov	x24, x0
  408d3c:	add	x1, x1, #0xfef
  408d40:	mov	w2, #0x5                   	// #5
  408d44:	mov	x0, xzr
  408d48:	bl	402d10 <dcgettext@plt>
  408d4c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408d50:	mov	x25, x0
  408d54:	add	x1, x1, #0xffd
  408d58:	mov	w2, #0x5                   	// #5
  408d5c:	mov	x0, xzr
  408d60:	bl	402d10 <dcgettext@plt>
  408d64:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408d68:	mov	x26, x0
  408d6c:	add	x1, x1, #0xa
  408d70:	mov	w2, #0x5                   	// #5
  408d74:	mov	x0, xzr
  408d78:	bl	402d10 <dcgettext@plt>
  408d7c:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xd17c>
  408d80:	stp	x0, xzr, [sp, #8]
  408d84:	add	x2, x2, #0xfc5
  408d88:	mov	x0, x19
  408d8c:	mov	x1, x20
  408d90:	mov	x3, x21
  408d94:	mov	x4, x22
  408d98:	mov	x5, x23
  408d9c:	mov	x6, x24
  408da0:	mov	x7, x25
  408da4:	str	x26, [sp]
  408da8:	bl	411794 <wcrtomb@plt+0xe964>
  408dac:	bl	408de8 <wcrtomb@plt+0x5fb8>
  408db0:	mov	w0, wzr
  408db4:	bl	408e20 <wcrtomb@plt+0x5ff0>
  408db8:	mov	x0, xzr
  408dbc:	bl	40982c <wcrtomb@plt+0x69fc>
  408dc0:	mov	w0, wzr
  408dc4:	bl	402780 <exit@plt>
  408dc8:	stp	x29, x30, [sp, #-16]!
  408dcc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408dd0:	ldr	x0, [x8, #1920]
  408dd4:	mov	x29, sp
  408dd8:	cbz	x0, 408de0 <wcrtomb@plt+0x5fb0>
  408ddc:	bl	402dd0 <unlink@plt>
  408de0:	ldp	x29, x30, [sp], #16
  408de4:	ret
  408de8:	stp	x29, x30, [sp, #-16]!
  408dec:	mov	w0, #0xa                   	// #10
  408df0:	mov	x29, sp
  408df4:	bl	4029f0 <putchar_unlocked@plt>
  408df8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408dfc:	add	x1, x1, #0x17
  408e00:	mov	w2, #0x5                   	// #5
  408e04:	mov	x0, xzr
  408e08:	bl	402d10 <dcgettext@plt>
  408e0c:	bl	402b50 <puts@plt>
  408e10:	mov	w0, #0xa                   	// #10
  408e14:	bl	4029f0 <putchar_unlocked@plt>
  408e18:	ldp	x29, x30, [sp], #16
  408e1c:	ret
  408e20:	stp	x29, x30, [sp, #-32]!
  408e24:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408e28:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  408e2c:	add	x8, x8, #0x500
  408e30:	add	x9, x9, #0x518
  408e34:	cmp	w0, #0x0
  408e38:	stp	x20, x19, [sp, #16]
  408e3c:	csel	x8, x8, x9, ne  // ne = any
  408e40:	ldr	x19, [x8]
  408e44:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408e48:	mov	w20, w0
  408e4c:	add	x1, x1, #0x4b
  408e50:	mov	w2, #0x5                   	// #5
  408e54:	mov	x0, xzr
  408e58:	mov	x29, sp
  408e5c:	bl	402d10 <dcgettext@plt>
  408e60:	mov	x2, x0
  408e64:	mov	w1, #0x1                   	// #1
  408e68:	mov	x0, x19
  408e6c:	bl	402b90 <__fprintf_chk@plt>
  408e70:	cbnz	w20, 408ea0 <wcrtomb@plt+0x6070>
  408e74:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408e78:	add	x1, x1, #0xc5
  408e7c:	mov	w2, #0x5                   	// #5
  408e80:	mov	x0, xzr
  408e84:	bl	402d10 <dcgettext@plt>
  408e88:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xe17c>
  408e8c:	mov	x2, x0
  408e90:	add	x3, x3, #0xe3
  408e94:	mov	w1, #0x1                   	// #1
  408e98:	mov	x0, x19
  408e9c:	bl	402b90 <__fprintf_chk@plt>
  408ea0:	ldp	x20, x19, [sp, #16]
  408ea4:	ldp	x29, x30, [sp], #32
  408ea8:	ret
  408eac:	stp	x29, x30, [sp, #-32]!
  408eb0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408eb4:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  408eb8:	add	x8, x8, #0x500
  408ebc:	add	x9, x9, #0x518
  408ec0:	cmp	w0, #0x0
  408ec4:	stp	x20, x19, [sp, #16]
  408ec8:	csel	x8, x9, x8, eq  // eq = none
  408ecc:	ldr	x20, [x8]
  408ed0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408ed4:	mov	w19, w0
  408ed8:	add	x1, x1, #0xf3
  408edc:	mov	w2, #0x5                   	// #5
  408ee0:	mov	x0, xzr
  408ee4:	mov	x29, sp
  408ee8:	bl	402d10 <dcgettext@plt>
  408eec:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  408ef0:	ldr	x3, [x8, #1968]
  408ef4:	mov	x2, x0
  408ef8:	mov	w1, #0x1                   	// #1
  408efc:	mov	x0, x20
  408f00:	bl	402b90 <__fprintf_chk@plt>
  408f04:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408f08:	add	x1, x1, #0x13c
  408f0c:	mov	w2, #0x5                   	// #5
  408f10:	mov	x0, xzr
  408f14:	bl	402d10 <dcgettext@plt>
  408f18:	mov	x2, x0
  408f1c:	mov	w1, #0x1                   	// #1
  408f20:	mov	x0, x20
  408f24:	bl	402b90 <__fprintf_chk@plt>
  408f28:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408f2c:	add	x1, x1, #0x193
  408f30:	mov	w2, #0x5                   	// #5
  408f34:	mov	x0, xzr
  408f38:	bl	402d10 <dcgettext@plt>
  408f3c:	mov	x2, x0
  408f40:	mov	w1, #0x1                   	// #1
  408f44:	mov	x0, x20
  408f48:	bl	402b90 <__fprintf_chk@plt>
  408f4c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408f50:	add	x1, x1, #0x1ce
  408f54:	mov	w2, #0x5                   	// #5
  408f58:	mov	x0, xzr
  408f5c:	bl	402d10 <dcgettext@plt>
  408f60:	mov	x2, x0
  408f64:	mov	w1, #0x1                   	// #1
  408f68:	mov	x0, x20
  408f6c:	bl	402b90 <__fprintf_chk@plt>
  408f70:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408f74:	add	x1, x1, #0x22f
  408f78:	mov	w2, #0x5                   	// #5
  408f7c:	mov	x0, xzr
  408f80:	bl	402d10 <dcgettext@plt>
  408f84:	mov	x2, x0
  408f88:	mov	w1, #0x1                   	// #1
  408f8c:	mov	x0, x20
  408f90:	bl	402b90 <__fprintf_chk@plt>
  408f94:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408f98:	add	x1, x1, #0x2a5
  408f9c:	mov	w2, #0x5                   	// #5
  408fa0:	mov	x0, xzr
  408fa4:	bl	402d10 <dcgettext@plt>
  408fa8:	mov	x2, x0
  408fac:	mov	w1, #0x1                   	// #1
  408fb0:	mov	x0, x20
  408fb4:	bl	402b90 <__fprintf_chk@plt>
  408fb8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408fbc:	add	x1, x1, #0x2f4
  408fc0:	mov	w2, #0x5                   	// #5
  408fc4:	mov	x0, xzr
  408fc8:	bl	402d10 <dcgettext@plt>
  408fcc:	mov	x2, x0
  408fd0:	mov	w1, #0x1                   	// #1
  408fd4:	mov	x0, x20
  408fd8:	bl	402b90 <__fprintf_chk@plt>
  408fdc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  408fe0:	add	x1, x1, #0x35e
  408fe4:	mov	w2, #0x5                   	// #5
  408fe8:	mov	x0, xzr
  408fec:	bl	402d10 <dcgettext@plt>
  408ff0:	mov	x2, x0
  408ff4:	mov	w1, #0x1                   	// #1
  408ff8:	mov	x0, x20
  408ffc:	bl	402b90 <__fprintf_chk@plt>
  409000:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409004:	add	x1, x1, #0x3c1
  409008:	mov	w2, #0x5                   	// #5
  40900c:	mov	x0, xzr
  409010:	bl	402d10 <dcgettext@plt>
  409014:	mov	x2, x0
  409018:	mov	w1, #0x1                   	// #1
  40901c:	mov	x0, x20
  409020:	bl	402b90 <__fprintf_chk@plt>
  409024:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409028:	add	x1, x1, #0x3f9
  40902c:	mov	w2, #0x5                   	// #5
  409030:	mov	x0, xzr
  409034:	bl	402d10 <dcgettext@plt>
  409038:	mov	x2, x0
  40903c:	mov	w1, #0x1                   	// #1
  409040:	mov	x0, x20
  409044:	bl	402b90 <__fprintf_chk@plt>
  409048:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40904c:	add	x1, x1, #0x487
  409050:	mov	w2, #0x5                   	// #5
  409054:	mov	x0, xzr
  409058:	bl	402d10 <dcgettext@plt>
  40905c:	mov	x2, x0
  409060:	mov	w1, #0x1                   	// #1
  409064:	mov	x0, x20
  409068:	bl	402b90 <__fprintf_chk@plt>
  40906c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409070:	add	x1, x1, #0x507
  409074:	mov	w2, #0x5                   	// #5
  409078:	mov	x0, xzr
  40907c:	bl	402d10 <dcgettext@plt>
  409080:	mov	x2, x0
  409084:	mov	w1, #0x1                   	// #1
  409088:	mov	x0, x20
  40908c:	bl	402b90 <__fprintf_chk@plt>
  409090:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409094:	add	x1, x1, #0x55b
  409098:	mov	w2, #0x5                   	// #5
  40909c:	mov	x0, xzr
  4090a0:	bl	402d10 <dcgettext@plt>
  4090a4:	mov	x2, x0
  4090a8:	mov	w1, #0x1                   	// #1
  4090ac:	mov	x0, x20
  4090b0:	bl	402b90 <__fprintf_chk@plt>
  4090b4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  4090b8:	add	x1, x1, #0x5eb
  4090bc:	mov	w2, #0x5                   	// #5
  4090c0:	mov	x0, xzr
  4090c4:	bl	402d10 <dcgettext@plt>
  4090c8:	mov	x2, x0
  4090cc:	mov	w1, #0x1                   	// #1
  4090d0:	mov	x0, x20
  4090d4:	bl	402b90 <__fprintf_chk@plt>
  4090d8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  4090dc:	add	x1, x1, #0x630
  4090e0:	mov	w2, #0x5                   	// #5
  4090e4:	mov	x0, xzr
  4090e8:	bl	402d10 <dcgettext@plt>
  4090ec:	mov	x2, x0
  4090f0:	mov	w1, #0x1                   	// #1
  4090f4:	mov	x0, x20
  4090f8:	bl	402b90 <__fprintf_chk@plt>
  4090fc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409100:	add	x1, x1, #0x65d
  409104:	mov	w2, #0x5                   	// #5
  409108:	mov	x0, xzr
  40910c:	bl	402d10 <dcgettext@plt>
  409110:	mov	x2, x0
  409114:	mov	w1, #0x1                   	// #1
  409118:	mov	x0, x20
  40911c:	bl	402b90 <__fprintf_chk@plt>
  409120:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409124:	add	x1, x1, #0x693
  409128:	mov	w2, #0x5                   	// #5
  40912c:	mov	x0, xzr
  409130:	bl	402d10 <dcgettext@plt>
  409134:	mov	x2, x0
  409138:	mov	w1, #0x1                   	// #1
  40913c:	mov	x0, x20
  409140:	bl	402b90 <__fprintf_chk@plt>
  409144:	mov	w0, w19
  409148:	bl	408e20 <wcrtomb@plt+0x5ff0>
  40914c:	mov	x0, xzr
  409150:	bl	40982c <wcrtomb@plt+0x69fc>
  409154:	mov	w0, w19
  409158:	bl	402780 <exit@plt>
  40915c:	sub	sp, sp, #0x150
  409160:	stp	x29, x30, [sp, #256]
  409164:	stp	x24, x23, [sp, #288]
  409168:	add	x29, sp, #0x100
  40916c:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  409170:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  409174:	stp	x20, x19, [sp, #320]
  409178:	mov	x19, x0
  40917c:	stp	x3, x4, [x29, #-104]
  409180:	ldr	x0, [x23, #1280]
  409184:	ldr	x3, [x8, #1968]
  409188:	stp	x1, x2, [x29, #-120]
  40918c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xe17c>
  409190:	add	x2, x2, #0x78e
  409194:	mov	w1, #0x1                   	// #1
  409198:	str	x28, [sp, #272]
  40919c:	stp	x22, x21, [sp, #304]
  4091a0:	stp	x5, x6, [x29, #-88]
  4091a4:	stur	x7, [x29, #-72]
  4091a8:	stp	q0, q1, [sp]
  4091ac:	stp	q2, q3, [sp, #32]
  4091b0:	stp	q4, q5, [sp, #64]
  4091b4:	stp	q6, q7, [sp, #96]
  4091b8:	bl	402b90 <__fprintf_chk@plt>
  4091bc:	sub	x9, x29, #0x78
  4091c0:	mov	x10, sp
  4091c4:	mov	x11, #0xffffffffffffffc8    	// #-56
  4091c8:	add	x8, x29, #0x50
  4091cc:	movk	x11, #0xff80, lsl #32
  4091d0:	add	x9, x9, #0x38
  4091d4:	add	x10, x10, #0x80
  4091d8:	stp	x8, x9, [x29, #-64]
  4091dc:	stp	x10, x11, [x29, #-48]
  4091e0:	ldp	q0, q1, [x29, #-64]
  4091e4:	ldr	x0, [x23, #1280]
  4091e8:	sub	x3, x29, #0x20
  4091ec:	mov	w1, #0x1                   	// #1
  4091f0:	mov	x2, x19
  4091f4:	stp	q0, q1, [x29, #-32]
  4091f8:	bl	402a00 <__vfprintf_chk@plt>
  4091fc:	ldr	x1, [x23, #1280]
  409200:	mov	w0, #0xa                   	// #10
  409204:	bl	402850 <putc_unlocked@plt>
  409208:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  40920c:	ldr	x8, [x24, #1936]
  409210:	cbz	x8, 4092a0 <wcrtomb@plt+0x6470>
  409214:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xe17c>
  409218:	add	x19, x19, #0x793
  40921c:	ldrb	w9, [x8, #24]
  409220:	tbz	w9, #0, 409290 <wcrtomb@plt+0x6460>
  409224:	ldr	x0, [x8]
  409228:	bl	402870 <fclose@plt>
  40922c:	bl	402da0 <__errno_location@plt>
  409230:	str	wzr, [x0]
  409234:	ldr	x8, [x24, #1936]
  409238:	mov	x20, x0
  40923c:	ldr	x0, [x8, #8]
  409240:	bl	402dd0 <unlink@plt>
  409244:	ldr	w8, [x20]
  409248:	cbz	w8, 409290 <wcrtomb@plt+0x6460>
  40924c:	ldr	x21, [x23, #1280]
  409250:	mov	w2, #0x5                   	// #5
  409254:	mov	x0, xzr
  409258:	mov	x1, x19
  40925c:	bl	402d10 <dcgettext@plt>
  409260:	ldr	x8, [x24, #1936]
  409264:	ldr	x22, [x8, #8]
  409268:	ldr	w8, [x20]
  40926c:	mov	x20, x0
  409270:	mov	w0, w8
  409274:	bl	402ac0 <strerror@plt>
  409278:	mov	x4, x0
  40927c:	mov	w1, #0x1                   	// #1
  409280:	mov	x0, x21
  409284:	mov	x2, x20
  409288:	mov	x3, x22
  40928c:	bl	402b90 <__fprintf_chk@plt>
  409290:	ldr	x8, [x24, #1936]
  409294:	ldr	x8, [x8, #16]
  409298:	str	x8, [x24, #1936]
  40929c:	cbnz	x8, 40921c <wcrtomb@plt+0x63ec>
  4092a0:	mov	w0, #0x4                   	// #4
  4092a4:	bl	402780 <exit@plt>
  4092a8:	stp	x29, x30, [sp, #-48]!
  4092ac:	str	x21, [sp, #16]
  4092b0:	stp	x20, x19, [sp, #32]
  4092b4:	mov	x29, sp
  4092b8:	mov	w21, w2
  4092bc:	mov	x19, x0
  4092c0:	bl	4028b0 <fopen@plt>
  4092c4:	cbz	x0, 4092d8 <wcrtomb@plt+0x64a8>
  4092c8:	mov	x1, x19
  4092cc:	mov	x20, x0
  4092d0:	bl	409328 <wcrtomb@plt+0x64f8>
  4092d4:	b	4092e0 <wcrtomb@plt+0x64b0>
  4092d8:	cbnz	w21, 4092f4 <wcrtomb@plt+0x64c4>
  4092dc:	mov	x20, xzr
  4092e0:	mov	x0, x20
  4092e4:	ldp	x20, x19, [sp, #32]
  4092e8:	ldr	x21, [sp, #16]
  4092ec:	ldp	x29, x30, [sp], #48
  4092f0:	ret
  4092f4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  4092f8:	add	x1, x1, #0x7a8
  4092fc:	mov	w2, #0x5                   	// #5
  409300:	mov	x0, xzr
  409304:	bl	402d10 <dcgettext@plt>
  409308:	mov	x20, x0
  40930c:	bl	402da0 <__errno_location@plt>
  409310:	ldr	w0, [x0]
  409314:	bl	402ac0 <strerror@plt>
  409318:	mov	x2, x0
  40931c:	mov	x0, x20
  409320:	mov	x1, x19
  409324:	bl	40915c <wcrtomb@plt+0x632c>
  409328:	stp	x29, x30, [sp, #-48]!
  40932c:	stp	x22, x21, [sp, #16]
  409330:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  409334:	ldr	x21, [x22, #1936]
  409338:	stp	x20, x19, [sp, #32]
  40933c:	mov	x20, x1
  409340:	mov	x19, x0
  409344:	mov	x29, sp
  409348:	cbz	x21, 409360 <wcrtomb@plt+0x6530>
  40934c:	ldr	x8, [x21]
  409350:	cmp	x8, x19
  409354:	b.eq	409380 <wcrtomb@plt+0x6550>  // b.none
  409358:	ldr	x21, [x21, #16]
  40935c:	cbnz	x21, 40934c <wcrtomb@plt+0x651c>
  409360:	mov	w0, #0x1                   	// #1
  409364:	mov	w1, #0x20                  	// #32
  409368:	bl	411a14 <wcrtomb@plt+0xebe4>
  40936c:	ldr	x8, [x22, #1936]
  409370:	mov	x21, x0
  409374:	str	x0, [x22, #1936]
  409378:	str	x8, [x0, #16]
  40937c:	b	409388 <wcrtomb@plt+0x6558>
  409380:	ldr	x0, [x21, #8]
  409384:	bl	402bd0 <free@plt>
  409388:	mov	x0, x20
  40938c:	bl	411a84 <wcrtomb@plt+0xec54>
  409390:	ldrb	w8, [x21, #24]
  409394:	stp	x19, x0, [x21]
  409398:	and	w8, w8, #0xfe
  40939c:	strb	w8, [x21, #24]
  4093a0:	ldp	x20, x19, [sp, #32]
  4093a4:	ldp	x22, x21, [sp, #16]
  4093a8:	ldp	x29, x30, [sp], #48
  4093ac:	ret
  4093b0:	stp	x29, x30, [sp, #-48]!
  4093b4:	stp	x20, x19, [sp, #32]
  4093b8:	mov	x19, x1
  4093bc:	mov	x1, x2
  4093c0:	str	x21, [sp, #16]
  4093c4:	mov	x29, sp
  4093c8:	mov	w21, w3
  4093cc:	bl	4029d0 <fdopen@plt>
  4093d0:	cbz	x0, 4093e4 <wcrtomb@plt+0x65b4>
  4093d4:	mov	x1, x19
  4093d8:	mov	x20, x0
  4093dc:	bl	409328 <wcrtomb@plt+0x64f8>
  4093e0:	b	4093ec <wcrtomb@plt+0x65bc>
  4093e4:	cbnz	w21, 409400 <wcrtomb@plt+0x65d0>
  4093e8:	mov	x20, xzr
  4093ec:	mov	x0, x20
  4093f0:	ldp	x20, x19, [sp, #32]
  4093f4:	ldr	x21, [sp, #16]
  4093f8:	ldp	x29, x30, [sp], #48
  4093fc:	ret
  409400:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409404:	add	x1, x1, #0x7c2
  409408:	mov	w2, #0x5                   	// #5
  40940c:	mov	x0, xzr
  409410:	bl	402d10 <dcgettext@plt>
  409414:	mov	x20, x0
  409418:	bl	402da0 <__errno_location@plt>
  40941c:	ldr	w0, [x0]
  409420:	bl	402ac0 <strerror@plt>
  409424:	mov	x2, x0
  409428:	mov	x0, x20
  40942c:	mov	x1, x19
  409430:	bl	40915c <wcrtomb@plt+0x632c>
  409434:	stp	x29, x30, [sp, #-64]!
  409438:	stp	x22, x21, [sp, #32]
  40943c:	mov	x21, x0
  409440:	mov	x0, x1
  409444:	str	x23, [sp, #16]
  409448:	stp	x20, x19, [sp, #48]
  40944c:	mov	x29, sp
  409450:	mov	x20, x3
  409454:	mov	x22, x2
  409458:	mov	x23, x1
  40945c:	bl	402750 <strlen@plt>
  409460:	mov	x19, x0
  409464:	mov	x0, x22
  409468:	bl	402750 <strlen@plt>
  40946c:	add	x8, x19, x0
  409470:	add	x0, x8, #0x8
  409474:	bl	4118c8 <wcrtomb@plt+0xea98>
  409478:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xe17c>
  40947c:	add	x3, x3, #0x7dc
  409480:	mov	w1, #0x1                   	// #1
  409484:	mov	x2, #0xffffffffffffffff    	// #-1
  409488:	mov	x4, x23
  40948c:	mov	x5, x22
  409490:	mov	x19, x0
  409494:	bl	402760 <__sprintf_chk@plt>
  409498:	mov	w0, #0x3f                  	// #63
  40949c:	bl	402d80 <umask@plt>
  4094a0:	mov	w23, w0
  4094a4:	mov	x0, x19
  4094a8:	mov	w1, wzr
  4094ac:	bl	402b10 <mkostemp@plt>
  4094b0:	mov	w22, w0
  4094b4:	mov	w0, w23
  4094b8:	bl	402d80 <umask@plt>
  4094bc:	cmn	w22, #0x1
  4094c0:	b.eq	4094f8 <wcrtomb@plt+0x66c8>  // b.none
  4094c4:	mov	w0, w22
  4094c8:	mov	x1, x20
  4094cc:	str	x19, [x21]
  4094d0:	bl	4029d0 <fdopen@plt>
  4094d4:	mov	x1, x19
  4094d8:	mov	x20, x0
  4094dc:	bl	409328 <wcrtomb@plt+0x64f8>
  4094e0:	mov	x0, x20
  4094e4:	ldp	x20, x19, [sp, #48]
  4094e8:	ldp	x22, x21, [sp, #32]
  4094ec:	ldr	x23, [sp, #16]
  4094f0:	ldp	x29, x30, [sp], #64
  4094f4:	ret
  4094f8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  4094fc:	add	x1, x1, #0xa02
  409500:	mov	w2, #0x5                   	// #5
  409504:	mov	x0, xzr
  409508:	bl	402d10 <dcgettext@plt>
  40950c:	mov	x20, x0
  409510:	bl	402da0 <__errno_location@plt>
  409514:	ldr	w0, [x0]
  409518:	bl	402ac0 <strerror@plt>
  40951c:	mov	x2, x0
  409520:	mov	x0, x20
  409524:	mov	x1, x19
  409528:	bl	40915c <wcrtomb@plt+0x632c>
  40952c:	stp	x29, x30, [sp, #-48]!
  409530:	stp	x22, x21, [sp, #16]
  409534:	mov	x22, x0
  409538:	mov	x0, x3
  40953c:	stp	x20, x19, [sp, #32]
  409540:	mov	x29, sp
  409544:	mov	x20, x3
  409548:	mov	x19, x2
  40954c:	mov	x21, x1
  409550:	bl	402c90 <clearerr_unlocked@plt>
  409554:	cbz	x21, 409574 <wcrtomb@plt+0x6744>
  409558:	mov	x0, x22
  40955c:	mov	x1, x21
  409560:	mov	x2, x19
  409564:	mov	x3, x20
  409568:	bl	402740 <fwrite_unlocked@plt>
  40956c:	cmp	x0, x19
  409570:	b.ne	409584 <wcrtomb@plt+0x6754>  // b.any
  409574:	ldp	x20, x19, [sp, #32]
  409578:	ldp	x22, x21, [sp, #16]
  40957c:	ldp	x29, x30, [sp], #48
  409580:	ret
  409584:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409588:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xe17c>
  40958c:	add	x1, x1, #0x7e8
  409590:	add	x2, x2, #0x80b
  409594:	mov	w4, #0x5                   	// #5
  409598:	mov	x0, xzr
  40959c:	mov	x3, x19
  4095a0:	bl	402c70 <dcngettext@plt>
  4095a4:	mov	x21, x0
  4095a8:	mov	x0, x20
  4095ac:	bl	4095d4 <wcrtomb@plt+0x67a4>
  4095b0:	mov	x20, x0
  4095b4:	bl	402da0 <__errno_location@plt>
  4095b8:	ldr	w0, [x0]
  4095bc:	bl	402ac0 <strerror@plt>
  4095c0:	mov	x3, x0
  4095c4:	mov	x0, x21
  4095c8:	mov	x1, x19
  4095cc:	mov	x2, x20
  4095d0:	bl	40915c <wcrtomb@plt+0x632c>
  4095d4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4095d8:	ldr	x8, [x8, #1936]
  4095dc:	cbz	x8, 4095f4 <wcrtomb@plt+0x67c4>
  4095e0:	ldr	x9, [x8]
  4095e4:	cmp	x9, x0
  4095e8:	b.eq	409638 <wcrtomb@plt+0x6808>  // b.none
  4095ec:	ldr	x8, [x8, #16]
  4095f0:	cbnz	x8, 4095e0 <wcrtomb@plt+0x67b0>
  4095f4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4095f8:	ldr	x8, [x8, #1312]
  4095fc:	cmp	x8, x0
  409600:	b.eq	409640 <wcrtomb@plt+0x6810>  // b.none
  409604:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  409608:	ldr	x8, [x8, #1304]
  40960c:	cmp	x8, x0
  409610:	b.eq	40964c <wcrtomb@plt+0x681c>  // b.none
  409614:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  409618:	ldr	x8, [x8, #1280]
  40961c:	adrp	x9, 420000 <_obstack_memory_used@@Base+0xe17c>
  409620:	adrp	x10, 41f000 <_obstack_memory_used@@Base+0xd17c>
  409624:	add	x9, x9, #0x8a1
  409628:	add	x10, x10, #0x7be
  40962c:	cmp	x8, x0
  409630:	csel	x0, x10, x9, eq  // eq = none
  409634:	ret
  409638:	ldr	x0, [x8, #8]
  40963c:	ret
  409640:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  409644:	add	x0, x0, #0x7a7
  409648:	ret
  40964c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  409650:	add	x0, x0, #0x7b2
  409654:	ret
  409658:	stp	x29, x30, [sp, #-48]!
  40965c:	stp	x22, x21, [sp, #16]
  409660:	mov	x22, x0
  409664:	mov	x0, x3
  409668:	stp	x20, x19, [sp, #32]
  40966c:	mov	x29, sp
  409670:	mov	x19, x3
  409674:	mov	x20, x2
  409678:	mov	x21, x1
  40967c:	bl	402c90 <clearerr_unlocked@plt>
  409680:	cbz	x21, 4096ac <wcrtomb@plt+0x687c>
  409684:	mov	x0, x22
  409688:	mov	x1, x21
  40968c:	mov	x2, x20
  409690:	mov	x3, x19
  409694:	bl	402b60 <fread_unlocked@plt>
  409698:	mov	x20, x0
  40969c:	cbnz	x0, 4096ac <wcrtomb@plt+0x687c>
  4096a0:	mov	x0, x19
  4096a4:	bl	4027d0 <ferror_unlocked@plt>
  4096a8:	cbnz	w0, 4096c0 <wcrtomb@plt+0x6890>
  4096ac:	mov	x0, x20
  4096b0:	ldp	x20, x19, [sp, #32]
  4096b4:	ldp	x22, x21, [sp, #16]
  4096b8:	ldp	x29, x30, [sp], #48
  4096bc:	ret
  4096c0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  4096c4:	add	x1, x1, #0x82f
  4096c8:	mov	w2, #0x5                   	// #5
  4096cc:	mov	x0, xzr
  4096d0:	bl	402d10 <dcgettext@plt>
  4096d4:	mov	x20, x0
  4096d8:	mov	x0, x19
  4096dc:	bl	4095d4 <wcrtomb@plt+0x67a4>
  4096e0:	mov	x19, x0
  4096e4:	bl	402da0 <__errno_location@plt>
  4096e8:	ldr	w0, [x0]
  4096ec:	bl	402ac0 <strerror@plt>
  4096f0:	mov	x2, x0
  4096f4:	mov	x0, x20
  4096f8:	mov	x1, x19
  4096fc:	bl	40915c <wcrtomb@plt+0x632c>
  409700:	stp	x29, x30, [sp, #-48]!
  409704:	stp	x22, x21, [sp, #16]
  409708:	mov	x21, x0
  40970c:	mov	x0, x3
  409710:	stp	x20, x19, [sp, #32]
  409714:	mov	x29, sp
  409718:	mov	x19, x3
  40971c:	mov	w22, w2
  409720:	mov	x20, x1
  409724:	bl	4027d0 <ferror_unlocked@plt>
  409728:	cmp	w0, #0x0
  40972c:	cset	w8, ne  // ne = any
  409730:	cbz	w0, 40974c <wcrtomb@plt+0x691c>
  409734:	cbnz	w8, 409778 <wcrtomb@plt+0x6948>
  409738:	mov	x0, x20
  40973c:	ldp	x20, x19, [sp, #32]
  409740:	ldp	x22, x21, [sp, #16]
  409744:	ldp	x29, x30, [sp], #48
  409748:	ret
  40974c:	and	w2, w22, #0xff
  409750:	mov	x0, x21
  409754:	mov	x1, x20
  409758:	mov	x3, x19
  40975c:	bl	402910 <getdelim@plt>
  409760:	mov	x20, x0
  409764:	mov	x0, x19
  409768:	bl	4027d0 <ferror_unlocked@plt>
  40976c:	cmp	w0, #0x0
  409770:	cset	w8, ne  // ne = any
  409774:	cbz	w8, 409738 <wcrtomb@plt+0x6908>
  409778:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40977c:	add	x1, x1, #0x82f
  409780:	mov	w2, #0x5                   	// #5
  409784:	mov	x0, xzr
  409788:	bl	402d10 <dcgettext@plt>
  40978c:	mov	x20, x0
  409790:	mov	x0, x19
  409794:	bl	4095d4 <wcrtomb@plt+0x67a4>
  409798:	mov	x19, x0
  40979c:	bl	402da0 <__errno_location@plt>
  4097a0:	ldr	w0, [x0]
  4097a4:	bl	402ac0 <strerror@plt>
  4097a8:	mov	x2, x0
  4097ac:	mov	x0, x20
  4097b0:	mov	x1, x19
  4097b4:	bl	40915c <wcrtomb@plt+0x632c>
  4097b8:	stp	x29, x30, [sp, #-32]!
  4097bc:	stp	x20, x19, [sp, #16]
  4097c0:	mov	x29, sp
  4097c4:	mov	x19, x0
  4097c8:	bl	402830 <__fwriting@plt>
  4097cc:	cbz	w0, 4097f8 <wcrtomb@plt+0x69c8>
  4097d0:	mov	x0, x19
  4097d4:	bl	402c90 <clearerr_unlocked@plt>
  4097d8:	mov	x0, x19
  4097dc:	bl	402c60 <fflush_unlocked@plt>
  4097e0:	cmn	w0, #0x1
  4097e4:	b.ne	4097f8 <wcrtomb@plt+0x69c8>  // b.any
  4097e8:	bl	402da0 <__errno_location@plt>
  4097ec:	ldr	w20, [x0]
  4097f0:	cmp	w20, #0x9
  4097f4:	b.ne	409804 <wcrtomb@plt+0x69d4>  // b.any
  4097f8:	ldp	x20, x19, [sp, #16]
  4097fc:	ldp	x29, x30, [sp], #32
  409800:	ret
  409804:	mov	x0, x19
  409808:	bl	4095d4 <wcrtomb@plt+0x67a4>
  40980c:	mov	x19, x0
  409810:	mov	w0, w20
  409814:	bl	402ac0 <strerror@plt>
  409818:	mov	x2, x0
  40981c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  409820:	add	x0, x0, #0x844
  409824:	mov	x1, x19
  409828:	bl	40915c <wcrtomb@plt+0x632c>
  40982c:	sub	sp, sp, #0x60
  409830:	stp	x22, x21, [sp, #64]
  409834:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  409838:	stp	x20, x19, [sp, #80]
  40983c:	ldr	x20, [x21, #1936]
  409840:	mov	x19, x0
  409844:	stp	x29, x30, [sp, #32]
  409848:	str	x23, [sp, #48]
  40984c:	add	x29, sp, #0x20
  409850:	str	x20, [sp, #16]
  409854:	cbz	x20, 4098a8 <wcrtomb@plt+0x6a78>
  409858:	mov	x22, sp
  40985c:	add	x23, x22, #0x10
  409860:	b	409890 <wcrtomb@plt+0x6a60>
  409864:	ldr	x0, [x20]
  409868:	bl	4098d8 <wcrtomb@plt+0x6aa8>
  40986c:	ldr	x8, [x20, #16]
  409870:	str	x8, [x23]
  409874:	ldr	x0, [x20, #8]
  409878:	bl	402bd0 <free@plt>
  40987c:	mov	x0, x20
  409880:	bl	402bd0 <free@plt>
  409884:	mov	x23, x22
  409888:	ldr	x20, [x23, #16]!
  40988c:	cbz	x20, 4098a8 <wcrtomb@plt+0x6a78>
  409890:	cbz	x19, 409864 <wcrtomb@plt+0x6a34>
  409894:	ldr	x8, [x20]
  409898:	cmp	x8, x19
  40989c:	b.eq	409864 <wcrtomb@plt+0x6a34>  // b.none
  4098a0:	mov	x22, x20
  4098a4:	b	409884 <wcrtomb@plt+0x6a54>
  4098a8:	ldr	x8, [sp, #16]
  4098ac:	str	x8, [x21, #1936]
  4098b0:	cbnz	x19, 4098c0 <wcrtomb@plt+0x6a90>
  4098b4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  4098b8:	ldr	x0, [x8, #1304]
  4098bc:	bl	4098d8 <wcrtomb@plt+0x6aa8>
  4098c0:	ldp	x20, x19, [sp, #80]
  4098c4:	ldp	x22, x21, [sp, #64]
  4098c8:	ldr	x23, [sp, #48]
  4098cc:	ldp	x29, x30, [sp, #32]
  4098d0:	add	sp, sp, #0x60
  4098d4:	ret
  4098d8:	stp	x29, x30, [sp, #-32]!
  4098dc:	str	x19, [sp, #16]
  4098e0:	mov	x29, sp
  4098e4:	mov	x19, x0
  4098e8:	bl	4097b8 <wcrtomb@plt+0x6988>
  4098ec:	mov	x0, x19
  4098f0:	bl	402c90 <clearerr_unlocked@plt>
  4098f4:	mov	x0, x19
  4098f8:	bl	402870 <fclose@plt>
  4098fc:	cmn	w0, #0x1
  409900:	b.eq	409910 <wcrtomb@plt+0x6ae0>  // b.none
  409904:	ldr	x19, [sp, #16]
  409908:	ldp	x29, x30, [sp], #32
  40990c:	ret
  409910:	mov	x0, x19
  409914:	bl	4095d4 <wcrtomb@plt+0x67a4>
  409918:	mov	x19, x0
  40991c:	bl	402da0 <__errno_location@plt>
  409920:	ldr	w0, [x0]
  409924:	bl	402ac0 <strerror@plt>
  409928:	mov	x2, x0
  40992c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  409930:	add	x0, x0, #0x8ab
  409934:	mov	x1, x19
  409938:	bl	40915c <wcrtomb@plt+0x632c>
  40993c:	sub	sp, sp, #0xe0
  409940:	stp	x22, x21, [sp, #192]
  409944:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  409948:	ldr	w8, [x21, #1960]
  40994c:	stp	x20, x19, [sp, #208]
  409950:	mov	x19, x0
  409954:	stp	x29, x30, [sp, #128]
  409958:	stp	x28, x27, [sp, #144]
  40995c:	stp	x26, x25, [sp, #160]
  409960:	stp	x24, x23, [sp, #176]
  409964:	add	x29, sp, #0x80
  409968:	cbnz	w8, 409994 <wcrtomb@plt+0x6b64>
  40996c:	mov	w0, #0x1001                	// #4097
  409970:	mov	w20, #0x1001                	// #4097
  409974:	bl	4119fc <wcrtomb@plt+0xebcc>
  409978:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40997c:	str	x0, [x8, #1944]
  409980:	mov	w0, #0x1001                	// #4097
  409984:	bl	4119fc <wcrtomb@plt+0xebcc>
  409988:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40998c:	str	x0, [x8, #1952]
  409990:	str	w20, [x21, #1960]
  409994:	mov	x1, sp
  409998:	mov	x0, x19
  40999c:	bl	41f038 <_obstack_memory_used@@Base+0xd1b4>
  4099a0:	cbnz	w0, 409b1c <wcrtomb@plt+0x6cec>
  4099a4:	ldr	w8, [sp, #16]
  4099a8:	mov	w9, #0xa000                	// #40960
  4099ac:	and	w8, w8, w9
  4099b0:	cmp	w8, #0xa, lsl #12
  4099b4:	b.ne	409b1c <wcrtomb@plt+0x6cec>  // b.any
  4099b8:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x2017c>
  4099bc:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x2017c>
  4099c0:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  4099c4:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  4099c8:	add	x24, x24, #0x7a0
  4099cc:	mov	w25, #0xa000                	// #40960
  4099d0:	add	x26, x26, #0x798
  4099d4:	ldr	x1, [x22, #1952]
  4099d8:	cmp	x19, x1
  4099dc:	b.ne	4099ec <wcrtomb@plt+0x6bbc>  // b.any
  4099e0:	ldr	x0, [x23, #1944]
  4099e4:	bl	402c80 <strcpy@plt>
  4099e8:	ldr	x19, [x23, #1944]
  4099ec:	ldr	x1, [x22, #1952]
  4099f0:	ldrsw	x2, [x21, #1960]
  4099f4:	mov	x0, x19
  4099f8:	bl	4027c0 <readlink@plt>
  4099fc:	ldr	w28, [x21, #1960]
  409a00:	mov	x20, x0
  409a04:	cmp	w28, w20
  409a08:	b.ne	409a44 <wcrtomb@plt+0x6c14>  // b.any
  409a0c:	ldr	x0, [x23, #1944]
  409a10:	lsl	w8, w28, #1
  409a14:	sxtw	x1, w8
  409a18:	str	w8, [x21, #1960]
  409a1c:	bl	411920 <wcrtomb@plt+0xeaf0>
  409a20:	ldr	x8, [x22, #1952]
  409a24:	ldrsw	x1, [x21, #1960]
  409a28:	str	x0, [x23, #1944]
  409a2c:	mov	x0, x8
  409a30:	bl	411920 <wcrtomb@plt+0xeaf0>
  409a34:	ldrsw	x2, [x21, #1960]
  409a38:	mov	x1, x0
  409a3c:	str	x0, [x22, #1952]
  409a40:	b	4099f4 <wcrtomb@plt+0x6bc4>
  409a44:	tbnz	w20, #31, 409b44 <wcrtomb@plt+0x6d14>
  409a48:	ldr	x8, [x24]
  409a4c:	strb	wzr, [x8, w20, sxtw]
  409a50:	ldr	x8, [x24]
  409a54:	ldrb	w8, [x8]
  409a58:	cmp	w8, #0x2f
  409a5c:	mov	x8, x24
  409a60:	b.eq	409af8 <wcrtomb@plt+0x6cc8>  // b.none
  409a64:	mov	w1, #0x2f                  	// #47
  409a68:	mov	x0, x19
  409a6c:	bl	402ad0 <strrchr@plt>
  409a70:	cbz	x0, 409af4 <wcrtomb@plt+0x6cc4>
  409a74:	sub	w8, w0, w19
  409a78:	add	w27, w8, #0x1
  409a7c:	add	w8, w27, w20
  409a80:	cmp	w8, w28
  409a84:	b.lt	409ab4 <wcrtomb@plt+0x6c84>  // b.tstop
  409a88:	ldr	x0, [x23, #1944]
  409a8c:	add	w8, w8, #0x1
  409a90:	sxtw	x1, w8
  409a94:	str	w8, [x21, #1960]
  409a98:	bl	411920 <wcrtomb@plt+0xeaf0>
  409a9c:	ldr	x8, [x22, #1952]
  409aa0:	ldrsw	x1, [x21, #1960]
  409aa4:	str	x0, [x23, #1944]
  409aa8:	mov	x0, x8
  409aac:	bl	411920 <wcrtomb@plt+0xeaf0>
  409ab0:	str	x0, [x22, #1952]
  409ab4:	ldr	x0, [x23, #1944]
  409ab8:	lsl	x20, x20, #32
  409abc:	cmp	x19, x0
  409ac0:	b.eq	409ad0 <wcrtomb@plt+0x6ca0>  // b.none
  409ac4:	sxtw	x2, w27
  409ac8:	mov	x1, x19
  409acc:	bl	402710 <memcpy@plt>
  409ad0:	ldr	x8, [x26]
  409ad4:	ldr	x1, [x22, #1952]
  409ad8:	mov	x9, #0x100000000           	// #4294967296
  409adc:	add	x9, x20, x9
  409ae0:	add	x0, x8, w27, sxtw
  409ae4:	asr	x2, x9, #32
  409ae8:	bl	402710 <memcpy@plt>
  409aec:	mov	x8, x26
  409af0:	b	409af8 <wcrtomb@plt+0x6cc8>
  409af4:	mov	x8, x24
  409af8:	ldr	x19, [x8]
  409afc:	mov	x1, sp
  409b00:	mov	x0, x19
  409b04:	bl	41f038 <_obstack_memory_used@@Base+0xd1b4>
  409b08:	cbnz	w0, 409b1c <wcrtomb@plt+0x6cec>
  409b0c:	ldr	w8, [sp, #16]
  409b10:	and	w8, w8, w25
  409b14:	cmp	w8, #0xa, lsl #12
  409b18:	b.eq	4099d4 <wcrtomb@plt+0x6ba4>  // b.none
  409b1c:	tbnz	w0, #31, 409b78 <wcrtomb@plt+0x6d48>
  409b20:	mov	x0, x19
  409b24:	ldp	x20, x19, [sp, #208]
  409b28:	ldp	x22, x21, [sp, #192]
  409b2c:	ldp	x24, x23, [sp, #176]
  409b30:	ldp	x26, x25, [sp, #160]
  409b34:	ldp	x28, x27, [sp, #144]
  409b38:	ldp	x29, x30, [sp, #128]
  409b3c:	add	sp, sp, #0xe0
  409b40:	ret
  409b44:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409b48:	add	x1, x1, #0x85a
  409b4c:	mov	w2, #0x5                   	// #5
  409b50:	mov	x0, xzr
  409b54:	bl	402d10 <dcgettext@plt>
  409b58:	mov	x20, x0
  409b5c:	bl	402da0 <__errno_location@plt>
  409b60:	ldr	w0, [x0]
  409b64:	bl	402ac0 <strerror@plt>
  409b68:	mov	x2, x0
  409b6c:	mov	x0, x20
  409b70:	mov	x1, x19
  409b74:	bl	40915c <wcrtomb@plt+0x632c>
  409b78:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409b7c:	add	x1, x1, #0x879
  409b80:	b	409b4c <wcrtomb@plt+0x6d1c>
  409b84:	stp	x29, x30, [sp, #-48]!
  409b88:	stp	x22, x21, [sp, #16]
  409b8c:	stp	x20, x19, [sp, #32]
  409b90:	mov	x29, sp
  409b94:	mov	x20, x2
  409b98:	mov	x19, x0
  409b9c:	bl	402c40 <rename@plt>
  409ba0:	cmn	w0, #0x1
  409ba4:	b.eq	409bb8 <wcrtomb@plt+0x6d88>  // b.none
  409ba8:	ldp	x20, x19, [sp, #32]
  409bac:	ldp	x22, x21, [sp, #16]
  409bb0:	ldp	x29, x30, [sp], #48
  409bb4:	ret
  409bb8:	cbz	x20, 409be0 <wcrtomb@plt+0x6db0>
  409bbc:	bl	402da0 <__errno_location@plt>
  409bc0:	ldr	w22, [x0]
  409bc4:	mov	x21, x0
  409bc8:	str	wzr, [x0]
  409bcc:	mov	x0, x20
  409bd0:	bl	402dd0 <unlink@plt>
  409bd4:	ldr	w8, [x21]
  409bd8:	cbnz	w8, 409c14 <wcrtomb@plt+0x6de4>
  409bdc:	str	w22, [x21]
  409be0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409be4:	add	x1, x1, #0x88c
  409be8:	mov	w2, #0x5                   	// #5
  409bec:	mov	x0, xzr
  409bf0:	bl	402d10 <dcgettext@plt>
  409bf4:	mov	x20, x0
  409bf8:	bl	402da0 <__errno_location@plt>
  409bfc:	ldr	w0, [x0]
  409c00:	bl	402ac0 <strerror@plt>
  409c04:	mov	x2, x0
  409c08:	mov	x0, x20
  409c0c:	mov	x1, x19
  409c10:	bl	40915c <wcrtomb@plt+0x632c>
  409c14:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409c18:	add	x1, x1, #0x793
  409c1c:	mov	w2, #0x5                   	// #5
  409c20:	mov	x0, xzr
  409c24:	bl	402d10 <dcgettext@plt>
  409c28:	ldr	w8, [x21]
  409c2c:	mov	x19, x0
  409c30:	mov	w0, w8
  409c34:	bl	402ac0 <strerror@plt>
  409c38:	mov	x2, x0
  409c3c:	mov	x0, x19
  409c40:	mov	x1, x20
  409c44:	bl	40915c <wcrtomb@plt+0x632c>
  409c48:	stp	x29, x30, [sp, #-32]!
  409c4c:	mov	w0, #0x1                   	// #1
  409c50:	mov	w1, #0x18                  	// #24
  409c54:	stp	x20, x19, [sp, #16]
  409c58:	mov	x29, sp
  409c5c:	bl	411a14 <wcrtomb@plt+0xebe4>
  409c60:	mov	x19, x0
  409c64:	mov	w0, #0x32                  	// #50
  409c68:	mov	w20, #0x32                  	// #50
  409c6c:	bl	4119fc <wcrtomb@plt+0xebcc>
  409c70:	stp	xzr, x0, [x19, #8]
  409c74:	str	x20, [x19]
  409c78:	mov	x0, x19
  409c7c:	ldp	x20, x19, [sp, #16]
  409c80:	ldp	x29, x30, [sp], #32
  409c84:	ret
  409c88:	ldr	x0, [x0, #16]
  409c8c:	ret
  409c90:	ldr	x0, [x0, #8]
  409c94:	ret
  409c98:	stp	x29, x30, [sp, #-48]!
  409c9c:	stp	x22, x21, [sp, #16]
  409ca0:	stp	x20, x19, [sp, #32]
  409ca4:	ldp	x9, x8, [x0]
  409ca8:	mov	x19, x2
  409cac:	mov	x20, x0
  409cb0:	mov	x21, x1
  409cb4:	sub	x9, x9, x8
  409cb8:	cmp	x9, x2
  409cbc:	mov	x29, sp
  409cc0:	b.cs	409cd0 <wcrtomb@plt+0x6ea0>  // b.hs, b.nlast
  409cc4:	add	x1, x8, x19
  409cc8:	mov	x0, x20
  409ccc:	bl	409d08 <wcrtomb@plt+0x6ed8>
  409cd0:	ldp	x9, x8, [x20, #8]
  409cd4:	mov	x1, x21
  409cd8:	mov	x2, x19
  409cdc:	add	x22, x8, x9
  409ce0:	mov	x0, x22
  409ce4:	bl	402710 <memcpy@plt>
  409ce8:	ldr	x8, [x20, #8]
  409cec:	mov	x0, x22
  409cf0:	add	x8, x8, x19
  409cf4:	str	x8, [x20, #8]
  409cf8:	ldp	x20, x19, [sp, #32]
  409cfc:	ldp	x22, x21, [sp, #16]
  409d00:	ldp	x29, x30, [sp], #48
  409d04:	ret
  409d08:	stp	x29, x30, [sp, #-48]!
  409d0c:	stp	x20, x19, [sp, #32]
  409d10:	ldr	x8, [x0]
  409d14:	str	x21, [sp, #16]
  409d18:	mov	x29, sp
  409d1c:	cmp	x8, x1
  409d20:	b.cs	409d70 <wcrtomb@plt+0x6f40>  // b.hs, b.nlast
  409d24:	lsl	x21, x8, #1
  409d28:	mov	x19, x0
  409d2c:	mov	x20, x1
  409d30:	cmp	x21, x1
  409d34:	b.ls	409d4c <wcrtomb@plt+0x6f1c>  // b.plast
  409d38:	ldr	x0, [x19, #16]
  409d3c:	mov	x1, x21
  409d40:	bl	402a40 <realloc@plt>
  409d44:	cbnz	x0, 409d68 <wcrtomb@plt+0x6f38>
  409d48:	b	409d54 <wcrtomb@plt+0x6f24>
  409d4c:	mov	x0, xzr
  409d50:	cbnz	x0, 409d68 <wcrtomb@plt+0x6f38>
  409d54:	ldr	x0, [x19, #16]
  409d58:	mov	w2, #0x1                   	// #1
  409d5c:	mov	x1, x20
  409d60:	bl	4118f4 <wcrtomb@plt+0xeac4>
  409d64:	mov	x21, x20
  409d68:	str	x21, [x19]
  409d6c:	str	x0, [x19, #16]
  409d70:	ldp	x20, x19, [sp, #32]
  409d74:	ldr	x21, [sp, #16]
  409d78:	ldp	x29, x30, [sp], #48
  409d7c:	ret
  409d80:	cmn	w1, #0x1
  409d84:	b.eq	409dd4 <wcrtomb@plt+0x6fa4>  // b.none
  409d88:	stp	x29, x30, [sp, #-32]!
  409d8c:	stp	x20, x19, [sp, #16]
  409d90:	ldp	x9, x8, [x0]
  409d94:	mov	w19, w1
  409d98:	mov	x20, x0
  409d9c:	mov	x29, sp
  409da0:	cmp	x9, x8
  409da4:	b.ne	409db4 <wcrtomb@plt+0x6f84>  // b.any
  409da8:	add	x1, x8, #0x1
  409dac:	mov	x0, x20
  409db0:	bl	409d08 <wcrtomb@plt+0x6ed8>
  409db4:	ldp	x8, x9, [x20, #8]
  409db8:	add	x10, x8, #0x1
  409dbc:	add	x0, x9, x8
  409dc0:	str	x10, [x20, #8]
  409dc4:	strb	w19, [x0]
  409dc8:	ldp	x20, x19, [sp, #16]
  409dcc:	ldp	x29, x30, [sp], #32
  409dd0:	ret
  409dd4:	mov	x0, xzr
  409dd8:	ret
  409ddc:	stp	x29, x30, [sp, #-32]!
  409de0:	str	x19, [sp, #16]
  409de4:	mov	x19, x0
  409de8:	mov	x29, sp
  409dec:	cbz	x0, 409df8 <wcrtomb@plt+0x6fc8>
  409df0:	ldr	x0, [x19, #16]
  409df4:	bl	402bd0 <free@plt>
  409df8:	mov	x0, x19
  409dfc:	bl	402bd0 <free@plt>
  409e00:	ldr	x19, [sp, #16]
  409e04:	ldp	x29, x30, [sp], #32
  409e08:	ret
  409e0c:	stp	x29, x30, [sp, #-48]!
  409e10:	stp	x22, x21, [sp, #16]
  409e14:	stp	x20, x19, [sp, #32]
  409e18:	mov	x29, sp
  409e1c:	mov	x20, x2
  409e20:	mov	x21, x0
  409e24:	bl	40f9cc <wcrtomb@plt+0xcb9c>
  409e28:	mov	w19, w0
  409e2c:	cmn	w0, #0x1
  409e30:	b.eq	409e64 <wcrtomb@plt+0x7034>  // b.none
  409e34:	cmn	w19, #0x2
  409e38:	b.ne	409ea0 <wcrtomb@plt+0x7070>  // b.any
  409e3c:	bl	402da0 <__errno_location@plt>
  409e40:	ldr	w20, [x0]
  409e44:	mov	x0, x21
  409e48:	bl	410f18 <wcrtomb@plt+0xe0e8>
  409e4c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xe17c>
  409e50:	mov	x3, x0
  409e54:	add	x2, x2, #0x7bf
  409e58:	mov	w0, wzr
  409e5c:	mov	w1, w20
  409e60:	b	409e9c <wcrtomb@plt+0x706c>
  409e64:	bl	402da0 <__errno_location@plt>
  409e68:	ldr	w21, [x0]
  409e6c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409e70:	add	x1, x1, #0x8c1
  409e74:	mov	w2, #0x5                   	// #5
  409e78:	mov	x0, xzr
  409e7c:	bl	402d10 <dcgettext@plt>
  409e80:	mov	x22, x0
  409e84:	mov	x0, x20
  409e88:	bl	410f18 <wcrtomb@plt+0xe0e8>
  409e8c:	mov	x3, x0
  409e90:	mov	w0, wzr
  409e94:	mov	w1, w21
  409e98:	mov	x2, x22
  409e9c:	bl	402790 <error@plt>
  409ea0:	mov	w0, w19
  409ea4:	ldp	x20, x19, [sp, #32]
  409ea8:	ldp	x22, x21, [sp, #16]
  409eac:	ldp	x29, x30, [sp], #48
  409eb0:	ret
  409eb4:	stp	x29, x30, [sp, #-32]!
  409eb8:	ldrb	w8, [x2, #456]
  409ebc:	mov	x9, #0xffffffffffffffff    	// #-1
  409ec0:	str	x9, [x2, #48]
  409ec4:	mov	w9, #0x1                   	// #1
  409ec8:	str	x19, [sp, #16]
  409ecc:	mov	x29, sp
  409ed0:	stp	x0, x1, [x2, #32]
  409ed4:	strb	w9, [x2, #120]
  409ed8:	cbz	w8, 409f60 <wcrtomb@plt+0x7130>
  409edc:	ldr	x8, [x2, #184]
  409ee0:	mov	x19, x2
  409ee4:	cbnz	x8, 409ef4 <wcrtomb@plt+0x70c4>
  409ee8:	mov	w1, #0x10b                 	// #267
  409eec:	mov	x0, x19
  409ef0:	bl	409f84 <wcrtomb@plt+0x7154>
  409ef4:	mov	x0, x19
  409ef8:	bl	40a048 <wcrtomb@plt+0x7218>
  409efc:	ldr	x8, [x19, #168]
  409f00:	stp	x0, x8, [x19, #128]
  409f04:	mov	x0, x19
  409f08:	bl	40a884 <wcrtomb@plt+0x7a54>
  409f0c:	ldr	x8, [x19, #128]
  409f10:	cmn	x8, #0x1
  409f14:	b.ne	409f6c <wcrtomb@plt+0x713c>  // b.any
  409f18:	ldr	x8, [x19, #184]
  409f1c:	mov	x0, x19
  409f20:	mvn	x1, x8
  409f24:	bl	409f84 <wcrtomb@plt+0x7154>
  409f28:	mov	w1, #0x105                 	// #261
  409f2c:	mov	x0, x19
  409f30:	bl	409f84 <wcrtomb@plt+0x7154>
  409f34:	ldr	x8, [x19, #184]
  409f38:	cbz	x8, 409f48 <wcrtomb@plt+0x7118>
  409f3c:	mov	w1, #0x106                 	// #262
  409f40:	mov	x0, x19
  409f44:	bl	409f84 <wcrtomb@plt+0x7154>
  409f48:	ldr	x8, [x19, #184]
  409f4c:	add	x8, x8, #0x1
  409f50:	str	x8, [x19, #184]
  409f54:	ldr	x19, [sp, #16]
  409f58:	ldp	x29, x30, [sp], #32
  409f5c:	ret
  409f60:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409f64:	add	x1, x1, #0xc80
  409f68:	b	409f74 <wcrtomb@plt+0x7144>
  409f6c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  409f70:	add	x1, x1, #0xc94
  409f74:	mov	w2, #0x5                   	// #5
  409f78:	mov	x0, xzr
  409f7c:	bl	402d10 <dcgettext@plt>
  409f80:	bl	408270 <wcrtomb@plt+0x5440>
  409f84:	stp	x29, x30, [sp, #-48]!
  409f88:	stp	x20, x19, [sp, #32]
  409f8c:	cmp	x1, #0x113
  409f90:	mov	x19, x0
  409f94:	str	x21, [sp, #16]
  409f98:	mov	x29, sp
  409f9c:	b.ne	409ff8 <wcrtomb@plt+0x71c8>  // b.any
  409fa0:	ldrb	w8, [x19, #1048]
  409fa4:	cbz	w8, 409ff8 <wcrtomb@plt+0x71c8>
  409fa8:	ldr	x8, [x19, #104]
  409fac:	cmp	x8, #0x1
  409fb0:	b.lt	40a008 <wcrtomb@plt+0x71d8>  // b.tstop
  409fb4:	mov	x21, xzr
  409fb8:	mov	w20, wzr
  409fbc:	b	409fd4 <wcrtomb@plt+0x71a4>
  409fc0:	ldr	x8, [x19, #104]
  409fc4:	add	x21, x21, #0x1
  409fc8:	mov	w20, #0x1                   	// #1
  409fcc:	cmp	x21, x8
  409fd0:	b.ge	40a00c <wcrtomb@plt+0x71dc>  // b.tcont
  409fd4:	ldr	x8, [x19, #96]
  409fd8:	mov	x0, x19
  409fdc:	ldr	w1, [x8, x21, lsl #2]
  409fe0:	bl	40c12c <wcrtomb@plt+0x92fc>
  409fe4:	tbz	w20, #0, 409fc0 <wcrtomb@plt+0x7190>
  409fe8:	mov	w1, #0x106                 	// #262
  409fec:	mov	x0, x19
  409ff0:	bl	409f84 <wcrtomb@plt+0x7154>
  409ff4:	b	409fc0 <wcrtomb@plt+0x7190>
  409ff8:	mov	w2, #0x3                   	// #3
  409ffc:	mov	x0, x19
  40a000:	bl	40c1e4 <wcrtomb@plt+0x93b4>
  40a004:	b	40a038 <wcrtomb@plt+0x7208>
  40a008:	mov	w20, wzr
  40a00c:	ldr	x8, [x19, #80]
  40a010:	str	xzr, [x19, #104]
  40a014:	cmn	x8, #0x1
  40a018:	b.eq	40a038 <wcrtomb@plt+0x7208>  // b.none
  40a01c:	add	x1, x8, #0x114
  40a020:	mov	x0, x19
  40a024:	bl	409f84 <wcrtomb@plt+0x7154>
  40a028:	cbz	w20, 40a038 <wcrtomb@plt+0x7208>
  40a02c:	mov	w1, #0x106                 	// #262
  40a030:	mov	x0, x19
  40a034:	bl	409f84 <wcrtomb@plt+0x7154>
  40a038:	ldp	x20, x19, [sp, #32]
  40a03c:	ldr	x21, [sp, #16]
  40a040:	ldp	x29, x30, [sp], #48
  40a044:	ret
  40a048:	sub	sp, sp, #0xa0
  40a04c:	stp	x26, x25, [sp, #96]
  40a050:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xe17c>
  40a054:	stp	x28, x27, [sp, #80]
  40a058:	stp	x24, x23, [sp, #112]
  40a05c:	stp	x22, x21, [sp, #128]
  40a060:	stp	x20, x19, [sp, #144]
  40a064:	mov	x19, x0
  40a068:	mov	w24, wzr
  40a06c:	mov	w8, wzr
  40a070:	add	x28, x0, #0x51c
  40a074:	mov	w23, #0x109                 	// #265
  40a078:	add	x26, x26, #0x8e0
  40a07c:	mov	w25, #0x106                 	// #262
  40a080:	mov	w22, #0x1                   	// #1
  40a084:	stp	x29, x30, [sp, #64]
  40a088:	add	x29, sp, #0x40
  40a08c:	ldr	x9, [x19, #40]
  40a090:	cbz	x9, 40a80c <wcrtomb@plt+0x79dc>
  40a094:	mov	x0, x19
  40a098:	mov	w27, w8
  40a09c:	bl	40c448 <wcrtomb@plt+0x9618>
  40a0a0:	sub	w8, w0, #0xa
  40a0a4:	mov	w20, w0
  40a0a8:	cmp	w8, #0x72
  40a0ac:	b.hi	40a4d8 <wcrtomb@plt+0x76a8>  // b.pmore
  40a0b0:	adr	x9, 40a0c0 <wcrtomb@plt+0x7290>
  40a0b4:	ldrh	w10, [x26, x8, lsl #1]
  40a0b8:	add	x9, x9, x10, lsl #2
  40a0bc:	br	x9
  40a0c0:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a0c4:	ldrb	w8, [x19, #449]
  40a0c8:	tbnz	w8, #6, 40a4d8 <wcrtomb@plt+0x76a8>
  40a0cc:	mov	w8, #0x112                 	// #274
  40a0d0:	strb	wzr, [x19, #120]
  40a0d4:	str	x8, [x19, #48]
  40a0d8:	mov	w8, #0x1                   	// #1
  40a0dc:	mov	w21, #0x112                 	// #274
  40a0e0:	b	40a540 <wcrtomb@plt+0x7710>
  40a0e4:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a0e8:	ldrb	w8, [x19, #450]
  40a0ec:	tbnz	w8, #3, 40a4d8 <wcrtomb@plt+0x76a8>
  40a0f0:	ldrb	w8, [x19, #1048]
  40a0f4:	cbz	w8, 40a584 <wcrtomb@plt+0x7754>
  40a0f8:	adrp	x8, 420000 <_obstack_memory_used@@Base+0xe17c>
  40a0fc:	cmp	w20, #0x73
  40a100:	add	x8, x8, #0xd55
  40a104:	b	40a128 <wcrtomb@plt+0x72f8>
  40a108:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a10c:	ldrb	w8, [x19, #450]
  40a110:	tbnz	w8, #3, 40a4d8 <wcrtomb@plt+0x76a8>
  40a114:	ldrb	w8, [x19, #1048]
  40a118:	cbz	w8, 40a5f8 <wcrtomb@plt+0x77c8>
  40a11c:	adrp	x8, 420000 <_obstack_memory_used@@Base+0xe17c>
  40a120:	cmp	w20, #0x77
  40a124:	add	x8, x8, #0xd61
  40a128:	cinc	x2, x8, eq  // eq = none
  40a12c:	add	x1, sp, #0x20
  40a130:	mov	x0, x19
  40a134:	bl	40c5b8 <wcrtomb@plt+0x9788>
  40a138:	mov	x0, x19
  40a13c:	bl	40c5f4 <wcrtomb@plt+0x97c4>
  40a140:	str	x0, [x19, #48]
  40a144:	add	x1, sp, #0x20
  40a148:	mov	x0, x19
  40a14c:	bl	40cb90 <wcrtomb@plt+0x9d60>
  40a150:	ldr	x21, [x19, #48]
  40a154:	strb	wzr, [x19, #120]
  40a158:	b	40a53c <wcrtomb@plt+0x770c>
  40a15c:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a160:	ldrb	w8, [x19, #450]
  40a164:	tbnz	w8, #3, 40a4d8 <wcrtomb@plt+0x76a8>
  40a168:	mov	w8, #0x10f                 	// #271
  40a16c:	str	x8, [x19, #48]
  40a170:	mov	w8, #0x1                   	// #1
  40a174:	mov	w21, #0x10f                 	// #271
  40a178:	b	40a540 <wcrtomb@plt+0x7710>
  40a17c:	tbnz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a180:	mov	x0, x19
  40a184:	strb	wzr, [x19, #120]
  40a188:	bl	40c5f4 <wcrtomb@plt+0x97c4>
  40a18c:	mov	x21, x0
  40a190:	str	x0, [x19, #48]
  40a194:	b	40a53c <wcrtomb@plt+0x770c>
  40a198:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a19c:	ldrb	w8, [x19, #450]
  40a1a0:	tbnz	w8, #3, 40a4d8 <wcrtomb@plt+0x76a8>
  40a1a4:	b	40a570 <wcrtomb@plt+0x7740>
  40a1a8:	ldr	x8, [x19, #448]
  40a1ac:	tbnz	w8, #10, 40a4d8 <wcrtomb@plt+0x76a8>
  40a1b0:	ubfx	x9, x8, #1, #1
  40a1b4:	eor	w9, w24, w9
  40a1b8:	tbnz	w9, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a1bc:	tbnz	w8, #4, 40a1c8 <wcrtomb@plt+0x7398>
  40a1c0:	ldrb	w8, [x19, #120]
  40a1c4:	cbnz	w8, 40a4d8 <wcrtomb@plt+0x76a8>
  40a1c8:	mov	w8, #0x101                 	// #257
  40a1cc:	str	x8, [x19, #48]
  40a1d0:	mov	w8, #0x1                   	// #1
  40a1d4:	mov	w21, #0x101                 	// #257
  40a1d8:	b	40a540 <wcrtomb@plt+0x7710>
  40a1dc:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a1e0:	ldrb	w8, [x19, #450]
  40a1e4:	tbz	w8, #3, 40a304 <wcrtomb@plt+0x74d4>
  40a1e8:	b	40a4d8 <wcrtomb@plt+0x76a8>
  40a1ec:	tbnz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a1f0:	ldrb	w8, [x19, #448]
  40a1f4:	tbnz	w8, #4, 40a200 <wcrtomb@plt+0x73d0>
  40a1f8:	ldrb	w8, [x19, #120]
  40a1fc:	cbnz	w8, 40a4d8 <wcrtomb@plt+0x76a8>
  40a200:	mov	w8, #0x102                 	// #258
  40a204:	str	x8, [x19, #48]
  40a208:	mov	w8, #0x1                   	// #1
  40a20c:	mov	w21, #0x102                 	// #258
  40a210:	b	40a540 <wcrtomb@plt+0x7710>
  40a214:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a218:	ldrb	w8, [x19, #450]
  40a21c:	tbnz	w8, #3, 40a4d8 <wcrtomb@plt+0x76a8>
  40a220:	mov	w8, #0x110                 	// #272
  40a224:	str	x8, [x19, #48]
  40a228:	mov	w8, #0x1                   	// #1
  40a22c:	mov	w21, #0x110                 	// #272
  40a230:	b	40a540 <wcrtomb@plt+0x7710>
  40a234:	ldr	x8, [x19, #448]
  40a238:	tbnz	w8, #10, 40a4d8 <wcrtomb@plt+0x76a8>
  40a23c:	and	w9, w24, #0x1
  40a240:	bic	w8, w22, w8, lsr #15
  40a244:	cmp	w8, w9
  40a248:	b.eq	40a268 <wcrtomb@plt+0x7438>  // b.none
  40a24c:	b	40a4d8 <wcrtomb@plt+0x76a8>
  40a250:	ldr	x8, [x19, #448]
  40a254:	and	x8, x8, #0xc00
  40a258:	cmp	x8, #0x800
  40a25c:	cset	w8, ne  // ne = any
  40a260:	orr	w8, w24, w8
  40a264:	tbnz	w8, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a268:	mov	w8, #0x1                   	// #1
  40a26c:	str	x25, [x19, #48]
  40a270:	strb	w8, [x19, #120]
  40a274:	mov	w21, #0x106                 	// #262
  40a278:	b	40a540 <wcrtomb@plt+0x7710>
  40a27c:	tbnz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a280:	ldr	x8, [x19, #448]
  40a284:	tbnz	w8, #3, 40a304 <wcrtomb@plt+0x74d4>
  40a288:	ldr	x9, [x19, #40]
  40a28c:	cbz	x9, 40a304 <wcrtomb@plt+0x74d4>
  40a290:	bic	w10, w22, w8, lsr #13
  40a294:	cmp	x9, x10
  40a298:	b.le	40a2bc <wcrtomb@plt+0x748c>
  40a29c:	ldr	x11, [x19, #32]
  40a2a0:	ldrb	w12, [x11]
  40a2a4:	cmp	w12, #0x5c
  40a2a8:	cset	w12, eq  // eq = none
  40a2ac:	and	x10, x10, x12
  40a2b0:	ldrb	w10, [x11, x10]
  40a2b4:	cmp	w10, #0x29
  40a2b8:	b.eq	40a304 <wcrtomb@plt+0x74d4>  // b.none
  40a2bc:	bic	w10, w22, w8, lsr #15
  40a2c0:	cmp	x9, x10
  40a2c4:	b.le	40a2e8 <wcrtomb@plt+0x74b8>
  40a2c8:	ldr	x11, [x19, #32]
  40a2cc:	ldrb	w12, [x11]
  40a2d0:	cmp	w12, #0x5c
  40a2d4:	cset	w12, eq  // eq = none
  40a2d8:	and	x10, x10, x12
  40a2dc:	ldrb	w10, [x11, x10]
  40a2e0:	cmp	w10, #0x7c
  40a2e4:	b.eq	40a304 <wcrtomb@plt+0x74d4>  // b.none
  40a2e8:	tbz	w8, #11, 40a4d8 <wcrtomb@plt+0x76a8>
  40a2ec:	cmp	x9, #0x1
  40a2f0:	b.lt	40a4d8 <wcrtomb@plt+0x76a8>  // b.tstop
  40a2f4:	ldr	x8, [x19, #32]
  40a2f8:	ldrb	w8, [x8]
  40a2fc:	cmp	w8, #0xa
  40a300:	b.ne	40a4d8 <wcrtomb@plt+0x76a8>  // b.any
  40a304:	mov	w8, #0x10d                 	// #269
  40a308:	str	x8, [x19, #48]
  40a30c:	mov	w8, #0x1                   	// #1
  40a310:	mov	w21, #0x10d                 	// #269
  40a314:	b	40a540 <wcrtomb@plt+0x7710>
  40a318:	ldr	x8, [x19, #448]
  40a31c:	tbnz	w8, #10, 40a4d8 <wcrtomb@plt+0x76a8>
  40a320:	ubfx	x9, x8, #1, #1
  40a324:	eor	w9, w24, w9
  40a328:	tbnz	w9, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a32c:	tbnz	w8, #4, 40a338 <wcrtomb@plt+0x7508>
  40a330:	ldrb	w8, [x19, #120]
  40a334:	cbnz	w8, 40a4d8 <wcrtomb@plt+0x76a8>
  40a338:	mov	w8, #0x103                 	// #259
  40a33c:	str	x8, [x19, #48]
  40a340:	mov	w8, #0x1                   	// #1
  40a344:	mov	w21, #0x103                 	// #259
  40a348:	b	40a540 <wcrtomb@plt+0x7710>
  40a34c:	tbnz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a350:	ldr	x8, [x19, #24]
  40a354:	tbz	x8, #63, 40a6b4 <wcrtomb@plt+0x7884>
  40a358:	add	x0, sp, #0x20
  40a35c:	bl	40c4c0 <wcrtomb@plt+0x9690>
  40a360:	ldrb	w8, [x19, #448]
  40a364:	tbz	w8, #6, 40a64c <wcrtomb@plt+0x781c>
  40a368:	ldrb	w8, [x19, #448]
  40a36c:	tbnz	w8, #7, 40a660 <wcrtomb@plt+0x7830>
  40a370:	ldrb	w8, [x19, #1048]
  40a374:	cbnz	w8, 40a674 <wcrtomb@plt+0x7844>
  40a378:	b	40a6a4 <wcrtomb@plt+0x7874>
  40a37c:	ldr	w8, [x19, #448]
  40a380:	and	w9, w24, #0x1
  40a384:	bic	w8, w22, w8, lsr #13
  40a388:	cmp	w8, w9
  40a38c:	b.ne	40a4d8 <wcrtomb@plt+0x76a8>  // b.any
  40a390:	ldr	x9, [x19, #56]
  40a394:	mov	w8, #0x1                   	// #1
  40a398:	mov	w10, #0x107                 	// #263
  40a39c:	strb	w8, [x19, #120]
  40a3a0:	add	x9, x9, #0x1
  40a3a4:	stp	x10, x9, [x19, #48]
  40a3a8:	mov	w21, #0x107                 	// #263
  40a3ac:	b	40a540 <wcrtomb@plt+0x7710>
  40a3b0:	ldr	x10, [x19, #448]
  40a3b4:	tbz	w10, #9, 40a4d8 <wcrtomb@plt+0x76a8>
  40a3b8:	and	w8, w24, #0x1
  40a3bc:	bic	w9, w22, w10, lsr #12
  40a3c0:	cmp	w9, w8
  40a3c4:	b.ne	40a4d8 <wcrtomb@plt+0x76a8>  // b.any
  40a3c8:	tbnz	w10, #4, 40a3d4 <wcrtomb@plt+0x75a4>
  40a3cc:	ldrb	w8, [x19, #120]
  40a3d0:	cbnz	w8, 40a4d8 <wcrtomb@plt+0x76a8>
  40a3d4:	ldp	x23, x25, [x19, #32]
  40a3d8:	mov	x8, #0xffffffffffffffff    	// #-1
  40a3dc:	str	x8, [x19, #64]
  40a3e0:	stp	x10, x23, [sp, #8]
  40a3e4:	str	x25, [sp, #24]
  40a3e8:	cbnz	x25, 40a41c <wcrtomb@plt+0x75ec>
  40a3ec:	b	40a760 <wcrtomb@plt+0x7930>
  40a3f0:	mov	w9, #0xa                   	// #10
  40a3f4:	madd	w8, w8, w9, w22
  40a3f8:	mov	w10, #0x8030                	// #32816
  40a3fc:	sub	w9, w8, #0x30
  40a400:	cmp	w8, w10
  40a404:	mov	w8, #0x8000                	// #32768
  40a408:	csel	w8, w8, w9, gt
  40a40c:	subs	x25, x25, #0x1
  40a410:	add	x23, x23, #0x1
  40a414:	str	w8, [x19, #64]
  40a418:	b.eq	40a760 <wcrtomb@plt+0x7930>  // b.none
  40a41c:	ldrb	w22, [x23]
  40a420:	mov	w0, w22
  40a424:	bl	40c4ac <wcrtomb@plt+0x967c>
  40a428:	tbz	w0, #0, 40a6d4 <wcrtomb@plt+0x78a4>
  40a42c:	ldr	w8, [x19, #64]
  40a430:	tbz	w8, #31, 40a3f0 <wcrtomb@plt+0x75c0>
  40a434:	sub	w8, w22, #0x30
  40a438:	b	40a40c <wcrtomb@plt+0x75dc>
  40a43c:	ldr	x8, [x19, #448]
  40a440:	and	w9, w24, #0x1
  40a444:	bic	w10, w22, w8, lsr #13
  40a448:	cmp	w10, w9
  40a44c:	b.ne	40a4d8 <wcrtomb@plt+0x76a8>  // b.any
  40a450:	ldr	x9, [x19, #56]
  40a454:	tbz	w8, #17, 40a45c <wcrtomb@plt+0x762c>
  40a458:	cbz	x9, 40a4d8 <wcrtomb@plt+0x76a8>
  40a45c:	sub	x9, x9, #0x1
  40a460:	str	x9, [x19, #56]
  40a464:	mov	w9, #0x108                 	// #264
  40a468:	strb	wzr, [x19, #120]
  40a46c:	mov	w8, #0x1                   	// #1
  40a470:	str	x9, [x19, #48]
  40a474:	mov	w21, #0x108                 	// #264
  40a478:	b	40a540 <wcrtomb@plt+0x7710>
  40a47c:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a480:	ldrb	w8, [x19, #450]
  40a484:	tbnz	w8, #3, 40a4d8 <wcrtomb@plt+0x76a8>
  40a488:	mov	w8, #0x10e                 	// #270
  40a48c:	str	x8, [x19, #48]
  40a490:	mov	w8, #0x1                   	// #1
  40a494:	mov	w21, #0x10e                 	// #270
  40a498:	b	40a540 <wcrtomb@plt+0x7710>
  40a49c:	tbz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a4a0:	ldrb	w8, [x19, #450]
  40a4a4:	tbnz	w8, #3, 40a4d8 <wcrtomb@plt+0x76a8>
  40a4a8:	mov	w8, #0x111                 	// #273
  40a4ac:	str	x8, [x19, #48]
  40a4b0:	mov	w8, #0x1                   	// #1
  40a4b4:	mov	w21, #0x111                 	// #273
  40a4b8:	b	40a540 <wcrtomb@plt+0x7710>
  40a4bc:	tbnz	w24, #0, 40a4d8 <wcrtomb@plt+0x76a8>
  40a4c0:	ldr	x8, [x19, #40]
  40a4c4:	cbz	x8, 40a854 <wcrtomb@plt+0x7a24>
  40a4c8:	mov	w8, wzr
  40a4cc:	mov	w24, #0x1                   	// #1
  40a4d0:	b	40a540 <wcrtomb@plt+0x7710>
  40a4d4:	tbz	w24, #0, 40a550 <wcrtomb@plt+0x7720>
  40a4d8:	ldrb	w8, [x19, #1048]
  40a4dc:	strb	wzr, [x19, #120]
  40a4e0:	cbz	w8, 40a4f4 <wcrtomb@plt+0x76c4>
  40a4e4:	str	x23, [x19, #48]
  40a4e8:	mov	w8, #0x1                   	// #1
  40a4ec:	mov	w21, #0x109                 	// #265
  40a4f0:	b	40a540 <wcrtomb@plt+0x7710>
  40a4f4:	ldrb	w8, [x19, #457]
  40a4f8:	cbz	w8, 40a50c <wcrtomb@plt+0x76dc>
  40a4fc:	bl	402bb0 <__ctype_b_loc@plt>
  40a500:	ldr	x8, [x0]
  40a504:	ldrh	w8, [x8, w20, sxtw #1]
  40a508:	tbnz	w8, #10, 40a514 <wcrtomb@plt+0x76e4>
  40a50c:	sxtw	x21, w20
  40a510:	b	40a538 <wcrtomb@plt+0x7708>
  40a514:	add	x0, sp, #0x20
  40a518:	bl	40c58c <wcrtomb@plt+0x975c>
  40a51c:	add	x1, sp, #0x20
  40a520:	mov	w0, w20
  40a524:	bl	40cba4 <wcrtomb@plt+0x9d74>
  40a528:	add	x1, sp, #0x20
  40a52c:	mov	x0, x19
  40a530:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40a534:	add	x21, x0, #0x114
  40a538:	str	x21, [x19, #48]
  40a53c:	mov	w8, #0x1                   	// #1
  40a540:	cbnz	w8, 40a818 <wcrtomb@plt+0x79e8>
  40a544:	add	w8, w27, #0x1
  40a548:	cbz	w27, 40a08c <wcrtomb@plt+0x725c>
  40a54c:	b	40a844 <wcrtomb@plt+0x7a14>
  40a550:	ldrb	w8, [x19, #448]
  40a554:	tbnz	w8, #3, 40a570 <wcrtomb@plt+0x7740>
  40a558:	ldr	x8, [x19, #48]
  40a55c:	sub	x9, x8, #0x106
  40a560:	cmp	x9, #0x2
  40a564:	b.cc	40a570 <wcrtomb@plt+0x7740>  // b.lo, b.ul, b.last
  40a568:	cmn	x8, #0x1
  40a56c:	b.ne	40a4d8 <wcrtomb@plt+0x76a8>  // b.any
  40a570:	mov	w8, #0x10c                 	// #268
  40a574:	str	x8, [x19, #48]
  40a578:	mov	w8, #0x1                   	// #1
  40a57c:	mov	w21, #0x10c                 	// #268
  40a580:	b	40a540 <wcrtomb@plt+0x7710>
  40a584:	add	x0, sp, #0x20
  40a588:	bl	40c58c <wcrtomb@plt+0x975c>
  40a58c:	bl	402bb0 <__ctype_b_loc@plt>
  40a590:	mov	x21, x0
  40a594:	mov	x22, xzr
  40a598:	b	40a5a8 <wcrtomb@plt+0x7778>
  40a59c:	add	x22, x22, #0x1
  40a5a0:	cmp	x22, #0x100
  40a5a4:	b.eq	40a5c4 <wcrtomb@plt+0x7794>  // b.none
  40a5a8:	ldr	x8, [x21]
  40a5ac:	ldrh	w8, [x8, x22, lsl #1]
  40a5b0:	tbz	w8, #13, 40a59c <wcrtomb@plt+0x776c>
  40a5b4:	add	x1, sp, #0x20
  40a5b8:	mov	w0, w22
  40a5bc:	bl	40c078 <wcrtomb@plt+0x9248>
  40a5c0:	b	40a59c <wcrtomb@plt+0x776c>
  40a5c4:	cmp	w20, #0x53
  40a5c8:	b.ne	40a5d4 <wcrtomb@plt+0x77a4>  // b.any
  40a5cc:	add	x0, sp, #0x20
  40a5d0:	bl	40c598 <wcrtomb@plt+0x9768>
  40a5d4:	add	x1, sp, #0x20
  40a5d8:	mov	x0, x19
  40a5dc:	strb	wzr, [x19, #120]
  40a5e0:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40a5e4:	add	x21, x0, #0x114
  40a5e8:	str	x21, [x19, #48]
  40a5ec:	mov	w8, #0x1                   	// #1
  40a5f0:	mov	w22, #0x1                   	// #1
  40a5f4:	b	40a540 <wcrtomb@plt+0x7710>
  40a5f8:	add	x0, sp, #0x20
  40a5fc:	bl	40c58c <wcrtomb@plt+0x975c>
  40a600:	mov	x21, xzr
  40a604:	b	40a614 <wcrtomb@plt+0x77e4>
  40a608:	add	x21, x21, #0x1
  40a60c:	cmp	x21, #0x100
  40a610:	b.eq	40a634 <wcrtomb@plt+0x7804>  // b.none
  40a614:	add	x8, x19, x21
  40a618:	ldrb	w8, [x8, #460]
  40a61c:	cmp	w8, #0x2
  40a620:	b.ne	40a608 <wcrtomb@plt+0x77d8>  // b.any
  40a624:	add	x1, sp, #0x20
  40a628:	mov	w0, w21
  40a62c:	bl	40c078 <wcrtomb@plt+0x9248>
  40a630:	b	40a608 <wcrtomb@plt+0x77d8>
  40a634:	cmp	w20, #0x57
  40a638:	b.ne	40a644 <wcrtomb@plt+0x7814>  // b.any
  40a63c:	add	x0, sp, #0x20
  40a640:	bl	40c598 <wcrtomb@plt+0x9768>
  40a644:	strb	wzr, [x19, #120]
  40a648:	b	40a528 <wcrtomb@plt+0x76f8>
  40a64c:	add	x1, sp, #0x20
  40a650:	mov	w0, #0xa                   	// #10
  40a654:	bl	40c4cc <wcrtomb@plt+0x969c>
  40a658:	ldrb	w8, [x19, #448]
  40a65c:	tbz	w8, #7, 40a370 <wcrtomb@plt+0x7540>
  40a660:	add	x1, sp, #0x20
  40a664:	mov	w0, wzr
  40a668:	bl	40c4cc <wcrtomb@plt+0x969c>
  40a66c:	ldrb	w8, [x19, #1048]
  40a670:	cbz	w8, 40a6a4 <wcrtomb@plt+0x7874>
  40a674:	mov	x20, xzr
  40a678:	b	40a688 <wcrtomb@plt+0x7858>
  40a67c:	add	x20, x20, #0x1
  40a680:	cmp	x20, #0x100
  40a684:	b.eq	40a6a4 <wcrtomb@plt+0x7874>  // b.none
  40a688:	ldr	w8, [x28, x20, lsl #2]
  40a68c:	cmn	w8, #0x1
  40a690:	b.ne	40a67c <wcrtomb@plt+0x784c>  // b.any
  40a694:	add	x1, sp, #0x20
  40a698:	mov	w0, w20
  40a69c:	bl	40c4cc <wcrtomb@plt+0x969c>
  40a6a0:	b	40a67c <wcrtomb@plt+0x784c>
  40a6a4:	add	x1, sp, #0x20
  40a6a8:	mov	x0, x19
  40a6ac:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40a6b0:	str	x0, [x19, #24]
  40a6b4:	ldrb	w8, [x19, #1048]
  40a6b8:	strb	wzr, [x19, #120]
  40a6bc:	cbz	w8, 40a6c8 <wcrtomb@plt+0x7898>
  40a6c0:	mov	w21, #0x10a                 	// #266
  40a6c4:	b	40a538 <wcrtomb@plt+0x7708>
  40a6c8:	ldr	x8, [x19, #24]
  40a6cc:	add	x21, x8, #0x114
  40a6d0:	b	40a538 <wcrtomb@plt+0x7708>
  40a6d4:	ldr	w8, [x19, #64]
  40a6d8:	cmp	w22, #0x2c
  40a6dc:	b.ne	40a748 <wcrtomb@plt+0x7918>  // b.any
  40a6e0:	str	x28, [sp]
  40a6e4:	tbz	w8, #31, 40a6ec <wcrtomb@plt+0x78bc>
  40a6e8:	str	wzr, [x19, #64]
  40a6ec:	cmp	x25, #0x1
  40a6f0:	b.eq	40a758 <wcrtomb@plt+0x7928>  // b.none
  40a6f4:	mov	w28, #0x1                   	// #1
  40a6f8:	b	40a728 <wcrtomb@plt+0x78f8>
  40a6fc:	mov	w9, #0xa                   	// #10
  40a700:	madd	w8, w8, w9, w22
  40a704:	mov	w10, #0x8030                	// #32816
  40a708:	sub	w9, w8, #0x30
  40a70c:	cmp	w8, w10
  40a710:	mov	w8, #0x8000                	// #32768
  40a714:	csel	w8, w8, w9, gt
  40a718:	add	x28, x28, #0x1
  40a71c:	cmp	x25, x28
  40a720:	str	w8, [x19, #68]
  40a724:	b.eq	40a750 <wcrtomb@plt+0x7920>  // b.none
  40a728:	ldrb	w22, [x23, x28]
  40a72c:	mov	w0, w22
  40a730:	bl	40c4ac <wcrtomb@plt+0x967c>
  40a734:	tbz	w0, #0, 40a750 <wcrtomb@plt+0x7920>
  40a738:	ldr	w8, [x19, #68]
  40a73c:	tbz	w8, #31, 40a6fc <wcrtomb@plt+0x78cc>
  40a740:	sub	w8, w22, #0x30
  40a744:	b	40a718 <wcrtomb@plt+0x78e8>
  40a748:	str	w8, [x19, #68]
  40a74c:	b	40a760 <wcrtomb@plt+0x7930>
  40a750:	add	x23, x23, x28
  40a754:	b	40a75c <wcrtomb@plt+0x792c>
  40a758:	add	x23, x23, #0x1
  40a75c:	ldr	x28, [sp]
  40a760:	ldp	x9, x8, [sp, #16]
  40a764:	add	x9, x9, x8
  40a768:	tbz	w24, #0, 40a78c <wcrtomb@plt+0x795c>
  40a76c:	cmp	x23, x9
  40a770:	mov	w25, #0x106                 	// #262
  40a774:	mov	w22, #0x1                   	// #1
  40a778:	b.eq	40a7c0 <wcrtomb@plt+0x7990>  // b.none
  40a77c:	ldrb	w8, [x23], #1
  40a780:	cmp	w8, #0x5c
  40a784:	b.eq	40a794 <wcrtomb@plt+0x7964>  // b.none
  40a788:	b	40a7c0 <wcrtomb@plt+0x7990>
  40a78c:	mov	w25, #0x106                 	// #262
  40a790:	mov	w22, #0x1                   	// #1
  40a794:	cmp	x23, x9
  40a798:	b.eq	40a7c0 <wcrtomb@plt+0x7990>  // b.none
  40a79c:	ldrb	w8, [x23], #1
  40a7a0:	cmp	w8, #0x7d
  40a7a4:	b.ne	40a7c0 <wcrtomb@plt+0x7990>  // b.any
  40a7a8:	ldr	w8, [x19, #64]
  40a7ac:	tbnz	w8, #31, 40a7c0 <wcrtomb@plt+0x7990>
  40a7b0:	ldr	w10, [x19, #68]
  40a7b4:	tbnz	w10, #31, 40a7f4 <wcrtomb@plt+0x79c4>
  40a7b8:	cmp	w8, w10
  40a7bc:	b.le	40a7f4 <wcrtomb@plt+0x79c4>
  40a7c0:	ldr	x8, [sp, #8]
  40a7c4:	tbz	w8, #21, 40a860 <wcrtomb@plt+0x7a30>
  40a7c8:	mov	w8, #0x6                   	// #6
  40a7cc:	mov	w23, #0x109                 	// #265
  40a7d0:	cmp	w8, #0x6
  40a7d4:	b.eq	40a4d8 <wcrtomb@plt+0x76a8>  // b.none
  40a7d8:	cbnz	w8, 40a540 <wcrtomb@plt+0x7710>
  40a7dc:	mov	w8, #0x104                 	// #260
  40a7e0:	strb	wzr, [x19, #120]
  40a7e4:	str	x8, [x19, #48]
  40a7e8:	mov	w8, #0x1                   	// #1
  40a7ec:	mov	w21, #0x104                 	// #260
  40a7f0:	b	40a540 <wcrtomb@plt+0x7710>
  40a7f4:	cmp	w10, #0x8, lsl #12
  40a7f8:	b.ge	40a86c <wcrtomb@plt+0x7a3c>  // b.tcont
  40a7fc:	mov	w8, wzr
  40a800:	sub	x9, x9, x23
  40a804:	stp	x23, x9, [x19, #32]
  40a808:	b	40a7cc <wcrtomb@plt+0x799c>
  40a80c:	mov	x21, #0xffffffffffffffff    	// #-1
  40a810:	str	x21, [x19, #48]
  40a814:	mov	w8, #0x1                   	// #1
  40a818:	cmp	w8, #0x2
  40a81c:	b.eq	40a850 <wcrtomb@plt+0x7a20>  // b.none
  40a820:	mov	x0, x21
  40a824:	ldp	x20, x19, [sp, #144]
  40a828:	ldp	x22, x21, [sp, #128]
  40a82c:	ldp	x24, x23, [sp, #112]
  40a830:	ldp	x26, x25, [sp, #96]
  40a834:	ldp	x28, x27, [sp, #80]
  40a838:	ldp	x29, x30, [sp, #64]
  40a83c:	add	sp, sp, #0xa0
  40a840:	ret
  40a844:	mov	w8, #0x2                   	// #2
  40a848:	cmp	w8, #0x2
  40a84c:	b.ne	40a820 <wcrtomb@plt+0x79f0>  // b.any
  40a850:	bl	402b00 <abort@plt>
  40a854:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40a858:	add	x1, x1, #0xd0e
  40a85c:	b	40a874 <wcrtomb@plt+0x7a44>
  40a860:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40a864:	add	x1, x1, #0xd22
  40a868:	b	40a874 <wcrtomb@plt+0x7a44>
  40a86c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40a870:	add	x1, x1, #0xd3a
  40a874:	mov	w2, #0x5                   	// #5
  40a878:	mov	x0, xzr
  40a87c:	bl	402d10 <dcgettext@plt>
  40a880:	bl	408270 <wcrtomb@plt+0x5440>
  40a884:	stp	x29, x30, [sp, #-32]!
  40a888:	str	x19, [sp, #16]
  40a88c:	mov	x29, sp
  40a890:	mov	x19, x0
  40a894:	bl	40cde8 <wcrtomb@plt+0x9fb8>
  40a898:	ldr	x8, [x19, #128]
  40a89c:	cmp	x8, #0x106
  40a8a0:	b.ne	40a8c8 <wcrtomb@plt+0x7a98>  // b.any
  40a8a4:	mov	x0, x19
  40a8a8:	bl	40a048 <wcrtomb@plt+0x7218>
  40a8ac:	str	x0, [x19, #128]
  40a8b0:	mov	x0, x19
  40a8b4:	bl	40cde8 <wcrtomb@plt+0x9fb8>
  40a8b8:	mov	w1, #0x106                 	// #262
  40a8bc:	mov	x0, x19
  40a8c0:	bl	409f84 <wcrtomb@plt+0x7154>
  40a8c4:	b	40a898 <wcrtomb@plt+0x7a68>
  40a8c8:	ldr	x19, [sp, #16]
  40a8cc:	ldp	x29, x30, [sp], #32
  40a8d0:	ret
  40a8d4:	stp	x29, x30, [sp, #-16]!
  40a8d8:	ldr	x8, [x0, #1040]
  40a8dc:	and	w3, w3, #0x1
  40a8e0:	mov	x29, sp
  40a8e4:	blr	x8
  40a8e8:	ldp	x29, x30, [sp], #16
  40a8ec:	ret
  40a8f0:	ldr	x0, [x0, #288]
  40a8f4:	ret
  40a8f8:	ldrb	w0, [x0, #192]
  40a8fc:	ret
  40a900:	stp	x29, x30, [sp, #-32]!
  40a904:	stp	x20, x19, [sp, #16]
  40a908:	mov	w19, w3
  40a90c:	mov	x20, x2
  40a910:	mov	x29, sp
  40a914:	cbz	x0, 40a920 <wcrtomb@plt+0x7af0>
  40a918:	mov	x2, x20
  40a91c:	bl	409eb4 <wcrtomb@plt+0x7084>
  40a920:	mov	x0, x20
  40a924:	bl	40a984 <wcrtomb@plt+0x7b54>
  40a928:	mov	x0, x20
  40a92c:	bl	40ab74 <wcrtomb@plt+0x7d44>
  40a930:	tbz	w0, #0, 40a954 <wcrtomb@plt+0x7b24>
  40a934:	mov	x0, x20
  40a938:	bl	40abd0 <wcrtomb@plt+0x7da0>
  40a93c:	and	w1, w19, #0x1
  40a940:	mov	x0, x20
  40a944:	bl	40ac80 <wcrtomb@plt+0x7e50>
  40a948:	ldr	x0, [x20, #288]
  40a94c:	cbnz	x0, 40a968 <wcrtomb@plt+0x7b38>
  40a950:	b	40a978 <wcrtomb@plt+0x7b48>
  40a954:	adrp	x8, 40b000 <wcrtomb@plt+0x81d0>
  40a958:	add	x8, x8, #0xec
  40a95c:	str	x8, [x20, #1040]
  40a960:	ldr	x0, [x20, #288]
  40a964:	cbz	x0, 40a978 <wcrtomb@plt+0x7b48>
  40a968:	mov	w8, #0x1                   	// #1
  40a96c:	and	w1, w19, #0x1
  40a970:	strb	w8, [x20, #192]
  40a974:	bl	40ac80 <wcrtomb@plt+0x7e50>
  40a978:	ldp	x20, x19, [sp, #16]
  40a97c:	ldp	x29, x30, [sp], #32
  40a980:	ret
  40a984:	sub	sp, sp, #0x80
  40a988:	stp	x29, x30, [sp, #32]
  40a98c:	str	x27, [sp, #48]
  40a990:	stp	x26, x25, [sp, #64]
  40a994:	stp	x24, x23, [sp, #80]
  40a998:	stp	x22, x21, [sp, #96]
  40a99c:	stp	x20, x19, [sp, #112]
  40a9a0:	add	x29, sp, #0x20
  40a9a4:	mov	x20, x0
  40a9a8:	bl	40be9c <wcrtomb@plt+0x906c>
  40a9ac:	mov	w2, #0x920                 	// #2336
  40a9b0:	mov	x1, x20
  40a9b4:	mov	x19, x0
  40a9b8:	bl	402710 <memcpy@plt>
  40a9bc:	adrp	x8, 40c000 <wcrtomb@plt+0x91d0>
  40a9c0:	add	x8, x8, #0x1c
  40a9c4:	add	x9, x19, #0x118
  40a9c8:	movi	v0.2d, #0x0
  40a9cc:	strb	wzr, [x19, #1048]
  40a9d0:	str	xzr, [x19, #320]
  40a9d4:	str	x8, [x19, #1040]
  40a9d8:	stp	q0, q0, [x9]
  40a9dc:	ldr	x0, [x19, #16]
  40a9e0:	mov	w1, #0x20                  	// #32
  40a9e4:	stp	xzr, xzr, [x19, #344]
  40a9e8:	str	xzr, [x19, #336]
  40a9ec:	stp	q0, q0, [x19, #368]
  40a9f0:	bl	41189c <wcrtomb@plt+0xea6c>
  40a9f4:	str	x0, [x19]
  40a9f8:	ldr	x8, [x20, #8]
  40a9fc:	cbz	x8, 40aa0c <wcrtomb@plt+0x7bdc>
  40aa00:	ldr	x1, [x20]
  40aa04:	lsl	x2, x8, #5
  40aa08:	bl	402710 <memcpy@plt>
  40aa0c:	ldr	x0, [x20, #152]
  40aa10:	mov	w1, #0x10                  	// #16
  40aa14:	bl	41189c <wcrtomb@plt+0xea6c>
  40aa18:	str	x0, [x19, #144]
  40aa1c:	ldr	x8, [x20, #152]
  40aa20:	lsl	x9, x8, #1
  40aa24:	cmp	x8, #0x1
  40aa28:	str	x9, [x19, #160]
  40aa2c:	b.lt	40ab1c <wcrtomb@plt+0x7cec>  // b.tstop
  40aa30:	mov	x22, xzr
  40aa34:	mov	x25, xzr
  40aa38:	mov	w21, wzr
  40aa3c:	mov	w8, wzr
  40aa40:	mov	w23, #0x1                   	// #1
  40aa44:	mov	w24, #0x100                 	// #256
  40aa48:	mov	w26, #0x301                 	// #769
  40aa4c:	mov	w27, #0x102                 	// #258
  40aa50:	b	40aa8c <wcrtomb@plt+0x7c5c>
  40aa54:	ldr	x11, [x19, #144]
  40aa58:	str	x10, [x11, x25, lsl #3]
  40aa5c:	ldr	x9, [x9, x22, lsl #3]
  40aa60:	add	x25, x25, #0x1
  40aa64:	cmp	x9, #0x100
  40aa68:	cset	w10, cc  // cc = lo, ul, last
  40aa6c:	cmp	x9, #0x113
  40aa70:	cset	w9, gt
  40aa74:	orr	w9, w10, w9
  40aa78:	orr	w21, w21, w9
  40aa7c:	ldr	x9, [x20, #152]
  40aa80:	add	x22, x22, #0x1
  40aa84:	cmp	x22, x9
  40aa88:	b.ge	40ab28 <wcrtomb@plt+0x7cf8>  // b.tcont
  40aa8c:	ldr	x9, [x20, #144]
  40aa90:	ldr	x10, [x9, x22, lsl #3]
  40aa94:	sub	x11, x10, #0x10a
  40aa98:	cmp	x11, #0x9
  40aa9c:	b.hi	40aa54 <wcrtomb@plt+0x7c24>  // b.pmore
  40aaa0:	lsl	x12, x23, x11
  40aaa4:	tst	x12, #0xf0
  40aaa8:	b.eq	40aac8 <wcrtomb@plt+0x7c98>  // b.none
  40aaac:	ldrb	w11, [x20, #1048]
  40aab0:	cbz	w11, 40aa54 <wcrtomb@plt+0x7c24>
  40aab4:	ldr	x9, [x19, #144]
  40aab8:	add	x10, x25, #0x1
  40aabc:	str	x24, [x9, x25, lsl #3]
  40aac0:	mov	x25, x10
  40aac4:	b	40aa7c <wcrtomb@plt+0x7c4c>
  40aac8:	lsl	x11, x23, x11
  40aacc:	tst	x11, x26
  40aad0:	b.eq	40aa54 <wcrtomb@plt+0x7c24>  // b.none
  40aad4:	mov	x0, sp
  40aad8:	bl	40c4c0 <wcrtomb@plt+0x9690>
  40aadc:	mov	x1, sp
  40aae0:	mov	x0, x19
  40aae4:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40aae8:	ldr	x8, [x19, #144]
  40aaec:	add	x9, x0, #0x114
  40aaf0:	add	x8, x8, x25, lsl #3
  40aaf4:	stp	x9, x27, [x8]
  40aaf8:	ldr	x8, [x20, #144]
  40aafc:	add	x9, x22, #0x1
  40ab00:	add	x25, x25, #0x2
  40ab04:	ldr	x8, [x8, x9, lsl #3]
  40ab08:	sub	x8, x8, #0x101
  40ab0c:	cmp	x8, #0x3
  40ab10:	cinc	x22, x22, cc  // cc = lo, ul, last
  40ab14:	mov	w8, #0x1                   	// #1
  40ab18:	b	40aa7c <wcrtomb@plt+0x7c4c>
  40ab1c:	mov	w8, wzr
  40ab20:	mov	w21, wzr
  40ab24:	mov	x25, xzr
  40ab28:	str	x25, [x19, #152]
  40ab2c:	tbz	w21, #0, 40ab44 <wcrtomb@plt+0x7d14>
  40ab30:	tbnz	w8, #0, 40ab3c <wcrtomb@plt+0x7d0c>
  40ab34:	ldrb	w8, [x20, #1048]
  40ab38:	cbz	w8, 40ab44 <wcrtomb@plt+0x7d14>
  40ab3c:	str	x19, [x20, #288]
  40ab40:	b	40ab54 <wcrtomb@plt+0x7d24>
  40ab44:	mov	x0, x19
  40ab48:	bl	40b0fc <wcrtomb@plt+0x82cc>
  40ab4c:	mov	x0, x19
  40ab50:	bl	402bd0 <free@plt>
  40ab54:	ldp	x20, x19, [sp, #112]
  40ab58:	ldp	x22, x21, [sp, #96]
  40ab5c:	ldp	x24, x23, [sp, #80]
  40ab60:	ldp	x26, x25, [sp, #64]
  40ab64:	ldr	x27, [sp, #48]
  40ab68:	ldp	x29, x30, [sp, #32]
  40ab6c:	add	sp, sp, #0x80
  40ab70:	ret
  40ab74:	ldr	x8, [x0, #152]
  40ab78:	cmp	x8, #0x1
  40ab7c:	b.lt	40abc8 <wcrtomb@plt+0x7d98>  // b.tstop
  40ab80:	ldr	x8, [x0, #144]
  40ab84:	mov	x9, xzr
  40ab88:	b	40aba4 <wcrtomb@plt+0x7d74>
  40ab8c:	ldrb	w10, [x0, #1048]
  40ab90:	cbnz	w10, 40abc0 <wcrtomb@plt+0x7d90>
  40ab94:	ldr	x10, [x0, #152]
  40ab98:	add	x9, x9, #0x1
  40ab9c:	cmp	x9, x10
  40aba0:	b.ge	40abc8 <wcrtomb@plt+0x7d98>  // b.tcont
  40aba4:	ldr	x10, [x8, x9, lsl #3]
  40aba8:	sub	x11, x10, #0x10e
  40abac:	cmp	x11, #0x4
  40abb0:	b.cc	40ab8c <wcrtomb@plt+0x7d5c>  // b.lo, b.ul, b.last
  40abb4:	sub	x10, x10, #0x112
  40abb8:	cmp	x10, #0x2
  40abbc:	b.cs	40ab94 <wcrtomb@plt+0x7d64>  // b.hs, b.nlast
  40abc0:	mov	w0, wzr
  40abc4:	ret
  40abc8:	mov	w0, #0x1                   	// #1
  40abcc:	ret
  40abd0:	stp	x29, x30, [sp, #-32]!
  40abd4:	ldrb	w8, [x0, #1050]
  40abd8:	str	x19, [sp, #16]
  40abdc:	mov	x29, sp
  40abe0:	cbz	w8, 40ac70 <wcrtomb@plt+0x7e40>
  40abe4:	ldr	x8, [x0, #152]
  40abe8:	mov	x19, x0
  40abec:	cmp	x8, #0x1
  40abf0:	b.lt	40ac38 <wcrtomb@plt+0x7e08>  // b.tstop
  40abf4:	ldr	x9, [x19, #144]
  40abf8:	mov	x8, xzr
  40abfc:	mov	w10, wzr
  40ac00:	ldr	x11, [x9, x8, lsl #3]
  40ac04:	cmp	x11, #0x112
  40ac08:	b.eq	40ac20 <wcrtomb@plt+0x7df0>  // b.none
  40ac0c:	cmp	x11, #0x113
  40ac10:	b.eq	40ac70 <wcrtomb@plt+0x7e40>  // b.none
  40ac14:	cmp	x11, #0x10a
  40ac18:	b.ne	40ac24 <wcrtomb@plt+0x7df4>  // b.any
  40ac1c:	b	40ac7c <wcrtomb@plt+0x7e4c>
  40ac20:	mov	w10, #0x1                   	// #1
  40ac24:	ldr	x11, [x19, #152]
  40ac28:	add	x8, x8, #0x1
  40ac2c:	cmp	x8, x11
  40ac30:	b.lt	40ac00 <wcrtomb@plt+0x7dd0>  // b.tstop
  40ac34:	tbnz	w10, #0, 40ac50 <wcrtomb@plt+0x7e20>
  40ac38:	ldr	x0, [x19, #288]
  40ac3c:	cbz	x0, 40ac50 <wcrtomb@plt+0x7e20>
  40ac40:	bl	40b0fc <wcrtomb@plt+0x82cc>
  40ac44:	ldr	x0, [x19, #288]
  40ac48:	bl	402bd0 <free@plt>
  40ac4c:	str	xzr, [x19, #288]
  40ac50:	mov	x0, x19
  40ac54:	bl	40b260 <wcrtomb@plt+0x8430>
  40ac58:	adrp	x8, 40c000 <wcrtomb@plt+0x91d0>
  40ac5c:	add	x8, x8, #0x1c
  40ac60:	mov	w9, #0x1                   	// #1
  40ac64:	strb	wzr, [x19, #1048]
  40ac68:	str	x8, [x19, #1040]
  40ac6c:	strb	w9, [x19, #192]
  40ac70:	ldr	x19, [sp, #16]
  40ac74:	ldp	x29, x30, [sp], #32
  40ac78:	ret
  40ac7c:	bl	402b00 <abort@plt>
  40ac80:	sub	sp, sp, #0xa0
  40ac84:	stp	x29, x30, [sp, #64]
  40ac88:	stp	x28, x27, [sp, #80]
  40ac8c:	stp	x26, x25, [sp, #96]
  40ac90:	stp	x24, x23, [sp, #112]
  40ac94:	stp	x22, x21, [sp, #128]
  40ac98:	stp	x20, x19, [sp, #144]
  40ac9c:	mov	x19, x0
  40aca0:	ldr	x0, [x0, #176]
  40aca4:	and	w21, w1, #0x1
  40aca8:	mov	w1, #0x20                  	// #32
  40acac:	add	x29, sp, #0x40
  40acb0:	bl	41189c <wcrtomb@plt+0xea6c>
  40acb4:	ldp	x8, x20, [x19, #168]
  40acb8:	str	x0, [sp, #8]
  40acbc:	mov	w1, #0x18                  	// #24
  40acc0:	mov	x0, x8
  40acc4:	bl	41189c <wcrtomb@plt+0xea6c>
  40acc8:	str	x0, [sp]
  40accc:	mov	w1, #0x105                 	// #261
  40acd0:	mov	x0, x19
  40acd4:	bl	409f84 <wcrtomb@plt+0x7154>
  40acd8:	ldr	x1, [x19, #176]
  40acdc:	add	x0, sp, #0x10
  40ace0:	strb	w21, [x19, #328]
  40ace4:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40ace8:	ldr	x0, [x19, #152]
  40acec:	mov	w1, #0x18                  	// #24
  40acf0:	bl	411a14 <wcrtomb@plt+0xebe4>
  40acf4:	ldr	x8, [x19, #152]
  40acf8:	str	x0, [x19, #320]
  40acfc:	cmp	x8, #0x1
  40ad00:	b.lt	40af24 <wcrtomb@plt+0x80f4>  // b.tstop
  40ad04:	ldp	x21, x28, [sp]
  40ad08:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xe17c>
  40ad0c:	mov	x22, xzr
  40ad10:	mov	w24, #0x1                   	// #1
  40ad14:	add	x23, x28, x20, lsl #4
  40ad18:	add	x26, x26, #0x9c6
  40ad1c:	mov	w27, #0x18                  	// #24
  40ad20:	b	40ad60 <wcrtomb@plt+0x7f30>
  40ad24:	cmp	x8, #0x112
  40ad28:	mov	w8, #0x1ff                 	// #511
  40ad2c:	str	x22, [x23]
  40ad30:	str	x22, [x28]
  40ad34:	str	w8, [x23, #8]
  40ad38:	str	w8, [x28, #8]
  40ad3c:	cset	w8, eq  // eq = none
  40ad40:	stp	x24, x24, [x21, #8]
  40ad44:	add	x28, x28, #0x10
  40ad48:	strb	w8, [x21], #24
  40ad4c:	add	x23, x23, #0x10
  40ad50:	ldr	x8, [x19, #152]
  40ad54:	add	x22, x22, #0x1
  40ad58:	cmp	x22, x8
  40ad5c:	b.ge	40af24 <wcrtomb@plt+0x80f4>  // b.tcont
  40ad60:	ldr	x8, [x19, #144]
  40ad64:	ldr	x8, [x8, x22, lsl #3]
  40ad68:	sub	x9, x8, #0x100
  40ad6c:	cmp	x9, #0x6
  40ad70:	b.hi	40ad24 <wcrtomb@plt+0x7ef4>  // b.pmore
  40ad74:	adr	x10, 40ad24 <wcrtomb@plt+0x7ef4>
  40ad78:	ldrb	w11, [x26, x9]
  40ad7c:	add	x10, x10, x11, lsl #2
  40ad80:	br	x10
  40ad84:	ldp	x9, x8, [x21, #-16]
  40ad88:	sub	x10, x28, x9, lsl #4
  40ad8c:	cmp	x8, #0x1
  40ad90:	stp	x10, x9, [x29, #-24]
  40ad94:	b.lt	40addc <wcrtomb@plt+0x7fac>  // b.tstop
  40ad98:	mov	x20, xzr
  40ad9c:	sub	x25, x23, x8, lsl #4
  40ada0:	ldr	x8, [x19, #320]
  40ada4:	ldr	x9, [x25]
  40ada8:	sub	x0, x29, #0x18
  40adac:	add	x2, sp, #0x10
  40adb0:	madd	x1, x9, x27, x8
  40adb4:	bl	40d3f4 <wcrtomb@plt+0xa5c4>
  40adb8:	ldr	x8, [x19, #320]
  40adbc:	ldr	x9, [x25], #16
  40adc0:	add	x0, sp, #0x10
  40adc4:	madd	x1, x9, x27, x8
  40adc8:	bl	40d410 <wcrtomb@plt+0xa5e0>
  40adcc:	ldur	x8, [x21, #-8]
  40add0:	add	x20, x20, #0x1
  40add4:	cmp	x20, x8
  40add8:	b.lt	40ada0 <wcrtomb@plt+0x7f70>  // b.tstop
  40addc:	ldr	x8, [x19, #144]
  40ade0:	ldr	x8, [x8, x22, lsl #3]
  40ade4:	cmp	x8, #0x103
  40ade8:	b.eq	40ad50 <wcrtomb@plt+0x7f20>  // b.none
  40adec:	sturb	w24, [x21, #-24]
  40adf0:	b	40ad50 <wcrtomb@plt+0x7f20>
  40adf4:	add	x8, x21, #0x18
  40adf8:	strb	w24, [x21]
  40adfc:	stp	xzr, xzr, [x21, #8]
  40ae00:	mov	x21, x8
  40ae04:	b	40ad50 <wcrtomb@plt+0x7f20>
  40ae08:	ldur	x9, [x21, #-16]
  40ae0c:	ldur	x8, [x21, #-32]
  40ae10:	sub	x10, x28, x9, lsl #4
  40ae14:	cmp	x8, #0x1
  40ae18:	stp	x10, x9, [x29, #-24]
  40ae1c:	b.lt	40ae6c <wcrtomb@plt+0x803c>  // b.tstop
  40ae20:	ldur	x9, [x21, #-8]
  40ae24:	mov	x20, xzr
  40ae28:	sub	x9, x23, x9, lsl #4
  40ae2c:	sub	x25, x9, x8, lsl #4
  40ae30:	ldr	x8, [x19, #320]
  40ae34:	ldr	x9, [x25]
  40ae38:	sub	x0, x29, #0x18
  40ae3c:	add	x2, sp, #0x10
  40ae40:	madd	x1, x9, x27, x8
  40ae44:	bl	40d3f4 <wcrtomb@plt+0xa5c4>
  40ae48:	ldr	x8, [x19, #320]
  40ae4c:	ldr	x9, [x25], #16
  40ae50:	add	x0, sp, #0x10
  40ae54:	madd	x1, x9, x27, x8
  40ae58:	bl	40d410 <wcrtomb@plt+0xa5e0>
  40ae5c:	ldur	x8, [x21, #-32]
  40ae60:	add	x20, x20, #0x1
  40ae64:	cmp	x20, x8
  40ae68:	b.lt	40ae30 <wcrtomb@plt+0x8000>  // b.tstop
  40ae6c:	ldurb	w10, [x21, #-48]
  40ae70:	ldur	x9, [x21, #-16]
  40ae74:	cbz	w10, 40aeb0 <wcrtomb@plt+0x8080>
  40ae78:	ldur	x10, [x21, #-40]
  40ae7c:	add	x9, x10, x9
  40ae80:	stur	x9, [x21, #-40]
  40ae84:	b	40aeb4 <wcrtomb@plt+0x8084>
  40ae88:	ldrb	w8, [x21, #-24]!
  40ae8c:	ldp	x9, x10, [x21, #8]
  40ae90:	ldp	x11, x12, [x21, #-16]
  40ae94:	ldurb	w13, [x21, #-24]
  40ae98:	add	x9, x11, x9
  40ae9c:	add	x10, x12, x10
  40aea0:	orr	w8, w13, w8
  40aea4:	stp	x9, x10, [x21, #-16]
  40aea8:	sturb	w8, [x21, #-24]
  40aeac:	b	40ad50 <wcrtomb@plt+0x7f20>
  40aeb0:	sub	x28, x28, x9, lsl #4
  40aeb4:	ldurb	w9, [x21, #-24]
  40aeb8:	ldur	x11, [x21, #-8]
  40aebc:	cbz	w9, 40aec8 <wcrtomb@plt+0x8098>
  40aec0:	add	x9, x11, x8
  40aec4:	b	40af0c <wcrtomb@plt+0x80dc>
  40aec8:	ldur	x9, [x21, #-8]
  40aecc:	cmp	x9, #0x1
  40aed0:	b.lt	40af04 <wcrtomb@plt+0x80d4>  // b.tstop
  40aed4:	sub	x9, x23, x11, lsl #4
  40aed8:	sub	x8, x9, x8, lsl #4
  40aedc:	mov	x10, xzr
  40aee0:	mov	x11, x8
  40aee4:	ldur	x12, [x21, #-32]
  40aee8:	ldur	x9, [x21, #-8]
  40aeec:	add	x12, x10, x12
  40aef0:	ldr	q0, [x8, x12, lsl #4]
  40aef4:	add	x10, x10, #0x1
  40aef8:	cmp	x10, x9
  40aefc:	str	q0, [x11], #16
  40af00:	b.lt	40aee4 <wcrtomb@plt+0x80b4>  // b.tstop
  40af04:	ldur	x8, [x21, #-32]
  40af08:	sub	x23, x23, x8, lsl #4
  40af0c:	ldrb	w8, [x21, #-24]!
  40af10:	ldurb	w10, [x21, #-24]
  40af14:	stur	x9, [x21, #-8]
  40af18:	and	w8, w10, w8
  40af1c:	sturb	w8, [x21, #-24]
  40af20:	b	40ad50 <wcrtomb@plt+0x7f20>
  40af24:	mov	x0, x19
  40af28:	bl	40d498 <wcrtomb@plt+0xa668>
  40af2c:	mov	x0, x19
  40af30:	bl	40d5f8 <wcrtomb@plt+0xa7c8>
  40af34:	sub	x0, x29, #0x18
  40af38:	mov	w1, #0x1                   	// #1
  40af3c:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40af40:	sub	x2, x29, #0x18
  40af44:	mov	w1, #0x1ff                 	// #511
  40af48:	mov	x0, xzr
  40af4c:	bl	40d770 <wcrtomb@plt+0xa940>
  40af50:	ldr	x0, [x19, #152]
  40af54:	mov	w1, #0x4                   	// #4
  40af58:	bl	41189c <wcrtomb@plt+0xea6c>
  40af5c:	ldr	x8, [x19, #152]
  40af60:	str	x0, [x19, #344]
  40af64:	cmp	x8, #0x1
  40af68:	b.lt	40b044 <wcrtomb@plt+0x8214>  // b.tstop
  40af6c:	mov	x22, xzr
  40af70:	mov	w23, #0x18                  	// #24
  40af74:	b	40af88 <wcrtomb@plt+0x8158>
  40af78:	ldr	x8, [x19, #152]
  40af7c:	add	x22, x22, #0x1
  40af80:	cmp	x22, x8
  40af84:	b.ge	40b044 <wcrtomb@plt+0x8214>  // b.tcont
  40af88:	ldr	x24, [x19, #344]
  40af8c:	lsl	x25, x22, #2
  40af90:	str	wzr, [x24, x25]
  40af94:	ldr	x20, [x19, #336]
  40af98:	ldr	w0, [x20, x25]
  40af9c:	bl	40d7c0 <wcrtomb@plt+0xa990>
  40afa0:	tst	w0, #0x1
  40afa4:	mov	w8, #0x4                   	// #4
  40afa8:	csel	w8, w8, wzr, ne  // ne = any
  40afac:	str	w8, [x24, x25]
  40afb0:	ldr	w0, [x20, x25]
  40afb4:	bl	40d7d4 <wcrtomb@plt+0xa9a4>
  40afb8:	tbz	w0, #0, 40afc8 <wcrtomb@plt+0x8198>
  40afbc:	ldr	w8, [x24, x25]
  40afc0:	orr	w8, w8, #0x2
  40afc4:	str	w8, [x24, x25]
  40afc8:	ldr	x8, [x19, #320]
  40afcc:	madd	x9, x22, x23, x8
  40afd0:	ldr	x9, [x9, #8]
  40afd4:	cmp	x9, #0x1
  40afd8:	b.lt	40af78 <wcrtomb@plt+0x8148>  // b.tstop
  40afdc:	ldr	x27, [x19, #320]
  40afe0:	mov	x26, xzr
  40afe4:	mov	w20, #0x8                   	// #8
  40afe8:	madd	x9, x22, x23, x27
  40afec:	ldr	x28, [x9, #8]
  40aff0:	b	40b008 <wcrtomb@plt+0x81d8>
  40aff4:	add	x26, x26, #0x1
  40aff8:	cmp	x26, x28
  40affc:	add	x20, x20, #0x10
  40b000:	mov	x8, x27
  40b004:	b.ge	40af78 <wcrtomb@plt+0x8148>  // b.tcont
  40b008:	mul	x9, x22, x23
  40b00c:	ldr	x21, [x8, x9]
  40b010:	ldr	w0, [x21, x20]
  40b014:	bl	40d7c0 <wcrtomb@plt+0xa990>
  40b018:	tbz	w0, #0, 40b028 <wcrtomb@plt+0x81f8>
  40b01c:	ldr	w8, [x24, x25]
  40b020:	orr	w8, w8, #0x4
  40b024:	str	w8, [x24, x25]
  40b028:	ldr	w0, [x21, x20]
  40b02c:	bl	40d7d4 <wcrtomb@plt+0xa9a4>
  40b030:	tbz	w0, #0, 40aff4 <wcrtomb@plt+0x81c4>
  40b034:	ldr	w8, [x24, x25]
  40b038:	orr	w8, w8, #0x2
  40b03c:	str	w8, [x24, x25]
  40b040:	b	40aff4 <wcrtomb@plt+0x81c4>
  40b044:	sub	x1, x29, #0x18
  40b048:	mov	x0, x19
  40b04c:	bl	40d7e8 <wcrtomb@plt+0xa9b8>
  40b050:	mov	w22, w0
  40b054:	tbz	w0, #2, 40b068 <wcrtomb@plt+0x8238>
  40b058:	sub	x1, x29, #0x18
  40b05c:	mov	w2, #0x4                   	// #4
  40b060:	mov	x0, x19
  40b064:	bl	40d828 <wcrtomb@plt+0xa9f8>
  40b068:	eor	w2, w22, #0x7
  40b06c:	sub	x1, x29, #0x18
  40b070:	mov	x0, x19
  40b074:	bl	40d828 <wcrtomb@plt+0xa9f8>
  40b078:	sxtw	x8, w0
  40b07c:	str	w0, [x19, #364]
  40b080:	str	x8, [x19, #400]
  40b084:	tbz	w22, #1, 40b09c <wcrtomb@plt+0x826c>
  40b088:	sub	x1, x29, #0x18
  40b08c:	mov	w2, #0x2                   	// #2
  40b090:	mov	x0, x19
  40b094:	bl	40d828 <wcrtomb@plt+0xa9f8>
  40b098:	str	w0, [x19, #364]
  40b09c:	ldr	w8, [x19, #364]
  40b0a0:	ldr	x0, [sp, #8]
  40b0a4:	str	wzr, [x19, #360]
  40b0a8:	add	w8, w8, #0x1
  40b0ac:	str	w8, [x19, #364]
  40b0b0:	bl	402bd0 <free@plt>
  40b0b4:	ldr	x0, [sp]
  40b0b8:	bl	402bd0 <free@plt>
  40b0bc:	ldr	x0, [sp, #16]
  40b0c0:	bl	402bd0 <free@plt>
  40b0c4:	ldur	x0, [x29, #-24]
  40b0c8:	bl	402bd0 <free@plt>
  40b0cc:	ldp	x20, x19, [sp, #144]
  40b0d0:	ldp	x22, x21, [sp, #128]
  40b0d4:	ldp	x24, x23, [sp, #112]
  40b0d8:	ldp	x26, x25, [sp, #96]
  40b0dc:	ldp	x28, x27, [sp, #80]
  40b0e0:	ldp	x29, x30, [sp, #64]
  40b0e4:	add	sp, sp, #0xa0
  40b0e8:	ret
  40b0ec:	mov	x0, x1
  40b0f0:	mov	w8, #0x1                   	// #1
  40b0f4:	strb	w8, [x5]
  40b0f8:	ret
  40b0fc:	stp	x29, x30, [sp, #-48]!
  40b100:	stp	x20, x19, [sp, #32]
  40b104:	mov	x19, x0
  40b108:	ldr	x0, [x0]
  40b10c:	str	x21, [sp, #16]
  40b110:	mov	x29, sp
  40b114:	bl	402bd0 <free@plt>
  40b118:	ldr	x0, [x19, #144]
  40b11c:	bl	402bd0 <free@plt>
  40b120:	ldrb	w8, [x19, #1048]
  40b124:	cbz	w8, 40b130 <wcrtomb@plt+0x8300>
  40b128:	mov	x0, x19
  40b12c:	bl	40b260 <wcrtomb@plt+0x8430>
  40b130:	ldr	x0, [x19, #336]
  40b134:	bl	402bd0 <free@plt>
  40b138:	ldr	x0, [x19, #344]
  40b13c:	bl	402bd0 <free@plt>
  40b140:	ldr	x8, [x19, #304]
  40b144:	cmp	x8, #0x1
  40b148:	b.lt	40b188 <wcrtomb@plt+0x8358>  // b.tstop
  40b14c:	mov	x20, xzr
  40b150:	mov	x21, xzr
  40b154:	ldr	x8, [x19, #296]
  40b158:	add	x8, x8, x20
  40b15c:	ldr	x0, [x8, #8]
  40b160:	bl	402bd0 <free@plt>
  40b164:	ldr	x8, [x19, #296]
  40b168:	add	x8, x8, x20
  40b16c:	ldr	x0, [x8, #48]
  40b170:	bl	402bd0 <free@plt>
  40b174:	ldr	x8, [x19, #304]
  40b178:	add	x21, x21, #0x1
  40b17c:	add	x20, x20, #0x50
  40b180:	cmp	x21, x8
  40b184:	b.lt	40b154 <wcrtomb@plt+0x8324>  // b.tstop
  40b188:	ldr	x0, [x19, #296]
  40b18c:	bl	402bd0 <free@plt>
  40b190:	ldr	x8, [x19, #320]
  40b194:	cbz	x8, 40b1d4 <wcrtomb@plt+0x83a4>
  40b198:	ldr	x8, [x19, #152]
  40b19c:	cmp	x8, #0x1
  40b1a0:	b.lt	40b1cc <wcrtomb@plt+0x839c>  // b.tstop
  40b1a4:	mov	x20, xzr
  40b1a8:	mov	x21, xzr
  40b1ac:	ldr	x8, [x19, #320]
  40b1b0:	ldr	x0, [x8, x20]
  40b1b4:	bl	402bd0 <free@plt>
  40b1b8:	ldr	x8, [x19, #152]
  40b1bc:	add	x21, x21, #0x1
  40b1c0:	add	x20, x20, #0x18
  40b1c4:	cmp	x21, x8
  40b1c8:	b.lt	40b1ac <wcrtomb@plt+0x837c>  // b.tstop
  40b1cc:	ldr	x0, [x19, #320]
  40b1d0:	bl	402bd0 <free@plt>
  40b1d4:	ldr	x8, [x19, #368]
  40b1d8:	cbz	x8, 40b23c <wcrtomb@plt+0x840c>
  40b1dc:	ldr	x9, [x19, #352]
  40b1e0:	ldr	x8, [x19, #368]
  40b1e4:	cmp	x9, #0x1
  40b1e8:	b.lt	40b21c <wcrtomb@plt+0x83ec>  // b.tstop
  40b1ec:	mov	x20, xzr
  40b1f0:	lsl	x21, x20, #3
  40b1f4:	ldr	x0, [x8, x21]
  40b1f8:	bl	402bd0 <free@plt>
  40b1fc:	ldr	x8, [x19, #376]
  40b200:	ldr	x0, [x8, x21]
  40b204:	bl	402bd0 <free@plt>
  40b208:	ldr	x9, [x19, #352]
  40b20c:	ldr	x8, [x19, #368]
  40b210:	add	x20, x20, #0x1
  40b214:	cmp	x20, x9
  40b218:	b.lt	40b1f0 <wcrtomb@plt+0x83c0>  // b.tstop
  40b21c:	sub	x0, x8, #0x10
  40b220:	bl	402bd0 <free@plt>
  40b224:	ldr	x0, [x19, #376]
  40b228:	bl	402bd0 <free@plt>
  40b22c:	ldr	x0, [x19, #392]
  40b230:	bl	402bd0 <free@plt>
  40b234:	ldr	x0, [x19, #384]
  40b238:	bl	402bd0 <free@plt>
  40b23c:	ldr	x0, [x19, #288]
  40b240:	cbz	x0, 40b250 <wcrtomb@plt+0x8420>
  40b244:	bl	40b0fc <wcrtomb@plt+0x82cc>
  40b248:	ldr	x0, [x19, #288]
  40b24c:	bl	402bd0 <free@plt>
  40b250:	ldp	x20, x19, [sp, #32]
  40b254:	ldr	x21, [sp, #16]
  40b258:	ldp	x29, x30, [sp], #48
  40b25c:	ret
  40b260:	stp	x29, x30, [sp, #-32]!
  40b264:	stp	x20, x19, [sp, #16]
  40b268:	mov	x19, x0
  40b26c:	ldr	x0, [x0, #280]
  40b270:	mov	x29, sp
  40b274:	bl	402bd0 <free@plt>
  40b278:	ldr	x0, [x19, #96]
  40b27c:	bl	402bd0 <free@plt>
  40b280:	ldr	x0, [x19, #408]
  40b284:	bl	402bd0 <free@plt>
  40b288:	ldr	x8, [x19, #432]
  40b28c:	cbz	x8, 40b2c4 <wcrtomb@plt+0x8494>
  40b290:	ldr	x9, [x19, #352]
  40b294:	ldr	x8, [x19, #432]
  40b298:	tbnz	x9, #63, 40b2bc <wcrtomb@plt+0x848c>
  40b29c:	mov	x20, #0xffffffffffffffff    	// #-1
  40b2a0:	ldr	x0, [x8, x20, lsl #3]
  40b2a4:	bl	402bd0 <free@plt>
  40b2a8:	ldr	x9, [x19, #352]
  40b2ac:	ldr	x8, [x19, #432]
  40b2b0:	add	x20, x20, #0x1
  40b2b4:	cmp	x20, x9
  40b2b8:	b.lt	40b2a0 <wcrtomb@plt+0x8470>  // b.tstop
  40b2bc:	sub	x0, x8, #0x10
  40b2c0:	bl	402bd0 <free@plt>
  40b2c4:	ldp	x20, x19, [sp, #16]
  40b2c8:	ldp	x29, x30, [sp], #32
  40b2cc:	ret
  40b2d0:	sub	sp, sp, #0x80
  40b2d4:	stp	x29, x30, [sp, #32]
  40b2d8:	stp	x28, x27, [sp, #48]
  40b2dc:	stp	x26, x25, [sp, #64]
  40b2e0:	stp	x24, x23, [sp, #80]
  40b2e4:	stp	x22, x21, [sp, #96]
  40b2e8:	stp	x20, x19, [sp, #112]
  40b2ec:	ldr	x8, [x0, #152]
  40b2f0:	add	x29, sp, #0x20
  40b2f4:	cmp	x8, #0x3
  40b2f8:	b.lt	40b9a0 <wcrtomb@plt+0x8b70>  // b.tstop
  40b2fc:	stur	xzr, [x29, #-8]
  40b300:	ldrb	w9, [x0, #1048]
  40b304:	ldrb	w8, [x0, #457]
  40b308:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xe17c>
  40b30c:	adrp	x27, 420000 <_obstack_memory_used@@Base+0xe17c>
  40b310:	eor	w9, w9, #0x1
  40b314:	mov	x21, x0
  40b318:	mov	x20, xzr
  40b31c:	add	x19, x19, #0x13b
  40b320:	mov	w26, #0x1                   	// #1
  40b324:	mov	w25, #0x2                   	// #2
  40b328:	and	w28, w9, w8
  40b32c:	add	x27, x27, #0x9ce
  40b330:	str	wzr, [sp, #16]
  40b334:	stur	wzr, [x29, #-12]
  40b338:	str	wzr, [sp, #12]
  40b33c:	ldr	x8, [x21, #144]
  40b340:	ldr	x22, [x8, x26, lsl #3]
  40b344:	sub	x8, x22, #0x100
  40b348:	cmp	x8, #0x13
  40b34c:	b.hi	40b378 <wcrtomb@plt+0x8548>  // b.pmore
  40b350:	adr	x9, 40b360 <wcrtomb@plt+0x8530>
  40b354:	ldrh	w10, [x27, x8, lsl #1]
  40b358:	add	x9, x9, x10, lsl #2
  40b35c:	br	x9
  40b360:	mov	w1, #0x2                   	// #2
  40b364:	mov	x0, x20
  40b368:	bl	40ba94 <wcrtomb@plt+0x8c64>
  40b36c:	mov	x20, x0
  40b370:	mov	w8, wzr
  40b374:	b	40b970 <wcrtomb@plt+0x8b40>
  40b378:	cmn	x22, #0x1
  40b37c:	b.eq	40b594 <wcrtomb@plt+0x8764>  // b.none
  40b380:	cbz	x22, 40b634 <wcrtomb@plt+0x8804>
  40b384:	cmp	x22, #0x114
  40b388:	b.lt	40b7e4 <wcrtomb@plt+0x89b4>  // b.tstop
  40b38c:	ldr	x8, [x21]
  40b390:	mov	x9, #0xffffffffffffdd80    	// #-8832
  40b394:	mov	x23, xzr
  40b398:	mov	x27, #0xffffffffffffffff    	// #-1
  40b39c:	add	x8, x8, x22, lsl #5
  40b3a0:	add	x24, x8, x9
  40b3a4:	mov	w0, w23
  40b3a8:	mov	x1, x24
  40b3ac:	bl	40be74 <wcrtomb@plt+0x9044>
  40b3b0:	tbnz	w0, #0, 40b770 <wcrtomb@plt+0x8940>
  40b3b4:	add	x23, x23, #0x1
  40b3b8:	cmp	w23, #0x100
  40b3bc:	add	x27, x27, #0x1
  40b3c0:	b.ne	40b3a4 <wcrtomb@plt+0x8574>  // b.any
  40b3c4:	mov	w1, #0x2                   	// #2
  40b3c8:	mov	x0, x20
  40b3cc:	bl	40ba94 <wcrtomb@plt+0x8c64>
  40b3d0:	mov	x20, x0
  40b3d4:	mov	w8, wzr
  40b3d8:	mov	x23, x22
  40b3dc:	b	40b7d4 <wcrtomb@plt+0x89a4>
  40b3e0:	mov	x0, x20
  40b3e4:	bl	40bb04 <wcrtomb@plt+0x8cd4>
  40b3e8:	mov	w8, wzr
  40b3ec:	b	40b970 <wcrtomb@plt+0x8b40>
  40b3f0:	ldr	x27, [x20, #40]
  40b3f4:	ldr	x1, [x20]
  40b3f8:	ldr	x0, [x27]
  40b3fc:	bl	40bc9c <wcrtomb@plt+0x8e6c>
  40b400:	ldr	x8, [x27, #16]
  40b404:	str	x0, [x27]
  40b408:	ldrb	w9, [x8]
  40b40c:	cbz	w9, 40b47c <wcrtomb@plt+0x864c>
  40b410:	ldr	x22, [x20, #8]
  40b414:	ldrb	w9, [x22]
  40b418:	cbz	w9, 40b47c <wcrtomb@plt+0x864c>
  40b41c:	mov	x0, x8
  40b420:	bl	402750 <strlen@plt>
  40b424:	mov	x23, x0
  40b428:	mov	x0, x22
  40b42c:	bl	402750 <strlen@plt>
  40b430:	add	x24, x0, x23
  40b434:	mov	x22, x0
  40b438:	mov	x0, x24
  40b43c:	bl	4118c8 <wcrtomb@plt+0xea98>
  40b440:	ldr	x1, [x27, #16]
  40b444:	mov	x2, x23
  40b448:	mov	x25, x0
  40b44c:	bl	402710 <memcpy@plt>
  40b450:	ldr	x1, [x20, #8]
  40b454:	add	x0, x25, x23
  40b458:	mov	x2, x22
  40b45c:	bl	402710 <memcpy@plt>
  40b460:	ldr	x0, [x27]
  40b464:	mov	x1, x25
  40b468:	mov	x2, x24
  40b46c:	bl	40bcf4 <wcrtomb@plt+0x8ec4>
  40b470:	str	x0, [x27]
  40b474:	mov	x0, x25
  40b478:	bl	402bd0 <free@plt>
  40b47c:	ldr	x8, [x27, #24]
  40b480:	ldrb	w8, [x8]
  40b484:	cbz	w8, 40b498 <wcrtomb@plt+0x8668>
  40b488:	ldr	x0, [x27, #8]
  40b48c:	ldr	x1, [x20, #8]
  40b490:	bl	40be08 <wcrtomb@plt+0x8fd8>
  40b494:	str	x0, [x27, #8]
  40b498:	ldr	x8, [x20, #24]
  40b49c:	ldrb	w8, [x8]
  40b4a0:	cbnz	w8, 40b4ac <wcrtomb@plt+0x867c>
  40b4a4:	ldr	x8, [x27, #16]
  40b4a8:	strb	wzr, [x8]
  40b4ac:	ldr	x0, [x27, #16]
  40b4b0:	ldr	x1, [x20, #16]
  40b4b4:	bl	40be08 <wcrtomb@plt+0x8fd8>
  40b4b8:	ldr	x8, [x27, #24]
  40b4bc:	str	x0, [x27, #16]
  40b4c0:	ldrb	w9, [x8]
  40b4c4:	cbnz	w9, 40b4d0 <wcrtomb@plt+0x86a0>
  40b4c8:	ldrb	w9, [x27, #32]
  40b4cc:	cbz	w9, 40b948 <wcrtomb@plt+0x8b18>
  40b4d0:	ldr	x1, [x20, #24]
  40b4d4:	ldrb	w9, [x1]
  40b4d8:	cbnz	w9, 40b4e4 <wcrtomb@plt+0x86b4>
  40b4dc:	ldrb	w9, [x20, #33]
  40b4e0:	cbz	w9, 40b948 <wcrtomb@plt+0x8b18>
  40b4e4:	mov	x0, x8
  40b4e8:	bl	40be08 <wcrtomb@plt+0x8fd8>
  40b4ec:	str	x0, [x27, #24]
  40b4f0:	ldrb	w9, [x20, #33]
  40b4f4:	b	40b954 <wcrtomb@plt+0x8b24>
  40b4f8:	ldr	x9, [x20, #24]
  40b4fc:	mov	w8, wzr
  40b500:	strb	wzr, [x9]
  40b504:	b	40b970 <wcrtomb@plt+0x8b40>
  40b508:	mov	w1, #0x2                   	// #2
  40b50c:	mov	x0, x20
  40b510:	bl	40ba94 <wcrtomb@plt+0x8c64>
  40b514:	mov	w10, #0x1                   	// #1
  40b518:	mov	w9, #0x1                   	// #1
  40b51c:	mov	x20, x0
  40b520:	mov	w8, wzr
  40b524:	str	w9, [sp, #12]
  40b528:	strb	w10, [x0, #33]
  40b52c:	b	40b970 <wcrtomb@plt+0x8b40>
  40b530:	mov	w1, #0x2                   	// #2
  40b534:	mov	x0, x20
  40b538:	bl	40ba94 <wcrtomb@plt+0x8c64>
  40b53c:	mov	w10, #0x1                   	// #1
  40b540:	mov	w9, #0x1                   	// #1
  40b544:	mov	x20, x0
  40b548:	mov	w8, wzr
  40b54c:	stur	w9, [x29, #-12]
  40b550:	strb	w10, [x0, #32]
  40b554:	b	40b970 <wcrtomb@plt+0x8b40>
  40b558:	ldr	x25, [x20, #40]
  40b55c:	ldr	x1, [x20, #24]
  40b560:	ldr	x22, [x25, #24]
  40b564:	mov	x0, x22
  40b568:	bl	40bb4c <wcrtomb@plt+0x8d1c>
  40b56c:	tbz	w0, #0, 40b63c <wcrtomb@plt+0x880c>
  40b570:	ldrb	w8, [x20, #32]
  40b574:	ldrb	w9, [x25, #32]
  40b578:	and	w8, w9, w8
  40b57c:	strb	w8, [x25, #32]
  40b580:	ldrb	w8, [x20, #33]
  40b584:	ldrb	w9, [x25, #33]
  40b588:	and	w8, w9, w8
  40b58c:	strb	w8, [x25, #33]
  40b590:	b	40b644 <wcrtomb@plt+0x8814>
  40b594:	ldr	x8, [x20, #40]
  40b598:	cbnz	x8, 40ba74 <wcrtomb@plt+0x8c44>
  40b59c:	ldr	x8, [x20]
  40b5a0:	ldr	x22, [x8]
  40b5a4:	cbz	x22, 40b5d4 <wcrtomb@plt+0x87a4>
  40b5a8:	ldr	x8, [x20]
  40b5ac:	add	x24, x8, #0x8
  40b5b0:	mov	x0, x22
  40b5b4:	bl	402750 <strlen@plt>
  40b5b8:	mov	x23, x0
  40b5bc:	mov	x0, x19
  40b5c0:	bl	402750 <strlen@plt>
  40b5c4:	cmp	x23, x0
  40b5c8:	csel	x19, x22, x19, hi  // hi = pmore
  40b5cc:	ldr	x22, [x24], #8
  40b5d0:	cbnz	x22, 40b5b0 <wcrtomb@plt+0x8780>
  40b5d4:	ldr	x1, [x20, #24]
  40b5d8:	mov	x0, x19
  40b5dc:	bl	40bb4c <wcrtomb@plt+0x8d1c>
  40b5e0:	tbz	w0, #0, 40b634 <wcrtomb@plt+0x8804>
  40b5e4:	ldur	w8, [x29, #-12]
  40b5e8:	tbz	w8, #0, 40b5f4 <wcrtomb@plt+0x87c4>
  40b5ec:	ldrb	w8, [x20, #32]
  40b5f0:	cbz	w8, 40b60c <wcrtomb@plt+0x87dc>
  40b5f4:	ldr	w8, [sp, #12]
  40b5f8:	tbz	w8, #0, 40b604 <wcrtomb@plt+0x87d4>
  40b5fc:	ldrb	w8, [x20, #33]
  40b600:	cbz	w8, 40b60c <wcrtomb@plt+0x87dc>
  40b604:	mov	w8, #0x1                   	// #1
  40b608:	str	w8, [sp, #16]
  40b60c:	ldrb	w8, [x20, #32]
  40b610:	ldrb	w9, [x20, #33]
  40b614:	cmp	w8, #0x0
  40b618:	cset	w8, ne  // ne = any
  40b61c:	cmp	w9, #0x0
  40b620:	stur	w8, [x29, #-8]
  40b624:	cset	w8, ne  // ne = any
  40b628:	stur	w8, [x29, #-4]
  40b62c:	mov	w8, #0x11                  	// #17
  40b630:	b	40b970 <wcrtomb@plt+0x8b40>
  40b634:	mov	w8, #0x11                  	// #17
  40b638:	b	40b970 <wcrtomb@plt+0x8b40>
  40b63c:	strb	wzr, [x22]
  40b640:	strh	wzr, [x25, #32]
  40b644:	ldr	x9, [x25, #8]
  40b648:	ldrb	w10, [x9]
  40b64c:	cbz	w10, 40b688 <wcrtomb@plt+0x8858>
  40b650:	ldr	x8, [x20, #8]
  40b654:	ldrb	w11, [x8]
  40b658:	cmp	w10, w11
  40b65c:	b.ne	40b688 <wcrtomb@plt+0x8858>  // b.any
  40b660:	mov	w11, #0x1                   	// #1
  40b664:	ldr	x9, [x25, #8]
  40b668:	mov	x10, x11
  40b66c:	ldrb	w11, [x9, x11]
  40b670:	cbz	w11, 40b684 <wcrtomb@plt+0x8854>
  40b674:	ldrb	w12, [x8, x10]
  40b678:	cmp	w11, w12
  40b67c:	add	x11, x10, #0x1
  40b680:	b.eq	40b664 <wcrtomb@plt+0x8834>  // b.none
  40b684:	add	x9, x9, x10
  40b688:	strb	wzr, [x9]
  40b68c:	ldr	x23, [x25, #16]
  40b690:	mov	x0, x23
  40b694:	bl	402750 <strlen@plt>
  40b698:	ldr	x24, [x20, #16]
  40b69c:	mov	x22, x0
  40b6a0:	mov	x0, x24
  40b6a4:	bl	402750 <strlen@plt>
  40b6a8:	cmp	x22, x0
  40b6ac:	csel	x9, x0, x22, gt
  40b6b0:	cmp	x9, #0x1
  40b6b4:	b.lt	40b700 <wcrtomb@plt+0x88d0>  // b.tstop
  40b6b8:	add	x10, x24, x0
  40b6bc:	add	x11, x23, x22
  40b6c0:	mov	x8, xzr
  40b6c4:	sub	x10, x10, #0x1
  40b6c8:	sub	x11, x11, #0x1
  40b6cc:	ldrb	w12, [x11]
  40b6d0:	ldrb	w13, [x10]
  40b6d4:	cmp	w12, w13
  40b6d8:	b.ne	40b6f4 <wcrtomb@plt+0x88c4>  // b.any
  40b6dc:	add	x8, x8, #0x1
  40b6e0:	sub	x10, x10, #0x1
  40b6e4:	cmp	x8, x9
  40b6e8:	sub	x11, x11, #0x1
  40b6ec:	b.lt	40b6cc <wcrtomb@plt+0x889c>  // b.tstop
  40b6f0:	mov	x8, x9
  40b6f4:	ldr	x9, [x25, #16]
  40b6f8:	cbnz	x8, 40b70c <wcrtomb@plt+0x88dc>
  40b6fc:	b	40b730 <wcrtomb@plt+0x8900>
  40b700:	mov	x8, xzr
  40b704:	ldr	x9, [x25, #16]
  40b708:	cbz	x8, 40b730 <wcrtomb@plt+0x8900>
  40b70c:	mov	x10, xzr
  40b710:	sub	x11, x22, x8
  40b714:	add	x12, x9, x11
  40b718:	ldrb	w12, [x12, x10]
  40b71c:	strb	w12, [x9, x10]
  40b720:	ldr	x9, [x25, #16]
  40b724:	add	x10, x10, #0x1
  40b728:	cmp	x8, x10
  40b72c:	b.ne	40b714 <wcrtomb@plt+0x88e4>  // b.any
  40b730:	strb	wzr, [x9, x8]
  40b734:	ldr	x0, [x25]
  40b738:	ldr	x1, [x20]
  40b73c:	bl	40bb68 <wcrtomb@plt+0x8d38>
  40b740:	ldr	x8, [x25]
  40b744:	mov	x22, x0
  40b748:	mov	x0, x8
  40b74c:	bl	40bc1c <wcrtomb@plt+0x8dec>
  40b750:	ldr	x0, [x25]
  40b754:	bl	402bd0 <free@plt>
  40b758:	mov	x0, x20
  40b75c:	str	x22, [x25]
  40b760:	bl	40bc50 <wcrtomb@plt+0x8e20>
  40b764:	mov	w8, wzr
  40b768:	mov	x20, x25
  40b76c:	b	40b970 <wcrtomb@plt+0x8b40>
  40b770:	cmp	w23, #0xfe
  40b774:	b.ls	40b78c <wcrtomb@plt+0x895c>  // b.plast
  40b778:	mov	w8, #0x1                   	// #1
  40b77c:	b	40b7d4 <wcrtomb@plt+0x89a4>
  40b780:	add	x27, x27, #0x1
  40b784:	cmp	x27, #0xfe
  40b788:	b.cs	40b778 <wcrtomb@plt+0x8948>  // b.hs, b.nlast
  40b78c:	add	w0, w27, #0x2
  40b790:	mov	x1, x24
  40b794:	bl	40be74 <wcrtomb@plt+0x9044>
  40b798:	tbz	w0, #0, 40b780 <wcrtomb@plt+0x8950>
  40b79c:	tst	w28, #0xff
  40b7a0:	b.eq	40b7c0 <wcrtomb@plt+0x8990>  // b.none
  40b7a4:	add	w0, w27, #0x2
  40b7a8:	bl	4028f0 <toupper@plt>
  40b7ac:	mov	w22, w0
  40b7b0:	mov	w0, w23
  40b7b4:	bl	4028f0 <toupper@plt>
  40b7b8:	cmp	w22, w0
  40b7bc:	b.eq	40b780 <wcrtomb@plt+0x8950>  // b.none
  40b7c0:	mov	w1, #0x2                   	// #2
  40b7c4:	mov	x0, x20
  40b7c8:	bl	40ba94 <wcrtomb@plt+0x8c64>
  40b7cc:	mov	x20, x0
  40b7d0:	mov	w8, wzr
  40b7d4:	adrp	x27, 420000 <_obstack_memory_used@@Base+0xe17c>
  40b7d8:	add	x27, x27, #0x9ce
  40b7dc:	cbz	w8, 40b970 <wcrtomb@plt+0x8b40>
  40b7e0:	mov	x22, x23
  40b7e4:	ldr	x10, [x21, #144]
  40b7e8:	add	x23, x26, #0x2
  40b7ec:	ldr	x8, [x10, x25, lsl #3]
  40b7f0:	cmp	x8, #0x105
  40b7f4:	b.ne	40b864 <wcrtomb@plt+0x8a34>  // b.any
  40b7f8:	ldr	x8, [x21, #152]
  40b7fc:	sub	x8, x8, #0x1
  40b800:	cmp	x23, x8
  40b804:	b.ge	40b864 <wcrtomb@plt+0x8a34>  // b.tcont
  40b808:	mov	x8, xzr
  40b80c:	add	x9, x26, #0x2
  40b810:	add	x10, x10, x26, lsl #3
  40b814:	cmn	x8, #0x2
  40b818:	b.eq	40b830 <wcrtomb@plt+0x8a00>  // b.none
  40b81c:	add	x11, x10, x8, lsl #3
  40b820:	ldr	x11, [x11, #16]
  40b824:	sub	x11, x11, #0x1
  40b828:	cmp	x11, #0xfe
  40b82c:	b.hi	40b85c <wcrtomb@plt+0x8a2c>  // b.pmore
  40b830:	add	x11, x10, x8, lsl #3
  40b834:	ldr	x11, [x11, #24]
  40b838:	cmp	x11, #0x105
  40b83c:	b.ne	40b864 <wcrtomb@plt+0x8a34>  // b.any
  40b840:	ldr	x11, [x21, #152]
  40b844:	add	x8, x8, #0x2
  40b848:	add	x12, x9, x8
  40b84c:	add	x23, x23, #0x2
  40b850:	sub	x11, x11, #0x1
  40b854:	cmp	x12, x11
  40b858:	b.lt	40b814 <wcrtomb@plt+0x89e4>  // b.tstop
  40b85c:	add	x8, x26, x8
  40b860:	add	x23, x8, #0x2
  40b864:	sub	x24, x23, x26
  40b868:	asr	x8, x24, #1
  40b86c:	add	x1, x8, #0x1
  40b870:	mov	x0, x20
  40b874:	and	w25, w28, #0xff
  40b878:	bl	40ba94 <wcrtomb@plt+0x8c64>
  40b87c:	mov	x20, x0
  40b880:	cbz	w25, 40b890 <wcrtomb@plt+0x8a60>
  40b884:	mov	w0, w22
  40b888:	bl	4028f0 <toupper@plt>
  40b88c:	sxtw	x22, w0
  40b890:	ldr	x8, [x20, #16]
  40b894:	add	x9, x26, #0x2
  40b898:	cmp	x9, x23
  40b89c:	strb	w22, [x8]
  40b8a0:	ldr	x8, [x20, #8]
  40b8a4:	strb	w22, [x8]
  40b8a8:	ldr	x8, [x20, #24]
  40b8ac:	strb	w22, [x8]
  40b8b0:	b.ge	40b910 <wcrtomb@plt+0x8ae0>  // b.tcont
  40b8b4:	sub	x8, x24, #0x3
  40b8b8:	neg	x23, x8, lsr #1
  40b8bc:	mov	w22, #0x1                   	// #1
  40b8c0:	b	40b8f0 <wcrtomb@plt+0x8ac0>
  40b8c4:	ldr	x8, [x20, #16]
  40b8c8:	add	x26, x26, #0x2
  40b8cc:	strb	w0, [x8, x22]
  40b8d0:	ldr	x8, [x20, #8]
  40b8d4:	strb	w0, [x8, x22]
  40b8d8:	ldr	x8, [x20, #24]
  40b8dc:	strb	w0, [x8, x22]
  40b8e0:	add	x22, x22, #0x1
  40b8e4:	add	x8, x23, x22
  40b8e8:	cmp	x8, #0x2
  40b8ec:	b.eq	40b914 <wcrtomb@plt+0x8ae4>  // b.none
  40b8f0:	ldr	x8, [x21, #144]
  40b8f4:	tst	w28, #0xff
  40b8f8:	add	x8, x8, x26, lsl #3
  40b8fc:	ldr	x0, [x8, #16]
  40b900:	b.eq	40b8c4 <wcrtomb@plt+0x8a94>  // b.none
  40b904:	bl	4028f0 <toupper@plt>
  40b908:	sxtw	x0, w0
  40b90c:	b	40b8c4 <wcrtomb@plt+0x8a94>
  40b910:	mov	w22, #0x1                   	// #1
  40b914:	ldr	x8, [x20, #16]
  40b918:	mov	x2, x22
  40b91c:	strb	wzr, [x8, x22]
  40b920:	ldr	x8, [x20, #8]
  40b924:	strb	wzr, [x8, x22]
  40b928:	ldr	x8, [x20, #24]
  40b92c:	strb	wzr, [x8, x22]
  40b930:	ldr	x0, [x20]
  40b934:	ldr	x1, [x20, #24]
  40b938:	bl	40bcf4 <wcrtomb@plt+0x8ec4>
  40b93c:	mov	w8, wzr
  40b940:	str	x0, [x20]
  40b944:	b	40b970 <wcrtomb@plt+0x8b40>
  40b948:	mov	w9, wzr
  40b94c:	strb	wzr, [x8]
  40b950:	strb	wzr, [x27, #32]
  40b954:	mov	x0, x20
  40b958:	strb	w9, [x27, #33]
  40b95c:	bl	40bc50 <wcrtomb@plt+0x8e20>
  40b960:	mov	x20, x27
  40b964:	adrp	x27, 420000 <_obstack_memory_used@@Base+0xe17c>
  40b968:	mov	w8, wzr
  40b96c:	add	x27, x27, #0x9ce
  40b970:	cbnz	w8, 40b98c <wcrtomb@plt+0x8b5c>
  40b974:	ldr	x8, [x21, #152]
  40b978:	add	x25, x26, #0x2
  40b97c:	add	x26, x26, #0x1
  40b980:	cmp	x25, x8
  40b984:	b.lt	40b33c <wcrtomb@plt+0x850c>  // b.tstop
  40b988:	mov	w8, #0x2                   	// #2
  40b98c:	ldr	w22, [sp, #16]
  40b990:	ldp	w24, w23, [x29, #-8]
  40b994:	cmp	w8, #0x11
  40b998:	b.ne	40b9c4 <wcrtomb@plt+0x8b94>  // b.any
  40b99c:	b	40b9cc <wcrtomb@plt+0x8b9c>
  40b9a0:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xe17c>
  40b9a4:	mov	w23, wzr
  40b9a8:	mov	w24, wzr
  40b9ac:	mov	w22, wzr
  40b9b0:	mov	x20, xzr
  40b9b4:	add	x19, x19, #0x13b
  40b9b8:	mov	w8, #0x2                   	// #2
  40b9bc:	cmp	w8, #0x11
  40b9c0:	b.eq	40b9cc <wcrtomb@plt+0x8b9c>  // b.none
  40b9c4:	cmp	w8, #0x2
  40b9c8:	b.ne	40ba24 <wcrtomb@plt+0x8bf4>  // b.any
  40b9cc:	ldrb	w8, [x19]
  40b9d0:	cbz	w8, 40ba48 <wcrtomb@plt+0x8c18>
  40b9d4:	mov	x0, x19
  40b9d8:	bl	402750 <strlen@plt>
  40b9dc:	add	x0, x0, #0x4
  40b9e0:	bl	4118c8 <wcrtomb@plt+0xea98>
  40b9e4:	and	w8, w22, #0x1
  40b9e8:	and	w9, w24, #0x1
  40b9ec:	and	w10, w23, #0x1
  40b9f0:	mov	x21, x0
  40b9f4:	strb	w8, [x0]
  40b9f8:	strb	w9, [x0, #1]
  40b9fc:	strb	w10, [x0, #2]
  40ba00:	add	x0, x0, #0x3
  40ba04:	mov	x1, x19
  40ba08:	bl	402c80 <strcpy@plt>
  40ba0c:	cbz	x20, 40ba24 <wcrtomb@plt+0x8bf4>
  40ba10:	ldr	x19, [x20, #40]
  40ba14:	mov	x0, x20
  40ba18:	bl	40bc50 <wcrtomb@plt+0x8e20>
  40ba1c:	mov	x20, x19
  40ba20:	cbnz	x19, 40ba10 <wcrtomb@plt+0x8be0>
  40ba24:	mov	x0, x21
  40ba28:	ldp	x20, x19, [sp, #112]
  40ba2c:	ldp	x22, x21, [sp, #96]
  40ba30:	ldp	x24, x23, [sp, #80]
  40ba34:	ldp	x26, x25, [sp, #64]
  40ba38:	ldp	x28, x27, [sp, #48]
  40ba3c:	ldp	x29, x30, [sp, #32]
  40ba40:	add	sp, sp, #0x80
  40ba44:	ret
  40ba48:	mov	x21, xzr
  40ba4c:	cbnz	x20, 40ba10 <wcrtomb@plt+0x8be0>
  40ba50:	b	40ba24 <wcrtomb@plt+0x8bf4>
  40ba54:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  40ba58:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40ba5c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xe17c>
  40ba60:	add	x0, x0, #0xca1
  40ba64:	add	x1, x1, #0xcce
  40ba68:	add	x3, x3, #0xcd8
  40ba6c:	mov	w2, #0xff6                 	// #4086
  40ba70:	bl	402d90 <__assert_fail@plt>
  40ba74:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  40ba78:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40ba7c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xe17c>
  40ba80:	add	x0, x0, #0xd04
  40ba84:	add	x1, x1, #0xcce
  40ba88:	add	x3, x3, #0xcd8
  40ba8c:	mov	w2, #0x1039                	// #4153
  40ba90:	bl	402d90 <__assert_fail@plt>
  40ba94:	stp	x29, x30, [sp, #-48]!
  40ba98:	stp	x20, x19, [sp, #32]
  40ba9c:	mov	x20, x0
  40baa0:	mov	w0, #0x30                  	// #48
  40baa4:	str	x21, [sp, #16]
  40baa8:	mov	x29, sp
  40baac:	mov	x19, x1
  40bab0:	bl	4118c8 <wcrtomb@plt+0xea98>
  40bab4:	mov	x21, x0
  40bab8:	mov	w0, #0x8                   	// #8
  40babc:	bl	4119fc <wcrtomb@plt+0xebcc>
  40bac0:	str	x0, [x21]
  40bac4:	mov	x0, x19
  40bac8:	bl	4119fc <wcrtomb@plt+0xebcc>
  40bacc:	str	x0, [x21, #8]
  40bad0:	mov	x0, x19
  40bad4:	bl	4119fc <wcrtomb@plt+0xebcc>
  40bad8:	str	x0, [x21, #16]
  40badc:	mov	x0, x19
  40bae0:	bl	4119fc <wcrtomb@plt+0xebcc>
  40bae4:	str	x0, [x21, #24]
  40bae8:	strh	wzr, [x21, #32]
  40baec:	str	x20, [x21, #40]
  40baf0:	mov	x0, x21
  40baf4:	ldp	x20, x19, [sp, #32]
  40baf8:	ldr	x21, [sp, #16]
  40bafc:	ldp	x29, x30, [sp], #48
  40bb00:	ret
  40bb04:	stp	x29, x30, [sp, #-32]!
  40bb08:	str	x19, [sp, #16]
  40bb0c:	mov	x19, x0
  40bb10:	ldr	x0, [x0]
  40bb14:	mov	x29, sp
  40bb18:	bl	40bc1c <wcrtomb@plt+0x8dec>
  40bb1c:	ldr	x8, [x19]
  40bb20:	str	xzr, [x8]
  40bb24:	ldr	x8, [x19, #24]
  40bb28:	strb	wzr, [x8]
  40bb2c:	ldr	x8, [x19, #16]
  40bb30:	strb	wzr, [x8]
  40bb34:	ldr	x8, [x19, #8]
  40bb38:	strb	wzr, [x8]
  40bb3c:	strh	wzr, [x19, #32]
  40bb40:	ldr	x19, [sp, #16]
  40bb44:	ldp	x29, x30, [sp], #32
  40bb48:	ret
  40bb4c:	stp	x29, x30, [sp, #-16]!
  40bb50:	mov	x29, sp
  40bb54:	bl	402ba0 <strcmp@plt>
  40bb58:	cmp	w0, #0x0
  40bb5c:	cset	w0, eq  // eq = none
  40bb60:	ldp	x29, x30, [sp], #16
  40bb64:	ret
  40bb68:	stp	x29, x30, [sp, #-80]!
  40bb6c:	stp	x20, x19, [sp, #64]
  40bb70:	mov	x20, x0
  40bb74:	mov	w0, #0x8                   	// #8
  40bb78:	stp	x26, x25, [sp, #16]
  40bb7c:	stp	x24, x23, [sp, #32]
  40bb80:	stp	x22, x21, [sp, #48]
  40bb84:	mov	x29, sp
  40bb88:	mov	x19, x1
  40bb8c:	bl	4119fc <wcrtomb@plt+0xebcc>
  40bb90:	ldr	x8, [x20]
  40bb94:	mov	x21, x0
  40bb98:	cbz	x8, 40bc00 <wcrtomb@plt+0x8dd0>
  40bb9c:	mov	x23, xzr
  40bba0:	add	x24, x19, #0x8
  40bba4:	mov	x25, x20
  40bba8:	b	40bbbc <wcrtomb@plt+0x8d8c>
  40bbac:	add	x23, x23, #0x1
  40bbb0:	add	x25, x20, x23, lsl #3
  40bbb4:	ldr	x8, [x25]
  40bbb8:	cbz	x8, 40bc00 <wcrtomb@plt+0x8dd0>
  40bbbc:	ldr	x1, [x19]
  40bbc0:	mov	x26, x24
  40bbc4:	cbz	x1, 40bbac <wcrtomb@plt+0x8d7c>
  40bbc8:	ldr	x0, [x25]
  40bbcc:	bl	40e384 <wcrtomb@plt+0xb554>
  40bbd0:	mov	x22, x0
  40bbd4:	mov	x0, x21
  40bbd8:	mov	x1, x22
  40bbdc:	bl	40bc9c <wcrtomb@plt+0x8e6c>
  40bbe0:	mov	x21, x0
  40bbe4:	mov	x0, x22
  40bbe8:	bl	40bc1c <wcrtomb@plt+0x8dec>
  40bbec:	mov	x0, x22
  40bbf0:	bl	402bd0 <free@plt>
  40bbf4:	ldr	x1, [x26], #8
  40bbf8:	cbnz	x1, 40bbc8 <wcrtomb@plt+0x8d98>
  40bbfc:	b	40bbac <wcrtomb@plt+0x8d7c>
  40bc00:	mov	x0, x21
  40bc04:	ldp	x20, x19, [sp, #64]
  40bc08:	ldp	x22, x21, [sp, #48]
  40bc0c:	ldp	x24, x23, [sp, #32]
  40bc10:	ldp	x26, x25, [sp, #16]
  40bc14:	ldp	x29, x30, [sp], #80
  40bc18:	ret
  40bc1c:	stp	x29, x30, [sp, #-32]!
  40bc20:	mov	x8, x0
  40bc24:	ldr	x0, [x0]
  40bc28:	str	x19, [sp, #16]
  40bc2c:	mov	x29, sp
  40bc30:	cbz	x0, 40bc44 <wcrtomb@plt+0x8e14>
  40bc34:	add	x19, x8, #0x8
  40bc38:	bl	402bd0 <free@plt>
  40bc3c:	ldr	x0, [x19], #8
  40bc40:	cbnz	x0, 40bc38 <wcrtomb@plt+0x8e08>
  40bc44:	ldr	x19, [sp, #16]
  40bc48:	ldp	x29, x30, [sp], #32
  40bc4c:	ret
  40bc50:	stp	x29, x30, [sp, #-32]!
  40bc54:	str	x19, [sp, #16]
  40bc58:	mov	x19, x0
  40bc5c:	ldr	x0, [x0]
  40bc60:	mov	x29, sp
  40bc64:	bl	40bc1c <wcrtomb@plt+0x8dec>
  40bc68:	ldr	x0, [x19]
  40bc6c:	bl	402bd0 <free@plt>
  40bc70:	ldr	x0, [x19, #8]
  40bc74:	bl	402bd0 <free@plt>
  40bc78:	ldr	x0, [x19, #16]
  40bc7c:	bl	402bd0 <free@plt>
  40bc80:	ldr	x0, [x19, #24]
  40bc84:	bl	402bd0 <free@plt>
  40bc88:	mov	x0, x19
  40bc8c:	bl	402bd0 <free@plt>
  40bc90:	ldr	x19, [sp, #16]
  40bc94:	ldp	x29, x30, [sp], #32
  40bc98:	ret
  40bc9c:	stp	x29, x30, [sp, #-48]!
  40bca0:	stp	x20, x19, [sp, #32]
  40bca4:	ldr	x20, [x1]
  40bca8:	mov	x19, x0
  40bcac:	str	x21, [sp, #16]
  40bcb0:	mov	x29, sp
  40bcb4:	cbz	x20, 40bce0 <wcrtomb@plt+0x8eb0>
  40bcb8:	add	x21, x1, #0x8
  40bcbc:	mov	x0, x20
  40bcc0:	bl	402750 <strlen@plt>
  40bcc4:	mov	x2, x0
  40bcc8:	mov	x0, x19
  40bccc:	mov	x1, x20
  40bcd0:	bl	40bcf4 <wcrtomb@plt+0x8ec4>
  40bcd4:	ldr	x20, [x21], #8
  40bcd8:	mov	x19, x0
  40bcdc:	cbnz	x20, 40bcbc <wcrtomb@plt+0x8e8c>
  40bce0:	mov	x0, x19
  40bce4:	ldp	x20, x19, [sp, #32]
  40bce8:	ldr	x21, [sp, #16]
  40bcec:	ldp	x29, x30, [sp], #48
  40bcf0:	ret
  40bcf4:	stp	x29, x30, [sp, #-64]!
  40bcf8:	stp	x20, x19, [sp, #48]
  40bcfc:	mov	x19, x0
  40bd00:	add	x0, x2, #0x1
  40bd04:	stp	x24, x23, [sp, #16]
  40bd08:	stp	x22, x21, [sp, #32]
  40bd0c:	mov	x29, sp
  40bd10:	mov	x21, x2
  40bd14:	mov	x22, x1
  40bd18:	bl	4118c8 <wcrtomb@plt+0xea98>
  40bd1c:	mov	x1, x22
  40bd20:	mov	x2, x21
  40bd24:	mov	x20, x0
  40bd28:	bl	402710 <memcpy@plt>
  40bd2c:	strb	wzr, [x20, x21]
  40bd30:	ldr	x0, [x19]
  40bd34:	cbz	x0, 40bd68 <wcrtomb@plt+0x8f38>
  40bd38:	mov	x21, xzr
  40bd3c:	mov	x1, x20
  40bd40:	bl	402d00 <strstr@plt>
  40bd44:	cbnz	x0, 40bde8 <wcrtomb@plt+0x8fb8>
  40bd48:	add	x8, x19, x21, lsl #3
  40bd4c:	ldr	x0, [x8, #8]
  40bd50:	add	x22, x21, #0x1
  40bd54:	mov	x21, x22
  40bd58:	cbnz	x0, 40bd3c <wcrtomb@plt+0x8f0c>
  40bd5c:	ldr	x21, [x19]
  40bd60:	cbnz	x21, 40bd74 <wcrtomb@plt+0x8f44>
  40bd64:	b	40bdc8 <wcrtomb@plt+0x8f98>
  40bd68:	mov	x22, xzr
  40bd6c:	ldr	x21, [x19]
  40bd70:	cbz	x21, 40bdc8 <wcrtomb@plt+0x8f98>
  40bd74:	mov	x23, xzr
  40bd78:	mov	x24, x19
  40bd7c:	b	40bd90 <wcrtomb@plt+0x8f60>
  40bd80:	add	x23, x23, #0x1
  40bd84:	add	x24, x19, x23, lsl #3
  40bd88:	ldr	x21, [x24]
  40bd8c:	cbz	x21, 40bdc8 <wcrtomb@plt+0x8f98>
  40bd90:	mov	x0, x20
  40bd94:	mov	x1, x21
  40bd98:	bl	402d00 <strstr@plt>
  40bd9c:	cbz	x0, 40bd80 <wcrtomb@plt+0x8f50>
  40bda0:	mov	x0, x21
  40bda4:	bl	402bd0 <free@plt>
  40bda8:	sub	x22, x22, #0x1
  40bdac:	cmp	x22, x23
  40bdb0:	b.eq	40bdc8 <wcrtomb@plt+0x8f98>  // b.none
  40bdb4:	lsl	x8, x22, #3
  40bdb8:	ldr	x9, [x19, x8]
  40bdbc:	str	x9, [x24]
  40bdc0:	str	xzr, [x19, x8]
  40bdc4:	b	40bd84 <wcrtomb@plt+0x8f54>
  40bdc8:	add	x1, x22, #0x2
  40bdcc:	mov	w2, #0x8                   	// #8
  40bdd0:	mov	x0, x19
  40bdd4:	bl	4118f4 <wcrtomb@plt+0xeac4>
  40bdd8:	mov	x19, x0
  40bddc:	add	x8, x0, x22, lsl #3
  40bde0:	stp	x20, xzr, [x8]
  40bde4:	b	40bdf0 <wcrtomb@plt+0x8fc0>
  40bde8:	mov	x0, x20
  40bdec:	bl	402bd0 <free@plt>
  40bdf0:	mov	x0, x19
  40bdf4:	ldp	x20, x19, [sp, #48]
  40bdf8:	ldp	x22, x21, [sp, #32]
  40bdfc:	ldp	x24, x23, [sp, #16]
  40be00:	ldp	x29, x30, [sp], #64
  40be04:	ret
  40be08:	stp	x29, x30, [sp, #-48]!
  40be0c:	stp	x20, x19, [sp, #32]
  40be10:	mov	x19, x0
  40be14:	mov	x0, x1
  40be18:	stp	x22, x21, [sp, #16]
  40be1c:	mov	x29, sp
  40be20:	mov	x20, x1
  40be24:	bl	402750 <strlen@plt>
  40be28:	cbz	x0, 40be60 <wcrtomb@plt+0x9030>
  40be2c:	mov	x21, x0
  40be30:	mov	x0, x19
  40be34:	bl	402750 <strlen@plt>
  40be38:	add	x21, x21, #0x1
  40be3c:	mov	x22, x0
  40be40:	add	x1, x21, x0
  40be44:	mov	x0, x19
  40be48:	bl	411920 <wcrtomb@plt+0xeaf0>
  40be4c:	mov	x19, x0
  40be50:	add	x0, x0, x22
  40be54:	mov	x1, x20
  40be58:	mov	x2, x21
  40be5c:	bl	402710 <memcpy@plt>
  40be60:	mov	x0, x19
  40be64:	ldp	x20, x19, [sp, #32]
  40be68:	ldp	x22, x21, [sp, #16]
  40be6c:	ldp	x29, x30, [sp], #48
  40be70:	ret
  40be74:	lsr	w8, w0, #6
  40be78:	ldr	x8, [x1, w8, uxtw #3]
  40be7c:	lsr	x8, x8, x0
  40be80:	and	w0, w8, #0x1
  40be84:	ret
  40be88:	stp	x29, x30, [sp, #-16]!
  40be8c:	mov	x29, sp
  40be90:	bl	402bd0 <free@plt>
  40be94:	ldp	x29, x30, [sp], #16
  40be98:	ret
  40be9c:	stp	x29, x30, [sp, #-16]!
  40bea0:	mov	w0, #0x920                 	// #2336
  40bea4:	mov	x29, sp
  40bea8:	bl	4118c8 <wcrtomb@plt+0xea98>
  40beac:	ldp	x29, x30, [sp], #16
  40beb0:	ret
  40beb4:	stp	x29, x30, [sp, #-64]!
  40beb8:	stp	x22, x21, [sp, #32]
  40bebc:	stp	x20, x19, [sp, #48]
  40bec0:	mov	x22, x2
  40bec4:	mov	x20, x1
  40bec8:	mov	w2, #0x410                 	// #1040
  40becc:	mov	w1, wzr
  40bed0:	stp	x24, x23, [sp, #16]
  40bed4:	mov	x29, sp
  40bed8:	mov	w21, w3
  40bedc:	mov	x19, x0
  40bee0:	bl	4029c0 <memset@plt>
  40bee4:	ldrb	w8, [x20]
  40bee8:	adrp	x9, 40c000 <wcrtomb@plt+0x91d0>
  40beec:	adrp	x10, 40c000 <wcrtomb@plt+0x91d0>
  40bef0:	add	x9, x9, #0x0
  40bef4:	add	x10, x10, #0x1c
  40bef8:	cmp	w8, #0x0
  40befc:	csel	x8, x10, x9, eq  // eq = none
  40bf00:	add	x0, x19, #0x418
  40bf04:	mov	w2, #0x504                 	// #1284
  40bf08:	mov	x1, x20
  40bf0c:	str	x8, [x19, #1040]
  40bf10:	bl	402710 <memcpy@plt>
  40bf14:	ldrb	w8, [x19, #1048]
  40bf18:	mov	x9, #0xffffffffffffffff    	// #-1
  40bf1c:	add	x10, x19, #0x1c0
  40bf20:	mov	w23, #0x1                   	// #1
  40bf24:	eor	w8, w8, #0x1
  40bf28:	strb	w8, [x19, #192]
  40bf2c:	ubfx	w8, w22, #22, #1
  40bf30:	str	x9, [x19, #24]
  40bf34:	strb	w23, [x19, #456]
  40bf38:	strb	w8, [x10, #9]
  40bf3c:	and	w8, w21, #0x1
  40bf40:	tst	w21, #0x2
  40bf44:	strb	w8, [x10, #10]
  40bf48:	mov	w8, #0xa                   	// #10
  40bf4c:	csel	w8, w8, wzr, eq  // eq = none
  40bf50:	strb	w8, [x10, #11]
  40bf54:	str	x22, [x19, #448]
  40bf58:	mov	x22, #0x2401                	// #9217
  40bf5c:	mov	x20, xzr
  40bf60:	add	x21, x19, #0x3f0
  40bf64:	add	x24, x19, #0x3d0
  40bf68:	movk	x22, #0xc000, lsl #32
  40bf6c:	b	40bf9c <wcrtomb@plt+0x916c>
  40bf70:	cmp	x20, #0x40
  40bf74:	lsl	x8, x23, x20
  40bf78:	cset	w9, cc  // cc = lo, ul, last
  40bf7c:	tst	x8, x22
  40bf80:	cset	w8, ne  // ne = any
  40bf84:	and	w8, w9, w8
  40bf88:	add	x9, x19, x20
  40bf8c:	add	x20, x20, #0x1
  40bf90:	cmp	x20, #0x100
  40bf94:	strb	w8, [x9, #716]
  40bf98:	b.eq	40bfec <wcrtomb@plt+0x91bc>  // b.none
  40bf9c:	mov	x0, x19
  40bfa0:	mov	w1, w20
  40bfa4:	bl	40c038 <wcrtomb@plt+0x9208>
  40bfa8:	and	w8, w0, #0xff
  40bfac:	add	x9, x19, x20
  40bfb0:	cmp	w8, #0x2
  40bfb4:	mov	x1, x24
  40bfb8:	strb	w0, [x9, #460]
  40bfbc:	b.eq	40bfcc <wcrtomb@plt+0x919c>  // b.none
  40bfc0:	cmp	w8, #0x4
  40bfc4:	b.ne	40bfd4 <wcrtomb@plt+0x91a4>  // b.any
  40bfc8:	mov	x1, x21
  40bfcc:	mov	w0, w20
  40bfd0:	bl	40c078 <wcrtomb@plt+0x9248>
  40bfd4:	ldrb	w8, [x19, #1050]
  40bfd8:	cbz	w8, 40bf70 <wcrtomb@plt+0x9140>
  40bfdc:	and	x8, x20, #0xc0
  40bfe0:	cmp	x8, #0x80
  40bfe4:	cset	w8, ne  // ne = any
  40bfe8:	b	40bf88 <wcrtomb@plt+0x9158>
  40bfec:	ldp	x20, x19, [sp, #48]
  40bff0:	ldp	x22, x21, [sp, #32]
  40bff4:	ldp	x24, x23, [sp, #16]
  40bff8:	ldp	x29, x30, [sp], #64
  40bffc:	ret
  40c000:	stp	x29, x30, [sp, #-16]!
  40c004:	and	w3, w3, #0x1
  40c008:	mov	w5, #0x1                   	// #1
  40c00c:	mov	x29, sp
  40c010:	bl	40e464 <wcrtomb@plt+0xb634>
  40c014:	ldp	x29, x30, [sp], #16
  40c018:	ret
  40c01c:	stp	x29, x30, [sp, #-16]!
  40c020:	and	w3, w3, #0x1
  40c024:	mov	w5, wzr
  40c028:	mov	x29, sp
  40c02c:	bl	40e464 <wcrtomb@plt+0xb634>
  40c030:	ldp	x29, x30, [sp], #16
  40c034:	ret
  40c038:	stp	x29, x30, [sp, #-16]!
  40c03c:	ldrb	w8, [x0, #459]
  40c040:	mov	x29, sp
  40c044:	cmp	w8, w1, uxtb
  40c048:	b.ne	40c054 <wcrtomb@plt+0x9224>  // b.any
  40c04c:	ldrb	w8, [x0, #458]
  40c050:	cbz	w8, 40c06c <wcrtomb@plt+0x923c>
  40c054:	bl	40f658 <wcrtomb@plt+0xc828>
  40c058:	tst	w0, #0x1
  40c05c:	mov	w8, #0x1                   	// #1
  40c060:	cinc	w0, w8, ne  // ne = any
  40c064:	ldp	x29, x30, [sp], #16
  40c068:	ret
  40c06c:	mov	w0, #0x4                   	// #4
  40c070:	ldp	x29, x30, [sp], #16
  40c074:	ret
  40c078:	lsr	w8, w0, #6
  40c07c:	lsl	x8, x8, #3
  40c080:	ldr	x9, [x1, x8]
  40c084:	mov	w10, #0x1                   	// #1
  40c088:	lsl	x10, x10, x0
  40c08c:	orr	x9, x9, x10
  40c090:	str	x9, [x1, x8]
  40c094:	ret
  40c098:	stp	x29, x30, [sp, #-32]!
  40c09c:	movi	v0.2d, #0x0
  40c0a0:	mov	x8, #0xffffffffffffffff    	// #-1
  40c0a4:	stp	x20, x19, [sp, #16]
  40c0a8:	stp	q0, q0, [x0, #416]
  40c0ac:	stp	q0, q0, [x0, #384]
  40c0b0:	stp	q0, q0, [x0, #352]
  40c0b4:	stp	q0, q0, [x0, #320]
  40c0b8:	stp	q0, q0, [x0, #288]
  40c0bc:	stp	q0, q0, [x0, #256]
  40c0c0:	stp	q0, q0, [x0, #224]
  40c0c4:	stp	q0, q0, [x0, #192]
  40c0c8:	stp	q0, q0, [x0, #160]
  40c0cc:	stp	q0, q0, [x0, #128]
  40c0d0:	stp	q0, q0, [x0, #96]
  40c0d4:	stp	q0, q0, [x0, #64]
  40c0d8:	stp	q0, q0, [x0, #32]
  40c0dc:	stp	q0, q0, [x0]
  40c0e0:	str	x8, [x0, #24]
  40c0e4:	ldrb	w8, [x1, #192]
  40c0e8:	mov	x19, x1
  40c0ec:	mov	x20, x0
  40c0f0:	add	x0, x0, #0x1c0
  40c0f4:	add	x1, x1, #0x1c0
  40c0f8:	mov	w2, #0x250                 	// #592
  40c0fc:	mov	x29, sp
  40c100:	strb	w8, [x20, #192]
  40c104:	bl	402710 <memcpy@plt>
  40c108:	ldr	x8, [x19, #1040]
  40c10c:	add	x0, x20, #0x418
  40c110:	add	x1, x19, #0x418
  40c114:	mov	w2, #0x504                 	// #1284
  40c118:	str	x8, [x20, #1040]
  40c11c:	bl	402710 <memcpy@plt>
  40c120:	ldp	x20, x19, [sp, #16]
  40c124:	ldp	x29, x30, [sp], #32
  40c128:	ret
  40c12c:	sub	sp, sp, #0x50
  40c130:	stp	x20, x19, [sp, #64]
  40c134:	mov	x19, x0
  40c138:	add	x0, sp, #0x10
  40c13c:	add	x2, sp, #0x8
  40c140:	stp	x29, x30, [sp, #32]
  40c144:	stp	x22, x21, [sp, #48]
  40c148:	add	x29, sp, #0x20
  40c14c:	str	xzr, [sp, #8]
  40c150:	bl	402e30 <wcrtomb@plt>
  40c154:	cmn	x0, #0x1
  40c158:	b.eq	40c164 <wcrtomb@plt+0x9334>  // b.none
  40c15c:	mov	x20, x0
  40c160:	b	40c16c <wcrtomb@plt+0x933c>
  40c164:	mov	w20, #0x1                   	// #1
  40c168:	strb	wzr, [sp, #16]
  40c16c:	ldrb	w1, [sp, #16]
  40c170:	subs	w21, w20, #0x1
  40c174:	mov	w8, #0x3                   	// #3
  40c178:	csinc	w2, w8, wzr, eq  // eq = none
  40c17c:	mov	x0, x19
  40c180:	bl	40c1e4 <wcrtomb@plt+0x93b4>
  40c184:	cmp	w20, #0x2
  40c188:	b.lt	40c1d0 <wcrtomb@plt+0x93a0>  // b.tstop
  40c18c:	mov	w8, w20
  40c190:	add	x9, sp, #0x10
  40c194:	sub	x20, x21, #0x1
  40c198:	orr	x21, x9, #0x1
  40c19c:	sub	x22, x8, #0x1
  40c1a0:	ldrb	w1, [x21], #1
  40c1a4:	cmp	x20, #0x0
  40c1a8:	cset	w8, eq  // eq = none
  40c1ac:	lsl	w2, w8, #1
  40c1b0:	mov	x0, x19
  40c1b4:	bl	40c1e4 <wcrtomb@plt+0x93b4>
  40c1b8:	mov	w1, #0x105                 	// #261
  40c1bc:	mov	x0, x19
  40c1c0:	bl	409f84 <wcrtomb@plt+0x7154>
  40c1c4:	subs	x22, x22, #0x1
  40c1c8:	sub	x20, x20, #0x1
  40c1cc:	b.ne	40c1a0 <wcrtomb@plt+0x9370>  // b.any
  40c1d0:	ldp	x20, x19, [sp, #64]
  40c1d4:	ldp	x22, x21, [sp, #48]
  40c1d8:	ldp	x29, x30, [sp, #32]
  40c1dc:	add	sp, sp, #0x50
  40c1e0:	ret
  40c1e4:	stp	x29, x30, [sp, #-48]!
  40c1e8:	str	x21, [sp, #16]
  40c1ec:	stp	x20, x19, [sp, #32]
  40c1f0:	mov	x8, x0
  40c1f4:	ldr	x9, [x8, #160]!
  40c1f8:	mov	w21, w2
  40c1fc:	mov	x19, x0
  40c200:	mov	x20, x1
  40c204:	ldur	x10, [x8, #-8]
  40c208:	mov	x29, sp
  40c20c:	cmp	x9, x10
  40c210:	b.ne	40c24c <wcrtomb@plt+0x941c>  // b.any
  40c214:	ldr	x0, [x19, #144]
  40c218:	mov	w2, #0x1                   	// #1
  40c21c:	mov	x3, #0xffffffffffffffff    	// #-1
  40c220:	mov	w4, #0x8                   	// #8
  40c224:	mov	x1, x8
  40c228:	bl	40c2e0 <wcrtomb@plt+0x94b0>
  40c22c:	ldrb	w8, [x19, #1048]
  40c230:	str	x0, [x19, #144]
  40c234:	cbz	w8, 40c24c <wcrtomb@plt+0x941c>
  40c238:	ldr	x0, [x19, #280]
  40c23c:	ldr	x1, [x19, #160]
  40c240:	mov	w2, #0x1                   	// #1
  40c244:	bl	4118f4 <wcrtomb@plt+0xeac4>
  40c248:	str	x0, [x19, #280]
  40c24c:	ldrb	w8, [x19, #1048]
  40c250:	cbz	w8, 40c260 <wcrtomb@plt+0x9430>
  40c254:	ldr	x8, [x19, #280]
  40c258:	ldr	x9, [x19, #152]
  40c25c:	strb	w21, [x8, x9]
  40c260:	ldp	x10, x9, [x19, #144]
  40c264:	sub	x8, x20, #0x100
  40c268:	cmp	x8, #0x12
  40c26c:	add	x11, x9, #0x1
  40c270:	str	x11, [x19, #152]
  40c274:	str	x20, [x10, x9, lsl #3]
  40c278:	b.hi	40c2a4 <wcrtomb@plt+0x9474>  // b.pmore
  40c27c:	adrp	x9, 420000 <_obstack_memory_used@@Base+0xe17c>
  40c280:	add	x9, x9, #0x9f6
  40c284:	adr	x10, 40c294 <wcrtomb@plt+0x9464>
  40c288:	ldrb	w11, [x9, x8]
  40c28c:	add	x10, x10, x11, lsl #2
  40c290:	br	x10
  40c294:	ldr	x8, [x19, #136]
  40c298:	sub	x8, x8, #0x1
  40c29c:	b	40c2b8 <wcrtomb@plt+0x9488>
  40c2a0:	strb	wzr, [x19, #192]
  40c2a4:	ldr	x8, [x19, #176]
  40c2a8:	add	x8, x8, #0x1
  40c2ac:	str	x8, [x19, #176]
  40c2b0:	ldr	x8, [x19, #136]
  40c2b4:	add	x8, x8, #0x1
  40c2b8:	str	x8, [x19, #136]
  40c2bc:	ldr	x8, [x19, #136]
  40c2c0:	ldr	x9, [x19, #168]
  40c2c4:	cmp	x8, x9
  40c2c8:	b.le	40c2d0 <wcrtomb@plt+0x94a0>
  40c2cc:	str	x8, [x19, #168]
  40c2d0:	ldp	x20, x19, [sp, #32]
  40c2d4:	ldr	x21, [sp, #16]
  40c2d8:	ldp	x29, x30, [sp], #48
  40c2dc:	ret
  40c2e0:	stp	x29, x30, [sp, #-32]!
  40c2e4:	stp	x20, x19, [sp, #16]
  40c2e8:	ldr	x8, [x1]
  40c2ec:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c2f0:	mov	x19, x1
  40c2f4:	mov	x29, sp
  40c2f8:	adds	x10, x8, x8, asr #1
  40c2fc:	csel	x9, x9, x10, vs
  40c300:	cmp	x9, x3
  40c304:	mov	x10, #0xffffffffffffffff    	// #-1
  40c308:	ccmp	x3, x10, #0x4, gt
  40c30c:	csel	x20, x3, x9, gt
  40c310:	tbnz	x4, #63, 40c324 <wcrtomb@plt+0x94f4>
  40c314:	cbz	x4, 40c35c <wcrtomb@plt+0x952c>
  40c318:	tbnz	x20, #63, 40c344 <wcrtomb@plt+0x9514>
  40c31c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c320:	b	40c334 <wcrtomb@plt+0x9504>
  40c324:	tbnz	x20, #63, 40c3e4 <wcrtomb@plt+0x95b4>
  40c328:	cmn	x4, #0x1
  40c32c:	b.eq	40c35c <wcrtomb@plt+0x952c>  // b.none
  40c330:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c334:	sdiv	x9, x9, x4
  40c338:	cmp	x9, x20
  40c33c:	b.ge	40c35c <wcrtomb@plt+0x952c>  // b.tcont
  40c340:	b	40c3f4 <wcrtomb@plt+0x95c4>
  40c344:	cmn	x20, #0x1
  40c348:	b.eq	40c35c <wcrtomb@plt+0x952c>  // b.none
  40c34c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c350:	sdiv	x9, x9, x20
  40c354:	cmp	x9, x4
  40c358:	b.lt	40c3f4 <wcrtomb@plt+0x95c4>  // b.tstop
  40c35c:	mul	x1, x20, x4
  40c360:	cmp	x1, #0x80
  40c364:	cset	w9, lt  // lt = tstop
  40c368:	lsl	x9, x9, #7
  40c36c:	cbz	x9, 40c378 <wcrtomb@plt+0x9548>
  40c370:	sdiv	x20, x9, x4
  40c374:	mul	x1, x20, x4
  40c378:	cbnz	x0, 40c380 <wcrtomb@plt+0x9550>
  40c37c:	str	xzr, [x19]
  40c380:	sub	x9, x20, x8
  40c384:	cmp	x9, x2
  40c388:	b.ge	40c434 <wcrtomb@plt+0x9604>  // b.tcont
  40c38c:	cmp	x3, #0x0
  40c390:	cset	w9, ge  // ge = tcont
  40c394:	adds	x20, x8, x2
  40c398:	cset	w10, vs
  40c39c:	cmp	x20, x3
  40c3a0:	cset	w8, gt
  40c3a4:	tbnz	w10, #0, 40c41c <wcrtomb@plt+0x95ec>
  40c3a8:	and	w8, w9, w8
  40c3ac:	tbnz	w8, #0, 40c41c <wcrtomb@plt+0x95ec>
  40c3b0:	tbnz	x4, #63, 40c3c4 <wcrtomb@plt+0x9594>
  40c3b4:	cbz	x4, 40c430 <wcrtomb@plt+0x9600>
  40c3b8:	tbnz	x20, #63, 40c404 <wcrtomb@plt+0x95d4>
  40c3bc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c3c0:	b	40c3d4 <wcrtomb@plt+0x95a4>
  40c3c4:	tbnz	x20, #63, 40c420 <wcrtomb@plt+0x95f0>
  40c3c8:	cmn	x4, #0x1
  40c3cc:	b.eq	40c430 <wcrtomb@plt+0x9600>  // b.none
  40c3d0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c3d4:	sdiv	x8, x8, x4
  40c3d8:	cmp	x8, x20
  40c3dc:	b.ge	40c430 <wcrtomb@plt+0x9600>  // b.tcont
  40c3e0:	b	40c41c <wcrtomb@plt+0x95ec>
  40c3e4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c3e8:	sdiv	x9, x9, x4
  40c3ec:	cmp	x20, x9
  40c3f0:	b.ge	40c35c <wcrtomb@plt+0x952c>  // b.tcont
  40c3f4:	mul	x1, x20, x4
  40c3f8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c3fc:	cbnz	x9, 40c370 <wcrtomb@plt+0x9540>
  40c400:	b	40c378 <wcrtomb@plt+0x9548>
  40c404:	cmn	x20, #0x1
  40c408:	b.eq	40c430 <wcrtomb@plt+0x9600>  // b.none
  40c40c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c410:	sdiv	x8, x8, x20
  40c414:	cmp	x8, x4
  40c418:	b.ge	40c430 <wcrtomb@plt+0x9600>  // b.tcont
  40c41c:	bl	411ab0 <wcrtomb@plt+0xec80>
  40c420:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c424:	sdiv	x8, x8, x4
  40c428:	cmp	x20, x8
  40c42c:	b.lt	40c41c <wcrtomb@plt+0x95ec>  // b.tstop
  40c430:	mul	x1, x20, x4
  40c434:	bl	411920 <wcrtomb@plt+0xeaf0>
  40c438:	str	x20, [x19]
  40c43c:	ldp	x20, x19, [sp, #16]
  40c440:	ldp	x29, x30, [sp], #32
  40c444:	ret
  40c448:	stp	x29, x30, [sp, #-32]!
  40c44c:	stp	x20, x19, [sp, #16]
  40c450:	ldp	x1, x2, [x0, #32]
  40c454:	mov	x19, x0
  40c458:	add	x0, x0, #0x48
  40c45c:	mov	x3, x19
  40c460:	mov	x29, sp
  40c464:	bl	40cc04 <wcrtomb@plt+0x9dd4>
  40c468:	mov	w20, w0
  40c46c:	cmp	w0, #0x1
  40c470:	b.ne	40c488 <wcrtomb@plt+0x9658>  // b.any
  40c474:	ldr	x8, [x19, #32]
  40c478:	ldrb	w0, [x8]
  40c47c:	bl	40cc80 <wcrtomb@plt+0x9e50>
  40c480:	and	w0, w0, #0xff
  40c484:	b	40c48c <wcrtomb@plt+0x965c>
  40c488:	mov	w0, #0xffffffff            	// #-1
  40c48c:	ldp	x8, x9, [x19, #32]
  40c490:	sxtw	x10, w20
  40c494:	add	x8, x8, x10
  40c498:	sub	x9, x9, x10
  40c49c:	stp	x8, x9, [x19, #32]
  40c4a0:	ldp	x20, x19, [sp, #16]
  40c4a4:	ldp	x29, x30, [sp], #32
  40c4a8:	ret
  40c4ac:	sub	w8, w0, #0x30
  40c4b0:	and	w8, w8, #0xff
  40c4b4:	cmp	w8, #0xa
  40c4b8:	cset	w0, cc  // cc = lo, ul, last
  40c4bc:	ret
  40c4c0:	movi	v0.2d, #0xffffffffffffffff
  40c4c4:	stp	q0, q0, [x0]
  40c4c8:	ret
  40c4cc:	lsr	w8, w0, #6
  40c4d0:	lsl	x8, x8, #3
  40c4d4:	ldr	x9, [x1, x8]
  40c4d8:	mov	w10, #0x1                   	// #1
  40c4dc:	lsl	x10, x10, x0
  40c4e0:	bic	x9, x9, x10
  40c4e4:	str	x9, [x1, x8]
  40c4e8:	ret
  40c4ec:	stp	x29, x30, [sp, #-48]!
  40c4f0:	stp	x22, x21, [sp, #16]
  40c4f4:	stp	x20, x19, [sp, #32]
  40c4f8:	ldr	x8, [x0, #8]
  40c4fc:	mov	x20, x0
  40c500:	mov	x19, x1
  40c504:	mov	x29, sp
  40c508:	cmp	x8, #0x1
  40c50c:	b.lt	40c540 <wcrtomb@plt+0x9710>  // b.tstop
  40c510:	ldr	x22, [x20]
  40c514:	mov	x21, xzr
  40c518:	mov	x0, x19
  40c51c:	mov	x1, x22
  40c520:	bl	40cc84 <wcrtomb@plt+0x9e54>
  40c524:	tbnz	w0, #0, 40c578 <wcrtomb@plt+0x9748>
  40c528:	ldr	x8, [x20, #8]
  40c52c:	add	x21, x21, #0x1
  40c530:	add	x22, x22, #0x20
  40c534:	cmp	x21, x8
  40c538:	b.lt	40c518 <wcrtomb@plt+0x96e8>  // b.tstop
  40c53c:	b	40c544 <wcrtomb@plt+0x9714>
  40c540:	mov	x21, xzr
  40c544:	ldr	x0, [x20]
  40c548:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40c54c:	add	x2, x20, #0x10
  40c550:	movk	x3, #0x7fff, lsl #48
  40c554:	mov	w4, #0x20                  	// #32
  40c558:	mov	x1, x8
  40c55c:	bl	40ccb4 <wcrtomb@plt+0x9e84>
  40c560:	ldr	x8, [x20, #8]
  40c564:	add	x8, x8, #0x1
  40c568:	stp	x0, x8, [x20]
  40c56c:	ldp	q0, q1, [x19]
  40c570:	add	x8, x0, x21, lsl #5
  40c574:	stp	q0, q1, [x8]
  40c578:	mov	x0, x21
  40c57c:	ldp	x20, x19, [sp, #32]
  40c580:	ldp	x22, x21, [sp, #16]
  40c584:	ldp	x29, x30, [sp], #48
  40c588:	ret
  40c58c:	movi	v0.2d, #0x0
  40c590:	stp	q0, q0, [x0]
  40c594:	ret
  40c598:	mov	x8, xzr
  40c59c:	ldr	x9, [x0, x8]
  40c5a0:	mvn	x9, x9
  40c5a4:	str	x9, [x0, x8]
  40c5a8:	add	x8, x8, #0x8
  40c5ac:	cmp	x8, #0x20
  40c5b0:	b.ne	40c59c <wcrtomb@plt+0x976c>  // b.any
  40c5b4:	ret
  40c5b8:	stp	x29, x30, [sp, #-32]!
  40c5bc:	ldr	x8, [x0, #32]
  40c5c0:	str	x19, [sp, #16]
  40c5c4:	mov	x19, x0
  40c5c8:	mov	x29, sp
  40c5cc:	str	x8, [x1]
  40c5d0:	ldr	x8, [x0, #40]
  40c5d4:	str	x8, [x1, #8]
  40c5d8:	str	x2, [x0, #32]
  40c5dc:	mov	x0, x2
  40c5e0:	bl	402750 <strlen@plt>
  40c5e4:	str	x0, [x19, #40]
  40c5e8:	ldr	x19, [sp, #16]
  40c5ec:	ldp	x29, x30, [sp], #32
  40c5f0:	ret
  40c5f4:	sub	sp, sp, #0x120
  40c5f8:	stp	x29, x30, [sp, #192]
  40c5fc:	add	x29, sp, #0xc0
  40c600:	stp	x28, x27, [sp, #208]
  40c604:	stp	x26, x25, [sp, #224]
  40c608:	stp	x24, x23, [sp, #240]
  40c60c:	stp	x22, x21, [sp, #256]
  40c610:	stp	x20, x19, [sp, #272]
  40c614:	mov	x19, x0
  40c618:	str	xzr, [x0, #104]
  40c61c:	sub	x0, x29, #0x28
  40c620:	bl	40c58c <wcrtomb@plt+0x975c>
  40c624:	mov	x0, x19
  40c628:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c62c:	cmp	w0, #0x5e
  40c630:	cset	w8, eq  // eq = none
  40c634:	stp	w8, w0, [sp]
  40c638:	b.ne	40c658 <wcrtomb@plt+0x9828>  // b.any
  40c63c:	mov	x0, x19
  40c640:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c644:	ldrb	w8, [x19, #1049]
  40c648:	mov	w26, w0
  40c64c:	cmp	w8, #0x0
  40c650:	cset	w28, ne  // ne = any
  40c654:	b	40c660 <wcrtomb@plt+0x9830>
  40c658:	mov	w28, #0x1                   	// #1
  40c65c:	mov	w26, w0
  40c660:	ldr	w27, [x19, #72]
  40c664:	cmp	w26, #0x3a
  40c668:	add	x20, sp, #0x14
  40c66c:	add	x21, x19, #0x70
  40c670:	cset	w24, eq  // eq = none
  40c674:	add	x8, x20, #0x4
  40c678:	str	x8, [sp, #8]
  40c67c:	b	40c6ac <wcrtomb@plt+0x987c>
  40c680:	mov	w23, w28
  40c684:	mov	x0, x19
  40c688:	orr	w24, w24, #0x8
  40c68c:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c690:	ldr	w22, [x19, #72]
  40c694:	mov	w25, w0
  40c698:	mov	w28, w23
  40c69c:	cmp	w25, #0x5d
  40c6a0:	mov	w26, w25
  40c6a4:	mov	w27, w22
  40c6a8:	b.eq	40caac <wcrtomb@plt+0x9c7c>  // b.none
  40c6ac:	cmp	w26, #0x5b
  40c6b0:	and	w24, w24, #0xfffffffd
  40c6b4:	b.ne	40c744 <wcrtomb@plt+0x9914>  // b.any
  40c6b8:	mov	x0, x19
  40c6bc:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c6c0:	ldr	w22, [x19, #72]
  40c6c4:	mov	w25, w0
  40c6c8:	cmp	w0, #0x3a
  40c6cc:	b.ne	40c6d8 <wcrtomb@plt+0x98a8>  // b.any
  40c6d0:	ldrb	w8, [x19, #448]
  40c6d4:	tbnz	w8, #2, 40c6e8 <wcrtomb@plt+0x98b8>
  40c6d8:	cmp	w25, #0x3d
  40c6dc:	b.eq	40c6e8 <wcrtomb@plt+0x98b8>  // b.none
  40c6e0:	cmp	w25, #0x2e
  40c6e4:	b.ne	40c748 <wcrtomb@plt+0x9918>  // b.any
  40c6e8:	mov	x0, x19
  40c6ec:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c6f0:	ldr	x8, [x19, #40]
  40c6f4:	cbz	x8, 40c82c <wcrtomb@plt+0x99fc>
  40c6f8:	mov	w22, wzr
  40c6fc:	b	40c714 <wcrtomb@plt+0x98e4>
  40c700:	strb	wzr, [sp, #20]
  40c704:	mov	x0, x19
  40c708:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c70c:	ldr	x8, [x19, #40]
  40c710:	cbz	x8, 40c830 <wcrtomb@plt+0x9a00>
  40c714:	cmp	w0, w25
  40c718:	b.ne	40c72c <wcrtomb@plt+0x98fc>  // b.any
  40c71c:	ldr	x8, [x19, #32]
  40c720:	ldrb	w8, [x8]
  40c724:	cmp	w8, #0x5d
  40c728:	b.eq	40c830 <wcrtomb@plt+0x9a00>  // b.none
  40c72c:	cmp	w22, #0x1f
  40c730:	b.gt	40c700 <wcrtomb@plt+0x98d0>
  40c734:	add	w8, w22, #0x1
  40c738:	strb	w0, [x20, w22, sxtw]
  40c73c:	mov	w22, w8
  40c740:	b	40c704 <wcrtomb@plt+0x98d4>
  40c744:	mov	w25, #0x100                 	// #256
  40c748:	cmp	w26, #0x5c
  40c74c:	b.ne	40c768 <wcrtomb@plt+0x9938>  // b.any
  40c750:	ldrb	w8, [x19, #448]
  40c754:	tbnz	w8, #0, 40c78c <wcrtomb@plt+0x995c>
  40c758:	mov	w26, #0x5c                  	// #92
  40c75c:	cmp	w25, #0x100
  40c760:	b.ne	40c7a4 <wcrtomb@plt+0x9974>  // b.any
  40c764:	b	40c770 <wcrtomb@plt+0x9940>
  40c768:	cmp	w25, #0x100
  40c76c:	b.ne	40c7a4 <wcrtomb@plt+0x9974>  // b.any
  40c770:	mov	x0, x19
  40c774:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c778:	ldr	w22, [x19, #72]
  40c77c:	mov	w25, w0
  40c780:	cmp	w25, #0x2d
  40c784:	b.ne	40c960 <wcrtomb@plt+0x9b30>  // b.any
  40c788:	b	40c7ac <wcrtomb@plt+0x997c>
  40c78c:	mov	x0, x19
  40c790:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c794:	ldr	w27, [x19, #72]
  40c798:	mov	w26, w0
  40c79c:	cmp	w25, #0x100
  40c7a0:	b.eq	40c770 <wcrtomb@plt+0x9940>  // b.none
  40c7a4:	cmp	w25, #0x2d
  40c7a8:	b.ne	40c960 <wcrtomb@plt+0x9b30>  // b.any
  40c7ac:	mov	x0, x19
  40c7b0:	mov	w20, w28
  40c7b4:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c7b8:	ldr	w23, [x19, #72]
  40c7bc:	cmp	w0, #0x5b
  40c7c0:	b.ne	40c810 <wcrtomb@plt+0x99e0>  // b.any
  40c7c4:	ldr	x8, [x19, #32]
  40c7c8:	mov	w9, #0x5d                  	// #93
  40c7cc:	ldrb	w8, [x8]
  40c7d0:	cmp	w8, #0x2e
  40c7d4:	cset	w8, ne  // ne = any
  40c7d8:	and	w20, w20, w8
  40c7dc:	mov	w8, #0x5b                  	// #91
  40c7e0:	csel	w28, w9, w8, eq  // eq = none
  40c7e4:	cmp	w28, #0x5c
  40c7e8:	b.eq	40c81c <wcrtomb@plt+0x99ec>  // b.none
  40c7ec:	cmp	w28, #0x5d
  40c7f0:	b.ne	40c8f4 <wcrtomb@plt+0x9ac4>  // b.any
  40c7f4:	ldp	x9, x10, [x19, #32]
  40c7f8:	mov	w8, #0x1                   	// #1
  40c7fc:	mov	w25, #0x2d                  	// #45
  40c800:	sub	x9, x9, #0x1
  40c804:	add	x10, x10, #0x1
  40c808:	stp	x9, x10, [x19, #32]
  40c80c:	b	40c954 <wcrtomb@plt+0x9b24>
  40c810:	mov	w28, w0
  40c814:	cmp	w28, #0x5c
  40c818:	b.ne	40c7ec <wcrtomb@plt+0x99bc>  // b.any
  40c81c:	ldrb	w8, [x19, #448]
  40c820:	tbnz	w8, #0, 40c8e4 <wcrtomb@plt+0x9ab4>
  40c824:	mov	w28, #0x5c                  	// #92
  40c828:	b	40c8f4 <wcrtomb@plt+0x9ac4>
  40c82c:	mov	w22, wzr
  40c830:	mov	x0, x19
  40c834:	strb	wzr, [x20, w22, sxtw]
  40c838:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c83c:	cmp	w25, #0x3a
  40c840:	mov	w23, wzr
  40c844:	b.ne	40c684 <wcrtomb@plt+0x9854>  // b.any
  40c848:	ldrb	w8, [x19, #457]
  40c84c:	cbz	w8, 40c890 <wcrtomb@plt+0x9a60>
  40c850:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40c854:	add	x0, sp, #0x14
  40c858:	add	x1, x1, #0xd6e
  40c85c:	bl	40bb4c <wcrtomb@plt+0x8d1c>
  40c860:	mov	w8, w0
  40c864:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  40c868:	add	x0, x0, #0xd7a
  40c86c:	tbnz	w8, #0, 40c894 <wcrtomb@plt+0x9a64>
  40c870:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40c874:	add	x0, sp, #0x14
  40c878:	add	x1, x1, #0xd74
  40c87c:	bl	40bb4c <wcrtomb@plt+0x8d1c>
  40c880:	mov	w8, w0
  40c884:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  40c888:	add	x0, x0, #0xd7a
  40c88c:	tbnz	w8, #0, 40c894 <wcrtomb@plt+0x9a64>
  40c890:	add	x0, sp, #0x14
  40c894:	bl	40cd14 <wcrtomb@plt+0x9ee4>
  40c898:	cbz	x0, 40cb7c <wcrtomb@plt+0x9d4c>
  40c89c:	ldrb	w8, [x19, #1048]
  40c8a0:	mov	x23, x0
  40c8a4:	cbz	w8, 40c8b0 <wcrtomb@plt+0x9a80>
  40c8a8:	ldrb	w8, [x23, #16]
  40c8ac:	cbz	w8, 40ca48 <wcrtomb@plt+0x9c18>
  40c8b0:	mov	w25, wzr
  40c8b4:	b	40c8c4 <wcrtomb@plt+0x9a94>
  40c8b8:	add	w25, w25, #0x1
  40c8bc:	cmp	w25, #0x100
  40c8c0:	b.eq	40c680 <wcrtomb@plt+0x9850>  // b.none
  40c8c4:	ldr	x8, [x23, #8]
  40c8c8:	mov	w0, w25
  40c8cc:	blr	x8
  40c8d0:	cbz	w0, 40c8b8 <wcrtomb@plt+0x9a88>
  40c8d4:	sub	x1, x29, #0x28
  40c8d8:	mov	w0, w25
  40c8dc:	bl	40c078 <wcrtomb@plt+0x9248>
  40c8e0:	b	40c8b8 <wcrtomb@plt+0x9a88>
  40c8e4:	mov	x0, x19
  40c8e8:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c8ec:	ldr	w23, [x19, #72]
  40c8f0:	mov	w28, w0
  40c8f4:	mov	x0, x19
  40c8f8:	orr	w24, w24, #0x8
  40c8fc:	bl	40cce0 <wcrtomb@plt+0x9eb0>
  40c900:	ldr	w22, [x19, #72]
  40c904:	cmn	w27, #0x1
  40c908:	mov	w25, w0
  40c90c:	b.eq	40c920 <wcrtomb@plt+0x9af0>  // b.none
  40c910:	cmp	w27, w23
  40c914:	b.ne	40c920 <wcrtomb@plt+0x9af0>  // b.any
  40c918:	mov	w8, #0x1                   	// #1
  40c91c:	b	40c954 <wcrtomb@plt+0x9b24>
  40c920:	ldrb	w8, [x19, #1049]
  40c924:	cbnz	w8, 40c948 <wcrtomb@plt+0x9b18>
  40c928:	mov	w0, w26
  40c92c:	bl	40c4ac <wcrtomb@plt+0x967c>
  40c930:	mov	w23, w0
  40c934:	mov	w0, w28
  40c938:	bl	40c4ac <wcrtomb@plt+0x967c>
  40c93c:	mov	w8, wzr
  40c940:	tbz	w23, #0, 40ca9c <wcrtomb@plt+0x9c6c>
  40c944:	tbz	w0, #0, 40ca9c <wcrtomb@plt+0x9c6c>
  40c948:	cmp	w26, w28
  40c94c:	b.le	40ca50 <wcrtomb@plt+0x9c20>
  40c950:	mov	w8, wzr
  40c954:	mov	w28, w20
  40c958:	add	x20, sp, #0x14
  40c95c:	cbz	w8, 40c69c <wcrtomb@plt+0x986c>
  40c960:	ldrb	w8, [x19, #1048]
  40c964:	cmp	w26, #0x3a
  40c968:	mov	w9, #0x4                   	// #4
  40c96c:	mov	w10, #0x2                   	// #2
  40c970:	csel	w9, w10, w9, eq  // eq = none
  40c974:	orr	w24, w24, w9
  40c978:	cbz	w8, 40c9a0 <wcrtomb@plt+0x9b70>
  40c97c:	cmn	w27, #0x1
  40c980:	b.eq	40c9c8 <wcrtomb@plt+0x9b98>  // b.none
  40c984:	ldrb	w8, [x19, #457]
  40c988:	cbz	w8, 40c9d0 <wcrtomb@plt+0x9ba0>
  40c98c:	ldr	x1, [sp, #8]
  40c990:	mov	w0, w27
  40c994:	bl	40f7f4 <wcrtomb@plt+0xc9c4>
  40c998:	add	w8, w0, #0x1
  40c99c:	b	40c9d4 <wcrtomb@plt+0x9ba4>
  40c9a0:	ldrb	w8, [x19, #457]
  40c9a4:	cbz	w8, 40c9b8 <wcrtomb@plt+0x9b88>
  40c9a8:	bl	402bb0 <__ctype_b_loc@plt>
  40c9ac:	ldr	x8, [x0]
  40c9b0:	ldrh	w8, [x8, w26, sxtw #1]
  40c9b4:	tbnz	w8, #10, 40ca38 <wcrtomb@plt+0x9c08>
  40c9b8:	sub	x1, x29, #0x28
  40c9bc:	mov	w0, w26
  40c9c0:	bl	40c078 <wcrtomb@plt+0x9248>
  40c9c4:	b	40c69c <wcrtomb@plt+0x986c>
  40c9c8:	mov	w28, wzr
  40c9cc:	b	40c69c <wcrtomb@plt+0x986c>
  40c9d0:	mov	w8, #0x1                   	// #1
  40c9d4:	cmp	w8, #0x1
  40c9d8:	str	w27, [sp, #20]
  40c9dc:	b.lt	40c69c <wcrtomb@plt+0x986c>  // b.tstop
  40c9e0:	mov	w23, w8
  40c9e4:	add	x26, sp, #0x14
  40c9e8:	b	40c9f8 <wcrtomb@plt+0x9bc8>
  40c9ec:	subs	x23, x23, #0x1
  40c9f0:	add	x26, x26, #0x4
  40c9f4:	b.eq	40c69c <wcrtomb@plt+0x986c>  // b.none
  40c9f8:	ldr	w0, [x26]
  40c9fc:	sub	x1, x29, #0x28
  40ca00:	bl	40cd88 <wcrtomb@plt+0x9f58>
  40ca04:	tbnz	w0, #0, 40c9ec <wcrtomb@plt+0x9bbc>
  40ca08:	ldp	x0, x1, [x19, #96]
  40ca0c:	mov	x3, #0xffffffffffffffff    	// #-1
  40ca10:	mov	w4, #0x4                   	// #4
  40ca14:	mov	x2, x21
  40ca18:	bl	40ccb4 <wcrtomb@plt+0x9e84>
  40ca1c:	ldr	x8, [x19, #104]
  40ca20:	str	x0, [x19, #96]
  40ca24:	ldr	w9, [x26]
  40ca28:	add	x10, x8, #0x1
  40ca2c:	str	x10, [x19, #104]
  40ca30:	str	w9, [x0, x8, lsl #2]
  40ca34:	b	40c9ec <wcrtomb@plt+0x9bbc>
  40ca38:	sub	x1, x29, #0x28
  40ca3c:	mov	w0, w26
  40ca40:	bl	40cba4 <wcrtomb@plt+0x9d74>
  40ca44:	b	40c69c <wcrtomb@plt+0x986c>
  40ca48:	mov	w23, wzr
  40ca4c:	b	40c684 <wcrtomb@plt+0x9854>
  40ca50:	sxtw	x23, w26
  40ca54:	sxtw	x28, w28
  40ca58:	b	40ca74 <wcrtomb@plt+0x9c44>
  40ca5c:	sub	x1, x29, #0x28
  40ca60:	mov	w0, w23
  40ca64:	bl	40c078 <wcrtomb@plt+0x9248>
  40ca68:	cmp	x23, x28
  40ca6c:	add	x23, x23, #0x1
  40ca70:	b.ge	40c950 <wcrtomb@plt+0x9b20>  // b.tcont
  40ca74:	ldrb	w8, [x19, #457]
  40ca78:	cbz	w8, 40ca5c <wcrtomb@plt+0x9c2c>
  40ca7c:	bl	402bb0 <__ctype_b_loc@plt>
  40ca80:	ldr	x8, [x0]
  40ca84:	ldrh	w8, [x8, x23, lsl #1]
  40ca88:	tbz	w8, #10, 40ca5c <wcrtomb@plt+0x9c2c>
  40ca8c:	sub	x1, x29, #0x28
  40ca90:	mov	w0, w23
  40ca94:	bl	40cba4 <wcrtomb@plt+0x9d74>
  40ca98:	b	40ca68 <wcrtomb@plt+0x9c38>
  40ca9c:	mov	w28, w8
  40caa0:	add	x20, sp, #0x14
  40caa4:	cbz	w8, 40c69c <wcrtomb@plt+0x986c>
  40caa8:	b	40c960 <wcrtomb@plt+0x9b30>
  40caac:	cmp	w24, #0x7
  40cab0:	b.ne	40cacc <wcrtomb@plt+0x9c9c>  // b.any
  40cab4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40cab8:	add	x1, x1, #0xd98
  40cabc:	mov	w2, #0x5                   	// #5
  40cac0:	mov	x0, xzr
  40cac4:	bl	402d10 <dcgettext@plt>
  40cac8:	bl	408288 <wcrtomb@plt+0x5458>
  40cacc:	ldr	w9, [sp, #4]
  40cad0:	tbz	w28, #0, 40cb08 <wcrtomb@plt+0x9cd8>
  40cad4:	ldrb	w8, [x19, #1048]
  40cad8:	cbz	w8, 40cb10 <wcrtomb@plt+0x9ce0>
  40cadc:	cmp	w9, #0x5e
  40cae0:	b.eq	40caec <wcrtomb@plt+0x9cbc>  // b.none
  40cae4:	ldr	x8, [x19, #104]
  40cae8:	cbz	x8, 40cb10 <wcrtomb@plt+0x9ce0>
  40caec:	ldr	w8, [sp]
  40caf0:	sub	x0, x29, #0x28
  40caf4:	strb	w8, [x19, #88]
  40caf8:	bl	40cdc0 <wcrtomb@plt+0x9f90>
  40cafc:	tbz	w0, #0, 40cb48 <wcrtomb@plt+0x9d18>
  40cb00:	mov	x0, #0xffffffffffffffff    	// #-1
  40cb04:	b	40cb54 <wcrtomb@plt+0x9d24>
  40cb08:	mov	w0, #0x112                 	// #274
  40cb0c:	b	40cb5c <wcrtomb@plt+0x9d2c>
  40cb10:	cmp	w9, #0x5e
  40cb14:	b.ne	40cb34 <wcrtomb@plt+0x9d04>  // b.any
  40cb18:	sub	x0, x29, #0x28
  40cb1c:	bl	40c598 <wcrtomb@plt+0x9768>
  40cb20:	ldrb	w8, [x19, #449]
  40cb24:	tbz	w8, #0, 40cb34 <wcrtomb@plt+0x9d04>
  40cb28:	sub	x1, x29, #0x28
  40cb2c:	mov	w0, #0xa                   	// #10
  40cb30:	bl	40c4cc <wcrtomb@plt+0x969c>
  40cb34:	sub	x1, x29, #0x28
  40cb38:	mov	x0, x19
  40cb3c:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40cb40:	add	x0, x0, #0x114
  40cb44:	b	40cb5c <wcrtomb@plt+0x9d2c>
  40cb48:	sub	x1, x29, #0x28
  40cb4c:	mov	x0, x19
  40cb50:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40cb54:	str	x0, [x19, #80]
  40cb58:	mov	w0, #0x113                 	// #275
  40cb5c:	ldp	x20, x19, [sp, #272]
  40cb60:	ldp	x22, x21, [sp, #256]
  40cb64:	ldp	x24, x23, [sp, #240]
  40cb68:	ldp	x26, x25, [sp, #224]
  40cb6c:	ldp	x28, x27, [sp, #208]
  40cb70:	ldp	x29, x30, [sp, #192]
  40cb74:	add	sp, sp, #0x120
  40cb78:	ret
  40cb7c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40cb80:	add	x1, x1, #0xd80
  40cb84:	mov	w2, #0x5                   	// #5
  40cb88:	bl	402d10 <dcgettext@plt>
  40cb8c:	bl	408270 <wcrtomb@plt+0x5440>
  40cb90:	ldr	x8, [x1]
  40cb94:	str	x8, [x0, #32]
  40cb98:	ldr	x8, [x1, #8]
  40cb9c:	str	x8, [x0, #40]
  40cba0:	ret
  40cba4:	stp	x29, x30, [sp, #-48]!
  40cba8:	str	x21, [sp, #16]
  40cbac:	stp	x20, x19, [sp, #32]
  40cbb0:	mov	x29, sp
  40cbb4:	mov	x19, x1
  40cbb8:	bl	4028f0 <toupper@plt>
  40cbbc:	mov	w20, w0
  40cbc0:	mov	x21, xzr
  40cbc4:	b	40cbd4 <wcrtomb@plt+0x9da4>
  40cbc8:	add	x21, x21, #0x1
  40cbcc:	cmp	x21, #0x100
  40cbd0:	b.eq	40cbf4 <wcrtomb@plt+0x9dc4>  // b.none
  40cbd4:	mov	w0, w21
  40cbd8:	bl	4028f0 <toupper@plt>
  40cbdc:	cmp	w0, w20
  40cbe0:	b.ne	40cbc8 <wcrtomb@plt+0x9d98>  // b.any
  40cbe4:	mov	w0, w21
  40cbe8:	mov	x1, x19
  40cbec:	bl	40c078 <wcrtomb@plt+0x9248>
  40cbf0:	b	40cbc8 <wcrtomb@plt+0x9d98>
  40cbf4:	ldp	x20, x19, [sp, #32]
  40cbf8:	ldr	x21, [sp, #16]
  40cbfc:	ldp	x29, x30, [sp], #48
  40cc00:	ret
  40cc04:	stp	x29, x30, [sp, #-48]!
  40cc08:	stp	x20, x19, [sp, #32]
  40cc0c:	ldrb	w8, [x1]
  40cc10:	str	x21, [sp, #16]
  40cc14:	mov	x19, x0
  40cc18:	mov	x29, sp
  40cc1c:	add	x8, x3, x8, lsl #2
  40cc20:	ldr	w21, [x8, #1308]
  40cc24:	cmn	w21, #0x1
  40cc28:	b.ne	40cc68 <wcrtomb@plt+0x9e38>  // b.any
  40cc2c:	add	x20, x3, #0x110
  40cc30:	add	x0, x29, #0x1c
  40cc34:	mov	x3, x20
  40cc38:	bl	411af4 <wcrtomb@plt+0xecc4>
  40cc3c:	sub	x8, x0, #0x1
  40cc40:	cmn	x8, #0x4
  40cc44:	b.hi	40cc5c <wcrtomb@plt+0x9e2c>  // b.pmore
  40cc48:	ldr	w9, [x29, #28]
  40cc4c:	mov	w8, wzr
  40cc50:	str	w9, [x19]
  40cc54:	cbnz	w8, 40cc68 <wcrtomb@plt+0x9e38>
  40cc58:	b	40cc70 <wcrtomb@plt+0x9e40>
  40cc5c:	mov	w8, #0x1                   	// #1
  40cc60:	str	xzr, [x20]
  40cc64:	cbz	w8, 40cc70 <wcrtomb@plt+0x9e40>
  40cc68:	mov	w0, #0x1                   	// #1
  40cc6c:	str	w21, [x19]
  40cc70:	ldp	x20, x19, [sp, #32]
  40cc74:	ldr	x21, [sp, #16]
  40cc78:	ldp	x29, x30, [sp], #48
  40cc7c:	ret
  40cc80:	ret
  40cc84:	mov	x9, xzr
  40cc88:	mov	x8, xzr
  40cc8c:	ldr	x10, [x0, x9]
  40cc90:	ldr	x11, [x1, x9]
  40cc94:	add	x9, x9, #0x8
  40cc98:	cmp	x9, #0x20
  40cc9c:	eor	x10, x11, x10
  40cca0:	orr	x8, x10, x8
  40cca4:	b.ne	40cc8c <wcrtomb@plt+0x9e5c>  // b.any
  40cca8:	cmp	x8, #0x0
  40ccac:	cset	w0, eq  // eq = none
  40ccb0:	ret
  40ccb4:	stp	x29, x30, [sp, #-16]!
  40ccb8:	ldr	x9, [x2]
  40ccbc:	mov	x29, sp
  40ccc0:	cmp	x9, x1
  40ccc4:	b.gt	40ccd8 <wcrtomb@plt+0x9ea8>
  40ccc8:	mov	x8, x2
  40cccc:	mov	w2, #0x1                   	// #1
  40ccd0:	mov	x1, x8
  40ccd4:	bl	40c2e0 <wcrtomb@plt+0x94b0>
  40ccd8:	ldp	x29, x30, [sp], #16
  40ccdc:	ret
  40cce0:	stp	x29, x30, [sp, #-16]!
  40cce4:	ldr	x8, [x0, #40]
  40cce8:	mov	x29, sp
  40ccec:	cbz	x8, 40ccfc <wcrtomb@plt+0x9ecc>
  40ccf0:	bl	40c448 <wcrtomb@plt+0x9618>
  40ccf4:	ldp	x29, x30, [sp], #16
  40ccf8:	ret
  40ccfc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40cd00:	add	x1, x1, #0xdcd
  40cd04:	mov	w2, #0x5                   	// #5
  40cd08:	mov	x0, xzr
  40cd0c:	bl	402d10 <dcgettext@plt>
  40cd10:	bl	408270 <wcrtomb@plt+0x5440>
  40cd14:	stp	x29, x30, [sp, #-48]!
  40cd18:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40cd1c:	add	x1, x1, #0xd7a
  40cd20:	str	x21, [sp, #16]
  40cd24:	stp	x20, x19, [sp, #32]
  40cd28:	mov	x29, sp
  40cd2c:	mov	x19, x0
  40cd30:	bl	40bb4c <wcrtomb@plt+0x8d1c>
  40cd34:	adrp	x20, 420000 <_obstack_memory_used@@Base+0xe17c>
  40cd38:	add	x20, x20, #0xa10
  40cd3c:	tbnz	w0, #0, 40cd74 <wcrtomb@plt+0x9f44>
  40cd40:	mov	x8, xzr
  40cd44:	add	x21, x8, #0x18
  40cd48:	cmp	x21, #0x120
  40cd4c:	b.eq	40cd70 <wcrtomb@plt+0x9f40>  // b.none
  40cd50:	add	x8, x20, x8
  40cd54:	ldr	x1, [x8, #24]
  40cd58:	mov	x0, x19
  40cd5c:	bl	40bb4c <wcrtomb@plt+0x8d1c>
  40cd60:	mov	x8, x21
  40cd64:	tbz	w0, #0, 40cd44 <wcrtomb@plt+0x9f14>
  40cd68:	add	x20, x20, x21
  40cd6c:	b	40cd74 <wcrtomb@plt+0x9f44>
  40cd70:	mov	x20, xzr
  40cd74:	mov	x0, x20
  40cd78:	ldp	x20, x19, [sp, #32]
  40cd7c:	ldr	x21, [sp, #16]
  40cd80:	ldp	x29, x30, [sp], #48
  40cd84:	ret
  40cd88:	stp	x29, x30, [sp, #-32]!
  40cd8c:	str	x19, [sp, #16]
  40cd90:	mov	x29, sp
  40cd94:	mov	x19, x1
  40cd98:	bl	402890 <wctob@plt>
  40cd9c:	tbnz	w0, #31, 40cdb0 <wcrtomb@plt+0x9f80>
  40cda0:	mov	x1, x19
  40cda4:	bl	40c078 <wcrtomb@plt+0x9248>
  40cda8:	mov	w0, #0x1                   	// #1
  40cdac:	b	40cdb4 <wcrtomb@plt+0x9f84>
  40cdb0:	mov	w0, wzr
  40cdb4:	ldr	x19, [sp, #16]
  40cdb8:	ldp	x29, x30, [sp], #32
  40cdbc:	ret
  40cdc0:	mov	x9, xzr
  40cdc4:	mov	x8, xzr
  40cdc8:	ldr	x10, [x0, x9]
  40cdcc:	add	x9, x9, #0x8
  40cdd0:	cmp	x9, #0x20
  40cdd4:	orr	x8, x10, x8
  40cdd8:	b.ne	40cdc8 <wcrtomb@plt+0x9f98>  // b.any
  40cddc:	cmp	x8, #0x0
  40cde0:	cset	w0, eq  // eq = none
  40cde4:	ret
  40cde8:	stp	x29, x30, [sp, #-32]!
  40cdec:	str	x19, [sp, #16]
  40cdf0:	mov	x29, sp
  40cdf4:	mov	x19, x0
  40cdf8:	bl	40ce38 <wcrtomb@plt+0xa008>
  40cdfc:	ldr	x8, [x19, #128]
  40ce00:	cmp	x8, #0x106
  40ce04:	b.eq	40ce2c <wcrtomb@plt+0x9ffc>  // b.none
  40ce08:	cmp	x8, #0x108
  40ce0c:	b.eq	40ce2c <wcrtomb@plt+0x9ffc>  // b.none
  40ce10:	tbnz	x8, #63, 40ce2c <wcrtomb@plt+0x9ffc>
  40ce14:	mov	x0, x19
  40ce18:	bl	40ce38 <wcrtomb@plt+0xa008>
  40ce1c:	mov	w1, #0x105                 	// #261
  40ce20:	mov	x0, x19
  40ce24:	bl	409f84 <wcrtomb@plt+0x7154>
  40ce28:	b	40cdfc <wcrtomb@plt+0x9fcc>
  40ce2c:	ldr	x19, [sp, #16]
  40ce30:	ldp	x29, x30, [sp], #32
  40ce34:	ret
  40ce38:	stp	x29, x30, [sp, #-48]!
  40ce3c:	stp	x22, x21, [sp, #16]
  40ce40:	stp	x20, x19, [sp, #32]
  40ce44:	mov	x29, sp
  40ce48:	mov	x19, x0
  40ce4c:	bl	40cfa0 <wcrtomb@plt+0xa170>
  40ce50:	ldr	x1, [x19, #128]
  40ce54:	sub	x8, x1, #0x101
  40ce58:	cmp	x8, #0x3
  40ce5c:	b.hi	40cf90 <wcrtomb@plt+0xa160>  // b.pmore
  40ce60:	cmp	x1, #0x104
  40ce64:	b.ne	40cf6c <wcrtomb@plt+0xa13c>  // b.any
  40ce68:	ldr	w8, [x19, #64]
  40ce6c:	cbnz	w8, 40ce78 <wcrtomb@plt+0xa048>
  40ce70:	ldr	w8, [x19, #68]
  40ce74:	cbz	w8, 40cf34 <wcrtomb@plt+0xa104>
  40ce78:	ldr	x21, [x19, #152]
  40ce7c:	mov	x0, x19
  40ce80:	mov	x1, x21
  40ce84:	bl	40d0dc <wcrtomb@plt+0xa2ac>
  40ce88:	ldr	w8, [x19, #68]
  40ce8c:	mov	x20, x0
  40ce90:	tbz	w8, #31, 40cea0 <wcrtomb@plt+0xa070>
  40ce94:	mov	w1, #0x103                 	// #259
  40ce98:	mov	x0, x19
  40ce9c:	bl	409f84 <wcrtomb@plt+0x7154>
  40cea0:	ldr	w8, [x19, #64]
  40cea4:	sub	x21, x21, x20
  40cea8:	cbnz	w8, 40ceb8 <wcrtomb@plt+0xa088>
  40ceac:	mov	w1, #0x101                 	// #257
  40ceb0:	mov	x0, x19
  40ceb4:	bl	409f84 <wcrtomb@plt+0x7154>
  40ceb8:	ldr	w8, [x19, #64]
  40cebc:	mov	w22, #0x1                   	// #1
  40cec0:	cmp	w8, #0x2
  40cec4:	b.lt	40cef4 <wcrtomb@plt+0xa0c4>  // b.tstop
  40cec8:	mov	x0, x19
  40cecc:	mov	x1, x21
  40ced0:	mov	x2, x20
  40ced4:	bl	40d164 <wcrtomb@plt+0xa334>
  40ced8:	mov	w1, #0x105                 	// #261
  40cedc:	mov	x0, x19
  40cee0:	bl	409f84 <wcrtomb@plt+0x7154>
  40cee4:	ldr	w8, [x19, #64]
  40cee8:	add	w22, w22, #0x1
  40ceec:	cmp	w22, w8
  40cef0:	b.lt	40cec8 <wcrtomb@plt+0xa098>  // b.tstop
  40cef4:	ldr	w8, [x19, #68]
  40cef8:	cmp	w22, w8
  40cefc:	b.ge	40cf74 <wcrtomb@plt+0xa144>  // b.tcont
  40cf00:	mov	x0, x19
  40cf04:	mov	x1, x21
  40cf08:	mov	x2, x20
  40cf0c:	bl	40d164 <wcrtomb@plt+0xa334>
  40cf10:	mov	w1, #0x101                 	// #257
  40cf14:	mov	x0, x19
  40cf18:	bl	409f84 <wcrtomb@plt+0x7154>
  40cf1c:	mov	w1, #0x105                 	// #261
  40cf20:	mov	x0, x19
  40cf24:	bl	409f84 <wcrtomb@plt+0x7154>
  40cf28:	ldr	w8, [x19, #68]
  40cf2c:	add	w22, w22, #0x1
  40cf30:	b	40cef8 <wcrtomb@plt+0xa0c8>
  40cf34:	cmp	x1, #0x104
  40cf38:	b.ne	40cf6c <wcrtomb@plt+0xa13c>  // b.any
  40cf3c:	ldr	x20, [x19, #152]
  40cf40:	mov	x0, x19
  40cf44:	mov	x1, x20
  40cf48:	bl	40d0dc <wcrtomb@plt+0xa2ac>
  40cf4c:	sub	x8, x20, x0
  40cf50:	mov	x0, x19
  40cf54:	str	x8, [x19, #152]
  40cf58:	bl	40a048 <wcrtomb@plt+0x7218>
  40cf5c:	str	x0, [x19, #128]
  40cf60:	mov	x0, x19
  40cf64:	bl	40ce38 <wcrtomb@plt+0xa008>
  40cf68:	b	40cf80 <wcrtomb@plt+0xa150>
  40cf6c:	mov	x0, x19
  40cf70:	bl	409f84 <wcrtomb@plt+0x7154>
  40cf74:	mov	x0, x19
  40cf78:	bl	40a048 <wcrtomb@plt+0x7218>
  40cf7c:	str	x0, [x19, #128]
  40cf80:	ldr	x1, [x19, #128]
  40cf84:	sub	x8, x1, #0x101
  40cf88:	cmp	x8, #0x4
  40cf8c:	b.cc	40ce60 <wcrtomb@plt+0xa030>  // b.lo, b.ul, b.last
  40cf90:	ldp	x20, x19, [sp, #32]
  40cf94:	ldp	x22, x21, [sp, #16]
  40cf98:	ldp	x29, x30, [sp], #48
  40cf9c:	ret
  40cfa0:	sub	sp, sp, #0xb0
  40cfa4:	stp	x29, x30, [sp, #128]
  40cfa8:	stp	x20, x19, [sp, #160]
  40cfac:	ldr	x1, [x0, #128]
  40cfb0:	mov	x19, x0
  40cfb4:	str	x21, [sp, #144]
  40cfb8:	add	x29, sp, #0x80
  40cfbc:	cmp	x1, #0x100
  40cfc0:	b.cc	40d000 <wcrtomb@plt+0xa1d0>  // b.lo, b.ul, b.last
  40cfc4:	cmp	x1, #0x113
  40cfc8:	b.gt	40d000 <wcrtomb@plt+0xa1d0>
  40cfcc:	sub	x8, x1, #0x10b
  40cfd0:	cmp	x8, #0x9
  40cfd4:	b.cc	40d0b4 <wcrtomb@plt+0xa284>  // b.lo, b.ul, b.last
  40cfd8:	cmp	x1, #0x107
  40cfdc:	b.eq	40d01c <wcrtomb@plt+0xa1ec>  // b.none
  40cfe0:	cmp	x1, #0x109
  40cfe4:	b.eq	40d054 <wcrtomb@plt+0xa224>  // b.none
  40cfe8:	cmp	x1, #0x10a
  40cfec:	b.eq	40d008 <wcrtomb@plt+0xa1d8>  // b.none
  40cff0:	mov	w1, #0x100                 	// #256
  40cff4:	mov	x0, x19
  40cff8:	bl	409f84 <wcrtomb@plt+0x7154>
  40cffc:	b	40d0c8 <wcrtomb@plt+0xa298>
  40d000:	cmp	x1, #0x10a
  40d004:	b.ne	40d0b4 <wcrtomb@plt+0xa284>  // b.any
  40d008:	ldrb	w8, [x19, #1050]
  40d00c:	cbz	w8, 40d0b4 <wcrtomb@plt+0xa284>
  40d010:	mov	x0, x19
  40d014:	bl	40d1f0 <wcrtomb@plt+0xa3c0>
  40d018:	b	40d0bc <wcrtomb@plt+0xa28c>
  40d01c:	mov	x0, x19
  40d020:	bl	40a048 <wcrtomb@plt+0x7218>
  40d024:	str	x0, [x19, #128]
  40d028:	mov	x0, x19
  40d02c:	bl	40a884 <wcrtomb@plt+0x7a54>
  40d030:	ldr	x8, [x19, #128]
  40d034:	cmp	x8, #0x108
  40d038:	b.eq	40d0bc <wcrtomb@plt+0xa28c>  // b.none
  40d03c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40d040:	add	x1, x1, #0xe0b
  40d044:	mov	w2, #0x5                   	// #5
  40d048:	mov	x0, xzr
  40d04c:	bl	402d10 <dcgettext@plt>
  40d050:	bl	408270 <wcrtomb@plt+0x5440>
  40d054:	ldr	w1, [x19, #72]
  40d058:	cmn	w1, #0x1
  40d05c:	b.eq	40d0b0 <wcrtomb@plt+0xa280>  // b.none
  40d060:	mov	x0, x19
  40d064:	bl	40c12c <wcrtomb@plt+0x92fc>
  40d068:	ldrb	w8, [x19, #457]
  40d06c:	cbz	w8, 40d0bc <wcrtomb@plt+0xa28c>
  40d070:	ldr	w0, [x19, #72]
  40d074:	mov	x1, sp
  40d078:	bl	40f7f4 <wcrtomb@plt+0xc9c4>
  40d07c:	cmp	w0, #0x1
  40d080:	b.lt	40d0bc <wcrtomb@plt+0xa28c>  // b.tstop
  40d084:	mov	w20, w0
  40d088:	mov	x21, sp
  40d08c:	ldr	w1, [x21], #4
  40d090:	mov	x0, x19
  40d094:	bl	40c12c <wcrtomb@plt+0x92fc>
  40d098:	mov	w1, #0x106                 	// #262
  40d09c:	mov	x0, x19
  40d0a0:	bl	409f84 <wcrtomb@plt+0x7154>
  40d0a4:	subs	x20, x20, #0x1
  40d0a8:	b.ne	40d08c <wcrtomb@plt+0xa25c>  // b.any
  40d0ac:	b	40d0bc <wcrtomb@plt+0xa28c>
  40d0b0:	mov	w1, #0x112                 	// #274
  40d0b4:	mov	x0, x19
  40d0b8:	bl	409f84 <wcrtomb@plt+0x7154>
  40d0bc:	mov	x0, x19
  40d0c0:	bl	40a048 <wcrtomb@plt+0x7218>
  40d0c4:	str	x0, [x19, #128]
  40d0c8:	ldp	x20, x19, [sp, #160]
  40d0cc:	ldr	x21, [sp, #144]
  40d0d0:	ldp	x29, x30, [sp, #128]
  40d0d4:	add	sp, sp, #0xb0
  40d0d8:	ret
  40d0dc:	stp	x29, x30, [sp, #-48]!
  40d0e0:	stp	x20, x19, [sp, #32]
  40d0e4:	ldr	x8, [x0, #144]
  40d0e8:	sub	x20, x1, #0x1
  40d0ec:	mov	x19, x0
  40d0f0:	str	x21, [sp, #16]
  40d0f4:	ldr	x8, [x8, x20, lsl #3]
  40d0f8:	mov	x29, sp
  40d0fc:	sub	x9, x8, #0x101
  40d100:	cmp	x9, #0x3
  40d104:	b.cs	40d120 <wcrtomb@plt+0xa2f0>  // b.hs, b.nlast
  40d108:	mov	x0, x19
  40d10c:	mov	x1, x20
  40d110:	bl	40d0dc <wcrtomb@plt+0xa2ac>
  40d114:	mov	x21, x0
  40d118:	mov	w0, #0x1                   	// #1
  40d11c:	b	40d148 <wcrtomb@plt+0xa318>
  40d120:	sub	x8, x8, #0x105
  40d124:	cmp	x8, #0x2
  40d128:	b.cs	40d15c <wcrtomb@plt+0xa32c>  // b.hs, b.nlast
  40d12c:	mov	x0, x19
  40d130:	mov	x1, x20
  40d134:	bl	40d0dc <wcrtomb@plt+0xa2ac>
  40d138:	add	x21, x0, #0x1
  40d13c:	sub	x1, x20, x0
  40d140:	mov	x0, x19
  40d144:	bl	40d0dc <wcrtomb@plt+0xa2ac>
  40d148:	add	x0, x21, x0
  40d14c:	ldp	x20, x19, [sp, #32]
  40d150:	ldr	x21, [sp, #16]
  40d154:	ldp	x29, x30, [sp], #48
  40d158:	ret
  40d15c:	mov	w0, #0x1                   	// #1
  40d160:	b	40d14c <wcrtomb@plt+0xa31c>
  40d164:	stp	x29, x30, [sp, #-48]!
  40d168:	stp	x20, x19, [sp, #32]
  40d16c:	ldrb	w8, [x0, #1048]
  40d170:	str	x21, [sp, #16]
  40d174:	mov	x19, x2
  40d178:	mov	x20, x0
  40d17c:	mov	x21, x1
  40d180:	cmp	x2, #0x1
  40d184:	mov	x29, sp
  40d188:	cbz	w8, 40d1b8 <wcrtomb@plt+0xa388>
  40d18c:	b.lt	40d1e0 <wcrtomb@plt+0xa3b0>  // b.tstop
  40d190:	ldr	x8, [x20, #144]
  40d194:	ldr	x9, [x20, #280]
  40d198:	mov	x0, x20
  40d19c:	ldr	x1, [x8, x21, lsl #3]
  40d1a0:	ldrb	w2, [x9, x21]
  40d1a4:	bl	40c1e4 <wcrtomb@plt+0x93b4>
  40d1a8:	subs	x19, x19, #0x1
  40d1ac:	add	x21, x21, #0x1
  40d1b0:	b.ne	40d190 <wcrtomb@plt+0xa360>  // b.any
  40d1b4:	b	40d1e0 <wcrtomb@plt+0xa3b0>
  40d1b8:	b.lt	40d1e0 <wcrtomb@plt+0xa3b0>  // b.tstop
  40d1bc:	lsl	x21, x21, #3
  40d1c0:	ldr	x8, [x20, #144]
  40d1c4:	mov	w2, #0x3                   	// #3
  40d1c8:	mov	x0, x20
  40d1cc:	ldr	x1, [x8, x21]
  40d1d0:	bl	40c1e4 <wcrtomb@plt+0x93b4>
  40d1d4:	subs	x19, x19, #0x1
  40d1d8:	add	x21, x21, #0x8
  40d1dc:	b.ne	40d1c0 <wcrtomb@plt+0xa390>  // b.any
  40d1e0:	ldp	x20, x19, [sp, #32]
  40d1e4:	ldr	x21, [sp, #16]
  40d1e8:	ldp	x29, x30, [sp], #48
  40d1ec:	ret
  40d1f0:	sub	sp, sp, #0x50
  40d1f4:	stp	x29, x30, [sp, #32]
  40d1f8:	stp	x20, x19, [sp, #64]
  40d1fc:	ldr	x8, [x0, #200]
  40d200:	mov	x19, x0
  40d204:	str	x21, [sp, #48]
  40d208:	add	x29, sp, #0x20
  40d20c:	cbnz	x8, 40d28c <wcrtomb@plt+0xa45c>
  40d210:	adrp	x8, 420000 <_obstack_memory_used@@Base+0xe17c>
  40d214:	add	x8, x8, #0xb48
  40d218:	ldp	q0, q1, [x8]
  40d21c:	stp	q0, q1, [sp]
  40d220:	ldrb	w8, [x19, #448]
  40d224:	tbnz	w8, #6, 40d234 <wcrtomb@plt+0xa404>
  40d228:	mov	x1, sp
  40d22c:	mov	w0, #0xa                   	// #10
  40d230:	bl	40c4cc <wcrtomb@plt+0x969c>
  40d234:	ldrb	w8, [x19, #448]
  40d238:	tbz	w8, #7, 40d248 <wcrtomb@plt+0xa418>
  40d23c:	mov	x1, sp
  40d240:	mov	w0, wzr
  40d244:	bl	40c4cc <wcrtomb@plt+0x969c>
  40d248:	mov	x1, sp
  40d24c:	mov	x0, x19
  40d250:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40d254:	adrp	x20, 420000 <_obstack_memory_used@@Base+0xe17c>
  40d258:	add	x8, x0, #0x114
  40d25c:	add	x20, x20, #0xb68
  40d260:	mov	w21, #0xd0                  	// #208
  40d264:	str	x8, [x19, #200]
  40d268:	mov	x0, x19
  40d26c:	mov	x1, x20
  40d270:	bl	40c4ec <wcrtomb@plt+0x96bc>
  40d274:	add	x8, x0, #0x114
  40d278:	str	x8, [x19, x21]
  40d27c:	add	x21, x21, #0x8
  40d280:	cmp	x21, #0x110
  40d284:	add	x20, x20, #0x20
  40d288:	b.ne	40d268 <wcrtomb@plt+0xa438>  // b.any
  40d28c:	ldr	x1, [x19, #200]
  40d290:	mov	x0, x19
  40d294:	bl	409f84 <wcrtomb@plt+0x7154>
  40d298:	ldr	x1, [x19, #208]
  40d29c:	mov	x0, x19
  40d2a0:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2a4:	mov	w1, #0xe0                  	// #224
  40d2a8:	mov	x0, x19
  40d2ac:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2b0:	ldr	x1, [x19, #224]
  40d2b4:	mov	x0, x19
  40d2b8:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2bc:	mov	w1, #0x105                 	// #261
  40d2c0:	mov	x0, x19
  40d2c4:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2c8:	mov	w1, #0x106                 	// #262
  40d2cc:	mov	x0, x19
  40d2d0:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2d4:	mov	w1, #0xed                  	// #237
  40d2d8:	mov	x0, x19
  40d2dc:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2e0:	ldr	x1, [x19, #240]
  40d2e4:	mov	x0, x19
  40d2e8:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2ec:	mov	w1, #0x105                 	// #261
  40d2f0:	mov	x0, x19
  40d2f4:	bl	409f84 <wcrtomb@plt+0x7154>
  40d2f8:	mov	w1, #0x106                 	// #262
  40d2fc:	mov	x0, x19
  40d300:	bl	409f84 <wcrtomb@plt+0x7154>
  40d304:	ldr	x1, [x19, #232]
  40d308:	mov	x0, x19
  40d30c:	bl	409f84 <wcrtomb@plt+0x7154>
  40d310:	mov	w1, #0xf0                  	// #240
  40d314:	mov	x0, x19
  40d318:	bl	409f84 <wcrtomb@plt+0x7154>
  40d31c:	ldr	x1, [x19, #248]
  40d320:	mov	x0, x19
  40d324:	bl	409f84 <wcrtomb@plt+0x7154>
  40d328:	mov	w1, #0x105                 	// #261
  40d32c:	mov	x0, x19
  40d330:	bl	409f84 <wcrtomb@plt+0x7154>
  40d334:	mov	w1, #0x106                 	// #262
  40d338:	mov	x0, x19
  40d33c:	bl	409f84 <wcrtomb@plt+0x7154>
  40d340:	mov	w1, #0xf4                  	// #244
  40d344:	mov	x0, x19
  40d348:	bl	409f84 <wcrtomb@plt+0x7154>
  40d34c:	ldr	x1, [x19, #264]
  40d350:	mov	x0, x19
  40d354:	bl	409f84 <wcrtomb@plt+0x7154>
  40d358:	mov	w1, #0x105                 	// #261
  40d35c:	mov	x0, x19
  40d360:	bl	409f84 <wcrtomb@plt+0x7154>
  40d364:	mov	w1, #0x106                 	// #262
  40d368:	mov	x0, x19
  40d36c:	bl	409f84 <wcrtomb@plt+0x7154>
  40d370:	ldr	x1, [x19, #256]
  40d374:	mov	x0, x19
  40d378:	bl	409f84 <wcrtomb@plt+0x7154>
  40d37c:	mov	w20, #0x3                   	// #3
  40d380:	ldr	x1, [x19, #216]
  40d384:	mov	x0, x19
  40d388:	bl	409f84 <wcrtomb@plt+0x7154>
  40d38c:	mov	w1, #0x105                 	// #261
  40d390:	mov	x0, x19
  40d394:	bl	409f84 <wcrtomb@plt+0x7154>
  40d398:	mov	w1, #0x106                 	// #262
  40d39c:	mov	x0, x19
  40d3a0:	bl	409f84 <wcrtomb@plt+0x7154>
  40d3a4:	subs	w20, w20, #0x1
  40d3a8:	b.ne	40d380 <wcrtomb@plt+0xa550>  // b.any
  40d3ac:	ldp	x20, x19, [sp, #64]
  40d3b0:	ldr	x21, [sp, #48]
  40d3b4:	ldp	x29, x30, [sp, #32]
  40d3b8:	add	sp, sp, #0x50
  40d3bc:	ret
  40d3c0:	stp	x29, x30, [sp, #-32]!
  40d3c4:	stp	x20, x19, [sp, #16]
  40d3c8:	mov	x19, x1
  40d3cc:	mov	x20, x0
  40d3d0:	mov	w1, #0x10                  	// #16
  40d3d4:	mov	x0, x19
  40d3d8:	mov	x29, sp
  40d3dc:	bl	41189c <wcrtomb@plt+0xea6c>
  40d3e0:	stp	xzr, x19, [x20, #8]
  40d3e4:	str	x0, [x20]
  40d3e8:	ldp	x20, x19, [sp, #16]
  40d3ec:	ldp	x29, x30, [sp], #32
  40d3f0:	ret
  40d3f4:	stp	x29, x30, [sp, #-16]!
  40d3f8:	mov	x3, x2
  40d3fc:	mov	w2, #0xffffffff            	// #-1
  40d400:	mov	x29, sp
  40d404:	bl	40da80 <wcrtomb@plt+0xac50>
  40d408:	ldp	x29, x30, [sp], #16
  40d40c:	ret
  40d410:	stp	x29, x30, [sp, #-48]!
  40d414:	str	x21, [sp, #16]
  40d418:	stp	x20, x19, [sp, #32]
  40d41c:	mov	x21, x1
  40d420:	ldr	x8, [x21, #16]!
  40d424:	ldr	x9, [x0, #8]
  40d428:	mov	x20, x1
  40d42c:	mov	x19, x0
  40d430:	mov	x29, sp
  40d434:	cmp	x8, x9
  40d438:	b.ge	40d468 <wcrtomb@plt+0xa638>  // b.tcont
  40d43c:	ldr	x0, [x20]
  40d440:	bl	402bd0 <free@plt>
  40d444:	ldr	x8, [x19, #8]
  40d448:	ldr	x9, [x20, #16]
  40d44c:	mov	x3, #0xffffffffffffffff    	// #-1
  40d450:	mov	w4, #0x10                  	// #16
  40d454:	mov	x0, xzr
  40d458:	sub	x2, x8, x9
  40d45c:	mov	x1, x21
  40d460:	bl	40c2e0 <wcrtomb@plt+0x94b0>
  40d464:	str	x0, [x20]
  40d468:	ldr	x8, [x19, #8]
  40d46c:	str	x8, [x20, #8]
  40d470:	ldr	x8, [x19, #8]
  40d474:	cbz	x8, 40d488 <wcrtomb@plt+0xa658>
  40d478:	ldr	x0, [x20]
  40d47c:	ldr	x1, [x19]
  40d480:	lsl	x2, x8, #4
  40d484:	bl	402710 <memcpy@plt>
  40d488:	ldp	x20, x19, [sp, #32]
  40d48c:	ldr	x21, [sp, #16]
  40d490:	ldp	x29, x30, [sp], #48
  40d494:	ret
  40d498:	sub	sp, sp, #0x70
  40d49c:	stp	x29, x30, [sp, #32]
  40d4a0:	stp	x24, x23, [sp, #64]
  40d4a4:	stp	x22, x21, [sp, #80]
  40d4a8:	stp	x20, x19, [sp, #96]
  40d4ac:	ldr	x1, [x0, #176]
  40d4b0:	mov	x19, x0
  40d4b4:	add	x0, sp, #0x8
  40d4b8:	str	x25, [sp, #48]
  40d4bc:	add	x29, sp, #0x20
  40d4c0:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40d4c4:	ldr	x8, [x19, #152]
  40d4c8:	cmp	x8, #0x1
  40d4cc:	b.lt	40d5d4 <wcrtomb@plt+0xa7a4>  // b.tstop
  40d4d0:	adrp	x23, 420000 <_obstack_memory_used@@Base+0xe17c>
  40d4d4:	mov	x20, xzr
  40d4d8:	mov	w22, #0x18                  	// #24
  40d4dc:	add	x23, x23, #0xc68
  40d4e0:	b	40d4f4 <wcrtomb@plt+0xa6c4>
  40d4e4:	ldr	x8, [x19, #152]
  40d4e8:	add	x20, x20, #0x1
  40d4ec:	cmp	x20, x8
  40d4f0:	b.ge	40d5d4 <wcrtomb@plt+0xa7a4>  // b.tcont
  40d4f4:	ldr	x8, [x19, #320]
  40d4f8:	madd	x9, x20, x22, x8
  40d4fc:	ldr	x9, [x9, #8]
  40d500:	cmp	x9, #0x1
  40d504:	b.lt	40d4e4 <wcrtomb@plt+0xa6b4>  // b.tstop
  40d508:	ldr	x9, [x19, #144]
  40d50c:	ldr	x9, [x9, x20, lsl #3]
  40d510:	cmp	x9, #0x100
  40d514:	cset	w10, lt  // lt = tstop
  40d518:	cmp	x9, #0x112
  40d51c:	cset	w11, eq  // eq = none
  40d520:	cmp	x9, #0x10a
  40d524:	orr	w10, w10, w11
  40d528:	cset	w11, eq  // eq = none
  40d52c:	cmp	x9, #0x113
  40d530:	orr	w10, w11, w10
  40d534:	cset	w11, eq  // eq = none
  40d538:	cmp	x9, #0x114
  40d53c:	orr	w10, w11, w10
  40d540:	cset	w11, lt  // lt = tstop
  40d544:	eor	w10, w11, w10
  40d548:	cmp	w10, #0x1
  40d54c:	b.ne	40d4e4 <wcrtomb@plt+0xa6b4>  // b.any
  40d550:	sub	x9, x9, #0x10c
  40d554:	cmp	x9, #0x5
  40d558:	b.hi	40d564 <wcrtomb@plt+0xa734>  // b.pmore
  40d55c:	ldr	w21, [x23, x9, lsl #2]
  40d560:	b	40d568 <wcrtomb@plt+0xa738>
  40d564:	mov	w21, #0x1ff                 	// #511
  40d568:	madd	x1, x20, x22, x8
  40d56c:	mov	x0, x20
  40d570:	bl	40dc14 <wcrtomb@plt+0xade4>
  40d574:	ldr	x8, [x19, #152]
  40d578:	cmp	x8, #0x1
  40d57c:	b.lt	40d4e4 <wcrtomb@plt+0xa6b4>  // b.tstop
  40d580:	mov	x24, xzr
  40d584:	mov	x25, xzr
  40d588:	b	40d5a0 <wcrtomb@plt+0xa770>
  40d58c:	ldr	x8, [x19, #152]
  40d590:	add	x25, x25, #0x1
  40d594:	add	x24, x24, #0x18
  40d598:	cmp	x25, x8
  40d59c:	b.ge	40d4e4 <wcrtomb@plt+0xa6b4>  // b.tcont
  40d5a0:	cmp	x20, x25
  40d5a4:	b.eq	40d58c <wcrtomb@plt+0xa75c>  // b.none
  40d5a8:	ldr	x8, [x19, #320]
  40d5ac:	add	x0, x8, x24
  40d5b0:	ldr	x9, [x0, #8]
  40d5b4:	cmp	x9, #0x1
  40d5b8:	b.lt	40d58c <wcrtomb@plt+0xa75c>  // b.tstop
  40d5bc:	madd	x2, x20, x22, x8
  40d5c0:	add	x4, sp, #0x8
  40d5c4:	mov	x1, x20
  40d5c8:	mov	w3, w21
  40d5cc:	bl	40dcb8 <wcrtomb@plt+0xae88>
  40d5d0:	b	40d58c <wcrtomb@plt+0xa75c>
  40d5d4:	ldr	x0, [sp, #8]
  40d5d8:	bl	402bd0 <free@plt>
  40d5dc:	ldp	x20, x19, [sp, #96]
  40d5e0:	ldp	x22, x21, [sp, #80]
  40d5e4:	ldp	x24, x23, [sp, #64]
  40d5e8:	ldr	x25, [sp, #48]
  40d5ec:	ldp	x29, x30, [sp, #32]
  40d5f0:	add	sp, sp, #0x70
  40d5f4:	ret
  40d5f8:	sub	sp, sp, #0x50
  40d5fc:	stp	x29, x30, [sp, #32]
  40d600:	stp	x20, x19, [sp, #64]
  40d604:	mov	x19, x0
  40d608:	ldr	x0, [x0, #152]
  40d60c:	str	x21, [sp, #48]
  40d610:	add	x29, sp, #0x20
  40d614:	bl	4119fc <wcrtomb@plt+0xebcc>
  40d618:	ldr	x8, [x19, #152]
  40d61c:	mov	x20, x0
  40d620:	cmp	x8, #0x1
  40d624:	b.lt	40d6d8 <wcrtomb@plt+0xa8a8>  // b.tstop
  40d628:	ldr	x9, [x19, #320]
  40d62c:	ldr	x10, [x19, #152]
  40d630:	mov	x8, xzr
  40d634:	mov	w11, #0x18                  	// #24
  40d638:	mov	w12, #0x8                   	// #8
  40d63c:	b	40d64c <wcrtomb@plt+0xa81c>
  40d640:	add	x8, x8, #0x1
  40d644:	cmp	x8, x10
  40d648:	b.ge	40d6d8 <wcrtomb@plt+0xa8a8>  // b.tcont
  40d64c:	madd	x13, x8, x11, x9
  40d650:	ldr	x13, [x13, #8]
  40d654:	cmp	x13, #0x1
  40d658:	b.lt	40d640 <wcrtomb@plt+0xa810>  // b.tstop
  40d65c:	ldr	x15, [x19, #320]
  40d660:	mov	x13, xzr
  40d664:	mov	x14, xzr
  40d668:	mov	x17, x9
  40d66c:	madd	x16, x8, x11, x15
  40d670:	ldr	x16, [x16, #8]
  40d674:	b	40d698 <wcrtomb@plt+0xa868>
  40d678:	ldrb	w18, [x20, x17]
  40d67c:	orr	w18, w18, #0x1
  40d680:	strb	w18, [x20, x17]
  40d684:	add	x14, x14, #0x1
  40d688:	cmp	x14, x16
  40d68c:	add	x13, x13, #0x10
  40d690:	mov	x17, x15
  40d694:	b.ge	40d640 <wcrtomb@plt+0xa810>  // b.tcont
  40d698:	mul	x18, x8, x11
  40d69c:	ldr	x17, [x17, x18]
  40d6a0:	ldr	x17, [x17, x13]
  40d6a4:	cmp	x17, x8
  40d6a8:	b.eq	40d678 <wcrtomb@plt+0xa848>  // b.none
  40d6ac:	ldrb	w18, [x20, x17]
  40d6b0:	b.ge	40d6bc <wcrtomb@plt+0xa88c>  // b.tcont
  40d6b4:	orr	w18, w18, #0x2
  40d6b8:	b	40d680 <wcrtomb@plt+0xa850>
  40d6bc:	and	w0, w18, #0x8
  40d6c0:	strb	w0, [x20, x17]
  40d6c4:	tbnz	w18, #3, 40d6d0 <wcrtomb@plt+0xa8a0>
  40d6c8:	strb	w12, [x20, x17]
  40d6cc:	b	40d684 <wcrtomb@plt+0xa854>
  40d6d0:	orr	w18, w0, #0x4
  40d6d4:	b	40d680 <wcrtomb@plt+0xa850>
  40d6d8:	ldrb	w8, [x20]
  40d6dc:	add	x0, sp, #0x8
  40d6e0:	orr	w8, w8, #0x10
  40d6e4:	strb	w8, [x20]
  40d6e8:	ldr	x1, [x19, #176]
  40d6ec:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40d6f0:	ldr	x0, [x19, #152]
  40d6f4:	mov	w1, #0x4                   	// #4
  40d6f8:	bl	41189c <wcrtomb@plt+0xea6c>
  40d6fc:	ldr	x8, [x19, #152]
  40d700:	str	x0, [x19, #336]
  40d704:	cmp	x8, #0x1
  40d708:	b.lt	40d744 <wcrtomb@plt+0xa914>  // b.tstop
  40d70c:	mov	x21, xzr
  40d710:	b	40d724 <wcrtomb@plt+0xa8f4>
  40d714:	ldr	x8, [x19, #152]
  40d718:	add	x21, x21, #0x1
  40d71c:	cmp	x21, x8
  40d720:	b.ge	40d744 <wcrtomb@plt+0xa914>  // b.tcont
  40d724:	ldrb	w8, [x20, x21]
  40d728:	tbz	w8, #4, 40d714 <wcrtomb@plt+0xa8e4>
  40d72c:	add	x3, sp, #0x8
  40d730:	mov	x0, x19
  40d734:	mov	x1, x21
  40d738:	mov	x2, x20
  40d73c:	bl	40dd1c <wcrtomb@plt+0xaeec>
  40d740:	b	40d714 <wcrtomb@plt+0xa8e4>
  40d744:	mov	x0, x19
  40d748:	bl	40deac <wcrtomb@plt+0xb07c>
  40d74c:	ldr	x0, [sp, #8]
  40d750:	bl	402bd0 <free@plt>
  40d754:	mov	x0, x20
  40d758:	bl	402bd0 <free@plt>
  40d75c:	ldp	x20, x19, [sp, #64]
  40d760:	ldr	x21, [sp, #48]
  40d764:	ldp	x29, x30, [sp, #32]
  40d768:	add	sp, sp, #0x50
  40d76c:	ret
  40d770:	stp	x29, x30, [sp, #-48]!
  40d774:	str	x21, [sp, #16]
  40d778:	stp	x20, x19, [sp, #32]
  40d77c:	mov	x19, x2
  40d780:	mov	x20, x1
  40d784:	mov	x21, x0
  40d788:	ldp	x0, x1, [x2], #16
  40d78c:	mov	x3, #0xffffffffffffffff    	// #-1
  40d790:	mov	w4, #0x10                  	// #16
  40d794:	mov	x29, sp
  40d798:	bl	40ccb4 <wcrtomb@plt+0x9e84>
  40d79c:	ldr	x8, [x19, #8]
  40d7a0:	add	x9, x8, #0x1
  40d7a4:	add	x8, x0, x8, lsl #4
  40d7a8:	stp	x0, x9, [x19]
  40d7ac:	stp	x21, x20, [x8]
  40d7b0:	ldp	x20, x19, [sp, #32]
  40d7b4:	ldr	x21, [sp, #16]
  40d7b8:	ldp	x29, x30, [sp], #48
  40d7bc:	ret
  40d7c0:	eor	w8, w0, w0, lsr #2
  40d7c4:	mov	w9, #0x49                  	// #73
  40d7c8:	tst	w8, w9
  40d7cc:	cset	w0, ne  // ne = any
  40d7d0:	ret
  40d7d4:	eor	w8, w0, w0, lsr #1
  40d7d8:	mov	w9, #0x49                  	// #73
  40d7dc:	tst	w8, w9
  40d7e0:	cset	w0, ne  // ne = any
  40d7e4:	ret
  40d7e8:	ldr	x8, [x1, #8]
  40d7ec:	cmp	x8, #0x1
  40d7f0:	b.lt	40d820 <wcrtomb@plt+0xa9f0>  // b.tstop
  40d7f4:	ldr	x9, [x0, #344]
  40d7f8:	ldp	x10, x11, [x1]
  40d7fc:	mov	x8, xzr
  40d800:	mov	w0, wzr
  40d804:	ldr	x12, [x10], #16
  40d808:	add	x8, x8, #0x1
  40d80c:	cmp	x8, x11
  40d810:	ldr	w12, [x9, x12, lsl #2]
  40d814:	orr	w0, w12, w0
  40d818:	b.lt	40d804 <wcrtomb@plt+0xa9d4>  // b.tstop
  40d81c:	ret
  40d820:	mov	w0, wzr
  40d824:	ret
  40d828:	sub	sp, sp, #0x80
  40d82c:	stp	x29, x30, [sp, #32]
  40d830:	stp	x28, x27, [sp, #48]
  40d834:	stp	x26, x25, [sp, #64]
  40d838:	stp	x24, x23, [sp, #80]
  40d83c:	stp	x22, x21, [sp, #96]
  40d840:	stp	x20, x19, [sp, #112]
  40d844:	ldr	x26, [x1, #8]
  40d848:	add	x29, sp, #0x20
  40d84c:	mov	x19, x0
  40d850:	mov	x25, xzr
  40d854:	cmp	x26, #0x1
  40d858:	stur	w2, [x29, #-4]
  40d85c:	b.lt	40d888 <wcrtomb@plt+0xaa58>  // b.tstop
  40d860:	ldp	x9, x26, [x1]
  40d864:	mov	x8, xzr
  40d868:	add	x9, x9, #0x8
  40d86c:	ldur	x10, [x9, #-8]
  40d870:	ldr	w11, [x9], #16
  40d874:	add	x8, x8, #0x1
  40d878:	cmp	x8, x26
  40d87c:	add	x10, x10, x11
  40d880:	eor	x25, x10, x25
  40d884:	b.lt	40d86c <wcrtomb@plt+0xaa3c>  // b.tstop
  40d888:	ldr	x23, [x19, #304]
  40d88c:	cmp	x23, #0x1
  40d890:	b.lt	40d954 <wcrtomb@plt+0xab24>  // b.tstop
  40d894:	ldr	x9, [x19, #296]
  40d898:	mov	x8, xzr
  40d89c:	mov	w10, #0x50                  	// #80
  40d8a0:	b	40d8c4 <wcrtomb@plt+0xaa94>
  40d8a4:	mov	x11, xzr
  40d8a8:	cmp	x11, x26
  40d8ac:	csel	x0, x8, x0, eq  // eq = none
  40d8b0:	b.eq	40da60 <wcrtomb@plt+0xac30>  // b.none
  40d8b4:	ldr	x23, [x19, #304]
  40d8b8:	add	x8, x8, #0x1
  40d8bc:	cmp	x8, x23
  40d8c0:	b.ge	40d958 <wcrtomb@plt+0xab28>  // b.tcont
  40d8c4:	mul	x11, x8, x10
  40d8c8:	ldr	x11, [x9, x11]
  40d8cc:	cmp	x25, x11
  40d8d0:	b.ne	40d8b4 <wcrtomb@plt+0xaa84>  // b.any
  40d8d4:	madd	x11, x8, x10, x9
  40d8d8:	ldr	x11, [x11, #16]
  40d8dc:	cmp	x26, x11
  40d8e0:	b.ne	40d8b4 <wcrtomb@plt+0xaa84>  // b.any
  40d8e4:	madd	x11, x8, x10, x9
  40d8e8:	ldrb	w11, [x11, #32]
  40d8ec:	ldur	w12, [x29, #-4]
  40d8f0:	cmp	w11, w12
  40d8f4:	b.ne	40d8b4 <wcrtomb@plt+0xaa84>  // b.any
  40d8f8:	cmp	x26, #0x1
  40d8fc:	b.lt	40d8a4 <wcrtomb@plt+0xaa74>  // b.tstop
  40d900:	madd	x13, x8, x10, x9
  40d904:	ldr	x12, [x1]
  40d908:	ldr	x13, [x13, #8]
  40d90c:	mov	x11, xzr
  40d910:	add	x12, x12, #0x8
  40d914:	add	x13, x13, #0x8
  40d918:	ldr	w14, [x12]
  40d91c:	ldr	w15, [x13]
  40d920:	cmp	w14, w15
  40d924:	b.ne	40d8a8 <wcrtomb@plt+0xaa78>  // b.any
  40d928:	ldur	x14, [x12, #-8]
  40d92c:	ldur	x15, [x13, #-8]
  40d930:	cmp	x14, x15
  40d934:	b.ne	40d8a8 <wcrtomb@plt+0xaa78>  // b.any
  40d938:	add	x11, x11, #0x1
  40d93c:	add	x12, x12, #0x10
  40d940:	cmp	x26, x11
  40d944:	add	x13, x13, #0x10
  40d948:	b.ne	40d918 <wcrtomb@plt+0xaae8>  // b.any
  40d94c:	mov	x11, x26
  40d950:	b	40d8a8 <wcrtomb@plt+0xaa78>
  40d954:	mov	x8, xzr
  40d958:	cmp	x26, #0x1
  40d95c:	stp	x8, x1, [sp, #8]
  40d960:	b.lt	40d9d0 <wcrtomb@plt+0xaba0>  // b.tstop
  40d964:	ldr	x21, [x19, #336]
  40d968:	ldr	x20, [x1]
  40d96c:	mov	x27, xzr
  40d970:	mov	w28, wzr
  40d974:	b	40d998 <wcrtomb@plt+0xab68>
  40d978:	ldr	x8, [x19, #144]
  40d97c:	ldr	x8, [x8, x22, lsl #3]
  40d980:	cmp	x8, #0x112
  40d984:	mov	w8, #0x1ff                 	// #511
  40d988:	csel	w28, w8, w28, eq  // eq = none
  40d98c:	subs	x26, x26, #0x1
  40d990:	add	x20, x20, #0x10
  40d994:	b.eq	40d9d8 <wcrtomb@plt+0xaba8>  // b.none
  40d998:	ldr	x22, [x20]
  40d99c:	ldr	w24, [x21, x22, lsl #2]
  40d9a0:	cbz	w24, 40d978 <wcrtomb@plt+0xab48>
  40d9a4:	ldur	w1, [x29, #-4]
  40d9a8:	mov	w2, #0x7                   	// #7
  40d9ac:	mov	w0, w24
  40d9b0:	bl	40e2ec <wcrtomb@plt+0xb4bc>
  40d9b4:	tst	w0, #0x1
  40d9b8:	csel	w8, w24, wzr, ne  // ne = any
  40d9bc:	orr	w28, w8, w28
  40d9c0:	cbnz	x27, 40d98c <wcrtomb@plt+0xab5c>
  40d9c4:	ldr	x8, [x19, #144]
  40d9c8:	ldr	x27, [x8, x22, lsl #3]
  40d9cc:	b	40d98c <wcrtomb@plt+0xab5c>
  40d9d0:	mov	w28, wzr
  40d9d4:	mov	x27, xzr
  40d9d8:	ldr	x0, [x19, #296]
  40d9dc:	add	x2, x19, #0x138
  40d9e0:	mov	x3, #0xffffffffffffffff    	// #-1
  40d9e4:	mov	w4, #0x50                  	// #80
  40d9e8:	mov	x1, x23
  40d9ec:	mov	x20, #0xffffffffffffffff    	// #-1
  40d9f0:	bl	40ccb4 <wcrtomb@plt+0x9e84>
  40d9f4:	str	x0, [x19, #296]
  40d9f8:	ldp	x23, x22, [sp, #8]
  40d9fc:	add	x8, x23, x23, lsl #2
  40da00:	lsl	x21, x8, #4
  40da04:	str	x25, [x0, x21]
  40da08:	ldr	x8, [x19, #296]
  40da0c:	ldr	x1, [x22, #8]
  40da10:	add	x8, x8, x21
  40da14:	add	x0, x8, #0x8
  40da18:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40da1c:	ldr	x8, [x19, #296]
  40da20:	mov	x0, x22
  40da24:	add	x8, x8, x21
  40da28:	add	x1, x8, #0x8
  40da2c:	bl	40d410 <wcrtomb@plt+0xa5e0>
  40da30:	ldr	x8, [x19, #296]
  40da34:	ldur	w9, [x29, #-4]
  40da38:	mov	x0, x23
  40da3c:	add	x8, x8, x21
  40da40:	strb	w9, [x8, #32]
  40da44:	strh	w28, [x8, #34]
  40da48:	stp	xzr, xzr, [x8, #48]
  40da4c:	str	x27, [x8, #40]
  40da50:	str	x20, [x8, #72]
  40da54:	ldr	x8, [x19, #304]
  40da58:	add	x8, x8, #0x1
  40da5c:	str	x8, [x19, #304]
  40da60:	ldp	x20, x19, [sp, #112]
  40da64:	ldp	x22, x21, [sp, #96]
  40da68:	ldp	x24, x23, [sp, #80]
  40da6c:	ldp	x26, x25, [sp, #64]
  40da70:	ldp	x28, x27, [sp, #48]
  40da74:	ldp	x29, x30, [sp, #32]
  40da78:	add	sp, sp, #0x80
  40da7c:	ret
  40da80:	stp	x29, x30, [sp, #-64]!
  40da84:	str	x23, [sp, #16]
  40da88:	stp	x22, x21, [sp, #32]
  40da8c:	stp	x20, x19, [sp, #48]
  40da90:	mov	x23, x3
  40da94:	ldr	x8, [x23, #16]!
  40da98:	ldr	x9, [x0, #8]
  40da9c:	ldr	x10, [x1, #8]
  40daa0:	mov	x19, x3
  40daa4:	mov	x20, x1
  40daa8:	sub	x8, x8, x9
  40daac:	mov	x21, x0
  40dab0:	cmp	x8, x10
  40dab4:	mov	w22, w2
  40dab8:	mov	x29, sp
  40dabc:	b.ge	40daec <wcrtomb@plt+0xacbc>  // b.tcont
  40dac0:	ldr	x0, [x19]
  40dac4:	bl	402bd0 <free@plt>
  40dac8:	ldr	x8, [x21, #8]
  40dacc:	mov	x3, #0xffffffffffffffff    	// #-1
  40dad0:	mov	w4, #0x10                  	// #16
  40dad4:	mov	x0, xzr
  40dad8:	str	x8, [x19, #16]
  40dadc:	ldr	x2, [x20, #8]
  40dae0:	mov	x1, x23
  40dae4:	bl	40c2e0 <wcrtomb@plt+0x94b0>
  40dae8:	str	x0, [x19]
  40daec:	mov	x8, xzr
  40daf0:	mov	x9, xzr
  40daf4:	str	xzr, [x19, #8]
  40daf8:	b	40db3c <wcrtomb@plt+0xad0c>
  40dafc:	add	x10, x11, x10
  40db00:	ldr	w10, [x10, #8]
  40db04:	add	x8, x8, #0x1
  40db08:	and	w11, w10, w22
  40db0c:	ldr	x10, [x21]
  40db10:	ldp	x12, x13, [x19]
  40db14:	add	x10, x10, x9, lsl #4
  40db18:	ldr	x14, [x10]
  40db1c:	add	x12, x12, x13, lsl #4
  40db20:	add	x13, x13, #0x1
  40db24:	add	x9, x9, #0x1
  40db28:	str	x14, [x12]
  40db2c:	ldr	w10, [x10, #8]
  40db30:	str	x13, [x19, #8]
  40db34:	orr	w10, w10, w11
  40db38:	str	w10, [x12, #8]
  40db3c:	lsl	x10, x8, #4
  40db40:	b	40db4c <wcrtomb@plt+0xad1c>
  40db44:	add	x8, x8, #0x1
  40db48:	add	x10, x10, #0x10
  40db4c:	ldr	x11, [x21, #8]
  40db50:	cmp	x9, x11
  40db54:	b.lt	40db64 <wcrtomb@plt+0xad34>  // b.tstop
  40db58:	ldr	x12, [x20, #8]
  40db5c:	cmp	x8, x12
  40db60:	b.ge	40dc00 <wcrtomb@plt+0xadd0>  // b.tcont
  40db64:	ldr	x12, [x20, #8]
  40db68:	cmp	x8, x12
  40db6c:	b.ge	40dbc8 <wcrtomb@plt+0xad98>  // b.tcont
  40db70:	cmp	x9, x11
  40db74:	b.ge	40db94 <wcrtomb@plt+0xad64>  // b.tcont
  40db78:	ldr	x13, [x21]
  40db7c:	ldr	x14, [x20]
  40db80:	lsl	x15, x9, #4
  40db84:	ldr	x13, [x13, x15]
  40db88:	ldr	x14, [x14, x10]
  40db8c:	cmp	x13, x14
  40db90:	b.le	40dbc8 <wcrtomb@plt+0xad98>
  40db94:	ldr	x12, [x20]
  40db98:	add	x11, x12, x10
  40db9c:	ldr	w11, [x11, #8]
  40dba0:	ands	w11, w11, w22
  40dba4:	b.eq	40db44 <wcrtomb@plt+0xad14>  // b.none
  40dba8:	ldp	x13, x14, [x19]
  40dbac:	ldr	x12, [x12, x10]
  40dbb0:	add	x13, x13, x14, lsl #4
  40dbb4:	add	x14, x14, #0x1
  40dbb8:	str	x12, [x13]
  40dbbc:	str	x14, [x19, #8]
  40dbc0:	str	w11, [x13, #8]
  40dbc4:	b	40db44 <wcrtomb@plt+0xad14>
  40dbc8:	cmp	x9, x11
  40dbcc:	mov	w11, wzr
  40dbd0:	b.ge	40db0c <wcrtomb@plt+0xacdc>  // b.tcont
  40dbd4:	cmp	x8, x12
  40dbd8:	b.ge	40db0c <wcrtomb@plt+0xacdc>  // b.tcont
  40dbdc:	ldr	x12, [x21]
  40dbe0:	ldr	x11, [x20]
  40dbe4:	lsl	x13, x9, #4
  40dbe8:	ldr	x12, [x12, x13]
  40dbec:	ldr	x13, [x11, x10]
  40dbf0:	cmp	x12, x13
  40dbf4:	b.eq	40dafc <wcrtomb@plt+0xaccc>  // b.none
  40dbf8:	mov	w11, wzr
  40dbfc:	b	40db0c <wcrtomb@plt+0xacdc>
  40dc00:	ldp	x20, x19, [sp, #48]
  40dc04:	ldp	x22, x21, [sp, #32]
  40dc08:	ldr	x23, [sp, #16]
  40dc0c:	ldp	x29, x30, [sp], #64
  40dc10:	ret
  40dc14:	ldr	x9, [x1, #8]
  40dc18:	mov	x10, xzr
  40dc1c:	sub	x11, x9, #0x1
  40dc20:	mov	x12, x9
  40dc24:	b	40dc34 <wcrtomb@plt+0xae04>
  40dc28:	add	x10, x13, #0x1
  40dc2c:	mov	w14, #0x1                   	// #1
  40dc30:	tbz	w14, #0, 40dca8 <wcrtomb@plt+0xae78>
  40dc34:	cmp	x10, x12
  40dc38:	b.ge	40dcb0 <wcrtomb@plt+0xae80>  // b.tcont
  40dc3c:	ldr	x15, [x1]
  40dc40:	add	x13, x10, x12
  40dc44:	asr	x13, x13, #1
  40dc48:	lsl	x14, x13, #4
  40dc4c:	ldr	x16, [x15, x14]
  40dc50:	cmp	x16, x0
  40dc54:	b.lt	40dc28 <wcrtomb@plt+0xadf8>  // b.tstop
  40dc58:	b.ne	40dc9c <wcrtomb@plt+0xae6c>  // b.any
  40dc5c:	add	x8, x15, x13, lsl #4
  40dc60:	ldr	w8, [x8, #8]
  40dc64:	add	x15, x13, #0x1
  40dc68:	cmp	x15, x9
  40dc6c:	b.ge	40dc90 <wcrtomb@plt+0xae60>  // b.tcont
  40dc70:	ldr	x15, [x1]
  40dc74:	add	x13, x13, #0x1
  40dc78:	cmp	x11, x13
  40dc7c:	add	x15, x15, x14
  40dc80:	ldr	q0, [x15, #16]
  40dc84:	add	x14, x14, #0x10
  40dc88:	str	q0, [x15]
  40dc8c:	b.ne	40dc70 <wcrtomb@plt+0xae40>  // b.any
  40dc90:	mov	w14, wzr
  40dc94:	str	x13, [x1, #8]
  40dc98:	b	40dc30 <wcrtomb@plt+0xae00>
  40dc9c:	mov	w14, #0x1                   	// #1
  40dca0:	mov	x12, x13
  40dca4:	b	40dc30 <wcrtomb@plt+0xae00>
  40dca8:	mov	w0, w8
  40dcac:	ret
  40dcb0:	mov	w0, wzr
  40dcb4:	ret
  40dcb8:	stp	x29, x30, [sp, #-48]!
  40dcbc:	stp	x20, x19, [sp, #32]
  40dcc0:	mov	x20, x0
  40dcc4:	mov	x0, x1
  40dcc8:	mov	x1, x20
  40dccc:	stp	x22, x21, [sp, #16]
  40dcd0:	mov	x29, sp
  40dcd4:	mov	x19, x4
  40dcd8:	mov	w22, w3
  40dcdc:	mov	x21, x2
  40dce0:	bl	40dc14 <wcrtomb@plt+0xade4>
  40dce4:	ands	w22, w0, w22
  40dce8:	b.eq	40dd0c <wcrtomb@plt+0xaedc>  // b.none
  40dcec:	mov	x0, x20
  40dcf0:	mov	x1, x19
  40dcf4:	bl	40d410 <wcrtomb@plt+0xa5e0>
  40dcf8:	mov	x0, x19
  40dcfc:	mov	x1, x21
  40dd00:	mov	w2, w22
  40dd04:	mov	x3, x20
  40dd08:	bl	40da80 <wcrtomb@plt+0xac50>
  40dd0c:	ldp	x20, x19, [sp, #32]
  40dd10:	ldp	x22, x21, [sp, #16]
  40dd14:	ldp	x29, x30, [sp], #48
  40dd18:	ret
  40dd1c:	sub	sp, sp, #0x70
  40dd20:	stp	x29, x30, [sp, #16]
  40dd24:	stp	x28, x27, [sp, #32]
  40dd28:	stp	x26, x25, [sp, #48]
  40dd2c:	stp	x24, x23, [sp, #64]
  40dd30:	stp	x22, x21, [sp, #80]
  40dd34:	stp	x20, x19, [sp, #96]
  40dd38:	ldr	x8, [x0, #336]
  40dd3c:	ldr	x10, [x0, #320]
  40dd40:	mov	w9, #0x18                  	// #24
  40dd44:	add	x29, sp, #0x10
  40dd48:	str	wzr, [x8, x1, lsl #2]
  40dd4c:	madd	x23, x1, x9, x10
  40dd50:	ldr	x8, [x23, #8]!
  40dd54:	cmp	x8, #0x1
  40dd58:	b.lt	40de84 <wcrtomb@plt+0xb054>  // b.tstop
  40dd5c:	mov	w8, #0x18                  	// #24
  40dd60:	mov	x20, x0
  40dd64:	mov	x21, x2
  40dd68:	mov	x25, xzr
  40dd6c:	mov	x26, xzr
  40dd70:	madd	x28, x1, x8, x10
  40dd74:	lsl	x27, x1, #2
  40dd78:	stp	x3, x10, [sp]
  40dd7c:	b	40ddac <wcrtomb@plt+0xaf7c>
  40dd80:	ldr	x8, [x28]
  40dd84:	ldr	q0, [x8, x26, lsl #4]
  40dd88:	str	q0, [x8, x25, lsl #4]
  40dd8c:	ldrb	w8, [x21, x22]
  40dd90:	add	x25, x25, #0x1
  40dd94:	orr	w8, w8, #0x10
  40dd98:	strb	w8, [x21, x22]
  40dd9c:	ldr	x8, [x23]
  40dda0:	add	x26, x26, #0x1
  40dda4:	cmp	x26, x8
  40dda8:	b.ge	40de88 <wcrtomb@plt+0xb058>  // b.tcont
  40ddac:	ldr	x13, [x28]
  40ddb0:	add	x9, x13, x26, lsl #4
  40ddb4:	ldr	w8, [x9, #8]
  40ddb8:	cbz	w8, 40dd9c <wcrtomb@plt+0xaf6c>
  40ddbc:	ldr	x22, [x9]
  40ddc0:	ldr	x9, [x20, #144]
  40ddc4:	ldr	x10, [x9, x22, lsl #3]
  40ddc8:	tbnz	x10, #63, 40de70 <wcrtomb@plt+0xb040>
  40ddcc:	ldrb	w11, [x21, x22]
  40ddd0:	tst	w11, #0x6
  40ddd4:	b.ne	40dd80 <wcrtomb@plt+0xaf50>  // b.any
  40ddd8:	cmp	x25, #0x0
  40dddc:	cset	w19, gt
  40dde0:	cmp	x25, #0x1
  40dde4:	b.lt	40dd80 <wcrtomb@plt+0xaf50>  // b.tstop
  40dde8:	mov	x12, xzr
  40ddec:	add	x13, x13, #0x8
  40ddf0:	b	40de0c <wcrtomb@plt+0xafdc>
  40ddf4:	add	x12, x12, #0x1
  40ddf8:	cmp	x12, x25
  40ddfc:	cset	w19, lt  // lt = tstop
  40de00:	cmp	x25, x12
  40de04:	add	x13, x13, #0x10
  40de08:	b.eq	40dd80 <wcrtomb@plt+0xaf50>  // b.none
  40de0c:	ldr	w14, [x13]
  40de10:	cmp	w14, w8
  40de14:	b.ne	40ddf4 <wcrtomb@plt+0xafc4>  // b.any
  40de18:	ldur	x24, [x13, #-8]
  40de1c:	ldrb	w14, [x21, x24]
  40de20:	tst	w14, #0x6
  40de24:	b.ne	40ddf4 <wcrtomb@plt+0xafc4>  // b.any
  40de28:	ldr	x15, [x9, x24, lsl #3]
  40de2c:	cmp	x10, x15
  40de30:	b.ne	40ddf4 <wcrtomb@plt+0xafc4>  // b.any
  40de34:	eor	w14, w14, w11
  40de38:	tbnz	w14, #0, 40ddf4 <wcrtomb@plt+0xafc4>
  40de3c:	tbz	w11, #0, 40de54 <wcrtomb@plt+0xb024>
  40de40:	ldr	x8, [sp, #8]
  40de44:	mov	w9, #0x18                  	// #24
  40de48:	mov	x0, x22
  40de4c:	madd	x1, x22, x9, x8
  40de50:	bl	40dc14 <wcrtomb@plt+0xade4>
  40de54:	ldp	x2, x8, [sp]
  40de58:	mov	w9, #0x18                  	// #24
  40de5c:	madd	x0, x24, x9, x8
  40de60:	madd	x1, x22, x9, x8
  40de64:	bl	40e144 <wcrtomb@plt+0xb314>
  40de68:	tbz	w19, #0, 40dd80 <wcrtomb@plt+0xaf50>
  40de6c:	b	40dd9c <wcrtomb@plt+0xaf6c>
  40de70:	ldr	x9, [x20, #336]
  40de74:	ldr	w10, [x9, x27]
  40de78:	orr	w8, w10, w8
  40de7c:	str	w8, [x9, x27]
  40de80:	b	40dd9c <wcrtomb@plt+0xaf6c>
  40de84:	mov	x25, xzr
  40de88:	str	x25, [x23]
  40de8c:	ldp	x20, x19, [sp, #96]
  40de90:	ldp	x22, x21, [sp, #80]
  40de94:	ldp	x24, x23, [sp, #64]
  40de98:	ldp	x26, x25, [sp, #48]
  40de9c:	ldp	x28, x27, [sp, #32]
  40dea0:	ldp	x29, x30, [sp, #16]
  40dea4:	add	sp, sp, #0x70
  40dea8:	ret
  40deac:	stp	x29, x30, [sp, #-96]!
  40deb0:	stp	x28, x27, [sp, #16]
  40deb4:	stp	x26, x25, [sp, #32]
  40deb8:	stp	x24, x23, [sp, #48]
  40debc:	stp	x22, x21, [sp, #64]
  40dec0:	stp	x20, x19, [sp, #80]
  40dec4:	mov	x20, x0
  40dec8:	ldr	x0, [x0, #152]
  40decc:	mov	w1, #0x8                   	// #8
  40ded0:	mov	x29, sp
  40ded4:	bl	41189c <wcrtomb@plt+0xea6c>
  40ded8:	str	xzr, [x0]
  40dedc:	ldr	x8, [x20, #152]
  40dee0:	mov	x19, x0
  40dee4:	cmp	x8, #0x2
  40dee8:	b.lt	40df10 <wcrtomb@plt+0xb0e0>  // b.tstop
  40deec:	ldr	x8, [x20, #152]
  40def0:	mov	w9, #0x2                   	// #2
  40def4:	add	x0, x19, #0x8
  40def8:	mov	w1, #0xff                  	// #255
  40defc:	cmp	x8, #0x2
  40df00:	csel	x8, x8, x9, gt
  40df04:	lsl	x8, x8, #3
  40df08:	sub	x2, x8, #0x8
  40df0c:	bl	4029c0 <memset@plt>
  40df10:	ldr	x0, [x20, #176]
  40df14:	mov	w1, #0x8                   	// #8
  40df18:	bl	41189c <wcrtomb@plt+0xea6c>
  40df1c:	ldr	x8, [x20, #176]
  40df20:	mov	x21, x0
  40df24:	mov	w1, #0x18                  	// #24
  40df28:	mov	x0, x8
  40df2c:	bl	41189c <wcrtomb@plt+0xea6c>
  40df30:	ldr	x8, [x20, #176]
  40df34:	mov	x22, x0
  40df38:	mov	w1, #0x4                   	// #4
  40df3c:	mov	x0, x8
  40df40:	bl	41189c <wcrtomb@plt+0xea6c>
  40df44:	ldrb	w8, [x20, #1048]
  40df48:	mov	x23, x0
  40df4c:	cbz	w8, 40df64 <wcrtomb@plt+0xb134>
  40df50:	ldr	x0, [x20, #176]
  40df54:	mov	w1, #0x1                   	// #1
  40df58:	bl	41189c <wcrtomb@plt+0xea6c>
  40df5c:	mov	x24, x0
  40df60:	b	40df68 <wcrtomb@plt+0xb138>
  40df64:	mov	x24, xzr
  40df68:	ldr	x8, [x20, #152]
  40df6c:	cmp	x8, #0x1
  40df70:	b.lt	40e080 <wcrtomb@plt+0xb250>  // b.tstop
  40df74:	mov	x27, xzr
  40df78:	mov	w26, #0x1                   	// #1
  40df7c:	mov	w28, #0x18                  	// #24
  40df80:	b	40dfa8 <wcrtomb@plt+0xb178>
  40df84:	ldr	x0, [x8]
  40df88:	adrp	x3, 40e000 <wcrtomb@plt+0xb1d0>
  40df8c:	mov	w2, #0x10                  	// #16
  40df90:	add	x3, x3, #0x2d4
  40df94:	bl	402800 <qsort@plt>
  40df98:	ldr	x8, [x20, #152]
  40df9c:	add	x27, x27, #0x1
  40dfa0:	cmp	x27, x8
  40dfa4:	b.ge	40e084 <wcrtomb@plt+0xb254>  // b.tcont
  40dfa8:	ldr	x9, [x19, x27, lsl #3]
  40dfac:	cmn	x9, #0x1
  40dfb0:	b.eq	40e05c <wcrtomb@plt+0xb22c>  // b.none
  40dfb4:	ldr	x8, [x20, #144]
  40dfb8:	madd	x12, x9, x28, x22
  40dfbc:	ldr	x8, [x8, x27, lsl #3]
  40dfc0:	str	x8, [x21, x9, lsl #3]
  40dfc4:	ldr	x10, [x20, #320]
  40dfc8:	madd	x8, x27, x28, x10
  40dfcc:	ldr	x11, [x8, #16]
  40dfd0:	ldr	q0, [x8]
  40dfd4:	str	x11, [x12, #16]
  40dfd8:	str	q0, [x12]
  40dfdc:	ldr	x11, [x20, #336]
  40dfe0:	ldr	w11, [x11, x27, lsl #2]
  40dfe4:	str	w11, [x23, x9, lsl #2]
  40dfe8:	cbz	x24, 40dff8 <wcrtomb@plt+0xb1c8>
  40dfec:	ldr	x11, [x20, #280]
  40dff0:	ldrb	w11, [x11, x27]
  40dff4:	strb	w11, [x24, x9]
  40dff8:	madd	x11, x27, x28, x10
  40dffc:	ldr	x1, [x11, #8]!
  40e000:	cmp	x1, #0x1
  40e004:	b.lt	40df84 <wcrtomb@plt+0xb154>  // b.tstop
  40e008:	mul	x12, x27, x28
  40e00c:	ldr	x9, [x8]
  40e010:	ldr	x10, [x10, x12]
  40e014:	ldr	x1, [x11]
  40e018:	mov	x11, xzr
  40e01c:	b	40e03c <wcrtomb@plt+0xb20c>
  40e020:	ldr	x12, [x10]
  40e024:	add	x11, x11, #0x1
  40e028:	cmp	x11, x1
  40e02c:	add	x9, x9, #0x10
  40e030:	ldr	x12, [x19, x12, lsl #3]
  40e034:	str	x12, [x10], #16
  40e038:	b.ge	40df84 <wcrtomb@plt+0xb154>  // b.tcont
  40e03c:	ldr	x12, [x9]
  40e040:	ldr	x13, [x19, x12, lsl #3]
  40e044:	cmn	x13, #0x1
  40e048:	b.ne	40e020 <wcrtomb@plt+0xb1f0>  // b.any
  40e04c:	add	x13, x26, #0x1
  40e050:	str	x26, [x19, x12, lsl #3]
  40e054:	mov	x26, x13
  40e058:	b	40e020 <wcrtomb@plt+0xb1f0>
  40e05c:	ldr	x8, [x20, #320]
  40e060:	add	x9, x27, x27, lsl #1
  40e064:	lsl	x25, x9, #3
  40e068:	ldr	x0, [x8, x25]
  40e06c:	bl	402bd0 <free@plt>
  40e070:	ldr	x8, [x20, #320]
  40e074:	add	x8, x8, x25
  40e078:	stp	xzr, xzr, [x8]
  40e07c:	b	40df98 <wcrtomb@plt+0xb168>
  40e080:	mov	w26, #0x1                   	// #1
  40e084:	cmp	x26, #0x1
  40e088:	b.lt	40e0f8 <wcrtomb@plt+0xb2c8>  // b.tstop
  40e08c:	mov	x8, xzr
  40e090:	mov	x9, xzr
  40e094:	b	40e0a8 <wcrtomb@plt+0xb278>
  40e098:	add	x9, x9, #0x1
  40e09c:	cmp	x26, x9
  40e0a0:	add	x8, x8, #0x18
  40e0a4:	b.eq	40e0f8 <wcrtomb@plt+0xb2c8>  // b.none
  40e0a8:	lsl	x10, x9, #3
  40e0ac:	ldr	x11, [x20, #144]
  40e0b0:	ldr	x12, [x21, x10]
  40e0b4:	add	x13, x22, x8
  40e0b8:	str	x12, [x11, x10]
  40e0bc:	ldr	x10, [x20, #320]
  40e0c0:	ldr	x11, [x13, #16]
  40e0c4:	ldr	q0, [x13]
  40e0c8:	lsl	x12, x9, #2
  40e0cc:	add	x10, x10, x8
  40e0d0:	str	x11, [x10, #16]
  40e0d4:	str	q0, [x10]
  40e0d8:	ldr	w10, [x23, x12]
  40e0dc:	ldr	x11, [x20, #336]
  40e0e0:	str	w10, [x11, x12]
  40e0e4:	cbz	x24, 40e098 <wcrtomb@plt+0xb268>
  40e0e8:	ldrb	w10, [x24, x9]
  40e0ec:	ldr	x11, [x20, #280]
  40e0f0:	strb	w10, [x11, x9]
  40e0f4:	b	40e098 <wcrtomb@plt+0xb268>
  40e0f8:	mov	x0, x21
  40e0fc:	str	x26, [x20, #176]
  40e100:	str	x26, [x20, #152]
  40e104:	bl	402bd0 <free@plt>
  40e108:	mov	x0, x22
  40e10c:	bl	402bd0 <free@plt>
  40e110:	mov	x0, x23
  40e114:	bl	402bd0 <free@plt>
  40e118:	mov	x0, x24
  40e11c:	bl	402bd0 <free@plt>
  40e120:	mov	x0, x19
  40e124:	bl	402bd0 <free@plt>
  40e128:	ldp	x20, x19, [sp, #80]
  40e12c:	ldp	x22, x21, [sp, #64]
  40e130:	ldp	x24, x23, [sp, #48]
  40e134:	ldp	x26, x25, [sp, #32]
  40e138:	ldp	x28, x27, [sp, #16]
  40e13c:	ldp	x29, x30, [sp], #96
  40e140:	ret
  40e144:	stp	x29, x30, [sp, #-48]!
  40e148:	stp	x22, x21, [sp, #16]
  40e14c:	stp	x20, x19, [sp, #32]
  40e150:	ldr	x8, [x1, #8]
  40e154:	mov	x20, x1
  40e158:	mov	x19, x0
  40e15c:	mov	x29, sp
  40e160:	cmp	x8, #0x3
  40e164:	b.gt	40e1a8 <wcrtomb@plt+0xb378>
  40e168:	ldr	x8, [x20, #8]
  40e16c:	cmp	x8, #0x1
  40e170:	b.lt	40e1c4 <wcrtomb@plt+0xb394>  // b.tstop
  40e174:	mov	x21, xzr
  40e178:	mov	x22, xzr
  40e17c:	ldr	x8, [x20]
  40e180:	mov	x2, x19
  40e184:	add	x8, x8, x21
  40e188:	ldp	x0, x1, [x8]
  40e18c:	bl	40e1d4 <wcrtomb@plt+0xb3a4>
  40e190:	ldr	x8, [x20, #8]
  40e194:	add	x22, x22, #0x1
  40e198:	add	x21, x21, #0x10
  40e19c:	cmp	x22, x8
  40e1a0:	b.lt	40e17c <wcrtomb@plt+0xb34c>  // b.tstop
  40e1a4:	b	40e1c4 <wcrtomb@plt+0xb394>
  40e1a8:	mov	x0, x20
  40e1ac:	mov	x1, x19
  40e1b0:	mov	x21, x2
  40e1b4:	bl	40d3f4 <wcrtomb@plt+0xa5c4>
  40e1b8:	mov	x0, x21
  40e1bc:	mov	x1, x19
  40e1c0:	bl	40d410 <wcrtomb@plt+0xa5e0>
  40e1c4:	ldp	x20, x19, [sp, #32]
  40e1c8:	ldp	x22, x21, [sp, #16]
  40e1cc:	ldp	x29, x30, [sp], #48
  40e1d0:	ret
  40e1d4:	stp	x29, x30, [sp, #-64]!
  40e1d8:	stp	x22, x21, [sp, #32]
  40e1dc:	stp	x20, x19, [sp, #48]
  40e1e0:	ldr	x22, [x2, #8]
  40e1e4:	str	x23, [sp, #16]
  40e1e8:	mov	x19, x2
  40e1ec:	mov	x20, x1
  40e1f0:	mov	x21, x0
  40e1f4:	mov	x23, xzr
  40e1f8:	mov	x8, x22
  40e1fc:	mov	x29, sp
  40e200:	b	40e210 <wcrtomb@plt+0xb3e0>
  40e204:	add	x23, x10, #0x1
  40e208:	mov	w9, #0x1                   	// #1
  40e20c:	tbz	w9, #0, 40e2c0 <wcrtomb@plt+0xb490>
  40e210:	cmp	x23, x8
  40e214:	b.ge	40e264 <wcrtomb@plt+0xb434>  // b.tcont
  40e218:	ldr	x11, [x19]
  40e21c:	add	x9, x23, x8
  40e220:	asr	x10, x9, #1
  40e224:	lsl	x9, x10, #4
  40e228:	ldr	x9, [x11, x9]
  40e22c:	cmp	x9, x21
  40e230:	b.lt	40e204 <wcrtomb@plt+0xb3d4>  // b.tstop
  40e234:	b.ne	40e254 <wcrtomb@plt+0xb424>  // b.any
  40e238:	add	x10, x11, x10, lsl #4
  40e23c:	ldr	w11, [x10, #8]
  40e240:	mov	w9, wzr
  40e244:	orr	w11, w11, w20
  40e248:	str	w11, [x10, #8]
  40e24c:	tbnz	wzr, #0, 40e210 <wcrtomb@plt+0xb3e0>
  40e250:	b	40e2c0 <wcrtomb@plt+0xb490>
  40e254:	mov	w9, #0x1                   	// #1
  40e258:	mov	x8, x10
  40e25c:	tbnz	w9, #0, 40e210 <wcrtomb@plt+0xb3e0>
  40e260:	b	40e2c0 <wcrtomb@plt+0xb490>
  40e264:	mov	x2, x19
  40e268:	ldr	x0, [x2], #16
  40e26c:	mov	x3, #0xffffffffffffffff    	// #-1
  40e270:	mov	w4, #0x10                  	// #16
  40e274:	mov	x1, x22
  40e278:	bl	40ccb4 <wcrtomb@plt+0x9e84>
  40e27c:	cmp	x22, x23
  40e280:	str	x0, [x19]
  40e284:	b.le	40e2ac <wcrtomb@plt+0xb47c>
  40e288:	lsl	x8, x22, #4
  40e28c:	add	x9, x0, x8
  40e290:	ldur	q0, [x9, #-16]
  40e294:	sub	x22, x22, #0x1
  40e298:	cmp	x22, x23
  40e29c:	sub	x8, x8, #0x10
  40e2a0:	str	q0, [x9]
  40e2a4:	ldr	x0, [x19]
  40e2a8:	b.gt	40e28c <wcrtomb@plt+0xb45c>
  40e2ac:	add	x8, x0, x23, lsl #4
  40e2b0:	stp	x21, x20, [x8]
  40e2b4:	ldr	x8, [x19, #8]
  40e2b8:	add	x8, x8, #0x1
  40e2bc:	str	x8, [x19, #8]
  40e2c0:	ldp	x20, x19, [sp, #48]
  40e2c4:	ldp	x22, x21, [sp, #32]
  40e2c8:	ldr	x23, [sp, #16]
  40e2cc:	ldp	x29, x30, [sp], #64
  40e2d0:	ret
  40e2d4:	ldr	x8, [x0]
  40e2d8:	ldr	x9, [x1]
  40e2dc:	cmp	x8, x9
  40e2e0:	cset	w8, gt
  40e2e4:	csinv	w0, w8, wzr, ge  // ge = tcont
  40e2e8:	ret
  40e2ec:	stp	x29, x30, [sp, #-48]!
  40e2f0:	stp	x22, x21, [sp, #16]
  40e2f4:	stp	x20, x19, [sp, #32]
  40e2f8:	mov	w21, w2
  40e2fc:	mov	w19, w1
  40e300:	mov	w20, w0
  40e304:	mov	x29, sp
  40e308:	tbnz	w2, #0, 40e330 <wcrtomb@plt+0xb500>
  40e30c:	mov	w22, wzr
  40e310:	tbz	w21, #1, 40e340 <wcrtomb@plt+0xb510>
  40e314:	mov	w0, w20
  40e318:	bl	40e374 <wcrtomb@plt+0xb544>
  40e31c:	orr	w22, w0, w22
  40e320:	tbz	w21, #2, 40e34c <wcrtomb@plt+0xb51c>
  40e324:	mov	w0, w20
  40e328:	bl	40e37c <wcrtomb@plt+0xb54c>
  40e32c:	b	40e350 <wcrtomb@plt+0xb520>
  40e330:	mov	w0, w20
  40e334:	bl	40e36c <wcrtomb@plt+0xb53c>
  40e338:	mov	w22, w0
  40e33c:	tbnz	w21, #1, 40e314 <wcrtomb@plt+0xb4e4>
  40e340:	mov	w0, wzr
  40e344:	orr	w22, w0, w22
  40e348:	tbnz	w21, #2, 40e324 <wcrtomb@plt+0xb4f4>
  40e34c:	mov	w0, wzr
  40e350:	orr	w8, w22, w0
  40e354:	tst	w8, w19
  40e358:	ldp	x20, x19, [sp, #32]
  40e35c:	ldp	x22, x21, [sp, #16]
  40e360:	cset	w0, ne  // ne = any
  40e364:	ldp	x29, x30, [sp], #48
  40e368:	ret
  40e36c:	and	w0, w0, #0x7
  40e370:	ret
  40e374:	ubfx	w0, w0, #3, #3
  40e378:	ret
  40e37c:	ubfx	w0, w0, #6, #3
  40e380:	ret
  40e384:	stp	x29, x30, [sp, #-64]!
  40e388:	stp	x20, x19, [sp, #48]
  40e38c:	mov	x20, x0
  40e390:	mov	w0, #0x8                   	// #8
  40e394:	stp	x24, x23, [sp, #16]
  40e398:	stp	x22, x21, [sp, #32]
  40e39c:	mov	x29, sp
  40e3a0:	mov	x19, x1
  40e3a4:	bl	4119fc <wcrtomb@plt+0xebcc>
  40e3a8:	ldrb	w8, [x20]
  40e3ac:	mov	x21, x0
  40e3b0:	cbnz	w8, 40e3d4 <wcrtomb@plt+0xb5a4>
  40e3b4:	mov	x0, x21
  40e3b8:	ldp	x20, x19, [sp, #48]
  40e3bc:	ldp	x22, x21, [sp, #32]
  40e3c0:	ldp	x24, x23, [sp, #16]
  40e3c4:	ldp	x29, x30, [sp], #64
  40e3c8:	ret
  40e3cc:	ldrb	w8, [x20, #1]!
  40e3d0:	cbz	w8, 40e3b4 <wcrtomb@plt+0xb584>
  40e3d4:	and	w22, w8, #0xff
  40e3d8:	mov	x0, x19
  40e3dc:	mov	w1, w22
  40e3e0:	bl	402c10 <strchr@plt>
  40e3e4:	cbz	x0, 40e444 <wcrtomb@plt+0xb614>
  40e3e8:	ldrb	w24, [x20, #1]
  40e3ec:	mov	x23, xzr
  40e3f0:	b	40e410 <wcrtomb@plt+0xb5e0>
  40e3f4:	mov	w8, #0x1                   	// #1
  40e3f8:	cmp	x8, x23
  40e3fc:	add	x0, x0, #0x1
  40e400:	mov	w1, w22
  40e404:	csel	x23, x8, x23, gt
  40e408:	bl	402c10 <strchr@plt>
  40e40c:	cbz	x0, 40e448 <wcrtomb@plt+0xb618>
  40e410:	cbz	w24, 40e3f4 <wcrtomb@plt+0xb5c4>
  40e414:	mov	x8, xzr
  40e418:	add	x9, x0, #0x1
  40e41c:	mov	w10, w24
  40e420:	ldrb	w11, [x9, x8]
  40e424:	cmp	w11, w10, uxtb
  40e428:	b.ne	40e43c <wcrtomb@plt+0xb60c>  // b.any
  40e42c:	add	x10, x20, x8
  40e430:	ldrb	w10, [x10, #2]
  40e434:	add	x8, x8, #0x1
  40e438:	cbnz	w10, 40e420 <wcrtomb@plt+0xb5f0>
  40e43c:	add	x8, x8, #0x1
  40e440:	b	40e3f8 <wcrtomb@plt+0xb5c8>
  40e444:	mov	x23, xzr
  40e448:	cbz	x23, 40e3cc <wcrtomb@plt+0xb59c>
  40e44c:	mov	x0, x21
  40e450:	mov	x1, x20
  40e454:	mov	x2, x23
  40e458:	bl	40bcf4 <wcrtomb@plt+0x8ec4>
  40e45c:	mov	x21, x0
  40e460:	b	40e3cc <wcrtomb@plt+0xb59c>
  40e464:	sub	sp, sp, #0xa0
  40e468:	stp	x29, x30, [sp, #64]
  40e46c:	stp	x28, x27, [sp, #80]
  40e470:	stp	x26, x25, [sp, #96]
  40e474:	stp	x24, x23, [sp, #112]
  40e478:	stp	x22, x21, [sp, #128]
  40e47c:	stp	x20, x19, [sp, #144]
  40e480:	ldr	x8, [x0, #304]
  40e484:	add	x29, sp, #0x40
  40e488:	mov	w21, w5
  40e48c:	mov	x19, x2
  40e490:	mov	x23, x0
  40e494:	cmp	x8, #0x400
  40e498:	mov	x24, x1
  40e49c:	str	x4, [sp, #24]
  40e4a0:	stur	w3, [x29, #-28]
  40e4a4:	b.lt	40e5cc <wcrtomb@plt+0xb79c>  // b.tstop
  40e4a8:	ldrsw	x20, [x23, #364]
  40e4ac:	ldr	x8, [x23, #304]
  40e4b0:	cmp	x8, x20
  40e4b4:	b.le	40e4f4 <wcrtomb@plt+0xb6c4>
  40e4b8:	add	x8, x20, x20, lsl #2
  40e4bc:	lsl	x22, x8, #4
  40e4c0:	ldr	x8, [x23, #296]
  40e4c4:	add	x8, x8, x22
  40e4c8:	ldr	x0, [x8, #8]
  40e4cc:	bl	402bd0 <free@plt>
  40e4d0:	ldr	x8, [x23, #296]
  40e4d4:	add	x8, x8, x22
  40e4d8:	ldr	x0, [x8, #48]
  40e4dc:	bl	402bd0 <free@plt>
  40e4e0:	ldr	x8, [x23, #304]
  40e4e4:	add	x20, x20, #0x1
  40e4e8:	add	x22, x22, #0x50
  40e4ec:	cmp	x20, x8
  40e4f0:	b.lt	40e4c0 <wcrtomb@plt+0xb690>  // b.tstop
  40e4f4:	ldrsw	x8, [x23, #364]
  40e4f8:	ldr	x9, [x23, #368]
  40e4fc:	str	x8, [x23, #304]
  40e500:	cbz	x9, 40e554 <wcrtomb@plt+0xb724>
  40e504:	ldr	x8, [x23, #352]
  40e508:	cmp	x8, #0x1
  40e50c:	b.lt	40e550 <wcrtomb@plt+0xb720>  // b.tstop
  40e510:	mov	x20, xzr
  40e514:	ldr	x8, [x23, #368]
  40e518:	lsl	x22, x20, #3
  40e51c:	ldr	x0, [x8, x22]
  40e520:	bl	402bd0 <free@plt>
  40e524:	ldr	x8, [x23, #376]
  40e528:	ldr	x0, [x8, x22]
  40e52c:	bl	402bd0 <free@plt>
  40e530:	ldr	x8, [x23, #376]
  40e534:	add	x20, x20, #0x1
  40e538:	str	xzr, [x8, x22]
  40e53c:	ldr	x8, [x23, #368]
  40e540:	str	xzr, [x8, x22]
  40e544:	ldr	x8, [x23, #352]
  40e548:	cmp	x20, x8
  40e54c:	b.lt	40e514 <wcrtomb@plt+0xb6e4>  // b.tstop
  40e550:	str	wzr, [x23, #360]
  40e554:	ldrb	w8, [x23, #1048]
  40e558:	cbz	w8, 40e5cc <wcrtomb@plt+0xb79c>
  40e55c:	ldr	x8, [x23, #432]
  40e560:	cbz	x8, 40e5cc <wcrtomb@plt+0xb79c>
  40e564:	ldr	x8, [x23, #352]
  40e568:	tbnz	x8, #63, 40e598 <wcrtomb@plt+0xb768>
  40e56c:	mov	x20, #0xffffffffffffffff    	// #-1
  40e570:	ldr	x8, [x23, #432]
  40e574:	lsl	x22, x20, #3
  40e578:	ldr	x0, [x8, x22]
  40e57c:	bl	402bd0 <free@plt>
  40e580:	ldr	x8, [x23, #432]
  40e584:	add	x20, x20, #0x1
  40e588:	str	xzr, [x8, x22]
  40e58c:	ldr	x8, [x23, #352]
  40e590:	cmp	x20, x8
  40e594:	b.lt	40e570 <wcrtomb@plt+0xb740>  // b.tstop
  40e598:	ldr	w8, [x23, #364]
  40e59c:	cmp	w8, #0x1
  40e5a0:	b.lt	40e5c8 <wcrtomb@plt+0xb798>  // b.tstop
  40e5a4:	ldr	x10, [x23, #296]
  40e5a8:	ldrsw	x9, [x23, #364]
  40e5ac:	mov	x8, xzr
  40e5b0:	mov	x11, #0xffffffffffffffff    	// #-1
  40e5b4:	add	x10, x10, #0x48
  40e5b8:	add	x8, x8, #0x1
  40e5bc:	cmp	x8, x9
  40e5c0:	str	x11, [x10], #80
  40e5c4:	b.lt	40e5b8 <wcrtomb@plt+0xb788>  // b.tstop
  40e5c8:	str	xzr, [x23, #440]
  40e5cc:	ldr	x8, [x23, #352]
  40e5d0:	cbnz	x8, 40e5dc <wcrtomb@plt+0xb7ac>
  40e5d4:	mov	x0, x23
  40e5d8:	bl	40e9e4 <wcrtomb@plt+0xbbb4>
  40e5dc:	ldr	x22, [x23, #368]
  40e5e0:	ldrb	w9, [x23, #459]
  40e5e4:	ldrb	w8, [x19]
  40e5e8:	stp	x9, x24, [x29, #-16]
  40e5ec:	str	w8, [sp, #20]
  40e5f0:	strb	w9, [x19]
  40e5f4:	tbz	w21, #0, 40e610 <wcrtomb@plt+0xb7e0>
  40e5f8:	ldr	x8, [x23, #424]
  40e5fc:	str	xzr, [x23, #272]
  40e600:	cbnz	x8, 40e610 <wcrtomb@plt+0xb7e0>
  40e604:	ldr	x1, [x23, #176]
  40e608:	add	x0, x23, #0x198
  40e60c:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40e610:	ldur	x8, [x29, #-16]
  40e614:	mov	x25, xzr
  40e618:	mov	x27, xzr
  40e61c:	mov	w20, #0x50                  	// #80
  40e620:	add	x8, x23, x8
  40e624:	add	x8, x8, #0x1cc
  40e628:	stur	xzr, [x29, #-24]
  40e62c:	str	x8, [sp, #8]
  40e630:	b	40e660 <wcrtomb@plt+0xb830>
  40e634:	ldur	x8, [x29, #-8]
  40e638:	mov	x0, x26
  40e63c:	mov	x1, x23
  40e640:	ldrb	w2, [x8]
  40e644:	bl	40edd4 <wcrtomb@plt+0xbfa4>
  40e648:	ldr	x22, [x23, #368]
  40e64c:	mov	w8, wzr
  40e650:	mov	x25, x26
  40e654:	mov	x26, x27
  40e658:	mov	x27, x26
  40e65c:	cbnz	w8, 40e994 <wcrtomb@plt+0xbb64>
  40e660:	ldr	x28, [x22, x25, lsl #3]
  40e664:	cbnz	x28, 40e698 <wcrtomb@plt+0xb868>
  40e668:	mov	x26, x25
  40e66c:	b	40e7d4 <wcrtomb@plt+0xb9a4>
  40e670:	ldur	x10, [x29, #-8]
  40e674:	mov	x25, x8
  40e678:	add	x11, x10, #0x1
  40e67c:	stur	x11, [x29, #-8]
  40e680:	ldrb	w10, [x10]
  40e684:	ldr	x26, [x9, x10, lsl #3]
  40e688:	ldr	x28, [x22, x26, lsl #3]
  40e68c:	mov	x27, x25
  40e690:	mov	x25, x26
  40e694:	cbz	x28, 40e7d4 <wcrtomb@plt+0xb9a4>
  40e698:	ldrsw	x8, [x23, #364]
  40e69c:	cmp	x25, x8
  40e6a0:	b.ge	40e704 <wcrtomb@plt+0xb8d4>  // b.tcont
  40e6a4:	tbz	w21, #0, 40e6b8 <wcrtomb@plt+0xb888>
  40e6a8:	ldr	x8, [x23, #296]
  40e6ac:	madd	x8, x25, x20, x8
  40e6b0:	ldr	x8, [x8, #56]
  40e6b4:	cbnz	x8, 40e6e4 <wcrtomb@plt+0xb8b4>
  40e6b8:	ldur	x8, [x29, #-8]
  40e6bc:	ldrb	w9, [x8]
  40e6c0:	ldr	x9, [x28, x9, lsl #3]
  40e6c4:	cmp	x9, x25
  40e6c8:	b.ne	40e6e4 <wcrtomb@plt+0xb8b4>  // b.any
  40e6cc:	add	x8, x8, #0x1
  40e6d0:	stur	x8, [x29, #-8]
  40e6d4:	ldrb	w9, [x8], #1
  40e6d8:	ldr	x9, [x28, x9, lsl #3]
  40e6dc:	cmp	x9, x25
  40e6e0:	b.eq	40e6d0 <wcrtomb@plt+0xb8a0>  // b.none
  40e6e4:	tbz	w21, #0, 40e704 <wcrtomb@plt+0xb8d4>
  40e6e8:	ldur	x1, [x29, #-8]
  40e6ec:	mov	x0, x23
  40e6f0:	mov	x2, x24
  40e6f4:	mov	x3, x19
  40e6f8:	bl	40eb1c <wcrtomb@plt+0xbcec>
  40e6fc:	mov	x24, x0
  40e700:	stur	x0, [x29, #-8]
  40e704:	tbz	w21, #0, 40e75c <wcrtomb@plt+0xb92c>
  40e708:	ldr	x8, [x23, #296]
  40e70c:	madd	x8, x25, x20, x8
  40e710:	ldr	x8, [x8, #56]
  40e714:	cbz	x8, 40e7b4 <wcrtomb@plt+0xb984>
  40e718:	ldur	x8, [x29, #-8]
  40e71c:	cmp	x8, x19
  40e720:	b.cs	40e7b4 <wcrtomb@plt+0xb984>  // b.hs, b.nlast
  40e724:	ldrb	w8, [x8]
  40e728:	add	x8, x23, x8, lsl #2
  40e72c:	ldr	w8, [x8, #1308]
  40e730:	cmn	w8, #0x1
  40e734:	b.ne	40e7b4 <wcrtomb@plt+0xb984>  // b.any
  40e738:	sub	x2, x29, #0x8
  40e73c:	mov	x0, x23
  40e740:	mov	x1, x25
  40e744:	mov	x3, x19
  40e748:	bl	40eb98 <wcrtomb@plt+0xbd68>
  40e74c:	ldur	x24, [x29, #-8]
  40e750:	ldr	x22, [x23, #368]
  40e754:	mov	x26, x0
  40e758:	b	40e688 <wcrtomb@plt+0xb858>
  40e75c:	ldur	x8, [x29, #-8]
  40e760:	add	x9, x8, #0x1
  40e764:	stur	x9, [x29, #-8]
  40e768:	ldrb	w8, [x8]
  40e76c:	ldr	x8, [x28, x8, lsl #3]
  40e770:	ldr	x9, [x22, x8, lsl #3]
  40e774:	cbz	x9, 40e7cc <wcrtomb@plt+0xb99c>
  40e778:	ldrsw	x10, [x23, #364]
  40e77c:	cmp	x25, x10
  40e780:	b.ge	40e670 <wcrtomb@plt+0xb840>  // b.tcont
  40e784:	ldur	x10, [x29, #-8]
  40e788:	ldrb	w11, [x10]
  40e78c:	ldr	x11, [x9, x11, lsl #3]
  40e790:	cmp	x11, x8
  40e794:	b.ne	40e670 <wcrtomb@plt+0xb840>  // b.any
  40e798:	add	x10, x10, #0x1
  40e79c:	stur	x10, [x29, #-8]
  40e7a0:	ldrb	w11, [x10], #1
  40e7a4:	ldr	x11, [x9, x11, lsl #3]
  40e7a8:	cmp	x11, x8
  40e7ac:	b.eq	40e79c <wcrtomb@plt+0xb96c>  // b.none
  40e7b0:	b	40e670 <wcrtomb@plt+0xb840>
  40e7b4:	ldur	x8, [x29, #-8]
  40e7b8:	add	x9, x8, #0x1
  40e7bc:	stur	x9, [x29, #-8]
  40e7c0:	ldrb	w8, [x8]
  40e7c4:	ldr	x26, [x28, x8, lsl #3]
  40e7c8:	b	40e688 <wcrtomb@plt+0xb858>
  40e7cc:	mov	x26, x8
  40e7d0:	mov	x27, x25
  40e7d4:	tbnz	x26, #63, 40e80c <wcrtomb@plt+0xb9dc>
  40e7d8:	ldr	x8, [x23, #376]
  40e7dc:	ldr	x8, [x8, x26, lsl #3]
  40e7e0:	cbz	x8, 40e634 <wcrtomb@plt+0xb804>
  40e7e4:	ldur	x25, [x29, #-8]
  40e7e8:	ldr	x8, [x23, #384]
  40e7ec:	ldrb	w9, [x25]
  40e7f0:	ldrb	w8, [x8, x26]
  40e7f4:	add	x9, x23, x9
  40e7f8:	ldrb	w9, [x9, #460]
  40e7fc:	tst	w9, w8
  40e800:	b.eq	40e8a4 <wcrtomb@plt+0xba74>  // b.none
  40e804:	mov	w8, #0x16                  	// #22
  40e808:	b	40e650 <wcrtomb@plt+0xb820>
  40e80c:	ldur	x9, [x29, #-8]
  40e810:	cmn	x26, #0x2
  40e814:	b.ne	40e838 <wcrtomb@plt+0xba08>  // b.any
  40e818:	ldurb	w2, [x9, #-1]
  40e81c:	mov	x0, x27
  40e820:	mov	x1, x23
  40e824:	bl	40edd4 <wcrtomb@plt+0xbfa4>
  40e828:	ldr	x22, [x23, #368]
  40e82c:	mov	x25, x0
  40e830:	mov	w8, wzr
  40e834:	b	40e654 <wcrtomb@plt+0xb824>
  40e838:	cmp	x9, x19
  40e83c:	b.hi	40e898 <wcrtomb@plt+0xba68>  // b.pmore
  40e840:	ldurb	w8, [x9, #-1]
  40e844:	ldur	x10, [x29, #-16]
  40e848:	cmp	w8, w10
  40e84c:	b.ne	40e898 <wcrtomb@plt+0xba68>  // b.any
  40e850:	ldr	x8, [x23, #392]
  40e854:	ldr	x25, [x8, x27, lsl #3]
  40e858:	tbnz	x25, #63, 40e898 <wcrtomb@plt+0xba68>
  40e85c:	ldur	x10, [x29, #-24]
  40e860:	ldur	w8, [x29, #-28]
  40e864:	add	x10, x10, #0x1
  40e868:	stur	x10, [x29, #-24]
  40e86c:	tbnz	w8, #0, 40e984 <wcrtomb@plt+0xbb54>
  40e870:	ldr	x8, [sp, #8]
  40e874:	ldrb	w8, [x8]
  40e878:	cmp	w8, #0x4
  40e87c:	b.eq	40e978 <wcrtomb@plt+0xbb48>  // b.none
  40e880:	cmp	w8, #0x2
  40e884:	b.ne	40e980 <wcrtomb@plt+0xbb50>  // b.any
  40e888:	ldrsw	x10, [x23, #364]
  40e88c:	mov	w8, wzr
  40e890:	sub	x25, x10, #0x1
  40e894:	b	40e988 <wcrtomb@plt+0xbb58>
  40e898:	stur	xzr, [x29, #-8]
  40e89c:	mov	w8, #0x16                  	// #22
  40e8a0:	b	40e650 <wcrtomb@plt+0xb820>
  40e8a4:	cmp	x25, x19
  40e8a8:	b.ne	40e8cc <wcrtomb@plt+0xba9c>  // b.any
  40e8ac:	ldr	x8, [x23, #296]
  40e8b0:	mov	w1, #0x4                   	// #4
  40e8b4:	mov	x2, x26
  40e8b8:	mov	x3, x23
  40e8bc:	madd	x8, x26, x20, x8
  40e8c0:	ldrb	w0, [x8, #32]
  40e8c4:	bl	40f4ec <wcrtomb@plt+0xc6bc>
  40e8c8:	tbnz	w0, #0, 40e804 <wcrtomb@plt+0xb9d4>
  40e8cc:	tbz	w21, #0, 40e8f8 <wcrtomb@plt+0xbac8>
  40e8d0:	ldrsw	x8, [x23, #364]
  40e8d4:	cmp	x26, x8
  40e8d8:	b.ge	40e8f8 <wcrtomb@plt+0xbac8>  // b.tcont
  40e8dc:	mov	x0, x23
  40e8e0:	mov	x1, x25
  40e8e4:	mov	x2, x24
  40e8e8:	mov	x3, x19
  40e8ec:	bl	40eb1c <wcrtomb@plt+0xbcec>
  40e8f0:	mov	x24, x0
  40e8f4:	stur	x0, [x29, #-8]
  40e8f8:	tbz	w21, #0, 40e954 <wcrtomb@plt+0xbb24>
  40e8fc:	ldr	x8, [x23, #296]
  40e900:	madd	x8, x26, x20, x8
  40e904:	ldr	x8, [x8, #56]
  40e908:	cbz	x8, 40e954 <wcrtomb@plt+0xbb24>
  40e90c:	ldur	x8, [x29, #-8]
  40e910:	cmp	x8, x19
  40e914:	b.cs	40e954 <wcrtomb@plt+0xbb24>  // b.hs, b.nlast
  40e918:	ldrb	w8, [x8]
  40e91c:	add	x8, x23, x8, lsl #2
  40e920:	ldr	w8, [x8, #1308]
  40e924:	cmn	w8, #0x1
  40e928:	b.ne	40e954 <wcrtomb@plt+0xbb24>  // b.any
  40e92c:	sub	x2, x29, #0x8
  40e930:	mov	x0, x23
  40e934:	mov	x1, x26
  40e938:	mov	x3, x19
  40e93c:	bl	40eb98 <wcrtomb@plt+0xbd68>
  40e940:	ldur	x24, [x29, #-8]
  40e944:	ldr	x22, [x23, #368]
  40e948:	mov	x25, x0
  40e94c:	mov	w8, wzr
  40e950:	b	40e658 <wcrtomb@plt+0xb828>
  40e954:	ldur	x9, [x29, #-8]
  40e958:	ldr	x8, [x23, #376]
  40e95c:	add	x10, x9, #0x1
  40e960:	ldr	x8, [x8, x26, lsl #3]
  40e964:	stur	x10, [x29, #-8]
  40e968:	ldrb	w9, [x9]
  40e96c:	ldr	x25, [x8, x9, lsl #3]
  40e970:	mov	w8, wzr
  40e974:	b	40e658 <wcrtomb@plt+0xb828>
  40e978:	mov	x25, xzr
  40e97c:	b	40e984 <wcrtomb@plt+0xbb54>
  40e980:	ldr	x25, [x23, #400]
  40e984:	mov	w8, wzr
  40e988:	mov	x26, x27
  40e98c:	mov	x24, x9
  40e990:	b	40e658 <wcrtomb@plt+0xb828>
  40e994:	cmp	w8, #0x16
  40e998:	b.ne	40e9c4 <wcrtomb@plt+0xbb94>  // b.any
  40e99c:	ldr	x9, [sp, #24]
  40e9a0:	cbz	x9, 40e9b4 <wcrtomb@plt+0xbb84>
  40e9a4:	ldr	x8, [x9]
  40e9a8:	ldur	x10, [x29, #-24]
  40e9ac:	add	x8, x8, x10
  40e9b0:	str	x8, [x9]
  40e9b4:	ldr	w8, [sp, #20]
  40e9b8:	strb	w8, [x19]
  40e9bc:	ldur	x0, [x29, #-8]
  40e9c0:	b	40e9c4 <wcrtomb@plt+0xbb94>
  40e9c4:	ldp	x20, x19, [sp, #144]
  40e9c8:	ldp	x22, x21, [sp, #128]
  40e9cc:	ldp	x24, x23, [sp, #112]
  40e9d0:	ldp	x26, x25, [sp, #96]
  40e9d4:	ldp	x28, x27, [sp, #80]
  40e9d8:	ldp	x29, x30, [sp, #64]
  40e9dc:	add	sp, sp, #0xa0
  40e9e0:	ret
  40e9e4:	sub	sp, sp, #0x40
  40e9e8:	stp	x29, x30, [sp, #16]
  40e9ec:	stp	x22, x21, [sp, #32]
  40e9f0:	stp	x20, x19, [sp, #48]
  40e9f4:	ldr	x22, [x0, #352]
  40e9f8:	ldr	x8, [x0, #304]
  40e9fc:	add	x29, sp, #0x10
  40ea00:	subs	x2, x8, x22
  40ea04:	b.le	40eb08 <wcrtomb@plt+0xbcd8>
  40ea08:	ldr	x8, [x0, #368]
  40ea0c:	add	x9, x22, #0x2
  40ea10:	mov	x19, x0
  40ea14:	add	x1, sp, #0x8
  40ea18:	sub	x10, x8, #0x10
  40ea1c:	cmp	x8, #0x0
  40ea20:	csel	x0, xzr, x10, eq  // eq = none
  40ea24:	csel	x8, xzr, x9, eq  // eq = none
  40ea28:	mov	x3, #0xffffffffffffffff    	// #-1
  40ea2c:	mov	w4, #0x8                   	// #8
  40ea30:	str	x8, [sp, #8]
  40ea34:	bl	40c2e0 <wcrtomb@plt+0x94b0>
  40ea38:	add	x8, x0, #0x10
  40ea3c:	stp	xzr, xzr, [x0]
  40ea40:	str	x8, [x19, #368]
  40ea44:	ldr	x21, [sp, #8]
  40ea48:	ldr	x0, [x19, #376]
  40ea4c:	mov	w2, #0x8                   	// #8
  40ea50:	sub	x20, x21, #0x2
  40ea54:	mov	x1, x20
  40ea58:	str	x20, [x19, #352]
  40ea5c:	bl	4118f4 <wcrtomb@plt+0xeac4>
  40ea60:	ldr	x8, [x19, #384]
  40ea64:	str	x0, [x19, #376]
  40ea68:	mov	w2, #0x1                   	// #1
  40ea6c:	mov	x1, x20
  40ea70:	mov	x0, x8
  40ea74:	bl	4118f4 <wcrtomb@plt+0xeac4>
  40ea78:	ldr	x8, [x19, #392]
  40ea7c:	str	x0, [x19, #384]
  40ea80:	mov	w2, #0x8                   	// #8
  40ea84:	mov	x1, x20
  40ea88:	mov	x0, x8
  40ea8c:	bl	4118f4 <wcrtomb@plt+0xeac4>
  40ea90:	ldrb	w8, [x19, #1048]
  40ea94:	str	x0, [x19, #392]
  40ea98:	cbz	w8, 40eac8 <wcrtomb@plt+0xbc98>
  40ea9c:	ldr	x8, [x19, #432]
  40eaa0:	mov	w2, #0x8                   	// #8
  40eaa4:	mov	x1, x21
  40eaa8:	sub	x9, x8, #0x10
  40eaac:	cmp	x8, #0x0
  40eab0:	csel	x0, xzr, x9, eq  // eq = none
  40eab4:	bl	4118f4 <wcrtomb@plt+0xeac4>
  40eab8:	cbnz	x22, 40eac0 <wcrtomb@plt+0xbc90>
  40eabc:	stp	xzr, xzr, [x0]
  40eac0:	add	x8, x0, #0x10
  40eac4:	str	x8, [x19, #432]
  40eac8:	cmp	x22, x20
  40eacc:	b.ge	40eb08 <wcrtomb@plt+0xbcd8>  // b.tcont
  40ead0:	ldrb	w8, [x19, #1048]
  40ead4:	b	40eae4 <wcrtomb@plt+0xbcb4>
  40ead8:	add	x22, x22, #0x1
  40eadc:	cmp	x20, x22
  40eae0:	b.eq	40eb08 <wcrtomb@plt+0xbcd8>  // b.none
  40eae4:	ldr	x9, [x19, #368]
  40eae8:	lsl	x10, x22, #3
  40eaec:	str	xzr, [x9, x10]
  40eaf0:	ldr	x9, [x19, #376]
  40eaf4:	str	xzr, [x9, x10]
  40eaf8:	cbz	w8, 40ead8 <wcrtomb@plt+0xbca8>
  40eafc:	ldr	x9, [x19, #432]
  40eb00:	str	xzr, [x9, x22, lsl #3]
  40eb04:	b	40ead8 <wcrtomb@plt+0xbca8>
  40eb08:	ldp	x20, x19, [sp, #48]
  40eb0c:	ldp	x22, x21, [sp, #32]
  40eb10:	ldp	x29, x30, [sp, #16]
  40eb14:	add	sp, sp, #0x40
  40eb18:	ret
  40eb1c:	sub	sp, sp, #0x40
  40eb20:	stp	x29, x30, [sp, #16]
  40eb24:	stp	x22, x21, [sp, #32]
  40eb28:	stp	x20, x19, [sp, #48]
  40eb2c:	ldrb	w8, [x1]
  40eb30:	mov	x21, x1
  40eb34:	add	x29, sp, #0x10
  40eb38:	add	x8, x0, x8
  40eb3c:	ldrb	w8, [x8, #716]
  40eb40:	cbz	w8, 40eb4c <wcrtomb@plt+0xbd1c>
  40eb44:	mov	x20, x21
  40eb48:	b	40eb80 <wcrtomb@plt+0xbd50>
  40eb4c:	mov	x20, x2
  40eb50:	cmp	x2, x21
  40eb54:	b.cs	40eb80 <wcrtomb@plt+0xbd50>  // b.hs, b.nlast
  40eb58:	mov	x19, x3
  40eb5c:	mov	x22, x0
  40eb60:	sub	x2, x19, x20
  40eb64:	sub	x0, x29, #0x4
  40eb68:	mov	x1, x20
  40eb6c:	mov	x3, x22
  40eb70:	bl	40cc04 <wcrtomb@plt+0x9dd4>
  40eb74:	add	x20, x20, w0, sxtw
  40eb78:	cmp	x20, x21
  40eb7c:	b.cc	40eb60 <wcrtomb@plt+0xbd30>  // b.lo, b.ul, b.last
  40eb80:	mov	x0, x20
  40eb84:	ldp	x20, x19, [sp, #48]
  40eb88:	ldp	x22, x21, [sp, #32]
  40eb8c:	ldp	x29, x30, [sp, #16]
  40eb90:	add	sp, sp, #0x40
  40eb94:	ret
  40eb98:	sub	sp, sp, #0x50
  40eb9c:	stp	x29, x30, [sp, #16]
  40eba0:	stp	x24, x23, [sp, #32]
  40eba4:	stp	x22, x21, [sp, #48]
  40eba8:	stp	x20, x19, [sp, #64]
  40ebac:	mov	x19, x1
  40ebb0:	ldr	x1, [x2]
  40ebb4:	add	x29, sp, #0x10
  40ebb8:	mov	x20, x0
  40ebbc:	mov	x22, x2
  40ebc0:	sub	x2, x3, x1
  40ebc4:	sub	x0, x29, #0x4
  40ebc8:	mov	x3, x20
  40ebcc:	bl	40cc04 <wcrtomb@plt+0x9dd4>
  40ebd0:	mov	w23, w0
  40ebd4:	cmp	w0, #0x1
  40ebd8:	mov	w24, wzr
  40ebdc:	mov	x21, x19
  40ebe0:	str	xzr, [x20, #416]
  40ebe4:	b.ge	40ec0c <wcrtomb@plt+0xbddc>  // b.tcont
  40ebe8:	b	40ec24 <wcrtomb@plt+0xbdf4>
  40ebec:	mov	x0, x20
  40ebf0:	mov	x1, x21
  40ebf4:	mov	x2, x22
  40ebf8:	bl	40f524 <wcrtomb@plt+0xc6f4>
  40ebfc:	add	w24, w24, #0x1
  40ec00:	cmp	w23, w24
  40ec04:	mov	x21, x0
  40ec08:	b.eq	40ec20 <wcrtomb@plt+0xbdf0>  // b.none
  40ec0c:	cbz	w24, 40ebec <wcrtomb@plt+0xbdbc>
  40ec10:	ldrsw	x8, [x20, #364]
  40ec14:	cmp	x21, x8
  40ec18:	b.ge	40ebec <wcrtomb@plt+0xbdbc>  // b.tcont
  40ec1c:	b	40ec24 <wcrtomb@plt+0xbdf4>
  40ec20:	mov	w24, w23
  40ec24:	ldr	x8, [x22]
  40ec28:	sub	w9, w23, w24
  40ec2c:	add	x8, x8, w9, sxtw
  40ec30:	str	x8, [x22]
  40ec34:	ldur	w8, [x29, #-4]
  40ec38:	cmn	w8, #0x1
  40ec3c:	b.eq	40ed08 <wcrtomb@plt+0xbed8>  // b.none
  40ec40:	ldr	x8, [x20, #296]
  40ec44:	mov	w9, #0x50                  	// #80
  40ec48:	madd	x8, x19, x9, x8
  40ec4c:	ldr	x8, [x8, #72]
  40ec50:	tbz	x8, #63, 40ece0 <wcrtomb@plt+0xbeb0>
  40ec54:	ldr	x8, [x20, #440]
  40ec58:	cmp	x8, #0x400
  40ec5c:	b.lt	40ecc4 <wcrtomb@plt+0xbe94>  // b.tstop
  40ec60:	ldr	x8, [x20, #352]
  40ec64:	tbnz	x8, #63, 40ec94 <wcrtomb@plt+0xbe64>
  40ec68:	mov	x22, #0xffffffffffffffff    	// #-1
  40ec6c:	ldr	x8, [x20, #432]
  40ec70:	lsl	x23, x22, #3
  40ec74:	ldr	x0, [x8, x23]
  40ec78:	bl	402bd0 <free@plt>
  40ec7c:	ldr	x8, [x20, #432]
  40ec80:	add	x22, x22, #0x1
  40ec84:	str	xzr, [x8, x23]
  40ec88:	ldr	x8, [x20, #352]
  40ec8c:	cmp	x22, x8
  40ec90:	b.lt	40ec6c <wcrtomb@plt+0xbe3c>  // b.tstop
  40ec94:	ldr	x8, [x20, #304]
  40ec98:	cmp	x8, #0x1
  40ec9c:	b.lt	40ecc0 <wcrtomb@plt+0xbe90>  // b.tstop
  40eca0:	ldp	x10, x9, [x20, #296]
  40eca4:	mov	x8, xzr
  40eca8:	mov	x11, #0xffffffffffffffff    	// #-1
  40ecac:	add	x10, x10, #0x48
  40ecb0:	add	x8, x8, #0x1
  40ecb4:	cmp	x8, x9
  40ecb8:	str	x11, [x10], #80
  40ecbc:	b.lt	40ecb0 <wcrtomb@plt+0xbe80>  // b.tstop
  40ecc0:	str	xzr, [x20, #440]
  40ecc4:	ldr	x8, [x20, #440]
  40ecc8:	ldr	x9, [x20, #296]
  40eccc:	mov	w10, #0x50                  	// #80
  40ecd0:	add	x11, x8, #0x1
  40ecd4:	madd	x9, x19, x10, x9
  40ecd8:	str	x11, [x20, #440]
  40ecdc:	str	x8, [x9, #72]
  40ece0:	ldr	x8, [x20, #432]
  40ece4:	ldr	x8, [x8, x21, lsl #3]
  40ece8:	cbz	x8, 40ed10 <wcrtomb@plt+0xbee0>
  40ecec:	ldr	x9, [x20, #296]
  40ecf0:	mov	w10, #0x50                  	// #80
  40ecf4:	madd	x9, x19, x10, x9
  40ecf8:	ldr	x9, [x9, #72]
  40ecfc:	ldr	x22, [x8, x9, lsl #3]
  40ed00:	tbz	x22, #63, 40edb8 <wcrtomb@plt+0xbf88>
  40ed04:	b	40ed38 <wcrtomb@plt+0xbf08>
  40ed08:	mov	x22, x21
  40ed0c:	b	40edb8 <wcrtomb@plt+0xbf88>
  40ed10:	mov	w0, #0x2000                	// #8192
  40ed14:	bl	4118c8 <wcrtomb@plt+0xea98>
  40ed18:	ldr	x8, [x20, #432]
  40ed1c:	lsl	x9, x21, #3
  40ed20:	mov	w1, #0xff                  	// #255
  40ed24:	mov	w2, #0x2000                	// #8192
  40ed28:	str	x0, [x8, x9]
  40ed2c:	ldr	x8, [x20, #432]
  40ed30:	ldr	x0, [x8, x9]
  40ed34:	bl	4029c0 <memset@plt>
  40ed38:	ldr	x8, [x20, #296]
  40ed3c:	mov	w9, #0x50                  	// #80
  40ed40:	add	x22, x20, #0x198
  40ed44:	cmn	x21, #0x1
  40ed48:	madd	x9, x19, x9, x8
  40ed4c:	add	x0, x9, #0x30
  40ed50:	b.eq	40ed6c <wcrtomb@plt+0xbf3c>  // b.none
  40ed54:	mov	w9, #0x50                  	// #80
  40ed58:	madd	x8, x21, x9, x8
  40ed5c:	add	x1, x8, #0x8
  40ed60:	mov	x2, x22
  40ed64:	bl	40d3f4 <wcrtomb@plt+0xa5c4>
  40ed68:	b	40ed74 <wcrtomb@plt+0xbf44>
  40ed6c:	mov	x1, x22
  40ed70:	bl	40d410 <wcrtomb@plt+0xa5e0>
  40ed74:	mov	x0, x20
  40ed78:	mov	x1, x22
  40ed7c:	bl	40d7e8 <wcrtomb@plt+0xa9b8>
  40ed80:	eor	w2, w0, #0x7
  40ed84:	mov	x0, x20
  40ed88:	mov	x1, x22
  40ed8c:	bl	40d828 <wcrtomb@plt+0xa9f8>
  40ed90:	mov	x22, x0
  40ed94:	mov	x0, x20
  40ed98:	bl	40e9e4 <wcrtomb@plt+0xbbb4>
  40ed9c:	ldr	x9, [x20, #296]
  40eda0:	ldr	x8, [x20, #432]
  40eda4:	mov	w10, #0x50                  	// #80
  40eda8:	madd	x9, x19, x10, x9
  40edac:	ldr	x8, [x8, x21, lsl #3]
  40edb0:	ldr	x9, [x9, #72]
  40edb4:	str	x22, [x8, x9, lsl #3]
  40edb8:	mov	x0, x22
  40edbc:	ldp	x20, x19, [sp, #64]
  40edc0:	ldp	x22, x21, [sp, #48]
  40edc4:	ldp	x24, x23, [sp, #32]
  40edc8:	ldp	x29, x30, [sp, #16]
  40edcc:	add	sp, sp, #0x50
  40edd0:	ret
  40edd4:	sub	sp, sp, #0x100
  40edd8:	stp	x29, x30, [sp, #160]
  40eddc:	stp	x28, x27, [sp, #176]
  40ede0:	stp	x26, x25, [sp, #192]
  40ede4:	stp	x24, x23, [sp, #208]
  40ede8:	stp	x22, x21, [sp, #224]
  40edec:	stp	x20, x19, [sp, #240]
  40edf0:	add	x29, sp, #0xa0
  40edf4:	str	x2, [sp, #8]
  40edf8:	mov	x21, x1
  40edfc:	mov	x20, x0
  40ee00:	bl	40f5e8 <wcrtomb@plt+0xc7b8>
  40ee04:	tst	w0, #0x1
  40ee08:	mov	w8, #0x170                 	// #368
  40ee0c:	mov	w9, #0x178                 	// #376
  40ee10:	csel	x8, x9, x8, ne  // ne = any
  40ee14:	ldr	x19, [x21, x8]
  40ee18:	ldr	x22, [x19, x20, lsl #3]
  40ee1c:	cbnz	x22, 40eeb0 <wcrtomb@plt+0xc080>
  40ee20:	ldr	w8, [x21, #360]
  40ee24:	cmp	w8, #0x400
  40ee28:	b.lt	40ee7c <wcrtomb@plt+0xc04c>  // b.tstop
  40ee2c:	ldrsw	x22, [x21, #364]
  40ee30:	ldr	x8, [x21, #352]
  40ee34:	cmp	x8, x22
  40ee38:	b.le	40ee78 <wcrtomb@plt+0xc048>
  40ee3c:	ldr	x8, [x21, #368]
  40ee40:	lsl	x23, x22, #3
  40ee44:	ldr	x0, [x8, x23]
  40ee48:	bl	402bd0 <free@plt>
  40ee4c:	ldr	x8, [x21, #376]
  40ee50:	ldr	x0, [x8, x23]
  40ee54:	bl	402bd0 <free@plt>
  40ee58:	ldr	x8, [x21, #376]
  40ee5c:	add	x22, x22, #0x1
  40ee60:	str	xzr, [x8, x23]
  40ee64:	ldr	x8, [x21, #368]
  40ee68:	str	xzr, [x8, x23]
  40ee6c:	ldr	x8, [x21, #352]
  40ee70:	cmp	x22, x8
  40ee74:	b.lt	40ee3c <wcrtomb@plt+0xc00c>  // b.tstop
  40ee78:	str	wzr, [x21, #360]
  40ee7c:	ldr	w8, [x21, #360]
  40ee80:	mov	w0, #0x800                 	// #2048
  40ee84:	add	w8, w8, #0x1
  40ee88:	str	w8, [x21, #360]
  40ee8c:	bl	4118c8 <wcrtomb@plt+0xea98>
  40ee90:	mov	x22, x0
  40ee94:	mov	x8, xzr
  40ee98:	mov	x9, #0xfffffffffffffffe    	// #-2
  40ee9c:	str	x0, [x19, x20, lsl #3]
  40eea0:	str	x9, [x22, x8]
  40eea4:	add	x8, x8, #0x8
  40eea8:	cmp	x8, #0x800
  40eeac:	b.ne	40eea0 <wcrtomb@plt+0xc070>  // b.any
  40eeb0:	ldr	x8, [x21, #384]
  40eeb4:	mov	w9, #0x50                  	// #80
  40eeb8:	mov	w1, #0x4                   	// #4
  40eebc:	mov	x2, x20
  40eec0:	strb	wzr, [x8, x20]
  40eec4:	ldr	x8, [x21, #296]
  40eec8:	mov	x3, x21
  40eecc:	madd	x8, x20, x9, x8
  40eed0:	ldrb	w0, [x8, #32]
  40eed4:	bl	40f4ec <wcrtomb@plt+0xc6bc>
  40eed8:	tbz	w0, #0, 40eeec <wcrtomb@plt+0xc0bc>
  40eedc:	ldr	x8, [x21, #384]
  40eee0:	ldrb	w9, [x8, x20]
  40eee4:	orr	w9, w9, #0x4
  40eee8:	strb	w9, [x8, x20]
  40eeec:	ldr	x8, [x21, #296]
  40eef0:	mov	w9, #0x50                  	// #80
  40eef4:	mov	w1, #0x2                   	// #2
  40eef8:	mov	x2, x20
  40eefc:	madd	x8, x20, x9, x8
  40ef00:	ldrb	w0, [x8, #32]
  40ef04:	mov	x3, x21
  40ef08:	bl	40f4ec <wcrtomb@plt+0xc6bc>
  40ef0c:	tbz	w0, #0, 40ef20 <wcrtomb@plt+0xc0f0>
  40ef10:	ldr	x8, [x21, #384]
  40ef14:	ldrb	w9, [x8, x20]
  40ef18:	orr	w9, w9, #0x2
  40ef1c:	strb	w9, [x8, x20]
  40ef20:	ldr	x8, [x21, #296]
  40ef24:	mov	w9, #0x50                  	// #80
  40ef28:	mov	w1, #0x1                   	// #1
  40ef2c:	mov	x2, x20
  40ef30:	madd	x8, x20, x9, x8
  40ef34:	ldrb	w0, [x8, #32]
  40ef38:	mov	x3, x21
  40ef3c:	str	x22, [sp]
  40ef40:	bl	40f4ec <wcrtomb@plt+0xc6bc>
  40ef44:	tbz	w0, #0, 40ef58 <wcrtomb@plt+0xc128>
  40ef48:	ldr	x8, [x21, #384]
  40ef4c:	ldrb	w9, [x8, x20]
  40ef50:	orr	w9, w9, #0x1
  40ef54:	strb	w9, [x8, x20]
  40ef58:	ldr	x1, [x21, #176]
  40ef5c:	sub	x0, x29, #0x18
  40ef60:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40ef64:	ldr	x8, [x21, #296]
  40ef68:	mov	w9, #0x50                  	// #80
  40ef6c:	madd	x8, x20, x9, x8
  40ef70:	ldr	x8, [x8, #16]
  40ef74:	cmp	x8, #0x1
  40ef78:	b.lt	40f01c <wcrtomb@plt+0xc1ec>  // b.tstop
  40ef7c:	mov	x19, xzr
  40ef80:	mov	w22, #0x50                  	// #80
  40ef84:	mov	w23, #0x18                  	// #24
  40ef88:	b	40efa4 <wcrtomb@plt+0xc174>
  40ef8c:	ldr	x8, [x21, #296]
  40ef90:	add	x19, x19, #0x1
  40ef94:	madd	x8, x20, x22, x8
  40ef98:	ldr	x8, [x8, #16]
  40ef9c:	cmp	x19, x8
  40efa0:	b.ge	40f01c <wcrtomb@plt+0xc1ec>  // b.tcont
  40efa4:	ldr	x8, [x21, #296]
  40efa8:	lsl	x24, x19, #4
  40efac:	madd	x8, x20, x22, x8
  40efb0:	ldr	x9, [x8, #8]
  40efb4:	ldr	x8, [x21, #320]
  40efb8:	ldr	x9, [x9, x24]
  40efbc:	madd	x10, x9, x23, x8
  40efc0:	ldr	x10, [x10, #8]
  40efc4:	cmp	x10, #0x1
  40efc8:	b.lt	40ef8c <wcrtomb@plt+0xc15c>  // b.tstop
  40efcc:	mov	x25, xzr
  40efd0:	mov	x26, xzr
  40efd4:	mul	x9, x9, x23
  40efd8:	ldr	x8, [x8, x9]
  40efdc:	sub	x2, x29, #0x18
  40efe0:	add	x8, x8, x25
  40efe4:	ldp	x0, x1, [x8]
  40efe8:	bl	40e1d4 <wcrtomb@plt+0xb3a4>
  40efec:	ldr	x8, [x21, #296]
  40eff0:	add	x26, x26, #0x1
  40eff4:	add	x25, x25, #0x10
  40eff8:	madd	x8, x20, x22, x8
  40effc:	ldr	x9, [x8, #8]
  40f000:	ldr	x8, [x21, #320]
  40f004:	ldr	x9, [x9, x24]
  40f008:	madd	x10, x9, x23, x8
  40f00c:	ldr	x10, [x10, #8]
  40f010:	cmp	x26, x10
  40f014:	b.lt	40efd4 <wcrtomb@plt+0xc1a4>  // b.tstop
  40f018:	b	40ef8c <wcrtomb@plt+0xc15c>
  40f01c:	ldr	x1, [x21, #176]
  40f020:	sub	x0, x29, #0x30
  40f024:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40f028:	add	x0, sp, #0x50
  40f02c:	add	x28, sp, #0x50
  40f030:	bl	40c4c0 <wcrtomb@plt+0x9690>
  40f034:	ldur	x8, [x29, #-16]
  40f038:	cmp	x8, #0x1
  40f03c:	b.lt	40f2ec <wcrtomb@plt+0xc4bc>  // b.tstop
  40f040:	ldr	x8, [sp, #8]
  40f044:	mov	x19, xzr
  40f048:	add	x23, x21, #0x3f0
  40f04c:	add	x22, x21, #0x3d0
  40f050:	and	w9, w8, #0xff
  40f054:	and	x8, x8, #0xff
  40f058:	str	x8, [sp, #16]
  40f05c:	ldur	x8, [x29, #-24]
  40f060:	add	x26, sp, #0x30
  40f064:	str	w9, [sp, #24]
  40f068:	str	x8, [sp, #40]
  40f06c:	ldur	x8, [x29, #-16]
  40f070:	str	x8, [sp, #32]
  40f074:	b	40f088 <wcrtomb@plt+0xc258>
  40f078:	ldr	x8, [sp, #32]
  40f07c:	add	x19, x19, #0x1
  40f080:	cmp	x19, x8
  40f084:	b.ge	40f2ec <wcrtomb@plt+0xc4bc>  // b.tcont
  40f088:	ldr	x8, [sp, #40]
  40f08c:	ldr	x9, [x21, #144]
  40f090:	add	x8, x8, x19, lsl #4
  40f094:	ldp	x24, x25, [x8]
  40f098:	ldr	x8, [x9, x24, lsl #3]
  40f09c:	cmp	x8, #0xff
  40f0a0:	b.hi	40f0e0 <wcrtomb@plt+0xc2b0>  // b.pmore
  40f0a4:	add	x0, sp, #0x30
  40f0a8:	bl	40c58c <wcrtomb@plt+0x975c>
  40f0ac:	ldr	x8, [x21, #144]
  40f0b0:	lsl	x27, x24, #3
  40f0b4:	add	x1, sp, #0x30
  40f0b8:	ldr	w0, [x8, x27]
  40f0bc:	bl	40c078 <wcrtomb@plt+0x9248>
  40f0c0:	ldr	x8, [x21, #144]
  40f0c4:	ldr	x9, [sp, #16]
  40f0c8:	ldr	x8, [x8, x27]
  40f0cc:	cmp	x8, x9
  40f0d0:	cset	w0, eq  // eq = none
  40f0d4:	cmp	w25, #0x1ff
  40f0d8:	b.eq	40f114 <wcrtomb@plt+0xc2e4>  // b.none
  40f0dc:	b	40f1b8 <wcrtomb@plt+0xc388>
  40f0e0:	cmp	x8, #0x114
  40f0e4:	b.lt	40f120 <wcrtomb@plt+0xc2f0>  // b.tstop
  40f0e8:	ldr	x9, [x21]
  40f0ec:	ldr	w0, [sp, #24]
  40f0f0:	add	x1, sp, #0x30
  40f0f4:	add	x8, x9, x8, lsl #5
  40f0f8:	mov	x9, #0xffffffffffffdd80    	// #-8832
  40f0fc:	add	x8, x8, x9
  40f100:	ldp	q1, q0, [x8]
  40f104:	stp	q1, q0, [sp, #48]
  40f108:	bl	40be74 <wcrtomb@plt+0x9044>
  40f10c:	cmp	w25, #0x1ff
  40f110:	b.ne	40f1b8 <wcrtomb@plt+0xc388>  // b.any
  40f114:	mov	x8, xzr
  40f118:	tbnz	w0, #0, 40f29c <wcrtomb@plt+0xc46c>
  40f11c:	b	40f2cc <wcrtomb@plt+0xc49c>
  40f120:	cmp	x8, #0x10a
  40f124:	b.ne	40f078 <wcrtomb@plt+0xc248>  // b.any
  40f128:	ldr	x8, [x21]
  40f12c:	ldr	x9, [x21, #24]
  40f130:	ldr	w0, [sp, #24]
  40f134:	add	x1, sp, #0x30
  40f138:	add	x8, x8, x9, lsl #5
  40f13c:	ldp	q1, q0, [x8]
  40f140:	stp	q1, q0, [sp, #48]
  40f144:	bl	40be74 <wcrtomb@plt+0x9044>
  40f148:	ldr	x27, [x21, #296]
  40f14c:	mov	w8, #0x50                  	// #80
  40f150:	str	w0, [sp, #28]
  40f154:	mov	w2, #0x1                   	// #1
  40f158:	madd	x8, x20, x8, x27
  40f15c:	ldrb	w1, [x8, #32]
  40f160:	mov	w0, w25
  40f164:	bl	40e2ec <wcrtomb@plt+0xb4bc>
  40f168:	tbz	w0, #0, 40f1ac <wcrtomb@plt+0xc37c>
  40f16c:	mov	w8, #0x50                  	// #80
  40f170:	madd	x8, x20, x8, x27
  40f174:	ldr	x8, [x8, #56]
  40f178:	mov	w9, #0x50                  	// #80
  40f17c:	cbnz	x8, 40f194 <wcrtomb@plt+0xc364>
  40f180:	madd	x8, x20, x9, x27
  40f184:	add	x0, x8, #0x30
  40f188:	mov	w1, #0x1                   	// #1
  40f18c:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40f190:	mov	w9, #0x50                  	// #80
  40f194:	ldr	x8, [x21, #296]
  40f198:	mov	x0, x24
  40f19c:	mov	x1, x25
  40f1a0:	madd	x8, x20, x9, x8
  40f1a4:	add	x2, x8, #0x30
  40f1a8:	bl	40e1d4 <wcrtomb@plt+0xb3a4>
  40f1ac:	ldr	w0, [sp, #28]
  40f1b0:	cmp	w25, #0x1ff
  40f1b4:	b.eq	40f114 <wcrtomb@plt+0xc2e4>  // b.none
  40f1b8:	ldr	x8, [x21, #296]
  40f1bc:	mov	w9, #0x50                  	// #80
  40f1c0:	str	w0, [sp, #28]
  40f1c4:	mov	w2, #0x4                   	// #4
  40f1c8:	madd	x8, x20, x9, x8
  40f1cc:	ldrb	w27, [x8, #32]
  40f1d0:	mov	w0, w25
  40f1d4:	mov	w1, w27
  40f1d8:	bl	40e2ec <wcrtomb@plt+0xb4bc>
  40f1dc:	tbnz	w0, #0, 40f200 <wcrtomb@plt+0xc3d0>
  40f1e0:	mov	x8, xzr
  40f1e4:	ldr	x9, [x23, x8]
  40f1e8:	ldr	x10, [x26, x8]
  40f1ec:	bic	x9, x10, x9
  40f1f0:	str	x9, [x26, x8]
  40f1f4:	add	x8, x8, #0x8
  40f1f8:	cmp	x8, #0x20
  40f1fc:	b.ne	40f1e4 <wcrtomb@plt+0xc3b4>  // b.any
  40f200:	mov	w2, #0x2                   	// #2
  40f204:	mov	w0, w25
  40f208:	mov	w1, w27
  40f20c:	bl	40e2ec <wcrtomb@plt+0xb4bc>
  40f210:	tbnz	w0, #0, 40f234 <wcrtomb@plt+0xc404>
  40f214:	mov	x8, xzr
  40f218:	ldr	x9, [x22, x8]
  40f21c:	ldr	x10, [x26, x8]
  40f220:	bic	x9, x10, x9
  40f224:	str	x9, [x26, x8]
  40f228:	add	x8, x8, #0x8
  40f22c:	cmp	x8, #0x20
  40f230:	b.ne	40f218 <wcrtomb@plt+0xc3e8>  // b.any
  40f234:	mov	w2, #0x1                   	// #1
  40f238:	mov	w0, w25
  40f23c:	mov	w1, w27
  40f240:	bl	40e2ec <wcrtomb@plt+0xb4bc>
  40f244:	tbnz	w0, #0, 40f274 <wcrtomb@plt+0xc444>
  40f248:	mov	x8, xzr
  40f24c:	add	x9, x21, x8
  40f250:	ldr	x10, [x9, #976]
  40f254:	ldr	x9, [x9, #1008]
  40f258:	ldr	x11, [x26, x8]
  40f25c:	orr	x9, x9, x10
  40f260:	and	x9, x11, x9
  40f264:	str	x9, [x26, x8]
  40f268:	add	x8, x8, #0x8
  40f26c:	cmp	x8, #0x20
  40f270:	b.ne	40f24c <wcrtomb@plt+0xc41c>  // b.any
  40f274:	add	x0, sp, #0x30
  40f278:	bl	40cdc0 <wcrtomb@plt+0x9f90>
  40f27c:	tbnz	w0, #0, 40f078 <wcrtomb@plt+0xc248>
  40f280:	ldr	w0, [sp, #24]
  40f284:	add	x1, sp, #0x30
  40f288:	bl	40be74 <wcrtomb@plt+0x9044>
  40f28c:	ldr	w8, [sp, #28]
  40f290:	and	w0, w8, w0
  40f294:	mov	x8, xzr
  40f298:	tbz	w0, #0, 40f2cc <wcrtomb@plt+0xc49c>
  40f29c:	ldr	x9, [x26, x8]
  40f2a0:	ldr	x10, [x28, x8]
  40f2a4:	and	x9, x10, x9
  40f2a8:	str	x9, [x28, x8]
  40f2ac:	add	x8, x8, #0x8
  40f2b0:	cmp	x8, #0x20
  40f2b4:	b.ne	40f29c <wcrtomb@plt+0xc46c>  // b.any
  40f2b8:	sub	x2, x29, #0x30
  40f2bc:	mov	x0, x24
  40f2c0:	mov	x1, x25
  40f2c4:	bl	40d770 <wcrtomb@plt+0xa940>
  40f2c8:	b	40f078 <wcrtomb@plt+0xc248>
  40f2cc:	ldr	x9, [x26, x8]
  40f2d0:	ldr	x10, [x28, x8]
  40f2d4:	bic	x9, x10, x9
  40f2d8:	str	x9, [x28, x8]
  40f2dc:	add	x8, x8, #0x8
  40f2e0:	cmp	x8, #0x20
  40f2e4:	b.ne	40f2cc <wcrtomb@plt+0xc49c>  // b.any
  40f2e8:	b	40f078 <wcrtomb@plt+0xc248>
  40f2ec:	ldr	x1, [x21, #176]
  40f2f0:	add	x0, sp, #0x30
  40f2f4:	bl	40d3c0 <wcrtomb@plt+0xa590>
  40f2f8:	ldur	x8, [x29, #-40]
  40f2fc:	ldrb	w9, [x21, #328]
  40f300:	ldr	x22, [sp]
  40f304:	cmp	x8, #0x0
  40f308:	b.le	40f3bc <wcrtomb@plt+0xc58c>
  40f30c:	cbz	w9, 40f37c <wcrtomb@plt+0xc54c>
  40f310:	ldrb	w10, [x21, #1048]
  40f314:	cmp	w10, #0x1
  40f318:	cset	w9, ne  // ne = any
  40f31c:	cbz	w10, 40f358 <wcrtomb@plt+0xc528>
  40f320:	cmp	x8, #0x1
  40f324:	b.lt	40f35c <wcrtomb@plt+0xc52c>  // b.tstop
  40f328:	ldr	x10, [x21, #280]
  40f32c:	ldur	x11, [x29, #-48]
  40f330:	mov	w12, #0x1                   	// #1
  40f334:	mov	w9, #0x1                   	// #1
  40f338:	ldr	x13, [x11], #16
  40f33c:	ldrb	w13, [x10, x13]
  40f340:	and	w13, w9, w13
  40f344:	and	w9, w13, #0x1
  40f348:	tbz	w13, #0, 40f358 <wcrtomb@plt+0xc528>
  40f34c:	cmp	x12, x8
  40f350:	add	x12, x12, #0x1
  40f354:	b.lt	40f338 <wcrtomb@plt+0xc508>  // b.tstop
  40f358:	cbz	w9, 40f37c <wcrtomb@plt+0xc54c>
  40f35c:	ldr	x8, [x21, #296]
  40f360:	sub	x1, x29, #0x30
  40f364:	add	x2, sp, #0x30
  40f368:	add	x0, x8, #0x8
  40f36c:	bl	40d3f4 <wcrtomb@plt+0xa5c4>
  40f370:	add	x0, sp, #0x30
  40f374:	sub	x1, x29, #0x30
  40f378:	bl	40d410 <wcrtomb@plt+0xa5e0>
  40f37c:	add	x1, sp, #0x50
  40f380:	mov	x0, x21
  40f384:	bl	40f604 <wcrtomb@plt+0xc7d4>
  40f388:	mov	w24, w0
  40f38c:	sub	x1, x29, #0x30
  40f390:	mov	x0, x21
  40f394:	bl	40d7e8 <wcrtomb@plt+0xa9b8>
  40f398:	mov	w25, w0
  40f39c:	bics	wzr, w24, w0
  40f3a0:	b.eq	40f3d4 <wcrtomb@plt+0xc5a4>  // b.none
  40f3a4:	eor	w2, w25, #0x7
  40f3a8:	sub	x1, x29, #0x30
  40f3ac:	mov	x0, x21
  40f3b0:	bl	40d828 <wcrtomb@plt+0xa9f8>
  40f3b4:	mov	x23, x0
  40f3b8:	b	40f3d8 <wcrtomb@plt+0xc5a8>
  40f3bc:	cbz	w9, 40f4dc <wcrtomb@plt+0xc6ac>
  40f3c0:	ldrsw	x8, [x21, #364]
  40f3c4:	ldr	x23, [x21, #400]
  40f3c8:	mov	x24, xzr
  40f3cc:	sub	x25, x8, #0x1
  40f3d0:	b	40f41c <wcrtomb@plt+0xc5ec>
  40f3d4:	mov	x23, #0xffffffffffffffff    	// #-1
  40f3d8:	and	w19, w25, w24
  40f3dc:	mov	x24, x23
  40f3e0:	tbz	w19, #2, 40f3f8 <wcrtomb@plt+0xc5c8>
  40f3e4:	sub	x1, x29, #0x30
  40f3e8:	mov	w2, #0x4                   	// #4
  40f3ec:	mov	x0, x21
  40f3f0:	bl	40d828 <wcrtomb@plt+0xa9f8>
  40f3f4:	mov	x24, x0
  40f3f8:	mov	x25, x23
  40f3fc:	tbz	w19, #1, 40f414 <wcrtomb@plt+0xc5e4>
  40f400:	sub	x1, x29, #0x30
  40f404:	mov	w2, #0x2                   	// #2
  40f408:	mov	x0, x21
  40f40c:	bl	40d828 <wcrtomb@plt+0xa9f8>
  40f410:	mov	x25, x0
  40f414:	mov	x0, x21
  40f418:	bl	40e9e4 <wcrtomb@plt+0xbbb4>
  40f41c:	mov	x26, xzr
  40f420:	add	x19, x21, #0x1cc
  40f424:	b	40f438 <wcrtomb@plt+0xc608>
  40f428:	str	x8, [x22, x26, lsl #3]
  40f42c:	add	x26, x26, #0x1
  40f430:	cmp	x26, #0x100
  40f434:	b.eq	40f46c <wcrtomb@plt+0xc63c>  // b.none
  40f438:	add	x1, sp, #0x50
  40f43c:	mov	w0, w26
  40f440:	bl	40be74 <wcrtomb@plt+0x9044>
  40f444:	tbz	w0, #0, 40f42c <wcrtomb@plt+0xc5fc>
  40f448:	ldrb	w9, [x19, x26]
  40f44c:	mov	x8, x24
  40f450:	cmp	w9, #0x4
  40f454:	b.eq	40f428 <wcrtomb@plt+0xc5f8>  // b.none
  40f458:	cmp	w9, #0x2
  40f45c:	mov	x8, x25
  40f460:	b.eq	40f428 <wcrtomb@plt+0xc5f8>  // b.none
  40f464:	mov	x8, x23
  40f468:	b	40f428 <wcrtomb@plt+0xc5f8>
  40f46c:	ldur	x0, [x29, #-48]
  40f470:	bl	402bd0 <free@plt>
  40f474:	ldur	x0, [x29, #-24]
  40f478:	bl	402bd0 <free@plt>
  40f47c:	ldr	x0, [sp, #48]
  40f480:	bl	402bd0 <free@plt>
  40f484:	ldrb	w23, [x21, #459]
  40f488:	add	x1, sp, #0x50
  40f48c:	mov	w0, w23
  40f490:	bl	40be74 <wcrtomb@plt+0x9044>
  40f494:	tbz	w0, #0, 40f4b0 <wcrtomb@plt+0xc680>
  40f498:	lsl	x8, x23, #3
  40f49c:	ldr	x9, [x21, #392]
  40f4a0:	ldr	x10, [x22, x8]
  40f4a4:	mov	x11, #0xffffffffffffffff    	// #-1
  40f4a8:	str	x10, [x9, x20, lsl #3]
  40f4ac:	str	x11, [x22, x8]
  40f4b0:	ldr	x8, [sp, #8]
  40f4b4:	ldp	x20, x19, [sp, #240]
  40f4b8:	ldp	x24, x23, [sp, #208]
  40f4bc:	ldp	x26, x25, [sp, #192]
  40f4c0:	and	x8, x8, #0xff
  40f4c4:	ldr	x0, [x22, x8, lsl #3]
  40f4c8:	ldp	x22, x21, [sp, #224]
  40f4cc:	ldp	x28, x27, [sp, #176]
  40f4d0:	ldp	x29, x30, [sp, #160]
  40f4d4:	add	sp, sp, #0x100
  40f4d8:	ret
  40f4dc:	mov	x25, #0xffffffffffffffff    	// #-1
  40f4e0:	mov	x24, #0xffffffffffffffff    	// #-1
  40f4e4:	mov	x23, #0xffffffffffffffff    	// #-1
  40f4e8:	b	40f41c <wcrtomb@plt+0xc5ec>
  40f4ec:	stp	x29, x30, [sp, #-16]!
  40f4f0:	ldr	x9, [x3, #296]
  40f4f4:	mov	w10, #0x50                  	// #80
  40f4f8:	mov	w8, w1
  40f4fc:	mov	w1, w0
  40f500:	madd	x9, x2, x10, x9
  40f504:	ldrh	w9, [x9, #34]
  40f508:	mov	w2, w8
  40f50c:	mov	x29, sp
  40f510:	mov	w0, w9
  40f514:	bl	40e2ec <wcrtomb@plt+0xb4bc>
  40f518:	and	w0, w0, #0x1
  40f51c:	ldp	x29, x30, [sp], #16
  40f520:	ret
  40f524:	stp	x29, x30, [sp, #-48]!
  40f528:	stp	x22, x21, [sp, #16]
  40f52c:	stp	x20, x19, [sp, #32]
  40f530:	ldr	x8, [x0, #368]
  40f534:	mov	x20, x0
  40f538:	mov	x21, x1
  40f53c:	mov	x19, x2
  40f540:	ldr	x22, [x8, x1, lsl #3]
  40f544:	mov	x29, sp
  40f548:	cbnz	x22, 40f584 <wcrtomb@plt+0xc754>
  40f54c:	ldr	x8, [x20, #376]
  40f550:	ldr	x22, [x8, x21, lsl #3]
  40f554:	cbnz	x22, 40f584 <wcrtomb@plt+0xc754>
  40f558:	ldr	x8, [x19]
  40f55c:	mov	x0, x21
  40f560:	mov	x1, x20
  40f564:	ldrb	w2, [x8]
  40f568:	bl	40edd4 <wcrtomb@plt+0xbfa4>
  40f56c:	ldr	x8, [x20, #368]
  40f570:	ldr	x22, [x8, x21, lsl #3]
  40f574:	cbnz	x22, 40f584 <wcrtomb@plt+0xc754>
  40f578:	ldr	x8, [x20, #376]
  40f57c:	ldr	x22, [x8, x21, lsl #3]
  40f580:	cbz	x22, 40f5c8 <wcrtomb@plt+0xc798>
  40f584:	ldr	x8, [x19]
  40f588:	ldrb	w2, [x8]
  40f58c:	ldr	x8, [x22, x2, lsl #3]
  40f590:	cmn	x8, #0x2
  40f594:	b.ne	40f5a4 <wcrtomb@plt+0xc774>  // b.any
  40f598:	mov	x0, x21
  40f59c:	mov	x1, x20
  40f5a0:	bl	40edd4 <wcrtomb@plt+0xbfa4>
  40f5a4:	ldr	x8, [x19]
  40f5a8:	add	x9, x8, #0x1
  40f5ac:	str	x9, [x19]
  40f5b0:	ldrb	w8, [x8]
  40f5b4:	ldp	x20, x19, [sp, #32]
  40f5b8:	ldr	x0, [x22, x8, lsl #3]
  40f5bc:	ldp	x22, x21, [sp, #16]
  40f5c0:	ldp	x29, x30, [sp], #48
  40f5c4:	ret
  40f5c8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f5cc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f5d0:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f5d4:	add	x0, x0, #0xdeb
  40f5d8:	add	x1, x1, #0xcce
  40f5dc:	add	x3, x3, #0xe18
  40f5e0:	mov	w2, #0xc93                 	// #3219
  40f5e4:	bl	402d90 <__assert_fail@plt>
  40f5e8:	ldr	x8, [x1, #296]
  40f5ec:	mov	w9, #0x50                  	// #80
  40f5f0:	madd	x8, x0, x9, x8
  40f5f4:	ldrh	w8, [x8, #34]
  40f5f8:	cmp	w8, #0x0
  40f5fc:	cset	w0, ne  // ne = any
  40f600:	ret
  40f604:	mov	x9, xzr
  40f608:	mov	w8, wzr
  40f60c:	add	x11, x0, x9
  40f610:	ldr	x10, [x1, x9]
  40f614:	ldr	x12, [x11, #1008]
  40f618:	ldr	x11, [x11, #976]
  40f61c:	orr	w13, w8, #0x4
  40f620:	add	x9, x9, #0x8
  40f624:	tst	x12, x10
  40f628:	csel	w8, w8, w13, eq  // eq = none
  40f62c:	orr	x12, x11, x12
  40f630:	tst	x11, x10
  40f634:	orr	w11, w8, #0x2
  40f638:	csel	w8, w8, w11, eq  // eq = none
  40f63c:	bics	xzr, x10, x12
  40f640:	cset	w10, ne  // ne = any
  40f644:	cmp	x9, #0x20
  40f648:	orr	w8, w8, w10
  40f64c:	b.ne	40f60c <wcrtomb@plt+0xc7dc>  // b.any
  40f650:	mov	w0, w8
  40f654:	ret
  40f658:	stp	x29, x30, [sp, #-32]!
  40f65c:	stp	x20, x19, [sp, #16]
  40f660:	add	x8, x0, w1, uxtb #2
  40f664:	ldr	w8, [x8, #1308]
  40f668:	mov	x29, sp
  40f66c:	cmn	w8, #0x1
  40f670:	b.eq	40f6a0 <wcrtomb@plt+0xc870>  // b.none
  40f674:	mov	w19, w1
  40f678:	and	x20, x19, #0xff
  40f67c:	bl	402bb0 <__ctype_b_loc@plt>
  40f680:	ldr	x8, [x0]
  40f684:	and	w9, w19, #0xff
  40f688:	cmp	w9, #0x5f
  40f68c:	cset	w9, eq  // eq = none
  40f690:	ldrh	w8, [x8, x20, lsl #1]
  40f694:	and	w8, w8, #0x8
  40f698:	orr	w0, w9, w8, lsr #3
  40f69c:	b	40f6a4 <wcrtomb@plt+0xc874>
  40f6a0:	mov	w0, wzr
  40f6a4:	ldp	x20, x19, [sp, #16]
  40f6a8:	ldp	x29, x30, [sp], #32
  40f6ac:	ret
  40f6b0:	sub	sp, sp, #0x40
  40f6b4:	stp	x29, x30, [sp, #32]
  40f6b8:	stp	x20, x19, [sp, #48]
  40f6bc:	add	x29, sp, #0x20
  40f6c0:	mov	x19, x0
  40f6c4:	bl	402bf0 <__ctype_get_mb_cur_max@plt>
  40f6c8:	cmp	x0, #0x1
  40f6cc:	cset	w0, hi  // hi = pmore
  40f6d0:	strb	w0, [x19]
  40f6d4:	bl	40f74c <wcrtomb@plt+0xc91c>
  40f6d8:	and	w8, w0, #0x1
  40f6dc:	strb	w8, [x19, #1]
  40f6e0:	bl	40f7a8 <wcrtomb@plt+0xc978>
  40f6e4:	and	w8, w0, #0x1
  40f6e8:	mov	x20, xzr
  40f6ec:	strb	w8, [x19, #2]
  40f6f0:	add	x19, x19, #0x104
  40f6f4:	add	x0, sp, #0xc
  40f6f8:	sub	x1, x29, #0x4
  40f6fc:	add	x3, sp, #0x10
  40f700:	mov	w2, #0x1                   	// #1
  40f704:	sturb	w20, [x29, #-4]
  40f708:	str	xzr, [sp, #16]
  40f70c:	bl	411af4 <wcrtomb@plt+0xecc4>
  40f710:	add	x8, x19, x20
  40f714:	cmp	x0, #0x2
  40f718:	sub	x8, x8, #0x101
  40f71c:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  40f720:	strb	w9, [x8]
  40f724:	ldr	w8, [sp, #12]
  40f728:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  40f72c:	str	w8, [x19, x20, lsl #2]
  40f730:	add	x20, x20, #0x1
  40f734:	cmp	x20, #0x100
  40f738:	b.ne	40f6f4 <wcrtomb@plt+0xc8c4>  // b.any
  40f73c:	ldp	x20, x19, [sp, #48]
  40f740:	ldp	x29, x30, [sp, #32]
  40f744:	add	sp, sp, #0x40
  40f748:	ret
  40f74c:	stp	x29, x30, [sp, #-32]!
  40f750:	str	x19, [sp, #16]
  40f754:	mov	x29, sp
  40f758:	tbnz	w0, #0, 40f790 <wcrtomb@plt+0xc960>
  40f75c:	mov	w19, #0x1                   	// #1
  40f760:	cmp	w19, #0x100
  40f764:	b.eq	40f798 <wcrtomb@plt+0xc968>  // b.none
  40f768:	sub	w8, w19, #0x1
  40f76c:	add	x0, x29, #0x1c
  40f770:	add	x1, x29, #0x18
  40f774:	strb	wzr, [x29, #29]
  40f778:	strb	w19, [x29, #24]
  40f77c:	strb	w8, [x29, #28]
  40f780:	strb	wzr, [x29, #25]
  40f784:	bl	402d30 <strcoll@plt>
  40f788:	add	w19, w19, #0x1
  40f78c:	tbnz	w0, #31, 40f760 <wcrtomb@plt+0xc930>
  40f790:	mov	w0, wzr
  40f794:	b	40f79c <wcrtomb@plt+0xc96c>
  40f798:	mov	w0, #0x1                   	// #1
  40f79c:	ldr	x19, [sp, #16]
  40f7a0:	ldp	x29, x30, [sp], #32
  40f7a4:	ret
  40f7a8:	sub	sp, sp, #0x20
  40f7ac:	stp	x29, x30, [sp, #16]
  40f7b0:	add	x29, sp, #0x10
  40f7b4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f7b8:	add	x1, x1, #0xe92
  40f7bc:	sub	x0, x29, #0x4
  40f7c0:	mov	x3, sp
  40f7c4:	mov	w2, #0x2                   	// #2
  40f7c8:	str	xzr, [sp]
  40f7cc:	bl	411af4 <wcrtomb@plt+0xecc4>
  40f7d0:	ldur	w8, [x29, #-4]
  40f7d4:	cmp	x0, #0x2
  40f7d8:	ldp	x29, x30, [sp, #16]
  40f7dc:	cset	w9, eq  // eq = none
  40f7e0:	cmp	w8, #0x100
  40f7e4:	cset	w8, eq  // eq = none
  40f7e8:	and	w0, w9, w8
  40f7ec:	add	sp, sp, #0x20
  40f7f0:	ret
  40f7f4:	stp	x29, x30, [sp, #-80]!
  40f7f8:	stp	x26, x25, [sp, #16]
  40f7fc:	stp	x24, x23, [sp, #32]
  40f800:	stp	x22, x21, [sp, #48]
  40f804:	stp	x20, x19, [sp, #64]
  40f808:	mov	x29, sp
  40f80c:	mov	x19, x1
  40f810:	mov	w20, w0
  40f814:	bl	402d60 <towupper@plt>
  40f818:	mov	w21, w0
  40f81c:	bl	402df0 <towlower@plt>
  40f820:	cmp	w21, w20
  40f824:	mov	w22, w0
  40f828:	b.ne	40f83c <wcrtomb@plt+0xca0c>  // b.any
  40f82c:	mov	w23, wzr
  40f830:	cmp	w22, w21
  40f834:	b.ne	40f84c <wcrtomb@plt+0xca1c>  // b.any
  40f838:	b	40f870 <wcrtomb@plt+0xca40>
  40f83c:	mov	w23, #0x1                   	// #1
  40f840:	str	w21, [x19]
  40f844:	cmp	w22, w21
  40f848:	b.eq	40f870 <wcrtomb@plt+0xca40>  // b.none
  40f84c:	cmp	w22, w20
  40f850:	b.eq	40f870 <wcrtomb@plt+0xca40>  // b.none
  40f854:	mov	w0, w22
  40f858:	bl	402d60 <towupper@plt>
  40f85c:	cmp	w0, w21
  40f860:	b.ne	40f870 <wcrtomb@plt+0xca40>  // b.any
  40f864:	add	w8, w23, #0x1
  40f868:	str	w22, [x19, w23, uxtw #2]
  40f86c:	mov	w23, w8
  40f870:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f874:	mov	x25, xzr
  40f878:	add	x26, x26, #0xe6c
  40f87c:	b	40f88c <wcrtomb@plt+0xca5c>
  40f880:	add	x25, x25, #0x2
  40f884:	cmp	x25, #0x26
  40f888:	b.eq	40f8c8 <wcrtomb@plt+0xca98>  // b.none
  40f88c:	ldrsh	w24, [x26, x25]
  40f890:	cmp	w24, w20
  40f894:	b.eq	40f880 <wcrtomb@plt+0xca50>  // b.none
  40f898:	cmp	w22, w24
  40f89c:	b.eq	40f880 <wcrtomb@plt+0xca50>  // b.none
  40f8a0:	cmp	w21, w24
  40f8a4:	b.eq	40f880 <wcrtomb@plt+0xca50>  // b.none
  40f8a8:	mov	w0, w24
  40f8ac:	bl	402d60 <towupper@plt>
  40f8b0:	cmp	w0, w21
  40f8b4:	b.ne	40f880 <wcrtomb@plt+0xca50>  // b.any
  40f8b8:	add	w8, w23, #0x1
  40f8bc:	str	w24, [x19, w23, sxtw #2]
  40f8c0:	mov	w23, w8
  40f8c4:	b	40f880 <wcrtomb@plt+0xca50>
  40f8c8:	mov	w0, w23
  40f8cc:	ldp	x20, x19, [sp, #64]
  40f8d0:	ldp	x22, x21, [sp, #48]
  40f8d4:	ldp	x24, x23, [sp, #32]
  40f8d8:	ldp	x26, x25, [sp, #16]
  40f8dc:	ldp	x29, x30, [sp], #80
  40f8e0:	ret
  40f8e4:	stp	x29, x30, [sp, #-16]!
  40f8e8:	mov	w0, #0xe                   	// #14
  40f8ec:	mov	x29, sp
  40f8f0:	bl	4028a0 <nl_langinfo@plt>
  40f8f4:	adrp	x8, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f8f8:	add	x8, x8, #0x13b
  40f8fc:	cmp	x0, #0x0
  40f900:	csel	x8, x8, x0, eq  // eq = none
  40f904:	ldrb	w9, [x8]
  40f908:	adrp	x10, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f90c:	add	x10, x10, #0xe95
  40f910:	cmp	w9, #0x0
  40f914:	csel	x0, x10, x8, eq  // eq = none
  40f918:	ldp	x29, x30, [sp], #16
  40f91c:	ret
  40f920:	stp	x29, x30, [sp, #-32]!
  40f924:	stp	x20, x19, [sp, #16]
  40f928:	mov	x29, sp
  40f92c:	cbz	x0, 40f9ac <wcrtomb@plt+0xcb7c>
  40f930:	mov	w1, #0x2f                  	// #47
  40f934:	mov	x19, x0
  40f938:	bl	402ad0 <strrchr@plt>
  40f93c:	cmp	x0, #0x0
  40f940:	csinc	x20, x19, x0, eq  // eq = none
  40f944:	sub	x8, x20, x19
  40f948:	cmp	x8, #0x7
  40f94c:	b.lt	40f990 <wcrtomb@plt+0xcb60>  // b.tstop
  40f950:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f954:	sub	x0, x20, #0x7
  40f958:	add	x1, x1, #0xed3
  40f95c:	mov	w2, #0x7                   	// #7
  40f960:	bl	402950 <strncmp@plt>
  40f964:	cbnz	w0, 40f990 <wcrtomb@plt+0xcb60>
  40f968:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f96c:	add	x1, x1, #0xedb
  40f970:	mov	w2, #0x3                   	// #3
  40f974:	mov	x0, x20
  40f978:	bl	402950 <strncmp@plt>
  40f97c:	mov	x19, x20
  40f980:	cbnz	w0, 40f990 <wcrtomb@plt+0xcb60>
  40f984:	add	x19, x20, #0x3
  40f988:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40f98c:	str	x19, [x8, #1320]
  40f990:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40f994:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  40f998:	str	x19, [x8, #1968]
  40f99c:	str	x19, [x9, #1272]
  40f9a0:	ldp	x20, x19, [sp, #16]
  40f9a4:	ldp	x29, x30, [sp], #32
  40f9a8:	ret
  40f9ac:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40f9b0:	ldr	x3, [x8, #1280]
  40f9b4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  40f9b8:	add	x0, x0, #0xe9b
  40f9bc:	mov	w1, #0x37                  	// #55
  40f9c0:	mov	w2, #0x1                   	// #1
  40f9c4:	bl	402c50 <fwrite@plt>
  40f9c8:	bl	402b00 <abort@plt>
  40f9cc:	sub	sp, sp, #0x40
  40f9d0:	stp	x20, x19, [sp, #48]
  40f9d4:	mov	w19, w3
  40f9d8:	mov	x20, x2
  40f9dc:	mov	x3, sp
  40f9e0:	mov	w2, w4
  40f9e4:	stp	x29, x30, [sp, #32]
  40f9e8:	add	x29, sp, #0x20
  40f9ec:	bl	41e964 <_obstack_memory_used@@Base+0xcae0>
  40f9f0:	cbz	w0, 40f9fc <wcrtomb@plt+0xcbcc>
  40f9f4:	mov	w19, #0xfffffffe            	// #-2
  40f9f8:	b	40fa18 <wcrtomb@plt+0xcbe8>
  40f9fc:	mov	x0, sp
  40fa00:	mov	x1, x20
  40fa04:	mov	w2, w19
  40fa08:	bl	41ea3c <_obstack_memory_used@@Base+0xcbb8>
  40fa0c:	mov	w19, w0
  40fa10:	mov	x0, sp
  40fa14:	bl	41e930 <_obstack_memory_used@@Base+0xcaac>
  40fa18:	mov	w0, w19
  40fa1c:	ldp	x20, x19, [sp, #48]
  40fa20:	ldp	x29, x30, [sp, #32]
  40fa24:	add	sp, sp, #0x40
  40fa28:	ret
  40fa2c:	stp	x29, x30, [sp, #-48]!
  40fa30:	str	x21, [sp, #16]
  40fa34:	stp	x20, x19, [sp, #32]
  40fa38:	mov	x29, sp
  40fa3c:	mov	x19, x0
  40fa40:	bl	402da0 <__errno_location@plt>
  40fa44:	ldr	w21, [x0]
  40fa48:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40fa4c:	add	x8, x8, #0x7b8
  40fa50:	cmp	x19, #0x0
  40fa54:	mov	x20, x0
  40fa58:	csel	x0, x8, x19, eq  // eq = none
  40fa5c:	mov	w1, #0x38                  	// #56
  40fa60:	bl	411a40 <wcrtomb@plt+0xec10>
  40fa64:	str	w21, [x20]
  40fa68:	ldp	x20, x19, [sp, #32]
  40fa6c:	ldr	x21, [sp, #16]
  40fa70:	ldp	x29, x30, [sp], #48
  40fa74:	ret
  40fa78:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40fa7c:	add	x8, x8, #0x7b8
  40fa80:	cmp	x0, #0x0
  40fa84:	csel	x8, x8, x0, eq  // eq = none
  40fa88:	ldr	w0, [x8]
  40fa8c:	ret
  40fa90:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40fa94:	add	x8, x8, #0x7b8
  40fa98:	cmp	x0, #0x0
  40fa9c:	csel	x8, x8, x0, eq  // eq = none
  40faa0:	str	w1, [x8]
  40faa4:	ret
  40faa8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40faac:	add	x8, x8, #0x7b8
  40fab0:	cmp	x0, #0x0
  40fab4:	ubfx	w9, w1, #5, #3
  40fab8:	csel	x8, x8, x0, eq  // eq = none
  40fabc:	add	x8, x8, w9, uxtw #2
  40fac0:	ldr	w9, [x8, #8]
  40fac4:	lsr	w10, w9, w1
  40fac8:	and	w0, w10, #0x1
  40facc:	and	w10, w2, #0x1
  40fad0:	eor	w10, w0, w10
  40fad4:	lsl	w10, w10, w1
  40fad8:	eor	w9, w10, w9
  40fadc:	str	w9, [x8, #8]
  40fae0:	ret
  40fae4:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40fae8:	add	x8, x8, #0x7b8
  40faec:	cmp	x0, #0x0
  40faf0:	csel	x8, x8, x0, eq  // eq = none
  40faf4:	ldr	w0, [x8, #4]
  40faf8:	str	w1, [x8, #4]
  40fafc:	ret
  40fb00:	stp	x29, x30, [sp, #-16]!
  40fb04:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40fb08:	add	x8, x8, #0x7b8
  40fb0c:	cmp	x0, #0x0
  40fb10:	csel	x8, x8, x0, eq  // eq = none
  40fb14:	mov	w9, #0xa                   	// #10
  40fb18:	mov	x29, sp
  40fb1c:	str	w9, [x8]
  40fb20:	cbz	x1, 40fb34 <wcrtomb@plt+0xcd04>
  40fb24:	cbz	x2, 40fb34 <wcrtomb@plt+0xcd04>
  40fb28:	stp	x1, x2, [x8, #40]
  40fb2c:	ldp	x29, x30, [sp], #16
  40fb30:	ret
  40fb34:	bl	402b00 <abort@plt>
  40fb38:	sub	sp, sp, #0x60
  40fb3c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  40fb40:	add	x8, x8, #0x7b8
  40fb44:	cmp	x4, #0x0
  40fb48:	stp	x29, x30, [sp, #16]
  40fb4c:	str	x25, [sp, #32]
  40fb50:	stp	x24, x23, [sp, #48]
  40fb54:	stp	x22, x21, [sp, #64]
  40fb58:	stp	x20, x19, [sp, #80]
  40fb5c:	add	x29, sp, #0x10
  40fb60:	mov	x19, x3
  40fb64:	mov	x20, x2
  40fb68:	mov	x21, x1
  40fb6c:	mov	x22, x0
  40fb70:	csel	x24, x8, x4, eq  // eq = none
  40fb74:	bl	402da0 <__errno_location@plt>
  40fb78:	ldp	w4, w5, [x24]
  40fb7c:	ldp	x7, x8, [x24, #40]
  40fb80:	ldr	w25, [x0]
  40fb84:	mov	x23, x0
  40fb88:	add	x6, x24, #0x8
  40fb8c:	mov	x0, x22
  40fb90:	mov	x1, x21
  40fb94:	mov	x2, x20
  40fb98:	mov	x3, x19
  40fb9c:	str	x8, [sp]
  40fba0:	bl	40fbc4 <wcrtomb@plt+0xcd94>
  40fba4:	str	w25, [x23]
  40fba8:	ldp	x20, x19, [sp, #80]
  40fbac:	ldp	x22, x21, [sp, #64]
  40fbb0:	ldp	x24, x23, [sp, #48]
  40fbb4:	ldr	x25, [sp, #32]
  40fbb8:	ldp	x29, x30, [sp, #16]
  40fbbc:	add	sp, sp, #0x60
  40fbc0:	ret
  40fbc4:	sub	sp, sp, #0x120
  40fbc8:	stp	x29, x30, [sp, #192]
  40fbcc:	add	x29, sp, #0xc0
  40fbd0:	ldr	x8, [x29, #96]
  40fbd4:	stp	x28, x27, [sp, #208]
  40fbd8:	stp	x26, x25, [sp, #224]
  40fbdc:	stp	x24, x23, [sp, #240]
  40fbe0:	stp	x22, x21, [sp, #256]
  40fbe4:	stp	x20, x19, [sp, #272]
  40fbe8:	str	x7, [sp, #80]
  40fbec:	stur	x6, [x29, #-48]
  40fbf0:	mov	w19, w5
  40fbf4:	mov	w20, w4
  40fbf8:	mov	x23, x3
  40fbfc:	mov	x21, x2
  40fc00:	mov	x27, x1
  40fc04:	str	x8, [sp, #96]
  40fc08:	mov	x24, x0
  40fc0c:	bl	402bf0 <__ctype_get_mb_cur_max@plt>
  40fc10:	mov	w1, w20
  40fc14:	mov	x22, xzr
  40fc18:	mov	w8, wzr
  40fc1c:	mov	w28, wzr
  40fc20:	str	w19, [sp, #64]
  40fc24:	ubfx	w19, w19, #1, #1
  40fc28:	add	x9, x21, #0x1
  40fc2c:	mov	w15, #0x1                   	// #1
  40fc30:	str	x0, [sp, #56]
  40fc34:	stur	xzr, [x29, #-80]
  40fc38:	stur	xzr, [x29, #-56]
  40fc3c:	str	wzr, [sp, #88]
  40fc40:	stur	x9, [x29, #-72]
  40fc44:	cmp	w1, #0xa
  40fc48:	b.hi	41081c <wcrtomb@plt+0xd9ec>  // b.pmore
  40fc4c:	adrp	x12, 420000 <_obstack_memory_used@@Base+0xe17c>
  40fc50:	mov	w9, w1
  40fc54:	add	x12, x12, #0xee0
  40fc58:	adr	x10, 40fc7c <wcrtomb@plt+0xce4c>
  40fc5c:	ldrb	w11, [x12, x9]
  40fc60:	add	x10, x10, x11, lsl #2
  40fc64:	mov	x26, x27
  40fc68:	mov	x20, xzr
  40fc6c:	mov	w16, wzr
  40fc70:	mov	w9, #0x1                   	// #1
  40fc74:	mov	w27, w28
  40fc78:	br	x10
  40fc7c:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xf17c>
  40fc80:	add	x0, x0, #0x3c
  40fc84:	mov	w20, w1
  40fc88:	mov	w22, w15
  40fc8c:	bl	410f34 <wcrtomb@plt+0xe104>
  40fc90:	str	x0, [sp, #80]
  40fc94:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40fc98:	add	x0, x0, #0xaf9
  40fc9c:	mov	w1, w20
  40fca0:	bl	410f34 <wcrtomb@plt+0xe104>
  40fca4:	mov	w15, w22
  40fca8:	mov	w1, w20
  40fcac:	str	x0, [sp, #96]
  40fcb0:	stur	w1, [x29, #-28]
  40fcb4:	tbnz	w19, #0, 40fcf4 <wcrtomb@plt+0xcec4>
  40fcb8:	ldr	x8, [sp, #80]
  40fcbc:	ldrb	w9, [x8]
  40fcc0:	cbz	w9, 40fcf4 <wcrtomb@plt+0xcec4>
  40fcc4:	mov	w27, w15
  40fcc8:	mov	x10, xzr
  40fccc:	add	x8, x8, #0x1
  40fcd0:	b	40fce4 <wcrtomb@plt+0xceb4>
  40fcd4:	ldrb	w9, [x8, x10]
  40fcd8:	add	x20, x10, #0x1
  40fcdc:	mov	x10, x20
  40fce0:	cbz	w9, 40fcfc <wcrtomb@plt+0xcecc>
  40fce4:	cmp	x10, x26
  40fce8:	b.cs	40fcd4 <wcrtomb@plt+0xcea4>  // b.hs, b.nlast
  40fcec:	strb	w9, [x24, x10]
  40fcf0:	b	40fcd4 <wcrtomb@plt+0xcea4>
  40fcf4:	mov	w27, w15
  40fcf8:	mov	x20, xzr
  40fcfc:	ldr	x25, [sp, #96]
  40fd00:	mov	x0, x25
  40fd04:	bl	402750 <strlen@plt>
  40fd08:	ldur	w1, [x29, #-28]
  40fd0c:	mov	x22, x0
  40fd10:	stur	x25, [x29, #-56]
  40fd14:	mov	w9, #0x1                   	// #1
  40fd18:	mov	w16, w19
  40fd1c:	mov	w15, w27
  40fd20:	mov	w27, w28
  40fd24:	b	40fdd0 <wcrtomb@plt+0xcfa0>
  40fd28:	mov	w19, #0x1                   	// #1
  40fd2c:	mov	w1, #0x5                   	// #5
  40fd30:	tbz	w19, #0, 40fd5c <wcrtomb@plt+0xcf2c>
  40fd34:	adrp	x8, 420000 <_obstack_memory_used@@Base+0xe17c>
  40fd38:	mov	x20, xzr
  40fd3c:	mov	w22, #0x1                   	// #1
  40fd40:	add	x8, x8, #0xccc
  40fd44:	stur	x8, [x29, #-56]
  40fd48:	b	40fd7c <wcrtomb@plt+0xcf4c>
  40fd4c:	mov	x20, xzr
  40fd50:	mov	w16, wzr
  40fd54:	mov	w9, w8
  40fd58:	b	40fdd0 <wcrtomb@plt+0xcfa0>
  40fd5c:	cbz	x26, 40fd68 <wcrtomb@plt+0xcf38>
  40fd60:	mov	w8, #0x22                  	// #34
  40fd64:	strb	w8, [x24]
  40fd68:	adrp	x8, 420000 <_obstack_memory_used@@Base+0xe17c>
  40fd6c:	add	x8, x8, #0xccc
  40fd70:	mov	w20, #0x1                   	// #1
  40fd74:	stur	x8, [x29, #-56]
  40fd78:	mov	w22, #0x1                   	// #1
  40fd7c:	mov	w9, #0x1                   	// #1
  40fd80:	b	40fdcc <wcrtomb@plt+0xcf9c>
  40fd84:	mov	w8, #0x1                   	// #1
  40fd88:	mov	w19, #0x1                   	// #1
  40fd8c:	eor	w9, w19, #0x1
  40fd90:	orr	w8, w8, w9
  40fd94:	tbz	w19, #0, 40fda4 <wcrtomb@plt+0xcf74>
  40fd98:	mov	x20, xzr
  40fd9c:	mov	w1, #0x2                   	// #2
  40fda0:	b	40fdb8 <wcrtomb@plt+0xcf88>
  40fda4:	cbz	x26, 40fdb0 <wcrtomb@plt+0xcf80>
  40fda8:	mov	w9, #0x27                  	// #39
  40fdac:	strb	w9, [x24]
  40fdb0:	mov	w1, #0x2                   	// #2
  40fdb4:	mov	w20, #0x1                   	// #1
  40fdb8:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xd17c>
  40fdbc:	add	x9, x9, #0xaf9
  40fdc0:	stur	x9, [x29, #-56]
  40fdc4:	mov	w22, #0x1                   	// #1
  40fdc8:	mov	w9, w8
  40fdcc:	mov	w16, w19
  40fdd0:	ldur	x8, [x29, #-48]
  40fdd4:	mov	w14, w9
  40fdd8:	eor	w17, w16, #0x1
  40fddc:	stur	w17, [x29, #-60]
  40fde0:	cmp	x8, #0x0
  40fde4:	cset	w8, eq  // eq = none
  40fde8:	cmp	x22, #0x0
  40fdec:	cset	w9, ne  // ne = any
  40fdf0:	cmp	w1, #0x2
  40fdf4:	cset	w10, ne  // ne = any
  40fdf8:	and	w13, w10, w14
  40fdfc:	and	w11, w9, w16
  40fe00:	orr	w10, w10, w17
  40fe04:	and	w17, w9, w13
  40fe08:	orr	w9, w13, w16
  40fe0c:	eor	w9, w9, #0x1
  40fe10:	cset	w12, eq  // eq = none
  40fe14:	orr	w8, w8, w9
  40fe18:	mov	x25, xzr
  40fe1c:	and	w11, w14, w11
  40fe20:	stur	w10, [x29, #-84]
  40fe24:	and	w10, w12, w16
  40fe28:	stur	w8, [x29, #-24]
  40fe2c:	eor	w8, w14, #0x1
  40fe30:	str	w11, [sp, #72]
  40fe34:	str	w10, [sp, #92]
  40fe38:	stur	w14, [x29, #-64]
  40fe3c:	str	w8, [sp, #76]
  40fe40:	stp	w16, w1, [x29, #-32]
  40fe44:	stur	w17, [x29, #-36]
  40fe48:	b	40fe50 <wcrtomb@plt+0xd020>
  40fe4c:	add	x25, x25, #0x1
  40fe50:	cmn	x23, #0x1
  40fe54:	b.eq	40fe68 <wcrtomb@plt+0xd038>  // b.none
  40fe58:	cmp	x25, x23
  40fe5c:	cset	w8, eq  // eq = none
  40fe60:	tbz	w8, #0, 40fe78 <wcrtomb@plt+0xd048>
  40fe64:	b	4106cc <wcrtomb@plt+0xd89c>
  40fe68:	ldrb	w8, [x21, x25]
  40fe6c:	cmp	w8, #0x0
  40fe70:	cset	w8, eq  // eq = none
  40fe74:	tbnz	w8, #0, 4106cc <wcrtomb@plt+0xd89c>
  40fe78:	cbz	w17, 40feb4 <wcrtomb@plt+0xd084>
  40fe7c:	cmp	x22, #0x2
  40fe80:	add	x19, x25, x22
  40fe84:	b.cc	40feac <wcrtomb@plt+0xd07c>  // b.lo, b.ul, b.last
  40fe88:	cmn	x23, #0x1
  40fe8c:	b.ne	40feac <wcrtomb@plt+0xd07c>  // b.any
  40fe90:	mov	x0, x21
  40fe94:	mov	w23, w15
  40fe98:	bl	402750 <strlen@plt>
  40fe9c:	ldp	w17, w16, [x29, #-36]
  40fea0:	ldur	w1, [x29, #-28]
  40fea4:	mov	w15, w23
  40fea8:	mov	x23, x0
  40feac:	cmp	x19, x23
  40feb0:	b.ls	40fff0 <wcrtomb@plt+0xd1c0>  // b.plast
  40feb4:	mov	w28, wzr
  40feb8:	ldrb	w19, [x21, x25]
  40febc:	cmp	w19, #0x7e
  40fec0:	b.hi	410124 <wcrtomb@plt+0xd2f4>  // b.pmore
  40fec4:	adrp	x14, 420000 <_obstack_memory_used@@Base+0xe17c>
  40fec8:	add	x14, x14, #0xeeb
  40fecc:	adr	x13, 40fef0 <wcrtomb@plt+0xd0c0>
  40fed0:	ldrb	w10, [x14, x19]
  40fed4:	add	x13, x13, x10, lsl #2
  40fed8:	mov	w11, wzr
  40fedc:	mov	w9, wzr
  40fee0:	mov	w8, #0x1                   	// #1
  40fee4:	mov	w12, #0x6e                  	// #110
  40fee8:	mov	w10, #0x61                  	// #97
  40feec:	br	x13
  40fef0:	ldur	w10, [x29, #-24]
  40fef4:	tbnz	w10, #0, 40ff14 <wcrtomb@plt+0xd0e4>
  40fef8:	ldur	x11, [x29, #-48]
  40fefc:	ubfx	w10, w19, #5, #3
  40ff00:	ldr	w10, [x11, w10, uxtw #2]
  40ff04:	lsr	w10, w10, w19
  40ff08:	tbz	w10, #0, 40ff14 <wcrtomb@plt+0xd0e4>
  40ff0c:	mov	w10, w19
  40ff10:	b	40ff1c <wcrtomb@plt+0xd0ec>
  40ff14:	mov	w10, w19
  40ff18:	tbz	w28, #0, 40ff94 <wcrtomb@plt+0xd164>
  40ff1c:	tbz	w16, #0, 40ff28 <wcrtomb@plt+0xd0f8>
  40ff20:	mov	w10, #0x10                  	// #16
  40ff24:	b	40ffe0 <wcrtomb@plt+0xd1b0>
  40ff28:	cmp	w1, #0x2
  40ff2c:	cset	w9, ne  // ne = any
  40ff30:	orr	w9, w9, w27
  40ff34:	tbnz	w9, #0, 40ff78 <wcrtomb@plt+0xd148>
  40ff38:	cmp	x20, x26
  40ff3c:	b.cs	40ff48 <wcrtomb@plt+0xd118>  // b.hs, b.nlast
  40ff40:	mov	w9, #0x27                  	// #39
  40ff44:	strb	w9, [x24, x20]
  40ff48:	add	x9, x20, #0x1
  40ff4c:	cmp	x9, x26
  40ff50:	b.cs	40ff5c <wcrtomb@plt+0xd12c>  // b.hs, b.nlast
  40ff54:	mov	w11, #0x24                  	// #36
  40ff58:	strb	w11, [x24, x9]
  40ff5c:	add	x9, x20, #0x2
  40ff60:	cmp	x9, x26
  40ff64:	b.cs	40ff70 <wcrtomb@plt+0xd140>  // b.hs, b.nlast
  40ff68:	mov	w11, #0x27                  	// #39
  40ff6c:	strb	w11, [x24, x9]
  40ff70:	add	x20, x20, #0x3
  40ff74:	mov	w27, #0x1                   	// #1
  40ff78:	cmp	x20, x26
  40ff7c:	b.cs	40ff88 <wcrtomb@plt+0xd158>  // b.hs, b.nlast
  40ff80:	mov	w9, #0x5c                  	// #92
  40ff84:	strb	w9, [x24, x20]
  40ff88:	add	x20, x20, #0x1
  40ff8c:	mov	w9, #0x1                   	// #1
  40ff90:	mov	w19, w10
  40ff94:	tbnz	w9, #0, 40ffc8 <wcrtomb@plt+0xd198>
  40ff98:	tbz	w27, #0, 40ffc8 <wcrtomb@plt+0xd198>
  40ff9c:	cmp	x20, x26
  40ffa0:	b.cs	40ffac <wcrtomb@plt+0xd17c>  // b.hs, b.nlast
  40ffa4:	mov	w9, #0x27                  	// #39
  40ffa8:	strb	w9, [x24, x20]
  40ffac:	add	x9, x20, #0x1
  40ffb0:	cmp	x9, x26
  40ffb4:	b.cs	40ffc0 <wcrtomb@plt+0xd190>  // b.hs, b.nlast
  40ffb8:	mov	w10, #0x27                  	// #39
  40ffbc:	strb	w10, [x24, x9]
  40ffc0:	mov	w27, wzr
  40ffc4:	add	x20, x20, #0x2
  40ffc8:	cmp	x20, x26
  40ffcc:	b.cs	40ffd4 <wcrtomb@plt+0xd1a4>  // b.hs, b.nlast
  40ffd0:	strb	w19, [x24, x20]
  40ffd4:	mov	w10, wzr
  40ffd8:	add	x20, x20, #0x1
  40ffdc:	and	w15, w15, w8
  40ffe0:	cbz	w10, 40fe4c <wcrtomb@plt+0xd01c>
  40ffe4:	cmp	w10, #0xf
  40ffe8:	b.eq	40fe4c <wcrtomb@plt+0xd01c>  // b.none
  40ffec:	b	410750 <wcrtomb@plt+0xd920>
  40fff0:	ldur	x1, [x29, #-56]
  40fff4:	add	x0, x21, x25
  40fff8:	mov	x2, x22
  40fffc:	mov	w19, w15
  410000:	bl	402a20 <bcmp@plt>
  410004:	ldur	w9, [x29, #-60]
  410008:	cmp	w0, #0x0
  41000c:	cset	w8, ne  // ne = any
  410010:	cset	w28, eq  // eq = none
  410014:	orr	w8, w8, w9
  410018:	tbz	w8, #0, 41002c <wcrtomb@plt+0xd1fc>
  41001c:	ldp	w16, w1, [x29, #-32]
  410020:	ldur	w17, [x29, #-36]
  410024:	mov	w15, w19
  410028:	b	40feb8 <wcrtomb@plt+0xd088>
  41002c:	ldp	w16, w1, [x29, #-32]
  410030:	ldur	w17, [x29, #-36]
  410034:	mov	w10, #0x10                  	// #16
  410038:	mov	w15, w19
  41003c:	b	40ffe0 <wcrtomb@plt+0xd1b0>
  410040:	cmp	x23, #0x1
  410044:	b.eq	410068 <wcrtomb@plt+0xd238>  // b.none
  410048:	cmn	x23, #0x1
  41004c:	b.ne	41006c <wcrtomb@plt+0xd23c>  // b.any
  410050:	ldrb	w8, [x21, #1]
  410054:	cbz	w8, 410068 <wcrtomb@plt+0xd238>
  410058:	mov	w9, wzr
  41005c:	mov	w8, wzr
  410060:	mov	x23, #0xffffffffffffffff    	// #-1
  410064:	b	40fef0 <wcrtomb@plt+0xd0c0>
  410068:	cbz	x25, 410078 <wcrtomb@plt+0xd248>
  41006c:	mov	w9, wzr
  410070:	mov	w8, wzr
  410074:	b	40fef0 <wcrtomb@plt+0xd0c0>
  410078:	mov	w11, #0x1                   	// #1
  41007c:	cmp	w1, #0x2
  410080:	b.ne	410088 <wcrtomb@plt+0xd258>  // b.any
  410084:	tbnz	w16, #0, 40ff20 <wcrtomb@plt+0xd0f0>
  410088:	mov	w9, wzr
  41008c:	mov	w8, w11
  410090:	b	40fef0 <wcrtomb@plt+0xd0c0>
  410094:	cmp	w1, #0x2
  410098:	b.ne	410154 <wcrtomb@plt+0xd324>  // b.any
  41009c:	tbnz	w16, #0, 40ff20 <wcrtomb@plt+0xd0f0>
  4100a0:	b	410160 <wcrtomb@plt+0xd330>
  4100a4:	mov	w10, #0x66                  	// #102
  4100a8:	b	410178 <wcrtomb@plt+0xd348>
  4100ac:	mov	w12, #0x74                  	// #116
  4100b0:	b	41016c <wcrtomb@plt+0xd33c>
  4100b4:	mov	w10, #0x62                  	// #98
  4100b8:	b	410178 <wcrtomb@plt+0xd348>
  4100bc:	mov	w12, #0x72                  	// #114
  4100c0:	b	41016c <wcrtomb@plt+0xd33c>
  4100c4:	ldur	w8, [x29, #-64]
  4100c8:	tbz	w8, #0, 41018c <wcrtomb@plt+0xd35c>
  4100cc:	tbnz	w16, #0, 40ff20 <wcrtomb@plt+0xd0f0>
  4100d0:	cmp	w1, #0x2
  4100d4:	cset	w8, ne  // ne = any
  4100d8:	orr	w8, w8, w27
  4100dc:	tbz	w8, #0, 4105ec <wcrtomb@plt+0xd7bc>
  4100e0:	mov	x9, x20
  4100e4:	b	41062c <wcrtomb@plt+0xd7fc>
  4100e8:	cmp	w1, #0x5
  4100ec:	b.eq	410308 <wcrtomb@plt+0xd4d8>  // b.none
  4100f0:	cmp	w1, #0x2
  4100f4:	b.ne	41006c <wcrtomb@plt+0xd23c>  // b.any
  4100f8:	tbz	w16, #0, 41006c <wcrtomb@plt+0xd23c>
  4100fc:	b	40ff20 <wcrtomb@plt+0xd0f0>
  410100:	mov	w10, #0x76                  	// #118
  410104:	b	410178 <wcrtomb@plt+0xd348>
  410108:	cmp	w1, #0x2
  41010c:	b.ne	41019c <wcrtomb@plt+0xd36c>  // b.any
  410110:	tbz	w16, #0, 4103ec <wcrtomb@plt+0xd5bc>
  410114:	mov	w8, #0x1                   	// #1
  410118:	mov	w10, #0x10                  	// #16
  41011c:	str	w8, [sp, #88]
  410120:	b	40ffe0 <wcrtomb@plt+0xd1b0>
  410124:	ldr	x8, [sp, #56]
  410128:	str	w15, [sp, #52]
  41012c:	str	x24, [sp, #40]
  410130:	cmp	x8, #0x1
  410134:	b.ne	4101a4 <wcrtomb@plt+0xd374>  // b.any
  410138:	bl	402bb0 <__ctype_b_loc@plt>
  41013c:	ldr	x8, [x0]
  410140:	ldur	w1, [x29, #-28]
  410144:	mov	w24, #0x1                   	// #1
  410148:	ldrh	w8, [x8, x19, lsl #1]
  41014c:	ubfx	w10, w8, #14, #1
  410150:	b	41046c <wcrtomb@plt+0xd63c>
  410154:	ldr	w8, [sp, #72]
  410158:	mov	w12, w19
  41015c:	tbz	w8, #0, 41016c <wcrtomb@plt+0xd33c>
  410160:	mov	w9, wzr
  410164:	mov	w8, wzr
  410168:	b	40ff94 <wcrtomb@plt+0xd164>
  41016c:	ldur	w8, [x29, #-84]
  410170:	mov	w10, w12
  410174:	tbz	w8, #0, 40ff20 <wcrtomb@plt+0xd0f0>
  410178:	ldur	w11, [x29, #-64]
  41017c:	mov	w9, wzr
  410180:	mov	w8, wzr
  410184:	tbz	w11, #0, 40fef0 <wcrtomb@plt+0xd0c0>
  410188:	b	40ff1c <wcrtomb@plt+0xd0ec>
  41018c:	ldr	w8, [sp, #64]
  410190:	tbz	w8, #0, 41006c <wcrtomb@plt+0xd23c>
  410194:	mov	w10, #0xf                   	// #15
  410198:	b	40ffe0 <wcrtomb@plt+0xd1b0>
  41019c:	mov	w9, wzr
  4101a0:	b	410458 <wcrtomb@plt+0xd628>
  4101a4:	cmn	x23, #0x1
  4101a8:	str	x22, [sp, #16]
  4101ac:	stur	xzr, [x29, #-16]
  4101b0:	b.ne	4101c0 <wcrtomb@plt+0xd390>  // b.any
  4101b4:	mov	x0, x21
  4101b8:	bl	402750 <strlen@plt>
  4101bc:	mov	x23, x0
  4101c0:	sub	x8, x23, x25
  4101c4:	str	x8, [sp, #8]
  4101c8:	add	x8, x21, x25
  4101cc:	str	x8, [sp, #32]
  4101d0:	ldur	x8, [x29, #-72]
  4101d4:	mov	x24, xzr
  4101d8:	add	x8, x8, x25
  4101dc:	str	x8, [sp, #24]
  4101e0:	mov	w8, #0x1                   	// #1
  4101e4:	str	w8, [sp, #68]
  4101e8:	add	x8, x24, x25
  4101ec:	add	x1, x21, x8
  4101f0:	sub	x2, x23, x8
  4101f4:	sub	x0, x29, #0x14
  4101f8:	sub	x3, x29, #0x10
  4101fc:	mov	w22, w27
  410200:	bl	411af4 <wcrtomb@plt+0xecc4>
  410204:	cbz	x0, 41025c <wcrtomb@plt+0xd42c>
  410208:	mov	x27, x0
  41020c:	cmn	x0, #0x1
  410210:	b.eq	410258 <wcrtomb@plt+0xd428>  // b.none
  410214:	cmn	x27, #0x2
  410218:	b.ne	410264 <wcrtomb@plt+0xd434>  // b.any
  41021c:	add	x8, x24, x25
  410220:	cmp	x8, x23
  410224:	mov	w27, w22
  410228:	b.cs	41024c <wcrtomb@plt+0xd41c>  // b.hs, b.nlast
  41022c:	ldr	x9, [sp, #32]
  410230:	ldrb	w8, [x9, x24]
  410234:	cbz	w8, 41024c <wcrtomb@plt+0xd41c>
  410238:	add	x24, x24, #0x1
  41023c:	add	x8, x25, x24
  410240:	cmp	x8, x23
  410244:	b.cc	410230 <wcrtomb@plt+0xd400>  // b.lo, b.ul, b.last
  410248:	ldr	x24, [sp, #8]
  41024c:	str	wzr, [sp, #68]
  410250:	mov	w10, #0x34                  	// #52
  410254:	b	4102f4 <wcrtomb@plt+0xd4c4>
  410258:	str	wzr, [sp, #68]
  41025c:	mov	w10, #0x34                  	// #52
  410260:	b	4102f0 <wcrtomb@plt+0xd4c0>
  410264:	ldr	w8, [sp, #92]
  410268:	cbz	w8, 4102cc <wcrtomb@plt+0xd49c>
  41026c:	cmp	x27, #0x2
  410270:	b.cc	4102c4 <wcrtomb@plt+0xd494>  // b.lo, b.ul, b.last
  410274:	ldr	x9, [sp, #24]
  410278:	sub	x8, x27, #0x1
  41027c:	add	x9, x9, x24
  410280:	b	410290 <wcrtomb@plt+0xd460>
  410284:	subs	x8, x8, #0x1
  410288:	add	x9, x9, #0x1
  41028c:	b.eq	4102c4 <wcrtomb@plt+0xd494>  // b.none
  410290:	ldrb	w10, [x9]
  410294:	sub	w10, w10, #0x5b
  410298:	cmp	w10, #0x21
  41029c:	b.hi	410284 <wcrtomb@plt+0xd454>  // b.pmore
  4102a0:	mov	w11, #0x1                   	// #1
  4102a4:	lsl	x10, x11, x10
  4102a8:	mov	x11, #0x2b                  	// #43
  4102ac:	movk	x11, #0x2, lsl #32
  4102b0:	tst	x10, x11
  4102b4:	b.eq	410284 <wcrtomb@plt+0xd454>  // b.none
  4102b8:	mov	w10, #0x10                  	// #16
  4102bc:	cbnz	w10, 4102f0 <wcrtomb@plt+0xd4c0>
  4102c0:	b	4102cc <wcrtomb@plt+0xd49c>
  4102c4:	mov	w10, wzr
  4102c8:	cbnz	w10, 4102f0 <wcrtomb@plt+0xd4c0>
  4102cc:	ldur	w0, [x29, #-20]
  4102d0:	bl	402d70 <iswprint@plt>
  4102d4:	ldr	w9, [sp, #68]
  4102d8:	cmp	w0, #0x0
  4102dc:	cset	w8, ne  // ne = any
  4102e0:	mov	w10, wzr
  4102e4:	and	w9, w9, w8
  4102e8:	add	x24, x27, x24
  4102ec:	str	w9, [sp, #68]
  4102f0:	mov	w27, w22
  4102f4:	cbnz	w10, 4103bc <wcrtomb@plt+0xd58c>
  4102f8:	sub	x0, x29, #0x10
  4102fc:	bl	402b30 <mbsinit@plt>
  410300:	cbz	w0, 4101e8 <wcrtomb@plt+0xd3b8>
  410304:	b	4103c4 <wcrtomb@plt+0xd594>
  410308:	ldr	w8, [sp, #64]
  41030c:	tbz	w8, #2, 41006c <wcrtomb@plt+0xd23c>
  410310:	add	x10, x25, #0x2
  410314:	cmp	x10, x23
  410318:	b.cs	41006c <wcrtomb@plt+0xd23c>  // b.hs, b.nlast
  41031c:	add	x8, x25, x21
  410320:	ldrb	w8, [x8, #1]
  410324:	cmp	w8, #0x3f
  410328:	b.ne	41006c <wcrtomb@plt+0xd23c>  // b.any
  41032c:	ldrb	w11, [x21, x10]
  410330:	mov	w9, wzr
  410334:	cmp	w11, #0x3e
  410338:	b.hi	4106c4 <wcrtomb@plt+0xd894>  // b.pmore
  41033c:	mov	w8, #0x1                   	// #1
  410340:	mov	x12, #0xa38200000000        	// #179778741075968
  410344:	lsl	x8, x8, x11
  410348:	movk	x12, #0x7000, lsl #48
  41034c:	tst	x8, x12
  410350:	b.eq	4106c4 <wcrtomb@plt+0xd894>  // b.none
  410354:	tbnz	w16, #0, 40ff20 <wcrtomb@plt+0xd0f0>
  410358:	cmp	x20, x26
  41035c:	b.cs	410368 <wcrtomb@plt+0xd538>  // b.hs, b.nlast
  410360:	mov	w8, #0x3f                  	// #63
  410364:	strb	w8, [x24, x20]
  410368:	add	x8, x20, #0x1
  41036c:	cmp	x8, x26
  410370:	b.cs	41037c <wcrtomb@plt+0xd54c>  // b.hs, b.nlast
  410374:	mov	w9, #0x22                  	// #34
  410378:	strb	w9, [x24, x8]
  41037c:	add	x8, x20, #0x2
  410380:	cmp	x8, x26
  410384:	b.cs	410390 <wcrtomb@plt+0xd560>  // b.hs, b.nlast
  410388:	mov	w9, #0x22                  	// #34
  41038c:	strb	w9, [x24, x8]
  410390:	add	x8, x20, #0x3
  410394:	cmp	x8, x26
  410398:	b.cs	4103a4 <wcrtomb@plt+0xd574>  // b.hs, b.nlast
  41039c:	mov	w9, #0x3f                  	// #63
  4103a0:	strb	w9, [x24, x8]
  4103a4:	mov	w9, wzr
  4103a8:	mov	w8, wzr
  4103ac:	add	x20, x20, #0x4
  4103b0:	mov	x25, x10
  4103b4:	mov	w19, w11
  4103b8:	b	40fef0 <wcrtomb@plt+0xd0c0>
  4103bc:	cmp	w10, #0x34
  4103c0:	b.ne	4103c8 <wcrtomb@plt+0xd598>  // b.any
  4103c4:	mov	w10, wzr
  4103c8:	ldp	w16, w1, [x29, #-32]
  4103cc:	ldr	w15, [sp, #52]
  4103d0:	ldr	x22, [sp, #16]
  4103d4:	ldur	w17, [x29, #-36]
  4103d8:	cbz	w10, 410468 <wcrtomb@plt+0xd638>
  4103dc:	ldr	x24, [sp, #40]
  4103e0:	mov	w11, wzr
  4103e4:	mov	w8, wzr
  4103e8:	b	4106a8 <wcrtomb@plt+0xd878>
  4103ec:	ldur	x10, [x29, #-80]
  4103f0:	cmp	x26, #0x0
  4103f4:	cset	w8, eq  // eq = none
  4103f8:	cmp	x10, #0x0
  4103fc:	cset	w9, ne  // ne = any
  410400:	orr	w8, w9, w8
  410404:	cmp	w8, #0x0
  410408:	csel	x10, x10, x26, ne  // ne = any
  41040c:	csel	x26, x26, xzr, ne  // ne = any
  410410:	cmp	x20, x26
  410414:	stur	x10, [x29, #-80]
  410418:	b.cs	410424 <wcrtomb@plt+0xd5f4>  // b.hs, b.nlast
  41041c:	mov	w8, #0x27                  	// #39
  410420:	strb	w8, [x24, x20]
  410424:	add	x8, x20, #0x1
  410428:	cmp	x8, x26
  41042c:	b.cs	410438 <wcrtomb@plt+0xd608>  // b.hs, b.nlast
  410430:	mov	w9, #0x5c                  	// #92
  410434:	strb	w9, [x24, x8]
  410438:	add	x8, x20, #0x2
  41043c:	cmp	x8, x26
  410440:	b.cs	41044c <wcrtomb@plt+0xd61c>  // b.hs, b.nlast
  410444:	mov	w9, #0x27                  	// #39
  410448:	strb	w9, [x24, x8]
  41044c:	mov	w27, wzr
  410450:	mov	w9, wzr
  410454:	add	x20, x20, #0x3
  410458:	mov	w8, #0x1                   	// #1
  41045c:	str	w8, [sp, #88]
  410460:	mov	w8, #0x1                   	// #1
  410464:	b	40fef0 <wcrtomb@plt+0xd0c0>
  410468:	ldr	w10, [sp, #68]
  41046c:	ldr	w9, [sp, #76]
  410470:	and	w8, w10, #0x1
  410474:	cmp	x24, #0x1
  410478:	orr	w9, w10, w9
  41047c:	b.hi	41049c <wcrtomb@plt+0xd66c>  // b.pmore
  410480:	tbz	w9, #0, 41049c <wcrtomb@plt+0xd66c>
  410484:	ldr	x24, [sp, #40]
  410488:	ldr	w15, [sp, #52]
  41048c:	ldp	w17, w16, [x29, #-36]
  410490:	mov	w11, wzr
  410494:	mov	w10, wzr
  410498:	b	4106a8 <wcrtomb@plt+0xd878>
  41049c:	add	x10, x24, x25
  4104a0:	ldr	x24, [sp, #40]
  4104a4:	ldr	w15, [sp, #52]
  4104a8:	ldp	w17, w16, [x29, #-36]
  4104ac:	mov	w11, wzr
  4104b0:	b	4104c4 <wcrtomb@plt+0xd694>
  4104b4:	ldur	x13, [x29, #-72]
  4104b8:	add	x20, x20, #0x1
  4104bc:	ldrb	w19, [x13, x25]
  4104c0:	mov	x25, x12
  4104c4:	tbz	w9, #0, 4104e8 <wcrtomb@plt+0xd6b8>
  4104c8:	tbz	w28, #0, 410590 <wcrtomb@plt+0xd760>
  4104cc:	cmp	x20, x26
  4104d0:	b.cs	4104dc <wcrtomb@plt+0xd6ac>  // b.hs, b.nlast
  4104d4:	mov	w12, #0x5c                  	// #92
  4104d8:	strb	w12, [x24, x20]
  4104dc:	mov	w28, wzr
  4104e0:	add	x20, x20, #0x1
  4104e4:	b	410590 <wcrtomb@plt+0xd760>
  4104e8:	tbnz	w16, #0, 4106a4 <wcrtomb@plt+0xd874>
  4104ec:	cmp	w1, #0x2
  4104f0:	cset	w11, ne  // ne = any
  4104f4:	orr	w11, w11, w27
  4104f8:	tbnz	w11, #0, 41053c <wcrtomb@plt+0xd70c>
  4104fc:	cmp	x20, x26
  410500:	b.cs	41050c <wcrtomb@plt+0xd6dc>  // b.hs, b.nlast
  410504:	mov	w11, #0x27                  	// #39
  410508:	strb	w11, [x24, x20]
  41050c:	add	x11, x20, #0x1
  410510:	cmp	x11, x26
  410514:	b.cs	410520 <wcrtomb@plt+0xd6f0>  // b.hs, b.nlast
  410518:	mov	w12, #0x24                  	// #36
  41051c:	strb	w12, [x24, x11]
  410520:	add	x11, x20, #0x2
  410524:	cmp	x11, x26
  410528:	b.cs	410534 <wcrtomb@plt+0xd704>  // b.hs, b.nlast
  41052c:	mov	w12, #0x27                  	// #39
  410530:	strb	w12, [x24, x11]
  410534:	add	x20, x20, #0x3
  410538:	mov	w27, #0x1                   	// #1
  41053c:	cmp	x20, x26
  410540:	b.cs	41054c <wcrtomb@plt+0xd71c>  // b.hs, b.nlast
  410544:	mov	w11, #0x5c                  	// #92
  410548:	strb	w11, [x24, x20]
  41054c:	add	x11, x20, #0x1
  410550:	cmp	x11, x26
  410554:	b.cs	410564 <wcrtomb@plt+0xd734>  // b.hs, b.nlast
  410558:	mov	w12, #0x30                  	// #48
  41055c:	bfxil	w12, w19, #6, #2
  410560:	strb	w12, [x24, x11]
  410564:	add	x11, x20, #0x2
  410568:	cmp	x11, x26
  41056c:	b.cs	41057c <wcrtomb@plt+0xd74c>  // b.hs, b.nlast
  410570:	mov	w12, #0x30                  	// #48
  410574:	bfxil	w12, w19, #3, #3
  410578:	strb	w12, [x24, x11]
  41057c:	mov	w12, #0x30                  	// #48
  410580:	bfxil	w12, w19, #0, #3
  410584:	add	x20, x20, #0x3
  410588:	mov	w11, #0x1                   	// #1
  41058c:	mov	w19, w12
  410590:	add	x12, x25, #0x1
  410594:	cmp	x10, x12
  410598:	b.ls	4105e4 <wcrtomb@plt+0xd7b4>  // b.plast
  41059c:	and	w13, w11, #0x1
  4105a0:	orn	w13, w13, w27
  4105a4:	tbnz	w13, #0, 4105d4 <wcrtomb@plt+0xd7a4>
  4105a8:	cmp	x20, x26
  4105ac:	b.cs	4105b8 <wcrtomb@plt+0xd788>  // b.hs, b.nlast
  4105b0:	mov	w13, #0x27                  	// #39
  4105b4:	strb	w13, [x24, x20]
  4105b8:	add	x13, x20, #0x1
  4105bc:	cmp	x13, x26
  4105c0:	b.cs	4105cc <wcrtomb@plt+0xd79c>  // b.hs, b.nlast
  4105c4:	mov	w14, #0x27                  	// #39
  4105c8:	strb	w14, [x24, x13]
  4105cc:	mov	w27, wzr
  4105d0:	add	x20, x20, #0x2
  4105d4:	cmp	x20, x26
  4105d8:	b.cs	4104b4 <wcrtomb@plt+0xd684>  // b.hs, b.nlast
  4105dc:	strb	w19, [x24, x20]
  4105e0:	b	4104b4 <wcrtomb@plt+0xd684>
  4105e4:	mov	w10, #0x2c                  	// #44
  4105e8:	b	4106a8 <wcrtomb@plt+0xd878>
  4105ec:	cmp	x20, x26
  4105f0:	b.cs	4105fc <wcrtomb@plt+0xd7cc>  // b.hs, b.nlast
  4105f4:	mov	w8, #0x27                  	// #39
  4105f8:	strb	w8, [x24, x20]
  4105fc:	add	x8, x20, #0x1
  410600:	cmp	x8, x26
  410604:	b.cs	410610 <wcrtomb@plt+0xd7e0>  // b.hs, b.nlast
  410608:	mov	w9, #0x24                  	// #36
  41060c:	strb	w9, [x24, x8]
  410610:	add	x8, x20, #0x2
  410614:	cmp	x8, x26
  410618:	b.cs	410624 <wcrtomb@plt+0xd7f4>  // b.hs, b.nlast
  41061c:	mov	w9, #0x27                  	// #39
  410620:	strb	w9, [x24, x8]
  410624:	add	x9, x20, #0x3
  410628:	mov	w27, #0x1                   	// #1
  41062c:	cmp	x9, x26
  410630:	b.cs	41063c <wcrtomb@plt+0xd80c>  // b.hs, b.nlast
  410634:	mov	w8, #0x5c                  	// #92
  410638:	strb	w8, [x24, x9]
  41063c:	cmp	w1, #0x2
  410640:	add	x20, x9, #0x1
  410644:	b.eq	410694 <wcrtomb@plt+0xd864>  // b.none
  410648:	add	x8, x25, #0x1
  41064c:	cmp	x8, x23
  410650:	b.cs	410694 <wcrtomb@plt+0xd864>  // b.hs, b.nlast
  410654:	ldrb	w8, [x21, x8]
  410658:	sub	w8, w8, #0x30
  41065c:	cmp	w8, #0x9
  410660:	b.hi	410694 <wcrtomb@plt+0xd864>  // b.pmore
  410664:	cmp	x20, x26
  410668:	b.cs	410674 <wcrtomb@plt+0xd844>  // b.hs, b.nlast
  41066c:	mov	w8, #0x30                  	// #48
  410670:	strb	w8, [x24, x20]
  410674:	add	x8, x9, #0x2
  410678:	cmp	x8, x26
  41067c:	b.cs	410688 <wcrtomb@plt+0xd858>  // b.hs, b.nlast
  410680:	mov	w10, #0x30                  	// #48
  410684:	strb	w10, [x24, x8]
  410688:	mov	w8, wzr
  41068c:	add	x20, x9, #0x3
  410690:	b	410698 <wcrtomb@plt+0xd868>
  410694:	mov	w8, wzr
  410698:	mov	w9, #0x1                   	// #1
  41069c:	mov	w19, #0x30                  	// #48
  4106a0:	b	40fef0 <wcrtomb@plt+0xd0c0>
  4106a4:	mov	w10, #0x10                  	// #16
  4106a8:	cmp	w8, #0x0
  4106ac:	cset	w8, ne  // ne = any
  4106b0:	cmp	w10, #0x2c
  4106b4:	and	w9, w11, #0x1
  4106b8:	b.eq	40ff94 <wcrtomb@plt+0xd164>  // b.none
  4106bc:	cbz	w10, 40fef0 <wcrtomb@plt+0xd0c0>
  4106c0:	b	40ffe0 <wcrtomb@plt+0xd1b0>
  4106c4:	mov	w8, w9
  4106c8:	b	40fef0 <wcrtomb@plt+0xd0c0>
  4106cc:	cmp	x20, #0x0
  4106d0:	cset	w8, eq  // eq = none
  4106d4:	cmp	w1, #0x2
  4106d8:	cset	w9, eq  // eq = none
  4106dc:	and	w8, w9, w8
  4106e0:	and	w8, w16, w8
  4106e4:	tbnz	w8, #0, 410758 <wcrtomb@plt+0xd928>
  4106e8:	ldur	w9, [x29, #-64]
  4106ec:	cmp	w1, #0x2
  4106f0:	cset	w8, ne  // ne = any
  4106f4:	orr	w8, w16, w8
  4106f8:	tbnz	w8, #0, 41072c <wcrtomb@plt+0xd8fc>
  4106fc:	ldr	w8, [sp, #88]
  410700:	eor	w8, w8, #0x1
  410704:	tbnz	w8, #0, 41072c <wcrtomb@plt+0xd8fc>
  410708:	tbnz	w15, #0, 4107f8 <wcrtomb@plt+0xd9c8>
  41070c:	ldur	x8, [x29, #-80]
  410710:	cbz	x8, 41072c <wcrtomb@plt+0xd8fc>
  410714:	mov	w28, w27
  410718:	ldur	x27, [x29, #-80]
  41071c:	mov	w1, #0x2                   	// #2
  410720:	mov	w8, w9
  410724:	mov	w19, w16
  410728:	cbz	x26, 40fc44 <wcrtomb@plt+0xce14>
  41072c:	ldur	x10, [x29, #-56]
  410730:	cmp	x10, #0x0
  410734:	cset	w8, eq  // eq = none
  410738:	orr	w8, w8, w16
  41073c:	tbnz	w8, #0, 4107e8 <wcrtomb@plt+0xd9b8>
  410740:	ldrb	w9, [x10]
  410744:	cbz	w9, 4107e8 <wcrtomb@plt+0xd9b8>
  410748:	add	x8, x10, #0x1
  41074c:	b	4107b4 <wcrtomb@plt+0xd984>
  410750:	cmp	w10, #0x10
  410754:	b.ne	4107c4 <wcrtomb@plt+0xd994>  // b.any
  410758:	ldur	w8, [x29, #-64]
  41075c:	mov	w9, #0x4                   	// #4
  410760:	mov	x0, x24
  410764:	mov	x2, x21
  410768:	tst	w8, #0x1
  41076c:	mov	w8, #0x2                   	// #2
  410770:	csel	w8, w9, w8, ne  // ne = any
  410774:	cmp	w1, #0x2
  410778:	csel	w4, w8, w1, eq  // eq = none
  41077c:	ldr	w8, [sp, #64]
  410780:	mov	x1, x26
  410784:	mov	x3, x23
  410788:	mov	x6, xzr
  41078c:	and	w5, w8, #0xfffffffd
  410790:	ldr	x8, [sp, #96]
  410794:	str	x8, [sp]
  410798:	ldr	x7, [sp, #80]
  41079c:	bl	40fbc4 <wcrtomb@plt+0xcd94>
  4107a0:	mov	x20, x0
  4107a4:	b	4107c4 <wcrtomb@plt+0xd994>
  4107a8:	ldrb	w9, [x8], #1
  4107ac:	add	x20, x20, #0x1
  4107b0:	cbz	w9, 4107e8 <wcrtomb@plt+0xd9b8>
  4107b4:	cmp	x20, x26
  4107b8:	b.cs	4107a8 <wcrtomb@plt+0xd978>  // b.hs, b.nlast
  4107bc:	strb	w9, [x24, x20]
  4107c0:	b	4107a8 <wcrtomb@plt+0xd978>
  4107c4:	mov	x0, x20
  4107c8:	ldp	x20, x19, [sp, #272]
  4107cc:	ldp	x22, x21, [sp, #256]
  4107d0:	ldp	x24, x23, [sp, #240]
  4107d4:	ldp	x26, x25, [sp, #224]
  4107d8:	ldp	x28, x27, [sp, #208]
  4107dc:	ldp	x29, x30, [sp, #192]
  4107e0:	add	sp, sp, #0x120
  4107e4:	ret
  4107e8:	cmp	x20, x26
  4107ec:	b.cs	4107c4 <wcrtomb@plt+0xd994>  // b.hs, b.nlast
  4107f0:	strb	wzr, [x24, x20]
  4107f4:	b	4107c4 <wcrtomb@plt+0xd994>
  4107f8:	ldr	x8, [sp, #96]
  4107fc:	ldur	x1, [x29, #-80]
  410800:	ldr	w5, [sp, #64]
  410804:	ldur	x6, [x29, #-48]
  410808:	mov	w4, #0x5                   	// #5
  41080c:	mov	x0, x24
  410810:	mov	x2, x21
  410814:	mov	x3, x23
  410818:	b	410794 <wcrtomb@plt+0xd964>
  41081c:	bl	402b00 <abort@plt>
  410820:	stp	x29, x30, [sp, #-16]!
  410824:	mov	x3, x2
  410828:	mov	x2, xzr
  41082c:	mov	x29, sp
  410830:	bl	41083c <wcrtomb@plt+0xda0c>
  410834:	ldp	x29, x30, [sp], #16
  410838:	ret
  41083c:	sub	sp, sp, #0x70
  410840:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  410844:	add	x8, x8, #0x7b8
  410848:	cmp	x3, #0x0
  41084c:	stp	x29, x30, [sp, #16]
  410850:	stp	x28, x27, [sp, #32]
  410854:	stp	x26, x25, [sp, #48]
  410858:	stp	x24, x23, [sp, #64]
  41085c:	stp	x22, x21, [sp, #80]
  410860:	stp	x20, x19, [sp, #96]
  410864:	add	x29, sp, #0x10
  410868:	mov	x19, x2
  41086c:	mov	x22, x1
  410870:	mov	x23, x0
  410874:	csel	x21, x8, x3, eq  // eq = none
  410878:	bl	402da0 <__errno_location@plt>
  41087c:	ldp	w4, w8, [x21]
  410880:	cmp	x19, #0x0
  410884:	ldp	x7, x9, [x21, #40]
  410888:	ldr	w28, [x0]
  41088c:	cset	w10, eq  // eq = none
  410890:	orr	w25, w8, w10
  410894:	add	x26, x21, #0x8
  410898:	mov	x24, x0
  41089c:	mov	x0, xzr
  4108a0:	mov	x1, xzr
  4108a4:	mov	x2, x23
  4108a8:	mov	x3, x22
  4108ac:	mov	w5, w25
  4108b0:	mov	x6, x26
  4108b4:	str	x9, [sp]
  4108b8:	bl	40fbc4 <wcrtomb@plt+0xcd94>
  4108bc:	add	x27, x0, #0x1
  4108c0:	mov	x20, x0
  4108c4:	mov	x0, x27
  4108c8:	bl	4119d0 <wcrtomb@plt+0xeba0>
  4108cc:	ldr	w4, [x21]
  4108d0:	ldp	x7, x8, [x21, #40]
  4108d4:	mov	x1, x27
  4108d8:	mov	x2, x23
  4108dc:	mov	x3, x22
  4108e0:	mov	w5, w25
  4108e4:	mov	x6, x26
  4108e8:	mov	x21, x0
  4108ec:	str	x8, [sp]
  4108f0:	bl	40fbc4 <wcrtomb@plt+0xcd94>
  4108f4:	str	w28, [x24]
  4108f8:	cbz	x19, 410900 <wcrtomb@plt+0xdad0>
  4108fc:	str	x20, [x19]
  410900:	mov	x0, x21
  410904:	ldp	x20, x19, [sp, #96]
  410908:	ldp	x22, x21, [sp, #80]
  41090c:	ldp	x24, x23, [sp, #64]
  410910:	ldp	x26, x25, [sp, #48]
  410914:	ldp	x28, x27, [sp, #32]
  410918:	ldp	x29, x30, [sp, #16]
  41091c:	add	sp, sp, #0x70
  410920:	ret
  410924:	stp	x29, x30, [sp, #-64]!
  410928:	stp	x20, x19, [sp, #48]
  41092c:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  410930:	stp	x22, x21, [sp, #32]
  410934:	ldr	w8, [x20, #1176]
  410938:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x2017c>
  41093c:	ldr	x19, [x21, #1168]
  410940:	str	x23, [sp, #16]
  410944:	cmp	w8, #0x2
  410948:	mov	x29, sp
  41094c:	b.lt	410970 <wcrtomb@plt+0xdb40>  // b.tstop
  410950:	add	x22, x19, #0x18
  410954:	mov	w23, #0x1                   	// #1
  410958:	ldr	x0, [x22], #16
  41095c:	bl	402bd0 <free@plt>
  410960:	ldrsw	x8, [x20, #1176]
  410964:	add	x23, x23, #0x1
  410968:	cmp	x23, x8
  41096c:	b.lt	410958 <wcrtomb@plt+0xdb28>  // b.tstop
  410970:	ldr	x0, [x19, #8]
  410974:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x2017c>
  410978:	add	x23, x23, #0x7f0
  41097c:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x2017c>
  410980:	cmp	x0, x23
  410984:	add	x22, x22, #0x4a0
  410988:	b.eq	410998 <wcrtomb@plt+0xdb68>  // b.none
  41098c:	bl	402bd0 <free@plt>
  410990:	mov	w8, #0x100                 	// #256
  410994:	stp	x8, x23, [x22]
  410998:	cmp	x19, x22
  41099c:	b.eq	4109ac <wcrtomb@plt+0xdb7c>  // b.none
  4109a0:	mov	x0, x19
  4109a4:	bl	402bd0 <free@plt>
  4109a8:	str	x22, [x21, #1168]
  4109ac:	mov	w8, #0x1                   	// #1
  4109b0:	str	w8, [x20, #1176]
  4109b4:	ldp	x20, x19, [sp, #48]
  4109b8:	ldp	x22, x21, [sp, #32]
  4109bc:	ldr	x23, [sp, #16]
  4109c0:	ldp	x29, x30, [sp], #64
  4109c4:	ret
  4109c8:	stp	x29, x30, [sp, #-16]!
  4109cc:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  4109d0:	add	x3, x3, #0x7b8
  4109d4:	mov	x2, #0xffffffffffffffff    	// #-1
  4109d8:	mov	x29, sp
  4109dc:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  4109e0:	ldp	x29, x30, [sp], #16
  4109e4:	ret
  4109e8:	sub	sp, sp, #0x80
  4109ec:	stp	x29, x30, [sp, #32]
  4109f0:	add	x29, sp, #0x20
  4109f4:	stp	x28, x27, [sp, #48]
  4109f8:	stp	x26, x25, [sp, #64]
  4109fc:	stp	x24, x23, [sp, #80]
  410a00:	stp	x22, x21, [sp, #96]
  410a04:	stp	x20, x19, [sp, #112]
  410a08:	mov	x22, x3
  410a0c:	stur	x2, [x29, #-8]
  410a10:	mov	x21, x1
  410a14:	mov	w23, w0
  410a18:	bl	402da0 <__errno_location@plt>
  410a1c:	tbnz	w23, #31, 410b6c <wcrtomb@plt+0xdd3c>
  410a20:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x2017c>
  410a24:	ldr	w8, [x25, #1176]
  410a28:	adrp	x28, 432000 <_obstack_memory_used@@Base+0x2017c>
  410a2c:	ldr	w20, [x0]
  410a30:	ldr	x27, [x28, #1168]
  410a34:	mov	x19, x0
  410a38:	cmp	w8, w23
  410a3c:	b.gt	410aa8 <wcrtomb@plt+0xdc78>
  410a40:	mov	w8, #0x7fffffff            	// #2147483647
  410a44:	cmp	w23, w8
  410a48:	stur	w20, [x29, #-12]
  410a4c:	b.eq	410b70 <wcrtomb@plt+0xdd40>  // b.none
  410a50:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x2017c>
  410a54:	add	x20, x20, #0x4a0
  410a58:	add	w26, w23, #0x1
  410a5c:	cmp	x27, x20
  410a60:	csel	x0, xzr, x27, eq  // eq = none
  410a64:	sbfiz	x1, x26, #4, #32
  410a68:	bl	411920 <wcrtomb@plt+0xeaf0>
  410a6c:	mov	x24, x0
  410a70:	cmp	x27, x20
  410a74:	str	x0, [x28, #1168]
  410a78:	b.ne	410a84 <wcrtomb@plt+0xdc54>  // b.any
  410a7c:	ldr	q0, [x20]
  410a80:	str	q0, [x24]
  410a84:	ldrsw	x8, [x25, #1176]
  410a88:	mov	w1, wzr
  410a8c:	add	x0, x24, x8, lsl #4
  410a90:	sub	w8, w26, w8
  410a94:	sbfiz	x2, x8, #4, #32
  410a98:	bl	4029c0 <memset@plt>
  410a9c:	ldur	w20, [x29, #-12]
  410aa0:	mov	x27, x24
  410aa4:	str	w26, [x25, #1176]
  410aa8:	add	x28, x27, w23, sxtw #4
  410aac:	mov	x27, x28
  410ab0:	ldr	x26, [x28]
  410ab4:	ldr	x23, [x27, #8]!
  410ab8:	ldp	w4, w8, [x22]
  410abc:	ldp	x7, x9, [x22, #40]
  410ac0:	ldur	x3, [x29, #-8]
  410ac4:	add	x24, x22, #0x8
  410ac8:	orr	w25, w8, #0x1
  410acc:	mov	x0, x23
  410ad0:	mov	x1, x26
  410ad4:	mov	x2, x21
  410ad8:	mov	w5, w25
  410adc:	mov	x6, x24
  410ae0:	str	x9, [sp]
  410ae4:	bl	40fbc4 <wcrtomb@plt+0xcd94>
  410ae8:	cmp	x26, x0
  410aec:	b.hi	410b44 <wcrtomb@plt+0xdd14>  // b.pmore
  410af0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  410af4:	add	x8, x8, #0x7f0
  410af8:	add	x26, x0, #0x1
  410afc:	cmp	x23, x8
  410b00:	str	x26, [x28]
  410b04:	b.eq	410b10 <wcrtomb@plt+0xdce0>  // b.none
  410b08:	mov	x0, x23
  410b0c:	bl	402bd0 <free@plt>
  410b10:	mov	x0, x26
  410b14:	bl	4119d0 <wcrtomb@plt+0xeba0>
  410b18:	str	x0, [x27]
  410b1c:	ldr	w4, [x22]
  410b20:	ldp	x7, x8, [x22, #40]
  410b24:	ldur	x3, [x29, #-8]
  410b28:	mov	x1, x26
  410b2c:	mov	x2, x21
  410b30:	mov	w5, w25
  410b34:	mov	x6, x24
  410b38:	mov	x23, x0
  410b3c:	str	x8, [sp]
  410b40:	bl	40fbc4 <wcrtomb@plt+0xcd94>
  410b44:	str	w20, [x19]
  410b48:	mov	x0, x23
  410b4c:	ldp	x20, x19, [sp, #112]
  410b50:	ldp	x22, x21, [sp, #96]
  410b54:	ldp	x24, x23, [sp, #80]
  410b58:	ldp	x26, x25, [sp, #64]
  410b5c:	ldp	x28, x27, [sp, #48]
  410b60:	ldp	x29, x30, [sp, #32]
  410b64:	add	sp, sp, #0x80
  410b68:	ret
  410b6c:	bl	402b00 <abort@plt>
  410b70:	bl	411ab0 <wcrtomb@plt+0xec80>
  410b74:	stp	x29, x30, [sp, #-16]!
  410b78:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  410b7c:	add	x3, x3, #0x7b8
  410b80:	mov	x29, sp
  410b84:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  410b88:	ldp	x29, x30, [sp], #16
  410b8c:	ret
  410b90:	stp	x29, x30, [sp, #-16]!
  410b94:	mov	x1, x0
  410b98:	mov	w0, wzr
  410b9c:	mov	x29, sp
  410ba0:	bl	4109c8 <wcrtomb@plt+0xdb98>
  410ba4:	ldp	x29, x30, [sp], #16
  410ba8:	ret
  410bac:	stp	x29, x30, [sp, #-16]!
  410bb0:	mov	x2, x1
  410bb4:	mov	x1, x0
  410bb8:	mov	w0, wzr
  410bbc:	mov	x29, sp
  410bc0:	bl	410b74 <wcrtomb@plt+0xdd44>
  410bc4:	ldp	x29, x30, [sp], #16
  410bc8:	ret
  410bcc:	sub	sp, sp, #0x60
  410bd0:	stp	x20, x19, [sp, #80]
  410bd4:	mov	w20, w0
  410bd8:	add	x8, sp, #0x8
  410bdc:	mov	w0, w1
  410be0:	stp	x29, x30, [sp, #64]
  410be4:	add	x29, sp, #0x40
  410be8:	mov	x19, x2
  410bec:	bl	410c14 <wcrtomb@plt+0xdde4>
  410bf0:	add	x3, sp, #0x8
  410bf4:	mov	x2, #0xffffffffffffffff    	// #-1
  410bf8:	mov	w0, w20
  410bfc:	mov	x1, x19
  410c00:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  410c04:	ldp	x20, x19, [sp, #80]
  410c08:	ldp	x29, x30, [sp, #64]
  410c0c:	add	sp, sp, #0x60
  410c10:	ret
  410c14:	stp	x29, x30, [sp, #-16]!
  410c18:	movi	v0.2d, #0x0
  410c1c:	cmp	w0, #0xa
  410c20:	mov	x29, sp
  410c24:	str	xzr, [x8, #48]
  410c28:	stp	q0, q0, [x8, #16]
  410c2c:	str	q0, [x8]
  410c30:	b.eq	410c40 <wcrtomb@plt+0xde10>  // b.none
  410c34:	str	w0, [x8]
  410c38:	ldp	x29, x30, [sp], #16
  410c3c:	ret
  410c40:	bl	402b00 <abort@plt>
  410c44:	sub	sp, sp, #0x70
  410c48:	str	x21, [sp, #80]
  410c4c:	mov	w21, w0
  410c50:	add	x8, sp, #0x8
  410c54:	mov	w0, w1
  410c58:	stp	x29, x30, [sp, #64]
  410c5c:	stp	x20, x19, [sp, #96]
  410c60:	add	x29, sp, #0x40
  410c64:	mov	x19, x3
  410c68:	mov	x20, x2
  410c6c:	bl	410c14 <wcrtomb@plt+0xdde4>
  410c70:	add	x3, sp, #0x8
  410c74:	mov	w0, w21
  410c78:	mov	x1, x20
  410c7c:	mov	x2, x19
  410c80:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  410c84:	ldp	x20, x19, [sp, #96]
  410c88:	ldr	x21, [sp, #80]
  410c8c:	ldp	x29, x30, [sp, #64]
  410c90:	add	sp, sp, #0x70
  410c94:	ret
  410c98:	stp	x29, x30, [sp, #-16]!
  410c9c:	mov	x2, x1
  410ca0:	mov	w1, w0
  410ca4:	mov	w0, wzr
  410ca8:	mov	x29, sp
  410cac:	bl	410bcc <wcrtomb@plt+0xdd9c>
  410cb0:	ldp	x29, x30, [sp], #16
  410cb4:	ret
  410cb8:	stp	x29, x30, [sp, #-16]!
  410cbc:	mov	x3, x2
  410cc0:	mov	x2, x1
  410cc4:	mov	w1, w0
  410cc8:	mov	w0, wzr
  410ccc:	mov	x29, sp
  410cd0:	bl	410c44 <wcrtomb@plt+0xde14>
  410cd4:	ldp	x29, x30, [sp], #16
  410cd8:	ret
  410cdc:	sub	sp, sp, #0x60
  410ce0:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  410ce4:	add	x9, x9, #0x7b8
  410ce8:	ldp	q0, q1, [x9]
  410cec:	ldr	q2, [x9, #32]
  410cf0:	ldr	x9, [x9, #48]
  410cf4:	mov	w8, w2
  410cf8:	stp	x20, x19, [sp, #80]
  410cfc:	mov	x19, x1
  410d00:	mov	x20, x0
  410d04:	mov	x0, sp
  410d08:	mov	w2, #0x1                   	// #1
  410d0c:	mov	w1, w8
  410d10:	stp	x29, x30, [sp, #64]
  410d14:	add	x29, sp, #0x40
  410d18:	stp	q0, q1, [sp]
  410d1c:	str	q2, [sp, #32]
  410d20:	str	x9, [sp, #48]
  410d24:	bl	40faa8 <wcrtomb@plt+0xcc78>
  410d28:	mov	x3, sp
  410d2c:	mov	w0, wzr
  410d30:	mov	x1, x20
  410d34:	mov	x2, x19
  410d38:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  410d3c:	ldp	x20, x19, [sp, #80]
  410d40:	ldp	x29, x30, [sp, #64]
  410d44:	add	sp, sp, #0x60
  410d48:	ret
  410d4c:	stp	x29, x30, [sp, #-16]!
  410d50:	mov	w2, w1
  410d54:	mov	x1, #0xffffffffffffffff    	// #-1
  410d58:	mov	x29, sp
  410d5c:	bl	410cdc <wcrtomb@plt+0xdeac>
  410d60:	ldp	x29, x30, [sp], #16
  410d64:	ret
  410d68:	stp	x29, x30, [sp, #-16]!
  410d6c:	mov	w1, #0x3a                  	// #58
  410d70:	mov	x29, sp
  410d74:	bl	410d4c <wcrtomb@plt+0xdf1c>
  410d78:	ldp	x29, x30, [sp], #16
  410d7c:	ret
  410d80:	stp	x29, x30, [sp, #-16]!
  410d84:	mov	w2, #0x3a                  	// #58
  410d88:	mov	x29, sp
  410d8c:	bl	410cdc <wcrtomb@plt+0xdeac>
  410d90:	ldp	x29, x30, [sp], #16
  410d94:	ret
  410d98:	sub	sp, sp, #0x60
  410d9c:	stp	x20, x19, [sp, #80]
  410da0:	mov	w20, w0
  410da4:	add	x8, sp, #0x8
  410da8:	mov	w0, w1
  410dac:	stp	x29, x30, [sp, #64]
  410db0:	add	x29, sp, #0x40
  410db4:	mov	x19, x2
  410db8:	bl	410c14 <wcrtomb@plt+0xdde4>
  410dbc:	add	x0, sp, #0x8
  410dc0:	mov	w1, #0x3a                  	// #58
  410dc4:	mov	w2, #0x1                   	// #1
  410dc8:	bl	40faa8 <wcrtomb@plt+0xcc78>
  410dcc:	add	x3, sp, #0x8
  410dd0:	mov	x2, #0xffffffffffffffff    	// #-1
  410dd4:	mov	w0, w20
  410dd8:	mov	x1, x19
  410ddc:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  410de0:	ldp	x20, x19, [sp, #80]
  410de4:	ldp	x29, x30, [sp, #64]
  410de8:	add	sp, sp, #0x60
  410dec:	ret
  410df0:	stp	x29, x30, [sp, #-16]!
  410df4:	mov	x4, #0xffffffffffffffff    	// #-1
  410df8:	mov	x29, sp
  410dfc:	bl	410e08 <wcrtomb@plt+0xdfd8>
  410e00:	ldp	x29, x30, [sp], #16
  410e04:	ret
  410e08:	sub	sp, sp, #0x70
  410e0c:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  410e10:	add	x8, x8, #0x7b8
  410e14:	ldp	q0, q1, [x8]
  410e18:	ldr	q2, [x8, #32]
  410e1c:	ldr	x8, [x8, #48]
  410e20:	str	x21, [sp, #80]
  410e24:	mov	w21, w0
  410e28:	mov	x0, sp
  410e2c:	stp	x29, x30, [sp, #64]
  410e30:	stp	x20, x19, [sp, #96]
  410e34:	add	x29, sp, #0x40
  410e38:	mov	x19, x4
  410e3c:	mov	x20, x3
  410e40:	stp	q0, q1, [sp]
  410e44:	str	q2, [sp, #32]
  410e48:	str	x8, [sp, #48]
  410e4c:	bl	40fb00 <wcrtomb@plt+0xccd0>
  410e50:	mov	x3, sp
  410e54:	mov	w0, w21
  410e58:	mov	x1, x20
  410e5c:	mov	x2, x19
  410e60:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  410e64:	ldp	x20, x19, [sp, #96]
  410e68:	ldr	x21, [sp, #80]
  410e6c:	ldp	x29, x30, [sp, #64]
  410e70:	add	sp, sp, #0x70
  410e74:	ret
  410e78:	stp	x29, x30, [sp, #-16]!
  410e7c:	mov	x3, x2
  410e80:	mov	x2, x1
  410e84:	mov	x1, x0
  410e88:	mov	w0, wzr
  410e8c:	mov	x29, sp
  410e90:	bl	410df0 <wcrtomb@plt+0xdfc0>
  410e94:	ldp	x29, x30, [sp], #16
  410e98:	ret
  410e9c:	stp	x29, x30, [sp, #-16]!
  410ea0:	mov	x4, x3
  410ea4:	mov	x3, x2
  410ea8:	mov	x2, x1
  410eac:	mov	x1, x0
  410eb0:	mov	w0, wzr
  410eb4:	mov	x29, sp
  410eb8:	bl	410e08 <wcrtomb@plt+0xdfd8>
  410ebc:	ldp	x29, x30, [sp], #16
  410ec0:	ret
  410ec4:	stp	x29, x30, [sp, #-16]!
  410ec8:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x2017c>
  410ecc:	add	x3, x3, #0x4b0
  410ed0:	mov	x29, sp
  410ed4:	bl	4109e8 <wcrtomb@plt+0xdbb8>
  410ed8:	ldp	x29, x30, [sp], #16
  410edc:	ret
  410ee0:	stp	x29, x30, [sp, #-16]!
  410ee4:	mov	x2, x1
  410ee8:	mov	x1, x0
  410eec:	mov	w0, wzr
  410ef0:	mov	x29, sp
  410ef4:	bl	410ec4 <wcrtomb@plt+0xe094>
  410ef8:	ldp	x29, x30, [sp], #16
  410efc:	ret
  410f00:	stp	x29, x30, [sp, #-16]!
  410f04:	mov	x2, #0xffffffffffffffff    	// #-1
  410f08:	mov	x29, sp
  410f0c:	bl	410ec4 <wcrtomb@plt+0xe094>
  410f10:	ldp	x29, x30, [sp], #16
  410f14:	ret
  410f18:	stp	x29, x30, [sp, #-16]!
  410f1c:	mov	x1, x0
  410f20:	mov	w0, wzr
  410f24:	mov	x29, sp
  410f28:	bl	410f00 <wcrtomb@plt+0xe0d0>
  410f2c:	ldp	x29, x30, [sp], #16
  410f30:	ret
  410f34:	stp	x29, x30, [sp, #-48]!
  410f38:	stp	x20, x19, [sp, #32]
  410f3c:	mov	x20, x0
  410f40:	mov	w19, w1
  410f44:	mov	w2, #0x5                   	// #5
  410f48:	mov	x0, xzr
  410f4c:	mov	x1, x20
  410f50:	str	x21, [sp, #16]
  410f54:	mov	x29, sp
  410f58:	bl	402d10 <dcgettext@plt>
  410f5c:	cmp	x0, x20
  410f60:	b.ne	410fec <wcrtomb@plt+0xe1bc>  // b.any
  410f64:	bl	40f8e4 <wcrtomb@plt+0xcab4>
  410f68:	mov	w1, #0x55                  	// #85
  410f6c:	mov	w2, #0x54                  	// #84
  410f70:	mov	w3, #0x46                  	// #70
  410f74:	mov	w4, #0x2d                  	// #45
  410f78:	mov	w5, #0x38                  	// #56
  410f7c:	mov	w6, wzr
  410f80:	mov	w7, wzr
  410f84:	mov	x21, x0
  410f88:	bl	411018 <wcrtomb@plt+0xe1e8>
  410f8c:	cbz	w0, 410fa8 <wcrtomb@plt+0xe178>
  410f90:	ldrb	w8, [x20]
  410f94:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xf17c>
  410f98:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xf17c>
  410f9c:	add	x9, x9, #0x42
  410fa0:	add	x10, x10, #0x3e
  410fa4:	b	410fe4 <wcrtomb@plt+0xe1b4>
  410fa8:	mov	w1, #0x47                  	// #71
  410fac:	mov	w2, #0x42                  	// #66
  410fb0:	mov	w3, #0x31                  	// #49
  410fb4:	mov	w4, #0x38                  	// #56
  410fb8:	mov	w5, #0x30                  	// #48
  410fbc:	mov	w6, #0x33                  	// #51
  410fc0:	mov	w7, #0x30                  	// #48
  410fc4:	mov	x0, x21
  410fc8:	bl	411018 <wcrtomb@plt+0xe1e8>
  410fcc:	cbz	w0, 410ffc <wcrtomb@plt+0xe1cc>
  410fd0:	ldrb	w8, [x20]
  410fd4:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xf17c>
  410fd8:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xf17c>
  410fdc:	add	x9, x9, #0x4a
  410fe0:	add	x10, x10, #0x46
  410fe4:	cmp	w8, #0x60
  410fe8:	csel	x0, x10, x9, eq  // eq = none
  410fec:	ldp	x20, x19, [sp, #32]
  410ff0:	ldr	x21, [sp, #16]
  410ff4:	ldp	x29, x30, [sp], #48
  410ff8:	ret
  410ffc:	adrp	x8, 41f000 <_obstack_memory_used@@Base+0xd17c>
  411000:	adrp	x9, 420000 <_obstack_memory_used@@Base+0xe17c>
  411004:	add	x8, x8, #0xaf9
  411008:	add	x9, x9, #0xccc
  41100c:	cmp	w19, #0x9
  411010:	csel	x0, x9, x8, eq  // eq = none
  411014:	b	410fec <wcrtomb@plt+0xe1bc>
  411018:	stp	x29, x30, [sp, #-80]!
  41101c:	stp	x26, x25, [sp, #16]
  411020:	mov	x25, x0
  411024:	and	w0, w1, #0xff
  411028:	stp	x24, x23, [sp, #32]
  41102c:	stp	x22, x21, [sp, #48]
  411030:	stp	x20, x19, [sp, #64]
  411034:	mov	x29, sp
  411038:	mov	w19, w7
  41103c:	mov	w20, w6
  411040:	mov	w21, w5
  411044:	mov	w22, w4
  411048:	mov	w23, w3
  41104c:	mov	w24, w2
  411050:	mov	w26, w1
  411054:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  411058:	ldrb	w8, [x25]
  41105c:	tbz	w0, #0, 411074 <wcrtomb@plt+0xe244>
  411060:	and	w8, w8, #0xffffffdf
  411064:	cmp	w8, w26, uxtb
  411068:	b.eq	41107c <wcrtomb@plt+0xe24c>  // b.none
  41106c:	mov	w0, wzr
  411070:	b	4110ac <wcrtomb@plt+0xe27c>
  411074:	cmp	w8, w26, uxtb
  411078:	b.ne	41106c <wcrtomb@plt+0xe23c>  // b.any
  41107c:	tst	w26, #0xff
  411080:	b.eq	4110a8 <wcrtomb@plt+0xe278>  // b.none
  411084:	mov	x0, x25
  411088:	mov	w1, w24
  41108c:	mov	w2, w23
  411090:	mov	w3, w22
  411094:	mov	w4, w21
  411098:	mov	w5, w20
  41109c:	mov	w6, w19
  4110a0:	bl	4110c4 <wcrtomb@plt+0xe294>
  4110a4:	b	4110ac <wcrtomb@plt+0xe27c>
  4110a8:	mov	w0, #0x1                   	// #1
  4110ac:	ldp	x20, x19, [sp, #64]
  4110b0:	ldp	x22, x21, [sp, #48]
  4110b4:	ldp	x24, x23, [sp, #32]
  4110b8:	ldp	x26, x25, [sp, #16]
  4110bc:	ldp	x29, x30, [sp], #80
  4110c0:	ret
  4110c4:	stp	x29, x30, [sp, #-80]!
  4110c8:	stp	x24, x23, [sp, #32]
  4110cc:	mov	x24, x0
  4110d0:	and	w0, w1, #0xff
  4110d4:	str	x25, [sp, #16]
  4110d8:	stp	x22, x21, [sp, #48]
  4110dc:	stp	x20, x19, [sp, #64]
  4110e0:	mov	x29, sp
  4110e4:	mov	w19, w6
  4110e8:	mov	w20, w5
  4110ec:	mov	w21, w4
  4110f0:	mov	w22, w3
  4110f4:	mov	w23, w2
  4110f8:	mov	w25, w1
  4110fc:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  411100:	ldrb	w8, [x24, #1]
  411104:	tbz	w0, #0, 41111c <wcrtomb@plt+0xe2ec>
  411108:	and	w8, w8, #0xffffffdf
  41110c:	cmp	w8, w25, uxtb
  411110:	b.eq	411124 <wcrtomb@plt+0xe2f4>  // b.none
  411114:	mov	w0, wzr
  411118:	b	411150 <wcrtomb@plt+0xe320>
  41111c:	cmp	w8, w25, uxtb
  411120:	b.ne	411114 <wcrtomb@plt+0xe2e4>  // b.any
  411124:	tst	w25, #0xff
  411128:	b.eq	41114c <wcrtomb@plt+0xe31c>  // b.none
  41112c:	mov	x0, x24
  411130:	mov	w1, w23
  411134:	mov	w2, w22
  411138:	mov	w3, w21
  41113c:	mov	w4, w20
  411140:	mov	w5, w19
  411144:	bl	411168 <wcrtomb@plt+0xe338>
  411148:	b	411150 <wcrtomb@plt+0xe320>
  41114c:	mov	w0, #0x1                   	// #1
  411150:	ldp	x20, x19, [sp, #64]
  411154:	ldp	x22, x21, [sp, #48]
  411158:	ldp	x24, x23, [sp, #32]
  41115c:	ldr	x25, [sp, #16]
  411160:	ldp	x29, x30, [sp], #80
  411164:	ret
  411168:	stp	x29, x30, [sp, #-64]!
  41116c:	stp	x24, x23, [sp, #16]
  411170:	mov	x23, x0
  411174:	and	w0, w1, #0xff
  411178:	stp	x22, x21, [sp, #32]
  41117c:	stp	x20, x19, [sp, #48]
  411180:	mov	x29, sp
  411184:	mov	w19, w5
  411188:	mov	w20, w4
  41118c:	mov	w21, w3
  411190:	mov	w22, w2
  411194:	mov	w24, w1
  411198:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  41119c:	ldrb	w8, [x23, #2]
  4111a0:	tbz	w0, #0, 4111b8 <wcrtomb@plt+0xe388>
  4111a4:	and	w8, w8, #0xffffffdf
  4111a8:	cmp	w8, w24, uxtb
  4111ac:	b.eq	4111c0 <wcrtomb@plt+0xe390>  // b.none
  4111b0:	mov	w0, wzr
  4111b4:	b	4111e8 <wcrtomb@plt+0xe3b8>
  4111b8:	cmp	w8, w24, uxtb
  4111bc:	b.ne	4111b0 <wcrtomb@plt+0xe380>  // b.any
  4111c0:	tst	w24, #0xff
  4111c4:	b.eq	4111e4 <wcrtomb@plt+0xe3b4>  // b.none
  4111c8:	mov	x0, x23
  4111cc:	mov	w1, w22
  4111d0:	mov	w2, w21
  4111d4:	mov	w3, w20
  4111d8:	mov	w4, w19
  4111dc:	bl	4111fc <wcrtomb@plt+0xe3cc>
  4111e0:	b	4111e8 <wcrtomb@plt+0xe3b8>
  4111e4:	mov	w0, #0x1                   	// #1
  4111e8:	ldp	x20, x19, [sp, #48]
  4111ec:	ldp	x22, x21, [sp, #32]
  4111f0:	ldp	x24, x23, [sp, #16]
  4111f4:	ldp	x29, x30, [sp], #64
  4111f8:	ret
  4111fc:	stp	x29, x30, [sp, #-64]!
  411200:	stp	x22, x21, [sp, #32]
  411204:	mov	x22, x0
  411208:	and	w0, w1, #0xff
  41120c:	str	x23, [sp, #16]
  411210:	stp	x20, x19, [sp, #48]
  411214:	mov	x29, sp
  411218:	mov	w19, w4
  41121c:	mov	w20, w3
  411220:	mov	w21, w2
  411224:	mov	w23, w1
  411228:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  41122c:	ldrb	w8, [x22, #3]
  411230:	tbz	w0, #0, 411248 <wcrtomb@plt+0xe418>
  411234:	and	w8, w8, #0xffffffdf
  411238:	cmp	w8, w23, uxtb
  41123c:	b.eq	411250 <wcrtomb@plt+0xe420>  // b.none
  411240:	mov	w0, wzr
  411244:	b	411274 <wcrtomb@plt+0xe444>
  411248:	cmp	w8, w23, uxtb
  41124c:	b.ne	411240 <wcrtomb@plt+0xe410>  // b.any
  411250:	tst	w23, #0xff
  411254:	b.eq	411270 <wcrtomb@plt+0xe440>  // b.none
  411258:	mov	x0, x22
  41125c:	mov	w1, w21
  411260:	mov	w2, w20
  411264:	mov	w3, w19
  411268:	bl	411288 <wcrtomb@plt+0xe458>
  41126c:	b	411274 <wcrtomb@plt+0xe444>
  411270:	mov	w0, #0x1                   	// #1
  411274:	ldp	x20, x19, [sp, #48]
  411278:	ldp	x22, x21, [sp, #32]
  41127c:	ldr	x23, [sp, #16]
  411280:	ldp	x29, x30, [sp], #64
  411284:	ret
  411288:	stp	x29, x30, [sp, #-48]!
  41128c:	stp	x22, x21, [sp, #16]
  411290:	mov	x21, x0
  411294:	and	w0, w1, #0xff
  411298:	stp	x20, x19, [sp, #32]
  41129c:	mov	x29, sp
  4112a0:	mov	w19, w3
  4112a4:	mov	w20, w2
  4112a8:	mov	w22, w1
  4112ac:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  4112b0:	ldrb	w8, [x21, #4]
  4112b4:	tbz	w0, #0, 4112cc <wcrtomb@plt+0xe49c>
  4112b8:	and	w8, w8, #0xffffffdf
  4112bc:	cmp	w8, w22, uxtb
  4112c0:	b.eq	4112d4 <wcrtomb@plt+0xe4a4>  // b.none
  4112c4:	mov	w0, wzr
  4112c8:	b	4112f4 <wcrtomb@plt+0xe4c4>
  4112cc:	cmp	w8, w22, uxtb
  4112d0:	b.ne	4112c4 <wcrtomb@plt+0xe494>  // b.any
  4112d4:	tst	w22, #0xff
  4112d8:	b.eq	4112f0 <wcrtomb@plt+0xe4c0>  // b.none
  4112dc:	mov	x0, x21
  4112e0:	mov	w1, w20
  4112e4:	mov	w2, w19
  4112e8:	bl	411304 <wcrtomb@plt+0xe4d4>
  4112ec:	b	4112f4 <wcrtomb@plt+0xe4c4>
  4112f0:	mov	w0, #0x1                   	// #1
  4112f4:	ldp	x20, x19, [sp, #32]
  4112f8:	ldp	x22, x21, [sp, #16]
  4112fc:	ldp	x29, x30, [sp], #48
  411300:	ret
  411304:	stp	x29, x30, [sp, #-48]!
  411308:	stp	x20, x19, [sp, #32]
  41130c:	mov	x20, x0
  411310:	and	w0, w1, #0xff
  411314:	str	x21, [sp, #16]
  411318:	mov	x29, sp
  41131c:	mov	w19, w2
  411320:	mov	w21, w1
  411324:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  411328:	ldrb	w8, [x20, #5]
  41132c:	tbz	w0, #0, 411344 <wcrtomb@plt+0xe514>
  411330:	and	w8, w8, #0xffffffdf
  411334:	cmp	w8, w21, uxtb
  411338:	b.eq	41134c <wcrtomb@plt+0xe51c>  // b.none
  41133c:	mov	w0, wzr
  411340:	b	411368 <wcrtomb@plt+0xe538>
  411344:	cmp	w8, w21, uxtb
  411348:	b.ne	41133c <wcrtomb@plt+0xe50c>  // b.any
  41134c:	tst	w21, #0xff
  411350:	b.eq	411364 <wcrtomb@plt+0xe534>  // b.none
  411354:	mov	x0, x20
  411358:	mov	w1, w19
  41135c:	bl	411378 <wcrtomb@plt+0xe548>
  411360:	b	411368 <wcrtomb@plt+0xe538>
  411364:	mov	w0, #0x1                   	// #1
  411368:	ldp	x20, x19, [sp, #32]
  41136c:	ldr	x21, [sp, #16]
  411370:	ldp	x29, x30, [sp], #48
  411374:	ret
  411378:	stp	x29, x30, [sp, #-32]!
  41137c:	stp	x20, x19, [sp, #16]
  411380:	mov	x19, x0
  411384:	and	w0, w1, #0xff
  411388:	mov	x29, sp
  41138c:	mov	w20, w1
  411390:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  411394:	ldrb	w8, [x19, #6]
  411398:	tbz	w0, #0, 4113b0 <wcrtomb@plt+0xe580>
  41139c:	and	w8, w8, #0xffffffdf
  4113a0:	cmp	w8, w20, uxtb
  4113a4:	b.eq	4113b8 <wcrtomb@plt+0xe588>  // b.none
  4113a8:	mov	w0, wzr
  4113ac:	b	4113d0 <wcrtomb@plt+0xe5a0>
  4113b0:	cmp	w8, w20, uxtb
  4113b4:	b.ne	4113a8 <wcrtomb@plt+0xe578>  // b.any
  4113b8:	tst	w20, #0xff
  4113bc:	b.eq	4113cc <wcrtomb@plt+0xe59c>  // b.none
  4113c0:	mov	x0, x19
  4113c4:	bl	4113dc <wcrtomb@plt+0xe5ac>
  4113c8:	b	4113d0 <wcrtomb@plt+0xe5a0>
  4113cc:	mov	w0, #0x1                   	// #1
  4113d0:	ldp	x20, x19, [sp, #16]
  4113d4:	ldp	x29, x30, [sp], #32
  4113d8:	ret
  4113dc:	stp	x29, x30, [sp, #-32]!
  4113e0:	str	x19, [sp, #16]
  4113e4:	mov	x19, x0
  4113e8:	mov	w0, wzr
  4113ec:	mov	x29, sp
  4113f0:	bl	41edbc <_obstack_memory_used@@Base+0xcf38>
  4113f4:	ldrb	w8, [x19, #7]
  4113f8:	tbz	w0, #0, 41140c <wcrtomb@plt+0xe5dc>
  4113fc:	tst	w8, #0xffffffdf
  411400:	b.eq	411410 <wcrtomb@plt+0xe5e0>  // b.none
  411404:	mov	w0, wzr
  411408:	b	411414 <wcrtomb@plt+0xe5e4>
  41140c:	cbnz	w8, 411404 <wcrtomb@plt+0xe5d4>
  411410:	mov	w0, #0x1                   	// #1
  411414:	ldr	x19, [sp, #16]
  411418:	ldp	x29, x30, [sp], #32
  41141c:	ret
  411420:	sub	sp, sp, #0x50
  411424:	stp	x22, x21, [sp, #48]
  411428:	stp	x20, x19, [sp, #64]
  41142c:	mov	x21, x5
  411430:	mov	x20, x4
  411434:	mov	x5, x3
  411438:	mov	x4, x2
  41143c:	mov	x19, x0
  411440:	stp	x29, x30, [sp, #32]
  411444:	add	x29, sp, #0x20
  411448:	cbz	x1, 411468 <wcrtomb@plt+0xe638>
  41144c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xf17c>
  411450:	mov	x3, x1
  411454:	add	x2, x2, #0x57
  411458:	mov	w1, #0x1                   	// #1
  41145c:	mov	x0, x19
  411460:	bl	402b90 <__fprintf_chk@plt>
  411464:	b	411484 <wcrtomb@plt+0xe654>
  411468:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xf17c>
  41146c:	add	x2, x2, #0x63
  411470:	mov	w1, #0x1                   	// #1
  411474:	mov	x0, x19
  411478:	mov	x3, x4
  41147c:	mov	x4, x5
  411480:	bl	402b90 <__fprintf_chk@plt>
  411484:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411488:	add	x1, x1, #0x6a
  41148c:	mov	w2, #0x5                   	// #5
  411490:	mov	x0, xzr
  411494:	bl	402d10 <dcgettext@plt>
  411498:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xf17c>
  41149c:	mov	x3, x0
  4114a0:	add	x2, x2, #0x344
  4114a4:	mov	w1, #0x1                   	// #1
  4114a8:	mov	w4, #0x7e4                 	// #2020
  4114ac:	mov	x0, x19
  4114b0:	bl	402b90 <__fprintf_chk@plt>
  4114b4:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xe17c>
  4114b8:	add	x22, x22, #0x13a
  4114bc:	mov	x0, x22
  4114c0:	mov	x1, x19
  4114c4:	bl	402d20 <fputs_unlocked@plt>
  4114c8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  4114cc:	add	x1, x1, #0x6e
  4114d0:	mov	w2, #0x5                   	// #5
  4114d4:	mov	x0, xzr
  4114d8:	bl	402d10 <dcgettext@plt>
  4114dc:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xf17c>
  4114e0:	mov	x2, x0
  4114e4:	add	x3, x3, #0x119
  4114e8:	mov	w1, #0x1                   	// #1
  4114ec:	mov	x0, x19
  4114f0:	bl	402b90 <__fprintf_chk@plt>
  4114f4:	mov	x0, x22
  4114f8:	mov	x1, x19
  4114fc:	bl	402d20 <fputs_unlocked@plt>
  411500:	cmp	x21, #0x9
  411504:	b.hi	41154c <wcrtomb@plt+0xe71c>  // b.pmore
  411508:	adrp	x8, 421000 <_obstack_memory_used@@Base+0xf17c>
  41150c:	add	x8, x8, #0x4d
  411510:	adr	x9, 411520 <wcrtomb@plt+0xe6f0>
  411514:	ldrb	w10, [x8, x21]
  411518:	add	x9, x9, x10, lsl #2
  41151c:	br	x9
  411520:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411524:	add	x1, x1, #0x13b
  411528:	mov	w2, #0x5                   	// #5
  41152c:	mov	x0, xzr
  411530:	bl	402d10 <dcgettext@plt>
  411534:	ldr	x3, [x20]
  411538:	mov	x2, x0
  41153c:	mov	w1, #0x1                   	// #1
  411540:	mov	x0, x19
  411544:	bl	402b90 <__fprintf_chk@plt>
  411548:	b	4116e4 <wcrtomb@plt+0xe8b4>
  41154c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411550:	add	x1, x1, #0x27a
  411554:	b	411678 <wcrtomb@plt+0xe848>
  411558:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  41155c:	add	x1, x1, #0x14b
  411560:	mov	w2, #0x5                   	// #5
  411564:	mov	x0, xzr
  411568:	bl	402d10 <dcgettext@plt>
  41156c:	ldp	x3, x4, [x20]
  411570:	mov	x2, x0
  411574:	mov	w1, #0x1                   	// #1
  411578:	mov	x0, x19
  41157c:	bl	402b90 <__fprintf_chk@plt>
  411580:	b	4116e4 <wcrtomb@plt+0xe8b4>
  411584:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411588:	add	x1, x1, #0x162
  41158c:	mov	w2, #0x5                   	// #5
  411590:	mov	x0, xzr
  411594:	bl	402d10 <dcgettext@plt>
  411598:	ldp	x3, x4, [x20]
  41159c:	ldr	x5, [x20, #16]
  4115a0:	mov	x2, x0
  4115a4:	mov	w1, #0x1                   	// #1
  4115a8:	mov	x0, x19
  4115ac:	bl	402b90 <__fprintf_chk@plt>
  4115b0:	b	4116e4 <wcrtomb@plt+0xe8b4>
  4115b4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  4115b8:	add	x1, x1, #0x17e
  4115bc:	mov	w2, #0x5                   	// #5
  4115c0:	mov	x0, xzr
  4115c4:	bl	402d10 <dcgettext@plt>
  4115c8:	ldp	x3, x4, [x20]
  4115cc:	ldp	x5, x6, [x20, #16]
  4115d0:	mov	x2, x0
  4115d4:	mov	w1, #0x1                   	// #1
  4115d8:	mov	x0, x19
  4115dc:	bl	402b90 <__fprintf_chk@plt>
  4115e0:	b	4116e4 <wcrtomb@plt+0xe8b4>
  4115e4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  4115e8:	add	x1, x1, #0x19e
  4115ec:	mov	w2, #0x5                   	// #5
  4115f0:	mov	x0, xzr
  4115f4:	bl	402d10 <dcgettext@plt>
  4115f8:	ldp	x3, x4, [x20]
  4115fc:	ldp	x5, x6, [x20, #16]
  411600:	ldr	x7, [x20, #32]
  411604:	mov	x2, x0
  411608:	mov	w1, #0x1                   	// #1
  41160c:	b	4116dc <wcrtomb@plt+0xe8ac>
  411610:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411614:	add	x1, x1, #0x1c2
  411618:	mov	w2, #0x5                   	// #5
  41161c:	mov	x0, xzr
  411620:	bl	402d10 <dcgettext@plt>
  411624:	ldp	x3, x4, [x20]
  411628:	ldp	x5, x6, [x20, #16]
  41162c:	ldp	x7, x8, [x20, #32]
  411630:	mov	x2, x0
  411634:	b	411664 <wcrtomb@plt+0xe834>
  411638:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  41163c:	add	x1, x1, #0x1ea
  411640:	mov	w2, #0x5                   	// #5
  411644:	mov	x0, xzr
  411648:	bl	402d10 <dcgettext@plt>
  41164c:	ldr	x9, [x20, #48]
  411650:	ldp	x3, x4, [x20]
  411654:	ldp	x5, x6, [x20, #16]
  411658:	ldp	x7, x8, [x20, #32]
  41165c:	mov	x2, x0
  411660:	str	x9, [sp, #8]
  411664:	mov	w1, #0x1                   	// #1
  411668:	str	x8, [sp]
  41166c:	b	4116dc <wcrtomb@plt+0xe8ac>
  411670:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411674:	add	x1, x1, #0x246
  411678:	mov	w2, #0x5                   	// #5
  41167c:	mov	x0, xzr
  411680:	bl	402d10 <dcgettext@plt>
  411684:	ldp	x3, x4, [x20]
  411688:	ldp	x5, x6, [x20, #16]
  41168c:	ldr	x7, [x20, #32]
  411690:	ldur	q0, [x20, #40]
  411694:	ldp	x8, x9, [x20, #56]
  411698:	mov	x2, x0
  41169c:	str	x9, [sp, #24]
  4116a0:	b	4116d0 <wcrtomb@plt+0xe8a0>
  4116a4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  4116a8:	add	x1, x1, #0x216
  4116ac:	mov	w2, #0x5                   	// #5
  4116b0:	mov	x0, xzr
  4116b4:	bl	402d10 <dcgettext@plt>
  4116b8:	ldp	x3, x4, [x20]
  4116bc:	ldp	x5, x6, [x20, #16]
  4116c0:	ldr	x7, [x20, #32]
  4116c4:	ldur	q0, [x20, #40]
  4116c8:	ldr	x8, [x20, #56]
  4116cc:	mov	x2, x0
  4116d0:	mov	w1, #0x1                   	// #1
  4116d4:	str	x8, [sp, #16]
  4116d8:	str	q0, [sp]
  4116dc:	mov	x0, x19
  4116e0:	bl	402b90 <__fprintf_chk@plt>
  4116e4:	ldp	x20, x19, [sp, #64]
  4116e8:	ldp	x22, x21, [sp, #48]
  4116ec:	ldp	x29, x30, [sp, #32]
  4116f0:	add	sp, sp, #0x50
  4116f4:	ret
  4116f8:	stp	x29, x30, [sp, #-16]!
  4116fc:	mov	x8, xzr
  411700:	mov	x29, sp
  411704:	ldr	x9, [x4, x8, lsl #3]
  411708:	add	x8, x8, #0x1
  41170c:	cbnz	x9, 411704 <wcrtomb@plt+0xe8d4>
  411710:	sub	x5, x8, #0x1
  411714:	bl	411420 <wcrtomb@plt+0xe5f0>
  411718:	ldp	x29, x30, [sp], #16
  41171c:	ret
  411720:	sub	sp, sp, #0x60
  411724:	mov	x5, xzr
  411728:	mov	x8, sp
  41172c:	stp	x29, x30, [sp, #80]
  411730:	add	x29, sp, #0x50
  411734:	ldrsw	x9, [x4, #24]
  411738:	tbz	w9, #31, 41174c <wcrtomb@plt+0xe91c>
  41173c:	add	w10, w9, #0x8
  411740:	cmp	w10, #0x0
  411744:	str	w10, [x4, #24]
  411748:	b.le	411774 <wcrtomb@plt+0xe944>
  41174c:	ldr	x9, [x4]
  411750:	add	x10, x9, #0x8
  411754:	str	x10, [x4]
  411758:	ldr	x9, [x9]
  41175c:	str	x9, [x8, x5, lsl #3]
  411760:	cbz	x9, 411780 <wcrtomb@plt+0xe950>
  411764:	add	x5, x5, #0x1
  411768:	cmp	x5, #0xa
  41176c:	b.ne	411734 <wcrtomb@plt+0xe904>  // b.any
  411770:	b	411780 <wcrtomb@plt+0xe950>
  411774:	ldr	x10, [x4, #8]
  411778:	add	x9, x10, x9
  41177c:	b	411758 <wcrtomb@plt+0xe928>
  411780:	mov	x4, sp
  411784:	bl	411420 <wcrtomb@plt+0xe5f0>
  411788:	ldp	x29, x30, [sp, #80]
  41178c:	add	sp, sp, #0x60
  411790:	ret
  411794:	sub	sp, sp, #0xf0
  411798:	stp	x29, x30, [sp, #224]
  41179c:	add	x29, sp, #0xe0
  4117a0:	mov	x8, #0xffffffffffffffe0    	// #-32
  4117a4:	mov	x9, sp
  4117a8:	sub	x10, x29, #0x60
  4117ac:	movk	x8, #0xff80, lsl #32
  4117b0:	add	x11, x29, #0x10
  4117b4:	add	x9, x9, #0x80
  4117b8:	add	x10, x10, #0x20
  4117bc:	stp	x9, x8, [x29, #-16]
  4117c0:	stp	x11, x10, [x29, #-32]
  4117c4:	stp	x4, x5, [x29, #-96]
  4117c8:	stp	x6, x7, [x29, #-80]
  4117cc:	stp	q0, q1, [sp]
  4117d0:	ldp	q0, q1, [x29, #-32]
  4117d4:	sub	x4, x29, #0x40
  4117d8:	stp	q2, q3, [sp, #32]
  4117dc:	stp	q4, q5, [sp, #64]
  4117e0:	stp	q6, q7, [sp, #96]
  4117e4:	stp	q0, q1, [x29, #-64]
  4117e8:	bl	411720 <wcrtomb@plt+0xe8f0>
  4117ec:	ldp	x29, x30, [sp, #224]
  4117f0:	add	sp, sp, #0xf0
  4117f4:	ret
  4117f8:	stp	x29, x30, [sp, #-16]!
  4117fc:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  411800:	ldr	x1, [x8, #1304]
  411804:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xe17c>
  411808:	add	x0, x0, #0x13a
  41180c:	mov	x29, sp
  411810:	bl	402d20 <fputs_unlocked@plt>
  411814:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411818:	add	x1, x1, #0x2b6
  41181c:	mov	w2, #0x5                   	// #5
  411820:	mov	x0, xzr
  411824:	bl	402d10 <dcgettext@plt>
  411828:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xe17c>
  41182c:	mov	x1, x0
  411830:	add	x2, x2, #0xe3
  411834:	mov	w0, #0x1                   	// #1
  411838:	bl	4029a0 <__printf_chk@plt>
  41183c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411840:	add	x1, x1, #0x2ca
  411844:	mov	w2, #0x5                   	// #5
  411848:	mov	x0, xzr
  41184c:	bl	402d10 <dcgettext@plt>
  411850:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xd17c>
  411854:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xf17c>
  411858:	mov	x1, x0
  41185c:	add	x2, x2, #0xfc5
  411860:	add	x3, x3, #0x2de
  411864:	mov	w0, #0x1                   	// #1
  411868:	bl	4029a0 <__printf_chk@plt>
  41186c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411870:	add	x1, x1, #0x300
  411874:	mov	w2, #0x5                   	// #5
  411878:	mov	x0, xzr
  41187c:	bl	402d10 <dcgettext@plt>
  411880:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xf17c>
  411884:	mov	x1, x0
  411888:	add	x2, x2, #0x327
  41188c:	mov	w0, #0x1                   	// #1
  411890:	bl	4029a0 <__printf_chk@plt>
  411894:	ldp	x29, x30, [sp], #16
  411898:	ret
  41189c:	stp	x29, x30, [sp, #-16]!
  4118a0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4118a4:	udiv	x8, x8, x1
  4118a8:	cmp	x8, x0
  4118ac:	mov	x29, sp
  4118b0:	b.cc	4118c4 <wcrtomb@plt+0xea94>  // b.lo, b.ul, b.last
  4118b4:	mul	x0, x1, x0
  4118b8:	bl	4118c8 <wcrtomb@plt+0xea98>
  4118bc:	ldp	x29, x30, [sp], #16
  4118c0:	ret
  4118c4:	bl	411ab0 <wcrtomb@plt+0xec80>
  4118c8:	stp	x29, x30, [sp, #-32]!
  4118cc:	str	x19, [sp, #16]
  4118d0:	mov	x29, sp
  4118d4:	mov	x19, x0
  4118d8:	bl	4028e0 <malloc@plt>
  4118dc:	cbz	x19, 4118e4 <wcrtomb@plt+0xeab4>
  4118e0:	cbz	x0, 4118f0 <wcrtomb@plt+0xeac0>
  4118e4:	ldr	x19, [sp, #16]
  4118e8:	ldp	x29, x30, [sp], #32
  4118ec:	ret
  4118f0:	bl	411ab0 <wcrtomb@plt+0xec80>
  4118f4:	stp	x29, x30, [sp, #-16]!
  4118f8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4118fc:	udiv	x8, x8, x2
  411900:	cmp	x8, x1
  411904:	mov	x29, sp
  411908:	b.cc	41191c <wcrtomb@plt+0xeaec>  // b.lo, b.ul, b.last
  41190c:	mul	x1, x2, x1
  411910:	bl	411920 <wcrtomb@plt+0xeaf0>
  411914:	ldp	x29, x30, [sp], #16
  411918:	ret
  41191c:	bl	411ab0 <wcrtomb@plt+0xec80>
  411920:	stp	x29, x30, [sp, #-32]!
  411924:	str	x19, [sp, #16]
  411928:	mov	x19, x1
  41192c:	mov	x29, sp
  411930:	cbz	x0, 411944 <wcrtomb@plt+0xeb14>
  411934:	cbnz	x19, 411944 <wcrtomb@plt+0xeb14>
  411938:	bl	402bd0 <free@plt>
  41193c:	mov	x0, xzr
  411940:	b	411954 <wcrtomb@plt+0xeb24>
  411944:	mov	x1, x19
  411948:	bl	402a40 <realloc@plt>
  41194c:	cbz	x19, 411954 <wcrtomb@plt+0xeb24>
  411950:	cbz	x0, 411960 <wcrtomb@plt+0xeb30>
  411954:	ldr	x19, [sp, #16]
  411958:	ldp	x29, x30, [sp], #32
  41195c:	ret
  411960:	bl	411ab0 <wcrtomb@plt+0xec80>
  411964:	stp	x29, x30, [sp, #-16]!
  411968:	ldr	x8, [x1]
  41196c:	mov	x29, sp
  411970:	cbz	x0, 411994 <wcrtomb@plt+0xeb64>
  411974:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  411978:	movk	x9, #0x5554
  41197c:	udiv	x9, x9, x2
  411980:	cmp	x9, x8
  411984:	b.ls	4119cc <wcrtomb@plt+0xeb9c>  // b.plast
  411988:	add	x8, x8, x8, lsr #1
  41198c:	add	x8, x8, #0x1
  411990:	b	4119b8 <wcrtomb@plt+0xeb88>
  411994:	cbnz	x8, 4119a8 <wcrtomb@plt+0xeb78>
  411998:	mov	w8, #0x80                  	// #128
  41199c:	udiv	x8, x8, x2
  4119a0:	cmp	x2, #0x80
  4119a4:	cinc	x8, x8, hi  // hi = pmore
  4119a8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4119ac:	udiv	x9, x9, x2
  4119b0:	cmp	x9, x8
  4119b4:	b.cc	4119cc <wcrtomb@plt+0xeb9c>  // b.lo, b.ul, b.last
  4119b8:	str	x8, [x1]
  4119bc:	mul	x1, x8, x2
  4119c0:	bl	411920 <wcrtomb@plt+0xeaf0>
  4119c4:	ldp	x29, x30, [sp], #16
  4119c8:	ret
  4119cc:	bl	411ab0 <wcrtomb@plt+0xec80>
  4119d0:	stp	x29, x30, [sp, #-16]!
  4119d4:	mov	x29, sp
  4119d8:	bl	4118c8 <wcrtomb@plt+0xea98>
  4119dc:	ldp	x29, x30, [sp], #16
  4119e0:	ret
  4119e4:	stp	x29, x30, [sp, #-16]!
  4119e8:	mov	w2, #0x1                   	// #1
  4119ec:	mov	x29, sp
  4119f0:	bl	411964 <wcrtomb@plt+0xeb34>
  4119f4:	ldp	x29, x30, [sp], #16
  4119f8:	ret
  4119fc:	stp	x29, x30, [sp, #-16]!
  411a00:	mov	w1, #0x1                   	// #1
  411a04:	mov	x29, sp
  411a08:	bl	411a14 <wcrtomb@plt+0xebe4>
  411a0c:	ldp	x29, x30, [sp], #16
  411a10:	ret
  411a14:	stp	x29, x30, [sp, #-16]!
  411a18:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411a1c:	udiv	x8, x8, x1
  411a20:	cmp	x8, x0
  411a24:	mov	x29, sp
  411a28:	b.cc	411a3c <wcrtomb@plt+0xec0c>  // b.lo, b.ul, b.last
  411a2c:	bl	402a10 <calloc@plt>
  411a30:	cbz	x0, 411a3c <wcrtomb@plt+0xec0c>
  411a34:	ldp	x29, x30, [sp], #16
  411a38:	ret
  411a3c:	bl	411ab0 <wcrtomb@plt+0xec80>
  411a40:	stp	x29, x30, [sp, #-48]!
  411a44:	stp	x20, x19, [sp, #32]
  411a48:	mov	x20, x0
  411a4c:	mov	x0, x1
  411a50:	str	x21, [sp, #16]
  411a54:	mov	x29, sp
  411a58:	mov	x19, x1
  411a5c:	bl	4118c8 <wcrtomb@plt+0xea98>
  411a60:	mov	x1, x20
  411a64:	mov	x2, x19
  411a68:	mov	x21, x0
  411a6c:	bl	402710 <memcpy@plt>
  411a70:	mov	x0, x21
  411a74:	ldp	x20, x19, [sp, #32]
  411a78:	ldr	x21, [sp, #16]
  411a7c:	ldp	x29, x30, [sp], #48
  411a80:	ret
  411a84:	stp	x29, x30, [sp, #-32]!
  411a88:	str	x19, [sp, #16]
  411a8c:	mov	x29, sp
  411a90:	mov	x19, x0
  411a94:	bl	402750 <strlen@plt>
  411a98:	add	x1, x0, #0x1
  411a9c:	mov	x0, x19
  411aa0:	bl	411a40 <wcrtomb@plt+0xec10>
  411aa4:	ldr	x19, [sp, #16]
  411aa8:	ldp	x29, x30, [sp], #32
  411aac:	ret
  411ab0:	stp	x29, x30, [sp, #-32]!
  411ab4:	str	x19, [sp, #16]
  411ab8:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  411abc:	ldr	w19, [x8, #1264]
  411ac0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411ac4:	add	x1, x1, #0x373
  411ac8:	mov	w2, #0x5                   	// #5
  411acc:	mov	x0, xzr
  411ad0:	mov	x29, sp
  411ad4:	bl	402d10 <dcgettext@plt>
  411ad8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xe17c>
  411adc:	mov	x3, x0
  411ae0:	add	x2, x2, #0x7bf
  411ae4:	mov	w0, w19
  411ae8:	mov	w1, wzr
  411aec:	bl	402790 <error@plt>
  411af0:	bl	402b00 <abort@plt>
  411af4:	sub	sp, sp, #0x40
  411af8:	stp	x29, x30, [sp, #16]
  411afc:	add	x29, sp, #0x10
  411b00:	cmp	x0, #0x0
  411b04:	sub	x8, x29, #0x4
  411b08:	stp	x20, x19, [sp, #48]
  411b0c:	csel	x20, x8, x0, eq  // eq = none
  411b10:	mov	x0, x20
  411b14:	stp	x22, x21, [sp, #32]
  411b18:	mov	x22, x2
  411b1c:	mov	x19, x1
  411b20:	bl	402700 <mbrtowc@plt>
  411b24:	mov	x21, x0
  411b28:	cbz	x22, 411b4c <wcrtomb@plt+0xed1c>
  411b2c:	cmn	x21, #0x2
  411b30:	b.cc	411b4c <wcrtomb@plt+0xed1c>  // b.lo, b.ul, b.last
  411b34:	mov	w0, wzr
  411b38:	bl	41ee1c <_obstack_memory_used@@Base+0xcf98>
  411b3c:	tbnz	w0, #0, 411b4c <wcrtomb@plt+0xed1c>
  411b40:	ldrb	w8, [x19]
  411b44:	mov	w21, #0x1                   	// #1
  411b48:	str	w8, [x20]
  411b4c:	mov	x0, x21
  411b50:	ldp	x20, x19, [sp, #48]
  411b54:	ldp	x22, x21, [sp, #32]
  411b58:	ldp	x29, x30, [sp, #16]
  411b5c:	add	sp, sp, #0x40
  411b60:	ret

0000000000411b64 <_obstack_begin@@Base>:
  411b64:	stp	x29, x30, [sp, #-16]!
  411b68:	ldrb	w8, [x0, #80]
  411b6c:	mov	x29, sp
  411b70:	stp	x3, x4, [x0, #56]
  411b74:	and	w8, w8, #0xfe
  411b78:	strb	w8, [x0, #80]
  411b7c:	bl	411b8c <_obstack_begin@@Base+0x28>
  411b80:	mov	w0, #0x1                   	// #1
  411b84:	ldp	x29, x30, [sp], #16
  411b88:	ret
  411b8c:	stp	x29, x30, [sp, #-48]!
  411b90:	cmp	x2, #0x0
  411b94:	mov	w8, #0x10                  	// #16
  411b98:	stp	x20, x19, [sp, #32]
  411b9c:	mov	w9, #0xfe0                 	// #4064
  411ba0:	csel	x20, x8, x2, eq  // eq = none
  411ba4:	cmp	x1, #0x0
  411ba8:	str	x21, [sp, #16]
  411bac:	csel	x1, x9, x1, eq  // eq = none
  411bb0:	sub	x21, x20, #0x1
  411bb4:	mov	x29, sp
  411bb8:	mov	x19, x0
  411bbc:	str	x1, [x0]
  411bc0:	str	x21, [x0, #48]
  411bc4:	bl	411d5c <_obstack_newchunk@@Base+0x110>
  411bc8:	str	x0, [x19, #8]
  411bcc:	cbz	x0, 411c14 <_obstack_begin@@Base+0xb0>
  411bd0:	ldr	x10, [x19]
  411bd4:	add	x8, x0, x21
  411bd8:	neg	x9, x20
  411bdc:	add	x8, x8, #0x10
  411be0:	and	x8, x8, x9
  411be4:	stp	x8, x8, [x19, #16]
  411be8:	add	x8, x0, x10
  411bec:	str	x8, [x0]
  411bf0:	str	x8, [x19, #32]
  411bf4:	str	xzr, [x0, #8]
  411bf8:	ldrb	w8, [x19, #80]
  411bfc:	ldr	x21, [sp, #16]
  411c00:	and	w8, w8, #0xfffffff9
  411c04:	strb	w8, [x19, #80]
  411c08:	ldp	x20, x19, [sp, #32]
  411c0c:	ldp	x29, x30, [sp], #48
  411c10:	ret
  411c14:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  411c18:	ldr	x8, [x8, #1256]
  411c1c:	blr	x8

0000000000411c20 <_obstack_begin_1@@Base>:
  411c20:	stp	x29, x30, [sp, #-16]!
  411c24:	ldrb	w8, [x0, #80]
  411c28:	mov	x29, sp
  411c2c:	stp	x3, x4, [x0, #56]
  411c30:	str	x5, [x0, #72]
  411c34:	orr	w8, w8, #0x1
  411c38:	strb	w8, [x0, #80]
  411c3c:	bl	411b8c <_obstack_begin@@Base+0x28>
  411c40:	mov	w0, #0x1                   	// #1
  411c44:	ldp	x29, x30, [sp], #16
  411c48:	ret

0000000000411c4c <_obstack_newchunk@@Base>:
  411c4c:	stp	x29, x30, [sp, #-64]!
  411c50:	str	x23, [sp, #16]
  411c54:	stp	x22, x21, [sp, #32]
  411c58:	stp	x20, x19, [sp, #48]
  411c5c:	ldp	x9, x8, [x0, #16]
  411c60:	ldr	x10, [x0, #48]
  411c64:	ldp	x11, x21, [x0]
  411c68:	mov	x19, x0
  411c6c:	sub	x20, x8, x9
  411c70:	adds	x8, x20, x1
  411c74:	lsr	x9, x20, #3
  411c78:	cset	w12, cs  // cs = hs, nlast
  411c7c:	adds	x10, x8, x10
  411c80:	add	x9, x9, #0x64
  411c84:	cset	w8, cs  // cs = hs, nlast
  411c88:	adds	x9, x9, x10
  411c8c:	csel	x9, x10, x9, cs  // cs = hs, nlast
  411c90:	cmp	x9, x11
  411c94:	mov	x22, xzr
  411c98:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  411c9c:	mov	x29, sp
  411ca0:	tbnz	w12, #0, 411cb8 <_obstack_newchunk@@Base+0x6c>
  411ca4:	tbnz	w8, #0, 411cb8 <_obstack_newchunk@@Base+0x6c>
  411ca8:	mov	x0, x19
  411cac:	mov	x1, x23
  411cb0:	bl	411d5c <_obstack_newchunk@@Base+0x110>
  411cb4:	mov	x22, x0
  411cb8:	cbz	x22, 411d50 <_obstack_newchunk@@Base+0x104>
  411cbc:	add	x8, x22, x23
  411cc0:	str	x22, [x19, #8]
  411cc4:	str	x21, [x22, #8]
  411cc8:	str	x8, [x19, #32]
  411ccc:	str	x8, [x22]
  411cd0:	ldr	x8, [x19, #48]
  411cd4:	ldr	x1, [x19, #16]
  411cd8:	mov	x2, x20
  411cdc:	add	x9, x22, x8
  411ce0:	add	x9, x9, #0x10
  411ce4:	bic	x23, x9, x8
  411ce8:	mov	x0, x23
  411cec:	bl	402710 <memcpy@plt>
  411cf0:	ldrb	w8, [x19, #80]
  411cf4:	tbnz	w8, #1, 411d28 <_obstack_newchunk@@Base+0xdc>
  411cf8:	ldr	x8, [x19, #48]
  411cfc:	ldr	x9, [x19, #16]
  411d00:	add	x10, x21, x8
  411d04:	add	x10, x10, #0x10
  411d08:	bic	x8, x10, x8
  411d0c:	cmp	x9, x8
  411d10:	b.ne	411d28 <_obstack_newchunk@@Base+0xdc>  // b.any
  411d14:	ldr	x8, [x21, #8]
  411d18:	mov	x0, x19
  411d1c:	mov	x1, x21
  411d20:	str	x8, [x22, #8]
  411d24:	bl	411d94 <_obstack_newchunk@@Base+0x148>
  411d28:	ldrb	w8, [x19, #80]
  411d2c:	add	x9, x23, x20
  411d30:	stp	x23, x9, [x19, #16]
  411d34:	ldr	x23, [sp, #16]
  411d38:	and	w8, w8, #0xfffffffd
  411d3c:	strb	w8, [x19, #80]
  411d40:	ldp	x20, x19, [sp, #48]
  411d44:	ldp	x22, x21, [sp, #32]
  411d48:	ldp	x29, x30, [sp], #64
  411d4c:	ret
  411d50:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  411d54:	ldr	x8, [x8, #1256]
  411d58:	blr	x8
  411d5c:	stp	x29, x30, [sp, #-16]!
  411d60:	ldrb	w8, [x0, #80]
  411d64:	mov	x29, sp
  411d68:	tbnz	w8, #0, 411d80 <_obstack_newchunk@@Base+0x134>
  411d6c:	ldr	x8, [x0, #56]
  411d70:	mov	x0, x1
  411d74:	blr	x8
  411d78:	ldp	x29, x30, [sp], #16
  411d7c:	ret
  411d80:	ldr	x8, [x0, #56]
  411d84:	ldr	x0, [x0, #72]
  411d88:	blr	x8
  411d8c:	ldp	x29, x30, [sp], #16
  411d90:	ret
  411d94:	stp	x29, x30, [sp, #-16]!
  411d98:	ldrb	w8, [x0, #80]
  411d9c:	mov	x29, sp
  411da0:	tbnz	w8, #0, 411db8 <_obstack_newchunk@@Base+0x16c>
  411da4:	ldr	x8, [x0, #64]
  411da8:	mov	x0, x1
  411dac:	blr	x8
  411db0:	ldp	x29, x30, [sp], #16
  411db4:	ret
  411db8:	ldp	x8, x0, [x0, #64]
  411dbc:	blr	x8
  411dc0:	ldp	x29, x30, [sp], #16
  411dc4:	ret

0000000000411dc8 <_obstack_allocated_p@@Base>:
  411dc8:	ldr	x8, [x0, #8]
  411dcc:	b	411dd4 <_obstack_allocated_p@@Base+0xc>
  411dd0:	ldr	x8, [x8, #8]
  411dd4:	cmp	x8, #0x0
  411dd8:	cset	w9, ne  // ne = any
  411ddc:	cbz	x8, 411df4 <_obstack_allocated_p@@Base+0x2c>
  411de0:	cmp	x8, x1
  411de4:	b.cs	411dd0 <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  411de8:	ldr	x10, [x8]
  411dec:	cmp	x10, x1
  411df0:	b.cc	411dd0 <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  411df4:	and	w0, w9, #0x1
  411df8:	ret

0000000000411dfc <_obstack_free@@Base>:
  411dfc:	stp	x29, x30, [sp, #-48]!
  411e00:	stp	x20, x19, [sp, #32]
  411e04:	ldr	x8, [x0, #8]
  411e08:	mov	x20, x1
  411e0c:	str	x21, [sp, #16]
  411e10:	mov	x29, sp
  411e14:	cbz	x8, 411e6c <_obstack_free@@Base+0x70>
  411e18:	mov	x19, x0
  411e1c:	b	411e44 <_obstack_free@@Base+0x48>
  411e20:	ldr	x21, [x8, #8]
  411e24:	mov	x0, x19
  411e28:	mov	x1, x8
  411e2c:	bl	411d94 <_obstack_newchunk@@Base+0x148>
  411e30:	ldrb	w8, [x19, #80]
  411e34:	orr	w8, w8, #0x2
  411e38:	strb	w8, [x19, #80]
  411e3c:	mov	x8, x21
  411e40:	cbz	x21, 411e6c <_obstack_free@@Base+0x70>
  411e44:	cmp	x8, x20
  411e48:	b.cs	411e20 <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  411e4c:	ldr	x9, [x8]
  411e50:	cmp	x9, x20
  411e54:	b.cc	411e20 <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  411e58:	stp	x20, x20, [x19, #16]
  411e5c:	ldr	x9, [x8]
  411e60:	str	x8, [x19, #8]
  411e64:	str	x9, [x19, #32]
  411e68:	b	411e70 <_obstack_free@@Base+0x74>
  411e6c:	cbnz	x20, 411e80 <_obstack_free@@Base+0x84>
  411e70:	ldp	x20, x19, [sp, #32]
  411e74:	ldr	x21, [sp, #16]
  411e78:	ldp	x29, x30, [sp], #48
  411e7c:	ret
  411e80:	bl	402b00 <abort@plt>

0000000000411e84 <_obstack_memory_used@@Base>:
  411e84:	ldr	x8, [x0, #8]
  411e88:	cbz	x8, 411ea4 <_obstack_memory_used@@Base+0x20>
  411e8c:	mov	x0, xzr
  411e90:	sub	x10, x0, x8
  411e94:	ldp	x9, x8, [x8]
  411e98:	add	x0, x10, x9
  411e9c:	cbnz	x8, 411e90 <_obstack_memory_used@@Base+0xc>
  411ea0:	ret
  411ea4:	mov	x0, xzr
  411ea8:	ret
  411eac:	stp	x29, x30, [sp, #-32]!
  411eb0:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  411eb4:	str	x19, [sp, #16]
  411eb8:	ldr	x19, [x8, #1280]
  411ebc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xf17c>
  411ec0:	add	x1, x1, #0x373
  411ec4:	mov	w2, #0x5                   	// #5
  411ec8:	mov	x0, xzr
  411ecc:	mov	x29, sp
  411ed0:	bl	402d10 <dcgettext@plt>
  411ed4:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xf17c>
  411ed8:	mov	x3, x0
  411edc:	add	x2, x2, #0x5f
  411ee0:	mov	w1, #0x1                   	// #1
  411ee4:	mov	x0, x19
  411ee8:	bl	402b90 <__fprintf_chk@plt>
  411eec:	adrp	x8, 432000 <_obstack_memory_used@@Base+0x2017c>
  411ef0:	ldr	w0, [x8, #1264]
  411ef4:	bl	402780 <exit@plt>
  411ef8:	stp	x29, x30, [sp, #-16]!
  411efc:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  411f00:	ldr	x3, [x9, #3584]
  411f04:	ldrb	w9, [x2, #56]
  411f08:	mov	x8, x1
  411f0c:	mov	x1, x0
  411f10:	ubfx	x10, x3, #21, #11
  411f14:	and	w10, w10, #0x10
  411f18:	and	w9, w9, #0xffffffef
  411f1c:	orr	w9, w9, w10
  411f20:	orr	w9, w9, #0x80
  411f24:	strb	w9, [x2, #56]
  411f28:	mov	x0, x2
  411f2c:	mov	x2, x8
  411f30:	mov	x29, sp
  411f34:	bl	411f74 <_obstack_memory_used@@Base+0xf0>
  411f38:	cbz	w0, 411f68 <_obstack_memory_used@@Base+0xe4>
  411f3c:	adrp	x8, 421000 <_obstack_memory_used@@Base+0xf17c>
  411f40:	add	x8, x8, #0x658
  411f44:	ldr	x8, [x8, w0, sxtw #3]
  411f48:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xf17c>
  411f4c:	add	x9, x9, #0x4d6
  411f50:	mov	w2, #0x5                   	// #5
  411f54:	add	x1, x9, x8
  411f58:	mov	x0, xzr
  411f5c:	bl	402d10 <dcgettext@plt>
  411f60:	ldp	x29, x30, [sp], #16
  411f64:	ret
  411f68:	mov	x0, xzr
  411f6c:	ldp	x29, x30, [sp], #16
  411f70:	ret
  411f74:	sub	sp, sp, #0xe0
  411f78:	stp	x29, x30, [sp, #160]
  411f7c:	add	x29, sp, #0xa0
  411f80:	str	x23, [sp, #176]
  411f84:	stp	x22, x21, [sp, #192]
  411f88:	stp	x20, x19, [sp, #208]
  411f8c:	str	wzr, [x29, #28]
  411f90:	ldrb	w8, [x0, #56]
  411f94:	ldp	x20, x9, [x0]
  411f98:	mov	w10, #0x90                  	// #144
  411f9c:	mov	x21, x3
  411fa0:	mov	x22, x2
  411fa4:	mov	x23, x1
  411fa8:	mov	x19, x0
  411fac:	and	w8, w8, w10
  411fb0:	cmp	x9, #0xe7
  411fb4:	stp	xzr, x3, [x0, #16]
  411fb8:	str	xzr, [x0, #48]
  411fbc:	strb	w8, [x0, #56]
  411fc0:	b.ls	4120b0 <_obstack_memory_used@@Base+0x22c>  // b.plast
  411fc4:	mov	w8, #0xe8                  	// #232
  411fc8:	mov	x0, x20
  411fcc:	mov	x1, x22
  411fd0:	str	x8, [x19, #16]
  411fd4:	bl	413554 <_obstack_memory_used@@Base+0x16d0>
  411fd8:	str	w0, [x29, #28]
  411fdc:	cbnz	w0, 4120a0 <_obstack_memory_used@@Base+0x21c>
  411fe0:	ldr	x3, [x19, #40]
  411fe4:	ubfx	x4, x21, #22, #1
  411fe8:	add	x0, sp, #0x8
  411fec:	mov	x1, x23
  411ff0:	mov	x2, x22
  411ff4:	mov	x5, x20
  411ff8:	bl	41374c <_obstack_memory_used@@Base+0x18c8>
  411ffc:	str	w0, [x29, #28]
  412000:	cbnz	w0, 412090 <_obstack_memory_used@@Base+0x20c>
  412004:	add	x0, sp, #0x8
  412008:	add	x3, x29, #0x1c
  41200c:	mov	x1, x19
  412010:	mov	x2, x21
  412014:	str	xzr, [x19, #48]
  412018:	bl	413904 <_obstack_memory_used@@Base+0x1a80>
  41201c:	str	x0, [x20, #104]
  412020:	cbz	x0, 412090 <_obstack_memory_used@@Base+0x20c>
  412024:	mov	x0, x19
  412028:	bl	4139d8 <_obstack_memory_used@@Base+0x1b54>
  41202c:	str	w0, [x29, #28]
  412030:	cbnz	w0, 412090 <_obstack_memory_used@@Base+0x20c>
  412034:	tbnz	w21, #22, 412050 <_obstack_memory_used@@Base+0x1cc>
  412038:	ldrb	w8, [x20, #176]
  41203c:	tbz	w8, #2, 412050 <_obstack_memory_used@@Base+0x1cc>
  412040:	ldr	x8, [x19, #40]
  412044:	cbnz	x8, 412050 <_obstack_memory_used@@Base+0x1cc>
  412048:	mov	x0, x20
  41204c:	bl	413bb4 <_obstack_memory_used@@Base+0x1d30>
  412050:	mov	x0, x20
  412054:	bl	413d3c <_obstack_memory_used@@Base+0x1eb8>
  412058:	str	w0, [x29, #28]
  41205c:	mov	x0, x19
  412060:	bl	41387c <_obstack_memory_used@@Base+0x19f8>
  412064:	add	x0, sp, #0x8
  412068:	bl	4138c8 <_obstack_memory_used@@Base+0x1a44>
  41206c:	ldr	w8, [x29, #28]
  412070:	cbnz	w8, 4120a0 <_obstack_memory_used@@Base+0x21c>
  412074:	ldr	w0, [x29, #28]
  412078:	ldp	x20, x19, [sp, #208]
  41207c:	ldp	x22, x21, [sp, #192]
  412080:	ldr	x23, [sp, #176]
  412084:	ldp	x29, x30, [sp, #160]
  412088:	add	sp, sp, #0xe0
  41208c:	ret
  412090:	mov	x0, x19
  412094:	bl	41387c <_obstack_memory_used@@Base+0x19f8>
  412098:	add	x0, sp, #0x8
  41209c:	bl	4138c8 <_obstack_memory_used@@Base+0x1a44>
  4120a0:	mov	x0, x20
  4120a4:	bl	4126f8 <_obstack_memory_used@@Base+0x874>
  4120a8:	stp	xzr, xzr, [x19]
  4120ac:	b	412074 <_obstack_memory_used@@Base+0x1f0>
  4120b0:	mov	w1, #0xe8                  	// #232
  4120b4:	mov	x0, x20
  4120b8:	bl	402a40 <realloc@plt>
  4120bc:	cbz	x0, 4120d0 <_obstack_memory_used@@Base+0x24c>
  4120c0:	mov	x20, x0
  4120c4:	mov	w8, #0xe8                  	// #232
  4120c8:	stp	x0, x8, [x19]
  4120cc:	b	411fc4 <_obstack_memory_used@@Base+0x140>
  4120d0:	mov	w0, #0xc                   	// #12
  4120d4:	b	412078 <_obstack_memory_used@@Base+0x1f4>
  4120d8:	adrp	x9, 432000 <_obstack_memory_used@@Base+0x2017c>
  4120dc:	ldr	x8, [x9, #3584]
  4120e0:	str	x0, [x9, #3584]
  4120e4:	mov	x0, x8
  4120e8:	ret
  4120ec:	stp	x29, x30, [sp, #-48]!
  4120f0:	stp	x20, x19, [sp, #32]
  4120f4:	ldr	x20, [x0, #32]
  4120f8:	str	x21, [sp, #16]
  4120fc:	ldr	x21, [x0]
  412100:	movi	v0.2d, #0x0
  412104:	stp	q0, q0, [x20, #224]
  412108:	stp	q0, q0, [x20, #192]
  41210c:	stp	q0, q0, [x20, #160]
  412110:	stp	q0, q0, [x20, #128]
  412114:	stp	q0, q0, [x20, #96]
  412118:	stp	q0, q0, [x20, #64]
  41211c:	stp	q0, q0, [x20, #32]
  412120:	stp	q0, q0, [x20]
  412124:	ldr	x1, [x21, #72]
  412128:	mov	x2, x20
  41212c:	mov	x29, sp
  412130:	mov	x19, x0
  412134:	bl	4121a8 <_obstack_memory_used@@Base+0x324>
  412138:	ldp	x8, x1, [x21, #72]
  41213c:	cmp	x8, x1
  412140:	b.eq	412150 <_obstack_memory_used@@Base+0x2cc>  // b.none
  412144:	mov	x0, x19
  412148:	mov	x2, x20
  41214c:	bl	4121a8 <_obstack_memory_used@@Base+0x324>
  412150:	ldr	x8, [x21, #72]
  412154:	ldr	x1, [x21, #88]
  412158:	cmp	x8, x1
  41215c:	b.eq	41216c <_obstack_memory_used@@Base+0x2e8>  // b.none
  412160:	mov	x0, x19
  412164:	mov	x2, x20
  412168:	bl	4121a8 <_obstack_memory_used@@Base+0x324>
  41216c:	ldr	x8, [x21, #72]
  412170:	ldr	x1, [x21, #96]
  412174:	cmp	x8, x1
  412178:	b.eq	412188 <_obstack_memory_used@@Base+0x304>  // b.none
  41217c:	mov	x0, x19
  412180:	mov	x2, x20
  412184:	bl	4121a8 <_obstack_memory_used@@Base+0x324>
  412188:	ldrb	w8, [x19, #56]
  41218c:	ldr	x21, [sp, #16]
  412190:	mov	w0, wzr
  412194:	orr	w8, w8, #0x8
  412198:	strb	w8, [x19, #56]
  41219c:	ldp	x20, x19, [sp, #32]
  4121a0:	ldp	x29, x30, [sp], #48
  4121a4:	ret
  4121a8:	sub	sp, sp, #0x1a0
  4121ac:	stp	x29, x30, [sp, #320]
  4121b0:	stp	x28, x27, [sp, #336]
  4121b4:	stp	x26, x25, [sp, #352]
  4121b8:	stp	x24, x23, [sp, #368]
  4121bc:	stp	x22, x21, [sp, #384]
  4121c0:	stp	x20, x19, [sp, #400]
  4121c4:	ldr	x23, [x0]
  4121c8:	mov	x20, x2
  4121cc:	add	x29, sp, #0x140
  4121d0:	str	x0, [sp, #32]
  4121d4:	ldr	w8, [x23, #180]
  4121d8:	cmp	w8, #0x1
  4121dc:	b.ne	4121ec <_obstack_memory_used@@Base+0x368>  // b.any
  4121e0:	ldrb	w8, [x0, #26]
  4121e4:	ubfx	w24, w8, #6, #1
  4121e8:	b	4121f0 <_obstack_memory_used@@Base+0x36c>
  4121ec:	mov	w24, wzr
  4121f0:	ldr	x8, [x1, #16]
  4121f4:	cmp	x8, #0x1
  4121f8:	b.lt	412504 <_obstack_memory_used@@Base+0x680>  // b.tstop
  4121fc:	add	x8, sp, #0x28
  412200:	mov	x10, xzr
  412204:	mov	w27, #0x1                   	// #1
  412208:	orr	x8, x8, #0x1
  41220c:	stp	x8, x1, [sp, #8]
  412210:	b	412228 <_obstack_memory_used@@Base+0x3a4>
  412214:	ldp	x1, x10, [sp, #16]
  412218:	ldr	x8, [x1, #16]
  41221c:	add	x10, x10, #0x1
  412220:	cmp	x10, x8
  412224:	b.ge	412504 <_obstack_memory_used@@Base+0x680>  // b.tcont
  412228:	ldr	x8, [x1, #24]
  41222c:	str	x10, [sp, #24]
  412230:	ldr	x21, [x8, x10, lsl #3]
  412234:	ldr	x8, [x23]
  412238:	lsl	x22, x21, #4
  41223c:	add	x9, x8, x21, lsl #4
  412240:	ldrb	w8, [x9, #8]
  412244:	cmp	w8, #0x1
  412248:	b.eq	4122bc <_obstack_memory_used@@Base+0x438>  // b.none
  41224c:	cmp	w8, #0x6
  412250:	b.eq	4123a0 <_obstack_memory_used@@Base+0x51c>  // b.none
  412254:	cmp	w8, #0x3
  412258:	b.ne	41240c <_obstack_memory_used@@Base+0x588>  // b.any
  41225c:	mov	x26, xzr
  412260:	mov	x28, xzr
  412264:	b	412278 <_obstack_memory_used@@Base+0x3f4>
  412268:	add	x26, x26, #0x1
  41226c:	cmp	x26, #0x4
  412270:	add	x28, x21, w28, sxtw
  412274:	b.eq	412214 <_obstack_memory_used@@Base+0x390>  // b.none
  412278:	ldr	x8, [x23]
  41227c:	mov	x21, xzr
  412280:	add	x25, x20, w28, sxtw
  412284:	ldr	x8, [x8, x22]
  412288:	ldr	x19, [x8, x26, lsl #3]
  41228c:	b	41229c <_obstack_memory_used@@Base+0x418>
  412290:	add	x21, x21, #0x1
  412294:	cmp	x21, #0x40
  412298:	b.eq	412268 <_obstack_memory_used@@Base+0x3e4>  // b.none
  41229c:	lsr	x8, x19, x21
  4122a0:	tbz	w8, #0, 412290 <_obstack_memory_used@@Base+0x40c>
  4122a4:	strb	w27, [x25, x21]
  4122a8:	cbz	w24, 412290 <_obstack_memory_used@@Base+0x40c>
  4122ac:	add	w0, w28, w21
  4122b0:	bl	402db0 <tolower@plt>
  4122b4:	strb	w27, [x20, w0, sxtw]
  4122b8:	b	412290 <_obstack_memory_used@@Base+0x40c>
  4122bc:	ldrb	w0, [x9]
  4122c0:	strb	w27, [x20, x0]
  4122c4:	cbz	w24, 4122d0 <_obstack_memory_used@@Base+0x44c>
  4122c8:	bl	402db0 <tolower@plt>
  4122cc:	strb	w27, [x20, w0, sxtw]
  4122d0:	ldr	x8, [sp, #32]
  4122d4:	ldrb	w8, [x8, #26]
  4122d8:	tbz	w8, #6, 412214 <_obstack_memory_used@@Base+0x390>
  4122dc:	ldr	w8, [x23, #180]
  4122e0:	cmp	w8, #0x2
  4122e4:	b.lt	412214 <_obstack_memory_used@@Base+0x390>  // b.tstop
  4122e8:	ldr	x8, [x23]
  4122ec:	add	x9, x21, #0x1
  4122f0:	mov	w13, #0x1                   	// #1
  4122f4:	movk	w13, #0x20, lsl #16
  4122f8:	ldrb	w8, [x8, x22]
  4122fc:	strb	w8, [sp, #40]
  412300:	ldr	x8, [x23, #16]
  412304:	cmp	x9, x8
  412308:	ldr	x8, [sp, #8]
  41230c:	b.cs	41234c <_obstack_memory_used@@Base+0x4c8>  // b.hs, b.nlast
  412310:	ldr	x8, [sp, #8]
  412314:	ldr	x10, [x23]
  412318:	add	w12, w13, #0xfe
  41231c:	add	x10, x10, x22
  412320:	ldr	w11, [x10, #24]
  412324:	and	w11, w11, w12
  412328:	cmp	w11, w13
  41232c:	b.ne	41234c <_obstack_memory_used@@Base+0x4c8>  // b.any
  412330:	ldrb	w10, [x10, #16]
  412334:	add	x9, x9, #0x1
  412338:	add	x22, x22, #0x10
  41233c:	strb	w10, [x8], #1
  412340:	ldr	x10, [x23, #16]
  412344:	cmp	x9, x10
  412348:	b.cc	412314 <_obstack_memory_used@@Base+0x490>  // b.lo, b.ul, b.last
  41234c:	add	x9, sp, #0x28
  412350:	sub	x22, x8, x9
  412354:	sub	x0, x29, #0xc
  412358:	add	x1, sp, #0x28
  41235c:	sub	x3, x29, #0x18
  412360:	mov	x2, x22
  412364:	stur	xzr, [x29, #-24]
  412368:	bl	411af4 <wcrtomb@plt+0xecc4>
  41236c:	cmp	x0, x22
  412370:	b.ne	412214 <_obstack_memory_used@@Base+0x390>  // b.any
  412374:	ldur	w0, [x29, #-12]
  412378:	bl	402df0 <towlower@plt>
  41237c:	mov	w1, w0
  412380:	add	x0, sp, #0x28
  412384:	sub	x2, x29, #0x18
  412388:	bl	402e30 <wcrtomb@plt>
  41238c:	cmn	x0, #0x1
  412390:	b.eq	412214 <_obstack_memory_used@@Base+0x390>  // b.none
  412394:	ldrb	w8, [sp, #40]
  412398:	strb	w27, [x20, x8]
  41239c:	b	412214 <_obstack_memory_used@@Base+0x390>
  4123a0:	ldr	w8, [x23, #180]
  4123a4:	ldr	x22, [x9]
  4123a8:	cmp	w8, #0x2
  4123ac:	b.lt	412428 <_obstack_memory_used@@Base+0x5a4>  // b.tstop
  4123b0:	ldr	x8, [x22, #72]
  4123b4:	cbnz	x8, 4123c8 <_obstack_memory_used@@Base+0x544>
  4123b8:	ldrb	w8, [x22, #32]
  4123bc:	tbnz	w8, #0, 4123c8 <_obstack_memory_used@@Base+0x544>
  4123c0:	ldr	x8, [x22, #64]
  4123c4:	cbz	x8, 412428 <_obstack_memory_used@@Base+0x5a4>
  4123c8:	sturb	wzr, [x29, #-24]
  4123cc:	b	4123e0 <_obstack_memory_used@@Base+0x55c>
  4123d0:	ldurb	w8, [x29, #-24]
  4123d4:	add	w8, w8, #0x1
  4123d8:	sturb	w8, [x29, #-24]
  4123dc:	tbnz	w8, #8, 412214 <_obstack_memory_used@@Base+0x390>
  4123e0:	sub	x1, x29, #0x18
  4123e4:	add	x3, sp, #0x28
  4123e8:	mov	w2, #0x1                   	// #1
  4123ec:	mov	x0, xzr
  4123f0:	str	xzr, [sp, #40]
  4123f4:	bl	411af4 <wcrtomb@plt+0xecc4>
  4123f8:	cmn	x0, #0x2
  4123fc:	b.ne	4123d0 <_obstack_memory_used@@Base+0x54c>  // b.any
  412400:	ldurb	w8, [x29, #-24]
  412404:	strb	w27, [x20, x8]
  412408:	b	4123d0 <_obstack_memory_used@@Base+0x54c>
  41240c:	cmp	w8, #0x7
  412410:	b.hi	412214 <_obstack_memory_used@@Base+0x390>  // b.pmore
  412414:	lsl	w9, w27, w8
  412418:	mov	w10, #0xa4                  	// #164
  41241c:	tst	w9, w10
  412420:	b.eq	412214 <_obstack_memory_used@@Base+0x390>  // b.none
  412424:	b	4124c8 <_obstack_memory_used@@Base+0x644>
  412428:	ldr	x8, [x22, #40]
  41242c:	cmp	x8, #0x1
  412430:	b.lt	412214 <_obstack_memory_used@@Base+0x390>  // b.tstop
  412434:	mov	x26, xzr
  412438:	b	41244c <_obstack_memory_used@@Base+0x5c8>
  41243c:	ldr	x8, [x22, #40]
  412440:	add	x26, x26, #0x1
  412444:	cmp	x26, x8
  412448:	b.ge	412214 <_obstack_memory_used@@Base+0x390>  // b.tcont
  41244c:	stur	xzr, [x29, #-24]
  412450:	ldr	x8, [x22]
  412454:	add	x0, sp, #0x28
  412458:	sub	x2, x29, #0x18
  41245c:	ldr	w1, [x8, x26, lsl #2]
  412460:	bl	402e30 <wcrtomb@plt>
  412464:	cmn	x0, #0x1
  412468:	b.eq	412480 <_obstack_memory_used@@Base+0x5fc>  // b.none
  41246c:	ldrb	w0, [sp, #40]
  412470:	strb	w27, [x20, x0]
  412474:	cbz	w24, 412480 <_obstack_memory_used@@Base+0x5fc>
  412478:	bl	402db0 <tolower@plt>
  41247c:	strb	w27, [x20, w0, sxtw]
  412480:	ldr	x8, [sp, #32]
  412484:	ldrb	w8, [x8, #26]
  412488:	tbz	w8, #6, 41243c <_obstack_memory_used@@Base+0x5b8>
  41248c:	ldr	w8, [x23, #180]
  412490:	cmp	w8, #0x2
  412494:	b.lt	41243c <_obstack_memory_used@@Base+0x5b8>  // b.tstop
  412498:	ldr	x8, [x22]
  41249c:	ldr	w0, [x8, x26, lsl #2]
  4124a0:	bl	402df0 <towlower@plt>
  4124a4:	mov	w1, w0
  4124a8:	add	x0, sp, #0x28
  4124ac:	sub	x2, x29, #0x18
  4124b0:	bl	402e30 <wcrtomb@plt>
  4124b4:	cmn	x0, #0x1
  4124b8:	b.eq	41243c <_obstack_memory_used@@Base+0x5b8>  // b.none
  4124bc:	ldrb	w8, [sp, #40]
  4124c0:	strb	w27, [x20, x8]
  4124c4:	b	41243c <_obstack_memory_used@@Base+0x5b8>
  4124c8:	movi	v0.16b, #0x1
  4124cc:	cmp	w8, #0x2
  4124d0:	stp	q0, q0, [x20, #224]
  4124d4:	stp	q0, q0, [x20, #192]
  4124d8:	stp	q0, q0, [x20, #160]
  4124dc:	stp	q0, q0, [x20, #128]
  4124e0:	stp	q0, q0, [x20, #96]
  4124e4:	stp	q0, q0, [x20, #64]
  4124e8:	stp	q0, q0, [x20, #32]
  4124ec:	stp	q0, q0, [x20]
  4124f0:	b.ne	412504 <_obstack_memory_used@@Base+0x680>  // b.any
  4124f4:	ldr	x9, [sp, #32]
  4124f8:	ldrb	w8, [x9, #56]
  4124fc:	orr	w8, w8, #0x1
  412500:	strb	w8, [x9, #56]
  412504:	ldp	x20, x19, [sp, #400]
  412508:	ldp	x22, x21, [sp, #384]
  41250c:	ldp	x24, x23, [sp, #368]
  412510:	ldp	x26, x25, [sp, #352]
  412514:	ldp	x28, x27, [sp, #336]
  412518:	ldp	x29, x30, [sp, #320]
  41251c:	add	sp, sp, #0x1a0
  412520:	ret
  412524:	stp	x29, x30, [sp, #-48]!
  412528:	stp	x20, x19, [sp, #32]
  41252c:	mov	x19, x0
  412530:	stp	xzr, xzr, [x0]
  412534:	str	xzr, [x0, #16]
  412538:	mov	w0, #0x100                 	// #256
  41253c:	stp	x22, x21, [sp, #16]
  412540:	mov	x29, sp
  412544:	mov	w21, w2
  412548:	mov	x20, x1
  41254c:	bl	4028e0 <malloc@plt>
  412550:	str	x0, [x19, #32]
  412554:	cbz	x0, 41260c <_obstack_memory_used@@Base+0x788>
  412558:	mov	w8, #0xb2fc                	// #45820
  41255c:	mov	w9, #0x2c6                 	// #710
  412560:	tst	w21, #0x1
  412564:	movk	w8, #0x3, lsl #16
  412568:	movk	w9, #0x101, lsl #16
  41256c:	lsl	w10, w21, #21
  412570:	csel	x8, x9, x8, eq  // eq = none
  412574:	and	w9, w10, #0x400000
  412578:	orr	x22, x8, x9
  41257c:	tbnz	w21, #2, 41258c <_obstack_memory_used@@Base+0x708>
  412580:	ldrb	w8, [x19, #56]
  412584:	and	w8, w8, #0x7f
  412588:	b	4125a4 <_obstack_memory_used@@Base+0x720>
  41258c:	ldrb	w8, [x19, #56]
  412590:	mov	w9, #0xb2be                	// #45758
  412594:	movk	w9, #0x143, lsl #16
  412598:	and	x9, x22, x9
  41259c:	orr	x22, x9, #0x100
  4125a0:	orr	w8, w8, #0x80
  4125a4:	strb	w8, [x19, #56]
  4125a8:	and	w8, w8, #0xff
  4125ac:	lsl	w9, w21, #1
  4125b0:	and	w9, w9, #0x10
  4125b4:	and	w8, w8, #0xffffffef
  4125b8:	orr	w8, w8, w9
  4125bc:	mov	x0, x20
  4125c0:	strb	w8, [x19, #56]
  4125c4:	str	xzr, [x19, #40]
  4125c8:	bl	402750 <strlen@plt>
  4125cc:	mov	x2, x0
  4125d0:	mov	x0, x19
  4125d4:	mov	x1, x20
  4125d8:	mov	x3, x22
  4125dc:	bl	411f74 <_obstack_memory_used@@Base+0xf0>
  4125e0:	cmp	w0, #0x10
  4125e4:	mov	w8, #0x8                   	// #8
  4125e8:	csel	w20, w8, w0, eq  // eq = none
  4125ec:	cbnz	w20, 412614 <_obstack_memory_used@@Base+0x790>
  4125f0:	mov	x0, x19
  4125f4:	bl	4120ec <_obstack_memory_used@@Base+0x268>
  4125f8:	mov	w0, w20
  4125fc:	ldp	x20, x19, [sp, #32]
  412600:	ldp	x22, x21, [sp, #16]
  412604:	ldp	x29, x30, [sp], #48
  412608:	ret
  41260c:	mov	w20, #0xc                   	// #12
  412610:	b	4125f8 <_obstack_memory_used@@Base+0x774>
  412614:	ldr	x0, [x19, #32]
  412618:	bl	402bd0 <free@plt>
  41261c:	str	xzr, [x19, #32]
  412620:	b	4125f8 <_obstack_memory_used@@Base+0x774>
  412624:	stp	x29, x30, [sp, #-48]!
  412628:	cmp	w0, #0x11
  41262c:	stp	x22, x21, [sp, #16]
  412630:	stp	x20, x19, [sp, #32]
  412634:	mov	x29, sp
  412638:	b.cs	4126b0 <_obstack_memory_used@@Base+0x82c>  // b.hs, b.nlast
  41263c:	adrp	x8, 421000 <_obstack_memory_used@@Base+0xf17c>
  412640:	add	x8, x8, #0x658
  412644:	ldr	x8, [x8, w0, sxtw #3]
  412648:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xf17c>
  41264c:	add	x9, x9, #0x4d6
  412650:	mov	x19, x2
  412654:	add	x1, x9, x8
  412658:	mov	w2, #0x5                   	// #5
  41265c:	mov	x0, xzr
  412660:	mov	x20, x3
  412664:	bl	402d10 <dcgettext@plt>
  412668:	mov	x21, x0
  41266c:	bl	402750 <strlen@plt>
  412670:	add	x22, x0, #0x1
  412674:	cbz	x20, 412690 <_obstack_memory_used@@Base+0x80c>
  412678:	cmp	x22, x20
  41267c:	mov	x2, x22
  412680:	b.hi	4126a4 <_obstack_memory_used@@Base+0x820>  // b.pmore
  412684:	mov	x0, x19
  412688:	mov	x1, x21
  41268c:	bl	402710 <memcpy@plt>
  412690:	mov	x0, x22
  412694:	ldp	x20, x19, [sp, #32]
  412698:	ldp	x22, x21, [sp, #16]
  41269c:	ldp	x29, x30, [sp], #48
  4126a0:	ret
  4126a4:	sub	x2, x20, #0x1
  4126a8:	strb	wzr, [x19, x2]
  4126ac:	b	412684 <_obstack_memory_used@@Base+0x800>
  4126b0:	bl	402b00 <abort@plt>
  4126b4:	stp	x29, x30, [sp, #-32]!
  4126b8:	str	x19, [sp, #16]
  4126bc:	mov	x19, x0
  4126c0:	ldr	x0, [x0]
  4126c4:	mov	x29, sp
  4126c8:	cbz	x0, 4126d0 <_obstack_memory_used@@Base+0x84c>
  4126cc:	bl	4126f8 <_obstack_memory_used@@Base+0x874>
  4126d0:	ldr	x0, [x19, #32]
  4126d4:	stp	xzr, xzr, [x19]
  4126d8:	bl	402bd0 <free@plt>
  4126dc:	ldr	x0, [x19, #40]
  4126e0:	str	xzr, [x19, #32]
  4126e4:	bl	402bd0 <free@plt>
  4126e8:	str	xzr, [x19, #40]
  4126ec:	ldr	x19, [sp, #16]
  4126f0:	ldp	x29, x30, [sp], #32
  4126f4:	ret
  4126f8:	stp	x29, x30, [sp, #-64]!
  4126fc:	stp	x24, x23, [sp, #16]
  412700:	stp	x22, x21, [sp, #32]
  412704:	stp	x20, x19, [sp, #48]
  412708:	ldr	x8, [x0]
  41270c:	mov	x19, x0
  412710:	mov	x29, sp
  412714:	cbz	x8, 412748 <_obstack_memory_used@@Base+0x8c4>
  412718:	ldr	x8, [x19, #16]
  41271c:	cbz	x8, 412748 <_obstack_memory_used@@Base+0x8c4>
  412720:	mov	x20, xzr
  412724:	mov	x21, xzr
  412728:	ldr	x8, [x19]
  41272c:	add	x0, x8, x20
  412730:	bl	41345c <_obstack_memory_used@@Base+0x15d8>
  412734:	ldr	x8, [x19, #16]
  412738:	add	x21, x21, #0x1
  41273c:	add	x20, x20, #0x10
  412740:	cmp	x21, x8
  412744:	b.cc	412728 <_obstack_memory_used@@Base+0x8a4>  // b.lo, b.ul, b.last
  412748:	ldr	x0, [x19, #24]
  41274c:	bl	402bd0 <free@plt>
  412750:	ldr	x8, [x19, #16]
  412754:	cbz	x8, 4127ac <_obstack_memory_used@@Base+0x928>
  412758:	mov	x20, xzr
  41275c:	mov	w21, #0x10                  	// #16
  412760:	b	412778 <_obstack_memory_used@@Base+0x8f4>
  412764:	ldr	x8, [x19, #16]
  412768:	add	x20, x20, #0x1
  41276c:	add	x21, x21, #0x18
  412770:	cmp	x20, x8
  412774:	b.cs	4127ac <_obstack_memory_used@@Base+0x928>  // b.hs, b.nlast
  412778:	ldr	x8, [x19, #48]
  41277c:	cbz	x8, 412788 <_obstack_memory_used@@Base+0x904>
  412780:	ldr	x0, [x8, x21]
  412784:	bl	402bd0 <free@plt>
  412788:	ldr	x8, [x19, #56]
  41278c:	cbz	x8, 412798 <_obstack_memory_used@@Base+0x914>
  412790:	ldr	x0, [x8, x21]
  412794:	bl	402bd0 <free@plt>
  412798:	ldr	x8, [x19, #40]
  41279c:	cbz	x8, 412764 <_obstack_memory_used@@Base+0x8e0>
  4127a0:	ldr	x0, [x8, x21]
  4127a4:	bl	402bd0 <free@plt>
  4127a8:	b	412764 <_obstack_memory_used@@Base+0x8e0>
  4127ac:	ldr	x0, [x19, #40]
  4127b0:	bl	402bd0 <free@plt>
  4127b4:	ldr	x0, [x19, #48]
  4127b8:	bl	402bd0 <free@plt>
  4127bc:	ldr	x0, [x19, #56]
  4127c0:	bl	402bd0 <free@plt>
  4127c4:	ldr	x0, [x19]
  4127c8:	bl	402bd0 <free@plt>
  4127cc:	ldr	x8, [x19, #64]
  4127d0:	cbz	x8, 412834 <_obstack_memory_used@@Base+0x9b0>
  4127d4:	mov	x20, xzr
  4127d8:	mov	w21, #0x18                  	// #24
  4127dc:	b	4127f8 <_obstack_memory_used@@Base+0x974>
  4127e0:	ldr	x0, [x22]
  4127e4:	bl	402bd0 <free@plt>
  4127e8:	ldr	x8, [x19, #136]
  4127ec:	cmp	x20, x8
  4127f0:	add	x20, x20, #0x1
  4127f4:	b.cs	412834 <_obstack_memory_used@@Base+0x9b0>  // b.hs, b.nlast
  4127f8:	ldr	x8, [x19, #64]
  4127fc:	madd	x23, x20, x21, x8
  412800:	mov	x22, x23
  412804:	ldr	x8, [x22], #16
  412808:	cmp	x8, #0x1
  41280c:	b.lt	4127e0 <_obstack_memory_used@@Base+0x95c>  // b.tstop
  412810:	mov	x24, xzr
  412814:	ldr	x8, [x22]
  412818:	ldr	x0, [x8, x24, lsl #3]
  41281c:	bl	4134a4 <_obstack_memory_used@@Base+0x1620>
  412820:	ldr	x8, [x23]
  412824:	add	x24, x24, #0x1
  412828:	cmp	x24, x8
  41282c:	b.lt	412814 <_obstack_memory_used@@Base+0x990>  // b.tstop
  412830:	b	4127e0 <_obstack_memory_used@@Base+0x95c>
  412834:	ldr	x0, [x19, #64]
  412838:	bl	402bd0 <free@plt>
  41283c:	ldr	x0, [x19, #120]
  412840:	adrp	x8, 421000 <_obstack_memory_used@@Base+0xf17c>
  412844:	add	x8, x8, #0x6e0
  412848:	cmp	x0, x8
  41284c:	b.eq	412854 <_obstack_memory_used@@Base+0x9d0>  // b.none
  412850:	bl	402bd0 <free@plt>
  412854:	ldr	x0, [x19, #224]
  412858:	bl	402bd0 <free@plt>
  41285c:	mov	x0, x19
  412860:	bl	402bd0 <free@plt>
  412864:	ldp	x20, x19, [sp, #48]
  412868:	ldp	x22, x21, [sp, #32]
  41286c:	ldp	x24, x23, [sp, #16]
  412870:	ldp	x29, x30, [sp], #64
  412874:	ret
  412878:	cmp	w4, #0x7
  41287c:	b.ls	412888 <_obstack_memory_used@@Base+0xa04>  // b.plast
  412880:	mov	w0, #0x2                   	// #2
  412884:	ret
  412888:	sub	sp, sp, #0x50
  41288c:	str	x23, [sp, #32]
  412890:	stp	x22, x21, [sp, #48]
  412894:	stp	x20, x19, [sp, #64]
  412898:	mov	w22, w4
  41289c:	mov	x19, x3
  4128a0:	mov	x21, x2
  4128a4:	mov	x20, x1
  4128a8:	mov	x23, x0
  4128ac:	stp	x29, x30, [sp, #16]
  4128b0:	add	x29, sp, #0x10
  4128b4:	tbnz	w4, #2, 4128f0 <_obstack_memory_used@@Base+0xa6c>
  4128b8:	mov	x0, x20
  4128bc:	bl	402750 <strlen@plt>
  4128c0:	mov	x2, x0
  4128c4:	mov	x3, xzr
  4128c8:	ldrb	w8, [x23, #56]
  4128cc:	tbz	w8, #4, 4128fc <_obstack_memory_used@@Base+0xa78>
  4128d0:	str	w22, [sp]
  4128d4:	mov	x0, x23
  4128d8:	mov	x1, x20
  4128dc:	mov	x4, x2
  4128e0:	mov	x5, x2
  4128e4:	mov	x6, xzr
  4128e8:	mov	x7, xzr
  4128ec:	b	412918 <_obstack_memory_used@@Base+0xa94>
  4128f0:	ldp	x3, x2, [x19]
  4128f4:	ldrb	w8, [x23, #56]
  4128f8:	tbnz	w8, #4, 4128d0 <_obstack_memory_used@@Base+0xa4c>
  4128fc:	mov	x0, x23
  412900:	mov	x1, x20
  412904:	mov	x4, x2
  412908:	mov	x5, x2
  41290c:	mov	x6, x21
  412910:	mov	x7, x19
  412914:	str	w22, [sp]
  412918:	bl	41293c <_obstack_memory_used@@Base+0xab8>
  41291c:	ldp	x20, x19, [sp, #64]
  412920:	ldp	x22, x21, [sp, #48]
  412924:	ldr	x23, [sp, #32]
  412928:	ldp	x29, x30, [sp, #16]
  41292c:	cmp	w0, #0x0
  412930:	cset	w0, ne  // ne = any
  412934:	add	sp, sp, #0x50
  412938:	ret
  41293c:	sub	sp, sp, #0x1c0
  412940:	stp	x29, x30, [sp, #352]
  412944:	stp	x28, x27, [sp, #368]
  412948:	stp	x26, x25, [sp, #384]
  41294c:	stp	x24, x23, [sp, #400]
  412950:	stp	x22, x21, [sp, #416]
  412954:	stp	x20, x19, [sp, #432]
  412958:	ldr	x23, [x0]
  41295c:	movi	v0.2d, #0x0
  412960:	stp	q0, q0, [sp, #304]
  412964:	stp	q0, q0, [sp, #272]
  412968:	stp	q0, q0, [sp, #240]
  41296c:	stp	q0, q0, [sp, #208]
  412970:	stp	q0, q0, [sp, #176]
  412974:	stp	q0, q0, [sp, #144]
  412978:	stp	q0, q0, [sp, #112]
  41297c:	stp	q0, q0, [sp, #80]
  412980:	str	x23, [sp, #232]
  412984:	ldr	x8, [x0, #32]
  412988:	mov	x28, x5
  41298c:	mov	x19, x3
  412990:	mov	x24, x2
  412994:	mov	x22, x0
  412998:	mov	x25, x1
  41299c:	add	x29, sp, #0x160
  4129a0:	cbz	x8, 4129c0 <_obstack_memory_used@@Base+0xb3c>
  4129a4:	ldrb	w9, [x22, #56]
  4129a8:	mov	w10, #0x9                   	// #9
  4129ac:	and	w9, w9, w10
  4129b0:	cmp	w9, #0x8
  4129b4:	ccmp	x19, x4, #0x4, eq  // eq = none
  4129b8:	csel	x21, x8, xzr, ne  // ne = any
  4129bc:	b	4129c4 <_obstack_memory_used@@Base+0xb40>
  4129c0:	mov	x21, xzr
  4129c4:	ldr	x8, [x22, #48]
  4129c8:	ldr	x9, [x22, #16]
  4129cc:	mvn	x10, x8
  4129d0:	add	x10, x10, x6
  4129d4:	cmp	x8, x6
  4129d8:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  4129dc:	cbz	x9, 412f08 <_obstack_memory_used@@Base+0x1084>
  4129e0:	ldr	x10, [x23, #72]
  4129e4:	cbz	x10, 412f08 <_obstack_memory_used@@Base+0x1084>
  4129e8:	ldr	x9, [x23, #80]
  4129ec:	cbz	x9, 412f08 <_obstack_memory_used@@Base+0x1084>
  4129f0:	ldr	x8, [x23, #88]
  4129f4:	cbz	x8, 412f08 <_obstack_memory_used@@Base+0x1084>
  4129f8:	ldr	x11, [x23, #96]
  4129fc:	cbz	x11, 412f08 <_obstack_memory_used@@Base+0x1084>
  412a00:	ldr	x10, [x10, #16]
  412a04:	ldr	x26, [x22, #40]
  412a08:	str	x7, [sp, #32]
  412a0c:	cbnz	x10, 412a18 <_obstack_memory_used@@Base+0xb94>
  412a10:	ldr	x9, [x9, #16]
  412a14:	cbz	x9, 412ee8 <_obstack_memory_used@@Base+0x1064>
  412a18:	mov	x20, x4
  412a1c:	sub	x8, x6, x12
  412a20:	str	x12, [sp, #24]
  412a24:	str	x8, [sp, #64]
  412a28:	str	x6, [sp]
  412a2c:	cbz	x8, 412a38 <_obstack_memory_used@@Base+0xbb4>
  412a30:	mov	w8, #0x1                   	// #1
  412a34:	b	412a44 <_obstack_memory_used@@Base+0xbc0>
  412a38:	ldr	x8, [x23, #152]
  412a3c:	cmp	x8, #0x0
  412a40:	cset	w8, ne  // ne = any
  412a44:	str	w8, [sp, #44]
  412a48:	ldr	x8, [x23, #16]
  412a4c:	ldr	x9, [x22, #24]
  412a50:	add	x0, sp, #0x50
  412a54:	mov	x1, x25
  412a58:	add	x3, x8, #0x1
  412a5c:	ubfx	x5, x9, #22, #1
  412a60:	mov	x2, x24
  412a64:	mov	x4, x26
  412a68:	mov	x6, x23
  412a6c:	bl	418e80 <_obstack_memory_used@@Base+0x6ffc>
  412a70:	str	x23, [sp, #56]
  412a74:	cbnz	w0, 413060 <_obstack_memory_used@@Base+0x11dc>
  412a78:	stp	x28, x28, [sp, #176]
  412a7c:	ldrb	w8, [x22, #56]
  412a80:	ldr	w28, [x29, #96]
  412a84:	add	x0, sp, #0x50
  412a88:	lsr	w8, w8, #7
  412a8c:	strb	w8, [sp, #221]
  412a90:	ldr	x8, [x23, #152]
  412a94:	mov	w1, w28
  412a98:	lsl	x2, x8, #1
  412a9c:	bl	418f3c <_obstack_memory_used@@Base+0x70b8>
  412aa0:	cbnz	w0, 413060 <_obstack_memory_used@@Base+0x11dc>
  412aa4:	ldr	x8, [sp, #64]
  412aa8:	cmp	x8, #0x1
  412aac:	b.hi	412ab8 <_obstack_memory_used@@Base+0xc34>  // b.pmore
  412ab0:	ldrb	w8, [x23, #176]
  412ab4:	tbz	w8, #1, 412adc <_obstack_memory_used@@Base+0xc58>
  412ab8:	ldr	x8, [sp, #144]
  412abc:	mov	x9, #0x1ffffffffffffffe    	// #2305843009213693950
  412ac0:	cmp	x8, x9
  412ac4:	b.hi	413068 <_obstack_memory_used@@Base+0x11e4>  // b.pmore
  412ac8:	lsl	x8, x8, #3
  412acc:	add	x0, x8, #0x8
  412ad0:	bl	4028e0 <malloc@plt>
  412ad4:	str	x0, [sp, #264]
  412ad8:	cbz	x0, 413068 <_obstack_memory_used@@Base+0x11e4>
  412adc:	tst	w28, #0x1
  412ae0:	mov	w8, #0x4                   	// #4
  412ae4:	mov	w9, #0x6                   	// #6
  412ae8:	csel	w8, w9, w8, eq  // eq = none
  412aec:	stur	x19, [x29, #-16]
  412af0:	str	w8, [sp, #192]
  412af4:	ldr	w10, [x23, #180]
  412af8:	cmp	x20, x19
  412afc:	mov	w8, #0xffffffff            	// #-1
  412b00:	str	w28, [sp, #52]
  412b04:	cneg	w8, w8, ge  // ge = tcont
  412b08:	csel	x28, x20, x19, lt  // lt = tstop
  412b0c:	csel	x23, x19, x20, lt  // lt = tstop
  412b10:	str	w10, [sp, #48]
  412b14:	cbz	x21, 412b28 <_obstack_memory_used@@Base+0xca4>
  412b18:	cmp	w10, #0x1
  412b1c:	b.ne	412b30 <_obstack_memory_used@@Base+0xcac>  // b.any
  412b20:	mov	w9, #0x4                   	// #4
  412b24:	b	412b48 <_obstack_memory_used@@Base+0xcc4>
  412b28:	mov	w9, #0x8                   	// #8
  412b2c:	b	412b60 <_obstack_memory_used@@Base+0xcdc>
  412b30:	ldr	x9, [x22, #24]
  412b34:	and	x9, x9, #0x400000
  412b38:	orr	x9, x26, x9
  412b3c:	cmp	x9, #0x0
  412b40:	cset	w9, eq  // eq = none
  412b44:	lsl	w9, w9, #2
  412b48:	cmp	x20, x19
  412b4c:	cset	w10, ge  // ge = tcont
  412b50:	cmp	x26, #0x0
  412b54:	cset	w11, ne  // ne = any
  412b58:	bfi	w11, w10, #1, #1
  412b5c:	orr	w9, w11, w9
  412b60:	ldur	x10, [x29, #-16]
  412b64:	mov	w27, #0x1                   	// #1
  412b68:	cmp	x10, x28
  412b6c:	b.lt	41306c <_obstack_memory_used@@Base+0x11e8>  // b.tstop
  412b70:	cmp	x23, x10
  412b74:	b.lt	41306c <_obstack_memory_used@@Base+0x11e8>  // b.tstop
  412b78:	sxtw	x8, w8
  412b7c:	str	x8, [sp, #72]
  412b80:	add	x8, sp, #0x50
  412b84:	cmp	x20, x19
  412b88:	sub	x10, x29, #0x10
  412b8c:	add	x8, x8, #0xc0
  412b90:	adrp	x20, 421000 <_obstack_memory_used@@Base+0xf17c>
  412b94:	sub	w19, w9, #0x4
  412b98:	mov	w11, #0x2                   	// #2
  412b9c:	str	x8, [sp, #16]
  412ba0:	csel	x8, xzr, x10, lt  // lt = tstop
  412ba4:	add	x20, x20, #0x388
  412ba8:	str	x8, [sp, #8]
  412bac:	cmp	w19, #0x4
  412bb0:	b.hi	412c14 <_obstack_memory_used@@Base+0xd90>  // b.pmore
  412bb4:	adr	x8, 412bc4 <_obstack_memory_used@@Base+0xd40>
  412bb8:	ldrb	w9, [x20, x19]
  412bbc:	add	x8, x8, x9, lsl #2
  412bc0:	br	x8
  412bc4:	ldur	x8, [x29, #-16]
  412bc8:	cmp	x8, x28
  412bcc:	cset	w9, lt  // lt = tstop
  412bd0:	b.lt	412e7c <_obstack_memory_used@@Base+0xff8>  // b.tstop
  412bd4:	cmp	x8, x24
  412bd8:	b.ge	412be8 <_obstack_memory_used@@Base+0xd64>  // b.tcont
  412bdc:	ldrb	w10, [x25, x8]
  412be0:	cbnz	x26, 412bf0 <_obstack_memory_used@@Base+0xd6c>
  412be4:	b	412bf4 <_obstack_memory_used@@Base+0xd70>
  412be8:	mov	w10, wzr
  412bec:	cbz	x26, 412bf4 <_obstack_memory_used@@Base+0xd70>
  412bf0:	ldrb	w10, [x26, w10, uxtw]
  412bf4:	ldrb	w10, [x21, w10, uxtw]
  412bf8:	cbnz	w10, 412d50 <_obstack_memory_used@@Base+0xecc>
  412bfc:	cmp	x8, x28
  412c00:	sub	x8, x8, #0x1
  412c04:	cset	w9, le
  412c08:	stur	x8, [x29, #-16]
  412c0c:	b.gt	412bd4 <_obstack_memory_used@@Base+0xd50>
  412c10:	b	412e7c <_obstack_memory_used@@Base+0xff8>
  412c14:	mov	w27, #0x1                   	// #1
  412c18:	b	412c30 <_obstack_memory_used@@Base+0xdac>
  412c1c:	mov	x9, xzr
  412c20:	ldrb	w9, [x21, x9]
  412c24:	cbz	w9, 412c64 <_obstack_memory_used@@Base+0xde0>
  412c28:	mov	w8, #0xe                   	// #14
  412c2c:	cbnz	w8, 412d3c <_obstack_memory_used@@Base+0xeb8>
  412c30:	ldur	x1, [x29, #-16]
  412c34:	ldr	x8, [sp, #120]
  412c38:	ldr	x10, [sp, #136]
  412c3c:	sub	x9, x1, x8
  412c40:	cmp	x9, x10
  412c44:	b.cs	412c94 <_obstack_memory_used@@Base+0xe10>  // b.hs, b.nlast
  412c48:	ldur	x8, [x29, #-16]
  412c4c:	cmp	x8, x24
  412c50:	b.ge	412c1c <_obstack_memory_used@@Base+0xd98>  // b.tcont
  412c54:	ldr	x10, [sp, #88]
  412c58:	ldrb	w9, [x10, x9]
  412c5c:	ldrb	w9, [x21, x9]
  412c60:	cbnz	w9, 412c28 <_obstack_memory_used@@Base+0xda4>
  412c64:	ldr	x9, [sp, #72]
  412c68:	add	x8, x8, x9
  412c6c:	cmp	x8, x28
  412c70:	cset	w9, lt  // lt = tstop
  412c74:	cmp	x8, x23
  412c78:	stur	x8, [x29, #-16]
  412c7c:	cset	w8, gt
  412c80:	orr	w8, w9, w8
  412c84:	cmp	w8, #0x0
  412c88:	csinc	w27, w27, wzr, eq  // eq = none
  412c8c:	csel	w8, w11, wzr, ne  // ne = any
  412c90:	b	412c2c <_obstack_memory_used@@Base+0xda8>
  412c94:	ldr	w2, [sp, #52]
  412c98:	add	x0, sp, #0x50
  412c9c:	bl	418fd4 <_obstack_memory_used@@Base+0x7150>
  412ca0:	mov	w27, w0
  412ca4:	cbnz	w0, 412cbc <_obstack_memory_used@@Base+0xe38>
  412ca8:	ldur	x8, [x29, #-16]
  412cac:	ldr	x9, [sp, #120]
  412cb0:	mov	w11, #0x2                   	// #2
  412cb4:	sub	x9, x8, x9
  412cb8:	b	412c48 <_obstack_memory_used@@Base+0xdc4>
  412cbc:	mov	w8, #0x2                   	// #2
  412cc0:	mov	w11, #0x2                   	// #2
  412cc4:	b	412c2c <_obstack_memory_used@@Base+0xda8>
  412cc8:	ldur	x8, [x29, #-16]
  412ccc:	cmp	x8, x23
  412cd0:	b.ge	412d20 <_obstack_memory_used@@Base+0xe9c>  // b.tcont
  412cd4:	ldrb	w9, [x25, x8]
  412cd8:	ldrb	w9, [x21, x9]
  412cdc:	cbnz	w9, 412d20 <_obstack_memory_used@@Base+0xe9c>
  412ce0:	add	x8, x8, #0x1
  412ce4:	cmp	x8, x23
  412ce8:	stur	x8, [x29, #-16]
  412cec:	b.lt	412cd4 <_obstack_memory_used@@Base+0xe50>  // b.tstop
  412cf0:	b	412d20 <_obstack_memory_used@@Base+0xe9c>
  412cf4:	ldur	x8, [x29, #-16]
  412cf8:	cmp	x8, x23
  412cfc:	b.ge	412d20 <_obstack_memory_used@@Base+0xe9c>  // b.tcont
  412d00:	ldrb	w9, [x25, x8]
  412d04:	ldrb	w9, [x26, x9]
  412d08:	ldrb	w9, [x21, x9]
  412d0c:	cbnz	w9, 412d20 <_obstack_memory_used@@Base+0xe9c>
  412d10:	add	x8, x8, #0x1
  412d14:	cmp	x8, x23
  412d18:	stur	x8, [x29, #-16]
  412d1c:	b.lt	412d00 <_obstack_memory_used@@Base+0xe7c>  // b.tstop
  412d20:	ldur	x8, [x29, #-16]
  412d24:	cmp	x8, x23
  412d28:	b.ne	412d54 <_obstack_memory_used@@Base+0xed0>  // b.any
  412d2c:	cmp	x8, x24
  412d30:	b.ge	412e68 <_obstack_memory_used@@Base+0xfe4>  // b.tcont
  412d34:	ldrb	w8, [x25, x8]
  412d38:	b	412e6c <_obstack_memory_used@@Base+0xfe8>
  412d3c:	cmp	w8, #0x2
  412d40:	b.eq	41306c <_obstack_memory_used@@Base+0x11e8>  // b.none
  412d44:	cmp	w8, #0xe
  412d48:	b.eq	412d54 <_obstack_memory_used@@Base+0xed0>  // b.none
  412d4c:	b	412f18 <_obstack_memory_used@@Base+0x1094>
  412d50:	tbnz	w9, #0, 412e7c <_obstack_memory_used@@Base+0xff8>
  412d54:	ldur	x1, [x29, #-16]
  412d58:	ldr	w2, [sp, #52]
  412d5c:	add	x0, sp, #0x50
  412d60:	bl	418fd4 <_obstack_memory_used@@Base+0x7150>
  412d64:	cbnz	w0, 413060 <_obstack_memory_used@@Base+0x11dc>
  412d68:	ldr	w8, [sp, #48]
  412d6c:	cmp	w8, #0x1
  412d70:	b.eq	412d8c <_obstack_memory_used@@Base+0xf08>  // b.none
  412d74:	ldr	x8, [sp, #128]
  412d78:	cbz	x8, 412d8c <_obstack_memory_used@@Base+0xf08>
  412d7c:	ldr	x8, [sp, #96]
  412d80:	ldr	w8, [x8]
  412d84:	cmn	w8, #0x1
  412d88:	b.eq	412e3c <_obstack_memory_used@@Base+0xfb8>  // b.none
  412d8c:	ldp	x2, x8, [sp, #8]
  412d90:	ldr	w1, [sp, #44]
  412d94:	add	x0, sp, #0x50
  412d98:	str	wzr, [sp, #304]
  412d9c:	stp	xzr, xzr, [x8]
  412da0:	bl	4195a0 <_obstack_memory_used@@Base+0x771c>
  412da4:	cmn	x0, #0x1
  412da8:	b.eq	412e34 <_obstack_memory_used@@Base+0xfb0>  // b.none
  412dac:	mov	x2, x0
  412db0:	cmn	x0, #0x2
  412db4:	b.eq	413068 <_obstack_memory_used@@Base+0x11e4>  // b.none
  412db8:	ldr	x8, [sp, #64]
  412dbc:	str	x2, [sp, #248]
  412dc0:	cmp	x8, #0x2
  412dc4:	b.cc	412dd0 <_obstack_memory_used@@Base+0xf4c>  // b.lo, b.ul, b.last
  412dc8:	ldrb	w8, [x22, #56]
  412dcc:	tbz	w8, #4, 412ddc <_obstack_memory_used@@Base+0xf58>
  412dd0:	ldr	x8, [sp, #56]
  412dd4:	ldr	x8, [x8, #152]
  412dd8:	cbz	x8, 412df0 <_obstack_memory_used@@Base+0xf6c>
  412ddc:	ldr	x8, [sp, #264]
  412de0:	add	x0, sp, #0x50
  412de4:	ldr	x1, [x8, x2, lsl #3]
  412de8:	bl	4198a0 <_obstack_memory_used@@Base+0x7a1c>
  412dec:	str	x0, [sp, #256]
  412df0:	ldr	x8, [sp, #64]
  412df4:	cmp	x8, #0x2
  412df8:	b.cc	412e10 <_obstack_memory_used@@Base+0xf8c>  // b.lo, b.ul, b.last
  412dfc:	ldrb	w8, [x22, #56]
  412e00:	tbnz	w8, #4, 412e10 <_obstack_memory_used@@Base+0xf8c>
  412e04:	ldr	x8, [sp, #56]
  412e08:	ldrb	w8, [x8, #176]
  412e0c:	tbnz	w8, #0, 412e1c <_obstack_memory_used@@Base+0xf98>
  412e10:	ldr	x8, [sp, #56]
  412e14:	ldr	x8, [x8, #152]
  412e18:	cbz	x8, 412e84 <_obstack_memory_used@@Base+0x1000>
  412e1c:	add	x0, sp, #0x50
  412e20:	bl	41992c <_obstack_memory_used@@Base+0x7aa8>
  412e24:	cbz	w0, 412e84 <_obstack_memory_used@@Base+0x1000>
  412e28:	mov	w27, w0
  412e2c:	cmp	w0, #0x1
  412e30:	b.ne	41306c <_obstack_memory_used@@Base+0x11e8>  // b.any
  412e34:	add	x0, sp, #0x50
  412e38:	bl	419b14 <_obstack_memory_used@@Base+0x7c90>
  412e3c:	ldur	x8, [x29, #-16]
  412e40:	ldr	x9, [sp, #72]
  412e44:	mov	w27, #0x1                   	// #1
  412e48:	add	x8, x8, x9
  412e4c:	cmp	x8, x28
  412e50:	stur	x8, [x29, #-16]
  412e54:	b.lt	41306c <_obstack_memory_used@@Base+0x11e8>  // b.tstop
  412e58:	cmp	x23, x8
  412e5c:	mov	w11, #0x2                   	// #2
  412e60:	b.ge	412bac <_obstack_memory_used@@Base+0xd28>  // b.tcont
  412e64:	b	41306c <_obstack_memory_used@@Base+0x11e8>
  412e68:	mov	w8, wzr
  412e6c:	cbz	x26, 412e74 <_obstack_memory_used@@Base+0xff0>
  412e70:	ldrb	w8, [x26, w8, uxtw]
  412e74:	ldrb	w8, [x21, w8, uxtw]
  412e78:	cbnz	w8, 412d54 <_obstack_memory_used@@Base+0xed0>
  412e7c:	mov	w27, #0x1                   	// #1
  412e80:	b	41306c <_obstack_memory_used@@Base+0x11e8>
  412e84:	ldr	x20, [sp, #64]
  412e88:	cbz	x20, 412f10 <_obstack_memory_used@@Base+0x108c>
  412e8c:	ldr	x19, [sp, #32]
  412e90:	cmp	x20, #0x1
  412e94:	b.eq	412eb8 <_obstack_memory_used@@Base+0x1034>  // b.none
  412e98:	ldr	x8, [sp, #24]
  412e9c:	ldr	x9, [sp]
  412ea0:	add	x0, x19, #0x10
  412ea4:	mov	w1, #0xff                  	// #255
  412ea8:	mvn	x8, x8
  412eac:	add	x8, x8, x9
  412eb0:	lsl	x2, x8, #4
  412eb4:	bl	4029c0 <memset@plt>
  412eb8:	ldr	x8, [sp, #248]
  412ebc:	mov	w27, wzr
  412ec0:	cmp	x20, #0x2
  412ec4:	stp	xzr, x8, [x19]
  412ec8:	b.cc	412f4c <_obstack_memory_used@@Base+0x10c8>  // b.lo, b.ul, b.last
  412ecc:	ldrb	w8, [x22, #56]
  412ed0:	tbnz	w8, #4, 412f4c <_obstack_memory_used@@Base+0x10c8>
  412ed4:	ldr	x9, [sp, #56]
  412ed8:	ldrb	w8, [x9, #176]
  412edc:	tbnz	w8, #0, 412f24 <_obstack_memory_used@@Base+0x10a0>
  412ee0:	mov	w4, wzr
  412ee4:	b	412f30 <_obstack_memory_used@@Base+0x10ac>
  412ee8:	ldr	x8, [x8, #16]
  412eec:	cbz	x8, 412ef8 <_obstack_memory_used@@Base+0x1074>
  412ef0:	ldrsb	w8, [x22, #56]
  412ef4:	tbnz	w8, #31, 412a18 <_obstack_memory_used@@Base+0xb94>
  412ef8:	mov	x20, xzr
  412efc:	cbz	x19, 412f1c <_obstack_memory_used@@Base+0x1098>
  412f00:	mov	x19, x20
  412f04:	cbz	x4, 412a1c <_obstack_memory_used@@Base+0xb98>
  412f08:	mov	w27, #0x1                   	// #1
  412f0c:	b	413090 <_obstack_memory_used@@Base+0x120c>
  412f10:	mov	w27, wzr
  412f14:	b	41306c <_obstack_memory_used@@Base+0x11e8>
  412f18:	b	413090 <_obstack_memory_used@@Base+0x120c>
  412f1c:	mov	x19, x20
  412f20:	b	412a1c <_obstack_memory_used@@Base+0xb98>
  412f24:	ldr	x8, [x9, #152]
  412f28:	cmp	x8, #0x0
  412f2c:	cset	w4, gt
  412f30:	ldr	x3, [sp, #32]
  412f34:	ldr	x2, [sp, #64]
  412f38:	add	x1, sp, #0x50
  412f3c:	mov	x0, x22
  412f40:	bl	419bd8 <_obstack_memory_used@@Base+0x7d54>
  412f44:	mov	w27, w0
  412f48:	cbnz	w0, 41306c <_obstack_memory_used@@Base+0x11e8>
  412f4c:	ldr	x20, [sp, #32]
  412f50:	ldrb	w9, [sp, #220]
  412f54:	ldr	x10, [sp, #128]
  412f58:	ldr	x11, [sp, #104]
  412f5c:	ldur	x12, [x29, #-16]
  412f60:	ldr	x21, [sp, #64]
  412f64:	add	x13, sp, #0x50
  412f68:	mov	x8, xzr
  412f6c:	add	x13, x13, #0x38
  412f70:	add	x14, x20, #0x8
  412f74:	b	412f98 <_obstack_memory_used@@Base+0x1114>
  412f78:	ldp	x15, x16, [x14, #-8]
  412f7c:	add	x15, x15, x12
  412f80:	add	x16, x16, x12
  412f84:	stp	x15, x16, [x14, #-8]
  412f88:	add	x8, x8, #0x1
  412f8c:	cmp	x8, x21
  412f90:	add	x14, x14, #0x10
  412f94:	b.cs	412fd8 <_obstack_memory_used@@Base+0x1154>  // b.hs, b.nlast
  412f98:	ldur	x15, [x14, #-8]
  412f9c:	cmn	x15, #0x1
  412fa0:	b.eq	412f88 <_obstack_memory_used@@Base+0x1104>  // b.none
  412fa4:	cbz	w9, 412f78 <_obstack_memory_used@@Base+0x10f4>
  412fa8:	add	x16, x11, x15, lsl #3
  412fac:	cmp	x15, x10
  412fb0:	ldr	x15, [x14]
  412fb4:	csel	x16, x13, x16, eq  // eq = none
  412fb8:	ldr	x16, [x16]
  412fbc:	add	x17, x11, x15, lsl #3
  412fc0:	cmp	x15, x10
  412fc4:	stur	x16, [x14, #-8]
  412fc8:	csel	x15, x13, x17, eq  // eq = none
  412fcc:	ldr	x15, [x15]
  412fd0:	str	x15, [x14]
  412fd4:	b	412f78 <_obstack_memory_used@@Base+0x10f4>
  412fd8:	ldr	x10, [sp, #24]
  412fdc:	ldr	x19, [sp, #56]
  412fe0:	cmp	x10, #0x1
  412fe4:	b.lt	412ffc <_obstack_memory_used@@Base+0x1178>  // b.tstop
  412fe8:	add	x0, x20, x21, lsl #4
  412fec:	lsl	x2, x10, #4
  412ff0:	mov	w1, #0xff                  	// #255
  412ff4:	bl	4029c0 <memset@plt>
  412ff8:	ldr	x10, [sp, #24]
  412ffc:	ldr	x8, [x19, #224]
  413000:	cbz	x8, 41306c <_obstack_memory_used@@Base+0x11e8>
  413004:	cmp	x21, #0x2
  413008:	b.cc	41306c <_obstack_memory_used@@Base+0x11e8>  // b.lo, b.ul, b.last
  41300c:	ldr	x11, [sp]
  413010:	mvn	x10, x10
  413014:	mov	x9, xzr
  413018:	add	x10, x10, x11
  41301c:	add	x11, x20, #0x18
  413020:	b	413034 <_obstack_memory_used@@Base+0x11b0>
  413024:	add	x9, x9, #0x1
  413028:	cmp	x10, x9
  41302c:	add	x11, x11, #0x10
  413030:	b.eq	41306c <_obstack_memory_used@@Base+0x11e8>  // b.none
  413034:	ldr	x12, [x8, x9, lsl #3]
  413038:	cmp	x9, x12
  41303c:	b.eq	413024 <_obstack_memory_used@@Base+0x11a0>  // b.none
  413040:	add	x12, x20, x12, lsl #4
  413044:	ldr	x12, [x12, #16]
  413048:	stur	x12, [x11, #-8]
  41304c:	ldr	x12, [x8, x9, lsl #3]
  413050:	add	x12, x20, x12, lsl #4
  413054:	ldr	x12, [x12, #24]
  413058:	str	x12, [x11]
  41305c:	b	413024 <_obstack_memory_used@@Base+0x11a0>
  413060:	mov	w27, w0
  413064:	b	41306c <_obstack_memory_used@@Base+0x11e8>
  413068:	mov	w27, #0xc                   	// #12
  41306c:	ldr	x0, [sp, #264]
  413070:	bl	402bd0 <free@plt>
  413074:	ldr	x8, [sp, #56]
  413078:	ldr	x8, [x8, #152]
  41307c:	cbz	x8, 413088 <_obstack_memory_used@@Base+0x1204>
  413080:	add	x0, sp, #0x50
  413084:	bl	419e7c <_obstack_memory_used@@Base+0x7ff8>
  413088:	add	x0, sp, #0x50
  41308c:	bl	4138c8 <_obstack_memory_used@@Base+0x1a44>
  413090:	mov	w0, w27
  413094:	ldp	x20, x19, [sp, #432]
  413098:	ldp	x22, x21, [sp, #416]
  41309c:	ldp	x24, x23, [sp, #400]
  4130a0:	ldp	x26, x25, [sp, #384]
  4130a4:	ldp	x28, x27, [sp, #368]
  4130a8:	ldp	x29, x30, [sp, #352]
  4130ac:	add	sp, sp, #0x1c0
  4130b0:	ret
  4130b4:	stp	x29, x30, [sp, #-16]!
  4130b8:	mov	x6, x4
  4130bc:	mov	w7, #0x1                   	// #1
  4130c0:	mov	x4, xzr
  4130c4:	mov	x5, x2
  4130c8:	mov	x29, sp
  4130cc:	bl	4130d8 <_obstack_memory_used@@Base+0x1254>
  4130d0:	ldp	x29, x30, [sp], #16
  4130d4:	ret
  4130d8:	sub	sp, sp, #0x70
  4130dc:	cmp	x3, x2
  4130e0:	cset	w8, gt
  4130e4:	stp	x29, x30, [sp, #16]
  4130e8:	add	x29, sp, #0x10
  4130ec:	orr	x8, x8, x3, lsr #63
  4130f0:	stp	x28, x27, [sp, #32]
  4130f4:	stp	x26, x25, [sp, #48]
  4130f8:	stp	x24, x23, [sp, #64]
  4130fc:	stp	x22, x21, [sp, #80]
  413100:	stp	x20, x19, [sp, #96]
  413104:	stur	w7, [x29, #-4]
  413108:	cbnz	x8, 413274 <_obstack_memory_used@@Base+0x13f0>
  41310c:	add	x8, x4, x3
  413110:	ldrb	w19, [x0, #56]
  413114:	bic	x9, x8, x8, asr #63
  413118:	cmp	x8, x2
  41311c:	csel	x26, x2, x9, gt
  413120:	mov	x25, x6
  413124:	mov	x22, x5
  413128:	mov	x20, x3
  41312c:	mov	x23, x2
  413130:	mov	x24, x1
  413134:	mov	x21, x0
  413138:	cmp	x26, x3
  41313c:	b.le	413154 <_obstack_memory_used@@Base+0x12d0>
  413140:	tbnz	w19, #3, 413154 <_obstack_memory_used@@Base+0x12d0>
  413144:	ldr	x8, [x21, #32]
  413148:	cbz	x8, 413154 <_obstack_memory_used@@Base+0x12d0>
  41314c:	mov	x0, x21
  413150:	bl	4120ec <_obstack_memory_used@@Base+0x268>
  413154:	ldrb	w8, [x21, #56]
  413158:	tst	w8, #0x10
  41315c:	csel	x27, x25, xzr, eq  // eq = none
  413160:	cbz	x27, 41318c <_obstack_memory_used@@Base+0x1308>
  413164:	and	w8, w8, #0x6
  413168:	cmp	w8, #0x4
  41316c:	b.ne	413180 <_obstack_memory_used@@Base+0x12fc>  // b.any
  413170:	ldr	x8, [x27]
  413174:	ldr	x9, [x21, #48]
  413178:	cmp	x8, x9
  41317c:	b.ls	413284 <_obstack_memory_used@@Base+0x1400>  // b.plast
  413180:	ldr	x8, [x21, #48]
  413184:	add	x28, x8, #0x1
  413188:	b	413190 <_obstack_memory_used@@Base+0x130c>
  41318c:	mov	w28, #0x1                   	// #1
  413190:	lsl	x0, x28, #4
  413194:	bl	4028e0 <malloc@plt>
  413198:	cbz	x0, 41327c <_obstack_memory_used@@Base+0x13f8>
  41319c:	mov	x25, x0
  4131a0:	ubfx	w8, w19, #5, #2
  4131a4:	mov	x0, x21
  4131a8:	mov	x1, x24
  4131ac:	mov	x2, x23
  4131b0:	mov	x3, x20
  4131b4:	mov	x4, x26
  4131b8:	mov	x5, x22
  4131bc:	mov	x6, x28
  4131c0:	mov	x7, x25
  4131c4:	str	w8, [sp]
  4131c8:	bl	41293c <_obstack_memory_used@@Base+0xab8>
  4131cc:	cbz	w0, 4131e4 <_obstack_memory_used@@Base+0x1360>
  4131d0:	cmp	w0, #0x1
  4131d4:	mov	x8, #0xfffffffffffffffe    	// #-2
  4131d8:	cinc	x21, x8, eq  // eq = none
  4131dc:	cbz	x21, 413230 <_obstack_memory_used@@Base+0x13ac>
  4131e0:	b	413248 <_obstack_memory_used@@Base+0x13c4>
  4131e4:	cbz	x27, 413228 <_obstack_memory_used@@Base+0x13a4>
  4131e8:	ldrb	w8, [x21, #56]
  4131ec:	mov	x0, x27
  4131f0:	mov	x1, x25
  4131f4:	mov	x2, x28
  4131f8:	ubfx	w3, w8, #1, #2
  4131fc:	bl	418d4c <_obstack_memory_used@@Base+0x6ec8>
  413200:	ldrb	w8, [x21, #56]
  413204:	ubfiz	w9, w0, #1, #2
  413208:	tst	w0, #0x3
  41320c:	mov	x10, #0xfffffffffffffffe    	// #-2
  413210:	and	w8, w8, #0xfffffff9
  413214:	orr	w8, w9, w8
  413218:	strb	w8, [x21, #56]
  41321c:	csel	x21, x10, xzr, eq  // eq = none
  413220:	cbz	x21, 413230 <_obstack_memory_used@@Base+0x13ac>
  413224:	b	413248 <_obstack_memory_used@@Base+0x13c4>
  413228:	mov	x21, xzr
  41322c:	cbnz	x21, 413248 <_obstack_memory_used@@Base+0x13c4>
  413230:	ldur	w8, [x29, #-4]
  413234:	tbz	w8, #0, 413244 <_obstack_memory_used@@Base+0x13c0>
  413238:	ldr	x8, [x25, #8]
  41323c:	sub	x21, x8, x20
  413240:	b	413248 <_obstack_memory_used@@Base+0x13c4>
  413244:	ldr	x21, [x25]
  413248:	mov	x0, x25
  41324c:	bl	402bd0 <free@plt>
  413250:	mov	x0, x21
  413254:	ldp	x20, x19, [sp, #96]
  413258:	ldp	x22, x21, [sp, #80]
  41325c:	ldp	x24, x23, [sp, #64]
  413260:	ldp	x26, x25, [sp, #48]
  413264:	ldp	x28, x27, [sp, #32]
  413268:	ldp	x29, x30, [sp, #16]
  41326c:	add	sp, sp, #0x70
  413270:	ret
  413274:	mov	x21, #0xffffffffffffffff    	// #-1
  413278:	b	413250 <_obstack_memory_used@@Base+0x13cc>
  41327c:	mov	x21, #0xfffffffffffffffe    	// #-2
  413280:	b	413250 <_obstack_memory_used@@Base+0x13cc>
  413284:	cmp	x8, #0x1
  413288:	csel	x27, xzr, x27, lt  // lt = tstop
  41328c:	csinc	x28, x8, xzr, ge  // ge = tcont
  413290:	b	413190 <_obstack_memory_used@@Base+0x130c>
  413294:	stp	x29, x30, [sp, #-16]!
  413298:	mov	x6, x5
  41329c:	mov	x5, x2
  4132a0:	mov	w7, wzr
  4132a4:	mov	x29, sp
  4132a8:	bl	4130d8 <_obstack_memory_used@@Base+0x1254>
  4132ac:	ldp	x29, x30, [sp], #16
  4132b0:	ret
  4132b4:	sub	sp, sp, #0x20
  4132b8:	mov	x8, x6
  4132bc:	mov	w9, #0x1                   	// #1
  4132c0:	str	x7, [sp]
  4132c4:	mov	x6, xzr
  4132c8:	mov	x7, x8
  4132cc:	stp	x29, x30, [sp, #16]
  4132d0:	add	x29, sp, #0x10
  4132d4:	strb	w9, [sp, #8]
  4132d8:	bl	4132e8 <_obstack_memory_used@@Base+0x1464>
  4132dc:	ldp	x29, x30, [sp, #16]
  4132e0:	add	sp, sp, #0x20
  4132e4:	ret
  4132e8:	sub	sp, sp, #0x70
  4132ec:	stp	x22, x21, [sp, #80]
  4132f0:	stp	x20, x19, [sp, #96]
  4132f4:	adds	x22, x2, x4
  4132f8:	mov	x20, #0xfffffffffffffffe    	// #-2
  4132fc:	stp	x29, x30, [sp, #16]
  413300:	stp	x28, x27, [sp, #32]
  413304:	stp	x26, x25, [sp, #48]
  413308:	stp	x24, x23, [sp, #64]
  41330c:	add	x29, sp, #0x10
  413310:	b.vs	4133d8 <_obstack_memory_used@@Base+0x1554>
  413314:	ldr	x24, [x29, #96]
  413318:	orr	x8, x4, x2
  41331c:	mov	x28, x4
  413320:	mov	x19, x2
  413324:	orr	x8, x8, x24
  413328:	tbnz	x8, #63, 4133d8 <_obstack_memory_used@@Base+0x1554>
  41332c:	mov	x9, x7
  413330:	mov	x21, x5
  413334:	mov	x25, x1
  413338:	mov	x23, x0
  41333c:	cmp	x28, #0x1
  413340:	b.lt	413394 <_obstack_memory_used@@Base+0x1510>  // b.tstop
  413344:	mov	x27, x3
  413348:	cmp	x19, #0x1
  41334c:	b.lt	41339c <_obstack_memory_used@@Base+0x1518>  // b.tstop
  413350:	mov	x0, x22
  413354:	str	x6, [sp, #8]
  413358:	mov	x20, x9
  41335c:	bl	4028e0 <malloc@plt>
  413360:	cbz	x0, 4133fc <_obstack_memory_used@@Base+0x1578>
  413364:	mov	x1, x25
  413368:	mov	x2, x19
  41336c:	mov	x26, x0
  413370:	bl	402710 <memcpy@plt>
  413374:	add	x0, x26, x19
  413378:	mov	x1, x27
  41337c:	mov	x2, x28
  413380:	bl	402710 <memcpy@plt>
  413384:	ldr	x6, [sp, #8]
  413388:	mov	x25, x26
  41338c:	mov	x9, x20
  413390:	b	4133a4 <_obstack_memory_used@@Base+0x1520>
  413394:	mov	x26, xzr
  413398:	b	4133a4 <_obstack_memory_used@@Base+0x1520>
  41339c:	mov	x26, xzr
  4133a0:	mov	x25, x27
  4133a4:	ldrb	w8, [x29, #104]
  4133a8:	mov	x0, x23
  4133ac:	mov	x1, x25
  4133b0:	mov	x2, x22
  4133b4:	and	w7, w8, #0x1
  4133b8:	mov	x3, x21
  4133bc:	mov	x4, x6
  4133c0:	mov	x5, x24
  4133c4:	mov	x6, x9
  4133c8:	bl	4130d8 <_obstack_memory_used@@Base+0x1254>
  4133cc:	mov	x20, x0
  4133d0:	mov	x0, x26
  4133d4:	bl	402bd0 <free@plt>
  4133d8:	mov	x0, x20
  4133dc:	ldp	x20, x19, [sp, #96]
  4133e0:	ldp	x22, x21, [sp, #80]
  4133e4:	ldp	x24, x23, [sp, #64]
  4133e8:	ldp	x26, x25, [sp, #48]
  4133ec:	ldp	x28, x27, [sp, #32]
  4133f0:	ldp	x29, x30, [sp, #16]
  4133f4:	add	sp, sp, #0x70
  4133f8:	ret
  4133fc:	mov	x20, #0xfffffffffffffffe    	// #-2
  413400:	b	4133d8 <_obstack_memory_used@@Base+0x1554>
  413404:	sub	sp, sp, #0x20
  413408:	stp	x29, x30, [sp, #16]
  41340c:	add	x29, sp, #0x10
  413410:	ldr	x8, [x29, #16]
  413414:	strb	wzr, [sp, #8]
  413418:	str	x8, [sp]
  41341c:	bl	4132e8 <_obstack_memory_used@@Base+0x1464>
  413420:	ldp	x29, x30, [sp, #16]
  413424:	add	sp, sp, #0x20
  413428:	ret
  41342c:	ldrb	w8, [x0, #56]
  413430:	and	w8, w8, #0xfffffff9
  413434:	cbz	x2, 41344c <_obstack_memory_used@@Base+0x15c8>
  413438:	orr	w8, w8, #0x2
  41343c:	strb	w8, [x0, #56]
  413440:	stp	x2, x3, [x1]
  413444:	str	x4, [x1, #16]
  413448:	ret
  41344c:	strb	w8, [x0, #56]
  413450:	stp	xzr, xzr, [x1]
  413454:	str	xzr, [x1, #16]
  413458:	ret
  41345c:	stp	x29, x30, [sp, #-16]!
  413460:	ldr	w8, [x0, #8]
  413464:	mov	w9, #0xff                  	// #255
  413468:	movk	w9, #0x4, lsl #16
  41346c:	mov	x29, sp
  413470:	and	w8, w8, w9
  413474:	cmp	w8, #0x6
  413478:	b.ne	41348c <_obstack_memory_used@@Base+0x1608>  // b.any
  41347c:	ldr	x0, [x0]
  413480:	bl	413510 <_obstack_memory_used@@Base+0x168c>
  413484:	ldp	x29, x30, [sp], #16
  413488:	ret
  41348c:	cmp	w8, #0x3
  413490:	b.ne	41349c <_obstack_memory_used@@Base+0x1618>  // b.any
  413494:	ldr	x0, [x0]
  413498:	bl	402bd0 <free@plt>
  41349c:	ldp	x29, x30, [sp], #16
  4134a0:	ret
  4134a4:	stp	x29, x30, [sp, #-32]!
  4134a8:	str	x19, [sp, #16]
  4134ac:	mov	x19, x0
  4134b0:	ldr	x0, [x0, #48]
  4134b4:	mov	x29, sp
  4134b8:	bl	402bd0 <free@plt>
  4134bc:	ldr	x0, [x19, #72]
  4134c0:	bl	402bd0 <free@plt>
  4134c4:	ldr	x8, [x19, #80]
  4134c8:	add	x9, x19, #0x8
  4134cc:	cmp	x8, x9
  4134d0:	b.eq	4134e4 <_obstack_memory_used@@Base+0x1660>  // b.none
  4134d4:	ldr	x0, [x8, #16]
  4134d8:	bl	402bd0 <free@plt>
  4134dc:	ldr	x0, [x19, #80]
  4134e0:	bl	402bd0 <free@plt>
  4134e4:	ldr	x0, [x19, #24]
  4134e8:	bl	402bd0 <free@plt>
  4134ec:	ldr	x0, [x19, #96]
  4134f0:	bl	402bd0 <free@plt>
  4134f4:	ldr	x0, [x19, #88]
  4134f8:	bl	402bd0 <free@plt>
  4134fc:	mov	x0, x19
  413500:	bl	402bd0 <free@plt>
  413504:	ldr	x19, [sp, #16]
  413508:	ldp	x29, x30, [sp], #32
  41350c:	ret
  413510:	stp	x29, x30, [sp, #-32]!
  413514:	str	x19, [sp, #16]
  413518:	mov	x19, x0
  41351c:	ldr	x0, [x0]
  413520:	mov	x29, sp
  413524:	bl	402bd0 <free@plt>
  413528:	ldr	x0, [x19, #8]
  41352c:	bl	402bd0 <free@plt>
  413530:	ldr	x0, [x19, #16]
  413534:	bl	402bd0 <free@plt>
  413538:	ldr	x0, [x19, #24]
  41353c:	bl	402bd0 <free@plt>
  413540:	mov	x0, x19
  413544:	bl	402bd0 <free@plt>
  413548:	ldr	x19, [sp, #16]
  41354c:	ldp	x29, x30, [sp], #32
  413550:	ret
  413554:	stp	x29, x30, [sp, #-64]!
  413558:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  41355c:	movk	x8, #0x5554
  413560:	movk	x8, #0x555, lsl #48
  413564:	movi	v0.2d, #0x0
  413568:	cmp	x1, x8
  41356c:	mov	w8, #0xf                   	// #15
  413570:	stp	x24, x23, [sp, #16]
  413574:	stp	x22, x21, [sp, #32]
  413578:	stp	x20, x19, [sp, #48]
  41357c:	mov	x29, sp
  413580:	str	xzr, [x0, #224]
  413584:	stp	q0, q0, [x0, #192]
  413588:	stp	q0, q0, [x0, #160]
  41358c:	stp	q0, q0, [x0, #128]
  413590:	stp	q0, q0, [x0, #96]
  413594:	stp	q0, q0, [x0, #64]
  413598:	stp	q0, q0, [x0, #32]
  41359c:	stp	q0, q0, [x0]
  4135a0:	str	w8, [x0, #128]
  4135a4:	b.hi	413744 <_obstack_memory_used@@Base+0x18c0>  // b.pmore
  4135a8:	add	x8, x1, #0x1
  4135ac:	mov	x19, x0
  4135b0:	str	x8, [x0, #8]
  4135b4:	lsl	x0, x8, #4
  4135b8:	mov	x20, x1
  4135bc:	bl	4028e0 <malloc@plt>
  4135c0:	mov	w8, #0x1                   	// #1
  4135c4:	str	x0, [x19]
  4135c8:	mov	x21, x8
  4135cc:	cmp	x8, x20
  4135d0:	lsl	x8, x8, #1
  4135d4:	b.ls	4135c8 <_obstack_memory_used@@Base+0x1744>  // b.plast
  4135d8:	mov	w0, #0x18                  	// #24
  4135dc:	mov	x1, x21
  4135e0:	bl	402a10 <calloc@plt>
  4135e4:	sub	x8, x21, #0x1
  4135e8:	str	x0, [x19, #64]
  4135ec:	str	x8, [x19, #136]
  4135f0:	bl	402bf0 <__ctype_get_mb_cur_max@plt>
  4135f4:	str	w0, [x19, #180]
  4135f8:	mov	w0, #0xe                   	// #14
  4135fc:	bl	4028a0 <nl_langinfo@plt>
  413600:	ldrb	w8, [x0]
  413604:	orr	w8, w8, #0x20
  413608:	cmp	w8, #0x75
  41360c:	b.ne	413658 <_obstack_memory_used@@Base+0x17d4>  // b.any
  413610:	ldrb	w8, [x0, #1]
  413614:	orr	w8, w8, #0x20
  413618:	cmp	w8, #0x74
  41361c:	b.ne	413658 <_obstack_memory_used@@Base+0x17d4>  // b.any
  413620:	ldrb	w8, [x0, #2]
  413624:	orr	w8, w8, #0x20
  413628:	cmp	w8, #0x66
  41362c:	b.ne	413658 <_obstack_memory_used@@Base+0x17d4>  // b.any
  413630:	ldrb	w8, [x0, #3]!
  413634:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xd17c>
  413638:	add	x1, x1, #0xb5a
  41363c:	cmp	w8, #0x2d
  413640:	cinc	x0, x0, eq  // eq = none
  413644:	bl	402ba0 <strcmp@plt>
  413648:	cbnz	w0, 413658 <_obstack_memory_used@@Base+0x17d4>
  41364c:	ldrb	w8, [x19, #176]
  413650:	orr	w8, w8, #0x4
  413654:	strb	w8, [x19, #176]
  413658:	ldrb	w8, [x19, #176]
  41365c:	ldr	w9, [x19, #180]
  413660:	and	w10, w8, #0xfffffff7
  413664:	cmp	w9, #0x2
  413668:	strb	w10, [x19, #176]
  41366c:	b.lt	413718 <_obstack_memory_used@@Base+0x1894>  // b.tstop
  413670:	tbnz	w8, #2, 41370c <_obstack_memory_used@@Base+0x1888>
  413674:	mov	w0, #0x20                  	// #32
  413678:	mov	w1, #0x1                   	// #1
  41367c:	bl	402a10 <calloc@plt>
  413680:	str	x0, [x19, #120]
  413684:	cbz	x0, 413744 <_obstack_memory_used@@Base+0x18c0>
  413688:	mov	x21, xzr
  41368c:	mov	w8, wzr
  413690:	mov	w22, #0x1                   	// #1
  413694:	b	4136a8 <_obstack_memory_used@@Base+0x1824>
  413698:	add	x21, x21, #0x1
  41369c:	cmp	x21, #0x4
  4136a0:	add	w8, w24, w23
  4136a4:	b.eq	413718 <_obstack_memory_used@@Base+0x1894>  // b.none
  4136a8:	mov	x23, xzr
  4136ac:	mov	w24, w8
  4136b0:	b	4136c0 <_obstack_memory_used@@Base+0x183c>
  4136b4:	add	x23, x23, #0x1
  4136b8:	cmp	x23, #0x40
  4136bc:	b.eq	413698 <_obstack_memory_used@@Base+0x1814>  // b.none
  4136c0:	add	x20, x24, x23
  4136c4:	mov	w0, w20
  4136c8:	bl	402af0 <btowc@plt>
  4136cc:	cmn	w0, #0x1
  4136d0:	b.eq	4136ec <_obstack_memory_used@@Base+0x1868>  // b.none
  4136d4:	ldr	x8, [x19, #120]
  4136d8:	lsl	x9, x21, #3
  4136dc:	lsl	x11, x22, x23
  4136e0:	ldr	x10, [x8, x9]
  4136e4:	orr	x10, x10, x11
  4136e8:	str	x10, [x8, x9]
  4136ec:	cmp	w20, #0x7f
  4136f0:	b.hi	4136b4 <_obstack_memory_used@@Base+0x1830>  // b.pmore
  4136f4:	cmp	w20, w0
  4136f8:	b.eq	4136b4 <_obstack_memory_used@@Base+0x1830>  // b.none
  4136fc:	ldrb	w8, [x19, #176]
  413700:	orr	w8, w8, #0x8
  413704:	strb	w8, [x19, #176]
  413708:	b	4136b4 <_obstack_memory_used@@Base+0x1830>
  41370c:	adrp	x8, 421000 <_obstack_memory_used@@Base+0xf17c>
  413710:	add	x8, x8, #0x6e0
  413714:	str	x8, [x19, #120]
  413718:	ldr	x8, [x19]
  41371c:	mov	w0, #0xc                   	// #12
  413720:	cbz	x8, 413730 <_obstack_memory_used@@Base+0x18ac>
  413724:	ldr	x8, [x19, #64]
  413728:	cmp	x8, #0x0
  41372c:	csel	w0, w0, wzr, eq  // eq = none
  413730:	ldp	x20, x19, [sp, #48]
  413734:	ldp	x22, x21, [sp, #32]
  413738:	ldp	x24, x23, [sp, #16]
  41373c:	ldp	x29, x30, [sp], #64
  413740:	ret
  413744:	mov	w0, #0xc                   	// #12
  413748:	b	413730 <_obstack_memory_used@@Base+0x18ac>
  41374c:	stp	x29, x30, [sp, #-64]!
  413750:	stp	x20, x19, [sp, #48]
  413754:	mov	x19, x0
  413758:	movi	v0.2d, #0x0
  41375c:	stp	x24, x23, [sp, #16]
  413760:	stp	x22, x21, [sp, #32]
  413764:	mov	w23, w4
  413768:	mov	x21, x2
  41376c:	mov	x24, x1
  413770:	str	xzr, [x0, #144]
  413774:	stp	q0, q0, [x0, #112]
  413778:	stp	q0, q0, [x0, #80]
  41377c:	stp	q0, q0, [x0, #48]
  413780:	stp	q0, q0, [x0, #16]
  413784:	str	q0, [x0]
  413788:	and	w4, w4, #0x1
  41378c:	mov	x0, x1
  413790:	mov	x1, x2
  413794:	mov	x2, x19
  413798:	mov	x29, sp
  41379c:	mov	x20, x5
  4137a0:	mov	x22, x3
  4137a4:	bl	413f60 <_obstack_memory_used@@Base+0x20dc>
  4137a8:	cmp	x21, #0x1
  4137ac:	b.lt	4137c0 <_obstack_memory_used@@Base+0x193c>  // b.tstop
  4137b0:	add	x1, x21, #0x1
  4137b4:	mov	x0, x19
  4137b8:	bl	413fb0 <_obstack_memory_used@@Base+0x212c>
  4137bc:	cbnz	w0, 413868 <_obstack_memory_used@@Base+0x19e4>
  4137c0:	ldrb	w8, [x19, #139]
  4137c4:	cbz	w8, 4137cc <_obstack_memory_used@@Base+0x1948>
  4137c8:	ldr	x24, [x19, #8]
  4137cc:	str	x24, [x19, #8]
  4137d0:	ldr	w8, [x20, #180]
  4137d4:	cmp	w8, #0x2
  4137d8:	tbz	w23, #0, 413824 <_obstack_memory_used@@Base+0x19a0>
  4137dc:	b.lt	413838 <_obstack_memory_used@@Base+0x19b4>  // b.tstop
  4137e0:	mov	x0, x19
  4137e4:	bl	414064 <_obstack_memory_used@@Base+0x21e0>
  4137e8:	cbnz	w0, 413868 <_obstack_memory_used@@Base+0x19e4>
  4137ec:	ldr	x8, [x19, #56]
  4137f0:	cmp	x8, x21
  4137f4:	b.ge	413854 <_obstack_memory_used@@Base+0x19d0>  // b.tcont
  4137f8:	ldr	x9, [x19, #48]
  4137fc:	ldrsw	x10, [x20, #180]
  413800:	ldr	x8, [x19, #64]
  413804:	add	x9, x9, x10
  413808:	cmp	x8, x9
  41380c:	b.gt	413854 <_obstack_memory_used@@Base+0x19d0>
  413810:	lsl	x1, x8, #1
  413814:	mov	x0, x19
  413818:	bl	413fb0 <_obstack_memory_used@@Base+0x212c>
  41381c:	cbz	w0, 4137e0 <_obstack_memory_used@@Base+0x195c>
  413820:	b	413868 <_obstack_memory_used@@Base+0x19e4>
  413824:	b.lt	413848 <_obstack_memory_used@@Base+0x19c4>  // b.tstop
  413828:	mov	x0, x19
  41382c:	bl	4146dc <_obstack_memory_used@@Base+0x2858>
  413830:	mov	w0, wzr
  413834:	b	413868 <_obstack_memory_used@@Base+0x19e4>
  413838:	mov	x0, x19
  41383c:	bl	41465c <_obstack_memory_used@@Base+0x27d8>
  413840:	mov	w0, wzr
  413844:	b	413868 <_obstack_memory_used@@Base+0x19e4>
  413848:	cbz	x22, 41385c <_obstack_memory_used@@Base+0x19d8>
  41384c:	mov	x0, x19
  413850:	bl	414880 <_obstack_memory_used@@Base+0x29fc>
  413854:	mov	w0, wzr
  413858:	b	413868 <_obstack_memory_used@@Base+0x19e4>
  41385c:	ldr	x8, [x19, #64]
  413860:	mov	w0, wzr
  413864:	stp	x8, x8, [x19, #48]
  413868:	ldp	x20, x19, [sp, #48]
  41386c:	ldp	x22, x21, [sp, #32]
  413870:	ldp	x24, x23, [sp, #16]
  413874:	ldp	x29, x30, [sp], #64
  413878:	ret
  41387c:	stp	x29, x30, [sp, #-32]!
  413880:	stp	x20, x19, [sp, #16]
  413884:	ldr	x19, [x0]
  413888:	mov	x29, sp
  41388c:	ldr	x0, [x19, #112]
  413890:	cbz	x0, 4138a4 <_obstack_memory_used@@Base+0x1a20>
  413894:	ldr	x20, [x0]
  413898:	bl	402bd0 <free@plt>
  41389c:	mov	x0, x20
  4138a0:	cbnz	x20, 413894 <_obstack_memory_used@@Base+0x1a10>
  4138a4:	ldr	x0, [x19, #32]
  4138a8:	mov	w8, #0xf                   	// #15
  4138ac:	str	w8, [x19, #128]
  4138b0:	stp	xzr, xzr, [x19, #104]
  4138b4:	bl	402bd0 <free@plt>
  4138b8:	str	xzr, [x19, #32]
  4138bc:	ldp	x20, x19, [sp, #16]
  4138c0:	ldp	x29, x30, [sp], #32
  4138c4:	ret
  4138c8:	stp	x29, x30, [sp, #-32]!
  4138cc:	str	x19, [sp, #16]
  4138d0:	mov	x19, x0
  4138d4:	ldr	x0, [x0, #16]
  4138d8:	mov	x29, sp
  4138dc:	bl	402bd0 <free@plt>
  4138e0:	ldr	x0, [x19, #24]
  4138e4:	bl	402bd0 <free@plt>
  4138e8:	ldrb	w8, [x19, #139]
  4138ec:	cbz	w8, 4138f8 <_obstack_memory_used@@Base+0x1a74>
  4138f0:	ldr	x0, [x19, #8]
  4138f4:	bl	402bd0 <free@plt>
  4138f8:	ldr	x19, [sp, #16]
  4138fc:	ldp	x29, x30, [sp], #32
  413900:	ret
  413904:	sub	sp, sp, #0x50
  413908:	stp	x29, x30, [sp, #16]
  41390c:	stp	x22, x21, [sp, #48]
  413910:	stp	x20, x19, [sp, #64]
  413914:	ldr	x20, [x1]
  413918:	str	x23, [sp, #32]
  41391c:	mov	x23, x0
  413920:	mov	x21, x2
  413924:	mov	x22, x1
  413928:	str	x2, [x20, #216]
  41392c:	orr	x2, x2, #0x800000
  413930:	mov	x0, sp
  413934:	mov	x1, x23
  413938:	add	x29, sp, #0x10
  41393c:	mov	x19, x3
  413940:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  413944:	mov	x2, sp
  413948:	mov	x0, x23
  41394c:	mov	x1, x22
  413950:	mov	x3, x21
  413954:	mov	x4, xzr
  413958:	mov	x5, x19
  41395c:	bl	4148f8 <_obstack_memory_used@@Base+0x2a74>
  413960:	mov	x21, x0
  413964:	cbnz	x0, 413970 <_obstack_memory_used@@Base+0x1aec>
  413968:	ldr	w8, [x19]
  41396c:	cbnz	w8, 4139c0 <_obstack_memory_used@@Base+0x1b3c>
  413970:	mov	w3, #0x2                   	// #2
  413974:	mov	x0, x20
  413978:	mov	x1, xzr
  41397c:	mov	x2, xzr
  413980:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  413984:	mov	x22, x0
  413988:	cbz	x21, 4139a0 <_obstack_memory_used@@Base+0x1b1c>
  41398c:	mov	w3, #0x10                  	// #16
  413990:	mov	x0, x20
  413994:	mov	x1, x21
  413998:	mov	x2, x22
  41399c:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  4139a0:	cbz	x22, 4139c8 <_obstack_memory_used@@Base+0x1b44>
  4139a4:	cbz	x0, 4139c8 <_obstack_memory_used@@Base+0x1b44>
  4139a8:	ldp	x20, x19, [sp, #64]
  4139ac:	ldp	x22, x21, [sp, #48]
  4139b0:	ldr	x23, [sp, #32]
  4139b4:	ldp	x29, x30, [sp, #16]
  4139b8:	add	sp, sp, #0x50
  4139bc:	ret
  4139c0:	mov	x0, xzr
  4139c4:	b	4139a8 <_obstack_memory_used@@Base+0x1b24>
  4139c8:	mov	x0, xzr
  4139cc:	mov	w8, #0xc                   	// #12
  4139d0:	str	w8, [x19]
  4139d4:	b	4139a8 <_obstack_memory_used@@Base+0x1b24>
  4139d8:	stp	x29, x30, [sp, #-32]!
  4139dc:	stp	x20, x19, [sp, #16]
  4139e0:	ldr	x19, [x0]
  4139e4:	mov	x20, x0
  4139e8:	mov	x29, sp
  4139ec:	ldr	x8, [x19, #8]
  4139f0:	lsl	x0, x8, #3
  4139f4:	bl	4028e0 <malloc@plt>
  4139f8:	ldr	x8, [x19, #8]
  4139fc:	str	x0, [x19, #24]
  413a00:	lsl	x0, x8, #3
  413a04:	bl	4028e0 <malloc@plt>
  413a08:	ldr	x8, [x19, #8]
  413a0c:	str	x0, [x19, #32]
  413a10:	add	x8, x8, x8, lsl #1
  413a14:	lsl	x0, x8, #3
  413a18:	bl	4028e0 <malloc@plt>
  413a1c:	ldr	x8, [x19, #8]
  413a20:	str	x0, [x19, #40]
  413a24:	add	x8, x8, x8, lsl #1
  413a28:	lsl	x0, x8, #3
  413a2c:	bl	4028e0 <malloc@plt>
  413a30:	ldr	x9, [x19, #24]
  413a34:	str	x0, [x19, #48]
  413a38:	cbz	x9, 413bac <_obstack_memory_used@@Base+0x1d28>
  413a3c:	ldr	x9, [x19, #32]
  413a40:	cbz	x9, 413bac <_obstack_memory_used@@Base+0x1d28>
  413a44:	mov	x8, x0
  413a48:	mov	w0, #0xc                   	// #12
  413a4c:	cbz	x8, 413b78 <_obstack_memory_used@@Base+0x1cf4>
  413a50:	ldr	x8, [x19, #40]
  413a54:	cbz	x8, 413b78 <_obstack_memory_used@@Base+0x1cf4>
  413a58:	ldr	x8, [x20, #48]
  413a5c:	lsl	x0, x8, #3
  413a60:	bl	4028e0 <malloc@plt>
  413a64:	str	x0, [x19, #224]
  413a68:	cbz	x0, 413ad0 <_obstack_memory_used@@Base+0x1c4c>
  413a6c:	ldr	x8, [x20, #48]
  413a70:	cbz	x8, 413a90 <_obstack_memory_used@@Base+0x1c0c>
  413a74:	ldr	x8, [x19, #224]
  413a78:	mov	x9, xzr
  413a7c:	str	x9, [x8, x9, lsl #3]
  413a80:	ldr	x10, [x20, #48]
  413a84:	add	x9, x9, #0x1
  413a88:	cmp	x9, x10
  413a8c:	b.cc	413a7c <_obstack_memory_used@@Base+0x1bf8>  // b.lo, b.ul, b.last
  413a90:	ldr	x0, [x19, #104]
  413a94:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x517c>
  413a98:	add	x1, x1, #0x5f0
  413a9c:	mov	x2, x19
  413aa0:	bl	41753c <_obstack_memory_used@@Base+0x56b8>
  413aa4:	ldr	x8, [x20, #48]
  413aa8:	cbz	x8, 413ab8 <_obstack_memory_used@@Base+0x1c34>
  413aac:	ldr	x10, [x19, #224]
  413ab0:	ldr	x9, [x10]
  413ab4:	cbz	x9, 413b84 <_obstack_memory_used@@Base+0x1d00>
  413ab8:	mov	x9, xzr
  413abc:	cmp	x9, x8
  413ac0:	b.ne	413ad0 <_obstack_memory_used@@Base+0x1c4c>  // b.any
  413ac4:	ldr	x0, [x19, #224]
  413ac8:	bl	402bd0 <free@plt>
  413acc:	str	xzr, [x19, #224]
  413ad0:	ldr	x0, [x19, #104]
  413ad4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x517c>
  413ad8:	add	x1, x1, #0x698
  413adc:	mov	x2, x20
  413ae0:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  413ae4:	cbnz	w0, 413b78 <_obstack_memory_used@@Base+0x1cf4>
  413ae8:	ldr	x0, [x19, #104]
  413aec:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x517c>
  413af0:	add	x1, x1, #0x720
  413af4:	mov	x2, x19
  413af8:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  413afc:	cbnz	w0, 413b78 <_obstack_memory_used@@Base+0x1cf4>
  413b00:	ldr	x0, [x19, #104]
  413b04:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x517c>
  413b08:	add	x1, x1, #0x7bc
  413b0c:	mov	x2, x19
  413b10:	bl	41753c <_obstack_memory_used@@Base+0x56b8>
  413b14:	ldr	x0, [x19, #104]
  413b18:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x517c>
  413b1c:	add	x1, x1, #0x818
  413b20:	mov	x2, x19
  413b24:	bl	41753c <_obstack_memory_used@@Base+0x56b8>
  413b28:	cbnz	w0, 413b78 <_obstack_memory_used@@Base+0x1cf4>
  413b2c:	mov	x0, x19
  413b30:	bl	417920 <_obstack_memory_used@@Base+0x5a9c>
  413b34:	cbnz	w0, 413b78 <_obstack_memory_used@@Base+0x1cf4>
  413b38:	ldrb	w8, [x20, #56]
  413b3c:	tbnz	w8, #4, 413b50 <_obstack_memory_used@@Base+0x1ccc>
  413b40:	ldr	x8, [x20, #48]
  413b44:	cbz	x8, 413b50 <_obstack_memory_used@@Base+0x1ccc>
  413b48:	ldrb	w8, [x19, #176]
  413b4c:	tbnz	w8, #0, 413b58 <_obstack_memory_used@@Base+0x1cd4>
  413b50:	ldr	x8, [x19, #152]
  413b54:	cbz	x8, 413b78 <_obstack_memory_used@@Base+0x1cf4>
  413b58:	ldr	x8, [x19, #16]
  413b5c:	add	x8, x8, x8, lsl #1
  413b60:	lsl	x0, x8, #3
  413b64:	bl	4028e0 <malloc@plt>
  413b68:	str	x0, [x19, #56]
  413b6c:	cbz	x0, 413bac <_obstack_memory_used@@Base+0x1d28>
  413b70:	mov	x0, x19
  413b74:	bl	417a34 <_obstack_memory_used@@Base+0x5bb0>
  413b78:	ldp	x20, x19, [sp, #16]
  413b7c:	ldp	x29, x30, [sp], #32
  413b80:	ret
  413b84:	mov	w11, #0x1                   	// #1
  413b88:	ldr	x8, [x20, #48]
  413b8c:	mov	x9, x11
  413b90:	cmp	x11, x8
  413b94:	b.cs	413abc <_obstack_memory_used@@Base+0x1c38>  // b.hs, b.nlast
  413b98:	ldr	x11, [x10, x9, lsl #3]
  413b9c:	cmp	x9, x11
  413ba0:	add	x11, x9, #0x1
  413ba4:	b.eq	413b88 <_obstack_memory_used@@Base+0x1d04>  // b.none
  413ba8:	b	413abc <_obstack_memory_used@@Base+0x1c38>
  413bac:	mov	w0, #0xc                   	// #12
  413bb0:	b	413b78 <_obstack_memory_used@@Base+0x1cf4>
  413bb4:	stp	x29, x30, [sp, #-16]!
  413bb8:	ldr	x8, [x0, #16]
  413bbc:	mov	x29, sp
  413bc0:	cbz	x8, 413be8 <_obstack_memory_used@@Base+0x1d64>
  413bc4:	ldr	x11, [x0]
  413bc8:	adrp	x12, 421000 <_obstack_memory_used@@Base+0xf17c>
  413bcc:	mov	w8, wzr
  413bd0:	mov	w9, wzr
  413bd4:	mov	x10, xzr
  413bd8:	add	x12, x12, #0x38d
  413bdc:	mov	w13, #0x1                   	// #1
  413be0:	mov	w14, #0x8b                  	// #139
  413be4:	b	413cc0 <_obstack_memory_used@@Base+0x1e3c>
  413be8:	mov	w9, wzr
  413bec:	tbnz	w9, #0, 413bf4 <_obstack_memory_used@@Base+0x1d70>
  413bf0:	tbz	w8, #0, 413c64 <_obstack_memory_used@@Base+0x1de0>
  413bf4:	ldr	x9, [x0, #16]
  413bf8:	cbz	x9, 413c64 <_obstack_memory_used@@Base+0x1de0>
  413bfc:	mov	x9, xzr
  413c00:	mov	x10, xzr
  413c04:	b	413c28 <_obstack_memory_used@@Base+0x1da4>
  413c08:	and	w12, w12, #0xffffff00
  413c0c:	orr	w12, w12, #0x7
  413c10:	str	w12, [x11, #8]
  413c14:	ldr	x11, [x0, #16]
  413c18:	add	x10, x10, #0x1
  413c1c:	add	x9, x9, #0x10
  413c20:	cmp	x10, x11
  413c24:	b.cs	413c64 <_obstack_memory_used@@Base+0x1de0>  // b.hs, b.nlast
  413c28:	ldr	x13, [x0]
  413c2c:	add	x11, x13, x9
  413c30:	ldr	w12, [x11, #8]
  413c34:	and	w14, w12, #0xff
  413c38:	cmp	w14, #0x5
  413c3c:	b.eq	413c08 <_obstack_memory_used@@Base+0x1d84>  // b.none
  413c40:	cmp	w14, #0x1
  413c44:	b.ne	413c14 <_obstack_memory_used@@Base+0x1d90>  // b.any
  413c48:	ldrsb	w13, [x13, x9]
  413c4c:	tbnz	w13, #31, 413c5c <_obstack_memory_used@@Base+0x1dd8>
  413c50:	cmp	w14, #0x5
  413c54:	b.eq	413c08 <_obstack_memory_used@@Base+0x1d84>  // b.none
  413c58:	b	413c14 <_obstack_memory_used@@Base+0x1d90>
  413c5c:	and	w12, w12, #0xffdfffff
  413c60:	b	413c10 <_obstack_memory_used@@Base+0x1d8c>
  413c64:	ldr	x10, [x0, #152]
  413c68:	mov	w9, #0x1                   	// #1
  413c6c:	ldrb	w11, [x0, #176]
  413c70:	str	w9, [x0, #180]
  413c74:	cmp	x10, #0x0
  413c78:	cset	w9, gt
  413c7c:	orr	w8, w8, w9
  413c80:	mov	w12, #0x2                   	// #2
  413c84:	tst	w8, #0x1
  413c88:	csel	w8, w12, wzr, ne  // ne = any
  413c8c:	and	w9, w11, #0xfffffff9
  413c90:	orr	w8, w8, w9
  413c94:	strb	w8, [x0, #176]
  413c98:	ldp	x29, x30, [sp], #16
  413c9c:	ret
  413ca0:	ldrsb	w15, [x15]
  413ca4:	cmp	w15, #0x0
  413ca8:	cset	w15, lt  // lt = tstop
  413cac:	orr	w9, w9, w15
  413cb0:	ldr	x15, [x0, #16]
  413cb4:	add	x10, x10, #0x1
  413cb8:	cmp	x10, x15
  413cbc:	b.cs	413bec <_obstack_memory_used@@Base+0x1d68>  // b.hs, b.nlast
  413cc0:	add	x15, x11, x10, lsl #4
  413cc4:	ldrb	w16, [x15, #8]
  413cc8:	sub	w16, w16, #0x1
  413ccc:	cmp	w16, #0xb
  413cd0:	b.hi	413d38 <_obstack_memory_used@@Base+0x1eb4>  // b.pmore
  413cd4:	adr	x17, 413c98 <_obstack_memory_used@@Base+0x1e14>
  413cd8:	ldrb	w18, [x12, x16]
  413cdc:	add	x17, x17, x18, lsl #2
  413ce0:	br	x17
  413ce4:	lsl	x16, x10, #4
  413ce8:	ldr	x16, [x11, x16]
  413cec:	mov	x15, xzr
  413cf0:	add	x16, x16, #0x10
  413cf4:	ldr	x17, [x16, x15]
  413cf8:	cbnz	x17, 413c98 <_obstack_memory_used@@Base+0x1e14>
  413cfc:	add	x15, x15, #0x8
  413d00:	cmp	x15, #0x10
  413d04:	b.ne	413cf4 <_obstack_memory_used@@Base+0x1e70>  // b.any
  413d08:	b	413cb0 <_obstack_memory_used@@Base+0x1e2c>
  413d0c:	ldr	w15, [x15]
  413d10:	sub	w15, w15, #0x10
  413d14:	ror	w15, w15, #4
  413d18:	cmp	w15, #0x7
  413d1c:	b.hi	413c98 <_obstack_memory_used@@Base+0x1e14>  // b.pmore
  413d20:	lsl	w15, w13, w15
  413d24:	tst	w15, w14
  413d28:	b.ne	413cb0 <_obstack_memory_used@@Base+0x1e2c>  // b.any
  413d2c:	b	413c98 <_obstack_memory_used@@Base+0x1e14>
  413d30:	mov	w8, #0x1                   	// #1
  413d34:	b	413cb0 <_obstack_memory_used@@Base+0x1e2c>
  413d38:	bl	402b00 <abort@plt>
  413d3c:	sub	sp, sp, #0x60
  413d40:	stp	x29, x30, [sp, #32]
  413d44:	stp	x22, x21, [sp, #64]
  413d48:	stp	x20, x19, [sp, #80]
  413d4c:	ldr	x8, [x0, #104]
  413d50:	ldr	x9, [x0, #48]
  413d54:	mov	w10, #0x18                  	// #24
  413d58:	mov	x19, x0
  413d5c:	ldr	x8, [x8, #24]
  413d60:	str	x23, [sp, #48]
  413d64:	add	x29, sp, #0x20
  413d68:	ldr	x8, [x8, #56]
  413d6c:	str	x8, [x0, #144]
  413d70:	madd	x1, x8, x10, x9
  413d74:	add	x0, sp, #0x8
  413d78:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  413d7c:	str	w0, [x29, #28]
  413d80:	cbnz	w0, 413f58 <_obstack_memory_used@@Base+0x20d4>
  413d84:	ldr	x8, [x19, #152]
  413d88:	cmp	x8, #0x1
  413d8c:	b.lt	413e9c <_obstack_memory_used@@Base+0x2018>  // b.tstop
  413d90:	ldr	x8, [sp, #16]
  413d94:	cmp	x8, #0x1
  413d98:	b.lt	413e9c <_obstack_memory_used@@Base+0x2018>  // b.tstop
  413d9c:	mov	x22, xzr
  413da0:	mov	w23, #0x18                  	// #24
  413da4:	ldr	x10, [sp, #24]
  413da8:	ldr	x11, [x19]
  413dac:	ldr	x9, [x10, x22, lsl #3]
  413db0:	add	x12, x11, x9, lsl #4
  413db4:	ldrb	w12, [x12, #8]
  413db8:	cmp	w12, #0x4
  413dbc:	b.ne	413e10 <_obstack_memory_used@@Base+0x1f8c>  // b.any
  413dc0:	cmp	x8, #0x1
  413dc4:	b.lt	413e4c <_obstack_memory_used@@Base+0x1fc8>  // b.tstop
  413dc8:	mov	x12, xzr
  413dcc:	add	x13, x11, x9, lsl #4
  413dd0:	b	413de0 <_obstack_memory_used@@Base+0x1f5c>
  413dd4:	add	x12, x12, #0x1
  413dd8:	cmp	x8, x12
  413ddc:	b.eq	413e18 <_obstack_memory_used@@Base+0x1f94>  // b.none
  413de0:	ldr	x14, [x10, x12, lsl #3]
  413de4:	add	x15, x11, x14, lsl #4
  413de8:	ldrb	w15, [x15, #8]
  413dec:	cmp	w15, #0x9
  413df0:	b.ne	413dd4 <_obstack_memory_used@@Base+0x1f50>  // b.any
  413df4:	lsl	x14, x14, #4
  413df8:	ldr	x14, [x11, x14]
  413dfc:	ldr	x15, [x13]
  413e00:	cmp	x14, x15
  413e04:	b.ne	413dd4 <_obstack_memory_used@@Base+0x1f50>  // b.any
  413e08:	cmp	x12, x8
  413e0c:	b.ne	413e24 <_obstack_memory_used@@Base+0x1fa0>  // b.any
  413e10:	mov	w8, #0x4                   	// #4
  413e14:	b	413e80 <_obstack_memory_used@@Base+0x1ffc>
  413e18:	mov	x12, x8
  413e1c:	cmp	x12, x8
  413e20:	b.eq	413e10 <_obstack_memory_used@@Base+0x1f8c>  // b.none
  413e24:	ldr	x8, [x19, #40]
  413e28:	add	x0, sp, #0x8
  413e2c:	madd	x8, x9, x23, x8
  413e30:	ldr	x8, [x8, #16]
  413e34:	ldr	x21, [x8]
  413e38:	mov	x1, x21
  413e3c:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  413e40:	cbz	x0, 413e5c <_obstack_memory_used@@Base+0x1fd8>
  413e44:	mov	w8, wzr
  413e48:	b	413e80 <_obstack_memory_used@@Base+0x1ffc>
  413e4c:	mov	x12, xzr
  413e50:	cmp	x12, x8
  413e54:	b.eq	413e10 <_obstack_memory_used@@Base+0x1f8c>  // b.none
  413e58:	b	413e24 <_obstack_memory_used@@Base+0x1fa0>
  413e5c:	ldr	x8, [x19, #48]
  413e60:	add	x0, sp, #0x8
  413e64:	madd	x1, x21, x23, x8
  413e68:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  413e6c:	cmp	w0, #0x0
  413e70:	cset	w8, ne  // ne = any
  413e74:	csel	x22, xzr, x22, eq  // eq = none
  413e78:	csel	w20, w20, w0, eq  // eq = none
  413e7c:	cbz	w0, 413e44 <_obstack_memory_used@@Base+0x1fc0>
  413e80:	orr	w8, w8, #0x4
  413e84:	cmp	w8, #0x4
  413e88:	b.ne	413f34 <_obstack_memory_used@@Base+0x20b0>  // b.any
  413e8c:	ldr	x8, [sp, #16]
  413e90:	add	x22, x22, #0x1
  413e94:	cmp	x22, x8
  413e98:	b.lt	413da4 <_obstack_memory_used@@Base+0x1f20>  // b.tstop
  413e9c:	add	x0, x29, #0x1c
  413ea0:	add	x2, sp, #0x8
  413ea4:	mov	x1, x19
  413ea8:	mov	w3, wzr
  413eac:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  413eb0:	str	x0, [x19, #72]
  413eb4:	cbz	x0, 413f50 <_obstack_memory_used@@Base+0x20cc>
  413eb8:	ldrsb	w8, [x0, #104]
  413ebc:	tbnz	w8, #31, 413ecc <_obstack_memory_used@@Base+0x2048>
  413ec0:	stp	x0, x0, [x19, #88]
  413ec4:	str	x0, [x19, #80]
  413ec8:	b	413f28 <_obstack_memory_used@@Base+0x20a4>
  413ecc:	add	x0, x29, #0x1c
  413ed0:	add	x2, sp, #0x8
  413ed4:	mov	w3, #0x1                   	// #1
  413ed8:	mov	x1, x19
  413edc:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  413ee0:	str	x0, [x19, #80]
  413ee4:	add	x0, x29, #0x1c
  413ee8:	add	x2, sp, #0x8
  413eec:	mov	w3, #0x2                   	// #2
  413ef0:	mov	x1, x19
  413ef4:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  413ef8:	str	x0, [x19, #88]
  413efc:	add	x0, x29, #0x1c
  413f00:	add	x2, sp, #0x8
  413f04:	mov	w3, #0x6                   	// #6
  413f08:	mov	x1, x19
  413f0c:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  413f10:	ldr	x8, [x19, #80]
  413f14:	str	x0, [x19, #96]
  413f18:	cbz	x8, 413f50 <_obstack_memory_used@@Base+0x20cc>
  413f1c:	cbz	x0, 413f50 <_obstack_memory_used@@Base+0x20cc>
  413f20:	ldr	x8, [x19, #88]
  413f24:	cbz	x8, 413f50 <_obstack_memory_used@@Base+0x20cc>
  413f28:	ldr	x0, [sp, #24]
  413f2c:	bl	402bd0 <free@plt>
  413f30:	mov	w20, wzr
  413f34:	mov	w0, w20
  413f38:	ldp	x20, x19, [sp, #80]
  413f3c:	ldp	x22, x21, [sp, #64]
  413f40:	ldr	x23, [sp, #48]
  413f44:	ldp	x29, x30, [sp, #32]
  413f48:	add	sp, sp, #0x60
  413f4c:	ret
  413f50:	ldr	w20, [x29, #28]
  413f54:	b	413f34 <_obstack_memory_used@@Base+0x20b0>
  413f58:	mov	w20, w0
  413f5c:	b	413f34 <_obstack_memory_used@@Base+0x20b0>
  413f60:	and	w8, w4, #0x1
  413f64:	cmp	x3, #0x0
  413f68:	strb	w8, [x2, #136]
  413f6c:	cset	w8, ne  // ne = any
  413f70:	orr	w8, w8, w4
  413f74:	and	w8, w8, #0x1
  413f78:	str	x0, [x2]
  413f7c:	stp	x1, x1, [x2, #80]
  413f80:	str	x3, [x2, #120]
  413f84:	strb	w8, [x2, #139]
  413f88:	ldr	w8, [x5, #180]
  413f8c:	str	w8, [x2, #144]
  413f90:	ldrb	w8, [x5, #176]
  413f94:	ubfx	w8, w8, #2, #1
  413f98:	strb	w8, [x2, #137]
  413f9c:	ldrb	w8, [x5, #176]
  413fa0:	stp	x1, x1, [x2, #96]
  413fa4:	ubfx	w8, w8, #3, #1
  413fa8:	strb	w8, [x2, #138]
  413fac:	ret
  413fb0:	stp	x29, x30, [sp, #-32]!
  413fb4:	stp	x20, x19, [sp, #16]
  413fb8:	ldr	w8, [x0, #144]
  413fbc:	mov	x19, x0
  413fc0:	mov	x20, x1
  413fc4:	mov	x29, sp
  413fc8:	cmp	w8, #0x2
  413fcc:	b.lt	414020 <_obstack_memory_used@@Base+0x219c>  // b.tstop
  413fd0:	lsr	x8, x20, #61
  413fd4:	cbnz	x8, 414050 <_obstack_memory_used@@Base+0x21cc>
  413fd8:	ldr	x0, [x19, #16]
  413fdc:	lsl	x1, x20, #2
  413fe0:	bl	402a40 <realloc@plt>
  413fe4:	cbz	x0, 414050 <_obstack_memory_used@@Base+0x21cc>
  413fe8:	mov	x8, x0
  413fec:	ldr	x0, [x19, #24]
  413ff0:	str	x8, [x19, #16]
  413ff4:	cbz	x0, 414010 <_obstack_memory_used@@Base+0x218c>
  413ff8:	lsl	x1, x20, #3
  413ffc:	bl	402a40 <realloc@plt>
  414000:	cbz	x0, 414058 <_obstack_memory_used@@Base+0x21d4>
  414004:	mov	w8, wzr
  414008:	str	x0, [x19, #24]
  41400c:	cbnz	w8, 414014 <_obstack_memory_used@@Base+0x2190>
  414010:	mov	w8, wzr
  414014:	cbz	w8, 414020 <_obstack_memory_used@@Base+0x219c>
  414018:	mov	w0, #0xc                   	// #12
  41401c:	b	414044 <_obstack_memory_used@@Base+0x21c0>
  414020:	ldrb	w8, [x19, #139]
  414024:	cbz	w8, 41403c <_obstack_memory_used@@Base+0x21b8>
  414028:	ldr	x0, [x19, #8]
  41402c:	mov	x1, x20
  414030:	bl	402a40 <realloc@plt>
  414034:	cbz	x0, 414018 <_obstack_memory_used@@Base+0x2194>
  414038:	str	x0, [x19, #8]
  41403c:	mov	w0, wzr
  414040:	str	x20, [x19, #64]
  414044:	ldp	x20, x19, [sp, #16]
  414048:	ldp	x29, x30, [sp], #32
  41404c:	ret
  414050:	mov	w8, #0x1                   	// #1
  414054:	b	414014 <_obstack_memory_used@@Base+0x2190>
  414058:	mov	w8, #0x1                   	// #1
  41405c:	cbnz	w8, 414014 <_obstack_memory_used@@Base+0x2190>
  414060:	b	414010 <_obstack_memory_used@@Base+0x218c>
  414064:	sub	sp, sp, #0xb0
  414068:	stp	x29, x30, [sp, #80]
  41406c:	stp	x28, x27, [sp, #96]
  414070:	stp	x26, x25, [sp, #112]
  414074:	stp	x24, x23, [sp, #128]
  414078:	stp	x22, x21, [sp, #144]
  41407c:	stp	x20, x19, [sp, #160]
  414080:	ldr	x8, [x0, #64]
  414084:	ldr	x9, [x0, #88]
  414088:	ldrb	w10, [x0, #138]
  41408c:	ldr	x27, [x0, #48]
  414090:	mov	x19, x0
  414094:	cmp	x8, x9
  414098:	csel	x26, x9, x8, gt
  41409c:	add	x29, sp, #0x50
  4140a0:	cbnz	w10, 4140b4 <_obstack_memory_used@@Base+0x2230>
  4140a4:	ldr	x8, [x19, #120]
  4140a8:	cbnz	x8, 4140b4 <_obstack_memory_used@@Base+0x2230>
  4140ac:	ldrb	w8, [x19, #140]
  4140b0:	cbz	w8, 4140bc <_obstack_memory_used@@Base+0x2238>
  4140b4:	ldr	x25, [x19, #56]
  4140b8:	b	4142c8 <_obstack_memory_used@@Base+0x2444>
  4140bc:	cmp	x26, x27
  4140c0:	b.le	4142b8 <_obstack_memory_used@@Base+0x2434>
  4140c4:	adrp	x23, 421000 <_obstack_memory_used@@Base+0xf17c>
  4140c8:	add	x20, x19, #0x20
  4140cc:	add	x23, x23, #0x399
  4140d0:	mov	x28, x26
  4140d4:	ldr	x21, [x19, #40]
  4140d8:	ldr	x22, [x19]
  4140dc:	add	x8, x21, x27
  4140e0:	ldrsb	w24, [x22, x8]
  4140e4:	tbnz	w24, #31, 414124 <_obstack_memory_used@@Base+0x22a0>
  4140e8:	mov	x0, x20
  4140ec:	bl	402b30 <mbsinit@plt>
  4140f0:	cbz	w0, 414124 <_obstack_memory_used@@Base+0x22a0>
  4140f4:	and	x21, x24, #0xff
  4140f8:	bl	402a50 <__ctype_toupper_loc@plt>
  4140fc:	ldr	x8, [x0]
  414100:	ldr	x9, [x19, #8]
  414104:	ldr	w8, [x8, x21, lsl #2]
  414108:	strb	w8, [x9, x27]
  41410c:	ldp	x8, x9, [x19, #8]
  414110:	ldrb	w8, [x8, x27]
  414114:	str	w8, [x9, x27, lsl #2]
  414118:	add	x27, x27, #0x1
  41411c:	mov	w8, #0x2                   	// #2
  414120:	b	414294 <_obstack_memory_used@@Base+0x2410>
  414124:	ldr	x8, [x20]
  414128:	add	x9, x22, x21
  41412c:	sub	x2, x26, x27
  414130:	add	x1, x9, x27
  414134:	add	x0, sp, #0x4
  414138:	mov	x3, x20
  41413c:	stur	x8, [x29, #-8]
  414140:	bl	411af4 <wcrtomb@plt+0xecc4>
  414144:	sub	x24, x0, #0x1
  414148:	mov	x21, x0
  41414c:	cmn	x24, #0x4
  414150:	b.hi	4141d0 <_obstack_memory_used@@Base+0x234c>  // b.pmore
  414154:	ldr	w0, [sp, #4]
  414158:	bl	402d60 <towupper@plt>
  41415c:	ldr	w8, [sp, #4]
  414160:	mov	w22, w0
  414164:	cmp	w0, w8
  414168:	b.ne	41418c <_obstack_memory_used@@Base+0x2308>  // b.any
  41416c:	ldp	x9, x8, [x19]
  414170:	ldr	x10, [x19, #40]
  414174:	mov	x2, x21
  414178:	add	x0, x8, x27
  41417c:	add	x8, x9, x10
  414180:	add	x1, x8, x27
  414184:	bl	402710 <memcpy@plt>
  414188:	b	414244 <_obstack_memory_used@@Base+0x23c0>
  41418c:	add	x0, sp, #0x8
  414190:	sub	x2, x29, #0x8
  414194:	mov	w1, w22
  414198:	bl	402e30 <wcrtomb@plt>
  41419c:	cmp	x21, x0
  4141a0:	b.ne	414238 <_obstack_memory_used@@Base+0x23b4>  // b.any
  4141a4:	ldr	x8, [x19, #8]
  4141a8:	add	x1, sp, #0x8
  4141ac:	mov	x2, x21
  4141b0:	add	x0, x8, x27
  4141b4:	bl	402710 <memcpy@plt>
  4141b8:	mov	w8, wzr
  4141bc:	cbz	w8, 414244 <_obstack_memory_used@@Base+0x23c0>
  4141c0:	mov	x26, x27
  4141c4:	mov	x27, x26
  4141c8:	cbnz	w8, 414294 <_obstack_memory_used@@Base+0x2410>
  4141cc:	b	41428c <_obstack_memory_used@@Base+0x2408>
  4141d0:	add	x8, x21, #0x1
  4141d4:	cmp	x8, #0x2
  4141d8:	b.cs	414210 <_obstack_memory_used@@Base+0x238c>  // b.hs, b.nlast
  4141dc:	ldr	x8, [x19, #40]
  4141e0:	ldp	x9, x10, [x19]
  4141e4:	add	x26, x27, #0x1
  4141e8:	cmn	x21, #0x1
  4141ec:	add	x8, x8, x27
  4141f0:	ldrb	w8, [x9, x8]
  4141f4:	strb	w8, [x10, x27]
  4141f8:	ldr	x9, [x19, #16]
  4141fc:	str	w8, [x9, x27, lsl #2]
  414200:	b.ne	41428c <_obstack_memory_used@@Base+0x2408>  // b.any
  414204:	ldur	x8, [x29, #-8]
  414208:	str	x8, [x20]
  41420c:	b	41428c <_obstack_memory_used@@Base+0x2408>
  414210:	cmn	x21, #0x2
  414214:	b.ne	414228 <_obstack_memory_used@@Base+0x23a4>  // b.any
  414218:	ldr	x8, [x19, #64]
  41421c:	ldr	x9, [x19, #88]
  414220:	cmp	x8, x9
  414224:	b.ge	4141dc <_obstack_memory_used@@Base+0x2358>  // b.tcont
  414228:	ldur	x8, [x29, #-8]
  41422c:	str	x8, [x20]
  414230:	mov	w8, #0x3                   	// #3
  414234:	b	414294 <_obstack_memory_used@@Base+0x2410>
  414238:	mov	w8, #0x4                   	// #4
  41423c:	mov	x25, x27
  414240:	cbnz	w8, 4141c0 <_obstack_memory_used@@Base+0x233c>
  414244:	ldr	x8, [x19, #16]
  414248:	add	x9, x21, x27
  41424c:	add	x26, x27, #0x1
  414250:	cmp	x26, x9
  414254:	str	w22, [x8, x27, lsl #2]
  414258:	b.ge	414280 <_obstack_memory_used@@Base+0x23fc>  // b.tcont
  41425c:	add	x8, x8, x27, lsl #2
  414260:	lsl	x9, x21, #2
  414264:	add	x0, x8, #0x4
  414268:	sub	x2, x9, #0x4
  41426c:	mov	w1, #0xff                  	// #255
  414270:	bl	4029c0 <memset@plt>
  414274:	subs	x24, x24, #0x1
  414278:	add	x26, x26, #0x1
  41427c:	b.ne	414274 <_obstack_memory_used@@Base+0x23f0>  // b.any
  414280:	mov	w8, wzr
  414284:	mov	x27, x26
  414288:	cbnz	w8, 414294 <_obstack_memory_used@@Base+0x2410>
  41428c:	mov	w8, wzr
  414290:	mov	x27, x26
  414294:	cmp	w8, #0x4
  414298:	b.hi	4142c4 <_obstack_memory_used@@Base+0x2440>  // b.pmore
  41429c:	adr	x9, 4142b0 <_obstack_memory_used@@Base+0x242c>
  4142a0:	ldrb	w10, [x23, x8]
  4142a4:	add	x9, x9, x10, lsl #2
  4142a8:	mov	x26, x28
  4142ac:	br	x9
  4142b0:	cmp	x26, x27
  4142b4:	b.gt	4140d4 <_obstack_memory_used@@Base+0x2250>
  4142b8:	mov	w0, wzr
  4142bc:	stp	x27, x27, [x19, #48]
  4142c0:	b	4143f4 <_obstack_memory_used@@Base+0x2570>
  4142c4:	b	4143f4 <_obstack_memory_used@@Base+0x2570>
  4142c8:	cmp	x27, x26
  4142cc:	b.ge	4143e4 <_obstack_memory_used@@Base+0x2560>  // b.tcont
  4142d0:	mov	x22, x19
  4142d4:	ldr	x8, [x22, #32]!
  4142d8:	sub	x2, x26, x27
  4142dc:	stur	x8, [x29, #-8]
  4142e0:	ldr	x8, [x22, #88]
  4142e4:	cbnz	x8, 414414 <_obstack_memory_used@@Base+0x2590>
  4142e8:	ldr	x8, [x19]
  4142ec:	ldr	x9, [x19, #40]
  4142f0:	add	x8, x8, x9
  4142f4:	add	x24, x8, x25
  4142f8:	mov	x0, sp
  4142fc:	mov	x1, x24
  414300:	mov	x3, x22
  414304:	bl	411af4 <wcrtomb@plt+0xecc4>
  414308:	sub	x28, x0, #0x1
  41430c:	mov	x20, x0
  414310:	cmn	x28, #0x4
  414314:	b.hi	41446c <_obstack_memory_used@@Base+0x25e8>  // b.pmore
  414318:	ldr	w0, [sp]
  41431c:	bl	402d60 <towupper@plt>
  414320:	ldr	w8, [sp]
  414324:	mov	w21, w0
  414328:	cmp	w0, w8
  41432c:	b.ne	414348 <_obstack_memory_used@@Base+0x24c4>  // b.any
  414330:	ldr	x8, [x19, #8]
  414334:	mov	x1, x24
  414338:	mov	x2, x20
  41433c:	add	x0, x8, x27
  414340:	bl	402710 <memcpy@plt>
  414344:	b	41437c <_obstack_memory_used@@Base+0x24f8>
  414348:	add	x0, sp, #0x8
  41434c:	sub	x2, x29, #0x8
  414350:	mov	w1, w21
  414354:	bl	402e30 <wcrtomb@plt>
  414358:	subs	x9, x0, x20
  41435c:	b.ne	4144d8 <_obstack_memory_used@@Base+0x2654>  // b.any
  414360:	ldr	x8, [x19, #8]
  414364:	add	x1, sp, #0x8
  414368:	add	x0, x8, x27
  41436c:	mov	x2, x20
  414370:	bl	402710 <memcpy@plt>
  414374:	mov	w8, wzr
  414378:	cbnz	wzr, 4143d0 <_obstack_memory_used@@Base+0x254c>
  41437c:	ldrb	w8, [x19, #140]
  414380:	cbz	w8, 414388 <_obstack_memory_used@@Base+0x2504>
  414384:	cbnz	x20, 414508 <_obstack_memory_used@@Base+0x2684>
  414388:	ldr	x8, [x19, #16]
  41438c:	add	x9, x27, x20
  414390:	add	x22, x27, #0x1
  414394:	add	x25, x25, x20
  414398:	cmp	x22, x9
  41439c:	str	w21, [x8, x27, lsl #2]
  4143a0:	b.ge	4143c8 <_obstack_memory_used@@Base+0x2544>  // b.tcont
  4143a4:	add	x8, x8, x27, lsl #2
  4143a8:	lsl	x9, x20, #2
  4143ac:	add	x0, x8, #0x4
  4143b0:	sub	x2, x9, #0x4
  4143b4:	mov	w1, #0xff                  	// #255
  4143b8:	bl	4029c0 <memset@plt>
  4143bc:	subs	x28, x28, #0x1
  4143c0:	add	x22, x22, #0x1
  4143c4:	b.ne	4143bc <_obstack_memory_used@@Base+0x2538>  // b.any
  4143c8:	mov	w8, wzr
  4143cc:	mov	x27, x22
  4143d0:	cbz	w8, 4142c8 <_obstack_memory_used@@Base+0x2444>
  4143d4:	cmp	w8, #0x8
  4143d8:	b.eq	4142c8 <_obstack_memory_used@@Base+0x2444>  // b.none
  4143dc:	cmp	w8, #0x7
  4143e0:	b.ne	4143f0 <_obstack_memory_used@@Base+0x256c>  // b.any
  4143e4:	mov	w0, wzr
  4143e8:	stp	x27, x25, [x19, #48]
  4143ec:	b	4143f4 <_obstack_memory_used@@Base+0x2570>
  4143f0:	mov	w0, #0xc                   	// #12
  4143f4:	ldp	x20, x19, [sp, #160]
  4143f8:	ldp	x22, x21, [sp, #144]
  4143fc:	ldp	x24, x23, [sp, #128]
  414400:	ldp	x26, x25, [sp, #112]
  414404:	ldp	x28, x27, [sp, #96]
  414408:	ldp	x29, x30, [sp, #80]
  41440c:	add	sp, sp, #0xb0
  414410:	ret
  414414:	ldr	w9, [x19, #144]
  414418:	add	x24, sp, #0x8
  41441c:	cmp	w9, #0x1
  414420:	b.lt	4142f8 <_obstack_memory_used@@Base+0x2474>  // b.tstop
  414424:	cmp	x2, #0x1
  414428:	b.lt	4142f8 <_obstack_memory_used@@Base+0x2474>  // b.tstop
  41442c:	ldr	x11, [x19, #40]
  414430:	ldr	x12, [x19]
  414434:	ldrsw	x10, [x19, #144]
  414438:	mov	x9, xzr
  41443c:	add	x11, x25, x11
  414440:	add	x11, x12, x11
  414444:	ldrb	w12, [x11, x9]
  414448:	add	x24, sp, #0x8
  41444c:	ldrb	w12, [x8, x12]
  414450:	strb	w12, [x24, x9]
  414454:	add	x9, x9, #0x1
  414458:	cmp	x9, x10
  41445c:	b.ge	4142f8 <_obstack_memory_used@@Base+0x2474>  // b.tcont
  414460:	cmp	x2, x9
  414464:	b.gt	414444 <_obstack_memory_used@@Base+0x25c0>
  414468:	b	4142f8 <_obstack_memory_used@@Base+0x2474>
  41446c:	add	x8, x20, #0x1
  414470:	cmp	x8, #0x2
  414474:	b.cc	414490 <_obstack_memory_used@@Base+0x260c>  // b.lo, b.ul, b.last
  414478:	cmn	x20, #0x2
  41447c:	b.ne	414620 <_obstack_memory_used@@Base+0x279c>  // b.any
  414480:	ldr	x8, [x19, #64]
  414484:	ldr	x9, [x19, #88]
  414488:	cmp	x8, x9
  41448c:	b.lt	414620 <_obstack_memory_used@@Base+0x279c>  // b.tstop
  414490:	ldr	x8, [x19, #40]
  414494:	ldr	x10, [x19]
  414498:	ldr	x9, [x19, #120]
  41449c:	add	x8, x8, x25
  4144a0:	ldrb	w8, [x10, x8]
  4144a4:	cbnz	x9, 414638 <_obstack_memory_used@@Base+0x27b4>
  4144a8:	ldr	x9, [x19, #8]
  4144ac:	strb	w8, [x9, x27]
  4144b0:	ldrb	w9, [x19, #140]
  4144b4:	cbnz	w9, 414640 <_obstack_memory_used@@Base+0x27bc>
  4144b8:	ldr	x10, [x19, #16]
  4144bc:	add	x25, x25, #0x1
  4144c0:	add	x9, x27, #0x1
  4144c4:	cmn	x20, #0x1
  4144c8:	str	w8, [x10, x27, lsl #2]
  4144cc:	b.eq	41464c <_obstack_memory_used@@Base+0x27c8>  // b.none
  4144d0:	mov	x27, x9
  4144d4:	b	4142c8 <_obstack_memory_used@@Base+0x2444>
  4144d8:	mov	x23, x0
  4144dc:	cmn	x0, #0x1
  4144e0:	b.eq	41452c <_obstack_memory_used@@Base+0x26a8>  // b.none
  4144e4:	ldr	x8, [x19, #64]
  4144e8:	add	x24, x23, x27
  4144ec:	cmp	x24, x8
  4144f0:	b.ls	414538 <_obstack_memory_used@@Base+0x26b4>  // b.plast
  4144f4:	ldur	x8, [x29, #-8]
  4144f8:	str	x8, [x22]
  4144fc:	mov	w8, #0x7                   	// #7
  414500:	cbnz	w8, 4143d0 <_obstack_memory_used@@Base+0x254c>
  414504:	b	41437c <_obstack_memory_used@@Base+0x24f8>
  414508:	ldr	x8, [x19, #24]
  41450c:	mov	x9, x25
  414510:	mov	x10, x20
  414514:	add	x8, x8, x27, lsl #3
  414518:	str	x9, [x8], #8
  41451c:	subs	x10, x10, #0x1
  414520:	add	x9, x9, #0x1
  414524:	b.ne	414518 <_obstack_memory_used@@Base+0x2694>  // b.any
  414528:	b	414388 <_obstack_memory_used@@Base+0x2504>
  41452c:	ldr	x8, [x19, #8]
  414530:	mov	x1, x24
  414534:	b	414368 <_obstack_memory_used@@Base+0x24e4>
  414538:	mov	x22, x9
  41453c:	ldr	x9, [x19, #24]
  414540:	cbnz	x9, 414554 <_obstack_memory_used@@Base+0x26d0>
  414544:	lsl	x0, x8, #3
  414548:	bl	4028e0 <malloc@plt>
  41454c:	str	x0, [x19, #24]
  414550:	cbz	x0, 41462c <_obstack_memory_used@@Base+0x27a8>
  414554:	ldrb	w8, [x19, #140]
  414558:	cbnz	w8, 414580 <_obstack_memory_used@@Base+0x26fc>
  41455c:	cbz	x27, 414578 <_obstack_memory_used@@Base+0x26f4>
  414560:	ldr	x8, [x19, #24]
  414564:	mov	x9, xzr
  414568:	str	x9, [x8, x9, lsl #3]
  41456c:	add	x9, x9, #0x1
  414570:	cmp	x27, x9
  414574:	b.ne	414568 <_obstack_memory_used@@Base+0x26e4>  // b.any
  414578:	mov	w8, #0x1                   	// #1
  41457c:	strb	w8, [x19, #140]
  414580:	ldr	x8, [x19, #8]
  414584:	add	x1, sp, #0x8
  414588:	mov	x2, x23
  41458c:	add	x0, x8, x27
  414590:	bl	402710 <memcpy@plt>
  414594:	ldr	x8, [x19, #16]
  414598:	cmp	x23, #0x2
  41459c:	mov	x13, x25
  4145a0:	str	w21, [x8, x27, lsl #2]
  4145a4:	ldr	x9, [x19, #24]
  4145a8:	str	x25, [x9, x27, lsl #3]
  4145ac:	b.cc	4145e0 <_obstack_memory_used@@Base+0x275c>  // b.lo, b.ul, b.last
  4145b0:	add	x8, x8, x27, lsl #2
  4145b4:	add	x9, x9, x27, lsl #3
  4145b8:	mov	w10, #0x1                   	// #1
  4145bc:	mov	w11, #0xffffffff            	// #-1
  4145c0:	cmp	x10, x20
  4145c4:	csel	x12, x10, x28, cc  // cc = lo, ul, last
  4145c8:	add	x12, x12, x13
  4145cc:	str	x12, [x9, x10, lsl #3]
  4145d0:	str	w11, [x8, x10, lsl #2]
  4145d4:	add	x10, x10, #0x1
  4145d8:	cmp	x23, x10
  4145dc:	b.ne	4145c0 <_obstack_memory_used@@Base+0x273c>  // b.any
  4145e0:	ldp	x8, x9, [x19, #88]
  4145e4:	add	x8, x8, x22
  4145e8:	cmp	x9, x13
  4145ec:	str	x8, [x19, #88]
  4145f0:	b.le	414600 <_obstack_memory_used@@Base+0x277c>
  4145f4:	ldr	x9, [x19, #104]
  4145f8:	add	x9, x9, x22
  4145fc:	str	x9, [x19, #104]
  414600:	ldr	x9, [x19, #64]
  414604:	add	x25, x20, x25
  414608:	mov	x27, x24
  41460c:	cmp	x9, x8
  414610:	csel	x26, x8, x9, gt
  414614:	mov	w8, #0x8                   	// #8
  414618:	cbnz	w8, 4143d0 <_obstack_memory_used@@Base+0x254c>
  41461c:	b	41437c <_obstack_memory_used@@Base+0x24f8>
  414620:	ldur	x8, [x29, #-8]
  414624:	str	x8, [x22]
  414628:	b	4143e4 <_obstack_memory_used@@Base+0x2560>
  41462c:	mov	w8, #0x1                   	// #1
  414630:	cbnz	w8, 4143d0 <_obstack_memory_used@@Base+0x254c>
  414634:	b	41437c <_obstack_memory_used@@Base+0x24f8>
  414638:	ldrb	w8, [x9, x8]
  41463c:	b	4144a8 <_obstack_memory_used@@Base+0x2624>
  414640:	ldr	x9, [x19, #24]
  414644:	str	x25, [x9, x27, lsl #3]
  414648:	b	4144b8 <_obstack_memory_used@@Base+0x2634>
  41464c:	ldur	x8, [x29, #-8]
  414650:	mov	x27, x9
  414654:	str	x8, [x22]
  414658:	b	4142c8 <_obstack_memory_used@@Base+0x2444>
  41465c:	stp	x29, x30, [sp, #-48]!
  414660:	stp	x20, x19, [sp, #32]
  414664:	ldr	x8, [x0, #64]
  414668:	ldr	x9, [x0, #88]
  41466c:	ldr	x20, [x0, #48]
  414670:	str	x21, [sp, #16]
  414674:	mov	x19, x0
  414678:	cmp	x8, x9
  41467c:	csel	x21, x9, x8, gt
  414680:	mov	x29, sp
  414684:	cmp	x20, x21
  414688:	b.ge	4146c8 <_obstack_memory_used@@Base+0x2844>  // b.tcont
  41468c:	ldr	x8, [x19]
  414690:	ldr	x9, [x19, #40]
  414694:	add	x9, x8, x9
  414698:	ldr	x8, [x19, #120]
  41469c:	ldrb	w0, [x9, x20]
  4146a0:	cbnz	x8, 4146c0 <_obstack_memory_used@@Base+0x283c>
  4146a4:	bl	4028f0 <toupper@plt>
  4146a8:	ldr	x8, [x19, #8]
  4146ac:	strb	w0, [x8, x20]
  4146b0:	add	x20, x20, #0x1
  4146b4:	cmp	x20, x21
  4146b8:	b.lt	41468c <_obstack_memory_used@@Base+0x2808>  // b.tstop
  4146bc:	b	4146c8 <_obstack_memory_used@@Base+0x2844>
  4146c0:	ldrb	w0, [x8, x0]
  4146c4:	b	4146a4 <_obstack_memory_used@@Base+0x2820>
  4146c8:	stp	x20, x20, [x19, #48]
  4146cc:	ldp	x20, x19, [sp, #32]
  4146d0:	ldr	x21, [sp, #16]
  4146d4:	ldp	x29, x30, [sp], #48
  4146d8:	ret
  4146dc:	sub	sp, sp, #0x90
  4146e0:	stp	x29, x30, [sp, #80]
  4146e4:	stp	x24, x23, [sp, #96]
  4146e8:	stp	x22, x21, [sp, #112]
  4146ec:	stp	x20, x19, [sp, #128]
  4146f0:	ldr	x8, [x0, #64]
  4146f4:	ldr	x9, [x0, #88]
  4146f8:	ldr	x23, [x0, #48]
  4146fc:	mov	x19, x0
  414700:	add	x20, x0, #0x20
  414704:	cmp	x8, x9
  414708:	csel	x22, x9, x8, gt
  41470c:	add	x29, sp, #0x50
  414710:	b	414720 <_obstack_memory_used@@Base+0x289c>
  414714:	mov	w8, #0x1                   	// #1
  414718:	mov	x23, x24
  41471c:	tbz	w8, #0, 414864 <_obstack_memory_used@@Base+0x29e0>
  414720:	subs	x2, x22, x23
  414724:	b.le	414864 <_obstack_memory_used@@Base+0x29e0>
  414728:	ldr	x8, [x19, #120]
  41472c:	ldr	x24, [x19, #32]
  414730:	cbnz	x8, 4147f4 <_obstack_memory_used@@Base+0x2970>
  414734:	ldr	x8, [x19]
  414738:	ldr	x9, [x19, #40]
  41473c:	add	x8, x8, x9
  414740:	add	x1, x8, x23
  414744:	add	x0, sp, #0xc
  414748:	mov	x3, x20
  41474c:	bl	411af4 <wcrtomb@plt+0xecc4>
  414750:	add	x8, x0, #0x1
  414754:	cmp	x8, #0x2
  414758:	b.cc	414788 <_obstack_memory_used@@Base+0x2904>  // b.lo, b.ul, b.last
  41475c:	mov	x21, x0
  414760:	cmn	x0, #0x2
  414764:	b.ne	4147ac <_obstack_memory_used@@Base+0x2928>  // b.any
  414768:	ldr	x8, [x19, #64]
  41476c:	ldr	x9, [x19, #88]
  414770:	cmp	x8, x9
  414774:	b.ge	414788 <_obstack_memory_used@@Base+0x2904>  // b.tcont
  414778:	mov	w8, wzr
  41477c:	str	x24, [x20]
  414780:	tbnz	w8, #0, 414720 <_obstack_memory_used@@Base+0x289c>
  414784:	b	414864 <_obstack_memory_used@@Base+0x29e0>
  414788:	ldr	x8, [x19, #40]
  41478c:	ldr	x9, [x19]
  414790:	add	x8, x8, x23
  414794:	ldrb	w8, [x9, x8]
  414798:	str	w8, [sp, #12]
  41479c:	ldr	x9, [x19, #120]
  4147a0:	cbnz	x9, 414858 <_obstack_memory_used@@Base+0x29d4>
  4147a4:	mov	w21, #0x1                   	// #1
  4147a8:	str	x24, [x20]
  4147ac:	ldr	w9, [sp, #12]
  4147b0:	ldr	x8, [x19, #16]
  4147b4:	add	x10, x21, x23
  4147b8:	add	x24, x23, #0x1
  4147bc:	cmp	x24, x10
  4147c0:	str	w9, [x8, x23, lsl #2]
  4147c4:	b.ge	414714 <_obstack_memory_used@@Base+0x2890>  // b.tcont
  4147c8:	add	x8, x8, x23, lsl #2
  4147cc:	lsl	x9, x21, #2
  4147d0:	add	x0, x8, #0x4
  4147d4:	sub	x2, x9, #0x4
  4147d8:	mov	w1, #0xff                  	// #255
  4147dc:	bl	4029c0 <memset@plt>
  4147e0:	sub	x8, x21, #0x1
  4147e4:	subs	x8, x8, #0x1
  4147e8:	add	x24, x24, #0x1
  4147ec:	b.ne	4147e4 <_obstack_memory_used@@Base+0x2960>  // b.any
  4147f0:	b	414714 <_obstack_memory_used@@Base+0x2890>
  4147f4:	ldr	w8, [x19, #144]
  4147f8:	add	x1, sp, #0x10
  4147fc:	cmp	w8, #0x1
  414800:	b.lt	414744 <_obstack_memory_used@@Base+0x28c0>  // b.tstop
  414804:	cmp	x2, #0x1
  414808:	b.lt	414744 <_obstack_memory_used@@Base+0x28c0>  // b.tstop
  41480c:	mov	x8, xzr
  414810:	ldr	x9, [x19, #40]
  414814:	ldp	x10, x12, [x19]
  414818:	ldr	x11, [x19, #120]
  41481c:	add	x1, sp, #0x10
  414820:	add	x9, x10, x9
  414824:	add	x9, x9, x23
  414828:	ldrb	w9, [x9, x8]
  41482c:	add	x10, x12, x23
  414830:	ldrb	w9, [x11, x9]
  414834:	strb	w9, [x10, x8]
  414838:	strb	w9, [x1, x8]
  41483c:	ldr	w9, [x19, #144]
  414840:	add	x8, x8, #0x1
  414844:	cmp	w9, w8
  414848:	b.le	414744 <_obstack_memory_used@@Base+0x28c0>
  41484c:	cmp	x2, x8
  414850:	b.gt	414810 <_obstack_memory_used@@Base+0x298c>
  414854:	b	414744 <_obstack_memory_used@@Base+0x28c0>
  414858:	ldrb	w8, [x9, x8]
  41485c:	str	w8, [sp, #12]
  414860:	b	4147a4 <_obstack_memory_used@@Base+0x2920>
  414864:	stp	x23, x23, [x19, #48]
  414868:	ldp	x20, x19, [sp, #128]
  41486c:	ldp	x22, x21, [sp, #112]
  414870:	ldp	x24, x23, [sp, #96]
  414874:	ldp	x29, x30, [sp, #80]
  414878:	add	sp, sp, #0x90
  41487c:	ret
  414880:	ldr	x9, [x0, #64]
  414884:	ldr	x10, [x0, #88]
  414888:	ldr	x8, [x0, #48]
  41488c:	cmp	x9, x10
  414890:	csel	x9, x10, x9, gt
  414894:	cmp	x8, x9
  414898:	b.ge	4148c4 <_obstack_memory_used@@Base+0x2a40>  // b.tcont
  41489c:	ldr	x10, [x0, #40]
  4148a0:	ldp	x11, x13, [x0]
  4148a4:	ldr	x12, [x0, #120]
  4148a8:	add	x10, x11, x10
  4148ac:	ldrb	w10, [x10, x8]
  4148b0:	ldrb	w10, [x12, x10]
  4148b4:	strb	w10, [x13, x8]
  4148b8:	add	x8, x8, #0x1
  4148bc:	cmp	x8, x9
  4148c0:	b.lt	41489c <_obstack_memory_used@@Base+0x2a18>  // b.tstop
  4148c4:	stp	x8, x8, [x0, #48]
  4148c8:	ret
  4148cc:	stp	x29, x30, [sp, #-32]!
  4148d0:	str	x19, [sp, #16]
  4148d4:	mov	x29, sp
  4148d8:	mov	x19, x1
  4148dc:	bl	414a74 <_obstack_memory_used@@Base+0x2bf0>
  4148e0:	ldr	x8, [x19, #72]
  4148e4:	add	x8, x8, w0, sxtw
  4148e8:	str	x8, [x19, #72]
  4148ec:	ldr	x19, [sp, #16]
  4148f0:	ldp	x29, x30, [sp], #32
  4148f4:	ret
  4148f8:	sub	sp, sp, #0x70
  4148fc:	stp	x29, x30, [sp, #16]
  414900:	stp	x28, x27, [sp, #32]
  414904:	stp	x26, x25, [sp, #48]
  414908:	stp	x24, x23, [sp, #64]
  41490c:	stp	x22, x21, [sp, #80]
  414910:	stp	x20, x19, [sp, #96]
  414914:	ldr	x25, [x1]
  414918:	add	x29, sp, #0x10
  41491c:	mov	x20, x5
  414920:	mov	x21, x4
  414924:	ldr	x8, [x25, #168]
  414928:	mov	x22, x3
  41492c:	mov	x23, x2
  414930:	mov	x24, x1
  414934:	str	x8, [sp, #8]
  414938:	mov	x26, x0
  41493c:	bl	415070 <_obstack_memory_used@@Base+0x31ec>
  414940:	mov	x19, x0
  414944:	cbnz	x0, 414950 <_obstack_memory_used@@Base+0x2acc>
  414948:	ldr	w8, [x20]
  41494c:	cbnz	w8, 414a38 <_obstack_memory_used@@Base+0x2bb4>
  414950:	orr	x27, x22, #0x800000
  414954:	b	414974 <_obstack_memory_used@@Base+0x2af0>
  414958:	mov	x2, xzr
  41495c:	mov	w3, #0xa                   	// #10
  414960:	mov	x0, x25
  414964:	mov	x1, x19
  414968:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  41496c:	mov	x19, x0
  414970:	cbz	x0, 4149f4 <_obstack_memory_used@@Base+0x2b70>
  414974:	ldrb	w8, [x23, #8]
  414978:	cmp	w8, #0xa
  41497c:	b.ne	4149fc <_obstack_memory_used@@Base+0x2b78>  // b.any
  414980:	mov	x0, x23
  414984:	mov	x1, x26
  414988:	mov	x2, x27
  41498c:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  414990:	ldrb	w8, [x23, #8]
  414994:	orr	w9, w8, #0x8
  414998:	cmp	w9, #0xa
  41499c:	b.eq	414958 <_obstack_memory_used@@Base+0x2ad4>  // b.none
  4149a0:	cbz	x21, 4149ac <_obstack_memory_used@@Base+0x2b28>
  4149a4:	cmp	w8, #0x9
  4149a8:	b.eq	414958 <_obstack_memory_used@@Base+0x2ad4>  // b.none
  4149ac:	ldr	x8, [sp, #8]
  4149b0:	ldr	x28, [x25, #168]
  4149b4:	mov	x0, x26
  4149b8:	mov	x1, x24
  4149bc:	mov	x2, x23
  4149c0:	mov	x3, x22
  4149c4:	mov	x4, x21
  4149c8:	mov	x5, x20
  4149cc:	str	x8, [x25, #168]
  4149d0:	bl	415070 <_obstack_memory_used@@Base+0x31ec>
  4149d4:	mov	x2, x0
  4149d8:	cbnz	x0, 4149e4 <_obstack_memory_used@@Base+0x2b60>
  4149dc:	ldr	w8, [x20]
  4149e0:	cbnz	w8, 414a20 <_obstack_memory_used@@Base+0x2b9c>
  4149e4:	ldr	x8, [x25, #168]
  4149e8:	orr	x8, x8, x28
  4149ec:	str	x8, [x25, #168]
  4149f0:	b	41495c <_obstack_memory_used@@Base+0x2ad8>
  4149f4:	mov	w8, #0xc                   	// #12
  4149f8:	str	w8, [x20]
  4149fc:	mov	x0, x19
  414a00:	ldp	x20, x19, [sp, #96]
  414a04:	ldp	x22, x21, [sp, #80]
  414a08:	ldp	x24, x23, [sp, #64]
  414a0c:	ldp	x26, x25, [sp, #48]
  414a10:	ldp	x28, x27, [sp, #32]
  414a14:	ldp	x29, x30, [sp, #16]
  414a18:	add	sp, sp, #0x70
  414a1c:	ret
  414a20:	cbz	x19, 4149fc <_obstack_memory_used@@Base+0x2b78>
  414a24:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x317c>
  414a28:	add	x1, x1, #0x25c
  414a2c:	mov	x0, x19
  414a30:	mov	x2, xzr
  414a34:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  414a38:	mov	x19, xzr
  414a3c:	b	4149fc <_obstack_memory_used@@Base+0x2b78>
  414a40:	sub	sp, sp, #0x20
  414a44:	ldr	w8, [sp, #8]
  414a48:	stp	x29, x30, [sp, #16]
  414a4c:	add	x29, sp, #0x10
  414a50:	str	xzr, [sp]
  414a54:	and	w8, w8, #0xff800000
  414a58:	bfxil	w8, w3, #0, #8
  414a5c:	mov	x3, sp
  414a60:	str	w8, [sp, #8]
  414a64:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  414a68:	ldp	x29, x30, [sp, #16]
  414a6c:	add	sp, sp, #0x20
  414a70:	ret
  414a74:	sub	sp, sp, #0x60
  414a78:	stp	x29, x30, [sp, #16]
  414a7c:	stp	x26, x25, [sp, #32]
  414a80:	stp	x24, x23, [sp, #48]
  414a84:	stp	x22, x21, [sp, #64]
  414a88:	stp	x20, x19, [sp, #80]
  414a8c:	ldr	x9, [x1, #104]
  414a90:	ldr	x8, [x1, #72]
  414a94:	mov	x19, x0
  414a98:	add	x29, sp, #0x10
  414a9c:	cmp	x9, x8
  414aa0:	b.le	414b7c <_obstack_memory_used@@Base+0x2cf8>
  414aa4:	ldr	x9, [x1, #8]
  414aa8:	mov	x23, x19
  414aac:	mov	w26, #0xff00                	// #65280
  414ab0:	mov	x20, x2
  414ab4:	ldrb	w24, [x9, x8]
  414ab8:	mov	x21, x1
  414abc:	movk	w26, #0xff9f, lsl #16
  414ac0:	strb	w24, [x23], #8
  414ac4:	ldr	w25, [x23]
  414ac8:	and	w8, w25, #0xff9fffff
  414acc:	str	w8, [x23]
  414ad0:	ldr	w8, [x1, #144]
  414ad4:	cmp	w8, #0x2
  414ad8:	b.lt	414afc <_obstack_memory_used@@Base+0x2c78>  // b.tstop
  414adc:	ldr	x8, [x21, #72]
  414ae0:	ldr	x9, [x21, #48]
  414ae4:	cmp	x8, x9
  414ae8:	b.eq	414afc <_obstack_memory_used@@Base+0x2c78>  // b.none
  414aec:	ldr	x9, [x21, #16]
  414af0:	ldr	w8, [x9, x8, lsl #2]
  414af4:	cmn	w8, #0x1
  414af8:	b.eq	414cc4 <_obstack_memory_used@@Base+0x2e40>  // b.none
  414afc:	cmp	w24, #0x5c
  414b00:	b.ne	414b8c <_obstack_memory_used@@Base+0x2d08>  // b.any
  414b04:	ldr	x8, [x21, #72]
  414b08:	ldr	x9, [x21, #88]
  414b0c:	add	x8, x8, #0x1
  414b10:	cmp	x8, x9
  414b14:	b.ge	414bdc <_obstack_memory_used@@Base+0x2d58>  // b.tcont
  414b18:	mov	x0, x21
  414b1c:	bl	414f98 <_obstack_memory_used@@Base+0x3114>
  414b20:	and	w8, w25, w26
  414b24:	orr	w24, w8, #0x1
  414b28:	strb	w0, [x19]
  414b2c:	str	w24, [x19, #8]
  414b30:	ldr	w8, [x21, #144]
  414b34:	mov	w22, w0
  414b38:	cmp	w8, #0x2
  414b3c:	b.lt	414c48 <_obstack_memory_used@@Base+0x2dc4>  // b.tstop
  414b40:	ldr	x8, [x21, #72]
  414b44:	mov	x0, x21
  414b48:	add	x1, x8, #0x1
  414b4c:	bl	41504c <_obstack_memory_used@@Base+0x31c8>
  414b50:	mov	w21, w0
  414b54:	bl	402ce0 <iswalnum@plt>
  414b58:	ldr	w9, [x23]
  414b5c:	cmp	w0, #0x0
  414b60:	mov	w8, #0x5f                  	// #95
  414b64:	ccmp	w21, w8, #0x4, eq  // eq = none
  414b68:	mov	w8, #0x400000              	// #4194304
  414b6c:	csel	w8, w8, wzr, eq  // eq = none
  414b70:	and	w9, w9, #0xffbfffff
  414b74:	orr	w8, w8, w9
  414b78:	b	414c70 <_obstack_memory_used@@Base+0x2dec>
  414b7c:	mov	w8, #0x2                   	// #2
  414b80:	mov	w0, wzr
  414b84:	strb	w8, [x19, #8]
  414b88:	b	414df0 <_obstack_memory_used@@Base+0x2f6c>
  414b8c:	and	w8, w25, w26
  414b90:	orr	w22, w8, #0x1
  414b94:	str	w22, [x23]
  414b98:	ldr	w8, [x21, #144]
  414b9c:	cmp	w8, #0x2
  414ba0:	b.lt	414be8 <_obstack_memory_used@@Base+0x2d64>  // b.tstop
  414ba4:	ldr	x1, [x21, #72]
  414ba8:	mov	x0, x21
  414bac:	bl	41504c <_obstack_memory_used@@Base+0x31c8>
  414bb0:	mov	w22, w0
  414bb4:	bl	402ce0 <iswalnum@plt>
  414bb8:	ldr	w9, [x23]
  414bbc:	cmp	w0, #0x0
  414bc0:	mov	w8, #0x5f                  	// #95
  414bc4:	ccmp	w22, w8, #0x4, eq  // eq = none
  414bc8:	mov	w8, #0x400000              	// #4194304
  414bcc:	csel	w8, w8, wzr, eq  // eq = none
  414bd0:	and	w9, w9, #0xffbfffff
  414bd4:	orr	w8, w8, w9
  414bd8:	b	414c14 <_obstack_memory_used@@Base+0x2d90>
  414bdc:	and	w8, w25, w26
  414be0:	mov	w9, #0x24                  	// #36
  414be4:	b	414cd0 <_obstack_memory_used@@Base+0x2e4c>
  414be8:	bl	402bb0 <__ctype_b_loc@plt>
  414bec:	ldr	x8, [x0]
  414bf0:	cmp	w24, #0x5f
  414bf4:	cset	w9, eq  // eq = none
  414bf8:	ldrh	w8, [x8, x24, lsl #1]
  414bfc:	and	w8, w8, #0x8
  414c00:	orr	w8, w9, w8, lsr #3
  414c04:	cmp	w8, #0x0
  414c08:	mov	w8, #0x400000              	// #4194304
  414c0c:	csel	w8, w8, wzr, ne  // ne = any
  414c10:	orr	w8, w8, w22
  414c14:	sub	w9, w24, #0xa
  414c18:	cmp	w9, #0x73
  414c1c:	mov	w0, #0x1                   	// #1
  414c20:	str	w8, [x23]
  414c24:	b.hi	414df0 <_obstack_memory_used@@Base+0x2f6c>  // b.pmore
  414c28:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xf17c>
  414c2c:	add	x10, x10, #0x39e
  414c30:	adr	x11, 414c40 <_obstack_memory_used@@Base+0x2dbc>
  414c34:	ldrb	w12, [x10, x9]
  414c38:	add	x11, x11, x12, lsl #2
  414c3c:	br	x11
  414c40:	tbnz	w20, #11, 414de0 <_obstack_memory_used@@Base+0x2f5c>
  414c44:	b	414dec <_obstack_memory_used@@Base+0x2f68>
  414c48:	bl	402bb0 <__ctype_b_loc@plt>
  414c4c:	ldr	x8, [x0]
  414c50:	and	x9, x22, #0xff
  414c54:	ldrh	w8, [x8, x9, lsl #1]
  414c58:	and	w9, w22, #0xff
  414c5c:	cmp	w9, #0x5f
  414c60:	cset	w9, eq  // eq = none
  414c64:	ubfx	w8, w8, #3, #1
  414c68:	orr	w8, w8, w9
  414c6c:	orr	w8, w24, w8, lsl #22
  414c70:	and	w9, w22, #0xff
  414c74:	sub	w9, w9, #0x27
  414c78:	cmp	w9, #0x56
  414c7c:	mov	w0, #0x2                   	// #2
  414c80:	str	w8, [x23]
  414c84:	b.hi	414df0 <_obstack_memory_used@@Base+0x2f6c>  // b.pmore
  414c88:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xf17c>
  414c8c:	add	x10, x10, #0x412
  414c90:	adr	x11, 414ca0 <_obstack_memory_used@@Base+0x2e1c>
  414c94:	ldrb	w12, [x10, x9]
  414c98:	add	x11, x11, x12, lsl #2
  414c9c:	br	x11
  414ca0:	tbnz	w20, #14, 414f90 <_obstack_memory_used@@Base+0x310c>
  414ca4:	and	x9, x22, #0xff
  414ca8:	and	w8, w8, #0xffffff00
  414cac:	orr	w8, w8, #0x4
  414cb0:	sub	x9, x9, #0x31
  414cb4:	str	w8, [x19, #8]
  414cb8:	str	x9, [x19]
  414cbc:	mov	w0, #0x2                   	// #2
  414cc0:	b	414df0 <_obstack_memory_used@@Base+0x2f6c>
  414cc4:	mov	w9, #0x1                   	// #1
  414cc8:	and	w8, w25, w26
  414ccc:	movk	w9, #0x20, lsl #16
  414cd0:	orr	w8, w8, w9
  414cd4:	b	414de8 <_obstack_memory_used@@Base+0x2f64>
  414cd8:	tbnz	w20, #3, 414d20 <_obstack_memory_used@@Base+0x2e9c>
  414cdc:	ldr	x8, [x21, #72]
  414ce0:	ldr	x9, [x21, #88]
  414ce4:	add	x8, x8, #0x1
  414ce8:	cmp	x8, x9
  414cec:	b.eq	414d20 <_obstack_memory_used@@Base+0x2e9c>  // b.none
  414cf0:	mov	x0, sp
  414cf4:	mov	x1, x21
  414cf8:	mov	x2, x20
  414cfc:	str	x8, [x21, #72]
  414d00:	bl	414a74 <_obstack_memory_used@@Base+0x2bf0>
  414d04:	ldr	x8, [x21, #72]
  414d08:	sub	x8, x8, #0x1
  414d0c:	str	x8, [x21, #72]
  414d10:	ldrb	w8, [sp, #8]
  414d14:	sub	w8, w8, #0x9
  414d18:	cmp	w8, #0x1
  414d1c:	b.hi	414dec <_obstack_memory_used@@Base+0x2f68>  // b.pmore
  414d20:	mov	w8, #0xc                   	// #12
  414d24:	mov	w9, #0x20                  	// #32
  414d28:	strb	w8, [x19, #8]
  414d2c:	str	w9, [x19]
  414d30:	b	414dec <_obstack_memory_used@@Base+0x2f68>
  414d34:	tbz	w20, #13, 414dec <_obstack_memory_used@@Base+0x2f68>
  414d38:	and	w8, w8, #0xffffff00
  414d3c:	orr	w8, w8, #0x8
  414d40:	b	414de8 <_obstack_memory_used@@Base+0x2f64>
  414d44:	tbz	w20, #13, 414dec <_obstack_memory_used@@Base+0x2f68>
  414d48:	mov	w9, #0x9                   	// #9
  414d4c:	b	414de4 <_obstack_memory_used@@Base+0x2f60>
  414d50:	mov	w9, #0xb                   	// #11
  414d54:	b	414de4 <_obstack_memory_used@@Base+0x2f60>
  414d58:	mov	w9, #0x402                 	// #1026
  414d5c:	tst	x20, x9
  414d60:	b.ne	414dec <_obstack_memory_used@@Base+0x2f68>  // b.any
  414d64:	mov	w9, #0x12                  	// #18
  414d68:	b	414de4 <_obstack_memory_used@@Base+0x2f60>
  414d6c:	mov	w9, #0x5                   	// #5
  414d70:	b	414de4 <_obstack_memory_used@@Base+0x2f60>
  414d74:	mov	w9, #0x402                 	// #1026
  414d78:	tst	x20, x9
  414d7c:	b.ne	414dec <_obstack_memory_used@@Base+0x2f68>  // b.any
  414d80:	mov	w9, #0x13                  	// #19
  414d84:	b	414de4 <_obstack_memory_used@@Base+0x2f60>
  414d88:	mov	w9, #0x14                  	// #20
  414d8c:	b	414de4 <_obstack_memory_used@@Base+0x2f60>
  414d90:	mov	w9, #0x8                   	// #8
  414d94:	movk	w9, #0x80, lsl #16
  414d98:	tst	x20, x9
  414d9c:	b.eq	414e28 <_obstack_memory_used@@Base+0x2fa4>  // b.none
  414da0:	and	w8, w8, #0xffffff00
  414da4:	mov	w9, #0x10                  	// #16
  414da8:	orr	w8, w8, #0xc
  414dac:	str	w9, [x19]
  414db0:	str	w8, [x19, #8]
  414db4:	b	414dec <_obstack_memory_used@@Base+0x2f68>
  414db8:	mvn	w9, w20
  414dbc:	mov	w10, #0x1200                	// #4608
  414dc0:	tst	x9, x10
  414dc4:	b.ne	414dec <_obstack_memory_used@@Base+0x2f68>  // b.any
  414dc8:	mov	w9, #0x17                  	// #23
  414dcc:	b	414de4 <_obstack_memory_used@@Base+0x2f60>
  414dd0:	mov	w9, #0x8400                	// #33792
  414dd4:	and	x9, x20, x9
  414dd8:	cmp	x9, #0x8, lsl #12
  414ddc:	b.ne	414dec <_obstack_memory_used@@Base+0x2f68>  // b.any
  414de0:	mov	w9, #0xa                   	// #10
  414de4:	bfxil	w8, w9, #0, #8
  414de8:	str	w8, [x23]
  414dec:	mov	w0, #0x1                   	// #1
  414df0:	ldp	x20, x19, [sp, #80]
  414df4:	ldp	x22, x21, [sp, #64]
  414df8:	ldp	x24, x23, [sp, #48]
  414dfc:	ldp	x26, x25, [sp, #32]
  414e00:	ldp	x29, x30, [sp, #16]
  414e04:	add	sp, sp, #0x60
  414e08:	ret
  414e0c:	mvn	w9, w20
  414e10:	mov	w10, #0x1200                	// #4608
  414e14:	tst	x9, x10
  414e18:	b.ne	414dec <_obstack_memory_used@@Base+0x2f68>  // b.any
  414e1c:	and	w8, w8, #0xffffff00
  414e20:	orr	w8, w8, #0x18
  414e24:	b	414de8 <_obstack_memory_used@@Base+0x2f64>
  414e28:	ldr	x9, [x21, #72]
  414e2c:	cbz	x9, 414da0 <_obstack_memory_used@@Base+0x2f1c>
  414e30:	tbz	w20, #11, 414dec <_obstack_memory_used@@Base+0x2f68>
  414e34:	ldr	x10, [x21, #8]
  414e38:	add	x9, x9, x10
  414e3c:	ldurb	w9, [x9, #-1]
  414e40:	cmp	w9, #0xa
  414e44:	b.eq	414da0 <_obstack_memory_used@@Base+0x2f1c>  // b.none
  414e48:	b	414dec <_obstack_memory_used@@Base+0x2f68>
  414e4c:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414e50:	and	w8, w8, #0xffffff00
  414e54:	mov	w9, #0x80                  	// #128
  414e58:	b	414f0c <_obstack_memory_used@@Base+0x3088>
  414e5c:	tbnz	w20, #13, 414f90 <_obstack_memory_used@@Base+0x310c>
  414e60:	and	w8, w8, #0xffffff00
  414e64:	orr	w8, w8, #0x8
  414e68:	b	414f68 <_obstack_memory_used@@Base+0x30e4>
  414e6c:	tbnz	w20, #13, 414f90 <_obstack_memory_used@@Base+0x310c>
  414e70:	mov	w9, #0x9                   	// #9
  414e74:	b	414f64 <_obstack_memory_used@@Base+0x30e0>
  414e78:	mov	w9, #0x402                 	// #1026
  414e7c:	and	x9, x20, x9
  414e80:	cmp	x9, #0x2
  414e84:	b.ne	414f90 <_obstack_memory_used@@Base+0x310c>  // b.any
  414e88:	mov	w9, #0x12                  	// #18
  414e8c:	b	414f64 <_obstack_memory_used@@Base+0x30e0>
  414e90:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414e94:	and	w8, w8, #0xffffff00
  414e98:	mov	w9, #0x6                   	// #6
  414e9c:	b	414f0c <_obstack_memory_used@@Base+0x3088>
  414ea0:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414ea4:	and	w8, w8, #0xffffff00
  414ea8:	mov	w9, #0x9                   	// #9
  414eac:	b	414f0c <_obstack_memory_used@@Base+0x3088>
  414eb0:	mov	w9, #0x402                 	// #1026
  414eb4:	and	x9, x20, x9
  414eb8:	cmp	x9, #0x2
  414ebc:	b.ne	414f90 <_obstack_memory_used@@Base+0x310c>  // b.any
  414ec0:	mov	w9, #0x13                  	// #19
  414ec4:	b	414f64 <_obstack_memory_used@@Base+0x30e0>
  414ec8:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414ecc:	and	w8, w8, #0xffffff00
  414ed0:	mov	w9, #0x200                 	// #512
  414ed4:	b	414f0c <_obstack_memory_used@@Base+0x3088>
  414ed8:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414edc:	mov	w9, #0x23                  	// #35
  414ee0:	b	414f64 <_obstack_memory_used@@Base+0x30e0>
  414ee4:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414ee8:	mov	w9, #0x21                  	// #33
  414eec:	b	414f64 <_obstack_memory_used@@Base+0x30e0>
  414ef0:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414ef4:	and	w8, w8, #0xffffff00
  414ef8:	mov	w9, #0x40                  	// #64
  414efc:	b	414f0c <_obstack_memory_used@@Base+0x3088>
  414f00:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414f04:	and	w8, w8, #0xffffff00
  414f08:	mov	w9, #0x100                 	// #256
  414f0c:	orr	w8, w8, #0xc
  414f10:	str	w9, [x19]
  414f14:	str	w8, [x19, #8]
  414f18:	mov	w0, #0x2                   	// #2
  414f1c:	b	414df0 <_obstack_memory_used@@Base+0x2f6c>
  414f20:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414f24:	mov	w9, #0x22                  	// #34
  414f28:	b	414f64 <_obstack_memory_used@@Base+0x30e0>
  414f2c:	tbnz	w20, #19, 414f90 <_obstack_memory_used@@Base+0x310c>
  414f30:	and	w8, w8, #0xffffff00
  414f34:	orr	w8, w8, #0x20
  414f38:	b	414f68 <_obstack_memory_used@@Base+0x30e4>
  414f3c:	mov	w9, #0x1200                	// #4608
  414f40:	and	x9, x20, x9
  414f44:	cmp	x9, #0x200
  414f48:	b.ne	414f90 <_obstack_memory_used@@Base+0x310c>  // b.any
  414f4c:	mov	w9, #0x17                  	// #23
  414f50:	b	414f64 <_obstack_memory_used@@Base+0x30e0>
  414f54:	mov	w9, #0x8400                	// #33792
  414f58:	tst	x20, x9
  414f5c:	b.ne	414f90 <_obstack_memory_used@@Base+0x310c>  // b.any
  414f60:	mov	w9, #0xa                   	// #10
  414f64:	bfxil	w8, w9, #0, #8
  414f68:	str	w8, [x23]
  414f6c:	mov	w0, #0x2                   	// #2
  414f70:	b	414df0 <_obstack_memory_used@@Base+0x2f6c>
  414f74:	mov	w9, #0x1200                	// #4608
  414f78:	and	x9, x20, x9
  414f7c:	cmp	x9, #0x200
  414f80:	b.ne	414f90 <_obstack_memory_used@@Base+0x310c>  // b.any
  414f84:	and	w8, w8, #0xffffff00
  414f88:	orr	w8, w8, #0x18
  414f8c:	b	414f68 <_obstack_memory_used@@Base+0x30e4>
  414f90:	mov	w0, #0x2                   	// #2
  414f94:	b	414df0 <_obstack_memory_used@@Base+0x2f6c>
  414f98:	ldrb	w8, [x0, #139]
  414f9c:	cbnz	w8, 414fbc <_obstack_memory_used@@Base+0x3138>
  414fa0:	ldr	x8, [x0, #8]
  414fa4:	ldr	x9, [x0, #72]
  414fa8:	add	x8, x9, x8
  414fac:	add	x8, x8, #0x1
  414fb0:	ldrb	w8, [x8]
  414fb4:	mov	w0, w8
  414fb8:	ret
  414fbc:	ldr	w8, [x0, #144]
  414fc0:	cmp	w8, #0x2
  414fc4:	b.lt	414ffc <_obstack_memory_used@@Base+0x3178>  // b.tstop
  414fc8:	ldr	x10, [x0, #72]
  414fcc:	ldr	x9, [x0, #16]
  414fd0:	add	x8, x10, #0x1
  414fd4:	ldr	w11, [x9, x8, lsl #2]
  414fd8:	cmn	w11, #0x1
  414fdc:	b.eq	415040 <_obstack_memory_used@@Base+0x31bc>  // b.none
  414fe0:	ldr	x11, [x0, #48]
  414fe4:	add	x10, x10, #0x2
  414fe8:	cmp	x11, x10
  414fec:	b.eq	414ffc <_obstack_memory_used@@Base+0x3178>  // b.none
  414ff0:	ldr	w9, [x9, x10, lsl #2]
  414ff4:	cmn	w9, #0x1
  414ff8:	b.eq	415040 <_obstack_memory_used@@Base+0x31bc>  // b.none
  414ffc:	ldr	x8, [x0, #72]
  415000:	ldrb	w10, [x0, #140]
  415004:	add	x9, x8, #0x1
  415008:	cbz	w10, 415018 <_obstack_memory_used@@Base+0x3194>
  41500c:	ldr	x8, [x0, #24]
  415010:	ldr	x8, [x8, x9, lsl #3]
  415014:	b	41501c <_obstack_memory_used@@Base+0x3198>
  415018:	mov	x8, x9
  41501c:	ldr	x11, [x0, #40]
  415020:	ldr	x12, [x0]
  415024:	add	x8, x11, x8
  415028:	ldrsb	w8, [x12, x8]
  41502c:	cbz	w10, 414fb4 <_obstack_memory_used@@Base+0x3130>
  415030:	tbz	w8, #31, 414fb4 <_obstack_memory_used@@Base+0x3130>
  415034:	ldr	x8, [x0, #8]
  415038:	add	x8, x8, x9
  41503c:	b	414fb0 <_obstack_memory_used@@Base+0x312c>
  415040:	ldr	x9, [x0, #8]
  415044:	add	x8, x9, x8
  415048:	b	414fb0 <_obstack_memory_used@@Base+0x312c>
  41504c:	ldr	w8, [x0, #144]
  415050:	cmp	w8, #0x1
  415054:	b.ne	415064 <_obstack_memory_used@@Base+0x31e0>  // b.any
  415058:	ldr	x8, [x0, #8]
  41505c:	ldrb	w0, [x8, x1]
  415060:	ret
  415064:	ldr	x8, [x0, #16]
  415068:	ldr	w0, [x8, x1, lsl #2]
  41506c:	ret
  415070:	stp	x29, x30, [sp, #-96]!
  415074:	stp	x28, x27, [sp, #16]
  415078:	stp	x26, x25, [sp, #32]
  41507c:	stp	x24, x23, [sp, #48]
  415080:	stp	x22, x21, [sp, #64]
  415084:	stp	x20, x19, [sp, #80]
  415088:	ldr	x25, [x1]
  41508c:	mov	x29, sp
  415090:	mov	x20, x5
  415094:	mov	x21, x4
  415098:	mov	x22, x3
  41509c:	mov	x23, x2
  4150a0:	mov	x24, x1
  4150a4:	mov	x26, x0
  4150a8:	bl	415278 <_obstack_memory_used@@Base+0x33f4>
  4150ac:	mov	x19, x0
  4150b0:	cbnz	x0, 4150bc <_obstack_memory_used@@Base+0x3238>
  4150b4:	ldr	w8, [x20]
  4150b8:	cbnz	w8, 415178 <_obstack_memory_used@@Base+0x32f4>
  4150bc:	adrp	x27, 415000 <_obstack_memory_used@@Base+0x317c>
  4150c0:	add	x27, x27, #0x25c
  4150c4:	b	4150d0 <_obstack_memory_used@@Base+0x324c>
  4150c8:	cmp	x19, #0x0
  4150cc:	csel	x19, x28, x19, eq  // eq = none
  4150d0:	ldrb	w8, [x23, #8]
  4150d4:	orr	w9, w8, #0x8
  4150d8:	cmp	w9, #0xa
  4150dc:	b.eq	41517c <_obstack_memory_used@@Base+0x32f8>  // b.none
  4150e0:	cbz	x21, 4150ec <_obstack_memory_used@@Base+0x3268>
  4150e4:	cmp	w8, #0x9
  4150e8:	b.eq	41517c <_obstack_memory_used@@Base+0x32f8>  // b.none
  4150ec:	mov	x0, x26
  4150f0:	mov	x1, x24
  4150f4:	mov	x2, x23
  4150f8:	mov	x3, x22
  4150fc:	mov	x4, x21
  415100:	mov	x5, x20
  415104:	bl	415278 <_obstack_memory_used@@Base+0x33f4>
  415108:	mov	x28, x0
  41510c:	cbnz	x0, 415118 <_obstack_memory_used@@Base+0x3294>
  415110:	ldr	w8, [x20]
  415114:	cbnz	w8, 41519c <_obstack_memory_used@@Base+0x3318>
  415118:	cbz	x19, 4150c8 <_obstack_memory_used@@Base+0x3244>
  41511c:	cbz	x28, 4150c8 <_obstack_memory_used@@Base+0x3244>
  415120:	mov	w3, #0x10                  	// #16
  415124:	mov	x0, x25
  415128:	mov	x1, x19
  41512c:	mov	x2, x28
  415130:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  415134:	cbz	x0, 415148 <_obstack_memory_used@@Base+0x32c4>
  415138:	mov	w8, #0x1                   	// #1
  41513c:	mov	x19, x0
  415140:	tbnz	w8, #0, 4150d0 <_obstack_memory_used@@Base+0x324c>
  415144:	b	415178 <_obstack_memory_used@@Base+0x32f4>
  415148:	mov	x0, x28
  41514c:	mov	x1, x27
  415150:	mov	x2, xzr
  415154:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  415158:	mov	x0, x19
  41515c:	mov	x1, x27
  415160:	mov	x2, xzr
  415164:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  415168:	mov	w8, wzr
  41516c:	mov	w9, #0xc                   	// #12
  415170:	str	w9, [x20]
  415174:	tbnz	w8, #0, 4150d0 <_obstack_memory_used@@Base+0x324c>
  415178:	mov	x19, xzr
  41517c:	mov	x0, x19
  415180:	ldp	x20, x19, [sp, #80]
  415184:	ldp	x22, x21, [sp, #64]
  415188:	ldp	x24, x23, [sp, #48]
  41518c:	ldp	x26, x25, [sp, #32]
  415190:	ldp	x28, x27, [sp, #16]
  415194:	ldp	x29, x30, [sp], #96
  415198:	ret
  41519c:	cbz	x19, 41517c <_obstack_memory_used@@Base+0x32f8>
  4151a0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x317c>
  4151a4:	add	x1, x1, #0x25c
  4151a8:	mov	x0, x19
  4151ac:	mov	x2, xzr
  4151b0:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  4151b4:	b	415178 <_obstack_memory_used@@Base+0x32f4>
  4151b8:	stp	x29, x30, [sp, #-64]!
  4151bc:	stp	x20, x19, [sp, #48]
  4151c0:	mov	x19, x2
  4151c4:	mov	x20, x1
  4151c8:	str	x23, [sp, #16]
  4151cc:	stp	x22, x21, [sp, #32]
  4151d0:	mov	x29, sp
  4151d4:	mov	x22, x0
  4151d8:	ldr	x0, [x0, #8]
  4151dc:	cbnz	x0, 4151d4 <_obstack_memory_used@@Base+0x3350>
  4151e0:	ldr	x8, [x22, #16]
  4151e4:	cbz	x8, 415204 <_obstack_memory_used@@Base+0x3380>
  4151e8:	cbnz	x0, 4151d4 <_obstack_memory_used@@Base+0x3350>
  4151ec:	ldr	x0, [x22, #16]
  4151f0:	b	4151d4 <_obstack_memory_used@@Base+0x3350>
  4151f4:	mov	w8, wzr
  4151f8:	mov	w21, w0
  4151fc:	cbnz	w8, 415230 <_obstack_memory_used@@Base+0x33ac>
  415200:	b	415244 <_obstack_memory_used@@Base+0x33c0>
  415204:	mov	x0, x19
  415208:	mov	x1, x22
  41520c:	blr	x20
  415210:	cbnz	w0, 4151f4 <_obstack_memory_used@@Base+0x3370>
  415214:	ldr	x9, [x22]
  415218:	cmp	x9, #0x0
  41521c:	cset	w8, ne  // ne = any
  415220:	csel	x23, x23, x22, eq  // eq = none
  415224:	csel	x22, x22, x9, eq  // eq = none
  415228:	csel	w21, wzr, w21, eq  // eq = none
  41522c:	cbz	w8, 415244 <_obstack_memory_used@@Base+0x33c0>
  415230:	ldr	x0, [x22, #16]
  415234:	cmp	x0, x23
  415238:	b.eq	415204 <_obstack_memory_used@@Base+0x3380>  // b.none
  41523c:	cbz	x0, 415204 <_obstack_memory_used@@Base+0x3380>
  415240:	b	4151d4 <_obstack_memory_used@@Base+0x3350>
  415244:	mov	w0, w21
  415248:	ldp	x20, x19, [sp, #48]
  41524c:	ldp	x22, x21, [sp, #32]
  415250:	ldr	x23, [sp, #16]
  415254:	ldp	x29, x30, [sp], #64
  415258:	ret
  41525c:	stp	x29, x30, [sp, #-16]!
  415260:	add	x0, x1, #0x28
  415264:	mov	x29, sp
  415268:	bl	41345c <_obstack_memory_used@@Base+0x15d8>
  41526c:	mov	w0, wzr
  415270:	ldp	x29, x30, [sp], #16
  415274:	ret
  415278:	stp	x29, x30, [sp, #-96]!
  41527c:	stp	x28, x27, [sp, #16]
  415280:	stp	x26, x25, [sp, #32]
  415284:	stp	x24, x23, [sp, #48]
  415288:	stp	x22, x21, [sp, #64]
  41528c:	stp	x20, x19, [sp, #80]
  415290:	ldr	w8, [x2, #8]
  415294:	ldr	x23, [x1]
  415298:	adrp	x11, 421000 <_obstack_memory_used@@Base+0xf17c>
  41529c:	add	x11, x11, #0x46a
  4152a0:	and	w9, w8, #0xff
  4152a4:	sub	w10, w9, #0x1
  4152a8:	adr	x12, 4152d8 <_obstack_memory_used@@Base+0x3454>
  4152ac:	ldrh	w13, [x11, x10, lsl #1]
  4152b0:	add	x12, x12, x13, lsl #2
  4152b4:	mov	x29, sp
  4152b8:	mov	x19, x5
  4152bc:	mov	x25, x4
  4152c0:	mov	x20, x3
  4152c4:	mov	x21, x2
  4152c8:	mov	x26, x1
  4152cc:	mov	x22, x0
  4152d0:	mov	x24, xzr
  4152d4:	br	x12
  4152d8:	tbnz	w20, #5, 415628 <_obstack_memory_used@@Base+0x37a4>
  4152dc:	tbnz	w20, #4, 41565c <_obstack_memory_used@@Base+0x37d8>
  4152e0:	tbnz	w20, #17, 415348 <_obstack_memory_used@@Base+0x34c4>
  4152e4:	cmp	w9, #0x9
  4152e8:	b.ne	415348 <_obstack_memory_used@@Base+0x34c4>  // b.any
  4152ec:	mov	w8, #0x10                  	// #16
  4152f0:	b	415634 <_obstack_memory_used@@Base+0x37b0>
  4152f4:	ldr	x1, [x22, #120]
  4152f8:	cmp	w9, #0x21
  4152fc:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xe17c>
  415300:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xf17c>
  415304:	cset	w4, eq  // eq = none
  415308:	add	x2, x2, #0xded
  41530c:	add	x3, x3, #0x718
  415310:	b	415330 <_obstack_memory_used@@Base+0x34ac>
  415314:	ldr	x1, [x22, #120]
  415318:	cmp	w9, #0x23
  41531c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xe17c>
  415320:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xe17c>
  415324:	cset	w4, eq  // eq = none
  415328:	add	x2, x2, #0xde1
  41532c:	add	x3, x3, #0x13b
  415330:	mov	x0, x23
  415334:	mov	x5, x19
  415338:	bl	415f58 <_obstack_memory_used@@Base+0x40d4>
  41533c:	mov	x24, x0
  415340:	cbz	x0, 415540 <_obstack_memory_used@@Base+0x36bc>
  415344:	b	415548 <_obstack_memory_used@@Base+0x36c4>
  415348:	and	w8, w8, #0xffffff00
  41534c:	orr	w8, w8, #0x1
  415350:	mov	x0, x23
  415354:	mov	x1, xzr
  415358:	mov	x2, xzr
  41535c:	mov	x3, x21
  415360:	str	w8, [x21, #8]
  415364:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  415368:	mov	x24, x0
  41536c:	cbnz	x0, 415548 <_obstack_memory_used@@Base+0x36c4>
  415370:	b	415478 <_obstack_memory_used@@Base+0x35f4>
  415374:	ldrh	w8, [x21]
  415378:	mov	w9, #0x30f                 	// #783
  41537c:	tst	w8, w9
  415380:	b.eq	415394 <_obstack_memory_used@@Base+0x3510>  // b.none
  415384:	ldrb	w8, [x23, #176]
  415388:	tbnz	w8, #4, 415394 <_obstack_memory_used@@Base+0x3510>
  41538c:	mov	x0, x23
  415390:	bl	415e8c <_obstack_memory_used@@Base+0x4008>
  415394:	ldr	w8, [x21]
  415398:	cmp	w8, #0x100
  41539c:	b.eq	415690 <_obstack_memory_used@@Base+0x380c>  // b.none
  4153a0:	cmp	w8, #0x200
  4153a4:	b.ne	4156f8 <_obstack_memory_used@@Base+0x3874>  // b.any
  4153a8:	mov	w24, #0xa                   	// #10
  4153ac:	mov	w8, #0x5                   	// #5
  4153b0:	b	415698 <_obstack_memory_used@@Base+0x3814>
  4153b4:	mov	x0, x22
  4153b8:	mov	x1, x23
  4153bc:	mov	x2, x21
  4153c0:	mov	x3, x20
  4153c4:	mov	x4, x19
  4153c8:	bl	415910 <_obstack_memory_used@@Base+0x3a8c>
  4153cc:	mov	x24, x0
  4153d0:	cbz	x0, 415540 <_obstack_memory_used@@Base+0x36bc>
  4153d4:	b	415548 <_obstack_memory_used@@Base+0x36c4>
  4153d8:	mov	x0, x23
  4153dc:	mov	x1, xzr
  4153e0:	mov	x2, xzr
  4153e4:	mov	x3, x21
  4153e8:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  4153ec:	mov	x24, x0
  4153f0:	cbz	x0, 415478 <_obstack_memory_used@@Base+0x35f4>
  4153f4:	ldr	w8, [x23, #180]
  4153f8:	cmp	w8, #0x2
  4153fc:	b.lt	415548 <_obstack_memory_used@@Base+0x36c4>  // b.tstop
  415400:	ldr	x9, [x22, #104]
  415404:	ldr	x8, [x22, #72]
  415408:	cmp	x9, x8
  41540c:	b.le	415548 <_obstack_memory_used@@Base+0x36c4>
  415410:	ldr	x9, [x22, #48]
  415414:	cmp	x8, x9
  415418:	b.eq	415548 <_obstack_memory_used@@Base+0x36c4>  // b.none
  41541c:	ldr	x9, [x22, #16]
  415420:	ldr	w8, [x9, x8, lsl #2]
  415424:	cmn	w8, #0x1
  415428:	b.ne	415548 <_obstack_memory_used@@Base+0x36c4>  // b.any
  41542c:	mov	x0, x21
  415430:	mov	x1, x22
  415434:	mov	x2, x20
  415438:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  41543c:	mov	x0, x23
  415440:	mov	x1, xzr
  415444:	mov	x2, xzr
  415448:	mov	x3, x21
  41544c:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  415450:	mov	x25, x0
  415454:	mov	w3, #0x10                  	// #16
  415458:	mov	x0, x23
  41545c:	mov	x1, x24
  415460:	mov	x2, x25
  415464:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  415468:	cbz	x25, 415474 <_obstack_memory_used@@Base+0x35f0>
  41546c:	mov	x24, x0
  415470:	cbnz	x0, 415400 <_obstack_memory_used@@Base+0x357c>
  415474:	mov	x24, xzr
  415478:	mov	w8, #0xc                   	// #12
  41547c:	str	w8, [x19]
  415480:	b	41563c <_obstack_memory_used@@Base+0x37b8>
  415484:	ldr	w8, [x21]
  415488:	ldr	x9, [x23, #168]
  41548c:	mov	w10, #0x1                   	// #1
  415490:	lsl	w8, w10, w8
  415494:	sxtw	x8, w8
  415498:	tst	x9, x8
  41549c:	b.eq	415728 <_obstack_memory_used@@Base+0x38a4>  // b.none
  4154a0:	ldr	x9, [x23, #160]
  4154a4:	mov	x0, x23
  4154a8:	mov	x1, xzr
  4154ac:	mov	x2, xzr
  4154b0:	orr	x8, x9, x8
  4154b4:	mov	x3, x21
  4154b8:	str	x8, [x23, #160]
  4154bc:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  4154c0:	mov	x24, x0
  4154c4:	cbz	x0, 415478 <_obstack_memory_used@@Base+0x35f4>
  4154c8:	ldr	x8, [x23, #152]
  4154cc:	ldrb	w9, [x23, #176]
  4154d0:	add	x8, x8, #0x1
  4154d4:	orr	w9, w9, #0x2
  4154d8:	str	x8, [x23, #152]
  4154dc:	strb	w9, [x23, #176]
  4154e0:	b	415548 <_obstack_memory_used@@Base+0x36c4>
  4154e4:	mov	x0, x23
  4154e8:	mov	x1, xzr
  4154ec:	mov	x2, xzr
  4154f0:	mov	x3, x21
  4154f4:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  4154f8:	mov	x24, x0
  4154fc:	cbz	x0, 415478 <_obstack_memory_used@@Base+0x35f4>
  415500:	ldr	w8, [x23, #180]
  415504:	cmp	w8, #0x2
  415508:	b.lt	415548 <_obstack_memory_used@@Base+0x36c4>  // b.tstop
  41550c:	ldrb	w8, [x23, #176]
  415510:	orr	w8, w8, #0x2
  415514:	strb	w8, [x23, #176]
  415518:	b	415548 <_obstack_memory_used@@Base+0x36c4>
  41551c:	add	x4, x25, #0x1
  415520:	mov	x0, x22
  415524:	mov	x1, x26
  415528:	mov	x2, x21
  41552c:	mov	x3, x20
  415530:	mov	x5, x19
  415534:	bl	4157d8 <_obstack_memory_used@@Base+0x3954>
  415538:	mov	x24, x0
  41553c:	cbnz	x0, 415548 <_obstack_memory_used@@Base+0x36c4>
  415540:	ldr	w8, [x19]
  415544:	cbnz	w8, 41561c <_obstack_memory_used@@Base+0x3798>
  415548:	mov	x0, x21
  41554c:	mov	x1, x22
  415550:	mov	x2, x20
  415554:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  415558:	mov	w28, #0x800                 	// #2048
  41555c:	mov	w27, #0x1                   	// #1
  415560:	movk	w28, #0x8c, lsl #16
  415564:	mov	w25, #0xd                   	// #13
  415568:	b	415578 <_obstack_memory_used@@Base+0x36f4>
  41556c:	mov	w8, #0x1                   	// #1
  415570:	mov	x24, x26
  415574:	tbz	w8, #0, 41561c <_obstack_memory_used@@Base+0x3798>
  415578:	ldrb	w8, [x21, #8]
  41557c:	cmp	w8, #0x17
  415580:	b.hi	41563c <_obstack_memory_used@@Base+0x37b8>  // b.pmore
  415584:	lsl	w8, w27, w8
  415588:	tst	w8, w28
  41558c:	b.eq	41563c <_obstack_memory_used@@Base+0x37b8>  // b.none
  415590:	mov	x0, x24
  415594:	mov	x1, x22
  415598:	mov	x2, x23
  41559c:	mov	x3, x21
  4155a0:	mov	x4, x20
  4155a4:	mov	x5, x19
  4155a8:	bl	416134 <_obstack_memory_used@@Base+0x42b0>
  4155ac:	mov	x26, x0
  4155b0:	cbnz	x0, 4155bc <_obstack_memory_used@@Base+0x3738>
  4155b4:	ldr	w8, [x19]
  4155b8:	cbnz	w8, 4155f8 <_obstack_memory_used@@Base+0x3774>
  4155bc:	tbz	w20, #24, 41556c <_obstack_memory_used@@Base+0x36e8>
  4155c0:	ldrb	w8, [x21, #8]
  4155c4:	cmp	w8, #0x17
  4155c8:	b.eq	4155d4 <_obstack_memory_used@@Base+0x3750>  // b.none
  4155cc:	cmp	w8, #0xb
  4155d0:	b.ne	41556c <_obstack_memory_used@@Base+0x36e8>  // b.any
  4155d4:	cbz	x26, 4155ec <_obstack_memory_used@@Base+0x3768>
  4155d8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x317c>
  4155dc:	mov	x0, x26
  4155e0:	add	x1, x1, #0x25c
  4155e4:	mov	x2, xzr
  4155e8:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  4155ec:	mov	w8, wzr
  4155f0:	str	w25, [x19]
  4155f4:	b	415570 <_obstack_memory_used@@Base+0x36ec>
  4155f8:	cbz	x24, 415610 <_obstack_memory_used@@Base+0x378c>
  4155fc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x317c>
  415600:	mov	x0, x24
  415604:	add	x1, x1, #0x25c
  415608:	mov	x2, xzr
  41560c:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  415610:	mov	w8, wzr
  415614:	mov	x26, x24
  415618:	b	415570 <_obstack_memory_used@@Base+0x36ec>
  41561c:	mov	x24, xzr
  415620:	b	41563c <_obstack_memory_used@@Base+0x37b8>
  415624:	tbz	w20, #24, 4152d8 <_obstack_memory_used@@Base+0x3454>
  415628:	mov	w8, #0xd                   	// #13
  41562c:	b	415634 <_obstack_memory_used@@Base+0x37b0>
  415630:	mov	w8, #0x5                   	// #5
  415634:	mov	x24, xzr
  415638:	str	w8, [x19]
  41563c:	mov	x0, x24
  415640:	ldp	x20, x19, [sp, #80]
  415644:	ldp	x22, x21, [sp, #64]
  415648:	ldp	x24, x23, [sp, #48]
  41564c:	ldp	x26, x25, [sp, #32]
  415650:	ldp	x28, x27, [sp, #16]
  415654:	ldp	x29, x30, [sp], #96
  415658:	ret
  41565c:	mov	x0, x21
  415660:	mov	x1, x22
  415664:	mov	x2, x20
  415668:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  41566c:	mov	x0, x22
  415670:	mov	x1, x26
  415674:	mov	x2, x21
  415678:	mov	x3, x20
  41567c:	mov	x4, x25
  415680:	mov	x5, x19
  415684:	bl	415278 <_obstack_memory_used@@Base+0x33f4>
  415688:	mov	x24, x0
  41568c:	b	41563c <_obstack_memory_used@@Base+0x37b8>
  415690:	mov	w24, #0x9                   	// #9
  415694:	mov	w8, #0x6                   	// #6
  415698:	mov	x0, x23
  41569c:	mov	x1, xzr
  4156a0:	mov	x2, xzr
  4156a4:	mov	x3, x21
  4156a8:	str	w8, [x21]
  4156ac:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  4156b0:	mov	x26, x0
  4156b4:	mov	x0, x23
  4156b8:	mov	x1, xzr
  4156bc:	mov	x2, xzr
  4156c0:	mov	x3, x21
  4156c4:	str	w24, [x21]
  4156c8:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  4156cc:	mov	x25, x0
  4156d0:	mov	w3, #0xa                   	// #10
  4156d4:	mov	x0, x23
  4156d8:	mov	x1, x26
  4156dc:	mov	x2, x25
  4156e0:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  4156e4:	cbz	x26, 415474 <_obstack_memory_used@@Base+0x35f0>
  4156e8:	cbz	x25, 415474 <_obstack_memory_used@@Base+0x35f0>
  4156ec:	mov	x24, x0
  4156f0:	cbnz	x0, 415714 <_obstack_memory_used@@Base+0x3890>
  4156f4:	b	415474 <_obstack_memory_used@@Base+0x35f0>
  4156f8:	mov	x0, x23
  4156fc:	mov	x1, xzr
  415700:	mov	x2, xzr
  415704:	mov	x3, x21
  415708:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  41570c:	mov	x24, x0
  415710:	cbz	x0, 415478 <_obstack_memory_used@@Base+0x35f4>
  415714:	mov	x0, x21
  415718:	mov	x1, x22
  41571c:	mov	x2, x20
  415720:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  415724:	b	41563c <_obstack_memory_used@@Base+0x37b8>
  415728:	mov	w8, #0x6                   	// #6
  41572c:	b	415634 <_obstack_memory_used@@Base+0x37b0>
  415730:	stp	x29, x30, [sp, #-48]!
  415734:	stp	x22, x21, [sp, #16]
  415738:	stp	x20, x19, [sp, #32]
  41573c:	ldr	w8, [x0, #128]
  415740:	mov	x21, x3
  415744:	mov	x19, x2
  415748:	mov	x22, x0
  41574c:	cmp	w8, #0xf
  415750:	mov	x20, x1
  415754:	mov	x29, sp
  415758:	b.eq	4157b8 <_obstack_memory_used@@Base+0x3934>  // b.none
  41575c:	ldrsw	x8, [x22, #128]
  415760:	ldr	x9, [x22, #112]
  415764:	add	w10, w8, #0x1
  415768:	add	x0, x9, x8, lsl #6
  41576c:	str	w10, [x22, #128]
  415770:	str	xzr, [x0, #8]!
  415774:	stp	x20, x19, [x0, #8]
  415778:	ldr	q0, [x21]
  41577c:	mov	x9, #0xffffffffffffffff    	// #-1
  415780:	stp	xzr, xzr, [x0, #24]
  415784:	str	x9, [x0, #56]
  415788:	stur	q0, [x0, #40]
  41578c:	ldr	w8, [x0, #48]
  415790:	and	w8, w8, #0xfff3ffff
  415794:	str	w8, [x0, #48]
  415798:	cbz	x20, 4157a0 <_obstack_memory_used@@Base+0x391c>
  41579c:	str	x0, [x20]
  4157a0:	cbz	x19, 4157a8 <_obstack_memory_used@@Base+0x3924>
  4157a4:	str	x0, [x19]
  4157a8:	ldp	x20, x19, [sp, #32]
  4157ac:	ldp	x22, x21, [sp, #16]
  4157b0:	ldp	x29, x30, [sp], #48
  4157b4:	ret
  4157b8:	mov	w0, #0x3c8                 	// #968
  4157bc:	bl	4028e0 <malloc@plt>
  4157c0:	cbz	x0, 4157a8 <_obstack_memory_used@@Base+0x3924>
  4157c4:	ldr	x8, [x22, #112]
  4157c8:	str	x8, [x0]
  4157cc:	str	x0, [x22, #112]
  4157d0:	str	wzr, [x22, #128]
  4157d4:	b	41575c <_obstack_memory_used@@Base+0x38d8>
  4157d8:	stp	x29, x30, [sp, #-80]!
  4157dc:	stp	x26, x25, [sp, #16]
  4157e0:	stp	x24, x23, [sp, #32]
  4157e4:	stp	x22, x21, [sp, #48]
  4157e8:	stp	x20, x19, [sp, #64]
  4157ec:	ldr	x26, [x1, #48]
  4157f0:	ldr	x20, [x1]
  4157f4:	mov	x21, x2
  4157f8:	mov	x25, x0
  4157fc:	add	x8, x26, #0x1
  415800:	mov	x24, x1
  415804:	str	x8, [x1, #48]
  415808:	orr	x2, x3, #0x800000
  41580c:	mov	x0, x21
  415810:	mov	x1, x25
  415814:	mov	x29, sp
  415818:	mov	x19, x5
  41581c:	mov	x22, x4
  415820:	mov	x23, x3
  415824:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  415828:	ldrb	w8, [x21, #8]
  41582c:	cmp	w8, #0x9
  415830:	b.ne	41583c <_obstack_memory_used@@Base+0x39b8>  // b.any
  415834:	mov	x1, xzr
  415838:	b	415878 <_obstack_memory_used@@Base+0x39f4>
  41583c:	mov	x0, x25
  415840:	mov	x1, x24
  415844:	mov	x2, x21
  415848:	mov	x3, x23
  41584c:	mov	x4, x22
  415850:	mov	x5, x19
  415854:	bl	4148f8 <_obstack_memory_used@@Base+0x2a74>
  415858:	ldr	w8, [x19]
  41585c:	mov	x1, x0
  415860:	cbnz	w8, 415870 <_obstack_memory_used@@Base+0x39ec>
  415864:	ldrb	w8, [x21, #8]
  415868:	cmp	w8, #0x9
  41586c:	b.ne	4158d4 <_obstack_memory_used@@Base+0x3a50>  // b.any
  415870:	ldr	w8, [x19]
  415874:	cbnz	w8, 415908 <_obstack_memory_used@@Base+0x3a84>
  415878:	cmp	x26, #0x8
  41587c:	b.hi	415898 <_obstack_memory_used@@Base+0x3a14>  // b.pmore
  415880:	ldr	x8, [x20, #168]
  415884:	mov	w9, #0x1                   	// #1
  415888:	lsl	w9, w9, w26
  41588c:	sxtw	x9, w9
  415890:	orr	x8, x8, x9
  415894:	str	x8, [x20, #168]
  415898:	mov	w3, #0x11                  	// #17
  41589c:	mov	x0, x20
  4158a0:	mov	x2, xzr
  4158a4:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  4158a8:	cbz	x0, 4158c8 <_obstack_memory_used@@Base+0x3a44>
  4158ac:	str	x26, [x0, #40]
  4158b0:	ldp	x20, x19, [sp, #64]
  4158b4:	ldp	x22, x21, [sp, #48]
  4158b8:	ldp	x24, x23, [sp, #32]
  4158bc:	ldp	x26, x25, [sp, #16]
  4158c0:	ldp	x29, x30, [sp], #80
  4158c4:	ret
  4158c8:	mov	w8, #0xc                   	// #12
  4158cc:	str	w8, [x19]
  4158d0:	b	4158b0 <_obstack_memory_used@@Base+0x3a2c>
  4158d4:	cbz	x1, 4158f8 <_obstack_memory_used@@Base+0x3a74>
  4158d8:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x317c>
  4158dc:	add	x8, x8, #0x25c
  4158e0:	mov	x0, x1
  4158e4:	mov	x21, x1
  4158e8:	mov	x1, x8
  4158ec:	mov	x2, xzr
  4158f0:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  4158f4:	mov	x1, x21
  4158f8:	mov	w8, #0x8                   	// #8
  4158fc:	str	w8, [x19]
  415900:	ldr	w8, [x19]
  415904:	cbz	w8, 415878 <_obstack_memory_used@@Base+0x39f4>
  415908:	mov	x0, xzr
  41590c:	b	4158b0 <_obstack_memory_used@@Base+0x3a2c>
  415910:	sub	sp, sp, #0x100
  415914:	stp	x29, x30, [sp, #160]
  415918:	stp	x24, x23, [sp, #208]
  41591c:	stp	x20, x19, [sp, #240]
  415920:	add	x29, sp, #0xa0
  415924:	mov	x19, x1
  415928:	mov	x23, x0
  41592c:	mov	w0, #0x20                  	// #32
  415930:	mov	w1, #0x1                   	// #1
  415934:	stp	x28, x27, [sp, #176]
  415938:	stp	x26, x25, [sp, #192]
  41593c:	stp	x22, x21, [sp, #224]
  415940:	str	x4, [sp, #24]
  415944:	mov	x24, x3
  415948:	mov	x25, x2
  41594c:	stp	xzr, xzr, [x29, #-16]
  415950:	bl	402a10 <calloc@plt>
  415954:	mov	x20, x0
  415958:	mov	w0, #0x50                  	// #80
  41595c:	mov	w1, #0x1                   	// #1
  415960:	bl	402a10 <calloc@plt>
  415964:	mov	x21, x0
  415968:	cbz	x20, 415e50 <_obstack_memory_used@@Base+0x3fcc>
  41596c:	cbz	x21, 415e50 <_obstack_memory_used@@Base+0x3fcc>
  415970:	mov	x0, x25
  415974:	mov	x1, x23
  415978:	mov	x2, x24
  41597c:	bl	416454 <_obstack_memory_used@@Base+0x45d0>
  415980:	ldrb	w8, [x25, #8]
  415984:	mov	w26, w0
  415988:	cmp	w8, #0x19
  41598c:	b.eq	4159a0 <_obstack_memory_used@@Base+0x3b1c>  // b.none
  415990:	cmp	w8, #0x2
  415994:	b.eq	415dc0 <_obstack_memory_used@@Base+0x3f3c>  // b.none
  415998:	str	wzr, [sp, #12]
  41599c:	b	4159f0 <_obstack_memory_used@@Base+0x3b6c>
  4159a0:	ldrb	w8, [x21, #32]
  4159a4:	orr	w8, w8, #0x1
  4159a8:	strb	w8, [x21, #32]
  4159ac:	tbz	w24, #8, 4159bc <_obstack_memory_used@@Base+0x3b38>
  4159b0:	mov	w1, #0xa                   	// #10
  4159b4:	mov	x0, x20
  4159b8:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  4159bc:	ldr	x8, [x23, #72]
  4159c0:	mov	x0, x25
  4159c4:	mov	x1, x23
  4159c8:	mov	x2, x24
  4159cc:	add	x8, x8, w26, sxtw
  4159d0:	str	x8, [x23, #72]
  4159d4:	bl	416454 <_obstack_memory_used@@Base+0x45d0>
  4159d8:	ldrb	w8, [x25, #8]
  4159dc:	cmp	w8, #0x2
  4159e0:	b.eq	415dc0 <_obstack_memory_used@@Base+0x3f3c>  // b.none
  4159e4:	mov	w26, w0
  4159e8:	mov	w8, #0x1                   	// #1
  4159ec:	str	w8, [sp, #12]
  4159f0:	ldr	w8, [x25, #8]
  4159f4:	and	w9, w8, #0xff
  4159f8:	cmp	w9, #0x15
  4159fc:	b.ne	415a0c <_obstack_memory_used@@Base+0x3b88>  // b.any
  415a00:	and	w8, w8, #0xffffff00
  415a04:	orr	w8, w8, #0x1
  415a08:	str	w8, [x25, #8]
  415a0c:	add	x28, sp, #0x50
  415a10:	mov	w27, #0x3                   	// #3
  415a14:	mov	w22, #0x1                   	// #1
  415a18:	str	xzr, [sp, #16]
  415a1c:	b	415a2c <_obstack_memory_used@@Base+0x3ba8>
  415a20:	mov	w22, wzr
  415a24:	mov	w8, #0x4                   	// #4
  415a28:	cbnz	w8, 415ca0 <_obstack_memory_used@@Base+0x3e1c>
  415a2c:	and	w5, w22, #0x1
  415a30:	sub	x0, x29, #0x20
  415a34:	mov	x1, x23
  415a38:	mov	x2, x25
  415a3c:	mov	w3, w26
  415a40:	mov	x4, x24
  415a44:	stur	x28, [x29, #-24]
  415a48:	stur	w27, [x29, #-32]
  415a4c:	bl	4165e0 <_obstack_memory_used@@Base+0x475c>
  415a50:	cbnz	w0, 415c54 <_obstack_memory_used@@Base+0x3dd0>
  415a54:	mov	x0, x25
  415a58:	mov	x1, x23
  415a5c:	mov	x2, x24
  415a60:	bl	416454 <_obstack_memory_used@@Base+0x45d0>
  415a64:	ldur	w22, [x29, #-32]
  415a68:	mov	w26, w0
  415a6c:	mov	w3, wzr
  415a70:	cmp	w22, #0x2
  415a74:	b.eq	415aa4 <_obstack_memory_used@@Base+0x3c20>  // b.none
  415a78:	cmp	w22, #0x4
  415a7c:	mov	w8, w3
  415a80:	b.eq	415aa8 <_obstack_memory_used@@Base+0x3c24>  // b.none
  415a84:	ldrb	w8, [x25, #8]
  415a88:	cmp	w8, #0x16
  415a8c:	b.eq	415b64 <_obstack_memory_used@@Base+0x3ce0>  // b.none
  415a90:	cmp	w8, #0x2
  415a94:	b.eq	415c2c <_obstack_memory_used@@Base+0x3da8>  // b.none
  415a98:	mov	w3, wzr
  415a9c:	mov	w8, wzr
  415aa0:	b	415aa8 <_obstack_memory_used@@Base+0x3c24>
  415aa4:	mov	w8, w3
  415aa8:	cbz	w8, 415b38 <_obstack_memory_used@@Base+0x3cb4>
  415aac:	add	x8, sp, #0x30
  415ab0:	sub	x0, x29, #0x30
  415ab4:	add	x2, sp, #0x20
  415ab8:	mov	w5, #0x1                   	// #1
  415abc:	mov	x1, x23
  415ac0:	mov	x4, x24
  415ac4:	stur	x8, [x29, #-40]
  415ac8:	stur	w27, [x29, #-48]
  415acc:	bl	4165e0 <_obstack_memory_used@@Base+0x475c>
  415ad0:	cbnz	w0, 415c50 <_obstack_memory_used@@Base+0x3dcc>
  415ad4:	mov	x0, x25
  415ad8:	mov	x1, x23
  415adc:	mov	x2, x24
  415ae0:	bl	416454 <_obstack_memory_used@@Base+0x45d0>
  415ae4:	ldr	w8, [x19, #180]
  415ae8:	mov	w26, w0
  415aec:	sub	x3, x29, #0x8
  415af0:	sub	x4, x29, #0x20
  415af4:	cmp	w8, #0x1
  415af8:	csel	x2, x21, xzr, gt
  415afc:	sub	x5, x29, #0x30
  415b00:	mov	x0, x24
  415b04:	mov	x1, x20
  415b08:	bl	4166f8 <_obstack_memory_used@@Base+0x4874>
  415b0c:	ldr	x8, [sp, #24]
  415b10:	str	w0, [x8]
  415b14:	cbnz	w0, 415c44 <_obstack_memory_used@@Base+0x3dc0>
  415b18:	ldrb	w8, [x25, #8]
  415b1c:	cmp	w8, #0x15
  415b20:	b.eq	415a20 <_obstack_memory_used@@Base+0x3b9c>  // b.none
  415b24:	cmp	w8, #0x2
  415b28:	b.eq	415c2c <_obstack_memory_used@@Base+0x3da8>  // b.none
  415b2c:	mov	w22, wzr
  415b30:	mov	w8, wzr
  415b34:	b	415a28 <_obstack_memory_used@@Base+0x3ba4>
  415b38:	adrp	x11, 421000 <_obstack_memory_used@@Base+0xf17c>
  415b3c:	mov	w8, w22
  415b40:	add	x11, x11, #0x4b2
  415b44:	adr	x9, 415b54 <_obstack_memory_used@@Base+0x3cd0>
  415b48:	ldrb	w10, [x11, x8]
  415b4c:	add	x9, x9, x10, lsl #2
  415b50:	br	x9
  415b54:	ldurb	w1, [x29, #-24]
  415b58:	mov	x0, x20
  415b5c:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  415b60:	b	415b18 <_obstack_memory_used@@Base+0x3c94>
  415b64:	ldr	x8, [x23, #72]
  415b68:	add	x0, sp, #0x20
  415b6c:	mov	x1, x23
  415b70:	mov	x2, x24
  415b74:	add	x8, x8, w26, sxtw
  415b78:	str	x8, [x23, #72]
  415b7c:	bl	416454 <_obstack_memory_used@@Base+0x45d0>
  415b80:	ldrb	w8, [sp, #40]
  415b84:	mov	w3, w0
  415b88:	cmp	w8, #0x15
  415b8c:	b.eq	415c0c <_obstack_memory_used@@Base+0x3d88>  // b.none
  415b90:	cmp	w8, #0x2
  415b94:	b.eq	415c2c <_obstack_memory_used@@Base+0x3da8>  // b.none
  415b98:	mov	w8, #0x1                   	// #1
  415b9c:	b	415aa8 <_obstack_memory_used@@Base+0x3c24>
  415ba0:	ldr	x8, [x21, #40]
  415ba4:	ldr	x9, [sp, #16]
  415ba8:	cmp	x9, x8
  415bac:	b.eq	415c64 <_obstack_memory_used@@Base+0x3de0>  // b.none
  415bb0:	ldr	x8, [x21, #40]
  415bb4:	ldur	w9, [x29, #-24]
  415bb8:	ldr	x10, [x21]
  415bbc:	add	x11, x8, #0x1
  415bc0:	str	x11, [x21, #40]
  415bc4:	str	w9, [x10, x8, lsl #2]
  415bc8:	b	415b18 <_obstack_memory_used@@Base+0x3c94>
  415bcc:	ldur	x1, [x29, #-24]
  415bd0:	mov	x0, x20
  415bd4:	bl	41696c <_obstack_memory_used@@Base+0x4ae8>
  415bd8:	b	415b0c <_obstack_memory_used@@Base+0x3c88>
  415bdc:	ldur	x1, [x29, #-24]
  415be0:	mov	x0, x20
  415be4:	bl	4169b4 <_obstack_memory_used@@Base+0x4b30>
  415be8:	b	415b0c <_obstack_memory_used@@Base+0x3c88>
  415bec:	ldr	x0, [x23, #120]
  415bf0:	ldur	x4, [x29, #-24]
  415bf4:	sub	x3, x29, #0x10
  415bf8:	mov	x1, x20
  415bfc:	mov	x2, x21
  415c00:	mov	x5, x24
  415c04:	bl	4169fc <_obstack_memory_used@@Base+0x4b78>
  415c08:	b	415b0c <_obstack_memory_used@@Base+0x3c88>
  415c0c:	ldr	x9, [x23, #72]
  415c10:	neg	w10, w26
  415c14:	mov	w8, wzr
  415c18:	add	x9, x9, w10, sxtw
  415c1c:	str	x9, [x23, #72]
  415c20:	mov	w9, #0x1                   	// #1
  415c24:	strb	w9, [x25, #8]
  415c28:	b	415aa8 <_obstack_memory_used@@Base+0x3c24>
  415c2c:	ldr	x8, [sp, #24]
  415c30:	mov	w9, #0x7                   	// #7
  415c34:	mov	w22, wzr
  415c38:	str	w9, [x8]
  415c3c:	mov	w8, #0x2                   	// #2
  415c40:	b	415a28 <_obstack_memory_used@@Base+0x3ba4>
  415c44:	mov	w22, wzr
  415c48:	mov	w8, #0x2                   	// #2
  415c4c:	b	415a28 <_obstack_memory_used@@Base+0x3ba4>
  415c50:	mov	w22, wzr
  415c54:	ldr	x8, [sp, #24]
  415c58:	str	w0, [x8]
  415c5c:	mov	w8, #0x2                   	// #2
  415c60:	b	415a28 <_obstack_memory_used@@Base+0x3ba4>
  415c64:	ldr	x0, [x21]
  415c68:	mov	w9, #0x1                   	// #1
  415c6c:	bfi	x9, x8, #1, #63
  415c70:	lsl	x1, x9, #2
  415c74:	str	x9, [sp, #16]
  415c78:	bl	402a40 <realloc@plt>
  415c7c:	cbz	x0, 415c94 <_obstack_memory_used@@Base+0x3e10>
  415c80:	mov	w8, wzr
  415c84:	str	x0, [x21]
  415c88:	cbz	w8, 415bb0 <_obstack_memory_used@@Base+0x3d2c>
  415c8c:	mov	w22, wzr
  415c90:	b	415a28 <_obstack_memory_used@@Base+0x3ba4>
  415c94:	mov	w8, #0x6                   	// #6
  415c98:	cbnz	w8, 415c8c <_obstack_memory_used@@Base+0x3e08>
  415c9c:	b	415bb0 <_obstack_memory_used@@Base+0x3d2c>
  415ca0:	cmp	w8, #0x2
  415ca4:	b.eq	415dc8 <_obstack_memory_used@@Base+0x3f44>  // b.none
  415ca8:	cmp	w8, #0x6
  415cac:	b.eq	415dbc <_obstack_memory_used@@Base+0x3f38>  // b.none
  415cb0:	cmp	w8, #0x4
  415cb4:	b.ne	415d70 <_obstack_memory_used@@Base+0x3eec>  // b.any
  415cb8:	ldr	x8, [x23, #72]
  415cbc:	add	x8, x8, w26, sxtw
  415cc0:	str	x8, [x23, #72]
  415cc4:	ldr	w8, [sp, #12]
  415cc8:	cbz	w8, 415cd4 <_obstack_memory_used@@Base+0x3e50>
  415ccc:	mov	x0, x20
  415cd0:	bl	4170b8 <_obstack_memory_used@@Base+0x5234>
  415cd4:	ldr	w8, [x19, #180]
  415cd8:	cmp	w8, #0x2
  415cdc:	b.lt	415cec <_obstack_memory_used@@Base+0x3e68>  // b.tstop
  415ce0:	ldr	x1, [x19, #120]
  415ce4:	mov	x0, x20
  415ce8:	bl	4170d8 <_obstack_memory_used@@Base+0x5254>
  415cec:	ldr	x8, [x21, #40]
  415cf0:	cbnz	x8, 415d0c <_obstack_memory_used@@Base+0x3e88>
  415cf4:	ldr	x8, [x21, #48]
  415cf8:	cbnz	x8, 415d0c <_obstack_memory_used@@Base+0x3e88>
  415cfc:	ldr	x8, [x21, #56]
  415d00:	cbnz	x8, 415d0c <_obstack_memory_used@@Base+0x3e88>
  415d04:	ldr	x8, [x21, #64]
  415d08:	cbz	x8, 415e00 <_obstack_memory_used@@Base+0x3f7c>
  415d0c:	ldrb	w8, [x19, #176]
  415d10:	add	x3, sp, #0x50
  415d14:	mov	x0, x19
  415d18:	mov	x1, xzr
  415d1c:	orr	w8, w8, #0x2
  415d20:	strb	w8, [x19, #176]
  415d24:	ldr	w22, [sp, #88]
  415d28:	mov	w8, #0x6                   	// #6
  415d2c:	mov	x2, xzr
  415d30:	strb	w8, [sp, #88]
  415d34:	str	x21, [sp, #80]
  415d38:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  415d3c:	cbz	x0, 415e80 <_obstack_memory_used@@Base+0x3ffc>
  415d40:	mov	x23, x0
  415d44:	mov	x9, xzr
  415d48:	and	w8, w22, #0xffffff00
  415d4c:	ldr	x10, [x20, x9]
  415d50:	cbnz	x10, 415d74 <_obstack_memory_used@@Base+0x3ef0>
  415d54:	add	x9, x9, #0x8
  415d58:	cmp	x9, #0x20
  415d5c:	b.ne	415d4c <_obstack_memory_used@@Base+0x3ec8>  // b.any
  415d60:	mov	x0, x20
  415d64:	bl	402bd0 <free@plt>
  415d68:	mov	x1, x23
  415d6c:	b	415db4 <_obstack_memory_used@@Base+0x3f30>
  415d70:	b	415ddc <_obstack_memory_used@@Base+0x3f58>
  415d74:	orr	w8, w8, #0x3
  415d78:	add	x3, sp, #0x50
  415d7c:	mov	x0, x19
  415d80:	mov	x1, xzr
  415d84:	mov	x2, xzr
  415d88:	str	w8, [sp, #88]
  415d8c:	str	x20, [sp, #80]
  415d90:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  415d94:	mov	x1, x0
  415d98:	cbz	x0, 415e74 <_obstack_memory_used@@Base+0x3ff0>
  415d9c:	mov	w3, #0xa                   	// #10
  415da0:	mov	x0, x19
  415da4:	mov	x2, x23
  415da8:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  415dac:	mov	x1, x0
  415db0:	cbz	x0, 415e74 <_obstack_memory_used@@Base+0x3ff0>
  415db4:	mov	w8, wzr
  415db8:	tbz	wzr, #0, 415ddc <_obstack_memory_used@@Base+0x3f58>
  415dbc:	mov	w8, #0xc                   	// #12
  415dc0:	ldr	x9, [sp, #24]
  415dc4:	str	w8, [x9]
  415dc8:	mov	x0, x20
  415dcc:	bl	402bd0 <free@plt>
  415dd0:	mov	x0, x21
  415dd4:	bl	413510 <_obstack_memory_used@@Base+0x168c>
  415dd8:	mov	x1, xzr
  415ddc:	ldp	x20, x19, [sp, #240]
  415de0:	ldp	x22, x21, [sp, #224]
  415de4:	ldp	x24, x23, [sp, #208]
  415de8:	ldp	x26, x25, [sp, #192]
  415dec:	ldp	x28, x27, [sp, #176]
  415df0:	ldp	x29, x30, [sp, #160]
  415df4:	mov	x0, x1
  415df8:	add	sp, sp, #0x100
  415dfc:	ret
  415e00:	ldr	w8, [x19, #180]
  415e04:	cmp	w8, #0x2
  415e08:	b.lt	415e1c <_obstack_memory_used@@Base+0x3f98>  // b.tstop
  415e0c:	ldr	x8, [x21, #72]
  415e10:	cbnz	x8, 415d0c <_obstack_memory_used@@Base+0x3e88>
  415e14:	ldrb	w8, [x21, #32]
  415e18:	tbnz	w8, #0, 415d0c <_obstack_memory_used@@Base+0x3e88>
  415e1c:	mov	x0, x21
  415e20:	bl	413510 <_obstack_memory_used@@Base+0x168c>
  415e24:	mov	w8, #0x3                   	// #3
  415e28:	add	x3, sp, #0x50
  415e2c:	mov	x0, x19
  415e30:	mov	x1, xzr
  415e34:	mov	x2, xzr
  415e38:	strb	w8, [sp, #88]
  415e3c:	str	x20, [sp, #80]
  415e40:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  415e44:	mov	x1, x0
  415e48:	cbnz	x0, 415ddc <_obstack_memory_used@@Base+0x3f58>
  415e4c:	b	415dbc <_obstack_memory_used@@Base+0x3f38>
  415e50:	mov	x0, x20
  415e54:	bl	402bd0 <free@plt>
  415e58:	mov	x0, x21
  415e5c:	bl	402bd0 <free@plt>
  415e60:	ldr	x9, [sp, #24]
  415e64:	mov	w8, #0xc                   	// #12
  415e68:	mov	x1, xzr
  415e6c:	str	w8, [x9]
  415e70:	b	415ddc <_obstack_memory_used@@Base+0x3f58>
  415e74:	mov	w8, #0x1                   	// #1
  415e78:	tbnz	w8, #0, 415dbc <_obstack_memory_used@@Base+0x3f38>
  415e7c:	b	415ddc <_obstack_memory_used@@Base+0x3f58>
  415e80:	mov	w8, #0x1                   	// #1
  415e84:	tbnz	w8, #0, 415dbc <_obstack_memory_used@@Base+0x3f38>
  415e88:	b	415ddc <_obstack_memory_used@@Base+0x3f58>
  415e8c:	stp	x29, x30, [sp, #-48]!
  415e90:	stp	x20, x19, [sp, #32]
  415e94:	ldrb	w8, [x0, #176]
  415e98:	mov	x19, x0
  415e9c:	str	x21, [sp, #16]
  415ea0:	mov	x29, sp
  415ea4:	orr	w9, w8, #0x10
  415ea8:	strb	w9, [x0, #176]
  415eac:	tbnz	w8, #3, 415ed8 <_obstack_memory_used@@Base+0x4054>
  415eb0:	mov	x10, #0x7fffffe07fffffe     	// #576460743847706622
  415eb4:	mov	x9, #0x3ff000000000000     	// #287948901175001088
  415eb8:	movk	x10, #0x87ff, lsl #16
  415ebc:	stp	x9, x10, [x19, #184]
  415ec0:	tbz	w8, #2, 415ee4 <_obstack_memory_used@@Base+0x4060>
  415ec4:	stp	xzr, xzr, [x19, #200]
  415ec8:	ldp	x20, x19, [sp, #32]
  415ecc:	ldr	x21, [sp, #16]
  415ed0:	ldp	x29, x30, [sp], #48
  415ed4:	ret
  415ed8:	mov	x21, xzr
  415edc:	mov	x20, xzr
  415ee0:	b	415eec <_obstack_memory_used@@Base+0x4068>
  415ee4:	mov	w20, #0x2                   	// #2
  415ee8:	mov	w21, #0x80                  	// #128
  415eec:	bl	402bb0 <__ctype_b_loc@plt>
  415ef0:	ldr	x8, [x0]
  415ef4:	mov	w9, #0x1                   	// #1
  415ef8:	add	x8, x8, x21, lsl #1
  415efc:	b	415f14 <_obstack_memory_used@@Base+0x4090>
  415f00:	add	x20, x20, #0x1
  415f04:	add	x21, x21, #0x40
  415f08:	cmp	x20, #0x4
  415f0c:	add	x8, x8, #0x80
  415f10:	b.eq	415ec8 <_obstack_memory_used@@Base+0x4044>  // b.none
  415f14:	add	x11, x19, x20, lsl #3
  415f18:	mov	x10, xzr
  415f1c:	add	x11, x11, #0xb8
  415f20:	b	415f40 <_obstack_memory_used@@Base+0x40bc>
  415f24:	ldr	x12, [x11]
  415f28:	lsl	x13, x9, x10
  415f2c:	orr	x12, x12, x13
  415f30:	str	x12, [x11]
  415f34:	add	x10, x10, #0x1
  415f38:	cmp	x10, #0x40
  415f3c:	b.eq	415f00 <_obstack_memory_used@@Base+0x407c>  // b.none
  415f40:	add	x12, x21, x10
  415f44:	cmp	x12, #0x5f
  415f48:	b.eq	415f24 <_obstack_memory_used@@Base+0x40a0>  // b.none
  415f4c:	ldrh	w12, [x8, x10, lsl #1]
  415f50:	tbz	w12, #3, 415f34 <_obstack_memory_used@@Base+0x40b0>
  415f54:	b	415f24 <_obstack_memory_used@@Base+0x40a0>
  415f58:	sub	sp, sp, #0x70
  415f5c:	stp	x29, x30, [sp, #32]
  415f60:	stp	x26, x25, [sp, #48]
  415f64:	stp	x22, x21, [sp, #80]
  415f68:	add	x29, sp, #0x20
  415f6c:	mov	x26, x1
  415f70:	mov	x22, x0
  415f74:	mov	w0, #0x20                  	// #32
  415f78:	mov	w1, #0x1                   	// #1
  415f7c:	stp	x24, x23, [sp, #64]
  415f80:	stp	x20, x19, [sp, #96]
  415f84:	mov	x19, x5
  415f88:	mov	w23, w4
  415f8c:	mov	x24, x3
  415f90:	mov	x25, x2
  415f94:	stur	xzr, [x29, #-8]
  415f98:	bl	402a10 <calloc@plt>
  415f9c:	cbz	x0, 4160c4 <_obstack_memory_used@@Base+0x4240>
  415fa0:	mov	x20, x0
  415fa4:	mov	w0, #0x50                  	// #80
  415fa8:	mov	w1, #0x1                   	// #1
  415fac:	bl	402a10 <calloc@plt>
  415fb0:	cbz	x0, 4160fc <_obstack_memory_used@@Base+0x4278>
  415fb4:	ldrb	w8, [x0, #32]
  415fb8:	mov	x21, x0
  415fbc:	sub	x3, x29, #0x8
  415fc0:	mov	x1, x20
  415fc4:	bfxil	w8, w23, #0, #1
  415fc8:	strb	w8, [x0, #32]
  415fcc:	mov	x0, x26
  415fd0:	mov	x2, x21
  415fd4:	mov	x4, x25
  415fd8:	mov	x5, xzr
  415fdc:	bl	4169fc <_obstack_memory_used@@Base+0x4b78>
  415fe0:	cbnz	w0, 416108 <_obstack_memory_used@@Base+0x4284>
  415fe4:	ldrb	w8, [x24]
  415fe8:	cbz	w8, 416004 <_obstack_memory_used@@Base+0x4180>
  415fec:	add	x24, x24, #0x1
  415ff0:	and	x1, x8, #0xff
  415ff4:	mov	x0, x20
  415ff8:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  415ffc:	ldrb	w8, [x24], #1
  416000:	cbnz	w8, 415ff0 <_obstack_memory_used@@Base+0x416c>
  416004:	tbz	w23, #0, 416010 <_obstack_memory_used@@Base+0x418c>
  416008:	mov	x0, x20
  41600c:	bl	4170b8 <_obstack_memory_used@@Base+0x5234>
  416010:	ldr	w8, [x22, #180]
  416014:	cmp	w8, #0x2
  416018:	b.lt	416028 <_obstack_memory_used@@Base+0x41a4>  // b.tstop
  41601c:	ldr	x1, [x22, #120]
  416020:	mov	x0, x20
  416024:	bl	4170d8 <_obstack_memory_used@@Base+0x5254>
  416028:	ldr	w8, [sp, #16]
  41602c:	add	x3, sp, #0x8
  416030:	mov	x0, x22
  416034:	mov	x1, xzr
  416038:	and	w24, w8, #0xff800000
  41603c:	orr	w8, w24, #0x3
  416040:	mov	x2, xzr
  416044:	str	x20, [sp, #8]
  416048:	str	w8, [sp, #16]
  41604c:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  416050:	cbz	x0, 4160b4 <_obstack_memory_used@@Base+0x4230>
  416054:	ldr	w8, [x22, #180]
  416058:	mov	x23, x0
  41605c:	cmp	w8, #0x2
  416060:	b.lt	4160d4 <_obstack_memory_used@@Base+0x4250>  // b.tstop
  416064:	orr	w8, w24, #0x6
  416068:	str	w8, [sp, #16]
  41606c:	str	x21, [sp, #8]
  416070:	ldrb	w8, [x22, #176]
  416074:	add	x3, sp, #0x8
  416078:	mov	x0, x22
  41607c:	mov	x1, xzr
  416080:	orr	w8, w8, #0x2
  416084:	mov	x2, xzr
  416088:	strb	w8, [x22, #176]
  41608c:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  416090:	cbz	x0, 416128 <_obstack_memory_used@@Base+0x42a4>
  416094:	mov	x2, x0
  416098:	mov	w3, #0xa                   	// #10
  41609c:	mov	x0, x22
  4160a0:	mov	x1, x23
  4160a4:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  4160a8:	mov	x23, x0
  4160ac:	mov	w8, wzr
  4160b0:	tbz	w8, #0, 4160dc <_obstack_memory_used@@Base+0x4258>
  4160b4:	mov	x0, x20
  4160b8:	bl	402bd0 <free@plt>
  4160bc:	mov	x0, x21
  4160c0:	bl	413510 <_obstack_memory_used@@Base+0x168c>
  4160c4:	mov	x23, xzr
  4160c8:	mov	w8, #0xc                   	// #12
  4160cc:	str	w8, [x19]
  4160d0:	b	4160dc <_obstack_memory_used@@Base+0x4258>
  4160d4:	mov	x0, x21
  4160d8:	bl	413510 <_obstack_memory_used@@Base+0x168c>
  4160dc:	mov	x0, x23
  4160e0:	ldp	x20, x19, [sp, #96]
  4160e4:	ldp	x22, x21, [sp, #80]
  4160e8:	ldp	x24, x23, [sp, #64]
  4160ec:	ldp	x26, x25, [sp, #48]
  4160f0:	ldp	x29, x30, [sp, #32]
  4160f4:	add	sp, sp, #0x70
  4160f8:	ret
  4160fc:	mov	x0, x20
  416100:	bl	402bd0 <free@plt>
  416104:	b	4160c4 <_obstack_memory_used@@Base+0x4240>
  416108:	mov	w25, w0
  41610c:	mov	x0, x20
  416110:	bl	402bd0 <free@plt>
  416114:	mov	x0, x21
  416118:	bl	413510 <_obstack_memory_used@@Base+0x168c>
  41611c:	mov	x23, xzr
  416120:	str	w25, [x19]
  416124:	b	4160dc <_obstack_memory_used@@Base+0x4258>
  416128:	mov	w8, #0x1                   	// #1
  41612c:	tbnz	w8, #0, 4160b4 <_obstack_memory_used@@Base+0x4230>
  416130:	b	4160dc <_obstack_memory_used@@Base+0x4258>
  416134:	sub	sp, sp, #0x70
  416138:	stp	x29, x30, [sp, #16]
  41613c:	stp	x26, x25, [sp, #48]
  416140:	stp	x24, x23, [sp, #64]
  416144:	stp	x22, x21, [sp, #80]
  416148:	stp	x20, x19, [sp, #96]
  41614c:	ldr	q0, [x3]
  416150:	str	x27, [sp, #32]
  416154:	ldr	x27, [x1, #72]
  416158:	mov	x20, x5
  41615c:	str	q0, [sp]
  416160:	ldrb	w8, [x3, #8]
  416164:	mov	x25, x4
  416168:	mov	x24, x3
  41616c:	mov	x21, x2
  416170:	mov	x26, x1
  416174:	cmp	w8, #0x17
  416178:	mov	x19, x0
  41617c:	add	x29, sp, #0x10
  416180:	b.ne	4161e4 <_obstack_memory_used@@Base+0x4360>  // b.any
  416184:	mov	x0, x26
  416188:	mov	x1, x24
  41618c:	mov	x2, x25
  416190:	bl	417354 <_obstack_memory_used@@Base+0x54d0>
  416194:	mov	x23, x0
  416198:	cmn	x0, #0x1
  41619c:	b.eq	4161fc <_obstack_memory_used@@Base+0x4378>  // b.none
  4161a0:	cmn	x23, #0x2
  4161a4:	b.eq	416220 <_obstack_memory_used@@Base+0x439c>  // b.none
  4161a8:	ldrb	w8, [x24, #8]
  4161ac:	mov	x22, x23
  4161b0:	cmp	w8, #0x18
  4161b4:	b.eq	41622c <_obstack_memory_used@@Base+0x43a8>  // b.none
  4161b8:	cmp	w8, #0x1
  4161bc:	b.ne	416228 <_obstack_memory_used@@Base+0x43a4>  // b.any
  4161c0:	ldrb	w8, [x24]
  4161c4:	cmp	w8, #0x2c
  4161c8:	b.ne	416228 <_obstack_memory_used@@Base+0x43a4>  // b.any
  4161cc:	mov	x0, x26
  4161d0:	mov	x1, x24
  4161d4:	mov	x2, x25
  4161d8:	bl	417354 <_obstack_memory_used@@Base+0x54d0>
  4161dc:	mov	x22, x0
  4161e0:	b	41622c <_obstack_memory_used@@Base+0x43a8>
  4161e4:	cmp	w8, #0x12
  4161e8:	cset	w23, eq  // eq = none
  4161ec:	cmp	w8, #0x13
  4161f0:	mov	w8, #0x1                   	// #1
  4161f4:	cneg	x22, x8, ne  // ne = any
  4161f8:	b	416268 <_obstack_memory_used@@Base+0x43e4>
  4161fc:	ldrb	w8, [x24, #8]
  416200:	cmp	w8, #0x1
  416204:	b.ne	416360 <_obstack_memory_used@@Base+0x44dc>  // b.any
  416208:	ldrb	w8, [x24]
  41620c:	cmp	w8, #0x2c
  416210:	b.ne	416360 <_obstack_memory_used@@Base+0x44dc>  // b.any
  416214:	mov	x23, xzr
  416218:	cmn	x23, #0x2
  41621c:	b.ne	4161a8 <_obstack_memory_used@@Base+0x4324>  // b.any
  416220:	mov	x22, xzr
  416224:	b	41622c <_obstack_memory_used@@Base+0x43a8>
  416228:	mov	x22, #0xfffffffffffffffe    	// #-2
  41622c:	cmn	x23, #0x2
  416230:	b.eq	416418 <_obstack_memory_used@@Base+0x4594>  // b.none
  416234:	cmn	x22, #0x2
  416238:	b.eq	416418 <_obstack_memory_used@@Base+0x4594>  // b.none
  41623c:	cmn	x22, #0x1
  416240:	b.eq	41624c <_obstack_memory_used@@Base+0x43c8>  // b.none
  416244:	cmp	x23, x22
  416248:	b.gt	416360 <_obstack_memory_used@@Base+0x44dc>
  41624c:	ldrb	w8, [x24, #8]
  416250:	cmp	w8, #0x18
  416254:	b.ne	416360 <_obstack_memory_used@@Base+0x44dc>  // b.any
  416258:	cmn	x22, #0x1
  41625c:	csel	x8, x23, x22, eq  // eq = none
  416260:	cmp	x8, #0x8, lsl #12
  416264:	b.ge	416434 <_obstack_memory_used@@Base+0x45b0>  // b.tcont
  416268:	mov	x0, x24
  41626c:	mov	x1, x26
  416270:	mov	x2, x25
  416274:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  416278:	cbz	x19, 41636c <_obstack_memory_used@@Base+0x44e8>
  41627c:	orr	x8, x22, x23
  416280:	cbz	x8, 416390 <_obstack_memory_used@@Base+0x450c>
  416284:	subs	x25, x23, #0x1
  416288:	b.ge	4163ac <_obstack_memory_used@@Base+0x4528>  // b.tcont
  41628c:	mov	x24, xzr
  416290:	ldrb	w8, [x19, #48]
  416294:	cmp	w8, #0x11
  416298:	b.ne	4162b0 <_obstack_memory_used@@Base+0x442c>  // b.any
  41629c:	ldr	x2, [x19, #40]
  4162a0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x517c>
  4162a4:	add	x1, x1, #0x510
  4162a8:	mov	x0, x19
  4162ac:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  4162b0:	cmn	x22, #0x1
  4162b4:	mov	w8, #0xa                   	// #10
  4162b8:	cinc	w3, w8, eq  // eq = none
  4162bc:	mov	x0, x21
  4162c0:	mov	x1, x19
  4162c4:	mov	x2, xzr
  4162c8:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  4162cc:	cbz	x0, 416410 <_obstack_memory_used@@Base+0x458c>
  4162d0:	add	x8, x23, #0x2
  4162d4:	mov	x25, x0
  4162d8:	cmp	x8, x22
  4162dc:	b.gt	416338 <_obstack_memory_used@@Base+0x44b4>
  4162e0:	add	x23, x23, #0x1
  4162e4:	mov	x0, x19
  4162e8:	mov	x1, x21
  4162ec:	bl	417428 <_obstack_memory_used@@Base+0x55a4>
  4162f0:	mov	x19, x0
  4162f4:	mov	w3, #0x10                  	// #16
  4162f8:	mov	x0, x21
  4162fc:	mov	x1, x25
  416300:	mov	x2, x19
  416304:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  416308:	cbz	x19, 416410 <_obstack_memory_used@@Base+0x458c>
  41630c:	mov	x1, x0
  416310:	cbz	x0, 416410 <_obstack_memory_used@@Base+0x458c>
  416314:	mov	w3, #0xa                   	// #10
  416318:	mov	x0, x21
  41631c:	mov	x2, xzr
  416320:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  416324:	cbz	x0, 416410 <_obstack_memory_used@@Base+0x458c>
  416328:	add	x23, x23, #0x1
  41632c:	mov	x25, x0
  416330:	cmp	x23, x22
  416334:	b.lt	4162e4 <_obstack_memory_used@@Base+0x4460>  // b.tstop
  416338:	cbz	x24, 416358 <_obstack_memory_used@@Base+0x44d4>
  41633c:	mov	w3, #0x10                  	// #16
  416340:	mov	x0, x21
  416344:	mov	x1, x24
  416348:	mov	x2, x25
  41634c:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  416350:	mov	x19, x0
  416354:	b	41636c <_obstack_memory_used@@Base+0x44e8>
  416358:	mov	x19, x25
  41635c:	b	41636c <_obstack_memory_used@@Base+0x44e8>
  416360:	mov	w8, #0xa                   	// #10
  416364:	mov	x19, xzr
  416368:	str	w8, [x20]
  41636c:	mov	x0, x19
  416370:	ldp	x20, x19, [sp, #96]
  416374:	ldp	x22, x21, [sp, #80]
  416378:	ldp	x24, x23, [sp, #64]
  41637c:	ldp	x26, x25, [sp, #48]
  416380:	ldr	x27, [sp, #32]
  416384:	ldp	x29, x30, [sp, #16]
  416388:	add	sp, sp, #0x70
  41638c:	ret
  416390:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x317c>
  416394:	add	x1, x1, #0x25c
  416398:	mov	x0, x19
  41639c:	mov	x2, xzr
  4163a0:	bl	4151b8 <_obstack_memory_used@@Base+0x3334>
  4163a4:	mov	x19, xzr
  4163a8:	b	41636c <_obstack_memory_used@@Base+0x44e8>
  4163ac:	mov	x24, x19
  4163b0:	b.eq	4163ec <_obstack_memory_used@@Base+0x4568>  // b.none
  4163b4:	mov	x0, x19
  4163b8:	mov	x1, x21
  4163bc:	bl	417428 <_obstack_memory_used@@Base+0x55a4>
  4163c0:	mov	x19, x0
  4163c4:	mov	w3, #0x10                  	// #16
  4163c8:	mov	x0, x21
  4163cc:	mov	x1, x24
  4163d0:	mov	x2, x19
  4163d4:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  4163d8:	cbz	x19, 416410 <_obstack_memory_used@@Base+0x458c>
  4163dc:	mov	x24, x0
  4163e0:	cbz	x0, 416410 <_obstack_memory_used@@Base+0x458c>
  4163e4:	subs	x25, x25, #0x1
  4163e8:	b.ne	4163b4 <_obstack_memory_used@@Base+0x4530>  // b.any
  4163ec:	cmp	x23, x22
  4163f0:	b.ne	4163fc <_obstack_memory_used@@Base+0x4578>  // b.any
  4163f4:	mov	x19, x24
  4163f8:	b	41636c <_obstack_memory_used@@Base+0x44e8>
  4163fc:	mov	x0, x19
  416400:	mov	x1, x21
  416404:	bl	417428 <_obstack_memory_used@@Base+0x55a4>
  416408:	mov	x19, x0
  41640c:	cbnz	x0, 416290 <_obstack_memory_used@@Base+0x440c>
  416410:	mov	w8, #0xc                   	// #12
  416414:	b	416364 <_obstack_memory_used@@Base+0x44e0>
  416418:	tbz	w25, #21, 41643c <_obstack_memory_used@@Base+0x45b8>
  41641c:	str	x27, [x26, #72]
  416420:	ldr	q0, [sp]
  416424:	mov	w8, #0x1                   	// #1
  416428:	str	q0, [x24]
  41642c:	strb	w8, [x24, #8]
  416430:	b	41636c <_obstack_memory_used@@Base+0x44e8>
  416434:	mov	w8, #0xf                   	// #15
  416438:	b	416364 <_obstack_memory_used@@Base+0x44e0>
  41643c:	ldrb	w8, [x24, #8]
  416440:	mov	x19, xzr
  416444:	cmp	w8, #0x2
  416448:	mov	w8, #0x9                   	// #9
  41644c:	cinc	w8, w8, ne  // ne = any
  416450:	b	416368 <_obstack_memory_used@@Base+0x44e4>
  416454:	ldr	x9, [x1, #104]
  416458:	ldr	x8, [x1, #72]
  41645c:	cmp	x9, x8
  416460:	b.le	4164d4 <_obstack_memory_used@@Base+0x4650>
  416464:	ldr	x9, [x1, #8]
  416468:	ldrb	w9, [x9, x8]
  41646c:	strb	w9, [x0]
  416470:	ldr	w8, [x1, #144]
  416474:	cmp	w8, #0x2
  416478:	b.lt	41649c <_obstack_memory_used@@Base+0x4618>  // b.tstop
  41647c:	ldr	x8, [x1, #72]
  416480:	ldr	x10, [x1, #48]
  416484:	cmp	x8, x10
  416488:	b.eq	41649c <_obstack_memory_used@@Base+0x4618>  // b.none
  41648c:	ldr	x10, [x1, #16]
  416490:	ldr	w8, [x10, x8, lsl #2]
  416494:	cmn	w8, #0x1
  416498:	b.eq	416534 <_obstack_memory_used@@Base+0x46b0>  // b.none
  41649c:	tbz	w2, #0, 4164e4 <_obstack_memory_used@@Base+0x4660>
  4164a0:	cmp	w9, #0x5c
  4164a4:	b.ne	4164e4 <_obstack_memory_used@@Base+0x4660>  // b.any
  4164a8:	ldr	x8, [x1, #72]
  4164ac:	ldr	x10, [x1, #88]
  4164b0:	add	x8, x8, #0x1
  4164b4:	cmp	x8, x10
  4164b8:	b.ge	4164e4 <_obstack_memory_used@@Base+0x4660>  // b.tcont
  4164bc:	ldr	x9, [x1, #8]
  4164c0:	str	x8, [x1, #72]
  4164c4:	ldrb	w9, [x9, x8]
  4164c8:	mov	w8, #0x1                   	// #1
  4164cc:	strb	w9, [x0]
  4164d0:	b	416538 <_obstack_memory_used@@Base+0x46b4>
  4164d4:	mov	w9, #0x2                   	// #2
  4164d8:	strb	w9, [x0, #8]
  4164dc:	mov	w0, wzr
  4164e0:	ret
  4164e4:	cmp	w9, #0x5c
  4164e8:	b.gt	41651c <_obstack_memory_used@@Base+0x4698>
  4164ec:	cmp	w9, #0x2d
  4164f0:	b.eq	416544 <_obstack_memory_used@@Base+0x46c0>  // b.none
  4164f4:	cmp	w9, #0x5b
  4164f8:	b.ne	416534 <_obstack_memory_used@@Base+0x46b0>  // b.any
  4164fc:	ldr	x8, [x1, #72]
  416500:	ldr	x10, [x1, #88]
  416504:	add	x8, x8, #0x1
  416508:	cmp	x8, x10
  41650c:	b.ge	41655c <_obstack_memory_used@@Base+0x46d8>  // b.tcont
  416510:	ldr	x10, [x1, #8]
  416514:	ldrb	w8, [x10, x8]
  416518:	b	416560 <_obstack_memory_used@@Base+0x46dc>
  41651c:	cmp	w9, #0x5d
  416520:	b.eq	41654c <_obstack_memory_used@@Base+0x46c8>  // b.none
  416524:	cmp	w9, #0x5e
  416528:	b.ne	416534 <_obstack_memory_used@@Base+0x46b0>  // b.any
  41652c:	mov	w8, #0x19                  	// #25
  416530:	b	416550 <_obstack_memory_used@@Base+0x46cc>
  416534:	mov	w8, #0x1                   	// #1
  416538:	strb	w8, [x0, #8]
  41653c:	mov	w0, w8
  416540:	ret
  416544:	mov	w8, #0x16                  	// #22
  416548:	b	416550 <_obstack_memory_used@@Base+0x46cc>
  41654c:	mov	w8, #0x15                  	// #21
  416550:	strb	w8, [x0, #8]
  416554:	mov	w0, #0x1                   	// #1
  416558:	ret
  41655c:	mov	w8, wzr
  416560:	cmp	w8, #0x3d
  416564:	strb	w8, [x0]
  416568:	b.eq	41659c <_obstack_memory_used@@Base+0x4718>  // b.none
  41656c:	cmp	w8, #0x3a
  416570:	b.eq	416584 <_obstack_memory_used@@Base+0x4700>  // b.none
  416574:	cmp	w8, #0x2e
  416578:	b.ne	416588 <_obstack_memory_used@@Base+0x4704>  // b.any
  41657c:	mov	w8, #0x1a                  	// #26
  416580:	b	4165a8 <_obstack_memory_used@@Base+0x4724>
  416584:	tbnz	w2, #2, 4165a4 <_obstack_memory_used@@Base+0x4720>
  416588:	mov	w8, #0x1                   	// #1
  41658c:	strb	w8, [x0, #8]
  416590:	strb	w9, [x0]
  416594:	mov	w0, w8
  416598:	ret
  41659c:	mov	w8, #0x1c                  	// #28
  4165a0:	b	4165a8 <_obstack_memory_used@@Base+0x4724>
  4165a4:	mov	w8, #0x1e                  	// #30
  4165a8:	strb	w8, [x0, #8]
  4165ac:	mov	w0, #0x2                   	// #2
  4165b0:	ret
  4165b4:	add	x8, x1, #0x3f
  4165b8:	cmp	x1, #0x0
  4165bc:	csel	x8, x8, x1, lt  // lt = tstop
  4165c0:	asr	x8, x8, #6
  4165c4:	lsl	x8, x8, #3
  4165c8:	ldr	x9, [x0, x8]
  4165cc:	mov	w10, #0x1                   	// #1
  4165d0:	lsl	x10, x10, x1
  4165d4:	orr	x9, x9, x10
  4165d8:	str	x9, [x0, x8]
  4165dc:	ret
  4165e0:	sub	sp, sp, #0x60
  4165e4:	stp	x29, x30, [sp, #16]
  4165e8:	stp	x26, x25, [sp, #32]
  4165ec:	stp	x24, x23, [sp, #48]
  4165f0:	stp	x22, x21, [sp, #64]
  4165f4:	stp	x20, x19, [sp, #80]
  4165f8:	ldr	x24, [x1, #72]
  4165fc:	mov	x20, x1
  416600:	mov	x19, x0
  416604:	mov	x0, x1
  416608:	mov	x1, x24
  41660c:	add	x29, sp, #0x10
  416610:	mov	w23, w5
  416614:	mov	x22, x4
  416618:	mov	w26, w3
  41661c:	mov	x21, x2
  416620:	bl	4170fc <_obstack_memory_used@@Base+0x5278>
  416624:	cmp	w0, #0x2
  416628:	b.lt	416660 <_obstack_memory_used@@Base+0x47dc>  // b.tstop
  41662c:	mov	w25, w0
  416630:	mov	w8, #0x1                   	// #1
  416634:	mov	x0, x20
  416638:	mov	x1, x24
  41663c:	str	w8, [x19]
  416640:	bl	41504c <_obstack_memory_used@@Base+0x31c8>
  416644:	mov	w8, w0
  416648:	str	w8, [x19, #8]
  41664c:	ldr	x8, [x20, #72]
  416650:	mov	w0, wzr
  416654:	add	x8, x8, w25, sxtw
  416658:	str	x8, [x20, #72]
  41665c:	b	4166d4 <_obstack_memory_used@@Base+0x4850>
  416660:	add	x8, x24, w26, sxtw
  416664:	str	x8, [x20, #72]
  416668:	ldrb	w8, [x21, #8]
  41666c:	sub	w8, w8, #0x16
  416670:	cmp	w8, #0x8
  416674:	b.hi	4166c4 <_obstack_memory_used@@Base+0x4840>  // b.pmore
  416678:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xf17c>
  41667c:	add	x9, x9, #0x4b7
  416680:	adr	x10, 416690 <_obstack_memory_used@@Base+0x480c>
  416684:	ldrb	w11, [x9, x8]
  416688:	add	x10, x10, x11, lsl #2
  41668c:	br	x10
  416690:	mov	x0, x19
  416694:	mov	x1, x20
  416698:	mov	x2, x21
  41669c:	bl	417154 <_obstack_memory_used@@Base+0x52d0>
  4166a0:	b	4166d4 <_obstack_memory_used@@Base+0x4850>
  4166a4:	tbnz	w23, #0, 4166c4 <_obstack_memory_used@@Base+0x4840>
  4166a8:	mov	x0, sp
  4166ac:	mov	x1, x20
  4166b0:	mov	x2, x22
  4166b4:	bl	416454 <_obstack_memory_used@@Base+0x45d0>
  4166b8:	ldrb	w8, [sp, #8]
  4166bc:	cmp	w8, #0x15
  4166c0:	b.ne	4166f0 <_obstack_memory_used@@Base+0x486c>  // b.any
  4166c4:	str	wzr, [x19]
  4166c8:	ldrb	w8, [x21]
  4166cc:	mov	w0, wzr
  4166d0:	strb	w8, [x19, #8]
  4166d4:	ldp	x20, x19, [sp, #80]
  4166d8:	ldp	x22, x21, [sp, #64]
  4166dc:	ldp	x24, x23, [sp, #48]
  4166e0:	ldp	x26, x25, [sp, #32]
  4166e4:	ldp	x29, x30, [sp, #16]
  4166e8:	add	sp, sp, #0x60
  4166ec:	ret
  4166f0:	mov	w0, #0xb                   	// #11
  4166f4:	b	4166d4 <_obstack_memory_used@@Base+0x4850>
  4166f8:	stp	x29, x30, [sp, #-80]!
  4166fc:	stp	x26, x25, [sp, #16]
  416700:	stp	x24, x23, [sp, #32]
  416704:	stp	x22, x21, [sp, #48]
  416708:	stp	x20, x19, [sp, #64]
  41670c:	ldr	w26, [x4]
  416710:	mov	x22, x0
  416714:	mov	w0, #0xb                   	// #11
  416718:	mov	x29, sp
  41671c:	cmp	w26, #0x2
  416720:	b.eq	4168d8 <_obstack_memory_used@@Base+0x4a54>  // b.none
  416724:	cmp	w26, #0x4
  416728:	b.eq	4168d8 <_obstack_memory_used@@Base+0x4a54>  // b.none
  41672c:	ldr	w25, [x5]
  416730:	mov	x23, x5
  416734:	mov	w0, #0xb                   	// #11
  416738:	cmp	w25, #0x2
  41673c:	b.eq	4168d8 <_obstack_memory_used@@Base+0x4a54>  // b.none
  416740:	cmp	w25, #0x4
  416744:	b.eq	4168d8 <_obstack_memory_used@@Base+0x4a54>  // b.none
  416748:	mov	x24, x4
  41674c:	mov	x21, x3
  416750:	mov	x20, x2
  416754:	mov	x19, x1
  416758:	cmp	w26, #0x3
  41675c:	b.ne	416770 <_obstack_memory_used@@Base+0x48ec>  // b.any
  416760:	ldr	x0, [x24, #8]
  416764:	bl	402750 <strlen@plt>
  416768:	cmp	x0, #0x1
  41676c:	b.hi	4168f0 <_obstack_memory_used@@Base+0x4a6c>  // b.pmore
  416770:	cmp	w25, #0x3
  416774:	b.ne	416788 <_obstack_memory_used@@Base+0x4904>  // b.any
  416778:	ldr	x0, [x23, #8]
  41677c:	bl	402750 <strlen@plt>
  416780:	cmp	x0, #0x1
  416784:	b.hi	4168f0 <_obstack_memory_used@@Base+0x4a6c>  // b.pmore
  416788:	cmp	w26, #0x3
  41678c:	b.eq	4167b4 <_obstack_memory_used@@Base+0x4930>  // b.none
  416790:	cbnz	w26, 4167c8 <_obstack_memory_used@@Base+0x4944>
  416794:	ldrb	w0, [x24, #8]
  416798:	cmp	w25, #0x3
  41679c:	b.ne	4167d4 <_obstack_memory_used@@Base+0x4950>  // b.any
  4167a0:	ldr	x8, [x23, #8]
  4167a4:	ldrb	w25, [x8]
  4167a8:	cmp	w26, #0x3
  4167ac:	b.ne	4167f4 <_obstack_memory_used@@Base+0x4970>  // b.any
  4167b0:	b	4167f8 <_obstack_memory_used@@Base+0x4974>
  4167b4:	ldr	x8, [x24, #8]
  4167b8:	ldrb	w0, [x8]
  4167bc:	cmp	w25, #0x3
  4167c0:	b.ne	4167d4 <_obstack_memory_used@@Base+0x4950>  // b.any
  4167c4:	b	4167a0 <_obstack_memory_used@@Base+0x491c>
  4167c8:	mov	w0, wzr
  4167cc:	cmp	w25, #0x3
  4167d0:	b.eq	4167a0 <_obstack_memory_used@@Base+0x491c>  // b.none
  4167d4:	cbnz	w25, 4167e8 <_obstack_memory_used@@Base+0x4964>
  4167d8:	ldrb	w25, [x23, #8]
  4167dc:	cmp	w26, #0x3
  4167e0:	b.ne	4167f4 <_obstack_memory_used@@Base+0x4970>  // b.any
  4167e4:	b	4167f8 <_obstack_memory_used@@Base+0x4974>
  4167e8:	mov	w25, wzr
  4167ec:	cmp	w26, #0x3
  4167f0:	b.eq	4167f8 <_obstack_memory_used@@Base+0x4974>  // b.none
  4167f4:	cbnz	w26, 416808 <_obstack_memory_used@@Base+0x4984>
  4167f8:	mov	x1, x20
  4167fc:	bl	417338 <_obstack_memory_used@@Base+0x54b4>
  416800:	mov	w24, w0
  416804:	b	41680c <_obstack_memory_used@@Base+0x4988>
  416808:	ldr	w24, [x24, #8]
  41680c:	ldr	w8, [x23]
  416810:	cmp	w8, #0x3
  416814:	b.eq	41681c <_obstack_memory_used@@Base+0x4998>  // b.none
  416818:	cbnz	w8, 416830 <_obstack_memory_used@@Base+0x49ac>
  41681c:	mov	w0, w25
  416820:	mov	x1, x20
  416824:	bl	417338 <_obstack_memory_used@@Base+0x54b4>
  416828:	mov	w23, w0
  41682c:	b	416834 <_obstack_memory_used@@Base+0x49b0>
  416830:	ldr	w23, [x23, #8]
  416834:	mov	w9, #0x3                   	// #3
  416838:	cmn	w24, #0x1
  41683c:	mov	w8, #0x1                   	// #1
  416840:	b.eq	4168d0 <_obstack_memory_used@@Base+0x4a4c>  // b.none
  416844:	cmn	w23, #0x1
  416848:	b.eq	4168d0 <_obstack_memory_used@@Base+0x4a4c>  // b.none
  41684c:	tbz	w22, #16, 416858 <_obstack_memory_used@@Base+0x49d4>
  416850:	cmp	w24, w23
  416854:	b.hi	4168f8 <_obstack_memory_used@@Base+0x4a74>  // b.pmore
  416858:	cbz	x20, 41688c <_obstack_memory_used@@Base+0x4a08>
  41685c:	ldr	x9, [x21]
  416860:	ldr	x8, [x20, #64]
  416864:	cmp	x9, x8
  416868:	b.eq	416904 <_obstack_memory_used@@Base+0x4a80>  // b.none
  41686c:	ldr	x8, [x20, #64]
  416870:	ldr	x9, [x20, #8]
  416874:	lsl	x10, x8, #2
  416878:	str	w24, [x9, x10]
  41687c:	ldr	x9, [x20, #16]
  416880:	add	x8, x8, #0x1
  416884:	str	x8, [x20, #64]
  416888:	str	w23, [x9, x10]
  41688c:	mov	x20, xzr
  416890:	mov	w21, w23
  416894:	mov	w22, w24
  416898:	b	4168a8 <_obstack_memory_used@@Base+0x4a24>
  41689c:	add	x20, x20, #0x1
  4168a0:	cmp	x20, #0x100
  4168a4:	b.eq	4168c8 <_obstack_memory_used@@Base+0x4a44>  // b.none
  4168a8:	cmp	x20, x22
  4168ac:	b.cc	41689c <_obstack_memory_used@@Base+0x4a18>  // b.lo, b.ul, b.last
  4168b0:	cmp	x20, x21
  4168b4:	b.hi	41689c <_obstack_memory_used@@Base+0x4a18>  // b.pmore
  4168b8:	mov	x0, x19
  4168bc:	mov	x1, x20
  4168c0:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  4168c4:	b	41689c <_obstack_memory_used@@Base+0x4a18>
  4168c8:	mov	w8, wzr
  4168cc:	mov	w9, #0xc                   	// #12
  4168d0:	cmp	w8, #0x0
  4168d4:	csel	w0, wzr, w9, eq  // eq = none
  4168d8:	ldp	x20, x19, [sp, #64]
  4168dc:	ldp	x22, x21, [sp, #48]
  4168e0:	ldp	x24, x23, [sp, #32]
  4168e4:	ldp	x26, x25, [sp, #16]
  4168e8:	ldp	x29, x30, [sp], #80
  4168ec:	ret
  4168f0:	mov	w0, #0x3                   	// #3
  4168f4:	b	4168d8 <_obstack_memory_used@@Base+0x4a54>
  4168f8:	mov	w9, #0xb                   	// #11
  4168fc:	mov	w8, #0x1                   	// #1
  416900:	b	4168d0 <_obstack_memory_used@@Base+0x4a4c>
  416904:	ldr	x0, [x20, #8]
  416908:	mov	w26, #0x1                   	// #1
  41690c:	bfi	x26, x8, #1, #63
  416910:	lsl	x25, x26, #2
  416914:	mov	x1, x25
  416918:	bl	402a40 <realloc@plt>
  41691c:	ldr	x8, [x20, #16]
  416920:	mov	x22, x0
  416924:	mov	x1, x25
  416928:	mov	x0, x8
  41692c:	bl	402a40 <realloc@plt>
  416930:	mov	x25, x0
  416934:	cbz	x22, 416950 <_obstack_memory_used@@Base+0x4acc>
  416938:	cbz	x25, 416950 <_obstack_memory_used@@Base+0x4acc>
  41693c:	mov	w8, wzr
  416940:	stp	x22, x25, [x20, #8]
  416944:	str	x26, [x21]
  416948:	cbnz	w8, 4168cc <_obstack_memory_used@@Base+0x4a48>
  41694c:	b	41686c <_obstack_memory_used@@Base+0x49e8>
  416950:	mov	x0, x22
  416954:	bl	402bd0 <free@plt>
  416958:	mov	x0, x25
  41695c:	bl	402bd0 <free@plt>
  416960:	mov	w8, #0x1                   	// #1
  416964:	cbnz	w8, 4168cc <_obstack_memory_used@@Base+0x4a48>
  416968:	b	41686c <_obstack_memory_used@@Base+0x49e8>
  41696c:	stp	x29, x30, [sp, #-32]!
  416970:	stp	x20, x19, [sp, #16]
  416974:	mov	x19, x0
  416978:	mov	x0, x1
  41697c:	mov	x29, sp
  416980:	mov	x20, x1
  416984:	bl	402750 <strlen@plt>
  416988:	cmp	x0, #0x1
  41698c:	b.ne	4169ac <_obstack_memory_used@@Base+0x4b28>  // b.any
  416990:	ldrb	w1, [x20]
  416994:	mov	x0, x19
  416998:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  41699c:	mov	w0, wzr
  4169a0:	ldp	x20, x19, [sp, #16]
  4169a4:	ldp	x29, x30, [sp], #32
  4169a8:	ret
  4169ac:	mov	w0, #0x3                   	// #3
  4169b0:	b	4169a0 <_obstack_memory_used@@Base+0x4b1c>
  4169b4:	stp	x29, x30, [sp, #-32]!
  4169b8:	stp	x20, x19, [sp, #16]
  4169bc:	mov	x19, x0
  4169c0:	mov	x0, x1
  4169c4:	mov	x29, sp
  4169c8:	mov	x20, x1
  4169cc:	bl	402750 <strlen@plt>
  4169d0:	cmp	x0, #0x1
  4169d4:	b.ne	4169f4 <_obstack_memory_used@@Base+0x4b70>  // b.any
  4169d8:	ldrb	w1, [x20]
  4169dc:	mov	x0, x19
  4169e0:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  4169e4:	mov	w0, wzr
  4169e8:	ldp	x20, x19, [sp, #16]
  4169ec:	ldp	x29, x30, [sp], #32
  4169f0:	ret
  4169f4:	mov	w0, #0x3                   	// #3
  4169f8:	b	4169e8 <_obstack_memory_used@@Base+0x4b64>
  4169fc:	stp	x29, x30, [sp, #-64]!
  416a00:	stp	x24, x23, [sp, #16]
  416a04:	stp	x22, x21, [sp, #32]
  416a08:	stp	x20, x19, [sp, #48]
  416a0c:	mov	x21, x4
  416a10:	mov	x23, x3
  416a14:	mov	x22, x2
  416a18:	mov	x19, x1
  416a1c:	mov	x20, x0
  416a20:	mov	x29, sp
  416a24:	tbz	w5, #22, 416a58 <_obstack_memory_used@@Base+0x4bd4>
  416a28:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416a2c:	add	x1, x1, #0xd6e
  416a30:	mov	x0, x21
  416a34:	bl	402ba0 <strcmp@plt>
  416a38:	cbz	w0, 416a50 <_obstack_memory_used@@Base+0x4bcc>
  416a3c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416a40:	add	x1, x1, #0xd74
  416a44:	mov	x0, x21
  416a48:	bl	402ba0 <strcmp@plt>
  416a4c:	cbnz	w0, 416a58 <_obstack_memory_used@@Base+0x4bd4>
  416a50:	adrp	x21, 420000 <_obstack_memory_used@@Base+0xe17c>
  416a54:	add	x21, x21, #0xd7a
  416a58:	ldr	x9, [x23]
  416a5c:	ldr	x8, [x22, #72]
  416a60:	cmp	x9, x8
  416a64:	b.eq	416f84 <_obstack_memory_used@@Base+0x5100>  // b.none
  416a68:	mov	x0, x21
  416a6c:	bl	4027b0 <wctype@plt>
  416a70:	ldr	x8, [x22, #72]
  416a74:	ldr	x9, [x22, #24]
  416a78:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416a7c:	add	x1, x1, #0xded
  416a80:	add	x10, x8, #0x1
  416a84:	str	x10, [x22, #72]
  416a88:	str	x0, [x9, x8, lsl #3]
  416a8c:	mov	x0, x21
  416a90:	bl	402ba0 <strcmp@plt>
  416a94:	cbz	w0, 416b7c <_obstack_memory_used@@Base+0x4cf8>
  416a98:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416a9c:	add	x1, x1, #0xdff
  416aa0:	mov	x0, x21
  416aa4:	bl	402ba0 <strcmp@plt>
  416aa8:	cbz	w0, 416bb8 <_obstack_memory_used@@Base+0x4d34>
  416aac:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416ab0:	add	x1, x1, #0xd74
  416ab4:	mov	x0, x21
  416ab8:	bl	402ba0 <strcmp@plt>
  416abc:	cbz	w0, 416bf4 <_obstack_memory_used@@Base+0x4d70>
  416ac0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416ac4:	add	x1, x1, #0xde1
  416ac8:	mov	x0, x21
  416acc:	bl	402ba0 <strcmp@plt>
  416ad0:	cbz	w0, 416c30 <_obstack_memory_used@@Base+0x4dac>
  416ad4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416ad8:	add	x1, x1, #0xd7a
  416adc:	mov	x0, x21
  416ae0:	bl	402ba0 <strcmp@plt>
  416ae4:	cbz	w0, 416c6c <_obstack_memory_used@@Base+0x4de8>
  416ae8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416aec:	add	x1, x1, #0xddb
  416af0:	mov	x0, x21
  416af4:	bl	402ba0 <strcmp@plt>
  416af8:	cbz	w0, 416ca8 <_obstack_memory_used@@Base+0x4e24>
  416afc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416b00:	add	x1, x1, #0xdf3
  416b04:	mov	x0, x21
  416b08:	bl	402ba0 <strcmp@plt>
  416b0c:	cbz	w0, 416cfc <_obstack_memory_used@@Base+0x4e78>
  416b10:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416b14:	add	x1, x1, #0xd6e
  416b18:	mov	x0, x21
  416b1c:	bl	402ba0 <strcmp@plt>
  416b20:	cbz	w0, 416d3c <_obstack_memory_used@@Base+0x4eb8>
  416b24:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416b28:	add	x1, x1, #0xe05
  416b2c:	mov	x0, x21
  416b30:	bl	402ba0 <strcmp@plt>
  416b34:	cbz	w0, 416d7c <_obstack_memory_used@@Base+0x4ef8>
  416b38:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416b3c:	add	x1, x1, #0xdf9
  416b40:	mov	x0, x21
  416b44:	bl	402ba0 <strcmp@plt>
  416b48:	cbz	w0, 416de8 <_obstack_memory_used@@Base+0x4f64>
  416b4c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416b50:	add	x1, x1, #0xde7
  416b54:	mov	x0, x21
  416b58:	bl	402ba0 <strcmp@plt>
  416b5c:	cbz	w0, 416e54 <_obstack_memory_used@@Base+0x4fd0>
  416b60:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xe17c>
  416b64:	add	x1, x1, #0xdda
  416b68:	mov	x0, x21
  416b6c:	bl	402ba0 <strcmp@plt>
  416b70:	cbz	w0, 416ec0 <_obstack_memory_used@@Base+0x503c>
  416b74:	mov	w0, #0x4                   	// #4
  416b78:	b	416ce8 <_obstack_memory_used@@Base+0x4e64>
  416b7c:	bl	402bb0 <__ctype_b_loc@plt>
  416b80:	mov	x21, x0
  416b84:	cbz	x20, 416b9c <_obstack_memory_used@@Base+0x4d18>
  416b88:	mov	x22, xzr
  416b8c:	b	416dcc <_obstack_memory_used@@Base+0x4f48>
  416b90:	add	x20, x20, #0x1
  416b94:	cmp	x20, #0x100
  416b98:	b.eq	416ce4 <_obstack_memory_used@@Base+0x4e60>  // b.none
  416b9c:	ldr	x8, [x21]
  416ba0:	ldrh	w8, [x8, x20, lsl #1]
  416ba4:	tbz	w8, #3, 416b90 <_obstack_memory_used@@Base+0x4d0c>
  416ba8:	mov	x0, x19
  416bac:	mov	x1, x20
  416bb0:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416bb4:	b	416b90 <_obstack_memory_used@@Base+0x4d0c>
  416bb8:	bl	402bb0 <__ctype_b_loc@plt>
  416bbc:	mov	x21, x0
  416bc0:	cbz	x20, 416bd8 <_obstack_memory_used@@Base+0x4d54>
  416bc4:	mov	x22, xzr
  416bc8:	b	416e38 <_obstack_memory_used@@Base+0x4fb4>
  416bcc:	add	x20, x20, #0x1
  416bd0:	cmp	x20, #0x100
  416bd4:	b.eq	416ce4 <_obstack_memory_used@@Base+0x4e60>  // b.none
  416bd8:	ldr	x8, [x21]
  416bdc:	ldrh	w8, [x8, x20, lsl #1]
  416be0:	tbz	w8, #1, 416bcc <_obstack_memory_used@@Base+0x4d48>
  416be4:	mov	x0, x19
  416be8:	mov	x1, x20
  416bec:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416bf0:	b	416bcc <_obstack_memory_used@@Base+0x4d48>
  416bf4:	bl	402bb0 <__ctype_b_loc@plt>
  416bf8:	mov	x21, x0
  416bfc:	cbz	x20, 416c14 <_obstack_memory_used@@Base+0x4d90>
  416c00:	mov	x22, xzr
  416c04:	b	416ea4 <_obstack_memory_used@@Base+0x5020>
  416c08:	add	x20, x20, #0x1
  416c0c:	cmp	x20, #0x100
  416c10:	b.eq	416ce4 <_obstack_memory_used@@Base+0x4e60>  // b.none
  416c14:	ldr	x8, [x21]
  416c18:	ldrh	w8, [x8, x20, lsl #1]
  416c1c:	tbz	w8, #9, 416c08 <_obstack_memory_used@@Base+0x4d84>
  416c20:	mov	x0, x19
  416c24:	mov	x1, x20
  416c28:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416c2c:	b	416c08 <_obstack_memory_used@@Base+0x4d84>
  416c30:	bl	402bb0 <__ctype_b_loc@plt>
  416c34:	mov	x21, x0
  416c38:	cbz	x20, 416c50 <_obstack_memory_used@@Base+0x4dcc>
  416c3c:	mov	x22, xzr
  416c40:	b	416f10 <_obstack_memory_used@@Base+0x508c>
  416c44:	add	x20, x20, #0x1
  416c48:	cmp	x20, #0x100
  416c4c:	b.eq	416ce4 <_obstack_memory_used@@Base+0x4e60>  // b.none
  416c50:	ldr	x8, [x21]
  416c54:	ldrh	w8, [x8, x20, lsl #1]
  416c58:	tbz	w8, #13, 416c44 <_obstack_memory_used@@Base+0x4dc0>
  416c5c:	mov	x0, x19
  416c60:	mov	x1, x20
  416c64:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416c68:	b	416c44 <_obstack_memory_used@@Base+0x4dc0>
  416c6c:	bl	402bb0 <__ctype_b_loc@plt>
  416c70:	mov	x21, x0
  416c74:	cbz	x20, 416c8c <_obstack_memory_used@@Base+0x4e08>
  416c78:	mov	x22, xzr
  416c7c:	b	416f3c <_obstack_memory_used@@Base+0x50b8>
  416c80:	add	x20, x20, #0x1
  416c84:	cmp	x20, #0x100
  416c88:	b.eq	416ce4 <_obstack_memory_used@@Base+0x4e60>  // b.none
  416c8c:	ldr	x8, [x21]
  416c90:	ldrh	w8, [x8, x20, lsl #1]
  416c94:	tbz	w8, #10, 416c80 <_obstack_memory_used@@Base+0x4dfc>
  416c98:	mov	x0, x19
  416c9c:	mov	x1, x20
  416ca0:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416ca4:	b	416c80 <_obstack_memory_used@@Base+0x4dfc>
  416ca8:	bl	402bb0 <__ctype_b_loc@plt>
  416cac:	mov	x21, x0
  416cb0:	cbz	x20, 416cc8 <_obstack_memory_used@@Base+0x4e44>
  416cb4:	mov	x22, xzr
  416cb8:	b	416f68 <_obstack_memory_used@@Base+0x50e4>
  416cbc:	add	x20, x20, #0x1
  416cc0:	cmp	x20, #0x100
  416cc4:	b.eq	416ce4 <_obstack_memory_used@@Base+0x4e60>  // b.none
  416cc8:	ldr	x8, [x21]
  416ccc:	ldrh	w8, [x8, x20, lsl #1]
  416cd0:	tbz	w8, #11, 416cbc <_obstack_memory_used@@Base+0x4e38>
  416cd4:	mov	x0, x19
  416cd8:	mov	x1, x20
  416cdc:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416ce0:	b	416cbc <_obstack_memory_used@@Base+0x4e38>
  416ce4:	mov	w0, wzr
  416ce8:	ldp	x20, x19, [sp, #48]
  416cec:	ldp	x22, x21, [sp, #32]
  416cf0:	ldp	x24, x23, [sp, #16]
  416cf4:	ldp	x29, x30, [sp], #64
  416cf8:	ret
  416cfc:	bl	402bb0 <__ctype_b_loc@plt>
  416d00:	mov	x21, x0
  416d04:	cbz	x20, 416d20 <_obstack_memory_used@@Base+0x4e9c>
  416d08:	mov	x22, xzr
  416d0c:	b	416fb8 <_obstack_memory_used@@Base+0x5134>
  416d10:	add	x20, x20, #0x1
  416d14:	cmp	x20, #0x100
  416d18:	mov	w0, wzr
  416d1c:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416d20:	ldr	x8, [x21]
  416d24:	ldrh	w8, [x8, x20, lsl #1]
  416d28:	tbz	w8, #14, 416d10 <_obstack_memory_used@@Base+0x4e8c>
  416d2c:	mov	x0, x19
  416d30:	mov	x1, x20
  416d34:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416d38:	b	416d10 <_obstack_memory_used@@Base+0x4e8c>
  416d3c:	bl	402bb0 <__ctype_b_loc@plt>
  416d40:	mov	x21, x0
  416d44:	cbz	x20, 416d60 <_obstack_memory_used@@Base+0x4edc>
  416d48:	mov	x22, xzr
  416d4c:	b	416fe4 <_obstack_memory_used@@Base+0x5160>
  416d50:	add	x20, x20, #0x1
  416d54:	cmp	x20, #0x100
  416d58:	mov	w0, wzr
  416d5c:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416d60:	ldr	x8, [x21]
  416d64:	ldrh	w8, [x8, x20, lsl #1]
  416d68:	tbz	w8, #8, 416d50 <_obstack_memory_used@@Base+0x4ecc>
  416d6c:	mov	x0, x19
  416d70:	mov	x1, x20
  416d74:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416d78:	b	416d50 <_obstack_memory_used@@Base+0x4ecc>
  416d7c:	bl	402bb0 <__ctype_b_loc@plt>
  416d80:	mov	x21, x0
  416d84:	cbz	x20, 416da0 <_obstack_memory_used@@Base+0x4f1c>
  416d88:	mov	x22, xzr
  416d8c:	b	417010 <_obstack_memory_used@@Base+0x518c>
  416d90:	add	x20, x20, #0x1
  416d94:	cmp	x20, #0x100
  416d98:	mov	w0, wzr
  416d9c:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416da0:	ldr	x8, [x21]
  416da4:	ldrh	w8, [x8, x20, lsl #1]
  416da8:	tbz	w8, #0, 416d90 <_obstack_memory_used@@Base+0x4f0c>
  416dac:	mov	x0, x19
  416db0:	mov	x1, x20
  416db4:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416db8:	b	416d90 <_obstack_memory_used@@Base+0x4f0c>
  416dbc:	add	x22, x22, #0x1
  416dc0:	cmp	x22, #0x100
  416dc4:	mov	w0, wzr
  416dc8:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416dcc:	ldr	x8, [x21]
  416dd0:	ldrh	w8, [x8, x22, lsl #1]
  416dd4:	tbz	w8, #3, 416dbc <_obstack_memory_used@@Base+0x4f38>
  416dd8:	ldrb	w1, [x20, x22]
  416ddc:	mov	x0, x19
  416de0:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416de4:	b	416dbc <_obstack_memory_used@@Base+0x4f38>
  416de8:	bl	402bb0 <__ctype_b_loc@plt>
  416dec:	mov	x21, x0
  416df0:	cbz	x20, 416e0c <_obstack_memory_used@@Base+0x4f88>
  416df4:	mov	x22, xzr
  416df8:	b	41703c <_obstack_memory_used@@Base+0x51b8>
  416dfc:	add	x20, x20, #0x1
  416e00:	cmp	x20, #0x100
  416e04:	mov	w0, wzr
  416e08:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416e0c:	ldr	x8, [x21]
  416e10:	ldrsh	w8, [x8, x20, lsl #1]
  416e14:	tbz	w8, #31, 416dfc <_obstack_memory_used@@Base+0x4f78>
  416e18:	mov	x0, x19
  416e1c:	mov	x1, x20
  416e20:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416e24:	b	416dfc <_obstack_memory_used@@Base+0x4f78>
  416e28:	add	x22, x22, #0x1
  416e2c:	cmp	x22, #0x100
  416e30:	mov	w0, wzr
  416e34:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416e38:	ldr	x8, [x21]
  416e3c:	ldrh	w8, [x8, x22, lsl #1]
  416e40:	tbz	w8, #1, 416e28 <_obstack_memory_used@@Base+0x4fa4>
  416e44:	ldrb	w1, [x20, x22]
  416e48:	mov	x0, x19
  416e4c:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416e50:	b	416e28 <_obstack_memory_used@@Base+0x4fa4>
  416e54:	bl	402bb0 <__ctype_b_loc@plt>
  416e58:	mov	x21, x0
  416e5c:	cbz	x20, 416e78 <_obstack_memory_used@@Base+0x4ff4>
  416e60:	mov	x22, xzr
  416e64:	b	417068 <_obstack_memory_used@@Base+0x51e4>
  416e68:	add	x20, x20, #0x1
  416e6c:	cmp	x20, #0x100
  416e70:	mov	w0, wzr
  416e74:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416e78:	ldr	x8, [x21]
  416e7c:	ldrh	w8, [x8, x20, lsl #1]
  416e80:	tbz	w8, #2, 416e68 <_obstack_memory_used@@Base+0x4fe4>
  416e84:	mov	x0, x19
  416e88:	mov	x1, x20
  416e8c:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416e90:	b	416e68 <_obstack_memory_used@@Base+0x4fe4>
  416e94:	add	x22, x22, #0x1
  416e98:	cmp	x22, #0x100
  416e9c:	mov	w0, wzr
  416ea0:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416ea4:	ldr	x8, [x21]
  416ea8:	ldrh	w8, [x8, x22, lsl #1]
  416eac:	tbz	w8, #9, 416e94 <_obstack_memory_used@@Base+0x5010>
  416eb0:	ldrb	w1, [x20, x22]
  416eb4:	mov	x0, x19
  416eb8:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416ebc:	b	416e94 <_obstack_memory_used@@Base+0x5010>
  416ec0:	bl	402bb0 <__ctype_b_loc@plt>
  416ec4:	mov	x21, x0
  416ec8:	cbz	x20, 416ee4 <_obstack_memory_used@@Base+0x5060>
  416ecc:	mov	x22, xzr
  416ed0:	b	417094 <_obstack_memory_used@@Base+0x5210>
  416ed4:	add	x20, x20, #0x1
  416ed8:	cmp	x20, #0x100
  416edc:	mov	w0, wzr
  416ee0:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416ee4:	ldr	x8, [x21]
  416ee8:	ldrh	w8, [x8, x20, lsl #1]
  416eec:	tbz	w8, #12, 416ed4 <_obstack_memory_used@@Base+0x5050>
  416ef0:	mov	x0, x19
  416ef4:	mov	x1, x20
  416ef8:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416efc:	b	416ed4 <_obstack_memory_used@@Base+0x5050>
  416f00:	add	x22, x22, #0x1
  416f04:	cmp	x22, #0x100
  416f08:	mov	w0, wzr
  416f0c:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416f10:	ldr	x8, [x21]
  416f14:	ldrh	w8, [x8, x22, lsl #1]
  416f18:	tbz	w8, #13, 416f00 <_obstack_memory_used@@Base+0x507c>
  416f1c:	ldrb	w1, [x20, x22]
  416f20:	mov	x0, x19
  416f24:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416f28:	b	416f00 <_obstack_memory_used@@Base+0x507c>
  416f2c:	add	x22, x22, #0x1
  416f30:	cmp	x22, #0x100
  416f34:	mov	w0, wzr
  416f38:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416f3c:	ldr	x8, [x21]
  416f40:	ldrh	w8, [x8, x22, lsl #1]
  416f44:	tbz	w8, #10, 416f2c <_obstack_memory_used@@Base+0x50a8>
  416f48:	ldrb	w1, [x20, x22]
  416f4c:	mov	x0, x19
  416f50:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416f54:	b	416f2c <_obstack_memory_used@@Base+0x50a8>
  416f58:	add	x22, x22, #0x1
  416f5c:	cmp	x22, #0x100
  416f60:	mov	w0, wzr
  416f64:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416f68:	ldr	x8, [x21]
  416f6c:	ldrh	w8, [x8, x22, lsl #1]
  416f70:	tbz	w8, #11, 416f58 <_obstack_memory_used@@Base+0x50d4>
  416f74:	ldrb	w1, [x20, x22]
  416f78:	mov	x0, x19
  416f7c:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416f80:	b	416f58 <_obstack_memory_used@@Base+0x50d4>
  416f84:	ldr	x0, [x22, #24]
  416f88:	mov	w24, #0x1                   	// #1
  416f8c:	bfi	x24, x8, #1, #63
  416f90:	lsl	x1, x24, #3
  416f94:	bl	402a40 <realloc@plt>
  416f98:	cbz	x0, 4170b0 <_obstack_memory_used@@Base+0x522c>
  416f9c:	str	x0, [x22, #24]
  416fa0:	str	x24, [x23]
  416fa4:	b	416a68 <_obstack_memory_used@@Base+0x4be4>
  416fa8:	add	x22, x22, #0x1
  416fac:	cmp	x22, #0x100
  416fb0:	mov	w0, wzr
  416fb4:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416fb8:	ldr	x8, [x21]
  416fbc:	ldrh	w8, [x8, x22, lsl #1]
  416fc0:	tbz	w8, #14, 416fa8 <_obstack_memory_used@@Base+0x5124>
  416fc4:	ldrb	w1, [x20, x22]
  416fc8:	mov	x0, x19
  416fcc:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416fd0:	b	416fa8 <_obstack_memory_used@@Base+0x5124>
  416fd4:	add	x22, x22, #0x1
  416fd8:	cmp	x22, #0x100
  416fdc:	mov	w0, wzr
  416fe0:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  416fe4:	ldr	x8, [x21]
  416fe8:	ldrh	w8, [x8, x22, lsl #1]
  416fec:	tbz	w8, #8, 416fd4 <_obstack_memory_used@@Base+0x5150>
  416ff0:	ldrb	w1, [x20, x22]
  416ff4:	mov	x0, x19
  416ff8:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  416ffc:	b	416fd4 <_obstack_memory_used@@Base+0x5150>
  417000:	add	x22, x22, #0x1
  417004:	cmp	x22, #0x100
  417008:	mov	w0, wzr
  41700c:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  417010:	ldr	x8, [x21]
  417014:	ldrh	w8, [x8, x22, lsl #1]
  417018:	tbz	w8, #0, 417000 <_obstack_memory_used@@Base+0x517c>
  41701c:	ldrb	w1, [x20, x22]
  417020:	mov	x0, x19
  417024:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  417028:	b	417000 <_obstack_memory_used@@Base+0x517c>
  41702c:	add	x22, x22, #0x1
  417030:	cmp	x22, #0x100
  417034:	mov	w0, wzr
  417038:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  41703c:	ldr	x8, [x21]
  417040:	ldrsh	w8, [x8, x22, lsl #1]
  417044:	tbz	w8, #31, 41702c <_obstack_memory_used@@Base+0x51a8>
  417048:	ldrb	w1, [x20, x22]
  41704c:	mov	x0, x19
  417050:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  417054:	b	41702c <_obstack_memory_used@@Base+0x51a8>
  417058:	add	x22, x22, #0x1
  41705c:	cmp	x22, #0x100
  417060:	mov	w0, wzr
  417064:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  417068:	ldr	x8, [x21]
  41706c:	ldrh	w8, [x8, x22, lsl #1]
  417070:	tbz	w8, #2, 417058 <_obstack_memory_used@@Base+0x51d4>
  417074:	ldrb	w1, [x20, x22]
  417078:	mov	x0, x19
  41707c:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  417080:	b	417058 <_obstack_memory_used@@Base+0x51d4>
  417084:	add	x22, x22, #0x1
  417088:	cmp	x22, #0x100
  41708c:	mov	w0, wzr
  417090:	b.eq	416ce8 <_obstack_memory_used@@Base+0x4e64>  // b.none
  417094:	ldr	x8, [x21]
  417098:	ldrh	w8, [x8, x22, lsl #1]
  41709c:	tbz	w8, #12, 417084 <_obstack_memory_used@@Base+0x5200>
  4170a0:	ldrb	w1, [x20, x22]
  4170a4:	mov	x0, x19
  4170a8:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  4170ac:	b	417084 <_obstack_memory_used@@Base+0x5200>
  4170b0:	mov	w0, #0xc                   	// #12
  4170b4:	b	416ce8 <_obstack_memory_used@@Base+0x4e64>
  4170b8:	mov	x8, xzr
  4170bc:	ldr	x9, [x0, x8]
  4170c0:	mvn	x9, x9
  4170c4:	str	x9, [x0, x8]
  4170c8:	add	x8, x8, #0x8
  4170cc:	cmp	x8, #0x20
  4170d0:	b.ne	4170bc <_obstack_memory_used@@Base+0x5238>  // b.any
  4170d4:	ret
  4170d8:	mov	x8, xzr
  4170dc:	ldr	x9, [x1, x8]
  4170e0:	ldr	x10, [x0, x8]
  4170e4:	and	x9, x10, x9
  4170e8:	str	x9, [x0, x8]
  4170ec:	add	x8, x8, #0x8
  4170f0:	cmp	x8, #0x20
  4170f4:	b.ne	4170dc <_obstack_memory_used@@Base+0x5258>  // b.any
  4170f8:	ret
  4170fc:	ldr	w9, [x0, #144]
  417100:	cmp	w9, #0x1
  417104:	b.eq	41714c <_obstack_memory_used@@Base+0x52c8>  // b.none
  417108:	ldr	x9, [x0, #48]
  41710c:	add	x10, x1, #0x1
  417110:	mov	x8, x0
  417114:	cmp	x10, x9
  417118:	b.ge	41714c <_obstack_memory_used@@Base+0x52c8>  // b.tcont
  41711c:	ldr	x9, [x8, #16]
  417120:	mov	w0, #0x1                   	// #1
  417124:	add	x9, x9, x1, lsl #2
  417128:	ldr	w10, [x9, x0, lsl #2]
  41712c:	cmn	w10, #0x1
  417130:	b.ne	417148 <_obstack_memory_used@@Base+0x52c4>  // b.any
  417134:	ldr	x10, [x8, #48]
  417138:	add	x0, x0, #0x1
  41713c:	add	x11, x1, x0
  417140:	cmp	x11, x10
  417144:	b.lt	417128 <_obstack_memory_used@@Base+0x52a4>  // b.tstop
  417148:	ret
  41714c:	mov	w0, #0x1                   	// #1
  417150:	ret
  417154:	stp	x29, x30, [sp, #-64]!
  417158:	stp	x22, x21, [sp, #32]
  41715c:	stp	x20, x19, [sp, #48]
  417160:	ldr	x8, [x1, #104]
  417164:	ldr	x9, [x1, #72]
  417168:	str	x23, [sp, #16]
  41716c:	mov	x29, sp
  417170:	cmp	x8, x9
  417174:	b.le	417234 <_obstack_memory_used@@Base+0x53b0>
  417178:	ldrb	w23, [x2]
  41717c:	mov	x20, x2
  417180:	mov	x21, x1
  417184:	mov	x19, x0
  417188:	mov	x22, xzr
  41718c:	b	4171a4 <_obstack_memory_used@@Base+0x5320>
  417190:	ldr	x8, [x19, #8]
  417194:	strb	w0, [x8, x22]
  417198:	add	x22, x22, #0x1
  41719c:	cmp	x22, #0x20
  4171a0:	b.eq	417234 <_obstack_memory_used@@Base+0x53b0>  // b.none
  4171a4:	ldrb	w8, [x20, #8]
  4171a8:	cmp	w8, #0x1e
  4171ac:	b.ne	4171bc <_obstack_memory_used@@Base+0x5338>  // b.any
  4171b0:	mov	x0, x21
  4171b4:	bl	417268 <_obstack_memory_used@@Base+0x53e4>
  4171b8:	b	4171d0 <_obstack_memory_used@@Base+0x534c>
  4171bc:	ldr	x8, [x21, #72]
  4171c0:	ldr	x9, [x21, #8]
  4171c4:	add	x10, x8, #0x1
  4171c8:	str	x10, [x21, #72]
  4171cc:	ldrb	w0, [x9, x8]
  4171d0:	ldr	x9, [x21, #104]
  4171d4:	ldr	x8, [x21, #72]
  4171d8:	cmp	x9, x8
  4171dc:	b.le	417234 <_obstack_memory_used@@Base+0x53b0>
  4171e0:	cmp	w23, w0, uxtb
  4171e4:	b.ne	417190 <_obstack_memory_used@@Base+0x530c>  // b.any
  4171e8:	ldr	x9, [x21, #8]
  4171ec:	ldrb	w9, [x9, x8]
  4171f0:	cmp	w9, #0x5d
  4171f4:	b.ne	417190 <_obstack_memory_used@@Base+0x530c>  // b.any
  4171f8:	add	x8, x8, #0x1
  4171fc:	str	x8, [x21, #72]
  417200:	ldr	x8, [x19, #8]
  417204:	strb	wzr, [x8, x22]
  417208:	ldrb	w8, [x20, #8]
  41720c:	cmp	w8, #0x1e
  417210:	b.eq	41724c <_obstack_memory_used@@Base+0x53c8>  // b.none
  417214:	cmp	w8, #0x1c
  417218:	b.eq	417258 <_obstack_memory_used@@Base+0x53d4>  // b.none
  41721c:	cmp	w8, #0x1a
  417220:	mov	w0, wzr
  417224:	b.ne	417238 <_obstack_memory_used@@Base+0x53b4>  // b.any
  417228:	mov	w0, wzr
  41722c:	mov	w8, #0x3                   	// #3
  417230:	b	417260 <_obstack_memory_used@@Base+0x53dc>
  417234:	mov	w0, #0x7                   	// #7
  417238:	ldp	x20, x19, [sp, #48]
  41723c:	ldp	x22, x21, [sp, #32]
  417240:	ldr	x23, [sp, #16]
  417244:	ldp	x29, x30, [sp], #64
  417248:	ret
  41724c:	mov	w0, wzr
  417250:	mov	w8, #0x4                   	// #4
  417254:	b	417260 <_obstack_memory_used@@Base+0x53dc>
  417258:	mov	w0, wzr
  41725c:	mov	w8, #0x2                   	// #2
  417260:	str	w8, [x19]
  417264:	b	417238 <_obstack_memory_used@@Base+0x53b4>
  417268:	stp	x29, x30, [sp, #-48]!
  41726c:	stp	x20, x19, [sp, #32]
  417270:	ldrb	w8, [x0, #139]
  417274:	str	x21, [sp, #16]
  417278:	mov	x29, sp
  41727c:	cbnz	w8, 4172a8 <_obstack_memory_used@@Base+0x5424>
  417280:	ldr	x8, [x0, #72]
  417284:	ldr	x9, [x0, #8]
  417288:	add	x10, x8, #0x1
  41728c:	str	x10, [x0, #72]
  417290:	ldrb	w19, [x9, x8]
  417294:	mov	w0, w19
  417298:	ldp	x20, x19, [sp, #32]
  41729c:	ldr	x21, [sp, #16]
  4172a0:	ldp	x29, x30, [sp], #48
  4172a4:	ret
  4172a8:	ldrb	w8, [x0, #140]
  4172ac:	cbz	w8, 417304 <_obstack_memory_used@@Base+0x5480>
  4172b0:	ldr	x21, [x0, #72]
  4172b4:	ldr	x8, [x0, #48]
  4172b8:	cmp	x21, x8
  4172bc:	b.eq	4172d0 <_obstack_memory_used@@Base+0x544c>  // b.none
  4172c0:	ldr	x8, [x0, #16]
  4172c4:	ldr	w8, [x8, x21, lsl #2]
  4172c8:	cmn	w8, #0x1
  4172cc:	b.eq	417324 <_obstack_memory_used@@Base+0x54a0>  // b.none
  4172d0:	ldr	x8, [x0, #24]
  4172d4:	ldr	x9, [x0, #40]
  4172d8:	ldr	x10, [x0]
  4172dc:	ldr	x8, [x8, x21, lsl #3]
  4172e0:	add	x8, x9, x8
  4172e4:	ldrsb	w19, [x10, x8]
  4172e8:	tbnz	w19, #31, 417324 <_obstack_memory_used@@Base+0x54a0>
  4172ec:	mov	x1, x21
  4172f0:	mov	x20, x0
  4172f4:	bl	4170fc <_obstack_memory_used@@Base+0x5278>
  4172f8:	add	x8, x21, w0, sxtw
  4172fc:	str	x8, [x20, #72]
  417300:	b	417294 <_obstack_memory_used@@Base+0x5410>
  417304:	ldr	x8, [x0, #72]
  417308:	ldr	x9, [x0, #40]
  41730c:	ldr	x10, [x0]
  417310:	add	x11, x8, #0x1
  417314:	str	x11, [x0, #72]
  417318:	add	x8, x8, x9
  41731c:	ldrb	w19, [x10, x8]
  417320:	b	417294 <_obstack_memory_used@@Base+0x5410>
  417324:	ldr	x8, [x0, #8]
  417328:	add	x9, x21, #0x1
  41732c:	str	x9, [x0, #72]
  417330:	ldrb	w19, [x8, x21]
  417334:	b	417294 <_obstack_memory_used@@Base+0x5410>
  417338:	and	w0, w0, #0xff
  41733c:	cbz	x1, 417350 <_obstack_memory_used@@Base+0x54cc>
  417340:	stp	x29, x30, [sp, #-16]!
  417344:	mov	x29, sp
  417348:	bl	402af0 <btowc@plt>
  41734c:	ldp	x29, x30, [sp], #16
  417350:	ret
  417354:	stp	x29, x30, [sp, #-80]!
  417358:	str	x25, [sp, #16]
  41735c:	stp	x24, x23, [sp, #32]
  417360:	stp	x22, x21, [sp, #48]
  417364:	stp	x20, x19, [sp, #64]
  417368:	mov	x19, x2
  41736c:	mov	x20, x1
  417370:	mov	x21, x0
  417374:	mov	x9, #0xffffffffffffffff    	// #-1
  417378:	mov	w23, #0xa                   	// #10
  41737c:	mov	w24, #0x8030                	// #32816
  417380:	mov	w25, #0x8000                	// #32768
  417384:	mov	x29, sp
  417388:	mov	x0, x20
  41738c:	mov	x1, x21
  417390:	mov	x2, x19
  417394:	mov	x22, x9
  417398:	bl	4148cc <_obstack_memory_used@@Base+0x2a48>
  41739c:	ldrb	w10, [x20, #8]
  4173a0:	cmp	w10, #0x18
  4173a4:	b.eq	41740c <_obstack_memory_used@@Base+0x5588>  // b.none
  4173a8:	cmp	w10, #0x2
  4173ac:	b.eq	417408 <_obstack_memory_used@@Base+0x5584>  // b.none
  4173b0:	ldrb	w8, [x20]
  4173b4:	cmp	w8, #0x2c
  4173b8:	b.eq	41740c <_obstack_memory_used@@Base+0x5588>  // b.none
  4173bc:	cmp	w8, #0x30
  4173c0:	mov	x9, #0xfffffffffffffffe    	// #-2
  4173c4:	b.cc	417388 <_obstack_memory_used@@Base+0x5504>  // b.lo, b.ul, b.last
  4173c8:	cmp	w10, #0x1
  4173cc:	b.ne	417388 <_obstack_memory_used@@Base+0x5504>  // b.any
  4173d0:	cmn	x22, #0x2
  4173d4:	mov	x9, #0xfffffffffffffffe    	// #-2
  4173d8:	b.eq	417388 <_obstack_memory_used@@Base+0x5504>  // b.none
  4173dc:	cmp	w8, #0x39
  4173e0:	b.hi	417388 <_obstack_memory_used@@Base+0x5504>  // b.pmore
  4173e4:	cmn	x22, #0x1
  4173e8:	b.eq	417400 <_obstack_memory_used@@Base+0x557c>  // b.none
  4173ec:	madd	x8, x22, x23, x8
  4173f0:	sub	x9, x8, #0x30
  4173f4:	cmp	x8, x24
  4173f8:	csel	x9, x25, x9, gt
  4173fc:	b	417388 <_obstack_memory_used@@Base+0x5504>
  417400:	sub	x9, x8, #0x30
  417404:	b	417388 <_obstack_memory_used@@Base+0x5504>
  417408:	mov	x22, #0xfffffffffffffffe    	// #-2
  41740c:	mov	x0, x22
  417410:	ldp	x20, x19, [sp, #64]
  417414:	ldp	x22, x21, [sp, #48]
  417418:	ldp	x24, x23, [sp, #32]
  41741c:	ldr	x25, [sp, #16]
  417420:	ldp	x29, x30, [sp], #80
  417424:	ret
  417428:	stp	x29, x30, [sp, #-64]!
  41742c:	str	x23, [sp, #16]
  417430:	stp	x22, x21, [sp, #32]
  417434:	stp	x20, x19, [sp, #48]
  417438:	mov	x3, x0
  41743c:	ldr	x22, [x3], #40
  417440:	mov	x20, x0
  417444:	mov	x19, x1
  417448:	mov	x0, x1
  41744c:	mov	x1, xzr
  417450:	mov	x2, xzr
  417454:	mov	x29, sp
  417458:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  41745c:	str	x0, [x29, #24]
  417460:	cbz	x0, 4174f4 <_obstack_memory_used@@Base+0x5670>
  417464:	add	x23, x29, #0x18
  417468:	b	41747c <_obstack_memory_used@@Base+0x55f8>
  41746c:	ldr	x21, [x29, #24]
  417470:	mov	w8, wzr
  417474:	cbnz	w8, 4174d8 <_obstack_memory_used@@Base+0x5654>
  417478:	b	4174f8 <_obstack_memory_used@@Base+0x5674>
  41747c:	str	x22, [x0]
  417480:	ldr	x8, [x23]
  417484:	ldr	w9, [x8, #48]
  417488:	orr	w9, w9, #0x40000
  41748c:	str	w9, [x8, #48]
  417490:	ldr	x8, [x20, #8]
  417494:	ldr	x22, [x23]
  417498:	cbz	x8, 4174b4 <_obstack_memory_used@@Base+0x5630>
  41749c:	add	x23, x22, #0x8
  4174a0:	mov	x20, x8
  4174a4:	b	4174d8 <_obstack_memory_used@@Base+0x5654>
  4174a8:	ldr	x20, [x8]
  4174ac:	ldr	x22, [x22]
  4174b0:	cbz	x20, 41746c <_obstack_memory_used@@Base+0x55e8>
  4174b4:	mov	x9, x8
  4174b8:	mov	x8, x20
  4174bc:	ldr	x20, [x20, #16]
  4174c0:	cmp	x20, x9
  4174c4:	b.eq	4174a8 <_obstack_memory_used@@Base+0x5624>  // b.none
  4174c8:	cbz	x20, 4174a8 <_obstack_memory_used@@Base+0x5624>
  4174cc:	add	x23, x22, #0x10
  4174d0:	mov	w8, #0x1                   	// #1
  4174d4:	cbz	w8, 4174f8 <_obstack_memory_used@@Base+0x5674>
  4174d8:	add	x3, x20, #0x28
  4174dc:	mov	x0, x19
  4174e0:	mov	x1, xzr
  4174e4:	mov	x2, xzr
  4174e8:	bl	415730 <_obstack_memory_used@@Base+0x38ac>
  4174ec:	str	x0, [x23]
  4174f0:	cbnz	x0, 41747c <_obstack_memory_used@@Base+0x55f8>
  4174f4:	mov	x21, xzr
  4174f8:	mov	x0, x21
  4174fc:	ldp	x20, x19, [sp, #48]
  417500:	ldp	x22, x21, [sp, #32]
  417504:	ldr	x23, [sp, #16]
  417508:	ldp	x29, x30, [sp], #64
  41750c:	ret
  417510:	ldr	w8, [x1, #48]
  417514:	and	w9, w8, #0xff
  417518:	cmp	w9, #0x11
  41751c:	b.ne	417534 <_obstack_memory_used@@Base+0x56b0>  // b.any
  417520:	ldr	x9, [x1, #40]
  417524:	cmp	x9, x0
  417528:	b.ne	417534 <_obstack_memory_used@@Base+0x56b0>  // b.any
  41752c:	orr	w8, w8, #0x80000
  417530:	str	w8, [x1, #48]
  417534:	mov	w0, wzr
  417538:	ret
  41753c:	stp	x29, x30, [sp, #-48]!
  417540:	stp	x22, x21, [sp, #16]
  417544:	stp	x20, x19, [sp, #32]
  417548:	mov	x19, x2
  41754c:	mov	x20, x1
  417550:	mov	x22, x0
  417554:	mov	x29, sp
  417558:	b	417568 <_obstack_memory_used@@Base+0x56e4>
  41755c:	mov	w9, wzr
  417560:	mov	x22, x8
  417564:	cbnz	w9, 4175dc <_obstack_memory_used@@Base+0x5758>
  417568:	mov	x0, x19
  41756c:	mov	x1, x22
  417570:	blr	x20
  417574:	cbnz	w0, 4175d0 <_obstack_memory_used@@Base+0x574c>
  417578:	ldr	x8, [x22, #8]
  41757c:	cbnz	x8, 41755c <_obstack_memory_used@@Base+0x56d8>
  417580:	mov	x9, xzr
  417584:	b	417590 <_obstack_memory_used@@Base+0x570c>
  417588:	ldr	x22, [x9]
  41758c:	cbz	x22, 4175b8 <_obstack_memory_used@@Base+0x5734>
  417590:	ldr	x8, [x22, #16]
  417594:	mov	x10, x9
  417598:	mov	x9, x22
  41759c:	cmp	x8, x10
  4175a0:	b.eq	417588 <_obstack_memory_used@@Base+0x5704>  // b.none
  4175a4:	cbz	x8, 417588 <_obstack_memory_used@@Base+0x5704>
  4175a8:	mov	w9, wzr
  4175ac:	mov	x22, x8
  4175b0:	cbnz	w9, 417564 <_obstack_memory_used@@Base+0x56e0>
  4175b4:	b	41755c <_obstack_memory_used@@Base+0x56d8>
  4175b8:	mov	x8, xzr
  4175bc:	mov	w21, wzr
  4175c0:	mov	w9, #0x1                   	// #1
  4175c4:	mov	x22, x8
  4175c8:	cbnz	w9, 417564 <_obstack_memory_used@@Base+0x56e0>
  4175cc:	b	41755c <_obstack_memory_used@@Base+0x56d8>
  4175d0:	mov	w9, #0x1                   	// #1
  4175d4:	mov	w21, w0
  4175d8:	b	417564 <_obstack_memory_used@@Base+0x56e0>
  4175dc:	mov	w0, w21
  4175e0:	ldp	x20, x19, [sp, #32]
  4175e4:	ldp	x22, x21, [sp, #16]
  4175e8:	ldp	x29, x30, [sp], #48
  4175ec:	ret
  4175f0:	ldrb	w8, [x1, #48]
  4175f4:	cmp	w8, #0x11
  4175f8:	b.eq	41763c <_obstack_memory_used@@Base+0x57b8>  // b.none
  4175fc:	cmp	w8, #0x4
  417600:	b.ne	417690 <_obstack_memory_used@@Base+0x580c>  // b.any
  417604:	ldr	x9, [x0, #224]
  417608:	cbz	x9, 417634 <_obstack_memory_used@@Base+0x57b0>
  41760c:	ldr	x8, [x1, #40]
  417610:	mov	w10, #0x1                   	// #1
  417614:	sbfiz	x8, x8, #3, #32
  417618:	ldr	x8, [x9, x8]
  41761c:	str	x8, [x1, #40]
  417620:	ldr	x9, [x0, #160]
  417624:	lsl	w8, w10, w8
  417628:	sxtw	x8, w8
  41762c:	orr	x8, x9, x8
  417630:	b	41768c <_obstack_memory_used@@Base+0x5808>
  417634:	cmp	w8, #0x11
  417638:	b.ne	417690 <_obstack_memory_used@@Base+0x580c>  // b.any
  41763c:	ldr	x8, [x1, #8]
  417640:	cbz	x8, 417690 <_obstack_memory_used@@Base+0x580c>
  417644:	ldrb	w9, [x8, #48]
  417648:	cmp	w9, #0x11
  41764c:	b.ne	417690 <_obstack_memory_used@@Base+0x580c>  // b.any
  417650:	ldr	x9, [x8, #8]
  417654:	ldr	x8, [x8, #40]
  417658:	str	x9, [x1, #8]
  41765c:	cbz	x9, 417664 <_obstack_memory_used@@Base+0x57e0>
  417660:	str	x1, [x9]
  417664:	ldr	x9, [x0, #224]
  417668:	ldr	x10, [x1, #40]
  41766c:	cmp	x8, #0x3f
  417670:	ldr	x10, [x9, x10, lsl #3]
  417674:	str	x10, [x9, x8, lsl #3]
  417678:	b.gt	417690 <_obstack_memory_used@@Base+0x580c>
  41767c:	ldr	x9, [x0, #160]
  417680:	mov	w10, #0x1                   	// #1
  417684:	lsl	x8, x10, x8
  417688:	bic	x8, x9, x8
  41768c:	str	x8, [x0, #160]
  417690:	mov	w0, wzr
  417694:	ret
  417698:	sub	sp, sp, #0x30
  41769c:	stp	x29, x30, [sp, #16]
  4176a0:	add	x29, sp, #0x10
  4176a4:	stp	x20, x19, [sp, #32]
  4176a8:	stur	wzr, [x29, #-4]
  4176ac:	ldr	x2, [x1, #8]
  4176b0:	mov	x19, x1
  4176b4:	mov	x20, x0
  4176b8:	cbz	x2, 4176e0 <_obstack_memory_used@@Base+0x585c>
  4176bc:	ldrb	w8, [x2, #48]
  4176c0:	cmp	w8, #0x11
  4176c4:	b.ne	4176e0 <_obstack_memory_used@@Base+0x585c>  // b.any
  4176c8:	sub	x0, x29, #0x4
  4176cc:	mov	x1, x20
  4176d0:	bl	417b14 <_obstack_memory_used@@Base+0x5c90>
  4176d4:	str	x0, [x19, #8]
  4176d8:	cbz	x0, 4176e0 <_obstack_memory_used@@Base+0x585c>
  4176dc:	str	x19, [x0]
  4176e0:	ldr	x2, [x19, #16]
  4176e4:	cbz	x2, 41770c <_obstack_memory_used@@Base+0x5888>
  4176e8:	ldrb	w8, [x2, #48]
  4176ec:	cmp	w8, #0x11
  4176f0:	b.ne	41770c <_obstack_memory_used@@Base+0x5888>  // b.any
  4176f4:	sub	x0, x29, #0x4
  4176f8:	mov	x1, x20
  4176fc:	bl	417b14 <_obstack_memory_used@@Base+0x5c90>
  417700:	str	x0, [x19, #16]
  417704:	cbz	x0, 41770c <_obstack_memory_used@@Base+0x5888>
  417708:	str	x19, [x0]
  41770c:	ldur	w0, [x29, #-4]
  417710:	ldp	x20, x19, [sp, #32]
  417714:	ldp	x29, x30, [sp, #16]
  417718:	add	sp, sp, #0x30
  41771c:	ret
  417720:	stp	x29, x30, [sp, #-32]!
  417724:	stp	x20, x19, [sp, #16]
  417728:	ldrb	w8, [x1, #48]
  41772c:	mov	x19, x1
  417730:	mov	x29, sp
  417734:	cmp	w8, #0x10
  417738:	b.ne	417758 <_obstack_memory_used@@Base+0x58d4>  // b.any
  41773c:	ldr	x8, [x19, #8]
  417740:	mov	w0, wzr
  417744:	ldr	x9, [x8, #24]
  417748:	str	x9, [x19, #24]
  41774c:	ldr	x8, [x8, #56]
  417750:	str	x8, [x19, #56]
  417754:	b	4177a8 <_obstack_memory_used@@Base+0x5924>
  417758:	ldp	x1, x2, [x19, #40]
  41775c:	mov	x20, x0
  417760:	str	x19, [x19, #24]
  417764:	bl	417c38 <_obstack_memory_used@@Base+0x5db4>
  417768:	cmn	x0, #0x1
  41776c:	str	x0, [x19, #56]
  417770:	b.eq	4177b4 <_obstack_memory_used@@Base+0x5930>  // b.none
  417774:	ldrb	w9, [x19, #48]
  417778:	cmp	w9, #0xc
  41777c:	b.ne	4177a4 <_obstack_memory_used@@Base+0x5920>  // b.any
  417780:	ldr	x9, [x20]
  417784:	mov	x8, x0
  417788:	ldr	w10, [x19, #40]
  41778c:	mov	w0, wzr
  417790:	add	x8, x9, x8, lsl #4
  417794:	ldr	w9, [x8, #8]
  417798:	bfi	w9, w10, #8, #10
  41779c:	str	w9, [x8, #8]
  4177a0:	b	4177a8 <_obstack_memory_used@@Base+0x5924>
  4177a4:	mov	w0, wzr
  4177a8:	ldp	x20, x19, [sp, #16]
  4177ac:	ldp	x29, x30, [sp], #32
  4177b0:	ret
  4177b4:	mov	w0, #0xc                   	// #12
  4177b8:	b	4177a8 <_obstack_memory_used@@Base+0x5924>
  4177bc:	ldrb	w8, [x1, #48]
  4177c0:	cmp	w8, #0x10
  4177c4:	b.eq	4177e0 <_obstack_memory_used@@Base+0x595c>  // b.none
  4177c8:	cmp	w8, #0xb
  4177cc:	b.ne	4177f0 <_obstack_memory_used@@Base+0x596c>  // b.any
  4177d0:	ldr	x8, [x1, #8]
  4177d4:	mov	w0, wzr
  4177d8:	str	x1, [x8, #32]
  4177dc:	ret
  4177e0:	ldp	x9, x8, [x1, #8]
  4177e4:	ldr	x10, [x8, #24]
  4177e8:	str	x10, [x9, #32]
  4177ec:	b	417808 <_obstack_memory_used@@Base+0x5984>
  4177f0:	ldr	x8, [x1, #8]
  4177f4:	cbz	x8, 417800 <_obstack_memory_used@@Base+0x597c>
  4177f8:	ldr	x9, [x1, #32]
  4177fc:	str	x9, [x8, #32]
  417800:	ldr	x8, [x1, #16]
  417804:	cbz	x8, 417810 <_obstack_memory_used@@Base+0x598c>
  417808:	ldr	x9, [x1, #32]
  41780c:	str	x9, [x8, #32]
  417810:	mov	w0, wzr
  417814:	ret
  417818:	stp	x29, x30, [sp, #-16]!
  41781c:	ldr	w8, [x1, #48]
  417820:	ldr	x9, [x1, #56]
  417824:	mov	x29, sp
  417828:	and	w8, w8, #0xff
  41782c:	sub	w8, w8, #0x2
  417830:	cmp	w8, #0xe
  417834:	b.hi	4178c8 <_obstack_memory_used@@Base+0x5a44>  // b.pmore
  417838:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xf17c>
  41783c:	add	x10, x10, #0x4c0
  417840:	adr	x11, 417854 <_obstack_memory_used@@Base+0x59d0>
  417844:	ldrb	w12, [x10, x8]
  417848:	add	x11, x11, x12, lsl #2
  41784c:	mov	w2, wzr
  417850:	br	x11
  417854:	ldr	x8, [x1, #32]
  417858:	ldr	x10, [x0, #40]
  41785c:	ldr	x1, [x8, #56]
  417860:	mov	w8, #0x18                  	// #24
  417864:	madd	x0, x9, x8, x10
  417868:	bl	417e94 <_obstack_memory_used@@Base+0x6010>
  41786c:	mov	w2, w0
  417870:	b	417914 <_obstack_memory_used@@Base+0x5a90>
  417874:	ldrb	w8, [x0, #176]
  417878:	add	x11, x1, #0x20
  41787c:	orr	w8, w8, #0x1
  417880:	strb	w8, [x0, #176]
  417884:	ldp	x8, x10, [x1, #8]
  417888:	add	x12, x8, #0x18
  41788c:	cmp	x8, #0x0
  417890:	add	x8, x10, #0x18
  417894:	csel	x12, x11, x12, eq  // eq = none
  417898:	cmp	x10, #0x0
  41789c:	ldr	x10, [x12]
  4178a0:	csel	x8, x11, x8, eq  // eq = none
  4178a4:	ldr	x8, [x8]
  4178a8:	ldr	x1, [x10, #56]
  4178ac:	ldr	x10, [x0, #40]
  4178b0:	ldr	x2, [x8, #56]
  4178b4:	mov	w8, #0x18                  	// #24
  4178b8:	madd	x0, x9, x8, x10
  4178bc:	bl	417e04 <_obstack_memory_used@@Base+0x5f80>
  4178c0:	mov	w2, w0
  4178c4:	b	417914 <_obstack_memory_used@@Base+0x5a90>
  4178c8:	ldr	x8, [x1, #32]
  4178cc:	ldr	x10, [x0, #24]
  4178d0:	mov	w2, wzr
  4178d4:	ldr	x8, [x8, #56]
  4178d8:	str	x8, [x10, x9, lsl #3]
  4178dc:	b	417914 <_obstack_memory_used@@Base+0x5a90>
  4178e0:	ldr	x8, [x1, #32]
  4178e4:	ldr	x10, [x0, #24]
  4178e8:	ldr	x8, [x8, #56]
  4178ec:	str	x8, [x10, x9, lsl #3]
  4178f0:	ldrb	w10, [x1, #48]
  4178f4:	cmp	w10, #0x4
  4178f8:	b.ne	417910 <_obstack_memory_used@@Base+0x5a8c>  // b.any
  4178fc:	ldr	x10, [x0, #40]
  417900:	mov	w11, #0x18                  	// #24
  417904:	mov	x1, x8
  417908:	madd	x0, x9, x11, x10
  41790c:	b	417868 <_obstack_memory_used@@Base+0x59e4>
  417910:	mov	w2, wzr
  417914:	mov	w0, w2
  417918:	ldp	x29, x30, [sp], #16
  41791c:	ret
  417920:	sub	sp, sp, #0x60
  417924:	stp	x24, x23, [sp, #48]
  417928:	stp	x22, x21, [sp, #64]
  41792c:	stp	x20, x19, [sp, #80]
  417930:	mov	x19, x0
  417934:	mov	x8, xzr
  417938:	mov	w23, wzr
  41793c:	mov	w22, #0x18                  	// #24
  417940:	stp	x29, x30, [sp, #32]
  417944:	add	x29, sp, #0x20
  417948:	b	417950 <_obstack_memory_used@@Base+0x5acc>
  41794c:	add	x8, x8, #0x1
  417950:	ldr	x10, [x19, #16]
  417954:	cmp	x8, x10
  417958:	cset	w9, ne  // ne = any
  41795c:	csel	x21, x8, xzr, ne  // ne = any
  417960:	tbnz	w23, #0, 417978 <_obstack_memory_used@@Base+0x5af4>
  417964:	cmp	x8, x10
  417968:	b.ne	417978 <_obstack_memory_used@@Base+0x5af4>  // b.any
  41796c:	mov	w24, #0x2                   	// #2
  417970:	cbnz	w24, 4179f0 <_obstack_memory_used@@Base+0x5b6c>
  417974:	b	41794c <_obstack_memory_used@@Base+0x5ac8>
  417978:	ldr	x8, [x19, #48]
  41797c:	and	w23, w23, w9
  417980:	madd	x8, x21, x22, x8
  417984:	ldr	x8, [x8, #8]
  417988:	cbz	x8, 41799c <_obstack_memory_used@@Base+0x5b18>
  41798c:	mov	w24, #0x4                   	// #4
  417990:	mov	x8, x21
  417994:	cbnz	w24, 4179f0 <_obstack_memory_used@@Base+0x5b6c>
  417998:	b	41794c <_obstack_memory_used@@Base+0x5ac8>
  41799c:	add	x0, sp, #0x8
  4179a0:	mov	w3, #0x1                   	// #1
  4179a4:	mov	x1, x19
  4179a8:	mov	x2, x21
  4179ac:	mov	w24, #0x1                   	// #1
  4179b0:	bl	417ee4 <_obstack_memory_used@@Base+0x6060>
  4179b4:	cbnz	w0, 4179fc <_obstack_memory_used@@Base+0x5b78>
  4179b8:	ldr	x8, [x19, #48]
  4179bc:	madd	x8, x21, x22, x8
  4179c0:	ldr	x8, [x8, #8]
  4179c4:	cbz	x8, 4179d8 <_obstack_memory_used@@Base+0x5b54>
  4179c8:	mov	w24, wzr
  4179cc:	mov	x8, x21
  4179d0:	cbnz	w24, 4179f0 <_obstack_memory_used@@Base+0x5b6c>
  4179d4:	b	41794c <_obstack_memory_used@@Base+0x5ac8>
  4179d8:	ldr	x0, [sp, #24]
  4179dc:	bl	402bd0 <free@plt>
  4179e0:	mov	w24, wzr
  4179e4:	mov	w23, #0x1                   	// #1
  4179e8:	mov	x8, x21
  4179ec:	cbz	w24, 41794c <_obstack_memory_used@@Base+0x5ac8>
  4179f0:	cmp	w24, #0x4
  4179f4:	b.eq	41794c <_obstack_memory_used@@Base+0x5ac8>  // b.none
  4179f8:	b	417a0c <_obstack_memory_used@@Base+0x5b88>
  4179fc:	mov	x8, x21
  417a00:	mov	w20, w0
  417a04:	cbnz	w24, 4179f0 <_obstack_memory_used@@Base+0x5b6c>
  417a08:	b	41794c <_obstack_memory_used@@Base+0x5ac8>
  417a0c:	cmp	w24, #0x2
  417a10:	b.ne	417a18 <_obstack_memory_used@@Base+0x5b94>  // b.any
  417a14:	mov	w20, wzr
  417a18:	mov	w0, w20
  417a1c:	ldp	x20, x19, [sp, #80]
  417a20:	ldp	x22, x21, [sp, #64]
  417a24:	ldp	x24, x23, [sp, #48]
  417a28:	ldp	x29, x30, [sp, #32]
  417a2c:	add	sp, sp, #0x60
  417a30:	ret
  417a34:	stp	x29, x30, [sp, #-64]!
  417a38:	stp	x22, x21, [sp, #32]
  417a3c:	stp	x20, x19, [sp, #48]
  417a40:	ldr	x8, [x0, #16]
  417a44:	mov	x19, x0
  417a48:	str	x23, [sp, #16]
  417a4c:	mov	x29, sp
  417a50:	cbz	x8, 417a80 <_obstack_memory_used@@Base+0x5bfc>
  417a54:	mov	x8, xzr
  417a58:	mov	x9, xzr
  417a5c:	ldr	x10, [x19, #56]
  417a60:	add	x9, x9, #0x1
  417a64:	add	x10, x10, x8
  417a68:	stp	xzr, xzr, [x10]
  417a6c:	str	xzr, [x10, #16]
  417a70:	ldr	x10, [x19, #16]
  417a74:	add	x8, x8, #0x18
  417a78:	cmp	x9, x10
  417a7c:	b.cc	417a5c <_obstack_memory_used@@Base+0x5bd8>  // b.lo, b.ul, b.last
  417a80:	ldr	x8, [x19, #16]
  417a84:	cbz	x8, 417af4 <_obstack_memory_used@@Base+0x5c70>
  417a88:	mov	x20, xzr
  417a8c:	mov	w21, #0x18                  	// #24
  417a90:	b	417aa4 <_obstack_memory_used@@Base+0x5c20>
  417a94:	ldr	x8, [x19, #16]
  417a98:	add	x20, x20, #0x1
  417a9c:	cmp	x20, x8
  417aa0:	b.cs	417af4 <_obstack_memory_used@@Base+0x5c70>  // b.hs, b.nlast
  417aa4:	ldr	x8, [x19, #48]
  417aa8:	madd	x8, x20, x21, x8
  417aac:	ldr	x9, [x8, #8]
  417ab0:	cmp	x9, #0x1
  417ab4:	b.lt	417a94 <_obstack_memory_used@@Base+0x5c10>  // b.tstop
  417ab8:	ldr	x22, [x8, #16]
  417abc:	mov	x23, xzr
  417ac0:	ldr	x8, [x19, #56]
  417ac4:	ldr	x9, [x22, x23, lsl #3]
  417ac8:	mov	x1, x20
  417acc:	madd	x0, x9, x21, x8
  417ad0:	bl	418734 <_obstack_memory_used@@Base+0x68b0>
  417ad4:	tbz	w0, #0, 417b0c <_obstack_memory_used@@Base+0x5c88>
  417ad8:	ldr	x8, [x19, #48]
  417adc:	add	x23, x23, #0x1
  417ae0:	madd	x8, x20, x21, x8
  417ae4:	ldr	x8, [x8, #8]
  417ae8:	cmp	x23, x8
  417aec:	b.lt	417ac0 <_obstack_memory_used@@Base+0x5c3c>  // b.tstop
  417af0:	b	417a94 <_obstack_memory_used@@Base+0x5c10>
  417af4:	mov	w0, wzr
  417af8:	ldp	x20, x19, [sp, #48]
  417afc:	ldp	x22, x21, [sp, #32]
  417b00:	ldr	x23, [sp, #16]
  417b04:	ldp	x29, x30, [sp], #64
  417b08:	ret
  417b0c:	mov	w0, #0xc                   	// #12
  417b10:	b	417af8 <_obstack_memory_used@@Base+0x5c74>
  417b14:	stp	x29, x30, [sp, #-80]!
  417b18:	stp	x24, x23, [sp, #32]
  417b1c:	stp	x22, x21, [sp, #48]
  417b20:	stp	x20, x19, [sp, #64]
  417b24:	ldr	x19, [x2, #8]
  417b28:	ldr	x23, [x1]
  417b2c:	mov	x20, x2
  417b30:	mov	x21, x0
  417b34:	str	x25, [sp, #16]
  417b38:	mov	x29, sp
  417b3c:	cbz	x19, 417b60 <_obstack_memory_used@@Base+0x5cdc>
  417b40:	ldrb	w8, [x1, #56]
  417b44:	tbz	w8, #4, 417b60 <_obstack_memory_used@@Base+0x5cdc>
  417b48:	ldr	x8, [x20, #40]
  417b4c:	cmp	x8, #0x3f
  417b50:	b.gt	417c0c <_obstack_memory_used@@Base+0x5d88>
  417b54:	ldr	x9, [x23, #160]
  417b58:	lsr	x8, x9, x8
  417b5c:	tbz	w8, #0, 417c0c <_obstack_memory_used@@Base+0x5d88>
  417b60:	mov	w3, #0x8                   	// #8
  417b64:	mov	x0, x23
  417b68:	mov	x1, xzr
  417b6c:	mov	x2, xzr
  417b70:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  417b74:	mov	x22, x0
  417b78:	mov	w3, #0x9                   	// #9
  417b7c:	mov	x0, x23
  417b80:	mov	x1, xzr
  417b84:	mov	x2, xzr
  417b88:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  417b8c:	mov	x24, x0
  417b90:	mov	x25, x0
  417b94:	cbz	x19, 417bb0 <_obstack_memory_used@@Base+0x5d2c>
  417b98:	mov	w3, #0x10                  	// #16
  417b9c:	mov	x0, x23
  417ba0:	mov	x1, x19
  417ba4:	mov	x2, x24
  417ba8:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  417bac:	mov	x25, x0
  417bb0:	mov	w3, #0x10                  	// #16
  417bb4:	mov	x0, x23
  417bb8:	mov	x1, x22
  417bbc:	mov	x2, x25
  417bc0:	bl	414a40 <_obstack_memory_used@@Base+0x2bbc>
  417bc4:	cbz	x24, 417c28 <_obstack_memory_used@@Base+0x5da4>
  417bc8:	cbz	x22, 417c28 <_obstack_memory_used@@Base+0x5da4>
  417bcc:	cbz	x25, 417c28 <_obstack_memory_used@@Base+0x5da4>
  417bd0:	mov	x19, x0
  417bd4:	cbz	x0, 417c28 <_obstack_memory_used@@Base+0x5da4>
  417bd8:	ldr	x8, [x20, #40]
  417bdc:	str	x8, [x24, #40]
  417be0:	str	x8, [x22, #40]
  417be4:	ldr	w8, [x20, #48]
  417be8:	ldr	w9, [x24, #48]
  417bec:	and	w8, w8, #0x80000
  417bf0:	and	w9, w9, #0xfff7ffff
  417bf4:	orr	w9, w9, w8
  417bf8:	str	w9, [x24, #48]
  417bfc:	ldr	w9, [x22, #48]
  417c00:	and	w9, w9, #0xfff7ffff
  417c04:	orr	w8, w9, w8
  417c08:	str	w8, [x22, #48]
  417c0c:	mov	x0, x19
  417c10:	ldp	x20, x19, [sp, #64]
  417c14:	ldp	x22, x21, [sp, #48]
  417c18:	ldp	x24, x23, [sp, #32]
  417c1c:	ldr	x25, [sp, #16]
  417c20:	ldp	x29, x30, [sp], #80
  417c24:	ret
  417c28:	mov	w8, #0xc                   	// #12
  417c2c:	mov	x19, xzr
  417c30:	str	w8, [x21]
  417c34:	b	417c0c <_obstack_memory_used@@Base+0x5d88>
  417c38:	stp	x29, x30, [sp, #-80]!
  417c3c:	stp	x26, x25, [sp, #16]
  417c40:	stp	x24, x23, [sp, #32]
  417c44:	stp	x22, x21, [sp, #48]
  417c48:	stp	x20, x19, [sp, #64]
  417c4c:	ldp	x24, x8, [x0, #8]
  417c50:	mov	x20, x2
  417c54:	mov	x19, x0
  417c58:	mov	x21, x1
  417c5c:	cmp	x8, x24
  417c60:	mov	x29, sp
  417c64:	b.cs	417d34 <_obstack_memory_used@@Base+0x5eb0>  // b.hs, b.nlast
  417c68:	ldr	x8, [x19]
  417c6c:	ldr	x9, [x19, #16]
  417c70:	add	x8, x8, x9, lsl #4
  417c74:	stp	x21, x20, [x8]
  417c78:	ldr	x8, [x19]
  417c7c:	ldr	x9, [x19, #16]
  417c80:	add	x9, x8, x9, lsl #4
  417c84:	ldr	w10, [x9, #8]
  417c88:	and	w8, w20, #0xff
  417c8c:	cmp	w8, #0x5
  417c90:	and	w10, w10, #0xfffc00ff
  417c94:	str	w10, [x9, #8]
  417c98:	b.ne	417cb0 <_obstack_memory_used@@Base+0x5e2c>  // b.any
  417c9c:	ldr	w9, [x19, #180]
  417ca0:	cmp	w9, #0x1
  417ca4:	b.le	417cb0 <_obstack_memory_used@@Base+0x5e2c>
  417ca8:	mov	w8, #0x100000              	// #1048576
  417cac:	b	417cbc <_obstack_memory_used@@Base+0x5e38>
  417cb0:	cmp	w8, #0x6
  417cb4:	cset	w8, eq  // eq = none
  417cb8:	lsl	w8, w8, #20
  417cbc:	ldr	x9, [x19]
  417cc0:	ldr	x10, [x19, #16]
  417cc4:	add	x9, x9, x10, lsl #4
  417cc8:	ldr	w10, [x9, #8]
  417ccc:	and	w10, w10, #0xffefffff
  417cd0:	orr	w8, w10, w8
  417cd4:	str	w8, [x9, #8]
  417cd8:	ldp	x9, x8, [x19, #16]
  417cdc:	mov	x10, #0xffffffffffffffff    	// #-1
  417ce0:	str	x10, [x8, x9, lsl #3]
  417ce4:	ldr	x8, [x19, #40]
  417ce8:	ldr	x9, [x19, #16]
  417cec:	mov	w10, #0x18                  	// #24
  417cf0:	madd	x8, x9, x10, x8
  417cf4:	stp	xzr, xzr, [x8]
  417cf8:	str	xzr, [x8, #16]
  417cfc:	ldr	x8, [x19, #48]
  417d00:	ldr	x9, [x19, #16]
  417d04:	madd	x8, x9, x10, x8
  417d08:	stp	xzr, xzr, [x8]
  417d0c:	str	xzr, [x8, #16]
  417d10:	ldr	x0, [x19, #16]
  417d14:	add	x8, x0, #0x1
  417d18:	str	x8, [x19, #16]
  417d1c:	ldp	x20, x19, [sp, #64]
  417d20:	ldp	x22, x21, [sp, #48]
  417d24:	ldp	x24, x23, [sp, #32]
  417d28:	ldp	x26, x25, [sp, #16]
  417d2c:	ldp	x29, x30, [sp], #80
  417d30:	ret
  417d34:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  417d38:	lsl	x26, x24, #1
  417d3c:	movk	x8, #0xaaa, lsl #48
  417d40:	cmp	x26, x8
  417d44:	b.hi	417dd0 <_obstack_memory_used@@Base+0x5f4c>  // b.pmore
  417d48:	ldr	x0, [x19]
  417d4c:	lsl	x1, x24, #5
  417d50:	bl	402a40 <realloc@plt>
  417d54:	cbz	x0, 417dd0 <_obstack_memory_used@@Base+0x5f4c>
  417d58:	ldr	x8, [x19, #24]
  417d5c:	lsl	x23, x24, #4
  417d60:	str	x0, [x19]
  417d64:	mov	x1, x23
  417d68:	mov	x0, x8
  417d6c:	bl	402a40 <realloc@plt>
  417d70:	ldr	x8, [x19, #32]
  417d74:	mov	x22, x0
  417d78:	mov	x1, x23
  417d7c:	mov	x0, x8
  417d80:	bl	402a40 <realloc@plt>
  417d84:	mov	x23, x0
  417d88:	ldr	x0, [x19, #40]
  417d8c:	add	x8, x24, x24, lsl #1
  417d90:	lsl	x25, x8, #4
  417d94:	mov	x1, x25
  417d98:	bl	402a40 <realloc@plt>
  417d9c:	ldr	x8, [x19, #48]
  417da0:	mov	x24, x0
  417da4:	mov	x1, x25
  417da8:	mov	x0, x8
  417dac:	bl	402a40 <realloc@plt>
  417db0:	cbz	x22, 417dd8 <_obstack_memory_used@@Base+0x5f54>
  417db4:	cbz	x23, 417dd8 <_obstack_memory_used@@Base+0x5f54>
  417db8:	cbz	x24, 417dd8 <_obstack_memory_used@@Base+0x5f54>
  417dbc:	cbz	x0, 417dd8 <_obstack_memory_used@@Base+0x5f54>
  417dc0:	stp	x22, x23, [x19, #24]
  417dc4:	stp	x24, x0, [x19, #40]
  417dc8:	str	x26, [x19, #8]
  417dcc:	b	417c68 <_obstack_memory_used@@Base+0x5de4>
  417dd0:	mov	x0, #0xffffffffffffffff    	// #-1
  417dd4:	b	417d1c <_obstack_memory_used@@Base+0x5e98>
  417dd8:	mov	x19, x0
  417ddc:	mov	x0, x22
  417de0:	bl	402bd0 <free@plt>
  417de4:	mov	x0, x23
  417de8:	bl	402bd0 <free@plt>
  417dec:	mov	x0, x24
  417df0:	bl	402bd0 <free@plt>
  417df4:	mov	x0, x19
  417df8:	bl	402bd0 <free@plt>
  417dfc:	mov	x0, #0xffffffffffffffff    	// #-1
  417e00:	b	417d1c <_obstack_memory_used@@Base+0x5e98>
  417e04:	stp	x29, x30, [sp, #-48]!
  417e08:	mov	w8, #0x2                   	// #2
  417e0c:	str	x21, [sp, #16]
  417e10:	stp	x20, x19, [sp, #32]
  417e14:	mov	x21, x0
  417e18:	str	x8, [x0]
  417e1c:	mov	w0, #0x10                  	// #16
  417e20:	mov	x29, sp
  417e24:	mov	x20, x2
  417e28:	mov	x19, x1
  417e2c:	bl	4028e0 <malloc@plt>
  417e30:	str	x0, [x21, #16]
  417e34:	cbz	x0, 417e8c <_obstack_memory_used@@Base+0x6008>
  417e38:	cmp	x19, x20
  417e3c:	b.ne	417e58 <_obstack_memory_used@@Base+0x5fd4>  // b.any
  417e40:	ldr	x8, [x21, #16]
  417e44:	mov	w9, #0x1                   	// #1
  417e48:	mov	w0, wzr
  417e4c:	str	x9, [x21, #8]
  417e50:	str	x19, [x8]
  417e54:	b	417e7c <_obstack_memory_used@@Base+0x5ff8>
  417e58:	ldr	x8, [x21, #16]
  417e5c:	mov	w9, #0x2                   	// #2
  417e60:	cmp	x19, x20
  417e64:	mov	w0, wzr
  417e68:	str	x9, [x21, #8]
  417e6c:	b.ge	417e78 <_obstack_memory_used@@Base+0x5ff4>  // b.tcont
  417e70:	stp	x19, x20, [x8]
  417e74:	b	417e7c <_obstack_memory_used@@Base+0x5ff8>
  417e78:	stp	x20, x19, [x8]
  417e7c:	ldp	x20, x19, [sp, #32]
  417e80:	ldr	x21, [sp, #16]
  417e84:	ldp	x29, x30, [sp], #48
  417e88:	ret
  417e8c:	mov	w0, #0xc                   	// #12
  417e90:	b	417e7c <_obstack_memory_used@@Base+0x5ff8>
  417e94:	stp	x29, x30, [sp, #-32]!
  417e98:	mov	w8, #0x1                   	// #1
  417e9c:	stp	x20, x19, [sp, #16]
  417ea0:	mov	x19, x0
  417ea4:	stp	x8, x8, [x0]
  417ea8:	mov	w0, #0x8                   	// #8
  417eac:	mov	x29, sp
  417eb0:	mov	x20, x1
  417eb4:	bl	4028e0 <malloc@plt>
  417eb8:	str	x0, [x19, #16]
  417ebc:	cbz	x0, 417ed8 <_obstack_memory_used@@Base+0x6054>
  417ec0:	mov	x8, x0
  417ec4:	mov	w0, wzr
  417ec8:	str	x20, [x8]
  417ecc:	ldp	x20, x19, [sp, #16]
  417ed0:	ldp	x29, x30, [sp], #32
  417ed4:	ret
  417ed8:	stp	xzr, xzr, [x19]
  417edc:	mov	w0, #0xc                   	// #12
  417ee0:	b	417ecc <_obstack_memory_used@@Base+0x6048>
  417ee4:	sub	sp, sp, #0x90
  417ee8:	stp	x29, x30, [sp, #48]
  417eec:	stp	x26, x25, [sp, #80]
  417ef0:	stp	x24, x23, [sp, #96]
  417ef4:	stp	x22, x21, [sp, #112]
  417ef8:	stp	x20, x19, [sp, #128]
  417efc:	ldr	x8, [x1, #40]
  417f00:	mov	w9, #0x18                  	// #24
  417f04:	mov	x22, x1
  417f08:	mov	x19, x0
  417f0c:	madd	x8, x2, x9, x8
  417f10:	ldr	x8, [x8, #8]
  417f14:	add	x0, sp, #0x18
  417f18:	str	x27, [sp, #64]
  417f1c:	add	x29, sp, #0x30
  417f20:	add	x1, x8, #0x1
  417f24:	mov	w21, w3
  417f28:	mov	x20, x2
  417f2c:	bl	41813c <_obstack_memory_used@@Base+0x62b8>
  417f30:	cbnz	w0, 41812c <_obstack_memory_used@@Base+0x62a8>
  417f34:	ldr	x8, [x22, #48]
  417f38:	mov	w9, #0x18                  	// #24
  417f3c:	madd	x8, x20, x9, x8
  417f40:	mov	x9, #0xffffffffffffffff    	// #-1
  417f44:	str	x9, [x8, #8]
  417f48:	ldr	x8, [x22]
  417f4c:	add	x9, x8, x20, lsl #4
  417f50:	ldr	w9, [x9, #8]
  417f54:	ubfx	w4, w9, #8, #10
  417f58:	cbz	w4, 417fa4 <_obstack_memory_used@@Base+0x6120>
  417f5c:	ldr	x9, [x22, #40]
  417f60:	mov	w10, #0x18                  	// #24
  417f64:	madd	x10, x20, x10, x9
  417f68:	ldr	x10, [x10, #8]
  417f6c:	cbz	x10, 417fa4 <_obstack_memory_used@@Base+0x6120>
  417f70:	mov	w10, #0x18                  	// #24
  417f74:	madd	x9, x20, x10, x9
  417f78:	ldr	x9, [x9, #16]
  417f7c:	ldr	x9, [x9]
  417f80:	add	x8, x8, x9, lsl #4
  417f84:	ldrb	w8, [x8, #10]
  417f88:	tbnz	w8, #2, 417fa4 <_obstack_memory_used@@Base+0x6120>
  417f8c:	mov	x0, x22
  417f90:	mov	x1, x20
  417f94:	mov	x2, x20
  417f98:	mov	x3, x20
  417f9c:	bl	418178 <_obstack_memory_used@@Base+0x62f4>
  417fa0:	cbnz	w0, 41812c <_obstack_memory_used@@Base+0x62a8>
  417fa4:	ldr	x8, [x22]
  417fa8:	add	x8, x8, x20, lsl #4
  417fac:	ldrb	w8, [x8, #8]
  417fb0:	tbz	w8, #3, 4180a0 <_obstack_memory_used@@Base+0x621c>
  417fb4:	ldr	x8, [x22, #40]
  417fb8:	mov	w9, #0x18                  	// #24
  417fbc:	madd	x9, x20, x9, x8
  417fc0:	ldr	x9, [x9, #8]
  417fc4:	cmp	x9, #0x1
  417fc8:	b.lt	4180a0 <_obstack_memory_used@@Base+0x621c>  // b.tstop
  417fcc:	mov	w27, wzr
  417fd0:	mov	x25, xzr
  417fd4:	mov	w26, #0x18                  	// #24
  417fd8:	madd	x8, x20, x26, x8
  417fdc:	ldr	x8, [x8, #16]
  417fe0:	ldr	x24, [x8, x25, lsl #3]
  417fe4:	ldr	x8, [x22, #48]
  417fe8:	madd	x9, x24, x26, x8
  417fec:	ldr	x9, [x9, #8]
  417ff0:	cmn	x9, #0x1
  417ff4:	b.eq	418018 <_obstack_memory_used@@Base+0x6194>  // b.none
  417ff8:	cbnz	x9, 418020 <_obstack_memory_used@@Base+0x619c>
  417ffc:	mov	x0, sp
  418000:	mov	x1, x22
  418004:	mov	x2, x24
  418008:	mov	w3, wzr
  41800c:	bl	417ee4 <_obstack_memory_used@@Base+0x6060>
  418010:	cbz	w0, 418034 <_obstack_memory_used@@Base+0x61b0>
  418014:	b	418094 <_obstack_memory_used@@Base+0x6210>
  418018:	mov	w8, #0x4                   	// #4
  41801c:	b	418068 <_obstack_memory_used@@Base+0x61e4>
  418020:	madd	x8, x24, x26, x8
  418024:	ldr	x9, [x8, #16]
  418028:	ldr	q0, [x8]
  41802c:	str	x9, [sp, #16]
  418030:	str	q0, [sp]
  418034:	add	x0, sp, #0x18
  418038:	mov	x1, sp
  41803c:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  418040:	cbnz	w0, 418094 <_obstack_memory_used@@Base+0x6210>
  418044:	ldr	x8, [x22, #48]
  418048:	madd	x8, x24, x26, x8
  41804c:	ldr	x8, [x8, #8]
  418050:	cbz	x8, 41805c <_obstack_memory_used@@Base+0x61d8>
  418054:	mov	w8, wzr
  418058:	b	41806c <_obstack_memory_used@@Base+0x61e8>
  41805c:	ldr	x0, [sp, #16]
  418060:	bl	402bd0 <free@plt>
  418064:	mov	w8, wzr
  418068:	mov	w27, #0x1                   	// #1
  41806c:	orr	w8, w8, #0x4
  418070:	cmp	w8, #0x4
  418074:	b.ne	4180fc <_obstack_memory_used@@Base+0x6278>  // b.any
  418078:	ldr	x8, [x22, #40]
  41807c:	add	x25, x25, #0x1
  418080:	madd	x9, x20, x26, x8
  418084:	ldr	x9, [x9, #8]
  418088:	cmp	x25, x9
  41808c:	b.lt	417fd8 <_obstack_memory_used@@Base+0x6154>  // b.tstop
  418090:	b	418120 <_obstack_memory_used@@Base+0x629c>
  418094:	mov	w8, #0x1                   	// #1
  418098:	mov	w23, w0
  41809c:	b	41806c <_obstack_memory_used@@Base+0x61e8>
  4180a0:	mov	w23, #0x1                   	// #1
  4180a4:	add	x0, sp, #0x18
  4180a8:	mov	x1, x20
  4180ac:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  4180b0:	tbz	w0, #0, 418134 <_obstack_memory_used@@Base+0x62b0>
  4180b4:	ldr	x8, [x22, #48]
  4180b8:	orr	w9, w23, w21
  4180bc:	tbz	w9, #0, 4180dc <_obstack_memory_used@@Base+0x6258>
  4180c0:	ldr	x9, [sp, #40]
  4180c4:	ldur	q0, [sp, #24]
  4180c8:	mov	w10, #0x18                  	// #24
  4180cc:	madd	x8, x20, x10, x8
  4180d0:	str	x9, [x8, #16]
  4180d4:	str	q0, [x8]
  4180d8:	b	4180e8 <_obstack_memory_used@@Base+0x6264>
  4180dc:	mov	w9, #0x18                  	// #24
  4180e0:	madd	x8, x20, x9, x8
  4180e4:	str	xzr, [x8, #8]
  4180e8:	ldr	x8, [sp, #40]
  4180ec:	ldur	q0, [sp, #24]
  4180f0:	mov	w23, wzr
  4180f4:	str	x8, [x19, #16]
  4180f8:	str	q0, [x19]
  4180fc:	mov	w0, w23
  418100:	ldp	x20, x19, [sp, #128]
  418104:	ldp	x22, x21, [sp, #112]
  418108:	ldp	x24, x23, [sp, #96]
  41810c:	ldp	x26, x25, [sp, #80]
  418110:	ldr	x27, [sp, #64]
  418114:	ldp	x29, x30, [sp, #48]
  418118:	add	sp, sp, #0x90
  41811c:	ret
  418120:	tst	w27, #0x1
  418124:	cset	w23, eq  // eq = none
  418128:	b	4180a4 <_obstack_memory_used@@Base+0x6220>
  41812c:	mov	w23, w0
  418130:	b	4180fc <_obstack_memory_used@@Base+0x6278>
  418134:	mov	w23, #0xc                   	// #12
  418138:	b	4180fc <_obstack_memory_used@@Base+0x6278>
  41813c:	stp	x29, x30, [sp, #-32]!
  418140:	str	x19, [sp, #16]
  418144:	mov	x19, x0
  418148:	stp	x1, xzr, [x0]
  41814c:	lsl	x0, x1, #3
  418150:	mov	x29, sp
  418154:	bl	4028e0 <malloc@plt>
  418158:	str	x0, [x19, #16]
  41815c:	ldr	x19, [sp, #16]
  418160:	cmp	x0, #0x0
  418164:	mov	w8, #0xc                   	// #12
  418168:	csel	w8, w8, wzr, eq  // eq = none
  41816c:	mov	w0, w8
  418170:	ldp	x29, x30, [sp], #32
  418174:	ret
  418178:	stp	x29, x30, [sp, #-96]!
  41817c:	stp	x28, x27, [sp, #16]
  418180:	stp	x24, x23, [sp, #48]
  418184:	stp	x22, x21, [sp, #64]
  418188:	stp	x20, x19, [sp, #80]
  41818c:	mov	w19, w4
  418190:	mov	x20, x3
  418194:	mov	x24, x2
  418198:	mov	x23, x1
  41819c:	mov	x21, x0
  4181a0:	mov	w27, #0x18                  	// #24
  4181a4:	mov	w28, #0xc                   	// #12
  4181a8:	stp	x26, x25, [sp, #32]
  4181ac:	mov	x29, sp
  4181b0:	b	4181c8 <_obstack_memory_used@@Base+0x6344>
  4181b4:	ldr	x8, [x21, #24]
  4181b8:	ldr	x9, [x8, x23, lsl #3]
  4181bc:	str	x9, [x8, x24, lsl #3]
  4181c0:	mov	w8, #0x2                   	// #2
  4181c4:	cbnz	w8, 418378 <_obstack_memory_used@@Base+0x64f4>
  4181c8:	ldr	x8, [x21]
  4181cc:	add	x8, x8, x23, lsl #4
  4181d0:	ldrb	w9, [x8, #8]!
  4181d4:	cmp	w9, #0x4
  4181d8:	b.ne	41821c <_obstack_memory_used@@Base+0x6398>  // b.any
  4181dc:	ldr	x8, [x21, #24]
  4181e0:	ldr	x9, [x21, #40]
  4181e4:	mov	x0, x21
  4181e8:	mov	w2, w19
  4181ec:	ldr	x25, [x8, x23, lsl #3]
  4181f0:	madd	x8, x24, x27, x9
  4181f4:	str	xzr, [x8, #8]
  4181f8:	mov	x1, x25
  4181fc:	bl	418620 <_obstack_memory_used@@Base+0x679c>
  418200:	cmn	x0, #0x1
  418204:	b.eq	41835c <_obstack_memory_used@@Base+0x64d8>  // b.none
  418208:	ldr	x8, [x21, #24]
  41820c:	mov	x26, x0
  418210:	ldr	x9, [x8, x23, lsl #3]
  418214:	str	x9, [x8, x24, lsl #3]
  418218:	b	4182dc <_obstack_memory_used@@Base+0x6458>
  41821c:	ldr	x26, [x21, #40]
  418220:	madd	x9, x23, x27, x26
  418224:	ldr	x9, [x9, #8]
  418228:	cbz	x9, 4181b4 <_obstack_memory_used@@Base+0x6330>
  41822c:	madd	x10, x23, x27, x26
  418230:	ldr	x10, [x10, #16]
  418234:	cmp	x9, #0x1
  418238:	ldr	x25, [x10]
  41823c:	madd	x10, x24, x27, x26
  418240:	str	xzr, [x10, #8]
  418244:	b.ne	418278 <_obstack_memory_used@@Base+0x63f4>  // b.any
  418248:	cmp	x23, x20
  41824c:	b.ne	4182b4 <_obstack_memory_used@@Base+0x6430>  // b.any
  418250:	cmp	x24, x23
  418254:	b.eq	4182b4 <_obstack_memory_used@@Base+0x6430>  // b.none
  418258:	madd	x0, x24, x27, x26
  41825c:	mov	x1, x25
  418260:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  418264:	tst	w0, #0x1
  418268:	mov	w8, #0x1                   	// #1
  41826c:	cinc	w8, w8, ne  // ne = any
  418270:	csel	w22, w22, w28, ne  // ne = any
  418274:	b	4181c4 <_obstack_memory_used@@Base+0x6340>
  418278:	mov	x0, x21
  41827c:	mov	x1, x25
  418280:	mov	w2, w19
  418284:	bl	4186bc <_obstack_memory_used@@Base+0x6838>
  418288:	cmn	x0, #0x1
  41828c:	b.eq	418300 <_obstack_memory_used@@Base+0x647c>  // b.none
  418290:	mov	x1, x0
  418294:	madd	x0, x24, x27, x26
  418298:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41829c:	tbz	w0, #0, 41835c <_obstack_memory_used@@Base+0x64d8>
  4182a0:	ldr	x8, [x21, #40]
  4182a4:	madd	x8, x23, x27, x8
  4182a8:	ldr	x8, [x8, #16]
  4182ac:	ldr	x25, [x8, #8]
  4182b0:	b	4182c0 <_obstack_memory_used@@Base+0x643c>
  4182b4:	ldr	w8, [x8]
  4182b8:	ubfx	w8, w8, #8, #10
  4182bc:	orr	w19, w8, w19
  4182c0:	mov	x0, x21
  4182c4:	mov	x1, x25
  4182c8:	mov	w2, w19
  4182cc:	bl	418620 <_obstack_memory_used@@Base+0x679c>
  4182d0:	cmn	x0, #0x1
  4182d4:	b.eq	41835c <_obstack_memory_used@@Base+0x64d8>  // b.none
  4182d8:	mov	x26, x0
  4182dc:	ldr	x8, [x21, #40]
  4182e0:	mov	x1, x26
  4182e4:	madd	x0, x24, x27, x8
  4182e8:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  4182ec:	tbz	w0, #0, 41835c <_obstack_memory_used@@Base+0x64d8>
  4182f0:	mov	w8, wzr
  4182f4:	mov	x23, x25
  4182f8:	mov	x24, x26
  4182fc:	b	4181c4 <_obstack_memory_used@@Base+0x6340>
  418300:	mov	x0, x21
  418304:	mov	x1, x25
  418308:	mov	w2, w19
  41830c:	bl	418620 <_obstack_memory_used@@Base+0x679c>
  418310:	cmn	x0, #0x1
  418314:	b.eq	418368 <_obstack_memory_used@@Base+0x64e4>  // b.none
  418318:	ldr	x8, [x21, #40]
  41831c:	mov	x26, x0
  418320:	mov	x1, x26
  418324:	madd	x0, x24, x27, x8
  418328:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41832c:	tbz	w0, #0, 418368 <_obstack_memory_used@@Base+0x64e4>
  418330:	mov	x0, x21
  418334:	mov	x1, x25
  418338:	mov	x2, x26
  41833c:	mov	x3, x20
  418340:	mov	w4, w19
  418344:	bl	418178 <_obstack_memory_used@@Base+0x62f4>
  418348:	cmp	w0, #0x0
  41834c:	cset	w8, ne  // ne = any
  418350:	csel	w22, w22, w0, eq  // eq = none
  418354:	cbnz	w8, 4181c4 <_obstack_memory_used@@Base+0x6340>
  418358:	b	4182a0 <_obstack_memory_used@@Base+0x641c>
  41835c:	mov	w22, #0xc                   	// #12
  418360:	mov	w8, #0x1                   	// #1
  418364:	b	4181c4 <_obstack_memory_used@@Base+0x6340>
  418368:	mov	w22, #0xc                   	// #12
  41836c:	mov	w8, #0x1                   	// #1
  418370:	cbnz	w8, 4181c4 <_obstack_memory_used@@Base+0x6340>
  418374:	b	4182a0 <_obstack_memory_used@@Base+0x641c>
  418378:	cmp	w8, #0x2
  41837c:	b.ne	418384 <_obstack_memory_used@@Base+0x6500>  // b.any
  418380:	mov	w22, wzr
  418384:	mov	w0, w22
  418388:	ldp	x20, x19, [sp, #80]
  41838c:	ldp	x22, x21, [sp, #64]
  418390:	ldp	x24, x23, [sp, #48]
  418394:	ldp	x26, x25, [sp, #32]
  418398:	ldp	x28, x27, [sp, #16]
  41839c:	ldp	x29, x30, [sp], #96
  4183a0:	ret
  4183a4:	stp	x29, x30, [sp, #-48]!
  4183a8:	str	x21, [sp, #16]
  4183ac:	stp	x20, x19, [sp, #32]
  4183b0:	mov	x29, sp
  4183b4:	cbz	x1, 41849c <_obstack_memory_used@@Base+0x6618>
  4183b8:	ldr	x8, [x1, #8]
  4183bc:	mov	x20, x1
  4183c0:	cbz	x8, 41849c <_obstack_memory_used@@Base+0x6618>
  4183c4:	ldp	x9, x10, [x0]
  4183c8:	mov	x19, x0
  4183cc:	add	x10, x10, x8, lsl #1
  4183d0:	cmp	x9, x10
  4183d4:	b.ge	4183f8 <_obstack_memory_used@@Base+0x6574>  // b.tcont
  4183d8:	ldr	x0, [x19, #16]
  4183dc:	add	x21, x9, x8
  4183e0:	lsl	x1, x21, #4
  4183e4:	bl	402a40 <realloc@plt>
  4183e8:	cbz	x0, 41852c <_obstack_memory_used@@Base+0x66a8>
  4183ec:	lsl	x8, x21, #1
  4183f0:	str	x0, [x19, #16]
  4183f4:	str	x8, [x19]
  4183f8:	ldr	x11, [x19, #8]
  4183fc:	ldr	x10, [x20, #8]
  418400:	cbz	x11, 418518 <_obstack_memory_used@@Base+0x6694>
  418404:	sub	x8, x10, #0x1
  418408:	sub	x9, x11, #0x1
  41840c:	orr	x12, x8, x9
  418410:	add	x21, x11, x10, lsl #1
  418414:	tbnz	x12, #63, 418460 <_obstack_memory_used@@Base+0x65dc>
  418418:	ldr	x10, [x19, #16]
  41841c:	ldr	x11, [x20, #16]
  418420:	b	418438 <_obstack_memory_used@@Base+0x65b4>
  418424:	sub	x8, x8, #0x1
  418428:	sub	x21, x21, #0x1
  41842c:	str	x12, [x10, x21, lsl #3]
  418430:	orr	x12, x8, x9
  418434:	tbnz	x12, #63, 418460 <_obstack_memory_used@@Base+0x65dc>
  418438:	ldr	x13, [x10, x9, lsl #3]
  41843c:	ldr	x12, [x11, x8, lsl #3]
  418440:	cmp	x13, x12
  418444:	b.ne	418450 <_obstack_memory_used@@Base+0x65cc>  // b.any
  418448:	sub	x8, x8, #0x1
  41844c:	b	418454 <_obstack_memory_used@@Base+0x65d0>
  418450:	b.lt	418424 <_obstack_memory_used@@Base+0x65a0>  // b.tstop
  418454:	sub	x9, x9, #0x1
  418458:	orr	x12, x8, x9
  41845c:	tbz	x12, #63, 418438 <_obstack_memory_used@@Base+0x65b4>
  418460:	tbnz	x8, #63, 418480 <_obstack_memory_used@@Base+0x65fc>
  418464:	ldr	x9, [x19, #16]
  418468:	ldr	x1, [x20, #16]
  41846c:	add	x8, x8, #0x1
  418470:	sub	x21, x21, x8
  418474:	add	x0, x9, x21, lsl #3
  418478:	lsl	x2, x8, #3
  41847c:	bl	402710 <memcpy@plt>
  418480:	ldr	x9, [x19, #8]
  418484:	ldr	x8, [x20, #8]
  418488:	add	x8, x9, x8, lsl #1
  41848c:	sub	x8, x8, #0x1
  418490:	sub	x10, x8, x21
  418494:	adds	x11, x10, #0x1
  418498:	b.cc	4184b0 <_obstack_memory_used@@Base+0x662c>  // b.lo, b.ul, b.last
  41849c:	mov	w0, wzr
  4184a0:	ldp	x20, x19, [sp, #32]
  4184a4:	ldr	x21, [sp, #16]
  4184a8:	ldp	x29, x30, [sp], #48
  4184ac:	ret
  4184b0:	ldr	x0, [x19, #16]
  4184b4:	sub	x10, x9, #0x1
  4184b8:	add	x9, x11, x9
  4184bc:	str	x9, [x19, #8]
  4184c0:	add	x9, x0, x10, lsl #3
  4184c4:	lsl	x2, x11, #3
  4184c8:	neg	x11, x11
  4184cc:	ldr	x12, [x0, x8, lsl #3]
  4184d0:	ldr	x13, [x0, x10, lsl #3]
  4184d4:	cmp	x12, x13
  4184d8:	b.le	4184f4 <_obstack_memory_used@@Base+0x6670>
  4184dc:	sub	x8, x8, #0x1
  4184e0:	str	x12, [x9, x2]
  4184e4:	adds	x11, x11, #0x1
  4184e8:	sub	x2, x2, #0x8
  4184ec:	b.cc	4184cc <_obstack_memory_used@@Base+0x6648>  // b.lo, b.ul, b.last
  4184f0:	b	41849c <_obstack_memory_used@@Base+0x6618>
  4184f4:	str	x13, [x9, x2]
  4184f8:	cmp	x10, #0x0
  4184fc:	sub	x10, x10, #0x1
  418500:	neg	x11, x11
  418504:	sub	x9, x9, #0x8
  418508:	b.gt	4184c4 <_obstack_memory_used@@Base+0x6640>
  41850c:	add	x1, x0, x21, lsl #3
  418510:	bl	402710 <memcpy@plt>
  418514:	b	41849c <_obstack_memory_used@@Base+0x6618>
  418518:	str	x10, [x19, #8]
  41851c:	ldp	x8, x1, [x20, #8]
  418520:	ldr	x0, [x19, #16]
  418524:	lsl	x2, x8, #3
  418528:	b	418510 <_obstack_memory_used@@Base+0x668c>
  41852c:	mov	w0, #0xc                   	// #12
  418530:	b	4184a0 <_obstack_memory_used@@Base+0x661c>
  418534:	stp	x29, x30, [sp, #-32]!
  418538:	stp	x20, x19, [sp, #16]
  41853c:	ldr	x8, [x0]
  418540:	mov	x19, x0
  418544:	mov	x20, x1
  418548:	mov	x29, sp
  41854c:	cbz	x8, 418574 <_obstack_memory_used@@Base+0x66f0>
  418550:	ldr	x9, [x19, #8]
  418554:	cbnz	x9, 418594 <_obstack_memory_used@@Base+0x6710>
  418558:	ldr	x8, [x19, #16]
  41855c:	str	x20, [x8]
  418560:	ldr	x8, [x19, #8]
  418564:	mov	w0, #0x1                   	// #1
  418568:	add	x8, x8, #0x1
  41856c:	str	x8, [x19, #8]
  418570:	b	418588 <_obstack_memory_used@@Base+0x6704>
  418574:	mov	x0, x19
  418578:	mov	x1, x20
  41857c:	bl	417e94 <_obstack_memory_used@@Base+0x6010>
  418580:	cmp	w0, #0x0
  418584:	cset	w0, eq  // eq = none
  418588:	ldp	x20, x19, [sp, #16]
  41858c:	ldp	x29, x30, [sp], #32
  418590:	ret
  418594:	cmp	x8, x9
  418598:	b.ne	4185b8 <_obstack_memory_used@@Base+0x6734>  // b.any
  41859c:	ldr	x0, [x19, #16]
  4185a0:	lsl	x9, x8, #1
  4185a4:	lsl	x1, x8, #4
  4185a8:	str	x9, [x19]
  4185ac:	bl	402a40 <realloc@plt>
  4185b0:	cbz	x0, 418588 <_obstack_memory_used@@Base+0x6704>
  4185b4:	str	x0, [x19, #16]
  4185b8:	ldp	x9, x8, [x19, #8]
  4185bc:	ldr	x10, [x8]
  4185c0:	cmp	x10, x20
  4185c4:	b.le	4185f0 <_obstack_memory_used@@Base+0x676c>
  4185c8:	cmp	x9, #0x1
  4185cc:	b.lt	418618 <_obstack_memory_used@@Base+0x6794>  // b.tstop
  4185d0:	mov	x10, x9
  4185d4:	add	x11, x8, x10, lsl #3
  4185d8:	ldur	x12, [x11, #-8]
  4185dc:	subs	x9, x10, #0x1
  4185e0:	mov	x10, x9
  4185e4:	str	x12, [x11]
  4185e8:	b.gt	4185d4 <_obstack_memory_used@@Base+0x6750>
  4185ec:	b	418618 <_obstack_memory_used@@Base+0x6794>
  4185f0:	add	x10, x8, x9, lsl #3
  4185f4:	ldur	x10, [x10, #-8]
  4185f8:	cmp	x10, x20
  4185fc:	b.le	418618 <_obstack_memory_used@@Base+0x6794>
  418600:	add	x11, x8, x9, lsl #3
  418604:	str	x10, [x11]
  418608:	ldur	x10, [x11, #-16]
  41860c:	sub	x9, x9, #0x1
  418610:	cmp	x10, x20
  418614:	b.gt	418600 <_obstack_memory_used@@Base+0x677c>
  418618:	str	x20, [x8, x9, lsl #3]
  41861c:	b	418560 <_obstack_memory_used@@Base+0x66dc>
  418620:	stp	x29, x30, [sp, #-48]!
  418624:	stp	x20, x19, [sp, #32]
  418628:	ldr	x8, [x0]
  41862c:	str	x21, [sp, #16]
  418630:	mov	x19, x1
  418634:	mov	w21, w2
  418638:	add	x8, x8, x1, lsl #4
  41863c:	ldp	x1, x8, [x8]
  418640:	mov	x29, sp
  418644:	mov	x20, x0
  418648:	mov	x2, x8
  41864c:	bl	417c38 <_obstack_memory_used@@Base+0x5db4>
  418650:	cmn	x0, #0x1
  418654:	b.eq	4186ac <_obstack_memory_used@@Base+0x6828>  // b.none
  418658:	ldr	x8, [x20]
  41865c:	lsl	x9, x0, #4
  418660:	add	x8, x8, x9
  418664:	ldr	w10, [x8, #8]
  418668:	bfi	w10, w21, #8, #10
  41866c:	str	w10, [x8, #8]
  418670:	ldr	x8, [x20]
  418674:	add	x10, x8, x19, lsl #4
  418678:	ldr	w10, [x10, #8]
  41867c:	add	x8, x8, x9
  418680:	ldr	w11, [x8, #8]
  418684:	and	w10, w10, #0x3ff00
  418688:	orr	w10, w10, w11
  41868c:	str	w10, [x8, #8]
  418690:	ldr	x8, [x20]
  418694:	add	x8, x8, x9
  418698:	ldr	w9, [x8, #8]
  41869c:	orr	w9, w9, #0x40000
  4186a0:	str	w9, [x8, #8]
  4186a4:	ldr	x8, [x20, #32]
  4186a8:	str	x19, [x8, x0, lsl #3]
  4186ac:	ldp	x20, x19, [sp, #32]
  4186b0:	ldr	x21, [sp, #16]
  4186b4:	ldp	x29, x30, [sp], #48
  4186b8:	ret
  4186bc:	ldr	x11, [x0, #16]
  4186c0:	mov	x8, #0xffffffffffffffff    	// #-1
  4186c4:	sub	x9, x11, #0x1
  4186c8:	cmp	x9, #0x1
  4186cc:	b.lt	418724 <_obstack_memory_used@@Base+0x68a0>  // b.tstop
  4186d0:	ldr	x10, [x0]
  4186d4:	add	x10, x10, x9, lsl #4
  4186d8:	ldr	w12, [x10, #8]
  4186dc:	tbz	w12, #18, 418724 <_obstack_memory_used@@Base+0x68a0>
  4186e0:	ldr	x10, [x0, #32]
  4186e4:	lsl	x8, x11, #4
  4186e8:	sub	x11, x8, #0x18
  4186ec:	ldr	x8, [x10, x9, lsl #3]
  4186f0:	cmp	x8, x1
  4186f4:	b.ne	418704 <_obstack_memory_used@@Base+0x6880>  // b.any
  4186f8:	ubfx	w8, w12, #8, #10
  4186fc:	cmp	w8, w2
  418700:	b.eq	41872c <_obstack_memory_used@@Base+0x68a8>  // b.none
  418704:	sub	x9, x9, #0x1
  418708:	cmp	x9, #0x1
  41870c:	mov	x8, #0xffffffffffffffff    	// #-1
  418710:	b.lt	418724 <_obstack_memory_used@@Base+0x68a0>  // b.tstop
  418714:	ldr	x12, [x0]
  418718:	ldr	w12, [x12, x11]
  41871c:	sub	x11, x11, #0x10
  418720:	tbnz	w12, #18, 4186ec <_obstack_memory_used@@Base+0x6868>
  418724:	mov	x0, x8
  418728:	ret
  41872c:	mov	x0, x9
  418730:	ret
  418734:	stp	x29, x30, [sp, #-32]!
  418738:	stp	x20, x19, [sp, #16]
  41873c:	ldp	x8, x9, [x0]
  418740:	mov	x19, x0
  418744:	mov	x20, x1
  418748:	mov	x29, sp
  41874c:	cmp	x8, x9
  418750:	b.ne	418774 <_obstack_memory_used@@Base+0x68f0>  // b.any
  418754:	ldr	x0, [x19, #16]
  418758:	lsl	x8, x8, #1
  41875c:	add	x8, x8, #0x2
  418760:	lsl	x1, x8, #3
  418764:	str	x8, [x19]
  418768:	bl	402a40 <realloc@plt>
  41876c:	cbz	x0, 418788 <_obstack_memory_used@@Base+0x6904>
  418770:	str	x0, [x19, #16]
  418774:	ldp	x8, x9, [x19, #8]
  418778:	mov	w0, #0x1                   	// #1
  41877c:	add	x10, x8, #0x1
  418780:	str	x10, [x19, #8]
  418784:	str	x20, [x9, x8, lsl #3]
  418788:	ldp	x20, x19, [sp, #16]
  41878c:	ldp	x29, x30, [sp], #32
  418790:	ret
  418794:	stp	x29, x30, [sp, #-48]!
  418798:	stp	x20, x19, [sp, #32]
  41879c:	ldr	x8, [x1, #8]
  4187a0:	str	x21, [sp, #16]
  4187a4:	mov	x19, x0
  4187a8:	mov	x29, sp
  4187ac:	str	x8, [x0, #8]
  4187b0:	ldr	x21, [x1, #8]
  4187b4:	cmp	x21, #0x1
  4187b8:	b.lt	4187e8 <_obstack_memory_used@@Base+0x6964>  // b.tstop
  4187bc:	lsl	x0, x8, #3
  4187c0:	mov	x20, x1
  4187c4:	str	x8, [x19]
  4187c8:	bl	4028e0 <malloc@plt>
  4187cc:	str	x0, [x19, #16]
  4187d0:	cbz	x0, 418804 <_obstack_memory_used@@Base+0x6980>
  4187d4:	ldr	x1, [x20, #16]
  4187d8:	lsl	x2, x21, #3
  4187dc:	bl	402710 <memcpy@plt>
  4187e0:	mov	w0, wzr
  4187e4:	b	4187f4 <_obstack_memory_used@@Base+0x6970>
  4187e8:	mov	w0, wzr
  4187ec:	stp	xzr, xzr, [x19]
  4187f0:	str	xzr, [x19, #16]
  4187f4:	ldp	x20, x19, [sp, #32]
  4187f8:	ldr	x21, [sp, #16]
  4187fc:	ldp	x29, x30, [sp], #48
  418800:	ret
  418804:	stp	xzr, xzr, [x19]
  418808:	mov	w0, #0xc                   	// #12
  41880c:	b	4187f4 <_obstack_memory_used@@Base+0x6970>
  418810:	ldr	x8, [x0, #8]
  418814:	subs	x8, x8, #0x1
  418818:	b.lt	41884c <_obstack_memory_used@@Base+0x69c8>  // b.tstop
  41881c:	b.eq	418854 <_obstack_memory_used@@Base+0x69d0>  // b.none
  418820:	ldr	x10, [x0, #16]
  418824:	mov	x9, xzr
  418828:	add	x11, x8, x9
  41882c:	lsr	x11, x11, #1
  418830:	ldr	x12, [x10, x11, lsl #3]
  418834:	cmp	x12, x1
  418838:	csinc	x9, x9, x11, ge  // ge = tcont
  41883c:	csel	x8, x8, x11, lt  // lt = tstop
  418840:	cmp	x9, x8
  418844:	b.cc	418828 <_obstack_memory_used@@Base+0x69a4>  // b.lo, b.ul, b.last
  418848:	b	418858 <_obstack_memory_used@@Base+0x69d4>
  41884c:	mov	x0, xzr
  418850:	ret
  418854:	mov	x9, xzr
  418858:	ldr	x8, [x0, #16]
  41885c:	ldr	x8, [x8, x9, lsl #3]
  418860:	cmp	x8, x1
  418864:	csinc	x0, xzr, x9, ne  // ne = any
  418868:	ret
  41886c:	stp	x29, x30, [sp, #-96]!
  418870:	stp	x28, x27, [sp, #16]
  418874:	stp	x26, x25, [sp, #32]
  418878:	stp	x24, x23, [sp, #48]
  41887c:	stp	x22, x21, [sp, #64]
  418880:	stp	x20, x19, [sp, #80]
  418884:	ldr	x8, [x2, #8]
  418888:	mov	x19, x0
  41888c:	mov	x29, sp
  418890:	cbz	x8, 418960 <_obstack_memory_used@@Base+0x6adc>
  418894:	mov	x22, x1
  418898:	mov	x0, x2
  41889c:	mov	w1, w3
  4188a0:	mov	w20, w3
  4188a4:	mov	x21, x2
  4188a8:	bl	418988 <_obstack_memory_used@@Base+0x6b04>
  4188ac:	ldr	x9, [x22, #136]
  4188b0:	ldr	x8, [x22, #64]
  4188b4:	mov	w10, #0x18                  	// #24
  4188b8:	mov	x23, x0
  4188bc:	and	x9, x9, x0
  4188c0:	madd	x25, x9, x10, x8
  4188c4:	ldr	x10, [x25]
  4188c8:	cmp	x10, #0x1
  4188cc:	b.lt	418938 <_obstack_memory_used@@Base+0x6ab4>  // b.tstop
  4188d0:	mov	w10, #0x18                  	// #24
  4188d4:	madd	x8, x9, x10, x8
  4188d8:	ldr	x27, [x8, #16]
  4188dc:	mov	x26, xzr
  4188e0:	ldr	x28, [x27, x26, lsl #3]
  4188e4:	ldr	x8, [x28]
  4188e8:	cmp	x8, x23
  4188ec:	b.ne	418920 <_obstack_memory_used@@Base+0x6a9c>  // b.any
  4188f0:	ldrb	w8, [x28, #104]
  4188f4:	and	w8, w8, #0xf
  4188f8:	cmp	w8, w20
  4188fc:	b.ne	418920 <_obstack_memory_used@@Base+0x6a9c>  // b.any
  418900:	ldr	x0, [x28, #80]
  418904:	mov	x1, x21
  418908:	bl	4189b4 <_obstack_memory_used@@Base+0x6b30>
  41890c:	tbz	w0, #0, 418920 <_obstack_memory_used@@Base+0x6a9c>
  418910:	mov	x24, x28
  418914:	mov	w8, wzr
  418918:	tbnz	wzr, #0, 418928 <_obstack_memory_used@@Base+0x6aa4>
  41891c:	b	418968 <_obstack_memory_used@@Base+0x6ae4>
  418920:	mov	w8, #0x1                   	// #1
  418924:	tbz	w8, #0, 418968 <_obstack_memory_used@@Base+0x6ae4>
  418928:	ldr	x8, [x25]
  41892c:	add	x26, x26, #0x1
  418930:	cmp	x26, x8
  418934:	b.lt	4188e0 <_obstack_memory_used@@Base+0x6a5c>  // b.tstop
  418938:	mov	x0, x22
  41893c:	mov	x1, x21
  418940:	mov	w2, w20
  418944:	mov	x3, x23
  418948:	bl	418a14 <_obstack_memory_used@@Base+0x6b90>
  41894c:	mov	x24, x0
  418950:	cbnz	x0, 418968 <_obstack_memory_used@@Base+0x6ae4>
  418954:	mov	w8, #0xc                   	// #12
  418958:	str	w8, [x19]
  41895c:	b	418968 <_obstack_memory_used@@Base+0x6ae4>
  418960:	mov	x24, xzr
  418964:	str	wzr, [x19]
  418968:	mov	x0, x24
  41896c:	ldp	x20, x19, [sp, #80]
  418970:	ldp	x22, x21, [sp, #64]
  418974:	ldp	x24, x23, [sp, #48]
  418978:	ldp	x26, x25, [sp, #32]
  41897c:	ldp	x28, x27, [sp, #16]
  418980:	ldp	x29, x30, [sp], #96
  418984:	ret
  418988:	ldr	x9, [x0, #8]
  41898c:	mov	x8, x0
  418990:	cmp	x9, #0x1
  418994:	add	x0, x9, w1, uxtw
  418998:	b.lt	4189b0 <_obstack_memory_used@@Base+0x6b2c>  // b.tstop
  41899c:	ldr	x8, [x8, #16]
  4189a0:	ldr	x10, [x8], #8
  4189a4:	subs	x9, x9, #0x1
  4189a8:	add	x0, x10, x0
  4189ac:	b.ne	4189a0 <_obstack_memory_used@@Base+0x6b1c>  // b.any
  4189b0:	ret
  4189b4:	mov	w8, wzr
  4189b8:	cbz	x0, 418a04 <_obstack_memory_used@@Base+0x6b80>
  4189bc:	cbz	x1, 418a04 <_obstack_memory_used@@Base+0x6b80>
  4189c0:	ldr	x8, [x0, #8]
  4189c4:	ldr	x9, [x1, #8]
  4189c8:	cmp	x8, x9
  4189cc:	b.ne	418a00 <_obstack_memory_used@@Base+0x6b7c>  // b.any
  4189d0:	sub	x8, x8, #0x1
  4189d4:	add	x9, x8, #0x1
  4189d8:	cmp	x9, #0x1
  4189dc:	b.lt	418a0c <_obstack_memory_used@@Base+0x6b88>  // b.tstop
  4189e0:	ldr	x9, [x0, #16]
  4189e4:	ldr	x10, [x1, #16]
  4189e8:	lsl	x11, x8, #3
  4189ec:	sub	x8, x8, #0x1
  4189f0:	ldr	x9, [x9, x11]
  4189f4:	ldr	x10, [x10, x11]
  4189f8:	cmp	x9, x10
  4189fc:	b.eq	4189d4 <_obstack_memory_used@@Base+0x6b50>  // b.none
  418a00:	mov	w8, wzr
  418a04:	mov	w0, w8
  418a08:	ret
  418a0c:	mov	w0, #0x1                   	// #1
  418a10:	ret
  418a14:	stp	x29, x30, [sp, #-96]!
  418a18:	stp	x24, x23, [sp, #48]
  418a1c:	stp	x22, x21, [sp, #64]
  418a20:	mov	x23, x1
  418a24:	mov	x21, x0
  418a28:	mov	w0, #0x70                  	// #112
  418a2c:	mov	w1, #0x1                   	// #1
  418a30:	str	x27, [sp, #16]
  418a34:	stp	x26, x25, [sp, #32]
  418a38:	stp	x20, x19, [sp, #80]
  418a3c:	mov	x29, sp
  418a40:	mov	x20, x3
  418a44:	mov	w22, w2
  418a48:	bl	402a10 <calloc@plt>
  418a4c:	mov	x19, x0
  418a50:	cbz	x0, 418bd0 <_obstack_memory_used@@Base+0x6d4c>
  418a54:	add	x24, x19, #0x8
  418a58:	mov	x0, x24
  418a5c:	mov	x1, x23
  418a60:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  418a64:	cbnz	w0, 418bc4 <_obstack_memory_used@@Base+0x6d40>
  418a68:	ldrb	w8, [x19, #104]
  418a6c:	str	x24, [x19, #80]
  418a70:	bfxil	w8, w22, #0, #4
  418a74:	strb	w8, [x19, #104]
  418a78:	ldr	x8, [x23, #8]
  418a7c:	cmp	x8, #0x1
  418a80:	b.lt	418ba4 <_obstack_memory_used@@Base+0x6d20>  // b.tstop
  418a84:	mov	x25, xzr
  418a88:	mov	x26, xzr
  418a8c:	ldr	x8, [x23, #16]
  418a90:	ldr	x9, [x21]
  418a94:	ldr	x8, [x8, x25, lsl #3]
  418a98:	add	x8, x9, x8, lsl #4
  418a9c:	ldr	w27, [x8, #8]
  418aa0:	and	w8, w27, #0x3ffff
  418aa4:	cmp	w8, #0x1
  418aa8:	b.ne	418ab4 <_obstack_memory_used@@Base+0x6c30>  // b.any
  418aac:	mov	w8, #0x4                   	// #4
  418ab0:	b	418b88 <_obstack_memory_used@@Base+0x6d04>
  418ab4:	ldrb	w9, [x19, #104]
  418ab8:	lsr	w11, w27, #15
  418abc:	and	w10, w27, #0xff
  418ac0:	and	w11, w11, #0x20
  418ac4:	and	w8, w27, #0x3ff00
  418ac8:	orr	w9, w9, w11
  418acc:	cmp	w10, #0x2
  418ad0:	strb	w9, [x19, #104]
  418ad4:	b.eq	418ae8 <_obstack_memory_used@@Base+0x6c64>  // b.none
  418ad8:	cmp	w10, #0x4
  418adc:	b.ne	418af4 <_obstack_memory_used@@Base+0x6c70>  // b.any
  418ae0:	mov	w10, #0x40                  	// #64
  418ae4:	b	418aec <_obstack_memory_used@@Base+0x6c68>
  418ae8:	mov	w10, #0x10                  	// #16
  418aec:	orr	w9, w9, w10
  418af0:	strb	w9, [x19, #104]
  418af4:	cbz	w8, 418b88 <_obstack_memory_used@@Base+0x6d04>
  418af8:	ldr	x8, [x19, #80]
  418afc:	cmp	x8, x24
  418b00:	b.eq	418b40 <_obstack_memory_used@@Base+0x6cbc>  // b.none
  418b04:	tbnz	w22, #0, 418b0c <_obstack_memory_used@@Base+0x6c88>
  418b08:	tbnz	w27, #8, 418b28 <_obstack_memory_used@@Base+0x6ca4>
  418b0c:	tbz	w22, #0, 418b14 <_obstack_memory_used@@Base+0x6c90>
  418b10:	tbnz	w27, #9, 418b28 <_obstack_memory_used@@Base+0x6ca4>
  418b14:	tbnz	w22, #1, 418b1c <_obstack_memory_used@@Base+0x6c98>
  418b18:	tbnz	w27, #12, 418b28 <_obstack_memory_used@@Base+0x6ca4>
  418b1c:	mov	w8, wzr
  418b20:	tbnz	w22, #2, 418b88 <_obstack_memory_used@@Base+0x6d04>
  418b24:	tbz	w27, #14, 418b88 <_obstack_memory_used@@Base+0x6d04>
  418b28:	sub	x1, x25, x26
  418b2c:	mov	x0, x24
  418b30:	bl	418bf0 <_obstack_memory_used@@Base+0x6d6c>
  418b34:	mov	w8, wzr
  418b38:	add	x26, x26, #0x1
  418b3c:	b	418b88 <_obstack_memory_used@@Base+0x6d04>
  418b40:	mov	w0, #0x18                  	// #24
  418b44:	bl	4028e0 <malloc@plt>
  418b48:	cbz	x0, 418b5c <_obstack_memory_used@@Base+0x6cd8>
  418b4c:	mov	x1, x23
  418b50:	str	x0, [x19, #80]
  418b54:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  418b58:	cbz	w0, 418b70 <_obstack_memory_used@@Base+0x6cec>
  418b5c:	mov	x0, x19
  418b60:	bl	4134a4 <_obstack_memory_used@@Base+0x1620>
  418b64:	mov	w8, #0x1                   	// #1
  418b68:	cbnz	w8, 418b88 <_obstack_memory_used@@Base+0x6d04>
  418b6c:	b	418b04 <_obstack_memory_used@@Base+0x6c80>
  418b70:	ldrb	w9, [x19, #104]
  418b74:	mov	w8, wzr
  418b78:	mov	x26, xzr
  418b7c:	orr	w9, w9, #0x80
  418b80:	strb	w9, [x19, #104]
  418b84:	cbz	w8, 418b04 <_obstack_memory_used@@Base+0x6c80>
  418b88:	orr	w8, w8, #0x4
  418b8c:	cmp	w8, #0x4
  418b90:	b.ne	418bcc <_obstack_memory_used@@Base+0x6d48>  // b.any
  418b94:	ldr	x8, [x23, #8]
  418b98:	add	x25, x25, #0x1
  418b9c:	cmp	x25, x8
  418ba0:	b.lt	418a8c <_obstack_memory_used@@Base+0x6c08>  // b.tstop
  418ba4:	mov	x0, x21
  418ba8:	mov	x1, x19
  418bac:	mov	x2, x20
  418bb0:	bl	418c34 <_obstack_memory_used@@Base+0x6db0>
  418bb4:	cbz	w0, 418bd0 <_obstack_memory_used@@Base+0x6d4c>
  418bb8:	mov	x0, x19
  418bbc:	bl	4134a4 <_obstack_memory_used@@Base+0x1620>
  418bc0:	b	418bcc <_obstack_memory_used@@Base+0x6d48>
  418bc4:	mov	x0, x19
  418bc8:	bl	402bd0 <free@plt>
  418bcc:	mov	x19, xzr
  418bd0:	mov	x0, x19
  418bd4:	ldp	x20, x19, [sp, #80]
  418bd8:	ldp	x22, x21, [sp, #64]
  418bdc:	ldp	x24, x23, [sp, #48]
  418be0:	ldp	x26, x25, [sp, #32]
  418be4:	ldr	x27, [sp, #16]
  418be8:	ldp	x29, x30, [sp], #96
  418bec:	ret
  418bf0:	tbnz	x1, #63, 418c30 <_obstack_memory_used@@Base+0x6dac>
  418bf4:	ldr	x8, [x0, #8]
  418bf8:	cmp	x8, x1
  418bfc:	b.le	418c30 <_obstack_memory_used@@Base+0x6dac>
  418c00:	sub	x8, x8, #0x1
  418c04:	cmp	x8, x1
  418c08:	str	x8, [x0, #8]
  418c0c:	b.le	418c30 <_obstack_memory_used@@Base+0x6dac>
  418c10:	ldr	x8, [x0, #16]
  418c14:	add	x9, x8, x1, lsl #3
  418c18:	ldr	x10, [x9, #8]
  418c1c:	add	x1, x1, #0x1
  418c20:	str	x10, [x9]
  418c24:	ldr	x9, [x0, #8]
  418c28:	cmp	x1, x9
  418c2c:	b.lt	418c14 <_obstack_memory_used@@Base+0x6d90>  // b.tstop
  418c30:	ret
  418c34:	stp	x29, x30, [sp, #-80]!
  418c38:	stp	x24, x23, [sp, #32]
  418c3c:	stp	x22, x21, [sp, #48]
  418c40:	stp	x20, x19, [sp, #64]
  418c44:	mov	x19, x1
  418c48:	ldr	x1, [x1, #16]
  418c4c:	add	x22, x19, #0x20
  418c50:	mov	x21, x0
  418c54:	mov	x0, x22
  418c58:	str	x25, [sp, #16]
  418c5c:	mov	x29, sp
  418c60:	mov	x20, x2
  418c64:	str	x2, [x19]
  418c68:	bl	41813c <_obstack_memory_used@@Base+0x62b8>
  418c6c:	cbnz	w0, 418cb8 <_obstack_memory_used@@Base+0x6e34>
  418c70:	ldr	x8, [x19, #16]
  418c74:	cmp	x8, #0x1
  418c78:	b.lt	418cc0 <_obstack_memory_used@@Base+0x6e3c>  // b.tstop
  418c7c:	mov	x23, xzr
  418c80:	b	418c94 <_obstack_memory_used@@Base+0x6e10>
  418c84:	ldr	x8, [x19, #16]
  418c88:	add	x23, x23, #0x1
  418c8c:	cmp	x23, x8
  418c90:	b.ge	418cc0 <_obstack_memory_used@@Base+0x6e3c>  // b.tcont
  418c94:	ldr	x8, [x19, #24]
  418c98:	ldr	x1, [x8, x23, lsl #3]
  418c9c:	ldr	x8, [x21]
  418ca0:	add	x8, x8, x1, lsl #4
  418ca4:	ldrb	w8, [x8, #8]
  418ca8:	tbnz	w8, #3, 418c84 <_obstack_memory_used@@Base+0x6e00>
  418cac:	mov	x0, x22
  418cb0:	bl	418734 <_obstack_memory_used@@Base+0x68b0>
  418cb4:	tbnz	w0, #0, 418c84 <_obstack_memory_used@@Base+0x6e00>
  418cb8:	mov	w0, #0xc                   	// #12
  418cbc:	b	418d08 <_obstack_memory_used@@Base+0x6e84>
  418cc0:	ldr	x8, [x21, #136]
  418cc4:	ldr	x21, [x21, #64]
  418cc8:	mov	w9, #0x18                  	// #24
  418ccc:	and	x22, x8, x20
  418cd0:	madd	x20, x22, x9, x21
  418cd4:	mov	x23, x20
  418cd8:	ldr	x9, [x23, #8]!
  418cdc:	ldr	x8, [x20]
  418ce0:	cmp	x9, x8
  418ce4:	b.le	418d20 <_obstack_memory_used@@Base+0x6e9c>
  418ce8:	mov	w8, #0x18                  	// #24
  418cec:	ldr	x9, [x20]
  418cf0:	madd	x8, x22, x8, x21
  418cf4:	ldr	x8, [x8, #16]
  418cf8:	mov	w0, wzr
  418cfc:	add	x10, x9, #0x1
  418d00:	str	x10, [x20]
  418d04:	str	x19, [x8, x9, lsl #3]
  418d08:	ldp	x20, x19, [sp, #64]
  418d0c:	ldp	x22, x21, [sp, #48]
  418d10:	ldp	x24, x23, [sp, #32]
  418d14:	ldr	x25, [sp, #16]
  418d18:	ldp	x29, x30, [sp], #80
  418d1c:	ret
  418d20:	mov	w9, #0x18                  	// #24
  418d24:	madd	x24, x22, x9, x21
  418d28:	ldr	x0, [x24, #16]!
  418d2c:	lsl	x8, x8, #1
  418d30:	add	x25, x8, #0x2
  418d34:	lsl	x1, x25, #3
  418d38:	bl	402a40 <realloc@plt>
  418d3c:	cbz	x0, 418cb8 <_obstack_memory_used@@Base+0x6e34>
  418d40:	str	x0, [x24]
  418d44:	str	x25, [x23]
  418d48:	b	418ce8 <_obstack_memory_used@@Base+0x6e64>
  418d4c:	stp	x29, x30, [sp, #-64]!
  418d50:	stp	x24, x23, [sp, #16]
  418d54:	stp	x22, x21, [sp, #32]
  418d58:	stp	x20, x19, [sp, #48]
  418d5c:	mov	x20, x2
  418d60:	mov	x21, x1
  418d64:	mov	x19, x0
  418d68:	cmp	w3, #0x1
  418d6c:	add	x24, x2, #0x1
  418d70:	mov	x29, sp
  418d74:	b.eq	418dac <_obstack_memory_used@@Base+0x6f28>  // b.none
  418d78:	cbnz	w3, 418dec <_obstack_memory_used@@Base+0x6f68>
  418d7c:	lsl	x23, x24, #3
  418d80:	mov	x0, x23
  418d84:	bl	4028e0 <malloc@plt>
  418d88:	str	x0, [x19, #8]
  418d8c:	cbz	x0, 418e2c <_obstack_memory_used@@Base+0x6fa8>
  418d90:	mov	x22, x0
  418d94:	mov	x0, x23
  418d98:	bl	4028e0 <malloc@plt>
  418d9c:	str	x0, [x19, #16]
  418da0:	cbz	x0, 418e70 <_obstack_memory_used@@Base+0x6fec>
  418da4:	str	x24, [x19]
  418da8:	b	418db8 <_obstack_memory_used@@Base+0x6f34>
  418dac:	ldr	x8, [x19]
  418db0:	cmp	x24, x8
  418db4:	b.hi	418e40 <_obstack_memory_used@@Base+0x6fbc>  // b.pmore
  418db8:	mov	w0, #0x1                   	// #1
  418dbc:	cmp	x20, #0x1
  418dc0:	b.lt	418df8 <_obstack_memory_used@@Base+0x6f74>  // b.tstop
  418dc4:	ldp	x8, x9, [x19, #8]
  418dc8:	add	x10, x21, #0x8
  418dcc:	mov	x11, x20
  418dd0:	ldur	x12, [x10, #-8]
  418dd4:	subs	x11, x11, #0x1
  418dd8:	str	x12, [x8], #8
  418ddc:	ldr	x12, [x10], #16
  418de0:	str	x12, [x9], #8
  418de4:	b.ne	418dd0 <_obstack_memory_used@@Base+0x6f4c>  // b.any
  418de8:	b	418dfc <_obstack_memory_used@@Base+0x6f78>
  418dec:	mov	w0, #0x2                   	// #2
  418df0:	cmp	x20, #0x1
  418df4:	b.ge	418dc4 <_obstack_memory_used@@Base+0x6f40>  // b.tcont
  418df8:	mov	x20, xzr
  418dfc:	ldr	x8, [x19]
  418e00:	cmp	x20, x8
  418e04:	b.cs	418e2c <_obstack_memory_used@@Base+0x6fa8>  // b.hs, b.nlast
  418e08:	ldp	x9, x8, [x19, #8]
  418e0c:	mov	x10, #0xffffffffffffffff    	// #-1
  418e10:	lsl	x11, x20, #3
  418e14:	str	x10, [x8, x11]
  418e18:	str	x10, [x9, x11]
  418e1c:	ldr	x11, [x19]
  418e20:	add	x20, x20, #0x1
  418e24:	cmp	x20, x11
  418e28:	b.cc	418e10 <_obstack_memory_used@@Base+0x6f8c>  // b.lo, b.ul, b.last
  418e2c:	ldp	x20, x19, [sp, #48]
  418e30:	ldp	x22, x21, [sp, #32]
  418e34:	ldp	x24, x23, [sp, #16]
  418e38:	ldp	x29, x30, [sp], #64
  418e3c:	ret
  418e40:	ldr	x0, [x19, #8]
  418e44:	lsl	x23, x24, #3
  418e48:	mov	x1, x23
  418e4c:	bl	402a40 <realloc@plt>
  418e50:	cbz	x0, 418e2c <_obstack_memory_used@@Base+0x6fa8>
  418e54:	mov	x22, x0
  418e58:	ldr	x0, [x19, #16]
  418e5c:	mov	x1, x23
  418e60:	bl	402a40 <realloc@plt>
  418e64:	cbz	x0, 418e70 <_obstack_memory_used@@Base+0x6fec>
  418e68:	stp	x22, x0, [x19, #8]
  418e6c:	b	418da4 <_obstack_memory_used@@Base+0x6f20>
  418e70:	mov	x0, x22
  418e74:	bl	402bd0 <free@plt>
  418e78:	mov	w0, wzr
  418e7c:	b	418e2c <_obstack_memory_used@@Base+0x6fa8>
  418e80:	stp	x29, x30, [sp, #-64]!
  418e84:	stp	x22, x21, [sp, #32]
  418e88:	stp	x20, x19, [sp, #48]
  418e8c:	ldrsw	x9, [x6, #180]
  418e90:	add	x10, x2, #0x1
  418e94:	mov	x8, x4
  418e98:	mov	x19, x0
  418e9c:	cmp	x9, x3
  418ea0:	csel	x9, x9, x3, gt
  418ea4:	cmp	x10, x9
  418ea8:	str	x23, [sp, #16]
  418eac:	mov	x21, x2
  418eb0:	mov	x22, x1
  418eb4:	csinc	x23, x9, x2, ge  // ge = tcont
  418eb8:	and	w4, w5, #0x1
  418ebc:	mov	x0, x1
  418ec0:	mov	x1, x2
  418ec4:	mov	x2, x19
  418ec8:	mov	x3, x8
  418ecc:	mov	x5, x6
  418ed0:	mov	x29, sp
  418ed4:	mov	x20, x6
  418ed8:	bl	413f60 <_obstack_memory_used@@Base+0x20dc>
  418edc:	mov	x0, x19
  418ee0:	mov	x1, x23
  418ee4:	bl	413fb0 <_obstack_memory_used@@Base+0x212c>
  418ee8:	cbnz	w0, 418f28 <_obstack_memory_used@@Base+0x70a4>
  418eec:	add	x8, x20, #0xb8
  418ef0:	str	x8, [x19, #128]
  418ef4:	ldrb	w8, [x20, #176]
  418ef8:	ldrb	w9, [x19, #139]
  418efc:	ubfx	w8, w8, #4, #1
  418f00:	strb	w8, [x19, #142]
  418f04:	cbz	w9, 418f10 <_obstack_memory_used@@Base+0x708c>
  418f08:	mov	x8, xzr
  418f0c:	b	418f20 <_obstack_memory_used@@Base+0x709c>
  418f10:	str	x22, [x19, #8]
  418f14:	ldr	w8, [x20, #180]
  418f18:	cmp	w8, #0x1
  418f1c:	csel	x8, xzr, x21, gt
  418f20:	mov	w0, wzr
  418f24:	stp	x8, x8, [x19, #48]
  418f28:	ldp	x20, x19, [sp, #48]
  418f2c:	ldp	x22, x21, [sp, #32]
  418f30:	ldr	x23, [sp, #16]
  418f34:	ldp	x29, x30, [sp], #64
  418f38:	ret
  418f3c:	stp	x29, x30, [sp, #-48]!
  418f40:	stp	x20, x19, [sp, #32]
  418f44:	mov	x19, x2
  418f48:	mov	x20, x0
  418f4c:	mov	x8, #0xffffffffffffffff    	// #-1
  418f50:	cmp	x2, #0x1
  418f54:	str	x21, [sp, #16]
  418f58:	mov	x29, sp
  418f5c:	str	w1, [x0, #160]
  418f60:	str	x8, [x0, #168]
  418f64:	b.lt	418fa8 <_obstack_memory_used@@Base+0x7124>  // b.tstop
  418f68:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  418f6c:	movk	x8, #0x666, lsl #48
  418f70:	cmp	x19, x8
  418f74:	b.hi	418fcc <_obstack_memory_used@@Base+0x7148>  // b.pmore
  418f78:	add	x8, x19, x19, lsl #2
  418f7c:	lsl	x0, x8, #3
  418f80:	bl	4028e0 <malloc@plt>
  418f84:	mov	x21, x0
  418f88:	str	x0, [x20, #216]
  418f8c:	lsl	x0, x19, #3
  418f90:	bl	4028e0 <malloc@plt>
  418f94:	mov	x8, x0
  418f98:	str	x0, [x20, #248]
  418f9c:	mov	w0, #0xc                   	// #12
  418fa0:	cbz	x21, 418fbc <_obstack_memory_used@@Base+0x7138>
  418fa4:	cbz	x8, 418fbc <_obstack_memory_used@@Base+0x7138>
  418fa8:	mov	w0, wzr
  418fac:	mov	w8, #0x1                   	// #1
  418fb0:	str	x19, [x20, #208]
  418fb4:	str	w8, [x20, #224]
  418fb8:	str	x19, [x20, #240]
  418fbc:	ldp	x20, x19, [sp, #32]
  418fc0:	ldr	x21, [sp, #16]
  418fc4:	ldp	x29, x30, [sp], #48
  418fc8:	ret
  418fcc:	mov	w0, #0xc                   	// #12
  418fd0:	b	418fbc <_obstack_memory_used@@Base+0x7138>
  418fd4:	sub	sp, sp, #0x60
  418fd8:	stp	x29, x30, [sp, #16]
  418fdc:	str	x25, [sp, #32]
  418fe0:	stp	x24, x23, [sp, #48]
  418fe4:	stp	x22, x21, [sp, #64]
  418fe8:	stp	x20, x19, [sp, #80]
  418fec:	mov	x8, x0
  418ff0:	ldr	x9, [x8, #40]!
  418ff4:	mov	x19, x0
  418ff8:	mov	x20, x1
  418ffc:	mov	w21, w2
  419000:	cmp	x9, x1
  419004:	add	x29, sp, #0x10
  419008:	b.le	41915c <_obstack_memory_used@@Base+0x72d8>
  41900c:	ldr	w9, [x19, #144]
  419010:	cmp	w9, #0x2
  419014:	b.lt	41901c <_obstack_memory_used@@Base+0x7198>  // b.tstop
  419018:	str	xzr, [x19, #32]
  41901c:	ldr	x9, [x19, #80]
  419020:	ldr	x10, [x19, #96]
  419024:	strb	wzr, [x19, #140]
  419028:	tst	w21, #0x1
  41902c:	str	x9, [x19, #88]
  419030:	str	x10, [x19, #104]
  419034:	stp	xzr, xzr, [x8]
  419038:	str	xzr, [x8, #16]
  41903c:	ldrb	w8, [x19, #139]
  419040:	mov	w9, #0x4                   	// #4
  419044:	mov	w10, #0x6                   	// #6
  419048:	csel	w9, w10, w9, eq  // eq = none
  41904c:	mov	x22, x20
  419050:	str	w9, [x19, #112]
  419054:	cbnz	w8, 419064 <_obstack_memory_used@@Base+0x71e0>
  419058:	ldr	x8, [x19]
  41905c:	mov	x22, x20
  419060:	str	x8, [x19, #8]
  419064:	cbz	x22, 4190e0 <_obstack_memory_used@@Base+0x725c>
  419068:	ldr	x8, [x19, #56]
  41906c:	cmp	x22, x8
  419070:	b.ge	419168 <_obstack_memory_used@@Base+0x72e4>  // b.tcont
  419074:	ldrb	w8, [x19, #140]
  419078:	cbnz	w8, 41927c <_obstack_memory_used@@Base+0x73f8>
  41907c:	sub	x1, x22, #0x1
  419080:	mov	x0, x19
  419084:	mov	w2, w21
  419088:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41908c:	ldr	w8, [x19, #144]
  419090:	str	w0, [x19, #112]
  419094:	cmp	w8, #0x2
  419098:	b.lt	4190b4 <_obstack_memory_used@@Base+0x7230>  // b.tstop
  41909c:	ldr	x8, [x19, #48]
  4190a0:	ldr	x0, [x19, #16]
  4190a4:	sub	x8, x8, x22
  4190a8:	add	x1, x0, x22, lsl #2
  4190ac:	lsl	x2, x8, #2
  4190b0:	bl	402720 <memmove@plt>
  4190b4:	ldrb	w8, [x19, #139]
  4190b8:	cbnz	w8, 419370 <_obstack_memory_used@@Base+0x74ec>
  4190bc:	ldp	x8, x9, [x19, #48]
  4190c0:	sub	x8, x8, x22
  4190c4:	sub	x9, x9, x22
  4190c8:	stp	x8, x9, [x19, #48]
  4190cc:	ldrb	w8, [x19, #139]
  4190d0:	cbnz	w8, 4190e0 <_obstack_memory_used@@Base+0x725c>
  4190d4:	ldr	x8, [x19, #8]
  4190d8:	add	x8, x8, x22
  4190dc:	str	x8, [x19, #8]
  4190e0:	ldr	x8, [x19, #88]
  4190e4:	ldr	x9, [x19, #104]
  4190e8:	ldr	w10, [x19, #144]
  4190ec:	str	x20, [x19, #40]
  4190f0:	sub	x8, x8, x22
  4190f4:	sub	x9, x9, x22
  4190f8:	cmp	w10, #0x2
  4190fc:	str	x8, [x19, #88]
  419100:	str	x9, [x19, #104]
  419104:	b.lt	419120 <_obstack_memory_used@@Base+0x729c>  // b.tstop
  419108:	ldrb	w8, [x19, #136]
  41910c:	cbz	w8, 419130 <_obstack_memory_used@@Base+0x72ac>
  419110:	mov	x0, x19
  419114:	bl	414064 <_obstack_memory_used@@Base+0x21e0>
  419118:	cbnz	w0, 419140 <_obstack_memory_used@@Base+0x72bc>
  41911c:	b	419138 <_obstack_memory_used@@Base+0x72b4>
  419120:	ldrb	w9, [x19, #139]
  419124:	cbnz	w9, 4193fc <_obstack_memory_used@@Base+0x7578>
  419128:	str	x8, [x19, #48]
  41912c:	b	419138 <_obstack_memory_used@@Base+0x72b4>
  419130:	mov	x0, x19
  419134:	bl	4146dc <_obstack_memory_used@@Base+0x2858>
  419138:	mov	w0, wzr
  41913c:	str	xzr, [x19, #72]
  419140:	ldp	x20, x19, [sp, #80]
  419144:	ldp	x22, x21, [sp, #64]
  419148:	ldp	x24, x23, [sp, #48]
  41914c:	ldr	x25, [sp, #32]
  419150:	ldp	x29, x30, [sp, #16]
  419154:	add	sp, sp, #0x60
  419158:	ret
  41915c:	sub	x22, x20, x9
  419160:	cbnz	x22, 419068 <_obstack_memory_used@@Base+0x71e4>
  419164:	b	4190e0 <_obstack_memory_used@@Base+0x725c>
  419168:	ldrb	w8, [x19, #140]
  41916c:	ldr	x23, [x19, #48]
  419170:	cbnz	w8, 4194f4 <_obstack_memory_used@@Base+0x7670>
  419174:	ldrsw	x8, [x19, #144]
  419178:	str	xzr, [x19, #48]
  41917c:	cmp	w8, #0x2
  419180:	b.lt	419410 <_obstack_memory_used@@Base+0x758c>  // b.tstop
  419184:	mov	w9, #0xffffffff            	// #-1
  419188:	str	w9, [x29, #28]
  41918c:	ldrb	w9, [x19, #137]
  419190:	cbz	w9, 419228 <_obstack_memory_used@@Base+0x73a4>
  419194:	ldr	x9, [x19]
  419198:	ldr	x11, [x19, #40]
  41919c:	sub	x8, x22, x8
  4191a0:	add	x10, x9, x11
  4191a4:	add	x11, x22, x11
  4191a8:	add	x8, x10, x8
  4191ac:	add	x11, x11, x9
  4191b0:	cmp	x8, x9
  4191b4:	add	x24, x10, x22
  4191b8:	csel	x9, x9, x8, cc  // cc = lo, ul, last
  4191bc:	sub	x8, x11, #0x1
  4191c0:	cmp	x8, x9
  4191c4:	b.cc	419228 <_obstack_memory_used@@Base+0x73a4>  // b.lo, b.ul, b.last
  4191c8:	ldrb	w11, [x8], #-1
  4191cc:	and	w11, w11, #0xc0
  4191d0:	cmp	w11, #0x80
  4191d4:	b.eq	4191c0 <_obstack_memory_used@@Base+0x733c>  // b.none
  4191d8:	ldr	x11, [x19, #88]
  4191dc:	ldr	x9, [x19, #120]
  4191e0:	add	x25, x8, #0x1
  4191e4:	mov	x1, x25
  4191e8:	add	x10, x10, x11
  4191ec:	sub	x2, x10, x25
  4191f0:	cbnz	x9, 419564 <_obstack_memory_used@@Base+0x76e0>
  4191f4:	add	x0, x29, #0x18
  4191f8:	add	x3, sp, #0x8
  4191fc:	str	xzr, [sp, #8]
  419200:	bl	411af4 <wcrtomb@plt+0xecc4>
  419204:	sub	x8, x24, x25
  419208:	subs	x8, x0, x8
  41920c:	b.cc	419228 <_obstack_memory_used@@Base+0x73a4>  // b.lo, b.ul, b.last
  419210:	cmn	x0, #0x3
  419214:	b.hi	419228 <_obstack_memory_used@@Base+0x73a4>  // b.pmore
  419218:	str	xzr, [x19, #32]
  41921c:	str	x8, [x19, #48]
  419220:	ldr	w8, [x29, #24]
  419224:	str	w8, [x29, #28]
  419228:	ldr	w8, [x29, #28]
  41922c:	cmn	w8, #0x1
  419230:	b.ne	41924c <_obstack_memory_used@@Base+0x73c8>  // b.any
  419234:	add	x2, x29, #0x1c
  419238:	mov	x0, x19
  41923c:	mov	x1, x20
  419240:	bl	419f90 <_obstack_memory_used@@Base+0x810c>
  419244:	sub	x8, x0, x20
  419248:	str	x8, [x19, #48]
  41924c:	ldr	w9, [x29, #28]
  419250:	cmn	w9, #0x1
  419254:	b.eq	4194b8 <_obstack_memory_used@@Base+0x7634>  // b.none
  419258:	ldrb	w8, [x19, #142]
  41925c:	cbnz	w8, 41953c <_obstack_memory_used@@Base+0x76b8>
  419260:	cmp	w9, #0xa
  419264:	b.ne	4194cc <_obstack_memory_used@@Base+0x7648>  // b.any
  419268:	ldrb	w8, [x19, #141]
  41926c:	cmp	w8, #0x0
  419270:	cset	w8, ne  // ne = any
  419274:	lsl	w0, w8, #1
  419278:	b	4194d0 <_obstack_memory_used@@Base+0x764c>
  41927c:	ldr	x24, [x19, #48]
  419280:	ldr	x23, [x19, #24]
  419284:	mov	x8, xzr
  419288:	mov	x10, x24
  41928c:	b	41929c <_obstack_memory_used@@Base+0x7418>
  419290:	cmp	x8, x12
  419294:	mov	x10, x12
  419298:	b.ge	4192cc <_obstack_memory_used@@Base+0x7448>  // b.tcont
  41929c:	add	x9, x8, x10
  4192a0:	cmp	x9, #0x0
  4192a4:	cinc	x9, x9, lt  // lt = tstop
  4192a8:	asr	x9, x9, #1
  4192ac:	ldr	x11, [x23, x9, lsl #3]
  4192b0:	mov	x12, x9
  4192b4:	cmp	x11, x22
  4192b8:	b.gt	419290 <_obstack_memory_used@@Base+0x740c>
  4192bc:	b.ge	4192cc <_obstack_memory_used@@Base+0x7448>  // b.tcont
  4192c0:	add	x8, x9, #0x1
  4192c4:	mov	x12, x10
  4192c8:	b	419290 <_obstack_memory_used@@Base+0x740c>
  4192cc:	cmp	x11, x22
  4192d0:	cinc	x25, x9, lt  // lt = tstop
  4192d4:	sub	x1, x25, #0x1
  4192d8:	mov	x0, x19
  4192dc:	mov	w2, w21
  4192e0:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  4192e4:	subs	x8, x24, x22
  4192e8:	str	w0, [x19, #112]
  4192ec:	b.le	419388 <_obstack_memory_used@@Base+0x7504>
  4192f0:	cmp	x25, x22
  4192f4:	b.ne	419388 <_obstack_memory_used@@Base+0x7504>  // b.any
  4192f8:	ldr	x9, [x23, x25, lsl #3]
  4192fc:	cmp	x9, x22
  419300:	b.ne	419388 <_obstack_memory_used@@Base+0x7504>  // b.any
  419304:	ldr	x0, [x19, #16]
  419308:	lsl	x2, x8, #2
  41930c:	add	x1, x0, x22, lsl #2
  419310:	bl	402720 <memmove@plt>
  419314:	ldr	x0, [x19, #8]
  419318:	ldr	x8, [x19, #48]
  41931c:	add	x1, x0, x22
  419320:	sub	x2, x8, x22
  419324:	bl	402720 <memmove@plt>
  419328:	ldp	x8, x9, [x19, #48]
  41932c:	sub	x8, x8, x22
  419330:	sub	x9, x9, x22
  419334:	cmp	x8, #0x1
  419338:	stp	x8, x9, [x19, #48]
  41933c:	b.lt	4190cc <_obstack_memory_used@@Base+0x7248>  // b.tstop
  419340:	ldr	x9, [x19, #24]
  419344:	mov	x8, xzr
  419348:	add	x10, x9, x22, lsl #3
  41934c:	lsl	x11, x8, #3
  419350:	ldr	x12, [x10, x11]
  419354:	add	x8, x8, #0x1
  419358:	sub	x12, x12, x22
  41935c:	str	x12, [x9, x11]
  419360:	ldr	x11, [x19, #48]
  419364:	cmp	x8, x11
  419368:	b.lt	41934c <_obstack_memory_used@@Base+0x74c8>  // b.tstop
  41936c:	b	4190cc <_obstack_memory_used@@Base+0x7248>
  419370:	ldr	x0, [x19, #8]
  419374:	ldr	x8, [x19, #48]
  419378:	add	x1, x0, x22
  41937c:	sub	x2, x8, x22
  419380:	bl	402720 <memmove@plt>
  419384:	b	4190bc <_obstack_memory_used@@Base+0x7238>
  419388:	ldr	x9, [x19, #96]
  41938c:	ldr	x8, [x19, #80]
  419390:	sub	x10, x22, x20
  419394:	strb	wzr, [x19, #140]
  419398:	add	x9, x10, x9
  41939c:	add	x8, x10, x8
  4193a0:	str	x9, [x19, #104]
  4193a4:	sub	x9, x23, #0x8
  4193a8:	str	x8, [x19, #88]
  4193ac:	mov	x8, x25
  4193b0:	subs	x25, x25, #0x1
  4193b4:	b.lt	4193c4 <_obstack_memory_used@@Base+0x7540>  // b.tstop
  4193b8:	ldr	x10, [x9, x8, lsl #3]
  4193bc:	cmp	x10, x22
  4193c0:	b.eq	4193ac <_obstack_memory_used@@Base+0x7528>  // b.none
  4193c4:	cmp	x8, x24
  4193c8:	b.ge	4193ec <_obstack_memory_used@@Base+0x7568>  // b.tcont
  4193cc:	ldr	x9, [x19, #16]
  4193d0:	ldr	w10, [x9, x8, lsl #2]
  4193d4:	cmn	w10, #0x1
  4193d8:	b.ne	4193ec <_obstack_memory_used@@Base+0x7568>  // b.any
  4193dc:	add	x8, x8, #0x1
  4193e0:	cmp	x24, x8
  4193e4:	b.ne	4193d0 <_obstack_memory_used@@Base+0x754c>  // b.any
  4193e8:	mov	x8, x24
  4193ec:	cmp	x8, x24
  4193f0:	b.ne	41944c <_obstack_memory_used@@Base+0x75c8>  // b.any
  4193f4:	str	xzr, [x19, #48]
  4193f8:	b	4194dc <_obstack_memory_used@@Base+0x7658>
  4193fc:	ldrb	w8, [x19, #136]
  419400:	cbz	w8, 4194a4 <_obstack_memory_used@@Base+0x7620>
  419404:	mov	x0, x19
  419408:	bl	41465c <_obstack_memory_used@@Base+0x27d8>
  41940c:	b	419138 <_obstack_memory_used@@Base+0x72b4>
  419410:	ldr	x8, [x19, #40]
  419414:	ldr	x9, [x19]
  419418:	add	x8, x22, x8
  41941c:	add	x9, x8, x9
  419420:	ldr	x8, [x19, #120]
  419424:	ldurb	w21, [x9, #-1]
  419428:	str	xzr, [x19, #56]
  41942c:	cbz	x8, 419434 <_obstack_memory_used@@Base+0x75b0>
  419430:	ldrb	w21, [x8, x21]
  419434:	ldr	x0, [x19, #128]
  419438:	mov	x1, x21
  41943c:	bl	41a054 <_obstack_memory_used@@Base+0x81d0>
  419440:	tbz	w0, #0, 419488 <_obstack_memory_used@@Base+0x7604>
  419444:	mov	w8, #0x1                   	// #1
  419448:	b	4194ec <_obstack_memory_used@@Base+0x7668>
  41944c:	ldr	x8, [x23, x8, lsl #3]
  419450:	subs	x21, x8, x22
  419454:	str	x21, [x19, #48]
  419458:	b.eq	4194dc <_obstack_memory_used@@Base+0x7658>  // b.none
  41945c:	cmp	x21, #0x1
  419460:	b.lt	419474 <_obstack_memory_used@@Base+0x75f0>  // b.tstop
  419464:	ldr	x0, [x19, #16]
  419468:	lsl	x2, x21, #2
  41946c:	mov	w1, #0xff                  	// #255
  419470:	bl	4029c0 <memset@plt>
  419474:	ldr	x0, [x19, #8]
  419478:	mov	w1, #0xff                  	// #255
  41947c:	mov	x2, x21
  419480:	bl	4029c0 <memset@plt>
  419484:	b	4194dc <_obstack_memory_used@@Base+0x7658>
  419488:	cmp	w21, #0xa
  41948c:	b.ne	4194e8 <_obstack_memory_used@@Base+0x7664>  // b.any
  419490:	ldrb	w8, [x19, #141]
  419494:	cmp	w8, #0x0
  419498:	cset	w8, ne  // ne = any
  41949c:	lsl	w8, w8, #1
  4194a0:	b	4194ec <_obstack_memory_used@@Base+0x7668>
  4194a4:	ldr	x8, [x19, #120]
  4194a8:	cbz	x8, 419138 <_obstack_memory_used@@Base+0x72b4>
  4194ac:	mov	x0, x19
  4194b0:	bl	414880 <_obstack_memory_used@@Base+0x29fc>
  4194b4:	b	419138 <_obstack_memory_used@@Base+0x72b4>
  4194b8:	sub	x1, x23, #0x1
  4194bc:	mov	x0, x19
  4194c0:	mov	w2, w21
  4194c4:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  4194c8:	b	4194d0 <_obstack_memory_used@@Base+0x764c>
  4194cc:	mov	w0, wzr
  4194d0:	ldr	x21, [x19, #48]
  4194d4:	str	w0, [x19, #112]
  4194d8:	cbnz	x21, 419518 <_obstack_memory_used@@Base+0x7694>
  4194dc:	ldr	x8, [x19, #48]
  4194e0:	str	x8, [x19, #56]
  4194e4:	b	4190cc <_obstack_memory_used@@Base+0x7248>
  4194e8:	mov	w8, wzr
  4194ec:	str	w8, [x19, #112]
  4194f0:	b	4190cc <_obstack_memory_used@@Base+0x7248>
  4194f4:	ldr	x8, [x19, #80]
  4194f8:	ldr	x9, [x19, #96]
  4194fc:	sub	x10, x22, x20
  419500:	strb	wzr, [x19, #140]
  419504:	add	x8, x10, x8
  419508:	add	x9, x10, x9
  41950c:	str	x8, [x19, #88]
  419510:	str	x9, [x19, #104]
  419514:	b	419174 <_obstack_memory_used@@Base+0x72f0>
  419518:	cmp	x21, #0x1
  41951c:	b.lt	419530 <_obstack_memory_used@@Base+0x76ac>  // b.tstop
  419520:	ldr	x0, [x19, #16]
  419524:	lsl	x2, x21, #2
  419528:	mov	w1, #0xff                  	// #255
  41952c:	bl	4029c0 <memset@plt>
  419530:	ldrb	w8, [x19, #139]
  419534:	cbnz	w8, 419474 <_obstack_memory_used@@Base+0x75f0>
  419538:	b	4194dc <_obstack_memory_used@@Base+0x7658>
  41953c:	mov	w0, w9
  419540:	mov	w21, w9
  419544:	bl	402ce0 <iswalnum@plt>
  419548:	mov	w8, w0
  41954c:	cmp	w21, #0x5f
  419550:	mov	w0, #0x1                   	// #1
  419554:	b.eq	4194d0 <_obstack_memory_used@@Base+0x764c>  // b.none
  419558:	mov	w9, w21
  41955c:	cbz	w8, 419260 <_obstack_memory_used@@Base+0x73dc>
  419560:	b	4194d0 <_obstack_memory_used@@Base+0x764c>
  419564:	cmp	x2, #0x6
  419568:	mov	w10, #0x6                   	// #6
  41956c:	csel	x10, x2, x10, lt  // lt = tstop
  419570:	cmp	w10, #0x1
  419574:	mov	x1, sp
  419578:	b.lt	4191f4 <_obstack_memory_used@@Base+0x7370>  // b.tstop
  41957c:	sxtw	x10, w10
  419580:	sub	x11, x1, #0x1
  419584:	ldrb	w12, [x8, x10]
  419588:	mov	x1, sp
  41958c:	ldrb	w12, [x9, x12]
  419590:	strb	w12, [x11, x10]
  419594:	subs	x10, x10, #0x1
  419598:	b.gt	419584 <_obstack_memory_used@@Base+0x7700>
  41959c:	b	4191f4 <_obstack_memory_used@@Base+0x7370>
  4195a0:	sub	sp, sp, #0x70
  4195a4:	stp	x29, x30, [sp, #16]
  4195a8:	stp	x28, x27, [sp, #32]
  4195ac:	stp	x26, x25, [sp, #48]
  4195b0:	stp	x24, x23, [sp, #64]
  4195b4:	stp	x22, x21, [sp, #80]
  4195b8:	stp	x20, x19, [sp, #96]
  4195bc:	ldr	x23, [x0, #152]
  4195c0:	add	x29, sp, #0x10
  4195c4:	ldr	x20, [x0, #72]
  4195c8:	stur	wzr, [x29, #-4]
  4195cc:	ldr	x24, [x23, #72]
  4195d0:	cmp	x2, #0x0
  4195d4:	mov	x25, x2
  4195d8:	mov	w21, w1
  4195dc:	ldrsb	w8, [x24, #104]
  4195e0:	mov	x22, x0
  4195e4:	cset	w19, ne  // ne = any
  4195e8:	tbz	w8, #31, 41961c <_obstack_memory_used@@Base+0x7798>
  4195ec:	ldr	w2, [x22, #160]
  4195f0:	sub	x1, x20, #0x1
  4195f4:	mov	x0, x22
  4195f8:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  4195fc:	tbnz	w0, #0, 419618 <_obstack_memory_used@@Base+0x7794>
  419600:	mov	w3, w0
  419604:	cbz	w0, 41961c <_obstack_memory_used@@Base+0x7798>
  419608:	tbz	w3, #1, 41964c <_obstack_memory_used@@Base+0x77c8>
  41960c:	tbz	w3, #2, 41964c <_obstack_memory_used@@Base+0x77c8>
  419610:	ldr	x24, [x23, #96]
  419614:	b	41961c <_obstack_memory_used@@Base+0x7798>
  419618:	ldr	x24, [x23, #80]
  41961c:	cbz	x24, 419870 <_obstack_memory_used@@Base+0x79ec>
  419620:	ldr	x8, [x22, #184]
  419624:	cbz	x8, 419634 <_obstack_memory_used@@Base+0x77b0>
  419628:	str	x24, [x8, x20, lsl #3]
  41962c:	ldr	x8, [x23, #152]
  419630:	cbnz	x8, 419688 <_obstack_memory_used@@Base+0x7804>
  419634:	ldrsb	w8, [x24, #104]
  419638:	str	x25, [sp]
  41963c:	tbnz	w8, #4, 419674 <_obstack_memory_used@@Base+0x77f0>
  419640:	mov	x27, xzr
  419644:	mov	x23, #0xffffffffffffffff    	// #-1
  419648:	b	419708 <_obstack_memory_used@@Base+0x7884>
  41964c:	tbnz	w3, #1, 41966c <_obstack_memory_used@@Base+0x77e8>
  419650:	tbz	w3, #2, 41961c <_obstack_memory_used@@Base+0x7798>
  419654:	ldr	x2, [x24, #80]
  419658:	sub	x0, x29, #0x4
  41965c:	mov	x1, x23
  419660:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  419664:	mov	x24, x0
  419668:	b	41961c <_obstack_memory_used@@Base+0x7798>
  41966c:	ldr	x24, [x23, #88]
  419670:	b	41961c <_obstack_memory_used@@Base+0x7798>
  419674:	tbnz	w8, #31, 4196c8 <_obstack_memory_used@@Base+0x7844>
  419678:	tbz	w21, #0, 4196ec <_obstack_memory_used@@Base+0x7868>
  41967c:	mov	w27, #0x1                   	// #1
  419680:	mov	x23, x20
  419684:	b	419708 <_obstack_memory_used@@Base+0x7884>
  419688:	add	x23, x24, #0x8
  41968c:	mov	x0, x22
  419690:	mov	x1, x23
  419694:	mov	x2, xzr
  419698:	bl	41a074 <_obstack_memory_used@@Base+0x81f0>
  41969c:	stur	w0, [x29, #-4]
  4196a0:	cbnz	w0, 419898 <_obstack_memory_used@@Base+0x7a14>
  4196a4:	ldrb	w8, [x24, #104]
  4196a8:	tbz	w8, #6, 4196c0 <_obstack_memory_used@@Base+0x783c>
  4196ac:	mov	x0, x22
  4196b0:	mov	x1, x23
  4196b4:	bl	41a138 <_obstack_memory_used@@Base+0x82b4>
  4196b8:	stur	w0, [x29, #-4]
  4196bc:	cbnz	w0, 419898 <_obstack_memory_used@@Base+0x7a14>
  4196c0:	mov	w19, wzr
  4196c4:	b	419634 <_obstack_memory_used@@Base+0x77b0>
  4196c8:	mov	x0, x22
  4196cc:	mov	x1, x24
  4196d0:	mov	x2, x20
  4196d4:	bl	4198a0 <_obstack_memory_used@@Base+0x7a1c>
  4196d8:	cmp	x0, #0x0
  4196dc:	cset	w27, ne  // ne = any
  4196e0:	csinv	x23, x20, xzr, ne  // ne = any
  4196e4:	cbz	x0, 419708 <_obstack_memory_used@@Base+0x7884>
  4196e8:	tbnz	w21, #0, 419708 <_obstack_memory_used@@Base+0x7884>
  4196ec:	mov	x23, x20
  4196f0:	b	419874 <_obstack_memory_used@@Base+0x79f0>
  4196f4:	mov	w27, #0x1                   	// #1
  4196f8:	mov	w8, wzr
  4196fc:	mov	x24, x25
  419700:	mov	w19, w26
  419704:	cbnz	w8, 419850 <_obstack_memory_used@@Base+0x79cc>
  419708:	ldr	x9, [x22, #104]
  41970c:	ldr	x8, [x22, #72]
  419710:	cmp	x9, x8
  419714:	b.le	419858 <_obstack_memory_used@@Base+0x79d4>
  419718:	ldr	x9, [x22, #64]
  41971c:	add	x28, x8, #0x1
  419720:	cmp	x28, x9
  419724:	b.ge	419800 <_obstack_memory_used@@Base+0x797c>  // b.tcont
  419728:	ldr	x9, [x22, #48]
  41972c:	cmp	x28, x9
  419730:	b.ge	419810 <_obstack_memory_used@@Base+0x798c>  // b.tcont
  419734:	sub	x0, x29, #0x4
  419738:	mov	x1, x22
  41973c:	mov	x2, x24
  419740:	bl	41a520 <_obstack_memory_used@@Base+0x869c>
  419744:	ldr	x8, [x22, #184]
  419748:	mov	x25, x0
  41974c:	cbz	x8, 419764 <_obstack_memory_used@@Base+0x78e0>
  419750:	sub	x0, x29, #0x4
  419754:	mov	x1, x22
  419758:	mov	x2, x25
  41975c:	bl	41a5e4 <_obstack_memory_used@@Base+0x8760>
  419760:	mov	x25, x0
  419764:	cbz	x25, 4197b4 <_obstack_memory_used@@Base+0x7930>
  419768:	cmp	x24, x25
  41976c:	ldrsb	w8, [x25, #104]
  419770:	cset	w9, eq  // eq = none
  419774:	tst	w19, w9
  419778:	and	w26, w19, w9
  41977c:	csel	x20, x28, x20, ne  // ne = any
  419780:	tbz	w8, #4, 4196f8 <_obstack_memory_used@@Base+0x7874>
  419784:	tbz	w8, #31, 41979c <_obstack_memory_used@@Base+0x7918>
  419788:	ldr	x2, [x22, #72]
  41978c:	mov	x0, x22
  419790:	mov	x1, x25
  419794:	bl	4198a0 <_obstack_memory_used@@Base+0x7a1c>
  419798:	cbz	x0, 4196f8 <_obstack_memory_used@@Base+0x7874>
  41979c:	ldr	x23, [x22, #72]
  4197a0:	str	xzr, [sp]
  4197a4:	tbnz	w21, #0, 4196f4 <_obstack_memory_used@@Base+0x7870>
  4197a8:	mov	w8, #0x3                   	// #3
  4197ac:	mov	w27, #0x1                   	// #1
  4197b0:	b	4196fc <_obstack_memory_used@@Base+0x7878>
  4197b4:	ldur	w8, [x29, #-4]
  4197b8:	cbnz	w8, 419840 <_obstack_memory_used@@Base+0x79bc>
  4197bc:	cmp	x27, #0x0
  4197c0:	cset	w8, ne  // ne = any
  4197c4:	eor	w9, w21, #0x1
  4197c8:	mov	x25, xzr
  4197cc:	and	w9, w8, w9
  4197d0:	mov	w8, #0x3                   	// #3
  4197d4:	tbnz	w9, #0, 4197f8 <_obstack_memory_used@@Base+0x7974>
  4197d8:	ldr	x9, [x22, #184]
  4197dc:	cbz	x9, 4197f8 <_obstack_memory_used@@Base+0x7974>
  4197e0:	sub	x0, x29, #0x4
  4197e4:	mov	x1, x22
  4197e8:	bl	41a730 <_obstack_memory_used@@Base+0x88ac>
  4197ec:	mov	x25, x0
  4197f0:	cbnz	x0, 419768 <_obstack_memory_used@@Base+0x78e4>
  4197f4:	mov	w8, #0x3                   	// #3
  4197f8:	mov	w26, w19
  4197fc:	b	4196fc <_obstack_memory_used@@Base+0x7878>
  419800:	ldr	x10, [x22, #88]
  419804:	cmp	x9, x10
  419808:	b.ge	419728 <_obstack_memory_used@@Base+0x78a4>  // b.tcont
  41980c:	b	41981c <_obstack_memory_used@@Base+0x7998>
  419810:	ldr	x10, [x22, #88]
  419814:	cmp	x9, x10
  419818:	b.ge	419734 <_obstack_memory_used@@Base+0x78b0>  // b.tcont
  41981c:	add	w1, w8, #0x2
  419820:	mov	x0, x22
  419824:	bl	41a458 <_obstack_memory_used@@Base+0x85d4>
  419828:	stur	w0, [x29, #-4]
  41982c:	cbz	w0, 419734 <_obstack_memory_used@@Base+0x78b0>
  419830:	mov	w8, #0x1                   	// #1
  419834:	mov	x25, x24
  419838:	mov	w26, w19
  41983c:	b	4196fc <_obstack_memory_used@@Base+0x7878>
  419840:	mov	x25, xzr
  419844:	mov	w8, #0x1                   	// #1
  419848:	mov	w26, w19
  41984c:	b	4196fc <_obstack_memory_used@@Base+0x7878>
  419850:	cmp	w8, #0x3
  419854:	b.ne	419870 <_obstack_memory_used@@Base+0x79ec>  // b.any
  419858:	ldr	x9, [sp]
  41985c:	cbz	x9, 419874 <_obstack_memory_used@@Base+0x79f0>
  419860:	ldr	x8, [x9]
  419864:	add	x8, x8, x20
  419868:	str	x8, [x9]
  41986c:	b	419874 <_obstack_memory_used@@Base+0x79f0>
  419870:	mov	x23, #0xfffffffffffffffe    	// #-2
  419874:	mov	x0, x23
  419878:	ldp	x20, x19, [sp, #96]
  41987c:	ldp	x22, x21, [sp, #80]
  419880:	ldp	x24, x23, [sp, #64]
  419884:	ldp	x26, x25, [sp, #48]
  419888:	ldp	x28, x27, [sp, #32]
  41988c:	ldp	x29, x30, [sp, #16]
  419890:	add	sp, sp, #0x70
  419894:	ret
  419898:	sxtw	x23, w0
  41989c:	b	419874 <_obstack_memory_used@@Base+0x79f0>
  4198a0:	stp	x29, x30, [sp, #-64]!
  4198a4:	stp	x24, x23, [sp, #16]
  4198a8:	stp	x22, x21, [sp, #32]
  4198ac:	stp	x20, x19, [sp, #48]
  4198b0:	mov	x8, x2
  4198b4:	ldr	w2, [x0, #160]
  4198b8:	mov	x19, x1
  4198bc:	mov	x1, x8
  4198c0:	mov	x29, sp
  4198c4:	mov	x21, x0
  4198c8:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  4198cc:	ldr	x8, [x19, #16]
  4198d0:	cmp	x8, #0x1
  4198d4:	b.lt	419910 <_obstack_memory_used@@Base+0x7a8c>  // b.tstop
  4198d8:	ldr	x21, [x21, #152]
  4198dc:	ldr	x23, [x19, #24]
  4198e0:	mov	w20, w0
  4198e4:	mov	x24, xzr
  4198e8:	ldr	x22, [x23, x24, lsl #3]
  4198ec:	mov	x0, x21
  4198f0:	mov	w2, w20
  4198f4:	mov	x1, x22
  4198f8:	bl	41ce98 <_obstack_memory_used@@Base+0xb014>
  4198fc:	tbnz	w0, #0, 419914 <_obstack_memory_used@@Base+0x7a90>
  419900:	ldr	x8, [x19, #16]
  419904:	add	x24, x24, #0x1
  419908:	cmp	x24, x8
  41990c:	b.lt	4198e8 <_obstack_memory_used@@Base+0x7a64>  // b.tstop
  419910:	mov	x22, xzr
  419914:	mov	x0, x22
  419918:	ldp	x20, x19, [sp, #48]
  41991c:	ldp	x22, x21, [sp, #32]
  419920:	ldp	x24, x23, [sp, #16]
  419924:	ldp	x29, x30, [sp], #64
  419928:	ret
  41992c:	sub	sp, sp, #0x90
  419930:	stp	x29, x30, [sp, #64]
  419934:	stp	x26, x25, [sp, #80]
  419938:	stp	x24, x23, [sp, #96]
  41993c:	stp	x22, x21, [sp, #112]
  419940:	stp	x20, x19, [sp, #128]
  419944:	ldr	x21, [x0, #168]
  419948:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  41994c:	add	x29, sp, #0x40
  419950:	cmp	x21, x8
  419954:	b.hi	419af8 <_obstack_memory_used@@Base+0x7c74>  // b.pmore
  419958:	ldr	x24, [x0, #152]
  41995c:	ldr	x23, [x0, #176]
  419960:	lsl	x8, x21, #3
  419964:	add	x22, x8, #0x8
  419968:	mov	x20, x0
  41996c:	mov	x0, x22
  419970:	bl	4028e0 <malloc@plt>
  419974:	mov	x19, x0
  419978:	cbz	x0, 419b00 <_obstack_memory_used@@Base+0x7c7c>
  41997c:	ldr	x8, [x24, #152]
  419980:	cbz	x8, 419a3c <_obstack_memory_used@@Base+0x7bb8>
  419984:	mov	x0, x22
  419988:	bl	4028e0 <malloc@plt>
  41998c:	mov	x22, x0
  419990:	cbz	x0, 419b04 <_obstack_memory_used@@Base+0x7c80>
  419994:	add	x26, x21, #0x1
  419998:	lsl	x2, x26, #3
  41999c:	mov	x0, x22
  4199a0:	mov	w1, wzr
  4199a4:	bl	4029c0 <memset@plt>
  4199a8:	add	x0, sp, #0x8
  4199ac:	mov	x1, x19
  4199b0:	mov	x2, x22
  4199b4:	mov	x3, x23
  4199b8:	mov	x4, x21
  4199bc:	bl	41cef4 <_obstack_memory_used@@Base+0xb070>
  4199c0:	add	x1, sp, #0x8
  4199c4:	mov	x0, x20
  4199c8:	bl	41cf08 <_obstack_memory_used@@Base+0xb084>
  4199cc:	ldr	x8, [sp, #56]
  4199d0:	mov	w25, w0
  4199d4:	mov	x0, x8
  4199d8:	bl	402bd0 <free@plt>
  4199dc:	cbnz	w25, 419ac8 <_obstack_memory_used@@Base+0x7c44>
  4199e0:	ldr	x8, [x19]
  4199e4:	cbnz	x8, 419a88 <_obstack_memory_used@@Base+0x7c04>
  4199e8:	ldr	x8, [x22]
  4199ec:	cbnz	x8, 419a88 <_obstack_memory_used@@Base+0x7c04>
  4199f0:	subs	x21, x21, #0x1
  4199f4:	b.lt	419a34 <_obstack_memory_used@@Base+0x7bb0>  // b.tstop
  4199f8:	ldr	x8, [x20, #184]
  4199fc:	b	419a10 <_obstack_memory_used@@Base+0x7b8c>
  419a00:	add	x9, x21, #0x1
  419a04:	sub	x21, x21, #0x1
  419a08:	cmp	x9, #0x2
  419a0c:	b.lt	419a34 <_obstack_memory_used@@Base+0x7bb0>  // b.tstop
  419a10:	ldr	x1, [x8, x21, lsl #3]
  419a14:	cbz	x1, 419a00 <_obstack_memory_used@@Base+0x7b7c>
  419a18:	ldrb	w9, [x1, #104]
  419a1c:	tbz	w9, #4, 419a00 <_obstack_memory_used@@Base+0x7b7c>
  419a20:	mov	x0, x20
  419a24:	mov	x2, x21
  419a28:	bl	4198a0 <_obstack_memory_used@@Base+0x7a1c>
  419a2c:	mov	x23, x0
  419a30:	b	419994 <_obstack_memory_used@@Base+0x7b10>
  419a34:	mov	w25, #0x1                   	// #1
  419a38:	b	419ac8 <_obstack_memory_used@@Base+0x7c44>
  419a3c:	add	x0, sp, #0x8
  419a40:	mov	x1, x19
  419a44:	mov	x2, xzr
  419a48:	mov	x3, x23
  419a4c:	mov	x4, x21
  419a50:	bl	41cef4 <_obstack_memory_used@@Base+0xb070>
  419a54:	add	x1, sp, #0x8
  419a58:	mov	x0, x20
  419a5c:	bl	41cf08 <_obstack_memory_used@@Base+0xb084>
  419a60:	ldr	x8, [sp, #56]
  419a64:	mov	w25, w0
  419a68:	mov	x0, x8
  419a6c:	bl	402bd0 <free@plt>
  419a70:	cbnz	w25, 419b0c <_obstack_memory_used@@Base+0x7c88>
  419a74:	ldr	x8, [x19]
  419a78:	cbnz	x8, 419aac <_obstack_memory_used@@Base+0x7c28>
  419a7c:	mov	x22, xzr
  419a80:	mov	w25, #0x1                   	// #1
  419a84:	b	419ac8 <_obstack_memory_used@@Base+0x7c44>
  419a88:	mov	x0, x24
  419a8c:	mov	x1, x19
  419a90:	mov	x2, x22
  419a94:	mov	x3, x26
  419a98:	bl	41d004 <_obstack_memory_used@@Base+0xb180>
  419a9c:	mov	w25, w0
  419aa0:	mov	x0, x22
  419aa4:	bl	402bd0 <free@plt>
  419aa8:	cbnz	w25, 419b0c <_obstack_memory_used@@Base+0x7c88>
  419aac:	ldr	x0, [x20, #184]
  419ab0:	bl	402bd0 <free@plt>
  419ab4:	mov	w25, wzr
  419ab8:	mov	x22, xzr
  419abc:	stp	x23, x19, [x20, #176]
  419ac0:	mov	x19, xzr
  419ac4:	str	x21, [x20, #168]
  419ac8:	mov	x0, x19
  419acc:	bl	402bd0 <free@plt>
  419ad0:	mov	x0, x22
  419ad4:	bl	402bd0 <free@plt>
  419ad8:	mov	w0, w25
  419adc:	ldp	x20, x19, [sp, #128]
  419ae0:	ldp	x22, x21, [sp, #112]
  419ae4:	ldp	x24, x23, [sp, #96]
  419ae8:	ldp	x26, x25, [sp, #80]
  419aec:	ldp	x29, x30, [sp, #64]
  419af0:	add	sp, sp, #0x90
  419af4:	ret
  419af8:	mov	w25, #0xc                   	// #12
  419afc:	b	419ad8 <_obstack_memory_used@@Base+0x7c54>
  419b00:	mov	x22, xzr
  419b04:	mov	w25, #0xc                   	// #12
  419b08:	b	419ac8 <_obstack_memory_used@@Base+0x7c44>
  419b0c:	mov	x22, xzr
  419b10:	b	419ac8 <_obstack_memory_used@@Base+0x7c44>
  419b14:	stp	x29, x30, [sp, #-64]!
  419b18:	stp	x22, x21, [sp, #32]
  419b1c:	stp	x20, x19, [sp, #48]
  419b20:	ldr	x8, [x0, #232]
  419b24:	mov	x19, x0
  419b28:	str	x23, [sp, #16]
  419b2c:	mov	x29, sp
  419b30:	cmp	x8, #0x1
  419b34:	b.lt	419bbc <_obstack_memory_used@@Base+0x7d38>  // b.tstop
  419b38:	mov	x22, xzr
  419b3c:	b	419b58 <_obstack_memory_used@@Base+0x7cd4>
  419b40:	mov	x0, x20
  419b44:	bl	402bd0 <free@plt>
  419b48:	ldr	x8, [x19, #232]
  419b4c:	add	x22, x22, #0x1
  419b50:	cmp	x22, x8
  419b54:	b.ge	419bbc <_obstack_memory_used@@Base+0x7d38>  // b.tcont
  419b58:	ldr	x8, [x19, #248]
  419b5c:	ldr	x20, [x8, x22, lsl #3]
  419b60:	ldr	x8, [x20, #32]
  419b64:	cmp	x8, #0x1
  419b68:	b.lt	419b98 <_obstack_memory_used@@Base+0x7d14>  // b.tstop
  419b6c:	mov	x23, xzr
  419b70:	ldr	x8, [x20, #40]
  419b74:	ldr	x21, [x8, x23, lsl #3]
  419b78:	ldr	x0, [x21, #32]
  419b7c:	bl	402bd0 <free@plt>
  419b80:	mov	x0, x21
  419b84:	bl	402bd0 <free@plt>
  419b88:	ldr	x8, [x20, #32]
  419b8c:	add	x23, x23, #0x1
  419b90:	cmp	x23, x8
  419b94:	b.lt	419b70 <_obstack_memory_used@@Base+0x7cec>  // b.tstop
  419b98:	ldr	x0, [x20, #40]
  419b9c:	bl	402bd0 <free@plt>
  419ba0:	ldr	x8, [x20, #16]
  419ba4:	cbz	x8, 419b40 <_obstack_memory_used@@Base+0x7cbc>
  419ba8:	ldr	x0, [x8, #16]
  419bac:	bl	402bd0 <free@plt>
  419bb0:	ldr	x0, [x20, #16]
  419bb4:	bl	402bd0 <free@plt>
  419bb8:	b	419b40 <_obstack_memory_used@@Base+0x7cbc>
  419bbc:	str	xzr, [x19, #232]
  419bc0:	str	xzr, [x19, #200]
  419bc4:	ldp	x20, x19, [sp, #48]
  419bc8:	ldp	x22, x21, [sp, #32]
  419bcc:	ldr	x23, [sp, #16]
  419bd0:	ldp	x29, x30, [sp], #64
  419bd4:	ret
  419bd8:	stp	x29, x30, [sp, #-96]!
  419bdc:	stp	x28, x27, [sp, #16]
  419be0:	stp	x26, x25, [sp, #32]
  419be4:	stp	x24, x23, [sp, #48]
  419be8:	stp	x22, x21, [sp, #64]
  419bec:	stp	x20, x19, [sp, #80]
  419bf0:	mov	x29, sp
  419bf4:	sub	sp, sp, #0x40
  419bf8:	adrp	x8, 421000 <_obstack_memory_used@@Base+0xf17c>
  419bfc:	add	x8, x8, #0x700
  419c00:	ldr	q0, [x8]
  419c04:	ldr	x8, [x8, #16]
  419c08:	ldr	x23, [x0]
  419c0c:	mov	x20, x3
  419c10:	mov	x21, x2
  419c14:	mov	x22, x1
  419c18:	stur	q0, [x29, #-64]
  419c1c:	stur	x8, [x29, #-48]
  419c20:	tbz	w4, #0, 419c44 <_obstack_memory_used@@Base+0x7dc0>
  419c24:	ldur	x8, [x29, #-56]
  419c28:	add	x8, x8, x8, lsl #1
  419c2c:	lsl	x0, x8, #4
  419c30:	bl	4028e0 <malloc@plt>
  419c34:	stur	x0, [x29, #-48]
  419c38:	cbz	x0, 419e58 <_obstack_memory_used@@Base+0x7fd4>
  419c3c:	sub	x19, x29, #0x40
  419c40:	b	419c48 <_obstack_memory_used@@Base+0x7dc4>
  419c44:	mov	x19, xzr
  419c48:	ldr	x25, [x23, #144]
  419c4c:	lsl	x26, x21, #4
  419c50:	cmp	x26, #0xfbf
  419c54:	stp	xzr, xzr, [x29, #-32]
  419c58:	stur	xzr, [x29, #-16]
  419c5c:	b.hi	419c7c <_obstack_memory_used@@Base+0x7df8>  // b.pmore
  419c60:	add	x9, x26, #0xf
  419c64:	mov	x8, sp
  419c68:	and	x9, x9, #0xfffffffffffffff0
  419c6c:	sub	x24, x8, x9
  419c70:	mov	sp, x24
  419c74:	mov	w27, wzr
  419c78:	b	419c90 <_obstack_memory_used@@Base+0x7e0c>
  419c7c:	mov	x0, x26
  419c80:	bl	4028e0 <malloc@plt>
  419c84:	cbz	x0, 419e50 <_obstack_memory_used@@Base+0x7fcc>
  419c88:	mov	x24, x0
  419c8c:	mov	w27, #0x1                   	// #1
  419c90:	mov	x0, x24
  419c94:	mov	x1, x20
  419c98:	mov	x2, x26
  419c9c:	bl	402710 <memcpy@plt>
  419ca0:	ldp	x26, x8, [x20]
  419ca4:	cmp	x26, x8
  419ca8:	stur	x26, [x29, #-8]
  419cac:	b.le	419cd4 <_obstack_memory_used@@Base+0x7e50>
  419cb0:	ldur	x0, [x29, #-16]
  419cb4:	bl	402bd0 <free@plt>
  419cb8:	cbz	w27, 419cc4 <_obstack_memory_used@@Base+0x7e40>
  419cbc:	mov	x0, x24
  419cc0:	bl	402bd0 <free@plt>
  419cc4:	mov	x0, x19
  419cc8:	bl	41e248 <_obstack_memory_used@@Base+0xc3c4>
  419ccc:	mov	w0, wzr
  419cd0:	b	419e5c <_obstack_memory_used@@Base+0x7fd8>
  419cd4:	add	x28, x20, #0x8
  419cd8:	mov	x0, x23
  419cdc:	mov	x1, x20
  419ce0:	mov	x2, x24
  419ce4:	mov	x3, x25
  419ce8:	mov	x4, x26
  419cec:	mov	x5, x21
  419cf0:	bl	41e2c0 <_obstack_memory_used@@Base+0xc43c>
  419cf4:	ldr	x8, [x20, #8]
  419cf8:	cmp	x26, x8
  419cfc:	b.ne	419db8 <_obstack_memory_used@@Base+0x7f34>  // b.any
  419d00:	ldr	x8, [x22, #176]
  419d04:	cmp	x25, x8
  419d08:	b.ne	419db8 <_obstack_memory_used@@Base+0x7f34>  // b.any
  419d0c:	cbz	x19, 419d9c <_obstack_memory_used@@Base+0x7f18>
  419d10:	mov	x8, xzr
  419d14:	mov	x9, x28
  419d18:	b	419d2c <_obstack_memory_used@@Base+0x7ea8>
  419d1c:	add	x8, x8, #0x1
  419d20:	cmp	x21, x8
  419d24:	add	x9, x9, #0x10
  419d28:	b.eq	419d68 <_obstack_memory_used@@Base+0x7ee4>  // b.none
  419d2c:	ldur	x10, [x9, #-8]
  419d30:	tbnz	x10, #63, 419d1c <_obstack_memory_used@@Base+0x7e98>
  419d34:	ldr	x10, [x9]
  419d38:	cmn	x10, #0x1
  419d3c:	b.ne	419d1c <_obstack_memory_used@@Base+0x7e98>  // b.any
  419d40:	cmp	x8, x21
  419d44:	b.ne	419d74 <_obstack_memory_used@@Base+0x7ef0>  // b.any
  419d48:	ldur	x0, [x29, #-16]
  419d4c:	bl	402bd0 <free@plt>
  419d50:	cbz	w27, 419d5c <_obstack_memory_used@@Base+0x7ed8>
  419d54:	mov	x0, x24
  419d58:	bl	402bd0 <free@plt>
  419d5c:	mov	x0, x19
  419d60:	bl	41e248 <_obstack_memory_used@@Base+0xc3c4>
  419d64:	b	419db0 <_obstack_memory_used@@Base+0x7f2c>
  419d68:	mov	x8, x21
  419d6c:	cmp	x8, x21
  419d70:	b.eq	419d48 <_obstack_memory_used@@Base+0x7ec4>  // b.none
  419d74:	sub	x1, x29, #0x8
  419d78:	sub	x4, x29, #0x20
  419d7c:	mov	x0, x19
  419d80:	mov	x2, x21
  419d84:	mov	x3, x20
  419d88:	bl	41e37c <_obstack_memory_used@@Base+0xc4f8>
  419d8c:	mov	x25, x0
  419d90:	mov	w8, #0x1                   	// #1
  419d94:	cbnz	w8, 419db8 <_obstack_memory_used@@Base+0x7f34>
  419d98:	b	419ccc <_obstack_memory_used@@Base+0x7e48>
  419d9c:	ldur	x0, [x29, #-16]
  419da0:	bl	402bd0 <free@plt>
  419da4:	cbz	w27, 419db0 <_obstack_memory_used@@Base+0x7f2c>
  419da8:	mov	x0, x24
  419dac:	bl	402bd0 <free@plt>
  419db0:	mov	w8, wzr
  419db4:	cbz	w8, 419ccc <_obstack_memory_used@@Base+0x7e48>
  419db8:	sub	x3, x29, #0x8
  419dbc:	sub	x5, x29, #0x20
  419dc0:	mov	x0, x22
  419dc4:	mov	x1, x21
  419dc8:	mov	x2, x20
  419dcc:	mov	x4, x25
  419dd0:	mov	x6, x19
  419dd4:	bl	41e414 <_obstack_memory_used@@Base+0xc590>
  419dd8:	mov	x25, x0
  419ddc:	tbnz	x0, #63, 419df4 <_obstack_memory_used@@Base+0x7f70>
  419de0:	ldur	x26, [x29, #-8]
  419de4:	ldr	x8, [x20, #8]
  419de8:	cmp	x26, x8
  419dec:	b.le	419cd8 <_obstack_memory_used@@Base+0x7e54>
  419df0:	b	419cb0 <_obstack_memory_used@@Base+0x7e2c>
  419df4:	cmn	x25, #0x2
  419df8:	b.eq	419e3c <_obstack_memory_used@@Base+0x7fb8>  // b.none
  419dfc:	cbz	x19, 419e20 <_obstack_memory_used@@Base+0x7f9c>
  419e00:	sub	x1, x29, #0x8
  419e04:	sub	x4, x29, #0x20
  419e08:	mov	x0, x19
  419e0c:	mov	x2, x21
  419e10:	mov	x3, x20
  419e14:	bl	41e37c <_obstack_memory_used@@Base+0xc4f8>
  419e18:	mov	x25, x0
  419e1c:	b	419de0 <_obstack_memory_used@@Base+0x7f5c>
  419e20:	ldur	x0, [x29, #-16]
  419e24:	bl	402bd0 <free@plt>
  419e28:	cbz	w27, 419e34 <_obstack_memory_used@@Base+0x7fb0>
  419e2c:	mov	x0, x24
  419e30:	bl	402bd0 <free@plt>
  419e34:	mov	w0, #0x1                   	// #1
  419e38:	b	419e5c <_obstack_memory_used@@Base+0x7fd8>
  419e3c:	ldur	x0, [x29, #-16]
  419e40:	bl	402bd0 <free@plt>
  419e44:	cbz	w27, 419e50 <_obstack_memory_used@@Base+0x7fcc>
  419e48:	mov	x0, x24
  419e4c:	bl	402bd0 <free@plt>
  419e50:	mov	x0, x19
  419e54:	bl	41e248 <_obstack_memory_used@@Base+0xc3c4>
  419e58:	mov	w0, #0xc                   	// #12
  419e5c:	mov	sp, x29
  419e60:	ldp	x20, x19, [sp, #80]
  419e64:	ldp	x22, x21, [sp, #64]
  419e68:	ldp	x24, x23, [sp, #48]
  419e6c:	ldp	x26, x25, [sp, #32]
  419e70:	ldp	x28, x27, [sp, #16]
  419e74:	ldp	x29, x30, [sp], #96
  419e78:	ret
  419e7c:	stp	x29, x30, [sp, #-32]!
  419e80:	str	x19, [sp, #16]
  419e84:	mov	x29, sp
  419e88:	mov	x19, x0
  419e8c:	bl	419b14 <_obstack_memory_used@@Base+0x7c90>
  419e90:	ldr	x0, [x19, #248]
  419e94:	bl	402bd0 <free@plt>
  419e98:	ldr	x0, [x19, #216]
  419e9c:	bl	402bd0 <free@plt>
  419ea0:	ldr	x19, [sp, #16]
  419ea4:	ldp	x29, x30, [sp], #32
  419ea8:	ret
  419eac:	stp	x29, x30, [sp, #-32]!
  419eb0:	stp	x20, x19, [sp, #16]
  419eb4:	mov	x19, x0
  419eb8:	mov	x29, sp
  419ebc:	tbnz	x1, #63, 419ef4 <_obstack_memory_used@@Base+0x8070>
  419ec0:	ldr	x8, [x19, #88]
  419ec4:	cmp	x8, x1
  419ec8:	b.eq	419f58 <_obstack_memory_used@@Base+0x80d4>  // b.none
  419ecc:	ldr	w8, [x19, #144]
  419ed0:	cmp	w8, #0x2
  419ed4:	b.lt	419efc <_obstack_memory_used@@Base+0x8078>  // b.tstop
  419ed8:	ldr	x9, [x19, #16]
  419edc:	ldr	w8, [x9, x1, lsl #2]
  419ee0:	cmn	w8, #0x1
  419ee4:	b.ne	419f1c <_obstack_memory_used@@Base+0x8098>  // b.any
  419ee8:	sub	x1, x1, #0x1
  419eec:	cmn	x1, #0x1
  419ef0:	b.ne	419edc <_obstack_memory_used@@Base+0x8058>  // b.any
  419ef4:	ldr	w0, [x19, #112]
  419ef8:	b	419f4c <_obstack_memory_used@@Base+0x80c8>
  419efc:	ldr	x8, [x19, #8]
  419f00:	ldr	x0, [x19, #128]
  419f04:	ldrb	w20, [x8, x1]
  419f08:	mov	x1, x20
  419f0c:	bl	41a054 <_obstack_memory_used@@Base+0x81d0>
  419f10:	tbz	w0, #0, 419f40 <_obstack_memory_used@@Base+0x80bc>
  419f14:	mov	w0, #0x1                   	// #1
  419f18:	b	419f4c <_obstack_memory_used@@Base+0x80c8>
  419f1c:	ldrb	w9, [x19, #142]
  419f20:	cbnz	w9, 419f68 <_obstack_memory_used@@Base+0x80e4>
  419f24:	cmp	w8, #0xa
  419f28:	b.ne	419f48 <_obstack_memory_used@@Base+0x80c4>  // b.any
  419f2c:	ldrb	w8, [x19, #141]
  419f30:	cmp	w8, #0x0
  419f34:	cset	w8, ne  // ne = any
  419f38:	lsl	w0, w8, #1
  419f3c:	b	419f4c <_obstack_memory_used@@Base+0x80c8>
  419f40:	cmp	w20, #0xa
  419f44:	b.eq	419f2c <_obstack_memory_used@@Base+0x80a8>  // b.none
  419f48:	mov	w0, wzr
  419f4c:	ldp	x20, x19, [sp, #16]
  419f50:	ldp	x29, x30, [sp], #32
  419f54:	ret
  419f58:	and	w8, w2, #0x2
  419f5c:	mov	w9, #0xa                   	// #10
  419f60:	eor	w0, w8, w9
  419f64:	b	419f4c <_obstack_memory_used@@Base+0x80c8>
  419f68:	mov	w0, w8
  419f6c:	mov	w20, w8
  419f70:	bl	402ce0 <iswalnum@plt>
  419f74:	mov	w9, w0
  419f78:	cmp	w20, #0x5f
  419f7c:	mov	w0, #0x1                   	// #1
  419f80:	b.eq	419f4c <_obstack_memory_used@@Base+0x80c8>  // b.none
  419f84:	mov	w8, w20
  419f88:	cbz	w9, 419f24 <_obstack_memory_used@@Base+0x80a0>
  419f8c:	b	419f4c <_obstack_memory_used@@Base+0x80c8>
  419f90:	stp	x29, x30, [sp, #-80]!
  419f94:	stp	x24, x23, [sp, #32]
  419f98:	stp	x22, x21, [sp, #48]
  419f9c:	stp	x20, x19, [sp, #64]
  419fa0:	ldr	x8, [x0, #40]
  419fa4:	ldr	x9, [x0, #56]
  419fa8:	mov	x20, x2
  419fac:	str	x25, [sp, #16]
  419fb0:	mov	x29, sp
  419fb4:	add	x19, x9, x8
  419fb8:	cmp	x19, x1
  419fbc:	b.ge	41a030 <_obstack_memory_used@@Base+0x81ac>  // b.tcont
  419fc0:	mov	x21, x1
  419fc4:	mov	x22, x0
  419fc8:	add	x23, x0, #0x20
  419fcc:	ldr	x8, [x22, #80]
  419fd0:	ldr	x9, [x22]
  419fd4:	ldr	x25, [x22, #32]
  419fd8:	add	x0, x29, #0x1c
  419fdc:	sub	x24, x8, x19
  419fe0:	add	x1, x9, x19
  419fe4:	mov	x2, x24
  419fe8:	mov	x3, x23
  419fec:	bl	411af4 <wcrtomb@plt+0xecc4>
  419ff0:	sub	x8, x0, #0x1
  419ff4:	cmn	x8, #0x3
  419ff8:	b.cs	41a010 <_obstack_memory_used@@Base+0x818c>  // b.hs, b.nlast
  419ffc:	ldr	w8, [x29, #28]
  41a000:	add	x19, x0, x19
  41a004:	cmp	x19, x21
  41a008:	b.lt	419fcc <_obstack_memory_used@@Base+0x8148>  // b.tstop
  41a00c:	b	41a034 <_obstack_memory_used@@Base+0x81b0>
  41a010:	mov	w8, wzr
  41a014:	cbz	x24, 41a024 <_obstack_memory_used@@Base+0x81a0>
  41a018:	cbz	x0, 41a024 <_obstack_memory_used@@Base+0x81a0>
  41a01c:	ldr	x8, [x22]
  41a020:	ldrb	w8, [x8, x19]
  41a024:	str	x25, [x23]
  41a028:	mov	w0, #0x1                   	// #1
  41a02c:	b	41a000 <_obstack_memory_used@@Base+0x817c>
  41a030:	mov	w8, #0xffffffff            	// #-1
  41a034:	str	w8, [x20]
  41a038:	mov	x0, x19
  41a03c:	ldp	x20, x19, [sp, #64]
  41a040:	ldp	x22, x21, [sp, #48]
  41a044:	ldp	x24, x23, [sp, #32]
  41a048:	ldr	x25, [sp, #16]
  41a04c:	ldp	x29, x30, [sp], #80
  41a050:	ret
  41a054:	add	x8, x1, #0x3f
  41a058:	cmp	x1, #0x0
  41a05c:	csel	x8, x8, x1, lt  // lt = tstop
  41a060:	asr	x8, x8, #6
  41a064:	ldr	x8, [x0, x8, lsl #3]
  41a068:	lsr	x8, x8, x1
  41a06c:	and	w0, w8, #0x1
  41a070:	ret
  41a074:	stp	x29, x30, [sp, #-64]!
  41a078:	stp	x24, x23, [sp, #16]
  41a07c:	stp	x22, x21, [sp, #32]
  41a080:	stp	x20, x19, [sp, #48]
  41a084:	ldr	x8, [x1, #8]
  41a088:	mov	x29, sp
  41a08c:	cmp	x8, #0x1
  41a090:	b.lt	41a11c <_obstack_memory_used@@Base+0x8298>  // b.tstop
  41a094:	ldr	x24, [x0, #152]
  41a098:	mov	x19, x2
  41a09c:	mov	x20, x1
  41a0a0:	mov	x21, x0
  41a0a4:	mov	x23, xzr
  41a0a8:	ldr	x8, [x20, #16]
  41a0ac:	ldr	x1, [x8, x23, lsl #3]
  41a0b0:	ldr	x8, [x24]
  41a0b4:	add	x9, x8, x1, lsl #4
  41a0b8:	ldrb	w9, [x9, #8]
  41a0bc:	cmp	w9, #0x8
  41a0c0:	b.ne	41a0f0 <_obstack_memory_used@@Base+0x826c>  // b.any
  41a0c4:	lsl	x9, x1, #4
  41a0c8:	ldr	x8, [x8, x9]
  41a0cc:	cmp	x8, #0x3f
  41a0d0:	b.gt	41a0f0 <_obstack_memory_used@@Base+0x826c>
  41a0d4:	ldr	x9, [x24, #160]
  41a0d8:	lsr	x8, x9, x8
  41a0dc:	tbz	w8, #0, 41a0f0 <_obstack_memory_used@@Base+0x826c>
  41a0e0:	mov	x0, x21
  41a0e4:	mov	x2, x19
  41a0e8:	bl	41a7b8 <_obstack_memory_used@@Base+0x8934>
  41a0ec:	cbnz	w0, 41a10c <_obstack_memory_used@@Base+0x8288>
  41a0f0:	mov	w8, #0x1                   	// #1
  41a0f4:	tbz	w8, #0, 41a120 <_obstack_memory_used@@Base+0x829c>
  41a0f8:	ldr	x8, [x20, #8]
  41a0fc:	add	x23, x23, #0x1
  41a100:	cmp	x23, x8
  41a104:	b.lt	41a0a8 <_obstack_memory_used@@Base+0x8224>  // b.tstop
  41a108:	b	41a11c <_obstack_memory_used@@Base+0x8298>
  41a10c:	mov	w8, wzr
  41a110:	mov	w22, w0
  41a114:	tbnz	w8, #0, 41a0f8 <_obstack_memory_used@@Base+0x8274>
  41a118:	b	41a120 <_obstack_memory_used@@Base+0x829c>
  41a11c:	mov	w22, wzr
  41a120:	mov	w0, w22
  41a124:	ldp	x20, x19, [sp, #48]
  41a128:	ldp	x22, x21, [sp, #32]
  41a12c:	ldp	x24, x23, [sp, #16]
  41a130:	ldp	x29, x30, [sp], #64
  41a134:	ret
  41a138:	sub	sp, sp, #0xa0
  41a13c:	stp	x29, x30, [sp, #64]
  41a140:	stp	x28, x27, [sp, #80]
  41a144:	stp	x26, x25, [sp, #96]
  41a148:	stp	x24, x23, [sp, #112]
  41a14c:	stp	x22, x21, [sp, #128]
  41a150:	stp	x20, x19, [sp, #144]
  41a154:	ldr	x8, [x1, #8]
  41a158:	add	x29, sp, #0x40
  41a15c:	cmp	x8, #0x1
  41a160:	b.lt	41a424 <_obstack_memory_used@@Base+0x85a0>  // b.tstop
  41a164:	ldr	x25, [x0, #152]
  41a168:	ldr	x22, [x0, #72]
  41a16c:	mov	x24, x1
  41a170:	mov	x20, x0
  41a174:	mov	x26, xzr
  41a178:	str	x1, [sp]
  41a17c:	str	x25, [sp, #16]
  41a180:	b	41a194 <_obstack_memory_used@@Base+0x8310>
  41a184:	ldr	x8, [x24, #8]
  41a188:	add	x26, x26, #0x1
  41a18c:	cmp	x26, x8
  41a190:	b.ge	41a424 <_obstack_memory_used@@Base+0x85a0>  // b.tcont
  41a194:	ldr	x8, [x24, #16]
  41a198:	ldr	x23, [x8, x26, lsl #3]
  41a19c:	ldr	x8, [x25]
  41a1a0:	add	x8, x8, x23, lsl #4
  41a1a4:	ldr	w19, [x8, #8]
  41a1a8:	and	w8, w19, #0xff
  41a1ac:	cmp	w8, #0x4
  41a1b0:	b.ne	41a1f0 <_obstack_memory_used@@Base+0x836c>  // b.any
  41a1b4:	tst	w19, #0x3ff00
  41a1b8:	b.eq	41a1fc <_obstack_memory_used@@Base+0x8378>  // b.none
  41a1bc:	ldr	w2, [x20, #160]
  41a1c0:	mov	x0, x20
  41a1c4:	mov	x1, x22
  41a1c8:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41a1cc:	and	w8, w0, #0x1
  41a1d0:	tbz	w19, #10, 41a1d8 <_obstack_memory_used@@Base+0x8354>
  41a1d4:	cbz	w8, 41a1f0 <_obstack_memory_used@@Base+0x836c>
  41a1d8:	tbz	w19, #11, 41a1e0 <_obstack_memory_used@@Base+0x835c>
  41a1dc:	cbnz	w8, 41a1f0 <_obstack_memory_used@@Base+0x836c>
  41a1e0:	tbz	w19, #13, 41a1e8 <_obstack_memory_used@@Base+0x8364>
  41a1e4:	tbz	w0, #1, 41a1f0 <_obstack_memory_used@@Base+0x836c>
  41a1e8:	tbz	w19, #15, 41a1fc <_obstack_memory_used@@Base+0x8378>
  41a1ec:	tbnz	w0, #3, 41a1fc <_obstack_memory_used@@Base+0x8378>
  41a1f0:	mov	w8, #0x4                   	// #4
  41a1f4:	cbnz	w8, 41a40c <_obstack_memory_used@@Base+0x8588>
  41a1f8:	b	41a184 <_obstack_memory_used@@Base+0x8300>
  41a1fc:	ldr	x28, [x20, #200]
  41a200:	mov	x0, x20
  41a204:	mov	x1, x23
  41a208:	mov	x2, x22
  41a20c:	bl	41a850 <_obstack_memory_used@@Base+0x89cc>
  41a210:	stur	w0, [x29, #-4]
  41a214:	cbnz	w0, 41a418 <_obstack_memory_used@@Base+0x8594>
  41a218:	ldr	x8, [x20, #200]
  41a21c:	cmp	x28, x8
  41a220:	b.ge	41a404 <_obstack_memory_used@@Base+0x8580>  // b.tcont
  41a224:	add	x8, x28, x28, lsl #2
  41a228:	lsl	x27, x8, #3
  41a22c:	ldr	x8, [x20, #216]
  41a230:	ldr	x9, [x8, x27]
  41a234:	cmp	x9, x23
  41a238:	b.ne	41a270 <_obstack_memory_used@@Base+0x83ec>  // b.any
  41a23c:	add	x8, x8, x27
  41a240:	ldr	x9, [x8, #8]
  41a244:	cmp	x9, x22
  41a248:	b.ne	41a270 <_obstack_memory_used@@Base+0x83ec>  // b.any
  41a24c:	ldp	x21, x19, [x8, #16]
  41a250:	ldr	x8, [x25, #48]
  41a254:	cmp	x19, x21
  41a258:	b.ne	41a298 <_obstack_memory_used@@Base+0x8414>  // b.any
  41a25c:	ldr	x9, [x25, #40]
  41a260:	mov	w11, #0x18                  	// #24
  41a264:	madd	x9, x23, x11, x9
  41a268:	ldr	x9, [x9, #16]
  41a26c:	b	41a2a4 <_obstack_memory_used@@Base+0x8420>
  41a270:	mov	w8, #0x8                   	// #8
  41a274:	orr	w9, w8, #0x8
  41a278:	cmp	w9, #0x8
  41a27c:	b.ne	41a408 <_obstack_memory_used@@Base+0x8584>  // b.any
  41a280:	ldr	x8, [x20, #200]
  41a284:	add	x28, x28, #0x1
  41a288:	add	x27, x27, #0x28
  41a28c:	cmp	x28, x8
  41a290:	b.lt	41a22c <_obstack_memory_used@@Base+0x83a8>  // b.tstop
  41a294:	b	41a404 <_obstack_memory_used@@Base+0x8580>
  41a298:	ldr	x9, [x25, #24]
  41a29c:	mov	w11, #0x18                  	// #24
  41a2a0:	add	x9, x9, x23, lsl #3
  41a2a4:	ldr	x9, [x9]
  41a2a8:	ldr	w2, [x20, #160]
  41a2ac:	add	x10, x19, x22
  41a2b0:	sub	x24, x10, x21
  41a2b4:	madd	x8, x9, x11, x8
  41a2b8:	sub	x1, x24, #0x1
  41a2bc:	mov	x0, x20
  41a2c0:	str	x8, [sp, #24]
  41a2c4:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41a2c8:	ldr	x8, [x20, #184]
  41a2cc:	mov	w25, w0
  41a2d0:	ldr	x9, [x8, x22, lsl #3]
  41a2d4:	ldr	x8, [x8, x24, lsl #3]
  41a2d8:	cbz	x9, 41a354 <_obstack_memory_used@@Base+0x84d0>
  41a2dc:	ldr	x9, [x9, #16]
  41a2e0:	str	x9, [sp, #8]
  41a2e4:	cbz	x8, 41a35c <_obstack_memory_used@@Base+0x84d8>
  41a2e8:	ldr	x1, [x8, #80]
  41a2ec:	ldr	x2, [sp, #24]
  41a2f0:	add	x0, sp, #0x20
  41a2f4:	bl	41ac0c <_obstack_memory_used@@Base+0x8d88>
  41a2f8:	stur	w0, [x29, #-4]
  41a2fc:	cbnz	w0, 41a3f4 <_obstack_memory_used@@Base+0x8570>
  41a300:	ldr	x1, [sp, #16]
  41a304:	sub	x0, x29, #0x4
  41a308:	add	x2, sp, #0x20
  41a30c:	mov	w3, w25
  41a310:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41a314:	ldr	x8, [x20, #184]
  41a318:	lsl	x24, x24, #3
  41a31c:	str	x0, [x8, x24]
  41a320:	ldr	x0, [sp, #48]
  41a324:	bl	402bd0 <free@plt>
  41a328:	ldr	x8, [x20, #184]
  41a32c:	ldur	w9, [x29, #-4]
  41a330:	ldr	x8, [x8, x24]
  41a334:	cmp	w9, #0x0
  41a338:	ccmp	x8, #0x0, #0x0, ne  // ne = any
  41a33c:	mov	w8, #0x5                   	// #5
  41a340:	csel	w8, w8, wzr, eq  // eq = none
  41a344:	ldr	x24, [sp]
  41a348:	ldr	x25, [sp, #16]
  41a34c:	cbnz	w8, 41a274 <_obstack_memory_used@@Base+0x83f0>
  41a350:	b	41a394 <_obstack_memory_used@@Base+0x8510>
  41a354:	str	xzr, [sp, #8]
  41a358:	cbnz	x8, 41a2e8 <_obstack_memory_used@@Base+0x8464>
  41a35c:	ldp	x1, x2, [sp, #16]
  41a360:	sub	x0, x29, #0x4
  41a364:	mov	w3, w25
  41a368:	mov	x25, x1
  41a36c:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41a370:	ldr	x8, [x20, #184]
  41a374:	lsl	x9, x24, #3
  41a378:	ldr	x24, [sp]
  41a37c:	str	x0, [x8, x9]
  41a380:	ldr	x8, [x20, #184]
  41a384:	ldr	x8, [x8, x9]
  41a388:	cbnz	x8, 41a394 <_obstack_memory_used@@Base+0x8510>
  41a38c:	ldur	w8, [x29, #-4]
  41a390:	cbnz	w8, 41a3ec <_obstack_memory_used@@Base+0x8568>
  41a394:	cmp	x19, x21
  41a398:	b.ne	41a3e4 <_obstack_memory_used@@Base+0x8560>  // b.any
  41a39c:	ldr	x8, [x20, #184]
  41a3a0:	ldr	x9, [sp, #8]
  41a3a4:	ldr	x8, [x8, x22, lsl #3]
  41a3a8:	ldr	x8, [x8, #16]
  41a3ac:	cmp	x8, x9
  41a3b0:	b.le	41a3e4 <_obstack_memory_used@@Base+0x8560>
  41a3b4:	ldr	x19, [sp, #24]
  41a3b8:	mov	x0, x20
  41a3bc:	mov	x2, x22
  41a3c0:	mov	x1, x19
  41a3c4:	bl	41a074 <_obstack_memory_used@@Base+0x81f0>
  41a3c8:	stur	w0, [x29, #-4]
  41a3cc:	cbnz	w0, 41a3ec <_obstack_memory_used@@Base+0x8568>
  41a3d0:	mov	x0, x20
  41a3d4:	mov	x1, x19
  41a3d8:	bl	41a138 <_obstack_memory_used@@Base+0x82b4>
  41a3dc:	stur	w0, [x29, #-4]
  41a3e0:	cbnz	w0, 41a3ec <_obstack_memory_used@@Base+0x8568>
  41a3e4:	mov	w8, wzr
  41a3e8:	b	41a274 <_obstack_memory_used@@Base+0x83f0>
  41a3ec:	mov	w8, #0x5                   	// #5
  41a3f0:	b	41a274 <_obstack_memory_used@@Base+0x83f0>
  41a3f4:	ldr	x0, [sp, #48]
  41a3f8:	bl	402bd0 <free@plt>
  41a3fc:	mov	w8, #0x5                   	// #5
  41a400:	b	41a344 <_obstack_memory_used@@Base+0x84c0>
  41a404:	mov	w8, wzr
  41a408:	cbz	w8, 41a184 <_obstack_memory_used@@Base+0x8300>
  41a40c:	cmp	w8, #0x4
  41a410:	b.eq	41a184 <_obstack_memory_used@@Base+0x8300>  // b.none
  41a414:	b	41a44c <_obstack_memory_used@@Base+0x85c8>
  41a418:	mov	w8, #0x5                   	// #5
  41a41c:	cbnz	w8, 41a40c <_obstack_memory_used@@Base+0x8588>
  41a420:	b	41a184 <_obstack_memory_used@@Base+0x8300>
  41a424:	stur	wzr, [x29, #-4]
  41a428:	ldur	w0, [x29, #-4]
  41a42c:	ldp	x20, x19, [sp, #144]
  41a430:	ldp	x22, x21, [sp, #128]
  41a434:	ldp	x24, x23, [sp, #112]
  41a438:	ldp	x26, x25, [sp, #96]
  41a43c:	ldp	x28, x27, [sp, #80]
  41a440:	ldp	x29, x30, [sp, #64]
  41a444:	add	sp, sp, #0xa0
  41a448:	ret
  41a44c:	cmp	w8, #0x5
  41a450:	b.eq	41a428 <_obstack_memory_used@@Base+0x85a4>  // b.none
  41a454:	b	41a42c <_obstack_memory_used@@Base+0x85a8>
  41a458:	stp	x29, x30, [sp, #-32]!
  41a45c:	ldr	x8, [x0, #64]
  41a460:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  41a464:	str	x19, [sp, #16]
  41a468:	mov	x29, sp
  41a46c:	cmp	x8, x9
  41a470:	b.hi	41a518 <_obstack_memory_used@@Base+0x8694>  // b.pmore
  41a474:	ldr	x9, [x0, #88]
  41a478:	lsl	x8, x8, #1
  41a47c:	sxtw	x10, w1
  41a480:	mov	x19, x0
  41a484:	cmp	x9, x8
  41a488:	csel	x8, x9, x8, lt  // lt = tstop
  41a48c:	cmp	x8, x10
  41a490:	csel	x1, x8, x10, gt
  41a494:	bl	413fb0 <_obstack_memory_used@@Base+0x212c>
  41a498:	cbnz	w0, 41a50c <_obstack_memory_used@@Base+0x8688>
  41a49c:	ldr	x0, [x19, #184]
  41a4a0:	cbz	x0, 41a4bc <_obstack_memory_used@@Base+0x8638>
  41a4a4:	ldr	x8, [x19, #64]
  41a4a8:	lsl	x8, x8, #3
  41a4ac:	add	x1, x8, #0x8
  41a4b0:	bl	402a40 <realloc@plt>
  41a4b4:	cbz	x0, 41a518 <_obstack_memory_used@@Base+0x8694>
  41a4b8:	str	x0, [x19, #184]
  41a4bc:	ldr	w8, [x19, #144]
  41a4c0:	ldrb	w9, [x19, #136]
  41a4c4:	cmp	w8, #0x2
  41a4c8:	cbz	w9, 41a4e0 <_obstack_memory_used@@Base+0x865c>
  41a4cc:	mov	x0, x19
  41a4d0:	b.lt	41a4f0 <_obstack_memory_used@@Base+0x866c>  // b.tstop
  41a4d4:	bl	414064 <_obstack_memory_used@@Base+0x21e0>
  41a4d8:	cbz	w0, 41a508 <_obstack_memory_used@@Base+0x8684>
  41a4dc:	b	41a50c <_obstack_memory_used@@Base+0x8688>
  41a4e0:	b.lt	41a4f8 <_obstack_memory_used@@Base+0x8674>  // b.tstop
  41a4e4:	mov	x0, x19
  41a4e8:	bl	4146dc <_obstack_memory_used@@Base+0x2858>
  41a4ec:	b	41a508 <_obstack_memory_used@@Base+0x8684>
  41a4f0:	bl	41465c <_obstack_memory_used@@Base+0x27d8>
  41a4f4:	b	41a508 <_obstack_memory_used@@Base+0x8684>
  41a4f8:	ldr	x8, [x19, #120]
  41a4fc:	cbz	x8, 41a508 <_obstack_memory_used@@Base+0x8684>
  41a500:	mov	x0, x19
  41a504:	bl	414880 <_obstack_memory_used@@Base+0x29fc>
  41a508:	mov	w0, wzr
  41a50c:	ldr	x19, [sp, #16]
  41a510:	ldp	x29, x30, [sp], #32
  41a514:	ret
  41a518:	mov	w0, #0xc                   	// #12
  41a51c:	b	41a50c <_obstack_memory_used@@Base+0x8688>
  41a520:	stp	x29, x30, [sp, #-64]!
  41a524:	stp	x22, x21, [sp, #32]
  41a528:	stp	x20, x19, [sp, #48]
  41a52c:	ldrb	w8, [x2, #104]
  41a530:	mov	x20, x2
  41a534:	mov	x19, x1
  41a538:	mov	x21, x0
  41a53c:	str	x23, [sp, #16]
  41a540:	mov	x29, sp
  41a544:	tbnz	w8, #5, 41a5a4 <_obstack_memory_used@@Base+0x8720>
  41a548:	ldr	x8, [x19, #72]
  41a54c:	ldr	x9, [x19, #8]
  41a550:	add	x10, x8, #0x1
  41a554:	str	x10, [x19, #72]
  41a558:	ldrb	w22, [x9, x8]
  41a55c:	ldr	x8, [x20, #88]
  41a560:	cbnz	x8, 41a58c <_obstack_memory_used@@Base+0x8708>
  41a564:	ldr	x23, [x20, #96]
  41a568:	cbnz	x23, 41a5c0 <_obstack_memory_used@@Base+0x873c>
  41a56c:	ldr	x0, [x19, #152]
  41a570:	mov	x1, x20
  41a574:	bl	41c39c <_obstack_memory_used@@Base+0xa518>
  41a578:	tbnz	w0, #0, 41a55c <_obstack_memory_used@@Base+0x86d8>
  41a57c:	mov	x0, xzr
  41a580:	mov	w8, #0xc                   	// #12
  41a584:	str	w8, [x21]
  41a588:	b	41a590 <_obstack_memory_used@@Base+0x870c>
  41a58c:	ldr	x0, [x8, x22, lsl #3]
  41a590:	ldp	x20, x19, [sp, #48]
  41a594:	ldp	x22, x21, [sp, #32]
  41a598:	ldr	x23, [sp, #16]
  41a59c:	ldp	x29, x30, [sp], #64
  41a5a0:	ret
  41a5a4:	mov	x0, x19
  41a5a8:	mov	x1, x20
  41a5ac:	bl	41c1d0 <_obstack_memory_used@@Base+0xa34c>
  41a5b0:	str	w0, [x21]
  41a5b4:	cbz	w0, 41a548 <_obstack_memory_used@@Base+0x86c4>
  41a5b8:	mov	x0, xzr
  41a5bc:	b	41a590 <_obstack_memory_used@@Base+0x870c>
  41a5c0:	ldr	x8, [x19, #72]
  41a5c4:	ldr	w2, [x19, #160]
  41a5c8:	mov	x0, x19
  41a5cc:	sub	x1, x8, #0x1
  41a5d0:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41a5d4:	ubfiz	w8, w0, #8, #1
  41a5d8:	orr	x8, x8, x22
  41a5dc:	ldr	x0, [x23, x8, lsl #3]
  41a5e0:	b	41a590 <_obstack_memory_used@@Base+0x870c>
  41a5e4:	sub	sp, sp, #0x60
  41a5e8:	stp	x29, x30, [sp, #32]
  41a5ec:	stp	x24, x23, [sp, #48]
  41a5f0:	stp	x22, x21, [sp, #64]
  41a5f4:	stp	x20, x19, [sp, #80]
  41a5f8:	ldr	x20, [x1, #72]
  41a5fc:	ldp	x8, x9, [x1, #184]
  41a600:	ldr	x23, [x1, #152]
  41a604:	mov	x22, x2
  41a608:	mov	x19, x1
  41a60c:	cmp	x20, x9
  41a610:	mov	x21, x0
  41a614:	add	x29, sp, #0x20
  41a618:	b.le	41a628 <_obstack_memory_used@@Base+0x87a4>
  41a61c:	str	x22, [x8, x20, lsl #3]
  41a620:	str	x20, [x19, #192]
  41a624:	b	41a6c0 <_obstack_memory_used@@Base+0x883c>
  41a628:	ldr	x9, [x8, x20, lsl #3]
  41a62c:	cbz	x9, 41a65c <_obstack_memory_used@@Base+0x87d8>
  41a630:	ldr	x8, [x8, x20, lsl #3]
  41a634:	ldr	x2, [x8, #80]
  41a638:	cbz	x22, 41a664 <_obstack_memory_used@@Base+0x87e0>
  41a63c:	ldr	x24, [x22, #80]
  41a640:	mov	x0, sp
  41a644:	mov	x1, x24
  41a648:	bl	41ac0c <_obstack_memory_used@@Base+0x8d88>
  41a64c:	str	w0, [x21]
  41a650:	cbz	w0, 41a678 <_obstack_memory_used@@Base+0x87f4>
  41a654:	mov	w8, wzr
  41a658:	b	41a6bc <_obstack_memory_used@@Base+0x8838>
  41a65c:	str	x22, [x8, x20, lsl #3]
  41a660:	b	41a6c0 <_obstack_memory_used@@Base+0x883c>
  41a664:	ldr	x8, [x2, #16]
  41a668:	ldr	q0, [x2]
  41a66c:	mov	x24, xzr
  41a670:	str	x8, [sp, #16]
  41a674:	str	q0, [sp]
  41a678:	ldr	x8, [x19, #72]
  41a67c:	ldr	w2, [x19, #160]
  41a680:	mov	x0, x19
  41a684:	sub	x1, x8, #0x1
  41a688:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41a68c:	mov	w3, w0
  41a690:	mov	x2, sp
  41a694:	mov	x0, x21
  41a698:	mov	x1, x23
  41a69c:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41a6a0:	ldr	x8, [x19, #184]
  41a6a4:	mov	x22, x0
  41a6a8:	str	x0, [x8, x20, lsl #3]
  41a6ac:	cbz	x24, 41a6b8 <_obstack_memory_used@@Base+0x8834>
  41a6b0:	ldr	x0, [sp, #16]
  41a6b4:	bl	402bd0 <free@plt>
  41a6b8:	mov	w8, #0x1                   	// #1
  41a6bc:	cbz	w8, 41a710 <_obstack_memory_used@@Base+0x888c>
  41a6c0:	cbz	x22, 41a714 <_obstack_memory_used@@Base+0x8890>
  41a6c4:	ldr	x8, [x23, #152]
  41a6c8:	cbz	x8, 41a714 <_obstack_memory_used@@Base+0x8890>
  41a6cc:	add	x23, x22, #0x8
  41a6d0:	mov	x0, x19
  41a6d4:	mov	x1, x23
  41a6d8:	mov	x2, x20
  41a6dc:	bl	41a074 <_obstack_memory_used@@Base+0x81f0>
  41a6e0:	str	w0, [x21]
  41a6e4:	cbnz	w0, 41a710 <_obstack_memory_used@@Base+0x888c>
  41a6e8:	ldrb	w8, [x22, #104]
  41a6ec:	tbz	w8, #6, 41a714 <_obstack_memory_used@@Base+0x8890>
  41a6f0:	mov	x0, x19
  41a6f4:	mov	x1, x23
  41a6f8:	bl	41a138 <_obstack_memory_used@@Base+0x82b4>
  41a6fc:	str	w0, [x21]
  41a700:	cbnz	w0, 41a710 <_obstack_memory_used@@Base+0x888c>
  41a704:	ldr	x8, [x19, #184]
  41a708:	ldr	x22, [x8, x20, lsl #3]
  41a70c:	b	41a714 <_obstack_memory_used@@Base+0x8890>
  41a710:	mov	x22, xzr
  41a714:	mov	x0, x22
  41a718:	ldp	x20, x19, [sp, #80]
  41a71c:	ldp	x22, x21, [sp, #64]
  41a720:	ldp	x24, x23, [sp, #48]
  41a724:	ldp	x29, x30, [sp, #32]
  41a728:	add	sp, sp, #0x60
  41a72c:	ret
  41a730:	stp	x29, x30, [sp, #-32]!
  41a734:	stp	x20, x19, [sp, #16]
  41a738:	mov	x19, x1
  41a73c:	mov	x20, x0
  41a740:	mov	x29, sp
  41a744:	ldr	x8, [x19, #192]
  41a748:	ldr	x9, [x19, #72]
  41a74c:	cmp	x9, x8
  41a750:	b.ge	41a790 <_obstack_memory_used@@Base+0x890c>  // b.tcont
  41a754:	ldr	x10, [x19, #72]
  41a758:	ldr	x11, [x19, #184]
  41a75c:	add	x10, x10, #0x1
  41a760:	str	x10, [x19, #72]
  41a764:	add	x10, x11, x9, lsl #3
  41a768:	ldr	x10, [x10, #8]
  41a76c:	add	x9, x9, #0x1
  41a770:	cbz	x10, 41a74c <_obstack_memory_used@@Base+0x88c8>
  41a774:	mov	x0, x20
  41a778:	mov	x1, x19
  41a77c:	mov	x2, xzr
  41a780:	bl	41a5e4 <_obstack_memory_used@@Base+0x8760>
  41a784:	mov	w8, #0x1                   	// #1
  41a788:	cbnz	w8, 41a798 <_obstack_memory_used@@Base+0x8914>
  41a78c:	b	41a7a8 <_obstack_memory_used@@Base+0x8924>
  41a790:	mov	w8, wzr
  41a794:	cbz	w8, 41a7a8 <_obstack_memory_used@@Base+0x8924>
  41a798:	cbnz	x0, 41a7ac <_obstack_memory_used@@Base+0x8928>
  41a79c:	ldr	w8, [x20]
  41a7a0:	cbz	w8, 41a744 <_obstack_memory_used@@Base+0x88c0>
  41a7a4:	b	41a7ac <_obstack_memory_used@@Base+0x8928>
  41a7a8:	mov	x0, xzr
  41a7ac:	ldp	x20, x19, [sp, #16]
  41a7b0:	ldp	x29, x30, [sp], #32
  41a7b4:	ret
  41a7b8:	stp	x29, x30, [sp, #-48]!
  41a7bc:	stp	x22, x21, [sp, #16]
  41a7c0:	stp	x20, x19, [sp, #32]
  41a7c4:	ldp	x8, x22, [x0, #232]
  41a7c8:	mov	x19, x2
  41a7cc:	mov	x20, x0
  41a7d0:	mov	x21, x1
  41a7d4:	cmp	x8, x22
  41a7d8:	mov	x29, sp
  41a7dc:	b.eq	41a82c <_obstack_memory_used@@Base+0x89a8>  // b.none
  41a7e0:	mov	w0, #0x1                   	// #1
  41a7e4:	mov	w1, #0x30                  	// #48
  41a7e8:	bl	402a10 <calloc@plt>
  41a7ec:	ldr	x8, [x20, #232]
  41a7f0:	ldr	x9, [x20, #248]
  41a7f4:	lsl	x10, x8, #3
  41a7f8:	str	x0, [x9, x10]
  41a7fc:	ldr	x9, [x20, #248]
  41a800:	ldr	x9, [x9, x10]
  41a804:	cbz	x9, 41a848 <_obstack_memory_used@@Base+0x89c4>
  41a808:	mov	w0, wzr
  41a80c:	add	x8, x8, #0x1
  41a810:	str	x21, [x9, #8]
  41a814:	str	x8, [x20, #232]
  41a818:	str	x19, [x9]
  41a81c:	ldp	x20, x19, [sp, #32]
  41a820:	ldp	x22, x21, [sp, #16]
  41a824:	ldp	x29, x30, [sp], #48
  41a828:	ret
  41a82c:	ldr	x0, [x20, #248]
  41a830:	lsl	x1, x22, #4
  41a834:	bl	402a40 <realloc@plt>
  41a838:	cbz	x0, 41a848 <_obstack_memory_used@@Base+0x89c4>
  41a83c:	lsl	x8, x22, #1
  41a840:	stp	x8, x0, [x20, #240]
  41a844:	b	41a7e0 <_obstack_memory_used@@Base+0x895c>
  41a848:	mov	w0, #0xc                   	// #12
  41a84c:	b	41a81c <_obstack_memory_used@@Base+0x8998>
  41a850:	sub	sp, sp, #0x90
  41a854:	stp	x29, x30, [sp, #48]
  41a858:	stp	x28, x27, [sp, #64]
  41a85c:	stp	x26, x25, [sp, #80]
  41a860:	stp	x24, x23, [sp, #96]
  41a864:	stp	x22, x21, [sp, #112]
  41a868:	stp	x20, x19, [sp, #128]
  41a86c:	ldr	x21, [x0, #152]
  41a870:	ldr	x28, [x0, #8]
  41a874:	add	x29, sp, #0x30
  41a878:	stp	x1, x2, [x29, #-16]
  41a87c:	mov	x1, x2
  41a880:	mov	x20, x0
  41a884:	bl	41ae0c <_obstack_memory_used@@Base+0x8f88>
  41a888:	cmn	x0, #0x1
  41a88c:	b.eq	41a8b8 <_obstack_memory_used@@Base+0x8a34>  // b.none
  41a890:	ldr	x8, [x20, #216]
  41a894:	ldur	x10, [x29, #-16]
  41a898:	mov	w9, #0x28                  	// #40
  41a89c:	madd	x8, x0, x9, x8
  41a8a0:	ldr	x9, [x8]
  41a8a4:	cmp	x9, x10
  41a8a8:	b.eq	41abe8 <_obstack_memory_used@@Base+0x8d64>  // b.none
  41a8ac:	ldrb	w9, [x8, #32]
  41a8b0:	add	x8, x8, #0x28
  41a8b4:	cbnz	w9, 41a8a0 <_obstack_memory_used@@Base+0x8a1c>
  41a8b8:	ldr	x8, [x20, #232]
  41a8bc:	cmp	x8, #0x1
  41a8c0:	b.lt	41abe8 <_obstack_memory_used@@Base+0x8d64>  // b.tstop
  41a8c4:	ldur	x9, [x29, #-16]
  41a8c8:	ldr	x8, [x21]
  41a8cc:	mov	x24, xzr
  41a8d0:	str	wzr, [sp, #12]
  41a8d4:	lsl	x9, x9, #4
  41a8d8:	ldr	x22, [x8, x9]
  41a8dc:	stp	x22, x21, [sp, #16]
  41a8e0:	b	41a8f4 <_obstack_memory_used@@Base+0x8a70>
  41a8e4:	ldr	x8, [x20, #232]
  41a8e8:	add	x24, x24, #0x1
  41a8ec:	cmp	x24, x8
  41a8f0:	b.ge	41abe8 <_obstack_memory_used@@Base+0x8d64>  // b.tcont
  41a8f4:	ldr	x8, [x20, #248]
  41a8f8:	ldr	x9, [x21]
  41a8fc:	ldr	x25, [x8, x24, lsl #3]
  41a900:	ldr	x8, [x25, #8]
  41a904:	lsl	x8, x8, #4
  41a908:	ldr	x8, [x9, x8]
  41a90c:	cmp	x8, x22
  41a910:	b.ne	41aa08 <_obstack_memory_used@@Base+0x8b84>  // b.any
  41a914:	ldr	x8, [x25, #32]
  41a918:	ldr	x23, [x25]
  41a91c:	cmp	x8, #0x1
  41a920:	b.lt	41aa10 <_obstack_memory_used@@Base+0x8b8c>  // b.tstop
  41a924:	ldur	x19, [x29, #-8]
  41a928:	mov	x21, xzr
  41a92c:	b	41a940 <_obstack_memory_used@@Base+0x8abc>
  41a930:	ldr	x8, [x25, #32]
  41a934:	add	x21, x21, #0x1
  41a938:	cmp	x21, x8
  41a93c:	b.ge	41aa24 <_obstack_memory_used@@Base+0x8ba0>  // b.tcont
  41a940:	ldr	x8, [x25, #40]
  41a944:	ldr	x26, [x8, x21, lsl #3]
  41a948:	ldr	x22, [x26, #8]
  41a94c:	sub	x27, x22, x23
  41a950:	cmp	x27, #0x1
  41a954:	b.lt	41a984 <_obstack_memory_used@@Base+0x8b00>  // b.tstop
  41a958:	ldr	x8, [x20, #48]
  41a95c:	add	x1, x27, x19
  41a960:	cmp	x1, x8
  41a964:	b.gt	41a9cc <_obstack_memory_used@@Base+0x8b48>
  41a968:	add	x0, x28, x19
  41a96c:	add	x1, x28, x23
  41a970:	mov	x2, x27
  41a974:	bl	402a20 <bcmp@plt>
  41a978:	cbz	w0, 41a984 <_obstack_memory_used@@Base+0x8b00>
  41a97c:	mov	w8, #0x7                   	// #7
  41a980:	b	41a9bc <_obstack_memory_used@@Base+0x8b38>
  41a984:	ldp	x3, x4, [x29, #-16]
  41a988:	mov	x0, x20
  41a98c:	mov	x1, x25
  41a990:	mov	x2, x26
  41a994:	add	x19, x27, x19
  41a998:	bl	41af30 <_obstack_memory_used@@Base+0x90ac>
  41a99c:	ldr	x28, [x20, #8]
  41a9a0:	cmp	w0, #0x1
  41a9a4:	b.ne	41a9b0 <_obstack_memory_used@@Base+0x8b2c>  // b.any
  41a9a8:	mov	w8, #0x9                   	// #9
  41a9ac:	b	41a9b8 <_obstack_memory_used@@Base+0x8b34>
  41a9b0:	cbnz	w0, 41a9ec <_obstack_memory_used@@Base+0x8b68>
  41a9b4:	mov	w8, wzr
  41a9b8:	mov	x23, x22
  41a9bc:	cbz	w8, 41a930 <_obstack_memory_used@@Base+0x8aac>
  41a9c0:	cmp	w8, #0x9
  41a9c4:	b.eq	41a930 <_obstack_memory_used@@Base+0x8aac>  // b.none
  41a9c8:	b	41aa1c <_obstack_memory_used@@Base+0x8b98>
  41a9cc:	ldr	x8, [x20, #88]
  41a9d0:	cmp	x1, x8
  41a9d4:	b.gt	41a97c <_obstack_memory_used@@Base+0x8af8>
  41a9d8:	mov	x0, x20
  41a9dc:	bl	41ae90 <_obstack_memory_used@@Base+0x900c>
  41a9e0:	cbnz	w0, 41a9fc <_obstack_memory_used@@Base+0x8b78>
  41a9e4:	ldr	x28, [x20, #8]
  41a9e8:	b	41a968 <_obstack_memory_used@@Base+0x8ae4>
  41a9ec:	mov	w8, #0x1                   	// #1
  41a9f0:	mov	x23, x22
  41a9f4:	str	w0, [sp, #12]
  41a9f8:	b	41a9bc <_obstack_memory_used@@Base+0x8b38>
  41a9fc:	mov	w8, #0x1                   	// #1
  41aa00:	str	w0, [sp, #12]
  41aa04:	b	41a9bc <_obstack_memory_used@@Base+0x8b38>
  41aa08:	mov	w8, #0x6                   	// #6
  41aa0c:	b	41abd4 <_obstack_memory_used@@Base+0x8d50>
  41aa10:	ldur	x19, [x29, #-8]
  41aa14:	mov	x21, xzr
  41aa18:	b	41aa24 <_obstack_memory_used@@Base+0x8ba0>
  41aa1c:	cmp	w8, #0x7
  41aa20:	b.ne	41aa34 <_obstack_memory_used@@Base+0x8bb0>  // b.any
  41aa24:	ldr	x8, [x25, #32]
  41aa28:	cmp	x21, x8
  41aa2c:	b.ge	41aa3c <_obstack_memory_used@@Base+0x8bb8>  // b.tcont
  41aa30:	mov	w8, #0x6                   	// #6
  41aa34:	ldp	x22, x21, [sp, #16]
  41aa38:	b	41abd4 <_obstack_memory_used@@Base+0x8d50>
  41aa3c:	ldur	x8, [x29, #-8]
  41aa40:	ldr	x22, [sp, #16]
  41aa44:	cmp	x21, #0x0
  41aa48:	cinc	x26, x23, ne  // ne = any
  41aa4c:	cmp	x26, x8
  41aa50:	b.le	41aa5c <_obstack_memory_used@@Base+0x8bd8>
  41aa54:	ldr	x21, [sp, #24]
  41aa58:	b	41abd0 <_obstack_memory_used@@Base+0x8d4c>
  41aa5c:	ldr	x21, [sp, #24]
  41aa60:	b	41aa74 <_obstack_memory_used@@Base+0x8bf0>
  41aa64:	ldur	x8, [x29, #-8]
  41aa68:	cmp	x26, x8
  41aa6c:	add	x26, x26, #0x1
  41aa70:	b.ge	41abd0 <_obstack_memory_used@@Base+0x8d4c>  // b.tcont
  41aa74:	ldr	x8, [x25]
  41aa78:	cmp	x26, x8
  41aa7c:	b.le	41aaa4 <_obstack_memory_used@@Base+0x8c20>
  41aa80:	ldr	x8, [x20, #48]
  41aa84:	cmp	x19, x8
  41aa88:	b.ge	41ab80 <_obstack_memory_used@@Base+0x8cfc>  // b.tcont
  41aa8c:	add	x9, x28, x26
  41aa90:	ldrb	w8, [x28, x19]
  41aa94:	ldurb	w9, [x9, #-1]
  41aa98:	add	x19, x19, #0x1
  41aa9c:	cmp	w8, w9
  41aaa0:	b.ne	41aba4 <_obstack_memory_used@@Base+0x8d20>  // b.any
  41aaa4:	ldr	x8, [x20, #184]
  41aaa8:	ldr	x8, [x8, x26, lsl #3]
  41aaac:	cbz	x8, 41ab50 <_obstack_memory_used@@Base+0x8ccc>
  41aab0:	add	x1, x8, #0x8
  41aab4:	mov	w3, #0x9                   	// #9
  41aab8:	mov	x0, x21
  41aabc:	mov	x2, x22
  41aac0:	bl	41afc0 <_obstack_memory_used@@Base+0x913c>
  41aac4:	cmn	x0, #0x1
  41aac8:	b.eq	41ab50 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  41aacc:	ldr	x8, [x25, #16]
  41aad0:	mov	x27, x0
  41aad4:	cbnz	x8, 41aaf4 <_obstack_memory_used@@Base+0x8c70>
  41aad8:	ldr	x8, [x25]
  41aadc:	mov	w0, #0x18                  	// #24
  41aae0:	sub	x8, x26, x8
  41aae4:	add	x1, x8, #0x1
  41aae8:	bl	402a10 <calloc@plt>
  41aaec:	str	x0, [x25, #16]
  41aaf0:	cbz	x0, 41ab6c <_obstack_memory_used@@Base+0x8ce8>
  41aaf4:	ldp	x2, x1, [x25, #8]
  41aaf8:	ldr	x3, [x25]
  41aafc:	mov	w6, #0x9                   	// #9
  41ab00:	mov	x0, x20
  41ab04:	mov	x4, x27
  41ab08:	mov	x5, x26
  41ab0c:	bl	41b030 <_obstack_memory_used@@Base+0x91ac>
  41ab10:	cmp	w0, #0x1
  41ab14:	b.eq	41ab50 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  41ab18:	cbnz	w0, 41abb8 <_obstack_memory_used@@Base+0x8d34>
  41ab1c:	mov	x0, x25
  41ab20:	mov	x1, x27
  41ab24:	mov	x2, x26
  41ab28:	bl	41b37c <_obstack_memory_used@@Base+0x94f8>
  41ab2c:	cbz	x0, 41ab6c <_obstack_memory_used@@Base+0x8ce8>
  41ab30:	ldp	x3, x4, [x29, #-16]
  41ab34:	mov	x2, x0
  41ab38:	mov	x0, x20
  41ab3c:	mov	x1, x25
  41ab40:	bl	41af30 <_obstack_memory_used@@Base+0x90ac>
  41ab44:	ldr	x28, [x20, #8]
  41ab48:	cmp	w0, #0x1
  41ab4c:	b.ne	41ab5c <_obstack_memory_used@@Base+0x8cd8>  // b.any
  41ab50:	mov	w8, #0xc                   	// #12
  41ab54:	cbnz	w8, 41abac <_obstack_memory_used@@Base+0x8d28>
  41ab58:	b	41aa64 <_obstack_memory_used@@Base+0x8be0>
  41ab5c:	cbnz	w0, 41abb8 <_obstack_memory_used@@Base+0x8d34>
  41ab60:	mov	w8, wzr
  41ab64:	cbnz	w8, 41abac <_obstack_memory_used@@Base+0x8d28>
  41ab68:	b	41aa64 <_obstack_memory_used@@Base+0x8be0>
  41ab6c:	mov	w8, #0xc                   	// #12
  41ab70:	str	w8, [sp, #12]
  41ab74:	mov	w8, #0x1                   	// #1
  41ab78:	cbnz	w8, 41abac <_obstack_memory_used@@Base+0x8d28>
  41ab7c:	b	41aa64 <_obstack_memory_used@@Base+0x8be0>
  41ab80:	ldr	x8, [x20, #88]
  41ab84:	cmp	x19, x8
  41ab88:	b.ge	41aba4 <_obstack_memory_used@@Base+0x8d20>  // b.tcont
  41ab8c:	add	w1, w19, #0x1
  41ab90:	mov	x0, x20
  41ab94:	bl	41a458 <_obstack_memory_used@@Base+0x85d4>
  41ab98:	cbnz	w0, 41abb8 <_obstack_memory_used@@Base+0x8d34>
  41ab9c:	ldr	x28, [x20, #8]
  41aba0:	b	41aa8c <_obstack_memory_used@@Base+0x8c08>
  41aba4:	mov	w8, #0xa                   	// #10
  41aba8:	cbz	w8, 41aa64 <_obstack_memory_used@@Base+0x8be0>
  41abac:	cmp	w8, #0xc
  41abb0:	b.eq	41aa64 <_obstack_memory_used@@Base+0x8be0>  // b.none
  41abb4:	b	41abc8 <_obstack_memory_used@@Base+0x8d44>
  41abb8:	mov	w8, #0x1                   	// #1
  41abbc:	str	w0, [sp, #12]
  41abc0:	cbnz	w8, 41abac <_obstack_memory_used@@Base+0x8d28>
  41abc4:	b	41aa64 <_obstack_memory_used@@Base+0x8be0>
  41abc8:	cmp	w8, #0xa
  41abcc:	b.ne	41abd4 <_obstack_memory_used@@Base+0x8d50>  // b.any
  41abd0:	mov	w8, wzr
  41abd4:	cmp	w8, #0x6
  41abd8:	b.eq	41a8e4 <_obstack_memory_used@@Base+0x8a60>  // b.none
  41abdc:	cbz	w8, 41a8e4 <_obstack_memory_used@@Base+0x8a60>
  41abe0:	ldr	w0, [sp, #12]
  41abe4:	b	41abec <_obstack_memory_used@@Base+0x8d68>
  41abe8:	mov	w0, wzr
  41abec:	ldp	x20, x19, [sp, #128]
  41abf0:	ldp	x22, x21, [sp, #112]
  41abf4:	ldp	x24, x23, [sp, #96]
  41abf8:	ldp	x26, x25, [sp, #80]
  41abfc:	ldp	x28, x27, [sp, #64]
  41ac00:	ldp	x29, x30, [sp, #48]
  41ac04:	add	sp, sp, #0x90
  41ac08:	ret
  41ac0c:	stp	x29, x30, [sp, #-64]!
  41ac10:	stp	x20, x19, [sp, #48]
  41ac14:	mov	x20, x2
  41ac18:	mov	x19, x0
  41ac1c:	stp	x24, x23, [sp, #16]
  41ac20:	stp	x22, x21, [sp, #32]
  41ac24:	mov	x29, sp
  41ac28:	cbz	x1, 41ad3c <_obstack_memory_used@@Base+0x8eb8>
  41ac2c:	ldr	x8, [x1, #8]
  41ac30:	mov	x21, x1
  41ac34:	cbz	x20, 41ad24 <_obstack_memory_used@@Base+0x8ea0>
  41ac38:	cmp	x8, #0x1
  41ac3c:	b.lt	41ad24 <_obstack_memory_used@@Base+0x8ea0>  // b.tstop
  41ac40:	ldr	x9, [x20, #8]
  41ac44:	cmp	x9, #0x1
  41ac48:	b.lt	41ad24 <_obstack_memory_used@@Base+0x8ea0>  // b.tstop
  41ac4c:	add	x8, x9, x8
  41ac50:	lsl	x0, x8, #3
  41ac54:	str	x8, [x19]
  41ac58:	bl	4028e0 <malloc@plt>
  41ac5c:	str	x0, [x19, #16]
  41ac60:	cbz	x0, 41ae04 <_obstack_memory_used@@Base+0x8f80>
  41ac64:	ldr	x8, [x21, #8]
  41ac68:	cmp	x8, #0x0
  41ac6c:	cset	w9, gt
  41ac70:	cmp	x8, #0x1
  41ac74:	b.lt	41ad6c <_obstack_memory_used@@Base+0x8ee8>  // b.tstop
  41ac78:	ldr	x10, [x20, #8]
  41ac7c:	cmp	x10, #0x1
  41ac80:	b.lt	41ad78 <_obstack_memory_used@@Base+0x8ef4>  // b.tstop
  41ac84:	mov	x24, xzr
  41ac88:	mov	x13, xzr
  41ac8c:	mov	x23, xzr
  41ac90:	mov	x22, x13
  41ac94:	mov	x10, x23
  41ac98:	ldr	x8, [x21, #16]
  41ac9c:	ldr	x9, [x20, #16]
  41aca0:	ldr	x12, [x8, x24, lsl #3]
  41aca4:	ldr	x11, [x9, x22, lsl #3]
  41aca8:	cmp	x12, x11
  41acac:	b.le	41ace4 <_obstack_memory_used@@Base+0x8e60>
  41acb0:	ldr	x8, [x19, #16]
  41acb4:	add	x22, x22, #0x1
  41acb8:	add	x23, x10, #0x1
  41acbc:	str	x11, [x8, x10, lsl #3]
  41acc0:	ldr	x8, [x21, #8]
  41acc4:	cmp	x8, x24
  41acc8:	cset	w9, gt
  41accc:	b.le	41adb8 <_obstack_memory_used@@Base+0x8f34>
  41acd0:	ldr	x10, [x20, #8]
  41acd4:	cmp	x22, x10
  41acd8:	mov	x10, x23
  41acdc:	b.lt	41ac98 <_obstack_memory_used@@Base+0x8e14>  // b.tstop
  41ace0:	b	41ad84 <_obstack_memory_used@@Base+0x8f00>
  41ace4:	ldr	x8, [x19, #16]
  41ace8:	add	x24, x24, #0x1
  41acec:	cinc	x13, x22, eq  // eq = none
  41acf0:	add	x23, x10, #0x1
  41acf4:	str	x12, [x8, x10, lsl #3]
  41acf8:	ldr	x8, [x21, #8]
  41acfc:	cmp	x8, x24
  41ad00:	cset	w9, gt
  41ad04:	b.le	41adb0 <_obstack_memory_used@@Base+0x8f2c>
  41ad08:	ldr	x14, [x20, #8]
  41ad0c:	cmp	x13, x14
  41ad10:	b.lt	41ac90 <_obstack_memory_used@@Base+0x8e0c>  // b.tstop
  41ad14:	cmp	x12, x11
  41ad18:	cinc	x22, x22, eq  // eq = none
  41ad1c:	add	x23, x10, #0x1
  41ad20:	b	41ad84 <_obstack_memory_used@@Base+0x8f00>
  41ad24:	cmp	x8, #0x1
  41ad28:	b.lt	41ad3c <_obstack_memory_used@@Base+0x8eb8>  // b.tstop
  41ad2c:	mov	x0, x19
  41ad30:	mov	x1, x21
  41ad34:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41ad38:	b	41adf0 <_obstack_memory_used@@Base+0x8f6c>
  41ad3c:	cbz	x20, 41ad5c <_obstack_memory_used@@Base+0x8ed8>
  41ad40:	ldr	x8, [x20, #8]
  41ad44:	cmp	x8, #0x1
  41ad48:	b.lt	41ad5c <_obstack_memory_used@@Base+0x8ed8>  // b.tstop
  41ad4c:	mov	x0, x19
  41ad50:	mov	x1, x20
  41ad54:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41ad58:	b	41adf0 <_obstack_memory_used@@Base+0x8f6c>
  41ad5c:	mov	w0, wzr
  41ad60:	stp	xzr, xzr, [x19]
  41ad64:	str	xzr, [x19, #16]
  41ad68:	b	41adf0 <_obstack_memory_used@@Base+0x8f6c>
  41ad6c:	mov	x22, xzr
  41ad70:	mov	x23, xzr
  41ad74:	b	41adb8 <_obstack_memory_used@@Base+0x8f34>
  41ad78:	mov	x24, xzr
  41ad7c:	mov	x23, xzr
  41ad80:	mov	x22, xzr
  41ad84:	cbz	w9, 41adb8 <_obstack_memory_used@@Base+0x8f34>
  41ad88:	ldr	x9, [x19, #16]
  41ad8c:	ldr	x10, [x21, #16]
  41ad90:	sub	x8, x8, x24
  41ad94:	lsl	x2, x8, #3
  41ad98:	add	x0, x9, x23, lsl #3
  41ad9c:	add	x1, x10, x24, lsl #3
  41ada0:	bl	402710 <memcpy@plt>
  41ada4:	ldr	x8, [x21, #8]
  41ada8:	sub	x9, x23, x24
  41adac:	b	41ade4 <_obstack_memory_used@@Base+0x8f60>
  41adb0:	cmp	x12, x11
  41adb4:	cinc	x22, x22, eq  // eq = none
  41adb8:	ldr	x8, [x20, #8]
  41adbc:	subs	x8, x8, x22
  41adc0:	b.le	41ade8 <_obstack_memory_used@@Base+0x8f64>
  41adc4:	ldr	x9, [x19, #16]
  41adc8:	ldr	x10, [x20, #16]
  41adcc:	lsl	x2, x8, #3
  41add0:	add	x0, x9, x23, lsl #3
  41add4:	add	x1, x10, x22, lsl #3
  41add8:	bl	402710 <memcpy@plt>
  41addc:	ldr	x8, [x20, #8]
  41ade0:	sub	x9, x23, x22
  41ade4:	add	x23, x9, x8
  41ade8:	mov	w0, wzr
  41adec:	str	x23, [x19, #8]
  41adf0:	ldp	x20, x19, [sp, #48]
  41adf4:	ldp	x22, x21, [sp, #32]
  41adf8:	ldp	x24, x23, [sp, #16]
  41adfc:	ldp	x29, x30, [sp], #64
  41ae00:	ret
  41ae04:	mov	w0, #0xc                   	// #12
  41ae08:	b	41adf0 <_obstack_memory_used@@Base+0x8f6c>
  41ae0c:	ldr	x9, [x0, #200]
  41ae10:	mov	x8, x0
  41ae14:	cmp	x9, #0x1
  41ae18:	b.lt	41ae64 <_obstack_memory_used@@Base+0x8fe0>  // b.tstop
  41ae1c:	ldr	x10, [x8, #216]
  41ae20:	mov	x0, xzr
  41ae24:	mov	w11, #0x28                  	// #40
  41ae28:	mov	x12, x9
  41ae2c:	add	x13, x0, x12
  41ae30:	cmp	x13, #0x0
  41ae34:	cinc	x13, x13, lt  // lt = tstop
  41ae38:	asr	x13, x13, #1
  41ae3c:	madd	x14, x13, x11, x10
  41ae40:	ldr	x14, [x14, #8]
  41ae44:	cmp	x14, x1
  41ae48:	csel	x12, x12, x13, lt  // lt = tstop
  41ae4c:	csinc	x0, x0, x13, ge  // ge = tcont
  41ae50:	cmp	x0, x12
  41ae54:	b.lt	41ae2c <_obstack_memory_used@@Base+0x8fa8>  // b.tstop
  41ae58:	cmp	x0, x9
  41ae5c:	b.lt	41ae70 <_obstack_memory_used@@Base+0x8fec>  // b.tstop
  41ae60:	b	41ae88 <_obstack_memory_used@@Base+0x9004>
  41ae64:	mov	x0, xzr
  41ae68:	cmp	x0, x9
  41ae6c:	b.ge	41ae88 <_obstack_memory_used@@Base+0x9004>  // b.tcont
  41ae70:	ldr	x8, [x8, #216]
  41ae74:	mov	w9, #0x28                  	// #40
  41ae78:	madd	x8, x0, x9, x8
  41ae7c:	ldr	x8, [x8, #8]
  41ae80:	cmp	x8, x1
  41ae84:	b.eq	41ae8c <_obstack_memory_used@@Base+0x9008>  // b.none
  41ae88:	mov	x0, #0xffffffffffffffff    	// #-1
  41ae8c:	ret
  41ae90:	stp	x29, x30, [sp, #-48]!
  41ae94:	stp	x20, x19, [sp, #32]
  41ae98:	ldr	x8, [x0, #64]
  41ae9c:	str	x21, [sp, #16]
  41aea0:	ldr	x21, [x0, #192]
  41aea4:	mov	x19, x0
  41aea8:	mov	x20, x1
  41aeac:	cmp	x8, x1
  41aeb0:	mov	x29, sp
  41aeb4:	b.gt	41aec4 <_obstack_memory_used@@Base+0x9040>
  41aeb8:	ldr	x9, [x19, #88]
  41aebc:	cmp	x8, x9
  41aec0:	b.lt	41aedc <_obstack_memory_used@@Base+0x9058>  // b.tstop
  41aec4:	ldr	x8, [x19, #48]
  41aec8:	cmp	x8, x20
  41aecc:	b.gt	41aeec <_obstack_memory_used@@Base+0x9068>
  41aed0:	ldr	x9, [x19, #88]
  41aed4:	cmp	x8, x9
  41aed8:	b.ge	41aeec <_obstack_memory_used@@Base+0x9068>  // b.tcont
  41aedc:	add	w1, w20, #0x1
  41aee0:	mov	x0, x19
  41aee4:	bl	41a458 <_obstack_memory_used@@Base+0x85d4>
  41aee8:	cbnz	w0, 41af20 <_obstack_memory_used@@Base+0x909c>
  41aeec:	cmp	x21, x20
  41aef0:	b.ge	41af1c <_obstack_memory_used@@Base+0x9098>  // b.tcont
  41aef4:	ldr	x8, [x19, #184]
  41aef8:	sub	x9, x20, x21
  41aefc:	lsl	x2, x9, #3
  41af00:	mov	w1, wzr
  41af04:	add	x8, x8, x21, lsl #3
  41af08:	add	x0, x8, #0x8
  41af0c:	bl	4029c0 <memset@plt>
  41af10:	mov	w0, wzr
  41af14:	str	x20, [x19, #192]
  41af18:	b	41af20 <_obstack_memory_used@@Base+0x909c>
  41af1c:	mov	w0, wzr
  41af20:	ldp	x20, x19, [sp, #32]
  41af24:	ldr	x21, [sp, #16]
  41af28:	ldp	x29, x30, [sp], #48
  41af2c:	ret
  41af30:	stp	x29, x30, [sp, #-64]!
  41af34:	stp	x22, x21, [sp, #32]
  41af38:	stp	x20, x19, [sp, #48]
  41af3c:	mov	x22, x2
  41af40:	str	x23, [sp, #16]
  41af44:	mov	x23, x3
  41af48:	ldr	x2, [x2]
  41af4c:	ldr	x3, [x22, #8]
  41af50:	mov	x19, x4
  41af54:	mov	x21, x1
  41af58:	add	x1, x22, #0x10
  41af5c:	mov	w6, #0x8                   	// #8
  41af60:	mov	x4, x23
  41af64:	mov	x5, x19
  41af68:	mov	x29, sp
  41af6c:	mov	x20, x0
  41af70:	bl	41b030 <_obstack_memory_used@@Base+0x91ac>
  41af74:	cbnz	w0, 41afac <_obstack_memory_used@@Base+0x9128>
  41af78:	ldr	x3, [x21]
  41af7c:	ldr	x4, [x22, #8]
  41af80:	mov	x0, x20
  41af84:	mov	x1, x23
  41af88:	mov	x2, x19
  41af8c:	bl	41b3fc <_obstack_memory_used@@Base+0x9578>
  41af90:	cbnz	w0, 41afac <_obstack_memory_used@@Base+0x9128>
  41af94:	ldr	x8, [x22, #8]
  41af98:	ldr	x9, [x21]
  41af9c:	mov	x0, x20
  41afa0:	add	x8, x8, x19
  41afa4:	sub	x1, x8, x9
  41afa8:	bl	41ae90 <_obstack_memory_used@@Base+0x900c>
  41afac:	ldp	x20, x19, [sp, #48]
  41afb0:	ldp	x22, x21, [sp, #32]
  41afb4:	ldr	x23, [sp, #16]
  41afb8:	ldp	x29, x30, [sp], #64
  41afbc:	ret
  41afc0:	ldr	x8, [x1, #8]
  41afc4:	cmp	x8, #0x1
  41afc8:	b.lt	41b028 <_obstack_memory_used@@Base+0x91a4>  // b.tstop
  41afcc:	ldr	x9, [x1, #16]
  41afd0:	ldr	x10, [x0]
  41afd4:	mov	x8, xzr
  41afd8:	b	41aff4 <_obstack_memory_used@@Base+0x9170>
  41afdc:	mov	w12, #0x1                   	// #1
  41afe0:	tbz	w12, #0, 41b024 <_obstack_memory_used@@Base+0x91a0>
  41afe4:	ldr	x11, [x1, #8]
  41afe8:	add	x8, x8, #0x1
  41afec:	cmp	x8, x11
  41aff0:	b.ge	41b028 <_obstack_memory_used@@Base+0x91a4>  // b.tcont
  41aff4:	ldr	x11, [x9, x8, lsl #3]
  41aff8:	add	x12, x10, x11, lsl #4
  41affc:	ldrb	w12, [x12, #8]
  41b000:	cmp	w12, w3
  41b004:	b.ne	41afdc <_obstack_memory_used@@Base+0x9158>  // b.any
  41b008:	lsl	x12, x11, #4
  41b00c:	ldr	x12, [x10, x12]
  41b010:	cmp	x12, x2
  41b014:	b.ne	41afdc <_obstack_memory_used@@Base+0x9158>  // b.any
  41b018:	mov	w12, wzr
  41b01c:	mov	x0, x11
  41b020:	tbnz	w12, #0, 41afe4 <_obstack_memory_used@@Base+0x9160>
  41b024:	ret
  41b028:	mov	x0, #0xffffffffffffffff    	// #-1
  41b02c:	ret
  41b030:	sub	sp, sp, #0xa0
  41b034:	stp	x29, x30, [sp, #64]
  41b038:	stp	x28, x27, [sp, #80]
  41b03c:	stp	x26, x25, [sp, #96]
  41b040:	stp	x24, x23, [sp, #112]
  41b044:	stp	x22, x21, [sp, #128]
  41b048:	stp	x20, x19, [sp, #144]
  41b04c:	ldr	x24, [x0, #152]
  41b050:	add	x29, sp, #0x40
  41b054:	stur	wzr, [x29, #-4]
  41b058:	ldrsw	x9, [x0, #224]
  41b05c:	ldr	x8, [x24]
  41b060:	ldr	x19, [x1, #8]
  41b064:	lsl	x10, x2, #4
  41b068:	mov	w23, w6
  41b06c:	ldr	x25, [x8, x10]
  41b070:	add	x8, x9, x5
  41b074:	mov	x20, x5
  41b078:	mov	x28, x2
  41b07c:	mov	x22, x1
  41b080:	mov	x21, x0
  41b084:	cmp	x19, x8
  41b088:	mov	x27, x3
  41b08c:	str	x4, [sp, #8]
  41b090:	b.le	41b324 <_obstack_memory_used@@Base+0x94a0>
  41b094:	ldr	x9, [x21, #184]
  41b098:	ldr	x8, [x22]
  41b09c:	ldr	x10, [x21, #72]
  41b0a0:	ldr	w2, [x21, #160]
  41b0a4:	str	x9, [sp, #24]
  41b0a8:	ldr	x9, [x22, #16]
  41b0ac:	cmp	x8, #0x0
  41b0b0:	csel	x26, x27, x8, eq  // eq = none
  41b0b4:	sub	x1, x26, #0x1
  41b0b8:	mov	x0, x21
  41b0bc:	str	x10, [sp, #16]
  41b0c0:	str	x9, [x21, #184]
  41b0c4:	str	x26, [x21, #72]
  41b0c8:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41b0cc:	cmp	x26, x27
  41b0d0:	mov	w19, w0
  41b0d4:	b.ne	41b110 <_obstack_memory_used@@Base+0x928c>  // b.any
  41b0d8:	add	x0, sp, #0x20
  41b0dc:	mov	x1, x28
  41b0e0:	bl	417e94 <_obstack_memory_used@@Base+0x6010>
  41b0e4:	stur	w0, [x29, #-4]
  41b0e8:	cbnz	w0, 41b304 <_obstack_memory_used@@Base+0x9480>
  41b0ec:	add	x1, sp, #0x20
  41b0f0:	mov	x0, x24
  41b0f4:	mov	x2, x25
  41b0f8:	mov	w3, w23
  41b0fc:	bl	41b508 <_obstack_memory_used@@Base+0x9684>
  41b100:	stur	w0, [x29, #-4]
  41b104:	cbnz	w0, 41b2ac <_obstack_memory_used@@Base+0x9428>
  41b108:	mov	x28, xzr
  41b10c:	b	41b144 <_obstack_memory_used@@Base+0x92c0>
  41b110:	ldr	x8, [x21, #184]
  41b114:	ldr	x28, [x8, x26, lsl #3]
  41b118:	cbz	x28, 41b124 <_obstack_memory_used@@Base+0x92a0>
  41b11c:	ldrb	w8, [x28, #104]
  41b120:	tbnz	w8, #6, 41b130 <_obstack_memory_used@@Base+0x92ac>
  41b124:	stp	xzr, xzr, [sp, #32]
  41b128:	str	xzr, [sp, #48]
  41b12c:	b	41b144 <_obstack_memory_used@@Base+0x92c0>
  41b130:	add	x1, x28, #0x8
  41b134:	add	x0, sp, #0x20
  41b138:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41b13c:	stur	w0, [x29, #-4]
  41b140:	cbnz	w0, 41b304 <_obstack_memory_used@@Base+0x9480>
  41b144:	cmp	x26, x27
  41b148:	b.eq	41b158 <_obstack_memory_used@@Base+0x92d4>  // b.none
  41b14c:	cbz	x28, 41b1ac <_obstack_memory_used@@Base+0x9328>
  41b150:	ldrb	w8, [x28, #104]
  41b154:	tbz	w8, #6, 41b1ac <_obstack_memory_used@@Base+0x9328>
  41b158:	ldr	x8, [sp, #40]
  41b15c:	cbz	x8, 41b180 <_obstack_memory_used@@Base+0x92fc>
  41b160:	add	x1, sp, #0x20
  41b164:	mov	x0, x21
  41b168:	mov	x2, x26
  41b16c:	mov	x3, x25
  41b170:	mov	w4, w23
  41b174:	bl	41b634 <_obstack_memory_used@@Base+0x97b0>
  41b178:	stur	w0, [x29, #-4]
  41b17c:	cbnz	w0, 41b2ac <_obstack_memory_used@@Base+0x9428>
  41b180:	sub	x0, x29, #0x4
  41b184:	add	x2, sp, #0x20
  41b188:	mov	x1, x24
  41b18c:	mov	w3, w19
  41b190:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41b194:	mov	x28, x0
  41b198:	cbnz	x0, 41b1a4 <_obstack_memory_used@@Base+0x9320>
  41b19c:	ldur	w8, [x29, #-4]
  41b1a0:	cbnz	w8, 41b2ac <_obstack_memory_used@@Base+0x9428>
  41b1a4:	ldr	x8, [x21, #184]
  41b1a8:	str	x28, [x8, x26, lsl #3]
  41b1ac:	cmp	x26, x20
  41b1b0:	b.ge	41b2c0 <_obstack_memory_used@@Base+0x943c>  // b.tcont
  41b1b4:	mov	x27, xzr
  41b1b8:	b	41b1dc <_obstack_memory_used@@Base+0x9358>
  41b1bc:	ldr	x8, [x21, #184]
  41b1c0:	cmp	x28, #0x0
  41b1c4:	csinc	x27, xzr, x27, ne  // ne = any
  41b1c8:	cmp	x20, x19
  41b1cc:	add	x8, x8, x26, lsl #3
  41b1d0:	mov	x26, x19
  41b1d4:	str	x28, [x8, #8]
  41b1d8:	b.eq	41b2bc <_obstack_memory_used@@Base+0x9438>  // b.none
  41b1dc:	ldrsw	x8, [x21, #224]
  41b1e0:	cmp	x27, x8
  41b1e4:	b.gt	41b2c0 <_obstack_memory_used@@Base+0x943c>
  41b1e8:	str	xzr, [sp, #40]
  41b1ec:	ldr	x8, [x21, #184]
  41b1f0:	add	x8, x8, x26, lsl #3
  41b1f4:	ldr	x8, [x8, #8]
  41b1f8:	cbz	x8, 41b210 <_obstack_memory_used@@Base+0x938c>
  41b1fc:	add	x1, x8, #0x8
  41b200:	add	x0, sp, #0x20
  41b204:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  41b208:	stur	w0, [x29, #-4]
  41b20c:	cbnz	w0, 41b2ac <_obstack_memory_used@@Base+0x9428>
  41b210:	cbz	x28, 41b230 <_obstack_memory_used@@Base+0x93ac>
  41b214:	add	x2, x28, #0x20
  41b218:	add	x3, sp, #0x20
  41b21c:	mov	x0, x21
  41b220:	mov	x1, x26
  41b224:	bl	41b8a8 <_obstack_memory_used@@Base+0x9a24>
  41b228:	stur	w0, [x29, #-4]
  41b22c:	cbnz	w0, 41b2ac <_obstack_memory_used@@Base+0x9428>
  41b230:	ldr	x8, [sp, #40]
  41b234:	add	x19, x26, #0x1
  41b238:	cbz	x8, 41b278 <_obstack_memory_used@@Base+0x93f4>
  41b23c:	add	x1, sp, #0x20
  41b240:	mov	x0, x24
  41b244:	mov	x2, x25
  41b248:	mov	w3, w23
  41b24c:	bl	41b508 <_obstack_memory_used@@Base+0x9684>
  41b250:	stur	w0, [x29, #-4]
  41b254:	cbnz	w0, 41b2ac <_obstack_memory_used@@Base+0x9428>
  41b258:	add	x1, sp, #0x20
  41b25c:	mov	x0, x21
  41b260:	mov	x2, x19
  41b264:	mov	x3, x25
  41b268:	mov	w4, w23
  41b26c:	bl	41b634 <_obstack_memory_used@@Base+0x97b0>
  41b270:	stur	w0, [x29, #-4]
  41b274:	cbnz	w0, 41b2ac <_obstack_memory_used@@Base+0x9428>
  41b278:	ldr	w2, [x21, #160]
  41b27c:	mov	x0, x21
  41b280:	mov	x1, x26
  41b284:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41b288:	mov	w3, w0
  41b28c:	sub	x0, x29, #0x4
  41b290:	add	x2, sp, #0x20
  41b294:	mov	x1, x24
  41b298:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41b29c:	mov	x28, x0
  41b2a0:	cbnz	x0, 41b1bc <_obstack_memory_used@@Base+0x9338>
  41b2a4:	ldur	w8, [x29, #-4]
  41b2a8:	cbz	w8, 41b1bc <_obstack_memory_used@@Base+0x9338>
  41b2ac:	ldr	x0, [sp, #48]
  41b2b0:	bl	402bd0 <free@plt>
  41b2b4:	ldur	w0, [x29, #-4]
  41b2b8:	b	41b304 <_obstack_memory_used@@Base+0x9480>
  41b2bc:	mov	x26, x20
  41b2c0:	ldr	x0, [sp, #48]
  41b2c4:	bl	402bd0 <free@plt>
  41b2c8:	ldr	x8, [x21, #184]
  41b2cc:	ldr	x9, [sp, #24]
  41b2d0:	ldr	x8, [x8, x20, lsl #3]
  41b2d4:	str	x26, [x22]
  41b2d8:	str	x9, [x21, #184]
  41b2dc:	ldr	x9, [sp, #16]
  41b2e0:	str	x9, [x21, #72]
  41b2e4:	cbz	x8, 41b300 <_obstack_memory_used@@Base+0x947c>
  41b2e8:	ldr	x1, [sp, #8]
  41b2ec:	add	x0, x8, #0x8
  41b2f0:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41b2f4:	cbz	x0, 41b300 <_obstack_memory_used@@Base+0x947c>
  41b2f8:	mov	w0, wzr
  41b2fc:	b	41b304 <_obstack_memory_used@@Base+0x9480>
  41b300:	mov	w0, #0x1                   	// #1
  41b304:	ldp	x20, x19, [sp, #144]
  41b308:	ldp	x22, x21, [sp, #128]
  41b30c:	ldp	x24, x23, [sp, #112]
  41b310:	ldp	x26, x25, [sp, #96]
  41b314:	ldp	x28, x27, [sp, #80]
  41b318:	ldp	x29, x30, [sp, #64]
  41b31c:	add	sp, sp, #0xa0
  41b320:	ret
  41b324:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41b328:	sub	x9, x9, x19
  41b32c:	cmp	x9, x8
  41b330:	b.le	41b374 <_obstack_memory_used@@Base+0x94f0>
  41b334:	add	x8, x8, #0x1
  41b338:	add	x26, x8, x19
  41b33c:	str	x8, [sp, #24]
  41b340:	lsr	x8, x26, #61
  41b344:	cbnz	x8, 41b374 <_obstack_memory_used@@Base+0x94f0>
  41b348:	ldr	x0, [x22, #16]
  41b34c:	lsl	x1, x26, #3
  41b350:	bl	402a40 <realloc@plt>
  41b354:	cbz	x0, 41b374 <_obstack_memory_used@@Base+0x94f0>
  41b358:	stp	x26, x0, [x22, #8]
  41b35c:	ldr	x8, [sp, #24]
  41b360:	add	x0, x0, x19, lsl #3
  41b364:	mov	w1, wzr
  41b368:	lsl	x2, x8, #3
  41b36c:	bl	4029c0 <memset@plt>
  41b370:	b	41b094 <_obstack_memory_used@@Base+0x9210>
  41b374:	mov	w0, #0xc                   	// #12
  41b378:	b	41b304 <_obstack_memory_used@@Base+0x9480>
  41b37c:	stp	x29, x30, [sp, #-48]!
  41b380:	stp	x22, x21, [sp, #16]
  41b384:	stp	x20, x19, [sp, #32]
  41b388:	ldp	x8, x9, [x0, #24]
  41b38c:	mov	x20, x2
  41b390:	mov	x19, x0
  41b394:	mov	x21, x1
  41b398:	cmp	x9, x8
  41b39c:	mov	x29, sp
  41b3a0:	b.eq	41b3d8 <_obstack_memory_used@@Base+0x9554>  // b.none
  41b3a4:	mov	w0, #0x1                   	// #1
  41b3a8:	mov	w1, #0x28                  	// #40
  41b3ac:	bl	402a10 <calloc@plt>
  41b3b0:	cbz	x0, 41b3c8 <_obstack_memory_used@@Base+0x9544>
  41b3b4:	ldp	x9, x8, [x19, #32]
  41b3b8:	str	x0, [x8, x9, lsl #3]
  41b3bc:	add	x8, x9, #0x1
  41b3c0:	stp	x21, x20, [x0]
  41b3c4:	str	x8, [x19, #32]
  41b3c8:	ldp	x20, x19, [sp, #32]
  41b3cc:	ldp	x22, x21, [sp, #16]
  41b3d0:	ldp	x29, x30, [sp], #48
  41b3d4:	ret
  41b3d8:	ldr	x0, [x19, #40]
  41b3dc:	mov	w22, #0x1                   	// #1
  41b3e0:	bfi	x22, x8, #1, #63
  41b3e4:	lsl	x1, x22, #3
  41b3e8:	bl	402a40 <realloc@plt>
  41b3ec:	cbz	x0, 41b3c8 <_obstack_memory_used@@Base+0x9544>
  41b3f0:	str	x0, [x19, #40]
  41b3f4:	str	x22, [x19, #24]
  41b3f8:	b	41b3a4 <_obstack_memory_used@@Base+0x9520>
  41b3fc:	stp	x29, x30, [sp, #-64]!
  41b400:	stp	x24, x23, [sp, #16]
  41b404:	stp	x22, x21, [sp, #32]
  41b408:	stp	x20, x19, [sp, #48]
  41b40c:	ldp	x9, x8, [x0, #200]
  41b410:	mov	x20, x4
  41b414:	mov	x21, x3
  41b418:	mov	x22, x2
  41b41c:	mov	x19, x0
  41b420:	cmp	x9, x8
  41b424:	mov	x23, x1
  41b428:	mov	x29, sp
  41b42c:	b.lt	41b46c <_obstack_memory_used@@Base+0x95e8>  // b.tstop
  41b430:	ldr	x0, [x19, #216]
  41b434:	add	x8, x8, x8, lsl #2
  41b438:	lsl	x1, x8, #4
  41b43c:	bl	402a40 <realloc@plt>
  41b440:	cbz	x0, 41b4f8 <_obstack_memory_used@@Base+0x9674>
  41b444:	ldp	x8, x24, [x19, #200]
  41b448:	mov	w9, #0x28                  	// #40
  41b44c:	str	x0, [x19, #216]
  41b450:	mov	w1, wzr
  41b454:	madd	x0, x8, x9, x0
  41b458:	add	x8, x24, x24, lsl #2
  41b45c:	lsl	x2, x8, #3
  41b460:	bl	4029c0 <memset@plt>
  41b464:	lsl	x8, x24, #1
  41b468:	str	x8, [x19, #208]
  41b46c:	ldr	x8, [x19, #200]
  41b470:	subs	x9, x8, #0x1
  41b474:	b.lt	41b4a0 <_obstack_memory_used@@Base+0x961c>  // b.tstop
  41b478:	ldr	x10, [x19, #216]
  41b47c:	mov	w11, #0x28                  	// #40
  41b480:	madd	x11, x9, x11, x10
  41b484:	ldr	x11, [x11, #8]
  41b488:	cmp	x11, x22
  41b48c:	b.ne	41b4a0 <_obstack_memory_used@@Base+0x961c>  // b.any
  41b490:	mov	w11, #0x28                  	// #40
  41b494:	madd	x9, x9, x11, x10
  41b498:	mov	w10, #0x1                   	// #1
  41b49c:	strb	w10, [x9, #32]
  41b4a0:	ldr	x10, [x19, #216]
  41b4a4:	mov	w11, #0x28                  	// #40
  41b4a8:	subs	x9, x20, x21
  41b4ac:	mov	w0, wzr
  41b4b0:	madd	x10, x8, x11, x10
  41b4b4:	add	x8, x8, #0x1
  41b4b8:	csetm	w11, eq  // eq = none
  41b4bc:	stp	x23, x22, [x10]
  41b4c0:	stp	x21, x20, [x10, #16]
  41b4c4:	strh	w11, [x10, #34]
  41b4c8:	str	x8, [x19, #200]
  41b4cc:	strb	wzr, [x10, #32]
  41b4d0:	ldrsw	x8, [x19, #224]
  41b4d4:	cmp	x9, x8
  41b4d8:	b.le	41b4e4 <_obstack_memory_used@@Base+0x9660>
  41b4dc:	mov	w0, wzr
  41b4e0:	str	w9, [x19, #224]
  41b4e4:	ldp	x20, x19, [sp, #48]
  41b4e8:	ldp	x22, x21, [sp, #32]
  41b4ec:	ldp	x24, x23, [sp, #16]
  41b4f0:	ldp	x29, x30, [sp], #64
  41b4f4:	ret
  41b4f8:	ldr	x0, [x19, #216]
  41b4fc:	bl	402bd0 <free@plt>
  41b500:	mov	w0, #0xc                   	// #12
  41b504:	b	41b4e4 <_obstack_memory_used@@Base+0x9660>
  41b508:	sub	sp, sp, #0x80
  41b50c:	stp	x29, x30, [sp, #32]
  41b510:	stp	x26, x25, [sp, #64]
  41b514:	stp	x24, x23, [sp, #80]
  41b518:	stp	x22, x21, [sp, #96]
  41b51c:	stp	x20, x19, [sp, #112]
  41b520:	mov	x19, x1
  41b524:	ldr	x1, [x1, #8]
  41b528:	mov	x22, x0
  41b52c:	add	x0, sp, #0x8
  41b530:	str	x27, [sp, #48]
  41b534:	add	x29, sp, #0x20
  41b538:	mov	w20, w3
  41b53c:	mov	x21, x2
  41b540:	bl	41813c <_obstack_memory_used@@Base+0x62b8>
  41b544:	cbnz	w0, 41b62c <_obstack_memory_used@@Base+0x97a8>
  41b548:	ldr	x8, [x19, #8]
  41b54c:	cmp	x8, #0x1
  41b550:	b.lt	41b5ec <_obstack_memory_used@@Base+0x9768>  // b.tstop
  41b554:	mov	x26, xzr
  41b558:	mov	w27, #0x18                  	// #24
  41b55c:	ldr	x8, [x19, #16]
  41b560:	mov	x0, x22
  41b564:	mov	x2, x21
  41b568:	mov	w3, w20
  41b56c:	ldr	x24, [x8, x26, lsl #3]
  41b570:	ldr	x8, [x22, #48]
  41b574:	madd	x25, x24, x27, x8
  41b578:	mov	x1, x25
  41b57c:	bl	41afc0 <_obstack_memory_used@@Base+0x913c>
  41b580:	cmn	x0, #0x1
  41b584:	b.eq	41b5c0 <_obstack_memory_used@@Base+0x973c>  // b.none
  41b588:	add	x1, sp, #0x8
  41b58c:	mov	x0, x22
  41b590:	mov	x2, x24
  41b594:	mov	x3, x21
  41b598:	mov	w4, w20
  41b59c:	bl	41ba84 <_obstack_memory_used@@Base+0x9c00>
  41b5a0:	cbnz	w0, 41b5d0 <_obstack_memory_used@@Base+0x974c>
  41b5a4:	mov	w8, #0x1                   	// #1
  41b5a8:	tbz	w8, #0, 41b608 <_obstack_memory_used@@Base+0x9784>
  41b5ac:	ldr	x8, [x19, #8]
  41b5b0:	add	x26, x26, #0x1
  41b5b4:	cmp	x26, x8
  41b5b8:	b.lt	41b55c <_obstack_memory_used@@Base+0x96d8>  // b.tstop
  41b5bc:	b	41b5ec <_obstack_memory_used@@Base+0x9768>
  41b5c0:	add	x0, sp, #0x8
  41b5c4:	mov	x1, x25
  41b5c8:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  41b5cc:	cbz	w0, 41b5a4 <_obstack_memory_used@@Base+0x9720>
  41b5d0:	mov	w24, w0
  41b5d4:	ldr	x0, [sp, #24]
  41b5d8:	bl	402bd0 <free@plt>
  41b5dc:	mov	w23, w24
  41b5e0:	mov	w8, wzr
  41b5e4:	tbnz	wzr, #0, 41b5ac <_obstack_memory_used@@Base+0x9728>
  41b5e8:	b	41b608 <_obstack_memory_used@@Base+0x9784>
  41b5ec:	ldr	x0, [x19, #16]
  41b5f0:	bl	402bd0 <free@plt>
  41b5f4:	ldr	x8, [sp, #24]
  41b5f8:	ldur	q0, [sp, #8]
  41b5fc:	mov	w23, wzr
  41b600:	str	x8, [x19, #16]
  41b604:	str	q0, [x19]
  41b608:	mov	w0, w23
  41b60c:	ldp	x20, x19, [sp, #112]
  41b610:	ldp	x22, x21, [sp, #96]
  41b614:	ldp	x24, x23, [sp, #80]
  41b618:	ldp	x26, x25, [sp, #64]
  41b61c:	ldr	x27, [sp, #48]
  41b620:	ldp	x29, x30, [sp, #32]
  41b624:	add	sp, sp, #0x80
  41b628:	ret
  41b62c:	mov	w23, w0
  41b630:	b	41b608 <_obstack_memory_used@@Base+0x9784>
  41b634:	sub	sp, sp, #0x90
  41b638:	stp	x29, x30, [sp, #48]
  41b63c:	stp	x28, x27, [sp, #64]
  41b640:	stp	x26, x25, [sp, #80]
  41b644:	stp	x24, x23, [sp, #96]
  41b648:	stp	x22, x21, [sp, #112]
  41b64c:	stp	x20, x19, [sp, #128]
  41b650:	ldr	x23, [x0, #152]
  41b654:	mov	x24, x1
  41b658:	mov	x1, x2
  41b65c:	add	x29, sp, #0x30
  41b660:	str	w4, [sp, #12]
  41b664:	str	x3, [sp]
  41b668:	mov	x21, x2
  41b66c:	mov	x22, x0
  41b670:	bl	41ae0c <_obstack_memory_used@@Base+0x8f88>
  41b674:	cmn	x0, #0x1
  41b678:	b.eq	41b880 <_obstack_memory_used@@Base+0x99fc>  // b.none
  41b67c:	mov	x25, x0
  41b680:	ldr	x8, [x22, #216]
  41b684:	mov	w9, #0x28                  	// #40
  41b688:	madd	x20, x25, x9, x8
  41b68c:	b	41b69c <_obstack_memory_used@@Base+0x9818>
  41b690:	ldrb	w8, [x20, #32]
  41b694:	add	x20, x20, #0x28
  41b698:	cbz	w8, 41b880 <_obstack_memory_used@@Base+0x99fc>
  41b69c:	ldr	x1, [x20]
  41b6a0:	mov	x0, x24
  41b6a4:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41b6a8:	cbz	x0, 41b6e8 <_obstack_memory_used@@Base+0x9864>
  41b6ac:	ldp	x9, x8, [x20, #16]
  41b6b0:	add	x8, x8, x21
  41b6b4:	sub	x19, x8, x9
  41b6b8:	cmp	x19, x21
  41b6bc:	b.ne	41b6f0 <_obstack_memory_used@@Base+0x986c>  // b.any
  41b6c0:	ldr	x8, [x23, #40]
  41b6c4:	ldr	x9, [x20]
  41b6c8:	mov	w10, #0x18                  	// #24
  41b6cc:	mov	x0, x24
  41b6d0:	madd	x8, x9, x10, x8
  41b6d4:	ldr	x8, [x8, #16]
  41b6d8:	ldr	x27, [x8]
  41b6dc:	mov	x1, x27
  41b6e0:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41b6e4:	cbz	x0, 41b728 <_obstack_memory_used@@Base+0x98a4>
  41b6e8:	mov	w8, #0x4                   	// #4
  41b6ec:	b	41b7e4 <_obstack_memory_used@@Base+0x9960>
  41b6f0:	ldr	x9, [x23, #24]
  41b6f4:	ldr	x8, [x22, #184]
  41b6f8:	ldr	x10, [x20]
  41b6fc:	ldr	x8, [x8, x19, lsl #3]
  41b700:	ldr	x27, [x9, x10, lsl #3]
  41b704:	cbz	x8, 41b784 <_obstack_memory_used@@Base+0x9900>
  41b708:	add	x28, x8, #0x8
  41b70c:	mov	x0, x28
  41b710:	mov	x1, x27
  41b714:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41b718:	cbz	x0, 41b7f4 <_obstack_memory_used@@Base+0x9970>
  41b71c:	mov	w8, #0x4                   	// #4
  41b720:	cbnz	w8, 41b7e4 <_obstack_memory_used@@Base+0x9960>
  41b724:	b	41b798 <_obstack_memory_used@@Base+0x9914>
  41b728:	add	x0, sp, #0x10
  41b72c:	mov	x1, x27
  41b730:	bl	417e94 <_obstack_memory_used@@Base+0x6010>
  41b734:	ldr	x2, [sp]
  41b738:	ldr	w3, [sp, #12]
  41b73c:	mov	w27, w0
  41b740:	stur	w0, [x29, #-4]
  41b744:	add	x1, sp, #0x10
  41b748:	mov	x0, x23
  41b74c:	bl	41b508 <_obstack_memory_used@@Base+0x9684>
  41b750:	mov	w28, w0
  41b754:	add	x1, sp, #0x10
  41b758:	mov	x0, x24
  41b75c:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  41b760:	ldr	x8, [sp, #32]
  41b764:	mov	w19, w0
  41b768:	mov	x0, x8
  41b76c:	bl	402bd0 <free@plt>
  41b770:	orr	w8, w28, w27
  41b774:	orr	w8, w8, w19
  41b778:	cbnz	w8, 41b828 <_obstack_memory_used@@Base+0x99a4>
  41b77c:	mov	w8, #0x2                   	// #2
  41b780:	b	41b7e4 <_obstack_memory_used@@Base+0x9960>
  41b784:	add	x0, sp, #0x10
  41b788:	mov	x1, x27
  41b78c:	bl	417e94 <_obstack_memory_used@@Base+0x6010>
  41b790:	stur	w0, [x29, #-4]
  41b794:	cbnz	w0, 41b844 <_obstack_memory_used@@Base+0x99c0>
  41b798:	sub	x0, x29, #0x4
  41b79c:	add	x2, sp, #0x10
  41b7a0:	mov	x1, x23
  41b7a4:	bl	41bbb4 <_obstack_memory_used@@Base+0x9d30>
  41b7a8:	ldr	x8, [x22, #184]
  41b7ac:	lsl	x19, x19, #3
  41b7b0:	str	x0, [x8, x19]
  41b7b4:	ldr	x0, [sp, #32]
  41b7b8:	bl	402bd0 <free@plt>
  41b7bc:	ldr	x8, [x22, #184]
  41b7c0:	ldur	w9, [x29, #-4]
  41b7c4:	ldr	x8, [x8, x19]
  41b7c8:	cmp	x8, #0x0
  41b7cc:	cset	w10, eq  // eq = none
  41b7d0:	cmp	w9, #0x0
  41b7d4:	cset	w11, ne  // ne = any
  41b7d8:	tst	w10, w11
  41b7dc:	and	w8, w10, w11
  41b7e0:	csel	w26, w9, w26, ne  // ne = any
  41b7e4:	cbz	w8, 41b690 <_obstack_memory_used@@Base+0x980c>
  41b7e8:	cmp	w8, #0x4
  41b7ec:	b.eq	41b690 <_obstack_memory_used@@Base+0x980c>  // b.none
  41b7f0:	b	41b874 <_obstack_memory_used@@Base+0x99f0>
  41b7f4:	add	x0, sp, #0x10
  41b7f8:	mov	x1, x28
  41b7fc:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41b800:	mov	w28, w0
  41b804:	stur	w0, [x29, #-4]
  41b808:	add	x0, sp, #0x10
  41b80c:	mov	x1, x27
  41b810:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41b814:	cbnz	w28, 41b850 <_obstack_memory_used@@Base+0x99cc>
  41b818:	tbz	w0, #0, 41b850 <_obstack_memory_used@@Base+0x99cc>
  41b81c:	mov	w8, wzr
  41b820:	cbnz	w8, 41b7e4 <_obstack_memory_used@@Base+0x9960>
  41b824:	b	41b798 <_obstack_memory_used@@Base+0x9914>
  41b828:	cmp	w28, #0x0
  41b82c:	csel	w8, w19, w28, eq  // eq = none
  41b830:	cmp	w27, #0x0
  41b834:	csel	w26, w8, w27, eq  // eq = none
  41b838:	stur	w26, [x29, #-4]
  41b83c:	mov	w8, #0x1                   	// #1
  41b840:	b	41b7e4 <_obstack_memory_used@@Base+0x9960>
  41b844:	mov	w8, #0x1                   	// #1
  41b848:	mov	w26, w0
  41b84c:	b	41b7e4 <_obstack_memory_used@@Base+0x9960>
  41b850:	ldr	x0, [sp, #32]
  41b854:	bl	402bd0 <free@plt>
  41b858:	cmp	w28, #0x0
  41b85c:	mov	w8, #0xc                   	// #12
  41b860:	csel	w26, w8, w28, eq  // eq = none
  41b864:	mov	w8, #0x1                   	// #1
  41b868:	stur	w26, [x29, #-4]
  41b86c:	cbnz	w8, 41b7e4 <_obstack_memory_used@@Base+0x9960>
  41b870:	b	41b798 <_obstack_memory_used@@Base+0x9914>
  41b874:	cmp	w8, #0x2
  41b878:	b.eq	41b680 <_obstack_memory_used@@Base+0x97fc>  // b.none
  41b87c:	b	41b884 <_obstack_memory_used@@Base+0x9a00>
  41b880:	mov	w26, wzr
  41b884:	mov	w0, w26
  41b888:	ldp	x20, x19, [sp, #128]
  41b88c:	ldp	x22, x21, [sp, #112]
  41b890:	ldp	x24, x23, [sp, #96]
  41b894:	ldp	x26, x25, [sp, #80]
  41b898:	ldp	x28, x27, [sp, #64]
  41b89c:	ldp	x29, x30, [sp, #48]
  41b8a0:	add	sp, sp, #0x90
  41b8a4:	ret
  41b8a8:	sub	sp, sp, #0xa0
  41b8ac:	stp	x29, x30, [sp, #64]
  41b8b0:	stp	x28, x27, [sp, #80]
  41b8b4:	stp	x26, x25, [sp, #96]
  41b8b8:	stp	x24, x23, [sp, #112]
  41b8bc:	stp	x22, x21, [sp, #128]
  41b8c0:	stp	x20, x19, [sp, #144]
  41b8c4:	add	x29, sp, #0x40
  41b8c8:	ldr	x22, [x0, #152]
  41b8cc:	stur	wzr, [x29, #-4]
  41b8d0:	stp	xzr, xzr, [sp, #32]
  41b8d4:	str	xzr, [sp, #48]
  41b8d8:	ldr	x8, [x2, #8]
  41b8dc:	cmp	x8, #0x1
  41b8e0:	b.lt	41ba50 <_obstack_memory_used@@Base+0x9bcc>  // b.tstop
  41b8e4:	add	x8, sp, #0x20
  41b8e8:	add	x8, x8, #0x10
  41b8ec:	mov	x23, x3
  41b8f0:	mov	x20, x2
  41b8f4:	mov	x21, x0
  41b8f8:	mov	x27, x1
  41b8fc:	mov	x24, xzr
  41b900:	stp	x8, x1, [sp, #16]
  41b904:	ldr	x8, [x20, #16]
  41b908:	ldr	x25, [x8, x24, lsl #3]
  41b90c:	ldr	x8, [x22]
  41b910:	add	x8, x8, x25, lsl #4
  41b914:	ldrb	w8, [x8, #10]
  41b918:	tbnz	w8, #4, 41b924 <_obstack_memory_used@@Base+0x9aa0>
  41b91c:	mov	w26, wzr
  41b920:	b	41b9c0 <_obstack_memory_used@@Base+0x9b3c>
  41b924:	mov	x0, x22
  41b928:	mov	x1, x25
  41b92c:	mov	x2, x21
  41b930:	mov	x3, x27
  41b934:	bl	41bde8 <_obstack_memory_used@@Base+0x9f64>
  41b938:	mov	w26, w0
  41b93c:	cmp	w0, #0x2
  41b940:	b.lt	41b9c0 <_obstack_memory_used@@Base+0x9b3c>  // b.tstop
  41b944:	ldr	x8, [x21, #184]
  41b948:	ldr	x9, [x22, #24]
  41b94c:	add	x19, x27, w26, sxtw
  41b950:	ldr	x8, [x8, x19, lsl #3]
  41b954:	ldr	x28, [x9, x25, lsl #3]
  41b958:	str	xzr, [sp, #40]
  41b95c:	cbz	x8, 41b974 <_obstack_memory_used@@Base+0x9af0>
  41b960:	add	x1, x8, #0x8
  41b964:	add	x0, sp, #0x20
  41b968:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  41b96c:	stur	w0, [x29, #-4]
  41b970:	cbnz	w0, 41ba2c <_obstack_memory_used@@Base+0x9ba8>
  41b974:	add	x0, sp, #0x20
  41b978:	mov	x1, x28
  41b97c:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41b980:	tbz	w0, #0, 41ba24 <_obstack_memory_used@@Base+0x9ba0>
  41b984:	sub	x0, x29, #0x4
  41b988:	add	x2, sp, #0x20
  41b98c:	mov	x1, x22
  41b990:	bl	41bbb4 <_obstack_memory_used@@Base+0x9d30>
  41b994:	ldr	x8, [x21, #184]
  41b998:	lsl	x9, x19, #3
  41b99c:	str	x0, [x8, x9]
  41b9a0:	ldr	x8, [x21, #184]
  41b9a4:	ldr	x9, [x8, x9]
  41b9a8:	mov	w8, wzr
  41b9ac:	cbnz	x9, 41b9b8 <_obstack_memory_used@@Base+0x9b34>
  41b9b0:	ldur	w27, [x29, #-4]
  41b9b4:	cbnz	w27, 41ba30 <_obstack_memory_used@@Base+0x9bac>
  41b9b8:	ldr	x27, [sp, #24]
  41b9bc:	cbnz	w8, 41b9f4 <_obstack_memory_used@@Base+0x9b70>
  41b9c0:	cbnz	w26, 41b9dc <_obstack_memory_used@@Base+0x9b58>
  41b9c4:	ldr	x8, [x22]
  41b9c8:	mov	x0, x21
  41b9cc:	mov	x2, x27
  41b9d0:	add	x1, x8, x25, lsl #4
  41b9d4:	bl	41c0c8 <_obstack_memory_used@@Base+0xa244>
  41b9d8:	tbz	w0, #0, 41b9f0 <_obstack_memory_used@@Base+0x9b6c>
  41b9dc:	ldr	x8, [x22, #24]
  41b9e0:	mov	x0, x23
  41b9e4:	ldr	x1, [x8, x25, lsl #3]
  41b9e8:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41b9ec:	tbz	w0, #0, 41ba0c <_obstack_memory_used@@Base+0x9b88>
  41b9f0:	mov	w8, wzr
  41b9f4:	cbnz	w8, 41ba60 <_obstack_memory_used@@Base+0x9bdc>
  41b9f8:	ldr	x8, [x20, #8]
  41b9fc:	add	x24, x24, #0x1
  41ba00:	cmp	x24, x8
  41ba04:	b.lt	41b904 <_obstack_memory_used@@Base+0x9a80>  // b.tstop
  41ba08:	b	41ba50 <_obstack_memory_used@@Base+0x9bcc>
  41ba0c:	ldr	x0, [sp, #48]
  41ba10:	bl	402bd0 <free@plt>
  41ba14:	mov	w8, #0x1                   	// #1
  41ba18:	mov	w9, #0xc                   	// #12
  41ba1c:	str	w9, [sp, #12]
  41ba20:	b	41b9f4 <_obstack_memory_used@@Base+0x9b70>
  41ba24:	mov	w27, #0xc                   	// #12
  41ba28:	b	41ba30 <_obstack_memory_used@@Base+0x9bac>
  41ba2c:	mov	w27, w0
  41ba30:	ldr	x8, [sp, #16]
  41ba34:	ldr	x0, [x8]
  41ba38:	bl	402bd0 <free@plt>
  41ba3c:	mov	w8, #0x1                   	// #1
  41ba40:	str	w27, [sp, #12]
  41ba44:	ldr	x27, [sp, #24]
  41ba48:	cbnz	w8, 41b9f4 <_obstack_memory_used@@Base+0x9b70>
  41ba4c:	b	41b9c0 <_obstack_memory_used@@Base+0x9b3c>
  41ba50:	ldr	x0, [sp, #48]
  41ba54:	bl	402bd0 <free@plt>
  41ba58:	mov	w0, wzr
  41ba5c:	b	41ba64 <_obstack_memory_used@@Base+0x9be0>
  41ba60:	ldr	w0, [sp, #12]
  41ba64:	ldp	x20, x19, [sp, #144]
  41ba68:	ldp	x22, x21, [sp, #128]
  41ba6c:	ldp	x24, x23, [sp, #112]
  41ba70:	ldp	x26, x25, [sp, #96]
  41ba74:	ldp	x28, x27, [sp, #80]
  41ba78:	ldp	x29, x30, [sp, #64]
  41ba7c:	add	sp, sp, #0xa0
  41ba80:	ret
  41ba84:	stp	x29, x30, [sp, #-80]!
  41ba88:	str	x25, [sp, #16]
  41ba8c:	stp	x24, x23, [sp, #32]
  41ba90:	stp	x22, x21, [sp, #48]
  41ba94:	stp	x20, x19, [sp, #64]
  41ba98:	mov	w20, w4
  41ba9c:	mov	x21, x3
  41baa0:	mov	x23, x2
  41baa4:	mov	x22, x1
  41baa8:	mov	x24, x0
  41baac:	mov	w25, #0x18                  	// #24
  41bab0:	mov	x29, sp
  41bab4:	b	41bac0 <_obstack_memory_used@@Base+0x9c3c>
  41bab8:	mov	w8, #0x2                   	// #2
  41babc:	cbnz	w8, 41bb8c <_obstack_memory_used@@Base+0x9d08>
  41bac0:	mov	x0, x22
  41bac4:	mov	x1, x23
  41bac8:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41bacc:	cbnz	x0, 41bb94 <_obstack_memory_used@@Base+0x9d10>
  41bad0:	ldr	x8, [x24]
  41bad4:	add	x9, x8, x23, lsl #4
  41bad8:	ldrb	w9, [x9, #8]
  41badc:	cmp	w9, w20
  41bae0:	b.ne	41bb10 <_obstack_memory_used@@Base+0x9c8c>  // b.any
  41bae4:	lsl	x9, x23, #4
  41bae8:	ldr	x8, [x8, x9]
  41baec:	cmp	x8, x21
  41baf0:	b.ne	41bb10 <_obstack_memory_used@@Base+0x9c8c>  // b.any
  41baf4:	cmp	w20, #0x9
  41baf8:	b.ne	41bab8 <_obstack_memory_used@@Base+0x9c34>  // b.any
  41bafc:	mov	x0, x22
  41bb00:	mov	x1, x23
  41bb04:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41bb08:	tbnz	w0, #0, 41bab8 <_obstack_memory_used@@Base+0x9c34>
  41bb0c:	b	41bb80 <_obstack_memory_used@@Base+0x9cfc>
  41bb10:	mov	x0, x22
  41bb14:	mov	x1, x23
  41bb18:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41bb1c:	tbz	w0, #0, 41bb80 <_obstack_memory_used@@Base+0x9cfc>
  41bb20:	ldr	x8, [x24, #40]
  41bb24:	madd	x9, x23, x25, x8
  41bb28:	ldr	x9, [x9, #8]
  41bb2c:	cbz	x9, 41bab8 <_obstack_memory_used@@Base+0x9c34>
  41bb30:	cmp	x9, #0x2
  41bb34:	b.ne	41bb68 <_obstack_memory_used@@Base+0x9ce4>  // b.any
  41bb38:	madd	x8, x23, x25, x8
  41bb3c:	ldr	x8, [x8, #16]
  41bb40:	mov	x0, x24
  41bb44:	mov	x1, x22
  41bb48:	mov	x3, x21
  41bb4c:	ldr	x2, [x8, #8]
  41bb50:	mov	w4, w20
  41bb54:	bl	41ba84 <_obstack_memory_used@@Base+0x9c00>
  41bb58:	cmp	w0, #0x0
  41bb5c:	cset	w8, ne  // ne = any
  41bb60:	csel	w19, w19, w0, eq  // eq = none
  41bb64:	cbnz	w0, 41babc <_obstack_memory_used@@Base+0x9c38>
  41bb68:	ldr	x8, [x24, #40]
  41bb6c:	madd	x8, x23, x25, x8
  41bb70:	ldr	x8, [x8, #16]
  41bb74:	ldr	x23, [x8]
  41bb78:	mov	w8, wzr
  41bb7c:	b	41babc <_obstack_memory_used@@Base+0x9c38>
  41bb80:	mov	w19, #0xc                   	// #12
  41bb84:	mov	w8, #0x1                   	// #1
  41bb88:	b	41babc <_obstack_memory_used@@Base+0x9c38>
  41bb8c:	cmp	w8, #0x2
  41bb90:	b.ne	41bb98 <_obstack_memory_used@@Base+0x9d14>  // b.any
  41bb94:	mov	w19, wzr
  41bb98:	mov	w0, w19
  41bb9c:	ldp	x20, x19, [sp, #64]
  41bba0:	ldp	x22, x21, [sp, #48]
  41bba4:	ldp	x24, x23, [sp, #32]
  41bba8:	ldr	x25, [sp, #16]
  41bbac:	ldp	x29, x30, [sp], #80
  41bbb0:	ret
  41bbb4:	stp	x29, x30, [sp, #-96]!
  41bbb8:	stp	x26, x25, [sp, #32]
  41bbbc:	stp	x24, x23, [sp, #48]
  41bbc0:	stp	x22, x21, [sp, #64]
  41bbc4:	stp	x20, x19, [sp, #80]
  41bbc8:	ldr	x8, [x2, #8]
  41bbcc:	mov	x19, x0
  41bbd0:	str	x27, [sp, #16]
  41bbd4:	mov	x29, sp
  41bbd8:	cbz	x8, 41bca8 <_obstack_memory_used@@Base+0x9e24>
  41bbdc:	mov	x21, x1
  41bbe0:	mov	x0, x2
  41bbe4:	mov	w1, wzr
  41bbe8:	mov	x20, x2
  41bbec:	bl	418988 <_obstack_memory_used@@Base+0x6b04>
  41bbf0:	ldr	x9, [x21, #136]
  41bbf4:	ldr	x8, [x21, #64]
  41bbf8:	mov	w10, #0x18                  	// #24
  41bbfc:	mov	x22, x0
  41bc00:	and	x9, x9, x0
  41bc04:	madd	x24, x9, x10, x8
  41bc08:	ldr	x10, [x24]
  41bc0c:	cmp	x10, #0x1
  41bc10:	b.lt	41bc70 <_obstack_memory_used@@Base+0x9dec>  // b.tstop
  41bc14:	mov	w10, #0x18                  	// #24
  41bc18:	madd	x8, x9, x10, x8
  41bc1c:	ldr	x26, [x8, #16]
  41bc20:	mov	x25, xzr
  41bc24:	ldr	x27, [x26, x25, lsl #3]
  41bc28:	ldr	x8, [x27]
  41bc2c:	cmp	x22, x8
  41bc30:	b.ne	41bc50 <_obstack_memory_used@@Base+0x9dcc>  // b.any
  41bc34:	add	x0, x27, #0x8
  41bc38:	mov	x1, x20
  41bc3c:	bl	4189b4 <_obstack_memory_used@@Base+0x6b30>
  41bc40:	tst	w0, #0x1
  41bc44:	and	w8, w0, #0x1
  41bc48:	csel	x23, x27, x23, ne  // ne = any
  41bc4c:	b	41bc54 <_obstack_memory_used@@Base+0x9dd0>
  41bc50:	mov	w8, #0x4                   	// #4
  41bc54:	orr	w8, w8, #0x4
  41bc58:	cmp	w8, #0x4
  41bc5c:	b.ne	41bc88 <_obstack_memory_used@@Base+0x9e04>  // b.any
  41bc60:	ldr	x8, [x24]
  41bc64:	add	x25, x25, #0x1
  41bc68:	cmp	x25, x8
  41bc6c:	b.lt	41bc24 <_obstack_memory_used@@Base+0x9da0>  // b.tstop
  41bc70:	mov	x0, x21
  41bc74:	mov	x1, x20
  41bc78:	mov	x2, x22
  41bc7c:	bl	41bcc0 <_obstack_memory_used@@Base+0x9e3c>
  41bc80:	mov	x23, x0
  41bc84:	cbz	x0, 41bcb4 <_obstack_memory_used@@Base+0x9e30>
  41bc88:	mov	x0, x23
  41bc8c:	ldp	x20, x19, [sp, #80]
  41bc90:	ldp	x22, x21, [sp, #64]
  41bc94:	ldp	x24, x23, [sp, #48]
  41bc98:	ldp	x26, x25, [sp, #32]
  41bc9c:	ldr	x27, [sp, #16]
  41bca0:	ldp	x29, x30, [sp], #96
  41bca4:	ret
  41bca8:	mov	x23, xzr
  41bcac:	str	wzr, [x19]
  41bcb0:	b	41bc88 <_obstack_memory_used@@Base+0x9e04>
  41bcb4:	mov	w8, #0xc                   	// #12
  41bcb8:	str	w8, [x19]
  41bcbc:	b	41bc88 <_obstack_memory_used@@Base+0x9e04>
  41bcc0:	stp	x29, x30, [sp, #-64]!
  41bcc4:	stp	x22, x21, [sp, #32]
  41bcc8:	mov	x22, x1
  41bccc:	mov	x21, x0
  41bcd0:	mov	w0, #0x70                  	// #112
  41bcd4:	mov	w1, #0x1                   	// #1
  41bcd8:	str	x23, [sp, #16]
  41bcdc:	stp	x20, x19, [sp, #48]
  41bce0:	mov	x29, sp
  41bce4:	mov	x20, x2
  41bce8:	bl	402a10 <calloc@plt>
  41bcec:	mov	x19, x0
  41bcf0:	cbz	x0, 41bdb4 <_obstack_memory_used@@Base+0x9f30>
  41bcf4:	add	x23, x19, #0x8
  41bcf8:	mov	x0, x23
  41bcfc:	mov	x1, x22
  41bd00:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41bd04:	cbnz	w0, 41bdcc <_obstack_memory_used@@Base+0x9f48>
  41bd08:	str	x23, [x19, #80]
  41bd0c:	ldr	x8, [x22, #8]
  41bd10:	cmp	x8, #0x1
  41bd14:	b.lt	41bda0 <_obstack_memory_used@@Base+0x9f1c>  // b.tstop
  41bd18:	ldr	x8, [x21]
  41bd1c:	ldp	x10, x9, [x22, #8]
  41bd20:	mov	x11, xzr
  41bd24:	b	41bd48 <_obstack_memory_used@@Base+0x9ec4>
  41bd28:	ldr	w12, [x12]
  41bd2c:	tst	w12, #0x3ff00
  41bd30:	b.eq	41bd3c <_obstack_memory_used@@Base+0x9eb8>  // b.none
  41bd34:	orr	w12, w13, #0x80
  41bd38:	strb	w12, [x19, #104]
  41bd3c:	add	x11, x11, #0x1
  41bd40:	cmp	x11, x10
  41bd44:	b.ge	41bda0 <_obstack_memory_used@@Base+0x9f1c>  // b.tcont
  41bd48:	ldr	x12, [x9, x11, lsl #3]
  41bd4c:	add	x12, x8, x12, lsl #4
  41bd50:	ldr	w13, [x12, #8]!
  41bd54:	and	w14, w13, #0x3ffff
  41bd58:	cmp	w14, #0x1
  41bd5c:	b.eq	41bd3c <_obstack_memory_used@@Base+0x9eb8>  // b.none
  41bd60:	ldrb	w15, [x19, #104]
  41bd64:	lsr	w16, w13, #15
  41bd68:	and	w14, w13, #0xff
  41bd6c:	and	w13, w16, #0x20
  41bd70:	orr	w13, w15, w13
  41bd74:	cmp	w14, #0xc
  41bd78:	strb	w13, [x19, #104]
  41bd7c:	b.eq	41bd34 <_obstack_memory_used@@Base+0x9eb0>  // b.none
  41bd80:	cmp	w14, #0x4
  41bd84:	b.eq	41bd98 <_obstack_memory_used@@Base+0x9f14>  // b.none
  41bd88:	cmp	w14, #0x2
  41bd8c:	b.ne	41bd28 <_obstack_memory_used@@Base+0x9ea4>  // b.any
  41bd90:	orr	w12, w13, #0x10
  41bd94:	b	41bd38 <_obstack_memory_used@@Base+0x9eb4>
  41bd98:	orr	w12, w13, #0x40
  41bd9c:	b	41bd38 <_obstack_memory_used@@Base+0x9eb4>
  41bda0:	mov	x0, x21
  41bda4:	mov	x1, x19
  41bda8:	mov	x2, x20
  41bdac:	bl	418c34 <_obstack_memory_used@@Base+0x6db0>
  41bdb0:	cbnz	w0, 41bdd8 <_obstack_memory_used@@Base+0x9f54>
  41bdb4:	mov	x0, x19
  41bdb8:	ldp	x20, x19, [sp, #48]
  41bdbc:	ldp	x22, x21, [sp, #32]
  41bdc0:	ldr	x23, [sp, #16]
  41bdc4:	ldp	x29, x30, [sp], #64
  41bdc8:	ret
  41bdcc:	mov	x0, x19
  41bdd0:	bl	402bd0 <free@plt>
  41bdd4:	b	41bde0 <_obstack_memory_used@@Base+0x9f5c>
  41bdd8:	mov	x0, x19
  41bddc:	bl	4134a4 <_obstack_memory_used@@Base+0x1620>
  41bde0:	mov	x19, xzr
  41bde4:	b	41bdb4 <_obstack_memory_used@@Base+0x9f30>
  41bde8:	stp	x29, x30, [sp, #-80]!
  41bdec:	stp	x24, x23, [sp, #32]
  41bdf0:	stp	x22, x21, [sp, #48]
  41bdf4:	stp	x20, x19, [sp, #64]
  41bdf8:	ldr	x24, [x0]
  41bdfc:	str	x25, [sp, #16]
  41be00:	mov	x20, x3
  41be04:	mov	x22, x2
  41be08:	add	x8, x24, x1, lsl #4
  41be0c:	ldrb	w25, [x8, #8]
  41be10:	mov	x29, sp
  41be14:	cmp	w25, #0x7
  41be18:	b.eq	41bfbc <_obstack_memory_used@@Base+0xa138>  // b.none
  41be1c:	mov	x21, x0
  41be20:	mov	x23, x1
  41be24:	mov	x0, x22
  41be28:	mov	x1, x20
  41be2c:	bl	4170fc <_obstack_memory_used@@Base+0x5278>
  41be30:	cmp	w25, #0x5
  41be34:	mov	w19, w0
  41be38:	b.ne	41be74 <_obstack_memory_used@@Base+0x9ff0>  // b.any
  41be3c:	cmp	w19, #0x2
  41be40:	b.lt	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.tstop
  41be44:	ldr	x8, [x21, #216]
  41be48:	tbnz	w8, #6, 41be5c <_obstack_memory_used@@Base+0x9fd8>
  41be4c:	ldr	x9, [x22, #8]
  41be50:	ldrb	w9, [x9, x20]
  41be54:	cmp	w9, #0xa
  41be58:	b.eq	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.none
  41be5c:	tbz	w8, #7, 41be6c <_obstack_memory_used@@Base+0x9fe8>
  41be60:	ldr	x8, [x22, #8]
  41be64:	ldrb	w8, [x8, x20]
  41be68:	cbz	w8, 41bf88 <_obstack_memory_used@@Base+0xa104>
  41be6c:	mov	w21, w19
  41be70:	b	41bf8c <_obstack_memory_used@@Base+0xa108>
  41be74:	cmp	w25, #0x6
  41be78:	mov	w21, wzr
  41be7c:	b.ne	41bf8c <_obstack_memory_used@@Base+0xa108>  // b.any
  41be80:	cmp	w19, #0x2
  41be84:	b.lt	41bf8c <_obstack_memory_used@@Base+0xa108>  // b.tstop
  41be88:	lsl	x8, x23, #4
  41be8c:	ldr	x23, [x24, x8]
  41be90:	ldr	x8, [x23, #64]
  41be94:	cbnz	x8, 41bea8 <_obstack_memory_used@@Base+0xa024>
  41be98:	ldr	x8, [x23, #72]
  41be9c:	cbnz	x8, 41bea8 <_obstack_memory_used@@Base+0xa024>
  41bea0:	ldr	x8, [x23, #40]
  41bea4:	cbz	x8, 41bfb4 <_obstack_memory_used@@Base+0xa130>
  41bea8:	mov	x0, x22
  41beac:	mov	x1, x20
  41beb0:	bl	41504c <_obstack_memory_used@@Base+0x31c8>
  41beb4:	mov	w20, w0
  41beb8:	ldr	x8, [x23, #40]
  41bebc:	cmp	x8, #0x1
  41bec0:	b.lt	41bee8 <_obstack_memory_used@@Base+0xa064>  // b.tstop
  41bec4:	ldr	x8, [x23]
  41bec8:	mov	x9, xzr
  41becc:	ldr	w10, [x8, x9, lsl #2]
  41bed0:	cmp	w20, w10
  41bed4:	b.eq	41bf74 <_obstack_memory_used@@Base+0xa0f0>  // b.none
  41bed8:	ldr	x10, [x23, #40]
  41bedc:	add	x9, x9, #0x1
  41bee0:	cmp	x9, x10
  41bee4:	b.lt	41becc <_obstack_memory_used@@Base+0xa048>  // b.tstop
  41bee8:	ldr	x8, [x23, #72]
  41beec:	cmp	x8, #0x1
  41bef0:	b.lt	41bf2c <_obstack_memory_used@@Base+0xa0a8>  // b.tstop
  41bef4:	mov	w21, wzr
  41bef8:	mov	x22, xzr
  41befc:	ldr	x8, [x23, #24]
  41bf00:	mov	w0, w20
  41bf04:	ldr	x1, [x8, x22, lsl #3]
  41bf08:	bl	4028d0 <iswctype@plt>
  41bf0c:	cmp	w0, #0x0
  41bf10:	csel	w21, w21, w19, eq  // eq = none
  41bf14:	cbnz	w0, 41bf78 <_obstack_memory_used@@Base+0xa0f4>
  41bf18:	ldr	x8, [x23, #72]
  41bf1c:	add	x22, x22, #0x1
  41bf20:	cmp	x22, x8
  41bf24:	b.lt	41befc <_obstack_memory_used@@Base+0xa078>  // b.tstop
  41bf28:	b	41bf30 <_obstack_memory_used@@Base+0xa0ac>
  41bf2c:	mov	w21, wzr
  41bf30:	ldr	x8, [x23, #64]
  41bf34:	cmp	x8, #0x1
  41bf38:	b.lt	41bf78 <_obstack_memory_used@@Base+0xa0f4>  // b.tstop
  41bf3c:	ldr	x8, [x23, #8]
  41bf40:	mov	x9, xzr
  41bf44:	b	41bf58 <_obstack_memory_used@@Base+0xa0d4>
  41bf48:	ldr	x10, [x23, #64]
  41bf4c:	add	x9, x9, #0x1
  41bf50:	cmp	x9, x10
  41bf54:	b.ge	41bf78 <_obstack_memory_used@@Base+0xa0f4>  // b.tcont
  41bf58:	ldr	w10, [x8, x9, lsl #2]
  41bf5c:	cmp	w10, w20
  41bf60:	b.hi	41bf48 <_obstack_memory_used@@Base+0xa0c4>  // b.pmore
  41bf64:	ldr	x10, [x23, #16]
  41bf68:	ldr	w10, [x10, x9, lsl #2]
  41bf6c:	cmp	w20, w10
  41bf70:	b.hi	41bf48 <_obstack_memory_used@@Base+0xa0c4>  // b.pmore
  41bf74:	mov	w21, w19
  41bf78:	ldrb	w8, [x23, #32]
  41bf7c:	tbz	w8, #0, 41bf8c <_obstack_memory_used@@Base+0xa108>
  41bf80:	cmp	w21, #0x0
  41bf84:	b.le	41bfa8 <_obstack_memory_used@@Base+0xa124>
  41bf88:	mov	w21, wzr
  41bf8c:	mov	w0, w21
  41bf90:	ldp	x20, x19, [sp, #64]
  41bf94:	ldp	x22, x21, [sp, #48]
  41bf98:	ldp	x24, x23, [sp, #32]
  41bf9c:	ldr	x25, [sp, #16]
  41bfa0:	ldp	x29, x30, [sp], #80
  41bfa4:	ret
  41bfa8:	cmp	w19, #0x1
  41bfac:	csinc	w21, w19, wzr, gt
  41bfb0:	b	41bf8c <_obstack_memory_used@@Base+0xa108>
  41bfb4:	mov	w20, wzr
  41bfb8:	b	41beb8 <_obstack_memory_used@@Base+0xa034>
  41bfbc:	ldr	x8, [x22, #8]
  41bfc0:	ldrb	w10, [x8, x20]
  41bfc4:	cmp	w10, #0xc2
  41bfc8:	b.cc	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.lo, b.ul, b.last
  41bfcc:	ldr	x9, [x22, #88]
  41bfd0:	add	x11, x20, #0x2
  41bfd4:	cmp	x11, x9
  41bfd8:	b.gt	41bf88 <_obstack_memory_used@@Base+0xa104>
  41bfdc:	add	x11, x20, x8
  41bfe0:	ldrb	w11, [x11, #1]
  41bfe4:	cmp	w10, #0xdf
  41bfe8:	b.hi	41c008 <_obstack_memory_used@@Base+0xa184>  // b.pmore
  41bfec:	sxtb	w8, w11
  41bff0:	cmp	w11, #0xbf
  41bff4:	mov	w9, #0xffffffff            	// #-1
  41bff8:	ccmp	w8, w9, #0x0, ls  // ls = plast
  41bffc:	mov	w8, #0x2                   	// #2
  41c000:	csel	w21, wzr, w8, gt
  41c004:	b	41bf8c <_obstack_memory_used@@Base+0xa108>
  41c008:	cmp	w10, #0xef
  41c00c:	b.hi	41c028 <_obstack_memory_used@@Base+0xa1a4>  // b.pmore
  41c010:	cmp	w10, #0xe0
  41c014:	mov	w10, #0x3                   	// #3
  41c018:	b.ne	41c084 <_obstack_memory_used@@Base+0xa200>  // b.any
  41c01c:	cmp	w11, #0xa0
  41c020:	b.cc	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.lo, b.ul, b.last
  41c024:	b	41c084 <_obstack_memory_used@@Base+0xa200>
  41c028:	cmp	w10, #0xf7
  41c02c:	b.hi	41c048 <_obstack_memory_used@@Base+0xa1c4>  // b.pmore
  41c030:	cmp	w10, #0xf0
  41c034:	mov	w10, #0x4                   	// #4
  41c038:	b.ne	41c084 <_obstack_memory_used@@Base+0xa200>  // b.any
  41c03c:	cmp	w11, #0x90
  41c040:	b.cc	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.lo, b.ul, b.last
  41c044:	b	41c084 <_obstack_memory_used@@Base+0xa200>
  41c048:	cmp	w10, #0xfb
  41c04c:	b.hi	41c068 <_obstack_memory_used@@Base+0xa1e4>  // b.pmore
  41c050:	cmp	w10, #0xf8
  41c054:	mov	w10, #0x5                   	// #5
  41c058:	b.ne	41c084 <_obstack_memory_used@@Base+0xa200>  // b.any
  41c05c:	cmp	w11, #0x88
  41c060:	b.cc	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.lo, b.ul, b.last
  41c064:	b	41c084 <_obstack_memory_used@@Base+0xa200>
  41c068:	cmp	w10, #0xfd
  41c06c:	b.hi	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.pmore
  41c070:	cmp	w10, #0xfc
  41c074:	mov	w10, #0x6                   	// #6
  41c078:	b.ne	41c084 <_obstack_memory_used@@Base+0xa200>  // b.any
  41c07c:	cmp	w11, #0x84
  41c080:	b.cc	41bf88 <_obstack_memory_used@@Base+0xa104>  // b.lo, b.ul, b.last
  41c084:	add	x11, x10, x20
  41c088:	cmp	x11, x9
  41c08c:	b.gt	41bf88 <_obstack_memory_used@@Base+0xa104>
  41c090:	add	x8, x20, x8
  41c094:	sub	x9, x10, #0x1
  41c098:	add	x8, x8, #0x1
  41c09c:	ldrb	w11, [x8]
  41c0a0:	mov	w21, wzr
  41c0a4:	sxtb	w12, w11
  41c0a8:	tbz	w12, #31, 41bf8c <_obstack_memory_used@@Base+0xa108>
  41c0ac:	cmp	w11, #0xbf
  41c0b0:	b.hi	41bf8c <_obstack_memory_used@@Base+0xa108>  // b.pmore
  41c0b4:	subs	x9, x9, #0x1
  41c0b8:	add	x8, x8, #0x1
  41c0bc:	b.ne	41c09c <_obstack_memory_used@@Base+0xa218>  // b.any
  41c0c0:	mov	w21, w10
  41c0c4:	b	41bf8c <_obstack_memory_used@@Base+0xa108>
  41c0c8:	stp	x29, x30, [sp, #-48]!
  41c0cc:	stp	x20, x19, [sp, #32]
  41c0d0:	str	x21, [sp, #16]
  41c0d4:	ldr	w21, [x1, #8]
  41c0d8:	mov	x20, x0
  41c0dc:	mov	w0, wzr
  41c0e0:	mov	x29, sp
  41c0e4:	and	w9, w21, #0xff
  41c0e8:	sub	w9, w9, #0x1
  41c0ec:	cmp	w9, #0x6
  41c0f0:	b.hi	41c1ac <_obstack_memory_used@@Base+0xa328>  // b.pmore
  41c0f4:	ldr	x10, [x20, #8]
  41c0f8:	mov	x8, x1
  41c0fc:	mov	x19, x2
  41c100:	ldrb	w1, [x10, x2]
  41c104:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xf17c>
  41c108:	add	x10, x10, #0x4cf
  41c10c:	adr	x11, 41c11c <_obstack_memory_used@@Base+0xa298>
  41c110:	ldrb	w12, [x10, x9]
  41c114:	add	x11, x11, x12, lsl #2
  41c118:	br	x11
  41c11c:	ldrb	w8, [x8]
  41c120:	cmp	w8, w1
  41c124:	b.eq	41c16c <_obstack_memory_used@@Base+0xa2e8>  // b.none
  41c128:	b	41c1a0 <_obstack_memory_used@@Base+0xa31c>
  41c12c:	ldr	x0, [x8]
  41c130:	bl	41a054 <_obstack_memory_used@@Base+0x81d0>
  41c134:	tbz	w0, #0, 41c1a0 <_obstack_memory_used@@Base+0xa31c>
  41c138:	b	41c16c <_obstack_memory_used@@Base+0xa2e8>
  41c13c:	sxtb	w8, w1
  41c140:	tbnz	w8, #31, 41c1a0 <_obstack_memory_used@@Base+0xa31c>
  41c144:	cbz	w1, 41c160 <_obstack_memory_used@@Base+0xa2dc>
  41c148:	cmp	w1, #0xa
  41c14c:	b.ne	41c16c <_obstack_memory_used@@Base+0xa2e8>  // b.any
  41c150:	ldr	x8, [x20, #152]
  41c154:	ldrb	w8, [x8, #216]
  41c158:	tbz	w8, #6, 41c1a0 <_obstack_memory_used@@Base+0xa31c>
  41c15c:	cbnz	w1, 41c16c <_obstack_memory_used@@Base+0xa2e8>
  41c160:	ldr	x8, [x20, #152]
  41c164:	ldrb	w8, [x8, #216]
  41c168:	tbnz	w8, #7, 41c1a0 <_obstack_memory_used@@Base+0xa31c>
  41c16c:	tst	w21, #0x3ff00
  41c170:	b.eq	41c1a8 <_obstack_memory_used@@Base+0xa324>  // b.none
  41c174:	ldr	w2, [x20, #160]
  41c178:	mov	x0, x20
  41c17c:	mov	x1, x19
  41c180:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41c184:	and	w8, w0, #0x1
  41c188:	tbz	w21, #10, 41c190 <_obstack_memory_used@@Base+0xa30c>
  41c18c:	cbz	w8, 41c1a0 <_obstack_memory_used@@Base+0xa31c>
  41c190:	tbz	w21, #11, 41c198 <_obstack_memory_used@@Base+0xa314>
  41c194:	cbnz	w8, 41c1a0 <_obstack_memory_used@@Base+0xa31c>
  41c198:	tbz	w21, #13, 41c1bc <_obstack_memory_used@@Base+0xa338>
  41c19c:	tbnz	w0, #1, 41c1bc <_obstack_memory_used@@Base+0xa338>
  41c1a0:	mov	w0, wzr
  41c1a4:	b	41c1ac <_obstack_memory_used@@Base+0xa328>
  41c1a8:	mov	w0, #0x1                   	// #1
  41c1ac:	ldp	x20, x19, [sp, #32]
  41c1b0:	ldr	x21, [sp, #16]
  41c1b4:	ldp	x29, x30, [sp], #48
  41c1b8:	ret
  41c1bc:	tst	w21, #0x8000
  41c1c0:	cset	w8, eq  // eq = none
  41c1c4:	and	w9, w0, #0x8
  41c1c8:	orr	w0, w8, w9, lsr #3
  41c1cc:	b	41c1ac <_obstack_memory_used@@Base+0xa328>
  41c1d0:	sub	sp, sp, #0x70
  41c1d4:	stp	x29, x30, [sp, #32]
  41c1d8:	stp	x26, x25, [sp, #48]
  41c1dc:	stp	x24, x23, [sp, #64]
  41c1e0:	stp	x22, x21, [sp, #80]
  41c1e4:	stp	x20, x19, [sp, #96]
  41c1e8:	ldr	x8, [x1, #16]
  41c1ec:	add	x29, sp, #0x20
  41c1f0:	cmp	x8, #0x1
  41c1f4:	b.lt	41c378 <_obstack_memory_used@@Base+0xa4f4>  // b.tstop
  41c1f8:	ldr	x21, [x0, #152]
  41c1fc:	mov	x19, x1
  41c200:	mov	x20, x0
  41c204:	mov	x25, xzr
  41c208:	mov	w26, #0x18                  	// #24
  41c20c:	ldr	x8, [x19, #24]
  41c210:	ldr	x23, [x8, x25, lsl #3]
  41c214:	ldr	x8, [x21]
  41c218:	add	x8, x8, x23, lsl #4
  41c21c:	ldr	w24, [x8, #8]
  41c220:	tbz	w24, #20, 41c2e0 <_obstack_memory_used@@Base+0xa45c>
  41c224:	tst	w24, #0x3ff00
  41c228:	b.eq	41c260 <_obstack_memory_used@@Base+0xa3dc>  // b.none
  41c22c:	ldr	x1, [x20, #72]
  41c230:	ldr	w2, [x20, #160]
  41c234:	mov	x0, x20
  41c238:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41c23c:	and	w8, w0, #0x1
  41c240:	tbz	w24, #10, 41c248 <_obstack_memory_used@@Base+0xa3c4>
  41c244:	cbz	w8, 41c2e0 <_obstack_memory_used@@Base+0xa45c>
  41c248:	tbz	w24, #11, 41c250 <_obstack_memory_used@@Base+0xa3cc>
  41c24c:	cbnz	w8, 41c2e0 <_obstack_memory_used@@Base+0xa45c>
  41c250:	tbz	w24, #13, 41c258 <_obstack_memory_used@@Base+0xa3d4>
  41c254:	tbz	w0, #1, 41c2e0 <_obstack_memory_used@@Base+0xa45c>
  41c258:	tbz	w24, #15, 41c260 <_obstack_memory_used@@Base+0xa3dc>
  41c25c:	tbz	w0, #3, 41c2e0 <_obstack_memory_used@@Base+0xa45c>
  41c260:	ldr	x3, [x20, #72]
  41c264:	mov	x0, x21
  41c268:	mov	x1, x23
  41c26c:	mov	x2, x20
  41c270:	bl	41bde8 <_obstack_memory_used@@Base+0x9f64>
  41c274:	cbz	w0, 41c2e0 <_obstack_memory_used@@Base+0xa45c>
  41c278:	ldr	x8, [x20, #72]
  41c27c:	ldr	w9, [x20, #224]
  41c280:	add	x24, x8, w0, sxtw
  41c284:	cmp	w9, w0
  41c288:	csel	w8, w0, w9, lt  // lt = tstop
  41c28c:	mov	x0, x20
  41c290:	mov	x1, x24
  41c294:	str	w8, [x20, #224]
  41c298:	bl	41ae90 <_obstack_memory_used@@Base+0x900c>
  41c29c:	stur	w0, [x29, #-4]
  41c2a0:	cbnz	w0, 41c2d4 <_obstack_memory_used@@Base+0xa450>
  41c2a4:	ldr	x8, [x21, #24]
  41c2a8:	ldr	x9, [x20, #184]
  41c2ac:	ldr	x10, [x21, #48]
  41c2b0:	ldr	x8, [x8, x23, lsl #3]
  41c2b4:	ldr	x23, [x9, x24, lsl #3]
  41c2b8:	madd	x2, x8, x26, x10
  41c2bc:	cbz	x23, 41c304 <_obstack_memory_used@@Base+0xa480>
  41c2c0:	ldr	x1, [x23, #80]
  41c2c4:	mov	x0, sp
  41c2c8:	bl	41ac0c <_obstack_memory_used@@Base+0x8d88>
  41c2cc:	stur	w0, [x29, #-4]
  41c2d0:	cbz	w0, 41c314 <_obstack_memory_used@@Base+0xa490>
  41c2d4:	mov	w8, #0x1                   	// #1
  41c2d8:	mov	w22, w0
  41c2dc:	b	41c2e4 <_obstack_memory_used@@Base+0xa460>
  41c2e0:	mov	w8, #0x4                   	// #4
  41c2e4:	orr	w8, w8, #0x4
  41c2e8:	cmp	w8, #0x4
  41c2ec:	b.ne	41c37c <_obstack_memory_used@@Base+0xa4f8>  // b.any
  41c2f0:	ldr	x8, [x19, #16]
  41c2f4:	add	x25, x25, #0x1
  41c2f8:	cmp	x25, x8
  41c2fc:	b.lt	41c20c <_obstack_memory_used@@Base+0xa388>  // b.tstop
  41c300:	b	41c378 <_obstack_memory_used@@Base+0xa4f4>
  41c304:	ldr	x8, [x2, #16]
  41c308:	ldr	q0, [x2]
  41c30c:	str	x8, [sp, #16]
  41c310:	str	q0, [sp]
  41c314:	ldr	w2, [x20, #160]
  41c318:	sub	x1, x24, #0x1
  41c31c:	mov	x0, x20
  41c320:	bl	419eac <_obstack_memory_used@@Base+0x8028>
  41c324:	mov	w3, w0
  41c328:	sub	x0, x29, #0x4
  41c32c:	mov	x2, sp
  41c330:	mov	x1, x21
  41c334:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41c338:	ldr	x8, [x20, #184]
  41c33c:	str	x0, [x8, x24, lsl #3]
  41c340:	cbz	x23, 41c34c <_obstack_memory_used@@Base+0xa4c8>
  41c344:	ldr	x0, [sp, #16]
  41c348:	bl	402bd0 <free@plt>
  41c34c:	ldr	x8, [x20, #184]
  41c350:	ldur	w9, [x29, #-4]
  41c354:	ldr	x8, [x8, x24, lsl #3]
  41c358:	cmp	x8, #0x0
  41c35c:	cset	w10, eq  // eq = none
  41c360:	cmp	w9, #0x0
  41c364:	cset	w11, ne  // ne = any
  41c368:	tst	w10, w11
  41c36c:	and	w8, w10, w11
  41c370:	csel	w22, w9, w22, ne  // ne = any
  41c374:	b	41c2e4 <_obstack_memory_used@@Base+0xa460>
  41c378:	mov	w22, wzr
  41c37c:	mov	w0, w22
  41c380:	ldp	x20, x19, [sp, #96]
  41c384:	ldp	x22, x21, [sp, #80]
  41c388:	ldp	x24, x23, [sp, #64]
  41c38c:	ldp	x26, x25, [sp, #48]
  41c390:	ldp	x29, x30, [sp, #32]
  41c394:	add	sp, sp, #0x70
  41c398:	ret
  41c39c:	stp	x29, x30, [sp, #-96]!
  41c3a0:	stp	x28, x27, [sp, #16]
  41c3a4:	stp	x26, x25, [sp, #32]
  41c3a8:	stp	x24, x23, [sp, #48]
  41c3ac:	stp	x22, x21, [sp, #64]
  41c3b0:	stp	x20, x19, [sp, #80]
  41c3b4:	mov	x29, sp
  41c3b8:	sub	sp, sp, #0x70
  41c3bc:	mov	x23, x0
  41c3c0:	mov	w0, #0x3800                	// #14336
  41c3c4:	mov	x26, x1
  41c3c8:	bl	4028e0 <malloc@plt>
  41c3cc:	cbz	x0, 41c878 <_obstack_memory_used@@Base+0xa9f4>
  41c3d0:	mov	w8, #0x1800                	// #6144
  41c3d4:	mov	x25, x0
  41c3d8:	add	x21, x0, x8
  41c3dc:	mov	x19, x26
  41c3e0:	mov	x0, x23
  41c3e4:	mov	x1, x26
  41c3e8:	mov	x2, x25
  41c3ec:	mov	x3, x21
  41c3f0:	str	xzr, [x19, #88]!
  41c3f4:	str	xzr, [x26, #96]
  41c3f8:	bl	41c8bc <_obstack_memory_used@@Base+0xaa38>
  41c3fc:	mov	x20, x0
  41c400:	cmp	x0, #0x0
  41c404:	b.le	41c734 <_obstack_memory_used@@Base+0xa8b0>
  41c408:	add	x1, x20, #0x1
  41c40c:	sub	x0, x29, #0x20
  41c410:	bl	41813c <_obstack_memory_used@@Base+0x62b8>
  41c414:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41c418:	movk	x8, #0xa855
  41c41c:	movk	x8, #0xaaa, lsl #48
  41c420:	mov	x22, xzr
  41c424:	mov	w24, wzr
  41c428:	cmp	x20, x8
  41c42c:	stur	w0, [x29, #-4]
  41c430:	b.hi	41c63c <_obstack_memory_used@@Base+0xa7b8>  // b.pmore
  41c434:	cbnz	w0, 41c63c <_obstack_memory_used@@Base+0xa7b8>
  41c438:	add	x8, x20, x20, lsl #1
  41c43c:	lsl	x0, x8, #3
  41c440:	mov	w8, #0x3800                	// #14336
  41c444:	add	x8, x0, x8
  41c448:	cmp	x8, #0xfbf
  41c44c:	b.hi	41c46c <_obstack_memory_used@@Base+0xa5e8>  // b.pmore
  41c450:	add	x9, x0, #0xf
  41c454:	mov	x8, sp
  41c458:	and	x9, x9, #0xfffffffffffffff0
  41c45c:	sub	x22, x8, x9
  41c460:	mov	sp, x22
  41c464:	mov	w8, wzr
  41c468:	b	41c47c <_obstack_memory_used@@Base+0xa5f8>
  41c46c:	bl	4028e0 <malloc@plt>
  41c470:	mov	x22, x0
  41c474:	cbz	x0, 41c898 <_obstack_memory_used@@Base+0xaa14>
  41c478:	mov	w8, #0x1                   	// #1
  41c47c:	stur	w8, [x29, #-88]
  41c480:	lsl	x8, x20, #3
  41c484:	add	x9, x22, x8
  41c488:	sub	x0, x29, #0x40
  41c48c:	stp	x26, x19, [x29, #-104]
  41c490:	stur	x9, [x29, #-72]
  41c494:	add	x27, x9, x8
  41c498:	bl	41ce24 <_obstack_memory_used@@Base+0xafa0>
  41c49c:	cmp	x20, #0x1
  41c4a0:	b.lt	41c67c <_obstack_memory_used@@Base+0xa7f8>  // b.tstop
  41c4a4:	mov	x26, xzr
  41c4a8:	stur	wzr, [x29, #-84]
  41c4ac:	mov	w24, #0x18                  	// #24
  41c4b0:	stur	x21, [x29, #-80]
  41c4b4:	stur	xzr, [x29, #-24]
  41c4b8:	madd	x28, x26, x24, x25
  41c4bc:	ldr	x8, [x28, #8]!
  41c4c0:	cmp	x8, #0x1
  41c4c4:	b.lt	41c558 <_obstack_memory_used@@Base+0xa6d4>  // b.tstop
  41c4c8:	ldur	w0, [x29, #-4]
  41c4cc:	madd	x8, x26, x24, x25
  41c4d0:	mov	x21, x27
  41c4d4:	mov	x27, x22
  41c4d8:	mov	x19, xzr
  41c4dc:	mov	x22, x25
  41c4e0:	add	x25, x8, #0x10
  41c4e4:	b	41c4f8 <_obstack_memory_used@@Base+0xa674>
  41c4e8:	ldr	x8, [x28]
  41c4ec:	add	x19, x19, #0x1
  41c4f0:	cmp	x19, x8
  41c4f4:	b.ge	41c544 <_obstack_memory_used@@Base+0xa6c0>  // b.tcont
  41c4f8:	ldr	x8, [x25]
  41c4fc:	ldr	x9, [x23, #24]
  41c500:	ldr	x8, [x8, x19, lsl #3]
  41c504:	ldr	x8, [x9, x8, lsl #3]
  41c508:	cmn	x8, #0x1
  41c50c:	b.eq	41c4e8 <_obstack_memory_used@@Base+0xa664>  // b.none
  41c510:	ldr	x9, [x23, #48]
  41c514:	sub	x0, x29, #0x20
  41c518:	madd	x1, x8, x24, x9
  41c51c:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  41c520:	cbz	w0, 41c4e8 <_obstack_memory_used@@Base+0xa664>
  41c524:	mov	x25, x22
  41c528:	mov	x22, x27
  41c52c:	mov	x27, x21
  41c530:	ldur	x21, [x29, #-80]
  41c534:	mov	w8, wzr
  41c538:	stur	w0, [x29, #-4]
  41c53c:	tbnz	w8, #0, 41c620 <_obstack_memory_used@@Base+0xa79c>
  41c540:	b	41c638 <_obstack_memory_used@@Base+0xa7b4>
  41c544:	mov	x25, x22
  41c548:	mov	x22, x27
  41c54c:	mov	x27, x21
  41c550:	ldur	x21, [x29, #-80]
  41c554:	stur	w0, [x29, #-4]
  41c558:	sub	x0, x29, #0x4
  41c55c:	sub	x2, x29, #0x20
  41c560:	mov	x1, x23
  41c564:	mov	w3, wzr
  41c568:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41c56c:	str	x0, [x22, x26, lsl #3]
  41c570:	cbnz	x0, 41c57c <_obstack_memory_used@@Base+0xa6f8>
  41c574:	ldur	w8, [x29, #-4]
  41c578:	cbnz	w8, 41c630 <_obstack_memory_used@@Base+0xa7ac>
  41c57c:	ldrsb	w8, [x0, #104]
  41c580:	tbnz	w8, #31, 41c59c <_obstack_memory_used@@Base+0xa718>
  41c584:	ldur	x9, [x29, #-72]
  41c588:	lsl	x8, x26, #3
  41c58c:	str	x0, [x9, x8]
  41c590:	ldr	x9, [x22, x8]
  41c594:	str	x9, [x27, x8]
  41c598:	b	41c60c <_obstack_memory_used@@Base+0xa788>
  41c59c:	sub	x0, x29, #0x4
  41c5a0:	sub	x2, x29, #0x20
  41c5a4:	mov	w3, #0x1                   	// #1
  41c5a8:	mov	x1, x23
  41c5ac:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41c5b0:	ldur	x8, [x29, #-72]
  41c5b4:	str	x0, [x8, x26, lsl #3]
  41c5b8:	cbnz	x0, 41c5c4 <_obstack_memory_used@@Base+0xa740>
  41c5bc:	ldur	w8, [x29, #-4]
  41c5c0:	cbnz	w8, 41c630 <_obstack_memory_used@@Base+0xa7ac>
  41c5c4:	ldr	x8, [x22, x26, lsl #3]
  41c5c8:	cmp	x8, x0
  41c5cc:	b.eq	41c5e8 <_obstack_memory_used@@Base+0xa764>  // b.none
  41c5d0:	ldr	w8, [x23, #180]
  41c5d4:	ldur	w9, [x29, #-84]
  41c5d8:	cmp	w8, #0x1
  41c5dc:	cset	w8, gt
  41c5e0:	orr	w9, w9, w8
  41c5e4:	stur	w9, [x29, #-84]
  41c5e8:	sub	x0, x29, #0x4
  41c5ec:	sub	x2, x29, #0x20
  41c5f0:	mov	w3, #0x2                   	// #2
  41c5f4:	mov	x1, x23
  41c5f8:	bl	41886c <_obstack_memory_used@@Base+0x69e8>
  41c5fc:	str	x0, [x27, x26, lsl #3]
  41c600:	cbnz	x0, 41c60c <_obstack_memory_used@@Base+0xa788>
  41c604:	ldur	w8, [x29, #-4]
  41c608:	cbnz	w8, 41c630 <_obstack_memory_used@@Base+0xa7ac>
  41c60c:	add	x1, x21, x26, lsl #5
  41c610:	sub	x0, x29, #0x40
  41c614:	bl	41ce30 <_obstack_memory_used@@Base+0xafac>
  41c618:	mov	w8, #0x1                   	// #1
  41c61c:	tbz	w8, #0, 41c638 <_obstack_memory_used@@Base+0xa7b4>
  41c620:	add	x26, x26, #0x1
  41c624:	cmp	x26, x20
  41c628:	b.ne	41c4b4 <_obstack_memory_used@@Base+0xa630>  // b.any
  41c62c:	b	41c680 <_obstack_memory_used@@Base+0xa7fc>
  41c630:	mov	w8, wzr
  41c634:	tbnz	w8, #0, 41c620 <_obstack_memory_used@@Base+0xa79c>
  41c638:	ldur	w24, [x29, #-88]
  41c63c:	cbz	w24, 41c648 <_obstack_memory_used@@Base+0xa7c4>
  41c640:	mov	x0, x22
  41c644:	bl	402bd0 <free@plt>
  41c648:	ldur	x0, [x29, #-16]
  41c64c:	bl	402bd0 <free@plt>
  41c650:	cmp	x20, #0x1
  41c654:	b.lt	41c66c <_obstack_memory_used@@Base+0xa7e8>  // b.tstop
  41c658:	add	x19, x25, #0x10
  41c65c:	ldr	x0, [x19], #24
  41c660:	bl	402bd0 <free@plt>
  41c664:	subs	x20, x20, #0x1
  41c668:	b.ne	41c65c <_obstack_memory_used@@Base+0xa7d8>  // b.any
  41c66c:	mov	x0, x25
  41c670:	bl	402bd0 <free@plt>
  41c674:	mov	w0, wzr
  41c678:	b	41c878 <_obstack_memory_used@@Base+0xa9f4>
  41c67c:	stur	wzr, [x29, #-84]
  41c680:	ldur	w26, [x29, #-84]
  41c684:	tbnz	w26, #0, 41c748 <_obstack_memory_used@@Base+0xa8c4>
  41c688:	mov	w0, #0x8                   	// #8
  41c68c:	mov	w1, #0x100                 	// #256
  41c690:	bl	402a10 <calloc@plt>
  41c694:	ldur	x8, [x29, #-96]
  41c698:	ldur	w24, [x29, #-88]
  41c69c:	str	x0, [x8]
  41c6a0:	cbz	x0, 41c63c <_obstack_memory_used@@Base+0xa7b8>
  41c6a4:	mov	x28, x0
  41c6a8:	mov	x8, xzr
  41c6ac:	mov	x9, xzr
  41c6b0:	sub	x10, x29, #0x40
  41c6b4:	mov	x11, x21
  41c6b8:	b	41c6d0 <_obstack_memory_used@@Base+0xa84c>
  41c6bc:	add	x9, x9, #0x1
  41c6c0:	add	x8, x8, #0x40
  41c6c4:	cmp	x9, #0x4
  41c6c8:	add	x11, x11, #0x8
  41c6cc:	b.eq	41c7ec <_obstack_memory_used@@Base+0xa968>  // b.none
  41c6d0:	ldr	x12, [x10, x9, lsl #3]
  41c6d4:	cbz	x12, 41c6bc <_obstack_memory_used@@Base+0xa838>
  41c6d8:	add	x14, x23, x9, lsl #3
  41c6dc:	mov	x13, x8
  41c6e0:	add	x14, x14, #0xb8
  41c6e4:	mov	w15, #0x1                   	// #1
  41c6e8:	tbnz	w12, #0, 41c700 <_obstack_memory_used@@Base+0xa87c>
  41c6ec:	lsl	x15, x15, #1
  41c6f0:	lsr	x12, x12, #1
  41c6f4:	add	x13, x13, #0x1
  41c6f8:	cbnz	x12, 41c6e8 <_obstack_memory_used@@Base+0xa864>
  41c6fc:	b	41c6bc <_obstack_memory_used@@Base+0xa838>
  41c700:	mov	x16, #0xfffffffffffffff8    	// #-8
  41c704:	mov	x17, x11
  41c708:	ldr	x18, [x17], #32
  41c70c:	add	x16, x16, #0x8
  41c710:	tst	x18, x15
  41c714:	b.eq	41c708 <_obstack_memory_used@@Base+0xa884>  // b.none
  41c718:	ldr	x17, [x14]
  41c71c:	tst	x17, x15
  41c720:	ldur	x17, [x29, #-72]
  41c724:	csel	x17, x22, x17, eq  // eq = none
  41c728:	ldr	x16, [x17, x16]
  41c72c:	str	x16, [x28, x13, lsl #3]
  41c730:	b	41c6ec <_obstack_memory_used@@Base+0xa868>
  41c734:	mov	x0, x25
  41c738:	bl	402bd0 <free@plt>
  41c73c:	cbz	x20, 41c8a0 <_obstack_memory_used@@Base+0xaa1c>
  41c740:	mov	w0, wzr
  41c744:	b	41c878 <_obstack_memory_used@@Base+0xa9f4>
  41c748:	mov	w0, #0x8                   	// #8
  41c74c:	mov	w1, #0x200                 	// #512
  41c750:	bl	402a10 <calloc@plt>
  41c754:	ldur	x8, [x29, #-104]
  41c758:	ldur	w24, [x29, #-88]
  41c75c:	str	x0, [x8, #96]
  41c760:	cbz	x0, 41c63c <_obstack_memory_used@@Base+0xa7b8>
  41c764:	mov	x28, x0
  41c768:	mov	x8, xzr
  41c76c:	mov	x9, xzr
  41c770:	sub	x10, x22, #0x8
  41c774:	sub	x11, x29, #0x40
  41c778:	mov	x12, x21
  41c77c:	b	41c794 <_obstack_memory_used@@Base+0xa910>
  41c780:	add	x9, x9, #0x1
  41c784:	add	x8, x8, #0x40
  41c788:	cmp	x9, #0x4
  41c78c:	add	x12, x12, #0x8
  41c790:	b.eq	41c7ec <_obstack_memory_used@@Base+0xa968>  // b.none
  41c794:	ldr	x13, [x11, x9, lsl #3]
  41c798:	cbz	x13, 41c780 <_obstack_memory_used@@Base+0xa8fc>
  41c79c:	mov	x14, x8
  41c7a0:	mov	w15, #0x1                   	// #1
  41c7a4:	tbnz	w13, #0, 41c7bc <_obstack_memory_used@@Base+0xa938>
  41c7a8:	lsl	x15, x15, #1
  41c7ac:	lsr	x13, x13, #1
  41c7b0:	add	x14, x14, #0x1
  41c7b4:	cbnz	x13, 41c7a4 <_obstack_memory_used@@Base+0xa920>
  41c7b8:	b	41c780 <_obstack_memory_used@@Base+0xa8fc>
  41c7bc:	mov	x17, x12
  41c7c0:	mov	x16, x10
  41c7c4:	ldr	x18, [x17], #32
  41c7c8:	add	x16, x16, #0x8
  41c7cc:	tst	x18, x15
  41c7d0:	b.eq	41c7c4 <_obstack_memory_used@@Base+0xa940>  // b.none
  41c7d4:	ldr	x17, [x16]
  41c7d8:	ldr	x16, [x16, x20, lsl #3]
  41c7dc:	add	x18, x28, x14, lsl #3
  41c7e0:	str	x17, [x18]
  41c7e4:	str	x16, [x18, #2048]
  41c7e8:	b	41c7a8 <_obstack_memory_used@@Base+0xa924>
  41c7ec:	sub	x0, x29, #0x40
  41c7f0:	mov	w1, #0xa                   	// #10
  41c7f4:	bl	41a054 <_obstack_memory_used@@Base+0x81d0>
  41c7f8:	tbz	w0, #0, 41c83c <_obstack_memory_used@@Base+0xa9b8>
  41c7fc:	cmp	x20, #0x1
  41c800:	b.lt	41c83c <_obstack_memory_used@@Base+0xa9b8>  // b.tstop
  41c804:	mov	x19, x20
  41c808:	mov	w1, #0xa                   	// #10
  41c80c:	mov	x0, x21
  41c810:	bl	41a054 <_obstack_memory_used@@Base+0x81d0>
  41c814:	tbnz	w0, #0, 41c82c <_obstack_memory_used@@Base+0xa9a8>
  41c818:	add	x27, x27, #0x8
  41c81c:	subs	x19, x19, #0x1
  41c820:	add	x21, x21, #0x20
  41c824:	b.ne	41c808 <_obstack_memory_used@@Base+0xa984>  // b.any
  41c828:	b	41c83c <_obstack_memory_used@@Base+0xa9b8>
  41c82c:	ldr	x8, [x27]
  41c830:	str	x8, [x28, #80]
  41c834:	tbz	w26, #0, 41c83c <_obstack_memory_used@@Base+0xa9b8>
  41c838:	str	x8, [x28, #2128]
  41c83c:	cbz	w24, 41c848 <_obstack_memory_used@@Base+0xa9c4>
  41c840:	mov	x0, x22
  41c844:	bl	402bd0 <free@plt>
  41c848:	ldur	x0, [x29, #-16]
  41c84c:	bl	402bd0 <free@plt>
  41c850:	cmp	x20, #0x1
  41c854:	b.lt	41c86c <_obstack_memory_used@@Base+0xa9e8>  // b.tstop
  41c858:	add	x19, x25, #0x10
  41c85c:	ldr	x0, [x19], #24
  41c860:	bl	402bd0 <free@plt>
  41c864:	subs	x20, x20, #0x1
  41c868:	b.ne	41c85c <_obstack_memory_used@@Base+0xa9d8>  // b.any
  41c86c:	mov	x0, x25
  41c870:	bl	402bd0 <free@plt>
  41c874:	mov	w0, #0x1                   	// #1
  41c878:	mov	sp, x29
  41c87c:	ldp	x20, x19, [sp, #80]
  41c880:	ldp	x22, x21, [sp, #64]
  41c884:	ldp	x24, x23, [sp, #48]
  41c888:	ldp	x26, x25, [sp, #32]
  41c88c:	ldp	x28, x27, [sp, #16]
  41c890:	ldp	x29, x30, [sp], #96
  41c894:	ret
  41c898:	mov	w24, wzr
  41c89c:	b	41c63c <_obstack_memory_used@@Base+0xa7b8>
  41c8a0:	mov	w0, #0x8                   	// #8
  41c8a4:	mov	w1, #0x100                 	// #256
  41c8a8:	bl	402a10 <calloc@plt>
  41c8ac:	cmp	x0, #0x0
  41c8b0:	str	x0, [x19]
  41c8b4:	cset	w0, ne  // ne = any
  41c8b8:	b	41c878 <_obstack_memory_used@@Base+0xa9f4>
  41c8bc:	sub	sp, sp, #0xf0
  41c8c0:	stp	x29, x30, [sp, #144]
  41c8c4:	add	x29, sp, #0x90
  41c8c8:	stp	x22, x21, [sp, #208]
  41c8cc:	mov	x22, x0
  41c8d0:	sub	x0, x29, #0x20
  41c8d4:	stp	x28, x27, [sp, #160]
  41c8d8:	stp	x26, x25, [sp, #176]
  41c8dc:	stp	x24, x23, [sp, #192]
  41c8e0:	stp	x20, x19, [sp, #224]
  41c8e4:	stp	x2, x3, [sp, #32]
  41c8e8:	mov	x20, x1
  41c8ec:	sub	x25, x29, #0x20
  41c8f0:	bl	41ce24 <_obstack_memory_used@@Base+0xafa0>
  41c8f4:	ldr	x8, [x20, #16]
  41c8f8:	cmp	x8, #0x1
  41c8fc:	b.lt	41cdc8 <_obstack_memory_used@@Base+0xaf44>  // b.tstop
  41c900:	mov	x26, xzr
  41c904:	mov	x19, xzr
  41c908:	add	x24, x22, #0xb8
  41c90c:	sub	x28, x29, #0x40
  41c910:	add	x23, sp, #0x30
  41c914:	stp	x24, x22, [sp]
  41c918:	b	41c92c <_obstack_memory_used@@Base+0xaaa8>
  41c91c:	ldr	x8, [x20, #16]
  41c920:	add	x26, x26, #0x1
  41c924:	cmp	x26, x8
  41c928:	b.ge	41ce00 <_obstack_memory_used@@Base+0xaf7c>  // b.tcont
  41c92c:	ldr	x8, [x20, #24]
  41c930:	ldr	x9, [x22]
  41c934:	ldr	x8, [x8, x26, lsl #3]
  41c938:	add	x8, x9, x8, lsl #4
  41c93c:	mov	x27, x8
  41c940:	ldr	w21, [x27, #8]!
  41c944:	and	w9, w21, #0xff
  41c948:	cmp	w9, #0x1
  41c94c:	str	w9, [sp, #28]
  41c950:	b.ne	41c970 <_obstack_memory_used@@Base+0xaaec>  // b.any
  41c954:	ldrb	w1, [x8]
  41c958:	sub	x0, x29, #0x20
  41c95c:	str	x8, [sp, #16]
  41c960:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  41c964:	and	w8, w21, #0x3ff00
  41c968:	cbnz	w8, 41c9d4 <_obstack_memory_used@@Base+0xab50>
  41c96c:	b	41cbe8 <_obstack_memory_used@@Base+0xad64>
  41c970:	cmp	w9, #0x7
  41c974:	b.eq	41c9a4 <_obstack_memory_used@@Base+0xab20>  // b.none
  41c978:	cmp	w9, #0x5
  41c97c:	b.eq	41ca64 <_obstack_memory_used@@Base+0xabe0>  // b.none
  41c980:	cmp	w9, #0x3
  41c984:	b.ne	41ca8c <_obstack_memory_used@@Base+0xac08>  // b.any
  41c988:	ldr	x1, [x8]
  41c98c:	sub	x0, x29, #0x20
  41c990:	str	x8, [sp, #16]
  41c994:	bl	41ce30 <_obstack_memory_used@@Base+0xafac>
  41c998:	and	w8, w21, #0x3ff00
  41c99c:	cbnz	w8, 41c9d4 <_obstack_memory_used@@Base+0xab50>
  41c9a0:	b	41cbe8 <_obstack_memory_used@@Base+0xad64>
  41c9a4:	str	x8, [sp, #16]
  41c9a8:	mov	x8, #0xffffffffffffffff    	// #-1
  41c9ac:	stp	x8, x8, [x29, #-32]
  41c9b0:	ldrb	w8, [x22, #216]
  41c9b4:	tbnz	w8, #6, 41c9c4 <_obstack_memory_used@@Base+0xab40>
  41c9b8:	sub	x0, x29, #0x20
  41c9bc:	mov	w1, #0xa                   	// #10
  41c9c0:	bl	41ce60 <_obstack_memory_used@@Base+0xafdc>
  41c9c4:	ldrb	w8, [x22, #216]
  41c9c8:	tbnz	w8, #7, 41ca98 <_obstack_memory_used@@Base+0xac14>
  41c9cc:	and	w8, w21, #0x3ff00
  41c9d0:	cbz	w8, 41cbe8 <_obstack_memory_used@@Base+0xad64>
  41c9d4:	tbnz	w21, #13, 41ca08 <_obstack_memory_used@@Base+0xab84>
  41c9d8:	tbnz	w21, #15, 41ca40 <_obstack_memory_used@@Base+0xabbc>
  41c9dc:	tbz	w21, #10, 41cb40 <_obstack_memory_used@@Base+0xacbc>
  41c9e0:	ldr	w8, [sp, #28]
  41c9e4:	cmp	w8, #0x1
  41c9e8:	b.ne	41cab0 <_obstack_memory_used@@Base+0xac2c>  // b.any
  41c9ec:	ldrb	w8, [x27, #2]
  41c9f0:	tbnz	w8, #6, 41cab0 <_obstack_memory_used@@Base+0xac2c>
  41c9f4:	sub	x0, x29, #0x20
  41c9f8:	bl	41ce24 <_obstack_memory_used@@Base+0xafa0>
  41c9fc:	mov	w8, #0x4                   	// #4
  41ca00:	cbnz	w8, 41cdac <_obstack_memory_used@@Base+0xaf28>
  41ca04:	b	41cb40 <_obstack_memory_used@@Base+0xacbc>
  41ca08:	sub	x0, x29, #0x20
  41ca0c:	mov	w1, #0xa                   	// #10
  41ca10:	bl	41a054 <_obstack_memory_used@@Base+0x81d0>
  41ca14:	mov	w24, w0
  41ca18:	sub	x0, x29, #0x20
  41ca1c:	bl	41ce24 <_obstack_memory_used@@Base+0xafa0>
  41ca20:	tbz	w24, #0, 41ca54 <_obstack_memory_used@@Base+0xabd0>
  41ca24:	sub	x0, x29, #0x20
  41ca28:	mov	w1, #0xa                   	// #10
  41ca2c:	bl	4165b4 <_obstack_memory_used@@Base+0x4730>
  41ca30:	mov	w8, wzr
  41ca34:	ldp	x24, x22, [sp]
  41ca38:	cbnz	w8, 41cdac <_obstack_memory_used@@Base+0xaf28>
  41ca3c:	b	41c9d8 <_obstack_memory_used@@Base+0xab54>
  41ca40:	sub	x0, x29, #0x20
  41ca44:	bl	41ce24 <_obstack_memory_used@@Base+0xafa0>
  41ca48:	mov	w8, #0x4                   	// #4
  41ca4c:	cbnz	w8, 41cdb0 <_obstack_memory_used@@Base+0xaf2c>
  41ca50:	b	41c91c <_obstack_memory_used@@Base+0xaa98>
  41ca54:	mov	w8, #0x4                   	// #4
  41ca58:	ldp	x24, x22, [sp]
  41ca5c:	cbnz	w8, 41cdac <_obstack_memory_used@@Base+0xaf28>
  41ca60:	b	41c9d8 <_obstack_memory_used@@Base+0xab54>
  41ca64:	str	x8, [sp, #16]
  41ca68:	ldr	w8, [x22, #180]
  41ca6c:	cmp	w8, #0x2
  41ca70:	b.lt	41caf4 <_obstack_memory_used@@Base+0xac70>  // b.tstop
  41ca74:	ldr	x1, [x22, #120]
  41ca78:	sub	x0, x29, #0x20
  41ca7c:	bl	41ce30 <_obstack_memory_used@@Base+0xafac>
  41ca80:	ldrb	w8, [x22, #216]
  41ca84:	tbz	w8, #6, 41c9b8 <_obstack_memory_used@@Base+0xab34>
  41ca88:	b	41c9c4 <_obstack_memory_used@@Base+0xab40>
  41ca8c:	mov	w8, #0x4                   	// #4
  41ca90:	cbnz	w8, 41cdb0 <_obstack_memory_used@@Base+0xaf2c>
  41ca94:	b	41c91c <_obstack_memory_used@@Base+0xaa98>
  41ca98:	sub	x0, x29, #0x20
  41ca9c:	mov	x1, xzr
  41caa0:	bl	41ce60 <_obstack_memory_used@@Base+0xafdc>
  41caa4:	and	w8, w21, #0x3ff00
  41caa8:	cbnz	w8, 41c9d4 <_obstack_memory_used@@Base+0xab50>
  41caac:	b	41cbe8 <_obstack_memory_used@@Base+0xad64>
  41cab0:	ldr	w8, [x22, #180]
  41cab4:	cmp	w8, #0x1
  41cab8:	b.le	41cb08 <_obstack_memory_used@@Base+0xac84>
  41cabc:	ldr	x10, [x22, #120]
  41cac0:	mov	x9, xzr
  41cac4:	mov	x8, xzr
  41cac8:	ldr	x11, [x24, x9]
  41cacc:	ldr	x12, [x10, x9]
  41cad0:	ldr	x13, [x25, x9]
  41cad4:	orn	x11, x11, x12
  41cad8:	and	x11, x13, x11
  41cadc:	str	x11, [x25, x9]
  41cae0:	add	x9, x9, #0x8
  41cae4:	cmp	x9, #0x20
  41cae8:	orr	x8, x11, x8
  41caec:	b.ne	41cac8 <_obstack_memory_used@@Base+0xac44>  // b.any
  41caf0:	b	41cb30 <_obstack_memory_used@@Base+0xacac>
  41caf4:	sub	x0, x29, #0x20
  41caf8:	bl	41ce54 <_obstack_memory_used@@Base+0xafd0>
  41cafc:	ldrb	w8, [x22, #216]
  41cb00:	tbnz	w8, #6, 41c9c4 <_obstack_memory_used@@Base+0xab40>
  41cb04:	b	41c9b8 <_obstack_memory_used@@Base+0xab34>
  41cb08:	mov	x9, xzr
  41cb0c:	mov	x8, xzr
  41cb10:	ldr	x10, [x24, x9]
  41cb14:	ldr	x11, [x25, x9]
  41cb18:	and	x10, x11, x10
  41cb1c:	str	x10, [x25, x9]
  41cb20:	add	x9, x9, #0x8
  41cb24:	cmp	x9, #0x20
  41cb28:	orr	x8, x10, x8
  41cb2c:	b.ne	41cb10 <_obstack_memory_used@@Base+0xac8c>  // b.any
  41cb30:	cmp	x8, #0x0
  41cb34:	cset	w8, eq  // eq = none
  41cb38:	lsl	w8, w8, #2
  41cb3c:	cbnz	w8, 41cdac <_obstack_memory_used@@Base+0xaf28>
  41cb40:	tbz	w21, #11, 41cbe8 <_obstack_memory_used@@Base+0xad64>
  41cb44:	ldr	w8, [sp, #28]
  41cb48:	cmp	w8, #0x1
  41cb4c:	b.ne	41cb58 <_obstack_memory_used@@Base+0xacd4>  // b.any
  41cb50:	ldrb	w8, [x27, #2]
  41cb54:	tbnz	w8, #6, 41cbd8 <_obstack_memory_used@@Base+0xad54>
  41cb58:	ldr	w8, [x22, #180]
  41cb5c:	cmp	w8, #0x1
  41cb60:	b.le	41cb9c <_obstack_memory_used@@Base+0xad18>
  41cb64:	ldr	x10, [x22, #120]
  41cb68:	mov	x9, xzr
  41cb6c:	mov	x8, xzr
  41cb70:	ldr	x11, [x24, x9]
  41cb74:	ldr	x12, [x10, x9]
  41cb78:	ldr	x13, [x25, x9]
  41cb7c:	and	x11, x12, x11
  41cb80:	bic	x11, x13, x11
  41cb84:	str	x11, [x25, x9]
  41cb88:	add	x9, x9, #0x8
  41cb8c:	cmp	x9, #0x20
  41cb90:	orr	x8, x11, x8
  41cb94:	b.ne	41cb70 <_obstack_memory_used@@Base+0xacec>  // b.any
  41cb98:	b	41cbc4 <_obstack_memory_used@@Base+0xad40>
  41cb9c:	mov	x9, xzr
  41cba0:	mov	x8, xzr
  41cba4:	ldr	x10, [x24, x9]
  41cba8:	ldr	x11, [x25, x9]
  41cbac:	bic	x10, x11, x10
  41cbb0:	str	x10, [x25, x9]
  41cbb4:	add	x9, x9, #0x8
  41cbb8:	cmp	x9, #0x20
  41cbbc:	orr	x8, x10, x8
  41cbc0:	b.ne	41cba4 <_obstack_memory_used@@Base+0xad20>  // b.any
  41cbc4:	cmp	x8, #0x0
  41cbc8:	cset	w8, eq  // eq = none
  41cbcc:	lsl	w8, w8, #2
  41cbd0:	cbnz	w8, 41cdac <_obstack_memory_used@@Base+0xaf28>
  41cbd4:	b	41cbe8 <_obstack_memory_used@@Base+0xad64>
  41cbd8:	sub	x0, x29, #0x20
  41cbdc:	bl	41ce24 <_obstack_memory_used@@Base+0xafa0>
  41cbe0:	mov	w8, #0x4                   	// #4
  41cbe4:	cbnz	w8, 41cdac <_obstack_memory_used@@Base+0xaf28>
  41cbe8:	cmp	x19, #0x1
  41cbec:	b.lt	41cd34 <_obstack_memory_used@@Base+0xaeb0>  // b.tstop
  41cbf0:	ldr	x24, [sp, #40]
  41cbf4:	ldr	w22, [sp, #28]
  41cbf8:	mov	x21, xzr
  41cbfc:	b	41cc10 <_obstack_memory_used@@Base+0xad8c>
  41cc00:	add	x21, x21, #0x1
  41cc04:	cmp	x21, x19
  41cc08:	add	x24, x24, #0x20
  41cc0c:	b.ge	41cd44 <_obstack_memory_used@@Base+0xaec0>  // b.tcont
  41cc10:	cmp	w22, #0x1
  41cc14:	b.ne	41cc30 <_obstack_memory_used@@Base+0xadac>  // b.any
  41cc18:	ldr	x8, [sp, #16]
  41cc1c:	ldrb	w1, [x8]
  41cc20:	ldr	x8, [sp, #40]
  41cc24:	add	x0, x8, x21, lsl #5
  41cc28:	bl	41a054 <_obstack_memory_used@@Base+0x81d0>
  41cc2c:	tbz	w0, #0, 41cd08 <_obstack_memory_used@@Base+0xae84>
  41cc30:	mov	x9, xzr
  41cc34:	mov	x8, xzr
  41cc38:	ldr	x10, [x25, x9]
  41cc3c:	ldr	x11, [x24, x9]
  41cc40:	and	x10, x11, x10
  41cc44:	str	x10, [x28, x9]
  41cc48:	add	x9, x9, #0x8
  41cc4c:	cmp	x9, #0x20
  41cc50:	orr	x8, x10, x8
  41cc54:	b.ne	41cc38 <_obstack_memory_used@@Base+0xadb4>  // b.any
  41cc58:	cbz	x8, 41cd08 <_obstack_memory_used@@Base+0xae84>
  41cc5c:	mov	x22, x20
  41cc60:	mov	x8, xzr
  41cc64:	mov	x27, xzr
  41cc68:	mov	x9, xzr
  41cc6c:	ldr	x10, [x25, x8]
  41cc70:	ldr	x11, [x24, x8]
  41cc74:	bic	x12, x11, x10
  41cc78:	bic	x10, x10, x11
  41cc7c:	str	x12, [x23, x8]
  41cc80:	str	x10, [x25, x8]
  41cc84:	add	x8, x8, #0x8
  41cc88:	orr	x9, x12, x9
  41cc8c:	cmp	x8, #0x20
  41cc90:	orr	x27, x10, x27
  41cc94:	b.ne	41cc6c <_obstack_memory_used@@Base+0xade8>  // b.any
  41cc98:	cbz	x9, 41ccd4 <_obstack_memory_used@@Base+0xae50>
  41cc9c:	ldr	x20, [sp, #40]
  41cca0:	add	x1, sp, #0x30
  41cca4:	add	x0, x20, x19, lsl #5
  41cca8:	bl	41ce8c <_obstack_memory_used@@Base+0xb008>
  41ccac:	add	x0, x20, x21, lsl #5
  41ccb0:	sub	x1, x29, #0x40
  41ccb4:	bl	41ce8c <_obstack_memory_used@@Base+0xb008>
  41ccb8:	ldr	x8, [sp, #32]
  41ccbc:	mov	w9, #0x18                  	// #24
  41ccc0:	madd	x0, x19, x9, x8
  41ccc4:	madd	x1, x21, x9, x8
  41ccc8:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41cccc:	cbnz	w0, 41cd24 <_obstack_memory_used@@Base+0xaea0>
  41ccd0:	add	x19, x19, #0x1
  41ccd4:	mov	x20, x22
  41ccd8:	ldr	x8, [x20, #24]
  41ccdc:	ldr	w22, [sp, #28]
  41cce0:	mov	w9, #0x18                  	// #24
  41cce4:	ldr	x1, [x8, x26, lsl #3]
  41cce8:	ldr	x8, [sp, #32]
  41ccec:	madd	x0, x21, x9, x8
  41ccf0:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41ccf4:	tbz	w0, #0, 41cd1c <_obstack_memory_used@@Base+0xae98>
  41ccf8:	cmp	x27, #0x0
  41ccfc:	mov	w8, #0x11                  	// #17
  41cd00:	csel	w8, w8, wzr, eq  // eq = none
  41cd04:	b	41cd0c <_obstack_memory_used@@Base+0xae88>
  41cd08:	mov	w8, #0x13                  	// #19
  41cd0c:	cbz	w8, 41cc00 <_obstack_memory_used@@Base+0xad7c>
  41cd10:	cmp	w8, #0x13
  41cd14:	b.eq	41cc00 <_obstack_memory_used@@Base+0xad7c>  // b.none
  41cd18:	b	41cd3c <_obstack_memory_used@@Base+0xaeb8>
  41cd1c:	mov	w8, #0x1a                  	// #26
  41cd20:	b	41cd0c <_obstack_memory_used@@Base+0xae88>
  41cd24:	mov	x20, x22
  41cd28:	ldr	w22, [sp, #28]
  41cd2c:	mov	w8, #0x1a                  	// #26
  41cd30:	b	41cd0c <_obstack_memory_used@@Base+0xae88>
  41cd34:	mov	x21, xzr
  41cd38:	b	41cd44 <_obstack_memory_used@@Base+0xaec0>
  41cd3c:	cmp	w8, #0x11
  41cd40:	b.ne	41cda8 <_obstack_memory_used@@Base+0xaf24>  // b.any
  41cd44:	ldr	x24, [sp]
  41cd48:	cmp	x21, x19
  41cd4c:	b.ne	41cd98 <_obstack_memory_used@@Base+0xaf14>  // b.any
  41cd50:	ldr	x8, [sp, #40]
  41cd54:	sub	x1, x29, #0x20
  41cd58:	add	x0, x8, x19, lsl #5
  41cd5c:	bl	41ce8c <_obstack_memory_used@@Base+0xb008>
  41cd60:	ldr	x8, [x20, #24]
  41cd64:	mov	w9, #0x18                  	// #24
  41cd68:	ldr	x1, [x8, x26, lsl #3]
  41cd6c:	ldr	x8, [sp, #32]
  41cd70:	madd	x0, x19, x9, x8
  41cd74:	bl	417e94 <_obstack_memory_used@@Base+0x6010>
  41cd78:	ldr	x22, [sp, #8]
  41cd7c:	cbnz	w0, 41cdbc <_obstack_memory_used@@Base+0xaf38>
  41cd80:	sub	x0, x29, #0x20
  41cd84:	add	x19, x19, #0x1
  41cd88:	bl	41ce24 <_obstack_memory_used@@Base+0xafa0>
  41cd8c:	mov	w8, wzr
  41cd90:	cbnz	w8, 41cdb0 <_obstack_memory_used@@Base+0xaf2c>
  41cd94:	b	41c91c <_obstack_memory_used@@Base+0xaa98>
  41cd98:	ldr	x22, [sp, #8]
  41cd9c:	mov	w8, wzr
  41cda0:	cbnz	w8, 41cdb0 <_obstack_memory_used@@Base+0xaf2c>
  41cda4:	b	41c91c <_obstack_memory_used@@Base+0xaa98>
  41cda8:	ldp	x24, x22, [sp]
  41cdac:	cbz	w8, 41c91c <_obstack_memory_used@@Base+0xaa98>
  41cdb0:	cmp	w8, #0x4
  41cdb4:	b.eq	41c91c <_obstack_memory_used@@Base+0xaa98>  // b.none
  41cdb8:	b	41cdd0 <_obstack_memory_used@@Base+0xaf4c>
  41cdbc:	mov	w8, #0x1a                  	// #26
  41cdc0:	cbnz	w8, 41cdb0 <_obstack_memory_used@@Base+0xaf2c>
  41cdc4:	b	41c91c <_obstack_memory_used@@Base+0xaa98>
  41cdc8:	mov	x19, xzr
  41cdcc:	b	41ce00 <_obstack_memory_used@@Base+0xaf7c>
  41cdd0:	cmp	w8, #0x1a
  41cdd4:	b.ne	41ce00 <_obstack_memory_used@@Base+0xaf7c>  // b.any
  41cdd8:	cmp	x19, #0x1
  41cddc:	b.lt	41cdf8 <_obstack_memory_used@@Base+0xaf74>  // b.tstop
  41cde0:	ldr	x8, [sp, #32]
  41cde4:	add	x20, x8, #0x10
  41cde8:	ldr	x0, [x20], #24
  41cdec:	bl	402bd0 <free@plt>
  41cdf0:	subs	x19, x19, #0x1
  41cdf4:	b.ne	41cde8 <_obstack_memory_used@@Base+0xaf64>  // b.any
  41cdf8:	mov	x19, #0xffffffffffffffff    	// #-1
  41cdfc:	b	41ce00 <_obstack_memory_used@@Base+0xaf7c>
  41ce00:	mov	x0, x19
  41ce04:	ldp	x20, x19, [sp, #224]
  41ce08:	ldp	x22, x21, [sp, #208]
  41ce0c:	ldp	x24, x23, [sp, #192]
  41ce10:	ldp	x26, x25, [sp, #176]
  41ce14:	ldp	x28, x27, [sp, #160]
  41ce18:	ldp	x29, x30, [sp, #144]
  41ce1c:	add	sp, sp, #0xf0
  41ce20:	ret
  41ce24:	movi	v0.2d, #0x0
  41ce28:	stp	q0, q0, [x0]
  41ce2c:	ret
  41ce30:	mov	x8, xzr
  41ce34:	ldr	x9, [x1, x8]
  41ce38:	ldr	x10, [x0, x8]
  41ce3c:	orr	x9, x10, x9
  41ce40:	str	x9, [x0, x8]
  41ce44:	add	x8, x8, #0x8
  41ce48:	cmp	x8, #0x20
  41ce4c:	b.ne	41ce34 <_obstack_memory_used@@Base+0xafb0>  // b.any
  41ce50:	ret
  41ce54:	movi	v0.2d, #0xffffffffffffffff
  41ce58:	stp	q0, q0, [x0]
  41ce5c:	ret
  41ce60:	add	x8, x1, #0x3f
  41ce64:	cmp	x1, #0x0
  41ce68:	csel	x8, x8, x1, lt  // lt = tstop
  41ce6c:	asr	x8, x8, #6
  41ce70:	lsl	x8, x8, #3
  41ce74:	ldr	x9, [x0, x8]
  41ce78:	mov	w10, #0x1                   	// #1
  41ce7c:	lsl	x10, x10, x1
  41ce80:	bic	x9, x9, x10
  41ce84:	str	x9, [x0, x8]
  41ce88:	ret
  41ce8c:	ldp	q1, q0, [x1]
  41ce90:	stp	q1, q0, [x0]
  41ce94:	ret
  41ce98:	ldr	x8, [x0]
  41ce9c:	add	x8, x8, x1, lsl #4
  41cea0:	ldr	w8, [x8, #8]
  41cea4:	and	w9, w8, #0xff
  41cea8:	cmp	w9, #0x2
  41ceac:	b.ne	41ced0 <_obstack_memory_used@@Base+0xb04c>  // b.any
  41ceb0:	tst	w8, #0x3ff00
  41ceb4:	b.eq	41ced8 <_obstack_memory_used@@Base+0xb054>  // b.none
  41ceb8:	tbnz	w2, #0, 41cec0 <_obstack_memory_used@@Base+0xb03c>
  41cebc:	tbnz	w8, #10, 41ced0 <_obstack_memory_used@@Base+0xb04c>
  41cec0:	tbz	w2, #0, 41cec8 <_obstack_memory_used@@Base+0xb044>
  41cec4:	tbnz	w8, #11, 41ced0 <_obstack_memory_used@@Base+0xb04c>
  41cec8:	tbnz	w2, #1, 41cee0 <_obstack_memory_used@@Base+0xb05c>
  41cecc:	tbz	w8, #13, 41cee0 <_obstack_memory_used@@Base+0xb05c>
  41ced0:	mov	w0, wzr
  41ced4:	ret
  41ced8:	mov	w0, #0x1                   	// #1
  41cedc:	ret
  41cee0:	tst	w8, #0x8000
  41cee4:	cset	w8, eq  // eq = none
  41cee8:	and	w9, w2, #0x8
  41ceec:	orr	w0, w8, w9, lsr #3
  41cef0:	ret
  41cef4:	stp	x1, x2, [x0]
  41cef8:	stp	x3, x4, [x0, #16]
  41cefc:	stp	xzr, xzr, [x0, #40]
  41cf00:	str	xzr, [x0, #32]
  41cf04:	ret
  41cf08:	sub	sp, sp, #0x60
  41cf0c:	stp	x29, x30, [sp, #32]
  41cf10:	str	x23, [sp, #48]
  41cf14:	stp	x22, x21, [sp, #64]
  41cf18:	stp	x20, x19, [sp, #80]
  41cf1c:	mov	x19, x1
  41cf20:	ldp	x1, x21, [x1, #16]
  41cf24:	mov	x20, x0
  41cf28:	add	x0, sp, #0x8
  41cf2c:	add	x29, sp, #0x20
  41cf30:	bl	417e94 <_obstack_memory_used@@Base+0x6010>
  41cf34:	cbnz	w0, 41cffc <_obstack_memory_used@@Base+0xb178>
  41cf38:	add	x3, sp, #0x8
  41cf3c:	mov	x0, x20
  41cf40:	mov	x1, x19
  41cf44:	mov	x2, x21
  41cf48:	bl	41d0d8 <_obstack_memory_used@@Base+0xb254>
  41cf4c:	cbnz	w0, 41cfc0 <_obstack_memory_used@@Base+0xb13c>
  41cf50:	mov	w23, wzr
  41cf54:	b	41cf70 <_obstack_memory_used@@Base+0xb0ec>
  41cf58:	add	x3, sp, #0x8
  41cf5c:	mov	x0, x20
  41cf60:	mov	x1, x19
  41cf64:	mov	x2, x21
  41cf68:	bl	41d0d8 <_obstack_memory_used@@Base+0xb254>
  41cf6c:	cbnz	w0, 41cfc0 <_obstack_memory_used@@Base+0xb13c>
  41cf70:	subs	x8, x21, #0x1
  41cf74:	b.lt	41cfd4 <_obstack_memory_used@@Base+0xb150>  // b.tstop
  41cf78:	ldr	x0, [x19]
  41cf7c:	ldr	w10, [x20, #224]
  41cf80:	ldr	x9, [x0, x21, lsl #3]
  41cf84:	cmp	x9, #0x0
  41cf88:	csinc	w23, wzr, w23, ne  // ne = any
  41cf8c:	cmp	w23, w10
  41cf90:	b.gt	41cfc8 <_obstack_memory_used@@Base+0xb144>
  41cf94:	str	xzr, [sp, #16]
  41cf98:	ldr	x9, [x20, #184]
  41cf9c:	mov	x21, x8
  41cfa0:	ldr	x9, [x9, x8, lsl #3]
  41cfa4:	cbz	x9, 41cf58 <_obstack_memory_used@@Base+0xb0d4>
  41cfa8:	add	x3, sp, #0x8
  41cfac:	mov	x0, x20
  41cfb0:	mov	x1, x19
  41cfb4:	mov	x2, x21
  41cfb8:	bl	41d1e8 <_obstack_memory_used@@Base+0xb364>
  41cfbc:	cbz	w0, 41cf58 <_obstack_memory_used@@Base+0xb0d4>
  41cfc0:	mov	w22, w0
  41cfc4:	b	41cfd8 <_obstack_memory_used@@Base+0xb154>
  41cfc8:	lsl	x2, x21, #3
  41cfcc:	mov	w1, wzr
  41cfd0:	bl	4029c0 <memset@plt>
  41cfd4:	mov	w22, wzr
  41cfd8:	ldr	x0, [sp, #24]
  41cfdc:	bl	402bd0 <free@plt>
  41cfe0:	mov	w0, w22
  41cfe4:	ldp	x20, x19, [sp, #80]
  41cfe8:	ldp	x22, x21, [sp, #64]
  41cfec:	ldr	x23, [sp, #48]
  41cff0:	ldp	x29, x30, [sp, #32]
  41cff4:	add	sp, sp, #0x60
  41cff8:	ret
  41cffc:	mov	w22, w0
  41d000:	b	41cfe0 <_obstack_memory_used@@Base+0xb15c>
  41d004:	sub	sp, sp, #0x60
  41d008:	cmp	x3, #0x1
  41d00c:	stp	x29, x30, [sp, #32]
  41d010:	str	x23, [sp, #48]
  41d014:	stp	x22, x21, [sp, #64]
  41d018:	stp	x20, x19, [sp, #80]
  41d01c:	add	x29, sp, #0x20
  41d020:	b.lt	41d0b8 <_obstack_memory_used@@Base+0xb234>  // b.tstop
  41d024:	mov	x19, x3
  41d028:	mov	x20, x2
  41d02c:	mov	x21, x1
  41d030:	mov	x22, x0
  41d034:	b	41d04c <_obstack_memory_used@@Base+0xb1c8>
  41d038:	str	x8, [x21]
  41d03c:	subs	x19, x19, #0x1
  41d040:	add	x20, x20, #0x8
  41d044:	add	x21, x21, #0x8
  41d048:	b.eq	41d0b8 <_obstack_memory_used@@Base+0xb234>  // b.none
  41d04c:	ldr	x9, [x21]
  41d050:	ldr	x8, [x20]
  41d054:	cbz	x9, 41d038 <_obstack_memory_used@@Base+0xb1b4>
  41d058:	cbz	x8, 41d03c <_obstack_memory_used@@Base+0xb1b8>
  41d05c:	add	x1, x9, #0x8
  41d060:	add	x2, x8, #0x8
  41d064:	add	x0, sp, #0x8
  41d068:	bl	41ac0c <_obstack_memory_used@@Base+0x8d88>
  41d06c:	str	w0, [x29, #28]
  41d070:	cbnz	w0, 41d0a8 <_obstack_memory_used@@Base+0xb224>
  41d074:	add	x0, x29, #0x1c
  41d078:	add	x2, sp, #0x8
  41d07c:	mov	x1, x22
  41d080:	bl	41bbb4 <_obstack_memory_used@@Base+0x9d30>
  41d084:	str	x0, [x21]
  41d088:	ldr	x0, [sp, #24]
  41d08c:	bl	402bd0 <free@plt>
  41d090:	ldr	w9, [x29, #28]
  41d094:	cmp	w9, #0x0
  41d098:	cset	w8, eq  // eq = none
  41d09c:	csel	w23, w23, w9, eq  // eq = none
  41d0a0:	cbnz	w8, 41d03c <_obstack_memory_used@@Base+0xb1b8>
  41d0a4:	b	41d0bc <_obstack_memory_used@@Base+0xb238>
  41d0a8:	mov	w8, wzr
  41d0ac:	mov	w23, w0
  41d0b0:	cbnz	w8, 41d03c <_obstack_memory_used@@Base+0xb1b8>
  41d0b4:	b	41d0bc <_obstack_memory_used@@Base+0xb238>
  41d0b8:	mov	w23, wzr
  41d0bc:	mov	w0, w23
  41d0c0:	ldp	x20, x19, [sp, #80]
  41d0c4:	ldp	x22, x21, [sp, #64]
  41d0c8:	ldr	x23, [sp, #48]
  41d0cc:	ldp	x29, x30, [sp, #32]
  41d0d0:	add	sp, sp, #0x60
  41d0d4:	ret
  41d0d8:	stp	x29, x30, [sp, #-80]!
  41d0dc:	stp	x24, x23, [sp, #32]
  41d0e0:	stp	x22, x21, [sp, #48]
  41d0e4:	stp	x20, x19, [sp, #64]
  41d0e8:	mov	x29, sp
  41d0ec:	ldr	x24, [x0, #152]
  41d0f0:	str	wzr, [x29, #28]
  41d0f4:	ldr	x8, [x0, #184]
  41d0f8:	str	x25, [sp, #16]
  41d0fc:	mov	x19, x2
  41d100:	mov	x20, x1
  41d104:	ldr	x25, [x8, x2, lsl #3]
  41d108:	ldr	x8, [x3, #8]
  41d10c:	mov	x21, x0
  41d110:	add	x9, x25, #0x8
  41d114:	cmp	x25, #0x0
  41d118:	csel	x22, xzr, x9, eq  // eq = none
  41d11c:	cbz	x8, 41d194 <_obstack_memory_used@@Base+0xb310>
  41d120:	mov	x23, x3
  41d124:	cbz	x25, 41d16c <_obstack_memory_used@@Base+0xb2e8>
  41d128:	mov	x0, x24
  41d12c:	mov	x1, x23
  41d130:	mov	x2, x22
  41d134:	bl	41d364 <_obstack_memory_used@@Base+0xb4e0>
  41d138:	str	w0, [x29, #28]
  41d13c:	cbnz	w0, 41d1d0 <_obstack_memory_used@@Base+0xb34c>
  41d140:	ldr	x8, [x20, #40]
  41d144:	cbz	x8, 41d16c <_obstack_memory_used@@Base+0xb2e8>
  41d148:	ldr	x4, [x21, #216]
  41d14c:	add	x3, x20, #0x20
  41d150:	mov	x0, x24
  41d154:	mov	x1, x23
  41d158:	mov	x2, x22
  41d15c:	mov	x5, x19
  41d160:	bl	41d444 <_obstack_memory_used@@Base+0xb5c0>
  41d164:	str	w0, [x29, #28]
  41d168:	cbnz	w0, 41d1d0 <_obstack_memory_used@@Base+0xb34c>
  41d16c:	add	x0, x29, #0x1c
  41d170:	mov	x1, x24
  41d174:	mov	x2, x23
  41d178:	bl	41bbb4 <_obstack_memory_used@@Base+0x9d30>
  41d17c:	ldr	x8, [x20]
  41d180:	str	x0, [x8, x19, lsl #3]
  41d184:	ldr	w0, [x29, #28]
  41d188:	cbnz	w0, 41d1d0 <_obstack_memory_used@@Base+0xb34c>
  41d18c:	cbnz	x25, 41d1a0 <_obstack_memory_used@@Base+0xb31c>
  41d190:	b	41d1cc <_obstack_memory_used@@Base+0xb348>
  41d194:	ldr	x8, [x20]
  41d198:	str	xzr, [x8, x19, lsl #3]
  41d19c:	cbz	x25, 41d1cc <_obstack_memory_used@@Base+0xb348>
  41d1a0:	ldr	x8, [x21, #184]
  41d1a4:	ldr	x8, [x8, x19, lsl #3]
  41d1a8:	ldrb	w8, [x8, #104]
  41d1ac:	tbz	w8, #6, 41d1cc <_obstack_memory_used@@Base+0xb348>
  41d1b0:	mov	x0, x21
  41d1b4:	mov	x1, x20
  41d1b8:	mov	x2, x19
  41d1bc:	mov	x3, x22
  41d1c0:	bl	41d728 <_obstack_memory_used@@Base+0xb8a4>
  41d1c4:	str	w0, [x29, #28]
  41d1c8:	cbnz	w0, 41d1d0 <_obstack_memory_used@@Base+0xb34c>
  41d1cc:	mov	w0, wzr
  41d1d0:	ldp	x20, x19, [sp, #64]
  41d1d4:	ldp	x22, x21, [sp, #48]
  41d1d8:	ldp	x24, x23, [sp, #32]
  41d1dc:	ldr	x25, [sp, #16]
  41d1e0:	ldp	x29, x30, [sp], #80
  41d1e4:	ret
  41d1e8:	stp	x29, x30, [sp, #-96]!
  41d1ec:	stp	x28, x27, [sp, #16]
  41d1f0:	stp	x26, x25, [sp, #32]
  41d1f4:	stp	x24, x23, [sp, #48]
  41d1f8:	stp	x22, x21, [sp, #64]
  41d1fc:	stp	x20, x19, [sp, #80]
  41d200:	ldr	x8, [x0, #184]
  41d204:	mov	x29, sp
  41d208:	ldr	x25, [x8, x2, lsl #3]
  41d20c:	ldr	x8, [x25, #40]
  41d210:	cmp	x8, #0x1
  41d214:	b.lt	41d33c <_obstack_memory_used@@Base+0xb4b8>  // b.tstop
  41d218:	ldr	x27, [x0, #152]
  41d21c:	mov	x19, x3
  41d220:	mov	x20, x0
  41d224:	mov	x21, x2
  41d228:	mov	x22, x1
  41d22c:	mov	x26, xzr
  41d230:	add	x28, x2, #0x1
  41d234:	add	x23, x1, #0x20
  41d238:	ldr	x8, [x25, #48]
  41d23c:	ldr	x24, [x8, x26, lsl #3]
  41d240:	ldr	x8, [x27]
  41d244:	add	x8, x8, x24, lsl #4
  41d248:	ldrb	w8, [x8, #10]
  41d24c:	tbnz	w8, #4, 41d25c <_obstack_memory_used@@Base+0xb3d8>
  41d250:	mov	w0, wzr
  41d254:	cbnz	w0, 41d2c0 <_obstack_memory_used@@Base+0xb43c>
  41d258:	b	41d278 <_obstack_memory_used@@Base+0xb3f4>
  41d25c:	ldr	x4, [x22, #24]
  41d260:	mov	x0, x20
  41d264:	mov	x1, x22
  41d268:	mov	x2, x24
  41d26c:	mov	x3, x21
  41d270:	bl	41e1bc <_obstack_memory_used@@Base+0xc338>
  41d274:	cbnz	w0, 41d2c0 <_obstack_memory_used@@Base+0xb43c>
  41d278:	ldr	x8, [x27]
  41d27c:	mov	x0, x20
  41d280:	mov	x2, x21
  41d284:	add	x1, x8, x24, lsl #4
  41d288:	bl	41c0c8 <_obstack_memory_used@@Base+0xa244>
  41d28c:	tbz	w0, #0, 41d2bc <_obstack_memory_used@@Base+0xb438>
  41d290:	ldr	x8, [x22]
  41d294:	ldr	x8, [x8, x28, lsl #3]
  41d298:	cbz	x8, 41d314 <_obstack_memory_used@@Base+0xb490>
  41d29c:	ldr	x9, [x27, #24]
  41d2a0:	add	x0, x8, #0x8
  41d2a4:	ldr	x1, [x9, x24, lsl #3]
  41d2a8:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41d2ac:	cmp	x0, #0x0
  41d2b0:	cset	w0, ne  // ne = any
  41d2b4:	cbnz	w0, 41d2c4 <_obstack_memory_used@@Base+0xb440>
  41d2b8:	b	41d31c <_obstack_memory_used@@Base+0xb498>
  41d2bc:	mov	w0, wzr
  41d2c0:	cbz	w0, 41d31c <_obstack_memory_used@@Base+0xb498>
  41d2c4:	ldr	x8, [x22, #40]
  41d2c8:	cbz	x8, 41d2fc <_obstack_memory_used@@Base+0xb478>
  41d2cc:	ldr	x8, [x27, #24]
  41d2d0:	add	x3, x21, w0, sxtw
  41d2d4:	mov	x0, x20
  41d2d8:	mov	x1, x23
  41d2dc:	ldr	x2, [x8, x24, lsl #3]
  41d2e0:	mov	x4, x24
  41d2e4:	mov	x5, x21
  41d2e8:	bl	41ddc4 <_obstack_memory_used@@Base+0xbf40>
  41d2ec:	tst	w0, #0x1
  41d2f0:	mov	w8, #0x4                   	// #4
  41d2f4:	csel	w8, w8, wzr, ne  // ne = any
  41d2f8:	tbnz	w0, #0, 41d320 <_obstack_memory_used@@Base+0xb49c>
  41d2fc:	mov	x0, x19
  41d300:	mov	x1, x24
  41d304:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41d308:	mvn	w8, w0
  41d30c:	and	w8, w8, #0x1
  41d310:	b	41d320 <_obstack_memory_used@@Base+0xb49c>
  41d314:	mov	w0, wzr
  41d318:	cbnz	w0, 41d2c4 <_obstack_memory_used@@Base+0xb440>
  41d31c:	mov	w8, #0x4                   	// #4
  41d320:	orr	w8, w8, #0x4
  41d324:	cmp	w8, #0x4
  41d328:	b.ne	41d344 <_obstack_memory_used@@Base+0xb4c0>  // b.any
  41d32c:	ldr	x8, [x25, #40]
  41d330:	add	x26, x26, #0x1
  41d334:	cmp	x26, x8
  41d338:	b.lt	41d238 <_obstack_memory_used@@Base+0xb3b4>  // b.tstop
  41d33c:	mov	w0, wzr
  41d340:	b	41d348 <_obstack_memory_used@@Base+0xb4c4>
  41d344:	mov	w0, #0xc                   	// #12
  41d348:	ldp	x20, x19, [sp, #80]
  41d34c:	ldp	x22, x21, [sp, #64]
  41d350:	ldp	x24, x23, [sp, #48]
  41d354:	ldp	x26, x25, [sp, #32]
  41d358:	ldp	x28, x27, [sp, #16]
  41d35c:	ldp	x29, x30, [sp], #96
  41d360:	ret
  41d364:	sub	sp, sp, #0x50
  41d368:	stp	x29, x30, [sp, #16]
  41d36c:	stp	x22, x21, [sp, #48]
  41d370:	stp	x20, x19, [sp, #64]
  41d374:	add	x29, sp, #0x10
  41d378:	mov	x20, x1
  41d37c:	mov	x21, x0
  41d380:	mov	x19, x2
  41d384:	sub	x0, x29, #0x4
  41d388:	mov	x1, x21
  41d38c:	mov	x2, x20
  41d390:	stp	x24, x23, [sp, #32]
  41d394:	stur	wzr, [x29, #-4]
  41d398:	bl	41bbb4 <_obstack_memory_used@@Base+0x9d30>
  41d39c:	ldur	w8, [x29, #-4]
  41d3a0:	cbnz	w8, 41d41c <_obstack_memory_used@@Base+0xb598>
  41d3a4:	mov	x22, x0
  41d3a8:	ldr	x8, [x22, #56]!
  41d3ac:	cbnz	x8, 41d408 <_obstack_memory_used@@Base+0xb584>
  41d3b0:	ldr	x1, [x20, #8]
  41d3b4:	mov	x0, x22
  41d3b8:	bl	41813c <_obstack_memory_used@@Base+0x62b8>
  41d3bc:	stur	w0, [x29, #-4]
  41d3c0:	cbnz	w0, 41d43c <_obstack_memory_used@@Base+0xb5b8>
  41d3c4:	ldr	x8, [x20, #8]
  41d3c8:	cmp	x8, #0x1
  41d3cc:	b.lt	41d408 <_obstack_memory_used@@Base+0xb584>  // b.tstop
  41d3d0:	mov	x23, xzr
  41d3d4:	mov	w24, #0x18                  	// #24
  41d3d8:	ldr	x8, [x20, #16]
  41d3dc:	ldr	x9, [x21, #56]
  41d3e0:	mov	x0, x22
  41d3e4:	ldr	x8, [x8, x23, lsl #3]
  41d3e8:	madd	x1, x8, x24, x9
  41d3ec:	bl	4183a4 <_obstack_memory_used@@Base+0x6520>
  41d3f0:	cbnz	w0, 41d438 <_obstack_memory_used@@Base+0xb5b4>
  41d3f4:	ldr	x8, [x20, #8]
  41d3f8:	add	x23, x23, #0x1
  41d3fc:	cmp	x23, x8
  41d400:	b.lt	41d3d8 <_obstack_memory_used@@Base+0xb554>  // b.tstop
  41d404:	stur	w0, [x29, #-4]
  41d408:	mov	x0, x20
  41d40c:	mov	x1, x19
  41d410:	mov	x2, x22
  41d414:	bl	41da00 <_obstack_memory_used@@Base+0xbb7c>
  41d418:	mov	w8, w0
  41d41c:	ldp	x20, x19, [sp, #64]
  41d420:	ldp	x22, x21, [sp, #48]
  41d424:	ldp	x24, x23, [sp, #32]
  41d428:	ldp	x29, x30, [sp, #16]
  41d42c:	mov	w0, w8
  41d430:	add	sp, sp, #0x50
  41d434:	ret
  41d438:	stur	w0, [x29, #-4]
  41d43c:	mov	w8, #0xc                   	// #12
  41d440:	b	41d41c <_obstack_memory_used@@Base+0xb598>
  41d444:	sub	sp, sp, #0x70
  41d448:	stp	x29, x30, [sp, #16]
  41d44c:	stp	x28, x27, [sp, #32]
  41d450:	stp	x26, x25, [sp, #48]
  41d454:	stp	x24, x23, [sp, #64]
  41d458:	stp	x22, x21, [sp, #80]
  41d45c:	stp	x20, x19, [sp, #96]
  41d460:	ldr	x8, [x3, #8]
  41d464:	add	x29, sp, #0x10
  41d468:	str	x2, [sp, #8]
  41d46c:	cmp	x8, #0x1
  41d470:	b.lt	41d6fc <_obstack_memory_used@@Base+0xb878>  // b.tstop
  41d474:	mov	x19, x5
  41d478:	mov	x20, x4
  41d47c:	mov	x21, x3
  41d480:	mov	x23, x1
  41d484:	mov	x24, x0
  41d488:	mov	x28, xzr
  41d48c:	mov	w25, #0x28                  	// #40
  41d490:	ldr	x8, [x21, #16]
  41d494:	ldr	x8, [x8, x28, lsl #3]
  41d498:	madd	x9, x8, x25, x20
  41d49c:	ldr	x9, [x9, #16]
  41d4a0:	cmp	x9, x19
  41d4a4:	b.ge	41d4b8 <_obstack_memory_used@@Base+0xb634>  // b.tcont
  41d4a8:	madd	x9, x8, x25, x20
  41d4ac:	ldr	x9, [x9, #8]
  41d4b0:	cmp	x9, x19
  41d4b4:	b.ge	41d4dc <_obstack_memory_used@@Base+0xb658>  // b.tcont
  41d4b8:	mov	w8, #0x4                   	// #4
  41d4bc:	orr	w8, w8, #0x4
  41d4c0:	cmp	w8, #0x4
  41d4c4:	b.ne	41d704 <_obstack_memory_used@@Base+0xb880>  // b.any
  41d4c8:	ldr	x8, [x21, #8]
  41d4cc:	add	x28, x28, #0x1
  41d4d0:	cmp	x28, x8
  41d4d4:	b.lt	41d490 <_obstack_memory_used@@Base+0xb60c>  // b.tstop
  41d4d8:	b	41d6fc <_obstack_memory_used@@Base+0xb878>
  41d4dc:	madd	x9, x8, x25, x20
  41d4e0:	ldr	x10, [x9]
  41d4e4:	ldr	x8, [x24]
  41d4e8:	ldr	x9, [x9, #24]
  41d4ec:	lsl	x10, x10, #4
  41d4f0:	ldr	x27, [x8, x10]
  41d4f4:	cmp	x9, x19
  41d4f8:	b.ne	41d578 <_obstack_memory_used@@Base+0xb6f4>  // b.any
  41d4fc:	ldr	x9, [x23, #8]
  41d500:	cmp	x9, #0x1
  41d504:	b.lt	41d618 <_obstack_memory_used@@Base+0xb794>  // b.tstop
  41d508:	ldp	x11, x10, [x23, #8]
  41d50c:	mov	x9, xzr
  41d510:	mov	x26, #0xffffffffffffffff    	// #-1
  41d514:	mov	x1, #0xffffffffffffffff    	// #-1
  41d518:	b	41d538 <_obstack_memory_used@@Base+0xb6b4>
  41d51c:	lsl	x13, x12, #4
  41d520:	ldr	x13, [x8, x13]
  41d524:	cmp	x27, x13
  41d528:	csel	x26, x12, x26, eq  // eq = none
  41d52c:	add	x9, x9, #0x1
  41d530:	cmp	x9, x11
  41d534:	b.ge	41d620 <_obstack_memory_used@@Base+0xb79c>  // b.tcont
  41d538:	ldr	x12, [x10, x9, lsl #3]
  41d53c:	add	x13, x8, x12, lsl #4
  41d540:	ldrb	w13, [x13, #8]
  41d544:	cmp	w13, #0x9
  41d548:	b.eq	41d51c <_obstack_memory_used@@Base+0xb698>  // b.none
  41d54c:	cmp	w13, #0x8
  41d550:	b.ne	41d52c <_obstack_memory_used@@Base+0xb6a8>  // b.any
  41d554:	lsl	x14, x12, #4
  41d558:	ldr	x14, [x8, x14]
  41d55c:	cmp	x27, x14
  41d560:	b.ne	41d56c <_obstack_memory_used@@Base+0xb6e8>  // b.any
  41d564:	mov	x1, x12
  41d568:	b	41d52c <_obstack_memory_used@@Base+0xb6a8>
  41d56c:	cmp	w13, #0x9
  41d570:	b.ne	41d52c <_obstack_memory_used@@Base+0xb6a8>  // b.any
  41d574:	b	41d51c <_obstack_memory_used@@Base+0xb698>
  41d578:	ldr	x8, [x23, #8]
  41d57c:	cmp	x8, #0x1
  41d580:	b.lt	41d6e0 <_obstack_memory_used@@Base+0xb85c>  // b.tstop
  41d584:	mov	x22, xzr
  41d588:	b	41d5c0 <_obstack_memory_used@@Base+0xb73c>
  41d58c:	ldr	x3, [sp, #8]
  41d590:	mov	x0, x24
  41d594:	mov	x2, x23
  41d598:	bl	41dbc0 <_obstack_memory_used@@Base+0xbd3c>
  41d59c:	cbnz	w0, 41d604 <_obstack_memory_used@@Base+0xb780>
  41d5a0:	mov	w8, wzr
  41d5a4:	cmp	w8, #0xd
  41d5a8:	b.eq	41d5b0 <_obstack_memory_used@@Base+0xb72c>  // b.none
  41d5ac:	cbnz	w8, 41d4bc <_obstack_memory_used@@Base+0xb638>
  41d5b0:	ldr	x8, [x23, #8]
  41d5b4:	add	x22, x22, #0x1
  41d5b8:	cmp	x22, x8
  41d5bc:	b.ge	41d6e0 <_obstack_memory_used@@Base+0xb85c>  // b.tcont
  41d5c0:	ldr	x8, [x23, #16]
  41d5c4:	ldr	x1, [x8, x22, lsl #3]
  41d5c8:	ldr	x8, [x24]
  41d5cc:	add	x9, x8, x1, lsl #4
  41d5d0:	ldr	w9, [x9, #8]
  41d5d4:	and	w9, w9, #0xfe
  41d5d8:	orr	w9, w9, #0x1
  41d5dc:	cmp	w9, #0x9
  41d5e0:	b.ne	41d5a0 <_obstack_memory_used@@Base+0xb71c>  // b.any
  41d5e4:	lsl	x9, x1, #4
  41d5e8:	ldr	x8, [x8, x9]
  41d5ec:	cmp	x27, x8
  41d5f0:	b.eq	41d58c <_obstack_memory_used@@Base+0xb708>  // b.none
  41d5f4:	mov	w8, #0xd                   	// #13
  41d5f8:	cmp	w8, #0xd
  41d5fc:	b.ne	41d5ac <_obstack_memory_used@@Base+0xb728>  // b.any
  41d600:	b	41d5b0 <_obstack_memory_used@@Base+0xb72c>
  41d604:	mov	w8, #0x1                   	// #1
  41d608:	str	w0, [sp, #4]
  41d60c:	cmp	w8, #0xd
  41d610:	b.ne	41d5ac <_obstack_memory_used@@Base+0xb728>  // b.any
  41d614:	b	41d5b0 <_obstack_memory_used@@Base+0xb72c>
  41d618:	mov	x1, #0xffffffffffffffff    	// #-1
  41d61c:	mov	x26, #0xffffffffffffffff    	// #-1
  41d620:	tbnz	x1, #63, 41d638 <_obstack_memory_used@@Base+0xb7b4>
  41d624:	ldr	x3, [sp, #8]
  41d628:	mov	x0, x24
  41d62c:	mov	x2, x23
  41d630:	bl	41dbc0 <_obstack_memory_used@@Base+0xbd3c>
  41d634:	cbnz	w0, 41d6e8 <_obstack_memory_used@@Base+0xb864>
  41d638:	tbnz	x26, #63, 41d6d4 <_obstack_memory_used@@Base+0xb850>
  41d63c:	ldr	x8, [x23, #8]
  41d640:	cmp	x8, #0x1
  41d644:	b.lt	41d6d4 <_obstack_memory_used@@Base+0xb850>  // b.tstop
  41d648:	mov	x22, xzr
  41d64c:	b	41d668 <_obstack_memory_used@@Base+0xb7e4>
  41d650:	mov	w8, wzr
  41d654:	cbnz	w8, 41d6d8 <_obstack_memory_used@@Base+0xb854>
  41d658:	ldr	x8, [x23, #8]
  41d65c:	add	x22, x22, #0x1
  41d660:	cmp	x22, x8
  41d664:	b.ge	41d6d4 <_obstack_memory_used@@Base+0xb850>  // b.tcont
  41d668:	ldr	x8, [x23, #16]
  41d66c:	mov	w25, #0x18                  	// #24
  41d670:	mov	x1, x26
  41d674:	ldr	x27, [x8, x22, lsl #3]
  41d678:	ldr	x8, [x24, #56]
  41d67c:	madd	x0, x27, x25, x8
  41d680:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41d684:	cbnz	x0, 41d650 <_obstack_memory_used@@Base+0xb7cc>
  41d688:	ldr	x8, [x24, #48]
  41d68c:	mov	x1, x26
  41d690:	madd	x0, x27, x25, x8
  41d694:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41d698:	cbnz	x0, 41d650 <_obstack_memory_used@@Base+0xb7cc>
  41d69c:	ldr	x3, [sp, #8]
  41d6a0:	mov	x0, x24
  41d6a4:	mov	x1, x27
  41d6a8:	mov	x2, x23
  41d6ac:	bl	41dbc0 <_obstack_memory_used@@Base+0xbd3c>
  41d6b0:	ldr	w10, [sp, #4]
  41d6b4:	cmp	w0, #0x0
  41d6b8:	cset	w9, eq  // eq = none
  41d6bc:	cset	w8, ne  // ne = any
  41d6c0:	csel	w10, w10, w0, eq  // eq = none
  41d6c4:	sub	x22, x22, x9
  41d6c8:	str	w10, [sp, #4]
  41d6cc:	cbz	w8, 41d658 <_obstack_memory_used@@Base+0xb7d4>
  41d6d0:	b	41d6d8 <_obstack_memory_used@@Base+0xb854>
  41d6d4:	mov	w8, wzr
  41d6d8:	mov	w25, #0x28                  	// #40
  41d6dc:	cbnz	w8, 41d4bc <_obstack_memory_used@@Base+0xb638>
  41d6e0:	mov	w8, wzr
  41d6e4:	b	41d4bc <_obstack_memory_used@@Base+0xb638>
  41d6e8:	mov	w8, #0x1                   	// #1
  41d6ec:	str	w0, [sp, #4]
  41d6f0:	mov	w25, #0x28                  	// #40
  41d6f4:	cbnz	w8, 41d4bc <_obstack_memory_used@@Base+0xb638>
  41d6f8:	b	41d6e0 <_obstack_memory_used@@Base+0xb85c>
  41d6fc:	mov	w0, wzr
  41d700:	b	41d708 <_obstack_memory_used@@Base+0xb884>
  41d704:	ldr	w0, [sp, #4]
  41d708:	ldp	x20, x19, [sp, #96]
  41d70c:	ldp	x22, x21, [sp, #80]
  41d710:	ldp	x24, x23, [sp, #64]
  41d714:	ldp	x26, x25, [sp, #48]
  41d718:	ldp	x28, x27, [sp, #32]
  41d71c:	ldp	x29, x30, [sp, #16]
  41d720:	add	sp, sp, #0x70
  41d724:	ret
  41d728:	sub	sp, sp, #0xe0
  41d72c:	stp	x29, x30, [sp, #128]
  41d730:	stp	x28, x27, [sp, #144]
  41d734:	stp	x26, x25, [sp, #160]
  41d738:	stp	x24, x23, [sp, #176]
  41d73c:	stp	x22, x21, [sp, #192]
  41d740:	stp	x20, x19, [sp, #208]
  41d744:	ldr	x22, [x0, #152]
  41d748:	mov	x23, x1
  41d74c:	mov	x1, x2
  41d750:	add	x29, sp, #0x80
  41d754:	mov	x19, x3
  41d758:	mov	x20, x2
  41d75c:	str	x0, [sp, #56]
  41d760:	bl	41ae0c <_obstack_memory_used@@Base+0x8f88>
  41d764:	cmn	x0, #0x1
  41d768:	str	x0, [sp, #32]
  41d76c:	b.eq	41d9d0 <_obstack_memory_used@@Base+0xbb4c>  // b.none
  41d770:	str	xzr, [sp, #64]
  41d774:	ldr	x8, [x19, #8]
  41d778:	cmp	x8, #0x1
  41d77c:	b.lt	41d9b4 <_obstack_memory_used@@Base+0xbb30>  // b.tstop
  41d780:	add	x9, x20, #0x1
  41d784:	str	x9, [sp]
  41d788:	ldr	x9, [sp, #32]
  41d78c:	add	x8, x23, #0x20
  41d790:	str	x8, [sp, #48]
  41d794:	add	x8, sp, #0x40
  41d798:	add	x9, x9, x9, lsl #2
  41d79c:	add	x8, x8, #0x20
  41d7a0:	mov	x28, xzr
  41d7a4:	str	x8, [sp, #40]
  41d7a8:	lsl	x8, x9, #3
  41d7ac:	stp	x8, x19, [sp, #16]
  41d7b0:	b	41d7c4 <_obstack_memory_used@@Base+0xb940>
  41d7b4:	ldr	x8, [x19, #8]
  41d7b8:	add	x28, x28, #0x1
  41d7bc:	cmp	x28, x8
  41d7c0:	b.ge	41d9b4 <_obstack_memory_used@@Base+0xbb30>  // b.tcont
  41d7c4:	ldr	x8, [x19, #16]
  41d7c8:	ldr	x9, [x23, #16]
  41d7cc:	ldr	x26, [x8, x28, lsl #3]
  41d7d0:	ldr	x8, [x22]
  41d7d4:	cmp	x26, x9
  41d7d8:	add	x8, x8, x26, lsl #4
  41d7dc:	ldrb	w8, [x8, #8]
  41d7e0:	b.ne	41d800 <_obstack_memory_used@@Base+0xb97c>  // b.any
  41d7e4:	cmp	w8, #0x4
  41d7e8:	mov	w8, #0x4                   	// #4
  41d7ec:	b.ne	41d998 <_obstack_memory_used@@Base+0xbb14>  // b.any
  41d7f0:	ldr	x9, [x23, #24]
  41d7f4:	cmp	x9, x20
  41d7f8:	b.ne	41d808 <_obstack_memory_used@@Base+0xb984>  // b.any
  41d7fc:	b	41d998 <_obstack_memory_used@@Base+0xbb14>
  41d800:	cmp	w8, #0x4
  41d804:	b.ne	41d9a8 <_obstack_memory_used@@Base+0xbb24>  // b.any
  41d808:	ldr	x8, [sp, #56]
  41d80c:	ldr	x24, [sp, #32]
  41d810:	ldr	x19, [sp, #16]
  41d814:	mov	w9, #0x28                  	// #40
  41d818:	ldr	x8, [x8, #216]
  41d81c:	madd	x21, x24, x9, x8
  41d820:	b	41d838 <_obstack_memory_used@@Base+0xb9b4>
  41d824:	ldrb	w8, [x21, #32]
  41d828:	add	x24, x24, #0x1
  41d82c:	add	x21, x21, #0x28
  41d830:	add	x19, x19, #0x28
  41d834:	cbz	w8, 41d994 <_obstack_memory_used@@Base+0xbb10>
  41d838:	ldr	x8, [x21]
  41d83c:	cmp	x8, x26
  41d840:	b.ne	41d8b8 <_obstack_memory_used@@Base+0xba34>  // b.any
  41d844:	ldp	x9, x8, [x21, #16]
  41d848:	subs	x8, x8, x9
  41d84c:	add	x25, x8, x20
  41d850:	b.eq	41d860 <_obstack_memory_used@@Base+0xb9dc>  // b.none
  41d854:	ldr	x8, [x22, #24]
  41d858:	add	x8, x8, x26, lsl #3
  41d85c:	b	41d870 <_obstack_memory_used@@Base+0xb9ec>
  41d860:	ldr	x8, [x22, #40]
  41d864:	mov	w9, #0x18                  	// #24
  41d868:	madd	x8, x26, x9, x8
  41d86c:	ldr	x8, [x8, #16]
  41d870:	ldr	x9, [x23, #24]
  41d874:	cmp	x25, x9
  41d878:	b.gt	41d8b8 <_obstack_memory_used@@Base+0xba34>
  41d87c:	ldr	x9, [x23]
  41d880:	ldr	x9, [x9, x25, lsl #3]
  41d884:	cbz	x9, 41d8b8 <_obstack_memory_used@@Base+0xba34>
  41d888:	ldr	x27, [x8]
  41d88c:	add	x0, x9, #0x8
  41d890:	mov	x1, x27
  41d894:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41d898:	cbz	x0, 41d8b8 <_obstack_memory_used@@Base+0xba34>
  41d89c:	ldp	x1, x0, [sp, #48]
  41d8a0:	mov	x2, x26
  41d8a4:	mov	x3, x20
  41d8a8:	mov	x4, x27
  41d8ac:	mov	x5, x25
  41d8b0:	bl	41ddc4 <_obstack_memory_used@@Base+0xbf40>
  41d8b4:	tbz	w0, #0, 41d8cc <_obstack_memory_used@@Base+0xba48>
  41d8b8:	mov	w8, #0x6                   	// #6
  41d8bc:	cmp	w8, #0x6
  41d8c0:	b.eq	41d824 <_obstack_memory_used@@Base+0xb9a0>  // b.none
  41d8c4:	cbz	w8, 41d824 <_obstack_memory_used@@Base+0xb9a0>
  41d8c8:	b	41d994 <_obstack_memory_used@@Base+0xbb10>
  41d8cc:	ldr	x8, [sp, #64]
  41d8d0:	cbnz	x8, 41d8f8 <_obstack_memory_used@@Base+0xba74>
  41d8d4:	ldr	x8, [x23, #48]
  41d8d8:	ldp	q1, q0, [x23, #16]
  41d8dc:	ldr	q2, [x23]
  41d8e0:	ldp	x0, x1, [sp, #40]
  41d8e4:	str	x8, [sp, #112]
  41d8e8:	stp	q1, q0, [sp, #80]
  41d8ec:	str	q2, [sp, #64]
  41d8f0:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41d8f4:	cbnz	w0, 41d978 <_obstack_memory_used@@Base+0xbaf4>
  41d8f8:	ldr	x0, [sp, #40]
  41d8fc:	mov	x1, x24
  41d900:	stp	x26, x20, [sp, #80]
  41d904:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41d908:	tbz	w0, #0, 41d984 <_obstack_memory_used@@Base+0xbb00>
  41d90c:	ldp	x0, x8, [sp, #56]
  41d910:	add	x1, sp, #0x40
  41d914:	ldr	x25, [x8, x20, lsl #3]
  41d918:	bl	41cf08 <_obstack_memory_used@@Base+0xb084>
  41d91c:	cbnz	w0, 41d978 <_obstack_memory_used@@Base+0xbaf4>
  41d920:	ldr	x1, [x23, #8]
  41d924:	cbz	x1, 41d93c <_obstack_memory_used@@Base+0xbab8>
  41d928:	ldr	x2, [sp, #64]
  41d92c:	ldr	x3, [sp]
  41d930:	mov	x0, x22
  41d934:	bl	41d004 <_obstack_memory_used@@Base+0xb180>
  41d938:	cbnz	w0, 41d978 <_obstack_memory_used@@Base+0xbaf4>
  41d93c:	ldr	x21, [sp, #40]
  41d940:	ldr	x8, [sp, #64]
  41d944:	str	w0, [sp, #12]
  41d948:	mov	x1, x24
  41d94c:	mov	x0, x21
  41d950:	str	x25, [x8, x20, lsl #3]
  41d954:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41d958:	sub	x1, x0, #0x1
  41d95c:	mov	x0, x21
  41d960:	bl	418bf0 <_obstack_memory_used@@Base+0x6d6c>
  41d964:	ldr	x9, [sp, #56]
  41d968:	mov	w8, wzr
  41d96c:	ldr	x9, [x9, #216]
  41d970:	add	x21, x9, x19
  41d974:	b	41d8bc <_obstack_memory_used@@Base+0xba38>
  41d978:	str	w0, [sp, #12]
  41d97c:	mov	w8, #0x7                   	// #7
  41d980:	b	41d8bc <_obstack_memory_used@@Base+0xba38>
  41d984:	mov	w8, #0xc                   	// #12
  41d988:	str	w8, [sp, #12]
  41d98c:	mov	w8, #0x7                   	// #7
  41d990:	b	41d8bc <_obstack_memory_used@@Base+0xba38>
  41d994:	ldr	x19, [sp, #24]
  41d998:	cbz	w8, 41d7b4 <_obstack_memory_used@@Base+0xb930>
  41d99c:	cmp	w8, #0x4
  41d9a0:	b.eq	41d7b4 <_obstack_memory_used@@Base+0xb930>  // b.none
  41d9a4:	b	41d9d8 <_obstack_memory_used@@Base+0xbb54>
  41d9a8:	mov	w8, #0x4                   	// #4
  41d9ac:	cbnz	w8, 41d99c <_obstack_memory_used@@Base+0xbb18>
  41d9b0:	b	41d7b4 <_obstack_memory_used@@Base+0xb930>
  41d9b4:	str	wzr, [sp, #12]
  41d9b8:	ldr	x8, [sp, #64]
  41d9bc:	cbz	x8, 41d9c8 <_obstack_memory_used@@Base+0xbb44>
  41d9c0:	ldr	x0, [sp, #112]
  41d9c4:	bl	402bd0 <free@plt>
  41d9c8:	ldr	w0, [sp, #12]
  41d9cc:	b	41d9e0 <_obstack_memory_used@@Base+0xbb5c>
  41d9d0:	mov	w0, wzr
  41d9d4:	b	41d9e0 <_obstack_memory_used@@Base+0xbb5c>
  41d9d8:	cmp	w8, #0x7
  41d9dc:	b.eq	41d9b8 <_obstack_memory_used@@Base+0xbb34>  // b.none
  41d9e0:	ldp	x20, x19, [sp, #208]
  41d9e4:	ldp	x22, x21, [sp, #192]
  41d9e8:	ldp	x24, x23, [sp, #176]
  41d9ec:	ldp	x26, x25, [sp, #160]
  41d9f0:	ldp	x28, x27, [sp, #144]
  41d9f4:	ldp	x29, x30, [sp, #128]
  41d9f8:	add	sp, sp, #0xe0
  41d9fc:	ret
  41da00:	stp	x29, x30, [sp, #-48]!
  41da04:	stp	x22, x21, [sp, #16]
  41da08:	stp	x20, x19, [sp, #32]
  41da0c:	ldr	x8, [x1, #8]
  41da10:	mov	x29, sp
  41da14:	cbz	x8, 41dba4 <_obstack_memory_used@@Base+0xbd20>
  41da18:	ldr	x10, [x2, #8]
  41da1c:	mov	x20, x2
  41da20:	cbz	x10, 41dba4 <_obstack_memory_used@@Base+0xbd20>
  41da24:	ldp	x9, x11, [x0]
  41da28:	add	x8, x10, x8
  41da2c:	mov	x21, x1
  41da30:	mov	x19, x0
  41da34:	add	x10, x11, x8
  41da38:	cmp	x10, x9
  41da3c:	b.le	41da5c <_obstack_memory_used@@Base+0xbbd8>
  41da40:	ldr	x0, [x19, #16]
  41da44:	add	x22, x9, x8
  41da48:	lsl	x1, x22, #3
  41da4c:	bl	402a40 <realloc@plt>
  41da50:	cbz	x0, 41dbb8 <_obstack_memory_used@@Base+0xbd34>
  41da54:	str	x0, [x19, #16]
  41da58:	str	x22, [x19]
  41da5c:	ldr	x13, [x19, #8]
  41da60:	ldp	x8, x9, [x21, #8]
  41da64:	ldp	x14, x10, [x20, #8]
  41da68:	add	x15, x8, x13
  41da6c:	sub	x12, x8, #0x1
  41da70:	sub	x11, x14, #0x1
  41da74:	add	x8, x15, x14
  41da78:	sub	x13, x13, #0x1
  41da7c:	ldr	x14, [x9, x12, lsl #3]
  41da80:	ldr	x15, [x10, x11, lsl #3]
  41da84:	cmp	x14, x15
  41da88:	b.eq	41daa0 <_obstack_memory_used@@Base+0xbc1c>  // b.none
  41da8c:	b.lt	41dafc <_obstack_memory_used@@Base+0xbc78>  // b.tstop
  41da90:	cmp	x12, #0x0
  41da94:	sub	x12, x12, #0x1
  41da98:	b.gt	41da7c <_obstack_memory_used@@Base+0xbbf8>
  41da9c:	b	41db04 <_obstack_memory_used@@Base+0xbc80>
  41daa0:	tbnz	x13, #63, 41dac8 <_obstack_memory_used@@Base+0xbc44>
  41daa4:	ldr	x15, [x19, #16]
  41daa8:	mov	x16, x13
  41daac:	ldr	x13, [x15, x16, lsl #3]
  41dab0:	cmp	x13, x14
  41dab4:	b.le	41dad0 <_obstack_memory_used@@Base+0xbc4c>
  41dab8:	sub	x13, x16, #0x1
  41dabc:	cmp	x16, #0x0
  41dac0:	mov	x16, x13
  41dac4:	b.gt	41daac <_obstack_memory_used@@Base+0xbc28>
  41dac8:	tbz	x13, #63, 41dad8 <_obstack_memory_used@@Base+0xbc54>
  41dacc:	b	41dae8 <_obstack_memory_used@@Base+0xbc64>
  41dad0:	mov	x13, x16
  41dad4:	tbnz	x13, #63, 41dae8 <_obstack_memory_used@@Base+0xbc64>
  41dad8:	ldr	x15, [x19, #16]
  41dadc:	ldr	x15, [x15, x13, lsl #3]
  41dae0:	cmp	x15, x14
  41dae4:	b.eq	41daf4 <_obstack_memory_used@@Base+0xbc70>  // b.none
  41dae8:	ldr	x15, [x19, #16]
  41daec:	sub	x8, x8, #0x1
  41daf0:	str	x14, [x15, x8, lsl #3]
  41daf4:	subs	x12, x12, #0x1
  41daf8:	b.lt	41db04 <_obstack_memory_used@@Base+0xbc80>  // b.tstop
  41dafc:	subs	x11, x11, #0x1
  41db00:	b.ge	41da7c <_obstack_memory_used@@Base+0xbbf8>  // b.tcont
  41db04:	ldr	x13, [x19, #8]
  41db08:	ldr	x14, [x21, #8]
  41db0c:	ldr	x15, [x20, #8]
  41db10:	subs	x11, x13, #0x1
  41db14:	add	x9, x13, x14
  41db18:	add	x9, x9, x15
  41db1c:	sub	x10, x9, #0x1
  41db20:	sub	x12, x10, x8
  41db24:	add	x9, x12, #0x1
  41db28:	add	x16, x9, x13
  41db2c:	str	x16, [x19, #8]
  41db30:	b.lt	41db90 <_obstack_memory_used@@Base+0xbd0c>  // b.tstop
  41db34:	tbnz	x12, #63, 41db90 <_obstack_memory_used@@Base+0xbd0c>
  41db38:	ldr	x12, [x19, #16]
  41db3c:	add	x13, x13, x15
  41db40:	add	x13, x13, x14
  41db44:	sub	x13, x13, x8
  41db48:	add	x13, x12, x13, lsl #3
  41db4c:	ldr	x15, [x12, x10, lsl #3]
  41db50:	ldr	x14, [x12, x11, lsl #3]
  41db54:	cmp	x15, x14
  41db58:	b.gt	41db74 <_obstack_memory_used@@Base+0xbcf0>
  41db5c:	sub	x15, x11, #0x1
  41db60:	cmp	x11, #0x0
  41db64:	str	x14, [x13, x11, lsl #3]
  41db68:	mov	x11, x15
  41db6c:	b.gt	41db4c <_obstack_memory_used@@Base+0xbcc8>
  41db70:	b	41db90 <_obstack_memory_used@@Base+0xbd0c>
  41db74:	mov	x14, xzr
  41db78:	sub	x10, x10, #0x1
  41db7c:	sub	x9, x9, #0x1
  41db80:	str	x15, [x13, x11, lsl #3]
  41db84:	sub	x13, x13, #0x8
  41db88:	cbnz	x9, 41db4c <_obstack_memory_used@@Base+0xbcc8>
  41db8c:	b	41db94 <_obstack_memory_used@@Base+0xbd10>
  41db90:	mov	x14, x9
  41db94:	ldr	x0, [x19, #16]
  41db98:	lsl	x2, x14, #3
  41db9c:	add	x1, x0, x8, lsl #3
  41dba0:	bl	402710 <memcpy@plt>
  41dba4:	mov	w0, wzr
  41dba8:	ldp	x20, x19, [sp, #32]
  41dbac:	ldp	x22, x21, [sp, #16]
  41dbb0:	ldp	x29, x30, [sp], #48
  41dbb4:	ret
  41dbb8:	mov	w0, #0xc                   	// #12
  41dbbc:	b	41dba8 <_obstack_memory_used@@Base+0xbd24>
  41dbc0:	sub	sp, sp, #0x90
  41dbc4:	stp	x29, x30, [sp, #48]
  41dbc8:	stp	x28, x27, [sp, #64]
  41dbcc:	stp	x26, x25, [sp, #80]
  41dbd0:	stp	x24, x23, [sp, #96]
  41dbd4:	stp	x22, x21, [sp, #112]
  41dbd8:	stp	x20, x19, [sp, #128]
  41dbdc:	ldr	x9, [x0, #56]
  41dbe0:	mov	w8, #0x18                  	// #24
  41dbe4:	stp	xzr, xzr, [sp, #24]
  41dbe8:	str	xzr, [sp, #40]
  41dbec:	madd	x23, x1, x8, x9
  41dbf0:	stp	x3, x9, [sp, #8]
  41dbf4:	mov	x27, x23
  41dbf8:	ldr	x8, [x27, #8]!
  41dbfc:	mov	x20, x1
  41dc00:	mov	x19, x2
  41dc04:	add	x29, sp, #0x30
  41dc08:	cmp	x8, #0x1
  41dc0c:	b.lt	41dd28 <_obstack_memory_used@@Base+0xbea4>  // b.tstop
  41dc10:	ldr	x8, [sp, #16]
  41dc14:	mov	w9, #0x18                  	// #24
  41dc18:	mov	x22, x0
  41dc1c:	mov	x21, xzr
  41dc20:	madd	x8, x20, x9, x8
  41dc24:	add	x24, x8, #0x10
  41dc28:	ldr	x8, [x24]
  41dc2c:	ldr	x28, [x8, x21, lsl #3]
  41dc30:	cmp	x28, x20
  41dc34:	b.ne	41dc40 <_obstack_memory_used@@Base+0xbdbc>  // b.any
  41dc38:	mov	w8, #0x4                   	// #4
  41dc3c:	b	41dcec <_obstack_memory_used@@Base+0xbe68>
  41dc40:	ldr	x8, [x22]
  41dc44:	add	x8, x8, x28, lsl #4
  41dc48:	ldrb	w8, [x8, #8]
  41dc4c:	tbz	w8, #3, 41dce8 <_obstack_memory_used@@Base+0xbe64>
  41dc50:	ldr	x8, [x22, #40]
  41dc54:	mov	w9, #0x18                  	// #24
  41dc58:	madd	x9, x28, x9, x8
  41dc5c:	ldp	x9, x8, [x9, #8]
  41dc60:	ldr	x26, [x8]
  41dc64:	cmp	x9, #0x2
  41dc68:	b.lt	41dc74 <_obstack_memory_used@@Base+0xbdf0>  // b.tstop
  41dc6c:	ldr	x25, [x8, #8]
  41dc70:	b	41dc78 <_obstack_memory_used@@Base+0xbdf4>
  41dc74:	mov	x25, #0xffffffffffffffff    	// #-1
  41dc78:	mov	x0, x23
  41dc7c:	mov	x1, x26
  41dc80:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41dc84:	cbz	x0, 41dcb4 <_obstack_memory_used@@Base+0xbe30>
  41dc88:	cmp	x25, #0x1
  41dc8c:	b.lt	41dce0 <_obstack_memory_used@@Base+0xbe5c>  // b.tstop
  41dc90:	mov	x0, x23
  41dc94:	mov	x1, x25
  41dc98:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41dc9c:	cbnz	x0, 41dce0 <_obstack_memory_used@@Base+0xbe5c>
  41dca0:	mov	x0, x19
  41dca4:	mov	x1, x25
  41dca8:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41dcac:	cbnz	x0, 41dcc4 <_obstack_memory_used@@Base+0xbe40>
  41dcb0:	b	41dce0 <_obstack_memory_used@@Base+0xbe5c>
  41dcb4:	mov	x0, x19
  41dcb8:	mov	x1, x26
  41dcbc:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41dcc0:	cbz	x0, 41dc88 <_obstack_memory_used@@Base+0xbe04>
  41dcc4:	ldr	x8, [x22, #56]
  41dcc8:	ldr	x1, [sp, #8]
  41dccc:	mov	w9, #0x18                  	// #24
  41dcd0:	add	x0, sp, #0x18
  41dcd4:	madd	x2, x28, x9, x8
  41dcd8:	bl	41da00 <_obstack_memory_used@@Base+0xbb7c>
  41dcdc:	cbnz	w0, 41dd0c <_obstack_memory_used@@Base+0xbe88>
  41dce0:	mov	w8, wzr
  41dce4:	cbnz	w8, 41dcec <_obstack_memory_used@@Base+0xbe68>
  41dce8:	mov	w8, wzr
  41dcec:	orr	w8, w8, #0x4
  41dcf0:	cmp	w8, #0x4
  41dcf4:	b.ne	41dda0 <_obstack_memory_used@@Base+0xbf1c>  // b.any
  41dcf8:	ldr	x8, [x27]
  41dcfc:	add	x21, x21, #0x1
  41dd00:	cmp	x21, x8
  41dd04:	b.lt	41dc28 <_obstack_memory_used@@Base+0xbda4>  // b.tstop
  41dd08:	b	41dd28 <_obstack_memory_used@@Base+0xbea4>
  41dd0c:	mov	w25, w0
  41dd10:	ldr	x0, [sp, #40]
  41dd14:	bl	402bd0 <free@plt>
  41dd18:	mov	w8, #0x1                   	// #1
  41dd1c:	str	w25, [sp, #4]
  41dd20:	cbnz	w8, 41dcec <_obstack_memory_used@@Base+0xbe68>
  41dd24:	b	41dce8 <_obstack_memory_used@@Base+0xbe64>
  41dd28:	ldr	x8, [x27]
  41dd2c:	cmp	x8, #0x1
  41dd30:	b.lt	41dd90 <_obstack_memory_used@@Base+0xbf0c>  // b.tstop
  41dd34:	ldr	x9, [sp, #16]
  41dd38:	mov	w8, #0x18                  	// #24
  41dd3c:	mov	x21, xzr
  41dd40:	madd	x8, x20, x8, x9
  41dd44:	add	x22, x8, #0x10
  41dd48:	b	41dd5c <_obstack_memory_used@@Base+0xbed8>
  41dd4c:	ldr	x8, [x27]
  41dd50:	add	x21, x21, #0x1
  41dd54:	cmp	x21, x8
  41dd58:	b.ge	41dd90 <_obstack_memory_used@@Base+0xbf0c>  // b.tcont
  41dd5c:	ldr	x8, [x22]
  41dd60:	add	x0, sp, #0x18
  41dd64:	ldr	x20, [x8, x21, lsl #3]
  41dd68:	mov	x1, x20
  41dd6c:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41dd70:	cbnz	x0, 41dd4c <_obstack_memory_used@@Base+0xbec8>
  41dd74:	mov	x0, x19
  41dd78:	mov	x1, x20
  41dd7c:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41dd80:	sub	x1, x0, #0x1
  41dd84:	mov	x0, x19
  41dd88:	bl	418bf0 <_obstack_memory_used@@Base+0x6d6c>
  41dd8c:	b	41dd4c <_obstack_memory_used@@Base+0xbec8>
  41dd90:	ldr	x0, [sp, #40]
  41dd94:	bl	402bd0 <free@plt>
  41dd98:	mov	w0, wzr
  41dd9c:	b	41dda4 <_obstack_memory_used@@Base+0xbf20>
  41dda0:	ldr	w0, [sp, #4]
  41dda4:	ldp	x20, x19, [sp, #128]
  41dda8:	ldp	x22, x21, [sp, #112]
  41ddac:	ldp	x24, x23, [sp, #96]
  41ddb0:	ldp	x26, x25, [sp, #80]
  41ddb4:	ldp	x28, x27, [sp, #64]
  41ddb8:	ldp	x29, x30, [sp, #48]
  41ddbc:	add	sp, sp, #0x90
  41ddc0:	ret
  41ddc4:	sub	sp, sp, #0x70
  41ddc8:	stp	x24, x23, [sp, #64]
  41ddcc:	mov	x23, x1
  41ddd0:	mov	x1, x3
  41ddd4:	stp	x29, x30, [sp, #16]
  41ddd8:	stp	x28, x27, [sp, #32]
  41dddc:	stp	x26, x25, [sp, #48]
  41dde0:	stp	x22, x21, [sp, #80]
  41dde4:	stp	x20, x19, [sp, #96]
  41dde8:	add	x29, sp, #0x10
  41ddec:	mov	x19, x5
  41ddf0:	stp	x2, x4, [sp]
  41ddf4:	mov	x21, x3
  41ddf8:	mov	x24, x0
  41ddfc:	bl	41ae0c <_obstack_memory_used@@Base+0x8f88>
  41de00:	mov	x25, x0
  41de04:	mov	x0, x24
  41de08:	mov	x1, x19
  41de0c:	bl	41ae0c <_obstack_memory_used@@Base+0x8f88>
  41de10:	ldr	x8, [x23, #8]
  41de14:	cmp	x8, #0x1
  41de18:	b.lt	41dea4 <_obstack_memory_used@@Base+0xc020>  // b.tstop
  41de1c:	ldr	x22, [x24, #152]
  41de20:	mov	x26, x0
  41de24:	mov	x20, xzr
  41de28:	ldr	x8, [x23, #16]
  41de2c:	lsl	x28, x20, #3
  41de30:	mov	w9, #0x28                  	// #40
  41de34:	ldr	x3, [sp]
  41de38:	ldr	x1, [x8, x28]
  41de3c:	ldr	x8, [x24, #216]
  41de40:	mov	x0, x24
  41de44:	mov	x4, x21
  41de48:	mul	x9, x1, x9
  41de4c:	ldr	x8, [x8, x9]
  41de50:	ldr	x9, [x22]
  41de54:	mov	x5, x25
  41de58:	lsl	x8, x8, #4
  41de5c:	ldr	x27, [x9, x8]
  41de60:	mov	x2, x27
  41de64:	bl	41ded0 <_obstack_memory_used@@Base+0xc04c>
  41de68:	ldr	x8, [x23, #16]
  41de6c:	ldr	x3, [sp, #8]
  41de70:	mov	x2, x27
  41de74:	mov	x4, x19
  41de78:	ldr	x1, [x8, x28]
  41de7c:	mov	w28, w0
  41de80:	mov	x0, x24
  41de84:	mov	x5, x26
  41de88:	bl	41ded0 <_obstack_memory_used@@Base+0xc04c>
  41de8c:	cmp	w0, w28
  41de90:	b.ne	41deac <_obstack_memory_used@@Base+0xc028>  // b.any
  41de94:	ldr	x8, [x23, #8]
  41de98:	add	x20, x20, #0x1
  41de9c:	cmp	x20, x8
  41dea0:	b.lt	41de28 <_obstack_memory_used@@Base+0xbfa4>  // b.tstop
  41dea4:	mov	w0, wzr
  41dea8:	b	41deb0 <_obstack_memory_used@@Base+0xc02c>
  41deac:	mov	w0, #0x1                   	// #1
  41deb0:	ldp	x20, x19, [sp, #96]
  41deb4:	ldp	x22, x21, [sp, #80]
  41deb8:	ldp	x24, x23, [sp, #64]
  41debc:	ldp	x26, x25, [sp, #48]
  41dec0:	ldp	x28, x27, [sp, #32]
  41dec4:	ldp	x29, x30, [sp, #16]
  41dec8:	add	sp, sp, #0x70
  41decc:	ret
  41ded0:	stp	x29, x30, [sp, #-16]!
  41ded4:	ldr	x9, [x0, #216]
  41ded8:	mov	w8, #0x28                  	// #40
  41dedc:	mov	x29, sp
  41dee0:	madd	x8, x1, x8, x9
  41dee4:	ldr	x8, [x8, #16]
  41dee8:	cmp	x8, x4
  41deec:	b.le	41defc <_obstack_memory_used@@Base+0xc078>
  41def0:	mov	w0, #0xffffffff            	// #-1
  41def4:	ldp	x29, x30, [sp], #16
  41def8:	ret
  41defc:	mov	w10, #0x28                  	// #40
  41df00:	madd	x9, x1, x10, x9
  41df04:	ldr	x9, [x9, #24]
  41df08:	cmp	x9, x4
  41df0c:	b.ge	41df1c <_obstack_memory_used@@Base+0xc098>  // b.tcont
  41df10:	mov	w0, #0x1                   	// #1
  41df14:	ldp	x29, x30, [sp], #16
  41df18:	ret
  41df1c:	cmp	x8, x4
  41df20:	cset	w1, eq  // eq = none
  41df24:	cmp	x9, x4
  41df28:	cset	w8, eq  // eq = none
  41df2c:	bfi	w1, w8, #1, #1
  41df30:	cbz	w1, 41df44 <_obstack_memory_used@@Base+0xc0c0>
  41df34:	mov	x4, x5
  41df38:	bl	41df50 <_obstack_memory_used@@Base+0xc0cc>
  41df3c:	ldp	x29, x30, [sp], #16
  41df40:	ret
  41df44:	mov	w0, wzr
  41df48:	ldp	x29, x30, [sp], #16
  41df4c:	ret
  41df50:	sub	sp, sp, #0x90
  41df54:	stp	x29, x30, [sp, #48]
  41df58:	stp	x28, x27, [sp, #64]
  41df5c:	stp	x26, x25, [sp, #80]
  41df60:	stp	x24, x23, [sp, #96]
  41df64:	stp	x22, x21, [sp, #112]
  41df68:	stp	x20, x19, [sp, #128]
  41df6c:	ldr	x25, [x0, #152]
  41df70:	add	x29, sp, #0x30
  41df74:	mov	w9, #0x18                  	// #24
  41df78:	stur	x0, [x29, #-8]
  41df7c:	ldr	x8, [x25, #48]
  41df80:	madd	x26, x3, x9, x8
  41df84:	ldr	x9, [x26, #8]!
  41df88:	cmp	x9, #0x1
  41df8c:	ubfx	w9, w1, #1, #1
  41df90:	str	w9, [sp, #24]
  41df94:	b.lt	41e194 <_obstack_memory_used@@Base+0xc310>  // b.tstop
  41df98:	mov	w11, #0x18                  	// #24
  41df9c:	madd	x8, x3, x11, x8
  41dfa0:	add	x12, x8, #0x10
  41dfa4:	ldr	w8, [sp, #24]
  41dfa8:	and	w10, w1, #0x2
  41dfac:	cmp	x2, #0x3f
  41dfb0:	str	w10, [sp, #20]
  41dfb4:	sbfx	w10, w1, #0, #1
  41dfb8:	mov	w9, #0x1                   	// #1
  41dfbc:	stur	w10, [x29, #-20]
  41dfc0:	cset	w10, gt
  41dfc4:	lsl	x9, x9, x2
  41dfc8:	orr	w8, w8, w10
  41dfcc:	str	w8, [sp, #16]
  41dfd0:	mvn	w8, w9
  41dfd4:	mov	x20, x3
  41dfd8:	mov	x21, x2
  41dfdc:	mov	w22, w1
  41dfe0:	mov	x28, xzr
  41dfe4:	stur	x9, [x29, #-16]
  41dfe8:	str	w8, [sp, #12]
  41dfec:	str	x12, [sp]
  41dff0:	b	41e00c <_obstack_memory_used@@Base+0xc188>
  41dff4:	mov	w8, wzr
  41dff8:	cbnz	wzr, 41e198 <_obstack_memory_used@@Base+0xc314>
  41dffc:	ldr	x8, [x26]
  41e000:	add	x28, x28, #0x1
  41e004:	cmp	x28, x8
  41e008:	b.ge	41e194 <_obstack_memory_used@@Base+0xc310>  // b.tcont
  41e00c:	ldr	x8, [x12]
  41e010:	ldr	x23, [x8, x28, lsl #3]
  41e014:	ldr	x8, [x25]
  41e018:	add	x8, x8, x23, lsl #4
  41e01c:	ldrb	w9, [x8, #8]
  41e020:	cmp	w9, #0x9
  41e024:	b.eq	41e148 <_obstack_memory_used@@Base+0xc2c4>  // b.none
  41e028:	cmp	w9, #0x8
  41e02c:	b.eq	41e164 <_obstack_memory_used@@Base+0xc2e0>  // b.none
  41e030:	cmp	w9, #0x4
  41e034:	b.ne	41dff4 <_obstack_memory_used@@Base+0xc170>  // b.any
  41e038:	cmn	x4, #0x1
  41e03c:	b.eq	41dff4 <_obstack_memory_used@@Base+0xc170>  // b.none
  41e040:	ldur	x8, [x29, #-8]
  41e044:	mov	w9, #0x28                  	// #40
  41e048:	ldr	x8, [x8, #216]
  41e04c:	madd	x8, x4, x9, x8
  41e050:	add	x19, x8, #0x22
  41e054:	b	41e064 <_obstack_memory_used@@Base+0xc1e0>
  41e058:	ldurb	w8, [x19, #-2]
  41e05c:	add	x19, x19, #0x28
  41e060:	cbz	w8, 41e184 <_obstack_memory_used@@Base+0xc300>
  41e064:	ldur	x8, [x19, #-34]
  41e068:	cmp	x8, x23
  41e06c:	b.ne	41e0ac <_obstack_memory_used@@Base+0xc228>  // b.any
  41e070:	cmp	x21, #0x3f
  41e074:	b.gt	41e088 <_obstack_memory_used@@Base+0xc204>
  41e078:	ldrh	w8, [x19]
  41e07c:	ldur	x9, [x29, #-16]
  41e080:	tst	x9, x8
  41e084:	b.eq	41e0ac <_obstack_memory_used@@Base+0xc228>  // b.none
  41e088:	ldr	x8, [x25, #40]
  41e08c:	madd	x8, x23, x11, x8
  41e090:	ldr	x8, [x8, #16]
  41e094:	ldr	x3, [x8]
  41e098:	cmp	x3, x20
  41e09c:	b.ne	41e0c0 <_obstack_memory_used@@Base+0xc23c>  // b.any
  41e0a0:	ldur	w24, [x29, #-20]
  41e0a4:	mov	w8, #0x1                   	// #1
  41e0a8:	b	41e0b0 <_obstack_memory_used@@Base+0xc22c>
  41e0ac:	mov	w8, #0x7                   	// #7
  41e0b0:	cmp	w8, #0x7
  41e0b4:	b.eq	41e058 <_obstack_memory_used@@Base+0xc1d4>  // b.none
  41e0b8:	cbz	w8, 41e058 <_obstack_memory_used@@Base+0xc1d4>
  41e0bc:	b	41e184 <_obstack_memory_used@@Base+0xc300>
  41e0c0:	ldur	x0, [x29, #-8]
  41e0c4:	mov	w1, w22
  41e0c8:	mov	x2, x21
  41e0cc:	mov	x27, x4
  41e0d0:	bl	41df50 <_obstack_memory_used@@Base+0xc0cc>
  41e0d4:	cmn	w0, #0x1
  41e0d8:	b.eq	41e104 <_obstack_memory_used@@Base+0xc280>  // b.none
  41e0dc:	cbnz	w0, 41e118 <_obstack_memory_used@@Base+0xc294>
  41e0e0:	ldp	w9, w8, [sp, #16]
  41e0e4:	mov	x4, x27
  41e0e8:	mov	w11, #0x18                  	// #24
  41e0ec:	cmp	w8, #0x0
  41e0f0:	csel	w8, wzr, w24, ne  // ne = any
  41e0f4:	tbz	w9, #0, 41e128 <_obstack_memory_used@@Base+0xc2a4>
  41e0f8:	mov	w24, w8
  41e0fc:	ldr	w8, [sp, #24]
  41e100:	b	41e0b0 <_obstack_memory_used@@Base+0xc22c>
  41e104:	mov	w8, #0x1                   	// #1
  41e108:	mov	w24, w0
  41e10c:	mov	x4, x27
  41e110:	mov	w11, #0x18                  	// #24
  41e114:	b	41e0b0 <_obstack_memory_used@@Base+0xc22c>
  41e118:	cmp	x21, #0x3f
  41e11c:	mov	x4, x27
  41e120:	mov	w11, #0x18                  	// #24
  41e124:	b.gt	41e140 <_obstack_memory_used@@Base+0xc2bc>
  41e128:	ldrh	w9, [x19]
  41e12c:	ldr	w10, [sp, #12]
  41e130:	mov	w8, wzr
  41e134:	and	w9, w9, w10
  41e138:	strh	w9, [x19]
  41e13c:	b	41e0b0 <_obstack_memory_used@@Base+0xc22c>
  41e140:	mov	w8, wzr
  41e144:	b	41e0b0 <_obstack_memory_used@@Base+0xc22c>
  41e148:	tbz	w22, #1, 41dff4 <_obstack_memory_used@@Base+0xc170>
  41e14c:	ldr	x8, [x8]
  41e150:	cmp	x8, x21
  41e154:	b.ne	41dff4 <_obstack_memory_used@@Base+0xc170>  // b.any
  41e158:	mov	w24, wzr
  41e15c:	mov	w8, #0x1                   	// #1
  41e160:	b	41e18c <_obstack_memory_used@@Base+0xc308>
  41e164:	tbz	w22, #0, 41dff4 <_obstack_memory_used@@Base+0xc170>
  41e168:	ldr	x8, [x8]
  41e16c:	cmp	x8, x21
  41e170:	b.ne	41dff4 <_obstack_memory_used@@Base+0xc170>  // b.any
  41e174:	mov	w8, #0x1                   	// #1
  41e178:	mov	w24, #0xffffffff            	// #-1
  41e17c:	cbz	w8, 41dffc <_obstack_memory_used@@Base+0xc178>
  41e180:	b	41e198 <_obstack_memory_used@@Base+0xc314>
  41e184:	ldr	x12, [sp]
  41e188:	cbz	w8, 41dff4 <_obstack_memory_used@@Base+0xc170>
  41e18c:	cbz	w8, 41dffc <_obstack_memory_used@@Base+0xc178>
  41e190:	b	41e198 <_obstack_memory_used@@Base+0xc314>
  41e194:	ldr	w24, [sp, #24]
  41e198:	mov	w0, w24
  41e19c:	ldp	x20, x19, [sp, #128]
  41e1a0:	ldp	x22, x21, [sp, #112]
  41e1a4:	ldp	x24, x23, [sp, #96]
  41e1a8:	ldp	x26, x25, [sp, #80]
  41e1ac:	ldp	x28, x27, [sp, #64]
  41e1b0:	ldp	x29, x30, [sp, #48]
  41e1b4:	add	sp, sp, #0x90
  41e1b8:	ret
  41e1bc:	stp	x29, x30, [sp, #-64]!
  41e1c0:	stp	x24, x23, [sp, #16]
  41e1c4:	stp	x22, x21, [sp, #32]
  41e1c8:	stp	x20, x19, [sp, #48]
  41e1cc:	ldr	x21, [x0, #152]
  41e1d0:	mov	x20, x2
  41e1d4:	mov	x2, x0
  41e1d8:	mov	x23, x1
  41e1dc:	mov	x0, x21
  41e1e0:	mov	x1, x20
  41e1e4:	mov	x29, sp
  41e1e8:	mov	x22, x4
  41e1ec:	mov	x24, x3
  41e1f0:	bl	41bde8 <_obstack_memory_used@@Base+0x9f64>
  41e1f4:	mov	w19, w0
  41e1f8:	cmp	w0, #0x1
  41e1fc:	b.lt	41e230 <_obstack_memory_used@@Base+0xc3ac>  // b.tstop
  41e200:	add	x8, x24, w19, sxtw
  41e204:	cmp	x8, x22
  41e208:	b.gt	41e230 <_obstack_memory_used@@Base+0xc3ac>
  41e20c:	ldr	x9, [x23]
  41e210:	ldr	x8, [x9, x8, lsl #3]
  41e214:	cbz	x8, 41e22c <_obstack_memory_used@@Base+0xc3a8>
  41e218:	ldr	x9, [x21, #24]
  41e21c:	add	x0, x8, #0x8
  41e220:	ldr	x1, [x9, x20, lsl #3]
  41e224:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41e228:	cbnz	x0, 41e230 <_obstack_memory_used@@Base+0xc3ac>
  41e22c:	mov	w19, wzr
  41e230:	mov	w0, w19
  41e234:	ldp	x20, x19, [sp, #48]
  41e238:	ldp	x22, x21, [sp, #32]
  41e23c:	ldp	x24, x23, [sp, #16]
  41e240:	ldp	x29, x30, [sp], #64
  41e244:	ret
  41e248:	cbz	x0, 41e2bc <_obstack_memory_used@@Base+0xc438>
  41e24c:	stp	x29, x30, [sp, #-48]!
  41e250:	stp	x20, x19, [sp, #32]
  41e254:	ldr	x8, [x0]
  41e258:	mov	x19, x0
  41e25c:	ldr	x0, [x0, #16]
  41e260:	str	x21, [sp, #16]
  41e264:	cmp	x8, #0x1
  41e268:	mov	x29, sp
  41e26c:	b.lt	41e2ac <_obstack_memory_used@@Base+0xc428>  // b.tstop
  41e270:	mov	x20, xzr
  41e274:	mov	x21, xzr
  41e278:	add	x8, x0, x20
  41e27c:	ldr	x0, [x8, #40]
  41e280:	bl	402bd0 <free@plt>
  41e284:	ldr	x8, [x19, #16]
  41e288:	add	x8, x8, x20
  41e28c:	ldr	x0, [x8, #16]
  41e290:	bl	402bd0 <free@plt>
  41e294:	ldr	x8, [x19]
  41e298:	ldr	x0, [x19, #16]
  41e29c:	add	x21, x21, #0x1
  41e2a0:	add	x20, x20, #0x30
  41e2a4:	cmp	x21, x8
  41e2a8:	b.lt	41e278 <_obstack_memory_used@@Base+0xc3f4>  // b.tstop
  41e2ac:	bl	402bd0 <free@plt>
  41e2b0:	ldp	x20, x19, [sp, #32]
  41e2b4:	ldr	x21, [sp, #16]
  41e2b8:	ldp	x29, x30, [sp], #48
  41e2bc:	ret
  41e2c0:	stp	x29, x30, [sp, #-16]!
  41e2c4:	ldr	x8, [x0]
  41e2c8:	mov	x29, sp
  41e2cc:	add	x8, x8, x3, lsl #4
  41e2d0:	ldr	w9, [x8, #8]
  41e2d4:	and	w10, w9, #0xff
  41e2d8:	cmp	w10, #0x9
  41e2dc:	b.eq	41e30c <_obstack_memory_used@@Base+0xc488>  // b.none
  41e2e0:	cmp	w10, #0x8
  41e2e4:	b.ne	41e374 <_obstack_memory_used@@Base+0xc4f0>  // b.any
  41e2e8:	ldr	x8, [x8]
  41e2ec:	add	x8, x8, #0x1
  41e2f0:	cmp	x8, x5
  41e2f4:	b.ge	41e374 <_obstack_memory_used@@Base+0xc4f0>  // b.tcont
  41e2f8:	add	x8, x1, x8, lsl #4
  41e2fc:	mov	x9, #0xffffffffffffffff    	// #-1
  41e300:	stp	x4, x9, [x8]
  41e304:	ldp	x29, x30, [sp], #16
  41e308:	ret
  41e30c:	ldr	x8, [x8]
  41e310:	add	x8, x8, #0x1
  41e314:	cmp	x8, x5
  41e318:	b.ge	41e374 <_obstack_memory_used@@Base+0xc4f0>  // b.tcont
  41e31c:	lsl	x10, x8, #4
  41e320:	ldr	x11, [x1, x10]
  41e324:	cmp	x11, x4
  41e328:	b.ge	41e340 <_obstack_memory_used@@Base+0xc4bc>  // b.tcont
  41e32c:	add	x8, x1, x8, lsl #4
  41e330:	str	x4, [x8, #8]
  41e334:	lsl	x8, x5, #4
  41e338:	mov	x0, x2
  41e33c:	b	41e35c <_obstack_memory_used@@Base+0xc4d8>
  41e340:	tbz	w9, #19, 41e36c <_obstack_memory_used@@Base+0xc4e8>
  41e344:	ldr	x9, [x2, x10]
  41e348:	cmn	x9, #0x1
  41e34c:	b.eq	41e36c <_obstack_memory_used@@Base+0xc4e8>  // b.none
  41e350:	lsl	x8, x5, #4
  41e354:	mov	x0, x1
  41e358:	mov	x1, x2
  41e35c:	mov	x2, x8
  41e360:	bl	402710 <memcpy@plt>
  41e364:	ldp	x29, x30, [sp], #16
  41e368:	ret
  41e36c:	add	x8, x1, x8, lsl #4
  41e370:	str	x4, [x8, #8]
  41e374:	ldp	x29, x30, [sp], #16
  41e378:	ret
  41e37c:	stp	x29, x30, [sp, #-48]!
  41e380:	stp	x20, x19, [sp, #32]
  41e384:	ldr	x8, [x0]
  41e388:	ldr	x9, [x0, #16]
  41e38c:	str	x21, [sp, #16]
  41e390:	mov	x20, x0
  41e394:	sub	x8, x8, #0x1
  41e398:	str	x8, [x0]
  41e39c:	add	x8, x8, x8, lsl #1
  41e3a0:	lsl	x21, x8, #4
  41e3a4:	add	x8, x9, x21
  41e3a8:	ldr	x9, [x8]
  41e3ac:	lsl	x2, x2, #4
  41e3b0:	mov	x0, x3
  41e3b4:	mov	x29, sp
  41e3b8:	str	x9, [x1]
  41e3bc:	ldr	x1, [x8, #16]
  41e3c0:	mov	x19, x4
  41e3c4:	bl	402710 <memcpy@plt>
  41e3c8:	ldr	x0, [x19, #16]
  41e3cc:	bl	402bd0 <free@plt>
  41e3d0:	ldr	x8, [x20, #16]
  41e3d4:	add	x8, x8, x21
  41e3d8:	ldr	x0, [x8, #16]
  41e3dc:	bl	402bd0 <free@plt>
  41e3e0:	ldr	x8, [x20, #16]
  41e3e4:	add	x8, x8, x21
  41e3e8:	ldr	x9, [x8, #40]
  41e3ec:	ldur	q0, [x8, #24]
  41e3f0:	str	x9, [x19, #16]
  41e3f4:	str	q0, [x19]
  41e3f8:	ldr	x8, [x20, #16]
  41e3fc:	ldp	x20, x19, [sp, #32]
  41e400:	add	x8, x8, x21
  41e404:	ldr	x0, [x8, #8]
  41e408:	ldr	x21, [sp, #16]
  41e40c:	ldp	x29, x30, [sp], #48
  41e410:	ret
  41e414:	sub	sp, sp, #0x70
  41e418:	stp	x29, x30, [sp, #16]
  41e41c:	stp	x28, x27, [sp, #32]
  41e420:	stp	x26, x25, [sp, #48]
  41e424:	stp	x24, x23, [sp, #64]
  41e428:	stp	x22, x21, [sp, #80]
  41e42c:	stp	x20, x19, [sp, #96]
  41e430:	ldr	x24, [x0, #152]
  41e434:	mov	x28, x6
  41e438:	mov	x19, x5
  41e43c:	mov	x22, x4
  41e440:	ldr	x8, [x24]
  41e444:	mov	x21, x3
  41e448:	mov	x26, x2
  41e44c:	mov	x23, x0
  41e450:	add	x9, x8, x4, lsl #4
  41e454:	ldr	w9, [x9, #8]
  41e458:	mov	x27, x1
  41e45c:	add	x29, sp, #0x10
  41e460:	tbnz	w9, #3, 41e49c <_obstack_memory_used@@Base+0xc618>
  41e464:	tbnz	w9, #20, 41e5b0 <_obstack_memory_used@@Base+0xc72c>
  41e468:	and	w9, w9, #0xff
  41e46c:	cmp	w9, #0x4
  41e470:	b.ne	41e5d4 <_obstack_memory_used@@Base+0xc750>  // b.any
  41e474:	lsl	x9, x22, #4
  41e478:	ldr	x8, [x8, x9]
  41e47c:	add	x8, x8, #0x1
  41e480:	cmp	x8, x27
  41e484:	b.ge	41e5e8 <_obstack_memory_used@@Base+0xc764>  // b.tcont
  41e488:	add	x9, x26, x8, lsl #4
  41e48c:	ldp	x9, x10, [x9]
  41e490:	sub	x25, x10, x9
  41e494:	cbnz	x28, 41e5f0 <_obstack_memory_used@@Base+0xc76c>
  41e498:	b	41e66c <_obstack_memory_used@@Base+0xc7e8>
  41e49c:	ldr	x8, [x23, #184]
  41e4a0:	ldr	x9, [x21]
  41e4a4:	ldr	x20, [x24, #40]
  41e4a8:	mov	x0, x19
  41e4ac:	mov	x1, x22
  41e4b0:	ldr	x23, [x8, x9, lsl #3]
  41e4b4:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41e4b8:	tbz	w0, #0, 41e770 <_obstack_memory_used@@Base+0xc8ec>
  41e4bc:	mov	w8, #0x18                  	// #24
  41e4c0:	madd	x25, x22, x8, x20
  41e4c4:	ldr	x8, [x25, #8]!
  41e4c8:	cmp	x8, #0x1
  41e4cc:	b.lt	41e5cc <_obstack_memory_used@@Base+0xc748>  // b.tstop
  41e4d0:	mov	w8, #0x18                  	// #24
  41e4d4:	madd	x8, x22, x8, x20
  41e4d8:	stp	x26, x28, [sp]
  41e4dc:	mov	x28, xzr
  41e4e0:	add	x23, x23, #0x8
  41e4e4:	add	x20, x8, #0x10
  41e4e8:	mov	x22, #0xffffffffffffffff    	// #-1
  41e4ec:	b	41e500 <_obstack_memory_used@@Base+0xc67c>
  41e4f0:	ldr	x8, [x25]
  41e4f4:	add	x28, x28, #0x1
  41e4f8:	cmp	x28, x8
  41e4fc:	b.ge	41e5a8 <_obstack_memory_used@@Base+0xc724>  // b.tcont
  41e500:	ldr	x8, [x20]
  41e504:	mov	x0, x23
  41e508:	ldr	x24, [x8, x28, lsl #3]
  41e50c:	mov	x1, x24
  41e510:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41e514:	cbz	x0, 41e540 <_obstack_memory_used@@Base+0xc6bc>
  41e518:	cmn	x22, #0x1
  41e51c:	b.eq	41e54c <_obstack_memory_used@@Base+0xc6c8>  // b.none
  41e520:	mov	x0, x19
  41e524:	mov	x1, x22
  41e528:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41e52c:	cbz	x0, 41e55c <_obstack_memory_used@@Base+0xc6d8>
  41e530:	mov	w8, #0x1                   	// #1
  41e534:	mov	x26, x24
  41e538:	cbnz	w8, 41e598 <_obstack_memory_used@@Base+0xc714>
  41e53c:	b	41e4f0 <_obstack_memory_used@@Base+0xc66c>
  41e540:	mov	w8, #0x4                   	// #4
  41e544:	cbnz	w8, 41e598 <_obstack_memory_used@@Base+0xc714>
  41e548:	b	41e4f0 <_obstack_memory_used@@Base+0xc66c>
  41e54c:	mov	w8, wzr
  41e550:	mov	x22, x24
  41e554:	cbnz	w8, 41e598 <_obstack_memory_used@@Base+0xc714>
  41e558:	b	41e4f0 <_obstack_memory_used@@Base+0xc66c>
  41e55c:	ldr	x0, [sp, #8]
  41e560:	cbz	x0, 41e590 <_obstack_memory_used@@Base+0xc70c>
  41e564:	ldr	x1, [x21]
  41e568:	ldr	x4, [sp]
  41e56c:	mov	x2, x24
  41e570:	mov	x3, x27
  41e574:	mov	x5, x19
  41e578:	bl	41e788 <_obstack_memory_used@@Base+0xc904>
  41e57c:	cbz	w0, 41e590 <_obstack_memory_used@@Base+0xc70c>
  41e580:	mov	x26, #0xfffffffffffffffe    	// #-2
  41e584:	mov	w8, #0x1                   	// #1
  41e588:	cbnz	w8, 41e598 <_obstack_memory_used@@Base+0xc714>
  41e58c:	b	41e4f0 <_obstack_memory_used@@Base+0xc66c>
  41e590:	mov	w8, #0x2                   	// #2
  41e594:	cbz	w8, 41e4f0 <_obstack_memory_used@@Base+0xc66c>
  41e598:	cmp	w8, #0x4
  41e59c:	b.eq	41e4f0 <_obstack_memory_used@@Base+0xc66c>  // b.none
  41e5a0:	cmp	w8, #0x2
  41e5a4:	b.ne	41e5dc <_obstack_memory_used@@Base+0xc758>  // b.any
  41e5a8:	mov	x0, x22
  41e5ac:	b	41e748 <_obstack_memory_used@@Base+0xc8c4>
  41e5b0:	ldr	x3, [x21]
  41e5b4:	mov	x0, x24
  41e5b8:	mov	x1, x22
  41e5bc:	mov	x2, x23
  41e5c0:	bl	41bde8 <_obstack_memory_used@@Base+0x9f64>
  41e5c4:	sxtw	x25, w0
  41e5c8:	b	41e6cc <_obstack_memory_used@@Base+0xc848>
  41e5cc:	mov	x0, #0xffffffffffffffff    	// #-1
  41e5d0:	b	41e748 <_obstack_memory_used@@Base+0xc8c4>
  41e5d4:	mov	x25, xzr
  41e5d8:	b	41e6cc <_obstack_memory_used@@Base+0xc848>
  41e5dc:	mov	x22, x26
  41e5e0:	mov	x0, x26
  41e5e4:	b	41e748 <_obstack_memory_used@@Base+0xc8c4>
  41e5e8:	mov	x25, xzr
  41e5ec:	cbz	x28, 41e66c <_obstack_memory_used@@Base+0xc7e8>
  41e5f0:	cmp	x8, x27
  41e5f4:	b.ge	41e638 <_obstack_memory_used@@Base+0xc7b4>  // b.tcont
  41e5f8:	lsl	x9, x8, #4
  41e5fc:	ldr	x9, [x26, x9]
  41e600:	cmn	x9, #0x1
  41e604:	b.eq	41e638 <_obstack_memory_used@@Base+0xc7b4>  // b.none
  41e608:	add	x8, x26, x8, lsl #4
  41e60c:	ldr	x8, [x8, #8]
  41e610:	cmn	x8, #0x1
  41e614:	b.eq	41e638 <_obstack_memory_used@@Base+0xc7b4>  // b.none
  41e618:	cbz	x25, 41e678 <_obstack_memory_used@@Base+0xc7f4>
  41e61c:	ldr	x10, [x23, #48]
  41e620:	ldr	x8, [x21]
  41e624:	sub	x10, x10, x8
  41e628:	cmp	x10, x25
  41e62c:	b.ge	41e644 <_obstack_memory_used@@Base+0xc7c0>  // b.tcont
  41e630:	mov	w8, #0x1                   	// #1
  41e634:	b	41e660 <_obstack_memory_used@@Base+0xc7dc>
  41e638:	mov	x26, #0xffffffffffffffff    	// #-1
  41e63c:	mov	w8, #0x1                   	// #1
  41e640:	b	41e6c8 <_obstack_memory_used@@Base+0xc844>
  41e644:	ldr	x10, [x23, #8]
  41e648:	mov	x2, x25
  41e64c:	add	x0, x10, x9
  41e650:	add	x1, x10, x8
  41e654:	bl	402a20 <bcmp@plt>
  41e658:	cmp	w0, #0x0
  41e65c:	cset	w8, ne  // ne = any
  41e660:	cbz	w8, 41e66c <_obstack_memory_used@@Base+0xc7e8>
  41e664:	mov	x26, #0xffffffffffffffff    	// #-1
  41e668:	b	41e6c8 <_obstack_memory_used@@Base+0xc844>
  41e66c:	cbz	x25, 41e678 <_obstack_memory_used@@Base+0xc7f4>
  41e670:	mov	x26, #0xffffffffffffffff    	// #-1
  41e674:	b	41e6c4 <_obstack_memory_used@@Base+0xc840>
  41e678:	mov	x0, x19
  41e67c:	mov	x1, x22
  41e680:	bl	418534 <_obstack_memory_used@@Base+0x66b0>
  41e684:	tbz	w0, #0, 41e778 <_obstack_memory_used@@Base+0xc8f4>
  41e688:	ldr	x8, [x24, #40]
  41e68c:	mov	w9, #0x18                  	// #24
  41e690:	ldr	x10, [x23, #184]
  41e694:	madd	x8, x22, x9, x8
  41e698:	ldr	x9, [x21]
  41e69c:	ldr	x8, [x8, #16]
  41e6a0:	ldr	x9, [x10, x9, lsl #3]
  41e6a4:	ldr	x26, [x8]
  41e6a8:	add	x0, x9, #0x8
  41e6ac:	mov	x1, x26
  41e6b0:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41e6b4:	cmp	x0, #0x0
  41e6b8:	cset	w8, ne  // ne = any
  41e6bc:	csinv	x26, x26, xzr, ne  // ne = any
  41e6c0:	cbnz	w8, 41e6c8 <_obstack_memory_used@@Base+0xc844>
  41e6c4:	mov	w8, wzr
  41e6c8:	cbnz	w8, 41e740 <_obstack_memory_used@@Base+0xc8bc>
  41e6cc:	cbnz	x25, 41e6e8 <_obstack_memory_used@@Base+0xc864>
  41e6d0:	ldr	x8, [x24]
  41e6d4:	ldr	x2, [x21]
  41e6d8:	mov	x0, x23
  41e6dc:	add	x1, x8, x22, lsl #4
  41e6e0:	bl	41c0c8 <_obstack_memory_used@@Base+0xa244>
  41e6e4:	tbz	w0, #0, 41e768 <_obstack_memory_used@@Base+0xc8e4>
  41e6e8:	ldr	x8, [x24, #24]
  41e6ec:	ldr	x9, [x21]
  41e6f0:	cmp	x25, #0x0
  41e6f4:	ldr	x26, [x8, x22, lsl #3]
  41e6f8:	csinc	x8, x25, xzr, ne  // ne = any
  41e6fc:	add	x8, x9, x8
  41e700:	str	x8, [x21]
  41e704:	cbz	x28, 41e730 <_obstack_memory_used@@Base+0xc8ac>
  41e708:	ldr	x9, [x23, #168]
  41e70c:	cmp	x8, x9
  41e710:	b.gt	41e738 <_obstack_memory_used@@Base+0xc8b4>
  41e714:	ldr	x9, [x23, #184]
  41e718:	ldr	x8, [x9, x8, lsl #3]
  41e71c:	cbz	x8, 41e738 <_obstack_memory_used@@Base+0xc8b4>
  41e720:	add	x0, x8, #0x8
  41e724:	mov	x1, x26
  41e728:	bl	418810 <_obstack_memory_used@@Base+0x698c>
  41e72c:	cbz	x0, 41e738 <_obstack_memory_used@@Base+0xc8b4>
  41e730:	str	xzr, [x19, #8]
  41e734:	b	41e73c <_obstack_memory_used@@Base+0xc8b8>
  41e738:	mov	x26, #0xffffffffffffffff    	// #-1
  41e73c:	mov	w8, #0x1                   	// #1
  41e740:	cmp	w8, #0x0
  41e744:	csinv	x0, x26, xzr, ne  // ne = any
  41e748:	ldp	x20, x19, [sp, #96]
  41e74c:	ldp	x22, x21, [sp, #80]
  41e750:	ldp	x24, x23, [sp, #64]
  41e754:	ldp	x26, x25, [sp, #48]
  41e758:	ldp	x28, x27, [sp, #32]
  41e75c:	ldp	x29, x30, [sp, #16]
  41e760:	add	sp, sp, #0x70
  41e764:	ret
  41e768:	mov	w8, wzr
  41e76c:	b	41e740 <_obstack_memory_used@@Base+0xc8bc>
  41e770:	mov	x0, #0xfffffffffffffffe    	// #-2
  41e774:	b	41e748 <_obstack_memory_used@@Base+0xc8c4>
  41e778:	mov	x26, #0xfffffffffffffffe    	// #-2
  41e77c:	mov	w8, #0x1                   	// #1
  41e780:	cbnz	w8, 41e6c8 <_obstack_memory_used@@Base+0xc844>
  41e784:	b	41e6c4 <_obstack_memory_used@@Base+0xc840>
  41e788:	stp	x29, x30, [sp, #-80]!
  41e78c:	stp	x26, x25, [sp, #16]
  41e790:	stp	x24, x23, [sp, #32]
  41e794:	stp	x22, x21, [sp, #48]
  41e798:	stp	x20, x19, [sp, #64]
  41e79c:	ldp	x25, x8, [x0]
  41e7a0:	mov	x19, x5
  41e7a4:	mov	x21, x4
  41e7a8:	mov	x22, x3
  41e7ac:	add	x9, x25, #0x1
  41e7b0:	mov	x23, x2
  41e7b4:	mov	x24, x1
  41e7b8:	mov	x20, x0
  41e7bc:	cmp	x9, x8
  41e7c0:	mov	x29, sp
  41e7c4:	str	x9, [x0]
  41e7c8:	b.ne	41e7ec <_obstack_memory_used@@Base+0xc968>  // b.any
  41e7cc:	ldr	x0, [x20, #16]
  41e7d0:	add	x8, x8, x8, lsl #1
  41e7d4:	lsl	x1, x8, #5
  41e7d8:	bl	402a40 <realloc@plt>
  41e7dc:	cbz	x0, 41e838 <_obstack_memory_used@@Base+0xc9b4>
  41e7e0:	ldr	x8, [x20, #8]
  41e7e4:	lsl	x8, x8, #1
  41e7e8:	stp	x8, x0, [x20, #8]
  41e7ec:	ldr	x8, [x20, #16]
  41e7f0:	mov	w9, #0x30                  	// #48
  41e7f4:	lsl	x22, x22, #4
  41e7f8:	mov	x0, x22
  41e7fc:	madd	x26, x25, x9, x8
  41e800:	stp	x24, x23, [x26]
  41e804:	bl	4028e0 <malloc@plt>
  41e808:	str	x0, [x26, #16]
  41e80c:	cbz	x0, 41e838 <_obstack_memory_used@@Base+0xc9b4>
  41e810:	mov	x1, x21
  41e814:	mov	x2, x22
  41e818:	bl	402710 <memcpy@plt>
  41e81c:	ldr	x8, [x20, #16]
  41e820:	mov	w9, #0x30                  	// #48
  41e824:	mov	x1, x19
  41e828:	madd	x8, x25, x9, x8
  41e82c:	add	x0, x8, #0x18
  41e830:	bl	418794 <_obstack_memory_used@@Base+0x6910>
  41e834:	b	41e83c <_obstack_memory_used@@Base+0xc9b8>
  41e838:	mov	w0, #0xc                   	// #12
  41e83c:	ldp	x20, x19, [sp, #64]
  41e840:	ldp	x22, x21, [sp, #48]
  41e844:	ldp	x24, x23, [sp, #32]
  41e848:	ldp	x26, x25, [sp, #16]
  41e84c:	ldp	x29, x30, [sp], #80
  41e850:	ret
  41e854:	sub	sp, sp, #0x50
  41e858:	stp	x29, x30, [sp, #16]
  41e85c:	add	x29, sp, #0x10
  41e860:	add	x2, x29, #0x18
  41e864:	mov	w1, wzr
  41e868:	str	x23, [sp, #32]
  41e86c:	stp	x22, x21, [sp, #48]
  41e870:	stp	x20, x19, [sp, #64]
  41e874:	mov	x19, x0
  41e878:	bl	402c00 <acl_get_entry@plt>
  41e87c:	cmp	w0, #0x1
  41e880:	b.lt	41e8f4 <_obstack_memory_used@@Base+0xca70>  // b.tstop
  41e884:	mov	x22, #0x12                  	// #18
  41e888:	mov	w21, #0x1                   	// #1
  41e88c:	movk	x22, #0x1, lsl #32
  41e890:	ldr	x0, [x29, #24]
  41e894:	sub	x1, x29, #0x4
  41e898:	bl	4029b0 <acl_get_tag_type@plt>
  41e89c:	mov	w8, wzr
  41e8a0:	tbnz	w0, #31, 41e8d0 <_obstack_memory_used@@Base+0xca4c>
  41e8a4:	ldur	w9, [x29, #-4]
  41e8a8:	mov	w20, #0x1                   	// #1
  41e8ac:	cmp	w9, #0x20
  41e8b0:	b.hi	41e8c8 <_obstack_memory_used@@Base+0xca44>  // b.pmore
  41e8b4:	lsl	x9, x21, x9
  41e8b8:	tst	x9, x22
  41e8bc:	b.eq	41e8c8 <_obstack_memory_used@@Base+0xca44>  // b.none
  41e8c0:	mov	w8, #0x1                   	// #1
  41e8c4:	mov	w20, w23
  41e8c8:	cbnz	w8, 41e8d8 <_obstack_memory_used@@Base+0xca54>
  41e8cc:	b	41e8f8 <_obstack_memory_used@@Base+0xca74>
  41e8d0:	mov	w20, #0xffffffff            	// #-1
  41e8d4:	cbz	w8, 41e8f8 <_obstack_memory_used@@Base+0xca74>
  41e8d8:	add	x2, x29, #0x18
  41e8dc:	mov	w1, #0x1                   	// #1
  41e8e0:	mov	x0, x19
  41e8e4:	bl	402c00 <acl_get_entry@plt>
  41e8e8:	cmp	w0, #0x0
  41e8ec:	mov	w23, w20
  41e8f0:	b.gt	41e890 <_obstack_memory_used@@Base+0xca0c>
  41e8f4:	mov	w20, w0
  41e8f8:	mov	w0, w20
  41e8fc:	ldp	x20, x19, [sp, #64]
  41e900:	ldp	x22, x21, [sp, #48]
  41e904:	ldr	x23, [sp, #32]
  41e908:	ldp	x29, x30, [sp, #16]
  41e90c:	add	sp, sp, #0x50
  41e910:	ret
  41e914:	stp	x29, x30, [sp, #-16]!
  41e918:	mov	x29, sp
  41e91c:	bl	4027a0 <acl_entries@plt>
  41e920:	cmp	w0, #0x0
  41e924:	cset	w0, gt
  41e928:	ldp	x29, x30, [sp], #16
  41e92c:	ret
  41e930:	stp	x29, x30, [sp, #-32]!
  41e934:	str	x19, [sp, #16]
  41e938:	mov	x19, x0
  41e93c:	ldr	x0, [x0, #8]
  41e940:	mov	x29, sp
  41e944:	cbz	x0, 41e94c <_obstack_memory_used@@Base+0xcac8>
  41e948:	bl	402e20 <acl_free@plt>
  41e94c:	ldr	x0, [x19, #16]
  41e950:	cbz	x0, 41e958 <_obstack_memory_used@@Base+0xcad4>
  41e954:	bl	402e20 <acl_free@plt>
  41e958:	ldr	x19, [sp, #16]
  41e95c:	ldp	x29, x30, [sp], #32
  41e960:	ret
  41e964:	stp	x29, x30, [sp, #-48]!
  41e968:	str	x21, [sp, #16]
  41e96c:	stp	x20, x19, [sp, #32]
  41e970:	mov	x19, x3
  41e974:	mov	w21, w2
  41e978:	mov	x20, x0
  41e97c:	movi	v0.2d, #0x0
  41e980:	cmn	w1, #0x1
  41e984:	mov	x29, sp
  41e988:	stp	q0, q0, [x3]
  41e98c:	str	w2, [x3]
  41e990:	b.eq	41e9cc <_obstack_memory_used@@Base+0xcb48>  // b.none
  41e994:	mov	w0, w1
  41e998:	bl	402a90 <acl_get_fd@plt>
  41e99c:	str	x0, [x19, #8]
  41e9a0:	cbz	x0, 41e9e0 <_obstack_memory_used@@Base+0xcb5c>
  41e9a4:	and	w8, w21, #0xf000
  41e9a8:	cmp	w8, #0x4, lsl #12
  41e9ac:	b.ne	41e9c4 <_obstack_memory_used@@Base+0xcb40>  // b.any
  41e9b0:	mov	w1, #0x4000                	// #16384
  41e9b4:	mov	x0, x20
  41e9b8:	bl	402bc0 <acl_get_file@plt>
  41e9bc:	str	x0, [x19, #16]
  41e9c0:	cbz	x0, 41e9f4 <_obstack_memory_used@@Base+0xcb70>
  41e9c4:	mov	w0, wzr
  41e9c8:	b	41e9f8 <_obstack_memory_used@@Base+0xcb74>
  41e9cc:	mov	w1, #0x8000                	// #32768
  41e9d0:	mov	x0, x20
  41e9d4:	bl	402bc0 <acl_get_file@plt>
  41e9d8:	str	x0, [x19, #8]
  41e9dc:	cbnz	x0, 41e9a4 <_obstack_memory_used@@Base+0xcb20>
  41e9e0:	bl	402da0 <__errno_location@plt>
  41e9e4:	ldr	w0, [x0]
  41e9e8:	bl	41ef50 <_obstack_memory_used@@Base+0xd0cc>
  41e9ec:	sbfx	w0, w0, #0, #1
  41e9f0:	b	41e9f8 <_obstack_memory_used@@Base+0xcb74>
  41e9f4:	mov	w0, #0xffffffff            	// #-1
  41e9f8:	ldp	x20, x19, [sp, #32]
  41e9fc:	ldr	x21, [sp, #16]
  41ea00:	ldp	x29, x30, [sp], #48
  41ea04:	ret
  41ea08:	stp	x29, x30, [sp, #-16]!
  41ea0c:	cmn	w1, #0x1
  41ea10:	mov	x29, sp
  41ea14:	b.eq	41ea2c <_obstack_memory_used@@Base+0xcba8>  // b.none
  41ea18:	mov	w0, w1
  41ea1c:	mov	w1, w2
  41ea20:	bl	4029e0 <fchmod@plt>
  41ea24:	ldp	x29, x30, [sp], #16
  41ea28:	ret
  41ea2c:	mov	w1, w2
  41ea30:	bl	402900 <chmod@plt>
  41ea34:	ldp	x29, x30, [sp], #16
  41ea38:	ret
  41ea3c:	sub	sp, sp, #0x50
  41ea40:	stp	x29, x30, [sp, #16]
  41ea44:	add	x29, sp, #0x10
  41ea48:	stp	x24, x23, [sp, #32]
  41ea4c:	stp	x22, x21, [sp, #48]
  41ea50:	stp	x20, x19, [sp, #64]
  41ea54:	sturb	wzr, [x29, #-4]
  41ea58:	mov	w19, w2
  41ea5c:	ldr	w2, [x0]
  41ea60:	mov	x20, x0
  41ea64:	mov	x21, x1
  41ea68:	ands	w22, w2, #0xe00
  41ea6c:	b.eq	41ea80 <_obstack_memory_used@@Base+0xcbfc>  // b.none
  41ea70:	mov	x0, x21
  41ea74:	mov	w1, w19
  41ea78:	bl	41ea08 <_obstack_memory_used@@Base+0xcb84>
  41ea7c:	cbnz	w0, 41eb28 <_obstack_memory_used@@Base+0xcca4>
  41ea80:	sub	x4, x29, #0x4
  41ea84:	mov	x0, x20
  41ea88:	mov	x1, x21
  41ea8c:	mov	w2, w19
  41ea90:	mov	w3, wzr
  41ea94:	bl	41eb44 <_obstack_memory_used@@Base+0xccc0>
  41ea98:	ldurb	w8, [x29, #-4]
  41ea9c:	cbz	w8, 41eaa8 <_obstack_memory_used@@Base+0xcc24>
  41eaa0:	mov	w23, wzr
  41eaa4:	b	41eaec <_obstack_memory_used@@Base+0xcc68>
  41eaa8:	cbz	w0, 41eab8 <_obstack_memory_used@@Base+0xcc34>
  41eaac:	bl	402da0 <__errno_location@plt>
  41eab0:	ldr	w24, [x0]
  41eab4:	b	41eabc <_obstack_memory_used@@Base+0xcc38>
  41eab8:	mov	w24, wzr
  41eabc:	sub	x4, x29, #0x4
  41eac0:	mov	w3, #0x1                   	// #1
  41eac4:	mov	x0, x20
  41eac8:	mov	x1, x21
  41eacc:	mov	w2, w19
  41ead0:	bl	41eb44 <_obstack_memory_used@@Base+0xccc0>
  41ead4:	ldurb	w8, [x29, #-4]
  41ead8:	eor	w23, w8, #0x1
  41eadc:	cbz	w24, 41eaec <_obstack_memory_used@@Base+0xcc68>
  41eae0:	bl	402da0 <__errno_location@plt>
  41eae4:	str	w24, [x0]
  41eae8:	mov	w0, #0xffffffff            	// #-1
  41eaec:	cbnz	w22, 41eb2c <_obstack_memory_used@@Base+0xcca8>
  41eaf0:	tst	w23, #0xff
  41eaf4:	b.eq	41eb2c <_obstack_memory_used@@Base+0xcca8>  // b.none
  41eaf8:	cbz	w0, 41eb08 <_obstack_memory_used@@Base+0xcc84>
  41eafc:	bl	402da0 <__errno_location@plt>
  41eb00:	ldr	w22, [x0]
  41eb04:	b	41eb0c <_obstack_memory_used@@Base+0xcc88>
  41eb08:	mov	w22, wzr
  41eb0c:	ldr	w2, [x20]
  41eb10:	mov	x0, x21
  41eb14:	mov	w1, w19
  41eb18:	bl	41ea08 <_obstack_memory_used@@Base+0xcb84>
  41eb1c:	cbz	w22, 41eb2c <_obstack_memory_used@@Base+0xcca8>
  41eb20:	bl	402da0 <__errno_location@plt>
  41eb24:	str	w22, [x0]
  41eb28:	mov	w0, #0xffffffff            	// #-1
  41eb2c:	ldp	x20, x19, [sp, #64]
  41eb30:	ldp	x22, x21, [sp, #48]
  41eb34:	ldp	x24, x23, [sp, #32]
  41eb38:	ldp	x29, x30, [sp, #16]
  41eb3c:	add	sp, sp, #0x50
  41eb40:	ret
  41eb44:	stp	x29, x30, [sp, #-64]!
  41eb48:	stp	x24, x23, [sp, #16]
  41eb4c:	stp	x22, x21, [sp, #32]
  41eb50:	stp	x20, x19, [sp, #48]
  41eb54:	ldrb	w8, [x0, #24]
  41eb58:	mov	x29, sp
  41eb5c:	cbz	w8, 41eb7c <_obstack_memory_used@@Base+0xccf8>
  41eb60:	mov	w23, wzr
  41eb64:	mov	w0, w23
  41eb68:	ldp	x20, x19, [sp, #48]
  41eb6c:	ldp	x22, x21, [sp, #32]
  41eb70:	ldp	x24, x23, [sp, #16]
  41eb74:	ldp	x29, x30, [sp], #64
  41eb78:	ret
  41eb7c:	mov	x22, x4
  41eb80:	mov	w21, w3
  41eb84:	mov	w24, w2
  41eb88:	mov	x19, x0
  41eb8c:	mov	x20, x1
  41eb90:	cbz	w3, 41ebbc <_obstack_memory_used@@Base+0xcd38>
  41eb94:	ldr	x0, [x19, #8]
  41eb98:	cbz	x0, 41eba0 <_obstack_memory_used@@Base+0xcd1c>
  41eb9c:	bl	402e20 <acl_free@plt>
  41eba0:	ldr	w0, [x19]
  41eba4:	bl	402a80 <acl_from_mode@plt>
  41eba8:	cmp	x0, #0x0
  41ebac:	csetm	w23, eq  // eq = none
  41ebb0:	str	x0, [x19, #8]
  41ebb4:	cbnz	w23, 41eb64 <_obstack_memory_used@@Base+0xcce0>
  41ebb8:	b	41ebc4 <_obstack_memory_used@@Base+0xcd40>
  41ebbc:	mov	w23, wzr
  41ebc0:	cbnz	w23, 41eb64 <_obstack_memory_used@@Base+0xcce0>
  41ebc4:	ldr	x2, [x19, #8]
  41ebc8:	cbz	x2, 41eb60 <_obstack_memory_used@@Base+0xccdc>
  41ebcc:	cmn	w24, #0x1
  41ebd0:	b.eq	41ec14 <_obstack_memory_used@@Base+0xcd90>  // b.none
  41ebd4:	mov	w0, w24
  41ebd8:	mov	x1, x2
  41ebdc:	bl	402770 <acl_set_fd@plt>
  41ebe0:	mov	w23, w0
  41ebe4:	cbz	w0, 41ec28 <_obstack_memory_used@@Base+0xcda4>
  41ebe8:	bl	402da0 <__errno_location@plt>
  41ebec:	ldr	w0, [x0]
  41ebf0:	bl	41ef50 <_obstack_memory_used@@Base+0xd0cc>
  41ebf4:	tbnz	w0, #0, 41eb64 <_obstack_memory_used@@Base+0xcce0>
  41ebf8:	mov	w8, #0x1                   	// #1
  41ebfc:	strb	w8, [x19, #24]
  41ec00:	cbnz	w21, 41eb60 <_obstack_memory_used@@Base+0xccdc>
  41ec04:	ldr	x0, [x19, #8]
  41ec08:	bl	41e854 <_obstack_memory_used@@Base+0xc9d0>
  41ec0c:	cbnz	w0, 41eb64 <_obstack_memory_used@@Base+0xcce0>
  41ec10:	b	41eb60 <_obstack_memory_used@@Base+0xccdc>
  41ec14:	mov	w1, #0x8000                	// #32768
  41ec18:	mov	x0, x20
  41ec1c:	bl	402a60 <acl_set_file@plt>
  41ec20:	mov	w23, w0
  41ec24:	cbnz	w0, 41ebe8 <_obstack_memory_used@@Base+0xcd64>
  41ec28:	mov	w8, #0x1                   	// #1
  41ec2c:	strb	w8, [x22]
  41ec30:	ldr	w8, [x19]
  41ec34:	and	w8, w8, #0xf000
  41ec38:	cmp	w8, #0x4, lsl #12
  41ec3c:	b.ne	41eb60 <_obstack_memory_used@@Base+0xccdc>  // b.any
  41ec40:	cbz	w21, 41ec54 <_obstack_memory_used@@Base+0xcdd0>
  41ec44:	mov	x0, x20
  41ec48:	bl	402860 <acl_delete_def_file@plt>
  41ec4c:	mov	w23, w0
  41ec50:	b	41eb64 <_obstack_memory_used@@Base+0xcce0>
  41ec54:	ldr	x0, [x19, #16]
  41ec58:	cbz	x0, 41ec44 <_obstack_memory_used@@Base+0xcdc0>
  41ec5c:	bl	41e914 <_obstack_memory_used@@Base+0xca90>
  41ec60:	cbz	w0, 41ec44 <_obstack_memory_used@@Base+0xcdc0>
  41ec64:	ldr	x2, [x19, #16]
  41ec68:	mov	w1, #0x4000                	// #16384
  41ec6c:	mov	x0, x20
  41ec70:	bl	402a60 <acl_set_file@plt>
  41ec74:	b	41ec4c <_obstack_memory_used@@Base+0xcdc8>
  41ec78:	sub	w9, w0, #0x41
  41ec7c:	mov	w8, w0
  41ec80:	cmp	w9, #0x39
  41ec84:	mov	w0, #0x1                   	// #1
  41ec88:	b.hi	41eca0 <_obstack_memory_used@@Base+0xce1c>  // b.pmore
  41ec8c:	mov	w10, #0x1                   	// #1
  41ec90:	lsl	x9, x10, x9
  41ec94:	tst	x9, #0x3ffffff03ffffff
  41ec98:	b.eq	41eca0 <_obstack_memory_used@@Base+0xce1c>  // b.none
  41ec9c:	ret
  41eca0:	sub	w8, w8, #0x30
  41eca4:	cmp	w8, #0xa
  41eca8:	b.cc	41ec9c <_obstack_memory_used@@Base+0xce18>  // b.lo, b.ul, b.last
  41ecac:	mov	w0, wzr
  41ecb0:	ret
  41ecb4:	sub	w8, w0, #0x41
  41ecb8:	cmp	w8, #0x39
  41ecbc:	b.hi	41ecd0 <_obstack_memory_used@@Base+0xce4c>  // b.pmore
  41ecc0:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  41ecc4:	lsr	x8, x9, x8
  41ecc8:	and	w0, w8, #0x1
  41eccc:	ret
  41ecd0:	mov	w0, wzr
  41ecd4:	ret
  41ecd8:	cmp	w0, #0x80
  41ecdc:	cset	w0, cc  // cc = lo, ul, last
  41ece0:	ret
  41ece4:	cmp	w0, #0x20
  41ece8:	cset	w8, eq  // eq = none
  41ecec:	cmp	w0, #0x9
  41ecf0:	cset	w9, eq  // eq = none
  41ecf4:	orr	w0, w8, w9
  41ecf8:	ret
  41ecfc:	mov	w8, w0
  41ed00:	cmp	w0, #0x20
  41ed04:	mov	w0, #0x1                   	// #1
  41ed08:	b.cs	41ed10 <_obstack_memory_used@@Base+0xce8c>  // b.hs, b.nlast
  41ed0c:	ret
  41ed10:	cmp	w8, #0x7f
  41ed14:	b.eq	41ed0c <_obstack_memory_used@@Base+0xce88>  // b.none
  41ed18:	mov	w0, wzr
  41ed1c:	ret
  41ed20:	sub	w8, w0, #0x30
  41ed24:	cmp	w8, #0xa
  41ed28:	cset	w0, cc  // cc = lo, ul, last
  41ed2c:	ret
  41ed30:	sub	w8, w0, #0x21
  41ed34:	cmp	w8, #0x5e
  41ed38:	cset	w0, cc  // cc = lo, ul, last
  41ed3c:	ret
  41ed40:	sub	w8, w0, #0x61
  41ed44:	cmp	w8, #0x1a
  41ed48:	cset	w0, cc  // cc = lo, ul, last
  41ed4c:	ret
  41ed50:	sub	w8, w0, #0x20
  41ed54:	cmp	w8, #0x5f
  41ed58:	cset	w0, cc  // cc = lo, ul, last
  41ed5c:	ret
  41ed60:	sub	w8, w0, #0x21
  41ed64:	cmp	w8, #0x5d
  41ed68:	b.hi	41ed8c <_obstack_memory_used@@Base+0xcf08>  // b.pmore
  41ed6c:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xf17c>
  41ed70:	add	x9, x9, #0x71a
  41ed74:	adr	x10, 41ed88 <_obstack_memory_used@@Base+0xcf04>
  41ed78:	ldrb	w11, [x9, x8]
  41ed7c:	add	x10, x10, x11, lsl #2
  41ed80:	mov	w0, #0x1                   	// #1
  41ed84:	br	x10
  41ed88:	ret
  41ed8c:	mov	w0, wzr
  41ed90:	ret
  41ed94:	sub	w8, w0, #0x9
  41ed98:	cmp	w8, #0x17
  41ed9c:	b.hi	41edb4 <_obstack_memory_used@@Base+0xcf30>  // b.pmore
  41eda0:	mov	w9, #0x1f                  	// #31
  41eda4:	movk	w9, #0x80, lsl #16
  41eda8:	lsr	w8, w9, w8
  41edac:	and	w0, w8, #0x1
  41edb0:	ret
  41edb4:	mov	w0, wzr
  41edb8:	ret
  41edbc:	sub	w8, w0, #0x41
  41edc0:	cmp	w8, #0x1a
  41edc4:	cset	w0, cc  // cc = lo, ul, last
  41edc8:	ret
  41edcc:	sub	w8, w0, #0x30
  41edd0:	cmp	w8, #0x36
  41edd4:	b.hi	41edec <_obstack_memory_used@@Base+0xcf68>  // b.pmore
  41edd8:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  41eddc:	movk	x9, #0x3ff
  41ede0:	lsr	x8, x9, x8
  41ede4:	and	w0, w8, #0x1
  41ede8:	ret
  41edec:	mov	w0, wzr
  41edf0:	ret
  41edf4:	sub	w8, w0, #0x41
  41edf8:	add	w9, w0, #0x20
  41edfc:	cmp	w8, #0x1a
  41ee00:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  41ee04:	ret
  41ee08:	sub	w8, w0, #0x61
  41ee0c:	sub	w9, w0, #0x20
  41ee10:	cmp	w8, #0x1a
  41ee14:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  41ee18:	ret
  41ee1c:	sub	sp, sp, #0x130
  41ee20:	add	x1, sp, #0xc
  41ee24:	mov	w2, #0x101                 	// #257
  41ee28:	stp	x29, x30, [sp, #272]
  41ee2c:	str	x28, [sp, #288]
  41ee30:	add	x29, sp, #0x110
  41ee34:	bl	41ee88 <_obstack_memory_used@@Base+0xd004>
  41ee38:	cbz	w0, 41ee44 <_obstack_memory_used@@Base+0xcfc0>
  41ee3c:	mov	w0, wzr
  41ee40:	b	41ee78 <_obstack_memory_used@@Base+0xcff4>
  41ee44:	ldrh	w8, [sp, #12]
  41ee48:	cmp	w8, #0x43
  41ee4c:	b.eq	41ee3c <_obstack_memory_used@@Base+0xcfb8>  // b.none
  41ee50:	ldr	w8, [sp, #12]
  41ee54:	ldrh	w9, [sp, #16]
  41ee58:	mov	w10, #0x4f50                	// #20304
  41ee5c:	movk	w10, #0x4953, lsl #16
  41ee60:	mov	w11, #0x58                  	// #88
  41ee64:	eor	w8, w8, w10
  41ee68:	eor	w9, w9, w11
  41ee6c:	orr	w8, w8, w9
  41ee70:	cmp	w8, #0x0
  41ee74:	cset	w0, ne  // ne = any
  41ee78:	ldr	x28, [sp, #288]
  41ee7c:	ldp	x29, x30, [sp, #272]
  41ee80:	add	sp, sp, #0x130
  41ee84:	ret
  41ee88:	stp	x29, x30, [sp, #-16]!
  41ee8c:	mov	x29, sp
  41ee90:	bl	41ee9c <_obstack_memory_used@@Base+0xd018>
  41ee94:	ldp	x29, x30, [sp], #16
  41ee98:	ret
  41ee9c:	stp	x29, x30, [sp, #-48]!
  41eea0:	str	x21, [sp, #16]
  41eea4:	stp	x20, x19, [sp, #32]
  41eea8:	mov	x29, sp
  41eeac:	mov	x20, x2
  41eeb0:	mov	x19, x1
  41eeb4:	bl	41ef38 <_obstack_memory_used@@Base+0xd0b4>
  41eeb8:	cbz	x0, 41eee4 <_obstack_memory_used@@Base+0xd060>
  41eebc:	mov	x21, x0
  41eec0:	bl	402750 <strlen@plt>
  41eec4:	cmp	x0, x20
  41eec8:	b.cs	41eef4 <_obstack_memory_used@@Base+0xd070>  // b.hs, b.nlast
  41eecc:	add	x2, x0, #0x1
  41eed0:	mov	x0, x19
  41eed4:	mov	x1, x21
  41eed8:	bl	402710 <memcpy@plt>
  41eedc:	mov	w0, wzr
  41eee0:	b	41ef14 <_obstack_memory_used@@Base+0xd090>
  41eee4:	cbz	x20, 41eeec <_obstack_memory_used@@Base+0xd068>
  41eee8:	strb	wzr, [x19]
  41eeec:	mov	w0, #0x16                  	// #22
  41eef0:	b	41ef14 <_obstack_memory_used@@Base+0xd090>
  41eef4:	cbz	x20, 41ef10 <_obstack_memory_used@@Base+0xd08c>
  41eef8:	sub	x20, x20, #0x1
  41eefc:	mov	x0, x19
  41ef00:	mov	x1, x21
  41ef04:	mov	x2, x20
  41ef08:	bl	402710 <memcpy@plt>
  41ef0c:	strb	wzr, [x19, x20]
  41ef10:	mov	w0, #0x22                  	// #34
  41ef14:	ldp	x20, x19, [sp, #32]
  41ef18:	ldr	x21, [sp, #16]
  41ef1c:	ldp	x29, x30, [sp], #48
  41ef20:	ret
  41ef24:	stp	x29, x30, [sp, #-16]!
  41ef28:	mov	x29, sp
  41ef2c:	bl	41ef38 <_obstack_memory_used@@Base+0xd0b4>
  41ef30:	ldp	x29, x30, [sp], #16
  41ef34:	ret
  41ef38:	stp	x29, x30, [sp, #-16]!
  41ef3c:	mov	x1, xzr
  41ef40:	mov	x29, sp
  41ef44:	bl	402e10 <setlocale@plt>
  41ef48:	ldp	x29, x30, [sp], #16
  41ef4c:	ret
  41ef50:	mov	w8, w0
  41ef54:	cmp	w0, #0x26
  41ef58:	mov	w0, wzr
  41ef5c:	b.hi	41ef7c <_obstack_memory_used@@Base+0xd0f8>  // b.pmore
  41ef60:	mov	w9, w8
  41ef64:	mov	w10, #0x1                   	// #1
  41ef68:	lsl	x9, x10, x9
  41ef6c:	mov	x10, #0x410000              	// #4259840
  41ef70:	movk	x10, #0x40, lsl #32
  41ef74:	tst	x9, x10
  41ef78:	b.ne	41ef84 <_obstack_memory_used@@Base+0xd100>  // b.any
  41ef7c:	cmp	w8, #0x5f
  41ef80:	b.ne	41ef88 <_obstack_memory_used@@Base+0xd104>  // b.any
  41ef84:	ret
  41ef88:	mov	w0, #0x1                   	// #1
  41ef8c:	ret
  41ef90:	stp	x29, x30, [sp, #-64]!
  41ef94:	mov	x29, sp
  41ef98:	stp	x19, x20, [sp, #16]
  41ef9c:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x1f17c>
  41efa0:	add	x20, x20, #0xde0
  41efa4:	stp	x21, x22, [sp, #32]
  41efa8:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x1f17c>
  41efac:	add	x21, x21, #0xdd8
  41efb0:	sub	x20, x20, x21
  41efb4:	mov	w22, w0
  41efb8:	stp	x23, x24, [sp, #48]
  41efbc:	mov	x23, x1
  41efc0:	mov	x24, x2
  41efc4:	bl	4026c8 <mbrtowc@plt-0x38>
  41efc8:	cmp	xzr, x20, asr #3
  41efcc:	b.eq	41eff8 <_obstack_memory_used@@Base+0xd174>  // b.none
  41efd0:	asr	x20, x20, #3
  41efd4:	mov	x19, #0x0                   	// #0
  41efd8:	ldr	x3, [x21, x19, lsl #3]
  41efdc:	mov	x2, x24
  41efe0:	add	x19, x19, #0x1
  41efe4:	mov	x1, x23
  41efe8:	mov	w0, w22
  41efec:	blr	x3
  41eff0:	cmp	x20, x19
  41eff4:	b.ne	41efd8 <_obstack_memory_used@@Base+0xd154>  // b.any
  41eff8:	ldp	x19, x20, [sp, #16]
  41effc:	ldp	x21, x22, [sp, #32]
  41f000:	ldp	x23, x24, [sp, #48]
  41f004:	ldp	x29, x30, [sp], #64
  41f008:	ret
  41f00c:	nop
  41f010:	ret
  41f014:	nop
  41f018:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x2017c>
  41f01c:	mov	x1, #0x0                   	// #0
  41f020:	ldr	x2, [x2, #936]
  41f024:	b	4027f0 <__cxa_atexit@plt>
  41f028:	mov	x2, x1
  41f02c:	mov	w1, w0
  41f030:	mov	w0, #0x0                   	// #0
  41f034:	b	402cf0 <__fxstat@plt>
  41f038:	mov	x2, x1
  41f03c:	mov	x1, x0
  41f040:	mov	w0, #0x0                   	// #0
  41f044:	b	402ca0 <__lxstat@plt>

Disassembly of section .fini:

000000000041f048 <.fini>:
  41f048:	stp	x29, x30, [sp, #-16]!
  41f04c:	mov	x29, sp
  41f050:	ldp	x29, x30, [sp], #16
  41f054:	ret
