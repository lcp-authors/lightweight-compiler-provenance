
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002068 <.init>:
    2068:	stp	x29, x30, [sp, #-16]!
    206c:	mov	x29, sp
    2070:	bl	21b0 <printf@plt+0x10>
    2074:	ldp	x29, x30, [sp], #16
    2078:	ret

Disassembly of section .plt:

0000000000002080 <memcpy@plt-0x20>:
    2080:	stp	x16, x30, [sp, #-16]!
    2084:	adrp	x16, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    2088:	ldr	x17, [x16, #4088]
    208c:	add	x16, x16, #0xff8
    2090:	br	x17
    2094:	nop
    2098:	nop
    209c:	nop

00000000000020a0 <memcpy@plt>:
    20a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16]
    20a8:	add	x16, x16, #0x0
    20ac:	br	x17

00000000000020b0 <strtok@plt>:
    20b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #8]
    20b8:	add	x16, x16, #0x8
    20bc:	br	x17

00000000000020c0 <strlen@plt>:
    20c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #16]
    20c8:	add	x16, x16, #0x10
    20cc:	br	x17

00000000000020d0 <__cxa_finalize@plt>:
    20d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #24]
    20d8:	add	x16, x16, #0x18
    20dc:	br	x17

00000000000020e0 <qsort@plt>:
    20e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #32]
    20e8:	add	x16, x16, #0x20
    20ec:	br	x17

00000000000020f0 <sqrt@plt>:
    20f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #40]
    20f8:	add	x16, x16, #0x28
    20fc:	br	x17

0000000000002100 <malloc@plt>:
    2100:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #48]
    2108:	add	x16, x16, #0x30
    210c:	br	x17

0000000000002110 <memset@plt>:
    2110:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #56]
    2118:	add	x16, x16, #0x38
    211c:	br	x17

0000000000002120 <wcslen@plt>:
    2120:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #64]
    2128:	add	x16, x16, #0x40
    212c:	br	x17

0000000000002130 <__gmon_start__@plt>:
    2130:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #72]
    2138:	add	x16, x16, #0x48
    213c:	br	x17

0000000000002140 <PyModule_Create2@plt>:
    2140:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #80]
    2148:	add	x16, x16, #0x50
    214c:	br	x17

0000000000002150 <PyArg_ParseTuple@plt>:
    2150:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #88]
    2158:	add	x16, x16, #0x58
    215c:	br	x17

0000000000002160 <free@plt>:
    2160:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #96]
    2168:	add	x16, x16, #0x60
    216c:	br	x17

0000000000002170 <strchr@plt>:
    2170:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #104]
    2178:	add	x16, x16, #0x68
    217c:	br	x17

0000000000002180 <strcpy@plt>:
    2180:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #112]
    2188:	add	x16, x16, #0x70
    218c:	br	x17

0000000000002190 <vprintf@plt>:
    2190:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #120]
    2198:	add	x16, x16, #0x78
    219c:	br	x17

00000000000021a0 <printf@plt>:
    21a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #128]
    21a8:	add	x16, x16, #0x80
    21ac:	br	x17

Disassembly of section .text:

00000000000021b0 <_testfunc_cbk_reg_int@@Base-0xd4>:
    21b0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    21b4:	ldr	x0, [x0, #4000]
    21b8:	cbz	x0, 21c0 <printf@plt+0x20>
    21bc:	b	2130 <__gmon_start__@plt>
    21c0:	ret
    21c4:	nop
    21c8:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x12dac>
    21cc:	add	x0, x0, #0x1c0
    21d0:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x12dac>
    21d4:	add	x1, x1, #0x1c0
    21d8:	cmp	x1, x0
    21dc:	b.eq	21f4 <printf@plt+0x54>  // b.none
    21e0:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    21e4:	ldr	x1, [x1, #3960]
    21e8:	cbz	x1, 21f4 <printf@plt+0x54>
    21ec:	mov	x16, x1
    21f0:	br	x16
    21f4:	ret
    21f8:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x12dac>
    21fc:	add	x0, x0, #0x1c0
    2200:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x12dac>
    2204:	add	x1, x1, #0x1c0
    2208:	sub	x1, x1, x0
    220c:	lsr	x2, x1, #63
    2210:	add	x1, x2, x1, asr #3
    2214:	cmp	xzr, x1, asr #1
    2218:	asr	x1, x1, #1
    221c:	b.eq	2234 <printf@plt+0x94>  // b.none
    2220:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    2224:	ldr	x2, [x2, #4048]
    2228:	cbz	x2, 2234 <printf@plt+0x94>
    222c:	mov	x16, x2
    2230:	br	x16
    2234:	ret
    2238:	stp	x29, x30, [sp, #-32]!
    223c:	mov	x29, sp
    2240:	str	x19, [sp, #16]
    2244:	adrp	x19, 17000 <PyInit__ctypes_test@@Base+0x12dac>
    2248:	ldrb	w0, [x19, #448]
    224c:	cbnz	w0, 2274 <printf@plt+0xd4>
    2250:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    2254:	ldr	x0, [x0, #3968]
    2258:	cbz	x0, 2268 <printf@plt+0xc8>
    225c:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x12dac>
    2260:	ldr	x0, [x0, #136]
    2264:	bl	20d0 <__cxa_finalize@plt>
    2268:	bl	21c8 <printf@plt+0x28>
    226c:	mov	w0, #0x1                   	// #1
    2270:	strb	w0, [x19, #448]
    2274:	ldr	x19, [sp, #16]
    2278:	ldp	x29, x30, [sp], #32
    227c:	ret
    2280:	b	21f8 <printf@plt+0x58>

0000000000002284 <_testfunc_cbk_reg_int@@Base>:
    2284:	sub	sp, sp, #0x30
    2288:	stp	x29, x30, [sp, #32]
    228c:	add	x29, sp, #0x20
    2290:	stur	w0, [x29, #-4]
    2294:	stur	w1, [x29, #-8]
    2298:	stur	w2, [x29, #-12]
    229c:	str	w3, [sp, #16]
    22a0:	str	w4, [sp, #12]
    22a4:	str	x5, [sp]
    22a8:	ldr	x8, [sp]
    22ac:	ldur	w9, [x29, #-4]
    22b0:	ldur	w10, [x29, #-4]
    22b4:	mul	w0, w9, w10
    22b8:	ldur	w9, [x29, #-8]
    22bc:	ldur	w10, [x29, #-8]
    22c0:	mul	w1, w9, w10
    22c4:	ldur	w9, [x29, #-12]
    22c8:	ldur	w10, [x29, #-12]
    22cc:	mul	w2, w9, w10
    22d0:	ldr	w9, [sp, #16]
    22d4:	ldr	w10, [sp, #16]
    22d8:	mul	w3, w9, w10
    22dc:	ldr	w9, [sp, #12]
    22e0:	ldr	w10, [sp, #12]
    22e4:	mul	w4, w9, w10
    22e8:	blr	x8
    22ec:	ldp	x29, x30, [sp, #32]
    22f0:	add	sp, sp, #0x30
    22f4:	ret

00000000000022f8 <_testfunc_cbk_reg_double@@Base>:
    22f8:	sub	sp, sp, #0x40
    22fc:	stp	x29, x30, [sp, #48]
    2300:	add	x29, sp, #0x30
    2304:	stur	d0, [x29, #-8]
    2308:	stur	d1, [x29, #-16]
    230c:	str	d2, [sp, #24]
    2310:	str	d3, [sp, #16]
    2314:	str	d4, [sp, #8]
    2318:	str	x0, [sp]
    231c:	ldr	x8, [sp]
    2320:	ldur	d0, [x29, #-8]
    2324:	ldur	d1, [x29, #-8]
    2328:	fmul	d0, d0, d1
    232c:	ldur	d1, [x29, #-16]
    2330:	ldur	d2, [x29, #-16]
    2334:	fmul	d1, d1, d2
    2338:	ldr	d2, [sp, #24]
    233c:	ldr	d3, [sp, #24]
    2340:	fmul	d2, d2, d3
    2344:	ldr	d3, [sp, #16]
    2348:	ldr	d4, [sp, #16]
    234c:	fmul	d3, d3, d4
    2350:	ldr	d4, [sp, #8]
    2354:	ldr	d5, [sp, #8]
    2358:	fmul	d4, d4, d5
    235c:	blr	x8
    2360:	ldp	x29, x30, [sp, #48]
    2364:	add	sp, sp, #0x40
    2368:	ret

000000000000236c <_testfunc_cbk_large_struct@@Base>:
    236c:	sub	sp, sp, #0x30
    2370:	stp	x29, x30, [sp, #32]
    2374:	add	x29, sp, #0x20
    2378:	mov	x8, sp
    237c:	stur	x1, [x29, #-8]
    2380:	ldur	x9, [x29, #-8]
    2384:	ldr	q0, [x0]
    2388:	str	q0, [sp]
    238c:	ldr	x10, [x0, #16]
    2390:	str	x10, [sp, #16]
    2394:	mov	x0, x8
    2398:	blr	x9
    239c:	ldp	x29, x30, [sp, #32]
    23a0:	add	sp, sp, #0x30
    23a4:	ret

00000000000023a8 <_testfunc_large_struct_update_value@@Base>:
    23a8:	mov	x8, #0xf00d                	// #61453
    23ac:	movk	x8, #0xbad, lsl #16
    23b0:	str	x8, [x0]
    23b4:	str	x8, [x0, #8]
    23b8:	str	x8, [x0, #16]
    23bc:	ret

00000000000023c0 <_testfunc_reg_struct_update_value@@Base>:
    23c0:	sub	sp, sp, #0x10
    23c4:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    23c8:	ldr	x8, [x8, #4040]
    23cc:	mov	w9, #0xf00d                	// #61453
    23d0:	movk	w9, #0xbad, lsl #16
    23d4:	str	x0, [sp, #8]
    23d8:	ldr	x10, [sp, #8]
    23dc:	str	x10, [x8]
    23e0:	str	w9, [sp, #8]
    23e4:	str	w9, [sp, #12]
    23e8:	add	sp, sp, #0x10
    23ec:	ret

00000000000023f0 <_testfunc_array_in_struct1@@Base>:
    23f0:	sub	sp, sp, #0x20
    23f4:	str	x0, [sp, #16]
    23f8:	str	x1, [sp, #24]
    23fc:	str	wzr, [sp, #12]
    2400:	str	wzr, [sp, #8]
    2404:	ldr	w8, [sp, #8]
    2408:	cmp	w8, #0x10
    240c:	b.cs	243c <_testfunc_array_in_struct1@@Base+0x4c>  // b.hs, b.nlast
    2410:	ldr	w8, [sp, #8]
    2414:	mov	w9, w8
    2418:	add	x10, sp, #0x10
    241c:	ldrb	w8, [x10, x9]
    2420:	ldr	w11, [sp, #12]
    2424:	add	w8, w11, w8
    2428:	str	w8, [sp, #12]
    242c:	ldr	w8, [sp, #8]
    2430:	add	w8, w8, #0x1
    2434:	str	w8, [sp, #8]
    2438:	b	2404 <_testfunc_array_in_struct1@@Base+0x14>
    243c:	str	xzr, [sp, #16]
    2440:	str	xzr, [sp, #24]
    2444:	ldr	w0, [sp, #12]
    2448:	add	sp, sp, #0x20
    244c:	ret

0000000000002450 <_testfunc_array_in_struct2@@Base>:
    2450:	sub	sp, sp, #0x20
    2454:	fmov	d2, xzr
    2458:	str	d0, [sp, #16]
    245c:	str	d1, [sp, #24]
    2460:	str	d2, [sp, #8]
    2464:	str	wzr, [sp, #4]
    2468:	ldr	w8, [sp, #4]
    246c:	cmp	w8, #0x2
    2470:	b.cs	24a0 <_testfunc_array_in_struct2@@Base+0x50>  // b.hs, b.nlast
    2474:	ldr	w8, [sp, #4]
    2478:	mov	w9, w8
    247c:	add	x10, sp, #0x10
    2480:	ldr	d0, [x10, x9, lsl #3]
    2484:	ldr	d1, [sp, #8]
    2488:	fadd	d0, d1, d0
    248c:	str	d0, [sp, #8]
    2490:	ldr	w8, [sp, #4]
    2494:	add	w8, w8, #0x1
    2498:	str	w8, [sp, #4]
    249c:	b	2468 <_testfunc_array_in_struct2@@Base+0x18>
    24a0:	str	xzr, [sp, #16]
    24a4:	str	xzr, [sp, #24]
    24a8:	ldr	d0, [sp, #8]
    24ac:	add	sp, sp, #0x20
    24b0:	ret

00000000000024b4 <_testfunc_array_in_struct2a@@Base>:
    24b4:	sub	sp, sp, #0x20
    24b8:	fmov	d4, xzr
    24bc:	str	s0, [sp, #16]
    24c0:	str	s1, [sp, #20]
    24c4:	str	s2, [sp, #24]
    24c8:	str	s3, [sp, #28]
    24cc:	str	d4, [sp, #8]
    24d0:	str	wzr, [sp, #4]
    24d4:	ldr	w8, [sp, #4]
    24d8:	cmp	w8, #0x2
    24dc:	b.cs	2510 <_testfunc_array_in_struct2a@@Base+0x5c>  // b.hs, b.nlast
    24e0:	ldr	w8, [sp, #4]
    24e4:	mov	w9, w8
    24e8:	add	x10, sp, #0x10
    24ec:	ldr	s0, [x10, x9, lsl #2]
    24f0:	fcvt	d1, s0
    24f4:	ldr	d2, [sp, #8]
    24f8:	fadd	d1, d2, d1
    24fc:	str	d1, [sp, #8]
    2500:	ldr	w8, [sp, #4]
    2504:	add	w8, w8, #0x1
    2508:	str	w8, [sp, #4]
    250c:	b	24d4 <_testfunc_array_in_struct2a@@Base+0x20>
    2510:	str	wzr, [sp]
    2514:	ldr	w8, [sp]
    2518:	cmp	w8, #0x2
    251c:	b.cs	2554 <_testfunc_array_in_struct2a@@Base+0xa0>  // b.hs, b.nlast
    2520:	add	x8, sp, #0x10
    2524:	add	x8, x8, #0x8
    2528:	ldr	w9, [sp]
    252c:	mov	w10, w9
    2530:	ldr	s0, [x8, x10, lsl #2]
    2534:	fcvt	d1, s0
    2538:	ldr	d2, [sp, #8]
    253c:	fadd	d1, d2, d1
    2540:	str	d1, [sp, #8]
    2544:	ldr	w8, [sp]
    2548:	add	w8, w8, #0x1
    254c:	str	w8, [sp]
    2550:	b	2514 <_testfunc_array_in_struct2a@@Base+0x60>
    2554:	str	xzr, [sp, #16]
    2558:	ldr	d0, [sp, #8]
    255c:	add	sp, sp, #0x20
    2560:	ret

0000000000002564 <_testfunc_union_by_value1@@Base>:
    2564:	sub	sp, sp, #0x10
    2568:	str	x0, [sp, #8]
    256c:	ldr	x8, [sp, #8]
    2570:	ldrsw	x9, [sp, #8]
    2574:	add	x8, x8, x9
    2578:	ldrsw	x9, [sp, #12]
    257c:	add	x8, x8, x9
    2580:	str	x8, [sp]
    2584:	str	xzr, [sp, #8]
    2588:	ldr	x0, [sp]
    258c:	add	sp, sp, #0x10
    2590:	ret

0000000000002594 <_testfunc_union_by_value2@@Base>:
    2594:	sub	sp, sp, #0x20
    2598:	stp	x29, x30, [sp, #16]
    259c:	add	x29, sp, #0x10
    25a0:	mov	x2, #0x20                  	// #32
    25a4:	ldr	w8, [x0]
    25a8:	ldr	w9, [x0, #8]
    25ac:	add	w8, w8, w9
    25b0:	mov	w1, w8
    25b4:	sxtw	x10, w1
    25b8:	str	x10, [sp, #8]
    25bc:	mov	w8, wzr
    25c0:	mov	w1, w8
    25c4:	bl	2110 <memset@plt>
    25c8:	ldr	x0, [sp, #8]
    25cc:	ldp	x29, x30, [sp, #16]
    25d0:	add	sp, sp, #0x20
    25d4:	ret

00000000000025d8 <_testfunc_union_by_reference1@@Base>:
    25d8:	sub	sp, sp, #0x10
    25dc:	str	x0, [sp, #8]
    25e0:	ldr	x8, [sp, #8]
    25e4:	ldr	x8, [x8]
    25e8:	str	x8, [sp]
    25ec:	ldr	x8, [sp, #8]
    25f0:	str	xzr, [x8]
    25f4:	ldr	x0, [sp]
    25f8:	add	sp, sp, #0x10
    25fc:	ret

0000000000002600 <_testfunc_union_by_reference2@@Base>:
    2600:	sub	sp, sp, #0x10
    2604:	str	x0, [sp, #8]
    2608:	ldr	x8, [sp, #8]
    260c:	ldr	w9, [x8]
    2610:	ldr	x8, [sp, #8]
    2614:	ldr	w10, [x8, #4]
    2618:	add	w9, w9, w10
    261c:	mov	w0, w9
    2620:	sxtw	x8, w0
    2624:	str	x8, [sp]
    2628:	ldr	x8, [sp, #8]
    262c:	str	xzr, [x8]
    2630:	ldr	x0, [sp]
    2634:	add	sp, sp, #0x10
    2638:	ret

000000000000263c <_testfunc_union_by_reference3@@Base>:
    263c:	sub	sp, sp, #0x20
    2640:	stp	x29, x30, [sp, #16]
    2644:	add	x29, sp, #0x10
    2648:	mov	x2, #0x20                  	// #32
    264c:	str	x0, [sp, #8]
    2650:	ldr	x8, [sp, #8]
    2654:	ldr	w9, [x8]
    2658:	ldr	x8, [sp, #8]
    265c:	ldr	w10, [x8, #8]
    2660:	add	w9, w9, w10
    2664:	ldr	x8, [sp, #8]
    2668:	ldr	w10, [x8, #24]
    266c:	add	w9, w9, w10
    2670:	mov	w0, w9
    2674:	sxtw	x8, w0
    2678:	str	x8, [sp]
    267c:	ldr	x0, [sp, #8]
    2680:	mov	w9, wzr
    2684:	mov	w1, w9
    2688:	bl	2110 <memset@plt>
    268c:	ldr	x0, [sp]
    2690:	ldp	x29, x30, [sp, #16]
    2694:	add	sp, sp, #0x20
    2698:	ret

000000000000269c <_testfunc_bitfield_by_value1@@Base>:
    269c:	sub	sp, sp, #0x20
    26a0:	str	x0, [sp, #16]
    26a4:	ldr	w8, [sp, #16]
    26a8:	str	w8, [sp, #28]
    26ac:	ldrb	w8, [sp, #28]
    26b0:	mov	w9, #0x7                   	// #7
    26b4:	lsl	w8, w8, #7
    26b8:	lsl	w8, w8, #24
    26bc:	mov	x10, #0x18                  	// #24
    26c0:	asr	w8, w8, #24
    26c4:	asr	w8, w8, w9
    26c8:	lsl	w8, w8, #24
    26cc:	ldrb	w9, [sp, #28]
    26d0:	mov	w11, #0x5                   	// #5
    26d4:	lsl	w9, w9, #5
    26d8:	mov	w12, #0x6                   	// #6
    26dc:	lsl	w9, w9, #24
    26e0:	mov	x0, x10
    26e4:	asr	w9, w9, w0
    26e8:	asr	w9, w9, w12
    26ec:	lsl	w9, w9, #24
    26f0:	mov	x1, x10
    26f4:	asr	w9, w9, w1
    26f8:	add	w8, w9, w8, asr #24
    26fc:	ldrb	w9, [sp, #28]
    2700:	lsl	w9, w9, #2
    2704:	lsl	w9, w9, #24
    2708:	asr	w9, w9, w10
    270c:	asr	w9, w9, w11
    2710:	lsl	w9, w9, #24
    2714:	add	w8, w8, w9, asr #24
    2718:	ldrb	w9, [sp, #28]
    271c:	sxtb	w9, w9
    2720:	asr	w9, w9, w12
    2724:	lsl	w9, w9, #24
    2728:	add	w8, w8, w9, asr #24
    272c:	mov	w2, w8
    2730:	sxtw	x13, w2
    2734:	str	x13, [sp, #8]
    2738:	str	wzr, [sp, #28]
    273c:	ldr	x0, [sp, #8]
    2740:	add	sp, sp, #0x20
    2744:	ret

0000000000002748 <_testfunc_bitfield_by_reference1@@Base>:
    2748:	sub	sp, sp, #0x10
    274c:	str	x0, [sp, #8]
    2750:	ldr	x8, [sp, #8]
    2754:	ldrb	w9, [x8]
    2758:	mov	w10, #0x7                   	// #7
    275c:	lsl	w9, w9, #7
    2760:	lsl	w9, w9, #24
    2764:	mov	x8, #0x18                  	// #24
    2768:	asr	w9, w9, #24
    276c:	asr	w9, w9, w10
    2770:	lsl	w9, w9, #24
    2774:	ldr	x11, [sp, #8]
    2778:	ldrb	w10, [x11]
    277c:	mov	w12, #0x5                   	// #5
    2780:	lsl	w10, w10, #5
    2784:	mov	w13, #0x6                   	// #6
    2788:	lsl	w10, w10, #24
    278c:	mov	x0, x8
    2790:	asr	w10, w10, w0
    2794:	asr	w10, w10, w13
    2798:	lsl	w10, w10, #24
    279c:	mov	x1, x8
    27a0:	asr	w10, w10, w1
    27a4:	add	w9, w10, w9, asr #24
    27a8:	ldr	x11, [sp, #8]
    27ac:	ldrb	w10, [x11]
    27b0:	lsl	w10, w10, #2
    27b4:	lsl	w10, w10, #24
    27b8:	asr	w8, w10, w8
    27bc:	asr	w8, w8, w12
    27c0:	lsl	w8, w8, #24
    27c4:	add	w8, w9, w8, asr #24
    27c8:	ldr	x11, [sp, #8]
    27cc:	ldrb	w9, [x11]
    27d0:	sxtb	w9, w9
    27d4:	asr	w9, w9, w13
    27d8:	lsl	w9, w9, #24
    27dc:	add	w8, w8, w9, asr #24
    27e0:	mov	w2, w8
    27e4:	sxtw	x11, w2
    27e8:	str	x11, [sp]
    27ec:	ldr	x11, [sp, #8]
    27f0:	str	wzr, [x11]
    27f4:	ldr	x0, [sp]
    27f8:	add	sp, sp, #0x10
    27fc:	ret

0000000000002800 <_testfunc_bitfield_by_reference2@@Base>:
    2800:	sub	sp, sp, #0x10
    2804:	str	x0, [sp, #8]
    2808:	ldr	x8, [sp, #8]
    280c:	ldrb	w9, [x8]
    2810:	mov	w10, #0x1                   	// #1
    2814:	and	w9, w9, #0x1
    2818:	ldr	x8, [sp, #8]
    281c:	ldrb	w11, [x8]
    2820:	lsr	w10, w11, w10
    2824:	mov	w11, #0x3                   	// #3
    2828:	and	w10, w10, #0x3
    282c:	and	w10, w10, #0xff
    2830:	add	w9, w10, w9, uxtb
    2834:	ldr	x8, [sp, #8]
    2838:	ldrb	w10, [x8]
    283c:	lsr	w10, w10, w11
    2840:	and	w10, w10, #0x7
    2844:	add	w9, w9, w10, uxtb
    2848:	ldr	x8, [sp, #8]
    284c:	ldrb	w10, [x8]
    2850:	mov	w11, #0x6                   	// #6
    2854:	lsr	w10, w10, w11
    2858:	add	w9, w9, w10, uxtb
    285c:	mov	w0, w9
    2860:	sxtw	x8, w0
    2864:	str	x8, [sp]
    2868:	ldr	x8, [sp, #8]
    286c:	str	wzr, [x8]
    2870:	ldr	x0, [sp]
    2874:	add	sp, sp, #0x10
    2878:	ret

000000000000287c <_testfunc_bitfield_by_value2@@Base>:
    287c:	sub	sp, sp, #0x20
    2880:	str	x0, [sp, #16]
    2884:	ldr	w8, [sp, #16]
    2888:	str	w8, [sp, #28]
    288c:	ldrb	w8, [sp, #28]
    2890:	mov	w9, #0x7                   	// #7
    2894:	lsl	w8, w8, #7
    2898:	lsl	w8, w8, #24
    289c:	mov	x10, #0x18                  	// #24
    28a0:	asr	w8, w8, #24
    28a4:	asr	w8, w8, w9
    28a8:	lsl	w8, w8, #24
    28ac:	ldrb	w9, [sp, #28]
    28b0:	mov	w11, #0x6                   	// #6
    28b4:	lsl	w9, w9, #6
    28b8:	lsl	w9, w9, #24
    28bc:	mov	x0, x10
    28c0:	asr	w9, w9, w0
    28c4:	asr	w9, w9, w11
    28c8:	lsl	w9, w9, #24
    28cc:	mov	x1, x10
    28d0:	asr	w9, w9, w1
    28d4:	add	w8, w9, w8, asr #24
    28d8:	ldrb	w9, [sp, #28]
    28dc:	mov	w12, #0x5                   	// #5
    28e0:	lsl	w9, w9, #5
    28e4:	lsl	w9, w9, #24
    28e8:	mov	x2, x10
    28ec:	asr	w9, w9, w2
    28f0:	asr	w9, w9, w12
    28f4:	lsl	w9, w9, #24
    28f8:	add	w8, w8, w9, asr #24
    28fc:	ldrb	w9, [sp, #28]
    2900:	lsl	w9, w9, w11
    2904:	lsl	w9, w9, #24
    2908:	asr	w9, w9, w10
    290c:	asr	w9, w9, w11
    2910:	lsl	w9, w9, #24
    2914:	add	w8, w8, w9, asr #24
    2918:	mov	w3, w8
    291c:	sxtw	x13, w3
    2920:	str	x13, [sp, #8]
    2924:	str	wzr, [sp, #28]
    2928:	ldr	x0, [sp, #8]
    292c:	add	sp, sp, #0x20
    2930:	ret

0000000000002934 <testfunc_array@@Base>:
    2934:	sub	sp, sp, #0x20
    2938:	stp	x29, x30, [sp, #16]
    293c:	add	x29, sp, #0x10
    2940:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    2944:	add	x8, x8, #0x3c0
    2948:	str	x0, [sp, #8]
    294c:	ldr	x9, [sp, #8]
    2950:	ldr	w1, [x9]
    2954:	ldr	x9, [sp, #8]
    2958:	ldr	w2, [x9, #4]
    295c:	ldr	x9, [sp, #8]
    2960:	ldr	w3, [x9, #8]
    2964:	ldr	x9, [sp, #8]
    2968:	ldr	w4, [x9, #12]
    296c:	mov	x0, x8
    2970:	bl	21a0 <printf@plt>
    2974:	ldp	x29, x30, [sp, #16]
    2978:	add	sp, sp, #0x20
    297c:	ret

0000000000002980 <testfunc_Ddd@@Base>:
    2980:	sub	sp, sp, #0x40
    2984:	stp	x29, x30, [sp, #48]
    2988:	add	x29, sp, #0x30
    298c:	stur	d0, [x29, #-8]
    2990:	stur	d1, [x29, #-16]
    2994:	ldur	d0, [x29, #-8]
    2998:	ldur	d1, [x29, #-16]
    299c:	fmul	d0, d0, d1
    29a0:	bl	6118 <PyInit__ctypes_test@@Base+0x1ec4>
    29a4:	str	q0, [sp, #16]
    29a8:	adrp	x0, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    29ac:	add	x0, x0, #0x3dc
    29b0:	sub	x1, x29, #0x8
    29b4:	sub	x2, x29, #0x10
    29b8:	bl	21a0 <printf@plt>
    29bc:	ldur	d0, [x29, #-8]
    29c0:	ldur	d1, [x29, #-16]
    29c4:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    29c8:	add	x8, x8, #0x3f2
    29cc:	str	w0, [sp, #12]
    29d0:	mov	x0, x8
    29d4:	bl	21a0 <printf@plt>
    29d8:	ldr	q0, [sp, #16]
    29dc:	ldp	x29, x30, [sp, #48]
    29e0:	add	sp, sp, #0x40
    29e4:	ret

00000000000029e8 <testfunc_DDD@@Base>:
    29e8:	sub	sp, sp, #0x50
    29ec:	stp	x29, x30, [sp, #64]
    29f0:	add	x29, sp, #0x40
    29f4:	stur	q0, [x29, #-16]
    29f8:	str	q1, [sp, #32]
    29fc:	ldur	q0, [x29, #-16]
    2a00:	ldr	q1, [sp, #32]
    2a04:	bl	56c0 <PyInit__ctypes_test@@Base+0x146c>
    2a08:	str	q0, [sp, #16]
    2a0c:	adrp	x0, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    2a10:	add	x0, x0, #0x408
    2a14:	sub	x1, x29, #0x10
    2a18:	add	x2, sp, #0x20
    2a1c:	bl	21a0 <printf@plt>
    2a20:	ldur	q0, [x29, #-16]
    2a24:	ldr	q1, [sp, #32]
    2a28:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    2a2c:	add	x8, x8, #0x41e
    2a30:	str	w0, [sp, #12]
    2a34:	mov	x0, x8
    2a38:	bl	21a0 <printf@plt>
    2a3c:	ldr	q0, [sp, #16]
    2a40:	ldp	x29, x30, [sp, #64]
    2a44:	add	sp, sp, #0x50
    2a48:	ret

0000000000002a4c <testfunc_iii@@Base>:
    2a4c:	sub	sp, sp, #0x20
    2a50:	stp	x29, x30, [sp, #16]
    2a54:	add	x29, sp, #0x10
    2a58:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    2a5c:	add	x8, x8, #0x436
    2a60:	sub	x9, x29, #0x4
    2a64:	add	x2, sp, #0x8
    2a68:	stur	w0, [x29, #-4]
    2a6c:	str	w1, [sp, #8]
    2a70:	ldur	w10, [x29, #-4]
    2a74:	ldr	w11, [sp, #8]
    2a78:	mul	w10, w10, w11
    2a7c:	str	w10, [sp, #4]
    2a80:	mov	x0, x8
    2a84:	mov	x1, x9
    2a88:	bl	21a0 <printf@plt>
    2a8c:	ldr	w10, [sp, #4]
    2a90:	mov	w0, w10
    2a94:	ldp	x29, x30, [sp, #16]
    2a98:	add	sp, sp, #0x20
    2a9c:	ret

0000000000002aa0 <myprintf@@Base>:
    2aa0:	sub	sp, sp, #0x130
    2aa4:	stp	x29, x30, [sp, #272]
    2aa8:	str	x28, [sp, #288]
    2aac:	add	x29, sp, #0x110
    2ab0:	str	q7, [sp, #112]
    2ab4:	str	q6, [sp, #96]
    2ab8:	str	q5, [sp, #80]
    2abc:	str	q4, [sp, #64]
    2ac0:	str	q3, [sp, #48]
    2ac4:	str	q2, [sp, #32]
    2ac8:	str	q1, [sp, #16]
    2acc:	str	q0, [sp]
    2ad0:	str	x7, [sp, #184]
    2ad4:	str	x6, [sp, #176]
    2ad8:	str	x5, [sp, #168]
    2adc:	str	x4, [sp, #160]
    2ae0:	str	x3, [sp, #152]
    2ae4:	str	x2, [sp, #144]
    2ae8:	str	x1, [sp, #136]
    2aec:	stur	x0, [x29, #-8]
    2af0:	mov	w8, #0xffffff80            	// #-128
    2af4:	stur	w8, [x29, #-20]
    2af8:	mov	w8, #0xffffffc8            	// #-56
    2afc:	stur	w8, [x29, #-24]
    2b00:	mov	x9, sp
    2b04:	add	x9, x9, #0x80
    2b08:	stur	x9, [x29, #-32]
    2b0c:	add	x9, sp, #0x88
    2b10:	add	x9, x9, #0x38
    2b14:	stur	x9, [x29, #-40]
    2b18:	add	x9, x29, #0x20
    2b1c:	stur	x9, [x29, #-48]
    2b20:	ldur	x0, [x29, #-8]
    2b24:	ldur	q0, [x29, #-48]
    2b28:	ldur	q1, [x29, #-32]
    2b2c:	stur	q1, [x29, #-64]
    2b30:	stur	q0, [x29, #-80]
    2b34:	sub	x1, x29, #0x50
    2b38:	bl	2190 <vprintf@plt>
    2b3c:	stur	w0, [x29, #-12]
    2b40:	ldur	w0, [x29, #-12]
    2b44:	ldr	x28, [sp, #288]
    2b48:	ldp	x29, x30, [sp, #272]
    2b4c:	add	sp, sp, #0x130
    2b50:	ret

0000000000002b54 <my_strtok@@Base>:
    2b54:	sub	sp, sp, #0x20
    2b58:	stp	x29, x30, [sp, #16]
    2b5c:	add	x29, sp, #0x10
    2b60:	str	x0, [sp, #8]
    2b64:	str	x1, [sp]
    2b68:	ldr	x0, [sp, #8]
    2b6c:	ldr	x1, [sp]
    2b70:	bl	20b0 <strtok@plt>
    2b74:	ldp	x29, x30, [sp, #16]
    2b78:	add	sp, sp, #0x20
    2b7c:	ret

0000000000002b80 <my_strchr@@Base>:
    2b80:	sub	sp, sp, #0x20
    2b84:	stp	x29, x30, [sp, #16]
    2b88:	add	x29, sp, #0x10
    2b8c:	str	x0, [sp, #8]
    2b90:	str	w1, [sp, #4]
    2b94:	ldr	x0, [sp, #8]
    2b98:	ldr	w1, [sp, #4]
    2b9c:	bl	2170 <strchr@plt>
    2ba0:	ldp	x29, x30, [sp, #16]
    2ba4:	add	sp, sp, #0x20
    2ba8:	ret

0000000000002bac <my_sqrt@@Base>:
    2bac:	sub	sp, sp, #0x20
    2bb0:	stp	x29, x30, [sp, #16]
    2bb4:	add	x29, sp, #0x10
    2bb8:	str	d0, [sp, #8]
    2bbc:	ldr	d0, [sp, #8]
    2bc0:	bl	20f0 <sqrt@plt>
    2bc4:	ldp	x29, x30, [sp, #16]
    2bc8:	add	sp, sp, #0x20
    2bcc:	ret

0000000000002bd0 <my_qsort@@Base>:
    2bd0:	sub	sp, sp, #0x30
    2bd4:	stp	x29, x30, [sp, #32]
    2bd8:	add	x29, sp, #0x20
    2bdc:	stur	x0, [x29, #-8]
    2be0:	str	x1, [sp, #16]
    2be4:	str	x2, [sp, #8]
    2be8:	str	x3, [sp]
    2bec:	ldur	x0, [x29, #-8]
    2bf0:	ldr	x1, [sp, #16]
    2bf4:	ldr	x2, [sp, #8]
    2bf8:	ldr	x3, [sp]
    2bfc:	bl	20e0 <qsort@plt>
    2c00:	ldp	x29, x30, [sp, #32]
    2c04:	add	sp, sp, #0x30
    2c08:	ret

0000000000002c0c <_testfunc_ai8@@Base>:
    2c0c:	sub	sp, sp, #0x10
    2c10:	str	x0, [sp, #8]
    2c14:	ldr	x0, [sp, #8]
    2c18:	add	sp, sp, #0x10
    2c1c:	ret

0000000000002c20 <_testfunc_v@@Base>:
    2c20:	sub	sp, sp, #0x10
    2c24:	str	w0, [sp, #12]
    2c28:	str	w1, [sp, #8]
    2c2c:	str	x2, [sp]
    2c30:	ldr	w8, [sp, #12]
    2c34:	ldr	w9, [sp, #8]
    2c38:	add	w8, w8, w9
    2c3c:	ldr	x10, [sp]
    2c40:	str	w8, [x10]
    2c44:	add	sp, sp, #0x10
    2c48:	ret

0000000000002c4c <_testfunc_i_bhilfd@@Base>:
    2c4c:	sub	sp, sp, #0x20
    2c50:	strb	w0, [sp, #31]
    2c54:	strh	w1, [sp, #28]
    2c58:	str	w2, [sp, #24]
    2c5c:	str	x3, [sp, #16]
    2c60:	str	s0, [sp, #12]
    2c64:	str	d1, [sp]
    2c68:	ldrsb	w8, [sp, #31]
    2c6c:	ldrsh	w9, [sp, #28]
    2c70:	add	w8, w8, w9
    2c74:	ldr	w9, [sp, #24]
    2c78:	add	w8, w8, w9
    2c7c:	ldr	x10, [sp, #16]
    2c80:	add	x10, x10, w8, sxtw
    2c84:	scvtf	s0, x10
    2c88:	ldr	s2, [sp, #12]
    2c8c:	fadd	s0, s0, s2
    2c90:	fcvt	d1, s0
    2c94:	ldr	d3, [sp]
    2c98:	fadd	d1, d1, d3
    2c9c:	fcvtzs	w0, d1
    2ca0:	add	sp, sp, #0x20
    2ca4:	ret

0000000000002ca8 <_testfunc_f_bhilfd@@Base>:
    2ca8:	sub	sp, sp, #0x20
    2cac:	strb	w0, [sp, #31]
    2cb0:	strh	w1, [sp, #28]
    2cb4:	str	w2, [sp, #24]
    2cb8:	str	x3, [sp, #16]
    2cbc:	str	s0, [sp, #12]
    2cc0:	str	d1, [sp]
    2cc4:	ldrsb	w8, [sp, #31]
    2cc8:	ldrsh	w9, [sp, #28]
    2ccc:	add	w8, w8, w9
    2cd0:	ldr	w9, [sp, #24]
    2cd4:	add	w8, w8, w9
    2cd8:	ldr	x10, [sp, #16]
    2cdc:	add	x10, x10, w8, sxtw
    2ce0:	scvtf	s0, x10
    2ce4:	ldr	s2, [sp, #12]
    2ce8:	fadd	s0, s0, s2
    2cec:	fcvt	d1, s0
    2cf0:	ldr	d3, [sp]
    2cf4:	fadd	d1, d1, d3
    2cf8:	fcvt	s0, d1
    2cfc:	add	sp, sp, #0x20
    2d00:	ret

0000000000002d04 <_testfunc_d_bhilfd@@Base>:
    2d04:	sub	sp, sp, #0x20
    2d08:	strb	w0, [sp, #31]
    2d0c:	strh	w1, [sp, #28]
    2d10:	str	w2, [sp, #24]
    2d14:	str	x3, [sp, #16]
    2d18:	str	s0, [sp, #12]
    2d1c:	str	d1, [sp]
    2d20:	ldrsb	w8, [sp, #31]
    2d24:	ldrsh	w9, [sp, #28]
    2d28:	add	w8, w8, w9
    2d2c:	ldr	w9, [sp, #24]
    2d30:	add	w8, w8, w9
    2d34:	ldr	x10, [sp, #16]
    2d38:	add	x10, x10, w8, sxtw
    2d3c:	scvtf	s0, x10
    2d40:	ldr	s2, [sp, #12]
    2d44:	fadd	s0, s0, s2
    2d48:	fcvt	d1, s0
    2d4c:	ldr	d3, [sp]
    2d50:	fadd	d0, d1, d3
    2d54:	add	sp, sp, #0x20
    2d58:	ret

0000000000002d5c <_testfunc_D_bhilfD@@Base>:
    2d5c:	sub	sp, sp, #0x40
    2d60:	stp	x29, x30, [sp, #48]
    2d64:	add	x29, sp, #0x30
    2d68:	sturb	w0, [x29, #-4]
    2d6c:	sturh	w1, [x29, #-8]
    2d70:	stur	w2, [x29, #-12]
    2d74:	str	x3, [sp, #24]
    2d78:	str	s0, [sp, #20]
    2d7c:	str	q1, [sp]
    2d80:	ldursb	w8, [x29, #-4]
    2d84:	ldursh	w9, [x29, #-8]
    2d88:	add	w8, w8, w9
    2d8c:	ldur	w9, [x29, #-12]
    2d90:	add	w8, w8, w9
    2d94:	ldr	x10, [sp, #24]
    2d98:	add	x10, x10, w8, sxtw
    2d9c:	scvtf	s0, x10
    2da0:	ldr	s2, [sp, #20]
    2da4:	fadd	s0, s0, s2
    2da8:	bl	5fe0 <PyInit__ctypes_test@@Base+0x1d8c>
    2dac:	ldr	q1, [sp]
    2db0:	bl	4278 <PyInit__ctypes_test@@Base+0x24>
    2db4:	ldp	x29, x30, [sp, #48]
    2db8:	add	sp, sp, #0x40
    2dbc:	ret

0000000000002dc0 <_testfunc_p_p@@Base>:
    2dc0:	sub	sp, sp, #0x10
    2dc4:	str	x0, [sp, #8]
    2dc8:	ldr	x0, [sp, #8]
    2dcc:	add	sp, sp, #0x10
    2dd0:	ret

0000000000002dd4 <_testfunc_c_p_p@@Base>:
    2dd4:	sub	sp, sp, #0x10
    2dd8:	str	x0, [sp, #8]
    2ddc:	str	x1, [sp]
    2de0:	ldr	x8, [sp]
    2de4:	ldr	x9, [sp, #8]
    2de8:	ldr	w10, [x9]
    2dec:	subs	w10, w10, #0x1
    2df0:	mov	w0, w10
    2df4:	sxtw	x9, w0
    2df8:	mov	x11, #0x8                   	// #8
    2dfc:	mul	x9, x11, x9
    2e00:	add	x8, x8, x9
    2e04:	ldr	x0, [x8]
    2e08:	add	sp, sp, #0x10
    2e0c:	ret

0000000000002e10 <get_strchr@@Base>:
    2e10:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    2e14:	ldr	x0, [x0, #4016]
    2e18:	ret

0000000000002e1c <my_strdup@@Base>:
    2e1c:	sub	sp, sp, #0x30
    2e20:	stp	x29, x30, [sp, #32]
    2e24:	add	x29, sp, #0x20
    2e28:	str	x0, [sp, #16]
    2e2c:	ldr	x0, [sp, #16]
    2e30:	bl	20c0 <strlen@plt>
    2e34:	add	x0, x0, #0x1
    2e38:	bl	2100 <malloc@plt>
    2e3c:	str	x0, [sp, #8]
    2e40:	ldr	x8, [sp, #8]
    2e44:	cbnz	x8, 2e54 <my_strdup@@Base+0x38>
    2e48:	mov	x8, xzr
    2e4c:	stur	x8, [x29, #-8]
    2e50:	b	2e68 <my_strdup@@Base+0x4c>
    2e54:	ldr	x0, [sp, #8]
    2e58:	ldr	x1, [sp, #16]
    2e5c:	bl	2180 <strcpy@plt>
    2e60:	ldr	x8, [sp, #8]
    2e64:	stur	x8, [x29, #-8]
    2e68:	ldur	x0, [x29, #-8]
    2e6c:	ldp	x29, x30, [sp, #32]
    2e70:	add	sp, sp, #0x30
    2e74:	ret

0000000000002e78 <my_free@@Base>:
    2e78:	sub	sp, sp, #0x20
    2e7c:	stp	x29, x30, [sp, #16]
    2e80:	add	x29, sp, #0x10
    2e84:	str	x0, [sp, #8]
    2e88:	ldr	x0, [sp, #8]
    2e8c:	bl	2160 <free@plt>
    2e90:	ldp	x29, x30, [sp, #16]
    2e94:	add	sp, sp, #0x20
    2e98:	ret

0000000000002e9c <my_wcsdup@@Base>:
    2e9c:	sub	sp, sp, #0x40
    2ea0:	stp	x29, x30, [sp, #48]
    2ea4:	add	x29, sp, #0x30
    2ea8:	mov	x8, #0x4                   	// #4
    2eac:	stur	x0, [x29, #-16]
    2eb0:	ldur	x0, [x29, #-16]
    2eb4:	str	x8, [sp, #8]
    2eb8:	bl	2120 <wcslen@plt>
    2ebc:	str	x0, [sp, #24]
    2ec0:	ldr	x8, [sp, #24]
    2ec4:	add	x8, x8, #0x1
    2ec8:	ldr	x9, [sp, #8]
    2ecc:	mul	x0, x8, x9
    2ed0:	bl	2100 <malloc@plt>
    2ed4:	str	x0, [sp, #16]
    2ed8:	ldr	x8, [sp, #16]
    2edc:	cbnz	x8, 2eec <my_wcsdup@@Base+0x50>
    2ee0:	mov	x8, xzr
    2ee4:	stur	x8, [x29, #-8]
    2ee8:	b	2f10 <my_wcsdup@@Base+0x74>
    2eec:	ldr	x0, [sp, #16]
    2ef0:	ldur	x1, [x29, #-16]
    2ef4:	ldr	x8, [sp, #24]
    2ef8:	add	x8, x8, #0x1
    2efc:	mov	x9, #0x4                   	// #4
    2f00:	mul	x2, x8, x9
    2f04:	bl	20a0 <memcpy@plt>
    2f08:	ldr	x8, [sp, #16]
    2f0c:	stur	x8, [x29, #-8]
    2f10:	ldur	x0, [x29, #-8]
    2f14:	ldp	x29, x30, [sp, #48]
    2f18:	add	sp, sp, #0x40
    2f1c:	ret

0000000000002f20 <my_wcslen@@Base>:
    2f20:	sub	sp, sp, #0x20
    2f24:	stp	x29, x30, [sp, #16]
    2f28:	add	x29, sp, #0x10
    2f2c:	str	x0, [sp, #8]
    2f30:	ldr	x0, [sp, #8]
    2f34:	bl	2120 <wcslen@plt>
    2f38:	ldp	x29, x30, [sp, #16]
    2f3c:	add	sp, sp, #0x20
    2f40:	ret

0000000000002f44 <_testfunc_callfuncp@@Base>:
    2f44:	sub	sp, sp, #0x30
    2f48:	stp	x29, x30, [sp, #32]
    2f4c:	add	x29, sp, #0x20
    2f50:	mov	w8, #0x1                   	// #1
    2f54:	mov	w1, #0x2                   	// #2
    2f58:	mov	w9, #0x3                   	// #3
    2f5c:	mov	w10, #0x4                   	// #4
    2f60:	mov	w11, wzr
    2f64:	stur	x0, [x29, #-8]
    2f68:	ldur	x12, [x29, #-8]
    2f6c:	ldr	x12, [x12]
    2f70:	mov	w0, w8
    2f74:	stur	w9, [x29, #-12]
    2f78:	str	w10, [sp, #16]
    2f7c:	str	w11, [sp, #12]
    2f80:	blr	x12
    2f84:	ldur	x12, [x29, #-8]
    2f88:	ldr	x12, [x12, #8]
    2f8c:	ldur	w8, [x29, #-12]
    2f90:	mov	w0, w8
    2f94:	ldr	w1, [sp, #16]
    2f98:	blr	x12
    2f9c:	ldr	w8, [sp, #12]
    2fa0:	mov	w0, w8
    2fa4:	ldp	x29, x30, [sp, #32]
    2fa8:	add	sp, sp, #0x30
    2fac:	ret

0000000000002fb0 <_testfunc_deref_pointer@@Base>:
    2fb0:	sub	sp, sp, #0x10
    2fb4:	str	x0, [sp, #8]
    2fb8:	ldr	x8, [sp, #8]
    2fbc:	ldr	w0, [x8]
    2fc0:	add	sp, sp, #0x10
    2fc4:	ret

0000000000002fc8 <_testfunc_callback_with_pointer@@Base>:
    2fc8:	sub	sp, sp, #0x50
    2fcc:	stp	x29, x30, [sp, #64]
    2fd0:	add	x29, sp, #0x40
    2fd4:	adrp	x1, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    2fd8:	add	x1, x1, #0x388
    2fdc:	mov	x2, #0x28                  	// #40
    2fe0:	add	x8, sp, #0x10
    2fe4:	stur	x0, [x29, #-8]
    2fe8:	mov	x0, x8
    2fec:	str	x8, [sp, #8]
    2ff0:	bl	20a0 <memcpy@plt>
    2ff4:	ldur	x8, [x29, #-8]
    2ff8:	ldr	x0, [sp, #8]
    2ffc:	blr	x8
    3000:	ldp	x29, x30, [sp, #64]
    3004:	add	sp, sp, #0x50
    3008:	ret

000000000000300c <_testfunc_q_bhilfdq@@Base>:
    300c:	sub	sp, sp, #0x30
    3010:	strb	w0, [sp, #47]
    3014:	strh	w1, [sp, #44]
    3018:	str	w2, [sp, #40]
    301c:	str	x3, [sp, #32]
    3020:	str	s0, [sp, #28]
    3024:	str	d1, [sp, #16]
    3028:	str	x4, [sp, #8]
    302c:	ldrsb	w8, [sp, #47]
    3030:	ldrsh	w9, [sp, #44]
    3034:	add	w8, w8, w9
    3038:	ldr	w9, [sp, #40]
    303c:	add	w8, w8, w9
    3040:	ldr	x10, [sp, #32]
    3044:	add	x10, x10, w8, sxtw
    3048:	scvtf	s0, x10
    304c:	ldr	s2, [sp, #28]
    3050:	fadd	s0, s0, s2
    3054:	fcvt	d1, s0
    3058:	ldr	d3, [sp, #16]
    305c:	fadd	d1, d1, d3
    3060:	ldr	x10, [sp, #8]
    3064:	scvtf	d3, x10
    3068:	fadd	d1, d1, d3
    306c:	fcvtzs	x0, d1
    3070:	add	sp, sp, #0x30
    3074:	ret

0000000000003078 <_testfunc_q_bhilfd@@Base>:
    3078:	sub	sp, sp, #0x20
    307c:	strb	w0, [sp, #31]
    3080:	strh	w1, [sp, #28]
    3084:	str	w2, [sp, #24]
    3088:	str	x3, [sp, #16]
    308c:	str	s0, [sp, #12]
    3090:	str	d1, [sp]
    3094:	ldrsb	w8, [sp, #31]
    3098:	ldrsh	w9, [sp, #28]
    309c:	add	w8, w8, w9
    30a0:	ldr	w9, [sp, #24]
    30a4:	add	w8, w8, w9
    30a8:	ldr	x10, [sp, #16]
    30ac:	add	x10, x10, w8, sxtw
    30b0:	scvtf	s0, x10
    30b4:	ldr	s2, [sp, #12]
    30b8:	fadd	s0, s0, s2
    30bc:	fcvt	d1, s0
    30c0:	ldr	d3, [sp]
    30c4:	fadd	d1, d1, d3
    30c8:	fcvtzs	x0, d1
    30cc:	add	sp, sp, #0x20
    30d0:	ret

00000000000030d4 <_testfunc_callback_i_if@@Base>:
    30d4:	sub	sp, sp, #0x30
    30d8:	stp	x29, x30, [sp, #32]
    30dc:	add	x29, sp, #0x20
    30e0:	stur	w0, [x29, #-4]
    30e4:	str	x1, [sp, #16]
    30e8:	str	wzr, [sp, #12]
    30ec:	ldur	w8, [x29, #-4]
    30f0:	cbz	w8, 3120 <_testfunc_callback_i_if@@Base+0x4c>
    30f4:	ldr	x8, [sp, #16]
    30f8:	ldur	w0, [x29, #-4]
    30fc:	blr	x8
    3100:	ldr	w9, [sp, #12]
    3104:	add	w9, w9, w0
    3108:	str	w9, [sp, #12]
    310c:	ldur	w9, [x29, #-4]
    3110:	mov	w10, #0x2                   	// #2
    3114:	sdiv	w9, w9, w10
    3118:	stur	w9, [x29, #-4]
    311c:	b	30ec <_testfunc_callback_i_if@@Base+0x18>
    3120:	ldr	w0, [sp, #12]
    3124:	ldp	x29, x30, [sp, #32]
    3128:	add	sp, sp, #0x30
    312c:	ret

0000000000003130 <_testfunc_callback_q_qf@@Base>:
    3130:	sub	sp, sp, #0x30
    3134:	stp	x29, x30, [sp, #32]
    3138:	add	x29, sp, #0x20
    313c:	stur	x0, [x29, #-8]
    3140:	str	x1, [sp, #16]
    3144:	str	xzr, [sp, #8]
    3148:	ldur	x8, [x29, #-8]
    314c:	cbz	x8, 317c <_testfunc_callback_q_qf@@Base+0x4c>
    3150:	ldr	x8, [sp, #16]
    3154:	ldur	x0, [x29, #-8]
    3158:	blr	x8
    315c:	ldr	x8, [sp, #8]
    3160:	add	x8, x8, x0
    3164:	str	x8, [sp, #8]
    3168:	ldur	x8, [x29, #-8]
    316c:	mov	x9, #0x2                   	// #2
    3170:	sdiv	x8, x8, x9
    3174:	stur	x8, [x29, #-8]
    3178:	b	3148 <_testfunc_callback_q_qf@@Base+0x18>
    317c:	ldr	x0, [sp, #8]
    3180:	ldp	x29, x30, [sp, #32]
    3184:	add	sp, sp, #0x30
    3188:	ret

000000000000318c <getSPAMANDEGGS@@Base>:
    318c:	sub	sp, sp, #0x10
    3190:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3194:	ldr	x8, [x8, #3992]
    3198:	mov	w9, #0x1                   	// #1
    319c:	str	x0, [sp, #8]
    31a0:	ldr	x10, [sp, #8]
    31a4:	str	x8, [x10]
    31a8:	mov	w0, w9
    31ac:	add	sp, sp, #0x10
    31b0:	ret

00000000000031b4 <_testfunc_byval@@Base>:
    31b4:	sub	sp, sp, #0x10
    31b8:	str	x0, [sp, #8]
    31bc:	str	x1, [sp]
    31c0:	ldr	x8, [sp]
    31c4:	cbz	x8, 31e0 <_testfunc_byval@@Base+0x2c>
    31c8:	ldr	w8, [sp, #8]
    31cc:	ldr	x9, [sp]
    31d0:	str	w8, [x9]
    31d4:	ldr	w8, [sp, #12]
    31d8:	ldr	x9, [sp]
    31dc:	str	w8, [x9, #4]
    31e0:	ldr	w8, [sp, #8]
    31e4:	ldr	w9, [sp, #12]
    31e8:	add	w0, w8, w9
    31ec:	add	sp, sp, #0x10
    31f0:	ret

00000000000031f4 <get_an_integer@@Base>:
    31f4:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    31f8:	ldr	x8, [x8, #4056]
    31fc:	ldr	w0, [x8]
    3200:	ret

0000000000003204 <integrate@@Base>:
    3204:	sub	sp, sp, #0x50
    3208:	stp	x29, x30, [sp, #64]
    320c:	add	x29, sp, #0x40
    3210:	fmov	d2, xzr
    3214:	fmov	d3, #5.000000000000000000e-01
    3218:	stur	d0, [x29, #-8]
    321c:	stur	d1, [x29, #-16]
    3220:	stur	x0, [x29, #-24]
    3224:	str	x1, [sp, #32]
    3228:	str	d2, [sp, #16]
    322c:	ldur	d0, [x29, #-16]
    3230:	ldur	d1, [x29, #-8]
    3234:	fsub	d0, d0, d1
    3238:	ldr	x8, [sp, #32]
    323c:	scvtf	d1, x8
    3240:	fdiv	d0, d0, d1
    3244:	str	d0, [sp, #8]
    3248:	ldur	d0, [x29, #-8]
    324c:	ldr	d1, [sp, #8]
    3250:	fmul	d1, d3, d1
    3254:	fadd	d0, d0, d1
    3258:	str	d0, [sp, #24]
    325c:	ldur	d0, [x29, #-16]
    3260:	ldr	d1, [sp, #24]
    3264:	fsub	d0, d0, d1
    3268:	ldr	d1, [sp, #24]
    326c:	ldur	d2, [x29, #-8]
    3270:	fsub	d1, d1, d2
    3274:	fmul	d0, d0, d1
    3278:	fcmp	d0, #0.0
    327c:	cset	w8, gt
    3280:	tbnz	w8, #0, 3288 <integrate@@Base+0x84>
    3284:	b	32b4 <integrate@@Base+0xb0>
    3288:	ldur	x8, [x29, #-24]
    328c:	ldr	d0, [sp, #24]
    3290:	blr	x8
    3294:	ldr	d1, [sp, #16]
    3298:	fadd	d0, d1, d0
    329c:	str	d0, [sp, #16]
    32a0:	ldr	d0, [sp, #8]
    32a4:	ldr	d1, [sp, #24]
    32a8:	fadd	d0, d1, d0
    32ac:	str	d0, [sp, #24]
    32b0:	b	325c <integrate@@Base+0x58>
    32b4:	ldr	d0, [sp, #16]
    32b8:	ldr	x8, [sp, #32]
    32bc:	scvtf	d1, x8
    32c0:	fdiv	d0, d0, d1
    32c4:	ldp	x29, x30, [sp, #64]
    32c8:	add	sp, sp, #0x50
    32cc:	ret
    32d0:	sub	sp, sp, #0x40
    32d4:	stp	x29, x30, [sp, #48]
    32d8:	add	x29, sp, #0x30
    32dc:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    32e0:	add	x8, x8, #0x470
    32e4:	adrp	x9, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    32e8:	add	x9, x9, #0x485
    32ec:	mov	w10, #0x20                  	// #32
    32f0:	adrp	x11, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    32f4:	add	x11, x11, #0x48e
    32f8:	stur	x0, [x29, #-8]
    32fc:	stur	x1, [x29, #-16]
    3300:	ldur	x1, [x29, #-8]
    3304:	ldur	x2, [x29, #-16]
    3308:	mov	x0, x8
    330c:	str	x9, [sp, #16]
    3310:	str	w10, [sp, #12]
    3314:	str	x11, [sp]
    3318:	bl	21a0 <printf@plt>
    331c:	ldr	x8, [sp, #16]
    3320:	mov	x0, x8
    3324:	bl	21a0 <printf@plt>
    3328:	ldur	x8, [x29, #-8]
    332c:	ldr	w10, [sp, #12]
    3330:	mov	w0, w10
    3334:	blr	x8
    3338:	str	x0, [sp, #24]
    333c:	ldur	x8, [x29, #-16]
    3340:	ldr	x0, [sp, #24]
    3344:	blr	x8
    3348:	ldr	x1, [sp, #24]
    334c:	ldr	x0, [sp]
    3350:	bl	21a0 <printf@plt>
    3354:	ldp	x29, x30, [sp, #48]
    3358:	add	sp, sp, #0x40
    335c:	ret

0000000000003360 <library_get@@Base>:
    3360:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3364:	ldr	x0, [x0, #4064]
    3368:	ret

000000000000336c <py_func_si@@Base>:
    336c:	sub	sp, sp, #0x40
    3370:	stp	x29, x30, [sp, #48]
    3374:	add	x29, sp, #0x30
    3378:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    337c:	add	x8, x8, #0x4b8
    3380:	add	x2, sp, #0x10
    3384:	add	x3, sp, #0xc
    3388:	stur	x0, [x29, #-16]
    338c:	str	x1, [sp, #24]
    3390:	ldr	x0, [sp, #24]
    3394:	mov	x1, x8
    3398:	bl	2150 <PyArg_ParseTuple@plt>
    339c:	cbnz	w0, 33ac <py_func_si@@Base+0x40>
    33a0:	mov	x8, xzr
    33a4:	stur	x8, [x29, #-8]
    33a8:	b	33c8 <py_func_si@@Base+0x5c>
    33ac:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    33b0:	ldr	x8, [x8, #4008]
    33b4:	mov	x0, x8
    33b8:	str	x8, [sp]
    33bc:	bl	33d8 <py_func_si@@Base+0x6c>
    33c0:	ldr	x8, [sp]
    33c4:	stur	x8, [x29, #-8]
    33c8:	ldur	x0, [x29, #-8]
    33cc:	ldp	x29, x30, [sp, #48]
    33d0:	add	sp, sp, #0x40
    33d4:	ret
    33d8:	sub	sp, sp, #0x10
    33dc:	str	x0, [sp, #8]
    33e0:	ldr	x8, [sp, #8]
    33e4:	ldr	x9, [x8]
    33e8:	add	x9, x9, #0x1
    33ec:	str	x9, [x8]
    33f0:	add	sp, sp, #0x10
    33f4:	ret

00000000000033f8 <_py_func_si@@Base>:
    33f8:	sub	sp, sp, #0x10
    33fc:	str	x0, [sp, #8]
    3400:	str	w1, [sp, #4]
    3404:	add	sp, sp, #0x10
    3408:	ret

000000000000340c <py_func@@Base>:
    340c:	sub	sp, sp, #0x30
    3410:	stp	x29, x30, [sp, #32]
    3414:	add	x29, sp, #0x20
    3418:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    341c:	ldr	x8, [x8, #4008]
    3420:	stur	x0, [x29, #-8]
    3424:	str	x1, [sp, #16]
    3428:	mov	x0, x8
    342c:	str	x8, [sp, #8]
    3430:	bl	33d8 <py_func_si@@Base+0x6c>
    3434:	ldr	x0, [sp, #8]
    3438:	ldp	x29, x30, [sp, #32]
    343c:	add	sp, sp, #0x30
    3440:	ret

0000000000003444 <_py_func@@Base>:
    3444:	ret

0000000000003448 <set_bitfields@@Base>:
    3448:	sub	sp, sp, #0x20
    344c:	str	x0, [sp, #24]
    3450:	strb	w1, [sp, #23]
    3454:	str	w2, [sp, #16]
    3458:	ldrb	w8, [sp, #23]
    345c:	subs	w8, w8, #0x41
    3460:	mov	w9, w8
    3464:	ubfx	x9, x9, #0, #32
    3468:	cmp	x9, #0x12
    346c:	str	x9, [sp, #8]
    3470:	b.hi	36c8 <set_bitfields@@Base+0x280>  // b.pmore
    3474:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    3478:	add	x8, x8, #0x2f0
    347c:	ldr	x11, [sp, #8]
    3480:	ldrsw	x10, [x8, x11, lsl #2]
    3484:	add	x9, x8, x10
    3488:	br	x9
    348c:	ldr	w8, [sp, #16]
    3490:	ldr	x9, [sp, #24]
    3494:	ldr	w10, [x9]
    3498:	and	w8, w8, #0x1
    349c:	and	w10, w10, #0xfffffffe
    34a0:	orr	w8, w10, w8
    34a4:	str	w8, [x9]
    34a8:	b	36c8 <set_bitfields@@Base+0x280>
    34ac:	ldr	w8, [sp, #16]
    34b0:	ldr	x9, [sp, #24]
    34b4:	ldr	w10, [x9]
    34b8:	and	w8, w8, #0x3
    34bc:	and	w10, w10, #0xfffffff9
    34c0:	orr	w8, w10, w8, lsl #1
    34c4:	str	w8, [x9]
    34c8:	b	36c8 <set_bitfields@@Base+0x280>
    34cc:	ldr	w8, [sp, #16]
    34d0:	ldr	x9, [sp, #24]
    34d4:	ldr	w10, [x9]
    34d8:	and	w8, w8, #0x7
    34dc:	and	w10, w10, #0xffffffc7
    34e0:	orr	w8, w10, w8, lsl #3
    34e4:	str	w8, [x9]
    34e8:	b	36c8 <set_bitfields@@Base+0x280>
    34ec:	ldr	w8, [sp, #16]
    34f0:	ldr	x9, [sp, #24]
    34f4:	ldr	w10, [x9]
    34f8:	and	w8, w8, #0xf
    34fc:	and	w10, w10, #0xfffffc3f
    3500:	orr	w8, w10, w8, lsl #6
    3504:	str	w8, [x9]
    3508:	b	36c8 <set_bitfields@@Base+0x280>
    350c:	ldr	w8, [sp, #16]
    3510:	ldr	x9, [sp, #24]
    3514:	ldr	w10, [x9]
    3518:	and	w8, w8, #0x1f
    351c:	and	w10, w10, #0xffff83ff
    3520:	orr	w8, w10, w8, lsl #10
    3524:	str	w8, [x9]
    3528:	b	36c8 <set_bitfields@@Base+0x280>
    352c:	ldr	w8, [sp, #16]
    3530:	ldr	x9, [sp, #24]
    3534:	ldr	w10, [x9]
    3538:	and	w8, w8, #0x3f
    353c:	and	w10, w10, #0xffe07fff
    3540:	orr	w8, w10, w8, lsl #15
    3544:	str	w8, [x9]
    3548:	b	36c8 <set_bitfields@@Base+0x280>
    354c:	ldr	w8, [sp, #16]
    3550:	ldr	x9, [sp, #24]
    3554:	ldr	w10, [x9]
    3558:	and	w8, w8, #0x7f
    355c:	and	w10, w10, #0xf01fffff
    3560:	orr	w8, w10, w8, lsl #21
    3564:	str	w8, [x9]
    3568:	b	36c8 <set_bitfields@@Base+0x280>
    356c:	ldr	w8, [sp, #16]
    3570:	mov	w9, w8
    3574:	ldr	x10, [sp, #24]
    3578:	ldur	x11, [x10, #4]
    357c:	and	x9, x9, #0xff
    3580:	and	x11, x11, #0xffffffffffffff00
    3584:	orr	x9, x11, x9
    3588:	stur	x9, [x10, #4]
    358c:	b	36c8 <set_bitfields@@Base+0x280>
    3590:	ldr	w8, [sp, #16]
    3594:	mov	w9, w8
    3598:	ldr	x10, [sp, #24]
    359c:	ldur	x11, [x10, #4]
    35a0:	and	x9, x9, #0x1ff
    35a4:	and	x11, x11, #0xfffffffffffe00ff
    35a8:	orr	x9, x11, x9, lsl #8
    35ac:	stur	x9, [x10, #4]
    35b0:	b	36c8 <set_bitfields@@Base+0x280>
    35b4:	ldr	w8, [sp, #16]
    35b8:	ldr	x9, [sp, #24]
    35bc:	mov	w0, w8
    35c0:	and	x10, x0, #0xffff
    35c4:	ldur	x11, [x9, #4]
    35c8:	and	x10, x10, #0x1
    35cc:	and	x11, x11, #0xfffffffffffdffff
    35d0:	orr	x10, x11, x10, lsl #17
    35d4:	stur	x10, [x9, #4]
    35d8:	b	36c8 <set_bitfields@@Base+0x280>
    35dc:	ldr	w8, [sp, #16]
    35e0:	ldr	x9, [sp, #24]
    35e4:	mov	w0, w8
    35e8:	and	x10, x0, #0xffff
    35ec:	ldur	x11, [x9, #4]
    35f0:	and	x10, x10, #0x3
    35f4:	and	x11, x11, #0xfffffffffff3ffff
    35f8:	orr	x10, x11, x10, lsl #18
    35fc:	stur	x10, [x9, #4]
    3600:	b	36c8 <set_bitfields@@Base+0x280>
    3604:	ldr	w8, [sp, #16]
    3608:	ldr	x9, [sp, #24]
    360c:	mov	w0, w8
    3610:	and	x10, x0, #0xffff
    3614:	ldur	x11, [x9, #4]
    3618:	and	x10, x10, #0x7
    361c:	and	x11, x11, #0xffffffffff8fffff
    3620:	orr	x10, x11, x10, lsl #20
    3624:	stur	x10, [x9, #4]
    3628:	b	36c8 <set_bitfields@@Base+0x280>
    362c:	ldr	w8, [sp, #16]
    3630:	ldr	x9, [sp, #24]
    3634:	mov	w0, w8
    3638:	and	x10, x0, #0xffff
    363c:	ldur	x11, [x9, #4]
    3640:	and	x10, x10, #0xf
    3644:	and	x11, x11, #0xfffffffff87fffff
    3648:	orr	x10, x11, x10, lsl #23
    364c:	stur	x10, [x9, #4]
    3650:	b	36c8 <set_bitfields@@Base+0x280>
    3654:	ldr	w8, [sp, #16]
    3658:	ldr	x9, [sp, #24]
    365c:	mov	w0, w8
    3660:	and	x10, x0, #0xffff
    3664:	ldur	x11, [x9, #4]
    3668:	and	x10, x10, #0x1f
    366c:	and	x11, x11, #0xffffffff07ffffff
    3670:	orr	x10, x11, x10, lsl #27
    3674:	stur	x10, [x9, #4]
    3678:	b	36c8 <set_bitfields@@Base+0x280>
    367c:	ldr	w8, [sp, #16]
    3680:	ldr	x9, [sp, #24]
    3684:	mov	w0, w8
    3688:	and	x10, x0, #0xffff
    368c:	ldur	x11, [x9, #4]
    3690:	and	x10, x10, #0x3f
    3694:	and	x11, x11, #0xffffffc0ffffffff
    3698:	orr	x10, x11, x10, lsl #32
    369c:	stur	x10, [x9, #4]
    36a0:	b	36c8 <set_bitfields@@Base+0x280>
    36a4:	ldr	w8, [sp, #16]
    36a8:	ldr	x9, [sp, #24]
    36ac:	mov	w0, w8
    36b0:	and	x10, x0, #0xffff
    36b4:	ldur	x11, [x9, #4]
    36b8:	and	x10, x10, #0x7f
    36bc:	and	x11, x11, #0xffffe03fffffffff
    36c0:	orr	x10, x11, x10, lsl #38
    36c4:	stur	x10, [x9, #4]
    36c8:	add	sp, sp, #0x20
    36cc:	ret

00000000000036d0 <unpack_bitfields@@Base>:
    36d0:	sub	sp, sp, #0x20
    36d4:	str	x0, [sp, #16]
    36d8:	strb	w1, [sp, #15]
    36dc:	ldrb	w8, [sp, #15]
    36e0:	subs	w8, w8, #0x41
    36e4:	mov	w9, w8
    36e8:	ubfx	x9, x9, #0, #32
    36ec:	cmp	x9, #0x12
    36f0:	str	x9, [sp]
    36f4:	b.hi	38c8 <unpack_bitfields@@Base+0x1f8>  // b.pmore
    36f8:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    36fc:	add	x8, x8, #0x33c
    3700:	ldr	x11, [sp]
    3704:	ldrsw	x10, [x8, x11, lsl #2]
    3708:	add	x9, x8, x10
    370c:	br	x9
    3710:	ldr	x8, [sp, #16]
    3714:	ldr	w9, [x8]
    3718:	lsl	w9, w9, #31
    371c:	asr	w9, w9, #31
    3720:	str	w9, [sp, #28]
    3724:	b	38d0 <unpack_bitfields@@Base+0x200>
    3728:	ldr	x8, [sp, #16]
    372c:	ldr	w9, [x8]
    3730:	lsl	w9, w9, #29
    3734:	asr	w9, w9, #30
    3738:	str	w9, [sp, #28]
    373c:	b	38d0 <unpack_bitfields@@Base+0x200>
    3740:	ldr	x8, [sp, #16]
    3744:	ldr	w9, [x8]
    3748:	lsl	w9, w9, #26
    374c:	asr	w9, w9, #29
    3750:	str	w9, [sp, #28]
    3754:	b	38d0 <unpack_bitfields@@Base+0x200>
    3758:	ldr	x8, [sp, #16]
    375c:	ldr	w9, [x8]
    3760:	lsl	w9, w9, #22
    3764:	asr	w9, w9, #28
    3768:	str	w9, [sp, #28]
    376c:	b	38d0 <unpack_bitfields@@Base+0x200>
    3770:	ldr	x8, [sp, #16]
    3774:	ldr	w9, [x8]
    3778:	lsl	w9, w9, #17
    377c:	asr	w9, w9, #27
    3780:	str	w9, [sp, #28]
    3784:	b	38d0 <unpack_bitfields@@Base+0x200>
    3788:	ldr	x8, [sp, #16]
    378c:	ldr	w9, [x8]
    3790:	lsl	w9, w9, #11
    3794:	asr	w9, w9, #26
    3798:	str	w9, [sp, #28]
    379c:	b	38d0 <unpack_bitfields@@Base+0x200>
    37a0:	ldr	x8, [sp, #16]
    37a4:	ldr	w9, [x8]
    37a8:	lsl	w9, w9, #4
    37ac:	asr	w9, w9, #25
    37b0:	str	w9, [sp, #28]
    37b4:	b	38d0 <unpack_bitfields@@Base+0x200>
    37b8:	ldr	x8, [sp, #16]
    37bc:	ldur	x8, [x8, #4]
    37c0:	lsl	x8, x8, #56
    37c4:	asr	x8, x8, #56
    37c8:	str	w8, [sp, #28]
    37cc:	b	38d0 <unpack_bitfields@@Base+0x200>
    37d0:	ldr	x8, [sp, #16]
    37d4:	ldur	x8, [x8, #4]
    37d8:	lsl	x8, x8, #47
    37dc:	asr	x8, x8, #55
    37e0:	str	w8, [sp, #28]
    37e4:	b	38d0 <unpack_bitfields@@Base+0x200>
    37e8:	ldr	x8, [sp, #16]
    37ec:	ldur	x8, [x8, #4]
    37f0:	lsl	x8, x8, #46
    37f4:	asr	x8, x8, #63
    37f8:	lsl	w8, w8, #16
    37fc:	asr	w8, w8, #16
    3800:	str	w8, [sp, #28]
    3804:	b	38d0 <unpack_bitfields@@Base+0x200>
    3808:	ldr	x8, [sp, #16]
    380c:	ldur	x8, [x8, #4]
    3810:	lsl	x8, x8, #44
    3814:	asr	x8, x8, #62
    3818:	lsl	w8, w8, #16
    381c:	asr	w8, w8, #16
    3820:	str	w8, [sp, #28]
    3824:	b	38d0 <unpack_bitfields@@Base+0x200>
    3828:	ldr	x8, [sp, #16]
    382c:	ldur	x8, [x8, #4]
    3830:	lsl	x8, x8, #41
    3834:	asr	x8, x8, #61
    3838:	lsl	w8, w8, #16
    383c:	asr	w8, w8, #16
    3840:	str	w8, [sp, #28]
    3844:	b	38d0 <unpack_bitfields@@Base+0x200>
    3848:	ldr	x8, [sp, #16]
    384c:	ldur	x8, [x8, #4]
    3850:	lsl	x8, x8, #37
    3854:	asr	x8, x8, #60
    3858:	lsl	w8, w8, #16
    385c:	asr	w8, w8, #16
    3860:	str	w8, [sp, #28]
    3864:	b	38d0 <unpack_bitfields@@Base+0x200>
    3868:	ldr	x8, [sp, #16]
    386c:	ldur	x8, [x8, #4]
    3870:	lsl	x8, x8, #32
    3874:	asr	x8, x8, #59
    3878:	lsl	w8, w8, #16
    387c:	asr	w8, w8, #16
    3880:	str	w8, [sp, #28]
    3884:	b	38d0 <unpack_bitfields@@Base+0x200>
    3888:	ldr	x8, [sp, #16]
    388c:	ldur	x8, [x8, #4]
    3890:	lsl	x8, x8, #26
    3894:	asr	x8, x8, #58
    3898:	lsl	w8, w8, #16
    389c:	asr	w8, w8, #16
    38a0:	str	w8, [sp, #28]
    38a4:	b	38d0 <unpack_bitfields@@Base+0x200>
    38a8:	ldr	x8, [sp, #16]
    38ac:	ldur	x8, [x8, #4]
    38b0:	lsl	x8, x8, #19
    38b4:	asr	x8, x8, #57
    38b8:	lsl	w8, w8, #16
    38bc:	asr	w8, w8, #16
    38c0:	str	w8, [sp, #28]
    38c4:	b	38d0 <unpack_bitfields@@Base+0x200>
    38c8:	mov	w8, #0x3e7                 	// #999
    38cc:	str	w8, [sp, #28]
    38d0:	ldr	w0, [sp, #28]
    38d4:	add	sp, sp, #0x20
    38d8:	ret

00000000000038dc <tf_b@@Base>:
    38dc:	sub	sp, sp, #0x10
    38e0:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    38e4:	ldr	x8, [x8, #4024]
    38e8:	mov	w9, #0x3                   	// #3
    38ec:	strb	w0, [sp, #15]
    38f0:	ldrsb	x10, [sp, #15]
    38f4:	str	x10, [x8]
    38f8:	ldrsb	w11, [sp, #15]
    38fc:	sdiv	w9, w11, w9
    3900:	mov	w0, w9
    3904:	add	sp, sp, #0x10
    3908:	ret

000000000000390c <tf_B@@Base>:
    390c:	sub	sp, sp, #0x10
    3910:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3914:	ldr	x8, [x8, #4032]
    3918:	mov	w9, #0x3                   	// #3
    391c:	strb	w0, [sp, #15]
    3920:	ldrb	w10, [sp, #15]
    3924:	mov	w11, w10
    3928:	str	x11, [x8]
    392c:	ldrb	w10, [sp, #15]
    3930:	sdiv	w9, w10, w9
    3934:	mov	w0, w9
    3938:	add	sp, sp, #0x10
    393c:	ret

0000000000003940 <tf_h@@Base>:
    3940:	sub	sp, sp, #0x10
    3944:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3948:	ldr	x8, [x8, #4024]
    394c:	mov	w9, #0x3                   	// #3
    3950:	strh	w0, [sp, #14]
    3954:	ldrsh	x10, [sp, #14]
    3958:	str	x10, [x8]
    395c:	ldrsh	w11, [sp, #14]
    3960:	sdiv	w9, w11, w9
    3964:	mov	w0, w9
    3968:	add	sp, sp, #0x10
    396c:	ret

0000000000003970 <tf_H@@Base>:
    3970:	sub	sp, sp, #0x10
    3974:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3978:	ldr	x8, [x8, #4032]
    397c:	mov	w9, #0x3                   	// #3
    3980:	strh	w0, [sp, #14]
    3984:	ldrh	w10, [sp, #14]
    3988:	mov	w11, w10
    398c:	str	x11, [x8]
    3990:	ldrh	w10, [sp, #14]
    3994:	sdiv	w9, w10, w9
    3998:	mov	w0, w9
    399c:	add	sp, sp, #0x10
    39a0:	ret

00000000000039a4 <tf_i@@Base>:
    39a4:	sub	sp, sp, #0x10
    39a8:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    39ac:	ldr	x8, [x8, #4024]
    39b0:	mov	w9, #0x3                   	// #3
    39b4:	str	w0, [sp, #12]
    39b8:	ldrsw	x10, [sp, #12]
    39bc:	str	x10, [x8]
    39c0:	ldr	w11, [sp, #12]
    39c4:	sdiv	w0, w11, w9
    39c8:	add	sp, sp, #0x10
    39cc:	ret

00000000000039d0 <tf_I@@Base>:
    39d0:	sub	sp, sp, #0x10
    39d4:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    39d8:	ldr	x8, [x8, #4032]
    39dc:	mov	w9, #0x3                   	// #3
    39e0:	str	w0, [sp, #12]
    39e4:	ldr	w10, [sp, #12]
    39e8:	mov	w11, w10
    39ec:	str	x11, [x8]
    39f0:	ldr	w10, [sp, #12]
    39f4:	udiv	w0, w10, w9
    39f8:	add	sp, sp, #0x10
    39fc:	ret

0000000000003a00 <tf_l@@Base>:
    3a00:	sub	sp, sp, #0x10
    3a04:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3a08:	ldr	x8, [x8, #4024]
    3a0c:	mov	x9, #0x3                   	// #3
    3a10:	str	x0, [sp, #8]
    3a14:	ldr	x10, [sp, #8]
    3a18:	str	x10, [x8]
    3a1c:	ldr	x8, [sp, #8]
    3a20:	sdiv	x0, x8, x9
    3a24:	add	sp, sp, #0x10
    3a28:	ret

0000000000003a2c <tf_L@@Base>:
    3a2c:	sub	sp, sp, #0x10
    3a30:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3a34:	ldr	x8, [x8, #4032]
    3a38:	mov	x9, #0x3                   	// #3
    3a3c:	str	x0, [sp, #8]
    3a40:	ldr	x10, [sp, #8]
    3a44:	str	x10, [x8]
    3a48:	ldr	x8, [sp, #8]
    3a4c:	udiv	x0, x8, x9
    3a50:	add	sp, sp, #0x10
    3a54:	ret

0000000000003a58 <tf_q@@Base>:
    3a58:	sub	sp, sp, #0x10
    3a5c:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3a60:	ldr	x8, [x8, #4024]
    3a64:	mov	x9, #0x3                   	// #3
    3a68:	str	x0, [sp, #8]
    3a6c:	ldr	x10, [sp, #8]
    3a70:	str	x10, [x8]
    3a74:	ldr	x8, [sp, #8]
    3a78:	sdiv	x0, x8, x9
    3a7c:	add	sp, sp, #0x10
    3a80:	ret

0000000000003a84 <tf_Q@@Base>:
    3a84:	sub	sp, sp, #0x10
    3a88:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3a8c:	ldr	x8, [x8, #4032]
    3a90:	mov	x9, #0x3                   	// #3
    3a94:	str	x0, [sp, #8]
    3a98:	ldr	x10, [sp, #8]
    3a9c:	str	x10, [x8]
    3aa0:	ldr	x8, [sp, #8]
    3aa4:	udiv	x0, x8, x9
    3aa8:	add	sp, sp, #0x10
    3aac:	ret

0000000000003ab0 <tf_f@@Base>:
    3ab0:	sub	sp, sp, #0x10
    3ab4:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3ab8:	ldr	x8, [x8, #4024]
    3abc:	fmov	s1, #3.000000000000000000e+00
    3ac0:	str	s0, [sp, #12]
    3ac4:	ldr	s0, [sp, #12]
    3ac8:	fcvtzs	x9, s0
    3acc:	str	x9, [x8]
    3ad0:	ldr	s0, [sp, #12]
    3ad4:	fdiv	s0, s0, s1
    3ad8:	add	sp, sp, #0x10
    3adc:	ret

0000000000003ae0 <tf_d@@Base>:
    3ae0:	sub	sp, sp, #0x10
    3ae4:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3ae8:	ldr	x8, [x8, #4024]
    3aec:	fmov	d1, #3.000000000000000000e+00
    3af0:	str	d0, [sp, #8]
    3af4:	ldr	d0, [sp, #8]
    3af8:	fcvtzs	x9, d0
    3afc:	str	x9, [x8]
    3b00:	ldr	d0, [sp, #8]
    3b04:	fdiv	d0, d0, d1
    3b08:	add	sp, sp, #0x10
    3b0c:	ret

0000000000003b10 <tf_D@@Base>:
    3b10:	sub	sp, sp, #0x20
    3b14:	stp	x29, x30, [sp, #16]
    3b18:	add	x29, sp, #0x10
    3b1c:	str	q0, [sp]
    3b20:	ldr	q0, [sp]
    3b24:	bl	5ea8 <PyInit__ctypes_test@@Base+0x1c54>
    3b28:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3b2c:	ldr	x8, [x8, #4024]
    3b30:	str	x0, [x8]
    3b34:	ldr	q0, [sp]
    3b38:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    3b3c:	ldr	q1, [x8, #944]
    3b40:	bl	4da0 <PyInit__ctypes_test@@Base+0xb4c>
    3b44:	ldp	x29, x30, [sp, #16]
    3b48:	add	sp, sp, #0x20
    3b4c:	ret

0000000000003b50 <tf_bb@@Base>:
    3b50:	sub	sp, sp, #0x10
    3b54:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3b58:	ldr	x8, [x8, #4024]
    3b5c:	mov	w9, #0x3                   	// #3
    3b60:	strb	w0, [sp, #15]
    3b64:	strb	w1, [sp, #14]
    3b68:	ldrsb	x10, [sp, #14]
    3b6c:	str	x10, [x8]
    3b70:	ldrsb	w11, [sp, #14]
    3b74:	sdiv	w9, w11, w9
    3b78:	mov	w0, w9
    3b7c:	add	sp, sp, #0x10
    3b80:	ret

0000000000003b84 <tf_bB@@Base>:
    3b84:	sub	sp, sp, #0x10
    3b88:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3b8c:	ldr	x8, [x8, #4032]
    3b90:	mov	w9, #0x3                   	// #3
    3b94:	strb	w0, [sp, #15]
    3b98:	strb	w1, [sp, #14]
    3b9c:	ldrb	w10, [sp, #14]
    3ba0:	mov	w11, w10
    3ba4:	str	x11, [x8]
    3ba8:	ldrb	w10, [sp, #14]
    3bac:	sdiv	w9, w10, w9
    3bb0:	mov	w0, w9
    3bb4:	add	sp, sp, #0x10
    3bb8:	ret

0000000000003bbc <tf_bh@@Base>:
    3bbc:	sub	sp, sp, #0x10
    3bc0:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3bc4:	ldr	x8, [x8, #4024]
    3bc8:	mov	w9, #0x3                   	// #3
    3bcc:	strb	w0, [sp, #15]
    3bd0:	strh	w1, [sp, #12]
    3bd4:	ldrsh	x10, [sp, #12]
    3bd8:	str	x10, [x8]
    3bdc:	ldrsh	w11, [sp, #12]
    3be0:	sdiv	w9, w11, w9
    3be4:	mov	w0, w9
    3be8:	add	sp, sp, #0x10
    3bec:	ret

0000000000003bf0 <tf_bH@@Base>:
    3bf0:	sub	sp, sp, #0x10
    3bf4:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3bf8:	ldr	x8, [x8, #4032]
    3bfc:	mov	w9, #0x3                   	// #3
    3c00:	strb	w0, [sp, #15]
    3c04:	strh	w1, [sp, #12]
    3c08:	ldrh	w10, [sp, #12]
    3c0c:	mov	w11, w10
    3c10:	str	x11, [x8]
    3c14:	ldrh	w10, [sp, #12]
    3c18:	sdiv	w9, w10, w9
    3c1c:	mov	w0, w9
    3c20:	add	sp, sp, #0x10
    3c24:	ret

0000000000003c28 <tf_bi@@Base>:
    3c28:	sub	sp, sp, #0x10
    3c2c:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3c30:	ldr	x8, [x8, #4024]
    3c34:	mov	w9, #0x3                   	// #3
    3c38:	strb	w0, [sp, #15]
    3c3c:	str	w1, [sp, #8]
    3c40:	ldrsw	x10, [sp, #8]
    3c44:	str	x10, [x8]
    3c48:	ldr	w11, [sp, #8]
    3c4c:	sdiv	w0, w11, w9
    3c50:	add	sp, sp, #0x10
    3c54:	ret

0000000000003c58 <tf_bI@@Base>:
    3c58:	sub	sp, sp, #0x10
    3c5c:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3c60:	ldr	x8, [x8, #4032]
    3c64:	mov	w9, #0x3                   	// #3
    3c68:	strb	w0, [sp, #15]
    3c6c:	str	w1, [sp, #8]
    3c70:	ldr	w10, [sp, #8]
    3c74:	mov	w11, w10
    3c78:	str	x11, [x8]
    3c7c:	ldr	w10, [sp, #8]
    3c80:	udiv	w0, w10, w9
    3c84:	add	sp, sp, #0x10
    3c88:	ret

0000000000003c8c <tf_bl@@Base>:
    3c8c:	sub	sp, sp, #0x10
    3c90:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3c94:	ldr	x8, [x8, #4024]
    3c98:	mov	x9, #0x3                   	// #3
    3c9c:	strb	w0, [sp, #15]
    3ca0:	str	x1, [sp]
    3ca4:	ldr	x10, [sp]
    3ca8:	str	x10, [x8]
    3cac:	ldr	x8, [sp]
    3cb0:	sdiv	x0, x8, x9
    3cb4:	add	sp, sp, #0x10
    3cb8:	ret

0000000000003cbc <tf_bL@@Base>:
    3cbc:	sub	sp, sp, #0x10
    3cc0:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3cc4:	ldr	x8, [x8, #4032]
    3cc8:	mov	x9, #0x3                   	// #3
    3ccc:	strb	w0, [sp, #15]
    3cd0:	str	x1, [sp]
    3cd4:	ldr	x10, [sp]
    3cd8:	str	x10, [x8]
    3cdc:	ldr	x8, [sp]
    3ce0:	udiv	x0, x8, x9
    3ce4:	add	sp, sp, #0x10
    3ce8:	ret

0000000000003cec <tf_bq@@Base>:
    3cec:	sub	sp, sp, #0x10
    3cf0:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3cf4:	ldr	x8, [x8, #4024]
    3cf8:	mov	x9, #0x3                   	// #3
    3cfc:	strb	w0, [sp, #15]
    3d00:	str	x1, [sp]
    3d04:	ldr	x10, [sp]
    3d08:	str	x10, [x8]
    3d0c:	ldr	x8, [sp]
    3d10:	sdiv	x0, x8, x9
    3d14:	add	sp, sp, #0x10
    3d18:	ret

0000000000003d1c <tf_bQ@@Base>:
    3d1c:	sub	sp, sp, #0x10
    3d20:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3d24:	ldr	x8, [x8, #4032]
    3d28:	mov	x9, #0x3                   	// #3
    3d2c:	strb	w0, [sp, #15]
    3d30:	str	x1, [sp]
    3d34:	ldr	x10, [sp]
    3d38:	str	x10, [x8]
    3d3c:	ldr	x8, [sp]
    3d40:	udiv	x0, x8, x9
    3d44:	add	sp, sp, #0x10
    3d48:	ret

0000000000003d4c <tf_bf@@Base>:
    3d4c:	sub	sp, sp, #0x10
    3d50:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3d54:	ldr	x8, [x8, #4024]
    3d58:	fmov	s1, #3.000000000000000000e+00
    3d5c:	strb	w0, [sp, #15]
    3d60:	str	s0, [sp, #8]
    3d64:	ldr	s0, [sp, #8]
    3d68:	fcvtzs	x9, s0
    3d6c:	str	x9, [x8]
    3d70:	ldr	s0, [sp, #8]
    3d74:	fdiv	s0, s0, s1
    3d78:	add	sp, sp, #0x10
    3d7c:	ret

0000000000003d80 <tf_bd@@Base>:
    3d80:	sub	sp, sp, #0x10
    3d84:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3d88:	ldr	x8, [x8, #4024]
    3d8c:	fmov	d1, #3.000000000000000000e+00
    3d90:	strb	w0, [sp, #15]
    3d94:	str	d0, [sp]
    3d98:	ldr	d0, [sp]
    3d9c:	fcvtzs	x9, d0
    3da0:	str	x9, [x8]
    3da4:	ldr	d0, [sp]
    3da8:	fdiv	d0, d0, d1
    3dac:	add	sp, sp, #0x10
    3db0:	ret

0000000000003db4 <tf_bD@@Base>:
    3db4:	sub	sp, sp, #0x30
    3db8:	stp	x29, x30, [sp, #32]
    3dbc:	add	x29, sp, #0x20
    3dc0:	sturb	w0, [x29, #-4]
    3dc4:	str	q0, [sp]
    3dc8:	ldr	q0, [sp]
    3dcc:	bl	5ea8 <PyInit__ctypes_test@@Base+0x1c54>
    3dd0:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3dd4:	ldr	x8, [x8, #4024]
    3dd8:	str	x0, [x8]
    3ddc:	ldr	q0, [sp]
    3de0:	adrp	x8, 6000 <PyInit__ctypes_test@@Base+0x1dac>
    3de4:	ldr	q1, [x8, #944]
    3de8:	bl	4da0 <PyInit__ctypes_test@@Base+0xb4c>
    3dec:	ldp	x29, x30, [sp, #32]
    3df0:	add	sp, sp, #0x30
    3df4:	ret

0000000000003df8 <tv_i@@Base>:
    3df8:	sub	sp, sp, #0x10
    3dfc:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3e00:	ldr	x8, [x8, #4024]
    3e04:	str	w0, [sp, #12]
    3e08:	ldrsw	x9, [sp, #12]
    3e0c:	str	x9, [x8]
    3e10:	add	sp, sp, #0x10
    3e14:	ret

0000000000003e18 <PointInRect@@Base>:
    3e18:	sub	sp, sp, #0x20
    3e1c:	str	x1, [sp, #8]
    3e20:	str	x2, [sp, #16]
    3e24:	str	x0, [sp]
    3e28:	ldr	x8, [sp, #8]
    3e2c:	ldr	x9, [sp]
    3e30:	ldr	x9, [x9]
    3e34:	cmp	x8, x9
    3e38:	b.ge	3e44 <PointInRect@@Base+0x2c>  // b.tcont
    3e3c:	str	wzr, [sp, #28]
    3e40:	b	3ea0 <PointInRect@@Base+0x88>
    3e44:	ldr	x8, [sp, #8]
    3e48:	ldr	x9, [sp]
    3e4c:	ldr	x9, [x9, #16]
    3e50:	cmp	x8, x9
    3e54:	b.le	3e60 <PointInRect@@Base+0x48>
    3e58:	str	wzr, [sp, #28]
    3e5c:	b	3ea0 <PointInRect@@Base+0x88>
    3e60:	ldr	x8, [sp, #16]
    3e64:	ldr	x9, [sp]
    3e68:	ldr	x9, [x9, #8]
    3e6c:	cmp	x8, x9
    3e70:	b.ge	3e7c <PointInRect@@Base+0x64>  // b.tcont
    3e74:	str	wzr, [sp, #28]
    3e78:	b	3ea0 <PointInRect@@Base+0x88>
    3e7c:	ldr	x8, [sp, #16]
    3e80:	ldr	x9, [sp]
    3e84:	ldr	x9, [x9, #24]
    3e88:	cmp	x8, x9
    3e8c:	b.le	3e98 <PointInRect@@Base+0x80>
    3e90:	str	wzr, [sp, #28]
    3e94:	b	3ea0 <PointInRect@@Base+0x88>
    3e98:	mov	w8, #0x1                   	// #1
    3e9c:	str	w8, [sp, #28]
    3ea0:	ldr	w0, [sp, #28]
    3ea4:	add	sp, sp, #0x20
    3ea8:	ret

0000000000003eac <ReturnRect@@Base>:
    3eac:	sub	sp, sp, #0x60
    3eb0:	ldr	x9, [sp, #96]
    3eb4:	ldr	x10, [sp, #104]
    3eb8:	ldr	x11, [sp, #112]
    3ebc:	adrp	x12, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3ec0:	ldr	x12, [x12, #3976]
    3ec4:	mov	x13, #0x5                   	// #5
    3ec8:	str	x3, [sp, #80]
    3ecc:	str	x4, [sp, #88]
    3ed0:	str	x9, [sp, #64]
    3ed4:	str	x10, [sp, #72]
    3ed8:	str	w0, [sp, #60]
    3edc:	str	x2, [sp, #48]
    3ee0:	str	x6, [sp, #40]
    3ee4:	ldr	x9, [x1]
    3ee8:	ldr	x10, [sp, #48]
    3eec:	ldr	x10, [x10]
    3ef0:	add	x9, x9, x10
    3ef4:	ldr	x10, [x5]
    3ef8:	add	x9, x9, x10
    3efc:	ldr	x10, [sp, #40]
    3f00:	ldr	x10, [x10]
    3f04:	add	x9, x9, x10
    3f08:	ldr	x10, [x11]
    3f0c:	add	x9, x9, x10
    3f10:	ldr	x10, [x12]
    3f14:	mul	x10, x10, x13
    3f18:	cmp	x9, x10
    3f1c:	str	x8, [sp, #32]
    3f20:	str	x1, [sp, #24]
    3f24:	str	x5, [sp, #16]
    3f28:	str	x11, [sp, #8]
    3f2c:	b.eq	3f54 <ReturnRect@@Base+0xa8>  // b.none
    3f30:	mov	x8, #0x64                  	// #100
    3f34:	ldr	x9, [sp, #24]
    3f38:	str	x8, [x9]
    3f3c:	ldr	q0, [x9]
    3f40:	ldr	x8, [sp, #32]
    3f44:	str	q0, [x8]
    3f48:	ldr	q0, [x9, #16]
    3f4c:	str	q0, [x8, #16]
    3f50:	b	40a0 <ReturnRect@@Base+0x1f4>
    3f54:	ldr	x8, [sp, #24]
    3f58:	ldr	x9, [x8, #16]
    3f5c:	ldr	x10, [sp, #48]
    3f60:	ldr	x10, [x10, #16]
    3f64:	add	x9, x9, x10
    3f68:	ldr	x10, [sp, #16]
    3f6c:	ldr	x11, [x10, #16]
    3f70:	add	x9, x9, x11
    3f74:	ldr	x11, [sp, #40]
    3f78:	ldr	x11, [x11, #16]
    3f7c:	add	x9, x9, x11
    3f80:	ldr	x11, [sp, #8]
    3f84:	ldr	x12, [x11, #16]
    3f88:	add	x9, x9, x12
    3f8c:	adrp	x12, 16000 <PyInit__ctypes_test@@Base+0x11dac>
    3f90:	ldr	x12, [x12, #3984]
    3f94:	ldr	x12, [x12]
    3f98:	mov	x13, #0x5                   	// #5
    3f9c:	mul	x12, x12, x13
    3fa0:	cmp	x9, x12
    3fa4:	b.eq	3fcc <ReturnRect@@Base+0x120>  // b.none
    3fa8:	mov	x8, #0x64                  	// #100
    3fac:	ldr	x9, [sp, #24]
    3fb0:	str	x8, [x9, #16]
    3fb4:	ldr	q0, [x9]
    3fb8:	ldr	x8, [sp, #32]
    3fbc:	str	q0, [x8]
    3fc0:	ldr	q0, [x9, #16]
    3fc4:	str	q0, [x8, #16]
    3fc8:	b	40a0 <ReturnRect@@Base+0x1f4>
    3fcc:	ldr	x8, [sp, #80]
    3fd0:	ldr	x9, [sp, #64]
    3fd4:	cmp	x8, x9
    3fd8:	b.eq	3fe8 <ReturnRect@@Base+0x13c>  // b.none
    3fdc:	mov	x8, #0xffffffffffffff9c    	// #-100
    3fe0:	ldr	x9, [sp, #24]
    3fe4:	str	x8, [x9]
    3fe8:	ldr	x8, [sp, #88]
    3fec:	ldr	x9, [sp, #72]
    3ff0:	cmp	x8, x9
    3ff4:	b.eq	4004 <ReturnRect@@Base+0x158>  // b.none
    3ff8:	mov	x8, #0xffffffffffffff38    	// #-200
    3ffc:	ldr	x9, [sp, #24]
    4000:	str	x8, [x9]
    4004:	ldr	w8, [sp, #60]
    4008:	str	w8, [sp, #4]
    400c:	cbz	w8, 4034 <ReturnRect@@Base+0x188>
    4010:	b	4014 <ReturnRect@@Base+0x168>
    4014:	ldr	w8, [sp, #4]
    4018:	cmp	w8, #0x1
    401c:	b.eq	4050 <ReturnRect@@Base+0x1a4>  // b.none
    4020:	b	4024 <ReturnRect@@Base+0x178>
    4024:	ldr	w8, [sp, #4]
    4028:	cmp	w8, #0x2
    402c:	b.eq	406c <ReturnRect@@Base+0x1c0>  // b.none
    4030:	b	4088 <ReturnRect@@Base+0x1dc>
    4034:	ldr	x8, [sp, #24]
    4038:	ldr	q0, [x8]
    403c:	ldr	x9, [sp, #32]
    4040:	str	q0, [x9]
    4044:	ldr	q0, [x8, #16]
    4048:	str	q0, [x9, #16]
    404c:	b	40a0 <ReturnRect@@Base+0x1f4>
    4050:	ldr	x8, [sp, #16]
    4054:	ldr	q0, [x8]
    4058:	ldr	x9, [sp, #32]
    405c:	str	q0, [x9]
    4060:	ldr	q0, [x8, #16]
    4064:	str	q0, [x9, #16]
    4068:	b	40a0 <ReturnRect@@Base+0x1f4>
    406c:	ldr	x8, [sp, #8]
    4070:	ldr	q0, [x8]
    4074:	ldr	x9, [sp, #32]
    4078:	str	q0, [x9]
    407c:	ldr	q0, [x8, #16]
    4080:	str	q0, [x9, #16]
    4084:	b	40a0 <ReturnRect@@Base+0x1f4>
    4088:	ldr	x8, [sp, #24]
    408c:	ldr	q0, [x8]
    4090:	ldr	x9, [sp, #32]
    4094:	str	q0, [x9]
    4098:	ldr	q0, [x8, #16]
    409c:	str	q0, [x9, #16]
    40a0:	add	sp, sp, #0x60
    40a4:	ret

00000000000040a8 <ret_2h_func@@Base>:
    40a8:	sub	sp, sp, #0x20
    40ac:	mov	w8, #0x2                   	// #2
    40b0:	mov	w9, #0x3                   	// #3
    40b4:	add	x10, sp, #0x18
    40b8:	str	x0, [sp, #16]
    40bc:	ldr	w11, [sp, #16]
    40c0:	str	w11, [sp, #24]
    40c4:	ldrsh	w11, [sp, #24]
    40c8:	mul	w8, w11, w8
    40cc:	strh	w8, [sp, #24]
    40d0:	ldrsh	w8, [sp, #26]
    40d4:	mul	w8, w8, w9
    40d8:	strh	w8, [x10, #2]
    40dc:	ldr	w8, [sp, #24]
    40e0:	str	w8, [sp, #28]
    40e4:	ldr	w8, [sp, #28]
    40e8:	str	w8, [sp, #8]
    40ec:	ldr	x0, [sp, #8]
    40f0:	add	sp, sp, #0x20
    40f4:	ret

00000000000040f8 <ret_8i_func@@Base>:
    40f8:	mov	w9, #0x2                   	// #2
    40fc:	mov	w10, #0x3                   	// #3
    4100:	mov	w11, #0x4                   	// #4
    4104:	mov	w12, #0x5                   	// #5
    4108:	mov	w13, #0x6                   	// #6
    410c:	mov	w14, #0x7                   	// #7
    4110:	mov	w15, #0x8                   	// #8
    4114:	mov	w16, #0x9                   	// #9
    4118:	ldr	w17, [x0]
    411c:	mul	w9, w17, w9
    4120:	str	w9, [x0]
    4124:	ldr	w9, [x0, #4]
    4128:	mul	w9, w9, w10
    412c:	str	w9, [x0, #4]
    4130:	ldr	w9, [x0, #8]
    4134:	mul	w9, w9, w11
    4138:	str	w9, [x0, #8]
    413c:	ldr	w9, [x0, #12]
    4140:	mul	w9, w9, w12
    4144:	str	w9, [x0, #12]
    4148:	ldr	w9, [x0, #16]
    414c:	mul	w9, w9, w13
    4150:	str	w9, [x0, #16]
    4154:	ldr	w9, [x0, #20]
    4158:	mul	w9, w9, w14
    415c:	str	w9, [x0, #20]
    4160:	ldr	w9, [x0, #24]
    4164:	mul	w9, w9, w15
    4168:	str	w9, [x0, #24]
    416c:	ldr	w9, [x0, #28]
    4170:	mul	w9, w9, w16
    4174:	str	w9, [x0, #28]
    4178:	ldr	q0, [x0]
    417c:	str	q0, [x8]
    4180:	ldr	q0, [x0, #16]
    4184:	str	q0, [x8, #16]
    4188:	ret

000000000000418c <GetRectangle@@Base>:
    418c:	sub	sp, sp, #0x10
    4190:	str	w0, [sp, #8]
    4194:	str	x1, [sp]
    4198:	ldr	w8, [sp, #8]
    419c:	cbnz	w8, 41a8 <GetRectangle@@Base+0x1c>
    41a0:	str	wzr, [sp, #12]
    41a4:	b	4204 <GetRectangle@@Base+0x78>
    41a8:	ldrsw	x8, [sp, #8]
    41ac:	ldr	x9, [sp]
    41b0:	str	x8, [x9]
    41b4:	ldr	w10, [sp, #8]
    41b8:	mov	w11, #0x1                   	// #1
    41bc:	add	w10, w10, #0x1
    41c0:	mov	w0, w10
    41c4:	sxtw	x8, w0
    41c8:	ldr	x9, [sp]
    41cc:	str	x8, [x9, #8]
    41d0:	ldr	w10, [sp, #8]
    41d4:	add	w10, w10, #0x2
    41d8:	mov	w0, w10
    41dc:	sxtw	x8, w0
    41e0:	ldr	x9, [sp]
    41e4:	str	x8, [x9, #16]
    41e8:	ldr	w10, [sp, #8]
    41ec:	add	w10, w10, #0x3
    41f0:	mov	w0, w10
    41f4:	sxtw	x8, w0
    41f8:	ldr	x9, [sp]
    41fc:	str	x8, [x9, #24]
    4200:	str	w11, [sp, #12]
    4204:	ldr	w0, [sp, #12]
    4208:	add	sp, sp, #0x10
    420c:	ret

0000000000004210 <TwoOutArgs@@Base>:
    4210:	sub	sp, sp, #0x20
    4214:	str	w0, [sp, #28]
    4218:	str	x1, [sp, #16]
    421c:	str	w2, [sp, #12]
    4220:	str	x3, [sp]
    4224:	ldr	w8, [sp, #28]
    4228:	ldr	x9, [sp, #16]
    422c:	ldr	w10, [x9]
    4230:	add	w8, w10, w8
    4234:	str	w8, [x9]
    4238:	ldr	w8, [sp, #12]
    423c:	ldr	x9, [sp]
    4240:	ldr	w10, [x9]
    4244:	add	w8, w10, w8
    4248:	str	w8, [x9]
    424c:	add	sp, sp, #0x20
    4250:	ret

0000000000004254 <PyInit__ctypes_test@@Base>:
    4254:	stp	x29, x30, [sp, #-16]!
    4258:	mov	x29, sp
    425c:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x12dac>
    4260:	add	x0, x0, #0xf8
    4264:	mov	w1, #0x3f5                 	// #1013
    4268:	bl	2140 <PyModule_Create2@plt>
    426c:	ldp	x29, x30, [sp], #16
    4270:	ret
    4274:	nop
    4278:	stp	x29, x30, [sp, #-48]!
    427c:	mov	x29, sp
    4280:	str	q0, [sp, #16]
    4284:	str	q1, [sp, #32]
    4288:	ldp	x6, x1, [sp, #16]
    428c:	ldp	x0, x3, [sp, #32]
    4290:	mrs	x15, fpcr
    4294:	lsr	x7, x1, #63
    4298:	mov	x10, x0
    429c:	ubfiz	x4, x3, #3, #48
    42a0:	lsr	x5, x3, #63
    42a4:	mov	x12, x7
    42a8:	ubfiz	x2, x1, #3, #48
    42ac:	orr	x4, x4, x0, lsr #61
    42b0:	ubfx	x8, x1, #48, #15
    42b4:	ubfx	x0, x3, #48, #15
    42b8:	and	w7, w7, #0xff
    42bc:	mov	x16, x12
    42c0:	cmp	x12, x5
    42c4:	and	w11, w5, #0xff
    42c8:	orr	x2, x2, x6, lsr #61
    42cc:	mov	x1, x8
    42d0:	lsl	x9, x6, #3
    42d4:	mov	x3, x0
    42d8:	lsl	x13, x10, #3
    42dc:	b.eq	4488 <PyInit__ctypes_test@@Base+0x234>  // b.none
    42e0:	sub	w0, w8, w0
    42e4:	cmp	w0, #0x0
    42e8:	b.le	4434 <PyInit__ctypes_test@@Base+0x1e0>
    42ec:	cbz	x3, 44e8 <PyInit__ctypes_test@@Base+0x294>
    42f0:	orr	x4, x4, #0x8000000000000
    42f4:	mov	x3, #0x7fff                	// #32767
    42f8:	cmp	x1, x3
    42fc:	b.eq	46ec <PyInit__ctypes_test@@Base+0x498>  // b.none
    4300:	cmp	w0, #0x74
    4304:	b.gt	4770 <PyInit__ctypes_test@@Base+0x51c>
    4308:	cmp	w0, #0x3f
    430c:	b.gt	48d0 <PyInit__ctypes_test@@Base+0x67c>
    4310:	mov	w3, #0x40                  	// #64
    4314:	sub	w3, w3, w0
    4318:	lsr	x6, x13, x0
    431c:	lsl	x13, x13, x3
    4320:	cmp	x13, #0x0
    4324:	cset	x5, ne  // ne = any
    4328:	lsl	x3, x4, x3
    432c:	orr	x3, x3, x6
    4330:	lsr	x0, x4, x0
    4334:	orr	x3, x3, x5
    4338:	sub	x2, x2, x0
    433c:	subs	x9, x9, x3
    4340:	sbc	x2, x2, xzr
    4344:	and	x3, x2, #0x7ffffffffffff
    4348:	tbz	x2, #51, 4528 <PyInit__ctypes_test@@Base+0x2d4>
    434c:	cbz	x3, 4754 <PyInit__ctypes_test@@Base+0x500>
    4350:	clz	x0, x3
    4354:	sub	w0, w0, #0xc
    4358:	neg	w2, w0
    435c:	lsl	x4, x3, x0
    4360:	lsl	x3, x9, x0
    4364:	lsr	x9, x9, x2
    4368:	orr	x2, x9, x4
    436c:	cmp	x1, w0, sxtw
    4370:	sxtw	x4, w0
    4374:	b.gt	4734 <PyInit__ctypes_test@@Base+0x4e0>
    4378:	sub	w1, w0, w1
    437c:	add	w0, w1, #0x1
    4380:	cmp	w0, #0x3f
    4384:	b.gt	4898 <PyInit__ctypes_test@@Base+0x644>
    4388:	mov	w1, #0x40                  	// #64
    438c:	sub	w1, w1, w0
    4390:	lsr	x4, x3, x0
    4394:	lsl	x3, x3, x1
    4398:	cmp	x3, #0x0
    439c:	lsl	x9, x2, x1
    43a0:	cset	x1, ne  // ne = any
    43a4:	orr	x9, x9, x4
    43a8:	lsr	x2, x2, x0
    43ac:	orr	x9, x9, x1
    43b0:	orr	x8, x9, x2
    43b4:	cbz	x8, 453c <PyInit__ctypes_test@@Base+0x2e8>
    43b8:	and	x0, x9, #0x7
    43bc:	mov	x1, #0x0                   	// #0
    43c0:	mov	w5, #0x1                   	// #1
    43c4:	cbz	x0, 4780 <PyInit__ctypes_test@@Base+0x52c>
    43c8:	and	x3, x15, #0xc00000
    43cc:	cmp	x3, #0x400, lsl #12
    43d0:	b.eq	46c4 <PyInit__ctypes_test@@Base+0x470>  // b.none
    43d4:	cmp	x3, #0x800, lsl #12
    43d8:	b.eq	46a4 <PyInit__ctypes_test@@Base+0x450>  // b.none
    43dc:	cbz	x3, 46d0 <PyInit__ctypes_test@@Base+0x47c>
    43e0:	and	x3, x2, #0x8000000000000
    43e4:	mov	w0, #0x10                  	// #16
    43e8:	cbz	w5, 43f0 <PyInit__ctypes_test@@Base+0x19c>
    43ec:	orr	w0, w0, #0x8
    43f0:	cbz	x3, 4708 <PyInit__ctypes_test@@Base+0x4b4>
    43f4:	add	x1, x1, #0x1
    43f8:	mov	x3, #0x7fff                	// #32767
    43fc:	cmp	x1, x3
    4400:	b.eq	45ec <PyInit__ctypes_test@@Base+0x398>  // b.none
    4404:	and	w1, w1, #0x7fff
    4408:	extr	x8, x2, x9, #3
    440c:	ubfx	x2, x2, #3, #48
    4410:	mov	x5, #0x0                   	// #0
    4414:	orr	w1, w1, w7, lsl #15
    4418:	bfxil	x5, x2, #0, #48
    441c:	fmov	d0, x8
    4420:	bfi	x5, x1, #48, #16
    4424:	fmov	v0.d[1], x5
    4428:	cbnz	w0, 4648 <PyInit__ctypes_test@@Base+0x3f4>
    442c:	ldp	x29, x30, [sp], #48
    4430:	ret
    4434:	mov	x14, x5
    4438:	b.eq	4554 <PyInit__ctypes_test@@Base+0x300>  // b.none
    443c:	cbnz	x8, 47d8 <PyInit__ctypes_test@@Base+0x584>
    4440:	orr	x1, x2, x9
    4444:	cbz	x1, 4504 <PyInit__ctypes_test@@Base+0x2b0>
    4448:	cmn	w0, #0x1
    444c:	b.eq	4bf4 <PyInit__ctypes_test@@Base+0x9a0>  // b.none
    4450:	mov	x1, #0x7fff                	// #32767
    4454:	mvn	w0, w0
    4458:	cmp	x3, x1
    445c:	b.ne	47ec <PyInit__ctypes_test@@Base+0x598>  // b.any
    4460:	orr	x0, x4, x13
    4464:	cbnz	x0, 4b4c <PyInit__ctypes_test@@Base+0x8f8>
    4468:	mov	x16, x14
    446c:	nop
    4470:	mov	x4, #0x0                   	// #0
    4474:	fmov	d0, x4
    4478:	lsl	x16, x16, #63
    447c:	orr	x5, x16, #0x7fff000000000000
    4480:	fmov	v0.d[1], x5
    4484:	b	442c <PyInit__ctypes_test@@Base+0x1d8>
    4488:	sub	w5, w8, w0
    448c:	cmp	w5, #0x0
    4490:	b.le	465c <PyInit__ctypes_test@@Base+0x408>
    4494:	cbz	x0, 459c <PyInit__ctypes_test@@Base+0x348>
    4498:	orr	x4, x4, #0x8000000000000
    449c:	mov	x0, #0x7fff                	// #32767
    44a0:	cmp	x1, x0
    44a4:	b.eq	46ec <PyInit__ctypes_test@@Base+0x498>  // b.none
    44a8:	cmp	w5, #0x74
    44ac:	b.gt	4880 <PyInit__ctypes_test@@Base+0x62c>
    44b0:	cmp	w5, #0x3f
    44b4:	b.gt	4980 <PyInit__ctypes_test@@Base+0x72c>
    44b8:	mov	w0, #0x40                  	// #64
    44bc:	sub	w0, w0, w5
    44c0:	lsr	x6, x13, x5
    44c4:	lsl	x13, x13, x0
    44c8:	cmp	x13, #0x0
    44cc:	lsl	x0, x4, x0
    44d0:	cset	x3, ne  // ne = any
    44d4:	orr	x0, x0, x6
    44d8:	lsr	x4, x4, x5
    44dc:	orr	x0, x0, x3
    44e0:	add	x2, x2, x4
    44e4:	b	488c <PyInit__ctypes_test@@Base+0x638>
    44e8:	orr	x3, x4, x13
    44ec:	cbz	x3, 485c <PyInit__ctypes_test@@Base+0x608>
    44f0:	subs	w0, w0, #0x1
    44f4:	b.ne	42f4 <PyInit__ctypes_test@@Base+0xa0>  // b.any
    44f8:	subs	x9, x9, x13
    44fc:	sbc	x2, x2, x4
    4500:	b	4344 <PyInit__ctypes_test@@Base+0xf0>
    4504:	mov	x0, #0x7fff                	// #32767
    4508:	cmp	x3, x0
    450c:	b.eq	4c40 <PyInit__ctypes_test@@Base+0x9ec>  // b.none
    4510:	mov	w7, w11
    4514:	mov	x2, x4
    4518:	mov	x9, x13
    451c:	mov	x1, x3
    4520:	mov	x12, x5
    4524:	nop
    4528:	orr	x8, x9, x2
    452c:	and	x0, x9, #0x7
    4530:	mov	w5, #0x0                   	// #0
    4534:	cbnz	x1, 43c4 <PyInit__ctypes_test@@Base+0x170>
    4538:	cbnz	x8, 43b8 <PyInit__ctypes_test@@Base+0x164>
    453c:	mov	x2, #0x0                   	// #0
    4540:	mov	x1, #0x0                   	// #0
    4544:	mov	w0, #0x0                   	// #0
    4548:	and	x2, x2, #0xffffffffffff
    454c:	and	w1, w1, #0x7fff
    4550:	b	4410 <PyInit__ctypes_test@@Base+0x1bc>
    4554:	add	x5, x8, #0x1
    4558:	tst	x5, #0x7ffe
    455c:	b.ne	482c <PyInit__ctypes_test@@Base+0x5d8>  // b.any
    4560:	orr	x5, x2, x9
    4564:	orr	x8, x4, x13
    4568:	cbnz	x1, 49ec <PyInit__ctypes_test@@Base+0x798>
    456c:	cbz	x5, 4a94 <PyInit__ctypes_test@@Base+0x840>
    4570:	cbz	x8, 4aa8 <PyInit__ctypes_test@@Base+0x854>
    4574:	subs	x5, x9, x13
    4578:	cmp	x9, x13
    457c:	sbc	x3, x2, x4
    4580:	tbz	x3, #51, 4c74 <PyInit__ctypes_test@@Base+0xa20>
    4584:	subs	x9, x13, x9
    4588:	mov	w7, w11
    458c:	sbc	x2, x4, x2
    4590:	mov	x12, x14
    4594:	orr	x8, x9, x2
    4598:	b	43b4 <PyInit__ctypes_test@@Base+0x160>
    459c:	orr	x0, x4, x13
    45a0:	cbz	x0, 4a74 <PyInit__ctypes_test@@Base+0x820>
    45a4:	subs	w5, w5, #0x1
    45a8:	b.ne	449c <PyInit__ctypes_test@@Base+0x248>  // b.any
    45ac:	adds	x9, x9, x13
    45b0:	adc	x2, x4, x2
    45b4:	nop
    45b8:	tbz	x2, #51, 4528 <PyInit__ctypes_test@@Base+0x2d4>
    45bc:	add	x1, x1, #0x1
    45c0:	mov	x0, #0x7fff                	// #32767
    45c4:	cmp	x1, x0
    45c8:	b.eq	4ab4 <PyInit__ctypes_test@@Base+0x860>  // b.none
    45cc:	and	x0, x9, #0x1
    45d0:	and	x3, x2, #0xfff7ffffffffffff
    45d4:	orr	x9, x0, x9, lsr #1
    45d8:	mov	w5, #0x0                   	// #0
    45dc:	orr	x9, x9, x2, lsl #63
    45e0:	lsr	x2, x3, #1
    45e4:	and	x0, x9, #0x7
    45e8:	b	43c4 <PyInit__ctypes_test@@Base+0x170>
    45ec:	and	x3, x15, #0xc00000
    45f0:	cbz	x3, 4628 <PyInit__ctypes_test@@Base+0x3d4>
    45f4:	cmp	x3, #0x400, lsl #12
    45f8:	b.eq	4620 <PyInit__ctypes_test@@Base+0x3cc>  // b.none
    45fc:	cmp	x3, #0x800, lsl #12
    4600:	csel	w12, w12, wzr, eq  // eq = none
    4604:	cbnz	w12, 4628 <PyInit__ctypes_test@@Base+0x3d4>
    4608:	mov	w1, #0x14                  	// #20
    460c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
    4610:	orr	w0, w0, w1
    4614:	mov	x8, #0xffffffffffffffff    	// #-1
    4618:	mov	x1, #0x7ffe                	// #32766
    461c:	b	4548 <PyInit__ctypes_test@@Base+0x2f4>
    4620:	cbnz	x12, 4608 <PyInit__ctypes_test@@Base+0x3b4>
    4624:	nop
    4628:	mov	w1, #0x14                  	// #20
    462c:	and	x16, x7, #0xff
    4630:	orr	w0, w0, w1
    4634:	mov	x4, #0x0                   	// #0
    4638:	fmov	d0, x4
    463c:	lsl	x16, x16, #63
    4640:	orr	x5, x16, #0x7fff000000000000
    4644:	fmov	v0.d[1], x5
    4648:	str	q0, [sp, #16]
    464c:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    4650:	ldr	q0, [sp, #16]
    4654:	ldp	x29, x30, [sp], #48
    4658:	ret
    465c:	b.eq	479c <PyInit__ctypes_test@@Base+0x548>  // b.none
    4660:	cbnz	x8, 4920 <PyInit__ctypes_test@@Base+0x6cc>
    4664:	orr	x0, x2, x9
    4668:	cbz	x0, 4b8c <PyInit__ctypes_test@@Base+0x938>
    466c:	cmn	w5, #0x1
    4670:	b.eq	4cec <PyInit__ctypes_test@@Base+0xa98>  // b.none
    4674:	mov	x0, #0x7fff                	// #32767
    4678:	mvn	w5, w5
    467c:	cmp	x3, x0
    4680:	b.ne	4934 <PyInit__ctypes_test@@Base+0x6e0>  // b.any
    4684:	orr	x0, x4, x13
    4688:	cbz	x0, 4470 <PyInit__ctypes_test@@Base+0x21c>
    468c:	lsr	x5, x4, #50
    4690:	mov	x9, x13
    4694:	eor	x5, x5, #0x1
    4698:	mov	x2, x4
    469c:	and	w5, w5, #0x1
    46a0:	b	4700 <PyInit__ctypes_test@@Base+0x4ac>
    46a4:	mov	w0, #0x10                  	// #16
    46a8:	cbz	x12, 46b4 <PyInit__ctypes_test@@Base+0x460>
    46ac:	adds	x9, x9, #0x8
    46b0:	cinc	x2, x2, cs  // cs = hs, nlast
    46b4:	and	x3, x2, #0x8000000000000
    46b8:	cbz	w5, 43f0 <PyInit__ctypes_test@@Base+0x19c>
    46bc:	orr	w0, w0, #0x8
    46c0:	b	43f0 <PyInit__ctypes_test@@Base+0x19c>
    46c4:	mov	w0, #0x10                  	// #16
    46c8:	cbnz	x12, 46b4 <PyInit__ctypes_test@@Base+0x460>
    46cc:	b	46ac <PyInit__ctypes_test@@Base+0x458>
    46d0:	and	x3, x9, #0xf
    46d4:	mov	w0, #0x10                  	// #16
    46d8:	cmp	x3, #0x4
    46dc:	b.eq	46b4 <PyInit__ctypes_test@@Base+0x460>  // b.none
    46e0:	adds	x9, x9, #0x4
    46e4:	cinc	x2, x2, cs  // cs = hs, nlast
    46e8:	b	46b4 <PyInit__ctypes_test@@Base+0x460>
    46ec:	orr	x0, x2, x9
    46f0:	cbz	x0, 4470 <PyInit__ctypes_test@@Base+0x21c>
    46f4:	lsr	x5, x2, #50
    46f8:	eor	x5, x5, #0x1
    46fc:	and	w5, w5, #0x1
    4700:	mov	w0, w5
    4704:	mov	x1, #0x7fff                	// #32767
    4708:	mov	x3, #0x7fff                	// #32767
    470c:	extr	x8, x2, x9, #3
    4710:	cmp	x1, x3
    4714:	lsr	x2, x2, #3
    4718:	b.ne	4548 <PyInit__ctypes_test@@Base+0x2f4>  // b.any
    471c:	orr	x1, x8, x2
    4720:	cbz	x1, 4d8c <PyInit__ctypes_test@@Base+0xb38>
    4724:	orr	x2, x2, #0x800000000000
    4728:	mov	w1, #0x7fff                	// #32767
    472c:	and	x2, x2, #0xffffffffffff
    4730:	b	4410 <PyInit__ctypes_test@@Base+0x1bc>
    4734:	mov	x9, x3
    4738:	and	x2, x2, #0xfff7ffffffffffff
    473c:	sub	x1, x1, x4
    4740:	orr	x8, x9, x2
    4744:	and	x0, x9, #0x7
    4748:	mov	w5, #0x0                   	// #0
    474c:	cbz	x1, 4538 <PyInit__ctypes_test@@Base+0x2e4>
    4750:	b	43c4 <PyInit__ctypes_test@@Base+0x170>
    4754:	clz	x2, x9
    4758:	add	w0, w2, #0x34
    475c:	cmp	w0, #0x3f
    4760:	b.le	4358 <PyInit__ctypes_test@@Base+0x104>
    4764:	sub	w2, w2, #0xc
    4768:	lsl	x2, x9, x2
    476c:	b	436c <PyInit__ctypes_test@@Base+0x118>
    4770:	orr	x4, x4, x13
    4774:	cmp	x4, #0x0
    4778:	cset	x3, ne  // ne = any
    477c:	b	433c <PyInit__ctypes_test@@Base+0xe8>
    4780:	and	x3, x2, #0x8000000000000
    4784:	mov	w0, #0x0                   	// #0
    4788:	cbz	w5, 43f0 <PyInit__ctypes_test@@Base+0x19c>
    478c:	mov	w0, #0x0                   	// #0
    4790:	tbz	w15, #11, 43f0 <PyInit__ctypes_test@@Base+0x19c>
    4794:	orr	w0, w0, #0x8
    4798:	b	43f0 <PyInit__ctypes_test@@Base+0x19c>
    479c:	add	x0, x8, #0x1
    47a0:	tst	x0, #0x7ffe
    47a4:	b.ne	49ac <PyInit__ctypes_test@@Base+0x758>  // b.any
    47a8:	orr	x0, x2, x9
    47ac:	cbnz	x8, 4b68 <PyInit__ctypes_test@@Base+0x914>
    47b0:	orr	x8, x4, x13
    47b4:	cbz	x0, 4bbc <PyInit__ctypes_test@@Base+0x968>
    47b8:	cbz	x8, 4aa8 <PyInit__ctypes_test@@Base+0x854>
    47bc:	adds	x9, x9, x13
    47c0:	adc	x2, x4, x2
    47c4:	tbz	x2, #51, 4594 <PyInit__ctypes_test@@Base+0x340>
    47c8:	and	x2, x2, #0xfff7ffffffffffff
    47cc:	and	x0, x9, #0x7
    47d0:	mov	x1, #0x1                   	// #1
    47d4:	b	43c4 <PyInit__ctypes_test@@Base+0x170>
    47d8:	mov	x1, #0x7fff                	// #32767
    47dc:	neg	w0, w0
    47e0:	orr	x2, x2, #0x8000000000000
    47e4:	cmp	x3, x1
    47e8:	b.eq	4460 <PyInit__ctypes_test@@Base+0x20c>  // b.none
    47ec:	cmp	w0, #0x74
    47f0:	b.gt	48fc <PyInit__ctypes_test@@Base+0x6a8>
    47f4:	cmp	w0, #0x3f
    47f8:	b.gt	4b18 <PyInit__ctypes_test@@Base+0x8c4>
    47fc:	mov	w1, #0x40                  	// #64
    4800:	sub	w1, w1, w0
    4804:	lsr	x5, x9, x0
    4808:	lsl	x9, x9, x1
    480c:	cmp	x9, #0x0
    4810:	lsl	x9, x2, x1
    4814:	cset	x1, ne  // ne = any
    4818:	orr	x9, x9, x5
    481c:	lsr	x0, x2, x0
    4820:	orr	x9, x9, x1
    4824:	sub	x4, x4, x0
    4828:	b	4908 <PyInit__ctypes_test@@Base+0x6b4>
    482c:	subs	x5, x9, x13
    4830:	cmp	x9, x13
    4834:	sbc	x3, x2, x4
    4838:	tbnz	x3, #51, 49d4 <PyInit__ctypes_test@@Base+0x780>
    483c:	orr	x8, x5, x3
    4840:	cbnz	x8, 4b00 <PyInit__ctypes_test@@Base+0x8ac>
    4844:	and	x15, x15, #0xc00000
    4848:	mov	x2, #0x0                   	// #0
    484c:	cmp	x15, #0x800, lsl #12
    4850:	mov	x1, #0x0                   	// #0
    4854:	cset	w7, eq  // eq = none
    4858:	b	4548 <PyInit__ctypes_test@@Base+0x2f4>
    485c:	mov	x0, #0x7fff                	// #32767
    4860:	cmp	x8, x0
    4864:	b.ne	4528 <PyInit__ctypes_test@@Base+0x2d4>  // b.any
    4868:	orr	x0, x2, x9
    486c:	cbnz	x0, 46f4 <PyInit__ctypes_test@@Base+0x4a0>
    4870:	mov	x2, #0x0                   	// #0
    4874:	mov	x8, #0x0                   	// #0
    4878:	mov	w0, #0x0                   	// #0
    487c:	b	471c <PyInit__ctypes_test@@Base+0x4c8>
    4880:	orr	x4, x4, x13
    4884:	cmp	x4, #0x0
    4888:	cset	x0, ne  // ne = any
    488c:	adds	x9, x0, x9
    4890:	cinc	x2, x2, cs  // cs = hs, nlast
    4894:	b	45b8 <PyInit__ctypes_test@@Base+0x364>
    4898:	mov	w4, #0x80                  	// #128
    489c:	sub	w4, w4, w0
    48a0:	cmp	w0, #0x40
    48a4:	sub	w9, w1, #0x3f
    48a8:	lsl	x0, x2, x4
    48ac:	orr	x0, x3, x0
    48b0:	csel	x3, x0, x3, ne  // ne = any
    48b4:	lsr	x9, x2, x9
    48b8:	cmp	x3, #0x0
    48bc:	mov	x2, #0x0                   	// #0
    48c0:	cset	x0, ne  // ne = any
    48c4:	orr	x9, x0, x9
    48c8:	mov	x8, x9
    48cc:	b	43b4 <PyInit__ctypes_test@@Base+0x160>
    48d0:	mov	w5, #0x80                  	// #128
    48d4:	sub	w5, w5, w0
    48d8:	subs	w0, w0, #0x40
    48dc:	lsl	x5, x4, x5
    48e0:	orr	x5, x13, x5
    48e4:	csel	x13, x5, x13, ne  // ne = any
    48e8:	lsr	x4, x4, x0
    48ec:	cmp	x13, #0x0
    48f0:	cset	x3, ne  // ne = any
    48f4:	orr	x3, x3, x4
    48f8:	b	433c <PyInit__ctypes_test@@Base+0xe8>
    48fc:	orr	x2, x2, x9
    4900:	cmp	x2, #0x0
    4904:	cset	x9, ne  // ne = any
    4908:	subs	x9, x13, x9
    490c:	mov	w7, w11
    4910:	sbc	x2, x4, xzr
    4914:	mov	x1, x3
    4918:	mov	x12, x14
    491c:	b	4344 <PyInit__ctypes_test@@Base+0xf0>
    4920:	mov	x0, #0x7fff                	// #32767
    4924:	neg	w5, w5
    4928:	orr	x2, x2, #0x8000000000000
    492c:	cmp	x3, x0
    4930:	b.eq	4684 <PyInit__ctypes_test@@Base+0x430>  // b.none
    4934:	cmp	w5, #0x74
    4938:	b.gt	4b08 <PyInit__ctypes_test@@Base+0x8b4>
    493c:	cmp	w5, #0x3f
    4940:	b.gt	4bc8 <PyInit__ctypes_test@@Base+0x974>
    4944:	mov	w1, #0x40                  	// #64
    4948:	sub	w1, w1, w5
    494c:	lsr	x6, x9, x5
    4950:	lsl	x9, x9, x1
    4954:	cmp	x9, #0x0
    4958:	cset	x0, ne  // ne = any
    495c:	lsl	x9, x2, x1
    4960:	orr	x9, x9, x6
    4964:	lsr	x5, x2, x5
    4968:	orr	x9, x9, x0
    496c:	add	x4, x4, x5
    4970:	adds	x9, x9, x13
    4974:	mov	x1, x3
    4978:	cinc	x2, x4, cs  // cs = hs, nlast
    497c:	b	45b8 <PyInit__ctypes_test@@Base+0x364>
    4980:	mov	w0, #0x80                  	// #128
    4984:	sub	w0, w0, w5
    4988:	subs	w5, w5, #0x40
    498c:	lsl	x0, x4, x0
    4990:	orr	x0, x13, x0
    4994:	csel	x13, x0, x13, ne  // ne = any
    4998:	lsr	x4, x4, x5
    499c:	cmp	x13, #0x0
    49a0:	cset	x0, ne  // ne = any
    49a4:	orr	x0, x0, x4
    49a8:	b	488c <PyInit__ctypes_test@@Base+0x638>
    49ac:	mov	x1, #0x7fff                	// #32767
    49b0:	cmp	x0, x1
    49b4:	b.eq	4c10 <PyInit__ctypes_test@@Base+0x9bc>  // b.none
    49b8:	adds	x9, x9, x13
    49bc:	mov	x1, x0
    49c0:	adc	x2, x4, x2
    49c4:	ubfx	x0, x9, #1, #3
    49c8:	extr	x9, x2, x9, #1
    49cc:	lsr	x2, x2, #1
    49d0:	b	43c4 <PyInit__ctypes_test@@Base+0x170>
    49d4:	cmp	x13, x9
    49d8:	mov	w7, w11
    49dc:	sbc	x3, x4, x2
    49e0:	sub	x9, x13, x9
    49e4:	mov	x12, x14
    49e8:	b	434c <PyInit__ctypes_test@@Base+0xf8>
    49ec:	mov	x12, #0x7fff                	// #32767
    49f0:	cmp	x1, x12
    49f4:	b.eq	4a20 <PyInit__ctypes_test@@Base+0x7cc>  // b.none
    49f8:	cmp	x3, x12
    49fc:	b.eq	4c50 <PyInit__ctypes_test@@Base+0x9fc>  // b.none
    4a00:	cbnz	x5, 4a38 <PyInit__ctypes_test@@Base+0x7e4>
    4a04:	mov	w5, w0
    4a08:	cbnz	x8, 4d30 <PyInit__ctypes_test@@Base+0xadc>
    4a0c:	mov	w7, #0x0                   	// #0
    4a10:	mov	x2, #0xffffffffffff        	// #281474976710655
    4a14:	mov	w0, #0x1                   	// #1
    4a18:	mov	x8, #0xffffffffffffffff    	// #-1
    4a1c:	b	4724 <PyInit__ctypes_test@@Base+0x4d0>
    4a20:	cbz	x5, 4d4c <PyInit__ctypes_test@@Base+0xaf8>
    4a24:	lsr	x0, x2, #50
    4a28:	cmp	x3, x1
    4a2c:	eor	x0, x0, #0x1
    4a30:	and	w0, w0, #0x1
    4a34:	b.eq	4c50 <PyInit__ctypes_test@@Base+0x9fc>  // b.none
    4a38:	cbz	x8, 4c6c <PyInit__ctypes_test@@Base+0xa18>
    4a3c:	bfi	x6, x2, #61, #3
    4a40:	lsr	x3, x2, #3
    4a44:	tbz	x2, #50, 4a60 <PyInit__ctypes_test@@Base+0x80c>
    4a48:	lsr	x1, x4, #3
    4a4c:	tbnz	x4, #50, 4a60 <PyInit__ctypes_test@@Base+0x80c>
    4a50:	mov	x6, x10
    4a54:	mov	w7, w11
    4a58:	bfi	x6, x4, #61, #3
    4a5c:	mov	x3, x1
    4a60:	extr	x2, x3, x6, #61
    4a64:	bfi	x6, x2, #61, #3
    4a68:	lsr	x2, x2, #3
    4a6c:	mov	x8, x6
    4a70:	b	471c <PyInit__ctypes_test@@Base+0x4c8>
    4a74:	mov	x0, #0x7fff                	// #32767
    4a78:	cmp	x8, x0
    4a7c:	b.ne	4528 <PyInit__ctypes_test@@Base+0x2d4>  // b.any
    4a80:	orr	x0, x2, x9
    4a84:	cbz	x0, 4870 <PyInit__ctypes_test@@Base+0x61c>
    4a88:	lsr	x5, x2, #50
    4a8c:	eor	w5, w5, #0x1
    4a90:	b	4700 <PyInit__ctypes_test@@Base+0x4ac>
    4a94:	cbz	x8, 4ba8 <PyInit__ctypes_test@@Base+0x954>
    4a98:	mov	w7, w11
    4a9c:	mov	x2, x4
    4aa0:	mov	x9, x13
    4aa4:	mov	x12, x14
    4aa8:	mov	x1, #0x0                   	// #0
    4aac:	mov	x3, #0x0                   	// #0
    4ab0:	b	478c <PyInit__ctypes_test@@Base+0x538>
    4ab4:	ands	x3, x15, #0xc00000
    4ab8:	b.eq	4b44 <PyInit__ctypes_test@@Base+0x8f0>  // b.none
    4abc:	cmp	x3, #0x400, lsl #12
    4ac0:	eor	w0, w7, #0x1
    4ac4:	cset	w1, eq  // eq = none
    4ac8:	tst	w1, w0
    4acc:	b.ne	4d68 <PyInit__ctypes_test@@Base+0xb14>  // b.any
    4ad0:	cmp	x3, #0x800, lsl #12
    4ad4:	b.eq	4d14 <PyInit__ctypes_test@@Base+0xac0>  // b.none
    4ad8:	cmp	x3, #0x400, lsl #12
    4adc:	mov	w0, #0x14                  	// #20
    4ae0:	b.ne	45f0 <PyInit__ctypes_test@@Base+0x39c>  // b.any
    4ae4:	mov	x2, #0xffffffffffffffff    	// #-1
    4ae8:	mov	x1, #0x7ffe                	// #32766
    4aec:	mov	x9, x2
    4af0:	mov	w5, #0x0                   	// #0
    4af4:	mov	w0, #0x14                  	// #20
    4af8:	cbnz	x12, 46b4 <PyInit__ctypes_test@@Base+0x460>
    4afc:	b	46ac <PyInit__ctypes_test@@Base+0x458>
    4b00:	mov	x9, x5
    4b04:	b	434c <PyInit__ctypes_test@@Base+0xf8>
    4b08:	orr	x2, x2, x9
    4b0c:	cmp	x2, #0x0
    4b10:	cset	x9, ne  // ne = any
    4b14:	b	4970 <PyInit__ctypes_test@@Base+0x71c>
    4b18:	mov	w1, #0x80                  	// #128
    4b1c:	sub	w1, w1, w0
    4b20:	subs	w0, w0, #0x40
    4b24:	lsl	x1, x2, x1
    4b28:	orr	x1, x9, x1
    4b2c:	csel	x9, x1, x9, ne  // ne = any
    4b30:	lsr	x2, x2, x0
    4b34:	cmp	x9, #0x0
    4b38:	cset	x9, ne  // ne = any
    4b3c:	orr	x9, x9, x2
    4b40:	b	4908 <PyInit__ctypes_test@@Base+0x6b4>
    4b44:	mov	w0, #0x14                  	// #20
    4b48:	b	4634 <PyInit__ctypes_test@@Base+0x3e0>
    4b4c:	lsr	x5, x4, #50
    4b50:	mov	w7, w11
    4b54:	eor	x5, x5, #0x1
    4b58:	mov	x9, x13
    4b5c:	and	w5, w5, #0x1
    4b60:	mov	x2, x4
    4b64:	b	4700 <PyInit__ctypes_test@@Base+0x4ac>
    4b68:	mov	x8, #0x7fff                	// #32767
    4b6c:	cmp	x1, x8
    4b70:	b.eq	4c90 <PyInit__ctypes_test@@Base+0xa3c>  // b.none
    4b74:	cmp	x3, x8
    4b78:	b.eq	4d04 <PyInit__ctypes_test@@Base+0xab0>  // b.none
    4b7c:	cbnz	x0, 4ca8 <PyInit__ctypes_test@@Base+0xa54>
    4b80:	mov	x2, x4
    4b84:	mov	x9, x13
    4b88:	b	4700 <PyInit__ctypes_test@@Base+0x4ac>
    4b8c:	mov	x0, #0x7fff                	// #32767
    4b90:	cmp	x3, x0
    4b94:	b.eq	4d40 <PyInit__ctypes_test@@Base+0xaec>  // b.none
    4b98:	mov	x2, x4
    4b9c:	mov	x9, x13
    4ba0:	mov	x1, x3
    4ba4:	b	4528 <PyInit__ctypes_test@@Base+0x2d4>
    4ba8:	and	x15, x15, #0xc00000
    4bac:	mov	x2, #0x0                   	// #0
    4bb0:	cmp	x15, #0x800, lsl #12
    4bb4:	cset	w7, eq  // eq = none
    4bb8:	b	4548 <PyInit__ctypes_test@@Base+0x2f4>
    4bbc:	mov	x2, x4
    4bc0:	mov	x9, x13
    4bc4:	b	43b4 <PyInit__ctypes_test@@Base+0x160>
    4bc8:	mov	w0, #0x80                  	// #128
    4bcc:	sub	w0, w0, w5
    4bd0:	subs	w5, w5, #0x40
    4bd4:	lsl	x0, x2, x0
    4bd8:	orr	x0, x9, x0
    4bdc:	csel	x9, x0, x9, ne  // ne = any
    4be0:	lsr	x2, x2, x5
    4be4:	cmp	x9, #0x0
    4be8:	cset	x9, ne  // ne = any
    4bec:	orr	x9, x9, x2
    4bf0:	b	4970 <PyInit__ctypes_test@@Base+0x71c>
    4bf4:	cmp	x13, x9
    4bf8:	mov	w7, w11
    4bfc:	sbc	x2, x4, x2
    4c00:	sub	x9, x13, x9
    4c04:	mov	x1, x3
    4c08:	mov	x12, x5
    4c0c:	b	4344 <PyInit__ctypes_test@@Base+0xf0>
    4c10:	ands	x3, x15, #0xc00000
    4c14:	b.eq	4b44 <PyInit__ctypes_test@@Base+0x8f0>  // b.none
    4c18:	cmp	x3, #0x400, lsl #12
    4c1c:	eor	w0, w7, #0x1
    4c20:	csel	w0, w0, wzr, eq  // eq = none
    4c24:	cbnz	w0, 4d68 <PyInit__ctypes_test@@Base+0xb14>
    4c28:	cmp	x3, #0x800, lsl #12
    4c2c:	b.ne	4ad8 <PyInit__ctypes_test@@Base+0x884>  // b.any
    4c30:	cbz	x12, 4d18 <PyInit__ctypes_test@@Base+0xac4>
    4c34:	mov	w0, #0x14                  	// #20
    4c38:	mov	x16, #0x1                   	// #1
    4c3c:	b	4634 <PyInit__ctypes_test@@Base+0x3e0>
    4c40:	orr	x0, x4, x13
    4c44:	cbnz	x0, 4b4c <PyInit__ctypes_test@@Base+0x8f8>
    4c48:	mov	w7, w11
    4c4c:	b	4870 <PyInit__ctypes_test@@Base+0x61c>
    4c50:	cbz	x8, 4d5c <PyInit__ctypes_test@@Base+0xb08>
    4c54:	tst	x4, #0x4000000000000
    4c58:	csinc	w0, w0, wzr, ne  // ne = any
    4c5c:	cbnz	x5, 4a3c <PyInit__ctypes_test@@Base+0x7e8>
    4c60:	mov	w7, w11
    4c64:	mov	x2, x4
    4c68:	mov	x9, x13
    4c6c:	mov	w5, w0
    4c70:	b	4700 <PyInit__ctypes_test@@Base+0x4ac>
    4c74:	orr	x8, x5, x3
    4c78:	cbz	x8, 4ba8 <PyInit__ctypes_test@@Base+0x954>
    4c7c:	and	x0, x5, #0x7
    4c80:	mov	x9, x5
    4c84:	mov	x2, x3
    4c88:	mov	w5, #0x1                   	// #1
    4c8c:	b	43c4 <PyInit__ctypes_test@@Base+0x170>
    4c90:	cbz	x0, 4cfc <PyInit__ctypes_test@@Base+0xaa8>
    4c94:	lsr	x5, x2, #50
    4c98:	cmp	x3, x1
    4c9c:	eor	x5, x5, #0x1
    4ca0:	and	w5, w5, #0x1
    4ca4:	b.eq	4d74 <PyInit__ctypes_test@@Base+0xb20>  // b.none
    4ca8:	orr	x13, x4, x13
    4cac:	cbz	x13, 4700 <PyInit__ctypes_test@@Base+0x4ac>
    4cb0:	bfi	x6, x2, #61, #3
    4cb4:	lsr	x0, x2, #3
    4cb8:	tbz	x2, #50, 4cd4 <PyInit__ctypes_test@@Base+0xa80>
    4cbc:	lsr	x1, x4, #3
    4cc0:	tbnz	x4, #50, 4cd4 <PyInit__ctypes_test@@Base+0xa80>
    4cc4:	and	x6, x10, #0x1fffffffffffffff
    4cc8:	mov	w7, w11
    4ccc:	orr	x6, x6, x4, lsl #61
    4cd0:	mov	x0, x1
    4cd4:	extr	x2, x0, x6, #61
    4cd8:	mov	w0, w5
    4cdc:	bfi	x6, x2, #61, #3
    4ce0:	lsr	x2, x2, #3
    4ce4:	mov	x8, x6
    4ce8:	b	471c <PyInit__ctypes_test@@Base+0x4c8>
    4cec:	adds	x9, x9, x13
    4cf0:	mov	x1, x3
    4cf4:	adc	x2, x4, x2
    4cf8:	b	45b8 <PyInit__ctypes_test@@Base+0x364>
    4cfc:	cmp	x3, x1
    4d00:	b.ne	4b80 <PyInit__ctypes_test@@Base+0x92c>  // b.any
    4d04:	orr	x1, x4, x13
    4d08:	cbnz	x1, 4d7c <PyInit__ctypes_test@@Base+0xb28>
    4d0c:	cbz	x0, 4870 <PyInit__ctypes_test@@Base+0x61c>
    4d10:	b	4700 <PyInit__ctypes_test@@Base+0x4ac>
    4d14:	cbnz	x16, 4c34 <PyInit__ctypes_test@@Base+0x9e0>
    4d18:	mov	x2, #0xffffffffffffffff    	// #-1
    4d1c:	mov	w7, #0x0                   	// #0
    4d20:	mov	x9, x2
    4d24:	mov	x1, #0x7ffe                	// #32766
    4d28:	mov	w0, #0x14                  	// #20
    4d2c:	b	43f4 <PyInit__ctypes_test@@Base+0x1a0>
    4d30:	mov	w7, w11
    4d34:	mov	x2, x4
    4d38:	mov	x9, x13
    4d3c:	b	4700 <PyInit__ctypes_test@@Base+0x4ac>
    4d40:	orr	x0, x4, x13
    4d44:	cbz	x0, 4870 <PyInit__ctypes_test@@Base+0x61c>
    4d48:	b	468c <PyInit__ctypes_test@@Base+0x438>
    4d4c:	cmp	x3, x1
    4d50:	b.eq	4c50 <PyInit__ctypes_test@@Base+0x9fc>  // b.none
    4d54:	mov	w5, #0x0                   	// #0
    4d58:	b	4a08 <PyInit__ctypes_test@@Base+0x7b4>
    4d5c:	cbnz	x5, 4c6c <PyInit__ctypes_test@@Base+0xa18>
    4d60:	mov	w5, w0
    4d64:	b	4a08 <PyInit__ctypes_test@@Base+0x7b4>
    4d68:	mov	w0, #0x14                  	// #20
    4d6c:	mov	x16, #0x0                   	// #0
    4d70:	b	4634 <PyInit__ctypes_test@@Base+0x3e0>
    4d74:	orr	x1, x4, x13
    4d78:	cbz	x1, 4700 <PyInit__ctypes_test@@Base+0x4ac>
    4d7c:	tst	x4, #0x4000000000000
    4d80:	csinc	w5, w5, wzr, ne  // ne = any
    4d84:	cbnz	x0, 4cb0 <PyInit__ctypes_test@@Base+0xa5c>
    4d88:	b	4b80 <PyInit__ctypes_test@@Base+0x92c>
    4d8c:	mov	x8, #0x0                   	// #0
    4d90:	mov	w1, #0x7fff                	// #32767
    4d94:	mov	x2, #0x0                   	// #0
    4d98:	b	4410 <PyInit__ctypes_test@@Base+0x1bc>
    4d9c:	nop
    4da0:	stp	x29, x30, [sp, #-48]!
    4da4:	mov	x29, sp
    4da8:	str	q0, [sp, #16]
    4dac:	str	q1, [sp, #32]
    4db0:	ldp	x2, x0, [sp, #16]
    4db4:	ldp	x5, x3, [sp, #32]
    4db8:	mrs	x10, fpcr
    4dbc:	lsr	x1, x0, #63
    4dc0:	ubfx	x6, x0, #0, #48
    4dc4:	and	w13, w1, #0xff
    4dc8:	mov	x14, x1
    4dcc:	ubfx	x7, x0, #48, #15
    4dd0:	cbz	w7, 51f0 <PyInit__ctypes_test@@Base+0xf9c>
    4dd4:	mov	w4, #0x7fff                	// #32767
    4dd8:	cmp	w7, w4
    4ddc:	b.eq	5238 <PyInit__ctypes_test@@Base+0xfe4>  // b.none
    4de0:	and	x7, x7, #0xffff
    4de4:	extr	x6, x6, x2, #61
    4de8:	mov	x15, #0xffffffffffffc001    	// #-16383
    4dec:	orr	x4, x6, #0x8000000000000
    4df0:	add	x7, x7, x15
    4df4:	lsl	x2, x2, #3
    4df8:	mov	x1, #0x0                   	// #0
    4dfc:	mov	x16, #0x0                   	// #0
    4e00:	mov	w0, #0x0                   	// #0
    4e04:	lsr	x8, x3, #63
    4e08:	ubfx	x6, x3, #0, #48
    4e0c:	and	w15, w8, #0xff
    4e10:	ubfx	x9, x3, #48, #15
    4e14:	cbz	w9, 51ac <PyInit__ctypes_test@@Base+0xf58>
    4e18:	mov	w11, #0x7fff                	// #32767
    4e1c:	cmp	w9, w11
    4e20:	b.eq	4ee4 <PyInit__ctypes_test@@Base+0xc90>  // b.none
    4e24:	and	x9, x9, #0xffff
    4e28:	extr	x6, x6, x5, #61
    4e2c:	mov	x12, #0xffffffffffffc001    	// #-16383
    4e30:	orr	x6, x6, #0x8000000000000
    4e34:	add	x9, x9, x12
    4e38:	lsl	x5, x5, #3
    4e3c:	sub	x7, x7, x9
    4e40:	mov	x9, #0x0                   	// #0
    4e44:	eor	w11, w13, w15
    4e48:	cmp	x1, #0x9
    4e4c:	and	x3, x11, #0xff
    4e50:	mov	x12, x3
    4e54:	b.gt	5184 <PyInit__ctypes_test@@Base+0xf30>
    4e58:	cmp	x1, #0x7
    4e5c:	b.gt	5344 <PyInit__ctypes_test@@Base+0x10f0>
    4e60:	cmp	x1, #0x3
    4e64:	b.eq	4e80 <PyInit__ctypes_test@@Base+0xc2c>  // b.none
    4e68:	b.le	5154 <PyInit__ctypes_test@@Base+0xf00>
    4e6c:	cmp	x1, #0x5
    4e70:	b.eq	5194 <PyInit__ctypes_test@@Base+0xf40>  // b.none
    4e74:	b.le	4f78 <PyInit__ctypes_test@@Base+0xd24>
    4e78:	cmp	x1, #0x6
    4e7c:	b.eq	4f48 <PyInit__ctypes_test@@Base+0xcf4>  // b.none
    4e80:	cmp	x9, #0x1
    4e84:	b.eq	52c8 <PyInit__ctypes_test@@Base+0x1074>  // b.none
    4e88:	cbz	x9, 4e9c <PyInit__ctypes_test@@Base+0xc48>
    4e8c:	cmp	x9, #0x2
    4e90:	b.eq	54cc <PyInit__ctypes_test@@Base+0x1278>  // b.none
    4e94:	cmp	x9, #0x3
    4e98:	b.eq	54b4 <PyInit__ctypes_test@@Base+0x1260>  // b.none
    4e9c:	mov	x1, #0x3fff                	// #16383
    4ea0:	mov	x12, x8
    4ea4:	add	x3, x7, x1
    4ea8:	cmp	x3, #0x0
    4eac:	b.le	5388 <PyInit__ctypes_test@@Base+0x1134>
    4eb0:	tst	x5, #0x7
    4eb4:	b.ne	52f8 <PyInit__ctypes_test@@Base+0x10a4>  // b.any
    4eb8:	and	w11, w12, #0x1
    4ebc:	tbz	x6, #52, 4ec8 <PyInit__ctypes_test@@Base+0xc74>
    4ec0:	and	x6, x6, #0xffefffffffffffff
    4ec4:	add	x3, x7, #0x4, lsl #12
    4ec8:	mov	x1, #0x7ffe                	// #32766
    4ecc:	cmp	x3, x1
    4ed0:	b.gt	5470 <PyInit__ctypes_test@@Base+0x121c>
    4ed4:	and	w1, w3, #0x7fff
    4ed8:	extr	x2, x6, x5, #3
    4edc:	ubfx	x6, x6, #3, #48
    4ee0:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    4ee4:	mov	x9, #0xffffffffffff8001    	// #-32767
    4ee8:	orr	x3, x6, x5
    4eec:	add	x7, x7, x9
    4ef0:	cbz	x3, 526c <PyInit__ctypes_test@@Base+0x1018>
    4ef4:	tst	x6, #0x800000000000
    4ef8:	orr	x1, x1, #0x3
    4efc:	csinc	w0, w0, wzr, ne  // ne = any
    4f00:	mov	x9, #0x3                   	// #3
    4f04:	eor	w11, w13, w15
    4f08:	cmp	x1, #0x9
    4f0c:	and	x3, x11, #0xff
    4f10:	mov	x12, x3
    4f14:	b.le	4e58 <PyInit__ctypes_test@@Base+0xc04>
    4f18:	cmp	x1, #0xf
    4f1c:	b.ne	5184 <PyInit__ctypes_test@@Base+0xf30>  // b.any
    4f20:	tbz	x4, #47, 5330 <PyInit__ctypes_test@@Base+0x10dc>
    4f24:	tbnz	x6, #47, 5330 <PyInit__ctypes_test@@Base+0x10dc>
    4f28:	orr	x6, x6, #0x800000000000
    4f2c:	mov	w11, w15
    4f30:	and	x6, x6, #0xffffffffffff
    4f34:	mov	x2, x5
    4f38:	mov	w1, #0x7fff                	// #32767
    4f3c:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    4f40:	cmp	x1, #0x2
    4f44:	b.ne	4f80 <PyInit__ctypes_test@@Base+0xd2c>  // b.any
    4f48:	mov	w1, #0x0                   	// #0
    4f4c:	mov	x6, #0x0                   	// #0
    4f50:	mov	x2, #0x0                   	// #0
    4f54:	mov	x5, #0x0                   	// #0
    4f58:	orr	w1, w1, w11, lsl #15
    4f5c:	bfxil	x5, x6, #0, #48
    4f60:	fmov	d0, x2
    4f64:	bfi	x5, x1, #48, #16
    4f68:	fmov	v0.d[1], x5
    4f6c:	cbnz	w0, 5174 <PyInit__ctypes_test@@Base+0xf20>
    4f70:	ldp	x29, x30, [sp], #48
    4f74:	ret
    4f78:	cmp	x1, #0x4
    4f7c:	b.eq	4f48 <PyInit__ctypes_test@@Base+0xcf4>  // b.none
    4f80:	cmp	x4, x6
    4f84:	b.ls	52dc <PyInit__ctypes_test@@Base+0x1088>  // b.plast
    4f88:	lsr	x3, x4, #1
    4f8c:	extr	x8, x4, x2, #1
    4f90:	lsl	x2, x2, #63
    4f94:	ubfx	x14, x6, #20, #32
    4f98:	extr	x9, x6, x5, #52
    4f9c:	lsl	x13, x5, #12
    4fa0:	and	x15, x9, #0xffffffff
    4fa4:	udiv	x5, x3, x14
    4fa8:	msub	x3, x5, x14, x3
    4fac:	mul	x1, x15, x5
    4fb0:	extr	x3, x3, x8, #32
    4fb4:	cmp	x1, x3
    4fb8:	b.ls	4fcc <PyInit__ctypes_test@@Base+0xd78>  // b.plast
    4fbc:	adds	x3, x9, x3
    4fc0:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
    4fc4:	b.hi	55ac <PyInit__ctypes_test@@Base+0x1358>  // b.pmore
    4fc8:	sub	x5, x5, #0x1
    4fcc:	sub	x3, x3, x1
    4fd0:	mov	x4, x8
    4fd4:	udiv	x1, x3, x14
    4fd8:	msub	x3, x1, x14, x3
    4fdc:	mul	x6, x15, x1
    4fe0:	bfi	x4, x3, #32, #32
    4fe4:	cmp	x6, x4
    4fe8:	b.ls	4ffc <PyInit__ctypes_test@@Base+0xda8>  // b.plast
    4fec:	adds	x4, x9, x4
    4ff0:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
    4ff4:	b.hi	55a0 <PyInit__ctypes_test@@Base+0x134c>  // b.pmore
    4ff8:	sub	x1, x1, #0x1
    4ffc:	orr	x8, x1, x5, lsl #32
    5000:	and	x17, x13, #0xffffffff
    5004:	and	x1, x8, #0xffffffff
    5008:	lsr	x16, x13, #32
    500c:	lsr	x5, x8, #32
    5010:	sub	x4, x4, x6
    5014:	mov	x18, #0x100000000           	// #4294967296
    5018:	mul	x3, x1, x17
    501c:	mul	x30, x5, x17
    5020:	madd	x6, x16, x1, x30
    5024:	and	x1, x3, #0xffffffff
    5028:	mul	x5, x5, x16
    502c:	add	x3, x6, x3, lsr #32
    5030:	add	x6, x5, x18
    5034:	cmp	x30, x3
    5038:	csel	x5, x6, x5, hi  // hi = pmore
    503c:	add	x1, x1, x3, lsl #32
    5040:	add	x5, x5, x3, lsr #32
    5044:	cmp	x4, x5
    5048:	b.cc	5354 <PyInit__ctypes_test@@Base+0x1100>  // b.lo, b.ul, b.last
    504c:	ccmp	x2, x1, #0x2, eq  // eq = none
    5050:	mov	x6, x8
    5054:	b.cc	5354 <PyInit__ctypes_test@@Base+0x1100>  // b.lo, b.ul, b.last
    5058:	subs	x8, x2, x1
    505c:	mov	x3, #0x3fff                	// #16383
    5060:	cmp	x2, x1
    5064:	add	x3, x7, x3
    5068:	sbc	x4, x4, x5
    506c:	cmp	x9, x4
    5070:	b.eq	55b8 <PyInit__ctypes_test@@Base+0x1364>  // b.none
    5074:	udiv	x5, x4, x14
    5078:	msub	x4, x5, x14, x4
    507c:	mul	x2, x15, x5
    5080:	extr	x1, x4, x8, #32
    5084:	cmp	x2, x1
    5088:	b.ls	509c <PyInit__ctypes_test@@Base+0xe48>  // b.plast
    508c:	adds	x1, x9, x1
    5090:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
    5094:	b.hi	5670 <PyInit__ctypes_test@@Base+0x141c>  // b.pmore
    5098:	sub	x5, x5, #0x1
    509c:	sub	x1, x1, x2
    50a0:	udiv	x2, x1, x14
    50a4:	msub	x1, x2, x14, x1
    50a8:	mul	x15, x15, x2
    50ac:	bfi	x8, x1, #32, #32
    50b0:	mov	x1, x8
    50b4:	cmp	x15, x8
    50b8:	b.ls	50cc <PyInit__ctypes_test@@Base+0xe78>  // b.plast
    50bc:	adds	x1, x9, x8
    50c0:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
    50c4:	b.hi	567c <PyInit__ctypes_test@@Base+0x1428>  // b.pmore
    50c8:	sub	x2, x2, #0x1
    50cc:	orr	x5, x2, x5, lsl #32
    50d0:	mov	x11, #0x100000000           	// #4294967296
    50d4:	and	x4, x5, #0xffffffff
    50d8:	sub	x1, x1, x15
    50dc:	lsr	x14, x5, #32
    50e0:	mul	x2, x17, x4
    50e4:	mul	x17, x14, x17
    50e8:	madd	x4, x16, x4, x17
    50ec:	and	x8, x2, #0xffffffff
    50f0:	mul	x16, x16, x14
    50f4:	add	x2, x4, x2, lsr #32
    50f8:	add	x4, x16, x11
    50fc:	cmp	x17, x2
    5100:	csel	x16, x4, x16, hi  // hi = pmore
    5104:	add	x4, x8, x2, lsl #32
    5108:	add	x16, x16, x2, lsr #32
    510c:	cmp	x1, x16
    5110:	b.cs	54f0 <PyInit__ctypes_test@@Base+0x129c>  // b.hs, b.nlast
    5114:	adds	x2, x9, x1
    5118:	sub	x8, x5, #0x1
    511c:	mov	x1, x2
    5120:	b.cs	5134 <PyInit__ctypes_test@@Base+0xee0>  // b.hs, b.nlast
    5124:	cmp	x2, x16
    5128:	b.cc	55f0 <PyInit__ctypes_test@@Base+0x139c>  // b.lo, b.ul, b.last
    512c:	ccmp	x13, x4, #0x2, eq  // eq = none
    5130:	b.cc	55f0 <PyInit__ctypes_test@@Base+0x139c>  // b.lo, b.ul, b.last
    5134:	cmp	x13, x4
    5138:	mov	x5, x8
    513c:	cset	w2, ne  // ne = any
    5140:	cmp	w2, #0x0
    5144:	orr	x2, x5, #0x1
    5148:	ccmp	x1, x16, #0x0, eq  // eq = none
    514c:	csel	x5, x2, x5, ne  // ne = any
    5150:	b	4ea8 <PyInit__ctypes_test@@Base+0xc54>
    5154:	cmp	x1, #0x1
    5158:	b.ne	4f40 <PyInit__ctypes_test@@Base+0xcec>  // b.any
    515c:	mov	x4, #0x0                   	// #0
    5160:	fmov	d0, x4
    5164:	lsl	x3, x3, #63
    5168:	orr	w0, w0, #0x2
    516c:	orr	x5, x3, #0x7fff000000000000
    5170:	fmov	v0.d[1], x5
    5174:	str	q0, [sp, #16]
    5178:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    517c:	ldr	q0, [sp, #16]
    5180:	b	4f70 <PyInit__ctypes_test@@Base+0xd1c>
    5184:	cmp	x1, #0xb
    5188:	b.gt	5258 <PyInit__ctypes_test@@Base+0x1004>
    518c:	cmp	x1, #0xa
    5190:	b.ne	4e80 <PyInit__ctypes_test@@Base+0xc2c>  // b.any
    5194:	mov	w11, #0x0                   	// #0
    5198:	mov	x6, #0xffffffffffff        	// #281474976710655
    519c:	mov	x2, #0xffffffffffffffff    	// #-1
    51a0:	mov	w0, #0x1                   	// #1
    51a4:	mov	w1, #0x7fff                	// #32767
    51a8:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    51ac:	orr	x3, x6, x5
    51b0:	cbz	x3, 5298 <PyInit__ctypes_test@@Base+0x1044>
    51b4:	cbz	x6, 544c <PyInit__ctypes_test@@Base+0x11f8>
    51b8:	clz	x3, x6
    51bc:	sub	x9, x3, #0xf
    51c0:	add	w12, w9, #0x3
    51c4:	mov	w11, #0x3d                  	// #61
    51c8:	sub	w9, w11, w9
    51cc:	lsl	x6, x6, x12
    51d0:	lsr	x9, x5, x9
    51d4:	orr	x6, x9, x6
    51d8:	lsl	x5, x5, x12
    51dc:	add	x7, x3, x7
    51e0:	mov	x11, #0x3fef                	// #16367
    51e4:	mov	x9, #0x0                   	// #0
    51e8:	add	x7, x7, x11
    51ec:	b	4e44 <PyInit__ctypes_test@@Base+0xbf0>
    51f0:	orr	x4, x6, x2
    51f4:	cbz	x4, 5280 <PyInit__ctypes_test@@Base+0x102c>
    51f8:	cbz	x6, 5428 <PyInit__ctypes_test@@Base+0x11d4>
    51fc:	clz	x0, x6
    5200:	sub	x4, x0, #0xf
    5204:	add	w7, w4, #0x3
    5208:	mov	w1, #0x3d                  	// #61
    520c:	sub	w4, w1, w4
    5210:	lsl	x6, x6, x7
    5214:	lsr	x4, x2, x4
    5218:	orr	x4, x4, x6
    521c:	lsl	x2, x2, x7
    5220:	mov	x7, #0xffffffffffffc011    	// #-16367
    5224:	mov	x1, #0x0                   	// #0
    5228:	sub	x7, x7, x0
    522c:	mov	x16, #0x0                   	// #0
    5230:	mov	w0, #0x0                   	// #0
    5234:	b	4e04 <PyInit__ctypes_test@@Base+0xbb0>
    5238:	orr	x4, x6, x2
    523c:	cbnz	x4, 52ac <PyInit__ctypes_test@@Base+0x1058>
    5240:	mov	x2, #0x0                   	// #0
    5244:	mov	x1, #0x8                   	// #8
    5248:	mov	x7, #0x7fff                	// #32767
    524c:	mov	x16, #0x2                   	// #2
    5250:	mov	w0, #0x0                   	// #0
    5254:	b	4e04 <PyInit__ctypes_test@@Base+0xbb0>
    5258:	mov	x6, x4
    525c:	mov	x5, x2
    5260:	mov	x8, x14
    5264:	mov	x9, x16
    5268:	b	4e80 <PyInit__ctypes_test@@Base+0xc2c>
    526c:	orr	x1, x1, #0x2
    5270:	mov	x6, #0x0                   	// #0
    5274:	mov	x5, #0x0                   	// #0
    5278:	mov	x9, #0x2                   	// #2
    527c:	b	4f04 <PyInit__ctypes_test@@Base+0xcb0>
    5280:	mov	x2, #0x0                   	// #0
    5284:	mov	x1, #0x4                   	// #4
    5288:	mov	x7, #0x0                   	// #0
    528c:	mov	x16, #0x1                   	// #1
    5290:	mov	w0, #0x0                   	// #0
    5294:	b	4e04 <PyInit__ctypes_test@@Base+0xbb0>
    5298:	orr	x1, x1, #0x1
    529c:	mov	x6, #0x0                   	// #0
    52a0:	mov	x5, #0x0                   	// #0
    52a4:	mov	x9, #0x1                   	// #1
    52a8:	b	4e44 <PyInit__ctypes_test@@Base+0xbf0>
    52ac:	lsr	x0, x6, #47
    52b0:	mov	x4, x6
    52b4:	eor	w0, w0, #0x1
    52b8:	mov	x1, #0xc                   	// #12
    52bc:	mov	x7, #0x7fff                	// #32767
    52c0:	mov	x16, #0x3                   	// #3
    52c4:	b	4e04 <PyInit__ctypes_test@@Base+0xbb0>
    52c8:	mov	w11, w8
    52cc:	mov	w1, #0x0                   	// #0
    52d0:	mov	x6, #0x0                   	// #0
    52d4:	mov	x2, #0x0                   	// #0
    52d8:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    52dc:	ccmp	x5, x2, #0x2, eq  // eq = none
    52e0:	b.ls	4f88 <PyInit__ctypes_test@@Base+0xd34>  // b.plast
    52e4:	mov	x8, x2
    52e8:	sub	x7, x7, #0x1
    52ec:	mov	x3, x4
    52f0:	mov	x2, #0x0                   	// #0
    52f4:	b	4f94 <PyInit__ctypes_test@@Base+0xd40>
    52f8:	and	x1, x10, #0xc00000
    52fc:	orr	w0, w0, #0x10
    5300:	cmp	x1, #0x400, lsl #12
    5304:	b.eq	5658 <PyInit__ctypes_test@@Base+0x1404>  // b.none
    5308:	cmp	x1, #0x800, lsl #12
    530c:	b.eq	556c <PyInit__ctypes_test@@Base+0x1318>  // b.none
    5310:	cbnz	x1, 4eb8 <PyInit__ctypes_test@@Base+0xc64>
    5314:	and	x1, x5, #0xf
    5318:	and	w11, w12, #0x1
    531c:	cmp	x1, #0x4
    5320:	b.eq	4ebc <PyInit__ctypes_test@@Base+0xc68>  // b.none
    5324:	adds	x5, x5, #0x4
    5328:	cinc	x6, x6, cs  // cs = hs, nlast
    532c:	b	4ebc <PyInit__ctypes_test@@Base+0xc68>
    5330:	orr	x6, x4, #0x800000000000
    5334:	mov	w11, w13
    5338:	and	x6, x6, #0xffffffffffff
    533c:	mov	w1, #0x7fff                	// #32767
    5340:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    5344:	mov	w1, #0x7fff                	// #32767
    5348:	mov	x6, #0x0                   	// #0
    534c:	mov	x2, #0x0                   	// #0
    5350:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    5354:	adds	x3, x2, x13
    5358:	sub	x6, x8, #0x1
    535c:	adc	x4, x4, x9
    5360:	cset	x18, cs  // cs = hs, nlast
    5364:	mov	x2, x3
    5368:	cmp	x9, x4
    536c:	b.cs	54e0 <PyInit__ctypes_test@@Base+0x128c>  // b.hs, b.nlast
    5370:	cmp	x5, x4
    5374:	b.ls	5508 <PyInit__ctypes_test@@Base+0x12b4>  // b.plast
    5378:	adds	x2, x13, x3
    537c:	sub	x6, x8, #0x2
    5380:	adc	x4, x4, x9
    5384:	b	5058 <PyInit__ctypes_test@@Base+0xe04>
    5388:	mov	x1, #0x1                   	// #1
    538c:	sub	x1, x1, x3
    5390:	cmp	x1, #0x74
    5394:	and	w11, w12, #0x1
    5398:	b.le	53b4 <PyInit__ctypes_test@@Base+0x1160>
    539c:	orr	x2, x5, x6
    53a0:	cbnz	x2, 55d4 <PyInit__ctypes_test@@Base+0x1380>
    53a4:	orr	w0, w0, #0x8
    53a8:	mov	w1, #0x0                   	// #0
    53ac:	mov	x6, #0x0                   	// #0
    53b0:	b	5498 <PyInit__ctypes_test@@Base+0x1244>
    53b4:	cmp	x1, #0x3f
    53b8:	b.le	5514 <PyInit__ctypes_test@@Base+0x12c0>
    53bc:	mov	w2, #0x80                  	// #128
    53c0:	sub	w2, w2, w1
    53c4:	cmp	x1, #0x40
    53c8:	sub	w1, w1, #0x40
    53cc:	lsl	x2, x6, x2
    53d0:	orr	x2, x5, x2
    53d4:	csel	x5, x2, x5, ne  // ne = any
    53d8:	lsr	x6, x6, x1
    53dc:	cmp	x5, #0x0
    53e0:	cset	x2, ne  // ne = any
    53e4:	orr	x2, x2, x6
    53e8:	ands	x6, x2, #0x7
    53ec:	b.eq	5548 <PyInit__ctypes_test@@Base+0x12f4>  // b.none
    53f0:	mov	x6, #0x0                   	// #0
    53f4:	and	x10, x10, #0xc00000
    53f8:	orr	w0, w0, #0x10
    53fc:	cmp	x10, #0x400, lsl #12
    5400:	b.eq	5694 <PyInit__ctypes_test@@Base+0x1440>  // b.none
    5404:	cmp	x10, #0x800, lsl #12
    5408:	b.eq	56a8 <PyInit__ctypes_test@@Base+0x1454>  // b.none
    540c:	cbz	x10, 5610 <PyInit__ctypes_test@@Base+0x13bc>
    5410:	tbnz	x6, #51, 5628 <PyInit__ctypes_test@@Base+0x13d4>
    5414:	orr	w0, w0, #0x8
    5418:	extr	x2, x6, x2, #3
    541c:	mov	w1, #0x0                   	// #0
    5420:	ubfx	x6, x6, #3, #48
    5424:	b	5498 <PyInit__ctypes_test@@Base+0x1244>
    5428:	clz	x7, x2
    542c:	add	x4, x7, #0x31
    5430:	add	x0, x7, #0x40
    5434:	cmp	x4, #0x3c
    5438:	b.le	5204 <PyInit__ctypes_test@@Base+0xfb0>
    543c:	sub	w4, w4, #0x3d
    5440:	lsl	x4, x2, x4
    5444:	mov	x2, #0x0                   	// #0
    5448:	b	5220 <PyInit__ctypes_test@@Base+0xfcc>
    544c:	clz	x3, x5
    5450:	add	x9, x3, #0x31
    5454:	add	x3, x3, #0x40
    5458:	cmp	x9, #0x3c
    545c:	b.le	51c0 <PyInit__ctypes_test@@Base+0xf6c>
    5460:	sub	w6, w9, #0x3d
    5464:	lsl	x6, x5, x6
    5468:	mov	x5, #0x0                   	// #0
    546c:	b	51dc <PyInit__ctypes_test@@Base+0xf88>
    5470:	and	x2, x10, #0xc00000
    5474:	cmp	x2, #0x400, lsl #12
    5478:	b.eq	563c <PyInit__ctypes_test@@Base+0x13e8>  // b.none
    547c:	cmp	x2, #0x800, lsl #12
    5480:	b.eq	5584 <PyInit__ctypes_test@@Base+0x1330>  // b.none
    5484:	cbz	x2, 5560 <PyInit__ctypes_test@@Base+0x130c>
    5488:	mov	x6, #0xffffffffffff        	// #281474976710655
    548c:	mov	x2, #0xffffffffffffffff    	// #-1
    5490:	mov	w3, #0x14                  	// #20
    5494:	orr	w0, w0, w3
    5498:	mov	x5, #0x0                   	// #0
    549c:	orr	w1, w1, w11, lsl #15
    54a0:	bfxil	x5, x6, #0, #48
    54a4:	fmov	d0, x2
    54a8:	bfi	x5, x1, #48, #16
    54ac:	fmov	v0.d[1], x5
    54b0:	b	5174 <PyInit__ctypes_test@@Base+0xf20>
    54b4:	orr	x6, x6, #0x800000000000
    54b8:	mov	w11, w8
    54bc:	and	x6, x6, #0xffffffffffff
    54c0:	mov	x2, x5
    54c4:	mov	w1, #0x7fff                	// #32767
    54c8:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    54cc:	mov	w11, w8
    54d0:	mov	w1, #0x7fff                	// #32767
    54d4:	mov	x6, #0x0                   	// #0
    54d8:	mov	x2, #0x0                   	// #0
    54dc:	b	4f54 <PyInit__ctypes_test@@Base+0xd00>
    54e0:	cmp	x18, #0x0
    54e4:	ccmp	x9, x4, #0x0, eq  // eq = none
    54e8:	b.ne	5058 <PyInit__ctypes_test@@Base+0xe04>  // b.any
    54ec:	b	5370 <PyInit__ctypes_test@@Base+0x111c>
    54f0:	cmp	x4, #0x0
    54f4:	cset	w2, ne  // ne = any
    54f8:	cmp	w2, #0x0
    54fc:	ccmp	x1, x16, #0x0, ne  // ne = any
    5500:	b.ne	5140 <PyInit__ctypes_test@@Base+0xeec>  // b.any
    5504:	b	5114 <PyInit__ctypes_test@@Base+0xec0>
    5508:	ccmp	x1, x3, #0x0, eq  // eq = none
    550c:	b.ls	5058 <PyInit__ctypes_test@@Base+0xe04>  // b.plast
    5510:	b	5378 <PyInit__ctypes_test@@Base+0x1124>
    5514:	mov	w2, #0x40                  	// #64
    5518:	sub	w2, w2, w1
    551c:	lsr	x4, x5, x1
    5520:	lsl	x5, x5, x2
    5524:	cmp	x5, #0x0
    5528:	cset	x3, ne  // ne = any
    552c:	lsl	x2, x6, x2
    5530:	orr	x2, x2, x4
    5534:	lsr	x6, x6, x1
    5538:	orr	x2, x2, x3
    553c:	tst	x2, #0x7
    5540:	b.ne	53f4 <PyInit__ctypes_test@@Base+0x11a0>  // b.any
    5544:	tbnz	x6, #51, 56b4 <PyInit__ctypes_test@@Base+0x1460>
    5548:	mov	w1, #0x0                   	// #0
    554c:	extr	x2, x6, x2, #3
    5550:	ubfx	x6, x6, #3, #48
    5554:	tbz	w10, #11, 4f54 <PyInit__ctypes_test@@Base+0xd00>
    5558:	orr	w0, w0, #0x8
    555c:	b	5498 <PyInit__ctypes_test@@Base+0x1244>
    5560:	mov	w1, #0x7fff                	// #32767
    5564:	mov	x6, #0x0                   	// #0
    5568:	b	5490 <PyInit__ctypes_test@@Base+0x123c>
    556c:	mov	w11, #0x0                   	// #0
    5570:	cbz	x12, 4ebc <PyInit__ctypes_test@@Base+0xc68>
    5574:	adds	x5, x5, #0x8
    5578:	mov	w11, #0x1                   	// #1
    557c:	cinc	x6, x6, cs  // cs = hs, nlast
    5580:	b	4ebc <PyInit__ctypes_test@@Base+0xc68>
    5584:	cmp	x12, #0x0
    5588:	mov	w2, #0x7fff                	// #32767
    558c:	mov	x6, #0xffffffffffff        	// #281474976710655
    5590:	csel	w1, w1, w2, eq  // eq = none
    5594:	csel	x6, x6, xzr, eq  // eq = none
    5598:	csetm	x2, eq  // eq = none
    559c:	b	5490 <PyInit__ctypes_test@@Base+0x123c>
    55a0:	sub	x1, x1, #0x2
    55a4:	add	x4, x4, x9
    55a8:	b	4ffc <PyInit__ctypes_test@@Base+0xda8>
    55ac:	sub	x5, x5, #0x2
    55b0:	add	x3, x3, x9
    55b4:	b	4fcc <PyInit__ctypes_test@@Base+0xd78>
    55b8:	cmp	x3, #0x0
    55bc:	mov	x5, #0xffffffffffffffff    	// #-1
    55c0:	b.gt	52f8 <PyInit__ctypes_test@@Base+0x10a4>
    55c4:	mov	x1, #0x1                   	// #1
    55c8:	sub	x1, x1, x3
    55cc:	cmp	x1, #0x74
    55d0:	b.le	53b4 <PyInit__ctypes_test@@Base+0x1160>
    55d4:	and	x10, x10, #0xc00000
    55d8:	orr	w0, w0, #0x10
    55dc:	cmp	x10, #0x400, lsl #12
    55e0:	b.eq	5688 <PyInit__ctypes_test@@Base+0x1434>  // b.none
    55e4:	cmp	x10, #0x800, lsl #12
    55e8:	csel	x2, x12, xzr, eq  // eq = none
    55ec:	b	53a4 <PyInit__ctypes_test@@Base+0x1150>
    55f0:	lsl	x8, x13, #1
    55f4:	sub	x5, x5, #0x2
    55f8:	cmp	x13, x8
    55fc:	cinc	x1, x9, hi  // hi = pmore
    5600:	cmp	x4, x8
    5604:	add	x1, x2, x1
    5608:	cset	w2, ne  // ne = any
    560c:	b	5140 <PyInit__ctypes_test@@Base+0xeec>
    5610:	and	x1, x2, #0xf
    5614:	cmp	x1, #0x4
    5618:	b.eq	5624 <PyInit__ctypes_test@@Base+0x13d0>  // b.none
    561c:	adds	x2, x2, #0x4
    5620:	cinc	x6, x6, cs  // cs = hs, nlast
    5624:	tbz	x6, #51, 5414 <PyInit__ctypes_test@@Base+0x11c0>
    5628:	orr	w0, w0, #0x8
    562c:	mov	w1, #0x1                   	// #1
    5630:	mov	x6, #0x0                   	// #0
    5634:	mov	x2, #0x0                   	// #0
    5638:	b	5498 <PyInit__ctypes_test@@Base+0x1244>
    563c:	cmp	x12, #0x0
    5640:	mov	w2, #0x7fff                	// #32767
    5644:	mov	x6, #0xffffffffffff        	// #281474976710655
    5648:	csel	w1, w1, w2, ne  // ne = any
    564c:	csel	x6, x6, xzr, ne  // ne = any
    5650:	csetm	x2, ne  // ne = any
    5654:	b	5490 <PyInit__ctypes_test@@Base+0x123c>
    5658:	mov	w11, #0x1                   	// #1
    565c:	cbnz	x12, 4ebc <PyInit__ctypes_test@@Base+0xc68>
    5660:	adds	x5, x5, #0x8
    5664:	mov	w11, #0x0                   	// #0
    5668:	cinc	x6, x6, cs  // cs = hs, nlast
    566c:	b	4ebc <PyInit__ctypes_test@@Base+0xc68>
    5670:	sub	x5, x5, #0x2
    5674:	add	x1, x1, x9
    5678:	b	509c <PyInit__ctypes_test@@Base+0xe48>
    567c:	sub	x2, x2, #0x2
    5680:	add	x1, x1, x9
    5684:	b	50cc <PyInit__ctypes_test@@Base+0xe78>
    5688:	mov	x2, #0x1                   	// #1
    568c:	sub	x2, x2, x12
    5690:	b	53a4 <PyInit__ctypes_test@@Base+0x1150>
    5694:	cbnz	x12, 5624 <PyInit__ctypes_test@@Base+0x13d0>
    5698:	adds	x2, x2, #0x8
    569c:	cinc	x6, x6, cs  // cs = hs, nlast
    56a0:	tbnz	x6, #51, 5628 <PyInit__ctypes_test@@Base+0x13d4>
    56a4:	b	5414 <PyInit__ctypes_test@@Base+0x11c0>
    56a8:	cbnz	x12, 5698 <PyInit__ctypes_test@@Base+0x1444>
    56ac:	tbnz	x6, #51, 5628 <PyInit__ctypes_test@@Base+0x13d4>
    56b0:	b	5414 <PyInit__ctypes_test@@Base+0x11c0>
    56b4:	orr	w0, w0, #0x10
    56b8:	b	5628 <PyInit__ctypes_test@@Base+0x13d4>
    56bc:	nop
    56c0:	stp	x29, x30, [sp, #-80]!
    56c4:	mov	x29, sp
    56c8:	str	q0, [sp, #48]
    56cc:	str	q1, [sp, #64]
    56d0:	ldp	x1, x0, [sp, #48]
    56d4:	ldp	x6, x2, [sp, #64]
    56d8:	mrs	x11, fpcr
    56dc:	lsr	x3, x0, #63
    56e0:	ubfx	x7, x0, #0, #48
    56e4:	and	w12, w3, #0xff
    56e8:	mov	x14, x3
    56ec:	ubfx	x3, x0, #48, #15
    56f0:	cbz	w3, 5a98 <PyInit__ctypes_test@@Base+0x1844>
    56f4:	mov	w4, #0x7fff                	// #32767
    56f8:	cmp	w3, w4
    56fc:	b.eq	5b3c <PyInit__ctypes_test@@Base+0x18e8>  // b.none
    5700:	and	x3, x3, #0xffff
    5704:	extr	x4, x7, x1, #61
    5708:	mov	x18, #0xffffffffffffc001    	// #-16383
    570c:	orr	x7, x4, #0x8000000000000
    5710:	add	x3, x3, x18
    5714:	lsl	x5, x1, #3
    5718:	mov	x16, #0x0                   	// #0
    571c:	mov	x1, #0x0                   	// #0
    5720:	mov	w0, #0x0                   	// #0
    5724:	lsr	x8, x2, #63
    5728:	ubfx	x4, x2, #0, #48
    572c:	and	w15, w8, #0xff
    5730:	mov	x13, x8
    5734:	ubfx	x9, x2, #48, #15
    5738:	cbz	w9, 5af8 <PyInit__ctypes_test@@Base+0x18a4>
    573c:	mov	w8, #0x7fff                	// #32767
    5740:	cmp	w9, w8
    5744:	b.eq	57c8 <PyInit__ctypes_test@@Base+0x1574>  // b.none
    5748:	and	x9, x9, #0xffff
    574c:	mov	x17, #0xffffffffffffc001    	// #-16383
    5750:	add	x9, x9, x17
    5754:	extr	x2, x4, x6, #61
    5758:	add	x9, x9, x3
    575c:	lsl	x6, x6, #3
    5760:	orr	x4, x2, #0x8000000000000
    5764:	mov	x2, #0x0                   	// #0
    5768:	eor	w8, w12, w15
    576c:	cmp	x1, #0xa
    5770:	and	w10, w8, #0xff
    5774:	add	x3, x9, #0x1
    5778:	and	x8, x8, #0xff
    577c:	b.le	5800 <PyInit__ctypes_test@@Base+0x15ac>
    5780:	cmp	x1, #0xb
    5784:	b.eq	5e98 <PyInit__ctypes_test@@Base+0x1c44>  // b.none
    5788:	mov	w15, w12
    578c:	mov	x13, x14
    5790:	mov	w10, w15
    5794:	cmp	x16, #0x2
    5798:	b.eq	5b5c <PyInit__ctypes_test@@Base+0x1908>  // b.none
    579c:	mov	x4, x7
    57a0:	mov	x6, x5
    57a4:	mov	x2, x16
    57a8:	mov	x8, x13
    57ac:	cmp	x2, #0x3
    57b0:	b.ne	581c <PyInit__ctypes_test@@Base+0x15c8>  // b.any
    57b4:	orr	x4, x4, #0x800000000000
    57b8:	mov	x5, x6
    57bc:	and	x4, x4, #0xffffffffffff
    57c0:	mov	w1, #0x7fff                	// #32767
    57c4:	b	5830 <PyInit__ctypes_test@@Base+0x15dc>
    57c8:	mov	x8, #0x7fff                	// #32767
    57cc:	orr	x2, x4, x6
    57d0:	add	x9, x3, x8
    57d4:	cbnz	x2, 5854 <PyInit__ctypes_test@@Base+0x1600>
    57d8:	eor	w8, w12, w15
    57dc:	orr	x1, x1, #0x2
    57e0:	and	w10, w8, #0xff
    57e4:	cmp	x1, #0xa
    57e8:	add	x3, x3, #0x8, lsl #12
    57ec:	and	x8, x8, #0xff
    57f0:	mov	x6, #0x0                   	// #0
    57f4:	b.gt	5e0c <PyInit__ctypes_test@@Base+0x1bb8>
    57f8:	mov	x4, #0x0                   	// #0
    57fc:	mov	x2, #0x2                   	// #2
    5800:	cmp	x1, #0x2
    5804:	b.gt	587c <PyInit__ctypes_test@@Base+0x1628>
    5808:	sub	x1, x1, #0x1
    580c:	cmp	x1, #0x1
    5810:	b.hi	58b8 <PyInit__ctypes_test@@Base+0x1664>  // b.pmore
    5814:	cmp	x2, #0x2
    5818:	b.eq	5b5c <PyInit__ctypes_test@@Base+0x1908>  // b.none
    581c:	cmp	x2, #0x1
    5820:	b.ne	5a18 <PyInit__ctypes_test@@Base+0x17c4>  // b.any
    5824:	mov	w1, #0x0                   	// #0
    5828:	mov	x4, #0x0                   	// #0
    582c:	mov	x5, #0x0                   	// #0
    5830:	mov	x3, #0x0                   	// #0
    5834:	orr	w1, w1, w10, lsl #15
    5838:	bfxil	x3, x4, #0, #48
    583c:	fmov	d0, x5
    5840:	bfi	x3, x1, #48, #16
    5844:	fmov	v0.d[1], x3
    5848:	cbnz	w0, 5c88 <PyInit__ctypes_test@@Base+0x1a34>
    584c:	ldp	x29, x30, [sp], #80
    5850:	ret
    5854:	tst	x4, #0x800000000000
    5858:	eor	w8, w12, w15
    585c:	orr	x1, x1, #0x3
    5860:	csinc	w0, w0, wzr, ne  // ne = any
    5864:	and	w10, w8, #0xff
    5868:	add	x3, x3, #0x8, lsl #12
    586c:	cmp	x1, #0xa
    5870:	and	x8, x8, #0xff
    5874:	mov	x2, #0x3                   	// #3
    5878:	b.gt	5e8c <PyInit__ctypes_test@@Base+0x1c38>
    587c:	mov	x12, #0x1                   	// #1
    5880:	mov	x14, #0x530                 	// #1328
    5884:	lsl	x1, x12, x1
    5888:	tst	x1, x14
    588c:	b.ne	5a8c <PyInit__ctypes_test@@Base+0x1838>  // b.any
    5890:	mov	x14, #0x240                 	// #576
    5894:	tst	x1, x14
    5898:	b.ne	5a74 <PyInit__ctypes_test@@Base+0x1820>  // b.any
    589c:	mov	x12, #0x88                  	// #136
    58a0:	tst	x1, x12
    58a4:	b.eq	58b8 <PyInit__ctypes_test@@Base+0x1664>  // b.none
    58a8:	mov	x7, x4
    58ac:	mov	x5, x6
    58b0:	mov	x16, x2
    58b4:	b	5790 <PyInit__ctypes_test@@Base+0x153c>
    58b8:	lsr	x13, x5, #32
    58bc:	and	x12, x6, #0xffffffff
    58c0:	and	x15, x5, #0xffffffff
    58c4:	lsr	x6, x6, #32
    58c8:	and	x18, x4, #0xffffffff
    58cc:	lsr	x2, x4, #32
    58d0:	mul	x4, x13, x12
    58d4:	stp	x21, x22, [sp, #32]
    58d8:	lsr	x22, x7, #32
    58dc:	and	x5, x7, #0xffffffff
    58e0:	mul	x16, x12, x15
    58e4:	madd	x7, x6, x15, x4
    58e8:	stp	x19, x20, [sp, #16]
    58ec:	mul	x1, x13, x18
    58f0:	mul	x17, x15, x18
    58f4:	and	x30, x16, #0xffffffff
    58f8:	madd	x15, x2, x15, x1
    58fc:	add	x16, x7, x16, lsr #32
    5900:	mul	x21, x22, x12
    5904:	cmp	x4, x16
    5908:	mul	x20, x22, x18
    590c:	mov	x14, #0x100000000           	// #4294967296
    5910:	mul	x19, x13, x6
    5914:	add	x15, x15, x17, lsr #32
    5918:	mul	x12, x12, x5
    591c:	and	x17, x17, #0xffffffff
    5920:	mul	x18, x5, x18
    5924:	add	x4, x19, x14
    5928:	madd	x7, x6, x5, x21
    592c:	csel	x19, x4, x19, hi  // hi = pmore
    5930:	madd	x5, x2, x5, x20
    5934:	cmp	x1, x15
    5938:	mul	x13, x13, x2
    593c:	add	x17, x17, x15, lsl #32
    5940:	mul	x6, x6, x22
    5944:	add	x7, x7, x12, lsr #32
    5948:	add	x5, x5, x18, lsr #32
    594c:	add	x4, x13, x14
    5950:	mul	x2, x2, x22
    5954:	csel	x13, x4, x13, hi  // hi = pmore
    5958:	and	x1, x18, #0xffffffff
    595c:	cmp	x21, x7
    5960:	add	x4, x6, x14
    5964:	add	x30, x30, x16, lsl #32
    5968:	csel	x6, x4, x6, hi  // hi = pmore
    596c:	add	x13, x13, x15, lsr #32
    5970:	cmp	x20, x5
    5974:	add	x1, x1, x5, lsl #32
    5978:	add	x16, x17, x16, lsr #32
    597c:	add	x14, x2, x14
    5980:	csel	x2, x14, x2, hi  // hi = pmore
    5984:	add	x16, x19, x16
    5988:	adds	x1, x1, x13
    598c:	and	x12, x12, #0xffffffff
    5990:	cset	x13, cs  // cs = hs, nlast
    5994:	cmp	x16, x17
    5998:	cset	x4, cc  // cc = lo, ul, last
    599c:	add	x12, x12, x7, lsl #32
    59a0:	adds	x1, x1, x4
    59a4:	lsr	x5, x5, #32
    59a8:	cset	x4, cs  // cs = hs, nlast
    59ac:	cmp	x13, #0x0
    59b0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
    59b4:	add	x7, x6, x7, lsr #32
    59b8:	cinc	x5, x5, ne  // ne = any
    59bc:	adds	x6, x16, x12
    59c0:	cset	x4, cs  // cs = hs, nlast
    59c4:	adds	x1, x1, x7
    59c8:	cset	x7, cs  // cs = hs, nlast
    59cc:	adds	x4, x1, x4
    59d0:	cset	x1, cs  // cs = hs, nlast
    59d4:	cmp	x7, #0x0
    59d8:	orr	x30, x30, x6, lsl #13
    59dc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    59e0:	cinc	x1, x2, ne  // ne = any
    59e4:	cmp	x30, #0x0
    59e8:	add	x1, x1, x5
    59ec:	cset	x2, ne  // ne = any
    59f0:	orr	x6, x2, x6, lsr #51
    59f4:	orr	x6, x6, x4, lsl #13
    59f8:	extr	x4, x1, x4, #51
    59fc:	tbz	x1, #39, 5d10 <PyInit__ctypes_test@@Base+0x1abc>
    5a00:	ldp	x19, x20, [sp, #16]
    5a04:	and	x1, x6, #0x1
    5a08:	ldp	x21, x22, [sp, #32]
    5a0c:	orr	x6, x1, x6, lsr #1
    5a10:	orr	x6, x6, x4, lsl #63
    5a14:	lsr	x4, x4, #1
    5a18:	mov	x1, #0x3fff                	// #16383
    5a1c:	add	x2, x3, x1
    5a20:	cmp	x2, #0x0
    5a24:	b.le	5bbc <PyInit__ctypes_test@@Base+0x1968>
    5a28:	tst	x6, #0x7
    5a2c:	b.eq	5a4c <PyInit__ctypes_test@@Base+0x17f8>  // b.none
    5a30:	and	x1, x11, #0xc00000
    5a34:	orr	w0, w0, #0x10
    5a38:	cmp	x1, #0x400, lsl #12
    5a3c:	b.eq	5e04 <PyInit__ctypes_test@@Base+0x1bb0>  // b.none
    5a40:	cmp	x1, #0x800, lsl #12
    5a44:	b.eq	5dac <PyInit__ctypes_test@@Base+0x1b58>  // b.none
    5a48:	cbz	x1, 5d94 <PyInit__ctypes_test@@Base+0x1b40>
    5a4c:	tbz	x4, #52, 5a58 <PyInit__ctypes_test@@Base+0x1804>
    5a50:	and	x4, x4, #0xffefffffffffffff
    5a54:	add	x2, x3, #0x4, lsl #12
    5a58:	mov	x1, #0x7ffe                	// #32766
    5a5c:	cmp	x2, x1
    5a60:	b.gt	5ce4 <PyInit__ctypes_test@@Base+0x1a90>
    5a64:	and	w1, w2, #0x7fff
    5a68:	extr	x5, x4, x6, #3
    5a6c:	ubfx	x4, x4, #3, #48
    5a70:	b	5830 <PyInit__ctypes_test@@Base+0x15dc>
    5a74:	mov	w0, w12
    5a78:	mov	w10, #0x0                   	// #0
    5a7c:	mov	x4, #0xffffffffffff        	// #281474976710655
    5a80:	mov	x5, #0xffffffffffffffff    	// #-1
    5a84:	mov	w1, #0x7fff                	// #32767
    5a88:	b	5830 <PyInit__ctypes_test@@Base+0x15dc>
    5a8c:	mov	w15, w10
    5a90:	mov	x13, x8
    5a94:	b	5790 <PyInit__ctypes_test@@Base+0x153c>
    5a98:	orr	x5, x7, x1
    5a9c:	cbz	x5, 5ba4 <PyInit__ctypes_test@@Base+0x1950>
    5aa0:	cbz	x7, 5cc0 <PyInit__ctypes_test@@Base+0x1a6c>
    5aa4:	clz	x0, x7
    5aa8:	sub	x4, x0, #0xf
    5aac:	add	w5, w4, #0x3
    5ab0:	mov	w3, #0x3d                  	// #61
    5ab4:	sub	w3, w3, w4
    5ab8:	lsl	x4, x7, x5
    5abc:	lsr	x3, x1, x3
    5ac0:	orr	x7, x3, x4
    5ac4:	lsl	x5, x1, x5
    5ac8:	lsr	x8, x2, #63
    5acc:	mov	x3, #0xffffffffffffc011    	// #-16367
    5ad0:	ubfx	x4, x2, #0, #48
    5ad4:	sub	x3, x3, x0
    5ad8:	and	w15, w8, #0xff
    5adc:	mov	x13, x8
    5ae0:	ubfx	x9, x2, #48, #15
    5ae4:	mov	x1, #0x0                   	// #0
    5ae8:	mov	x16, #0x0                   	// #0
    5aec:	mov	w0, #0x0                   	// #0
    5af0:	cbnz	w9, 573c <PyInit__ctypes_test@@Base+0x14e8>
    5af4:	nop
    5af8:	orr	x2, x4, x6
    5afc:	cbz	x2, 5b6c <PyInit__ctypes_test@@Base+0x1918>
    5b00:	cbz	x4, 5c9c <PyInit__ctypes_test@@Base+0x1a48>
    5b04:	clz	x9, x4
    5b08:	sub	x2, x9, #0xf
    5b0c:	add	w10, w2, #0x3
    5b10:	mov	w8, #0x3d                  	// #61
    5b14:	sub	w8, w8, w2
    5b18:	lsl	x2, x4, x10
    5b1c:	lsr	x8, x6, x8
    5b20:	orr	x4, x8, x2
    5b24:	lsl	x6, x6, x10
    5b28:	sub	x9, x3, x9
    5b2c:	mov	x10, #0xffffffffffffc011    	// #-16367
    5b30:	mov	x2, #0x0                   	// #0
    5b34:	add	x9, x9, x10
    5b38:	b	5768 <PyInit__ctypes_test@@Base+0x1514>
    5b3c:	orr	x5, x7, x1
    5b40:	cbnz	x5, 5b84 <PyInit__ctypes_test@@Base+0x1930>
    5b44:	mov	x7, #0x0                   	// #0
    5b48:	mov	x1, #0x8                   	// #8
    5b4c:	mov	x3, #0x7fff                	// #32767
    5b50:	mov	x16, #0x2                   	// #2
    5b54:	mov	w0, #0x0                   	// #0
    5b58:	b	5724 <PyInit__ctypes_test@@Base+0x14d0>
    5b5c:	mov	w1, #0x7fff                	// #32767
    5b60:	mov	x4, #0x0                   	// #0
    5b64:	mov	x5, #0x0                   	// #0
    5b68:	b	5830 <PyInit__ctypes_test@@Base+0x15dc>
    5b6c:	orr	x1, x1, #0x1
    5b70:	mov	x9, x3
    5b74:	mov	x4, #0x0                   	// #0
    5b78:	mov	x6, #0x0                   	// #0
    5b7c:	mov	x2, #0x1                   	// #1
    5b80:	b	5768 <PyInit__ctypes_test@@Base+0x1514>
    5b84:	lsr	x0, x7, #47
    5b88:	mov	x5, x1
    5b8c:	eor	x0, x0, #0x1
    5b90:	mov	x1, #0xc                   	// #12
    5b94:	and	w0, w0, #0x1
    5b98:	mov	x3, #0x7fff                	// #32767
    5b9c:	mov	x16, #0x3                   	// #3
    5ba0:	b	5724 <PyInit__ctypes_test@@Base+0x14d0>
    5ba4:	mov	x7, #0x0                   	// #0
    5ba8:	mov	x1, #0x4                   	// #4
    5bac:	mov	x3, #0x0                   	// #0
    5bb0:	mov	x16, #0x1                   	// #1
    5bb4:	mov	w0, #0x0                   	// #0
    5bb8:	b	5724 <PyInit__ctypes_test@@Base+0x14d0>
    5bbc:	mov	x1, #0x1                   	// #1
    5bc0:	sub	x2, x1, x2
    5bc4:	cmp	x2, #0x74
    5bc8:	b.gt	5c40 <PyInit__ctypes_test@@Base+0x19ec>
    5bcc:	cmp	x2, #0x3f
    5bd0:	b.le	5d20 <PyInit__ctypes_test@@Base+0x1acc>
    5bd4:	mov	w1, #0x80                  	// #128
    5bd8:	sub	w1, w1, w2
    5bdc:	cmp	x2, #0x40
    5be0:	sub	w2, w2, #0x40
    5be4:	lsl	x1, x4, x1
    5be8:	orr	x1, x6, x1
    5bec:	csel	x6, x1, x6, ne  // ne = any
    5bf0:	lsr	x2, x4, x2
    5bf4:	cmp	x6, #0x0
    5bf8:	cset	x5, ne  // ne = any
    5bfc:	orr	x5, x5, x2
    5c00:	ands	x2, x5, #0x7
    5c04:	b.eq	5d54 <PyInit__ctypes_test@@Base+0x1b00>  // b.none
    5c08:	mov	x2, #0x0                   	// #0
    5c0c:	and	x11, x11, #0xc00000
    5c10:	orr	w0, w0, #0x10
    5c14:	cmp	x11, #0x400, lsl #12
    5c18:	b.eq	5e64 <PyInit__ctypes_test@@Base+0x1c10>  // b.none
    5c1c:	cmp	x11, #0x800, lsl #12
    5c20:	b.eq	5e78 <PyInit__ctypes_test@@Base+0x1c24>  // b.none
    5c24:	cbz	x11, 5dbc <PyInit__ctypes_test@@Base+0x1b68>
    5c28:	tbnz	x2, #51, 5dd4 <PyInit__ctypes_test@@Base+0x1b80>
    5c2c:	ubfx	x4, x2, #3, #48
    5c30:	extr	x5, x2, x5, #3
    5c34:	orr	w0, w0, #0x8
    5c38:	mov	w1, #0x0                   	// #0
    5c3c:	b	5c70 <PyInit__ctypes_test@@Base+0x1a1c>
    5c40:	orr	x5, x6, x4
    5c44:	cbz	x5, 5c64 <PyInit__ctypes_test@@Base+0x1a10>
    5c48:	and	x11, x11, #0xc00000
    5c4c:	orr	w0, w0, #0x10
    5c50:	cmp	x11, #0x400, lsl #12
    5c54:	sub	x5, x1, x8
    5c58:	b.eq	5c64 <PyInit__ctypes_test@@Base+0x1a10>  // b.none
    5c5c:	cmp	x11, #0x800, lsl #12
    5c60:	csel	x5, x8, xzr, eq  // eq = none
    5c64:	orr	w0, w0, #0x8
    5c68:	mov	w1, #0x0                   	// #0
    5c6c:	mov	x4, #0x0                   	// #0
    5c70:	mov	x3, #0x0                   	// #0
    5c74:	fmov	d0, x5
    5c78:	bfxil	x3, x4, #0, #48
    5c7c:	bfi	x3, x1, #48, #15
    5c80:	bfi	x3, x10, #63, #1
    5c84:	fmov	v0.d[1], x3
    5c88:	str	q0, [sp, #48]
    5c8c:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    5c90:	ldr	q0, [sp, #48]
    5c94:	ldp	x29, x30, [sp], #80
    5c98:	ret
    5c9c:	clz	x9, x6
    5ca0:	add	x2, x9, #0x31
    5ca4:	add	x9, x9, #0x40
    5ca8:	cmp	x2, #0x3c
    5cac:	b.le	5b0c <PyInit__ctypes_test@@Base+0x18b8>
    5cb0:	sub	w2, w2, #0x3d
    5cb4:	lsl	x4, x6, x2
    5cb8:	mov	x6, #0x0                   	// #0
    5cbc:	b	5b28 <PyInit__ctypes_test@@Base+0x18d4>
    5cc0:	clz	x3, x1
    5cc4:	add	x4, x3, #0x31
    5cc8:	add	x0, x3, #0x40
    5ccc:	cmp	x4, #0x3c
    5cd0:	b.le	5aac <PyInit__ctypes_test@@Base+0x1858>
    5cd4:	sub	w4, w4, #0x3d
    5cd8:	mov	x5, #0x0                   	// #0
    5cdc:	lsl	x7, x1, x4
    5ce0:	b	5ac8 <PyInit__ctypes_test@@Base+0x1874>
    5ce4:	and	x5, x11, #0xc00000
    5ce8:	cmp	x5, #0x400, lsl #12
    5cec:	b.eq	5de8 <PyInit__ctypes_test@@Base+0x1b94>  // b.none
    5cf0:	cmp	x5, #0x800, lsl #12
    5cf4:	b.eq	5d78 <PyInit__ctypes_test@@Base+0x1b24>  // b.none
    5cf8:	cbz	x5, 5d6c <PyInit__ctypes_test@@Base+0x1b18>
    5cfc:	mov	x4, #0xffffffffffff        	// #281474976710655
    5d00:	mov	x5, #0xffffffffffffffff    	// #-1
    5d04:	mov	w2, #0x14                  	// #20
    5d08:	orr	w0, w0, w2
    5d0c:	b	5c70 <PyInit__ctypes_test@@Base+0x1a1c>
    5d10:	mov	x3, x9
    5d14:	ldp	x19, x20, [sp, #16]
    5d18:	ldp	x21, x22, [sp, #32]
    5d1c:	b	5a18 <PyInit__ctypes_test@@Base+0x17c4>
    5d20:	mov	w1, #0x40                  	// #64
    5d24:	sub	w1, w1, w2
    5d28:	lsr	x3, x6, x2
    5d2c:	lsl	x6, x6, x1
    5d30:	cmp	x6, #0x0
    5d34:	lsl	x5, x4, x1
    5d38:	cset	x1, ne  // ne = any
    5d3c:	orr	x5, x5, x3
    5d40:	lsr	x2, x4, x2
    5d44:	orr	x5, x5, x1
    5d48:	tst	x5, #0x7
    5d4c:	b.ne	5c0c <PyInit__ctypes_test@@Base+0x19b8>  // b.any
    5d50:	tbnz	x2, #51, 5e84 <PyInit__ctypes_test@@Base+0x1c30>
    5d54:	ubfx	x4, x2, #3, #48
    5d58:	extr	x5, x2, x5, #3
    5d5c:	mov	w1, #0x0                   	// #0
    5d60:	tbz	w11, #11, 5830 <PyInit__ctypes_test@@Base+0x15dc>
    5d64:	orr	w0, w0, #0x8
    5d68:	b	5c70 <PyInit__ctypes_test@@Base+0x1a1c>
    5d6c:	mov	w1, #0x7fff                	// #32767
    5d70:	mov	x4, #0x0                   	// #0
    5d74:	b	5d04 <PyInit__ctypes_test@@Base+0x1ab0>
    5d78:	cmp	x8, #0x0
    5d7c:	mov	w2, #0x7fff                	// #32767
    5d80:	mov	x4, #0xffffffffffff        	// #281474976710655
    5d84:	csel	w1, w1, w2, eq  // eq = none
    5d88:	csel	x4, x4, xzr, eq  // eq = none
    5d8c:	csetm	x5, eq  // eq = none
    5d90:	b	5d04 <PyInit__ctypes_test@@Base+0x1ab0>
    5d94:	and	x1, x6, #0xf
    5d98:	cmp	x1, #0x4
    5d9c:	b.eq	5a4c <PyInit__ctypes_test@@Base+0x17f8>  // b.none
    5da0:	adds	x6, x6, #0x4
    5da4:	cinc	x4, x4, cs  // cs = hs, nlast
    5da8:	b	5a4c <PyInit__ctypes_test@@Base+0x17f8>
    5dac:	cbz	x8, 5a4c <PyInit__ctypes_test@@Base+0x17f8>
    5db0:	adds	x6, x6, #0x8
    5db4:	cinc	x4, x4, cs  // cs = hs, nlast
    5db8:	b	5a4c <PyInit__ctypes_test@@Base+0x17f8>
    5dbc:	and	x1, x5, #0xf
    5dc0:	cmp	x1, #0x4
    5dc4:	b.eq	5dd0 <PyInit__ctypes_test@@Base+0x1b7c>  // b.none
    5dc8:	adds	x5, x5, #0x4
    5dcc:	cinc	x2, x2, cs  // cs = hs, nlast
    5dd0:	tbz	x2, #51, 5c2c <PyInit__ctypes_test@@Base+0x19d8>
    5dd4:	orr	w0, w0, #0x8
    5dd8:	mov	w1, #0x1                   	// #1
    5ddc:	mov	x4, #0x0                   	// #0
    5de0:	mov	x5, #0x0                   	// #0
    5de4:	b	5c70 <PyInit__ctypes_test@@Base+0x1a1c>
    5de8:	cmp	x8, #0x0
    5dec:	mov	w2, #0x7fff                	// #32767
    5df0:	mov	x4, #0xffffffffffff        	// #281474976710655
    5df4:	csel	w1, w1, w2, ne  // ne = any
    5df8:	csel	x4, x4, xzr, ne  // ne = any
    5dfc:	csetm	x5, ne  // ne = any
    5e00:	b	5d04 <PyInit__ctypes_test@@Base+0x1ab0>
    5e04:	cbnz	x8, 5a4c <PyInit__ctypes_test@@Base+0x17f8>
    5e08:	b	5db0 <PyInit__ctypes_test@@Base+0x1b5c>
    5e0c:	mov	x4, #0x2                   	// #2
    5e10:	cmp	x1, #0xf
    5e14:	b.ne	5e38 <PyInit__ctypes_test@@Base+0x1be4>  // b.any
    5e18:	tbz	x7, #47, 5e50 <PyInit__ctypes_test@@Base+0x1bfc>
    5e1c:	tbnz	x2, #47, 5e50 <PyInit__ctypes_test@@Base+0x1bfc>
    5e20:	orr	x4, x2, #0x800000000000
    5e24:	mov	w10, w15
    5e28:	and	x4, x4, #0xffffffffffff
    5e2c:	mov	x5, x6
    5e30:	mov	w1, #0x7fff                	// #32767
    5e34:	b	5830 <PyInit__ctypes_test@@Base+0x15dc>
    5e38:	cmp	x1, #0xb
    5e3c:	b.ne	5788 <PyInit__ctypes_test@@Base+0x1534>  // b.any
    5e40:	mov	x7, x2
    5e44:	mov	x5, x6
    5e48:	mov	x16, x4
    5e4c:	b	5790 <PyInit__ctypes_test@@Base+0x153c>
    5e50:	orr	x4, x7, #0x800000000000
    5e54:	mov	w10, w12
    5e58:	and	x4, x4, #0xffffffffffff
    5e5c:	mov	w1, #0x7fff                	// #32767
    5e60:	b	5830 <PyInit__ctypes_test@@Base+0x15dc>
    5e64:	cbnz	x8, 5dd0 <PyInit__ctypes_test@@Base+0x1b7c>
    5e68:	adds	x5, x5, #0x8
    5e6c:	cinc	x2, x2, cs  // cs = hs, nlast
    5e70:	tbnz	x2, #51, 5dd4 <PyInit__ctypes_test@@Base+0x1b80>
    5e74:	b	5c2c <PyInit__ctypes_test@@Base+0x19d8>
    5e78:	cbnz	x8, 5e68 <PyInit__ctypes_test@@Base+0x1c14>
    5e7c:	tbnz	x2, #51, 5dd4 <PyInit__ctypes_test@@Base+0x1b80>
    5e80:	b	5c2c <PyInit__ctypes_test@@Base+0x19d8>
    5e84:	orr	w0, w0, #0x10
    5e88:	b	5dd4 <PyInit__ctypes_test@@Base+0x1b80>
    5e8c:	mov	x2, x4
    5e90:	mov	x4, #0x3                   	// #3
    5e94:	b	5e10 <PyInit__ctypes_test@@Base+0x1bbc>
    5e98:	mov	w10, w15
    5e9c:	mov	x8, x13
    5ea0:	b	57ac <PyInit__ctypes_test@@Base+0x1558>
    5ea4:	nop
    5ea8:	stp	x29, x30, [sp, #-48]!
    5eac:	mov	x29, sp
    5eb0:	str	x19, [sp, #16]
    5eb4:	str	q0, [sp, #32]
    5eb8:	ldp	x2, x0, [sp, #32]
    5ebc:	mrs	x1, fpcr
    5ec0:	ubfx	x19, x0, #48, #15
    5ec4:	mov	x3, #0x3ffe                	// #16382
    5ec8:	ubfx	x4, x0, #0, #48
    5ecc:	cmp	x19, x3
    5ed0:	b.gt	5ef8 <PyInit__ctypes_test@@Base+0x1ca4>
    5ed4:	cbnz	x19, 5f98 <PyInit__ctypes_test@@Base+0x1d44>
    5ed8:	orr	x2, x4, x2
    5edc:	cbz	x2, 5ee8 <PyInit__ctypes_test@@Base+0x1c94>
    5ee0:	mov	w0, #0x10                  	// #16
    5ee4:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    5ee8:	mov	x0, x19
    5eec:	ldr	x19, [sp, #16]
    5ef0:	ldp	x29, x30, [sp], #48
    5ef4:	ret
    5ef8:	lsr	x1, x0, #63
    5efc:	and	w3, w1, #0xff
    5f00:	mov	x1, #0x403d                	// #16445
    5f04:	cmp	x19, x1
    5f08:	b.le	5f40 <PyInit__ctypes_test@@Base+0x1cec>
    5f0c:	mov	x0, #0x403e                	// #16446
    5f10:	and	x5, x3, #0xff
    5f14:	cmp	x19, x0
    5f18:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    5f1c:	csel	w1, w3, wzr, eq  // eq = none
    5f20:	add	x19, x5, x0
    5f24:	cbz	w1, 5fa8 <PyInit__ctypes_test@@Base+0x1d54>
    5f28:	extr	x4, x4, x2, #49
    5f2c:	cbnz	x4, 5fa8 <PyInit__ctypes_test@@Base+0x1d54>
    5f30:	cmp	xzr, x2, lsl #15
    5f34:	b.eq	5ee8 <PyInit__ctypes_test@@Base+0x1c94>  // b.none
    5f38:	mov	w0, #0x10                  	// #16
    5f3c:	b	5ee4 <PyInit__ctypes_test@@Base+0x1c90>
    5f40:	mov	x5, #0x406f                	// #16495
    5f44:	sub	x1, x5, x19
    5f48:	mov	x0, x19
    5f4c:	cmp	x1, #0x3f
    5f50:	orr	x19, x4, #0x1000000000000
    5f54:	b.le	5fb4 <PyInit__ctypes_test@@Base+0x1d60>
    5f58:	mov	w4, #0xffffc011            	// #-16367
    5f5c:	add	w4, w0, w4
    5f60:	cmp	x1, #0x40
    5f64:	mov	w1, #0x402f                	// #16431
    5f68:	sub	w0, w1, w0
    5f6c:	lsl	x1, x19, x4
    5f70:	orr	x1, x2, x1
    5f74:	csel	x2, x1, x2, ne  // ne = any
    5f78:	lsr	x19, x19, x0
    5f7c:	cmp	x2, #0x0
    5f80:	cset	w0, ne  // ne = any
    5f84:	cmp	w3, #0x0
    5f88:	cneg	x19, x19, ne  // ne = any
    5f8c:	cbz	w0, 5ee8 <PyInit__ctypes_test@@Base+0x1c94>
    5f90:	mov	w0, #0x10                  	// #16
    5f94:	b	5ee4 <PyInit__ctypes_test@@Base+0x1c90>
    5f98:	mov	x19, #0x0                   	// #0
    5f9c:	mov	w0, #0x10                  	// #16
    5fa0:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    5fa4:	b	5ee8 <PyInit__ctypes_test@@Base+0x1c94>
    5fa8:	mov	w0, #0x1                   	// #1
    5fac:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    5fb0:	b	5ee8 <PyInit__ctypes_test@@Base+0x1c94>
    5fb4:	mov	w6, #0xffffbfd1            	// #-16431
    5fb8:	add	w4, w0, w6
    5fbc:	sub	w0, w5, w0
    5fc0:	lsl	x1, x2, x4
    5fc4:	cmp	x1, #0x0
    5fc8:	lsr	x2, x2, x0
    5fcc:	cset	w0, ne  // ne = any
    5fd0:	lsl	x19, x19, x4
    5fd4:	orr	x19, x2, x19
    5fd8:	b	5f84 <PyInit__ctypes_test@@Base+0x1d30>
    5fdc:	nop
    5fe0:	mrs	x0, fpcr
    5fe4:	fmov	w0, s0
    5fe8:	ubfx	x2, x0, #23, #8
    5fec:	and	x1, x0, #0x7fffff
    5ff0:	add	x3, x2, #0x1
    5ff4:	ubfx	x5, x0, #0, #23
    5ff8:	tst	x3, #0xfe
    5ffc:	lsr	w0, w0, #31
    6000:	b.eq	6030 <PyInit__ctypes_test@@Base+0x1ddc>  // b.none
    6004:	lsl	x1, x1, #25
    6008:	mov	w3, #0x3f80                	// #16256
    600c:	add	w4, w2, w3
    6010:	mov	x3, #0x0                   	// #0
    6014:	bfxil	x3, x1, #0, #48
    6018:	mov	x2, #0x0                   	// #0
    601c:	fmov	d0, x2
    6020:	bfi	x3, x4, #48, #15
    6024:	bfi	x3, x0, #63, #1
    6028:	fmov	v0.d[1], x3
    602c:	ret
    6030:	cbnz	w2, 6060 <PyInit__ctypes_test@@Base+0x1e0c>
    6034:	cbnz	x1, 60ac <PyInit__ctypes_test@@Base+0x1e58>
    6038:	mov	x1, #0x0                   	// #0
    603c:	mov	x3, #0x0                   	// #0
    6040:	bfxil	x3, x1, #0, #48
    6044:	mov	w4, #0x0                   	// #0
    6048:	mov	x2, #0x0                   	// #0
    604c:	fmov	d0, x2
    6050:	bfi	x3, x4, #48, #15
    6054:	bfi	x3, x0, #63, #1
    6058:	fmov	v0.d[1], x3
    605c:	ret
    6060:	cbz	x1, 60e8 <PyInit__ctypes_test@@Base+0x1e94>
    6064:	lsl	x1, x1, #25
    6068:	mov	x3, #0x0                   	// #0
    606c:	orr	x1, x1, #0x800000000000
    6070:	mov	x2, #0x0                   	// #0
    6074:	fmov	d0, x2
    6078:	bfxil	x3, x1, #0, #48
    607c:	orr	x3, x3, #0x7fff000000000000
    6080:	bfi	x3, x0, #63, #1
    6084:	fmov	v0.d[1], x3
    6088:	tbnz	w5, #22, 6110 <PyInit__ctypes_test@@Base+0x1ebc>
    608c:	stp	x29, x30, [sp, #-32]!
    6090:	mov	w0, #0x1                   	// #1
    6094:	mov	x29, sp
    6098:	str	q0, [sp, #16]
    609c:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    60a0:	ldr	q0, [sp, #16]
    60a4:	ldp	x29, x30, [sp], #32
    60a8:	ret
    60ac:	clz	x4, x1
    60b0:	mov	w2, #0x3fa9                	// #16297
    60b4:	sub	w3, w4, #0xf
    60b8:	sub	w2, w2, w4
    60bc:	and	w4, w2, #0x7fff
    60c0:	mov	x2, #0x0                   	// #0
    60c4:	lsl	x1, x1, x3
    60c8:	and	x1, x1, #0xffffffffffff
    60cc:	mov	x3, #0x0                   	// #0
    60d0:	fmov	d0, x2
    60d4:	bfxil	x3, x1, #0, #48
    60d8:	bfi	x3, x4, #48, #15
    60dc:	bfi	x3, x0, #63, #1
    60e0:	fmov	v0.d[1], x3
    60e4:	ret
    60e8:	mov	x1, #0x0                   	// #0
    60ec:	mov	x3, #0x0                   	// #0
    60f0:	bfxil	x3, x1, #0, #48
    60f4:	mov	w4, #0x7fff                	// #32767
    60f8:	mov	x2, #0x0                   	// #0
    60fc:	fmov	d0, x2
    6100:	bfi	x3, x4, #48, #15
    6104:	bfi	x3, x0, #63, #1
    6108:	fmov	v0.d[1], x3
    610c:	ret
    6110:	ret
    6114:	nop
    6118:	mrs	x0, fpcr
    611c:	fmov	x0, d0
    6120:	ubfx	x1, x0, #52, #11
    6124:	lsr	x4, x0, #63
    6128:	add	x2, x1, #0x1
    612c:	and	w4, w4, #0xff
    6130:	tst	x2, #0x7fe
    6134:	ubfx	x0, x0, #0, #52
    6138:	b.eq	616c <PyInit__ctypes_test@@Base+0x1f18>  // b.none
    613c:	lsr	x5, x0, #4
    6140:	mov	x3, #0x0                   	// #0
    6144:	and	x5, x5, #0xffffffffffff
    6148:	mov	w2, #0x3c00                	// #15360
    614c:	add	w1, w1, w2
    6150:	lsl	x0, x0, #60
    6154:	bfxil	x3, x5, #0, #48
    6158:	fmov	d0, x0
    615c:	bfi	x3, x1, #48, #15
    6160:	bfi	x3, x4, #63, #1
    6164:	fmov	v0.d[1], x3
    6168:	ret
    616c:	cbnz	x1, 61c0 <PyInit__ctypes_test@@Base+0x1f6c>
    6170:	cbz	x0, 620c <PyInit__ctypes_test@@Base+0x1fb8>
    6174:	clz	x2, x0
    6178:	cmp	w2, #0xe
    617c:	b.gt	6258 <PyInit__ctypes_test@@Base+0x2004>
    6180:	add	w1, w2, #0x31
    6184:	mov	w5, #0xf                   	// #15
    6188:	sub	w5, w5, w2
    618c:	lsr	x5, x0, x5
    6190:	lsl	x0, x0, x1
    6194:	and	x5, x5, #0xffffffffffff
    6198:	mov	w1, #0x3c0c                	// #15372
    619c:	mov	x3, #0x0                   	// #0
    61a0:	sub	w1, w1, w2
    61a4:	and	w1, w1, #0x7fff
    61a8:	bfxil	x3, x5, #0, #48
    61ac:	fmov	d0, x0
    61b0:	bfi	x3, x1, #48, #15
    61b4:	bfi	x3, x4, #63, #1
    61b8:	fmov	v0.d[1], x3
    61bc:	ret
    61c0:	cbz	x0, 6230 <PyInit__ctypes_test@@Base+0x1fdc>
    61c4:	lsr	x1, x0, #4
    61c8:	mov	x3, #0x0                   	// #0
    61cc:	orr	x1, x1, #0x800000000000
    61d0:	lsl	x2, x0, #60
    61d4:	fmov	d0, x2
    61d8:	bfxil	x3, x1, #0, #48
    61dc:	orr	x3, x3, #0x7fff000000000000
    61e0:	bfi	x3, x4, #63, #1
    61e4:	fmov	v0.d[1], x3
    61e8:	tbnz	x0, #51, 6254 <PyInit__ctypes_test@@Base+0x2000>
    61ec:	stp	x29, x30, [sp, #-32]!
    61f0:	mov	w0, #0x1                   	// #1
    61f4:	mov	x29, sp
    61f8:	str	q0, [sp, #16]
    61fc:	bl	6268 <PyInit__ctypes_test@@Base+0x2014>
    6200:	ldr	q0, [sp, #16]
    6204:	ldp	x29, x30, [sp], #32
    6208:	ret
    620c:	mov	x5, #0x0                   	// #0
    6210:	mov	x3, #0x0                   	// #0
    6214:	bfxil	x3, x5, #0, #48
    6218:	mov	w1, #0x0                   	// #0
    621c:	fmov	d0, x0
    6220:	bfi	x3, x1, #48, #15
    6224:	bfi	x3, x4, #63, #1
    6228:	fmov	v0.d[1], x3
    622c:	ret
    6230:	mov	x5, #0x0                   	// #0
    6234:	mov	x3, #0x0                   	// #0
    6238:	bfxil	x3, x5, #0, #48
    623c:	mov	w1, #0x7fff                	// #32767
    6240:	fmov	d0, x0
    6244:	bfi	x3, x1, #48, #15
    6248:	bfi	x3, x4, #63, #1
    624c:	fmov	v0.d[1], x3
    6250:	ret
    6254:	ret
    6258:	sub	w5, w2, #0xf
    625c:	lsl	x5, x0, x5
    6260:	mov	x0, #0x0                   	// #0
    6264:	b	6194 <PyInit__ctypes_test@@Base+0x1f40>
    6268:	tbz	w0, #0, 6278 <PyInit__ctypes_test@@Base+0x2024>
    626c:	movi	v1.2s, #0x0
    6270:	fdiv	s0, s1, s1
    6274:	mrs	x1, fpsr
    6278:	tbz	w0, #1, 628c <PyInit__ctypes_test@@Base+0x2038>
    627c:	fmov	s1, #1.000000000000000000e+00
    6280:	movi	v2.2s, #0x0
    6284:	fdiv	s0, s1, s2
    6288:	mrs	x1, fpsr
    628c:	tbz	w0, #2, 62ac <PyInit__ctypes_test@@Base+0x2058>
    6290:	mov	w2, #0xc5ae                	// #50606
    6294:	mov	w1, #0x7f7fffff            	// #2139095039
    6298:	movk	w2, #0x749d, lsl #16
    629c:	fmov	s1, w1
    62a0:	fmov	s2, w2
    62a4:	fadd	s0, s1, s2
    62a8:	mrs	x1, fpsr
    62ac:	tbz	w0, #3, 62bc <PyInit__ctypes_test@@Base+0x2068>
    62b0:	movi	v1.2s, #0x80, lsl #16
    62b4:	fmul	s0, s1, s1
    62b8:	mrs	x1, fpsr
    62bc:	tbz	w0, #4, 62d4 <PyInit__ctypes_test@@Base+0x2080>
    62c0:	mov	w0, #0x7f7fffff            	// #2139095039
    62c4:	fmov	s2, #1.000000000000000000e+00
    62c8:	fmov	s1, w0
    62cc:	fsub	s0, s1, s2
    62d0:	mrs	x0, fpsr
    62d4:	ret

Disassembly of section .fini:

00000000000062d8 <.fini>:
    62d8:	stp	x29, x30, [sp, #-16]!
    62dc:	mov	x29, sp
    62e0:	ldp	x29, x30, [sp], #16
    62e4:	ret
