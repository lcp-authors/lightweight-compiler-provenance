
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cldr-plurals_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401270 <_init>:
  401270:	stp	x29, x30, [sp, #-16]!
  401274:	mov	x29, sp
  401278:	bl	401620 <call_weak_fn>
  40127c:	ldp	x29, x30, [sp], #16
  401280:	ret

Disassembly of section .plt:

0000000000401290 <.plt>:
  401290:	stp	x16, x30, [sp, #-16]!
  401294:	adrp	x16, 414000 <__FRAME_END__+0xf674>
  401298:	ldr	x17, [x16, #4088]
  40129c:	add	x16, x16, #0xff8
  4012a0:	br	x17
  4012a4:	nop
  4012a8:	nop
  4012ac:	nop

00000000004012b0 <memcpy@plt>:
  4012b0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4012b4:	ldr	x17, [x16]
  4012b8:	add	x16, x16, #0x0
  4012bc:	br	x17

00000000004012c0 <strlen@plt>:
  4012c0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4012c4:	ldr	x17, [x16, #8]
  4012c8:	add	x16, x16, #0x8
  4012cc:	br	x17

00000000004012d0 <exit@plt>:
  4012d0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4012d4:	ldr	x17, [x16, #16]
  4012d8:	add	x16, x16, #0x10
  4012dc:	br	x17

00000000004012e0 <error@plt>:
  4012e0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4012e4:	ldr	x17, [x16, #24]
  4012e8:	add	x16, x16, #0x18
  4012ec:	br	x17

00000000004012f0 <set_program_name@plt>:
  4012f0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4012f4:	ldr	x17, [x16, #32]
  4012f8:	add	x16, x16, #0x20
  4012fc:	br	x17

0000000000401300 <xmlHasProp@plt>:
  401300:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401304:	ldr	x17, [x16, #40]
  401308:	add	x16, x16, #0x28
  40130c:	br	x17

0000000000401310 <sprintf@plt>:
  401310:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401314:	ldr	x17, [x16, #48]
  401318:	add	x16, x16, #0x30
  40131c:	br	x17

0000000000401320 <xmlFreeDoc@plt>:
  401320:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401324:	ldr	x17, [x16, #56]
  401328:	add	x16, x16, #0x38
  40132c:	br	x17

0000000000401330 <__cxa_atexit@plt>:
  401330:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401334:	ldr	x17, [x16, #64]
  401338:	add	x16, x16, #0x40
  40133c:	br	x17

0000000000401340 <fputc@plt>:
  401340:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401344:	ldr	x17, [x16, #72]
  401348:	add	x16, x16, #0x48
  40134c:	br	x17

0000000000401350 <fileno@plt>:
  401350:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401354:	ldr	x17, [x16, #80]
  401358:	add	x16, x16, #0x50
  40135c:	br	x17

0000000000401360 <fclose@plt>:
  401360:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401364:	ldr	x17, [x16, #88]
  401368:	add	x16, x16, #0x58
  40136c:	br	x17

0000000000401370 <fopen@plt>:
  401370:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401374:	ldr	x17, [x16, #96]
  401378:	add	x16, x16, #0x60
  40137c:	br	x17

0000000000401380 <malloc@plt>:
  401380:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401384:	ldr	x17, [x16, #104]
  401388:	add	x16, x16, #0x68
  40138c:	br	x17

0000000000401390 <xrealloc@plt>:
  401390:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401394:	ldr	x17, [x16, #112]
  401398:	add	x16, x16, #0x70
  40139c:	br	x17

00000000004013a0 <xmlGetProp@plt>:
  4013a0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4013a4:	ldr	x17, [x16, #120]
  4013a8:	add	x16, x16, #0x78
  4013ac:	br	x17

00000000004013b0 <xmlCheckVersion@plt>:
  4013b0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4013b4:	ldr	x17, [x16, #128]
  4013b8:	add	x16, x16, #0x80
  4013bc:	br	x17

00000000004013c0 <strncmp@plt>:
  4013c0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4013c4:	ldr	x17, [x16, #136]
  4013c8:	add	x16, x16, #0x88
  4013cc:	br	x17

00000000004013d0 <bindtextdomain@plt>:
  4013d0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4013d4:	ldr	x17, [x16, #144]
  4013d8:	add	x16, x16, #0x90
  4013dc:	br	x17

00000000004013e0 <__libc_start_main@plt>:
  4013e0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4013e4:	ldr	x17, [x16, #152]
  4013e8:	add	x16, x16, #0x98
  4013ec:	br	x17

00000000004013f0 <memset@plt>:
  4013f0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4013f4:	ldr	x17, [x16, #160]
  4013f8:	add	x16, x16, #0xa0
  4013fc:	br	x17

0000000000401400 <xmalloc@plt>:
  401400:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401404:	ldr	x17, [x16, #168]
  401408:	add	x16, x16, #0xa8
  40140c:	br	x17

0000000000401410 <xstrdup@plt>:
  401410:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401414:	ldr	x17, [x16, #176]
  401418:	add	x16, x16, #0xb0
  40141c:	br	x17

0000000000401420 <xmlStrlen@plt>:
  401420:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401424:	ldr	x17, [x16, #184]
  401428:	add	x16, x16, #0xb8
  40142c:	br	x17

0000000000401430 <close_stdout@plt>:
  401430:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401434:	ldr	x17, [x16, #192]
  401438:	add	x16, x16, #0xc0
  40143c:	br	x17

0000000000401440 <xmlNodeGetContent@plt>:
  401440:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401444:	ldr	x17, [x16, #200]
  401448:	add	x16, x16, #0xc8
  40144c:	br	x17

0000000000401450 <xmlReadFd@plt>:
  401450:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401454:	ldr	x17, [x16, #208]
  401458:	add	x16, x16, #0xd0
  40145c:	br	x17

0000000000401460 <strrchr@plt>:
  401460:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401464:	ldr	x17, [x16, #216]
  401468:	add	x16, x16, #0xd8
  40146c:	br	x17

0000000000401470 <__gmon_start__@plt>:
  401470:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401474:	ldr	x17, [x16, #224]
  401478:	add	x16, x16, #0xe0
  40147c:	br	x17

0000000000401480 <abort@plt>:
  401480:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401484:	ldr	x17, [x16, #232]
  401488:	add	x16, x16, #0xe8
  40148c:	br	x17

0000000000401490 <u8_mbtouc_aux@plt>:
  401490:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401494:	ldr	x17, [x16, #240]
  401498:	add	x16, x16, #0xf0
  40149c:	br	x17

00000000004014a0 <puts@plt>:
  4014a0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4014a4:	ldr	x17, [x16, #248]
  4014a8:	add	x16, x16, #0xf8
  4014ac:	br	x17

00000000004014b0 <textdomain@plt>:
  4014b0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4014b4:	ldr	x17, [x16, #256]
  4014b8:	add	x16, x16, #0x100
  4014bc:	br	x17

00000000004014c0 <getopt_long@plt>:
  4014c0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4014c4:	ldr	x17, [x16, #264]
  4014c8:	add	x16, x16, #0x108
  4014cc:	br	x17

00000000004014d0 <strcmp@plt>:
  4014d0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4014d4:	ldr	x17, [x16, #272]
  4014d8:	add	x16, x16, #0x110
  4014dc:	br	x17

00000000004014e0 <basename@plt>:
  4014e0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4014e4:	ldr	x17, [x16, #280]
  4014e8:	add	x16, x16, #0x118
  4014ec:	br	x17

00000000004014f0 <proper_name@plt>:
  4014f0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4014f4:	ldr	x17, [x16, #288]
  4014f8:	add	x16, x16, #0x120
  4014fc:	br	x17

0000000000401500 <free@plt>:
  401500:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401504:	ldr	x17, [x16, #296]
  401508:	add	x16, x16, #0x128
  40150c:	br	x17

0000000000401510 <fwrite@plt>:
  401510:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401514:	ldr	x17, [x16, #304]
  401518:	add	x16, x16, #0x130
  40151c:	br	x17

0000000000401520 <xmlGetLineNo@plt>:
  401520:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401524:	ldr	x17, [x16, #312]
  401528:	add	x16, x16, #0x138
  40152c:	br	x17

0000000000401530 <dcgettext@plt>:
  401530:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401534:	ldr	x17, [x16, #320]
  401538:	add	x16, x16, #0x140
  40153c:	br	x17

0000000000401540 <xmlStrncmp@plt>:
  401540:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401544:	ldr	x17, [x16, #328]
  401548:	add	x16, x16, #0x148
  40154c:	br	x17

0000000000401550 <printf@plt>:
  401550:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401554:	ldr	x17, [x16, #336]
  401558:	add	x16, x16, #0x150
  40155c:	br	x17

0000000000401560 <xmlStrEqual@plt>:
  401560:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401564:	ldr	x17, [x16, #344]
  401568:	add	x16, x16, #0x158
  40156c:	br	x17

0000000000401570 <xmlDocGetRootElement@plt>:
  401570:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401574:	ldr	x17, [x16, #352]
  401578:	add	x16, x16, #0x160
  40157c:	br	x17

0000000000401580 <putchar@plt>:
  401580:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401584:	ldr	x17, [x16, #360]
  401588:	add	x16, x16, #0x168
  40158c:	br	x17

0000000000401590 <__getdelim@plt>:
  401590:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  401594:	ldr	x17, [x16, #368]
  401598:	add	x16, x16, #0x170
  40159c:	br	x17

00000000004015a0 <error_at_line@plt>:
  4015a0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4015a4:	ldr	x17, [x16, #376]
  4015a8:	add	x16, x16, #0x178
  4015ac:	br	x17

00000000004015b0 <fprintf@plt>:
  4015b0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4015b4:	ldr	x17, [x16, #384]
  4015b8:	add	x16, x16, #0x180
  4015bc:	br	x17

00000000004015c0 <setlocale@plt>:
  4015c0:	adrp	x16, 415000 <memcpy@GLIBC_2.17>
  4015c4:	ldr	x17, [x16, #392]
  4015c8:	add	x16, x16, #0x188
  4015cc:	br	x17

Disassembly of section .text:

00000000004015d0 <_start>:
  4015d0:	mov	x29, #0x0                   	// #0
  4015d4:	mov	x30, #0x0                   	// #0
  4015d8:	mov	x5, x0
  4015dc:	ldr	x1, [sp]
  4015e0:	add	x2, sp, #0x8
  4015e4:	mov	x6, sp
  4015e8:	movz	x0, #0x0, lsl #48
  4015ec:	movk	x0, #0x0, lsl #32
  4015f0:	movk	x0, #0x40, lsl #16
  4015f4:	movk	x0, #0x34a0
  4015f8:	movz	x3, #0x0, lsl #48
  4015fc:	movk	x3, #0x0, lsl #32
  401600:	movk	x3, #0x40, lsl #16
  401604:	movk	x3, #0x3d88
  401608:	movz	x4, #0x0, lsl #48
  40160c:	movk	x4, #0x0, lsl #32
  401610:	movk	x4, #0x40, lsl #16
  401614:	movk	x4, #0x3e08
  401618:	bl	4013e0 <__libc_start_main@plt>
  40161c:	bl	401480 <abort@plt>

0000000000401620 <call_weak_fn>:
  401620:	adrp	x0, 414000 <__FRAME_END__+0xf674>
  401624:	ldr	x0, [x0, #4064]
  401628:	cbz	x0, 401630 <call_weak_fn+0x10>
  40162c:	b	401470 <__gmon_start__@plt>
  401630:	ret
  401634:	nop

0000000000401638 <deregister_tm_clones>:
  401638:	adrp	x0, 415000 <memcpy@GLIBC_2.17>
  40163c:	add	x0, x0, #0x1a0
  401640:	adrp	x1, 415000 <memcpy@GLIBC_2.17>
  401644:	add	x1, x1, #0x1a0
  401648:	cmp	x1, x0
  40164c:	b.eq	401664 <deregister_tm_clones+0x2c>  // b.none
  401650:	adrp	x1, 403000 <print_condition+0x174>
  401654:	ldr	x1, [x1, #3640]
  401658:	cbz	x1, 401664 <deregister_tm_clones+0x2c>
  40165c:	mov	x16, x1
  401660:	br	x16
  401664:	ret

0000000000401668 <register_tm_clones>:
  401668:	adrp	x0, 415000 <memcpy@GLIBC_2.17>
  40166c:	add	x0, x0, #0x1a0
  401670:	adrp	x1, 415000 <memcpy@GLIBC_2.17>
  401674:	add	x1, x1, #0x1a0
  401678:	sub	x1, x1, x0
  40167c:	lsr	x2, x1, #63
  401680:	add	x1, x2, x1, asr #3
  401684:	cmp	xzr, x1, asr #1
  401688:	asr	x1, x1, #1
  40168c:	b.eq	4016a4 <register_tm_clones+0x3c>  // b.none
  401690:	adrp	x2, 403000 <print_condition+0x174>
  401694:	ldr	x2, [x2, #3648]
  401698:	cbz	x2, 4016a4 <register_tm_clones+0x3c>
  40169c:	mov	x16, x2
  4016a0:	br	x16
  4016a4:	ret

00000000004016a8 <__do_global_dtors_aux>:
  4016a8:	stp	x29, x30, [sp, #-32]!
  4016ac:	mov	x29, sp
  4016b0:	str	x19, [sp, #16]
  4016b4:	adrp	x19, 415000 <memcpy@GLIBC_2.17>
  4016b8:	ldrb	w0, [x19, #472]
  4016bc:	cbnz	w0, 4016cc <__do_global_dtors_aux+0x24>
  4016c0:	bl	401638 <deregister_tm_clones>
  4016c4:	mov	w0, #0x1                   	// #1
  4016c8:	strb	w0, [x19, #472]
  4016cc:	ldr	x19, [sp, #16]
  4016d0:	ldp	x29, x30, [sp], #32
  4016d4:	ret

00000000004016d8 <frame_dummy>:
  4016d8:	b	401668 <register_tm_clones>

00000000004016dc <yyparse>:
  4016dc:	stp	x29, x30, [sp, #-96]!
  4016e0:	stp	x28, x27, [sp, #16]
  4016e4:	stp	x26, x25, [sp, #32]
  4016e8:	stp	x24, x23, [sp, #48]
  4016ec:	stp	x22, x21, [sp, #64]
  4016f0:	stp	x20, x19, [sp, #80]
  4016f4:	mov	x29, sp
  4016f8:	sub	sp, sp, #0x800
  4016fc:	mov	x23, #0x8490                	// #33936
  401700:	movk	x23, #0x952, lsl #16
  401704:	movk	x23, #0xf65c, lsl #32
  401708:	add	x8, sp, #0x18
  40170c:	mov	w22, wzr
  401710:	stur	xzr, [x29, #-24]
  401714:	mov	w12, #0xfffffffe            	// #-2
  401718:	add	x19, sp, #0x18
  40171c:	mov	w25, #0xc8                  	// #200
  401720:	movk	x23, #0xc, lsl #48
  401724:	stp	x0, x8, [sp, #8]
  401728:	add	x20, sp, #0x658
  40172c:	add	x24, sp, #0x658
  401730:	b	401744 <yyparse+0x68>
  401734:	adrp	x9, 404000 <yytable+0xd>
  401738:	add	x9, x9, #0xb2
  40173c:	ldrsb	w22, [x9, x8]
  401740:	add	x20, x20, #0x2
  401744:	add	x8, x24, x25, lsl #1
  401748:	sub	x8, x8, #0x2
  40174c:	cmp	x8, x20
  401750:	strh	w22, [x20]
  401754:	b.hi	401804 <yyparse+0x128>  // b.pmore
  401758:	lsr	x8, x25, #4
  40175c:	mov	x28, x12
  401760:	cmp	x8, #0x270
  401764:	b.hi	402060 <yyparse+0x984>  // b.pmore
  401768:	ubfx	x9, x25, #3, #60
  40176c:	lsl	x8, x25, #1
  401770:	cmp	x9, #0x271
  401774:	mov	w9, #0x2710                	// #10000
  401778:	csel	x25, x8, x9, cc  // cc = lo, ul, last
  40177c:	mov	w8, #0xa                   	// #10
  401780:	orr	x9, xzr, #0x7
  401784:	madd	x0, x25, x8, x9
  401788:	bl	401380 <malloc@plt>
  40178c:	cbz	x0, 402060 <yyparse+0x984>
  401790:	sub	x8, x20, x24
  401794:	asr	x19, x8, #1
  401798:	add	x20, x19, #0x1
  40179c:	lsl	x2, x20, #1
  4017a0:	mov	x1, x24
  4017a4:	mov	x27, x0
  4017a8:	bl	4012b0 <memcpy@plt>
  4017ac:	lsl	x8, x25, #1
  4017b0:	add	x8, x8, #0x7
  4017b4:	ldr	x1, [sp, #16]
  4017b8:	and	x8, x8, #0xfffffffffffffff8
  4017bc:	add	x26, x27, x8
  4017c0:	lsl	x2, x20, #3
  4017c4:	mov	x0, x26
  4017c8:	bl	4012b0 <memcpy@plt>
  4017cc:	add	x8, sp, #0x658
  4017d0:	cmp	x24, x8
  4017d4:	b.eq	4017e0 <yyparse+0x104>  // b.none
  4017d8:	mov	x0, x24
  4017dc:	bl	401500 <free@plt>
  4017e0:	add	x8, x27, x25, lsl #1
  4017e4:	add	x20, x27, x19, lsl #1
  4017e8:	sub	x8, x8, #0x2
  4017ec:	cmp	x8, x20
  4017f0:	add	x19, x26, x19, lsl #3
  4017f4:	b.ls	4021e4 <yyparse+0xb08>  // b.plast
  4017f8:	mov	x24, x27
  4017fc:	mov	x12, x28
  401800:	str	x26, [sp, #16]
  401804:	cmp	w22, #0x7
  401808:	b.eq	402124 <yyparse+0xa48>  // b.none
  40180c:	lsr	x8, x23, x22
  401810:	sxtw	x26, w22
  401814:	tbnz	w8, #0, 401c78 <yyparse+0x59c>
  401818:	cmn	w12, #0x2
  40181c:	b.ne	401bec <yyparse+0x510>  // b.any
  401820:	ldr	x8, [sp, #8]
  401824:	ldr	x21, [x8]
  401828:	add	x28, x21, #0x5
  40182c:	b	401838 <yyparse+0x15c>
  401830:	add	x28, x28, #0x1
  401834:	add	x21, x21, #0x1
  401838:	ldurb	w8, [x28, #-5]
  40183c:	cmp	w8, #0x9
  401840:	b.eq	401830 <yyparse+0x154>  // b.none
  401844:	cmp	w8, #0x20
  401848:	b.eq	401830 <yyparse+0x154>  // b.none
  40184c:	cbnz	w8, 401864 <yyparse+0x188>
  401850:	ldr	x9, [sp, #8]
  401854:	sub	x8, x28, #0x5
  401858:	mov	w12, wzr
  40185c:	str	x8, [x9]
  401860:	b	401bec <yyparse+0x510>
  401864:	sxtb	w9, w8
  401868:	sub	x27, x28, #0x5
  40186c:	tbnz	w9, #31, 401878 <yyparse+0x19c>
  401870:	stur	w8, [x29, #-12]
  401874:	b	4018ac <yyparse+0x1d0>
  401878:	ldr	x8, [sp, #8]
  40187c:	sub	x0, x29, #0xc
  401880:	mov	x1, x27
  401884:	ldr	x8, [x8, #8]
  401888:	sub	x2, x8, x27
  40188c:	bl	401490 <u8_mbtouc_aux@plt>
  401890:	ldur	w8, [x29, #-12]
  401894:	mov	w9, #0x2026                	// #8230
  401898:	cmp	w8, w9
  40189c:	b.ne	4018ac <yyparse+0x1d0>  // b.any
  4018a0:	add	x8, x28, w0, sxtw
  4018a4:	sub	x8, x8, #0x5
  4018a8:	b	4019a0 <yyparse+0x2c4>
  4018ac:	adrp	x0, 404000 <yytable+0xd>
  4018b0:	mov	w2, #0x3                   	// #3
  4018b4:	add	x0, x0, #0x161
  4018b8:	mov	x1, x27
  4018bc:	bl	4013c0 <strncmp@plt>
  4018c0:	cbz	w0, 40199c <yyparse+0x2c0>
  4018c4:	adrp	x0, 404000 <yytable+0xd>
  4018c8:	mov	w2, #0x2                   	// #2
  4018cc:	add	x0, x0, #0x162
  4018d0:	mov	x1, x27
  4018d4:	bl	4013c0 <strncmp@plt>
  4018d8:	cbz	w0, 4019b0 <yyparse+0x2d4>
  4018dc:	adrp	x0, 404000 <yytable+0xd>
  4018e0:	mov	w2, #0x5                   	// #5
  4018e4:	add	x0, x0, #0x165
  4018e8:	mov	x1, x27
  4018ec:	bl	4013c0 <strncmp@plt>
  4018f0:	cbz	w0, 4019c4 <yyparse+0x2e8>
  4018f4:	adrp	x0, 404000 <yytable+0xd>
  4018f8:	mov	w2, #0x8                   	// #8
  4018fc:	add	x0, x0, #0x16b
  401900:	mov	x1, x27
  401904:	bl	4013c0 <strncmp@plt>
  401908:	cbz	w0, 4019d4 <yyparse+0x2f8>
  40190c:	adrp	x0, 404000 <yytable+0xd>
  401910:	mov	w2, #0x8                   	// #8
  401914:	add	x0, x0, #0x174
  401918:	mov	x1, x27
  40191c:	bl	4013c0 <strncmp@plt>
  401920:	cbz	w0, 401a74 <yyparse+0x398>
  401924:	ldurb	w12, [x28, #-5]
  401928:	sub	w8, w12, #0x61
  40192c:	cmp	w8, #0x1a
  401930:	b.cs	401ad4 <yyparse+0x3f8>  // b.hs, b.nlast
  401934:	mov	x28, xzr
  401938:	b	401980 <yyparse+0x2a4>
  40193c:	adrp	x23, 415000 <memcpy@GLIBC_2.17>
  401940:	ldr	x0, [x23, #480]
  401944:	lsl	x8, x8, #1
  401948:	add	x1, x8, #0xa
  40194c:	str	x1, [x9, #488]
  401950:	mov	x27, x12
  401954:	bl	401390 <xrealloc@plt>
  401958:	mov	x12, x27
  40195c:	mov	x27, x0
  401960:	str	x0, [x23, #480]
  401964:	strb	w12, [x27, x28]
  401968:	ldrb	w12, [x21, #1]!
  40196c:	add	x23, x28, #0x1
  401970:	mov	x28, x23
  401974:	sub	w8, w12, #0x61
  401978:	cmp	w8, #0x1a
  40197c:	b.cs	4019e8 <yyparse+0x30c>  // b.hs, b.nlast
  401980:	adrp	x9, 415000 <memcpy@GLIBC_2.17>
  401984:	ldr	x8, [x9, #488]
  401988:	cmp	x28, x8
  40198c:	b.cs	40193c <yyparse+0x260>  // b.hs, b.nlast
  401990:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  401994:	ldr	x27, [x8, #480]
  401998:	b	401964 <yyparse+0x288>
  40199c:	sub	x8, x28, #0x2
  4019a0:	ldr	x9, [sp, #8]
  4019a4:	mov	w12, #0x105                 	// #261
  4019a8:	str	x8, [x9]
  4019ac:	b	401bec <yyparse+0x510>
  4019b0:	ldr	x9, [sp, #8]
  4019b4:	sub	x8, x28, #0x3
  4019b8:	mov	w12, #0x104                 	// #260
  4019bc:	str	x8, [x9]
  4019c0:	b	401bec <yyparse+0x510>
  4019c4:	ldr	x8, [sp, #8]
  4019c8:	mov	w12, #0x106                 	// #262
  4019cc:	str	x28, [x8]
  4019d0:	b	401bec <yyparse+0x510>
  4019d4:	ldr	x9, [sp, #8]
  4019d8:	add	x8, x28, #0x3
  4019dc:	mov	w12, #0x107                 	// #263
  4019e0:	str	x8, [x9]
  4019e4:	b	401bec <yyparse+0x510>
  4019e8:	adrp	x9, 415000 <memcpy@GLIBC_2.17>
  4019ec:	ldr	x8, [x9, #488]
  4019f0:	cmp	x23, x8
  4019f4:	b.cc	401a18 <yyparse+0x33c>  // b.lo, b.ul, b.last
  4019f8:	lsl	x8, x8, #1
  4019fc:	add	x1, x8, #0xa
  401a00:	mov	x0, x27
  401a04:	str	x1, [x9, #488]
  401a08:	bl	401390 <xrealloc@plt>
  401a0c:	mov	x27, x0
  401a10:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  401a14:	str	x0, [x8, #480]
  401a18:	cmp	x23, #0x1
  401a1c:	strb	wzr, [x27, x23]
  401a20:	b.ne	401a88 <yyparse+0x3ac>  // b.any
  401a24:	ldrb	w8, [x27]
  401a28:	sub	w8, w8, #0x66
  401a2c:	cmp	w8, #0x11
  401a30:	b.hi	401a88 <yyparse+0x3ac>  // b.pmore
  401a34:	mov	w9, #0x1                   	// #1
  401a38:	lsl	w8, w9, w8
  401a3c:	mov	w9, #0x4109                	// #16649
  401a40:	movk	w9, #0x3, lsl #16
  401a44:	tst	w8, w9
  401a48:	b.eq	401a88 <yyparse+0x3ac>  // b.none
  401a4c:	ldr	x8, [sp, #8]
  401a50:	mov	x23, #0x8490                	// #33936
  401a54:	movk	x23, #0x952, lsl #16
  401a58:	movk	x23, #0xf65c, lsl #32
  401a5c:	str	x21, [x8]
  401a60:	ldrb	w8, [x27]
  401a64:	mov	w12, #0x10c                 	// #268
  401a68:	movk	x23, #0xc, lsl #48
  401a6c:	stur	w8, [x29, #-24]
  401a70:	b	401bec <yyparse+0x510>
  401a74:	ldr	x9, [sp, #8]
  401a78:	add	x8, x28, #0x3
  401a7c:	mov	w12, #0x108                 	// #264
  401a80:	str	x8, [x9]
  401a84:	b	401bec <yyparse+0x510>
  401a88:	adrp	x1, 404000 <yytable+0xd>
  401a8c:	mov	x0, x27
  401a90:	add	x1, x1, #0x17d
  401a94:	bl	4014d0 <strcmp@plt>
  401a98:	mov	x23, #0x8490                	// #33936
  401a9c:	movk	x23, #0x952, lsl #16
  401aa0:	movk	x23, #0xf65c, lsl #32
  401aa4:	movk	x23, #0xc, lsl #48
  401aa8:	cbz	w0, 401bd4 <yyparse+0x4f8>
  401aac:	adrp	x1, 404000 <yytable+0xd>
  401ab0:	mov	x0, x27
  401ab4:	add	x1, x1, #0x10f
  401ab8:	bl	4014d0 <strcmp@plt>
  401abc:	cbz	w0, 401be0 <yyparse+0x504>
  401ac0:	mov	x0, x27
  401ac4:	bl	401410 <xstrdup@plt>
  401ac8:	mov	w12, #0x109                 	// #265
  401acc:	stur	x0, [x29, #-24]
  401ad0:	b	401bcc <yyparse+0x4f0>
  401ad4:	sub	w8, w12, #0x30
  401ad8:	cmp	w8, #0xa
  401adc:	sub	x21, x28, #0x4
  401ae0:	b.cs	402038 <yyparse+0x95c>  // b.hs, b.nlast
  401ae4:	ldrb	w8, [x21]
  401ae8:	sub	x23, x12, #0x30
  401aec:	sub	w9, w8, #0x30
  401af0:	cmp	w9, #0x9
  401af4:	b.hi	401b18 <yyparse+0x43c>  // b.pmore
  401af8:	mov	w11, #0xa                   	// #10
  401afc:	mul	x9, x23, x11
  401b00:	add	x9, x9, w8, uxtb
  401b04:	ldrb	w8, [x21, #1]!
  401b08:	sub	x23, x9, #0x30
  401b0c:	sub	w10, w8, #0x30
  401b10:	cmp	w10, #0xa
  401b14:	b.cc	401afc <yyparse+0x420>  // b.lo, b.ul, b.last
  401b18:	mov	w0, #0x18                  	// #24
  401b1c:	bl	401400 <xmalloc@plt>
  401b20:	stur	x0, [x29, #-24]
  401b24:	ldrb	w8, [x21]
  401b28:	cmp	w8, #0x2e
  401b2c:	b.ne	401bb0 <yyparse+0x4d4>  // b.any
  401b30:	ldrb	w9, [x21, #1]
  401b34:	sub	w8, w9, #0x30
  401b38:	cmp	w8, #0x9
  401b3c:	b.hi	401bb0 <yyparse+0x4d4>  // b.pmore
  401b40:	mov	x8, xzr
  401b44:	ucvtf	d0, x23
  401b48:	mov	w10, #0xa                   	// #10
  401b4c:	and	w9, w9, #0xff
  401b50:	add	x11, x21, x8
  401b54:	sub	w12, w9, #0x30
  401b58:	ldrb	w9, [x11, #2]
  401b5c:	scvtf	d1, w10
  401b60:	scvtf	d2, w12
  401b64:	add	w10, w10, w10, lsl #2
  401b68:	fdiv	d1, d2, d1
  401b6c:	sub	w11, w9, #0x30
  401b70:	fadd	d0, d0, d1
  401b74:	lsl	w10, w10, #1
  401b78:	cmp	w11, #0xa
  401b7c:	add	x8, x8, #0x1
  401b80:	b.cc	401b4c <yyparse+0x470>  // b.lo, b.ul, b.last
  401b84:	mov	x23, #0x8490                	// #33936
  401b88:	movk	x23, #0x952, lsl #16
  401b8c:	mov	w9, #0x1                   	// #1
  401b90:	str	w8, [x0, #16]
  401b94:	add	x8, x21, x8
  401b98:	movk	x23, #0xf65c, lsl #32
  401b9c:	str	w9, [x0]
  401ba0:	str	d0, [x0, #8]
  401ba4:	add	x21, x8, #0x1
  401ba8:	mov	w12, #0x10b                 	// #267
  401bac:	b	401bc8 <yyparse+0x4ec>
  401bb0:	str	w23, [x0, #8]
  401bb4:	mov	x23, #0x8490                	// #33936
  401bb8:	movk	x23, #0x952, lsl #16
  401bbc:	movk	x23, #0xf65c, lsl #32
  401bc0:	str	wzr, [x0]
  401bc4:	mov	w12, #0x10a                 	// #266
  401bc8:	movk	x23, #0xc, lsl #48
  401bcc:	ldr	x8, [sp, #8]
  401bd0:	b	401be8 <yyparse+0x50c>
  401bd4:	ldr	x8, [sp, #8]
  401bd8:	mov	w12, #0x102                 	// #258
  401bdc:	b	401be8 <yyparse+0x50c>
  401be0:	ldr	x8, [sp, #8]
  401be4:	mov	w12, #0x103                 	// #259
  401be8:	str	x21, [x8]
  401bec:	adrp	x8, 403000 <print_condition+0x174>
  401bf0:	add	x8, x8, #0xe7a
  401bf4:	ldrsb	w8, [x8, x26]
  401bf8:	cmp	w12, #0x1
  401bfc:	b.lt	401c18 <yyparse+0x53c>  // b.tstop
  401c00:	cmp	w12, #0x10c
  401c04:	b.hi	401c24 <yyparse+0x548>  // b.pmore
  401c08:	adrp	x9, 403000 <print_condition+0x174>
  401c0c:	add	x9, x9, #0xeae
  401c10:	ldrb	w9, [x9, w12, uxtw]
  401c14:	b	401c28 <yyparse+0x54c>
  401c18:	mov	w9, wzr
  401c1c:	mov	w12, wzr
  401c20:	b	401c28 <yyparse+0x54c>
  401c24:	mov	w9, #0x2                   	// #2
  401c28:	add	w8, w9, w8
  401c2c:	cmp	w8, #0x37
  401c30:	b.hi	401c78 <yyparse+0x59c>  // b.pmore
  401c34:	adrp	x10, 403000 <print_condition+0x174>
  401c38:	add	x10, x10, #0xfbb
  401c3c:	ldrsb	w10, [x10, x8]
  401c40:	cmp	w9, w10
  401c44:	b.ne	401c78 <yyparse+0x59c>  // b.any
  401c48:	adrp	x9, 403000 <print_condition+0x174>
  401c4c:	add	x9, x9, #0xff3
  401c50:	ldrb	w22, [x9, x8]
  401c54:	mov	x9, #0x80000000            	// #2147483648
  401c58:	movk	x9, #0x9efc, lsl #32
  401c5c:	movk	x9, #0x7e, lsl #48
  401c60:	lsr	x8, x9, x8
  401c64:	tbnz	w8, #0, 401d08 <yyparse+0x62c>
  401c68:	ldur	x8, [x29, #-24]
  401c6c:	mov	w12, #0xfffffffe            	// #-2
  401c70:	str	x8, [x19, #8]!
  401c74:	b	401740 <yyparse+0x64>
  401c78:	mov	x8, #0x3000300030003       	// #844437815230467
  401c7c:	movk	x8, #0x34f
  401c80:	movk	x8, #0xf681, lsl #16
  401c84:	lsr	x8, x8, x26
  401c88:	tbnz	w8, #0, 4020a8 <yyparse+0x9cc>
  401c8c:	adrp	x8, 404000 <yytable+0xd>
  401c90:	add	x8, x8, #0x2b
  401c94:	ldrb	w8, [x8, x26]
  401c98:	adrp	x9, 404000 <yytable+0xd>
  401c9c:	sxtw	x22, w8
  401ca0:	add	x9, x9, #0x5f
  401ca4:	ldrb	w21, [x9, x22]
  401ca8:	mov	w9, #0x1                   	// #1
  401cac:	sub	w8, w8, #0x4
  401cb0:	cmp	w8, #0x1c
  401cb4:	sub	x9, x9, x21
  401cb8:	ldr	x27, [x19, x9, lsl #3]
  401cbc:	b.hi	401fd8 <yyparse+0x8fc>  // b.pmore
  401cc0:	adrp	x11, 403000 <print_condition+0x174>
  401cc4:	add	x11, x11, #0xe48
  401cc8:	adr	x9, 401cd8 <yyparse+0x5fc>
  401ccc:	ldrb	w10, [x11, x8]
  401cd0:	add	x9, x9, x10, lsl #2
  401cd4:	br	x9
  401cd8:	ldr	x27, [x19]
  401cdc:	b	401fd8 <yyparse+0x8fc>
  401ce0:	ldr	x0, [x19]
  401ce4:	mov	x26, x12
  401ce8:	b	401cfc <yyparse+0x620>
  401cec:	ldur	x0, [x19, #-16]
  401cf0:	mov	x26, x12
  401cf4:	bl	401500 <free@plt>
  401cf8:	ldr	x0, [x19]
  401cfc:	bl	401500 <free@plt>
  401d00:	mov	x12, x26
  401d04:	b	401fd8 <yyparse+0x8fc>
  401d08:	neg	w8, w22
  401d0c:	b	401c98 <yyparse+0x5bc>
  401d10:	ldur	x23, [x19, #-24]
  401d14:	ldur	x28, [x19, #-8]
  401d18:	mov	w0, #0x10                  	// #16
  401d1c:	str	x12, [sp]
  401d20:	bl	401400 <xmalloc@plt>
  401d24:	stp	x23, x28, [x0]
  401d28:	ldr	x8, [sp, #8]
  401d2c:	mov	x26, x0
  401d30:	ldr	x28, [x8, #16]
  401d34:	ldp	x8, x9, [x28, #8]
  401d38:	cmp	x8, x9
  401d3c:	b.ne	401fa4 <yyparse+0x8c8>  // b.any
  401d40:	ldr	x0, [x28]
  401d44:	mov	w9, #0x1                   	// #1
  401d48:	bfi	x9, x8, #1, #63
  401d4c:	lsl	x1, x9, #3
  401d50:	str	x9, [x28, #16]
  401d54:	bl	401390 <xrealloc@plt>
  401d58:	ldr	x8, [x28, #8]
  401d5c:	str	x0, [x28]
  401d60:	b	401fa8 <yyparse+0x8cc>
  401d64:	ldur	x23, [x19, #-16]
  401d68:	ldr	x26, [x19]
  401d6c:	mov	w0, #0x18                  	// #24
  401d70:	mov	x27, x12
  401d74:	bl	401400 <xmalloc@plt>
  401d78:	mov	x12, x27
  401d7c:	mov	x27, x0
  401d80:	mov	w8, #0x1                   	// #1
  401d84:	str	w8, [x0]
  401d88:	b	401de8 <yyparse+0x70c>
  401d8c:	ldr	x23, [x19]
  401d90:	mov	w0, #0x18                  	// #24
  401d94:	mov	x26, x12
  401d98:	bl	401400 <xmalloc@plt>
  401d9c:	mov	w8, #0x2                   	// #2
  401da0:	mov	x12, x26
  401da4:	mov	x27, x0
  401da8:	str	w8, [x0]
  401dac:	b	401f58 <yyparse+0x87c>
  401db0:	ldur	x23, [x19, #-16]
  401db4:	ldr	x27, [x19]
  401db8:	mov	w0, #0x18                  	// #24
  401dbc:	mov	x28, x12
  401dc0:	bl	401400 <xmalloc@plt>
  401dc4:	mov	w8, #0x2                   	// #2
  401dc8:	mov	x26, x0
  401dcc:	str	w8, [x0]
  401dd0:	str	x27, [x0, #8]
  401dd4:	mov	w0, #0x18                  	// #24
  401dd8:	bl	401400 <xmalloc@plt>
  401ddc:	mov	x12, x28
  401de0:	mov	x27, x0
  401de4:	str	wzr, [x0]
  401de8:	stp	x23, x26, [x0, #8]
  401dec:	b	401f5c <yyparse+0x880>
  401df0:	ldur	x23, [x19, #-16]
  401df4:	ldr	x26, [x19]
  401df8:	mov	w0, #0x18                  	// #24
  401dfc:	mov	x27, x12
  401e00:	bl	401400 <xmalloc@plt>
  401e04:	str	x23, [x0]
  401e08:	mov	x23, #0x8490                	// #33936
  401e0c:	movk	x23, #0x952, lsl #16
  401e10:	movk	x23, #0xf65c, lsl #32
  401e14:	mov	x12, x27
  401e18:	mov	x27, x0
  401e1c:	movk	x23, #0xc, lsl #48
  401e20:	str	wzr, [x0, #8]
  401e24:	str	x26, [x0, #16]
  401e28:	b	401fd8 <yyparse+0x8fc>
  401e2c:	ldur	x23, [x19, #-16]
  401e30:	ldr	x26, [x19]
  401e34:	mov	w0, #0x18                  	// #24
  401e38:	mov	x27, x12
  401e3c:	bl	401400 <xmalloc@plt>
  401e40:	str	x23, [x0]
  401e44:	mov	x23, #0x8490                	// #33936
  401e48:	movk	x23, #0x952, lsl #16
  401e4c:	movk	x23, #0xf65c, lsl #32
  401e50:	mov	w8, #0x1                   	// #1
  401e54:	mov	x12, x27
  401e58:	mov	x27, x0
  401e5c:	movk	x23, #0xc, lsl #48
  401e60:	str	w8, [x0, #8]
  401e64:	str	x26, [x0, #16]
  401e68:	b	401fd8 <yyparse+0x8fc>
  401e6c:	ldr	w23, [x19]
  401e70:	mov	w0, #0x8                   	// #8
  401e74:	mov	x26, x12
  401e78:	bl	401400 <xmalloc@plt>
  401e7c:	stp	w23, wzr, [x0]
  401e80:	mov	x23, #0x8490                	// #33936
  401e84:	movk	x23, #0x952, lsl #16
  401e88:	movk	x23, #0xf65c, lsl #32
  401e8c:	mov	x12, x26
  401e90:	b	401f98 <yyparse+0x8bc>
  401e94:	ldr	x8, [x19]
  401e98:	ldur	w23, [x19, #-16]
  401e9c:	mov	w0, #0x8                   	// #8
  401ea0:	mov	x27, x12
  401ea4:	ldr	w26, [x8, #8]
  401ea8:	bl	401400 <xmalloc@plt>
  401eac:	stp	w23, w26, [x0]
  401eb0:	b	401f88 <yyparse+0x8ac>
  401eb4:	mov	w0, #0x18                  	// #24
  401eb8:	mov	x26, x12
  401ebc:	bl	401400 <xmalloc@plt>
  401ec0:	stp	xzr, xzr, [x0, #8]
  401ec4:	str	xzr, [x0]
  401ec8:	ldr	x23, [x19]
  401ecc:	mov	w8, #0x1                   	// #1
  401ed0:	mov	x27, x0
  401ed4:	str	x8, [x0, #16]
  401ed8:	mov	w1, #0x8                   	// #8
  401edc:	mov	x0, xzr
  401ee0:	bl	401390 <xrealloc@plt>
  401ee4:	ldr	x8, [x27, #8]
  401ee8:	mov	x12, x26
  401eec:	add	x9, x8, #0x1
  401ef0:	stp	x0, x9, [x27]
  401ef4:	str	x23, [x0, x8, lsl #3]
  401ef8:	b	401f5c <yyparse+0x880>
  401efc:	ldur	x27, [x19, #-16]
  401f00:	ldr	x26, [x19]
  401f04:	ldp	x8, x9, [x27, #8]
  401f08:	cmp	x8, x9
  401f0c:	b.ne	401fc8 <yyparse+0x8ec>  // b.any
  401f10:	ldr	x0, [x27]
  401f14:	mov	w9, #0x1                   	// #1
  401f18:	bfi	x9, x8, #1, #63
  401f1c:	lsl	x1, x9, #3
  401f20:	str	x9, [x27, #16]
  401f24:	mov	x28, x12
  401f28:	bl	401390 <xrealloc@plt>
  401f2c:	ldr	x8, [x27, #8]
  401f30:	mov	x12, x28
  401f34:	str	x0, [x27]
  401f38:	b	401fcc <yyparse+0x8f0>
  401f3c:	ldr	x23, [x19]
  401f40:	mov	w0, #0x10                  	// #16
  401f44:	mov	x26, x12
  401f48:	bl	401400 <xmalloc@plt>
  401f4c:	mov	x12, x26
  401f50:	mov	x27, x0
  401f54:	str	x23, [x0]
  401f58:	str	x23, [x0, #8]
  401f5c:	mov	x23, #0x8490                	// #33936
  401f60:	movk	x23, #0x952, lsl #16
  401f64:	movk	x23, #0xf65c, lsl #32
  401f68:	movk	x23, #0xc, lsl #48
  401f6c:	b	401fd8 <yyparse+0x8fc>
  401f70:	ldur	x23, [x19, #-16]
  401f74:	ldr	x26, [x19]
  401f78:	mov	w0, #0x10                  	// #16
  401f7c:	mov	x27, x12
  401f80:	bl	401400 <xmalloc@plt>
  401f84:	stp	x23, x26, [x0]
  401f88:	mov	x23, #0x8490                	// #33936
  401f8c:	movk	x23, #0x952, lsl #16
  401f90:	movk	x23, #0xf65c, lsl #32
  401f94:	mov	x12, x27
  401f98:	mov	x27, x0
  401f9c:	movk	x23, #0xc, lsl #48
  401fa0:	b	401fd8 <yyparse+0x8fc>
  401fa4:	ldr	x0, [x28]
  401fa8:	mov	x23, #0x8490                	// #33936
  401fac:	ldr	x12, [sp]
  401fb0:	movk	x23, #0x952, lsl #16
  401fb4:	movk	x23, #0xf65c, lsl #32
  401fb8:	add	x9, x8, #0x1
  401fbc:	movk	x23, #0xc, lsl #48
  401fc0:	str	x9, [x28, #8]
  401fc4:	b	401fd4 <yyparse+0x8f8>
  401fc8:	ldr	x0, [x27]
  401fcc:	add	x9, x8, #0x1
  401fd0:	str	x9, [x27, #8]
  401fd4:	str	x26, [x0, x8, lsl #3]
  401fd8:	adrp	x8, 404000 <yytable+0xd>
  401fdc:	add	x8, x8, #0x80
  401fe0:	ldrb	w8, [x8, x22]
  401fe4:	sub	x19, x19, x21, lsl #3
  401fe8:	adrp	x9, 404000 <yytable+0xd>
  401fec:	sub	x20, x20, x21, lsl #1
  401ff0:	str	x27, [x19, #8]!
  401ff4:	sub	x8, x8, #0x15
  401ff8:	add	x9, x9, #0xa1
  401ffc:	ldrsb	w9, [x9, x8]
  402000:	ldrsh	w10, [x20]
  402004:	add	w9, w10, w9
  402008:	cmp	w9, #0x37
  40200c:	b.hi	401734 <yyparse+0x58>  // b.pmore
  402010:	adrp	x11, 403000 <print_condition+0x174>
  402014:	add	x11, x11, #0xfbb
  402018:	ldrsb	w11, [x11, x9]
  40201c:	and	w10, w10, #0xffff
  402020:	cmp	w10, w11, uxth
  402024:	b.ne	401734 <yyparse+0x58>  // b.any
  402028:	adrp	x8, 403000 <print_condition+0x174>
  40202c:	add	x8, x8, #0xff3
  402030:	ldrb	w22, [x8, x9]
  402034:	b	401740 <yyparse+0x64>
  402038:	cmp	w12, #0x21
  40203c:	b.ne	401bcc <yyparse+0x4f0>  // b.any
  402040:	ldurb	w8, [x28, #-4]
  402044:	sub	x9, x28, #0x3
  402048:	cmp	w8, #0x3d
  40204c:	csel	x21, x9, x21, eq  // eq = none
  402050:	mov	w8, #0x100                 	// #256
  402054:	mov	w9, #0x21                  	// #33
  402058:	csel	w12, w9, w8, eq  // eq = none
  40205c:	b	401bcc <yyparse+0x4f0>
  402060:	adrp	x0, 404000 <yytable+0xd>
  402064:	adrp	x1, 404000 <yytable+0xd>
  402068:	add	x0, x0, #0xf7
  40206c:	add	x1, x1, #0x121
  402070:	mov	w2, #0x5                   	// #5
  402074:	bl	401530 <dcgettext@plt>
  402078:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  40207c:	ldr	x8, [x8, #416]
  402080:	adrp	x1, 404000 <yytable+0xd>
  402084:	mov	x2, x0
  402088:	add	x1, x1, #0x275
  40208c:	mov	x0, x8
  402090:	bl	4015b0 <fprintf@plt>
  402094:	mov	w21, #0x2                   	// #2
  402098:	mov	x12, x28
  40209c:	cmn	w12, #0x2
  4020a0:	b.ne	402148 <yyparse+0xa6c>  // b.any
  4020a4:	b	402174 <yyparse+0xa98>
  4020a8:	adrp	x0, 404000 <yytable+0xd>
  4020ac:	adrp	x1, 404000 <yytable+0xd>
  4020b0:	add	x0, x0, #0xf7
  4020b4:	add	x1, x1, #0x105
  4020b8:	mov	w2, #0x5                   	// #5
  4020bc:	mov	x25, x12
  4020c0:	bl	401530 <dcgettext@plt>
  4020c4:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  4020c8:	ldr	x8, [x8, #416]
  4020cc:	adrp	x1, 404000 <yytable+0xd>
  4020d0:	mov	x2, x0
  4020d4:	add	x1, x1, #0x275
  4020d8:	mov	x0, x8
  4020dc:	bl	4015b0 <fprintf@plt>
  4020e0:	cmp	x20, x24
  4020e4:	b.eq	402134 <yyparse+0xa58>  // b.none
  4020e8:	adrp	x23, 404000 <yytable+0xd>
  4020ec:	adrp	x21, 404000 <yytable+0xd>
  4020f0:	add	x23, x23, #0xc3
  4020f4:	add	x21, x21, #0x112
  4020f8:	ldrb	w1, [x23, w22, sxtw]
  4020fc:	mov	x0, x21
  402100:	mov	x2, x19
  402104:	bl	4021f0 <yydestruct>
  402108:	ldrsh	w22, [x20, #-2]!
  40210c:	sub	x19, x19, #0x8
  402110:	cmp	x24, x20
  402114:	b.ne	4020f8 <yyparse+0xa1c>  // b.any
  402118:	mov	w21, #0x1                   	// #1
  40211c:	mov	x20, x24
  402120:	b	40213c <yyparse+0xa60>
  402124:	mov	w21, wzr
  402128:	cmn	w12, #0x2
  40212c:	b.ne	402148 <yyparse+0xa6c>  // b.any
  402130:	b	402174 <yyparse+0xa98>
  402134:	mov	w21, #0x1                   	// #1
  402138:	mov	x24, x20
  40213c:	mov	x12, x25
  402140:	cmn	w12, #0x2
  402144:	b.eq	402174 <yyparse+0xa98>  // b.none
  402148:	cmp	w12, #0x10c
  40214c:	b.hi	402160 <yyparse+0xa84>  // b.pmore
  402150:	adrp	x8, 403000 <print_condition+0x174>
  402154:	add	x8, x8, #0xeae
  402158:	ldrb	w1, [x8, w12, uxtw]
  40215c:	b	402164 <yyparse+0xa88>
  402160:	mov	w1, #0x2                   	// #2
  402164:	adrp	x0, 404000 <yytable+0xd>
  402168:	add	x0, x0, #0x132
  40216c:	sub	x2, x29, #0x18
  402170:	bl	4021f0 <yydestruct>
  402174:	cmp	x20, x24
  402178:	b.eq	4021ac <yyparse+0xad0>  // b.none
  40217c:	adrp	x23, 404000 <yytable+0xd>
  402180:	adrp	x22, 404000 <yytable+0xd>
  402184:	add	x23, x23, #0xc3
  402188:	add	x22, x22, #0x150
  40218c:	ldrsh	x8, [x20], #-2
  402190:	mov	x0, x22
  402194:	mov	x2, x19
  402198:	ldrb	w1, [x23, x8]
  40219c:	bl	4021f0 <yydestruct>
  4021a0:	cmp	x24, x20
  4021a4:	sub	x19, x19, #0x8
  4021a8:	b.ne	40218c <yyparse+0xab0>  // b.any
  4021ac:	add	x8, sp, #0x658
  4021b0:	cmp	x24, x8
  4021b4:	b.eq	4021c0 <yyparse+0xae4>  // b.none
  4021b8:	mov	x0, x24
  4021bc:	bl	401500 <free@plt>
  4021c0:	mov	w0, w21
  4021c4:	add	sp, sp, #0x800
  4021c8:	ldp	x20, x19, [sp, #80]
  4021cc:	ldp	x22, x21, [sp, #64]
  4021d0:	ldp	x24, x23, [sp, #48]
  4021d4:	ldp	x26, x25, [sp, #32]
  4021d8:	ldp	x28, x27, [sp, #16]
  4021dc:	ldp	x29, x30, [sp], #96
  4021e0:	ret
  4021e4:	mov	w21, #0x1                   	// #1
  4021e8:	mov	x24, x27
  4021ec:	b	402098 <yyparse+0x9bc>

00000000004021f0 <yydestruct>:
  4021f0:	sub	w8, w1, #0xa
  4021f4:	cmp	w8, #0x14
  4021f8:	b.hi	40222c <yydestruct+0x3c>  // b.pmore
  4021fc:	adrp	x9, 403000 <print_condition+0x174>
  402200:	add	x9, x9, #0xe65
  402204:	adr	x10, 402214 <yydestruct+0x24>
  402208:	ldrb	w11, [x9, x8]
  40220c:	add	x10, x10, x11, lsl #2
  402210:	br	x10
  402214:	ldr	x0, [x2]
  402218:	b	401500 <free@plt>
  40221c:	ldr	x0, [x2]
  402220:	b	4022e0 <cldr_plural_condition_free>
  402224:	ldr	x0, [x2]
  402228:	b	402240 <cldr_plural_range_free>
  40222c:	ret
  402230:	ldr	x0, [x2]
  402234:	b	402340 <cldr_plural_relation_free>
  402238:	ldr	x0, [x2]
  40223c:	b	40227c <cldr_plural_range_list_free>

0000000000402240 <cldr_plural_range_free>:
  402240:	stp	x29, x30, [sp, #-32]!
  402244:	str	x19, [sp, #16]
  402248:	mov	x19, x0
  40224c:	ldp	x8, x0, [x0]
  402250:	mov	x29, sp
  402254:	cmp	x8, x0
  402258:	b.eq	402268 <cldr_plural_range_free+0x28>  // b.none
  40225c:	mov	x0, x8
  402260:	bl	401500 <free@plt>
  402264:	ldr	x0, [x19, #8]
  402268:	bl	401500 <free@plt>
  40226c:	mov	x0, x19
  402270:	ldr	x19, [sp, #16]
  402274:	ldp	x29, x30, [sp], #32
  402278:	b	401500 <free@plt>

000000000040227c <cldr_plural_range_list_free>:
  40227c:	stp	x29, x30, [sp, #-32]!
  402280:	stp	x20, x19, [sp, #16]
  402284:	mov	x19, x0
  402288:	ldp	x0, x9, [x0]
  40228c:	mov	x29, sp
  402290:	b	4022a4 <cldr_plural_range_list_free+0x28>
  402294:	bl	401500 <free@plt>
  402298:	mov	x0, x20
  40229c:	bl	401500 <free@plt>
  4022a0:	ldp	x0, x9, [x19]
  4022a4:	sub	x8, x9, #0x1
  4022a8:	str	x8, [x19, #8]
  4022ac:	cbz	x9, 4022cc <cldr_plural_range_list_free+0x50>
  4022b0:	ldr	x20, [x0, x8, lsl #3]
  4022b4:	ldp	x0, x8, [x20]
  4022b8:	cmp	x0, x8
  4022bc:	b.eq	402294 <cldr_plural_range_list_free+0x18>  // b.none
  4022c0:	bl	401500 <free@plt>
  4022c4:	ldr	x0, [x20, #8]
  4022c8:	b	402294 <cldr_plural_range_list_free+0x18>
  4022cc:	bl	401500 <free@plt>
  4022d0:	mov	x0, x19
  4022d4:	ldp	x20, x19, [sp, #16]
  4022d8:	ldp	x29, x30, [sp], #32
  4022dc:	b	401500 <free@plt>

00000000004022e0 <cldr_plural_condition_free>:
  4022e0:	stp	x29, x30, [sp, #-32]!
  4022e4:	stp	x20, x19, [sp, #16]
  4022e8:	ldr	w8, [x0]
  4022ec:	mov	x19, x0
  4022f0:	mov	x29, sp
  4022f4:	cmp	w8, #0x2
  4022f8:	b.cs	402310 <cldr_plural_condition_free+0x30>  // b.hs, b.nlast
  4022fc:	ldr	x0, [x19, #8]
  402300:	bl	4022e0 <cldr_plural_condition_free>
  402304:	ldr	x0, [x19, #16]
  402308:	bl	4022e0 <cldr_plural_condition_free>
  40230c:	b	402330 <cldr_plural_condition_free+0x50>
  402310:	b.ne	402330 <cldr_plural_condition_free+0x50>  // b.any
  402314:	ldr	x20, [x19, #8]
  402318:	ldr	x0, [x20]
  40231c:	bl	401500 <free@plt>
  402320:	ldr	x0, [x20, #16]
  402324:	bl	40227c <cldr_plural_range_list_free>
  402328:	mov	x0, x20
  40232c:	bl	401500 <free@plt>
  402330:	mov	x0, x19
  402334:	ldp	x20, x19, [sp, #16]
  402338:	ldp	x29, x30, [sp], #32
  40233c:	b	401500 <free@plt>

0000000000402340 <cldr_plural_relation_free>:
  402340:	stp	x29, x30, [sp, #-32]!
  402344:	str	x19, [sp, #16]
  402348:	mov	x19, x0
  40234c:	ldr	x0, [x0]
  402350:	mov	x29, sp
  402354:	bl	401500 <free@plt>
  402358:	ldr	x0, [x19, #16]
  40235c:	bl	40227c <cldr_plural_range_list_free>
  402360:	mov	x0, x19
  402364:	ldr	x19, [sp, #16]
  402368:	ldp	x29, x30, [sp], #32
  40236c:	b	401500 <free@plt>

0000000000402370 <cldr_plural_rule_list_free>:
  402370:	stp	x29, x30, [sp, #-32]!
  402374:	stp	x20, x19, [sp, #16]
  402378:	mov	x19, x0
  40237c:	ldp	x0, x9, [x0]
  402380:	mov	x29, sp
  402384:	sub	x8, x9, #0x1
  402388:	str	x8, [x19, #8]
  40238c:	cbz	x9, 4023b4 <cldr_plural_rule_list_free+0x44>
  402390:	ldr	x20, [x0, x8, lsl #3]
  402394:	ldr	x0, [x20]
  402398:	bl	401500 <free@plt>
  40239c:	ldr	x0, [x20, #8]
  4023a0:	bl	4022e0 <cldr_plural_condition_free>
  4023a4:	mov	x0, x20
  4023a8:	bl	401500 <free@plt>
  4023ac:	ldp	x0, x9, [x19]
  4023b0:	b	402384 <cldr_plural_rule_list_free+0x14>
  4023b4:	bl	401500 <free@plt>
  4023b8:	mov	x0, x19
  4023bc:	ldp	x20, x19, [sp, #16]
  4023c0:	ldp	x29, x30, [sp], #32
  4023c4:	b	401500 <free@plt>

00000000004023c8 <cldr_plural_parse>:
  4023c8:	sub	sp, sp, #0x40
  4023cc:	stp	x29, x30, [sp, #32]
  4023d0:	str	x19, [sp, #48]
  4023d4:	add	x29, sp, #0x20
  4023d8:	mov	x19, x0
  4023dc:	str	x0, [sp, #8]
  4023e0:	bl	4012c0 <strlen@plt>
  4023e4:	add	x8, x19, x0
  4023e8:	mov	w0, #0x18                  	// #24
  4023ec:	str	x8, [sp, #16]
  4023f0:	bl	401400 <xmalloc@plt>
  4023f4:	str	x0, [sp, #24]
  4023f8:	stp	xzr, xzr, [x0, #8]
  4023fc:	str	xzr, [x0]
  402400:	add	x0, sp, #0x8
  402404:	bl	4016dc <yyparse>
  402408:	ldr	x8, [sp, #24]
  40240c:	ldr	x19, [sp, #48]
  402410:	ldp	x29, x30, [sp, #32]
  402414:	cmp	w0, #0x0
  402418:	csel	x0, x8, xzr, eq  // eq = none
  40241c:	add	sp, sp, #0x40
  402420:	ret

0000000000402424 <cldr_plural_rule_list_print>:
  402424:	sub	sp, sp, #0x70
  402428:	stp	x29, x30, [sp, #16]
  40242c:	stp	x28, x27, [sp, #32]
  402430:	stp	x26, x25, [sp, #48]
  402434:	stp	x24, x23, [sp, #64]
  402438:	stp	x22, x21, [sp, #80]
  40243c:	stp	x20, x19, [sp, #96]
  402440:	ldr	x8, [x0, #8]
  402444:	mov	x19, x1
  402448:	add	x29, sp, #0x10
  40244c:	cbz	x8, 40264c <cldr_plural_rule_list_print+0x228>
  402450:	mov	x20, x0
  402454:	mov	x21, xzr
  402458:	ldr	x8, [x20]
  40245c:	ldr	x8, [x8, x21, lsl #3]
  402460:	ldr	x0, [x8, #8]
  402464:	bl	402944 <eval_condition>
  402468:	ldr	x23, [x20, #8]
  40246c:	add	x21, x21, #0x1
  402470:	cmp	x21, x23
  402474:	b.cc	402458 <cldr_plural_rule_list_print+0x34>  // b.lo, b.ul, b.last
  402478:	cbz	x23, 40264c <cldr_plural_rule_list_print+0x228>
  40247c:	ldr	x25, [x20]
  402480:	mov	x24, xzr
  402484:	mov	w26, wzr
  402488:	ldr	x8, [x25, x24, lsl #3]
  40248c:	ldr	x21, [x8, #8]
  402490:	mov	x0, x21
  402494:	bl	402c78 <find_largest_modulus>
  402498:	mov	w22, w0
  40249c:	mov	x0, x21
  4024a0:	bl	402cdc <find_largest_number>
  4024a4:	cmp	w22, w0
  4024a8:	add	x24, x24, #0x1
  4024ac:	ccmp	w22, w26, #0x4, ge  // ge = tcont
  4024b0:	csel	w26, w22, w26, gt
  4024b4:	cmp	x23, x24
  4024b8:	b.ne	402488 <cldr_plural_rule_list_print+0x64>  // b.any
  4024bc:	cmp	w26, #0x1
  4024c0:	b.lt	4025a8 <cldr_plural_rule_list_print+0x184>  // b.tstop
  4024c4:	mov	w22, w26
  4024c8:	mov	x0, x22
  4024cc:	bl	401400 <xmalloc@plt>
  4024d0:	mov	w1, wzr
  4024d4:	mov	x2, x22
  4024d8:	mov	x21, x0
  4024dc:	bl	4013f0 <memset@plt>
  4024e0:	ldr	x26, [x20, #8]
  4024e4:	cbz	x26, 40256c <cldr_plural_rule_list_print+0x148>
  4024e8:	ldr	x8, [x20]
  4024ec:	mov	x25, xzr
  4024f0:	mov	w28, #0x1                   	// #1
  4024f4:	str	x8, [sp, #8]
  4024f8:	ldr	x8, [x8, x25, lsl #3]
  4024fc:	mov	x24, xzr
  402500:	ldr	x23, [x8, #8]
  402504:	b	402514 <cldr_plural_rule_list_print+0xf0>
  402508:	cmp	x22, x27
  40250c:	mov	x24, x27
  402510:	b.eq	402530 <cldr_plural_rule_list_print+0x10c>  // b.none
  402514:	add	x27, x24, #0x1
  402518:	mov	x0, x23
  40251c:	mov	w1, w27
  402520:	bl	402d9c <apply_condition>
  402524:	tbz	w0, #0, 402508 <cldr_plural_rule_list_print+0xe4>
  402528:	strb	w28, [x21, x24]
  40252c:	b	402508 <cldr_plural_rule_list_print+0xe4>
  402530:	mov	x9, x21
  402534:	mov	x8, x22
  402538:	ldrb	w10, [x9]
  40253c:	cbz	w10, 402550 <cldr_plural_rule_list_print+0x12c>
  402540:	subs	x8, x8, #0x1
  402544:	add	x9, x9, #0x1
  402548:	b.ne	402538 <cldr_plural_rule_list_print+0x114>  // b.any
  40254c:	b	402594 <cldr_plural_rule_list_print+0x170>
  402550:	cbz	w8, 402594 <cldr_plural_rule_list_print+0x170>
  402554:	ldr	x8, [sp, #8]
  402558:	add	x25, x25, #0x1
  40255c:	cmp	x25, x26
  402560:	b.ne	4024f8 <cldr_plural_rule_list_print+0xd4>  // b.any
  402564:	mov	x25, x26
  402568:	b	402594 <cldr_plural_rule_list_print+0x170>
  40256c:	mov	x25, xzr
  402570:	b	402594 <cldr_plural_rule_list_print+0x170>
  402574:	ldr	x8, [x20]
  402578:	sub	x9, x23, #0x1
  40257c:	str	x9, [x20, #8]
  402580:	ldr	x21, [x8, x9, lsl #3]
  402584:	ldr	x0, [x21]
  402588:	bl	401500 <free@plt>
  40258c:	ldr	x0, [x21, #8]
  402590:	bl	4022e0 <cldr_plural_condition_free>
  402594:	mov	x0, x21
  402598:	bl	401500 <free@plt>
  40259c:	ldr	x23, [x20, #8]
  4025a0:	cmp	x25, x23
  4025a4:	b.cc	402574 <cldr_plural_rule_list_print+0x150>  // b.lo, b.ul, b.last
  4025a8:	cbz	x23, 40264c <cldr_plural_rule_list_print+0x228>
  4025ac:	ldr	x8, [x20]
  4025b0:	cmp	x23, #0x1
  4025b4:	b.ne	4025c4 <cldr_plural_rule_list_print+0x1a0>  // b.any
  4025b8:	mov	x9, xzr
  4025bc:	mov	w21, #0x1                   	// #1
  4025c0:	b	40261c <cldr_plural_rule_list_print+0x1f8>
  4025c4:	and	x9, x23, #0xfffffffffffffffe
  4025c8:	mov	x10, xzr
  4025cc:	add	x12, x8, #0x8
  4025d0:	mov	w11, #0x1                   	// #1
  4025d4:	mov	x13, x9
  4025d8:	ldp	x14, x15, [x12, #-8]
  4025dc:	add	x12, x12, #0x10
  4025e0:	ldr	x14, [x14, #8]
  4025e4:	ldr	x15, [x15, #8]
  4025e8:	ldr	w14, [x14]
  4025ec:	ldr	w15, [x15]
  4025f0:	sub	w14, w14, #0x3
  4025f4:	sub	w15, w15, #0x3
  4025f8:	cmp	w14, #0x1
  4025fc:	cinc	x11, x11, hi  // hi = pmore
  402600:	cmp	w15, #0x1
  402604:	cinc	x10, x10, hi  // hi = pmore
  402608:	subs	x13, x13, #0x2
  40260c:	b.ne	4025d8 <cldr_plural_rule_list_print+0x1b4>  // b.any
  402610:	cmp	x23, x9
  402614:	add	x21, x10, x11
  402618:	b.eq	402644 <cldr_plural_rule_list_print+0x220>  // b.none
  40261c:	sub	x10, x23, x9
  402620:	add	x9, x8, x9, lsl #3
  402624:	ldr	x11, [x9], #8
  402628:	ldr	x11, [x11, #8]
  40262c:	ldr	w11, [x11]
  402630:	sub	w11, w11, #0x3
  402634:	cmp	w11, #0x1
  402638:	cinc	x21, x21, hi  // hi = pmore
  40263c:	subs	x10, x10, #0x1
  402640:	b.ne	402624 <cldr_plural_rule_list_print+0x200>  // b.any
  402644:	cmp	x21, #0x1
  402648:	b.ne	402680 <cldr_plural_rule_list_print+0x25c>  // b.any
  40264c:	adrp	x0, 404000 <yytable+0xd>
  402650:	add	x0, x0, #0x181
  402654:	mov	w1, #0x16                  	// #22
  402658:	mov	x3, x19
  40265c:	ldp	x20, x19, [sp, #96]
  402660:	ldp	x22, x21, [sp, #80]
  402664:	ldp	x24, x23, [sp, #64]
  402668:	ldp	x26, x25, [sp, #48]
  40266c:	ldp	x28, x27, [sp, #32]
  402670:	ldp	x29, x30, [sp, #16]
  402674:	mov	w2, #0x1                   	// #1
  402678:	add	sp, sp, #0x70
  40267c:	b	401510 <fwrite@plt>
  402680:	cmp	x21, #0x2
  402684:	b.ne	4026d4 <cldr_plural_rule_list_print+0x2b0>  // b.any
  402688:	mov	x10, x8
  40268c:	mov	x11, x23
  402690:	ldr	x9, [x10]
  402694:	ldr	x9, [x9, #8]
  402698:	ldr	w12, [x9]
  40269c:	sub	w13, w12, #0x3
  4026a0:	cmp	w13, #0x1
  4026a4:	b.hi	4026c0 <cldr_plural_rule_list_print+0x29c>  // b.pmore
  4026a8:	subs	x11, x11, #0x1
  4026ac:	add	x10, x10, #0x8
  4026b0:	b.ne	402690 <cldr_plural_rule_list_print+0x26c>  // b.any
  4026b4:	ldr	x8, [x8, x23, lsl #3]
  4026b8:	ldr	x9, [x8, #8]
  4026bc:	ldr	w12, [x9]
  4026c0:	cmp	w12, #0x2
  4026c4:	b.ne	4026d4 <cldr_plural_rule_list_print+0x2b0>  // b.any
  4026c8:	ldr	x8, [x9, #8]
  4026cc:	ldr	w9, [x8, #8]
  4026d0:	cbz	w9, 40286c <cldr_plural_rule_list_print+0x448>
  4026d4:	adrp	x1, 404000 <yytable+0xd>
  4026d8:	add	x1, x1, #0x198
  4026dc:	mov	x0, x19
  4026e0:	mov	x2, x21
  4026e4:	bl	4015b0 <fprintf@plt>
  4026e8:	ldr	x8, [x20, #8]
  4026ec:	cbz	x8, 40285c <cldr_plural_rule_list_print+0x438>
  4026f0:	adrp	x23, 404000 <yytable+0xd>
  4026f4:	mov	x24, xzr
  4026f8:	mov	x22, xzr
  4026fc:	mov	x25, #0xffffffffffffffff    	// #-1
  402700:	mov	w26, #0x2                   	// #2
  402704:	add	x23, x23, #0x1af
  402708:	b	402724 <cldr_plural_rule_list_print+0x300>
  40270c:	ldr	x8, [x20, #8]
  402710:	add	x24, x24, #0x1
  402714:	add	x26, x26, #0x1
  402718:	cmp	x24, x8
  40271c:	sub	x25, x25, #0x1
  402720:	b.cs	40283c <cldr_plural_rule_list_print+0x418>  // b.hs, b.nlast
  402724:	ldr	x8, [x20]
  402728:	cmp	x21, #0x2
  40272c:	cset	w2, eq  // eq = none
  402730:	mov	w1, #0x4                   	// #4
  402734:	ldr	x8, [x8, x24, lsl #3]
  402738:	mov	x3, x19
  40273c:	ldr	x0, [x8, #8]
  402740:	bl	402e8c <print_condition>
  402744:	tbz	w0, #0, 40270c <cldr_plural_rule_list_print+0x2e8>
  402748:	ldr	x8, [x20, #8]
  40274c:	cmp	x8, #0x2
  402750:	b.cc	402710 <cldr_plural_rule_list_print+0x2ec>  // b.lo, b.ul, b.last
  402754:	add	x9, x24, #0x1
  402758:	cmp	x9, x8
  40275c:	b.cs	40270c <cldr_plural_rule_list_print+0x2e8>  // b.hs, b.nlast
  402760:	ldr	x10, [x20]
  402764:	mvn	x11, x24
  402768:	add	x11, x8, x11
  40276c:	cmp	x11, #0x2
  402770:	b.cs	40277c <cldr_plural_rule_list_print+0x358>  // b.hs, b.nlast
  402774:	mov	w11, wzr
  402778:	b	4027e4 <cldr_plural_rule_list_print+0x3c0>
  40277c:	and	x14, x11, #0xfffffffffffffffe
  402780:	add	x16, x8, x25
  402784:	mov	w12, wzr
  402788:	mov	w13, wzr
  40278c:	add	x15, x10, x26, lsl #3
  402790:	add	x9, x9, x14
  402794:	and	x16, x16, #0xfffffffffffffffe
  402798:	ldp	x17, x18, [x15, #-8]
  40279c:	add	x15, x15, #0x10
  4027a0:	ldr	x17, [x17, #8]
  4027a4:	ldr	x18, [x18, #8]
  4027a8:	ldr	w17, [x17]
  4027ac:	ldr	w18, [x18]
  4027b0:	sub	w17, w17, #0x3
  4027b4:	sub	w18, w18, #0x3
  4027b8:	cmp	w17, #0x1
  4027bc:	cset	w17, hi  // hi = pmore
  4027c0:	cmp	w18, #0x1
  4027c4:	cset	w18, hi  // hi = pmore
  4027c8:	orr	w12, w12, w17
  4027cc:	subs	x16, x16, #0x2
  4027d0:	orr	w13, w13, w18
  4027d4:	b.ne	402798 <cldr_plural_rule_list_print+0x374>  // b.any
  4027d8:	cmp	x11, x14
  4027dc:	orr	w11, w13, w12
  4027e0:	b.eq	402810 <cldr_plural_rule_list_print+0x3ec>  // b.none
  4027e4:	sub	x12, x8, x9
  4027e8:	add	x9, x10, x9, lsl #3
  4027ec:	ldr	x10, [x9], #8
  4027f0:	ldr	x10, [x10, #8]
  4027f4:	ldr	w10, [x10]
  4027f8:	sub	w10, w10, #0x3
  4027fc:	cmp	w10, #0x1
  402800:	cset	w10, hi  // hi = pmore
  402804:	subs	x12, x12, #0x1
  402808:	orr	w11, w11, w10
  40280c:	b.ne	4027ec <cldr_plural_rule_list_print+0x3c8>  // b.any
  402810:	sub	x8, x8, #0x1
  402814:	cmp	x24, x8
  402818:	b.cs	40270c <cldr_plural_rule_list_print+0x2e8>  // b.hs, b.nlast
  40281c:	tbz	w11, #0, 40270c <cldr_plural_rule_list_print+0x2e8>
  402820:	mov	x0, x19
  402824:	mov	x1, x23
  402828:	mov	x2, x22
  40282c:	add	x27, x22, #0x1
  402830:	bl	4015b0 <fprintf@plt>
  402834:	mov	x22, x27
  402838:	b	40270c <cldr_plural_rule_list_print+0x2e8>
  40283c:	cmp	x8, #0x2
  402840:	b.cc	40285c <cldr_plural_rule_list_print+0x438>  // b.lo, b.ul, b.last
  402844:	adrp	x1, 404000 <yytable+0xd>
  402848:	add	x3, x22, #0x1
  40284c:	add	x1, x1, #0x1b9
  402850:	mov	x0, x19
  402854:	mov	x2, x22
  402858:	bl	4015b0 <fprintf@plt>
  40285c:	adrp	x0, 404000 <yytable+0xd>
  402860:	add	x0, x0, #0x1e1
  402864:	mov	w1, #0x3                   	// #3
  402868:	b	402658 <cldr_plural_rule_list_print+0x234>
  40286c:	ldr	x9, [x8, #16]
  402870:	ldr	x10, [x9, #8]
  402874:	cmp	x10, #0x1
  402878:	b.ne	402890 <cldr_plural_rule_list_print+0x46c>  // b.any
  40287c:	ldr	x9, [x9]
  402880:	ldr	x10, [x9]
  402884:	ldp	x9, x10, [x10]
  402888:	cmp	x9, x10
  40288c:	b.eq	402914 <cldr_plural_rule_list_print+0x4f0>  // b.none
  402890:	ldr	x8, [x8, #16]
  402894:	ldr	x10, [x8, #8]
  402898:	cbz	x10, 4028f0 <cldr_plural_rule_list_print+0x4cc>
  40289c:	ldr	x11, [x8]
  4028a0:	mov	x9, xzr
  4028a4:	mov	w12, #0xffffffff            	// #-1
  4028a8:	ldr	x13, [x11, x9, lsl #3]
  4028ac:	ldr	x14, [x13]
  4028b0:	ldr	w15, [x14]
  4028b4:	cbnz	w15, 4028e4 <cldr_plural_rule_list_print+0x4c0>
  4028b8:	ldr	x13, [x13, #8]
  4028bc:	ldr	w15, [x13]
  4028c0:	cbnz	w15, 4028e4 <cldr_plural_rule_list_print+0x4c0>
  4028c4:	ldr	w14, [x14, #8]
  4028c8:	add	w12, w12, #0x1
  4028cc:	cmp	w14, w12
  4028d0:	b.ne	4028e4 <cldr_plural_rule_list_print+0x4c0>  // b.any
  4028d4:	ldr	w12, [x13, #8]
  4028d8:	add	x9, x9, #0x1
  4028dc:	cmp	x9, x10
  4028e0:	b.cc	4028a8 <cldr_plural_rule_list_print+0x484>  // b.lo, b.ul, b.last
  4028e4:	cmp	x9, x10
  4028e8:	b.ne	4026d4 <cldr_plural_rule_list_print+0x2b0>  // b.any
  4028ec:	b	4028f4 <cldr_plural_rule_list_print+0x4d0>
  4028f0:	mov	x9, xzr
  4028f4:	ldr	x8, [x8]
  4028f8:	adrp	x1, 404000 <yytable+0xd>
  4028fc:	add	x1, x1, #0x1e5
  402900:	add	x8, x8, x9, lsl #3
  402904:	ldur	x8, [x8, #-8]
  402908:	ldr	x8, [x8, #8]
  40290c:	ldr	w2, [x8, #8]
  402910:	b	402920 <cldr_plural_rule_list_print+0x4fc>
  402914:	ldr	w2, [x9, #8]
  402918:	adrp	x1, 404000 <yytable+0xd>
  40291c:	add	x1, x1, #0x1c6
  402920:	mov	x0, x19
  402924:	ldp	x20, x19, [sp, #96]
  402928:	ldp	x22, x21, [sp, #80]
  40292c:	ldp	x24, x23, [sp, #64]
  402930:	ldp	x26, x25, [sp, #48]
  402934:	ldp	x28, x27, [sp, #32]
  402938:	ldp	x29, x30, [sp, #16]
  40293c:	add	sp, sp, #0x70
  402940:	b	4015b0 <fprintf@plt>

0000000000402944 <eval_condition>:
  402944:	stp	x29, x30, [sp, #-48]!
  402948:	stp	x22, x21, [sp, #16]
  40294c:	stp	x20, x19, [sp, #32]
  402950:	ldr	w8, [x0]
  402954:	mov	x19, x0
  402958:	mov	x29, sp
  40295c:	cmp	w8, #0x1
  402960:	b.eq	4029c0 <eval_condition+0x7c>  // b.none
  402964:	cbnz	w8, 402a10 <eval_condition+0xcc>
  402968:	mov	x22, x19
  40296c:	ldr	x0, [x22, #8]!
  402970:	bl	402944 <eval_condition>
  402974:	ldr	x0, [x22, #8]
  402978:	bl	402944 <eval_condition>
  40297c:	ldr	x20, [x22]
  402980:	ldr	w8, [x20]
  402984:	cmp	w8, #0x4
  402988:	b.eq	402bec <eval_condition+0x2a8>  // b.none
  40298c:	ldr	x21, [x19, #16]
  402990:	ldr	w9, [x21]
  402994:	cmp	w9, #0x4
  402998:	b.eq	402bec <eval_condition+0x2a8>  // b.none
  40299c:	cmp	w8, #0x3
  4029a0:	b.ne	4029ac <eval_condition+0x68>  // b.any
  4029a4:	cmp	w9, #0x3
  4029a8:	b.eq	4029f4 <eval_condition+0xb0>  // b.none
  4029ac:	cmp	w8, #0x3
  4029b0:	b.eq	402c2c <eval_condition+0x2e8>  // b.none
  4029b4:	cmp	w9, #0x3
  4029b8:	b.ne	402c14 <eval_condition+0x2d0>  // b.any
  4029bc:	b	402c48 <eval_condition+0x304>
  4029c0:	mov	x22, x19
  4029c4:	ldr	x0, [x22, #8]!
  4029c8:	bl	402944 <eval_condition>
  4029cc:	ldr	x0, [x22, #8]
  4029d0:	bl	402944 <eval_condition>
  4029d4:	ldr	x20, [x22]
  4029d8:	ldr	w8, [x20]
  4029dc:	cmp	w8, #0x3
  4029e0:	b.eq	4029f4 <eval_condition+0xb0>  // b.none
  4029e4:	ldr	x21, [x19, #16]
  4029e8:	ldr	w9, [x21]
  4029ec:	cmp	w9, #0x3
  4029f0:	b.ne	402bdc <eval_condition+0x298>  // b.any
  4029f4:	mov	x0, x20
  4029f8:	bl	4022e0 <cldr_plural_condition_free>
  4029fc:	ldr	x0, [x19, #16]
  402a00:	bl	4022e0 <cldr_plural_condition_free>
  402a04:	mov	w8, #0x3                   	// #3
  402a08:	str	w8, [x19]
  402a0c:	b	402c14 <eval_condition+0x2d0>
  402a10:	ldr	x20, [x19, #8]
  402a14:	ldr	x0, [x20]
  402a18:	ldr	w8, [x0]
  402a1c:	sub	w8, w8, #0x66
  402a20:	cmp	w8, #0x11
  402a24:	b.hi	402c14 <eval_condition+0x2d0>  // b.pmore
  402a28:	mov	w9, #0x1                   	// #1
  402a2c:	lsl	w8, w9, w8
  402a30:	mov	w9, #0x4001                	// #16385
  402a34:	movk	w9, #0x3, lsl #16
  402a38:	tst	w8, w9
  402a3c:	b.eq	402b2c <eval_condition+0x1e8>  // b.none
  402a40:	ldr	x10, [x20, #16]
  402a44:	ldr	x8, [x10, #8]
  402a48:	cbz	x8, 402bbc <eval_condition+0x278>
  402a4c:	ldr	w9, [x20, #8]
  402a50:	ldr	x10, [x10]
  402a54:	b	402a70 <eval_condition+0x12c>
  402a58:	ldr	d0, [x11, #8]
  402a5c:	fcmp	d0, #0.0
  402a60:	b.ne	402b24 <eval_condition+0x1e0>  // b.any
  402a64:	subs	x8, x8, #0x1
  402a68:	add	x10, x10, #0x8
  402a6c:	b.eq	402bbc <eval_condition+0x278>  // b.none
  402a70:	ldr	x11, [x10]
  402a74:	cmp	w9, #0x1
  402a78:	b.eq	402aa0 <eval_condition+0x15c>  // b.none
  402a7c:	cbnz	w9, 402a64 <eval_condition+0x120>
  402a80:	ldr	x12, [x11]
  402a84:	ldr	w13, [x12]
  402a88:	cmp	w13, #0x1
  402a8c:	b.eq	402ac0 <eval_condition+0x17c>  // b.none
  402a90:	cbnz	w13, 402b24 <eval_condition+0x1e0>
  402a94:	ldr	w12, [x12, #8]
  402a98:	cbz	w12, 402acc <eval_condition+0x188>
  402a9c:	b	402b24 <eval_condition+0x1e0>
  402aa0:	ldr	x12, [x11]
  402aa4:	ldr	w13, [x12]
  402aa8:	cmp	w13, #0x1
  402aac:	b.eq	402aec <eval_condition+0x1a8>  // b.none
  402ab0:	cbnz	w13, 402af8 <eval_condition+0x1b4>
  402ab4:	ldr	w12, [x12, #8]
  402ab8:	cbnz	w12, 402af8 <eval_condition+0x1b4>
  402abc:	b	402b24 <eval_condition+0x1e0>
  402ac0:	ldr	d0, [x12, #8]
  402ac4:	fcmp	d0, #0.0
  402ac8:	b.ne	402b24 <eval_condition+0x1e0>  // b.any
  402acc:	ldr	x11, [x11, #8]
  402ad0:	ldr	w12, [x11]
  402ad4:	cmp	w12, #0x1
  402ad8:	b.eq	402a58 <eval_condition+0x114>  // b.none
  402adc:	cbnz	w12, 402b24 <eval_condition+0x1e0>
  402ae0:	ldr	w11, [x11, #8]
  402ae4:	cbz	w11, 402a64 <eval_condition+0x120>
  402ae8:	b	402b24 <eval_condition+0x1e0>
  402aec:	ldr	d0, [x12, #8]
  402af0:	fcmp	d0, #0.0
  402af4:	b.eq	402b24 <eval_condition+0x1e0>  // b.none
  402af8:	ldr	x11, [x11, #8]
  402afc:	ldr	w12, [x11]
  402b00:	cmp	w12, #0x1
  402b04:	b.eq	402b18 <eval_condition+0x1d4>  // b.none
  402b08:	cbnz	w12, 402a64 <eval_condition+0x120>
  402b0c:	ldr	w11, [x11, #8]
  402b10:	cbnz	w11, 402a64 <eval_condition+0x120>
  402b14:	b	402b24 <eval_condition+0x1e0>
  402b18:	ldr	d0, [x11, #8]
  402b1c:	fcmp	d0, #0.0
  402b20:	b.ne	402a64 <eval_condition+0x120>  // b.any
  402b24:	mov	w21, #0x4                   	// #4
  402b28:	b	402bc0 <eval_condition+0x27c>
  402b2c:	mov	w9, #0x108                 	// #264
  402b30:	tst	w8, w9
  402b34:	b.eq	402c14 <eval_condition+0x2d0>  // b.none
  402b38:	ldr	x9, [x20, #16]
  402b3c:	ldr	x8, [x9, #8]
  402b40:	cbz	x8, 402c0c <eval_condition+0x2c8>
  402b44:	mov	x8, xzr
  402b48:	b	402b60 <eval_condition+0x21c>
  402b4c:	ldr	x9, [x20, #16]
  402b50:	add	x8, x8, #0x1
  402b54:	ldr	x10, [x9, #8]
  402b58:	cmp	x8, x10
  402b5c:	b.cs	402c08 <eval_condition+0x2c4>  // b.hs, b.nlast
  402b60:	ldr	x9, [x9]
  402b64:	ldr	x9, [x9, x8, lsl #3]
  402b68:	ldr	x10, [x9]
  402b6c:	ldr	w11, [x10]
  402b70:	cmp	w11, #0x1
  402b74:	b.ne	402b98 <eval_condition+0x254>  // b.any
  402b78:	ldr	d0, [x10, #8]
  402b7c:	str	wzr, [x10]
  402b80:	fcvtzs	w11, d0
  402b84:	scvtf	d1, w11
  402b88:	fcmp	d0, d1
  402b8c:	cset	w12, ne  // ne = any
  402b90:	add	w11, w12, w11
  402b94:	str	w11, [x10, #8]
  402b98:	ldr	x9, [x9, #8]
  402b9c:	ldr	w10, [x9]
  402ba0:	cmp	w10, #0x1
  402ba4:	b.ne	402b4c <eval_condition+0x208>  // b.any
  402ba8:	ldr	d0, [x9, #8]
  402bac:	str	wzr, [x9]
  402bb0:	fcvtzs	w10, d0
  402bb4:	str	w10, [x9, #8]
  402bb8:	b	402b4c <eval_condition+0x208>
  402bbc:	mov	w21, #0x3                   	// #3
  402bc0:	bl	401500 <free@plt>
  402bc4:	ldr	x0, [x20, #16]
  402bc8:	bl	40227c <cldr_plural_range_list_free>
  402bcc:	mov	x0, x20
  402bd0:	bl	401500 <free@plt>
  402bd4:	str	w21, [x19]
  402bd8:	b	402c14 <eval_condition+0x2d0>
  402bdc:	cmp	w8, #0x4
  402be0:	b.ne	402c24 <eval_condition+0x2e0>  // b.any
  402be4:	cmp	w9, #0x4
  402be8:	b.ne	402c24 <eval_condition+0x2e0>  // b.any
  402bec:	mov	x0, x20
  402bf0:	bl	4022e0 <cldr_plural_condition_free>
  402bf4:	ldr	x0, [x19, #16]
  402bf8:	bl	4022e0 <cldr_plural_condition_free>
  402bfc:	mov	w8, #0x4                   	// #4
  402c00:	str	w8, [x19]
  402c04:	b	402c14 <eval_condition+0x2d0>
  402c08:	ldr	x0, [x20]
  402c0c:	mov	w8, #0x69                  	// #105
  402c10:	str	w8, [x0]
  402c14:	ldp	x20, x19, [sp, #32]
  402c18:	ldp	x22, x21, [sp, #16]
  402c1c:	ldp	x29, x30, [sp], #48
  402c20:	ret
  402c24:	cmp	w8, #0x4
  402c28:	b.ne	402c40 <eval_condition+0x2fc>  // b.any
  402c2c:	mov	x0, x20
  402c30:	bl	4022e0 <cldr_plural_condition_free>
  402c34:	ldr	x8, [x19, #16]
  402c38:	mov	x0, x21
  402c3c:	b	402c58 <eval_condition+0x314>
  402c40:	cmp	w9, #0x4
  402c44:	b.ne	402c14 <eval_condition+0x2d0>  // b.any
  402c48:	mov	x0, x21
  402c4c:	bl	4022e0 <cldr_plural_condition_free>
  402c50:	ldr	x8, [x19, #8]
  402c54:	mov	x0, x20
  402c58:	ldr	w9, [x8]
  402c5c:	str	w9, [x19]
  402c60:	ldur	q0, [x8, #8]
  402c64:	str	q0, [x22]
  402c68:	ldp	x20, x19, [sp, #32]
  402c6c:	ldp	x22, x21, [sp, #16]
  402c70:	ldp	x29, x30, [sp], #48
  402c74:	b	401500 <free@plt>

0000000000402c78 <find_largest_modulus>:
  402c78:	stp	x29, x30, [sp, #-32]!
  402c7c:	ldr	w8, [x0]
  402c80:	str	x19, [sp, #16]
  402c84:	mov	x19, x0
  402c88:	mov	x29, sp
  402c8c:	cmp	w8, #0x2
  402c90:	b.cs	402cb8 <find_largest_modulus+0x40>  // b.hs, b.nlast
  402c94:	ldr	x0, [x19, #8]
  402c98:	bl	402c78 <find_largest_modulus>
  402c9c:	ldr	x8, [x19, #16]
  402ca0:	mov	w19, w0
  402ca4:	mov	x0, x8
  402ca8:	bl	402c78 <find_largest_modulus>
  402cac:	cmp	w19, w0
  402cb0:	csel	w0, w19, w0, gt
  402cb4:	b	402cd0 <find_largest_modulus+0x58>
  402cb8:	b.ne	402ccc <find_largest_modulus+0x54>  // b.any
  402cbc:	ldr	x8, [x19, #8]
  402cc0:	ldr	x8, [x8]
  402cc4:	ldr	w0, [x8, #4]
  402cc8:	b	402cd0 <find_largest_modulus+0x58>
  402ccc:	mov	w0, wzr
  402cd0:	ldr	x19, [sp, #16]
  402cd4:	ldp	x29, x30, [sp], #32
  402cd8:	ret

0000000000402cdc <find_largest_number>:
  402cdc:	stp	x29, x30, [sp, #-32]!
  402ce0:	ldr	w8, [x0]
  402ce4:	str	x19, [sp, #16]
  402ce8:	mov	x19, x0
  402cec:	mov	x29, sp
  402cf0:	cmp	w8, #0x2
  402cf4:	b.cs	402d1c <find_largest_number+0x40>  // b.hs, b.nlast
  402cf8:	ldr	x0, [x19, #8]
  402cfc:	bl	402cdc <find_largest_number>
  402d00:	ldr	x8, [x19, #16]
  402d04:	mov	w19, w0
  402d08:	mov	x0, x8
  402d0c:	bl	402cdc <find_largest_number>
  402d10:	cmp	w19, w0
  402d14:	csel	w0, w19, w0, gt
  402d18:	b	402d90 <find_largest_number+0xb4>
  402d1c:	b.ne	402d8c <find_largest_number+0xb0>  // b.any
  402d20:	ldr	x8, [x19, #8]
  402d24:	ldr	x10, [x8, #16]
  402d28:	ldr	x8, [x10, #8]
  402d2c:	cbz	x8, 402d8c <find_largest_number+0xb0>
  402d30:	ldr	x10, [x10]
  402d34:	mov	x9, xzr
  402d38:	mov	w0, wzr
  402d3c:	b	402d4c <find_largest_number+0x70>
  402d40:	add	x9, x9, #0x1
  402d44:	cmp	x9, x8
  402d48:	b.cs	402d90 <find_largest_number+0xb4>  // b.hs, b.nlast
  402d4c:	ldr	x11, [x10, x9, lsl #3]
  402d50:	ldr	x11, [x11, #8]
  402d54:	ldr	w12, [x11]
  402d58:	cmp	w12, #0x1
  402d5c:	b.eq	402d74 <find_largest_number+0x98>  // b.none
  402d60:	cbnz	w12, 402d40 <find_largest_number+0x64>
  402d64:	ldr	w11, [x11, #8]
  402d68:	cmp	w11, w0
  402d6c:	csel	w0, w11, w0, gt
  402d70:	b	402d40 <find_largest_number+0x64>
  402d74:	ldr	d0, [x11, #8]
  402d78:	scvtf	d1, w0
  402d7c:	fcmp	d0, d1
  402d80:	b.le	402d40 <find_largest_number+0x64>
  402d84:	fcvtzs	w0, d0
  402d88:	b	402d40 <find_largest_number+0x64>
  402d8c:	mov	w0, wzr
  402d90:	ldr	x19, [sp, #16]
  402d94:	ldp	x29, x30, [sp], #32
  402d98:	ret

0000000000402d9c <apply_condition>:
  402d9c:	stp	x29, x30, [sp, #-32]!
  402da0:	stp	x20, x19, [sp, #16]
  402da4:	mov	w19, w1
  402da8:	mov	x20, x0
  402dac:	mov	x29, sp
  402db0:	b	402dc8 <apply_condition+0x2c>
  402db4:	ldr	x0, [x20, #8]
  402db8:	mov	w1, w19
  402dbc:	bl	402d9c <apply_condition>
  402dc0:	tbz	w0, #0, 402e6c <apply_condition+0xd0>
  402dc4:	ldr	x20, [x20, #16]
  402dc8:	ldr	w8, [x20]
  402dcc:	cbz	w8, 402db4 <apply_condition+0x18>
  402dd0:	cmp	w8, #0x1
  402dd4:	b.ne	402df0 <apply_condition+0x54>  // b.any
  402dd8:	ldr	x0, [x20, #8]
  402ddc:	mov	w1, w19
  402de0:	bl	402d9c <apply_condition>
  402de4:	tbz	w0, #0, 402dc4 <apply_condition+0x28>
  402de8:	mov	w0, #0x1                   	// #1
  402dec:	b	402e80 <apply_condition+0xe4>
  402df0:	cmp	w8, #0x2
  402df4:	b.ne	402e6c <apply_condition+0xd0>  // b.any
  402df8:	ldr	x8, [x20, #8]
  402dfc:	ldr	x9, [x8]
  402e00:	ldr	w9, [x9, #4]
  402e04:	cmp	w9, #0x1
  402e08:	b.lt	402e14 <apply_condition+0x78>  // b.tstop
  402e0c:	sdiv	w10, w19, w9
  402e10:	msub	w19, w10, w9, w19
  402e14:	ldr	x10, [x8, #16]
  402e18:	ldr	x9, [x10, #8]
  402e1c:	cbz	x9, 402e74 <apply_condition+0xd8>
  402e20:	ldr	x10, [x10]
  402e24:	mov	x11, xzr
  402e28:	b	402e38 <apply_condition+0x9c>
  402e2c:	add	x11, x11, #0x1
  402e30:	cmp	x11, x9
  402e34:	b.cs	402e74 <apply_condition+0xd8>  // b.hs, b.nlast
  402e38:	ldr	x12, [x10, x11, lsl #3]
  402e3c:	ldr	x13, [x12]
  402e40:	ldr	w13, [x13, #8]
  402e44:	cmp	w13, w19
  402e48:	b.gt	402e2c <apply_condition+0x90>
  402e4c:	ldr	x12, [x12, #8]
  402e50:	ldr	w12, [x12, #8]
  402e54:	cmp	w19, w12
  402e58:	b.gt	402e2c <apply_condition+0x90>
  402e5c:	ldr	w8, [x8, #8]
  402e60:	cmp	w8, #0x0
  402e64:	cset	w0, eq  // eq = none
  402e68:	b	402e80 <apply_condition+0xe4>
  402e6c:	mov	w0, wzr
  402e70:	b	402e80 <apply_condition+0xe4>
  402e74:	ldr	w8, [x8, #8]
  402e78:	cmp	w8, #0x0
  402e7c:	cset	w0, ne  // ne = any
  402e80:	ldp	x20, x19, [sp, #16]
  402e84:	ldp	x29, x30, [sp], #32
  402e88:	ret

0000000000402e8c <print_condition>:
  402e8c:	stp	x29, x30, [sp, #-96]!
  402e90:	stp	x28, x27, [sp, #16]
  402e94:	stp	x26, x25, [sp, #32]
  402e98:	stp	x24, x23, [sp, #48]
  402e9c:	stp	x22, x21, [sp, #64]
  402ea0:	stp	x20, x19, [sp, #80]
  402ea4:	ldr	w8, [x0]
  402ea8:	mov	x19, x3
  402eac:	mov	x22, x0
  402eb0:	mov	w20, w1
  402eb4:	cmp	w8, #0x2
  402eb8:	mov	x29, sp
  402ebc:	b.eq	402f18 <print_condition+0x8c>  // b.none
  402ec0:	cmp	w8, #0x1
  402ec4:	b.eq	403150 <print_condition+0x2c4>  // b.none
  402ec8:	cbnz	w8, 40318c <print_condition+0x300>
  402ecc:	cmp	w20, #0x1
  402ed0:	b.ne	403194 <print_condition+0x308>  // b.any
  402ed4:	mov	w0, #0x28                  	// #40
  402ed8:	mov	x1, x19
  402edc:	bl	401340 <fputc@plt>
  402ee0:	ldr	x0, [x22, #8]
  402ee4:	mov	w1, wzr
  402ee8:	mov	w2, wzr
  402eec:	mov	x3, x19
  402ef0:	bl	402e8c <print_condition>
  402ef4:	adrp	x0, 404000 <yytable+0xd>
  402ef8:	add	x0, x0, #0x203
  402efc:	mov	w1, #0x4                   	// #4
  402f00:	mov	w2, #0x1                   	// #1
  402f04:	mov	x3, x19
  402f08:	bl	401510 <fwrite@plt>
  402f0c:	ldr	x0, [x22, #16]
  402f10:	mov	w1, wzr
  402f14:	b	403454 <print_condition+0x5c8>
  402f18:	ldr	x28, [x22, #8]
  402f1c:	mov	w21, w2
  402f20:	ldr	w8, [x28, #8]
  402f24:	cbz	w8, 4031e8 <print_condition+0x35c>
  402f28:	cmp	w20, #0x1
  402f2c:	b.ne	402f4c <print_condition+0xc0>  // b.any
  402f30:	ldr	x8, [x28, #16]
  402f34:	ldr	x8, [x8, #8]
  402f38:	cmp	x8, #0x2
  402f3c:	b.cc	402f4c <print_condition+0xc0>  // b.lo, b.ul, b.last
  402f40:	mov	w0, #0x28                  	// #40
  402f44:	mov	x1, x19
  402f48:	bl	401340 <fputc@plt>
  402f4c:	ldr	x8, [x28, #16]
  402f50:	ldr	x9, [x8, #8]
  402f54:	cbz	x9, 403480 <print_condition+0x5f4>
  402f58:	adrp	x22, 404000 <yytable+0xd>
  402f5c:	adrp	x9, 404000 <yytable+0xd>
  402f60:	add	x22, x22, #0x23f
  402f64:	add	x9, x9, #0x237
  402f68:	tst	w21, #0x1
  402f6c:	adrp	x25, 404000 <yytable+0xd>
  402f70:	adrp	x27, 404000 <yytable+0xd>
  402f74:	mov	x24, xzr
  402f78:	add	x25, x25, #0x22a
  402f7c:	csel	x26, x9, x22, ne  // ne = any
  402f80:	add	x27, x27, #0x203
  402f84:	b	402fa8 <print_condition+0x11c>
  402f88:	mov	w0, #0x29                  	// #41
  402f8c:	mov	x1, x19
  402f90:	bl	401340 <fputc@plt>
  402f94:	ldr	x8, [x28, #16]
  402f98:	add	x24, x24, #0x1
  402f9c:	ldr	x9, [x8, #8]
  402fa0:	cmp	x24, x9
  402fa4:	b.cs	4031d8 <print_condition+0x34c>  // b.hs, b.nlast
  402fa8:	ldr	x8, [x8]
  402fac:	ldr	x23, [x8, x24, lsl #3]
  402fb0:	cbz	x24, 402fc8 <print_condition+0x13c>
  402fb4:	mov	w1, #0x4                   	// #4
  402fb8:	mov	w2, #0x1                   	// #1
  402fbc:	mov	x0, x27
  402fc0:	mov	x3, x19
  402fc4:	bl	401510 <fwrite@plt>
  402fc8:	ldp	x8, x9, [x23]
  402fcc:	ldr	w8, [x8, #8]
  402fd0:	ldr	w9, [x9, #8]
  402fd4:	cmp	w8, w9
  402fd8:	b.ne	403020 <print_condition+0x194>  // b.any
  402fdc:	ldr	x8, [x28]
  402fe0:	ldr	w2, [x8, #4]
  402fe4:	cbz	w2, 403060 <print_condition+0x1d4>
  402fe8:	mov	x0, x19
  402fec:	mov	x1, x26
  402ff0:	bl	4015b0 <fprintf@plt>
  402ff4:	mov	x1, x25
  402ff8:	tbz	w21, #0, 403014 <print_condition+0x188>
  402ffc:	ldr	x8, [x28, #16]
  403000:	ldr	x8, [x8, #8]
  403004:	cmp	x8, #0x1
  403008:	adrp	x8, 404000 <yytable+0xd>
  40300c:	add	x8, x8, #0x223
  403010:	csel	x1, x8, x25, eq  // eq = none
  403014:	ldr	x8, [x23]
  403018:	mov	x0, x19
  40301c:	b	403144 <print_condition+0x2b8>
  403020:	cbz	w8, 403078 <print_condition+0x1ec>
  403024:	cbz	w20, 403038 <print_condition+0x1ac>
  403028:	ldr	x8, [x28, #16]
  40302c:	ldr	x8, [x8, #8]
  403030:	cmp	x8, #0x2
  403034:	b.cc	403044 <print_condition+0x1b8>  // b.lo, b.ul, b.last
  403038:	mov	w0, #0x28                  	// #40
  40303c:	mov	x1, x19
  403040:	bl	401340 <fputc@plt>
  403044:	ldr	x8, [x28]
  403048:	ldr	w2, [x8, #4]
  40304c:	cbz	w2, 403094 <print_condition+0x208>
  403050:	mov	x0, x19
  403054:	mov	x1, x22
  403058:	bl	4015b0 <fprintf@plt>
  40305c:	b	4030a0 <print_condition+0x214>
  403060:	mov	w0, #0x6e                  	// #110
  403064:	mov	x1, x19
  403068:	bl	401340 <fputc@plt>
  40306c:	mov	x1, x25
  403070:	tbz	w21, #0, 403014 <print_condition+0x188>
  403074:	b	402ffc <print_condition+0x170>
  403078:	ldr	x8, [x28]
  40307c:	ldr	w2, [x8, #4]
  403080:	cbz	w2, 403128 <print_condition+0x29c>
  403084:	mov	x0, x19
  403088:	mov	x1, x22
  40308c:	bl	4015b0 <fprintf@plt>
  403090:	b	403134 <print_condition+0x2a8>
  403094:	mov	w0, #0x6e                  	// #110
  403098:	mov	x1, x19
  40309c:	bl	401340 <fputc@plt>
  4030a0:	ldr	x8, [x23]
  4030a4:	adrp	x1, 404000 <yytable+0xd>
  4030a8:	mov	x0, x19
  4030ac:	add	x1, x1, #0x233
  4030b0:	ldr	w2, [x8, #8]
  4030b4:	bl	4015b0 <fprintf@plt>
  4030b8:	adrp	x0, 404000 <yytable+0xd>
  4030bc:	mov	w1, #0x4                   	// #4
  4030c0:	mov	w2, #0x1                   	// #1
  4030c4:	add	x0, x0, #0x208
  4030c8:	mov	x3, x19
  4030cc:	bl	401510 <fwrite@plt>
  4030d0:	ldr	x8, [x28]
  4030d4:	ldr	w2, [x8, #4]
  4030d8:	cbz	w2, 4030ec <print_condition+0x260>
  4030dc:	mov	x0, x19
  4030e0:	mov	x1, x22
  4030e4:	bl	4015b0 <fprintf@plt>
  4030e8:	b	4030f8 <print_condition+0x26c>
  4030ec:	mov	w0, #0x6e                  	// #110
  4030f0:	mov	x1, x19
  4030f4:	bl	401340 <fputc@plt>
  4030f8:	ldr	x8, [x23, #8]
  4030fc:	adrp	x1, 404000 <yytable+0xd>
  403100:	mov	x0, x19
  403104:	add	x1, x1, #0x22f
  403108:	ldr	w2, [x8, #8]
  40310c:	bl	4015b0 <fprintf@plt>
  403110:	cbz	w20, 402f88 <print_condition+0xfc>
  403114:	ldr	x8, [x28, #16]
  403118:	ldr	x8, [x8, #8]
  40311c:	cmp	x8, #0x2
  403120:	b.cc	402f94 <print_condition+0x108>  // b.lo, b.ul, b.last
  403124:	b	402f88 <print_condition+0xfc>
  403128:	mov	w0, #0x6e                  	// #110
  40312c:	mov	x1, x19
  403130:	bl	401340 <fputc@plt>
  403134:	ldr	x8, [x23, #8]
  403138:	adrp	x1, 404000 <yytable+0xd>
  40313c:	mov	x0, x19
  403140:	add	x1, x1, #0x22f
  403144:	ldr	w2, [x8, #8]
  403148:	bl	4015b0 <fprintf@plt>
  40314c:	b	402f94 <print_condition+0x108>
  403150:	cbz	w20, 403414 <print_condition+0x588>
  403154:	ldr	x0, [x22, #8]
  403158:	mov	w1, #0x1                   	// #1
  40315c:	mov	w2, wzr
  403160:	mov	x3, x19
  403164:	bl	402e8c <print_condition>
  403168:	adrp	x0, 404000 <yytable+0xd>
  40316c:	add	x0, x0, #0x208
  403170:	mov	w1, #0x4                   	// #4
  403174:	mov	w2, #0x1                   	// #1
  403178:	mov	x3, x19
  40317c:	bl	401510 <fwrite@plt>
  403180:	ldr	x0, [x22, #16]
  403184:	mov	w1, #0x1                   	// #1
  403188:	b	4031c8 <print_condition+0x33c>
  40318c:	mov	w0, wzr
  403190:	b	403484 <print_condition+0x5f8>
  403194:	ldr	x0, [x22, #8]
  403198:	mov	w1, wzr
  40319c:	mov	w2, wzr
  4031a0:	mov	x3, x19
  4031a4:	bl	402e8c <print_condition>
  4031a8:	adrp	x0, 404000 <yytable+0xd>
  4031ac:	add	x0, x0, #0x203
  4031b0:	mov	w1, #0x4                   	// #4
  4031b4:	mov	w2, #0x1                   	// #1
  4031b8:	mov	x3, x19
  4031bc:	bl	401510 <fwrite@plt>
  4031c0:	ldr	x0, [x22, #16]
  4031c4:	mov	w1, wzr
  4031c8:	mov	w2, wzr
  4031cc:	mov	x3, x19
  4031d0:	bl	402e8c <print_condition>
  4031d4:	b	403480 <print_condition+0x5f4>
  4031d8:	cmp	w20, #0x1
  4031dc:	mov	w0, #0x1                   	// #1
  4031e0:	b.eq	40346c <print_condition+0x5e0>  // b.none
  4031e4:	b	403484 <print_condition+0x5f8>
  4031e8:	cbnz	w20, 403208 <print_condition+0x37c>
  4031ec:	ldr	x8, [x28, #16]
  4031f0:	ldr	x8, [x8, #8]
  4031f4:	cmp	x8, #0x2
  4031f8:	b.cc	403208 <print_condition+0x37c>  // b.lo, b.ul, b.last
  4031fc:	mov	w0, #0x28                  	// #40
  403200:	mov	x1, x19
  403204:	bl	401340 <fputc@plt>
  403208:	ldr	x8, [x28, #16]
  40320c:	ldr	x9, [x8, #8]
  403210:	cbz	x9, 403480 <print_condition+0x5f4>
  403214:	adrp	x22, 404000 <yytable+0xd>
  403218:	adrp	x9, 404000 <yytable+0xd>
  40321c:	add	x22, x22, #0x23f
  403220:	add	x9, x9, #0x237
  403224:	tst	w21, #0x1
  403228:	adrp	x25, 404000 <yytable+0xd>
  40322c:	adrp	x27, 404000 <yytable+0xd>
  403230:	mov	x24, xzr
  403234:	add	x25, x25, #0x214
  403238:	csel	x26, x9, x22, ne  // ne = any
  40323c:	add	x27, x27, #0x208
  403240:	b	403264 <print_condition+0x3d8>
  403244:	mov	w0, #0x29                  	// #41
  403248:	mov	x1, x19
  40324c:	bl	401340 <fputc@plt>
  403250:	ldr	x8, [x28, #16]
  403254:	add	x24, x24, #0x1
  403258:	ldr	x9, [x8, #8]
  40325c:	cmp	x24, x9
  403260:	b.cs	403464 <print_condition+0x5d8>  // b.hs, b.nlast
  403264:	ldr	x8, [x8]
  403268:	ldr	x23, [x8, x24, lsl #3]
  40326c:	cbz	x24, 403284 <print_condition+0x3f8>
  403270:	mov	w1, #0x4                   	// #4
  403274:	mov	w2, #0x1                   	// #1
  403278:	mov	x0, x27
  40327c:	mov	x3, x19
  403280:	bl	401510 <fwrite@plt>
  403284:	ldp	x8, x9, [x23]
  403288:	ldr	w8, [x8, #8]
  40328c:	ldr	w9, [x9, #8]
  403290:	cmp	w8, w9
  403294:	b.ne	4032dc <print_condition+0x450>  // b.any
  403298:	ldr	x8, [x28]
  40329c:	ldr	w2, [x8, #4]
  4032a0:	cbz	w2, 403320 <print_condition+0x494>
  4032a4:	mov	x0, x19
  4032a8:	mov	x1, x26
  4032ac:	bl	4015b0 <fprintf@plt>
  4032b0:	mov	x1, x25
  4032b4:	tbz	w21, #0, 4032d0 <print_condition+0x444>
  4032b8:	ldr	x8, [x28, #16]
  4032bc:	ldr	x8, [x8, #8]
  4032c0:	cmp	x8, #0x1
  4032c4:	adrp	x8, 404000 <yytable+0xd>
  4032c8:	add	x8, x8, #0x20d
  4032cc:	csel	x1, x8, x25, eq  // eq = none
  4032d0:	ldr	x8, [x23]
  4032d4:	mov	x0, x19
  4032d8:	b	403408 <print_condition+0x57c>
  4032dc:	cbz	w8, 403338 <print_condition+0x4ac>
  4032e0:	cmp	w20, #0x1
  4032e4:	b.eq	4032f8 <print_condition+0x46c>  // b.none
  4032e8:	ldr	x8, [x28, #16]
  4032ec:	ldr	x8, [x8, #8]
  4032f0:	cmp	x8, #0x2
  4032f4:	b.cc	403304 <print_condition+0x478>  // b.lo, b.ul, b.last
  4032f8:	mov	w0, #0x28                  	// #40
  4032fc:	mov	x1, x19
  403300:	bl	401340 <fputc@plt>
  403304:	ldr	x8, [x28]
  403308:	ldr	w2, [x8, #4]
  40330c:	cbz	w2, 403354 <print_condition+0x4c8>
  403310:	mov	x0, x19
  403314:	mov	x1, x22
  403318:	bl	4015b0 <fprintf@plt>
  40331c:	b	403360 <print_condition+0x4d4>
  403320:	mov	w0, #0x6e                  	// #110
  403324:	mov	x1, x19
  403328:	bl	401340 <fputc@plt>
  40332c:	mov	x1, x25
  403330:	tbz	w21, #0, 4032d0 <print_condition+0x444>
  403334:	b	4032b8 <print_condition+0x42c>
  403338:	ldr	x8, [x28]
  40333c:	ldr	w2, [x8, #4]
  403340:	cbz	w2, 4033ec <print_condition+0x560>
  403344:	mov	x0, x19
  403348:	mov	x1, x22
  40334c:	bl	4015b0 <fprintf@plt>
  403350:	b	4033f8 <print_condition+0x56c>
  403354:	mov	w0, #0x6e                  	// #110
  403358:	mov	x1, x19
  40335c:	bl	401340 <fputc@plt>
  403360:	ldr	x8, [x23]
  403364:	adrp	x1, 404000 <yytable+0xd>
  403368:	mov	x0, x19
  40336c:	add	x1, x1, #0x21e
  403370:	ldr	w2, [x8, #8]
  403374:	bl	4015b0 <fprintf@plt>
  403378:	adrp	x0, 404000 <yytable+0xd>
  40337c:	mov	w1, #0x4                   	// #4
  403380:	mov	w2, #0x1                   	// #1
  403384:	add	x0, x0, #0x203
  403388:	mov	x3, x19
  40338c:	bl	401510 <fwrite@plt>
  403390:	ldr	x8, [x28]
  403394:	ldr	w2, [x8, #4]
  403398:	cbz	w2, 4033ac <print_condition+0x520>
  40339c:	mov	x0, x19
  4033a0:	mov	x1, x22
  4033a4:	bl	4015b0 <fprintf@plt>
  4033a8:	b	4033b8 <print_condition+0x52c>
  4033ac:	mov	w0, #0x6e                  	// #110
  4033b0:	mov	x1, x19
  4033b4:	bl	401340 <fputc@plt>
  4033b8:	ldr	x8, [x23, #8]
  4033bc:	adrp	x1, 404000 <yytable+0xd>
  4033c0:	mov	x0, x19
  4033c4:	add	x1, x1, #0x219
  4033c8:	ldr	w2, [x8, #8]
  4033cc:	bl	4015b0 <fprintf@plt>
  4033d0:	cmp	w20, #0x1
  4033d4:	b.eq	403244 <print_condition+0x3b8>  // b.none
  4033d8:	ldr	x8, [x28, #16]
  4033dc:	ldr	x8, [x8, #8]
  4033e0:	cmp	x8, #0x2
  4033e4:	b.cc	403250 <print_condition+0x3c4>  // b.lo, b.ul, b.last
  4033e8:	b	403244 <print_condition+0x3b8>
  4033ec:	mov	w0, #0x6e                  	// #110
  4033f0:	mov	x1, x19
  4033f4:	bl	401340 <fputc@plt>
  4033f8:	ldr	x8, [x23, #8]
  4033fc:	adrp	x1, 404000 <yytable+0xd>
  403400:	mov	x0, x19
  403404:	add	x1, x1, #0x219
  403408:	ldr	w2, [x8, #8]
  40340c:	bl	4015b0 <fprintf@plt>
  403410:	b	403250 <print_condition+0x3c4>
  403414:	mov	w0, #0x28                  	// #40
  403418:	mov	x1, x19
  40341c:	bl	401340 <fputc@plt>
  403420:	ldr	x0, [x22, #8]
  403424:	mov	w1, #0x1                   	// #1
  403428:	mov	w2, wzr
  40342c:	mov	x3, x19
  403430:	bl	402e8c <print_condition>
  403434:	adrp	x0, 404000 <yytable+0xd>
  403438:	add	x0, x0, #0x208
  40343c:	mov	w1, #0x4                   	// #4
  403440:	mov	w2, #0x1                   	// #1
  403444:	mov	x3, x19
  403448:	bl	401510 <fwrite@plt>
  40344c:	ldr	x0, [x22, #16]
  403450:	mov	w1, #0x1                   	// #1
  403454:	mov	w2, wzr
  403458:	mov	x3, x19
  40345c:	bl	402e8c <print_condition>
  403460:	b	403474 <print_condition+0x5e8>
  403464:	mov	w0, #0x1                   	// #1
  403468:	cbnz	w20, 403484 <print_condition+0x5f8>
  40346c:	cmp	x9, #0x2
  403470:	b.cc	403484 <print_condition+0x5f8>  // b.lo, b.ul, b.last
  403474:	mov	w0, #0x29                  	// #41
  403478:	mov	x1, x19
  40347c:	bl	401340 <fputc@plt>
  403480:	mov	w0, #0x1                   	// #1
  403484:	ldp	x20, x19, [sp, #80]
  403488:	ldp	x22, x21, [sp, #64]
  40348c:	ldp	x24, x23, [sp, #48]
  403490:	ldp	x26, x25, [sp, #32]
  403494:	ldp	x28, x27, [sp, #16]
  403498:	ldp	x29, x30, [sp], #96
  40349c:	ret

00000000004034a0 <main>:
  4034a0:	sub	sp, sp, #0xa0
  4034a4:	stp	x29, x30, [sp, #64]
  4034a8:	stp	x28, x27, [sp, #80]
  4034ac:	stp	x26, x25, [sp, #96]
  4034b0:	stp	x24, x23, [sp, #112]
  4034b4:	stp	x22, x21, [sp, #128]
  4034b8:	stp	x20, x19, [sp, #144]
  4034bc:	ldr	x8, [x1]
  4034c0:	mov	w19, w0
  4034c4:	add	x29, sp, #0x40
  4034c8:	mov	x20, x1
  4034cc:	mov	x0, x8
  4034d0:	bl	4012f0 <set_program_name@plt>
  4034d4:	adrp	x1, 404000 <yytable+0xd>
  4034d8:	add	x1, x1, #0x458
  4034dc:	mov	w0, #0x6                   	// #6
  4034e0:	bl	4015c0 <setlocale@plt>
  4034e4:	adrp	x21, 404000 <yytable+0xd>
  4034e8:	adrp	x22, 404000 <yytable+0xd>
  4034ec:	add	x21, x21, #0x245
  4034f0:	add	x22, x22, #0x253
  4034f4:	mov	x0, x21
  4034f8:	mov	x1, x22
  4034fc:	bl	4013d0 <bindtextdomain@plt>
  403500:	adrp	x0, 404000 <yytable+0xd>
  403504:	add	x0, x0, #0xf7
  403508:	mov	x1, x22
  40350c:	bl	4013d0 <bindtextdomain@plt>
  403510:	mov	x0, x21
  403514:	bl	4014b0 <textdomain@plt>
  403518:	adrp	x0, 401000 <_init-0x270>
  40351c:	add	x0, x0, #0x430
  403520:	bl	403e10 <atexit>
  403524:	adrp	x21, 404000 <yytable+0xd>
  403528:	adrp	x22, 404000 <yytable+0xd>
  40352c:	mov	w24, wzr
  403530:	mov	w23, wzr
  403534:	mov	w28, wzr
  403538:	add	x21, x21, #0x265
  40353c:	add	x22, x22, #0x7f0
  403540:	mov	w0, w19
  403544:	mov	x1, x20
  403548:	mov	x2, x21
  40354c:	mov	x3, x22
  403550:	mov	x4, xzr
  403554:	bl	4014c0 <getopt_long@plt>
  403558:	cmp	w0, #0x55
  40355c:	b.le	403578 <main+0xd8>
  403560:	cmp	w0, #0x56
  403564:	b.eq	403588 <main+0xe8>  // b.none
  403568:	cmp	w0, #0x63
  40356c:	b.ne	403590 <main+0xf0>  // b.any
  403570:	mov	w28, #0x1                   	// #1
  403574:	b	403540 <main+0xa0>
  403578:	cmn	w0, #0x1
  40357c:	b.eq	4035a0 <main+0x100>  // b.none
  403580:	cbz	w0, 403540 <main+0xa0>
  403584:	b	403bb4 <main+0x714>
  403588:	mov	w23, #0x1                   	// #1
  40358c:	b	403540 <main+0xa0>
  403590:	cmp	w0, #0x68
  403594:	b.ne	403bb4 <main+0x714>  // b.any
  403598:	mov	w24, #0x1                   	// #1
  40359c:	b	403540 <main+0xa0>
  4035a0:	tbnz	w23, #0, 403bbc <main+0x71c>
  4035a4:	tbnz	w24, #0, 403c48 <main+0x7a8>
  4035a8:	adrp	x21, 415000 <memcpy@GLIBC_2.17>
  4035ac:	ldrsw	x8, [x21, #424]
  4035b0:	add	w9, w8, #0x2
  4035b4:	cmp	w9, w19
  4035b8:	b.ne	4036e0 <main+0x240>  // b.any
  4035bc:	ldr	x19, [x20, x8, lsl #3]
  4035c0:	add	w8, w8, #0x1
  4035c4:	ldr	x22, [x20, w8, sxtw #3]
  4035c8:	mov	w0, #0x51ad                	// #20909
  4035cc:	bl	4013b0 <xmlCheckVersion@plt>
  4035d0:	adrp	x1, 404000 <yytable+0xd>
  4035d4:	add	x1, x1, #0x3fa
  4035d8:	mov	x0, x22
  4035dc:	bl	401370 <fopen@plt>
  4035e0:	mov	x20, x0
  4035e4:	cbnz	x0, 40360c <main+0x16c>
  4035e8:	adrp	x1, 404000 <yytable+0xd>
  4035ec:	add	x1, x1, #0x3a1
  4035f0:	mov	w2, #0x5                   	// #5
  4035f4:	bl	401530 <dcgettext@plt>
  4035f8:	mov	x2, x0
  4035fc:	mov	w0, #0x1                   	// #1
  403600:	mov	w1, wzr
  403604:	mov	x3, x22
  403608:	bl	4012e0 <error@plt>
  40360c:	mov	x0, x20
  403610:	bl	401350 <fileno@plt>
  403614:	mov	w3, #0x940                 	// #2368
  403618:	mov	x1, x22
  40361c:	mov	x2, xzr
  403620:	bl	401450 <xmlReadFd@plt>
  403624:	mov	x21, x0
  403628:	cbnz	x0, 403650 <main+0x1b0>
  40362c:	adrp	x1, 404000 <yytable+0xd>
  403630:	add	x1, x1, #0x70b
  403634:	mov	w2, #0x5                   	// #5
  403638:	bl	401530 <dcgettext@plt>
  40363c:	mov	x2, x0
  403640:	mov	w0, #0x1                   	// #1
  403644:	mov	w1, wzr
  403648:	mov	x3, x22
  40364c:	bl	4012e0 <error@plt>
  403650:	mov	x0, x21
  403654:	bl	401570 <xmlDocGetRootElement@plt>
  403658:	mov	x23, x0
  40365c:	cbz	x0, 40376c <main+0x2cc>
  403660:	ldr	x0, [x23, #16]
  403664:	adrp	x1, 404000 <yytable+0xd>
  403668:	add	x1, x1, #0x72a
  40366c:	bl	401560 <xmlStrEqual@plt>
  403670:	cbz	w0, 40376c <main+0x2cc>
  403674:	ldr	x24, [x23, #24]
  403678:	cbz	x24, 4037e8 <main+0x348>
  40367c:	adrp	x23, 404000 <yytable+0xd>
  403680:	add	x23, x23, #0x759
  403684:	b	403690 <main+0x1f0>
  403688:	ldr	x24, [x24, #48]
  40368c:	cbz	x24, 4037e8 <main+0x348>
  403690:	ldr	w8, [x24, #8]
  403694:	cmp	w8, #0x1
  403698:	b.ne	403688 <main+0x1e8>  // b.any
  40369c:	ldr	x0, [x24, #16]
  4036a0:	mov	x1, x23
  4036a4:	bl	401560 <xmlStrEqual@plt>
  4036a8:	cbz	w0, 403688 <main+0x1e8>
  4036ac:	mov	x0, x19
  4036b0:	bl	4012c0 <strlen@plt>
  4036b4:	ldr	x24, [x24, #24]
  4036b8:	cbz	x24, 40381c <main+0x37c>
  4036bc:	stur	x19, [x29, #-24]
  4036c0:	adrp	x19, 404000 <yytable+0xd>
  4036c4:	adrp	x27, 404000 <yytable+0xd>
  4036c8:	mov	x25, x0
  4036cc:	mov	x23, xzr
  4036d0:	add	x19, x19, #0x792
  4036d4:	add	x27, x27, #0x79e
  4036d8:	stp	xzr, xzr, [sp, #24]
  4036dc:	b	40390c <main+0x46c>
  4036e0:	cmp	w8, w19
  4036e4:	b.ne	4037b0 <main+0x310>  // b.any
  4036e8:	adrp	x20, 415000 <memcpy@GLIBC_2.17>
  4036ec:	ldr	x3, [x20, #440]
  4036f0:	sub	x0, x29, #0x8
  4036f4:	sub	x1, x29, #0x10
  4036f8:	mov	w2, #0xa                   	// #10
  4036fc:	stp	xzr, xzr, [x29, #-16]
  403700:	bl	401590 <__getdelim@plt>
  403704:	tbnz	w0, #31, 4037e0 <main+0x340>
  403708:	adrp	x21, 415000 <memcpy@GLIBC_2.17>
  40370c:	b	403728 <main+0x288>
  403710:	ldr	x3, [x20, #440]
  403714:	sub	x0, x29, #0x8
  403718:	sub	x1, x29, #0x10
  40371c:	mov	w2, #0xa                   	// #10
  403720:	bl	401590 <__getdelim@plt>
  403724:	tbnz	w0, #31, 4037e0 <main+0x340>
  403728:	cbz	w0, 403748 <main+0x2a8>
  40372c:	ldur	x8, [x29, #-8]
  403730:	sub	w9, w0, #0x1
  403734:	sxtw	x9, w9
  403738:	ldrb	w10, [x8, x9]
  40373c:	cmp	w10, #0xa
  403740:	b.ne	403748 <main+0x2a8>  // b.any
  403744:	strb	wzr, [x8, x9]
  403748:	ldur	x0, [x29, #-8]
  40374c:	bl	4023c8 <cldr_plural_parse>
  403750:	cbz	x0, 403710 <main+0x270>
  403754:	ldr	x1, [x21, #432]
  403758:	mov	x19, x0
  40375c:	bl	402424 <cldr_plural_rule_list_print>
  403760:	mov	x0, x19
  403764:	bl	402370 <cldr_plural_rule_list_free>
  403768:	b	403710 <main+0x270>
  40376c:	mov	x0, x23
  403770:	bl	401520 <xmlGetLineNo@plt>
  403774:	adrp	x1, 404000 <yytable+0xd>
  403778:	mov	x23, x0
  40377c:	add	x1, x1, #0x73b
  403780:	mov	w2, #0x5                   	// #5
  403784:	mov	x0, xzr
  403788:	bl	401530 <dcgettext@plt>
  40378c:	adrp	x5, 404000 <yytable+0xd>
  403790:	mov	x4, x0
  403794:	add	x5, x5, #0x72a
  403798:	mov	w0, wzr
  40379c:	mov	w1, wzr
  4037a0:	mov	x2, x22
  4037a4:	mov	w3, w23
  4037a8:	bl	4015a0 <error_at_line@plt>
  4037ac:	b	40381c <main+0x37c>
  4037b0:	adrp	x1, 404000 <yytable+0xd>
  4037b4:	add	x1, x1, #0x3e6
  4037b8:	mov	w2, #0x5                   	// #5
  4037bc:	mov	x0, xzr
  4037c0:	bl	401530 <dcgettext@plt>
  4037c4:	ldrsw	x8, [x21, #424]
  4037c8:	mov	x2, x0
  4037cc:	mov	w0, #0x1                   	// #1
  4037d0:	mov	w1, wzr
  4037d4:	ldr	x3, [x20, x8, lsl #3]
  4037d8:	bl	4012e0 <error@plt>
  4037dc:	b	4038c0 <main+0x420>
  4037e0:	ldur	x0, [x29, #-8]
  4037e4:	b	4038bc <main+0x41c>
  4037e8:	adrp	x1, 404000 <yytable+0xd>
  4037ec:	add	x1, x1, #0x761
  4037f0:	mov	w2, #0x5                   	// #5
  4037f4:	mov	x0, xzr
  4037f8:	bl	401530 <dcgettext@plt>
  4037fc:	adrp	x3, 404000 <yytable+0xd>
  403800:	adrp	x4, 404000 <yytable+0xd>
  403804:	mov	x2, x0
  403808:	add	x3, x3, #0x72a
  40380c:	add	x4, x4, #0x759
  403810:	mov	w0, wzr
  403814:	mov	w1, wzr
  403818:	bl	4012e0 <error@plt>
  40381c:	mov	x23, xzr
  403820:	mov	x0, x21
  403824:	bl	401320 <xmlFreeDoc@plt>
  403828:	mov	x0, x20
  40382c:	bl	401360 <fclose@plt>
  403830:	cbz	x23, 403844 <main+0x3a4>
  403834:	mov	x0, x23
  403838:	tbz	w28, #0, 403874 <main+0x3d4>
  40383c:	bl	4014a0 <puts@plt>
  403840:	b	4038b8 <main+0x418>
  403844:	adrp	x1, 404000 <yytable+0xd>
  403848:	add	x1, x1, #0x3b3
  40384c:	mov	w2, #0x5                   	// #5
  403850:	mov	x0, xzr
  403854:	bl	401530 <dcgettext@plt>
  403858:	mov	x2, x0
  40385c:	mov	w0, #0x1                   	// #1
  403860:	mov	w1, wzr
  403864:	mov	x3, x19
  403868:	bl	4012e0 <error@plt>
  40386c:	mov	x0, x23
  403870:	tbnz	w28, #0, 40383c <main+0x39c>
  403874:	bl	4023c8 <cldr_plural_parse>
  403878:	mov	x19, x0
  40387c:	cbnz	x0, 4038a0 <main+0x400>
  403880:	adrp	x1, 404000 <yytable+0xd>
  403884:	add	x1, x1, #0x3cf
  403888:	mov	w2, #0x5                   	// #5
  40388c:	bl	401530 <dcgettext@plt>
  403890:	mov	x2, x0
  403894:	mov	w0, #0x1                   	// #1
  403898:	mov	w1, wzr
  40389c:	bl	4012e0 <error@plt>
  4038a0:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  4038a4:	ldr	x1, [x8, #432]
  4038a8:	mov	x0, x19
  4038ac:	bl	402424 <cldr_plural_rule_list_print>
  4038b0:	mov	x0, x19
  4038b4:	bl	402370 <cldr_plural_rule_list_free>
  4038b8:	mov	x0, x23
  4038bc:	bl	401500 <free@plt>
  4038c0:	ldp	x20, x19, [sp, #144]
  4038c4:	ldp	x22, x21, [sp, #128]
  4038c8:	ldp	x24, x23, [sp, #112]
  4038cc:	ldp	x26, x25, [sp, #96]
  4038d0:	ldp	x28, x27, [sp, #80]
  4038d4:	ldp	x29, x30, [sp, #64]
  4038d8:	mov	w0, wzr
  4038dc:	add	sp, sp, #0xa0
  4038e0:	ret
  4038e4:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  4038e8:	ldr	x8, [x8, #464]
  4038ec:	mov	x0, x27
  4038f0:	blr	x8
  4038f4:	adrp	x19, 404000 <yytable+0xd>
  4038f8:	add	x19, x19, #0x792
  4038fc:	ldr	x24, [x24, #48]
  403900:	adrp	x27, 404000 <yytable+0xd>
  403904:	add	x27, x27, #0x79e
  403908:	cbz	x24, 403b8c <main+0x6ec>
  40390c:	ldr	w8, [x24, #8]
  403910:	cmp	w8, #0x1
  403914:	b.ne	4038fc <main+0x45c>  // b.any
  403918:	ldr	x0, [x24, #16]
  40391c:	mov	x1, x19
  403920:	bl	401560 <xmlStrEqual@plt>
  403924:	cbz	w0, 4038fc <main+0x45c>
  403928:	mov	x0, x24
  40392c:	mov	x1, x27
  403930:	bl	401300 <xmlHasProp@plt>
  403934:	cbz	x0, 4039d0 <main+0x530>
  403938:	mov	x0, x24
  40393c:	mov	x1, x27
  403940:	bl	4013a0 <xmlGetProp@plt>
  403944:	ldrb	w8, [x0]
  403948:	mov	x27, x0
  40394c:	mov	x26, x0
  403950:	cbnz	w8, 40395c <main+0x4bc>
  403954:	b	4038e4 <main+0x444>
  403958:	ldrb	w8, [x26, #1]!
  40395c:	and	w8, w8, #0xff
  403960:	sub	w9, w8, #0x9
  403964:	cmp	w9, #0x5
  403968:	b.cc	403958 <main+0x4b8>  // b.lo, b.ul, b.last
  40396c:	cmp	w8, #0x20
  403970:	b.eq	403958 <main+0x4b8>  // b.none
  403974:	ldur	x1, [x29, #-24]
  403978:	mov	x0, x26
  40397c:	mov	w2, w25
  403980:	bl	401540 <xmlStrncmp@plt>
  403984:	cbnz	w0, 4039ac <main+0x50c>
  403988:	ldrb	w8, [x26, x25]
  40398c:	cmp	w8, #0x20
  403990:	b.hi	4039ac <main+0x50c>  // b.pmore
  403994:	mov	w9, #0x1                   	// #1
  403998:	lsl	x8, x9, x8
  40399c:	mov	x9, #0x3e01                	// #15873
  4039a0:	movk	x9, #0x1, lsl #32
  4039a4:	tst	x8, x9
  4039a8:	b.ne	403a14 <main+0x574>  // b.any
  4039ac:	ldrb	w8, [x26]
  4039b0:	sub	w9, w8, #0x9
  4039b4:	cmp	w9, #0x5
  4039b8:	b.cc	40395c <main+0x4bc>  // b.lo, b.ul, b.last
  4039bc:	cbz	w8, 4038e4 <main+0x444>
  4039c0:	cmp	w8, #0x20
  4039c4:	b.eq	40395c <main+0x4bc>  // b.none
  4039c8:	add	x26, x26, #0x1
  4039cc:	b	4039ac <main+0x50c>
  4039d0:	mov	x0, x24
  4039d4:	bl	401520 <xmlGetLineNo@plt>
  4039d8:	adrp	x1, 404000 <yytable+0xd>
  4039dc:	mov	x26, x0
  4039e0:	mov	w2, #0x5                   	// #5
  4039e4:	mov	x0, xzr
  4039e8:	add	x1, x1, #0x7a6
  4039ec:	bl	401530 <dcgettext@plt>
  4039f0:	mov	x4, x0
  4039f4:	mov	w0, wzr
  4039f8:	mov	w1, wzr
  4039fc:	mov	x2, x22
  403a00:	mov	w3, w26
  403a04:	mov	x5, x19
  403a08:	mov	x6, x27
  403a0c:	bl	4015a0 <error_at_line@plt>
  403a10:	b	4038fc <main+0x45c>
  403a14:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  403a18:	ldr	x8, [x8, #464]
  403a1c:	mov	x0, x27
  403a20:	blr	x8
  403a24:	ldr	x26, [x24, #24]
  403a28:	adrp	x19, 404000 <yytable+0xd>
  403a2c:	add	x19, x19, #0x792
  403a30:	cbnz	x26, 403a90 <main+0x5f0>
  403a34:	b	4038fc <main+0x45c>
  403a38:	str	x19, [sp, #24]
  403a3c:	add	x0, x23, x27
  403a40:	ldp	x27, x19, [sp, #8]
  403a44:	adrp	x1, 404000 <yytable+0xd>
  403a48:	add	x1, x1, #0x7e5
  403a4c:	mov	x2, x19
  403a50:	mov	x3, x27
  403a54:	bl	401310 <sprintf@plt>
  403a58:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  403a5c:	ldr	x8, [x8, #464]
  403a60:	mov	x0, x19
  403a64:	blr	x8
  403a68:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  403a6c:	ldr	x8, [x8, #464]
  403a70:	mov	x0, x27
  403a74:	blr	x8
  403a78:	ldr	x8, [sp]
  403a7c:	adrp	x19, 404000 <yytable+0xd>
  403a80:	add	x19, x19, #0x792
  403a84:	str	x8, [sp, #32]
  403a88:	ldr	x26, [x26, #48]
  403a8c:	cbz	x26, 4038fc <main+0x45c>
  403a90:	ldr	w8, [x26, #8]
  403a94:	cmp	w8, #0x1
  403a98:	b.ne	403a88 <main+0x5e8>  // b.any
  403a9c:	ldr	x0, [x26, #16]
  403aa0:	adrp	x1, 404000 <yytable+0xd>
  403aa4:	add	x1, x1, #0x7d4
  403aa8:	bl	401560 <xmlStrEqual@plt>
  403aac:	cbz	w0, 403a88 <main+0x5e8>
  403ab0:	adrp	x27, 404000 <yytable+0xd>
  403ab4:	add	x27, x27, #0x7df
  403ab8:	mov	x0, x26
  403abc:	mov	x1, x27
  403ac0:	bl	401300 <xmlHasProp@plt>
  403ac4:	cbz	x0, 403b4c <main+0x6ac>
  403ac8:	mov	x0, x26
  403acc:	mov	x1, x27
  403ad0:	bl	4013a0 <xmlGetProp@plt>
  403ad4:	mov	x19, x0
  403ad8:	mov	x0, x26
  403adc:	bl	401440 <xmlNodeGetContent@plt>
  403ae0:	mov	x27, x0
  403ae4:	mov	x0, x19
  403ae8:	str	x19, [sp, #16]
  403aec:	bl	401420 <xmlStrlen@plt>
  403af0:	ldr	x19, [sp, #24]
  403af4:	str	w0, [sp]
  403af8:	mov	x0, x27
  403afc:	str	x27, [sp, #8]
  403b00:	bl	401420 <xmlStrlen@plt>
  403b04:	ldr	x9, [sp, #32]
  403b08:	ldr	w8, [sp]
  403b0c:	mov	x27, x9
  403b10:	add	x8, x9, w8, sxtw
  403b14:	add	x9, x8, w0, sxtw
  403b18:	add	x8, x9, #0x5
  403b1c:	cmp	x8, x19
  403b20:	add	x9, x9, #0x4
  403b24:	str	x9, [sp]
  403b28:	b.ls	403a38 <main+0x598>  // b.plast
  403b2c:	lsl	x9, x19, #1
  403b30:	cmp	x9, x8
  403b34:	csel	x1, x8, x9, cc  // cc = lo, ul, last
  403b38:	mov	x0, x23
  403b3c:	mov	x19, x1
  403b40:	bl	401390 <xrealloc@plt>
  403b44:	mov	x23, x0
  403b48:	b	403a38 <main+0x598>
  403b4c:	mov	x0, x26
  403b50:	bl	401520 <xmlGetLineNo@plt>
  403b54:	adrp	x1, 404000 <yytable+0xd>
  403b58:	mov	x26, x0
  403b5c:	mov	w2, #0x5                   	// #5
  403b60:	mov	x0, xzr
  403b64:	add	x1, x1, #0x7a6
  403b68:	bl	401530 <dcgettext@plt>
  403b6c:	adrp	x5, 404000 <yytable+0xd>
  403b70:	mov	x4, x0
  403b74:	mov	w0, wzr
  403b78:	mov	w1, wzr
  403b7c:	mov	x2, x22
  403b80:	mov	w3, w26
  403b84:	add	x5, x5, #0x7d4
  403b88:	b	403a08 <main+0x568>
  403b8c:	cbz	x23, 403bac <main+0x70c>
  403b90:	mov	w1, #0x3b                  	// #59
  403b94:	mov	x0, x23
  403b98:	bl	401460 <strrchr@plt>
  403b9c:	ldur	x19, [x29, #-24]
  403ba0:	cbz	x0, 403820 <main+0x380>
  403ba4:	strb	wzr, [x0]
  403ba8:	b	403820 <main+0x380>
  403bac:	ldur	x19, [x29, #-24]
  403bb0:	b	403820 <main+0x380>
  403bb4:	mov	w0, #0x1                   	// #1
  403bb8:	bl	403c50 <usage>
  403bbc:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  403bc0:	ldr	x0, [x8, #448]
  403bc4:	bl	4014e0 <basename@plt>
  403bc8:	mov	x1, x0
  403bcc:	adrp	x0, 404000 <yytable+0xd>
  403bd0:	adrp	x2, 404000 <yytable+0xd>
  403bd4:	adrp	x3, 404000 <yytable+0xd>
  403bd8:	add	x0, x0, #0x269
  403bdc:	add	x2, x2, #0x245
  403be0:	add	x3, x3, #0x279
  403be4:	bl	401550 <printf@plt>
  403be8:	adrp	x1, 404000 <yytable+0xd>
  403bec:	add	x1, x1, #0x280
  403bf0:	mov	w2, #0x5                   	// #5
  403bf4:	mov	x0, xzr
  403bf8:	bl	401530 <dcgettext@plt>
  403bfc:	adrp	x1, 404000 <yytable+0xd>
  403c00:	adrp	x2, 404000 <yytable+0xd>
  403c04:	add	x1, x1, #0x35a
  403c08:	add	x2, x2, #0x364
  403c0c:	bl	401550 <printf@plt>
  403c10:	adrp	x1, 404000 <yytable+0xd>
  403c14:	add	x1, x1, #0x386
  403c18:	mov	w2, #0x5                   	// #5
  403c1c:	mov	x0, xzr
  403c20:	bl	401530 <dcgettext@plt>
  403c24:	mov	x19, x0
  403c28:	adrp	x0, 404000 <yytable+0xd>
  403c2c:	add	x0, x0, #0x396
  403c30:	bl	4014f0 <proper_name@plt>
  403c34:	mov	x1, x0
  403c38:	mov	x0, x19
  403c3c:	bl	401550 <printf@plt>
  403c40:	mov	w0, wzr
  403c44:	bl	4012d0 <exit@plt>
  403c48:	mov	w0, wzr
  403c4c:	bl	403c50 <usage>

0000000000403c50 <usage>:
  403c50:	stp	x29, x30, [sp, #-32]!
  403c54:	stp	x20, x19, [sp, #16]
  403c58:	mov	w19, w0
  403c5c:	mov	x29, sp
  403c60:	cbnz	w0, 403d4c <usage+0xfc>
  403c64:	adrp	x1, 404000 <yytable+0xd>
  403c68:	add	x1, x1, #0x430
  403c6c:	mov	w2, #0x5                   	// #5
  403c70:	mov	x0, xzr
  403c74:	bl	401530 <dcgettext@plt>
  403c78:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  403c7c:	ldr	x1, [x8, #448]
  403c80:	bl	401550 <printf@plt>
  403c84:	mov	w0, #0xa                   	// #10
  403c88:	bl	401580 <putchar@plt>
  403c8c:	adrp	x1, 404000 <yytable+0xd>
  403c90:	add	x1, x1, #0x459
  403c94:	mov	w2, #0x5                   	// #5
  403c98:	mov	x0, xzr
  403c9c:	bl	401530 <dcgettext@plt>
  403ca0:	bl	401550 <printf@plt>
  403ca4:	mov	w0, #0xa                   	// #10
  403ca8:	bl	401580 <putchar@plt>
  403cac:	adrp	x1, 404000 <yytable+0xd>
  403cb0:	add	x1, x1, #0x562
  403cb4:	mov	w2, #0x5                   	// #5
  403cb8:	mov	x0, xzr
  403cbc:	bl	401530 <dcgettext@plt>
  403cc0:	bl	401550 <printf@plt>
  403cc4:	mov	w0, #0xa                   	// #10
  403cc8:	bl	401580 <putchar@plt>
  403ccc:	adrp	x1, 404000 <yytable+0xd>
  403cd0:	add	x1, x1, #0x5ce
  403cd4:	mov	w2, #0x5                   	// #5
  403cd8:	mov	x0, xzr
  403cdc:	bl	401530 <dcgettext@plt>
  403ce0:	bl	401550 <printf@plt>
  403ce4:	adrp	x1, 404000 <yytable+0xd>
  403ce8:	add	x1, x1, #0x613
  403cec:	mov	w2, #0x5                   	// #5
  403cf0:	mov	x0, xzr
  403cf4:	bl	401530 <dcgettext@plt>
  403cf8:	bl	401550 <printf@plt>
  403cfc:	adrp	x1, 404000 <yytable+0xd>
  403d00:	add	x1, x1, #0x64d
  403d04:	mov	w2, #0x5                   	// #5
  403d08:	mov	x0, xzr
  403d0c:	bl	401530 <dcgettext@plt>
  403d10:	bl	401550 <printf@plt>
  403d14:	mov	w0, #0xa                   	// #10
  403d18:	bl	401580 <putchar@plt>
  403d1c:	adrp	x1, 404000 <yytable+0xd>
  403d20:	add	x1, x1, #0x690
  403d24:	mov	w2, #0x5                   	// #5
  403d28:	mov	x0, xzr
  403d2c:	bl	401530 <dcgettext@plt>
  403d30:	adrp	x1, 404000 <yytable+0xd>
  403d34:	adrp	x2, 404000 <yytable+0xd>
  403d38:	add	x1, x1, #0x6cd
  403d3c:	add	x2, x2, #0x6f7
  403d40:	bl	401550 <printf@plt>
  403d44:	mov	w0, w19
  403d48:	bl	4012d0 <exit@plt>
  403d4c:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  403d50:	ldr	x20, [x8, #416]
  403d54:	adrp	x1, 404000 <yytable+0xd>
  403d58:	add	x1, x1, #0x409
  403d5c:	mov	w2, #0x5                   	// #5
  403d60:	mov	x0, xzr
  403d64:	bl	401530 <dcgettext@plt>
  403d68:	adrp	x8, 415000 <memcpy@GLIBC_2.17>
  403d6c:	ldr	x2, [x8, #448]
  403d70:	mov	x1, x0
  403d74:	mov	x0, x20
  403d78:	bl	4015b0 <fprintf@plt>
  403d7c:	mov	w0, w19
  403d80:	bl	4012d0 <exit@plt>
  403d84:	nop

0000000000403d88 <__libc_csu_init>:
  403d88:	stp	x29, x30, [sp, #-64]!
  403d8c:	mov	x29, sp
  403d90:	stp	x19, x20, [sp, #16]
  403d94:	adrp	x20, 414000 <__FRAME_END__+0xf674>
  403d98:	add	x20, x20, #0xd80
  403d9c:	stp	x21, x22, [sp, #32]
  403da0:	adrp	x21, 414000 <__FRAME_END__+0xf674>
  403da4:	add	x21, x21, #0xd78
  403da8:	sub	x20, x20, x21
  403dac:	mov	w22, w0
  403db0:	stp	x23, x24, [sp, #48]
  403db4:	mov	x23, x1
  403db8:	mov	x24, x2
  403dbc:	bl	401270 <_init>
  403dc0:	cmp	xzr, x20, asr #3
  403dc4:	b.eq	403df0 <__libc_csu_init+0x68>  // b.none
  403dc8:	asr	x20, x20, #3
  403dcc:	mov	x19, #0x0                   	// #0
  403dd0:	ldr	x3, [x21, x19, lsl #3]
  403dd4:	mov	x2, x24
  403dd8:	add	x19, x19, #0x1
  403ddc:	mov	x1, x23
  403de0:	mov	w0, w22
  403de4:	blr	x3
  403de8:	cmp	x20, x19
  403dec:	b.ne	403dd0 <__libc_csu_init+0x48>  // b.any
  403df0:	ldp	x19, x20, [sp, #16]
  403df4:	ldp	x21, x22, [sp, #32]
  403df8:	ldp	x23, x24, [sp, #48]
  403dfc:	ldp	x29, x30, [sp], #64
  403e00:	ret
  403e04:	nop

0000000000403e08 <__libc_csu_fini>:
  403e08:	ret
  403e0c:	nop

0000000000403e10 <atexit>:
  403e10:	adrp	x2, 415000 <memcpy@GLIBC_2.17>
  403e14:	mov	x1, #0x0                   	// #0
  403e18:	ldr	x2, [x2, #408]
  403e1c:	b	401330 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000403e20 <_fini>:
  403e20:	stp	x29, x30, [sp, #-16]!
  403e24:	mov	x29, sp
  403e28:	ldp	x29, x30, [sp], #16
  403e2c:	ret
