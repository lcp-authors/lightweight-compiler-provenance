
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-tool_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402450 <.init>:
  402450:	stp	x29, x30, [sp, #-16]!
  402454:	mov	x29, sp
  402458:	bl	403474 <nftw@plt+0x8f4>
  40245c:	ldp	x29, x30, [sp], #16
  402460:	ret

Disassembly of section .plt:

0000000000402470 <memcpy@plt-0x20>:
  402470:	stp	x16, x30, [sp, #-16]!
  402474:	adrp	x16, 48b000 <_obstack_memory_used@@Base+0x415a0>
  402478:	ldr	x17, [x16, #4088]
  40247c:	add	x16, x16, #0xff8
  402480:	br	x17
  402484:	nop
  402488:	nop
  40248c:	nop

0000000000402490 <memcpy@plt>:
  402490:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402494:	ldr	x17, [x16]
  402498:	add	x16, x16, #0x0
  40249c:	br	x17

00000000004024a0 <memmove@plt>:
  4024a0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #8]
  4024a8:	add	x16, x16, #0x8
  4024ac:	br	x17

00000000004024b0 <ngettext@plt>:
  4024b0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #16]
  4024b8:	add	x16, x16, #0x10
  4024bc:	br	x17

00000000004024c0 <getcwd@plt>:
  4024c0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #24]
  4024c8:	add	x16, x16, #0x18
  4024cc:	br	x17

00000000004024d0 <fwrite_unlocked@plt>:
  4024d0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #32]
  4024d8:	add	x16, x16, #0x20
  4024dc:	br	x17

00000000004024e0 <strtoul@plt>:
  4024e0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #40]
  4024e8:	add	x16, x16, #0x28
  4024ec:	br	x17

00000000004024f0 <strlen@plt>:
  4024f0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #48]
  4024f8:	add	x16, x16, #0x30
  4024fc:	br	x17

0000000000402500 <fputs@plt>:
  402500:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402504:	ldr	x17, [x16, #56]
  402508:	add	x16, x16, #0x38
  40250c:	br	x17

0000000000402510 <mbstowcs@plt>:
  402510:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402514:	ldr	x17, [x16, #64]
  402518:	add	x16, x16, #0x40
  40251c:	br	x17

0000000000402520 <exit@plt>:
  402520:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402524:	ldr	x17, [x16, #72]
  402528:	add	x16, x16, #0x48
  40252c:	br	x17

0000000000402530 <sbrk@plt>:
  402530:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402534:	ldr	x17, [x16, #80]
  402538:	add	x16, x16, #0x50
  40253c:	br	x17

0000000000402540 <strnlen@plt>:
  402540:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402544:	ldr	x17, [x16, #88]
  402548:	add	x16, x16, #0x58
  40254c:	br	x17

0000000000402550 <strtod@plt>:
  402550:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402554:	ldr	x17, [x16, #96]
  402558:	add	x16, x16, #0x60
  40255c:	br	x17

0000000000402560 <iconv_close@plt>:
  402560:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402564:	ldr	x17, [x16, #104]
  402568:	add	x16, x16, #0x68
  40256c:	br	x17

0000000000402570 <setbuf@plt>:
  402570:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402574:	ldr	x17, [x16, #112]
  402578:	add	x16, x16, #0x70
  40257c:	br	x17

0000000000402580 <remove@plt>:
  402580:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402584:	ldr	x17, [x16, #120]
  402588:	add	x16, x16, #0x78
  40258c:	br	x17

0000000000402590 <readlink@plt>:
  402590:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402594:	ldr	x17, [x16, #128]
  402598:	add	x16, x16, #0x80
  40259c:	br	x17

00000000004025a0 <ftell@plt>:
  4025a0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #136]
  4025a8:	add	x16, x16, #0x88
  4025ac:	br	x17

00000000004025b0 <sprintf@plt>:
  4025b0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #144]
  4025b8:	add	x16, x16, #0x90
  4025bc:	br	x17

00000000004025c0 <opendir@plt>:
  4025c0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #152]
  4025c8:	add	x16, x16, #0x98
  4025cc:	br	x17

00000000004025d0 <__cxa_atexit@plt>:
  4025d0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #160]
  4025d8:	add	x16, x16, #0xa0
  4025dc:	br	x17

00000000004025e0 <fputc@plt>:
  4025e0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #168]
  4025e8:	add	x16, x16, #0xa8
  4025ec:	br	x17

00000000004025f0 <qsort@plt>:
  4025f0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #176]
  4025f8:	add	x16, x16, #0xb0
  4025fc:	br	x17

0000000000402600 <snprintf@plt>:
  402600:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402604:	ldr	x17, [x16, #184]
  402608:	add	x16, x16, #0xb8
  40260c:	br	x17

0000000000402610 <localtime@plt>:
  402610:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402614:	ldr	x17, [x16, #192]
  402618:	add	x16, x16, #0xc0
  40261c:	br	x17

0000000000402620 <fclose@plt>:
  402620:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402624:	ldr	x17, [x16, #200]
  402628:	add	x16, x16, #0xc8
  40262c:	br	x17

0000000000402630 <getpid@plt>:
  402630:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402634:	ldr	x17, [x16, #208]
  402638:	add	x16, x16, #0xd0
  40263c:	br	x17

0000000000402640 <nl_langinfo@plt>:
  402640:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402644:	ldr	x17, [x16, #216]
  402648:	add	x16, x16, #0xd8
  40264c:	br	x17

0000000000402650 <fopen@plt>:
  402650:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402654:	ldr	x17, [x16, #224]
  402658:	add	x16, x16, #0xe0
  40265c:	br	x17

0000000000402660 <time@plt>:
  402660:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402664:	ldr	x17, [x16, #232]
  402668:	add	x16, x16, #0xe8
  40266c:	br	x17

0000000000402670 <malloc@plt>:
  402670:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402674:	ldr	x17, [x16, #240]
  402678:	add	x16, x16, #0xf0
  40267c:	br	x17

0000000000402680 <open@plt>:
  402680:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402684:	ldr	x17, [x16, #248]
  402688:	add	x16, x16, #0xf8
  40268c:	br	x17

0000000000402690 <wcswidth@plt>:
  402690:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402694:	ldr	x17, [x16, #256]
  402698:	add	x16, x16, #0x100
  40269c:	br	x17

00000000004026a0 <strncmp@plt>:
  4026a0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #264]
  4026a8:	add	x16, x16, #0x108
  4026ac:	br	x17

00000000004026b0 <bindtextdomain@plt>:
  4026b0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #272]
  4026b8:	add	x16, x16, #0x110
  4026bc:	br	x17

00000000004026c0 <fileno_unlocked@plt>:
  4026c0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #280]
  4026c8:	add	x16, x16, #0x118
  4026cc:	br	x17

00000000004026d0 <__libc_start_main@plt>:
  4026d0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #288]
  4026d8:	add	x16, x16, #0x120
  4026dc:	br	x17

00000000004026e0 <strcat@plt>:
  4026e0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #296]
  4026e8:	add	x16, x16, #0x128
  4026ec:	br	x17

00000000004026f0 <memset@plt>:
  4026f0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #304]
  4026f8:	add	x16, x16, #0x130
  4026fc:	br	x17

0000000000402700 <fdopen@plt>:
  402700:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402704:	ldr	x17, [x16, #312]
  402708:	add	x16, x16, #0x138
  40270c:	br	x17

0000000000402710 <calloc@plt>:
  402710:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402714:	ldr	x17, [x16, #320]
  402718:	add	x16, x16, #0x140
  40271c:	br	x17

0000000000402720 <strcasecmp@plt>:
  402720:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402724:	ldr	x17, [x16, #328]
  402728:	add	x16, x16, #0x148
  40272c:	br	x17

0000000000402730 <gmtime@plt>:
  402730:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402734:	ldr	x17, [x16, #336]
  402738:	add	x16, x16, #0x150
  40273c:	br	x17

0000000000402740 <readdir@plt>:
  402740:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402744:	ldr	x17, [x16, #344]
  402748:	add	x16, x16, #0x158
  40274c:	br	x17

0000000000402750 <realloc@plt>:
  402750:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402754:	ldr	x17, [x16, #352]
  402758:	add	x16, x16, #0x160
  40275c:	br	x17

0000000000402760 <getpagesize@plt>:
  402760:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402764:	ldr	x17, [x16, #360]
  402768:	add	x16, x16, #0x168
  40276c:	br	x17

0000000000402770 <strdup@plt>:
  402770:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402774:	ldr	x17, [x16, #368]
  402778:	add	x16, x16, #0x170
  40277c:	br	x17

0000000000402780 <closedir@plt>:
  402780:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402784:	ldr	x17, [x16, #376]
  402788:	add	x16, x16, #0x178
  40278c:	br	x17

0000000000402790 <strerror@plt>:
  402790:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402794:	ldr	x17, [x16, #384]
  402798:	add	x16, x16, #0x180
  40279c:	br	x17

00000000004027a0 <close@plt>:
  4027a0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #392]
  4027a8:	add	x16, x16, #0x188
  4027ac:	br	x17

00000000004027b0 <strrchr@plt>:
  4027b0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #400]
  4027b8:	add	x16, x16, #0x190
  4027bc:	br	x17

00000000004027c0 <__gmon_start__@plt>:
  4027c0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #408]
  4027c8:	add	x16, x16, #0x198
  4027cc:	br	x17

00000000004027d0 <write@plt>:
  4027d0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #416]
  4027d8:	add	x16, x16, #0x1a0
  4027dc:	br	x17

00000000004027e0 <fseek@plt>:
  4027e0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #424]
  4027e8:	add	x16, x16, #0x1a8
  4027ec:	br	x17

00000000004027f0 <abort@plt>:
  4027f0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #432]
  4027f8:	add	x16, x16, #0x1b0
  4027fc:	br	x17

0000000000402800 <__overflow@plt>:
  402800:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402804:	ldr	x17, [x16, #440]
  402808:	add	x16, x16, #0x1b8
  40280c:	br	x17

0000000000402810 <access@plt>:
  402810:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402814:	ldr	x17, [x16, #448]
  402818:	add	x16, x16, #0x1c0
  40281c:	br	x17

0000000000402820 <feof@plt>:
  402820:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402824:	ldr	x17, [x16, #456]
  402828:	add	x16, x16, #0x1c8
  40282c:	br	x17

0000000000402830 <puts@plt>:
  402830:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402834:	ldr	x17, [x16, #464]
  402838:	add	x16, x16, #0x1d0
  40283c:	br	x17

0000000000402840 <fread_unlocked@plt>:
  402840:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402844:	ldr	x17, [x16, #472]
  402848:	add	x16, x16, #0x1d8
  40284c:	br	x17

0000000000402850 <memcmp@plt>:
  402850:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402854:	ldr	x17, [x16, #480]
  402858:	add	x16, x16, #0x1e0
  40285c:	br	x17

0000000000402860 <pthread_once@plt>:
  402860:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402864:	ldr	x17, [x16, #488]
  402868:	add	x16, x16, #0x1e8
  40286c:	br	x17

0000000000402870 <textdomain@plt>:
  402870:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402874:	ldr	x17, [x16, #496]
  402878:	add	x16, x16, #0x1f0
  40287c:	br	x17

0000000000402880 <getopt_long@plt>:
  402880:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402884:	ldr	x17, [x16, #504]
  402888:	add	x16, x16, #0x1f8
  40288c:	br	x17

0000000000402890 <strcmp@plt>:
  402890:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402894:	ldr	x17, [x16, #512]
  402898:	add	x16, x16, #0x200
  40289c:	br	x17

00000000004028a0 <iconv@plt>:
  4028a0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #520]
  4028a8:	add	x16, x16, #0x208
  4028ac:	br	x17

00000000004028b0 <mmap@plt>:
  4028b0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #528]
  4028b8:	add	x16, x16, #0x210
  4028bc:	br	x17

00000000004028c0 <strtol@plt>:
  4028c0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #536]
  4028c8:	add	x16, x16, #0x218
  4028cc:	br	x17

00000000004028d0 <fread@plt>:
  4028d0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #544]
  4028d8:	add	x16, x16, #0x220
  4028dc:	br	x17

00000000004028e0 <dl_iterate_phdr@plt>:
  4028e0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #552]
  4028e8:	add	x16, x16, #0x228
  4028ec:	br	x17

00000000004028f0 <chdir@plt>:
  4028f0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #560]
  4028f8:	add	x16, x16, #0x230
  4028fc:	br	x17

0000000000402900 <dgettext@plt>:
  402900:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402904:	ldr	x17, [x16, #568]
  402908:	add	x16, x16, #0x238
  40290c:	br	x17

0000000000402910 <free@plt>:
  402910:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402914:	ldr	x17, [x16, #576]
  402918:	add	x16, x16, #0x240
  40291c:	br	x17

0000000000402920 <ungetc@plt>:
  402920:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402924:	ldr	x17, [x16, #584]
  402928:	add	x16, x16, #0x248
  40292c:	br	x17

0000000000402930 <freopen@plt>:
  402930:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402934:	ldr	x17, [x16, #592]
  402938:	add	x16, x16, #0x250
  40293c:	br	x17

0000000000402940 <strchr@plt>:
  402940:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402944:	ldr	x17, [x16, #600]
  402948:	add	x16, x16, #0x258
  40294c:	br	x17

0000000000402950 <fwrite@plt>:
  402950:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402954:	ldr	x17, [x16, #608]
  402958:	add	x16, x16, #0x260
  40295c:	br	x17

0000000000402960 <fcntl@plt>:
  402960:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402964:	ldr	x17, [x16, #616]
  402968:	add	x16, x16, #0x268
  40296c:	br	x17

0000000000402970 <munmap@plt>:
  402970:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402974:	ldr	x17, [x16, #624]
  402978:	add	x16, x16, #0x270
  40297c:	br	x17

0000000000402980 <fflush@plt>:
  402980:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402984:	ldr	x17, [x16, #632]
  402988:	add	x16, x16, #0x278
  40298c:	br	x17

0000000000402990 <strcpy@plt>:
  402990:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402994:	ldr	x17, [x16, #640]
  402998:	add	x16, x16, #0x280
  40299c:	br	x17

00000000004029a0 <iconv_open@plt>:
  4029a0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #648]
  4029a8:	add	x16, x16, #0x288
  4029ac:	br	x17

00000000004029b0 <vsprintf@plt>:
  4029b0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #656]
  4029b8:	add	x16, x16, #0x290
  4029bc:	br	x17

00000000004029c0 <__lxstat@plt>:
  4029c0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #664]
  4029c8:	add	x16, x16, #0x298
  4029cc:	br	x17

00000000004029d0 <read@plt>:
  4029d0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #672]
  4029d8:	add	x16, x16, #0x2a0
  4029dc:	br	x17

00000000004029e0 <memchr@plt>:
  4029e0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #680]
  4029e8:	add	x16, x16, #0x2a8
  4029ec:	br	x17

00000000004029f0 <isatty@plt>:
  4029f0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #688]
  4029f8:	add	x16, x16, #0x2b0
  4029fc:	br	x17

0000000000402a00 <asctime@plt>:
  402a00:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #696]
  402a08:	add	x16, x16, #0x2b8
  402a0c:	br	x17

0000000000402a10 <__fxstat@plt>:
  402a10:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #704]
  402a18:	add	x16, x16, #0x2c0
  402a1c:	br	x17

0000000000402a20 <strstr@plt>:
  402a20:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #712]
  402a28:	add	x16, x16, #0x2c8
  402a2c:	br	x17

0000000000402a30 <realpath@plt>:
  402a30:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #720]
  402a38:	add	x16, x16, #0x2d0
  402a3c:	br	x17

0000000000402a40 <__isoc99_sscanf@plt>:
  402a40:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #728]
  402a48:	add	x16, x16, #0x2d8
  402a4c:	br	x17

0000000000402a50 <fputs_unlocked@plt>:
  402a50:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #736]
  402a58:	add	x16, x16, #0x2e0
  402a5c:	br	x17

0000000000402a60 <__fsetlocking@plt>:
  402a60:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #744]
  402a68:	add	x16, x16, #0x2e8
  402a6c:	br	x17

0000000000402a70 <strcspn@plt>:
  402a70:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #752]
  402a78:	add	x16, x16, #0x2f0
  402a7c:	br	x17

0000000000402a80 <vfprintf@plt>:
  402a80:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #760]
  402a88:	add	x16, x16, #0x2f8
  402a8c:	br	x17

0000000000402a90 <printf@plt>:
  402a90:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #768]
  402a98:	add	x16, x16, #0x300
  402a9c:	br	x17

0000000000402aa0 <__errno_location@plt>:
  402aa0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #776]
  402aa8:	add	x16, x16, #0x308
  402aac:	br	x17

0000000000402ab0 <getenv@plt>:
  402ab0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #784]
  402ab8:	add	x16, x16, #0x310
  402abc:	br	x17

0000000000402ac0 <__xstat@plt>:
  402ac0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #792]
  402ac8:	add	x16, x16, #0x318
  402acc:	br	x17

0000000000402ad0 <pthread_mutex_lock@plt>:
  402ad0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #800]
  402ad8:	add	x16, x16, #0x320
  402adc:	br	x17

0000000000402ae0 <ftw@plt>:
  402ae0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #808]
  402ae8:	add	x16, x16, #0x328
  402aec:	br	x17

0000000000402af0 <syscall@plt>:
  402af0:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #816]
  402af8:	add	x16, x16, #0x330
  402afc:	br	x17

0000000000402b00 <pthread_mutex_unlock@plt>:
  402b00:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #824]
  402b08:	add	x16, x16, #0x338
  402b0c:	br	x17

0000000000402b10 <gettext@plt>:
  402b10:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #832]
  402b18:	add	x16, x16, #0x340
  402b1c:	br	x17

0000000000402b20 <mkdir@plt>:
  402b20:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #840]
  402b28:	add	x16, x16, #0x348
  402b2c:	br	x17

0000000000402b30 <fprintf@plt>:
  402b30:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #848]
  402b38:	add	x16, x16, #0x350
  402b3c:	br	x17

0000000000402b40 <__uflow@plt>:
  402b40:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #856]
  402b48:	add	x16, x16, #0x358
  402b4c:	br	x17

0000000000402b50 <ioctl@plt>:
  402b50:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #864]
  402b58:	add	x16, x16, #0x360
  402b5c:	br	x17

0000000000402b60 <setlocale@plt>:
  402b60:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #872]
  402b68:	add	x16, x16, #0x368
  402b6c:	br	x17

0000000000402b70 <ferror@plt>:
  402b70:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #880]
  402b78:	add	x16, x16, #0x370
  402b7c:	br	x17

0000000000402b80 <nftw@plt>:
  402b80:	adrp	x16, 48c000 <memcpy@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #888]
  402b88:	add	x16, x16, #0x378
  402b8c:	br	x17

Disassembly of section .text:

0000000000402b90 <_obstack_begin@@Base-0x46cb0>:
  402b90:	stp	x29, x30, [sp, #-16]!
  402b94:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402b98:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402b9c:	mov	x29, sp
  402ba0:	add	x2, x2, #0xfc8
  402ba4:	add	x0, x0, #0xfd8
  402ba8:	mov	w1, #0xc5                  	// #197
  402bac:	bl	402bf0 <nftw@plt+0x70>
  402bb0:	stp	x29, x30, [sp, #-16]!
  402bb4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  402bb8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402bbc:	mov	x29, sp
  402bc0:	add	x2, x2, #0x0
  402bc4:	add	x0, x0, #0xfd8
  402bc8:	mov	w1, #0xbc                  	// #188
  402bcc:	bl	402bf0 <nftw@plt+0x70>
  402bd0:	stp	x29, x30, [sp, #-16]!
  402bd4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  402bd8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402bdc:	mov	x29, sp
  402be0:	add	x2, x2, #0x10
  402be4:	add	x0, x0, #0xfd8
  402be8:	mov	w1, #0xb3                  	// #179
  402bec:	bl	402bf0 <nftw@plt+0x70>
  402bf0:	mov	w7, w1
  402bf4:	mov	x6, x2
  402bf8:	stp	x29, x30, [sp, #-16]!
  402bfc:	mov	x29, sp
  402c00:	bl	407ab8 <nftw@plt+0x4f38>
  402c04:	mov	x2, x0
  402c08:	mov	w3, w7
  402c0c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  402c10:	mov	x1, x6
  402c14:	add	x0, x0, #0xda8
  402c18:	bl	408f08 <nftw@plt+0x6388>
  402c1c:	stp	x29, x30, [sp, #-16]!
  402c20:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  402c24:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  402c28:	mov	x29, sp
  402c2c:	add	x2, x2, #0x2b8
  402c30:	add	x0, x0, #0x290
  402c34:	mov	w1, #0x6bc                 	// #1724
  402c38:	bl	402bf0 <nftw@plt+0x70>
  402c3c:	stp	x29, x30, [sp, #-16]!
  402c40:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  402c44:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  402c48:	mov	x29, sp
  402c4c:	add	x2, x2, #0x428
  402c50:	add	x0, x0, #0x440
  402c54:	mov	w1, #0x36b                 	// #875
  402c58:	bl	402bf0 <nftw@plt+0x70>
  402c5c:	stp	x29, x30, [sp, #-16]!
  402c60:	mov	x0, #0x8                   	// #8
  402c64:	mov	x29, sp
  402c68:	bl	44ad48 <_obstack_memory_used@@Base+0x12e8>
  402c6c:	adrp	x3, 48b000 <_obstack_memory_used@@Base+0x415a0>
  402c70:	adrp	x2, 48b000 <_obstack_memory_used@@Base+0x415a0>
  402c74:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  402c78:	ldr	x3, [x3, #4000]
  402c7c:	ldr	x2, [x2, #4032]
  402c80:	add	x3, x3, #0x10
  402c84:	ldr	x1, [x1, #3928]
  402c88:	str	x3, [x0]
  402c8c:	bl	44bb60 <_obstack_memory_used@@Base+0x2100>
  402c90:	stp	x29, x30, [sp, #-160]!
  402c94:	mov	x29, sp
  402c98:	stp	x19, x20, [sp, #16]
  402c9c:	ldr	x19, [x1]
  402ca0:	str	x1, [sp, #128]
  402ca4:	str	w0, [sp, #140]
  402ca8:	mov	x0, x19
  402cac:	bl	4024f0 <strlen@plt>
  402cb0:	add	x0, x19, x0
  402cb4:	cmp	x19, x0
  402cb8:	b.ne	402ccc <nftw@plt+0x14c>  // b.any
  402cbc:	b	402cd8 <nftw@plt+0x158>
  402cc0:	sub	x0, x0, #0x1
  402cc4:	cmp	x19, x0
  402cc8:	b.eq	402cd8 <nftw@plt+0x158>  // b.none
  402ccc:	ldurb	w1, [x0, #-1]
  402cd0:	cmp	w1, #0x2f
  402cd4:	b.ne	402cc0 <nftw@plt+0x140>  // b.any
  402cd8:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  402cdc:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402ce0:	add	x19, x19, #0xd68
  402ce4:	str	x0, [x20, #1904]
  402ce8:	bl	449ab0 <_obstack_memory_used@@Base+0x50>
  402cec:	bl	448470 <nftw@plt+0x458f0>
  402cf0:	bl	4119f0 <nftw@plt+0xee70>
  402cf4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402cf8:	mov	w1, #0x0                   	// #0
  402cfc:	ldr	x0, [x0, #920]
  402d00:	bl	407540 <nftw@plt+0x49c0>
  402d04:	add	x1, sp, #0x80
  402d08:	add	x0, sp, #0x8c
  402d0c:	bl	447fe8 <nftw@plt+0x45468>
  402d10:	ldr	w0, [sp, #140]
  402d14:	mov	x3, x19
  402d18:	ldr	x1, [sp, #128]
  402d1c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402d20:	mov	x4, #0x0                   	// #0
  402d24:	add	x2, x2, #0xae0
  402d28:	bl	402880 <getopt_long@plt>
  402d2c:	stp	x21, x22, [sp, #32]
  402d30:	cmn	w0, #0x1
  402d34:	stp	x23, x24, [sp, #48]
  402d38:	stp	x25, x26, [sp, #64]
  402d3c:	b.eq	402de0 <nftw@plt+0x260>  // b.none
  402d40:	stp	x27, x28, [sp, #80]
  402d44:	cmp	w0, #0x68
  402d48:	str	d8, [sp, #96]
  402d4c:	b.eq	402dd8 <nftw@plt+0x258>  // b.none
  402d50:	cmp	w0, #0x76
  402d54:	b.ne	402dd0 <nftw@plt+0x250>  // b.any
  402d58:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402d5c:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x135a0>
  402d60:	ldr	x2, [x20, #1904]
  402d64:	add	x4, x4, #0x238
  402d68:	ldr	x0, [x19, #1416]
  402d6c:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x135a0>
  402d70:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402d74:	add	x3, x3, #0x230
  402d78:	add	x1, x1, #0xae8
  402d7c:	bl	407c40 <nftw@plt+0x50c0>
  402d80:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402d84:	add	x0, x0, #0xaf8
  402d88:	ldr	x20, [x19, #1416]
  402d8c:	bl	402b10 <gettext@plt>
  402d90:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402d94:	mov	x2, x0
  402d98:	add	x1, x1, #0xb00
  402d9c:	mov	x0, x20
  402da0:	bl	407c40 <nftw@plt+0x50c0>
  402da4:	ldr	x19, [x19, #1416]
  402da8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402dac:	add	x0, x0, #0xb38
  402db0:	bl	402b10 <gettext@plt>
  402db4:	mov	x1, x0
  402db8:	mov	x0, x19
  402dbc:	bl	407c40 <nftw@plt+0x50c0>
  402dc0:	mov	w0, #0x0                   	// #0
  402dc4:	bl	402520 <exit@plt>
  402dc8:	stp	x27, x28, [sp, #80]
  402dcc:	str	d8, [sp, #96]
  402dd0:	mov	w0, #0x1                   	// #1
  402dd4:	bl	403750 <nftw@plt+0xbd0>
  402dd8:	mov	w0, #0x0                   	// #0
  402ddc:	bl	403750 <nftw@plt+0xbd0>
  402de0:	adrp	x26, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402de4:	ldr	w24, [sp, #140]
  402de8:	ldr	w21, [x26, #1408]
  402dec:	cmp	w24, w21
  402df0:	b.le	402dc8 <nftw@plt+0x248>
  402df4:	ldr	x20, [sp, #128]
  402df8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402dfc:	add	x1, x1, #0xbd8
  402e00:	ldr	x22, [x20, w21, sxtw #3]
  402e04:	add	x20, x20, w21, sxtw #3
  402e08:	mov	x0, x22
  402e0c:	bl	402890 <strcmp@plt>
  402e10:	cbz	w0, 40311c <nftw@plt+0x59c>
  402e14:	mov	x0, x22
  402e18:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402e1c:	add	x1, x1, #0xc18
  402e20:	bl	402890 <strcmp@plt>
  402e24:	mov	w23, w0
  402e28:	cbz	w0, 402eac <nftw@plt+0x32c>
  402e2c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402e30:	mov	x0, x22
  402e34:	add	x1, x1, #0xce8
  402e38:	bl	402890 <strcmp@plt>
  402e3c:	cbnz	w0, 402dc8 <nftw@plt+0x248>
  402e40:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402e44:	adrp	x23, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402e48:	add	x19, x19, #0x180
  402e4c:	add	x22, x22, #0xcf0
  402e50:	add	x23, x23, #0x5a4
  402e54:	sub	w21, w24, w21
  402e58:	str	wzr, [x26, #1408]
  402e5c:	mov	w24, #0x1                   	// #1
  402e60:	adrp	x25, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402e64:	nop
  402e68:	mov	x3, x19
  402e6c:	mov	x2, x22
  402e70:	mov	x1, x20
  402e74:	mov	w0, w21
  402e78:	mov	x4, #0x0                   	// #0
  402e7c:	bl	402880 <getopt_long@plt>
  402e80:	cmn	w0, #0x1
  402e84:	b.eq	403070 <nftw@plt+0x4f0>  // b.none
  402e88:	cmp	w0, #0x6f
  402e8c:	b.eq	403024 <nftw@plt+0x4a4>  // b.none
  402e90:	b.gt	402f54 <nftw@plt+0x3d4>
  402e94:	cmp	w0, #0x66
  402e98:	b.eq	40302c <nftw@plt+0x4ac>  // b.none
  402e9c:	cmp	w0, #0x68
  402ea0:	b.ne	402f44 <nftw@plt+0x3c4>  // b.any
  402ea4:	str	w24, [x23, #12]
  402ea8:	b	402e68 <nftw@plt+0x2e8>
  402eac:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402eb0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402eb4:	add	x22, x22, #0xc20
  402eb8:	add	x1, x1, #0xcb8
  402ebc:	sub	w21, w24, w21
  402ec0:	mov	w0, #0x1                   	// #1
  402ec4:	str	wzr, [x26, #1408]
  402ec8:	mov	w25, #0x0                   	// #0
  402ecc:	mov	x24, #0x0                   	// #0
  402ed0:	stp	x27, x28, [sp, #80]
  402ed4:	adrp	x28, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402ed8:	mov	x27, #0x0                   	// #0
  402edc:	str	x1, [sp, #120]
  402ee0:	add	x1, x28, #0xc90
  402ee4:	str	x1, [sp, #112]
  402ee8:	str	wzr, [sp, #148]
  402eec:	stp	w0, w0, [sp, #152]
  402ef0:	add	x3, x19, #0xe0
  402ef4:	mov	x2, x22
  402ef8:	mov	x1, x20
  402efc:	mov	w0, w21
  402f00:	mov	x4, #0x0                   	// #0
  402f04:	bl	402880 <getopt_long@plt>
  402f08:	cmn	w0, #0x1
  402f0c:	b.eq	403278 <nftw@plt+0x6f8>  // b.none
  402f10:	cmp	w0, #0x73
  402f14:	b.eq	402fa8 <nftw@plt+0x428>  // b.none
  402f18:	b.gt	402f98 <nftw@plt+0x418>
  402f1c:	cmp	w0, #0x6e
  402f20:	b.ne	402f84 <nftw@plt+0x404>  // b.any
  402f24:	cbnz	w25, 403034 <nftw@plt+0x4b4>
  402f28:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402f2c:	mov	w2, #0xa                   	// #10
  402f30:	mov	x1, #0x0                   	// #0
  402f34:	ldr	x0, [x0, #1400]
  402f38:	bl	4028c0 <strtol@plt>
  402f3c:	mov	x24, x0
  402f40:	b	402ef0 <nftw@plt+0x370>
  402f44:	cmp	w0, #0x46
  402f48:	b.ne	403354 <nftw@plt+0x7d4>  // b.any
  402f4c:	str	w24, [x23, #4]
  402f50:	b	402e68 <nftw@plt+0x2e8>
  402f54:	cmp	w0, #0x74
  402f58:	b.ne	402f74 <nftw@plt+0x3f4>  // b.any
  402f5c:	ldr	x0, [x25, #1400]
  402f60:	mov	x1, #0x0                   	// #0
  402f64:	bl	402550 <strtod@plt>
  402f68:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402f6c:	str	d0, [x0, #912]
  402f70:	b	402e68 <nftw@plt+0x2e8>
  402f74:	cmp	w0, #0x76
  402f78:	b.ne	403354 <nftw@plt+0x7d4>  // b.any
  402f7c:	bl	404618 <nftw@plt+0x1a98>
  402f80:	b	402e68 <nftw@plt+0x2e8>
  402f84:	cmp	w0, #0x6f
  402f88:	b.ne	40334c <nftw@plt+0x7cc>  // b.any
  402f8c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402f90:	ldr	x27, [x0, #1400]
  402f94:	b	402ef0 <nftw@plt+0x370>
  402f98:	cmp	w0, #0x76
  402f9c:	b.ne	40334c <nftw@plt+0x7cc>  // b.any
  402fa0:	bl	404618 <nftw@plt+0x1a98>
  402fa4:	b	402ef0 <nftw@plt+0x370>
  402fa8:	adrp	x25, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402fac:	mov	w1, #0x2f                  	// #47
  402fb0:	ldr	x28, [x25, #1400]
  402fb4:	mov	x0, x28
  402fb8:	bl	402940 <strchr@plt>
  402fbc:	cbz	x0, 402fe0 <nftw@plt+0x460>
  402fc0:	mov	x0, x28
  402fc4:	add	x3, sp, #0x9c
  402fc8:	add	x2, sp, #0x98
  402fcc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  402fd0:	add	x1, x1, #0xc60
  402fd4:	bl	402a40 <__isoc99_sscanf@plt>
  402fd8:	cmp	w0, #0x2
  402fdc:	b.eq	4030e8 <nftw@plt+0x568>  // b.none
  402fe0:	ldr	x0, [x25, #1400]
  402fe4:	add	x2, sp, #0x94
  402fe8:	ldr	x1, [sp, #112]
  402fec:	bl	402a40 <__isoc99_sscanf@plt>
  402ff0:	cmp	w0, #0x1
  402ff4:	b.eq	40304c <nftw@plt+0x4cc>  // b.none
  402ff8:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  402ffc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403000:	add	x1, x1, #0xc68
  403004:	ldr	x0, [x0, #1392]
  403008:	bl	407c40 <nftw@plt+0x50c0>
  40300c:	ldr	s0, [sp, #148]
  403010:	fcmpe	s0, #0.0
  403014:	b.mi	403360 <nftw@plt+0x7e0>  // b.first
  403018:	cbnz	x24, 403054 <nftw@plt+0x4d4>
  40301c:	mov	w25, #0x1                   	// #1
  403020:	b	402ef0 <nftw@plt+0x370>
  403024:	str	w24, [x23, #8]
  403028:	b	402e68 <nftw@plt+0x2e8>
  40302c:	str	w24, [x23]
  403030:	b	402e68 <nftw@plt+0x2e8>
  403034:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403038:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  40303c:	add	x1, x1, #0xc28
  403040:	ldr	x0, [x0, #1392]
  403044:	bl	407c40 <nftw@plt+0x50c0>
  403048:	b	402ef0 <nftw@plt+0x370>
  40304c:	str	wzr, [sp, #156]
  403050:	b	40300c <nftw@plt+0x48c>
  403054:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403058:	mov	w25, #0x1                   	// #1
  40305c:	ldr	x1, [sp, #120]
  403060:	mov	x24, #0x0                   	// #0
  403064:	ldr	x0, [x0, #1392]
  403068:	bl	407c40 <nftw@plt+0x50c0>
  40306c:	b	402ef0 <nftw@plt+0x370>
  403070:	ldr	w0, [x26, #1408]
  403074:	sub	w21, w21, w0
  403078:	cmp	w21, #0x2
  40307c:	b.ne	403354 <nftw@plt+0x7d4>  // b.any
  403080:	add	x2, x20, w0, sxtw #3
  403084:	mov	w1, #0x0                   	// #0
  403088:	ldr	x0, [x20, w0, sxtw #3]
  40308c:	ldr	x20, [x2, #8]
  403090:	bl	404628 <nftw@plt+0x1aa8>
  403094:	mov	x19, x0
  403098:	cmp	x20, #0x0
  40309c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4030a0:	b.ne	4030c4 <nftw@plt+0x544>  // b.any
  4030a4:	mov	w23, #0x1                   	// #1
  4030a8:	mov	w0, w23
  4030ac:	ldp	x19, x20, [sp, #16]
  4030b0:	ldp	x21, x22, [sp, #32]
  4030b4:	ldp	x23, x24, [sp, #48]
  4030b8:	ldp	x25, x26, [sp, #64]
  4030bc:	ldp	x29, x30, [sp], #160
  4030c0:	ret
  4030c4:	mov	w1, #0x0                   	// #0
  4030c8:	mov	x0, x20
  4030cc:	bl	404628 <nftw@plt+0x1aa8>
  4030d0:	mov	x1, x0
  4030d4:	cbz	x0, 4030a4 <nftw@plt+0x524>
  4030d8:	mov	x0, x19
  4030dc:	bl	404ba8 <nftw@plt+0x2028>
  4030e0:	mov	w23, w0
  4030e4:	b	4030a8 <nftw@plt+0x528>
  4030e8:	ldr	w0, [sp, #152]
  4030ec:	tbnz	w0, #31, 4030fc <nftw@plt+0x57c>
  4030f0:	ldr	w0, [sp, #156]
  4030f4:	cmp	w0, #0x0
  4030f8:	b.gt	40300c <nftw@plt+0x48c>
  4030fc:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403100:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403104:	add	x1, x1, #0xc68
  403108:	ldr	x0, [x0, #1392]
  40310c:	bl	407c40 <nftw@plt+0x50c0>
  403110:	mov	w0, #0x1                   	// #1
  403114:	stp	w0, w0, [sp, #152]
  403118:	b	40300c <nftw@plt+0x48c>
  40311c:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403120:	adrp	x23, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403124:	add	x19, x19, #0x60
  403128:	add	x22, x22, #0xbe0
  40312c:	add	x23, x23, #0xbe8
  403130:	sub	w21, w24, w21
  403134:	mov	w0, #0x1                   	// #1
  403138:	str	wzr, [x26, #1408]
  40313c:	mov	x24, #0x0                   	// #0
  403140:	stp	w0, w0, [sp, #152]
  403144:	nop
  403148:	mov	x3, x19
  40314c:	mov	x2, x22
  403150:	mov	x1, x20
  403154:	mov	w0, w21
  403158:	mov	x4, #0x0                   	// #0
  40315c:	bl	402880 <getopt_long@plt>
  403160:	cmn	w0, #0x1
  403164:	b.eq	4031f4 <nftw@plt+0x674>  // b.none
  403168:	cmp	w0, #0x76
  40316c:	b.eq	4031d0 <nftw@plt+0x650>  // b.none
  403170:	cmp	w0, #0x77
  403174:	b.ne	4031bc <nftw@plt+0x63c>  // b.any
  403178:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40317c:	add	x3, sp, #0x9c
  403180:	add	x2, sp, #0x98
  403184:	mov	x1, x23
  403188:	ldr	x0, [x0, #1400]
  40318c:	bl	402a40 <__isoc99_sscanf@plt>
  403190:	ldr	w0, [sp, #152]
  403194:	tbnz	w0, #31, 4031a0 <nftw@plt+0x620>
  403198:	ldr	w0, [sp, #156]
  40319c:	tbz	w0, #31, 403148 <nftw@plt+0x5c8>
  4031a0:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4031a4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4031a8:	add	x1, x1, #0xbf0
  4031ac:	stp	x27, x28, [sp, #80]
  4031b0:	ldr	w0, [x0, #2320]
  4031b4:	str	d8, [sp, #96]
  4031b8:	bl	409848 <nftw@plt+0x6cc8>
  4031bc:	cmp	w0, #0x6f
  4031c0:	b.eq	40326c <nftw@plt+0x6ec>  // b.none
  4031c4:	stp	x27, x28, [sp, #80]
  4031c8:	str	d8, [sp, #96]
  4031cc:	bl	4036c0 <nftw@plt+0xb40>
  4031d0:	bl	404618 <nftw@plt+0x1a98>
  4031d4:	mov	x3, x19
  4031d8:	mov	x2, x22
  4031dc:	mov	x1, x20
  4031e0:	mov	w0, w21
  4031e4:	mov	x4, #0x0                   	// #0
  4031e8:	bl	402880 <getopt_long@plt>
  4031ec:	cmn	w0, #0x1
  4031f0:	b.ne	403168 <nftw@plt+0x5e8>  // b.any
  4031f4:	cbz	x24, 403310 <nftw@plt+0x790>
  4031f8:	ldr	w1, [x26, #1408]
  4031fc:	sub	w21, w21, w1
  403200:	cmp	w21, #0x2
  403204:	b.ne	4031c4 <nftw@plt+0x644>  // b.any
  403208:	ldr	x0, [x20, w1, sxtw #3]
  40320c:	add	x20, x20, w1, sxtw #3
  403210:	ldp	w21, w22, [sp, #152]
  403214:	mov	w1, #0x0                   	// #0
  403218:	ldr	x20, [x20, #8]
  40321c:	bl	404628 <nftw@plt+0x1aa8>
  403220:	mov	x19, x0
  403224:	cbz	x0, 4030a4 <nftw@plt+0x524>
  403228:	cbz	x20, 403258 <nftw@plt+0x6d8>
  40322c:	mov	w1, #0x0                   	// #0
  403230:	mov	x0, x20
  403234:	bl	404628 <nftw@plt+0x1aa8>
  403238:	mov	x1, x0
  40323c:	cbz	x0, 4030a4 <nftw@plt+0x524>
  403240:	mov	w3, w22
  403244:	mov	w2, w21
  403248:	mov	x0, x19
  40324c:	bl	404768 <nftw@plt+0x1be8>
  403250:	mov	w23, w0
  403254:	cbnz	w0, 4030a8 <nftw@plt+0x528>
  403258:	mov	x1, x19
  40325c:	mov	x0, x24
  403260:	mov	w23, #0x0                   	// #0
  403264:	bl	403808 <nftw@plt+0xc88>
  403268:	b	4030a8 <nftw@plt+0x528>
  40326c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403270:	ldr	x24, [x0, #1400]
  403274:	b	403148 <nftw@plt+0x5c8>
  403278:	cbz	x27, 40331c <nftw@plt+0x79c>
  40327c:	ldr	w0, [x26, #1408]
  403280:	sub	w21, w21, w0
  403284:	cmp	w21, #0x1
  403288:	b.ne	40334c <nftw@plt+0x7cc>  // b.any
  40328c:	ldr	w21, [sp, #156]
  403290:	ldr	x0, [x20, w0, sxtw #3]
  403294:	cmp	w21, #0x0
  403298:	b.le	4032d4 <nftw@plt+0x754>
  40329c:	ldr	w20, [sp, #152]
  4032a0:	mov	w1, #0x0                   	// #0
  4032a4:	bl	404628 <nftw@plt+0x1aa8>
  4032a8:	mov	x19, x0
  4032ac:	cbz	x0, 40332c <nftw@plt+0x7ac>
  4032b0:	movi	v0.2s, #0x0
  4032b4:	mov	w2, w21
  4032b8:	mov	w1, w20
  4032bc:	bl	404978 <nftw@plt+0x1df8>
  4032c0:	mov	x0, x27
  4032c4:	mov	x1, x19
  4032c8:	bl	403808 <nftw@plt+0xc88>
  4032cc:	ldp	x27, x28, [sp, #80]
  4032d0:	b	4030a8 <nftw@plt+0x528>
  4032d4:	str	d8, [sp, #96]
  4032d8:	mov	w1, #0x0                   	// #0
  4032dc:	ldr	s8, [sp, #148]
  4032e0:	bl	404628 <nftw@plt+0x1aa8>
  4032e4:	mov	x19, x0
  4032e8:	cbz	x0, 403328 <nftw@plt+0x7a8>
  4032ec:	cbz	x24, 403338 <nftw@plt+0x7b8>
  4032f0:	mov	x1, x24
  4032f4:	bl	404aa0 <nftw@plt+0x1f20>
  4032f8:	mov	x0, x27
  4032fc:	mov	x1, x19
  403300:	bl	403808 <nftw@plt+0xc88>
  403304:	ldp	x27, x28, [sp, #80]
  403308:	ldr	d8, [sp, #96]
  40330c:	b	4030a8 <nftw@plt+0x528>
  403310:	adrp	x24, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403314:	add	x24, x24, #0xac0
  403318:	b	4031f8 <nftw@plt+0x678>
  40331c:	adrp	x27, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403320:	add	x27, x27, #0xad0
  403324:	b	40327c <nftw@plt+0x6fc>
  403328:	ldr	d8, [sp, #96]
  40332c:	mov	w23, #0x1                   	// #1
  403330:	ldp	x27, x28, [sp, #80]
  403334:	b	4030a8 <nftw@plt+0x528>
  403338:	fmov	s0, s8
  40333c:	mov	w2, #0x0                   	// #0
  403340:	mov	w1, #0x0                   	// #0
  403344:	bl	404978 <nftw@plt+0x1df8>
  403348:	b	4032f8 <nftw@plt+0x778>
  40334c:	str	d8, [sp, #96]
  403350:	bl	4036f0 <nftw@plt+0xb70>
  403354:	stp	x27, x28, [sp, #80]
  403358:	str	d8, [sp, #96]
  40335c:	bl	403720 <nftw@plt+0xba0>
  403360:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  403364:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403368:	add	x1, x1, #0xc98
  40336c:	str	d8, [sp, #96]
  403370:	ldr	w0, [x0, #2320]
  403374:	bl	409848 <nftw@plt+0x6cc8>
  403378:	stp	x29, x30, [sp, #-32]!
  40337c:	mov	x29, sp
  403380:	str	x19, [sp, #16]
  403384:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  403388:	add	x19, x19, #0x8b8
  40338c:	mov	x0, x19
  403390:	bl	412ba0 <nftw@plt+0x10020>
  403394:	mov	x1, x19
  403398:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40339c:	ldr	x19, [sp, #16]
  4033a0:	add	x2, x2, #0x388
  4033a4:	ldp	x29, x30, [sp], #32
  4033a8:	adrp	x0, 412000 <nftw@plt+0xf480>
  4033ac:	add	x0, x0, #0x7c8
  4033b0:	b	4025d0 <__cxa_atexit@plt>
  4033b4:	nop
  4033b8:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4033bc:	str	xzr, [x0, #2392]
  4033c0:	ret
  4033c4:	nop
  4033c8:	stp	x29, x30, [sp, #-32]!
  4033cc:	mov	x29, sp
  4033d0:	stp	x19, x20, [sp, #16]
  4033d4:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4033d8:	add	x19, x19, #0xab0
  4033dc:	mov	x20, #0x1c00                	// #7168
  4033e0:	movk	x20, #0x1, lsl #16
  4033e4:	mov	x0, x20
  4033e8:	stp	xzr, xzr, [x19]
  4033ec:	stp	xzr, xzr, [x19, #16]
  4033f0:	stp	xzr, xzr, [x19, #32]
  4033f4:	str	x20, [x19, #64]
  4033f8:	bl	402670 <malloc@plt>
  4033fc:	str	x0, [x19, #56]
  403400:	cbz	x0, 403418 <nftw@plt+0x898>
  403404:	stp	x20, xzr, [x0]
  403408:	str	x0, [x19, #48]
  40340c:	ldp	x19, x20, [sp, #16]
  403410:	ldp	x29, x30, [sp], #32
  403414:	ret
  403418:	str	xzr, [x19, #48]
  40341c:	str	xzr, [x19, #64]
  403420:	b	40340c <nftw@plt+0x88c>
  403424:	mov	x29, #0x0                   	// #0
  403428:	mov	x30, #0x0                   	// #0
  40342c:	mov	x5, x0
  403430:	ldr	x1, [sp]
  403434:	add	x2, sp, #0x8
  403438:	mov	x6, sp
  40343c:	movz	x0, #0x0, lsl #48
  403440:	movk	x0, #0x0, lsl #32
  403444:	movk	x0, #0x40, lsl #16
  403448:	movk	x0, #0x2c90
  40344c:	movz	x3, #0x0, lsl #48
  403450:	movk	x3, #0x0, lsl #32
  403454:	movk	x3, #0x45, lsl #16
  403458:	movk	x3, #0xa438
  40345c:	movz	x4, #0x0, lsl #48
  403460:	movk	x4, #0x0, lsl #32
  403464:	movk	x4, #0x45, lsl #16
  403468:	movk	x4, #0xa4b8
  40346c:	bl	4026d0 <__libc_start_main@plt>
  403470:	bl	4027f0 <abort@plt>
  403474:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x415a0>
  403478:	ldr	x0, [x0, #3960]
  40347c:	cbz	x0, 403484 <nftw@plt+0x904>
  403480:	b	4027c0 <__gmon_start__@plt>
  403484:	ret
  403488:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40348c:	add	x0, x0, #0x570
  403490:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403494:	add	x1, x1, #0x570
  403498:	cmp	x1, x0
  40349c:	b.eq	4034b4 <nftw@plt+0x934>  // b.none
  4034a0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4034a4:	ldr	x1, [x1, #1240]
  4034a8:	cbz	x1, 4034b4 <nftw@plt+0x934>
  4034ac:	mov	x16, x1
  4034b0:	br	x16
  4034b4:	ret
  4034b8:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4034bc:	add	x0, x0, #0x570
  4034c0:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4034c4:	add	x1, x1, #0x570
  4034c8:	sub	x1, x1, x0
  4034cc:	lsr	x2, x1, #63
  4034d0:	add	x1, x2, x1, asr #3
  4034d4:	cmp	xzr, x1, asr #1
  4034d8:	asr	x1, x1, #1
  4034dc:	b.eq	4034f4 <nftw@plt+0x974>  // b.none
  4034e0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4034e4:	ldr	x2, [x2, #1248]
  4034e8:	cbz	x2, 4034f4 <nftw@plt+0x974>
  4034ec:	mov	x16, x2
  4034f0:	br	x16
  4034f4:	ret
  4034f8:	stp	x29, x30, [sp, #-32]!
  4034fc:	mov	x29, sp
  403500:	str	x19, [sp, #16]
  403504:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403508:	ldrb	w0, [x19, #1440]
  40350c:	cbnz	w0, 40351c <nftw@plt+0x99c>
  403510:	bl	403488 <nftw@plt+0x908>
  403514:	mov	w0, #0x1                   	// #1
  403518:	strb	w0, [x19, #1440]
  40351c:	ldr	x19, [sp, #16]
  403520:	ldp	x29, x30, [sp], #32
  403524:	ret
  403528:	b	4034b8 <nftw@plt+0x938>
  40352c:	nop
  403530:	stp	x29, x30, [sp, #-32]!
  403534:	mov	x29, sp
  403538:	str	x19, [sp, #16]
  40353c:	cbz	w0, 403590 <nftw@plt+0xa10>
  403540:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403544:	ldr	x19, [x0, #1392]
  403548:	mov	x0, x19
  40354c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403550:	add	x1, x1, #0x4e8
  403554:	bl	407c40 <nftw@plt+0x50c0>
  403558:	mov	x0, x19
  40355c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403560:	add	x1, x1, #0x530
  403564:	bl	407c40 <nftw@plt+0x50c0>
  403568:	mov	x0, x19
  40356c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403570:	add	x1, x1, #0x570
  403574:	bl	407c40 <nftw@plt+0x50c0>
  403578:	mov	x0, x19
  40357c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403580:	ldr	x19, [sp, #16]
  403584:	add	x1, x1, #0x5a8
  403588:	ldp	x29, x30, [sp], #32
  40358c:	b	407c40 <nftw@plt+0x50c0>
  403590:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403594:	ldr	x19, [x0, #1416]
  403598:	b	403548 <nftw@plt+0x9c8>
  40359c:	nop
  4035a0:	stp	x29, x30, [sp, #-32]!
  4035a4:	mov	x29, sp
  4035a8:	str	x19, [sp, #16]
  4035ac:	cbz	w0, 403610 <nftw@plt+0xa90>
  4035b0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4035b4:	ldr	x19, [x0, #1392]
  4035b8:	mov	x0, x19
  4035bc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4035c0:	add	x1, x1, #0x5f8
  4035c4:	bl	407c40 <nftw@plt+0x50c0>
  4035c8:	mov	x0, x19
  4035cc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4035d0:	add	x1, x1, #0x640
  4035d4:	bl	407c40 <nftw@plt+0x50c0>
  4035d8:	mov	x0, x19
  4035dc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4035e0:	add	x1, x1, #0x530
  4035e4:	bl	407c40 <nftw@plt+0x50c0>
  4035e8:	mov	x0, x19
  4035ec:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4035f0:	add	x1, x1, #0x680
  4035f4:	bl	407c40 <nftw@plt+0x50c0>
  4035f8:	mov	x0, x19
  4035fc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403600:	ldr	x19, [sp, #16]
  403604:	add	x1, x1, #0x570
  403608:	ldp	x29, x30, [sp], #32
  40360c:	b	407c40 <nftw@plt+0x50c0>
  403610:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403614:	ldr	x19, [x0, #1416]
  403618:	b	4035b8 <nftw@plt+0xa38>
  40361c:	nop
  403620:	stp	x29, x30, [sp, #-32]!
  403624:	mov	x29, sp
  403628:	str	x19, [sp, #16]
  40362c:	cbz	w0, 4036b0 <nftw@plt+0xb30>
  403630:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403634:	ldr	x19, [x0, #1392]
  403638:	mov	x0, x19
  40363c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403640:	add	x1, x1, #0x6c8
  403644:	bl	407c40 <nftw@plt+0x50c0>
  403648:	mov	x0, x19
  40364c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403650:	add	x1, x1, #0x718
  403654:	bl	407c40 <nftw@plt+0x50c0>
  403658:	mov	x0, x19
  40365c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403660:	add	x1, x1, #0x760
  403664:	bl	407c40 <nftw@plt+0x50c0>
  403668:	mov	x0, x19
  40366c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403670:	add	x1, x1, #0x7a0
  403674:	bl	407c40 <nftw@plt+0x50c0>
  403678:	mov	x0, x19
  40367c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403680:	add	x1, x1, #0x7f8
  403684:	bl	407c40 <nftw@plt+0x50c0>
  403688:	mov	x0, x19
  40368c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403690:	add	x1, x1, #0x840
  403694:	bl	407c40 <nftw@plt+0x50c0>
  403698:	mov	x0, x19
  40369c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4036a0:	ldr	x19, [sp, #16]
  4036a4:	add	x1, x1, #0x570
  4036a8:	ldp	x29, x30, [sp], #32
  4036ac:	b	407c40 <nftw@plt+0x50c0>
  4036b0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4036b4:	ldr	x19, [x0, #1416]
  4036b8:	b	403638 <nftw@plt+0xab8>
  4036bc:	nop
  4036c0:	stp	x29, x30, [sp, #-16]!
  4036c4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4036c8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4036cc:	mov	x29, sp
  4036d0:	ldr	x0, [x0, #1392]
  4036d4:	add	x1, x1, #0x888
  4036d8:	bl	407c40 <nftw@plt+0x50c0>
  4036dc:	mov	w0, #0x1                   	// #1
  4036e0:	bl	403530 <nftw@plt+0x9b0>
  4036e4:	mov	w0, #0x1                   	// #1
  4036e8:	bl	402520 <exit@plt>
  4036ec:	nop
  4036f0:	stp	x29, x30, [sp, #-16]!
  4036f4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4036f8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4036fc:	mov	x29, sp
  403700:	ldr	x0, [x0, #1392]
  403704:	add	x1, x1, #0x8a0
  403708:	bl	407c40 <nftw@plt+0x50c0>
  40370c:	mov	w0, #0x1                   	// #1
  403710:	bl	4035a0 <nftw@plt+0xa20>
  403714:	mov	w0, #0x1                   	// #1
  403718:	bl	402520 <exit@plt>
  40371c:	nop
  403720:	stp	x29, x30, [sp, #-16]!
  403724:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403728:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  40372c:	mov	x29, sp
  403730:	ldr	x0, [x0, #1392]
  403734:	add	x1, x1, #0x8c0
  403738:	bl	407c40 <nftw@plt+0x50c0>
  40373c:	mov	w0, #0x1                   	// #1
  403740:	bl	403620 <nftw@plt+0xaa0>
  403744:	mov	w0, #0x1                   	// #1
  403748:	bl	402520 <exit@plt>
  40374c:	nop
  403750:	stp	x29, x30, [sp, #-48]!
  403754:	mov	x29, sp
  403758:	stp	x19, x20, [sp, #16]
  40375c:	mov	w19, w0
  403760:	str	x21, [sp, #32]
  403764:	cbz	w0, 4037f4 <nftw@plt+0xc74>
  403768:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40376c:	mov	w21, w19
  403770:	ldr	x20, [x0, #1392]
  403774:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  403778:	mov	x0, x20
  40377c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403780:	ldr	x2, [x2, #1904]
  403784:	add	x1, x1, #0x8e0
  403788:	bl	407c40 <nftw@plt+0x50c0>
  40378c:	mov	x0, x20
  403790:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403794:	add	x1, x1, #0x910
  403798:	bl	407c40 <nftw@plt+0x50c0>
  40379c:	mov	x0, x20
  4037a0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4037a4:	add	x1, x1, #0x938
  4037a8:	bl	407c40 <nftw@plt+0x50c0>
  4037ac:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4037b0:	add	x1, x1, #0x980
  4037b4:	mov	x0, x20
  4037b8:	bl	407c40 <nftw@plt+0x50c0>
  4037bc:	mov	w0, w19
  4037c0:	bl	403530 <nftw@plt+0x9b0>
  4037c4:	mov	w0, w19
  4037c8:	bl	4035a0 <nftw@plt+0xa20>
  4037cc:	mov	w0, w19
  4037d0:	bl	403620 <nftw@plt+0xaa0>
  4037d4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4037d8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4037dc:	add	x2, x2, #0x240
  4037e0:	add	x1, x1, #0x9d0
  4037e4:	mov	x0, x20
  4037e8:	bl	407c40 <nftw@plt+0x50c0>
  4037ec:	mov	w0, w21
  4037f0:	bl	402520 <exit@plt>
  4037f4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4037f8:	mov	w21, #0x0                   	// #0
  4037fc:	ldr	x20, [x0, #1416]
  403800:	b	403774 <nftw@plt+0xbf4>
  403804:	nop
  403808:	stp	x29, x30, [sp, #-48]!
  40380c:	mov	x29, sp
  403810:	stp	x19, x20, [sp, #16]
  403814:	mov	x20, x0
  403818:	stp	x21, x22, [sp, #32]
  40381c:	mov	x22, x1
  403820:	mov	w1, #0x0                   	// #0
  403824:	bl	402810 <access@plt>
  403828:	cmn	w0, #0x1
  40382c:	b.eq	4038b0 <nftw@plt+0xd30>  // b.none
  403830:	adrp	x1, 403000 <nftw@plt+0x480>
  403834:	mov	x0, x20
  403838:	add	x1, x1, #0x950
  40383c:	mov	w3, #0x9                   	// #9
  403840:	mov	w2, #0x40                  	// #64
  403844:	bl	402b80 <nftw@plt>
  403848:	mov	x1, #0x0                   	// #0
  40384c:	mov	x0, #0x0                   	// #0
  403850:	bl	4024c0 <getcwd@plt>
  403854:	mov	x19, x0
  403858:	cbz	x0, 4038ec <nftw@plt+0xd6c>
  40385c:	mov	x0, x20
  403860:	bl	4028f0 <chdir@plt>
  403864:	cbnz	w0, 403934 <nftw@plt+0xdb4>
  403868:	mov	x0, x22
  40386c:	bl	406b30 <nftw@plt+0x3fb0>
  403870:	mov	w1, #0x0                   	// #0
  403874:	mov	x21, x0
  403878:	bl	402810 <access@plt>
  40387c:	cmn	w0, #0x1
  403880:	b.ne	403918 <nftw@plt+0xd98>  // b.any
  403884:	mov	w1, #0x0                   	// #0
  403888:	mov	x0, x22
  40388c:	bl	405dc8 <nftw@plt+0x3248>
  403890:	mov	x0, x19
  403894:	bl	4028f0 <chdir@plt>
  403898:	cbnz	w0, 403900 <nftw@plt+0xd80>
  40389c:	mov	x0, x19
  4038a0:	ldp	x19, x20, [sp, #16]
  4038a4:	ldp	x21, x22, [sp, #32]
  4038a8:	ldp	x29, x30, [sp], #48
  4038ac:	b	402910 <free@plt>
  4038b0:	mov	x0, x20
  4038b4:	mov	w1, #0x1ff                 	// #511
  4038b8:	bl	402b20 <mkdir@plt>
  4038bc:	cmn	w0, #0x1
  4038c0:	b.ne	403848 <nftw@plt+0xcc8>  // b.any
  4038c4:	bl	402aa0 <__errno_location@plt>
  4038c8:	ldr	w0, [x0]
  4038cc:	cmp	w0, #0x11
  4038d0:	b.eq	403848 <nftw@plt+0xcc8>  // b.none
  4038d4:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4038d8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4038dc:	mov	x2, x20
  4038e0:	add	x1, x1, #0xa08
  4038e4:	ldr	w0, [x0, #2320]
  4038e8:	bl	409848 <nftw@plt+0x6cc8>
  4038ec:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4038f0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4038f4:	add	x1, x1, #0xa28
  4038f8:	ldr	w0, [x0, #2320]
  4038fc:	bl	409848 <nftw@plt+0x6cc8>
  403900:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  403904:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403908:	mov	x2, x19
  40390c:	add	x1, x1, #0xa50
  403910:	ldr	w0, [x0, #2320]
  403914:	bl	409848 <nftw@plt+0x6cc8>
  403918:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  40391c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403920:	mov	x3, x20
  403924:	mov	x2, x21
  403928:	ldr	w0, [x0, #2320]
  40392c:	add	x1, x1, #0xa70
  403930:	bl	409848 <nftw@plt+0x6cc8>
  403934:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  403938:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  40393c:	mov	x2, x20
  403940:	add	x1, x1, #0xa50
  403944:	ldr	w0, [x0, #2320]
  403948:	bl	409848 <nftw@plt+0x6cc8>
  40394c:	nop
  403950:	stp	x29, x30, [sp, #-32]!
  403954:	mov	x29, sp
  403958:	str	x19, [sp, #16]
  40395c:	mov	x19, x0
  403960:	bl	4024f0 <strlen@plt>
  403964:	cmp	w0, #0x5
  403968:	b.le	403988 <nftw@plt+0xe08>
  40396c:	sub	w0, w0, #0x5
  403970:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403974:	mov	x2, #0x5                   	// #5
  403978:	add	x1, x1, #0xaa0
  40397c:	add	x0, x19, w0, sxtw
  403980:	bl	4026a0 <strncmp@plt>
  403984:	cbz	w0, 403998 <nftw@plt+0xe18>
  403988:	mov	w0, #0x0                   	// #0
  40398c:	ldr	x19, [sp, #16]
  403990:	ldp	x29, x30, [sp], #32
  403994:	ret
  403998:	mov	x0, x19
  40399c:	bl	402580 <remove@plt>
  4039a0:	cbz	w0, 403988 <nftw@plt+0xe08>
  4039a4:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4039a8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4039ac:	mov	x2, x19
  4039b0:	add	x1, x1, #0xaa8
  4039b4:	ldr	w0, [x0, #2320]
  4039b8:	bl	409848 <nftw@plt+0x6cc8>
  4039bc:	nop
  4039c0:	cbz	w1, 403a28 <nftw@plt+0xea8>
  4039c4:	stp	x29, x30, [sp, #-64]!
  4039c8:	mov	x29, sp
  4039cc:	stp	x19, x20, [sp, #16]
  4039d0:	sub	w20, w1, #0x1
  4039d4:	add	x20, x20, #0x1
  4039d8:	mov	x19, x0
  4039dc:	stp	x21, x22, [sp, #32]
  4039e0:	add	x20, x0, x20, lsl #3
  4039e4:	mov	x21, x2
  4039e8:	mov	x22, x3
  4039ec:	str	x23, [sp, #48]
  4039f0:	mov	x23, x4
  4039f4:	nop
  4039f8:	ldr	x0, [x19]
  4039fc:	mov	x2, x23
  403a00:	mov	x1, x22
  403a04:	blr	x21
  403a08:	str	x0, [x19], #8
  403a0c:	cmp	x19, x20
  403a10:	b.ne	4039f8 <nftw@plt+0xe78>  // b.any
  403a14:	ldp	x19, x20, [sp, #16]
  403a18:	ldp	x21, x22, [sp, #32]
  403a1c:	ldr	x23, [sp, #48]
  403a20:	ldp	x29, x30, [sp], #64
  403a24:	ret
  403a28:	ret
  403a2c:	nop
  403a30:	ret
  403a34:	nop
  403a38:	scvtf	s0, x0
  403a3c:	ldr	s1, [x1]
  403a40:	fmul	s0, s0, s1
  403a44:	fcvtzs	x0, s0
  403a48:	ret
  403a4c:	nop
  403a50:	ldr	w2, [x2]
  403a54:	ldrsw	x3, [x1]
  403a58:	add	w1, w2, w2, lsr #31
  403a5c:	sxtw	x2, w2
  403a60:	asr	w1, w1, #1
  403a64:	add	x1, x0, w1, sxtw
  403a68:	sdiv	x1, x1, x2
  403a6c:	mul	x0, x1, x3
  403a70:	ret
  403a74:	nop
  403a78:	ldr	w7, [x0, #104]
  403a7c:	cbz	w7, 403ae0 <nftw@plt+0xf60>
  403a80:	mov	x3, #0x0                   	// #0
  403a84:	ldr	x8, [x0, #112]
  403a88:	b	403a98 <nftw@plt+0xf18>
  403a8c:	add	x3, x3, #0x1
  403a90:	cmp	w7, w3
  403a94:	b.ls	403ae0 <nftw@plt+0xf60>  // b.plast
  403a98:	ldr	x2, [x8, x3, lsl #3]
  403a9c:	cbz	x2, 403a8c <nftw@plt+0xf0c>
  403aa0:	ldr	x4, [x2]
  403aa4:	cmp	x4, x0
  403aa8:	b.ne	403a8c <nftw@plt+0xf0c>  // b.any
  403aac:	ldr	w5, [x2, #24]
  403ab0:	cbz	w5, 403a8c <nftw@plt+0xf0c>
  403ab4:	ldr	x6, [x2, #32]
  403ab8:	mov	x2, #0x0                   	// #0
  403abc:	b	403ac8 <nftw@plt+0xf48>
  403ac0:	cmp	w5, w2
  403ac4:	b.ls	403a8c <nftw@plt+0xf0c>  // b.plast
  403ac8:	ldr	x4, [x6, x2, lsl #3]
  403acc:	add	x2, x2, #0x1
  403ad0:	cmp	x4, x1
  403ad4:	b.le	403ac0 <nftw@plt+0xf40>
  403ad8:	mov	w0, #0x0                   	// #0
  403adc:	ret
  403ae0:	mov	w0, #0x1                   	// #1
  403ae4:	ret
  403ae8:	stp	x29, x30, [sp, #-112]!
  403aec:	mov	x29, sp
  403af0:	stp	x27, x28, [sp, #80]
  403af4:	mov	x28, x1
  403af8:	ldr	w1, [x0, #104]
  403afc:	stp	x21, x22, [sp, #32]
  403b00:	mov	x22, x0
  403b04:	ldr	w0, [x28, #104]
  403b08:	cmp	w0, w1
  403b0c:	b.ne	403c70 <nftw@plt+0x10f0>  // b.any
  403b10:	cbz	w0, 403c58 <nftw@plt+0x10d8>
  403b14:	stp	x23, x24, [sp, #48]
  403b18:	sub	w23, w0, #0x1
  403b1c:	add	x23, x23, #0x1
  403b20:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403b24:	mov	w24, w2
  403b28:	lsl	x23, x23, #3
  403b2c:	stp	x19, x20, [sp, #16]
  403b30:	mov	x19, #0x0                   	// #0
  403b34:	stp	x25, x26, [sp, #64]
  403b38:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0x115a0>
  403b3c:	add	x26, x5, #0x5b8
  403b40:	add	x25, x25, #0x30
  403b44:	str	wzr, [sp, #108]
  403b48:	b	403b58 <nftw@plt+0xfd8>
  403b4c:	add	x19, x19, #0x8
  403b50:	cmp	x19, x23
  403b54:	b.eq	403bc0 <nftw@plt+0x1040>  // b.none
  403b58:	ldr	x1, [x22, #112]
  403b5c:	ldr	x0, [x28, #112]
  403b60:	ldr	x3, [x1, x19]
  403b64:	ldr	x4, [x0, x19]
  403b68:	cbz	x3, 403b4c <nftw@plt+0xfcc>
  403b6c:	ldr	x0, [x3]
  403b70:	cmp	x4, #0x0
  403b74:	ccmp	x0, x22, #0x0, ne  // ne = any
  403b78:	b.ne	403b4c <nftw@plt+0xfcc>  // b.any
  403b7c:	ldr	x0, [x4]
  403b80:	cmp	x0, x28
  403b84:	b.ne	403b4c <nftw@plt+0xfcc>  // b.any
  403b88:	ldr	w1, [x3, #16]
  403b8c:	ldr	w0, [x4, #16]
  403b90:	cmp	w1, w0
  403b94:	b.eq	403be0 <nftw@plt+0x1060>  // b.none
  403b98:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403b9c:	mov	w3, #0x1                   	// #1
  403ba0:	ldr	x2, [x22, #24]
  403ba4:	mov	x1, x25
  403ba8:	ldr	x0, [x0, #1392]
  403bac:	add	x19, x19, #0x8
  403bb0:	str	w3, [sp, #108]
  403bb4:	bl	407c40 <nftw@plt+0x50c0>
  403bb8:	cmp	x19, x23
  403bbc:	b.ne	403b58 <nftw@plt+0xfd8>  // b.any
  403bc0:	ldr	w0, [sp, #108]
  403bc4:	ldp	x19, x20, [sp, #16]
  403bc8:	ldp	x21, x22, [sp, #32]
  403bcc:	ldp	x23, x24, [sp, #48]
  403bd0:	ldp	x25, x26, [sp, #64]
  403bd4:	ldp	x27, x28, [sp, #80]
  403bd8:	ldp	x29, x30, [sp], #112
  403bdc:	ret
  403be0:	add	x20, x3, #0x18
  403be4:	add	x21, x4, #0x18
  403be8:	mov	x27, #0x20                  	// #32
  403bec:	b	403c30 <nftw@plt+0x10b0>
  403bf0:	cbz	x2, 403c24 <nftw@plt+0x10a4>
  403bf4:	ldr	w1, [x20]
  403bf8:	ldr	w0, [x21]
  403bfc:	cmp	w1, w0
  403c00:	b.ne	403c94 <nftw@plt+0x1114>  // b.any
  403c04:	ldr	x3, [x21, #8]
  403c08:	str	x3, [x26]
  403c0c:	ldr	x0, [x20, #8]
  403c10:	stp	wzr, w1, [x26, #8]
  403c14:	str	w24, [x26, #16]
  403c18:	add	x20, x20, #0x10
  403c1c:	add	x21, x21, #0x10
  403c20:	blr	x2
  403c24:	add	x27, x27, #0x8
  403c28:	cmp	x27, #0x68
  403c2c:	b.eq	403b4c <nftw@plt+0xfcc>  // b.none
  403c30:	ldr	x2, [x22, x27]
  403c34:	ldr	x0, [x28, x27]
  403c38:	cmp	x2, x0
  403c3c:	b.eq	403bf0 <nftw@plt+0x1070>  // b.none
  403c40:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  403c44:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403c48:	add	x2, x2, #0x20
  403c4c:	add	x0, x0, #0xfd8
  403c50:	mov	w1, #0x23b                 	// #571
  403c54:	bl	402bf0 <nftw@plt+0x70>
  403c58:	str	wzr, [sp, #108]
  403c5c:	ldp	x21, x22, [sp, #32]
  403c60:	ldr	w0, [sp, #108]
  403c64:	ldp	x27, x28, [sp, #80]
  403c68:	ldp	x29, x30, [sp], #112
  403c6c:	ret
  403c70:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  403c74:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403c78:	add	x2, x2, #0x20
  403c7c:	add	x0, x0, #0xfd8
  403c80:	mov	w1, #0x220                 	// #544
  403c84:	stp	x19, x20, [sp, #16]
  403c88:	stp	x23, x24, [sp, #48]
  403c8c:	stp	x25, x26, [sp, #64]
  403c90:	bl	402bf0 <nftw@plt+0x70>
  403c94:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  403c98:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403c9c:	add	x2, x2, #0x20
  403ca0:	add	x0, x0, #0xfd8
  403ca4:	mov	w1, #0x23e                 	// #574
  403ca8:	bl	402bf0 <nftw@plt+0x70>
  403cac:	nop
  403cb0:	stp	x29, x30, [sp, #-16]!
  403cb4:	mov	x1, #0x1                   	// #1
  403cb8:	mov	x0, #0x10                  	// #16
  403cbc:	mov	x29, sp
  403cc0:	bl	402710 <calloc@plt>
  403cc4:	ldp	x29, x30, [sp], #16
  403cc8:	b	405bf8 <nftw@plt+0x3078>
  403ccc:	nop
  403cd0:	stp	x29, x30, [sp, #-48]!
  403cd4:	mov	x29, sp
  403cd8:	stp	x19, x20, [sp, #16]
  403cdc:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  403ce0:	mov	w2, #0x2f                  	// #47
  403ce4:	mov	x20, x0
  403ce8:	add	x1, sp, #0x28
  403cec:	strh	w2, [sp, #40]
  403cf0:	bl	402a20 <strstr@plt>
  403cf4:	nop
  403cf8:	bl	4024f0 <strlen@plt>
  403cfc:	mov	x19, x0
  403d00:	add	w19, w19, #0x1
  403d04:	mov	x0, x20
  403d08:	bl	4024f0 <strlen@plt>
  403d0c:	add	x2, x0, #0x2
  403d10:	sub	x2, x2, w19, sxtw
  403d14:	add	x1, sp, #0x28
  403d18:	add	x20, x20, x2
  403d1c:	mov	x0, x20
  403d20:	bl	402a20 <strstr@plt>
  403d24:	cbnz	x0, 403cf8 <nftw@plt+0x1178>
  403d28:	mov	x0, x20
  403d2c:	ldp	x19, x20, [sp, #16]
  403d30:	ldp	x29, x30, [sp], #48
  403d34:	ret
  403d38:	adrp	x7, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403d3c:	add	x7, x7, #0x5b8
  403d40:	add	x3, x7, #0x18
  403d44:	add	x1, x7, #0x40
  403d48:	add	x6, x7, #0xd0
  403d4c:	mov	w4, #0x0                   	// #0
  403d50:	ldr	w2, [x3]
  403d54:	cbz	w2, 403d70 <nftw@plt+0x11f0>
  403d58:	add	x2, x0, w4, sxtw #4
  403d5c:	ldr	w5, [x1]
  403d60:	add	w4, w4, #0x1
  403d64:	str	w5, [x2, #24]
  403d68:	ldr	x5, [x1, #8]
  403d6c:	str	x5, [x2, #32]
  403d70:	add	x1, x1, #0x10
  403d74:	add	x3, x3, #0x4
  403d78:	cmp	x1, x6
  403d7c:	b.ne	403d50 <nftw@plt+0x11d0>  // b.any
  403d80:	ldr	w0, [x7, #208]
  403d84:	cbnz	w0, 403d90 <nftw@plt+0x1210>
  403d88:	str	w4, [x7, #208]
  403d8c:	ret
  403d90:	cmp	w0, w4
  403d94:	b.ne	403d9c <nftw@plt+0x121c>  // b.any
  403d98:	ret
  403d9c:	stp	x29, x30, [sp, #-16]!
  403da0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  403da4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403da8:	mov	x29, sp
  403dac:	add	x2, x2, #0x58
  403db0:	add	x0, x0, #0xfd8
  403db4:	mov	w1, #0x6f                  	// #111
  403db8:	bl	402bf0 <nftw@plt+0x70>
  403dbc:	nop
  403dc0:	stp	x29, x30, [sp, #-48]!
  403dc4:	mov	x29, sp
  403dc8:	stp	x19, x20, [sp, #16]
  403dcc:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403dd0:	add	x19, x19, #0x5b8
  403dd4:	str	x21, [sp, #32]
  403dd8:	ldr	w0, [x19, #212]
  403ddc:	cbnz	w0, 403e5c <nftw@plt+0x12dc>
  403de0:	mov	x1, #0x1                   	// #1
  403de4:	mov	x0, #0xb8                  	// #184
  403de8:	bl	402710 <calloc@plt>
  403dec:	mov	x20, x0
  403df0:	add	x1, x19, #0x40
  403df4:	add	x2, x19, #0xd0
  403df8:	str	x0, [x19, #216]
  403dfc:	nop
  403e00:	str	wzr, [x1], #16
  403e04:	cmp	x1, x2
  403e08:	b.ne	403e00 <nftw@plt+0x1280>  // b.any
  403e0c:	ldr	x0, [x19, #312]
  403e10:	str	x0, [x20]
  403e14:	str	wzr, [x19, #208]
  403e18:	bl	405aa8 <nftw@plt+0x2f28>
  403e1c:	str	w0, [x20, #8]
  403e20:	ldr	x21, [x19, #216]
  403e24:	bl	405aa8 <nftw@plt+0x2f28>
  403e28:	ldr	x20, [x19, #216]
  403e2c:	str	w0, [x21, #12]
  403e30:	bl	405aa8 <nftw@plt+0x2f28>
  403e34:	str	w0, [x20, #16]
  403e38:	ldr	w1, [x19, #212]
  403e3c:	ldr	w2, [x19, #320]
  403e40:	add	w1, w1, #0x1
  403e44:	str	w1, [x19, #212]
  403e48:	cbnz	w2, 403e90 <nftw@plt+0x1310>
  403e4c:	ldp	x19, x20, [sp, #16]
  403e50:	ldr	x21, [sp, #32]
  403e54:	ldp	x29, x30, [sp], #48
  403e58:	ret
  403e5c:	ldr	x21, [x19, #216]
  403e60:	add	x20, x19, #0xe0
  403e64:	mov	x0, x21
  403e68:	bl	403d38 <nftw@plt+0x11b8>
  403e6c:	ldp	x2, x1, [x19, #248]
  403e70:	sub	x1, x1, x2
  403e74:	cmp	x1, #0x7
  403e78:	b.ls	403eb8 <nftw@plt+0x1338>  // b.plast
  403e7c:	str	x21, [x2]
  403e80:	ldr	x0, [x19, #248]
  403e84:	add	x0, x0, #0x8
  403e88:	str	x0, [x19, #248]
  403e8c:	b	403de0 <nftw@plt+0x1260>
  403e90:	ldr	x2, [x19, #216]
  403e94:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  403e98:	ldp	x19, x20, [sp, #16]
  403e9c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  403ea0:	ldr	x21, [sp, #32]
  403ea4:	add	x1, x1, #0x68
  403ea8:	ldp	x29, x30, [sp], #48
  403eac:	ldr	x0, [x0, #1416]
  403eb0:	ldr	w2, [x2, #8]
  403eb4:	b	407c40 <nftw@plt+0x50c0>
  403eb8:	mov	x0, x20
  403ebc:	mov	x1, #0x8                   	// #8
  403ec0:	bl	449870 <_obstack_newchunk@@Base>
  403ec4:	ldr	x21, [x19, #216]
  403ec8:	ldr	x2, [x19, #248]
  403ecc:	b	403e7c <nftw@plt+0x12fc>
  403ed0:	stp	x29, x30, [sp, #-96]!
  403ed4:	mov	w5, #0x8e39                	// #36409
  403ed8:	movk	w5, #0x38e3, lsl #16
  403edc:	mov	x29, sp
  403ee0:	mul	w5, w1, w5
  403ee4:	stp	x25, x26, [sp, #64]
  403ee8:	mov	x25, x0
  403eec:	mov	w0, #0xc71c                	// #50972
  403ef0:	movk	w0, #0x1c71, lsl #16
  403ef4:	cmp	w5, w0
  403ef8:	b.hi	403f80 <nftw@plt+0x1400>  // b.pmore
  403efc:	stp	x23, x24, [sp, #48]
  403f00:	mov	w24, w1
  403f04:	cbz	w1, 403f70 <nftw@plt+0x13f0>
  403f08:	mov	x23, x3
  403f0c:	add	x26, x25, #0x40
  403f10:	stp	x21, x22, [sp, #32]
  403f14:	mov	x22, x2
  403f18:	mov	w21, #0x1                   	// #1
  403f1c:	str	x27, [sp, #80]
  403f20:	mov	x27, x4
  403f24:	stp	x19, x20, [sp, #16]
  403f28:	ubfiz	x20, x21, #3, #32
  403f2c:	add	x19, x25, x20
  403f30:	add	x20, x26, x20
  403f34:	ldr	x0, [x19, #8]
  403f38:	mov	x2, x27
  403f3c:	mov	x1, x23
  403f40:	add	x19, x19, #0x10
  403f44:	blr	x22
  403f48:	stur	x0, [x19, #-8]
  403f4c:	cmp	x19, x20
  403f50:	b.ne	403f34 <nftw@plt+0x13b4>  // b.any
  403f54:	add	w0, w21, #0x8
  403f58:	add	w21, w21, #0x9
  403f5c:	cmp	w24, w0
  403f60:	b.hi	403f28 <nftw@plt+0x13a8>  // b.pmore
  403f64:	ldp	x19, x20, [sp, #16]
  403f68:	ldp	x21, x22, [sp, #32]
  403f6c:	ldr	x27, [sp, #80]
  403f70:	ldp	x23, x24, [sp, #48]
  403f74:	ldp	x25, x26, [sp, #64]
  403f78:	ldp	x29, x30, [sp], #96
  403f7c:	ret
  403f80:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  403f84:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  403f88:	add	x2, x2, #0x80
  403f8c:	add	x0, x0, #0xfd8
  403f90:	mov	w1, #0x2ef                 	// #751
  403f94:	stp	x19, x20, [sp, #16]
  403f98:	stp	x21, x22, [sp, #32]
  403f9c:	stp	x23, x24, [sp, #48]
  403fa0:	str	x27, [sp, #80]
  403fa4:	bl	402bf0 <nftw@plt+0x70>
  403fa8:	stp	x29, x30, [sp, #-64]!
  403fac:	mov	x29, sp
  403fb0:	stp	x23, x24, [sp, #48]
  403fb4:	mov	w24, #0xaaab                	// #43691
  403fb8:	movk	w24, #0xaaaa, lsl #16
  403fbc:	stp	x19, x20, [sp, #16]
  403fc0:	umull	x24, w1, w24
  403fc4:	stp	x21, x22, [sp, #32]
  403fc8:	lsr	x24, x24, #33
  403fcc:	add	w20, w24, w24, lsl #1
  403fd0:	subs	w20, w1, w20
  403fd4:	b.ne	404040 <nftw@plt+0x14c0>  // b.any
  403fd8:	mov	x19, x0
  403fdc:	mov	x21, x2
  403fe0:	mov	x22, x3
  403fe4:	mov	x23, x4
  403fe8:	cmp	w1, #0x2
  403fec:	b.ls	40402c <nftw@plt+0x14ac>  // b.plast
  403ff0:	ldr	x0, [x19, #8]
  403ff4:	mov	x2, x23
  403ff8:	mov	x1, x22
  403ffc:	add	w20, w20, #0x1
  404000:	add	x19, x19, #0x18
  404004:	blr	x21
  404008:	mov	x1, x0
  40400c:	ldur	x0, [x19, #-8]
  404010:	stur	x1, [x19, #-16]
  404014:	mov	x2, x23
  404018:	mov	x1, x22
  40401c:	blr	x21
  404020:	stur	x0, [x19, #-8]
  404024:	cmp	w24, w20
  404028:	b.hi	403ff0 <nftw@plt+0x1470>  // b.pmore
  40402c:	ldp	x19, x20, [sp, #16]
  404030:	ldp	x21, x22, [sp, #32]
  404034:	ldp	x23, x24, [sp, #48]
  404038:	ldp	x29, x30, [sp], #64
  40403c:	ret
  404040:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404044:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  404048:	add	x2, x2, #0xa0
  40404c:	add	x0, x0, #0xfd8
  404050:	mov	w1, #0x2de                 	// #734
  404054:	bl	402bf0 <nftw@plt+0x70>
  404058:	cbnz	w2, 40430c <nftw@plt+0x178c>
  40405c:	stp	x29, x30, [sp, #-144]!
  404060:	mov	x29, sp
  404064:	stp	x21, x22, [sp, #32]
  404068:	mov	x22, x0
  40406c:	bl	4024f0 <strlen@plt>
  404070:	cmp	w0, #0x5
  404074:	b.le	4042fc <nftw@plt+0x177c>
  404078:	sxtw	x0, w0
  40407c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  404080:	sub	x0, x0, #0x5
  404084:	add	x1, x1, #0xaa0
  404088:	add	x0, x22, x0
  40408c:	bl	402890 <strcmp@plt>
  404090:	cbnz	w0, 4042fc <nftw@plt+0x177c>
  404094:	stp	x23, x24, [sp, #48]
  404098:	adrp	x24, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40409c:	add	x24, x24, #0x5b8
  4040a0:	stp	x19, x20, [sp, #16]
  4040a4:	ldr	w0, [x24, #320]
  4040a8:	stp	x25, x26, [sp, #64]
  4040ac:	stp	x27, x28, [sp, #80]
  4040b0:	cbnz	w0, 404314 <nftw@plt+0x1794>
  4040b4:	add	x0, x24, #0x18
  4040b8:	add	x1, x24, #0x3c
  4040bc:	nop
  4040c0:	str	wzr, [x0], #4
  4040c4:	cmp	x1, x0
  4040c8:	b.ne	4040c0 <nftw@plt+0x1540>  // b.any
  4040cc:	mov	x0, x22
  4040d0:	str	wzr, [x24, #208]
  4040d4:	bl	405880 <nftw@plt+0x2d00>
  4040d8:	cbz	w0, 4044d0 <nftw@plt+0x1950>
  4040dc:	bl	405aa8 <nftw@plt+0x2f28>
  4040e0:	mov	w1, #0x6461                	// #25697
  4040e4:	movk	w1, #0x6763, lsl #16
  4040e8:	cmp	w0, w1
  4040ec:	b.ne	4042d0 <nftw@plt+0x1750>  // b.any
  4040f0:	bl	405aa8 <nftw@plt+0x2f28>
  4040f4:	mov	w19, w0
  4040f8:	mov	w4, #0x322a                	// #12842
  4040fc:	movk	w4, #0x4139, lsl #16
  404100:	cmp	w0, w4
  404104:	b.ne	4044fc <nftw@plt+0x197c>  // b.any
  404108:	mov	x1, #0x1                   	// #1
  40410c:	mov	x0, #0x108                 	// #264
  404110:	bl	402710 <calloc@plt>
  404114:	mov	x25, x0
  404118:	adrp	x4, 416000 <nftw@plt+0x13480>
  40411c:	adrp	x3, 416000 <nftw@plt+0x13480>
  404120:	add	x4, x4, #0x670
  404124:	add	x3, x3, #0x648
  404128:	mov	x2, #0x0                   	// #0
  40412c:	mov	x1, #0x0                   	// #0
  404130:	add	x0, x24, #0xe0
  404134:	str	w19, [x25]
  404138:	str	x25, [x24, #312]
  40413c:	bl	449840 <_obstack_begin@@Base>
  404140:	mov	x0, x22
  404144:	str	wzr, [x24, #212]
  404148:	str	xzr, [x24, #216]
  40414c:	bl	4024f0 <strlen@plt>
  404150:	add	x19, x0, #0x1
  404154:	adrp	x28, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404158:	mov	x0, x19
  40415c:	bl	402670 <malloc@plt>
  404160:	mov	x2, x19
  404164:	mov	x1, x22
  404168:	mov	x19, x0
  40416c:	bl	402490 <memcpy@plt>
  404170:	str	x19, [x25, #24]
  404174:	add	x26, sp, #0x80
  404178:	bl	405aa8 <nftw@plt+0x2f28>
  40417c:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404180:	add	x1, x28, #0x170
  404184:	mov	w23, #0x0                   	// #0
  404188:	str	w0, [x25, #16]
  40418c:	str	x1, [sp, #120]
  404190:	add	x1, x27, #0xc0
  404194:	str	x1, [sp, #104]
  404198:	bl	405aa8 <nftw@plt+0x2f28>
  40419c:	mov	w19, w0
  4041a0:	cbz	w0, 4043ec <nftw@plt+0x186c>
  4041a4:	bl	405aa8 <nftw@plt+0x2f28>
  4041a8:	mov	w20, w0
  4041ac:	bl	405848 <nftw@plt+0x2cc8>
  4041b0:	mov	w28, w0
  4041b4:	sub	w5, w19, #0x1
  4041b8:	eor	w5, w5, w19
  4041bc:	cmp	wzr, w5, lsr #1
  4041c0:	lsr	w1, w5, #1
  4041c4:	b.eq	4044c4 <nftw@plt+0x1944>  // b.none
  4041c8:	and	w0, w1, #0xff
  4041cc:	cmp	w0, #0xff
  4041d0:	b.ne	40435c <nftw@plt+0x17dc>  // b.any
  4041d4:	mov	w21, #0x4                   	// #4
  4041d8:	b	4041e4 <nftw@plt+0x1664>
  4041dc:	cmp	w0, #0xff
  4041e0:	b.ne	404368 <nftw@plt+0x17e8>  // b.any
  4041e4:	lsr	w1, w1, #8
  4041e8:	sub	w27, w21, #0x2
  4041ec:	and	w0, w1, #0xff
  4041f0:	sub	w21, w21, #0x1
  4041f4:	cbnz	w1, 4041dc <nftw@plt+0x165c>
  4041f8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4041fc:	add	x0, x0, #0x518
  404200:	mov	x4, x0
  404204:	ldr	x1, [sp, #104]
  404208:	b	404210 <nftw@plt+0x1690>
  40420c:	ldr	x1, [x4, #32]
  404210:	add	x4, x4, #0x18
  404214:	cbz	x1, 404330 <nftw@plt+0x17b0>
  404218:	ldr	w1, [x4]
  40421c:	cmp	w19, w1
  404220:	b.ne	40420c <nftw@plt+0x168c>  // b.any
  404224:	cmp	w23, #0x0
  404228:	ccmp	w23, w21, #0x2, ne  // ne = any
  40422c:	b.cs	40427c <nftw@plt+0x16fc>  // b.hs, b.nlast
  404230:	sub	w23, w23, #0x1
  404234:	ldr	w0, [x26, x23, lsl #2]
  404238:	sub	w1, w0, #0x1
  40423c:	eor	w1, w1, w0
  404240:	cmp	w5, w1, lsr #8
  404244:	b.ne	40425c <nftw@plt+0x16dc>  // b.any
  404248:	neg	w1, w0
  40424c:	eor	w2, w19, w0
  404250:	eor	w0, w1, w0
  404254:	tst	w0, w2
  404258:	b.eq	40427c <nftw@plt+0x16fc>  // b.none
  40425c:	mov	w3, w19
  404260:	mov	x2, x22
  404264:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404268:	mov	w0, #0x0                   	// #0
  40426c:	add	x1, x1, #0x188
  404270:	str	x4, [sp, #112]
  404274:	bl	4088d0 <nftw@plt+0x5d50>
  404278:	ldr	x4, [sp, #112]
  40427c:	str	w19, [x26, w27, uxtw #2]
  404280:	ldr	x2, [x4, #16]
  404284:	cbz	x2, 4042b0 <nftw@plt+0x1730>
  404288:	mov	w1, w20
  40428c:	mov	w0, w19
  404290:	blr	x2
  404294:	bl	405848 <nftw@plt+0x2cc8>
  404298:	sub	w1, w0, w28
  40429c:	cmp	w20, w1
  4042a0:	sub	w0, w0, w28
  4042a4:	mov	w3, w20
  4042a8:	b.cc	404388 <nftw@plt+0x1808>  // b.lo, b.ul, b.last
  4042ac:	b.hi	4043a4 <nftw@plt+0x1824>  // b.pmore
  4042b0:	mov	w1, w20
  4042b4:	mov	w0, w28
  4042b8:	bl	405c68 <nftw@plt+0x30e8>
  4042bc:	bl	405860 <nftw@plt+0x2ce0>
  4042c0:	cmp	w0, #0x0
  4042c4:	cbnz	w0, 4043c0 <nftw@plt+0x1840>
  4042c8:	mov	w23, w21
  4042cc:	b	404198 <nftw@plt+0x1618>
  4042d0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4042d4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4042d8:	mov	x2, x22
  4042dc:	add	x1, x1, #0x128
  4042e0:	ldr	x0, [x0, #1392]
  4042e4:	bl	407c40 <nftw@plt+0x50c0>
  4042e8:	bl	405970 <nftw@plt+0x2df0>
  4042ec:	ldp	x19, x20, [sp, #16]
  4042f0:	ldp	x23, x24, [sp, #48]
  4042f4:	ldp	x25, x26, [sp, #64]
  4042f8:	ldp	x27, x28, [sp, #80]
  4042fc:	mov	w0, #0x0                   	// #0
  404300:	ldp	x21, x22, [sp, #32]
  404304:	ldp	x29, x30, [sp], #144
  404308:	ret
  40430c:	mov	w0, #0x0                   	// #0
  404310:	ret
  404314:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404318:	mov	x2, x22
  40431c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404320:	add	x1, x1, #0x100
  404324:	ldr	x0, [x0, #1392]
  404328:	bl	407c40 <nftw@plt+0x50c0>
  40432c:	b	4040b4 <nftw@plt+0x1534>
  404330:	tst	w19, #0xffff
  404334:	mov	x4, #0x18                  	// #24
  404338:	b.ne	404354 <nftw@plt+0x17d4>  // b.any
  40433c:	mov	w1, #0xfe5f0000            	// #-27328512
  404340:	add	w1, w19, w1
  404344:	mov	x2, #0x30                  	// #48
  404348:	lsr	w1, w1, #17
  40434c:	cmp	w1, #0x8
  404350:	csel	x4, x4, x2, hi  // hi = pmore
  404354:	add	x4, x0, x4
  404358:	b	404224 <nftw@plt+0x16a4>
  40435c:	mov	w27, #0x3                   	// #3
  404360:	mov	w21, #0x4                   	// #4
  404364:	nop
  404368:	ldr	x1, [sp, #120]
  40436c:	mov	w3, w19
  404370:	mov	x2, x22
  404374:	mov	w0, #0x0                   	// #0
  404378:	str	w5, [sp, #112]
  40437c:	bl	4088d0 <nftw@plt+0x5d50>
  404380:	ldr	w5, [sp, #112]
  404384:	b	4041f8 <nftw@plt+0x1678>
  404388:	sub	x3, x0, x3
  40438c:	mov	x2, x22
  404390:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404394:	mov	w0, #0x0                   	// #0
  404398:	add	x1, x1, #0x1b0
  40439c:	bl	4088d0 <nftw@plt+0x5d50>
  4043a0:	b	4042b0 <nftw@plt+0x1730>
  4043a4:	sub	x3, x3, x0
  4043a8:	mov	x2, x22
  4043ac:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4043b0:	mov	w0, #0x0                   	// #0
  4043b4:	add	x1, x1, #0x1e0
  4043b8:	bl	4088d0 <nftw@plt+0x5d50>
  4043bc:	b	4042b0 <nftw@plt+0x1730>
  4043c0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4043c4:	add	x1, x1, #0xe8
  4043c8:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4043cc:	add	x19, x19, #0xc8
  4043d0:	csel	x19, x19, x1, lt  // lt = tstop
  4043d4:	bl	405848 <nftw@plt+0x2cc8>
  4043d8:	mov	w3, w0
  4043dc:	mov	x1, x19
  4043e0:	mov	x2, x22
  4043e4:	mov	w0, #0x0                   	// #0
  4043e8:	bl	4088d0 <nftw@plt+0x5d50>
  4043ec:	ldr	x20, [x24, #216]
  4043f0:	add	x19, x24, #0xe0
  4043f4:	mov	x0, x20
  4043f8:	bl	403d38 <nftw@plt+0x11b8>
  4043fc:	ldp	x2, x1, [x24, #248]
  404400:	sub	x1, x1, x2
  404404:	cmp	x1, #0x7
  404408:	b.ls	40451c <nftw@plt+0x199c>  // b.plast
  40440c:	str	x20, [x2]
  404410:	ldr	w2, [x24, #212]
  404414:	ldp	x5, x0, [x24, #240]
  404418:	str	w2, [x25, #104]
  40441c:	add	x0, x0, #0x8
  404420:	cmp	x0, x5
  404424:	b.eq	404534 <nftw@plt+0x19b4>  // b.none
  404428:	ldr	x1, [x24, #272]
  40442c:	ldr	x3, [x24, #232]
  404430:	add	x0, x0, x1
  404434:	ldr	x4, [x24, #256]
  404438:	bic	x1, x0, x1
  40443c:	str	x1, [x24, #248]
  404440:	sub	x0, x1, x3
  404444:	sub	x3, x4, x3
  404448:	cmp	x0, x3
  40444c:	b.ls	404458 <nftw@plt+0x18d8>  // b.plast
  404450:	mov	x1, x4
  404454:	str	x4, [x24, #248]
  404458:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40445c:	add	x2, x2, #0x518
  404460:	add	x2, x2, #0xd8
  404464:	add	x3, x24, #0x18
  404468:	add	x4, x25, #0x20
  40446c:	mov	x0, #0x0                   	// #0
  404470:	str	x5, [x25, #112]
  404474:	str	x1, [x24, #240]
  404478:	ldr	w1, [x3, x0, lsl #2]
  40447c:	cbz	w1, 404488 <nftw@plt+0x1908>
  404480:	ldr	x1, [x2, x0, lsl #3]
  404484:	str	x1, [x4, x0, lsl #3]
  404488:	add	x0, x0, #0x1
  40448c:	cmp	x0, #0x9
  404490:	b.ne	404478 <nftw@plt+0x18f8>  // b.any
  404494:	bl	405970 <nftw@plt+0x2df0>
  404498:	ldr	x0, [x24, #328]
  40449c:	str	x0, [x25, #8]
  4044a0:	str	x25, [x24, #328]
  4044a4:	mov	w0, #0x0                   	// #0
  4044a8:	ldp	x19, x20, [sp, #16]
  4044ac:	ldp	x21, x22, [sp, #32]
  4044b0:	ldp	x23, x24, [sp, #48]
  4044b4:	ldp	x25, x26, [sp, #64]
  4044b8:	ldp	x27, x28, [sp, #80]
  4044bc:	ldp	x29, x30, [sp], #144
  4044c0:	ret
  4044c4:	mov	w27, #0x3                   	// #3
  4044c8:	mov	w21, #0x4                   	// #4
  4044cc:	b	4041f8 <nftw@plt+0x1678>
  4044d0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4044d4:	mov	x2, x22
  4044d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4044dc:	add	x1, x1, #0x118
  4044e0:	ldr	x0, [x0, #1392]
  4044e4:	bl	407c40 <nftw@plt+0x50c0>
  4044e8:	ldp	x19, x20, [sp, #16]
  4044ec:	ldp	x23, x24, [sp, #48]
  4044f0:	ldp	x25, x26, [sp, #64]
  4044f4:	ldp	x27, x28, [sp, #80]
  4044f8:	b	4042fc <nftw@plt+0x177c>
  4044fc:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404500:	mov	w3, w19
  404504:	mov	x2, x22
  404508:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40450c:	ldr	x0, [x0, #1392]
  404510:	add	x1, x1, #0x148
  404514:	bl	407c40 <nftw@plt+0x50c0>
  404518:	b	4042e8 <nftw@plt+0x1768>
  40451c:	mov	x0, x19
  404520:	mov	x1, #0x8                   	// #8
  404524:	bl	449870 <_obstack_newchunk@@Base>
  404528:	ldr	x20, [x24, #216]
  40452c:	ldr	x2, [x24, #248]
  404530:	b	40440c <nftw@plt+0x188c>
  404534:	ldrb	w2, [x24, #304]
  404538:	orr	w2, w2, #0x2
  40453c:	strb	w2, [x24, #304]
  404540:	b	404428 <nftw@plt+0x18a8>
  404544:	nop
  404548:	stp	x29, x30, [sp, #-48]!
  40454c:	mov	w2, #0xfe5f0000            	// #-27328512
  404550:	add	w0, w0, w2
  404554:	mov	x29, sp
  404558:	stp	x19, x20, [sp, #16]
  40455c:	lsr	w0, w0, #17
  404560:	cmp	w0, #0x8
  404564:	str	x21, [sp, #32]
  404568:	b.hi	4045dc <nftw@plt+0x1a5c>  // b.pmore
  40456c:	lsr	w20, w1, #1
  404570:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404574:	add	x1, x1, #0x5b8
  404578:	lsl	x2, x0, #4
  40457c:	add	x3, x1, #0x40
  404580:	add	x1, x1, #0x18
  404584:	mov	w5, #0x1                   	// #1
  404588:	add	x19, x3, x2
  40458c:	ldr	w4, [x3, x2]
  404590:	str	w5, [x1, x0, lsl #2]
  404594:	cbnz	w4, 4045f4 <nftw@plt+0x1a74>
  404598:	str	w20, [x3, x2]
  40459c:	ubfiz	x0, x20, #3, #31
  4045a0:	bl	402670 <malloc@plt>
  4045a4:	str	x0, [x19, #8]
  4045a8:	mov	x21, x0
  4045ac:	cbz	w20, 4045cc <nftw@plt+0x1a4c>
  4045b0:	mov	x19, #0x0                   	// #0
  4045b4:	nop
  4045b8:	bl	405ad8 <nftw@plt+0x2f58>
  4045bc:	str	x0, [x21, x19, lsl #3]
  4045c0:	add	x19, x19, #0x1
  4045c4:	cmp	w20, w19
  4045c8:	b.ne	4045b8 <nftw@plt+0x1a38>  // b.any
  4045cc:	ldp	x19, x20, [sp, #16]
  4045d0:	ldr	x21, [sp, #32]
  4045d4:	ldp	x29, x30, [sp], #48
  4045d8:	ret
  4045dc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4045e0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4045e4:	add	x2, x2, #0x210
  4045e8:	add	x0, x0, #0xfd8
  4045ec:	mov	w1, #0xd3                  	// #211
  4045f0:	bl	402bf0 <nftw@plt+0x70>
  4045f4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4045f8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4045fc:	add	x2, x2, #0x210
  404600:	add	x0, x0, #0xfd8
  404604:	mov	w1, #0xd5                  	// #213
  404608:	bl	402bf0 <nftw@plt+0x70>
  40460c:	nop
  404610:	ret
  404614:	nop
  404618:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40461c:	mov	w1, #0x1                   	// #1
  404620:	str	w1, [x0, #1784]
  404624:	ret
  404628:	stp	x29, x30, [sp, #-48]!
  40462c:	mov	w1, #0x4                   	// #4
  404630:	mov	x29, sp
  404634:	stp	x19, x20, [sp, #16]
  404638:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40463c:	add	x19, x19, #0x5b8
  404640:	mov	x20, x0
  404644:	str	xzr, [x19, #328]
  404648:	bl	402810 <access@plt>
  40464c:	cbnz	w0, 4046a8 <nftw@plt+0x1b28>
  404650:	mov	x1, #0x0                   	// #0
  404654:	mov	x0, #0x0                   	// #0
  404658:	bl	4024c0 <getcwd@plt>
  40465c:	str	x0, [sp, #40]
  404660:	cbz	x0, 4046f8 <nftw@plt+0x1b78>
  404664:	mov	x0, x20
  404668:	bl	4028f0 <chdir@plt>
  40466c:	cbnz	w0, 4046d0 <nftw@plt+0x1b50>
  404670:	mov	w2, #0x32                  	// #50
  404674:	adrp	x1, 404000 <nftw@plt+0x1480>
  404678:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  40467c:	add	x1, x1, #0x58
  404680:	add	x0, x0, #0xc38
  404684:	bl	402ae0 <ftw@plt>
  404688:	ldr	x0, [sp, #40]
  40468c:	bl	4028f0 <chdir@plt>
  404690:	ldr	x0, [sp, #40]
  404694:	bl	402910 <free@plt>
  404698:	ldr	x0, [x19, #328]
  40469c:	ldp	x19, x20, [sp, #16]
  4046a0:	ldp	x29, x30, [sp], #48
  4046a4:	ret
  4046a8:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4046ac:	mov	x2, x20
  4046b0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4046b4:	add	x1, x1, #0x220
  4046b8:	ldr	x0, [x0, #1392]
  4046bc:	bl	407c40 <nftw@plt+0x50c0>
  4046c0:	mov	x0, #0x0                   	// #0
  4046c4:	ldp	x19, x20, [sp, #16]
  4046c8:	ldp	x29, x30, [sp], #48
  4046cc:	ret
  4046d0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4046d4:	mov	x2, x20
  4046d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4046dc:	add	x1, x1, #0x258
  4046e0:	ldr	x0, [x0, #1392]
  4046e4:	bl	407c40 <nftw@plt+0x50c0>
  4046e8:	mov	x0, #0x0                   	// #0
  4046ec:	ldp	x19, x20, [sp, #16]
  4046f0:	ldp	x29, x30, [sp], #48
  4046f4:	ret
  4046f8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4046fc:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  404700:	add	x2, x2, #0x240
  404704:	add	x0, x0, #0xfd8
  404708:	mov	w1, #0x1c6                 	// #454
  40470c:	bl	402bf0 <nftw@plt+0x70>
  404710:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404714:	add	x1, x2, #0x5b8
  404718:	ldp	w0, w3, [x1, #8]
  40471c:	cmp	w0, w3
  404720:	b.cs	404738 <nftw@plt+0x1bb8>  // b.hs, b.nlast
  404724:	ldr	x2, [x2, #1464]
  404728:	add	w3, w0, #0x1
  40472c:	str	w3, [x1, #8]
  404730:	ldr	x0, [x2, w0, uxtw #3]
  404734:	ret
  404738:	stp	x29, x30, [sp, #-16]!
  40473c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404740:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  404744:	mov	x29, sp
  404748:	add	x2, x2, #0x270
  40474c:	add	x0, x0, #0xfd8
  404750:	mov	w1, #0x1ed                 	// #493
  404754:	bl	402bf0 <nftw@plt+0x70>
  404758:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40475c:	ldr	w0, [x0, #1480]
  404760:	ret
  404764:	nop
  404768:	stp	x29, x30, [sp, #-112]!
  40476c:	mov	x29, sp
  404770:	stp	x19, x20, [sp, #16]
  404774:	mov	x20, x0
  404778:	mov	x19, x1
  40477c:	stp	x21, x22, [sp, #32]
  404780:	stp	x23, x24, [sp, #48]
  404784:	mov	w23, w3
  404788:	stp	x25, x26, [sp, #64]
  40478c:	stp	x27, x28, [sp, #80]
  404790:	mov	w27, w2
  404794:	cbz	x0, 40494c <nftw@plt+0x1dcc>
  404798:	mov	w21, #0x0                   	// #0
  40479c:	nop
  4047a0:	ldr	x0, [x0, #8]
  4047a4:	mov	w1, w21
  4047a8:	add	w21, w21, #0x1
  4047ac:	cbnz	x0, 4047a0 <nftw@plt+0x1c20>
  4047b0:	ubfiz	x25, x1, #3, #32
  4047b4:	ubfiz	x0, x21, #3, #32
  4047b8:	cbz	x19, 404960 <nftw@plt+0x1de0>
  4047bc:	mov	x1, x19
  4047c0:	mov	w24, #0x0                   	// #0
  4047c4:	nop
  4047c8:	ldr	x1, [x1, #8]
  4047cc:	add	w24, w24, #0x1
  4047d0:	cbnz	x1, 4047c8 <nftw@plt+0x1c48>
  4047d4:	bl	402670 <malloc@plt>
  4047d8:	mov	x22, x0
  4047dc:	ubfiz	x0, x24, #3, #32
  4047e0:	bl	402670 <malloc@plt>
  4047e4:	mov	x26, x0
  4047e8:	cbz	x20, 40493c <nftw@plt+0x1dbc>
  4047ec:	mov	w0, #0x0                   	// #0
  4047f0:	str	x20, [x22, w0, uxtw #3]
  4047f4:	add	w0, w0, #0x1
  4047f8:	ldr	x20, [x20, #8]
  4047fc:	cbnz	x20, 4047f0 <nftw@plt+0x1c70>
  404800:	cmp	w27, #0x1
  404804:	ldr	x28, [x22, x25]
  404808:	b.le	404834 <nftw@plt+0x1cb4>
  40480c:	cbz	w21, 404834 <nftw@plt+0x1cb4>
  404810:	sub	w27, w27, #0x1
  404814:	mov	x20, #0x0                   	// #0
  404818:	ldr	x1, [x22, x20, lsl #3]
  40481c:	mov	w2, w27
  404820:	add	x20, x20, #0x1
  404824:	mov	x0, x1
  404828:	bl	403ae8 <nftw@plt+0xf68>
  40482c:	cmp	w21, w20
  404830:	b.hi	404818 <nftw@plt+0x1c98>  // b.pmore
  404834:	cbz	x19, 4048dc <nftw@plt+0x1d5c>
  404838:	sub	w25, w21, #0x1
  40483c:	add	x0, x22, #0x8
  404840:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404844:	mov	w24, #0x0                   	// #0
  404848:	add	x1, x27, #0x288
  40484c:	add	x0, x0, w25, uxtw #3
  404850:	stp	x0, x1, [sp, #96]
  404854:	nop
  404858:	cmp	w21, #0x0
  40485c:	b.le	404894 <nftw@plt+0x1d14>
  404860:	mov	x20, x22
  404864:	nop
  404868:	ldr	x27, [x20]
  40486c:	cbz	x27, 404884 <nftw@plt+0x1d04>
  404870:	ldr	x1, [x19, #24]
  404874:	ldr	x25, [x27, #24]
  404878:	mov	x0, x25
  40487c:	bl	402890 <strcmp@plt>
  404880:	cbz	w0, 4048fc <nftw@plt+0x1d7c>
  404884:	ldr	x0, [sp, #96]
  404888:	add	x20, x20, #0x8
  40488c:	cmp	x0, x20
  404890:	b.ne	404868 <nftw@plt+0x1ce8>  // b.any
  404894:	str	x19, [x26, w24, uxtw #3]
  404898:	add	w24, w24, #0x1
  40489c:	ldr	x19, [x19, #8]
  4048a0:	cbnz	x19, 404858 <nftw@plt+0x1cd8>
  4048a4:	cbz	w24, 4048dc <nftw@plt+0x1d5c>
  4048a8:	sub	w23, w23, #0x1
  4048ac:	mov	x19, #0x0                   	// #0
  4048b0:	mov	x20, x28
  4048b4:	mov	w2, w23
  4048b8:	ldr	x28, [x26, x19, lsl #3]
  4048bc:	add	x19, x19, #0x1
  4048c0:	mov	x1, x28
  4048c4:	mov	x0, x28
  4048c8:	bl	403ae8 <nftw@plt+0xf68>
  4048cc:	str	xzr, [x28, #8]
  4048d0:	str	x28, [x20, #8]
  4048d4:	cmp	w24, w19
  4048d8:	b.hi	4048b0 <nftw@plt+0x1d30>  // b.pmore
  4048dc:	mov	w0, #0x0                   	// #0
  4048e0:	ldp	x19, x20, [sp, #16]
  4048e4:	ldp	x21, x22, [sp, #32]
  4048e8:	ldp	x23, x24, [sp, #48]
  4048ec:	ldp	x25, x26, [sp, #64]
  4048f0:	ldp	x27, x28, [sp, #80]
  4048f4:	ldp	x29, x30, [sp], #112
  4048f8:	ret
  4048fc:	ldr	w4, [x19, #104]
  404900:	ldr	w3, [x27, #104]
  404904:	str	xzr, [x20]
  404908:	cmp	w3, w4
  40490c:	b.ne	404924 <nftw@plt+0x1da4>  // b.any
  404910:	mov	x0, x27
  404914:	mov	w2, w23
  404918:	mov	x1, x19
  40491c:	bl	403ae8 <nftw@plt+0xf68>
  404920:	b	40489c <nftw@plt+0x1d1c>
  404924:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404928:	mov	x2, x25
  40492c:	ldr	x1, [sp, #104]
  404930:	ldr	x0, [x0, #1392]
  404934:	bl	407c40 <nftw@plt+0x50c0>
  404938:	b	404894 <nftw@plt+0x1d14>
  40493c:	cmp	w27, #0x1
  404940:	ldr	x28, [x22, x25]
  404944:	b.gt	40480c <nftw@plt+0x1c8c>
  404948:	b	404838 <nftw@plt+0x1cb8>
  40494c:	cbz	x1, 4048dc <nftw@plt+0x1d5c>
  404950:	mov	x25, #0x7fffffff8           	// #34359738360
  404954:	mov	x0, #0x0                   	// #0
  404958:	mov	w21, #0x0                   	// #0
  40495c:	b	4047bc <nftw@plt+0x1c3c>
  404960:	bl	402670 <malloc@plt>
  404964:	mov	x22, x0
  404968:	mov	x0, #0x0                   	// #0
  40496c:	bl	402670 <malloc@plt>
  404970:	mov	x26, x0
  404974:	b	4047ec <nftw@plt+0x1c6c>
  404978:	stp	x29, x30, [sp, #-80]!
  40497c:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404980:	mov	x29, sp
  404984:	ldr	w3, [x3, #1784]
  404988:	stp	x21, x22, [sp, #32]
  40498c:	stp	x23, x24, [sp, #48]
  404990:	mov	x23, x0
  404994:	stp	w2, w1, [sp, #68]
  404998:	str	s0, [sp, #76]
  40499c:	cbnz	w3, 404a78 <nftw@plt+0x1ef8>
  4049a0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4049a4:	add	x22, x22, #0x518
  4049a8:	add	x22, x22, #0x120
  4049ac:	cbz	x23, 404a64 <nftw@plt+0x1ee4>
  4049b0:	stp	x19, x20, [sp, #16]
  4049b4:	nop
  4049b8:	ldr	w1, [x23, #104]
  4049bc:	mov	w21, #0x0                   	// #0
  4049c0:	cbnz	w1, 4049d4 <nftw@plt+0x1e54>
  4049c4:	b	404a58 <nftw@plt+0x1ed8>
  4049c8:	add	w21, w21, #0x1
  4049cc:	cmp	w1, w21
  4049d0:	b.ls	404a58 <nftw@plt+0x1ed8>  // b.plast
  4049d4:	ldr	x0, [x23, #112]
  4049d8:	ldr	x19, [x0, w21, uxtw #3]
  4049dc:	cbz	x19, 4049c8 <nftw@plt+0x1e48>
  4049e0:	ldr	x0, [x19]
  4049e4:	cmp	x0, x23
  4049e8:	b.ne	4049c8 <nftw@plt+0x1e48>  // b.any
  4049ec:	add	x19, x19, #0x18
  4049f0:	add	x24, x23, #0x20
  4049f4:	mov	x20, #0x0                   	// #0
  4049f8:	ldr	x1, [x24, x20]
  4049fc:	adrp	x2, 403000 <nftw@plt+0x480>
  404a00:	add	x3, sp, #0x4c
  404a04:	add	x2, x2, #0xa38
  404a08:	mov	x4, #0x0                   	// #0
  404a0c:	adrp	x7, 403000 <nftw@plt+0x480>
  404a10:	cbz	x1, 404a3c <nftw@plt+0x1ebc>
  404a14:	ldr	w5, [sp, #68]
  404a18:	ldr	w1, [x19]
  404a1c:	ldr	x6, [x20, x22]
  404a20:	ldr	x0, [x19, #8]
  404a24:	cbz	w5, 404a34 <nftw@plt+0x1eb4>
  404a28:	add	x2, x7, #0xa50
  404a2c:	add	x4, sp, #0x44
  404a30:	add	x3, sp, #0x48
  404a34:	add	x19, x19, #0x10
  404a38:	blr	x6
  404a3c:	add	x20, x20, #0x8
  404a40:	cmp	x20, #0x48
  404a44:	b.ne	4049f8 <nftw@plt+0x1e78>  // b.any
  404a48:	ldr	w1, [x23, #104]
  404a4c:	add	w21, w21, #0x1
  404a50:	cmp	w1, w21
  404a54:	b.hi	4049d4 <nftw@plt+0x1e54>  // b.pmore
  404a58:	ldr	x23, [x23, #8]
  404a5c:	cbnz	x23, 4049b8 <nftw@plt+0x1e38>
  404a60:	ldp	x19, x20, [sp, #16]
  404a64:	mov	w0, #0x0                   	// #0
  404a68:	ldp	x21, x22, [sp, #32]
  404a6c:	ldp	x23, x24, [sp, #48]
  404a70:	ldp	x29, x30, [sp], #80
  404a74:	ret
  404a78:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404a7c:	fcvt	d0, s0
  404a80:	mov	w3, w2
  404a84:	mov	w2, w1
  404a88:	ldr	x0, [x0, #1416]
  404a8c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404a90:	add	x1, x1, #0x2c8
  404a94:	bl	407c40 <nftw@plt+0x50c0>
  404a98:	b	4049a0 <nftw@plt+0x1e20>
  404a9c:	nop
  404aa0:	stp	x29, x30, [sp, #-48]!
  404aa4:	mov	x29, sp
  404aa8:	str	x19, [sp, #16]
  404aac:	mov	x19, x0
  404ab0:	cbz	x0, 404b9c <nftw@plt+0x201c>
  404ab4:	mov	x8, x0
  404ab8:	mov	x2, #0x0                   	// #0
  404abc:	nop
  404ac0:	ldr	w9, [x8, #104]
  404ac4:	cbz	w9, 404b30 <nftw@plt+0x1fb0>
  404ac8:	mov	x5, #0x0                   	// #0
  404acc:	ldr	x10, [x8, #112]
  404ad0:	b	404ae0 <nftw@plt+0x1f60>
  404ad4:	add	x5, x5, #0x1
  404ad8:	cmp	w9, w5
  404adc:	b.ls	404b30 <nftw@plt+0x1fb0>  // b.plast
  404ae0:	ldr	x3, [x10, x5, lsl #3]
  404ae4:	cbz	x3, 404ad4 <nftw@plt+0x1f54>
  404ae8:	ldr	x4, [x3]
  404aec:	cmp	x4, x8
  404af0:	b.ne	404ad4 <nftw@plt+0x1f54>  // b.any
  404af4:	ldr	w6, [x3, #24]
  404af8:	cbz	w6, 404ad4 <nftw@plt+0x1f54>
  404afc:	ldr	x7, [x3, #32]
  404b00:	mov	x3, #0x0                   	// #0
  404b04:	nop
  404b08:	ldr	x4, [x7, x3, lsl #3]
  404b0c:	add	x3, x3, #0x1
  404b10:	cmp	x2, x4
  404b14:	csel	x2, x2, x4, ge  // ge = tcont
  404b18:	cmp	w6, w3
  404b1c:	b.hi	404b08 <nftw@plt+0x1f88>  // b.pmore
  404b20:	add	x5, x5, #0x1
  404b24:	cmp	w9, w5
  404b28:	b.hi	404ae0 <nftw@plt+0x1f60>  // b.pmore
  404b2c:	nop
  404b30:	ldr	x8, [x8, #8]
  404b34:	cbnz	x8, 404ac0 <nftw@plt+0x1f40>
  404b38:	scvtf	s1, x2
  404b3c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404b40:	scvtf	s0, x1
  404b44:	ldr	w0, [x0, #1784]
  404b48:	fdiv	s0, s0, s1
  404b4c:	cbnz	w0, 404b68 <nftw@plt+0x1fe8>
  404b50:	mov	x0, x19
  404b54:	mov	w2, #0x0                   	// #0
  404b58:	ldr	x19, [sp, #16]
  404b5c:	mov	w1, #0x0                   	// #0
  404b60:	ldp	x29, x30, [sp], #48
  404b64:	b	404978 <nftw@plt+0x1df8>
  404b68:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404b6c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404b70:	add	x1, x1, #0x2e8
  404b74:	str	s0, [sp, #44]
  404b78:	ldr	x0, [x0, #1416]
  404b7c:	bl	407c40 <nftw@plt+0x50c0>
  404b80:	mov	x0, x19
  404b84:	ldr	s0, [sp, #44]
  404b88:	ldr	x19, [sp, #16]
  404b8c:	mov	w2, #0x0                   	// #0
  404b90:	ldp	x29, x30, [sp], #48
  404b94:	mov	w1, #0x0                   	// #0
  404b98:	b	404978 <nftw@plt+0x1df8>
  404b9c:	movi	v1.2s, #0x0
  404ba0:	mov	x2, #0x0                   	// #0
  404ba4:	b	404b3c <nftw@plt+0x1fbc>
  404ba8:	stp	x29, x30, [sp, #-160]!
  404bac:	mov	x29, sp
  404bb0:	stp	x19, x20, [sp, #16]
  404bb4:	mov	x19, x0
  404bb8:	stp	x21, x22, [sp, #32]
  404bbc:	mov	x21, x1
  404bc0:	stp	x23, x24, [sp, #48]
  404bc4:	mov	w24, #0x0                   	// #0
  404bc8:	stp	x27, x28, [sp, #80]
  404bcc:	stp	d8, d9, [sp, #96]
  404bd0:	cbz	x0, 405384 <nftw@plt+0x2804>
  404bd4:	stp	x25, x26, [sp, #64]
  404bd8:	add	w24, w24, #0x1
  404bdc:	ldr	x0, [x0, #8]
  404be0:	cbnz	x0, 404bd8 <nftw@plt+0x2058>
  404be4:	cbz	x21, 4053b8 <nftw@plt+0x2838>
  404be8:	mov	x0, x21
  404bec:	mov	w23, #0x0                   	// #0
  404bf0:	ldr	x0, [x0, #8]
  404bf4:	add	w23, w23, #0x1
  404bf8:	cbnz	x0, 404bf0 <nftw@plt+0x2070>
  404bfc:	add	w23, w23, w24
  404c00:	mov	w0, #0x30                  	// #48
  404c04:	umull	x0, w23, w0
  404c08:	bl	402670 <malloc@plt>
  404c0c:	mov	x20, x0
  404c10:	cbz	x19, 405390 <nftw@plt+0x2810>
  404c14:	mov	w0, #0x0                   	// #0
  404c18:	mov	w3, #0x18                  	// #24
  404c1c:	nop
  404c20:	umull	x1, w0, w3
  404c24:	add	w0, w0, #0x1
  404c28:	add	x2, x20, x1
  404c2c:	str	x19, [x20, x1]
  404c30:	ldr	x19, [x19, #8]
  404c34:	str	xzr, [x2, #8]
  404c38:	cbnz	x19, 404c20 <nftw@plt+0x20a0>
  404c3c:	cbz	x21, 404c64 <nftw@plt+0x20e4>
  404c40:	mov	w3, #0x18                  	// #24
  404c44:	nop
  404c48:	umull	x1, w0, w3
  404c4c:	add	w0, w0, #0x1
  404c50:	add	x2, x20, x1
  404c54:	str	xzr, [x20, x1]
  404c58:	str	x21, [x2, #8]
  404c5c:	ldr	x21, [x21, #8]
  404c60:	cbnz	x21, 404c48 <nftw@plt+0x20c8>
  404c64:	cmp	w23, w24
  404c68:	b.ls	405398 <nftw@plt+0x2818>  // b.plast
  404c6c:	mvn	w1, w24
  404c70:	sub	w0, w24, #0x1
  404c74:	add	w1, w1, w23
  404c78:	mov	w21, #0x18                  	// #24
  404c7c:	add	x1, x1, w24, uxtw
  404c80:	add	x0, x0, #0x1
  404c84:	umaddl	x21, w24, w21, x20
  404c88:	add	x19, x20, #0x20
  404c8c:	add	x1, x1, x1, lsl #1
  404c90:	add	x0, x0, x0, lsl #1
  404c94:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404c98:	add	x21, x21, #0x8
  404c9c:	add	x19, x19, x1, lsl #3
  404ca0:	add	x27, x27, #0x288
  404ca4:	add	x0, x20, x0, lsl #3
  404ca8:	adrp	x28, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404cac:	str	x0, [sp, #136]
  404cb0:	stp	d10, d11, [sp, #112]
  404cb4:	nop
  404cb8:	ldr	x26, [x21]
  404cbc:	cbz	x26, 404d1c <nftw@plt+0x219c>
  404cc0:	cbz	w24, 404d1c <nftw@plt+0x219c>
  404cc4:	mov	x25, x20
  404cc8:	b	404cdc <nftw@plt+0x215c>
  404ccc:	ldr	x0, [sp, #136]
  404cd0:	add	x25, x25, #0x18
  404cd4:	cmp	x0, x25
  404cd8:	b.eq	404d1c <nftw@plt+0x219c>  // b.none
  404cdc:	ldr	x0, [x25, #8]
  404ce0:	cbnz	x0, 404ccc <nftw@plt+0x214c>
  404ce4:	ldr	x22, [x25]
  404ce8:	ldr	x2, [x26, #24]
  404cec:	str	x2, [sp, #128]
  404cf0:	ldr	x1, [x22, #24]
  404cf4:	mov	x0, x2
  404cf8:	bl	402890 <strcmp@plt>
  404cfc:	cbnz	w0, 404ccc <nftw@plt+0x214c>
  404d00:	ldr	w4, [x22, #104]
  404d04:	ldr	w3, [x26, #104]
  404d08:	ldr	x2, [sp, #128]
  404d0c:	cmp	w3, w4
  404d10:	b.ne	4052cc <nftw@plt+0x274c>  // b.any
  404d14:	str	x26, [x25, #8]
  404d18:	str	xzr, [x21]
  404d1c:	add	x21, x21, #0x18
  404d20:	cmp	x21, x19
  404d24:	b.ne	404cb8 <nftw@plt+0x2138>  // b.any
  404d28:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404d2c:	movi	d1, #0x0
  404d30:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404d34:	mov	x10, x20
  404d38:	ldr	d2, [x0, #912]
  404d3c:	add	x19, x19, #0x5b8
  404d40:	mov	w12, #0x0                   	// #0
  404d44:	mov	w18, #0x11                  	// #17
  404d48:	mov	w15, #0x22                  	// #34
  404d4c:	mov	w13, #0x44                  	// #68
  404d50:	mov	w21, #0xffffff84            	// #-124
  404d54:	mov	w14, #0x18                  	// #24
  404d58:	ldp	x9, x11, [x10]
  404d5c:	cbz	x9, 405244 <nftw@plt+0x26c4>
  404d60:	ldr	w2, [x19, #344]
  404d64:	mov	x0, x9
  404d68:	mov	x1, #0x0                   	// #0
  404d6c:	add	w2, w2, #0x1
  404d70:	str	w2, [x19, #344]
  404d74:	bl	403a78 <nftw@plt+0xef8>
  404d78:	tst	w0, #0xff
  404d7c:	b.eq	40519c <nftw@plt+0x261c>  // b.none
  404d80:	ldr	w0, [x19, #352]
  404d84:	mov	w9, #0x1                   	// #1
  404d88:	add	w0, w0, w9
  404d8c:	str	w0, [x19, #352]
  404d90:	cbnz	x11, 4051c8 <nftw@plt+0x2648>
  404d94:	ldr	w0, [x19, #336]
  404d98:	orr	w9, w9, #0xffffff80
  404d9c:	strb	w9, [x10, #16]
  404da0:	add	w0, w0, #0x1
  404da4:	str	w0, [x19, #336]
  404da8:	add	w12, w12, #0x1
  404dac:	add	x10, x10, #0x18
  404db0:	cmp	w12, w23
  404db4:	b.cc	404d58 <nftw@plt+0x21d8>  // b.lo, b.ul, b.last
  404db8:	movi	d8, #0x0
  404dbc:	mov	w27, #0x0                   	// #0
  404dc0:	adrp	x28, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404dc4:	fmov	d9, d8
  404dc8:	ldr	x25, [x20]
  404dcc:	cbz	x25, 405138 <nftw@plt+0x25b8>
  404dd0:	ldrb	w26, [x20, #16]
  404dd4:	mov	w0, #0x11                  	// #17
  404dd8:	and	w0, w26, w0
  404ddc:	cmp	w0, #0x11
  404de0:	b.eq	404fd4 <nftw@plt+0x2454>  // b.none
  404de4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404de8:	ldr	x22, [x25, #24]
  404dec:	ldr	w0, [x0, #1448]
  404df0:	cbnz	w0, 404e00 <nftw@plt+0x2280>
  404df4:	mov	x0, x22
  404df8:	bl	403cd0 <nftw@plt+0x1150>
  404dfc:	mov	x22, x0
  404e00:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404e04:	add	x24, x0, #0x5a4
  404e08:	ldr	w0, [x0, #1444]
  404e0c:	cbnz	w0, 405098 <nftw@plt+0x2518>
  404e10:	ldr	x21, [x20, #8]
  404e14:	cbz	x21, 4050b0 <nftw@plt+0x2530>
  404e18:	ldr	w5, [x25, #104]
  404e1c:	movi	d10, #0x0
  404e20:	cbz	w5, 40536c <nftw@plt+0x27ec>
  404e24:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404e28:	fmov	d11, d10
  404e2c:	add	x8, x0, #0x5b0
  404e30:	mov	w4, #0x0                   	// #0
  404e34:	b	404e44 <nftw@plt+0x22c4>
  404e38:	add	w4, w4, #0x1
  404e3c:	cmp	w5, w4
  404e40:	b.ls	404f80 <nftw@plt+0x2400>  // b.plast
  404e44:	ldr	x2, [x25, #112]
  404e48:	mov	w0, w4
  404e4c:	ldr	x1, [x21, #112]
  404e50:	ldr	x3, [x2, x0, lsl #3]
  404e54:	ldr	x0, [x1, x0, lsl #3]
  404e58:	cbz	x3, 404e38 <nftw@plt+0x22b8>
  404e5c:	ldr	x1, [x3]
  404e60:	cmp	x0, #0x0
  404e64:	ccmp	x1, x25, #0x0, ne  // ne = any
  404e68:	b.ne	404e38 <nftw@plt+0x22b8>  // b.any
  404e6c:	ldr	x1, [x0]
  404e70:	cmp	x1, x21
  404e74:	b.ne	404e38 <nftw@plt+0x22b8>  // b.any
  404e78:	ldr	w7, [x3, #24]
  404e7c:	cbz	w7, 405374 <nftw@plt+0x27f4>
  404e80:	movi	d2, #0x0
  404e84:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404e88:	mov	x2, #0x0                   	// #0
  404e8c:	ldr	d5, [x1, #912]
  404e90:	mov	w1, #0x0                   	// #0
  404e94:	ldr	x10, [x0, #32]
  404e98:	fmov	d1, d2
  404e9c:	fmov	d4, d2
  404ea0:	mov	w0, #0x0                   	// #0
  404ea4:	ldr	x9, [x3, #32]
  404ea8:	b	404ecc <nftw@plt+0x234c>
  404eac:	fcmpe	d0, d5
  404eb0:	mov	w0, #0x1                   	// #1
  404eb4:	b.lt	404ec0 <nftw@plt+0x2340>  // b.tstop
  404eb8:	mov	w1, w0
  404ebc:	nop
  404ec0:	add	x2, x2, #0x1
  404ec4:	cmp	w7, w2
  404ec8:	b.ls	404f14 <nftw@plt+0x2394>  // b.plast
  404ecc:	ldr	d3, [x9, x2, lsl #3]
  404ed0:	ldr	d0, [x10, x2, lsl #3]
  404ed4:	orr	v6.8b, v3.8b, v0.8b
  404ed8:	fmov	x11, d6
  404edc:	cbz	x11, 404ec0 <nftw@plt+0x2340>
  404ee0:	scvtf	d3, d3
  404ee4:	scvtf	d0, d0
  404ee8:	fdiv	d3, d3, d4
  404eec:	fdiv	d0, d0, d4
  404ef0:	fcmpe	d3, d5
  404ef4:	fadd	d1, d1, d3
  404ef8:	fadd	d2, d2, d0
  404efc:	b.lt	404eac <nftw@plt+0x232c>  // b.tstop
  404f00:	add	x2, x2, #0x1
  404f04:	mov	w1, #0x1                   	// #1
  404f08:	cmp	w7, w2
  404f0c:	mov	w0, w1
  404f10:	b.hi	404ecc <nftw@plt+0x234c>  // b.pmore
  404f14:	ldr	w2, [x24]
  404f18:	fadd	d11, d11, d1
  404f1c:	fadd	d10, d10, d2
  404f20:	cmp	w2, #0x0
  404f24:	csel	w0, w0, wzr, ne  // ne = any
  404f28:	cbz	w0, 404e38 <nftw@plt+0x22b8>
  404f2c:	ldr	w0, [x8]
  404f30:	cmp	w0, #0x0
  404f34:	csinc	w1, w1, wzr, ne  // ne = any
  404f38:	cbz	w1, 404e38 <nftw@plt+0x22b8>
  404f3c:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  404f40:	fmov	d3, x0
  404f44:	movi	d0, #0x0
  404f48:	ldr	w1, [x3, #8]
  404f4c:	fmul	d2, d2, d3
  404f50:	fmul	d1, d1, d3
  404f54:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404f58:	add	x0, x0, #0x2f8
  404f5c:	str	w4, [sp, #128]
  404f60:	bl	402a90 <printf@plt>
  404f64:	ldr	w4, [sp, #128]
  404f68:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404f6c:	ldr	w5, [x25, #104]
  404f70:	add	x8, x0, #0x5b0
  404f74:	add	w4, w4, #0x1
  404f78:	cmp	w5, w4
  404f7c:	b.hi	404e44 <nftw@plt+0x22c4>  // b.pmore
  404f80:	stp	d11, d10, [sp, #144]
  404f84:	ldr	w0, [x28, #1452]
  404f88:	cbz	w0, 404fd4 <nftw@plt+0x2454>
  404f8c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  404f90:	ldr	w0, [x0, #1456]
  404f94:	cbz	w0, 404fa4 <nftw@plt+0x2424>
  404f98:	mov	w0, #0x44                  	// #68
  404f9c:	tst	w26, w0
  404fa0:	b.eq	404fd4 <nftw@plt+0x2454>  // b.none
  404fa4:	ldp	d11, d10, [sp, #144]
  404fa8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  404fac:	fmov	d2, x0
  404fb0:	movi	d0, #0x0
  404fb4:	mov	x1, x22
  404fb8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404fbc:	fmul	d1, d11, d2
  404fc0:	fmul	d2, d10, d2
  404fc4:	add	x0, x0, #0x330
  404fc8:	bl	402a90 <printf@plt>
  404fcc:	fadd	d9, d9, d11
  404fd0:	fadd	d8, d8, d10
  404fd4:	add	w27, w27, #0x1
  404fd8:	add	x20, x20, #0x18
  404fdc:	cmp	w27, w23
  404fe0:	b.cc	404dc8 <nftw@plt+0x2248>  // b.lo, b.ul, b.last
  404fe4:	ldp	x25, x26, [sp, #64]
  404fe8:	ldp	d10, d11, [sp, #112]
  404fec:	ldr	w0, [x28, #1452]
  404ff0:	cbnz	w0, 405340 <nftw@plt+0x27c0>
  404ff4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  404ff8:	add	x0, x0, #0x3a0
  404ffc:	bl	402830 <puts@plt>
  405000:	ldr	w1, [x19, #344]
  405004:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405008:	ldr	w2, [x19, #348]
  40500c:	add	x0, x0, #0x3f0
  405010:	ldr	w3, [x19, #336]
  405014:	sub	w3, w1, w3
  405018:	bl	402a90 <printf@plt>
  40501c:	ldr	w1, [x19, #336]
  405020:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405024:	ldr	w2, [x19, #340]
  405028:	add	x0, x0, #0x418
  40502c:	bl	402a90 <printf@plt>
  405030:	ldr	w1, [x19, #368]
  405034:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405038:	ldr	w2, [x19, #372]
  40503c:	add	x0, x0, #0x438
  405040:	ldr	w3, [x19, #376]
  405044:	bl	402a90 <printf@plt>
  405048:	ldr	w1, [x19, #360]
  40504c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405050:	ldr	w2, [x19, #364]
  405054:	add	x0, x0, #0x460
  405058:	ldr	w3, [x19, #380]
  40505c:	bl	402a90 <printf@plt>
  405060:	ldr	w1, [x19, #352]
  405064:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405068:	ldr	w2, [x19, #356]
  40506c:	add	x0, x0, #0x488
  405070:	ldr	w3, [x19, #384]
  405074:	bl	402a90 <printf@plt>
  405078:	mov	w0, #0x1                   	// #1
  40507c:	ldp	x19, x20, [sp, #16]
  405080:	ldp	x21, x22, [sp, #32]
  405084:	ldp	x23, x24, [sp, #48]
  405088:	ldp	x27, x28, [sp, #80]
  40508c:	ldp	d8, d9, [sp, #96]
  405090:	ldp	x29, x30, [sp], #160
  405094:	ret
  405098:	mov	x1, x22
  40509c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4050a0:	add	x0, x0, #0x4b0
  4050a4:	bl	402a90 <printf@plt>
  4050a8:	ldr	x21, [x20, #8]
  4050ac:	cbnz	x21, 404e18 <nftw@plt+0x2298>
  4050b0:	mov	x21, x25
  4050b4:	add	x2, sp, #0x90
  4050b8:	str	xzr, [sp, #152]
  4050bc:	ldr	w3, [x21, #104]
  4050c0:	cbz	w3, 405190 <nftw@plt+0x2610>
  4050c4:	movi	d1, #0x0
  4050c8:	mov	x0, #0x0                   	// #0
  4050cc:	ldr	x5, [x21, #112]
  4050d0:	fmov	d2, d1
  4050d4:	b	4050e4 <nftw@plt+0x2564>
  4050d8:	add	x0, x0, #0x1
  4050dc:	cmp	w3, w0
  4050e0:	b.ls	405130 <nftw@plt+0x25b0>  // b.plast
  4050e4:	ldr	x1, [x5, x0, lsl #3]
  4050e8:	cbz	x1, 4050d8 <nftw@plt+0x2558>
  4050ec:	ldr	x4, [x1]
  4050f0:	cmp	x4, x21
  4050f4:	b.ne	4050d8 <nftw@plt+0x2558>  // b.any
  4050f8:	ldr	w4, [x1, #24]
  4050fc:	cbz	w4, 4050d8 <nftw@plt+0x2558>
  405100:	ldr	x6, [x1, #32]
  405104:	mov	x1, #0x0                   	// #0
  405108:	ldr	d0, [x6, x1, lsl #3]
  40510c:	add	x1, x1, #0x1
  405110:	cmp	w4, w1
  405114:	scvtf	d0, d0
  405118:	fdiv	d0, d0, d2
  40511c:	fadd	d1, d1, d0
  405120:	b.hi	405108 <nftw@plt+0x2588>  // b.pmore
  405124:	add	x0, x0, #0x1
  405128:	cmp	w3, w0
  40512c:	b.hi	4050e4 <nftw@plt+0x2564>  // b.pmore
  405130:	str	d1, [x2]
  405134:	b	404f84 <nftw@plt+0x2404>
  405138:	ldr	x21, [x20, #8]
  40513c:	cbz	x21, 404fd4 <nftw@plt+0x2454>
  405140:	ldrb	w26, [x20, #16]
  405144:	mov	w0, #0x11                  	// #17
  405148:	and	w0, w26, w0
  40514c:	cmp	w0, #0x11
  405150:	b.eq	404fd4 <nftw@plt+0x2454>  // b.none
  405154:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405158:	ldr	x22, [x21, #24]
  40515c:	ldr	w0, [x0, #1448]
  405160:	cbnz	w0, 405170 <nftw@plt+0x25f0>
  405164:	mov	x0, x22
  405168:	bl	403cd0 <nftw@plt+0x1150>
  40516c:	mov	x22, x0
  405170:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405174:	add	x24, x0, #0x5a4
  405178:	ldr	w0, [x0, #1444]
  40517c:	cbnz	w0, 40531c <nftw@plt+0x279c>
  405180:	ldr	w3, [x21, #104]
  405184:	add	x2, sp, #0x98
  405188:	str	xzr, [sp, #144]
  40518c:	cbnz	w3, 4050c4 <nftw@plt+0x2544>
  405190:	movi	d1, #0x0
  405194:	str	d1, [x2]
  405198:	b	404f84 <nftw@plt+0x2404>
  40519c:	fmul	d0, d2, d1
  4051a0:	mov	x0, x9
  4051a4:	fcvtzs	x1, d0
  4051a8:	bl	403a78 <nftw@plt+0xef8>
  4051ac:	tst	w0, #0xff
  4051b0:	b.eq	4052f4 <nftw@plt+0x2774>  // b.none
  4051b4:	ldr	w0, [x19, #360]
  4051b8:	mov	w9, #0x2                   	// #2
  4051bc:	add	w0, w0, #0x1
  4051c0:	str	w0, [x19, #360]
  4051c4:	cbz	x11, 404d94 <nftw@plt+0x2214>
  4051c8:	ldr	w2, [x19, #348]
  4051cc:	mov	x0, x11
  4051d0:	mov	x1, #0x0                   	// #0
  4051d4:	add	w2, w2, #0x1
  4051d8:	str	w2, [x19, #348]
  4051dc:	bl	403a78 <nftw@plt+0xef8>
  4051e0:	tst	w0, #0xff
  4051e4:	b.eq	405278 <nftw@plt+0x26f8>  // b.none
  4051e8:	ldr	w1, [x19, #356]
  4051ec:	orr	w0, w9, #0x10
  4051f0:	strb	w0, [x10, #16]
  4051f4:	tst	w9, w13
  4051f8:	add	w1, w1, #0x1
  4051fc:	str	w1, [x19, #356]
  405200:	b.eq	405228 <nftw@plt+0x26a8>  // b.none
  405204:	ldr	w1, [x19, #376]
  405208:	and	w2, w0, w15
  40520c:	cmp	w2, #0x22
  405210:	add	w1, w1, #0x1
  405214:	str	w1, [x19, #376]
  405218:	b.ne	405228 <nftw@plt+0x26a8>  // b.any
  40521c:	ldr	w1, [x19, #380]
  405220:	add	w1, w1, #0x1
  405224:	str	w1, [x19, #380]
  405228:	and	w0, w0, w18
  40522c:	cmp	w0, #0x11
  405230:	b.ne	404da8 <nftw@plt+0x2228>  // b.any
  405234:	ldr	w0, [x19, #384]
  405238:	add	w0, w0, #0x1
  40523c:	str	w0, [x19, #384]
  405240:	b	404da8 <nftw@plt+0x2228>
  405244:	cbz	x11, 404da8 <nftw@plt+0x2228>
  405248:	ldr	w3, [x19, #340]
  40524c:	mov	x0, x11
  405250:	ldr	w2, [x19, #348]
  405254:	mov	x1, #0x0                   	// #0
  405258:	add	w3, w3, #0x1
  40525c:	str	w3, [x19, #340]
  405260:	add	w2, w2, #0x1
  405264:	str	w2, [x19, #348]
  405268:	bl	403a78 <nftw@plt+0xef8>
  40526c:	tst	w0, #0xff
  405270:	mov	w9, #0x8                   	// #8
  405274:	b.ne	4052b4 <nftw@plt+0x2734>  // b.any
  405278:	fmul	d0, d2, d1
  40527c:	mov	x0, x11
  405280:	fcvtzs	x1, d0
  405284:	bl	403a78 <nftw@plt+0xef8>
  405288:	tst	w0, #0xff
  40528c:	b.eq	4052dc <nftw@plt+0x275c>  // b.none
  405290:	ldr	w1, [x19, #364]
  405294:	orr	w0, w9, #0x20
  405298:	strb	w0, [x10, #16]
  40529c:	tst	w9, w13
  4052a0:	add	w1, w1, #0x1
  4052a4:	str	w1, [x19, #364]
  4052a8:	b.ne	405204 <nftw@plt+0x2684>  // b.any
  4052ac:	tbnz	w9, #1, 40521c <nftw@plt+0x269c>
  4052b0:	b	404da8 <nftw@plt+0x2228>
  4052b4:	ldr	w1, [x19, #356]
  4052b8:	mov	w0, #0x18                  	// #24
  4052bc:	strb	w14, [x10, #16]
  4052c0:	add	w1, w1, #0x1
  4052c4:	str	w1, [x19, #356]
  4052c8:	b	405228 <nftw@plt+0x26a8>
  4052cc:	ldr	x0, [x28, #1392]
  4052d0:	mov	x1, x27
  4052d4:	bl	407c40 <nftw@plt+0x50c0>
  4052d8:	b	404ccc <nftw@plt+0x214c>
  4052dc:	ldr	w1, [x19, #372]
  4052e0:	orr	w0, w9, #0x40
  4052e4:	strb	w0, [x10, #16]
  4052e8:	add	w1, w1, #0x1
  4052ec:	str	w1, [x19, #372]
  4052f0:	b	405204 <nftw@plt+0x2684>
  4052f4:	ldr	w0, [x19, #368]
  4052f8:	add	w0, w0, #0x1
  4052fc:	str	w0, [x19, #368]
  405300:	cbnz	x11, 4053e8 <nftw@plt+0x2868>
  405304:	ldr	w1, [x19, #336]
  405308:	mov	w0, #0x84                  	// #132
  40530c:	strb	w21, [x10, #16]
  405310:	add	w1, w1, #0x1
  405314:	str	w1, [x19, #336]
  405318:	b	405204 <nftw@plt+0x2684>
  40531c:	mov	x1, x22
  405320:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405324:	add	x0, x0, #0x4b0
  405328:	bl	402a90 <printf@plt>
  40532c:	ldr	x21, [x20, #8]
  405330:	str	xzr, [sp, #144]
  405334:	cbz	x21, 404e18 <nftw@plt+0x2298>
  405338:	add	x2, sp, #0x98
  40533c:	b	4050bc <nftw@plt+0x253c>
  405340:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  405344:	fmov	d1, x0
  405348:	movi	d0, #0x0
  40534c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  405350:	fmul	d2, d8, d1
  405354:	fmul	d1, d9, d1
  405358:	add	x1, x1, #0xbd0
  40535c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405360:	add	x0, x0, #0x368
  405364:	bl	402a90 <printf@plt>
  405368:	b	404ff4 <nftw@plt+0x2474>
  40536c:	fmov	d11, d10
  405370:	b	404f80 <nftw@plt+0x2400>
  405374:	movi	d0, #0x0
  405378:	fadd	d11, d11, d0
  40537c:	fadd	d10, d10, d0
  405380:	b	404e38 <nftw@plt+0x22b8>
  405384:	cbz	x1, 4053d0 <nftw@plt+0x2850>
  405388:	stp	x25, x26, [sp, #64]
  40538c:	b	404be8 <nftw@plt+0x2068>
  405390:	mov	w0, #0x0                   	// #0
  405394:	b	404c40 <nftw@plt+0x20c0>
  405398:	cbnz	w23, 4053f0 <nftw@plt+0x2870>
  40539c:	movi	d8, #0x0
  4053a0:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4053a4:	adrp	x28, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4053a8:	add	x19, x19, #0x5b8
  4053ac:	ldp	x25, x26, [sp, #64]
  4053b0:	fmov	d9, d8
  4053b4:	b	404fec <nftw@plt+0x246c>
  4053b8:	mov	w0, #0x30                  	// #48
  4053bc:	mov	w23, w24
  4053c0:	umull	x0, w24, w0
  4053c4:	bl	402670 <malloc@plt>
  4053c8:	mov	x20, x0
  4053cc:	b	404c14 <nftw@plt+0x2094>
  4053d0:	movi	d8, #0x0
  4053d4:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4053d8:	adrp	x28, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4053dc:	add	x19, x19, #0x5b8
  4053e0:	fmov	d9, d8
  4053e4:	b	404fec <nftw@plt+0x246c>
  4053e8:	mov	w9, #0x4                   	// #4
  4053ec:	b	4051c8 <nftw@plt+0x2648>
  4053f0:	stp	d10, d11, [sp, #112]
  4053f4:	b	404d28 <nftw@plt+0x21a8>
  4053f8:	stp	x29, x30, [sp, #-32]!
  4053fc:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405400:	mov	x2, #0x1                   	// #1
  405404:	mov	x29, sp
  405408:	ldr	x3, [x1, #1864]
  40540c:	stp	x19, x20, [sp, #16]
  405410:	mov	w19, w0
  405414:	add	x20, x1, #0x748
  405418:	lsl	w1, w0, #2
  40541c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405420:	add	x0, x0, #0x768
  405424:	bl	402950 <fwrite@plt>
  405428:	cmp	x0, #0x1
  40542c:	b.eq	405438 <nftw@plt+0x28b8>  // b.none
  405430:	mov	w0, #0x1                   	// #1
  405434:	str	w0, [x20, #24]
  405438:	ldp	w1, w0, [x20, #8]
  40543c:	add	w1, w1, w19
  405440:	sub	w19, w0, w19
  405444:	stp	w1, w19, [x20, #8]
  405448:	ldp	x19, x20, [sp, #16]
  40544c:	ldp	x29, x30, [sp], #32
  405450:	ret
  405454:	nop
  405458:	stp	x29, x30, [sp, #-32]!
  40545c:	mov	x29, sp
  405460:	stp	x19, x20, [sp, #16]
  405464:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405468:	add	x19, x19, #0x748
  40546c:	mov	w20, w0
  405470:	ldr	w0, [x19, #12]
  405474:	cmp	w0, #0x3ff
  405478:	b.hi	40549c <nftw@plt+0x291c>  // b.pmore
  40547c:	ubfiz	x1, x0, #2, #32
  405480:	add	w20, w20, w0
  405484:	add	x0, x1, #0x20
  405488:	str	w20, [x19, #12]
  40548c:	add	x0, x19, x0
  405490:	ldp	x19, x20, [sp, #16]
  405494:	ldp	x29, x30, [sp], #32
  405498:	ret
  40549c:	mov	w0, #0x400                 	// #1024
  4054a0:	bl	4053f8 <nftw@plt+0x2878>
  4054a4:	ldr	w0, [x19, #12]
  4054a8:	cbz	w0, 40547c <nftw@plt+0x28fc>
  4054ac:	ldr	w1, [x19, #4128]
  4054b0:	add	w20, w20, w0
  4054b4:	str	w1, [x19, #32]
  4054b8:	ubfiz	x1, x0, #2, #32
  4054bc:	add	x0, x1, #0x20
  4054c0:	str	w20, [x19, #12]
  4054c4:	add	x0, x19, x0
  4054c8:	ldp	x19, x20, [sp, #16]
  4054cc:	ldp	x29, x30, [sp], #32
  4054d0:	ret
  4054d4:	nop
  4054d8:	stp	x29, x30, [sp, #-32]!
  4054dc:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4054e0:	mov	x29, sp
  4054e4:	stp	x19, x20, [sp, #16]
  4054e8:	add	x19, x2, #0x748
  4054ec:	mov	w20, w0
  4054f0:	ldp	w1, w4, [x19, #12]
  4054f4:	ldr	w0, [x19, #28]
  4054f8:	sub	w4, w4, w1
  4054fc:	cmp	w0, #0x0
  405500:	b.le	405580 <nftw@plt+0x2a00>
  405504:	cmp	w4, w20
  405508:	b.cs	405560 <nftw@plt+0x29e0>  // b.hs, b.nlast
  40550c:	ldr	w0, [x19, #8]
  405510:	add	w0, w0, w1
  405514:	str	w0, [x19, #8]
  405518:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40551c:	add	x0, x0, #0x768
  405520:	cbz	w4, 40552c <nftw@plt+0x29ac>
  405524:	ldr	w1, [x0, w1, uxtw #2]
  405528:	str	w1, [x19, #32]
  40552c:	ldr	x3, [x2, #1864]
  405530:	mov	x1, #0x1                   	// #1
  405534:	add	x0, x0, w4, uxtw #2
  405538:	mov	x2, #0x1000                	// #4096
  40553c:	stp	wzr, w4, [x19, #12]
  405540:	bl	4028d0 <fread@plt>
  405544:	lsr	x0, x0, #2
  405548:	ldr	w1, [x19, #16]
  40554c:	add	w1, w1, w0
  405550:	str	w1, [x19, #16]
  405554:	cmp	w1, w20
  405558:	b.cc	405590 <nftw@plt+0x2a10>  // b.lo, b.ul, b.last
  40555c:	ldr	w1, [x19, #12]
  405560:	ubfiz	x0, x1, #2, #32
  405564:	add	w20, w20, w1
  405568:	add	x0, x0, #0x20
  40556c:	str	w20, [x19, #12]
  405570:	add	x0, x19, x0
  405574:	ldp	x19, x20, [sp, #16]
  405578:	ldp	x29, x30, [sp], #32
  40557c:	ret
  405580:	mov	x0, #0x0                   	// #0
  405584:	ldp	x19, x20, [sp, #16]
  405588:	ldp	x29, x30, [sp], #32
  40558c:	ret
  405590:	ldr	w2, [x19, #20]
  405594:	mov	x0, #0x0                   	// #0
  405598:	add	w20, w20, w2
  40559c:	sub	w20, w20, w1
  4055a0:	stp	wzr, w20, [x19, #16]
  4055a4:	b	405574 <nftw@plt+0x29f4>
  4055a8:	stp	x29, x30, [sp, #-64]!
  4055ac:	mov	x29, sp
  4055b0:	stp	x21, x22, [sp, #32]
  4055b4:	cbz	x1, 40562c <nftw@plt+0x2aac>
  4055b8:	mov	x22, x1
  4055bc:	ldr	x21, [x1]
  4055c0:	cbz	w2, 405614 <nftw@plt+0x2a94>
  4055c4:	stp	x19, x20, [sp, #16]
  4055c8:	sub	w20, w2, #0x1
  4055cc:	add	x1, x0, #0x28
  4055d0:	add	x19, x0, #0x20
  4055d4:	add	x20, x1, w20, uxtw #3
  4055d8:	mov	w2, #0x0                   	// #0
  4055dc:	str	x23, [sp, #48]
  4055e0:	ldr	x3, [x19]
  4055e4:	ubfiz	x0, x2, #4, #32
  4055e8:	add	w23, w2, #0x1
  4055ec:	add	x0, x22, x0
  4055f0:	add	x19, x19, #0x8
  4055f4:	cbz	x3, 405604 <nftw@plt+0x2a84>
  4055f8:	ldr	x0, [x0, #48]
  4055fc:	bl	402910 <free@plt>
  405600:	mov	w2, w23
  405604:	cmp	x19, x20
  405608:	b.ne	4055e0 <nftw@plt+0x2a60>  // b.any
  40560c:	ldp	x19, x20, [sp, #16]
  405610:	ldr	x23, [sp, #48]
  405614:	mov	x0, x22
  405618:	bl	402910 <free@plt>
  40561c:	mov	x0, x21
  405620:	ldp	x21, x22, [sp, #32]
  405624:	ldp	x29, x30, [sp], #64
  405628:	ret
  40562c:	mov	x21, #0x0                   	// #0
  405630:	b	40561c <nftw@plt+0x2a9c>
  405634:	nop
  405638:	stp	x29, x30, [sp, #-32]!
  40563c:	mov	x29, sp
  405640:	str	x19, [sp, #16]
  405644:	mov	x19, x0
  405648:	ldrb	w4, [x1]
  40564c:	sub	w4, w4, #0x41
  405650:	and	w2, w4, #0xff
  405654:	cmp	w2, #0x19
  405658:	b.hi	405670 <nftw@plt+0x2af0>  // b.pmore
  40565c:	ldrb	w5, [x1, #1]
  405660:	sub	w5, w5, #0x30
  405664:	and	w2, w5, #0xff
  405668:	cmp	w2, #0x9
  40566c:	b.ls	405698 <nftw@plt+0x2b18>  // b.plast
  405670:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405674:	add	x0, x0, #0x698
  405678:	ldr	x1, [x0]
  40567c:	str	x1, [x19]
  405680:	ldrh	w0, [x0, #8]
  405684:	strh	w0, [x19, #8]
  405688:	mov	x0, x19
  40568c:	ldr	x19, [sp, #16]
  405690:	ldp	x29, x30, [sp], #32
  405694:	ret
  405698:	ldrb	w3, [x1, #2]
  40569c:	sub	w3, w3, #0x30
  4056a0:	and	w2, w3, #0xff
  4056a4:	cmp	w2, #0x9
  4056a8:	b.hi	405670 <nftw@plt+0x2af0>  // b.pmore
  4056ac:	ldrb	w6, [x1, #3]
  4056b0:	add	w2, w4, w4, lsl #2
  4056b4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4056b8:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4056bc:	cmp	w6, #0x2a
  4056c0:	add	x1, x1, #0x688
  4056c4:	add	x4, x4, #0x680
  4056c8:	add	w2, w5, w2, lsl #1
  4056cc:	csel	x4, x4, x1, eq  // eq = none
  4056d0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4056d4:	add	x1, x1, #0x6a8
  4056d8:	bl	4025b0 <sprintf@plt>
  4056dc:	b	405688 <nftw@plt+0x2b08>
  4056e0:	stp	x29, x30, [sp, #-288]!
  4056e4:	mov	x8, x0
  4056e8:	adrp	x11, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4056ec:	mov	x29, sp
  4056f0:	add	x10, sp, #0xe0
  4056f4:	add	x12, sp, #0x120
  4056f8:	mov	w0, #0xffffffc8            	// #-56
  4056fc:	mov	w9, #0xffffff80            	// #-128
  405700:	stp	x12, x12, [sp, #64]
  405704:	str	x10, [sp, #80]
  405708:	stp	w0, w9, [sp, #88]
  40570c:	stp	x19, x20, [sp, #16]
  405710:	ldr	x20, [x11, #1392]
  405714:	stp	x1, x2, [sp, #232]
  405718:	mov	x1, x8
  40571c:	ldp	x10, x11, [sp, #64]
  405720:	mov	x0, x20
  405724:	ldp	x8, x9, [sp, #80]
  405728:	add	x2, sp, #0x20
  40572c:	stp	x10, x11, [sp, #32]
  405730:	stp	x8, x9, [sp, #48]
  405734:	str	q0, [sp, #96]
  405738:	str	q1, [sp, #112]
  40573c:	str	q2, [sp, #128]
  405740:	str	q3, [sp, #144]
  405744:	str	q4, [sp, #160]
  405748:	str	q5, [sp, #176]
  40574c:	str	q6, [sp, #192]
  405750:	str	q7, [sp, #208]
  405754:	stp	x3, x4, [sp, #248]
  405758:	stp	x5, x6, [sp, #264]
  40575c:	str	x7, [sp, #280]
  405760:	bl	402a80 <vfprintf@plt>
  405764:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405768:	mov	w19, w0
  40576c:	add	x0, x1, #0x6b8
  405770:	bl	402ab0 <getenv@plt>
  405774:	cbnz	x0, 405788 <nftw@plt+0x2c08>
  405778:	mov	w0, w19
  40577c:	ldp	x19, x20, [sp, #16]
  405780:	ldp	x29, x30, [sp], #288
  405784:	ret
  405788:	mov	x3, x20
  40578c:	mov	x2, #0x21                  	// #33
  405790:	mov	x1, #0x1                   	// #1
  405794:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405798:	add	x0, x0, #0x6d0
  40579c:	bl	402950 <fwrite@plt>
  4057a0:	mov	w0, #0x1                   	// #1
  4057a4:	bl	402520 <exit@plt>
  4057a8:	stp	x29, x30, [sp, #-304]!
  4057ac:	mov	x29, sp
  4057b0:	stp	x19, x20, [sp, #16]
  4057b4:	mov	x19, x2
  4057b8:	mov	w2, #0x322a                	// #12842
  4057bc:	movk	w2, #0x4139, lsl #16
  4057c0:	cmp	w1, w2
  4057c4:	b.eq	40582c <nftw@plt+0x2cac>  // b.none
  4057c8:	mov	w2, #0x3941                	// #14657
  4057cc:	rev	w1, w1
  4057d0:	movk	w2, #0x2a32, lsl #16
  4057d4:	str	w1, [sp, #32]
  4057d8:	str	w2, [sp, #40]
  4057dc:	cbz	x19, 40583c <nftw@plt+0x2cbc>
  4057e0:	add	x1, sp, #0x28
  4057e4:	add	x0, sp, #0xb0
  4057e8:	bl	405638 <nftw@plt+0x2ab8>
  4057ec:	mov	x20, x0
  4057f0:	add	x1, sp, #0x20
  4057f4:	add	x0, sp, #0x30
  4057f8:	bl	405638 <nftw@plt+0x2ab8>
  4057fc:	mov	x4, x0
  405800:	mov	x2, x20
  405804:	add	x5, sp, #0x20
  405808:	add	x3, sp, #0x28
  40580c:	mov	x1, x19
  405810:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405814:	add	x0, x0, #0x6f8
  405818:	bl	4056e0 <nftw@plt+0x2b60>
  40581c:	mov	w0, #0x0                   	// #0
  405820:	ldp	x19, x20, [sp, #16]
  405824:	ldp	x29, x30, [sp], #304
  405828:	ret
  40582c:	mov	w0, #0x1                   	// #1
  405830:	ldp	x19, x20, [sp, #16]
  405834:	ldp	x29, x30, [sp], #304
  405838:	ret
  40583c:	ldr	x19, [x0]
  405840:	b	4057e0 <nftw@plt+0x2c60>
  405844:	nop
  405848:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40584c:	add	x1, x1, #0x748
  405850:	ldp	w2, w0, [x1, #8]
  405854:	add	w0, w2, w0
  405858:	ret
  40585c:	nop
  405860:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405864:	add	x2, x1, #0x748
  405868:	mov	w0, #0x1                   	// #1
  40586c:	ldr	x1, [x1, #1864]
  405870:	cbz	x1, 405878 <nftw@plt+0x2cf8>
  405874:	ldr	w0, [x2, #24]
  405878:	ret
  40587c:	nop
  405880:	stp	x29, x30, [sp, #-80]!
  405884:	mov	x29, sp
  405888:	stp	x19, x20, [sp, #16]
  40588c:	mov	x19, x0
  405890:	str	x21, [sp, #32]
  405894:	adrp	x21, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405898:	add	x20, x21, #0x748
  40589c:	strh	wzr, [sp, #50]
  4058a0:	stp	xzr, xzr, [sp, #56]
  4058a4:	bl	402630 <getpid@plt>
  4058a8:	mov	w4, w0
  4058ac:	mov	x3, #0xffffffff00000000    	// #-4294967296
  4058b0:	mov	w5, #0x1                   	// #1
  4058b4:	mov	x0, x19
  4058b8:	mov	w2, #0x1b6                 	// #438
  4058bc:	mov	w1, #0x42                  	// #66
  4058c0:	stp	xzr, x3, [x20, #8]
  4058c4:	str	wzr, [x20, #24]
  4058c8:	strh	w5, [sp, #48]
  4058cc:	str	w4, [sp, #72]
  4058d0:	bl	402680 <open@plt>
  4058d4:	tbnz	w0, #31, 40593c <nftw@plt+0x2dbc>
  4058d8:	mov	w19, w0
  4058dc:	add	x2, sp, #0x30
  4058e0:	mov	w0, w19
  4058e4:	mov	w1, #0x7                   	// #7
  4058e8:	bl	402960 <fcntl@plt>
  4058ec:	cbz	w0, 405900 <nftw@plt+0x2d80>
  4058f0:	bl	402aa0 <__errno_location@plt>
  4058f4:	ldr	w0, [x0]
  4058f8:	cmp	w0, #0x4
  4058fc:	b.eq	4058dc <nftw@plt+0x2d5c>  // b.none
  405900:	mov	w0, w19
  405904:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405908:	add	x1, x1, #0x748
  40590c:	bl	4484f0 <nftw@plt+0x45970>
  405910:	str	x0, [x21, #1864]
  405914:	cbz	x0, 405950 <nftw@plt+0x2dd0>
  405918:	mov	w19, #0x1                   	// #1
  40591c:	mov	x1, #0x0                   	// #0
  405920:	str	w19, [x20, #28]
  405924:	bl	402570 <setbuf@plt>
  405928:	mov	w0, w19
  40592c:	ldp	x19, x20, [sp, #16]
  405930:	ldr	x21, [sp, #32]
  405934:	ldp	x29, x30, [sp], #80
  405938:	ret
  40593c:	mov	w0, #0x0                   	// #0
  405940:	ldp	x19, x20, [sp, #16]
  405944:	ldr	x21, [sp, #32]
  405948:	ldp	x29, x30, [sp], #80
  40594c:	ret
  405950:	mov	w0, w19
  405954:	bl	4027a0 <close@plt>
  405958:	mov	w0, #0x0                   	// #0
  40595c:	ldp	x19, x20, [sp, #16]
  405960:	ldr	x21, [sp, #32]
  405964:	ldp	x29, x30, [sp], #80
  405968:	ret
  40596c:	nop
  405970:	stp	x29, x30, [sp, #-32]!
  405974:	mov	x29, sp
  405978:	stp	x19, x20, [sp, #16]
  40597c:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405980:	add	x19, x20, #0x748
  405984:	ldr	x0, [x20, #1864]
  405988:	cbz	x0, 4059a0 <nftw@plt+0x2e20>
  40598c:	ldr	w1, [x19, #12]
  405990:	cbnz	w1, 4059b4 <nftw@plt+0x2e34>
  405994:	bl	402620 <fclose@plt>
  405998:	str	xzr, [x20, #1864]
  40599c:	str	wzr, [x19, #16]
  4059a0:	ldr	w0, [x19, #24]
  4059a4:	str	wzr, [x19, #28]
  4059a8:	ldp	x19, x20, [sp, #16]
  4059ac:	ldp	x29, x30, [sp], #32
  4059b0:	ret
  4059b4:	ldr	w2, [x19, #28]
  4059b8:	tbz	w2, #31, 405994 <nftw@plt+0x2e14>
  4059bc:	mov	w0, w1
  4059c0:	bl	4053f8 <nftw@plt+0x2878>
  4059c4:	ldr	x0, [x20, #1864]
  4059c8:	b	405994 <nftw@plt+0x2e14>
  4059cc:	nop
  4059d0:	stp	x29, x30, [sp, #-32]!
  4059d4:	mov	x29, sp
  4059d8:	str	x19, [sp, #16]
  4059dc:	mov	w19, w0
  4059e0:	mov	w0, #0x1                   	// #1
  4059e4:	bl	405458 <nftw@plt+0x28d8>
  4059e8:	str	w19, [x0]
  4059ec:	ldr	x19, [sp, #16]
  4059f0:	ldp	x29, x30, [sp], #32
  4059f4:	ret
  4059f8:	stp	x29, x30, [sp, #-32]!
  4059fc:	mov	x29, sp
  405a00:	str	x19, [sp, #16]
  405a04:	mov	x19, x0
  405a08:	mov	w0, #0x2                   	// #2
  405a0c:	bl	405458 <nftw@plt+0x28d8>
  405a10:	str	x19, [x0]
  405a14:	ldr	x19, [sp, #16]
  405a18:	ldp	x29, x30, [sp], #32
  405a1c:	ret
  405a20:	stp	x29, x30, [sp, #-32]!
  405a24:	mov	x29, sp
  405a28:	stp	x19, x20, [sp, #16]
  405a2c:	mov	w19, w1
  405a30:	mov	w20, w0
  405a34:	mov	w0, #0x2                   	// #2
  405a38:	bl	405458 <nftw@plt+0x28d8>
  405a3c:	stp	w20, w19, [x0]
  405a40:	ldp	x19, x20, [sp, #16]
  405a44:	ldp	x29, x30, [sp], #32
  405a48:	ret
  405a4c:	nop
  405a50:	stp	x29, x30, [sp, #-32]!
  405a54:	mov	x29, sp
  405a58:	stp	x19, x20, [sp, #16]
  405a5c:	mov	x19, x1
  405a60:	mov	w20, w0
  405a64:	mov	w0, #0x2                   	// #2
  405a68:	bl	405458 <nftw@plt+0x28d8>
  405a6c:	mov	x1, x0
  405a70:	mov	w2, #0x2                   	// #2
  405a74:	mov	w0, #0x1                   	// #1
  405a78:	stp	w20, w2, [x1]
  405a7c:	ldr	w20, [x19]
  405a80:	bl	405458 <nftw@plt+0x28d8>
  405a84:	mov	x1, x0
  405a88:	mov	w0, #0x1                   	// #1
  405a8c:	ldr	x19, [x19, #8]
  405a90:	str	w20, [x1]
  405a94:	bl	405458 <nftw@plt+0x28d8>
  405a98:	str	w19, [x0]
  405a9c:	ldp	x19, x20, [sp, #16]
  405aa0:	ldp	x29, x30, [sp], #32
  405aa4:	ret
  405aa8:	stp	x29, x30, [sp, #-16]!
  405aac:	mov	w0, #0x1                   	// #1
  405ab0:	mov	x29, sp
  405ab4:	bl	4054d8 <nftw@plt+0x2958>
  405ab8:	cbz	x0, 405ac8 <nftw@plt+0x2f48>
  405abc:	ldr	w0, [x0]
  405ac0:	ldp	x29, x30, [sp], #16
  405ac4:	ret
  405ac8:	mov	w0, #0x0                   	// #0
  405acc:	ldp	x29, x30, [sp], #16
  405ad0:	ret
  405ad4:	nop
  405ad8:	stp	x29, x30, [sp, #-16]!
  405adc:	mov	w0, #0x2                   	// #2
  405ae0:	mov	x29, sp
  405ae4:	bl	4054d8 <nftw@plt+0x2958>
  405ae8:	cbz	x0, 405af8 <nftw@plt+0x2f78>
  405aec:	ldp	x29, x30, [sp], #16
  405af0:	ldr	x0, [x0]
  405af4:	ret
  405af8:	mov	x0, #0x0                   	// #0
  405afc:	ldp	x29, x30, [sp], #16
  405b00:	ret
  405b04:	nop
  405b08:	stp	x29, x30, [sp, #-80]!
  405b0c:	mov	x29, sp
  405b10:	stp	x19, x20, [sp, #16]
  405b14:	stp	x21, x22, [sp, #32]
  405b18:	stp	x23, x24, [sp, #48]
  405b1c:	mov	w23, #0x5e                  	// #94
  405b20:	mov	w24, #0x23                  	// #35
  405b24:	str	x0, [sp, #72]
  405b28:	bl	4024f0 <strlen@plt>
  405b2c:	add	x0, x0, #0x1
  405b30:	bl	402670 <malloc@plt>
  405b34:	ldr	x1, [sp, #72]
  405b38:	mov	x22, x0
  405b3c:	mov	x21, x0
  405b40:	ldrb	w2, [x1]
  405b44:	cbz	w2, 405b98 <nftw@plt+0x3018>
  405b48:	mov	x20, x1
  405b4c:	mov	w19, w2
  405b50:	b	405b5c <nftw@plt+0x2fdc>
  405b54:	ldrb	w19, [x20, #1]!
  405b58:	cbz	w19, 405b64 <nftw@plt+0x2fe4>
  405b5c:	cmp	w19, #0x2f
  405b60:	b.ne	405b54 <nftw@plt+0x2fd4>  // b.any
  405b64:	cmp	w2, #0x2e
  405b68:	sub	x2, x20, x1
  405b6c:	ccmp	x2, #0x2, #0x0, eq  // eq = none
  405b70:	b.eq	405bb4 <nftw@plt+0x3034>  // b.none
  405b74:	mov	x0, x21
  405b78:	add	x21, x21, x2
  405b7c:	bl	402490 <memcpy@plt>
  405b80:	mov	x1, x20
  405b84:	cbz	w19, 405b40 <nftw@plt+0x2fc0>
  405b88:	ldrb	w2, [x20, #1]
  405b8c:	add	x1, x20, #0x1
  405b90:	strb	w24, [x21], #1
  405b94:	cbnz	w2, 405b48 <nftw@plt+0x2fc8>
  405b98:	strb	wzr, [x21]
  405b9c:	mov	x0, x22
  405ba0:	ldp	x19, x20, [sp, #16]
  405ba4:	ldp	x21, x22, [sp, #32]
  405ba8:	ldp	x23, x24, [sp, #48]
  405bac:	ldp	x29, x30, [sp], #80
  405bb0:	ret
  405bb4:	ldrb	w0, [x1, #1]
  405bb8:	cmp	w0, #0x2e
  405bbc:	b.ne	405b74 <nftw@plt+0x2ff4>  // b.any
  405bc0:	strb	w23, [x21], #1
  405bc4:	b	405b80 <nftw@plt+0x3000>
  405bc8:	stp	x29, x30, [sp, #-16]!
  405bcc:	mov	w0, #0x1                   	// #1
  405bd0:	mov	x29, sp
  405bd4:	bl	4054d8 <nftw@plt+0x2958>
  405bd8:	cbz	x0, 405bec <nftw@plt+0x306c>
  405bdc:	ldr	w0, [x0]
  405be0:	cbz	w0, 405bec <nftw@plt+0x306c>
  405be4:	ldp	x29, x30, [sp], #16
  405be8:	b	4054d8 <nftw@plt+0x2958>
  405bec:	mov	x0, #0x0                   	// #0
  405bf0:	ldp	x29, x30, [sp], #16
  405bf4:	ret
  405bf8:	stp	x29, x30, [sp, #-32]!
  405bfc:	mov	x29, sp
  405c00:	str	x19, [sp, #16]
  405c04:	mov	x19, x0
  405c08:	mov	w0, #0x1                   	// #1
  405c0c:	bl	4054d8 <nftw@plt+0x2958>
  405c10:	cbz	x0, 405c3c <nftw@plt+0x30bc>
  405c14:	ldr	w0, [x0]
  405c18:	str	w0, [x19]
  405c1c:	mov	w0, #0x1                   	// #1
  405c20:	bl	4054d8 <nftw@plt+0x2958>
  405c24:	cbz	x0, 405c50 <nftw@plt+0x30d0>
  405c28:	ldr	w0, [x0]
  405c2c:	str	x0, [x19, #8]
  405c30:	ldr	x19, [sp, #16]
  405c34:	ldp	x29, x30, [sp], #32
  405c38:	ret
  405c3c:	mov	w0, #0x0                   	// #0
  405c40:	str	w0, [x19]
  405c44:	mov	w0, #0x1                   	// #1
  405c48:	bl	4054d8 <nftw@plt+0x2958>
  405c4c:	cbnz	x0, 405c28 <nftw@plt+0x30a8>
  405c50:	mov	x0, #0x0                   	// #0
  405c54:	str	x0, [x19, #8]
  405c58:	ldr	x19, [sp, #16]
  405c5c:	ldp	x29, x30, [sp], #32
  405c60:	ret
  405c64:	nop
  405c68:	stp	x29, x30, [sp, #-32]!
  405c6c:	add	w1, w0, w1
  405c70:	mov	x29, sp
  405c74:	stp	x19, x20, [sp, #16]
  405c78:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405c7c:	add	x19, x20, #0x748
  405c80:	ldr	w2, [x19, #8]
  405c84:	ldr	w0, [x19, #16]
  405c88:	sub	w2, w1, w2
  405c8c:	cmp	w2, w0
  405c90:	b.hi	405ca4 <nftw@plt+0x3124>  // b.pmore
  405c94:	str	w2, [x19, #12]
  405c98:	ldp	x19, x20, [sp, #16]
  405c9c:	ldp	x29, x30, [sp], #32
  405ca0:	ret
  405ca4:	ldr	x0, [x20, #1864]
  405ca8:	lsl	w1, w1, #2
  405cac:	mov	w2, #0x0                   	// #0
  405cb0:	stur	xzr, [x19, #12]
  405cb4:	bl	4027e0 <fseek@plt>
  405cb8:	ldr	x0, [x20, #1864]
  405cbc:	bl	4025a0 <ftell@plt>
  405cc0:	asr	x0, x0, #2
  405cc4:	str	w0, [x19, #8]
  405cc8:	ldp	x19, x20, [sp, #16]
  405ccc:	ldp	x29, x30, [sp], #32
  405cd0:	ret
  405cd4:	nop
  405cd8:	stp	x29, x30, [sp, #-48]!
  405cdc:	mov	x29, sp
  405ce0:	stp	x19, x20, [sp, #16]
  405ce4:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405ce8:	mov	w20, w0
  405cec:	str	x21, [sp, #32]
  405cf0:	add	x21, x19, #0x748
  405cf4:	ldr	w0, [x21, #12]
  405cf8:	cbnz	w0, 405d2c <nftw@plt+0x31ac>
  405cfc:	ldr	x0, [x19, #1864]
  405d00:	lsl	w1, w20, #2
  405d04:	mov	w2, #0x0                   	// #0
  405d08:	bl	4027e0 <fseek@plt>
  405d0c:	ldr	x0, [x19, #1864]
  405d10:	bl	4025a0 <ftell@plt>
  405d14:	asr	x0, x0, #2
  405d18:	str	w0, [x21, #8]
  405d1c:	ldp	x19, x20, [sp, #16]
  405d20:	ldr	x21, [sp, #32]
  405d24:	ldp	x29, x30, [sp], #48
  405d28:	ret
  405d2c:	bl	4053f8 <nftw@plt+0x2878>
  405d30:	b	405cfc <nftw@plt+0x317c>
  405d34:	nop
  405d38:	cmp	w1, #0x2
  405d3c:	b.le	405dc0 <nftw@plt+0x3240>
  405d40:	sub	w1, w1, #0x3
  405d44:	add	x8, x0, #0x10
  405d48:	and	w12, w1, #0xfffffffe
  405d4c:	mov	w9, #0x0                   	// #0
  405d50:	ldp	x11, x6, [x8]
  405d54:	mov	w2, w9
  405d58:	mov	w10, w9
  405d5c:	orr	w7, w9, #0xfffffffe
  405d60:	mov	x1, x8
  405d64:	add	w9, w9, #0x2
  405d68:	ldur	x4, [x1, #-8]
  405d6c:	mov	x3, x1
  405d70:	sub	w2, w2, #0x2
  405d74:	add	x5, x1, #0x8
  405d78:	cmp	x6, x4
  405d7c:	b.le	405dac <nftw@plt+0x322c>
  405d80:	ldur	x5, [x1, #-16]
  405d84:	stp	x5, x4, [x1]
  405d88:	cmp	w2, w7
  405d8c:	sub	x1, x1, #0x10
  405d90:	b.ne	405d68 <nftw@plt+0x31e8>  // b.any
  405d94:	sxtw	x1, w2
  405d98:	add	x1, x1, #0x2
  405d9c:	lsl	x1, x1, #3
  405da0:	add	x5, x1, #0x8
  405da4:	add	x3, x0, x1
  405da8:	add	x5, x0, x5
  405dac:	str	x11, [x3]
  405db0:	add	x8, x8, #0x10
  405db4:	str	x6, [x5]
  405db8:	cmp	w12, w10
  405dbc:	b.ne	405d50 <nftw@plt+0x31d0>  // b.any
  405dc0:	ret
  405dc4:	nop
  405dc8:	stp	x29, x30, [sp, #-224]!
  405dcc:	mov	x29, sp
  405dd0:	stp	x19, x20, [sp, #16]
  405dd4:	stp	x21, x22, [sp, #32]
  405dd8:	mov	x22, x0
  405ddc:	stp	x25, x26, [sp, #64]
  405de0:	str	w1, [sp, #168]
  405de4:	cbz	x0, 406aa0 <nftw@plt+0x3f20>
  405de8:	mov	x7, x0
  405dec:	mov	x19, #0x0                   	// #0
  405df0:	ldr	w5, [x7, #104]
  405df4:	cbz	w5, 405e3c <nftw@plt+0x32bc>
  405df8:	ldr	x6, [x7, #112]
  405dfc:	mov	x4, #0x0                   	// #0
  405e00:	ldr	x0, [x6, x4, lsl #3]
  405e04:	ldr	w2, [x0, #24]
  405e08:	cbz	w2, 405e30 <nftw@plt+0x32b0>
  405e0c:	ldr	x3, [x0, #32]
  405e10:	mov	x0, #0x0                   	// #0
  405e14:	nop
  405e18:	ldr	x1, [x3, x0, lsl #3]
  405e1c:	add	x0, x0, #0x1
  405e20:	cmp	x19, x1
  405e24:	csel	x19, x19, x1, ge  // ge = tcont
  405e28:	cmp	w2, w0
  405e2c:	b.hi	405e18 <nftw@plt+0x3298>  // b.pmore
  405e30:	add	x4, x4, #0x1
  405e34:	cmp	w5, w4
  405e38:	b.ne	405e00 <nftw@plt+0x3280>  // b.any
  405e3c:	ldr	x7, [x7, #8]
  405e40:	cbnz	x7, 405df0 <nftw@plt+0x3270>
  405e44:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405e48:	add	x0, x0, #0x7d0
  405e4c:	bl	402ab0 <getenv@plt>
  405e50:	cbz	x0, 406918 <nftw@plt+0x3d98>
  405e54:	mov	x1, #0x0                   	// #0
  405e58:	mov	w2, #0xa                   	// #10
  405e5c:	bl	4028c0 <strtol@plt>
  405e60:	mov	x1, x0
  405e64:	cmp	w1, #0x0
  405e68:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405e6c:	csel	w1, w1, wzr, ge  // ge = tcont
  405e70:	add	x0, x0, #0x7e8
  405e74:	str	w1, [sp, #128]
  405e78:	bl	402ab0 <getenv@plt>
  405e7c:	mov	x20, x0
  405e80:	cbz	x0, 40694c <nftw@plt+0x3dcc>
  405e84:	bl	4024f0 <strlen@plt>
  405e88:	cbz	x0, 40694c <nftw@plt+0x3dcc>
  405e8c:	sub	x21, x0, #0x1
  405e90:	ldrb	w1, [x20, x21]
  405e94:	cmp	w1, #0x2f
  405e98:	b.eq	406948 <nftw@plt+0x3dc8>  // b.none
  405e9c:	mov	x21, x0
  405ea0:	add	x0, x0, #0x1
  405ea4:	bl	402670 <malloc@plt>
  405ea8:	str	x0, [sp, #136]
  405eac:	mov	x1, x20
  405eb0:	mov	x2, x21
  405eb4:	bl	402490 <memcpy@plt>
  405eb8:	strb	wzr, [x0, x21]
  405ebc:	adrp	x26, 48c000 <_obstack_memory_used@@Base+0x425a0>
  405ec0:	add	x0, x26, #0x740
  405ec4:	str	x0, [sp, #104]
  405ec8:	cbz	x22, 4060dc <nftw@plt+0x355c>
  405ecc:	stp	x23, x24, [sp, #48]
  405ed0:	stp	x27, x28, [sp, #80]
  405ed4:	nop
  405ed8:	ldr	x1, [sp, #104]
  405edc:	stp	xzr, xzr, [sp, #192]
  405ee0:	ldr	x0, [x22, #96]
  405ee4:	str	xzr, [x1]
  405ee8:	cbz	x0, 405f3c <nftw@plt+0x33bc>
  405eec:	ldr	w3, [x22, #104]
  405ef0:	cbz	w3, 405f3c <nftw@plt+0x33bc>
  405ef4:	add	x20, x22, #0x20
  405ef8:	mov	x14, #0x0                   	// #0
  405efc:	nop
  405f00:	ldr	x1, [x22, #112]
  405f04:	mov	x0, #0x0                   	// #0
  405f08:	ldr	x1, [x1, x14, lsl #3]
  405f0c:	add	x1, x1, #0x18
  405f10:	ldr	x2, [x20, x0, lsl #3]
  405f14:	cbz	x2, 405f24 <nftw@plt+0x33a4>
  405f18:	cmp	x0, #0x8
  405f1c:	b.eq	406100 <nftw@plt+0x3580>  // b.none
  405f20:	add	x1, x1, #0x10
  405f24:	add	x0, x0, #0x1
  405f28:	cmp	x0, #0x9
  405f2c:	b.ne	405f10 <nftw@plt+0x3390>  // b.any
  405f30:	add	x14, x14, #0x1
  405f34:	cmp	w3, w14
  405f38:	b.ne	405f00 <nftw@plt+0x3380>  // b.any
  405f3c:	ldr	w0, [sp, #128]
  405f40:	ldr	x20, [x22, #24]
  405f44:	cbz	w0, 405f80 <nftw@plt+0x3400>
  405f48:	ldrb	w0, [x20]
  405f4c:	mov	x1, x20
  405f50:	cmp	w0, #0x2f
  405f54:	b.eq	4060f4 <nftw@plt+0x3574>  // b.none
  405f58:	cbz	w0, 405f80 <nftw@plt+0x3400>
  405f5c:	ldr	w2, [sp, #128]
  405f60:	cmp	w0, #0x2f
  405f64:	b.ne	405f70 <nftw@plt+0x33f0>  // b.any
  405f68:	sub	w2, w2, #0x1
  405f6c:	mov	x20, x1
  405f70:	ldrb	w0, [x1, #1]!
  405f74:	cmp	w2, #0x0
  405f78:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  405f7c:	b.ne	405f60 <nftw@plt+0x33e0>  // b.any
  405f80:	mov	x0, x20
  405f84:	bl	4024f0 <strlen@plt>
  405f88:	ldr	x26, [sp, #136]
  405f8c:	mov	x21, x0
  405f90:	cbz	x26, 406540 <nftw@plt+0x39c0>
  405f94:	add	x21, x21, #0x2
  405f98:	mov	x0, x26
  405f9c:	bl	4024f0 <strlen@plt>
  405fa0:	ldrb	w23, [x20]
  405fa4:	mov	x25, x0
  405fa8:	add	x0, x21, x0
  405fac:	bl	402670 <malloc@plt>
  405fb0:	strb	wzr, [x0]
  405fb4:	mov	x24, x0
  405fb8:	cbz	x25, 405fc8 <nftw@plt+0x3448>
  405fbc:	add	x2, x25, #0x1
  405fc0:	mov	x1, x26
  405fc4:	bl	402490 <memcpy@plt>
  405fc8:	cmp	w23, #0x2f
  405fcc:	b.eq	405fd8 <nftw@plt+0x3458>  // b.none
  405fd0:	mov	w0, #0x2f                  	// #47
  405fd4:	strb	w0, [x24], #1
  405fd8:	mov	x1, x20
  405fdc:	mov	x0, x24
  405fe0:	bl	4026e0 <strcat@plt>
  405fe4:	strb	wzr, [sp, #184]
  405fe8:	ldrb	w1, [x24]
  405fec:	cbz	w1, 406568 <nftw@plt+0x39e8>
  405ff0:	mov	x26, x24
  405ff4:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x115a0>
  405ff8:	mov	x25, x24
  405ffc:	add	x27, x27, #0x840
  406000:	cmp	w1, #0x25
  406004:	ldrb	w20, [x26, #1]!
  406008:	b.eq	40602c <nftw@plt+0x34ac>  // b.none
  40600c:	nop
  406010:	mov	x24, x26
  406014:	mov	w1, w20
  406018:	cbz	w1, 406030 <nftw@plt+0x34b0>
  40601c:	mov	x26, x24
  406020:	cmp	w1, #0x25
  406024:	ldrb	w20, [x26, #1]!
  406028:	b.ne	406010 <nftw@plt+0x3490>  // b.any
  40602c:	cbnz	w20, 406164 <nftw@plt+0x35e4>
  406030:	mov	x0, x25
  406034:	bl	405880 <nftw@plt+0x2d00>
  406038:	cbz	w0, 40646c <nftw@plt+0x38ec>
  40603c:	mov	w0, #0x1                   	// #1
  406040:	bl	4054d8 <nftw@plt+0x2958>
  406044:	cbz	x0, 406238 <nftw@plt+0x36b8>
  406048:	ldr	w0, [x0]
  40604c:	cbz	w0, 406238 <nftw@plt+0x36b8>
  406050:	mov	w1, #0x6461                	// #25697
  406054:	movk	w1, #0x6763, lsl #16
  406058:	cmp	w0, w1
  40605c:	b.eq	4065a8 <nftw@plt+0x3a28>  // b.none
  406060:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406064:	mov	x1, x25
  406068:	add	x0, x0, #0x8a8
  40606c:	bl	4056e0 <nftw@plt+0x2b60>
  406070:	ldr	x0, [sp, #104]
  406074:	ldr	x1, [x0]
  406078:	cbz	x1, 40609c <nftw@plt+0x351c>
  40607c:	nop
  406080:	mov	x0, x22
  406084:	mov	w2, #0x9                   	// #9
  406088:	bl	4055a8 <nftw@plt+0x2a28>
  40608c:	mov	x1, x0
  406090:	ldr	x0, [sp, #104]
  406094:	str	x1, [x0]
  406098:	cbnz	x1, 406080 <nftw@plt+0x3500>
  40609c:	bl	405970 <nftw@plt+0x2df0>
  4060a0:	cmp	w0, #0x0
  4060a4:	cbz	w0, 4060c4 <nftw@plt+0x3544>
  4060a8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4060ac:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4060b0:	add	x0, x0, #0x7a0
  4060b4:	add	x1, x1, #0x770
  4060b8:	csel	x0, x1, x0, lt  // lt = tstop
  4060bc:	mov	x1, x25
  4060c0:	bl	4056e0 <nftw@plt+0x2b60>
  4060c4:	mov	x0, x25
  4060c8:	bl	402910 <free@plt>
  4060cc:	ldr	x22, [x22, #8]
  4060d0:	cbnz	x22, 405ed8 <nftw@plt+0x3358>
  4060d4:	ldp	x23, x24, [sp, #48]
  4060d8:	ldp	x27, x28, [sp, #80]
  4060dc:	ldp	x19, x20, [sp, #16]
  4060e0:	ldp	x21, x22, [sp, #32]
  4060e4:	ldp	x25, x26, [sp, #64]
  4060e8:	ldr	x0, [sp, #136]
  4060ec:	ldp	x29, x30, [sp], #224
  4060f0:	b	402910 <free@plt>
  4060f4:	ldrb	w0, [x20, #1]
  4060f8:	add	x1, x20, #0x1
  4060fc:	b	405f58 <nftw@plt+0x33d8>
  406100:	ldr	w15, [x1]
  406104:	mov	w0, #0x8e39                	// #36409
  406108:	movk	w0, #0x38e3, lsl #16
  40610c:	smull	x13, w15, w0
  406110:	asr	x13, x13, #33
  406114:	sub	w13, w13, w15, asr #31
  406118:	add	w13, w13, w13, lsl #3
  40611c:	subs	w13, w15, w13
  406120:	b.ne	406b00 <nftw@plt+0x3f80>  // b.any
  406124:	ldr	x0, [x1, #8]
  406128:	cmp	w15, #0x0
  40612c:	add	x0, x0, #0x8
  406130:	b.le	405f30 <nftw@plt+0x33b0>
  406134:	nop
  406138:	add	w13, w13, #0x9
  40613c:	mov	w1, #0x8                   	// #8
  406140:	bl	405d38 <nftw@plt+0x31b8>
  406144:	cmp	w15, w13
  406148:	add	x0, x0, #0x48
  40614c:	b.gt	406138 <nftw@plt+0x35b8>
  406150:	ldr	w3, [x22, #104]
  406154:	add	x14, x14, #0x1
  406158:	cmp	w3, w14
  40615c:	b.ne	405f00 <nftw@plt+0x3380>  // b.any
  406160:	b	405f3c <nftw@plt+0x33bc>
  406164:	mov	x0, x25
  406168:	bl	4024f0 <strlen@plt>
  40616c:	cmp	w20, #0x70
  406170:	mov	x21, x0
  406174:	b.eq	406218 <nftw@plt+0x3698>  // b.none
  406178:	cmp	w20, #0x71
  40617c:	b.ne	406030 <nftw@plt+0x34b0>  // b.any
  406180:	ldrb	w0, [x24, #2]
  406184:	mov	x28, #0x0                   	// #0
  406188:	cmp	w0, #0x7b
  40618c:	b.eq	406570 <nftw@plt+0x39f0>  // b.none
  406190:	sub	x1, x26, x25
  406194:	sub	x24, x24, x25
  406198:	sub	w21, w21, w1
  40619c:	mov	x0, x28
  4061a0:	and	x20, x24, #0xffffffff
  4061a4:	bl	4024f0 <strlen@plt>
  4061a8:	mov	x23, x0
  4061ac:	add	w1, w24, #0x1
  4061b0:	add	w0, w21, w0
  4061b4:	add	w0, w1, w0
  4061b8:	and	x23, x23, #0xffffffff
  4061bc:	bl	402670 <malloc@plt>
  4061c0:	mov	x24, x0
  4061c4:	mov	x2, x20
  4061c8:	mov	x1, x25
  4061cc:	bl	402490 <memcpy@plt>
  4061d0:	add	x0, x0, x20
  4061d4:	mov	x1, x28
  4061d8:	mov	x2, x23
  4061dc:	bl	402490 <memcpy@plt>
  4061e0:	add	x0, x0, x23
  4061e4:	mov	x1, x26
  4061e8:	mov	w2, w21
  4061ec:	bl	402490 <memcpy@plt>
  4061f0:	mov	x1, x0
  4061f4:	add	x20, x20, x23
  4061f8:	mov	x0, x25
  4061fc:	mov	x25, x24
  406200:	add	x24, x24, x20
  406204:	strb	wzr, [x1, w21, uxtw]
  406208:	bl	402910 <free@plt>
  40620c:	ldrb	w1, [x24, #1]!
  406210:	cbnz	w1, 40601c <nftw@plt+0x349c>
  406214:	b	406030 <nftw@plt+0x34b0>
  406218:	bl	402630 <getpid@plt>
  40621c:	add	x26, x24, #0x2
  406220:	mov	w2, w0
  406224:	mov	x1, x27
  406228:	add	x0, sp, #0xd0
  40622c:	add	x28, sp, #0xd0
  406230:	bl	4025b0 <sprintf@plt>
  406234:	b	406190 <nftw@plt+0x3610>
  406238:	add	x0, sp, #0xc0
  40623c:	str	x0, [sp, #144]
  406240:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  406244:	add	x3, x0, #0x748
  406248:	mov	w4, #0xffffffff            	// #-1
  40624c:	mov	w2, #0x0                   	// #0
  406250:	ldr	x0, [x0, #1864]
  406254:	str	xzr, [x3, #8]
  406258:	mov	x1, #0x0                   	// #0
  40625c:	str	w4, [x3, #28]
  406260:	bl	4027e0 <fseek@plt>
  406264:	ldr	w0, [sp, #168]
  406268:	cbnz	w0, 406284 <nftw@plt+0x3704>
  40626c:	ldr	x1, [sp, #200]
  406270:	ldr	w0, [sp, #192]
  406274:	add	x1, x1, x19
  406278:	str	x1, [sp, #200]
  40627c:	add	w0, w0, #0x1
  406280:	str	w0, [sp, #192]
  406284:	mov	w0, #0x2                   	// #2
  406288:	bl	405458 <nftw@plt+0x28d8>
  40628c:	mov	x2, #0x6461                	// #25697
  406290:	mov	x1, x0
  406294:	movk	x2, #0x6763, lsl #16
  406298:	mov	w0, #0x1                   	// #1
  40629c:	movk	x2, #0x322a, lsl #32
  4062a0:	mov	w24, #0x0                   	// #0
  4062a4:	movk	x2, #0x4139, lsl #48
  4062a8:	str	x2, [x1]
  4062ac:	ldr	w20, [x22, #16]
  4062b0:	bl	405458 <nftw@plt+0x28d8>
  4062b4:	mov	x2, x0
  4062b8:	mov	w0, #0xa1000000            	// #-1593835520
  4062bc:	ldr	x1, [sp, #144]
  4062c0:	str	w20, [x2]
  4062c4:	bl	405a50 <nftw@plt+0x2ed0>
  4062c8:	ldr	w0, [x22, #104]
  4062cc:	cbz	w0, 406440 <nftw@plt+0x38c0>
  4062d0:	add	x27, x22, #0x20
  4062d4:	b	406310 <nftw@plt+0x3790>
  4062d8:	ldr	x0, [x22, #112]
  4062dc:	ldr	x20, [x0, w24, uxtw #3]
  4062e0:	cbz	x20, 4062f0 <nftw@plt+0x3770>
  4062e4:	ldr	x0, [x20]
  4062e8:	cmp	x0, x22
  4062ec:	b.eq	406450 <nftw@plt+0x38d0>  // b.none
  4062f0:	mov	w0, #0x2                   	// #2
  4062f4:	bl	405458 <nftw@plt+0x28d8>
  4062f8:	mov	x1, #0x1000000             	// #16777216
  4062fc:	str	x1, [x0]
  406300:	ldr	w0, [x22, #104]
  406304:	add	w24, w24, #0x1
  406308:	cmp	w0, w24
  40630c:	b.eq	406440 <nftw@plt+0x38c0>  // b.none
  406310:	ldr	x0, [sp, #104]
  406314:	ldr	x20, [x0]
  406318:	cbz	x20, 4062d8 <nftw@plt+0x3758>
  40631c:	ldr	w0, [x20, #8]
  406320:	cmp	w0, w24
  406324:	b.ne	4062d8 <nftw@plt+0x3758>  // b.any
  406328:	mov	w0, #0x2                   	// #2
  40632c:	bl	405458 <nftw@plt+0x28d8>
  406330:	mov	w1, #0x1                   	// #1
  406334:	add	x20, x20, #0x10
  406338:	str	w1, [sp, #112]
  40633c:	mov	x1, #0x1000000             	// #16777216
  406340:	movk	x1, #0x3, lsl #32
  406344:	str	x1, [x0]
  406348:	ldr	w2, [x20, #8]
  40634c:	mov	w0, #0x1                   	// #1
  406350:	str	w2, [sp, #124]
  406354:	add	x23, x20, #0x18
  406358:	mov	x21, #0x0                   	// #0
  40635c:	bl	405458 <nftw@plt+0x28d8>
  406360:	mov	x1, x0
  406364:	ldr	w2, [sp, #124]
  406368:	mov	w0, #0x1                   	// #1
  40636c:	str	w2, [x1]
  406370:	ldr	w2, [x20, #12]
  406374:	str	w2, [sp, #124]
  406378:	bl	405458 <nftw@plt+0x28d8>
  40637c:	mov	x1, x0
  406380:	ldr	w2, [sp, #124]
  406384:	mov	w0, #0x1                   	// #1
  406388:	str	w2, [x1]
  40638c:	ldr	w20, [x20, #16]
  406390:	bl	405458 <nftw@plt+0x28d8>
  406394:	str	w20, [x0]
  406398:	b	4063a8 <nftw@plt+0x3828>
  40639c:	add	x21, x21, #0x8
  4063a0:	cmp	x21, #0x48
  4063a4:	b.eq	406410 <nftw@plt+0x3890>  // b.none
  4063a8:	ldr	x0, [x27, x21]
  4063ac:	cbz	x0, 40639c <nftw@plt+0x381c>
  4063b0:	ldr	w28, [x23]
  4063b4:	mov	w0, #0x2                   	// #2
  4063b8:	bl	405458 <nftw@plt+0x28d8>
  4063bc:	sub	w20, w28, #0x1
  4063c0:	mov	w1, #0x1a10000             	// #27328512
  4063c4:	ldr	x26, [x23, #8]
  4063c8:	add	w4, w1, w21, lsl #14
  4063cc:	lsl	w3, w28, #1
  4063d0:	ubfiz	x20, x20, #3, #32
  4063d4:	stp	w4, w3, [x0]
  4063d8:	add	x20, x20, #0x8
  4063dc:	add	x20, x26, x20
  4063e0:	cbz	w28, 406400 <nftw@plt+0x3880>
  4063e4:	nop
  4063e8:	ldr	x28, [x26], #8
  4063ec:	mov	w0, #0x2                   	// #2
  4063f0:	bl	405458 <nftw@plt+0x28d8>
  4063f4:	str	x28, [x0]
  4063f8:	cmp	x26, x20
  4063fc:	b.ne	4063e8 <nftw@plt+0x3868>  // b.any
  406400:	add	x21, x21, #0x8
  406404:	add	x23, x23, #0x10
  406408:	cmp	x21, #0x48
  40640c:	b.ne	4063a8 <nftw@plt+0x3828>  // b.any
  406410:	ldr	w0, [sp, #112]
  406414:	cbz	w0, 406300 <nftw@plt+0x3780>
  406418:	ldr	x20, [sp, #104]
  40641c:	mov	x0, x22
  406420:	mov	w2, #0x9                   	// #9
  406424:	add	w24, w24, #0x1
  406428:	ldr	x1, [x20]
  40642c:	bl	4055a8 <nftw@plt+0x2a28>
  406430:	str	x0, [x20]
  406434:	ldr	w0, [x22, #104]
  406438:	cmp	w0, w24
  40643c:	b.ne	406310 <nftw@plt+0x3790>  // b.any
  406440:	mov	w0, #0x1                   	// #1
  406444:	bl	405458 <nftw@plt+0x28d8>
  406448:	str	wzr, [x0]
  40644c:	b	406070 <nftw@plt+0x34f0>
  406450:	mov	w0, #0x2                   	// #2
  406454:	bl	405458 <nftw@plt+0x28d8>
  406458:	mov	x1, #0x1000000             	// #16777216
  40645c:	str	wzr, [sp, #112]
  406460:	movk	x1, #0x3, lsl #32
  406464:	str	x1, [x0]
  406468:	b	406348 <nftw@plt+0x37c8>
  40646c:	ldrb	w21, [x25]
  406470:	mov	x23, x25
  406474:	cmp	w21, #0x2f
  406478:	b.ne	406484 <nftw@plt+0x3904>  // b.any
  40647c:	ldrb	w21, [x25, #1]
  406480:	add	x23, x25, #0x1
  406484:	mov	w20, #0x2f                  	// #47
  406488:	cbnz	w21, 406498 <nftw@plt+0x3918>
  40648c:	b	4064c4 <nftw@plt+0x3944>
  406490:	ldrb	w21, [x23, #1]!
  406494:	cbz	w21, 4064c4 <nftw@plt+0x3944>
  406498:	cmp	w21, #0x2f
  40649c:	b.ne	406490 <nftw@plt+0x3910>  // b.any
  4064a0:	strb	wzr, [x23]
  4064a4:	mov	x0, x25
  4064a8:	mov	w1, #0x0                   	// #0
  4064ac:	bl	402810 <access@plt>
  4064b0:	cmn	w0, #0x1
  4064b4:	b.eq	4064ec <nftw@plt+0x396c>  // b.none
  4064b8:	strb	w20, [x23]
  4064bc:	ldrb	w21, [x23, #1]!
  4064c0:	cbnz	w21, 406498 <nftw@plt+0x3918>
  4064c4:	mov	x0, x25
  4064c8:	bl	405880 <nftw@plt+0x2d00>
  4064cc:	cbnz	w0, 40603c <nftw@plt+0x34bc>
  4064d0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4064d4:	mov	x2, x25
  4064d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4064dc:	add	x1, x1, #0x888
  4064e0:	ldr	x0, [x0, #1392]
  4064e4:	bl	402b30 <fprintf@plt>
  4064e8:	b	4060c4 <nftw@plt+0x3544>
  4064ec:	mov	x0, x25
  4064f0:	mov	w1, #0x1ed                 	// #493
  4064f4:	bl	402b20 <mkdir@plt>
  4064f8:	cmn	w0, #0x1
  4064fc:	b.ne	4064b8 <nftw@plt+0x3938>  // b.any
  406500:	bl	402aa0 <__errno_location@plt>
  406504:	ldr	w0, [x0]
  406508:	cmp	w0, #0x11
  40650c:	b.eq	4064b8 <nftw@plt+0x3938>  // b.none
  406510:	mov	x1, x25
  406514:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406518:	add	x0, x0, #0x848
  40651c:	bl	4056e0 <nftw@plt+0x2b60>
  406520:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  406524:	strb	w21, [x23]
  406528:	mov	x2, x25
  40652c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406530:	ldr	x0, [x0, #1392]
  406534:	add	x1, x1, #0x870
  406538:	bl	402b30 <fprintf@plt>
  40653c:	b	4060c4 <nftw@plt+0x3544>
  406540:	add	x0, x0, #0x2
  406544:	bl	402670 <malloc@plt>
  406548:	mov	x24, x0
  40654c:	strb	wzr, [x0]
  406550:	mov	x1, x20
  406554:	mov	x0, x24
  406558:	bl	4026e0 <strcat@plt>
  40655c:	strb	wzr, [sp, #184]
  406560:	ldrb	w1, [x24]
  406564:	cbnz	w1, 405ff0 <nftw@plt+0x3470>
  406568:	mov	x25, x24
  40656c:	b	406030 <nftw@plt+0x34b0>
  406570:	add	x20, x24, #0x3
  406574:	mov	w1, #0x7d                  	// #125
  406578:	mov	x0, x20
  40657c:	bl	402940 <strchr@plt>
  406580:	cbz	x0, 406030 <nftw@plt+0x34b0>
  406584:	mov	x26, x0
  406588:	mov	x0, x20
  40658c:	strb	wzr, [x26], #1
  406590:	bl	402ab0 <getenv@plt>
  406594:	mov	x28, x0
  406598:	cmp	x0, #0x0
  40659c:	add	x0, sp, #0xb8
  4065a0:	csel	x28, x0, x28, eq  // eq = none
  4065a4:	b	406190 <nftw@plt+0x3610>
  4065a8:	mov	w0, #0x1                   	// #1
  4065ac:	bl	4054d8 <nftw@plt+0x2958>
  4065b0:	cbz	x0, 406a78 <nftw@plt+0x3ef8>
  4065b4:	ldr	w1, [x0]
  4065b8:	add	x28, x22, #0x18
  4065bc:	mov	x2, x25
  4065c0:	mov	x0, x28
  4065c4:	bl	4057a8 <nftw@plt+0x2c28>
  4065c8:	cbz	w0, 406070 <nftw@plt+0x34f0>
  4065cc:	mov	w0, #0x1                   	// #1
  4065d0:	bl	4054d8 <nftw@plt+0x2958>
  4065d4:	cbz	x0, 406a70 <nftw@plt+0x3ef0>
  4065d8:	ldr	w0, [x0]
  4065dc:	ldr	w1, [x22, #16]
  4065e0:	cmp	w1, w0
  4065e4:	b.eq	406604 <nftw@plt+0x3a84>  // b.none
  4065e8:	add	x2, sp, #0xc0
  4065ec:	mov	x1, x25
  4065f0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4065f4:	add	x0, x0, #0x8e0
  4065f8:	str	x2, [sp, #144]
  4065fc:	bl	4056e0 <nftw@plt+0x2b60>
  406600:	b	406240 <nftw@plt+0x36c0>
  406604:	mov	w0, #0x1                   	// #1
  406608:	bl	4054d8 <nftw@plt+0x2958>
  40660c:	cbz	x0, 406a80 <nftw@plt+0x3f00>
  406610:	ldr	w1, [x0]
  406614:	mov	w0, #0xa1000000            	// #-1593835520
  406618:	cmp	w1, w0
  40661c:	b.ne	406a80 <nftw@plt+0x3f00>  // b.any
  406620:	mov	w0, #0x1                   	// #1
  406624:	bl	4054d8 <nftw@plt+0x2958>
  406628:	cbz	x0, 406b18 <nftw@plt+0x3f98>
  40662c:	ldr	w0, [x0]
  406630:	cbz	w0, 406b18 <nftw@plt+0x3f98>
  406634:	add	x0, sp, #0xc0
  406638:	str	x0, [sp, #144]
  40663c:	bl	405bf8 <nftw@plt+0x3078>
  406640:	mov	w0, #0x1                   	// #1
  406644:	bl	4054d8 <nftw@plt+0x2958>
  406648:	cbz	x0, 406aa8 <nftw@plt+0x3f28>
  40664c:	ldr	w2, [x22, #104]
  406650:	ldr	w1, [x0]
  406654:	cbz	w2, 406af4 <nftw@plt+0x3f74>
  406658:	ldr	x0, [x22, #112]
  40665c:	mov	w2, #0x1000000             	// #16777216
  406660:	cmp	w1, w2
  406664:	ldr	x20, [x0]
  406668:	b.ne	406ab0 <nftw@plt+0x3f30>  // b.any
  40666c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406670:	add	x0, x0, #0x950
  406674:	str	x0, [sp, #160]
  406678:	ldr	x0, [sp, #104]
  40667c:	str	xzr, [sp, #112]
  406680:	str	x0, [sp, #152]
  406684:	mov	w0, #0x1                   	// #1
  406688:	bl	4054d8 <nftw@plt+0x2958>
  40668c:	ldr	x1, [sp, #112]
  406690:	str	w1, [sp, #124]
  406694:	str	w1, [sp, #132]
  406698:	cbz	x0, 406814 <nftw@plt+0x3c94>
  40669c:	ldr	w0, [x0]
  4066a0:	cbz	w0, 406814 <nftw@plt+0x3c94>
  4066a4:	cmp	w0, #0x3
  4066a8:	b.ne	40685c <nftw@plt+0x3cdc>  // b.any
  4066ac:	cbz	x20, 4066bc <nftw@plt+0x3b3c>
  4066b0:	ldr	x0, [x20]
  4066b4:	cmp	x0, x22
  4066b8:	b.eq	406974 <nftw@plt+0x3df4>  // b.none
  4066bc:	add	x0, x22, #0x60
  4066c0:	mov	w1, #0x0                   	// #0
  4066c4:	nop
  4066c8:	ldr	x2, [x0], #-8
  4066cc:	cmp	x2, #0x0
  4066d0:	cinc	w1, w1, ne  // ne = any
  4066d4:	cmp	x28, x0
  4066d8:	b.ne	4066c8 <nftw@plt+0x3b48>  // b.any
  4066dc:	lsl	w0, w1, #4
  4066e0:	add	w0, w0, #0x38
  4066e4:	bl	402670 <malloc@plt>
  4066e8:	mov	x24, x0
  4066ec:	ldr	w1, [sp, #132]
  4066f0:	mov	w0, #0x1                   	// #1
  4066f4:	str	xzr, [x24]
  4066f8:	str	w1, [x24, #8]
  4066fc:	bl	4054d8 <nftw@plt+0x2958>
  406700:	cbz	x0, 4068b0 <nftw@plt+0x3d30>
  406704:	ldr	w1, [x0]
  406708:	mov	w0, #0x1                   	// #1
  40670c:	str	w1, [x24, #24]
  406710:	bl	4054d8 <nftw@plt+0x2958>
  406714:	cbz	x0, 4068c4 <nftw@plt+0x3d44>
  406718:	ldr	w1, [x0]
  40671c:	mov	w0, #0x1                   	// #1
  406720:	str	w1, [x24, #28]
  406724:	bl	4054d8 <nftw@plt+0x2958>
  406728:	cbz	x0, 4068d8 <nftw@plt+0x3d58>
  40672c:	ldr	w0, [x0]
  406730:	add	x20, x22, #0x20
  406734:	mov	x23, #0x0                   	// #0
  406738:	mov	w27, #0x0                   	// #0
  40673c:	str	w0, [x24, #32]
  406740:	b	406750 <nftw@plt+0x3bd0>
  406744:	add	x23, x23, #0x1
  406748:	cmp	x23, #0x9
  40674c:	b.eq	406808 <nftw@plt+0x3c88>  // b.none
  406750:	ldr	x0, [x20, x23, lsl #3]
  406754:	mov	w21, w23
  406758:	cbz	x0, 406744 <nftw@plt+0x3bc4>
  40675c:	mov	w0, #0x1                   	// #1
  406760:	bl	4054d8 <nftw@plt+0x2958>
  406764:	cbz	x0, 4068e0 <nftw@plt+0x3d60>
  406768:	ldr	w1, [x0]
  40676c:	mov	w0, #0x1a10000             	// #27328512
  406770:	add	w0, w0, w23, lsl #17
  406774:	cmp	w1, w0
  406778:	b.ne	4068e0 <nftw@plt+0x3d60>  // b.any
  40677c:	mov	w0, #0x1                   	// #1
  406780:	bl	4054d8 <nftw@plt+0x2958>
  406784:	cbz	x0, 406894 <nftw@plt+0x3d14>
  406788:	ldr	w21, [x0]
  40678c:	lsr	w21, w21, #1
  406790:	lsl	w0, w21, #3
  406794:	bl	402670 <malloc@plt>
  406798:	ubfiz	x2, x27, #4, #32
  40679c:	mov	x26, x0
  4067a0:	add	x2, x24, x2
  4067a4:	sub	w0, w21, #0x1
  4067a8:	str	w21, [x2, #40]
  4067ac:	str	x26, [x2, #48]
  4067b0:	cbz	w21, 4067f8 <nftw@plt+0x3c78>
  4067b4:	ubfiz	x21, x0, #3, #32
  4067b8:	add	x21, x21, #0x8
  4067bc:	add	x21, x26, x21
  4067c0:	b	4067d4 <nftw@plt+0x3c54>
  4067c4:	ldr	x0, [x0]
  4067c8:	stur	x0, [x26, #-8]
  4067cc:	cmp	x26, x21
  4067d0:	b.eq	4067f8 <nftw@plt+0x3c78>  // b.none
  4067d4:	mov	w0, #0x2                   	// #2
  4067d8:	add	x26, x26, #0x8
  4067dc:	bl	4054d8 <nftw@plt+0x2958>
  4067e0:	cbnz	x0, 4067c4 <nftw@plt+0x3c44>
  4067e4:	mov	x0, #0x0                   	// #0
  4067e8:	stur	x0, [x26, #-8]
  4067ec:	cmp	x26, x21
  4067f0:	b.ne	4067d4 <nftw@plt+0x3c54>  // b.any
  4067f4:	nop
  4067f8:	add	w27, w27, #0x1
  4067fc:	add	x23, x23, #0x1
  406800:	cmp	x23, #0x9
  406804:	b.ne	406750 <nftw@plt+0x3bd0>  // b.any
  406808:	ldr	x0, [sp, #152]
  40680c:	str	x24, [sp, #152]
  406810:	str	x24, [x0]
  406814:	ldr	w0, [sp, #132]
  406818:	add	w20, w0, #0x1
  40681c:	mov	w0, #0x1                   	// #1
  406820:	bl	4054d8 <nftw@plt+0x2958>
  406824:	str	w20, [sp, #124]
  406828:	cbz	x0, 40687c <nftw@plt+0x3cfc>
  40682c:	ldr	w1, [x0]
  406830:	ldr	w0, [x22, #104]
  406834:	cmp	w0, w20
  406838:	b.eq	40688c <nftw@plt+0x3d0c>  // b.none
  40683c:	ldr	x0, [sp, #112]
  406840:	mov	w3, #0x1000000             	// #16777216
  406844:	ldr	x2, [x22, #112]
  406848:	add	x0, x0, #0x1
  40684c:	str	x0, [sp, #112]
  406850:	cmp	w1, w3
  406854:	ldr	x20, [x2, x0, lsl #3]
  406858:	b.eq	406684 <nftw@plt+0x3b04>  // b.none
  40685c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  406860:	add	x2, x2, #0xd08
  406864:	ldr	w3, [sp, #124]
  406868:	mov	x1, x25
  40686c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406870:	add	x0, x0, #0x998
  406874:	bl	4056e0 <nftw@plt+0x2b60>
  406878:	b	406070 <nftw@plt+0x34f0>
  40687c:	ldr	w0, [x22, #104]
  406880:	mov	w1, #0x0                   	// #0
  406884:	cmp	w0, w20
  406888:	b.ne	40683c <nftw@plt+0x3cbc>  // b.any
  40688c:	cbz	w1, 406240 <nftw@plt+0x36c0>
  406890:	b	40685c <nftw@plt+0x3cdc>
  406894:	bl	402670 <malloc@plt>
  406898:	ubfiz	x1, x27, #4, #32
  40689c:	add	w27, w27, #0x1
  4068a0:	add	x1, x24, x1
  4068a4:	str	wzr, [x1, #40]
  4068a8:	str	x0, [x1, #48]
  4068ac:	b	4067fc <nftw@plt+0x3c7c>
  4068b0:	mov	w1, #0x0                   	// #0
  4068b4:	str	w1, [x24, #24]
  4068b8:	mov	w0, #0x1                   	// #1
  4068bc:	bl	4054d8 <nftw@plt+0x2958>
  4068c0:	cbnz	x0, 406718 <nftw@plt+0x3b98>
  4068c4:	mov	w1, #0x0                   	// #0
  4068c8:	str	w1, [x24, #28]
  4068cc:	mov	w0, #0x1                   	// #1
  4068d0:	bl	4054d8 <nftw@plt+0x2958>
  4068d4:	cbnz	x0, 40672c <nftw@plt+0x3bac>
  4068d8:	mov	w0, #0x0                   	// #0
  4068dc:	b	406730 <nftw@plt+0x3bb0>
  4068e0:	ldr	w2, [sp, #132]
  4068e4:	mov	w4, w21
  4068e8:	ldr	x3, [sp, #160]
  4068ec:	mov	x1, x25
  4068f0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4068f4:	add	x0, x0, #0x968
  4068f8:	bl	4056e0 <nftw@plt+0x2b60>
  4068fc:	mov	w2, w21
  406900:	mov	x1, x24
  406904:	mov	x0, x22
  406908:	bl	4055a8 <nftw@plt+0x2a28>
  40690c:	str	x0, [sp, #152]
  406910:	cbnz	x0, 406814 <nftw@plt+0x3c94>
  406914:	b	40685c <nftw@plt+0x3cdc>
  406918:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40691c:	add	x0, x0, #0x7e8
  406920:	bl	402ab0 <getenv@plt>
  406924:	mov	x20, x0
  406928:	cbz	x0, 406968 <nftw@plt+0x3de8>
  40692c:	bl	4024f0 <strlen@plt>
  406930:	cbz	x0, 406968 <nftw@plt+0x3de8>
  406934:	sub	x21, x0, #0x1
  406938:	str	wzr, [sp, #128]
  40693c:	ldrb	w1, [x20, x21]
  406940:	cmp	w1, #0x2f
  406944:	b.ne	405e9c <nftw@plt+0x331c>  // b.any
  406948:	cbnz	x21, 405ea4 <nftw@plt+0x3324>
  40694c:	ldr	w0, [sp, #128]
  406950:	cbz	w0, 406968 <nftw@plt+0x3de8>
  406954:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  406958:	mov	x0, #0x2                   	// #2
  40695c:	add	x20, x20, #0xc38
  406960:	mov	x21, #0x1                   	// #1
  406964:	b	405ea4 <nftw@plt+0x3324>
  406968:	str	wzr, [sp, #128]
  40696c:	str	xzr, [sp, #136]
  406970:	b	405ebc <nftw@plt+0x333c>
  406974:	mov	w0, #0x1                   	// #1
  406978:	bl	4054d8 <nftw@plt+0x2958>
  40697c:	cbz	x0, 406aec <nftw@plt+0x3f6c>
  406980:	ldr	w0, [x0]
  406984:	ldr	w1, [x20, #8]
  406988:	cmp	w1, w0
  40698c:	b.ne	40685c <nftw@plt+0x3cdc>  // b.any
  406990:	mov	w0, #0x1                   	// #1
  406994:	bl	4054d8 <nftw@plt+0x2958>
  406998:	cbz	x0, 406ae4 <nftw@plt+0x3f64>
  40699c:	ldr	w0, [x0]
  4069a0:	ldr	w1, [x20, #12]
  4069a4:	cmp	w1, w0
  4069a8:	b.ne	40685c <nftw@plt+0x3cdc>  // b.any
  4069ac:	mov	w0, #0x1                   	// #1
  4069b0:	bl	4054d8 <nftw@plt+0x2958>
  4069b4:	cbz	x0, 406adc <nftw@plt+0x3f5c>
  4069b8:	ldr	w0, [x0]
  4069bc:	ldr	w1, [x20, #16]
  4069c0:	cmp	w1, w0
  4069c4:	b.ne	40685c <nftw@plt+0x3cdc>  // b.any
  4069c8:	add	x20, x20, #0x18
  4069cc:	add	x23, x22, #0x20
  4069d0:	mov	w21, #0x1a10000             	// #27328512
  4069d4:	mov	w27, #0x1b30000             	// #28508160
  4069d8:	ldr	x24, [x23]
  4069dc:	cbz	x24, 406a2c <nftw@plt+0x3eac>
  4069e0:	mov	w0, #0x1                   	// #1
  4069e4:	bl	4054d8 <nftw@plt+0x2958>
  4069e8:	mov	x1, x0
  4069ec:	mov	w0, #0x1                   	// #1
  4069f0:	cbz	x1, 406a90 <nftw@plt+0x3f10>
  4069f4:	ldr	w1, [x1]
  4069f8:	str	w1, [sp, #172]
  4069fc:	bl	4054d8 <nftw@plt+0x2958>
  406a00:	ldr	w1, [sp, #172]
  406a04:	cbz	x0, 406a68 <nftw@plt+0x3ee8>
  406a08:	ldr	w0, [x0]
  406a0c:	cmp	w1, w21
  406a10:	b.ne	40685c <nftw@plt+0x3cdc>  // b.any
  406a14:	ldr	w1, [x20]
  406a18:	cmp	w0, w1, lsl #1
  406a1c:	b.ne	40685c <nftw@plt+0x3cdc>  // b.any
  406a20:	ldr	x0, [x20, #8]
  406a24:	add	x20, x20, #0x10
  406a28:	blr	x24
  406a2c:	add	w21, w21, #0x20, lsl #12
  406a30:	add	x23, x23, #0x8
  406a34:	cmp	w21, w27
  406a38:	b.ne	4069d8 <nftw@plt+0x3e58>  // b.any
  406a3c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  406a40:	add	x1, x0, #0x748
  406a44:	ldr	x0, [x0, #1864]
  406a48:	cbz	x0, 406ac0 <nftw@plt+0x3f40>
  406a4c:	ldr	w0, [x1, #24]
  406a50:	cmp	w0, #0x0
  406a54:	cbz	w0, 406814 <nftw@plt+0x3c94>
  406a58:	b.ge	406ac0 <nftw@plt+0x3f40>  // b.tcont
  406a5c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406a60:	add	x2, x2, #0x760
  406a64:	b	406ac8 <nftw@plt+0x3f48>
  406a68:	mov	w0, #0x0                   	// #0
  406a6c:	b	406a0c <nftw@plt+0x3e8c>
  406a70:	mov	w0, #0x0                   	// #0
  406a74:	b	4065dc <nftw@plt+0x3a5c>
  406a78:	mov	w1, #0x0                   	// #0
  406a7c:	b	4065b8 <nftw@plt+0x3a38>
  406a80:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406a84:	add	x2, x2, #0x750
  406a88:	str	wzr, [sp, #124]
  406a8c:	b	406864 <nftw@plt+0x3ce4>
  406a90:	bl	4054d8 <nftw@plt+0x2958>
  406a94:	cbz	x0, 40685c <nftw@plt+0x3cdc>
  406a98:	mov	w1, #0x0                   	// #0
  406a9c:	b	406a08 <nftw@plt+0x3e88>
  406aa0:	mov	x19, #0x0                   	// #0
  406aa4:	b	405e44 <nftw@plt+0x32c4>
  406aa8:	ldr	w0, [x22, #104]
  406aac:	cbz	w0, 406240 <nftw@plt+0x36c0>
  406ab0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  406ab4:	add	x2, x2, #0xd08
  406ab8:	str	wzr, [sp, #124]
  406abc:	b	406864 <nftw@plt+0x3ce4>
  406ac0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406ac4:	add	x2, x2, #0x758
  406ac8:	mov	x1, x25
  406acc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406ad0:	add	x0, x0, #0x9d0
  406ad4:	bl	4056e0 <nftw@plt+0x2b60>
  406ad8:	b	406070 <nftw@plt+0x34f0>
  406adc:	mov	w0, #0x0                   	// #0
  406ae0:	b	4069bc <nftw@plt+0x3e3c>
  406ae4:	mov	w0, #0x0                   	// #0
  406ae8:	b	4069a0 <nftw@plt+0x3e20>
  406aec:	mov	w0, #0x0                   	// #0
  406af0:	b	406984 <nftw@plt+0x3e04>
  406af4:	str	wzr, [sp, #124]
  406af8:	cbz	w1, 406240 <nftw@plt+0x36c0>
  406afc:	b	40685c <nftw@plt+0x3cdc>
  406b00:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406b04:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406b08:	add	x2, x2, #0x7f8
  406b0c:	add	x0, x0, #0x818
  406b10:	mov	w1, #0x1c7                 	// #455
  406b14:	bl	402bf0 <nftw@plt+0x70>
  406b18:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406b1c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406b20:	add	x2, x2, #0x940
  406b24:	add	x0, x0, #0x818
  406b28:	mov	w1, #0xf8                  	// #248
  406b2c:	bl	402bf0 <nftw@plt+0x70>
  406b30:	ldr	x0, [x0, #24]
  406b34:	ret
  406b38:	cbz	w1, 406b94 <nftw@plt+0x4014>
  406b3c:	stp	x29, x30, [sp, #-48]!
  406b40:	mov	x29, sp
  406b44:	str	x21, [sp, #32]
  406b48:	sub	w21, w1, #0x1
  406b4c:	add	x21, x21, #0x1
  406b50:	stp	x19, x20, [sp, #16]
  406b54:	mov	x19, x0
  406b58:	add	x21, x0, x21, lsl #3
  406b5c:	nop
  406b60:	bl	404710 <nftw@plt+0x1b90>
  406b64:	mov	x20, x0
  406b68:	bl	404758 <nftw@plt+0x1bd8>
  406b6c:	mov	w1, w0
  406b70:	ldr	x2, [x19]
  406b74:	madd	x1, x1, x20, x2
  406b78:	str	x1, [x19], #8
  406b7c:	cmp	x19, x21
  406b80:	b.ne	406b60 <nftw@plt+0x3fe0>  // b.any
  406b84:	ldp	x19, x20, [sp, #16]
  406b88:	ldr	x21, [sp, #32]
  406b8c:	ldp	x29, x30, [sp], #48
  406b90:	ret
  406b94:	ret
  406b98:	cbz	w1, 406bdc <nftw@plt+0x405c>
  406b9c:	stp	x29, x30, [sp, #-32]!
  406ba0:	mov	x29, sp
  406ba4:	stp	x19, x20, [sp, #16]
  406ba8:	sub	w20, w1, #0x1
  406bac:	add	x20, x20, #0x1
  406bb0:	mov	x19, x0
  406bb4:	add	x20, x0, x20, lsl #3
  406bb8:	bl	404710 <nftw@plt+0x1b90>
  406bbc:	ldr	x1, [x19]
  406bc0:	orr	x1, x1, x0
  406bc4:	str	x1, [x19], #8
  406bc8:	cmp	x19, x20
  406bcc:	b.ne	406bb8 <nftw@plt+0x4038>  // b.any
  406bd0:	ldp	x19, x20, [sp, #16]
  406bd4:	ldp	x29, x30, [sp], #32
  406bd8:	ret
  406bdc:	ret
  406be0:	cbz	w1, 406c34 <nftw@plt+0x40b4>
  406be4:	stp	x29, x30, [sp, #-32]!
  406be8:	sub	w1, w1, #0x1
  406bec:	mov	x29, sp
  406bf0:	stp	x19, x20, [sp, #16]
  406bf4:	add	x20, x0, #0x8
  406bf8:	mov	x19, x0
  406bfc:	add	x20, x20, w1, uxtw #3
  406c00:	bl	404710 <nftw@plt+0x1b90>
  406c04:	cbz	x0, 406c1c <nftw@plt+0x409c>
  406c08:	ldr	x1, [x19]
  406c0c:	cmp	x1, #0x0
  406c10:	ccmp	x1, x0, #0x0, ne  // ne = any
  406c14:	b.le	406c1c <nftw@plt+0x409c>
  406c18:	str	x0, [x19]
  406c1c:	add	x19, x19, #0x8
  406c20:	cmp	x19, x20
  406c24:	b.ne	406c00 <nftw@plt+0x4080>  // b.any
  406c28:	ldp	x19, x20, [sp, #16]
  406c2c:	ldp	x29, x30, [sp], #32
  406c30:	ret
  406c34:	ret
  406c38:	stp	x29, x30, [sp, #-64]!
  406c3c:	mov	x29, sp
  406c40:	stp	x21, x22, [sp, #32]
  406c44:	mov	w22, #0xaaab                	// #43691
  406c48:	movk	w22, #0xaaaa, lsl #16
  406c4c:	stp	x19, x20, [sp, #16]
  406c50:	umull	x22, w1, w22
  406c54:	stp	x23, x24, [sp, #48]
  406c58:	lsr	x22, x22, #33
  406c5c:	add	w24, w22, w22, lsl #1
  406c60:	subs	w24, w1, w24
  406c64:	b.ne	406d28 <nftw@plt+0x41a8>  // b.any
  406c68:	mov	x19, x0
  406c6c:	cmp	w1, #0x2
  406c70:	b.hi	406ca4 <nftw@plt+0x4124>  // b.pmore
  406c74:	b	406d08 <nftw@plt+0x4188>
  406c78:	cmp	x0, x20
  406c7c:	b.ge	406d1c <nftw@plt+0x419c>  // b.tcont
  406c80:	sub	x20, x20, x0
  406c84:	stp	x21, x20, [x19]
  406c88:	add	w24, w24, #0x1
  406c8c:	ldr	x0, [x19, #16]
  406c90:	cmp	w22, w24
  406c94:	add	x19, x19, #0x18
  406c98:	add	x1, x0, x1
  406c9c:	stur	x1, [x19, #-8]
  406ca0:	b.ls	406d08 <nftw@plt+0x4188>  // b.plast
  406ca4:	bl	404710 <nftw@plt+0x1b90>
  406ca8:	mov	x21, x0
  406cac:	bl	404710 <nftw@plt+0x1b90>
  406cb0:	mov	x23, x0
  406cb4:	bl	404758 <nftw@plt+0x1bd8>
  406cb8:	mov	w20, w0
  406cbc:	bl	404710 <nftw@plt+0x1b90>
  406cc0:	mul	x20, x20, x23
  406cc4:	mov	x23, x0
  406cc8:	bl	404758 <nftw@plt+0x1bd8>
  406ccc:	mov	w1, w0
  406cd0:	ldr	x0, [x19]
  406cd4:	mul	x1, x1, x23
  406cd8:	cmp	x0, x21
  406cdc:	ldr	x0, [x19, #8]
  406ce0:	b.ne	406c78 <nftw@plt+0x40f8>  // b.any
  406ce4:	add	x20, x0, x20
  406ce8:	str	x20, [x19, #8]
  406cec:	ldr	x0, [x19, #16]
  406cf0:	add	w24, w24, #0x1
  406cf4:	cmp	w22, w24
  406cf8:	add	x19, x19, #0x18
  406cfc:	add	x1, x0, x1
  406d00:	stur	x1, [x19, #-8]
  406d04:	b.hi	406ca4 <nftw@plt+0x4124>  // b.pmore
  406d08:	ldp	x19, x20, [sp, #16]
  406d0c:	ldp	x21, x22, [sp, #32]
  406d10:	ldp	x23, x24, [sp, #48]
  406d14:	ldp	x29, x30, [sp], #64
  406d18:	ret
  406d1c:	sub	x20, x0, x20
  406d20:	str	x20, [x19, #8]
  406d24:	b	406c88 <nftw@plt+0x4108>
  406d28:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406d2c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406d30:	add	x2, x2, #0x9f8
  406d34:	add	x0, x0, #0xa10
  406d38:	mov	w1, #0x67                  	// #103
  406d3c:	bl	402bf0 <nftw@plt+0x70>
  406d40:	stp	x29, x30, [sp, #-112]!
  406d44:	mov	w2, #0x8e39                	// #36409
  406d48:	movk	w2, #0x38e3, lsl #16
  406d4c:	mov	x29, sp
  406d50:	stp	x19, x20, [sp, #16]
  406d54:	str	x0, [x29, #104]
  406d58:	umull	x0, w1, w2
  406d5c:	stp	x21, x22, [sp, #32]
  406d60:	lsr	x0, x0, #33
  406d64:	stp	x23, x24, [sp, #48]
  406d68:	stp	x25, x26, [sp, #64]
  406d6c:	add	w0, w0, w0, lsl #3
  406d70:	cmp	w1, w0
  406d74:	stp	x27, x28, [sp, #80]
  406d78:	b.ne	406eb0 <nftw@plt+0x4330>  // b.any
  406d7c:	mov	w22, w1
  406d80:	cbz	w1, 406e7c <nftw@plt+0x42fc>
  406d84:	mov	w21, #0x0                   	// #0
  406d88:	ldr	x2, [x29, #104]
  406d8c:	sub	sp, sp, #0x80
  406d90:	add	w27, w21, #0x1
  406d94:	mov	x19, sp
  406d98:	mov	x0, x19
  406d9c:	add	x1, x19, #0x80
  406da0:	add	x27, x2, x27, lsl #3
  406da4:	nop
  406da8:	str	xzr, [x0], #8
  406dac:	cmp	x1, x0
  406db0:	b.ne	406da8 <nftw@plt+0x4228>  // b.any
  406db4:	add	x28, x27, #0x8
  406db8:	add	x23, x19, #0x8
  406dbc:	mov	x0, #0x0                   	// #0
  406dc0:	ldr	x1, [x27, x0]
  406dc4:	str	x1, [x19, x0]
  406dc8:	ldr	x1, [x28, x0]
  406dcc:	str	x1, [x23, x0]
  406dd0:	add	x0, x0, #0x10
  406dd4:	cmp	x0, #0x40
  406dd8:	b.ne	406dc0 <nftw@plt+0x4240>  // b.any
  406ddc:	mov	w24, #0x4                   	// #4
  406de0:	mov	w25, #0x8                   	// #8
  406de4:	bl	404710 <nftw@plt+0x1b90>
  406de8:	bl	404758 <nftw@plt+0x1bd8>
  406dec:	bl	404710 <nftw@plt+0x1b90>
  406df0:	mov	x20, x0
  406df4:	bl	404710 <nftw@plt+0x1b90>
  406df8:	mov	x26, x0
  406dfc:	bl	404758 <nftw@plt+0x1bd8>
  406e00:	mov	w1, w0
  406e04:	mul	x0, x1, x26
  406e08:	cbz	w25, 406e9c <nftw@plt+0x431c>
  406e0c:	mov	w2, #0x0                   	// #0
  406e10:	b	406e20 <nftw@plt+0x42a0>
  406e14:	add	w2, w2, #0x2
  406e18:	cmp	w2, w25
  406e1c:	b.cs	406e9c <nftw@plt+0x431c>  // b.hs, b.nlast
  406e20:	ldr	x3, [x19, w2, uxtw #3]
  406e24:	cmp	x3, x20
  406e28:	b.ne	406e14 <nftw@plt+0x4294>  // b.any
  406e2c:	add	w2, w2, #0x1
  406e30:	ldr	x1, [x19, x2, lsl #3]
  406e34:	add	x0, x1, x0
  406e38:	str	x0, [x19, x2, lsl #3]
  406e3c:	subs	w24, w24, #0x1
  406e40:	b.ne	406dec <nftw@plt+0x426c>  // b.any
  406e44:	mov	x0, x19
  406e48:	mov	w1, w25
  406e4c:	bl	405d38 <nftw@plt+0x31b8>
  406e50:	mov	x0, #0x0                   	// #0
  406e54:	ldr	x1, [x19, x0]
  406e58:	str	x1, [x27, x0]
  406e5c:	ldr	x1, [x23, x0]
  406e60:	str	x1, [x28, x0]
  406e64:	add	x0, x0, #0x10
  406e68:	cmp	x0, #0x40
  406e6c:	b.ne	406e54 <nftw@plt+0x42d4>  // b.any
  406e70:	add	w21, w21, #0x9
  406e74:	cmp	w22, w21
  406e78:	b.hi	406d88 <nftw@plt+0x4208>  // b.pmore
  406e7c:	mov	sp, x29
  406e80:	ldp	x19, x20, [sp, #16]
  406e84:	ldp	x21, x22, [sp, #32]
  406e88:	ldp	x23, x24, [sp, #48]
  406e8c:	ldp	x25, x26, [sp, #64]
  406e90:	ldp	x27, x28, [sp, #80]
  406e94:	ldp	x29, x30, [sp], #112
  406e98:	ret
  406e9c:	add	w1, w25, #0x1
  406ea0:	str	x20, [x19, w25, uxtw #3]
  406ea4:	add	w25, w25, #0x2
  406ea8:	str	x0, [x19, x1, lsl #3]
  406eac:	b	406e3c <nftw@plt+0x42bc>
  406eb0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406eb4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406eb8:	add	x2, x2, #0xa38
  406ebc:	add	x0, x0, #0xa10
  406ec0:	mov	w1, #0x87                  	// #135
  406ec4:	bl	402bf0 <nftw@plt+0x70>
  406ec8:	cmp	w2, #0x0
  406ecc:	b.lt	406f44 <nftw@plt+0x43c4>  // b.tstop
  406ed0:	stp	x29, x30, [sp, #-32]!
  406ed4:	mov	x29, sp
  406ed8:	stp	x19, x20, [sp, #16]
  406edc:	mov	x19, x1
  406ee0:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  406ee4:	ldr	x20, [x1, #1392]
  406ee8:	b.ne	406f14 <nftw@plt+0x4394>  // b.any
  406eec:	mov	x2, x19
  406ef0:	mov	x0, x20
  406ef4:	ldp	x19, x20, [sp, #16]
  406ef8:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x105a0>
  406efc:	ldp	x29, x30, [sp], #32
  406f00:	add	x3, x3, #0xbd0
  406f04:	mov	x4, x3
  406f08:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406f0c:	add	x1, x1, #0xa58
  406f10:	b	402b30 <fprintf@plt>
  406f14:	mov	w0, w2
  406f18:	bl	449cf8 <_obstack_memory_used@@Base+0x298>
  406f1c:	mov	x2, x19
  406f20:	mov	x4, x0
  406f24:	mov	x0, x20
  406f28:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406f2c:	ldp	x19, x20, [sp, #16]
  406f30:	add	x3, x3, #0xa50
  406f34:	ldp	x29, x30, [sp], #32
  406f38:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406f3c:	add	x1, x1, #0xa58
  406f40:	b	402b30 <fprintf@plt>
  406f44:	ret
  406f48:	mov	x2, x1
  406f4c:	stp	x29, x30, [sp, #-32]!
  406f50:	mov	x29, sp
  406f54:	ldr	w2, [x2, #56]
  406f58:	ldr	x1, [x1, #40]
  406f5c:	str	x19, [sp, #16]
  406f60:	mov	x19, x0
  406f64:	bl	40bb68 <nftw@plt+0x8fe8>
  406f68:	ldr	x0, [x19]
  406f6c:	bl	40f240 <nftw@plt+0xc6c0>
  406f70:	ldr	x0, [x19]
  406f74:	ldr	x19, [sp, #16]
  406f78:	ldp	x29, x30, [sp], #32
  406f7c:	b	40f050 <nftw@plt+0xc4d0>
  406f80:	stp	x29, x30, [sp, #-32]!
  406f84:	mov	x29, sp
  406f88:	stp	x19, x20, [sp, #16]
  406f8c:	mov	x19, x0
  406f90:	ldr	w0, [x0, #56]
  406f94:	cbz	w0, 406fe0 <nftw@plt+0x4460>
  406f98:	ldrb	w0, [x19, #64]
  406f9c:	ldr	x20, [x19]
  406fa0:	cbnz	w0, 406fd4 <nftw@plt+0x4454>
  406fa4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406fa8:	add	x0, x0, #0xa90
  406fac:	bl	402b10 <gettext@plt>
  406fb0:	mov	x1, x0
  406fb4:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  406fb8:	mov	x0, x20
  406fbc:	ldr	x2, [x2, #1904]
  406fc0:	bl	411370 <nftw@plt+0xe7f0>
  406fc4:	ldr	x0, [x19]
  406fc8:	ldp	x19, x20, [sp, #16]
  406fcc:	ldp	x29, x30, [sp], #32
  406fd0:	b	40fb08 <nftw@plt+0xcf88>
  406fd4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  406fd8:	add	x0, x0, #0xa60
  406fdc:	b	406fac <nftw@plt+0x442c>
  406fe0:	ldp	x19, x20, [sp, #16]
  406fe4:	ldp	x29, x30, [sp], #32
  406fe8:	ret
  406fec:	nop
  406ff0:	stp	x29, x30, [sp, #-96]!
  406ff4:	mov	x29, sp
  406ff8:	stp	x19, x20, [sp, #16]
  406ffc:	mov	x20, x0
  407000:	orr	x0, x2, x4
  407004:	cbz	x0, 407180 <nftw@plt+0x4600>
  407008:	ldr	w0, [x20]
  40700c:	cmp	x2, #0x0
  407010:	stp	x21, x22, [sp, #32]
  407014:	mov	x19, x4
  407018:	mov	x21, x1
  40701c:	stp	x25, x26, [sp, #64]
  407020:	mov	w22, w3
  407024:	mov	x25, x2
  407028:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40702c:	b.eq	407190 <nftw@plt+0x4610>  // b.none
  407030:	cmp	w0, #0x13
  407034:	b.gt	407140 <nftw@plt+0x45c0>
  407038:	add	w0, w0, #0x1
  40703c:	str	w0, [x20]
  407040:	cbz	x19, 4071d0 <nftw@plt+0x4650>
  407044:	mov	x0, x19
  407048:	mov	w1, #0x400b                	// #16395
  40704c:	stp	x23, x24, [sp, #48]
  407050:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407054:	add	x24, x24, #0xef0
  407058:	str	x27, [sp, #80]
  40705c:	bl	446d70 <nftw@plt+0x441f0>
  407060:	cmp	x0, #0x0
  407064:	mov	x26, x0
  407068:	csel	x19, x19, x0, eq  // eq = none
  40706c:	mov	x23, #0x4                   	// #4
  407070:	mov	x20, #0x0                   	// #0
  407074:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407078:	add	x20, x20, #0x1
  40707c:	add	x27, x27, #0xfe0
  407080:	mov	x1, x24
  407084:	mov	x2, x23
  407088:	mov	x0, x19
  40708c:	bl	4026a0 <strncmp@plt>
  407090:	cbnz	w0, 4070a4 <nftw@plt+0x4524>
  407094:	ldrb	w0, [x19, x23]
  407098:	cmp	w0, #0x28
  40709c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4070a0:	b.eq	40721c <nftw@plt+0x469c>  // b.none
  4070a4:	cmp	x20, #0x4
  4070a8:	b.eq	4070dc <nftw@plt+0x455c>  // b.none
  4070ac:	ldr	x24, [x27, x20, lsl #3]
  4070b0:	add	x20, x20, #0x1
  4070b4:	mov	x0, x24
  4070b8:	bl	4024f0 <strlen@plt>
  4070bc:	mov	x23, x0
  4070c0:	mov	x1, x24
  4070c4:	mov	x2, x23
  4070c8:	mov	x0, x19
  4070cc:	bl	4026a0 <strncmp@plt>
  4070d0:	cbz	w0, 407094 <nftw@plt+0x4514>
  4070d4:	cmp	x20, #0x4
  4070d8:	b.ne	4070ac <nftw@plt+0x452c>  // b.any
  4070dc:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4070e0:	cmp	x25, #0x0
  4070e4:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4070e8:	add	x4, x4, #0xac0
  4070ec:	ldr	x0, [x0, #1392]
  4070f0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4070f4:	mov	w5, w22
  4070f8:	mov	x3, x19
  4070fc:	mov	x2, x21
  407100:	csel	x4, x4, x25, eq  // eq = none
  407104:	add	x1, x1, #0xad8
  407108:	bl	402b30 <fprintf@plt>
  40710c:	cbz	x26, 4071b8 <nftw@plt+0x4638>
  407110:	mov	x0, x26
  407114:	bl	402910 <free@plt>
  407118:	mov	w0, #0x0                   	// #0
  40711c:	ldp	x19, x20, [sp, #16]
  407120:	ldp	x21, x22, [sp, #32]
  407124:	ldp	x23, x24, [sp, #48]
  407128:	ldp	x25, x26, [sp, #64]
  40712c:	ldr	x27, [sp, #80]
  407130:	ldp	x29, x30, [sp], #96
  407134:	ret
  407138:	ldp	x23, x24, [sp, #48]
  40713c:	ldr	x27, [sp, #80]
  407140:	mov	w0, #0x1                   	// #1
  407144:	ldp	x21, x22, [sp, #32]
  407148:	ldp	x25, x26, [sp, #64]
  40714c:	ldp	x19, x20, [sp, #16]
  407150:	ldp	x29, x30, [sp], #96
  407154:	ret
  407158:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40715c:	add	x4, x4, #0xac0
  407160:	mov	w5, w22
  407164:	mov	x2, x21
  407168:	mov	x3, x4
  40716c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407170:	add	x1, x1, #0xad8
  407174:	bl	402b30 <fprintf@plt>
  407178:	ldp	x21, x22, [sp, #32]
  40717c:	ldp	x25, x26, [sp, #64]
  407180:	mov	w0, #0x0                   	// #0
  407184:	ldp	x19, x20, [sp, #16]
  407188:	ldp	x29, x30, [sp], #96
  40718c:	ret
  407190:	mov	x0, x2
  407194:	bl	4496a8 <nftw@plt+0x46b28>
  407198:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40719c:	add	x1, x1, #0xac8
  4071a0:	bl	402890 <strcmp@plt>
  4071a4:	cbz	w0, 40720c <nftw@plt+0x468c>
  4071a8:	ldr	w0, [x20]
  4071ac:	cmp	w0, #0x13
  4071b0:	b.le	407038 <nftw@plt+0x44b8>
  4071b4:	b	407140 <nftw@plt+0x45c0>
  4071b8:	mov	w0, #0x0                   	// #0
  4071bc:	ldp	x21, x22, [sp, #32]
  4071c0:	ldp	x23, x24, [sp, #48]
  4071c4:	ldp	x25, x26, [sp, #64]
  4071c8:	ldr	x27, [sp, #80]
  4071cc:	b	407184 <nftw@plt+0x4604>
  4071d0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4071d4:	ldr	x0, [x0, #1392]
  4071d8:	cbz	x25, 407158 <nftw@plt+0x45d8>
  4071dc:	mov	w5, w22
  4071e0:	mov	x4, x25
  4071e4:	mov	x2, x21
  4071e8:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4071ec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4071f0:	add	x3, x3, #0xac0
  4071f4:	add	x1, x1, #0xad8
  4071f8:	bl	402b30 <fprintf@plt>
  4071fc:	mov	w0, #0x0                   	// #0
  407200:	ldp	x21, x22, [sp, #32]
  407204:	ldp	x25, x26, [sp, #64]
  407208:	b	40714c <nftw@plt+0x45cc>
  40720c:	mov	w0, #0x0                   	// #0
  407210:	ldp	x21, x22, [sp, #32]
  407214:	ldp	x25, x26, [sp, #64]
  407218:	b	407184 <nftw@plt+0x4604>
  40721c:	cbz	x26, 407138 <nftw@plt+0x45b8>
  407220:	mov	x0, x26
  407224:	bl	402910 <free@plt>
  407228:	mov	w0, #0x1                   	// #1
  40722c:	ldp	x21, x22, [sp, #32]
  407230:	ldp	x23, x24, [sp, #48]
  407234:	ldp	x25, x26, [sp, #64]
  407238:	ldr	x27, [sp, #80]
  40723c:	b	40714c <nftw@plt+0x45cc>
  407240:	stp	x29, x30, [sp, #-272]!
  407244:	mov	w9, #0xffffffc8            	// #-56
  407248:	mov	w8, #0xffffff80            	// #-128
  40724c:	mov	x29, sp
  407250:	add	x10, sp, #0xd0
  407254:	add	x11, sp, #0x110
  407258:	stp	x11, x11, [sp, #48]
  40725c:	str	x10, [sp, #64]
  407260:	stp	w9, w8, [sp, #72]
  407264:	ldp	x10, x11, [sp, #48]
  407268:	stp	x10, x11, [sp, #16]
  40726c:	ldp	x8, x9, [sp, #64]
  407270:	stp	x8, x9, [sp, #32]
  407274:	str	q0, [sp, #80]
  407278:	str	q1, [sp, #96]
  40727c:	str	q2, [sp, #112]
  407280:	str	q3, [sp, #128]
  407284:	str	q4, [sp, #144]
  407288:	str	q5, [sp, #160]
  40728c:	str	q6, [sp, #176]
  407290:	str	q7, [sp, #192]
  407294:	stp	x1, x2, [sp, #216]
  407298:	add	x1, sp, #0x10
  40729c:	stp	x3, x4, [sp, #232]
  4072a0:	stp	x5, x6, [sp, #248]
  4072a4:	str	x7, [sp, #264]
  4072a8:	bl	449d80 <_obstack_memory_used@@Base+0x320>
  4072ac:	ldp	x29, x30, [sp], #272
  4072b0:	ret
  4072b4:	nop
  4072b8:	stp	x29, x30, [sp, #-80]!
  4072bc:	mov	x29, sp
  4072c0:	stp	x21, x22, [sp, #32]
  4072c4:	mov	x21, x0
  4072c8:	ldrb	w0, [x0, #67]
  4072cc:	stp	x19, x20, [sp, #16]
  4072d0:	mov	x19, x2
  4072d4:	mov	x2, #0x5                   	// #5
  4072d8:	stp	x23, x24, [sp, #48]
  4072dc:	mov	w23, w3
  4072e0:	mov	w24, w4
  4072e4:	str	x25, [sp, #64]
  4072e8:	mov	x25, x1
  4072ec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4072f0:	add	x1, x1, #0xb00
  4072f4:	bl	40a030 <nftw@plt+0x74b0>
  4072f8:	mov	x1, x0
  4072fc:	ldrb	w0, [x21, #67]
  407300:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  407304:	mov	x21, x1
  407308:	bl	40a0c0 <nftw@plt+0x7540>
  40730c:	mov	x22, x0
  407310:	ldr	x1, [x20, #1904]
  407314:	cmp	x19, #0x0
  407318:	csel	x19, x1, x19, eq  // eq = none
  40731c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407320:	mov	x0, x19
  407324:	add	x1, x1, #0xb08
  407328:	bl	402890 <strcmp@plt>
  40732c:	cbz	w0, 407378 <nftw@plt+0x47f8>
  407330:	ldrb	w0, [x25]
  407334:	cbz	w0, 407370 <nftw@plt+0x47f0>
  407338:	cbz	w23, 407378 <nftw@plt+0x47f8>
  40733c:	cmp	w24, #0x0
  407340:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407344:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407348:	add	x0, x0, #0xaf8
  40734c:	add	x2, x2, #0xaf0
  407350:	csel	x2, x2, x0, eq  // eq = none
  407354:	add	x20, x20, #0x770
  407358:	mov	w4, w24
  40735c:	mov	w3, w23
  407360:	add	x0, x20, #0x8
  407364:	mov	x1, #0x20                  	// #32
  407368:	bl	402600 <snprintf@plt>
  40736c:	b	407380 <nftw@plt+0x4800>
  407370:	cbnz	w23, 4073b0 <nftw@plt+0x4830>
  407374:	nop
  407378:	add	x20, x20, #0x770
  40737c:	strb	wzr, [x20, #8]
  407380:	mov	x4, x22
  407384:	add	x3, x20, #0x8
  407388:	mov	x2, x19
  40738c:	mov	x1, x21
  407390:	ldp	x19, x20, [sp, #16]
  407394:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407398:	ldp	x21, x22, [sp, #32]
  40739c:	add	x0, x0, #0xb18
  4073a0:	ldp	x23, x24, [sp, #48]
  4073a4:	ldr	x25, [sp, #64]
  4073a8:	ldp	x29, x30, [sp], #80
  4073ac:	b	407240 <nftw@plt+0x46c0>
  4073b0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4073b4:	mov	w24, #0x0                   	// #0
  4073b8:	add	x2, x2, #0xaf0
  4073bc:	b	407354 <nftw@plt+0x47d4>
  4073c0:	stp	x29, x30, [sp, #-32]!
  4073c4:	mov	x29, sp
  4073c8:	stp	x19, x20, [sp, #16]
  4073cc:	mov	x19, x0
  4073d0:	mov	x0, x1
  4073d4:	mov	x1, x19
  4073d8:	ldp	w3, w4, [x0, #8]
  4073dc:	ldr	x2, [x0]
  4073e0:	ldr	x0, [x1], #121
  4073e4:	bl	4072b8 <nftw@plt+0x4738>
  4073e8:	mov	x1, x0
  4073ec:	mov	x20, x0
  4073f0:	ldr	x0, [x19]
  4073f4:	bl	40f9a8 <nftw@plt+0xce28>
  4073f8:	mov	x0, x20
  4073fc:	bl	402910 <free@plt>
  407400:	ldr	x0, [x19]
  407404:	ldp	x19, x20, [sp, #16]
  407408:	ldp	x29, x30, [sp], #32
  40740c:	b	40f388 <nftw@plt+0xc808>
  407410:	stp	x29, x30, [sp, #-32]!
  407414:	mov	x2, #0x5                   	// #5
  407418:	mov	x29, sp
  40741c:	stp	x19, x20, [sp, #16]
  407420:	mov	x19, x0
  407424:	mov	x20, x1
  407428:	ldr	x0, [x0]
  40742c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407430:	add	x1, x1, #0xb00
  407434:	ldrb	w0, [x0, #67]
  407438:	bl	40a030 <nftw@plt+0x74b0>
  40743c:	ldr	x1, [x19]
  407440:	mov	x19, x0
  407444:	ldrb	w0, [x1, #67]
  407448:	bl	40a0c0 <nftw@plt+0x7540>
  40744c:	mov	x3, x0
  407450:	mov	x2, x20
  407454:	mov	x1, x19
  407458:	ldp	x19, x20, [sp, #16]
  40745c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407460:	ldp	x29, x30, [sp], #32
  407464:	add	x0, x0, #0xb28
  407468:	b	407240 <nftw@plt+0x46c0>
  40746c:	nop
  407470:	stp	x29, x30, [sp, #-32]!
  407474:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407478:	add	x0, x0, #0xb38
  40747c:	mov	x29, sp
  407480:	bl	402ab0 <getenv@plt>
  407484:	cbz	x0, 40749c <nftw@plt+0x491c>
  407488:	mov	w2, #0xa                   	// #10
  40748c:	mov	x1, #0x0                   	// #0
  407490:	bl	4028c0 <strtol@plt>
  407494:	cmp	w0, #0x0
  407498:	b.gt	4074c4 <nftw@plt+0x4944>
  40749c:	add	x2, sp, #0x18
  4074a0:	mov	x1, #0x5413                	// #21523
  4074a4:	mov	w0, #0x0                   	// #0
  4074a8:	strh	wzr, [sp, #26]
  4074ac:	bl	402b50 <ioctl@plt>
  4074b0:	cbnz	w0, 4074cc <nftw@plt+0x494c>
  4074b4:	ldrh	w0, [sp, #26]
  4074b8:	mov	w1, #0x7fffffff            	// #2147483647
  4074bc:	cmp	w0, #0x0
  4074c0:	csel	w0, w0, w1, ne  // ne = any
  4074c4:	ldp	x29, x30, [sp], #32
  4074c8:	ret
  4074cc:	mov	w0, #0x7fffffff            	// #2147483647
  4074d0:	ldp	x29, x30, [sp], #32
  4074d4:	ret
  4074d8:	stp	x29, x30, [sp, #-32]!
  4074dc:	mov	x29, sp
  4074e0:	str	x19, [sp, #16]
  4074e4:	mov	x19, x0
  4074e8:	cbz	w1, 407508 <nftw@plt+0x4988>
  4074ec:	sub	w1, w1, #0x1
  4074f0:	cmp	w1, #0x0
  4074f4:	b.le	407520 <nftw@plt+0x49a0>
  4074f8:	str	w1, [x19, #112]
  4074fc:	ldr	x19, [sp, #16]
  407500:	ldp	x29, x30, [sp], #32
  407504:	ret
  407508:	ldr	x0, [x0]
  40750c:	ldr	x0, [x0, #8]
  407510:	ldr	x0, [x0, #192]
  407514:	bl	4026c0 <fileno_unlocked@plt>
  407518:	bl	4029f0 <isatty@plt>
  40751c:	cbnz	w0, 407534 <nftw@plt+0x49b4>
  407520:	mov	w1, #0x7fffffff            	// #2147483647
  407524:	str	w1, [x19, #112]
  407528:	ldr	x19, [sp, #16]
  40752c:	ldp	x29, x30, [sp], #32
  407530:	ret
  407534:	bl	407470 <nftw@plt+0x48f0>
  407538:	sub	w1, w0, #0x1
  40753c:	b	4074f0 <nftw@plt+0x4970>
  407540:	stp	x29, x30, [sp, #-48]!
  407544:	mov	x29, sp
  407548:	str	x21, [sp, #32]
  40754c:	mov	x21, x0
  407550:	stp	x19, x20, [sp, #16]
  407554:	mov	x19, x0
  407558:	mov	w20, w1
  40755c:	mov	x0, #0x48                  	// #72
  407560:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  407564:	str	x0, [x21], #8
  407568:	mov	w1, #0x0                   	// #0
  40756c:	bl	40f270 <nftw@plt+0xc6f0>
  407570:	stp	xzr, xzr, [x19, #8]
  407574:	sbfiz	x0, x20, #2, #32
  407578:	stp	xzr, xzr, [x21, #16]
  40757c:	stp	xzr, xzr, [x21, #32]
  407580:	str	xzr, [x21, #48]
  407584:	strb	wzr, [x19, #64]
  407588:	str	w20, [x19, #68]
  40758c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  407590:	str	x0, [x19, #72]
  407594:	cmp	w20, #0x0
  407598:	b.le	4075b0 <nftw@plt+0x4a30>
  40759c:	mov	x2, #0x0                   	// #0
  4075a0:	str	wzr, [x0, x2, lsl #2]
  4075a4:	add	x2, x2, #0x1
  4075a8:	cmp	w20, w2
  4075ac:	b.gt	4075a0 <nftw@plt+0x4a20>
  4075b0:	ldr	x1, [x19]
  4075b4:	strb	wzr, [x19, #108]
  4075b8:	mov	x0, x19
  4075bc:	ldr	w1, [x1, #40]
  4075c0:	bl	4074d8 <nftw@plt+0x4958>
  4075c4:	str	xzr, [x19, #120]
  4075c8:	mov	w4, #0x5e5e                	// #24158
  4075cc:	adrp	x3, 409000 <nftw@plt+0x6480>
  4075d0:	movk	w4, #0x5e, lsl #16
  4075d4:	add	x3, x3, #0x1b0
  4075d8:	adrp	x2, 407000 <nftw@plt+0x4480>
  4075dc:	adrp	x1, 406000 <nftw@plt+0x3480>
  4075e0:	add	x2, x2, #0x3c0
  4075e4:	add	x1, x1, #0xf48
  4075e8:	adrp	x0, 406000 <nftw@plt+0x3480>
  4075ec:	add	x0, x0, #0xf80
  4075f0:	str	w4, [x19, #116]
  4075f4:	strh	wzr, [x19, #128]
  4075f8:	strb	wzr, [x19, #130]
  4075fc:	str	wzr, [x19, #132]
  407600:	stp	x3, x2, [x19, #136]
  407604:	stp	x1, xzr, [x19, #152]
  407608:	stp	xzr, xzr, [x19, #168]
  40760c:	stp	xzr, xzr, [x19, #184]
  407610:	str	wzr, [x19, #200]
  407614:	stp	xzr, xzr, [x19, #208]
  407618:	str	wzr, [x19, #224]
  40761c:	strh	wzr, [x19, #228]
  407620:	stp	xzr, xzr, [x19, #232]
  407624:	stp	xzr, xzr, [x19, #248]
  407628:	str	x0, [x19, #264]
  40762c:	ldp	x19, x20, [sp, #16]
  407630:	ldr	x21, [sp, #32]
  407634:	ldp	x29, x30, [sp], #48
  407638:	ret
  40763c:	nop
  407640:	stp	x29, x30, [sp, #-32]!
  407644:	cmp	w1, #0x0
  407648:	mov	w2, #0x2                   	// #2
  40764c:	mov	x29, sp
  407650:	str	x19, [sp, #16]
  407654:	ldr	x19, [x0]
  407658:	csel	w0, w1, w2, ge  // ge = tcont
  40765c:	bl	40a0e0 <nftw@plt+0x7560>
  407660:	strb	w0, [x19, #67]
  407664:	ldr	x19, [sp, #16]
  407668:	ldp	x29, x30, [sp], #32
  40766c:	ret
  407670:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407674:	add	x1, x1, #0xfe0
  407678:	add	x1, x1, #0x20
  40767c:	ldr	x0, [x1, w0, sxtw #3]
  407680:	ret
  407684:	nop
  407688:	stp	x29, x30, [sp, #-128]!
  40768c:	mov	x29, sp
  407690:	stp	x19, x20, [sp, #16]
  407694:	mov	x19, x0
  407698:	mov	w20, w1
  40769c:	ldr	x0, [x0]
  4076a0:	str	xzr, [sp, #120]
  4076a4:	ldrb	w1, [x0, #65]
  4076a8:	cbnz	w1, 40783c <nftw@plt+0x4cbc>
  4076ac:	cmp	w20, #0x1
  4076b0:	b.ls	407820 <nftw@plt+0x4ca0>  // b.plast
  4076b4:	stp	x23, x24, [sp, #48]
  4076b8:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4076bc:	mov	w1, w20
  4076c0:	ldr	x0, [x23, #2296]
  4076c4:	add	x3, sp, #0x78
  4076c8:	mov	w2, #0x2                   	// #2
  4076cc:	bl	42bfa0 <nftw@plt+0x29420>
  4076d0:	ldr	x1, [sp, #120]
  4076d4:	cbz	x1, 40782c <nftw@plt+0x4cac>
  4076d8:	ldr	x0, [x19, #208]
  4076dc:	cmp	x1, x0
  4076e0:	b.eq	40782c <nftw@plt+0x4cac>  // b.none
  4076e4:	stp	x27, x28, [sp, #80]
  4076e8:	ldr	w28, [x1, #20]
  4076ec:	str	x1, [x19, #208]
  4076f0:	cbz	w28, 40784c <nftw@plt+0x4ccc>
  4076f4:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4076f8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4076fc:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407700:	add	x0, x0, #0xaf8
  407704:	add	x23, x23, #0x8f8
  407708:	add	x24, x24, #0xb70
  40770c:	add	x27, x27, #0xaf0
  407710:	mov	w20, #0x1                   	// #1
  407714:	stp	x21, x22, [sp, #32]
  407718:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40771c:	adrp	x21, 48d000 <__environ@@GLIBC_2.17+0xa68>
  407720:	add	x22, x22, #0xb40
  407724:	add	x21, x21, #0x770
  407728:	stp	x25, x26, [sp, #64]
  40772c:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407730:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407734:	add	x26, x26, #0xb00
  407738:	add	x25, x25, #0xb60
  40773c:	str	x0, [sp, #104]
  407740:	b	4077b8 <nftw@plt+0x4c38>
  407744:	cbz	w3, 407860 <nftw@plt+0x4ce0>
  407748:	mov	x2, x27
  40774c:	mov	w4, #0x0                   	// #0
  407750:	add	x0, x21, #0x8
  407754:	mov	x1, #0x20                  	// #32
  407758:	bl	402600 <snprintf@plt>
  40775c:	cmp	w20, #0x0
  407760:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407764:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  407768:	add	x1, x1, #0xb58
  40776c:	add	x2, x2, #0xbd0
  407770:	mov	x0, x22
  407774:	csel	x22, x2, x1, ne  // ne = any
  407778:	mov	w20, #0x0                   	// #0
  40777c:	ldr	x28, [x19]
  407780:	bl	402b10 <gettext@plt>
  407784:	ldr	x5, [sp, #120]
  407788:	mov	x2, x22
  40778c:	mov	x3, x0
  407790:	mov	x1, x25
  407794:	mov	x0, x28
  407798:	add	x6, x21, #0x8
  40779c:	ldr	x5, [x5, #8]
  4077a0:	mov	x4, x26
  4077a4:	mov	x22, x24
  4077a8:	bl	411370 <nftw@plt+0xe7f0>
  4077ac:	ldr	x1, [sp, #120]
  4077b0:	ldr	w28, [x1, #20]
  4077b4:	cbz	w28, 4077f8 <nftw@plt+0x4c78>
  4077b8:	ldr	x0, [x23]
  4077bc:	bl	42b0a8 <nftw@plt+0x28528>
  4077c0:	ldr	w3, [x0]
  4077c4:	ldrb	w1, [x0, #6]
  4077c8:	ldr	w4, [x0, #16]
  4077cc:	sub	w2, w28, w3
  4077d0:	str	x0, [sp, #120]
  4077d4:	lsr	w3, w2, w1
  4077d8:	add	w3, w3, w4
  4077dc:	cbz	w20, 407744 <nftw@plt+0x4bc4>
  4077e0:	ldrb	w4, [x19, #121]
  4077e4:	cbnz	w4, 407868 <nftw@plt+0x4ce8>
  4077e8:	cbz	w3, 407860 <nftw@plt+0x4ce0>
  4077ec:	mov	x2, x27
  4077f0:	mov	w4, #0x0                   	// #0
  4077f4:	b	407750 <nftw@plt+0x4bd0>
  4077f8:	ldr	x0, [x19]
  4077fc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  407800:	add	x1, x1, #0x8b8
  407804:	bl	411370 <nftw@plt+0xe7f0>
  407808:	ldr	x0, [x19]
  40780c:	bl	40f388 <nftw@plt+0xc808>
  407810:	ldp	x21, x22, [sp, #32]
  407814:	ldp	x23, x24, [sp, #48]
  407818:	ldp	x25, x26, [sp, #64]
  40781c:	ldp	x27, x28, [sp, #80]
  407820:	ldp	x19, x20, [sp, #16]
  407824:	ldp	x29, x30, [sp], #128
  407828:	ret
  40782c:	ldp	x19, x20, [sp, #16]
  407830:	ldp	x23, x24, [sp, #48]
  407834:	ldp	x29, x30, [sp], #128
  407838:	ret
  40783c:	bl	40f388 <nftw@plt+0xc808>
  407840:	ldr	x0, [x19]
  407844:	strb	wzr, [x0, #65]
  407848:	b	4076ac <nftw@plt+0x4b2c>
  40784c:	ldp	x19, x20, [sp, #16]
  407850:	ldp	x23, x24, [sp, #48]
  407854:	ldp	x27, x28, [sp, #80]
  407858:	ldp	x29, x30, [sp], #128
  40785c:	ret
  407860:	strb	wzr, [x21, #8]
  407864:	b	40775c <nftw@plt+0x4bdc>
  407868:	ldrb	w0, [x0, #7]
  40786c:	cbz	w3, 407860 <nftw@plt+0x4ce0>
  407870:	mov	w4, #0x1                   	// #1
  407874:	lsl	w4, w4, w1
  407878:	sub	w4, w4, #0x1
  40787c:	and	w2, w4, w2
  407880:	lsr	w4, w2, w0
  407884:	cmp	w4, #0x0
  407888:	ldr	x0, [sp, #104]
  40788c:	csel	x2, x27, x0, eq  // eq = none
  407890:	b	407750 <nftw@plt+0x4bd0>
  407894:	nop
  407898:	stp	x29, x30, [sp, #-64]!
  40789c:	mov	x29, sp
  4078a0:	stp	x21, x22, [sp, #32]
  4078a4:	mov	w22, #0x0                   	// #0
  4078a8:	tbnz	w1, #31, 407994 <nftw@plt+0x4e14>
  4078ac:	stp	x19, x20, [sp, #16]
  4078b0:	mov	w22, #0x0                   	// #0
  4078b4:	mov	w19, w1
  4078b8:	stp	x23, x24, [sp, #48]
  4078bc:	mov	x23, x0
  4078c0:	ldr	w0, [x0, #68]
  4078c4:	cmp	w0, w1
  4078c8:	b.le	4079a4 <nftw@plt+0x4e24>
  4078cc:	mov	w21, w2
  4078d0:	cmp	w2, #0xd
  4078d4:	b.gt	4079a4 <nftw@plt+0x4e24>
  4078d8:	ldr	x0, [x23, #72]
  4078dc:	sxtw	x24, w1
  4078e0:	mov	w20, w3
  4078e4:	ldr	w22, [x0, x24, lsl #2]
  4078e8:	cbz	w3, 4079bc <nftw@plt+0x4e3c>
  4078ec:	cbnz	w22, 40790c <nftw@plt+0x4d8c>
  4078f0:	mov	w0, w1
  4078f4:	mov	w22, #0x1                   	// #1
  4078f8:	ldp	x2, x1, [x23, #168]
  4078fc:	blr	x2
  407900:	cbnz	w0, 4079d8 <nftw@plt+0x4e58>
  407904:	ldr	x0, [x23, #72]
  407908:	str	w22, [x0, x24, lsl #2]
  40790c:	ldr	w2, [x23, #88]
  407910:	ldr	x0, [x23, #80]
  407914:	subs	w4, w2, #0x1
  407918:	b.mi	407958 <nftw@plt+0x4dd8>  // b.first
  40791c:	mov	w3, #0xc                   	// #12
  407920:	sub	x5, x0, #0x18
  407924:	smull	x1, w4, w3
  407928:	add	x6, x1, #0xc
  40792c:	add	x1, x0, x1
  407930:	umsubl	x4, w4, w3, x6
  407934:	add	x5, x4, x5
  407938:	b	407948 <nftw@plt+0x4dc8>
  40793c:	sub	x1, x1, #0xc
  407940:	cmp	x1, x5
  407944:	b.eq	407958 <nftw@plt+0x4dd8>  // b.none
  407948:	ldr	w4, [x1, #4]
  40794c:	cmp	w4, w19
  407950:	b.ne	40793c <nftw@plt+0x4dbc>  // b.any
  407954:	ldr	w22, [x1, #8]
  407958:	add	w2, w2, #0x1
  40795c:	mov	w24, #0xc                   	// #12
  407960:	smull	x24, w2, w24
  407964:	mov	x1, x24
  407968:	sub	x24, x24, #0xc
  40796c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  407970:	add	x1, x0, x24
  407974:	str	x0, [x23, #80]
  407978:	str	w20, [x0, x24]
  40797c:	stp	w19, w21, [x1, #4]
  407980:	ldp	x19, x20, [sp, #16]
  407984:	ldr	w0, [x23, #88]
  407988:	add	w0, w0, #0x1
  40798c:	str	w0, [x23, #88]
  407990:	ldp	x23, x24, [sp, #48]
  407994:	mov	w0, w22
  407998:	ldp	x21, x22, [sp, #32]
  40799c:	ldp	x29, x30, [sp], #64
  4079a0:	ret
  4079a4:	mov	w0, w22
  4079a8:	ldp	x19, x20, [sp, #16]
  4079ac:	ldp	x21, x22, [sp, #32]
  4079b0:	ldp	x23, x24, [sp, #48]
  4079b4:	ldp	x29, x30, [sp], #64
  4079b8:	ret
  4079bc:	str	w2, [x0, x24, lsl #2]
  4079c0:	mov	w0, w22
  4079c4:	ldp	x19, x20, [sp, #16]
  4079c8:	ldp	x21, x22, [sp, #32]
  4079cc:	ldp	x23, x24, [sp, #48]
  4079d0:	ldp	x29, x30, [sp], #64
  4079d4:	ret
  4079d8:	ldrb	w1, [x23, #64]
  4079dc:	mov	w22, #0x4                   	// #4
  4079e0:	mov	w0, #0x6                   	// #6
  4079e4:	cmp	w1, #0x0
  4079e8:	csel	w22, w22, w0, ne  // ne = any
  4079ec:	b	407904 <nftw@plt+0x4d84>
  4079f0:	stp	x29, x30, [sp, #-32]!
  4079f4:	mov	x29, sp
  4079f8:	ldr	w1, [x0, #104]
  4079fc:	str	x19, [sp, #16]
  407a00:	mov	x19, x0
  407a04:	ldr	x0, [x0, #96]
  407a08:	add	w1, w1, #0x1
  407a0c:	sbfiz	x1, x1, #2, #32
  407a10:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  407a14:	str	x0, [x19, #96]
  407a18:	ldr	w1, [x19, #104]
  407a1c:	add	w2, w1, #0x1
  407a20:	str	w2, [x19, #104]
  407a24:	ldr	w2, [x19, #88]
  407a28:	str	w2, [x0, w1, sxtw #2]
  407a2c:	ldr	x19, [sp, #16]
  407a30:	ldp	x29, x30, [sp], #32
  407a34:	ret
  407a38:	stp	x29, x30, [sp, #-48]!
  407a3c:	mov	x29, sp
  407a40:	stp	x21, x22, [sp, #32]
  407a44:	mov	w22, w1
  407a48:	ldr	w21, [x0, #104]
  407a4c:	stp	x19, x20, [sp, #16]
  407a50:	mov	x19, x0
  407a54:	cbz	w21, 407a68 <nftw@plt+0x4ee8>
  407a58:	ldr	x0, [x0, #96]
  407a5c:	sub	w21, w21, #0x1
  407a60:	str	w21, [x19, #104]
  407a64:	ldr	w21, [x0, w21, sxtw #2]
  407a68:	ldr	w20, [x19, #88]
  407a6c:	mov	w1, #0xc                   	// #12
  407a70:	ldr	x0, [x19, #80]
  407a74:	add	w20, w20, #0x1
  407a78:	smull	x20, w20, w1
  407a7c:	mov	x1, x20
  407a80:	sub	x20, x20, #0xc
  407a84:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  407a88:	add	x1, x0, x20
  407a8c:	str	x0, [x19, #80]
  407a90:	mov	w2, #0xf                   	// #15
  407a94:	str	w22, [x0, x20]
  407a98:	stp	w21, w2, [x1, #4]
  407a9c:	ldp	x21, x22, [sp, #32]
  407aa0:	ldr	w0, [x19, #88]
  407aa4:	add	w0, w0, #0x1
  407aa8:	str	w0, [x19, #88]
  407aac:	ldp	x19, x20, [sp, #16]
  407ab0:	ldp	x29, x30, [sp], #48
  407ab4:	ret
  407ab8:	ldrb	w2, [x0]
  407abc:	mov	x5, x0
  407ac0:	cmp	w2, #0x2e
  407ac4:	b.eq	407ae4 <nftw@plt+0x4f64>  // b.none
  407ac8:	b	407af4 <nftw@plt+0x4f74>
  407acc:	ldrb	w1, [x0, #2]
  407ad0:	cmp	w1, #0x2f
  407ad4:	b.ne	407af0 <nftw@plt+0x4f70>  // b.any
  407ad8:	ldrb	w2, [x0, #3]!
  407adc:	cmp	w2, #0x2e
  407ae0:	b.ne	407af4 <nftw@plt+0x4f74>  // b.any
  407ae4:	ldrb	w1, [x0, #1]
  407ae8:	cmp	w1, #0x2e
  407aec:	b.eq	407acc <nftw@plt+0x4f4c>  // b.none
  407af0:	ldrb	w2, [x0]
  407af4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407af8:	add	x1, x1, #0xfe0
  407afc:	add	x1, x1, #0x98
  407b00:	b	407b10 <nftw@plt+0x4f90>
  407b04:	ldrb	w4, [x1, #2]
  407b08:	cmp	w4, #0x2f
  407b0c:	b.ne	407b28 <nftw@plt+0x4fa8>  // b.any
  407b10:	ldrb	w3, [x1, #3]!
  407b14:	cmp	w3, #0x2e
  407b18:	b.ne	407b28 <nftw@plt+0x4fa8>  // b.any
  407b1c:	ldrb	w4, [x1, #1]
  407b20:	cmp	w4, #0x2e
  407b24:	b.eq	407b04 <nftw@plt+0x4f84>  // b.none
  407b28:	cmp	w3, #0x0
  407b2c:	ccmp	w2, w3, #0x0, ne  // ne = any
  407b30:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  407b34:	b.eq	407b50 <nftw@plt+0x4fd0>  // b.none
  407b38:	ldrb	w3, [x0, #1]!
  407b3c:	ldrb	w2, [x1, #1]!
  407b40:	cmp	w3, #0x0
  407b44:	ccmp	w3, w2, #0x0, ne  // ne = any
  407b48:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  407b4c:	b.ne	407b38 <nftw@plt+0x4fb8>  // b.any
  407b50:	cmp	x5, x0
  407b54:	b.cc	407b68 <nftw@plt+0x4fe8>  // b.lo, b.ul, b.last
  407b58:	b	407b74 <nftw@plt+0x4ff4>
  407b5c:	sub	x0, x0, #0x1
  407b60:	cmp	x5, x0
  407b64:	b.eq	407b74 <nftw@plt+0x4ff4>  // b.none
  407b68:	ldurb	w1, [x0, #-1]
  407b6c:	cmp	w1, #0x2f
  407b70:	b.ne	407b5c <nftw@plt+0x4fdc>  // b.any
  407b74:	ret
  407b78:	stp	x29, x30, [sp, #-304]!
  407b7c:	mov	w8, #0xffffffc8            	// #-56
  407b80:	mov	x29, sp
  407b84:	add	x9, sp, #0xf0
  407b88:	add	x10, sp, #0x130
  407b8c:	stp	x19, x20, [sp, #16]
  407b90:	mov	x19, x0
  407b94:	mov	w0, #0xffffff80            	// #-128
  407b98:	stp	x10, x10, [sp, #40]
  407b9c:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407ba0:	str	x9, [sp, #56]
  407ba4:	stp	w8, w0, [sp, #64]
  407ba8:	str	q0, [sp, #112]
  407bac:	str	q1, [sp, #128]
  407bb0:	str	q2, [sp, #144]
  407bb4:	str	q3, [sp, #160]
  407bb8:	str	q4, [sp, #176]
  407bbc:	str	q5, [sp, #192]
  407bc0:	str	q6, [sp, #208]
  407bc4:	str	q7, [sp, #224]
  407bc8:	stp	x1, x2, [sp, #248]
  407bcc:	stp	x3, x4, [sp, #264]
  407bd0:	stp	x5, x6, [sp, #280]
  407bd4:	str	x7, [sp, #296]
  407bd8:	bl	402aa0 <__errno_location@plt>
  407bdc:	mov	x1, x0
  407be0:	add	x2, sp, #0x28
  407be4:	mov	x0, x19
  407be8:	str	x2, [sp, #80]
  407bec:	ldr	w1, [x1]
  407bf0:	str	w1, [sp, #88]
  407bf4:	bl	402b10 <gettext@plt>
  407bf8:	str	xzr, [sp, #96]
  407bfc:	ldr	x2, [x20, #920]
  407c00:	str	x0, [sp, #72]
  407c04:	add	x1, sp, #0x48
  407c08:	ldr	x0, [x2]
  407c0c:	bl	411338 <nftw@plt+0xe7b8>
  407c10:	ldr	x0, [x20, #920]
  407c14:	ldr	x0, [x0]
  407c18:	bl	40fb08 <nftw@plt+0xcf88>
  407c1c:	ldp	x19, x20, [sp, #16]
  407c20:	ldp	x29, x30, [sp], #304
  407c24:	ret
  407c28:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407c2c:	ldr	x0, [x0, #920]
  407c30:	ldr	x0, [x0, #24]
  407c34:	cmp	x0, #0x0
  407c38:	cset	w0, ne  // ne = any
  407c3c:	ret
  407c40:	stp	x29, x30, [sp, #-272]!
  407c44:	mov	w8, #0xffffffd0            	// #-48
  407c48:	mov	x29, sp
  407c4c:	add	x9, sp, #0xe0
  407c50:	stp	x2, x3, [sp, #224]
  407c54:	add	x2, sp, #0x110
  407c58:	str	x19, [sp, #16]
  407c5c:	mov	x19, x0
  407c60:	mov	x0, x1
  407c64:	mov	w1, #0xffffff80            	// #-128
  407c68:	stp	x2, x2, [sp, #64]
  407c6c:	str	x9, [sp, #80]
  407c70:	str	w8, [sp, #88]
  407c74:	str	w1, [sp, #92]
  407c78:	str	q0, [sp, #96]
  407c7c:	str	q1, [sp, #112]
  407c80:	str	q2, [sp, #128]
  407c84:	str	q3, [sp, #144]
  407c88:	str	q4, [sp, #160]
  407c8c:	str	q5, [sp, #176]
  407c90:	str	q6, [sp, #192]
  407c94:	str	q7, [sp, #208]
  407c98:	stp	x4, x5, [sp, #240]
  407c9c:	stp	x6, x7, [sp, #256]
  407ca0:	bl	402b10 <gettext@plt>
  407ca4:	add	x2, sp, #0x20
  407ca8:	ldp	x6, x7, [sp, #64]
  407cac:	mov	x1, x0
  407cb0:	ldp	x4, x5, [sp, #80]
  407cb4:	mov	x0, x19
  407cb8:	stp	x6, x7, [sp, #32]
  407cbc:	stp	x4, x5, [sp, #48]
  407cc0:	bl	402a80 <vfprintf@plt>
  407cc4:	ldr	x19, [sp, #16]
  407cc8:	ldp	x29, x30, [sp], #272
  407ccc:	ret
  407cd0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407cd4:	ldr	x1, [x0, #920]
  407cd8:	ldr	w0, [x1, #240]
  407cdc:	add	w0, w0, #0x1
  407ce0:	str	w0, [x1, #240]
  407ce4:	ret
  407ce8:	stp	x29, x30, [sp, #-32]!
  407cec:	mov	x29, sp
  407cf0:	str	x19, [sp, #16]
  407cf4:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407cf8:	ldr	x0, [x19, #920]
  407cfc:	ldr	w1, [x0, #240]
  407d00:	sub	w1, w1, #0x1
  407d04:	str	w1, [x0, #240]
  407d08:	cbnz	w1, 407d2c <nftw@plt+0x51ac>
  407d0c:	ldr	w1, [x0, #244]
  407d10:	cmp	w1, #0x0
  407d14:	b.le	407d28 <nftw@plt+0x51a8>
  407d18:	ldr	x1, [x0, #256]
  407d1c:	cbz	x1, 407d28 <nftw@plt+0x51a8>
  407d20:	blr	x1
  407d24:	ldr	x0, [x19, #920]
  407d28:	str	wzr, [x0, #244]
  407d2c:	ldr	x19, [sp, #16]
  407d30:	ldp	x29, x30, [sp], #32
  407d34:	ret
  407d38:	stp	x29, x30, [sp, #-32]!
  407d3c:	mov	x29, sp
  407d40:	ldr	x1, [x0, #264]
  407d44:	stp	x19, x20, [sp, #16]
  407d48:	mov	x19, x0
  407d4c:	cbz	x1, 407d54 <nftw@plt+0x51d4>
  407d50:	blr	x1
  407d54:	bl	414318 <nftw@plt+0x11798>
  407d58:	ldr	x0, [x19, #72]
  407d5c:	bl	402910 <free@plt>
  407d60:	ldr	x0, [x19]
  407d64:	ldr	x1, [x0]
  407d68:	ldr	x1, [x1]
  407d6c:	str	xzr, [x19, #72]
  407d70:	blr	x1
  407d74:	ldr	x0, [x19]
  407d78:	bl	402910 <free@plt>
  407d7c:	str	xzr, [x19]
  407d80:	ldr	x20, [x19, #232]
  407d84:	cbz	x20, 407da4 <nftw@plt+0x5224>
  407d88:	ldr	x1, [x20, #8]
  407d8c:	add	x0, x20, #0x8
  407d90:	bl	409d60 <nftw@plt+0x71e0>
  407d94:	mov	x0, x20
  407d98:	mov	x1, #0x28                  	// #40
  407d9c:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  407da0:	str	xzr, [x19, #232]
  407da4:	ldp	x19, x20, [sp, #16]
  407da8:	ldp	x29, x30, [sp], #32
  407dac:	ret
  407db0:	ldr	w2, [x0, #132]
  407db4:	cbz	w2, 407df0 <nftw@plt+0x5270>
  407db8:	stp	x29, x30, [sp, #-32]!
  407dbc:	mov	x29, sp
  407dc0:	stp	x19, x20, [sp, #16]
  407dc4:	mov	x19, x0
  407dc8:	and	w20, w1, #0xff
  407dcc:	ldp	w0, w3, [x0, #24]
  407dd0:	ldr	w1, [x19, #56]
  407dd4:	add	w0, w0, w3
  407dd8:	add	w0, w0, w1
  407ddc:	cmp	w2, w0
  407de0:	b.le	407df4 <nftw@plt+0x5274>
  407de4:	ldp	x19, x20, [sp, #16]
  407de8:	ldp	x29, x30, [sp], #32
  407dec:	ret
  407df0:	ret
  407df4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407df8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407dfc:	add	x1, x1, #0xb88
  407e00:	ldr	x0, [x0, #1392]
  407e04:	bl	407c40 <nftw@plt+0x50c0>
  407e08:	cbnz	w20, 407e14 <nftw@plt+0x5294>
  407e0c:	mov	w0, #0x1                   	// #1
  407e10:	bl	402520 <exit@plt>
  407e14:	mov	x0, x19
  407e18:	bl	407d38 <nftw@plt+0x51b8>
  407e1c:	b	407e0c <nftw@plt+0x528c>
  407e20:	stp	x29, x30, [sp, #-48]!
  407e24:	cmp	w1, #0x5
  407e28:	mov	x29, sp
  407e2c:	stp	x19, x20, [sp, #16]
  407e30:	mov	x19, x0
  407e34:	b.hi	407e70 <nftw@plt+0x52f0>  // b.pmore
  407e38:	cmp	w1, #0x3
  407e3c:	b.hi	407f30 <nftw@plt+0x53b0>  // b.pmore
  407e40:	cmp	w1, #0x2
  407e44:	b.ne	407e84 <nftw@plt+0x5304>  // b.any
  407e48:	ldrb	w1, [x0, #120]
  407e4c:	cbnz	w1, 407f64 <nftw@plt+0x53e4>
  407e50:	bl	407d38 <nftw@plt+0x51b8>
  407e54:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407e58:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407e5c:	add	x1, x1, #0xc98
  407e60:	ldr	x0, [x0, #1392]
  407e64:	bl	407c40 <nftw@plt+0x50c0>
  407e68:	mov	w0, #0x1                   	// #1
  407e6c:	bl	402520 <exit@plt>
  407e70:	cmp	w1, #0x9
  407e74:	b.hi	407f20 <nftw@plt+0x53a0>  // b.pmore
  407e78:	ldp	x19, x20, [sp, #16]
  407e7c:	ldp	x29, x30, [sp], #48
  407e80:	ret
  407e84:	cmp	w1, #0x3
  407e88:	b.ne	407f68 <nftw@plt+0x53e8>  // b.any
  407e8c:	adrp	x2, 406000 <nftw@plt+0x3480>
  407e90:	add	x20, x2, #0xec8
  407e94:	mov	x2, x20
  407e98:	mov	x3, #0x0                   	// #0
  407e9c:	mov	w1, #0x0                   	// #0
  407ea0:	mov	x0, #0x0                   	// #0
  407ea4:	bl	435878 <nftw@plt+0x32cf8>
  407ea8:	str	wzr, [sp, #44]
  407eac:	cbz	x0, 407ec8 <nftw@plt+0x5348>
  407eb0:	adrp	x2, 406000 <nftw@plt+0x3480>
  407eb4:	mov	x3, x20
  407eb8:	add	x4, sp, #0x2c
  407ebc:	add	x2, x2, #0xff0
  407ec0:	mov	w1, #0x2                   	// #2
  407ec4:	bl	435998 <nftw@plt+0x32e18>
  407ec8:	ldrb	w0, [x19, #120]
  407ecc:	cbnz	w0, 407f64 <nftw@plt+0x53e4>
  407ed0:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407ed4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407ed8:	add	x1, x1, #0xbe8
  407edc:	ldr	x0, [x19, #1392]
  407ee0:	bl	407c40 <nftw@plt+0x50c0>
  407ee4:	ldr	w0, [sp, #44]
  407ee8:	cmp	w0, #0x0
  407eec:	b.le	407f00 <nftw@plt+0x5380>
  407ef0:	ldr	x0, [x19, #1392]
  407ef4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407ef8:	add	x1, x1, #0xc38
  407efc:	bl	407c40 <nftw@plt+0x50c0>
  407f00:	ldr	x0, [x19, #1392]
  407f04:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  407f08:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407f0c:	add	x2, x2, #0x240
  407f10:	add	x1, x1, #0xc78
  407f14:	bl	407c40 <nftw@plt+0x50c0>
  407f18:	mov	w0, #0x4                   	// #4
  407f1c:	bl	402520 <exit@plt>
  407f20:	cmp	w1, #0xd
  407f24:	b.ne	407f68 <nftw@plt+0x53e8>  // b.any
  407f28:	str	wzr, [sp, #44]
  407f2c:	b	407ec8 <nftw@plt+0x5348>
  407f30:	ldrb	w0, [x0, #120]
  407f34:	cbnz	w0, 407f64 <nftw@plt+0x53e4>
  407f38:	ldrb	w0, [x19, #128]
  407f3c:	cbz	w0, 407e78 <nftw@plt+0x52f8>
  407f40:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  407f44:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407f48:	add	x1, x1, #0xbb8
  407f4c:	ldr	x0, [x0, #1392]
  407f50:	bl	407c40 <nftw@plt+0x50c0>
  407f54:	mov	x0, x19
  407f58:	bl	407d38 <nftw@plt+0x51b8>
  407f5c:	mov	w0, #0x1                   	// #1
  407f60:	bl	402520 <exit@plt>
  407f64:	bl	4027f0 <abort@plt>
  407f68:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407f6c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  407f70:	add	x2, x2, #0xcb8
  407f74:	add	x0, x0, #0xcd8
  407f78:	mov	w1, #0x231                 	// #561
  407f7c:	bl	402bf0 <nftw@plt+0x70>
  407f80:	stp	x29, x30, [sp, #-160]!
  407f84:	mov	x29, sp
  407f88:	stp	x19, x20, [sp, #16]
  407f8c:	mov	x20, x1
  407f90:	mov	x19, x0
  407f94:	mov	x0, x1
  407f98:	mov	w1, #0x0                   	// #0
  407f9c:	stp	x21, x22, [sp, #32]
  407fa0:	bl	40ee30 <nftw@plt+0xc2b0>
  407fa4:	ldr	w21, [x20, #56]
  407fa8:	sub	w1, w21, #0x6
  407fac:	tst	w1, #0xfffffffb
  407fb0:	b.ne	408160 <nftw@plt+0x55e0>  // b.any
  407fb4:	ldrb	w1, [x19, #129]
  407fb8:	cbz	w1, 407fd0 <nftw@plt+0x5450>
  407fbc:	mov	w0, #0x0                   	// #0
  407fc0:	ldp	x19, x20, [sp, #16]
  407fc4:	ldp	x21, x22, [sp, #32]
  407fc8:	ldp	x29, x30, [sp], #160
  407fcc:	ret
  407fd0:	stp	x23, x24, [sp, #48]
  407fd4:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  407fd8:	mov	w1, w0
  407fdc:	ldr	x0, [x23, #2296]
  407fe0:	bl	42bea8 <nftw@plt+0x29328>
  407fe4:	cbnz	w0, 408268 <nftw@plt+0x56e8>
  407fe8:	ldr	w0, [x20, #56]
  407fec:	cmp	w0, #0xa
  407ff0:	b.ne	4084d4 <nftw@plt+0x5954>  // b.any
  407ff4:	ldrb	w2, [x19, #122]
  407ff8:	mov	w21, #0x4                   	// #4
  407ffc:	ldr	w1, [x19, #216]
  408000:	mov	w0, #0x6                   	// #6
  408004:	cmp	w2, #0x0
  408008:	csel	w21, w21, w0, ne  // ne = any
  40800c:	str	w21, [x20, #56]
  408010:	cmp	w1, #0x0
  408014:	b.gt	408184 <nftw@plt+0x5604>
  408018:	ldp	x23, x24, [sp, #48]
  40801c:	ldrb	w1, [x19, #64]
  408020:	ldr	w0, [x20, #60]
  408024:	cbz	w1, 408034 <nftw@plt+0x54b4>
  408028:	ldr	w1, [x20, #56]
  40802c:	cmp	w1, #0x6
  408030:	b.eq	4081c0 <nftw@plt+0x5640>  // b.none
  408034:	cbz	w0, 40807c <nftw@plt+0x54fc>
  408038:	ldr	w1, [x19, #124]
  40803c:	cmp	w1, w0
  408040:	b.eq	40807c <nftw@plt+0x54fc>  // b.none
  408044:	ldp	x2, x1, [x19, #168]
  408048:	blr	x2
  40804c:	cbz	w0, 407fbc <nftw@plt+0x543c>
  408050:	ldr	w0, [x19, #88]
  408054:	cmp	w0, #0x0
  408058:	b.gt	408430 <nftw@plt+0x58b0>
  40805c:	ldrsw	x1, [x20, #60]
  408060:	ldr	x0, [x19, #72]
  408064:	ldr	w1, [x0, x1, lsl #2]
  408068:	cbnz	w1, 408428 <nftw@plt+0x58a8>
  40806c:	ldr	w1, [x20, #56]
  408070:	cmp	w1, #0x1
  408074:	b.ne	408080 <nftw@plt+0x5500>  // b.any
  408078:	b	407fbc <nftw@plt+0x543c>
  40807c:	ldr	w1, [x20, #56]
  408080:	cmp	w1, #0x8
  408084:	b.ne	4081cc <nftw@plt+0x564c>  // b.any
  408088:	ldr	w0, [x19, #216]
  40808c:	add	w0, w0, #0x1
  408090:	str	w0, [x19, #216]
  408094:	add	x1, x19, w1, sxtw #2
  408098:	ldr	w0, [x1, #8]
  40809c:	add	w0, w0, #0x1
  4080a0:	str	w0, [x1, #8]
  4080a4:	ldr	w0, [x19, #244]
  4080a8:	cbnz	w0, 4080c0 <nftw@plt+0x5540>
  4080ac:	ldr	x1, [x19, #248]
  4080b0:	cbz	x1, 4080c0 <nftw@plt+0x5540>
  4080b4:	mov	x0, x19
  4080b8:	blr	x1
  4080bc:	ldr	w0, [x19, #244]
  4080c0:	add	w0, w0, #0x1
  4080c4:	str	w0, [x19, #244]
  4080c8:	add	x0, x20, #0x30
  4080cc:	str	x0, [x20, #24]
  4080d0:	str	xzr, [x20, #48]
  4080d4:	mov	x1, x20
  4080d8:	ldr	x0, [x19]
  4080dc:	bl	40fc78 <nftw@plt+0xd0f8>
  4080e0:	ldr	x2, [x19, #136]
  4080e4:	mov	x1, x20
  4080e8:	mov	x0, x19
  4080ec:	blr	x2
  4080f0:	ldr	x0, [x19]
  4080f4:	bl	40f9f8 <nftw@plt+0xce78>
  4080f8:	ldrb	w0, [x19, #119]
  4080fc:	cbnz	w0, 408288 <nftw@plt+0x5708>
  408100:	ldr	x3, [x19, #152]
  408104:	mov	x0, x19
  408108:	mov	w2, w21
  40810c:	mov	x1, x20
  408110:	blr	x3
  408114:	ldrb	w0, [x19, #229]
  408118:	cbnz	w0, 408330 <nftw@plt+0x57b0>
  40811c:	ldr	w1, [x20, #56]
  408120:	mov	x0, x19
  408124:	bl	407e20 <nftw@plt+0x52a0>
  408128:	str	xzr, [x20, #48]
  40812c:	ldr	x0, [x19, #232]
  408130:	cbz	x0, 408140 <nftw@plt+0x55c0>
  408134:	ldr	x1, [x20, #40]
  408138:	ldrb	w2, [x1, #161]
  40813c:	cbz	w2, 408420 <nftw@plt+0x58a0>
  408140:	ldr	w1, [x19, #216]
  408144:	mov	w0, #0x1                   	// #1
  408148:	ldp	x21, x22, [sp, #32]
  40814c:	sub	w1, w1, #0x1
  408150:	str	w1, [x19, #216]
  408154:	ldp	x19, x20, [sp, #16]
  408158:	ldp	x29, x30, [sp], #160
  40815c:	ret
  408160:	mov	w0, w21
  408164:	cmp	w0, #0x8
  408168:	b.ne	40823c <nftw@plt+0x56bc>  // b.any
  40816c:	ldrb	w0, [x19, #220]
  408170:	cbnz	w0, 407fbc <nftw@plt+0x543c>
  408174:	ldr	w1, [x19, #216]
  408178:	cmp	w1, #0x0
  40817c:	b.le	40801c <nftw@plt+0x549c>
  408180:	stp	x23, x24, [sp, #48]
  408184:	cmp	w1, #0x2
  408188:	stp	x25, x26, [sp, #64]
  40818c:	stp	x27, x28, [sp, #80]
  408190:	b.gt	40819c <nftw@plt+0x561c>
  408194:	ldr	x0, [x19]
  408198:	bl	40fb08 <nftw@plt+0xcf88>
  40819c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4081a0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4081a4:	add	x1, x1, #0xcf0
  4081a8:	ldr	x0, [x0, #1392]
  4081ac:	bl	407c40 <nftw@plt+0x50c0>
  4081b0:	mov	x0, x19
  4081b4:	mov	w1, #0x3                   	// #3
  4081b8:	bl	407e20 <nftw@plt+0x52a0>
  4081bc:	bl	4027f0 <abort@plt>
  4081c0:	mov	w1, #0x4                   	// #4
  4081c4:	str	w1, [x20, #56]
  4081c8:	cbnz	w0, 408038 <nftw@plt+0x54b8>
  4081cc:	mov	x0, x19
  4081d0:	mov	w1, #0x0                   	// #0
  4081d4:	bl	407db0 <nftw@plt+0x5230>
  4081d8:	ldr	w0, [x19, #216]
  4081dc:	ldr	w1, [x20, #56]
  4081e0:	add	w0, w0, #0x1
  4081e4:	str	w0, [x19, #216]
  4081e8:	cmp	w1, #0xd
  4081ec:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  4081f0:	b.ne	408220 <nftw@plt+0x56a0>  // b.any
  4081f4:	ldr	w0, [x19, #24]
  4081f8:	cmp	w0, #0x0
  4081fc:	b.le	408278 <nftw@plt+0x56f8>
  408200:	ldrb	w0, [x19, #120]
  408204:	cbz	w0, 4084e4 <nftw@plt+0x5964>
  408208:	ldr	x3, [x19, #160]
  40820c:	cbz	x3, 408220 <nftw@plt+0x56a0>
  408210:	ldp	x1, x2, [x20]
  408214:	mov	x0, x19
  408218:	blr	x3
  40821c:	ldr	w1, [x20, #56]
  408220:	cmp	w1, #0x4
  408224:	ccmp	w21, #0x6, #0x0, eq  // eq = none
  408228:	b.ne	408094 <nftw@plt+0x5514>  // b.any
  40822c:	ldr	w0, [x19, #56]
  408230:	add	w0, w0, #0x1
  408234:	str	w0, [x19, #56]
  408238:	b	4080a4 <nftw@plt+0x5524>
  40823c:	ldr	w1, [x19, #216]
  408240:	cmp	w1, #0x0
  408244:	b.le	40801c <nftw@plt+0x549c>
  408248:	cmp	w0, #0x3
  40824c:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  408250:	b.ne	408180 <nftw@plt+0x5600>  // b.any
  408254:	cmp	w1, #0x1
  408258:	b.ne	408180 <nftw@plt+0x5600>  // b.any
  40825c:	ldr	x0, [x19]
  408260:	bl	40fb08 <nftw@plt+0xcf88>
  408264:	b	40801c <nftw@plt+0x549c>
  408268:	ldrb	w0, [x19, #130]
  40826c:	cbnz	w0, 407fe8 <nftw@plt+0x5468>
  408270:	ldp	x23, x24, [sp, #48]
  408274:	b	407fbc <nftw@plt+0x543c>
  408278:	ldr	w0, [x19, #28]
  40827c:	cmp	w0, #0x0
  408280:	b.gt	408200 <nftw@plt+0x5680>
  408284:	b	408208 <nftw@plt+0x5688>
  408288:	ldp	w3, w1, [x20, #56]
  40828c:	mov	w2, w21
  408290:	ldr	x4, [x19, #184]
  408294:	mov	x0, x19
  408298:	blr	x4
  40829c:	mov	x22, x0
  4082a0:	cbz	x0, 408100 <nftw@plt+0x5580>
  4082a4:	stp	x23, x24, [sp, #48]
  4082a8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4082ac:	add	x1, x1, #0xd60
  4082b0:	ldr	x23, [x19]
  4082b4:	mov	x0, x23
  4082b8:	bl	40f9a8 <nftw@plt+0xce28>
  4082bc:	ldrsw	x1, [x20, #56]
  4082c0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4082c4:	add	x0, x0, #0xfe0
  4082c8:	add	x0, x0, #0x20
  4082cc:	ldr	x24, [x0, x1, lsl #3]
  4082d0:	mov	x0, x24
  4082d4:	bl	4024f0 <strlen@plt>
  4082d8:	mov	x2, x0
  4082dc:	ldrb	w0, [x23, #67]
  4082e0:	mov	x1, x24
  4082e4:	bl	40a030 <nftw@plt+0x74b0>
  4082e8:	mov	x1, x0
  4082ec:	mov	x0, x23
  4082f0:	bl	40f9a8 <nftw@plt+0xce28>
  4082f4:	mov	x1, x22
  4082f8:	mov	x0, x23
  4082fc:	bl	40f9a8 <nftw@plt+0xce28>
  408300:	ldrb	w0, [x23, #67]
  408304:	bl	40a0c0 <nftw@plt+0x7540>
  408308:	mov	x1, x0
  40830c:	mov	x0, x23
  408310:	bl	40f9a8 <nftw@plt+0xce28>
  408314:	mov	w1, #0x5d                  	// #93
  408318:	mov	x0, x23
  40831c:	bl	40f3e8 <nftw@plt+0xc868>
  408320:	mov	x0, x22
  408324:	bl	402910 <free@plt>
  408328:	ldp	x23, x24, [sp, #48]
  40832c:	b	408100 <nftw@plt+0x5580>
  408330:	ldr	x21, [x19]
  408334:	stp	x27, x28, [sp, #80]
  408338:	ldr	x27, [x20, #40]
  40833c:	cbz	x21, 408548 <nftw@plt+0x59c8>
  408340:	cbz	x27, 408528 <nftw@plt+0x59a8>
  408344:	ldr	w0, [x27, #120]
  408348:	cbz	w0, 408410 <nftw@plt+0x5890>
  40834c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x115a0>
  408350:	add	x28, x27, #0x78
  408354:	add	x22, x22, #0xd88
  408358:	stp	x23, x24, [sp, #48]
  40835c:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x115a0>
  408360:	mov	x24, #0xfffffffffffffff0    	// #-16
  408364:	add	x23, x23, #0xd80
  408368:	stp	x25, x26, [sp, #64]
  40836c:	mov	w25, #0x0                   	// #0
  408370:	b	4083ec <nftw@plt+0x586c>
  408374:	ldr	x0, [x28, #32]
  408378:	add	x1, x24, w25, sxtw #3
  40837c:	add	x0, x0, x1
  408380:	ldr	x26, [x0]
  408384:	add	x8, sp, #0x60
  408388:	add	w25, w25, #0x1
  40838c:	ldr	w0, [x26]
  408390:	bl	414608 <nftw@plt+0x11a88>
  408394:	mov	x1, x23
  408398:	mov	x0, x21
  40839c:	bl	40f9a8 <nftw@plt+0xce28>
  4083a0:	ldr	x1, [sp, #96]
  4083a4:	mov	x0, x21
  4083a8:	bl	409338 <nftw@plt+0x67b8>
  4083ac:	ldr	w0, [x26, #4]
  4083b0:	add	x8, sp, #0x80
  4083b4:	bl	414608 <nftw@plt+0x11a88>
  4083b8:	ldp	w2, w3, [sp, #104]
  4083bc:	mov	x1, x22
  4083c0:	ldp	w4, w5, [sp, #136]
  4083c4:	mov	x0, x21
  4083c8:	bl	411400 <nftw@plt+0xe880>
  4083cc:	ldr	x1, [x26, #8]
  4083d0:	mov	x0, x21
  4083d4:	bl	409338 <nftw@plt+0x67b8>
  4083d8:	mov	x0, x21
  4083dc:	bl	40f388 <nftw@plt+0xc808>
  4083e0:	ldr	w0, [x27, #120]
  4083e4:	cmp	w0, w25
  4083e8:	b.ls	408404 <nftw@plt+0x5884>  // b.plast
  4083ec:	cmp	w25, #0x1
  4083f0:	sxtw	x0, w25
  4083f4:	b.gt	408374 <nftw@plt+0x57f4>
  4083f8:	add	x0, x0, #0x1
  4083fc:	add	x0, x28, x0, lsl #3
  408400:	b	408380 <nftw@plt+0x5800>
  408404:	ldp	x23, x24, [sp, #48]
  408408:	ldp	x25, x26, [sp, #64]
  40840c:	ldr	x21, [x19]
  408410:	mov	x0, x21
  408414:	bl	40f050 <nftw@plt+0xc4d0>
  408418:	ldp	x27, x28, [sp, #80]
  40841c:	b	40811c <nftw@plt+0x559c>
  408420:	bl	40e598 <nftw@plt+0xba18>
  408424:	b	408140 <nftw@plt+0x55c0>
  408428:	str	w1, [x20, #56]
  40842c:	b	408070 <nftw@plt+0x54f0>
  408430:	mov	x0, x20
  408434:	mov	w1, #0x0                   	// #0
  408438:	stp	x23, x24, [sp, #48]
  40843c:	bl	40ee30 <nftw@plt+0xc2b0>
  408440:	ldr	w22, [x19, #88]
  408444:	mov	w24, w0
  408448:	subs	w22, w22, #0x1
  40844c:	b.mi	4084dc <nftw@plt+0x595c>  // b.first
  408450:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408454:	add	x23, x23, #0x8f8
  408458:	stp	x25, x26, [sp, #64]
  40845c:	mov	w25, #0xc                   	// #12
  408460:	b	40847c <nftw@plt+0x58fc>
  408464:	cbz	w0, 4084c0 <nftw@plt+0x5940>
  408468:	ldr	w2, [x20, #60]
  40846c:	cmp	w2, w0
  408470:	b.eq	4084c0 <nftw@plt+0x5940>  // b.none
  408474:	subs	w22, w22, #0x1
  408478:	b.mi	4084b4 <nftw@plt+0x5934>  // b.first
  40847c:	smull	x26, w22, w25
  408480:	mov	w2, w24
  408484:	ldr	x1, [x19, #80]
  408488:	ldr	x0, [x23]
  40848c:	ldr	w1, [x1, x26]
  408490:	bl	42c278 <nftw@plt+0x296f8>
  408494:	tbnz	w0, #31, 408474 <nftw@plt+0x58f4>
  408498:	ldr	x3, [x19, #80]
  40849c:	add	x3, x3, x26
  4084a0:	ldp	w0, w1, [x3, #4]
  4084a4:	cmp	w1, #0xf
  4084a8:	b.ne	408464 <nftw@plt+0x58e4>  // b.any
  4084ac:	mov	w22, w0
  4084b0:	b	408474 <nftw@plt+0x58f4>
  4084b4:	ldp	x23, x24, [sp, #48]
  4084b8:	ldp	x25, x26, [sp, #64]
  4084bc:	b	40805c <nftw@plt+0x54dc>
  4084c0:	cbz	w1, 4084b4 <nftw@plt+0x5934>
  4084c4:	ldp	x23, x24, [sp, #48]
  4084c8:	ldp	x25, x26, [sp, #64]
  4084cc:	str	w1, [x20, #56]
  4084d0:	b	408070 <nftw@plt+0x54f0>
  4084d4:	ldp	x23, x24, [sp, #48]
  4084d8:	b	408164 <nftw@plt+0x55e4>
  4084dc:	ldp	x23, x24, [sp, #48]
  4084e0:	b	40805c <nftw@plt+0x54dc>
  4084e4:	mov	w1, #0x0                   	// #0
  4084e8:	mov	x0, x20
  4084ec:	stp	x23, x24, [sp, #48]
  4084f0:	stp	x25, x26, [sp, #64]
  4084f4:	stp	x27, x28, [sp, #80]
  4084f8:	bl	40ee30 <nftw@plt+0xc2b0>
  4084fc:	add	x8, sp, #0x80
  408500:	bl	414608 <nftw@plt+0x11a88>
  408504:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408508:	ldr	w3, [sp, #136]
  40850c:	ldr	x2, [sp, #128]
  408510:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  408514:	ldr	x0, [x0, #1392]
  408518:	add	x1, x1, #0xd30
  40851c:	bl	407c40 <nftw@plt+0x50c0>
  408520:	mov	w0, #0x4                   	// #4
  408524:	bl	402520 <exit@plt>
  408528:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40852c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  408530:	add	x2, x2, #0xd68
  408534:	add	x0, x0, #0xcd8
  408538:	mov	w1, #0x323                 	// #803
  40853c:	stp	x23, x24, [sp, #48]
  408540:	stp	x25, x26, [sp, #64]
  408544:	bl	402bf0 <nftw@plt+0x70>
  408548:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40854c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  408550:	add	x2, x2, #0xd68
  408554:	add	x0, x0, #0xcd8
  408558:	mov	w1, #0x322                 	// #802
  40855c:	stp	x23, x24, [sp, #48]
  408560:	stp	x25, x26, [sp, #64]
  408564:	bl	402bf0 <nftw@plt+0x70>
  408568:	stp	x29, x30, [sp, #-112]!
  40856c:	mov	x5, x3
  408570:	cmp	w4, #0xb
  408574:	mov	x29, sp
  408578:	stp	x19, x20, [sp, #16]
  40857c:	mov	x3, x0
  408580:	mov	w20, w1
  408584:	str	x21, [sp, #32]
  408588:	mov	x1, x2
  40858c:	mov	x2, x5
  408590:	b.ne	4085e0 <nftw@plt+0x5a60>  // b.any
  408594:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408598:	mov	w5, #0x6                   	// #6
  40859c:	add	x21, sp, #0x30
  4085a0:	mov	w4, #0x4                   	// #4
  4085a4:	ldr	x6, [x19, #920]
  4085a8:	mov	x0, x21
  4085ac:	ldrb	w6, [x6, #123]
  4085b0:	cmp	w6, #0x0
  4085b4:	csel	w4, w5, w4, ne  // ne = any
  4085b8:	bl	409038 <nftw@plt+0x64b8>
  4085bc:	ldr	x0, [x19, #920]
  4085c0:	ldr	w1, [x0, #124]
  4085c4:	str	w1, [sp, #108]
  4085c8:	mov	x1, x21
  4085cc:	bl	407f80 <nftw@plt+0x5400>
  4085d0:	ldp	x19, x20, [sp, #16]
  4085d4:	ldr	x21, [sp, #32]
  4085d8:	ldp	x29, x30, [sp], #112
  4085dc:	ret
  4085e0:	mov	w19, w4
  4085e4:	add	x21, sp, #0x30
  4085e8:	mov	x0, x21
  4085ec:	sub	w19, w19, #0x6
  4085f0:	bl	409038 <nftw@plt+0x64b8>
  4085f4:	tst	w19, #0xfffffffb
  4085f8:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4085fc:	b.ne	408604 <nftw@plt+0x5a84>  // b.any
  408600:	str	w20, [sp, #108]
  408604:	ldr	x0, [x0, #920]
  408608:	mov	x1, x21
  40860c:	bl	407f80 <nftw@plt+0x5400>
  408610:	ldp	x19, x20, [sp, #16]
  408614:	ldr	x21, [sp, #32]
  408618:	ldp	x29, x30, [sp], #112
  40861c:	ret
  408620:	stp	x29, x30, [sp, #-416]!
  408624:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408628:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  40862c:	mov	x29, sp
  408630:	ldr	x8, [x8, #920]
  408634:	str	q0, [sp, #256]
  408638:	add	x11, sp, #0x180
  40863c:	str	q1, [sp, #272]
  408640:	mov	w10, #0xffffffe0            	// #-32
  408644:	mov	w9, #0xffffff80            	// #-128
  408648:	str	q2, [sp, #288]
  40864c:	str	q3, [sp, #304]
  408650:	str	q4, [sp, #320]
  408654:	str	q5, [sp, #336]
  408658:	str	q6, [sp, #352]
  40865c:	str	q7, [sp, #368]
  408660:	stp	x4, x5, [sp, #384]
  408664:	add	x4, sp, #0x1a0
  408668:	add	x5, sp, #0x1a0
  40866c:	stp	x6, x7, [sp, #400]
  408670:	stp	x4, x5, [sp, #56]
  408674:	ldr	w4, [x8, #240]
  408678:	stp	x19, x20, [sp, #16]
  40867c:	mov	w19, w2
  408680:	mov	w2, w1
  408684:	ldr	x1, [x12, #2296]
  408688:	add	w4, w4, #0x1
  40868c:	str	x21, [sp, #32]
  408690:	mov	x20, x3
  408694:	str	w4, [x8, #240]
  408698:	mov	w21, w0
  40869c:	mov	x3, #0x0                   	// #0
  4086a0:	add	x0, sp, #0x58
  4086a4:	str	x11, [sp, #72]
  4086a8:	stp	w10, w9, [sp, #80]
  4086ac:	bl	42d6d8 <nftw@plt+0x2ab58>
  4086b0:	mov	w4, w21
  4086b4:	mov	x2, x20
  4086b8:	mov	w1, w19
  4086bc:	add	x3, sp, #0x38
  4086c0:	add	x0, sp, #0x58
  4086c4:	bl	408568 <nftw@plt+0x59e8>
  4086c8:	mov	w19, w0
  4086cc:	add	x0, sp, #0x58
  4086d0:	bl	42cec0 <nftw@plt+0x2a340>
  4086d4:	add	x0, sp, #0x30
  4086d8:	bl	407ce8 <nftw@plt+0x5168>
  4086dc:	mov	w0, w19
  4086e0:	ldp	x19, x20, [sp, #16]
  4086e4:	ldr	x21, [sp, #32]
  4086e8:	ldp	x29, x30, [sp], #416
  4086ec:	ret
  4086f0:	stp	x29, x30, [sp, #-240]!
  4086f4:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4086f8:	mov	w12, w0
  4086fc:	mov	x29, sp
  408700:	ldr	x8, [x8, #920]
  408704:	str	q0, [sp, #80]
  408708:	add	x11, sp, #0xd0
  40870c:	str	q1, [sp, #96]
  408710:	mov	w9, w2
  408714:	mov	w10, #0xffffffe0            	// #-32
  408718:	str	q2, [sp, #112]
  40871c:	mov	x2, x3
  408720:	mov	x0, x1
  408724:	str	q3, [sp, #128]
  408728:	add	x3, sp, #0x30
  40872c:	mov	w1, w9
  408730:	str	q4, [sp, #144]
  408734:	mov	w9, #0xffffff80            	// #-128
  408738:	str	q5, [sp, #160]
  40873c:	str	q6, [sp, #176]
  408740:	str	q7, [sp, #192]
  408744:	stp	x4, x5, [sp, #208]
  408748:	add	x5, sp, #0xf0
  40874c:	mov	w4, w12
  408750:	stp	x6, x7, [sp, #224]
  408754:	add	x6, sp, #0xf0
  408758:	stp	x5, x6, [sp, #48]
  40875c:	ldr	w5, [x8, #240]
  408760:	str	x19, [sp, #16]
  408764:	add	w5, w5, #0x1
  408768:	str	w5, [x8, #240]
  40876c:	str	x11, [sp, #64]
  408770:	stp	w10, w9, [sp, #72]
  408774:	bl	408568 <nftw@plt+0x59e8>
  408778:	mov	w19, w0
  40877c:	add	x0, sp, #0x28
  408780:	bl	407ce8 <nftw@plt+0x5168>
  408784:	mov	w0, w19
  408788:	ldr	x19, [sp, #16]
  40878c:	ldp	x29, x30, [sp], #240
  408790:	ret
  408794:	nop
  408798:	stp	x29, x30, [sp, #-224]!
  40879c:	adrp	x6, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4087a0:	mov	w5, w1
  4087a4:	mov	x29, sp
  4087a8:	ldr	x1, [x6, #2296]
  4087ac:	stp	x19, x20, [sp, #16]
  4087b0:	mov	w19, w2
  4087b4:	mov	x20, x3
  4087b8:	mov	w2, w5
  4087bc:	mov	x3, #0x0                   	// #0
  4087c0:	stp	x21, x22, [sp, #32]
  4087c4:	mov	x21, x4
  4087c8:	mov	w22, w0
  4087cc:	add	x0, sp, #0x38
  4087d0:	bl	42d6d8 <nftw@plt+0x2ab58>
  4087d4:	mov	w4, w22
  4087d8:	mov	x3, x21
  4087dc:	mov	x2, x20
  4087e0:	mov	w1, w19
  4087e4:	add	x0, sp, #0x38
  4087e8:	bl	408568 <nftw@plt+0x59e8>
  4087ec:	mov	w19, w0
  4087f0:	add	x0, sp, #0x38
  4087f4:	bl	42cec0 <nftw@plt+0x2a340>
  4087f8:	mov	w0, w19
  4087fc:	ldp	x19, x20, [sp, #16]
  408800:	ldp	x21, x22, [sp, #32]
  408804:	ldp	x29, x30, [sp], #224
  408808:	ret
  40880c:	nop
  408810:	stp	x29, x30, [sp, #-416]!
  408814:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408818:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  40881c:	mov	x29, sp
  408820:	ldr	x8, [x8, #920]
  408824:	str	q0, [sp, #240]
  408828:	mov	w13, w0
  40882c:	str	q1, [sp, #256]
  408830:	add	x11, sp, #0x170
  408834:	mov	w10, #0xffffffd0            	// #-48
  408838:	str	q2, [sp, #272]
  40883c:	mov	w9, #0xffffff80            	// #-128
  408840:	add	x0, sp, #0x48
  408844:	str	q3, [sp, #288]
  408848:	str	q4, [sp, #304]
  40884c:	str	q5, [sp, #320]
  408850:	str	q6, [sp, #336]
  408854:	str	q7, [sp, #352]
  408858:	stp	x2, x3, [sp, #368]
  40885c:	mov	w2, w13
  408860:	mov	x3, #0x0                   	// #0
  408864:	stp	x4, x5, [sp, #384]
  408868:	add	x4, sp, #0x1a0
  40886c:	add	x5, sp, #0x1a0
  408870:	stp	x6, x7, [sp, #400]
  408874:	stp	x4, x5, [sp, #40]
  408878:	ldr	w4, [x8, #240]
  40887c:	str	x19, [sp, #16]
  408880:	mov	x19, x1
  408884:	ldr	x1, [x12, #2296]
  408888:	add	w4, w4, #0x1
  40888c:	str	w4, [x8, #240]
  408890:	str	x11, [sp, #56]
  408894:	stp	w10, w9, [sp, #64]
  408898:	bl	42d6d8 <nftw@plt+0x2ab58>
  40889c:	mov	x2, x19
  4088a0:	add	x3, sp, #0x28
  4088a4:	mov	w4, #0x8                   	// #8
  4088a8:	mov	w1, #0xffffffff            	// #-1
  4088ac:	add	x0, sp, #0x48
  4088b0:	bl	408568 <nftw@plt+0x59e8>
  4088b4:	add	x0, sp, #0x48
  4088b8:	bl	42cec0 <nftw@plt+0x2a340>
  4088bc:	add	x0, sp, #0x20
  4088c0:	bl	407ce8 <nftw@plt+0x5168>
  4088c4:	ldr	x19, [sp, #16]
  4088c8:	ldp	x29, x30, [sp], #416
  4088cc:	ret
  4088d0:	stp	x29, x30, [sp, #-416]!
  4088d4:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4088d8:	adrp	x13, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4088dc:	mov	x29, sp
  4088e0:	ldr	x8, [x8, #920]
  4088e4:	str	q0, [sp, #240]
  4088e8:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4088ec:	str	q1, [sp, #256]
  4088f0:	add	x11, sp, #0x170
  4088f4:	mov	w10, #0xffffffd0            	// #-48
  4088f8:	str	q2, [sp, #272]
  4088fc:	mov	w9, #0xffffff80            	// #-128
  408900:	str	q3, [sp, #288]
  408904:	str	q4, [sp, #304]
  408908:	str	q5, [sp, #320]
  40890c:	str	q6, [sp, #336]
  408910:	str	q7, [sp, #352]
  408914:	stp	x2, x3, [sp, #368]
  408918:	mov	x3, #0x0                   	// #0
  40891c:	ldr	w2, [x13, #2320]
  408920:	stp	x4, x5, [sp, #384]
  408924:	add	x4, sp, #0x1a0
  408928:	add	x5, sp, #0x1a0
  40892c:	stp	x6, x7, [sp, #400]
  408930:	stp	x4, x5, [sp, #40]
  408934:	ldr	w4, [x8, #240]
  408938:	stp	x19, x20, [sp, #16]
  40893c:	mov	x20, x1
  408940:	add	w4, w4, #0x1
  408944:	ldr	x1, [x12, #2296]
  408948:	str	w4, [x8, #240]
  40894c:	mov	w19, w0
  408950:	add	x0, sp, #0x48
  408954:	str	x11, [sp, #56]
  408958:	stp	w10, w9, [sp, #64]
  40895c:	bl	42d6d8 <nftw@plt+0x2ab58>
  408960:	mov	x2, x20
  408964:	mov	w1, w19
  408968:	add	x3, sp, #0x28
  40896c:	mov	w4, #0x6                   	// #6
  408970:	add	x0, sp, #0x48
  408974:	bl	408568 <nftw@plt+0x59e8>
  408978:	mov	w19, w0
  40897c:	add	x0, sp, #0x48
  408980:	bl	42cec0 <nftw@plt+0x2a340>
  408984:	add	x0, sp, #0x20
  408988:	bl	407ce8 <nftw@plt+0x5168>
  40898c:	mov	w0, w19
  408990:	ldp	x19, x20, [sp, #16]
  408994:	ldp	x29, x30, [sp], #416
  408998:	ret
  40899c:	nop
  4089a0:	stp	x29, x30, [sp, #-416]!
  4089a4:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4089a8:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4089ac:	mov	x29, sp
  4089b0:	ldr	x8, [x8, #920]
  4089b4:	str	q0, [sp, #240]
  4089b8:	add	x11, sp, #0x170
  4089bc:	str	q1, [sp, #256]
  4089c0:	mov	w10, #0xffffffd8            	// #-40
  4089c4:	mov	w9, #0xffffff80            	// #-128
  4089c8:	str	q2, [sp, #272]
  4089cc:	str	q3, [sp, #288]
  4089d0:	str	q4, [sp, #304]
  4089d4:	str	q5, [sp, #320]
  4089d8:	str	q6, [sp, #336]
  4089dc:	str	q7, [sp, #352]
  4089e0:	stp	x3, x4, [sp, #376]
  4089e4:	add	x4, sp, #0x1a0
  4089e8:	mov	x3, #0x0                   	// #0
  4089ec:	stp	x5, x6, [sp, #392]
  4089f0:	add	x5, sp, #0x1a0
  4089f4:	str	x7, [sp, #408]
  4089f8:	stp	x4, x5, [sp, #40]
  4089fc:	ldr	w4, [x8, #240]
  408a00:	stp	x19, x20, [sp, #16]
  408a04:	mov	w19, w1
  408a08:	add	w4, w4, #0x1
  408a0c:	ldr	x1, [x12, #2296]
  408a10:	str	w4, [x8, #240]
  408a14:	mov	x20, x2
  408a18:	mov	w2, w0
  408a1c:	add	x0, sp, #0x48
  408a20:	str	x11, [sp, #56]
  408a24:	stp	w10, w9, [sp, #64]
  408a28:	bl	42d6d8 <nftw@plt+0x2ab58>
  408a2c:	mov	x2, x20
  408a30:	mov	w1, w19
  408a34:	add	x3, sp, #0x28
  408a38:	mov	w4, #0x6                   	// #6
  408a3c:	add	x0, sp, #0x48
  408a40:	bl	408568 <nftw@plt+0x59e8>
  408a44:	mov	w19, w0
  408a48:	add	x0, sp, #0x48
  408a4c:	bl	42cec0 <nftw@plt+0x2a340>
  408a50:	add	x0, sp, #0x20
  408a54:	bl	407ce8 <nftw@plt+0x5168>
  408a58:	mov	w0, w19
  408a5c:	ldp	x19, x20, [sp, #16]
  408a60:	ldp	x29, x30, [sp], #416
  408a64:	ret
  408a68:	stp	x29, x30, [sp, #-416]!
  408a6c:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408a70:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408a74:	mov	x29, sp
  408a78:	ldr	x8, [x8, #920]
  408a7c:	str	q0, [sp, #240]
  408a80:	add	x11, sp, #0x170
  408a84:	str	q1, [sp, #256]
  408a88:	mov	w10, #0xffffffd8            	// #-40
  408a8c:	mov	w9, #0xffffff80            	// #-128
  408a90:	str	q2, [sp, #272]
  408a94:	str	q3, [sp, #288]
  408a98:	str	q4, [sp, #304]
  408a9c:	str	q5, [sp, #320]
  408aa0:	str	q6, [sp, #336]
  408aa4:	str	q7, [sp, #352]
  408aa8:	stp	x3, x4, [sp, #376]
  408aac:	add	x4, sp, #0x1a0
  408ab0:	mov	x3, #0x0                   	// #0
  408ab4:	stp	x5, x6, [sp, #392]
  408ab8:	add	x5, sp, #0x1a0
  408abc:	str	x7, [sp, #408]
  408ac0:	stp	x4, x5, [sp, #40]
  408ac4:	ldr	w4, [x8, #240]
  408ac8:	stp	x19, x20, [sp, #16]
  408acc:	mov	w19, w1
  408ad0:	add	w4, w4, #0x1
  408ad4:	ldr	x1, [x12, #2296]
  408ad8:	str	w4, [x8, #240]
  408adc:	mov	x20, x2
  408ae0:	mov	w2, w0
  408ae4:	add	x0, sp, #0x48
  408ae8:	str	x11, [sp, #56]
  408aec:	stp	w10, w9, [sp, #64]
  408af0:	bl	42d6d8 <nftw@plt+0x2ab58>
  408af4:	mov	x2, x20
  408af8:	mov	w1, w19
  408afc:	add	x3, sp, #0x28
  408b00:	mov	w4, #0xa                   	// #10
  408b04:	add	x0, sp, #0x48
  408b08:	bl	408568 <nftw@plt+0x59e8>
  408b0c:	mov	w19, w0
  408b10:	add	x0, sp, #0x48
  408b14:	bl	42cec0 <nftw@plt+0x2a340>
  408b18:	add	x0, sp, #0x20
  408b1c:	bl	407ce8 <nftw@plt+0x5168>
  408b20:	mov	w0, w19
  408b24:	ldp	x19, x20, [sp, #16]
  408b28:	ldp	x29, x30, [sp], #416
  408b2c:	ret
  408b30:	stp	x29, x30, [sp, #-416]!
  408b34:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408b38:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408b3c:	mov	x29, sp
  408b40:	ldr	x8, [x8, #920]
  408b44:	str	q0, [sp, #240]
  408b48:	mov	w13, w0
  408b4c:	str	q1, [sp, #256]
  408b50:	add	x11, sp, #0x170
  408b54:	mov	w10, #0xffffffd0            	// #-48
  408b58:	str	q2, [sp, #272]
  408b5c:	mov	w9, #0xffffff80            	// #-128
  408b60:	add	x0, sp, #0x48
  408b64:	str	q3, [sp, #288]
  408b68:	str	q4, [sp, #304]
  408b6c:	str	q5, [sp, #320]
  408b70:	str	q6, [sp, #336]
  408b74:	str	q7, [sp, #352]
  408b78:	stp	x2, x3, [sp, #368]
  408b7c:	mov	w2, w13
  408b80:	mov	x3, #0x0                   	// #0
  408b84:	stp	x4, x5, [sp, #384]
  408b88:	add	x4, sp, #0x1a0
  408b8c:	add	x5, sp, #0x1a0
  408b90:	stp	x6, x7, [sp, #400]
  408b94:	stp	x4, x5, [sp, #40]
  408b98:	ldr	w4, [x8, #240]
  408b9c:	str	x19, [sp, #16]
  408ba0:	mov	x19, x1
  408ba4:	ldr	x1, [x12, #2296]
  408ba8:	add	w4, w4, #0x1
  408bac:	str	w4, [x8, #240]
  408bb0:	str	x11, [sp, #56]
  408bb4:	stp	w10, w9, [sp, #64]
  408bb8:	bl	42d6d8 <nftw@plt+0x2ab58>
  408bbc:	mov	x2, x19
  408bc0:	add	x3, sp, #0x28
  408bc4:	mov	w4, #0xb                   	// #11
  408bc8:	mov	w1, #0xffffffff            	// #-1
  408bcc:	add	x0, sp, #0x48
  408bd0:	bl	408568 <nftw@plt+0x59e8>
  408bd4:	mov	w19, w0
  408bd8:	add	x0, sp, #0x48
  408bdc:	bl	42cec0 <nftw@plt+0x2a340>
  408be0:	add	x0, sp, #0x20
  408be4:	bl	407ce8 <nftw@plt+0x5168>
  408be8:	mov	w0, w19
  408bec:	ldr	x19, [sp, #16]
  408bf0:	ldp	x29, x30, [sp], #416
  408bf4:	ret
  408bf8:	stp	x29, x30, [sp, #-432]!
  408bfc:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408c00:	adrp	x13, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408c04:	mov	x29, sp
  408c08:	ldr	x8, [x8, #920]
  408c0c:	str	q0, [sp, #240]
  408c10:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408c14:	str	q1, [sp, #256]
  408c18:	add	x11, sp, #0x170
  408c1c:	mov	w10, #0xffffffc8            	// #-56
  408c20:	str	q2, [sp, #272]
  408c24:	mov	w9, #0xffffff80            	// #-128
  408c28:	str	q3, [sp, #288]
  408c2c:	str	q4, [sp, #304]
  408c30:	str	q5, [sp, #320]
  408c34:	str	q6, [sp, #336]
  408c38:	str	q7, [sp, #352]
  408c3c:	stp	x1, x2, [sp, #376]
  408c40:	ldr	w2, [x13, #2320]
  408c44:	stp	x3, x4, [sp, #392]
  408c48:	add	x4, sp, #0x1b0
  408c4c:	mov	x3, #0x0                   	// #0
  408c50:	stp	x5, x6, [sp, #408]
  408c54:	add	x5, sp, #0x1b0
  408c58:	str	x7, [sp, #424]
  408c5c:	stp	x4, x5, [sp, #40]
  408c60:	ldr	w4, [x8, #240]
  408c64:	ldr	x1, [x12, #2296]
  408c68:	add	w4, w4, #0x1
  408c6c:	str	x19, [sp, #16]
  408c70:	mov	x19, x0
  408c74:	str	w4, [x8, #240]
  408c78:	add	x0, sp, #0x48
  408c7c:	str	x11, [sp, #56]
  408c80:	stp	w10, w9, [sp, #64]
  408c84:	bl	42d6d8 <nftw@plt+0x2ab58>
  408c88:	mov	x2, x19
  408c8c:	add	x3, sp, #0x28
  408c90:	mov	w4, #0x4                   	// #4
  408c94:	mov	w1, #0xffffffff            	// #-1
  408c98:	add	x0, sp, #0x48
  408c9c:	bl	408568 <nftw@plt+0x59e8>
  408ca0:	add	x0, sp, #0x48
  408ca4:	bl	42cec0 <nftw@plt+0x2a340>
  408ca8:	add	x0, sp, #0x20
  408cac:	bl	407ce8 <nftw@plt+0x5168>
  408cb0:	ldr	x19, [sp, #16]
  408cb4:	ldp	x29, x30, [sp], #432
  408cb8:	ret
  408cbc:	nop
  408cc0:	stp	x29, x30, [sp, #-416]!
  408cc4:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408cc8:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408ccc:	mov	x29, sp
  408cd0:	ldr	x8, [x8, #920]
  408cd4:	str	q0, [sp, #240]
  408cd8:	mov	w13, w0
  408cdc:	str	q1, [sp, #256]
  408ce0:	add	x11, sp, #0x170
  408ce4:	mov	w10, #0xffffffd0            	// #-48
  408ce8:	str	q2, [sp, #272]
  408cec:	mov	w9, #0xffffff80            	// #-128
  408cf0:	add	x0, sp, #0x48
  408cf4:	str	q3, [sp, #288]
  408cf8:	str	q4, [sp, #304]
  408cfc:	str	q5, [sp, #320]
  408d00:	str	q6, [sp, #336]
  408d04:	str	q7, [sp, #352]
  408d08:	stp	x2, x3, [sp, #368]
  408d0c:	mov	w2, w13
  408d10:	mov	x3, #0x0                   	// #0
  408d14:	stp	x4, x5, [sp, #384]
  408d18:	add	x4, sp, #0x1a0
  408d1c:	add	x5, sp, #0x1a0
  408d20:	stp	x6, x7, [sp, #400]
  408d24:	stp	x4, x5, [sp, #40]
  408d28:	ldr	w4, [x8, #240]
  408d2c:	str	x19, [sp, #16]
  408d30:	mov	x19, x1
  408d34:	ldr	x1, [x12, #2296]
  408d38:	add	w4, w4, #0x1
  408d3c:	str	w4, [x8, #240]
  408d40:	str	x11, [sp, #56]
  408d44:	stp	w10, w9, [sp, #64]
  408d48:	bl	42d6d8 <nftw@plt+0x2ab58>
  408d4c:	mov	x2, x19
  408d50:	add	x3, sp, #0x28
  408d54:	mov	w4, #0x4                   	// #4
  408d58:	mov	w1, #0xffffffff            	// #-1
  408d5c:	add	x0, sp, #0x48
  408d60:	bl	408568 <nftw@plt+0x59e8>
  408d64:	add	x0, sp, #0x48
  408d68:	bl	42cec0 <nftw@plt+0x2a340>
  408d6c:	add	x0, sp, #0x20
  408d70:	bl	407ce8 <nftw@plt+0x5168>
  408d74:	ldr	x19, [sp, #16]
  408d78:	ldp	x29, x30, [sp], #416
  408d7c:	ret
  408d80:	stp	x29, x30, [sp, #-432]!
  408d84:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408d88:	adrp	x13, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408d8c:	mov	x29, sp
  408d90:	ldr	x8, [x8, #920]
  408d94:	str	q0, [sp, #240]
  408d98:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408d9c:	str	q1, [sp, #256]
  408da0:	add	x11, sp, #0x170
  408da4:	mov	w10, #0xffffffc8            	// #-56
  408da8:	str	q2, [sp, #272]
  408dac:	mov	w9, #0xffffff80            	// #-128
  408db0:	str	q3, [sp, #288]
  408db4:	str	q4, [sp, #304]
  408db8:	str	q5, [sp, #320]
  408dbc:	str	q6, [sp, #336]
  408dc0:	str	q7, [sp, #352]
  408dc4:	stp	x1, x2, [sp, #376]
  408dc8:	ldr	w2, [x13, #2320]
  408dcc:	stp	x3, x4, [sp, #392]
  408dd0:	add	x4, sp, #0x1b0
  408dd4:	mov	x3, #0x0                   	// #0
  408dd8:	stp	x5, x6, [sp, #408]
  408ddc:	add	x5, sp, #0x1b0
  408de0:	str	x7, [sp, #424]
  408de4:	stp	x4, x5, [sp, #40]
  408de8:	ldr	w4, [x8, #240]
  408dec:	ldr	x1, [x12, #2296]
  408df0:	add	w4, w4, #0x1
  408df4:	str	x19, [sp, #16]
  408df8:	mov	x19, x0
  408dfc:	str	w4, [x8, #240]
  408e00:	add	x0, sp, #0x48
  408e04:	str	x11, [sp, #56]
  408e08:	stp	w10, w9, [sp, #64]
  408e0c:	bl	42d6d8 <nftw@plt+0x2ab58>
  408e10:	mov	x2, x19
  408e14:	add	x3, sp, #0x28
  408e18:	mov	w4, #0x5                   	// #5
  408e1c:	mov	w1, #0xffffffff            	// #-1
  408e20:	add	x0, sp, #0x48
  408e24:	bl	408568 <nftw@plt+0x59e8>
  408e28:	add	x0, sp, #0x48
  408e2c:	bl	42cec0 <nftw@plt+0x2a340>
  408e30:	add	x0, sp, #0x20
  408e34:	bl	407ce8 <nftw@plt+0x5168>
  408e38:	ldr	x19, [sp, #16]
  408e3c:	ldp	x29, x30, [sp], #432
  408e40:	ret
  408e44:	nop
  408e48:	stp	x29, x30, [sp, #-416]!
  408e4c:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408e50:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408e54:	mov	x29, sp
  408e58:	ldr	x8, [x8, #920]
  408e5c:	str	q0, [sp, #240]
  408e60:	mov	w13, w0
  408e64:	str	q1, [sp, #256]
  408e68:	add	x11, sp, #0x170
  408e6c:	mov	w10, #0xffffffd0            	// #-48
  408e70:	str	q2, [sp, #272]
  408e74:	mov	w9, #0xffffff80            	// #-128
  408e78:	add	x0, sp, #0x48
  408e7c:	str	q3, [sp, #288]
  408e80:	str	q4, [sp, #304]
  408e84:	str	q5, [sp, #320]
  408e88:	str	q6, [sp, #336]
  408e8c:	str	q7, [sp, #352]
  408e90:	stp	x2, x3, [sp, #368]
  408e94:	mov	w2, w13
  408e98:	mov	x3, #0x0                   	// #0
  408e9c:	stp	x4, x5, [sp, #384]
  408ea0:	add	x4, sp, #0x1a0
  408ea4:	add	x5, sp, #0x1a0
  408ea8:	stp	x6, x7, [sp, #400]
  408eac:	stp	x4, x5, [sp, #40]
  408eb0:	ldr	w4, [x8, #240]
  408eb4:	str	x19, [sp, #16]
  408eb8:	mov	x19, x1
  408ebc:	ldr	x1, [x12, #2296]
  408ec0:	add	w4, w4, #0x1
  408ec4:	str	w4, [x8, #240]
  408ec8:	str	x11, [sp, #56]
  408ecc:	stp	w10, w9, [sp, #64]
  408ed0:	bl	42d6d8 <nftw@plt+0x2ab58>
  408ed4:	mov	x2, x19
  408ed8:	add	x3, sp, #0x28
  408edc:	mov	w4, #0x5                   	// #5
  408ee0:	mov	w1, #0xffffffff            	// #-1
  408ee4:	add	x0, sp, #0x48
  408ee8:	bl	408568 <nftw@plt+0x59e8>
  408eec:	add	x0, sp, #0x48
  408ef0:	bl	42cec0 <nftw@plt+0x2a340>
  408ef4:	add	x0, sp, #0x20
  408ef8:	bl	407ce8 <nftw@plt+0x5168>
  408efc:	ldr	x19, [sp, #16]
  408f00:	ldp	x29, x30, [sp], #416
  408f04:	ret
  408f08:	stp	x29, x30, [sp, #-432]!
  408f0c:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  408f10:	adrp	x13, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408f14:	mov	x29, sp
  408f18:	ldr	x8, [x8, #920]
  408f1c:	str	q0, [sp, #240]
  408f20:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  408f24:	str	q1, [sp, #256]
  408f28:	add	x11, sp, #0x170
  408f2c:	mov	w10, #0xffffffc8            	// #-56
  408f30:	str	q2, [sp, #272]
  408f34:	mov	w9, #0xffffff80            	// #-128
  408f38:	str	q3, [sp, #288]
  408f3c:	str	q4, [sp, #304]
  408f40:	str	q5, [sp, #320]
  408f44:	str	q6, [sp, #336]
  408f48:	str	q7, [sp, #352]
  408f4c:	stp	x1, x2, [sp, #376]
  408f50:	ldr	w2, [x13, #2320]
  408f54:	stp	x3, x4, [sp, #392]
  408f58:	add	x4, sp, #0x1b0
  408f5c:	mov	x3, #0x0                   	// #0
  408f60:	stp	x5, x6, [sp, #408]
  408f64:	add	x5, sp, #0x1b0
  408f68:	str	x7, [sp, #424]
  408f6c:	stp	x4, x5, [sp, #40]
  408f70:	ldr	w4, [x8, #240]
  408f74:	ldr	x1, [x12, #2296]
  408f78:	add	w4, w4, #0x1
  408f7c:	str	x19, [sp, #16]
  408f80:	mov	x19, x0
  408f84:	str	w4, [x8, #240]
  408f88:	add	x0, sp, #0x48
  408f8c:	str	x11, [sp, #56]
  408f90:	stp	w10, w9, [sp, #64]
  408f94:	bl	42d6d8 <nftw@plt+0x2ab58>
  408f98:	add	x3, sp, #0x28
  408f9c:	mov	w4, #0x3                   	// #3
  408fa0:	mov	x2, x19
  408fa4:	mov	w1, #0xffffffff            	// #-1
  408fa8:	add	x0, sp, #0x48
  408fac:	bl	408568 <nftw@plt+0x59e8>
  408fb0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  408fb4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  408fb8:	add	x2, x2, #0xd98
  408fbc:	add	x0, x0, #0xcd8
  408fc0:	mov	w1, #0x607                 	// #1543
  408fc4:	bl	402bf0 <nftw@plt+0x70>
  408fc8:	stp	x29, x30, [sp, #-64]!
  408fcc:	mov	x29, sp
  408fd0:	stp	x19, x20, [sp, #16]
  408fd4:	stp	x21, x22, [sp, #32]
  408fd8:	str	x23, [sp, #48]
  408fdc:	cbz	x3, 409020 <nftw@plt+0x64a0>
  408fe0:	mov	x19, x0
  408fe4:	mov	x23, x1
  408fe8:	mov	x22, x2
  408fec:	mov	x20, x3
  408ff0:	mov	w21, w4
  408ff4:	bl	402aa0 <__errno_location@plt>
  408ff8:	ldr	w0, [x0]
  408ffc:	stp	x23, x22, [x19]
  409000:	str	w0, [x19, #16]
  409004:	stp	x20, x20, [x19, #32]
  409008:	stp	w21, wzr, [x19, #56]
  40900c:	ldp	x19, x20, [sp, #16]
  409010:	ldp	x21, x22, [sp, #32]
  409014:	ldr	x23, [sp, #48]
  409018:	ldp	x29, x30, [sp], #64
  40901c:	ret
  409020:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409024:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409028:	add	x2, x2, #0xdb8
  40902c:	add	x0, x0, #0xcd8
  409030:	mov	w1, #0x112                 	// #274
  409034:	bl	402bf0 <nftw@plt+0x70>
  409038:	stp	x29, x30, [sp, #-48]!
  40903c:	mov	x29, sp
  409040:	stp	x19, x20, [sp, #16]
  409044:	stp	x21, x22, [sp, #32]
  409048:	cbz	x3, 409088 <nftw@plt+0x6508>
  40904c:	mov	x20, x0
  409050:	mov	x21, x2
  409054:	mov	x19, x3
  409058:	mov	w22, w4
  40905c:	mov	x0, x1
  409060:	bl	402b10 <gettext@plt>
  409064:	mov	w4, w22
  409068:	mov	x3, x19
  40906c:	mov	x2, x21
  409070:	mov	x1, x0
  409074:	mov	x0, x20
  409078:	ldp	x19, x20, [sp, #16]
  40907c:	ldp	x21, x22, [sp, #32]
  409080:	ldp	x29, x30, [sp], #48
  409084:	b	408fc8 <nftw@plt+0x6448>
  409088:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40908c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409090:	add	x2, x2, #0xdd8
  409094:	add	x0, x0, #0xcd8
  409098:	mov	w1, #0x123                 	// #291
  40909c:	bl	402bf0 <nftw@plt+0x70>
  4090a0:	stp	x29, x30, [sp, #-96]!
  4090a4:	mov	x29, sp
  4090a8:	stp	x19, x20, [sp, #16]
  4090ac:	mov	x20, x0
  4090b0:	ldr	w0, [x1, #56]
  4090b4:	stp	x21, x22, [sp, #32]
  4090b8:	cmp	w0, #0xd
  4090bc:	stp	x23, x24, [sp, #48]
  4090c0:	b.gt	409198 <nftw@plt+0x6618>
  4090c4:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4090c8:	add	x19, x19, #0xfe0
  4090cc:	mov	x21, x1
  4090d0:	add	x1, x19, #0xb0
  4090d4:	add	x19, x19, #0x20
  4090d8:	ldr	x0, [x1, w0, sxtw #3]
  4090dc:	bl	402b10 <gettext@plt>
  4090e0:	mov	x23, x0
  4090e4:	ldrsw	x1, [x21, #56]
  4090e8:	ldr	x19, [x19, x1, lsl #3]
  4090ec:	cbz	x19, 409188 <nftw@plt+0x6608>
  4090f0:	mov	x0, x19
  4090f4:	bl	4024f0 <strlen@plt>
  4090f8:	ldr	x22, [x20]
  4090fc:	mov	x2, x0
  409100:	mov	x1, x19
  409104:	ldrb	w0, [x22, #67]
  409108:	bl	40a030 <nftw@plt+0x74b0>
  40910c:	mov	x24, x0
  409110:	ldrb	w0, [x22, #67]
  409114:	bl	40a0c0 <nftw@plt+0x7540>
  409118:	mov	x22, x0
  40911c:	ldr	x0, [x21, #40]
  409120:	add	x8, sp, #0x40
  409124:	mov	w1, #0x0                   	// #0
  409128:	bl	42cfc0 <nftw@plt+0x2a440>
  40912c:	mov	x1, x20
  409130:	ldp	w3, w4, [sp, #72]
  409134:	ldr	x2, [sp, #64]
  409138:	ldr	x0, [x1], #121
  40913c:	bl	4072b8 <nftw@plt+0x4738>
  409140:	mov	x1, x0
  409144:	mov	x4, x22
  409148:	mov	x3, x23
  40914c:	mov	x2, x24
  409150:	mov	x19, x0
  409154:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409158:	add	x0, x0, #0xe08
  40915c:	bl	407240 <nftw@plt+0x46c0>
  409160:	mov	x1, x0
  409164:	mov	x0, x19
  409168:	mov	x19, x1
  40916c:	bl	402910 <free@plt>
  409170:	mov	x0, x19
  409174:	ldp	x19, x20, [sp, #16]
  409178:	ldp	x21, x22, [sp, #32]
  40917c:	ldp	x23, x24, [sp, #48]
  409180:	ldp	x29, x30, [sp], #96
  409184:	ret
  409188:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x105a0>
  40918c:	add	x22, x22, #0xbd0
  409190:	mov	x24, x22
  409194:	b	40911c <nftw@plt+0x659c>
  409198:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40919c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4091a0:	add	x2, x2, #0xdf0
  4091a4:	add	x0, x0, #0xcd8
  4091a8:	mov	w1, #0x16a                 	// #362
  4091ac:	bl	402bf0 <nftw@plt+0x70>
  4091b0:	stp	x29, x30, [sp, #-48]!
  4091b4:	mov	x29, sp
  4091b8:	stp	x19, x20, [sp, #16]
  4091bc:	mov	x19, x0
  4091c0:	mov	x20, x1
  4091c4:	mov	x0, x1
  4091c8:	mov	w1, #0x0                   	// #0
  4091cc:	str	x21, [sp, #32]
  4091d0:	bl	40ee30 <nftw@plt+0xc2b0>
  4091d4:	mov	w1, w0
  4091d8:	mov	x0, x19
  4091dc:	bl	407688 <nftw@plt+0x4b08>
  4091e0:	ldr	x21, [x19]
  4091e4:	mov	x1, x20
  4091e8:	mov	x0, x19
  4091ec:	bl	4090a0 <nftw@plt+0x6520>
  4091f0:	mov	x1, x0
  4091f4:	mov	x0, x21
  4091f8:	ldp	x19, x20, [sp, #16]
  4091fc:	ldr	x21, [sp, #32]
  409200:	ldp	x29, x30, [sp], #48
  409204:	b	40f1f0 <nftw@plt+0xc670>
  409208:	stp	x29, x30, [sp, #-496]!
  40920c:	adrp	x9, 48d000 <__environ@@GLIBC_2.17+0xa68>
  409210:	mov	w8, w1
  409214:	mov	x29, sp
  409218:	ldr	x1, [x9, #2296]
  40921c:	stp	x19, x20, [sp, #16]
  409220:	mov	x20, x2
  409224:	mov	x19, x0
  409228:	mov	w2, w8
  40922c:	add	x0, sp, #0x98
  409230:	str	q0, [sp, #320]
  409234:	str	q1, [sp, #336]
  409238:	str	q2, [sp, #352]
  40923c:	str	q3, [sp, #368]
  409240:	str	q4, [sp, #384]
  409244:	str	q5, [sp, #400]
  409248:	str	q6, [sp, #416]
  40924c:	str	q7, [sp, #432]
  409250:	stp	x3, x4, [sp, #456]
  409254:	mov	x3, #0x0                   	// #0
  409258:	stp	x5, x6, [sp, #472]
  40925c:	str	x7, [sp, #488]
  409260:	bl	42d6d8 <nftw@plt+0x2ab58>
  409264:	add	x3, sp, #0x1c0
  409268:	add	x4, sp, #0x1f0
  40926c:	mov	w2, #0xffffffd8            	// #-40
  409270:	mov	w1, #0xffffff80            	// #-128
  409274:	mov	x0, x20
  409278:	stp	x4, x4, [sp, #56]
  40927c:	str	x3, [sp, #72]
  409280:	stp	w2, w1, [sp, #80]
  409284:	bl	402b10 <gettext@plt>
  409288:	add	x3, sp, #0x98
  40928c:	mov	x1, x0
  409290:	add	x2, sp, #0x38
  409294:	add	x0, sp, #0x58
  409298:	mov	w4, #0x8                   	// #8
  40929c:	bl	408fc8 <nftw@plt+0x6448>
  4092a0:	ldrb	w0, [x19, #220]
  4092a4:	cbnz	w0, 409324 <nftw@plt+0x67a4>
  4092a8:	ldr	x0, [x19]
  4092ac:	str	x21, [sp, #32]
  4092b0:	bl	40f230 <nftw@plt+0xc6b0>
  4092b4:	mov	x20, x0
  4092b8:	ldr	x21, [x19]
  4092bc:	add	x1, sp, #0x58
  4092c0:	mov	x0, x19
  4092c4:	bl	4090a0 <nftw@plt+0x6520>
  4092c8:	mov	x1, x0
  4092cc:	mov	x0, x21
  4092d0:	bl	40f1f0 <nftw@plt+0xc670>
  4092d4:	ldr	x0, [x19]
  4092d8:	add	x1, sp, #0x58
  4092dc:	bl	40fc78 <nftw@plt+0xd0f8>
  4092e0:	ldr	x0, [x19]
  4092e4:	bl	40f9f8 <nftw@plt+0xce78>
  4092e8:	ldr	x0, [x19]
  4092ec:	bl	40f240 <nftw@plt+0xc6c0>
  4092f0:	ldr	x0, [x19]
  4092f4:	mov	x1, x20
  4092f8:	bl	40f1f0 <nftw@plt+0xc670>
  4092fc:	add	x1, sp, #0x98
  409300:	mov	w2, #0x8                   	// #8
  409304:	mov	x0, x19
  409308:	bl	40bb68 <nftw@plt+0x8fe8>
  40930c:	add	x0, sp, #0x98
  409310:	bl	42cec0 <nftw@plt+0x2a340>
  409314:	ldp	x19, x20, [sp, #16]
  409318:	ldr	x21, [sp, #32]
  40931c:	ldp	x29, x30, [sp], #496
  409320:	ret
  409324:	add	x0, sp, #0x98
  409328:	bl	42cec0 <nftw@plt+0x2a340>
  40932c:	ldp	x19, x20, [sp, #16]
  409330:	ldp	x29, x30, [sp], #496
  409334:	ret
  409338:	stp	x29, x30, [sp, #-64]!
  40933c:	mov	x29, sp
  409340:	stp	x19, x20, [sp, #16]
  409344:	cbz	x0, 409448 <nftw@plt+0x68c8>
  409348:	mov	x19, x1
  40934c:	cbz	x1, 409468 <nftw@plt+0x68e8>
  409350:	mov	w1, #0x22                  	// #34
  409354:	mov	x20, x0
  409358:	bl	40f3e8 <nftw@plt+0xc868>
  40935c:	ldrb	w1, [x19]
  409360:	cbz	w1, 4093d8 <nftw@plt+0x6858>
  409364:	stp	x21, x22, [sp, #32]
  409368:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40936c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x205a0>
  409370:	add	x22, x22, #0xe48
  409374:	add	x21, x21, #0x248
  409378:	str	x23, [sp, #48]
  40937c:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409380:	b	4093a4 <nftw@plt+0x6824>
  409384:	cmp	w1, #0xa
  409388:	b.ne	409418 <nftw@plt+0x6898>  // b.any
  40938c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409390:	mov	x0, x20
  409394:	add	x1, x1, #0xe40
  409398:	bl	40f9a8 <nftw@plt+0xce28>
  40939c:	ldrb	w1, [x19, #1]!
  4093a0:	cbz	w1, 4093d0 <nftw@plt+0x6850>
  4093a4:	cmp	w1, #0x22
  4093a8:	b.eq	409408 <nftw@plt+0x6888>  // b.none
  4093ac:	b.hi	4093ec <nftw@plt+0x686c>  // b.pmore
  4093b0:	cmp	w1, #0x9
  4093b4:	b.ne	409384 <nftw@plt+0x6804>  // b.any
  4093b8:	mov	x0, x20
  4093bc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4093c0:	add	x1, x1, #0xe38
  4093c4:	bl	40f9a8 <nftw@plt+0xce28>
  4093c8:	ldrb	w1, [x19, #1]!
  4093cc:	cbnz	w1, 4093a4 <nftw@plt+0x6824>
  4093d0:	ldp	x21, x22, [sp, #32]
  4093d4:	ldr	x23, [sp, #48]
  4093d8:	mov	x0, x20
  4093dc:	ldp	x19, x20, [sp, #16]
  4093e0:	mov	w1, #0x22                  	// #34
  4093e4:	ldp	x29, x30, [sp], #64
  4093e8:	b	40f3e8 <nftw@plt+0xc868>
  4093ec:	cmp	w1, #0x5c
  4093f0:	b.ne	409418 <nftw@plt+0x6898>  // b.any
  4093f4:	mov	x0, x20
  4093f8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4093fc:	add	x1, x1, #0xe30
  409400:	bl	40f9a8 <nftw@plt+0xce28>
  409404:	b	40939c <nftw@plt+0x681c>
  409408:	mov	x1, x22
  40940c:	mov	x0, x20
  409410:	bl	40f9a8 <nftw@plt+0xce28>
  409414:	b	40939c <nftw@plt+0x681c>
  409418:	ldrh	w0, [x21, w1, sxtw #1]
  40941c:	tbz	w0, #4, 40942c <nftw@plt+0x68ac>
  409420:	mov	x0, x20
  409424:	bl	40f3e8 <nftw@plt+0xc868>
  409428:	b	40939c <nftw@plt+0x681c>
  40942c:	and	w4, w1, #0x7
  409430:	ubfx	x3, x1, #3, #3
  409434:	lsr	w2, w1, #6
  409438:	mov	x0, x20
  40943c:	add	x1, x23, #0xe50
  409440:	bl	411400 <nftw@plt+0xe880>
  409444:	b	40939c <nftw@plt+0x681c>
  409448:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40944c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409450:	add	x2, x2, #0xe18
  409454:	add	x0, x0, #0xcd8
  409458:	mov	w1, #0x2f5                 	// #757
  40945c:	stp	x21, x22, [sp, #32]
  409460:	str	x23, [sp, #48]
  409464:	bl	402bf0 <nftw@plt+0x70>
  409468:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40946c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409470:	add	x2, x2, #0xe18
  409474:	add	x0, x0, #0xcd8
  409478:	mov	w1, #0x2f6                 	// #758
  40947c:	stp	x21, x22, [sp, #32]
  409480:	str	x23, [sp, #48]
  409484:	bl	402bf0 <nftw@plt+0x70>
  409488:	cmp	w0, #0x0
  40948c:	b.lt	4094bc <nftw@plt+0x693c>  // b.tstop
  409490:	mov	w1, w0
  409494:	mov	w0, #0x1                   	// #1
  409498:	b.eq	4094b8 <nftw@plt+0x6938>  // b.none
  40949c:	mov	w2, #0xcccd                	// #52429
  4094a0:	mov	w0, #0x0                   	// #0
  4094a4:	movk	w2, #0xcccc, lsl #16
  4094a8:	umull	x1, w1, w2
  4094ac:	add	w0, w0, #0x1
  4094b0:	lsr	x1, x1, #35
  4094b4:	cbnz	w1, 4094a8 <nftw@plt+0x6928>
  4094b8:	ret
  4094bc:	stp	x29, x30, [sp, #-16]!
  4094c0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4094c4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4094c8:	mov	x29, sp
  4094cc:	add	x2, x2, #0xe58
  4094d0:	add	x0, x0, #0xcd8
  4094d4:	mov	w1, #0x415                 	// #1045
  4094d8:	bl	402bf0 <nftw@plt+0x70>
  4094dc:	nop
  4094e0:	stp	x29, x30, [sp, #-240]!
  4094e4:	mov	x29, sp
  4094e8:	str	q0, [sp, #64]
  4094ec:	str	q1, [sp, #80]
  4094f0:	str	q2, [sp, #96]
  4094f4:	str	q3, [sp, #112]
  4094f8:	str	q4, [sp, #128]
  4094fc:	str	q5, [sp, #144]
  409500:	str	q6, [sp, #160]
  409504:	str	q7, [sp, #176]
  409508:	stp	x2, x3, [sp, #192]
  40950c:	stp	x4, x5, [sp, #208]
  409510:	stp	x6, x7, [sp, #224]
  409514:	cbz	x0, 409570 <nftw@plt+0x69f0>
  409518:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40951c:	add	x10, sp, #0xf0
  409520:	add	x9, sp, #0xc0
  409524:	mov	x2, x1
  409528:	ldr	x6, [x5, #920]
  40952c:	add	x5, sp, #0xf0
  409530:	stp	x5, x10, [sp, #32]
  409534:	add	x3, sp, #0x20
  409538:	mov	w8, #0xffffffd0            	// #-48
  40953c:	ldr	w5, [x6, #240]
  409540:	mov	w7, #0xffffff80            	// #-128
  409544:	mov	w4, #0x8                   	// #8
  409548:	mov	w1, #0xffffffff            	// #-1
  40954c:	add	w5, w5, #0x1
  409550:	str	w5, [x6, #240]
  409554:	str	x9, [sp, #48]
  409558:	stp	w8, w7, [sp, #56]
  40955c:	bl	408568 <nftw@plt+0x59e8>
  409560:	add	x0, sp, #0x18
  409564:	bl	407ce8 <nftw@plt+0x5168>
  409568:	ldp	x29, x30, [sp], #240
  40956c:	ret
  409570:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409574:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409578:	add	x2, x2, #0xe68
  40957c:	add	x0, x0, #0xcd8
  409580:	mov	w1, #0x4dc                 	// #1244
  409584:	bl	402bf0 <nftw@plt+0x70>
  409588:	stp	x29, x30, [sp, #-256]!
  40958c:	mov	x29, sp
  409590:	str	x19, [sp, #16]
  409594:	str	q0, [sp, #80]
  409598:	str	q1, [sp, #96]
  40959c:	str	q2, [sp, #112]
  4095a0:	str	q3, [sp, #128]
  4095a4:	str	q4, [sp, #144]
  4095a8:	str	q5, [sp, #160]
  4095ac:	str	q6, [sp, #176]
  4095b0:	str	q7, [sp, #192]
  4095b4:	stp	x3, x4, [sp, #216]
  4095b8:	stp	x5, x6, [sp, #232]
  4095bc:	str	x7, [sp, #248]
  4095c0:	cbz	x0, 40961c <nftw@plt+0x6a9c>
  4095c4:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4095c8:	add	x9, sp, #0xd0
  4095cc:	add	x3, sp, #0x30
  4095d0:	mov	w8, #0xffffffd8            	// #-40
  4095d4:	ldr	x6, [x5, #920]
  4095d8:	add	x5, sp, #0x100
  4095dc:	stp	x5, x5, [sp, #48]
  4095e0:	mov	w7, #0xffffff80            	// #-128
  4095e4:	mov	w4, #0x6                   	// #6
  4095e8:	ldr	w5, [x6, #240]
  4095ec:	str	x9, [sp, #64]
  4095f0:	add	w5, w5, #0x1
  4095f4:	str	w5, [x6, #240]
  4095f8:	stp	w8, w7, [sp, #72]
  4095fc:	bl	408568 <nftw@plt+0x59e8>
  409600:	mov	w19, w0
  409604:	add	x0, sp, #0x28
  409608:	bl	407ce8 <nftw@plt+0x5168>
  40960c:	mov	w0, w19
  409610:	ldr	x19, [sp, #16]
  409614:	ldp	x29, x30, [sp], #256
  409618:	ret
  40961c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409620:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409624:	add	x2, x2, #0xe70
  409628:	add	x0, x0, #0xcd8
  40962c:	mov	w1, #0x518                 	// #1304
  409630:	bl	402bf0 <nftw@plt+0x70>
  409634:	nop
  409638:	stp	x29, x30, [sp, #-256]!
  40963c:	mov	x29, sp
  409640:	str	x19, [sp, #16]
  409644:	str	q0, [sp, #80]
  409648:	str	q1, [sp, #96]
  40964c:	str	q2, [sp, #112]
  409650:	str	q3, [sp, #128]
  409654:	str	q4, [sp, #144]
  409658:	str	q5, [sp, #160]
  40965c:	str	q6, [sp, #176]
  409660:	str	q7, [sp, #192]
  409664:	stp	x3, x4, [sp, #216]
  409668:	stp	x5, x6, [sp, #232]
  40966c:	str	x7, [sp, #248]
  409670:	cbz	x0, 4096cc <nftw@plt+0x6b4c>
  409674:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409678:	add	x9, sp, #0xd0
  40967c:	add	x3, sp, #0x30
  409680:	mov	w8, #0xffffffd8            	// #-40
  409684:	ldr	x6, [x5, #920]
  409688:	add	x5, sp, #0x100
  40968c:	stp	x5, x5, [sp, #48]
  409690:	mov	w7, #0xffffff80            	// #-128
  409694:	mov	w4, #0xa                   	// #10
  409698:	ldr	w5, [x6, #240]
  40969c:	str	x9, [sp, #64]
  4096a0:	add	w5, w5, #0x1
  4096a4:	str	w5, [x6, #240]
  4096a8:	stp	w8, w7, [sp, #72]
  4096ac:	bl	408568 <nftw@plt+0x59e8>
  4096b0:	mov	w19, w0
  4096b4:	add	x0, sp, #0x28
  4096b8:	bl	407ce8 <nftw@plt+0x5168>
  4096bc:	mov	w0, w19
  4096c0:	ldr	x19, [sp, #16]
  4096c4:	ldp	x29, x30, [sp], #256
  4096c8:	ret
  4096cc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4096d0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4096d4:	add	x2, x2, #0xe80
  4096d8:	add	x0, x0, #0xcd8
  4096dc:	mov	w1, #0x565                 	// #1381
  4096e0:	bl	402bf0 <nftw@plt+0x70>
  4096e4:	nop
  4096e8:	stp	x29, x30, [sp, #-256]!
  4096ec:	mov	x29, sp
  4096f0:	str	x19, [sp, #16]
  4096f4:	str	q0, [sp, #80]
  4096f8:	str	q1, [sp, #96]
  4096fc:	str	q2, [sp, #112]
  409700:	str	q3, [sp, #128]
  409704:	str	q4, [sp, #144]
  409708:	str	q5, [sp, #160]
  40970c:	str	q6, [sp, #176]
  409710:	str	q7, [sp, #192]
  409714:	stp	x2, x3, [sp, #208]
  409718:	stp	x4, x5, [sp, #224]
  40971c:	stp	x6, x7, [sp, #240]
  409720:	cbz	x0, 409788 <nftw@plt+0x6c08>
  409724:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409728:	add	x10, sp, #0x100
  40972c:	add	x9, sp, #0xd0
  409730:	mov	x2, x1
  409734:	ldr	x6, [x5, #920]
  409738:	add	x5, sp, #0x100
  40973c:	stp	x5, x10, [sp, #48]
  409740:	add	x3, sp, #0x30
  409744:	mov	w8, #0xffffffd0            	// #-48
  409748:	ldr	w5, [x6, #240]
  40974c:	mov	w7, #0xffffff80            	// #-128
  409750:	mov	w4, #0xb                   	// #11
  409754:	mov	w1, #0xffffffff            	// #-1
  409758:	add	w5, w5, #0x1
  40975c:	str	w5, [x6, #240]
  409760:	str	x9, [sp, #64]
  409764:	stp	w8, w7, [sp, #72]
  409768:	bl	408568 <nftw@plt+0x59e8>
  40976c:	mov	w19, w0
  409770:	add	x0, sp, #0x28
  409774:	bl	407ce8 <nftw@plt+0x5168>
  409778:	mov	w0, w19
  40977c:	ldr	x19, [sp, #16]
  409780:	ldp	x29, x30, [sp], #256
  409784:	ret
  409788:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  40978c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409790:	add	x2, x2, #0xe88
  409794:	add	x0, x0, #0xcd8
  409798:	mov	w1, #0x587                 	// #1415
  40979c:	bl	402bf0 <nftw@plt+0x70>
  4097a0:	stp	x29, x30, [sp, #-240]!
  4097a4:	mov	x29, sp
  4097a8:	str	q0, [sp, #64]
  4097ac:	str	q1, [sp, #80]
  4097b0:	str	q2, [sp, #96]
  4097b4:	str	q3, [sp, #112]
  4097b8:	str	q4, [sp, #128]
  4097bc:	str	q5, [sp, #144]
  4097c0:	str	q6, [sp, #160]
  4097c4:	str	q7, [sp, #176]
  4097c8:	stp	x2, x3, [sp, #192]
  4097cc:	stp	x4, x5, [sp, #208]
  4097d0:	stp	x6, x7, [sp, #224]
  4097d4:	cbz	x0, 409830 <nftw@plt+0x6cb0>
  4097d8:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4097dc:	add	x10, sp, #0xf0
  4097e0:	add	x9, sp, #0xc0
  4097e4:	mov	x2, x1
  4097e8:	ldr	x6, [x5, #920]
  4097ec:	add	x5, sp, #0xf0
  4097f0:	stp	x5, x10, [sp, #32]
  4097f4:	add	x3, sp, #0x20
  4097f8:	mov	w8, #0xffffffd0            	// #-48
  4097fc:	ldr	w5, [x6, #240]
  409800:	mov	w7, #0xffffff80            	// #-128
  409804:	mov	w4, #0x4                   	// #4
  409808:	mov	w1, #0xffffffff            	// #-1
  40980c:	add	w5, w5, #0x1
  409810:	str	w5, [x6, #240]
  409814:	str	x9, [sp, #48]
  409818:	stp	w8, w7, [sp, #56]
  40981c:	bl	408568 <nftw@plt+0x59e8>
  409820:	add	x0, sp, #0x18
  409824:	bl	407ce8 <nftw@plt+0x5168>
  409828:	ldp	x29, x30, [sp], #240
  40982c:	ret
  409830:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409834:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409838:	add	x2, x2, #0xe98
  40983c:	add	x0, x0, #0xcd8
  409840:	mov	w1, #0x5be                 	// #1470
  409844:	bl	402bf0 <nftw@plt+0x70>
  409848:	stp	x29, x30, [sp, #-416]!
  40984c:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409850:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  409854:	mov	x29, sp
  409858:	ldr	x8, [x8, #920]
  40985c:	str	q0, [sp, #240]
  409860:	mov	w13, w0
  409864:	str	q1, [sp, #256]
  409868:	add	x11, sp, #0x170
  40986c:	mov	w10, #0xffffffd0            	// #-48
  409870:	str	q2, [sp, #272]
  409874:	mov	w9, #0xffffff80            	// #-128
  409878:	add	x0, sp, #0x48
  40987c:	str	q3, [sp, #288]
  409880:	str	q4, [sp, #304]
  409884:	str	q5, [sp, #320]
  409888:	str	q6, [sp, #336]
  40988c:	str	q7, [sp, #352]
  409890:	stp	x2, x3, [sp, #368]
  409894:	mov	w2, w13
  409898:	mov	x3, #0x0                   	// #0
  40989c:	stp	x4, x5, [sp, #384]
  4098a0:	add	x4, sp, #0x1a0
  4098a4:	add	x5, sp, #0x1a0
  4098a8:	stp	x6, x7, [sp, #400]
  4098ac:	stp	x4, x5, [sp, #40]
  4098b0:	ldr	w4, [x8, #240]
  4098b4:	str	x19, [sp, #16]
  4098b8:	mov	x19, x1
  4098bc:	ldr	x1, [x12, #2296]
  4098c0:	add	w4, w4, #0x1
  4098c4:	str	w4, [x8, #240]
  4098c8:	str	x11, [sp, #56]
  4098cc:	stp	w10, w9, [sp, #64]
  4098d0:	bl	42d6d8 <nftw@plt+0x2ab58>
  4098d4:	add	x3, sp, #0x28
  4098d8:	mov	w4, #0x2                   	// #2
  4098dc:	mov	x2, x19
  4098e0:	mov	w1, #0xffffffff            	// #-1
  4098e4:	add	x0, sp, #0x48
  4098e8:	bl	408568 <nftw@plt+0x59e8>
  4098ec:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4098f0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4098f4:	add	x2, x2, #0xea8
  4098f8:	add	x0, x0, #0xcd8
  4098fc:	mov	w1, #0x5f6                 	// #1526
  409900:	bl	402bf0 <nftw@plt+0x70>
  409904:	nop
  409908:	stp	x29, x30, [sp, #-432]!
  40990c:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409910:	adrp	x13, 48d000 <__environ@@GLIBC_2.17+0xa68>
  409914:	mov	x29, sp
  409918:	ldr	x8, [x8, #920]
  40991c:	str	q0, [sp, #240]
  409920:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  409924:	str	q1, [sp, #256]
  409928:	add	x11, sp, #0x170
  40992c:	mov	w10, #0xffffffc8            	// #-56
  409930:	str	q2, [sp, #272]
  409934:	mov	w9, #0xffffff80            	// #-128
  409938:	str	q3, [sp, #288]
  40993c:	str	q4, [sp, #304]
  409940:	str	q5, [sp, #320]
  409944:	str	q6, [sp, #336]
  409948:	str	q7, [sp, #352]
  40994c:	stp	x1, x2, [sp, #376]
  409950:	ldr	w2, [x13, #2320]
  409954:	stp	x3, x4, [sp, #392]
  409958:	add	x4, sp, #0x1b0
  40995c:	mov	x3, #0x0                   	// #0
  409960:	stp	x5, x6, [sp, #408]
  409964:	add	x5, sp, #0x1b0
  409968:	str	x7, [sp, #424]
  40996c:	stp	x4, x5, [sp, #40]
  409970:	ldr	w4, [x8, #240]
  409974:	ldr	x1, [x12, #2296]
  409978:	add	w4, w4, #0x1
  40997c:	str	x19, [sp, #16]
  409980:	mov	x19, x0
  409984:	str	w4, [x8, #240]
  409988:	add	x0, sp, #0x48
  40998c:	str	x11, [sp, #56]
  409990:	stp	w10, w9, [sp, #64]
  409994:	bl	42d6d8 <nftw@plt+0x2ab58>
  409998:	add	x3, sp, #0x28
  40999c:	mov	w4, #0xd                   	// #13
  4099a0:	mov	x2, x19
  4099a4:	mov	w1, #0xffffffff            	// #-1
  4099a8:	add	x0, sp, #0x48
  4099ac:	bl	408568 <nftw@plt+0x59e8>
  4099b0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4099b4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4099b8:	add	x2, x2, #0xeb8
  4099bc:	add	x0, x0, #0xcd8
  4099c0:	mov	w1, #0x617                 	// #1559
  4099c4:	bl	402bf0 <nftw@plt+0x70>
  4099c8:	stp	x29, x30, [sp, #-112]!
  4099cc:	mov	x29, sp
  4099d0:	stp	x19, x20, [sp, #16]
  4099d4:	mov	w19, w6
  4099d8:	mov	x20, x5
  4099dc:	stp	x21, x22, [sp, #32]
  4099e0:	mov	x21, x0
  4099e4:	mov	w22, w1
  4099e8:	mov	x0, x3
  4099ec:	mov	x1, x4
  4099f0:	bl	4024b0 <ngettext@plt>
  4099f4:	mov	x1, x0
  4099f8:	mov	x3, x21
  4099fc:	mov	x2, x20
  409a00:	mov	w4, w19
  409a04:	add	x0, sp, #0x30
  409a08:	bl	408fc8 <nftw@plt+0x6448>
  409a0c:	cmp	w19, #0x6
  409a10:	b.ne	409a18 <nftw@plt+0x6e98>  // b.any
  409a14:	str	w22, [sp, #108]
  409a18:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409a1c:	add	x1, sp, #0x30
  409a20:	ldr	x0, [x0, #920]
  409a24:	bl	407f80 <nftw@plt+0x5400>
  409a28:	ldp	x19, x20, [sp, #16]
  409a2c:	ldp	x21, x22, [sp, #32]
  409a30:	ldp	x29, x30, [sp], #112
  409a34:	ret
  409a38:	stp	x29, x30, [sp, #-416]!
  409a3c:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409a40:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  409a44:	mov	x29, sp
  409a48:	ldr	x8, [x8, #920]
  409a4c:	str	q0, [sp, #256]
  409a50:	add	x11, sp, #0x180
  409a54:	str	q1, [sp, #272]
  409a58:	mov	w10, #0xffffffe0            	// #-32
  409a5c:	mov	w9, #0xffffff80            	// #-128
  409a60:	str	q2, [sp, #288]
  409a64:	str	q3, [sp, #304]
  409a68:	str	q4, [sp, #320]
  409a6c:	str	q5, [sp, #336]
  409a70:	str	q6, [sp, #352]
  409a74:	str	q7, [sp, #368]
  409a78:	stp	x4, x5, [sp, #384]
  409a7c:	add	x4, sp, #0x1a0
  409a80:	add	x5, sp, #0x1a0
  409a84:	stp	x6, x7, [sp, #400]
  409a88:	stp	x4, x5, [sp, #56]
  409a8c:	ldr	w4, [x8, #240]
  409a90:	stp	x19, x20, [sp, #16]
  409a94:	mov	x19, x1
  409a98:	add	w4, w4, #0x1
  409a9c:	ldr	x1, [x12, #2296]
  409aa0:	str	x21, [sp, #32]
  409aa4:	str	w4, [x8, #240]
  409aa8:	mov	x20, x2
  409aac:	mov	x21, x3
  409ab0:	mov	w2, w0
  409ab4:	mov	x3, #0x0                   	// #0
  409ab8:	add	x0, sp, #0x58
  409abc:	str	x11, [sp, #72]
  409ac0:	stp	w10, w9, [sp, #80]
  409ac4:	bl	42d6d8 <nftw@plt+0x2ab58>
  409ac8:	mov	x4, x21
  409acc:	mov	x3, x20
  409ad0:	mov	x2, x19
  409ad4:	add	x5, sp, #0x38
  409ad8:	mov	w6, #0x8                   	// #8
  409adc:	mov	w1, #0xffffffff            	// #-1
  409ae0:	add	x0, sp, #0x58
  409ae4:	bl	4099c8 <nftw@plt+0x6e48>
  409ae8:	add	x0, sp, #0x58
  409aec:	bl	42cec0 <nftw@plt+0x2a340>
  409af0:	add	x0, sp, #0x30
  409af4:	bl	407ce8 <nftw@plt+0x5168>
  409af8:	ldp	x19, x20, [sp, #16]
  409afc:	ldr	x21, [sp, #32]
  409b00:	ldp	x29, x30, [sp], #416
  409b04:	ret
  409b08:	stp	x29, x30, [sp, #-240]!
  409b0c:	mov	x29, sp
  409b10:	str	x19, [sp, #16]
  409b14:	str	q0, [sp, #80]
  409b18:	str	q1, [sp, #96]
  409b1c:	str	q2, [sp, #112]
  409b20:	str	q3, [sp, #128]
  409b24:	str	q4, [sp, #144]
  409b28:	str	q5, [sp, #160]
  409b2c:	str	q6, [sp, #176]
  409b30:	str	q7, [sp, #192]
  409b34:	stp	x5, x6, [sp, #216]
  409b38:	str	x7, [sp, #232]
  409b3c:	cbz	x0, 409b98 <nftw@plt+0x7018>
  409b40:	adrp	x7, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409b44:	add	x11, sp, #0xd0
  409b48:	add	x5, sp, #0x30
  409b4c:	mov	w10, #0xffffffe8            	// #-24
  409b50:	ldr	x8, [x7, #920]
  409b54:	add	x7, sp, #0xf0
  409b58:	stp	x7, x7, [sp, #48]
  409b5c:	mov	w9, #0xffffff80            	// #-128
  409b60:	mov	w6, #0x6                   	// #6
  409b64:	ldr	w7, [x8, #240]
  409b68:	str	x11, [sp, #64]
  409b6c:	add	w7, w7, #0x1
  409b70:	str	w7, [x8, #240]
  409b74:	stp	w10, w9, [sp, #72]
  409b78:	bl	4099c8 <nftw@plt+0x6e48>
  409b7c:	mov	w19, w0
  409b80:	add	x0, sp, #0x28
  409b84:	bl	407ce8 <nftw@plt+0x5168>
  409b88:	mov	w0, w19
  409b8c:	ldr	x19, [sp, #16]
  409b90:	ldp	x29, x30, [sp], #240
  409b94:	ret
  409b98:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409b9c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  409ba0:	add	x2, x2, #0xed8
  409ba4:	add	x0, x0, #0xcd8
  409ba8:	mov	w1, #0x528                 	// #1320
  409bac:	bl	402bf0 <nftw@plt+0x70>
  409bb0:	stp	x29, x30, [sp, #-416]!
  409bb4:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409bb8:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  409bbc:	mov	x29, sp
  409bc0:	ldr	x8, [x8, #920]
  409bc4:	str	q0, [sp, #256]
  409bc8:	add	x11, sp, #0x180
  409bcc:	str	q1, [sp, #272]
  409bd0:	mov	w10, #0xffffffe8            	// #-24
  409bd4:	mov	w9, #0xffffff80            	// #-128
  409bd8:	str	q2, [sp, #288]
  409bdc:	str	q3, [sp, #304]
  409be0:	str	q4, [sp, #320]
  409be4:	str	q5, [sp, #336]
  409be8:	str	q6, [sp, #352]
  409bec:	str	q7, [sp, #368]
  409bf0:	stp	x5, x6, [sp, #392]
  409bf4:	add	x5, sp, #0x1a0
  409bf8:	str	x7, [sp, #408]
  409bfc:	stp	x21, x22, [sp, #32]
  409c00:	mov	x22, x4
  409c04:	add	x4, sp, #0x1a0
  409c08:	str	x4, [sp, #56]
  409c0c:	mov	x21, x3
  409c10:	ldr	w4, [x8, #240]
  409c14:	mov	x3, #0x0                   	// #0
  409c18:	stp	x19, x20, [sp, #16]
  409c1c:	mov	w19, w1
  409c20:	add	w4, w4, #0x1
  409c24:	ldr	x1, [x12, #2296]
  409c28:	str	w4, [x8, #240]
  409c2c:	mov	x20, x2
  409c30:	mov	w2, w0
  409c34:	add	x0, sp, #0x58
  409c38:	str	x5, [sp, #64]
  409c3c:	str	x11, [sp, #72]
  409c40:	stp	w10, w9, [sp, #80]
  409c44:	bl	42d6d8 <nftw@plt+0x2ab58>
  409c48:	mov	x4, x22
  409c4c:	mov	x3, x21
  409c50:	mov	x2, x20
  409c54:	mov	w1, w19
  409c58:	add	x5, sp, #0x38
  409c5c:	mov	w6, #0x6                   	// #6
  409c60:	add	x0, sp, #0x58
  409c64:	bl	4099c8 <nftw@plt+0x6e48>
  409c68:	mov	w19, w0
  409c6c:	add	x0, sp, #0x58
  409c70:	bl	42cec0 <nftw@plt+0x2a340>
  409c74:	add	x0, sp, #0x30
  409c78:	bl	407ce8 <nftw@plt+0x5168>
  409c7c:	mov	w0, w19
  409c80:	ldp	x19, x20, [sp, #16]
  409c84:	ldp	x21, x22, [sp, #32]
  409c88:	ldp	x29, x30, [sp], #416
  409c8c:	ret
  409c90:	stp	x29, x30, [sp, #-416]!
  409c94:	adrp	x8, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409c98:	adrp	x12, 48d000 <__environ@@GLIBC_2.17+0xa68>
  409c9c:	mov	x29, sp
  409ca0:	ldr	x8, [x8, #920]
  409ca4:	str	q0, [sp, #256]
  409ca8:	add	x11, sp, #0x180
  409cac:	str	q1, [sp, #272]
  409cb0:	mov	w10, #0xffffffe0            	// #-32
  409cb4:	mov	w9, #0xffffff80            	// #-128
  409cb8:	str	q2, [sp, #288]
  409cbc:	str	q3, [sp, #304]
  409cc0:	str	q4, [sp, #320]
  409cc4:	str	q5, [sp, #336]
  409cc8:	str	q6, [sp, #352]
  409ccc:	str	q7, [sp, #368]
  409cd0:	stp	x4, x5, [sp, #384]
  409cd4:	add	x4, sp, #0x1a0
  409cd8:	add	x5, sp, #0x1a0
  409cdc:	stp	x6, x7, [sp, #400]
  409ce0:	stp	x4, x5, [sp, #56]
  409ce4:	ldr	w4, [x8, #240]
  409ce8:	stp	x19, x20, [sp, #16]
  409cec:	mov	x19, x1
  409cf0:	add	w4, w4, #0x1
  409cf4:	ldr	x1, [x12, #2296]
  409cf8:	str	x21, [sp, #32]
  409cfc:	str	w4, [x8, #240]
  409d00:	mov	x20, x2
  409d04:	mov	x21, x3
  409d08:	mov	w2, w0
  409d0c:	mov	x3, #0x0                   	// #0
  409d10:	add	x0, sp, #0x58
  409d14:	str	x11, [sp, #72]
  409d18:	stp	w10, w9, [sp, #80]
  409d1c:	bl	42d6d8 <nftw@plt+0x2ab58>
  409d20:	mov	x4, x21
  409d24:	mov	x3, x20
  409d28:	mov	x2, x19
  409d2c:	add	x5, sp, #0x38
  409d30:	mov	w6, #0x4                   	// #4
  409d34:	mov	w1, #0xffffffff            	// #-1
  409d38:	add	x0, sp, #0x58
  409d3c:	bl	4099c8 <nftw@plt+0x6e48>
  409d40:	add	x0, sp, #0x58
  409d44:	bl	42cec0 <nftw@plt+0x2a340>
  409d48:	add	x0, sp, #0x30
  409d4c:	bl	407ce8 <nftw@plt+0x5168>
  409d50:	ldp	x19, x20, [sp, #16]
  409d54:	ldr	x21, [sp, #32]
  409d58:	ldp	x29, x30, [sp], #416
  409d5c:	ret
  409d60:	cbz	x1, 409e68 <nftw@plt+0x72e8>
  409d64:	stp	x29, x30, [sp, #-48]!
  409d68:	mov	x29, sp
  409d6c:	stp	x19, x20, [sp, #16]
  409d70:	mov	x20, x1
  409d74:	ldr	x1, [x0, #16]
  409d78:	stp	x21, x22, [sp, #32]
  409d7c:	mov	x22, x0
  409d80:	cbz	x1, 409d8c <nftw@plt+0x720c>
  409d84:	ldr	x0, [x20]
  409d88:	blr	x1
  409d8c:	ldr	x1, [x22, #24]
  409d90:	cbz	x1, 409d9c <nftw@plt+0x721c>
  409d94:	ldr	x0, [x20, #8]
  409d98:	blr	x1
  409d9c:	str	xzr, [x20, #32]
  409da0:	mov	x19, x20
  409da4:	mov	x20, #0x0                   	// #0
  409da8:	ldr	x21, [x19, #16]
  409dac:	cbz	x21, 409e30 <nftw@plt+0x72b0>
  409db0:	ldr	x1, [x22, #16]
  409db4:	cbz	x1, 409dc4 <nftw@plt+0x7244>
  409db8:	ldr	x0, [x21]
  409dbc:	blr	x1
  409dc0:	ldr	x21, [x19, #16]
  409dc4:	ldr	x1, [x22, #24]
  409dc8:	cbz	x1, 409dd8 <nftw@plt+0x7258>
  409dcc:	ldr	x0, [x21, #8]
  409dd0:	blr	x1
  409dd4:	ldr	x21, [x19, #16]
  409dd8:	str	x20, [x21, #32]
  409ddc:	ldr	x20, [x19, #24]
  409de0:	cbz	x20, 409e3c <nftw@plt+0x72bc>
  409de4:	ldr	x1, [x22, #16]
  409de8:	cbz	x1, 409df8 <nftw@plt+0x7278>
  409dec:	ldr	x0, [x20]
  409df0:	blr	x1
  409df4:	ldr	x20, [x19, #24]
  409df8:	ldr	x1, [x22, #24]
  409dfc:	cbz	x1, 409e0c <nftw@plt+0x728c>
  409e00:	ldr	x0, [x20, #8]
  409e04:	blr	x1
  409e08:	ldr	x20, [x19, #24]
  409e0c:	str	x21, [x20, #32]
  409e10:	mov	x0, x19
  409e14:	mov	x1, #0x28                  	// #40
  409e18:	ldr	x21, [x19, #32]
  409e1c:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  409e20:	cbz	x21, 409e54 <nftw@plt+0x72d4>
  409e24:	mov	x19, x21
  409e28:	ldr	x21, [x19, #16]
  409e2c:	cbnz	x21, 409db0 <nftw@plt+0x7230>
  409e30:	mov	x21, x20
  409e34:	ldr	x20, [x19, #24]
  409e38:	cbnz	x20, 409de4 <nftw@plt+0x7264>
  409e3c:	mov	x20, x21
  409e40:	mov	x0, x19
  409e44:	ldr	x21, [x19, #32]
  409e48:	mov	x1, #0x28                  	// #40
  409e4c:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  409e50:	cbnz	x21, 409e24 <nftw@plt+0x72a4>
  409e54:	cbnz	x20, 409da0 <nftw@plt+0x7220>
  409e58:	ldp	x19, x20, [sp, #16]
  409e5c:	ldp	x21, x22, [sp, #32]
  409e60:	ldp	x29, x30, [sp], #48
  409e64:	ret
  409e68:	ret
  409e6c:	nop
  409e70:	stp	x29, x30, [sp, #-96]!
  409e74:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  409e78:	add	x0, x0, #0x108
  409e7c:	mov	x29, sp
  409e80:	bl	402ab0 <getenv@plt>
  409e84:	cbz	x0, 409fd8 <nftw@plt+0x7458>
  409e88:	stp	x21, x22, [sp, #32]
  409e8c:	str	x27, [sp, #80]
  409e90:	mov	x27, x0
  409e94:	ldrb	w22, [x0]
  409e98:	mov	w0, #0x0                   	// #0
  409e9c:	cbz	w22, 40a020 <nftw@plt+0x74a0>
  409ea0:	stp	x19, x20, [sp, #16]
  409ea4:	cmp	w22, #0x3a
  409ea8:	mov	x21, x27
  409eac:	stp	x23, x24, [sp, #48]
  409eb0:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  409eb4:	mov	x24, #0x0                   	// #0
  409eb8:	stp	x25, x26, [sp, #64]
  409ebc:	mov	x20, #0x0                   	// #0
  409ec0:	adrp	x25, 48c000 <_obstack_memory_used@@Base+0x425a0>
  409ec4:	adrp	x26, 45c000 <_obstack_memory_used@@Base+0x125a0>
  409ec8:	add	x25, x25, #0x3a0
  409ecc:	add	x26, x26, #0x118
  409ed0:	mov	x23, #0x0                   	// #0
  409ed4:	b.eq	409f10 <nftw@plt+0x7390>  // b.none
  409ed8:	cmp	w22, #0x3d
  409edc:	b.eq	409fe4 <nftw@plt+0x7464>  // b.none
  409ee0:	cbz	x23, 409efc <nftw@plt+0x737c>
  409ee4:	cmp	w22, #0x3b
  409ee8:	b.eq	409efc <nftw@plt+0x737c>  // b.none
  409eec:	sub	w22, w22, #0x30
  409ef0:	and	w22, w22, #0xff
  409ef4:	cmp	w22, #0x9
  409ef8:	b.hi	409fc4 <nftw@plt+0x7444>  // b.pmore
  409efc:	ldrb	w22, [x21, #1]
  409f00:	add	x21, x21, #0x1
  409f04:	cmp	w22, #0x3a
  409f08:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  409f0c:	b.ne	409ed8 <nftw@plt+0x7358>  // b.any
  409f10:	ldr	x0, [x25]
  409f14:	cbz	x23, 40a004 <nftw@plt+0x7484>
  409f18:	sub	x24, x21, x23
  409f1c:	cbz	x0, 40a018 <nftw@plt+0x7498>
  409f20:	mov	x19, x25
  409f24:	b	409f30 <nftw@plt+0x73b0>
  409f28:	ldr	x0, [x19, #24]!
  409f2c:	cbz	x0, 409f4c <nftw@plt+0x73cc>
  409f30:	ldrb	w2, [x19, #16]
  409f34:	cmp	x2, x20
  409f38:	b.ne	409f28 <nftw@plt+0x73a8>  // b.any
  409f3c:	mov	x2, x20
  409f40:	mov	x1, x27
  409f44:	bl	402850 <memcmp@plt>
  409f48:	cbnz	w0, 409f28 <nftw@plt+0x73a8>
  409f4c:	ldr	x0, [x19, #8]
  409f50:	cmp	x0, #0x0
  409f54:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  409f58:	b.eq	409fac <nftw@plt+0x742c>  // b.none
  409f5c:	ldrb	w1, [x19, #17]
  409f60:	cbnz	w1, 40a010 <nftw@plt+0x7490>
  409f64:	add	x0, x24, #0x7
  409f68:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  409f6c:	mov	w3, #0x5b1b                	// #23323
  409f70:	mov	x22, x0
  409f74:	strh	w3, [x0], #2
  409f78:	mov	x1, x23
  409f7c:	mov	x2, x24
  409f80:	bl	402490 <memcpy@plt>
  409f84:	str	x22, [x19, #8]
  409f88:	add	x0, x24, #0x2
  409f8c:	ldr	w4, [x26]
  409f90:	add	x2, x22, x0
  409f94:	ldrb	w3, [x26, #4]
  409f98:	mov	w1, #0x1                   	// #1
  409f9c:	strb	w1, [x19, #17]
  409fa0:	str	w4, [x22, x0]
  409fa4:	strb	w3, [x2, #4]
  409fa8:	ldrb	w22, [x21]
  409fac:	cbz	w22, 409fc4 <nftw@plt+0x7444>
  409fb0:	add	x21, x21, #0x1
  409fb4:	mov	x23, #0x0                   	// #0
  409fb8:	mov	x27, x21
  409fbc:	ldrb	w22, [x21]
  409fc0:	b	409f04 <nftw@plt+0x7384>
  409fc4:	ldp	x19, x20, [sp, #16]
  409fc8:	ldp	x21, x22, [sp, #32]
  409fcc:	ldp	x23, x24, [sp, #48]
  409fd0:	ldp	x25, x26, [sp, #64]
  409fd4:	ldr	x27, [sp, #80]
  409fd8:	mov	w0, #0x1                   	// #1
  409fdc:	ldp	x29, x30, [sp], #96
  409fe0:	ret
  409fe4:	cmp	x23, #0x0
  409fe8:	ccmp	x21, x27, #0x4, eq  // eq = none
  409fec:	b.eq	409fc4 <nftw@plt+0x7444>  // b.none
  409ff0:	add	x23, x21, #0x1
  409ff4:	sub	x20, x21, x27
  409ff8:	mov	x21, x23
  409ffc:	ldrb	w22, [x21]
  40a000:	b	409f04 <nftw@plt+0x7384>
  40a004:	sub	x20, x21, x27
  40a008:	cbnz	x0, 409f20 <nftw@plt+0x73a0>
  40a00c:	b	409fac <nftw@plt+0x742c>
  40a010:	bl	402910 <free@plt>
  40a014:	b	409f64 <nftw@plt+0x73e4>
  40a018:	mov	x19, x25
  40a01c:	b	409f4c <nftw@plt+0x73cc>
  40a020:	ldp	x21, x22, [sp, #32]
  40a024:	ldr	x27, [sp, #80]
  40a028:	ldp	x29, x30, [sp], #96
  40a02c:	ret
  40a030:	tst	w0, #0xff
  40a034:	b.eq	40a0b4 <nftw@plt+0x7534>  // b.none
  40a038:	stp	x29, x30, [sp, #-48]!
  40a03c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40a040:	mov	x29, sp
  40a044:	stp	x19, x20, [sp, #16]
  40a048:	add	x19, x0, #0x3a0
  40a04c:	mov	x20, x2
  40a050:	ldr	x0, [x0, #928]
  40a054:	str	x21, [sp, #32]
  40a058:	mov	x21, x1
  40a05c:	cbnz	x0, 40a06c <nftw@plt+0x74ec>
  40a060:	b	40a09c <nftw@plt+0x751c>
  40a064:	ldr	x0, [x19, #24]!
  40a068:	cbz	x0, 40a09c <nftw@plt+0x751c>
  40a06c:	ldrb	w3, [x19, #16]
  40a070:	cmp	x3, x20
  40a074:	b.ne	40a064 <nftw@plt+0x74e4>  // b.any
  40a078:	mov	x2, x20
  40a07c:	mov	x1, x21
  40a080:	bl	402850 <memcmp@plt>
  40a084:	cbnz	w0, 40a064 <nftw@plt+0x74e4>
  40a088:	ldr	x0, [x19, #8]
  40a08c:	ldp	x19, x20, [sp, #16]
  40a090:	ldr	x21, [sp, #32]
  40a094:	ldp	x29, x30, [sp], #48
  40a098:	ret
  40a09c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  40a0a0:	add	x0, x0, #0xbd0
  40a0a4:	ldp	x19, x20, [sp, #16]
  40a0a8:	ldr	x21, [sp, #32]
  40a0ac:	ldp	x29, x30, [sp], #48
  40a0b0:	ret
  40a0b4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  40a0b8:	add	x0, x0, #0xbd0
  40a0bc:	ret
  40a0c0:	tst	w0, #0xff
  40a0c4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  40a0c8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a0cc:	add	x1, x1, #0xbd0
  40a0d0:	add	x0, x0, #0x120
  40a0d4:	csel	x0, x0, x1, ne  // ne = any
  40a0d8:	ret
  40a0dc:	nop
  40a0e0:	cmp	w0, #0x1
  40a0e4:	b.eq	40a158 <nftw@plt+0x75d8>  // b.none
  40a0e8:	stp	x29, x30, [sp, #-32]!
  40a0ec:	cmp	w0, #0x2
  40a0f0:	mov	x29, sp
  40a0f4:	str	x19, [sp, #16]
  40a0f8:	mov	w19, w0
  40a0fc:	b.ne	40a130 <nftw@plt+0x75b0>  // b.any
  40a100:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a104:	add	x0, x0, #0x128
  40a108:	bl	402ab0 <getenv@plt>
  40a10c:	cbz	x0, 40a120 <nftw@plt+0x75a0>
  40a110:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a114:	add	x1, x1, #0x130
  40a118:	bl	402890 <strcmp@plt>
  40a11c:	cbnz	w0, 40a144 <nftw@plt+0x75c4>
  40a120:	mov	w0, #0x0                   	// #0
  40a124:	ldr	x19, [sp, #16]
  40a128:	ldp	x29, x30, [sp], #32
  40a12c:	ret
  40a130:	mov	w0, #0x0                   	// #0
  40a134:	cbnz	w19, 40a15c <nftw@plt+0x75dc>
  40a138:	ldr	x19, [sp, #16]
  40a13c:	ldp	x29, x30, [sp], #32
  40a140:	ret
  40a144:	mov	w0, w19
  40a148:	bl	4029f0 <isatty@plt>
  40a14c:	cbz	w0, 40a120 <nftw@plt+0x75a0>
  40a150:	ldr	x19, [sp, #16]
  40a154:	ldp	x29, x30, [sp], #32
  40a158:	b	409e70 <nftw@plt+0x72f0>
  40a15c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a160:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a164:	add	x2, x2, #0x138
  40a168:	add	x0, x0, #0x148
  40a16c:	mov	w1, #0xec                  	// #236
  40a170:	bl	402bf0 <nftw@plt+0x70>
  40a174:	nop
  40a178:	ldr	x2, [x0]
  40a17c:	ldr	x0, [x1]
  40a180:	ldr	w1, [x2]
  40a184:	ldr	w0, [x0]
  40a188:	sub	w0, w1, w0
  40a18c:	ret
  40a190:	stp	x29, x30, [sp, #-64]!
  40a194:	mov	x29, sp
  40a198:	stp	x19, x20, [sp, #16]
  40a19c:	mov	w19, w0
  40a1a0:	mov	w20, w1
  40a1a4:	stp	x21, x22, [sp, #32]
  40a1a8:	adrp	x22, 48d000 <__environ@@GLIBC_2.17+0xa68>
  40a1ac:	stp	x23, x24, [sp, #48]
  40a1b0:	tbnz	w19, #31, 40a234 <nftw@plt+0x76b4>
  40a1b4:	nop
  40a1b8:	tbnz	w20, #31, 40a248 <nftw@plt+0x76c8>
  40a1bc:	cmp	w19, #0x1
  40a1c0:	mov	w1, w19
  40a1c4:	cset	w23, ls  // ls = plast
  40a1c8:	cmp	w20, #0x1
  40a1cc:	cset	w0, ls  // ls = plast
  40a1d0:	orr	w23, w23, w0
  40a1d4:	cbnz	w23, 40a274 <nftw@plt+0x76f4>
  40a1d8:	ldr	x0, [x22, #2296]
  40a1dc:	bl	42b898 <nftw@plt+0x28d18>
  40a1e0:	mov	x21, x0
  40a1e4:	ldr	x0, [x22, #2296]
  40a1e8:	mov	w1, w20
  40a1ec:	bl	42b898 <nftw@plt+0x28d18>
  40a1f0:	mov	x24, x0
  40a1f4:	cmp	x21, x0
  40a1f8:	b.ne	40a294 <nftw@plt+0x7714>  // b.any
  40a1fc:	bl	42bd90 <nftw@plt+0x29210>
  40a200:	tst	w0, #0xff
  40a204:	mov	w2, w19
  40a208:	mov	x1, x21
  40a20c:	b.eq	40a2c8 <nftw@plt+0x7748>  // b.none
  40a210:	ldr	x0, [x22, #2296]
  40a214:	bl	42bdb0 <nftw@plt+0x29230>
  40a218:	mov	w19, w0
  40a21c:	ldr	x0, [x22, #2296]
  40a220:	mov	w2, w20
  40a224:	mov	x1, x21
  40a228:	bl	42bdb0 <nftw@plt+0x29230>
  40a22c:	mov	w20, w0
  40a230:	tbz	w19, #31, 40a1b8 <nftw@plt+0x7638>
  40a234:	ldr	x0, [x22, #2296]
  40a238:	mov	w1, w19
  40a23c:	bl	42b010 <nftw@plt+0x28490>
  40a240:	mov	w19, w0
  40a244:	tbz	w20, #31, 40a1bc <nftw@plt+0x763c>
  40a248:	ldr	x0, [x22, #2296]
  40a24c:	mov	w1, w20
  40a250:	bl	42b010 <nftw@plt+0x28490>
  40a254:	mov	w20, w0
  40a258:	cmp	w19, #0x1
  40a25c:	mov	w1, w19
  40a260:	cset	w23, ls  // ls = plast
  40a264:	cmp	w20, #0x1
  40a268:	cset	w0, ls  // ls = plast
  40a26c:	orr	w23, w23, w0
  40a270:	cbz	w23, 40a1d8 <nftw@plt+0x7658>
  40a274:	cmp	w19, w20
  40a278:	cset	w23, eq  // eq = none
  40a27c:	mov	w0, w23
  40a280:	ldp	x19, x20, [sp, #16]
  40a284:	ldp	x21, x22, [sp, #32]
  40a288:	ldp	x23, x24, [sp, #48]
  40a28c:	ldp	x29, x30, [sp], #64
  40a290:	ret
  40a294:	mov	x0, x21
  40a298:	bl	42bd90 <nftw@plt+0x29210>
  40a29c:	tst	w0, #0xff
  40a2a0:	b.ne	40a27c <nftw@plt+0x76fc>  // b.any
  40a2a4:	mov	x0, x24
  40a2a8:	bl	42bd90 <nftw@plt+0x29210>
  40a2ac:	tst	w0, #0xff
  40a2b0:	b.ne	40a27c <nftw@plt+0x76fc>  // b.any
  40a2b4:	ldr	x1, [x21, #8]
  40a2b8:	ldr	x0, [x24, #8]
  40a2bc:	cmp	x1, x0
  40a2c0:	cset	w23, eq  // eq = none
  40a2c4:	b	40a27c <nftw@plt+0x76fc>
  40a2c8:	mov	w23, #0x1                   	// #1
  40a2cc:	mov	w0, w23
  40a2d0:	ldp	x19, x20, [sp, #16]
  40a2d4:	ldp	x21, x22, [sp, #32]
  40a2d8:	ldp	x23, x24, [sp, #48]
  40a2dc:	ldp	x29, x30, [sp], #64
  40a2e0:	ret
  40a2e4:	nop
  40a2e8:	ldr	x7, [x0, #120]
  40a2ec:	cbz	x7, 40a38c <nftw@plt+0x780c>
  40a2f0:	ldr	w9, [x7, #4]
  40a2f4:	add	x0, x7, #0x8
  40a2f8:	mov	w8, #0x0                   	// #0
  40a2fc:	cmp	w8, w9
  40a300:	b.eq	40a38c <nftw@plt+0x780c>  // b.none
  40a304:	ldr	w11, [x0, #16]
  40a308:	cmp	w11, #0x2
  40a30c:	b.eq	40a394 <nftw@plt+0x7814>  // b.none
  40a310:	stp	x29, x30, [sp, #-16]!
  40a314:	mov	x29, sp
  40a318:	ldr	w10, [x0]
  40a31c:	ldr	w12, [x0, #8]
  40a320:	cmp	w10, w12
  40a324:	b.hi	40a458 <nftw@plt+0x78d8>  // b.pmore
  40a328:	cmp	w1, w10
  40a32c:	b.cc	40a354 <nftw@plt+0x77d4>  // b.lo, b.ul, b.last
  40a330:	b.eq	40a3a0 <nftw@plt+0x7820>  // b.none
  40a334:	cmp	w1, w12
  40a338:	b.hi	40a354 <nftw@plt+0x77d4>  // b.pmore
  40a33c:	b.cc	40a404 <nftw@plt+0x7884>  // b.lo, b.ul, b.last
  40a340:	b.ne	40a440 <nftw@plt+0x78c0>  // b.any
  40a344:	ldr	w10, [x0, #12]
  40a348:	cmp	w2, w10
  40a34c:	cset	w10, le
  40a350:	cbnz	w10, 40a3b4 <nftw@plt+0x7834>
  40a354:	add	w8, w8, #0x1
  40a358:	add	x0, x0, #0x28
  40a35c:	cmp	w8, w9
  40a360:	b.eq	40a380 <nftw@plt+0x7800>  // b.none
  40a364:	ldr	w11, [x0, #16]
  40a368:	cmp	w11, #0x2
  40a36c:	b.ne	40a318 <nftw@plt+0x7798>  // b.any
  40a370:	add	w8, w8, #0x1
  40a374:	add	x0, x0, #0x28
  40a378:	cmp	w8, w9
  40a37c:	b.ne	40a364 <nftw@plt+0x77e4>  // b.any
  40a380:	mov	w0, #0x0                   	// #0
  40a384:	ldp	x29, x30, [sp], #16
  40a388:	ret
  40a38c:	mov	w0, #0x0                   	// #0
  40a390:	ret
  40a394:	add	w8, w8, #0x1
  40a398:	add	x0, x0, #0x28
  40a39c:	b	40a2fc <nftw@plt+0x777c>
  40a3a0:	ldr	w10, [x0, #4]
  40a3a4:	cmp	w2, w10
  40a3a8:	b.lt	40a354 <nftw@plt+0x77d4>  // b.tstop
  40a3ac:	cmp	w1, w12
  40a3b0:	b.cs	40a3e8 <nftw@plt+0x7868>  // b.hs, b.nlast
  40a3b4:	str	w8, [x5]
  40a3b8:	strb	wzr, [x6]
  40a3bc:	cbnz	w11, 40a3d8 <nftw@plt+0x7858>
  40a3c0:	ubfiz	x0, x8, #2, #32
  40a3c4:	add	x8, x0, w8, uxtw
  40a3c8:	add	x7, x7, x8, lsl #3
  40a3cc:	ldr	w0, [x7, #28]
  40a3d0:	cmp	w1, w0
  40a3d4:	b.eq	40a424 <nftw@plt+0x78a4>  // b.none
  40a3d8:	cmp	w2, w3
  40a3dc:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  40a3e0:	cset	w0, le
  40a3e4:	b	40a384 <nftw@plt+0x7804>
  40a3e8:	b.eq	40a344 <nftw@plt+0x77c4>  // b.none
  40a3ec:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a3f0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a3f4:	add	x2, x2, #0x280
  40a3f8:	add	x0, x0, #0x290
  40a3fc:	mov	w1, #0x1f3                 	// #499
  40a400:	bl	402bf0 <nftw@plt+0x70>
  40a404:	cmp	w10, w12
  40a408:	b.ne	40a3b4 <nftw@plt+0x7834>  // b.any
  40a40c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a410:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a414:	add	x2, x2, #0x280
  40a418:	add	x0, x0, #0x290
  40a41c:	mov	w1, #0x207                 	// #519
  40a420:	bl	402bf0 <nftw@plt+0x70>
  40a424:	ldr	w0, [x7, #32]
  40a428:	cmp	w2, w0
  40a42c:	b.ne	40a3d8 <nftw@plt+0x7858>  // b.any
  40a430:	mov	w1, #0x1                   	// #1
  40a434:	mov	w0, #0x1                   	// #1
  40a438:	strb	w1, [x6]
  40a43c:	b	40a384 <nftw@plt+0x7804>
  40a440:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a444:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a448:	add	x2, x2, #0x280
  40a44c:	add	x0, x0, #0x290
  40a450:	mov	w1, #0x20b                 	// #523
  40a454:	bl	402bf0 <nftw@plt+0x70>
  40a458:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a45c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a460:	add	x2, x2, #0x280
  40a464:	add	x0, x0, #0x290
  40a468:	mov	w1, #0x1d8                 	// #472
  40a46c:	bl	402bf0 <nftw@plt+0x70>
  40a470:	stp	x29, x30, [sp, #-48]!
  40a474:	mov	x29, sp
  40a478:	stp	x19, x20, [sp, #16]
  40a47c:	mov	x20, x0
  40a480:	ldr	w0, [x0, #144]
  40a484:	str	x21, [sp, #32]
  40a488:	mov	w19, #0x0                   	// #0
  40a48c:	cmp	w0, #0x3
  40a490:	and	w21, w1, #0xff
  40a494:	b.le	40a4b8 <nftw@plt+0x7938>
  40a498:	ldr	x0, [x20, #8]
  40a49c:	mov	w1, #0x20                  	// #32
  40a4a0:	add	w19, w19, #0x1
  40a4a4:	bl	40f3e8 <nftw@plt+0xc868>
  40a4a8:	ldr	w0, [x20, #144]
  40a4ac:	sub	w1, w0, #0x3
  40a4b0:	cmp	w1, w19
  40a4b4:	b.gt	40a498 <nftw@plt+0x7918>
  40a4b8:	cmp	w0, w19
  40a4bc:	b.le	40a4dc <nftw@plt+0x795c>
  40a4c0:	ldr	x0, [x20, #8]
  40a4c4:	mov	w1, w21
  40a4c8:	add	w19, w19, #0x1
  40a4cc:	bl	40f3e8 <nftw@plt+0xc868>
  40a4d0:	ldr	w0, [x20, #144]
  40a4d4:	cmp	w0, w19
  40a4d8:	b.gt	40a4c0 <nftw@plt+0x7940>
  40a4dc:	ldr	x0, [x20, #8]
  40a4e0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a4e4:	ldp	x19, x20, [sp, #16]
  40a4e8:	add	x1, x1, #0x2c8
  40a4ec:	ldr	x21, [sp, #32]
  40a4f0:	ldp	x29, x30, [sp], #48
  40a4f4:	b	40f9a8 <nftw@plt+0xce28>
  40a4f8:	ldr	w2, [x0]
  40a4fc:	ldr	w3, [x1]
  40a500:	subs	x2, x2, x3
  40a504:	b.ne	40a520 <nftw@plt+0x79a0>  // b.any
  40a508:	ldr	w2, [x0, #4]
  40a50c:	mov	w0, #0x0                   	// #0
  40a510:	ldr	w1, [x1, #4]
  40a514:	subs	x2, x2, x1
  40a518:	b.ne	40a520 <nftw@plt+0x79a0>  // b.any
  40a51c:	ret
  40a520:	cmp	x2, #0x1
  40a524:	mov	w0, #0x1                   	// #1
  40a528:	cneg	w0, w0, lt  // lt = tstop
  40a52c:	ret
  40a530:	ldr	w2, [x0, #4]
  40a534:	ldr	w3, [x1, #4]
  40a538:	subs	x2, x2, x3
  40a53c:	b.ne	40a558 <nftw@plt+0x79d8>  // b.any
  40a540:	ldr	w2, [x0]
  40a544:	mov	w0, #0x0                   	// #0
  40a548:	ldr	w1, [x1]
  40a54c:	subs	x2, x2, x1
  40a550:	b.ne	40a558 <nftw@plt+0x79d8>  // b.any
  40a554:	ret
  40a558:	cmp	x2, #0x1
  40a55c:	mov	w0, #0x1                   	// #1
  40a560:	cneg	w0, w0, lt  // lt = tstop
  40a564:	ret
  40a568:	stp	x29, x30, [sp, #-32]!
  40a56c:	mov	x29, sp
  40a570:	stp	x19, x20, [sp, #16]
  40a574:	mov	x20, x0
  40a578:	mov	x19, x1
  40a57c:	mov	x0, x1
  40a580:	bl	4024f0 <strlen@plt>
  40a584:	ldr	x3, [x20]
  40a588:	mov	x1, x19
  40a58c:	ldp	x19, x20, [sp, #16]
  40a590:	mov	x2, x0
  40a594:	ldp	x29, x30, [sp], #32
  40a598:	ldrb	w0, [x3, #67]
  40a59c:	b	40a030 <nftw@plt+0x74b0>
  40a5a0:	stp	x29, x30, [sp, #-48]!
  40a5a4:	mov	x29, sp
  40a5a8:	stp	x19, x20, [sp, #16]
  40a5ac:	mov	x20, x0
  40a5b0:	ldr	w0, [x0, #12]
  40a5b4:	cmp	w0, w1
  40a5b8:	b.eq	40a5e8 <nftw@plt+0x7a68>  // b.none
  40a5bc:	mov	w19, w1
  40a5c0:	cmn	w0, #0x1
  40a5c4:	b.ne	40a63c <nftw@plt+0x7abc>  // b.any
  40a5c8:	str	w19, [x20, #12]
  40a5cc:	cmp	w19, #0x0
  40a5d0:	cbz	w19, 40a6a8 <nftw@plt+0x7b28>
  40a5d4:	b.gt	40a5f4 <nftw@plt+0x7a74>
  40a5d8:	cmn	w19, #0x2
  40a5dc:	b.eq	40a690 <nftw@plt+0x7b10>  // b.none
  40a5e0:	cmn	w19, #0x1
  40a5e4:	b.ne	40a61c <nftw@plt+0x7a9c>  // b.any
  40a5e8:	ldp	x19, x20, [sp, #16]
  40a5ec:	ldp	x29, x30, [sp], #48
  40a5f0:	ret
  40a5f4:	cmp	w19, #0x1
  40a5f8:	b.eq	40a650 <nftw@plt+0x7ad0>  // b.none
  40a5fc:	cmp	w19, #0x2
  40a600:	b.ne	40a668 <nftw@plt+0x7ae8>  // b.any
  40a604:	ldr	x0, [x20]
  40a608:	ldr	x1, [x20, #24]
  40a60c:	ldp	x19, x20, [sp, #16]
  40a610:	ldp	x29, x30, [sp], #48
  40a614:	ldr	x0, [x0]
  40a618:	b	40f9a8 <nftw@plt+0xce28>
  40a61c:	cmn	w19, #0x3
  40a620:	b.ne	40a668 <nftw@plt+0x7ae8>  // b.any
  40a624:	ldr	x0, [x20]
  40a628:	ldr	x1, [x20, #40]
  40a62c:	ldp	x19, x20, [sp, #16]
  40a630:	ldp	x29, x30, [sp], #48
  40a634:	ldr	x0, [x0]
  40a638:	b	40f9a8 <nftw@plt+0xce28>
  40a63c:	ldr	x0, [x20]
  40a640:	ldr	x1, [x20, #48]
  40a644:	ldr	x0, [x0]
  40a648:	bl	40f9a8 <nftw@plt+0xce28>
  40a64c:	b	40a5c8 <nftw@plt+0x7a48>
  40a650:	ldr	x0, [x20]
  40a654:	ldr	x1, [x20, #16]
  40a658:	ldp	x19, x20, [sp, #16]
  40a65c:	ldp	x29, x30, [sp], #48
  40a660:	ldr	x0, [x0]
  40a664:	b	40f9a8 <nftw@plt+0xce28>
  40a668:	cmp	w19, #0x2
  40a66c:	b.le	40a6f0 <nftw@plt+0x7b70>
  40a670:	ldr	x0, [x20]
  40a674:	tst	x19, #0x1
  40a678:	ldp	x2, x1, [x20, #16]
  40a67c:	ldp	x19, x20, [sp, #16]
  40a680:	ldp	x29, x30, [sp], #48
  40a684:	ldr	x0, [x0]
  40a688:	csel	x1, x2, x1, ne  // ne = any
  40a68c:	b	40f9a8 <nftw@plt+0xce28>
  40a690:	ldr	x0, [x20]
  40a694:	ldr	x1, [x20, #32]
  40a698:	ldp	x19, x20, [sp, #16]
  40a69c:	ldp	x29, x30, [sp], #48
  40a6a0:	ldr	x0, [x0]
  40a6a4:	b	40f9a8 <nftw@plt+0xce28>
  40a6a8:	ldr	x1, [x20]
  40a6ac:	ldr	w0, [x20, #8]
  40a6b0:	ldr	x20, [x1]
  40a6b4:	str	x21, [sp, #32]
  40a6b8:	ldrb	w21, [x20, #67]
  40a6bc:	bl	407670 <nftw@plt+0x4af0>
  40a6c0:	mov	x19, x0
  40a6c4:	bl	4024f0 <strlen@plt>
  40a6c8:	mov	x1, x19
  40a6cc:	mov	x2, x0
  40a6d0:	mov	w0, w21
  40a6d4:	bl	40a030 <nftw@plt+0x74b0>
  40a6d8:	mov	x1, x0
  40a6dc:	mov	x0, x20
  40a6e0:	ldp	x19, x20, [sp, #16]
  40a6e4:	ldr	x21, [sp, #32]
  40a6e8:	ldp	x29, x30, [sp], #48
  40a6ec:	b	40f9a8 <nftw@plt+0xce28>
  40a6f0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a6f4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40a6f8:	add	x2, x2, #0x2d0
  40a6fc:	add	x0, x0, #0x290
  40a700:	mov	w1, #0x17f                 	// #383
  40a704:	str	x21, [sp, #32]
  40a708:	bl	402bf0 <nftw@plt+0x70>
  40a70c:	nop
  40a710:	stp	x29, x30, [sp, #-48]!
  40a714:	mov	x29, sp
  40a718:	stp	x19, x20, [sp, #16]
  40a71c:	mov	x19, x1
  40a720:	mov	w20, w2
  40a724:	stp	x21, x22, [sp, #32]
  40a728:	mov	x21, x0
  40a72c:	ldr	w0, [x1]
  40a730:	cmp	w0, w2
  40a734:	b.gt	40a770 <nftw@plt+0x7bf0>
  40a738:	cmp	w0, w20
  40a73c:	b.ge	40a760 <nftw@plt+0x7be0>  // b.tcont
  40a740:	ldr	x0, [x21, #8]
  40a744:	mov	w1, #0x20                  	// #32
  40a748:	bl	40f3e8 <nftw@plt+0xc868>
  40a74c:	ldr	w3, [x19]
  40a750:	add	w3, w3, #0x1
  40a754:	str	w3, [x19]
  40a758:	cmp	w3, w20
  40a75c:	b.lt	40a740 <nftw@plt+0x7bc0>  // b.tstop
  40a760:	ldp	x19, x20, [sp, #16]
  40a764:	ldp	x21, x22, [sp, #32]
  40a768:	ldp	x29, x30, [sp], #48
  40a76c:	ret
  40a770:	and	w22, w3, #0xff
  40a774:	add	x0, x21, #0x38
  40a778:	mov	w1, #0xffffffff            	// #-1
  40a77c:	bl	40a5a0 <nftw@plt+0x7a20>
  40a780:	ldr	x0, [x21, #8]
  40a784:	bl	40f388 <nftw@plt+0xc808>
  40a788:	cbz	w22, 40a7a0 <nftw@plt+0x7c20>
  40a78c:	ldrb	w0, [x21, #114]
  40a790:	cbz	w0, 40a7a0 <nftw@plt+0x7c20>
  40a794:	mov	x0, x21
  40a798:	mov	w1, #0x20                  	// #32
  40a79c:	bl	40a470 <nftw@plt+0x78f0>
  40a7a0:	ldr	w0, [x21, #148]
  40a7a4:	str	w0, [x19]
  40a7a8:	b	40a738 <nftw@plt+0x7bb8>
  40a7ac:	nop
  40a7b0:	stp	x29, x30, [sp, #-224]!
  40a7b4:	mov	x29, sp
  40a7b8:	stp	x19, x20, [sp, #16]
  40a7bc:	stp	x21, x22, [sp, #32]
  40a7c0:	stp	x23, x24, [sp, #48]
  40a7c4:	stp	x25, x26, [sp, #64]
  40a7c8:	cbz	x1, 40abd8 <nftw@plt+0x8058>
  40a7cc:	and	w24, w3, #0xff
  40a7d0:	adrp	x3, 48d000 <__environ@@GLIBC_2.17+0xa68>
  40a7d4:	mov	x21, x0
  40a7d8:	mov	x19, x1
  40a7dc:	ldr	x0, [x3, #2296]
  40a7e0:	mov	w22, w2
  40a7e4:	ldr	w1, [x1]
  40a7e8:	bl	42bba0 <nftw@plt+0x29020>
  40a7ec:	mov	x20, x0
  40a7f0:	add	x8, sp, #0x80
  40a7f4:	lsr	x23, x0, #32
  40a7f8:	mov	w1, #0x1                   	// #1
  40a7fc:	bl	414628 <nftw@plt+0x11aa8>
  40a800:	mov	w0, w23
  40a804:	add	x8, sp, #0xa0
  40a808:	mov	w1, #0x2                   	// #2
  40a80c:	ldr	w25, [sp, #136]
  40a810:	bl	414628 <nftw@plt+0x11aa8>
  40a814:	ldr	w26, [sp, #168]
  40a818:	ldr	w0, [x19]
  40a81c:	mov	w1, #0x0                   	// #0
  40a820:	add	x8, sp, #0xc0
  40a824:	bl	414628 <nftw@plt+0x11aa8>
  40a828:	ldr	x3, [x21, #24]
  40a82c:	ldr	x1, [sp, #128]
  40a830:	cmp	x1, x3
  40a834:	b.eq	40a854 <nftw@plt+0x7cd4>  // b.none
  40a838:	mov	w0, #0x0                   	// #0
  40a83c:	ldp	x19, x20, [sp, #16]
  40a840:	ldp	x21, x22, [sp, #32]
  40a844:	ldp	x23, x24, [sp, #48]
  40a848:	ldp	x25, x26, [sp, #64]
  40a84c:	ldp	x29, x30, [sp], #224
  40a850:	ret
  40a854:	ldr	x0, [sp, #160]
  40a858:	cmp	x1, x0
  40a85c:	b.ne	40a838 <nftw@plt+0x7cb8>  // b.any
  40a860:	stp	x27, x28, [sp, #80]
  40a864:	ldr	w27, [x19, #4]
  40a868:	ldr	w28, [sp, #200]
  40a86c:	cbz	w27, 40a940 <nftw@plt+0x7dc0>
  40a870:	ldr	x0, [x19, #8]
  40a874:	str	x0, [sp, #104]
  40a878:	ldr	w7, [sp, #204]
  40a87c:	cmp	w25, w26
  40a880:	mov	w2, w28
  40a884:	b.le	40aa20 <nftw@plt+0x7ea0>
  40a888:	ldr	x0, [x21, #120]
  40a88c:	cbz	x0, 40aaac <nftw@plt+0x7f2c>
  40a890:	ldr	w1, [x0, #4]
  40a894:	cbnz	w1, 40a938 <nftw@plt+0x7db8>
  40a898:	cbz	w24, 40a978 <nftw@plt+0x7df8>
  40a89c:	mov	w9, w28
  40a8a0:	mov	w20, w7
  40a8a4:	mov	w24, w28
  40a8a8:	mov	w23, w7
  40a8ac:	ldr	x0, [x21, #136]
  40a8b0:	cbz	x0, 40a938 <nftw@plt+0x7db8>
  40a8b4:	add	x5, x0, #0x8
  40a8b8:	ldr	w4, [x0, #4]
  40a8bc:	mov	x0, x5
  40a8c0:	mov	w1, #0x0                   	// #0
  40a8c4:	cmp	w4, w1
  40a8c8:	b.le	40a938 <nftw@plt+0x7db8>
  40a8cc:	ldr	w2, [x0]
  40a8d0:	cmp	w2, w25
  40a8d4:	b.hi	40a9e0 <nftw@plt+0x7e60>  // b.pmore
  40a8d8:	ldr	w2, [x0, #4]
  40a8dc:	cmp	w2, w25
  40a8e0:	b.cc	40a9e0 <nftw@plt+0x7e60>  // b.lo, b.ul, b.last
  40a8e4:	mov	x0, x5
  40a8e8:	mov	w1, #0x0                   	// #0
  40a8ec:	ldr	w2, [x0]
  40a8f0:	cmp	w2, w26
  40a8f4:	b.hi	40a9ec <nftw@plt+0x7e6c>  // b.pmore
  40a8f8:	ldr	w2, [x0, #4]
  40a8fc:	cmp	w2, w26
  40a900:	b.cc	40a9ec <nftw@plt+0x7e6c>  // b.lo, b.ul, b.last
  40a904:	ldr	w0, [x19, #4]
  40a908:	cbnz	w0, 40aa74 <nftw@plt+0x7ef4>
  40a90c:	mov	w0, #0x0                   	// #0
  40a910:	ldr	w1, [x5]
  40a914:	cmp	w1, w28
  40a918:	b.hi	40a928 <nftw@plt+0x7da8>  // b.pmore
  40a91c:	ldr	w1, [x5, #4]
  40a920:	cmp	w1, w28
  40a924:	b.cs	40aa74 <nftw@plt+0x7ef4>  // b.hs, b.nlast
  40a928:	add	w0, w0, #0x1
  40a92c:	add	x5, x5, #0x8
  40a930:	cmp	w4, w0
  40a934:	b.gt	40a910 <nftw@plt+0x7d90>
  40a938:	ldp	x27, x28, [sp, #80]
  40a93c:	b	40a838 <nftw@plt+0x7cb8>
  40a940:	ldr	x0, [sp, #192]
  40a944:	cmp	x1, x0
  40a948:	b.ne	40a938 <nftw@plt+0x7db8>  // b.any
  40a94c:	ldr	x0, [x21, #120]
  40a950:	cbz	x0, 40a870 <nftw@plt+0x7cf0>
  40a954:	ldr	w27, [x0, #4]
  40a958:	cbz	w27, 40aa04 <nftw@plt+0x7e84>
  40a95c:	ldr	w0, [x19]
  40a960:	ldr	w1, [x21, #16]
  40a964:	bl	40a190 <nftw@plt+0x7610>
  40a968:	tst	w0, #0xff
  40a96c:	b.eq	40a938 <nftw@plt+0x7db8>  // b.none
  40a970:	ldr	w27, [x19, #4]
  40a974:	b	40a870 <nftw@plt+0x7cf0>
  40a978:	mov	x19, x0
  40a97c:	mov	w9, w28
  40a980:	mov	w20, w7
  40a984:	mov	w24, w28
  40a988:	mov	w23, w7
  40a98c:	ldp	w0, w25, [x19]
  40a990:	add	w26, w25, #0x1
  40a994:	ubfx	x0, x0, #0, #31
  40a998:	mov	w2, w26
  40a99c:	cmp	w0, w25
  40a9a0:	b.eq	40aacc <nftw@plt+0x7f4c>  // b.none
  40a9a4:	mov	w1, #0x28                  	// #40
  40a9a8:	mov	x4, #0x8                   	// #8
  40a9ac:	str	w2, [x19, #4]
  40a9b0:	mov	w0, #0x1                   	// #1
  40a9b4:	umaddl	x25, w25, w1, x4
  40a9b8:	ldr	x2, [sp, #104]
  40a9bc:	add	x1, x19, x25
  40a9c0:	str	w24, [x19, x25]
  40a9c4:	stp	w23, w9, [x1, #4]
  40a9c8:	stp	w20, w27, [x1, #12]
  40a9cc:	stp	w28, w7, [x1, #20]
  40a9d0:	str	w22, [x1, #28]
  40a9d4:	str	x2, [x1, #32]
  40a9d8:	ldp	x27, x28, [sp, #80]
  40a9dc:	b	40a83c <nftw@plt+0x7cbc>
  40a9e0:	add	w1, w1, #0x1
  40a9e4:	add	x0, x0, #0x8
  40a9e8:	b	40a8c4 <nftw@plt+0x7d44>
  40a9ec:	add	w1, w1, #0x1
  40a9f0:	add	x0, x0, #0x8
  40a9f4:	cmp	w4, w1
  40a9f8:	b.gt	40a8ec <nftw@plt+0x7d6c>
  40a9fc:	ldp	x27, x28, [sp, #80]
  40aa00:	b	40a838 <nftw@plt+0x7cb8>
  40aa04:	ldr	x1, [x19, #8]
  40aa08:	str	x1, [sp, #104]
  40aa0c:	ldr	w7, [sp, #204]
  40aa10:	cmp	w25, w26
  40aa14:	mov	w2, w28
  40aa18:	b.gt	40a890 <nftw@plt+0x7d10>
  40aa1c:	nop
  40aa20:	ldr	w1, [x21, #16]
  40aa24:	mov	w0, w20
  40aa28:	stp	w7, w2, [sp, #116]
  40aa2c:	ldr	w2, [sp, #140]
  40aa30:	ldr	w20, [sp, #172]
  40aa34:	str	w2, [sp, #124]
  40aa38:	bl	40a190 <nftw@plt+0x7610>
  40aa3c:	tst	w0, #0xff
  40aa40:	ldp	w7, w2, [sp, #116]
  40aa44:	b.eq	40a888 <nftw@plt+0x7d08>  // b.none
  40aa48:	ldr	w1, [x21, #16]
  40aa4c:	mov	w0, w23
  40aa50:	stp	w7, w2, [sp, #116]
  40aa54:	bl	40a190 <nftw@plt+0x7610>
  40aa58:	tst	w0, #0xff
  40aa5c:	ldr	w7, [sp, #116]
  40aa60:	b.ne	40abc4 <nftw@plt+0x8044>  // b.any
  40aa64:	ldr	w2, [sp, #120]
  40aa68:	b	40a888 <nftw@plt+0x7d08>
  40aa6c:	mov	w24, w2
  40aa70:	mov	w7, w0
  40aa74:	ldr	x19, [x21, #120]
  40aa78:	cbnz	x19, 40a98c <nftw@plt+0x7e0c>
  40aa7c:	mov	x1, #0xa8                  	// #168
  40aa80:	mov	x0, #0x0                   	// #0
  40aa84:	stp	w7, w9, [sp, #116]
  40aa88:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40aa8c:	mov	x19, x0
  40aa90:	str	x19, [x21, #120]
  40aa94:	mov	w25, #0x0                   	// #0
  40aa98:	mov	x0, #0x4                   	// #4
  40aa9c:	ldp	w7, w9, [sp, #116]
  40aaa0:	add	w2, w25, #0x1
  40aaa4:	str	x0, [x19]
  40aaa8:	b	40a9a4 <nftw@plt+0x7e24>
  40aaac:	mov	w0, w7
  40aab0:	mov	w20, w7
  40aab4:	mov	w9, w28
  40aab8:	mov	w23, w7
  40aabc:	cbz	w24, 40aa6c <nftw@plt+0x7eec>
  40aac0:	mov	w24, w2
  40aac4:	mov	w7, w0
  40aac8:	b	40a8ac <nftw@plt+0x7d2c>
  40aacc:	ldrsb	w0, [x19, #3]
  40aad0:	tbnz	w0, #31, 40ab28 <nftw@plt+0x7fa8>
  40aad4:	mov	w1, w26
  40aad8:	mov	w0, w25
  40aadc:	stp	w7, w9, [sp, #116]
  40aae0:	bl	411bd8 <nftw@plt+0xf058>
  40aae4:	mov	w1, #0x28                  	// #40
  40aae8:	mov	x4, #0x8                   	// #8
  40aaec:	and	w26, w0, #0x7fffffff
  40aaf0:	mov	w25, #0x0                   	// #0
  40aaf4:	umaddl	x1, w0, w1, x4
  40aaf8:	ldr	x0, [x21, #120]
  40aafc:	ldp	w7, w9, [sp, #116]
  40ab00:	cbz	x0, 40ab08 <nftw@plt+0x7f88>
  40ab04:	ldr	w25, [x0, #4]
  40ab08:	stp	w7, w9, [sp, #116]
  40ab0c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40ab10:	str	x0, [x21, #120]
  40ab14:	mov	x19, x0
  40ab18:	ldp	w7, w9, [sp, #116]
  40ab1c:	add	w2, w25, #0x1
  40ab20:	stp	w26, w25, [x0]
  40ab24:	b	40a9a4 <nftw@plt+0x7e24>
  40ab28:	cmp	w26, #0x4
  40ab2c:	mov	w2, #0x4                   	// #4
  40ab30:	csel	w2, w26, w2, cs  // cs = hs, nlast
  40ab34:	mov	w4, #0x28                  	// #40
  40ab38:	mov	x3, #0x8                   	// #8
  40ab3c:	str	xzr, [x21, #120]
  40ab40:	mov	x0, #0x0                   	// #0
  40ab44:	stp	w2, w7, [sp, #116]
  40ab48:	umaddl	x1, w2, w4, x3
  40ab4c:	str	w9, [sp, #124]
  40ab50:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40ab54:	str	x0, [x21, #120]
  40ab58:	ldp	w2, w7, [sp, #116]
  40ab5c:	mov	w4, #0x28                  	// #40
  40ab60:	ldr	w9, [sp, #124]
  40ab64:	mov	x3, #0x8                   	// #8
  40ab68:	and	x2, x2, #0x7fffffff
  40ab6c:	str	x2, [x0]
  40ab70:	cbz	w25, 40abb4 <nftw@plt+0x8034>
  40ab74:	sub	w10, w25, #0x1
  40ab78:	mov	x2, #0x30                  	// #48
  40ab7c:	mov	x1, x3
  40ab80:	umaddl	x10, w10, w4, x2
  40ab84:	nop
  40ab88:	add	x8, x19, x1
  40ab8c:	add	x2, x0, x1
  40ab90:	add	x1, x1, #0x28
  40ab94:	cmp	x10, x1
  40ab98:	ldp	x4, x5, [x8]
  40ab9c:	stp	x4, x5, [x2]
  40aba0:	ldp	x4, x5, [x8, #16]
  40aba4:	stp	x4, x5, [x2, #16]
  40aba8:	ldr	x4, [x8, #32]
  40abac:	str	x4, [x2, #32]
  40abb0:	b.ne	40ab88 <nftw@plt+0x8008>  // b.any
  40abb4:	mov	w2, w26
  40abb8:	mov	x19, x0
  40abbc:	str	w25, [x0, #4]
  40abc0:	b	40a9a4 <nftw@plt+0x7e24>
  40abc4:	mov	w0, w7
  40abc8:	mov	w9, w26
  40abcc:	ldr	w7, [sp, #124]
  40abd0:	mov	w2, w25
  40abd4:	b	40aab8 <nftw@plt+0x7f38>
  40abd8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40abdc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40abe0:	add	x2, x2, #0x2e0
  40abe4:	add	x0, x0, #0x290
  40abe8:	mov	w1, #0x39f                 	// #927
  40abec:	stp	x27, x28, [sp, #80]
  40abf0:	bl	402bf0 <nftw@plt+0x70>
  40abf4:	nop
  40abf8:	stp	x29, x30, [sp, #-144]!
  40abfc:	mov	x29, sp
  40ac00:	stp	x21, x22, [sp, #32]
  40ac04:	mov	x21, x0
  40ac08:	mov	x22, x1
  40ac0c:	stp	x19, x20, [sp, #16]
  40ac10:	mov	w20, w3
  40ac14:	stp	x23, x24, [sp, #48]
  40ac18:	stp	x25, x26, [sp, #64]
  40ac1c:	mov	x26, x2
  40ac20:	stp	x27, x28, [sp, #80]
  40ac24:	ldr	x0, [x1]
  40ac28:	stp	x1, x0, [x21]
  40ac2c:	mov	x0, x2
  40ac30:	mov	w1, #0x0                   	// #0
  40ac34:	bl	42cfb8 <nftw@plt+0x2a438>
  40ac38:	mov	x2, x0
  40ac3c:	add	x8, x21, #0x18
  40ac40:	mov	x0, x26
  40ac44:	mov	w1, #0x0                   	// #0
  40ac48:	ldr	w2, [x2]
  40ac4c:	str	w2, [x21, #16]
  40ac50:	bl	42cfc0 <nftw@plt+0x2a440>
  40ac54:	str	x22, [x21, #56]
  40ac58:	mov	w0, #0xffffffff            	// #-1
  40ac5c:	stp	w20, w0, [x21, #64]
  40ac60:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ac64:	mov	x0, x22
  40ac68:	add	x1, x1, #0x198
  40ac6c:	bl	40a568 <nftw@plt+0x79e8>
  40ac70:	mov	x1, x0
  40ac74:	str	x1, [x21, #72]
  40ac78:	ldr	x0, [x21, #56]
  40ac7c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ac80:	add	x1, x1, #0x1b0
  40ac84:	bl	40a568 <nftw@plt+0x79e8>
  40ac88:	mov	x1, x0
  40ac8c:	ldr	x0, [x21, #56]
  40ac90:	str	x1, [x21, #80]
  40ac94:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ac98:	add	x1, x1, #0x1e0
  40ac9c:	bl	40a568 <nftw@plt+0x79e8>
  40aca0:	mov	x1, x0
  40aca4:	ldr	x0, [x21, #56]
  40aca8:	str	x1, [x21, #88]
  40acac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40acb0:	add	x1, x1, #0x1f0
  40acb4:	bl	40a568 <nftw@plt+0x79e8>
  40acb8:	str	x0, [x21, #96]
  40acbc:	ldr	x1, [x22]
  40acc0:	ldrb	w0, [x1, #67]
  40acc4:	bl	40a0c0 <nftw@plt+0x7540>
  40acc8:	ldr	w20, [x26, #8]
  40accc:	ldrb	w1, [x22, #223]
  40acd0:	str	x0, [x21, #104]
  40acd4:	ldurh	w0, [x22, #221]
  40acd8:	strh	w0, [x21, #112]
  40acdc:	strb	w1, [x21, #114]
  40ace0:	str	xzr, [x21, #120]
  40ace4:	cbnz	w20, 40b858 <nftw@plt+0x8cd8>
  40ace8:	ldr	w19, [x26, #120]
  40acec:	str	xzr, [x21, #128]
  40acf0:	cbnz	w19, 40b838 <nftw@plt+0x8cb8>
  40acf4:	ldr	w0, [x26, #8]
  40acf8:	str	xzr, [x21, #136]
  40acfc:	adds	w19, w0, #0x1
  40ad00:	b.ne	40b814 <nftw@plt+0x8c94>  // b.any
  40ad04:	str	xzr, [x21, #144]
  40ad08:	mov	w19, #0x0                   	// #0
  40ad0c:	cbz	w0, 40ad40 <nftw@plt+0x81c0>
  40ad10:	mov	w1, w19
  40ad14:	mov	x0, x26
  40ad18:	bl	42cfb8 <nftw@plt+0x2a438>
  40ad1c:	mov	x1, x0
  40ad20:	mov	w2, w19
  40ad24:	mov	x0, x21
  40ad28:	mov	w3, #0x0                   	// #0
  40ad2c:	bl	40a7b0 <nftw@plt+0x7c30>
  40ad30:	ldr	w0, [x26, #8]
  40ad34:	add	w19, w19, #0x1
  40ad38:	cmp	w0, w19
  40ad3c:	b.hi	40ad10 <nftw@plt+0x8190>  // b.pmore
  40ad40:	ldr	w0, [x26, #120]
  40ad44:	cbz	w0, 40ae24 <nftw@plt+0x82a4>
  40ad48:	add	x19, x26, #0x78
  40ad4c:	mov	w23, #0x4                   	// #4
  40ad50:	mov	w25, #0x0                   	// #0
  40ad54:	mov	x20, #0xfffffffffffffff0    	// #-16
  40ad58:	b	40ad98 <nftw@plt+0x8218>
  40ad5c:	ldr	x0, [x19, #32]
  40ad60:	add	x1, x20, w25, sxtw #3
  40ad64:	add	x8, sp, #0x70
  40ad68:	add	x0, x0, x1
  40ad6c:	ldr	x27, [x0]
  40ad70:	ldr	w0, [x27]
  40ad74:	bl	414608 <nftw@plt+0x11a88>
  40ad78:	ldr	x0, [x21, #24]
  40ad7c:	ldr	x1, [sp, #112]
  40ad80:	cmp	x1, x0
  40ad84:	b.eq	40adcc <nftw@plt+0x824c>  // b.none
  40ad88:	ldr	w0, [x26, #120]
  40ad8c:	add	w25, w25, #0x1
  40ad90:	cmp	w25, w0
  40ad94:	b.cs	40ae24 <nftw@plt+0x82a4>  // b.hs, b.nlast
  40ad98:	cmp	w25, #0x1
  40ad9c:	sxtw	x0, w25
  40ada0:	b.gt	40ad5c <nftw@plt+0x81dc>
  40ada4:	add	x0, x0, #0x1
  40ada8:	add	x8, sp, #0x70
  40adac:	add	x0, x19, x0, lsl #3
  40adb0:	ldr	x27, [x0]
  40adb4:	ldr	w0, [x27]
  40adb8:	bl	414608 <nftw@plt+0x11a88>
  40adbc:	ldr	x0, [x21, #24]
  40adc0:	ldr	x1, [sp, #112]
  40adc4:	cmp	x1, x0
  40adc8:	b.ne	40ad88 <nftw@plt+0x8208>  // b.any
  40adcc:	ldr	w0, [x27, #4]
  40add0:	add	x8, sp, #0x70
  40add4:	bl	414608 <nftw@plt+0x11a88>
  40add8:	ldr	x0, [x21, #24]
  40addc:	ldr	x1, [sp, #112]
  40ade0:	cmp	x1, x0
  40ade4:	b.ne	40ad88 <nftw@plt+0x8208>  // b.any
  40ade8:	ldr	x28, [x21, #128]
  40adec:	cbz	x28, 40b8ec <nftw@plt+0x8d6c>
  40adf0:	ldp	w0, w24, [x28]
  40adf4:	add	w5, w24, #0x1
  40adf8:	ubfx	x0, x0, #0, #31
  40adfc:	mov	w1, w5
  40ae00:	cmp	w0, w24
  40ae04:	b.eq	40b1ec <nftw@plt+0x866c>  // b.none
  40ae08:	add	x2, x28, w24, uxtw #3
  40ae0c:	str	w1, [x28, #4]
  40ae10:	add	w25, w25, #0x1
  40ae14:	ldr	w0, [x26, #120]
  40ae18:	str	x27, [x2, #8]
  40ae1c:	cmp	w25, w0
  40ae20:	b.cc	40ad98 <nftw@plt+0x8218>  // b.lo, b.ul, b.last
  40ae24:	ldr	x0, [x21, #128]
  40ae28:	cbz	x0, 40ae38 <nftw@plt+0x82b8>
  40ae2c:	ldr	w1, [x0, #4]
  40ae30:	cmp	w1, #0x1
  40ae34:	b.hi	40b2ac <nftw@plt+0x872c>  // b.pmore
  40ae38:	ldr	x0, [x21, #136]
  40ae3c:	cbz	x0, 40ae48 <nftw@plt+0x82c8>
  40ae40:	ldr	w0, [x0, #4]
  40ae44:	cbnz	w0, 40b9b4 <nftw@plt+0x8e34>
  40ae48:	ldr	x0, [x21, #120]
  40ae4c:	cbz	x0, 40b87c <nftw@plt+0x8cfc>
  40ae50:	ldr	w20, [x0, #4]
  40ae54:	adds	w20, w20, #0x1
  40ae58:	b.ne	40b524 <nftw@plt+0x89a4>  // b.any
  40ae5c:	mov	x1, #0x28                  	// #40
  40ae60:	ldr	w26, [x21, #32]
  40ae64:	mov	x0, #0x0                   	// #0
  40ae68:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40ae6c:	mov	x19, x0
  40ae70:	mov	w1, #0x4                   	// #4
  40ae74:	str	w1, [x0]
  40ae78:	ubfiz	x1, x20, #3, #32
  40ae7c:	add	w0, w20, #0x1
  40ae80:	add	x1, x1, #0x8
  40ae84:	str	w20, [x19, #4]
  40ae88:	add	x2, x19, x1
  40ae8c:	str	w0, [x19, #4]
  40ae90:	ldr	x0, [x21, #120]
  40ae94:	str	w26, [x19, x1]
  40ae98:	str	w26, [x2, #4]
  40ae9c:	mov	w23, #0x0                   	// #0
  40aea0:	mov	w24, #0x28                  	// #40
  40aea4:	mov	w25, #0x4                   	// #4
  40aea8:	cbz	x0, 40af08 <nftw@plt+0x8388>
  40aeac:	nop
  40aeb0:	ldr	w1, [x0, #4]
  40aeb4:	cmp	w1, w23
  40aeb8:	b.ls	40af08 <nftw@plt+0x8388>  // b.plast
  40aebc:	umaddl	x1, w23, w24, x0
  40aec0:	ldr	w27, [x1, #8]
  40aec4:	ldr	w28, [x1, #16]
  40aec8:	cmp	w27, w28
  40aecc:	b.hi	40b9cc <nftw@plt+0x8e4c>  // b.pmore
  40aed0:	ldp	w1, w20, [x19]
  40aed4:	add	w26, w20, #0x1
  40aed8:	ubfx	x1, x1, #0, #31
  40aedc:	cmp	w1, w20
  40aee0:	mov	w1, w26
  40aee4:	b.eq	40b2c8 <nftw@plt+0x8748>  // b.none
  40aee8:	ubfiz	x20, x20, #3, #32
  40aeec:	str	w1, [x19, #4]
  40aef0:	add	x20, x20, #0x8
  40aef4:	add	w23, w23, #0x1
  40aef8:	add	x1, x19, x20
  40aefc:	str	w27, [x19, x20]
  40af00:	str	w28, [x1, #4]
  40af04:	cbnz	x0, 40aeb0 <nftw@plt+0x8330>
  40af08:	ldr	x2, [x21, #128]
  40af0c:	cbz	x2, 40afac <nftw@plt+0x842c>
  40af10:	mov	w25, #0x0                   	// #0
  40af14:	mov	w23, #0x4                   	// #4
  40af18:	ldr	w0, [x2, #4]
  40af1c:	cmp	w0, w25
  40af20:	b.ls	40afac <nftw@plt+0x842c>  // b.plast
  40af24:	add	x2, x2, w25, uxtw #3
  40af28:	ldr	x20, [x2, #8]
  40af2c:	cbz	x20, 40b954 <nftw@plt+0x8dd4>
  40af30:	ldr	w0, [x20]
  40af34:	add	x8, sp, #0x70
  40af38:	bl	414608 <nftw@plt+0x11a88>
  40af3c:	ldr	w24, [sp, #120]
  40af40:	mov	x0, x20
  40af44:	bl	42d688 <nftw@plt+0x2ab08>
  40af48:	tst	w0, #0xff
  40af4c:	ldr	w0, [x20, #4]
  40af50:	ccmp	w24, #0x1, #0x4, ne  // ne = any
  40af54:	add	x8, sp, #0x70
  40af58:	cset	w1, gt
  40af5c:	sub	w24, w24, w1
  40af60:	bl	414608 <nftw@plt+0x11a88>
  40af64:	ldr	w27, [sp, #120]
  40af68:	cmp	w27, w24
  40af6c:	b.cc	40b96c <nftw@plt+0x8dec>  // b.lo, b.ul, b.last
  40af70:	ldp	w0, w20, [x19]
  40af74:	add	w26, w20, #0x1
  40af78:	ubfx	x0, x0, #0, #31
  40af7c:	mov	w1, w26
  40af80:	cmp	w0, w20
  40af84:	b.eq	40b390 <nftw@plt+0x8810>  // b.none
  40af88:	ubfiz	x0, x20, #3, #32
  40af8c:	add	w25, w25, #0x1
  40af90:	add	x0, x0, #0x8
  40af94:	ldr	x2, [x21, #128]
  40af98:	str	w1, [x19, #4]
  40af9c:	add	x1, x19, x0
  40afa0:	str	w24, [x19, x0]
  40afa4:	str	w27, [x1, #4]
  40afa8:	cbnz	x2, 40af18 <nftw@plt+0x8398>
  40afac:	ldr	w1, [x19, #4]
  40afb0:	cmp	w1, #0x1
  40afb4:	b.hi	40b370 <nftw@plt+0x87f0>  // b.pmore
  40afb8:	cbz	w1, 40b984 <nftw@plt+0x8e04>
  40afbc:	ldr	x20, [x21, #136]
  40afc0:	cbz	x20, 40b914 <nftw@plt+0x8d94>
  40afc4:	ldp	w0, w23, [x20]
  40afc8:	add	w24, w23, #0x1
  40afcc:	ubfx	x0, x0, #0, #31
  40afd0:	mov	w1, w24
  40afd4:	cmp	w0, w23
  40afd8:	b.eq	40b4dc <nftw@plt+0x895c>  // b.none
  40afdc:	add	x23, x20, w23, uxtw #3
  40afe0:	ldr	x0, [x19, #8]
  40afe4:	str	w1, [x20, #4]
  40afe8:	str	x0, [x23, #8]
  40afec:	ldr	w6, [x19, #4]
  40aff0:	cmp	w6, #0x1
  40aff4:	b.ls	40b0a4 <nftw@plt+0x8524>  // b.plast
  40aff8:	mov	w23, #0x1                   	// #1
  40affc:	mov	w24, #0x4                   	// #4
  40b000:	b	40b024 <nftw@plt+0x84a4>
  40b004:	ldr	w0, [x4, #12]
  40b008:	cmp	w0, w3
  40b00c:	b.ls	40b018 <nftw@plt+0x8498>  // b.plast
  40b010:	str	w0, [x1, #12]
  40b014:	ldr	w6, [x19, #4]
  40b018:	add	w23, w23, #0x1
  40b01c:	cmp	w6, w23
  40b020:	b.ls	40b0a4 <nftw@plt+0x8524>  // b.plast
  40b024:	ldr	w26, [x20, #4]
  40b028:	add	x4, x19, w23, uxtw #3
  40b02c:	mov	w27, w23
  40b030:	sub	w25, w26, #0x1
  40b034:	ldr	w2, [x4, #8]
  40b038:	add	x1, x20, x25, lsl #3
  40b03c:	ldr	w0, [x1, #8]
  40b040:	cmp	w2, w0
  40b044:	b.cc	40b99c <nftw@plt+0x8e1c>  // b.lo, b.ul, b.last
  40b048:	ldr	w3, [x1, #12]
  40b04c:	ldrb	w5, [x21, #114]
  40b050:	mov	w0, w3
  40b054:	add	x0, x0, #0x1
  40b058:	add	x0, x0, x5
  40b05c:	cmp	x0, w2, uxtw
  40b060:	b.ge	40b004 <nftw@plt+0x8484>  // b.tcont
  40b064:	ldr	w0, [x20]
  40b068:	add	w3, w26, #0x1
  40b06c:	mov	w1, w3
  40b070:	mov	w28, w26
  40b074:	ubfx	x0, x0, #0, #31
  40b078:	cmp	w0, w26
  40b07c:	b.eq	40b42c <nftw@plt+0x88ac>  // b.none
  40b080:	add	x27, x27, #0x1
  40b084:	add	x28, x20, w28, uxtw #3
  40b088:	add	w23, w23, #0x1
  40b08c:	ldr	x0, [x19, x27, lsl #3]
  40b090:	str	w1, [x20, #4]
  40b094:	str	x0, [x28, #8]
  40b098:	ldr	w6, [x19, #4]
  40b09c:	cmp	w6, w23
  40b0a0:	b.hi	40b024 <nftw@plt+0x84a4>  // b.pmore
  40b0a4:	ldr	w5, [x20, #4]
  40b0a8:	cbz	w5, 40ba14 <nftw@plt+0x8e94>
  40b0ac:	cmp	w5, #0x1
  40b0b0:	b.ls	40b100 <nftw@plt+0x8580>  // b.plast
  40b0b4:	sub	w5, w5, #0x2
  40b0b8:	add	x0, x20, #0x10
  40b0bc:	add	x2, x20, #0x8
  40b0c0:	add	x5, x0, w5, uxtw #3
  40b0c4:	nop
  40b0c8:	ldp	w3, w0, [x2]
  40b0cc:	cmp	w3, w0
  40b0d0:	b.hi	40ba2c <nftw@plt+0x8eac>  // b.pmore
  40b0d4:	ldp	w1, w4, [x2, #8]
  40b0d8:	cmp	w1, w4
  40b0dc:	b.hi	40ba44 <nftw@plt+0x8ec4>  // b.pmore
  40b0e0:	cmp	w3, w1
  40b0e4:	b.cs	40ba5c <nftw@plt+0x8edc>  // b.hs, b.nlast
  40b0e8:	add	w0, w0, #0x1
  40b0ec:	cmp	w1, w0
  40b0f0:	b.ls	40b9e4 <nftw@plt+0x8e64>  // b.plast
  40b0f4:	add	x2, x2, #0x8
  40b0f8:	cmp	x5, x2
  40b0fc:	b.ne	40b0c8 <nftw@plt+0x8548>  // b.any
  40b100:	ldrsb	w0, [x19, #3]
  40b104:	tbnz	w0, #31, 40b588 <nftw@plt+0x8a08>
  40b108:	mov	x0, x19
  40b10c:	bl	402910 <free@plt>
  40b110:	ldr	x1, [x21, #136]
  40b114:	cbz	x1, 40b9fc <nftw@plt+0x8e7c>
  40b118:	ldr	w0, [x1, #4]
  40b11c:	cbz	w0, 40b9fc <nftw@plt+0x8e7c>
  40b120:	sub	w0, w0, #0x1
  40b124:	add	x0, x1, x0, lsl #3
  40b128:	ldr	w0, [x0, #12]
  40b12c:	cmp	w0, #0x0
  40b130:	csel	w0, w0, wzr, ge  // ge = tcont
  40b134:	bl	409488 <nftw@plt+0x6908>
  40b138:	str	w0, [x21, #144]
  40b13c:	ldr	x1, [x21, #136]
  40b140:	mov	w2, w0
  40b144:	cbz	x1, 40b160 <nftw@plt+0x85e0>
  40b148:	ldr	w0, [x1, #4]
  40b14c:	cmp	w0, #0x1
  40b150:	b.ls	40b160 <nftw@plt+0x85e0>  // b.plast
  40b154:	cmp	w2, #0x3
  40b158:	mov	w0, #0x3                   	// #3
  40b15c:	csel	w2, w2, w0, ge  // ge = tcont
  40b160:	ldr	w1, [x22, #224]
  40b164:	ldr	x4, [x21]
  40b168:	cmp	w1, w2
  40b16c:	sub	w3, w1, #0x1
  40b170:	ldr	w1, [x21, #32]
  40b174:	ldr	x0, [x21, #24]
  40b178:	csel	w2, w3, w2, gt
  40b17c:	str	w2, [x21, #144]
  40b180:	ldrsw	x19, [x4, #112]
  40b184:	bl	4143a8 <nftw@plt+0x11828>
  40b188:	cbz	x0, 40b1c8 <nftw@plt+0x8648>
  40b18c:	ldrsw	x0, [x21, #36]
  40b190:	cmp	x1, x0
  40b194:	b.cc	40b1c8 <nftw@plt+0x8648>  // b.lo, b.ul, b.last
  40b198:	ldrb	w2, [x21, #114]
  40b19c:	cbnz	w2, 40b8a4 <nftw@plt+0x8d24>
  40b1a0:	sub	x2, x1, x0
  40b1a4:	mov	x3, #0xa                   	// #10
  40b1a8:	cmp	x2, x3
  40b1ac:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  40b1b0:	sub	x2, x19, x2
  40b1b4:	cmp	x0, x2
  40b1b8:	ccmp	x1, x19, #0x0, hi  // hi = pmore
  40b1bc:	b.cs	40b8e0 <nftw@plt+0x8d60>  // b.hs, b.nlast
  40b1c0:	ldr	w0, [x21, #148]
  40b1c4:	tbnz	w0, #31, 40b93c <nftw@plt+0x8dbc>
  40b1c8:	ldrb	w0, [x22, #228]
  40b1cc:	cbnz	w0, 40b594 <nftw@plt+0x8a14>
  40b1d0:	ldp	x19, x20, [sp, #16]
  40b1d4:	ldp	x21, x22, [sp, #32]
  40b1d8:	ldp	x23, x24, [sp, #48]
  40b1dc:	ldp	x25, x26, [sp, #64]
  40b1e0:	ldp	x27, x28, [sp, #80]
  40b1e4:	ldp	x29, x30, [sp], #144
  40b1e8:	ret
  40b1ec:	ldrsb	w0, [x28, #3]
  40b1f0:	tbnz	w0, #31, 40b23c <nftw@plt+0x86bc>
  40b1f4:	mov	w0, w24
  40b1f8:	bl	411bd8 <nftw@plt+0xf058>
  40b1fc:	mov	w2, w0
  40b200:	mov	w24, #0x0                   	// #0
  40b204:	ubfiz	x1, x2, #3, #32
  40b208:	and	w2, w0, #0x7fffffff
  40b20c:	ldr	x0, [x21, #128]
  40b210:	add	x1, x1, #0x8
  40b214:	cbz	x0, 40b21c <nftw@plt+0x869c>
  40b218:	ldr	w24, [x0, #4]
  40b21c:	str	w2, [sp, #104]
  40b220:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b224:	ldr	w2, [sp, #104]
  40b228:	mov	x28, x0
  40b22c:	str	x0, [x21, #128]
  40b230:	add	w1, w24, #0x1
  40b234:	stp	w2, w24, [x0]
  40b238:	b	40ae08 <nftw@plt+0x8288>
  40b23c:	cmp	w5, #0x4
  40b240:	str	xzr, [x21, #128]
  40b244:	csel	w1, w5, w23, cs  // cs = hs, nlast
  40b248:	csel	w3, w5, w23, cs  // cs = hs, nlast
  40b24c:	add	x1, x1, #0x1
  40b250:	mov	x0, #0x0                   	// #0
  40b254:	stp	w3, w5, [sp, #104]
  40b258:	lsl	x1, x1, #3
  40b25c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b260:	ldp	w3, w5, [sp, #104]
  40b264:	str	x0, [x21, #128]
  40b268:	and	x3, x3, #0x7fffffff
  40b26c:	str	x3, [x0]
  40b270:	cbz	w24, 40b29c <nftw@plt+0x871c>
  40b274:	sub	w4, w24, #0x1
  40b278:	mov	x1, #0x8                   	// #8
  40b27c:	add	x4, x4, #0x2
  40b280:	lsl	x4, x4, #3
  40b284:	nop
  40b288:	ldr	x3, [x28, x1]
  40b28c:	str	x3, [x0, x1]
  40b290:	add	x1, x1, #0x8
  40b294:	cmp	x4, x1
  40b298:	b.ne	40b288 <nftw@plt+0x8708>  // b.any
  40b29c:	mov	w1, w5
  40b2a0:	mov	x28, x0
  40b2a4:	str	w24, [x0, #4]
  40b2a8:	b	40ae08 <nftw@plt+0x8288>
  40b2ac:	mov	w1, w1
  40b2b0:	add	x0, x0, #0x8
  40b2b4:	adrp	x3, 40a000 <nftw@plt+0x7480>
  40b2b8:	mov	x2, #0x8                   	// #8
  40b2bc:	add	x3, x3, #0x178
  40b2c0:	bl	416cd0 <nftw@plt+0x14150>
  40b2c4:	b	40ae38 <nftw@plt+0x82b8>
  40b2c8:	ldrsb	w0, [x19, #3]
  40b2cc:	tbnz	w0, #31, 40b308 <nftw@plt+0x8788>
  40b2d0:	mov	w0, w20
  40b2d4:	bl	411bd8 <nftw@plt+0xf058>
  40b2d8:	mov	w26, w0
  40b2dc:	ldr	w20, [x19, #4]
  40b2e0:	mov	x0, x19
  40b2e4:	ubfiz	x1, x26, #3, #32
  40b2e8:	and	w26, w26, #0x7fffffff
  40b2ec:	add	x1, x1, #0x8
  40b2f0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b2f4:	mov	x19, x0
  40b2f8:	add	w1, w20, #0x1
  40b2fc:	ldr	x0, [x21, #120]
  40b300:	stp	w26, w20, [x19]
  40b304:	b	40aee8 <nftw@plt+0x8368>
  40b308:	cmp	w26, #0x4
  40b30c:	mov	x0, #0x0                   	// #0
  40b310:	csel	w2, w26, w25, cs  // cs = hs, nlast
  40b314:	csel	w1, w26, w25, cs  // cs = hs, nlast
  40b318:	add	x1, x1, #0x1
  40b31c:	str	w2, [sp, #104]
  40b320:	lsl	x1, x1, #3
  40b324:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b328:	ldr	w2, [sp, #104]
  40b32c:	and	x2, x2, #0x7fffffff
  40b330:	str	x2, [x0]
  40b334:	cbz	w20, 40b35c <nftw@plt+0x87dc>
  40b338:	sub	w2, w20, #0x1
  40b33c:	mov	x1, #0x8                   	// #8
  40b340:	add	x2, x2, #0x2
  40b344:	lsl	x2, x2, #3
  40b348:	ldr	x3, [x19, x1]
  40b34c:	str	x3, [x0, x1]
  40b350:	add	x1, x1, #0x8
  40b354:	cmp	x2, x1
  40b358:	b.ne	40b348 <nftw@plt+0x87c8>  // b.any
  40b35c:	mov	x19, x0
  40b360:	mov	w1, w26
  40b364:	str	w20, [x0, #4]
  40b368:	ldr	x0, [x21, #120]
  40b36c:	b	40aee8 <nftw@plt+0x8368>
  40b370:	mov	w1, w1
  40b374:	mov	x2, #0x8                   	// #8
  40b378:	adrp	x3, 40a000 <nftw@plt+0x7480>
  40b37c:	add	x0, x19, x2
  40b380:	add	x3, x3, #0x4f8
  40b384:	bl	416cd0 <nftw@plt+0x14150>
  40b388:	ldr	w1, [x19, #4]
  40b38c:	b	40afb8 <nftw@plt+0x8438>
  40b390:	ldrsb	w0, [x19, #3]
  40b394:	tbnz	w0, #31, 40b3cc <nftw@plt+0x884c>
  40b398:	mov	w0, w20
  40b39c:	bl	411bd8 <nftw@plt+0xf058>
  40b3a0:	mov	w26, w0
  40b3a4:	ldr	w20, [x19, #4]
  40b3a8:	mov	x0, x19
  40b3ac:	ubfiz	x1, x26, #3, #32
  40b3b0:	and	w26, w26, #0x7fffffff
  40b3b4:	add	x1, x1, #0x8
  40b3b8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b3bc:	add	w1, w20, #0x1
  40b3c0:	mov	x19, x0
  40b3c4:	stp	w26, w20, [x0]
  40b3c8:	b	40af88 <nftw@plt+0x8408>
  40b3cc:	cmp	w26, #0x4
  40b3d0:	mov	x0, #0x0                   	// #0
  40b3d4:	csel	w1, w26, w23, cs  // cs = hs, nlast
  40b3d8:	csel	w28, w26, w23, cs  // cs = hs, nlast
  40b3dc:	add	x1, x1, #0x1
  40b3e0:	and	x28, x28, #0x7fffffff
  40b3e4:	lsl	x1, x1, #3
  40b3e8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b3ec:	str	x28, [x0]
  40b3f0:	cbz	w20, 40b41c <nftw@plt+0x889c>
  40b3f4:	sub	w2, w20, #0x1
  40b3f8:	mov	x1, #0x8                   	// #8
  40b3fc:	add	x2, x2, #0x2
  40b400:	lsl	x2, x2, #3
  40b404:	nop
  40b408:	ldr	x3, [x19, x1]
  40b40c:	str	x3, [x0, x1]
  40b410:	add	x1, x1, #0x8
  40b414:	cmp	x1, x2
  40b418:	b.ne	40b408 <nftw@plt+0x8888>  // b.any
  40b41c:	mov	w1, w26
  40b420:	mov	x19, x0
  40b424:	str	w20, [x0, #4]
  40b428:	b	40af88 <nftw@plt+0x8408>
  40b42c:	ldrsb	w0, [x20, #3]
  40b430:	tbnz	w0, #31, 40b474 <nftw@plt+0x88f4>
  40b434:	mov	w0, w26
  40b438:	bl	411bd8 <nftw@plt+0xf058>
  40b43c:	mov	w25, w0
  40b440:	mov	w28, #0x0                   	// #0
  40b444:	ldr	x0, [x21, #136]
  40b448:	ubfiz	x1, x25, #3, #32
  40b44c:	add	x1, x1, #0x8
  40b450:	cbz	x0, 40b458 <nftw@plt+0x88d8>
  40b454:	ldr	w28, [x0, #4]
  40b458:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b45c:	str	x0, [x21, #136]
  40b460:	and	w25, w25, #0x7fffffff
  40b464:	mov	x20, x0
  40b468:	add	w1, w28, #0x1
  40b46c:	stp	w25, w28, [x0]
  40b470:	b	40b080 <nftw@plt+0x8500>
  40b474:	cmp	w3, #0x4
  40b478:	str	xzr, [x21, #136]
  40b47c:	csel	w1, w3, w24, cs  // cs = hs, nlast
  40b480:	csel	w2, w3, w24, cs  // cs = hs, nlast
  40b484:	add	x1, x1, #0x1
  40b488:	mov	x0, #0x0                   	// #0
  40b48c:	stp	w2, w3, [sp, #104]
  40b490:	add	x25, x25, #0x2
  40b494:	lsl	x1, x1, #3
  40b498:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b49c:	ldp	w2, w3, [sp, #104]
  40b4a0:	str	x0, [x21, #136]
  40b4a4:	lsl	x25, x25, #3
  40b4a8:	mov	x1, #0x8                   	// #8
  40b4ac:	and	x2, x2, #0x7fffffff
  40b4b0:	str	x2, [x0]
  40b4b4:	cbz	w26, 40b4cc <nftw@plt+0x894c>
  40b4b8:	ldr	x2, [x20, x1]
  40b4bc:	str	x2, [x0, x1]
  40b4c0:	add	x1, x1, #0x8
  40b4c4:	cmp	x25, x1
  40b4c8:	b.ne	40b4b8 <nftw@plt+0x8938>  // b.any
  40b4cc:	mov	w1, w3
  40b4d0:	mov	x20, x0
  40b4d4:	str	w26, [x0, #4]
  40b4d8:	b	40b080 <nftw@plt+0x8500>
  40b4dc:	ldrsb	w0, [x20, #3]
  40b4e0:	tbnz	w0, #31, 40b7a8 <nftw@plt+0x8c28>
  40b4e4:	mov	w0, w23
  40b4e8:	bl	411bd8 <nftw@plt+0xf058>
  40b4ec:	mov	w2, w0
  40b4f0:	and	w24, w0, #0x7fffffff
  40b4f4:	ldr	x0, [x21, #136]
  40b4f8:	ubfiz	x1, x2, #3, #32
  40b4fc:	add	x1, x1, #0x8
  40b500:	mov	w23, #0x0                   	// #0
  40b504:	cbz	x0, 40b50c <nftw@plt+0x898c>
  40b508:	ldr	w23, [x0, #4]
  40b50c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b510:	str	x0, [x21, #136]
  40b514:	mov	x20, x0
  40b518:	add	w1, w23, #0x1
  40b51c:	stp	w24, w23, [x0]
  40b520:	b	40afdc <nftw@plt+0x845c>
  40b524:	ubfiz	x1, x20, #3, #32
  40b528:	mov	x0, #0x0                   	// #0
  40b52c:	add	x1, x1, #0x8
  40b530:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b534:	and	x1, x20, #0x7fffffff
  40b538:	str	x1, [x0]
  40b53c:	mov	x19, x0
  40b540:	tst	x20, #0x7fffffff
  40b544:	ldr	w26, [x21, #32]
  40b548:	b.ne	40b8d4 <nftw@plt+0x8d54>  // b.any
  40b54c:	ldrsb	w0, [x0, #3]
  40b550:	tbnz	w0, #31, 40b784 <nftw@plt+0x8c04>
  40b554:	mov	w1, #0x1                   	// #1
  40b558:	mov	w0, #0x0                   	// #0
  40b55c:	bl	411bd8 <nftw@plt+0xf058>
  40b560:	mov	w23, w0
  40b564:	ldr	w20, [x19, #4]
  40b568:	mov	x0, x19
  40b56c:	ubfiz	x1, x23, #3, #32
  40b570:	and	w23, w23, #0x7fffffff
  40b574:	add	x1, x1, #0x8
  40b578:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b57c:	mov	x19, x0
  40b580:	str	w23, [x0]
  40b584:	b	40ae78 <nftw@plt+0x82f8>
  40b588:	ldr	x1, [x21, #136]
  40b58c:	str	wzr, [x19, #4]
  40b590:	b	40b118 <nftw@plt+0x8598>
  40b594:	ldr	w23, [x21, #148]
  40b598:	ldrb	w0, [x21, #114]
  40b59c:	add	w23, w23, w19
  40b5a0:	cmp	w23, #0x63
  40b5a4:	b.le	40b664 <nftw@plt+0x8ae4>
  40b5a8:	cbz	w0, 40b5b8 <nftw@plt+0x8a38>
  40b5ac:	mov	x0, x21
  40b5b0:	mov	w1, #0x20                  	// #32
  40b5b4:	bl	40a470 <nftw@plt+0x78f0>
  40b5b8:	ldr	x0, [x21, #8]
  40b5bc:	mov	w1, #0x20                  	// #32
  40b5c0:	add	w19, w23, #0x1
  40b5c4:	bl	40f3e8 <nftw@plt+0xc868>
  40b5c8:	ldr	w25, [x21, #148]
  40b5cc:	add	w25, w25, #0x1
  40b5d0:	cmp	w23, w25
  40b5d4:	b.lt	40b658 <nftw@plt+0x8ad8>  // b.tstop
  40b5d8:	mov	w20, #0xcccd                	// #52429
  40b5dc:	mov	w26, #0x9998                	// #39320
  40b5e0:	mov	w24, #0x851f                	// #34079
  40b5e4:	mov	w22, #0x6667                	// #26215
  40b5e8:	movk	w20, #0xcccc, lsl #16
  40b5ec:	movk	w26, #0x1999, lsl #16
  40b5f0:	movk	w24, #0x51eb, lsl #16
  40b5f4:	movk	w22, #0x6666, lsl #16
  40b5f8:	b	40b630 <nftw@plt+0x8ab0>
  40b5fc:	smull	x1, w25, w24
  40b600:	asr	x1, x1, #37
  40b604:	sub	w2, w1, w25, asr #31
  40b608:	add	w25, w25, #0x1
  40b60c:	smull	x1, w2, w22
  40b610:	asr	x1, x1, #34
  40b614:	sub	w1, w1, w2, asr #31
  40b618:	add	w1, w1, w1, lsl #2
  40b61c:	sub	w1, w2, w1, lsl #1
  40b620:	add	w1, w1, #0x30
  40b624:	bl	40f3e8 <nftw@plt+0xc868>
  40b628:	cmp	w19, w25
  40b62c:	b.eq	40b658 <nftw@plt+0x8ad8>  // b.none
  40b630:	madd	w1, w25, w20, w26
  40b634:	ldr	x0, [x21, #8]
  40b638:	ror	w1, w1, #1
  40b63c:	cmp	w1, w26
  40b640:	b.ls	40b5fc <nftw@plt+0x8a7c>  // b.plast
  40b644:	add	w25, w25, #0x1
  40b648:	mov	w1, #0x20                  	// #32
  40b64c:	bl	40f3e8 <nftw@plt+0xc868>
  40b650:	cmp	w19, w25
  40b654:	b.ne	40b630 <nftw@plt+0x8ab0>  // b.any
  40b658:	ldr	x0, [x21, #8]
  40b65c:	bl	40f388 <nftw@plt+0xc808>
  40b660:	ldrb	w0, [x21, #114]
  40b664:	cbnz	w0, 40b8c4 <nftw@plt+0x8d44>
  40b668:	ldr	x0, [x21, #8]
  40b66c:	mov	w1, #0x20                  	// #32
  40b670:	add	w20, w23, #0x1
  40b674:	bl	40f3e8 <nftw@plt+0xc868>
  40b678:	ldr	w19, [x21, #148]
  40b67c:	add	w19, w19, #0x1
  40b680:	cmp	w23, w19
  40b684:	b.lt	40b700 <nftw@plt+0x8b80>  // b.tstop
  40b688:	mov	w22, #0xcccd                	// #52429
  40b68c:	mov	w25, #0x9998                	// #39320
  40b690:	mov	w24, #0x6667                	// #26215
  40b694:	movk	w22, #0xcccc, lsl #16
  40b698:	movk	w25, #0x1999, lsl #16
  40b69c:	movk	w24, #0x6666, lsl #16
  40b6a0:	b	40b6d8 <nftw@plt+0x8b58>
  40b6a4:	smull	x1, w19, w24
  40b6a8:	asr	x1, x1, #34
  40b6ac:	sub	w2, w1, w19, asr #31
  40b6b0:	add	w19, w19, #0x1
  40b6b4:	smull	x1, w2, w24
  40b6b8:	asr	x1, x1, #34
  40b6bc:	sub	w1, w1, w2, asr #31
  40b6c0:	add	w1, w1, w1, lsl #2
  40b6c4:	sub	w1, w2, w1, lsl #1
  40b6c8:	add	w1, w1, #0x30
  40b6cc:	bl	40f3e8 <nftw@plt+0xc868>
  40b6d0:	cmp	w20, w19
  40b6d4:	b.eq	40b700 <nftw@plt+0x8b80>  // b.none
  40b6d8:	madd	w1, w19, w22, w25
  40b6dc:	ldr	x0, [x21, #8]
  40b6e0:	ror	w1, w1, #1
  40b6e4:	cmp	w1, w25
  40b6e8:	b.ls	40b6a4 <nftw@plt+0x8b24>  // b.plast
  40b6ec:	add	w19, w19, #0x1
  40b6f0:	mov	w1, #0x20                  	// #32
  40b6f4:	bl	40f3e8 <nftw@plt+0xc868>
  40b6f8:	cmp	w20, w19
  40b6fc:	b.ne	40b6d8 <nftw@plt+0x8b58>  // b.any
  40b700:	ldr	x0, [x21, #8]
  40b704:	bl	40f388 <nftw@plt+0xc808>
  40b708:	ldrb	w0, [x21, #114]
  40b70c:	cbnz	w0, 40b8b4 <nftw@plt+0x8d34>
  40b710:	ldr	x0, [x21, #8]
  40b714:	mov	w1, #0x20                  	// #32
  40b718:	mov	w20, #0x6667                	// #26215
  40b71c:	add	w22, w23, #0x1
  40b720:	movk	w20, #0x6666, lsl #16
  40b724:	bl	40f3e8 <nftw@plt+0xc868>
  40b728:	ldr	w19, [x21, #148]
  40b72c:	add	w19, w19, #0x1
  40b730:	cmp	w23, w19
  40b734:	b.lt	40b764 <nftw@plt+0x8be4>  // b.tstop
  40b738:	smull	x1, w19, w20
  40b73c:	ldr	x0, [x21, #8]
  40b740:	asr	x1, x1, #34
  40b744:	sub	w1, w1, w19, asr #31
  40b748:	add	w1, w1, w1, lsl #2
  40b74c:	sub	w1, w19, w1, lsl #1
  40b750:	add	w19, w19, #0x1
  40b754:	add	w1, w1, #0x30
  40b758:	bl	40f3e8 <nftw@plt+0xc868>
  40b75c:	cmp	w22, w19
  40b760:	b.ne	40b738 <nftw@plt+0x8bb8>  // b.any
  40b764:	ldr	x0, [x21, #8]
  40b768:	ldp	x19, x20, [sp, #16]
  40b76c:	ldp	x21, x22, [sp, #32]
  40b770:	ldp	x23, x24, [sp, #48]
  40b774:	ldp	x25, x26, [sp, #64]
  40b778:	ldp	x27, x28, [sp, #80]
  40b77c:	ldp	x29, x30, [sp], #144
  40b780:	b	40f388 <nftw@plt+0xc808>
  40b784:	mov	x1, #0x28                  	// #40
  40b788:	mov	x0, #0x0                   	// #0
  40b78c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b790:	mov	x19, x0
  40b794:	mov	x2, #0x4                   	// #4
  40b798:	mov	x1, #0x8                   	// #8
  40b79c:	mov	w0, #0x1                   	// #1
  40b7a0:	str	x2, [x19]
  40b7a4:	b	40ae88 <nftw@plt+0x8308>
  40b7a8:	cmp	w24, #0x4
  40b7ac:	mov	w0, #0x4                   	// #4
  40b7b0:	csel	w1, w24, w0, cs  // cs = hs, nlast
  40b7b4:	str	xzr, [x21, #136]
  40b7b8:	add	x1, x1, #0x1
  40b7bc:	csel	w25, w24, w0, cs  // cs = hs, nlast
  40b7c0:	mov	x0, #0x0                   	// #0
  40b7c4:	and	x25, x25, #0x7fffffff
  40b7c8:	lsl	x1, x1, #3
  40b7cc:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b7d0:	str	x0, [x21, #136]
  40b7d4:	str	x25, [x0]
  40b7d8:	cbz	w23, 40b804 <nftw@plt+0x8c84>
  40b7dc:	sub	w3, w23, #0x1
  40b7e0:	mov	x1, #0x8                   	// #8
  40b7e4:	add	x3, x3, #0x2
  40b7e8:	lsl	x3, x3, #3
  40b7ec:	nop
  40b7f0:	ldr	x2, [x20, x1]
  40b7f4:	str	x2, [x0, x1]
  40b7f8:	add	x1, x1, #0x8
  40b7fc:	cmp	x3, x1
  40b800:	b.ne	40b7f0 <nftw@plt+0x8c70>  // b.any
  40b804:	mov	w1, w24
  40b808:	mov	x20, x0
  40b80c:	str	w23, [x0, #4]
  40b810:	b	40afdc <nftw@plt+0x845c>
  40b814:	ubfiz	x1, x19, #3, #32
  40b818:	mov	x0, #0x0                   	// #0
  40b81c:	add	x1, x1, #0x8
  40b820:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b824:	str	x0, [x21, #136]
  40b828:	and	x19, x19, #0x7fffffff
  40b82c:	str	x19, [x0]
  40b830:	ldr	w0, [x26, #8]
  40b834:	b	40ad04 <nftw@plt+0x8184>
  40b838:	ubfiz	x1, x19, #3, #32
  40b83c:	mov	x0, #0x0                   	// #0
  40b840:	add	x1, x1, #0x8
  40b844:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b848:	str	x0, [x21, #128]
  40b84c:	and	x19, x19, #0x7fffffff
  40b850:	str	x19, [x0]
  40b854:	b	40acf4 <nftw@plt+0x8174>
  40b858:	mov	w2, #0x28                  	// #40
  40b85c:	mov	x1, #0x8                   	// #8
  40b860:	mov	x0, #0x0                   	// #0
  40b864:	umaddl	x1, w20, w2, x1
  40b868:	and	x20, x20, #0x7fffffff
  40b86c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b870:	str	x0, [x21, #120]
  40b874:	str	x20, [x0]
  40b878:	b	40ace8 <nftw@plt+0x8168>
  40b87c:	mov	x1, #0x10                  	// #16
  40b880:	mov	x0, #0x0                   	// #0
  40b884:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b888:	mov	x19, x0
  40b88c:	mov	x2, #0x1                   	// #1
  40b890:	mov	x1, #0x8                   	// #8
  40b894:	mov	w0, w2
  40b898:	str	x2, [x19]
  40b89c:	ldr	w26, [x21, #32]
  40b8a0:	b	40ae88 <nftw@plt+0x8308>
  40b8a4:	ldr	w2, [x21, #144]
  40b8a8:	add	w2, w2, #0x2
  40b8ac:	add	x0, x0, w2, sxtw
  40b8b0:	b	40b1a0 <nftw@plt+0x8620>
  40b8b4:	mov	x0, x21
  40b8b8:	mov	w1, #0x20                  	// #32
  40b8bc:	bl	40a470 <nftw@plt+0x78f0>
  40b8c0:	b	40b710 <nftw@plt+0x8b90>
  40b8c4:	mov	x0, x21
  40b8c8:	mov	w1, #0x20                  	// #32
  40b8cc:	bl	40a470 <nftw@plt+0x78f0>
  40b8d0:	b	40b668 <nftw@plt+0x8ae8>
  40b8d4:	mov	x1, #0x8                   	// #8
  40b8d8:	mov	w0, #0x1                   	// #1
  40b8dc:	b	40ae88 <nftw@plt+0x8308>
  40b8e0:	sub	w0, w0, w2
  40b8e4:	str	w0, [x21, #148]
  40b8e8:	b	40b1c4 <nftw@plt+0x8644>
  40b8ec:	mov	x1, #0x28                  	// #40
  40b8f0:	mov	x0, #0x0                   	// #0
  40b8f4:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b8f8:	mov	x28, x0
  40b8fc:	str	x28, [x21, #128]
  40b900:	mov	w24, #0x0                   	// #0
  40b904:	mov	x0, #0x4                   	// #4
  40b908:	add	w1, w24, #0x1
  40b90c:	str	x0, [x28]
  40b910:	b	40ae08 <nftw@plt+0x8288>
  40b914:	mov	x1, #0x28                  	// #40
  40b918:	mov	x0, #0x0                   	// #0
  40b91c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40b920:	mov	x20, x0
  40b924:	str	x20, [x21, #136]
  40b928:	mov	x0, #0x4                   	// #4
  40b92c:	mov	w23, #0x0                   	// #0
  40b930:	add	w1, w23, #0x1
  40b934:	str	x0, [x20]
  40b938:	b	40afdc <nftw@plt+0x845c>
  40b93c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b940:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b944:	add	x2, x2, #0x328
  40b948:	add	x0, x0, #0x290
  40b94c:	mov	w1, #0x386                 	// #902
  40b950:	bl	402bf0 <nftw@plt+0x70>
  40b954:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b958:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b95c:	add	x2, x2, #0x300
  40b960:	add	x0, x0, #0x290
  40b964:	mov	w1, #0x4ad                 	// #1197
  40b968:	bl	402bf0 <nftw@plt+0x70>
  40b96c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b970:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b974:	add	x2, x2, #0x318
  40b978:	add	x0, x0, #0x290
  40b97c:	mov	w1, #0xa5                  	// #165
  40b980:	bl	402bf0 <nftw@plt+0x70>
  40b984:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b988:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b98c:	add	x2, x2, #0x300
  40b990:	add	x0, x0, #0x290
  40b994:	mov	w1, #0x4b6                 	// #1206
  40b998:	bl	402bf0 <nftw@plt+0x70>
  40b99c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9a0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9a4:	add	x2, x2, #0x300
  40b9a8:	add	x0, x0, #0x290
  40b9ac:	mov	w1, #0x4bc                 	// #1212
  40b9b0:	bl	402bf0 <nftw@plt+0x70>
  40b9b4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9b8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9bc:	add	x2, x2, #0x300
  40b9c0:	add	x0, x0, #0x290
  40b9c4:	mov	w1, #0x49b                 	// #1179
  40b9c8:	bl	402bf0 <nftw@plt+0x70>
  40b9cc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9d0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9d4:	add	x2, x2, #0x300
  40b9d8:	add	x0, x0, #0x290
  40b9dc:	mov	w1, #0x4a4                 	// #1188
  40b9e0:	bl	402bf0 <nftw@plt+0x70>
  40b9e4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9e8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40b9ec:	add	x2, x2, #0x300
  40b9f0:	add	x0, x0, #0x290
  40b9f4:	mov	w1, #0x4d8                 	// #1240
  40b9f8:	bl	402bf0 <nftw@plt+0x70>
  40b9fc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba00:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba04:	add	x2, x2, #0x328
  40ba08:	add	x0, x0, #0x290
  40ba0c:	mov	w1, #0x36a                 	// #874
  40ba10:	bl	402bf0 <nftw@plt+0x70>
  40ba14:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba18:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba1c:	add	x2, x2, #0x300
  40ba20:	add	x0, x0, #0x290
  40ba24:	mov	w1, #0x4cd                 	// #1229
  40ba28:	bl	402bf0 <nftw@plt+0x70>
  40ba2c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba30:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba34:	add	x2, x2, #0x300
  40ba38:	add	x0, x0, #0x290
  40ba3c:	mov	w1, #0x4d3                 	// #1235
  40ba40:	bl	402bf0 <nftw@plt+0x70>
  40ba44:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba48:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba4c:	add	x2, x2, #0x300
  40ba50:	add	x0, x0, #0x290
  40ba54:	mov	w1, #0x4d4                 	// #1236
  40ba58:	bl	402bf0 <nftw@plt+0x70>
  40ba5c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba60:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ba64:	add	x2, x2, #0x300
  40ba68:	add	x0, x0, #0x290
  40ba6c:	mov	w1, #0x4d6                 	// #1238
  40ba70:	bl	402bf0 <nftw@plt+0x70>
  40ba74:	nop
  40ba78:	stp	x29, x30, [sp, #-224]!
  40ba7c:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40ba80:	mov	w3, #0x4                   	// #4
  40ba84:	mov	x29, sp
  40ba88:	stp	x21, x22, [sp, #32]
  40ba8c:	mov	w21, w1
  40ba90:	mov	w22, #0x1                   	// #1
  40ba94:	ldr	x1, [x2, #920]
  40ba98:	mov	x2, x0
  40ba9c:	stp	x19, x20, [sp, #16]
  40baa0:	mov	x20, x0
  40baa4:	add	x0, sp, #0x48
  40baa8:	bl	40abf8 <nftw@plt+0x8078>
  40baac:	stp	w21, w22, [sp, #56]
  40bab0:	add	x0, sp, #0x48
  40bab4:	mov	w3, w22
  40bab8:	add	x1, sp, #0x38
  40babc:	mov	w2, #0x0                   	// #0
  40bac0:	bl	40a7b0 <nftw@plt+0x7c30>
  40bac4:	mov	w19, w0
  40bac8:	tst	w0, #0xff
  40bacc:	b.eq	40bae4 <nftw@plt+0x8f64>  // b.none
  40bad0:	mov	w2, w22
  40bad4:	mov	w1, w21
  40bad8:	mov	x0, x20
  40badc:	mov	x3, #0x0                   	// #0
  40bae0:	bl	42d6b0 <nftw@plt+0x2ab30>
  40bae4:	ldr	x0, [sp, #208]
  40bae8:	cbz	x0, 40baf8 <nftw@plt+0x8f78>
  40baec:	ldrsb	w1, [x0, #3]
  40baf0:	tbnz	w1, #31, 40bb50 <nftw@plt+0x8fd0>
  40baf4:	bl	402910 <free@plt>
  40baf8:	ldr	x0, [sp, #200]
  40bafc:	cbz	x0, 40bb0c <nftw@plt+0x8f8c>
  40bb00:	ldrsb	w1, [x0, #3]
  40bb04:	tbnz	w1, #31, 40bb60 <nftw@plt+0x8fe0>
  40bb08:	bl	402910 <free@plt>
  40bb0c:	ldr	x0, [sp, #192]
  40bb10:	cbz	x0, 40bb20 <nftw@plt+0x8fa0>
  40bb14:	ldrsb	w1, [x0, #3]
  40bb18:	tbnz	w1, #31, 40bb58 <nftw@plt+0x8fd8>
  40bb1c:	bl	402910 <free@plt>
  40bb20:	ldr	w0, [sp, #140]
  40bb24:	cmn	w0, #0x1
  40bb28:	b.eq	40bb3c <nftw@plt+0x8fbc>  // b.none
  40bb2c:	ldr	x0, [sp, #128]
  40bb30:	ldr	x1, [sp, #176]
  40bb34:	ldr	x0, [x0]
  40bb38:	bl	40f9a8 <nftw@plt+0xce28>
  40bb3c:	mov	w0, w19
  40bb40:	ldp	x19, x20, [sp, #16]
  40bb44:	ldp	x21, x22, [sp, #32]
  40bb48:	ldp	x29, x30, [sp], #224
  40bb4c:	ret
  40bb50:	str	wzr, [x0, #4]
  40bb54:	b	40baf8 <nftw@plt+0x8f78>
  40bb58:	str	wzr, [x0, #4]
  40bb5c:	b	40bb20 <nftw@plt+0x8fa0>
  40bb60:	str	wzr, [x0, #4]
  40bb64:	b	40bb0c <nftw@plt+0x8f8c>
  40bb68:	stp	x29, x30, [sp, #-464]!
  40bb6c:	mov	x29, sp
  40bb70:	stp	x21, x22, [sp, #32]
  40bb74:	mov	x21, x0
  40bb78:	str	x0, [sp, #168]
  40bb7c:	ldr	x0, [x0]
  40bb80:	stp	x19, x20, [sp, #16]
  40bb84:	mov	x19, x1
  40bb88:	mov	w20, w2
  40bb8c:	bl	40f388 <nftw@plt+0xc808>
  40bb90:	mov	w1, #0x0                   	// #0
  40bb94:	mov	x0, x19
  40bb98:	bl	42cf60 <nftw@plt+0x2a3e0>
  40bb9c:	cmp	w0, #0x1
  40bba0:	ldrb	w1, [x21, #108]
  40bba4:	mov	w3, w0
  40bba8:	cset	w0, ls  // ls = plast
  40bbac:	eor	w1, w1, #0x1
  40bbb0:	orr	w0, w0, w1
  40bbb4:	tst	w0, #0xff
  40bbb8:	b.eq	40bbcc <nftw@plt+0x904c>  // b.none
  40bbbc:	ldp	x19, x20, [sp, #16]
  40bbc0:	ldp	x21, x22, [sp, #32]
  40bbc4:	ldp	x29, x30, [sp], #464
  40bbc8:	ret
  40bbcc:	ldr	w0, [x21, #200]
  40bbd0:	cmp	w0, w3
  40bbd4:	b.ne	40bbe0 <nftw@plt+0x9060>  // b.any
  40bbd8:	ldr	w0, [x19, #120]
  40bbdc:	cbz	w0, 40bbbc <nftw@plt+0x903c>
  40bbe0:	ldr	x21, [sp, #168]
  40bbe4:	stp	x23, x24, [sp, #48]
  40bbe8:	mov	x1, #0x8                   	// #8
  40bbec:	stp	x25, x26, [sp, #64]
  40bbf0:	ldr	x0, [x21]
  40bbf4:	stp	x27, x28, [sp, #80]
  40bbf8:	str	w3, [x21, #200]
  40bbfc:	str	wzr, [sp, #148]
  40bc00:	str	x1, [sp, #152]
  40bc04:	bl	40f230 <nftw@plt+0xc6b0>
  40bc08:	mov	x1, x0
  40bc0c:	str	x1, [sp, #176]
  40bc10:	ldr	x0, [x21]
  40bc14:	mov	x1, #0x0                   	// #0
  40bc18:	bl	40f1f0 <nftw@plt+0xc670>
  40bc1c:	add	x0, sp, #0x138
  40bc20:	mov	w3, w20
  40bc24:	mov	x2, x19
  40bc28:	mov	x1, x21
  40bc2c:	bl	40abf8 <nftw@plt+0x8078>
  40bc30:	ldr	x0, [sp, #448]
  40bc34:	cbz	x0, 40c18c <nftw@plt+0x960c>
  40bc38:	ldr	w1, [x0, #4]
  40bc3c:	ldr	w2, [sp, #148]
  40bc40:	cmp	w1, w2
  40bc44:	b.le	40c18c <nftw@plt+0x960c>
  40bc48:	ldr	x1, [sp, #168]
  40bc4c:	ldr	x3, [sp, #152]
  40bc50:	ldrb	w1, [x1, #223]
  40bc54:	add	x21, x0, x3
  40bc58:	cbz	w1, 40c980 <nftw@plt+0x9e00>
  40bc5c:	cbnz	w2, 40cc28 <nftw@plt+0xa0a8>
  40bc60:	ldr	w0, [x21, #4]
  40bc64:	add	x20, sp, #0x170
  40bc68:	ldr	w21, [x21]
  40bc6c:	str	x0, [sp, #104]
  40bc70:	cmp	x0, x21
  40bc74:	b.lt	40c16c <nftw@plt+0x95ec>  // b.tstop
  40bc78:	ldr	x0, [sp, #336]
  40bc7c:	mov	w1, w21
  40bc80:	mov	w24, w21
  40bc84:	mov	w26, w21
  40bc88:	bl	4143a8 <nftw@plt+0x11828>
  40bc8c:	mov	x19, x0
  40bc90:	mov	x23, x1
  40bc94:	cbz	x0, 40c15c <nftw@plt+0x95dc>
  40bc98:	ldr	x1, [sp, #440]
  40bc9c:	mov	w25, #0x0                   	// #0
  40bca0:	cbz	x1, 40bcfc <nftw@plt+0x917c>
  40bca4:	nop
  40bca8:	ldr	w0, [x1, #4]
  40bcac:	cmp	w0, w25
  40bcb0:	b.ls	40bcfc <nftw@plt+0x917c>  // b.plast
  40bcb4:	add	x1, x1, w25, uxtw #3
  40bcb8:	ldr	x22, [x1, #8]
  40bcbc:	mov	x0, x22
  40bcc0:	bl	42d688 <nftw@plt+0x2ab08>
  40bcc4:	tst	w0, #0xff
  40bcc8:	b.eq	40bcf0 <nftw@plt+0x9170>  // b.none
  40bccc:	ldp	w1, w0, [x22]
  40bcd0:	cmp	w1, w0
  40bcd4:	b.ne	40cf64 <nftw@plt+0xa3e4>  // b.any
  40bcd8:	ldr	x1, [sp, #336]
  40bcdc:	mov	w2, w26
  40bce0:	mov	x0, x22
  40bce4:	bl	42d5d0 <nftw@plt+0x2aa50>
  40bce8:	tst	w0, #0xff
  40bcec:	b.ne	40c50c <nftw@plt+0x998c>  // b.any
  40bcf0:	ldr	x1, [sp, #440]
  40bcf4:	add	w25, w25, #0x1
  40bcf8:	cbnz	x1, 40bca8 <nftw@plt+0x9128>
  40bcfc:	mov	w1, #0xffffffff            	// #-1
  40bd00:	mov	x0, x20
  40bd04:	bl	40a5a0 <nftw@plt+0x7a20>
  40bd08:	mov	w22, w23
  40bd0c:	add	x1, x19, w23, sxtw
  40bd10:	cmp	w23, #0x0
  40bd14:	b.le	40cb08 <nftw@plt+0x9f88>
  40bd18:	ldurb	w0, [x1, #-1]
  40bd1c:	cmp	w0, #0x20
  40bd20:	and	w0, w0, #0xfffffffb
  40bd24:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  40bd28:	b.ne	40bd38 <nftw@plt+0x91b8>  // b.any
  40bd2c:	sub	x1, x1, #0x1
  40bd30:	subs	w22, w22, #0x1
  40bd34:	b.ne	40bd18 <nftw@plt+0x9198>  // b.any
  40bd38:	ldrb	w1, [sp, #426]
  40bd3c:	ldrsw	x0, [sp, #460]
  40bd40:	add	x19, x19, x0
  40bd44:	cbz	w1, 40c608 <nftw@plt+0x9a88>
  40bd48:	mov	w0, w26
  40bd4c:	bl	409488 <nftw@plt+0x6908>
  40bd50:	ldr	w1, [sp, #456]
  40bd54:	mov	w23, w0
  40bd58:	mov	w25, #0x0                   	// #0
  40bd5c:	sub	w1, w1, w0
  40bd60:	cmp	w1, #0x0
  40bd64:	b.le	40bd88 <nftw@plt+0x9208>
  40bd68:	ldr	x0, [sp, #320]
  40bd6c:	mov	w1, #0x20                  	// #32
  40bd70:	add	w25, w25, #0x1
  40bd74:	bl	40f3e8 <nftw@plt+0xc868>
  40bd78:	ldr	w0, [sp, #456]
  40bd7c:	sub	w0, w0, w23
  40bd80:	cmp	w0, w25
  40bd84:	b.gt	40bd68 <nftw@plt+0x91e8>
  40bd88:	ldr	x0, [sp, #320]
  40bd8c:	mov	w2, w24
  40bd90:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40bd94:	add	x1, x1, #0x3b0
  40bd98:	bl	411400 <nftw@plt+0xe880>
  40bd9c:	ldr	w2, [sp, #460]
  40bda0:	add	w27, w2, #0x1
  40bda4:	cmp	w27, w22
  40bda8:	b.gt	40c624 <nftw@plt+0x9aa4>
  40bdac:	add	w22, w22, #0x1
  40bdb0:	add	x28, sp, #0x11c
  40bdb4:	mov	w23, #0x7fffffff            	// #2147483647
  40bdb8:	mov	w25, #0x0                   	// #0
  40bdbc:	b	40bdfc <nftw@plt+0x927c>
  40bdc0:	ldrb	w0, [x19]
  40bdc4:	mov	w1, #0x20                  	// #32
  40bdc8:	and	w2, w0, #0xfffffffb
  40bdcc:	cmp	w0, #0x0
  40bdd0:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  40bdd4:	cset	w2, ne  // ne = any
  40bdd8:	cmp	w0, w1
  40bddc:	csel	w2, w2, wzr, ne  // ne = any
  40bde0:	cbnz	w2, 40be3c <nftw@plt+0x92bc>
  40bde4:	ldr	x0, [sp, #320]
  40bde8:	add	w27, w27, #0x1
  40bdec:	add	x19, x19, #0x1
  40bdf0:	bl	40f3e8 <nftw@plt+0xc868>
  40bdf4:	cmp	w27, w22
  40bdf8:	b.eq	40be68 <nftw@plt+0x92e8>  // b.none
  40bdfc:	ldrb	w0, [sp, #424]
  40be00:	cbz	w0, 40bdc0 <nftw@plt+0x9240>
  40be04:	mov	x6, x28
  40be08:	add	x5, sp, #0x118
  40be0c:	mov	w2, w27
  40be10:	mov	w1, w24
  40be14:	add	x0, sp, #0x138
  40be18:	mov	w4, #0x7fffffff            	// #2147483647
  40be1c:	mov	w3, #0x0                   	// #0
  40be20:	bl	40a2e8 <nftw@plt+0x7768>
  40be24:	tst	w0, #0xff
  40be28:	b.eq	40c1fc <nftw@plt+0x967c>  // b.none
  40be2c:	ldr	w1, [sp, #280]
  40be30:	mov	x0, x20
  40be34:	bl	40a5a0 <nftw@plt+0x7a20>
  40be38:	b	40bdc0 <nftw@plt+0x9240>
  40be3c:	mov	w1, #0x7fffffff            	// #2147483647
  40be40:	cmp	w23, w1
  40be44:	mov	w1, w0
  40be48:	csel	w23, w23, w27, ne  // ne = any
  40be4c:	ldr	x0, [sp, #320]
  40be50:	mov	w25, w27
  40be54:	add	w27, w27, #0x1
  40be58:	add	x19, x19, #0x1
  40be5c:	bl	40f3e8 <nftw@plt+0xc868>
  40be60:	cmp	w27, w22
  40be64:	b.ne	40bdfc <nftw@plt+0x927c>  // b.any
  40be68:	mov	x0, x20
  40be6c:	mov	w1, #0xffffffff            	// #-1
  40be70:	bl	40a5a0 <nftw@plt+0x7a20>
  40be74:	ldr	x0, [sp, #320]
  40be78:	bl	40f388 <nftw@plt+0xc808>
  40be7c:	ldr	x0, [sp, #432]
  40be80:	cbz	x0, 40c220 <nftw@plt+0x96a0>
  40be84:	ldr	w4, [x0, #4]
  40be88:	add	x2, x0, #0x8
  40be8c:	mov	w3, #0x28                  	// #40
  40be90:	mov	x1, x2
  40be94:	umaddl	x3, w4, w3, x2
  40be98:	cmp	x3, x1
  40be9c:	b.eq	40bff0 <nftw@plt+0x9470>  // b.none
  40bea0:	ldr	w5, [x1, #16]
  40bea4:	cmp	w5, #0x2
  40bea8:	b.eq	40bff0 <nftw@plt+0x9470>  // b.none
  40beac:	ldr	w5, [x1]
  40beb0:	ldr	w6, [x1, #8]
  40beb4:	cmp	w5, w6
  40beb8:	b.hi	40cf4c <nftw@plt+0xa3cc>  // b.pmore
  40bebc:	cmp	w6, w24
  40bec0:	add	x1, x1, #0x28
  40bec4:	ccmp	w5, w24, #0x2, cs  // cs = hs, nlast
  40bec8:	b.hi	40be98 <nftw@plt+0x9318>  // b.pmore
  40becc:	sub	w4, w4, #0x1
  40bed0:	add	x0, x0, #0x30
  40bed4:	mov	w1, #0x28                  	// #40
  40bed8:	ldr	w22, [sp, #348]
  40bedc:	add	w3, w25, #0x1
  40bee0:	umaddl	x0, w4, w1, x0
  40bee4:	add	w22, w22, #0x1
  40bee8:	ldr	w1, [x2]
  40beec:	cmp	w1, w24
  40bef0:	b.hi	40bf08 <nftw@plt+0x9388>  // b.pmore
  40bef4:	ldr	w1, [x2, #8]
  40bef8:	cmp	w1, w24
  40befc:	b.eq	40cc08 <nftw@plt+0xa088>  // b.none
  40bf00:	ccmp	w25, w22, #0x1, hi  // hi = pmore
  40bf04:	csel	w22, w3, w22, ge  // ge = tcont
  40bf08:	add	x2, x2, #0x28
  40bf0c:	cmp	x0, x2
  40bf10:	b.ne	40bee8 <nftw@plt+0x9368>  // b.any
  40bf14:	ldrb	w0, [sp, #426]
  40bf18:	cbz	w0, 40bf28 <nftw@plt+0x93a8>
  40bf1c:	add	x0, sp, #0x138
  40bf20:	mov	w1, #0x20                  	// #32
  40bf24:	bl	40a470 <nftw@plt+0x78f0>
  40bf28:	ldr	x0, [sp, #320]
  40bf2c:	mov	w1, #0x20                  	// #32
  40bf30:	add	x27, sp, #0x11c
  40bf34:	bl	40f3e8 <nftw@plt+0xc868>
  40bf38:	ldr	w19, [sp, #460]
  40bf3c:	add	w19, w19, #0x1
  40bf40:	cmp	w19, w22
  40bf44:	b.lt	40bf90 <nftw@plt+0x9410>  // b.tstop
  40bf48:	b	40bfdc <nftw@plt+0x945c>
  40bf4c:	ldr	w1, [sp, #280]
  40bf50:	mov	x0, x20
  40bf54:	bl	40a5a0 <nftw@plt+0x7a20>
  40bf58:	ldrb	w0, [sp, #284]
  40bf5c:	cbz	w0, 40c630 <nftw@plt+0x9ab0>
  40bf60:	ldr	w0, [sp, #280]
  40bf64:	mov	w1, #0x5e                  	// #94
  40bf68:	cmp	w0, #0x2
  40bf6c:	b.gt	40bf7c <nftw@plt+0x93fc>
  40bf70:	ldr	x1, [sp, #312]
  40bf74:	add	x0, x1, w0, sxtw
  40bf78:	ldrb	w1, [x0, #116]
  40bf7c:	ldr	x0, [sp, #320]
  40bf80:	bl	40f3e8 <nftw@plt+0xc868>
  40bf84:	add	w19, w19, #0x1
  40bf88:	cmp	w19, w22
  40bf8c:	b.eq	40bfdc <nftw@plt+0x945c>  // b.none
  40bf90:	mov	x6, x27
  40bf94:	add	x5, sp, #0x118
  40bf98:	mov	w4, w25
  40bf9c:	mov	w3, w23
  40bfa0:	mov	w2, w19
  40bfa4:	mov	w1, w24
  40bfa8:	add	x0, sp, #0x138
  40bfac:	bl	40a2e8 <nftw@plt+0x7768>
  40bfb0:	tst	w0, #0xff
  40bfb4:	b.ne	40bf4c <nftw@plt+0x93cc>  // b.any
  40bfb8:	mov	x0, x20
  40bfbc:	mov	w1, #0xffffffff            	// #-1
  40bfc0:	bl	40a5a0 <nftw@plt+0x7a20>
  40bfc4:	add	w19, w19, #0x1
  40bfc8:	ldr	x0, [sp, #320]
  40bfcc:	mov	w1, #0x20                  	// #32
  40bfd0:	bl	40f3e8 <nftw@plt+0xc868>
  40bfd4:	cmp	w19, w22
  40bfd8:	b.ne	40bf90 <nftw@plt+0x9410>  // b.any
  40bfdc:	mov	x0, x20
  40bfe0:	mov	w1, #0xffffffff            	// #-1
  40bfe4:	bl	40a5a0 <nftw@plt+0x7a20>
  40bfe8:	ldr	x0, [sp, #320]
  40bfec:	bl	40f388 <nftw@plt+0xc808>
  40bff0:	ldrb	w0, [sp, #425]
  40bff4:	cbz	w0, 40c220 <nftw@plt+0x96a0>
  40bff8:	ldr	x19, [sp, #432]
  40bffc:	cbz	x19, 40c220 <nftw@plt+0x96a0>
  40c000:	adrp	x0, 40c000 <nftw@plt+0x9480>
  40c004:	add	x28, x0, #0xf80
  40c008:	mov	x22, #0x0                   	// #0
  40c00c:	mov	w27, #0x0                   	// #0
  40c010:	mov	x25, #0x4                   	// #4
  40c014:	ldr	w1, [x19, #4]
  40c018:	cmp	w1, w27
  40c01c:	b.ls	40c0e8 <nftw@plt+0x9568>  // b.plast
  40c020:	mov	w23, w27
  40c024:	add	x1, x23, w27, uxtw #2
  40c028:	add	x1, x19, x1, lsl #3
  40c02c:	ldr	x0, [x1, #40]
  40c030:	cbz	x0, 40c0e0 <nftw@plt+0x9560>
  40c034:	ldr	w2, [x1, #28]
  40c038:	cmp	w2, w24
  40c03c:	b.ne	40c0e0 <nftw@plt+0x9560>  // b.any
  40c040:	ldr	w3, [x1, #32]
  40c044:	ldr	w2, [sp, #460]
  40c048:	cmp	w3, w2
  40c04c:	b.le	40c0e0 <nftw@plt+0x9560>
  40c050:	ldr	x2, [x0]
  40c054:	ldr	x2, [x2, #16]
  40c058:	cmp	x2, x28
  40c05c:	b.ne	40cd64 <nftw@plt+0xa1e4>  // b.any
  40c060:	ldr	x7, [x0, #8]
  40c064:	str	wzr, [sp, #96]
  40c068:	cbz	x7, 40ccb8 <nftw@plt+0xa138>
  40c06c:	add	x23, x23, x23, lsl #2
  40c070:	mov	x0, x7
  40c074:	str	x7, [sp, #112]
  40c078:	bl	4024f0 <strlen@plt>
  40c07c:	add	x19, x19, x23, lsl #3
  40c080:	mov	x8, x0
  40c084:	ldr	x7, [sp, #112]
  40c088:	ldr	w23, [x19, #32]
  40c08c:	cbz	x22, 40cdec <nftw@plt+0xa26c>
  40c090:	ldp	w0, w6, [x22]
  40c094:	add	w10, w6, #0x1
  40c098:	ubfx	x0, x0, #0, #31
  40c09c:	mov	w1, w10
  40c0a0:	cmp	w0, w6
  40c0a4:	b.eq	40cc68 <nftw@plt+0xa0e8>  // b.none
  40c0a8:	mov	w0, #0x28                  	// #40
  40c0ac:	mov	x2, #0x8                   	// #8
  40c0b0:	ldr	x19, [sp, #432]
  40c0b4:	umaddl	x6, w6, w0, x2
  40c0b8:	str	w1, [x22, #4]
  40c0bc:	add	x1, x22, x6
  40c0c0:	ldrb	w0, [sp, #96]
  40c0c4:	str	w27, [x22, x6]
  40c0c8:	str	w23, [x1, #4]
  40c0cc:	str	x7, [x1, #8]
  40c0d0:	strb	w0, [x1, #16]
  40c0d4:	str	x8, [x1, #24]
  40c0d8:	str	wzr, [x1, #32]
  40c0dc:	nop
  40c0e0:	add	w27, w27, #0x1
  40c0e4:	cbnz	x19, 40c014 <nftw@plt+0x9494>
  40c0e8:	cbz	x22, 40c220 <nftw@plt+0x96a0>
  40c0ec:	ldr	w1, [x22, #4]
  40c0f0:	cbz	w1, 40c20c <nftw@plt+0x968c>
  40c0f4:	cmp	w1, #0x1
  40c0f8:	mov	w2, #0x1                   	// #1
  40c0fc:	mov	w0, #0x0                   	// #0
  40c100:	b.hi	40c7e4 <nftw@plt+0x9c64>  // b.pmore
  40c104:	mov	w25, #0x1                   	// #1
  40c108:	mov	w5, #0x7fffffff            	// #2147483647
  40c10c:	mov	w7, #0x28                  	// #40
  40c110:	ubfiz	x1, x0, #2, #32
  40c114:	umaddl	x4, w0, w7, x22
  40c118:	add	x1, x1, w0, uxtw
  40c11c:	sub	w0, w0, #0x1
  40c120:	add	x1, x22, x1, lsl #3
  40c124:	ldrsw	x3, [x4, #12]
  40c128:	ldr	x6, [x1, #32]
  40c12c:	add	x3, x3, x6
  40c130:	cmp	x3, w5, sxtw
  40c134:	cinc	w25, w25, cs  // cs = hs, nlast
  40c138:	str	w25, [x1, #40]
  40c13c:	cmp	w0, w2
  40c140:	b.cs	40c80c <nftw@plt+0x9c8c>  // b.hs, b.nlast
  40c144:	ldr	w5, [x4, #12]
  40c148:	b	40c110 <nftw@plt+0x9590>
  40c14c:	ldrsb	w0, [x19, #3]
  40c150:	tbnz	w0, #31, 40c708 <nftw@plt+0x9b88>
  40c154:	mov	x0, x19
  40c158:	bl	402910 <free@plt>
  40c15c:	ldr	x0, [sp, #104]
  40c160:	add	x21, x21, #0x1
  40c164:	cmp	x0, x21
  40c168:	b.ge	40bc78 <nftw@plt+0x90f8>  // b.tcont
  40c16c:	ldr	w1, [sp, #148]
  40c170:	ldr	x0, [sp, #448]
  40c174:	add	w1, w1, #0x1
  40c178:	str	w1, [sp, #148]
  40c17c:	ldr	x1, [sp, #152]
  40c180:	add	x1, x1, #0x8
  40c184:	str	x1, [sp, #152]
  40c188:	cbnz	x0, 40bc38 <nftw@plt+0x90b8>
  40c18c:	ldp	x0, x1, [sp, #168]
  40c190:	ldr	x0, [x0]
  40c194:	bl	40f1f0 <nftw@plt+0xc670>
  40c198:	ldr	x0, [sp, #448]
  40c19c:	cbz	x0, 40c1ac <nftw@plt+0x962c>
  40c1a0:	ldrsb	w1, [x0, #3]
  40c1a4:	tbnz	w1, #31, 40cd7c <nftw@plt+0xa1fc>
  40c1a8:	bl	402910 <free@plt>
  40c1ac:	ldr	x0, [sp, #440]
  40c1b0:	cbz	x0, 40c1c0 <nftw@plt+0x9640>
  40c1b4:	ldrsb	w1, [x0, #3]
  40c1b8:	tbnz	w1, #31, 40cdc0 <nftw@plt+0xa240>
  40c1bc:	bl	402910 <free@plt>
  40c1c0:	ldr	x0, [sp, #432]
  40c1c4:	cbz	x0, 40c1d4 <nftw@plt+0x9654>
  40c1c8:	ldrsb	w1, [x0, #3]
  40c1cc:	tbnz	w1, #31, 40cd84 <nftw@plt+0xa204>
  40c1d0:	bl	402910 <free@plt>
  40c1d4:	ldr	w0, [sp, #380]
  40c1d8:	cmn	w0, #0x1
  40c1dc:	b.ne	40cd94 <nftw@plt+0xa214>  // b.any
  40c1e0:	ldp	x19, x20, [sp, #16]
  40c1e4:	ldp	x21, x22, [sp, #32]
  40c1e8:	ldp	x23, x24, [sp, #48]
  40c1ec:	ldp	x25, x26, [sp, #64]
  40c1f0:	ldp	x27, x28, [sp, #80]
  40c1f4:	ldp	x29, x30, [sp], #464
  40c1f8:	ret
  40c1fc:	mov	x0, x20
  40c200:	mov	w1, #0xffffffff            	// #-1
  40c204:	bl	40a5a0 <nftw@plt+0x7a20>
  40c208:	b	40bdc0 <nftw@plt+0x9240>
  40c20c:	ldrsb	w0, [x22, #3]
  40c210:	tbnz	w0, #31, 40c220 <nftw@plt+0x96a0>
  40c214:	mov	x0, x22
  40c218:	bl	402910 <free@plt>
  40c21c:	nop
  40c220:	ldr	x0, [sp, #440]
  40c224:	ldr	x1, [sp, #336]
  40c228:	str	x1, [sp, #128]
  40c22c:	cbz	x0, 40c720 <nftw@plt+0x9ba0>
  40c230:	mov	x19, #0x0                   	// #0
  40c234:	mov	w23, #0x0                   	// #0
  40c238:	stp	x21, x20, [sp, #112]
  40c23c:	nop
  40c240:	ldr	w1, [x0, #4]
  40c244:	cmp	w1, w23
  40c248:	b.ls	40c288 <nftw@plt+0x9708>  // b.plast
  40c24c:	add	x0, x0, w23, uxtw #3
  40c250:	ldr	x22, [x0, #8]
  40c254:	mov	x0, x22
  40c258:	bl	42d688 <nftw@plt+0x2ab08>
  40c25c:	tst	w0, #0xff
  40c260:	b.ne	40c27c <nftw@plt+0x96fc>  // b.any
  40c264:	ldr	x1, [sp, #336]
  40c268:	mov	w2, w26
  40c26c:	mov	x0, x22
  40c270:	bl	42d5d0 <nftw@plt+0x2aa50>
  40c274:	tst	w0, #0xff
  40c278:	b.ne	40c3bc <nftw@plt+0x983c>  // b.any
  40c27c:	ldr	x0, [sp, #440]
  40c280:	add	w23, w23, #0x1
  40c284:	cbnz	x0, 40c240 <nftw@plt+0x96c0>
  40c288:	ldr	w0, [sp, #460]
  40c28c:	str	w0, [sp, #280]
  40c290:	ldp	x21, x20, [sp, #112]
  40c294:	cbz	x19, 40c728 <nftw@plt+0x9ba8>
  40c298:	ldr	w0, [x19, #4]
  40c29c:	cbz	w0, 40c36c <nftw@plt+0x97ec>
  40c2a0:	ldrb	w1, [sp, #426]
  40c2a4:	cbz	w1, 40c2b8 <nftw@plt+0x9738>
  40c2a8:	add	x0, sp, #0x138
  40c2ac:	mov	w1, #0x20                  	// #32
  40c2b0:	bl	40a470 <nftw@plt+0x78f0>
  40c2b4:	ldr	w0, [x19, #4]
  40c2b8:	mov	w23, #0x0                   	// #0
  40c2bc:	cmp	w23, w0
  40c2c0:	b.cs	40c36c <nftw@plt+0x97ec>  // b.hs, b.nlast
  40c2c4:	add	x0, x19, w23, uxtw #3
  40c2c8:	ldr	x22, [x0, #8]
  40c2cc:	ldp	w26, w25, [x22]
  40c2d0:	add	w0, w25, #0x1
  40c2d4:	cmp	w26, w0
  40c2d8:	b.eq	40c7dc <nftw@plt+0x9c5c>  // b.none
  40c2dc:	ldr	x0, [sp, #432]
  40c2e0:	cbz	x0, 40c2fc <nftw@plt+0x977c>
  40c2e4:	ldr	w1, [x0, #4]
  40c2e8:	add	x0, x0, #0x8
  40c2ec:	mov	w2, #0x28                  	// #40
  40c2f0:	umaddl	x1, w1, w2, x0
  40c2f4:	cmp	x0, x1
  40c2f8:	b.ne	40c750 <nftw@plt+0x9bd0>  // b.any
  40c2fc:	mov	w2, w26
  40c300:	mov	w3, #0x1                   	// #1
  40c304:	add	x1, sp, #0x118
  40c308:	add	x0, sp, #0x138
  40c30c:	bl	40a710 <nftw@plt+0x7b90>
  40c310:	mov	x0, x20
  40c314:	mov	w1, #0xfffffffd            	// #-3
  40c318:	bl	40a5a0 <nftw@plt+0x7a20>
  40c31c:	ldr	w0, [sp, #280]
  40c320:	cmp	w25, w0
  40c324:	b.lt	40c348 <nftw@plt+0x97c8>  // b.tstop
  40c328:	ldr	x0, [sp, #320]
  40c32c:	mov	w1, #0x2d                  	// #45
  40c330:	bl	40f3e8 <nftw@plt+0xc868>
  40c334:	ldr	w0, [sp, #280]
  40c338:	add	w0, w0, #0x1
  40c33c:	str	w0, [sp, #280]
  40c340:	cmp	w25, w0
  40c344:	b.ge	40c328 <nftw@plt+0x97a8>  // b.tcont
  40c348:	mov	x0, x20
  40c34c:	mov	w1, #0xffffffff            	// #-1
  40c350:	bl	40a5a0 <nftw@plt+0x7a20>
  40c354:	ldr	x0, [x22, #24]
  40c358:	cbnz	x0, 40c790 <nftw@plt+0x9c10>
  40c35c:	ldr	w0, [x19, #4]
  40c360:	add	w23, w23, #0x1
  40c364:	cmp	w23, w0
  40c368:	b.cc	40c2c4 <nftw@plt+0x9744>  // b.lo, b.ul, b.last
  40c36c:	add	x0, sp, #0x138
  40c370:	add	x1, sp, #0x118
  40c374:	mov	w3, #0x0                   	// #0
  40c378:	mov	w2, #0x0                   	// #0
  40c37c:	bl	40a710 <nftw@plt+0x7b90>
  40c380:	mov	w22, #0x0                   	// #0
  40c384:	ldr	w0, [x19, #4]
  40c388:	cmp	w0, w22
  40c38c:	b.ls	40c14c <nftw@plt+0x95cc>  // b.plast
  40c390:	add	x1, x19, w22, uxtw #3
  40c394:	ldr	x23, [x1, #8]
  40c398:	cbz	x23, 40c3b4 <nftw@plt+0x9834>
  40c39c:	ldr	x0, [x23, #16]
  40c3a0:	bl	402910 <free@plt>
  40c3a4:	mov	x0, x23
  40c3a8:	mov	x1, #0x28                  	// #40
  40c3ac:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  40c3b0:	ldr	w0, [x19, #4]
  40c3b4:	add	w22, w22, #0x1
  40c3b8:	b	40c388 <nftw@plt+0x9808>
  40c3bc:	ldr	w0, [x22]
  40c3c0:	add	x8, sp, #0x118
  40c3c4:	bl	414608 <nftw@plt+0x11a88>
  40c3c8:	ldr	w27, [sp, #292]
  40c3cc:	ldr	w0, [x22, #4]
  40c3d0:	add	x8, sp, #0x118
  40c3d4:	bl	414608 <nftw@plt+0x11a88>
  40c3d8:	ldr	w25, [sp, #292]
  40c3dc:	cmp	w27, w25
  40c3e0:	sub	w25, w25, #0x1
  40c3e4:	ccmp	w27, w25, #0x4, ne  // ne = any
  40c3e8:	b.gt	40c5c4 <nftw@plt+0x9a44>
  40c3ec:	ldr	w0, [x22]
  40c3f0:	add	x8, sp, #0x118
  40c3f4:	bl	414608 <nftw@plt+0x11a88>
  40c3f8:	ldr	w21, [sp, #292]
  40c3fc:	ldp	w1, w0, [x22]
  40c400:	sub	w4, w21, #0x1
  40c404:	ldr	x28, [x22, #16]
  40c408:	cmp	w1, w0
  40c40c:	add	w20, w4, w28
  40c410:	b.ne	40c594 <nftw@plt+0x9a14>  // b.any
  40c414:	cmp	w21, w20
  40c418:	b.le	40c428 <nftw@plt+0x98a8>
  40c41c:	cmp	w20, w4
  40c420:	mov	w20, w4
  40c424:	b.ne	40c5c4 <nftw@plt+0x9a44>  // b.any
  40c428:	cbz	x19, 40c6a8 <nftw@plt+0x9b28>
  40c42c:	ldr	w0, [x19, #4]
  40c430:	cbz	w0, 40c4b0 <nftw@plt+0x9930>
  40c434:	sub	w0, w0, #0x1
  40c438:	add	x0, x19, x0, lsl #3
  40c43c:	ldr	x5, [x0, #8]
  40c440:	ldr	w0, [x5]
  40c444:	cmp	w0, w27
  40c448:	b.gt	40ce14 <nftw@plt+0xa294>
  40c44c:	ldr	w0, [x5, #8]
  40c450:	cmp	w0, w21
  40c454:	b.gt	40ce2c <nftw@plt+0xa2ac>
  40c458:	ldr	w0, [x5, #12]
  40c45c:	cmp	w0, w21
  40c460:	b.lt	40c4b0 <nftw@plt+0x9930>  // b.tstop
  40c464:	ldr	w7, [x5, #4]
  40c468:	str	w7, [sp, #96]
  40c46c:	add	w28, w7, #0x1
  40c470:	str	w4, [sp, #136]
  40c474:	str	x5, [sp, #160]
  40c478:	cmp	w28, w4
  40c47c:	ccmp	w7, w4, #0x4, gt
  40c480:	b.ne	40c5c4 <nftw@plt+0x9a44>  // b.any
  40c484:	ldr	x0, [sp, #128]
  40c488:	mov	w1, w26
  40c48c:	bl	4143a8 <nftw@plt+0x11828>
  40c490:	cmp	x0, #0x0
  40c494:	ldr	w4, [sp, #136]
  40c498:	mov	x8, x0
  40c49c:	ldr	w7, [sp, #96]
  40c4a0:	mov	x6, x1
  40c4a4:	ccmp	w4, w1, #0x0, ne  // ne = any
  40c4a8:	ldr	x5, [sp, #160]
  40c4ac:	b.lt	40c9ec <nftw@plt+0x9e6c>  // b.tstop
  40c4b0:	ldp	x1, x28, [x22, #8]
  40c4b4:	mov	x0, #0x28                  	// #40
  40c4b8:	str	x1, [sp, #96]
  40c4bc:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40c4c0:	mov	x22, x0
  40c4c4:	ldr	x1, [sp, #96]
  40c4c8:	stp	w27, w25, [x22]
  40c4cc:	stp	w21, w20, [x22, #8]
  40c4d0:	mov	x0, x1
  40c4d4:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  40c4d8:	ldr	w1, [x19]
  40c4dc:	add	x2, x28, #0x1
  40c4e0:	stp	x0, x28, [x22, #16]
  40c4e4:	ldr	w28, [x19, #4]
  40c4e8:	str	x2, [x22, #32]
  40c4ec:	ubfx	x1, x1, #0, #31
  40c4f0:	cmp	w1, w28
  40c4f4:	add	w4, w28, #0x1
  40c4f8:	b.eq	40c5c8 <nftw@plt+0x9a48>  // b.none
  40c4fc:	add	x28, x19, w28, uxtw #3
  40c500:	str	w4, [x19, #4]
  40c504:	str	x22, [x28, #8]
  40c508:	b	40c27c <nftw@plt+0x96fc>
  40c50c:	mov	x0, x20
  40c510:	mov	w1, #0xffffffff            	// #-1
  40c514:	bl	40a5a0 <nftw@plt+0x7a20>
  40c518:	ldrb	w0, [sp, #426]
  40c51c:	cbz	w0, 40c52c <nftw@plt+0x99ac>
  40c520:	add	x0, sp, #0x138
  40c524:	mov	w1, #0x2b                  	// #43
  40c528:	bl	40a470 <nftw@plt+0x78f0>
  40c52c:	ldr	x0, [sp, #320]
  40c530:	mov	w1, #0x2b                  	// #43
  40c534:	mov	x27, #0x0                   	// #0
  40c538:	bl	40f3e8 <nftw@plt+0xc868>
  40c53c:	mov	x0, x20
  40c540:	mov	w1, #0xfffffffe            	// #-2
  40c544:	bl	40a5a0 <nftw@plt+0x7a20>
  40c548:	ldr	x0, [x22, #16]
  40c54c:	cmp	x0, #0x1
  40c550:	b.eq	40c57c <nftw@plt+0x99fc>  // b.none
  40c554:	nop
  40c558:	ldr	x1, [x22, #8]
  40c55c:	ldr	x0, [sp, #320]
  40c560:	ldrb	w1, [x1, x27]
  40c564:	add	x27, x27, #0x1
  40c568:	bl	40f3e8 <nftw@plt+0xc868>
  40c56c:	ldr	x0, [x22, #16]
  40c570:	sub	x0, x0, #0x1
  40c574:	cmp	x0, x27
  40c578:	b.hi	40c558 <nftw@plt+0x99d8>  // b.pmore
  40c57c:	mov	x0, x20
  40c580:	mov	w1, #0xffffffff            	// #-1
  40c584:	bl	40a5a0 <nftw@plt+0x7a20>
  40c588:	ldr	x0, [sp, #320]
  40c58c:	bl	40f388 <nftw@plt+0xc808>
  40c590:	b	40bcf0 <nftw@plt+0x9170>
  40c594:	add	x8, sp, #0x118
  40c598:	str	w4, [sp, #96]
  40c59c:	bl	414608 <nftw@plt+0x11a88>
  40c5a0:	ldr	w2, [sp, #292]
  40c5a4:	ldr	w4, [sp, #96]
  40c5a8:	sub	w2, w2, #0x1
  40c5ac:	cmp	w20, w2
  40c5b0:	csel	w20, w20, w2, ge  // ge = tcont
  40c5b4:	cmp	w21, w20
  40c5b8:	b.le	40c428 <nftw@plt+0x98a8>
  40c5bc:	cmp	w20, w4
  40c5c0:	b.eq	40c428 <nftw@plt+0x98a8>  // b.none
  40c5c4:	bl	402c1c <nftw@plt+0x9c>
  40c5c8:	ldrsb	w0, [x19, #3]
  40c5cc:	tbnz	w0, #31, 40c640 <nftw@plt+0x9ac0>
  40c5d0:	mov	w1, w4
  40c5d4:	mov	w0, w28
  40c5d8:	bl	411bd8 <nftw@plt+0xf058>
  40c5dc:	mov	w25, w0
  40c5e0:	ldr	w28, [x19, #4]
  40c5e4:	mov	x0, x19
  40c5e8:	ubfiz	x1, x25, #3, #32
  40c5ec:	and	w25, w25, #0x7fffffff
  40c5f0:	add	x1, x1, #0x8
  40c5f4:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40c5f8:	add	w4, w28, #0x1
  40c5fc:	mov	x19, x0
  40c600:	stp	w25, w28, [x0]
  40c604:	b	40c4fc <nftw@plt+0x997c>
  40c608:	ldr	x0, [sp, #320]
  40c60c:	mov	w1, #0x20                  	// #32
  40c610:	bl	40f3e8 <nftw@plt+0xc868>
  40c614:	ldr	w2, [sp, #460]
  40c618:	add	w27, w2, #0x1
  40c61c:	cmp	w27, w22
  40c620:	b.le	40bdac <nftw@plt+0x922c>
  40c624:	mov	w25, #0x0                   	// #0
  40c628:	mov	w23, #0x7fffffff            	// #2147483647
  40c62c:	b	40be68 <nftw@plt+0x92e8>
  40c630:	ldr	x0, [sp, #320]
  40c634:	mov	w1, #0x7e                  	// #126
  40c638:	bl	40f3e8 <nftw@plt+0xc868>
  40c63c:	b	40bf84 <nftw@plt+0x9404>
  40c640:	cmp	w4, #0x4
  40c644:	mov	w1, #0x4                   	// #4
  40c648:	csel	w1, w4, w1, cs  // cs = hs, nlast
  40c64c:	mov	w2, #0x4                   	// #4
  40c650:	add	x1, x1, #0x1
  40c654:	csel	w25, w4, w2, cs  // cs = hs, nlast
  40c658:	and	x25, x25, #0x7fffffff
  40c65c:	mov	x0, #0x0                   	// #0
  40c660:	lsl	x1, x1, #3
  40c664:	str	w4, [sp, #96]
  40c668:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40c66c:	str	x25, [x0]
  40c670:	ldr	w4, [sp, #96]
  40c674:	cbz	w28, 40c69c <nftw@plt+0x9b1c>
  40c678:	sub	w2, w28, #0x1
  40c67c:	mov	x1, #0x8                   	// #8
  40c680:	add	x2, x2, #0x2
  40c684:	lsl	x2, x2, #3
  40c688:	ldr	x3, [x19, x1]
  40c68c:	str	x3, [x0, x1]
  40c690:	add	x1, x1, #0x8
  40c694:	cmp	x2, x1
  40c698:	b.ne	40c688 <nftw@plt+0x9b08>  // b.any
  40c69c:	mov	x19, x0
  40c6a0:	str	w28, [x0, #4]
  40c6a4:	b	40c4fc <nftw@plt+0x997c>
  40c6a8:	ldp	x1, x19, [x22, #8]
  40c6ac:	mov	w4, #0x1                   	// #1
  40c6b0:	mov	x0, #0x28                  	// #40
  40c6b4:	str	w4, [sp, #96]
  40c6b8:	str	x1, [sp, #136]
  40c6bc:	mov	w28, #0x0                   	// #0
  40c6c0:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40c6c4:	mov	x22, x0
  40c6c8:	ldr	x1, [sp, #136]
  40c6cc:	stp	w27, w25, [x22]
  40c6d0:	stp	w21, w20, [x22, #8]
  40c6d4:	mov	x0, x1
  40c6d8:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  40c6dc:	stp	x0, x19, [x22, #16]
  40c6e0:	add	x2, x19, #0x1
  40c6e4:	str	x2, [x22, #32]
  40c6e8:	mov	x1, #0x28                  	// #40
  40c6ec:	mov	x0, #0x0                   	// #0
  40c6f0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40c6f4:	mov	x19, x0
  40c6f8:	ldr	w4, [sp, #96]
  40c6fc:	mov	x0, #0x4                   	// #4
  40c700:	str	x0, [x19]
  40c704:	b	40c4fc <nftw@plt+0x997c>
  40c708:	ldr	x0, [sp, #104]
  40c70c:	str	wzr, [x19, #4]
  40c710:	add	x21, x21, #0x1
  40c714:	cmp	x0, x21
  40c718:	b.ge	40bc78 <nftw@plt+0x90f8>  // b.tcont
  40c71c:	b	40c16c <nftw@plt+0x95ec>
  40c720:	ldr	w0, [sp, #460]
  40c724:	str	w0, [sp, #280]
  40c728:	add	x0, sp, #0x138
  40c72c:	add	x1, sp, #0x118
  40c730:	mov	w3, #0x0                   	// #0
  40c734:	mov	w2, #0x0                   	// #0
  40c738:	bl	40a710 <nftw@plt+0x7b90>
  40c73c:	add	x21, x21, #0x1
  40c740:	ldr	x0, [sp, #104]
  40c744:	cmp	x0, x21
  40c748:	b.ge	40bc78 <nftw@plt+0x90f8>  // b.tcont
  40c74c:	b	40c16c <nftw@plt+0x95ec>
  40c750:	ldr	w2, [x0]
  40c754:	cmp	w24, w2
  40c758:	b.eq	40c764 <nftw@plt+0x9be4>  // b.none
  40c75c:	add	x0, x0, #0x28
  40c760:	b	40c2f4 <nftw@plt+0x9774>
  40c764:	ldr	w2, [x0, #4]
  40c768:	cmp	w26, w2
  40c76c:	b.ne	40c75c <nftw@plt+0x9bdc>  // b.any
  40c770:	ldr	w2, [x0, #8]
  40c774:	cmp	w24, w2
  40c778:	b.ne	40c75c <nftw@plt+0x9bdc>  // b.any
  40c77c:	ldr	w2, [x0, #12]
  40c780:	cmp	w25, w2
  40c784:	b.ne	40c75c <nftw@plt+0x9bdc>  // b.any
  40c788:	ldr	x0, [x22, #24]
  40c78c:	cbz	x0, 40c2fc <nftw@plt+0x977c>
  40c790:	mov	w2, w26
  40c794:	mov	w3, #0x1                   	// #1
  40c798:	add	x1, sp, #0x118
  40c79c:	add	x0, sp, #0x138
  40c7a0:	bl	40a710 <nftw@plt+0x7b90>
  40c7a4:	mov	x0, x20
  40c7a8:	mov	w1, #0xfffffffe            	// #-2
  40c7ac:	bl	40a5a0 <nftw@plt+0x7a20>
  40c7b0:	ldr	x1, [x22, #16]
  40c7b4:	ldr	x0, [sp, #320]
  40c7b8:	bl	40f9a8 <nftw@plt+0xce28>
  40c7bc:	mov	x0, x20
  40c7c0:	mov	w1, #0xffffffff            	// #-1
  40c7c4:	bl	40a5a0 <nftw@plt+0x7a20>
  40c7c8:	ldr	x1, [x22, #24]
  40c7cc:	ldr	w0, [sp, #280]
  40c7d0:	add	w0, w0, w1
  40c7d4:	str	w0, [sp, #280]
  40c7d8:	b	40c35c <nftw@plt+0x97dc>
  40c7dc:	ldr	w2, [x22, #8]
  40c7e0:	b	40c794 <nftw@plt+0x9c14>
  40c7e4:	add	x0, x22, #0x8
  40c7e8:	mov	x2, #0x28                  	// #40
  40c7ec:	mov	w1, w1
  40c7f0:	adrp	x3, 40a000 <nftw@plt+0x7480>
  40c7f4:	add	x3, x3, #0x530
  40c7f8:	bl	416cd0 <nftw@plt+0x14150>
  40c7fc:	ldr	w2, [x22, #4]
  40c800:	mov	w25, #0x1                   	// #1
  40c804:	sub	w0, w2, #0x1
  40c808:	cbnz	w2, 40c104 <nftw@plt+0x9584>
  40c80c:	mov	w27, #0x0                   	// #0
  40c810:	mov	w23, #0x0                   	// #0
  40c814:	nop
  40c818:	ldrb	w0, [sp, #426]
  40c81c:	cbz	w0, 40c82c <nftw@plt+0x9cac>
  40c820:	add	x0, sp, #0x138
  40c824:	mov	w1, #0x20                  	// #32
  40c828:	bl	40a470 <nftw@plt+0x78f0>
  40c82c:	ldr	x0, [sp, #320]
  40c830:	mov	w1, #0x20                  	// #32
  40c834:	bl	40f3e8 <nftw@plt+0xc868>
  40c838:	ldr	w0, [sp, #460]
  40c83c:	add	w0, w0, #0x1
  40c840:	str	w0, [sp, #280]
  40c844:	ldr	w0, [x22, #4]
  40c848:	cbz	w0, 40c8d0 <nftw@plt+0x9d50>
  40c84c:	add	x19, x22, #0x8
  40c850:	mov	w28, #0x0                   	// #0
  40c854:	ldr	w1, [x19, #32]
  40c858:	cmp	w1, w23
  40c85c:	b.lt	40c8d0 <nftw@plt+0x9d50>  // b.tstop
  40c860:	ldr	w2, [x19, #4]
  40c864:	b.eq	40c928 <nftw@plt+0x9da8>  // b.none
  40c868:	cmp	w27, w2
  40c86c:	b.eq	40c8c0 <nftw@plt+0x9d40>  // b.none
  40c870:	ldr	w0, [sp, #280]
  40c874:	cmp	w0, w2
  40c878:	b.gt	40ce44 <nftw@plt+0xa2c4>
  40c87c:	mov	w3, #0x1                   	// #1
  40c880:	add	x1, sp, #0x118
  40c884:	add	x0, sp, #0x138
  40c888:	bl	40a710 <nftw@plt+0x7b90>
  40c88c:	ldr	w1, [x19]
  40c890:	mov	x0, x20
  40c894:	bl	40a5a0 <nftw@plt+0x7a20>
  40c898:	ldr	x0, [sp, #320]
  40c89c:	mov	w1, #0x7c                  	// #124
  40c8a0:	bl	40f3e8 <nftw@plt+0xc868>
  40c8a4:	mov	x0, x20
  40c8a8:	mov	w1, #0xffffffff            	// #-1
  40c8ac:	bl	40a5a0 <nftw@plt+0x7a20>
  40c8b0:	ldr	w27, [sp, #280]
  40c8b4:	add	w0, w27, #0x1
  40c8b8:	str	w0, [sp, #280]
  40c8bc:	ldr	w0, [x22, #4]
  40c8c0:	add	w28, w28, #0x1
  40c8c4:	add	x19, x19, #0x28
  40c8c8:	cmp	w0, w28
  40c8cc:	b.hi	40c854 <nftw@plt+0x9cd4>  // b.pmore
  40c8d0:	mov	x0, x20
  40c8d4:	mov	w1, #0xffffffff            	// #-1
  40c8d8:	bl	40a5a0 <nftw@plt+0x7a20>
  40c8dc:	add	w23, w23, #0x1
  40c8e0:	ldr	x0, [sp, #320]
  40c8e4:	bl	40f388 <nftw@plt+0xc808>
  40c8e8:	cmp	w23, w25
  40c8ec:	b.le	40c818 <nftw@plt+0x9c98>
  40c8f0:	ldr	w0, [x22, #4]
  40c8f4:	cbz	w0, 40c918 <nftw@plt+0x9d98>
  40c8f8:	add	x19, x22, #0x10
  40c8fc:	mov	w23, #0x0                   	// #0
  40c900:	ldrb	w1, [x19, #8]
  40c904:	cbnz	w1, 40cc18 <nftw@plt+0xa098>
  40c908:	add	w23, w23, #0x1
  40c90c:	add	x19, x19, #0x28
  40c910:	cmp	w0, w23
  40c914:	b.hi	40c900 <nftw@plt+0x9d80>  // b.pmore
  40c918:	ldrsb	w0, [x22, #3]
  40c91c:	tbz	w0, #31, 40c214 <nftw@plt+0x9694>
  40c920:	str	wzr, [x22, #4]
  40c924:	b	40c220 <nftw@plt+0x96a0>
  40c928:	ldr	w0, [sp, #280]
  40c92c:	cmp	w0, w2
  40c930:	b.gt	40ce5c <nftw@plt+0xa2dc>
  40c934:	mov	w3, #0x1                   	// #1
  40c938:	add	x1, sp, #0x118
  40c93c:	add	x0, sp, #0x138
  40c940:	bl	40a710 <nftw@plt+0x7b90>
  40c944:	ldr	w1, [x19]
  40c948:	mov	x0, x20
  40c94c:	bl	40a5a0 <nftw@plt+0x7a20>
  40c950:	ldr	x1, [x19, #8]
  40c954:	ldr	x0, [sp, #320]
  40c958:	bl	40f9a8 <nftw@plt+0xce28>
  40c95c:	mov	x0, x20
  40c960:	mov	w1, #0xffffffff            	// #-1
  40c964:	bl	40a5a0 <nftw@plt+0x7a20>
  40c968:	ldr	x1, [x19, #24]
  40c96c:	ldr	w0, [sp, #280]
  40c970:	add	w0, w0, w1
  40c974:	str	w0, [sp, #280]
  40c978:	ldr	w0, [x22, #4]
  40c97c:	b	40c8c0 <nftw@plt+0x9d40>
  40c980:	ldr	w2, [sp, #148]
  40c984:	ldr	w1, [sp, #344]
  40c988:	cbnz	w2, 40c998 <nftw@plt+0x9e18>
  40c98c:	ldr	w0, [x0, #12]
  40c990:	cmp	w0, w1
  40c994:	b.ge	40bc60 <nftw@plt+0x90e0>  // b.tcont
  40c998:	ldr	w4, [x21]
  40c99c:	cmp	w1, w4
  40c9a0:	b.cc	40cb24 <nftw@plt+0x9fa4>  // b.lo, b.ul, b.last
  40c9a4:	ldr	w0, [x21, #4]
  40c9a8:	cmp	w1, w0
  40c9ac:	b.hi	40cb24 <nftw@plt+0x9fa4>  // b.pmore
  40c9b0:	add	x3, sp, #0x200
  40c9b4:	add	x2, sp, #0xf8
  40c9b8:	ldp	x4, x5, [sp, #336]
  40c9bc:	stp	x4, x5, [sp, #248]
  40c9c0:	ldp	x0, x1, [sp, #352]
  40c9c4:	stp	x0, x1, [x3, #-248]
  40c9c8:	ldp	x0, x1, [x2]
  40c9cc:	stp	x0, x1, [sp, #208]
  40c9d0:	ldr	x0, [sp, #168]
  40c9d4:	add	x1, sp, #0xd0
  40c9d8:	ldp	x4, x5, [x2, #16]
  40c9dc:	ldr	x3, [x0, #144]
  40c9e0:	stp	x4, x5, [sp, #224]
  40c9e4:	blr	x3
  40c9e8:	b	40bc60 <nftw@plt+0x90e0>
  40c9ec:	ldr	x2, [x5, #24]
  40c9f0:	tbnz	w2, #31, 40ce74 <nftw@plt+0xa2f4>
  40c9f4:	subs	w20, w21, w28
  40c9f8:	b.mi	40ce8c <nftw@plt+0xa30c>  // b.first
  40c9fc:	ldr	x27, [x22, #16]
  40ca00:	add	w21, w20, w2
  40ca04:	adds	w27, w21, w27
  40ca08:	b.mi	40cea4 <nftw@plt+0xa324>  // b.first
  40ca0c:	ldr	x0, [x5, #32]
  40ca10:	sxtw	x28, w27
  40ca14:	add	x1, x28, #0x1
  40ca18:	cmp	x0, x1
  40ca1c:	b.cc	40cac8 <nftw@plt+0x9f48>  // b.lo, b.ul, b.last
  40ca20:	tbnz	w7, #31, 40cebc <nftw@plt+0xa33c>
  40ca24:	cmp	w7, w6
  40ca28:	b.ge	40ced4 <nftw@plt+0xa354>  // b.tcont
  40ca2c:	add	w0, w7, w20
  40ca30:	cmp	w6, w0
  40ca34:	b.lt	40ceec <nftw@plt+0xa36c>  // b.tstop
  40ca38:	ldr	x6, [x5, #32]
  40ca3c:	sxtw	x20, w20
  40ca40:	add	x9, x20, w2, sxtw
  40ca44:	add	x1, x8, w7, sxtw
  40ca48:	sxtw	x0, w2
  40ca4c:	cmp	x9, x6
  40ca50:	b.cs	40cf04 <nftw@plt+0xa384>  // b.hs, b.nlast
  40ca54:	ldr	x6, [x5, #16]
  40ca58:	mov	x2, x20
  40ca5c:	str	x5, [sp, #96]
  40ca60:	add	x0, x6, x0
  40ca64:	bl	402490 <memcpy@plt>
  40ca68:	ldp	x1, x2, [x22, #8]
  40ca6c:	sxtw	x4, w21
  40ca70:	ldr	x5, [sp, #96]
  40ca74:	ldr	x0, [x5, #32]
  40ca78:	add	x6, x2, x4
  40ca7c:	cmp	x6, x0
  40ca80:	b.cs	40cf04 <nftw@plt+0xa384>  // b.hs, b.nlast
  40ca84:	ldr	x0, [x5, #16]
  40ca88:	add	x0, x0, x4
  40ca8c:	bl	402490 <memcpy@plt>
  40ca90:	ldr	x5, [sp, #96]
  40ca94:	ldr	x0, [x5, #32]
  40ca98:	str	x28, [x5, #24]
  40ca9c:	cmp	x28, x0
  40caa0:	b.cs	40cf1c <nftw@plt+0xa39c>  // b.hs, b.nlast
  40caa4:	ldr	x0, [x5, #16]
  40caa8:	strb	wzr, [x0, w27, sxtw]
  40caac:	ldr	x1, [x22, #16]
  40cab0:	str	w25, [x5, #4]
  40cab4:	ldr	w0, [x5, #12]
  40cab8:	add	x3, x20, x1
  40cabc:	add	w3, w0, w3
  40cac0:	str	w3, [x5, #12]
  40cac4:	b	40c27c <nftw@plt+0x96fc>
  40cac8:	ldr	x0, [x5, #16]
  40cacc:	lsl	x1, x1, #1
  40cad0:	str	x1, [sp, #96]
  40cad4:	str	x5, [sp, #136]
  40cad8:	str	w7, [sp, #160]
  40cadc:	stp	x2, x8, [sp, #184]
  40cae0:	str	x6, [sp, #200]
  40cae4:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40cae8:	ldr	x5, [sp, #136]
  40caec:	ldr	x1, [sp, #96]
  40caf0:	ldr	w7, [sp, #160]
  40caf4:	str	x0, [x5, #16]
  40caf8:	str	x1, [x5, #32]
  40cafc:	ldp	x2, x8, [sp, #184]
  40cb00:	ldr	x6, [sp, #200]
  40cb04:	b	40ca20 <nftw@plt+0x9ea0>
  40cb08:	b.eq	40bd38 <nftw@plt+0x91b8>  // b.none
  40cb0c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cb10:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cb14:	add	x2, x2, #0x380
  40cb18:	add	x0, x0, #0x290
  40cb1c:	mov	w1, #0x2b9                 	// #697
  40cb20:	bl	402bf0 <nftw@plt+0x70>
  40cb24:	ldr	x2, [sp, #432]
  40cb28:	mov	w1, #0x0                   	// #0
  40cb2c:	cbz	x2, 40cba0 <nftw@plt+0xa020>
  40cb30:	ldr	w0, [x2, #4]
  40cb34:	cmp	w0, w1
  40cb38:	b.ls	40cba0 <nftw@plt+0xa020>  // b.plast
  40cb3c:	ubfiz	x0, x1, #2, #32
  40cb40:	add	x0, x0, w1, uxtw
  40cb44:	add	x0, x2, x0, lsl #3
  40cb48:	ldr	w3, [x0, #8]
  40cb4c:	cmp	w4, w3
  40cb50:	b.hi	40cb98 <nftw@plt+0xa018>  // b.pmore
  40cb54:	ldr	w5, [x21, #4]
  40cb58:	cmp	w3, w5
  40cb5c:	b.hi	40cb98 <nftw@plt+0xa018>  // b.pmore
  40cb60:	add	x1, sp, #0x200
  40cb64:	ldr	w0, [x0, #12]
  40cb68:	ldp	x4, x5, [sp, #336]
  40cb6c:	add	x2, sp, #0xf8
  40cb70:	stp	x4, x5, [x1, #-232]
  40cb74:	str	w3, [sp, #288]
  40cb78:	add	x3, sp, #0x200
  40cb7c:	str	w0, [sp, #292]
  40cb80:	ldp	x0, x1, [sp, #352]
  40cb84:	stp	x0, x1, [x3, #-248]
  40cb88:	ldp	x4, x5, [x3, #-232]
  40cb8c:	stp	x0, x1, [x3, #-216]
  40cb90:	stp	x4, x5, [sp, #248]
  40cb94:	b	40c9c8 <nftw@plt+0x9e48>
  40cb98:	add	w1, w1, #0x1
  40cb9c:	cbnz	x2, 40cb30 <nftw@plt+0x9fb0>
  40cba0:	ldr	x0, [sp, #440]
  40cba4:	cbz	x0, 40cdd4 <nftw@plt+0xa254>
  40cba8:	mov	w19, #0x0                   	// #0
  40cbac:	ldr	w1, [x0, #4]
  40cbb0:	cmp	w1, w19
  40cbb4:	b.ls	40cdd4 <nftw@plt+0xa254>  // b.plast
  40cbb8:	add	x0, x0, w19, uxtw #3
  40cbbc:	add	x8, sp, #0x118
  40cbc0:	ldr	x0, [x0, #8]
  40cbc4:	ldr	w0, [x0]
  40cbc8:	bl	414608 <nftw@plt+0x11a88>
  40cbcc:	ldr	w1, [x21]
  40cbd0:	ldr	w0, [sp, #288]
  40cbd4:	cmp	w0, w1
  40cbd8:	b.cc	40cdc8 <nftw@plt+0xa248>  // b.lo, b.ul, b.last
  40cbdc:	ldr	w1, [x21, #4]
  40cbe0:	cmp	w0, w1
  40cbe4:	b.hi	40cdc8 <nftw@plt+0xa248>  // b.pmore
  40cbe8:	add	x0, sp, #0x200
  40cbec:	add	x3, sp, #0x200
  40cbf0:	add	x2, sp, #0xf8
  40cbf4:	ldp	x4, x5, [x0, #-232]
  40cbf8:	stp	x4, x5, [sp, #248]
  40cbfc:	ldp	x0, x1, [x0, #-216]
  40cc00:	stp	x0, x1, [x3, #-248]
  40cc04:	b	40c9c8 <nftw@plt+0x9e48>
  40cc08:	ldr	w1, [x2, #12]
  40cc0c:	cmp	w1, w22
  40cc10:	csinc	w22, w22, w1, lt  // lt = tstop
  40cc14:	b	40bf08 <nftw@plt+0x9388>
  40cc18:	ldr	x0, [x19]
  40cc1c:	bl	402910 <free@plt>
  40cc20:	ldr	w0, [x22, #4]
  40cc24:	b	40c908 <nftw@plt+0x9d88>
  40cc28:	ldrb	w0, [sp, #426]
  40cc2c:	cbz	w0, 40cf34 <nftw@plt+0xa3b4>
  40cc30:	ldr	w0, [sp, #456]
  40cc34:	mov	w19, #0x0                   	// #0
  40cc38:	tbnz	w0, #31, 40cc5c <nftw@plt+0xa0dc>
  40cc3c:	nop
  40cc40:	ldr	x0, [sp, #320]
  40cc44:	mov	w1, #0x2e                  	// #46
  40cc48:	add	w19, w19, #0x1
  40cc4c:	bl	40f3e8 <nftw@plt+0xc868>
  40cc50:	ldr	w0, [sp, #456]
  40cc54:	cmp	w0, w19
  40cc58:	b.ge	40cc40 <nftw@plt+0xa0c0>  // b.tcont
  40cc5c:	ldr	x0, [sp, #320]
  40cc60:	bl	40f388 <nftw@plt+0xc808>
  40cc64:	b	40bc60 <nftw@plt+0x90e0>
  40cc68:	ldrsb	w0, [x22, #3]
  40cc6c:	tbnz	w0, #31, 40ccc0 <nftw@plt+0xa140>
  40cc70:	mov	w0, w6
  40cc74:	stp	x8, x7, [sp, #120]
  40cc78:	bl	411bd8 <nftw@plt+0xf058>
  40cc7c:	mov	w19, w0
  40cc80:	mov	w2, #0x28                  	// #40
  40cc84:	mov	x1, #0x8                   	// #8
  40cc88:	ldr	w6, [x22, #4]
  40cc8c:	mov	x0, x22
  40cc90:	str	w6, [sp, #112]
  40cc94:	umaddl	x1, w19, w2, x1
  40cc98:	and	w19, w19, #0x7fffffff
  40cc9c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40cca0:	mov	x22, x0
  40cca4:	ldr	w6, [sp, #112]
  40cca8:	stp	w19, w6, [x0]
  40ccac:	add	w1, w6, #0x1
  40ccb0:	ldp	x8, x7, [sp, #120]
  40ccb4:	b	40c0a8 <nftw@plt+0x9528>
  40ccb8:	ldr	x19, [sp, #432]
  40ccbc:	b	40c0e0 <nftw@plt+0x9560>
  40ccc0:	cmp	w10, #0x4
  40ccc4:	mov	w2, #0x4                   	// #4
  40ccc8:	csel	w2, w10, w2, cs  // cs = hs, nlast
  40cccc:	mov	w3, #0x28                  	// #40
  40ccd0:	mov	x19, #0x8                   	// #8
  40ccd4:	mov	x0, #0x0                   	// #0
  40ccd8:	str	w2, [sp, #112]
  40ccdc:	umaddl	x1, w2, w3, x19
  40cce0:	str	w10, [sp, #120]
  40cce4:	str	w6, [sp, #128]
  40cce8:	str	x8, [sp, #136]
  40ccec:	str	x7, [sp, #160]
  40ccf0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40ccf4:	ldr	w2, [sp, #112]
  40ccf8:	mov	w3, #0x28                  	// #40
  40ccfc:	ldr	w6, [sp, #128]
  40cd00:	and	x2, x2, #0x7fffffff
  40cd04:	str	x2, [x0]
  40cd08:	ldr	w10, [sp, #120]
  40cd0c:	ldr	x8, [sp, #136]
  40cd10:	ldr	x7, [sp, #160]
  40cd14:	cbz	w6, 40cd54 <nftw@plt+0xa1d4>
  40cd18:	sub	w9, w6, #0x1
  40cd1c:	mov	x2, #0x30                  	// #48
  40cd20:	mov	x1, x19
  40cd24:	umaddl	x9, w9, w3, x2
  40cd28:	add	x3, x22, x1
  40cd2c:	add	x2, x0, x1
  40cd30:	add	x1, x1, #0x28
  40cd34:	cmp	x9, x1
  40cd38:	ldp	x4, x5, [x3]
  40cd3c:	stp	x4, x5, [x2]
  40cd40:	ldp	x4, x5, [x3, #16]
  40cd44:	stp	x4, x5, [x2, #16]
  40cd48:	ldr	x3, [x3, #32]
  40cd4c:	str	x3, [x2, #32]
  40cd50:	b.ne	40cd28 <nftw@plt+0xa1a8>  // b.any
  40cd54:	mov	w1, w10
  40cd58:	mov	x22, x0
  40cd5c:	str	w6, [x0, #4]
  40cd60:	b	40c0a8 <nftw@plt+0x9528>
  40cd64:	ldr	w1, [x1, #36]
  40cd68:	blr	x2
  40cd6c:	mov	x7, x0
  40cd70:	and	w0, w1, #0xff
  40cd74:	str	w0, [sp, #96]
  40cd78:	b	40c068 <nftw@plt+0x94e8>
  40cd7c:	str	wzr, [x0, #4]
  40cd80:	b	40c1ac <nftw@plt+0x962c>
  40cd84:	str	wzr, [x0, #4]
  40cd88:	ldr	w0, [sp, #380]
  40cd8c:	cmn	w0, #0x1
  40cd90:	b.eq	40c1e0 <nftw@plt+0x9660>  // b.none
  40cd94:	ldr	x0, [sp, #368]
  40cd98:	ldr	x1, [sp, #416]
  40cd9c:	ldr	x0, [x0]
  40cda0:	bl	40f9a8 <nftw@plt+0xce28>
  40cda4:	ldp	x19, x20, [sp, #16]
  40cda8:	ldp	x21, x22, [sp, #32]
  40cdac:	ldp	x23, x24, [sp, #48]
  40cdb0:	ldp	x25, x26, [sp, #64]
  40cdb4:	ldp	x27, x28, [sp, #80]
  40cdb8:	ldp	x29, x30, [sp], #464
  40cdbc:	ret
  40cdc0:	str	wzr, [x0, #4]
  40cdc4:	b	40c1c0 <nftw@plt+0x9640>
  40cdc8:	ldr	x0, [sp, #440]
  40cdcc:	add	w19, w19, #0x1
  40cdd0:	cbnz	x0, 40cbac <nftw@plt+0xa02c>
  40cdd4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cdd8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cddc:	add	x2, x2, #0x350
  40cde0:	add	x0, x0, #0x290
  40cde4:	mov	w1, #0x449                 	// #1097
  40cde8:	bl	402bf0 <nftw@plt+0x70>
  40cdec:	mov	x1, #0xa8                  	// #168
  40cdf0:	mov	x0, #0x0                   	// #0
  40cdf4:	stp	x8, x7, [sp, #112]
  40cdf8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40cdfc:	mov	w6, #0x0                   	// #0
  40ce00:	mov	x22, x0
  40ce04:	add	w1, w6, #0x1
  40ce08:	str	x25, [x0]
  40ce0c:	ldp	x8, x7, [sp, #112]
  40ce10:	b	40c0a8 <nftw@plt+0x9528>
  40ce14:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce18:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce1c:	add	x2, x2, #0x3e8
  40ce20:	add	x0, x0, #0x290
  40ce24:	mov	w1, #0x77a                 	// #1914
  40ce28:	bl	402bf0 <nftw@plt+0x70>
  40ce2c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce30:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce34:	add	x2, x2, #0x3e8
  40ce38:	add	x0, x0, #0x290
  40ce3c:	mov	w1, #0x77c                 	// #1916
  40ce40:	bl	402bf0 <nftw@plt+0x70>
  40ce44:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce48:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce4c:	add	x2, x2, #0x3d0
  40ce50:	add	x0, x0, #0x290
  40ce54:	mov	w1, #0x612                 	// #1554
  40ce58:	bl	402bf0 <nftw@plt+0x70>
  40ce5c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce60:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce64:	add	x2, x2, #0x3d0
  40ce68:	add	x0, x0, #0x290
  40ce6c:	mov	w1, #0x609                 	// #1545
  40ce70:	bl	402bf0 <nftw@plt+0x70>
  40ce74:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce78:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce7c:	add	x2, x2, #0x3e8
  40ce80:	add	x0, x0, #0x290
  40ce84:	mov	w1, #0x792                 	// #1938
  40ce88:	bl	402bf0 <nftw@plt+0x70>
  40ce8c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce90:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ce94:	add	x2, x2, #0x3e8
  40ce98:	add	x0, x0, #0x290
  40ce9c:	mov	w1, #0x794                 	// #1940
  40cea0:	bl	402bf0 <nftw@plt+0x70>
  40cea4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cea8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ceac:	add	x2, x2, #0x3e8
  40ceb0:	add	x0, x0, #0x290
  40ceb4:	mov	w1, #0x796                 	// #1942
  40ceb8:	bl	402bf0 <nftw@plt+0x70>
  40cebc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cec0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cec4:	add	x2, x2, #0x3f8
  40cec8:	add	x0, x0, #0x400
  40cecc:	mov	w1, #0x44                  	// #68
  40ced0:	bl	402bf0 <nftw@plt+0x70>
  40ced4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ced8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cedc:	add	x2, x2, #0x3f8
  40cee0:	add	x0, x0, #0x400
  40cee4:	mov	w1, #0x45                  	// #69
  40cee8:	bl	402bf0 <nftw@plt+0x70>
  40ceec:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cef0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cef4:	add	x2, x2, #0x3f8
  40cef8:	add	x0, x0, #0x400
  40cefc:	mov	w1, #0x47                  	// #71
  40cf00:	bl	402bf0 <nftw@plt+0x70>
  40cf04:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf08:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf0c:	add	x2, x2, #0x418
  40cf10:	add	x0, x0, #0x290
  40cf14:	mov	w1, #0x706                 	// #1798
  40cf18:	bl	402bf0 <nftw@plt+0x70>
  40cf1c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf20:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf24:	add	x2, x2, #0x428
  40cf28:	add	x0, x0, #0x290
  40cf2c:	mov	w1, #0x732                 	// #1842
  40cf30:	bl	402bf0 <nftw@plt+0x70>
  40cf34:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf38:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf3c:	add	x2, x2, #0x330
  40cf40:	add	x0, x0, #0x290
  40cf44:	mov	w1, #0x408                 	// #1032
  40cf48:	bl	402bf0 <nftw@plt+0x70>
  40cf4c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf50:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf54:	add	x2, x2, #0x3b8
  40cf58:	add	x0, x0, #0x290
  40cf5c:	mov	w1, #0x215                 	// #533
  40cf60:	bl	402bf0 <nftw@plt+0x70>
  40cf64:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf68:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40cf6c:	add	x2, x2, #0x368
  40cf70:	add	x0, x0, #0x290
  40cf74:	mov	w1, #0x638                 	// #1592
  40cf78:	bl	402bf0 <nftw@plt+0x70>
  40cf7c:	nop
  40cf80:	mov	x1, #0x0                   	// #0
  40cf84:	ldr	x0, [x0, #8]
  40cf88:	ret
  40cf8c:	nop
  40cf90:	sub	w0, w0, w1
  40cf94:	ret
  40cf98:	stp	x29, x30, [sp, #-48]!
  40cf9c:	and	w1, w1, #0xff
  40cfa0:	mov	x29, sp
  40cfa4:	stp	x19, x20, [sp, #16]
  40cfa8:	mov	x19, x2
  40cfac:	mov	x20, x0
  40cfb0:	str	x21, [sp, #32]
  40cfb4:	mov	w21, w3
  40cfb8:	bl	40f3e8 <nftw@plt+0xc868>
  40cfbc:	cmp	w21, #0x0
  40cfc0:	b.le	40cfe4 <nftw@plt+0xa464>
  40cfc4:	sub	w3, w21, #0x1
  40cfc8:	add	x21, x19, #0x1
  40cfcc:	add	x21, x21, x3
  40cfd0:	ldrb	w1, [x19], #1
  40cfd4:	mov	x0, x20
  40cfd8:	bl	40f3e8 <nftw@plt+0xc868>
  40cfdc:	cmp	x19, x21
  40cfe0:	b.ne	40cfd0 <nftw@plt+0xa450>  // b.any
  40cfe4:	mov	x0, x20
  40cfe8:	mov	w1, #0xa                   	// #10
  40cfec:	ldp	x19, x20, [sp, #16]
  40cff0:	ldr	x21, [sp, #32]
  40cff4:	ldp	x29, x30, [sp], #48
  40cff8:	b	40f3e8 <nftw@plt+0xc868>
  40cffc:	nop
  40d000:	stp	x29, x30, [sp, #-32]!
  40d004:	add	w1, w1, #0x1
  40d008:	mov	x29, sp
  40d00c:	stp	x19, x20, [sp, #16]
  40d010:	mov	x20, x0
  40d014:	lsl	w19, w1, #1
  40d018:	ldr	x0, [x0, #8]
  40d01c:	sxtw	x1, w19
  40d020:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40d024:	str	x0, [x20, #8]
  40d028:	str	w19, [x20, #20]
  40d02c:	ldp	x19, x20, [sp, #16]
  40d030:	ldp	x29, x30, [sp], #32
  40d034:	ret
  40d038:	mov	x1, x0
  40d03c:	mov	w4, #0x1                   	// #1
  40d040:	adrp	x3, 402000 <memcpy@plt-0x490>
  40d044:	adrp	x2, 40d000 <nftw@plt+0xa480>
  40d048:	add	x3, x3, #0x890
  40d04c:	add	x2, x2, #0x8c8
  40d050:	strb	w4, [x1], #8
  40d054:	str	xzr, [x0, #8]
  40d058:	stp	x3, xzr, [x1, #8]
  40d05c:	str	x2, [x1, #24]
  40d060:	ret
  40d064:	nop
  40d068:	mov	x2, x0
  40d06c:	adrp	x4, 40c000 <nftw@plt+0x9480>
  40d070:	adrp	x3, 40d000 <nftw@plt+0xa480>
  40d074:	add	x4, x4, #0xf90
  40d078:	add	x3, x3, #0x280
  40d07c:	mov	w5, #0xffffffff            	// #-1
  40d080:	str	x1, [x2], #8
  40d084:	str	xzr, [x0, #8]
  40d088:	stp	x4, xzr, [x2, #8]
  40d08c:	str	x3, [x2, #24]
  40d090:	str	w5, [x0, #40]
  40d094:	ret
  40d098:	stp	x29, x30, [sp, #-32]!
  40d09c:	mov	x29, sp
  40d0a0:	stp	x19, x20, [sp, #16]
  40d0a4:	cbz	x1, 40d11c <nftw@plt+0xa59c>
  40d0a8:	mov	x19, x0
  40d0ac:	ldr	w0, [x0, #40]
  40d0b0:	mov	x20, x1
  40d0b4:	cmn	w0, #0x1
  40d0b8:	b.eq	40d0d8 <nftw@plt+0xa558>  // b.none
  40d0bc:	ldr	x0, [x19]
  40d0c0:	bl	414580 <nftw@plt+0x11a00>
  40d0c4:	strb	w0, [x20]
  40d0c8:	ldr	w0, [x19, #40]
  40d0cc:	ldp	x19, x20, [sp, #16]
  40d0d0:	ldp	x29, x30, [sp], #32
  40d0d4:	ret
  40d0d8:	mov	w1, #0x0                   	// #0
  40d0dc:	str	wzr, [x19, #40]
  40d0e0:	b	40d0f0 <nftw@plt+0xa570>
  40d0e4:	ldr	w1, [x19, #40]
  40d0e8:	add	w1, w1, #0x1
  40d0ec:	str	w1, [x19, #40]
  40d0f0:	ldr	x0, [x19]
  40d0f4:	add	w1, w1, #0x1
  40d0f8:	bl	4143a8 <nftw@plt+0x11828>
  40d0fc:	cbnz	x0, 40d0e4 <nftw@plt+0xa564>
  40d100:	ldr	x0, [x19]
  40d104:	bl	414580 <nftw@plt+0x11a00>
  40d108:	strb	w0, [x20]
  40d10c:	ldr	w0, [x19, #40]
  40d110:	ldp	x19, x20, [sp, #16]
  40d114:	ldp	x29, x30, [sp], #32
  40d118:	ret
  40d11c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d120:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d124:	add	x2, x2, #0x460
  40d128:	add	x0, x0, #0x440
  40d12c:	mov	w1, #0x296                 	// #662
  40d130:	bl	402bf0 <nftw@plt+0x70>
  40d134:	nop
  40d138:	stp	x29, x30, [sp, #-32]!
  40d13c:	mov	x29, sp
  40d140:	stp	x19, x20, [sp, #16]
  40d144:	mov	x19, x0
  40d148:	mov	x0, x1
  40d14c:	mov	w1, w2
  40d150:	str	w2, [x19]
  40d154:	stp	xzr, xzr, [x19, #8]
  40d158:	stp	xzr, xzr, [x19, #24]
  40d15c:	bl	4143a8 <nftw@plt+0x11828>
  40d160:	cbz	x0, 40d1a0 <nftw@plt+0xa620>
  40d164:	mov	x20, x0
  40d168:	ldr	w0, [x19, #20]
  40d16c:	str	w1, [x19, #16]
  40d170:	mov	w2, w1
  40d174:	cmp	w1, w0
  40d178:	b.ge	40d1ac <nftw@plt+0xa62c>  // b.tcont
  40d17c:	ldr	x0, [x19, #8]
  40d180:	mov	x1, x20
  40d184:	sxtw	x2, w2
  40d188:	bl	402490 <memcpy@plt>
  40d18c:	ldp	w0, w1, [x19, #16]
  40d190:	cmp	w0, w1
  40d194:	b.ge	40d1bc <nftw@plt+0xa63c>  // b.tcont
  40d198:	ldr	x1, [x19, #8]
  40d19c:	strb	wzr, [x1, w0, sxtw]
  40d1a0:	ldp	x19, x20, [sp, #16]
  40d1a4:	ldp	x29, x30, [sp], #32
  40d1a8:	ret
  40d1ac:	mov	x0, x19
  40d1b0:	bl	40d000 <nftw@plt+0xa480>
  40d1b4:	ldr	w2, [x19, #16]
  40d1b8:	b	40d17c <nftw@plt+0xa5fc>
  40d1bc:	bl	402c3c <nftw@plt+0xbc>
  40d1c0:	stp	x29, x30, [sp, #-48]!
  40d1c4:	mov	x29, sp
  40d1c8:	stp	x19, x20, [sp, #16]
  40d1cc:	mov	x19, x0
  40d1d0:	ldr	x0, [x0, #8]
  40d1d4:	bl	402910 <free@plt>
  40d1d8:	ldr	x0, [x19, #32]
  40d1dc:	cbz	x0, 40d228 <nftw@plt+0xa6a8>
  40d1e0:	mov	w20, #0x0                   	// #0
  40d1e4:	ldr	w1, [x0, #4]
  40d1e8:	add	x2, x0, w20, uxtw #3
  40d1ec:	cmp	w1, w20
  40d1f0:	b.ls	40d244 <nftw@plt+0xa6c4>  // b.plast
  40d1f4:	str	x21, [sp, #32]
  40d1f8:	add	w20, w20, #0x1
  40d1fc:	ldr	x21, [x2, #8]
  40d200:	cbz	x21, 40d21c <nftw@plt+0xa69c>
  40d204:	ldr	x0, [x21]
  40d208:	bl	402910 <free@plt>
  40d20c:	mov	x0, x21
  40d210:	mov	x1, #0x10                  	// #16
  40d214:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  40d218:	ldr	x0, [x19, #32]
  40d21c:	ldr	x21, [sp, #32]
  40d220:	cbnz	x0, 40d1e4 <nftw@plt+0xa664>
  40d224:	nop
  40d228:	ldr	x0, [x19, #24]
  40d22c:	cbz	x0, 40d258 <nftw@plt+0xa6d8>
  40d230:	ldrsb	w1, [x0, #3]
  40d234:	tbnz	w1, #31, 40d26c <nftw@plt+0xa6ec>
  40d238:	ldp	x19, x20, [sp, #16]
  40d23c:	ldp	x29, x30, [sp], #48
  40d240:	b	402910 <free@plt>
  40d244:	ldrsb	w1, [x0, #3]
  40d248:	tbnz	w1, #31, 40d264 <nftw@plt+0xa6e4>
  40d24c:	bl	402910 <free@plt>
  40d250:	ldr	x0, [x19, #24]
  40d254:	cbnz	x0, 40d230 <nftw@plt+0xa6b0>
  40d258:	ldp	x19, x20, [sp, #16]
  40d25c:	ldp	x29, x30, [sp], #48
  40d260:	ret
  40d264:	str	wzr, [x0, #4]
  40d268:	b	40d228 <nftw@plt+0xa6a8>
  40d26c:	str	wzr, [x0, #4]
  40d270:	ldp	x19, x20, [sp, #16]
  40d274:	ldp	x29, x30, [sp], #48
  40d278:	ret
  40d27c:	nop
  40d280:	cbz	x0, 40d2ac <nftw@plt+0xa72c>
  40d284:	stp	x29, x30, [sp, #-32]!
  40d288:	mov	x29, sp
  40d28c:	str	x19, [sp, #16]
  40d290:	mov	x19, x0
  40d294:	bl	40d1c0 <nftw@plt+0xa640>
  40d298:	mov	x0, x19
  40d29c:	mov	x1, #0x28                  	// #40
  40d2a0:	ldr	x19, [sp, #16]
  40d2a4:	ldp	x29, x30, [sp], #32
  40d2a8:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  40d2ac:	ret
  40d2b0:	ldr	x2, [x0, #24]
  40d2b4:	cbz	x2, 40d2f4 <nftw@plt+0xa774>
  40d2b8:	ldr	w3, [x2, #4]
  40d2bc:	add	x2, x2, #0x8
  40d2c0:	mov	w0, w1
  40d2c4:	add	x1, x2, w3, uxtw #3
  40d2c8:	cmp	x2, x1
  40d2cc:	b.eq	40d2f0 <nftw@plt+0xa770>  // b.none
  40d2d0:	ldr	w3, [x2]
  40d2d4:	cmp	w3, w0
  40d2d8:	b.gt	40d2e4 <nftw@plt+0xa764>
  40d2dc:	ldr	w3, [x2, #4]
  40d2e0:	add	w0, w0, w3
  40d2e4:	add	x2, x2, #0x8
  40d2e8:	cmp	x2, x1
  40d2ec:	b.ne	40d2d0 <nftw@plt+0xa750>  // b.any
  40d2f0:	ret
  40d2f4:	mov	w0, w1
  40d2f8:	ret
  40d2fc:	nop
  40d300:	stp	x29, x30, [sp, #-96]!
  40d304:	cmp	w4, #0x1
  40d308:	mov	x29, sp
  40d30c:	stp	x19, x20, [sp, #16]
  40d310:	mov	w20, w1
  40d314:	stp	x21, x22, [sp, #32]
  40d318:	mov	w22, w4
  40d31c:	mov	x21, x0
  40d320:	stp	x23, x24, [sp, #48]
  40d324:	stp	x25, x26, [sp, #64]
  40d328:	mov	x26, x3
  40d32c:	b.le	40d340 <nftw@plt+0xa7c0>
  40d330:	add	x0, x3, w4, sxtw
  40d334:	ldurb	w0, [x0, #-1]
  40d338:	cmp	w0, #0xa
  40d33c:	b.eq	40d5d4 <nftw@plt+0xaa54>  // b.none
  40d340:	ldr	x5, [x21, #24]
  40d344:	cbz	x5, 40d3a8 <nftw@plt+0xa828>
  40d348:	ldr	w1, [x5, #4]
  40d34c:	add	x5, x5, #0x8
  40d350:	mov	x0, x5
  40d354:	add	x1, x5, w1, uxtw #3
  40d358:	cmp	x1, x0
  40d35c:	b.eq	40d380 <nftw@plt+0xa800>  // b.none
  40d360:	ldr	w3, [x0]
  40d364:	cmp	w3, w20
  40d368:	b.gt	40d374 <nftw@plt+0xa7f4>
  40d36c:	ldr	w3, [x0, #4]
  40d370:	add	w20, w20, w3
  40d374:	add	x0, x0, #0x8
  40d378:	cmp	x1, x0
  40d37c:	b.ne	40d360 <nftw@plt+0xa7e0>  // b.any
  40d380:	cmp	x0, x5
  40d384:	b.eq	40d3a8 <nftw@plt+0xa828>  // b.none
  40d388:	ldr	w1, [x5]
  40d38c:	cmp	w1, w2
  40d390:	b.gt	40d39c <nftw@plt+0xa81c>
  40d394:	ldr	w1, [x5, #4]
  40d398:	add	w2, w2, w1
  40d39c:	add	x5, x5, #0x8
  40d3a0:	cmp	x0, x5
  40d3a4:	b.ne	40d388 <nftw@plt+0xa808>  // b.any
  40d3a8:	sub	w23, w2, #0x1
  40d3ac:	subs	w24, w20, #0x1
  40d3b0:	b.mi	40d738 <nftw@plt+0xabb8>  // b.first
  40d3b4:	tbnz	w23, #31, 40d704 <nftw@plt+0xab84>
  40d3b8:	cmp	w20, w2
  40d3bc:	b.gt	40d4c8 <nftw@plt+0xa948>
  40d3c0:	cmp	w24, w23
  40d3c4:	ldr	w1, [x21, #16]
  40d3c8:	csel	w3, w24, w23, ge  // ge = tcont
  40d3cc:	mov	w0, #0x0                   	// #0
  40d3d0:	cmp	w1, w3
  40d3d4:	b.ge	40d3f0 <nftw@plt+0xa870>  // b.tcont
  40d3d8:	ldp	x19, x20, [sp, #16]
  40d3dc:	ldp	x21, x22, [sp, #32]
  40d3e0:	ldp	x23, x24, [sp, #48]
  40d3e4:	ldp	x25, x26, [sp, #64]
  40d3e8:	ldp	x29, x30, [sp], #96
  40d3ec:	ret
  40d3f0:	ldr	w0, [x21, #20]
  40d3f4:	sub	w19, w2, w20
  40d3f8:	add	w25, w1, w22
  40d3fc:	str	x27, [sp, #80]
  40d400:	sub	w25, w25, w19
  40d404:	cmp	w25, w0
  40d408:	b.ge	40d4e4 <nftw@plt+0xa964>  // b.tcont
  40d40c:	ldr	x0, [x21, #8]
  40d410:	sxtw	x2, w1
  40d414:	sxtw	x23, w23
  40d418:	add	x1, x0, x23
  40d41c:	add	x3, x0, x2
  40d420:	cmp	x1, x3
  40d424:	b.hi	40d720 <nftw@plt+0xaba0>  // b.pmore
  40d428:	sxtw	x24, w24
  40d42c:	sxtw	x27, w22
  40d430:	add	x3, x24, x27
  40d434:	sub	x2, x2, x23
  40d438:	add	x0, x0, x3
  40d43c:	bl	4024a0 <memmove@plt>
  40d440:	ldr	x0, [x21, #8]
  40d444:	mov	x2, x27
  40d448:	mov	x1, x26
  40d44c:	add	x0, x0, x24
  40d450:	bl	402490 <memcpy@plt>
  40d454:	ldr	w0, [x21, #20]
  40d458:	str	w25, [x21, #16]
  40d45c:	cmp	w25, w0
  40d460:	b.ge	40d754 <nftw@plt+0xabd4>  // b.tcont
  40d464:	ldr	x0, [x21, #8]
  40d468:	sub	w19, w22, w19
  40d46c:	strb	wzr, [x0, w25, sxtw]
  40d470:	ldr	x22, [x21, #24]
  40d474:	cbz	x22, 40d4f8 <nftw@plt+0xa978>
  40d478:	ldp	w0, w23, [x22]
  40d47c:	add	w24, w23, #0x1
  40d480:	ubfx	x0, x0, #0, #31
  40d484:	mov	w1, w24
  40d488:	cmp	w0, w23
  40d48c:	b.eq	40d520 <nftw@plt+0xa9a0>  // b.none
  40d490:	ubfiz	x23, x23, #3, #32
  40d494:	mov	w0, #0x1                   	// #1
  40d498:	add	x23, x23, #0x8
  40d49c:	ldr	x27, [sp, #80]
  40d4a0:	str	w1, [x22, #4]
  40d4a4:	add	x1, x22, x23
  40d4a8:	str	w20, [x22, x23]
  40d4ac:	ldp	x21, x22, [sp, #32]
  40d4b0:	str	w19, [x1, #4]
  40d4b4:	ldp	x19, x20, [sp, #16]
  40d4b8:	ldp	x23, x24, [sp, #48]
  40d4bc:	ldp	x25, x26, [sp, #64]
  40d4c0:	ldp	x29, x30, [sp], #96
  40d4c4:	ret
  40d4c8:	mov	w0, #0x0                   	// #0
  40d4cc:	ldp	x19, x20, [sp, #16]
  40d4d0:	ldp	x21, x22, [sp, #32]
  40d4d4:	ldp	x23, x24, [sp, #48]
  40d4d8:	ldp	x25, x26, [sp, #64]
  40d4dc:	ldp	x29, x30, [sp], #96
  40d4e0:	ret
  40d4e4:	mov	w1, w25
  40d4e8:	mov	x0, x21
  40d4ec:	bl	40d000 <nftw@plt+0xa480>
  40d4f0:	ldr	w1, [x21, #16]
  40d4f4:	b	40d40c <nftw@plt+0xa88c>
  40d4f8:	mov	x1, #0x28                  	// #40
  40d4fc:	mov	x0, #0x0                   	// #0
  40d500:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40d504:	mov	x22, x0
  40d508:	str	x22, [x21, #24]
  40d50c:	mov	x0, #0x4                   	// #4
  40d510:	mov	w23, #0x0                   	// #0
  40d514:	add	w1, w23, #0x1
  40d518:	str	x0, [x22]
  40d51c:	b	40d490 <nftw@plt+0xa910>
  40d520:	ldrsb	w0, [x22, #3]
  40d524:	tbnz	w0, #31, 40d568 <nftw@plt+0xa9e8>
  40d528:	mov	w0, w23
  40d52c:	bl	411bd8 <nftw@plt+0xf058>
  40d530:	mov	w2, w0
  40d534:	and	w24, w0, #0x7fffffff
  40d538:	ldr	x0, [x21, #24]
  40d53c:	ubfiz	x1, x2, #3, #32
  40d540:	add	x1, x1, #0x8
  40d544:	mov	w23, #0x0                   	// #0
  40d548:	cbz	x0, 40d550 <nftw@plt+0xa9d0>
  40d54c:	ldr	w23, [x0, #4]
  40d550:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40d554:	str	x0, [x21, #24]
  40d558:	mov	x22, x0
  40d55c:	add	w1, w23, #0x1
  40d560:	stp	w24, w23, [x0]
  40d564:	b	40d490 <nftw@plt+0xa910>
  40d568:	cmp	w24, #0x4
  40d56c:	mov	w0, #0x4                   	// #4
  40d570:	csel	w1, w24, w0, cs  // cs = hs, nlast
  40d574:	str	xzr, [x21, #24]
  40d578:	add	x1, x1, #0x1
  40d57c:	csel	w25, w24, w0, cs  // cs = hs, nlast
  40d580:	mov	x0, #0x0                   	// #0
  40d584:	and	x25, x25, #0x7fffffff
  40d588:	lsl	x1, x1, #3
  40d58c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40d590:	str	x0, [x21, #24]
  40d594:	str	x25, [x0]
  40d598:	cbz	w23, 40d5c4 <nftw@plt+0xaa44>
  40d59c:	sub	w3, w23, #0x1
  40d5a0:	mov	x1, #0x8                   	// #8
  40d5a4:	add	x3, x3, #0x2
  40d5a8:	lsl	x3, x3, #3
  40d5ac:	nop
  40d5b0:	ldr	x2, [x22, x1]
  40d5b4:	str	x2, [x0, x1]
  40d5b8:	add	x1, x1, #0x8
  40d5bc:	cmp	x3, x1
  40d5c0:	b.ne	40d5b0 <nftw@plt+0xaa30>  // b.any
  40d5c4:	mov	w1, w24
  40d5c8:	mov	x22, x0
  40d5cc:	str	w23, [x0, #4]
  40d5d0:	b	40d490 <nftw@plt+0xa910>
  40d5d4:	sub	w22, w4, #0x1
  40d5d8:	mov	x0, #0x10                  	// #16
  40d5dc:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40d5e0:	mov	x23, x0
  40d5e4:	sxtw	x1, w22
  40d5e8:	mov	x0, x26
  40d5ec:	bl	449d48 <_obstack_memory_used@@Base+0x2e8>
  40d5f0:	ldr	x20, [x21, #32]
  40d5f4:	str	x0, [x23]
  40d5f8:	str	w22, [x23, #8]
  40d5fc:	cbz	x20, 40d62c <nftw@plt+0xaaac>
  40d600:	ldp	w0, w19, [x20]
  40d604:	add	w22, w19, #0x1
  40d608:	ubfx	x0, x0, #0, #31
  40d60c:	mov	w1, w22
  40d610:	cmp	w0, w19
  40d614:	b.eq	40d654 <nftw@plt+0xaad4>  // b.none
  40d618:	add	x19, x20, w19, uxtw #3
  40d61c:	str	w1, [x20, #4]
  40d620:	mov	w0, #0x1                   	// #1
  40d624:	str	x23, [x19, #8]
  40d628:	b	40d3d8 <nftw@plt+0xa858>
  40d62c:	mov	x1, #0x28                  	// #40
  40d630:	mov	x0, #0x0                   	// #0
  40d634:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40d638:	mov	x20, x0
  40d63c:	str	x20, [x21, #32]
  40d640:	mov	x0, #0x4                   	// #4
  40d644:	mov	w19, #0x0                   	// #0
  40d648:	add	w1, w19, #0x1
  40d64c:	str	x0, [x20]
  40d650:	b	40d618 <nftw@plt+0xaa98>
  40d654:	ldrsb	w0, [x20, #3]
  40d658:	tbnz	w0, #31, 40d69c <nftw@plt+0xab1c>
  40d65c:	mov	w0, w19
  40d660:	bl	411bd8 <nftw@plt+0xf058>
  40d664:	mov	w2, w0
  40d668:	and	w22, w0, #0x7fffffff
  40d66c:	ldr	x0, [x21, #32]
  40d670:	ubfiz	x1, x2, #3, #32
  40d674:	add	x1, x1, #0x8
  40d678:	mov	w19, #0x0                   	// #0
  40d67c:	cbz	x0, 40d684 <nftw@plt+0xab04>
  40d680:	ldr	w19, [x0, #4]
  40d684:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40d688:	str	x0, [x21, #32]
  40d68c:	mov	x20, x0
  40d690:	add	w1, w19, #0x1
  40d694:	stp	w22, w19, [x0]
  40d698:	b	40d618 <nftw@plt+0xaa98>
  40d69c:	cmp	w22, #0x4
  40d6a0:	mov	w0, #0x4                   	// #4
  40d6a4:	csel	w1, w22, w0, cs  // cs = hs, nlast
  40d6a8:	str	xzr, [x21, #32]
  40d6ac:	add	x1, x1, #0x1
  40d6b0:	csel	w24, w22, w0, cs  // cs = hs, nlast
  40d6b4:	mov	x0, #0x0                   	// #0
  40d6b8:	and	x24, x24, #0x7fffffff
  40d6bc:	lsl	x1, x1, #3
  40d6c0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  40d6c4:	str	x0, [x21, #32]
  40d6c8:	str	x24, [x0]
  40d6cc:	cbz	w19, 40d6f4 <nftw@plt+0xab74>
  40d6d0:	sub	w3, w19, #0x1
  40d6d4:	mov	x1, #0x8                   	// #8
  40d6d8:	add	x3, x3, #0x2
  40d6dc:	lsl	x3, x3, #3
  40d6e0:	ldr	x2, [x20, x1]
  40d6e4:	str	x2, [x0, x1]
  40d6e8:	add	x1, x1, #0x8
  40d6ec:	cmp	x1, x3
  40d6f0:	b.ne	40d6e0 <nftw@plt+0xab60>  // b.any
  40d6f4:	mov	w1, w22
  40d6f8:	mov	x20, x0
  40d6fc:	str	w19, [x0, #4]
  40d700:	b	40d618 <nftw@plt+0xaa98>
  40d704:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d708:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d70c:	add	x2, x2, #0x470
  40d710:	add	x0, x0, #0x440
  40d714:	mov	w1, #0x2fb                 	// #763
  40d718:	str	x27, [sp, #80]
  40d71c:	bl	402bf0 <nftw@plt+0x70>
  40d720:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d724:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d728:	add	x2, x2, #0x470
  40d72c:	add	x0, x0, #0x440
  40d730:	mov	w1, #0x30b                 	// #779
  40d734:	bl	402bf0 <nftw@plt+0x70>
  40d738:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d73c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d740:	add	x2, x2, #0x470
  40d744:	add	x0, x0, #0x440
  40d748:	mov	w1, #0x2fa                 	// #762
  40d74c:	str	x27, [sp, #80]
  40d750:	bl	402bf0 <nftw@plt+0x70>
  40d754:	bl	402c3c <nftw@plt+0xbc>
  40d758:	ldr	x0, [x0, #32]
  40d75c:	cbz	x0, 40d76c <nftw@plt+0xabec>
  40d760:	ldr	w0, [x0, #4]
  40d764:	add	w0, w0, #0x1
  40d768:	ret
  40d76c:	mov	w0, #0x1                   	// #1
  40d770:	ret
  40d774:	nop
  40d778:	stp	x29, x30, [sp, #-48]!
  40d77c:	mov	x29, sp
  40d780:	ldr	x2, [x0, #32]
  40d784:	stp	x19, x20, [sp, #16]
  40d788:	mov	x20, x0
  40d78c:	mov	x19, x1
  40d790:	cbz	x2, 40d7d4 <nftw@plt+0xac54>
  40d794:	str	x21, [sp, #32]
  40d798:	mov	w21, #0x0                   	// #0
  40d79c:	ldr	w1, [x2, #4]
  40d7a0:	add	x3, x2, w21, uxtw #3
  40d7a4:	mov	x0, x19
  40d7a8:	cmp	w1, w21
  40d7ac:	b.ls	40d7d0 <nftw@plt+0xac50>  // b.plast
  40d7b0:	ldr	x1, [x3, #8]
  40d7b4:	add	w21, w21, #0x1
  40d7b8:	ldr	x1, [x1]
  40d7bc:	bl	40f9a8 <nftw@plt+0xce28>
  40d7c0:	mov	x0, x19
  40d7c4:	bl	40f388 <nftw@plt+0xc808>
  40d7c8:	ldr	x2, [x20, #32]
  40d7cc:	cbnz	x2, 40d79c <nftw@plt+0xac1c>
  40d7d0:	ldr	x21, [sp, #32]
  40d7d4:	mov	x0, x19
  40d7d8:	ldr	x1, [x20, #8]
  40d7dc:	ldp	x19, x20, [sp, #16]
  40d7e0:	ldp	x29, x30, [sp], #48
  40d7e4:	b	40f9a8 <nftw@plt+0xce28>
  40d7e8:	stp	x29, x30, [sp, #-48]!
  40d7ec:	mov	x29, sp
  40d7f0:	ldr	x2, [x0, #32]
  40d7f4:	stp	x19, x20, [sp, #16]
  40d7f8:	mov	x19, x0
  40d7fc:	mov	x20, x1
  40d800:	cbz	x2, 40d844 <nftw@plt+0xacc4>
  40d804:	str	x21, [sp, #32]
  40d808:	mov	w21, #0x0                   	// #0
  40d80c:	add	x3, x2, w21, uxtw #3
  40d810:	ldr	w2, [x2, #4]
  40d814:	mov	x0, x20
  40d818:	mov	w1, #0x2b                  	// #43
  40d81c:	cmp	w2, w21
  40d820:	b.ls	40d840 <nftw@plt+0xacc0>  // b.plast
  40d824:	ldr	x3, [x3, #8]
  40d828:	add	w21, w21, #0x1
  40d82c:	ldr	x2, [x3]
  40d830:	ldr	w3, [x3, #8]
  40d834:	bl	40cf98 <nftw@plt+0xa418>
  40d838:	ldr	x2, [x19, #32]
  40d83c:	cbnz	x2, 40d80c <nftw@plt+0xac8c>
  40d840:	ldr	x21, [sp, #32]
  40d844:	ldr	x0, [x19, #24]
  40d848:	ldr	w3, [x19, #16]
  40d84c:	ldr	x2, [x19, #8]
  40d850:	cbz	x0, 40d85c <nftw@plt+0xacdc>
  40d854:	ldr	w0, [x0, #4]
  40d858:	cbnz	w0, 40d870 <nftw@plt+0xacf0>
  40d85c:	mov	x0, x20
  40d860:	mov	w1, #0x20                  	// #32
  40d864:	ldp	x19, x20, [sp, #16]
  40d868:	ldp	x29, x30, [sp], #48
  40d86c:	b	40cf98 <nftw@plt+0xa418>
  40d870:	mov	x0, x20
  40d874:	mov	w1, #0x2b                  	// #43
  40d878:	ldp	x19, x20, [sp, #16]
  40d87c:	ldp	x29, x30, [sp], #48
  40d880:	b	40cf98 <nftw@plt+0xa418>
  40d884:	nop
  40d888:	ldr	w2, [x0, #20]
  40d88c:	cmp	w2, w1
  40d890:	b.le	40d898 <nftw@plt+0xad18>
  40d894:	ret
  40d898:	b	40d000 <nftw@plt+0xa480>
  40d89c:	nop
  40d8a0:	ldp	w1, w2, [x0, #16]
  40d8a4:	cmp	w1, w2
  40d8a8:	b.ge	40d8b8 <nftw@plt+0xad38>  // b.tcont
  40d8ac:	ldr	x0, [x0, #8]
  40d8b0:	strb	wzr, [x0, w1, sxtw]
  40d8b4:	ret
  40d8b8:	stp	x29, x30, [sp, #-16]!
  40d8bc:	mov	x29, sp
  40d8c0:	bl	402c3c <nftw@plt+0xbc>
  40d8c4:	nop
  40d8c8:	cbz	x0, 40d8fc <nftw@plt+0xad7c>
  40d8cc:	stp	x29, x30, [sp, #-32]!
  40d8d0:	mov	x29, sp
  40d8d4:	str	x19, [sp, #16]
  40d8d8:	mov	x19, x0
  40d8dc:	add	x0, x0, #0x8
  40d8e0:	ldr	x1, [x19, #8]
  40d8e4:	bl	40e760 <nftw@plt+0xbbe0>
  40d8e8:	mov	x0, x19
  40d8ec:	mov	x1, #0x30                  	// #48
  40d8f0:	ldr	x19, [sp, #16]
  40d8f4:	ldp	x29, x30, [sp], #32
  40d8f8:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  40d8fc:	ret
  40d900:	stp	x29, x30, [sp, #-48]!
  40d904:	mov	x29, sp
  40d908:	stp	x19, x20, [sp, #16]
  40d90c:	str	x21, [sp, #32]
  40d910:	cbz	x1, 40d974 <nftw@plt+0xadf4>
  40d914:	mov	x19, x0
  40d918:	add	x21, x0, #0x8
  40d91c:	mov	x0, x21
  40d920:	mov	x20, x1
  40d924:	bl	40e870 <nftw@plt+0xbcf0>
  40d928:	ldr	x0, [x19, #8]
  40d92c:	cbz	x0, 40d960 <nftw@plt+0xade0>
  40d930:	ldr	x0, [x0]
  40d934:	mov	x1, x20
  40d938:	ldr	x2, [x21, #8]
  40d93c:	blr	x2
  40d940:	cbnz	w0, 40d960 <nftw@plt+0xade0>
  40d944:	ldr	x0, [x19, #8]
  40d948:	cbz	x0, 40d960 <nftw@plt+0xade0>
  40d94c:	ldr	x0, [x0, #8]
  40d950:	ldp	x19, x20, [sp, #16]
  40d954:	ldr	x21, [sp, #32]
  40d958:	ldp	x29, x30, [sp], #48
  40d95c:	ret
  40d960:	mov	x0, #0x0                   	// #0
  40d964:	ldp	x19, x20, [sp, #16]
  40d968:	ldr	x21, [sp, #32]
  40d96c:	ldp	x29, x30, [sp], #48
  40d970:	ret
  40d974:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d978:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40d97c:	add	x2, x2, #0x480
  40d980:	add	x0, x0, #0x440
  40d984:	mov	w1, #0x140                 	// #320
  40d988:	bl	402bf0 <nftw@plt+0x70>
  40d98c:	nop
  40d990:	stp	x29, x30, [sp, #-48]!
  40d994:	mov	x29, sp
  40d998:	stp	x19, x20, [sp, #16]
  40d99c:	stp	x21, x22, [sp, #32]
  40d9a0:	cbz	x1, 40dadc <nftw@plt+0xaf5c>
  40d9a4:	mov	x21, x0
  40d9a8:	mov	x20, x1
  40d9ac:	bl	40d900 <nftw@plt+0xad80>
  40d9b0:	mov	x19, x0
  40d9b4:	cbz	x0, 40d9cc <nftw@plt+0xae4c>
  40d9b8:	mov	x0, x19
  40d9bc:	ldp	x19, x20, [sp, #16]
  40d9c0:	ldp	x21, x22, [sp, #32]
  40d9c4:	ldp	x29, x30, [sp], #48
  40d9c8:	ret
  40d9cc:	mov	x0, #0x30                  	// #48
  40d9d0:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40d9d4:	mov	x2, x0
  40d9d8:	mov	x19, x0
  40d9dc:	adrp	x4, 40c000 <nftw@plt+0x9480>
  40d9e0:	adrp	x3, 40d000 <nftw@plt+0xa480>
  40d9e4:	add	x4, x4, #0xf90
  40d9e8:	add	x3, x3, #0x280
  40d9ec:	str	x20, [x2], #8
  40d9f0:	mov	w5, #0xffffffff            	// #-1
  40d9f4:	str	xzr, [x19, #8]
  40d9f8:	add	x22, x21, #0x8
  40d9fc:	stp	x4, xzr, [x2, #8]
  40da00:	mov	x0, x22
  40da04:	mov	x1, x20
  40da08:	str	x3, [x2, #24]
  40da0c:	str	w5, [x19, #40]
  40da10:	bl	40e870 <nftw@plt+0xbcf0>
  40da14:	ldr	x0, [x21, #8]
  40da18:	cbz	x0, 40daa8 <nftw@plt+0xaf28>
  40da1c:	ldr	x0, [x0]
  40da20:	mov	x1, x20
  40da24:	ldr	x2, [x22, #8]
  40da28:	blr	x2
  40da2c:	mov	w22, w0
  40da30:	ldr	x1, [x21, #8]
  40da34:	cmp	x1, #0x0
  40da38:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40da3c:	b.eq	40da7c <nftw@plt+0xaefc>  // b.none
  40da40:	mov	x0, #0x28                  	// #40
  40da44:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40da48:	ldr	x1, [x21, #8]
  40da4c:	stp	x20, x19, [x0]
  40da50:	cbz	x1, 40dabc <nftw@plt+0xaf3c>
  40da54:	tbnz	w22, #31, 40dac8 <nftw@plt+0xaf48>
  40da58:	ldr	x2, [x1, #16]
  40da5c:	stp	x2, x1, [x0, #16]
  40da60:	str	xzr, [x1, #16]
  40da64:	str	x0, [x21, #8]
  40da68:	mov	x0, x19
  40da6c:	ldp	x19, x20, [sp, #16]
  40da70:	ldp	x21, x22, [sp, #32]
  40da74:	ldp	x29, x30, [sp], #48
  40da78:	ret
  40da7c:	ldr	x2, [x21, #32]
  40da80:	cbz	x2, 40da90 <nftw@plt+0xaf10>
  40da84:	ldr	x0, [x1, #8]
  40da88:	blr	x2
  40da8c:	ldr	x1, [x21, #8]
  40da90:	str	x19, [x1, #8]
  40da94:	mov	x0, x19
  40da98:	ldp	x19, x20, [sp, #16]
  40da9c:	ldp	x21, x22, [sp, #32]
  40daa0:	ldp	x29, x30, [sp], #48
  40daa4:	ret
  40daa8:	mov	x0, #0x28                  	// #40
  40daac:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40dab0:	ldr	x1, [x21, #8]
  40dab4:	stp	x20, x19, [x0]
  40dab8:	cbnz	x1, 40da58 <nftw@plt+0xaed8>
  40dabc:	str	x0, [x21, #8]
  40dac0:	stp	xzr, xzr, [x0, #16]
  40dac4:	b	40da68 <nftw@plt+0xaee8>
  40dac8:	ldr	x2, [x1, #24]
  40dacc:	stp	x1, x2, [x0, #16]
  40dad0:	str	xzr, [x1, #24]
  40dad4:	str	x0, [x21, #8]
  40dad8:	b	40da68 <nftw@plt+0xaee8>
  40dadc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dae0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dae4:	add	x2, x2, #0x490
  40dae8:	add	x0, x0, #0x440
  40daec:	mov	w1, #0x149                 	// #329
  40daf0:	bl	402bf0 <nftw@plt+0x70>
  40daf4:	nop
  40daf8:	stp	x29, x30, [sp, #-16]!
  40dafc:	add	x0, x0, #0x8
  40db00:	mov	x29, sp
  40db04:	bl	40ebb8 <nftw@plt+0xc038>
  40db08:	cbz	x0, 40db10 <nftw@plt+0xaf90>
  40db0c:	ldr	x0, [x0, #8]
  40db10:	ldp	x29, x30, [sp], #16
  40db14:	ret
  40db18:	stp	x29, x30, [sp, #-32]!
  40db1c:	add	x0, x0, #0x8
  40db20:	mov	x29, sp
  40db24:	str	x19, [sp, #16]
  40db28:	mov	w19, w2
  40db2c:	bl	40ebb8 <nftw@plt+0xc038>
  40db30:	cbz	x0, 40db88 <nftw@plt+0xb008>
  40db34:	ldr	x0, [x0, #8]
  40db38:	cbz	x0, 40db88 <nftw@plt+0xb008>
  40db3c:	ldr	x1, [x0, #24]
  40db40:	cbz	x1, 40db88 <nftw@plt+0xb008>
  40db44:	ldr	w2, [x1, #4]
  40db48:	add	x1, x1, #0x8
  40db4c:	mov	w0, w19
  40db50:	add	x2, x1, w2, uxtw #3
  40db54:	cmp	x1, x2
  40db58:	b.eq	40db7c <nftw@plt+0xaffc>  // b.none
  40db5c:	ldr	w3, [x1]
  40db60:	cmp	w3, w0
  40db64:	b.gt	40db70 <nftw@plt+0xaff0>
  40db68:	ldr	w3, [x1, #4]
  40db6c:	add	w0, w0, w3
  40db70:	add	x1, x1, #0x8
  40db74:	cmp	x1, x2
  40db78:	b.ne	40db5c <nftw@plt+0xafdc>  // b.any
  40db7c:	ldr	x19, [sp, #16]
  40db80:	ldp	x29, x30, [sp], #32
  40db84:	ret
  40db88:	mov	w0, w19
  40db8c:	ldr	x19, [sp, #16]
  40db90:	ldp	x29, x30, [sp], #32
  40db94:	ret
  40db98:	stp	x29, x30, [sp, #-32]!
  40db9c:	mov	x29, sp
  40dba0:	stp	x19, x20, [sp, #16]
  40dba4:	mov	w20, w2
  40dba8:	mov	w19, w3
  40dbac:	bl	40d900 <nftw@plt+0xad80>
  40dbb0:	cbz	x0, 40dbc8 <nftw@plt+0xb048>
  40dbb4:	mov	w2, w19
  40dbb8:	mov	w1, w20
  40dbbc:	ldp	x19, x20, [sp, #16]
  40dbc0:	ldp	x29, x30, [sp], #32
  40dbc4:	b	40db18 <nftw@plt+0xaf98>
  40dbc8:	mov	w0, w19
  40dbcc:	ldp	x19, x20, [sp, #16]
  40dbd0:	ldp	x29, x30, [sp], #32
  40dbd4:	ret
  40dbd8:	stp	x29, x30, [sp, #-112]!
  40dbdc:	mov	x29, sp
  40dbe0:	stp	x23, x24, [sp, #48]
  40dbe4:	mov	x23, x1
  40dbe8:	add	x1, sp, #0x6f
  40dbec:	str	x27, [sp, #80]
  40dbf0:	mov	x27, x0
  40dbf4:	bl	40d098 <nftw@plt+0xa518>
  40dbf8:	cmp	w0, #0x0
  40dbfc:	b.le	40dc78 <nftw@plt+0xb0f8>
  40dc00:	mov	x24, #0x80000000            	// #2147483648
  40dc04:	stp	x19, x20, [sp, #16]
  40dc08:	stp	x21, x22, [sp, #32]
  40dc0c:	mov	w21, #0x1                   	// #1
  40dc10:	stp	x25, x26, [sp, #64]
  40dc14:	add	x26, x27, #0x8
  40dc18:	mov	w25, w0
  40dc1c:	b	40dc2c <nftw@plt+0xb0ac>
  40dc20:	add	w21, w21, #0x1
  40dc24:	cmp	w25, w21
  40dc28:	b.lt	40dc6c <nftw@plt+0xb0ec>  // b.tstop
  40dc2c:	mov	w1, w21
  40dc30:	mov	x0, x26
  40dc34:	bl	40ebb8 <nftw@plt+0xc038>
  40dc38:	cbz	x0, 40dc90 <nftw@plt+0xb110>
  40dc3c:	ldr	x0, [x0, #8]
  40dc40:	cbz	x0, 40dc90 <nftw@plt+0xb110>
  40dc44:	mov	x1, x23
  40dc48:	bl	40d778 <nftw@plt+0xabf8>
  40dc4c:	cmp	w25, w21
  40dc50:	b.le	40dc20 <nftw@plt+0xb0a0>
  40dc54:	mov	x0, x23
  40dc58:	add	w21, w21, #0x1
  40dc5c:	mov	w1, #0xa                   	// #10
  40dc60:	bl	40f3e8 <nftw@plt+0xc868>
  40dc64:	cmp	w25, w21
  40dc68:	b.ge	40dc2c <nftw@plt+0xb0ac>  // b.tcont
  40dc6c:	ldp	x19, x20, [sp, #16]
  40dc70:	ldp	x21, x22, [sp, #32]
  40dc74:	ldp	x25, x26, [sp, #64]
  40dc78:	ldrb	w0, [sp, #111]
  40dc7c:	cbz	w0, 40dd1c <nftw@plt+0xb19c>
  40dc80:	ldp	x23, x24, [sp, #48]
  40dc84:	ldr	x27, [sp, #80]
  40dc88:	ldp	x29, x30, [sp], #112
  40dc8c:	ret
  40dc90:	ldr	x0, [x27]
  40dc94:	mov	w1, w21
  40dc98:	bl	4143a8 <nftw@plt+0x11828>
  40dc9c:	mov	x22, x0
  40dca0:	mov	x20, x1
  40dca4:	cbz	x0, 40dcfc <nftw@plt+0xb17c>
  40dca8:	mov	x19, #0x0                   	// #0
  40dcac:	mov	w2, #0x0                   	// #0
  40dcb0:	cbnz	x1, 40dcdc <nftw@plt+0xb15c>
  40dcb4:	b	40dc4c <nftw@plt+0xb0cc>
  40dcb8:	ldrb	w1, [x22, w2, sxtw]
  40dcbc:	add	x19, x19, #0x1
  40dcc0:	mov	x0, x23
  40dcc4:	bl	40f3e8 <nftw@plt+0xc868>
  40dcc8:	cmp	x20, x19
  40dccc:	b.eq	40dc4c <nftw@plt+0xb0cc>  // b.none
  40dcd0:	cmp	x19, x24
  40dcd4:	mov	w2, w19
  40dcd8:	b.eq	40dd3c <nftw@plt+0xb1bc>  // b.none
  40dcdc:	cmp	x20, w2, sxtw
  40dce0:	b.hi	40dcb8 <nftw@plt+0xb138>  // b.pmore
  40dce4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dce8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dcec:	add	x2, x2, #0x4a8
  40dcf0:	add	x0, x0, #0x400
  40dcf4:	mov	w1, #0x3e                  	// #62
  40dcf8:	bl	402bf0 <nftw@plt+0x70>
  40dcfc:	mov	w0, #0x0                   	// #0
  40dd00:	ldp	x19, x20, [sp, #16]
  40dd04:	ldp	x21, x22, [sp, #32]
  40dd08:	ldp	x23, x24, [sp, #48]
  40dd0c:	ldp	x25, x26, [sp, #64]
  40dd10:	ldr	x27, [sp, #80]
  40dd14:	ldp	x29, x30, [sp], #112
  40dd18:	ret
  40dd1c:	mov	x0, x23
  40dd20:	mov	w1, #0xa                   	// #10
  40dd24:	bl	40f3e8 <nftw@plt+0xc868>
  40dd28:	mov	w0, #0x1                   	// #1
  40dd2c:	ldp	x23, x24, [sp, #48]
  40dd30:	ldr	x27, [sp, #80]
  40dd34:	ldp	x29, x30, [sp], #112
  40dd38:	ret
  40dd3c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dd40:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dd44:	add	x2, x2, #0x4a8
  40dd48:	add	x0, x0, #0x400
  40dd4c:	mov	w1, #0x3d                  	// #61
  40dd50:	bl	402bf0 <nftw@plt+0x70>
  40dd54:	nop
  40dd58:	stp	x29, x30, [sp, #-64]!
  40dd5c:	mov	x29, sp
  40dd60:	stp	x23, x24, [sp, #48]
  40dd64:	mov	x24, x0
  40dd68:	ldrb	w0, [x1, #67]
  40dd6c:	stp	x19, x20, [sp, #16]
  40dd70:	mov	w19, w2
  40dd74:	mov	x2, #0xb                   	// #11
  40dd78:	stp	x21, x22, [sp, #32]
  40dd7c:	mov	w22, w3
  40dd80:	mov	x21, x1
  40dd84:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dd88:	add	x1, x1, #0x240
  40dd8c:	bl	40a030 <nftw@plt+0x74b0>
  40dd90:	mov	x1, x0
  40dd94:	mov	x0, x21
  40dd98:	bl	40f9a8 <nftw@plt+0xce28>
  40dd9c:	cmp	w19, w22
  40dda0:	b.gt	40de98 <nftw@plt+0xb318>
  40dda4:	add	x23, x24, #0x8
  40dda8:	mov	w20, w19
  40ddac:	b	40ddbc <nftw@plt+0xb23c>
  40ddb0:	add	w20, w20, #0x1
  40ddb4:	cmp	w22, w20
  40ddb8:	b.lt	40de10 <nftw@plt+0xb290>  // b.tstop
  40ddbc:	mov	w1, w20
  40ddc0:	mov	x0, x23
  40ddc4:	bl	40ebb8 <nftw@plt+0xc038>
  40ddc8:	cbz	x0, 40ded0 <nftw@plt+0xb350>
  40ddcc:	ldr	x1, [x0, #8]
  40ddd0:	cbz	x1, 40ded0 <nftw@plt+0xb350>
  40ddd4:	ldr	x1, [x1, #24]
  40ddd8:	cbz	x1, 40ddb0 <nftw@plt+0xb230>
  40dddc:	ldr	w0, [x1, #4]
  40dde0:	cbz	w0, 40ddb0 <nftw@plt+0xb230>
  40dde4:	ldr	x0, [x24]
  40dde8:	mov	w1, w20
  40ddec:	add	w20, w20, #0x1
  40ddf0:	bl	4143a8 <nftw@plt+0x11828>
  40ddf4:	mov	w3, w1
  40ddf8:	mov	x2, x0
  40ddfc:	mov	w1, #0x2d                  	// #45
  40de00:	mov	x0, x21
  40de04:	bl	40cf98 <nftw@plt+0xa418>
  40de08:	cmp	w22, w20
  40de0c:	b.ge	40ddbc <nftw@plt+0xb23c>  // b.tcont
  40de10:	ldrb	w0, [x21, #67]
  40de14:	bl	40a0c0 <nftw@plt+0x7540>
  40de18:	mov	x1, x0
  40de1c:	mov	x0, x21
  40de20:	bl	40f9a8 <nftw@plt+0xce28>
  40de24:	ldrb	w0, [x21, #67]
  40de28:	mov	x2, #0xb                   	// #11
  40de2c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40de30:	add	x1, x1, #0x250
  40de34:	bl	40a030 <nftw@plt+0x74b0>
  40de38:	mov	x1, x0
  40de3c:	mov	x0, x21
  40de40:	bl	40f9a8 <nftw@plt+0xce28>
  40de44:	nop
  40de48:	mov	w1, w19
  40de4c:	mov	x0, x23
  40de50:	bl	40ebb8 <nftw@plt+0xc038>
  40de54:	cbz	x0, 40dee8 <nftw@plt+0xb368>
  40de58:	ldr	x0, [x0, #8]
  40de5c:	cbz	x0, 40dee8 <nftw@plt+0xb368>
  40de60:	add	w19, w19, #0x1
  40de64:	mov	x1, x21
  40de68:	bl	40d7e8 <nftw@plt+0xac68>
  40de6c:	cmp	w22, w19
  40de70:	b.ge	40de48 <nftw@plt+0xb2c8>  // b.tcont
  40de74:	ldrb	w0, [x21, #67]
  40de78:	bl	40a0c0 <nftw@plt+0x7540>
  40de7c:	mov	x1, x0
  40de80:	mov	x0, x21
  40de84:	ldp	x19, x20, [sp, #16]
  40de88:	ldp	x21, x22, [sp, #32]
  40de8c:	ldp	x23, x24, [sp, #48]
  40de90:	ldp	x29, x30, [sp], #64
  40de94:	b	40f9a8 <nftw@plt+0xce28>
  40de98:	ldrb	w0, [x21, #67]
  40de9c:	bl	40a0c0 <nftw@plt+0x7540>
  40dea0:	mov	x1, x0
  40dea4:	mov	x0, x21
  40dea8:	bl	40f9a8 <nftw@plt+0xce28>
  40deac:	ldrb	w0, [x21, #67]
  40deb0:	mov	x2, #0xb                   	// #11
  40deb4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40deb8:	add	x1, x1, #0x250
  40debc:	bl	40a030 <nftw@plt+0x74b0>
  40dec0:	mov	x1, x0
  40dec4:	mov	x0, x21
  40dec8:	bl	40f9a8 <nftw@plt+0xce28>
  40decc:	b	40de74 <nftw@plt+0xb2f4>
  40ded0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ded4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ded8:	add	x2, x2, #0x4b8
  40dedc:	add	x0, x0, #0x440
  40dee0:	mov	w1, #0x239                 	// #569
  40dee4:	bl	402bf0 <nftw@plt+0x70>
  40dee8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40deec:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40def0:	add	x2, x2, #0x4b8
  40def4:	add	x0, x0, #0x440
  40def8:	mov	w1, #0x24b                 	// #587
  40defc:	bl	402bf0 <nftw@plt+0x70>
  40df00:	stp	x29, x30, [sp, #-48]!
  40df04:	cmp	w1, w2
  40df08:	mov	x29, sp
  40df0c:	stp	x19, x20, [sp, #16]
  40df10:	b.gt	40df80 <nftw@plt+0xb400>
  40df14:	mov	w19, w1
  40df18:	stp	x21, x22, [sp, #32]
  40df1c:	add	x22, x0, #0x8
  40df20:	add	w21, w2, #0x1
  40df24:	mov	w20, #0x0                   	// #0
  40df28:	mov	w1, w19
  40df2c:	mov	x0, x22
  40df30:	bl	40ebb8 <nftw@plt+0xc038>
  40df34:	cbz	x0, 40df78 <nftw@plt+0xb3f8>
  40df38:	ldr	x0, [x0, #8]
  40df3c:	mov	w1, #0x1                   	// #1
  40df40:	cbz	x0, 40df78 <nftw@plt+0xb3f8>
  40df44:	ldr	x0, [x0, #32]
  40df48:	cbz	x0, 40df54 <nftw@plt+0xb3d4>
  40df4c:	ldr	w1, [x0, #4]
  40df50:	add	w1, w1, #0x1
  40df54:	add	w20, w20, w1
  40df58:	add	w19, w19, #0x1
  40df5c:	cmp	w19, w21
  40df60:	b.ne	40df28 <nftw@plt+0xb3a8>  // b.any
  40df64:	mov	w0, w20
  40df68:	ldp	x19, x20, [sp, #16]
  40df6c:	ldp	x21, x22, [sp, #32]
  40df70:	ldp	x29, x30, [sp], #48
  40df74:	ret
  40df78:	add	w20, w20, #0x1
  40df7c:	b	40df58 <nftw@plt+0xb3d8>
  40df80:	mov	w20, #0x0                   	// #0
  40df84:	mov	w0, w20
  40df88:	ldp	x19, x20, [sp, #16]
  40df8c:	ldp	x29, x30, [sp], #48
  40df90:	ret
  40df94:	nop
  40df98:	stp	x29, x30, [sp, #-80]!
  40df9c:	mov	x29, sp
  40dfa0:	stp	x21, x22, [sp, #32]
  40dfa4:	mov	x22, x1
  40dfa8:	stp	x19, x20, [sp, #16]
  40dfac:	mov	w20, w2
  40dfb0:	mov	w19, w4
  40dfb4:	mov	w1, w20
  40dfb8:	stp	x23, x24, [sp, #48]
  40dfbc:	mov	w23, w3
  40dfc0:	mov	x24, x0
  40dfc4:	stp	x25, x26, [sp, #64]
  40dfc8:	sub	w25, w3, w2
  40dfcc:	mov	w2, w3
  40dfd0:	bl	40df00 <nftw@plt+0xb380>
  40dfd4:	mov	w26, w0
  40dfd8:	ldrb	w0, [x22, #67]
  40dfdc:	mov	x2, #0x9                   	// #9
  40dfe0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40dfe4:	add	x1, x1, #0x220
  40dfe8:	add	w25, w25, #0x1
  40dfec:	bl	40a030 <nftw@plt+0x74b0>
  40dff0:	mov	x1, x0
  40dff4:	mov	x0, x22
  40dff8:	bl	40f9a8 <nftw@plt+0xce28>
  40dffc:	mov	w4, w19
  40e000:	mov	w3, w25
  40e004:	mov	w5, w26
  40e008:	mov	w2, w20
  40e00c:	mov	x0, x22
  40e010:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40e014:	add	x1, x1, #0x4d8
  40e018:	bl	411400 <nftw@plt+0xe880>
  40e01c:	ldrb	w0, [x22, #67]
  40e020:	bl	40a0c0 <nftw@plt+0x7540>
  40e024:	mov	x1, x0
  40e028:	mov	x0, x22
  40e02c:	bl	40f9a8 <nftw@plt+0xce28>
  40e030:	cmp	w23, w20
  40e034:	b.lt	40e0c8 <nftw@plt+0xb548>  // b.tstop
  40e038:	add	x21, x24, #0x8
  40e03c:	b	40e06c <nftw@plt+0xb4ec>
  40e040:	ldr	x0, [x24]
  40e044:	mov	w1, w20
  40e048:	add	w20, w20, #0x1
  40e04c:	bl	4143a8 <nftw@plt+0x11828>
  40e050:	mov	w3, w1
  40e054:	mov	x2, x0
  40e058:	mov	w1, #0x20                  	// #32
  40e05c:	mov	x0, x22
  40e060:	bl	40cf98 <nftw@plt+0xa418>
  40e064:	cmp	w23, w20
  40e068:	b.lt	40e0c8 <nftw@plt+0xb548>  // b.tstop
  40e06c:	mov	w1, w20
  40e070:	mov	x0, x21
  40e074:	bl	40ebb8 <nftw@plt+0xc038>
  40e078:	cbz	x0, 40e040 <nftw@plt+0xb4c0>
  40e07c:	ldr	x0, [x0, #8]
  40e080:	cbz	x0, 40e040 <nftw@plt+0xb4c0>
  40e084:	mov	w19, w20
  40e088:	b	40e098 <nftw@plt+0xb518>
  40e08c:	ldr	x0, [x0, #8]
  40e090:	cbz	x0, 40e0a8 <nftw@plt+0xb528>
  40e094:	add	w19, w19, #0x1
  40e098:	mov	w1, w19
  40e09c:	mov	x0, x21
  40e0a0:	bl	40ebb8 <nftw@plt+0xc038>
  40e0a4:	cbnz	x0, 40e08c <nftw@plt+0xb50c>
  40e0a8:	mov	w2, w20
  40e0ac:	sub	w3, w19, #0x1
  40e0b0:	mov	w20, w19
  40e0b4:	mov	x1, x22
  40e0b8:	mov	x0, x24
  40e0bc:	bl	40dd58 <nftw@plt+0xb1d8>
  40e0c0:	cmp	w23, w20
  40e0c4:	b.ge	40e06c <nftw@plt+0xb4ec>  // b.tcont
  40e0c8:	sub	w0, w26, w25
  40e0cc:	ldp	x19, x20, [sp, #16]
  40e0d0:	ldp	x21, x22, [sp, #32]
  40e0d4:	ldp	x23, x24, [sp, #48]
  40e0d8:	ldp	x25, x26, [sp, #64]
  40e0dc:	ldp	x29, x30, [sp], #80
  40e0e0:	ret
  40e0e4:	nop
  40e0e8:	stp	x29, x30, [sp, #-96]!
  40e0ec:	tst	w2, #0xff
  40e0f0:	mov	x29, sp
  40e0f4:	stp	x23, x24, [sp, #48]
  40e0f8:	mov	x24, x0
  40e0fc:	stp	x25, x26, [sp, #64]
  40e100:	mov	x25, x1
  40e104:	b.ne	40e228 <nftw@plt+0xb6a8>  // b.any
  40e108:	ldr	x0, [x24, #8]
  40e10c:	cbz	x0, 40e288 <nftw@plt+0xb708>
  40e110:	stp	x19, x20, [sp, #16]
  40e114:	nop
  40e118:	mov	x1, x0
  40e11c:	ldr	x0, [x0, #16]
  40e120:	cbnz	x0, 40e118 <nftw@plt+0xb598>
  40e124:	ldr	x19, [x1, #8]
  40e128:	mov	x0, x24
  40e12c:	add	x1, sp, #0x5f
  40e130:	bl	40d098 <nftw@plt+0xa518>
  40e134:	mov	w23, w0
  40e138:	cbz	x19, 40e298 <nftw@plt+0xb718>
  40e13c:	stp	x21, x22, [sp, #32]
  40e140:	add	x21, x24, #0x8
  40e144:	mov	w22, #0x0                   	// #0
  40e148:	mov	w26, #0x1                   	// #1
  40e14c:	nop
  40e150:	ldr	w1, [x19]
  40e154:	mov	x0, x21
  40e158:	sub	w20, w1, #0x3
  40e15c:	cmp	w20, #0x0
  40e160:	csel	w20, w20, w26, gt
  40e164:	bl	40eb50 <nftw@plt+0xbfd0>
  40e168:	ldr	w4, [x19]
  40e16c:	ldr	x2, [x19, #24]
  40e170:	add	w3, w4, #0x3
  40e174:	cbz	x0, 40e1bc <nftw@plt+0xb63c>
  40e178:	ldr	x0, [x0, #8]
  40e17c:	mov	w5, w3
  40e180:	cbz	x0, 40e1bc <nftw@plt+0xb63c>
  40e184:	cbz	x2, 40e218 <nftw@plt+0xb698>
  40e188:	ldr	w1, [x2, #4]
  40e18c:	cbz	w1, 40e218 <nftw@plt+0xb698>
  40e190:	ldr	w1, [x0]
  40e194:	sub	w6, w1, #0x3
  40e198:	cmp	w6, w5
  40e19c:	b.gt	40e1bc <nftw@plt+0xb63c>
  40e1a0:	mov	x19, x0
  40e1a4:	mov	x0, x21
  40e1a8:	bl	40eb50 <nftw@plt+0xbfd0>
  40e1ac:	ldr	w4, [x19]
  40e1b0:	ldr	x2, [x19, #24]
  40e1b4:	add	w3, w4, #0x3
  40e1b8:	cbnz	x0, 40e178 <nftw@plt+0xb5f8>
  40e1bc:	cbz	x2, 40e220 <nftw@plt+0xb6a0>
  40e1c0:	ldr	w0, [x2, #4]
  40e1c4:	cbz	w0, 40e220 <nftw@plt+0xb6a0>
  40e1c8:	cmp	w3, w23
  40e1cc:	add	w4, w20, w22
  40e1d0:	mov	x1, x25
  40e1d4:	csel	w3, w3, w23, le
  40e1d8:	mov	w2, w20
  40e1dc:	mov	x0, x24
  40e1e0:	bl	40df98 <nftw@plt+0xb418>
  40e1e4:	add	w22, w22, w0
  40e1e8:	ldr	w1, [x19]
  40e1ec:	mov	x0, x21
  40e1f0:	bl	40eb50 <nftw@plt+0xbfd0>
  40e1f4:	cbz	x0, 40e200 <nftw@plt+0xb680>
  40e1f8:	ldr	x19, [x0, #8]
  40e1fc:	cbnz	x19, 40e150 <nftw@plt+0xb5d0>
  40e200:	ldp	x19, x20, [sp, #16]
  40e204:	ldp	x21, x22, [sp, #32]
  40e208:	ldp	x23, x24, [sp, #48]
  40e20c:	ldp	x25, x26, [sp, #64]
  40e210:	ldp	x29, x30, [sp], #96
  40e214:	ret
  40e218:	add	w5, w4, #0x2
  40e21c:	b	40e190 <nftw@plt+0xb610>
  40e220:	add	w3, w4, #0x2
  40e224:	b	40e1c8 <nftw@plt+0xb648>
  40e228:	ldrb	w0, [x1, #67]
  40e22c:	mov	x2, #0xd                   	// #13
  40e230:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40e234:	add	x1, x1, #0x210
  40e238:	bl	40a030 <nftw@plt+0x74b0>
  40e23c:	mov	x1, x0
  40e240:	mov	x0, x25
  40e244:	bl	40f9a8 <nftw@plt+0xce28>
  40e248:	ldr	x2, [x24]
  40e24c:	mov	x0, x25
  40e250:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40e254:	add	x1, x1, #0x4f0
  40e258:	bl	411400 <nftw@plt+0xe880>
  40e25c:	ldr	x2, [x24]
  40e260:	mov	x0, x25
  40e264:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40e268:	add	x1, x1, #0x4f8
  40e26c:	bl	411400 <nftw@plt+0xe880>
  40e270:	ldrb	w0, [x25, #67]
  40e274:	bl	40a0c0 <nftw@plt+0x7540>
  40e278:	mov	x1, x0
  40e27c:	mov	x0, x25
  40e280:	bl	40f9a8 <nftw@plt+0xce28>
  40e284:	b	40e108 <nftw@plt+0xb588>
  40e288:	mov	x0, x24
  40e28c:	add	x1, sp, #0x5f
  40e290:	bl	40d098 <nftw@plt+0xa518>
  40e294:	b	40e208 <nftw@plt+0xb688>
  40e298:	ldp	x19, x20, [sp, #16]
  40e29c:	b	40e208 <nftw@plt+0xb688>
  40e2a0:	stp	x29, x30, [sp, #-48]!
  40e2a4:	mov	x29, sp
  40e2a8:	stp	x19, x20, [sp, #16]
  40e2ac:	mov	x20, #0x0                   	// #0
  40e2b0:	ldr	x19, [x0, #8]
  40e2b4:	stp	x21, x22, [sp, #32]
  40e2b8:	mov	x21, x1
  40e2bc:	and	w22, w2, #0xff
  40e2c0:	cbz	x19, 40e2dc <nftw@plt+0xb75c>
  40e2c4:	nop
  40e2c8:	ldr	x0, [x19, #16]
  40e2cc:	str	x20, [x19, #32]
  40e2d0:	mov	x20, x19
  40e2d4:	mov	x19, x0
  40e2d8:	cbnz	x19, 40e2c8 <nftw@plt+0xb748>
  40e2dc:	cbz	x20, 40e2fc <nftw@plt+0xb77c>
  40e2e0:	ldr	x0, [x20, #8]
  40e2e4:	mov	w2, w22
  40e2e8:	mov	x1, x21
  40e2ec:	ldr	x19, [x20, #32]
  40e2f0:	bl	40e0e8 <nftw@plt+0xb568>
  40e2f4:	ldr	x0, [x20, #24]
  40e2f8:	b	40e2d0 <nftw@plt+0xb750>
  40e2fc:	ldp	x19, x20, [sp, #16]
  40e300:	ldp	x21, x22, [sp, #32]
  40e304:	ldp	x29, x30, [sp], #48
  40e308:	ret
  40e30c:	nop
  40e310:	ldrb	w3, [x0]
  40e314:	and	w2, w2, #0xff
  40e318:	cbnz	w3, 40e320 <nftw@plt+0xb7a0>
  40e31c:	ret
  40e320:	b	40e2a0 <nftw@plt+0xb720>
  40e324:	nop
  40e328:	stp	x29, x30, [sp, #-48]!
  40e32c:	mov	x29, sp
  40e330:	stp	x21, x22, [sp, #32]
  40e334:	add	x22, x0, #0x8
  40e338:	mov	w21, w1
  40e33c:	stp	x19, x20, [sp, #16]
  40e340:	mov	x19, x0
  40e344:	mov	x0, x22
  40e348:	bl	40ebb8 <nftw@plt+0xc038>
  40e34c:	cbz	x0, 40e36c <nftw@plt+0xb7ec>
  40e350:	ldr	x20, [x0, #8]
  40e354:	cbz	x20, 40e36c <nftw@plt+0xb7ec>
  40e358:	mov	x0, x20
  40e35c:	ldp	x19, x20, [sp, #16]
  40e360:	ldp	x21, x22, [sp, #32]
  40e364:	ldp	x29, x30, [sp], #48
  40e368:	ret
  40e36c:	mov	x0, #0x28                  	// #40
  40e370:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40e374:	ldr	x1, [x19]
  40e378:	mov	x20, x0
  40e37c:	mov	w2, w21
  40e380:	bl	40d138 <nftw@plt+0xa5b8>
  40e384:	ldr	x0, [x20, #8]
  40e388:	cbz	x0, 40e468 <nftw@plt+0xb8e8>
  40e38c:	mov	x0, x22
  40e390:	mov	w1, w21
  40e394:	bl	40e9e0 <nftw@plt+0xbe60>
  40e398:	ldr	x0, [x19, #8]
  40e39c:	cbz	x0, 40e430 <nftw@plt+0xb8b0>
  40e3a0:	ldr	w0, [x0]
  40e3a4:	mov	w1, w21
  40e3a8:	ldr	x2, [x22, #8]
  40e3ac:	blr	x2
  40e3b0:	mov	w22, w0
  40e3b4:	ldr	x1, [x19, #8]
  40e3b8:	cmp	x1, #0x0
  40e3bc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40e3c0:	b.eq	40e404 <nftw@plt+0xb884>  // b.none
  40e3c4:	mov	x0, #0x28                  	// #40
  40e3c8:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40e3cc:	ldr	x1, [x19, #8]
  40e3d0:	str	w21, [x0]
  40e3d4:	str	x20, [x0, #8]
  40e3d8:	cbz	x1, 40e448 <nftw@plt+0xb8c8>
  40e3dc:	tbnz	w22, #31, 40e454 <nftw@plt+0xb8d4>
  40e3e0:	ldr	x2, [x1, #16]
  40e3e4:	stp	x2, x1, [x0, #16]
  40e3e8:	str	xzr, [x1, #16]
  40e3ec:	str	x0, [x19, #8]
  40e3f0:	mov	x0, x20
  40e3f4:	ldp	x19, x20, [sp, #16]
  40e3f8:	ldp	x21, x22, [sp, #32]
  40e3fc:	ldp	x29, x30, [sp], #48
  40e400:	ret
  40e404:	ldr	x2, [x19, #32]
  40e408:	cbz	x2, 40e418 <nftw@plt+0xb898>
  40e40c:	ldr	x0, [x1, #8]
  40e410:	blr	x2
  40e414:	ldr	x1, [x19, #8]
  40e418:	str	x20, [x1, #8]
  40e41c:	mov	x0, x20
  40e420:	ldp	x19, x20, [sp, #16]
  40e424:	ldp	x21, x22, [sp, #32]
  40e428:	ldp	x29, x30, [sp], #48
  40e42c:	ret
  40e430:	mov	x0, #0x28                  	// #40
  40e434:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  40e438:	ldr	x1, [x19, #8]
  40e43c:	str	w21, [x0]
  40e440:	str	x20, [x0, #8]
  40e444:	cbnz	x1, 40e3e0 <nftw@plt+0xb860>
  40e448:	str	x0, [x19, #8]
  40e44c:	stp	xzr, xzr, [x0, #16]
  40e450:	b	40e3f0 <nftw@plt+0xb870>
  40e454:	ldr	x2, [x1, #24]
  40e458:	stp	x1, x2, [x0, #16]
  40e45c:	str	xzr, [x1, #24]
  40e460:	str	x0, [x19, #8]
  40e464:	b	40e3f0 <nftw@plt+0xb870>
  40e468:	mov	x0, x20
  40e46c:	bl	40d1c0 <nftw@plt+0xa640>
  40e470:	mov	x0, x20
  40e474:	mov	x1, #0x28                  	// #40
  40e478:	mov	x20, #0x0                   	// #0
  40e47c:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  40e480:	b	40e358 <nftw@plt+0xb7d8>
  40e484:	nop
  40e488:	stp	x29, x30, [sp, #-48]!
  40e48c:	mov	x29, sp
  40e490:	stp	x19, x20, [sp, #16]
  40e494:	mov	w19, w2
  40e498:	mov	w20, w3
  40e49c:	stp	x21, x22, [sp, #32]
  40e4a0:	mov	x21, x4
  40e4a4:	mov	w22, w5
  40e4a8:	bl	40e328 <nftw@plt+0xb7a8>
  40e4ac:	cbz	x0, 40e4d0 <nftw@plt+0xb950>
  40e4b0:	mov	w4, w22
  40e4b4:	mov	x3, x21
  40e4b8:	mov	w2, w20
  40e4bc:	mov	w1, w19
  40e4c0:	ldp	x19, x20, [sp, #16]
  40e4c4:	ldp	x21, x22, [sp, #32]
  40e4c8:	ldp	x29, x30, [sp], #48
  40e4cc:	b	40d300 <nftw@plt+0xa780>
  40e4d0:	mov	w0, #0x0                   	// #0
  40e4d4:	ldp	x19, x20, [sp, #16]
  40e4d8:	ldp	x21, x22, [sp, #32]
  40e4dc:	ldp	x29, x30, [sp], #48
  40e4e0:	ret
  40e4e4:	nop
  40e4e8:	stp	x29, x30, [sp, #-128]!
  40e4ec:	mov	x29, sp
  40e4f0:	stp	x19, x20, [sp, #16]
  40e4f4:	mov	x20, x0
  40e4f8:	ldr	w0, [x1]
  40e4fc:	mov	x19, x1
  40e500:	add	x8, sp, #0x40
  40e504:	stp	x21, x22, [sp, #32]
  40e508:	str	x23, [sp, #48]
  40e50c:	bl	414608 <nftw@plt+0x11a88>
  40e510:	ldr	w0, [x19, #4]
  40e514:	add	x8, sp, #0x60
  40e518:	ldp	w22, w23, [sp, #72]
  40e51c:	ldr	x21, [sp, #64]
  40e520:	bl	414608 <nftw@plt+0x11a88>
  40e524:	ldr	x1, [sp, #96]
  40e528:	cmp	x1, x21
  40e52c:	b.eq	40e548 <nftw@plt+0xb9c8>  // b.none
  40e530:	mov	w0, #0x0                   	// #0
  40e534:	ldp	x19, x20, [sp, #16]
  40e538:	ldp	x21, x22, [sp, #32]
  40e53c:	ldr	x23, [sp, #48]
  40e540:	ldp	x29, x30, [sp], #128
  40e544:	ret
  40e548:	ldp	w0, w21, [sp, #104]
  40e54c:	cmp	w23, #0x0
  40e550:	ccmp	w0, w22, #0x0, ne  // ne = any
  40e554:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  40e558:	b.eq	40e530 <nftw@plt+0xb9b0>  // b.none
  40e55c:	mov	x0, x20
  40e560:	bl	40d990 <nftw@plt+0xae10>
  40e564:	ldrb	w1, [x20]
  40e568:	cbz	w1, 40e530 <nftw@plt+0xb9b0>
  40e56c:	ldr	w5, [x19, #16]
  40e570:	mov	w3, w21
  40e574:	mov	w2, w23
  40e578:	mov	w1, w22
  40e57c:	ldr	x4, [x19, #8]
  40e580:	ldp	x19, x20, [sp, #16]
  40e584:	ldp	x21, x22, [sp, #32]
  40e588:	ldr	x23, [sp, #48]
  40e58c:	ldp	x29, x30, [sp], #128
  40e590:	b	40e488 <nftw@plt+0xb908>
  40e594:	nop
  40e598:	stp	x29, x30, [sp, #-64]!
  40e59c:	mov	x29, sp
  40e5a0:	stp	x19, x20, [sp, #16]
  40e5a4:	mov	x20, x0
  40e5a8:	ldrb	w0, [x0]
  40e5ac:	cbz	w0, 40e630 <nftw@plt+0xbab0>
  40e5b0:	ldrb	w0, [x1, #160]
  40e5b4:	stp	x21, x22, [sp, #32]
  40e5b8:	mov	x21, x1
  40e5bc:	cbnz	w0, 40e628 <nftw@plt+0xbaa8>
  40e5c0:	ldr	w0, [x1, #120]
  40e5c4:	cbz	w0, 40e650 <nftw@plt+0xbad0>
  40e5c8:	mov	w19, #0x0                   	// #0
  40e5cc:	mov	x22, #0xfffffffffffffff0    	// #-16
  40e5d0:	str	x23, [sp, #48]
  40e5d4:	add	x23, x1, #0x78
  40e5d8:	b	40e60c <nftw@plt+0xba8c>
  40e5dc:	ldr	x2, [x23, #32]
  40e5e0:	add	x2, x2, x0
  40e5e4:	ldr	x1, [x2]
  40e5e8:	mov	x0, x20
  40e5ec:	add	w19, w19, #0x1
  40e5f0:	bl	40e4e8 <nftw@plt+0xb968>
  40e5f4:	tst	w0, #0xff
  40e5f8:	b.ne	40e600 <nftw@plt+0xba80>  // b.any
  40e5fc:	strb	wzr, [x20]
  40e600:	ldr	w0, [x21, #120]
  40e604:	cmp	w0, w19
  40e608:	b.ls	40e63c <nftw@plt+0xbabc>  // b.plast
  40e60c:	add	x0, x22, w19, sxtw #3
  40e610:	cmp	w19, #0x1
  40e614:	sxtw	x3, w19
  40e618:	b.gt	40e5dc <nftw@plt+0xba5c>
  40e61c:	add	x2, x3, #0x1
  40e620:	add	x2, x23, x2, lsl #3
  40e624:	b	40e5e4 <nftw@plt+0xba64>
  40e628:	ldp	x21, x22, [sp, #32]
  40e62c:	strb	wzr, [x20]
  40e630:	ldp	x19, x20, [sp, #16]
  40e634:	ldp	x29, x30, [sp], #64
  40e638:	ret
  40e63c:	ldp	x19, x20, [sp, #16]
  40e640:	ldp	x21, x22, [sp, #32]
  40e644:	ldr	x23, [sp, #48]
  40e648:	ldp	x29, x30, [sp], #64
  40e64c:	ret
  40e650:	ldp	x21, x22, [sp, #32]
  40e654:	b	40e630 <nftw@plt+0xbab0>
  40e658:	stp	x29, x30, [sp, #-112]!
  40e65c:	mov	x29, sp
  40e660:	stp	x19, x20, [sp, #16]
  40e664:	mov	x19, x0
  40e668:	ldrb	w0, [x0]
  40e66c:	cbz	w0, 40e6c4 <nftw@plt+0xbb44>
  40e670:	add	x0, sp, #0x28
  40e674:	and	w20, w1, #0xff
  40e678:	mov	w1, #0x0                   	// #0
  40e67c:	bl	40f270 <nftw@plt+0xc6f0>
  40e680:	ldrb	w0, [x19]
  40e684:	cbnz	w0, 40e6b0 <nftw@plt+0xbb30>
  40e688:	add	x0, sp, #0x28
  40e68c:	bl	40f2e0 <nftw@plt+0xc760>
  40e690:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  40e694:	mov	x19, x0
  40e698:	add	x0, sp, #0x28
  40e69c:	bl	40ed98 <nftw@plt+0xc218>
  40e6a0:	mov	x0, x19
  40e6a4:	ldp	x19, x20, [sp, #16]
  40e6a8:	ldp	x29, x30, [sp], #112
  40e6ac:	ret
  40e6b0:	mov	w2, w20
  40e6b4:	mov	x0, x19
  40e6b8:	add	x1, sp, #0x28
  40e6bc:	bl	40e2a0 <nftw@plt+0xb720>
  40e6c0:	b	40e688 <nftw@plt+0xbb08>
  40e6c4:	mov	x19, #0x0                   	// #0
  40e6c8:	mov	x0, x19
  40e6cc:	ldp	x19, x20, [sp, #16]
  40e6d0:	ldp	x29, x30, [sp], #112
  40e6d4:	ret
  40e6d8:	stp	x29, x30, [sp, #-112]!
  40e6dc:	mov	w1, #0x0                   	// #0
  40e6e0:	mov	x29, sp
  40e6e4:	str	x19, [sp, #16]
  40e6e8:	mov	x19, x0
  40e6ec:	add	x0, sp, #0x28
  40e6f0:	bl	40f270 <nftw@plt+0xc6f0>
  40e6f4:	mov	x0, x19
  40e6f8:	add	x1, sp, #0x28
  40e6fc:	mov	x19, #0x0                   	// #0
  40e700:	bl	40dbd8 <nftw@plt+0xb058>
  40e704:	tst	w0, #0xff
  40e708:	b.eq	40e71c <nftw@plt+0xbb9c>  // b.none
  40e70c:	add	x0, sp, #0x28
  40e710:	bl	40f2e0 <nftw@plt+0xc760>
  40e714:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  40e718:	mov	x19, x0
  40e71c:	add	x0, sp, #0x28
  40e720:	bl	40ed98 <nftw@plt+0xc218>
  40e724:	mov	x0, x19
  40e728:	ldr	x19, [sp, #16]
  40e72c:	ldp	x29, x30, [sp], #112
  40e730:	ret
  40e734:	nop
  40e738:	ldrb	w2, [x0]
  40e73c:	cbz	w2, 40e754 <nftw@plt+0xbbd4>
  40e740:	stp	x29, x30, [sp, #-16]!
  40e744:	mov	x29, sp
  40e748:	bl	40d990 <nftw@plt+0xae10>
  40e74c:	ldp	x29, x30, [sp], #16
  40e750:	b	40e6d8 <nftw@plt+0xbb58>
  40e754:	mov	x0, #0x0                   	// #0
  40e758:	ret
  40e75c:	nop
  40e760:	cbz	x1, 40e868 <nftw@plt+0xbce8>
  40e764:	stp	x29, x30, [sp, #-48]!
  40e768:	mov	x29, sp
  40e76c:	stp	x19, x20, [sp, #16]
  40e770:	mov	x20, x1
  40e774:	ldr	x1, [x0, #16]
  40e778:	stp	x21, x22, [sp, #32]
  40e77c:	mov	x22, x0
  40e780:	cbz	x1, 40e78c <nftw@plt+0xbc0c>
  40e784:	ldr	w0, [x20]
  40e788:	blr	x1
  40e78c:	ldr	x1, [x22, #24]
  40e790:	cbz	x1, 40e79c <nftw@plt+0xbc1c>
  40e794:	ldr	x0, [x20, #8]
  40e798:	blr	x1
  40e79c:	str	xzr, [x20, #32]
  40e7a0:	mov	x19, x20
  40e7a4:	mov	x20, #0x0                   	// #0
  40e7a8:	ldr	x21, [x19, #16]
  40e7ac:	cbz	x21, 40e830 <nftw@plt+0xbcb0>
  40e7b0:	ldr	x1, [x22, #16]
  40e7b4:	cbz	x1, 40e7c4 <nftw@plt+0xbc44>
  40e7b8:	ldr	w0, [x21]
  40e7bc:	blr	x1
  40e7c0:	ldr	x21, [x19, #16]
  40e7c4:	ldr	x1, [x22, #24]
  40e7c8:	cbz	x1, 40e7d8 <nftw@plt+0xbc58>
  40e7cc:	ldr	x0, [x21, #8]
  40e7d0:	blr	x1
  40e7d4:	ldr	x21, [x19, #16]
  40e7d8:	str	x20, [x21, #32]
  40e7dc:	ldr	x20, [x19, #24]
  40e7e0:	cbz	x20, 40e83c <nftw@plt+0xbcbc>
  40e7e4:	ldr	x1, [x22, #16]
  40e7e8:	cbz	x1, 40e7f8 <nftw@plt+0xbc78>
  40e7ec:	ldr	w0, [x20]
  40e7f0:	blr	x1
  40e7f4:	ldr	x20, [x19, #24]
  40e7f8:	ldr	x1, [x22, #24]
  40e7fc:	cbz	x1, 40e80c <nftw@plt+0xbc8c>
  40e800:	ldr	x0, [x20, #8]
  40e804:	blr	x1
  40e808:	ldr	x20, [x19, #24]
  40e80c:	str	x21, [x20, #32]
  40e810:	mov	x0, x19
  40e814:	mov	x1, #0x28                  	// #40
  40e818:	ldr	x21, [x19, #32]
  40e81c:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  40e820:	cbz	x21, 40e854 <nftw@plt+0xbcd4>
  40e824:	mov	x19, x21
  40e828:	ldr	x21, [x19, #16]
  40e82c:	cbnz	x21, 40e7b0 <nftw@plt+0xbc30>
  40e830:	mov	x21, x20
  40e834:	ldr	x20, [x19, #24]
  40e838:	cbnz	x20, 40e7e4 <nftw@plt+0xbc64>
  40e83c:	mov	x20, x21
  40e840:	mov	x0, x19
  40e844:	ldr	x21, [x19, #32]
  40e848:	mov	x1, #0x28                  	// #40
  40e84c:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  40e850:	cbnz	x21, 40e824 <nftw@plt+0xbca4>
  40e854:	cbnz	x20, 40e7a0 <nftw@plt+0xbc20>
  40e858:	ldp	x19, x20, [sp, #16]
  40e85c:	ldp	x21, x22, [sp, #32]
  40e860:	ldp	x29, x30, [sp], #48
  40e864:	ret
  40e868:	ret
  40e86c:	nop
  40e870:	stp	x29, x30, [sp, #-64]!
  40e874:	mov	x29, sp
  40e878:	stp	x19, x20, [sp, #16]
  40e87c:	ldr	x20, [x0]
  40e880:	stp	x21, x22, [sp, #32]
  40e884:	mov	x22, x0
  40e888:	str	x23, [sp, #48]
  40e88c:	mov	x23, x1
  40e890:	cbz	x20, 40e92c <nftw@plt+0xbdac>
  40e894:	nop
  40e898:	ldr	x1, [x20]
  40e89c:	mov	x0, x23
  40e8a0:	ldr	x2, [x22, #8]
  40e8a4:	blr	x2
  40e8a8:	mov	w21, w0
  40e8ac:	cmp	w0, #0x0
  40e8b0:	cbz	w0, 40e92c <nftw@plt+0xbdac>
  40e8b4:	ldp	x0, x19, [x20, #16]
  40e8b8:	csel	x19, x19, x0, ge  // ge = tcont
  40e8bc:	cbz	x19, 40e92c <nftw@plt+0xbdac>
  40e8c0:	ldr	x1, [x19]
  40e8c4:	mov	x0, x23
  40e8c8:	ldr	x2, [x22, #8]
  40e8cc:	blr	x2
  40e8d0:	cmp	w0, #0x0
  40e8d4:	cbz	w0, 40e990 <nftw@plt+0xbe10>
  40e8d8:	b.lt	40e940 <nftw@plt+0xbdc0>  // b.tstop
  40e8dc:	ldr	x2, [x19, #24]
  40e8e0:	cbz	x2, 40e990 <nftw@plt+0xbe10>
  40e8e4:	cmp	w21, #0x0
  40e8e8:	b.le	40e974 <nftw@plt+0xbdf4>
  40e8ec:	ldr	x0, [x2, #16]
  40e8f0:	str	x19, [x2, #16]
  40e8f4:	str	x0, [x19, #24]
  40e8f8:	str	x2, [x20, #24]
  40e8fc:	ldr	x0, [x2, #16]
  40e900:	str	x20, [x2, #16]
  40e904:	str	x0, [x20, #24]
  40e908:	mov	x20, x2
  40e90c:	str	x2, [x22]
  40e910:	mov	x0, x23
  40e914:	ldr	x2, [x22, #8]
  40e918:	ldr	x1, [x20]
  40e91c:	blr	x2
  40e920:	mov	w21, w0
  40e924:	cmp	w0, #0x0
  40e928:	cbnz	w0, 40e8b4 <nftw@plt+0xbd34>
  40e92c:	ldp	x19, x20, [sp, #16]
  40e930:	ldp	x21, x22, [sp, #32]
  40e934:	ldr	x23, [sp, #48]
  40e938:	ldp	x29, x30, [sp], #64
  40e93c:	ret
  40e940:	ldr	x2, [x19, #16]
  40e944:	cbz	x2, 40e990 <nftw@plt+0xbe10>
  40e948:	ldr	x0, [x2, #24]
  40e94c:	str	x19, [x2, #24]
  40e950:	str	x0, [x19, #16]
  40e954:	tbz	w21, #31, 40e8f8 <nftw@plt+0xbd78>
  40e958:	str	x2, [x20, #16]
  40e95c:	ldr	x0, [x2, #24]
  40e960:	str	x20, [x2, #24]
  40e964:	str	x0, [x20, #16]
  40e968:	mov	x20, x2
  40e96c:	str	x2, [x22]
  40e970:	b	40e898 <nftw@plt+0xbd18>
  40e974:	b.ge	40e988 <nftw@plt+0xbe08>  // b.tcont
  40e978:	ldr	x0, [x2, #16]
  40e97c:	str	x19, [x2, #16]
  40e980:	str	x0, [x19, #24]
  40e984:	b	40e958 <nftw@plt+0xbdd8>
  40e988:	ldr	x20, [x22]
  40e98c:	b	40e898 <nftw@plt+0xbd18>
  40e990:	tbnz	w21, #31, 40e9b8 <nftw@plt+0xbe38>
  40e994:	ldr	x0, [x19, #16]
  40e998:	str	x20, [x19, #16]
  40e99c:	str	x0, [x20, #24]
  40e9a0:	str	x19, [x22]
  40e9a4:	ldp	x19, x20, [sp, #16]
  40e9a8:	ldp	x21, x22, [sp, #32]
  40e9ac:	ldr	x23, [sp, #48]
  40e9b0:	ldp	x29, x30, [sp], #64
  40e9b4:	ret
  40e9b8:	ldr	x0, [x19, #24]
  40e9bc:	str	x20, [x19, #24]
  40e9c0:	str	x0, [x20, #16]
  40e9c4:	str	x19, [x22]
  40e9c8:	ldp	x19, x20, [sp, #16]
  40e9cc:	ldp	x21, x22, [sp, #32]
  40e9d0:	ldr	x23, [sp, #48]
  40e9d4:	ldp	x29, x30, [sp], #64
  40e9d8:	ret
  40e9dc:	nop
  40e9e0:	stp	x29, x30, [sp, #-64]!
  40e9e4:	mov	x29, sp
  40e9e8:	stp	x19, x20, [sp, #16]
  40e9ec:	ldr	x20, [x0]
  40e9f0:	stp	x21, x22, [sp, #32]
  40e9f4:	mov	x22, x0
  40e9f8:	str	x23, [sp, #48]
  40e9fc:	mov	w23, w1
  40ea00:	cbz	x20, 40ea9c <nftw@plt+0xbf1c>
  40ea04:	nop
  40ea08:	ldr	w1, [x20]
  40ea0c:	mov	w0, w23
  40ea10:	ldr	x2, [x22, #8]
  40ea14:	blr	x2
  40ea18:	mov	w21, w0
  40ea1c:	cmp	w0, #0x0
  40ea20:	cbz	w0, 40ea9c <nftw@plt+0xbf1c>
  40ea24:	ldp	x0, x19, [x20, #16]
  40ea28:	csel	x19, x19, x0, ge  // ge = tcont
  40ea2c:	cbz	x19, 40ea9c <nftw@plt+0xbf1c>
  40ea30:	ldr	w1, [x19]
  40ea34:	mov	w0, w23
  40ea38:	ldr	x2, [x22, #8]
  40ea3c:	blr	x2
  40ea40:	cmp	w0, #0x0
  40ea44:	cbz	w0, 40eb00 <nftw@plt+0xbf80>
  40ea48:	b.lt	40eab0 <nftw@plt+0xbf30>  // b.tstop
  40ea4c:	ldr	x2, [x19, #24]
  40ea50:	cbz	x2, 40eb00 <nftw@plt+0xbf80>
  40ea54:	cmp	w21, #0x0
  40ea58:	b.le	40eae4 <nftw@plt+0xbf64>
  40ea5c:	ldr	x0, [x2, #16]
  40ea60:	str	x19, [x2, #16]
  40ea64:	str	x0, [x19, #24]
  40ea68:	str	x2, [x20, #24]
  40ea6c:	ldr	x0, [x2, #16]
  40ea70:	str	x20, [x2, #16]
  40ea74:	str	x0, [x20, #24]
  40ea78:	mov	x20, x2
  40ea7c:	str	x2, [x22]
  40ea80:	mov	w0, w23
  40ea84:	ldr	x2, [x22, #8]
  40ea88:	ldr	w1, [x20]
  40ea8c:	blr	x2
  40ea90:	mov	w21, w0
  40ea94:	cmp	w0, #0x0
  40ea98:	cbnz	w0, 40ea24 <nftw@plt+0xbea4>
  40ea9c:	ldp	x19, x20, [sp, #16]
  40eaa0:	ldp	x21, x22, [sp, #32]
  40eaa4:	ldr	x23, [sp, #48]
  40eaa8:	ldp	x29, x30, [sp], #64
  40eaac:	ret
  40eab0:	ldr	x2, [x19, #16]
  40eab4:	cbz	x2, 40eb00 <nftw@plt+0xbf80>
  40eab8:	ldr	x0, [x2, #24]
  40eabc:	str	x19, [x2, #24]
  40eac0:	str	x0, [x19, #16]
  40eac4:	tbz	w21, #31, 40ea68 <nftw@plt+0xbee8>
  40eac8:	str	x2, [x20, #16]
  40eacc:	ldr	x0, [x2, #24]
  40ead0:	str	x20, [x2, #24]
  40ead4:	str	x0, [x20, #16]
  40ead8:	mov	x20, x2
  40eadc:	str	x2, [x22]
  40eae0:	b	40ea08 <nftw@plt+0xbe88>
  40eae4:	b.ge	40eaf8 <nftw@plt+0xbf78>  // b.tcont
  40eae8:	ldr	x0, [x2, #16]
  40eaec:	str	x19, [x2, #16]
  40eaf0:	str	x0, [x19, #24]
  40eaf4:	b	40eac8 <nftw@plt+0xbf48>
  40eaf8:	ldr	x20, [x22]
  40eafc:	b	40ea08 <nftw@plt+0xbe88>
  40eb00:	tbnz	w21, #31, 40eb28 <nftw@plt+0xbfa8>
  40eb04:	ldr	x0, [x19, #16]
  40eb08:	str	x20, [x19, #16]
  40eb0c:	str	x0, [x20, #24]
  40eb10:	str	x19, [x22]
  40eb14:	ldp	x19, x20, [sp, #16]
  40eb18:	ldp	x21, x22, [sp, #32]
  40eb1c:	ldr	x23, [sp, #48]
  40eb20:	ldp	x29, x30, [sp], #64
  40eb24:	ret
  40eb28:	ldr	x0, [x19, #24]
  40eb2c:	str	x20, [x19, #24]
  40eb30:	str	x0, [x20, #16]
  40eb34:	str	x19, [x22]
  40eb38:	ldp	x19, x20, [sp, #16]
  40eb3c:	ldp	x21, x22, [sp, #32]
  40eb40:	ldr	x23, [sp, #48]
  40eb44:	ldp	x29, x30, [sp], #64
  40eb48:	ret
  40eb4c:	nop
  40eb50:	ldr	x2, [x0]
  40eb54:	cbz	x2, 40ebb0 <nftw@plt+0xc030>
  40eb58:	stp	x29, x30, [sp, #-32]!
  40eb5c:	mov	x29, sp
  40eb60:	stp	x19, x20, [sp, #16]
  40eb64:	mov	x19, x0
  40eb68:	mov	w20, w1
  40eb6c:	bl	40e9e0 <nftw@plt+0xbe60>
  40eb70:	ldp	x0, x2, [x19]
  40eb74:	mov	w1, w20
  40eb78:	ldr	w0, [x0]
  40eb7c:	blr	x2
  40eb80:	cmp	w0, #0x0
  40eb84:	ldr	x0, [x19]
  40eb88:	b.gt	40eba4 <nftw@plt+0xc024>
  40eb8c:	ldr	x1, [x0, #24]
  40eb90:	mov	x0, #0x0                   	// #0
  40eb94:	cbz	x1, 40eba4 <nftw@plt+0xc024>
  40eb98:	mov	x0, x1
  40eb9c:	ldr	x1, [x1, #16]
  40eba0:	cbnz	x1, 40eb98 <nftw@plt+0xc018>
  40eba4:	ldp	x19, x20, [sp, #16]
  40eba8:	ldp	x29, x30, [sp], #32
  40ebac:	ret
  40ebb0:	mov	x0, #0x0                   	// #0
  40ebb4:	ret
  40ebb8:	stp	x29, x30, [sp, #-32]!
  40ebbc:	mov	x29, sp
  40ebc0:	stp	x19, x20, [sp, #16]
  40ebc4:	mov	x19, x0
  40ebc8:	mov	w20, w1
  40ebcc:	bl	40e9e0 <nftw@plt+0xbe60>
  40ebd0:	ldr	x0, [x19]
  40ebd4:	cbz	x0, 40ebfc <nftw@plt+0xc07c>
  40ebd8:	ldr	w0, [x0]
  40ebdc:	mov	w1, w20
  40ebe0:	ldr	x2, [x19, #8]
  40ebe4:	blr	x2
  40ebe8:	cbnz	w0, 40ebfc <nftw@plt+0xc07c>
  40ebec:	ldr	x0, [x19]
  40ebf0:	ldp	x19, x20, [sp, #16]
  40ebf4:	ldp	x29, x30, [sp], #32
  40ebf8:	ret
  40ebfc:	mov	x0, #0x0                   	// #0
  40ec00:	ldp	x19, x20, [sp, #16]
  40ec04:	ldp	x29, x30, [sp], #32
  40ec08:	ret
  40ec0c:	nop
  40ec10:	ldrb	w7, [x0]
  40ec14:	cbz	x1, 40ed0c <nftw@plt+0xc18c>
  40ec18:	tbz	w7, #7, 40eca0 <nftw@plt+0xc120>
  40ec1c:	mov	w4, w7
  40ec20:	mov	x3, #0x0                   	// #0
  40ec24:	nop
  40ec28:	mov	x6, x3
  40ec2c:	lsl	w4, w4, #1
  40ec30:	add	x3, x3, #0x1
  40ec34:	tbnz	w4, #7, 40ec28 <nftw@plt+0xc0a8>
  40ec38:	sub	x6, x6, #0x1
  40ec3c:	cmp	x6, #0x4
  40ec40:	ccmp	x1, x3, #0x0, ls  // ls = plast
  40ec44:	b.cs	40ec58 <nftw@plt+0xc0d8>  // b.hs, b.nlast
  40ec48:	mov	w1, #0xffffffff            	// #-1
  40ec4c:	mov	w0, #0x0                   	// #0
  40ec50:	str	w1, [x2]
  40ec54:	ret
  40ec58:	mov	w5, #0x7                   	// #7
  40ec5c:	sub	w4, w5, w3
  40ec60:	mov	w5, #0x1                   	// #1
  40ec64:	mov	x1, #0x1                   	// #1
  40ec68:	lsl	w5, w5, w4
  40ec6c:	sub	w5, w5, #0x1
  40ec70:	and	w5, w5, w7
  40ec74:	b	40ec8c <nftw@plt+0xc10c>
  40ec78:	add	x1, x1, #0x1
  40ec7c:	bfi	w4, w5, #6, #26
  40ec80:	mov	w5, w4
  40ec84:	cmp	x3, x1
  40ec88:	b.ls	40ecac <nftw@plt+0xc12c>  // b.plast
  40ec8c:	ldrb	w4, [x0, x1]
  40ec90:	and	w6, w4, #0xc0
  40ec94:	cmp	w6, #0x80
  40ec98:	b.eq	40ec78 <nftw@plt+0xc0f8>  // b.none
  40ec9c:	b	40ec48 <nftw@plt+0xc0c8>
  40eca0:	mov	w0, #0x1                   	// #1
  40eca4:	str	w7, [x2]
  40eca8:	ret
  40ecac:	cmp	w4, #0x7f
  40ecb0:	b.ls	40ec48 <nftw@plt+0xc0c8>  // b.plast
  40ecb4:	cmp	w4, #0x7ff
  40ecb8:	ccmp	x3, #0x2, #0x0, ls  // ls = plast
  40ecbc:	b.hi	40ec48 <nftw@plt+0xc0c8>  // b.pmore
  40ecc0:	mov	w0, #0xffff                	// #65535
  40ecc4:	cmp	w4, w0
  40ecc8:	ccmp	x3, #0x3, #0x0, ls  // ls = plast
  40eccc:	b.hi	40ec48 <nftw@plt+0xc0c8>  // b.pmore
  40ecd0:	mov	w0, #0x1fffff              	// #2097151
  40ecd4:	cmp	w4, w0
  40ecd8:	ccmp	x3, #0x4, #0x0, ls  // ls = plast
  40ecdc:	b.hi	40ec48 <nftw@plt+0xc0c8>  // b.pmore
  40ece0:	mov	w0, #0x3ffffff             	// #67108863
  40ece4:	cmp	w4, w0
  40ece8:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
  40ecec:	b.eq	40ec48 <nftw@plt+0xc0c8>  // b.none
  40ecf0:	mov	w0, #0xffff2800            	// #-55296
  40ecf4:	add	w0, w4, w0
  40ecf8:	cmp	w0, #0x7ff
  40ecfc:	b.ls	40ec48 <nftw@plt+0xc0c8>  // b.plast
  40ed00:	mov	w0, w3
  40ed04:	str	w4, [x2]
  40ed08:	ret
  40ed0c:	stp	x29, x30, [sp, #-16]!
  40ed10:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ed14:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40ed18:	mov	x29, sp
  40ed1c:	add	x2, x2, #0x500
  40ed20:	add	x0, x0, #0x518
  40ed24:	mov	w1, #0x71b                 	// #1819
  40ed28:	bl	402bf0 <nftw@plt+0x70>
  40ed2c:	nop
  40ed30:	stp	x29, x30, [sp, #-32]!
  40ed34:	mov	x29, sp
  40ed38:	stp	x19, x20, [sp, #16]
  40ed3c:	mov	x19, x0
  40ed40:	ldr	w20, [x0, #40]
  40ed44:	cmp	w20, #0x0
  40ed48:	b.le	40ed58 <nftw@plt+0xc1d8>
  40ed4c:	ldr	w0, [x0, #36]
  40ed50:	cmp	w0, #0x1
  40ed54:	b.hi	40ed68 <nftw@plt+0xc1e8>  // b.pmore
  40ed58:	str	w20, [x19, #28]
  40ed5c:	ldp	x19, x20, [sp, #16]
  40ed60:	ldp	x29, x30, [sp], #32
  40ed64:	ret
  40ed68:	ldr	x0, [x19, #16]
  40ed6c:	mov	w1, w20
  40ed70:	cbz	x0, 40ed7c <nftw@plt+0xc1fc>
  40ed74:	bl	4024f0 <strlen@plt>
  40ed78:	sub	w1, w20, w0
  40ed7c:	cmp	w1, #0x20
  40ed80:	add	w0, w20, #0x20
  40ed84:	csel	w20, w0, w20, lt  // lt = tstop
  40ed88:	str	w20, [x19, #28]
  40ed8c:	ldp	x19, x20, [sp, #16]
  40ed90:	ldp	x29, x30, [sp], #32
  40ed94:	ret
  40ed98:	stp	x29, x30, [sp, #-32]!
  40ed9c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40eda0:	add	x1, x1, #0x640
  40eda4:	mov	x29, sp
  40eda8:	stp	x19, x20, [sp, #16]
  40edac:	mov	x19, x0
  40edb0:	ldr	x0, [x0, #56]
  40edb4:	str	x1, [x19]
  40edb8:	cbz	x0, 40edc8 <nftw@plt+0xc248>
  40edbc:	ldr	x1, [x0]
  40edc0:	ldr	x1, [x1, #8]
  40edc4:	blr	x1
  40edc8:	ldr	x20, [x19, #8]
  40edcc:	mov	x1, #0x0                   	// #0
  40edd0:	add	x0, x20, #0x58
  40edd4:	bl	4499d0 <_obstack_free@@Base>
  40edd8:	mov	x0, x20
  40eddc:	mov	x1, #0x0                   	// #0
  40ede0:	bl	4499d0 <_obstack_free@@Base>
  40ede4:	ldr	x0, [x19, #8]
  40ede8:	bl	402910 <free@plt>
  40edec:	ldr	x0, [x19, #16]
  40edf0:	ldp	x19, x20, [sp, #16]
  40edf4:	ldp	x29, x30, [sp], #32
  40edf8:	b	402910 <free@plt>
  40edfc:	nop
  40ee00:	stp	x29, x30, [sp, #-32]!
  40ee04:	mov	x29, sp
  40ee08:	str	x19, [sp, #16]
  40ee0c:	mov	x19, x0
  40ee10:	bl	40ed98 <nftw@plt+0xc218>
  40ee14:	mov	x0, x19
  40ee18:	mov	x1, #0x48                  	// #72
  40ee1c:	ldr	x19, [sp, #16]
  40ee20:	ldp	x29, x30, [sp], #32
  40ee24:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  40ee28:	ldr	x0, [x0, #32]
  40ee2c:	b	42d728 <nftw@plt+0x2aba8>
  40ee30:	cbz	w1, 40ee3c <nftw@plt+0xc2bc>
  40ee34:	mov	w0, #0x0                   	// #0
  40ee38:	ret
  40ee3c:	ldr	x0, [x0, #32]
  40ee40:	b	42cf60 <nftw@plt+0x2a3e0>
  40ee44:	nop
  40ee48:	stp	x29, x30, [sp, #-48]!
  40ee4c:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40ee50:	add	x2, x0, #0x14c
  40ee54:	mov	x29, sp
  40ee58:	stp	x19, x20, [sp, #16]
  40ee5c:	mov	x19, x0
  40ee60:	ldrb	w3, [x0, #80]
  40ee64:	ldr	x4, [x1, #1392]
  40ee68:	add	x1, x0, #0xcc
  40ee6c:	ldrb	w0, [x0, #168]
  40ee70:	and	w3, w3, #0xfffffff8
  40ee74:	str	x21, [sp, #32]
  40ee78:	and	w0, w0, #0xfffffff8
  40ee7c:	stp	xzr, xzr, [x19]
  40ee80:	stp	xzr, xzr, [x19, #16]
  40ee84:	stp	xzr, xzr, [x19, #32]
  40ee88:	stp	xzr, xzr, [x19, #48]
  40ee8c:	stp	xzr, xzr, [x19, #64]
  40ee90:	strb	w3, [x19, #80]
  40ee94:	stp	xzr, xzr, [x19, #88]
  40ee98:	stp	xzr, xzr, [x19, #104]
  40ee9c:	stp	xzr, xzr, [x19, #120]
  40eea0:	stp	xzr, xzr, [x19, #136]
  40eea4:	stp	xzr, xzr, [x19, #152]
  40eea8:	strb	w0, [x19, #168]
  40eeac:	stp	x19, xzr, [x19, #176]
  40eeb0:	str	x4, [x19, #192]
  40eeb4:	str	wzr, [x19, #200]
  40eeb8:	strb	wzr, [x1], #1
  40eebc:	cmp	x2, x1
  40eec0:	b.ne	40eeb8 <nftw@plt+0xc338>  // b.any
  40eec4:	mov	w0, #0x1                   	// #1
  40eec8:	strb	w0, [x19, #332]
  40eecc:	adrp	x21, 416000 <nftw@plt+0x13480>
  40eed0:	adrp	x20, 416000 <nftw@plt+0x13480>
  40eed4:	add	x21, x21, #0x670
  40eed8:	add	x20, x20, #0x648
  40eedc:	mov	x4, x21
  40eee0:	mov	x3, x20
  40eee4:	mov	x0, x19
  40eee8:	mov	x2, #0x0                   	// #0
  40eeec:	mov	x1, #0x0                   	// #0
  40eef0:	bl	449840 <_obstack_begin@@Base>
  40eef4:	mov	x4, x21
  40eef8:	mov	x3, x20
  40eefc:	add	x0, x19, #0x58
  40ef00:	mov	x2, #0x0                   	// #0
  40ef04:	ldp	x19, x20, [sp, #16]
  40ef08:	mov	x1, #0x0                   	// #0
  40ef0c:	ldr	x21, [sp, #32]
  40ef10:	ldp	x29, x30, [sp], #48
  40ef14:	b	449840 <_obstack_begin@@Base>
  40ef18:	stp	x29, x30, [sp, #-32]!
  40ef1c:	mov	x1, #0x0                   	// #0
  40ef20:	mov	x29, sp
  40ef24:	str	x19, [sp, #16]
  40ef28:	mov	x19, x0
  40ef2c:	add	x0, x0, #0x58
  40ef30:	bl	4499d0 <_obstack_free@@Base>
  40ef34:	mov	x0, x19
  40ef38:	mov	x1, #0x0                   	// #0
  40ef3c:	ldr	x19, [sp, #16]
  40ef40:	ldp	x29, x30, [sp], #32
  40ef44:	b	4499d0 <_obstack_free@@Base>
  40ef48:	str	w1, [x0, #40]
  40ef4c:	b	40ed30 <nftw@plt+0xc1b0>
  40ef50:	stp	x29, x30, [sp, #-32]!
  40ef54:	mov	x29, sp
  40ef58:	ldr	x2, [x0, #8]
  40ef5c:	str	x19, [sp, #16]
  40ef60:	mov	x19, x0
  40ef64:	ldr	x0, [x2, #176]
  40ef68:	ldp	x3, x1, [x0, #8]
  40ef6c:	cmp	x3, x1
  40ef70:	b.cs	40ef80 <nftw@plt+0xc400>  // b.hs, b.nlast
  40ef74:	ldr	x3, [x0, #32]
  40ef78:	cmp	x3, x1
  40ef7c:	b.hi	40ef98 <nftw@plt+0xc418>  // b.pmore
  40ef80:	bl	4499d0 <_obstack_free@@Base>
  40ef84:	ldr	x2, [x19, #8]
  40ef88:	ldr	x19, [sp, #16]
  40ef8c:	str	wzr, [x2, #200]
  40ef90:	ldp	x29, x30, [sp], #32
  40ef94:	ret
  40ef98:	str	x1, [x0, #24]
  40ef9c:	ldr	x19, [sp, #16]
  40efa0:	str	wzr, [x2, #200]
  40efa4:	ldp	x29, x30, [sp], #32
  40efa8:	ret
  40efac:	nop
  40efb0:	stp	x29, x30, [sp, #-48]!
  40efb4:	mov	x29, sp
  40efb8:	str	x21, [sp, #32]
  40efbc:	ldr	x21, [x0, #8]
  40efc0:	stp	x19, x20, [sp, #16]
  40efc4:	mov	x19, x0
  40efc8:	ldr	x20, [x21, #176]
  40efcc:	ldp	x0, x1, [x20, #24]
  40efd0:	cmp	x1, x0
  40efd4:	b.eq	40f00c <nftw@plt+0xc48c>  // b.none
  40efd8:	add	x1, x0, #0x1
  40efdc:	str	x1, [x20, #24]
  40efe0:	strb	wzr, [x0]
  40efe4:	ldr	x1, [x19, #8]
  40efe8:	ldr	x0, [x21, #176]
  40efec:	ldr	x1, [x1, #192]
  40eff0:	ldr	x0, [x0, #16]
  40eff4:	bl	402500 <fputs@plt>
  40eff8:	mov	x0, x19
  40effc:	ldp	x19, x20, [sp, #16]
  40f000:	ldr	x21, [sp, #32]
  40f004:	ldp	x29, x30, [sp], #48
  40f008:	b	40ef50 <nftw@plt+0xc3d0>
  40f00c:	mov	x0, x20
  40f010:	mov	x1, #0x1                   	// #1
  40f014:	bl	449870 <_obstack_newchunk@@Base>
  40f018:	ldr	x0, [x20, #24]
  40f01c:	b	40efd8 <nftw@plt+0xc458>
  40f020:	stp	x29, x30, [sp, #-32]!
  40f024:	mov	x29, sp
  40f028:	str	x19, [sp, #16]
  40f02c:	mov	x19, x0
  40f030:	str	wzr, [x0, #32]
  40f034:	strb	wzr, [x0, #64]
  40f038:	bl	40efb0 <nftw@plt+0xc430>
  40f03c:	ldr	x0, [x19, #8]
  40f040:	ldr	x19, [sp, #16]
  40f044:	ldp	x29, x30, [sp], #32
  40f048:	ldr	x0, [x0, #192]
  40f04c:	b	402980 <fflush@plt>
  40f050:	ldr	x1, [x0, #8]
  40f054:	strb	wzr, [x0, #64]
  40f058:	ldrb	w1, [x1, #332]
  40f05c:	str	wzr, [x0, #32]
  40f060:	cbnz	w1, 40f068 <nftw@plt+0xc4e8>
  40f064:	ret
  40f068:	stp	x29, x30, [sp, #-32]!
  40f06c:	mov	x29, sp
  40f070:	str	x19, [sp, #16]
  40f074:	mov	x19, x0
  40f078:	bl	40efb0 <nftw@plt+0xc430>
  40f07c:	ldr	x0, [x19, #8]
  40f080:	ldr	x19, [sp, #16]
  40f084:	ldp	x29, x30, [sp], #32
  40f088:	ldr	x0, [x0, #192]
  40f08c:	b	402980 <fflush@plt>
  40f090:	stp	x29, x30, [sp, #-64]!
  40f094:	mov	x29, sp
  40f098:	stp	x19, x20, [sp, #16]
  40f09c:	ldr	x20, [x0, #8]
  40f0a0:	stp	x21, x22, [sp, #32]
  40f0a4:	mov	x21, x0
  40f0a8:	ldr	x19, [x20, #176]
  40f0ac:	ldr	x0, [x19, #24]
  40f0b0:	str	x23, [sp, #48]
  40f0b4:	and	w23, w1, #0xff
  40f0b8:	ldr	x1, [x19, #32]
  40f0bc:	cmp	x1, x0
  40f0c0:	b.eq	40f1dc <nftw@plt+0xc65c>  // b.none
  40f0c4:	add	x1, x0, #0x1
  40f0c8:	str	x1, [x19, #24]
  40f0cc:	strb	wzr, [x0]
  40f0d0:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40f0d4:	add	x22, x22, #0x538
  40f0d8:	ldr	x1, [x20, #176]
  40f0dc:	ldr	x0, [x21, #8]
  40f0e0:	ldr	x19, [x1, #16]
  40f0e4:	ldr	x20, [x0, #192]
  40f0e8:	ldrb	w1, [x19]
  40f0ec:	cbz	w1, 40f140 <nftw@plt+0xc5c0>
  40f0f0:	cmp	w1, #0x22
  40f0f4:	b.eq	40f120 <nftw@plt+0xc5a0>  // b.none
  40f0f8:	b.ls	40f17c <nftw@plt+0xc5fc>  // b.plast
  40f0fc:	cmp	w1, #0x5c
  40f100:	b.eq	40f1bc <nftw@plt+0xc63c>  // b.none
  40f104:	b.ls	40f158 <nftw@plt+0xc5d8>  // b.plast
  40f108:	sub	w1, w1, #0x7b
  40f10c:	and	w1, w1, #0xff
  40f110:	cmp	w1, #0x2
  40f114:	b.hi	40f12c <nftw@plt+0xc5ac>  // b.pmore
  40f118:	cbz	w23, 40f12c <nftw@plt+0xc5ac>
  40f11c:	nop
  40f120:	mov	x1, x20
  40f124:	mov	w0, #0x5c                  	// #92
  40f128:	bl	4025e0 <fputc@plt>
  40f12c:	ldrb	w0, [x19]
  40f130:	mov	x1, x20
  40f134:	bl	4025e0 <fputc@plt>
  40f138:	ldrb	w1, [x19, #1]!
  40f13c:	cbnz	w1, 40f0f0 <nftw@plt+0xc570>
  40f140:	mov	x0, x21
  40f144:	ldp	x19, x20, [sp, #16]
  40f148:	ldp	x21, x22, [sp, #32]
  40f14c:	ldr	x23, [sp, #48]
  40f150:	ldp	x29, x30, [sp], #64
  40f154:	b	40ef50 <nftw@plt+0xc3d0>
  40f158:	and	w1, w1, #0xfffffffd
  40f15c:	cmp	w1, #0x3c
  40f160:	b.eq	40f118 <nftw@plt+0xc598>  // b.none
  40f164:	ldrb	w0, [x19]
  40f168:	mov	x1, x20
  40f16c:	bl	4025e0 <fputc@plt>
  40f170:	ldrb	w1, [x19, #1]!
  40f174:	cbnz	w1, 40f0f0 <nftw@plt+0xc570>
  40f178:	b	40f140 <nftw@plt+0xc5c0>
  40f17c:	cmp	w1, #0xa
  40f180:	b.ne	40f19c <nftw@plt+0xc61c>  // b.any
  40f184:	mov	x3, x20
  40f188:	mov	x0, x22
  40f18c:	mov	x2, #0x2                   	// #2
  40f190:	mov	x1, #0x1                   	// #1
  40f194:	bl	402950 <fwrite@plt>
  40f198:	b	40f120 <nftw@plt+0xc5a0>
  40f19c:	cmp	w1, #0x20
  40f1a0:	b.eq	40f118 <nftw@plt+0xc598>  // b.none
  40f1a4:	ldrb	w0, [x19]
  40f1a8:	mov	x1, x20
  40f1ac:	bl	4025e0 <fputc@plt>
  40f1b0:	ldrb	w1, [x19, #1]!
  40f1b4:	cbnz	w1, 40f0f0 <nftw@plt+0xc570>
  40f1b8:	b	40f140 <nftw@plt+0xc5c0>
  40f1bc:	ldrb	w0, [x19, #1]
  40f1c0:	cbnz	w0, 40f120 <nftw@plt+0xc5a0>
  40f1c4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40f1c8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40f1cc:	add	x2, x2, #0x540
  40f1d0:	add	x0, x0, #0x518
  40f1d4:	mov	w1, #0x378                 	// #888
  40f1d8:	bl	402bf0 <nftw@plt+0x70>
  40f1dc:	mov	x0, x19
  40f1e0:	mov	x1, #0x1                   	// #1
  40f1e4:	bl	449870 <_obstack_newchunk@@Base>
  40f1e8:	ldr	x0, [x19, #24]
  40f1ec:	b	40f0c4 <nftw@plt+0xc544>
  40f1f0:	stp	x29, x30, [sp, #-32]!
  40f1f4:	mov	x29, sp
  40f1f8:	stp	x19, x20, [sp, #16]
  40f1fc:	mov	x19, x0
  40f200:	mov	x20, x1
  40f204:	ldr	x0, [x0, #16]
  40f208:	bl	402910 <free@plt>
  40f20c:	str	x20, [x19, #16]
  40f210:	mov	x0, x19
  40f214:	bl	40ed30 <nftw@plt+0xc1b0>
  40f218:	str	wzr, [x19, #32]
  40f21c:	strb	wzr, [x19, #64]
  40f220:	ldp	x19, x20, [sp, #16]
  40f224:	ldp	x29, x30, [sp], #32
  40f228:	ret
  40f22c:	nop
  40f230:	mov	x1, x0
  40f234:	ldr	x0, [x0, #16]
  40f238:	str	xzr, [x1, #16]
  40f23c:	ret
  40f240:	stp	x29, x30, [sp, #-32]!
  40f244:	mov	x29, sp
  40f248:	str	x19, [sp, #16]
  40f24c:	mov	x19, x0
  40f250:	ldr	x0, [x0, #16]
  40f254:	cbz	x0, 40f260 <nftw@plt+0xc6e0>
  40f258:	bl	402910 <free@plt>
  40f25c:	str	xzr, [x19, #16]
  40f260:	ldr	x19, [sp, #16]
  40f264:	ldp	x29, x30, [sp], #32
  40f268:	ret
  40f26c:	nop
  40f270:	stp	x29, x30, [sp, #-48]!
  40f274:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40f278:	add	x2, x2, #0x640
  40f27c:	mov	x29, sp
  40f280:	stp	x19, x20, [sp, #16]
  40f284:	mov	x19, x0
  40f288:	mov	w20, w1
  40f28c:	str	x21, [sp, #32]
  40f290:	mov	x1, #0x150                 	// #336
  40f294:	str	x2, [x19]
  40f298:	mov	x0, #0x1                   	// #1
  40f29c:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  40f2a0:	mov	x21, x0
  40f2a4:	bl	40ee48 <nftw@plt+0xc2c8>
  40f2a8:	stp	x21, xzr, [x19, #8]
  40f2ac:	mov	w1, #0x10000               	// #65536
  40f2b0:	stp	xzr, xzr, [x19, #24]
  40f2b4:	mov	x0, x19
  40f2b8:	str	w20, [x19, #40]
  40f2bc:	stp	xzr, xzr, [x19, #48]
  40f2c0:	str	w1, [x19, #64]
  40f2c4:	bl	40ed30 <nftw@plt+0xc1b0>
  40f2c8:	strb	wzr, [x19, #64]
  40f2cc:	ldr	x21, [sp, #32]
  40f2d0:	str	wzr, [x19, #32]
  40f2d4:	ldp	x19, x20, [sp, #16]
  40f2d8:	ldp	x29, x30, [sp], #48
  40f2dc:	ret
  40f2e0:	stp	x29, x30, [sp, #-32]!
  40f2e4:	mov	x29, sp
  40f2e8:	stp	x19, x20, [sp, #16]
  40f2ec:	ldr	x20, [x0, #8]
  40f2f0:	ldr	x19, [x20, #176]
  40f2f4:	ldp	x0, x1, [x19, #24]
  40f2f8:	cmp	x1, x0
  40f2fc:	b.eq	40f320 <nftw@plt+0xc7a0>  // b.none
  40f300:	add	x1, x0, #0x1
  40f304:	str	x1, [x19, #24]
  40f308:	strb	wzr, [x0]
  40f30c:	ldr	x0, [x20, #176]
  40f310:	ldp	x19, x20, [sp, #16]
  40f314:	ldp	x29, x30, [sp], #32
  40f318:	ldr	x0, [x0, #16]
  40f31c:	ret
  40f320:	mov	x0, x19
  40f324:	mov	x1, #0x1                   	// #1
  40f328:	bl	449870 <_obstack_newchunk@@Base>
  40f32c:	ldr	x0, [x19, #24]
  40f330:	add	x1, x0, #0x1
  40f334:	str	x1, [x19, #24]
  40f338:	strb	wzr, [x0]
  40f33c:	ldr	x0, [x20, #176]
  40f340:	ldp	x19, x20, [sp, #16]
  40f344:	ldp	x29, x30, [sp], #32
  40f348:	ldr	x0, [x0, #16]
  40f34c:	ret
  40f350:	ldr	x0, [x0, #8]
  40f354:	ldr	x0, [x0, #176]
  40f358:	ldp	x1, x0, [x0, #16]
  40f35c:	cmp	x1, x0
  40f360:	sub	x0, x0, #0x1
  40f364:	csel	x0, x0, xzr, ne  // ne = any
  40f368:	ret
  40f36c:	nop
  40f370:	ldr	x2, [x0, #8]
  40f374:	ldr	w1, [x0, #28]
  40f378:	ldr	w0, [x2, #200]
  40f37c:	sub	w0, w1, w0
  40f380:	ret
  40f384:	nop
  40f388:	stp	x29, x30, [sp, #-32]!
  40f38c:	mov	x29, sp
  40f390:	stp	x19, x20, [sp, #16]
  40f394:	mov	x19, x0
  40f398:	ldr	x0, [x0, #8]
  40f39c:	ldr	x20, [x0, #176]
  40f3a0:	ldp	x0, x1, [x20, #24]
  40f3a4:	cmp	x1, x0
  40f3a8:	b.eq	40f3d4 <nftw@plt+0xc854>  // b.none
  40f3ac:	add	x1, x0, #0x1
  40f3b0:	str	x1, [x20, #24]
  40f3b4:	mov	w1, #0xa                   	// #10
  40f3b8:	strb	w1, [x0]
  40f3bc:	strb	wzr, [x19, #65]
  40f3c0:	ldr	x0, [x19, #8]
  40f3c4:	ldp	x19, x20, [sp, #16]
  40f3c8:	str	wzr, [x0, #200]
  40f3cc:	ldp	x29, x30, [sp], #32
  40f3d0:	ret
  40f3d4:	mov	x0, x20
  40f3d8:	mov	x1, #0x1                   	// #1
  40f3dc:	bl	449870 <_obstack_newchunk@@Base>
  40f3e0:	ldr	x0, [x20, #24]
  40f3e4:	b	40f3ac <nftw@plt+0xc82c>
  40f3e8:	stp	x29, x30, [sp, #-48]!
  40f3ec:	mov	x29, sp
  40f3f0:	ldr	w2, [x0, #40]
  40f3f4:	stp	x19, x20, [sp, #16]
  40f3f8:	mov	x19, x0
  40f3fc:	cmp	w2, #0x0
  40f400:	str	x21, [sp, #32]
  40f404:	mov	w21, w1
  40f408:	ldr	x1, [x0, #8]
  40f40c:	b.le	40f424 <nftw@plt+0xc8a4>
  40f410:	ldr	w3, [x1, #200]
  40f414:	ldr	w2, [x0, #28]
  40f418:	sub	w2, w2, w3
  40f41c:	cmp	w2, #0x0
  40f420:	b.le	40f460 <nftw@plt+0xc8e0>
  40f424:	ldr	x20, [x1, #176]
  40f428:	ldp	x0, x1, [x20, #24]
  40f42c:	cmp	x1, x0
  40f430:	b.eq	40f480 <nftw@plt+0xc900>  // b.none
  40f434:	add	x1, x0, #0x1
  40f438:	str	x1, [x20, #24]
  40f43c:	strb	w21, [x0]
  40f440:	ldr	x1, [x19, #8]
  40f444:	ldr	w0, [x1, #200]
  40f448:	add	w0, w0, #0x1
  40f44c:	str	w0, [x1, #200]
  40f450:	ldp	x19, x20, [sp, #16]
  40f454:	ldr	x21, [sp, #32]
  40f458:	ldp	x29, x30, [sp], #48
  40f45c:	ret
  40f460:	bl	40f388 <nftw@plt+0xc808>
  40f464:	and	x1, x21, #0xff
  40f468:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  40f46c:	add	x0, x0, #0x248
  40f470:	ldrh	w0, [x0, x1, lsl #1]
  40f474:	tbnz	w0, #6, 40f450 <nftw@plt+0xc8d0>
  40f478:	ldr	x1, [x19, #8]
  40f47c:	b	40f424 <nftw@plt+0xc8a4>
  40f480:	mov	x0, x20
  40f484:	mov	x1, #0x1                   	// #1
  40f488:	bl	449870 <_obstack_newchunk@@Base>
  40f48c:	ldr	x0, [x20, #24]
  40f490:	b	40f434 <nftw@plt+0xc8b4>
  40f494:	nop
  40f498:	stp	x29, x30, [sp, #-48]!
  40f49c:	mov	x29, sp
  40f4a0:	str	x21, [sp, #32]
  40f4a4:	ldr	w21, [x0, #32]
  40f4a8:	cmp	w21, #0x0
  40f4ac:	b.le	40f4dc <nftw@plt+0xc95c>
  40f4b0:	stp	x19, x20, [sp, #16]
  40f4b4:	mov	x20, x0
  40f4b8:	mov	w19, #0x0                   	// #0
  40f4bc:	nop
  40f4c0:	add	w19, w19, #0x1
  40f4c4:	mov	x0, x20
  40f4c8:	mov	w1, #0x20                  	// #32
  40f4cc:	bl	40f3e8 <nftw@plt+0xc868>
  40f4d0:	cmp	w21, w19
  40f4d4:	b.ne	40f4c0 <nftw@plt+0xc940>  // b.any
  40f4d8:	ldp	x19, x20, [sp, #16]
  40f4dc:	ldr	x21, [sp, #32]
  40f4e0:	ldp	x29, x30, [sp], #48
  40f4e4:	ret
  40f4e8:	stp	x29, x30, [sp, #-64]!
  40f4ec:	mov	x29, sp
  40f4f0:	stp	x19, x20, [sp, #16]
  40f4f4:	ldr	x19, [x0, #16]
  40f4f8:	cbz	x19, 40f5a8 <nftw@plt+0xca28>
  40f4fc:	mov	x20, x0
  40f500:	ldr	w0, [x0, #36]
  40f504:	cbz	w0, 40f5b4 <nftw@plt+0xca34>
  40f508:	cmp	w0, #0x2
  40f50c:	b.ne	40f5a8 <nftw@plt+0xca28>  // b.any
  40f510:	stp	x21, x22, [sp, #32]
  40f514:	stp	x23, x24, [sp, #48]
  40f518:	mov	x0, x19
  40f51c:	bl	4024f0 <strlen@plt>
  40f520:	mov	x21, x0
  40f524:	ldr	x22, [x20, #8]
  40f528:	sxtw	x24, w0
  40f52c:	ldr	x23, [x22, #176]
  40f530:	ldp	x0, x1, [x23, #24]
  40f534:	sub	x1, x1, x0
  40f538:	cmp	x1, w21, sxtw
  40f53c:	b.cc	40f608 <nftw@plt+0xca88>  // b.lo, b.ul, b.last
  40f540:	mov	x2, x24
  40f544:	mov	x1, x19
  40f548:	bl	402490 <memcpy@plt>
  40f54c:	ldr	x0, [x23, #24]
  40f550:	cmp	w21, #0x0
  40f554:	add	x0, x0, x24
  40f558:	str	x0, [x23, #24]
  40f55c:	b.le	40f598 <nftw@plt+0xca18>
  40f560:	sub	w21, w21, #0x1
  40f564:	add	x0, x19, #0x1
  40f568:	mov	x1, x19
  40f56c:	add	x21, x21, x0
  40f570:	ldrb	w2, [x1]
  40f574:	mov	w0, #0x0                   	// #0
  40f578:	add	x1, x1, #0x1
  40f57c:	cmp	w2, #0xa
  40f580:	b.eq	40f58c <nftw@plt+0xca0c>  // b.none
  40f584:	ldr	w0, [x22, #200]
  40f588:	add	w0, w0, #0x1
  40f58c:	str	w0, [x22, #200]
  40f590:	cmp	x21, x1
  40f594:	b.ne	40f570 <nftw@plt+0xc9f0>  // b.any
  40f598:	ldp	x21, x22, [sp, #32]
  40f59c:	mov	w0, #0x1                   	// #1
  40f5a0:	ldp	x23, x24, [sp, #48]
  40f5a4:	strb	w0, [x20, #64]
  40f5a8:	ldp	x19, x20, [sp, #16]
  40f5ac:	ldp	x29, x30, [sp], #64
  40f5b0:	ret
  40f5b4:	ldrb	w0, [x20, #64]
  40f5b8:	stp	x21, x22, [sp, #32]
  40f5bc:	ldr	w21, [x20, #32]
  40f5c0:	cbz	w0, 40f5f8 <nftw@plt+0xca78>
  40f5c4:	cmp	w21, #0x0
  40f5c8:	b.le	40f5e8 <nftw@plt+0xca68>
  40f5cc:	mov	w19, #0x0                   	// #0
  40f5d0:	add	w19, w19, #0x1
  40f5d4:	mov	x0, x20
  40f5d8:	mov	w1, #0x20                  	// #32
  40f5dc:	bl	40f3e8 <nftw@plt+0xc868>
  40f5e0:	cmp	w19, w21
  40f5e4:	b.ne	40f5d0 <nftw@plt+0xca50>  // b.any
  40f5e8:	ldp	x19, x20, [sp, #16]
  40f5ec:	ldp	x21, x22, [sp, #32]
  40f5f0:	ldp	x29, x30, [sp], #64
  40f5f4:	ret
  40f5f8:	stp	x23, x24, [sp, #48]
  40f5fc:	add	w21, w21, #0x3
  40f600:	str	w21, [x20, #32]
  40f604:	b	40f518 <nftw@plt+0xc998>
  40f608:	mov	x0, x23
  40f60c:	mov	x1, x24
  40f610:	bl	449870 <_obstack_newchunk@@Base>
  40f614:	ldr	x0, [x23, #24]
  40f618:	b	40f540 <nftw@plt+0xc9c0>
  40f61c:	nop
  40f620:	stp	x29, x30, [sp, #-64]!
  40f624:	mov	x29, sp
  40f628:	stp	x21, x22, [sp, #32]
  40f62c:	ldr	x21, [x0, #8]
  40f630:	stp	x19, x20, [sp, #16]
  40f634:	mov	x19, x1
  40f638:	mov	x20, x2
  40f63c:	ldr	w1, [x21, #200]
  40f640:	cbz	w1, 40f6dc <nftw@plt+0xcb5c>
  40f644:	str	x23, [sp, #48]
  40f648:	ldr	x22, [x21, #176]
  40f64c:	sub	x20, x20, x19
  40f650:	sxtw	x23, w20
  40f654:	ldp	x0, x1, [x22, #24]
  40f658:	sub	x1, x1, x0
  40f65c:	cmp	x1, w20, sxtw
  40f660:	b.cs	40f674 <nftw@plt+0xcaf4>  // b.hs, b.nlast
  40f664:	mov	x0, x22
  40f668:	mov	x1, x23
  40f66c:	bl	449870 <_obstack_newchunk@@Base>
  40f670:	ldr	x0, [x22, #24]
  40f674:	mov	x2, x23
  40f678:	mov	x1, x19
  40f67c:	bl	402490 <memcpy@plt>
  40f680:	ldr	x0, [x22, #24]
  40f684:	cmp	w20, #0x0
  40f688:	add	x0, x0, x23
  40f68c:	str	x0, [x22, #24]
  40f690:	b.le	40f6c8 <nftw@plt+0xcb48>
  40f694:	sub	w20, w20, #0x1
  40f698:	add	x0, x19, #0x1
  40f69c:	add	x20, x0, x20
  40f6a0:	ldrb	w1, [x19]
  40f6a4:	mov	w0, #0x0                   	// #0
  40f6a8:	add	x19, x19, #0x1
  40f6ac:	cmp	w1, #0xa
  40f6b0:	b.eq	40f6bc <nftw@plt+0xcb3c>  // b.none
  40f6b4:	ldr	w0, [x21, #200]
  40f6b8:	add	w0, w0, #0x1
  40f6bc:	str	w0, [x21, #200]
  40f6c0:	cmp	x20, x19
  40f6c4:	b.ne	40f6a0 <nftw@plt+0xcb20>  // b.any
  40f6c8:	ldr	x23, [sp, #48]
  40f6cc:	ldp	x19, x20, [sp, #16]
  40f6d0:	ldp	x21, x22, [sp, #32]
  40f6d4:	ldp	x29, x30, [sp], #64
  40f6d8:	ret
  40f6dc:	mov	x22, x0
  40f6e0:	bl	40f4e8 <nftw@plt+0xc968>
  40f6e4:	ldr	w0, [x22, #40]
  40f6e8:	cmp	w0, #0x0
  40f6ec:	b.le	40f714 <nftw@plt+0xcb94>
  40f6f0:	cmp	x19, x20
  40f6f4:	b.ne	40f708 <nftw@plt+0xcb88>  // b.any
  40f6f8:	b	40f6cc <nftw@plt+0xcb4c>
  40f6fc:	add	x19, x19, #0x1
  40f700:	cmp	x20, x19
  40f704:	b.eq	40f6cc <nftw@plt+0xcb4c>  // b.none
  40f708:	ldrb	w0, [x19]
  40f70c:	cmp	w0, #0x20
  40f710:	b.eq	40f6fc <nftw@plt+0xcb7c>  // b.none
  40f714:	ldr	x21, [x22, #8]
  40f718:	str	x23, [sp, #48]
  40f71c:	b	40f648 <nftw@plt+0xcac8>
  40f720:	stp	x29, x30, [sp, #-64]!
  40f724:	mov	x29, sp
  40f728:	stp	x23, x24, [sp, #48]
  40f72c:	mov	x23, x0
  40f730:	ldr	w24, [x0, #40]
  40f734:	stp	x19, x20, [sp, #16]
  40f738:	mov	x20, x2
  40f73c:	stp	x21, x22, [sp, #32]
  40f740:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x205a0>
  40f744:	mov	x22, x1
  40f748:	add	x21, x21, #0x248
  40f74c:	cmp	x22, x20
  40f750:	b.eq	40f7e0 <nftw@plt+0xcc60>  // b.none
  40f754:	mov	x19, x22
  40f758:	b	40f768 <nftw@plt+0xcbe8>
  40f75c:	add	x19, x19, #0x1
  40f760:	cmp	x20, x19
  40f764:	b.eq	40f808 <nftw@plt+0xcc88>  // b.none
  40f768:	ldrb	w3, [x19]
  40f76c:	cmp	w3, #0xa
  40f770:	ldrh	w3, [x21, w3, sxtw #1]
  40f774:	and	w3, w3, #0x1
  40f778:	csinc	w3, w3, wzr, ne  // ne = any
  40f77c:	cbz	w3, 40f75c <nftw@plt+0xcbdc>
  40f780:	cmp	w24, #0x0
  40f784:	b.le	40f7a4 <nftw@plt+0xcc24>
  40f788:	ldr	x2, [x23, #8]
  40f78c:	sub	x0, x19, x22
  40f790:	ldr	w1, [x23, #28]
  40f794:	ldr	w2, [x2, #200]
  40f798:	sub	w1, w1, w2
  40f79c:	cmp	x0, w1, sxtw
  40f7a0:	b.ge	40f868 <nftw@plt+0xcce8>  // b.tcont
  40f7a4:	mov	x1, x22
  40f7a8:	mov	x2, x19
  40f7ac:	mov	x0, x23
  40f7b0:	bl	40f620 <nftw@plt+0xcaa0>
  40f7b4:	mov	x22, x20
  40f7b8:	cmp	x20, x19
  40f7bc:	b.eq	40f74c <nftw@plt+0xcbcc>  // b.none
  40f7c0:	ldrb	w0, [x19]
  40f7c4:	ldrh	w1, [x21, w0, sxtw #1]
  40f7c8:	tbnz	w1, #0, 40f844 <nftw@plt+0xccc4>
  40f7cc:	cmp	w0, #0xa
  40f7d0:	b.eq	40f7f4 <nftw@plt+0xcc74>  // b.none
  40f7d4:	mov	x22, x19
  40f7d8:	cmp	x22, x20
  40f7dc:	b.ne	40f754 <nftw@plt+0xcbd4>  // b.any
  40f7e0:	ldp	x19, x20, [sp, #16]
  40f7e4:	ldp	x21, x22, [sp, #32]
  40f7e8:	ldp	x23, x24, [sp, #48]
  40f7ec:	ldp	x29, x30, [sp], #64
  40f7f0:	ret
  40f7f4:	add	x19, x19, #0x1
  40f7f8:	mov	x0, x23
  40f7fc:	mov	x22, x19
  40f800:	bl	40f388 <nftw@plt+0xc808>
  40f804:	b	40f7d8 <nftw@plt+0xcc58>
  40f808:	cmp	w24, #0x0
  40f80c:	b.le	40f82c <nftw@plt+0xccac>
  40f810:	ldr	x2, [x23, #8]
  40f814:	sub	x0, x20, x22
  40f818:	ldr	w1, [x23, #28]
  40f81c:	ldr	w2, [x2, #200]
  40f820:	sub	w1, w1, w2
  40f824:	cmp	x0, w1, sxtw
  40f828:	b.ge	40f868 <nftw@plt+0xcce8>  // b.tcont
  40f82c:	mov	x1, x22
  40f830:	mov	x2, x20
  40f834:	mov	x0, x23
  40f838:	mov	x22, x20
  40f83c:	bl	40f620 <nftw@plt+0xcaa0>
  40f840:	b	40f74c <nftw@plt+0xcbcc>
  40f844:	mov	w1, #0x20                  	// #32
  40f848:	mov	x0, x23
  40f84c:	bl	40f3e8 <nftw@plt+0xc868>
  40f850:	add	x1, x19, #0x1
  40f854:	cmp	x20, x1
  40f858:	b.eq	40f874 <nftw@plt+0xccf4>  // b.none
  40f85c:	ldrb	w0, [x19, #1]
  40f860:	mov	x19, x1
  40f864:	b	40f7cc <nftw@plt+0xcc4c>
  40f868:	mov	x0, x23
  40f86c:	bl	40f388 <nftw@plt+0xc808>
  40f870:	b	40f7a4 <nftw@plt+0xcc24>
  40f874:	mov	x19, x20
  40f878:	mov	x22, x19
  40f87c:	b	40f7d8 <nftw@plt+0xcc58>
  40f880:	stp	x29, x30, [sp, #-80]!
  40f884:	cmn	x2, #0x1
  40f888:	mov	x29, sp
  40f88c:	stp	x19, x20, [sp, #16]
  40f890:	mov	x20, x0
  40f894:	mov	x19, x1
  40f898:	stp	x21, x22, [sp, #32]
  40f89c:	b.eq	40f988 <nftw@plt+0xce08>  // b.none
  40f8a0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x205a0>
  40f8a4:	add	x21, x19, x2
  40f8a8:	add	x22, x22, #0x248
  40f8ac:	mov	x1, x19
  40f8b0:	stp	x23, x24, [sp, #48]
  40f8b4:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40f8b8:	add	x23, sp, #0x44
  40f8bc:	add	x24, x24, #0x568
  40f8c0:	ldrb	w2, [x19], #1
  40f8c4:	sub	x3, x19, #0x1
  40f8c8:	ldrh	w0, [x22, w2, sxtw #1]
  40f8cc:	tbnz	w0, #4, 40f904 <nftw@plt+0xcd84>
  40f8d0:	cmp	x1, x3
  40f8d4:	b.cc	40f948 <nftw@plt+0xcdc8>  // b.lo, b.ul, b.last
  40f8d8:	mov	x1, x24
  40f8dc:	add	x0, sp, #0x40
  40f8e0:	bl	4025b0 <sprintf@plt>
  40f8e4:	ldr	w0, [x20, #40]
  40f8e8:	mov	x2, x23
  40f8ec:	add	x1, sp, #0x40
  40f8f0:	cmp	w0, #0x0
  40f8f4:	b.le	40f938 <nftw@plt+0xcdb8>
  40f8f8:	mov	x0, x20
  40f8fc:	bl	40f720 <nftw@plt+0xcba0>
  40f900:	mov	x1, x19
  40f904:	cmp	x21, x19
  40f908:	b.ne	40f8c0 <nftw@plt+0xcd40>  // b.any
  40f90c:	ldp	x23, x24, [sp, #48]
  40f910:	mov	x2, x21
  40f914:	ldr	w0, [x20, #40]
  40f918:	cmp	w0, #0x0
  40f91c:	mov	x0, x20
  40f920:	b.le	40f974 <nftw@plt+0xcdf4>
  40f924:	bl	40f720 <nftw@plt+0xcba0>
  40f928:	ldp	x19, x20, [sp, #16]
  40f92c:	ldp	x21, x22, [sp, #32]
  40f930:	ldp	x29, x30, [sp], #80
  40f934:	ret
  40f938:	add	x1, sp, #0x40
  40f93c:	mov	x0, x20
  40f940:	bl	40f620 <nftw@plt+0xcaa0>
  40f944:	b	40f900 <nftw@plt+0xcd80>
  40f948:	ldr	w3, [x20, #40]
  40f94c:	mov	x0, x20
  40f950:	sub	x2, x19, #0x2
  40f954:	cmp	w3, #0x0
  40f958:	b.le	40f968 <nftw@plt+0xcde8>
  40f95c:	bl	40f720 <nftw@plt+0xcba0>
  40f960:	ldurb	w2, [x19, #-1]
  40f964:	b	40f8d8 <nftw@plt+0xcd58>
  40f968:	bl	40f620 <nftw@plt+0xcaa0>
  40f96c:	ldurb	w2, [x19, #-1]
  40f970:	b	40f8d8 <nftw@plt+0xcd58>
  40f974:	bl	40f620 <nftw@plt+0xcaa0>
  40f978:	ldp	x19, x20, [sp, #16]
  40f97c:	ldp	x21, x22, [sp, #32]
  40f980:	ldp	x29, x30, [sp], #80
  40f984:	ret
  40f988:	mov	x0, x1
  40f98c:	bl	4024f0 <strlen@plt>
  40f990:	mov	x2, x0
  40f994:	cbnz	x0, 40f8a0 <nftw@plt+0xcd20>
  40f998:	mov	x21, x19
  40f99c:	mov	x1, x19
  40f9a0:	b	40f910 <nftw@plt+0xcd90>
  40f9a4:	nop
  40f9a8:	stp	x29, x30, [sp, #-32]!
  40f9ac:	mov	x29, sp
  40f9b0:	stp	x19, x20, [sp, #16]
  40f9b4:	mov	x20, x0
  40f9b8:	mov	x19, x1
  40f9bc:	mov	x0, x1
  40f9c0:	bl	4024f0 <strlen@plt>
  40f9c4:	ldr	w1, [x20, #40]
  40f9c8:	add	x2, x19, x0
  40f9cc:	mov	x0, x20
  40f9d0:	cmp	w1, #0x0
  40f9d4:	mov	x1, x19
  40f9d8:	b.le	40f9e8 <nftw@plt+0xce68>
  40f9dc:	ldp	x19, x20, [sp, #16]
  40f9e0:	ldp	x29, x30, [sp], #32
  40f9e4:	b	40f720 <nftw@plt+0xcba0>
  40f9e8:	ldp	x19, x20, [sp, #16]
  40f9ec:	ldp	x29, x30, [sp], #32
  40f9f0:	b	40f620 <nftw@plt+0xcaa0>
  40f9f4:	nop
  40f9f8:	stp	x29, x30, [sp, #-64]!
  40f9fc:	mov	x29, sp
  40fa00:	str	x23, [sp, #48]
  40fa04:	ldr	x23, [x0, #8]
  40fa08:	stp	x19, x20, [sp, #16]
  40fa0c:	mov	x20, x0
  40fa10:	stp	x21, x22, [sp, #32]
  40fa14:	ldp	x0, x22, [x23, #176]
  40fa18:	cmp	x0, x23
  40fa1c:	b.ne	40fab8 <nftw@plt+0xcf38>  // b.any
  40fa20:	ldr	w0, [x0, #200]
  40fa24:	cbnz	w0, 40faa0 <nftw@plt+0xcf20>
  40fa28:	ldr	x1, [x22, #8]
  40fa2c:	cbz	x1, 40fa4c <nftw@plt+0xcecc>
  40fa30:	add	x21, x22, #0x8
  40fa34:	mov	w19, #0x0                   	// #0
  40fa38:	add	w19, w19, #0x1
  40fa3c:	mov	x0, x20
  40fa40:	bl	40f9a8 <nftw@plt+0xce28>
  40fa44:	ldr	x1, [x21, w19, uxtw #3]
  40fa48:	cbnz	x1, 40fa38 <nftw@plt+0xceb8>
  40fa4c:	add	x0, x23, #0x58
  40fa50:	ldr	x1, [x22]
  40fa54:	str	x1, [x23, #184]
  40fa58:	ldr	x1, [x0, #8]
  40fa5c:	cmp	x1, x22
  40fa60:	b.cs	40fa88 <nftw@plt+0xcf08>  // b.hs, b.nlast
  40fa64:	ldr	x1, [x0, #32]
  40fa68:	cmp	x1, x22
  40fa6c:	b.ls	40fa88 <nftw@plt+0xcf08>  // b.plast
  40fa70:	ldp	x19, x20, [sp, #16]
  40fa74:	ldr	x23, [sp, #48]
  40fa78:	stp	x22, x22, [x0, #16]
  40fa7c:	ldp	x21, x22, [sp, #32]
  40fa80:	ldp	x29, x30, [sp], #64
  40fa84:	ret
  40fa88:	mov	x1, x22
  40fa8c:	ldp	x19, x20, [sp, #16]
  40fa90:	ldp	x21, x22, [sp, #32]
  40fa94:	ldr	x23, [sp, #48]
  40fa98:	ldp	x29, x30, [sp], #64
  40fa9c:	b	4499d0 <_obstack_free@@Base>
  40faa0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40faa4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40faa8:	add	x2, x2, #0x570
  40faac:	add	x0, x0, #0x518
  40fab0:	mov	w1, #0x596                 	// #1430
  40fab4:	bl	402bf0 <nftw@plt+0x70>
  40fab8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40fabc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40fac0:	add	x2, x2, #0x570
  40fac4:	add	x0, x0, #0x518
  40fac8:	mov	w1, #0x595                 	// #1429
  40facc:	bl	402bf0 <nftw@plt+0x70>
  40fad0:	ldr	w1, [x0, #24]
  40fad4:	cbnz	w1, 40fadc <nftw@plt+0xcf5c>
  40fad8:	ret
  40fadc:	stp	x29, x30, [sp, #-32]!
  40fae0:	mov	w1, #0x20                  	// #32
  40fae4:	mov	x29, sp
  40fae8:	str	x19, [sp, #16]
  40faec:	mov	x19, x0
  40faf0:	bl	40f3e8 <nftw@plt+0xc868>
  40faf4:	str	wzr, [x19, #24]
  40faf8:	ldr	x19, [sp, #16]
  40fafc:	ldp	x29, x30, [sp], #32
  40fb00:	ret
  40fb04:	nop
  40fb08:	stp	x29, x30, [sp, #-32]!
  40fb0c:	mov	x29, sp
  40fb10:	str	x19, [sp, #16]
  40fb14:	mov	x19, x0
  40fb18:	bl	40f388 <nftw@plt+0xc808>
  40fb1c:	ldr	x0, [x19, #8]
  40fb20:	strb	wzr, [x19, #64]
  40fb24:	ldrb	w0, [x0, #332]
  40fb28:	str	wzr, [x19, #32]
  40fb2c:	cbz	w0, 40fb44 <nftw@plt+0xcfc4>
  40fb30:	mov	x0, x19
  40fb34:	bl	40efb0 <nftw@plt+0xc430>
  40fb38:	ldr	x0, [x19, #8]
  40fb3c:	ldr	x0, [x0, #192]
  40fb40:	bl	402980 <fflush@plt>
  40fb44:	strb	wzr, [x19, #65]
  40fb48:	ldr	x19, [sp, #16]
  40fb4c:	ldp	x29, x30, [sp], #32
  40fb50:	ret
  40fb54:	nop
  40fb58:	stp	x29, x30, [sp, #-48]!
  40fb5c:	mov	x29, sp
  40fb60:	ldr	w2, [x0, #32]
  40fb64:	stp	x19, x20, [sp, #16]
  40fb68:	mov	x20, x0
  40fb6c:	add	w2, w2, w1
  40fb70:	str	x21, [sp, #32]
  40fb74:	str	w2, [x0, #32]
  40fb78:	bl	40f388 <nftw@plt+0xc808>
  40fb7c:	ldr	w21, [x20, #32]
  40fb80:	cmp	w21, #0x0
  40fb84:	b.le	40fba8 <nftw@plt+0xd028>
  40fb88:	mov	w19, #0x0                   	// #0
  40fb8c:	nop
  40fb90:	add	w19, w19, #0x1
  40fb94:	mov	x0, x20
  40fb98:	mov	w1, #0x20                  	// #32
  40fb9c:	bl	40f3e8 <nftw@plt+0xc868>
  40fba0:	cmp	w21, w19
  40fba4:	b.ne	40fb90 <nftw@plt+0xd010>  // b.any
  40fba8:	strb	wzr, [x20, #65]
  40fbac:	ldp	x19, x20, [sp, #16]
  40fbb0:	ldr	x21, [sp, #32]
  40fbb4:	ldp	x29, x30, [sp], #48
  40fbb8:	ret
  40fbbc:	nop
  40fbc0:	stp	x29, x30, [sp, #-32]!
  40fbc4:	and	w1, w1, #0xff
  40fbc8:	mov	x29, sp
  40fbcc:	str	x19, [sp, #16]
  40fbd0:	mov	x19, x0
  40fbd4:	bl	40f3e8 <nftw@plt+0xc868>
  40fbd8:	mov	x0, x19
  40fbdc:	mov	w1, #0x20                  	// #32
  40fbe0:	ldr	x19, [sp, #16]
  40fbe4:	ldp	x29, x30, [sp], #32
  40fbe8:	b	40f3e8 <nftw@plt+0xc868>
  40fbec:	nop
  40fbf0:	stp	x29, x30, [sp, #-32]!
  40fbf4:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40fbf8:	mov	x29, sp
  40fbfc:	stp	x19, x20, [sp, #16]
  40fc00:	and	w20, w1, #0xff
  40fc04:	mov	x19, x0
  40fc08:	ldr	x1, [x2, #1304]
  40fc0c:	bl	40f9a8 <nftw@plt+0xce28>
  40fc10:	mov	w0, w20
  40fc14:	mov	x2, #0x5                   	// #5
  40fc18:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40fc1c:	add	x1, x1, #0x1d8
  40fc20:	bl	40a030 <nftw@plt+0x74b0>
  40fc24:	mov	x1, x0
  40fc28:	mov	x0, x19
  40fc2c:	ldp	x19, x20, [sp, #16]
  40fc30:	ldp	x29, x30, [sp], #32
  40fc34:	b	40f9a8 <nftw@plt+0xce28>
  40fc38:	stp	x29, x30, [sp, #-32]!
  40fc3c:	mov	x29, sp
  40fc40:	str	x19, [sp, #16]
  40fc44:	mov	x19, x0
  40fc48:	mov	w0, w1
  40fc4c:	bl	40a0c0 <nftw@plt+0x7540>
  40fc50:	mov	x1, x0
  40fc54:	mov	x0, x19
  40fc58:	bl	40f9a8 <nftw@plt+0xce28>
  40fc5c:	mov	x0, x19
  40fc60:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40fc64:	ldr	x19, [sp, #16]
  40fc68:	ldp	x29, x30, [sp], #32
  40fc6c:	ldr	x1, [x1, #1312]
  40fc70:	b	40f9a8 <nftw@plt+0xce28>
  40fc74:	nop
  40fc78:	sub	sp, sp, #0x1b0
  40fc7c:	stp	x29, x30, [sp, #16]
  40fc80:	add	x29, sp, #0x10
  40fc84:	stp	x19, x20, [sp, #32]
  40fc88:	mov	x19, x0
  40fc8c:	ldr	x0, [x0, #8]
  40fc90:	stp	x25, x26, [sp, #80]
  40fc94:	add	x25, x0, #0x58
  40fc98:	stp	x21, x22, [sp, #48]
  40fc9c:	str	x0, [sp, #128]
  40fca0:	ldr	x0, [x25, #24]
  40fca4:	stp	x23, x24, [sp, #64]
  40fca8:	mov	x23, x1
  40fcac:	ldr	x22, [x25, #32]
  40fcb0:	stp	x27, x28, [sp, #96]
  40fcb4:	sub	x1, x22, x0
  40fcb8:	cmp	x1, #0x1e7
  40fcbc:	b.ls	410c78 <nftw@plt+0xe0f8>  // b.plast
  40fcc0:	ldr	x1, [x25, #16]
  40fcc4:	add	x0, x0, #0x1e8
  40fcc8:	cmp	x0, x1
  40fccc:	b.eq	410c98 <nftw@plt+0xe118>  // b.none
  40fcd0:	ldr	x20, [x25, #48]
  40fcd4:	ldr	x2, [x25, #8]
  40fcd8:	add	x0, x0, x20
  40fcdc:	bic	x20, x0, x20
  40fce0:	str	x20, [x25, #24]
  40fce4:	sub	x0, x20, x2
  40fce8:	sub	x2, x22, x2
  40fcec:	cmp	x0, x2
  40fcf0:	b.ls	4109f4 <nftw@plt+0xde74>  // b.plast
  40fcf4:	ldr	x2, [sp, #128]
  40fcf8:	add	x0, x1, #0x8
  40fcfc:	stp	x22, x22, [x25, #16]
  40fd00:	add	x21, sp, #0xc0
  40fd04:	str	x0, [sp, #112]
  40fd08:	ldr	x0, [x2, #184]
  40fd0c:	str	x0, [x1]
  40fd10:	str	x1, [x2, #184]
  40fd14:	mov	x0, x21
  40fd18:	mov	x2, #0xf0                  	// #240
  40fd1c:	mov	w1, #0x0                   	// #0
  40fd20:	bl	4026f0 <memset@plt>
  40fd24:	ldr	x28, [x23]
  40fd28:	ldrb	w0, [x28]
  40fd2c:	cbz	w0, 410d88 <nftw@plt+0xe208>
  40fd30:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  40fd34:	add	x1, x1, #0x1d8
  40fd38:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x205a0>
  40fd3c:	stp	wzr, wzr, [sp, #160]
  40fd40:	str	x1, [sp, #168]
  40fd44:	add	x1, x26, #0x248
  40fd48:	str	x1, [sp, #120]
  40fd4c:	cmp	w0, #0x25
  40fd50:	add	x26, x28, #0x1
  40fd54:	mov	w24, #0x0                   	// #0
  40fd58:	mov	w22, #0x0                   	// #0
  40fd5c:	b.eq	40fd94 <nftw@plt+0xd214>  // b.none
  40fd60:	ldp	x0, x1, [x25, #24]
  40fd64:	cmp	x1, x0
  40fd68:	b.eq	40ff78 <nftw@plt+0xd3f8>  // b.none
  40fd6c:	add	x1, x0, #0x1
  40fd70:	str	x1, [x25, #24]
  40fd74:	ldrb	w1, [x28]
  40fd78:	strb	w1, [x0]
  40fd7c:	ldrb	w0, [x28, #1]
  40fd80:	cbz	w0, 40fe48 <nftw@plt+0xd2c8>
  40fd84:	mov	x28, x26
  40fd88:	cmp	w0, #0x25
  40fd8c:	add	x26, x28, #0x1
  40fd90:	b.ne	40fd60 <nftw@plt+0xd1e0>  // b.any
  40fd94:	ldrb	w0, [x28, #1]
  40fd98:	cmp	w0, #0x3e
  40fd9c:	b.eq	4103ac <nftw@plt+0xd82c>  // b.none
  40fda0:	b.hi	40ff8c <nftw@plt+0xd40c>  // b.pmore
  40fda4:	cmp	w0, #0x27
  40fda8:	b.eq	4103e8 <nftw@plt+0xd868>  // b.none
  40fdac:	b.ls	40ffd4 <nftw@plt+0xd454>  // b.plast
  40fdb0:	cmp	w0, #0x3c
  40fdb4:	b.ne	4104b0 <nftw@plt+0xd930>  // b.any
  40fdb8:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x425a0>
  40fdbc:	ldr	x27, [x20, #1304]
  40fdc0:	mov	x0, x27
  40fdc4:	bl	4024f0 <strlen@plt>
  40fdc8:	mov	x26, x0
  40fdcc:	ldp	x0, x2, [x25, #24]
  40fdd0:	sub	x2, x2, x0
  40fdd4:	cmp	x26, x2
  40fdd8:	b.hi	4109a8 <nftw@plt+0xde28>  // b.pmore
  40fddc:	mov	x1, x27
  40fde0:	mov	x2, x26
  40fde4:	bl	402490 <memcpy@plt>
  40fde8:	ldr	x4, [x25, #24]
  40fdec:	mov	x2, #0x5                   	// #5
  40fdf0:	ldrb	w0, [x19, #67]
  40fdf4:	ldr	x1, [sp, #168]
  40fdf8:	add	x3, x4, x26
  40fdfc:	str	x3, [x25, #24]
  40fe00:	bl	40a030 <nftw@plt+0x74b0>
  40fe04:	mov	x26, x0
  40fe08:	bl	4024f0 <strlen@plt>
  40fe0c:	mov	x20, x0
  40fe10:	ldp	x0, x1, [x25, #24]
  40fe14:	sub	x1, x1, x0
  40fe18:	cmp	x20, x1
  40fe1c:	b.hi	40ffc0 <nftw@plt+0xd440>  // b.pmore
  40fe20:	mov	x1, x26
  40fe24:	mov	x2, x20
  40fe28:	bl	402490 <memcpy@plt>
  40fe2c:	add	x26, x28, #0x2
  40fe30:	ldr	x0, [x25, #24]
  40fe34:	add	x0, x0, x20
  40fe38:	str	x0, [x25, #24]
  40fe3c:	ldrb	w0, [x26]
  40fe40:	cbnz	w0, 40fd84 <nftw@plt+0xd204>
  40fe44:	nop
  40fe48:	ldp	x0, x1, [x25, #24]
  40fe4c:	cmp	x1, x0
  40fe50:	b.eq	410d8c <nftw@plt+0xe20c>  // b.none
  40fe54:	add	x1, x0, #0x1
  40fe58:	str	x1, [x25, #24]
  40fe5c:	strb	wzr, [x0]
  40fe60:	cmp	w22, #0x3b
  40fe64:	b.hi	4111a0 <nftw@plt+0xe620>  // b.pmore
  40fe68:	ldr	x0, [sp, #112]
  40fe6c:	add	w3, w22, #0x1
  40fe70:	ldr	x28, [sp, #192]
  40fe74:	lsl	x3, x3, #3
  40fe78:	add	x22, x0, w22, uxtw #3
  40fe7c:	ldp	x4, x2, [x25, #16]
  40fe80:	cmp	x2, x4
  40fe84:	b.eq	410cbc <nftw@plt+0xe13c>  // b.none
  40fe88:	ldr	x0, [x25, #48]
  40fe8c:	ldr	x1, [x25, #8]
  40fe90:	add	x2, x2, x0
  40fe94:	ldr	x5, [x25, #32]
  40fe98:	bic	x0, x2, x0
  40fe9c:	str	x0, [x25, #24]
  40fea0:	sub	x2, x0, x1
  40fea4:	sub	x1, x5, x1
  40fea8:	cmp	x2, x1
  40feac:	b.ls	40feb8 <nftw@plt+0xd338>  // b.plast
  40feb0:	mov	x0, x5
  40feb4:	str	x5, [x25, #24]
  40feb8:	ldr	x1, [sp, #112]
  40febc:	str	x0, [x25, #16]
  40fec0:	str	x4, [x22]
  40fec4:	mov	x0, #0x1                   	// #1
  40fec8:	mov	w20, #0x0                   	// #0
  40fecc:	mov	w24, w0
  40fed0:	str	xzr, [x1, x3]
  40fed4:	ldr	x1, [sp, #128]
  40fed8:	str	x25, [x1, #176]
  40fedc:	ldur	x1, [x19, #36]
  40fee0:	stur	x0, [x19, #36]
  40fee4:	str	x1, [sp, #136]
  40fee8:	cbz	x28, 410358 <nftw@plt+0xd7d8>
  40feec:	nop
  40fef0:	ldr	x22, [x28]
  40fef4:	strb	wzr, [sp, #183]
  40fef8:	mov	w6, #0x0                   	// #0
  40fefc:	mov	w5, #0x0                   	// #0
  40ff00:	mov	w27, #0x0                   	// #0
  40ff04:	mov	w26, #0x0                   	// #0
  40ff08:	ldrb	w0, [x22]
  40ff0c:	cmp	w0, #0x6c
  40ff10:	b.eq	40ff44 <nftw@plt+0xd3c4>  // b.none
  40ff14:	nop
  40ff18:	b.hi	40ff58 <nftw@plt+0xd3d8>  // b.pmore
  40ff1c:	cmp	w0, #0x23
  40ff20:	b.eq	4100f8 <nftw@plt+0xd578>  // b.none
  40ff24:	cmp	w0, #0x2b
  40ff28:	b.ne	410004 <nftw@plt+0xd484>  // b.any
  40ff2c:	cbnz	w5, 4111e8 <nftw@plt+0xe668>
  40ff30:	add	x22, x22, #0x1
  40ff34:	mov	w5, #0x1                   	// #1
  40ff38:	ldrb	w0, [x22]
  40ff3c:	cmp	w0, #0x6c
  40ff40:	b.ne	40ff18 <nftw@plt+0xd398>  // b.any
  40ff44:	cmp	w26, #0x1
  40ff48:	b.gt	411230 <nftw@plt+0xe6b0>
  40ff4c:	add	w26, w26, #0x1
  40ff50:	add	x22, x22, #0x1
  40ff54:	b	40ff38 <nftw@plt+0xd3b8>
  40ff58:	cmp	w0, #0x71
  40ff5c:	b.eq	410208 <nftw@plt+0xd688>  // b.none
  40ff60:	cmp	w0, #0x77
  40ff64:	b.ne	410004 <nftw@plt+0xd484>  // b.any
  40ff68:	cbnz	w27, 4111d0 <nftw@plt+0xe650>
  40ff6c:	add	x22, x22, #0x1
  40ff70:	mov	w27, #0x1                   	// #1
  40ff74:	b	40ff38 <nftw@plt+0xd3b8>
  40ff78:	mov	x0, x25
  40ff7c:	mov	x1, #0x1                   	// #1
  40ff80:	bl	449870 <_obstack_newchunk@@Base>
  40ff84:	ldr	x0, [x25, #24]
  40ff88:	b	40fd6c <nftw@plt+0xd1ec>
  40ff8c:	cmp	w0, #0x52
  40ff90:	b.eq	4104a4 <nftw@plt+0xd924>  // b.none
  40ff94:	cmp	w0, #0x6d
  40ff98:	b.ne	4104b0 <nftw@plt+0xd930>  // b.any
  40ff9c:	ldr	w0, [x23, #16]
  40ffa0:	bl	449cf8 <_obstack_memory_used@@Base+0x298>
  40ffa4:	mov	x26, x0
  40ffa8:	bl	4024f0 <strlen@plt>
  40ffac:	mov	x20, x0
  40ffb0:	ldp	x0, x1, [x25, #24]
  40ffb4:	sub	x1, x1, x0
  40ffb8:	cmp	x20, x1
  40ffbc:	b.ls	40fe20 <nftw@plt+0xd2a0>  // b.plast
  40ffc0:	mov	x0, x25
  40ffc4:	mov	x1, x20
  40ffc8:	bl	449870 <_obstack_newchunk@@Base>
  40ffcc:	ldr	x0, [x25, #24]
  40ffd0:	b	40fe20 <nftw@plt+0xd2a0>
  40ffd4:	cbz	w0, 4111b8 <nftw@plt+0xe638>
  40ffd8:	cmp	w0, #0x25
  40ffdc:	b.ne	4104b0 <nftw@plt+0xd930>  // b.any
  40ffe0:	ldp	x0, x1, [x25, #24]
  40ffe4:	cmp	x1, x0
  40ffe8:	b.eq	410ccc <nftw@plt+0xe14c>  // b.none
  40ffec:	add	x1, x0, #0x1
  40fff0:	str	x1, [x25, #24]
  40fff4:	add	x26, x28, #0x2
  40fff8:	mov	w1, #0x25                  	// #37
  40fffc:	strb	w1, [x0]
  410000:	b	40fe3c <nftw@plt+0xd2bc>
  410004:	cmp	w26, #0x0
  410008:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  41000c:	b.ne	411260 <nftw@plt+0xe6e0>  // b.any
  410010:	ldrb	w1, [sp, #183]
  410014:	cbnz	w1, 41042c <nftw@plt+0xd8ac>
  410018:	cmp	w0, #0x6f
  41001c:	b.eq	410454 <nftw@plt+0xd8d4>  // b.none
  410020:	b.hi	41021c <nftw@plt+0xd69c>  // b.pmore
  410024:	cmp	w0, #0x63
  410028:	b.eq	4107b4 <nftw@plt+0xdc34>  // b.none
  41002c:	b.ls	410148 <nftw@plt+0xd5c8>  // b.plast
  410030:	cmp	w0, #0x66
  410034:	b.eq	41077c <nftw@plt+0xdbfc>  // b.none
  410038:	cmp	w0, #0x69
  41003c:	b.ne	410108 <nftw@plt+0xd588>  // b.any
  410040:	ldr	x22, [x21, w20, uxtw #3]
  410044:	cbnz	w27, 410bac <nftw@plt+0xe02c>
  410048:	cmp	w26, #0x1
  41004c:	b.eq	410ef4 <nftw@plt+0xe374>  // b.none
  410050:	cmp	w26, #0x2
  410054:	b.eq	410ec0 <nftw@plt+0xe340>  // b.none
  410058:	cbnz	w26, 4102e8 <nftw@plt+0xd768>
  41005c:	ldr	x2, [x23, #8]
  410060:	ldr	x0, [x19, #8]
  410064:	ldr	w3, [x2, #24]
  410068:	add	x0, x0, #0xcc
  41006c:	ldr	x1, [x2]
  410070:	tbnz	w3, #31, 41104c <nftw@plt+0xe4cc>
  410074:	add	x3, x1, #0xb
  410078:	and	x3, x3, #0xfffffffffffffff8
  41007c:	str	x3, [x2]
  410080:	ldr	w2, [x1]
  410084:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  410088:	add	x1, x1, #0x840
  41008c:	bl	4025b0 <sprintf@plt>
  410090:	ldr	x1, [x19, #8]
  410094:	mov	x0, x19
  410098:	add	x1, x1, #0xcc
  41009c:	bl	40f9a8 <nftw@plt+0xce28>
  4100a0:	ldrb	w0, [sp, #183]
  4100a4:	cbz	w0, 4102f0 <nftw@plt+0xd770>
  4100a8:	ldrb	w1, [x19, #67]
  4100ac:	mov	x0, x19
  4100b0:	bl	40fc38 <nftw@plt+0xd0b8>
  4100b4:	ldp	x0, x1, [x25, #24]
  4100b8:	cmp	x1, x0
  4100bc:	b.ne	4102fc <nftw@plt+0xd77c>  // b.any
  4100c0:	mov	x0, x25
  4100c4:	mov	x1, #0x1                   	// #1
  4100c8:	bl	449870 <_obstack_newchunk@@Base>
  4100cc:	ldr	x0, [x25, #24]
  4100d0:	add	x1, x0, #0x1
  4100d4:	str	x1, [x25, #24]
  4100d8:	strb	wzr, [x0]
  4100dc:	ldp	x3, x2, [x25, #16]
  4100e0:	cmp	x2, x3
  4100e4:	b.ne	410314 <nftw@plt+0xd794>  // b.any
  4100e8:	ldrb	w0, [x25, #80]
  4100ec:	orr	w0, w0, #0x2
  4100f0:	strb	w0, [x25, #80]
  4100f4:	b	410314 <nftw@plt+0xd794>
  4100f8:	cbnz	w6, 411248 <nftw@plt+0xe6c8>
  4100fc:	add	x22, x22, #0x1
  410100:	mov	w6, #0x1                   	// #1
  410104:	b	40ff38 <nftw@plt+0xd3b8>
  410108:	cmp	w0, #0x64
  41010c:	b.eq	410040 <nftw@plt+0xd4c0>  // b.none
  410110:	ldr	x9, [x19, #48]
  410114:	cbz	x9, 4112a8 <nftw@plt+0xe728>
  410118:	str	x28, [sp]
  41011c:	mov	w4, w27
  410120:	mov	w3, w26
  410124:	mov	x2, x22
  410128:	add	x7, sp, #0xb7
  41012c:	mov	x1, x23
  410130:	mov	x0, x19
  410134:	blr	x9
  410138:	tst	w0, #0xff
  41013c:	b.eq	411290 <nftw@plt+0xe710>  // b.none
  410140:	ldr	x22, [x21, w20, uxtw #3]
  410144:	b	4102e8 <nftw@plt+0xd768>
  410148:	cmp	w0, #0x2e
  41014c:	b.eq	410664 <nftw@plt+0xdae4>  // b.none
  410150:	cmp	w0, #0x5a
  410154:	b.ne	410110 <nftw@plt+0xd590>  // b.any
  410158:	ldr	x1, [x23, #8]
  41015c:	ldr	w2, [x1, #24]
  410160:	ldr	x3, [x1]
  410164:	tbnz	w2, #31, 410acc <nftw@plt+0xdf4c>
  410168:	add	x0, x3, #0xf
  41016c:	and	x0, x0, #0xfffffffffffffff8
  410170:	str	x0, [x1]
  410174:	ldr	x2, [x3]
  410178:	str	x2, [sp, #112]
  41017c:	add	x2, x0, #0xb
  410180:	and	x2, x2, #0xfffffffffffffff8
  410184:	str	x2, [x1]
  410188:	ldr	w27, [x0]
  41018c:	ldr	x22, [x21, w20, uxtw #3]
  410190:	cbz	w27, 4102e8 <nftw@plt+0xd768>
  410194:	sub	w0, w27, #0x1
  410198:	adrp	x26, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41019c:	mov	x28, #0x0                   	// #0
  4101a0:	add	x26, x26, #0x5e8
  4101a4:	str	w0, [sp, #120]
  4101a8:	b	4101b8 <nftw@plt+0xd638>
  4101ac:	add	x28, x28, #0x1
  4101b0:	cmp	w27, w28
  4101b4:	b.ls	4102e8 <nftw@plt+0xd768>  // b.plast
  4101b8:	ldr	x0, [sp, #112]
  4101bc:	mov	x1, x26
  4101c0:	ldr	w2, [x0, x28, lsl #2]
  4101c4:	ldr	x0, [x19, #8]
  4101c8:	add	x0, x0, #0xcc
  4101cc:	bl	4025b0 <sprintf@plt>
  4101d0:	ldr	x1, [x19, #8]
  4101d4:	mov	x0, x19
  4101d8:	add	x1, x1, #0xcc
  4101dc:	bl	40f9a8 <nftw@plt+0xce28>
  4101e0:	ldr	w0, [sp, #120]
  4101e4:	cmp	w0, w28
  4101e8:	b.ls	4101ac <nftw@plt+0xd62c>  // b.plast
  4101ec:	mov	x0, x19
  4101f0:	mov	w1, #0x2c                  	// #44
  4101f4:	bl	40f3e8 <nftw@plt+0xc868>
  4101f8:	mov	x0, x19
  4101fc:	mov	w1, #0x20                  	// #32
  410200:	bl	40f3e8 <nftw@plt+0xc868>
  410204:	b	4101ac <nftw@plt+0xd62c>
  410208:	ldrb	w0, [sp, #183]
  41020c:	cbnz	w0, 411278 <nftw@plt+0xe6f8>
  410210:	add	x22, x22, #0x1
  410214:	strb	w24, [sp, #183]
  410218:	b	40ff38 <nftw@plt+0xd3b8>
  41021c:	cmp	w0, #0x73
  410220:	b.eq	410740 <nftw@plt+0xdbc0>  // b.none
  410224:	b.ls	410288 <nftw@plt+0xd708>  // b.plast
  410228:	cmp	w0, #0x75
  41022c:	b.eq	410804 <nftw@plt+0xdc84>  // b.none
  410230:	cmp	w0, #0x78
  410234:	b.ne	410110 <nftw@plt+0xd590>  // b.any
  410238:	ldr	x22, [x21, w20, uxtw #3]
  41023c:	cbnz	w27, 410be0 <nftw@plt+0xe060>
  410240:	cmp	w26, #0x1
  410244:	b.eq	410f28 <nftw@plt+0xe3a8>  // b.none
  410248:	cmp	w26, #0x2
  41024c:	b.eq	410f5c <nftw@plt+0xe3dc>  // b.none
  410250:	cbnz	w26, 4102e8 <nftw@plt+0xd768>
  410254:	ldr	x2, [x23, #8]
  410258:	ldr	x0, [x19, #8]
  41025c:	ldr	w3, [x2, #24]
  410260:	add	x0, x0, #0xcc
  410264:	ldr	x1, [x2]
  410268:	tbnz	w3, #31, 411030 <nftw@plt+0xe4b0>
  41026c:	add	x3, x1, #0xb
  410270:	and	x3, x3, #0xfffffffffffffff8
  410274:	str	x3, [x2]
  410278:	ldr	w2, [x1]
  41027c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410280:	add	x1, x1, #0x5f8
  410284:	b	41008c <nftw@plt+0xd50c>
  410288:	cmp	w0, #0x70
  41028c:	b.eq	4106f4 <nftw@plt+0xdb74>  // b.none
  410290:	cmp	w0, #0x72
  410294:	b.ne	410110 <nftw@plt+0xd590>  // b.any
  410298:	ldr	x0, [x23, #8]
  41029c:	ldrb	w26, [x19, #67]
  4102a0:	ldr	w2, [x0, #24]
  4102a4:	ldr	x1, [x0]
  4102a8:	tbnz	w2, #31, 410b10 <nftw@plt+0xdf90>
  4102ac:	add	x2, x1, #0xf
  4102b0:	and	x2, x2, #0xfffffffffffffff8
  4102b4:	str	x2, [x0]
  4102b8:	ldr	x22, [x1]
  4102bc:	mov	x0, x22
  4102c0:	bl	4024f0 <strlen@plt>
  4102c4:	mov	x2, x0
  4102c8:	mov	x1, x22
  4102cc:	mov	w0, w26
  4102d0:	bl	40a030 <nftw@plt+0x74b0>
  4102d4:	mov	x1, x0
  4102d8:	mov	x0, x19
  4102dc:	bl	40f9a8 <nftw@plt+0xce28>
  4102e0:	ldr	x22, [x21, w20, uxtw #3]
  4102e4:	nop
  4102e8:	ldrb	w0, [sp, #183]
  4102ec:	cbnz	w0, 4100a8 <nftw@plt+0xd528>
  4102f0:	ldp	x0, x1, [x25, #24]
  4102f4:	cmp	x1, x0
  4102f8:	b.eq	4100c0 <nftw@plt+0xd540>  // b.none
  4102fc:	add	x1, x0, #0x1
  410300:	str	x1, [x25, #24]
  410304:	strb	wzr, [x0]
  410308:	ldp	x3, x2, [x25, #16]
  41030c:	cmp	x2, x3
  410310:	b.eq	4100e8 <nftw@plt+0xd568>  // b.none
  410314:	ldr	x0, [x25, #48]
  410318:	ldr	x1, [x25, #8]
  41031c:	add	x2, x2, x0
  410320:	ldr	x4, [x25, #32]
  410324:	bic	x0, x2, x0
  410328:	str	x0, [x25, #24]
  41032c:	sub	x2, x0, x1
  410330:	sub	x1, x4, x1
  410334:	cmp	x2, x1
  410338:	b.ls	410344 <nftw@plt+0xd7c4>  // b.plast
  41033c:	mov	x0, x4
  410340:	str	x4, [x25, #24]
  410344:	add	w20, w20, #0x1
  410348:	str	x0, [x25, #16]
  41034c:	str	x3, [x22]
  410350:	ldr	x28, [x21, w20, uxtw #3]
  410354:	cbnz	x28, 40fef0 <nftw@plt+0xd370>
  410358:	ldr	x0, [x19, #56]
  41035c:	cbz	x0, 410370 <nftw@plt+0xd7f0>
  410360:	ldr	x2, [x0]
  410364:	mov	x1, x19
  410368:	ldr	x2, [x2, #16]
  41036c:	blr	x2
  410370:	ldr	x0, [sp, #128]
  410374:	ldp	x29, x30, [sp, #16]
  410378:	ldp	x21, x22, [sp, #48]
  41037c:	ldp	x23, x24, [sp, #64]
  410380:	ldp	x25, x26, [sp, #80]
  410384:	ldp	x27, x28, [sp, #96]
  410388:	str	x0, [x0, #176]
  41038c:	str	wzr, [x0, #200]
  410390:	ldr	x0, [sp, #136]
  410394:	str	wzr, [x19, #32]
  410398:	stur	x0, [x19, #36]
  41039c:	strb	wzr, [x19, #64]
  4103a0:	ldp	x19, x20, [sp, #32]
  4103a4:	add	sp, sp, #0x1b0
  4103a8:	ret
  4103ac:	ldrb	w0, [x19, #67]
  4103b0:	bl	40a0c0 <nftw@plt+0x7540>
  4103b4:	mov	x26, x0
  4103b8:	bl	4024f0 <strlen@plt>
  4103bc:	mov	x20, x0
  4103c0:	ldp	x0, x1, [x25, #24]
  4103c4:	sub	x1, x1, x0
  4103c8:	cmp	x20, x1
  4103cc:	b.hi	4109c0 <nftw@plt+0xde40>  // b.pmore
  4103d0:	mov	x1, x26
  4103d4:	mov	x2, x20
  4103d8:	bl	402490 <memcpy@plt>
  4103dc:	ldr	x0, [x25, #24]
  4103e0:	add	x0, x0, x20
  4103e4:	str	x0, [x25, #24]
  4103e8:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4103ec:	ldr	x26, [x20, #1312]
  4103f0:	mov	x0, x26
  4103f4:	bl	4024f0 <strlen@plt>
  4103f8:	mov	x27, x0
  4103fc:	ldp	x0, x3, [x25, #24]
  410400:	sub	x3, x3, x0
  410404:	cmp	x27, x3
  410408:	b.hi	41064c <nftw@plt+0xdacc>  // b.pmore
  41040c:	mov	x1, x26
  410410:	mov	x2, x27
  410414:	bl	402490 <memcpy@plt>
  410418:	add	x26, x28, #0x2
  41041c:	ldr	x0, [x25, #24]
  410420:	add	x0, x0, x27
  410424:	str	x0, [x25, #24]
  410428:	b	40fe3c <nftw@plt+0xd2bc>
  41042c:	ldrb	w1, [x19, #67]
  410430:	mov	x0, x19
  410434:	str	w5, [sp, #112]
  410438:	str	w6, [sp, #120]
  41043c:	bl	40fbf0 <nftw@plt+0xd070>
  410440:	ldrb	w0, [x22]
  410444:	ldr	w5, [sp, #112]
  410448:	ldr	w6, [sp, #120]
  41044c:	cmp	w0, #0x6f
  410450:	b.ne	410020 <nftw@plt+0xd4a0>  // b.any
  410454:	ldr	x22, [x21, w20, uxtw #3]
  410458:	cbnz	w27, 410b78 <nftw@plt+0xdff8>
  41045c:	cmp	w26, #0x1
  410460:	b.eq	410b78 <nftw@plt+0xdff8>  // b.none
  410464:	cmp	w26, #0x2
  410468:	b.eq	410e8c <nftw@plt+0xe30c>  // b.none
  41046c:	cbnz	w26, 4102e8 <nftw@plt+0xd768>
  410470:	ldr	x2, [x23, #8]
  410474:	ldr	x0, [x19, #8]
  410478:	ldr	w3, [x2, #24]
  41047c:	add	x0, x0, #0xcc
  410480:	ldr	x1, [x2]
  410484:	tbnz	w3, #31, 411014 <nftw@plt+0xe494>
  410488:	add	x3, x1, #0xb
  41048c:	and	x3, x3, #0xfffffffffffffff8
  410490:	str	x3, [x2]
  410494:	ldr	w2, [x1]
  410498:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41049c:	add	x1, x1, #0x5b8
  4104a0:	b	41008c <nftw@plt+0xd50c>
  4104a4:	ldrb	w0, [x19, #67]
  4104a8:	bl	40a0c0 <nftw@plt+0x7540>
  4104ac:	b	40fe04 <nftw@plt+0xd284>
  4104b0:	ldp	x0, x1, [x25, #24]
  4104b4:	cmp	x1, x0
  4104b8:	b.eq	410ca8 <nftw@plt+0xe128>  // b.none
  4104bc:	add	x1, x0, #0x1
  4104c0:	str	x1, [x25, #24]
  4104c4:	strb	wzr, [x0]
  4104c8:	cmp	w22, #0x3b
  4104cc:	b.hi	411200 <nftw@plt+0xe680>  // b.pmore
  4104d0:	ldp	x4, x2, [x25, #16]
  4104d4:	add	w0, w22, #0x1
  4104d8:	str	w0, [sp, #152]
  4104dc:	ldr	x0, [sp, #112]
  4104e0:	cmp	x2, x4
  4104e4:	add	x6, x0, w22, uxtw #3
  4104e8:	b.eq	4109d4 <nftw@plt+0xde54>  // b.none
  4104ec:	ldr	x0, [x25, #48]
  4104f0:	ldr	x1, [x25, #8]
  4104f4:	add	x2, x2, x0
  4104f8:	ldr	x5, [x25, #32]
  4104fc:	bic	x0, x2, x0
  410500:	str	x0, [x25, #24]
  410504:	sub	x2, x0, x1
  410508:	sub	x1, x5, x1
  41050c:	cmp	x2, x1
  410510:	b.ls	41051c <nftw@plt+0xd99c>  // b.plast
  410514:	mov	x0, x5
  410518:	str	x5, [x25, #24]
  41051c:	str	x0, [x25, #16]
  410520:	str	x4, [x6]
  410524:	ldr	x1, [sp, #120]
  410528:	ldrb	w0, [x28, #1]
  41052c:	ldrh	w0, [x1, x0, lsl #1]
  410530:	tbnz	w0, #2, 410964 <nftw@plt+0xdde4>
  410534:	add	w0, w24, #0x1
  410538:	str	w0, [sp, #148]
  41053c:	ldr	w0, [sp, #160]
  410540:	cbnz	w0, 411188 <nftw@plt+0xe608>
  410544:	mov	w0, #0x1                   	// #1
  410548:	str	w0, [sp, #164]
  41054c:	cmp	w24, #0x1d
  410550:	b.hi	411170 <nftw@plt+0xe5f0>  // b.pmore
  410554:	mov	w0, w24
  410558:	ldr	x1, [x21, x0, lsl #3]
  41055c:	cbnz	x1, 411110 <nftw@plt+0xe590>
  410560:	ldr	x2, [sp, #112]
  410564:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410568:	ldr	x1, [sp, #152]
  41056c:	add	x20, x20, #0x5a0
  410570:	add	x1, x2, w1, uxtw #3
  410574:	str	x1, [x21, x0, lsl #3]
  410578:	str	x1, [sp, #136]
  41057c:	b	4105ac <nftw@plt+0xda2c>
  410580:	add	x0, x1, #0x1
  410584:	str	x0, [x25, #24]
  410588:	mov	x28, x26
  41058c:	mov	x0, x20
  410590:	ldrb	w4, [x26]
  410594:	strb	w4, [x1]
  410598:	ldrb	w27, [x28], #1
  41059c:	mov	w1, w27
  4105a0:	bl	402940 <strchr@plt>
  4105a4:	cbz	x0, 4105cc <nftw@plt+0xda4c>
  4105a8:	mov	x26, x28
  4105ac:	ldp	x1, x0, [x25, #24]
  4105b0:	cmp	x0, x1
  4105b4:	b.ne	410580 <nftw@plt+0xda00>  // b.any
  4105b8:	mov	x1, #0x1                   	// #1
  4105bc:	mov	x0, x25
  4105c0:	bl	449870 <_obstack_newchunk@@Base>
  4105c4:	ldr	x1, [x25, #24]
  4105c8:	b	410580 <nftw@plt+0xda00>
  4105cc:	cmp	w27, #0x2e
  4105d0:	b.eq	410854 <nftw@plt+0xdcd4>  // b.none
  4105d4:	ldrb	w3, [x28]
  4105d8:	ldp	x0, x1, [x25, #24]
  4105dc:	cbz	w3, 410fb8 <nftw@plt+0xe438>
  4105e0:	cmp	x1, x0
  4105e4:	b.eq	410ce0 <nftw@plt+0xe160>  // b.none
  4105e8:	add	x1, x0, #0x1
  4105ec:	str	x1, [x25, #24]
  4105f0:	strb	wzr, [x0]
  4105f4:	add	w22, w22, #0x2
  4105f8:	ldp	x4, x3, [x25, #16]
  4105fc:	cmp	x3, x4
  410600:	b.eq	4109e4 <nftw@plt+0xde64>  // b.none
  410604:	ldr	x0, [x25, #48]
  410608:	ldr	x1, [x25, #8]
  41060c:	add	x3, x3, x0
  410610:	ldr	x5, [x25, #32]
  410614:	bic	x0, x3, x0
  410618:	str	x0, [x25, #24]
  41061c:	sub	x3, x0, x1
  410620:	sub	x1, x5, x1
  410624:	cmp	x3, x1
  410628:	b.ls	410634 <nftw@plt+0xdab4>  // b.plast
  41062c:	mov	x0, x5
  410630:	str	x5, [x25, #24]
  410634:	str	x0, [x25, #16]
  410638:	mov	x26, x28
  41063c:	ldr	x0, [sp, #136]
  410640:	ldr	w24, [sp, #148]
  410644:	str	x4, [x0]
  410648:	b	40fe3c <nftw@plt+0xd2bc>
  41064c:	mov	x0, x25
  410650:	mov	x1, x27
  410654:	bl	449870 <_obstack_newchunk@@Base>
  410658:	ldr	x26, [x20, #1312]
  41065c:	ldr	x0, [x25, #24]
  410660:	b	41040c <nftw@plt+0xd88c>
  410664:	ldrb	w1, [x22, #1]
  410668:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  41066c:	add	x0, x0, #0x248
  410670:	ldrh	w0, [x0, w1, sxtw #1]
  410674:	tbnz	w0, #2, 410c14 <nftw@plt+0xe094>
  410678:	cmp	w1, #0x2a
  41067c:	b.ne	4112d8 <nftw@plt+0xe758>  // b.any
  410680:	ldrb	w0, [x22, #2]
  410684:	cmp	w0, #0x73
  410688:	b.ne	4110e0 <nftw@plt+0xe560>  // b.any
  41068c:	ldr	x0, [x23, #8]
  410690:	add	w20, w20, #0x1
  410694:	ldr	w1, [x0, #24]
  410698:	ldr	x22, [x21, w20, uxtw #3]
  41069c:	ldr	x2, [x0]
  4106a0:	tbnz	w1, #31, 410d50 <nftw@plt+0xe1d0>
  4106a4:	add	x1, x2, #0xb
  4106a8:	cmp	x28, x22
  4106ac:	and	x1, x1, #0xfffffffffffffff8
  4106b0:	str	x1, [x0]
  4106b4:	ldr	w1, [x2]
  4106b8:	b.ne	410d70 <nftw@plt+0xe1f0>  // b.any
  4106bc:	ldr	x2, [x0]
  4106c0:	add	x3, x2, #0xf
  4106c4:	and	x3, x3, #0xfffffffffffffff8
  4106c8:	str	x3, [x0]
  4106cc:	ldr	x26, [x2]
  4106d0:	tbnz	w1, #31, 410c6c <nftw@plt+0xe0ec>
  4106d4:	sxtw	x1, w1
  4106d8:	mov	x0, x26
  4106dc:	bl	402540 <strnlen@plt>
  4106e0:	add	x2, x26, x0
  4106e4:	mov	x1, x26
  4106e8:	mov	x0, x19
  4106ec:	bl	40f620 <nftw@plt+0xcaa0>
  4106f0:	b	4102e8 <nftw@plt+0xd768>
  4106f4:	ldr	x1, [x23, #8]
  4106f8:	ldr	x0, [x19, #8]
  4106fc:	ldr	w3, [x1, #24]
  410700:	add	x0, x0, #0xcc
  410704:	ldr	x2, [x1]
  410708:	tbnz	w3, #31, 410a78 <nftw@plt+0xdef8>
  41070c:	add	x3, x2, #0xf
  410710:	and	x3, x3, #0xfffffffffffffff8
  410714:	str	x3, [x1]
  410718:	ldr	x2, [x2]
  41071c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410720:	add	x1, x1, #0x5c8
  410724:	bl	4025b0 <sprintf@plt>
  410728:	ldr	x1, [x19, #8]
  41072c:	mov	x0, x19
  410730:	add	x1, x1, #0xcc
  410734:	bl	40f9a8 <nftw@plt+0xce28>
  410738:	ldr	x22, [x21, w20, uxtw #3]
  41073c:	b	4102e8 <nftw@plt+0xd768>
  410740:	ldrb	w3, [sp, #183]
  410744:	ldr	x0, [x23, #8]
  410748:	ldr	w2, [x0, #24]
  41074c:	ldr	x1, [x0]
  410750:	cbz	w3, 410a54 <nftw@plt+0xded4>
  410754:	tbnz	w2, #31, 410da0 <nftw@plt+0xe220>
  410758:	add	x2, x1, #0xf
  41075c:	and	x2, x2, #0xfffffffffffffff8
  410760:	str	x2, [x0]
  410764:	ldr	x1, [x1]
  410768:	mov	x0, x19
  41076c:	mov	x2, #0xffffffffffffffff    	// #-1
  410770:	bl	40f880 <nftw@plt+0xcd00>
  410774:	ldr	x22, [x21, w20, uxtw #3]
  410778:	b	4102e8 <nftw@plt+0xd768>
  41077c:	ldr	x1, [x23, #8]
  410780:	ldr	x0, [x19, #8]
  410784:	ldr	w3, [x1, #28]
  410788:	add	x0, x0, #0xcc
  41078c:	ldr	x2, [x1]
  410790:	tbnz	w3, #31, 410ab0 <nftw@plt+0xdf30>
  410794:	add	x3, x2, #0xf
  410798:	and	x3, x3, #0xfffffffffffffff8
  41079c:	str	x3, [x1]
  4107a0:	ldr	d0, [x2]
  4107a4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4107a8:	add	x1, x1, #0xc90
  4107ac:	bl	4025b0 <sprintf@plt>
  4107b0:	b	410728 <nftw@plt+0xdba8>
  4107b4:	ldr	x0, [x23, #8]
  4107b8:	ldr	w2, [x0, #24]
  4107bc:	ldr	x1, [x0]
  4107c0:	tbnz	w2, #31, 410a94 <nftw@plt+0xdf14>
  4107c4:	add	x2, x1, #0xb
  4107c8:	and	x2, x2, #0xfffffffffffffff8
  4107cc:	str	x2, [x0]
  4107d0:	ldr	w3, [x1]
  4107d4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4107d8:	add	x0, x0, #0x248
  4107dc:	and	x1, x3, #0xff
  4107e0:	ldr	x22, [x21, w20, uxtw #3]
  4107e4:	ldrh	w0, [x0, x1, lsl #1]
  4107e8:	tbnz	w0, #4, 4107f4 <nftw@plt+0xdc74>
  4107ec:	ldrb	w0, [sp, #183]
  4107f0:	cbnz	w0, 410cf4 <nftw@plt+0xe174>
  4107f4:	mov	w1, w3
  4107f8:	mov	x0, x19
  4107fc:	bl	40f3e8 <nftw@plt+0xc868>
  410800:	b	4102e8 <nftw@plt+0xd768>
  410804:	ldr	x22, [x21, w20, uxtw #3]
  410808:	cbnz	w27, 410b2c <nftw@plt+0xdfac>
  41080c:	cmp	w26, #0x1
  410810:	b.eq	410b2c <nftw@plt+0xdfac>  // b.none
  410814:	cmp	w26, #0x2
  410818:	b.eq	410e58 <nftw@plt+0xe2d8>  // b.none
  41081c:	cbnz	w26, 4102e8 <nftw@plt+0xd768>
  410820:	ldr	x2, [x23, #8]
  410824:	ldr	x0, [x19, #8]
  410828:	ldr	w3, [x2, #24]
  41082c:	add	x0, x0, #0xcc
  410830:	ldr	x1, [x2]
  410834:	tbnz	w3, #31, 410ff8 <nftw@plt+0xe478>
  410838:	add	x3, x1, #0xb
  41083c:	and	x3, x3, #0xfffffffffffffff8
  410840:	str	x3, [x2]
  410844:	ldr	w2, [x1]
  410848:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41084c:	add	x1, x1, #0x5d8
  410850:	b	41008c <nftw@plt+0xd50c>
  410854:	ldrb	w0, [x28]
  410858:	ldr	x1, [sp, #120]
  41085c:	ldrh	w1, [x1, w0, sxtw #1]
  410860:	tbnz	w1, #2, 410918 <nftw@plt+0xdd98>
  410864:	cmp	w0, #0x2a
  410868:	b.ne	411320 <nftw@plt+0xe7a0>  // b.any
  41086c:	ldp	x0, x1, [x25, #24]
  410870:	cmp	x1, x0
  410874:	b.eq	410f90 <nftw@plt+0xe410>  // b.none
  410878:	add	x1, x0, #0x1
  41087c:	str	x1, [x25, #24]
  410880:	mov	w1, #0x2a                  	// #42
  410884:	strb	w1, [x0]
  410888:	ldr	x1, [sp, #120]
  41088c:	add	x26, x26, #0x2
  410890:	ldrb	w0, [x28, #1]
  410894:	ldrh	w1, [x1, w0, sxtw #1]
  410898:	tbnz	w1, #2, 410e10 <nftw@plt+0xe290>
  41089c:	ldr	w1, [sp, #160]
  4108a0:	cbnz	w1, 4112f0 <nftw@plt+0xe770>
  4108a4:	ldr	w1, [sp, #148]
  4108a8:	add	w24, w24, #0x1
  4108ac:	add	w1, w1, #0x1
  4108b0:	str	w1, [sp, #148]
  4108b4:	ldr	x1, [sp, #136]
  4108b8:	str	x1, [x21, x24, lsl #3]
  4108bc:	cmp	w0, #0x73
  4108c0:	b.ne	411308 <nftw@plt+0xe788>  // b.any
  4108c4:	ldp	x0, x1, [x25, #24]
  4108c8:	cmp	x1, x0
  4108cc:	b.eq	410fa4 <nftw@plt+0xe424>  // b.none
  4108d0:	add	x1, x0, #0x1
  4108d4:	str	x1, [x25, #24]
  4108d8:	add	x28, x26, #0x1
  4108dc:	mov	w1, #0x73                  	// #115
  4108e0:	strb	w1, [x0]
  4108e4:	b	4105d4 <nftw@plt+0xda54>
  4108e8:	mov	x0, x25
  4108ec:	mov	x1, #0x1                   	// #1
  4108f0:	bl	449870 <_obstack_newchunk@@Base>
  4108f4:	ldr	x0, [x25, #24]
  4108f8:	add	x1, x0, #0x1
  4108fc:	str	x1, [x25, #24]
  410900:	ldrb	w1, [x28]
  410904:	strb	w1, [x0]
  410908:	ldr	x1, [sp, #120]
  41090c:	ldrb	w0, [x28], #1
  410910:	ldrh	w1, [x1, w0, sxtw #1]
  410914:	tbz	w1, #2, 410944 <nftw@plt+0xddc4>
  410918:	ldp	x0, x1, [x25, #24]
  41091c:	cmp	x1, x0
  410920:	b.eq	4108e8 <nftw@plt+0xdd68>  // b.none
  410924:	add	x1, x0, #0x1
  410928:	str	x1, [x25, #24]
  41092c:	ldrb	w1, [x28]
  410930:	strb	w1, [x0]
  410934:	ldr	x1, [sp, #120]
  410938:	ldrb	w0, [x28], #1
  41093c:	ldrh	w1, [x1, w0, sxtw #1]
  410940:	tbnz	w1, #2, 410918 <nftw@plt+0xdd98>
  410944:	cmp	w0, #0x73
  410948:	b.eq	4105d4 <nftw@plt+0xda54>  // b.none
  41094c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410950:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410954:	add	x2, x2, #0x590
  410958:	add	x0, x0, #0x518
  41095c:	mov	w1, #0x47c                 	// #1148
  410960:	bl	402bf0 <nftw@plt+0x70>
  410964:	add	x1, sp, #0xb8
  410968:	mov	x0, x26
  41096c:	mov	w2, #0xa                   	// #10
  410970:	bl	4024e0 <strtoul@plt>
  410974:	ldr	x3, [sp, #184]
  410978:	sub	w0, w0, #0x1
  41097c:	ldrb	w1, [x3]
  410980:	cmp	w1, #0x24
  410984:	b.ne	4110f8 <nftw@plt+0xe578>  // b.any
  410988:	ldr	w1, [sp, #164]
  41098c:	add	x26, x3, #0x1
  410990:	cbnz	w1, 411218 <nftw@plt+0xe698>
  410994:	mov	w1, #0x1                   	// #1
  410998:	str	w24, [sp, #148]
  41099c:	mov	w24, w0
  4109a0:	str	w1, [sp, #160]
  4109a4:	b	41054c <nftw@plt+0xd9cc>
  4109a8:	mov	x0, x25
  4109ac:	mov	x1, x26
  4109b0:	bl	449870 <_obstack_newchunk@@Base>
  4109b4:	ldr	x27, [x20, #1304]
  4109b8:	ldr	x0, [x25, #24]
  4109bc:	b	40fddc <nftw@plt+0xd25c>
  4109c0:	mov	x0, x25
  4109c4:	mov	x1, x20
  4109c8:	bl	449870 <_obstack_newchunk@@Base>
  4109cc:	ldr	x0, [x25, #24]
  4109d0:	b	4103d0 <nftw@plt+0xd850>
  4109d4:	ldrb	w0, [x25, #80]
  4109d8:	orr	w0, w0, #0x2
  4109dc:	strb	w0, [x25, #80]
  4109e0:	b	4104ec <nftw@plt+0xd96c>
  4109e4:	ldrb	w0, [x25, #80]
  4109e8:	orr	w0, w0, #0x2
  4109ec:	strb	w0, [x25, #80]
  4109f0:	b	410604 <nftw@plt+0xda84>
  4109f4:	ldr	x2, [sp, #128]
  4109f8:	add	x21, sp, #0xc0
  4109fc:	ldr	x0, [x2, #184]
  410a00:	str	x20, [x25, #16]
  410a04:	str	x0, [x1]
  410a08:	add	x0, x1, #0x8
  410a0c:	str	x1, [x2, #184]
  410a10:	mov	x2, #0xf0                  	// #240
  410a14:	mov	w1, #0x0                   	// #0
  410a18:	str	x0, [sp, #112]
  410a1c:	mov	x0, x21
  410a20:	bl	4026f0 <memset@plt>
  410a24:	ldr	x28, [x23]
  410a28:	ldrb	w0, [x28]
  410a2c:	cbnz	w0, 40fd30 <nftw@plt+0xd1b0>
  410a30:	cmp	x20, x22
  410a34:	b.eq	410d88 <nftw@plt+0xe208>  // b.none
  410a38:	add	x0, x20, #0x1
  410a3c:	str	x0, [x25, #24]
  410a40:	mov	x28, #0x0                   	// #0
  410a44:	mov	x3, #0x8                   	// #8
  410a48:	strb	wzr, [x20]
  410a4c:	ldr	x22, [sp, #112]
  410a50:	b	40fe7c <nftw@plt+0xd2fc>
  410a54:	tbnz	w2, #31, 410df4 <nftw@plt+0xe274>
  410a58:	add	x2, x1, #0xf
  410a5c:	and	x2, x2, #0xfffffffffffffff8
  410a60:	str	x2, [x0]
  410a64:	ldr	x1, [x1]
  410a68:	mov	x0, x19
  410a6c:	bl	40f9a8 <nftw@plt+0xce28>
  410a70:	ldr	x22, [x21, w20, uxtw #3]
  410a74:	b	4102e8 <nftw@plt+0xd768>
  410a78:	add	w4, w3, #0x8
  410a7c:	str	w4, [x1, #24]
  410a80:	cmp	w4, #0x0
  410a84:	b.gt	41070c <nftw@plt+0xdb8c>
  410a88:	ldr	x2, [x1, #8]
  410a8c:	add	x2, x2, w3, sxtw
  410a90:	b	410718 <nftw@plt+0xdb98>
  410a94:	add	w3, w2, #0x8
  410a98:	str	w3, [x0, #24]
  410a9c:	cmp	w3, #0x0
  410aa0:	b.gt	4107c4 <nftw@plt+0xdc44>
  410aa4:	ldr	x1, [x0, #8]
  410aa8:	add	x1, x1, w2, sxtw
  410aac:	b	4107d0 <nftw@plt+0xdc50>
  410ab0:	add	w4, w3, #0x10
  410ab4:	str	w4, [x1, #28]
  410ab8:	cmp	w4, #0x0
  410abc:	b.gt	410794 <nftw@plt+0xdc14>
  410ac0:	ldr	x2, [x1, #16]
  410ac4:	add	x2, x2, w3, sxtw
  410ac8:	b	4107a0 <nftw@plt+0xdc20>
  410acc:	add	w0, w2, #0x8
  410ad0:	str	w0, [x1, #24]
  410ad4:	cmp	w0, #0x0
  410ad8:	b.gt	410168 <nftw@plt+0xd5e8>
  410adc:	ldr	x4, [x1, #8]
  410ae0:	ldr	x5, [x4, w2, sxtw]
  410ae4:	str	x5, [sp, #112]
  410ae8:	b.eq	4110d8 <nftw@plt+0xe558>  // b.none
  410aec:	add	w2, w2, #0x10
  410af0:	str	w2, [x1, #24]
  410af4:	cmp	w2, #0x0
  410af8:	b.le	410d10 <nftw@plt+0xe190>
  410afc:	add	x2, x3, #0xb
  410b00:	mov	x0, x3
  410b04:	and	x2, x2, #0xfffffffffffffff8
  410b08:	str	x2, [x1]
  410b0c:	b	410188 <nftw@plt+0xd608>
  410b10:	add	w3, w2, #0x8
  410b14:	str	w3, [x0, #24]
  410b18:	cmp	w3, #0x0
  410b1c:	b.gt	4102ac <nftw@plt+0xd72c>
  410b20:	ldr	x1, [x0, #8]
  410b24:	add	x1, x1, w2, sxtw
  410b28:	b	4102b8 <nftw@plt+0xd738>
  410b2c:	ldr	x2, [x23, #8]
  410b30:	ldr	x0, [x19, #8]
  410b34:	ldr	w3, [x2, #24]
  410b38:	add	x0, x0, #0xcc
  410b3c:	ldr	x1, [x2]
  410b40:	tbnz	w3, #31, 410dd8 <nftw@plt+0xe258>
  410b44:	add	x3, x1, #0xf
  410b48:	and	x3, x3, #0xfffffffffffffff8
  410b4c:	str	x3, [x2]
  410b50:	ldr	x2, [x1]
  410b54:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410b58:	add	x1, x1, #0x5d0
  410b5c:	nop
  410b60:	bl	4025b0 <sprintf@plt>
  410b64:	ldr	x1, [x19, #8]
  410b68:	mov	x0, x19
  410b6c:	add	x1, x1, #0xcc
  410b70:	bl	40f9a8 <nftw@plt+0xce28>
  410b74:	b	4102e8 <nftw@plt+0xd768>
  410b78:	ldr	x2, [x23, #8]
  410b7c:	ldr	x0, [x19, #8]
  410b80:	ldr	w3, [x2, #24]
  410b84:	add	x0, x0, #0xcc
  410b88:	ldr	x1, [x2]
  410b8c:	tbnz	w3, #31, 410dbc <nftw@plt+0xe23c>
  410b90:	add	x3, x1, #0xf
  410b94:	and	x3, x3, #0xfffffffffffffff8
  410b98:	str	x3, [x2]
  410b9c:	ldr	x2, [x1]
  410ba0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410ba4:	add	x1, x1, #0x5b0
  410ba8:	b	410b60 <nftw@plt+0xdfe0>
  410bac:	ldr	x1, [x23, #8]
  410bb0:	ldr	w2, [x1, #24]
  410bb4:	ldr	x0, [x1]
  410bb8:	tbnz	w2, #31, 410d18 <nftw@plt+0xe198>
  410bbc:	add	x2, x0, #0xf
  410bc0:	and	x2, x2, #0xfffffffffffffff8
  410bc4:	str	x2, [x1]
  410bc8:	ldr	x2, [x0]
  410bcc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410bd0:	ldr	x0, [x19, #8]
  410bd4:	add	x1, x1, #0x628
  410bd8:	add	x0, x0, #0xcc
  410bdc:	b	410b60 <nftw@plt+0xdfe0>
  410be0:	ldr	x2, [x23, #8]
  410be4:	ldr	x0, [x19, #8]
  410be8:	ldr	w3, [x2, #24]
  410bec:	add	x0, x0, #0xcc
  410bf0:	ldr	x1, [x2]
  410bf4:	tbnz	w3, #31, 410d34 <nftw@plt+0xe1b4>
  410bf8:	add	x3, x1, #0xf
  410bfc:	and	x3, x3, #0xfffffffffffffff8
  410c00:	str	x3, [x2]
  410c04:	ldr	x2, [x1]
  410c08:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410c0c:	add	x1, x1, #0x5f0
  410c10:	b	410b60 <nftw@plt+0xdfe0>
  410c14:	add	x1, sp, #0xb8
  410c18:	mov	w2, #0xa                   	// #10
  410c1c:	add	x0, x22, #0x1
  410c20:	bl	4024e0 <strtoul@plt>
  410c24:	ldr	x2, [sp, #184]
  410c28:	mov	w1, w0
  410c2c:	ldrb	w0, [x2]
  410c30:	cmp	w0, #0x73
  410c34:	b.ne	4112c0 <nftw@plt+0xe740>  // b.any
  410c38:	ldr	x0, [x23, #8]
  410c3c:	ldr	x22, [x21, w20, uxtw #3]
  410c40:	ldr	w3, [x0, #24]
  410c44:	ldr	x2, [x0]
  410c48:	tbz	w3, #31, 4106c0 <nftw@plt+0xdb40>
  410c4c:	add	w4, w3, #0x8
  410c50:	str	w4, [x0, #24]
  410c54:	cmp	w4, #0x0
  410c58:	b.gt	4106c0 <nftw@plt+0xdb40>
  410c5c:	ldr	x2, [x0, #8]
  410c60:	add	x2, x2, w3, sxtw
  410c64:	ldr	x26, [x2]
  410c68:	tbz	w1, #31, 4106d4 <nftw@plt+0xdb54>
  410c6c:	mov	x0, x26
  410c70:	bl	4024f0 <strlen@plt>
  410c74:	b	4106e0 <nftw@plt+0xdb60>
  410c78:	mov	x0, x25
  410c7c:	mov	x1, #0x1e8                 	// #488
  410c80:	bl	449870 <_obstack_newchunk@@Base>
  410c84:	ldp	x0, x22, [x25, #24]
  410c88:	ldr	x1, [x25, #16]
  410c8c:	add	x0, x0, #0x1e8
  410c90:	cmp	x0, x1
  410c94:	b.ne	40fcd0 <nftw@plt+0xd150>  // b.any
  410c98:	ldrb	w2, [x25, #80]
  410c9c:	orr	w2, w2, #0x2
  410ca0:	strb	w2, [x25, #80]
  410ca4:	b	40fcd0 <nftw@plt+0xd150>
  410ca8:	mov	x0, x25
  410cac:	mov	x1, #0x1                   	// #1
  410cb0:	bl	449870 <_obstack_newchunk@@Base>
  410cb4:	ldr	x0, [x25, #24]
  410cb8:	b	4104bc <nftw@plt+0xd93c>
  410cbc:	ldrb	w0, [x25, #80]
  410cc0:	orr	w0, w0, #0x2
  410cc4:	strb	w0, [x25, #80]
  410cc8:	b	40fe88 <nftw@plt+0xd308>
  410ccc:	mov	x0, x25
  410cd0:	mov	x1, #0x1                   	// #1
  410cd4:	bl	449870 <_obstack_newchunk@@Base>
  410cd8:	ldr	x0, [x25, #24]
  410cdc:	b	40ffec <nftw@plt+0xd46c>
  410ce0:	mov	x0, x25
  410ce4:	mov	x1, #0x1                   	// #1
  410ce8:	bl	449870 <_obstack_newchunk@@Base>
  410cec:	ldr	x0, [x25, #24]
  410cf0:	b	4105e8 <nftw@plt+0xda68>
  410cf4:	add	x1, sp, #0xb8
  410cf8:	mov	x0, x19
  410cfc:	mov	x2, #0x1                   	// #1
  410d00:	strb	w3, [sp, #184]
  410d04:	strb	wzr, [sp, #185]
  410d08:	bl	40f880 <nftw@plt+0xcd00>
  410d0c:	b	4102e8 <nftw@plt+0xd768>
  410d10:	add	x0, x4, w0, sxtw
  410d14:	b	410188 <nftw@plt+0xd608>
  410d18:	add	w3, w2, #0x8
  410d1c:	str	w3, [x1, #24]
  410d20:	cmp	w3, #0x0
  410d24:	b.gt	410bbc <nftw@plt+0xe03c>
  410d28:	ldr	x0, [x1, #8]
  410d2c:	add	x0, x0, w2, sxtw
  410d30:	b	410bc8 <nftw@plt+0xe048>
  410d34:	add	w4, w3, #0x8
  410d38:	str	w4, [x2, #24]
  410d3c:	cmp	w4, #0x0
  410d40:	b.gt	410bf8 <nftw@plt+0xe078>
  410d44:	ldr	x1, [x2, #8]
  410d48:	add	x1, x1, w3, sxtw
  410d4c:	b	410c04 <nftw@plt+0xe084>
  410d50:	add	w3, w1, #0x8
  410d54:	str	w3, [x0, #24]
  410d58:	cmp	w3, #0x0
  410d5c:	b.gt	4106a4 <nftw@plt+0xdb24>
  410d60:	ldr	x4, [x0, #8]
  410d64:	cmp	x28, x22
  410d68:	ldr	w1, [x4, w1, sxtw]
  410d6c:	b.eq	410c48 <nftw@plt+0xe0c8>  // b.none
  410d70:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410d74:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410d78:	add	x2, x2, #0x590
  410d7c:	add	x0, x0, #0x518
  410d80:	mov	w1, #0x555                 	// #1365
  410d84:	bl	402bf0 <nftw@plt+0x70>
  410d88:	mov	w22, #0x0                   	// #0
  410d8c:	mov	x0, x25
  410d90:	mov	x1, #0x1                   	// #1
  410d94:	bl	449870 <_obstack_newchunk@@Base>
  410d98:	ldr	x0, [x25, #24]
  410d9c:	b	40fe54 <nftw@plt+0xd2d4>
  410da0:	add	w3, w2, #0x8
  410da4:	str	w3, [x0, #24]
  410da8:	cmp	w3, #0x0
  410dac:	b.gt	410758 <nftw@plt+0xdbd8>
  410db0:	ldr	x1, [x0, #8]
  410db4:	add	x1, x1, w2, sxtw
  410db8:	b	410764 <nftw@plt+0xdbe4>
  410dbc:	add	w4, w3, #0x8
  410dc0:	str	w4, [x2, #24]
  410dc4:	cmp	w4, #0x0
  410dc8:	b.gt	410b90 <nftw@plt+0xe010>
  410dcc:	ldr	x1, [x2, #8]
  410dd0:	add	x1, x1, w3, sxtw
  410dd4:	b	410b9c <nftw@plt+0xe01c>
  410dd8:	add	w4, w3, #0x8
  410ddc:	str	w4, [x2, #24]
  410de0:	cmp	w4, #0x0
  410de4:	b.gt	410b44 <nftw@plt+0xdfc4>
  410de8:	ldr	x1, [x2, #8]
  410dec:	add	x1, x1, w3, sxtw
  410df0:	b	410b50 <nftw@plt+0xdfd0>
  410df4:	add	w3, w2, #0x8
  410df8:	str	w3, [x0, #24]
  410dfc:	cmp	w3, #0x0
  410e00:	b.gt	410a58 <nftw@plt+0xded8>
  410e04:	ldr	x1, [x0, #8]
  410e08:	add	x1, x1, w2, sxtw
  410e0c:	b	410a64 <nftw@plt+0xdee4>
  410e10:	add	x1, sp, #0xb8
  410e14:	mov	x0, x26
  410e18:	mov	w2, #0xa                   	// #10
  410e1c:	bl	4024e0 <strtoul@plt>
  410e20:	cmp	w0, w24
  410e24:	sub	w1, w0, #0x1
  410e28:	ldr	x0, [sp, #184]
  410e2c:	b.ne	411128 <nftw@plt+0xe5a8>  // b.any
  410e30:	ldr	w2, [sp, #164]
  410e34:	cbnz	w2, 411158 <nftw@plt+0xe5d8>
  410e38:	ldrb	w2, [x0]
  410e3c:	cmp	w2, #0x24
  410e40:	b.ne	411140 <nftw@plt+0xe5c0>  // b.any
  410e44:	ldr	x2, [sp, #136]
  410e48:	add	x26, x0, #0x1
  410e4c:	ldrb	w0, [x0, #1]
  410e50:	str	x2, [x21, w1, uxtw #3]
  410e54:	b	4108bc <nftw@plt+0xdd3c>
  410e58:	ldr	x2, [x23, #8]
  410e5c:	ldr	x0, [x19, #8]
  410e60:	ldr	w3, [x2, #24]
  410e64:	add	x0, x0, #0xcc
  410e68:	ldr	x1, [x2]
  410e6c:	tbnz	w3, #31, 410fdc <nftw@plt+0xe45c>
  410e70:	add	x3, x1, #0xf
  410e74:	and	x3, x3, #0xfffffffffffffff8
  410e78:	str	x3, [x2]
  410e7c:	ldr	x2, [x1]
  410e80:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410e84:	add	x1, x1, #0x5e0
  410e88:	b	410b60 <nftw@plt+0xdfe0>
  410e8c:	ldr	x2, [x23, #8]
  410e90:	ldr	x0, [x19, #8]
  410e94:	ldr	w3, [x2, #24]
  410e98:	add	x0, x0, #0xcc
  410e9c:	ldr	x1, [x2]
  410ea0:	tbnz	w3, #31, 410fc0 <nftw@plt+0xe440>
  410ea4:	add	x3, x1, #0xf
  410ea8:	and	x3, x3, #0xfffffffffffffff8
  410eac:	str	x3, [x2]
  410eb0:	ldr	x2, [x1]
  410eb4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410eb8:	add	x1, x1, #0x5c0
  410ebc:	b	410b60 <nftw@plt+0xdfe0>
  410ec0:	ldr	x2, [x23, #8]
  410ec4:	ldr	x0, [x19, #8]
  410ec8:	ldr	w3, [x2, #24]
  410ecc:	add	x0, x0, #0xcc
  410ed0:	ldr	x1, [x2]
  410ed4:	tbnz	w3, #31, 4110bc <nftw@plt+0xe53c>
  410ed8:	add	x3, x1, #0xf
  410edc:	and	x3, x3, #0xfffffffffffffff8
  410ee0:	str	x3, [x2]
  410ee4:	ldr	x2, [x1]
  410ee8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410eec:	add	x1, x1, #0x5a8
  410ef0:	b	410b60 <nftw@plt+0xdfe0>
  410ef4:	ldr	x2, [x23, #8]
  410ef8:	ldr	x0, [x19, #8]
  410efc:	ldr	w3, [x2, #24]
  410f00:	add	x0, x0, #0xcc
  410f04:	ldr	x1, [x2]
  410f08:	tbnz	w3, #31, 4110a0 <nftw@plt+0xe520>
  410f0c:	add	x3, x1, #0xf
  410f10:	and	x3, x3, #0xfffffffffffffff8
  410f14:	str	x3, [x2]
  410f18:	ldr	x2, [x1]
  410f1c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410f20:	add	x1, x1, #0x628
  410f24:	b	410b60 <nftw@plt+0xdfe0>
  410f28:	ldr	x2, [x23, #8]
  410f2c:	ldr	x0, [x19, #8]
  410f30:	ldr	w3, [x2, #24]
  410f34:	add	x0, x0, #0xcc
  410f38:	ldr	x1, [x2]
  410f3c:	tbnz	w3, #31, 411084 <nftw@plt+0xe504>
  410f40:	add	x3, x1, #0xf
  410f44:	and	x3, x3, #0xfffffffffffffff8
  410f48:	str	x3, [x2]
  410f4c:	ldr	x2, [x1]
  410f50:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410f54:	add	x1, x1, #0x600
  410f58:	b	410b60 <nftw@plt+0xdfe0>
  410f5c:	ldr	x2, [x23, #8]
  410f60:	ldr	x0, [x19, #8]
  410f64:	ldr	w3, [x2, #24]
  410f68:	add	x0, x0, #0xcc
  410f6c:	ldr	x1, [x2]
  410f70:	tbnz	w3, #31, 411068 <nftw@plt+0xe4e8>
  410f74:	add	x3, x1, #0xf
  410f78:	and	x3, x3, #0xfffffffffffffff8
  410f7c:	str	x3, [x2]
  410f80:	ldr	x2, [x1]
  410f84:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  410f88:	add	x1, x1, #0x608
  410f8c:	b	410b60 <nftw@plt+0xdfe0>
  410f90:	mov	x0, x25
  410f94:	mov	x1, #0x1                   	// #1
  410f98:	bl	449870 <_obstack_newchunk@@Base>
  410f9c:	ldr	x0, [x25, #24]
  410fa0:	b	410878 <nftw@plt+0xdcf8>
  410fa4:	mov	x0, x25
  410fa8:	mov	x1, #0x1                   	// #1
  410fac:	bl	449870 <_obstack_newchunk@@Base>
  410fb0:	ldr	x0, [x25, #24]
  410fb4:	b	4108d0 <nftw@plt+0xdd50>
  410fb8:	ldr	w22, [sp, #152]
  410fbc:	b	40fe4c <nftw@plt+0xd2cc>
  410fc0:	add	w4, w3, #0x8
  410fc4:	str	w4, [x2, #24]
  410fc8:	cmp	w4, #0x0
  410fcc:	b.gt	410ea4 <nftw@plt+0xe324>
  410fd0:	ldr	x1, [x2, #8]
  410fd4:	add	x1, x1, w3, sxtw
  410fd8:	b	410eb0 <nftw@plt+0xe330>
  410fdc:	add	w4, w3, #0x8
  410fe0:	str	w4, [x2, #24]
  410fe4:	cmp	w4, #0x0
  410fe8:	b.gt	410e70 <nftw@plt+0xe2f0>
  410fec:	ldr	x1, [x2, #8]
  410ff0:	add	x1, x1, w3, sxtw
  410ff4:	b	410e7c <nftw@plt+0xe2fc>
  410ff8:	add	w4, w3, #0x8
  410ffc:	str	w4, [x2, #24]
  411000:	cmp	w4, #0x0
  411004:	b.gt	410838 <nftw@plt+0xdcb8>
  411008:	ldr	x1, [x2, #8]
  41100c:	add	x1, x1, w3, sxtw
  411010:	b	410844 <nftw@plt+0xdcc4>
  411014:	add	w4, w3, #0x8
  411018:	str	w4, [x2, #24]
  41101c:	cmp	w4, #0x0
  411020:	b.gt	410488 <nftw@plt+0xd908>
  411024:	ldr	x1, [x2, #8]
  411028:	add	x1, x1, w3, sxtw
  41102c:	b	410494 <nftw@plt+0xd914>
  411030:	add	w4, w3, #0x8
  411034:	str	w4, [x2, #24]
  411038:	cmp	w4, #0x0
  41103c:	b.gt	41026c <nftw@plt+0xd6ec>
  411040:	ldr	x1, [x2, #8]
  411044:	add	x1, x1, w3, sxtw
  411048:	b	410278 <nftw@plt+0xd6f8>
  41104c:	add	w4, w3, #0x8
  411050:	str	w4, [x2, #24]
  411054:	cmp	w4, #0x0
  411058:	b.gt	410074 <nftw@plt+0xd4f4>
  41105c:	ldr	x1, [x2, #8]
  411060:	add	x1, x1, w3, sxtw
  411064:	b	410080 <nftw@plt+0xd500>
  411068:	add	w4, w3, #0x8
  41106c:	str	w4, [x2, #24]
  411070:	cmp	w4, #0x0
  411074:	b.gt	410f74 <nftw@plt+0xe3f4>
  411078:	ldr	x1, [x2, #8]
  41107c:	add	x1, x1, w3, sxtw
  411080:	b	410f80 <nftw@plt+0xe400>
  411084:	add	w4, w3, #0x8
  411088:	str	w4, [x2, #24]
  41108c:	cmp	w4, #0x0
  411090:	b.gt	410f40 <nftw@plt+0xe3c0>
  411094:	ldr	x1, [x2, #8]
  411098:	add	x1, x1, w3, sxtw
  41109c:	b	410f4c <nftw@plt+0xe3cc>
  4110a0:	add	w4, w3, #0x8
  4110a4:	str	w4, [x2, #24]
  4110a8:	cmp	w4, #0x0
  4110ac:	b.gt	410f0c <nftw@plt+0xe38c>
  4110b0:	ldr	x1, [x2, #8]
  4110b4:	add	x1, x1, w3, sxtw
  4110b8:	b	410f18 <nftw@plt+0xe398>
  4110bc:	add	w4, w3, #0x8
  4110c0:	str	w4, [x2, #24]
  4110c4:	cmp	w4, #0x0
  4110c8:	b.gt	410ed8 <nftw@plt+0xe358>
  4110cc:	ldr	x1, [x2, #8]
  4110d0:	add	x1, x1, w3, sxtw
  4110d4:	b	410ee4 <nftw@plt+0xe364>
  4110d8:	mov	x0, x3
  4110dc:	b	41017c <nftw@plt+0xd5fc>
  4110e0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4110e4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4110e8:	add	x2, x2, #0x590
  4110ec:	add	x0, x0, #0x518
  4110f0:	mov	w1, #0x551                 	// #1361
  4110f4:	bl	402bf0 <nftw@plt+0x70>
  4110f8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4110fc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411100:	add	x2, x2, #0x590
  411104:	add	x0, x0, #0x518
  411108:	mov	w1, #0x45a                 	// #1114
  41110c:	bl	402bf0 <nftw@plt+0x70>
  411110:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411114:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411118:	add	x2, x2, #0x590
  41111c:	add	x0, x0, #0x518
  411120:	mov	w1, #0x467                 	// #1127
  411124:	bl	402bf0 <nftw@plt+0x70>
  411128:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41112c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411130:	add	x2, x2, #0x590
  411134:	add	x0, x0, #0x518
  411138:	mov	w1, #0x489                 	// #1161
  41113c:	bl	402bf0 <nftw@plt+0x70>
  411140:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411144:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411148:	add	x2, x2, #0x590
  41114c:	add	x0, x0, #0x518
  411150:	mov	w1, #0x48b                 	// #1163
  411154:	bl	402bf0 <nftw@plt+0x70>
  411158:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41115c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411160:	add	x2, x2, #0x590
  411164:	add	x0, x0, #0x518
  411168:	mov	w1, #0x48a                 	// #1162
  41116c:	bl	402bf0 <nftw@plt+0x70>
  411170:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411174:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411178:	add	x2, x2, #0x590
  41117c:	add	x0, x0, #0x518
  411180:	mov	w1, #0x466                 	// #1126
  411184:	bl	402bf0 <nftw@plt+0x70>
  411188:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41118c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411190:	add	x2, x2, #0x590
  411194:	add	x0, x0, #0x518
  411198:	mov	w1, #0x464                 	// #1124
  41119c:	bl	402bf0 <nftw@plt+0x70>
  4111a0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111a4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111a8:	add	x2, x2, #0x590
  4111ac:	add	x0, x0, #0x518
  4111b0:	mov	w1, #0x4a4                 	// #1188
  4111b4:	bl	402bf0 <nftw@plt+0x70>
  4111b8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111bc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111c0:	add	x2, x2, #0x590
  4111c4:	add	x0, x0, #0x518
  4111c8:	mov	w1, #0x41e                 	// #1054
  4111cc:	bl	402bf0 <nftw@plt+0x70>
  4111d0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111d4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111d8:	add	x2, x2, #0x590
  4111dc:	add	x0, x0, #0x518
  4111e0:	mov	w1, #0x4cf                 	// #1231
  4111e4:	bl	402bf0 <nftw@plt+0x70>
  4111e8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111ec:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4111f0:	add	x2, x2, #0x590
  4111f4:	add	x0, x0, #0x518
  4111f8:	mov	w1, #0x4c5                 	// #1221
  4111fc:	bl	402bf0 <nftw@plt+0x70>
  411200:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411204:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411208:	add	x2, x2, #0x590
  41120c:	add	x0, x0, #0x518
  411210:	mov	w1, #0x450                 	// #1104
  411214:	bl	402bf0 <nftw@plt+0x70>
  411218:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41121c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411220:	add	x2, x2, #0x590
  411224:	add	x0, x0, #0x518
  411228:	mov	w1, #0x45e                 	// #1118
  41122c:	bl	402bf0 <nftw@plt+0x70>
  411230:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411234:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411238:	add	x2, x2, #0x590
  41123c:	add	x0, x0, #0x518
  411240:	mov	w1, #0x4d5                 	// #1237
  411244:	bl	402bf0 <nftw@plt+0x70>
  411248:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41124c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411250:	add	x2, x2, #0x590
  411254:	add	x0, x0, #0x518
  411258:	mov	w1, #0x4ca                 	// #1226
  41125c:	bl	402bf0 <nftw@plt+0x70>
  411260:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411264:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411268:	add	x2, x2, #0x590
  41126c:	add	x0, x0, #0x518
  411270:	mov	w1, #0x4dc                 	// #1244
  411274:	bl	402bf0 <nftw@plt+0x70>
  411278:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41127c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411280:	add	x2, x2, #0x590
  411284:	add	x0, x0, #0x518
  411288:	mov	w1, #0x4c0                 	// #1216
  41128c:	bl	402bf0 <nftw@plt+0x70>
  411290:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411294:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411298:	add	x2, x2, #0x590
  41129c:	add	x0, x0, #0x518
  4112a0:	mov	w1, #0x571                 	// #1393
  4112a4:	bl	402bf0 <nftw@plt+0x70>
  4112a8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112ac:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112b0:	add	x2, x2, #0x590
  4112b4:	add	x0, x0, #0x518
  4112b8:	mov	w1, #0x56d                 	// #1389
  4112bc:	bl	402bf0 <nftw@plt+0x70>
  4112c0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112c4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112c8:	add	x2, x2, #0x590
  4112cc:	add	x0, x0, #0x518
  4112d0:	mov	w1, #0x54b                 	// #1355
  4112d4:	bl	402bf0 <nftw@plt+0x70>
  4112d8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112dc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112e0:	add	x2, x2, #0x590
  4112e4:	add	x0, x0, #0x518
  4112e8:	mov	w1, #0x54f                 	// #1359
  4112ec:	bl	402bf0 <nftw@plt+0x70>
  4112f0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112f4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4112f8:	add	x2, x2, #0x590
  4112fc:	add	x0, x0, #0x518
  411300:	mov	w1, #0x492                 	// #1170
  411304:	bl	402bf0 <nftw@plt+0x70>
  411308:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41130c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411310:	add	x2, x2, #0x590
  411314:	add	x0, x0, #0x518
  411318:	mov	w1, #0x496                 	// #1174
  41131c:	bl	402bf0 <nftw@plt+0x70>
  411320:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411324:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411328:	add	x2, x2, #0x590
  41132c:	add	x0, x0, #0x518
  411330:	mov	w1, #0x480                 	// #1152
  411334:	bl	402bf0 <nftw@plt+0x70>
  411338:	stp	x29, x30, [sp, #-32]!
  41133c:	mov	x2, #0x1                   	// #1
  411340:	mov	x29, sp
  411344:	stp	x19, x20, [sp, #16]
  411348:	mov	x19, x0
  41134c:	ldur	x20, [x0, #36]
  411350:	stur	x2, [x0, #36]
  411354:	bl	40fc78 <nftw@plt+0xd0f8>
  411358:	mov	x0, x19
  41135c:	bl	40f9f8 <nftw@plt+0xce78>
  411360:	stur	x20, [x19, #36]
  411364:	ldp	x19, x20, [sp, #16]
  411368:	ldp	x29, x30, [sp], #32
  41136c:	ret
  411370:	stp	x29, x30, [sp, #-288]!
  411374:	mov	x29, sp
  411378:	add	x8, sp, #0xf0
  41137c:	add	x9, sp, #0x120
  411380:	stp	x19, x20, [sp, #16]
  411384:	mov	x20, x0
  411388:	mov	x19, x1
  41138c:	mov	w0, #0xffffff80            	// #-128
  411390:	mov	w1, #0xffffffd0            	// #-48
  411394:	stp	x9, x9, [sp, #40]
  411398:	str	x8, [sp, #56]
  41139c:	stp	w1, w0, [sp, #64]
  4113a0:	str	q0, [sp, #112]
  4113a4:	str	q1, [sp, #128]
  4113a8:	str	q2, [sp, #144]
  4113ac:	str	q3, [sp, #160]
  4113b0:	str	q4, [sp, #176]
  4113b4:	str	q5, [sp, #192]
  4113b8:	str	q6, [sp, #208]
  4113bc:	str	q7, [sp, #224]
  4113c0:	stp	x2, x3, [sp, #240]
  4113c4:	stp	x4, x5, [sp, #256]
  4113c8:	stp	x6, x7, [sp, #272]
  4113cc:	bl	402aa0 <__errno_location@plt>
  4113d0:	mov	x2, x0
  4113d4:	add	x3, sp, #0x28
  4113d8:	mov	x0, x20
  4113dc:	add	x1, sp, #0x48
  4113e0:	stp	x19, x3, [sp, #72]
  4113e4:	ldr	w2, [x2]
  4113e8:	str	w2, [sp, #88]
  4113ec:	bl	411338 <nftw@plt+0xe7b8>
  4113f0:	ldp	x19, x20, [sp, #16]
  4113f4:	ldp	x29, x30, [sp], #288
  4113f8:	ret
  4113fc:	nop
  411400:	stp	x29, x30, [sp, #-288]!
  411404:	mov	x29, sp
  411408:	add	x8, sp, #0xf0
  41140c:	add	x9, sp, #0x120
  411410:	stp	x19, x20, [sp, #16]
  411414:	mov	x19, x0
  411418:	mov	x20, x1
  41141c:	mov	w0, #0xffffff80            	// #-128
  411420:	mov	w1, #0xffffffd0            	// #-48
  411424:	stp	x9, x9, [sp, #40]
  411428:	str	x8, [sp, #56]
  41142c:	stp	w1, w0, [sp, #64]
  411430:	str	q0, [sp, #112]
  411434:	str	q1, [sp, #128]
  411438:	str	q2, [sp, #144]
  41143c:	str	q3, [sp, #160]
  411440:	str	q4, [sp, #176]
  411444:	str	q5, [sp, #192]
  411448:	str	q6, [sp, #208]
  41144c:	str	q7, [sp, #224]
  411450:	stp	x2, x3, [sp, #240]
  411454:	stp	x4, x5, [sp, #256]
  411458:	stp	x6, x7, [sp, #272]
  41145c:	bl	402aa0 <__errno_location@plt>
  411460:	mov	x2, x0
  411464:	add	x3, sp, #0x28
  411468:	add	x1, sp, #0x48
  41146c:	mov	x0, x19
  411470:	stp	x20, x3, [sp, #72]
  411474:	ldr	w2, [x2]
  411478:	str	w2, [sp, #88]
  41147c:	bl	40fc78 <nftw@plt+0xd0f8>
  411480:	mov	x0, x19
  411484:	bl	40f9f8 <nftw@plt+0xce78>
  411488:	ldp	x19, x20, [sp, #16]
  41148c:	ldp	x29, x30, [sp], #288
  411490:	ret
  411494:	nop
  411498:	stp	x29, x30, [sp, #-112]!
  41149c:	mov	x29, sp
  4114a0:	stp	x21, x22, [sp, #32]
  4114a4:	mov	x21, x0
  4114a8:	bl	4024f0 <strlen@plt>
  4114ac:	cbz	x0, 4116a4 <nftw@plt+0xeb24>
  4114b0:	mov	w22, #0x1                   	// #1
  4114b4:	stp	x19, x20, [sp, #16]
  4114b8:	mov	x20, x0
  4114bc:	mov	x19, #0x0                   	// #0
  4114c0:	b	4114f0 <nftw@plt+0xe970>
  4114c4:	ldr	w1, [sp, #104]
  4114c8:	add	x19, x19, x2
  4114cc:	sub	w0, w1, #0x7f
  4114d0:	cmp	w1, #0x1f
  4114d4:	b.ls	411508 <nftw@plt+0xe988>  // b.plast
  4114d8:	cmp	w0, #0x20
  4114dc:	b.ls	411508 <nftw@plt+0xe988>  // b.plast
  4114e0:	cmp	x2, #0x2
  4114e4:	csel	w22, w22, wzr, cc  // cc = lo, ul, last
  4114e8:	cmp	x20, x19
  4114ec:	b.ls	4115a0 <nftw@plt+0xea20>  // b.plast
  4114f0:	add	x2, sp, #0x68
  4114f4:	sub	x1, x20, x19
  4114f8:	add	x0, x21, x19
  4114fc:	bl	40ec10 <nftw@plt+0xc090>
  411500:	sxtw	x2, w0
  411504:	cbnz	w0, 4114c4 <nftw@plt+0xe944>
  411508:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  41150c:	stp	x23, x24, [sp, #48]
  411510:	lsl	x0, x20, #2
  411514:	ldr	x1, [x1, #1288]
  411518:	add	x0, x0, #0x1
  41151c:	mov	x19, x21
  411520:	add	x20, x21, x20
  411524:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411528:	add	x23, x23, #0x610
  41152c:	blr	x1
  411530:	mov	x22, x0
  411534:	mov	x21, x0
  411538:	b	411550 <nftw@plt+0xe9d0>
  41153c:	strb	w2, [x4], #1
  411540:	add	x19, x19, #0x1
  411544:	cmp	x20, x19
  411548:	mov	x21, x4
  41154c:	b.eq	411584 <nftw@plt+0xea04>  // b.none
  411550:	ldrb	w2, [x19]
  411554:	mov	x4, x21
  411558:	sub	w3, w2, #0x20
  41155c:	and	w3, w3, #0xff
  411560:	cmp	w3, #0x5e
  411564:	b.ls	41153c <nftw@plt+0xe9bc>  // b.plast
  411568:	mov	x0, x21
  41156c:	mov	x1, x23
  411570:	add	x19, x19, #0x1
  411574:	bl	4025b0 <sprintf@plt>
  411578:	add	x21, x21, #0x4
  41157c:	cmp	x20, x19
  411580:	b.ne	411550 <nftw@plt+0xe9d0>  // b.any
  411584:	strb	wzr, [x21]
  411588:	ldp	x19, x20, [sp, #16]
  41158c:	ldp	x23, x24, [sp, #48]
  411590:	mov	x0, x22
  411594:	ldp	x21, x22, [sp, #32]
  411598:	ldp	x29, x30, [sp], #112
  41159c:	ret
  4115a0:	cbnz	w22, 4116a0 <nftw@plt+0xeb20>
  4115a4:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4115a8:	ldrb	w0, [x0, #2224]
  4115ac:	cbnz	w0, 4116a0 <nftw@plt+0xeb20>
  4115b0:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4115b4:	stp	x23, x24, [sp, #48]
  4115b8:	ldr	x0, [x0, #2216]
  4115bc:	stp	x25, x26, [sp, #64]
  4115c0:	cbz	x0, 4116b8 <nftw@plt+0xeb38>
  4115c4:	lsl	x19, x20, #2
  4115c8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4115cc:	adrp	x24, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4115d0:	add	x1, x1, #0x618
  4115d4:	add	x25, x19, #0x1
  4115d8:	bl	4029a0 <iconv_open@plt>
  4115dc:	add	x26, x24, #0x508
  4115e0:	mov	x23, x0
  4115e4:	cmn	x0, #0x1
  4115e8:	b.eq	4116c0 <nftw@plt+0xeb40>  // b.none
  4115ec:	ldr	x1, [x26]
  4115f0:	sub	x2, x25, #0x1
  4115f4:	str	x21, [sp, #80]
  4115f8:	mov	x0, x25
  4115fc:	stp	x20, x2, [sp, #96]
  411600:	blr	x1
  411604:	mov	x22, x0
  411608:	mov	x4, #0x0                   	// #0
  41160c:	mov	x3, #0x0                   	// #0
  411610:	mov	x2, #0x0                   	// #0
  411614:	mov	x1, #0x0                   	// #0
  411618:	mov	x0, x23
  41161c:	str	x22, [sp, #88]
  411620:	bl	4028a0 <iconv@plt>
  411624:	mov	x5, x0
  411628:	add	x4, sp, #0x68
  41162c:	add	x3, sp, #0x58
  411630:	add	x2, sp, #0x60
  411634:	add	x1, sp, #0x50
  411638:	mov	x0, x23
  41163c:	cmn	x5, #0x1
  411640:	b.eq	41174c <nftw@plt+0xebcc>  // b.none
  411644:	bl	4028a0 <iconv@plt>
  411648:	mov	x5, x0
  41164c:	cmn	x0, #0x1
  411650:	b.eq	41173c <nftw@plt+0xebbc>  // b.none
  411654:	ldr	x6, [sp, #96]
  411658:	add	x4, sp, #0x68
  41165c:	add	x3, sp, #0x58
  411660:	mov	x0, x23
  411664:	mov	x2, #0x0                   	// #0
  411668:	mov	x1, #0x0                   	// #0
  41166c:	cbnz	x6, 41173c <nftw@plt+0xebbc>
  411670:	cbnz	x5, 41174c <nftw@plt+0xebcc>
  411674:	bl	4028a0 <iconv@plt>
  411678:	cmn	x0, #0x1
  41167c:	b.eq	41173c <nftw@plt+0xebbc>  // b.none
  411680:	ldr	x1, [sp, #88]
  411684:	mov	x0, x23
  411688:	strb	wzr, [x1]
  41168c:	bl	402560 <iconv_close@plt>
  411690:	ldp	x19, x20, [sp, #16]
  411694:	ldp	x23, x24, [sp, #48]
  411698:	ldp	x25, x26, [sp, #64]
  41169c:	b	411590 <nftw@plt+0xea10>
  4116a0:	ldp	x19, x20, [sp, #16]
  4116a4:	mov	x22, x21
  4116a8:	mov	x0, x22
  4116ac:	ldp	x21, x22, [sp, #32]
  4116b0:	ldp	x29, x30, [sp], #112
  4116b4:	ret
  4116b8:	lsl	x19, x20, #2
  4116bc:	adrp	x24, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4116c0:	ldr	x1, [x24, #1288]
  4116c4:	add	x0, x19, x20
  4116c8:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4116cc:	mov	x19, #0x0                   	// #0
  4116d0:	lsl	x0, x0, #1
  4116d4:	add	x25, x25, #0x620
  4116d8:	add	x0, x0, #0x1
  4116dc:	blr	x1
  4116e0:	mov	x22, x0
  4116e4:	mov	x24, x0
  4116e8:	b	411704 <nftw@plt+0xeb84>
  4116ec:	ldrb	w0, [x21, x19]
  4116f0:	strb	w0, [x2], #1
  4116f4:	mov	x24, x2
  4116f8:	add	x19, x19, x23
  4116fc:	cmp	x20, x19
  411700:	b.ls	411758 <nftw@plt+0xebd8>  // b.plast
  411704:	add	x2, sp, #0x68
  411708:	sub	x1, x20, x19
  41170c:	add	x0, x21, x19
  411710:	bl	40ec10 <nftw@plt+0xc090>
  411714:	sxtw	x23, w0
  411718:	mov	x2, x24
  41171c:	mov	x0, x24
  411720:	cmp	w23, #0x1
  411724:	b.eq	4116ec <nftw@plt+0xeb6c>  // b.none
  411728:	ldr	w2, [sp, #104]
  41172c:	add	x24, x24, #0xa
  411730:	mov	x1, x25
  411734:	bl	4025b0 <sprintf@plt>
  411738:	b	4116f8 <nftw@plt+0xeb78>
  41173c:	bl	402aa0 <__errno_location@plt>
  411740:	ldr	w0, [x0]
  411744:	cmp	w0, #0x7
  411748:	b.eq	41176c <nftw@plt+0xebec>  // b.none
  41174c:	mov	x0, x23
  411750:	bl	402560 <iconv_close@plt>
  411754:	b	4116c0 <nftw@plt+0xeb40>
  411758:	strb	wzr, [x24]
  41175c:	ldp	x19, x20, [sp, #16]
  411760:	ldp	x23, x24, [sp, #48]
  411764:	ldp	x25, x26, [sp, #64]
  411768:	b	411590 <nftw@plt+0xea10>
  41176c:	ldr	x1, [x26, #8]
  411770:	lsl	x25, x25, #1
  411774:	mov	x0, x22
  411778:	blr	x1
  41177c:	b	4115ec <nftw@plt+0xea6c>
  411780:	stp	x29, x30, [sp, #-48]!
  411784:	mov	x29, sp
  411788:	stp	x19, x20, [sp, #16]
  41178c:	mov	x20, x1
  411790:	mov	x19, x0
  411794:	ldr	x1, [x1, #8]
  411798:	cbnz	x1, 4117cc <nftw@plt+0xec4c>
  41179c:	ldr	x2, [x20]
  4117a0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4117a4:	ldr	x0, [x0, #8]
  4117a8:	add	x1, x1, #0x628
  4117ac:	add	x0, x0, #0xcc
  4117b0:	bl	4025b0 <sprintf@plt>
  4117b4:	mov	x0, x19
  4117b8:	ldr	x1, [x19, #8]
  4117bc:	ldp	x19, x20, [sp, #16]
  4117c0:	add	x1, x1, #0xcc
  4117c4:	ldp	x29, x30, [sp], #48
  4117c8:	b	40f9a8 <nftw@plt+0xce28>
  4117cc:	mov	w1, #0x5b                  	// #91
  4117d0:	str	x21, [sp, #32]
  4117d4:	bl	40f3e8 <nftw@plt+0xc868>
  4117d8:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4117dc:	ldr	x2, [x20]
  4117e0:	add	x21, x21, #0x628
  4117e4:	ldr	x0, [x19, #8]
  4117e8:	mov	x1, x21
  4117ec:	add	x0, x0, #0xcc
  4117f0:	bl	4025b0 <sprintf@plt>
  4117f4:	ldr	x1, [x19, #8]
  4117f8:	mov	x0, x19
  4117fc:	add	x1, x1, #0xcc
  411800:	bl	40f9a8 <nftw@plt+0xce28>
  411804:	mov	x0, x19
  411808:	mov	w1, #0x2c                  	// #44
  41180c:	bl	40f3e8 <nftw@plt+0xc868>
  411810:	ldr	x2, [x20, #8]
  411814:	mov	x1, x21
  411818:	ldr	x0, [x19, #8]
  41181c:	add	x0, x0, #0xcc
  411820:	bl	4025b0 <sprintf@plt>
  411824:	ldr	x1, [x19, #8]
  411828:	mov	x0, x19
  41182c:	add	x1, x1, #0xcc
  411830:	bl	40f9a8 <nftw@plt+0xce28>
  411834:	mov	x0, x19
  411838:	mov	w1, #0x5d                  	// #93
  41183c:	ldp	x19, x20, [sp, #16]
  411840:	ldr	x21, [sp, #32]
  411844:	ldp	x29, x30, [sp], #48
  411848:	b	40f3e8 <nftw@plt+0xc868>
  41184c:	nop
  411850:	stp	x29, x30, [sp, #-48]!
  411854:	mov	x29, sp
  411858:	stp	x19, x20, [sp, #16]
  41185c:	mov	x20, x1
  411860:	mov	x19, x0
  411864:	ldr	x1, [x1, #8]
  411868:	cbnz	x1, 41189c <nftw@plt+0xed1c>
  41186c:	ldr	x2, [x20]
  411870:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411874:	ldr	x0, [x0, #8]
  411878:	add	x1, x1, #0x628
  41187c:	add	x0, x0, #0xcc
  411880:	bl	4025b0 <sprintf@plt>
  411884:	mov	x0, x19
  411888:	ldr	x1, [x19, #8]
  41188c:	ldp	x19, x20, [sp, #16]
  411890:	add	x1, x1, #0xcc
  411894:	ldp	x29, x30, [sp], #48
  411898:	b	40f9a8 <nftw@plt+0xce28>
  41189c:	mov	w1, #0x5b                  	// #91
  4118a0:	str	x21, [sp, #32]
  4118a4:	bl	40f3e8 <nftw@plt+0xc868>
  4118a8:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4118ac:	ldr	x2, [x20]
  4118b0:	add	x21, x21, #0x628
  4118b4:	ldr	x0, [x19, #8]
  4118b8:	mov	x1, x21
  4118bc:	add	x0, x0, #0xcc
  4118c0:	bl	4025b0 <sprintf@plt>
  4118c4:	ldr	x1, [x19, #8]
  4118c8:	mov	x0, x19
  4118cc:	add	x1, x1, #0xcc
  4118d0:	bl	40f9a8 <nftw@plt+0xce28>
  4118d4:	mov	x0, x19
  4118d8:	mov	w1, #0x2c                  	// #44
  4118dc:	bl	40f3e8 <nftw@plt+0xc868>
  4118e0:	ldr	x2, [x20, #8]
  4118e4:	mov	x1, x21
  4118e8:	ldr	x0, [x19, #8]
  4118ec:	add	x0, x0, #0xcc
  4118f0:	bl	4025b0 <sprintf@plt>
  4118f4:	ldr	x1, [x19, #8]
  4118f8:	mov	x0, x19
  4118fc:	add	x1, x1, #0xcc
  411900:	bl	40f9a8 <nftw@plt+0xce28>
  411904:	mov	x0, x19
  411908:	mov	w1, #0x5d                  	// #93
  41190c:	ldp	x19, x20, [sp, #16]
  411910:	ldr	x21, [sp, #32]
  411914:	ldp	x29, x30, [sp], #48
  411918:	b	40f3e8 <nftw@plt+0xc868>
  41191c:	nop
  411920:	stp	x29, x30, [sp, #-48]!
  411924:	mov	x29, sp
  411928:	stp	x19, x20, [sp, #16]
  41192c:	mov	x20, x1
  411930:	ldrh	w1, [x1, #2]
  411934:	mov	x19, x0
  411938:	cbnz	w1, 41196c <nftw@plt+0xedec>
  41193c:	ldrh	w2, [x20]
  411940:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411944:	ldr	x0, [x0, #8]
  411948:	add	x1, x1, #0x628
  41194c:	add	x0, x0, #0xcc
  411950:	bl	4025b0 <sprintf@plt>
  411954:	mov	x0, x19
  411958:	ldr	x1, [x19, #8]
  41195c:	ldp	x19, x20, [sp, #16]
  411960:	add	x1, x1, #0xcc
  411964:	ldp	x29, x30, [sp], #48
  411968:	b	40f9a8 <nftw@plt+0xce28>
  41196c:	mov	w1, #0x5b                  	// #91
  411970:	str	x21, [sp, #32]
  411974:	bl	40f3e8 <nftw@plt+0xc868>
  411978:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41197c:	ldrh	w2, [x20]
  411980:	add	x21, x21, #0x628
  411984:	ldr	x0, [x19, #8]
  411988:	mov	x1, x21
  41198c:	add	x0, x0, #0xcc
  411990:	bl	4025b0 <sprintf@plt>
  411994:	ldr	x1, [x19, #8]
  411998:	mov	x0, x19
  41199c:	add	x1, x1, #0xcc
  4119a0:	bl	40f9a8 <nftw@plt+0xce28>
  4119a4:	mov	x0, x19
  4119a8:	mov	w1, #0x2c                  	// #44
  4119ac:	bl	40f3e8 <nftw@plt+0xc868>
  4119b0:	ldrh	w2, [x20, #2]
  4119b4:	mov	x1, x21
  4119b8:	ldr	x0, [x19, #8]
  4119bc:	add	x0, x0, #0xcc
  4119c0:	bl	4025b0 <sprintf@plt>
  4119c4:	ldr	x1, [x19, #8]
  4119c8:	mov	x0, x19
  4119cc:	add	x1, x1, #0xcc
  4119d0:	bl	40f9a8 <nftw@plt+0xce28>
  4119d4:	mov	x0, x19
  4119d8:	mov	w1, #0x5d                  	// #93
  4119dc:	ldp	x19, x20, [sp, #16]
  4119e0:	ldr	x21, [sp, #32]
  4119e4:	ldp	x29, x30, [sp], #48
  4119e8:	b	40f3e8 <nftw@plt+0xc868>
  4119ec:	nop
  4119f0:	stp	x29, x30, [sp, #-64]!
  4119f4:	mov	w0, #0x0                   	// #0
  4119f8:	mov	x29, sp
  4119fc:	stp	x19, x20, [sp, #16]
  411a00:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x105a0>
  411a04:	add	x19, x19, #0xbd0
  411a08:	mov	x1, x19
  411a0c:	stp	x21, x22, [sp, #32]
  411a10:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x425a0>
  411a14:	str	x23, [sp, #48]
  411a18:	bl	402b60 <setlocale@plt>
  411a1c:	mov	x1, x19
  411a20:	mov	w0, #0x5                   	// #5
  411a24:	bl	402b60 <setlocale@plt>
  411a28:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411a2c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411a30:	add	x1, x1, #0x650
  411a34:	add	x19, x19, #0x668
  411a38:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  411a3c:	mov	x0, x19
  411a40:	bl	4026b0 <bindtextdomain@plt>
  411a44:	mov	x0, x19
  411a48:	bl	402870 <textdomain@plt>
  411a4c:	add	x21, x21, #0xd00
  411a50:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411a54:	add	x0, x0, #0x670
  411a58:	bl	402b10 <gettext@plt>
  411a5c:	add	x23, x20, #0x518
  411a60:	str	x0, [x20, #1304]
  411a64:	mov	x0, x21
  411a68:	bl	402b10 <gettext@plt>
  411a6c:	mov	x1, x0
  411a70:	adrp	x22, 48d000 <__environ@@GLIBC_2.17+0xa68>
  411a74:	mov	w0, #0xe                   	// #14
  411a78:	str	x1, [x23, #8]
  411a7c:	bl	402640 <nl_langinfo@plt>
  411a80:	str	x0, [x22, #2216]
  411a84:	cbz	x0, 411aa8 <nftw@plt+0xef28>
  411a88:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411a8c:	mov	x19, x0
  411a90:	add	x1, x1, #0x678
  411a94:	bl	402720 <strcasecmp@plt>
  411a98:	cbnz	w0, 411b14 <nftw@plt+0xef94>
  411a9c:	add	x0, x22, #0x8a8
  411aa0:	mov	w1, #0x1                   	// #1
  411aa4:	strb	w1, [x0, #8]
  411aa8:	ldr	x0, [x20, #1304]
  411aac:	ldrb	w1, [x0]
  411ab0:	cmp	w1, #0x60
  411ab4:	b.ne	411b00 <nftw@plt+0xef80>  // b.any
  411ab8:	ldrb	w0, [x0, #1]
  411abc:	cbnz	w0, 411b00 <nftw@plt+0xef80>
  411ac0:	ldr	x0, [x23, #8]
  411ac4:	ldrb	w1, [x0]
  411ac8:	cmp	w1, #0x27
  411acc:	b.ne	411b00 <nftw@plt+0xef80>  // b.any
  411ad0:	ldrb	w0, [x0, #1]
  411ad4:	cbnz	w0, 411b00 <nftw@plt+0xef80>
  411ad8:	add	x22, x22, #0x8a8
  411adc:	str	x21, [x20, #1304]
  411ae0:	ldrb	w0, [x22, #8]
  411ae4:	cbz	w0, 411b00 <nftw@plt+0xef80>
  411ae8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411aec:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411af0:	add	x1, x1, #0x688
  411af4:	add	x0, x0, #0x690
  411af8:	str	x1, [x20, #1304]
  411afc:	str	x0, [x23, #8]
  411b00:	ldp	x19, x20, [sp, #16]
  411b04:	ldp	x21, x22, [sp, #32]
  411b08:	ldr	x23, [sp, #48]
  411b0c:	ldp	x29, x30, [sp], #64
  411b10:	ret
  411b14:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411b18:	mov	x0, x19
  411b1c:	add	x1, x1, #0x680
  411b20:	bl	402720 <strcasecmp@plt>
  411b24:	cbnz	w0, 411aa8 <nftw@plt+0xef28>
  411b28:	b	411a9c <nftw@plt+0xef1c>
  411b2c:	nop
  411b30:	stp	x29, x30, [sp, #-32]!
  411b34:	mov	x2, #0x0                   	// #0
  411b38:	mov	x29, sp
  411b3c:	stp	x19, x20, [sp, #16]
  411b40:	mov	x19, x0
  411b44:	mov	x1, x19
  411b48:	mov	x0, #0x0                   	// #0
  411b4c:	bl	402510 <mbstowcs@plt>
  411b50:	add	x2, x0, #0x1
  411b54:	mov	x1, x19
  411b58:	mov	x19, x0
  411b5c:	lsl	x3, x2, #2
  411b60:	add	x3, x3, #0xf
  411b64:	and	x3, x3, #0xfffffffffffffff0
  411b68:	sub	sp, sp, x3
  411b6c:	mov	x20, sp
  411b70:	mov	x0, x20
  411b74:	bl	402510 <mbstowcs@plt>
  411b78:	mov	x1, x19
  411b7c:	mov	x0, x20
  411b80:	bl	402690 <wcswidth@plt>
  411b84:	mov	sp, x29
  411b88:	sxtw	x0, w0
  411b8c:	ldp	x19, x20, [sp, #16]
  411b90:	ldp	x29, x30, [sp], #32
  411b94:	ret
  411b98:	stp	x29, x30, [sp, #-32]!
  411b9c:	mov	x29, sp
  411ba0:	stp	x19, x20, [sp, #16]
  411ba4:	bl	411b30 <nftw@plt+0xefb0>
  411ba8:	mov	x19, x0
  411bac:	add	x0, x0, #0x1
  411bb0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  411bb4:	mov	x20, x0
  411bb8:	mov	x2, x19
  411bbc:	mov	w1, #0x20                  	// #32
  411bc0:	bl	4026f0 <memset@plt>
  411bc4:	mov	x0, x20
  411bc8:	strb	wzr, [x20, x19]
  411bcc:	ldp	x19, x20, [sp, #16]
  411bd0:	ldp	x29, x30, [sp], #32
  411bd4:	ret
  411bd8:	cmp	w0, w1
  411bdc:	b.cs	411c08 <nftw@plt+0xf088>  // b.hs, b.nlast
  411be0:	mov	w2, #0x4                   	// #4
  411be4:	cbz	w0, 411bfc <nftw@plt+0xf07c>
  411be8:	lsl	w3, w0, #1
  411bec:	cmp	w0, #0xf
  411bf0:	add	w2, w3, w0
  411bf4:	lsr	w2, w2, #1
  411bf8:	csel	w2, w2, w3, hi  // hi = pmore
  411bfc:	cmp	w2, w1
  411c00:	csel	w0, w2, w1, cs  // cs = hs, nlast
  411c04:	ret
  411c08:	stp	x29, x30, [sp, #-16]!
  411c0c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411c10:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411c14:	mov	x29, sp
  411c18:	add	x2, x2, #0x6f0
  411c1c:	add	x0, x0, #0x708
  411c20:	mov	w1, #0xa2                  	// #162
  411c24:	bl	402bf0 <nftw@plt+0x70>
  411c28:	sub	sp, sp, #0xd0
  411c2c:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  411c30:	mov	w0, #0xa                   	// #10
  411c34:	stp	x29, x30, [sp, #16]
  411c38:	add	x29, sp, #0x10
  411c3c:	ldr	x1, [x1, #1392]
  411c40:	stp	x19, x20, [sp, #32]
  411c44:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  411c48:	add	x19, x19, #0x8b8
  411c4c:	stp	x21, x22, [sp, #48]
  411c50:	stp	x23, x24, [sp, #64]
  411c54:	stp	x25, x26, [sp, #80]
  411c58:	stp	x27, x28, [sp, #96]
  411c5c:	bl	4025e0 <fputc@plt>
  411c60:	mov	x1, #0x10                  	// #16
  411c64:	ldr	x2, [x19, #40]
  411c68:	ldp	x3, x0, [x2, #16]
  411c6c:	sub	x0, x3, x0
  411c70:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  411c74:	ldr	x1, [x19, #40]
  411c78:	mov	x21, x0
  411c7c:	ldp	x0, x2, [x1]
  411c80:	add	x2, x0, x2, lsl #4
  411c84:	cmp	x0, x2
  411c88:	b.cs	411cac <nftw@plt+0xf12c>  // b.hs, b.nlast
  411c8c:	nop
  411c90:	ldr	x3, [x0]
  411c94:	mov	x4, x0
  411c98:	add	x0, x0, #0x10
  411c9c:	cmp	x3, #0x1
  411ca0:	b.hi	411fbc <nftw@plt+0xf43c>  // b.pmore
  411ca4:	cmp	x2, x0
  411ca8:	b.hi	411c90 <nftw@plt+0xf110>  // b.pmore
  411cac:	mov	x1, #0x0                   	// #0
  411cb0:	mov	w20, #0xffffffff            	// #-1
  411cb4:	nop
  411cb8:	adrp	x23, 412000 <nftw@plt+0xf480>
  411cbc:	add	x23, x23, #0x970
  411cc0:	mov	x3, x23
  411cc4:	mov	x0, x21
  411cc8:	mov	x2, #0x10                  	// #16
  411ccc:	bl	416cd0 <nftw@plt+0x14150>
  411cd0:	ldr	x2, [x19, #40]
  411cd4:	mov	x1, #0x10                  	// #16
  411cd8:	ldp	x3, x0, [x2, #16]
  411cdc:	sub	x0, x3, x0
  411ce0:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  411ce4:	ldr	x2, [x19, #40]
  411ce8:	mov	x22, x0
  411cec:	ldp	x1, x0, [x2]
  411cf0:	add	x0, x1, x0, lsl #4
  411cf4:	cmp	x1, x0
  411cf8:	b.cs	411d1c <nftw@plt+0xf19c>  // b.hs, b.nlast
  411cfc:	nop
  411d00:	ldr	x4, [x1]
  411d04:	mov	x3, x1
  411d08:	add	x1, x1, #0x10
  411d0c:	cmp	x4, #0x1
  411d10:	b.hi	41201c <nftw@plt+0xf49c>  // b.pmore
  411d14:	cmp	x0, x1
  411d18:	b.hi	411d00 <nftw@plt+0xf180>  // b.pmore
  411d1c:	mov	x0, x22
  411d20:	mov	x3, x23
  411d24:	mov	x2, #0x10                  	// #16
  411d28:	mov	x1, #0x0                   	// #0
  411d2c:	bl	416cd0 <nftw@plt+0x14150>
  411d30:	stp	xzr, xzr, [sp, #152]
  411d34:	mov	x0, #0x1                   	// #1
  411d38:	stp	xzr, x0, [sp, #168]
  411d3c:	stp	xzr, xzr, [sp, #184]
  411d40:	str	xzr, [sp, #200]
  411d44:	nop
  411d48:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  411d4c:	add	x19, x19, #0x570
  411d50:	mov	x0, x22
  411d54:	mov	x22, #0x8c                  	// #140
  411d58:	bl	402910 <free@plt>
  411d5c:	nop
  411d60:	ldr	x1, [x19]
  411d64:	mov	w0, #0x2d                  	// #45
  411d68:	bl	4025e0 <fputc@plt>
  411d6c:	subs	x22, x22, #0x1
  411d70:	b.ne	411d60 <nftw@plt+0xf1e0>  // b.any
  411d74:	ldr	x1, [x19]
  411d78:	mov	x2, #0x8c                  	// #140
  411d7c:	mov	w0, #0xa                   	// #10
  411d80:	str	x2, [sp, #120]
  411d84:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411d88:	adrp	x27, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411d8c:	bl	4025e0 <fputc@plt>
  411d90:	add	x28, x28, #0x718
  411d94:	ldr	x0, [x19]
  411d98:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411d9c:	add	x1, x1, #0x780
  411da0:	str	x1, [sp]
  411da4:	add	x27, x27, #0x728
  411da8:	adrp	x26, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411dac:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411db0:	add	x26, x26, #0x730
  411db4:	add	x25, x25, #0x738
  411db8:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411dbc:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411dc0:	add	x24, x24, #0x740
  411dc4:	add	x23, x23, #0x750
  411dc8:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411dcc:	add	x22, x22, #0x760
  411dd0:	mov	x7, x28
  411dd4:	mov	x6, x27
  411dd8:	mov	x5, x26
  411ddc:	mov	x4, x25
  411de0:	mov	x3, x24
  411de4:	mov	x2, x23
  411de8:	str	x1, [sp, #128]
  411dec:	mov	x1, x22
  411df0:	bl	402b30 <fprintf@plt>
  411df4:	nop
  411df8:	ldr	x1, [x19]
  411dfc:	mov	w0, #0x2d                  	// #45
  411e00:	bl	4025e0 <fputc@plt>
  411e04:	ldr	x0, [sp, #120]
  411e08:	subs	x0, x0, #0x1
  411e0c:	str	x0, [sp, #120]
  411e10:	b.ne	411df8 <nftw@plt+0xf278>  // b.any
  411e14:	ldr	x1, [x19]
  411e18:	mov	w0, #0xa                   	// #10
  411e1c:	bl	4025e0 <fputc@plt>
  411e20:	tbnz	w20, #31, 411e5c <nftw@plt+0xf2dc>
  411e24:	sbfiz	x3, x20, #4, #32
  411e28:	sub	x0, x21, #0x10
  411e2c:	sub	x1, x3, w20, sxtw #4
  411e30:	add	x3, x21, x3
  411e34:	add	x20, x0, x1
  411e38:	ldp	x1, x0, [x3]
  411e3c:	sub	x3, x3, #0x10
  411e40:	add	x2, sp, #0x98
  411e44:	str	x3, [sp, #120]
  411e48:	str	x3, [sp, #136]
  411e4c:	bl	4129d0 <nftw@plt+0xfe50>
  411e50:	ldr	x3, [sp, #120]
  411e54:	cmp	x3, x20
  411e58:	b.ne	411e38 <nftw@plt+0xf2b8>  // b.any
  411e5c:	mov	x20, #0x8c                  	// #140
  411e60:	ldr	x1, [x19]
  411e64:	mov	w0, #0x2d                  	// #45
  411e68:	bl	4025e0 <fputc@plt>
  411e6c:	subs	x20, x20, #0x1
  411e70:	b.ne	411e60 <nftw@plt+0xf2e0>  // b.any
  411e74:	ldr	x1, [x19]
  411e78:	mov	w0, #0xa                   	// #10
  411e7c:	mov	x20, #0x8c                  	// #140
  411e80:	bl	4025e0 <fputc@plt>
  411e84:	ldr	x0, [sp, #128]
  411e88:	str	x0, [sp]
  411e8c:	mov	x7, x28
  411e90:	mov	x6, x27
  411e94:	ldr	x0, [x19]
  411e98:	mov	x5, x26
  411e9c:	mov	x4, x25
  411ea0:	mov	x3, x24
  411ea4:	mov	x2, x23
  411ea8:	mov	x1, x22
  411eac:	bl	402b30 <fprintf@plt>
  411eb0:	ldr	x1, [x19]
  411eb4:	mov	w0, #0x2d                  	// #45
  411eb8:	bl	4025e0 <fputc@plt>
  411ebc:	subs	x20, x20, #0x1
  411ec0:	b.ne	411eb0 <nftw@plt+0xf330>  // b.any
  411ec4:	ldr	x1, [x19]
  411ec8:	mov	w0, #0xa                   	// #10
  411ecc:	bl	4025e0 <fputc@plt>
  411ed0:	ldr	x3, [sp, #152]
  411ed4:	mov	x1, #0x27ff                	// #10239
  411ed8:	mov	w4, #0x20                  	// #32
  411edc:	cmp	x3, x1
  411ee0:	ldr	x0, [x19]
  411ee4:	b.ls	411efc <nftw@plt+0xf37c>  // b.plast
  411ee8:	mov	w1, #0x9fffff              	// #10485759
  411eec:	cmp	x3, x1
  411ef0:	b.hi	41210c <nftw@plt+0xf58c>  // b.pmore
  411ef4:	lsr	x3, x3, #10
  411ef8:	mov	w4, #0x6b                  	// #107
  411efc:	ldr	x5, [sp, #160]
  411f00:	mov	x1, #0x27ff                	// #10239
  411f04:	mov	w6, #0x20                  	// #32
  411f08:	cmp	x5, x1
  411f0c:	b.ls	411f24 <nftw@plt+0xf3a4>  // b.plast
  411f10:	mov	w1, #0x9fffff              	// #10485759
  411f14:	cmp	x5, x1
  411f18:	b.hi	412118 <nftw@plt+0xf598>  // b.pmore
  411f1c:	lsr	x5, x5, #10
  411f20:	mov	w6, #0x6b                  	// #107
  411f24:	ldr	x7, [sp, #184]
  411f28:	mov	x2, #0x27ff                	// #10239
  411f2c:	mov	w1, #0x20                  	// #32
  411f30:	cmp	x7, x2
  411f34:	b.ls	411f4c <nftw@plt+0xf3cc>  // b.plast
  411f38:	mov	w1, #0x9fffff              	// #10485759
  411f3c:	cmp	x7, x1
  411f40:	b.hi	412100 <nftw@plt+0xf580>  // b.pmore
  411f44:	lsr	x7, x7, #10
  411f48:	mov	w1, #0x6b                  	// #107
  411f4c:	str	w1, [sp]
  411f50:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411f54:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  411f58:	add	x2, x2, #0x790
  411f5c:	add	x1, x1, #0x798
  411f60:	mov	x20, #0x8c                  	// #140
  411f64:	bl	402b30 <fprintf@plt>
  411f68:	ldr	x1, [x19]
  411f6c:	mov	w0, #0x2d                  	// #45
  411f70:	bl	4025e0 <fputc@plt>
  411f74:	subs	x20, x20, #0x1
  411f78:	b.ne	411f68 <nftw@plt+0xf3e8>  // b.any
  411f7c:	ldr	x1, [x19]
  411f80:	mov	w0, #0xa                   	// #10
  411f84:	bl	4025e0 <fputc@plt>
  411f88:	mov	x0, x21
  411f8c:	bl	402910 <free@plt>
  411f90:	ldr	x1, [x19]
  411f94:	mov	w0, #0xa                   	// #10
  411f98:	bl	4025e0 <fputc@plt>
  411f9c:	ldp	x29, x30, [sp, #16]
  411fa0:	ldp	x19, x20, [sp, #32]
  411fa4:	ldp	x21, x22, [sp, #48]
  411fa8:	ldp	x23, x24, [sp, #64]
  411fac:	ldp	x25, x26, [sp, #80]
  411fb0:	ldp	x27, x28, [sp, #96]
  411fb4:	add	sp, sp, #0xd0
  411fb8:	ret
  411fbc:	mov	w20, #0x0                   	// #0
  411fc0:	ldr	w0, [x3, #20]
  411fc4:	mov	w1, w20
  411fc8:	cmp	w0, #0x3
  411fcc:	b.ne	411fec <nftw@plt+0xf46c>  // b.any
  411fd0:	lsl	x0, x1, #4
  411fd4:	add	w1, w20, #0x1
  411fd8:	add	x5, x21, x0
  411fdc:	add	w20, w20, #0x1
  411fe0:	ldr	x6, [x4, #8]
  411fe4:	str	x3, [x21, x0]
  411fe8:	str	x6, [x5, #8]
  411fec:	add	x0, x4, #0x10
  411ff0:	cmp	x2, x0
  411ff4:	b.ls	412014 <nftw@plt+0xf494>  // b.plast
  411ff8:	ldr	x3, [x0]
  411ffc:	mov	x4, x0
  412000:	add	x0, x0, #0x10
  412004:	cmp	x3, #0x1
  412008:	b.hi	411fc0 <nftw@plt+0xf440>  // b.pmore
  41200c:	cmp	x2, x0
  412010:	b.hi	411ff8 <nftw@plt+0xf478>  // b.pmore
  412014:	sub	w20, w20, #0x1
  412018:	b	411cb8 <nftw@plt+0xf138>
  41201c:	mov	w19, #0x0                   	// #0
  412020:	ldr	w2, [x4, #20]
  412024:	mov	w1, w19
  412028:	cmp	w2, #0x3
  41202c:	b.eq	4120e0 <nftw@plt+0xf560>  // b.none
  412030:	add	x2, x3, #0x10
  412034:	b	41204c <nftw@plt+0xf4cc>
  412038:	ldr	x4, [x2]
  41203c:	mov	x3, x2
  412040:	add	x2, x2, #0x10
  412044:	cmp	x4, #0x1
  412048:	b.hi	412020 <nftw@plt+0xf4a0>  // b.pmore
  41204c:	cmp	x0, x2
  412050:	b.hi	412038 <nftw@plt+0xf4b8>  // b.pmore
  412054:	mov	x0, x22
  412058:	mov	x3, x23
  41205c:	mov	x2, #0x10                  	// #16
  412060:	bl	416cd0 <nftw@plt+0x14150>
  412064:	mov	x0, #0x1                   	// #1
  412068:	stp	xzr, xzr, [sp, #152]
  41206c:	stp	xzr, x0, [sp, #168]
  412070:	stp	xzr, xzr, [sp, #184]
  412074:	str	xzr, [sp, #200]
  412078:	cbz	w19, 411d48 <nftw@plt+0xf1c8>
  41207c:	sub	w1, w19, #0x1
  412080:	add	x6, x22, #0x8
  412084:	add	x19, x22, #0x18
  412088:	mov	x5, #0x0                   	// #0
  41208c:	add	x19, x19, w1, uxtw #4
  412090:	mov	x4, #0x0                   	// #0
  412094:	mov	x3, #0x0                   	// #0
  412098:	mov	x2, #0x0                   	// #0
  41209c:	mov	x1, #0x0                   	// #0
  4120a0:	ldr	x0, [x6], #16
  4120a4:	cmp	x6, x19
  4120a8:	ldp	x8, x7, [x0]
  4120ac:	add	x1, x1, x8
  4120b0:	add	x2, x2, x7
  4120b4:	ldr	x8, [x0, #16]
  4120b8:	stp	x1, x2, [sp, #152]
  4120bc:	ldp	x7, x0, [x0, #32]
  4120c0:	add	x3, x3, x8
  4120c4:	stp	x3, xzr, [sp, #168]
  4120c8:	str	xzr, [sp, #200]
  4120cc:	add	x4, x4, x7
  4120d0:	add	x5, x5, x0
  4120d4:	stp	x4, x5, [sp, #184]
  4120d8:	b.ne	4120a0 <nftw@plt+0xf520>  // b.any
  4120dc:	b	411d48 <nftw@plt+0xf1c8>
  4120e0:	lsl	x2, x1, #4
  4120e4:	add	w1, w19, #0x1
  4120e8:	add	x5, x22, x2
  4120ec:	add	w19, w19, #0x1
  4120f0:	ldr	x6, [x3, #8]
  4120f4:	str	x4, [x22, x2]
  4120f8:	str	x6, [x5, #8]
  4120fc:	b	412030 <nftw@plt+0xf4b0>
  412100:	lsr	x7, x7, #20
  412104:	mov	w1, #0x4d                  	// #77
  412108:	b	411f4c <nftw@plt+0xf3cc>
  41210c:	lsr	x3, x3, #20
  412110:	mov	w4, #0x4d                  	// #77
  412114:	b	411efc <nftw@plt+0xf37c>
  412118:	lsr	x5, x5, #20
  41211c:	mov	w6, #0x4d                  	// #77
  412120:	b	411f24 <nftw@plt+0xf3a4>
  412124:	nop
  412128:	stp	x29, x30, [sp, #-144]!
  41212c:	mov	x29, sp
  412130:	stp	x19, x20, [sp, #16]
  412134:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  412138:	add	x20, x20, #0x8b8
  41213c:	stp	x23, x24, [sp, #48]
  412140:	asr	x23, x1, #3
  412144:	mov	x19, x1
  412148:	ldr	x0, [x20, #48]
  41214c:	and	w24, w4, #0xff
  412150:	add	x1, sp, #0x88
  412154:	stp	x21, x22, [sp, #32]
  412158:	mov	x21, x2
  41215c:	mov	x22, x3
  412160:	mov	w2, w23
  412164:	str	x19, [sp, #136]
  412168:	bl	412d08 <nftw@plt+0x10188>
  41216c:	ldr	x0, [x0]
  412170:	cbz	x0, 41220c <nftw@plt+0xf68c>
  412174:	ldr	x0, [x20, #48]
  412178:	add	x1, sp, #0x88
  41217c:	mov	w2, w23
  412180:	str	x19, [sp, #136]
  412184:	bl	412d08 <nftw@plt+0x10188>
  412188:	ldr	x1, [x0]
  41218c:	stp	x25, x26, [sp, #64]
  412190:	cbz	x1, 41249c <nftw@plt+0xf91c>
  412194:	ldr	x25, [x0, #8]
  412198:	ldr	x2, [x25]
  41219c:	cmp	x21, x2
  4121a0:	b.hi	412480 <nftw@plt+0xf900>  // b.pmore
  4121a4:	sub	x2, x2, x21
  4121a8:	str	x2, [x25]
  4121ac:	cbnz	w24, 4121d4 <nftw@plt+0xf654>
  4121b0:	ldr	x3, [x25, #32]
  4121b4:	ldp	x19, x20, [sp, #16]
  4121b8:	sub	x22, x3, x22
  4121bc:	ldp	x23, x24, [sp, #48]
  4121c0:	str	x22, [x25, #32]
  4121c4:	ldp	x21, x22, [sp, #32]
  4121c8:	ldp	x25, x26, [sp, #64]
  4121cc:	ldp	x29, x30, [sp], #144
  4121d0:	ret
  4121d4:	ldr	x20, [x20, #48]
  4121d8:	mov	w2, w23
  4121dc:	add	x1, sp, #0x88
  4121e0:	mov	w3, #0x0                   	// #0
  4121e4:	mov	x0, x20
  4121e8:	str	x19, [sp, #136]
  4121ec:	bl	4135f0 <nftw@plt+0x10a70>
  4121f0:	cbz	x0, 4121b0 <nftw@plt+0xf630>
  4121f4:	ldr	x1, [x20, #24]
  4121f8:	mov	x2, #0x1                   	// #1
  4121fc:	str	x2, [x0]
  412200:	add	x0, x1, x2
  412204:	str	x0, [x20, #24]
  412208:	b	4121b0 <nftw@plt+0xf630>
  41220c:	mov	x0, #0x20                  	// #32
  412210:	stp	x25, x26, [sp, #64]
  412214:	mov	w25, #0x79b9                	// #31161
  412218:	stp	x27, x28, [sp, #80]
  41221c:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  412220:	mov	x26, x0
  412224:	mov	x3, #0x300000000           	// #12884901888
  412228:	mov	w2, #0x0                   	// #0
  41222c:	mov	x1, #0x8                   	// #8
  412230:	add	x0, sp, #0x88
  412234:	stp	xzr, xzr, [x26]
  412238:	movk	w25, #0x9e37, lsl #16
  41223c:	str	x3, [x26, #16]
  412240:	strb	wzr, [x26, #24]
  412244:	stp	x19, x26, [sp, #120]
  412248:	str	xzr, [sp, #136]
  41224c:	ldr	x27, [x20, #40]
  412250:	bl	449360 <nftw@plt+0x467e0>
  412254:	ldr	x3, [x26, #8]
  412258:	mov	w2, w0
  41225c:	mov	x1, #0x8                   	// #8
  412260:	add	x0, sp, #0x88
  412264:	str	x3, [sp, #136]
  412268:	bl	449360 <nftw@plt+0x467e0>
  41226c:	mov	w4, w0
  412270:	ldr	w3, [x26, #16]
  412274:	sub	w2, w25, w0
  412278:	add	x1, sp, #0x80
  41227c:	mov	x0, x27
  412280:	sub	w2, w2, w3
  412284:	sub	w3, w3, w4
  412288:	eor	w2, w2, w4, lsr #13
  41228c:	sub	w3, w3, w2
  412290:	sub	w4, w4, w2
  412294:	eor	w3, w3, w2, lsl #8
  412298:	sub	w4, w4, w3
  41229c:	sub	w2, w2, w3
  4122a0:	eor	w4, w4, w3, lsr #13
  4122a4:	sub	w2, w2, w4
  4122a8:	sub	w3, w3, w4
  4122ac:	eor	w2, w2, w4, lsr #12
  4122b0:	sub	w3, w3, w2
  4122b4:	sub	w4, w4, w2
  4122b8:	eor	w3, w3, w2, lsl #16
  4122bc:	sub	w4, w4, w3
  4122c0:	sub	w2, w2, w3
  4122c4:	eor	w4, w4, w3, lsr #5
  4122c8:	sub	w2, w2, w4
  4122cc:	sub	w3, w3, w4
  4122d0:	eor	w2, w2, w4, lsr #3
  4122d4:	sub	w3, w3, w2
  4122d8:	sub	w4, w4, w2
  4122dc:	eor	w2, w3, w2, lsl #10
  4122e0:	sub	w4, w4, w2
  4122e4:	eor	w2, w4, w2, lsr #15
  4122e8:	bl	412df8 <nftw@plt+0x10278>
  4122ec:	mov	x26, x0
  4122f0:	ldr	x0, [x0]
  4122f4:	cbz	x0, 412340 <nftw@plt+0xf7c0>
  4122f8:	ldr	x0, [sp, #128]
  4122fc:	cbz	x0, 412308 <nftw@plt+0xf788>
  412300:	mov	x1, #0x20                  	// #32
  412304:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  412308:	ldr	x26, [x26, #8]
  41230c:	ldr	x0, [x26, #24]
  412310:	add	x0, x0, #0x1
  412314:	str	x0, [x26, #24]
  412318:	ldr	x0, [x20, #48]
  41231c:	add	x1, sp, #0x78
  412320:	ldr	x2, [sp, #120]
  412324:	ubfx	x2, x2, #3, #32
  412328:	bl	412d08 <nftw@plt+0x10188>
  41232c:	ldr	x0, [x0]
  412330:	cbz	x0, 412444 <nftw@plt+0xf8c4>
  412334:	ldp	x25, x26, [sp, #64]
  412338:	ldp	x27, x28, [sp, #80]
  41233c:	b	412174 <nftw@plt+0xf5f4>
  412340:	mov	x0, #0x38                  	// #56
  412344:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  412348:	ldr	x27, [sp, #128]
  41234c:	mov	x26, x0
  412350:	ldr	x5, [x20, #40]
  412354:	mov	x28, #0x1                   	// #1
  412358:	ldr	x3, [x27]
  41235c:	stp	xzr, xzr, [x26]
  412360:	mov	w2, #0x0                   	// #0
  412364:	stp	xzr, x28, [x26, #16]
  412368:	mov	x1, #0x8                   	// #8
  41236c:	add	x0, sp, #0x88
  412370:	stp	xzr, xzr, [x26, #32]
  412374:	str	xzr, [x26, #48]
  412378:	str	x5, [sp, #104]
  41237c:	str	x3, [sp, #136]
  412380:	bl	449360 <nftw@plt+0x467e0>
  412384:	ldr	x3, [x27, #8]
  412388:	mov	w2, w0
  41238c:	mov	x1, #0x8                   	// #8
  412390:	add	x0, sp, #0x88
  412394:	str	x3, [sp, #136]
  412398:	bl	449360 <nftw@plt+0x467e0>
  41239c:	mov	w4, w0
  4123a0:	ldr	w1, [x27, #16]
  4123a4:	mov	w3, w28
  4123a8:	ldr	x5, [sp, #104]
  4123ac:	sub	w2, w25, w1
  4123b0:	sub	w2, w2, w0
  4123b4:	eor	w2, w2, w0, lsr #13
  4123b8:	mov	x0, x5
  4123bc:	sub	w5, w1, w4
  4123c0:	sub	w4, w4, w2
  4123c4:	sub	w5, w5, w2
  4123c8:	add	x1, sp, #0x80
  4123cc:	eor	w5, w5, w2, lsl #8
  4123d0:	sub	w4, w4, w5
  4123d4:	sub	w2, w2, w5
  4123d8:	eor	w4, w4, w5, lsr #13
  4123dc:	sub	w2, w2, w4
  4123e0:	sub	w5, w5, w4
  4123e4:	eor	w2, w2, w4, lsr #12
  4123e8:	sub	w5, w5, w2
  4123ec:	sub	w4, w4, w2
  4123f0:	eor	w5, w5, w2, lsl #16
  4123f4:	sub	w4, w4, w5
  4123f8:	sub	w2, w2, w5
  4123fc:	eor	w4, w4, w5, lsr #5
  412400:	sub	w2, w2, w4
  412404:	sub	w5, w5, w4
  412408:	eor	w2, w2, w4, lsr #3
  41240c:	sub	w5, w5, w2
  412410:	sub	w4, w4, w2
  412414:	eor	w2, w5, w2, lsl #10
  412418:	sub	w4, w4, w2
  41241c:	eor	w2, w4, w2, lsr #15
  412420:	bl	4131e8 <nftw@plt+0x10668>
  412424:	ldr	x1, [x0]
  412428:	cbz	x1, 412434 <nftw@plt+0xf8b4>
  41242c:	str	x26, [x0, #8]
  412430:	b	412318 <nftw@plt+0xf798>
  412434:	ldr	x1, [sp, #128]
  412438:	str	x1, [x0]
  41243c:	str	x26, [x0, #8]
  412440:	b	412318 <nftw@plt+0xf798>
  412444:	ldr	x0, [x20, #48]
  412448:	add	x1, sp, #0x78
  41244c:	ldr	x2, [sp, #120]
  412450:	mov	w3, #0x1                   	// #1
  412454:	ubfx	x2, x2, #3, #32
  412458:	bl	4135f0 <nftw@plt+0x10a70>
  41245c:	ldr	x1, [x0]
  412460:	cbz	x1, 412474 <nftw@plt+0xf8f4>
  412464:	ldp	x27, x28, [sp, #80]
  412468:	stp	x26, xzr, [x0, #8]
  41246c:	ldp	x25, x26, [sp, #64]
  412470:	b	412174 <nftw@plt+0xf5f4>
  412474:	ldr	x1, [sp, #120]
  412478:	str	x1, [x0]
  41247c:	b	412464 <nftw@plt+0xf8e4>
  412480:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  412484:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  412488:	add	x2, x2, #0x7b8
  41248c:	add	x0, x0, #0x7d0
  412490:	mov	w1, #0x97                  	// #151
  412494:	stp	x27, x28, [sp, #80]
  412498:	bl	402bf0 <nftw@plt+0x70>
  41249c:	stp	x27, x28, [sp, #80]
  4124a0:	ldr	x0, [x1, #32]
  4124a4:	brk	#0x3e8
  4124a8:	stp	x29, x30, [sp, #-128]!
  4124ac:	mov	x0, #0x20                  	// #32
  4124b0:	mov	x29, sp
  4124b4:	stp	x19, x20, [sp, #16]
  4124b8:	mov	x19, x2
  4124bc:	mov	w20, #0x79b9                	// #31161
  4124c0:	stp	x21, x22, [sp, #32]
  4124c4:	mov	x22, x1
  4124c8:	adrp	x21, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4124cc:	stp	x23, x24, [sp, #48]
  4124d0:	mov	x23, x3
  4124d4:	add	x21, x21, #0x8b8
  4124d8:	stp	x25, x26, [sp, #64]
  4124dc:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  4124e0:	mov	x24, x0
  4124e4:	mov	x3, #0x300000000           	// #12884901888
  4124e8:	mov	w2, #0x0                   	// #0
  4124ec:	mov	x1, #0x8                   	// #8
  4124f0:	add	x0, sp, #0x78
  4124f4:	stp	xzr, xzr, [x24]
  4124f8:	movk	w20, #0x9e37, lsl #16
  4124fc:	str	x3, [x24, #16]
  412500:	strb	wzr, [x24, #24]
  412504:	stp	x22, x24, [sp, #104]
  412508:	str	xzr, [sp, #120]
  41250c:	ldr	x25, [x21, #40]
  412510:	bl	449360 <nftw@plt+0x467e0>
  412514:	ldr	x3, [x24, #8]
  412518:	mov	w2, w0
  41251c:	mov	x1, #0x8                   	// #8
  412520:	add	x0, sp, #0x78
  412524:	str	x3, [sp, #120]
  412528:	bl	449360 <nftw@plt+0x467e0>
  41252c:	mov	w4, w0
  412530:	ldr	w3, [x24, #16]
  412534:	sub	w2, w20, w0
  412538:	add	x1, sp, #0x70
  41253c:	mov	x0, x25
  412540:	sub	w2, w2, w3
  412544:	sub	w3, w3, w4
  412548:	eor	w2, w2, w4, lsr #13
  41254c:	sub	w3, w3, w2
  412550:	sub	w4, w4, w2
  412554:	eor	w3, w3, w2, lsl #8
  412558:	sub	w4, w4, w3
  41255c:	sub	w2, w2, w3
  412560:	eor	w4, w4, w3, lsr #13
  412564:	sub	w2, w2, w4
  412568:	sub	w3, w3, w4
  41256c:	eor	w2, w2, w4, lsr #12
  412570:	sub	w3, w3, w2
  412574:	sub	w4, w4, w2
  412578:	eor	w3, w3, w2, lsl #16
  41257c:	sub	w4, w4, w3
  412580:	sub	w2, w2, w3
  412584:	eor	w4, w4, w3, lsr #5
  412588:	sub	w2, w2, w4
  41258c:	sub	w3, w3, w4
  412590:	eor	w2, w2, w4, lsr #3
  412594:	sub	w3, w3, w2
  412598:	sub	w4, w4, w2
  41259c:	eor	w2, w3, w2, lsl #10
  4125a0:	sub	w4, w4, w2
  4125a4:	eor	w2, w4, w2, lsr #15
  4125a8:	bl	412df8 <nftw@plt+0x10278>
  4125ac:	mov	x24, x0
  4125b0:	ldr	x0, [x0]
  4125b4:	cbz	x0, 41266c <nftw@plt+0xfaec>
  4125b8:	ldr	x0, [sp, #112]
  4125bc:	cbz	x0, 4125c8 <nftw@plt+0xfa48>
  4125c0:	mov	x1, #0x20                  	// #32
  4125c4:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  4125c8:	ldr	x24, [x24, #8]
  4125cc:	add	x1, sp, #0x68
  4125d0:	ldr	x2, [sp, #104]
  4125d4:	ldr	x0, [x24, #24]
  4125d8:	ubfx	x2, x2, #3, #32
  4125dc:	add	x0, x0, #0x1
  4125e0:	str	x0, [x24, #24]
  4125e4:	ldr	x0, [x21, #48]
  4125e8:	bl	412d08 <nftw@plt+0x10188>
  4125ec:	ldr	x0, [x0]
  4125f0:	cbz	x0, 412778 <nftw@plt+0xfbf8>
  4125f4:	ldr	x0, [x21, #48]
  4125f8:	add	x1, sp, #0x78
  4125fc:	ubfx	x2, x22, #3, #32
  412600:	str	x22, [sp, #120]
  412604:	mul	x20, x19, x23
  412608:	bl	412d08 <nftw@plt+0x10188>
  41260c:	ldr	x1, [x0]
  412610:	cbz	x1, 4127bc <nftw@plt+0xfc3c>
  412614:	ldr	x0, [x0, #8]
  412618:	ldp	x1, x2, [x0]
  41261c:	ldr	x3, [x0, #16]
  412620:	add	x1, x20, x1
  412624:	add	x2, x2, #0x1
  412628:	stp	x1, x2, [x0]
  41262c:	cmp	x1, x3
  412630:	b.ls	412638 <nftw@plt+0xfab8>  // b.plast
  412634:	str	x1, [x0, #16]
  412638:	ldp	x2, x1, [x0, #32]
  41263c:	str	x23, [x0, #48]
  412640:	add	x19, x19, x2
  412644:	str	x19, [x0, #32]
  412648:	cmp	x19, x1
  41264c:	b.ls	412654 <nftw@plt+0xfad4>  // b.plast
  412650:	str	x19, [x0, #40]
  412654:	ldp	x19, x20, [sp, #16]
  412658:	ldp	x21, x22, [sp, #32]
  41265c:	ldp	x23, x24, [sp, #48]
  412660:	ldp	x25, x26, [sp, #64]
  412664:	ldp	x29, x30, [sp], #128
  412668:	ret
  41266c:	mov	x0, #0x38                  	// #56
  412670:	str	x27, [sp, #80]
  412674:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  412678:	mov	x24, x0
  41267c:	ldr	x25, [sp, #112]
  412680:	mov	x26, #0x1                   	// #1
  412684:	mov	w2, #0x0                   	// #0
  412688:	mov	x1, #0x8                   	// #8
  41268c:	add	x0, sp, #0x78
  412690:	ldr	x3, [x25]
  412694:	stp	xzr, xzr, [x24]
  412698:	stp	xzr, x26, [x24, #16]
  41269c:	stp	xzr, xzr, [x24, #32]
  4126a0:	str	xzr, [x24, #48]
  4126a4:	str	x3, [sp, #120]
  4126a8:	ldr	x27, [x21, #40]
  4126ac:	bl	449360 <nftw@plt+0x467e0>
  4126b0:	ldr	x3, [x25, #8]
  4126b4:	mov	w2, w0
  4126b8:	mov	x1, #0x8                   	// #8
  4126bc:	add	x0, sp, #0x78
  4126c0:	str	x3, [sp, #120]
  4126c4:	bl	449360 <nftw@plt+0x467e0>
  4126c8:	mov	w4, w0
  4126cc:	ldr	w5, [x25, #16]
  4126d0:	add	x1, sp, #0x70
  4126d4:	mov	w3, w26
  4126d8:	mov	x0, x27
  4126dc:	sub	w2, w20, w5
  4126e0:	sub	w5, w5, w4
  4126e4:	sub	w2, w2, w4
  4126e8:	eor	w2, w2, w4, lsr #13
  4126ec:	sub	w5, w5, w2
  4126f0:	sub	w4, w4, w2
  4126f4:	eor	w5, w5, w2, lsl #8
  4126f8:	sub	w4, w4, w5
  4126fc:	sub	w2, w2, w5
  412700:	eor	w4, w4, w5, lsr #13
  412704:	sub	w2, w2, w4
  412708:	sub	w5, w5, w4
  41270c:	eor	w2, w2, w4, lsr #12
  412710:	sub	w5, w5, w2
  412714:	sub	w4, w4, w2
  412718:	eor	w5, w5, w2, lsl #16
  41271c:	sub	w4, w4, w5
  412720:	sub	w2, w2, w5
  412724:	eor	w4, w4, w5, lsr #5
  412728:	sub	w2, w2, w4
  41272c:	sub	w5, w5, w4
  412730:	eor	w2, w2, w4, lsr #3
  412734:	sub	w5, w5, w2
  412738:	sub	w4, w4, w2
  41273c:	eor	w2, w5, w2, lsl #10
  412740:	sub	w4, w4, w2
  412744:	eor	w2, w4, w2, lsr #15
  412748:	bl	4131e8 <nftw@plt+0x10668>
  41274c:	ldr	x1, [x0]
  412750:	cbz	x1, 4127a0 <nftw@plt+0xfc20>
  412754:	ldr	x27, [sp, #80]
  412758:	str	x24, [x0, #8]
  41275c:	ldr	x0, [x21, #48]
  412760:	add	x1, sp, #0x68
  412764:	ldr	x2, [sp, #104]
  412768:	ubfx	x2, x2, #3, #32
  41276c:	bl	412d08 <nftw@plt+0x10188>
  412770:	ldr	x0, [x0]
  412774:	cbnz	x0, 4125f4 <nftw@plt+0xfa74>
  412778:	ldr	x0, [x21, #48]
  41277c:	add	x1, sp, #0x68
  412780:	ldr	x2, [sp, #104]
  412784:	mov	w3, #0x1                   	// #1
  412788:	ubfx	x2, x2, #3, #32
  41278c:	bl	4135f0 <nftw@plt+0x10a70>
  412790:	ldr	x1, [x0]
  412794:	cbz	x1, 4127ac <nftw@plt+0xfc2c>
  412798:	stp	x24, xzr, [x0, #8]
  41279c:	b	4125f4 <nftw@plt+0xfa74>
  4127a0:	ldr	x1, [sp, #112]
  4127a4:	str	x1, [x0]
  4127a8:	b	412754 <nftw@plt+0xfbd4>
  4127ac:	ldr	x1, [sp, #104]
  4127b0:	str	x1, [x0]
  4127b4:	stp	x24, xzr, [x0, #8]
  4127b8:	b	4125f4 <nftw@plt+0xfa74>
  4127bc:	str	x27, [sp, #80]
  4127c0:	str	xzr, [x1, #48]
  4127c4:	brk	#0x3e8
  4127c8:	stp	x29, x30, [sp, #-48]!
  4127cc:	mov	x29, sp
  4127d0:	stp	x21, x22, [sp, #32]
  4127d4:	mov	x21, x0
  4127d8:	ldr	x22, [x0, #40]
  4127dc:	stp	x19, x20, [sp, #16]
  4127e0:	ldp	x3, x2, [x22]
  4127e4:	add	x20, x3, x2, lsl #4
  4127e8:	cmp	x3, x20
  4127ec:	b.cs	412814 <nftw@plt+0xfc94>  // b.hs, b.nlast
  4127f0:	mov	x1, x3
  4127f4:	nop
  4127f8:	ldr	x0, [x1]
  4127fc:	mov	x19, x1
  412800:	add	x1, x1, #0x10
  412804:	cmp	x0, #0x1
  412808:	b.hi	4128d4 <nftw@plt+0xfd54>  // b.pmore
  41280c:	cmp	x20, x1
  412810:	b.hi	4127f8 <nftw@plt+0xfc78>  // b.pmore
  412814:	sub	x1, x2, #0x1
  412818:	cbz	x2, 41282c <nftw@plt+0xfcac>
  41281c:	nop
  412820:	sub	x1, x1, #0x1
  412824:	cmp	x2, x1
  412828:	b.hi	412820 <nftw@plt+0xfca0>  // b.pmore
  41282c:	ldrb	w0, [x22, #44]
  412830:	cbz	w0, 412950 <nftw@plt+0xfdd0>
  412834:	mov	x0, x3
  412838:	bl	4165f8 <nftw@plt+0x13a78>
  41283c:	mov	x0, x22
  412840:	mov	x1, #0x30                  	// #48
  412844:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  412848:	ldr	x19, [x21, #48]
  41284c:	cbz	x19, 412888 <nftw@plt+0xfd08>
  412850:	ldr	x0, [x19, #8]
  412854:	sub	x1, x0, #0x1
  412858:	cbz	x0, 41286c <nftw@plt+0xfcec>
  41285c:	nop
  412860:	sub	x1, x1, #0x1
  412864:	cmp	x0, x1
  412868:	b.hi	412860 <nftw@plt+0xfce0>  // b.pmore
  41286c:	ldrb	w1, [x19, #44]
  412870:	ldr	x0, [x19]
  412874:	cbz	w1, 412948 <nftw@plt+0xfdc8>
  412878:	bl	4165f8 <nftw@plt+0x13a78>
  41287c:	mov	x0, x19
  412880:	mov	x1, #0x30                  	// #48
  412884:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  412888:	ldr	x19, [x21]
  41288c:	cbz	x19, 41295c <nftw@plt+0xfddc>
  412890:	ldr	x1, [x19, #8]
  412894:	sub	x0, x1, #0x1
  412898:	cbz	x1, 4128ac <nftw@plt+0xfd2c>
  41289c:	nop
  4128a0:	sub	x0, x0, #0x1
  4128a4:	cmp	x1, x0
  4128a8:	b.hi	4128a0 <nftw@plt+0xfd20>  // b.pmore
  4128ac:	ldrb	w1, [x19, #44]
  4128b0:	ldr	x0, [x19]
  4128b4:	cbz	w1, 41292c <nftw@plt+0xfdac>
  4128b8:	bl	4165f8 <nftw@plt+0x13a78>
  4128bc:	mov	x0, x19
  4128c0:	mov	x1, #0x30                  	// #48
  4128c4:	ldp	x19, x20, [sp, #16]
  4128c8:	ldp	x21, x22, [sp, #32]
  4128cc:	ldp	x29, x30, [sp], #48
  4128d0:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  4128d4:	cbz	x0, 4128e0 <nftw@plt+0xfd60>
  4128d8:	mov	x1, #0x20                  	// #32
  4128dc:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  4128e0:	ldr	x0, [x19, #8]
  4128e4:	cbz	x0, 4128f0 <nftw@plt+0xfd70>
  4128e8:	mov	x1, #0x38                  	// #56
  4128ec:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  4128f0:	add	x1, x19, #0x10
  4128f4:	b	41290c <nftw@plt+0xfd8c>
  4128f8:	ldr	x0, [x1]
  4128fc:	mov	x19, x1
  412900:	add	x1, x1, #0x10
  412904:	cmp	x0, #0x1
  412908:	b.hi	4128d4 <nftw@plt+0xfd54>  // b.pmore
  41290c:	cmp	x20, x1
  412910:	b.hi	4128f8 <nftw@plt+0xfd78>  // b.pmore
  412914:	ldr	x22, [x21, #40]
  412918:	cbz	x22, 412848 <nftw@plt+0xfcc8>
  41291c:	ldp	x3, x2, [x22]
  412920:	sub	x1, x2, #0x1
  412924:	cbnz	x2, 412820 <nftw@plt+0xfca0>
  412928:	b	41282c <nftw@plt+0xfcac>
  41292c:	bl	402910 <free@plt>
  412930:	mov	x0, x19
  412934:	mov	x1, #0x30                  	// #48
  412938:	ldp	x19, x20, [sp, #16]
  41293c:	ldp	x21, x22, [sp, #32]
  412940:	ldp	x29, x30, [sp], #48
  412944:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  412948:	bl	402910 <free@plt>
  41294c:	b	41287c <nftw@plt+0xfcfc>
  412950:	mov	x0, x3
  412954:	bl	402910 <free@plt>
  412958:	b	41283c <nftw@plt+0xfcbc>
  41295c:	ldp	x19, x20, [sp, #16]
  412960:	ldp	x21, x22, [sp, #32]
  412964:	ldp	x29, x30, [sp], #48
  412968:	ret
  41296c:	nop
  412970:	ldr	x0, [x0, #8]
  412974:	ldr	x1, [x1, #8]
  412978:	ldr	x2, [x0]
  41297c:	ldr	x3, [x1]
  412980:	cmp	x3, x2
  412984:	b.eq	41299c <nftw@plt+0xfe1c>  // b.none
  412988:	cset	w0, hi  // hi = pmore
  41298c:	cmp	w0, #0x0
  412990:	mov	w0, #0x1                   	// #1
  412994:	cneg	w0, w0, eq  // eq = none
  412998:	ret
  41299c:	ldr	x3, [x0, #16]
  4129a0:	ldr	x2, [x1, #16]
  4129a4:	cmp	x3, x2
  4129a8:	b.eq	4129b4 <nftw@plt+0xfe34>  // b.none
  4129ac:	cset	w0, cc  // cc = lo, ul, last
  4129b0:	b	41298c <nftw@plt+0xfe0c>
  4129b4:	ldr	x2, [x0, #8]
  4129b8:	mov	w0, #0x0                   	// #0
  4129bc:	ldr	x1, [x1, #8]
  4129c0:	cmp	x2, x1
  4129c4:	b.eq	412998 <nftw@plt+0xfe18>  // b.none
  4129c8:	cset	w0, cc  // cc = lo, ul, last
  4129cc:	b	41298c <nftw@plt+0xfe0c>
  4129d0:	mov	x12, #0x1070                	// #4208
  4129d4:	sub	sp, sp, x12
  4129d8:	stp	x29, x30, [sp, #48]
  4129dc:	add	x29, sp, #0x30
  4129e0:	stp	x19, x20, [sp, #64]
  4129e4:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4129e8:	add	x20, x20, #0x698
  4129ec:	stp	x21, x22, [sp, #80]
  4129f0:	mov	x22, x1
  4129f4:	mov	x21, x0
  4129f8:	ldr	x19, [x1]
  4129fc:	str	x23, [sp, #96]
  412a00:	mov	x23, x2
  412a04:	b	412a0c <nftw@plt+0xfe8c>
  412a08:	add	x19, x0, #0x4
  412a0c:	mov	x1, x20
  412a10:	mov	x0, x19
  412a14:	bl	402a20 <strstr@plt>
  412a18:	cbnz	x0, 412a08 <nftw@plt+0xfe88>
  412a1c:	ldr	w3, [x22, #16]
  412a20:	mov	x2, x19
  412a24:	ldr	x4, [x22, #8]
  412a28:	add	x0, sp, #0x70
  412a2c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  412a30:	add	x1, x1, #0x6a0
  412a34:	bl	4025b0 <sprintf@plt>
  412a38:	strb	wzr, [sp, #160]
  412a3c:	ldr	x1, [x21]
  412a40:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  412a44:	mov	x2, #0x27ff                	// #10239
  412a48:	ldr	x0, [x0, #1392]
  412a4c:	cmp	x1, x2
  412a50:	ldr	x3, [x21, #48]
  412a54:	b.ls	412a70 <nftw@plt+0xfef0>  // b.plast
  412a58:	mov	w2, #0x9fffff              	// #10485759
  412a5c:	cmp	x1, x2
  412a60:	b.hi	412b90 <nftw@plt+0x10010>  // b.pmore
  412a64:	lsr	x4, x1, #10
  412a68:	mov	w5, #0x6b                  	// #107
  412a6c:	b	412a78 <nftw@plt+0xfef8>
  412a70:	mov	x4, x1
  412a74:	mov	w5, #0x20                  	// #32
  412a78:	ucvtf	d0, x1
  412a7c:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  412a80:	ldr	d1, [x23]
  412a84:	fmov	d2, x1
  412a88:	ldr	x6, [x21, #16]
  412a8c:	fmul	d0, d0, d2
  412a90:	ucvtf	d1, d1
  412a94:	mov	x1, #0x27ff                	// #10239
  412a98:	mov	w7, #0x20                  	// #32
  412a9c:	cmp	x6, x1
  412aa0:	fdiv	d0, d0, d1
  412aa4:	b.ls	412abc <nftw@plt+0xff3c>  // b.plast
  412aa8:	mov	w1, #0x9fffff              	// #10485759
  412aac:	cmp	x6, x1
  412ab0:	b.hi	412b84 <nftw@plt+0x10004>  // b.pmore
  412ab4:	lsr	x6, x6, #10
  412ab8:	mov	w7, #0x6b                  	// #107
  412abc:	ldr	d4, [x21, #8]
  412ac0:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  412ac4:	ldr	d2, [x23, #8]
  412ac8:	fmov	d3, x1
  412acc:	ucvtf	d1, d4
  412ad0:	mov	x1, #0x27ff                	// #10239
  412ad4:	ldr	x2, [x21, #32]
  412ad8:	ucvtf	d2, d2
  412adc:	mov	w9, #0x20                  	// #32
  412ae0:	fmul	d1, d1, d3
  412ae4:	cmp	x2, x1
  412ae8:	fdiv	d1, d1, d2
  412aec:	b.ls	412b04 <nftw@plt+0xff84>  // b.plast
  412af0:	mov	w1, #0x9fffff              	// #10485759
  412af4:	cmp	x2, x1
  412af8:	b.hi	412b78 <nftw@plt+0xfff8>  // b.pmore
  412afc:	lsr	x2, x2, #10
  412b00:	mov	w9, #0x6b                  	// #107
  412b04:	ldr	x1, [x21, #40]
  412b08:	mov	x10, #0x27ff                	// #10239
  412b0c:	mov	w8, #0x20                  	// #32
  412b10:	cmp	x1, x10
  412b14:	b.ls	412b2c <nftw@plt+0xffac>  // b.plast
  412b18:	mov	w8, #0x9fffff              	// #10485759
  412b1c:	cmp	x1, x8
  412b20:	b.hi	412b6c <nftw@plt+0xffec>  // b.pmore
  412b24:	lsr	x1, x1, #10
  412b28:	mov	w8, #0x6b                  	// #107
  412b2c:	str	d4, [sp]
  412b30:	str	x2, [sp, #8]
  412b34:	add	x2, sp, #0x70
  412b38:	str	w9, [sp, #16]
  412b3c:	str	x1, [sp, #24]
  412b40:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  412b44:	str	w8, [sp, #32]
  412b48:	add	x1, x1, #0x6b0
  412b4c:	bl	402b30 <fprintf@plt>
  412b50:	mov	x12, #0x1070                	// #4208
  412b54:	ldp	x29, x30, [sp, #48]
  412b58:	ldp	x19, x20, [sp, #64]
  412b5c:	ldp	x21, x22, [sp, #80]
  412b60:	ldr	x23, [sp, #96]
  412b64:	add	sp, sp, x12
  412b68:	ret
  412b6c:	lsr	x1, x1, #20
  412b70:	mov	w8, #0x4d                  	// #77
  412b74:	b	412b2c <nftw@plt+0xffac>
  412b78:	lsr	x2, x2, #20
  412b7c:	mov	w9, #0x4d                  	// #77
  412b80:	b	412b04 <nftw@plt+0xff84>
  412b84:	lsr	x6, x6, #20
  412b88:	mov	w7, #0x4d                  	// #77
  412b8c:	b	412abc <nftw@plt+0xff3c>
  412b90:	lsr	x4, x1, #20
  412b94:	mov	w5, #0x4d                  	// #77
  412b98:	b	412a78 <nftw@plt+0xfef8>
  412b9c:	nop
  412ba0:	stp	x29, x30, [sp, #-64]!
  412ba4:	mov	x29, sp
  412ba8:	stp	x19, x20, [sp, #16]
  412bac:	mov	x20, x0
  412bb0:	mov	x0, #0x30                  	// #48
  412bb4:	stp	x21, x22, [sp, #32]
  412bb8:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  412bbc:	add	x21, x21, #0x298
  412bc0:	stp	x23, x24, [sp, #48]
  412bc4:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  412bc8:	mov	x19, x0
  412bcc:	mov	x0, #0xd                   	// #13
  412bd0:	stp	xzr, xzr, [x19, #16]
  412bd4:	str	xzr, [x19, #32]
  412bd8:	strb	wzr, [x19, #44]
  412bdc:	bl	4161a8 <nftw@plt+0x13628>
  412be0:	mov	w22, w0
  412be4:	mov	x1, #0x10                  	// #16
  412be8:	ubfiz	x0, x22, #4, #32
  412bec:	ldr	w23, [x21, x0]
  412bf0:	mov	w24, w23
  412bf4:	mov	x0, x24
  412bf8:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  412bfc:	mov	x1, x0
  412c00:	cbz	x24, 412c14 <nftw@plt+0x10094>
  412c04:	add	x23, x0, w23, uxtw #4
  412c08:	str	xzr, [x0], #16
  412c0c:	cmp	x0, x23
  412c10:	b.ne	412c08 <nftw@plt+0x10088>  // b.any
  412c14:	stp	x1, x24, [x19]
  412c18:	mov	x0, #0x30                  	// #48
  412c1c:	str	w22, [x19, #40]
  412c20:	str	x19, [x20, #40]
  412c24:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  412c28:	mov	x19, x0
  412c2c:	mov	x0, #0xd                   	// #13
  412c30:	stp	xzr, xzr, [x19, #16]
  412c34:	str	xzr, [x19, #32]
  412c38:	strb	wzr, [x19, #44]
  412c3c:	bl	4161a8 <nftw@plt+0x13628>
  412c40:	mov	w22, w0
  412c44:	mov	x1, #0x18                  	// #24
  412c48:	ubfiz	x0, x22, #4, #32
  412c4c:	ldr	w23, [x21, x0]
  412c50:	mov	w24, w23
  412c54:	mov	x0, x24
  412c58:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  412c5c:	mov	x1, x0
  412c60:	cbz	x24, 412c7c <nftw@plt+0x100fc>
  412c64:	mov	w2, #0x18                  	// #24
  412c68:	umaddl	x23, w23, w2, x0
  412c6c:	nop
  412c70:	str	xzr, [x0], #24
  412c74:	cmp	x0, x23
  412c78:	b.ne	412c70 <nftw@plt+0x100f0>  // b.any
  412c7c:	stp	x1, x24, [x19]
  412c80:	mov	x0, #0x30                  	// #48
  412c84:	str	w22, [x19, #40]
  412c88:	str	x19, [x20, #48]
  412c8c:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  412c90:	mov	x19, x0
  412c94:	mov	x0, #0xd                   	// #13
  412c98:	stp	xzr, xzr, [x19, #16]
  412c9c:	str	xzr, [x19, #32]
  412ca0:	strb	wzr, [x19, #44]
  412ca4:	bl	4161a8 <nftw@plt+0x13628>
  412ca8:	mov	w22, w0
  412cac:	mov	x1, #0x18                  	// #24
  412cb0:	ubfiz	x0, x22, #4, #32
  412cb4:	ldr	w21, [x21, x0]
  412cb8:	mov	w23, w21
  412cbc:	mov	x0, x23
  412cc0:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  412cc4:	cbz	x23, 412ce4 <nftw@plt+0x10164>
  412cc8:	mov	w2, #0x18                  	// #24
  412ccc:	mov	x1, x0
  412cd0:	umaddl	x21, w21, w2, x0
  412cd4:	nop
  412cd8:	str	xzr, [x1], #24
  412cdc:	cmp	x1, x21
  412ce0:	b.ne	412cd8 <nftw@plt+0x10158>  // b.any
  412ce4:	stp	x0, x23, [x19]
  412ce8:	str	w22, [x19, #40]
  412cec:	ldp	x21, x22, [sp, #32]
  412cf0:	ldp	x23, x24, [sp, #48]
  412cf4:	str	x19, [x20]
  412cf8:	ldp	x19, x20, [sp, #16]
  412cfc:	ldp	x29, x30, [sp], #64
  412d00:	ret
  412d04:	nop
  412d08:	mov	x9, x0
  412d0c:	adrp	x6, 45d000 <_obstack_memory_used@@Base+0x135a0>
  412d10:	ldr	w0, [x0, #32]
  412d14:	add	x6, x6, #0x298
  412d18:	mov	w7, #0x18                  	// #24
  412d1c:	ldr	w10, [x9, #40]
  412d20:	add	w0, w0, #0x1
  412d24:	str	w0, [x9, #32]
  412d28:	ldr	x5, [x9]
  412d2c:	lsl	x8, x10, #4
  412d30:	add	x4, x6, x8
  412d34:	ldr	w8, [x6, x8]
  412d38:	ldr	w3, [x4, #4]
  412d3c:	ldr	w11, [x4, #12]
  412d40:	umull	x3, w2, w3
  412d44:	lsr	x0, x3, #32
  412d48:	sub	w3, w2, w0
  412d4c:	add	w3, w0, w3, lsr #1
  412d50:	lsr	w3, w3, w11
  412d54:	msub	w3, w3, w8, w2
  412d58:	umull	x7, w3, w7
  412d5c:	add	x0, x5, x7
  412d60:	ldr	x7, [x5, x7]
  412d64:	cbz	x7, 412df4 <nftw@plt+0x10274>
  412d68:	cmp	x7, #0x1
  412d6c:	b.eq	412d7c <nftw@plt+0x101fc>  // b.none
  412d70:	ldr	x4, [x1]
  412d74:	cmp	x7, x4
  412d78:	b.eq	412df4 <nftw@plt+0x10274>  // b.none
  412d7c:	add	x10, x6, x10, lsl #4
  412d80:	sub	w8, w8, #0x2
  412d84:	add	w12, w2, #0x1
  412d88:	ldr	w6, [x9, #36]
  412d8c:	ldr	x7, [x9, #8]
  412d90:	ldr	w0, [x10, #8]
  412d94:	umull	x0, w2, w0
  412d98:	lsr	x0, x0, #32
  412d9c:	sub	w4, w2, w0
  412da0:	add	w4, w0, w4, lsr #1
  412da4:	lsr	w4, w4, w11
  412da8:	msub	w4, w4, w8, w12
  412dac:	nop
  412db0:	add	w2, w3, w4
  412db4:	add	w6, w6, #0x1
  412db8:	mov	x3, x2
  412dbc:	cmp	x7, w2, uxtw
  412dc0:	b.hi	412dcc <nftw@plt+0x1024c>  // b.pmore
  412dc4:	sub	w2, w2, w7
  412dc8:	mov	x3, x2
  412dcc:	add	x2, x2, x2, lsl #1
  412dd0:	add	x0, x5, x2, lsl #3
  412dd4:	ldr	x2, [x5, x2, lsl #3]
  412dd8:	cmp	x2, #0x1
  412ddc:	cbz	x2, 412df0 <nftw@plt+0x10270>
  412de0:	b.eq	412db0 <nftw@plt+0x10230>  // b.none
  412de4:	ldr	x8, [x1]
  412de8:	cmp	x8, x2
  412dec:	b.ne	412db0 <nftw@plt+0x10230>  // b.any
  412df0:	str	w6, [x9, #36]
  412df4:	ret
  412df8:	mov	x11, x0
  412dfc:	adrp	x6, 45d000 <_obstack_memory_used@@Base+0x135a0>
  412e00:	ldr	w0, [x0, #32]
  412e04:	add	x6, x6, #0x298
  412e08:	ldr	w8, [x11, #40]
  412e0c:	add	w0, w0, #0x1
  412e10:	str	w0, [x11, #32]
  412e14:	ldr	x10, [x11]
  412e18:	lsl	x4, x8, #4
  412e1c:	add	x5, x6, x4
  412e20:	ldr	w7, [x6, x4]
  412e24:	ldr	w3, [x5, #4]
  412e28:	ldr	w9, [x5, #12]
  412e2c:	umull	x3, w2, w3
  412e30:	lsr	x3, x3, #32
  412e34:	sub	w4, w2, w3
  412e38:	add	w3, w3, w4, lsr #1
  412e3c:	lsr	w3, w3, w9
  412e40:	msub	w3, w3, w7, w2
  412e44:	ubfiz	x4, x3, #4, #32
  412e48:	add	x0, x10, x4
  412e4c:	ldr	x4, [x10, x4]
  412e50:	cbz	x4, 412f0c <nftw@plt+0x1038c>
  412e54:	cmp	x4, #0x1
  412e58:	b.eq	412e70 <nftw@plt+0x102f0>  // b.none
  412e5c:	ldr	x5, [x1]
  412e60:	ldr	x13, [x4]
  412e64:	ldr	x12, [x5]
  412e68:	cmp	x13, x12
  412e6c:	b.eq	412f10 <nftw@plt+0x10390>  // b.none
  412e70:	add	x6, x6, x8, lsl #4
  412e74:	add	w8, w2, #0x1
  412e78:	sub	w0, w7, #0x2
  412e7c:	ldr	w4, [x11, #36]
  412e80:	ldr	x7, [x11, #8]
  412e84:	ldr	w5, [x6, #8]
  412e88:	umull	x5, w2, w5
  412e8c:	lsr	x5, x5, #32
  412e90:	sub	w2, w2, w5
  412e94:	add	w5, w5, w2, lsr #1
  412e98:	lsr	w5, w5, w9
  412e9c:	msub	w5, w5, w0, w8
  412ea0:	add	w2, w3, w5
  412ea4:	add	w4, w4, #0x1
  412ea8:	mov	x3, x2
  412eac:	cmp	x7, w2, uxtw
  412eb0:	b.hi	412ebc <nftw@plt+0x1033c>  // b.pmore
  412eb4:	sub	w2, w2, w7
  412eb8:	mov	x3, x2
  412ebc:	lsl	x2, x2, #4
  412ec0:	add	x0, x10, x2
  412ec4:	ldr	x2, [x10, x2]
  412ec8:	cmp	x2, #0x1
  412ecc:	cbz	x2, 412f08 <nftw@plt+0x10388>
  412ed0:	b.eq	412ea0 <nftw@plt+0x10320>  // b.none
  412ed4:	ldr	x6, [x1]
  412ed8:	ldr	x9, [x2]
  412edc:	ldr	x8, [x6]
  412ee0:	cmp	x9, x8
  412ee4:	b.ne	412ea0 <nftw@plt+0x10320>  // b.any
  412ee8:	ldr	x9, [x2, #8]
  412eec:	ldr	x8, [x6, #8]
  412ef0:	cmp	x9, x8
  412ef4:	b.ne	412ea0 <nftw@plt+0x10320>  // b.any
  412ef8:	ldr	w8, [x2, #16]
  412efc:	ldr	w2, [x6, #16]
  412f00:	cmp	w8, w2
  412f04:	b.ne	412ea0 <nftw@plt+0x10320>  // b.any
  412f08:	str	w4, [x11, #36]
  412f0c:	ret
  412f10:	ldr	x13, [x4, #8]
  412f14:	ldr	x12, [x5, #8]
  412f18:	cmp	x13, x12
  412f1c:	b.ne	412e70 <nftw@plt+0x102f0>  // b.any
  412f20:	ldr	w12, [x4, #16]
  412f24:	ldr	w4, [x5, #16]
  412f28:	cmp	w12, w4
  412f2c:	b.ne	412e70 <nftw@plt+0x102f0>  // b.any
  412f30:	ret
  412f34:	nop
  412f38:	stp	x29, x30, [sp, #-96]!
  412f3c:	mov	x29, sp
  412f40:	stp	x21, x22, [sp, #32]
  412f44:	mov	x22, x0
  412f48:	stp	x25, x26, [sp, #64]
  412f4c:	ldr	w26, [x0, #40]
  412f50:	ldp	x1, x0, [x0, #16]
  412f54:	stp	x19, x20, [sp, #16]
  412f58:	ldp	x20, x25, [x22]
  412f5c:	stp	x23, x24, [sp, #48]
  412f60:	sub	x1, x1, x0
  412f64:	lsl	x0, x1, #1
  412f68:	cmp	x25, x1, lsl #1
  412f6c:	add	x23, x20, x25, lsl #4
  412f70:	b.cc	413174 <nftw@plt+0x105f4>  // b.lo, b.ul, b.last
  412f74:	lsl	w1, w1, #3
  412f78:	mov	x2, #0x20                  	// #32
  412f7c:	cmp	x1, x2
  412f80:	csel	x1, x1, x2, cs  // cs = hs, nlast
  412f84:	cmp	x25, x1
  412f88:	b.hi	413174 <nftw@plt+0x105f4>  // b.pmore
  412f8c:	ldrb	w0, [x22, #44]
  412f90:	cbnz	w0, 413194 <nftw@plt+0x10614>
  412f94:	mov	x0, x25
  412f98:	mov	x1, #0x10                  	// #16
  412f9c:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  412fa0:	mov	x1, x0
  412fa4:	add	x2, x0, x25, lsl #4
  412fa8:	cbz	x25, 412fbc <nftw@plt+0x1043c>
  412fac:	nop
  412fb0:	str	xzr, [x1], #16
  412fb4:	cmp	x2, x1
  412fb8:	b.ne	412fb0 <nftw@plt+0x10430>  // b.any
  412fbc:	ldp	x1, x2, [x22, #16]
  412fc0:	mov	w19, #0x79b9                	// #31161
  412fc4:	adrp	x24, 45d000 <_obstack_memory_used@@Base+0x135a0>
  412fc8:	mov	x21, x20
  412fcc:	add	x24, x24, #0x298
  412fd0:	movk	w19, #0x9e37, lsl #16
  412fd4:	stp	x0, x25, [x22]
  412fd8:	sub	x1, x1, x2
  412fdc:	stp	x1, xzr, [x22, #16]
  412fe0:	str	w26, [x22, #40]
  412fe4:	b	412ff4 <nftw@plt+0x10474>
  412fe8:	add	x21, x21, #0x10
  412fec:	cmp	x23, x21
  412ff0:	b.ls	41314c <nftw@plt+0x105cc>  // b.plast
  412ff4:	ldr	x25, [x21]
  412ff8:	cmp	x25, #0x1
  412ffc:	b.ls	412fe8 <nftw@plt+0x10468>  // b.plast
  413000:	ldr	x3, [x25]
  413004:	mov	w2, #0x0                   	// #0
  413008:	mov	x1, #0x8                   	// #8
  41300c:	add	x0, sp, #0x58
  413010:	str	x3, [sp, #88]
  413014:	bl	449360 <nftw@plt+0x467e0>
  413018:	mov	w2, w0
  41301c:	ldr	x3, [x25, #8]
  413020:	mov	x1, #0x8                   	// #8
  413024:	add	x0, sp, #0x58
  413028:	str	x3, [sp, #88]
  41302c:	bl	449360 <nftw@plt+0x467e0>
  413030:	ldr	w4, [x25, #16]
  413034:	ldr	w2, [x22, #40]
  413038:	sub	w1, w19, w4
  41303c:	sub	w4, w4, w0
  413040:	sub	w1, w1, w0
  413044:	eor	w1, w1, w0, lsr #13
  413048:	lsl	x2, x2, #4
  41304c:	sub	w4, w4, w1
  413050:	sub	w3, w0, w1
  413054:	eor	w4, w4, w1, lsl #8
  413058:	add	x5, x24, x2
  41305c:	sub	w3, w3, w4
  413060:	sub	w1, w1, w4
  413064:	eor	w3, w3, w4, lsr #13
  413068:	ldr	w6, [x24, x2]
  41306c:	sub	w1, w1, w3
  413070:	sub	w4, w4, w3
  413074:	eor	w1, w1, w3, lsr #12
  413078:	ldr	w0, [x5, #4]
  41307c:	sub	w4, w4, w1
  413080:	sub	w3, w3, w1
  413084:	eor	w4, w4, w1, lsl #16
  413088:	ldr	w7, [x5, #12]
  41308c:	sub	w3, w3, w4
  413090:	sub	w2, w1, w4
  413094:	eor	w3, w3, w4, lsr #5
  413098:	sub	w2, w2, w3
  41309c:	sub	w4, w4, w3
  4130a0:	eor	w2, w2, w3, lsr #3
  4130a4:	sub	w4, w4, w2
  4130a8:	sub	w1, w3, w2
  4130ac:	eor	w2, w4, w2, lsl #10
  4130b0:	sub	w1, w1, w2
  4130b4:	eor	w1, w1, w2, lsr #15
  4130b8:	ldr	x3, [x22]
  4130bc:	umull	x0, w1, w0
  4130c0:	lsr	x2, x0, #32
  4130c4:	sub	w0, w1, w2
  4130c8:	add	w0, w2, w0, lsr #1
  4130cc:	lsr	w0, w0, w7
  4130d0:	msub	w0, w0, w6, w1
  4130d4:	ubfiz	x2, x0, #4, #32
  4130d8:	add	x8, x3, x2
  4130dc:	ldr	x2, [x3, x2]
  4130e0:	cbz	x2, 413138 <nftw@plt+0x105b8>
  4130e4:	ldr	w2, [x5, #8]
  4130e8:	add	w5, w1, #0x1
  4130ec:	sub	w6, w6, #0x2
  4130f0:	ldr	x4, [x22, #8]
  4130f4:	umull	x2, w1, w2
  4130f8:	lsr	x2, x2, #32
  4130fc:	sub	w1, w1, w2
  413100:	add	w1, w2, w1, lsr #1
  413104:	lsr	w1, w1, w7
  413108:	msub	w1, w1, w6, w5
  41310c:	nop
  413110:	add	w2, w0, w1
  413114:	mov	x0, x2
  413118:	cmp	x4, w2, uxtw
  41311c:	b.hi	413128 <nftw@plt+0x105a8>  // b.pmore
  413120:	sub	w2, w2, w4
  413124:	mov	x0, x2
  413128:	lsl	x2, x2, #4
  41312c:	add	x8, x3, x2
  413130:	ldr	x2, [x3, x2]
  413134:	cbnz	x2, 413110 <nftw@plt+0x10590>
  413138:	ldp	x0, x1, [x21]
  41313c:	stp	x0, x1, [x8]
  413140:	add	x21, x21, #0x10
  413144:	cmp	x23, x21
  413148:	b.hi	412ff4 <nftw@plt+0x10474>  // b.pmore
  41314c:	ldrb	w0, [x22, #44]
  413150:	cbnz	w0, 4131c4 <nftw@plt+0x10644>
  413154:	mov	x0, x20
  413158:	bl	402910 <free@plt>
  41315c:	ldp	x19, x20, [sp, #16]
  413160:	ldp	x21, x22, [sp, #32]
  413164:	ldp	x23, x24, [sp, #48]
  413168:	ldp	x25, x26, [sp, #64]
  41316c:	ldp	x29, x30, [sp], #96
  413170:	ret
  413174:	bl	4161a8 <nftw@plt+0x13628>
  413178:	mov	w26, w0
  41317c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  413180:	add	x1, x1, #0x298
  413184:	ubfiz	x0, x26, #4, #32
  413188:	ldr	w25, [x1, x0]
  41318c:	ldrb	w0, [x22, #44]
  413190:	cbz	w0, 412f94 <nftw@plt+0x10414>
  413194:	lsl	x0, x25, #4
  413198:	mov	x3, #0x0                   	// #0
  41319c:	mov	x2, #0x0                   	// #0
  4131a0:	mov	x1, #0x0                   	// #0
  4131a4:	bl	4165c0 <nftw@plt+0x13a40>
  4131a8:	cbnz	x0, 412fa0 <nftw@plt+0x10420>
  4131ac:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4131b0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4131b4:	add	x2, x2, #0x7e8
  4131b8:	add	x0, x0, #0x7f8
  4131bc:	mov	w1, #0x2b5                 	// #693
  4131c0:	bl	402bf0 <nftw@plt+0x70>
  4131c4:	mov	x0, x20
  4131c8:	bl	4165f8 <nftw@plt+0x13a78>
  4131cc:	ldp	x19, x20, [sp, #16]
  4131d0:	ldp	x21, x22, [sp, #32]
  4131d4:	ldp	x23, x24, [sp, #48]
  4131d8:	ldp	x25, x26, [sp, #64]
  4131dc:	ldp	x29, x30, [sp], #96
  4131e0:	ret
  4131e4:	nop
  4131e8:	stp	x29, x30, [sp, #-48]!
  4131ec:	cmp	w3, #0x1
  4131f0:	mov	x29, sp
  4131f4:	stp	x19, x20, [sp, #16]
  4131f8:	mov	w20, w3
  4131fc:	mov	x19, x0
  413200:	stp	x21, x22, [sp, #32]
  413204:	mov	x21, x1
  413208:	mov	w22, w2
  41320c:	ldr	x3, [x0, #8]
  413210:	b.eq	413370 <nftw@plt+0x107f0>  // b.none
  413214:	ldr	w0, [x19, #40]
  413218:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41321c:	ldr	w5, [x19, #32]
  413220:	add	x2, x2, #0x298
  413224:	ldr	x1, [x19]
  413228:	lsl	x0, x0, #4
  41322c:	add	x4, x2, x0
  413230:	add	w5, w5, #0x1
  413234:	str	w5, [x19, #32]
  413238:	add	w9, w22, #0x1
  41323c:	ldr	w5, [x4, #4]
  413240:	ldr	w7, [x4, #12]
  413244:	ldr	w4, [x4, #8]
  413248:	ldr	w2, [x2, x0]
  41324c:	umull	x5, w22, w5
  413250:	sub	w8, w2, #0x2
  413254:	umull	x4, w22, w4
  413258:	lsr	x5, x5, #32
  41325c:	sub	w0, w22, w5
  413260:	lsr	x4, x4, #32
  413264:	add	w5, w5, w0, lsr #1
  413268:	sub	w6, w22, w4
  41326c:	lsr	w5, w5, w7
  413270:	add	w6, w4, w6, lsr #1
  413274:	msub	w2, w5, w2, w22
  413278:	lsr	w6, w6, w7
  41327c:	msub	w6, w6, w8, w9
  413280:	ubfiz	x4, x2, #4, #32
  413284:	add	x0, x1, x4
  413288:	ldr	x4, [x1, x4]
  41328c:	cbz	x4, 4133c8 <nftw@plt+0x10848>
  413290:	cmp	x4, #0x1
  413294:	b.eq	4132b0 <nftw@plt+0x10730>  // b.none
  413298:	ldr	x5, [x21]
  41329c:	ldr	x8, [x4]
  4132a0:	ldr	x7, [x5]
  4132a4:	cmp	x8, x7
  4132a8:	b.eq	41338c <nftw@plt+0x1080c>  // b.none
  4132ac:	mov	x0, #0x0                   	// #0
  4132b0:	ldr	w5, [x19, #36]
  4132b4:	nop
  4132b8:	add	w4, w2, w6
  4132bc:	add	w5, w5, #0x1
  4132c0:	mov	x2, x4
  4132c4:	cmp	x3, w4, uxtw
  4132c8:	b.hi	4132d4 <nftw@plt+0x10754>  // b.pmore
  4132cc:	sub	w4, w4, w3
  4132d0:	mov	x2, x4
  4132d4:	lsl	x4, x4, #4
  4132d8:	add	x10, x1, x4
  4132dc:	ldr	x4, [x1, x4]
  4132e0:	cmp	x4, #0x1
  4132e4:	cbz	x4, 413344 <nftw@plt+0x107c4>
  4132e8:	b.eq	413338 <nftw@plt+0x107b8>  // b.none
  4132ec:	ldr	x7, [x21]
  4132f0:	ldr	x9, [x4]
  4132f4:	ldr	x8, [x7]
  4132f8:	cmp	x9, x8
  4132fc:	b.ne	4132b8 <nftw@plt+0x10738>  // b.any
  413300:	ldr	x9, [x4, #8]
  413304:	ldr	x8, [x7, #8]
  413308:	cmp	x9, x8
  41330c:	b.ne	4132b8 <nftw@plt+0x10738>  // b.any
  413310:	ldr	w8, [x4, #16]
  413314:	ldr	w4, [x7, #16]
  413318:	cmp	w8, w4
  41331c:	b.ne	4132b8 <nftw@plt+0x10738>  // b.any
  413320:	str	w5, [x19, #36]
  413324:	mov	x0, x10
  413328:	ldp	x19, x20, [sp, #16]
  41332c:	ldp	x21, x22, [sp, #32]
  413330:	ldp	x29, x30, [sp], #48
  413334:	ret
  413338:	cmp	x0, #0x0
  41333c:	csel	x0, x0, x10, ne  // ne = any
  413340:	b	4132b8 <nftw@plt+0x10738>
  413344:	str	w5, [x19, #36]
  413348:	cbz	w20, 4133b4 <nftw@plt+0x10834>
  41334c:	cbz	x0, 4133e8 <nftw@plt+0x10868>
  413350:	ldr	x1, [x19, #24]
  413354:	sub	x1, x1, #0x1
  413358:	str	x1, [x19, #24]
  41335c:	str	xzr, [x0]
  413360:	ldp	x19, x20, [sp, #16]
  413364:	ldp	x21, x22, [sp, #32]
  413368:	ldp	x29, x30, [sp], #48
  41336c:	ret
  413370:	ldr	x2, [x0, #16]
  413374:	add	x1, x3, x3, lsl #1
  413378:	cmp	x1, x2, lsl #2
  41337c:	b.hi	413214 <nftw@plt+0x10694>  // b.pmore
  413380:	bl	412f38 <nftw@plt+0x103b8>
  413384:	ldr	x3, [x19, #8]
  413388:	b	413214 <nftw@plt+0x10694>
  41338c:	ldr	x8, [x4, #8]
  413390:	ldr	x7, [x5, #8]
  413394:	cmp	x8, x7
  413398:	b.ne	4132ac <nftw@plt+0x1072c>  // b.any
  41339c:	ldr	w7, [x4, #16]
  4133a0:	ldr	w4, [x5, #16]
  4133a4:	cmp	w7, w4
  4133a8:	b.eq	413360 <nftw@plt+0x107e0>  // b.none
  4133ac:	mov	x0, #0x0                   	// #0
  4133b0:	b	4132b0 <nftw@plt+0x10730>
  4133b4:	mov	x0, #0x0                   	// #0
  4133b8:	ldp	x19, x20, [sp, #16]
  4133bc:	ldp	x21, x22, [sp, #32]
  4133c0:	ldp	x29, x30, [sp], #48
  4133c4:	ret
  4133c8:	cbz	w20, 4133b4 <nftw@plt+0x10834>
  4133cc:	ldr	x1, [x19, #16]
  4133d0:	ldp	x21, x22, [sp, #32]
  4133d4:	add	x1, x1, #0x1
  4133d8:	str	x1, [x19, #16]
  4133dc:	ldp	x19, x20, [sp, #16]
  4133e0:	ldp	x29, x30, [sp], #48
  4133e4:	ret
  4133e8:	mov	x0, x10
  4133ec:	b	4133cc <nftw@plt+0x1084c>
  4133f0:	stp	x29, x30, [sp, #-64]!
  4133f4:	mov	x29, sp
  4133f8:	stp	x19, x20, [sp, #16]
  4133fc:	mov	x20, x0
  413400:	ldp	x19, x1, [x0, #8]
  413404:	stp	x21, x22, [sp, #32]
  413408:	ldr	x0, [x0, #24]
  41340c:	ldr	x22, [x20]
  413410:	sub	x1, x1, x0
  413414:	add	x21, x19, x19, lsl #1
  413418:	str	x23, [sp, #48]
  41341c:	cmp	x19, x1, lsl #1
  413420:	ldr	w23, [x20, #40]
  413424:	lsl	x0, x1, #1
  413428:	add	x21, x22, x21, lsl #3
  41342c:	b.cc	413584 <nftw@plt+0x10a04>  // b.lo, b.ul, b.last
  413430:	lsl	w1, w1, #3
  413434:	mov	x2, #0x20                  	// #32
  413438:	cmp	x1, x2
  41343c:	csel	x1, x1, x2, cs  // cs = hs, nlast
  413440:	cmp	x19, x1
  413444:	b.hi	413584 <nftw@plt+0x10a04>  // b.pmore
  413448:	ldrb	w0, [x20, #44]
  41344c:	cbnz	w0, 4135a4 <nftw@plt+0x10a24>
  413450:	mov	x0, x19
  413454:	mov	x1, #0x18                  	// #24
  413458:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  41345c:	cbz	x19, 41347c <nftw@plt+0x108fc>
  413460:	add	x2, x19, x19, lsl #1
  413464:	mov	x1, x0
  413468:	add	x2, x0, x2, lsl #3
  41346c:	nop
  413470:	str	xzr, [x1], #24
  413474:	cmp	x2, x1
  413478:	b.ne	413470 <nftw@plt+0x108f0>  // b.any
  41347c:	ldp	x1, x2, [x20, #16]
  413480:	ubfiz	x3, x23, #4, #32
  413484:	adrp	x6, 45d000 <_obstack_memory_used@@Base+0x135a0>
  413488:	add	x6, x6, #0x298
  41348c:	mov	x4, x22
  413490:	add	x6, x6, x3
  413494:	mov	w7, #0x18                  	// #24
  413498:	stp	x0, x19, [x20]
  41349c:	sub	x1, x1, x2
  4134a0:	stp	x1, xzr, [x20, #16]
  4134a4:	str	w23, [x20, #40]
  4134a8:	b	4134b8 <nftw@plt+0x10938>
  4134ac:	add	x4, x4, #0x18
  4134b0:	cmp	x21, x4
  4134b4:	b.ls	413564 <nftw@plt+0x109e4>  // b.plast
  4134b8:	ldr	x2, [x4]
  4134bc:	cmp	x2, #0x1
  4134c0:	b.ls	4134ac <nftw@plt+0x1092c>  // b.plast
  4134c4:	ldp	w8, w1, [x6]
  4134c8:	ubfx	x11, x2, #3, #32
  4134cc:	asr	x2, x2, #3
  4134d0:	ldr	w10, [x6, #12]
  4134d4:	mul	x1, x1, x11
  4134d8:	lsr	x3, x1, #32
  4134dc:	sub	w1, w2, w3
  4134e0:	add	w1, w3, w1, lsr #1
  4134e4:	lsr	w1, w1, w10
  4134e8:	msub	w1, w1, w8, w2
  4134ec:	umull	x9, w1, w7
  4134f0:	add	x5, x0, x9
  4134f4:	ldr	x3, [x0, x9]
  4134f8:	cbz	x3, 413548 <nftw@plt+0x109c8>
  4134fc:	ldr	w3, [x6, #8]
  413500:	add	w5, w2, #0x1
  413504:	sub	w8, w8, #0x2
  413508:	mul	x3, x3, x11
  41350c:	lsr	x3, x3, #32
  413510:	sub	w2, w2, w3
  413514:	add	w2, w3, w2, lsr #1
  413518:	lsr	w2, w2, w10
  41351c:	msub	w2, w2, w8, w5
  413520:	add	w3, w1, w2
  413524:	mov	x1, x3
  413528:	cmp	x19, w3, uxtw
  41352c:	b.hi	413538 <nftw@plt+0x109b8>  // b.pmore
  413530:	sub	w3, w3, w19
  413534:	mov	x1, x3
  413538:	add	x3, x3, x3, lsl #1
  41353c:	add	x5, x0, x3, lsl #3
  413540:	ldr	x3, [x0, x3, lsl #3]
  413544:	cbnz	x3, 413520 <nftw@plt+0x109a0>
  413548:	ldp	x2, x3, [x4]
  41354c:	stp	x2, x3, [x5]
  413550:	add	x4, x4, #0x18
  413554:	ldur	x1, [x4, #-8]
  413558:	str	x1, [x5, #16]
  41355c:	cmp	x21, x4
  413560:	b.hi	4134b8 <nftw@plt+0x10938>  // b.pmore
  413564:	ldrb	w0, [x20, #44]
  413568:	cbnz	w0, 4135d8 <nftw@plt+0x10a58>
  41356c:	mov	x0, x22
  413570:	ldp	x19, x20, [sp, #16]
  413574:	ldp	x21, x22, [sp, #32]
  413578:	ldr	x23, [sp, #48]
  41357c:	ldp	x29, x30, [sp], #64
  413580:	b	402910 <free@plt>
  413584:	bl	4161a8 <nftw@plt+0x13628>
  413588:	mov	w23, w0
  41358c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  413590:	add	x1, x1, #0x298
  413594:	ubfiz	x0, x23, #4, #32
  413598:	ldr	w19, [x1, x0]
  41359c:	ldrb	w0, [x20, #44]
  4135a0:	cbz	w0, 413450 <nftw@plt+0x108d0>
  4135a4:	add	x0, x19, x19, lsl #1
  4135a8:	mov	x3, #0x0                   	// #0
  4135ac:	mov	x2, #0x0                   	// #0
  4135b0:	mov	x1, #0x0                   	// #0
  4135b4:	lsl	x0, x0, #3
  4135b8:	bl	4165c0 <nftw@plt+0x13a40>
  4135bc:	cbnz	x0, 41345c <nftw@plt+0x108dc>
  4135c0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4135c4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4135c8:	add	x2, x2, #0x7e8
  4135cc:	add	x0, x0, #0x7f8
  4135d0:	mov	w1, #0x2b5                 	// #693
  4135d4:	bl	402bf0 <nftw@plt+0x70>
  4135d8:	mov	x0, x22
  4135dc:	ldp	x19, x20, [sp, #16]
  4135e0:	ldp	x21, x22, [sp, #32]
  4135e4:	ldr	x23, [sp, #48]
  4135e8:	ldp	x29, x30, [sp], #64
  4135ec:	b	4165f8 <nftw@plt+0x13a78>
  4135f0:	stp	x29, x30, [sp, #-48]!
  4135f4:	cmp	w3, #0x1
  4135f8:	mov	x29, sp
  4135fc:	stp	x19, x20, [sp, #16]
  413600:	mov	x20, x0
  413604:	mov	w19, w2
  413608:	stp	x21, x22, [sp, #32]
  41360c:	mov	w22, w3
  413610:	mov	x21, x1
  413614:	ldr	x10, [x0, #8]
  413618:	b.eq	413750 <nftw@plt+0x10bd0>  // b.none
  41361c:	ldr	w3, [x20, #40]
  413620:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  413624:	ldr	w2, [x20, #32]
  413628:	add	x0, x0, #0x298
  41362c:	mov	w1, #0x18                  	// #24
  413630:	lsl	x5, x3, #4
  413634:	add	w2, w2, #0x1
  413638:	add	x6, x0, x5
  41363c:	str	w2, [x20, #32]
  413640:	ldr	x9, [x20]
  413644:	ldr	w4, [x6, #4]
  413648:	ldr	w2, [x0, x5]
  41364c:	ldr	w7, [x6, #12]
  413650:	umull	x4, w19, w4
  413654:	lsr	x4, x4, #32
  413658:	sub	w5, w19, w4
  41365c:	add	w4, w4, w5, lsr #1
  413660:	lsr	w4, w4, w7
  413664:	msub	w4, w4, w2, w19
  413668:	umull	x1, w4, w1
  41366c:	add	x8, x9, x1
  413670:	ldr	x1, [x9, x1]
  413674:	cbz	x1, 413780 <nftw@plt+0x10c00>
  413678:	cmp	x1, #0x1
  41367c:	b.eq	413690 <nftw@plt+0x10b10>  // b.none
  413680:	ldr	x5, [x21]
  413684:	cmp	x1, x5
  413688:	b.eq	41376c <nftw@plt+0x10bec>  // b.none
  41368c:	mov	x8, #0x0                   	// #0
  413690:	add	x0, x0, x3, lsl #4
  413694:	sub	w2, w2, #0x2
  413698:	add	w1, w19, #0x1
  41369c:	ldr	w5, [x20, #36]
  4136a0:	ldr	w0, [x0, #8]
  4136a4:	umull	x0, w19, w0
  4136a8:	lsr	x0, x0, #32
  4136ac:	sub	w6, w19, w0
  4136b0:	add	w6, w0, w6, lsr #1
  4136b4:	lsr	w6, w6, w7
  4136b8:	msub	w6, w6, w2, w1
  4136bc:	nop
  4136c0:	add	w2, w4, w6
  4136c4:	add	w5, w5, #0x1
  4136c8:	mov	x4, x2
  4136cc:	cmp	x10, w2, uxtw
  4136d0:	b.hi	4136dc <nftw@plt+0x10b5c>  // b.pmore
  4136d4:	sub	w2, w2, w10
  4136d8:	mov	x4, x2
  4136dc:	add	x2, x2, x2, lsl #1
  4136e0:	add	x0, x9, x2, lsl #3
  4136e4:	ldr	x2, [x9, x2, lsl #3]
  4136e8:	cmp	x2, #0x1
  4136ec:	cbz	x2, 413720 <nftw@plt+0x10ba0>
  4136f0:	b.eq	413714 <nftw@plt+0x10b94>  // b.none
  4136f4:	ldr	x7, [x21]
  4136f8:	cmp	x7, x2
  4136fc:	b.ne	4136c0 <nftw@plt+0x10b40>  // b.any
  413700:	str	w5, [x20, #36]
  413704:	ldp	x19, x20, [sp, #16]
  413708:	ldp	x21, x22, [sp, #32]
  41370c:	ldp	x29, x30, [sp], #48
  413710:	ret
  413714:	cmp	x8, #0x0
  413718:	csel	x8, x8, x0, ne  // ne = any
  41371c:	b	4136c0 <nftw@plt+0x10b40>
  413720:	str	w5, [x20, #36]
  413724:	cbz	w22, 4137a4 <nftw@plt+0x10c24>
  413728:	cbz	x8, 4137b8 <nftw@plt+0x10c38>
  41372c:	ldr	x1, [x20, #24]
  413730:	mov	x0, x8
  413734:	ldp	x21, x22, [sp, #32]
  413738:	sub	x1, x1, #0x1
  41373c:	str	x1, [x20, #24]
  413740:	str	xzr, [x8]
  413744:	ldp	x19, x20, [sp, #16]
  413748:	ldp	x29, x30, [sp], #48
  41374c:	ret
  413750:	ldr	x2, [x0, #16]
  413754:	add	x1, x10, x10, lsl #1
  413758:	cmp	x1, x2, lsl #2
  41375c:	b.hi	41361c <nftw@plt+0x10a9c>  // b.pmore
  413760:	bl	4133f0 <nftw@plt+0x10870>
  413764:	ldr	x10, [x20, #8]
  413768:	b	41361c <nftw@plt+0x10a9c>
  41376c:	mov	x0, x8
  413770:	ldp	x19, x20, [sp, #16]
  413774:	ldp	x21, x22, [sp, #32]
  413778:	ldp	x29, x30, [sp], #48
  41377c:	ret
  413780:	cbz	w22, 4137a4 <nftw@plt+0x10c24>
  413784:	ldr	x1, [x20, #16]
  413788:	mov	x0, x8
  41378c:	ldp	x21, x22, [sp, #32]
  413790:	add	x1, x1, #0x1
  413794:	str	x1, [x20, #16]
  413798:	ldp	x19, x20, [sp, #16]
  41379c:	ldp	x29, x30, [sp], #48
  4137a0:	ret
  4137a4:	mov	x0, #0x0                   	// #0
  4137a8:	ldp	x19, x20, [sp, #16]
  4137ac:	ldp	x21, x22, [sp, #32]
  4137b0:	ldp	x29, x30, [sp], #48
  4137b4:	ret
  4137b8:	mov	x8, x0
  4137bc:	b	413784 <nftw@plt+0x10c04>
  4137c0:	stp	x29, x30, [sp, #-32]!
  4137c4:	mov	x29, sp
  4137c8:	stp	x19, x20, [sp, #16]
  4137cc:	mov	x19, x0
  4137d0:	ldr	x0, [x0, #40]
  4137d4:	cbz	x0, 413804 <nftw@plt+0x10c84>
  4137d8:	ldr	x1, [x19, #32]
  4137dc:	cmp	x0, x1
  4137e0:	b.eq	413804 <nftw@plt+0x10c84>  // b.none
  4137e4:	ldr	x1, [x19, #48]
  4137e8:	sub	x0, x0, #0x1
  4137ec:	cmp	x1, x0
  4137f0:	b.cs	413804 <nftw@plt+0x10c84>  // b.hs, b.nlast
  4137f4:	mov	w0, #0x0                   	// #0
  4137f8:	ldp	x19, x20, [sp, #16]
  4137fc:	ldp	x29, x30, [sp], #32
  413800:	ret
  413804:	ldr	x0, [x19, #16]
  413808:	bl	402820 <feof@plt>
  41380c:	cbnz	w0, 4137f4 <nftw@plt+0x10c74>
  413810:	ldr	x0, [x19, #16]
  413814:	bl	402b70 <ferror@plt>
  413818:	cbnz	w0, 4137f4 <nftw@plt+0x10c74>
  41381c:	ldp	x0, x20, [x19, #24]
  413820:	ldr	x1, [x19, #40]
  413824:	cmp	x20, x1
  413828:	b.ne	41384c <nftw@plt+0x10ccc>  // b.any
  41382c:	cmp	x20, #0x0
  413830:	lsl	x20, x20, #1
  413834:	mov	x1, #0x1000                	// #4096
  413838:	csel	x20, x20, x1, ne  // ne = any
  41383c:	mov	x1, x20
  413840:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  413844:	stp	x0, x20, [x19, #24]
  413848:	ldr	x1, [x19, #40]
  41384c:	sub	x2, x20, x1
  413850:	ldr	x3, [x19, #16]
  413854:	add	x0, x0, x1
  413858:	mov	x1, #0x1                   	// #1
  41385c:	bl	4028d0 <fread@plt>
  413860:	mov	x20, x0
  413864:	ldr	x0, [x19, #16]
  413868:	bl	402b70 <ferror@plt>
  41386c:	cbnz	w0, 4137f4 <nftw@plt+0x10c74>
  413870:	ldr	x1, [x19, #40]
  413874:	cmp	x20, #0x0
  413878:	cset	w0, ne  // ne = any
  41387c:	add	x20, x1, x20
  413880:	str	x20, [x19, #40]
  413884:	ldp	x19, x20, [sp, #16]
  413888:	ldp	x29, x30, [sp], #32
  41388c:	ret
  413890:	stp	x29, x30, [sp, #-112]!
  413894:	mov	x29, sp
  413898:	stp	x19, x20, [sp, #16]
  41389c:	mov	w19, w0
  4138a0:	mov	w20, w2
  4138a4:	stp	x21, x22, [sp, #32]
  4138a8:	mov	x21, x8
  4138ac:	mov	x22, #0x0                   	// #0
  4138b0:	stp	x23, x24, [sp, #48]
  4138b4:	and	w24, w1, #0xff
  4138b8:	tbnz	w0, #31, 413994 <nftw@plt+0x10e14>
  4138bc:	stp	xzr, xzr, [sp, #80]
  4138c0:	cmp	w19, #0x1
  4138c4:	stp	xzr, xzr, [sp, #96]
  4138c8:	b.ls	413980 <nftw@plt+0x10e00>  // b.plast
  4138cc:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4138d0:	mov	w2, #0x0                   	// #0
  4138d4:	ldr	x0, [x23, #2296]
  4138d8:	cbz	w24, 4139d4 <nftw@plt+0x10e54>
  4138dc:	mov	w1, w19
  4138e0:	add	x3, sp, #0x48
  4138e4:	bl	42bfa0 <nftw@plt+0x29420>
  4138e8:	mov	w19, w0
  4138ec:	cmp	w20, #0x1
  4138f0:	b.eq	4139bc <nftw@plt+0x10e3c>  // b.none
  4138f4:	cmp	w20, #0x2
  4138f8:	b.ne	413938 <nftw@plt+0x10db8>  // b.any
  4138fc:	ldr	x0, [x23, #2296]
  413900:	mov	w1, w19
  413904:	bl	42bba0 <nftw@plt+0x29020>
  413908:	lsr	x0, x0, #32
  41390c:	cmp	w19, w0
  413910:	b.eq	41393c <nftw@plt+0x10dbc>  // b.none
  413914:	mov	x8, x21
  413918:	mov	w2, w20
  41391c:	mov	w1, w24
  413920:	bl	413890 <nftw@plt+0x10d10>
  413924:	ldp	x19, x20, [sp, #16]
  413928:	ldp	x21, x22, [sp, #32]
  41392c:	ldp	x23, x24, [sp, #48]
  413930:	ldp	x29, x30, [sp], #112
  413934:	ret
  413938:	cbnz	w20, 413a1c <nftw@plt+0x10e9c>
  41393c:	ldr	x0, [x23, #2296]
  413940:	add	x8, sp, #0x50
  413944:	ldr	x1, [sp, #72]
  413948:	mov	w2, w19
  41394c:	bl	42c788 <nftw@plt+0x29c08>
  413950:	str	x22, [sp, #96]
  413954:	cmp	w19, #0x1
  413958:	b.ls	413984 <nftw@plt+0x10e04>  // b.plast
  41395c:	ldp	x0, x1, [sp, #80]
  413960:	stp	x0, x1, [x21]
  413964:	ldp	x0, x1, [sp, #96]
  413968:	stp	x0, x1, [x21, #16]
  41396c:	ldp	x19, x20, [sp, #16]
  413970:	ldp	x21, x22, [sp, #32]
  413974:	ldp	x23, x24, [sp, #48]
  413978:	ldp	x29, x30, [sp], #112
  41397c:	ret
  413980:	str	x22, [sp, #96]
  413984:	mov	x0, #0x0                   	// #0
  413988:	cbnz	w19, 413a08 <nftw@plt+0x10e88>
  41398c:	str	x0, [sp, #80]
  413990:	b	41395c <nftw@plt+0x10ddc>
  413994:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  413998:	mov	w1, w0
  41399c:	ldr	x0, [x23, #2296]
  4139a0:	bl	42aff8 <nftw@plt+0x28478>
  4139a4:	mov	x22, x0
  4139a8:	ldr	x0, [x23, #2296]
  4139ac:	mov	w1, w19
  4139b0:	bl	42b010 <nftw@plt+0x28490>
  4139b4:	mov	w19, w0
  4139b8:	b	4138bc <nftw@plt+0x10d3c>
  4139bc:	ldr	x0, [x23, #2296]
  4139c0:	mov	w1, w19
  4139c4:	bl	42bba0 <nftw@plt+0x29020>
  4139c8:	cmp	w19, w0
  4139cc:	b.eq	41393c <nftw@plt+0x10dbc>  // b.none
  4139d0:	b	413914 <nftw@plt+0x10d94>
  4139d4:	mov	w1, w19
  4139d8:	mov	x2, #0x0                   	// #0
  4139dc:	bl	42c680 <nftw@plt+0x29b00>
  4139e0:	mov	w19, w0
  4139e4:	ldr	x0, [x23, #2296]
  4139e8:	mov	w1, w19
  4139ec:	add	x3, sp, #0x48
  4139f0:	mov	w2, #0x1                   	// #1
  4139f4:	bl	42bfa0 <nftw@plt+0x29420>
  4139f8:	mov	w19, w0
  4139fc:	cmp	w20, #0x1
  413a00:	b.ne	4138f4 <nftw@plt+0x10d74>  // b.any
  413a04:	b	4139bc <nftw@plt+0x10e3c>
  413a08:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  413a0c:	add	x0, x0, #0xb08
  413a10:	bl	402b10 <gettext@plt>
  413a14:	str	x0, [sp, #80]
  413a18:	b	41395c <nftw@plt+0x10ddc>
  413a1c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  413a20:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  413a24:	add	x2, x2, #0x810
  413a28:	add	x0, x0, #0x828
  413a2c:	mov	w1, #0xc7                  	// #199
  413a30:	bl	402bf0 <nftw@plt+0x70>
  413a34:	nop
  413a38:	stp	x29, x30, [sp, #-48]!
  413a3c:	mov	x29, sp
  413a40:	stp	x19, x20, [sp, #16]
  413a44:	mov	x19, x0
  413a48:	mov	w20, w2
  413a4c:	mov	x2, x1
  413a50:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  413a54:	add	x1, x1, #0xc88
  413a58:	str	x21, [sp, #32]
  413a5c:	mov	w21, w3
  413a60:	bl	402b30 <fprintf@plt>
  413a64:	mov	w3, w21
  413a68:	mov	w2, w20
  413a6c:	mov	x0, x19
  413a70:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  413a74:	add	x1, x1, #0x840
  413a78:	bl	402b30 <fprintf@plt>
  413a7c:	mov	x1, x19
  413a80:	mov	w0, #0xa                   	// #10
  413a84:	ldp	x19, x20, [sp, #16]
  413a88:	ldr	x21, [sp, #32]
  413a8c:	ldp	x29, x30, [sp], #48
  413a90:	b	4025e0 <fputc@plt>
  413a94:	nop
  413a98:	stp	x29, x30, [sp, #-80]!
  413a9c:	mov	x29, sp
  413aa0:	stp	x23, x24, [sp, #48]
  413aa4:	mov	x23, x2
  413aa8:	mov	w2, w1
  413aac:	stp	x21, x22, [sp, #32]
  413ab0:	mov	w22, w3
  413ab4:	mov	w3, #0x20                  	// #32
  413ab8:	mov	w21, w5
  413abc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  413ac0:	add	x1, x1, #0x868
  413ac4:	stp	x19, x20, [sp, #16]
  413ac8:	mov	w20, w4
  413acc:	mov	x19, x0
  413ad0:	str	x25, [sp, #64]
  413ad4:	bl	402b30 <fprintf@plt>
  413ad8:	mov	w24, #0x6667                	// #26215
  413adc:	mov	x1, x19
  413ae0:	mov	w0, #0x7c                  	// #124
  413ae4:	bl	4025e0 <fputc@plt>
  413ae8:	mov	w25, #0x1                   	// #1
  413aec:	movk	w24, #0x6666, lsl #16
  413af0:	cmp	w20, w25
  413af4:	b.le	413b34 <nftw@plt+0x10fb4>
  413af8:	ldrb	w0, [x23, #7]
  413afc:	mov	x1, x19
  413b00:	lsl	w0, w25, w0
  413b04:	add	w0, w0, w22
  413b08:	add	w25, w25, #0x1
  413b0c:	udiv	w0, w0, w21
  413b10:	smull	x6, w0, w24
  413b14:	asr	x6, x6, #34
  413b18:	sub	w6, w6, w0, asr #31
  413b1c:	add	w6, w6, w6, lsl #2
  413b20:	sub	w0, w0, w6, lsl #1
  413b24:	add	w0, w0, #0x30
  413b28:	bl	4025e0 <fputc@plt>
  413b2c:	cmp	w20, w25
  413b30:	b.ne	413af8 <nftw@plt+0x10f78>  // b.any
  413b34:	mov	x1, x19
  413b38:	mov	w0, #0xa                   	// #10
  413b3c:	ldp	x19, x20, [sp, #16]
  413b40:	ldp	x21, x22, [sp, #32]
  413b44:	ldp	x23, x24, [sp, #48]
  413b48:	ldr	x25, [sp, #64]
  413b4c:	ldp	x29, x30, [sp], #80
  413b50:	b	4025e0 <fputc@plt>
  413b54:	nop
  413b58:	stp	x29, x30, [sp, #-16]!
  413b5c:	mov	x0, #0x588                 	// #1416
  413b60:	mov	x29, sp
  413b64:	bl	44a3c0 <_obstack_memory_used@@Base+0x960>
  413b68:	mov	x3, x0
  413b6c:	mov	x4, #0x10                  	// #16
  413b70:	add	x1, x0, #0x588
  413b74:	mov	w2, #0x1                   	// #1
  413b78:	str	x4, [x3], #8
  413b7c:	mov	x0, x3
  413b80:	str	wzr, [x0]
  413b84:	stp	xzr, xzr, [x0, #8]
  413b88:	stp	xzr, xzr, [x0, #24]
  413b8c:	stp	xzr, xzr, [x0, #40]
  413b90:	stp	xzr, xzr, [x0, #56]
  413b94:	add	x0, x0, #0x58
  413b98:	sturb	w2, [x0, #-16]
  413b9c:	stur	xzr, [x0, #-8]
  413ba0:	cmp	x0, x1
  413ba4:	b.ne	413b80 <nftw@plt+0x11000>  // b.any
  413ba8:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  413bac:	ldp	x29, x30, [sp], #16
  413bb0:	str	x3, [x0, #2304]
  413bb4:	ret
  413bb8:	stp	x29, x30, [sp, #-48]!
  413bbc:	mov	x29, sp
  413bc0:	stp	x21, x22, [sp, #32]
  413bc4:	cbz	x0, 413c5c <nftw@plt+0x110dc>
  413bc8:	adrp	x21, 48d000 <__environ@@GLIBC_2.17+0xa68>
  413bcc:	add	x21, x21, #0x8f8
  413bd0:	stp	x19, x20, [sp, #16]
  413bd4:	mov	x20, x0
  413bd8:	ldr	x19, [x21, #8]
  413bdc:	cbz	x19, 413c50 <nftw@plt+0x110d0>
  413be0:	add	x21, x19, #0x580
  413be4:	mov	x22, #0x0                   	// #0
  413be8:	ldr	x0, [x19, #8]
  413bec:	mov	x1, x20
  413bf0:	cbz	x0, 413c0c <nftw@plt+0x1108c>
  413bf4:	bl	402890 <strcmp@plt>
  413bf8:	cbnz	w0, 413c0c <nftw@plt+0x1108c>
  413bfc:	ldr	w1, [x19]
  413c00:	mov	x22, x19
  413c04:	add	w1, w1, #0x1
  413c08:	str	w1, [x19]
  413c0c:	add	x19, x19, #0x58
  413c10:	cmp	x21, x19
  413c14:	b.ne	413be8 <nftw@plt+0x11068>  // b.any
  413c18:	cbz	x22, 413c3c <nftw@plt+0x110bc>
  413c1c:	ldr	w0, [x22]
  413c20:	ldp	x19, x20, [sp, #16]
  413c24:	add	w0, w0, #0x1
  413c28:	str	w0, [x22]
  413c2c:	mov	x0, x22
  413c30:	ldp	x21, x22, [sp, #32]
  413c34:	ldp	x29, x30, [sp], #48
  413c38:	ret
  413c3c:	mov	x0, x22
  413c40:	ldp	x19, x20, [sp, #16]
  413c44:	ldp	x21, x22, [sp, #32]
  413c48:	ldp	x29, x30, [sp], #48
  413c4c:	ret
  413c50:	bl	413b58 <nftw@plt+0x10fd8>
  413c54:	ldr	x19, [x21, #8]
  413c58:	b	413be0 <nftw@plt+0x11060>
  413c5c:	mov	x22, #0x0                   	// #0
  413c60:	b	413c2c <nftw@plt+0x110ac>
  413c64:	nop
  413c68:	stp	x29, x30, [sp, #-112]!
  413c6c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  413c70:	add	x1, x1, #0x598
  413c74:	mov	x29, sp
  413c78:	stp	x19, x20, [sp, #16]
  413c7c:	stp	x21, x22, [sp, #32]
  413c80:	mov	x22, x0
  413c84:	bl	402650 <fopen@plt>
  413c88:	cbz	x0, 413d94 <nftw@plt+0x11214>
  413c8c:	str	x23, [sp, #48]
  413c90:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  413c94:	add	x19, x23, #0x8f8
  413c98:	mov	x21, x0
  413c9c:	ldr	x2, [x19, #8]
  413ca0:	cbz	x2, 413dac <nftw@plt+0x1122c>
  413ca4:	mov	x1, x2
  413ca8:	add	x5, x2, #0x580
  413cac:	ldr	w20, [x1], #88
  413cb0:	mov	w4, w20
  413cb4:	b	413cd4 <nftw@plt+0x11154>
  413cb8:	ldr	x0, [x2, #8]
  413cbc:	cbz	x0, 413cf4 <nftw@plt+0x11174>
  413cc0:	cbz	x3, 413cfc <nftw@plt+0x1117c>
  413cc4:	add	x1, x1, #0x58
  413cc8:	cmp	x5, x1
  413ccc:	b.eq	413cf8 <nftw@plt+0x11178>  // b.none
  413cd0:	ldr	w4, [x2]
  413cd4:	ldr	w0, [x1]
  413cd8:	mov	x19, x1
  413cdc:	ldr	x3, [x1, #8]
  413ce0:	cmp	w20, w0
  413ce4:	csel	w20, w20, w0, cs  // cs = hs, nlast
  413ce8:	cmp	w0, w4
  413cec:	b.cs	413cb8 <nftw@plt+0x11138>  // b.hs, b.nlast
  413cf0:	mov	x2, x1
  413cf4:	cbnz	x3, 413cc4 <nftw@plt+0x11144>
  413cf8:	mov	x19, x2
  413cfc:	ldr	x0, [x19, #16]
  413d00:	str	x22, [x19, #8]
  413d04:	cbz	x0, 413d0c <nftw@plt+0x1118c>
  413d08:	bl	402620 <fclose@plt>
  413d0c:	ldr	x0, [x19, #80]
  413d10:	str	x21, [x19, #16]
  413d14:	stp	xzr, xzr, [x19, #40]
  413d18:	str	xzr, [x19, #56]
  413d1c:	cbz	x0, 413d24 <nftw@plt+0x111a4>
  413d20:	str	wzr, [x0, #4]
  413d24:	ldr	x0, [x23, #2296]
  413d28:	add	w20, w20, #0x1
  413d2c:	str	w20, [x19]
  413d30:	mov	x1, x22
  413d34:	add	x2, sp, #0x4c
  413d38:	str	wzr, [sp, #76]
  413d3c:	bl	42cb90 <nftw@plt+0x2a010>
  413d40:	tst	w0, #0xff
  413d44:	b.ne	413d70 <nftw@plt+0x111f0>  // b.any
  413d48:	mov	x1, #0x0                   	// #0
  413d4c:	mov	w0, #0x1                   	// #1
  413d50:	strb	w0, [x19, #72]
  413d54:	ldr	x23, [sp, #48]
  413d58:	str	x1, [x19, #64]
  413d5c:	mov	x0, x19
  413d60:	ldp	x19, x20, [sp, #16]
  413d64:	ldp	x21, x22, [sp, #32]
  413d68:	ldp	x29, x30, [sp], #112
  413d6c:	ret
  413d70:	ldr	w0, [sp, #76]
  413d74:	cmp	w0, #0x1
  413d78:	b.ls	413db8 <nftw@plt+0x11238>  // b.plast
  413d7c:	mov	w1, #0x1                   	// #1
  413d80:	add	x8, sp, #0x50
  413d84:	mov	w2, #0x0                   	// #0
  413d88:	bl	413890 <nftw@plt+0x10d10>
  413d8c:	ldrsw	x1, [sp, #88]
  413d90:	b	413d4c <nftw@plt+0x111cc>
  413d94:	mov	x19, #0x0                   	// #0
  413d98:	mov	x0, x19
  413d9c:	ldp	x19, x20, [sp, #16]
  413da0:	ldp	x21, x22, [sp, #32]
  413da4:	ldp	x29, x30, [sp], #112
  413da8:	ret
  413dac:	bl	413b58 <nftw@plt+0x10fd8>
  413db0:	ldr	x2, [x19, #8]
  413db4:	b	413ca4 <nftw@plt+0x11124>
  413db8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  413dbc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  413dc0:	add	x2, x2, #0x870
  413dc4:	add	x0, x0, #0x828
  413dc8:	mov	w1, #0x107                 	// #263
  413dcc:	bl	402bf0 <nftw@plt+0x70>
  413dd0:	stp	x29, x30, [sp, #-112]!
  413dd4:	mov	x29, sp
  413dd8:	stp	x19, x20, [sp, #16]
  413ddc:	mov	x19, x0
  413de0:	stp	x21, x22, [sp, #32]
  413de4:	mov	x21, x2
  413de8:	mov	x22, x1
  413dec:	bl	4137c0 <nftw@plt+0x10c40>
  413df0:	ldp	x3, x0, [x19, #40]
  413df4:	subs	x2, x3, x0
  413df8:	b.eq	413f54 <nftw@plt+0x113d4>  // b.none
  413dfc:	stp	x23, x24, [sp, #48]
  413e00:	mov	w1, #0xa                   	// #10
  413e04:	ldr	x23, [x19, #24]
  413e08:	add	x23, x23, x0
  413e0c:	mov	x0, x23
  413e10:	bl	4029e0 <memchr@plt>
  413e14:	mov	x20, x0
  413e18:	cbz	x0, 413f10 <nftw@plt+0x11390>
  413e1c:	add	x24, x0, #0x1
  413e20:	strb	wzr, [x19, #72]
  413e24:	ldr	x0, [x19, #16]
  413e28:	bl	402b70 <ferror@plt>
  413e2c:	cbnz	w0, 413f50 <nftw@plt+0x113d0>
  413e30:	stp	x25, x26, [sp, #64]
  413e34:	sub	x26, x20, x23
  413e38:	ldp	x0, x25, [x19, #40]
  413e3c:	cmp	x25, x0
  413e40:	b.cs	413e48 <nftw@plt+0x112c8>  // b.hs, b.nlast
  413e44:	str	x23, [x22]
  413e48:	ldp	x22, x1, [x19, #56]
  413e4c:	add	x22, x22, #0x1
  413e50:	str	x22, [x19, #56]
  413e54:	cmp	x22, x1
  413e58:	b.hi	413ec0 <nftw@plt+0x11340>  // b.pmore
  413e5c:	ldr	x23, [x19, #80]
  413e60:	cbz	x23, 413f68 <nftw@plt+0x113e8>
  413e64:	ldr	w0, [x23, #4]
  413e68:	cmp	w0, #0x63
  413e6c:	b.hi	413ec0 <nftw@plt+0x11340>  // b.pmore
  413e70:	cmp	x1, #0x64
  413e74:	b.hi	413fbc <nftw@plt+0x1143c>  // b.pmore
  413e78:	cmp	x22, w0, uxtw
  413e7c:	mov	w2, w0
  413e80:	b.ls	413ec0 <nftw@plt+0x11340>  // b.plast
  413e84:	ldr	w6, [x23]
  413e88:	add	w1, w0, #0x1
  413e8c:	ldr	x3, [x19, #24]
  413e90:	ubfx	x6, x6, #0, #31
  413e94:	cmp	w0, w6
  413e98:	sub	x20, x20, x3
  413e9c:	b.eq	414130 <nftw@plt+0x115b0>  // b.none
  413ea0:	add	x2, x2, x2, lsl #1
  413ea4:	str	w1, [x23, #4]
  413ea8:	lsl	x2, x2, #3
  413eac:	add	x0, x2, #0x8
  413eb0:	add	x1, x23, x0
  413eb4:	str	x22, [x23, x0]
  413eb8:	stp	x25, x20, [x1, #8]
  413ebc:	nop
  413ec0:	cbz	x24, 413fb4 <nftw@plt+0x11434>
  413ec4:	ldr	x0, [x19, #24]
  413ec8:	sub	x0, x24, x0
  413ecc:	ldp	x23, x24, [sp, #48]
  413ed0:	str	x0, [x19, #48]
  413ed4:	str	x26, [x21]
  413ed8:	mov	w0, #0x1                   	// #1
  413edc:	ldp	x19, x20, [sp, #16]
  413ee0:	ldp	x21, x22, [sp, #32]
  413ee4:	ldp	x25, x26, [sp, #64]
  413ee8:	ldp	x29, x30, [sp], #112
  413eec:	ret
  413ef0:	ldp	x2, x3, [x19, #40]
  413ef4:	mov	w1, #0xa                   	// #10
  413ef8:	ldr	x0, [x19, #24]
  413efc:	add	x23, x0, x3
  413f00:	sub	x2, x2, x3
  413f04:	mov	x0, x23
  413f08:	bl	4029e0 <memchr@plt>
  413f0c:	cbnz	x0, 413fa4 <nftw@plt+0x11424>
  413f10:	mov	x0, x19
  413f14:	bl	4137c0 <nftw@plt+0x10c40>
  413f18:	tst	w0, #0xff
  413f1c:	b.ne	413ef0 <nftw@plt+0x11370>  // b.any
  413f20:	ldp	x0, x20, [x19, #16]
  413f24:	mov	w1, #0x1                   	// #1
  413f28:	strb	w1, [x19, #72]
  413f2c:	ldr	x24, [x19, #40]
  413f30:	bl	402b70 <ferror@plt>
  413f34:	cbnz	w0, 413f50 <nftw@plt+0x113d0>
  413f38:	stp	x25, x26, [sp, #64]
  413f3c:	adds	x0, x20, x24
  413f40:	b.eq	414204 <nftw@plt+0x11684>  // b.none
  413f44:	mov	x20, x0
  413f48:	mov	x24, #0x0                   	// #0
  413f4c:	b	413e34 <nftw@plt+0x112b4>
  413f50:	ldp	x23, x24, [sp, #48]
  413f54:	mov	w0, #0x0                   	// #0
  413f58:	ldp	x19, x20, [sp, #16]
  413f5c:	ldp	x21, x22, [sp, #32]
  413f60:	ldp	x29, x30, [sp], #112
  413f64:	ret
  413f68:	cmp	x1, #0x64
  413f6c:	b.ls	414020 <nftw@plt+0x114a0>  // b.plast
  413f70:	ldr	x2, [x19, #24]
  413f74:	mov	x1, #0x68                  	// #104
  413f78:	mov	x0, #0x0                   	// #0
  413f7c:	stp	x27, x28, [sp, #80]
  413f80:	sub	x20, x20, x2
  413f84:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  413f88:	str	x0, [x19, #80]
  413f8c:	mov	x1, #0x4                   	// #4
  413f90:	mov	w27, #0x0                   	// #0
  413f94:	mov	x23, x0
  413f98:	str	x1, [x0]
  413f9c:	add	w1, w27, #0x1
  413fa0:	b	413ffc <nftw@plt+0x1147c>
  413fa4:	add	x24, x0, #0x1
  413fa8:	mov	x20, x0
  413fac:	strb	wzr, [x19, #72]
  413fb0:	b	413e24 <nftw@plt+0x112a4>
  413fb4:	ldr	x0, [x19, #40]
  413fb8:	b	413ecc <nftw@plt+0x1134c>
  413fbc:	stp	x27, x28, [sp, #80]
  413fc0:	mov	w27, w0
  413fc4:	cbz	w0, 413fe0 <nftw@plt+0x11460>
  413fc8:	add	x2, x22, x22, lsl #1
  413fcc:	add	x2, x22, x2, lsl #3
  413fd0:	lsl	x2, x2, #2
  413fd4:	udiv	x1, x2, x1
  413fd8:	cmp	x1, w0, uxtw
  413fdc:	b.cc	414018 <nftw@plt+0x11498>  // b.lo, b.ul, b.last
  413fe0:	ldr	w6, [x23]
  413fe4:	add	w1, w0, #0x1
  413fe8:	ldr	x2, [x19, #24]
  413fec:	ubfx	x6, x6, #0, #31
  413ff0:	cmp	w0, w6
  413ff4:	sub	x20, x20, x2
  413ff8:	b.eq	414060 <nftw@plt+0x114e0>  // b.none
  413ffc:	mov	w0, #0x18                  	// #24
  414000:	mov	x2, #0x8                   	// #8
  414004:	str	w1, [x23, #4]
  414008:	umaddl	x0, w27, w0, x2
  41400c:	add	x1, x23, x0
  414010:	str	x22, [x23, x0]
  414014:	stp	x25, x20, [x1, #8]
  414018:	ldp	x27, x28, [sp, #80]
  41401c:	b	413ec0 <nftw@plt+0x11340>
  414020:	cbz	x22, 413ec0 <nftw@plt+0x11340>
  414024:	ldr	x2, [x19, #24]
  414028:	mov	x1, #0x68                  	// #104
  41402c:	mov	x0, #0x0                   	// #0
  414030:	stp	x27, x28, [sp, #80]
  414034:	sub	x20, x20, x2
  414038:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41403c:	mov	x23, x0
  414040:	str	x0, [x19, #80]
  414044:	mov	x1, #0x4                   	// #4
  414048:	mov	w27, #0x0                   	// #0
  41404c:	str	x1, [x0]
  414050:	mov	w2, w27
  414054:	add	w1, w27, #0x1
  414058:	ldp	x27, x28, [sp, #80]
  41405c:	b	413ea0 <nftw@plt+0x11320>
  414060:	ldrsb	w2, [x23, #3]
  414064:	str	w6, [sp, #108]
  414068:	tbnz	w2, #31, 4140a8 <nftw@plt+0x11528>
  41406c:	bl	411bd8 <nftw@plt+0xf058>
  414070:	and	w28, w0, #0x7fffffff
  414074:	mov	w1, #0x18                  	// #24
  414078:	mov	x3, #0x8                   	// #8
  41407c:	mov	w27, #0x0                   	// #0
  414080:	umaddl	x1, w0, w1, x3
  414084:	ldr	x0, [x19, #80]
  414088:	cbz	x0, 414090 <nftw@plt+0x11510>
  41408c:	ldr	w27, [x0, #4]
  414090:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  414094:	str	x0, [x19, #80]
  414098:	mov	x23, x0
  41409c:	add	w1, w27, #0x1
  4140a0:	stp	w28, w27, [x0]
  4140a4:	b	413ffc <nftw@plt+0x1147c>
  4140a8:	cmp	w1, #0x4
  4140ac:	mov	w28, #0x4                   	// #4
  4140b0:	csel	w28, w1, w28, cs  // cs = hs, nlast
  4140b4:	mov	w2, #0x18                  	// #24
  4140b8:	mov	x27, #0x8                   	// #8
  4140bc:	str	xzr, [x19, #80]
  4140c0:	mov	x0, #0x0                   	// #0
  4140c4:	umaddl	x1, w28, w2, x27
  4140c8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4140cc:	str	x0, [x19, #80]
  4140d0:	ldr	w6, [sp, #108]
  4140d4:	and	x1, x28, #0x7fffffff
  4140d8:	str	x1, [x0]
  4140dc:	mov	w2, #0x18                  	// #24
  4140e0:	cbz	w6, 41411c <nftw@plt+0x1159c>
  4140e4:	sub	w7, w6, #0x1
  4140e8:	mov	x3, #0x20                  	// #32
  4140ec:	mov	x1, x27
  4140f0:	umaddl	x7, w7, w2, x3
  4140f4:	nop
  4140f8:	add	x5, x23, x1
  4140fc:	add	x4, x0, x1
  414100:	add	x1, x1, #0x18
  414104:	cmp	x7, x1
  414108:	ldp	x2, x3, [x5]
  41410c:	stp	x2, x3, [x4]
  414110:	ldr	x2, [x5, #16]
  414114:	str	x2, [x4, #16]
  414118:	b.ne	4140f8 <nftw@plt+0x11578>  // b.any
  41411c:	mov	x23, x0
  414120:	add	w1, w6, #0x1
  414124:	mov	w27, w6
  414128:	str	w6, [x0, #4]
  41412c:	b	413ffc <nftw@plt+0x1147c>
  414130:	ldrsb	w2, [x23, #3]
  414134:	stp	x27, x28, [sp, #80]
  414138:	str	w6, [sp, #108]
  41413c:	tbnz	w2, #31, 414178 <nftw@plt+0x115f8>
  414140:	bl	411bd8 <nftw@plt+0xf058>
  414144:	and	w28, w0, #0x7fffffff
  414148:	mov	w1, #0x18                  	// #24
  41414c:	mov	x3, #0x8                   	// #8
  414150:	mov	w27, #0x0                   	// #0
  414154:	umaddl	x1, w0, w1, x3
  414158:	ldr	x0, [x19, #80]
  41415c:	cbz	x0, 414164 <nftw@plt+0x115e4>
  414160:	ldr	w27, [x0, #4]
  414164:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  414168:	str	x0, [x19, #80]
  41416c:	mov	x23, x0
  414170:	stp	w28, w27, [x0]
  414174:	b	414050 <nftw@plt+0x114d0>
  414178:	cmp	w1, #0x4
  41417c:	mov	w28, #0x4                   	// #4
  414180:	csel	w28, w1, w28, cs  // cs = hs, nlast
  414184:	mov	w2, #0x18                  	// #24
  414188:	mov	x27, #0x8                   	// #8
  41418c:	str	xzr, [x19, #80]
  414190:	mov	x0, #0x0                   	// #0
  414194:	umaddl	x1, w28, w2, x27
  414198:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41419c:	str	x0, [x19, #80]
  4141a0:	ldr	w6, [sp, #108]
  4141a4:	mov	w1, w28
  4141a8:	str	x1, [x0]
  4141ac:	mov	w2, #0x18                  	// #24
  4141b0:	cbz	w6, 4141ec <nftw@plt+0x1166c>
  4141b4:	sub	w7, w6, #0x1
  4141b8:	mov	x3, #0x20                  	// #32
  4141bc:	mov	x1, x27
  4141c0:	umaddl	x7, w7, w2, x3
  4141c4:	nop
  4141c8:	add	x5, x23, x1
  4141cc:	add	x4, x0, x1
  4141d0:	add	x1, x1, #0x18
  4141d4:	cmp	x7, x1
  4141d8:	ldp	x2, x3, [x5]
  4141dc:	stp	x2, x3, [x4]
  4141e0:	ldr	x2, [x5, #16]
  4141e4:	str	x2, [x4, #16]
  4141e8:	b.ne	4141c8 <nftw@plt+0x11648>  // b.any
  4141ec:	mov	x23, x0
  4141f0:	mov	w2, w6
  4141f4:	add	w1, w6, #0x1
  4141f8:	ldp	x27, x28, [sp, #80]
  4141fc:	str	w6, [x0, #4]
  414200:	b	413ea0 <nftw@plt+0x11320>
  414204:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414208:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41420c:	add	x2, x2, #0x880
  414210:	add	x0, x0, #0x828
  414214:	mov	w1, #0x241                 	// #577
  414218:	stp	x27, x28, [sp, #80]
  41421c:	bl	402bf0 <nftw@plt+0x70>
  414220:	stp	x29, x30, [sp, #-32]!
  414224:	mov	x29, sp
  414228:	str	x19, [sp, #16]
  41422c:	cbz	x0, 414280 <nftw@plt+0x11700>
  414230:	bl	413bb8 <nftw@plt+0x11038>
  414234:	mov	x19, x0
  414238:	cbz	x0, 414274 <nftw@plt+0x116f4>
  41423c:	ldr	x0, [x0, #16]
  414240:	str	xzr, [x19, #8]
  414244:	cbz	x0, 41424c <nftw@plt+0x116cc>
  414248:	bl	402620 <fclose@plt>
  41424c:	ldr	x0, [x19, #80]
  414250:	str	xzr, [x19, #16]
  414254:	stp	xzr, xzr, [x19, #40]
  414258:	str	xzr, [x19, #56]
  41425c:	cbz	x0, 414264 <nftw@plt+0x116e4>
  414260:	str	wzr, [x0, #4]
  414264:	mov	w0, #0x1                   	// #1
  414268:	str	wzr, [x19]
  41426c:	str	xzr, [x19, #64]
  414270:	strb	w0, [x19, #72]
  414274:	ldr	x19, [sp, #16]
  414278:	ldp	x29, x30, [sp], #32
  41427c:	ret
  414280:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414284:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414288:	add	x2, x2, #0x890
  41428c:	add	x0, x0, #0x828
  414290:	mov	w1, #0x133                 	// #307
  414294:	bl	402bf0 <nftw@plt+0x70>
  414298:	mov	w1, #0x1                   	// #1
  41429c:	str	wzr, [x0]
  4142a0:	stp	xzr, xzr, [x0, #8]
  4142a4:	stp	xzr, xzr, [x0, #24]
  4142a8:	stp	xzr, xzr, [x0, #40]
  4142ac:	stp	xzr, xzr, [x0, #56]
  4142b0:	strb	w1, [x0, #72]
  4142b4:	str	xzr, [x0, #80]
  4142b8:	ret
  4142bc:	nop
  4142c0:	stp	x29, x30, [sp, #-32]!
  4142c4:	mov	x29, sp
  4142c8:	str	x19, [sp, #16]
  4142cc:	mov	x19, x0
  4142d0:	ldr	x0, [x0, #16]
  4142d4:	cbz	x0, 4142dc <nftw@plt+0x1175c>
  4142d8:	bl	402620 <fclose@plt>
  4142dc:	ldr	x0, [x19, #24]
  4142e0:	cbz	x0, 4142e8 <nftw@plt+0x11768>
  4142e4:	bl	402910 <free@plt>
  4142e8:	ldr	x0, [x19, #80]
  4142ec:	cbz	x0, 414308 <nftw@plt+0x11788>
  4142f0:	ldrsb	w1, [x0, #3]
  4142f4:	tbnz	w1, #31, 414304 <nftw@plt+0x11784>
  4142f8:	ldr	x19, [sp, #16]
  4142fc:	ldp	x29, x30, [sp], #32
  414300:	b	402910 <free@plt>
  414304:	str	wzr, [x0, #4]
  414308:	ldr	x19, [sp, #16]
  41430c:	ldp	x29, x30, [sp], #32
  414310:	ret
  414314:	nop
  414318:	stp	x29, x30, [sp, #-48]!
  41431c:	mov	x29, sp
  414320:	stp	x19, x20, [sp, #16]
  414324:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  414328:	add	x20, x20, #0x8f8
  41432c:	ldr	x0, [x20, #8]
  414330:	cbz	x0, 41439c <nftw@plt+0x1181c>
  414334:	ldur	x2, [x0, #-8]
  414338:	add	x1, x2, x2, lsl #1
  41433c:	lsl	x1, x1, #2
  414340:	sub	x1, x1, x2
  414344:	lsl	x1, x1, #3
  414348:	add	x19, x0, x1
  41434c:	cmp	x0, x19
  414350:	b.eq	41438c <nftw@plt+0x1180c>  // b.none
  414354:	str	x21, [sp, #32]
  414358:	mov	x21, x19
  41435c:	sub	x19, x19, #0x58
  414360:	mov	x0, x19
  414364:	bl	4142c0 <nftw@plt+0x11740>
  414368:	ldr	x0, [x20, #8]
  41436c:	cmp	x0, x19
  414370:	b.ne	414358 <nftw@plt+0x117d8>  // b.any
  414374:	ldur	x0, [x21, #-96]
  414378:	ldr	x21, [sp, #32]
  41437c:	add	x1, x0, x0, lsl #1
  414380:	lsl	x1, x1, #2
  414384:	sub	x1, x1, x0
  414388:	lsl	x1, x1, #3
  41438c:	add	x1, x1, #0x8
  414390:	sub	x0, x19, #0x8
  414394:	bl	44a120 <_obstack_memory_used@@Base+0x6c0>
  414398:	str	xzr, [x20, #8]
  41439c:	ldp	x19, x20, [sp, #16]
  4143a0:	ldp	x29, x30, [sp], #48
  4143a4:	ret
  4143a8:	stp	x29, x30, [sp, #-80]!
  4143ac:	mov	x29, sp
  4143b0:	str	xzr, [sp, #56]
  4143b4:	cbnz	w1, 4143c8 <nftw@plt+0x11848>
  4143b8:	mov	x0, #0x0                   	// #0
  4143bc:	mov	x1, #0x0                   	// #0
  4143c0:	ldp	x29, x30, [sp], #80
  4143c4:	ret
  4143c8:	stp	x19, x20, [sp, #16]
  4143cc:	mov	w19, w1
  4143d0:	str	x21, [sp, #32]
  4143d4:	mov	x21, x0
  4143d8:	bl	413bb8 <nftw@plt+0x11038>
  4143dc:	mov	x20, x0
  4143e0:	cbz	x0, 4144ac <nftw@plt+0x1192c>
  4143e4:	ldr	x0, [x20, #56]
  4143e8:	sxtw	x2, w19
  4143ec:	cmp	x0, w19, sxtw
  4143f0:	b.cs	414448 <nftw@plt+0x118c8>  // b.hs, b.nlast
  4143f4:	sub	x19, x2, #0x1
  4143f8:	b	414414 <nftw@plt+0x11894>
  4143fc:	add	x1, sp, #0x40
  414400:	mov	x0, x20
  414404:	bl	413dd0 <nftw@plt+0x11250>
  414408:	tst	w0, #0xff
  41440c:	b.eq	4144bc <nftw@plt+0x1193c>  // b.none
  414410:	ldr	x0, [x20, #56]
  414414:	add	x2, sp, #0x48
  414418:	cmp	x19, x0
  41441c:	b.hi	4143fc <nftw@plt+0x1187c>  // b.pmore
  414420:	mov	x0, x20
  414424:	add	x1, sp, #0x38
  414428:	bl	413dd0 <nftw@plt+0x11250>
  41442c:	tst	w0, #0xff
  414430:	b.eq	4144bc <nftw@plt+0x1193c>  // b.none
  414434:	ldp	x19, x20, [sp, #16]
  414438:	ldr	x21, [sp, #32]
  41443c:	ldr	x0, [sp, #56]
  414440:	ldr	x1, [sp, #72]
  414444:	b	4143c0 <nftw@plt+0x11840>
  414448:	ldr	x0, [x20, #80]
  41444c:	cbz	x0, 4144a0 <nftw@plt+0x11920>
  414450:	ldr	w4, [x0, #4]
  414454:	cbz	w4, 4144a0 <nftw@plt+0x11920>
  414458:	ldr	x3, [x20, #64]
  41445c:	cmp	x3, #0x64
  414460:	b.hi	4144c8 <nftw@plt+0x11948>  // b.pmore
  414464:	cmp	x2, x3
  414468:	b.hi	414514 <nftw@plt+0x11994>  // b.pmore
  41446c:	sub	w1, w19, #0x1
  414470:	mov	w3, #0x18                  	// #24
  414474:	umaddl	x1, w1, w3, x0
  414478:	add	x3, x1, #0x8
  41447c:	ldr	x0, [x3]
  414480:	cmp	x2, x0
  414484:	b.cc	414564 <nftw@plt+0x119e4>  // b.lo, b.ul, b.last
  414488:	cmp	x2, x0
  41448c:	ldr	x4, [x3, #8]
  414490:	b.eq	414530 <nftw@plt+0x119b0>  // b.none
  414494:	sub	x0, x0, #0x1
  414498:	stp	x4, x0, [x20, #48]
  41449c:	b	4143f4 <nftw@plt+0x11874>
  4144a0:	mov	x0, #0x0                   	// #0
  4144a4:	stp	xzr, xzr, [x20, #48]
  4144a8:	b	4143f4 <nftw@plt+0x11874>
  4144ac:	mov	x0, x21
  4144b0:	bl	413c68 <nftw@plt+0x110e8>
  4144b4:	mov	x20, x0
  4144b8:	cbnz	x0, 4143e4 <nftw@plt+0x11864>
  4144bc:	ldp	x19, x20, [sp, #16]
  4144c0:	ldr	x21, [sp, #32]
  4144c4:	b	4143b8 <nftw@plt+0x11838>
  4144c8:	cmp	x2, x3
  4144cc:	b.hi	414528 <nftw@plt+0x119a8>  // b.pmore
  4144d0:	mov	w1, #0x64                  	// #100
  4144d4:	smull	x1, w19, w1
  4144d8:	udiv	x1, x1, x3
  4144dc:	cmp	x1, w4, uxtw
  4144e0:	b.cs	4144a0 <nftw@plt+0x11920>  // b.hs, b.nlast
  4144e4:	ubfiz	x3, x1, #1, #32
  4144e8:	add	x4, x1, x1, lsl #1
  4144ec:	add	x1, x3, w1, uxtw
  4144f0:	lsl	x4, x4, #3
  4144f4:	add	x1, x0, x1, lsl #3
  4144f8:	add	x4, x4, #0x8
  4144fc:	add	x3, x0, x4
  414500:	ldr	x1, [x1, #8]
  414504:	cmp	x2, x1
  414508:	b.cc	41454c <nftw@plt+0x119cc>  // b.lo, b.ul, b.last
  41450c:	ldr	x0, [x0, x4]
  414510:	b	414488 <nftw@plt+0x11908>
  414514:	sub	w1, w3, #0x1
  414518:	mov	w3, #0x18                  	// #24
  41451c:	umaddl	x1, w1, w3, x0
  414520:	add	x3, x1, #0x8
  414524:	b	41447c <nftw@plt+0x118fc>
  414528:	sub	w1, w4, #0x1
  41452c:	b	4144dc <nftw@plt+0x1195c>
  414530:	ldr	x1, [x3, #16]
  414534:	ldr	x0, [x20, #24]
  414538:	sub	x1, x1, x4
  41453c:	ldp	x19, x20, [sp, #16]
  414540:	add	x0, x0, x4
  414544:	ldr	x21, [sp, #32]
  414548:	b	4143c0 <nftw@plt+0x11840>
  41454c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414550:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414554:	add	x2, x2, #0x8c0
  414558:	add	x0, x0, #0x828
  41455c:	mov	w1, #0x2c1                 	// #705
  414560:	bl	402bf0 <nftw@plt+0x70>
  414564:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414568:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41456c:	add	x2, x2, #0x8c0
  414570:	add	x0, x0, #0x828
  414574:	mov	w1, #0x2b2                 	// #690
  414578:	bl	402bf0 <nftw@plt+0x70>
  41457c:	nop
  414580:	stp	x29, x30, [sp, #-32]!
  414584:	mov	x29, sp
  414588:	str	x19, [sp, #16]
  41458c:	mov	x19, x0
  414590:	bl	413bb8 <nftw@plt+0x11038>
  414594:	mov	x1, x0
  414598:	cbz	x0, 4145ac <nftw@plt+0x11a2c>
  41459c:	ldrb	w0, [x1, #72]
  4145a0:	ldr	x19, [sp, #16]
  4145a4:	ldp	x29, x30, [sp], #32
  4145a8:	ret
  4145ac:	mov	x0, x19
  4145b0:	bl	413c68 <nftw@plt+0x110e8>
  4145b4:	mov	x1, x0
  4145b8:	mov	w0, #0x0                   	// #0
  4145bc:	cbnz	x1, 41459c <nftw@plt+0x11a1c>
  4145c0:	ldr	x19, [sp, #16]
  4145c4:	ldp	x29, x30, [sp], #32
  4145c8:	ret
  4145cc:	nop
  4145d0:	stp	x29, x30, [sp, #-32]!
  4145d4:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4145d8:	mov	w1, w0
  4145dc:	mov	x29, sp
  4145e0:	ldr	x0, [x2, #2296]
  4145e4:	add	x3, sp, #0x18
  4145e8:	mov	w2, #0x1                   	// #1
  4145ec:	str	xzr, [sp, #24]
  4145f0:	bl	42bfa0 <nftw@plt+0x29420>
  4145f4:	cmp	w0, #0x1
  4145f8:	cset	w0, eq  // eq = none
  4145fc:	ldp	x29, x30, [sp], #32
  414600:	ret
  414604:	nop
  414608:	stp	x29, x30, [sp, #-16]!
  41460c:	mov	w2, #0x0                   	// #0
  414610:	mov	w1, #0x1                   	// #1
  414614:	mov	x29, sp
  414618:	bl	413890 <nftw@plt+0x10d10>
  41461c:	ldp	x29, x30, [sp], #16
  414620:	ret
  414624:	nop
  414628:	stp	x29, x30, [sp, #-16]!
  41462c:	mov	w2, w1
  414630:	mov	w1, #0x0                   	// #0
  414634:	mov	x29, sp
  414638:	bl	413890 <nftw@plt+0x10d10>
  41463c:	ldp	x29, x30, [sp], #16
  414640:	ret
  414644:	nop
  414648:	stp	x29, x30, [sp, #-16]!
  41464c:	mov	x29, sp
  414650:	bl	414628 <nftw@plt+0x11aa8>
  414654:	ldp	x29, x30, [sp], #16
  414658:	ret
  41465c:	nop
  414660:	stp	x29, x30, [sp, #-32]!
  414664:	mov	x29, sp
  414668:	stp	x19, x20, [sp, #16]
  41466c:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  414670:	mov	w19, w0
  414674:	ldr	x0, [x20, #2296]
  414678:	mov	w1, w19
  41467c:	bl	42bea8 <nftw@plt+0x29328>
  414680:	cbnz	w0, 414694 <nftw@plt+0x11b14>
  414684:	mov	w0, w19
  414688:	ldp	x19, x20, [sp, #16]
  41468c:	ldp	x29, x30, [sp], #32
  414690:	ret
  414694:	ldr	x0, [x20, #2296]
  414698:	mov	w1, w19
  41469c:	ldp	x19, x20, [sp, #16]
  4146a0:	mov	x3, #0x0                   	// #0
  4146a4:	ldp	x29, x30, [sp], #32
  4146a8:	mov	w2, #0x0                   	// #0
  4146ac:	b	42bfa0 <nftw@plt+0x29420>
  4146b0:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4146b4:	mov	w1, w0
  4146b8:	mov	x3, #0x0                   	// #0
  4146bc:	ldr	x0, [x2, #2296]
  4146c0:	mov	w2, #0x0                   	// #0
  4146c4:	b	42bfa0 <nftw@plt+0x29420>
  4146c8:	stp	x29, x30, [sp, #-48]!
  4146cc:	mov	w3, w0
  4146d0:	mov	x29, sp
  4146d4:	stp	x19, x20, [sp, #16]
  4146d8:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4146dc:	mov	w20, w1
  4146e0:	ldr	x0, [x19, #2296]
  4146e4:	mov	w1, w3
  4146e8:	stp	x21, x22, [sp, #32]
  4146ec:	mov	w22, w2
  4146f0:	bl	42bc98 <nftw@plt+0x29118>
  4146f4:	mov	w21, w0
  4146f8:	ldr	x0, [x19, #2296]
  4146fc:	mov	w1, w20
  414700:	bl	42bba0 <nftw@plt+0x29020>
  414704:	mov	x20, x0
  414708:	ldr	x0, [x19, #2296]
  41470c:	mov	w1, w22
  414710:	bl	42bba0 <nftw@plt+0x29020>
  414714:	mov	x2, x0
  414718:	mov	w1, w21
  41471c:	mov	x3, #0x0                   	// #0
  414720:	ldr	x0, [x19, #2296]
  414724:	bfxil	x2, x20, #0, #32
  414728:	ldp	x19, x20, [sp, #16]
  41472c:	ldp	x21, x22, [sp, #32]
  414730:	ldp	x29, x30, [sp], #48
  414734:	b	42b980 <nftw@plt+0x28e00>
  414738:	stp	x29, x30, [sp, #-32]!
  41473c:	mov	x29, sp
  414740:	stp	x19, x20, [sp, #16]
  414744:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  414748:	mov	x19, x1
  41474c:	mov	w1, w0
  414750:	ldr	x0, [x20, #2296]
  414754:	bl	42bc98 <nftw@plt+0x29118>
  414758:	mov	w1, w0
  41475c:	mov	x2, x19
  414760:	mov	x3, #0x0                   	// #0
  414764:	ldr	x0, [x20, #2296]
  414768:	ldp	x19, x20, [sp, #16]
  41476c:	ldp	x29, x30, [sp], #32
  414770:	b	42b980 <nftw@plt+0x28e00>
  414774:	nop
  414778:	stp	x29, x30, [sp, #-176]!
  41477c:	mov	x29, sp
  414780:	str	x23, [sp, #48]
  414784:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  414788:	add	x1, sp, #0x48
  41478c:	stp	x19, x20, [sp, #16]
  414790:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x425a0>
  414794:	ldr	x0, [x23, #2296]
  414798:	stp	x21, x22, [sp, #32]
  41479c:	stp	xzr, xzr, [sp, #72]
  4147a0:	stp	xzr, xzr, [sp, #88]
  4147a4:	stp	xzr, xzr, [sp, #104]
  4147a8:	stp	xzr, xzr, [sp, #120]
  4147ac:	stp	xzr, xzr, [sp, #136]
  4147b0:	stp	xzr, xzr, [sp, #152]
  4147b4:	str	xzr, [sp, #168]
  4147b8:	bl	42cc70 <nftw@plt+0x2a0f0>
  4147bc:	ldp	x21, x20, [sp, #88]
  4147c0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4147c4:	ldp	x3, x22, [sp, #128]
  4147c8:	add	x1, x1, #0x8d0
  4147cc:	ldr	x0, [x19, #1392]
  4147d0:	ldr	x2, [sp, #104]
  4147d4:	add	x21, x21, x3
  4147d8:	add	x20, x22, x20
  4147dc:	ldr	x3, [sp, #144]
  4147e0:	add	x20, x20, x3
  4147e4:	add	x22, x22, x3
  4147e8:	add	x21, x21, x3
  4147ec:	bl	402b30 <fprintf@plt>
  4147f0:	ldr	x2, [sp, #104]
  4147f4:	cbnz	x2, 414c68 <nftw@plt+0x120e8>
  4147f8:	ldr	x3, [x19, #1392]
  4147fc:	mov	x2, #0x37                  	// #55
  414800:	mov	x1, #0x1                   	// #1
  414804:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414808:	add	x0, x0, #0x940
  41480c:	bl	402950 <fwrite@plt>
  414810:	ldr	x2, [sp, #80]
  414814:	mov	x1, #0x27ff                	// #10239
  414818:	ldr	x0, [x19, #1392]
  41481c:	cmp	x2, x1
  414820:	mov	w3, #0x20                  	// #32
  414824:	b.le	41483c <nftw@plt+0x11cbc>
  414828:	mov	w1, #0x9fffff              	// #10485759
  41482c:	cmp	x2, x1
  414830:	b.gt	414c5c <nftw@plt+0x120dc>
  414834:	asr	x2, x2, #10
  414838:	mov	w3, #0x6b                  	// #107
  41483c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414840:	add	x1, x1, #0x978
  414844:	bl	402b30 <fprintf@plt>
  414848:	ldr	x2, [sp, #96]
  41484c:	mov	x1, #0x27ff                	// #10239
  414850:	ldr	x0, [x19, #1392]
  414854:	cmp	x2, x1
  414858:	mov	w3, #0x20                  	// #32
  41485c:	b.le	414874 <nftw@plt+0x11cf4>
  414860:	mov	w1, #0x9fffff              	// #10485759
  414864:	cmp	x2, x1
  414868:	b.gt	414c50 <nftw@plt+0x120d0>
  41486c:	asr	x2, x2, #10
  414870:	mov	w3, #0x6b                  	// #107
  414874:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414878:	add	x1, x1, #0x9a8
  41487c:	bl	402b30 <fprintf@plt>
  414880:	ldr	x2, [sp, #72]
  414884:	mov	x1, #0x27ff                	// #10239
  414888:	ldr	x0, [x19, #1392]
  41488c:	cmp	x2, x1
  414890:	mov	w3, #0x20                  	// #32
  414894:	b.le	4148ac <nftw@plt+0x11d2c>
  414898:	mov	w1, #0x9fffff              	// #10485759
  41489c:	cmp	x2, x1
  4148a0:	b.gt	414c44 <nftw@plt+0x120c4>
  4148a4:	asr	x2, x2, #10
  4148a8:	mov	w3, #0x6b                  	// #107
  4148ac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4148b0:	add	x1, x1, #0x9d8
  4148b4:	bl	402b30 <fprintf@plt>
  4148b8:	ldr	x2, [sp, #88]
  4148bc:	mov	x1, #0x27ff                	// #10239
  4148c0:	ldr	x0, [x19, #1392]
  4148c4:	cmp	x2, x1
  4148c8:	mov	w3, #0x20                  	// #32
  4148cc:	b.le	4148e4 <nftw@plt+0x11d64>
  4148d0:	mov	w1, #0x9fffff              	// #10485759
  4148d4:	cmp	x2, x1
  4148d8:	b.gt	414c38 <nftw@plt+0x120b8>
  4148dc:	asr	x2, x2, #10
  4148e0:	mov	w3, #0x6b                  	// #107
  4148e4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4148e8:	add	x1, x1, #0xa08
  4148ec:	bl	402b30 <fprintf@plt>
  4148f0:	ldr	x2, [sp, #120]
  4148f4:	mov	x1, #0x27ff                	// #10239
  4148f8:	ldr	x0, [x19, #1392]
  4148fc:	cmp	x2, x1
  414900:	mov	w3, #0x20                  	// #32
  414904:	b.le	41491c <nftw@plt+0x11d9c>
  414908:	mov	w1, #0x9fffff              	// #10485759
  41490c:	cmp	x2, x1
  414910:	b.gt	414c2c <nftw@plt+0x120ac>
  414914:	asr	x2, x2, #10
  414918:	mov	w3, #0x6b                  	// #107
  41491c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414920:	add	x1, x1, #0xa38
  414924:	bl	402b30 <fprintf@plt>
  414928:	ldr	x2, [sp, #136]
  41492c:	mov	x1, #0x27ff                	// #10239
  414930:	ldr	x0, [x19, #1392]
  414934:	cmp	x2, x1
  414938:	mov	w3, #0x20                  	// #32
  41493c:	b.le	414954 <nftw@plt+0x11dd4>
  414940:	mov	w1, #0x9fffff              	// #10485759
  414944:	cmp	x2, x1
  414948:	b.gt	414c20 <nftw@plt+0x120a0>
  41494c:	asr	x2, x2, #10
  414950:	mov	w3, #0x6b                  	// #107
  414954:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414958:	add	x1, x1, #0xa68
  41495c:	bl	402b30 <fprintf@plt>
  414960:	ldr	x2, [sp, #144]
  414964:	mov	x1, #0x27ff                	// #10239
  414968:	ldr	x0, [x19, #1392]
  41496c:	cmp	x2, x1
  414970:	mov	w3, #0x20                  	// #32
  414974:	b.le	41498c <nftw@plt+0x11e0c>
  414978:	mov	w1, #0x9fffff              	// #10485759
  41497c:	cmp	x2, x1
  414980:	b.gt	414c14 <nftw@plt+0x12094>
  414984:	asr	x2, x2, #10
  414988:	mov	w3, #0x6b                  	// #107
  41498c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414990:	add	x1, x1, #0xa98
  414994:	bl	402b30 <fprintf@plt>
  414998:	mov	x0, #0x27ff                	// #10239
  41499c:	cmp	x22, x0
  4149a0:	ldr	x0, [x19, #1392]
  4149a4:	b.le	4149c0 <nftw@plt+0x11e40>
  4149a8:	mov	w1, #0x9fffff              	// #10485759
  4149ac:	cmp	x22, x1
  4149b0:	b.gt	414c08 <nftw@plt+0x12088>
  4149b4:	asr	x2, x22, #10
  4149b8:	mov	w3, #0x6b                  	// #107
  4149bc:	b	4149c8 <nftw@plt+0x11e48>
  4149c0:	mov	x2, x22
  4149c4:	mov	w3, #0x20                  	// #32
  4149c8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4149cc:	add	x1, x1, #0xac8
  4149d0:	bl	402b30 <fprintf@plt>
  4149d4:	ldr	x2, [sp, #152]
  4149d8:	mov	x1, #0x27ff                	// #10239
  4149dc:	ldr	x0, [x19, #1392]
  4149e0:	cmp	x2, x1
  4149e4:	mov	w3, #0x20                  	// #32
  4149e8:	b.le	414a00 <nftw@plt+0x11e80>
  4149ec:	mov	w1, #0x9fffff              	// #10485759
  4149f0:	cmp	x2, x1
  4149f4:	b.gt	414bfc <nftw@plt+0x1207c>
  4149f8:	asr	x2, x2, #10
  4149fc:	mov	w3, #0x6b                  	// #107
  414a00:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414a04:	add	x1, x1, #0xaf8
  414a08:	bl	402b30 <fprintf@plt>
  414a0c:	mov	x0, #0x27ff                	// #10239
  414a10:	cmp	x21, x0
  414a14:	ldr	x0, [x19, #1392]
  414a18:	b.le	414b48 <nftw@plt+0x11fc8>
  414a1c:	mov	w1, #0x9fffff              	// #10485759
  414a20:	cmp	x21, x1
  414a24:	b.gt	414bf0 <nftw@plt+0x12070>
  414a28:	asr	x2, x21, #10
  414a2c:	mov	w3, #0x6b                  	// #107
  414a30:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414a34:	add	x1, x1, #0xb28
  414a38:	bl	402b30 <fprintf@plt>
  414a3c:	mov	x0, #0x27ff                	// #10239
  414a40:	cmp	x20, x0
  414a44:	ldr	x0, [x19, #1392]
  414a48:	b.gt	414b6c <nftw@plt+0x11fec>
  414a4c:	mov	x2, x20
  414a50:	mov	w3, #0x20                  	// #32
  414a54:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414a58:	add	x1, x1, #0xb58
  414a5c:	bl	402b30 <fprintf@plt>
  414a60:	ldr	x2, [sp, #160]
  414a64:	mov	x1, #0x27ff                	// #10239
  414a68:	ldr	x0, [x19, #1392]
  414a6c:	cmp	x2, x1
  414a70:	mov	w3, #0x20                  	// #32
  414a74:	b.le	414a8c <nftw@plt+0x11f0c>
  414a78:	mov	w1, #0x9fffff              	// #10485759
  414a7c:	cmp	x2, x1
  414a80:	b.gt	414bd8 <nftw@plt+0x12058>
  414a84:	asr	x2, x2, #10
  414a88:	mov	w3, #0x6b                  	// #107
  414a8c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414a90:	add	x1, x1, #0xb88
  414a94:	bl	402b30 <fprintf@plt>
  414a98:	ldr	x2, [sp, #168]
  414a9c:	mov	x1, #0x27ff                	// #10239
  414aa0:	ldr	x0, [x19, #1392]
  414aa4:	cmp	x2, x1
  414aa8:	mov	w3, #0x20                  	// #32
  414aac:	b.le	414ac4 <nftw@plt+0x11f44>
  414ab0:	mov	w1, #0x9fffff              	// #10485759
  414ab4:	cmp	x2, x1
  414ab8:	b.gt	414bcc <nftw@plt+0x1204c>
  414abc:	asr	x2, x2, #10
  414ac0:	mov	w3, #0x6b                  	// #107
  414ac4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414ac8:	add	x1, x1, #0xbb8
  414acc:	bl	402b30 <fprintf@plt>
  414ad0:	ldr	x2, [x23, #2296]
  414ad4:	mov	w1, #0x27ff                	// #10239
  414ad8:	ldr	x0, [x19, #1392]
  414adc:	ldr	w2, [x2, #124]
  414ae0:	cmp	w2, w1
  414ae4:	b.hi	414b84 <nftw@plt+0x12004>  // b.pmore
  414ae8:	mov	w2, w2
  414aec:	mov	w3, #0x20                  	// #32
  414af0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414af4:	add	x1, x1, #0xbe8
  414af8:	bl	402b30 <fprintf@plt>
  414afc:	ldr	x2, [x23, #2296]
  414b00:	mov	w1, #0x27ff                	// #10239
  414b04:	ldr	x0, [x19, #1392]
  414b08:	ldr	w2, [x2, #128]
  414b0c:	cmp	w2, w1
  414b10:	b.hi	414b9c <nftw@plt+0x1201c>  // b.pmore
  414b14:	mov	w2, w2
  414b18:	mov	w3, #0x20                  	// #32
  414b1c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414b20:	add	x1, x1, #0xc18
  414b24:	bl	402b30 <fprintf@plt>
  414b28:	ldr	x1, [x19, #1392]
  414b2c:	mov	w0, #0xa                   	// #10
  414b30:	bl	4025e0 <fputc@plt>
  414b34:	ldp	x19, x20, [sp, #16]
  414b38:	ldp	x21, x22, [sp, #32]
  414b3c:	ldr	x23, [sp, #48]
  414b40:	ldp	x29, x30, [sp], #176
  414b44:	ret
  414b48:	mov	x2, x21
  414b4c:	mov	w3, #0x20                  	// #32
  414b50:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414b54:	add	x1, x1, #0xb28
  414b58:	bl	402b30 <fprintf@plt>
  414b5c:	mov	x0, #0x27ff                	// #10239
  414b60:	cmp	x20, x0
  414b64:	ldr	x0, [x19, #1392]
  414b68:	b.le	414a4c <nftw@plt+0x11ecc>
  414b6c:	mov	w1, #0x9fffff              	// #10485759
  414b70:	cmp	x20, x1
  414b74:	b.gt	414be4 <nftw@plt+0x12064>
  414b78:	asr	x2, x20, #10
  414b7c:	mov	w3, #0x6b                  	// #107
  414b80:	b	414a54 <nftw@plt+0x11ed4>
  414b84:	mov	w1, #0x9fffff              	// #10485759
  414b88:	cmp	w2, w1
  414b8c:	b.hi	414bc0 <nftw@plt+0x12040>  // b.pmore
  414b90:	lsr	w2, w2, #10
  414b94:	mov	w3, #0x6b                  	// #107
  414b98:	b	414af0 <nftw@plt+0x11f70>
  414b9c:	mov	w1, #0x9fffff              	// #10485759
  414ba0:	cmp	w2, w1
  414ba4:	b.hi	414bb4 <nftw@plt+0x12034>  // b.pmore
  414ba8:	lsr	w2, w2, #10
  414bac:	mov	w3, #0x6b                  	// #107
  414bb0:	b	414b1c <nftw@plt+0x11f9c>
  414bb4:	lsr	w2, w2, #20
  414bb8:	mov	w3, #0x4d                  	// #77
  414bbc:	b	414b1c <nftw@plt+0x11f9c>
  414bc0:	lsr	w2, w2, #20
  414bc4:	mov	w3, #0x4d                  	// #77
  414bc8:	b	414af0 <nftw@plt+0x11f70>
  414bcc:	asr	x2, x2, #20
  414bd0:	mov	w3, #0x4d                  	// #77
  414bd4:	b	414ac4 <nftw@plt+0x11f44>
  414bd8:	asr	x2, x2, #20
  414bdc:	mov	w3, #0x4d                  	// #77
  414be0:	b	414a8c <nftw@plt+0x11f0c>
  414be4:	asr	x2, x20, #20
  414be8:	mov	w3, #0x4d                  	// #77
  414bec:	b	414a54 <nftw@plt+0x11ed4>
  414bf0:	asr	x2, x21, #20
  414bf4:	mov	w3, #0x4d                  	// #77
  414bf8:	b	414b50 <nftw@plt+0x11fd0>
  414bfc:	asr	x2, x2, #20
  414c00:	mov	w3, #0x4d                  	// #77
  414c04:	b	414a00 <nftw@plt+0x11e80>
  414c08:	asr	x2, x22, #20
  414c0c:	mov	w3, #0x4d                  	// #77
  414c10:	b	4149c8 <nftw@plt+0x11e48>
  414c14:	asr	x2, x2, #20
  414c18:	mov	w3, #0x4d                  	// #77
  414c1c:	b	41498c <nftw@plt+0x11e0c>
  414c20:	asr	x2, x2, #20
  414c24:	mov	w3, #0x4d                  	// #77
  414c28:	b	414954 <nftw@plt+0x11dd4>
  414c2c:	asr	x2, x2, #20
  414c30:	mov	w3, #0x4d                  	// #77
  414c34:	b	41491c <nftw@plt+0x11d9c>
  414c38:	asr	x2, x2, #20
  414c3c:	mov	w3, #0x4d                  	// #77
  414c40:	b	4148e4 <nftw@plt+0x11d64>
  414c44:	asr	x2, x2, #20
  414c48:	mov	w3, #0x4d                  	// #77
  414c4c:	b	4148ac <nftw@plt+0x11d2c>
  414c50:	asr	x2, x2, #20
  414c54:	mov	w3, #0x4d                  	// #77
  414c58:	b	414874 <nftw@plt+0x11cf4>
  414c5c:	asr	x2, x2, #20
  414c60:	mov	w3, #0x4d                  	// #77
  414c64:	b	41483c <nftw@plt+0x11cbc>
  414c68:	ldr	x3, [sp, #112]
  414c6c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414c70:	ldr	x0, [x19, #1392]
  414c74:	add	x1, x1, #0x908
  414c78:	sdiv	x2, x3, x2
  414c7c:	bl	402b30 <fprintf@plt>
  414c80:	b	4147f8 <nftw@plt+0x11c78>
  414c84:	nop
  414c88:	stp	x29, x30, [sp, #-224]!
  414c8c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414c90:	mov	w3, #0x2                   	// #2
  414c94:	mov	x29, sp
  414c98:	add	x1, x1, #0xc50
  414c9c:	mov	w2, #0x0                   	// #0
  414ca0:	stp	x19, x20, [sp, #16]
  414ca4:	mov	x19, x0
  414ca8:	stp	x21, x22, [sp, #32]
  414cac:	stp	x23, x24, [sp, #48]
  414cb0:	stp	x25, x26, [sp, #64]
  414cb4:	stp	x27, x28, [sp, #80]
  414cb8:	bl	413a38 <nftw@plt+0x10eb8>
  414cbc:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  414cc0:	ldr	x1, [x0, #2296]
  414cc4:	ldr	w0, [x1, #12]
  414cc8:	cbz	w0, 415000 <nftw@plt+0x12480>
  414ccc:	adrp	x27, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414cd0:	add	x2, x27, #0xc68
  414cd4:	adrp	x26, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414cd8:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414cdc:	add	x3, x3, #0xc80
  414ce0:	stp	x2, x3, [sp, #128]
  414ce4:	add	x2, x26, #0x840
  414ce8:	str	x2, [sp, #120]
  414cec:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414cf0:	add	x2, x2, #0xc90
  414cf4:	str	x2, [sp, #144]
  414cf8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414cfc:	add	x2, x2, #0xcc8
  414d00:	str	x2, [sp, #160]
  414d04:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414d08:	add	x2, x2, #0xcf8
  414d0c:	str	x2, [sp, #176]
  414d10:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414d14:	add	x2, x2, #0xd10
  414d18:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414d1c:	str	x2, [sp, #184]
  414d20:	add	x2, x25, #0xd60
  414d24:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414d28:	add	x3, x3, #0xca8
  414d2c:	str	x2, [sp, #112]
  414d30:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  414d34:	add	x20, x2, #0x8f8
  414d38:	str	wzr, [sp, #104]
  414d3c:	str	x3, [sp, #152]
  414d40:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414d44:	add	x3, x3, #0xce0
  414d48:	str	x3, [sp, #168]
  414d4c:	nop
  414d50:	ldr	w2, [sp, #104]
  414d54:	sub	w0, w0, #0x1
  414d58:	ldr	x25, [x1]
  414d5c:	cmp	w0, w2
  414d60:	b.eq	4152b0 <nftw@plt+0x12730>  // b.none
  414d64:	ldr	w0, [sp, #104]
  414d68:	mov	w1, #0x18                  	// #24
  414d6c:	add	w0, w0, #0x1
  414d70:	smull	x0, w0, w1
  414d74:	ldr	w24, [x25, x0]
  414d78:	ldr	w2, [sp, #104]
  414d7c:	mov	w22, #0x18                  	// #24
  414d80:	ldr	x1, [sp, #128]
  414d84:	mov	x0, x19
  414d88:	smull	x22, w2, w22
  414d8c:	bl	402b30 <fprintf@plt>
  414d90:	ldr	x1, [sp, #120]
  414d94:	add	x23, x25, x22
  414d98:	ldr	w2, [x25, x22]
  414d9c:	mov	w3, w24
  414da0:	mov	x0, x19
  414da4:	bl	402b30 <fprintf@plt>
  414da8:	ldr	x2, [x23, #8]
  414dac:	mov	x0, x19
  414db0:	ldr	x1, [sp, #136]
  414db4:	bl	402b30 <fprintf@plt>
  414db8:	ldr	w2, [x23, #16]
  414dbc:	mov	x0, x19
  414dc0:	ldr	x1, [sp, #144]
  414dc4:	bl	402b30 <fprintf@plt>
  414dc8:	ldrb	w2, [x23, #6]
  414dcc:	mov	x0, x19
  414dd0:	ldr	x1, [sp, #152]
  414dd4:	bl	402b30 <fprintf@plt>
  414dd8:	ldrb	w3, [x23, #6]
  414ddc:	mov	x0, x19
  414de0:	ldr	x1, [sp, #160]
  414de4:	ldrb	w2, [x23, #7]
  414de8:	sub	w2, w3, w2
  414dec:	bl	402b30 <fprintf@plt>
  414df0:	ldrb	w2, [x23, #7]
  414df4:	mov	x0, x19
  414df8:	ldr	x1, [sp, #168]
  414dfc:	bl	402b30 <fprintf@plt>
  414e00:	ldrb	w2, [x23, #4]
  414e04:	cmp	w2, #0x4
  414e08:	b.hi	4152a4 <nftw@plt+0x12724>  // b.pmore
  414e0c:	and	x1, x2, #0xff
  414e10:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  414e14:	add	x0, x0, #0x208
  414e18:	ldr	x3, [x0, x1, lsl #3]
  414e1c:	mov	x0, x19
  414e20:	ldr	x1, [sp, #176]
  414e24:	bl	402b30 <fprintf@plt>
  414e28:	ldr	x0, [x20]
  414e2c:	mov	x1, x23
  414e30:	bl	42b0a8 <nftw@plt+0x28528>
  414e34:	mov	x21, x0
  414e38:	ldr	w2, [x23, #20]
  414e3c:	mov	x0, x19
  414e40:	ldr	x1, [sp, #184]
  414e44:	bl	402b30 <fprintf@plt>
  414e48:	cbz	x21, 414e78 <nftw@plt+0x122f8>
  414e4c:	ldr	x3, [x20]
  414e50:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  414e54:	movk	x2, #0xaaab
  414e58:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  414e5c:	mov	x0, x19
  414e60:	add	x1, x1, #0xd30
  414e64:	ldr	x3, [x3]
  414e68:	sub	x21, x21, x3
  414e6c:	asr	x21, x21, #3
  414e70:	mul	w2, w21, w2
  414e74:	bl	402b30 <fprintf@plt>
  414e78:	mov	x1, x19
  414e7c:	mov	w0, #0xa                   	// #10
  414e80:	bl	4025e0 <fputc@plt>
  414e84:	ldr	w21, [x25, x22]
  414e88:	mov	w25, #0x1                   	// #1
  414e8c:	cmp	w24, w21
  414e90:	b.hi	414eac <nftw@plt+0x1232c>  // b.pmore
  414e94:	b	414fd4 <nftw@plt+0x12454>
  414e98:	ldrb	w0, [x23, #7]
  414e9c:	lsl	w0, w25, w0
  414ea0:	add	w21, w21, w0
  414ea4:	cmp	w24, w21
  414ea8:	b.ls	414fd4 <nftw@plt+0x12454>  // b.plast
  414eac:	ldr	x0, [x20]
  414eb0:	mov	w1, w21
  414eb4:	bl	42bc50 <nftw@plt+0x290d0>
  414eb8:	tst	w0, #0xff
  414ebc:	b.eq	4152b8 <nftw@plt+0x12738>  // b.none
  414ec0:	ldr	x0, [x20]
  414ec4:	add	x8, sp, #0xc0
  414ec8:	mov	w2, w21
  414ecc:	mov	x1, x23
  414ed0:	bl	42c788 <nftw@plt+0x29c08>
  414ed4:	ldr	w0, [sp, #204]
  414ed8:	cbnz	w0, 414e98 <nftw@plt+0x12318>
  414edc:	ldr	x28, [sp, #192]
  414ee0:	ldr	w26, [sp, #200]
  414ee4:	mov	x0, x28
  414ee8:	mov	w1, w26
  414eec:	bl	4143a8 <nftw@plt+0x11828>
  414ef0:	mov	x22, x1
  414ef4:	mov	x6, x0
  414ef8:	cbz	x0, 414fd4 <nftw@plt+0x12454>
  414efc:	mov	w5, w1
  414f00:	mov	w3, w26
  414f04:	ldr	x1, [sp, #112]
  414f08:	mov	x2, x28
  414f0c:	mov	w4, w21
  414f10:	mov	x0, x19
  414f14:	bl	402b30 <fprintf@plt>
  414f18:	ldrb	w27, [x23, #6]
  414f1c:	mov	w0, w26
  414f20:	lsl	w27, w25, w27
  414f24:	sub	w27, w27, #0x1
  414f28:	cmp	x22, w27, sxtw
  414f2c:	csinc	w27, w27, w22, cs  // cs = hs, nlast
  414f30:	mov	w22, #0x5                   	// #5
  414f34:	bl	409488 <nftw@plt+0x6908>
  414f38:	mov	w26, w0
  414f3c:	mov	w0, w21
  414f40:	bl	409488 <nftw@plt+0x6908>
  414f44:	mov	w1, w0
  414f48:	mov	x0, x28
  414f4c:	str	w1, [sp, #96]
  414f50:	bl	4024f0 <strlen@plt>
  414f54:	cmp	w26, #0x3
  414f58:	mov	w1, #0x3                   	// #3
  414f5c:	csel	w26, w26, w1, ge  // ge = tcont
  414f60:	ldr	w1, [sp, #96]
  414f64:	cmp	w1, w22
  414f68:	csel	w28, w1, w22, ge  // ge = tcont
  414f6c:	add	w22, w0, #0x6
  414f70:	add	w26, w26, w28
  414f74:	cmp	w24, #0x3e7
  414f78:	add	w22, w26, w22
  414f7c:	b.hi	415244 <nftw@plt+0x126c4>  // b.pmore
  414f80:	cmp	w24, #0x63
  414f84:	b.hi	415268 <nftw@plt+0x126e8>  // b.pmore
  414f88:	mov	w3, w21
  414f8c:	mov	w4, w27
  414f90:	mov	x2, x23
  414f94:	mov	w1, w22
  414f98:	mov	x0, x19
  414f9c:	mov	w5, #0xa                   	// #10
  414fa0:	bl	413a98 <nftw@plt+0x10f18>
  414fa4:	mov	w3, w21
  414fa8:	mov	x0, x19
  414fac:	mov	w4, w27
  414fb0:	mov	w1, w22
  414fb4:	mov	x2, x23
  414fb8:	mov	w5, #0x1                   	// #1
  414fbc:	bl	413a98 <nftw@plt+0x10f18>
  414fc0:	ldrb	w0, [x23, #7]
  414fc4:	lsl	w0, w25, w0
  414fc8:	add	w21, w21, w0
  414fcc:	cmp	w24, w21
  414fd0:	b.hi	414eac <nftw@plt+0x1232c>  // b.pmore
  414fd4:	mov	x1, x19
  414fd8:	mov	w0, #0xa                   	// #10
  414fdc:	bl	4025e0 <fputc@plt>
  414fe0:	ldr	x1, [x20]
  414fe4:	ldr	w0, [sp, #104]
  414fe8:	add	w0, w0, #0x1
  414fec:	mov	w2, w0
  414ff0:	ldr	w0, [x1, #12]
  414ff4:	str	w2, [sp, #104]
  414ff8:	cmp	w0, w2
  414ffc:	b.hi	414d50 <nftw@plt+0x121d0>  // b.pmore
  415000:	ldr	w0, [x1, #36]
  415004:	mov	w3, #0x80000000            	// #-2147483648
  415008:	ldr	w2, [x1, #56]
  41500c:	cbz	w0, 415020 <nftw@plt+0x124a0>
  415010:	sub	w0, w0, #0x1
  415014:	ldr	x1, [x1, #24]
  415018:	sbfiz	x0, x0, #5, #32
  41501c:	ldr	w3, [x1, x0]
  415020:	mov	x0, x19
  415024:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415028:	add	x1, x1, #0xd78
  41502c:	bl	413a38 <nftw@plt+0x10eb8>
  415030:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  415034:	ldr	x1, [x0, #2296]
  415038:	ldr	w0, [x1, #36]
  41503c:	cbz	w0, 4151fc <nftw@plt+0x1267c>
  415040:	adrp	x26, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415044:	add	x2, x26, #0x840
  415048:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41504c:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415050:	add	x3, x3, #0xdf8
  415054:	stp	x3, x2, [sp, #112]
  415058:	add	x2, x28, #0xdb8
  41505c:	adrp	x27, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415060:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415064:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415068:	add	x21, x21, #0xe30
  41506c:	add	x23, x23, #0xea8
  415070:	str	x2, [sp, #96]
  415074:	add	x2, x27, #0xdd8
  415078:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  41507c:	mov	w26, #0x0                   	// #0
  415080:	add	x20, x20, #0x8f8
  415084:	str	x2, [sp, #104]
  415088:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41508c:	add	x2, x2, #0xe18
  415090:	str	x2, [sp, #128]
  415094:	str	x20, [sp, #136]
  415098:	sub	w22, w0, #0x1
  41509c:	sub	w22, w22, w26
  4150a0:	ldr	x25, [x1, #24]
  4150a4:	sbfiz	x24, x22, #5, #32
  4150a8:	add	x28, x25, x24
  4150ac:	mov	x0, x28
  4150b0:	bl	42be98 <nftw@plt+0x29318>
  4150b4:	ldr	x1, [sp, #96]
  4150b8:	mov	x3, x0
  4150bc:	ldr	w4, [x28, #4]
  4150c0:	mov	w2, w22
  4150c4:	mov	x0, x19
  4150c8:	bl	402b30 <fprintf@plt>
  4150cc:	ldr	w2, [x25, x24]
  4150d0:	mov	x0, x19
  4150d4:	ldr	x1, [sp, #120]
  4150d8:	ldr	w3, [x28, #4]
  4150dc:	add	w3, w2, w3
  4150e0:	bl	402b30 <fprintf@plt>
  4150e4:	ldr	w2, [x28, #24]
  4150e8:	ldr	x1, [sp, #104]
  4150ec:	mov	w0, w2
  4150f0:	bl	408810 <nftw@plt+0x5c90>
  4150f4:	ldr	w2, [x25, x24]
  4150f8:	mov	x0, x19
  4150fc:	ldr	x1, [sp, #112]
  415100:	bl	402b30 <fprintf@plt>
  415104:	ldr	x0, [sp, #128]
  415108:	mov	x3, x19
  41510c:	mov	x2, #0x13                  	// #19
  415110:	mov	x1, #0x1                   	// #1
  415114:	bl	402950 <fwrite@plt>
  415118:	ldr	w0, [x28, #4]
  41511c:	cbz	w0, 4151d8 <nftw@plt+0x12658>
  415120:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415124:	mov	w20, #0x0                   	// #0
  415128:	add	x25, x25, #0xec8
  41512c:	mov	w24, #0x0                   	// #0
  415130:	b	41516c <nftw@plt+0x125ec>
  415134:	ldr	w3, [x28]
  415138:	cmp	w22, w3
  41513c:	b.cs	415288 <nftw@plt+0x12708>  // b.hs, b.nlast
  415140:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415144:	mov	w3, w22
  415148:	add	x1, x1, #0xe40
  41514c:	mov	w0, w22
  415150:	mov	w2, w24
  415154:	bl	408810 <nftw@plt+0x5c90>
  415158:	ldr	w0, [x28, #4]
  41515c:	add	w24, w24, #0x1
  415160:	add	w20, w20, #0x2
  415164:	cmp	w24, w0
  415168:	b.cs	4151d8 <nftw@plt+0x12658>  // b.hs, b.nlast
  41516c:	ldr	x4, [x28, #16]
  415170:	add	w3, w20, #0x1
  415174:	mov	w2, w24
  415178:	mov	x1, x21
  41517c:	mov	x0, x19
  415180:	ldr	w22, [x4, w20, uxtw #2]
  415184:	ldr	w27, [x4, x3, lsl #2]
  415188:	mov	w3, w22
  41518c:	mov	w4, w27
  415190:	bl	402b30 <fprintf@plt>
  415194:	cmp	w22, w27
  415198:	b.eq	415134 <nftw@plt+0x125b4>  // b.none
  41519c:	mov	w2, w24
  4151a0:	mov	w3, w22
  4151a4:	mov	x1, x23
  4151a8:	mov	w0, w22
  4151ac:	bl	408810 <nftw@plt+0x5c90>
  4151b0:	add	w20, w20, #0x2
  4151b4:	mov	w2, w24
  4151b8:	mov	w0, w22
  4151bc:	mov	w3, w27
  4151c0:	mov	x1, x25
  4151c4:	bl	408810 <nftw@plt+0x5c90>
  4151c8:	add	w24, w24, #0x1
  4151cc:	ldr	w0, [x28, #4]
  4151d0:	cmp	w24, w0
  4151d4:	b.cc	41516c <nftw@plt+0x125ec>  // b.lo, b.ul, b.last
  4151d8:	mov	x1, x19
  4151dc:	mov	w0, #0xa                   	// #10
  4151e0:	bl	4025e0 <fputc@plt>
  4151e4:	add	w26, w26, #0x1
  4151e8:	ldr	x0, [sp, #136]
  4151ec:	ldr	x1, [x0]
  4151f0:	ldr	w0, [x1, #36]
  4151f4:	cmp	w26, w0
  4151f8:	b.cc	415098 <nftw@plt+0x12518>  // b.lo, b.ul, b.last
  4151fc:	mov	x0, x19
  415200:	mov	w3, #0x80000000            	// #-2147483648
  415204:	mov	w2, #0x7fffffff            	// #2147483647
  415208:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41520c:	add	x1, x1, #0xd90
  415210:	bl	413a38 <nftw@plt+0x10eb8>
  415214:	mov	x0, x19
  415218:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41521c:	ldp	x19, x20, [sp, #16]
  415220:	add	x1, x1, #0xda0
  415224:	ldp	x21, x22, [sp, #32]
  415228:	mov	w3, #0xffffffff            	// #-1
  41522c:	ldp	x23, x24, [sp, #48]
  415230:	mov	w2, #0x80000000            	// #-2147483648
  415234:	ldp	x25, x26, [sp, #64]
  415238:	ldp	x27, x28, [sp, #80]
  41523c:	ldp	x29, x30, [sp], #224
  415240:	b	413a38 <nftw@plt+0x10eb8>
  415244:	mov	w4, w27
  415248:	mov	w3, w21
  41524c:	mov	x2, x23
  415250:	mov	w1, w22
  415254:	mov	x0, x19
  415258:	mov	w5, #0x3e8                 	// #1000
  41525c:	bl	413a98 <nftw@plt+0x10f18>
  415260:	cmp	w24, #0x63
  415264:	b.ls	414f88 <nftw@plt+0x12408>  // b.plast
  415268:	mov	w4, w27
  41526c:	mov	w3, w21
  415270:	mov	x2, x23
  415274:	mov	w1, w22
  415278:	mov	x0, x19
  41527c:	mov	w5, #0x64                  	// #100
  415280:	bl	413a98 <nftw@plt+0x10f18>
  415284:	b	414f88 <nftw@plt+0x12408>
  415288:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41528c:	sub	w3, w22, w3
  415290:	add	x1, x0, #0xe70
  415294:	mov	w2, w22
  415298:	mov	x0, x19
  41529c:	bl	402b30 <fprintf@plt>
  4152a0:	b	415158 <nftw@plt+0x125d8>
  4152a4:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4152a8:	add	x3, x3, #0xc48
  4152ac:	b	414e1c <nftw@plt+0x1229c>
  4152b0:	ldr	w24, [x1, #56]
  4152b4:	b	414d78 <nftw@plt+0x121f8>
  4152b8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4152bc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4152c0:	add	x2, x2, #0xd48
  4152c4:	add	x0, x0, #0x828
  4152c8:	mov	w1, #0x454                 	// #1108
  4152cc:	bl	402bf0 <nftw@plt+0x70>
  4152d0:	stp	x29, x30, [sp, #-48]!
  4152d4:	mov	x3, #0x0                   	// #0
  4152d8:	mov	x29, sp
  4152dc:	str	x21, [sp, #32]
  4152e0:	mov	x21, x0
  4152e4:	stp	x19, x20, [sp, #16]
  4152e8:	sbfiz	x0, x1, #2, #32
  4152ec:	mov	w19, w1
  4152f0:	str	w1, [x21]
  4152f4:	mov	x20, x2
  4152f8:	mov	x1, #0x0                   	// #0
  4152fc:	mov	x2, #0x0                   	// #0
  415300:	bl	416598 <nftw@plt+0x13a18>
  415304:	str	x0, [x21, #8]
  415308:	cmp	w19, #0x0
  41530c:	b.le	41532c <nftw@plt+0x127ac>
  415310:	mov	x3, #0x0                   	// #0
  415314:	nop
  415318:	ldr	w4, [x20, x3, lsl #2]
  41531c:	str	w4, [x0, x3, lsl #2]
  415320:	add	x3, x3, #0x1
  415324:	cmp	w19, w3
  415328:	b.gt	415318 <nftw@plt+0x12798>
  41532c:	ldp	x19, x20, [sp, #16]
  415330:	ldr	x21, [sp, #32]
  415334:	ldp	x29, x30, [sp], #48
  415338:	ret
  41533c:	nop
  415340:	stp	x29, x30, [sp, #-64]!
  415344:	mov	x3, #0x1                   	// #1
  415348:	mov	x2, #0x0                   	// #0
  41534c:	mov	x29, sp
  415350:	adrp	x1, 415000 <nftw@plt+0x12480>
  415354:	add	x1, x1, #0xfa0
  415358:	stp	x19, x20, [sp, #16]
  41535c:	stp	x21, x22, [sp, #32]
  415360:	str	x23, [sp, #48]
  415364:	mov	x23, x0
  415368:	mov	x0, #0x30                  	// #48
  41536c:	bl	416598 <nftw@plt+0x13a18>
  415370:	mov	x19, x0
  415374:	mov	w1, #0x1                   	// #1
  415378:	mov	x0, #0x40                  	// #64
  41537c:	stp	xzr, xzr, [x19, #16]
  415380:	str	xzr, [x19, #32]
  415384:	strb	w1, [x19, #44]
  415388:	bl	4161a8 <nftw@plt+0x13628>
  41538c:	mov	w20, w0
  415390:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415394:	add	x0, x1, #0x298
  415398:	mov	x3, #0x0                   	// #0
  41539c:	ubfiz	x4, x20, #4, #32
  4153a0:	mov	x2, #0x0                   	// #0
  4153a4:	mov	x1, #0x0                   	// #0
  4153a8:	ldr	w22, [x0, x4]
  4153ac:	lsl	x21, x22, #4
  4153b0:	mov	x0, x21
  4153b4:	bl	4165c0 <nftw@plt+0x13a40>
  4153b8:	cbz	x0, 4153f4 <nftw@plt+0x12874>
  4153bc:	mov	x1, x0
  4153c0:	cbz	x22, 4153d4 <nftw@plt+0x12854>
  4153c4:	add	x21, x21, x0
  4153c8:	str	wzr, [x0], #16
  4153cc:	cmp	x0, x21
  4153d0:	b.ne	4153c8 <nftw@plt+0x12848>  // b.any
  4153d4:	stp	x1, x22, [x19]
  4153d8:	ldp	x21, x22, [sp, #32]
  4153dc:	str	x19, [x23]
  4153e0:	str	w20, [x19, #40]
  4153e4:	ldp	x19, x20, [sp, #16]
  4153e8:	ldr	x23, [sp, #48]
  4153ec:	ldp	x29, x30, [sp], #64
  4153f0:	ret
  4153f4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4153f8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4153fc:	add	x2, x2, #0x7e8
  415400:	add	x0, x0, #0x7f8
  415404:	mov	w1, #0x2b5                 	// #693
  415408:	bl	402bf0 <nftw@plt+0x70>
  41540c:	nop
  415410:	stp	x29, x30, [sp, #-32]!
  415414:	mov	w1, w0
  415418:	mov	x3, #0x0                   	// #0
  41541c:	mov	x29, sp
  415420:	str	x19, [sp, #16]
  415424:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  415428:	mov	w2, #0x1                   	// #1
  41542c:	ldr	x0, [x19, #2296]
  415430:	bl	42bfa0 <nftw@plt+0x29420>
  415434:	mov	w1, w0
  415438:	ldr	x0, [x19, #2296]
  41543c:	bl	42bba0 <nftw@plt+0x29020>
  415440:	ldr	x19, [sp, #16]
  415444:	ldp	x29, x30, [sp], #32
  415448:	ret
  41544c:	nop
  415450:	stp	x29, x30, [sp, #-48]!
  415454:	mov	x29, sp
  415458:	stp	x19, x20, [sp, #16]
  41545c:	str	x21, [sp, #32]
  415460:	cbz	x2, 415594 <nftw@plt+0x12a14>
  415464:	mov	x19, x3
  415468:	cbz	x3, 41557c <nftw@plt+0x129fc>
  41546c:	mov	x21, x0
  415470:	mov	x20, x2
  415474:	mov	w0, w1
  415478:	bl	415410 <nftw@plt+0x12890>
  41547c:	adrp	x7, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415480:	add	x7, x7, #0x298
  415484:	ldr	x5, [x21]
  415488:	ldr	w4, [x5, #40]
  41548c:	ldr	w1, [x5, #32]
  415490:	ldr	x6, [x5]
  415494:	lsl	x4, x4, #4
  415498:	add	x2, x7, x4
  41549c:	add	w1, w1, #0x1
  4154a0:	str	w1, [x5, #32]
  4154a4:	ldr	w1, [x2, #4]
  4154a8:	ldr	w7, [x7, x4]
  4154ac:	ldr	w10, [x2, #12]
  4154b0:	umull	x1, w0, w1
  4154b4:	lsr	x4, x1, #32
  4154b8:	sub	w1, w0, w4
  4154bc:	add	w1, w4, w1, lsr #1
  4154c0:	lsr	w1, w1, w10
  4154c4:	msub	w1, w1, w7, w0
  4154c8:	ubfiz	x8, x1, #4, #32
  4154cc:	add	x9, x6, x8
  4154d0:	ldr	w4, [x6, x8]
  4154d4:	cmp	w4, #0x0
  4154d8:	ccmp	w0, w4, #0x4, ne  // ne = any
  4154dc:	b.ne	415510 <nftw@plt+0x12990>  // b.any
  4154e0:	mov	w0, #0x0                   	// #0
  4154e4:	cbz	w4, 415500 <nftw@plt+0x12980>
  4154e8:	ldr	x1, [x9, #8]
  4154ec:	mov	w0, #0x1                   	// #1
  4154f0:	ldr	w2, [x1]
  4154f4:	ldr	x1, [x1, #8]
  4154f8:	str	w2, [x20]
  4154fc:	str	x1, [x19]
  415500:	ldp	x19, x20, [sp, #16]
  415504:	ldr	x21, [sp, #32]
  415508:	ldp	x29, x30, [sp], #48
  41550c:	ret
  415510:	ldr	w4, [x2, #8]
  415514:	sub	w7, w7, #0x2
  415518:	add	w3, w0, #0x1
  41551c:	ldr	w2, [x5, #36]
  415520:	ldr	x11, [x5, #8]
  415524:	add	w2, w2, #0x1
  415528:	umull	x4, w0, w4
  41552c:	lsr	x8, x4, #32
  415530:	sub	w4, w0, w8
  415534:	add	w4, w8, w4, lsr #1
  415538:	lsr	w4, w4, w10
  41553c:	msub	w3, w4, w7, w3
  415540:	add	w4, w1, w3
  415544:	str	w2, [x5, #36]
  415548:	mov	x1, x4
  41554c:	cmp	x11, w4, uxtw
  415550:	b.hi	41555c <nftw@plt+0x129dc>  // b.pmore
  415554:	sub	w4, w4, w11
  415558:	mov	x1, x4
  41555c:	lsl	x4, x4, #4
  415560:	add	w2, w2, #0x1
  415564:	add	x9, x6, x4
  415568:	ldr	w4, [x6, x4]
  41556c:	cmp	w4, #0x0
  415570:	ccmp	w0, w4, #0x4, ne  // ne = any
  415574:	b.ne	415540 <nftw@plt+0x129c0>  // b.any
  415578:	b	4154e0 <nftw@plt+0x12960>
  41557c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415580:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415584:	add	x2, x2, #0xee8
  415588:	add	x0, x0, #0x828
  41558c:	mov	w1, #0x50e                 	// #1294
  415590:	bl	402bf0 <nftw@plt+0x70>
  415594:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415598:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41559c:	add	x2, x2, #0xee8
  4155a0:	add	x0, x0, #0x828
  4155a4:	mov	w1, #0x50d                 	// #1293
  4155a8:	bl	402bf0 <nftw@plt+0x70>
  4155ac:	nop
  4155b0:	stp	x29, x30, [sp, #-288]!
  4155b4:	mov	x29, sp
  4155b8:	stp	x19, x20, [sp, #16]
  4155bc:	stp	x23, x24, [sp, #48]
  4155c0:	mov	x23, x0
  4155c4:	str	w4, [sp, #108]
  4155c8:	str	w5, [sp, #116]
  4155cc:	str	x7, [sp, #120]
  4155d0:	stp	w6, w3, [sp, #128]
  4155d4:	cbz	x7, 415dc0 <nftw@plt+0x13240>
  4155d8:	mov	w19, w2
  4155dc:	mov	x20, x1
  4155e0:	add	x0, sp, #0xc0
  4155e4:	bl	417ff0 <nftw@plt+0x15470>
  4155e8:	stp	x21, x22, [sp, #32]
  4155ec:	str	w19, [sp, #160]
  4155f0:	cbz	x23, 415d70 <nftw@plt+0x131f0>
  4155f4:	cbnz	w19, 415620 <nftw@plt+0x12aa0>
  4155f8:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4155fc:	add	x21, x21, #0x100
  415600:	add	x0, sp, #0xc0
  415604:	bl	418020 <nftw@plt+0x154a0>
  415608:	mov	x0, x21
  41560c:	ldp	x19, x20, [sp, #16]
  415610:	ldp	x21, x22, [sp, #32]
  415614:	ldp	x23, x24, [sp, #48]
  415618:	ldp	x29, x30, [sp], #288
  41561c:	ret
  415620:	mov	x0, x23
  415624:	bl	41e400 <nftw@plt+0x1b880>
  415628:	ldrb	w0, [x0, #45]
  41562c:	cmp	w0, #0x2
  415630:	b.ne	41574c <nftw@plt+0x12bcc>  // b.any
  415634:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  415638:	ldr	x0, [x0, #2296]
  41563c:	ldrb	w0, [x0, #116]
  415640:	cbnz	w0, 415774 <nftw@plt+0x12bf4>
  415644:	add	x1, sp, #0xa0
  415648:	mov	w0, #0x1                   	// #1
  41564c:	str	w0, [sp, #164]
  415650:	str	x1, [sp, #168]
  415654:	cbz	x20, 4157d0 <nftw@plt+0x12c50>
  415658:	ldr	w1, [sp, #160]
  41565c:	mov	x0, x20
  415660:	add	x3, sp, #0xa8
  415664:	add	x2, sp, #0xa4
  415668:	bl	415450 <nftw@plt+0x128d0>
  41566c:	ldr	w0, [sp, #164]
  415670:	sxtw	x21, w0
  415674:	cbnz	w0, 415d60 <nftw@plt+0x131e0>
  415678:	mov	x19, #0x0                   	// #0
  41567c:	mov	x20, #0x0                   	// #0
  415680:	mov	x1, #0x0                   	// #0
  415684:	mov	x2, #0x0                   	// #0
  415688:	ldr	w5, [sp, #132]
  41568c:	mov	x3, x21
  415690:	mov	x0, x23
  415694:	add	x4, sp, #0xc0
  415698:	bl	41aa68 <nftw@plt+0x17ee8>
  41569c:	mov	x21, x0
  4156a0:	cbz	x19, 4156b4 <nftw@plt+0x12b34>
  4156a4:	ldrsb	w0, [x19, #3]
  4156a8:	tbnz	w0, #31, 415c0c <nftw@plt+0x1308c>
  4156ac:	mov	x0, x19
  4156b0:	bl	402910 <free@plt>
  4156b4:	cbz	x20, 4156f8 <nftw@plt+0x12b78>
  4156b8:	ldr	w0, [x20, #4]
  4156bc:	mov	x19, #0x0                   	// #0
  4156c0:	add	x22, x20, #0x10
  4156c4:	cmp	w0, w19
  4156c8:	b.ls	4156e8 <nftw@plt+0x12b68>  // b.plast
  4156cc:	lsl	x0, x19, #4
  4156d0:	add	x19, x19, #0x1
  4156d4:	ldr	x0, [x22, x0]
  4156d8:	bl	402910 <free@plt>
  4156dc:	ldr	w0, [x20, #4]
  4156e0:	cmp	w0, w19
  4156e4:	b.hi	4156cc <nftw@plt+0x12b4c>  // b.pmore
  4156e8:	ldrsb	w0, [x20, #3]
  4156ec:	tbnz	w0, #31, 415c14 <nftw@plt+0x13094>
  4156f0:	mov	x0, x20
  4156f4:	bl	402910 <free@plt>
  4156f8:	cbnz	x21, 415600 <nftw@plt+0x12a80>
  4156fc:	ldr	w1, [sp, #108]
  415700:	ldr	w0, [sp, #200]
  415704:	cmp	w1, w0
  415708:	b.ge	415780 <nftw@plt+0x12c00>  // b.tcont
  41570c:	ldr	w1, [sp, #116]
  415710:	cmp	w1, w0
  415714:	b.ge	4157a8 <nftw@plt+0x12c28>  // b.tcont
  415718:	ldr	w1, [sp, #128]
  41571c:	cmp	w1, w0
  415720:	b.lt	415c1c <nftw@plt+0x1309c>  // b.tstop
  415724:	add	x0, sp, #0xc0
  415728:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41572c:	bl	418020 <nftw@plt+0x154a0>
  415730:	add	x21, x21, #0xe8
  415734:	mov	x0, x21
  415738:	ldp	x19, x20, [sp, #16]
  41573c:	ldp	x21, x22, [sp, #32]
  415740:	ldp	x23, x24, [sp, #48]
  415744:	ldp	x29, x30, [sp], #288
  415748:	ret
  41574c:	add	x0, sp, #0xc0
  415750:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415754:	bl	418020 <nftw@plt+0x154a0>
  415758:	add	x21, x21, #0x118
  41575c:	mov	x0, x21
  415760:	ldp	x19, x20, [sp, #16]
  415764:	ldp	x21, x22, [sp, #32]
  415768:	ldp	x23, x24, [sp, #48]
  41576c:	ldp	x29, x30, [sp], #288
  415770:	ret
  415774:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415778:	add	x21, x21, #0x138
  41577c:	b	415600 <nftw@plt+0x12a80>
  415780:	add	x0, sp, #0xc0
  415784:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415788:	bl	418020 <nftw@plt+0x154a0>
  41578c:	add	x21, x21, #0xb8
  415790:	mov	x0, x21
  415794:	ldp	x19, x20, [sp, #16]
  415798:	ldp	x21, x22, [sp, #32]
  41579c:	ldp	x23, x24, [sp, #48]
  4157a0:	ldp	x29, x30, [sp], #288
  4157a4:	ret
  4157a8:	add	x0, sp, #0xc0
  4157ac:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4157b0:	bl	418020 <nftw@plt+0x154a0>
  4157b4:	add	x21, x21, #0xd0
  4157b8:	mov	x0, x21
  4157bc:	ldp	x19, x20, [sp, #16]
  4157c0:	ldp	x21, x22, [sp, #32]
  4157c4:	ldp	x23, x24, [sp, #48]
  4157c8:	ldp	x29, x30, [sp], #288
  4157cc:	ret
  4157d0:	mov	w19, w0
  4157d4:	mov	x1, #0x18                  	// #24
  4157d8:	mov	x0, #0x0                   	// #0
  4157dc:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4157e0:	mov	x20, x0
  4157e4:	mov	w0, w19
  4157e8:	str	x0, [x20]
  4157ec:	ldr	w0, [sp, #164]
  4157f0:	sxtw	x21, w0
  4157f4:	cbz	w0, 415d50 <nftw@plt+0x131d0>
  4157f8:	ubfiz	x1, x21, #4, #32
  4157fc:	mov	x0, #0x0                   	// #0
  415800:	add	x1, x1, #0x8
  415804:	and	x21, x21, #0x7fffffff
  415808:	stp	x25, x26, [sp, #64]
  41580c:	stp	x27, x28, [sp, #80]
  415810:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  415814:	mov	x19, x0
  415818:	str	x21, [x0]
  41581c:	ldr	w0, [sp, #164]
  415820:	cmp	w0, #0x0
  415824:	b.le	415a2c <nftw@plt+0x12eac>
  415828:	adrp	x22, 48d000 <__environ@@GLIBC_2.17+0xa68>
  41582c:	add	x22, x22, #0x8f8
  415830:	mov	x28, #0x0                   	// #0
  415834:	ldr	x1, [sp, #168]
  415838:	ldr	x0, [x22]
  41583c:	ldr	w1, [x1, x28, lsl #2]
  415840:	bl	42bba0 <nftw@plt+0x29020>
  415844:	mov	x21, x0
  415848:	ldr	x2, [x22]
  41584c:	lsr	x25, x0, #32
  415850:	mov	w1, #0x80000000            	// #-2147483648
  415854:	ldr	w0, [x2, #36]
  415858:	cbz	w0, 41586c <nftw@plt+0x12cec>
  41585c:	sub	w0, w0, #0x1
  415860:	ldr	x1, [x2, #24]
  415864:	sbfiz	x0, x0, #5, #32
  415868:	ldr	w1, [x1, x0]
  41586c:	cmp	w21, w1
  415870:	b.cc	415a44 <nftw@plt+0x12ec4>  // b.lo, b.ul, b.last
  415874:	cmp	w21, w25
  415878:	b.ne	415d28 <nftw@plt+0x131a8>  // b.any
  41587c:	add	x8, sp, #0xe0
  415880:	mov	w0, w21
  415884:	mov	w2, #0x1                   	// #1
  415888:	mov	w1, #0x0                   	// #0
  41588c:	bl	413890 <nftw@plt+0x10d10>
  415890:	mov	w0, w25
  415894:	mov	w2, #0x2                   	// #2
  415898:	ldp	w27, w24, [sp, #232]
  41589c:	add	x8, sp, #0x100
  4158a0:	mov	w1, #0x0                   	// #0
  4158a4:	ldr	x26, [sp, #224]
  4158a8:	bl	413890 <nftw@plt+0x10d10>
  4158ac:	ldr	x0, [sp, #256]
  4158b0:	ldr	w2, [sp, #268]
  4158b4:	cmp	x26, x0
  4158b8:	b.ne	415c9c <nftw@plt+0x1311c>  // b.any
  4158bc:	ldr	w0, [sp, #264]
  4158c0:	cmp	w27, w0
  4158c4:	b.ne	415cb0 <nftw@plt+0x13130>  // b.any
  4158c8:	str	w2, [sp, #112]
  4158cc:	cmp	w24, w2
  4158d0:	b.gt	415cc4 <nftw@plt+0x13144>
  4158d4:	mov	w1, w27
  4158d8:	mov	x0, x26
  4158dc:	bl	4143a8 <nftw@plt+0x11828>
  4158e0:	mov	x4, x1
  4158e4:	cbz	x0, 415cd8 <nftw@plt+0x13158>
  4158e8:	ldr	w2, [sp, #112]
  4158ec:	sub	w3, w24, #0x1
  4158f0:	sub	w2, w2, w24
  4158f4:	sxtw	x5, w3
  4158f8:	add	w2, w2, #0x1
  4158fc:	sxtw	x1, w2
  415900:	add	x6, x1, x5
  415904:	cmp	x4, x6
  415908:	b.cc	415cec <nftw@plt+0x1316c>  // b.lo, b.ul, b.last
  41590c:	tbnz	w3, #31, 415da8 <nftw@plt+0x13228>
  415910:	cmp	w3, w4
  415914:	b.ge	415d90 <nftw@plt+0x13210>  // b.tcont
  415918:	add	w3, w2, w3
  41591c:	cmp	w4, w3
  415920:	b.lt	415de4 <nftw@plt+0x13264>  // b.tstop
  415924:	add	x0, x0, x5
  415928:	str	w2, [sp, #112]
  41592c:	bl	449d48 <_obstack_memory_used@@Base+0x2e8>
  415930:	mov	x5, x0
  415934:	ldr	w2, [sp, #112]
  415938:	cbz	x20, 415c54 <nftw@plt+0x130d4>
  41593c:	ldp	w0, w3, [x20]
  415940:	add	w8, w3, #0x1
  415944:	ubfx	x0, x0, #0, #31
  415948:	mov	w1, w8
  41594c:	cmp	w0, w3
  415950:	b.eq	415a6c <nftw@plt+0x12eec>  // b.none
  415954:	mov	x4, #0x8                   	// #8
  415958:	add	x4, x4, w3, uxtw #4
  41595c:	add	x3, sp, #0xb0
  415960:	add	x6, x20, x4
  415964:	ldr	x0, [x22]
  415968:	str	w1, [x20, #4]
  41596c:	str	w2, [x20, x4]
  415970:	mov	w1, w21
  415974:	str	x5, [x6, #8]
  415978:	mov	w2, #0x1                   	// #1
  41597c:	bl	42bfa0 <nftw@plt+0x29420>
  415980:	ldr	x0, [x22]
  415984:	add	x3, sp, #0xb8
  415988:	mov	w1, w25
  41598c:	mov	w2, #0x1                   	// #1
  415990:	bl	42bfa0 <nftw@plt+0x29420>
  415994:	ldr	x0, [sp, #176]
  415998:	cbz	x0, 415c88 <nftw@plt+0x13108>
  41599c:	ldr	x1, [sp, #184]
  4159a0:	cbz	x1, 415c88 <nftw@plt+0x13108>
  4159a4:	cmp	x0, x1
  4159a8:	ldr	x0, [x0, #8]
  4159ac:	b.eq	4159bc <nftw@plt+0x12e3c>  // b.none
  4159b0:	ldr	x2, [x1, #8]
  4159b4:	cmp	x2, x0
  4159b8:	b.ne	415d14 <nftw@plt+0x13194>  // b.any
  4159bc:	cmp	x26, x0
  4159c0:	b.ne	415d00 <nftw@plt+0x13180>  // b.any
  4159c4:	ldr	x0, [x22]
  4159c8:	mov	w2, w27
  4159cc:	mov	w3, w24
  4159d0:	bl	42b818 <nftw@plt+0x28c98>
  4159d4:	mov	w1, w0
  4159d8:	ldr	x2, [x22]
  4159dc:	add	x0, sp, #0xd0
  4159e0:	bl	41b378 <nftw@plt+0x187f8>
  4159e4:	cbz	x19, 415be8 <nftw@plt+0x13068>
  4159e8:	ldp	w0, w21, [x19]
  4159ec:	add	w24, w21, #0x1
  4159f0:	ubfx	x0, x0, #0, #31
  4159f4:	mov	w1, w24
  4159f8:	cmp	w0, w21
  4159fc:	b.eq	415ac8 <nftw@plt+0x12f48>  // b.none
  415a00:	mov	x0, #0x8                   	// #8
  415a04:	add	x28, x28, #0x1
  415a08:	add	x21, x0, w21, uxtw #4
  415a0c:	ldr	w0, [sp, #164]
  415a10:	add	x2, x19, x21
  415a14:	ldp	x4, x3, [sp, #208]
  415a18:	str	w1, [x19, #4]
  415a1c:	str	x4, [x19, x21]
  415a20:	cmp	w0, w28
  415a24:	str	x3, [x2, #8]
  415a28:	b.gt	415834 <nftw@plt+0x12cb4>
  415a2c:	sxtw	x21, w0
  415a30:	add	x1, x20, #0x8
  415a34:	add	x2, x19, #0x8
  415a38:	ldp	x25, x26, [sp, #64]
  415a3c:	ldp	x27, x28, [sp, #80]
  415a40:	b	415688 <nftw@plt+0x12b08>
  415a44:	mov	w0, #0x5fffffff            	// #1610612735
  415a48:	cmp	w21, w0
  415a4c:	b.hi	415d3c <nftw@plt+0x131bc>  // b.pmore
  415a50:	cmp	w25, w0
  415a54:	b.ls	41587c <nftw@plt+0x12cfc>  // b.plast
  415a58:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415a5c:	add	x21, x21, #0xfc0
  415a60:	ldp	x25, x26, [sp, #64]
  415a64:	ldp	x27, x28, [sp, #80]
  415a68:	b	4156a0 <nftw@plt+0x12b20>
  415a6c:	ldrsb	w0, [x20, #3]
  415a70:	tbnz	w0, #31, 415b04 <nftw@plt+0x12f84>
  415a74:	mov	w0, w3
  415a78:	str	x5, [sp, #144]
  415a7c:	str	w2, [sp, #152]
  415a80:	bl	411bd8 <nftw@plt+0xf058>
  415a84:	ldr	w3, [x20, #4]
  415a88:	mov	w4, w0
  415a8c:	mov	x0, x20
  415a90:	str	w4, [sp, #112]
  415a94:	ubfiz	x1, x4, #4, #32
  415a98:	str	w3, [sp, #136]
  415a9c:	add	x1, x1, #0x8
  415aa0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  415aa4:	mov	x20, x0
  415aa8:	ldr	w3, [sp, #136]
  415aac:	ldr	w4, [sp, #112]
  415ab0:	ldr	w2, [sp, #152]
  415ab4:	add	w1, w3, #0x1
  415ab8:	and	w4, w4, #0x7fffffff
  415abc:	stp	w4, w3, [x0]
  415ac0:	ldr	x5, [sp, #144]
  415ac4:	b	415954 <nftw@plt+0x12dd4>
  415ac8:	ldrsb	w0, [x19, #3]
  415acc:	tbnz	w0, #31, 415b88 <nftw@plt+0x13008>
  415ad0:	mov	w0, w21
  415ad4:	bl	411bd8 <nftw@plt+0xf058>
  415ad8:	mov	w24, w0
  415adc:	ldr	w21, [x19, #4]
  415ae0:	mov	x0, x19
  415ae4:	ubfiz	x1, x24, #4, #32
  415ae8:	and	w24, w24, #0x7fffffff
  415aec:	add	x1, x1, #0x8
  415af0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  415af4:	add	w1, w21, #0x1
  415af8:	mov	x19, x0
  415afc:	stp	w24, w21, [x0]
  415b00:	b	415a00 <nftw@plt+0x12e80>
  415b04:	cmp	w8, #0x4
  415b08:	mov	w4, #0x4                   	// #4
  415b0c:	csel	w4, w8, w4, cs  // cs = hs, nlast
  415b10:	mov	x0, #0x0                   	// #0
  415b14:	str	w4, [sp, #112]
  415b18:	ubfiz	x1, x4, #4, #32
  415b1c:	str	w8, [sp, #136]
  415b20:	add	x1, x1, #0x8
  415b24:	str	x5, [sp, #144]
  415b28:	stp	w2, w3, [sp, #152]
  415b2c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  415b30:	ldr	w4, [sp, #112]
  415b34:	add	x1, x20, #0x8
  415b38:	ldp	w2, w3, [sp, #152]
  415b3c:	and	x6, x4, #0x7fffffff
  415b40:	mov	x4, x0
  415b44:	ldr	w8, [sp, #136]
  415b48:	ldr	x5, [sp, #144]
  415b4c:	str	x6, [x4], #8
  415b50:	cbz	w3, 415b78 <nftw@plt+0x12ff8>
  415b54:	sub	w6, w3, #0x1
  415b58:	mov	x7, #0x18                  	// #24
  415b5c:	add	x6, x7, w6, uxtw #4
  415b60:	add	x20, x20, x6
  415b64:	nop
  415b68:	ldp	x6, x7, [x1], #16
  415b6c:	stp	x6, x7, [x4], #16
  415b70:	cmp	x1, x20
  415b74:	b.ne	415b68 <nftw@plt+0x12fe8>  // b.any
  415b78:	mov	w1, w8
  415b7c:	mov	x20, x0
  415b80:	str	w3, [x0, #4]
  415b84:	b	415954 <nftw@plt+0x12dd4>
  415b88:	cmp	w24, #0x4
  415b8c:	mov	w25, #0x4                   	// #4
  415b90:	csel	w25, w24, w25, cs  // cs = hs, nlast
  415b94:	mov	x0, #0x0                   	// #0
  415b98:	add	x19, x19, #0x8
  415b9c:	ubfiz	x1, x25, #4, #32
  415ba0:	and	x25, x25, #0x7fffffff
  415ba4:	add	x1, x1, #0x8
  415ba8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  415bac:	mov	x1, x0
  415bb0:	str	x25, [x1], #8
  415bb4:	cbz	w21, 415bd8 <nftw@plt+0x13058>
  415bb8:	sub	w4, w21, #0x1
  415bbc:	mov	x2, #0x18                  	// #24
  415bc0:	add	x4, x2, w4, uxtw #4
  415bc4:	add	x4, x0, x4
  415bc8:	ldp	x2, x3, [x19], #16
  415bcc:	stp	x2, x3, [x1], #16
  415bd0:	cmp	x1, x4
  415bd4:	b.ne	415bc8 <nftw@plt+0x13048>  // b.any
  415bd8:	mov	w1, w24
  415bdc:	mov	x19, x0
  415be0:	str	w21, [x0, #4]
  415be4:	b	415a00 <nftw@plt+0x12e80>
  415be8:	mov	x1, #0x48                  	// #72
  415bec:	mov	x0, #0x0                   	// #0
  415bf0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  415bf4:	mov	x19, x0
  415bf8:	mov	w21, #0x0                   	// #0
  415bfc:	mov	x0, #0x4                   	// #4
  415c00:	add	w1, w21, #0x1
  415c04:	str	x0, [x19]
  415c08:	b	415a00 <nftw@plt+0x12e80>
  415c0c:	str	wzr, [x19, #4]
  415c10:	b	4156b4 <nftw@plt+0x12b34>
  415c14:	str	wzr, [x20, #4]
  415c18:	b	4156f8 <nftw@plt+0x12b78>
  415c1c:	ldr	w1, [sp, #116]
  415c20:	ldr	x0, [sp, #192]
  415c24:	sbfiz	x5, x1, #3, #32
  415c28:	ldr	w1, [sp, #108]
  415c2c:	sbfiz	x4, x1, #3, #32
  415c30:	ldr	w1, [sp, #128]
  415c34:	add	x6, x0, w1, sxtw #3
  415c38:	ldr	w1, [x0, x5]
  415c3c:	ldr	w0, [x0, x4]
  415c40:	ldr	w2, [x6, #4]
  415c44:	bl	4146c8 <nftw@plt+0x11b48>
  415c48:	ldr	x1, [sp, #120]
  415c4c:	str	w0, [x1]
  415c50:	b	415600 <nftw@plt+0x12a80>
  415c54:	mov	x1, #0x48                  	// #72
  415c58:	mov	x0, #0x0                   	// #0
  415c5c:	str	w2, [sp, #112]
  415c60:	str	x5, [sp, #136]
  415c64:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  415c68:	mov	x20, x0
  415c6c:	mov	w3, #0x0                   	// #0
  415c70:	mov	x0, #0x4                   	// #4
  415c74:	ldr	w2, [sp, #112]
  415c78:	add	w1, w3, #0x1
  415c7c:	str	x0, [x20]
  415c80:	ldr	x5, [sp, #136]
  415c84:	b	415954 <nftw@plt+0x12dd4>
  415c88:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415c8c:	add	x21, x21, #0xf20
  415c90:	ldp	x25, x26, [sp, #64]
  415c94:	ldp	x27, x28, [sp, #80]
  415c98:	b	4156a0 <nftw@plt+0x12b20>
  415c9c:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415ca0:	add	x21, x21, #0xff8
  415ca4:	ldp	x25, x26, [sp, #64]
  415ca8:	ldp	x27, x28, [sp, #80]
  415cac:	b	4156a0 <nftw@plt+0x12b20>
  415cb0:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415cb4:	add	x21, x21, #0x20
  415cb8:	ldp	x25, x26, [sp, #64]
  415cbc:	ldp	x27, x28, [sp, #80]
  415cc0:	b	4156a0 <nftw@plt+0x12b20>
  415cc4:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415cc8:	add	x21, x21, #0x48
  415ccc:	ldp	x25, x26, [sp, #64]
  415cd0:	ldp	x27, x28, [sp, #80]
  415cd4:	b	4156a0 <nftw@plt+0x12b20>
  415cd8:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415cdc:	add	x21, x21, #0x68
  415ce0:	ldp	x25, x26, [sp, #64]
  415ce4:	ldp	x27, x28, [sp, #80]
  415ce8:	b	4156a0 <nftw@plt+0x12b20>
  415cec:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415cf0:	add	x21, x21, #0xf08
  415cf4:	ldp	x25, x26, [sp, #64]
  415cf8:	ldp	x27, x28, [sp, #80]
  415cfc:	b	4156a0 <nftw@plt+0x12b20>
  415d00:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415d04:	add	x21, x21, #0x88
  415d08:	ldp	x25, x26, [sp, #64]
  415d0c:	ldp	x27, x28, [sp, #80]
  415d10:	b	4156a0 <nftw@plt+0x12b20>
  415d14:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415d18:	add	x21, x21, #0xf40
  415d1c:	ldp	x25, x26, [sp, #64]
  415d20:	ldp	x27, x28, [sp, #80]
  415d24:	b	4156a0 <nftw@plt+0x12b20>
  415d28:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415d2c:	add	x21, x21, #0xf78
  415d30:	ldp	x25, x26, [sp, #64]
  415d34:	ldp	x27, x28, [sp, #80]
  415d38:	b	4156a0 <nftw@plt+0x12b20>
  415d3c:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415d40:	add	x21, x21, #0xf88
  415d44:	ldp	x25, x26, [sp, #64]
  415d48:	ldp	x27, x28, [sp, #80]
  415d4c:	b	4156a0 <nftw@plt+0x12b20>
  415d50:	add	x1, x20, #0x8
  415d54:	mov	x19, #0x0                   	// #0
  415d58:	mov	x2, #0x0                   	// #0
  415d5c:	b	415688 <nftw@plt+0x12b08>
  415d60:	ubfiz	x1, x21, #4, #32
  415d64:	and	w19, w0, #0x7fffffff
  415d68:	add	x1, x1, #0x8
  415d6c:	b	4157d8 <nftw@plt+0x12c58>
  415d70:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415d74:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415d78:	add	x2, x2, #0x170
  415d7c:	add	x0, x0, #0x828
  415d80:	mov	w1, #0x551                 	// #1361
  415d84:	stp	x25, x26, [sp, #64]
  415d88:	stp	x27, x28, [sp, #80]
  415d8c:	bl	402bf0 <nftw@plt+0x70>
  415d90:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415d94:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415d98:	add	x2, x2, #0x3f8
  415d9c:	add	x0, x0, #0x400
  415da0:	mov	w1, #0x45                  	// #69
  415da4:	bl	402bf0 <nftw@plt+0x70>
  415da8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415dac:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415db0:	add	x2, x2, #0x3f8
  415db4:	add	x0, x0, #0x400
  415db8:	mov	w1, #0x44                  	// #68
  415dbc:	bl	402bf0 <nftw@plt+0x70>
  415dc0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415dc4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415dc8:	add	x2, x2, #0x150
  415dcc:	add	x0, x0, #0x828
  415dd0:	mov	w1, #0x5fa                 	// #1530
  415dd4:	stp	x21, x22, [sp, #32]
  415dd8:	stp	x25, x26, [sp, #64]
  415ddc:	stp	x27, x28, [sp, #80]
  415de0:	bl	402bf0 <nftw@plt+0x70>
  415de4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415de8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415dec:	add	x2, x2, #0x3f8
  415df0:	add	x0, x0, #0x400
  415df4:	mov	w1, #0x47                  	// #71
  415df8:	bl	402bf0 <nftw@plt+0x70>
  415dfc:	nop
  415e00:	stp	x29, x30, [sp, #-64]!
  415e04:	cmp	w1, #0x1
  415e08:	mov	x29, sp
  415e0c:	stp	x19, x20, [sp, #16]
  415e10:	stp	x21, x22, [sp, #32]
  415e14:	str	x23, [sp, #48]
  415e18:	b.le	415f88 <nftw@plt+0x13408>
  415e1c:	mov	x19, x2
  415e20:	cbz	x2, 415f70 <nftw@plt+0x133f0>
  415e24:	mov	x23, x0
  415e28:	ldr	w0, [x2]
  415e2c:	mov	w22, w1
  415e30:	bl	415410 <nftw@plt+0x12890>
  415e34:	mov	w20, w0
  415e38:	mov	x3, #0x1                   	// #1
  415e3c:	mov	x2, #0x0                   	// #0
  415e40:	mov	x1, #0x0                   	// #0
  415e44:	mov	x0, #0x10                  	// #16
  415e48:	bl	416598 <nftw@plt+0x13a18>
  415e4c:	mov	x21, x0
  415e50:	mov	x2, x19
  415e54:	mov	w1, w22
  415e58:	bl	4152d0 <nftw@plt+0x12750>
  415e5c:	ldr	x19, [x23]
  415e60:	ldp	x3, x1, [x19, #8]
  415e64:	add	x0, x3, x3, lsl #1
  415e68:	cmp	x0, x1, lsl #2
  415e6c:	b.ls	415f60 <nftw@plt+0x133e0>  // b.plast
  415e70:	ldr	w0, [x19, #40]
  415e74:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415e78:	ldr	w1, [x19, #32]
  415e7c:	add	x2, x2, #0x298
  415e80:	ldr	x4, [x19]
  415e84:	lsl	x0, x0, #4
  415e88:	add	x7, x2, x0
  415e8c:	add	w1, w1, #0x1
  415e90:	str	w1, [x19, #32]
  415e94:	ldr	w1, [x7, #4]
  415e98:	ldr	w5, [x2, x0]
  415e9c:	ldr	w9, [x7, #12]
  415ea0:	umull	x1, w20, w1
  415ea4:	lsr	x2, x1, #32
  415ea8:	sub	w1, w20, w2
  415eac:	add	w1, w2, w1, lsr #1
  415eb0:	lsr	w1, w1, w9
  415eb4:	msub	w1, w1, w5, w20
  415eb8:	ubfiz	x8, x1, #4, #32
  415ebc:	add	x6, x4, x8
  415ec0:	ldr	w8, [x4, x8]
  415ec4:	cbz	w8, 415f38 <nftw@plt+0x133b8>
  415ec8:	cmp	w20, w8
  415ecc:	b.eq	415f48 <nftw@plt+0x133c8>  // b.none
  415ed0:	ldr	w0, [x7, #8]
  415ed4:	add	w2, w20, #0x1
  415ed8:	sub	w7, w5, #0x2
  415edc:	ldr	w5, [x19, #36]
  415ee0:	add	w5, w5, #0x1
  415ee4:	umull	x0, w20, w0
  415ee8:	lsr	x6, x0, #32
  415eec:	sub	w0, w20, w6
  415ef0:	add	w0, w6, w0, lsr #1
  415ef4:	lsr	w0, w0, w9
  415ef8:	msub	w2, w0, w7, w2
  415efc:	b	415f0c <nftw@plt+0x1338c>
  415f00:	add	w5, w5, #0x1
  415f04:	cmp	w20, w0
  415f08:	b.eq	415f48 <nftw@plt+0x133c8>  // b.none
  415f0c:	add	w0, w1, w2
  415f10:	str	w5, [x19, #36]
  415f14:	mov	x1, x0
  415f18:	cmp	x3, w0, uxtw
  415f1c:	b.hi	415f28 <nftw@plt+0x133a8>  // b.pmore
  415f20:	sub	w0, w0, w3
  415f24:	mov	x1, x0
  415f28:	lsl	x0, x0, #4
  415f2c:	add	x6, x4, x0
  415f30:	ldr	w0, [x4, x0]
  415f34:	cbnz	w0, 415f00 <nftw@plt+0x13380>
  415f38:	ldr	x0, [x19, #16]
  415f3c:	add	x0, x0, #0x1
  415f40:	str	x0, [x19, #16]
  415f44:	str	w20, [x6]
  415f48:	ldp	x19, x20, [sp, #16]
  415f4c:	ldr	x23, [sp, #48]
  415f50:	str	x21, [x6, #8]
  415f54:	ldp	x21, x22, [sp, #32]
  415f58:	ldp	x29, x30, [sp], #64
  415f5c:	ret
  415f60:	mov	x0, x19
  415f64:	bl	415fd0 <nftw@plt+0x13450>
  415f68:	ldr	x3, [x19, #8]
  415f6c:	b	415e70 <nftw@plt+0x132f0>
  415f70:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415f74:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415f78:	add	x2, x2, #0x190
  415f7c:	add	x0, x0, #0x828
  415f80:	mov	w1, #0x4f7                 	// #1271
  415f84:	bl	402bf0 <nftw@plt+0x70>
  415f88:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  415f8c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  415f90:	add	x2, x2, #0x190
  415f94:	add	x0, x0, #0x828
  415f98:	mov	w1, #0x4f6                 	// #1270
  415f9c:	bl	402bf0 <nftw@plt+0x70>
  415fa0:	ldr	x1, [x0, #8]
  415fa4:	sub	x2, x1, #0x1
  415fa8:	cbz	x1, 415fbc <nftw@plt+0x1343c>
  415fac:	nop
  415fb0:	sub	x2, x2, #0x1
  415fb4:	cmp	x1, x2
  415fb8:	b.hi	415fb0 <nftw@plt+0x13430>  // b.pmore
  415fbc:	ldrb	w1, [x0, #44]
  415fc0:	ldr	x0, [x0]
  415fc4:	cbnz	w1, 415fcc <nftw@plt+0x1344c>
  415fc8:	b	402910 <free@plt>
  415fcc:	b	4165f8 <nftw@plt+0x13a78>
  415fd0:	stp	x29, x30, [sp, #-64]!
  415fd4:	mov	x29, sp
  415fd8:	stp	x19, x20, [sp, #16]
  415fdc:	mov	x20, x0
  415fe0:	ldp	x1, x0, [x0, #16]
  415fe4:	stp	x21, x22, [sp, #32]
  415fe8:	ldp	x22, x19, [x20]
  415fec:	str	x23, [sp, #48]
  415ff0:	ldr	w23, [x20, #40]
  415ff4:	sub	x1, x1, x0
  415ff8:	lsl	x0, x1, #1
  415ffc:	cmp	x19, x1, lsl #1
  416000:	add	x21, x22, x19, lsl #4
  416004:	b.cc	41613c <nftw@plt+0x135bc>  // b.lo, b.ul, b.last
  416008:	lsl	w1, w1, #3
  41600c:	mov	x2, #0x20                  	// #32
  416010:	cmp	x1, x2
  416014:	csel	x1, x1, x2, cs  // cs = hs, nlast
  416018:	cmp	x19, x1
  41601c:	b.hi	41613c <nftw@plt+0x135bc>  // b.pmore
  416020:	ldrb	w0, [x20, #44]
  416024:	cbnz	w0, 41615c <nftw@plt+0x135dc>
  416028:	mov	x0, x19
  41602c:	mov	x1, #0x10                  	// #16
  416030:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  416034:	mov	x1, x0
  416038:	add	x2, x0, x19, lsl #4
  41603c:	cbz	x19, 41604c <nftw@plt+0x134cc>
  416040:	str	wzr, [x1], #16
  416044:	cmp	x2, x1
  416048:	b.ne	416040 <nftw@plt+0x134c0>  // b.any
  41604c:	ldp	x1, x2, [x20, #16]
  416050:	ubfiz	x3, x23, #4, #32
  416054:	adrp	x6, 45d000 <_obstack_memory_used@@Base+0x135a0>
  416058:	add	x6, x6, #0x298
  41605c:	mov	x4, x22
  416060:	add	x6, x6, x3
  416064:	stp	x0, x19, [x20]
  416068:	sub	x1, x1, x2
  41606c:	stp	x1, xzr, [x20, #16]
  416070:	str	w23, [x20, #40]
  416074:	b	416084 <nftw@plt+0x13504>
  416078:	add	x4, x4, #0x10
  41607c:	cmp	x21, x4
  416080:	b.ls	41611c <nftw@plt+0x1359c>  // b.plast
  416084:	ldr	w2, [x4]
  416088:	cbz	w2, 416078 <nftw@plt+0x134f8>
  41608c:	ldp	w7, w1, [x6]
  416090:	ldr	w9, [x6, #12]
  416094:	umull	x1, w2, w1
  416098:	lsr	x5, x1, #32
  41609c:	sub	w1, w2, w5
  4160a0:	add	w1, w5, w1, lsr #1
  4160a4:	lsr	w1, w1, w9
  4160a8:	msub	w1, w1, w7, w2
  4160ac:	ubfiz	x8, x1, #4, #32
  4160b0:	add	x5, x0, x8
  4160b4:	ldr	w3, [x0, x8]
  4160b8:	cbz	w3, 416108 <nftw@plt+0x13588>
  4160bc:	ldr	w3, [x6, #8]
  4160c0:	add	w5, w2, #0x1
  4160c4:	sub	w7, w7, #0x2
  4160c8:	umull	x3, w2, w3
  4160cc:	lsr	x3, x3, #32
  4160d0:	sub	w2, w2, w3
  4160d4:	add	w3, w3, w2, lsr #1
  4160d8:	lsr	w3, w3, w9
  4160dc:	msub	w3, w3, w7, w5
  4160e0:	add	w2, w1, w3
  4160e4:	mov	x1, x2
  4160e8:	cmp	x19, w2, uxtw
  4160ec:	b.hi	4160f8 <nftw@plt+0x13578>  // b.pmore
  4160f0:	sub	w2, w2, w19
  4160f4:	mov	x1, x2
  4160f8:	lsl	x2, x2, #4
  4160fc:	add	x5, x0, x2
  416100:	ldr	w2, [x0, x2]
  416104:	cbnz	w2, 4160e0 <nftw@plt+0x13560>
  416108:	ldp	x2, x3, [x4]
  41610c:	stp	x2, x3, [x5]
  416110:	add	x4, x4, #0x10
  416114:	cmp	x21, x4
  416118:	b.hi	416084 <nftw@plt+0x13504>  // b.pmore
  41611c:	ldrb	w0, [x20, #44]
  416120:	cbnz	w0, 41618c <nftw@plt+0x1360c>
  416124:	mov	x0, x22
  416128:	ldp	x19, x20, [sp, #16]
  41612c:	ldp	x21, x22, [sp, #32]
  416130:	ldr	x23, [sp, #48]
  416134:	ldp	x29, x30, [sp], #64
  416138:	b	402910 <free@plt>
  41613c:	bl	4161a8 <nftw@plt+0x13628>
  416140:	mov	w23, w0
  416144:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  416148:	add	x1, x1, #0x298
  41614c:	ubfiz	x0, x23, #4, #32
  416150:	ldr	w19, [x1, x0]
  416154:	ldrb	w0, [x20, #44]
  416158:	cbz	w0, 416028 <nftw@plt+0x134a8>
  41615c:	lsl	x0, x19, #4
  416160:	mov	x3, #0x0                   	// #0
  416164:	mov	x2, #0x0                   	// #0
  416168:	mov	x1, #0x0                   	// #0
  41616c:	bl	4165c0 <nftw@plt+0x13a40>
  416170:	cbnz	x0, 416034 <nftw@plt+0x134b4>
  416174:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x125a0>
  416178:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41617c:	add	x2, x2, #0x7e8
  416180:	add	x0, x0, #0x7f8
  416184:	mov	w1, #0x2b5                 	// #693
  416188:	bl	402bf0 <nftw@plt+0x70>
  41618c:	mov	x0, x22
  416190:	ldp	x19, x20, [sp, #16]
  416194:	ldp	x21, x22, [sp, #32]
  416198:	ldr	x23, [sp, #48]
  41619c:	ldp	x29, x30, [sp], #64
  4161a0:	b	4165f8 <nftw@plt+0x13a78>
  4161a4:	nop
  4161a8:	mov	x4, x0
  4161ac:	adrp	x5, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4161b0:	mov	w0, #0x1e                  	// #30
  4161b4:	add	x5, x5, #0x298
  4161b8:	mov	w2, #0x0                   	// #0
  4161bc:	b	4161dc <nftw@plt+0x1365c>
  4161c0:	sub	w1, w0, w2
  4161c4:	add	w1, w2, w1, lsr #1
  4161c8:	ubfiz	x3, x1, #4, #32
  4161cc:	ldr	w3, [x5, x3]
  4161d0:	cmp	x3, x4
  4161d4:	b.cc	4161f8 <nftw@plt+0x13678>  // b.lo, b.ul, b.last
  4161d8:	mov	w0, w1
  4161dc:	cmp	w0, w2
  4161e0:	b.ne	4161c0 <nftw@plt+0x13640>  // b.any
  4161e4:	ubfiz	x1, x0, #4, #32
  4161e8:	ldr	w1, [x5, x1]
  4161ec:	cmp	x1, x4
  4161f0:	b.cc	416200 <nftw@plt+0x13680>  // b.lo, b.ul, b.last
  4161f4:	ret
  4161f8:	add	w2, w1, #0x1
  4161fc:	b	4161dc <nftw@plt+0x1365c>
  416200:	stp	x29, x30, [sp, #-16]!
  416204:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  416208:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41620c:	mov	x29, sp
  416210:	add	x2, x2, #0x260
  416214:	add	x0, x0, #0x280
  416218:	mov	w1, #0x60                  	// #96
  41621c:	bl	402bf0 <nftw@plt+0x70>
  416220:	stp	x29, x30, [sp, #-64]!
  416224:	mov	x29, sp
  416228:	stp	x19, x20, [sp, #16]
  41622c:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  416230:	add	x19, x19, #0x918
  416234:	ldarb	w0, [x19]
  416238:	tbz	w0, #0, 41624c <nftw@plt+0x136cc>
  41623c:	add	x0, x19, #0x8
  416240:	ldp	x19, x20, [sp, #16]
  416244:	ldp	x29, x30, [sp], #64
  416248:	ret
  41624c:	mov	x0, x19
  416250:	bl	44a128 <_obstack_memory_used@@Base+0x6c8>
  416254:	cbz	w0, 41623c <nftw@plt+0x136bc>
  416258:	mov	x0, #0x30                  	// #48
  41625c:	stp	x21, x22, [sp, #32]
  416260:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x135a0>
  416264:	stp	x23, x24, [sp, #48]
  416268:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  41626c:	mov	x21, x0
  416270:	mov	x0, #0xd                   	// #13
  416274:	add	x22, x22, #0x298
  416278:	stp	xzr, xzr, [x21, #16]
  41627c:	str	xzr, [x21, #32]
  416280:	strb	wzr, [x21, #44]
  416284:	bl	4161a8 <nftw@plt+0x13628>
  416288:	mov	w23, w0
  41628c:	mov	x1, #0x10                  	// #16
  416290:	ubfiz	x0, x23, #4, #32
  416294:	ldr	w20, [x22, x0]
  416298:	mov	w24, w20
  41629c:	mov	x0, x24
  4162a0:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  4162a4:	mov	x3, x0
  4162a8:	cbz	x24, 4162c4 <nftw@plt+0x13744>
  4162ac:	add	x2, x0, w20, uxtw #4
  4162b0:	mov	x1, x0
  4162b4:	nop
  4162b8:	str	xzr, [x1], #16
  4162bc:	cmp	x2, x1
  4162c0:	b.ne	4162b8 <nftw@plt+0x13738>  // b.any
  4162c4:	stp	x3, x24, [x21]
  4162c8:	mov	x0, #0x30                  	// #48
  4162cc:	str	w23, [x21, #40]
  4162d0:	str	x21, [x19, #48]
  4162d4:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  4162d8:	mov	x21, x0
  4162dc:	mov	x0, #0xd                   	// #13
  4162e0:	stp	xzr, xzr, [x21, #16]
  4162e4:	str	xzr, [x21, #32]
  4162e8:	strb	wzr, [x21, #44]
  4162ec:	bl	4161a8 <nftw@plt+0x13628>
  4162f0:	mov	w23, w0
  4162f4:	mov	x1, #0x18                  	// #24
  4162f8:	ubfiz	x0, x23, #4, #32
  4162fc:	ldr	w20, [x22, x0]
  416300:	mov	w24, w20
  416304:	mov	x0, x24
  416308:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  41630c:	mov	x3, x0
  416310:	cbz	x24, 41632c <nftw@plt+0x137ac>
  416314:	mov	w2, #0x18                  	// #24
  416318:	mov	x1, x0
  41631c:	umaddl	x2, w20, w2, x0
  416320:	str	xzr, [x1], #24
  416324:	cmp	x2, x1
  416328:	b.ne	416320 <nftw@plt+0x137a0>  // b.any
  41632c:	stp	x3, x24, [x21]
  416330:	mov	x0, #0x30                  	// #48
  416334:	str	w23, [x21, #40]
  416338:	str	x21, [x19, #56]
  41633c:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  416340:	mov	x21, x0
  416344:	mov	x0, #0xd                   	// #13
  416348:	stp	xzr, xzr, [x21, #16]
  41634c:	str	xzr, [x21, #32]
  416350:	strb	wzr, [x21, #44]
  416354:	bl	4161a8 <nftw@plt+0x13628>
  416358:	mov	w23, w0
  41635c:	mov	x1, #0x18                  	// #24
  416360:	ubfiz	x0, x23, #4, #32
  416364:	ldr	w20, [x22, x0]
  416368:	mov	w22, w20
  41636c:	mov	x0, x22
  416370:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  416374:	mov	x3, x0
  416378:	cbz	x22, 416394 <nftw@plt+0x13814>
  41637c:	mov	w2, #0x18                  	// #24
  416380:	mov	x1, x0
  416384:	umaddl	x2, w20, w2, x0
  416388:	str	xzr, [x1], #24
  41638c:	cmp	x1, x2
  416390:	b.ne	416388 <nftw@plt+0x13808>  // b.any
  416394:	stp	x3, x22, [x21]
  416398:	mov	x0, x19
  41639c:	add	x20, x19, #0x8
  4163a0:	str	w23, [x21, #40]
  4163a4:	str	x21, [x19, #8]
  4163a8:	bl	44a2b8 <_obstack_memory_used@@Base+0x858>
  4163ac:	mov	x1, x20
  4163b0:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4163b4:	adrp	x0, 416000 <nftw@plt+0x13480>
  4163b8:	add	x2, x2, #0x388
  4163bc:	add	x0, x0, #0x3e8
  4163c0:	bl	4025d0 <__cxa_atexit@plt>
  4163c4:	add	x0, x19, #0x8
  4163c8:	ldp	x19, x20, [sp, #16]
  4163cc:	ldp	x21, x22, [sp, #32]
  4163d0:	ldp	x23, x24, [sp, #48]
  4163d4:	ldp	x29, x30, [sp], #64
  4163d8:	ret
  4163dc:	nop
  4163e0:	ret
  4163e4:	nop
  4163e8:	stp	x29, x30, [sp, #-48]!
  4163ec:	mov	x29, sp
  4163f0:	stp	x21, x22, [sp, #32]
  4163f4:	mov	x21, x0
  4163f8:	ldr	x22, [x0, #40]
  4163fc:	stp	x19, x20, [sp, #16]
  416400:	ldp	x3, x2, [x22]
  416404:	add	x20, x3, x2, lsl #4
  416408:	cmp	x3, x20
  41640c:	b.cs	416434 <nftw@plt+0x138b4>  // b.hs, b.nlast
  416410:	mov	x1, x3
  416414:	nop
  416418:	ldr	x0, [x1]
  41641c:	mov	x19, x1
  416420:	add	x1, x1, #0x10
  416424:	cmp	x0, #0x1
  416428:	b.hi	4164f4 <nftw@plt+0x13974>  // b.pmore
  41642c:	cmp	x20, x1
  416430:	b.hi	416418 <nftw@plt+0x13898>  // b.pmore
  416434:	sub	x1, x2, #0x1
  416438:	cbz	x2, 41644c <nftw@plt+0x138cc>
  41643c:	nop
  416440:	sub	x1, x1, #0x1
  416444:	cmp	x2, x1
  416448:	b.hi	416440 <nftw@plt+0x138c0>  // b.pmore
  41644c:	ldrb	w0, [x22, #44]
  416450:	cbz	w0, 416570 <nftw@plt+0x139f0>
  416454:	mov	x0, x3
  416458:	bl	4165f8 <nftw@plt+0x13a78>
  41645c:	mov	x0, x22
  416460:	mov	x1, #0x30                  	// #48
  416464:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  416468:	ldr	x19, [x21, #48]
  41646c:	cbz	x19, 4164a8 <nftw@plt+0x13928>
  416470:	ldr	x0, [x19, #8]
  416474:	sub	x1, x0, #0x1
  416478:	cbz	x0, 41648c <nftw@plt+0x1390c>
  41647c:	nop
  416480:	sub	x1, x1, #0x1
  416484:	cmp	x0, x1
  416488:	b.hi	416480 <nftw@plt+0x13900>  // b.pmore
  41648c:	ldrb	w1, [x19, #44]
  416490:	ldr	x0, [x19]
  416494:	cbz	w1, 416568 <nftw@plt+0x139e8>
  416498:	bl	4165f8 <nftw@plt+0x13a78>
  41649c:	mov	x0, x19
  4164a0:	mov	x1, #0x30                  	// #48
  4164a4:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  4164a8:	ldr	x19, [x21]
  4164ac:	cbz	x19, 41657c <nftw@plt+0x139fc>
  4164b0:	ldr	x1, [x19, #8]
  4164b4:	sub	x0, x1, #0x1
  4164b8:	cbz	x1, 4164cc <nftw@plt+0x1394c>
  4164bc:	nop
  4164c0:	sub	x0, x0, #0x1
  4164c4:	cmp	x1, x0
  4164c8:	b.hi	4164c0 <nftw@plt+0x13940>  // b.pmore
  4164cc:	ldrb	w1, [x19, #44]
  4164d0:	ldr	x0, [x19]
  4164d4:	cbz	w1, 41654c <nftw@plt+0x139cc>
  4164d8:	bl	4165f8 <nftw@plt+0x13a78>
  4164dc:	mov	x0, x19
  4164e0:	mov	x1, #0x30                  	// #48
  4164e4:	ldp	x19, x20, [sp, #16]
  4164e8:	ldp	x21, x22, [sp, #32]
  4164ec:	ldp	x29, x30, [sp], #48
  4164f0:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  4164f4:	cbz	x0, 416500 <nftw@plt+0x13980>
  4164f8:	mov	x1, #0x20                  	// #32
  4164fc:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  416500:	ldr	x0, [x19, #8]
  416504:	cbz	x0, 416510 <nftw@plt+0x13990>
  416508:	mov	x1, #0x20                  	// #32
  41650c:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  416510:	add	x1, x19, #0x10
  416514:	b	41652c <nftw@plt+0x139ac>
  416518:	ldr	x0, [x1]
  41651c:	mov	x19, x1
  416520:	add	x1, x1, #0x10
  416524:	cmp	x0, #0x1
  416528:	b.hi	4164f4 <nftw@plt+0x13974>  // b.pmore
  41652c:	cmp	x20, x1
  416530:	b.hi	416518 <nftw@plt+0x13998>  // b.pmore
  416534:	ldr	x22, [x21, #40]
  416538:	cbz	x22, 416468 <nftw@plt+0x138e8>
  41653c:	ldp	x3, x2, [x22]
  416540:	sub	x1, x2, #0x1
  416544:	cbnz	x2, 416440 <nftw@plt+0x138c0>
  416548:	b	41644c <nftw@plt+0x138cc>
  41654c:	bl	402910 <free@plt>
  416550:	mov	x0, x19
  416554:	mov	x1, #0x30                  	// #48
  416558:	ldp	x19, x20, [sp, #16]
  41655c:	ldp	x21, x22, [sp, #32]
  416560:	ldp	x29, x30, [sp], #48
  416564:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  416568:	bl	402910 <free@plt>
  41656c:	b	41649c <nftw@plt+0x1391c>
  416570:	mov	x0, x3
  416574:	bl	402910 <free@plt>
  416578:	b	41645c <nftw@plt+0x138dc>
  41657c:	ldp	x19, x20, [sp, #16]
  416580:	ldp	x21, x22, [sp, #32]
  416584:	ldp	x29, x30, [sp], #48
  416588:	ret
  41658c:	nop
  416590:	ret
  416594:	nop
  416598:	cbnz	x1, 4165a0 <nftw@plt+0x13a20>
  41659c:	b	449b78 <_obstack_memory_used@@Base+0x118>
  4165a0:	stp	x29, x30, [sp, #-16]!
  4165a4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4165a8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4165ac:	mov	x29, sp
  4165b0:	add	x2, x2, #0x478
  4165b4:	add	x0, x0, #0x490
  4165b8:	mov	w1, #0x2f                  	// #47
  4165bc:	bl	402bf0 <nftw@plt+0x70>
  4165c0:	cbnz	x1, 4165cc <nftw@plt+0x13a4c>
  4165c4:	mov	x1, #0x1                   	// #1
  4165c8:	b	449bb0 <_obstack_memory_used@@Base+0x150>
  4165cc:	stp	x29, x30, [sp, #-16]!
  4165d0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4165d4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4165d8:	mov	x29, sp
  4165dc:	add	x2, x2, #0x4a8
  4165e0:	add	x0, x0, #0x490
  4165e4:	mov	w1, #0x37                  	// #55
  4165e8:	bl	402bf0 <nftw@plt+0x70>
  4165ec:	nop
  4165f0:	b	449c00 <_obstack_memory_used@@Base+0x1a0>
  4165f4:	nop
  4165f8:	b	402910 <free@plt>
  4165fc:	nop
  416600:	ret
  416604:	nop
  416608:	str	xzr, [x0]
  41660c:	ret
  416610:	stp	x29, x30, [sp, #-32]!
  416614:	mov	x29, sp
  416618:	stp	x19, x20, [sp, #16]
  41661c:	ldr	x19, [x0]
  416620:	cbz	x19, 41663c <nftw@plt+0x13abc>
  416624:	mov	x20, x0
  416628:	mov	x0, x19
  41662c:	ldr	x19, [x19]
  416630:	bl	402910 <free@plt>
  416634:	str	x19, [x20]
  416638:	cbnz	x19, 416628 <nftw@plt+0x13aa8>
  41663c:	ldp	x19, x20, [sp, #16]
  416640:	ldp	x29, x30, [sp], #32
  416644:	ret
  416648:	cmp	x0, #0x10, lsl #12
  41664c:	b.ne	41666c <nftw@plt+0x13aec>  // b.any
  416650:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  416654:	ldr	x1, [x2, #2392]
  416658:	cbz	x1, 41666c <nftw@plt+0x13aec>
  41665c:	ldr	x0, [x1]
  416660:	str	x0, [x2, #2392]
  416664:	mov	x0, x1
  416668:	ret
  41666c:	b	449b78 <_obstack_memory_used@@Base+0x118>
  416670:	ldr	x2, [x0]
  416674:	mov	x1, x0
  416678:	sub	x2, x2, x0
  41667c:	cmp	x2, #0x10, lsl #12
  416680:	b.ne	416698 <nftw@plt+0x13b18>  // b.any
  416684:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  416688:	ldr	x2, [x0, #2392]
  41668c:	str	x2, [x1]
  416690:	str	x1, [x0, #2392]
  416694:	ret
  416698:	b	402910 <free@plt>
  41669c:	nop
  4166a0:	stp	x29, x30, [sp, #-32]!
  4166a4:	mov	x29, sp
  4166a8:	str	x19, [sp, #16]
  4166ac:	eor	x19, x1, x0
  4166b0:	blr	x2
  4166b4:	asr	w0, w0, #31
  4166b8:	sxtw	x0, w0
  4166bc:	and	x0, x0, x19
  4166c0:	ldr	x19, [sp, #16]
  4166c4:	ldp	x29, x30, [sp], #32
  4166c8:	ret
  4166cc:	nop
  4166d0:	stp	x29, x30, [sp, #-96]!
  4166d4:	mov	x29, sp
  4166d8:	stp	x21, x22, [sp, #32]
  4166dc:	mov	x21, x0
  4166e0:	ldp	x22, x0, [x1, #24]
  4166e4:	stp	x19, x20, [sp, #16]
  4166e8:	mov	x19, x1
  4166ec:	stp	x23, x24, [sp, #48]
  4166f0:	mov	x24, x2
  4166f4:	stp	x25, x26, [sp, #64]
  4166f8:	mov	x25, x3
  4166fc:	cmp	x0, x2
  416700:	b.cc	4168e4 <nftw@plt+0x13d64>  // b.lo, b.ul, b.last
  416704:	ldr	x2, [x19]
  416708:	stp	x3, x24, [x19, #8]
  41670c:	add	x20, x21, x22
  416710:	mov	x1, x21
  416714:	mov	x0, x20
  416718:	bl	4166a0 <nftw@plt+0x13b20>
  41671c:	add	x22, x20, x22
  416720:	ldr	x1, [x19, #16]
  416724:	eor	x21, x21, x0
  416728:	eor	x20, x20, x0
  41672c:	cmp	x1, #0x3
  416730:	b.ne	416768 <nftw@plt+0x13be8>  // b.any
  416734:	ldr	x2, [x19]
  416738:	mov	x1, x20
  41673c:	mov	x0, x22
  416740:	bl	4166a0 <nftw@plt+0x13b20>
  416744:	eor	x20, x20, x0
  416748:	ldr	x2, [x19]
  41674c:	mov	x1, x21
  416750:	eor	x22, x22, x0
  416754:	mov	x0, x20
  416758:	bl	4166a0 <nftw@plt+0x13b20>
  41675c:	eor	x20, x20, x0
  416760:	ldr	x1, [x19, #16]
  416764:	eor	x21, x21, x0
  416768:	cmp	x1, #0x3
  41676c:	ldr	x24, [x19, #24]
  416770:	b.ls	4168a4 <nftw@plt+0x13d24>  // b.plast
  416774:	add	x25, x22, x24
  416778:	cmp	x1, #0x5
  41677c:	add	x24, x25, x24
  416780:	ldr	x2, [x19]
  416784:	b.ne	4167b8 <nftw@plt+0x13c38>  // b.any
  416788:	mov	x1, x25
  41678c:	mov	x0, x24
  416790:	bl	4166a0 <nftw@plt+0x13b20>
  416794:	eor	x24, x24, x0
  416798:	ldr	x2, [x19]
  41679c:	mov	x1, x22
  4167a0:	eor	x25, x25, x0
  4167a4:	mov	x0, x24
  4167a8:	bl	4166a0 <nftw@plt+0x13b20>
  4167ac:	eor	x24, x24, x0
  4167b0:	ldr	x2, [x19]
  4167b4:	eor	x22, x22, x0
  4167b8:	mov	x1, x22
  4167bc:	mov	x0, x25
  4167c0:	bl	4166a0 <nftw@plt+0x13b20>
  4167c4:	eor	x22, x22, x0
  4167c8:	ldr	x1, [x19, #16]
  4167cc:	eor	x25, x25, x0
  4167d0:	cmp	x1, #0x5
  4167d4:	b.ne	416808 <nftw@plt+0x13c88>  // b.any
  4167d8:	ldr	x2, [x19]
  4167dc:	mov	x1, x21
  4167e0:	mov	x0, x25
  4167e4:	bl	4166a0 <nftw@plt+0x13b20>
  4167e8:	eor	x21, x21, x0
  4167ec:	ldr	x2, [x19]
  4167f0:	mov	x1, x20
  4167f4:	eor	x25, x25, x0
  4167f8:	mov	x0, x24
  4167fc:	bl	4166a0 <nftw@plt+0x13b20>
  416800:	eor	x20, x20, x0
  416804:	eor	x24, x24, x0
  416808:	ldr	x2, [x19]
  41680c:	mov	x1, x21
  416810:	mov	x0, x22
  416814:	bl	4166a0 <nftw@plt+0x13b20>
  416818:	eor	x22, x22, x0
  41681c:	ldr	x2, [x19]
  416820:	mov	x1, x20
  416824:	eor	x21, x21, x0
  416828:	mov	x0, x25
  41682c:	bl	4166a0 <nftw@plt+0x13b20>
  416830:	eor	x20, x20, x0
  416834:	ldr	x2, [x19]
  416838:	mov	x1, x20
  41683c:	eor	x25, x0, x25
  416840:	mov	x0, x22
  416844:	bl	4166a0 <nftw@plt+0x13b20>
  416848:	eor	x20, x20, x0
  41684c:	ldr	x1, [x19, #24]
  416850:	eor	x22, x22, x0
  416854:	cmp	x1, #0x8
  416858:	b.ne	4169b0 <nftw@plt+0x13e30>  // b.any
  41685c:	ldr	x0, [x19, #16]
  416860:	ldr	x3, [x20]
  416864:	cmp	x0, #0x5
  416868:	ldr	x4, [x21]
  41686c:	ldr	x2, [x22]
  416870:	ldr	x1, [x25]
  416874:	ldr	x0, [x19, #8]
  416878:	b.ne	416884 <nftw@plt+0x13d04>  // b.any
  41687c:	ldr	x5, [x24]
  416880:	str	x5, [x0, #32]
  416884:	stp	x4, x3, [x0]
  416888:	stp	x2, x1, [x0, #16]
  41688c:	ldp	x19, x20, [sp, #16]
  416890:	ldp	x21, x22, [sp, #32]
  416894:	ldp	x23, x24, [sp, #48]
  416898:	ldp	x25, x26, [sp, #64]
  41689c:	ldp	x29, x30, [sp], #96
  4168a0:	ret
  4168a4:	cmp	x24, #0x8
  4168a8:	b.ne	416a14 <nftw@plt+0x13e94>  // b.any
  4168ac:	cmp	x1, #0x3
  4168b0:	ldr	x2, [x21]
  4168b4:	ldr	x1, [x20]
  4168b8:	ldr	x0, [x19, #8]
  4168bc:	b.ne	4168c8 <nftw@plt+0x13d48>  // b.any
  4168c0:	ldr	x3, [x22]
  4168c4:	str	x3, [x0, #16]
  4168c8:	stp	x2, x1, [x0]
  4168cc:	ldp	x19, x20, [sp, #16]
  4168d0:	ldp	x21, x22, [sp, #32]
  4168d4:	ldp	x23, x24, [sp, #48]
  4168d8:	ldp	x25, x26, [sp, #64]
  4168dc:	ldp	x29, x30, [sp], #96
  4168e0:	ret
  4168e4:	lsr	x26, x2, #1
  4168e8:	cmp	x21, x3
  4168ec:	str	x27, [sp, #80]
  4168f0:	csel	x20, x4, x21, eq  // eq = none
  4168f4:	sub	x2, x2, x26
  4168f8:	mul	x22, x26, x22
  4168fc:	add	x23, x3, x22
  416900:	add	x27, x21, x22
  416904:	mov	x3, x23
  416908:	mov	x0, x27
  41690c:	bl	4166d0 <nftw@plt+0x13b50>
  416910:	mov	x2, x26
  416914:	mov	x1, x19
  416918:	mov	x0, x21
  41691c:	mov	x4, x27
  416920:	mov	x3, x20
  416924:	bl	4166d0 <nftw@plt+0x13b50>
  416928:	ldr	x2, [x19]
  41692c:	mov	x0, x23
  416930:	ldr	x1, [x19, #24]
  416934:	sub	x1, x22, x1
  416938:	add	x1, x20, x1
  41693c:	blr	x2
  416940:	tbz	w0, #31, 4169ec <nftw@plt+0x13e6c>
  416944:	ldr	x0, [x19, #24]
  416948:	cmp	x0, #0x8
  41694c:	madd	x24, x0, x24, x25
  416950:	b.eq	416960 <nftw@plt+0x13de0>  // b.none
  416954:	b	416a40 <nftw@plt+0x13ec0>
  416958:	cmp	x24, x23
  41695c:	b.eq	4169ec <nftw@plt+0x13e6c>  // b.none
  416960:	ldr	x2, [x19]
  416964:	mov	x1, x20
  416968:	mov	x0, x23
  41696c:	blr	x2
  416970:	asr	w0, w0, #31
  416974:	eor	x1, x23, x20
  416978:	and	w2, w0, #0x8
  41697c:	sxtw	x0, w0
  416980:	and	x1, x1, x0
  416984:	mvn	x0, x0
  416988:	eor	x1, x20, x1
  41698c:	and	x0, x0, #0x8
  416990:	add	x20, x20, x0
  416994:	add	x23, x23, w2, sxtw
  416998:	ldr	x0, [x1]
  41699c:	str	x0, [x25], #8
  4169a0:	cmp	x25, x23
  4169a4:	b.ne	416958 <nftw@plt+0x13dd8>  // b.any
  4169a8:	ldr	x27, [sp, #80]
  4169ac:	b	41688c <nftw@plt+0x13d0c>
  4169b0:	cmp	x1, #0x4
  4169b4:	b.ne	416b08 <nftw@plt+0x13f88>  // b.any
  4169b8:	ldr	x0, [x19, #16]
  4169bc:	ldr	w3, [x20]
  4169c0:	cmp	x0, #0x5
  4169c4:	ldr	w4, [x21]
  4169c8:	ldr	w2, [x22]
  4169cc:	ldr	w1, [x25]
  4169d0:	ldr	x0, [x19, #8]
  4169d4:	b.ne	4169e0 <nftw@plt+0x13e60>  // b.any
  4169d8:	ldr	w5, [x24]
  4169dc:	str	w5, [x0, #16]
  4169e0:	stp	w4, w3, [x0]
  4169e4:	stp	w2, w1, [x0, #8]
  4169e8:	b	41688c <nftw@plt+0x13d0c>
  4169ec:	sub	x2, x23, x25
  4169f0:	mov	x1, x20
  4169f4:	mov	x0, x25
  4169f8:	ldp	x19, x20, [sp, #16]
  4169fc:	ldp	x21, x22, [sp, #32]
  416a00:	ldp	x23, x24, [sp, #48]
  416a04:	ldp	x25, x26, [sp, #64]
  416a08:	ldr	x27, [sp, #80]
  416a0c:	ldp	x29, x30, [sp], #96
  416a10:	b	402490 <memcpy@plt>
  416a14:	cmp	x24, #0x4
  416a18:	b.ne	416c04 <nftw@plt+0x14084>  // b.any
  416a1c:	cmp	x1, #0x3
  416a20:	ldr	w2, [x21]
  416a24:	ldr	w1, [x20]
  416a28:	ldr	x0, [x19, #8]
  416a2c:	b.ne	416a38 <nftw@plt+0x13eb8>  // b.any
  416a30:	ldr	w3, [x22]
  416a34:	str	w3, [x0, #8]
  416a38:	stp	w2, w1, [x0]
  416a3c:	b	41688c <nftw@plt+0x13d0c>
  416a40:	cmp	x0, #0x4
  416a44:	b.eq	416a54 <nftw@plt+0x13ed4>  // b.none
  416a48:	b	416ab0 <nftw@plt+0x13f30>
  416a4c:	cmp	x24, x23
  416a50:	b.eq	4169ec <nftw@plt+0x13e6c>  // b.none
  416a54:	ldr	x2, [x19]
  416a58:	mov	x1, x20
  416a5c:	mov	x0, x23
  416a60:	blr	x2
  416a64:	asr	w0, w0, #31
  416a68:	eor	x1, x23, x20
  416a6c:	and	w2, w0, #0x4
  416a70:	sxtw	x0, w0
  416a74:	and	x1, x1, x0
  416a78:	mvn	x0, x0
  416a7c:	eor	x1, x20, x1
  416a80:	and	x0, x0, #0x4
  416a84:	add	x20, x20, x0
  416a88:	add	x23, x23, w2, sxtw
  416a8c:	ldr	w0, [x1]
  416a90:	str	w0, [x25], #4
  416a94:	cmp	x25, x23
  416a98:	b.ne	416a4c <nftw@plt+0x13ecc>  // b.any
  416a9c:	ldr	x27, [sp, #80]
  416aa0:	b	41688c <nftw@plt+0x13d0c>
  416aa4:	add	x20, x20, x1
  416aa8:	cmp	x24, x23
  416aac:	b.eq	4169ec <nftw@plt+0x13e6c>  // b.none
  416ab0:	ldr	x2, [x19]
  416ab4:	mov	x1, x20
  416ab8:	mov	x0, x23
  416abc:	blr	x2
  416ac0:	asr	w21, w0, #31
  416ac4:	ldr	x2, [x19, #24]
  416ac8:	sxtw	x21, w21
  416acc:	eor	x1, x23, x20
  416ad0:	mov	x0, x25
  416ad4:	and	x1, x1, x21
  416ad8:	eor	x1, x20, x1
  416adc:	bl	402490 <memcpy@plt>
  416ae0:	ldr	x2, [x19, #24]
  416ae4:	mvn	x1, x21
  416ae8:	and	x21, x21, x2
  416aec:	add	x25, x0, x2
  416af0:	add	x23, x23, x21
  416af4:	and	x1, x1, x2
  416af8:	cmp	x25, x23
  416afc:	b.ne	416aa4 <nftw@plt+0x13f24>  // b.any
  416b00:	ldr	x27, [sp, #80]
  416b04:	b	41688c <nftw@plt+0x13d0c>
  416b08:	cmp	x1, #0x7
  416b0c:	sub	x11, x24, #0x8
  416b10:	mov	x0, #0x8                   	// #8
  416b14:	b.hi	416b20 <nftw@plt+0x13fa0>  // b.pmore
  416b18:	b	416cbc <nftw@plt+0x1413c>
  416b1c:	mov	x0, x9
  416b20:	ldp	x8, x10, [x19, #8]
  416b24:	add	x5, x21, x0
  416b28:	add	x4, x20, x0
  416b2c:	add	x3, x22, x0
  416b30:	add	x2, x25, x0
  416b34:	sub	x7, x0, #0x8
  416b38:	lsl	x1, x1, #2
  416b3c:	add	x9, x0, #0x8
  416b40:	ldur	x12, [x5, #-8]
  416b44:	cmp	x10, #0x5
  416b48:	add	x6, x8, x7
  416b4c:	ldur	x10, [x4, #-8]
  416b50:	ldur	x5, [x3, #-8]
  416b54:	ldur	x4, [x2, #-8]
  416b58:	b.ne	416b64 <nftw@plt+0x13fe4>  // b.any
  416b5c:	ldr	x2, [x11, x0]
  416b60:	str	x2, [x6, x1]
  416b64:	str	x12, [x8, x7]
  416b68:	ldr	x1, [x19, #24]
  416b6c:	add	x2, x6, x1
  416b70:	str	x10, [x6, x1]
  416b74:	ldr	x1, [x19, #24]
  416b78:	add	x3, x2, x1
  416b7c:	str	x5, [x2, x1]
  416b80:	ldr	x1, [x19, #24]
  416b84:	str	x4, [x3, x1]
  416b88:	ldr	x1, [x19, #24]
  416b8c:	cmp	x9, x1
  416b90:	b.ls	416b1c <nftw@plt+0x13f9c>  // b.plast
  416b94:	cmp	x0, x1
  416b98:	b.cs	41688c <nftw@plt+0x13d0c>  // b.hs, b.nlast
  416b9c:	nop
  416ba0:	ldp	x2, x4, [x19, #8]
  416ba4:	lsl	x1, x1, #2
  416ba8:	ldrb	w3, [x21, x0]
  416bac:	ldrb	w6, [x20, x0]
  416bb0:	ldrb	w5, [x22, x0]
  416bb4:	cmp	x4, #0x5
  416bb8:	add	x2, x2, x0
  416bbc:	ldrb	w4, [x25, x0]
  416bc0:	b.ne	416bcc <nftw@plt+0x1404c>  // b.any
  416bc4:	ldrb	w7, [x24, x0]
  416bc8:	strb	w7, [x2, x1]
  416bcc:	strb	w3, [x2]
  416bd0:	add	x0, x0, #0x1
  416bd4:	ldr	x1, [x19, #24]
  416bd8:	add	x3, x2, x1
  416bdc:	strb	w6, [x2, x1]
  416be0:	ldr	x1, [x19, #24]
  416be4:	add	x2, x3, x1
  416be8:	strb	w5, [x3, x1]
  416bec:	ldr	x1, [x19, #24]
  416bf0:	strb	w4, [x2, x1]
  416bf4:	ldr	x1, [x19, #24]
  416bf8:	cmp	x1, x0
  416bfc:	b.hi	416ba0 <nftw@plt+0x14020>  // b.pmore
  416c00:	b	41688c <nftw@plt+0x13d0c>
  416c04:	cmp	x24, #0x7
  416c08:	b.ls	416cc4 <nftw@plt+0x14144>  // b.plast
  416c0c:	sub	x9, x21, #0x8
  416c10:	sub	x8, x20, #0x8
  416c14:	sub	x10, x22, #0x8
  416c18:	mov	x0, #0x8                   	// #8
  416c1c:	b	416c28 <nftw@plt+0x140a8>
  416c20:	ldr	x1, [x19, #16]
  416c24:	mov	x0, x4
  416c28:	ldr	x3, [x19, #8]
  416c2c:	sub	x2, x0, #0x8
  416c30:	cmp	x1, #0x3
  416c34:	lsl	x24, x24, #1
  416c38:	add	x4, x0, #0x8
  416c3c:	add	x1, x3, x2
  416c40:	ldr	x6, [x9, x0]
  416c44:	ldr	x5, [x8, x0]
  416c48:	b.ne	416c54 <nftw@plt+0x140d4>  // b.any
  416c4c:	ldr	x7, [x10, x0]
  416c50:	str	x7, [x1, x24]
  416c54:	str	x6, [x3, x2]
  416c58:	ldr	x2, [x19, #24]
  416c5c:	str	x5, [x1, x2]
  416c60:	ldr	x24, [x19, #24]
  416c64:	cmp	x4, x24
  416c68:	b.ls	416c20 <nftw@plt+0x140a0>  // b.plast
  416c6c:	cmp	x0, x24
  416c70:	b.cs	41688c <nftw@plt+0x13d0c>  // b.hs, b.nlast
  416c74:	nop
  416c78:	ldp	x1, x4, [x19, #8]
  416c7c:	lsl	x24, x24, #1
  416c80:	ldrb	w2, [x21, x0]
  416c84:	ldrb	w3, [x20, x0]
  416c88:	add	x1, x1, x0
  416c8c:	cmp	x4, #0x3
  416c90:	b.ne	416c9c <nftw@plt+0x1411c>  // b.any
  416c94:	ldrb	w4, [x22, x0]
  416c98:	strb	w4, [x1, x24]
  416c9c:	strb	w2, [x1]
  416ca0:	add	x0, x0, #0x1
  416ca4:	ldr	x2, [x19, #24]
  416ca8:	strb	w3, [x1, x2]
  416cac:	ldr	x24, [x19, #24]
  416cb0:	cmp	x24, x0
  416cb4:	b.hi	416c78 <nftw@plt+0x140f8>  // b.pmore
  416cb8:	b	41688c <nftw@plt+0x13d0c>
  416cbc:	mov	x0, #0x0                   	// #0
  416cc0:	b	416b94 <nftw@plt+0x14014>
  416cc4:	mov	x0, #0x0                   	// #0
  416cc8:	b	416c6c <nftw@plt+0x140ec>
  416ccc:	nop
  416cd0:	cmp	x1, #0x1
  416cd4:	b.ls	416d88 <nftw@plt+0x14208>  // b.plast
  416cd8:	stp	x29, x30, [sp, #-336]!
  416cdc:	mov	x4, #0x5                   	// #5
  416ce0:	mov	x29, sp
  416ce4:	stp	x19, x20, [sp, #16]
  416ce8:	mov	x19, x1
  416cec:	mov	x20, x0
  416cf0:	tbnz	x2, #63, 416d34 <nftw@plt+0x141b4>
  416cf4:	lsr	x0, x19, #1
  416cf8:	stp	x3, x20, [sp, #40]
  416cfc:	stp	x19, x2, [sp, #56]
  416d00:	mul	x0, x0, x2
  416d04:	str	x4, [sp, #72]
  416d08:	cmp	x0, #0x100
  416d0c:	b.hi	416d58 <nftw@plt+0x141d8>  // b.pmore
  416d10:	mov	x2, x19
  416d14:	add	x4, sp, #0x50
  416d18:	mov	x3, x20
  416d1c:	mov	x0, x20
  416d20:	add	x1, sp, #0x28
  416d24:	bl	4166d0 <nftw@plt+0x13b50>
  416d28:	ldp	x19, x20, [sp, #16]
  416d2c:	ldp	x29, x30, [sp], #336
  416d30:	ret
  416d34:	mvn	x2, x2
  416d38:	lsr	x0, x19, #1
  416d3c:	mov	x4, #0x3                   	// #3
  416d40:	stp	x3, x20, [sp, #40]
  416d44:	mul	x0, x0, x2
  416d48:	stp	x19, x2, [sp, #56]
  416d4c:	str	x4, [sp, #72]
  416d50:	cmp	x0, #0x100
  416d54:	b.ls	416d10 <nftw@plt+0x14190>  // b.plast
  416d58:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  416d5c:	mov	x4, x0
  416d60:	mov	x2, x19
  416d64:	mov	x3, x20
  416d68:	mov	x19, x0
  416d6c:	add	x1, sp, #0x28
  416d70:	mov	x0, x20
  416d74:	bl	4166d0 <nftw@plt+0x13b50>
  416d78:	mov	x0, x19
  416d7c:	ldp	x19, x20, [sp, #16]
  416d80:	ldp	x29, x30, [sp], #336
  416d84:	b	402910 <free@plt>
  416d88:	ret
  416d8c:	nop
  416d90:	mvn	x2, x2
  416d94:	b	416cd0 <nftw@plt+0x14150>
  416d98:	mov	w0, #0x1                   	// #1
  416d9c:	ret
  416da0:	stp	x29, x30, [sp, #-80]!
  416da4:	mov	x29, sp
  416da8:	stp	x21, x22, [sp, #32]
  416dac:	mov	x22, x1
  416db0:	mov	x21, x2
  416db4:	mov	x1, x2
  416db8:	stp	x19, x20, [sp, #16]
  416dbc:	mov	x20, x8
  416dc0:	stp	x23, x24, [sp, #48]
  416dc4:	stp	x25, x26, [sp, #64]
  416dc8:	mov	x25, x0
  416dcc:	mov	x0, x22
  416dd0:	bl	402720 <strcasecmp@plt>
  416dd4:	cbnz	w0, 416e08 <nftw@plt+0x14288>
  416dd8:	mov	x1, #0xffffffffffffffff    	// #-1
  416ddc:	adrp	x0, 417000 <nftw@plt+0x14480>
  416de0:	add	x0, x0, #0xd8
  416de4:	stp	x0, x1, [x20]
  416de8:	str	w1, [x20, #16]
  416dec:	mov	sp, x29
  416df0:	ldp	x19, x20, [sp, #16]
  416df4:	ldp	x21, x22, [sp, #32]
  416df8:	ldp	x23, x24, [sp, #48]
  416dfc:	ldp	x25, x26, [sp, #64]
  416e00:	ldp	x29, x30, [sp], #80
  416e04:	ret
  416e08:	mov	x0, x22
  416e0c:	bl	4024f0 <strlen@plt>
  416e10:	mov	x24, x0
  416e14:	mov	x0, x21
  416e18:	bl	4024f0 <strlen@plt>
  416e1c:	add	x3, x24, x0
  416e20:	add	x3, x3, #0x11
  416e24:	mov	x23, x0
  416e28:	and	x3, x3, #0xfffffffffffffff0
  416e2c:	mov	x2, x0
  416e30:	sub	sp, sp, x3
  416e34:	mov	x1, x21
  416e38:	mov	x26, sp
  416e3c:	mov	x19, #0x0                   	// #0
  416e40:	mov	x0, x26
  416e44:	bl	402490 <memcpy@plt>
  416e48:	mov	w3, #0x2f                  	// #47
  416e4c:	add	x0, x23, #0x1
  416e50:	add	x2, x24, #0x1
  416e54:	mov	x1, x22
  416e58:	add	x0, x26, x0
  416e5c:	adrp	x24, 45f000 <_obstack_memory_used@@Base+0x155a0>
  416e60:	add	x24, x24, #0xbf8
  416e64:	strb	w3, [x26, x23]
  416e68:	bl	402490 <memcpy@plt>
  416e6c:	add	x23, x24, #0x18
  416e70:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  416e74:	add	x1, x1, #0x4c8
  416e78:	b	416e80 <nftw@plt+0x14300>
  416e7c:	ldr	x1, [x23], #24
  416e80:	mov	x0, x26
  416e84:	bl	402720 <strcasecmp@plt>
  416e88:	cbz	w0, 416ef8 <nftw@plt+0x14378>
  416e8c:	add	x19, x19, #0x1
  416e90:	cmp	x19, #0x8
  416e94:	b.ne	416e7c <nftw@plt+0x142fc>  // b.any
  416e98:	adrp	x2, 416000 <nftw@plt+0x13480>
  416e9c:	add	x2, x2, #0xf58
  416ea0:	mov	x1, x21
  416ea4:	mov	x0, x22
  416ea8:	str	x2, [x20]
  416eac:	bl	4029a0 <iconv_open@plt>
  416eb0:	str	x0, [x20, #8]
  416eb4:	mov	w1, #0xffffffff            	// #-1
  416eb8:	str	w1, [x20, #16]
  416ebc:	cmn	x0, #0x1
  416ec0:	b.ne	416dec <nftw@plt+0x1426c>  // b.any
  416ec4:	bl	402aa0 <__errno_location@plt>
  416ec8:	ldr	w0, [x0]
  416ecc:	cmp	w0, #0x16
  416ed0:	b.eq	416f34 <nftw@plt+0x143b4>  // b.none
  416ed4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  416ed8:	mov	x0, x25
  416edc:	add	x2, x2, #0x508
  416ee0:	mov	w1, #0x3                   	// #3
  416ee4:	bl	41f770 <nftw@plt+0x1cbf0>
  416ee8:	adrp	x0, 417000 <nftw@plt+0x14480>
  416eec:	add	x0, x0, #0xd8
  416ef0:	str	x0, [x20]
  416ef4:	b	416dec <nftw@plt+0x1426c>
  416ef8:	add	x19, x19, x19, lsl #1
  416efc:	mov	w0, #0xffffffff            	// #-1
  416f00:	str	w0, [x20, #16]
  416f04:	add	x19, x24, x19, lsl #3
  416f08:	ldr	x0, [x19, #8]
  416f0c:	str	x0, [x20]
  416f10:	ldr	x0, [x19, #16]
  416f14:	str	x0, [x20, #8]
  416f18:	mov	sp, x29
  416f1c:	ldp	x19, x20, [sp, #16]
  416f20:	ldp	x21, x22, [sp, #32]
  416f24:	ldp	x23, x24, [sp, #48]
  416f28:	ldp	x25, x26, [sp, #64]
  416f2c:	ldp	x29, x30, [sp], #80
  416f30:	ret
  416f34:	mov	x4, x22
  416f38:	mov	x3, x21
  416f3c:	mov	x0, x25
  416f40:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  416f44:	mov	w1, #0x3                   	// #3
  416f48:	add	x2, x2, #0x4d8
  416f4c:	bl	41f298 <nftw@plt+0x1c718>
  416f50:	b	416ee8 <nftw@plt+0x14368>
  416f54:	nop
  416f58:	stp	x29, x30, [sp, #-80]!
  416f5c:	mov	x4, #0x0                   	// #0
  416f60:	mov	x29, sp
  416f64:	stp	x19, x20, [sp, #16]
  416f68:	mov	x20, x2
  416f6c:	mov	x19, x3
  416f70:	mov	x2, #0x0                   	// #0
  416f74:	mov	x3, #0x0                   	// #0
  416f78:	stp	x21, x22, [sp, #32]
  416f7c:	mov	x22, x1
  416f80:	mov	x21, x0
  416f84:	mov	x1, #0x0                   	// #0
  416f88:	bl	4028a0 <iconv@plt>
  416f8c:	cmn	x0, #0x1
  416f90:	b.eq	416ffc <nftw@plt+0x1447c>  // b.none
  416f94:	ldp	x4, x3, [x19]
  416f98:	ldr	x5, [x19, #16]
  416f9c:	add	x4, x4, x5
  416fa0:	sub	x1, x3, x5
  416fa4:	stp	x22, x4, [sp, #48]
  416fa8:	stp	x20, x1, [sp, #64]
  416fac:	add	x4, sp, #0x48
  416fb0:	add	x3, sp, #0x38
  416fb4:	add	x2, sp, #0x40
  416fb8:	add	x1, sp, #0x30
  416fbc:	mov	x0, x21
  416fc0:	bl	4028a0 <iconv@plt>
  416fc4:	ldr	x0, [sp, #64]
  416fc8:	cbnz	x0, 41708c <nftw@plt+0x1450c>
  416fcc:	add	x4, sp, #0x48
  416fd0:	add	x3, sp, #0x38
  416fd4:	mov	x0, x21
  416fd8:	mov	x2, #0x0                   	// #0
  416fdc:	mov	x1, #0x0                   	// #0
  416fe0:	bl	4028a0 <iconv@plt>
  416fe4:	cmn	x0, #0x1
  416fe8:	b.ne	417068 <nftw@plt+0x144e8>  // b.any
  416fec:	bl	402aa0 <__errno_location@plt>
  416ff0:	ldr	w0, [x0]
  416ff4:	cmp	w0, #0x7
  416ff8:	b.eq	417010 <nftw@plt+0x14490>  // b.none
  416ffc:	mov	w0, #0x0                   	// #0
  417000:	ldp	x19, x20, [sp, #16]
  417004:	ldp	x21, x22, [sp, #32]
  417008:	ldp	x29, x30, [sp], #80
  41700c:	ret
  417010:	ldp	x0, x1, [x19]
  417014:	ldr	x2, [sp, #72]
  417018:	add	x2, x2, #0x100
  41701c:	str	x2, [sp, #72]
  417020:	add	x1, x1, #0x100
  417024:	str	x1, [x19, #8]
  417028:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41702c:	mov	x1, x0
  417030:	ldr	x5, [x19, #8]
  417034:	str	x1, [x19]
  417038:	ldr	x2, [sp, #72]
  41703c:	add	x4, sp, #0x48
  417040:	add	x3, sp, #0x38
  417044:	mov	x0, x21
  417048:	sub	x5, x5, x2
  41704c:	mov	x2, #0x0                   	// #0
  417050:	add	x5, x1, x5
  417054:	mov	x1, #0x0                   	// #0
  417058:	str	x5, [sp, #56]
  41705c:	bl	4028a0 <iconv@plt>
  417060:	cmn	x0, #0x1
  417064:	b.eq	416ffc <nftw@plt+0x1447c>  // b.none
  417068:	ldr	x1, [x19, #8]
  41706c:	mov	w0, #0x1                   	// #1
  417070:	ldr	x2, [sp, #72]
  417074:	ldp	x21, x22, [sp, #32]
  417078:	sub	x1, x1, x2
  41707c:	str	x1, [x19, #16]
  417080:	ldp	x19, x20, [sp, #16]
  417084:	ldp	x29, x30, [sp], #80
  417088:	ret
  41708c:	bl	402aa0 <__errno_location@plt>
  417090:	ldr	w0, [x0]
  417094:	cmp	w0, #0x7
  417098:	b.ne	416ffc <nftw@plt+0x1447c>  // b.any
  41709c:	ldp	x0, x1, [x19]
  4170a0:	ldr	x2, [sp, #72]
  4170a4:	add	x2, x2, #0x100
  4170a8:	str	x2, [sp, #72]
  4170ac:	add	x1, x1, #0x100
  4170b0:	str	x1, [x19, #8]
  4170b4:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4170b8:	str	x0, [x19]
  4170bc:	ldr	x1, [x19, #8]
  4170c0:	ldr	x2, [sp, #72]
  4170c4:	sub	x1, x1, x2
  4170c8:	add	x0, x0, x1
  4170cc:	str	x0, [sp, #56]
  4170d0:	b	416fac <nftw@plt+0x1442c>
  4170d4:	nop
  4170d8:	stp	x29, x30, [sp, #-48]!
  4170dc:	mov	x29, sp
  4170e0:	stp	x19, x20, [sp, #16]
  4170e4:	mov	x19, x3
  4170e8:	mov	x20, x2
  4170ec:	ldr	x2, [x3, #16]
  4170f0:	ldr	x3, [x3, #8]
  4170f4:	ldr	x0, [x19]
  4170f8:	str	x21, [sp, #32]
  4170fc:	mov	x21, x1
  417100:	add	x1, x2, x20
  417104:	cmp	x1, x3
  417108:	b.hi	41713c <nftw@plt+0x145bc>  // b.pmore
  41710c:	mov	x1, x21
  417110:	add	x0, x0, x2
  417114:	mov	x2, x20
  417118:	bl	402490 <memcpy@plt>
  41711c:	ldr	x2, [x19, #16]
  417120:	mov	w0, #0x1                   	// #1
  417124:	ldr	x21, [sp, #32]
  417128:	add	x2, x2, x20
  41712c:	str	x2, [x19, #16]
  417130:	ldp	x19, x20, [sp, #16]
  417134:	ldp	x29, x30, [sp], #48
  417138:	ret
  41713c:	add	x1, x1, x1, lsr #2
  417140:	str	x1, [x19, #8]
  417144:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  417148:	str	x0, [x19]
  41714c:	ldr	x2, [x19, #16]
  417150:	b	41710c <nftw@plt+0x1458c>
  417154:	nop
  417158:	cmp	w1, #0x3f
  41715c:	b.eq	4171e8 <nftw@plt+0x14668>  // b.none
  417160:	b.hi	4171b8 <nftw@plt+0x14638>  // b.pmore
  417164:	cmp	w1, #0x3b
  417168:	b.eq	417200 <nftw@plt+0x14680>  // b.none
  41716c:	b.ls	417190 <nftw@plt+0x14610>  // b.plast
  417170:	cmp	w1, #0x3c
  417174:	b.ne	4171d0 <nftw@plt+0x14650>  // b.any
  417178:	add	x0, x0, #0x220
  41717c:	ldp	x2, x3, [x0]
  417180:	stp	x2, x3, [x8]
  417184:	ldr	x0, [x0, #16]
  417188:	str	x0, [x8, #16]
  41718c:	ret
  417190:	cmp	w1, #0x39
  417194:	b.eq	4171e8 <nftw@plt+0x14668>  // b.none
  417198:	cmp	w1, #0x3a
  41719c:	b.ne	4171d0 <nftw@plt+0x14650>  // b.any
  4171a0:	add	x0, x0, #0x238
  4171a4:	ldp	x2, x3, [x0]
  4171a8:	stp	x2, x3, [x8]
  4171ac:	ldr	x0, [x0, #16]
  4171b0:	str	x0, [x8, #16]
  4171b4:	ret
  4171b8:	cmp	w1, #0x41
  4171bc:	b.eq	417200 <nftw@plt+0x14680>  // b.none
  4171c0:	cmp	w1, #0x42
  4171c4:	b.eq	417178 <nftw@plt+0x145f8>  // b.none
  4171c8:	cmp	w1, #0x40
  4171cc:	b.eq	4171a0 <nftw@plt+0x14620>  // b.none
  4171d0:	add	x0, x0, #0x208
  4171d4:	ldp	x2, x3, [x0]
  4171d8:	stp	x2, x3, [x8]
  4171dc:	ldr	x0, [x0, #16]
  4171e0:	str	x0, [x8, #16]
  4171e4:	ret
  4171e8:	add	x0, x0, #0x268
  4171ec:	ldp	x2, x3, [x0]
  4171f0:	stp	x2, x3, [x8]
  4171f4:	ldr	x0, [x0, #16]
  4171f8:	str	x0, [x8, #16]
  4171fc:	ret
  417200:	add	x0, x0, #0x250
  417204:	ldp	x2, x3, [x0]
  417208:	stp	x2, x3, [x8]
  41720c:	ldr	x0, [x0, #16]
  417210:	str	x0, [x8, #16]
  417214:	ret
  417218:	stp	x29, x30, [sp, #-80]!
  41721c:	cmp	x0, w4, sxtw
  417220:	mov	x29, sp
  417224:	stp	x19, x20, [sp, #16]
  417228:	mov	w19, w2
  41722c:	mov	x20, x3
  417230:	stp	x23, x24, [sp, #48]
  417234:	ldp	x2, x23, [x3, #8]
  417238:	b.eq	4172f8 <nftw@plt+0x14778>  // b.none
  41723c:	stp	x25, x26, [sp, #64]
  417240:	sxtw	x25, w4
  417244:	cmp	x0, #0x20
  417248:	stp	x21, x22, [sp, #32]
  41724c:	mov	x22, #0x20                  	// #32
  417250:	csel	x22, x0, x22, ls  // ls = plast
  417254:	udiv	x26, x25, x0
  417258:	mov	x21, x0
  41725c:	mov	x3, #0x1                   	// #1
  417260:	ldrb	w24, [x1]
  417264:	lsl	x3, x3, x22
  417268:	sub	x22, x3, #0x1
  41726c:	add	x0, x26, x23
  417270:	cmp	x0, x2
  417274:	b.hi	4172e0 <nftw@plt+0x14760>  // b.pmore
  417278:	mov	w3, w22
  41727c:	cmp	x25, x21
  417280:	mov	w0, w21
  417284:	sub	x6, x26, #0x1
  417288:	mov	x1, #0x0                   	// #0
  41728c:	b.cc	4172bc <nftw@plt+0x1473c>  // b.lo, b.ul, b.last
  417290:	ldr	x4, [x20]
  417294:	cmp	w24, #0x0
  417298:	sub	x5, x6, x1
  41729c:	and	w2, w19, w3
  4172a0:	csel	x5, x5, x1, ne  // ne = any
  4172a4:	add	x1, x1, #0x1
  4172a8:	add	x4, x4, x5
  4172ac:	cmp	x26, x1
  4172b0:	lsr	w19, w19, w0
  4172b4:	strb	w2, [x4, x23]
  4172b8:	b.hi	417290 <nftw@plt+0x14710>  // b.pmore
  4172bc:	ldr	x0, [x20, #16]
  4172c0:	ldp	x21, x22, [sp, #32]
  4172c4:	add	x0, x0, x26
  4172c8:	ldp	x25, x26, [sp, #64]
  4172cc:	str	x0, [x20, #16]
  4172d0:	ldp	x19, x20, [sp, #16]
  4172d4:	ldp	x23, x24, [sp, #48]
  4172d8:	ldp	x29, x30, [sp], #80
  4172dc:	ret
  4172e0:	ldr	x0, [x20]
  4172e4:	add	x1, x2, #0x100
  4172e8:	str	x1, [x20, #8]
  4172ec:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4172f0:	str	x0, [x20]
  4172f4:	b	417278 <nftw@plt+0x146f8>
  4172f8:	add	x1, x23, #0x1
  4172fc:	cmp	x1, x2
  417300:	ldr	x0, [x3]
  417304:	b.hi	417320 <nftw@plt+0x147a0>  // b.pmore
  417308:	str	x1, [x20, #16]
  41730c:	strb	w19, [x0, x23]
  417310:	ldp	x19, x20, [sp, #16]
  417314:	ldp	x23, x24, [sp, #48]
  417318:	ldp	x29, x30, [sp], #80
  41731c:	ret
  417320:	add	x1, x2, #0x100
  417324:	str	x1, [x3, #8]
  417328:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41732c:	str	x0, [x20]
  417330:	ldr	x23, [x20, #16]
  417334:	add	x1, x23, #0x1
  417338:	b	417308 <nftw@plt+0x14788>
  41733c:	nop
  417340:	stp	x29, x30, [sp, #-96]!
  417344:	cmp	x2, #0x3
  417348:	mov	x29, sp
  41734c:	stp	x21, x22, [sp, #32]
  417350:	mov	x22, x2
  417354:	stp	x23, x24, [sp, #48]
  417358:	mov	x24, x0
  41735c:	ldp	x0, x2, [x3]
  417360:	stp	x19, x20, [sp, #16]
  417364:	mov	x20, x1
  417368:	ldr	x21, [x3, #16]
  41736c:	mov	x19, x3
  417370:	add	x1, x0, x21
  417374:	sub	x21, x2, x21
  417378:	b.ls	4174f0 <nftw@plt+0x14970>  // b.plast
  41737c:	cmp	x24, #0x0
  417380:	adrp	x23, 45f000 <_obstack_memory_used@@Base+0x155a0>
  417384:	add	x23, x23, #0xbf8
  417388:	str	x25, [sp, #64]
  41738c:	add	x23, x23, #0xc0
  417390:	mov	x25, #0x3                   	// #3
  417394:	csel	x25, x25, xzr, ne  // ne = any
  417398:	ldrb	w0, [x20, #1]
  41739c:	ldrb	w4, [x20, #2]
  4173a0:	cbz	x24, 4174dc <nftw@plt+0x1495c>
  4173a4:	ldrb	w3, [x20]
  4173a8:	lsl	w2, w0, #16
  4173ac:	add	w2, w2, w3, lsl #24
  4173b0:	add	w2, w2, w4, lsl #8
  4173b4:	ldrb	w4, [x20, x25]
  4173b8:	mov	w0, #0x7ffffffe            	// #2147483646
  4173bc:	add	w4, w4, w2
  4173c0:	mov	w2, #0xffff2800            	// #-55296
  4173c4:	add	w2, w4, w2
  4173c8:	cmp	w2, #0x7ff
  4173cc:	ccmp	w4, w0, #0x2, hi  // hi = pmore
  4173d0:	b.hi	4174c0 <nftw@plt+0x14940>  // b.pmore
  4173d4:	cmp	w4, #0x7f
  4173d8:	b.ls	4174ac <nftw@plt+0x1492c>  // b.plast
  4173dc:	add	x2, sp, #0x5e
  4173e0:	mov	x3, #0x1                   	// #1
  4173e4:	b	4173f0 <nftw@plt+0x14870>
  4173e8:	mov	x2, x6
  4173ec:	mov	x3, x0
  4173f0:	and	w0, w4, #0x3f
  4173f4:	lsr	w4, w4, #6
  4173f8:	orr	w0, w0, #0xffffff80
  4173fc:	sturb	w0, [x2, #-1]
  417400:	cmp	w4, #0x3e
  417404:	sub	x6, x2, #0x1
  417408:	add	x0, x3, #0x1
  41740c:	b.hi	4173e8 <nftw@plt+0x14868>  // b.pmore
  417410:	add	x5, x23, x0
  417414:	ldurb	w5, [x5, #-1]
  417418:	tst	w5, w4
  41741c:	b.ne	4173e8 <nftw@plt+0x14868>  // b.any
  417420:	adrp	x6, 45f000 <_obstack_memory_used@@Base+0x155a0>
  417424:	add	x6, x6, #0xcc8
  417428:	cmp	x0, x21
  41742c:	sub	x5, x2, #0x2
  417430:	ldrb	w3, [x6, x3]
  417434:	orr	w4, w4, w3
  417438:	sturb	w4, [x2, #-2]
  41743c:	b.hi	417514 <nftw@plt+0x14994>  // b.pmore
  417440:	add	x2, sp, #0x5e
  417444:	cmp	x5, x2
  417448:	b.cs	417478 <nftw@plt+0x148f8>  // b.hs, b.nlast
  41744c:	add	x3, sp, #0x5e
  417450:	mov	x2, #0x0                   	// #0
  417454:	sub	x3, x3, x5
  417458:	ldrb	w4, [x5, x2]
  41745c:	strb	w4, [x1, x2]
  417460:	add	x2, x2, #0x1
  417464:	cmp	x3, x2
  417468:	b.ne	417458 <nftw@plt+0x148d8>  // b.any
  41746c:	add	x2, sp, #0x5e
  417470:	sub	x5, x2, x5
  417474:	add	x1, x1, x5
  417478:	sub	x21, x21, x0
  41747c:	subs	x22, x22, #0x4
  417480:	b.ne	4174fc <nftw@plt+0x1497c>  // b.any
  417484:	ldr	x2, [x19, #8]
  417488:	ldr	x25, [sp, #64]
  41748c:	sub	x21, x2, x21
  417490:	mov	w0, #0x1                   	// #1
  417494:	str	x21, [x19, #16]
  417498:	ldp	x19, x20, [sp, #16]
  41749c:	ldp	x21, x22, [sp, #32]
  4174a0:	ldp	x23, x24, [sp, #48]
  4174a4:	ldp	x29, x30, [sp], #96
  4174a8:	ret
  4174ac:	strb	w4, [sp, #93]
  4174b0:	cbz	x21, 417514 <nftw@plt+0x14994>
  4174b4:	add	x5, sp, #0x5d
  4174b8:	mov	x0, #0x1                   	// #1
  4174bc:	b	41744c <nftw@plt+0x148cc>
  4174c0:	ldr	x25, [sp, #64]
  4174c4:	mov	w19, #0x54                  	// #84
  4174c8:	bl	402aa0 <__errno_location@plt>
  4174cc:	mov	x1, x0
  4174d0:	mov	w0, #0x0                   	// #0
  4174d4:	str	w19, [x1]
  4174d8:	b	417498 <nftw@plt+0x14918>
  4174dc:	ldrb	w2, [x20, #3]
  4174e0:	lsl	w4, w4, #16
  4174e4:	add	w4, w4, w2, lsl #24
  4174e8:	add	w2, w4, w0, lsl #8
  4174ec:	b	4173b4 <nftw@plt+0x14834>
  4174f0:	cbz	x22, 41748c <nftw@plt+0x1490c>
  4174f4:	mov	w19, #0x16                  	// #22
  4174f8:	b	4174c8 <nftw@plt+0x14948>
  4174fc:	add	x20, x20, #0x4
  417500:	cmp	x22, #0x3
  417504:	b.hi	417398 <nftw@plt+0x14818>  // b.pmore
  417508:	mov	w19, #0x16                  	// #22
  41750c:	ldr	x25, [sp, #64]
  417510:	b	4174c8 <nftw@plt+0x14948>
  417514:	ldp	x0, x1, [x19]
  417518:	add	x21, x21, #0x100
  41751c:	add	x1, x1, #0x100
  417520:	str	x1, [x19, #8]
  417524:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  417528:	str	x0, [x19]
  41752c:	ldr	x2, [x19, #8]
  417530:	sub	x2, x2, x21
  417534:	add	x1, x0, x2
  417538:	b	417398 <nftw@plt+0x14818>
  41753c:	nop
  417540:	stp	x29, x30, [sp, #-112]!
  417544:	cmp	x2, #0x1
  417548:	mov	x29, sp
  41754c:	stp	x21, x22, [sp, #32]
  417550:	mov	x21, x2
  417554:	mov	x22, x1
  417558:	stp	x23, x24, [sp, #48]
  41755c:	mov	x23, x0
  417560:	ldp	x0, x2, [x3]
  417564:	stp	x19, x20, [sp, #16]
  417568:	mov	x19, x3
  41756c:	ldr	x20, [x3, #16]
  417570:	add	x1, x0, x20
  417574:	sub	x20, x2, x20
  417578:	b.ls	41775c <nftw@plt+0x14bdc>  // b.plast
  41757c:	cmp	x23, #0x0
  417580:	adrp	x24, 45f000 <_obstack_memory_used@@Base+0x155a0>
  417584:	add	x24, x24, #0xbf8
  417588:	mov	x0, #0x2                   	// #2
  41758c:	add	x24, x24, #0xc0
  417590:	stp	x25, x26, [sp, #64]
  417594:	mov	x25, #0x3                   	// #3
  417598:	cset	x26, ne  // ne = any
  41759c:	csel	x25, x25, x0, ne  // ne = any
  4175a0:	str	x27, [sp, #80]
  4175a4:	cset	x27, eq  // eq = none
  4175a8:	ldrb	w0, [x22, x26]
  4175ac:	mov	w5, #0xffff2400            	// #-56320
  4175b0:	ldrb	w3, [x22, x27]
  4175b4:	add	w3, w0, w3, lsl #8
  4175b8:	add	w0, w3, w5
  4175bc:	cmp	w0, #0x3ff
  4175c0:	b.ls	4176f4 <nftw@plt+0x14b74>  // b.plast
  4175c4:	mov	w4, #0xffff2800            	// #-55296
  4175c8:	add	w0, w3, w4
  4175cc:	cmp	w0, #0x3ff
  4175d0:	b.hi	417714 <nftw@plt+0x14b94>  // b.pmore
  4175d4:	cmp	x21, #0x3
  4175d8:	b.ls	417784 <nftw@plt+0x14c04>  // b.plast
  4175dc:	cbz	x23, 417794 <nftw@plt+0x14c14>
  4175e0:	ldrb	w3, [x22, #2]
  4175e4:	lsl	w2, w3, #8
  4175e8:	ldrb	w3, [x22, x25]
  4175ec:	add	w3, w3, w2
  4175f0:	mov	w2, #0xffff2400            	// #-56320
  4175f4:	add	w2, w3, w2
  4175f8:	cmp	w2, #0x3ff
  4175fc:	b.hi	4176f4 <nftw@plt+0x14b74>  // b.pmore
  417600:	add	w3, w3, w0, lsl #10
  417604:	mov	w0, #0x2400                	// #9216
  417608:	add	w3, w3, w0
  41760c:	mov	w2, w3
  417610:	add	x0, sp, #0x6e
  417614:	mov	x6, #0x1                   	// #1
  417618:	b	417624 <nftw@plt+0x14aa4>
  41761c:	mov	x0, x7
  417620:	mov	x6, x4
  417624:	and	w4, w2, #0x3f
  417628:	lsr	w2, w2, #6
  41762c:	orr	w4, w4, #0xffffff80
  417630:	sturb	w4, [x0, #-1]
  417634:	cmp	w2, #0x3e
  417638:	sub	x7, x0, #0x1
  41763c:	add	x4, x6, #0x1
  417640:	b.hi	41761c <nftw@plt+0x14a9c>  // b.pmore
  417644:	add	x5, x24, x4
  417648:	ldurb	w5, [x5, #-1]
  41764c:	tst	w5, w2
  417650:	b.ne	41761c <nftw@plt+0x14a9c>  // b.any
  417654:	adrp	x7, 45f000 <_obstack_memory_used@@Base+0x155a0>
  417658:	add	x7, x7, #0xcc8
  41765c:	cmp	x4, x20
  417660:	sub	x5, x0, #0x2
  417664:	ldrb	w6, [x7, x6]
  417668:	orr	w2, w2, w6
  41766c:	sturb	w2, [x0, #-2]
  417670:	b.hi	417734 <nftw@plt+0x14bb4>  // b.pmore
  417674:	add	x0, sp, #0x6e
  417678:	cmp	x5, x0
  41767c:	b.cs	4176b0 <nftw@plt+0x14b30>  // b.hs, b.nlast
  417680:	add	x2, sp, #0x6e
  417684:	mov	x0, #0x0                   	// #0
  417688:	sub	x2, x2, x5
  41768c:	nop
  417690:	ldrb	w6, [x5, x0]
  417694:	strb	w6, [x1, x0]
  417698:	add	x0, x0, #0x1
  41769c:	cmp	x2, x0
  4176a0:	b.ne	417690 <nftw@plt+0x14b10>  // b.any
  4176a4:	add	x0, sp, #0x6e
  4176a8:	sub	x5, x0, x5
  4176ac:	add	x1, x1, x5
  4176b0:	mov	w0, #0xffff                	// #65535
  4176b4:	sub	x20, x20, x4
  4176b8:	cmp	w3, w0
  4176bc:	b.hi	417768 <nftw@plt+0x14be8>  // b.pmore
  4176c0:	subs	x21, x21, #0x2
  4176c4:	b.ne	417778 <nftw@plt+0x14bf8>  // b.any
  4176c8:	ldp	x25, x26, [sp, #64]
  4176cc:	ldr	x2, [x19, #8]
  4176d0:	ldr	x27, [sp, #80]
  4176d4:	sub	x20, x2, x20
  4176d8:	mov	w0, #0x1                   	// #1
  4176dc:	str	x20, [x19, #16]
  4176e0:	ldp	x19, x20, [sp, #16]
  4176e4:	ldp	x21, x22, [sp, #32]
  4176e8:	ldp	x23, x24, [sp, #48]
  4176ec:	ldp	x29, x30, [sp], #112
  4176f0:	ret
  4176f4:	ldp	x25, x26, [sp, #64]
  4176f8:	mov	w19, #0x54                  	// #84
  4176fc:	ldr	x27, [sp, #80]
  417700:	bl	402aa0 <__errno_location@plt>
  417704:	mov	x1, x0
  417708:	mov	w0, #0x0                   	// #0
  41770c:	str	w19, [x1]
  417710:	b	4176e0 <nftw@plt+0x14b60>
  417714:	cmp	w3, #0x7f
  417718:	and	w0, w3, #0xff
  41771c:	b.hi	41760c <nftw@plt+0x14a8c>  // b.pmore
  417720:	strb	w0, [sp, #109]
  417724:	cbz	x20, 417734 <nftw@plt+0x14bb4>
  417728:	add	x5, sp, #0x6d
  41772c:	mov	x4, #0x1                   	// #1
  417730:	b	417680 <nftw@plt+0x14b00>
  417734:	ldp	x0, x1, [x19]
  417738:	add	x20, x20, #0x100
  41773c:	add	x1, x1, #0x100
  417740:	str	x1, [x19, #8]
  417744:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  417748:	str	x0, [x19]
  41774c:	ldr	x2, [x19, #8]
  417750:	sub	x2, x2, x20
  417754:	add	x1, x0, x2
  417758:	b	4175a8 <nftw@plt+0x14a28>
  41775c:	cbz	x21, 4176d4 <nftw@plt+0x14b54>
  417760:	mov	w19, #0x16                  	// #22
  417764:	b	417700 <nftw@plt+0x14b80>
  417768:	subs	x21, x21, #0x4
  41776c:	b.eq	4176c8 <nftw@plt+0x14b48>  // b.none
  417770:	add	x22, x22, #0x4
  417774:	b	41777c <nftw@plt+0x14bfc>
  417778:	add	x22, x22, #0x2
  41777c:	cmp	x21, #0x1
  417780:	b.hi	4175a8 <nftw@plt+0x14a28>  // b.pmore
  417784:	mov	w19, #0x16                  	// #22
  417788:	ldp	x25, x26, [sp, #64]
  41778c:	ldr	x27, [sp, #80]
  417790:	b	417700 <nftw@plt+0x14b80>
  417794:	ldrb	w3, [x22, #3]
  417798:	lsl	w2, w3, #8
  41779c:	b	4175e8 <nftw@plt+0x14a68>
  4177a0:	stp	x29, x30, [sp, #-96]!
  4177a4:	mov	x29, sp
  4177a8:	stp	x19, x20, [sp, #16]
  4177ac:	mov	x19, x3
  4177b0:	ldr	x3, [x3]
  4177b4:	ldp	x5, x4, [x19, #8]
  4177b8:	add	x3, x3, x4
  4177bc:	sub	x20, x5, x4
  4177c0:	cbz	x2, 417984 <nftw@plt+0x14e04>
  4177c4:	cmp	x0, #0x0
  4177c8:	stp	x22, x23, [sp, #32]
  4177cc:	adrp	x22, 45f000 <_obstack_memory_used@@Base+0x155a0>
  4177d0:	add	x22, x22, #0xbf8
  4177d4:	mov	x23, x1
  4177d8:	mov	x1, #0x2                   	// #2
  4177dc:	stp	x24, x25, [sp, #48]
  4177e0:	mov	x24, x0
  4177e4:	add	x25, x22, #0xc8
  4177e8:	mov	x0, #0x3                   	// #3
  4177ec:	str	x26, [sp, #64]
  4177f0:	csel	x26, x1, x0, ne  // ne = any
  4177f4:	ldrb	w4, [x23]
  4177f8:	cmp	w4, #0x7f
  4177fc:	b.ls	417940 <nftw@plt+0x14dc0>  // b.plast
  417800:	mov	w6, #0x1f                  	// #31
  417804:	bic	w0, w4, w6
  417808:	mov	w7, #0xc0                  	// #192
  41780c:	add	x1, x22, #0xd0
  417810:	cmp	w0, w7
  417814:	mov	x5, #0x2                   	// #2
  417818:	b.eq	41783c <nftw@plt+0x14cbc>  // b.none
  41781c:	cmp	x5, #0x6
  417820:	b.eq	417998 <nftw@plt+0x14e18>  // b.none
  417824:	ldrb	w6, [x5, x25]
  417828:	ldrb	w7, [x5, x1]
  41782c:	add	x5, x5, #0x1
  417830:	bic	w0, w4, w6
  417834:	cmp	w0, w7
  417838:	b.ne	41781c <nftw@plt+0x14c9c>  // b.any
  41783c:	cmp	x2, x5
  417840:	b.cc	417a08 <nftw@plt+0x14e88>  // b.lo, b.ul, b.last
  417844:	and	w4, w6, w4
  417848:	add	x7, x23, #0x1
  41784c:	add	x8, x23, x5
  417850:	ldrb	w6, [x7], #1
  417854:	and	w0, w6, #0xc0
  417858:	and	w6, w6, #0x3f
  41785c:	cmp	w0, #0x80
  417860:	b.ne	417998 <nftw@plt+0x14e18>  // b.any
  417864:	add	w4, w6, w4, lsl #6
  417868:	cmp	x7, x8
  41786c:	b.ne	417850 <nftw@plt+0x14cd0>  // b.any
  417870:	sub	w1, w4, #0x80
  417874:	mov	w0, #0x7fffff80            	// #2147483520
  417878:	cmp	w1, w0
  41787c:	b.cs	417998 <nftw@plt+0x14e18>  // b.hs, b.nlast
  417880:	cmp	w4, #0x7ff
  417884:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  417888:	b.hi	417998 <nftw@plt+0x14e18>  // b.pmore
  41788c:	mov	w0, #0xffff                	// #65535
  417890:	cmp	w4, w0
  417894:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  417898:	b.hi	417998 <nftw@plt+0x14e18>  // b.pmore
  41789c:	mov	w1, #0x1fffff              	// #2097151
  4178a0:	cmp	w4, w1
  4178a4:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  4178a8:	b.hi	417998 <nftw@plt+0x14e18>  // b.pmore
  4178ac:	mov	w1, #0x3ffffff             	// #67108863
  4178b0:	cmp	w4, w1
  4178b4:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  4178b8:	b.hi	417998 <nftw@plt+0x14e18>  // b.pmore
  4178bc:	mov	w6, #0xffff2800            	// #-55296
  4178c0:	add	w1, w4, w6
  4178c4:	cmp	w1, #0x7ff
  4178c8:	b.ls	417998 <nftw@plt+0x14e18>  // b.plast
  4178cc:	mov	w1, #0x10ffff              	// #1114111
  4178d0:	sub	x5, x2, x5
  4178d4:	cmp	w4, w1
  4178d8:	b.hi	417998 <nftw@plt+0x14e18>  // b.pmore
  4178dc:	cmp	w4, w0
  4178e0:	b.ls	417948 <nftw@plt+0x14dc8>  // b.plast
  4178e4:	cmp	x20, #0x3
  4178e8:	b.ls	4179cc <nftw@plt+0x14e4c>  // b.plast
  4178ec:	and	w0, w4, #0x3ff
  4178f0:	mov	w1, #0xdc00                	// #56320
  4178f4:	sub	w4, w4, #0x10, lsl #12
  4178f8:	add	w1, w0, w1
  4178fc:	mov	w2, #0xd800                	// #55296
  417900:	and	w0, w0, #0xff
  417904:	add	w4, w2, w4, lsr #10
  417908:	lsr	w1, w1, #8
  41790c:	cbz	x24, 4179fc <nftw@plt+0x14e7c>
  417910:	rev16	w4, w4
  417914:	strh	w4, [x3]
  417918:	strb	w0, [x3, #3]
  41791c:	strb	w1, [x3, x26]
  417920:	sub	x20, x20, #0x4
  417924:	cbz	x5, 417970 <nftw@plt+0x14df0>
  417928:	mov	x23, x8
  41792c:	add	x3, x3, #0x4
  417930:	mov	x2, x5
  417934:	ldrb	w4, [x23]
  417938:	cmp	w4, #0x7f
  41793c:	b.hi	417800 <nftw@plt+0x14c80>  // b.pmore
  417940:	sub	x5, x2, #0x1
  417944:	add	x8, x23, #0x1
  417948:	cmp	x20, #0x1
  41794c:	b.ls	4179cc <nftw@plt+0x14e4c>  // b.plast
  417950:	cmp	x24, #0x0
  417954:	lsr	w1, w4, #8
  417958:	cset	w2, ne  // ne = any
  41795c:	cset	w0, eq  // eq = none
  417960:	sub	x20, x20, #0x2
  417964:	strb	w4, [x3, w2, uxtw]
  417968:	strb	w1, [x3, w0, uxtw]
  41796c:	cbnz	x5, 4179bc <nftw@plt+0x14e3c>
  417970:	ldr	x4, [x19, #8]
  417974:	ldp	x22, x23, [sp, #32]
  417978:	sub	x4, x4, x20
  41797c:	ldp	x24, x25, [sp, #48]
  417980:	ldr	x26, [sp, #64]
  417984:	mov	w0, #0x1                   	// #1
  417988:	str	x4, [x19, #16]
  41798c:	ldp	x19, x20, [sp, #16]
  417990:	ldp	x29, x30, [sp], #96
  417994:	ret
  417998:	mov	w19, #0x54                  	// #84
  41799c:	bl	402aa0 <__errno_location@plt>
  4179a0:	mov	x1, x0
  4179a4:	mov	w0, #0x0                   	// #0
  4179a8:	ldp	x22, x23, [sp, #32]
  4179ac:	ldp	x24, x25, [sp, #48]
  4179b0:	ldr	x26, [sp, #64]
  4179b4:	str	w19, [x1]
  4179b8:	b	41798c <nftw@plt+0x14e0c>
  4179bc:	add	x3, x3, #0x2
  4179c0:	mov	x2, x5
  4179c4:	mov	x23, x8
  4179c8:	b	4177f4 <nftw@plt+0x14c74>
  4179cc:	ldp	x0, x1, [x19]
  4179d0:	str	x2, [sp, #88]
  4179d4:	add	x20, x20, #0x100
  4179d8:	add	x1, x1, #0x100
  4179dc:	str	x1, [x19, #8]
  4179e0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4179e4:	str	x0, [x19]
  4179e8:	ldr	x3, [x19, #8]
  4179ec:	ldr	x2, [sp, #88]
  4179f0:	sub	x3, x3, x20
  4179f4:	add	x3, x0, x3
  4179f8:	b	4177f4 <nftw@plt+0x14c74>
  4179fc:	strh	w4, [x3]
  417a00:	strb	w0, [x3, #2]
  417a04:	b	41791c <nftw@plt+0x14d9c>
  417a08:	mov	w19, #0x16                  	// #22
  417a0c:	b	41799c <nftw@plt+0x14e1c>
  417a10:	stp	x29, x30, [sp, #-80]!
  417a14:	mov	x29, sp
  417a18:	ldp	x4, x5, [x3]
  417a1c:	stp	x19, x20, [sp, #16]
  417a20:	mov	x19, x3
  417a24:	ldr	x3, [x3, #16]
  417a28:	stp	x23, x24, [sp, #48]
  417a2c:	adrp	x24, 45f000 <_obstack_memory_used@@Base+0x155a0>
  417a30:	add	x24, x24, #0xbf8
  417a34:	mov	x23, x1
  417a38:	add	x4, x4, x3
  417a3c:	sub	x20, x5, x3
  417a40:	stp	x21, x22, [sp, #32]
  417a44:	mov	x21, x2
  417a48:	add	x22, x24, #0xc8
  417a4c:	str	x25, [sp, #64]
  417a50:	mov	x25, x0
  417a54:	cmp	x20, #0x3
  417a58:	b.ls	417b48 <nftw@plt+0x14fc8>  // b.plast
  417a5c:	cbz	x21, 417b74 <nftw@plt+0x14ff4>
  417a60:	ldrb	w6, [x23]
  417a64:	cmp	w6, #0x7f
  417a68:	mov	w3, w6
  417a6c:	b.ls	417b7c <nftw@plt+0x14ffc>  // b.plast
  417a70:	mov	w3, #0x1f                  	// #31
  417a74:	bic	w0, w6, w3
  417a78:	mov	w7, #0xc0                  	// #192
  417a7c:	add	x1, x24, #0xd0
  417a80:	cmp	w0, w7
  417a84:	mov	x5, #0x2                   	// #2
  417a88:	b.eq	417aac <nftw@plt+0x14f2c>  // b.none
  417a8c:	cmp	x5, #0x6
  417a90:	b.eq	417bb8 <nftw@plt+0x15038>  // b.none
  417a94:	ldrb	w3, [x5, x22]
  417a98:	ldrb	w7, [x5, x1]
  417a9c:	add	x5, x5, #0x1
  417aa0:	bic	w0, w6, w3
  417aa4:	cmp	w0, w7
  417aa8:	b.ne	417a8c <nftw@plt+0x14f0c>  // b.any
  417aac:	cmp	x21, x5
  417ab0:	b.cc	417c0c <nftw@plt+0x1508c>  // b.lo, b.ul, b.last
  417ab4:	add	x7, x23, #0x1
  417ab8:	and	w3, w6, w3
  417abc:	add	x23, x23, x5
  417ac0:	ldrb	w6, [x7], #1
  417ac4:	and	w0, w6, #0xc0
  417ac8:	and	w6, w6, #0x3f
  417acc:	cmp	w0, #0x80
  417ad0:	b.ne	417bb8 <nftw@plt+0x15038>  // b.any
  417ad4:	add	w3, w6, w3, lsl #6
  417ad8:	cmp	x7, x23
  417adc:	b.ne	417ac0 <nftw@plt+0x14f40>  // b.any
  417ae0:	sub	w1, w3, #0x80
  417ae4:	mov	w0, #0x7fffff80            	// #2147483520
  417ae8:	cmp	w1, w0
  417aec:	b.cs	417bb8 <nftw@plt+0x15038>  // b.hs, b.nlast
  417af0:	cmp	w3, #0x7ff
  417af4:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  417af8:	b.hi	417bb8 <nftw@plt+0x15038>  // b.pmore
  417afc:	mov	w0, #0xffff                	// #65535
  417b00:	cmp	w3, w0
  417b04:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  417b08:	b.hi	417bb8 <nftw@plt+0x15038>  // b.pmore
  417b0c:	mov	w0, #0x1fffff              	// #2097151
  417b10:	cmp	w3, w0
  417b14:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  417b18:	b.hi	417bb8 <nftw@plt+0x15038>  // b.pmore
  417b1c:	mov	w0, #0x3ffffff             	// #67108863
  417b20:	cmp	w3, w0
  417b24:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  417b28:	b.hi	417bb8 <nftw@plt+0x15038>  // b.pmore
  417b2c:	mov	w0, #0xffff2800            	// #-55296
  417b30:	add	w0, w3, w0
  417b34:	cmp	w0, #0x7ff
  417b38:	b.ls	417bb8 <nftw@plt+0x15038>  // b.plast
  417b3c:	sub	x21, x21, x5
  417b40:	and	w6, w3, #0xff
  417b44:	b	417b84 <nftw@plt+0x15004>
  417b48:	ldr	x3, [x19, #8]
  417b4c:	cbnz	x21, 417be4 <nftw@plt+0x15064>
  417b50:	sub	x3, x3, x20
  417b54:	mov	w0, #0x1                   	// #1
  417b58:	str	x3, [x19, #16]
  417b5c:	ldp	x19, x20, [sp, #16]
  417b60:	ldp	x21, x22, [sp, #32]
  417b64:	ldp	x23, x24, [sp, #48]
  417b68:	ldr	x25, [sp, #64]
  417b6c:	ldp	x29, x30, [sp], #80
  417b70:	ret
  417b74:	ldr	x3, [x19, #8]
  417b78:	b	417b50 <nftw@plt+0x14fd0>
  417b7c:	sub	x21, x21, #0x1
  417b80:	add	x23, x23, #0x1
  417b84:	ubfx	x0, x3, #16, #8
  417b88:	lsr	w2, w3, #24
  417b8c:	ubfx	x3, x3, #8, #8
  417b90:	cbz	x25, 417bd0 <nftw@plt+0x15050>
  417b94:	mov	x1, x4
  417b98:	strb	w0, [x4, #1]
  417b9c:	strb	w3, [x4, #2]
  417ba0:	strb	w6, [x4, #3]
  417ba4:	strb	w2, [x1]
  417ba8:	sub	x20, x20, #0x4
  417bac:	cbz	x21, 417b74 <nftw@plt+0x14ff4>
  417bb0:	add	x4, x4, #0x4
  417bb4:	b	417a54 <nftw@plt+0x14ed4>
  417bb8:	mov	w19, #0x54                  	// #84
  417bbc:	bl	402aa0 <__errno_location@plt>
  417bc0:	mov	x1, x0
  417bc4:	mov	w0, #0x0                   	// #0
  417bc8:	str	w19, [x1]
  417bcc:	b	417b5c <nftw@plt+0x14fdc>
  417bd0:	add	x1, x4, #0x3
  417bd4:	strb	w6, [x4]
  417bd8:	strb	w3, [x4, #1]
  417bdc:	strb	w0, [x4, #2]
  417be0:	b	417ba4 <nftw@plt+0x15024>
  417be4:	ldr	x0, [x19]
  417be8:	add	x1, x3, #0x100
  417bec:	str	x1, [x19, #8]
  417bf0:	add	x20, x20, #0x100
  417bf4:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  417bf8:	str	x0, [x19]
  417bfc:	ldr	x4, [x19, #8]
  417c00:	sub	x4, x4, x20
  417c04:	add	x4, x0, x4
  417c08:	b	417a54 <nftw@plt+0x14ed4>
  417c0c:	mov	w19, #0x16                  	// #22
  417c10:	b	417bbc <nftw@plt+0x1503c>
  417c14:	nop
  417c18:	stp	x29, x30, [sp, #-96]!
  417c1c:	mov	x29, sp
  417c20:	stp	x19, x20, [sp, #16]
  417c24:	mov	x19, x0
  417c28:	stp	x23, x24, [sp, #48]
  417c2c:	ldrb	w24, [x0, #1242]
  417c30:	ldr	x0, [x0, #1232]
  417c34:	stp	x21, x22, [sp, #32]
  417c38:	cmp	x0, #0x1f
  417c3c:	ldr	x1, [x19, #1168]
  417c40:	ldr	x21, [x19, #1176]
  417c44:	b.ls	417c60 <nftw@plt+0x150e0>  // b.plast
  417c48:	cbz	w24, 417da8 <nftw@plt+0x15228>
  417c4c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417c50:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x125a0>
  417c54:	add	x0, x0, #0x518
  417c58:	add	x20, x20, #0x618
  417c5c:	b	417c74 <nftw@plt+0x150f4>
  417c60:	cmp	x0, #0xf
  417c64:	b.hi	417d90 <nftw@plt+0x15210>  // b.pmore
  417c68:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x125a0>
  417c6c:	add	x20, x20, #0x618
  417c70:	mov	x0, x20
  417c74:	cmp	x1, #0x0
  417c78:	add	x23, x19, #0x208
  417c7c:	csel	x1, x1, x20, ne  // ne = any
  417c80:	cmp	x21, #0x0
  417c84:	csel	x21, x21, x0, ne  // ne = any
  417c88:	add	x8, sp, #0x40
  417c8c:	mov	x2, x20
  417c90:	mov	x0, x19
  417c94:	bl	416da0 <nftw@plt+0x14220>
  417c98:	add	x22, x19, #0x220
  417c9c:	ldp	x2, x3, [sp, #64]
  417ca0:	stp	x2, x3, [x23]
  417ca4:	add	x8, sp, #0x40
  417ca8:	ldr	x1, [sp, #80]
  417cac:	str	x1, [x23, #16]
  417cb0:	ldr	x0, [x19, #1216]
  417cb4:	str	w0, [x19, #536]
  417cb8:	mov	x2, x20
  417cbc:	mov	x1, x20
  417cc0:	mov	x0, x19
  417cc4:	bl	416da0 <nftw@plt+0x14220>
  417cc8:	ldp	x2, x3, [sp, #64]
  417ccc:	stp	x2, x3, [x22]
  417cd0:	ldr	x1, [sp, #80]
  417cd4:	str	x1, [x22, #16]
  417cd8:	ldr	x0, [x19, #1216]
  417cdc:	str	w0, [x19, #560]
  417ce0:	cbz	w24, 417dbc <nftw@plt+0x1523c>
  417ce4:	add	x22, x19, #0x238
  417ce8:	mov	x2, x20
  417cec:	add	x8, sp, #0x40
  417cf0:	mov	x0, x19
  417cf4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417cf8:	add	x1, x1, #0x538
  417cfc:	bl	416da0 <nftw@plt+0x14220>
  417d00:	ldp	x4, x5, [sp, #64]
  417d04:	stp	x4, x5, [x22]
  417d08:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417d0c:	ldr	x3, [sp, #80]
  417d10:	add	x1, x1, #0x518
  417d14:	str	x3, [x22, #16]
  417d18:	mov	w2, #0x10                  	// #16
  417d1c:	str	w2, [x19, #584]
  417d20:	add	x22, x19, #0x250
  417d24:	add	x8, sp, #0x40
  417d28:	mov	x2, x20
  417d2c:	mov	x0, x19
  417d30:	bl	416da0 <nftw@plt+0x14220>
  417d34:	ldp	x0, x1, [sp, #64]
  417d38:	stp	x0, x1, [x22]
  417d3c:	add	x22, x19, #0x268
  417d40:	ldr	x1, [sp, #80]
  417d44:	str	x1, [x19, #608]
  417d48:	mov	w0, #0x20                  	// #32
  417d4c:	str	w0, [x19, #608]
  417d50:	add	x8, sp, #0x40
  417d54:	mov	x2, x20
  417d58:	mov	x1, x21
  417d5c:	mov	x0, x19
  417d60:	bl	416da0 <nftw@plt+0x14220>
  417d64:	ldp	x0, x1, [sp, #64]
  417d68:	stp	x0, x1, [x22]
  417d6c:	ldr	x0, [sp, #80]
  417d70:	ldp	x21, x22, [sp, #32]
  417d74:	ldp	x23, x24, [sp, #48]
  417d78:	str	x0, [x19, #632]
  417d7c:	ldr	x0, [x19, #1232]
  417d80:	str	w0, [x19, #632]
  417d84:	ldp	x19, x20, [sp, #16]
  417d88:	ldp	x29, x30, [sp], #96
  417d8c:	ret
  417d90:	cbz	w24, 417dfc <nftw@plt+0x1527c>
  417d94:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417d98:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x125a0>
  417d9c:	add	x0, x0, #0x538
  417da0:	add	x20, x20, #0x618
  417da4:	b	417c74 <nftw@plt+0x150f4>
  417da8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417dac:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x125a0>
  417db0:	add	x0, x0, #0x528
  417db4:	add	x20, x20, #0x618
  417db8:	b	417c74 <nftw@plt+0x150f4>
  417dbc:	add	x22, x19, #0x238
  417dc0:	mov	x2, x20
  417dc4:	add	x8, sp, #0x40
  417dc8:	mov	x0, x19
  417dcc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417dd0:	add	x1, x1, #0x548
  417dd4:	bl	416da0 <nftw@plt+0x14220>
  417dd8:	ldp	x4, x5, [sp, #64]
  417ddc:	stp	x4, x5, [x22]
  417de0:	mov	w2, #0x10                  	// #16
  417de4:	ldr	x3, [sp, #80]
  417de8:	str	x3, [x22, #16]
  417dec:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417df0:	add	x1, x1, #0x528
  417df4:	str	w2, [x19, #584]
  417df8:	b	417d20 <nftw@plt+0x151a0>
  417dfc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417e00:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x125a0>
  417e04:	add	x0, x0, #0x548
  417e08:	add	x20, x20, #0x618
  417e0c:	b	417c74 <nftw@plt+0x150f4>
  417e10:	stp	x29, x30, [sp, #-32]!
  417e14:	mov	x29, sp
  417e18:	stp	x19, x20, [sp, #16]
  417e1c:	mov	x19, x0
  417e20:	adrp	x20, 416000 <nftw@plt+0x13480>
  417e24:	ldr	x0, [x0, #520]
  417e28:	add	x20, x20, #0xf58
  417e2c:	cmp	x0, x20
  417e30:	b.eq	417e70 <nftw@plt+0x152f0>  // b.none
  417e34:	ldr	x0, [x19, #544]
  417e38:	cmp	x0, x20
  417e3c:	b.eq	417e88 <nftw@plt+0x15308>  // b.none
  417e40:	ldr	x0, [x19, #568]
  417e44:	cmp	x0, x20
  417e48:	b.eq	417ea0 <nftw@plt+0x15320>  // b.none
  417e4c:	ldr	x0, [x19, #592]
  417e50:	cmp	x0, x20
  417e54:	b.eq	417eb8 <nftw@plt+0x15338>  // b.none
  417e58:	ldr	x0, [x19, #616]
  417e5c:	cmp	x0, x20
  417e60:	b.eq	417ecc <nftw@plt+0x1534c>  // b.none
  417e64:	ldp	x19, x20, [sp, #16]
  417e68:	ldp	x29, x30, [sp], #32
  417e6c:	ret
  417e70:	ldr	x0, [x19, #528]
  417e74:	bl	402560 <iconv_close@plt>
  417e78:	ldr	x0, [x19, #544]
  417e7c:	cmp	x0, x20
  417e80:	b.ne	417e40 <nftw@plt+0x152c0>  // b.any
  417e84:	nop
  417e88:	ldr	x0, [x19, #552]
  417e8c:	bl	402560 <iconv_close@plt>
  417e90:	ldr	x0, [x19, #568]
  417e94:	cmp	x0, x20
  417e98:	b.ne	417e4c <nftw@plt+0x152cc>  // b.any
  417e9c:	nop
  417ea0:	ldr	x0, [x19, #576]
  417ea4:	bl	402560 <iconv_close@plt>
  417ea8:	ldr	x0, [x19, #592]
  417eac:	cmp	x0, x20
  417eb0:	b.ne	417e58 <nftw@plt+0x152d8>  // b.any
  417eb4:	nop
  417eb8:	ldr	x0, [x19, #600]
  417ebc:	bl	402560 <iconv_close@plt>
  417ec0:	ldr	x0, [x19, #616]
  417ec4:	cmp	x0, x20
  417ec8:	b.ne	417e64 <nftw@plt+0x152e4>  // b.any
  417ecc:	ldr	x0, [x19, #624]
  417ed0:	ldp	x19, x20, [sp, #16]
  417ed4:	ldp	x29, x30, [sp], #32
  417ed8:	b	402560 <iconv_close@plt>
  417edc:	nop
  417ee0:	stp	x29, x30, [sp, #-80]!
  417ee4:	cmp	w1, #0x7e
  417ee8:	mov	x29, sp
  417eec:	stp	x19, x20, [sp, #16]
  417ef0:	mov	w19, w1
  417ef4:	b.hi	417f98 <nftw@plt+0x15418>  // b.pmore
  417ef8:	mov	x20, x0
  417efc:	str	x21, [sp, #32]
  417f00:	mov	x21, #0x1                   	// #1
  417f04:	mov	x0, x21
  417f08:	strb	w1, [sp, #48]
  417f0c:	str	x21, [sp, #64]
  417f10:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  417f14:	str	x0, [sp, #56]
  417f18:	mov	x2, x21
  417f1c:	ldr	x4, [x20, #520]
  417f20:	str	xzr, [sp, #72]
  417f24:	ldr	x0, [x20, #528]
  417f28:	add	x3, sp, #0x38
  417f2c:	add	x1, sp, #0x30
  417f30:	blr	x4
  417f34:	tst	w0, #0xff
  417f38:	b.eq	417fc0 <nftw@plt+0x15440>  // b.none
  417f3c:	ldr	x0, [sp, #72]
  417f40:	cmp	x0, #0x1
  417f44:	b.ne	417f68 <nftw@plt+0x153e8>  // b.any
  417f48:	ldr	x0, [sp, #56]
  417f4c:	ldrb	w19, [x0]
  417f50:	bl	402910 <free@plt>
  417f54:	ldr	x21, [sp, #32]
  417f58:	mov	w0, w19
  417f5c:	ldp	x19, x20, [sp, #16]
  417f60:	ldp	x29, x30, [sp], #80
  417f64:	ret
  417f68:	mov	w3, w19
  417f6c:	mov	x0, x20
  417f70:	mov	w1, #0x4                   	// #4
  417f74:	mov	w19, #0x0                   	// #0
  417f78:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417f7c:	add	x2, x2, #0x5c0
  417f80:	bl	41f298 <nftw@plt+0x1c718>
  417f84:	mov	w0, w19
  417f88:	ldp	x19, x20, [sp, #16]
  417f8c:	ldr	x21, [sp, #32]
  417f90:	ldp	x29, x30, [sp], #80
  417f94:	ret
  417f98:	mov	w3, w1
  417f9c:	mov	w19, #0x0                   	// #0
  417fa0:	mov	w1, #0x4                   	// #4
  417fa4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417fa8:	add	x2, x2, #0x558
  417fac:	bl	41f298 <nftw@plt+0x1c718>
  417fb0:	mov	w0, w19
  417fb4:	ldp	x19, x20, [sp, #16]
  417fb8:	ldp	x29, x30, [sp], #80
  417fbc:	ret
  417fc0:	mov	x0, x20
  417fc4:	mov	w1, #0x4                   	// #4
  417fc8:	mov	w19, #0x0                   	// #0
  417fcc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  417fd0:	add	x2, x2, #0x598
  417fd4:	bl	41f770 <nftw@plt+0x1cbf0>
  417fd8:	mov	w0, w19
  417fdc:	ldp	x19, x20, [sp, #16]
  417fe0:	ldr	x21, [sp, #32]
  417fe4:	ldp	x29, x30, [sp], #80
  417fe8:	ret
  417fec:	nop
  417ff0:	stp	x29, x30, [sp, #-32]!
  417ff4:	mov	x1, #0x800000000           	// #34359738368
  417ff8:	mov	x29, sp
  417ffc:	str	x19, [sp, #16]
  418000:	mov	x19, x0
  418004:	mov	x0, #0x40                  	// #64
  418008:	stp	xzr, x1, [x19]
  41800c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  418010:	str	x0, [x19]
  418014:	ldr	x19, [sp, #16]
  418018:	ldp	x29, x30, [sp], #32
  41801c:	ret
  418020:	ldr	x0, [x0]
  418024:	b	402910 <free@plt>
  418028:	stp	x29, x30, [sp, #-32]!
  41802c:	mov	x29, sp
  418030:	stp	x19, x20, [sp, #16]
  418034:	mov	x20, x1
  418038:	mov	x19, x0
  41803c:	ldp	w2, w1, [x0, #8]
  418040:	ldr	x0, [x0]
  418044:	cmp	w2, w1
  418048:	b.ge	418064 <nftw@plt+0x154e4>  // b.tcont
  41804c:	add	w1, w2, #0x1
  418050:	str	w1, [x19, #8]
  418054:	str	x20, [x0, w2, sxtw #3]
  418058:	ldp	x19, x20, [sp, #16]
  41805c:	ldp	x29, x30, [sp], #32
  418060:	ret
  418064:	lsl	w1, w1, #1
  418068:	str	w1, [x19, #12]
  41806c:	sbfiz	x1, x1, #3, #32
  418070:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  418074:	ldr	w2, [x19, #8]
  418078:	str	x0, [x19]
  41807c:	add	w1, w2, #0x1
  418080:	str	w1, [x19, #8]
  418084:	str	x20, [x0, w2, sxtw #3]
  418088:	ldp	x19, x20, [sp, #16]
  41808c:	ldp	x29, x30, [sp], #32
  418090:	ret
  418094:	nop
  418098:	cmp	w1, #0x0
  41809c:	b.le	418118 <nftw@plt+0x15598>
  4180a0:	stp	x29, x30, [sp, #-64]!
  4180a4:	mov	x29, sp
  4180a8:	stp	x21, x22, [sp, #32]
  4180ac:	mov	w22, w1
  4180b0:	mov	x21, x2
  4180b4:	stp	x23, x24, [sp, #48]
  4180b8:	mov	x23, x0
  4180bc:	mov	w24, #0x60000000            	// #1610612736
  4180c0:	stp	x19, x20, [sp, #16]
  4180c4:	mov	w19, #0x0                   	// #0
  4180c8:	ldr	w3, [x21]
  4180cc:	mov	x0, x23
  4180d0:	add	w19, w19, #0x1
  4180d4:	mov	x4, x3
  4180d8:	cmp	w3, w24
  4180dc:	b.hi	4180ec <nftw@plt+0x1556c>  // b.pmore
  4180e0:	ldr	w2, [x21, #4]
  4180e4:	add	w3, w2, w3
  4180e8:	str	w3, [x21]
  4180ec:	bfxil	x20, x4, #0, #32
  4180f0:	bfi	x20, x4, #32, #32
  4180f4:	mov	x1, x20
  4180f8:	bl	418028 <nftw@plt+0x154a8>
  4180fc:	cmp	w22, w19
  418100:	b.ne	4180c8 <nftw@plt+0x15548>  // b.any
  418104:	ldp	x19, x20, [sp, #16]
  418108:	ldp	x21, x22, [sp, #32]
  41810c:	ldp	x23, x24, [sp, #48]
  418110:	ldp	x29, x30, [sp], #64
  418114:	ret
  418118:	ret
  41811c:	nop
  418120:	stp	x29, x30, [sp, #-112]!
  418124:	mov	x29, sp
  418128:	stp	x19, x20, [sp, #16]
  41812c:	mov	x20, x5
  418130:	stp	x21, x22, [sp, #32]
  418134:	mov	x21, x2
  418138:	stp	x23, x24, [sp, #48]
  41813c:	mov	x23, x0
  418140:	mov	w24, w3
  418144:	stp	x25, x26, [sp, #64]
  418148:	mov	x26, x1
  41814c:	stp	x27, x28, [sp, #80]
  418150:	mov	x28, x6
  418154:	mov	x27, x7
  418158:	ldrb	w1, [x0, #1120]
  41815c:	ldr	x19, [x26]
  418160:	str	x4, [sp, #104]
  418164:	sub	x25, x19, #0x2
  418168:	cbnz	w1, 418180 <nftw@plt+0x15600>
  41816c:	ldrb	w1, [x0, #1152]
  418170:	cbz	w1, 4183e4 <nftw@plt+0x15864>
  418174:	ldrsb	w1, [x0, #1198]
  418178:	cmp	w1, #0x0
  41817c:	b.gt	4183f8 <nftw@plt+0x15878>
  418180:	ldrb	w0, [x23, #1138]
  418184:	ldurb	w3, [x19, #-1]
  418188:	cmp	w0, #0x0
  41818c:	ccmp	w24, #0x0, #0x0, ne  // ne = any
  418190:	b.eq	418458 <nftw@plt+0x158d8>  // b.none
  418194:	cmp	w3, #0x75
  418198:	mov	w0, #0x4                   	// #4
  41819c:	b.eq	4181ac <nftw@plt+0x1562c>  // b.none
  4181a0:	cmp	w3, #0x55
  4181a4:	mov	w0, #0x8                   	// #8
  4181a8:	b.ne	418240 <nftw@plt+0x156c0>  // b.any
  4181ac:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4181b0:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4181b4:	add	x8, x8, #0x248
  4181b8:	add	x9, x9, #0xf30
  4181bc:	mov	w22, #0x0                   	// #0
  4181c0:	mov	w1, #0x60000000            	// #1610612736
  4181c4:	nop
  4181c8:	ldrb	w4, [x19]
  4181cc:	mov	x3, x4
  4181d0:	ldrh	w4, [x8, x4, lsl #1]
  4181d4:	tbz	w4, #8, 418218 <nftw@plt+0x15698>
  4181d8:	add	x19, x19, #0x1
  4181dc:	cbz	x27, 418200 <nftw@plt+0x15680>
  4181e0:	cbz	x28, 418568 <nftw@plt+0x159e8>
  4181e4:	ldr	w4, [x27]
  4181e8:	cmp	w4, w1
  4181ec:	b.hi	4181fc <nftw@plt+0x1567c>  // b.pmore
  4181f0:	ldr	w5, [x27, #4]
  4181f4:	add	w5, w5, w4
  4181f8:	str	w5, [x27]
  4181fc:	str	w4, [x28, #4]
  418200:	ldrb	w3, [x9, w3, sxtw]
  418204:	subs	w0, w0, #0x1
  418208:	add	w22, w3, w22, lsl #4
  41820c:	b.eq	4182a4 <nftw@plt+0x15724>  // b.none
  418210:	cmp	x19, x21
  418214:	b.cc	4181c8 <nftw@plt+0x15648>  // b.lo, b.ul, b.last
  418218:	cbz	w24, 41825c <nftw@plt+0x156dc>
  41821c:	str	wzr, [x20]
  418220:	mov	w0, #0x0                   	// #0
  418224:	ldp	x19, x20, [sp, #16]
  418228:	ldp	x21, x22, [sp, #32]
  41822c:	ldp	x23, x24, [sp, #48]
  418230:	ldp	x25, x26, [sp, #64]
  418234:	ldp	x27, x28, [sp, #80]
  418238:	ldp	x29, x30, [sp], #112
  41823c:	ret
  418240:	mov	x0, x23
  418244:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  418248:	mov	w1, #0x4                   	// #4
  41824c:	add	x2, x2, #0x6b0
  418250:	bl	41f298 <nftw@plt+0x1c718>
  418254:	mov	w0, #0x4                   	// #4
  418258:	b	4181ac <nftw@plt+0x1562c>
  41825c:	str	x19, [x26]
  418260:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  418264:	sub	w3, w19, w25
  418268:	mov	x4, x25
  41826c:	mov	x0, x23
  418270:	add	x2, x2, #0x7e0
  418274:	mov	w1, #0x3                   	// #3
  418278:	mov	w22, #0x1                   	// #1
  41827c:	bl	41f298 <nftw@plt+0x1c718>
  418280:	str	w22, [x20]
  418284:	mov	w0, #0x1                   	// #1
  418288:	ldp	x19, x20, [sp, #16]
  41828c:	ldp	x21, x22, [sp, #32]
  418290:	ldp	x23, x24, [sp, #48]
  418294:	ldp	x25, x26, [sp, #64]
  418298:	ldp	x27, x28, [sp, #80]
  41829c:	ldp	x29, x30, [sp], #112
  4182a0:	ret
  4182a4:	str	x19, [x26]
  4182a8:	cmp	w22, #0x9f
  4182ac:	b.hi	4183bc <nftw@plt+0x1583c>  // b.pmore
  4182b0:	ldrb	w0, [x23, #1120]
  4182b4:	cbnz	w0, 4182cc <nftw@plt+0x1574c>
  4182b8:	and	w0, w22, #0xffffffdf
  4182bc:	mov	w1, #0x24                  	// #36
  4182c0:	cmp	w0, #0x40
  4182c4:	ccmp	w22, w1, #0x4, ne  // ne = any
  4182c8:	b.ne	4183c0 <nftw@plt+0x15840>  // b.any
  4182cc:	cmp	w24, #0x0
  4182d0:	cset	w0, ne  // ne = any
  4182d4:	cmp	w22, #0x24
  4182d8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4182dc:	b.eq	418428 <nftw@plt+0x158a8>  // b.none
  4182e0:	ldrb	w0, [x23, #1146]
  4182e4:	cbnz	w0, 418474 <nftw@plt+0x158f4>
  4182e8:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x155a0>
  4182ec:	mov	x1, #0x73c                 	// #1852
  4182f0:	add	x4, x4, #0xcd0
  4182f4:	mov	w2, #0x0                   	// #0
  4182f8:	b	41831c <nftw@plt+0x1579c>
  4182fc:	add	w0, w1, w2
  418300:	add	w0, w0, w0, lsr #31
  418304:	asr	w0, w0, #1
  418308:	add	x3, x4, w0, sxtw #3
  41830c:	ldr	w3, [x3, #4]
  418310:	cmp	w22, w3
  418314:	b.hi	41849c <nftw@plt+0x1591c>  // b.pmore
  418318:	sxtw	x1, w0
  41831c:	cmp	w1, w2
  418320:	b.ne	4182fc <nftw@plt+0x1577c>  // b.any
  418324:	ldrb	w2, [x23, #1154]
  418328:	sbfiz	x0, x1, #3, #32
  41832c:	ldrh	w0, [x4, x0]
  418330:	cbz	w2, 4184f8 <nftw@plt+0x15978>
  418334:	ldrb	w2, [x23, #1164]
  418338:	cbnz	w2, 418520 <nftw@plt+0x159a0>
  41833c:	ldrb	w2, [x23, #1152]
  418340:	cbnz	w2, 418580 <nftw@plt+0x15a00>
  418344:	ldrb	w5, [x23, #1120]
  418348:	mov	w2, #0x4                   	// #4
  41834c:	mov	w3, #0xd                   	// #13
  418350:	mov	w26, #0x0                   	// #0
  418354:	cmp	w5, #0x0
  418358:	csel	w2, w2, w3, ne  // ne = any
  41835c:	tst	w0, w2
  418360:	b.eq	418438 <nftw@plt+0x158b8>  // b.none
  418364:	add	x1, x4, x1, lsl #3
  418368:	ldrb	w27, [x1, #2]
  41836c:	cbz	w27, 4184a4 <nftw@plt+0x15924>
  418370:	ldr	x2, [sp, #104]
  418374:	ldrb	w1, [x2, #4]
  418378:	cmp	w1, w27
  41837c:	b.ls	4184a4 <nftw@plt+0x15924>  // b.plast
  418380:	mov	w0, #0x3                   	// #3
  418384:	str	w0, [x2, #8]
  418388:	ldr	x0, [sp, #104]
  41838c:	strb	w27, [x0, #4]
  418390:	cbz	w26, 418280 <nftw@plt+0x15700>
  418394:	cmp	w24, #0x1
  418398:	b.ne	418280 <nftw@plt+0x15700>  // b.any
  41839c:	sub	w3, w19, w25
  4183a0:	mov	x4, x25
  4183a4:	mov	x0, x23
  4183a8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4183ac:	mov	w1, #0x3                   	// #3
  4183b0:	add	x2, x2, #0x798
  4183b4:	bl	41f298 <nftw@plt+0x1c718>
  4183b8:	b	418280 <nftw@plt+0x15700>
  4183bc:	tbz	w22, #31, 418410 <nftw@plt+0x15890>
  4183c0:	sub	w3, w19, w25
  4183c4:	mov	x4, x25
  4183c8:	mov	x0, x23
  4183cc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4183d0:	mov	w1, #0x3                   	// #3
  4183d4:	add	x2, x2, #0x6f8
  4183d8:	mov	w22, #0x1                   	// #1
  4183dc:	bl	41f298 <nftw@plt+0x1c718>
  4183e0:	b	418280 <nftw@plt+0x15700>
  4183e4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4183e8:	add	x2, x2, #0x600
  4183ec:	bl	41f298 <nftw@plt+0x1c718>
  4183f0:	ldurb	w3, [x19, #-1]
  4183f4:	b	418194 <nftw@plt+0x15614>
  4183f8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4183fc:	mov	w1, #0x0                   	// #0
  418400:	add	x2, x2, #0x638
  418404:	bl	41f298 <nftw@plt+0x1c718>
  418408:	ldurb	w3, [x19, #-1]
  41840c:	b	418194 <nftw@plt+0x15614>
  418410:	mov	w0, #0xffff2800            	// #-55296
  418414:	add	w0, w22, w0
  418418:	cmp	w0, #0x7ff
  41841c:	b.ls	4183c0 <nftw@plt+0x15840>  // b.plast
  418420:	cmp	w24, #0x0
  418424:	cset	w0, ne  // ne = any
  418428:	cbz	w0, 418280 <nftw@plt+0x15700>
  41842c:	mov	w0, #0x10ffff              	// #1114111
  418430:	cmp	w22, w0
  418434:	b.ls	4182e8 <nftw@plt+0x15768>  // b.plast
  418438:	sub	w3, w19, w25
  41843c:	mov	x4, x25
  418440:	mov	x0, x23
  418444:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  418448:	mov	w1, #0x3                   	// #3
  41844c:	add	x2, x2, #0x760
  418450:	bl	41f298 <nftw@plt+0x1c718>
  418454:	b	418280 <nftw@plt+0x15700>
  418458:	mov	x0, x23
  41845c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  418460:	mov	w1, #0x6                   	// #6
  418464:	add	x2, x2, #0x678
  418468:	bl	41f308 <nftw@plt+0x1c788>
  41846c:	ldurb	w3, [x19, #-1]
  418470:	b	418194 <nftw@plt+0x15614>
  418474:	ldrb	w0, [x23, #1148]
  418478:	cbz	w0, 418484 <nftw@plt+0x15904>
  41847c:	ldrb	w0, [x23, #18]
  418480:	cbz	w0, 41854c <nftw@plt+0x159cc>
  418484:	ldr	x1, [sp, #104]
  418488:	mov	w0, #0x24                  	// #36
  41848c:	mov	w22, w0
  418490:	str	w0, [x1]
  418494:	strb	wzr, [x1, #4]
  418498:	b	418280 <nftw@plt+0x15700>
  41849c:	add	w2, w0, #0x1
  4184a0:	b	41831c <nftw@plt+0x1579c>
  4184a4:	tbz	w0, #8, 41852c <nftw@plt+0x159ac>
  4184a8:	ldr	x1, [sp, #104]
  4184ac:	mov	w18, #0xffffee9f            	// #-4449
  4184b0:	add	w0, w22, w18
  4184b4:	cmp	w0, #0x14
  4184b8:	ldr	w1, [x1]
  4184bc:	b.hi	41858c <nftw@plt+0x15a0c>  // b.pmore
  4184c0:	mov	w17, #0xffffef00            	// #-4352
  4184c4:	add	w1, w1, w17
  4184c8:	cmp	w1, #0x12
  4184cc:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4184d0:	ldr	x2, [sp, #104]
  4184d4:	mov	w1, #0x2                   	// #2
  4184d8:	ldr	w0, [x2, #8]
  4184dc:	cmp	w0, w1
  4184e0:	csel	w0, w0, w1, ge  // ge = tcont
  4184e4:	str	w0, [x2, #8]
  4184e8:	cbnz	w27, 418388 <nftw@plt+0x15808>
  4184ec:	ldr	x0, [sp, #104]
  4184f0:	str	w22, [x0]
  4184f4:	b	418388 <nftw@plt+0x15808>
  4184f8:	mov	w2, #0xd                   	// #13
  4184fc:	tst	w0, w2
  418500:	b.eq	418438 <nftw@plt+0x158b8>  // b.none
  418504:	ldrb	w2, [x23, #1164]
  418508:	cbnz	w2, 418524 <nftw@plt+0x159a4>
  41850c:	ldrb	w2, [x23, #1152]
  418510:	mov	w26, #0x0                   	// #0
  418514:	cbz	w2, 418364 <nftw@plt+0x157e4>
  418518:	and	w26, w0, #0x2
  41851c:	b	418364 <nftw@plt+0x157e4>
  418520:	tbz	w0, #3, 418438 <nftw@plt+0x158b8>
  418524:	and	w26, w0, #0x10
  418528:	b	418364 <nftw@plt+0x157e4>
  41852c:	tbnz	w0, #7, 4184e8 <nftw@plt+0x15968>
  418530:	tbz	w0, #6, 4185c4 <nftw@plt+0x15a44>
  418534:	ldr	x1, [sp, #104]
  418538:	ldr	w0, [x1, #8]
  41853c:	cmp	w0, #0x0
  418540:	csinc	w0, w0, wzr, gt
  418544:	str	w0, [x1, #8]
  418548:	b	4184e8 <nftw@plt+0x15968>
  41854c:	strb	wzr, [x23, #1148]
  418550:	mov	x0, x23
  418554:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  418558:	mov	w1, #0x2                   	// #2
  41855c:	add	x2, x2, #0x720
  418560:	bl	41f298 <nftw@plt+0x1c718>
  418564:	b	418484 <nftw@plt+0x15904>
  418568:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41856c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  418570:	add	x2, x2, #0x6d0
  418574:	add	x0, x0, #0x6e0
  418578:	mov	w1, #0x434                 	// #1076
  41857c:	bl	402bf0 <nftw@plt+0x70>
  418580:	tbz	w0, #0, 418438 <nftw@plt+0x158b8>
  418584:	and	w26, w0, #0x2
  418588:	b	418364 <nftw@plt+0x157e4>
  41858c:	mov	w16, #0xffffee58            	// #-4520
  418590:	add	w0, w22, w16
  418594:	cmp	w0, #0x1a
  418598:	b.hi	4185d8 <nftw@plt+0x15a58>  // b.pmore
  41859c:	mov	w15, #0xffff5400            	// #-44032
  4185a0:	add	w1, w1, w15
  4185a4:	mov	w0, #0x2ba3                	// #11171
  4185a8:	cmp	w1, w0
  4185ac:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4185b0:	mov	w2, #0x1c                  	// #28
  4185b4:	udiv	w0, w1, w2
  4185b8:	msub	w0, w0, w2, w1
  4185bc:	cbnz	w0, 4184e8 <nftw@plt+0x15968>
  4185c0:	b	4184d0 <nftw@plt+0x15950>
  4185c4:	tbnz	w0, #5, 4184d0 <nftw@plt+0x15950>
  4185c8:	ldr	x1, [sp, #104]
  4185cc:	mov	w0, #0x3                   	// #3
  4185d0:	str	w0, [x1, #8]
  4185d4:	b	4184e8 <nftw@plt+0x15968>
  4185d8:	cmp	w22, #0x345
  4185dc:	b.hi	418e1c <nftw@plt+0x1629c>  // b.pmore
  4185e0:	cmp	w22, #0x2ff
  4185e4:	b.ls	418968 <nftw@plt+0x15de8>  // b.plast
  4185e8:	sub	w2, w22, #0x300
  4185ec:	cmp	w2, #0x45
  4185f0:	b.hi	418968 <nftw@plt+0x15de8>  // b.pmore
  4185f4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4185f8:	add	x0, x0, #0xbb0
  4185fc:	ldrh	w0, [x0, w2, uxtw #1]
  418600:	adr	x2, 41860c <nftw@plt+0x15a8c>
  418604:	add	x0, x2, w0, sxth #2
  418608:	br	x0
  41860c:	sub	w1, w1, #0x41
  418610:	cmp	w1, #0x34
  418614:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418618:	mov	x2, #0x4111                	// #16657
  41861c:	mov	x0, #0x1                   	// #1
  418620:	movk	x2, #0x12, lsl #16
  418624:	lsl	x1, x0, x1
  418628:	movk	x2, #0x4111, lsl #32
  41862c:	movk	x2, #0x12, lsl #48
  418630:	tst	x1, x2
  418634:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418638:	ldr	x1, [sp, #104]
  41863c:	mov	w0, #0x3                   	// #3
  418640:	str	w0, [x1, #8]
  418644:	b	4184e8 <nftw@plt+0x15968>
  418648:	sub	w1, w1, #0x41
  41864c:	cmp	w1, #0x38
  418650:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418654:	mov	x2, #0x1                   	// #1
  418658:	mov	x0, #0x1                   	// #1
  41865c:	movk	x2, #0x10, lsl #16
  418660:	lsl	x1, x0, x1
  418664:	movk	x2, #0x1, lsl #32
  418668:	movk	x2, #0x150, lsl #48
  41866c:	tst	x1, x2
  418670:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418674:	b	418638 <nftw@plt+0x15ab8>
  418678:	cmp	w1, #0x75
  41867c:	b.hi	419754 <nftw@plt+0x16bd4>  // b.pmore
  418680:	cmp	w1, #0x4e
  418684:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418688:	sub	w1, w1, #0x4f
  41868c:	mov	x0, #0x1                   	// #1
  418690:	mov	x2, #0x41                  	// #65
  418694:	movk	x2, #0x41, lsl #32
  418698:	lsl	x1, x0, x1
  41869c:	tst	x1, x2
  4186a0:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4186a4:	b	418638 <nftw@plt+0x15ab8>
  4186a8:	cmp	w1, #0x75
  4186ac:	b.hi	4197bc <nftw@plt+0x16c3c>  // b.pmore
  4186b0:	cmp	w1, #0x40
  4186b4:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4186b8:	mov	x2, #0x4111                	// #16657
  4186bc:	sub	w1, w1, #0x41
  4186c0:	movk	x2, #0x12, lsl #16
  4186c4:	mov	x0, #0x1                   	// #1
  4186c8:	movk	x2, #0x4111, lsl #32
  4186cc:	lsl	x1, x0, x1
  4186d0:	movk	x2, #0x12, lsl #48
  4186d4:	tst	x1, x2
  4186d8:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4186dc:	b	418638 <nftw@plt+0x15ab8>
  4186e0:	cmp	w1, #0x79
  4186e4:	b.hi	419764 <nftw@plt+0x16be4>  // b.pmore
  4186e8:	cmp	w1, #0x40
  4186ec:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4186f0:	mov	x2, #0x4111                	// #16657
  4186f4:	sub	w1, w1, #0x41
  4186f8:	movk	x2, #0x110, lsl #16
  4186fc:	mov	x0, #0x1                   	// #1
  418700:	movk	x2, #0x4111, lsl #32
  418704:	lsl	x1, x0, x1
  418708:	movk	x2, #0x110, lsl #48
  41870c:	tst	x1, x2
  418710:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418714:	b	418638 <nftw@plt+0x15ab8>
  418718:	cmp	w1, #0x7a
  41871c:	b.hi	4197cc <nftw@plt+0x16c4c>  // b.pmore
  418720:	cmp	w1, #0x40
  418724:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418728:	mov	x2, #0x6ddd                	// #28125
  41872c:	sub	w1, w1, #0x41
  418730:	movk	x2, #0x21e, lsl #16
  418734:	mov	x0, #0x1                   	// #1
  418738:	movk	x2, #0x6fdd, lsl #32
  41873c:	lsl	x1, x0, x1
  418740:	movk	x2, #0x21e, lsl #48
  418744:	tst	x1, x2
  418748:	b.ne	418638 <nftw@plt+0x15ab8>  // b.any
  41874c:	b	4184e8 <nftw@plt+0x15968>
  418750:	cmp	w1, #0x456
  418754:	b.hi	41949c <nftw@plt+0x1691c>  // b.pmore
  418758:	cmp	w1, #0x3b8
  41875c:	b.hi	418d3c <nftw@plt+0x161bc>  // b.pmore
  418760:	cmp	w1, #0x79
  418764:	b.hi	4194b0 <nftw@plt+0x16930>  // b.pmore
  418768:	cmp	w1, #0x40
  41876c:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418770:	mov	x2, #0x4191                	// #16785
  418774:	sub	w1, w1, #0x41
  418778:	movk	x2, #0x1d0, lsl #16
  41877c:	mov	x0, #0x1                   	// #1
  418780:	movk	x2, #0x4191, lsl #32
  418784:	lsl	x1, x0, x1
  418788:	movk	x2, #0x1d8, lsl #48
  41878c:	tst	x1, x2
  418790:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418794:	b	418638 <nftw@plt+0x15ab8>
  418798:	cmp	w1, #0x7a
  41879c:	b.hi	4193d4 <nftw@plt+0x16854>  // b.pmore
  4187a0:	cmp	w1, #0x40
  4187a4:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4187a8:	mov	x2, #0xf1ff                	// #61951
  4187ac:	sub	w1, w1, #0x41
  4187b0:	movk	x2, #0x3ce, lsl #16
  4187b4:	mov	x0, #0x1                   	// #1
  4187b8:	movk	x2, #0xf0ff, lsl #32
  4187bc:	lsl	x1, x0, x1
  4187c0:	movk	x2, #0x3ce, lsl #48
  4187c4:	tst	x1, x2
  4187c8:	b.ne	418638 <nftw@plt+0x15ab8>  // b.any
  4187cc:	b	4184e8 <nftw@plt+0x15968>
  4187d0:	cmp	w1, #0xfc
  4187d4:	b.hi	419404 <nftw@plt+0x16884>  // b.pmore
  4187d8:	cmp	w1, #0x40
  4187dc:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4187e0:	sub	w1, w1, #0x41
  4187e4:	cmp	w1, #0xbb
  4187e8:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4187ec:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4187f0:	add	x0, x0, #0xc3c
  4187f4:	ldrh	w0, [x0, w1, uxtw #1]
  4187f8:	adr	x1, 418804 <nftw@plt+0x15c84>
  4187fc:	add	x0, x1, w0, sxth #2
  418800:	br	x0
  418804:	cmp	w1, #0x79
  418808:	b.hi	419804 <nftw@plt+0x16c84>  // b.pmore
  41880c:	cmp	w1, #0x40
  418810:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418814:	mov	x2, #0x6111                	// #24849
  418818:	sub	w1, w1, #0x41
  41881c:	movk	x2, #0x130, lsl #16
  418820:	mov	x0, #0x1                   	// #1
  418824:	movk	x2, #0x6111, lsl #32
  418828:	lsl	x1, x0, x1
  41882c:	movk	x2, #0x130, lsl #48
  418830:	tst	x1, x2
  418834:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418838:	b	418638 <nftw@plt+0x15ab8>
  41883c:	cmp	w1, #0x7a
  418840:	b.hi	4199a4 <nftw@plt+0x16e24>  // b.pmore
  418844:	cmp	w1, #0x40
  418848:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  41884c:	sub	w1, w1, #0x41
  418850:	cmp	w1, #0x39
  418854:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418858:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41885c:	add	x0, x0, #0xdb4
  418860:	ldrh	w0, [x0, w1, uxtw #1]
  418864:	adr	x1, 418870 <nftw@plt+0x15cf0>
  418868:	add	x0, x1, w0, sxth #2
  41886c:	br	x0
  418870:	cmp	w1, #0x3c5
  418874:	b.hi	41964c <nftw@plt+0x16acc>  // b.pmore
  418878:	cmp	w1, #0x390
  41887c:	b.hi	418d60 <nftw@plt+0x161e0>  // b.pmore
  418880:	cmp	w1, #0x75
  418884:	b.hi	4195f8 <nftw@plt+0x16a78>  // b.pmore
  418888:	cmp	w1, #0x40
  41888c:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418890:	mov	x2, #0x4151                	// #16721
  418894:	sub	w1, w1, #0x41
  418898:	movk	x2, #0x10, lsl #16
  41889c:	mov	x0, #0x1                   	// #1
  4188a0:	movk	x2, #0x4151, lsl #32
  4188a4:	lsl	x1, x0, x1
  4188a8:	movk	x2, #0x10, lsl #48
  4188ac:	tst	x1, x2
  4188b0:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4188b4:	b	418638 <nftw@plt+0x15ab8>
  4188b8:	cmp	w1, #0x3cb
  4188bc:	b.hi	41989c <nftw@plt+0x16d1c>  // b.pmore
  4188c0:	cmp	w1, #0x390
  4188c4:	b.hi	418d14 <nftw@plt+0x16194>  // b.pmore
  4188c8:	cmp	w1, #0x113
  4188cc:	b.hi	41985c <nftw@plt+0x16cdc>  // b.pmore
  4188d0:	cmp	w1, #0x40
  4188d4:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4188d8:	sub	w1, w1, #0x41
  4188dc:	cmp	w1, #0xd2
  4188e0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4188e4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  4188e8:	add	x0, x0, #0xe28
  4188ec:	ldrh	w0, [x0, w1, uxtw #1]
  4188f0:	adr	x1, 4188fc <nftw@plt+0x15d7c>
  4188f4:	add	x0, x1, w0, sxth #2
  4188f8:	br	x0
  4188fc:	cmp	w1, #0x41a
  418900:	b.hi	4194d0 <nftw@plt+0x16950>  // b.pmore
  418904:	cmp	w1, #0x390
  418908:	b.hi	418cf0 <nftw@plt+0x16170>  // b.pmore
  41890c:	sub	w1, w1, #0x41
  418910:	cmp	w1, #0x16f
  418914:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418918:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41891c:	add	x0, x0, #0xfd0
  418920:	ldrh	w0, [x0, w1, uxtw #1]
  418924:	adr	x1, 418930 <nftw@plt+0x15db0>
  418928:	add	x0, x1, w0, sxth #2
  41892c:	br	x0
  418930:	cmp	w1, #0x3ce
  418934:	b.hi	419608 <nftw@plt+0x16a88>  // b.pmore
  418938:	cmp	w1, #0x390
  41893c:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418940:	mov	x2, #0x41                  	// #65
  418944:	sub	w1, w1, #0x391
  418948:	movk	x2, #0x2900, lsl #16
  41894c:	mov	x0, #0x1                   	// #1
  418950:	movk	x2, #0x41, lsl #32
  418954:	lsl	x1, x0, x1
  418958:	movk	x2, #0x2100, lsl #48
  41895c:	tst	x1, x2
  418960:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418964:	b	418638 <nftw@plt+0x15ab8>
  418968:	mov	w3, w22
  41896c:	mov	x0, x23
  418970:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  418974:	mov	w1, #0x4                   	// #4
  418978:	add	x2, x2, #0x740
  41897c:	bl	41f298 <nftw@plt+0x1c718>
  418980:	b	4184e8 <nftw@plt+0x15968>
  418984:	cmp	w1, #0x21f
  418988:	b.hi	419134 <nftw@plt+0x165b4>  // b.pmore
  41898c:	cmp	w1, #0x42
  418990:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418994:	sub	w1, w1, #0x43
  418998:	cmp	w1, #0x1dc
  41899c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4189a0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x145a0>
  4189a4:	add	x0, x0, #0x2b0
  4189a8:	ldrh	w0, [x0, w1, uxtw #1]
  4189ac:	adr	x1, 4189b8 <nftw@plt+0x15e38>
  4189b0:	add	x0, x1, w0, sxth #2
  4189b4:	br	x0
  4189b8:	cmp	w1, #0x165
  4189bc:	b.hi	419510 <nftw@plt+0x16990>  // b.pmore
  4189c0:	cmp	w1, #0x159
  4189c4:	b.hi	418cac <nftw@plt+0x1612c>  // b.pmore
  4189c8:	cmp	w1, #0x54
  4189cc:	b.hi	419908 <nftw@plt+0x16d88>  // b.pmore
  4189d0:	cmp	w1, #0x52
  4189d4:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4189d8:	b	418638 <nftw@plt+0x15ab8>
  4189dc:	cmp	w1, #0x130
  4189e0:	b.hi	419ba4 <nftw@plt+0x17024>  // b.pmore
  4189e4:	cmp	w1, #0xf8
  4189e8:	b.hi	418cc8 <nftw@plt+0x16148>  // b.pmore
  4189ec:	cmp	w1, #0x75
  4189f0:	b.hi	419aa8 <nftw@plt+0x16f28>  // b.pmore
  4189f4:	cmp	w1, #0x44
  4189f8:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4189fc:	mov	x2, #0x11                  	// #17
  418a00:	sub	w1, w1, #0x45
  418a04:	movk	x2, #0x1, lsl #16
  418a08:	mov	x0, #0x1                   	// #1
  418a0c:	movk	x2, #0x11, lsl #32
  418a10:	lsl	x1, x0, x1
  418a14:	movk	x2, #0x1, lsl #48
  418a18:	tst	x1, x2
  418a1c:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418a20:	b	418638 <nftw@plt+0x15ab8>
  418a24:	cmp	w1, #0x171
  418a28:	b.hi	419ad0 <nftw@plt+0x16f50>  // b.pmore
  418a2c:	cmp	w1, #0x43
  418a30:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418a34:	sub	w1, w1, #0x44
  418a38:	cmp	w1, #0x12d
  418a3c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418a40:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x145a0>
  418a44:	add	x0, x0, #0x66c
  418a48:	ldrh	w0, [x0, w1, uxtw #1]
  418a4c:	adr	x1, 418a58 <nftw@plt+0x15ed8>
  418a50:	add	x0, x1, w0, sxth #2
  418a54:	br	x0
  418a58:	cmp	w1, #0x231
  418a5c:	b.hi	419280 <nftw@plt+0x16700>  // b.pmore
  418a60:	cmp	w1, #0xbf
  418a64:	b.hi	418da8 <nftw@plt+0x16228>  // b.pmore
  418a68:	sub	w2, w1, #0x41
  418a6c:	cmp	w2, #0x34
  418a70:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418a74:	mov	x0, #0x4111                	// #16657
  418a78:	mov	x1, #0x1                   	// #1
  418a7c:	movk	x0, #0x10, lsl #16
  418a80:	lsl	x1, x1, x2
  418a84:	movk	x0, #0x4111, lsl #32
  418a88:	movk	x0, #0x10, lsl #48
  418a8c:	tst	x1, x0
  418a90:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418a94:	b	418638 <nftw@plt+0x15ab8>
  418a98:	cmp	w1, #0x233
  418a9c:	b.hi	41953c <nftw@plt+0x169bc>  // b.pmore
  418aa0:	cmp	w1, #0x40
  418aa4:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418aa8:	sub	w1, w1, #0x41
  418aac:	cmp	w1, #0x1f2
  418ab0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418ab4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x145a0>
  418ab8:	add	x0, x0, #0x8c8
  418abc:	ldrh	w0, [x0, w1, uxtw #1]
  418ac0:	adr	x1, 418acc <nftw@plt+0x15f4c>
  418ac4:	add	x0, x1, w0, sxth #2
  418ac8:	br	x0
  418acc:	cmp	w1, #0x171
  418ad0:	b.hi	4199e4 <nftw@plt+0x16e64>  // b.pmore
  418ad4:	cmp	w1, #0x167
  418ad8:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  418adc:	cmp	w1, #0xfc
  418ae0:	b.hi	419994 <nftw@plt+0x16e14>  // b.pmore
  418ae4:	cmp	w1, #0xd1
  418ae8:	b.hi	418d88 <nftw@plt+0x16208>  // b.pmore
  418aec:	sub	w2, w1, #0x4f
  418af0:	cmp	w2, #0x26
  418af4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418af8:	mov	x1, #0x1                   	// #1
  418afc:	mov	x0, #0x41                  	// #65
  418b00:	movk	x0, #0x41, lsl #32
  418b04:	lsl	x1, x1, x2
  418b08:	tst	x1, x0
  418b0c:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418b10:	b	418638 <nftw@plt+0x15ab8>
  418b14:	mov	w0, #0x1ffe                	// #8190
  418b18:	cmp	w1, w0
  418b1c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418b20:	mov	w0, #0x1eff                	// #7935
  418b24:	cmp	w1, w0
  418b28:	b.hi	418dcc <nftw@plt+0x1624c>  // b.pmore
  418b2c:	cmp	w1, #0xa8
  418b30:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  418b34:	sub	w2, w1, #0x3b1
  418b38:	cmp	w2, #0x1a
  418b3c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418b40:	mov	x1, #0x1                   	// #1
  418b44:	mov	x0, #0x141                 	// #321
  418b48:	movk	x0, #0x710, lsl #16
  418b4c:	lsl	x1, x1, x2
  418b50:	tst	x1, x0
  418b54:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418b58:	b	418638 <nftw@plt+0x15ab8>
  418b5c:	cmp	w1, #0x1e1
  418b60:	b.hi	419938 <nftw@plt+0x16db8>  // b.pmore
  418b64:	cmp	w1, #0x1dd
  418b68:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  418b6c:	cmp	w1, #0xe5
  418b70:	b.hi	419924 <nftw@plt+0x16da4>  // b.pmore
  418b74:	cmp	w1, #0xdf
  418b78:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  418b7c:	cmp	w1, #0x61
  418b80:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  418b84:	b.ls	419918 <nftw@plt+0x16d98>  // b.plast
  418b88:	sub	w1, w1, #0xc0
  418b8c:	cmp	w1, #0x5
  418b90:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418b94:	b	418638 <nftw@plt+0x15ab8>
  418b98:	cmp	w1, #0x21f
  418b9c:	b.hi	4192d4 <nftw@plt+0x16754>  // b.pmore
  418ba0:	cmp	w1, #0x21d
  418ba4:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  418ba8:	cmp	w1, #0x68
  418bac:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  418bb0:	b.ls	4192c8 <nftw@plt+0x16748>  // b.plast
  418bb4:	sub	w1, w1, #0x124
  418bb8:	cmp	w1, #0x1
  418bbc:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418bc0:	b	418638 <nftw@plt+0x15ab8>
  418bc4:	cmp	w1, #0x3c9
  418bc8:	b.hi	419564 <nftw@plt+0x169e4>  // b.pmore
  418bcc:	cmp	w1, #0x390
  418bd0:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418bd4:	mov	x2, #0x4151                	// #16721
  418bd8:	sub	w1, w1, #0x391
  418bdc:	movk	x2, #0x111, lsl #16
  418be0:	mov	x0, #0x1                   	// #1
  418be4:	movk	x2, #0x4151, lsl #32
  418be8:	lsl	x1, x0, x1
  418bec:	movk	x2, #0x111, lsl #48
  418bf0:	tst	x1, x2
  418bf4:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418bf8:	b	418638 <nftw@plt+0x15ab8>
  418bfc:	cmp	w1, #0x3c9
  418c00:	b.hi	419228 <nftw@plt+0x166a8>  // b.pmore
  418c04:	cmp	w1, #0x390
  418c08:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418c0c:	mov	x2, #0x4151                	// #16721
  418c10:	sub	w1, w1, #0x391
  418c14:	movk	x2, #0x100, lsl #16
  418c18:	mov	x0, #0x1                   	// #1
  418c1c:	movk	x2, #0x4151, lsl #32
  418c20:	lsl	x1, x0, x1
  418c24:	movk	x2, #0x111, lsl #48
  418c28:	tst	x1, x2
  418c2c:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418c30:	b	418638 <nftw@plt+0x15ab8>
  418c34:	cmp	w1, #0x13e
  418c38:	b.hi	419384 <nftw@plt+0x16804>  // b.pmore
  418c3c:	cmp	w1, #0x10d
  418c40:	b.hi	418df4 <nftw@plt+0x16274>  // b.pmore
  418c44:	cmp	w1, #0x7a
  418c48:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  418c4c:	cmp	w1, #0x41
  418c50:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418c54:	mov	x2, #0x1605                	// #5637
  418c58:	sub	w1, w1, #0x42
  418c5c:	movk	x2, #0x105, lsl #16
  418c60:	mov	x0, #0x1                   	// #1
  418c64:	movk	x2, #0x1645, lsl #32
  418c68:	lsl	x1, x0, x1
  418c6c:	movk	x2, #0x105, lsl #48
  418c70:	tst	x1, x2
  418c74:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418c78:	b	418638 <nftw@plt+0x15ab8>
  418c7c:	cmp	w1, #0x171
  418c80:	b.hi	4195cc <nftw@plt+0x16a4c>  // b.pmore
  418c84:	cmp	w1, #0x167
  418c88:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  418c8c:	cmp	w1, #0xdc
  418c90:	b.hi	4195bc <nftw@plt+0x16a3c>  // b.pmore
  418c94:	cmp	w1, #0xd8
  418c98:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  418c9c:	and	w1, w1, #0xffffffdf
  418ca0:	cmp	w1, #0x55
  418ca4:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  418ca8:	b	418638 <nftw@plt+0x15ab8>
  418cac:	sub	w1, w1, #0x15a
  418cb0:	mov	x0, #0x1                   	// #1
  418cb4:	mov	x2, #0xccf                 	// #3279
  418cb8:	lsl	x1, x0, x1
  418cbc:	tst	x1, x2
  418cc0:	b.ne	418638 <nftw@plt+0x15ab8>  // b.any
  418cc4:	b	4184e8 <nftw@plt+0x15968>
  418cc8:	mov	x2, #0xf                   	// #15
  418ccc:	sub	w1, w1, #0xf9
  418cd0:	movk	x2, #0x7e00, lsl #16
  418cd4:	mov	x0, #0x1                   	// #1
  418cd8:	movk	x2, #0x8006, lsl #32
  418cdc:	lsl	x1, x0, x1
  418ce0:	movk	x2, #0x9f, lsl #48
  418ce4:	tst	x1, x2
  418ce8:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418cec:	b	418638 <nftw@plt+0x15ab8>
  418cf0:	sub	w1, w1, #0x391
  418cf4:	cmp	w1, #0x89
  418cf8:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418cfc:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x145a0>
  418d00:	add	x0, x0, #0xcb0
  418d04:	ldrh	w0, [x0, w1, uxtw #1]
  418d08:	adr	x1, 418d14 <nftw@plt+0x16194>
  418d0c:	add	x0, x1, w0, sxth #2
  418d10:	br	x0
  418d14:	mov	x2, #0x4151                	// #16721
  418d18:	sub	w1, w1, #0x391
  418d1c:	movk	x2, #0x110, lsl #16
  418d20:	mov	x0, #0x1                   	// #1
  418d24:	movk	x2, #0x4151, lsl #32
  418d28:	lsl	x1, x0, x1
  418d2c:	movk	x2, #0x710, lsl #48
  418d30:	tst	x1, x2
  418d34:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418d38:	b	418638 <nftw@plt+0x15ab8>
  418d3c:	sub	w1, w1, #0x3b9
  418d40:	cmp	w1, #0x9d
  418d44:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418d48:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x145a0>
  418d4c:	add	x0, x0, #0xdc4
  418d50:	ldrh	w0, [x0, w1, uxtw #1]
  418d54:	adr	x1, 418d60 <nftw@plt+0x161e0>
  418d58:	add	x0, x1, w0, sxth #2
  418d5c:	br	x0
  418d60:	mov	x2, #0x101                 	// #257
  418d64:	sub	w1, w1, #0x391
  418d68:	movk	x2, #0x10, lsl #16
  418d6c:	mov	x0, #0x1                   	// #1
  418d70:	movk	x2, #0x101, lsl #32
  418d74:	lsl	x1, x0, x1
  418d78:	movk	x2, #0x10, lsl #48
  418d7c:	tst	x1, x2
  418d80:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418d84:	b	418638 <nftw@plt+0x15ab8>
  418d88:	sub	w1, w1, #0xd2
  418d8c:	mov	x0, #0x1                   	// #1
  418d90:	mov	x2, #0x79f                 	// #1951
  418d94:	movk	x2, #0x79f, lsl #32
  418d98:	lsl	x1, x0, x1
  418d9c:	tst	x1, x2
  418da0:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418da4:	b	418638 <nftw@plt+0x15ab8>
  418da8:	sub	w1, w1, #0xc0
  418dac:	cmp	w1, #0x171
  418db0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418db4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x145a0>
  418db8:	add	x0, x0, #0xf00
  418dbc:	ldrh	w0, [x0, w1, uxtw #1]
  418dc0:	adr	x1, 418dcc <nftw@plt+0x1624c>
  418dc4:	add	x0, x1, w0, sxth #2
  418dc8:	br	x0
  418dcc:	mov	w7, #0xffffe100            	// #-7936
  418dd0:	add	w1, w1, w7
  418dd4:	cmp	w1, #0xfe
  418dd8:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418ddc:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x155a0>
  418de0:	add	x0, x0, #0x1e4
  418de4:	ldrh	w0, [x0, w1, uxtw #1]
  418de8:	adr	x1, 418df4 <nftw@plt+0x16274>
  418dec:	add	x0, x1, w0, sxth #2
  418df0:	br	x0
  418df4:	mov	x2, #0x3                   	// #3
  418df8:	sub	w1, w1, #0x10e
  418dfc:	movk	x2, #0x80, lsl #16
  418e00:	mov	x0, #0x1                   	// #1
  418e04:	movk	x2, #0x9800, lsl #32
  418e08:	lsl	x1, x0, x1
  418e0c:	movk	x2, #0x1, lsl #48
  418e10:	tst	x1, x2
  418e14:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418e18:	b	418638 <nftw@plt+0x15ab8>
  418e1c:	cmp	w22, #0xcd5
  418e20:	b.eq	418e54 <nftw@plt+0x162d4>  // b.none
  418e24:	b.hi	418f2c <nftw@plt+0x163ac>  // b.pmore
  418e28:	cmp	w22, #0xb3e
  418e2c:	b.eq	419334 <nftw@plt+0x167b4>  // b.none
  418e30:	b.ls	418eac <nftw@plt+0x1632c>  // b.plast
  418e34:	cmp	w22, #0xbd7
  418e38:	b.eq	419178 <nftw@plt+0x165f8>  // b.none
  418e3c:	b.ls	418e8c <nftw@plt+0x1630c>  // b.plast
  418e40:	cmp	w22, #0xc56
  418e44:	b.ne	418e78 <nftw@plt+0x162f8>  // b.any
  418e48:	cmp	w1, #0xc46
  418e4c:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  418e50:	b	418638 <nftw@plt+0x15ab8>
  418e54:	sub	w0, w1, #0xcbf
  418e58:	cmp	w0, #0xb
  418e5c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418e60:	mov	x1, #0x1                   	// #1
  418e64:	mov	x2, #0x881                 	// #2177
  418e68:	lsl	x1, x1, x0
  418e6c:	tst	x1, x2
  418e70:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418e74:	b	418638 <nftw@plt+0x15ab8>
  418e78:	cmp	w22, #0xcc2
  418e7c:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  418e80:	cmp	w1, #0xcc6
  418e84:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  418e88:	b	418638 <nftw@plt+0x15ab8>
  418e8c:	cmp	w22, #0xb57
  418e90:	b.eq	4190a4 <nftw@plt+0x16524>  // b.none
  418e94:	cmp	w22, #0xbbe
  418e98:	b.ne	419034 <nftw@plt+0x164b4>  // b.any
  418e9c:	sub	w1, w1, #0xbc6
  418ea0:	cmp	w1, #0x1
  418ea4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418ea8:	b	418638 <nftw@plt+0x15ab8>
  418eac:	cmp	w22, #0x93c
  418eb0:	b.eq	418ecc <nftw@plt+0x1634c>  // b.none
  418eb4:	b.ls	418f08 <nftw@plt+0x16388>  // b.plast
  418eb8:	cmp	w22, #0x9be
  418ebc:	b.ne	418ef4 <nftw@plt+0x16374>  // b.any
  418ec0:	cmp	w1, #0x9c7
  418ec4:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  418ec8:	b	418638 <nftw@plt+0x15ab8>
  418ecc:	sub	w1, w1, #0x915
  418ed0:	cmp	w1, #0x1e
  418ed4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418ed8:	mov	x0, #0x1                   	// #1
  418edc:	mov	x2, #0x3087                	// #12423
  418ee0:	movk	x2, #0x4c48, lsl #16
  418ee4:	lsl	x1, x0, x1
  418ee8:	tst	x1, x2
  418eec:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418ef0:	b	418638 <nftw@plt+0x15ab8>
  418ef4:	cmp	w22, #0x9d7
  418ef8:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  418efc:	cmp	w1, #0x9c7
  418f00:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  418f04:	b	418638 <nftw@plt+0x15ab8>
  418f08:	cmp	w22, #0x654
  418f0c:	b.eq	4191c0 <nftw@plt+0x16640>  // b.none
  418f10:	cmp	w22, #0x655
  418f14:	b.ne	41907c <nftw@plt+0x164fc>  // b.any
  418f18:	cmp	w1, #0x623
  418f1c:	b.hi	419340 <nftw@plt+0x167c0>  // b.pmore
  418f20:	cmp	w1, #0x621
  418f24:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  418f28:	b	418638 <nftw@plt+0x15ab8>
  418f2c:	mov	w0, #0x102e                	// #4142
  418f30:	cmp	w22, w0
  418f34:	b.eq	4190fc <nftw@plt+0x1657c>  // b.none
  418f38:	b.ls	419010 <nftw@plt+0x16490>  // b.plast
  418f3c:	mov	w0, #0x309a                	// #12442
  418f40:	cmp	w22, w0
  418f44:	b.eq	4190c4 <nftw@plt+0x16544>  // b.none
  418f48:	b.ls	418fa4 <nftw@plt+0x16424>  // b.plast
  418f4c:	mov	w0, #0x10ba                	// #4282
  418f50:	movk	w0, #0x1, lsl #16
  418f54:	cmp	w22, w0
  418f58:	b.eq	418f7c <nftw@plt+0x163fc>  // b.none
  418f5c:	add	w0, w0, #0x6d
  418f60:	cmp	w22, w0
  418f64:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  418f68:	sub	w1, w1, #0x11, lsl #12
  418f6c:	sub	w1, w1, #0x131
  418f70:	cmp	w1, #0x1
  418f74:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418f78:	b	418638 <nftw@plt+0x15ab8>
  418f7c:	sub	w0, w1, #0x11, lsl #12
  418f80:	sub	w0, w0, #0x99
  418f84:	cmp	w0, #0xc
  418f88:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418f8c:	mov	x1, #0x1                   	// #1
  418f90:	mov	x2, #0x1005                	// #4101
  418f94:	lsl	x1, x1, x0
  418f98:	tst	x1, x2
  418f9c:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  418fa0:	b	418638 <nftw@plt+0x15ab8>
  418fa4:	mov	w0, #0x1b35                	// #6965
  418fa8:	cmp	w22, w0
  418fac:	b.eq	418fe4 <nftw@plt+0x16464>  // b.none
  418fb0:	mov	w0, #0x3099                	// #12441
  418fb4:	cmp	w22, w0
  418fb8:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  418fbc:	mov	w4, #0xffffcfba            	// #-12358
  418fc0:	add	w1, w1, w4
  418fc4:	cmp	w1, #0xb7
  418fc8:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418fcc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x155a0>
  418fd0:	add	x2, x2, #0x3e4
  418fd4:	ldrh	w0, [x2, w1, uxtw #1]
  418fd8:	adr	x1, 418fe4 <nftw@plt+0x16464>
  418fdc:	add	x0, x1, w0, sxth #2
  418fe0:	br	x0
  418fe4:	mov	w5, #0xffffe4fb            	// #-6917
  418fe8:	add	w0, w1, w5
  418fec:	cmp	w0, #0x3d
  418ff0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  418ff4:	mov	x1, #0x1                   	// #1
  418ff8:	mov	x2, #0x1155                	// #4437
  418ffc:	movk	x2, #0x26a0, lsl #48
  419000:	lsl	x1, x1, x0
  419004:	tst	x1, x2
  419008:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  41900c:	b	418638 <nftw@plt+0x15ab8>
  419010:	cmp	w22, #0xdca
  419014:	b.eq	4190b0 <nftw@plt+0x16530>  // b.none
  419018:	b.ls	419060 <nftw@plt+0x164e0>  // b.plast
  41901c:	cmp	w22, #0xdcf
  419020:	b.ne	419048 <nftw@plt+0x164c8>  // b.any
  419024:	sub	w1, w1, #0xdd9
  419028:	cmp	w1, #0x1
  41902c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419030:	b	418638 <nftw@plt+0x15ab8>
  419034:	cmp	w22, #0xb56
  419038:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  41903c:	cmp	w1, #0xb47
  419040:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419044:	b	418638 <nftw@plt+0x15ab8>
  419048:	cmp	w22, #0xddf
  41904c:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  419050:	sub	w1, w1, #0xdd9
  419054:	cmp	w1, #0x1
  419058:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  41905c:	b	418638 <nftw@plt+0x15ab8>
  419060:	cmp	w22, #0xd3e
  419064:	b.eq	4191f0 <nftw@plt+0x16670>  // b.none
  419068:	cmp	w22, #0xd57
  41906c:	b.ne	419090 <nftw@plt+0x16510>  // b.any
  419070:	cmp	w1, #0xd46
  419074:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419078:	b	418638 <nftw@plt+0x15ab8>
  41907c:	cmp	w22, #0x653
  419080:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  419084:	cmp	w1, #0x627
  419088:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  41908c:	b	418638 <nftw@plt+0x15ab8>
  419090:	cmp	w22, #0xcd6
  419094:	b.ne	418968 <nftw@plt+0x15de8>  // b.any
  419098:	cmp	w1, #0xcc6
  41909c:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4190a0:	b	418638 <nftw@plt+0x15ab8>
  4190a4:	cmp	w1, #0xb47
  4190a8:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4190ac:	b	418638 <nftw@plt+0x15ab8>
  4190b0:	cmp	w1, #0xdd9
  4190b4:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  4190b8:	cmp	w1, #0xddc
  4190bc:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4190c0:	b	418638 <nftw@plt+0x15ab8>
  4190c4:	mov	w0, #0x307b                	// #12411
  4190c8:	cmp	w1, w0
  4190cc:	b.hi	41910c <nftw@plt+0x1658c>  // b.pmore
  4190d0:	mov	w0, #0x306e                	// #12398
  4190d4:	cmp	w1, w0
  4190d8:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4190dc:	mov	w3, #0xffffcf91            	// #-12399
  4190e0:	add	w2, w1, w3
  4190e4:	mov	x1, #0x1                   	// #1
  4190e8:	mov	x0, #0x1249                	// #4681
  4190ec:	lsl	x1, x1, x2
  4190f0:	tst	x1, x0
  4190f4:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4190f8:	b	418638 <nftw@plt+0x15ab8>
  4190fc:	mov	w0, #0x1025                	// #4133
  419100:	cmp	w1, w0
  419104:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419108:	b	418638 <nftw@plt+0x15ab8>
  41910c:	mov	w2, #0xffffcf31            	// #-12495
  419110:	add	w2, w1, w2
  419114:	cmp	w2, #0xc
  419118:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  41911c:	mov	x1, #0x1                   	// #1
  419120:	mov	x0, #0x1249                	// #4681
  419124:	lsl	x1, x1, x2
  419128:	tst	x1, x0
  41912c:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419130:	b	418638 <nftw@plt+0x15ab8>
  419134:	mov	w0, #0x1e3d                	// #7741
  419138:	cmp	w1, w0
  41913c:	b.hi	41918c <nftw@plt+0x1660c>  // b.pmore
  419140:	mov	w0, #0x1e09                	// #7689
  419144:	cmp	w1, w0
  419148:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  41914c:	mov	x2, #0xff3f                	// #65343
  419150:	mov	w30, #0xffffe1f6            	// #-7690
  419154:	movk	x2, #0x3fc3, lsl #16
  419158:	add	w1, w1, w30
  41915c:	mov	x0, #0x1                   	// #1
  419160:	movk	x2, #0xffc3, lsl #32
  419164:	movk	x2, #0xf, lsl #48
  419168:	lsl	x1, x0, x1
  41916c:	tst	x1, x2
  419170:	b.ne	418638 <nftw@plt+0x15ab8>  // b.any
  419174:	b	4184e8 <nftw@plt+0x15968>
  419178:	cmp	w1, #0xb92
  41917c:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  419180:	cmp	w1, #0xbc6
  419184:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419188:	b	418638 <nftw@plt+0x15ab8>
  41918c:	mov	w0, #0x1e97                	// #7831
  419190:	cmp	w1, w0
  419194:	b.hi	419360 <nftw@plt+0x167e0>  // b.pmore
  419198:	mov	w0, #0x1e95                	// #7829
  41919c:	cmp	w1, w0
  4191a0:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  4191a4:	mov	w0, #0x1e4b                	// #7755
  4191a8:	cmp	w1, w0
  4191ac:	b.hi	41934c <nftw@plt+0x167cc>  // b.pmore
  4191b0:	mov	w0, #0x1e43                	// #7747
  4191b4:	cmp	w1, w0
  4191b8:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4191bc:	b	418638 <nftw@plt+0x15ab8>
  4191c0:	cmp	w1, #0x64a
  4191c4:	b.hi	419200 <nftw@plt+0x16680>  // b.pmore
  4191c8:	cmp	w1, #0x626
  4191cc:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4191d0:	sub	w1, w1, #0x627
  4191d4:	mov	x0, #0x1                   	// #1
  4191d8:	mov	x2, #0x1                   	// #1
  4191dc:	movk	x2, #0xa, lsl #32
  4191e0:	lsl	x1, x0, x1
  4191e4:	tst	x1, x2
  4191e8:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4191ec:	b	418638 <nftw@plt+0x15ab8>
  4191f0:	sub	w1, w1, #0xd46
  4191f4:	cmp	w1, #0x1
  4191f8:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4191fc:	b	418638 <nftw@plt+0x15ab8>
  419200:	sub	w2, w1, #0x6c1
  419204:	cmp	w2, #0x14
  419208:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  41920c:	mov	x1, #0x1                   	// #1
  419210:	mov	x0, #0x1                   	// #1
  419214:	movk	x0, #0x12, lsl #16
  419218:	lsl	x1, x1, x2
  41921c:	tst	x1, x0
  419220:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419224:	b	418638 <nftw@plt+0x15ab8>
  419228:	mov	w0, #0x1ffc                	// #8188
  41922c:	cmp	w1, w0
  419230:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419234:	mov	w0, #0x1fc2                	// #8130
  419238:	cmp	w1, w0
  41923c:	b.hi	41925c <nftw@plt+0x166dc>  // b.pmore
  419240:	mov	w0, #0x1fb3                	// #8115
  419244:	cmp	w1, w0
  419248:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  41924c:	mov	w0, #0x1fbc                	// #8124
  419250:	cmp	w1, w0
  419254:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419258:	b	418638 <nftw@plt+0x15ab8>
  41925c:	mov	w8, #0xffffe03d            	// #-8131
  419260:	add	w1, w1, w8
  419264:	mov	x0, #0x1                   	// #1
  419268:	mov	x2, #0x201                 	// #513
  41926c:	movk	x2, #0x201, lsl #48
  419270:	lsl	x1, x0, x1
  419274:	tst	x1, x2
  419278:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  41927c:	b	418638 <nftw@plt+0x15ab8>
  419280:	mov	w0, #0x1e53                	// #7763
  419284:	cmp	w1, w0
  419288:	b.hi	4192f0 <nftw@plt+0x16770>  // b.pmore
  41928c:	mov	w0, #0x1e4b                	// #7755
  419290:	cmp	w1, w0
  419294:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  419298:	mov	w18, #0xffffe200            	// #-7680
  41929c:	add	w2, w1, w18
  4192a0:	cmp	w2, #0x2f
  4192a4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4192a8:	mov	x0, #0x3                   	// #3
  4192ac:	mov	x1, #0x1                   	// #1
  4192b0:	movk	x0, #0xff0, lsl #16
  4192b4:	lsl	x1, x1, x2
  4192b8:	movk	x0, #0xf000, lsl #32
  4192bc:	tst	x1, x0
  4192c0:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4192c4:	b	418638 <nftw@plt+0x15ab8>
  4192c8:	cmp	w1, #0x48
  4192cc:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4192d0:	b	418638 <nftw@plt+0x15ab8>
  4192d4:	mov	w0, #0x1e23                	// #7715
  4192d8:	cmp	w1, w0
  4192dc:	b.hi	41930c <nftw@plt+0x1678c>  // b.pmore
  4192e0:	mov	w0, #0x1e21                	// #7713
  4192e4:	cmp	w1, w0
  4192e8:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4192ec:	b	418638 <nftw@plt+0x15ab8>
  4192f0:	mov	w0, #0x1e7b                	// #7803
  4192f4:	cmp	w1, w0
  4192f8:	b.hi	419320 <nftw@plt+0x167a0>  // b.pmore
  4192fc:	mov	w0, #0x1e71                	// #7793
  419300:	cmp	w1, w0
  419304:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419308:	b	418638 <nftw@plt+0x15ab8>
  41930c:	mov	w13, #0xffffe1da            	// #-7718
  419310:	add	w1, w1, w13
  419314:	cmp	w1, #0x1
  419318:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  41931c:	b	418638 <nftw@plt+0x15ab8>
  419320:	mov	w17, #0xffffe160            	// #-7840
  419324:	add	w1, w1, w17
  419328:	cmp	w1, #0x51
  41932c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419330:	b	418638 <nftw@plt+0x15ab8>
  419334:	cmp	w1, #0xb47
  419338:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  41933c:	b	418638 <nftw@plt+0x15ab8>
  419340:	cmp	w1, #0x627
  419344:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  419348:	b	4184e8 <nftw@plt+0x15968>
  41934c:	mov	w28, #0xffffe1a8            	// #-7768
  419350:	add	w1, w1, w28
  419354:	cmp	w1, #0x19
  419358:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  41935c:	b	418638 <nftw@plt+0x15ab8>
  419360:	mov	w21, #0xffffe148            	// #-7864
  419364:	add	w1, w1, w21
  419368:	cmp	w1, #0xf
  41936c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419370:	b	418638 <nftw@plt+0x15ab8>
  419374:	and	w1, w1, #0xffffffdf
  419378:	cmp	w1, #0xd1
  41937c:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419380:	b	418638 <nftw@plt+0x15ab8>
  419384:	mov	w0, #0x1e03                	// #7683
  419388:	cmp	w1, w0
  41938c:	b.hi	419ccc <nftw@plt+0x1714c>  // b.pmore
  419390:	mov	w0, #0x1e01                	// #7681
  419394:	cmp	w1, w0
  419398:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  41939c:	cmp	w1, #0x17e
  4193a0:	b.hi	419a78 <nftw@plt+0x16ef8>  // b.pmore
  4193a4:	cmp	w1, #0x142
  4193a8:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4193ac:	mov	x2, #0x33                  	// #51
  4193b0:	sub	w1, w1, #0x143
  4193b4:	movk	x2, #0x66, lsl #16
  4193b8:	mov	x0, #0x1                   	// #1
  4193bc:	movk	x2, #0x6, lsl #32
  4193c0:	lsl	x1, x0, x1
  4193c4:	movk	x2, #0xfc0, lsl #48
  4193c8:	tst	x1, x2
  4193cc:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4193d0:	b	418638 <nftw@plt+0x15ab8>
  4193d4:	cmp	w1, #0x17f
  4193d8:	b.hi	419ca8 <nftw@plt+0x17128>  // b.pmore
  4193dc:	cmp	w1, #0x159
  4193e0:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4193e4:	sub	w1, w1, #0x15a
  4193e8:	mov	x0, #0x1                   	// #1
  4193ec:	mov	x2, #0xc3                  	// #195
  4193f0:	movk	x2, #0x20, lsl #32
  4193f4:	lsl	x1, x0, x1
  4193f8:	tst	x1, x2
  4193fc:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419400:	b	418638 <nftw@plt+0x15ab8>
  419404:	cmp	w1, #0x3c5
  419408:	b.hi	41945c <nftw@plt+0x168dc>  // b.pmore
  41940c:	cmp	w1, #0x390
  419410:	b.hi	419434 <nftw@plt+0x168b4>  // b.pmore
  419414:	cmp	w1, #0x227
  419418:	b.hi	419cbc <nftw@plt+0x1713c>  // b.pmore
  41941c:	cmp	w1, #0x225
  419420:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  419424:	sub	w1, w1, #0x1ea
  419428:	cmp	w1, #0x1
  41942c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419430:	b	418638 <nftw@plt+0x15ab8>
  419434:	mov	x2, #0x101                 	// #257
  419438:	sub	w1, w1, #0x391
  41943c:	movk	x2, #0x10, lsl #16
  419440:	mov	x0, #0x1                   	// #1
  419444:	movk	x2, #0x101, lsl #32
  419448:	lsl	x1, x0, x1
  41944c:	movk	x2, #0x10, lsl #48
  419450:	tst	x1, x2
  419454:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419458:	b	418638 <nftw@plt+0x15ab8>
  41945c:	mov	w0, #0x1e37                	// #7735
  419460:	cmp	w1, w0
  419464:	b.hi	4196c8 <nftw@plt+0x16b48>  // b.pmore
  419468:	mov	w0, #0x1e35                	// #7733
  41946c:	cmp	w1, w0
  419470:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  419474:	sub	w2, w1, #0x418
  419478:	cmp	w2, #0x2b
  41947c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419480:	mov	x1, #0x1                   	// #1
  419484:	mov	x0, #0x801                 	// #2049
  419488:	movk	x0, #0x801, lsl #32
  41948c:	lsl	x1, x1, x2
  419490:	tst	x1, x0
  419494:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419498:	b	418638 <nftw@plt+0x15ab8>
  41949c:	cmp	w1, #0x4d9
  4194a0:	b.hi	4199d4 <nftw@plt+0x16e54>  // b.pmore
  4194a4:	cmp	w1, #0x4d7
  4194a8:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4194ac:	b	418638 <nftw@plt+0x15ab8>
  4194b0:	cmp	w1, #0x16b
  4194b4:	b.hi	4198cc <nftw@plt+0x16d4c>  // b.pmore
  4194b8:	cmp	w1, #0x169
  4194bc:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  4194c0:	and	w1, w1, #0xffffffdf
  4194c4:	cmp	w1, #0xd5
  4194c8:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4194cc:	b	418638 <nftw@plt+0x15ab8>
  4194d0:	mov	w0, #0x1ffe                	// #8190
  4194d4:	cmp	w1, w0
  4194d8:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4194dc:	mov	w0, #0x1eff                	// #7935
  4194e0:	cmp	w1, w0
  4194e4:	b.ls	419be0 <nftw@plt+0x17060>  // b.plast
  4194e8:	mov	w13, #0xffffe100            	// #-7936
  4194ec:	add	w1, w1, w13
  4194f0:	cmp	w1, #0xfe
  4194f4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4194f8:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x155a0>
  4194fc:	add	x0, x0, #0x554
  419500:	ldrh	w0, [x0, w1, uxtw #1]
  419504:	adr	x1, 419510 <nftw@plt+0x16990>
  419508:	add	x0, x1, w0, sxth #2
  41950c:	br	x0
  419510:	mov	w0, #0xffffe1a0            	// #-7776
  419514:	add	w2, w1, w0
  419518:	cmp	w2, #0x37
  41951c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419520:	mov	x1, #0x1                   	// #1
  419524:	mov	x0, #0xcf3                 	// #3315
  419528:	movk	x0, #0x80, lsl #48
  41952c:	lsl	x1, x1, x2
  419530:	tst	x1, x0
  419534:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419538:	b	418638 <nftw@plt+0x15ab8>
  41953c:	mov	w4, #0xffffe1fe            	// #-7682
  419540:	add	w1, w1, w4
  419544:	cmp	w1, #0xf7
  419548:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  41954c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x155a0>
  419550:	add	x0, x0, #0x754
  419554:	ldrh	w0, [x0, w1, uxtw #1]
  419558:	adr	x1, 419564 <nftw@plt+0x169e4>
  41955c:	add	x0, x1, w0, sxth #2
  419560:	br	x0
  419564:	mov	w0, #0x1ffc                	// #8188
  419568:	cmp	w1, w0
  41956c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419570:	mov	w0, #0x1fc2                	// #8130
  419574:	cmp	w1, w0
  419578:	b.hi	419598 <nftw@plt+0x16a18>  // b.pmore
  41957c:	mov	w0, #0x1fb3                	// #8115
  419580:	cmp	w1, w0
  419584:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  419588:	mov	w0, #0x1fbc                	// #8124
  41958c:	cmp	w1, w0
  419590:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419594:	b	418638 <nftw@plt+0x15ab8>
  419598:	mov	w7, #0xffffe03d            	// #-8131
  41959c:	add	w1, w1, w7
  4195a0:	mov	x0, #0x1                   	// #1
  4195a4:	mov	x2, #0x201                 	// #513
  4195a8:	movk	x2, #0x201, lsl #48
  4195ac:	lsl	x1, x0, x1
  4195b0:	tst	x1, x2
  4195b4:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4195b8:	b	418638 <nftw@plt+0x15ab8>
  4195bc:	sub	w1, w1, #0xf9
  4195c0:	cmp	w1, #0x3
  4195c4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4195c8:	b	418638 <nftw@plt+0x15ab8>
  4195cc:	mov	w0, #0x1e7b                	// #7803
  4195d0:	cmp	w1, w0
  4195d4:	b.hi	419694 <nftw@plt+0x16b14>  // b.pmore
  4195d8:	mov	w0, #0x1e77                	// #7799
  4195dc:	cmp	w1, w0
  4195e0:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  4195e4:	cmp	w1, #0x1dc
  4195e8:	b.hi	419684 <nftw@plt+0x16b04>  // b.pmore
  4195ec:	cmp	w1, #0x1d2
  4195f0:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4195f4:	b	418638 <nftw@plt+0x15ab8>
  4195f8:	sub	w1, w1, #0x228
  4195fc:	cmp	w1, #0x1
  419600:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419604:	b	418638 <nftw@plt+0x15ab8>
  419608:	mov	w0, #0x1f7c                	// #8060
  41960c:	cmp	w1, w0
  419610:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  419614:	b.hi	419720 <nftw@plt+0x16ba0>  // b.pmore
  419618:	mov	w0, #0x1f70                	// #8048
  41961c:	cmp	w1, w0
  419620:	b.hi	4196e8 <nftw@plt+0x16b68>  // b.pmore
  419624:	mov	w0, #0x1f5f                	// #8031
  419628:	cmp	w1, w0
  41962c:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  419630:	mov	w0, #0x1f0f                	// #7951
  419634:	cmp	w1, w0
  419638:	b.hi	4196f8 <nftw@plt+0x16b78>  // b.pmore
  41963c:	mov	w0, #0x1eff                	// #7935
  419640:	cmp	w1, w0
  419644:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419648:	b	418638 <nftw@plt+0x15ab8>
  41964c:	cmp	w1, #0x443
  419650:	b.hi	4196a8 <nftw@plt+0x16b28>  // b.pmore
  419654:	cmp	w1, #0x40f
  419658:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  41965c:	mov	x2, #0x161                 	// #353
  419660:	sub	w1, w1, #0x410
  419664:	movk	x2, #0x8, lsl #16
  419668:	mov	x0, #0x1                   	// #1
  41966c:	movk	x2, #0x161, lsl #32
  419670:	lsl	x1, x0, x1
  419674:	movk	x2, #0x8, lsl #48
  419678:	tst	x1, x2
  41967c:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419680:	b	418638 <nftw@plt+0x15ab8>
  419684:	sub	w1, w1, #0x214
  419688:	cmp	w1, #0x3
  41968c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419690:	b	418638 <nftw@plt+0x15ab8>
  419694:	mov	w3, #0xffffe11a            	// #-7910
  419698:	add	w1, w1, w3
  41969c:	cmp	w1, #0x1
  4196a0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4196a4:	b	418638 <nftw@plt+0x15ab8>
  4196a8:	mov	w0, #0x1fb3                	// #8115
  4196ac:	cmp	w1, w0
  4196b0:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  4196b4:	b.ls	41970c <nftw@plt+0x16b8c>  // b.plast
  4196b8:	mov	w0, #0x1fbc                	// #8124
  4196bc:	cmp	w1, w0
  4196c0:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4196c4:	b	418638 <nftw@plt+0x15ab8>
  4196c8:	mov	w0, #0x1fb3                	// #8115
  4196cc:	cmp	w1, w0
  4196d0:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  4196d4:	b.ls	419740 <nftw@plt+0x16bc0>  // b.plast
  4196d8:	mov	w0, #0x1fbc                	// #8124
  4196dc:	cmp	w1, w0
  4196e0:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4196e4:	b	418638 <nftw@plt+0x15ab8>
  4196e8:	mov	w0, #0x1f74                	// #8052
  4196ec:	cmp	w1, w0
  4196f0:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4196f4:	b	418638 <nftw@plt+0x15ab8>
  4196f8:	mov	w6, #0xffffe0e0            	// #-7968
  4196fc:	add	w1, w1, w6
  419700:	cmp	w1, #0xf
  419704:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419708:	b	418638 <nftw@plt+0x15ab8>
  41970c:	mov	w10, #0xffffe160            	// #-7840
  419710:	add	w1, w1, w10
  419714:	cmp	w1, #0x1
  419718:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  41971c:	b	418638 <nftw@plt+0x15ab8>
  419720:	mov	w0, #0x1fc6                	// #8134
  419724:	cmp	w1, w0
  419728:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  41972c:	and	w1, w1, #0xffffffbf
  419730:	mov	w0, #0x1fb6                	// #8118
  419734:	cmp	w1, w0
  419738:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  41973c:	b	418638 <nftw@plt+0x15ab8>
  419740:	mov	w11, #0xffffe1a6            	// #-7770
  419744:	add	w1, w1, w11
  419748:	cmp	w1, #0x1
  41974c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419750:	b	418638 <nftw@plt+0x15ab8>
  419754:	sub	w1, w1, #0x423
  419758:	tst	w1, #0xffffffdf
  41975c:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419760:	b	418638 <nftw@plt+0x15ab8>
  419764:	cmp	w1, #0x103
  419768:	b.hi	4197a8 <nftw@plt+0x16c28>  // b.pmore
  41976c:	cmp	w1, #0xc9
  419770:	b.hi	419780 <nftw@plt+0x16c00>  // b.pmore
  419774:	cmp	w1, #0xc2
  419778:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  41977c:	b	418638 <nftw@plt+0x15ab8>
  419780:	mov	x2, #0x401                 	// #1025
  419784:	sub	w1, w1, #0xca
  419788:	movk	x2, #0x100, lsl #16
  41978c:	mov	x0, #0x1                   	// #1
  419790:	movk	x2, #0x401, lsl #32
  419794:	lsl	x1, x0, x1
  419798:	movk	x2, #0x300, lsl #48
  41979c:	tst	x1, x2
  4197a0:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4197a4:	b	418638 <nftw@plt+0x15ab8>
  4197a8:	cmp	w1, #0x1a1
  4197ac:	b.hi	4197e4 <nftw@plt+0x16c64>  // b.pmore
  4197b0:	cmp	w1, #0x19f
  4197b4:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4197b8:	b	418638 <nftw@plt+0x15ab8>
  4197bc:	sub	w1, w1, #0x474
  4197c0:	cmp	w1, #0x1
  4197c4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4197c8:	b	418638 <nftw@plt+0x15ab8>
  4197cc:	cmp	w1, #0x1b7
  4197d0:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  4197d4:	b.ls	4197f4 <nftw@plt+0x16c74>  // b.plast
  4197d8:	cmp	w1, #0x292
  4197dc:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4197e0:	b	418638 <nftw@plt+0x15ab8>
  4197e4:	sub	w1, w1, #0x1af
  4197e8:	cmp	w1, #0x1
  4197ec:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4197f0:	b	418638 <nftw@plt+0x15ab8>
  4197f4:	and	w1, w1, #0xffffffdf
  4197f8:	cmp	w1, #0xdc
  4197fc:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419800:	b	418638 <nftw@plt+0x15ab8>
  419804:	cmp	w1, #0x103
  419808:	b.hi	419848 <nftw@plt+0x16cc8>  // b.pmore
  41980c:	cmp	w1, #0xc9
  419810:	b.hi	419820 <nftw@plt+0x16ca0>  // b.pmore
  419814:	cmp	w1, #0xc2
  419818:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  41981c:	b	418638 <nftw@plt+0x15ab8>
  419820:	mov	x2, #0x401                 	// #1025
  419824:	sub	w1, w1, #0xca
  419828:	movk	x2, #0x100, lsl #16
  41982c:	mov	x0, #0x1                   	// #1
  419830:	movk	x2, #0x401, lsl #32
  419834:	lsl	x1, x0, x1
  419838:	movk	x2, #0x300, lsl #48
  41983c:	tst	x1, x2
  419840:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419844:	b	418638 <nftw@plt+0x15ab8>
  419848:	cmp	w1, #0x1a1
  41984c:	b.hi	41987c <nftw@plt+0x16cfc>  // b.pmore
  419850:	cmp	w1, #0x19f
  419854:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419858:	b	418638 <nftw@plt+0x15ab8>
  41985c:	cmp	w1, #0x1a1
  419860:	b.hi	41988c <nftw@plt+0x16d0c>  // b.pmore
  419864:	cmp	w1, #0x19f
  419868:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  41986c:	sub	w1, w1, #0x14c
  419870:	cmp	w1, #0x1
  419874:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419878:	b	418638 <nftw@plt+0x15ab8>
  41987c:	sub	w1, w1, #0x1af
  419880:	cmp	w1, #0x1
  419884:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419888:	b	418638 <nftw@plt+0x15ab8>
  41988c:	sub	w1, w1, #0x1af
  419890:	cmp	w1, #0x1
  419894:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419898:	b	418638 <nftw@plt+0x15ab8>
  41989c:	cmp	w1, #0x438
  4198a0:	b.ls	4198e0 <nftw@plt+0x16d60>  // b.plast
  4198a4:	mov	w14, #0xffffe100            	// #-7936
  4198a8:	add	w1, w1, w14
  4198ac:	cmp	w1, #0xfe
  4198b0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4198b4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x155a0>
  4198b8:	add	x0, x0, #0x944
  4198bc:	ldrh	w0, [x0, w1, uxtw #1]
  4198c0:	adr	x1, 4198cc <nftw@plt+0x16d4c>
  4198c4:	add	x0, x1, w0, sxth #2
  4198c8:	br	x0
  4198cc:	cmp	w1, #0x399
  4198d0:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  4198d4:	cmp	w1, #0x3a5
  4198d8:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  4198dc:	b	418638 <nftw@plt+0x15ab8>
  4198e0:	cmp	w1, #0x414
  4198e4:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  4198e8:	sub	w1, w1, #0x415
  4198ec:	mov	x0, #0x1                   	// #1
  4198f0:	mov	x2, #0x9                   	// #9
  4198f4:	movk	x2, #0x9, lsl #32
  4198f8:	lsl	x1, x0, x1
  4198fc:	tst	x1, x2
  419900:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419904:	b	418638 <nftw@plt+0x15ab8>
  419908:	sub	w1, w1, #0x73
  41990c:	cmp	w1, #0x1
  419910:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419914:	b	418638 <nftw@plt+0x15ab8>
  419918:	cmp	w1, #0x41
  41991c:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419920:	b	418638 <nftw@plt+0x15ab8>
  419924:	cmp	w1, #0x103
  419928:	b.hi	419968 <nftw@plt+0x16de8>  // b.pmore
  41992c:	cmp	w1, #0xff
  419930:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419934:	b	418638 <nftw@plt+0x15ab8>
  419938:	cmp	w1, #0x227
  41993c:	b.hi	419978 <nftw@plt+0x16df8>  // b.pmore
  419940:	cmp	w1, #0x1f9
  419944:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419948:	sub	w1, w1, #0x1fa
  41994c:	mov	x0, #0x1                   	// #1
  419950:	mov	x2, #0x3c3                 	// #963
  419954:	movk	x2, #0x3000, lsl #32
  419958:	lsl	x1, x0, x1
  41995c:	tst	x1, x2
  419960:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419964:	b	418638 <nftw@plt+0x15ab8>
  419968:	sub	w1, w1, #0x1cd
  41996c:	cmp	w1, #0x1
  419970:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419974:	b	418638 <nftw@plt+0x15ab8>
  419978:	mov	w0, #0x1eab                	// #7851
  41997c:	cmp	w1, w0
  419980:	b.hi	419a2c <nftw@plt+0x16eac>  // b.pmore
  419984:	mov	w0, #0x1ea1                	// #7841
  419988:	cmp	w1, w0
  41998c:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419990:	b	418638 <nftw@plt+0x15ab8>
  419994:	sub	w1, w1, #0x14c
  419998:	cmp	w1, #0x5
  41999c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4199a0:	b	418638 <nftw@plt+0x15ab8>
  4199a4:	mov	w12, #0xffffe160            	// #-7840
  4199a8:	add	w2, w1, w12
  4199ac:	cmp	w2, #0x2d
  4199b0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4199b4:	mov	x0, #0x3                   	// #3
  4199b8:	mov	x1, #0x1                   	// #1
  4199bc:	movk	x0, #0x300, lsl #16
  4199c0:	lsl	x1, x1, x2
  4199c4:	movk	x0, #0x3000, lsl #32
  4199c8:	tst	x1, x0
  4199cc:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  4199d0:	b	418638 <nftw@plt+0x15ab8>
  4199d4:	sub	w1, w1, #0x4e8
  4199d8:	cmp	w1, #0x1
  4199dc:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  4199e0:	b	418638 <nftw@plt+0x15ab8>
  4199e4:	mov	w0, #0x1e53                	// #7763
  4199e8:	cmp	w1, w0
  4199ec:	b.hi	419a4c <nftw@plt+0x16ecc>  // b.pmore
  4199f0:	mov	w0, #0x1e4b                	// #7755
  4199f4:	cmp	w1, w0
  4199f8:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  4199fc:	cmp	w1, #0x1dc
  419a00:	b.ls	419a40 <nftw@plt+0x16ec0>  // b.plast
  419a04:	sub	w2, w1, #0x20c
  419a08:	cmp	w2, #0x25
  419a0c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419a10:	mov	x1, #0x1                   	// #1
  419a14:	mov	x0, #0x3fc0000000          	// #273804165120
  419a18:	movk	x0, #0xf0f
  419a1c:	lsl	x1, x1, x2
  419a20:	tst	x1, x0
  419a24:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419a28:	b	418638 <nftw@plt+0x15ab8>
  419a2c:	mov	w2, #0xffffe152            	// #-7854
  419a30:	add	w1, w1, w2
  419a34:	cmp	w1, #0x7
  419a38:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419a3c:	b	418638 <nftw@plt+0x15ab8>
  419a40:	cmp	w1, #0x1d0
  419a44:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419a48:	b	418638 <nftw@plt+0x15ab8>
  419a4c:	mov	w0, #0x1ed9                	// #7897
  419a50:	cmp	w1, w0
  419a54:	b.hi	419d4c <nftw@plt+0x171cc>  // b.pmore
  419a58:	mov	w0, #0x1ecb                	// #7883
  419a5c:	cmp	w1, w0
  419a60:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  419a64:	mov	w6, #0xffffe18e            	// #-7794
  419a68:	add	w1, w1, w6
  419a6c:	cmp	w1, #0x9
  419a70:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419a74:	b	418638 <nftw@plt+0x15ab8>
  419a78:	sub	w2, w1, #0x1e8
  419a7c:	cmp	w2, #0x37
  419a80:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419a84:	mov	x0, #0x3                   	// #3
  419a88:	mov	x1, #0x1                   	// #1
  419a8c:	movk	x0, #0x3, lsl #16
  419a90:	lsl	x1, x1, x2
  419a94:	movk	x0, #0xf00, lsl #32
  419a98:	movk	x0, #0x80, lsl #48
  419a9c:	tst	x1, x0
  419aa0:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419aa4:	b	418638 <nftw@plt+0x15ab8>
  419aa8:	sub	w2, w1, #0xc8
  419aac:	cmp	w2, #0x27
  419ab0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419ab4:	mov	x1, #0x1                   	// #1
  419ab8:	mov	x0, #0xff000000ff          	// #1095216660735
  419abc:	movk	x0, #0x1e, lsl #16
  419ac0:	lsl	x1, x1, x2
  419ac4:	tst	x1, x0
  419ac8:	b.ne	418638 <nftw@plt+0x15ab8>  // b.any
  419acc:	b	4184e8 <nftw@plt+0x15968>
  419ad0:	mov	w0, #0x1e45                	// #7749
  419ad4:	cmp	w1, w0
  419ad8:	b.hi	419b3c <nftw@plt+0x16fbc>  // b.pmore
  419adc:	mov	w0, #0x1e09                	// #7689
  419ae0:	cmp	w1, w0
  419ae4:	b.hi	419b18 <nftw@plt+0x16f98>  // b.pmore
  419ae8:	cmp	w1, #0x1dc
  419aec:	b.ls	419b7c <nftw@plt+0x16ffc>  // b.plast
  419af0:	sub	w2, w1, #0x1f8
  419af4:	cmp	w2, #0x1f
  419af8:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419afc:	mov	x1, #0x1                   	// #1
  419b00:	mov	x0, #0xf003                	// #61443
  419b04:	movk	x0, #0xf000, lsl #16
  419b08:	lsl	x1, x1, x2
  419b0c:	tst	x1, x0
  419b10:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419b14:	b	418638 <nftw@plt+0x15ab8>
  419b18:	mov	w15, #0xffffe1f6            	// #-7690
  419b1c:	add	w1, w1, w15
  419b20:	mov	x0, #0x1                   	// #1
  419b24:	mov	x2, #0x3c03                	// #15363
  419b28:	movk	x2, #0xc00, lsl #48
  419b2c:	lsl	x1, x0, x1
  419b30:	tst	x1, x2
  419b34:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419b38:	b	418638 <nftw@plt+0x15ab8>
  419b3c:	mov	w0, #0x1e97                	// #7831
  419b40:	cmp	w1, w0
  419b44:	b.hi	419b88 <nftw@plt+0x17008>  // b.pmore
  419b48:	mov	w0, #0x1e69                	// #7785
  419b4c:	cmp	w1, w0
  419b50:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419b54:	mov	w16, #0xffffe196            	// #-7786
  419b58:	mov	x2, #0xc003                	// #49155
  419b5c:	add	w1, w1, w16
  419b60:	mov	x0, #0x1                   	// #1
  419b64:	movk	x2, #0x3, lsl #16
  419b68:	movk	x2, #0x2000, lsl #32
  419b6c:	lsl	x1, x0, x1
  419b70:	tst	x1, x2
  419b74:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419b78:	b	418638 <nftw@plt+0x15ab8>
  419b7c:	cmp	w1, #0x1d2
  419b80:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419b84:	b	418638 <nftw@plt+0x15ab8>
  419b88:	mov	w0, #0x1ec5                	// #7877
  419b8c:	cmp	w1, w0
  419b90:	b.hi	419bf4 <nftw@plt+0x17074>  // b.pmore
  419b94:	mov	w0, #0x1eb9                	// #7865
  419b98:	cmp	w1, w0
  419b9c:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419ba0:	b	418638 <nftw@plt+0x15ab8>
  419ba4:	mov	w0, #0x1e17                	// #7703
  419ba8:	cmp	w1, w0
  419bac:	b.hi	419c2c <nftw@plt+0x170ac>  // b.pmore
  419bb0:	mov	w0, #0x1e13                	// #7699
  419bb4:	cmp	w1, w0
  419bb8:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  419bbc:	cmp	w1, #0x1dc
  419bc0:	b.hi	419c18 <nftw@plt+0x17098>  // b.pmore
  419bc4:	cmp	w1, #0x1d2
  419bc8:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  419bcc:	cmp	w1, #0x171
  419bd0:	b.hi	419c08 <nftw@plt+0x17088>  // b.pmore
  419bd4:	cmp	w1, #0x167
  419bd8:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419bdc:	b	418638 <nftw@plt+0x15ab8>
  419be0:	cmp	w1, #0x433
  419be4:	b.eq	418638 <nftw@plt+0x15ab8>  // b.none
  419be8:	cmp	w1, #0x43a
  419bec:	b.ne	4184e8 <nftw@plt+0x15968>  // b.any
  419bf0:	b	418638 <nftw@plt+0x15ab8>
  419bf4:	mov	w14, #0xffffe11a            	// #-7910
  419bf8:	add	w1, w1, w14
  419bfc:	cmp	w1, #0x1
  419c00:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419c04:	b	418638 <nftw@plt+0x15ab8>
  419c08:	sub	w1, w1, #0x1cf
  419c0c:	cmp	w1, #0x1
  419c10:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419c14:	b	418638 <nftw@plt+0x15ab8>
  419c18:	cmp	w1, #0x20b
  419c1c:	b.hi	419c84 <nftw@plt+0x17104>  // b.pmore
  419c20:	cmp	w1, #0x203
  419c24:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419c28:	b	418638 <nftw@plt+0x15ab8>
  419c2c:	mov	w0, #0x1ee7                	// #7911
  419c30:	cmp	w1, w0
  419c34:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419c38:	mov	w0, #0x1eb9                	// #7865
  419c3c:	cmp	w1, w0
  419c40:	b.hi	419c60 <nftw@plt+0x170e0>  // b.pmore
  419c44:	mov	w0, #0x1e2f                	// #7727
  419c48:	cmp	w1, w0
  419c4c:	b.hi	419c94 <nftw@plt+0x17114>  // b.pmore
  419c50:	mov	w0, #0x1e2d                	// #7725
  419c54:	cmp	w1, w0
  419c58:	b.ls	4184e8 <nftw@plt+0x15968>  // b.plast
  419c5c:	b	418638 <nftw@plt+0x15ab8>
  419c60:	mov	w12, #0xffffe146            	// #-7866
  419c64:	add	w1, w1, w12
  419c68:	mov	x0, #0x1                   	// #1
  419c6c:	mov	x2, #0xcfff                	// #53247
  419c70:	movk	x2, #0x3000, lsl #32
  419c74:	lsl	x1, x0, x1
  419c78:	tst	x1, x2
  419c7c:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419c80:	b	418638 <nftw@plt+0x15ab8>
  419c84:	sub	w1, w1, #0x214
  419c88:	cmp	w1, #0x3
  419c8c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419c90:	b	418638 <nftw@plt+0x15ab8>
  419c94:	mov	w11, #0xffffe188            	// #-7800
  419c98:	add	w1, w1, w11
  419c9c:	cmp	w1, #0x3
  419ca0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419ca4:	b	418638 <nftw@plt+0x15ab8>
  419ca8:	mov	w9, #0xffffe19e            	// #-7778
  419cac:	add	w1, w1, w9
  419cb0:	cmp	w1, #0x1
  419cb4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419cb8:	b	418638 <nftw@plt+0x15ab8>
  419cbc:	sub	w1, w1, #0x22e
  419cc0:	cmp	w1, #0x1
  419cc4:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419cc8:	b	418638 <nftw@plt+0x15ab8>
  419ccc:	mov	w0, #0x1e59                	// #7769
  419cd0:	cmp	w1, w0
  419cd4:	b.hi	419d20 <nftw@plt+0x171a0>  // b.pmore
  419cd8:	mov	w0, #0x1e22                	// #7714
  419cdc:	cmp	w1, w0
  419ce0:	b.hi	419cf8 <nftw@plt+0x17178>  // b.pmore
  419ce4:	mov	w9, #0xffffe1f6            	// #-7690
  419ce8:	add	w1, w1, w9
  419cec:	cmp	w1, #0x1
  419cf0:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419cf4:	b	418638 <nftw@plt+0x15ab8>
  419cf8:	mov	w10, #0xffffe1dd            	// #-7715
  419cfc:	mov	x2, #0x6011                	// #24593
  419d00:	add	w1, w1, w10
  419d04:	mov	x0, #0x1                   	// #1
  419d08:	movk	x2, #0x6, lsl #32
  419d0c:	movk	x2, #0x60, lsl #48
  419d10:	lsl	x1, x0, x1
  419d14:	tst	x1, x2
  419d18:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419d1c:	b	418638 <nftw@plt+0x15ab8>
  419d20:	mov	w8, #0xffffe196            	// #-7786
  419d24:	add	w2, w1, w8
  419d28:	cmp	w2, #0x2d
  419d2c:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419d30:	mov	x1, #0x1                   	// #1
  419d34:	mov	x0, #0x3                   	// #3
  419d38:	movk	x0, #0x20c0, lsl #32
  419d3c:	lsl	x1, x1, x2
  419d40:	tst	x1, x0
  419d44:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  419d48:	b	418638 <nftw@plt+0x15ab8>
  419d4c:	mov	w5, #0xffffe11c            	// #-7908
  419d50:	add	w1, w1, w5
  419d54:	cmp	w1, #0x3
  419d58:	b.hi	4184e8 <nftw@plt+0x15968>  // b.pmore
  419d5c:	b	418638 <nftw@plt+0x15ab8>
  419d60:	stp	x29, x30, [sp, #-352]!
  419d64:	mov	x29, sp
  419d68:	add	x8, sp, #0x128
  419d6c:	stp	x19, x20, [sp, #16]
  419d70:	stp	x21, x22, [sp, #32]
  419d74:	stp	x23, x24, [sp, #48]
  419d78:	stp	x25, x26, [sp, #64]
  419d7c:	mov	x26, x0
  419d80:	stp	x27, x28, [sp, #80]
  419d84:	mov	x27, x1
  419d88:	mov	w1, w4
  419d8c:	str	x3, [sp, #120]
  419d90:	stp	x2, x5, [sp, #184]
  419d94:	bl	417158 <nftw@plt+0x145d8>
  419d98:	ldr	w0, [sp, #312]
  419d9c:	cmp	x6, #0x0
  419da0:	str	w0, [sp, #200]
  419da4:	cset	w1, ne  // ne = any
  419da8:	cmp	x5, #0x0
  419dac:	str	w1, [sp, #156]
  419db0:	cset	w0, ne  // ne = any
  419db4:	cmp	w0, w1
  419db8:	ldp	x23, x25, [sp, #296]
  419dbc:	b.ne	41aa28 <nftw@plt+0x17ea8>  // b.any
  419dc0:	ldr	x0, [sp, #120]
  419dc4:	mov	x22, x6
  419dc8:	cbz	x0, 41a8c4 <nftw@plt+0x17d44>
  419dcc:	ldr	w0, [x27]
  419dd0:	mov	w1, #0x100                 	// #256
  419dd4:	cmp	w0, w1
  419dd8:	csel	w0, w0, w1, cs  // cs = hs, nlast
  419ddc:	str	x0, [sp, #280]
  419de0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  419de4:	str	x0, [sp, #272]
  419de8:	ldr	x0, [sp, #184]
  419dec:	str	xzr, [sp, #288]
  419df0:	cbz	x0, 41aa18 <nftw@plt+0x17e98>
  419df4:	ldr	x0, [sp, #120]
  419df8:	mov	x2, #0x1                   	// #1
  419dfc:	mov	x28, #0x0                   	// #0
  419e00:	str	x26, [sp, #112]
  419e04:	cmp	x0, #0x0
  419e08:	add	x0, sp, #0x110
  419e0c:	mov	x1, x0
  419e10:	csel	x21, x0, xzr, ne  // ne = any
  419e14:	ldrsw	x0, [sp, #200]
  419e18:	str	x1, [sp, #128]
  419e1c:	mov	x1, #0x20                  	// #32
  419e20:	cmp	x0, #0x20
  419e24:	stp	x27, xzr, [sp, #160]
  419e28:	csel	x0, x0, x1, ls  // ls = plast
  419e2c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x155a0>
  419e30:	add	x1, x1, #0xbf8
  419e34:	lsl	x0, x2, x0
  419e38:	sub	x0, x0, #0x1
  419e3c:	str	x0, [sp, #176]
  419e40:	str	w0, [sp, #204]
  419e44:	add	x0, x1, #0xc0
  419e48:	str	x0, [sp, #208]
  419e4c:	ldr	x0, [sp, #160]
  419e50:	ldr	x8, [x0, #8]
  419e54:	ldr	x0, [sp, #192]
  419e58:	ldrb	w1, [x8]
  419e5c:	cmp	w1, #0x75
  419e60:	cbz	x0, 41a7f0 <nftw@plt+0x17c70>
  419e64:	ldr	x2, [sp, #168]
  419e68:	add	x28, x0, x2, lsl #4
  419e6c:	b.eq	41a828 <nftw@plt+0x17ca8>  // b.none
  419e70:	cmp	w1, #0x55
  419e74:	mov	w2, #0x4c                  	// #76
  419e78:	mov	x0, x8
  419e7c:	ccmp	w1, w2, #0x4, ne  // ne = any
  419e80:	b.ne	419e8c <nftw@plt+0x1730c>  // b.any
  419e84:	ldrb	w1, [x8, #1]
  419e88:	add	x0, x8, #0x1
  419e8c:	cmp	w1, #0x52
  419e90:	b.eq	41a0ec <nftw@plt+0x1756c>  // b.none
  419e94:	cmp	w1, #0x22
  419e98:	mov	w2, #0x27                  	// #39
  419e9c:	ccmp	w1, w2, #0x4, ne  // ne = any
  419ea0:	b.ne	41a974 <nftw@plt+0x17df4>  // b.any
  419ea4:	add	x5, x0, #0x1
  419ea8:	cbz	x28, 419ec8 <nftw@plt+0x17348>
  419eac:	ldr	w0, [x28]
  419eb0:	mov	w1, #0x60000000            	// #1610612736
  419eb4:	cmp	w0, w1
  419eb8:	b.hi	419ec8 <nftw@plt+0x17348>  // b.pmore
  419ebc:	ldr	w1, [x28, #4]
  419ec0:	add	w0, w1, w0
  419ec4:	str	w0, [x28]
  419ec8:	ldr	x0, [sp, #160]
  419ecc:	mov	x26, x20
  419ed0:	mov	x20, x5
  419ed4:	ldr	w0, [x0]
  419ed8:	sub	x0, x0, #0x1
  419edc:	add	x24, x8, x0
  419ee0:	cmp	x20, x24
  419ee4:	b.cs	419fe0 <nftw@plt+0x17460>  // b.hs, b.nlast
  419ee8:	mov	x27, x20
  419eec:	b	419efc <nftw@plt+0x1737c>
  419ef0:	add	x27, x27, #0x1
  419ef4:	cmp	x24, x27
  419ef8:	b.eq	41a090 <nftw@plt+0x17510>  // b.none
  419efc:	ldrb	w0, [x27]
  419f00:	cmp	w0, #0x5c
  419f04:	b.ne	419ef0 <nftw@plt+0x17370>  // b.any
  419f08:	cmp	x20, x27
  419f0c:	b.cc	41a094 <nftw@plt+0x17514>  // b.lo, b.ul, b.last
  419f10:	cmp	x24, x27
  419f14:	b.ls	419fe0 <nftw@plt+0x17460>  // b.plast
  419f18:	add	x2, x27, #0x1
  419f1c:	cbz	x28, 419f40 <nftw@plt+0x173c0>
  419f20:	ldr	w19, [x28]
  419f24:	mov	w0, #0x60000000            	// #1610612736
  419f28:	cmp	w19, w0
  419f2c:	b.hi	419f3c <nftw@plt+0x173bc>  // b.pmore
  419f30:	ldr	w0, [x28, #4]
  419f34:	add	w0, w0, w19
  419f38:	str	w0, [x28]
  419f3c:	str	w19, [sp, #104]
  419f40:	ldrb	w3, [x27, #1]
  419f44:	strb	w3, [sp, #235]
  419f48:	sub	w0, w3, #0x22
  419f4c:	cmp	w0, #0x59
  419f50:	b.ls	41a218 <nftw@plt+0x17698>  // b.plast
  419f54:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  419f58:	add	x0, x0, #0x248
  419f5c:	mov	w1, #0xac                  	// #172
  419f60:	ldrh	w0, [x0, w3, sxtw #1]
  419f64:	tst	w1, w0
  419f68:	b.eq	41a350 <nftw@plt+0x177d0>  // b.none
  419f6c:	ldr	x0, [sp, #112]
  419f70:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  419f74:	mov	w1, #0x2                   	// #2
  419f78:	add	x2, x2, #0x9d8
  419f7c:	bl	41f298 <nftw@plt+0x1c718>
  419f80:	cbz	x21, 419fa0 <nftw@plt+0x17420>
  419f84:	mov	x3, x21
  419f88:	add	x1, sp, #0xeb
  419f8c:	mov	x0, x25
  419f90:	mov	x2, #0x1                   	// #1
  419f94:	blr	x23
  419f98:	tst	w0, #0xff
  419f9c:	b.eq	41a078 <nftw@plt+0x174f8>  // b.none
  419fa0:	cbz	x28, 419fd4 <nftw@plt+0x17454>
  419fa4:	ldr	w1, [x28]
  419fa8:	mov	w0, #0x60000000            	// #1610612736
  419fac:	cmp	w1, w0
  419fb0:	b.hi	419fc0 <nftw@plt+0x17440>  // b.pmore
  419fb4:	ldr	w0, [x28, #4]
  419fb8:	add	w0, w0, w1
  419fbc:	str	w0, [x28]
  419fc0:	bfxil	x26, x19, #0, #32
  419fc4:	mov	x0, x22
  419fc8:	bfi	x26, x1, #32, #32
  419fcc:	mov	x1, x26
  419fd0:	bl	418028 <nftw@plt+0x154a8>
  419fd4:	add	x20, x27, #0x2
  419fd8:	cmp	x20, x24
  419fdc:	b.cc	419ee8 <nftw@plt+0x17368>  // b.lo, b.ul, b.last
  419fe0:	mov	x20, x26
  419fe4:	ldp	x1, x0, [sp, #160]
  419fe8:	add	x1, x1, #0x10
  419fec:	add	x0, x0, #0x1
  419ff0:	stp	x1, x0, [sp, #160]
  419ff4:	ldr	x1, [sp, #184]
  419ff8:	cmp	x1, x0
  419ffc:	b.ne	419e4c <nftw@plt+0x172cc>  // b.any
  41a000:	ldp	x26, x0, [sp, #112]
  41a004:	cbz	x0, 41a040 <nftw@plt+0x174c0>
  41a008:	ldr	w4, [sp, #200]
  41a00c:	mov	w2, #0x0                   	// #0
  41a010:	ldr	x3, [sp, #128]
  41a014:	add	x1, x26, #0x4da
  41a018:	ldr	x0, [x26, #1216]
  41a01c:	bl	417218 <nftw@plt+0x14698>
  41a020:	ldr	x0, [sp, #272]
  41a024:	ldr	x1, [sp, #288]
  41a028:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41a02c:	str	x0, [sp, #272]
  41a030:	ldr	x2, [sp, #120]
  41a034:	ldr	x1, [sp, #288]
  41a038:	str	w1, [x2]
  41a03c:	str	x0, [x2, #8]
  41a040:	cbz	x28, 41a8cc <nftw@plt+0x17d4c>
  41a044:	ldr	w0, [x28]
  41a048:	mov	w1, #0x60000000            	// #1610612736
  41a04c:	cmp	w0, w1
  41a050:	b.hi	41a060 <nftw@plt+0x174e0>  // b.pmore
  41a054:	ldr	w1, [x28, #4]
  41a058:	add	w1, w1, w0
  41a05c:	str	w1, [x28]
  41a060:	mov	x1, x0
  41a064:	mov	w19, #0x1                   	// #1
  41a068:	mov	x0, x22
  41a06c:	bfi	x1, x1, #32, #32
  41a070:	bl	418028 <nftw@plt+0x154a8>
  41a074:	b	41a1f8 <nftw@plt+0x17678>
  41a078:	ldr	x0, [sp, #112]
  41a07c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a080:	mov	w1, #0x3                   	// #3
  41a084:	add	x2, x2, #0xa20
  41a088:	bl	41f770 <nftw@plt+0x1cbf0>
  41a08c:	b	419fa0 <nftw@plt+0x17420>
  41a090:	mov	x27, x24
  41a094:	ldr	x0, [sp, #120]
  41a098:	cbz	x0, 41a0b8 <nftw@plt+0x17538>
  41a09c:	ldr	x3, [sp, #128]
  41a0a0:	sub	x2, x27, x20
  41a0a4:	mov	x1, x20
  41a0a8:	mov	x0, x25
  41a0ac:	blr	x23
  41a0b0:	tst	w0, #0xff
  41a0b4:	b.eq	41a1d4 <nftw@plt+0x17654>  // b.none
  41a0b8:	cbz	x28, 41a660 <nftw@plt+0x17ae0>
  41a0bc:	adrp	x0, 417000 <nftw@plt+0x14480>
  41a0c0:	add	x0, x0, #0xd8
  41a0c4:	cmp	x23, x0
  41a0c8:	b.ne	41aa00 <nftw@plt+0x17e80>  // b.any
  41a0cc:	sub	w1, w27, w20
  41a0d0:	mov	x2, x28
  41a0d4:	mov	x0, x22
  41a0d8:	bl	418098 <nftw@plt+0x15518>
  41a0dc:	cmp	x24, x27
  41a0e0:	b.ls	419fe0 <nftw@plt+0x17460>  // b.plast
  41a0e4:	add	x2, x27, #0x1
  41a0e8:	b	419f20 <nftw@plt+0x173a0>
  41a0ec:	add	x0, x0, #0x2
  41a0f0:	cbz	x28, 41a918 <nftw@plt+0x17d98>
  41a0f4:	ldr	w1, [x28]
  41a0f8:	mov	w3, #0x60000000            	// #1610612736
  41a0fc:	cmp	w1, w3
  41a100:	b.hi	41a11c <nftw@plt+0x1759c>  // b.pmore
  41a104:	ldr	w2, [x28, #4]
  41a108:	add	w1, w1, w2
  41a10c:	cmp	w1, w3
  41a110:	b.hi	41a118 <nftw@plt+0x17598>  // b.pmore
  41a114:	add	w1, w2, w1
  41a118:	str	w1, [x28]
  41a11c:	ldrb	w1, [x0]
  41a120:	cmp	w1, #0x28
  41a124:	b.eq	41a964 <nftw@plt+0x17de4>  // b.none
  41a128:	mov	x1, x0
  41a12c:	mov	w5, #0x60000000            	// #1610612736
  41a130:	mov	x3, x1
  41a134:	add	x1, x1, #0x1
  41a138:	cbz	x28, 41a154 <nftw@plt+0x175d4>
  41a13c:	ldr	w2, [x28]
  41a140:	cmp	w2, w5
  41a144:	b.hi	41a154 <nftw@plt+0x175d4>  // b.pmore
  41a148:	ldr	w4, [x28, #4]
  41a14c:	add	w2, w4, w2
  41a150:	str	w2, [x28]
  41a154:	ldrb	w2, [x1]
  41a158:	cmp	w2, #0x28
  41a15c:	b.ne	41a130 <nftw@plt+0x175b0>  // b.any
  41a160:	add	x1, x3, #0x2
  41a164:	sub	x0, x1, x0
  41a168:	add	x2, x0, #0x1
  41a16c:	cbz	x28, 41a18c <nftw@plt+0x1760c>
  41a170:	ldr	w4, [x28]
  41a174:	mov	w3, #0x60000000            	// #1610612736
  41a178:	cmp	w4, w3
  41a17c:	b.hi	41a18c <nftw@plt+0x1760c>  // b.pmore
  41a180:	ldr	w3, [x28, #4]
  41a184:	add	w3, w3, w4
  41a188:	str	w3, [x28]
  41a18c:	ldr	x3, [sp, #160]
  41a190:	add	x2, x1, x2
  41a194:	mvn	x0, x0
  41a198:	ldr	w27, [x3]
  41a19c:	add	x27, x8, x27
  41a1a0:	add	x0, x27, x0
  41a1a4:	cmp	x27, x2
  41a1a8:	csel	x27, x0, x27, cs  // cs = hs, nlast
  41a1ac:	ldr	x0, [sp, #120]
  41a1b0:	cbz	x0, 41a89c <nftw@plt+0x17d1c>
  41a1b4:	ldr	x3, [sp, #128]
  41a1b8:	sub	x2, x27, x1
  41a1bc:	mov	x0, x25
  41a1c0:	str	x1, [sp, #216]
  41a1c4:	blr	x23
  41a1c8:	tst	w0, #0xff
  41a1cc:	ldr	x1, [sp, #216]
  41a1d0:	b.ne	41a89c <nftw@plt+0x17d1c>  // b.any
  41a1d4:	ldr	x26, [sp, #112]
  41a1d8:	mov	w19, #0x0                   	// #0
  41a1dc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a1e0:	mov	w1, #0x3                   	// #3
  41a1e4:	mov	x0, x26
  41a1e8:	add	x2, x2, #0x598
  41a1ec:	bl	41f770 <nftw@plt+0x1cbf0>
  41a1f0:	ldr	x0, [sp, #272]
  41a1f4:	bl	402910 <free@plt>
  41a1f8:	mov	w0, w19
  41a1fc:	ldp	x19, x20, [sp, #16]
  41a200:	ldp	x21, x22, [sp, #32]
  41a204:	ldp	x23, x24, [sp, #48]
  41a208:	ldp	x25, x26, [sp, #64]
  41a20c:	ldp	x27, x28, [sp, #80]
  41a210:	ldp	x29, x30, [sp], #352
  41a214:	ret
  41a218:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x155a0>
  41a21c:	add	x1, x1, #0xb44
  41a220:	ldrh	w0, [x1, w0, uxtw #1]
  41a224:	adr	x1, 41a230 <nftw@plt+0x176b0>
  41a228:	add	x0, x1, w0, sxth #2
  41a22c:	br	x0
  41a230:	ldr	x0, [sp, #144]
  41a234:	cmp	x28, #0x0
  41a238:	ldr	x4, [sp, #104]
  41a23c:	bfxil	x0, x19, #0, #32
  41a240:	mov	x1, x0
  41a244:	cset	w0, ne  // ne = any
  41a248:	bfi	x1, x4, #32, #32
  41a24c:	str	x1, [sp, #144]
  41a250:	ldr	w1, [sp, #156]
  41a254:	cmp	w0, w1
  41a258:	b.ne	41a9e8 <nftw@plt+0x17e68>  // b.any
  41a25c:	cmp	x24, x2
  41a260:	b.ls	41a908 <nftw@plt+0x17d88>  // b.plast
  41a264:	sub	w3, w3, #0x30
  41a268:	add	x20, x27, #0x4
  41a26c:	ldr	w4, [sp, #104]
  41a270:	cmp	w3, #0x7
  41a274:	mov	w0, #0x0                   	// #0
  41a278:	mov	w27, #0x0                   	// #0
  41a27c:	mov	w1, #0x60000000            	// #1610612736
  41a280:	b.hi	41a2cc <nftw@plt+0x1774c>  // b.pmore
  41a284:	add	x2, x2, #0x1
  41a288:	cbz	x28, 41a2a8 <nftw@plt+0x17728>
  41a28c:	ldr	w4, [x28]
  41a290:	cmp	w4, w1
  41a294:	b.hi	41a2a4 <nftw@plt+0x17724>  // b.pmore
  41a298:	ldr	w0, [x28, #4]
  41a29c:	add	w0, w0, w4
  41a2a0:	str	w0, [x28]
  41a2a4:	mov	w0, #0x1                   	// #1
  41a2a8:	add	w27, w3, w27, lsl #3
  41a2ac:	cmp	x24, x2
  41a2b0:	b.eq	41a8d4 <nftw@plt+0x17d54>  // b.none
  41a2b4:	cmp	x20, x2
  41a2b8:	b.eq	41a670 <nftw@plt+0x17af0>  // b.none
  41a2bc:	ldrb	w3, [x2]
  41a2c0:	sub	w3, w3, #0x30
  41a2c4:	cmp	w3, #0x7
  41a2c8:	b.ls	41a284 <nftw@plt+0x17704>  // b.plast
  41a2cc:	str	w4, [sp, #104]
  41a2d0:	cbz	w0, 41a2e0 <nftw@plt+0x17760>
  41a2d4:	ldr	x0, [sp, #144]
  41a2d8:	bfi	x0, x4, #32, #32
  41a2dc:	str	x0, [sp, #144]
  41a2e0:	ldr	w0, [sp, #176]
  41a2e4:	mov	x20, x2
  41a2e8:	and	w0, w27, w0
  41a2ec:	cmp	x0, w27, uxtw
  41a2f0:	b.ne	41a694 <nftw@plt+0x17b14>  // b.any
  41a2f4:	cbz	x21, 41a318 <nftw@plt+0x17798>
  41a2f8:	ldr	x1, [sp, #112]
  41a2fc:	mov	w2, w27
  41a300:	ldr	w4, [sp, #200]
  41a304:	mov	x3, x21
  41a308:	mov	x0, x1
  41a30c:	add	x1, x1, #0x4da
  41a310:	ldr	x0, [x0, #1216]
  41a314:	bl	417218 <nftw@plt+0x14698>
  41a318:	cbz	x22, 419ee0 <nftw@plt+0x17360>
  41a31c:	ldr	x1, [sp, #144]
  41a320:	mov	x0, x22
  41a324:	bl	418028 <nftw@plt+0x154a8>
  41a328:	b	419ee0 <nftw@plt+0x17360>
  41a32c:	ldr	x0, [sp, #112]
  41a330:	ldrb	w0, [x0, #1154]
  41a334:	cbz	w0, 419f80 <nftw@plt+0x17400>
  41a338:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  41a33c:	add	x0, x0, #0x248
  41a340:	mov	w1, #0xac                  	// #172
  41a344:	ldrh	w0, [x0, w3, sxtw #1]
  41a348:	tst	w1, w0
  41a34c:	b.ne	419f6c <nftw@plt+0x173ec>  // b.any
  41a350:	mov	w2, w3
  41a354:	add	x0, sp, #0x140
  41a358:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a35c:	add	x1, x1, #0x9f8
  41a360:	bl	4025b0 <sprintf@plt>
  41a364:	ldr	x0, [sp, #112]
  41a368:	add	x3, sp, #0x140
  41a36c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a370:	mov	w1, #0x2                   	// #2
  41a374:	add	x2, x2, #0xa00
  41a378:	bl	41f298 <nftw@plt+0x1c718>
  41a37c:	b	419f80 <nftw@plt+0x17400>
  41a380:	ldr	w1, [sp, #104]
  41a384:	cmp	x28, #0x0
  41a388:	str	x2, [sp, #256]
  41a38c:	cset	w0, ne  // ne = any
  41a390:	str	w19, [sp, #264]
  41a394:	str	w1, [sp, #268]
  41a398:	ldr	w1, [sp, #156]
  41a39c:	str	wzr, [sp, #320]
  41a3a0:	strb	wzr, [sp, #324]
  41a3a4:	cmp	w0, w1
  41a3a8:	str	wzr, [sp, #328]
  41a3ac:	b.ne	41a9d0 <nftw@plt+0x17e50>  // b.any
  41a3b0:	add	x27, x27, #0x2
  41a3b4:	str	x27, [sp, #256]
  41a3b8:	cbz	x28, 41a3dc <nftw@plt+0x1785c>
  41a3bc:	ldr	w0, [x28]
  41a3c0:	mov	w1, #0x60000000            	// #1610612736
  41a3c4:	cmp	w0, w1
  41a3c8:	b.hi	41a3d8 <nftw@plt+0x17858>  // b.pmore
  41a3cc:	ldr	w1, [x28, #4]
  41a3d0:	add	w1, w1, w0
  41a3d4:	str	w1, [x28]
  41a3d8:	str	w0, [sp, #268]
  41a3dc:	ldr	x0, [sp, #112]
  41a3e0:	mov	x7, x28
  41a3e4:	add	x6, sp, #0x108
  41a3e8:	add	x5, sp, #0xec
  41a3ec:	add	x4, sp, #0x140
  41a3f0:	mov	x2, x24
  41a3f4:	add	x1, sp, #0x100
  41a3f8:	mov	w3, #0x0                   	// #0
  41a3fc:	bl	418120 <nftw@plt+0x155a0>
  41a400:	ldr	w0, [sp, #236]
  41a404:	cmp	w0, #0x7f
  41a408:	b.hi	41a6b4 <nftw@plt+0x17b34>  // b.pmore
  41a40c:	mov	x20, #0x5                   	// #5
  41a410:	mov	x2, #0x1                   	// #1
  41a414:	strb	w0, [sp, #240]
  41a418:	cbz	x21, 41a434 <nftw@plt+0x178b4>
  41a41c:	mov	x3, x21
  41a420:	add	x1, sp, #0xf0
  41a424:	mov	x0, x25
  41a428:	blr	x23
  41a42c:	tst	w0, #0xff
  41a430:	b.eq	41a480 <nftw@plt+0x17900>  // b.none
  41a434:	cbz	x28, 41a460 <nftw@plt+0x178e0>
  41a438:	mov	w27, #0x6                   	// #6
  41a43c:	subs	w27, w27, w20
  41a440:	b.eq	41a460 <nftw@plt+0x178e0>  // b.none
  41a444:	mov	w20, #0x0                   	// #0
  41a448:	ldr	x1, [sp, #264]
  41a44c:	add	w20, w20, #0x1
  41a450:	mov	x0, x22
  41a454:	bl	418028 <nftw@plt+0x154a8>
  41a458:	cmp	w27, w20
  41a45c:	b.ne	41a448 <nftw@plt+0x178c8>  // b.any
  41a460:	ldr	x20, [sp, #256]
  41a464:	b	419ee0 <nftw@plt+0x17360>
  41a468:	ldr	x0, [sp, #112]
  41a46c:	ldrb	w0, [x0, #1154]
  41a470:	cbnz	w0, 41a798 <nftw@plt+0x17c18>
  41a474:	mov	w0, #0x1b                  	// #27
  41a478:	strb	w0, [sp, #235]
  41a47c:	b	419f80 <nftw@plt+0x17400>
  41a480:	ldr	x0, [sp, #112]
  41a484:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a488:	mov	w1, #0x3                   	// #3
  41a48c:	add	x2, x2, #0x878
  41a490:	bl	41f770 <nftw@plt+0x1cbf0>
  41a494:	b	41a434 <nftw@plt+0x178b4>
  41a498:	ldr	x0, [sp, #136]
  41a49c:	cmp	x28, #0x0
  41a4a0:	ldr	x2, [sp, #104]
  41a4a4:	bfxil	x0, x19, #0, #32
  41a4a8:	mov	x1, x0
  41a4ac:	cset	w0, ne  // ne = any
  41a4b0:	bfi	x1, x2, #32, #32
  41a4b4:	str	x1, [sp, #136]
  41a4b8:	ldr	w1, [sp, #156]
  41a4bc:	cmp	w0, w1
  41a4c0:	b.ne	41a9b8 <nftw@plt+0x17e38>  // b.any
  41a4c4:	ldr	x0, [sp, #112]
  41a4c8:	ldrb	w0, [x0, #1138]
  41a4cc:	cbnz	w0, 41a780 <nftw@plt+0x17c00>
  41a4d0:	add	x20, x27, #0x2
  41a4d4:	cbz	x28, 41a500 <nftw@plt+0x17980>
  41a4d8:	ldr	w0, [x28]
  41a4dc:	mov	w1, #0x60000000            	// #1610612736
  41a4e0:	cmp	w0, w1
  41a4e4:	b.hi	41a4f4 <nftw@plt+0x17974>  // b.pmore
  41a4e8:	ldr	w1, [x28, #4]
  41a4ec:	add	w1, w1, w0
  41a4f0:	str	w1, [x28]
  41a4f4:	ldr	x1, [sp, #136]
  41a4f8:	bfi	x1, x0, #32, #32
  41a4fc:	str	x1, [sp, #136]
  41a500:	cmp	x24, x20
  41a504:	b.ls	41a768 <nftw@plt+0x17be8>  // b.plast
  41a508:	ldr	x0, [sp, #136]
  41a50c:	adrp	x4, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  41a510:	add	x4, x4, #0xf30
  41a514:	mov	w5, #0x0                   	// #0
  41a518:	mov	w2, #0x0                   	// #0
  41a51c:	mov	w1, #0x0                   	// #0
  41a520:	lsr	x3, x0, #32
  41a524:	mov	w27, #0x0                   	// #0
  41a528:	mov	w6, #0x60000000            	// #1610612736
  41a52c:	nop
  41a530:	ldrb	w0, [x20]
  41a534:	ldrb	w0, [x4, w0, sxtw]
  41a538:	cmp	w0, #0x63
  41a53c:	b.eq	41a754 <nftw@plt+0x17bd4>  // b.none
  41a540:	add	x20, x20, #0x1
  41a544:	cbz	x28, 41a564 <nftw@plt+0x179e4>
  41a548:	ldr	w3, [x28]
  41a54c:	cmp	w3, w6
  41a550:	b.hi	41a560 <nftw@plt+0x179e0>  // b.pmore
  41a554:	ldr	w2, [x28, #4]
  41a558:	add	w2, w2, w3
  41a55c:	str	w2, [x28]
  41a560:	mov	w5, #0x1                   	// #1
  41a564:	and	w2, w27, #0xf0000000
  41a568:	cmp	x24, x20
  41a56c:	orr	w1, w1, w2
  41a570:	add	w27, w0, w27, lsl #4
  41a574:	mov	w2, #0x1                   	// #1
  41a578:	b.ne	41a530 <nftw@plt+0x179b0>  // b.any
  41a57c:	cbz	w5, 41a58c <nftw@plt+0x17a0c>
  41a580:	ldr	x0, [sp, #136]
  41a584:	bfi	x0, x3, #32, #32
  41a588:	str	x0, [sp, #136]
  41a58c:	mov	x20, x24
  41a590:	ldr	w0, [sp, #176]
  41a594:	and	w0, w27, w0
  41a598:	cmp	x0, w27, uxtw
  41a59c:	cset	w0, ne  // ne = any
  41a5a0:	orr	w1, w0, w1
  41a5a4:	cbnz	w1, 41a5e0 <nftw@plt+0x17a60>
  41a5a8:	cbz	x21, 41a5cc <nftw@plt+0x17a4c>
  41a5ac:	ldr	x1, [sp, #112]
  41a5b0:	mov	w2, w27
  41a5b4:	ldr	w4, [sp, #200]
  41a5b8:	mov	x3, x21
  41a5bc:	mov	x0, x1
  41a5c0:	add	x1, x1, #0x4da
  41a5c4:	ldr	x0, [x0, #1216]
  41a5c8:	bl	417218 <nftw@plt+0x14698>
  41a5cc:	cbz	x22, 419ee0 <nftw@plt+0x17360>
  41a5d0:	ldr	x1, [sp, #136]
  41a5d4:	mov	x0, x22
  41a5d8:	bl	418028 <nftw@plt+0x154a8>
  41a5dc:	b	419ee0 <nftw@plt+0x17360>
  41a5e0:	ldr	w0, [sp, #204]
  41a5e4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a5e8:	mov	w1, #0x2                   	// #2
  41a5ec:	add	x2, x2, #0x918
  41a5f0:	and	w27, w27, w0
  41a5f4:	ldr	x0, [sp, #112]
  41a5f8:	bl	41f298 <nftw@plt+0x1c718>
  41a5fc:	b	41a5a8 <nftw@plt+0x17a28>
  41a600:	mov	w0, #0xb                   	// #11
  41a604:	strb	w0, [sp, #235]
  41a608:	b	419f80 <nftw@plt+0x17400>
  41a60c:	mov	w0, #0x9                   	// #9
  41a610:	strb	w0, [sp, #235]
  41a614:	b	419f80 <nftw@plt+0x17400>
  41a618:	mov	w0, #0xd                   	// #13
  41a61c:	strb	w0, [sp, #235]
  41a620:	b	419f80 <nftw@plt+0x17400>
  41a624:	mov	w0, #0xa                   	// #10
  41a628:	strb	w0, [sp, #235]
  41a62c:	b	419f80 <nftw@plt+0x17400>
  41a630:	mov	w0, #0xc                   	// #12
  41a634:	strb	w0, [sp, #235]
  41a638:	b	419f80 <nftw@plt+0x17400>
  41a63c:	mov	w0, #0x8                   	// #8
  41a640:	strb	w0, [sp, #235]
  41a644:	b	419f80 <nftw@plt+0x17400>
  41a648:	ldr	x0, [sp, #112]
  41a64c:	ldrb	w0, [x0, #1138]
  41a650:	cbnz	w0, 41a7b0 <nftw@plt+0x17c30>
  41a654:	mov	w0, #0x7                   	// #7
  41a658:	strb	w0, [sp, #235]
  41a65c:	b	419f80 <nftw@plt+0x17400>
  41a660:	cmp	x24, x27
  41a664:	b.ls	419fe0 <nftw@plt+0x17460>  // b.plast
  41a668:	add	x2, x27, #0x1
  41a66c:	b	419f40 <nftw@plt+0x173c0>
  41a670:	str	w4, [sp, #104]
  41a674:	cbz	w0, 41a684 <nftw@plt+0x17b04>
  41a678:	ldr	x0, [sp, #144]
  41a67c:	bfi	x0, x4, #32, #32
  41a680:	str	x0, [sp, #144]
  41a684:	ldr	w0, [sp, #176]
  41a688:	and	w0, w27, w0
  41a68c:	cmp	x0, w27, uxtw
  41a690:	b.eq	41a2f4 <nftw@plt+0x17774>  // b.none
  41a694:	ldr	w0, [sp, #204]
  41a698:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a69c:	mov	w1, #0x2                   	// #2
  41a6a0:	add	x2, x2, #0x950
  41a6a4:	and	w27, w27, w0
  41a6a8:	ldr	x0, [sp, #112]
  41a6ac:	bl	41f298 <nftw@plt+0x1c718>
  41a6b0:	b	41a2f4 <nftw@plt+0x17774>
  41a6b4:	add	x1, sp, #0xfe
  41a6b8:	mov	x3, #0x1                   	// #1
  41a6bc:	ldr	x6, [sp, #208]
  41a6c0:	b	41a6cc <nftw@plt+0x17b4c>
  41a6c4:	mov	x1, x4
  41a6c8:	mov	x3, x2
  41a6cc:	and	w2, w0, #0x3f
  41a6d0:	lsr	w0, w0, #6
  41a6d4:	orr	w2, w2, #0xffffff80
  41a6d8:	sturb	w2, [x1, #-1]
  41a6dc:	cmp	w0, #0x3e
  41a6e0:	sub	x4, x1, #0x1
  41a6e4:	add	x2, x3, #0x1
  41a6e8:	b.hi	41a6c4 <nftw@plt+0x17b44>  // b.pmore
  41a6ec:	add	x5, x6, x2
  41a6f0:	ldurb	w5, [x5, #-1]
  41a6f4:	tst	w5, w0
  41a6f8:	b.ne	41a6c4 <nftw@plt+0x17b44>  // b.any
  41a6fc:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x155a0>
  41a700:	add	x4, x4, #0xcc8
  41a704:	cmp	x2, #0x6
  41a708:	ldrb	w3, [x4, x3]
  41a70c:	orr	w0, w0, w3
  41a710:	and	w0, w0, #0xff
  41a714:	sturb	w0, [x1, #-2]
  41a718:	b.hi	41a7c8 <nftw@plt+0x17c48>  // b.pmore
  41a71c:	sub	x1, x1, #0x2
  41a720:	add	x4, sp, #0xfe
  41a724:	mov	x20, #0x6                   	// #6
  41a728:	cmp	x1, x4
  41a72c:	sub	x20, x20, x2
  41a730:	b.cs	41a418 <nftw@plt+0x17898>  // b.hs, b.nlast
  41a734:	add	x3, sp, #0xf0
  41a738:	b	41a740 <nftw@plt+0x17bc0>
  41a73c:	ldrb	w0, [x1]
  41a740:	strb	w0, [x3], #1
  41a744:	add	x1, x1, #0x1
  41a748:	cmp	x1, x4
  41a74c:	b.cc	41a73c <nftw@plt+0x17bbc>  // b.lo, b.ul, b.last
  41a750:	b	41a418 <nftw@plt+0x17898>
  41a754:	cbz	w5, 41a764 <nftw@plt+0x17be4>
  41a758:	ldr	x0, [sp, #136]
  41a75c:	bfi	x0, x3, #32, #32
  41a760:	str	x0, [sp, #136]
  41a764:	cbnz	w2, 41a590 <nftw@plt+0x17a10>
  41a768:	ldr	x0, [sp, #112]
  41a76c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a770:	mov	w1, #0x3                   	// #3
  41a774:	add	x2, x2, #0x8f0
  41a778:	bl	41f298 <nftw@plt+0x1c718>
  41a77c:	b	419ee0 <nftw@plt+0x17360>
  41a780:	ldr	x0, [sp, #112]
  41a784:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a788:	mov	w1, #0x6                   	// #6
  41a78c:	add	x2, x2, #0x8b8
  41a790:	bl	41f308 <nftw@plt+0x1c788>
  41a794:	b	41a4d0 <nftw@plt+0x17950>
  41a798:	ldr	x0, [sp, #112]
  41a79c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a7a0:	mov	w1, #0x2                   	// #2
  41a7a4:	add	x2, x2, #0x9b0
  41a7a8:	bl	41f298 <nftw@plt+0x1c718>
  41a7ac:	b	41a474 <nftw@plt+0x178f4>
  41a7b0:	ldr	x0, [sp, #112]
  41a7b4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a7b8:	mov	w1, #0x6                   	// #6
  41a7bc:	add	x2, x2, #0x978
  41a7c0:	bl	41f308 <nftw@plt+0x1c788>
  41a7c4:	b	41a654 <nftw@plt+0x17ad4>
  41a7c8:	bl	402aa0 <__errno_location@plt>
  41a7cc:	mov	w3, #0x7                   	// #7
  41a7d0:	str	w3, [x0]
  41a7d4:	ldr	x0, [sp, #112]
  41a7d8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a7dc:	mov	w1, #0x3                   	// #3
  41a7e0:	add	x2, x2, #0x850
  41a7e4:	bl	41f770 <nftw@plt+0x1cbf0>
  41a7e8:	ldr	x20, [sp, #256]
  41a7ec:	b	419ee0 <nftw@plt+0x17360>
  41a7f0:	b.ne	419e70 <nftw@plt+0x172f0>  // b.any
  41a7f4:	add	x0, x8, #0x1
  41a7f8:	cbnz	x28, 41a82c <nftw@plt+0x17cac>
  41a7fc:	ldrb	w0, [x8, #1]
  41a800:	cmp	w0, #0x38
  41a804:	b.eq	41a938 <nftw@plt+0x17db8>  // b.none
  41a808:	cmp	w0, #0x52
  41a80c:	b.eq	41a95c <nftw@plt+0x17ddc>  // b.none
  41a810:	cmp	w0, #0x22
  41a814:	mov	w1, #0x27                  	// #39
  41a818:	ccmp	w0, w1, #0x4, ne  // ne = any
  41a81c:	b.ne	41a974 <nftw@plt+0x17df4>  // b.any
  41a820:	add	x5, x8, #0x2
  41a824:	b	419ec8 <nftw@plt+0x17348>
  41a828:	add	x0, x8, #0x1
  41a82c:	ldr	w1, [x28]
  41a830:	mov	w3, #0x60000000            	// #1610612736
  41a834:	cmp	w1, w3
  41a838:	b.hi	41a878 <nftw@plt+0x17cf8>  // b.pmore
  41a83c:	ldr	w2, [x28, #4]
  41a840:	add	w1, w1, w2
  41a844:	str	w1, [x28]
  41a848:	ldrb	w4, [x8, #1]
  41a84c:	cmp	w4, #0x38
  41a850:	b.eq	41a8f0 <nftw@plt+0x17d70>  // b.none
  41a854:	ldrb	w1, [x0]
  41a858:	cmp	w1, #0x52
  41a85c:	b.eq	41a894 <nftw@plt+0x17d14>  // b.none
  41a860:	cmp	w1, #0x22
  41a864:	mov	w2, #0x27                  	// #39
  41a868:	ccmp	w1, w2, #0x4, ne  // ne = any
  41a86c:	b.ne	41a974 <nftw@plt+0x17df4>  // b.any
  41a870:	add	x5, x0, #0x1
  41a874:	b	419eac <nftw@plt+0x1732c>
  41a878:	ldrb	w1, [x8, #1]
  41a87c:	cmp	w1, #0x38
  41a880:	b.ne	41a854 <nftw@plt+0x17cd4>  // b.any
  41a884:	ldrb	w1, [x8, #2]
  41a888:	add	x0, x8, #0x2
  41a88c:	cmp	w1, #0x52
  41a890:	b.ne	41a860 <nftw@plt+0x17ce0>  // b.any
  41a894:	add	x0, x0, #0x2
  41a898:	b	41a0f4 <nftw@plt+0x17574>
  41a89c:	cbz	x28, 419fe4 <nftw@plt+0x17464>
  41a8a0:	adrp	x0, 417000 <nftw@plt+0x14480>
  41a8a4:	add	x0, x0, #0xd8
  41a8a8:	cmp	x23, x0
  41a8ac:	b.ne	41aa40 <nftw@plt+0x17ec0>  // b.any
  41a8b0:	sub	w1, w27, w1
  41a8b4:	mov	x2, x28
  41a8b8:	mov	x0, x22
  41a8bc:	bl	418098 <nftw@plt+0x15518>
  41a8c0:	b	419fe4 <nftw@plt+0x17464>
  41a8c4:	ldr	x0, [sp, #184]
  41a8c8:	cbnz	x0, 419df4 <nftw@plt+0x17274>
  41a8cc:	mov	w19, #0x1                   	// #1
  41a8d0:	b	41a1f8 <nftw@plt+0x17678>
  41a8d4:	str	w4, [sp, #104]
  41a8d8:	cbz	w0, 41a8e8 <nftw@plt+0x17d68>
  41a8dc:	ldr	x0, [sp, #144]
  41a8e0:	bfi	x0, x4, #32, #32
  41a8e4:	str	x0, [sp, #144]
  41a8e8:	mov	x20, x24
  41a8ec:	b	41a684 <nftw@plt+0x17b04>
  41a8f0:	cmp	w1, w3
  41a8f4:	add	x0, x8, #0x2
  41a8f8:	b.hi	41a854 <nftw@plt+0x17cd4>  // b.pmore
  41a8fc:	add	w1, w2, w1
  41a900:	str	w1, [x28]
  41a904:	b	41a854 <nftw@plt+0x17cd4>
  41a908:	mov	x20, x2
  41a90c:	mov	w27, #0x0                   	// #0
  41a910:	b	41a2f4 <nftw@plt+0x17774>
  41a914:	add	x0, x8, #0x4
  41a918:	ldrb	w1, [x0]
  41a91c:	mov	x28, #0x0                   	// #0
  41a920:	cmp	w1, #0x28
  41a924:	b.ne	41a128 <nftw@plt+0x175a8>  // b.any
  41a928:	add	x1, x0, #0x1
  41a92c:	mov	x2, #0x2                   	// #2
  41a930:	mov	x0, #0x1                   	// #1
  41a934:	b	41a18c <nftw@plt+0x1760c>
  41a938:	ldrb	w0, [x8, #2]
  41a93c:	cmp	w0, #0x52
  41a940:	b.eq	41a914 <nftw@plt+0x17d94>  // b.none
  41a944:	cmp	w0, #0x27
  41a948:	mov	w1, #0x22                  	// #34
  41a94c:	ccmp	w0, w1, #0x4, ne  // ne = any
  41a950:	b.ne	41a974 <nftw@plt+0x17df4>  // b.any
  41a954:	add	x5, x8, #0x3
  41a958:	b	419ec8 <nftw@plt+0x17348>
  41a95c:	add	x0, x8, #0x3
  41a960:	b	41a918 <nftw@plt+0x17d98>
  41a964:	add	x1, x0, #0x1
  41a968:	mov	x2, #0x2                   	// #2
  41a96c:	mov	x0, #0x1                   	// #1
  41a970:	b	41a170 <nftw@plt+0x175f0>
  41a974:	ldr	x26, [sp, #112]
  41a978:	cbz	x22, 41a9a0 <nftw@plt+0x17e20>
  41a97c:	mov	x0, x26
  41a980:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a984:	mov	w1, #0x3                   	// #3
  41a988:	add	x2, x2, #0x828
  41a98c:	bl	41f298 <nftw@plt+0x1c718>
  41a990:	mov	w19, #0x0                   	// #0
  41a994:	ldr	x0, [sp, #120]
  41a998:	cbnz	x0, 41a1f0 <nftw@plt+0x17670>
  41a99c:	b	41a1f8 <nftw@plt+0x17678>
  41a9a0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9a4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9a8:	add	x2, x2, #0x810
  41a9ac:	add	x0, x0, #0x6e0
  41a9b0:	mov	w1, #0x64d                 	// #1613
  41a9b4:	bl	402bf0 <nftw@plt+0x70>
  41a9b8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9bc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9c0:	add	x2, x2, #0x8a8
  41a9c4:	add	x0, x0, #0x6e0
  41a9c8:	mov	w1, #0x4f9                 	// #1273
  41a9cc:	bl	402bf0 <nftw@plt+0x70>
  41a9d0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9d4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9d8:	add	x2, x2, #0x840
  41a9dc:	add	x0, x0, #0x6e0
  41a9e0:	mov	w1, #0x48d                 	// #1165
  41a9e4:	bl	402bf0 <nftw@plt+0x70>
  41a9e8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9ec:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41a9f0:	add	x2, x2, #0x940
  41a9f4:	add	x0, x0, #0x6e0
  41a9f8:	mov	w1, #0x540                 	// #1344
  41a9fc:	bl	402bf0 <nftw@plt+0x70>
  41aa00:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aa04:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aa08:	add	x2, x2, #0x810
  41aa0c:	add	x0, x0, #0x6e0
  41aa10:	mov	w1, #0x66c                 	// #1644
  41aa14:	bl	402bf0 <nftw@plt+0x70>
  41aa18:	add	x0, sp, #0x110
  41aa1c:	mov	x28, #0x0                   	// #0
  41aa20:	str	x0, [sp, #128]
  41aa24:	b	41a008 <nftw@plt+0x17488>
  41aa28:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aa2c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aa30:	add	x2, x2, #0x810
  41aa34:	add	x0, x0, #0x6e0
  41aa38:	mov	w1, #0x5fc                 	// #1532
  41aa3c:	bl	402bf0 <nftw@plt+0x70>
  41aa40:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aa44:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aa48:	add	x2, x2, #0x810
  41aa4c:	add	x0, x0, #0x6e0
  41aa50:	mov	w1, #0x641                 	// #1601
  41aa54:	bl	402bf0 <nftw@plt+0x70>
  41aa58:	mov	x6, #0x0                   	// #0
  41aa5c:	mov	x5, #0x0                   	// #0
  41aa60:	b	419d60 <nftw@plt+0x171e0>
  41aa64:	nop
  41aa68:	stp	x29, x30, [sp, #-64]!
  41aa6c:	mov	w7, w5
  41aa70:	mov	x9, x1
  41aa74:	mov	x5, x2
  41aa78:	mov	x10, x3
  41aa7c:	mov	x29, sp
  41aa80:	mov	w1, w7
  41aa84:	add	x8, sp, #0x28
  41aa88:	stp	x19, x20, [sp, #16]
  41aa8c:	mov	x19, x0
  41aa90:	bl	417158 <nftw@plt+0x145d8>
  41aa94:	ldr	x1, [sp, #40]
  41aa98:	adrp	x0, 417000 <nftw@plt+0x14480>
  41aa9c:	add	x0, x0, #0xd8
  41aaa0:	cmp	x1, x0
  41aaa4:	b.eq	41aabc <nftw@plt+0x17f3c>  // b.none
  41aaa8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aaac:	add	x0, x0, #0xa58
  41aab0:	ldp	x19, x20, [sp, #16]
  41aab4:	ldp	x29, x30, [sp], #64
  41aab8:	ret
  41aabc:	adrp	x0, 416000 <nftw@plt+0x13480>
  41aac0:	add	x0, x0, #0xd98
  41aac4:	ldr	x20, [x19, #1000]
  41aac8:	str	x0, [x19, #1000]
  41aacc:	mov	x6, x4
  41aad0:	mov	x1, x9
  41aad4:	mov	w4, w7
  41aad8:	mov	x2, x10
  41aadc:	mov	x0, x19
  41aae0:	mov	x3, #0x0                   	// #0
  41aae4:	bl	419d60 <nftw@plt+0x171e0>
  41aae8:	str	x20, [x19, #1000]
  41aaec:	tst	w0, #0xff
  41aaf0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aaf4:	add	x1, x1, #0xa88
  41aaf8:	csel	x0, x1, xzr, eq  // eq = none
  41aafc:	ldp	x19, x20, [sp, #16]
  41ab00:	ldp	x29, x30, [sp], #64
  41ab04:	ret
  41ab08:	stp	x29, x30, [sp, #-64]!
  41ab0c:	adrp	x8, 417000 <nftw@plt+0x14480>
  41ab10:	add	x8, x8, #0xd8
  41ab14:	mov	x29, sp
  41ab18:	ldr	x9, [x0, #536]
  41ab1c:	mov	x11, #0xffffffffffffffff    	// #-1
  41ab20:	ldr	x10, [x0, #1216]
  41ab24:	str	x19, [sp, #16]
  41ab28:	add	x19, x0, #0x208
  41ab2c:	mov	x6, #0x0                   	// #0
  41ab30:	mov	x5, #0x0                   	// #0
  41ab34:	mov	w4, #0x3e                  	// #62
  41ab38:	str	x9, [sp, #56]
  41ab3c:	ldp	x12, x13, [x19]
  41ab40:	str	x8, [x0, #520]
  41ab44:	str	x11, [x0, #528]
  41ab48:	str	w10, [x0, #536]
  41ab4c:	stp	x12, x13, [sp, #40]
  41ab50:	bl	419d60 <nftw@plt+0x171e0>
  41ab54:	ldp	x2, x3, [sp, #40]
  41ab58:	stp	x2, x3, [x19]
  41ab5c:	ldr	x1, [sp, #56]
  41ab60:	str	x1, [x19, #16]
  41ab64:	ldr	x19, [sp, #16]
  41ab68:	ldp	x29, x30, [sp], #64
  41ab6c:	ret
  41ab70:	stp	x29, x30, [sp, #-128]!
  41ab74:	mov	x29, sp
  41ab78:	ldrb	w4, [x1, #4]
  41ab7c:	stp	x21, x22, [sp, #32]
  41ab80:	mov	x22, x1
  41ab84:	mov	x21, x3
  41ab88:	ldr	w3, [x1, #8]
  41ab8c:	and	w1, w4, #0xfffffffb
  41ab90:	cmp	w1, #0x38
  41ab94:	stp	x19, x20, [sp, #16]
  41ab98:	mov	x20, x2
  41ab9c:	cset	w2, ne  // ne = any
  41aba0:	cmp	w4, #0x3c
  41aba4:	cset	w5, eq  // eq = none
  41aba8:	add	w2, w2, #0x2
  41abac:	str	wzr, [sp, #88]
  41abb0:	add	w5, w2, w5, lsl #1
  41abb4:	str	xzr, [sp, #96]
  41abb8:	cmp	x3, w5, sxtw
  41abbc:	b.eq	41ae50 <nftw@plt+0x182d0>  // b.none
  41abc0:	and	w19, w1, #0xff
  41abc4:	add	x3, sp, #0x58
  41abc8:	add	x1, x22, #0x8
  41abcc:	mov	x6, #0x0                   	// #0
  41abd0:	mov	x5, #0x0                   	// #0
  41abd4:	mov	x2, #0x1                   	// #1
  41abd8:	stp	x23, x24, [sp, #48]
  41abdc:	mov	x23, x0
  41abe0:	bl	419d60 <nftw@plt+0x171e0>
  41abe4:	tst	w0, #0xff
  41abe8:	b.eq	41ae10 <nftw@plt+0x18290>  // b.none
  41abec:	stp	x25, x26, [sp, #64]
  41abf0:	cmp	w19, #0x38
  41abf4:	ldr	w19, [sp, #88]
  41abf8:	ldr	x6, [sp, #96]
  41abfc:	b.eq	41ad2c <nftw@plt+0x181ac>  // b.none
  41ac00:	ldrb	w9, [x23, #1242]
  41ac04:	add	x8, sp, #0x68
  41ac08:	ldrb	w24, [x22, #4]
  41ac0c:	mov	x0, x23
  41ac10:	mov	w1, w24
  41ac14:	bl	417158 <nftw@plt+0x145d8>
  41ac18:	ldrsw	x25, [sp, #120]
  41ac1c:	ldr	x0, [x23, #1216]
  41ac20:	mov	x2, #0x20                  	// #32
  41ac24:	mov	w8, w19
  41ac28:	mov	x1, #0x1                   	// #1
  41ac2c:	cmp	x0, x2
  41ac30:	udiv	x10, x25, x0
  41ac34:	csel	x2, x0, x2, ls  // ls = plast
  41ac38:	cmp	x25, x0
  41ac3c:	lsl	x1, x1, x2
  41ac40:	sub	x1, x1, #0x1
  41ac44:	lsl	x11, x10, #1
  41ac48:	sub	x7, x8, x11
  41ac4c:	b.cc	41af28 <nftw@plt+0x183a8>  // b.lo, b.ul, b.last
  41ac50:	add	x2, x10, x7
  41ac54:	mov	w19, #0x0                   	// #0
  41ac58:	sub	x2, x2, #0x1
  41ac5c:	add	x7, x6, x7
  41ac60:	add	x2, x6, x2
  41ac64:	mov	x4, #0x0                   	// #0
  41ac68:	b	41ac88 <nftw@plt+0x18108>
  41ac6c:	ldrb	w5, [x7, x4]
  41ac70:	add	x4, x4, #0x1
  41ac74:	lsl	w19, w19, w0
  41ac78:	cmp	x10, x4
  41ac7c:	and	w5, w5, w1
  41ac80:	orr	w19, w5, w19
  41ac84:	b.ls	41acac <nftw@plt+0x1812c>  // b.plast
  41ac88:	neg	x3, x4
  41ac8c:	cbnz	w9, 41ac6c <nftw@plt+0x180ec>
  41ac90:	ldrb	w5, [x2, x3]
  41ac94:	add	x4, x4, #0x1
  41ac98:	lsl	w19, w19, w0
  41ac9c:	cmp	x10, x4
  41aca0:	and	w5, w5, w1
  41aca4:	orr	w19, w5, w19
  41aca8:	b.hi	41ac88 <nftw@plt+0x18108>  // b.pmore
  41acac:	cmp	x8, x11
  41acb0:	b.hi	41ae80 <nftw@plt+0x18300>  // b.pmore
  41acb4:	sub	w24, w24, #0x3a
  41acb8:	cmp	x25, #0x1f
  41acbc:	b.hi	41ae3c <nftw@plt+0x182bc>  // b.pmore
  41acc0:	mov	x2, #0x1                   	// #1
  41acc4:	cmp	w24, #0x1
  41acc8:	lsl	x1, x2, x25
  41accc:	b.ls	41ae34 <nftw@plt+0x182b4>  // b.plast
  41acd0:	ldrb	w0, [x23, #1241]
  41acd4:	cbnz	w0, 41ae34 <nftw@plt+0x182b4>
  41acd8:	sub	w25, w25, #0x1
  41acdc:	lsl	w25, w2, w25
  41ace0:	tst	w25, w19
  41ace4:	b.eq	41ae34 <nftw@plt+0x182b4>  // b.none
  41ace8:	neg	x1, x1
  41acec:	orr	w19, w19, w1
  41acf0:	str	w0, [x21]
  41acf4:	mov	w0, #0x1                   	// #1
  41acf8:	str	w0, [x20]
  41acfc:	ldr	x0, [x22, #16]
  41ad00:	cmp	x0, x6
  41ad04:	b.eq	41adf4 <nftw@plt+0x18274>  // b.none
  41ad08:	mov	x0, x6
  41ad0c:	bl	402910 <free@plt>
  41ad10:	mov	w0, w19
  41ad14:	ldp	x19, x20, [sp, #16]
  41ad18:	ldp	x21, x22, [sp, #32]
  41ad1c:	ldp	x23, x24, [sp, #48]
  41ad20:	ldp	x25, x26, [sp, #64]
  41ad24:	ldp	x29, x30, [sp], #128
  41ad28:	ret
  41ad2c:	ldr	x24, [x23, #1216]
  41ad30:	mov	x0, #0x20                  	// #32
  41ad34:	ldr	x3, [x23, #1224]
  41ad38:	cmp	x24, x0
  41ad3c:	csel	x2, x24, x0, ls  // ls = plast
  41ad40:	sub	w1, w19, #0x1
  41ad44:	mov	x0, #0x1                   	// #1
  41ad48:	mov	x19, x1
  41ad4c:	udiv	x26, x3, x24
  41ad50:	lsl	x0, x0, x2
  41ad54:	sub	x0, x0, #0x1
  41ad58:	cbz	w1, 41aec8 <nftw@plt+0x18348>
  41ad5c:	mov	w19, #0x0                   	// #0
  41ad60:	mov	x5, #0x0                   	// #0
  41ad64:	nop
  41ad68:	ldrb	w4, [x6, x5]
  41ad6c:	cmp	x24, #0x20
  41ad70:	add	x5, x5, #0x1
  41ad74:	lsl	w19, w19, w24
  41ad78:	and	w4, w4, w0
  41ad7c:	orr	w19, w4, w19
  41ad80:	csel	w19, w19, w4, cc  // cc = lo, ul, last
  41ad84:	cmp	x1, x5
  41ad88:	b.ne	41ad68 <nftw@plt+0x181e8>  // b.any
  41ad8c:	cmp	x26, x1
  41ad90:	b.cc	41ae9c <nftw@plt+0x1831c>  // b.lo, b.ul, b.last
  41ad94:	cmp	x1, #0x1
  41ad98:	mov	w25, w1
  41ad9c:	b.eq	41aecc <nftw@plt+0x1834c>  // b.none
  41ada0:	ldrb	w0, [x23, #1137]
  41ada4:	cbnz	w0, 41af08 <nftw@plt+0x18388>
  41ada8:	cmp	x3, #0x1f
  41adac:	mov	w0, #0x0                   	// #0
  41adb0:	b.hi	41ade0 <nftw@plt+0x18260>  // b.pmore
  41adb4:	mov	w24, #0x1                   	// #1
  41adb8:	mov	w1, w3
  41adbc:	lsl	w24, w24, w3
  41adc0:	sub	w2, w24, #0x1
  41adc4:	sub	w1, w1, #0x1
  41adc8:	mov	w0, #0x1                   	// #1
  41adcc:	lsl	w1, w0, w1
  41add0:	tst	w1, w19
  41add4:	b.ne	41aef8 <nftw@plt+0x18378>  // b.any
  41add8:	and	w19, w19, w2
  41addc:	mov	w0, #0x0                   	// #0
  41ade0:	str	w25, [x20]
  41ade4:	str	w0, [x21]
  41ade8:	ldr	x0, [x22, #16]
  41adec:	cmp	x0, x6
  41adf0:	b.ne	41ad08 <nftw@plt+0x18188>  // b.any
  41adf4:	mov	w0, w19
  41adf8:	ldp	x19, x20, [sp, #16]
  41adfc:	ldp	x21, x22, [sp, #32]
  41ae00:	ldp	x23, x24, [sp, #48]
  41ae04:	ldp	x25, x26, [sp, #64]
  41ae08:	ldp	x29, x30, [sp], #128
  41ae0c:	ret
  41ae10:	ldp	x23, x24, [sp, #48]
  41ae14:	str	wzr, [x20]
  41ae18:	str	wzr, [x21]
  41ae1c:	mov	w19, #0x0                   	// #0
  41ae20:	mov	w0, w19
  41ae24:	ldp	x19, x20, [sp, #16]
  41ae28:	ldp	x21, x22, [sp, #32]
  41ae2c:	ldp	x29, x30, [sp], #128
  41ae30:	ret
  41ae34:	sub	x1, x1, #0x1
  41ae38:	and	w19, w19, w1
  41ae3c:	cmp	w24, #0x1
  41ae40:	mov	w0, #0x1                   	// #1
  41ae44:	b.ls	41acf0 <nftw@plt+0x18170>  // b.plast
  41ae48:	ldrb	w0, [x23, #1241]
  41ae4c:	b	41acf0 <nftw@plt+0x18170>
  41ae50:	mov	w1, #0x3                   	// #3
  41ae54:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41ae58:	add	x2, x2, #0xaa8
  41ae5c:	bl	41f298 <nftw@plt+0x1c718>
  41ae60:	str	wzr, [x20]
  41ae64:	mov	w19, #0x0                   	// #0
  41ae68:	str	wzr, [x21]
  41ae6c:	mov	w0, w19
  41ae70:	ldp	x19, x20, [sp, #16]
  41ae74:	ldp	x21, x22, [sp, #32]
  41ae78:	ldp	x29, x30, [sp], #128
  41ae7c:	ret
  41ae80:	mov	x0, x23
  41ae84:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41ae88:	mov	w1, #0x0                   	// #0
  41ae8c:	add	x2, x2, #0xac8
  41ae90:	bl	41f298 <nftw@plt+0x1c718>
  41ae94:	ldr	x6, [sp, #96]
  41ae98:	b	41acb4 <nftw@plt+0x18134>
  41ae9c:	mov	x0, x23
  41aea0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41aea4:	mov	w1, #0x0                   	// #0
  41aea8:	add	x2, x2, #0xac8
  41aeac:	bl	41f298 <nftw@plt+0x1c718>
  41aeb0:	mov	w25, w26
  41aeb4:	cmp	x26, #0x1
  41aeb8:	ldr	x6, [sp, #96]
  41aebc:	b.ls	41aecc <nftw@plt+0x1834c>  // b.plast
  41aec0:	ldr	x3, [x23, #1224]
  41aec4:	b	41ada8 <nftw@plt+0x18228>
  41aec8:	mov	w25, #0x0                   	// #0
  41aecc:	ldrb	w3, [x23, #1240]
  41aed0:	cmp	x24, #0x1f
  41aed4:	mov	w0, w3
  41aed8:	b.hi	41ade0 <nftw@plt+0x18260>  // b.pmore
  41aedc:	mov	w0, #0x1                   	// #1
  41aee0:	mov	w1, w24
  41aee4:	lsl	w24, w0, w24
  41aee8:	sub	w2, w24, #0x1
  41aeec:	cbz	w3, 41adc4 <nftw@plt+0x18244>
  41aef0:	and	w19, w19, w2
  41aef4:	b	41ade0 <nftw@plt+0x18260>
  41aef8:	neg	w24, w24
  41aefc:	mov	w0, #0x0                   	// #0
  41af00:	orr	w19, w19, w24
  41af04:	b	41ade0 <nftw@plt+0x18260>
  41af08:	mov	x0, x23
  41af0c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41af10:	mov	w1, #0x5                   	// #5
  41af14:	add	x2, x2, #0xaf8
  41af18:	bl	41f308 <nftw@plt+0x1c788>
  41af1c:	ldr	x6, [sp, #96]
  41af20:	ldr	x3, [x23, #1224]
  41af24:	b	41ada8 <nftw@plt+0x18228>
  41af28:	mov	w19, #0x0                   	// #0
  41af2c:	b	41acac <nftw@plt+0x1812c>
  41af30:	stp	x29, x30, [sp, #-64]!
  41af34:	add	x3, x2, #0x10
  41af38:	and	x3, x3, #0xfffffffffffffff0
  41af3c:	mov	x29, sp
  41af40:	stp	x19, x20, [sp, #16]
  41af44:	mov	x20, x0
  41af48:	str	x21, [sp, #32]
  41af4c:	sub	sp, sp, x3
  41af50:	mov	x19, sp
  41af54:	cbz	x2, 41b174 <nftw@plt+0x185f4>
  41af58:	add	x0, x29, #0x38
  41af5c:	adrp	x13, 45f000 <_obstack_memory_used@@Base+0x155a0>
  41af60:	add	x13, x13, #0xbf8
  41af64:	add	x12, x0, #0x6
  41af68:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x205a0>
  41af6c:	adrp	x11, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  41af70:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x155a0>
  41af74:	add	x17, x29, #0x3d
  41af78:	add	x13, x13, #0xc0
  41af7c:	add	x10, x10, #0x248
  41af80:	add	x11, x11, #0xf30
  41af84:	mov	x7, x19
  41af88:	add	x0, x0, #0xcc8
  41af8c:	mov	x3, #0x0                   	// #0
  41af90:	mov	w15, #0x4                   	// #4
  41af94:	mov	w14, #0x8                   	// #8
  41af98:	mov	x16, #0x1                   	// #1
  41af9c:	b	41afb8 <nftw@plt+0x18438>
  41afa0:	mov	x4, x7
  41afa4:	mov	x3, x5
  41afa8:	strb	w6, [x4], #1
  41afac:	mov	x7, x4
  41afb0:	cmp	x2, x3
  41afb4:	b.ls	41b0e0 <nftw@plt+0x18560>  // b.plast
  41afb8:	ldrb	w6, [x1, x3]
  41afbc:	add	x5, x3, #0x1
  41afc0:	cmp	w6, #0x5c
  41afc4:	b.ne	41afa0 <nftw@plt+0x18420>  // b.any
  41afc8:	ldrb	w4, [x1, x5]
  41afcc:	add	x3, x3, #0x2
  41afd0:	sub	x21, x7, x19
  41afd4:	cmp	w4, #0x75
  41afd8:	sub	x18, x2, x21
  41afdc:	csel	w9, w15, w14, eq  // eq = none
  41afe0:	cmp	x2, x3
  41afe4:	b.ls	41b16c <nftw@plt+0x185ec>  // b.plast
  41afe8:	mov	x5, x3
  41afec:	add	w9, w9, w3
  41aff0:	mov	w4, #0x0                   	// #0
  41aff4:	b	41b010 <nftw@plt+0x18490>
  41aff8:	ldrb	w6, [x11, w6, sxtw]
  41affc:	cmp	w9, w3
  41b000:	ccmp	x2, x3, #0x0, ne  // ne = any
  41b004:	add	w4, w6, w4, lsl #4
  41b008:	b.ls	41b028 <nftw@plt+0x184a8>  // b.plast
  41b00c:	mov	x5, x3
  41b010:	ldrb	w6, [x1, x5]
  41b014:	add	x3, x5, #0x1
  41b018:	ldrh	w8, [x10, w6, sxtw #1]
  41b01c:	tbnz	w8, #8, 41aff8 <nftw@plt+0x18478>
  41b020:	mov	x3, x5
  41b024:	sub	x5, x5, #0x1
  41b028:	cmp	w4, #0x24
  41b02c:	b.eq	41b10c <nftw@plt+0x1858c>  // b.none
  41b030:	cmp	w4, #0x7f
  41b034:	mov	x6, x12
  41b038:	mov	x8, #0x1                   	// #1
  41b03c:	b.hi	41b04c <nftw@plt+0x184cc>  // b.pmore
  41b040:	b	41b114 <nftw@plt+0x18594>
  41b044:	mov	x6, x9
  41b048:	mov	x8, x5
  41b04c:	and	w5, w4, #0x3f
  41b050:	lsr	w4, w4, #6
  41b054:	orr	w5, w5, #0xffffff80
  41b058:	sturb	w5, [x6, #-1]
  41b05c:	cmp	w4, #0x3e
  41b060:	sub	x9, x6, #0x1
  41b064:	add	x5, x8, #0x1
  41b068:	b.hi	41b044 <nftw@plt+0x184c4>  // b.pmore
  41b06c:	add	x30, x13, x5
  41b070:	ldurb	w30, [x30, #-1]
  41b074:	tst	w30, w4
  41b078:	b.ne	41b044 <nftw@plt+0x184c4>  // b.any
  41b07c:	ldrb	w9, [x0, x8]
  41b080:	cmp	x18, x5
  41b084:	sub	x8, x6, #0x2
  41b088:	orr	w4, w4, w9
  41b08c:	and	w4, w4, #0xff
  41b090:	sturb	w4, [x6, #-2]
  41b094:	b.cc	41b148 <nftw@plt+0x185c8>  // b.lo, b.ul, b.last
  41b098:	cmp	x8, x12
  41b09c:	b.cs	41afb0 <nftw@plt+0x18430>  // b.hs, b.nlast
  41b0a0:	mov	x6, x7
  41b0a4:	mov	x5, x8
  41b0a8:	b	41b0b0 <nftw@plt+0x18530>
  41b0ac:	ldrb	w4, [x5]
  41b0b0:	strb	w4, [x6], #1
  41b0b4:	add	x5, x5, #0x1
  41b0b8:	cmp	x5, x12
  41b0bc:	b.cc	41b0ac <nftw@plt+0x1852c>  // b.lo, b.ul, b.last
  41b0c0:	add	x4, x29, #0x3e
  41b0c4:	add	x5, x8, #0x1
  41b0c8:	cmp	x4, x5
  41b0cc:	sub	x4, x4, x8
  41b0d0:	csel	x4, x4, x16, cs  // cs = hs, nlast
  41b0d4:	add	x7, x7, x4
  41b0d8:	cmp	x2, x3
  41b0dc:	b.hi	41afb8 <nftw@plt+0x18438>  // b.pmore
  41b0e0:	sub	x21, x7, x19
  41b0e4:	ldr	x0, [x20, #1088]
  41b0e8:	mov	x2, x21
  41b0ec:	mov	x1, x19
  41b0f0:	mov	w3, #0x1                   	// #1
  41b0f4:	bl	432e18 <nftw@plt+0x30298>
  41b0f8:	mov	sp, x29
  41b0fc:	ldp	x19, x20, [sp, #16]
  41b100:	ldr	x21, [sp, #32]
  41b104:	ldp	x29, x30, [sp], #64
  41b108:	ret
  41b10c:	strb	w4, [x7], #1
  41b110:	b	41afb0 <nftw@plt+0x18430>
  41b114:	and	w4, w4, #0xff
  41b118:	strb	w4, [x29, #61]
  41b11c:	cbz	x18, 41b148 <nftw@plt+0x185c8>
  41b120:	mov	x8, x17
  41b124:	add	x3, x5, #0x1
  41b128:	add	x5, x8, #0x1
  41b12c:	strb	w4, [x7]
  41b130:	add	x4, x29, #0x3e
  41b134:	cmp	x4, x5
  41b138:	sub	x4, x4, x8
  41b13c:	csel	x4, x4, x16, cs  // cs = hs, nlast
  41b140:	add	x7, x7, x4
  41b144:	b	41b0d8 <nftw@plt+0x18558>
  41b148:	bl	402aa0 <__errno_location@plt>
  41b14c:	mov	w3, #0x7                   	// #7
  41b150:	str	w3, [x0]
  41b154:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41b158:	mov	x0, x20
  41b15c:	add	x2, x2, #0x850
  41b160:	mov	w1, #0x3                   	// #3
  41b164:	bl	41f770 <nftw@plt+0x1cbf0>
  41b168:	b	41b0e4 <nftw@plt+0x18564>
  41b16c:	mov	w4, #0x0                   	// #0
  41b170:	b	41b118 <nftw@plt+0x18598>
  41b174:	mov	x21, #0x0                   	// #0
  41b178:	b	41b0e4 <nftw@plt+0x18564>
  41b17c:	nop
  41b180:	stp	x29, x30, [sp, #-128]!
  41b184:	mov	x29, sp
  41b188:	stp	x21, x22, [sp, #32]
  41b18c:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41b190:	add	x22, x22, #0x618
  41b194:	mov	x21, x3
  41b198:	add	x8, sp, #0x50
  41b19c:	stp	x19, x20, [sp, #16]
  41b1a0:	mov	x19, x2
  41b1a4:	mov	x20, x4
  41b1a8:	mov	x2, x1
  41b1ac:	mov	x1, x22
  41b1b0:	stp	x23, x24, [sp, #48]
  41b1b4:	mov	x24, x5
  41b1b8:	mov	x23, x6
  41b1bc:	stp	x25, x26, [sp, #64]
  41b1c0:	mov	x25, x0
  41b1c4:	bl	416da0 <nftw@plt+0x14220>
  41b1c8:	ldr	x26, [sp, #80]
  41b1cc:	adrp	x1, 417000 <nftw@plt+0x14480>
  41b1d0:	add	x1, x1, #0xd8
  41b1d4:	cmp	x26, x1
  41b1d8:	b.eq	41b2e8 <nftw@plt+0x18768>  // b.none
  41b1dc:	cmp	x20, #0x10, lsl #12
  41b1e0:	mov	x0, #0x10000               	// #65536
  41b1e4:	ldr	x21, [sp, #88]
  41b1e8:	csel	x0, x20, x0, cs  // cs = hs, nlast
  41b1ec:	str	x0, [sp, #112]
  41b1f0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41b1f4:	str	x0, [sp, #104]
  41b1f8:	mov	x2, x20
  41b1fc:	str	xzr, [sp, #120]
  41b200:	add	x3, sp, #0x68
  41b204:	mov	x1, x19
  41b208:	mov	x0, x21
  41b20c:	blr	x26
  41b210:	tst	w0, #0xff
  41b214:	b.eq	41b2f4 <nftw@plt+0x18774>  // b.none
  41b218:	mov	x0, x19
  41b21c:	bl	402910 <free@plt>
  41b220:	adrp	x0, 416000 <nftw@plt+0x13480>
  41b224:	add	x0, x0, #0xf58
  41b228:	cmp	x26, x0
  41b22c:	b.eq	41b328 <nftw@plt+0x187a8>  // b.none
  41b230:	ldp	x19, x21, [sp, #104]
  41b234:	ldr	x20, [sp, #120]
  41b238:	add	x0, x20, #0x1, lsl #12
  41b23c:	cmp	x0, x21
  41b240:	add	x1, x20, #0x10
  41b244:	b.cc	41b2bc <nftw@plt+0x1873c>  // b.lo, b.ul, b.last
  41b248:	cmp	x21, x1
  41b24c:	b.cc	41b2bc <nftw@plt+0x1873c>  // b.lo, b.ul, b.last
  41b250:	add	x19, x19, x20
  41b254:	stp	xzr, xzr, [x19]
  41b258:	ldr	x0, [sp, #120]
  41b25c:	cbz	x0, 41b2e0 <nftw@plt+0x18760>
  41b260:	ldr	x2, [sp, #104]
  41b264:	add	x1, x2, x0
  41b268:	ldurb	w3, [x1, #-1]
  41b26c:	cmp	w3, #0xd
  41b270:	b.eq	41b35c <nftw@plt+0x187dc>  // b.none
  41b274:	mov	w0, #0xa                   	// #10
  41b278:	strb	w0, [x1]
  41b27c:	ldr	x1, [sp, #104]
  41b280:	ldr	x2, [sp, #120]
  41b284:	str	x2, [x23]
  41b288:	mov	x0, x1
  41b28c:	cmp	x2, #0x2
  41b290:	b.ls	41b2a0 <nftw@plt+0x18720>  // b.plast
  41b294:	ldrb	w3, [x1]
  41b298:	cmp	w3, #0xef
  41b29c:	b.eq	41b334 <nftw@plt+0x187b4>  // b.none
  41b2a0:	ldp	x19, x20, [sp, #16]
  41b2a4:	ldp	x21, x22, [sp, #32]
  41b2a8:	ldp	x25, x26, [sp, #64]
  41b2ac:	str	x1, [x24]
  41b2b0:	ldp	x23, x24, [sp, #48]
  41b2b4:	ldp	x29, x30, [sp], #128
  41b2b8:	ret
  41b2bc:	mov	x0, x19
  41b2c0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41b2c4:	ldr	x20, [sp, #120]
  41b2c8:	mov	x19, x0
  41b2cc:	str	x0, [sp, #104]
  41b2d0:	add	x19, x19, x20
  41b2d4:	stp	xzr, xzr, [x19]
  41b2d8:	ldr	x0, [sp, #120]
  41b2dc:	cbnz	x0, 41b260 <nftw@plt+0x186e0>
  41b2e0:	ldr	x1, [sp, #104]
  41b2e4:	b	41b274 <nftw@plt+0x186f4>
  41b2e8:	stp	x19, x21, [sp, #104]
  41b2ec:	str	x20, [sp, #120]
  41b2f0:	b	41b238 <nftw@plt+0x186b8>
  41b2f4:	ldr	x3, [x25, #1184]
  41b2f8:	mov	x4, x22
  41b2fc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  41b300:	add	x2, x2, #0xb20
  41b304:	mov	w1, #0x3                   	// #3
  41b308:	mov	x0, x25
  41b30c:	bl	41f298 <nftw@plt+0x1c718>
  41b310:	mov	x0, x19
  41b314:	bl	402910 <free@plt>
  41b318:	adrp	x0, 416000 <nftw@plt+0x13480>
  41b31c:	add	x0, x0, #0xf58
  41b320:	cmp	x26, x0
  41b324:	b.ne	41b230 <nftw@plt+0x186b0>  // b.any
  41b328:	mov	x0, x21
  41b32c:	bl	402560 <iconv_close@plt>
  41b330:	b	41b230 <nftw@plt+0x186b0>
  41b334:	ldrb	w3, [x1, #1]
  41b338:	cmp	w3, #0xbb
  41b33c:	b.ne	41b2a0 <nftw@plt+0x18720>  // b.any
  41b340:	ldrb	w3, [x1, #2]
  41b344:	cmp	w3, #0xbf
  41b348:	b.ne	41b2a0 <nftw@plt+0x18720>  // b.any
  41b34c:	sub	x2, x2, #0x3
  41b350:	add	x0, x1, #0x3
  41b354:	str	x2, [x23]
  41b358:	b	41b2a0 <nftw@plt+0x18720>
  41b35c:	strb	w3, [x2, x0]
  41b360:	b	41b27c <nftw@plt+0x186fc>
  41b364:	nop
  41b368:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x125a0>
  41b36c:	add	x0, x0, #0x618
  41b370:	ret
  41b374:	nop
  41b378:	stp	x29, x30, [sp, #-32]!
  41b37c:	mov	x29, sp
  41b380:	stp	x19, x20, [sp, #16]
  41b384:	mov	x20, x0
  41b388:	mov	x19, x2
  41b38c:	mov	x0, x2
  41b390:	str	x2, [x20, #8]
  41b394:	bl	42bba0 <nftw@plt+0x29020>
  41b398:	mov	w1, w0
  41b39c:	mov	x3, #0x0                   	// #0
  41b3a0:	mov	w2, #0x1                   	// #1
  41b3a4:	mov	x0, x19
  41b3a8:	bl	42bfa0 <nftw@plt+0x29420>
  41b3ac:	mov	w1, w0
  41b3b0:	str	w1, [x20]
  41b3b4:	mov	x0, x19
  41b3b8:	bl	42b898 <nftw@plt+0x28d18>
  41b3bc:	ldrb	w0, [x0, #7]
  41b3c0:	mov	w1, #0x1                   	// #1
  41b3c4:	lsl	w1, w1, w0
  41b3c8:	str	w1, [x20, #4]
  41b3cc:	ldp	x19, x20, [sp, #16]
  41b3d0:	ldp	x29, x30, [sp], #32
  41b3d4:	ret
  41b3d8:	mov	x1, x0
  41b3dc:	ldr	w0, [x0]
  41b3e0:	mov	w2, #0x60000000            	// #1610612736
  41b3e4:	cmp	w0, w2
  41b3e8:	b.hi	41b3f8 <nftw@plt+0x18878>  // b.pmore
  41b3ec:	ldr	w2, [x1, #4]
  41b3f0:	add	w2, w2, w0
  41b3f4:	str	w2, [x1]
  41b3f8:	bfi	x0, x0, #32, #32
  41b3fc:	ret
  41b400:	ldrb	w3, [x1, #18]
  41b404:	mov	w4, #0xffffffcd            	// #-51
  41b408:	mov	w0, #0x1                   	// #1
  41b40c:	str	xzr, [x1, #24]
  41b410:	and	w3, w3, #0xfffffffc
  41b414:	strb	w3, [x1, #18]
  41b418:	ldrh	w2, [x1, #18]
  41b41c:	mov	w3, w2
  41b420:	ubfx	x2, x2, #2, #8
  41b424:	and	w2, w2, w4
  41b428:	bfi	w3, w2, #2, #8
  41b42c:	strh	w3, [x1, #18]
  41b430:	ret
  41b434:	nop
  41b438:	stp	x29, x30, [sp, #-32]!
  41b43c:	mov	x29, sp
  41b440:	stp	x19, x20, [sp, #16]
  41b444:	mov	w20, #0x0                   	// #0
  41b448:	cbz	x0, 41b468 <nftw@plt+0x188e8>
  41b44c:	mov	x19, x0
  41b450:	mov	w20, #0x0                   	// #0
  41b454:	ldrb	w0, [x19, #16]
  41b458:	cbnz	w0, 41b478 <nftw@plt+0x188f8>
  41b45c:	ldr	x19, [x19]
  41b460:	add	w20, w20, #0x1
  41b464:	cbnz	x19, 41b454 <nftw@plt+0x188d4>
  41b468:	mov	w0, w20
  41b46c:	ldp	x19, x20, [sp, #16]
  41b470:	ldp	x29, x30, [sp], #32
  41b474:	ret
  41b478:	ldr	x0, [x19, #24]
  41b47c:	bl	41b438 <nftw@plt+0x188b8>
  41b480:	add	w20, w20, w0
  41b484:	b	41b45c <nftw@plt+0x188dc>
  41b488:	stp	x29, x30, [sp, #-32]!
  41b48c:	mov	x29, sp
  41b490:	stp	x19, x20, [sp, #16]
  41b494:	and	w20, w1, #0xff
  41b498:	mov	x19, x0
  41b49c:	bl	42a820 <nftw@plt+0x27ca0>
  41b4a0:	ldrb	w1, [x0, #4]
  41b4a4:	cmp	w1, #0x35
  41b4a8:	b.eq	41b4e0 <nftw@plt+0x18960>  // b.none
  41b4ac:	ldrh	w2, [x0, #6]
  41b4b0:	tbnz	w2, #4, 41b550 <nftw@plt+0x189d0>
  41b4b4:	cmp	w1, #0x16
  41b4b8:	b.eq	41b524 <nftw@plt+0x189a4>  // b.none
  41b4bc:	mov	x0, x19
  41b4c0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b4c4:	mov	w1, #0x3                   	// #3
  41b4c8:	add	x2, x2, #0x788
  41b4cc:	bl	41f298 <nftw@plt+0x1c718>
  41b4d0:	mov	x0, #0x0                   	// #0
  41b4d4:	ldp	x19, x20, [sp, #16]
  41b4d8:	ldp	x29, x30, [sp], #32
  41b4dc:	ret
  41b4e0:	ldr	x0, [x0, #8]
  41b4e4:	cbz	w20, 41b50c <nftw@plt+0x1898c>
  41b4e8:	ldr	x1, [x19, #1248]
  41b4ec:	cmp	x1, x0
  41b4f0:	b.eq	41b598 <nftw@plt+0x18a18>  // b.none
  41b4f4:	ldr	x1, [x19, #1288]
  41b4f8:	cmp	x1, x0
  41b4fc:	b.eq	41b57c <nftw@plt+0x189fc>  // b.none
  41b500:	ldr	x1, [x19, #1296]
  41b504:	cmp	x1, x0
  41b508:	b.eq	41b57c <nftw@plt+0x189fc>  // b.none
  41b50c:	ldrh	w1, [x0, #18]
  41b510:	ldp	x19, x20, [sp, #16]
  41b514:	tst	x1, #0x8
  41b518:	csel	x0, x0, xzr, eq  // eq = none
  41b51c:	ldp	x29, x30, [sp], #32
  41b520:	ret
  41b524:	ldr	x3, [x19, #144]
  41b528:	mov	x0, x19
  41b52c:	mov	w1, #0x3                   	// #3
  41b530:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b534:	add	x2, x2, #0x760
  41b538:	ldr	x3, [x3, #8]
  41b53c:	bl	41f298 <nftw@plt+0x1c718>
  41b540:	mov	x0, #0x0                   	// #0
  41b544:	ldp	x19, x20, [sp, #16]
  41b548:	ldp	x29, x30, [sp], #32
  41b54c:	ret
  41b550:	ldr	x3, [x0, #8]
  41b554:	mov	w1, #0x3                   	// #3
  41b558:	mov	x0, x19
  41b55c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b560:	add	x2, x2, #0x720
  41b564:	ldr	x3, [x3]
  41b568:	bl	41f298 <nftw@plt+0x1c718>
  41b56c:	mov	x0, #0x0                   	// #0
  41b570:	ldp	x19, x20, [sp, #16]
  41b574:	ldp	x29, x30, [sp], #32
  41b578:	ret
  41b57c:	mov	x0, x19
  41b580:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b584:	mov	w1, #0x3                   	// #3
  41b588:	add	x2, x2, #0x6e8
  41b58c:	bl	41f298 <nftw@plt+0x1c718>
  41b590:	mov	x0, #0x0                   	// #0
  41b594:	b	41b4d4 <nftw@plt+0x18954>
  41b598:	mov	x0, x19
  41b59c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b5a0:	mov	w1, #0x3                   	// #3
  41b5a4:	add	x2, x2, #0x6b8
  41b5a8:	bl	41f298 <nftw@plt+0x1c718>
  41b5ac:	mov	x0, #0x0                   	// #0
  41b5b0:	b	41b4d4 <nftw@plt+0x18954>
  41b5b4:	nop
  41b5b8:	stp	x29, x30, [sp, #-32]!
  41b5bc:	mov	x29, sp
  41b5c0:	stp	x19, x20, [sp, #16]
  41b5c4:	mov	w20, w1
  41b5c8:	mov	x19, x0
  41b5cc:	bl	42a820 <nftw@plt+0x27ca0>
  41b5d0:	mov	x1, x0
  41b5d4:	ldrb	w0, [x0, #4]
  41b5d8:	cmp	w0, #0x37
  41b5dc:	b.eq	41b5f8 <nftw@plt+0x18a78>  // b.none
  41b5e0:	cmp	w0, #0x16
  41b5e4:	mov	w0, #0x0                   	// #0
  41b5e8:	b.ne	41b604 <nftw@plt+0x18a84>  // b.any
  41b5ec:	ldp	x19, x20, [sp, #16]
  41b5f0:	ldp	x29, x30, [sp], #32
  41b5f4:	ret
  41b5f8:	ldr	w0, [x1, #8]
  41b5fc:	cmp	w0, #0x1
  41b600:	b.eq	41b634 <nftw@plt+0x18ab4>  // b.none
  41b604:	mov	x0, x19
  41b608:	bl	428d50 <nftw@plt+0x261d0>
  41b60c:	mov	w1, #0x3                   	// #3
  41b610:	mov	x3, x0
  41b614:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b618:	mov	x0, x19
  41b61c:	add	x2, x2, #0x7a8
  41b620:	bl	41f298 <nftw@plt+0x1c718>
  41b624:	mov	w0, #0x0                   	// #0
  41b628:	ldp	x19, x20, [sp, #16]
  41b62c:	ldp	x29, x30, [sp], #32
  41b630:	ret
  41b634:	ldr	x0, [x1, #16]
  41b638:	ldrb	w0, [x0]
  41b63c:	sub	w0, w0, #0x30
  41b640:	cmp	w0, w20
  41b644:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  41b648:	b.hi	41b604 <nftw@plt+0x18a84>  // b.pmore
  41b64c:	cmp	w0, #0x4
  41b650:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  41b654:	b.ne	41b604 <nftw@plt+0x18a84>  // b.any
  41b658:	cmp	w20, #0x0
  41b65c:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  41b660:	b.eq	41b604 <nftw@plt+0x18a84>  // b.none
  41b664:	b	41b5ec <nftw@plt+0x18a6c>
  41b668:	stp	x29, x30, [sp, #-48]!
  41b66c:	mov	x29, sp
  41b670:	stp	x19, x20, [sp, #16]
  41b674:	mov	x20, x0
  41b678:	mov	w0, #0x1                   	// #1
  41b67c:	str	x21, [sp, #32]
  41b680:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b684:	add	x21, x21, #0x7f8
  41b688:	strb	w0, [x20, #23]
  41b68c:	mov	x0, x20
  41b690:	bl	42a820 <nftw@plt+0x27ca0>
  41b694:	ldrb	w1, [x0, #4]
  41b698:	cmp	w1, #0x16
  41b69c:	b.eq	41b6e4 <nftw@plt+0x18b64>  // b.none
  41b6a0:	cmp	w1, #0x35
  41b6a4:	b.ne	41b710 <nftw@plt+0x18b90>  // b.any
  41b6a8:	ldr	x19, [x0, #8]
  41b6ac:	ldrh	w1, [x19, #18]
  41b6b0:	tbnz	w1, #3, 41b68c <nftw@plt+0x18b0c>
  41b6b4:	ldrb	w0, [x19, #18]
  41b6b8:	tbnz	w0, #1, 41b6f8 <nftw@plt+0x18b78>
  41b6bc:	mov	x0, x19
  41b6c0:	bl	42e890 <nftw@plt+0x2bd10>
  41b6c4:	ldrh	w1, [x19, #18]
  41b6c8:	mov	x0, x20
  41b6cc:	orr	w1, w1, #0x18
  41b6d0:	strh	w1, [x19, #18]
  41b6d4:	bl	42a820 <nftw@plt+0x27ca0>
  41b6d8:	ldrb	w1, [x0, #4]
  41b6dc:	cmp	w1, #0x16
  41b6e0:	b.ne	41b6a0 <nftw@plt+0x18b20>  // b.any
  41b6e4:	strb	wzr, [x20, #23]
  41b6e8:	ldp	x19, x20, [sp, #16]
  41b6ec:	ldr	x21, [sp, #32]
  41b6f0:	ldp	x29, x30, [sp], #48
  41b6f4:	ret
  41b6f8:	ldr	x3, [x19]
  41b6fc:	mov	x2, x21
  41b700:	mov	x0, x20
  41b704:	mov	w1, #0x0                   	// #0
  41b708:	bl	41f298 <nftw@plt+0x1c718>
  41b70c:	b	41b6bc <nftw@plt+0x18b3c>
  41b710:	mov	x0, x20
  41b714:	mov	w1, #0x3                   	// #3
  41b718:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b71c:	add	x2, x2, #0x7d0
  41b720:	bl	41f298 <nftw@plt+0x1c718>
  41b724:	strb	wzr, [x20, #23]
  41b728:	ldp	x19, x20, [sp, #16]
  41b72c:	ldr	x21, [sp, #32]
  41b730:	ldp	x29, x30, [sp], #48
  41b734:	ret
  41b738:	stp	x29, x30, [sp, #-96]!
  41b73c:	mov	x29, sp
  41b740:	stp	x19, x20, [sp, #16]
  41b744:	mov	x19, x0
  41b748:	mov	w20, w1
  41b74c:	stp	x21, x22, [sp, #32]
  41b750:	mov	x22, x2
  41b754:	stp	x23, x24, [sp, #48]
  41b758:	stp	x25, x26, [sp, #64]
  41b75c:	str	x27, [sp, #80]
  41b760:	ldrb	w2, [x0, #24]
  41b764:	add	w2, w2, #0x1
  41b768:	strb	w2, [x0, #24]
  41b76c:	str	xzr, [x22]
  41b770:	bl	431988 <nftw@plt+0x2ee08>
  41b774:	mov	x21, x0
  41b778:	ldrb	w0, [x0, #4]
  41b77c:	cmp	w0, #0x16
  41b780:	b.eq	41b940 <nftw@plt+0x18dc0>  // b.none
  41b784:	ldr	w23, [x21]
  41b788:	cmp	w0, #0x35
  41b78c:	b.ne	41b804 <nftw@plt+0x18c84>  // b.any
  41b790:	mov	x0, x19
  41b794:	bl	431988 <nftw@plt+0x2ee08>
  41b798:	ldrb	w0, [x0, #4]
  41b79c:	cmp	w0, #0x14
  41b7a0:	b.eq	41b890 <nftw@plt+0x18d10>  // b.none
  41b7a4:	cmp	w20, #0x4
  41b7a8:	b.eq	41b994 <nftw@plt+0x18e14>  // b.none
  41b7ac:	cmp	w0, #0x16
  41b7b0:	ccmp	w20, #0x11, #0x0, eq  // eq = none
  41b7b4:	b.eq	41b840 <nftw@plt+0x18cc0>  // b.none
  41b7b8:	mov	w2, w23
  41b7bc:	mov	x0, x19
  41b7c0:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b7c4:	mov	w3, #0x0                   	// #0
  41b7c8:	add	x4, x4, #0x858
  41b7cc:	mov	w1, #0x3                   	// #3
  41b7d0:	bl	41f458 <nftw@plt+0x1c8d8>
  41b7d4:	mov	x0, #0x0                   	// #0
  41b7d8:	ldrb	w1, [x19, #24]
  41b7dc:	sub	w1, w1, #0x1
  41b7e0:	strb	w1, [x19, #24]
  41b7e4:	mov	sp, x29
  41b7e8:	ldp	x19, x20, [sp, #16]
  41b7ec:	ldp	x21, x22, [sp, #32]
  41b7f0:	ldp	x23, x24, [sp, #48]
  41b7f4:	ldp	x25, x26, [sp, #64]
  41b7f8:	ldr	x27, [sp, #80]
  41b7fc:	ldp	x29, x30, [sp], #96
  41b800:	ret
  41b804:	mov	w2, w23
  41b808:	mov	x0, x19
  41b80c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b810:	mov	w3, #0x0                   	// #0
  41b814:	add	x4, x4, #0x838
  41b818:	mov	w1, #0x3                   	// #3
  41b81c:	bl	41f458 <nftw@plt+0x1c8d8>
  41b820:	mov	x0, #0x0                   	// #0
  41b824:	b	41b7d8 <nftw@plt+0x18c58>
  41b828:	cbz	w26, 41b9a4 <nftw@plt+0x18e24>
  41b82c:	ldrh	w0, [x27, #30]
  41b830:	str	w26, [x27, #12]
  41b834:	and	w0, w0, #0xfffffffe
  41b838:	strh	w0, [x27, #30]
  41b83c:	str	x27, [x22]
  41b840:	ldr	x0, [x21, #8]
  41b844:	mov	w1, #0x23                  	// #35
  41b848:	ldr	w2, [x0, #8]
  41b84c:	add	w0, w2, #0x1
  41b850:	add	w22, w2, #0x1
  41b854:	add	x0, x0, #0xf
  41b858:	mov	w2, w2
  41b85c:	and	x0, x0, #0x1fffffff0
  41b860:	sub	sp, sp, x0
  41b864:	mov	x20, sp
  41b868:	mov	x0, x20
  41b86c:	strb	w1, [x0], #1
  41b870:	ldr	x1, [x21, #8]
  41b874:	ldr	x1, [x1]
  41b878:	bl	402490 <memcpy@plt>
  41b87c:	mov	w2, w22
  41b880:	mov	x1, x20
  41b884:	mov	x0, x19
  41b888:	bl	425de0 <nftw@plt+0x23260>
  41b88c:	b	41b7d8 <nftw@plt+0x18c58>
  41b890:	ldr	x0, [x19, #56]
  41b894:	ldp	x2, x0, [x0, #16]
  41b898:	sub	x0, x0, x2
  41b89c:	cmp	x0, #0x2f
  41b8a0:	b.ls	41b978 <nftw@plt+0x18df8>  // b.plast
  41b8a4:	mov	x0, x19
  41b8a8:	mov	w1, #0x1                   	// #1
  41b8ac:	add	x25, x19, #0x38
  41b8b0:	bl	42ea20 <nftw@plt+0x2bea0>
  41b8b4:	mov	w26, #0x0                   	// #0
  41b8b8:	mov	x27, x0
  41b8bc:	mov	w24, #0x18                  	// #24
  41b8c0:	mov	x23, #0x48                  	// #72
  41b8c4:	str	xzr, [x0]
  41b8c8:	b	41b8ec <nftw@plt+0x18d6c>
  41b8cc:	ubfiz	x1, x26, #1, #32
  41b8d0:	add	x1, x1, w26, uxtw
  41b8d4:	add	w26, w26, #0x1
  41b8d8:	ldp	x2, x3, [x20]
  41b8dc:	add	x1, x27, x1, lsl #3
  41b8e0:	stp	x2, x3, [x1, #24]
  41b8e4:	ldr	x0, [x20, #16]
  41b8e8:	str	x0, [x1, #40]
  41b8ec:	mov	x0, x19
  41b8f0:	bl	431988 <nftw@plt+0x2ee08>
  41b8f4:	mov	x20, x0
  41b8f8:	ldrb	w0, [x0, #4]
  41b8fc:	umaddl	x1, w26, w24, x23
  41b900:	cmp	w0, #0x15
  41b904:	b.eq	41b828 <nftw@plt+0x18ca8>  // b.none
  41b908:	cmp	w0, #0x16
  41b90c:	b.eq	41b95c <nftw@plt+0x18ddc>  // b.none
  41b910:	ldr	x0, [x19, #56]
  41b914:	ldp	x27, x0, [x0, #16]
  41b918:	sub	x0, x0, x27
  41b91c:	cmp	x0, x1
  41b920:	b.cs	41b8cc <nftw@plt+0x18d4c>  // b.hs, b.nlast
  41b924:	mov	x0, x19
  41b928:	mov	x1, x25
  41b92c:	mov	x2, #0x18                  	// #24
  41b930:	bl	427e18 <nftw@plt+0x25298>
  41b934:	ldr	x0, [x19, #56]
  41b938:	ldr	x27, [x0, #16]
  41b93c:	b	41b8cc <nftw@plt+0x18d4c>
  41b940:	mov	x0, x19
  41b944:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b948:	mov	w1, #0x3                   	// #3
  41b94c:	add	x2, x2, #0x818
  41b950:	bl	41f298 <nftw@plt+0x1c718>
  41b954:	mov	x0, #0x0                   	// #0
  41b958:	b	41b7d8 <nftw@plt+0x18c58>
  41b95c:	mov	x0, x19
  41b960:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b964:	mov	w1, #0x3                   	// #3
  41b968:	add	x2, x2, #0x878
  41b96c:	bl	41f298 <nftw@plt+0x1c718>
  41b970:	mov	x0, #0x0                   	// #0
  41b974:	b	41b7d8 <nftw@plt+0x18c58>
  41b978:	mov	x0, x19
  41b97c:	mov	x2, #0x30                  	// #48
  41b980:	add	x1, x19, #0x38
  41b984:	bl	427e18 <nftw@plt+0x25298>
  41b988:	ldr	x0, [x19, #56]
  41b98c:	ldr	x2, [x0, #16]
  41b990:	b	41b8a4 <nftw@plt+0x18d24>
  41b994:	mov	x0, x19
  41b998:	mov	w1, #0x1                   	// #1
  41b99c:	bl	42e590 <nftw@plt+0x2ba10>
  41b9a0:	b	41b840 <nftw@plt+0x18cc0>
  41b9a4:	mov	x0, x19
  41b9a8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41b9ac:	mov	w1, #0x3                   	// #3
  41b9b0:	add	x2, x2, #0x898
  41b9b4:	bl	41f298 <nftw@plt+0x1c718>
  41b9b8:	mov	x0, #0x0                   	// #0
  41b9bc:	b	41b7d8 <nftw@plt+0x18c58>
  41b9c0:	stp	x29, x30, [sp, #-48]!
  41b9c4:	mov	x29, sp
  41b9c8:	stp	x19, x20, [sp, #16]
  41b9cc:	ldr	x19, [x0, #24]
  41b9d0:	stp	x21, x22, [sp, #32]
  41b9d4:	add	x21, x0, #0x18
  41b9d8:	cbz	x19, 41ba48 <nftw@plt+0x18ec8>
  41b9dc:	mov	x22, x1
  41b9e0:	b	41b9f0 <nftw@plt+0x18e70>
  41b9e4:	ldr	x21, [x21]
  41b9e8:	ldr	x19, [x21]
  41b9ec:	cbz	x19, 41ba48 <nftw@plt+0x18ec8>
  41b9f0:	ldr	w0, [x19, #12]
  41b9f4:	ldr	w1, [x22, #12]
  41b9f8:	cmp	w0, w1
  41b9fc:	b.ne	41b9e4 <nftw@plt+0x18e64>  // b.any
  41ba00:	cbz	w0, 41ba48 <nftw@plt+0x18ec8>
  41ba04:	mov	w20, #0x0                   	// #0
  41ba08:	b	41ba1c <nftw@plt+0x18e9c>
  41ba0c:	ldr	w0, [x19, #12]
  41ba10:	add	w20, w20, #0x1
  41ba14:	cmp	w0, w20
  41ba18:	b.ls	41ba40 <nftw@plt+0x18ec0>  // b.plast
  41ba1c:	mov	w0, w20
  41ba20:	add	x0, x0, #0x1
  41ba24:	add	x0, x0, x0, lsl #1
  41ba28:	lsl	x0, x0, #3
  41ba2c:	add	x1, x22, x0
  41ba30:	add	x0, x19, x0
  41ba34:	bl	4275e0 <nftw@plt+0x24a60>
  41ba38:	cbnz	w0, 41ba0c <nftw@plt+0x18e8c>
  41ba3c:	ldr	w0, [x19, #12]
  41ba40:	cmp	w20, w0
  41ba44:	b.ne	41b9e4 <nftw@plt+0x18e64>  // b.any
  41ba48:	mov	x0, x21
  41ba4c:	ldp	x19, x20, [sp, #16]
  41ba50:	ldp	x21, x22, [sp, #32]
  41ba54:	ldp	x29, x30, [sp], #48
  41ba58:	ret
  41ba5c:	nop
  41ba60:	stp	x29, x30, [sp, #-48]!
  41ba64:	mov	x29, sp
  41ba68:	stp	x19, x20, [sp, #16]
  41ba6c:	and	w20, w1, #0xff
  41ba70:	mov	x19, x0
  41ba74:	bl	42a820 <nftw@plt+0x27ca0>
  41ba78:	ldrb	w4, [x0, #4]
  41ba7c:	cmp	w4, #0x3e
  41ba80:	b.eq	41babc <nftw@plt+0x18f3c>  // b.none
  41ba84:	cmp	w20, #0x0
  41ba88:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  41ba8c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x205a0>
  41ba90:	add	x1, x1, #0xfd0
  41ba94:	add	x3, x3, #0x5a8
  41ba98:	mov	x0, x19
  41ba9c:	csel	x3, x3, x1, ne  // ne = any
  41baa0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41baa4:	mov	w1, #0x3                   	// #3
  41baa8:	add	x2, x2, #0x8b8
  41baac:	bl	41f298 <nftw@plt+0x1c718>
  41bab0:	ldp	x19, x20, [sp, #16]
  41bab4:	ldp	x29, x30, [sp], #48
  41bab8:	ret
  41babc:	add	x1, x0, #0x8
  41bac0:	add	x3, sp, #0x20
  41bac4:	mov	x0, x19
  41bac8:	mov	x2, #0x1                   	// #1
  41bacc:	bl	41ab08 <nftw@plt+0x17f88>
  41bad0:	tst	w0, #0xff
  41bad4:	b.eq	41ba84 <nftw@plt+0x18f04>  // b.none
  41bad8:	ldr	w0, [sp, #32]
  41badc:	cbz	w0, 41ba84 <nftw@plt+0x18f04>
  41bae0:	ldr	x3, [sp, #40]
  41bae4:	cmp	w20, #0x0
  41bae8:	mov	x0, x19
  41baec:	mov	w1, #0x3                   	// #3
  41baf0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41baf4:	csel	w1, w1, wzr, ne  // ne = any
  41baf8:	add	x2, x2, #0x9b0
  41bafc:	bl	41f298 <nftw@plt+0x1c718>
  41bb00:	ldr	x0, [sp, #40]
  41bb04:	bl	402910 <free@plt>
  41bb08:	ldp	x19, x20, [sp, #16]
  41bb0c:	ldp	x29, x30, [sp], #48
  41bb10:	ret
  41bb14:	nop
  41bb18:	mov	w1, #0x1                   	// #1
  41bb1c:	b	41ba60 <nftw@plt+0x18ee0>
  41bb20:	mov	w1, #0x0                   	// #0
  41bb24:	b	41ba60 <nftw@plt+0x18ee0>
  41bb28:	stp	x29, x30, [sp, #-64]!
  41bb2c:	mov	x29, sp
  41bb30:	stp	x19, x20, [sp, #16]
  41bb34:	mov	x20, x0
  41bb38:	mov	x0, #0x400                 	// #1024
  41bb3c:	stp	x21, x22, [sp, #32]
  41bb40:	mov	x21, #0x0                   	// #0
  41bb44:	stp	x23, x24, [sp, #48]
  41bb48:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41bb4c:	mov	x22, x0
  41bb50:	mov	x24, #0x400                 	// #1024
  41bb54:	mov	w23, #0x20                  	// #32
  41bb58:	mov	x0, x20
  41bb5c:	bl	431988 <nftw@plt+0x2ee08>
  41bb60:	ldrb	w1, [x0, #4]
  41bb64:	mov	x19, x0
  41bb68:	cmp	w1, #0x53
  41bb6c:	b.eq	41bb58 <nftw@plt+0x18fd8>  // b.none
  41bb70:	cmp	w1, #0x2
  41bb74:	b.eq	41bbf4 <nftw@plt+0x19074>  // b.none
  41bb78:	cmp	w1, #0x16
  41bb7c:	b.eq	41bbe0 <nftw@plt+0x19060>  // b.none
  41bb80:	bl	427170 <nftw@plt+0x245f0>
  41bb84:	add	w1, w0, #0x2
  41bb88:	add	x0, x21, x1
  41bb8c:	cmp	x0, x24
  41bb90:	b.hi	41bbc4 <nftw@plt+0x19044>  // b.pmore
  41bb94:	ldrh	w4, [x19, #6]
  41bb98:	add	x5, x21, #0x1
  41bb9c:	mov	x1, x19
  41bba0:	mov	x0, x20
  41bba4:	add	x2, x22, x21
  41bba8:	mov	w3, #0x1                   	// #1
  41bbac:	tbz	w4, #0, 41bbb8 <nftw@plt+0x19038>
  41bbb0:	add	x2, x22, x5
  41bbb4:	strb	w23, [x22, x21]
  41bbb8:	bl	427240 <nftw@plt+0x246c0>
  41bbbc:	sub	x21, x0, x22
  41bbc0:	b	41bb58 <nftw@plt+0x18fd8>
  41bbc4:	add	x1, x24, x1
  41bbc8:	mov	x0, x22
  41bbcc:	lsl	x24, x1, #1
  41bbd0:	mov	x1, x24
  41bbd4:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41bbd8:	mov	x22, x0
  41bbdc:	b	41bb94 <nftw@plt+0x19014>
  41bbe0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41bbe4:	mov	x0, x20
  41bbe8:	add	x2, x2, #0x8e0
  41bbec:	mov	w1, #0x3                   	// #3
  41bbf0:	bl	41f298 <nftw@plt+0x1c718>
  41bbf4:	strb	wzr, [x22, x21]
  41bbf8:	mov	x0, x22
  41bbfc:	ldp	x19, x20, [sp, #16]
  41bc00:	ldp	x21, x22, [sp, #32]
  41bc04:	ldp	x23, x24, [sp, #48]
  41bc08:	ldp	x29, x30, [sp], #64
  41bc0c:	ret
  41bc10:	stp	x29, x30, [sp, #-64]!
  41bc14:	mov	x29, sp
  41bc18:	stp	x19, x20, [sp, #16]
  41bc1c:	mov	x19, x0
  41bc20:	mov	w20, w1
  41bc24:	ldr	x0, [x0, #448]
  41bc28:	stp	x21, x22, [sp, #32]
  41bc2c:	mov	x1, #0x0                   	// #0
  41bc30:	str	x23, [sp, #48]
  41bc34:	mov	w22, w2
  41bc38:	ldur	w23, [x0, #-24]
  41bc3c:	cbz	w3, 41bc48 <nftw@plt+0x190c8>
  41bc40:	ldr	x0, [x19, #144]
  41bc44:	ldr	x1, [x0, #8]
  41bc48:	mov	x0, x19
  41bc4c:	ldrb	w3, [x19, #24]
  41bc50:	add	w3, w3, #0x1
  41bc54:	strb	w3, [x19, #24]
  41bc58:	bl	427ac8 <nftw@plt+0x24f48>
  41bc5c:	mov	x21, x0
  41bc60:	ldrb	w1, [x19, #24]
  41bc64:	cmp	w22, #0x0
  41bc68:	cset	w3, ne  // ne = any
  41bc6c:	sub	w1, w1, #0x1
  41bc70:	strb	w1, [x19, #24]
  41bc74:	cmp	w3, #0x0
  41bc78:	ccmp	w20, #0x1, #0x0, ne  // ne = any
  41bc7c:	b.eq	41bcf8 <nftw@plt+0x19178>  // b.none
  41bc80:	cmp	w20, #0x0
  41bc84:	mov	w2, w23
  41bc88:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  41bc8c:	b.ne	41bcc4 <nftw@plt+0x19144>  // b.any
  41bc90:	mov	w1, w20
  41bc94:	mov	x5, x21
  41bc98:	mov	x0, x19
  41bc9c:	mov	w3, #0x0                   	// #0
  41bca0:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41bca4:	add	x4, x4, #0x9b0
  41bca8:	bl	41f458 <nftw@plt+0x1c8d8>
  41bcac:	mov	x0, x21
  41bcb0:	ldp	x19, x20, [sp, #16]
  41bcb4:	ldp	x21, x22, [sp, #32]
  41bcb8:	ldr	x23, [sp, #48]
  41bcbc:	ldp	x29, x30, [sp], #64
  41bcc0:	b	402910 <free@plt>
  41bcc4:	mov	w1, w22
  41bcc8:	mov	x5, x21
  41bccc:	mov	x0, x19
  41bcd0:	mov	w3, #0x0                   	// #0
  41bcd4:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41bcd8:	add	x4, x4, #0x9b0
  41bcdc:	bl	41f4d0 <nftw@plt+0x1c950>
  41bce0:	mov	x0, x21
  41bce4:	ldp	x19, x20, [sp, #16]
  41bce8:	ldp	x21, x22, [sp, #32]
  41bcec:	ldr	x23, [sp, #48]
  41bcf0:	ldp	x29, x30, [sp], #64
  41bcf4:	b	402910 <free@plt>
  41bcf8:	mov	w2, w23
  41bcfc:	mov	w1, w22
  41bd00:	mov	x5, x21
  41bd04:	mov	x0, x19
  41bd08:	mov	w3, #0x0                   	// #0
  41bd0c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41bd10:	add	x4, x4, #0x9b0
  41bd14:	bl	41f5d0 <nftw@plt+0x1ca50>
  41bd18:	mov	x0, x21
  41bd1c:	ldp	x19, x20, [sp, #16]
  41bd20:	ldp	x21, x22, [sp, #32]
  41bd24:	ldr	x23, [sp, #48]
  41bd28:	ldp	x29, x30, [sp], #64
  41bd2c:	b	402910 <free@plt>
  41bd30:	mov	w3, #0x1                   	// #1
  41bd34:	mov	w2, #0x12                  	// #18
  41bd38:	mov	w1, w3
  41bd3c:	b	41bc10 <nftw@plt+0x19090>
  41bd40:	mov	w3, #0x1                   	// #1
  41bd44:	mov	w2, #0x0                   	// #0
  41bd48:	mov	w1, #0x3                   	// #3
  41bd4c:	b	41bc10 <nftw@plt+0x19090>
  41bd50:	stp	x29, x30, [sp, #-96]!
  41bd54:	mov	x29, sp
  41bd58:	stp	x19, x20, [sp, #16]
  41bd5c:	add	x1, sp, #0x44
  41bd60:	mov	x20, x0
  41bd64:	stp	x21, x22, [sp, #32]
  41bd68:	ldrb	w2, [x0, #24]
  41bd6c:	str	wzr, [sp, #68]
  41bd70:	add	w2, w2, #0x1
  41bd74:	strb	w2, [x0, #24]
  41bd78:	bl	431a38 <nftw@plt+0x2eeb8>
  41bd7c:	mov	x21, x0
  41bd80:	ldp	x0, x1, [x0]
  41bd84:	stp	x0, x1, [sp, #72]
  41bd88:	ldrb	w0, [x21, #4]
  41bd8c:	ldr	x1, [x21, #16]
  41bd90:	str	x1, [sp, #88]
  41bd94:	cmp	w0, #0x35
  41bd98:	b.eq	41bde0 <nftw@plt+0x19260>  // b.none
  41bd9c:	ldr	x0, [x20, #960]
  41bda0:	mov	w1, #0x1                   	// #1
  41bda4:	cbz	x0, 41bdc0 <nftw@plt+0x19240>
  41bda8:	mov	x0, x20
  41bdac:	bl	42e590 <nftw@plt+0x2ba10>
  41bdb0:	ldr	w1, [x20, #48]
  41bdb4:	mov	x0, x20
  41bdb8:	ldr	x2, [x20, #960]
  41bdbc:	blr	x2
  41bdc0:	ldrb	w0, [x20, #24]
  41bdc4:	sub	w0, w0, #0x1
  41bdc8:	and	w0, w0, #0xff
  41bdcc:	strb	w0, [x20, #24]
  41bdd0:	ldp	x19, x20, [sp, #16]
  41bdd4:	ldp	x21, x22, [sp, #32]
  41bdd8:	ldp	x29, x30, [sp], #96
  41bddc:	ret
  41bde0:	ldr	x19, [x20, #896]
  41bde4:	ldr	x1, [x21, #8]
  41bde8:	cbnz	x19, 41bdf8 <nftw@plt+0x19278>
  41bdec:	b	41bd9c <nftw@plt+0x1921c>
  41bdf0:	ldr	x19, [x19]
  41bdf4:	cbz	x19, 41bd9c <nftw@plt+0x1921c>
  41bdf8:	ldr	x0, [x19, #8]
  41bdfc:	cmp	x1, x0
  41be00:	b.ne	41bdf0 <nftw@plt+0x19270>  // b.any
  41be04:	ldrb	w0, [x19, #16]
  41be08:	cbz	w0, 41bed8 <nftw@plt+0x19358>
  41be0c:	str	x23, [sp, #48]
  41be10:	ldrb	w23, [x19, #19]
  41be14:	cbz	w23, 41bf9c <nftw@plt+0x1941c>
  41be18:	ldrb	w1, [x20, #24]
  41be1c:	mov	x0, x20
  41be20:	sub	w1, w1, #0x1
  41be24:	strb	w1, [x20, #24]
  41be28:	bl	431988 <nftw@plt+0x2ee08>
  41be2c:	mov	x22, x0
  41be30:	ldrb	w0, [x0, #4]
  41be34:	cmp	w0, #0x35
  41be38:	b.eq	41bff8 <nftw@plt+0x19478>  // b.none
  41be3c:	ldrb	w0, [x20, #24]
  41be40:	add	w0, w0, #0x1
  41be44:	strb	w0, [x20, #24]
  41be48:	ldr	x0, [x20, #960]
  41be4c:	cbz	x0, 41bfc8 <nftw@plt+0x19448>
  41be50:	ldr	x0, [x20, #136]
  41be54:	ldr	x0, [x0, #8]
  41be58:	cbz	x0, 41bf90 <nftw@plt+0x19410>
  41be5c:	mov	x0, #0x30                  	// #48
  41be60:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41be64:	ldp	x1, x6, [sp, #72]
  41be68:	mov	x2, x0
  41be6c:	ldr	x5, [sp, #88]
  41be70:	mov	w3, #0x2                   	// #2
  41be74:	stp	x1, x6, [x2]
  41be78:	lsr	x0, x1, #48
  41be7c:	str	x5, [x2, #16]
  41be80:	orr	w0, w0, #0x400
  41be84:	strh	w0, [x2, #6]
  41be88:	mov	x1, #0x0                   	// #0
  41be8c:	mov	x0, x20
  41be90:	ldp	x6, x7, [x22]
  41be94:	stp	x6, x7, [x2, #24]
  41be98:	ldrh	w5, [x2, #30]
  41be9c:	ldr	x6, [x22, #16]
  41bea0:	orr	w5, w5, #0x400
  41bea4:	strh	w5, [x2, #30]
  41bea8:	str	x6, [x2, #40]
  41beac:	bl	42e138 <nftw@plt+0x2b5b8>
  41beb0:	ldr	x23, [sp, #48]
  41beb4:	b	41bdb0 <nftw@plt+0x19230>
  41beb8:	ldr	x19, [x19]
  41bebc:	cbz	x19, 41bff0 <nftw@plt+0x19470>
  41bec0:	ldr	x1, [x19, #8]
  41bec4:	cmp	x1, x0
  41bec8:	b.ne	41beb8 <nftw@plt+0x19338>  // b.any
  41becc:	cbnz	w23, 41bfdc <nftw@plt+0x1945c>
  41bed0:	ldr	x23, [sp, #48]
  41bed4:	nop
  41bed8:	ldrb	w0, [x19, #18]
  41bedc:	cbz	w0, 41bf38 <nftw@plt+0x193b8>
  41bee0:	ldrh	w4, [x21, #6]
  41bee4:	mov	w0, #0x1                   	// #1
  41bee8:	ldr	w3, [x19, #24]
  41beec:	mov	w5, #0x51                  	// #81
  41bef0:	strb	w0, [x20, #32]
  41bef4:	ldrb	w0, [x20, #24]
  41bef8:	ldrb	w2, [x19, #19]
  41befc:	sub	w1, w0, #0x1
  41bf00:	ldr	w6, [sp, #68]
  41bf04:	cmp	w2, #0x0
  41bf08:	and	w1, w1, #0xff
  41bf0c:	csel	w0, w1, w0, ne  // ne = any
  41bf10:	strb	w0, [x20, #24]
  41bf14:	strb	w2, [x20, #33]
  41bf18:	str	w6, [x20, #152]
  41bf1c:	strb	w5, [x20, #156]
  41bf20:	strh	w4, [x20, #158]
  41bf24:	str	w3, [x20, #160]
  41bf28:	ldp	x19, x20, [sp, #16]
  41bf2c:	ldp	x21, x22, [sp, #32]
  41bf30:	ldp	x29, x30, [sp], #96
  41bf34:	ret
  41bf38:	ldr	x3, [x20, #904]
  41bf3c:	cbz	x3, 41bf50 <nftw@plt+0x193d0>
  41bf40:	mov	x1, x21
  41bf44:	mov	x0, x20
  41bf48:	mov	w2, #0x0                   	// #0
  41bf4c:	blr	x3
  41bf50:	ldrb	w0, [x19, #19]
  41bf54:	cbz	w0, 41bf64 <nftw@plt+0x193e4>
  41bf58:	ldrb	w0, [x20, #24]
  41bf5c:	sub	w0, w0, #0x1
  41bf60:	strb	w0, [x20, #24]
  41bf64:	ldr	x1, [x19, #24]
  41bf68:	mov	x0, x20
  41bf6c:	blr	x1
  41bf70:	ldrb	w0, [x19, #19]
  41bf74:	cbz	w0, 41bdc0 <nftw@plt+0x19240>
  41bf78:	ldrb	w0, [x20, #24]
  41bf7c:	strb	w0, [x20, #24]
  41bf80:	ldp	x19, x20, [sp, #16]
  41bf84:	ldp	x21, x22, [sp, #32]
  41bf88:	ldp	x29, x30, [sp], #96
  41bf8c:	ret
  41bf90:	mov	w1, #0x2                   	// #2
  41bf94:	ldr	x23, [sp, #48]
  41bf98:	b	41bda8 <nftw@plt+0x19228>
  41bf9c:	mov	x0, x20
  41bfa0:	bl	431988 <nftw@plt+0x2ee08>
  41bfa4:	mov	x22, x0
  41bfa8:	ldrb	w0, [x0, #4]
  41bfac:	cmp	w0, #0x35
  41bfb0:	b.ne	41bfc0 <nftw@plt+0x19440>  // b.any
  41bfb4:	ldr	x19, [x19, #24]
  41bfb8:	ldr	x0, [x22, #8]
  41bfbc:	cbnz	x19, 41bec0 <nftw@plt+0x19340>
  41bfc0:	ldr	x0, [x20, #960]
  41bfc4:	cbnz	x0, 41be50 <nftw@plt+0x192d0>
  41bfc8:	ldrb	w0, [x20, #24]
  41bfcc:	ldr	x23, [sp, #48]
  41bfd0:	sub	w0, w0, #0x1
  41bfd4:	and	w0, w0, #0xff
  41bfd8:	b	41bdcc <nftw@plt+0x1924c>
  41bfdc:	ldrb	w0, [x20, #24]
  41bfe0:	add	w0, w0, #0x1
  41bfe4:	strb	w0, [x20, #24]
  41bfe8:	ldr	x23, [sp, #48]
  41bfec:	b	41bed8 <nftw@plt+0x19358>
  41bff0:	cbz	w23, 41bfc0 <nftw@plt+0x19440>
  41bff4:	b	41be3c <nftw@plt+0x192bc>
  41bff8:	ldr	x19, [x19, #24]
  41bffc:	ldr	x0, [x22, #8]
  41c000:	cbnz	x19, 41bec0 <nftw@plt+0x19340>
  41c004:	b	41be3c <nftw@plt+0x192bc>
  41c008:	stp	x29, x30, [sp, #-64]!
  41c00c:	mov	x29, sp
  41c010:	stp	x19, x20, [sp, #16]
  41c014:	add	x19, x0, #0x328
  41c018:	mov	x20, x0
  41c01c:	stp	x21, x22, [sp, #32]
  41c020:	mov	x21, x3
  41c024:	mov	w22, w1
  41c028:	ldp	x0, x3, [x19, #24]
  41c02c:	stp	x23, x24, [sp, #48]
  41c030:	mov	w23, w2
  41c034:	ldr	x24, [x20]
  41c038:	sub	x1, x3, x0
  41c03c:	cmp	x1, #0x1f
  41c040:	b.ls	41c110 <nftw@plt+0x19590>  // b.plast
  41c044:	add	x4, x0, #0x20
  41c048:	ldr	x0, [x19, #16]
  41c04c:	cmp	x4, x0
  41c050:	b.eq	41c130 <nftw@plt+0x195b0>  // b.none
  41c054:	ldr	x5, [x19, #48]
  41c058:	ldr	x1, [x19, #8]
  41c05c:	add	x4, x4, x5
  41c060:	bic	x4, x4, x5
  41c064:	str	x4, [x19, #24]
  41c068:	sub	x2, x4, x1
  41c06c:	sub	x1, x3, x1
  41c070:	cmp	x2, x1
  41c074:	b.ls	41c080 <nftw@plt+0x19500>  // b.plast
  41c078:	mov	x4, x3
  41c07c:	str	x3, [x19, #24]
  41c080:	ldr	w1, [x20, #48]
  41c084:	ldr	x2, [x24, #96]
  41c088:	str	x4, [x19, #16]
  41c08c:	str	x2, [x0]
  41c090:	eor	w4, w22, #0x1
  41c094:	str	w1, [x0, #8]
  41c098:	and	w4, w4, #0x1
  41c09c:	ldrb	w2, [x20, #440]
  41c0a0:	ldrb	w1, [x20, #18]
  41c0a4:	str	w23, [x0, #28]
  41c0a8:	cmp	w1, #0x0
  41c0ac:	cset	w1, ne  // ne = any
  41c0b0:	strb	w1, [x0, #25]
  41c0b4:	orr	w4, w1, w4
  41c0b8:	strb	w4, [x0, #24]
  41c0bc:	cbz	w2, 41c0ec <nftw@plt+0x1956c>
  41c0c0:	ldr	x1, [x20, #424]
  41c0c4:	cmp	x1, #0x0
  41c0c8:	csel	x21, x21, xzr, eq  // eq = none
  41c0cc:	str	x21, [x0, #16]
  41c0d0:	strb	w22, [x20, #18]
  41c0d4:	ldp	x19, x20, [sp, #16]
  41c0d8:	ldp	x21, x22, [sp, #32]
  41c0dc:	str	x0, [x24, #96]
  41c0e0:	ldp	x23, x24, [sp, #48]
  41c0e4:	ldp	x29, x30, [sp], #64
  41c0e8:	ret
  41c0ec:	mov	x21, #0x0                   	// #0
  41c0f0:	str	x21, [x0, #16]
  41c0f4:	strb	w22, [x20, #18]
  41c0f8:	ldp	x19, x20, [sp, #16]
  41c0fc:	ldp	x21, x22, [sp, #32]
  41c100:	str	x0, [x24, #96]
  41c104:	ldp	x23, x24, [sp, #48]
  41c108:	ldp	x29, x30, [sp], #64
  41c10c:	ret
  41c110:	mov	x0, x19
  41c114:	mov	x1, #0x20                  	// #32
  41c118:	bl	449870 <_obstack_newchunk@@Base>
  41c11c:	ldp	x0, x3, [x19, #24]
  41c120:	add	x4, x0, #0x20
  41c124:	ldr	x0, [x19, #16]
  41c128:	cmp	x4, x0
  41c12c:	b.ne	41c054 <nftw@plt+0x194d4>  // b.any
  41c130:	ldrb	w1, [x19, #80]
  41c134:	orr	w1, w1, #0x2
  41c138:	strb	w1, [x19, #80]
  41c13c:	b	41c054 <nftw@plt+0x194d4>
  41c140:	stp	x29, x30, [sp, #-32]!
  41c144:	mov	w1, #0x1                   	// #1
  41c148:	mov	x29, sp
  41c14c:	str	x19, [sp, #16]
  41c150:	mov	x19, x0
  41c154:	ldrb	w2, [x0, #18]
  41c158:	cbz	w2, 41c174 <nftw@plt+0x195f4>
  41c15c:	mov	x0, x19
  41c160:	mov	w2, #0x4                   	// #4
  41c164:	ldr	x3, [x19, #432]
  41c168:	ldr	x19, [sp, #16]
  41c16c:	ldp	x29, x30, [sp], #32
  41c170:	b	41c008 <nftw@plt+0x19488>
  41c174:	bl	421ad8 <nftw@plt+0x1ef58>
  41c178:	and	w1, w0, #0xff
  41c17c:	mov	x0, x19
  41c180:	eor	w1, w1, #0x1
  41c184:	ldr	x3, [x19, #432]
  41c188:	mov	w2, #0x4                   	// #4
  41c18c:	ldr	x19, [sp, #16]
  41c190:	ldp	x29, x30, [sp], #32
  41c194:	b	41c008 <nftw@plt+0x19488>
  41c198:	stp	x29, x30, [sp, #-32]!
  41c19c:	mov	w1, #0x1                   	// #1
  41c1a0:	mov	x29, sp
  41c1a4:	stp	x19, x20, [sp, #16]
  41c1a8:	mov	x19, x0
  41c1ac:	bl	41b488 <nftw@plt+0x18908>
  41c1b0:	cbz	x0, 41c21c <nftw@plt+0x1969c>
  41c1b4:	mov	x20, x0
  41c1b8:	ldrb	w0, [x19, #1124]
  41c1bc:	ldr	x1, [x19, #1024]
  41c1c0:	cmp	w0, #0x0
  41c1c4:	cset	w0, eq  // eq = none
  41c1c8:	strb	w0, [x19, #21]
  41c1cc:	cbz	x1, 41c1d8 <nftw@plt+0x19658>
  41c1d0:	mov	x0, x19
  41c1d4:	blr	x1
  41c1d8:	mov	x1, x20
  41c1dc:	mov	x0, x19
  41c1e0:	bl	42ea90 <nftw@plt+0x2bf10>
  41c1e4:	tst	w0, #0xff
  41c1e8:	b.eq	41c204 <nftw@plt+0x19684>  // b.none
  41c1ec:	ldr	x3, [x19, #936]
  41c1f0:	cbz	x3, 41c204 <nftw@plt+0x19684>
  41c1f4:	ldr	w1, [x19, #48]
  41c1f8:	mov	x0, x19
  41c1fc:	mov	x2, x20
  41c200:	blr	x3
  41c204:	ldrh	w0, [x20, #18]
  41c208:	mov	w1, w0
  41c20c:	ubfx	x0, x0, #2, #8
  41c210:	and	w0, w0, #0xffffffdf
  41c214:	bfi	w1, w0, #2, #8
  41c218:	strh	w1, [x20, #18]
  41c21c:	ldp	x19, x20, [sp, #16]
  41c220:	ldp	x29, x30, [sp], #32
  41c224:	ret
  41c228:	stp	x29, x30, [sp, #-32]!
  41c22c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41c230:	mov	x29, sp
  41c234:	stp	x19, x20, [sp, #16]
  41c238:	mov	x19, x0
  41c23c:	add	x0, x1, #0xe0
  41c240:	ldr	x1, [x19, #144]
  41c244:	cmp	x1, x0
  41c248:	b.eq	41c2d0 <nftw@plt+0x19750>  // b.none
  41c24c:	cbz	x1, 41c2e8 <nftw@plt+0x19768>
  41c250:	ldrb	w2, [x1, #19]
  41c254:	add	x3, x0, #0x60
  41c258:	ldrb	w4, [x19, #18]
  41c25c:	eor	x2, x2, #0x10
  41c260:	cmp	w4, #0x0
  41c264:	cset	w20, ne  // ne = any
  41c268:	ubfx	w2, w2, #4, #1
  41c26c:	cmp	x1, x3
  41c270:	b.eq	41c280 <nftw@plt+0x19700>  // b.none
  41c274:	add	x0, x0, #0xd8
  41c278:	cmp	x1, x0
  41c27c:	b.ne	41c338 <nftw@plt+0x197b8>  // b.any
  41c280:	mov	w0, #0x1                   	// #1
  41c284:	strb	wzr, [x19, #18]
  41c288:	strb	w0, [x19, #20]
  41c28c:	cbz	w2, 41c2f8 <nftw@plt+0x19778>
  41c290:	ldrb	w3, [x19, #24]
  41c294:	mov	w2, #0x0                   	// #0
  41c298:	mov	x1, #0x0                   	// #0
  41c29c:	mov	x0, x19
  41c2a0:	add	w3, w3, #0x1
  41c2a4:	strb	w3, [x19, #24]
  41c2a8:	bl	4339c0 <nftw@plt+0x30e40>
  41c2ac:	strb	w20, [x19, #18]
  41c2b0:	ldrb	w0, [x19, #24]
  41c2b4:	ldr	x1, [x19, #1312]
  41c2b8:	sub	w0, w0, #0x1
  41c2bc:	ldr	x2, [x19, #1328]
  41c2c0:	strb	w0, [x19, #24]
  41c2c4:	mov	x0, x19
  41c2c8:	sub	x2, x2, x1
  41c2cc:	bl	433958 <nftw@plt+0x30dd8>
  41c2d0:	ldrb	w0, [x19, #24]
  41c2d4:	add	w0, w0, #0x1
  41c2d8:	strb	w0, [x19, #24]
  41c2dc:	ldp	x19, x20, [sp, #16]
  41c2e0:	ldp	x29, x30, [sp], #32
  41c2e4:	ret
  41c2e8:	ldrb	w0, [x19, #18]
  41c2ec:	strb	wzr, [x19, #20]
  41c2f0:	cmp	w0, #0x0
  41c2f4:	cset	w20, ne  // ne = any
  41c2f8:	mov	x0, x19
  41c2fc:	mov	w2, #0x0                   	// #0
  41c300:	mov	x1, #0x0                   	// #0
  41c304:	bl	4339c0 <nftw@plt+0x30e40>
  41c308:	ldr	x1, [x19, #1312]
  41c30c:	strb	w20, [x19, #18]
  41c310:	ldr	x2, [x19, #1328]
  41c314:	mov	x0, x19
  41c318:	sub	x2, x2, x1
  41c31c:	bl	433958 <nftw@plt+0x30dd8>
  41c320:	ldrb	w0, [x19, #24]
  41c324:	add	w0, w0, #0x1
  41c328:	strb	w0, [x19, #24]
  41c32c:	ldp	x19, x20, [sp, #16]
  41c330:	ldp	x29, x30, [sp], #32
  41c334:	ret
  41c338:	strb	wzr, [x19, #20]
  41c33c:	b	41c28c <nftw@plt+0x1970c>
  41c340:	stp	x29, x30, [sp, #-48]!
  41c344:	mov	x29, sp
  41c348:	stp	x19, x20, [sp, #16]
  41c34c:	mov	x20, x2
  41c350:	cbz	x1, 41c39c <nftw@plt+0x1981c>
  41c354:	mov	x19, x1
  41c358:	stp	x21, x22, [sp, #32]
  41c35c:	mov	x22, x0
  41c360:	ldrb	w0, [x19, #16]
  41c364:	cbnz	w0, 41c3ac <nftw@plt+0x1982c>
  41c368:	ldr	x21, [x20]
  41c36c:	mov	x0, x21
  41c370:	bl	4024f0 <strlen@plt>
  41c374:	mov	x1, x21
  41c378:	mov	w2, w0
  41c37c:	mov	x0, x22
  41c380:	bl	425de0 <nftw@plt+0x23260>
  41c384:	str	x0, [x19, #8]
  41c388:	ldr	x0, [x20], #8
  41c38c:	bl	402910 <free@plt>
  41c390:	ldr	x19, [x19]
  41c394:	cbnz	x19, 41c360 <nftw@plt+0x197e0>
  41c398:	ldp	x21, x22, [sp, #32]
  41c39c:	mov	x0, x20
  41c3a0:	ldp	x19, x20, [sp, #16]
  41c3a4:	ldp	x29, x30, [sp], #48
  41c3a8:	ret
  41c3ac:	ldr	x1, [x19, #24]
  41c3b0:	mov	x2, x20
  41c3b4:	mov	x0, x22
  41c3b8:	bl	41c340 <nftw@plt+0x197c0>
  41c3bc:	mov	x20, x0
  41c3c0:	b	41c368 <nftw@plt+0x197e8>
  41c3c4:	nop
  41c3c8:	stp	x29, x30, [sp, #-32]!
  41c3cc:	mov	x29, sp
  41c3d0:	stp	x19, x20, [sp, #16]
  41c3d4:	mov	x19, x1
  41c3d8:	cbz	x0, 41c40c <nftw@plt+0x1988c>
  41c3dc:	mov	x20, x0
  41c3e0:	ldrb	w0, [x20, #16]
  41c3e4:	cbnz	w0, 41c41c <nftw@plt+0x1989c>
  41c3e8:	ldr	x2, [x20, #8]
  41c3ec:	ldr	x0, [x2]
  41c3f0:	ldr	w1, [x2, #8]
  41c3f4:	add	w2, w1, #0x1
  41c3f8:	mov	w1, w1
  41c3fc:	bl	449c48 <_obstack_memory_used@@Base+0x1e8>
  41c400:	ldr	x20, [x20]
  41c404:	str	x0, [x19], #8
  41c408:	cbnz	x20, 41c3e0 <nftw@plt+0x19860>
  41c40c:	mov	x0, x19
  41c410:	ldp	x19, x20, [sp, #16]
  41c414:	ldp	x29, x30, [sp], #32
  41c418:	ret
  41c41c:	ldr	x0, [x20, #24]
  41c420:	mov	x1, x19
  41c424:	bl	41c3c8 <nftw@plt+0x19848>
  41c428:	mov	x19, x0
  41c42c:	b	41c3e8 <nftw@plt+0x19868>
  41c430:	stp	x29, x30, [sp, #-48]!
  41c434:	mov	x29, sp
  41c438:	stp	x19, x20, [sp, #16]
  41c43c:	mov	x20, x0
  41c440:	mov	x0, x20
  41c444:	bl	431988 <nftw@plt+0x2ee08>
  41c448:	mov	x19, x0
  41c44c:	ldrb	w0, [x0, #4]
  41c450:	cmp	w0, #0x53
  41c454:	b.eq	41c440 <nftw@plt+0x198c0>  // b.none
  41c458:	cmp	w0, #0x16
  41c45c:	b.eq	41c4f0 <nftw@plt+0x19970>  // b.none
  41c460:	cmp	w0, #0x14
  41c464:	b.ne	41c4dc <nftw@plt+0x1995c>  // b.any
  41c468:	mov	x0, x20
  41c46c:	bl	431988 <nftw@plt+0x2ee08>
  41c470:	mov	x19, x0
  41c474:	ldrb	w0, [x0, #4]
  41c478:	cmp	w0, #0x53
  41c47c:	b.eq	41c468 <nftw@plt+0x198e8>  // b.none
  41c480:	cmp	w0, #0x16
  41c484:	b.eq	41c504 <nftw@plt+0x19984>  // b.none
  41c488:	sub	w0, w0, #0x3e
  41c48c:	and	w0, w0, #0xff
  41c490:	cmp	w0, #0x4
  41c494:	b.hi	41c4dc <nftw@plt+0x1995c>  // b.pmore
  41c498:	str	x21, [sp, #32]
  41c49c:	nop
  41c4a0:	mov	x0, x20
  41c4a4:	bl	431988 <nftw@plt+0x2ee08>
  41c4a8:	mov	x21, x0
  41c4ac:	ldrb	w0, [x0, #4]
  41c4b0:	cmp	w0, #0x53
  41c4b4:	b.eq	41c4a0 <nftw@plt+0x19920>  // b.none
  41c4b8:	cmp	w0, #0x16
  41c4bc:	b.eq	41c518 <nftw@plt+0x19998>  // b.none
  41c4c0:	cmp	w0, #0x15
  41c4c4:	ldr	x21, [sp, #32]
  41c4c8:	b.ne	41c4dc <nftw@plt+0x1995c>  // b.any
  41c4cc:	mov	x0, x19
  41c4d0:	ldp	x19, x20, [sp, #16]
  41c4d4:	ldp	x29, x30, [sp], #48
  41c4d8:	ret
  41c4dc:	mov	x19, #0x0                   	// #0
  41c4e0:	mov	x0, x19
  41c4e4:	ldp	x19, x20, [sp, #16]
  41c4e8:	ldp	x29, x30, [sp], #48
  41c4ec:	ret
  41c4f0:	mov	x0, x20
  41c4f4:	mov	w1, #0x1                   	// #1
  41c4f8:	bl	42e590 <nftw@plt+0x2ba10>
  41c4fc:	ldrb	w0, [x19, #4]
  41c500:	b	41c460 <nftw@plt+0x198e0>
  41c504:	mov	x0, x20
  41c508:	mov	w1, #0x1                   	// #1
  41c50c:	bl	42e590 <nftw@plt+0x2ba10>
  41c510:	ldrb	w0, [x19, #4]
  41c514:	b	41c488 <nftw@plt+0x19908>
  41c518:	mov	x0, x20
  41c51c:	mov	w1, #0x1                   	// #1
  41c520:	bl	42e590 <nftw@plt+0x2ba10>
  41c524:	ldrb	w0, [x21, #4]
  41c528:	b	41c4c0 <nftw@plt+0x19940>
  41c52c:	nop
  41c530:	stp	x29, x30, [sp, #-32]!
  41c534:	mov	x29, sp
  41c538:	stp	x19, x20, [sp, #16]
  41c53c:	mov	w20, w2
  41c540:	ldr	x2, [x0, #448]
  41c544:	ldurb	w2, [x2, #-20]
  41c548:	cmp	w2, #0x16
  41c54c:	b.eq	41c590 <nftw@plt+0x19a10>  // b.none
  41c550:	mov	x19, x0
  41c554:	and	w1, w1, #0xff
  41c558:	cbnz	w1, 41c59c <nftw@plt+0x19a1c>
  41c55c:	bl	42a820 <nftw@plt+0x27ca0>
  41c560:	ldrb	w0, [x0, #4]
  41c564:	cmp	w0, #0x16
  41c568:	b.eq	41c590 <nftw@plt+0x19a10>  // b.none
  41c56c:	ldr	x3, [x19, #144]
  41c570:	mov	w1, w20
  41c574:	mov	x0, x19
  41c578:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c57c:	ldp	x19, x20, [sp, #16]
  41c580:	add	x2, x2, #0x900
  41c584:	ldp	x29, x30, [sp], #32
  41c588:	ldr	x3, [x3, #8]
  41c58c:	b	41f378 <nftw@plt+0x1c7f8>
  41c590:	ldp	x19, x20, [sp, #16]
  41c594:	ldp	x29, x30, [sp], #32
  41c598:	ret
  41c59c:	bl	431988 <nftw@plt+0x2ee08>
  41c5a0:	b	41c560 <nftw@plt+0x199e0>
  41c5a4:	nop
  41c5a8:	stp	x29, x30, [sp, #-32]!
  41c5ac:	mov	x29, sp
  41c5b0:	str	x19, [sp, #16]
  41c5b4:	mov	x19, x0
  41c5b8:	bl	431988 <nftw@plt+0x2ee08>
  41c5bc:	ldrb	w1, [x0, #4]
  41c5c0:	cmp	w1, #0x3e
  41c5c4:	b.ne	41c5f8 <nftw@plt+0x19a78>  // b.any
  41c5c8:	ldr	x3, [x19, #952]
  41c5cc:	cbz	x3, 41c5e0 <nftw@plt+0x19a60>
  41c5d0:	ldr	w1, [x19, #48]
  41c5d4:	add	x2, x0, #0x8
  41c5d8:	mov	x0, x19
  41c5dc:	blr	x3
  41c5e0:	mov	x0, x19
  41c5e4:	mov	w2, #0x0                   	// #0
  41c5e8:	ldr	x19, [sp, #16]
  41c5ec:	mov	w1, #0x0                   	// #0
  41c5f0:	ldp	x29, x30, [sp], #32
  41c5f4:	b	41c530 <nftw@plt+0x199b0>
  41c5f8:	ldr	x3, [x19, #144]
  41c5fc:	mov	x0, x19
  41c600:	mov	w1, #0x3                   	// #3
  41c604:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c608:	add	x2, x2, #0x928
  41c60c:	ldr	x3, [x3, #8]
  41c610:	bl	41f298 <nftw@plt+0x1c718>
  41c614:	mov	x0, x19
  41c618:	mov	w2, #0x0                   	// #0
  41c61c:	ldr	x19, [sp, #16]
  41c620:	mov	w1, #0x0                   	// #0
  41c624:	ldp	x29, x30, [sp], #32
  41c628:	b	41c530 <nftw@plt+0x199b0>
  41c62c:	nop
  41c630:	stp	x29, x30, [sp, #-48]!
  41c634:	mov	w1, #0x10                  	// #16
  41c638:	mov	x29, sp
  41c63c:	add	x2, sp, #0x28
  41c640:	stp	x19, x20, [sp, #16]
  41c644:	mov	x20, x0
  41c648:	bl	41b738 <nftw@plt+0x18bb8>
  41c64c:	cbz	x0, 41c680 <nftw@plt+0x19b00>
  41c650:	ldr	x1, [sp, #40]
  41c654:	mov	x19, x0
  41c658:	bl	41b9c0 <nftw@plt+0x18e40>
  41c65c:	ldr	x0, [x0]
  41c660:	cbz	x0, 41c68c <nftw@plt+0x19b0c>
  41c664:	ldr	x3, [x19]
  41c668:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c66c:	mov	x0, x20
  41c670:	add	x2, x2, #0x940
  41c674:	add	x3, x3, #0x1
  41c678:	mov	w1, #0x0                   	// #0
  41c67c:	bl	41f298 <nftw@plt+0x1c718>
  41c680:	ldp	x19, x20, [sp, #16]
  41c684:	ldp	x29, x30, [sp], #48
  41c688:	ret
  41c68c:	ldr	x1, [sp, #40]
  41c690:	mov	x0, x20
  41c694:	ldr	w1, [x1, #12]
  41c698:	add	x1, x1, #0x1
  41c69c:	add	x1, x1, x1, lsl #1
  41c6a0:	lsl	x1, x1, #3
  41c6a4:	bl	42ab10 <nftw@plt+0x27f90>
  41c6a8:	mov	x3, x0
  41c6ac:	str	x3, [sp, #40]
  41c6b0:	ldr	x1, [x19, #24]
  41c6b4:	mov	x0, x20
  41c6b8:	str	x1, [x3]
  41c6bc:	mov	w2, #0x0                   	// #0
  41c6c0:	str	x3, [x19, #24]
  41c6c4:	mov	w1, #0x0                   	// #0
  41c6c8:	bl	41c530 <nftw@plt+0x199b0>
  41c6cc:	ldp	x19, x20, [sp, #16]
  41c6d0:	ldp	x29, x30, [sp], #48
  41c6d4:	ret
  41c6d8:	stp	x29, x30, [sp, #-96]!
  41c6dc:	mov	x29, sp
  41c6e0:	stp	x19, x20, [sp, #16]
  41c6e4:	mov	x20, x0
  41c6e8:	stp	x21, x22, [sp, #32]
  41c6ec:	mov	x22, x2
  41c6f0:	mov	x21, x3
  41c6f4:	stp	x23, x24, [sp, #48]
  41c6f8:	mov	x23, x1
  41c6fc:	nop
  41c700:	mov	x0, x20
  41c704:	bl	431988 <nftw@plt+0x2ee08>
  41c708:	ldrb	w4, [x0, #4]
  41c70c:	mov	x19, x0
  41c710:	cmp	w4, #0x53
  41c714:	b.eq	41c700 <nftw@plt+0x19b80>  // b.none
  41c718:	ldr	w0, [x0]
  41c71c:	str	w0, [x21]
  41c720:	ldrb	w0, [x19, #4]
  41c724:	cmp	w0, #0x3e
  41c728:	b.eq	41c79c <nftw@plt+0x19c1c>  // b.none
  41c72c:	cmp	w0, #0x44
  41c730:	b.eq	41c7ac <nftw@plt+0x19c2c>  // b.none
  41c734:	cmp	w0, #0x3
  41c738:	b.ne	41c7f0 <nftw@plt+0x19c70>  // b.any
  41c73c:	mov	x0, x20
  41c740:	bl	41bb28 <nftw@plt+0x18fa8>
  41c744:	mov	x21, x0
  41c748:	mov	w1, #0x1                   	// #1
  41c74c:	str	w1, [x23]
  41c750:	ldr	x0, [x20, #144]
  41c754:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41c758:	add	x1, x1, #0xe0
  41c75c:	add	x1, x1, #0x108
  41c760:	cmp	x0, x1
  41c764:	b.eq	41c784 <nftw@plt+0x19c04>  // b.none
  41c768:	cbz	x22, 41c774 <nftw@plt+0x19bf4>
  41c76c:	ldrb	w0, [x20, #1123]
  41c770:	cbz	w0, 41c848 <nftw@plt+0x19cc8>
  41c774:	mov	x0, x20
  41c778:	mov	w2, #0x0                   	// #0
  41c77c:	mov	w1, #0x1                   	// #1
  41c780:	bl	41c530 <nftw@plt+0x199b0>
  41c784:	mov	x0, x21
  41c788:	ldp	x19, x20, [sp, #16]
  41c78c:	ldp	x21, x22, [sp, #32]
  41c790:	ldp	x23, x24, [sp, #48]
  41c794:	ldp	x29, x30, [sp], #96
  41c798:	ret
  41c79c:	ldr	x0, [x19, #16]
  41c7a0:	ldrb	w0, [x0]
  41c7a4:	cmp	w0, #0x52
  41c7a8:	b.eq	41c7f0 <nftw@plt+0x19c70>  // b.none
  41c7ac:	ldr	w0, [x19, #8]
  41c7b0:	sub	w0, w0, #0x1
  41c7b4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41c7b8:	ldr	x1, [x19, #16]
  41c7bc:	mov	x21, x0
  41c7c0:	ldr	w2, [x19, #8]
  41c7c4:	add	x1, x1, #0x1
  41c7c8:	sub	w2, w2, #0x2
  41c7cc:	bl	402490 <memcpy@plt>
  41c7d0:	ldr	w0, [x19, #8]
  41c7d4:	sub	w0, w0, #0x2
  41c7d8:	strb	wzr, [x21, w0, uxtw]
  41c7dc:	ldrb	w0, [x19, #4]
  41c7e0:	cmp	w0, #0x44
  41c7e4:	cset	w0, eq  // eq = none
  41c7e8:	str	w0, [x23]
  41c7ec:	b	41c750 <nftw@plt+0x19bd0>
  41c7f0:	ldr	x1, [x20, #144]
  41c7f4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41c7f8:	add	x0, x0, #0xe0
  41c7fc:	add	x0, x0, #0x108
  41c800:	cmp	x1, x0
  41c804:	b.eq	41c83c <nftw@plt+0x19cbc>  // b.none
  41c808:	ldr	x3, [x1, #8]
  41c80c:	mov	x0, x20
  41c810:	mov	w1, #0x3                   	// #3
  41c814:	mov	x21, #0x0                   	// #0
  41c818:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c81c:	add	x2, x2, #0x970
  41c820:	bl	41f298 <nftw@plt+0x1c718>
  41c824:	mov	x0, x21
  41c828:	ldp	x19, x20, [sp, #16]
  41c82c:	ldp	x21, x22, [sp, #32]
  41c830:	ldp	x23, x24, [sp, #48]
  41c834:	ldp	x29, x30, [sp], #96
  41c838:	ret
  41c83c:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c840:	add	x3, x3, #0x958
  41c844:	b	41c80c <nftw@plt+0x19c8c>
  41c848:	mov	x0, #0x40                  	// #64
  41c84c:	stp	x25, x26, [sp, #64]
  41c850:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41c854:	ldr	x1, [x20, #448]
  41c858:	mov	x24, x0
  41c85c:	adrp	x25, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c860:	mov	x26, #0x8                   	// #8
  41c864:	add	x25, x25, #0x900
  41c868:	mov	x23, #0x0                   	// #0
  41c86c:	ldurb	w0, [x1, #-20]
  41c870:	cmp	w0, #0x16
  41c874:	b.eq	41c918 <nftw@plt+0x19d98>  // b.none
  41c878:	str	x27, [sp, #80]
  41c87c:	nop
  41c880:	mov	x0, x20
  41c884:	bl	42a820 <nftw@plt+0x27ca0>
  41c888:	mov	x19, x0
  41c88c:	add	x27, x23, #0x1
  41c890:	mov	x2, x25
  41c894:	mov	x0, x20
  41c898:	mov	w1, #0x2                   	// #2
  41c89c:	ldrb	w3, [x19, #4]
  41c8a0:	cmp	w3, #0x16
  41c8a4:	b.eq	41c8ec <nftw@plt+0x19d6c>  // b.none
  41c8a8:	cmp	w3, #0x4f
  41c8ac:	b.eq	41c8c0 <nftw@plt+0x19d40>  // b.none
  41c8b0:	ldr	x3, [x20, #144]
  41c8b4:	ldr	x3, [x3, #8]
  41c8b8:	bl	41f298 <nftw@plt+0x1c718>
  41c8bc:	b	41c880 <nftw@plt+0x19d00>
  41c8c0:	cmp	x27, x26
  41c8c4:	b.cs	41c8d4 <nftw@plt+0x19d54>  // b.hs, b.nlast
  41c8c8:	str	x19, [x24, x23, lsl #3]
  41c8cc:	mov	x23, x27
  41c8d0:	b	41c880 <nftw@plt+0x19d00>
  41c8d4:	mov	x0, x24
  41c8d8:	lsl	x1, x26, #4
  41c8dc:	lsl	x26, x26, #1
  41c8e0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41c8e4:	mov	x24, x0
  41c8e8:	b	41c8c8 <nftw@plt+0x19d48>
  41c8ec:	ldr	x27, [sp, #80]
  41c8f0:	add	x23, x24, x23, lsl #3
  41c8f4:	ldp	x25, x26, [sp, #64]
  41c8f8:	str	xzr, [x23]
  41c8fc:	mov	x0, x21
  41c900:	str	x24, [x22]
  41c904:	ldp	x19, x20, [sp, #16]
  41c908:	ldp	x21, x22, [sp, #32]
  41c90c:	ldp	x23, x24, [sp, #48]
  41c910:	ldp	x29, x30, [sp], #96
  41c914:	ret
  41c918:	mov	x23, x24
  41c91c:	b	41c8f4 <nftw@plt+0x19d74>
  41c920:	stp	x29, x30, [sp, #-48]!
  41c924:	mov	x2, #0x0                   	// #0
  41c928:	mov	x29, sp
  41c92c:	add	x3, sp, #0x2c
  41c930:	add	x1, sp, #0x28
  41c934:	stp	x19, x20, [sp, #16]
  41c938:	mov	x20, x0
  41c93c:	bl	41c6d8 <nftw@plt+0x19b58>
  41c940:	cbz	x0, 41c96c <nftw@plt+0x19dec>
  41c944:	ldr	w2, [sp, #40]
  41c948:	mov	x1, x0
  41c94c:	mov	x19, x0
  41c950:	mov	x0, x20
  41c954:	bl	425710 <nftw@plt+0x22b90>
  41c958:	cmp	w0, #0x0
  41c95c:	b.lt	41c9c8 <nftw@plt+0x19e48>  // b.tstop
  41c960:	b.ne	41c978 <nftw@plt+0x19df8>  // b.any
  41c964:	mov	x0, x19
  41c968:	bl	402910 <free@plt>
  41c96c:	ldp	x19, x20, [sp, #16]
  41c970:	ldp	x29, x30, [sp], #48
  41c974:	ret
  41c978:	mov	x3, x19
  41c97c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c980:	add	x2, x2, #0x9b8
  41c984:	mov	w1, #0x0                   	// #0
  41c988:	mov	x0, x20
  41c98c:	bl	41f298 <nftw@plt+0x1c718>
  41c990:	mov	x0, x20
  41c994:	bl	431988 <nftw@plt+0x2ee08>
  41c998:	ldrb	w0, [x0, #4]
  41c99c:	cmp	w0, #0x16
  41c9a0:	b.eq	41c964 <nftw@plt+0x19de4>  // b.none
  41c9a4:	mov	x0, x20
  41c9a8:	mov	w1, #0x1                   	// #1
  41c9ac:	bl	42e590 <nftw@plt+0x2ba10>
  41c9b0:	mov	x0, x20
  41c9b4:	mov	w3, #0x0                   	// #0
  41c9b8:	mov	w2, #0x0                   	// #0
  41c9bc:	mov	w1, #0x0                   	// #0
  41c9c0:	bl	41bc10 <nftw@plt+0x19090>
  41c9c4:	b	41c964 <nftw@plt+0x19de4>
  41c9c8:	mov	x0, x20
  41c9cc:	mov	x3, x19
  41c9d0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41c9d4:	mov	w1, #0x0                   	// #0
  41c9d8:	add	x2, x2, #0x998
  41c9dc:	bl	41f298 <nftw@plt+0x1c718>
  41c9e0:	b	41c964 <nftw@plt+0x19de4>
  41c9e4:	nop
  41c9e8:	stp	x29, x30, [sp, #-48]!
  41c9ec:	mov	x29, sp
  41c9f0:	str	x21, [sp, #32]
  41c9f4:	ldr	x21, [x0]
  41c9f8:	stp	x19, x20, [sp, #16]
  41c9fc:	ldr	x19, [x21, #96]
  41ca00:	cbz	x19, 41ca98 <nftw@plt+0x19f18>
  41ca04:	ldrb	w1, [x19, #25]
  41ca08:	mov	x20, x0
  41ca0c:	cbz	w1, 41ca64 <nftw@plt+0x19ee4>
  41ca10:	ldr	x2, [x19]
  41ca14:	cbz	x2, 41ca80 <nftw@plt+0x19f00>
  41ca18:	add	x0, x20, #0x328
  41ca1c:	str	x2, [x21, #96]
  41ca20:	strb	w1, [x20, #18]
  41ca24:	ldr	x1, [x0, #8]
  41ca28:	cmp	x1, x19
  41ca2c:	b.cs	41ca50 <nftw@plt+0x19ed0>  // b.hs, b.nlast
  41ca30:	ldr	x1, [x0, #32]
  41ca34:	cmp	x1, x19
  41ca38:	b.ls	41ca50 <nftw@plt+0x19ed0>  // b.plast
  41ca3c:	ldr	x21, [sp, #32]
  41ca40:	stp	x19, x19, [x0, #16]
  41ca44:	ldp	x19, x20, [sp, #16]
  41ca48:	ldp	x29, x30, [sp], #48
  41ca4c:	ret
  41ca50:	mov	x1, x19
  41ca54:	ldp	x19, x20, [sp, #16]
  41ca58:	ldr	x21, [sp, #32]
  41ca5c:	ldp	x29, x30, [sp], #48
  41ca60:	b	4499d0 <_obstack_free@@Base>
  41ca64:	ldrb	w2, [x0, #1140]
  41ca68:	cbz	w2, 41ca10 <nftw@plt+0x19e90>
  41ca6c:	mov	w2, #0x8                   	// #8
  41ca70:	bl	41c530 <nftw@plt+0x199b0>
  41ca74:	ldr	x2, [x19]
  41ca78:	ldrb	w1, [x19, #25]
  41ca7c:	cbnz	x2, 41ca18 <nftw@plt+0x19e98>
  41ca80:	ldr	x0, [x19, #16]
  41ca84:	cbz	x0, 41ca18 <nftw@plt+0x19e98>
  41ca88:	mov	w3, #0x1                   	// #1
  41ca8c:	str	x0, [x20, #424]
  41ca90:	strb	w3, [x20, #440]
  41ca94:	b	41ca18 <nftw@plt+0x19e98>
  41ca98:	ldp	x19, x20, [sp, #16]
  41ca9c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41caa0:	ldr	x21, [sp, #32]
  41caa4:	add	x2, x2, #0x9d8
  41caa8:	ldp	x29, x30, [sp], #48
  41caac:	mov	w1, #0x3                   	// #3
  41cab0:	b	41f298 <nftw@plt+0x1c718>
  41cab4:	nop
  41cab8:	stp	x29, x30, [sp, #-32]!
  41cabc:	mov	x29, sp
  41cac0:	ldr	x1, [x0, #40]
  41cac4:	ldr	w1, [x1, #48]
  41cac8:	str	x19, [sp, #16]
  41cacc:	mov	x19, x0
  41cad0:	cmp	w1, #0x1
  41cad4:	b.eq	41cb00 <nftw@plt+0x19f80>  // b.none
  41cad8:	mov	x0, x19
  41cadc:	mov	w2, #0x0                   	// #0
  41cae0:	mov	w1, #0x0                   	// #0
  41cae4:	bl	41c530 <nftw@plt+0x199b0>
  41cae8:	ldr	x1, [x19]
  41caec:	mov	x0, x19
  41caf0:	ldr	x19, [sp, #16]
  41caf4:	ldp	x29, x30, [sp], #32
  41caf8:	ldr	x1, [x1, #80]
  41cafc:	b	425108 <nftw@plt+0x22588>
  41cb00:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41cb04:	mov	w1, #0x0                   	// #0
  41cb08:	add	x2, x2, #0x9f0
  41cb0c:	bl	41f298 <nftw@plt+0x1c718>
  41cb10:	b	41cad8 <nftw@plt+0x19f58>
  41cb14:	nop
  41cb18:	stp	x29, x30, [sp, #-32]!
  41cb1c:	mov	w1, #0x1                   	// #1
  41cb20:	mov	x29, sp
  41cb24:	stp	x19, x20, [sp, #16]
  41cb28:	mov	x19, x0
  41cb2c:	bl	41b488 <nftw@plt+0x18908>
  41cb30:	cbz	x0, 41cb8c <nftw@plt+0x1a00c>
  41cb34:	ldr	x1, [x19, #1024]
  41cb38:	mov	x20, x0
  41cb3c:	cbz	x1, 41cb48 <nftw@plt+0x19fc8>
  41cb40:	mov	x0, x19
  41cb44:	blr	x1
  41cb48:	ldr	x3, [x19, #944]
  41cb4c:	cbz	x3, 41cb60 <nftw@plt+0x19fe0>
  41cb50:	ldr	w1, [x19, #48]
  41cb54:	mov	x2, x20
  41cb58:	mov	x0, x19
  41cb5c:	blr	x3
  41cb60:	ldrb	w0, [x20, #18]
  41cb64:	tbz	w0, #1, 41cb8c <nftw@plt+0x1a00c>
  41cb68:	ldrh	w1, [x20, #18]
  41cb6c:	tbnz	w1, #5, 41cbd0 <nftw@plt+0x1a050>
  41cb70:	and	w0, w0, #0x3
  41cb74:	cmp	w0, #0x3
  41cb78:	b.eq	41cba4 <nftw@plt+0x1a024>  // b.none
  41cb7c:	ldrb	w0, [x19, #1151]
  41cb80:	cbnz	w0, 41cbf0 <nftw@plt+0x1a070>
  41cb84:	mov	x0, x20
  41cb88:	bl	42e890 <nftw@plt+0x2bd10>
  41cb8c:	mov	x0, x19
  41cb90:	mov	w2, #0x0                   	// #0
  41cb94:	ldp	x19, x20, [sp, #16]
  41cb98:	mov	w1, #0x0                   	// #0
  41cb9c:	ldp	x29, x30, [sp], #32
  41cba0:	b	41c530 <nftw@plt+0x199b0>
  41cba4:	ldrb	w0, [x19, #1143]
  41cba8:	cbz	w0, 41cb7c <nftw@plt+0x19ffc>
  41cbac:	ldr	w2, [x19, #48]
  41cbb0:	mov	x0, x19
  41cbb4:	ldr	x5, [x20]
  41cbb8:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41cbbc:	mov	w3, #0x0                   	// #0
  41cbc0:	add	x4, x4, #0xa10
  41cbc4:	mov	w1, #0xb                   	// #11
  41cbc8:	bl	41f4d0 <nftw@plt+0x1c950>
  41cbcc:	b	41cb7c <nftw@plt+0x19ffc>
  41cbd0:	ldr	x3, [x20]
  41cbd4:	mov	x0, x19
  41cbd8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41cbdc:	mov	w1, #0x0                   	// #0
  41cbe0:	add	x2, x2, #0xa10
  41cbe4:	bl	41f298 <nftw@plt+0x1c718>
  41cbe8:	ldrb	w0, [x19, #1151]
  41cbec:	cbz	w0, 41cb84 <nftw@plt+0x1a004>
  41cbf0:	mov	x1, x20
  41cbf4:	mov	x0, x19
  41cbf8:	mov	x2, #0x0                   	// #0
  41cbfc:	bl	42dad8 <nftw@plt+0x2af58>
  41cc00:	b	41cb84 <nftw@plt+0x1a004>
  41cc04:	nop
  41cc08:	stp	x29, x30, [sp, #-48]!
  41cc0c:	mov	x29, sp
  41cc10:	stp	x19, x20, [sp, #16]
  41cc14:	mov	x19, x0
  41cc18:	str	x21, [sp, #32]
  41cc1c:	ldrb	w1, [x0, #18]
  41cc20:	cbz	w1, 41cc4c <nftw@plt+0x1a0cc>
  41cc24:	mov	x20, #0x0                   	// #0
  41cc28:	mov	w21, #0x1                   	// #1
  41cc2c:	mov	x3, x20
  41cc30:	mov	w1, w21
  41cc34:	mov	x0, x19
  41cc38:	mov	w2, #0x6                   	// #6
  41cc3c:	ldp	x19, x20, [sp, #16]
  41cc40:	ldr	x21, [sp, #32]
  41cc44:	ldp	x29, x30, [sp], #48
  41cc48:	b	41c008 <nftw@plt+0x19488>
  41cc4c:	mov	w1, #0x0                   	// #0
  41cc50:	bl	41b488 <nftw@plt+0x18908>
  41cc54:	mov	x20, x0
  41cc58:	cbz	x0, 41cc24 <nftw@plt+0x1a0a4>
  41cc5c:	ldrh	w0, [x0, #18]
  41cc60:	ldrb	w1, [x20, #18]
  41cc64:	eor	x21, x0, #0x100
  41cc68:	and	w2, w1, #0x3
  41cc6c:	ubfx	x0, x0, #2, #8
  41cc70:	tst	x1, #0x2
  41cc74:	ubfx	x21, x21, #8, #1
  41cc78:	csel	w21, w21, wzr, ne  // ne = any
  41cc7c:	cmp	w2, #0x2
  41cc80:	b.eq	41ccd0 <nftw@plt+0x1a150>  // b.none
  41cc84:	tbz	w0, #5, 41cce4 <nftw@plt+0x1a164>
  41cc88:	ldr	x3, [x19, #1032]
  41cc8c:	cbz	x3, 41cca0 <nftw@plt+0x1a120>
  41cc90:	ldr	w1, [x19, #48]
  41cc94:	mov	x2, x20
  41cc98:	mov	x0, x19
  41cc9c:	blr	x3
  41cca0:	mov	x0, x19
  41cca4:	mov	w2, #0x0                   	// #0
  41cca8:	mov	w1, #0x0                   	// #0
  41ccac:	bl	41c530 <nftw@plt+0x199b0>
  41ccb0:	mov	x3, x20
  41ccb4:	mov	w1, w21
  41ccb8:	mov	x0, x19
  41ccbc:	mov	w2, #0x6                   	// #6
  41ccc0:	ldp	x19, x20, [sp, #16]
  41ccc4:	ldr	x21, [sp, #32]
  41ccc8:	ldp	x29, x30, [sp], #48
  41cccc:	b	41c008 <nftw@plt+0x19488>
  41ccd0:	ldr	x2, [x20, #24]
  41ccd4:	ldrb	w1, [x2, #19]
  41ccd8:	orr	w1, w1, #0x20
  41ccdc:	strb	w1, [x2, #19]
  41cce0:	tbnz	w0, #5, 41cc88 <nftw@plt+0x1a108>
  41cce4:	mov	x1, x20
  41cce8:	mov	x0, x19
  41ccec:	bl	42fa20 <nftw@plt+0x2cea0>
  41ccf0:	b	41cc88 <nftw@plt+0x1a108>
  41ccf4:	nop
  41ccf8:	stp	x29, x30, [sp, #-48]!
  41ccfc:	mov	x29, sp
  41cd00:	stp	x19, x20, [sp, #16]
  41cd04:	mov	x19, x0
  41cd08:	ldrb	w1, [x0, #18]
  41cd0c:	cbz	w1, 41cd30 <nftw@plt+0x1a1b0>
  41cd10:	mov	w20, #0x1                   	// #1
  41cd14:	mov	x0, x19
  41cd18:	mov	w1, w20
  41cd1c:	mov	x3, #0x0                   	// #0
  41cd20:	ldp	x19, x20, [sp, #16]
  41cd24:	mov	w2, #0x3                   	// #3
  41cd28:	ldp	x29, x30, [sp], #48
  41cd2c:	b	41c008 <nftw@plt+0x19488>
  41cd30:	mov	w1, #0x0                   	// #0
  41cd34:	str	x21, [sp, #32]
  41cd38:	bl	41b488 <nftw@plt+0x18908>
  41cd3c:	mov	x21, x0
  41cd40:	cbz	x0, 41cdd8 <nftw@plt+0x1a258>
  41cd44:	ldrh	w0, [x0, #18]
  41cd48:	ldrb	w1, [x21, #18]
  41cd4c:	ubfx	x20, x0, #8, #1
  41cd50:	and	w2, w1, #0x3
  41cd54:	tst	x1, #0x2
  41cd58:	ubfx	x0, x0, #2, #8
  41cd5c:	csinc	w20, w20, wzr, ne  // ne = any
  41cd60:	cmp	w2, #0x2
  41cd64:	b.eq	41cdb4 <nftw@plt+0x1a234>  // b.none
  41cd68:	tbz	w0, #5, 41cdc8 <nftw@plt+0x1a248>
  41cd6c:	ldr	x3, [x19, #1032]
  41cd70:	cbz	x3, 41cd84 <nftw@plt+0x1a204>
  41cd74:	ldr	w1, [x19, #48]
  41cd78:	mov	x2, x21
  41cd7c:	mov	x0, x19
  41cd80:	blr	x3
  41cd84:	mov	x0, x19
  41cd88:	mov	w2, #0x0                   	// #0
  41cd8c:	mov	w1, #0x0                   	// #0
  41cd90:	bl	41c530 <nftw@plt+0x199b0>
  41cd94:	mov	w1, w20
  41cd98:	mov	x0, x19
  41cd9c:	ldp	x19, x20, [sp, #16]
  41cda0:	mov	x3, #0x0                   	// #0
  41cda4:	ldr	x21, [sp, #32]
  41cda8:	mov	w2, #0x3                   	// #3
  41cdac:	ldp	x29, x30, [sp], #48
  41cdb0:	b	41c008 <nftw@plt+0x19488>
  41cdb4:	ldr	x2, [x21, #24]
  41cdb8:	ldrb	w1, [x2, #19]
  41cdbc:	orr	w1, w1, #0x20
  41cdc0:	strb	w1, [x2, #19]
  41cdc4:	tbnz	w0, #5, 41cd6c <nftw@plt+0x1a1ec>
  41cdc8:	mov	x1, x21
  41cdcc:	mov	x0, x19
  41cdd0:	bl	42fa20 <nftw@plt+0x2cea0>
  41cdd4:	b	41cd6c <nftw@plt+0x1a1ec>
  41cdd8:	ldr	x21, [sp, #32]
  41cddc:	b	41cd10 <nftw@plt+0x1a190>
  41cde0:	stp	x29, x30, [sp, #-32]!
  41cde4:	mov	x29, sp
  41cde8:	str	x19, [sp, #16]
  41cdec:	mov	x19, x0
  41cdf0:	ldr	x0, [x0, #136]
  41cdf4:	ldr	x0, [x0, #8]
  41cdf8:	cbz	x0, 41ce14 <nftw@plt+0x1a294>
  41cdfc:	nop
  41ce00:	mov	x0, x19
  41ce04:	bl	42e3e0 <nftw@plt+0x2b860>
  41ce08:	ldr	x0, [x19, #136]
  41ce0c:	ldr	x0, [x0, #8]
  41ce10:	cbnz	x0, 41ce00 <nftw@plt+0x1a280>
  41ce14:	ldr	x0, [x19, #448]
  41ce18:	ldurb	w0, [x0, #-20]
  41ce1c:	cmp	w0, #0x16
  41ce20:	b.eq	41ce3c <nftw@plt+0x1a2bc>  // b.none
  41ce24:	nop
  41ce28:	mov	x0, x19
  41ce2c:	bl	42a820 <nftw@plt+0x27ca0>
  41ce30:	ldrb	w0, [x0, #4]
  41ce34:	cmp	w0, #0x16
  41ce38:	b.ne	41ce28 <nftw@plt+0x1a2a8>  // b.any
  41ce3c:	ldr	x19, [sp, #16]
  41ce40:	ldp	x29, x30, [sp], #32
  41ce44:	ret
  41ce48:	stp	x29, x30, [sp, #-64]!
  41ce4c:	mov	x29, sp
  41ce50:	stp	x19, x20, [sp, #16]
  41ce54:	add	x3, sp, #0x34
  41ce58:	mov	x19, x0
  41ce5c:	str	x21, [sp, #32]
  41ce60:	add	x2, sp, #0x38
  41ce64:	mov	w21, w1
  41ce68:	add	x1, sp, #0x30
  41ce6c:	ldrb	w4, [x0, #1123]
  41ce70:	str	xzr, [sp, #56]
  41ce74:	cmp	w4, #0x0
  41ce78:	cset	w4, eq  // eq = none
  41ce7c:	strb	w4, [x0, #21]
  41ce80:	bl	41c6d8 <nftw@plt+0x19b58>
  41ce84:	mov	x20, x0
  41ce88:	cbz	x0, 41cee8 <nftw@plt+0x1a368>
  41ce8c:	ldrb	w0, [x0]
  41ce90:	cbz	w0, 41cf20 <nftw@plt+0x1a3a0>
  41ce94:	ldr	x0, [x19, #40]
  41ce98:	ldr	w0, [x0, #48]
  41ce9c:	cmp	w0, #0xc7
  41cea0:	mov	x0, x19
  41cea4:	b.hi	41cf0c <nftw@plt+0x1a38c>  // b.pmore
  41cea8:	bl	41cde0 <nftw@plt+0x1a260>
  41ceac:	ldr	x6, [x19, #928]
  41ceb0:	cbz	x6, 41ced4 <nftw@plt+0x1a354>
  41ceb4:	ldr	x1, [x19, #144]
  41ceb8:	mov	x3, x20
  41cebc:	ldr	w4, [sp, #48]
  41cec0:	mov	x0, x19
  41cec4:	ldr	x5, [sp, #56]
  41cec8:	ldr	x2, [x1, #8]
  41cecc:	ldr	w1, [x19, #48]
  41ced0:	blr	x6
  41ced4:	ldp	w2, w4, [sp, #48]
  41ced8:	mov	w3, w21
  41cedc:	mov	x0, x19
  41cee0:	mov	x1, x20
  41cee4:	bl	425118 <nftw@plt+0x22598>
  41cee8:	mov	x0, x20
  41ceec:	bl	402910 <free@plt>
  41cef0:	ldr	x0, [sp, #56]
  41cef4:	cbz	x0, 41cefc <nftw@plt+0x1a37c>
  41cef8:	bl	402910 <free@plt>
  41cefc:	ldp	x19, x20, [sp, #16]
  41cf00:	ldr	x21, [sp, #32]
  41cf04:	ldp	x29, x30, [sp], #64
  41cf08:	ret
  41cf0c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41cf10:	mov	w1, #0x3                   	// #3
  41cf14:	add	x2, x2, #0xa38
  41cf18:	bl	41f298 <nftw@plt+0x1c718>
  41cf1c:	b	41cee8 <nftw@plt+0x1a368>
  41cf20:	ldr	x1, [x19, #144]
  41cf24:	mov	x0, x19
  41cf28:	ldr	w2, [sp, #52]
  41cf2c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41cf30:	mov	w3, #0x0                   	// #0
  41cf34:	add	x4, x4, #0xa20
  41cf38:	ldr	x5, [x1, #8]
  41cf3c:	mov	w1, #0x3                   	// #3
  41cf40:	bl	41f458 <nftw@plt+0x1c8d8>
  41cf44:	b	41cee8 <nftw@plt+0x1a368>
  41cf48:	mov	w1, #0x2                   	// #2
  41cf4c:	b	41ce48 <nftw@plt+0x1a2c8>
  41cf50:	stp	x29, x30, [sp, #-32]!
  41cf54:	mov	w1, #0x1                   	// #1
  41cf58:	mov	x29, sp
  41cf5c:	ldr	x2, [x0, #40]
  41cf60:	ldr	w2, [x2, #48]
  41cf64:	str	x19, [sp, #16]
  41cf68:	mov	x19, x0
  41cf6c:	cmp	w2, w1
  41cf70:	b.eq	41cf84 <nftw@plt+0x1a404>  // b.none
  41cf74:	mov	x0, x19
  41cf78:	ldr	x19, [sp, #16]
  41cf7c:	ldp	x29, x30, [sp], #32
  41cf80:	b	41ce48 <nftw@plt+0x1a2c8>
  41cf84:	mov	w1, #0x0                   	// #0
  41cf88:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41cf8c:	add	x2, x2, #0xa58
  41cf90:	bl	41f298 <nftw@plt+0x1c718>
  41cf94:	mov	x0, x19
  41cf98:	mov	w1, #0x0                   	// #0
  41cf9c:	ldr	x19, [sp, #16]
  41cfa0:	ldp	x29, x30, [sp], #32
  41cfa4:	b	41ce48 <nftw@plt+0x1a2c8>
  41cfa8:	mov	w1, #0x0                   	// #0
  41cfac:	b	41ce48 <nftw@plt+0x1a2c8>
  41cfb0:	stp	x29, x30, [sp, #-32]!
  41cfb4:	mov	x29, sp
  41cfb8:	str	x19, [sp, #16]
  41cfbc:	mov	x19, x0
  41cfc0:	ldrb	w3, [x0, #1160]
  41cfc4:	ldrb	w2, [x0, #32]
  41cfc8:	cbz	w3, 41d020 <nftw@plt+0x1a4a0>
  41cfcc:	cbnz	w2, 41cfdc <nftw@plt+0x1a45c>
  41cfd0:	ldrb	w0, [x0, #24]
  41cfd4:	sub	w0, w0, #0x1
  41cfd8:	strb	w0, [x19, #24]
  41cfdc:	ldr	x1, [x19, #144]
  41cfe0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41cfe4:	add	x0, x0, #0xe0
  41cfe8:	cmp	x1, x0
  41cfec:	b.eq	41cff8 <nftw@plt+0x1a478>  // b.none
  41cff0:	mov	x0, x19
  41cff4:	bl	433990 <nftw@plt+0x30e10>
  41cff8:	ldrb	w0, [x19, #1123]
  41cffc:	strb	wzr, [x19, #16]
  41d000:	cmp	w0, #0x0
  41d004:	sturh	wzr, [x19, #19]
  41d008:	cset	w0, eq  // eq = none
  41d00c:	strb	w0, [x19, #21]
  41d010:	str	xzr, [x19, #144]
  41d014:	ldr	x19, [sp, #16]
  41d018:	ldp	x29, x30, [sp], #32
  41d01c:	ret
  41d020:	cmp	w2, #0x0
  41d024:	and	w1, w1, #0x1
  41d028:	csel	w1, w1, wzr, eq  // eq = none
  41d02c:	cbz	w1, 41cff8 <nftw@plt+0x1a478>
  41d030:	bl	41cde0 <nftw@plt+0x1a260>
  41d034:	ldr	w0, [x19, #500]
  41d038:	cbnz	w0, 41cff8 <nftw@plt+0x1a478>
  41d03c:	ldr	x1, [x19, #472]
  41d040:	add	x0, x19, #0x1c8
  41d044:	str	x1, [x19, #448]
  41d048:	str	x0, [x19, #488]
  41d04c:	b	41cff8 <nftw@plt+0x1a478>
  41d050:	stp	x29, x30, [sp, #-64]!
  41d054:	mov	x29, sp
  41d058:	stp	x19, x20, [sp, #16]
  41d05c:	mov	x20, x0
  41d060:	stp	x21, x22, [sp, #32]
  41d064:	str	x23, [sp, #48]
  41d068:	bl	41c430 <nftw@plt+0x198b0>
  41d06c:	cbz	x0, 41d208 <nftw@plt+0x1a688>
  41d070:	ldr	x1, [x0, #16]
  41d074:	ldr	w2, [x0, #8]
  41d078:	ldrb	w3, [x1]
  41d07c:	add	w0, w2, #0x2
  41d080:	add	x0, x0, #0xf
  41d084:	mov	w5, w2
  41d088:	cmp	w3, #0x4c
  41d08c:	and	x0, x0, #0x1fffffff0
  41d090:	cset	x2, eq  // eq = none
  41d094:	sub	x5, x5, #0x1
  41d098:	add	x2, x2, #0x1
  41d09c:	sub	sp, sp, x0
  41d0a0:	add	x5, x1, x5
  41d0a4:	mov	x22, sp
  41d0a8:	add	x1, x1, x2
  41d0ac:	mov	x4, x22
  41d0b0:	cmp	x1, x5
  41d0b4:	b.cs	41d0d8 <nftw@plt+0x1a558>  // b.hs, b.nlast
  41d0b8:	mov	x2, x1
  41d0bc:	ldrb	w3, [x2], #1
  41d0c0:	cmp	w3, #0x5c
  41d0c4:	b.eq	41d17c <nftw@plt+0x1a5fc>  // b.none
  41d0c8:	mov	x1, x2
  41d0cc:	strb	w3, [x4], #1
  41d0d0:	cmp	x5, x1
  41d0d4:	b.hi	41d0b8 <nftw@plt+0x1a538>  // b.pmore
  41d0d8:	strb	wzr, [x4]
  41d0dc:	mov	w2, #0x0                   	// #0
  41d0e0:	mov	w1, #0x0                   	// #0
  41d0e4:	mov	x0, x20
  41d0e8:	bl	41c530 <nftw@plt+0x199b0>
  41d0ec:	mov	x0, x20
  41d0f0:	bl	41cde0 <nftw@plt+0x1a260>
  41d0f4:	mov	x0, #0x20                  	// #32
  41d0f8:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41d0fc:	mov	x19, x0
  41d100:	mov	x0, x22
  41d104:	stp	xzr, xzr, [x19]
  41d108:	stp	xzr, xzr, [x19, #16]
  41d10c:	bl	4024f0 <strlen@plt>
  41d110:	add	x21, x0, #0x1
  41d114:	mov	x0, x21
  41d118:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41d11c:	str	x0, [x19, #8]
  41d120:	mov	x2, x21
  41d124:	mov	x1, x22
  41d128:	mov	x21, x0
  41d12c:	bl	402490 <memcpy@plt>
  41d130:	ldr	x2, [x20, #1400]
  41d134:	str	x2, [x19]
  41d138:	mov	x1, x21
  41d13c:	mov	x0, x20
  41d140:	bl	426e18 <nftw@plt+0x24298>
  41d144:	mov	x21, x0
  41d148:	ldrb	w0, [x0, #18]
  41d14c:	tst	x0, #0x3
  41d150:	b.ne	41d198 <nftw@plt+0x1a618>  // b.any
  41d154:	ldrb	w0, [x19, #28]
  41d158:	orr	w0, w0, #0x4
  41d15c:	strb	w0, [x19, #28]
  41d160:	str	x19, [x20, #1400]
  41d164:	mov	sp, x29
  41d168:	ldp	x19, x20, [sp, #16]
  41d16c:	ldp	x21, x22, [sp, #32]
  41d170:	ldr	x23, [sp, #48]
  41d174:	ldp	x29, x30, [sp], #64
  41d178:	ret
  41d17c:	ldrb	w6, [x1, #1]
  41d180:	add	x1, x1, #0x2
  41d184:	cmp	w6, #0x22
  41d188:	ccmp	w6, w3, #0x4, ne  // ne = any
  41d18c:	b.ne	41d0c8 <nftw@plt+0x1a548>  // b.any
  41d190:	mov	w3, w6
  41d194:	b	41d0cc <nftw@plt+0x1a54c>
  41d198:	mov	x1, x21
  41d19c:	mov	x0, x20
  41d1a0:	bl	431a40 <nftw@plt+0x2eec0>
  41d1a4:	mov	x23, x0
  41d1a8:	bl	4024f0 <strlen@plt>
  41d1ac:	mov	x22, x0
  41d1b0:	add	x0, x0, #0x2
  41d1b4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41d1b8:	add	x4, x0, x22
  41d1bc:	mov	w6, #0xa                   	// #10
  41d1c0:	strb	w6, [x0, x22]
  41d1c4:	mov	x1, x23
  41d1c8:	ldrb	w5, [x19, #28]
  41d1cc:	mov	x2, x22
  41d1d0:	strb	wzr, [x4, #1]
  41d1d4:	str	x0, [x19, #16]
  41d1d8:	ldr	x3, [x21, #24]
  41d1dc:	ldrb	w4, [x3, #19]
  41d1e0:	ldr	w3, [x3, #8]
  41d1e4:	str	w3, [x19, #24]
  41d1e8:	ubfx	x3, x4, #5, #1
  41d1ec:	ubfx	x4, x4, #4, #1
  41d1f0:	ubfiz	w3, w3, #1, #7
  41d1f4:	orr	w3, w3, w4
  41d1f8:	bfxil	w5, w3, #0, #2
  41d1fc:	strb	w5, [x19, #28]
  41d200:	bl	402490 <memcpy@plt>
  41d204:	b	41d160 <nftw@plt+0x1a5e0>
  41d208:	ldr	x2, [x20, #448]
  41d20c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d210:	add	x4, x4, #0xa80
  41d214:	mov	w3, #0x0                   	// #0
  41d218:	mov	x0, x20
  41d21c:	mov	w1, #0x3                   	// #3
  41d220:	ldur	w2, [x2, #-24]
  41d224:	bl	41f458 <nftw@plt+0x1c8d8>
  41d228:	mov	w2, #0x0                   	// #0
  41d22c:	mov	w1, #0x0                   	// #0
  41d230:	mov	x0, x20
  41d234:	bl	41c530 <nftw@plt+0x199b0>
  41d238:	mov	x0, x20
  41d23c:	bl	41cde0 <nftw@plt+0x1a260>
  41d240:	b	41d164 <nftw@plt+0x1a5e4>
  41d244:	nop
  41d248:	stp	x29, x30, [sp, #-32]!
  41d24c:	mov	x29, sp
  41d250:	ldr	x1, [x0]
  41d254:	stp	x19, x20, [sp, #16]
  41d258:	ldr	x19, [x1, #96]
  41d25c:	cbz	x19, 41d2c0 <nftw@plt+0x1a740>
  41d260:	ldr	w1, [x19, #28]
  41d264:	mov	x20, x0
  41d268:	cmp	w1, #0x5
  41d26c:	b.eq	41d2d8 <nftw@plt+0x1a758>  // b.none
  41d270:	mov	w0, #0x5                   	// #5
  41d274:	str	w0, [x19, #28]
  41d278:	ldrb	w0, [x19, #24]
  41d27c:	mov	w1, #0x1                   	// #1
  41d280:	strb	w0, [x20, #18]
  41d284:	str	xzr, [x19, #16]
  41d288:	ldrb	w0, [x19, #25]
  41d28c:	strb	w1, [x19, #24]
  41d290:	cbnz	w0, 41d29c <nftw@plt+0x1a71c>
  41d294:	ldrb	w0, [x20, #1140]
  41d298:	cbnz	w0, 41d2a8 <nftw@plt+0x1a728>
  41d29c:	ldp	x19, x20, [sp, #16]
  41d2a0:	ldp	x29, x30, [sp], #32
  41d2a4:	ret
  41d2a8:	mov	x0, x20
  41d2ac:	mov	w2, #0x8                   	// #8
  41d2b0:	ldp	x19, x20, [sp, #16]
  41d2b4:	mov	w1, #0x0                   	// #0
  41d2b8:	ldp	x29, x30, [sp], #32
  41d2bc:	b	41c530 <nftw@plt+0x199b0>
  41d2c0:	ldp	x19, x20, [sp, #16]
  41d2c4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d2c8:	ldp	x29, x30, [sp], #32
  41d2cc:	add	x2, x2, #0xaa8
  41d2d0:	mov	w1, #0x3                   	// #3
  41d2d4:	b	41f298 <nftw@plt+0x1c718>
  41d2d8:	mov	w1, #0x3                   	// #3
  41d2dc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d2e0:	add	x2, x2, #0xac0
  41d2e4:	bl	41f298 <nftw@plt+0x1c718>
  41d2e8:	ldr	w2, [x19, #8]
  41d2ec:	mov	x0, x20
  41d2f0:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d2f4:	mov	w3, #0x0                   	// #0
  41d2f8:	add	x4, x4, #0xad8
  41d2fc:	mov	w1, #0x3                   	// #3
  41d300:	bl	41f458 <nftw@plt+0x1c8d8>
  41d304:	b	41d270 <nftw@plt+0x1a6f0>
  41d308:	stp	x29, x30, [sp, #-48]!
  41d30c:	mov	w1, #0x11                  	// #17
  41d310:	mov	x29, sp
  41d314:	add	x2, sp, #0x28
  41d318:	str	x19, [sp, #16]
  41d31c:	mov	x19, x0
  41d320:	bl	41b738 <nftw@plt+0x18bb8>
  41d324:	cbz	x0, 41d354 <nftw@plt+0x1a7d4>
  41d328:	ldr	x1, [sp, #40]
  41d32c:	cbz	x1, 41d360 <nftw@plt+0x1a7e0>
  41d330:	bl	41b9c0 <nftw@plt+0x18e40>
  41d334:	ldr	x1, [x0]
  41d338:	cbz	x1, 41d344 <nftw@plt+0x1a7c4>
  41d33c:	ldr	x1, [x1]
  41d340:	str	x1, [x0]
  41d344:	mov	x0, x19
  41d348:	mov	w2, #0x0                   	// #0
  41d34c:	mov	w1, #0x0                   	// #0
  41d350:	bl	41c530 <nftw@plt+0x199b0>
  41d354:	ldr	x19, [sp, #16]
  41d358:	ldp	x29, x30, [sp], #48
  41d35c:	ret
  41d360:	bl	42e890 <nftw@plt+0x2bd10>
  41d364:	ldr	x19, [sp, #16]
  41d368:	ldp	x29, x30, [sp], #48
  41d36c:	ret
  41d370:	stp	x29, x30, [sp, #-32]!
  41d374:	mov	x29, sp
  41d378:	ldr	x1, [x0]
  41d37c:	stp	x19, x20, [sp, #16]
  41d380:	ldr	x19, [x1, #96]
  41d384:	cbz	x19, 41d3e8 <nftw@plt+0x1a868>
  41d388:	ldr	w1, [x19, #28]
  41d38c:	mov	x20, x0
  41d390:	cmp	w1, #0x5
  41d394:	b.eq	41d400 <nftw@plt+0x1a880>  // b.none
  41d398:	ldrb	w0, [x19, #24]
  41d39c:	mov	w1, #0x9                   	// #9
  41d3a0:	str	w1, [x19, #28]
  41d3a4:	cbz	w0, 41d3c0 <nftw@plt+0x1a840>
  41d3a8:	mov	w0, #0x1                   	// #1
  41d3ac:	strb	w0, [x20, #18]
  41d3b0:	str	xzr, [x19, #16]
  41d3b4:	ldp	x19, x20, [sp, #16]
  41d3b8:	ldp	x29, x30, [sp], #32
  41d3bc:	ret
  41d3c0:	mov	w1, #0x0                   	// #0
  41d3c4:	mov	x0, x20
  41d3c8:	bl	421ad8 <nftw@plt+0x1ef58>
  41d3cc:	eor	w1, w0, #0x1
  41d3d0:	strb	w1, [x20, #18]
  41d3d4:	str	xzr, [x19, #16]
  41d3d8:	strb	w0, [x19, #24]
  41d3dc:	ldp	x19, x20, [sp, #16]
  41d3e0:	ldp	x29, x30, [sp], #32
  41d3e4:	ret
  41d3e8:	ldp	x19, x20, [sp, #16]
  41d3ec:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d3f0:	ldp	x29, x30, [sp], #32
  41d3f4:	add	x2, x2, #0xaf8
  41d3f8:	mov	w1, #0x3                   	// #3
  41d3fc:	b	41f298 <nftw@plt+0x1c718>
  41d400:	mov	w1, #0x3                   	// #3
  41d404:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d408:	add	x2, x2, #0xb10
  41d40c:	bl	41f298 <nftw@plt+0x1c718>
  41d410:	ldr	w2, [x19, #8]
  41d414:	mov	x0, x20
  41d418:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d41c:	mov	w3, #0x0                   	// #0
  41d420:	add	x4, x4, #0xad8
  41d424:	mov	w1, #0x3                   	// #3
  41d428:	bl	41f458 <nftw@plt+0x1c8d8>
  41d42c:	b	41d398 <nftw@plt+0x1a818>
  41d430:	ldr	x1, [x0, #40]
  41d434:	ldr	w1, [x1, #48]
  41d438:	cmp	w1, #0x1
  41d43c:	b.eq	41d47c <nftw@plt+0x1a8fc>  // b.none
  41d440:	stp	x29, x30, [sp, #-32]!
  41d444:	mov	w2, #0x0                   	// #0
  41d448:	mov	w1, #0x0                   	// #0
  41d44c:	mov	x29, sp
  41d450:	str	x19, [sp, #16]
  41d454:	mov	x19, x0
  41d458:	bl	41c530 <nftw@plt+0x199b0>
  41d45c:	mov	x0, x19
  41d460:	bl	41cde0 <nftw@plt+0x1a260>
  41d464:	mov	x0, x19
  41d468:	mov	w2, #0x0                   	// #0
  41d46c:	ldr	x19, [sp, #16]
  41d470:	mov	w1, #0x1                   	// #1
  41d474:	ldp	x29, x30, [sp], #32
  41d478:	b	425598 <nftw@plt+0x22a18>
  41d47c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d480:	mov	w1, #0x0                   	// #0
  41d484:	add	x2, x2, #0xb28
  41d488:	b	41f298 <nftw@plt+0x1c718>
  41d48c:	nop
  41d490:	stp	x29, x30, [sp, #-64]!
  41d494:	mov	x29, sp
  41d498:	stp	x19, x20, [sp, #16]
  41d49c:	stp	x21, x22, [sp, #32]
  41d4a0:	mov	x22, x1
  41d4a4:	mov	x21, x0
  41d4a8:	stp	x23, x24, [sp, #48]
  41d4ac:	mov	x23, x2
  41d4b0:	and	w24, w3, #0xff
  41d4b4:	cbz	x1, 41d588 <nftw@plt+0x1aa08>
  41d4b8:	mov	x0, x1
  41d4bc:	bl	4024f0 <strlen@plt>
  41d4c0:	mov	x1, x22
  41d4c4:	mov	w2, w0
  41d4c8:	mov	x0, x21
  41d4cc:	bl	425de0 <nftw@plt+0x23260>
  41d4d0:	ldr	x5, [x21, #896]
  41d4d4:	mov	x20, x0
  41d4d8:	cbnz	x5, 41d4e8 <nftw@plt+0x1a968>
  41d4dc:	b	41d62c <nftw@plt+0x1aaac>
  41d4e0:	ldr	x5, [x5]
  41d4e4:	cbz	x5, 41d62c <nftw@plt+0x1aaac>
  41d4e8:	ldr	x6, [x5, #8]
  41d4ec:	cmp	x20, x6
  41d4f0:	b.ne	41d4e0 <nftw@plt+0x1a960>  // b.any
  41d4f4:	ldrb	w0, [x5, #16]
  41d4f8:	cbz	w0, 41d5ac <nftw@plt+0x1aa2c>
  41d4fc:	ldrb	w0, [x5, #19]
  41d500:	cmp	w0, w24
  41d504:	b.ne	41d5dc <nftw@plt+0x1aa5c>  // b.any
  41d508:	add	x19, x5, #0x18
  41d50c:	mov	x0, x23
  41d510:	bl	4024f0 <strlen@plt>
  41d514:	mov	x1, x23
  41d518:	mov	w2, w0
  41d51c:	mov	x0, x21
  41d520:	bl	425de0 <nftw@plt+0x23260>
  41d524:	ldr	x3, [x19]
  41d528:	mov	x20, x0
  41d52c:	cbnz	x3, 41d53c <nftw@plt+0x1a9bc>
  41d530:	b	41d664 <nftw@plt+0x1aae4>
  41d534:	ldr	x3, [x3]
  41d538:	cbz	x3, 41d664 <nftw@plt+0x1aae4>
  41d53c:	ldr	x5, [x3, #8]
  41d540:	cmp	x20, x5
  41d544:	b.ne	41d534 <nftw@plt+0x1a9b4>  // b.any
  41d548:	ldrb	w0, [x3, #16]
  41d54c:	cbnz	w0, 41d5ac <nftw@plt+0x1aa2c>
  41d550:	cbz	x22, 41d5fc <nftw@plt+0x1aa7c>
  41d554:	mov	x4, x23
  41d558:	mov	x3, x22
  41d55c:	mov	x0, x21
  41d560:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d564:	mov	w1, #0x4                   	// #4
  41d568:	add	x2, x2, #0xc28
  41d56c:	bl	41f298 <nftw@plt+0x1c718>
  41d570:	mov	x0, #0x0                   	// #0
  41d574:	ldp	x19, x20, [sp, #16]
  41d578:	ldp	x21, x22, [sp, #32]
  41d57c:	ldp	x23, x24, [sp, #48]
  41d580:	ldp	x29, x30, [sp], #64
  41d584:	ret
  41d588:	add	x19, x0, #0x380
  41d58c:	cbz	w24, 41d50c <nftw@plt+0x1a98c>
  41d590:	mov	x3, x2
  41d594:	mov	w1, #0x4                   	// #4
  41d598:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d59c:	add	x2, x2, #0xba8
  41d5a0:	bl	41f298 <nftw@plt+0x1c718>
  41d5a4:	mov	x0, #0x0                   	// #0
  41d5a8:	b	41d574 <nftw@plt+0x1a9f4>
  41d5ac:	ldr	x3, [x20]
  41d5b0:	mov	x0, x21
  41d5b4:	mov	w1, #0x4                   	// #4
  41d5b8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d5bc:	add	x2, x2, #0xbe8
  41d5c0:	bl	41f298 <nftw@plt+0x1c718>
  41d5c4:	mov	x0, #0x0                   	// #0
  41d5c8:	ldp	x19, x20, [sp, #16]
  41d5cc:	ldp	x21, x22, [sp, #32]
  41d5d0:	ldp	x23, x24, [sp, #48]
  41d5d4:	ldp	x29, x30, [sp], #64
  41d5d8:	ret
  41d5dc:	mov	x3, x22
  41d5e0:	mov	x0, x21
  41d5e4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d5e8:	mov	w1, #0x4                   	// #4
  41d5ec:	add	x2, x2, #0xb60
  41d5f0:	bl	41f298 <nftw@plt+0x1c718>
  41d5f4:	mov	x0, #0x0                   	// #0
  41d5f8:	b	41d574 <nftw@plt+0x1a9f4>
  41d5fc:	mov	x3, x23
  41d600:	mov	x0, x21
  41d604:	mov	w1, #0x4                   	// #4
  41d608:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d60c:	add	x2, x2, #0xc50
  41d610:	bl	41f298 <nftw@plt+0x1c718>
  41d614:	mov	x0, #0x0                   	// #0
  41d618:	ldp	x19, x20, [sp, #16]
  41d61c:	ldp	x21, x22, [sp, #32]
  41d620:	ldp	x23, x24, [sp, #48]
  41d624:	ldp	x29, x30, [sp], #64
  41d628:	ret
  41d62c:	mov	x1, #0x20                  	// #32
  41d630:	mov	x0, x21
  41d634:	bl	42aaa0 <nftw@plt+0x27f20>
  41d638:	mov	x5, x0
  41d63c:	mov	w0, #0x1                   	// #1
  41d640:	stp	xzr, xzr, [x5]
  41d644:	stp	xzr, xzr, [x5, #16]
  41d648:	ldr	x1, [x21, #896]
  41d64c:	str	x1, [x5]
  41d650:	str	x5, [x21, #896]
  41d654:	str	x20, [x5, #8]
  41d658:	strb	w0, [x5, #16]
  41d65c:	strb	w24, [x5, #19]
  41d660:	b	41d508 <nftw@plt+0x1a988>
  41d664:	mov	x1, #0x20                  	// #32
  41d668:	mov	x0, x21
  41d66c:	bl	42aaa0 <nftw@plt+0x27f20>
  41d670:	stp	xzr, xzr, [x0]
  41d674:	stp	xzr, xzr, [x0, #16]
  41d678:	ldr	x1, [x19]
  41d67c:	str	x1, [x0]
  41d680:	str	x0, [x19]
  41d684:	str	x20, [x0, #8]
  41d688:	b	41d574 <nftw@plt+0x1a9f4>
  41d68c:	nop
  41d690:	stp	x29, x30, [sp, #-240]!
  41d694:	mov	x29, sp
  41d698:	stp	x19, x20, [sp, #16]
  41d69c:	mov	x19, x0
  41d6a0:	stp	x21, x22, [sp, #32]
  41d6a4:	mov	w21, w1
  41d6a8:	stp	x23, x24, [sp, #48]
  41d6ac:	ldrb	w23, [x0, #27]
  41d6b0:	ldrb	w22, [x0, #25]
  41d6b4:	cbz	w23, 41d6bc <nftw@plt+0x1ab3c>
  41d6b8:	strb	wzr, [x0, #24]
  41d6bc:	cbz	w22, 41d6cc <nftw@plt+0x1ab4c>
  41d6c0:	ldrb	w0, [x19, #1154]
  41d6c4:	cbnz	w0, 41d98c <nftw@plt+0x1ae0c>
  41d6c8:	strh	wzr, [x19, #24]
  41d6cc:	ldr	x1, [x19, #40]
  41d6d0:	mov	w0, #0x1                   	// #1
  41d6d4:	strb	w0, [x19, #16]
  41d6d8:	mov	w2, #0x53                  	// #83
  41d6dc:	strb	wzr, [x19, #21]
  41d6e0:	mov	x0, x19
  41d6e4:	strb	w2, [x19, #156]
  41d6e8:	ldr	w1, [x1, #60]
  41d6ec:	str	w1, [x19, #48]
  41d6f0:	bl	42a820 <nftw@plt+0x27ca0>
  41d6f4:	mov	x20, x0
  41d6f8:	ldrb	w0, [x0, #4]
  41d6fc:	cmp	w0, #0x35
  41d700:	b.eq	41d858 <nftw@plt+0x1acd8>  // b.none
  41d704:	cmp	w0, #0x37
  41d708:	b.eq	41d774 <nftw@plt+0x1abf4>  // b.none
  41d70c:	cmp	w0, #0x16
  41d710:	b.ne	41d864 <nftw@plt+0x1ace4>  // b.any
  41d714:	ldrb	w0, [x19, #1160]
  41d718:	mov	w20, #0x1                   	// #1
  41d71c:	str	xzr, [x19, #144]
  41d720:	cbz	w0, 41d730 <nftw@plt+0x1abb0>
  41d724:	mov	x0, x19
  41d728:	mov	w20, #0x1                   	// #1
  41d72c:	bl	41c228 <nftw@plt+0x196a8>
  41d730:	mov	w1, w20
  41d734:	mov	x0, x19
  41d738:	bl	41cfb0 <nftw@plt+0x1a430>
  41d73c:	cbz	w22, 41d750 <nftw@plt+0x1abd0>
  41d740:	ldrb	w0, [x19, #32]
  41d744:	cbnz	w0, 41d750 <nftw@plt+0x1abd0>
  41d748:	mov	w0, #0x201                 	// #513
  41d74c:	strh	w0, [x19, #24]
  41d750:	cbz	w23, 41d75c <nftw@plt+0x1abdc>
  41d754:	mov	w0, #0x1                   	// #1
  41d758:	strb	w0, [x19, #24]
  41d75c:	mov	w0, w20
  41d760:	ldp	x19, x20, [sp, #16]
  41d764:	ldp	x21, x22, [sp, #32]
  41d768:	ldp	x23, x24, [sp, #48]
  41d76c:	ldp	x29, x30, [sp], #240
  41d770:	ret
  41d774:	ldr	w0, [x19, #1116]
  41d778:	cmp	w0, #0x15
  41d77c:	b.eq	41d830 <nftw@plt+0x1acb0>  // b.none
  41d780:	ldrb	w0, [x19, #1154]
  41d784:	ldrb	w2, [x19, #1155]
  41d788:	cbz	w0, 41d808 <nftw@plt+0x1ac88>
  41d78c:	cbnz	w2, 41d808 <nftw@plt+0x1ac88>
  41d790:	ldrb	w0, [x19, #18]
  41d794:	cbz	w0, 41d7ec <nftw@plt+0x1ac6c>
  41d798:	adrp	x24, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41d79c:	add	x24, x24, #0xe0
  41d7a0:	add	x20, x24, #0x1c8
  41d7a4:	strb	wzr, [x19, #17]
  41d7a8:	strb	wzr, [x19, #19]
  41d7ac:	strb	wzr, [x19, #440]
  41d7b0:	ldrb	w0, [x19, #1138]
  41d7b4:	cbz	w0, 41d9dc <nftw@plt+0x1ae5c>
  41d7b8:	add	x24, x24, #0xd8
  41d7bc:	cmp	x20, x24
  41d7c0:	b.eq	41da7c <nftw@plt+0x1aefc>  // b.none
  41d7c4:	ldrb	w0, [x20, #18]
  41d7c8:	cbnz	w21, 41da5c <nftw@plt+0x1aedc>
  41d7cc:	cbz	w0, 41d9d4 <nftw@plt+0x1ae54>
  41d7d0:	ldr	x3, [x20, #8]
  41d7d4:	mov	x0, x19
  41d7d8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d7dc:	mov	w1, #0x6                   	// #6
  41d7e0:	add	x2, x2, #0xd88
  41d7e4:	bl	41f308 <nftw@plt+0x1c788>
  41d7e8:	b	41d9d4 <nftw@plt+0x1ae54>
  41d7ec:	mov	x0, x19
  41d7f0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d7f4:	mov	w1, #0x2                   	// #2
  41d7f8:	add	x2, x2, #0xcb8
  41d7fc:	bl	41f298 <nftw@plt+0x1c718>
  41d800:	ldrb	w2, [x19, #1155]
  41d804:	nop
  41d808:	adrp	x24, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41d80c:	add	x24, x24, #0xe0
  41d810:	add	x20, x24, #0x1c8
  41d814:	mov	w0, #0x8                   	// #8
  41d818:	strb	wzr, [x19, #440]
  41d81c:	cbz	w2, 41d93c <nftw@plt+0x1adbc>
  41d820:	ldrb	w1, [x19, #1244]
  41d824:	cbnz	w1, 41d9c8 <nftw@plt+0x1ae48>
  41d828:	cbz	w21, 41d9c4 <nftw@plt+0x1ae44>
  41d82c:	nop
  41d830:	ldrb	w0, [x19, #1160]
  41d834:	str	xzr, [x19, #144]
  41d838:	cbz	w0, 41d844 <nftw@plt+0x1acc4>
  41d83c:	mov	x0, x19
  41d840:	bl	41c228 <nftw@plt+0x196a8>
  41d844:	mov	x0, x19
  41d848:	mov	w20, #0x0                   	// #0
  41d84c:	mov	w1, #0x1                   	// #1
  41d850:	bl	42e590 <nftw@plt+0x2ba10>
  41d854:	b	41d730 <nftw@plt+0x1abb0>
  41d858:	ldr	x0, [x20, #8]
  41d85c:	ldrb	w0, [x0, #16]
  41d860:	tbnz	w0, #0, 41d90c <nftw@plt+0x1ad8c>
  41d864:	ldr	w0, [x19, #1116]
  41d868:	cmp	w0, #0x15
  41d86c:	b.eq	41d830 <nftw@plt+0x1acb0>  // b.none
  41d870:	ldrb	w0, [x19, #18]
  41d874:	cbnz	w0, 41d714 <nftw@plt+0x1ab94>
  41d878:	mov	x1, x20
  41d87c:	mov	x0, x19
  41d880:	bl	428d50 <nftw@plt+0x261d0>
  41d884:	mov	x21, x0
  41d888:	ldr	x3, [x19, #1064]
  41d88c:	cbz	x3, 41d9a8 <nftw@plt+0x1ae28>
  41d890:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41d894:	add	x2, x2, #0xe0
  41d898:	mov	x1, x0
  41d89c:	add	x2, x2, #0x1e0
  41d8a0:	mov	x0, x19
  41d8a4:	blr	x3
  41d8a8:	mov	x24, x0
  41d8ac:	cbz	x0, 41d9a8 <nftw@plt+0x1ae28>
  41d8b0:	ldr	w2, [x20]
  41d8b4:	mov	x3, #0x0                   	// #0
  41d8b8:	ldr	x1, [x19, #40]
  41d8bc:	add	x0, sp, #0x48
  41d8c0:	bl	42d6d8 <nftw@plt+0x2ab58>
  41d8c4:	ldr	w1, [x20]
  41d8c8:	ldr	x0, [x19, #40]
  41d8cc:	bl	42bba0 <nftw@plt+0x29020>
  41d8d0:	mov	x1, x0
  41d8d4:	mov	x2, x24
  41d8d8:	add	x0, sp, #0x48
  41d8dc:	bl	42d480 <nftw@plt+0x2a900>
  41d8e0:	mov	x5, x24
  41d8e4:	mov	x4, x21
  41d8e8:	add	x2, sp, #0x48
  41d8ec:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d8f0:	add	x3, x3, #0xdc8
  41d8f4:	mov	w1, #0x3                   	// #3
  41d8f8:	mov	x0, x19
  41d8fc:	bl	41f700 <nftw@plt+0x1cb80>
  41d900:	add	x0, sp, #0x48
  41d904:	bl	42cec0 <nftw@plt+0x2a340>
  41d908:	b	41d714 <nftw@plt+0x1ab94>
  41d90c:	ubfx	x0, x0, #1, #7
  41d910:	adrp	x24, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41d914:	add	x24, x24, #0xe0
  41d918:	mov	w20, #0x18                  	// #24
  41d91c:	sbfiz	x1, x0, #1, #32
  41d920:	ldrb	w2, [x19, #1155]
  41d924:	add	x1, x1, w0, sxtw
  41d928:	umaddl	x20, w0, w20, x24
  41d92c:	add	x0, x24, x1, lsl #3
  41d930:	ldrb	w0, [x0, #19]
  41d934:	tbz	w0, #1, 41d818 <nftw@plt+0x1ac98>
  41d938:	cbnz	w2, 41d820 <nftw@plt+0x1aca0>
  41d93c:	ldrb	w2, [x19, #18]
  41d940:	and	w1, w0, #0x4
  41d944:	strb	w1, [x19, #17]
  41d948:	strb	w1, [x19, #19]
  41d94c:	cbnz	w2, 41d7b0 <nftw@plt+0x1ac30>
  41d950:	ldrb	w1, [x20, #18]
  41d954:	cmp	w1, #0x2
  41d958:	b.ne	41d970 <nftw@plt+0x1adf0>  // b.any
  41d95c:	add	x1, x24, #0x168
  41d960:	cmp	x20, x1
  41d964:	b.eq	41da28 <nftw@plt+0x1aea8>  // b.none
  41d968:	ldrb	w1, [x19, #1154]
  41d96c:	cbnz	w1, 41da04 <nftw@plt+0x1ae84>
  41d970:	tbnz	w0, #5, 41da38 <nftw@plt+0x1aeb8>
  41d974:	add	x0, x24, #0x168
  41d978:	cmp	x20, x0
  41d97c:	b.eq	41da94 <nftw@plt+0x1af14>  // b.none
  41d980:	ldrb	w0, [x19, #1138]
  41d984:	cbnz	w0, 41d7b8 <nftw@plt+0x1ac38>
  41d988:	b	41d9e4 <nftw@plt+0x1ae64>
  41d98c:	mov	x0, x19
  41d990:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d994:	mov	w1, #0x2                   	// #2
  41d998:	add	x2, x2, #0xc78
  41d99c:	bl	41f298 <nftw@plt+0x1c718>
  41d9a0:	strh	wzr, [x19, #24]
  41d9a4:	b	41d6cc <nftw@plt+0x1ab4c>
  41d9a8:	mov	x3, x21
  41d9ac:	mov	x0, x19
  41d9b0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41d9b4:	mov	w1, #0x3                   	// #3
  41d9b8:	add	x2, x2, #0xe00
  41d9bc:	bl	41f298 <nftw@plt+0x1c718>
  41d9c0:	b	41d714 <nftw@plt+0x1ab94>
  41d9c4:	tbz	w0, #3, 41d830 <nftw@plt+0x1acb0>
  41d9c8:	and	w0, w0, #0x4
  41d9cc:	strb	w0, [x19, #17]
  41d9d0:	strb	w0, [x19, #19]
  41d9d4:	ldrb	w0, [x19, #18]
  41d9d8:	cbz	w0, 41d9e4 <nftw@plt+0x1ae64>
  41d9dc:	ldrb	w0, [x20, #19]
  41d9e0:	tbz	w0, #0, 41d714 <nftw@plt+0x1ab94>
  41d9e4:	ldrb	w0, [x19, #1160]
  41d9e8:	str	x20, [x19, #144]
  41d9ec:	cbnz	w0, 41daa8 <nftw@plt+0x1af28>
  41d9f0:	ldr	x1, [x20]
  41d9f4:	mov	x0, x19
  41d9f8:	mov	w20, #0x1                   	// #1
  41d9fc:	blr	x1
  41da00:	b	41d730 <nftw@plt+0x1abb0>
  41da04:	ldr	x3, [x20, #8]
  41da08:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41da0c:	mov	x0, x19
  41da10:	add	x2, x2, #0xce8
  41da14:	mov	w1, #0x2                   	// #2
  41da18:	bl	41f298 <nftw@plt+0x1c718>
  41da1c:	ldrb	w0, [x19, #1138]
  41da20:	cbz	w0, 41d9d4 <nftw@plt+0x1ae54>
  41da24:	b	41d7b8 <nftw@plt+0x1ac38>
  41da28:	ldrb	w1, [x19, #1122]
  41da2c:	cbz	w1, 41d968 <nftw@plt+0x1ade8>
  41da30:	tbz	w0, #5, 41da9c <nftw@plt+0x1af1c>
  41da34:	nop
  41da38:	ldrb	w0, [x19, #1132]
  41da3c:	cbz	w0, 41d980 <nftw@plt+0x1ae00>
  41da40:	ldr	x3, [x20, #8]
  41da44:	mov	x0, x19
  41da48:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41da4c:	mov	w1, #0x1                   	// #1
  41da50:	add	x2, x2, #0xd00
  41da54:	bl	41f308 <nftw@plt+0x1c788>
  41da58:	b	41da1c <nftw@plt+0x1ae9c>
  41da5c:	cbnz	w0, 41d9d4 <nftw@plt+0x1ae54>
  41da60:	ldr	x3, [x20, #8]
  41da64:	mov	x0, x19
  41da68:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41da6c:	mov	w1, #0x6                   	// #6
  41da70:	add	x2, x2, #0xd58
  41da74:	bl	41f308 <nftw@plt+0x1c788>
  41da78:	b	41d9d4 <nftw@plt+0x1ae54>
  41da7c:	mov	x0, x19
  41da80:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41da84:	mov	w1, #0x6                   	// #6
  41da88:	add	x2, x2, #0xd28
  41da8c:	bl	41f308 <nftw@plt+0x1c788>
  41da90:	b	41d9e4 <nftw@plt+0x1ae64>
  41da94:	ldrb	w0, [x19, #1122]
  41da98:	cbz	w0, 41da38 <nftw@plt+0x1aeb8>
  41da9c:	ldrb	w0, [x19, #1138]
  41daa0:	cbnz	w0, 41d7c4 <nftw@plt+0x1ac44>
  41daa4:	b	41d9e4 <nftw@plt+0x1ae64>
  41daa8:	mov	x0, x19
  41daac:	bl	41c228 <nftw@plt+0x196a8>
  41dab0:	ldr	x20, [x19, #144]
  41dab4:	b	41d9f0 <nftw@plt+0x1ae70>
  41dab8:	adrp	x1, 41b000 <nftw@plt+0x18480>
  41dabc:	mov	x2, #0x0                   	// #0
  41dac0:	add	x1, x1, #0x400
  41dac4:	b	425e28 <nftw@plt+0x232a8>
  41dac8:	stp	x29, x30, [sp, #-32]!
  41dacc:	mov	w5, w3
  41dad0:	mov	x3, x2
  41dad4:	mov	x29, sp
  41dad8:	stp	x19, x20, [sp, #16]
  41dadc:	mov	x19, x0
  41dae0:	mov	w0, w4
  41dae4:	mov	w2, w0
  41dae8:	mov	w4, w5
  41daec:	ldr	x0, [x19, #40]
  41daf0:	bl	42b128 <nftw@plt+0x285a8>
  41daf4:	mov	x20, x0
  41daf8:	cbz	x0, 41db0c <nftw@plt+0x1af8c>
  41dafc:	ldr	w1, [x0, #16]
  41db00:	mov	w2, #0x7f                  	// #127
  41db04:	ldr	x0, [x19, #40]
  41db08:	bl	42b4f0 <nftw@plt+0x28970>
  41db0c:	ldr	x2, [x19, #912]
  41db10:	cbz	x2, 41db2c <nftw@plt+0x1afac>
  41db14:	mov	x1, x20
  41db18:	mov	x0, x19
  41db1c:	ldp	x19, x20, [sp, #16]
  41db20:	mov	x16, x2
  41db24:	ldp	x29, x30, [sp], #32
  41db28:	br	x16
  41db2c:	ldp	x19, x20, [sp, #16]
  41db30:	ldp	x29, x30, [sp], #32
  41db34:	ret
  41db38:	stp	x29, x30, [sp, #-96]!
  41db3c:	mov	w4, #0x18                  	// #24
  41db40:	mov	w1, #0x1                   	// #1
  41db44:	mov	x29, sp
  41db48:	stp	x23, x24, [sp, #48]
  41db4c:	ldr	x23, [x0, #40]
  41db50:	stp	x19, x20, [sp, #16]
  41db54:	stp	x21, x22, [sp, #32]
  41db58:	mov	x22, x0
  41db5c:	ldr	w2, [x23, #12]
  41db60:	ldr	x3, [x23]
  41db64:	sub	w2, w2, #0x1
  41db68:	smaddl	x2, w2, w4, x3
  41db6c:	ldrb	w20, [x2, #5]
  41db70:	ldr	x21, [x2, #8]
  41db74:	bl	42e590 <nftw@plt+0x2ba10>
  41db78:	mov	x0, x22
  41db7c:	bl	431988 <nftw@plt+0x2ee08>
  41db80:	mov	x1, x0
  41db84:	ldrb	w0, [x0, #4]
  41db88:	cmp	w0, #0x37
  41db8c:	b.ne	41dbd0 <nftw@plt+0x1b050>  // b.any
  41db90:	ldr	w5, [x1, #8]
  41db94:	ldr	x2, [x1, #16]
  41db98:	cbz	x5, 41dc04 <nftw@plt+0x1b084>
  41db9c:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x205a0>
  41dba0:	add	x5, x2, x5
  41dba4:	add	x4, x4, #0x248
  41dba8:	mov	w19, #0x0                   	// #0
  41dbac:	b	41dbb8 <nftw@plt+0x1b038>
  41dbb0:	cmp	x2, x5
  41dbb4:	b.eq	41dc08 <nftw@plt+0x1b088>  // b.none
  41dbb8:	ldrb	w3, [x2], #1
  41dbbc:	add	w19, w19, w19, lsl #2
  41dbc0:	add	w19, w3, w19, lsl #1
  41dbc4:	ldrh	w3, [x4, w3, sxtw #1]
  41dbc8:	sub	w19, w19, #0x30
  41dbcc:	tbnz	w3, #2, 41dbb0 <nftw@plt+0x1b030>
  41dbd0:	mov	x0, x22
  41dbd4:	bl	428d50 <nftw@plt+0x261d0>
  41dbd8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41dbdc:	mov	x3, x0
  41dbe0:	add	x2, x2, #0xe28
  41dbe4:	mov	x0, x22
  41dbe8:	mov	w1, #0x3                   	// #3
  41dbec:	bl	41f298 <nftw@plt+0x1c718>
  41dbf0:	ldp	x19, x20, [sp, #16]
  41dbf4:	ldp	x21, x22, [sp, #32]
  41dbf8:	ldp	x23, x24, [sp, #48]
  41dbfc:	ldp	x29, x30, [sp], #96
  41dc00:	ret
  41dc04:	mov	w19, #0x0                   	// #0
  41dc08:	mov	x0, x22
  41dc0c:	bl	431988 <nftw@plt+0x2ee08>
  41dc10:	ldrb	w4, [x0, #4]
  41dc14:	cmp	w4, #0x3e
  41dc18:	b.eq	41dc9c <nftw@plt+0x1b11c>  // b.none
  41dc1c:	cmp	w4, #0x16
  41dc20:	b.ne	41dc74 <nftw@plt+0x1b0f4>  // b.any
  41dc24:	mov	x0, x22
  41dc28:	mov	w24, #0x3                   	// #3
  41dc2c:	bl	41cde0 <nftw@plt+0x1a260>
  41dc30:	ldr	x6, [x22, #40]
  41dc34:	mov	w4, w20
  41dc38:	mov	w3, w19
  41dc3c:	mov	x2, x21
  41dc40:	mov	w1, w24
  41dc44:	mov	x0, x22
  41dc48:	ldr	w5, [x6, #56]
  41dc4c:	sub	w5, w5, #0x1
  41dc50:	str	w5, [x6, #56]
  41dc54:	bl	41dac8 <nftw@plt+0x1af48>
  41dc58:	mov	w0, #0x1                   	// #1
  41dc5c:	strb	w0, [x23, #116]
  41dc60:	ldp	x19, x20, [sp, #16]
  41dc64:	ldp	x21, x22, [sp, #32]
  41dc68:	ldp	x23, x24, [sp, #48]
  41dc6c:	ldp	x29, x30, [sp], #96
  41dc70:	ret
  41dc74:	mov	x1, x0
  41dc78:	mov	x0, x22
  41dc7c:	bl	428d50 <nftw@plt+0x261d0>
  41dc80:	mov	x3, x0
  41dc84:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41dc88:	mov	x0, x22
  41dc8c:	add	x2, x2, #0xe50
  41dc90:	mov	w1, #0x3                   	// #3
  41dc94:	bl	41f298 <nftw@plt+0x1c718>
  41dc98:	b	41dbf0 <nftw@plt+0x1b070>
  41dc9c:	add	x1, x0, #0x8
  41dca0:	add	x3, sp, #0x50
  41dca4:	mov	x2, #0x1                   	// #1
  41dca8:	mov	x0, x22
  41dcac:	str	x25, [sp, #64]
  41dcb0:	str	wzr, [sp, #80]
  41dcb4:	str	xzr, [sp, #88]
  41dcb8:	bl	41ab08 <nftw@plt+0x17f88>
  41dcbc:	ldr	x2, [sp, #88]
  41dcc0:	tst	w0, #0xff
  41dcc4:	mov	w1, #0x0                   	// #0
  41dcc8:	mov	x0, x22
  41dccc:	csel	x21, x2, x21, ne  // ne = any
  41dcd0:	bl	41b5b8 <nftw@plt+0x18a38>
  41dcd4:	mov	w25, w0
  41dcd8:	cmp	w0, #0x1
  41dcdc:	b.eq	41de14 <nftw@plt+0x1b294>  // b.none
  41dce0:	cmp	w0, #0x2
  41dce4:	mov	w24, #0x3                   	// #3
  41dce8:	b.eq	41ddd4 <nftw@plt+0x1b254>  // b.none
  41dcec:	cmp	w25, #0x3
  41dcf0:	b.ne	41dd88 <nftw@plt+0x1b208>  // b.any
  41dcf4:	mov	w1, w25
  41dcf8:	mov	x0, x22
  41dcfc:	bl	41b5b8 <nftw@plt+0x18a38>
  41dd00:	cmp	w0, #0x4
  41dd04:	mov	w3, #0x1                   	// #1
  41dd08:	mov	w20, w3
  41dd0c:	b.ne	41dd18 <nftw@plt+0x1b198>  // b.any
  41dd10:	mov	w3, #0x2                   	// #2
  41dd14:	mov	w20, w3
  41dd18:	ldr	x4, [x22]
  41dd1c:	mov	w2, #0x0                   	// #0
  41dd20:	mov	w1, #0x0                   	// #0
  41dd24:	mov	x0, x22
  41dd28:	strb	w3, [x4, #106]
  41dd2c:	bl	41c530 <nftw@plt+0x199b0>
  41dd30:	mov	x0, x22
  41dd34:	bl	41cde0 <nftw@plt+0x1a260>
  41dd38:	cmp	w24, #0x1
  41dd3c:	b.ne	41dd80 <nftw@plt+0x1b200>  // b.any
  41dd40:	ldr	w24, [x23, #12]
  41dd44:	mov	w2, #0x18                  	// #24
  41dd48:	ldr	x1, [x23]
  41dd4c:	sub	w24, w24, #0x1
  41dd50:	mov	x0, x23
  41dd54:	smaddl	x24, w24, w2, x1
  41dd58:	mov	x1, x24
  41dd5c:	bl	42b0a8 <nftw@plt+0x28528>
  41dd60:	ldr	w1, [x24, #20]
  41dd64:	cbz	w1, 41ddb4 <nftw@plt+0x1b234>
  41dd68:	cbz	x0, 41dd7c <nftw@plt+0x1b1fc>
  41dd6c:	ldr	x0, [x0, #8]
  41dd70:	mov	x1, x21
  41dd74:	bl	448380 <nftw@plt+0x45800>
  41dd78:	cbnz	w0, 41ddb4 <nftw@plt+0x1b234>
  41dd7c:	mov	w24, #0x1                   	// #1
  41dd80:	ldr	x25, [sp, #64]
  41dd84:	b	41dc30 <nftw@plt+0x1b0b0>
  41dd88:	ldr	x3, [x22]
  41dd8c:	mov	w2, #0x0                   	// #0
  41dd90:	mov	w1, #0x0                   	// #0
  41dd94:	mov	x0, x22
  41dd98:	mov	w20, #0x0                   	// #0
  41dd9c:	strb	wzr, [x3, #106]
  41dda0:	bl	41c530 <nftw@plt+0x199b0>
  41dda4:	mov	x0, x22
  41dda8:	bl	41cde0 <nftw@plt+0x1a260>
  41ddac:	ldr	x25, [sp, #64]
  41ddb0:	b	41dc30 <nftw@plt+0x1b0b0>
  41ddb4:	mov	x3, x21
  41ddb8:	mov	x0, x22
  41ddbc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41ddc0:	mov	w1, #0x0                   	// #0
  41ddc4:	add	x2, x2, #0xe70
  41ddc8:	bl	41f308 <nftw@plt+0x1c788>
  41ddcc:	ldr	x25, [sp, #64]
  41ddd0:	b	41dbf0 <nftw@plt+0x1b070>
  41ddd4:	mov	w1, w0
  41ddd8:	mov	x0, x22
  41dddc:	bl	41b5b8 <nftw@plt+0x18a38>
  41dde0:	mov	w1, w0
  41dde4:	cmp	w0, w24
  41dde8:	b.eq	41de38 <nftw@plt+0x1b2b8>  // b.none
  41ddec:	ldr	x3, [x22]
  41ddf0:	mov	w2, #0x0                   	// #0
  41ddf4:	mov	w1, #0x0                   	// #0
  41ddf8:	mov	x0, x22
  41ddfc:	mov	w20, #0x0                   	// #0
  41de00:	strb	wzr, [x3, #106]
  41de04:	bl	41c530 <nftw@plt+0x199b0>
  41de08:	mov	x0, x22
  41de0c:	bl	41cde0 <nftw@plt+0x1a260>
  41de10:	b	41dd40 <nftw@plt+0x1b1c0>
  41de14:	mov	x1, x21
  41de18:	mov	x0, x22
  41de1c:	bl	425578 <nftw@plt+0x229f8>
  41de20:	mov	w24, #0x0                   	// #0
  41de24:	mov	w1, w25
  41de28:	mov	x0, x22
  41de2c:	bl	41b5b8 <nftw@plt+0x18a38>
  41de30:	mov	w25, w0
  41de34:	b	41dcec <nftw@plt+0x1b16c>
  41de38:	mov	x0, x22
  41de3c:	bl	41b5b8 <nftw@plt+0x18a38>
  41de40:	cmp	w0, #0x4
  41de44:	ldr	x3, [x22]
  41de48:	b.eq	41de74 <nftw@plt+0x1b2f4>  // b.none
  41de4c:	mov	w4, #0x1                   	// #1
  41de50:	strb	w4, [x3, #106]
  41de54:	mov	w2, #0x0                   	// #0
  41de58:	mov	w1, #0x0                   	// #0
  41de5c:	mov	x0, x22
  41de60:	bl	41c530 <nftw@plt+0x199b0>
  41de64:	mov	x0, x22
  41de68:	mov	w20, #0x1                   	// #1
  41de6c:	bl	41cde0 <nftw@plt+0x1a260>
  41de70:	b	41dd40 <nftw@plt+0x1b1c0>
  41de74:	strb	w25, [x3, #106]
  41de78:	mov	w2, #0x0                   	// #0
  41de7c:	mov	w1, #0x0                   	// #0
  41de80:	mov	x0, x22
  41de84:	bl	41c530 <nftw@plt+0x199b0>
  41de88:	mov	w20, w25
  41de8c:	mov	x0, x22
  41de90:	bl	41cde0 <nftw@plt+0x1a260>
  41de94:	b	41dd40 <nftw@plt+0x1b1c0>
  41de98:	stp	x29, x30, [sp, #-80]!
  41de9c:	mov	w3, #0x18                  	// #24
  41dea0:	mov	w4, #0x7fff                	// #32767
  41dea4:	mov	x29, sp
  41dea8:	stp	x23, x24, [sp, #48]
  41deac:	ldr	x24, [x0, #40]
  41deb0:	stp	x19, x20, [sp, #16]
  41deb4:	mov	x20, x0
  41deb8:	stp	x21, x22, [sp, #32]
  41debc:	mov	w21, #0x7fffffff            	// #2147483647
  41dec0:	ldr	w1, [x24, #12]
  41dec4:	ldrb	w2, [x0, #1152]
  41dec8:	sub	w1, w1, #0x1
  41decc:	cmp	w2, #0x0
  41ded0:	ldr	x2, [x24]
  41ded4:	csel	w21, w21, w4, ne  // ne = any
  41ded8:	smaddl	x1, w1, w3, x2
  41dedc:	ldrb	w23, [x1, #5]
  41dee0:	ldr	x22, [x1, #8]
  41dee4:	bl	431988 <nftw@plt+0x2ee08>
  41dee8:	mov	x1, x0
  41deec:	ldrb	w0, [x0, #4]
  41def0:	cmp	w0, #0x37
  41def4:	b.eq	41df34 <nftw@plt+0x1b3b4>  // b.none
  41def8:	cmp	w0, #0x16
  41defc:	b.eq	41e07c <nftw@plt+0x1b4fc>  // b.none
  41df00:	mov	x0, x20
  41df04:	bl	428d50 <nftw@plt+0x261d0>
  41df08:	mov	w1, #0x3                   	// #3
  41df0c:	mov	x3, x0
  41df10:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41df14:	mov	x0, x20
  41df18:	add	x2, x2, #0xed0
  41df1c:	bl	41f298 <nftw@plt+0x1c718>
  41df20:	ldp	x19, x20, [sp, #16]
  41df24:	ldp	x21, x22, [sp, #32]
  41df28:	ldp	x23, x24, [sp, #48]
  41df2c:	ldp	x29, x30, [sp], #80
  41df30:	ret
  41df34:	ldr	w0, [x1, #8]
  41df38:	ldr	x3, [x1, #16]
  41df3c:	cbz	x0, 41e0dc <nftw@plt+0x1b55c>
  41df40:	adrp	x7, 46a000 <_obstack_memory_used@@Base+0x205a0>
  41df44:	add	x0, x3, x0
  41df48:	add	x7, x7, #0x248
  41df4c:	mov	w5, #0x0                   	// #0
  41df50:	mov	w2, #0x0                   	// #0
  41df54:	mov	w8, #0x1                   	// #1
  41df58:	b	41df70 <nftw@plt+0x1b3f0>
  41df5c:	cmp	w19, w2
  41df60:	mov	w2, w19
  41df64:	csel	w5, w5, w8, cs  // cs = hs, nlast
  41df68:	cmp	x3, x0
  41df6c:	b.eq	41df8c <nftw@plt+0x1b40c>  // b.none
  41df70:	ldrb	w4, [x3], #1
  41df74:	add	w19, w2, w2, lsl #2
  41df78:	sub	w6, w4, #0x30
  41df7c:	add	w19, w6, w19, lsl #1
  41df80:	ldrh	w4, [x7, w4, sxtw #1]
  41df84:	tbnz	w4, #2, 41df5c <nftw@plt+0x1b3dc>
  41df88:	b	41df00 <nftw@plt+0x1b380>
  41df8c:	ldrb	w0, [x20, #1154]
  41df90:	cbz	w0, 41e010 <nftw@plt+0x1b490>
  41df94:	cmp	w19, #0x0
  41df98:	ccmp	w21, w19, #0x0, ne  // ne = any
  41df9c:	ccmp	w5, #0x0, #0x0, cs  // cs = hs, nlast
  41dfa0:	b.eq	41dfb8 <nftw@plt+0x1b438>  // b.none
  41dfa4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41dfa8:	mov	x0, x20
  41dfac:	add	x2, x2, #0xf00
  41dfb0:	mov	w1, #0x2                   	// #2
  41dfb4:	bl	41f298 <nftw@plt+0x1c718>
  41dfb8:	mov	x0, x20
  41dfbc:	bl	431988 <nftw@plt+0x2ee08>
  41dfc0:	ldrb	w4, [x0, #4]
  41dfc4:	cmp	w4, #0x3e
  41dfc8:	b.eq	41e040 <nftw@plt+0x1b4c0>  // b.none
  41dfcc:	cmp	w4, #0x16
  41dfd0:	b.ne	41e0a4 <nftw@plt+0x1b524>  // b.any
  41dfd4:	mov	x0, x20
  41dfd8:	bl	41cde0 <nftw@plt+0x1a260>
  41dfdc:	mov	w4, w23
  41dfe0:	mov	w3, w19
  41dfe4:	mov	x2, x22
  41dfe8:	mov	x0, x20
  41dfec:	mov	w1, #0x3                   	// #3
  41dff0:	bl	41dac8 <nftw@plt+0x1af48>
  41dff4:	mov	w0, #0x1                   	// #1
  41dff8:	strb	w0, [x24, #116]
  41dffc:	ldp	x19, x20, [sp, #16]
  41e000:	ldp	x21, x22, [sp, #32]
  41e004:	ldp	x23, x24, [sp, #48]
  41e008:	ldp	x29, x30, [sp], #80
  41e00c:	ret
  41e010:	cbz	w5, 41dfb8 <nftw@plt+0x1b438>
  41e014:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e018:	add	x2, x2, #0xf00
  41e01c:	mov	w1, #0x0                   	// #0
  41e020:	mov	x0, x20
  41e024:	bl	41f298 <nftw@plt+0x1c718>
  41e028:	mov	x0, x20
  41e02c:	bl	431988 <nftw@plt+0x2ee08>
  41e030:	ldrb	w4, [x0, #4]
  41e034:	cmp	w4, #0x3e
  41e038:	b.ne	41dfcc <nftw@plt+0x1b44c>  // b.any
  41e03c:	nop
  41e040:	add	x1, x0, #0x8
  41e044:	add	x3, sp, #0x40
  41e048:	mov	x0, x20
  41e04c:	mov	x2, #0x1                   	// #1
  41e050:	str	wzr, [sp, #64]
  41e054:	str	xzr, [sp, #72]
  41e058:	bl	41ab08 <nftw@plt+0x17f88>
  41e05c:	ldr	x3, [sp, #72]
  41e060:	tst	w0, #0xff
  41e064:	mov	w2, #0x0                   	// #0
  41e068:	mov	x0, x20
  41e06c:	csel	x22, x3, x22, ne  // ne = any
  41e070:	mov	w1, #0x1                   	// #1
  41e074:	bl	41c530 <nftw@plt+0x199b0>
  41e078:	b	41dfd4 <nftw@plt+0x1b454>
  41e07c:	mov	x0, x20
  41e080:	mov	w1, #0x3                   	// #3
  41e084:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e088:	add	x2, x2, #0xea8
  41e08c:	bl	41f298 <nftw@plt+0x1c718>
  41e090:	ldp	x19, x20, [sp, #16]
  41e094:	ldp	x21, x22, [sp, #32]
  41e098:	ldp	x23, x24, [sp, #48]
  41e09c:	ldp	x29, x30, [sp], #80
  41e0a0:	ret
  41e0a4:	mov	x1, x0
  41e0a8:	mov	x0, x20
  41e0ac:	bl	428d50 <nftw@plt+0x261d0>
  41e0b0:	mov	x3, x0
  41e0b4:	mov	w1, #0x3                   	// #3
  41e0b8:	mov	x0, x20
  41e0bc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e0c0:	add	x2, x2, #0xe50
  41e0c4:	bl	41f298 <nftw@plt+0x1c718>
  41e0c8:	ldp	x19, x20, [sp, #16]
  41e0cc:	ldp	x21, x22, [sp, #32]
  41e0d0:	ldp	x23, x24, [sp, #48]
  41e0d4:	ldp	x29, x30, [sp], #80
  41e0d8:	ret
  41e0dc:	ldrb	w0, [x20, #1154]
  41e0e0:	mov	w19, #0x0                   	// #0
  41e0e4:	cbnz	w0, 41dfa4 <nftw@plt+0x1b424>
  41e0e8:	b	41dfb8 <nftw@plt+0x1b438>
  41e0ec:	nop
  41e0f0:	cbz	x3, 41e128 <nftw@plt+0x1b5a8>
  41e0f4:	stp	x29, x30, [sp, #-32]!
  41e0f8:	mov	x29, sp
  41e0fc:	stp	x19, x20, [sp, #16]
  41e100:	mov	x19, x3
  41e104:	and	w20, w4, #0xff
  41e108:	mov	w3, #0x0                   	// #0
  41e10c:	bl	41d490 <nftw@plt+0x1a910>
  41e110:	cbz	x0, 41e11c <nftw@plt+0x1b59c>
  41e114:	strb	w20, [x0, #19]
  41e118:	str	x19, [x0, #24]
  41e11c:	ldp	x19, x20, [sp, #16]
  41e120:	ldp	x29, x30, [sp], #32
  41e124:	ret
  41e128:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e12c:	mov	w1, #0x4                   	// #4
  41e130:	add	x2, x2, #0xf20
  41e134:	b	41f298 <nftw@plt+0x1c718>
  41e138:	stp	x29, x30, [sp, #-32]!
  41e13c:	mov	x29, sp
  41e140:	stp	x19, x20, [sp, #16]
  41e144:	mov	w19, w3
  41e148:	and	w20, w4, #0xff
  41e14c:	mov	w3, w5
  41e150:	bl	41d490 <nftw@plt+0x1a910>
  41e154:	cbz	x0, 41e168 <nftw@plt+0x1b5e8>
  41e158:	mov	w1, #0x1                   	// #1
  41e15c:	strb	w1, [x0, #18]
  41e160:	strb	w20, [x0, #19]
  41e164:	str	w19, [x0, #24]
  41e168:	ldp	x19, x20, [sp, #16]
  41e16c:	ldp	x29, x30, [sp], #32
  41e170:	ret
  41e174:	nop
  41e178:	stp	x29, x30, [sp, #-48]!
  41e17c:	mov	x1, #0x0                   	// #0
  41e180:	mov	w3, #0x0                   	// #0
  41e184:	mov	x29, sp
  41e188:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e18c:	add	x2, x2, #0xf48
  41e190:	stp	x19, x20, [sp, #16]
  41e194:	mov	x19, x0
  41e198:	mov	w20, #0x1                   	// #1
  41e19c:	str	x21, [sp, #32]
  41e1a0:	bl	41d490 <nftw@plt+0x1a910>
  41e1a4:	mov	x1, x0
  41e1a8:	adrp	x3, 41c000 <nftw@plt+0x19480>
  41e1ac:	add	x3, x3, #0xab8
  41e1b0:	mov	x0, x19
  41e1b4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e1b8:	add	x2, x2, #0xf50
  41e1bc:	strb	w20, [x1, #17]
  41e1c0:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e1c4:	str	x3, [x1, #24]
  41e1c8:	mov	x1, #0x0                   	// #0
  41e1cc:	mov	w3, #0x0                   	// #0
  41e1d0:	add	x21, x21, #0xf78
  41e1d4:	bl	41d490 <nftw@plt+0x1a910>
  41e1d8:	mov	x1, x0
  41e1dc:	adrp	x4, 41d000 <nftw@plt+0x1a480>
  41e1e0:	add	x4, x4, #0x50
  41e1e4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e1e8:	add	x2, x2, #0xf60
  41e1ec:	strb	w20, [x1, #17]
  41e1f0:	mov	x0, x19
  41e1f4:	str	x4, [x1, #24]
  41e1f8:	mov	w3, #0x0                   	// #0
  41e1fc:	mov	x1, #0x0                   	// #0
  41e200:	bl	41d490 <nftw@plt+0x1a910>
  41e204:	mov	x2, x0
  41e208:	adrp	x3, 41e000 <nftw@plt+0x1b480>
  41e20c:	add	x3, x3, #0x6a0
  41e210:	mov	x1, x21
  41e214:	mov	x0, x19
  41e218:	strb	w20, [x2, #17]
  41e21c:	str	x3, [x2, #24]
  41e220:	mov	w3, #0x0                   	// #0
  41e224:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e228:	add	x2, x2, #0xf70
  41e22c:	bl	41d490 <nftw@plt+0x1a910>
  41e230:	mov	x3, x0
  41e234:	adrp	x4, 41b000 <nftw@plt+0x18480>
  41e238:	add	x4, x4, #0x668
  41e23c:	mov	x1, x21
  41e240:	mov	x0, x19
  41e244:	strb	w20, [x3, #17]
  41e248:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e24c:	str	x4, [x3, #24]
  41e250:	mov	w3, #0x0                   	// #0
  41e254:	add	x2, x2, #0xf80
  41e258:	bl	41d490 <nftw@plt+0x1a910>
  41e25c:	mov	x3, x0
  41e260:	adrp	x4, 41d000 <nftw@plt+0x1a480>
  41e264:	add	x4, x4, #0x430
  41e268:	mov	x1, x21
  41e26c:	mov	x0, x19
  41e270:	strb	w20, [x3, #17]
  41e274:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e278:	str	x4, [x3, #24]
  41e27c:	mov	w3, #0x0                   	// #0
  41e280:	add	x2, x2, #0xf90
  41e284:	bl	41d490 <nftw@plt+0x1a910>
  41e288:	mov	x3, x0
  41e28c:	adrp	x4, 41c000 <nftw@plt+0x19480>
  41e290:	add	x4, x4, #0x920
  41e294:	mov	x1, x21
  41e298:	mov	x0, x19
  41e29c:	strb	w20, [x3, #17]
  41e2a0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x115a0>
  41e2a4:	str	x4, [x3, #24]
  41e2a8:	mov	w3, #0x0                   	// #0
  41e2ac:	add	x2, x2, #0xfd0
  41e2b0:	bl	41d490 <nftw@plt+0x1a910>
  41e2b4:	mov	x3, x0
  41e2b8:	adrp	x4, 41b000 <nftw@plt+0x18480>
  41e2bc:	add	x4, x4, #0xb20
  41e2c0:	mov	x1, x21
  41e2c4:	mov	x0, x19
  41e2c8:	strb	w20, [x3, #17]
  41e2cc:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x205a0>
  41e2d0:	str	x4, [x3, #24]
  41e2d4:	add	x2, x2, #0x5a8
  41e2d8:	mov	w3, #0x0                   	// #0
  41e2dc:	bl	41d490 <nftw@plt+0x1a910>
  41e2e0:	strb	w20, [x0, #17]
  41e2e4:	adrp	x1, 41b000 <nftw@plt+0x18480>
  41e2e8:	add	x1, x1, #0xb18
  41e2ec:	ldp	x19, x20, [sp, #16]
  41e2f0:	ldr	x21, [sp, #32]
  41e2f4:	str	x1, [x0, #24]
  41e2f8:	ldp	x29, x30, [sp], #48
  41e2fc:	ret
  41e300:	stp	x29, x30, [sp, #-32]!
  41e304:	mov	x29, sp
  41e308:	stp	x19, x20, [sp, #16]
  41e30c:	mov	x20, x0
  41e310:	ldr	x0, [x0, #896]
  41e314:	bl	41b438 <nftw@plt+0x188b8>
  41e318:	sbfiz	x0, x0, #3, #32
  41e31c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41e320:	mov	x19, x0
  41e324:	mov	x1, x0
  41e328:	ldr	x0, [x20, #896]
  41e32c:	bl	41c3c8 <nftw@plt+0x19848>
  41e330:	mov	x0, x19
  41e334:	ldp	x19, x20, [sp, #16]
  41e338:	ldp	x29, x30, [sp], #32
  41e33c:	ret
  41e340:	stp	x29, x30, [sp, #-32]!
  41e344:	mov	x2, x1
  41e348:	mov	x29, sp
  41e34c:	str	x19, [sp, #16]
  41e350:	mov	x19, x1
  41e354:	ldr	x1, [x0, #896]
  41e358:	bl	41c340 <nftw@plt+0x197c0>
  41e35c:	mov	x0, x19
  41e360:	ldr	x19, [sp, #16]
  41e364:	ldp	x29, x30, [sp], #32
  41e368:	b	402910 <free@plt>
  41e36c:	nop
  41e370:	stp	x29, x30, [sp, #-64]!
  41e374:	mov	x29, sp
  41e378:	stp	x19, x20, [sp, #16]
  41e37c:	mov	x20, x1
  41e380:	add	x2, sp, #0x38
  41e384:	mov	w1, #0x4                   	// #4
  41e388:	str	x21, [sp, #32]
  41e38c:	mov	x21, x0
  41e390:	bl	41b738 <nftw@plt+0x18bb8>
  41e394:	str	wzr, [x20]
  41e398:	mov	x19, x0
  41e39c:	cbz	x0, 41e3e0 <nftw@plt+0x1b860>
  41e3a0:	ldr	x1, [x0, #24]
  41e3a4:	cbz	x1, 41e3c8 <nftw@plt+0x1b848>
  41e3a8:	ldr	x1, [sp, #56]
  41e3ac:	mov	w2, #0x1                   	// #1
  41e3b0:	cbz	x1, 41e3c4 <nftw@plt+0x1b844>
  41e3b4:	bl	41b9c0 <nftw@plt+0x18e40>
  41e3b8:	ldr	x0, [x0]
  41e3bc:	cmp	x0, #0x0
  41e3c0:	cset	w2, ne  // ne = any
  41e3c4:	str	w2, [x20]
  41e3c8:	cmp	x19, #0x0
  41e3cc:	cset	w0, eq  // eq = none
  41e3d0:	ldp	x19, x20, [sp, #16]
  41e3d4:	ldr	x21, [sp, #32]
  41e3d8:	ldp	x29, x30, [sp], #64
  41e3dc:	ret
  41e3e0:	ldr	x0, [x21, #448]
  41e3e4:	ldurb	w0, [x0, #-20]
  41e3e8:	cmp	w0, #0x16
  41e3ec:	b.ne	41e3c8 <nftw@plt+0x1b848>  // b.any
  41e3f0:	mov	x0, x21
  41e3f4:	mov	w1, #0x1                   	// #1
  41e3f8:	bl	42e590 <nftw@plt+0x2ba10>
  41e3fc:	b	41e3c8 <nftw@plt+0x1b848>
  41e400:	add	x0, x0, #0x458
  41e404:	ret
  41e408:	add	x0, x0, #0x388
  41e40c:	ret
  41e410:	stp	x29, x30, [sp, #-16]!
  41e414:	mov	x2, #0xb8                  	// #184
  41e418:	add	x0, x0, #0x388
  41e41c:	mov	x29, sp
  41e420:	bl	402490 <memcpy@plt>
  41e424:	ldp	x29, x30, [sp], #16
  41e428:	ret
  41e42c:	nop
  41e430:	stp	x29, x30, [sp, #-32]!
  41e434:	mov	x29, sp
  41e438:	str	x19, [sp, #16]
  41e43c:	mov	x19, x0
  41e440:	ldr	x0, [x0, #712]
  41e444:	cbz	x0, 41e454 <nftw@plt+0x1b8d4>
  41e448:	ldr	x19, [sp, #16]
  41e44c:	ldp	x29, x30, [sp], #32
  41e450:	ret
  41e454:	bl	432068 <nftw@plt+0x2f4e8>
  41e458:	str	x0, [x19, #712]
  41e45c:	ldr	x19, [sp, #16]
  41e460:	ldp	x29, x30, [sp], #32
  41e464:	ret
  41e468:	stp	x29, x30, [sp, #-64]!
  41e46c:	mov	x29, sp
  41e470:	stp	x19, x20, [sp, #16]
  41e474:	add	x20, x0, #0x328
  41e478:	mov	w19, w3
  41e47c:	stp	x21, x22, [sp, #32]
  41e480:	mov	x22, x2
  41e484:	mov	x21, x0
  41e488:	ldp	x3, x2, [x20, #24]
  41e48c:	str	x23, [sp, #48]
  41e490:	mov	x23, x1
  41e494:	sub	x0, x2, x3
  41e498:	cmp	x0, #0xc7
  41e49c:	b.ls	41e55c <nftw@plt+0x1b9dc>  // b.plast
  41e4a0:	ldr	x0, [x20, #16]
  41e4a4:	add	x3, x3, #0xc8
  41e4a8:	cmp	x3, x0
  41e4ac:	b.eq	41e57c <nftw@plt+0x1b9fc>  // b.none
  41e4b0:	ldr	x4, [x20, #48]
  41e4b4:	ldr	x1, [x20, #8]
  41e4b8:	add	x3, x3, x4
  41e4bc:	bic	x3, x3, x4
  41e4c0:	str	x3, [x20, #24]
  41e4c4:	sub	x4, x3, x1
  41e4c8:	sub	x1, x2, x1
  41e4cc:	cmp	x4, x1
  41e4d0:	b.ls	41e4dc <nftw@plt+0x1b95c>  // b.plast
  41e4d4:	mov	x3, x2
  41e4d8:	str	x2, [x20, #24]
  41e4dc:	str	x3, [x20, #16]
  41e4e0:	and	w19, w19, #0x1
  41e4e4:	stp	xzr, xzr, [x0, #96]
  41e4e8:	mov	w2, #0xfffffd00            	// #-768
  41e4ec:	ubfiz	w19, w19, #9, #7
  41e4f0:	ldrh	w1, [x0, #104]
  41e4f4:	orr	w19, w19, #0x1
  41e4f8:	stp	xzr, xzr, [x0]
  41e4fc:	add	x22, x23, x22
  41e500:	and	w1, w1, w2
  41e504:	stp	xzr, xzr, [x0, #32]
  41e508:	orr	w19, w19, w1
  41e50c:	stp	xzr, xzr, [x0, #48]
  41e510:	stp	xzr, xzr, [x0, #64]
  41e514:	stp	xzr, xzr, [x0, #80]
  41e518:	stp	xzr, xzr, [x0, #112]
  41e51c:	stp	xzr, xzr, [x0, #128]
  41e520:	stp	xzr, xzr, [x0, #144]
  41e524:	stp	xzr, xzr, [x0, #160]
  41e528:	stp	xzr, xzr, [x0, #176]
  41e52c:	str	xzr, [x0, #192]
  41e530:	str	x23, [x0, #16]
  41e534:	ldr	x1, [x21]
  41e538:	strh	w19, [x0, #104]
  41e53c:	ldp	x19, x20, [sp, #16]
  41e540:	stp	x23, x22, [x0, #24]
  41e544:	str	x1, [x0, #72]
  41e548:	ldr	x23, [sp, #48]
  41e54c:	str	x0, [x21]
  41e550:	ldp	x21, x22, [sp, #32]
  41e554:	ldp	x29, x30, [sp], #64
  41e558:	ret
  41e55c:	mov	x0, x20
  41e560:	mov	x1, #0xc8                  	// #200
  41e564:	bl	449870 <_obstack_newchunk@@Base>
  41e568:	ldp	x3, x2, [x20, #24]
  41e56c:	ldr	x0, [x20, #16]
  41e570:	add	x3, x3, #0xc8
  41e574:	cmp	x3, x0
  41e578:	b.ne	41e4b0 <nftw@plt+0x1b930>  // b.any
  41e57c:	ldrb	w1, [x20, #80]
  41e580:	orr	w1, w1, #0x2
  41e584:	strb	w1, [x20, #80]
  41e588:	b	41e4b0 <nftw@plt+0x1b930>
  41e58c:	nop
  41e590:	stp	x29, x30, [sp, #-64]!
  41e594:	mov	x29, sp
  41e598:	stp	x23, x24, [sp, #48]
  41e59c:	ldr	x23, [x0]
  41e5a0:	stp	x19, x20, [sp, #16]
  41e5a4:	mov	x20, x0
  41e5a8:	ldr	x19, [x23, #96]
  41e5ac:	ldr	x24, [x23, #80]
  41e5b0:	cbz	x19, 41e5fc <nftw@plt+0x1ba7c>
  41e5b4:	stp	x21, x22, [sp, #32]
  41e5b8:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41e5bc:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e5c0:	add	x22, x22, #0xe0
  41e5c4:	add	x21, x21, #0xfa0
  41e5c8:	ldrsw	x5, [x19, #28]
  41e5cc:	mov	x4, x21
  41e5d0:	ldr	w2, [x19, #8]
  41e5d4:	mov	x0, x20
  41e5d8:	mov	w3, #0x0                   	// #0
  41e5dc:	mov	w1, #0x3                   	// #3
  41e5e0:	add	x5, x5, x5, lsl #1
  41e5e4:	add	x5, x22, x5, lsl #3
  41e5e8:	ldr	x5, [x5, #8]
  41e5ec:	bl	41f458 <nftw@plt+0x1c8d8>
  41e5f0:	ldr	x19, [x19]
  41e5f4:	cbnz	x19, 41e5c8 <nftw@plt+0x1ba48>
  41e5f8:	ldp	x21, x22, [sp, #32]
  41e5fc:	strb	wzr, [x20, #18]
  41e600:	ldp	x19, x0, [x23, #40]
  41e604:	ldr	x1, [x23, #72]
  41e608:	str	x1, [x20]
  41e60c:	bl	402910 <free@plt>
  41e610:	ldr	x1, [x20, #816]
  41e614:	add	x0, x20, #0x328
  41e618:	cmp	x1, x23
  41e61c:	b.cs	41e668 <nftw@plt+0x1bae8>  // b.hs, b.nlast
  41e620:	ldr	x1, [x0, #32]
  41e624:	cmp	x1, x23
  41e628:	b.ls	41e668 <nftw@plt+0x1bae8>  // b.plast
  41e62c:	stp	x23, x23, [x0, #16]
  41e630:	cbz	x24, 41e674 <nftw@plt+0x1baf4>
  41e634:	mov	x2, x19
  41e638:	mov	x1, x24
  41e63c:	mov	x0, x20
  41e640:	bl	4257d8 <nftw@plt+0x22c58>
  41e644:	mov	x0, x20
  41e648:	mov	w4, #0x0                   	// #0
  41e64c:	ldp	x19, x20, [sp, #16]
  41e650:	mov	w3, #0x0                   	// #0
  41e654:	ldp	x23, x24, [sp, #48]
  41e658:	mov	x2, #0x0                   	// #0
  41e65c:	ldp	x29, x30, [sp], #64
  41e660:	mov	w1, #0x1                   	// #1
  41e664:	b	41dac8 <nftw@plt+0x1af48>
  41e668:	mov	x1, x23
  41e66c:	bl	4499d0 <_obstack_free@@Base>
  41e670:	cbnz	x24, 41e634 <nftw@plt+0x1bab4>
  41e674:	cbz	x19, 41e68c <nftw@plt+0x1bb0c>
  41e678:	mov	x0, x19
  41e67c:	ldp	x19, x20, [sp, #16]
  41e680:	ldp	x23, x24, [sp, #48]
  41e684:	ldp	x29, x30, [sp], #64
  41e688:	b	402910 <free@plt>
  41e68c:	ldp	x19, x20, [sp, #16]
  41e690:	ldp	x23, x24, [sp, #48]
  41e694:	ldp	x29, x30, [sp], #64
  41e698:	ret
  41e69c:	nop
  41e6a0:	stp	x29, x30, [sp, #-64]!
  41e6a4:	mov	x29, sp
  41e6a8:	stp	x19, x20, [sp, #16]
  41e6ac:	stp	x21, x22, [sp, #32]
  41e6b0:	mov	x22, x0
  41e6b4:	stp	x23, x24, [sp, #48]
  41e6b8:	ldr	x19, [x0, #1400]
  41e6bc:	bl	41c430 <nftw@plt+0x198b0>
  41e6c0:	cbz	x0, 41e914 <nftw@plt+0x1bd94>
  41e6c4:	ldr	x1, [x0, #16]
  41e6c8:	ldr	w0, [x0, #8]
  41e6cc:	ldrb	w3, [x1]
  41e6d0:	add	w2, w0, #0x2
  41e6d4:	add	x2, x2, #0xf
  41e6d8:	mov	w0, w0
  41e6dc:	cmp	w3, #0x4c
  41e6e0:	and	x2, x2, #0x1fffffff0
  41e6e4:	cset	x3, eq  // eq = none
  41e6e8:	sub	x0, x0, #0x1
  41e6ec:	add	x3, x3, #0x1
  41e6f0:	sub	sp, sp, x2
  41e6f4:	add	x0, x1, x0
  41e6f8:	mov	x23, sp
  41e6fc:	add	x1, x1, x3
  41e700:	mov	x4, x23
  41e704:	cmp	x1, x0
  41e708:	b.cs	41e730 <nftw@plt+0x1bbb0>  // b.hs, b.nlast
  41e70c:	nop
  41e710:	mov	x2, x1
  41e714:	ldrb	w3, [x2], #1
  41e718:	cmp	w3, #0x5c
  41e71c:	b.eq	41e814 <nftw@plt+0x1bc94>  // b.none
  41e720:	mov	x1, x2
  41e724:	strb	w3, [x4], #1
  41e728:	cmp	x0, x1
  41e72c:	b.hi	41e710 <nftw@plt+0x1bb90>  // b.pmore
  41e730:	strb	wzr, [x4]
  41e734:	mov	w2, #0x0                   	// #0
  41e738:	mov	w1, #0x0                   	// #0
  41e73c:	mov	x0, x22
  41e740:	bl	41c530 <nftw@plt+0x199b0>
  41e744:	mov	x0, x22
  41e748:	bl	41cde0 <nftw@plt+0x1a260>
  41e74c:	cbz	x19, 41e7fc <nftw@plt+0x1bc7c>
  41e750:	mov	x24, #0x0                   	// #0
  41e754:	b	41e760 <nftw@plt+0x1bbe0>
  41e758:	mov	x24, x20
  41e75c:	cbz	x19, 41e7fc <nftw@plt+0x1bc7c>
  41e760:	ldr	x21, [x19, #8]
  41e764:	mov	x1, x23
  41e768:	mov	x20, x19
  41e76c:	mov	x0, x21
  41e770:	bl	402890 <strcmp@plt>
  41e774:	ldr	x19, [x19]
  41e778:	cbnz	w0, 41e758 <nftw@plt+0x1bbd8>
  41e77c:	cbz	x24, 41e90c <nftw@plt+0x1bd8c>
  41e780:	str	x19, [x24]
  41e784:	mov	x1, x21
  41e788:	mov	x0, x22
  41e78c:	bl	426e18 <nftw@plt+0x24298>
  41e790:	mov	x19, x0
  41e794:	cbz	x0, 41e950 <nftw@plt+0x1bdd0>
  41e798:	ldr	x1, [x22, #1024]
  41e79c:	cbz	x1, 41e7a8 <nftw@plt+0x1bc28>
  41e7a0:	mov	x0, x22
  41e7a4:	blr	x1
  41e7a8:	ldrb	w0, [x19, #18]
  41e7ac:	tbz	w0, #1, 41e7d8 <nftw@plt+0x1bc58>
  41e7b0:	ldr	x3, [x22, #944]
  41e7b4:	cbz	x3, 41e7c8 <nftw@plt+0x1bc48>
  41e7b8:	ldr	w1, [x22, #48]
  41e7bc:	mov	x2, x19
  41e7c0:	mov	x0, x22
  41e7c4:	blr	x3
  41e7c8:	ldrb	w0, [x22, #1151]
  41e7cc:	cbnz	w0, 41e958 <nftw@plt+0x1bdd8>
  41e7d0:	mov	x0, x19
  41e7d4:	bl	42e890 <nftw@plt+0x2bd10>
  41e7d8:	ldrb	w0, [x20, #28]
  41e7dc:	ldr	x19, [x20, #16]
  41e7e0:	tbz	w0, #2, 41e830 <nftw@plt+0x1bcb0>
  41e7e4:	mov	x0, x19
  41e7e8:	bl	402910 <free@plt>
  41e7ec:	ldr	x0, [x20, #8]
  41e7f0:	bl	402910 <free@plt>
  41e7f4:	mov	x0, x20
  41e7f8:	bl	402910 <free@plt>
  41e7fc:	mov	sp, x29
  41e800:	ldp	x19, x20, [sp, #16]
  41e804:	ldp	x21, x22, [sp, #32]
  41e808:	ldp	x23, x24, [sp, #48]
  41e80c:	ldp	x29, x30, [sp], #64
  41e810:	ret
  41e814:	ldrb	w5, [x1, #1]
  41e818:	cmp	w5, #0x22
  41e81c:	ccmp	w5, w3, #0x4, ne  // ne = any
  41e820:	b.ne	41e720 <nftw@plt+0x1bba0>  // b.any
  41e824:	add	x1, x1, #0x2
  41e828:	mov	w3, w5
  41e82c:	b	41e724 <nftw@plt+0x1bba4>
  41e830:	mov	x0, x19
  41e834:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e838:	add	x1, x1, #0xfe0
  41e83c:	bl	402a70 <strcspn@plt>
  41e840:	mov	x23, x0
  41e844:	mov	x1, x19
  41e848:	mov	x0, x22
  41e84c:	sxtw	x23, w23
  41e850:	mov	w2, w23
  41e854:	bl	425de0 <nftw@plt+0x23260>
  41e858:	ldr	x19, [x20, #16]
  41e85c:	mov	w1, #0xa                   	// #10
  41e860:	mov	x21, x0
  41e864:	add	x19, x19, x23
  41e868:	mov	x0, x19
  41e86c:	bl	402940 <strchr@plt>
  41e870:	mov	x1, x19
  41e874:	sub	x2, x0, x19
  41e878:	mov	w3, #0x1                   	// #1
  41e87c:	mov	x0, x22
  41e880:	bl	41e468 <nftw@plt+0x1b8e8>
  41e884:	mov	x19, x0
  41e888:	cbz	x0, 41e96c <nftw@plt+0x1bdec>
  41e88c:	mov	x0, x22
  41e890:	bl	426458 <nftw@plt+0x238d8>
  41e894:	mov	w0, #0x1                   	// #1
  41e898:	strb	w0, [x19, #106]
  41e89c:	mov	x1, x21
  41e8a0:	mov	x0, x22
  41e8a4:	bl	42ea90 <nftw@plt+0x2bf10>
  41e8a8:	tst	w0, #0xff
  41e8ac:	b.eq	41e984 <nftw@plt+0x1be04>  // b.none
  41e8b0:	mov	x0, x22
  41e8b4:	bl	41e590 <nftw@plt+0x1ba10>
  41e8b8:	ldrb	w1, [x20, #28]
  41e8bc:	ldr	x2, [x21, #24]
  41e8c0:	ubfx	x0, x1, #1, #1
  41e8c4:	ubfx	x1, x1, #0, #1
  41e8c8:	ldr	w4, [x20, #24]
  41e8cc:	ldrb	w3, [x2, #19]
  41e8d0:	ubfiz	w1, w1, #4, #4
  41e8d4:	ubfiz	w0, w0, #5, #3
  41e8d8:	orr	w0, w0, w1
  41e8dc:	and	w3, w3, #0xffffffcf
  41e8e0:	ldr	x19, [x20, #16]
  41e8e4:	orr	w0, w0, w3
  41e8e8:	str	w4, [x2, #8]
  41e8ec:	strb	w0, [x2, #19]
  41e8f0:	mov	x0, x19
  41e8f4:	bl	402910 <free@plt>
  41e8f8:	ldr	x0, [x20, #8]
  41e8fc:	bl	402910 <free@plt>
  41e900:	mov	x0, x20
  41e904:	bl	402910 <free@plt>
  41e908:	b	41e7fc <nftw@plt+0x1bc7c>
  41e90c:	str	x19, [x22, #1400]
  41e910:	b	41e784 <nftw@plt+0x1bc04>
  41e914:	ldr	x2, [x22, #448]
  41e918:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e91c:	add	x4, x4, #0xfb8
  41e920:	mov	w3, #0x0                   	// #0
  41e924:	mov	x0, x22
  41e928:	mov	w1, #0x3                   	// #3
  41e92c:	ldur	w2, [x2, #-24]
  41e930:	bl	41f458 <nftw@plt+0x1c8d8>
  41e934:	mov	w2, #0x0                   	// #0
  41e938:	mov	w1, #0x0                   	// #0
  41e93c:	mov	x0, x22
  41e940:	bl	41c530 <nftw@plt+0x199b0>
  41e944:	mov	x0, x22
  41e948:	bl	41cde0 <nftw@plt+0x1a260>
  41e94c:	b	41e7fc <nftw@plt+0x1bc7c>
  41e950:	ldr	x19, [x20, #16]
  41e954:	b	41e7e4 <nftw@plt+0x1bc64>
  41e958:	mov	x1, x19
  41e95c:	mov	x0, x22
  41e960:	mov	x2, #0x0                   	// #0
  41e964:	bl	42dad8 <nftw@plt+0x2af58>
  41e968:	b	41e7d0 <nftw@plt+0x1bc50>
  41e96c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e970:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41e974:	add	x2, x2, #0xfe8
  41e978:	add	x0, x0, #0x0
  41e97c:	mov	w1, #0x9ac                 	// #2476
  41e980:	bl	402bf0 <nftw@plt+0x70>
  41e984:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x195a0>
  41e988:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41e98c:	add	x2, x2, #0xfe8
  41e990:	add	x0, x0, #0x0
  41e994:	mov	w1, #0x9a8                 	// #2472
  41e998:	bl	402bf0 <nftw@plt+0x70>
  41e99c:	nop
  41e9a0:	stp	x29, x30, [sp, #-96]!
  41e9a4:	sub	w5, w1, #0x1
  41e9a8:	mov	w4, w1
  41e9ac:	mov	x29, sp
  41e9b0:	ldr	x1, [x2]
  41e9b4:	stp	x19, x20, [sp, #16]
  41e9b8:	add	x2, x5, #0xf
  41e9bc:	stp	x21, x22, [sp, #32]
  41e9c0:	mov	x19, x0
  41e9c4:	and	x2, x2, #0x1fffffff0
  41e9c8:	stp	x23, x24, [sp, #48]
  41e9cc:	sub	x4, x4, #0x1
  41e9d0:	add	x4, x1, x4
  41e9d4:	stp	x25, x26, [sp, #64]
  41e9d8:	mov	w20, w3
  41e9dc:	stp	x27, x28, [sp, #80]
  41e9e0:	sub	sp, sp, x2
  41e9e4:	mov	x21, sp
  41e9e8:	ldrb	w5, [x1]
  41e9ec:	cmp	w5, #0x4c
  41e9f0:	mov	x5, x21
  41e9f4:	cset	x0, eq  // eq = none
  41e9f8:	add	x0, x0, #0x1
  41e9fc:	add	x1, x1, x0
  41ea00:	cmp	x1, x4
  41ea04:	b.cs	41ec14 <nftw@plt+0x1c094>  // b.hs, b.nlast
  41ea08:	mov	x0, x1
  41ea0c:	ldrb	w2, [x0], #1
  41ea10:	cmp	w2, #0x5c
  41ea14:	b.eq	41eb68 <nftw@plt+0x1bfe8>  // b.none
  41ea18:	mov	x1, x0
  41ea1c:	strb	w2, [x5], #1
  41ea20:	cmp	x4, x1
  41ea24:	b.hi	41ea08 <nftw@plt+0x1be88>  // b.pmore
  41ea28:	sub	x25, x5, x21
  41ea2c:	mov	w3, #0xa                   	// #10
  41ea30:	strb	w3, [x5]
  41ea34:	mov	x1, #0x38                  	// #56
  41ea38:	mov	x0, #0x1                   	// #1
  41ea3c:	ldr	x24, [x19, #136]
  41ea40:	ldr	x23, [x19, #448]
  41ea44:	ldr	x22, [x19, #488]
  41ea48:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  41ea4c:	str	x0, [x19, #136]
  41ea50:	mov	x1, x21
  41ea54:	mov	x2, x25
  41ea58:	mov	x0, x19
  41ea5c:	mov	w3, #0x1                   	// #1
  41ea60:	bl	41e468 <nftw@plt+0x1b8e8>
  41ea64:	ldr	x0, [x19]
  41ea68:	ldr	x1, [x0, #72]
  41ea6c:	cbz	x1, 41ea78 <nftw@plt+0x1bef8>
  41ea70:	ldr	x1, [x1, #80]
  41ea74:	str	x1, [x0, #80]
  41ea78:	ldr	x1, [x19, #40]
  41ea7c:	mov	w0, #0x1                   	// #1
  41ea80:	strb	w0, [x19, #16]
  41ea84:	mov	w2, #0x53                  	// #83
  41ea88:	strb	wzr, [x19, #21]
  41ea8c:	mov	x0, x19
  41ea90:	strb	w2, [x19, #156]
  41ea94:	ldr	w1, [x1, #60]
  41ea98:	str	w1, [x19, #48]
  41ea9c:	bl	426458 <nftw@plt+0x238d8>
  41eaa0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41eaa4:	add	x1, x1, #0xe0
  41eaa8:	add	x1, x1, #0x108
  41eaac:	mov	x0, x19
  41eab0:	ldr	x21, [x19, #144]
  41eab4:	str	x1, [x19, #144]
  41eab8:	bl	41bd50 <nftw@plt+0x191d0>
  41eabc:	mov	x0, x19
  41eac0:	mov	w1, #0x1                   	// #1
  41eac4:	bl	41cfb0 <nftw@plt+0x1a430>
  41eac8:	str	x21, [x19, #144]
  41eacc:	ldrb	w0, [x19, #156]
  41ead0:	cmp	w0, #0x51
  41ead4:	b.eq	41eb84 <nftw@plt+0x1c004>  // b.none
  41ead8:	mov	x0, #0x18                  	// #24
  41eadc:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41eae0:	mov	x26, x0
  41eae4:	mov	w28, #0x1                   	// #1
  41eae8:	ldp	x0, x1, [x19, #152]
  41eaec:	ldr	x3, [x19, #904]
  41eaf0:	stp	x0, x1, [x26]
  41eaf4:	ldr	x0, [x19, #168]
  41eaf8:	str	x0, [x26, #16]
  41eafc:	cbz	x3, 41eb10 <nftw@plt+0x1bf90>
  41eb00:	ldr	x1, [x19, #448]
  41eb04:	mov	x0, x19
  41eb08:	mov	w2, #0x0                   	// #0
  41eb0c:	blr	x3
  41eb10:	ldr	x1, [x19]
  41eb14:	mov	x0, x19
  41eb18:	str	xzr, [x1, #80]
  41eb1c:	bl	41e590 <nftw@plt+0x1ba10>
  41eb20:	ldr	x0, [x19, #136]
  41eb24:	bl	402910 <free@plt>
  41eb28:	str	x24, [x19, #136]
  41eb2c:	str	x23, [x19, #448]
  41eb30:	mov	w3, w28
  41eb34:	str	x22, [x19, #488]
  41eb38:	mov	x2, x26
  41eb3c:	mov	x0, x19
  41eb40:	mov	x1, #0x0                   	// #0
  41eb44:	bl	42e138 <nftw@plt+0x2b5b8>
  41eb48:	mov	sp, x29
  41eb4c:	ldp	x19, x20, [sp, #16]
  41eb50:	ldp	x21, x22, [sp, #32]
  41eb54:	ldp	x23, x24, [sp, #48]
  41eb58:	ldp	x25, x26, [sp, #64]
  41eb5c:	ldp	x27, x28, [sp, #80]
  41eb60:	ldp	x29, x30, [sp], #96
  41eb64:	ret
  41eb68:	ldrb	w3, [x1, #1]
  41eb6c:	add	x1, x1, #0x2
  41eb70:	cmp	w3, #0x22
  41eb74:	ccmp	w3, w2, #0x4, ne  // ne = any
  41eb78:	b.ne	41ea18 <nftw@plt+0x1be98>  // b.any
  41eb7c:	mov	w2, w3
  41eb80:	b	41ea1c <nftw@plt+0x1be9c>
  41eb84:	mov	x0, #0x4b0                 	// #1200
  41eb88:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  41eb8c:	mov	x26, x0
  41eb90:	mov	x27, #0x18                  	// #24
  41eb94:	mov	w25, w27
  41eb98:	mov	w28, #0x1                   	// #1
  41eb9c:	ldp	x0, x1, [x19, #152]
  41eba0:	mov	w21, #0x32                  	// #50
  41eba4:	ldr	x2, [x19, #168]
  41eba8:	stp	x0, x1, [x26]
  41ebac:	str	x2, [x26, #16]
  41ebb0:	mov	x0, x19
  41ebb4:	bl	431988 <nftw@plt+0x2ee08>
  41ebb8:	add	x1, x26, x27
  41ebbc:	add	w28, w28, #0x1
  41ebc0:	ldp	x2, x3, [x0]
  41ebc4:	stp	x2, x3, [x1]
  41ebc8:	ldr	x0, [x0, #16]
  41ebcc:	str	x0, [x1, #16]
  41ebd0:	ldrh	w0, [x1, #6]
  41ebd4:	ldrb	w2, [x1, #4]
  41ebd8:	str	w20, [x26, x27]
  41ebdc:	orr	w0, w0, #0x400
  41ebe0:	strh	w0, [x1, #6]
  41ebe4:	cmp	w2, #0x52
  41ebe8:	add	x27, x27, #0x18
  41ebec:	b.eq	41eb10 <nftw@plt+0x1bf90>  // b.none
  41ebf0:	cmp	w28, w21
  41ebf4:	b.ne	41ebb0 <nftw@plt+0x1c030>  // b.any
  41ebf8:	add	w21, w28, w28, lsl #1
  41ebfc:	mov	x0, x26
  41ec00:	asr	w21, w21, #1
  41ec04:	smull	x1, w21, w25
  41ec08:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  41ec0c:	mov	x26, x0
  41ec10:	b	41ebb0 <nftw@plt+0x1c030>
  41ec14:	mov	x25, #0x0                   	// #0
  41ec18:	b	41ea2c <nftw@plt+0x1beac>
  41ec1c:	nop
  41ec20:	stp	x29, x30, [sp, #-32]!
  41ec24:	mov	x29, sp
  41ec28:	stp	x19, x20, [sp, #16]
  41ec2c:	mov	x19, x0
  41ec30:	mov	w20, w1
  41ec34:	bl	41c430 <nftw@plt+0x198b0>
  41ec38:	mov	w1, #0x53                  	// #83
  41ec3c:	strb	w1, [x19, #156]
  41ec40:	cbz	x0, 41ec6c <nftw@plt+0x1c0ec>
  41ec44:	mov	x2, x0
  41ec48:	mov	w3, w20
  41ec4c:	mov	x0, x19
  41ec50:	add	x2, x2, #0x10
  41ec54:	ldur	w1, [x2, #-8]
  41ec58:	bl	41e9a0 <nftw@plt+0x1be20>
  41ec5c:	mov	w0, #0x1                   	// #1
  41ec60:	ldp	x19, x20, [sp, #16]
  41ec64:	ldp	x29, x30, [sp], #32
  41ec68:	ret
  41ec6c:	mov	x0, x19
  41ec70:	mov	w1, #0x3                   	// #3
  41ec74:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41ec78:	add	x2, x2, #0x20
  41ec7c:	bl	41f298 <nftw@plt+0x1c718>
  41ec80:	mov	w0, #0x0                   	// #0
  41ec84:	ldp	x19, x20, [sp, #16]
  41ec88:	ldp	x29, x30, [sp], #32
  41ec8c:	ret
  41ec90:	stp	x29, x30, [sp, #-32]!
  41ec94:	mov	x29, sp
  41ec98:	stp	x19, x20, [sp, #16]
  41ec9c:	mov	x19, x0
  41eca0:	mov	w20, w1
  41eca4:	mov	x1, x2
  41eca8:	mov	x2, x3
  41ecac:	mov	w3, #0x1                   	// #1
  41ecb0:	bl	41e468 <nftw@plt+0x1b8e8>
  41ecb4:	ldr	x1, [x19, #40]
  41ecb8:	mov	w0, #0x1                   	// #1
  41ecbc:	strb	w0, [x19, #16]
  41ecc0:	mov	w2, #0x53                  	// #83
  41ecc4:	strb	wzr, [x19, #21]
  41ecc8:	mov	x0, x19
  41eccc:	strb	w2, [x19, #156]
  41ecd0:	ldr	w1, [x1, #60]
  41ecd4:	str	w1, [x19, #48]
  41ecd8:	bl	426458 <nftw@plt+0x238d8>
  41ecdc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41ece0:	add	x1, x1, #0xe0
  41ece4:	mov	w2, #0x18                  	// #24
  41ece8:	ldrb	w0, [x19, #1160]
  41ecec:	smaddl	x1, w20, w2, x1
  41ecf0:	str	x1, [x19, #144]
  41ecf4:	cbnz	w0, 41ed20 <nftw@plt+0x1c1a0>
  41ecf8:	ldr	x1, [x1]
  41ecfc:	mov	x0, x19
  41ed00:	blr	x1
  41ed04:	mov	x0, x19
  41ed08:	mov	w1, #0x1                   	// #1
  41ed0c:	bl	41cfb0 <nftw@plt+0x1a430>
  41ed10:	mov	x0, x19
  41ed14:	ldp	x19, x20, [sp, #16]
  41ed18:	ldp	x29, x30, [sp], #32
  41ed1c:	b	41e590 <nftw@plt+0x1ba10>
  41ed20:	mov	x0, x19
  41ed24:	bl	41c228 <nftw@plt+0x196a8>
  41ed28:	ldr	x1, [x19, #144]
  41ed2c:	b	41ecf8 <nftw@plt+0x1c178>
  41ed30:	stp	x29, x30, [sp, #-48]!
  41ed34:	mov	x29, sp
  41ed38:	stp	x19, x20, [sp, #16]
  41ed3c:	mov	x20, x1
  41ed40:	stp	x21, x22, [sp, #32]
  41ed44:	mov	x22, x0
  41ed48:	mov	x0, x1
  41ed4c:	bl	4024f0 <strlen@plt>
  41ed50:	mov	x19, x0
  41ed54:	add	x0, x0, #0x12
  41ed58:	mov	x2, x19
  41ed5c:	and	x0, x0, #0xfffffffffffffff0
  41ed60:	mov	x1, x20
  41ed64:	sub	sp, sp, x0
  41ed68:	mov	x21, sp
  41ed6c:	mov	x0, x21
  41ed70:	bl	402490 <memcpy@plt>
  41ed74:	mov	x0, x20
  41ed78:	mov	w1, #0x3d                  	// #61
  41ed7c:	bl	402940 <strchr@plt>
  41ed80:	cbz	x0, 41edc0 <nftw@plt+0x1c240>
  41ed84:	sub	x20, x0, x20
  41ed88:	mov	w0, #0x20                  	// #32
  41ed8c:	strb	w0, [x21, x20]
  41ed90:	mov	w4, #0xa                   	// #10
  41ed94:	mov	x0, x22
  41ed98:	mov	x3, x19
  41ed9c:	mov	x2, x21
  41eda0:	mov	w1, #0x0                   	// #0
  41eda4:	strb	w4, [x21, x19]
  41eda8:	bl	41ec90 <nftw@plt+0x1c110>
  41edac:	mov	sp, x29
  41edb0:	ldp	x19, x20, [sp, #16]
  41edb4:	ldp	x21, x22, [sp, #32]
  41edb8:	ldp	x29, x30, [sp], #48
  41edbc:	ret
  41edc0:	add	x0, x19, #0x1
  41edc4:	mov	w1, #0x20                  	// #32
  41edc8:	strb	w1, [x21, x19]
  41edcc:	mov	w1, #0x31                  	// #49
  41edd0:	add	x19, x19, #0x2
  41edd4:	strb	w1, [x21, x0]
  41edd8:	b	41ed90 <nftw@plt+0x1c210>
  41eddc:	nop
  41ede0:	stp	x29, x30, [sp, #-272]!
  41ede4:	mov	w9, #0xffffffd0            	// #-48
  41ede8:	mov	w8, #0xffffff80            	// #-128
  41edec:	mov	x29, sp
  41edf0:	add	x10, sp, #0xe0
  41edf4:	add	x11, sp, #0x110
  41edf8:	stp	x11, x11, [sp, #64]
  41edfc:	str	x10, [sp, #80]
  41ee00:	stp	w9, w8, [sp, #88]
  41ee04:	ldp	x10, x11, [sp, #64]
  41ee08:	stp	x19, x20, [sp, #16]
  41ee0c:	mov	x20, x0
  41ee10:	ldp	x8, x9, [sp, #80]
  41ee14:	mov	x0, x1
  41ee18:	add	x1, sp, #0x20
  41ee1c:	stp	x10, x11, [sp, #32]
  41ee20:	stp	x8, x9, [sp, #48]
  41ee24:	str	q0, [sp, #96]
  41ee28:	str	q1, [sp, #112]
  41ee2c:	str	q2, [sp, #128]
  41ee30:	str	q3, [sp, #144]
  41ee34:	str	q4, [sp, #160]
  41ee38:	str	q5, [sp, #176]
  41ee3c:	str	q6, [sp, #192]
  41ee40:	str	q7, [sp, #208]
  41ee44:	stp	x2, x3, [sp, #224]
  41ee48:	stp	x4, x5, [sp, #240]
  41ee4c:	stp	x6, x7, [sp, #256]
  41ee50:	bl	449d80 <_obstack_memory_used@@Base+0x320>
  41ee54:	mov	x19, x0
  41ee58:	mov	x1, x19
  41ee5c:	mov	x0, x20
  41ee60:	bl	41ed30 <nftw@plt+0x1c1b0>
  41ee64:	mov	x0, x19
  41ee68:	bl	402910 <free@plt>
  41ee6c:	ldp	x19, x20, [sp, #16]
  41ee70:	ldp	x29, x30, [sp], #272
  41ee74:	ret
  41ee78:	stp	x29, x30, [sp, #-32]!
  41ee7c:	mov	x29, sp
  41ee80:	stp	x19, x20, [sp, #16]
  41ee84:	mov	x19, x1
  41ee88:	mov	x20, x0
  41ee8c:	mov	x0, x1
  41ee90:	bl	4024f0 <strlen@plt>
  41ee94:	mov	x1, x19
  41ee98:	mov	x19, x0
  41ee9c:	add	x0, x0, #0x10
  41eea0:	mov	x2, x19
  41eea4:	and	x0, x0, #0xfffffffffffffff0
  41eea8:	sub	sp, sp, x0
  41eeac:	mov	x4, sp
  41eeb0:	mov	x0, x4
  41eeb4:	bl	402490 <memcpy@plt>
  41eeb8:	mov	x4, x0
  41eebc:	mov	w5, #0xa                   	// #10
  41eec0:	mov	x0, x20
  41eec4:	mov	x3, x19
  41eec8:	mov	x2, x4
  41eecc:	strb	w5, [x4, x19]
  41eed0:	mov	w1, #0x0                   	// #0
  41eed4:	bl	41ec90 <nftw@plt+0x1c110>
  41eed8:	mov	sp, x29
  41eedc:	ldp	x19, x20, [sp, #16]
  41eee0:	ldp	x29, x30, [sp], #32
  41eee4:	ret
  41eee8:	stp	x29, x30, [sp, #-32]!
  41eeec:	mov	x29, sp
  41eef0:	stp	x19, x20, [sp, #16]
  41eef4:	mov	x19, x1
  41eef8:	mov	x20, x0
  41eefc:	mov	x0, x1
  41ef00:	bl	4024f0 <strlen@plt>
  41ef04:	mov	x1, x19
  41ef08:	mov	x19, x0
  41ef0c:	add	x0, x0, #0x10
  41ef10:	mov	x2, x19
  41ef14:	and	x0, x0, #0xfffffffffffffff0
  41ef18:	sub	sp, sp, x0
  41ef1c:	mov	x4, sp
  41ef20:	mov	x0, x4
  41ef24:	bl	402490 <memcpy@plt>
  41ef28:	mov	x4, x0
  41ef2c:	mov	w5, #0xa                   	// #10
  41ef30:	mov	x0, x20
  41ef34:	mov	x3, x19
  41ef38:	mov	x2, x4
  41ef3c:	strb	w5, [x4, x19]
  41ef40:	mov	w1, #0x7                   	// #7
  41ef44:	bl	41ec90 <nftw@plt+0x1c110>
  41ef48:	mov	sp, x29
  41ef4c:	ldp	x19, x20, [sp, #16]
  41ef50:	ldp	x29, x30, [sp], #32
  41ef54:	ret
  41ef58:	stp	x29, x30, [sp, #-64]!
  41ef5c:	mov	x29, sp
  41ef60:	stp	x19, x20, [sp, #16]
  41ef64:	mov	x20, x1
  41ef68:	stp	x21, x22, [sp, #32]
  41ef6c:	mov	x22, x0
  41ef70:	mov	x0, x1
  41ef74:	str	x23, [sp, #48]
  41ef78:	mov	w23, w2
  41ef7c:	bl	4024f0 <strlen@plt>
  41ef80:	mov	x19, x0
  41ef84:	mov	w1, #0x3d                  	// #61
  41ef88:	mov	x0, x20
  41ef8c:	bl	402940 <strchr@plt>
  41ef90:	mov	x21, x0
  41ef94:	add	x1, x19, #0x11
  41ef98:	mov	x2, x19
  41ef9c:	and	x0, x1, #0xfffffffffffffff0
  41efa0:	mov	x1, x20
  41efa4:	sub	sp, sp, x0
  41efa8:	mov	x4, sp
  41efac:	mov	x0, x4
  41efb0:	bl	402490 <memcpy@plt>
  41efb4:	mov	x4, x0
  41efb8:	mov	x3, x19
  41efbc:	cbz	x21, 41efd8 <nftw@plt+0x1c458>
  41efc0:	sub	x20, x21, x20
  41efc4:	mov	w1, #0x28                  	// #40
  41efc8:	add	x3, x19, #0x1
  41efcc:	mov	w0, #0x29                  	// #41
  41efd0:	strb	w1, [x4, x20]
  41efd4:	strb	w0, [x4, x19]
  41efd8:	mov	w5, #0xa                   	// #10
  41efdc:	strb	w5, [x4, x3]
  41efe0:	mov	w1, w23
  41efe4:	mov	x0, x22
  41efe8:	mov	x2, x4
  41efec:	bl	41ec90 <nftw@plt+0x1c110>
  41eff0:	mov	sp, x29
  41eff4:	ldp	x19, x20, [sp, #16]
  41eff8:	ldp	x21, x22, [sp, #32]
  41effc:	ldr	x23, [sp, #48]
  41f000:	ldp	x29, x30, [sp], #64
  41f004:	ret
  41f008:	mov	w2, #0x10                  	// #16
  41f00c:	b	41ef58 <nftw@plt+0x1c3d8>
  41f010:	mov	w2, #0x11                  	// #17
  41f014:	b	41ef58 <nftw@plt+0x1c3d8>
  41f018:	stp	x29, x30, [sp, #-48]!
  41f01c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f020:	mov	w2, #0x6                   	// #6
  41f024:	mov	x29, sp
  41f028:	stp	x19, x20, [sp, #16]
  41f02c:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f030:	add	x20, x20, #0xe0
  41f034:	add	x20, x20, #0x20
  41f038:	add	x1, x1, #0x50
  41f03c:	mov	w19, #0x0                   	// #0
  41f040:	str	x21, [sp, #32]
  41f044:	mov	x21, x0
  41f048:	b	41f058 <nftw@plt+0x1c4d8>
  41f04c:	ldrh	w2, [x20, #8]
  41f050:	add	x20, x20, #0x18
  41f054:	ldur	x1, [x20, #-24]
  41f058:	mov	x0, x21
  41f05c:	bl	425de0 <nftw@plt+0x23260>
  41f060:	ubfiz	w1, w19, #1, #7
  41f064:	add	w19, w19, #0x1
  41f068:	orr	w1, w1, #0x1
  41f06c:	strb	w1, [x0, #16]
  41f070:	cmp	w19, #0x13
  41f074:	b.ne	41f04c <nftw@plt+0x1c4cc>  // b.any
  41f078:	ldp	x19, x20, [sp, #16]
  41f07c:	ldr	x21, [sp, #32]
  41f080:	ldp	x29, x30, [sp], #48
  41f084:	ret
  41f088:	b	41bb28 <nftw@plt+0x18fa8>
  41f08c:	nop
  41f090:	stp	x29, x30, [sp, #-64]!
  41f094:	mov	x29, sp
  41f098:	stp	x23, x24, [sp, #48]
  41f09c:	ldr	x24, [x0, #1000]
  41f0a0:	stp	x19, x20, [sp, #16]
  41f0a4:	stp	x21, x22, [sp, #32]
  41f0a8:	cbz	x24, 41f100 <nftw@plt+0x1c580>
  41f0ac:	mov	x19, x0
  41f0b0:	mov	w20, w1
  41f0b4:	mov	w21, w2
  41f0b8:	mov	x22, x3
  41f0bc:	mov	x1, x4
  41f0c0:	mov	x23, x5
  41f0c4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f0c8:	add	x0, x0, #0x390
  41f0cc:	bl	402900 <dgettext@plt>
  41f0d0:	mov	x4, x0
  41f0d4:	mov	x5, x23
  41f0d8:	mov	x3, x22
  41f0dc:	mov	w2, w21
  41f0e0:	mov	w1, w20
  41f0e4:	mov	x0, x19
  41f0e8:	mov	x16, x24
  41f0ec:	ldp	x19, x20, [sp, #16]
  41f0f0:	ldp	x21, x22, [sp, #32]
  41f0f4:	ldp	x23, x24, [sp, #48]
  41f0f8:	ldp	x29, x30, [sp], #64
  41f0fc:	br	x16
  41f100:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f104:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f108:	add	x2, x2, #0x360
  41f10c:	add	x0, x0, #0x378
  41f110:	mov	w1, #0x29                  	// #41
  41f114:	bl	402bf0 <nftw@plt+0x70>
  41f118:	stp	x29, x30, [sp, #-240]!
  41f11c:	mov	x29, sp
  41f120:	stp	x19, x20, [sp, #16]
  41f124:	mov	w20, w1
  41f128:	mov	x19, x0
  41f12c:	stp	x21, x22, [sp, #32]
  41f130:	mov	w21, w2
  41f134:	mov	x22, x3
  41f138:	ldr	x1, [x0, #40]
  41f13c:	str	x23, [sp, #48]
  41f140:	mov	x23, x4
  41f144:	ldrb	w0, [x0, #1160]
  41f148:	cbz	w0, 41f1a4 <nftw@plt+0x1c624>
  41f14c:	ldrb	w0, [x19, #16]
  41f150:	cbz	w0, 41f1c4 <nftw@plt+0x1c644>
  41f154:	ldr	w2, [x19, #48]
  41f158:	add	x0, sp, #0x48
  41f15c:	mov	x3, #0x0                   	// #0
  41f160:	bl	42d6d8 <nftw@plt+0x2ab58>
  41f164:	mov	x5, x23
  41f168:	mov	x4, x22
  41f16c:	add	x3, sp, #0x48
  41f170:	mov	w2, w21
  41f174:	mov	w1, w20
  41f178:	mov	x0, x19
  41f17c:	bl	41f090 <nftw@plt+0x1c510>
  41f180:	mov	w19, w0
  41f184:	add	x0, sp, #0x48
  41f188:	bl	42cec0 <nftw@plt+0x2a340>
  41f18c:	mov	w0, w19
  41f190:	ldp	x19, x20, [sp, #16]
  41f194:	ldp	x21, x22, [sp, #32]
  41f198:	ldr	x23, [sp, #48]
  41f19c:	ldp	x29, x30, [sp], #240
  41f1a0:	ret
  41f1a4:	ldr	x3, [x19, #488]
  41f1a8:	mov	w2, #0x0                   	// #0
  41f1ac:	ldr	x0, [x19, #448]
  41f1b0:	ldr	x3, [x3, #16]
  41f1b4:	cmp	x0, x3
  41f1b8:	b.eq	41f158 <nftw@plt+0x1c5d8>  // b.none
  41f1bc:	ldur	w2, [x0, #-24]
  41f1c0:	b	41f158 <nftw@plt+0x1c5d8>
  41f1c4:	ldr	w2, [x1, #60]
  41f1c8:	b	41f158 <nftw@plt+0x1c5d8>
  41f1cc:	nop
  41f1d0:	stp	x29, x30, [sp, #-240]!
  41f1d4:	mov	x29, sp
  41f1d8:	stp	x19, x20, [sp, #16]
  41f1dc:	mov	x19, x0
  41f1e0:	ldr	x0, [x0, #1000]
  41f1e4:	stp	x21, x22, [sp, #32]
  41f1e8:	stp	x23, x24, [sp, #48]
  41f1ec:	cbz	x0, 41f280 <nftw@plt+0x1c700>
  41f1f0:	mov	w21, w1
  41f1f4:	mov	w22, w2
  41f1f8:	ldr	x1, [x19, #40]
  41f1fc:	mov	w2, w3
  41f200:	mov	w20, w4
  41f204:	mov	x23, x5
  41f208:	mov	x24, x6
  41f20c:	add	x0, sp, #0x48
  41f210:	mov	x3, #0x0                   	// #0
  41f214:	bl	42d6d8 <nftw@plt+0x2ab58>
  41f218:	cbnz	w20, 41f270 <nftw@plt+0x1c6f0>
  41f21c:	ldr	x20, [x19, #1000]
  41f220:	mov	x1, x23
  41f224:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f228:	add	x0, x0, #0x390
  41f22c:	bl	402900 <dgettext@plt>
  41f230:	mov	x4, x0
  41f234:	mov	x5, x24
  41f238:	add	x3, sp, #0x48
  41f23c:	mov	w2, w22
  41f240:	mov	w1, w21
  41f244:	mov	x0, x19
  41f248:	blr	x20
  41f24c:	mov	w19, w0
  41f250:	add	x0, sp, #0x48
  41f254:	bl	42cec0 <nftw@plt+0x2a340>
  41f258:	mov	w0, w19
  41f25c:	ldp	x19, x20, [sp, #16]
  41f260:	ldp	x21, x22, [sp, #32]
  41f264:	ldp	x23, x24, [sp, #48]
  41f268:	ldp	x29, x30, [sp], #240
  41f26c:	ret
  41f270:	mov	w1, w20
  41f274:	add	x0, sp, #0x48
  41f278:	bl	42d080 <nftw@plt+0x2a500>
  41f27c:	b	41f21c <nftw@plt+0x1c69c>
  41f280:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f284:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f288:	add	x2, x2, #0x398
  41f28c:	add	x0, x0, #0x378
  41f290:	mov	w1, #0x9f                  	// #159
  41f294:	bl	402bf0 <nftw@plt+0x70>
  41f298:	stp	x29, x30, [sp, #-224]!
  41f29c:	mov	x11, x2
  41f2a0:	mov	w9, #0xffffffd8            	// #-40
  41f2a4:	mov	x29, sp
  41f2a8:	add	x10, sp, #0xb0
  41f2ac:	stp	x3, x4, [sp, #184]
  41f2b0:	mov	x3, x11
  41f2b4:	add	x11, sp, #0xe0
  41f2b8:	mov	w8, #0xffffff80            	// #-128
  41f2bc:	add	x4, sp, #0x10
  41f2c0:	mov	w2, #0x0                   	// #0
  41f2c4:	stp	x11, x11, [sp, #16]
  41f2c8:	str	x10, [sp, #32]
  41f2cc:	stp	w9, w8, [sp, #40]
  41f2d0:	str	q0, [sp, #48]
  41f2d4:	str	q1, [sp, #64]
  41f2d8:	str	q2, [sp, #80]
  41f2dc:	str	q3, [sp, #96]
  41f2e0:	str	q4, [sp, #112]
  41f2e4:	str	q5, [sp, #128]
  41f2e8:	str	q6, [sp, #144]
  41f2ec:	str	q7, [sp, #160]
  41f2f0:	stp	x5, x6, [sp, #200]
  41f2f4:	str	x7, [sp, #216]
  41f2f8:	bl	41f118 <nftw@plt+0x1c598>
  41f2fc:	ldp	x29, x30, [sp], #224
  41f300:	ret
  41f304:	nop
  41f308:	stp	x29, x30, [sp, #-224]!
  41f30c:	mov	x11, x2
  41f310:	mov	w9, #0xffffffd8            	// #-40
  41f314:	mov	x29, sp
  41f318:	add	x10, sp, #0xb0
  41f31c:	stp	x3, x4, [sp, #184]
  41f320:	mov	x3, x11
  41f324:	add	x11, sp, #0xe0
  41f328:	mov	w8, #0xffffff80            	// #-128
  41f32c:	mov	w2, w1
  41f330:	add	x4, sp, #0x10
  41f334:	mov	w1, #0x0                   	// #0
  41f338:	stp	x11, x11, [sp, #16]
  41f33c:	str	x10, [sp, #32]
  41f340:	stp	w9, w8, [sp, #40]
  41f344:	str	q0, [sp, #48]
  41f348:	str	q1, [sp, #64]
  41f34c:	str	q2, [sp, #80]
  41f350:	str	q3, [sp, #96]
  41f354:	str	q4, [sp, #112]
  41f358:	str	q5, [sp, #128]
  41f35c:	str	q6, [sp, #144]
  41f360:	str	q7, [sp, #160]
  41f364:	stp	x5, x6, [sp, #200]
  41f368:	str	x7, [sp, #216]
  41f36c:	bl	41f118 <nftw@plt+0x1c598>
  41f370:	ldp	x29, x30, [sp], #224
  41f374:	ret
  41f378:	stp	x29, x30, [sp, #-224]!
  41f37c:	mov	x11, x2
  41f380:	mov	w9, #0xffffffd8            	// #-40
  41f384:	mov	x29, sp
  41f388:	add	x10, sp, #0xb0
  41f38c:	stp	x3, x4, [sp, #184]
  41f390:	mov	x3, x11
  41f394:	add	x11, sp, #0xe0
  41f398:	mov	w8, #0xffffff80            	// #-128
  41f39c:	mov	w2, w1
  41f3a0:	add	x4, sp, #0x10
  41f3a4:	mov	w1, #0x2                   	// #2
  41f3a8:	stp	x11, x11, [sp, #16]
  41f3ac:	str	x10, [sp, #32]
  41f3b0:	stp	w9, w8, [sp, #40]
  41f3b4:	str	q0, [sp, #48]
  41f3b8:	str	q1, [sp, #64]
  41f3bc:	str	q2, [sp, #80]
  41f3c0:	str	q3, [sp, #96]
  41f3c4:	str	q4, [sp, #112]
  41f3c8:	str	q5, [sp, #128]
  41f3cc:	str	q6, [sp, #144]
  41f3d0:	str	q7, [sp, #160]
  41f3d4:	stp	x5, x6, [sp, #200]
  41f3d8:	str	x7, [sp, #216]
  41f3dc:	bl	41f118 <nftw@plt+0x1c598>
  41f3e0:	ldp	x29, x30, [sp], #224
  41f3e4:	ret
  41f3e8:	stp	x29, x30, [sp, #-224]!
  41f3ec:	mov	x11, x2
  41f3f0:	mov	w9, #0xffffffd8            	// #-40
  41f3f4:	mov	x29, sp
  41f3f8:	add	x10, sp, #0xb0
  41f3fc:	stp	x3, x4, [sp, #184]
  41f400:	mov	x3, x11
  41f404:	add	x11, sp, #0xe0
  41f408:	mov	w8, #0xffffff80            	// #-128
  41f40c:	mov	w2, w1
  41f410:	add	x4, sp, #0x10
  41f414:	mov	w1, #0x1                   	// #1
  41f418:	stp	x11, x11, [sp, #16]
  41f41c:	str	x10, [sp, #32]
  41f420:	stp	w9, w8, [sp, #40]
  41f424:	str	q0, [sp, #48]
  41f428:	str	q1, [sp, #64]
  41f42c:	str	q2, [sp, #80]
  41f430:	str	q3, [sp, #96]
  41f434:	str	q4, [sp, #112]
  41f438:	str	q5, [sp, #128]
  41f43c:	str	q6, [sp, #144]
  41f440:	str	q7, [sp, #160]
  41f444:	stp	x5, x6, [sp, #200]
  41f448:	str	x7, [sp, #216]
  41f44c:	bl	41f118 <nftw@plt+0x1c598>
  41f450:	ldp	x29, x30, [sp], #224
  41f454:	ret
  41f458:	stp	x29, x30, [sp, #-208]!
  41f45c:	mov	x11, x4
  41f460:	mov	w8, w3
  41f464:	add	x12, sp, #0xd0
  41f468:	add	x10, sp, #0xb0
  41f46c:	mov	w4, w8
  41f470:	mov	w9, #0xffffffe8            	// #-24
  41f474:	mov	w8, #0xffffff80            	// #-128
  41f478:	mov	x29, sp
  41f47c:	mov	w3, w2
  41f480:	mov	w2, #0x0                   	// #0
  41f484:	str	x12, [sp, #16]
  41f488:	str	x12, [sp, #24]
  41f48c:	str	x10, [sp, #32]
  41f490:	stp	w9, w8, [sp, #40]
  41f494:	str	q0, [sp, #48]
  41f498:	str	q1, [sp, #64]
  41f49c:	str	q2, [sp, #80]
  41f4a0:	str	q3, [sp, #96]
  41f4a4:	str	q4, [sp, #112]
  41f4a8:	str	q5, [sp, #128]
  41f4ac:	str	q6, [sp, #144]
  41f4b0:	str	q7, [sp, #160]
  41f4b4:	stp	x5, x6, [sp, #184]
  41f4b8:	add	x6, sp, #0x10
  41f4bc:	mov	x5, x11
  41f4c0:	str	x7, [sp, #200]
  41f4c4:	bl	41f1d0 <nftw@plt+0x1c650>
  41f4c8:	ldp	x29, x30, [sp], #208
  41f4cc:	ret
  41f4d0:	stp	x29, x30, [sp, #-208]!
  41f4d4:	mov	x11, x4
  41f4d8:	mov	w9, w2
  41f4dc:	add	x12, sp, #0xd0
  41f4e0:	add	x10, sp, #0xb0
  41f4e4:	mov	w8, w3
  41f4e8:	mov	w3, w9
  41f4ec:	mov	w4, w8
  41f4f0:	mov	w9, #0xffffffe8            	// #-24
  41f4f4:	mov	w8, #0xffffff80            	// #-128
  41f4f8:	mov	x29, sp
  41f4fc:	mov	w2, w1
  41f500:	mov	w1, #0x0                   	// #0
  41f504:	str	x12, [sp, #16]
  41f508:	str	x12, [sp, #24]
  41f50c:	str	x10, [sp, #32]
  41f510:	stp	w9, w8, [sp, #40]
  41f514:	str	q0, [sp, #48]
  41f518:	str	q1, [sp, #64]
  41f51c:	str	q2, [sp, #80]
  41f520:	str	q3, [sp, #96]
  41f524:	str	q4, [sp, #112]
  41f528:	str	q5, [sp, #128]
  41f52c:	str	q6, [sp, #144]
  41f530:	str	q7, [sp, #160]
  41f534:	stp	x5, x6, [sp, #184]
  41f538:	add	x6, sp, #0x10
  41f53c:	mov	x5, x11
  41f540:	str	x7, [sp, #200]
  41f544:	bl	41f1d0 <nftw@plt+0x1c650>
  41f548:	ldp	x29, x30, [sp], #208
  41f54c:	ret
  41f550:	stp	x29, x30, [sp, #-208]!
  41f554:	mov	x11, x4
  41f558:	mov	w9, w2
  41f55c:	add	x12, sp, #0xd0
  41f560:	add	x10, sp, #0xb0
  41f564:	mov	w8, w3
  41f568:	mov	w3, w9
  41f56c:	mov	w4, w8
  41f570:	mov	w9, #0xffffffe8            	// #-24
  41f574:	mov	w8, #0xffffff80            	// #-128
  41f578:	mov	x29, sp
  41f57c:	mov	w2, w1
  41f580:	mov	w1, #0x2                   	// #2
  41f584:	str	x12, [sp, #16]
  41f588:	str	x12, [sp, #24]
  41f58c:	str	x10, [sp, #32]
  41f590:	stp	w9, w8, [sp, #40]
  41f594:	str	q0, [sp, #48]
  41f598:	str	q1, [sp, #64]
  41f59c:	str	q2, [sp, #80]
  41f5a0:	str	q3, [sp, #96]
  41f5a4:	str	q4, [sp, #112]
  41f5a8:	str	q5, [sp, #128]
  41f5ac:	str	q6, [sp, #144]
  41f5b0:	str	q7, [sp, #160]
  41f5b4:	stp	x5, x6, [sp, #184]
  41f5b8:	add	x6, sp, #0x10
  41f5bc:	mov	x5, x11
  41f5c0:	str	x7, [sp, #200]
  41f5c4:	bl	41f1d0 <nftw@plt+0x1c650>
  41f5c8:	ldp	x29, x30, [sp], #208
  41f5cc:	ret
  41f5d0:	stp	x29, x30, [sp, #-208]!
  41f5d4:	mov	x11, x4
  41f5d8:	mov	w9, w2
  41f5dc:	add	x12, sp, #0xd0
  41f5e0:	add	x10, sp, #0xb0
  41f5e4:	mov	w8, w3
  41f5e8:	mov	w3, w9
  41f5ec:	mov	w4, w8
  41f5f0:	mov	w9, #0xffffffe8            	// #-24
  41f5f4:	mov	w8, #0xffffff80            	// #-128
  41f5f8:	mov	x29, sp
  41f5fc:	mov	w2, w1
  41f600:	mov	w1, #0x1                   	// #1
  41f604:	str	x12, [sp, #16]
  41f608:	str	x12, [sp, #24]
  41f60c:	str	x10, [sp, #32]
  41f610:	stp	w9, w8, [sp, #40]
  41f614:	str	q0, [sp, #48]
  41f618:	str	q1, [sp, #64]
  41f61c:	str	q2, [sp, #80]
  41f620:	str	q3, [sp, #96]
  41f624:	str	q4, [sp, #112]
  41f628:	str	q5, [sp, #128]
  41f62c:	str	q6, [sp, #144]
  41f630:	str	q7, [sp, #160]
  41f634:	stp	x5, x6, [sp, #184]
  41f638:	add	x6, sp, #0x10
  41f63c:	mov	x5, x11
  41f640:	str	x7, [sp, #200]
  41f644:	bl	41f1d0 <nftw@plt+0x1c650>
  41f648:	ldp	x29, x30, [sp], #208
  41f64c:	ret
  41f650:	stp	x29, x30, [sp, #-416]!
  41f654:	mov	w9, #0xffffffe0            	// #-32
  41f658:	mov	w8, #0xffffff80            	// #-128
  41f65c:	mov	x29, sp
  41f660:	stp	x19, x20, [sp, #16]
  41f664:	mov	x19, x0
  41f668:	mov	w20, w1
  41f66c:	add	x10, sp, #0x180
  41f670:	add	x11, sp, #0x1a0
  41f674:	ldr	x1, [x19, #40]
  41f678:	add	x0, sp, #0x58
  41f67c:	str	x21, [sp, #32]
  41f680:	mov	x21, x3
  41f684:	mov	x3, #0x0                   	// #0
  41f688:	stp	x11, x11, [sp, #56]
  41f68c:	str	x10, [sp, #72]
  41f690:	stp	w9, w8, [sp, #80]
  41f694:	str	q0, [sp, #256]
  41f698:	str	q1, [sp, #272]
  41f69c:	str	q2, [sp, #288]
  41f6a0:	str	q3, [sp, #304]
  41f6a4:	str	q4, [sp, #320]
  41f6a8:	str	q5, [sp, #336]
  41f6ac:	str	q6, [sp, #352]
  41f6b0:	str	q7, [sp, #368]
  41f6b4:	stp	x4, x5, [sp, #384]
  41f6b8:	stp	x6, x7, [sp, #400]
  41f6bc:	bl	42d6d8 <nftw@plt+0x2ab58>
  41f6c0:	mov	x4, x21
  41f6c4:	mov	w1, w20
  41f6c8:	add	x3, sp, #0x58
  41f6cc:	add	x5, sp, #0x38
  41f6d0:	mov	w2, #0x0                   	// #0
  41f6d4:	mov	x0, x19
  41f6d8:	bl	41f090 <nftw@plt+0x1c510>
  41f6dc:	mov	w19, w0
  41f6e0:	add	x0, sp, #0x58
  41f6e4:	bl	42cec0 <nftw@plt+0x2a340>
  41f6e8:	mov	w0, w19
  41f6ec:	ldp	x19, x20, [sp, #16]
  41f6f0:	ldr	x21, [sp, #32]
  41f6f4:	ldp	x29, x30, [sp], #416
  41f6f8:	ret
  41f6fc:	nop
  41f700:	stp	x29, x30, [sp, #-208]!
  41f704:	mov	x11, x3
  41f708:	mov	w9, #0xffffffe0            	// #-32
  41f70c:	mov	x29, sp
  41f710:	add	x10, sp, #0xb0
  41f714:	stp	x4, x5, [sp, #176]
  41f718:	mov	x4, x11
  41f71c:	add	x11, sp, #0xd0
  41f720:	mov	w8, #0xffffff80            	// #-128
  41f724:	mov	x3, x2
  41f728:	add	x5, sp, #0x10
  41f72c:	mov	w2, #0x0                   	// #0
  41f730:	stp	x11, x11, [sp, #16]
  41f734:	str	x10, [sp, #32]
  41f738:	stp	w9, w8, [sp, #40]
  41f73c:	str	q0, [sp, #48]
  41f740:	str	q1, [sp, #64]
  41f744:	str	q2, [sp, #80]
  41f748:	str	q3, [sp, #96]
  41f74c:	str	q4, [sp, #112]
  41f750:	str	q5, [sp, #128]
  41f754:	str	q6, [sp, #144]
  41f758:	str	q7, [sp, #160]
  41f75c:	stp	x6, x7, [sp, #192]
  41f760:	bl	41f090 <nftw@plt+0x1c510>
  41f764:	ldp	x29, x30, [sp], #208
  41f768:	ret
  41f76c:	nop
  41f770:	stp	x29, x30, [sp, #-48]!
  41f774:	mov	x29, sp
  41f778:	stp	x19, x20, [sp, #16]
  41f77c:	mov	w20, w1
  41f780:	mov	x1, x2
  41f784:	mov	x19, x0
  41f788:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f78c:	add	x0, x0, #0x390
  41f790:	str	x21, [sp, #32]
  41f794:	bl	402900 <dgettext@plt>
  41f798:	mov	x21, x0
  41f79c:	bl	402aa0 <__errno_location@plt>
  41f7a0:	ldr	w0, [x0]
  41f7a4:	bl	449cf8 <_obstack_memory_used@@Base+0x298>
  41f7a8:	mov	x4, x0
  41f7ac:	mov	x3, x21
  41f7b0:	mov	w1, w20
  41f7b4:	mov	x0, x19
  41f7b8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f7bc:	ldp	x19, x20, [sp, #16]
  41f7c0:	add	x2, x2, #0x3b8
  41f7c4:	ldr	x21, [sp, #32]
  41f7c8:	ldp	x29, x30, [sp], #48
  41f7cc:	b	41f298 <nftw@plt+0x1c718>
  41f7d0:	stp	x29, x30, [sp, #-48]!
  41f7d4:	mov	x29, sp
  41f7d8:	stp	x19, x20, [sp, #16]
  41f7dc:	mov	x20, x0
  41f7e0:	mov	x19, x2
  41f7e4:	stp	x21, x22, [sp, #32]
  41f7e8:	mov	w21, w1
  41f7ec:	mov	w22, w3
  41f7f0:	ldrb	w0, [x2]
  41f7f4:	cbz	w0, 41f830 <nftw@plt+0x1ccb0>
  41f7f8:	bl	402aa0 <__errno_location@plt>
  41f7fc:	ldr	w0, [x0]
  41f800:	bl	449cf8 <_obstack_memory_used@@Base+0x298>
  41f804:	mov	x5, x0
  41f808:	mov	x4, x19
  41f80c:	mov	w2, w22
  41f810:	mov	w1, w21
  41f814:	mov	x0, x20
  41f818:	ldp	x19, x20, [sp, #16]
  41f81c:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f820:	ldp	x21, x22, [sp, #32]
  41f824:	add	x3, x3, #0x3b8
  41f828:	ldp	x29, x30, [sp], #48
  41f82c:	b	41f650 <nftw@plt+0x1cad0>
  41f830:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f834:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  41f838:	add	x1, x1, #0x3c0
  41f83c:	add	x0, x0, #0x390
  41f840:	bl	402900 <dgettext@plt>
  41f844:	mov	x19, x0
  41f848:	b	41f7f8 <nftw@plt+0x1cc78>
  41f84c:	nop
  41f850:	cmp	x2, #0x2
  41f854:	mov	x8, x0
  41f858:	b.eq	41fad4 <nftw@plt+0x1cf54>  // b.none
  41f85c:	ldrb	w7, [x0, #1163]
  41f860:	cbz	w7, 41f8a8 <nftw@plt+0x1cd28>
  41f864:	cbnz	x2, 41fc40 <nftw@plt+0x1d0c0>
  41f868:	mov	x14, #0x0                   	// #0
  41f86c:	cmp	x14, #0x60
  41f870:	mov	w3, #0x0                   	// #0
  41f874:	mov	x9, #0x0                   	// #0
  41f878:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  41f87c:	mov	x13, #0x0                   	// #0
  41f880:	mov	x11, #0x0                   	// #0
  41f884:	mov	x5, #0x0                   	// #0
  41f888:	mov	x10, #0x0                   	// #0
  41f88c:	mov	x16, #0x0                   	// #0
  41f890:	mov	x12, #0x0                   	// #0
  41f894:	mov	w0, #0x0                   	// #0
  41f898:	b.eq	41fc88 <nftw@plt+0x1d108>  // b.none
  41f89c:	ret
  41f8a0:	ldrb	w7, [x8, #1163]
  41f8a4:	cbnz	w7, 41fc40 <nftw@plt+0x1d0c0>
  41f8a8:	sub	x4, x2, #0x1
  41f8ac:	mov	w7, #0x0                   	// #0
  41f8b0:	cbz	x2, 41f868 <nftw@plt+0x1cce8>
  41f8b4:	ldrb	w3, [x1]
  41f8b8:	mov	x6, x1
  41f8bc:	stp	x29, x30, [sp, #-32]!
  41f8c0:	mov	x14, #0x0                   	// #0
  41f8c4:	mov	x16, #0x0                   	// #0
  41f8c8:	mov	x17, #0x0                   	// #0
  41f8cc:	mov	x9, #0x0                   	// #0
  41f8d0:	mov	x10, #0x0                   	// #0
  41f8d4:	mov	x11, #0x0                   	// #0
  41f8d8:	mov	x12, #0x0                   	// #0
  41f8dc:	mov	x13, #0x0                   	// #0
  41f8e0:	mov	x15, #0x0                   	// #0
  41f8e4:	mov	x29, sp
  41f8e8:	cmp	w3, #0x64
  41f8ec:	b.eq	41f944 <nftw@plt+0x1cdc4>  // b.none
  41f8f0:	b.hi	41f958 <nftw@plt+0x1cdd8>  // b.pmore
  41f8f4:	cmp	w3, #0x4c
  41f8f8:	b.eq	41faac <nftw@plt+0x1cf2c>  // b.none
  41f8fc:	b.hi	41f988 <nftw@plt+0x1ce08>  // b.pmore
  41f900:	cmp	w3, #0x46
  41f904:	b.eq	41f9dc <nftw@plt+0x1ce5c>  // b.none
  41f908:	b.ls	41f9c0 <nftw@plt+0x1ce40>  // b.plast
  41f90c:	sub	w3, w3, #0x49
  41f910:	and	w3, w3, #0xff
  41f914:	cmp	w3, #0x1
  41f918:	b.hi	41f998 <nftw@plt+0x1ce18>  // b.pmore
  41f91c:	mov	x5, x4
  41f920:	add	x9, x9, #0x1
  41f924:	mov	x3, x6
  41f928:	sub	x4, x4, #0x1
  41f92c:	nop
  41f930:	add	x6, x3, #0x1
  41f934:	cbz	x5, 41fec0 <nftw@plt+0x1d340>
  41f938:	ldrb	w3, [x3, #1]
  41f93c:	cmp	w3, #0x64
  41f940:	b.ne	41f8f0 <nftw@plt+0x1cd70>  // b.any
  41f944:	mov	x5, x4
  41f948:	add	x13, x13, #0x1
  41f94c:	mov	x3, x6
  41f950:	sub	x4, x4, #0x1
  41f954:	b	41f930 <nftw@plt+0x1cdb0>
  41f958:	cmp	w3, #0x6c
  41f95c:	b.eq	41faac <nftw@plt+0x1cf2c>  // b.none
  41f960:	b.ls	41f9a4 <nftw@plt+0x1ce24>  // b.plast
  41f964:	cmp	w3, #0x71
  41f968:	b.eq	41fac0 <nftw@plt+0x1cf40>  // b.none
  41f96c:	cmp	w3, #0x77
  41f970:	b.ne	41f998 <nftw@plt+0x1ce18>  // b.any
  41f974:	mov	x5, x4
  41f978:	add	x11, x11, #0x1
  41f97c:	mov	x3, x6
  41f980:	sub	x4, x4, #0x1
  41f984:	b	41f930 <nftw@plt+0x1cdb0>
  41f988:	cmp	w3, #0x51
  41f98c:	b.eq	41fac0 <nftw@plt+0x1cf40>  // b.none
  41f990:	cmp	w3, #0x57
  41f994:	b.eq	41f974 <nftw@plt+0x1cdf4>  // b.none
  41f998:	mov	w0, #0x0                   	// #0
  41f99c:	ldp	x29, x30, [sp], #32
  41f9a0:	ret
  41f9a4:	cmp	w3, #0x66
  41f9a8:	b.eq	41f9dc <nftw@plt+0x1ce5c>  // b.none
  41f9ac:	sub	w3, w3, #0x69
  41f9b0:	and	w3, w3, #0xff
  41f9b4:	cmp	w3, #0x1
  41f9b8:	b.hi	41f998 <nftw@plt+0x1ce18>  // b.pmore
  41f9bc:	b	41f91c <nftw@plt+0x1cd9c>
  41f9c0:	cmp	w3, #0x44
  41f9c4:	b.ne	41f998 <nftw@plt+0x1ce18>  // b.any
  41f9c8:	mov	x5, x4
  41f9cc:	add	x13, x13, #0x1
  41f9d0:	mov	x3, x6
  41f9d4:	sub	x4, x4, #0x1
  41f9d8:	b	41f930 <nftw@plt+0x1cdb0>
  41f9dc:	add	x5, x15, #0x1
  41f9e0:	cbnz	x4, 41fb18 <nftw@plt+0x1cf98>
  41f9e4:	add	x0, x16, x10
  41f9e8:	add	x3, x12, x17
  41f9ec:	add	x3, x0, x3
  41f9f0:	add	x0, x5, x11
  41f9f4:	cmp	x14, #0xf0
  41f9f8:	add	x0, x3, x0
  41f9fc:	add	x0, x0, x13
  41fa00:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
  41fa04:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
  41fa08:	mov	w0, #0x0                   	// #0
  41fa0c:	cset	w4, hi  // hi = pmore
  41fa10:	b.hi	41f99c <nftw@plt+0x1ce1c>  // b.pmore
  41fa14:	sub	x3, x14, #0x20
  41fa18:	tst	x3, #0xffffffffffffffdf
  41fa1c:	cset	w3, ne  // ne = any
  41fa20:	cmp	x16, #0x0
  41fa24:	csel	w3, w3, wzr, ne  // ne = any
  41fa28:	cbz	w3, 41fdd0 <nftw@plt+0x1d250>
  41fa2c:	mov	w0, w4
  41fa30:	cmp	x14, #0x80
  41fa34:	b.ne	41f99c <nftw@plt+0x1ce1c>  // b.any
  41fa38:	cmp	x17, #0x0
  41fa3c:	cset	w0, ne  // ne = any
  41fa40:	csel	w3, w3, w0, ne  // ne = any
  41fa44:	cbz	x9, 41fe00 <nftw@plt+0x1d280>
  41fa48:	mov	w0, #0x0                   	// #0
  41fa4c:	cbz	w7, 41f99c <nftw@plt+0x1ce1c>
  41fa50:	ldrb	w4, [x8, #1120]
  41fa54:	cbz	w4, 41fe1c <nftw@plt+0x1d29c>
  41fa58:	ldr	w4, [x8, #1116]
  41fa5c:	cmp	w4, #0xe
  41fa60:	b.le	41fe1c <nftw@plt+0x1d29c>
  41fa64:	ldrb	w6, [x1]
  41fa68:	mov	w4, #0x2000                	// #8192
  41fa6c:	cmp	w6, #0x69
  41fa70:	b.eq	41fe48 <nftw@plt+0x1d2c8>  // b.none
  41fa74:	mov	w0, #0x10                  	// #16
  41fa78:	cbnz	x5, 41faa4 <nftw@plt+0x1cf24>
  41fa7c:	mov	w0, #0x20                  	// #32
  41fa80:	cbnz	x13, 41faa4 <nftw@plt+0x1cf24>
  41fa84:	mov	w0, #0x40                  	// #64
  41fa88:	cbnz	x12, 41faa4 <nftw@plt+0x1cf24>
  41fa8c:	mov	w0, #0x10000               	// #65536
  41fa90:	cbnz	x11, 41faa4 <nftw@plt+0x1cf24>
  41fa94:	cbnz	x10, 41fe88 <nftw@plt+0x1d308>
  41fa98:	lsl	w0, w14, #24
  41fa9c:	cbz	w3, 41fe70 <nftw@plt+0x1d2f0>
  41faa0:	orr	w0, w0, #0x400000
  41faa4:	orr	w0, w4, w0
  41faa8:	b	41f99c <nftw@plt+0x1ce1c>
  41faac:	mov	x5, x4
  41fab0:	add	x12, x12, #0x1
  41fab4:	mov	x3, x6
  41fab8:	sub	x4, x4, #0x1
  41fabc:	b	41f930 <nftw@plt+0x1cdb0>
  41fac0:	mov	x5, x4
  41fac4:	add	x10, x10, #0x1
  41fac8:	mov	x3, x6
  41facc:	sub	x4, x4, #0x1
  41fad0:	b	41f930 <nftw@plt+0x1cdb0>
  41fad4:	ldrb	w3, [x1]
  41fad8:	and	w0, w3, #0xffffffdf
  41fadc:	cmp	w0, #0x44
  41fae0:	and	w0, w0, #0xff
  41fae4:	b.ne	41fb4c <nftw@plt+0x1cfcc>  // b.any
  41fae8:	ldrb	w0, [x1, #1]
  41faec:	cmp	w0, #0x64
  41faf0:	b.eq	41fd74 <nftw@plt+0x1d1f4>  // b.none
  41faf4:	b.hi	41fc20 <nftw@plt+0x1d0a0>  // b.pmore
  41faf8:	cmp	w0, #0x46
  41fafc:	b.eq	41fd94 <nftw@plt+0x1d214>  // b.none
  41fb00:	cmp	w0, #0x4c
  41fb04:	b.ne	41fc08 <nftw@plt+0x1d088>  // b.any
  41fb08:	cmp	w3, #0x44
  41fb0c:	mov	w0, #0x4040                	// #16448
  41fb10:	csel	w0, wzr, w0, ne  // ne = any
  41fb14:	ret
  41fb18:	ldrb	w0, [x8, #1120]
  41fb1c:	sub	x18, x4, #0x1
  41fb20:	ldrb	w3, [x6, #1]
  41fb24:	cbnz	w0, 41fb3c <nftw@plt+0x1cfbc>
  41fb28:	sub	w0, w3, #0x31
  41fb2c:	cmp	x14, #0x0
  41fb30:	and	w0, w0, #0xff
  41fb34:	ccmp	w0, #0x8, #0x2, eq  // eq = none
  41fb38:	b.ls	41fcf0 <nftw@plt+0x1d170>  // b.plast
  41fb3c:	add	x6, x6, #0x1
  41fb40:	mov	x4, x18
  41fb44:	mov	x15, x5
  41fb48:	b	41f8e8 <nftw@plt+0x1cd68>
  41fb4c:	ldrb	w7, [x8, #1163]
  41fb50:	mov	x4, #0x1                   	// #1
  41fb54:	cbz	w7, 41f8b8 <nftw@plt+0x1cd38>
  41fb58:	ldrb	w5, [x1, #1]
  41fb5c:	cmp	w5, #0x6b
  41fb60:	b.eq	41fdb4 <nftw@plt+0x1d234>  // b.none
  41fb64:	mov	x4, #0x1                   	// #1
  41fb68:	cmp	w5, #0x6b
  41fb6c:	b.hi	41fbf8 <nftw@plt+0x1d078>  // b.pmore
  41fb70:	cmp	w5, #0x4b
  41fb74:	b.eq	41fc50 <nftw@plt+0x1d0d0>  // b.none
  41fb78:	cmp	w5, #0x52
  41fb7c:	mov	x5, #0x100000              	// #1048576
  41fb80:	b.ne	41f8b0 <nftw@plt+0x1cd30>  // b.any
  41fb84:	cmp	x2, #0x1
  41fb88:	b.eq	41fd64 <nftw@plt+0x1d1e4>  // b.none
  41fb8c:	ldrb	w3, [x1]
  41fb90:	and	w0, w3, #0xffffffdf
  41fb94:	cmp	w0, #0x55
  41fb98:	b.ne	41fbb4 <nftw@plt+0x1d034>  // b.any
  41fb9c:	orr	x5, x5, #0x1000
  41fba0:	cmp	x4, #0x1
  41fba4:	b.eq	41fd64 <nftw@plt+0x1d1e4>  // b.none
  41fba8:	ldrb	w3, [x1, #1]
  41fbac:	sub	x4, x2, #0x2
  41fbb0:	add	x1, x1, #0x1
  41fbb4:	cmp	w3, #0x68
  41fbb8:	b.eq	41fda4 <nftw@plt+0x1d224>  // b.none
  41fbbc:	b.hi	41fc58 <nftw@plt+0x1d0d8>  // b.pmore
  41fbc0:	cmp	w3, #0x48
  41fbc4:	b.eq	41fda4 <nftw@plt+0x1d224>  // b.none
  41fbc8:	cmp	w3, #0x4c
  41fbcc:	b.ne	41fd6c <nftw@plt+0x1d1ec>  // b.any
  41fbd0:	cmp	x4, #0x1
  41fbd4:	b.eq	41fd5c <nftw@plt+0x1d1dc>  // b.none
  41fbd8:	cmp	x4, #0x2
  41fbdc:	mov	w0, #0x0                   	// #0
  41fbe0:	b.ne	41f89c <nftw@plt+0x1cd1c>  // b.any
  41fbe4:	ldrb	w1, [x1, #1]
  41fbe8:	orr	x0, x5, #0x40
  41fbec:	cmp	w1, #0x4c
  41fbf0:	csel	w0, wzr, w0, ne  // ne = any
  41fbf4:	ret
  41fbf8:	cmp	w5, #0x72
  41fbfc:	b.ne	41f8b0 <nftw@plt+0x1cd30>  // b.any
  41fc00:	mov	x5, #0x100000              	// #1048576
  41fc04:	b	41fb84 <nftw@plt+0x1d004>
  41fc08:	cmp	w0, #0x44
  41fc0c:	b.ne	41f8a0 <nftw@plt+0x1cd20>  // b.any
  41fc10:	cmp	w3, #0x44
  41fc14:	mov	w0, #0x4020                	// #16416
  41fc18:	csel	w0, wzr, w0, ne  // ne = any
  41fc1c:	ret
  41fc20:	cmp	w0, #0x66
  41fc24:	b.eq	41fd84 <nftw@plt+0x1d204>  // b.none
  41fc28:	cmp	w0, #0x6c
  41fc2c:	b.ne	41f8a0 <nftw@plt+0x1cd20>  // b.any
  41fc30:	cmp	w3, #0x44
  41fc34:	mov	w0, #0x4040                	// #16448
  41fc38:	csel	w0, wzr, w0, eq  // eq = none
  41fc3c:	ret
  41fc40:	sub	x4, x2, #0x1
  41fc44:	ldrb	w5, [x1, x4]
  41fc48:	cmp	w5, #0x6b
  41fc4c:	b.ne	41fb68 <nftw@plt+0x1cfe8>  // b.any
  41fc50:	mov	x5, #0x200000              	// #2097152
  41fc54:	b	41fb84 <nftw@plt+0x1d004>
  41fc58:	cmp	w3, #0x6c
  41fc5c:	b.ne	41fd6c <nftw@plt+0x1d1ec>  // b.any
  41fc60:	cmp	x4, #0x1
  41fc64:	b.eq	41fd5c <nftw@plt+0x1d1dc>  // b.none
  41fc68:	cmp	x4, #0x2
  41fc6c:	mov	w0, #0x0                   	// #0
  41fc70:	b.ne	41f89c <nftw@plt+0x1cd1c>  // b.any
  41fc74:	ldrb	w1, [x1, #1]
  41fc78:	orr	x0, x5, #0x40
  41fc7c:	cmp	w1, #0x6c
  41fc80:	csel	w0, wzr, w0, ne  // ne = any
  41fc84:	ret
  41fc88:	cbz	x9, 41fef8 <nftw@plt+0x1d378>
  41fc8c:	mov	w0, #0x0                   	// #0
  41fc90:	cbz	w7, 41f89c <nftw@plt+0x1cd1c>
  41fc94:	ldrb	w4, [x8, #1120]
  41fc98:	cbz	w4, 41fef0 <nftw@plt+0x1d370>
  41fc9c:	ldr	w4, [x8, #1116]
  41fca0:	cmp	w4, #0xe
  41fca4:	b.le	41fef0 <nftw@plt+0x1d370>
  41fca8:	ldrb	w6, [x1]
  41fcac:	mov	w4, #0x2000                	// #8192
  41fcb0:	cmp	w6, #0x69
  41fcb4:	b.eq	41fec8 <nftw@plt+0x1d348>  // b.none
  41fcb8:	mov	w0, #0x10                  	// #16
  41fcbc:	cbnz	x5, 41fce8 <nftw@plt+0x1d168>
  41fcc0:	mov	w0, #0x20                  	// #32
  41fcc4:	cbnz	x13, 41fce8 <nftw@plt+0x1d168>
  41fcc8:	mov	w0, #0x40                  	// #64
  41fccc:	cbnz	x12, 41fce8 <nftw@plt+0x1d168>
  41fcd0:	mov	w0, #0x10000               	// #65536
  41fcd4:	cbnz	x11, 41fce8 <nftw@plt+0x1d168>
  41fcd8:	cbnz	x10, 41feac <nftw@plt+0x1d32c>
  41fcdc:	lsl	w0, w14, #24
  41fce0:	cbz	w3, 41fe94 <nftw@plt+0x1d314>
  41fce4:	orr	w0, w0, #0x400000
  41fce8:	orr	w0, w4, w0
  41fcec:	ret
  41fcf0:	sub	w30, w3, #0x30
  41fcf4:	mov	x14, #0x0                   	// #0
  41fcf8:	str	x19, [sp, #16]
  41fcfc:	nop
  41fd00:	add	x0, x14, x14, lsl #2
  41fd04:	sxtw	x30, w30
  41fd08:	mov	x19, x4
  41fd0c:	mov	x5, x6
  41fd10:	add	x14, x30, x0, lsl #1
  41fd14:	add	x6, x6, #0x1
  41fd18:	cmp	x14, #0xef
  41fd1c:	mov	x4, x18
  41fd20:	cbz	x18, 41fe24 <nftw@plt+0x1d2a4>
  41fd24:	ldrb	w3, [x6, #1]
  41fd28:	sub	x18, x18, #0x1
  41fd2c:	sub	w30, w3, #0x30
  41fd30:	and	w0, w30, #0xff
  41fd34:	ccmp	w0, #0x9, #0x2, ls  // ls = plast
  41fd38:	b.ls	41fd00 <nftw@plt+0x1d180>  // b.plast
  41fd3c:	cmp	w3, #0x78
  41fd40:	b.eq	41fe30 <nftw@plt+0x1d2b0>  // b.none
  41fd44:	mov	x5, x4
  41fd48:	sub	x4, x19, #0x2
  41fd4c:	add	x17, x17, #0x1
  41fd50:	mov	x3, x6
  41fd54:	ldr	x19, [sp, #16]
  41fd58:	b	41f930 <nftw@plt+0x1cdb0>
  41fd5c:	orr	w0, w5, #0x20
  41fd60:	ret
  41fd64:	mov	w0, w5
  41fd68:	ret
  41fd6c:	mov	w0, #0x0                   	// #0
  41fd70:	ret
  41fd74:	cmp	w3, #0x44
  41fd78:	mov	w0, #0x4020                	// #16416
  41fd7c:	csel	w0, wzr, w0, eq  // eq = none
  41fd80:	ret
  41fd84:	cmp	w3, #0x44
  41fd88:	mov	w0, #0x4010                	// #16400
  41fd8c:	csel	w0, wzr, w0, eq  // eq = none
  41fd90:	ret
  41fd94:	cmp	w3, #0x44
  41fd98:	mov	w0, #0x4010                	// #16400
  41fd9c:	csel	w0, wzr, w0, ne  // ne = any
  41fda0:	ret
  41fda4:	orr	x0, x5, #0x10
  41fda8:	cmp	x4, #0x1
  41fdac:	csel	w0, wzr, w0, ne  // ne = any
  41fdb0:	ret
  41fdb4:	mov	x5, #0x1000                	// #4096
  41fdb8:	cmp	w0, #0x55
  41fdbc:	movk	x5, #0x20, lsl #16
  41fdc0:	b.eq	41fd64 <nftw@plt+0x1d1e4>  // b.none
  41fdc4:	mov	x5, #0x200000              	// #2097152
  41fdc8:	mov	x4, #0x1                   	// #1
  41fdcc:	b	41fbb4 <nftw@plt+0x1d034>
  41fdd0:	cmp	x17, #0x0
  41fdd4:	cset	w4, ne  // ne = any
  41fdd8:	cmp	x14, #0x10
  41fddc:	csel	w3, w4, wzr, ne  // ne = any
  41fde0:	cbz	w3, 41feb8 <nftw@plt+0x1d338>
  41fde4:	tst	x14, #0x1f
  41fde8:	b.ne	41f99c <nftw@plt+0x1ce1c>  // b.any
  41fdec:	cmp	x14, #0x60
  41fdf0:	mov	w0, #0x0                   	// #0
  41fdf4:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  41fdf8:	b.ne	41f99c <nftw@plt+0x1ce1c>  // b.any
  41fdfc:	b	41fa44 <nftw@plt+0x1cec4>
  41fe00:	orr	x1, x10, x11
  41fe04:	mov	w0, #0x0                   	// #0
  41fe08:	cmp	x1, #0x0
  41fe0c:	mov	w4, #0x0                   	// #0
  41fe10:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  41fe14:	b.ne	41fa74 <nftw@plt+0x1cef4>  // b.any
  41fe18:	b	41f99c <nftw@plt+0x1ce1c>
  41fe1c:	mov	w4, #0x2000                	// #8192
  41fe20:	b	41fa74 <nftw@plt+0x1cef4>
  41fe24:	mov	x5, #0x0                   	// #0
  41fe28:	mov	x4, #0xffffffffffffffff    	// #-1
  41fe2c:	b	41fd4c <nftw@plt+0x1d1cc>
  41fe30:	add	x3, x5, #0x2
  41fe34:	sub	x4, x19, #0x3
  41fe38:	sub	x5, x19, #0x2
  41fe3c:	add	x16, x16, #0x1
  41fe40:	ldr	x19, [sp, #16]
  41fe44:	b	41f930 <nftw@plt+0x1cdb0>
  41fe48:	cmp	x2, #0x1
  41fe4c:	b.eq	41f99c <nftw@plt+0x1ce1c>  // b.none
  41fe50:	cmp	x2, #0x2
  41fe54:	b.ne	41fa74 <nftw@plt+0x1cef4>  // b.any
  41fe58:	ldrb	w1, [x1, #1]
  41fe5c:	mov	w2, #0x6c                  	// #108
  41fe60:	cmp	w1, #0x66
  41fe64:	ccmp	w1, w2, #0x4, ne  // ne = any
  41fe68:	b.ne	41fa74 <nftw@plt+0x1cef4>  // b.any
  41fe6c:	b	41f99c <nftw@plt+0x1ce1c>
  41fe70:	cmp	x16, #0x0
  41fe74:	orr	w0, w0, #0x800000
  41fe78:	mov	w1, #0x8000                	// #32768
  41fe7c:	csel	w0, w0, w1, ne  // ne = any
  41fe80:	orr	w0, w4, w0
  41fe84:	b	41f99c <nftw@plt+0x1ce1c>
  41fe88:	mov	w0, #0x20000               	// #131072
  41fe8c:	orr	w0, w4, w0
  41fe90:	b	41f99c <nftw@plt+0x1ce1c>
  41fe94:	cmp	x16, #0x0
  41fe98:	orr	w0, w0, #0x800000
  41fe9c:	mov	w1, #0x8000                	// #32768
  41fea0:	csel	w0, w0, w1, ne  // ne = any
  41fea4:	orr	w0, w4, w0
  41fea8:	b	41fcec <nftw@plt+0x1d16c>
  41feac:	mov	w0, #0x20000               	// #131072
  41feb0:	orr	w0, w4, w0
  41feb4:	b	41fcec <nftw@plt+0x1d16c>
  41feb8:	mov	w3, w4
  41febc:	b	41fdec <nftw@plt+0x1d26c>
  41fec0:	mov	x5, x15
  41fec4:	b	41f9e4 <nftw@plt+0x1ce64>
  41fec8:	cmp	x2, #0x1
  41fecc:	b.eq	41f89c <nftw@plt+0x1cd1c>  // b.none
  41fed0:	cmp	x2, #0x2
  41fed4:	b.ne	41fcb8 <nftw@plt+0x1d138>  // b.any
  41fed8:	ldrb	w1, [x1, #1]
  41fedc:	mov	w2, #0x6c                  	// #108
  41fee0:	cmp	w1, #0x66
  41fee4:	ccmp	w1, w2, #0x4, ne  // ne = any
  41fee8:	b.ne	41fcb8 <nftw@plt+0x1d138>  // b.any
  41feec:	ret
  41fef0:	mov	w4, #0x2000                	// #8192
  41fef4:	b	41fcb8 <nftw@plt+0x1d138>
  41fef8:	orr	x1, x10, x11
  41fefc:	mov	w0, #0x0                   	// #0
  41ff00:	cmp	x1, #0x0
  41ff04:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  41ff08:	b.eq	41f89c <nftw@plt+0x1cd1c>  // b.none
  41ff0c:	mov	w4, #0x0                   	// #0
  41ff10:	b	41fcb8 <nftw@plt+0x1d138>
  41ff14:	nop
  41ff18:	mov	x8, x0
  41ff1c:	cbz	x2, 420018 <nftw@plt+0x1d498>
  41ff20:	add	x4, x1, x2
  41ff24:	mov	x9, #0x0                   	// #0
  41ff28:	mov	x7, #0x0                   	// #0
  41ff2c:	mov	x10, #0x0                   	// #0
  41ff30:	mov	x6, #0x1                   	// #1
  41ff34:	ldurb	w5, [x4, #-1]
  41ff38:	sub	w3, w5, #0x49
  41ff3c:	and	w3, w3, #0xff
  41ff40:	cmp	w3, #0x2c
  41ff44:	b.hi	41ff64 <nftw@plt+0x1d3e4>  // b.pmore
  41ff48:	lsl	x3, x6, x3
  41ff4c:	tst	x3, #0x300000003
  41ff50:	b.ne	420010 <nftw@plt+0x1d490>  // b.any
  41ff54:	tst	x3, #0x800000008
  41ff58:	b.ne	41fff0 <nftw@plt+0x1d470>  // b.any
  41ff5c:	tst	x3, #0x100000001000
  41ff60:	b.ne	41ff6c <nftw@plt+0x1d3ec>  // b.any
  41ff64:	mov	w0, #0x0                   	// #0
  41ff68:	ret
  41ff6c:	add	x10, x10, #0x1
  41ff70:	sub	x4, x4, #0x1
  41ff74:	cmp	x1, x4
  41ff78:	b.ne	41ff34 <nftw@plt+0x1d3b4>  // b.any
  41ff7c:	cmp	x7, #0x2
  41ff80:	mov	w0, #0x0                   	// #0
  41ff84:	ccmp	x10, #0x1, #0x2, ls  // ls = plast
  41ff88:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
  41ff8c:	cset	w3, hi  // hi = pmore
  41ff90:	b.hi	41ff68 <nftw@plt+0x1d3e8>  // b.pmore
  41ff94:	cbz	x9, 420028 <nftw@plt+0x1d4a8>
  41ff98:	ldrb	w4, [x8, #1163]
  41ff9c:	mov	w0, w3
  41ffa0:	cbz	w4, 41ff68 <nftw@plt+0x1d3e8>
  41ffa4:	ldrb	w0, [x8, #1120]
  41ffa8:	cbz	w0, 420030 <nftw@plt+0x1d4b0>
  41ffac:	ldr	w0, [x8, #1116]
  41ffb0:	cmp	w0, #0xe
  41ffb4:	b.le	420030 <nftw@plt+0x1d4b0>
  41ffb8:	ldrb	w0, [x1]
  41ffbc:	mov	w4, #0x2000                	// #8192
  41ffc0:	cmp	w0, #0x69
  41ffc4:	b.eq	420038 <nftw@plt+0x1d4b8>  // b.none
  41ffc8:	cmp	x10, #0x0
  41ffcc:	orr	w0, w4, #0x1000
  41ffd0:	csel	w4, w0, w4, ne  // ne = any
  41ffd4:	cbz	x7, 420060 <nftw@plt+0x1d4e0>
  41ffd8:	cmp	x7, #0x1
  41ffdc:	mov	w0, #0x20                  	// #32
  41ffe0:	mov	w1, #0x40                  	// #64
  41ffe4:	csel	w0, w0, w1, eq  // eq = none
  41ffe8:	orr	w0, w0, w4
  41ffec:	ret
  41fff0:	add	x7, x7, #0x1
  41fff4:	cmp	x7, #0x2
  41fff8:	b.ne	41ff70 <nftw@plt+0x1d3f0>  // b.any
  41fffc:	ldrb	w0, [x4]
  420000:	cmp	w0, w5
  420004:	b.eq	41ff70 <nftw@plt+0x1d3f0>  // b.none
  420008:	mov	w0, #0x0                   	// #0
  42000c:	b	41ff68 <nftw@plt+0x1d3e8>
  420010:	add	x9, x9, #0x1
  420014:	b	41ff70 <nftw@plt+0x1d3f0>
  420018:	mov	w4, #0x0                   	// #0
  42001c:	mov	w0, #0x10                  	// #16
  420020:	orr	w0, w0, w4
  420024:	b	41ffec <nftw@plt+0x1d46c>
  420028:	mov	w4, #0x0                   	// #0
  42002c:	b	41ffc8 <nftw@plt+0x1d448>
  420030:	mov	w4, #0x2000                	// #8192
  420034:	b	41ffc8 <nftw@plt+0x1d448>
  420038:	mov	w0, w3
  42003c:	cmp	x2, #0x1
  420040:	b.eq	41ff68 <nftw@plt+0x1d3e8>  // b.none
  420044:	cmp	x2, #0x2
  420048:	b.ne	41ffc8 <nftw@plt+0x1d448>  // b.any
  42004c:	ldrb	w0, [x1, #1]
  420050:	cmp	w0, #0x6c
  420054:	b.ne	41ffc8 <nftw@plt+0x1d448>  // b.any
  420058:	mov	w0, #0x0                   	// #0
  42005c:	b	41ff68 <nftw@plt+0x1d3e8>
  420060:	mov	w0, #0x10                  	// #16
  420064:	orr	w0, w0, w4
  420068:	b	41ffec <nftw@plt+0x1d46c>
  42006c:	nop
  420070:	ldp	x6, x5, [x0]
  420074:	sub	sp, sp, #0x30
  420078:	ldr	x4, [x0, #16]
  42007c:	str	x4, [sp, #16]
  420080:	ldrb	w4, [x0, #16]
  420084:	negs	x3, x5
  420088:	neg	x2, x6
  42008c:	csinv	x2, x2, x6, eq  // eq = none
  420090:	stp	x2, x3, [x0]
  420094:	cmp	x1, #0x40
  420098:	b.ls	420100 <nftw@plt+0x1d580>  // b.plast
  42009c:	sub	x1, x1, #0x40
  4200a0:	mov	x7, #0xffffffffffffffff    	// #-1
  4200a4:	cmp	x1, #0x40
  4200a8:	lsl	x1, x7, x1
  4200ac:	bic	x1, x2, x1
  4200b0:	csel	x2, x1, x2, cc  // cc = lo, ul, last
  4200b4:	stp	x2, x3, [sp]
  4200b8:	cmp	x2, x6
  4200bc:	ccmp	x3, x5, #0x0, eq  // eq = none
  4200c0:	ldp	x6, x7, [sp]
  4200c4:	stp	x6, x7, [x0]
  4200c8:	cset	w5, eq  // eq = none
  4200cc:	ldr	x1, [sp, #16]
  4200d0:	str	x1, [x0, #16]
  4200d4:	eor	w1, w4, #0x1
  4200d8:	mov	w4, #0x0                   	// #0
  4200dc:	tst	w5, w1
  4200e0:	b.ne	42011c <nftw@plt+0x1d59c>  // b.any
  4200e4:	strb	w4, [x0, #17]
  4200e8:	ldp	x2, x3, [x0]
  4200ec:	stp	x2, x3, [x8]
  4200f0:	ldr	x0, [x0, #16]
  4200f4:	str	x0, [x8, #16]
  4200f8:	add	sp, sp, #0x30
  4200fc:	ret
  420100:	mov	x2, x3
  420104:	mov	x7, #0xffffffffffffffff    	// #-1
  420108:	lsl	x3, x7, x1
  42010c:	bic	x3, x2, x3
  420110:	csel	x3, x3, x2, ne  // ne = any
  420114:	mov	x2, #0x0                   	// #0
  420118:	b	4200b4 <nftw@plt+0x1d534>
  42011c:	orr	x2, x2, x3
  420120:	cmp	x2, #0x0
  420124:	cset	w4, ne  // ne = any
  420128:	b	4200e4 <nftw@plt+0x1d564>
  42012c:	nop
  420130:	and	x3, x0, #0xffffffff
  420134:	and	x4, x1, #0xffffffff
  420138:	lsr	x1, x1, #32
  42013c:	lsr	x0, x0, #32
  420140:	mov	w5, #0x1                   	// #1
  420144:	strh	w5, [x8, #16]
  420148:	mul	x2, x3, x4
  42014c:	mul	x3, x3, x1
  420150:	mul	x4, x4, x0
  420154:	lsl	x5, x3, #32
  420158:	adds	x2, x2, x5
  42015c:	lsl	x5, x4, #32
  420160:	cset	x6, cs  // cs = hs, nlast
  420164:	lsr	x4, x4, #32
  420168:	adds	x2, x2, x5
  42016c:	add	x3, x4, x3, lsr #32
  420170:	madd	x0, x0, x1, x6
  420174:	adc	x0, x0, x3
  420178:	stp	x0, x2, [x8]
  42017c:	ret
  420180:	stp	x29, x30, [sp, #-80]!
  420184:	mov	x29, sp
  420188:	stp	x19, x20, [sp, #16]
  42018c:	mov	x19, x0
  420190:	stp	x21, x22, [sp, #32]
  420194:	mov	x21, x8
  420198:	stp	x23, x24, [sp, #48]
  42019c:	mov	w23, w1
  4201a0:	mov	w24, #0x0                   	// #0
  4201a4:	str	x25, [sp, #64]
  4201a8:	strh	wzr, [x8, #16]
  4201ac:	ldrb	w1, [x0, #26]
  4201b0:	stp	xzr, xzr, [x8]
  4201b4:	add	w1, w1, #0x1
  4201b8:	strb	w1, [x0, #26]
  4201bc:	bl	431988 <nftw@plt+0x2ee08>
  4201c0:	mov	x20, x0
  4201c4:	ldrb	w0, [x0, #4]
  4201c8:	cmp	w0, #0x14
  4201cc:	b.eq	420310 <nftw@plt+0x1d790>  // b.none
  4201d0:	cmp	w0, #0x3e
  4201d4:	b.eq	420240 <nftw@plt+0x1d6c0>  // b.none
  4201d8:	cmp	w0, #0x44
  4201dc:	mov	w25, #0x1                   	// #1
  4201e0:	b.eq	420244 <nftw@plt+0x1d6c4>  // b.none
  4201e4:	cmp	w0, #0x3
  4201e8:	b.eq	420328 <nftw@plt+0x1d7a8>  // b.none
  4201ec:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4201f0:	mov	x0, x19
  4201f4:	add	x2, x2, #0x3c8
  4201f8:	mov	w1, #0x3                   	// #3
  4201fc:	bl	41f298 <nftw@plt+0x1c718>
  420200:	cbz	w24, 4202b0 <nftw@plt+0x1d730>
  420204:	ldr	x0, [x19, #448]
  420208:	ldurb	w0, [x0, #-20]
  42020c:	cmp	w0, #0x16
  420210:	b.eq	4202b0 <nftw@plt+0x1d730>  // b.none
  420214:	mov	x0, x19
  420218:	bl	431988 <nftw@plt+0x2ee08>
  42021c:	ldrb	w0, [x0, #4]
  420220:	cmp	w0, #0x15
  420224:	b.eq	4202b0 <nftw@plt+0x1d730>  // b.none
  420228:	mov	x0, x19
  42022c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  420230:	mov	w1, #0x3                   	// #3
  420234:	add	x2, x2, #0x400
  420238:	bl	41f298 <nftw@plt+0x1c718>
  42023c:	b	4202b0 <nftw@plt+0x1d730>
  420240:	mov	w25, #0x0                   	// #0
  420244:	ldr	w0, [x20, #8]
  420248:	sub	w0, w0, #0x1
  42024c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  420250:	ldr	x1, [x20, #16]
  420254:	mov	x22, x0
  420258:	ldr	w2, [x20, #8]
  42025c:	add	x1, x1, #0x1
  420260:	sub	w2, w2, #0x2
  420264:	bl	402490 <memcpy@plt>
  420268:	ldr	w0, [x20, #8]
  42026c:	sub	w0, w0, #0x2
  420270:	strb	wzr, [x22, w0, uxtw]
  420274:	ldr	x20, [x20, #8]
  420278:	mov	w3, w23
  42027c:	mov	w2, w25
  420280:	mov	x1, x22
  420284:	mov	x0, x19
  420288:	bl	425b28 <nftw@plt+0x22fa8>
  42028c:	tst	w0, #0xff
  420290:	b.eq	42029c <nftw@plt+0x1d71c>  // b.none
  420294:	mov	x0, #0x1                   	// #1
  420298:	str	x0, [x21, #8]
  42029c:	mov	x0, x22
  4202a0:	bl	402910 <free@plt>
  4202a4:	cbnz	w24, 4202d4 <nftw@plt+0x1d754>
  4202a8:	cbz	x20, 4202b0 <nftw@plt+0x1d730>
  4202ac:	str	x20, [x19, #432]
  4202b0:	ldrb	w0, [x19, #26]
  4202b4:	sub	w0, w0, #0x1
  4202b8:	strb	w0, [x19, #26]
  4202bc:	ldp	x19, x20, [sp, #16]
  4202c0:	ldp	x21, x22, [sp, #32]
  4202c4:	ldp	x23, x24, [sp, #48]
  4202c8:	ldr	x25, [sp, #64]
  4202cc:	ldp	x29, x30, [sp], #80
  4202d0:	ret
  4202d4:	ldr	x0, [x19, #448]
  4202d8:	ldurb	w0, [x0, #-20]
  4202dc:	cmp	w0, #0x16
  4202e0:	b.eq	4202a8 <nftw@plt+0x1d728>  // b.none
  4202e4:	mov	x0, x19
  4202e8:	bl	431988 <nftw@plt+0x2ee08>
  4202ec:	ldrb	w0, [x0, #4]
  4202f0:	cmp	w0, #0x15
  4202f4:	b.eq	4202a8 <nftw@plt+0x1d728>  // b.none
  4202f8:	mov	x0, x19
  4202fc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  420300:	mov	w1, #0x3                   	// #3
  420304:	add	x2, x2, #0x400
  420308:	bl	41f298 <nftw@plt+0x1c718>
  42030c:	b	4202a8 <nftw@plt+0x1d728>
  420310:	mov	x0, x19
  420314:	mov	w24, #0x1                   	// #1
  420318:	bl	431988 <nftw@plt+0x2ee08>
  42031c:	mov	x20, x0
  420320:	ldrb	w0, [x0, #4]
  420324:	b	4201d0 <nftw@plt+0x1d650>
  420328:	mov	x0, x19
  42032c:	mov	x20, #0x0                   	// #0
  420330:	bl	41f088 <nftw@plt+0x1c508>
  420334:	mov	w25, #0x1                   	// #1
  420338:	mov	x22, x0
  42033c:	cbnz	x0, 420278 <nftw@plt+0x1d6f8>
  420340:	cbz	w24, 4202b0 <nftw@plt+0x1d730>
  420344:	b	420204 <nftw@plt+0x1d684>
  420348:	sub	w1, w1, #0x41
  42034c:	lsr	x0, x0, x1
  420350:	mvn	x0, x0
  420354:	and	w0, w0, #0x1
  420358:	ret
  42035c:	nop
  420360:	stp	x29, x30, [sp, #-64]!
  420364:	mov	x4, x0
  420368:	mov	x5, x1
  42036c:	mov	x29, sp
  420370:	cmp	x1, #0x40
  420374:	ldrb	w3, [x0, #16]
  420378:	ldp	x7, x6, [x0]
  42037c:	b.hi	420464 <nftw@plt+0x1d8e4>  // b.pmore
  420380:	sub	w0, w1, #0x1
  420384:	cmp	x1, x2
  420388:	lsr	x0, x6, x0
  42038c:	mvn	x0, x0
  420390:	and	w0, w0, #0x1
  420394:	orr	w3, w3, w0
  420398:	eor	w3, w3, #0x1
  42039c:	and	x3, x3, #0xff
  4203a0:	neg	x3, x3
  4203a4:	b.hi	4203f8 <nftw@plt+0x1d878>  // b.pmore
  4203a8:	ldr	x0, [x4, #16]
  4203ac:	stp	x3, x3, [x4]
  4203b0:	str	x0, [sp, #32]
  4203b4:	mov	x1, #0xffffffffffffffff    	// #-1
  4203b8:	cmp	x5, #0x40
  4203bc:	lsl	x5, x1, x5
  4203c0:	bic	x5, x3, x5
  4203c4:	csel	x3, x5, x3, ne  // ne = any
  4203c8:	mov	x0, #0x0                   	// #0
  4203cc:	ldr	x1, [sp, #32]
  4203d0:	str	x1, [x4, #16]
  4203d4:	stp	x0, x3, [sp, #16]
  4203d8:	strb	wzr, [x4, #17]
  4203dc:	ldp	x0, x1, [sp, #16]
  4203e0:	stp	x0, x1, [x4]
  4203e4:	ldr	x2, [x4, #16]
  4203e8:	stp	x0, x1, [x8]
  4203ec:	str	x2, [x8, #16]
  4203f0:	ldp	x29, x30, [sp], #64
  4203f4:	ret
  4203f8:	cmp	x1, #0x3f
  4203fc:	b.hi	4204bc <nftw@plt+0x1d93c>  // b.pmore
  420400:	lsl	x7, x3, x1
  420404:	mov	x0, x3
  420408:	mov	x1, x3
  42040c:	orr	x3, x7, x6
  420410:	cbz	x2, 420434 <nftw@plt+0x1d8b4>
  420414:	mov	w6, #0x40                  	// #64
  420418:	sub	w6, w6, w2
  42041c:	lsr	x3, x3, x2
  420420:	lsl	x1, x1, x6
  420424:	lsl	x6, x0, x6
  420428:	orr	x3, x3, x6
  42042c:	lsr	x0, x0, x2
  420430:	orr	x0, x0, x1
  420434:	ldr	x1, [x4, #16]
  420438:	stp	x0, x3, [x4]
  42043c:	cmp	x5, #0x40
  420440:	str	x1, [sp, #32]
  420444:	b.ls	4203b4 <nftw@plt+0x1d834>  // b.plast
  420448:	sub	x1, x5, #0x40
  42044c:	mov	x5, #0xffffffffffffffff    	// #-1
  420450:	cmp	x1, #0x40
  420454:	lsl	x5, x5, x1
  420458:	bic	x5, x0, x5
  42045c:	csel	x0, x5, x0, cc  // cc = lo, ul, last
  420460:	b	4203cc <nftw@plt+0x1d84c>
  420464:	mov	x0, x7
  420468:	bl	420348 <nftw@plt+0x1d7c8>
  42046c:	tst	w0, #0xff
  420470:	ccmp	w3, #0x0, #0x0, eq  // eq = none
  420474:	csetm	x1, eq  // eq = none
  420478:	cmp	x5, x2
  42047c:	b.ls	4204a0 <nftw@plt+0x1d920>  // b.plast
  420480:	cmp	x5, #0x7f
  420484:	mov	x3, x7
  420488:	b.ls	4204b8 <nftw@plt+0x1d938>  // b.plast
  42048c:	cmp	x2, #0x3f
  420490:	b.ls	4204d0 <nftw@plt+0x1d950>  // b.plast
  420494:	sub	x2, x2, #0x40
  420498:	mov	x0, x1
  42049c:	b	420410 <nftw@plt+0x1d890>
  4204a0:	ldr	x2, [x4, #16]
  4204a4:	mov	x3, x1
  4204a8:	mov	x0, x1
  4204ac:	stp	x1, x1, [x4]
  4204b0:	str	x2, [sp, #32]
  4204b4:	b	420448 <nftw@plt+0x1d8c8>
  4204b8:	mov	x3, x1
  4204bc:	sub	w0, w5, #0x40
  4204c0:	mov	x1, x3
  4204c4:	lsl	x3, x3, x0
  4204c8:	orr	x3, x3, x7
  4204cc:	b	42048c <nftw@plt+0x1d90c>
  4204d0:	mov	x0, x3
  4204d4:	mov	x3, x6
  4204d8:	b	420410 <nftw@plt+0x1d890>
  4204dc:	nop
  4204e0:	ldrb	w13, [x0, #16]
  4204e4:	mov	x9, x0
  4204e8:	cmp	x2, x1
  4204ec:	mov	x11, x8
  4204f0:	ldp	x14, x15, [x0]
  4204f4:	b.cc	420534 <nftw@plt+0x1d9b4>  // b.lo, b.ul, b.last
  4204f8:	mov	w0, #0x0                   	// #0
  4204fc:	cbnz	w13, 42050c <nftw@plt+0x1d98c>
  420500:	orr	x14, x15, x14
  420504:	cmp	x14, #0x0
  420508:	cset	w0, ne  // ne = any
  42050c:	mov	x12, #0x0                   	// #0
  420510:	mov	x10, #0x0                   	// #0
  420514:	stp	x10, x12, [x9]
  420518:	strb	w13, [x9, #16]
  42051c:	strb	w0, [x9, #17]
  420520:	ldp	x0, x1, [x9]
  420524:	stp	x0, x1, [x11]
  420528:	ldr	x0, [x9, #16]
  42052c:	str	x0, [x11, #16]
  420530:	ret
  420534:	stp	x29, x30, [sp, #-96]!
  420538:	cmp	x2, #0x3f
  42053c:	mov	x29, sp
  420540:	b.ls	4205d8 <nftw@plt+0x1da58>  // b.plast
  420544:	sub	x0, x2, #0x40
  420548:	mov	x10, x15
  42054c:	mov	x12, #0x0                   	// #0
  420550:	cbz	x0, 420568 <nftw@plt+0x1d9e8>
  420554:	neg	w3, w0
  420558:	lsl	x10, x10, x0
  42055c:	lsr	x3, x12, x3
  420560:	orr	x10, x3, x10
  420564:	lsl	x12, x12, x0
  420568:	ldr	x0, [x9, #16]
  42056c:	stp	x10, x12, [x9]
  420570:	cmp	x1, #0x40
  420574:	str	x0, [sp, #64]
  420578:	b.ls	4205e8 <nftw@plt+0x1da68>  // b.plast
  42057c:	sub	x0, x1, #0x40
  420580:	mov	x3, #0xffffffffffffffff    	// #-1
  420584:	cmp	x0, #0x40
  420588:	lsl	x0, x3, x0
  42058c:	bic	x0, x10, x0
  420590:	csel	x10, x0, x10, cc  // cc = lo, ul, last
  420594:	stp	x10, x12, [sp, #48]
  420598:	mov	w0, #0x0                   	// #0
  42059c:	ldp	x4, x5, [sp, #48]
  4205a0:	stp	x4, x5, [x9]
  4205a4:	ldr	x3, [sp, #64]
  4205a8:	str	x3, [x9, #16]
  4205ac:	stp	x4, x5, [sp, #72]
  4205b0:	cbz	w13, 42061c <nftw@plt+0x1da9c>
  4205b4:	stp	x10, x12, [x9]
  4205b8:	strb	w13, [x9, #16]
  4205bc:	strb	w0, [x9, #17]
  4205c0:	ldp	x0, x1, [x9]
  4205c4:	stp	x0, x1, [x11]
  4205c8:	ldr	x0, [x9, #16]
  4205cc:	str	x0, [x11, #16]
  4205d0:	ldp	x29, x30, [sp], #96
  4205d4:	ret
  4205d8:	mov	x12, x15
  4205dc:	mov	x10, x14
  4205e0:	mov	x0, x2
  4205e4:	b	420550 <nftw@plt+0x1d9d0>
  4205e8:	mov	x0, #0xffffffffffffffff    	// #-1
  4205ec:	mov	x10, #0x0                   	// #0
  4205f0:	lsl	x0, x0, x1
  4205f4:	bic	x0, x12, x0
  4205f8:	csel	x12, x0, x12, ne  // ne = any
  4205fc:	stp	x10, x12, [sp, #48]
  420600:	mov	w0, #0x0                   	// #0
  420604:	ldp	x4, x5, [sp, #48]
  420608:	stp	x4, x5, [x9]
  42060c:	ldr	x3, [sp, #64]
  420610:	str	x3, [x9, #16]
  420614:	stp	x4, x5, [sp, #72]
  420618:	cbnz	w13, 4205b4 <nftw@plt+0x1da34>
  42061c:	add	x0, sp, #0x10
  420620:	add	x8, sp, #0x48
  420624:	stp	x4, x5, [sp, #16]
  420628:	str	x3, [sp, #32]
  42062c:	bl	420360 <nftw@plt+0x1d7e0>
  420630:	ldr	x1, [sp, #80]
  420634:	mov	w0, #0x1                   	// #1
  420638:	cmp	x1, x15
  42063c:	b.ne	4205b4 <nftw@plt+0x1da34>  // b.any
  420640:	ldr	x0, [sp, #72]
  420644:	cmp	x0, x14
  420648:	cset	w0, ne  // ne = any
  42064c:	b	4205b4 <nftw@plt+0x1da34>
  420650:	stp	x29, x30, [sp, #-144]!
  420654:	mov	w9, w3
  420658:	cmp	w3, #0x5
  42065c:	mov	x29, sp
  420660:	stp	x19, x20, [sp, #16]
  420664:	mov	x19, x1
  420668:	mov	x20, x2
  42066c:	stp	x21, x22, [sp, #32]
  420670:	mov	x21, x8
  420674:	ldrb	w3, [x1, #16]
  420678:	stp	x23, x24, [sp, #48]
  42067c:	ldrb	w23, [x2, #16]
  420680:	ldr	x24, [x2]
  420684:	ldr	x1, [x1]
  420688:	ldr	x2, [x19, #8]
  42068c:	ldr	x22, [x20, #8]
  420690:	ldr	x10, [x0, #1208]
  420694:	b.eq	4207ac <nftw@plt+0x1dc2c>  // b.none
  420698:	b.hi	420700 <nftw@plt+0x1db80>  // b.pmore
  42069c:	cmp	w9, #0x4
  4206a0:	b.ne	420768 <nftw@plt+0x1dbe8>  // b.any
  4206a4:	adds	x0, x2, x22
  4206a8:	mov	x5, x0
  4206ac:	adc	x4, x1, x24
  4206b0:	cbz	w3, 420894 <nftw@plt+0x1dd14>
  4206b4:	cmp	x10, #0x40
  4206b8:	mov	w23, #0x1                   	// #1
  4206bc:	b.ls	4208a0 <nftw@plt+0x1dd20>  // b.plast
  4206c0:	sub	x0, x10, #0x40
  4206c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4206c8:	cmp	x0, #0x40
  4206cc:	mov	w6, #0x0                   	// #0
  4206d0:	lsl	x0, x2, x0
  4206d4:	bic	x0, x4, x0
  4206d8:	csel	x4, x0, x4, cc  // cc = lo, ul, last
  4206dc:	cbz	w3, 4209c4 <nftw@plt+0x1de44>
  4206e0:	stp	x4, x5, [x21]
  4206e4:	strb	w23, [x21, #16]
  4206e8:	strb	w6, [x21, #17]
  4206ec:	ldp	x19, x20, [sp, #16]
  4206f0:	ldp	x21, x22, [sp, #32]
  4206f4:	ldp	x23, x24, [sp, #48]
  4206f8:	ldp	x29, x30, [sp], #144
  4206fc:	ret
  420700:	sub	w2, w9, #0xc
  420704:	cmp	w2, #0x1
  420708:	b.hi	420768 <nftw@plt+0x1dbe8>  // b.pmore
  42070c:	cbz	w23, 4208e4 <nftw@plt+0x1dd64>
  420710:	add	x0, sp, #0x50
  420714:	add	x8, sp, #0x70
  420718:	ldp	x4, x5, [x19]
  42071c:	cmp	x24, #0x0
  420720:	ldr	x3, [x19, #16]
  420724:	stp	x4, x5, [sp, #80]
  420728:	csinv	x22, x22, xzr, eq  // eq = none
  42072c:	str	x3, [sp, #96]
  420730:	mov	x2, x22
  420734:	mov	x1, x10
  420738:	cmp	w9, #0xd
  42073c:	b.eq	420954 <nftw@plt+0x1ddd4>  // b.none
  420740:	bl	420360 <nftw@plt+0x1d7e0>
  420744:	ldr	x24, [sp, #112]
  420748:	str	x24, [x19]
  42074c:	ldr	x0, [sp, #120]
  420750:	str	x0, [x19, #8]
  420754:	ldr	x23, [sp, #128]
  420758:	mov	x22, x0
  42075c:	str	x23, [x19, #16]
  420760:	and	w23, w23, #0xff
  420764:	b	420780 <nftw@plt+0x1dc00>
  420768:	ldrb	w1, [x0, #1154]
  42076c:	cbnz	w1, 420870 <nftw@plt+0x1dcf0>
  420770:	ldp	x0, x1, [x20]
  420774:	stp	x0, x1, [x19]
  420778:	ldr	x0, [x20, #16]
  42077c:	str	x0, [x19, #16]
  420780:	stp	x24, x22, [x19]
  420784:	strb	w23, [x19, #16]
  420788:	ldp	x0, x1, [x19]
  42078c:	stp	x0, x1, [x21]
  420790:	ldr	x0, [x19, #16]
  420794:	str	x0, [x21, #16]
  420798:	ldp	x19, x20, [sp, #16]
  42079c:	ldp	x21, x22, [sp, #32]
  4207a0:	ldp	x23, x24, [sp, #48]
  4207a4:	ldp	x29, x30, [sp], #144
  4207a8:	ret
  4207ac:	subs	x0, x2, x22
  4207b0:	cmp	x2, x22
  4207b4:	mov	x4, x0
  4207b8:	sbc	x6, x1, x24
  4207bc:	cbnz	w3, 42080c <nftw@plt+0x1dc8c>
  4207c0:	mov	w3, w23
  4207c4:	cmp	x10, #0x40
  4207c8:	b.ls	420818 <nftw@plt+0x1dc98>  // b.plast
  4207cc:	sub	x0, x10, #0x40
  4207d0:	mov	x2, #0xffffffffffffffff    	// #-1
  4207d4:	cmp	x0, #0x40
  4207d8:	mov	w5, #0x0                   	// #0
  4207dc:	lsl	x0, x2, x0
  4207e0:	bic	x0, x6, x0
  4207e4:	csel	x6, x0, x6, cc  // cc = lo, ul, last
  4207e8:	cbz	w3, 42095c <nftw@plt+0x1dddc>
  4207ec:	stp	x6, x4, [x21]
  4207f0:	strb	w23, [x21, #16]
  4207f4:	strb	w5, [x21, #17]
  4207f8:	ldp	x19, x20, [sp, #16]
  4207fc:	ldp	x21, x22, [sp, #32]
  420800:	ldp	x23, x24, [sp, #48]
  420804:	ldp	x29, x30, [sp], #144
  420808:	ret
  42080c:	cmp	x10, #0x40
  420810:	mov	w23, #0x1                   	// #1
  420814:	b.hi	4207cc <nftw@plt+0x1dc4c>  // b.pmore
  420818:	mov	x4, #0xffffffffffffffff    	// #-1
  42081c:	lsl	x4, x4, x10
  420820:	bic	x4, x0, x4
  420824:	csel	x4, x4, x0, ne  // ne = any
  420828:	cbnz	w3, 420998 <nftw@plt+0x1de18>
  42082c:	sub	w1, w10, #0x1
  420830:	mov	w5, #0x0                   	// #0
  420834:	mov	x6, #0x0                   	// #0
  420838:	lsr	x2, x2, x1
  42083c:	mvn	x2, x2
  420840:	lsr	x0, x22, x1
  420844:	mvn	x0, x0
  420848:	and	w2, w2, #0x1
  42084c:	and	w0, w0, #0x1
  420850:	cmp	w0, w2
  420854:	b.eq	4207ec <nftw@plt+0x1dc6c>  // b.none
  420858:	lsr	x5, x4, x1
  42085c:	mvn	x5, x5
  420860:	and	w5, w5, #0x1
  420864:	mov	x6, #0x0                   	// #0
  420868:	eor	w5, w5, w2
  42086c:	b	4207ec <nftw@plt+0x1dc6c>
  420870:	ldrb	w1, [x0, #1152]
  420874:	cbz	w1, 420880 <nftw@plt+0x1dd00>
  420878:	ldr	w1, [x0, #28]
  42087c:	cbnz	w1, 420770 <nftw@plt+0x1dbf0>
  420880:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  420884:	mov	w1, #0x15                  	// #21
  420888:	add	x2, x2, #0x428
  42088c:	bl	41f378 <nftw@plt+0x1c7f8>
  420890:	b	420770 <nftw@plt+0x1dbf0>
  420894:	mov	w3, w23
  420898:	cmp	x10, #0x40
  42089c:	b.hi	4206c0 <nftw@plt+0x1db40>  // b.pmore
  4208a0:	mov	x1, #0xffffffffffffffff    	// #-1
  4208a4:	lsl	x1, x1, x10
  4208a8:	bic	x1, x0, x1
  4208ac:	csel	x5, x1, x0, ne  // ne = any
  4208b0:	cbnz	w3, 4209a4 <nftw@plt+0x1de24>
  4208b4:	sub	w1, w10, #0x1
  4208b8:	lsr	x2, x2, x1
  4208bc:	mvn	x2, x2
  4208c0:	lsr	x0, x22, x1
  4208c4:	mvn	x0, x0
  4208c8:	and	w2, w2, #0x1
  4208cc:	and	w0, w0, #0x1
  4208d0:	cmp	w0, w2
  4208d4:	b.eq	420a00 <nftw@plt+0x1de80>  // b.none
  4208d8:	mov	w6, #0x0                   	// #0
  4208dc:	mov	x4, #0x0                   	// #0
  4208e0:	b	4206e0 <nftw@plt+0x1db60>
  4208e4:	cmp	x10, #0x40
  4208e8:	b.hi	4209b0 <nftw@plt+0x1de30>  // b.pmore
  4208ec:	sub	w0, w10, #0x1
  4208f0:	lsr	x0, x22, x0
  4208f4:	mvn	x0, x0
  4208f8:	and	w0, w0, #0x1
  4208fc:	cbnz	w0, 420710 <nftw@plt+0x1db90>
  420900:	ldp	x2, x3, [x20]
  420904:	cmp	w9, #0xd
  420908:	cset	w9, ne  // ne = any
  42090c:	add	x0, sp, #0x50
  420910:	ldr	x4, [x20, #16]
  420914:	add	w9, w9, #0xc
  420918:	mov	x1, x10
  42091c:	add	x8, sp, #0x70
  420920:	str	x0, [sp, #72]
  420924:	stp	x2, x3, [sp, #80]
  420928:	str	x4, [sp, #96]
  42092c:	bl	420070 <nftw@plt+0x1d4f0>
  420930:	ldr	x1, [sp, #120]
  420934:	str	x1, [x20, #8]
  420938:	ldr	x0, [sp, #72]
  42093c:	mov	x22, x1
  420940:	ldr	x24, [sp, #112]
  420944:	str	x24, [x20]
  420948:	ldr	x1, [sp, #128]
  42094c:	str	x1, [x20, #16]
  420950:	b	420718 <nftw@plt+0x1db98>
  420954:	bl	4204e0 <nftw@plt+0x1d960>
  420958:	b	420744 <nftw@plt+0x1dbc4>
  42095c:	mov	x0, x1
  420960:	mov	x1, x10
  420964:	bl	420348 <nftw@plt+0x1d7c8>
  420968:	and	w2, w0, #0xff
  42096c:	mov	x1, x10
  420970:	mov	x0, x24
  420974:	bl	420348 <nftw@plt+0x1d7c8>
  420978:	cmp	w2, w0, uxtb
  42097c:	b.eq	4207ec <nftw@plt+0x1dc6c>  // b.none
  420980:	mov	x1, x10
  420984:	mov	x0, x6
  420988:	bl	420348 <nftw@plt+0x1d7c8>
  42098c:	and	w5, w0, #0xff
  420990:	eor	w5, w5, w2
  420994:	b	4207ec <nftw@plt+0x1dc6c>
  420998:	mov	x6, #0x0                   	// #0
  42099c:	mov	w5, #0x0                   	// #0
  4209a0:	b	4207ec <nftw@plt+0x1dc6c>
  4209a4:	mov	x4, #0x0                   	// #0
  4209a8:	mov	w6, #0x0                   	// #0
  4209ac:	b	4206e0 <nftw@plt+0x1db60>
  4209b0:	mov	x1, x10
  4209b4:	mov	x0, x24
  4209b8:	bl	420348 <nftw@plt+0x1d7c8>
  4209bc:	and	w0, w0, #0xff
  4209c0:	b	4208fc <nftw@plt+0x1dd7c>
  4209c4:	mov	x0, x1
  4209c8:	mov	x1, x10
  4209cc:	bl	420348 <nftw@plt+0x1d7c8>
  4209d0:	and	w2, w0, #0xff
  4209d4:	mov	x1, x10
  4209d8:	mov	x0, x24
  4209dc:	bl	420348 <nftw@plt+0x1d7c8>
  4209e0:	cmp	w2, w0, uxtb
  4209e4:	b.ne	4206e0 <nftw@plt+0x1db60>  // b.any
  4209e8:	mov	x1, x10
  4209ec:	mov	x0, x4
  4209f0:	bl	420348 <nftw@plt+0x1d7c8>
  4209f4:	and	w6, w0, #0xff
  4209f8:	eor	w6, w6, w2
  4209fc:	b	4206e0 <nftw@plt+0x1db60>
  420a00:	lsr	x0, x5, x1
  420a04:	mvn	x0, x0
  420a08:	and	w6, w0, #0x1
  420a0c:	mov	x4, #0x0                   	// #0
  420a10:	eor	w6, w6, w2
  420a14:	b	4206e0 <nftw@plt+0x1db60>
  420a18:	and	w5, w5, #0xff
  420a1c:	tst	w2, #0xff
  420a20:	mov	x8, x1
  420a24:	ccmp	w5, #0x0, #0x0, eq  // eq = none
  420a28:	mov	x7, x0
  420a2c:	b.eq	420a5c <nftw@plt+0x1dedc>  // b.none
  420a30:	cmp	x7, x3
  420a34:	mov	w5, #0x1                   	// #1
  420a38:	b.ls	420a44 <nftw@plt+0x1dec4>  // b.plast
  420a3c:	mov	w0, w5
  420a40:	ret
  420a44:	cset	w5, eq  // eq = none
  420a48:	cmp	x8, x4
  420a4c:	cset	w0, cs  // cs = hs, nlast
  420a50:	and	w5, w5, w0
  420a54:	mov	w0, w5
  420a58:	ret
  420a5c:	cmp	x6, #0x40
  420a60:	b.hi	420a8c <nftw@plt+0x1df0c>  // b.pmore
  420a64:	sub	w6, w6, #0x1
  420a68:	lsr	x5, x1, x6
  420a6c:	mvn	x5, x5
  420a70:	lsr	x6, x4, x6
  420a74:	mvn	x2, x6
  420a78:	and	w5, w5, #0x1
  420a7c:	and	w2, w2, #0x1
  420a80:	cmp	w2, w5
  420a84:	b.ne	420a3c <nftw@plt+0x1debc>  // b.any
  420a88:	b	420a30 <nftw@plt+0x1deb0>
  420a8c:	stp	x29, x30, [sp, #-16]!
  420a90:	mov	x1, x6
  420a94:	mov	x29, sp
  420a98:	bl	420348 <nftw@plt+0x1d7c8>
  420a9c:	and	w5, w0, #0xff
  420aa0:	mov	x1, x6
  420aa4:	mov	x0, x3
  420aa8:	bl	420348 <nftw@plt+0x1d7c8>
  420aac:	and	w2, w0, #0xff
  420ab0:	cmp	w2, w5
  420ab4:	b.ne	420ad4 <nftw@plt+0x1df54>  // b.any
  420ab8:	cmp	x7, x3
  420abc:	mov	w5, #0x1                   	// #1
  420ac0:	b.hi	420ad4 <nftw@plt+0x1df54>  // b.pmore
  420ac4:	cset	w5, eq  // eq = none
  420ac8:	cmp	x8, x4
  420acc:	cset	w0, cs  // cs = hs, nlast
  420ad0:	and	w5, w5, w0
  420ad4:	mov	w0, w5
  420ad8:	ldp	x29, x30, [sp], #16
  420adc:	ret
  420ae0:	b	41f850 <nftw@plt+0x1ccd0>
  420ae4:	nop
  420ae8:	b	41ff18 <nftw@plt+0x1d398>
  420aec:	nop
  420af0:	cmp	w0, #0x4a
  420af4:	b.eq	420b20 <nftw@plt+0x1dfa0>  // b.none
  420af8:	cmp	w0, #0x4b
  420afc:	b.eq	420b28 <nftw@plt+0x1dfa8>  // b.none
  420b00:	cmp	w0, #0x4c
  420b04:	b.eq	420b30 <nftw@plt+0x1dfb0>  // b.none
  420b08:	cmp	w0, #0x4d
  420b0c:	b.eq	420b38 <nftw@plt+0x1dfb8>  // b.none
  420b10:	cmp	w0, #0x4e
  420b14:	mov	w1, #0x42                  	// #66
  420b18:	csel	w0, w0, w1, ne  // ne = any
  420b1c:	ret
  420b20:	mov	w0, #0x3e                  	// #62
  420b24:	ret
  420b28:	mov	w0, #0x3f                  	// #63
  420b2c:	ret
  420b30:	mov	w0, #0x40                  	// #64
  420b34:	ret
  420b38:	mov	w0, #0x41                  	// #65
  420b3c:	ret
  420b40:	cmp	w0, #0x3e
  420b44:	b.eq	420b70 <nftw@plt+0x1dff0>  // b.none
  420b48:	cmp	w0, #0x3f
  420b4c:	b.eq	420b78 <nftw@plt+0x1dff8>  // b.none
  420b50:	cmp	w0, #0x40
  420b54:	b.eq	420b80 <nftw@plt+0x1e000>  // b.none
  420b58:	cmp	w0, #0x41
  420b5c:	b.eq	420b88 <nftw@plt+0x1e008>  // b.none
  420b60:	cmp	w0, #0x42
  420b64:	mov	w1, #0x4e                  	// #78
  420b68:	csel	w0, w0, w1, ne  // ne = any
  420b6c:	ret
  420b70:	mov	w0, #0x4a                  	// #74
  420b74:	ret
  420b78:	mov	w0, #0x4b                  	// #75
  420b7c:	ret
  420b80:	mov	w0, #0x4c                  	// #76
  420b84:	ret
  420b88:	mov	w0, #0x4d                  	// #77
  420b8c:	ret
  420b90:	cmp	w0, #0x45
  420b94:	b.eq	420bc0 <nftw@plt+0x1e040>  // b.none
  420b98:	cmp	w0, #0x46
  420b9c:	b.eq	420bc8 <nftw@plt+0x1e048>  // b.none
  420ba0:	cmp	w0, #0x47
  420ba4:	b.eq	420bd0 <nftw@plt+0x1e050>  // b.none
  420ba8:	cmp	w0, #0x48
  420bac:	b.eq	420bd8 <nftw@plt+0x1e058>  // b.none
  420bb0:	cmp	w0, #0x49
  420bb4:	mov	w1, #0x3c                  	// #60
  420bb8:	csel	w0, w0, w1, ne  // ne = any
  420bbc:	ret
  420bc0:	mov	w0, #0x38                  	// #56
  420bc4:	ret
  420bc8:	mov	w0, #0x39                  	// #57
  420bcc:	ret
  420bd0:	mov	w0, #0x3a                  	// #58
  420bd4:	ret
  420bd8:	mov	w0, #0x3b                  	// #59
  420bdc:	ret
  420be0:	cmp	w0, #0x38
  420be4:	b.eq	420c10 <nftw@plt+0x1e090>  // b.none
  420be8:	cmp	w0, #0x39
  420bec:	b.eq	420c18 <nftw@plt+0x1e098>  // b.none
  420bf0:	cmp	w0, #0x3a
  420bf4:	b.eq	420c20 <nftw@plt+0x1e0a0>  // b.none
  420bf8:	cmp	w0, #0x3b
  420bfc:	b.eq	420c28 <nftw@plt+0x1e0a8>  // b.none
  420c00:	cmp	w0, #0x3c
  420c04:	mov	w1, #0x49                  	// #73
  420c08:	csel	w0, w0, w1, ne  // ne = any
  420c0c:	ret
  420c10:	mov	w0, #0x45                  	// #69
  420c14:	ret
  420c18:	mov	w0, #0x46                  	// #70
  420c1c:	ret
  420c20:	mov	w0, #0x47                  	// #71
  420c24:	ret
  420c28:	mov	w0, #0x48                  	// #72
  420c2c:	ret
  420c30:	sub	w0, w0, #0x4a
  420c34:	cmp	w0, #0x4
  420c38:	cset	w0, ls  // ls = plast
  420c3c:	ret
  420c40:	sub	w0, w0, #0x45
  420c44:	cmp	w0, #0x4
  420c48:	cset	w0, ls  // ls = plast
  420c4c:	ret
  420c50:	ldr	w2, [x0, #8]
  420c54:	ldr	x0, [x0, #16]
  420c58:	cbz	w2, 420cc8 <nftw@plt+0x1e148>
  420c5c:	mov	x1, #0x0                   	// #0
  420c60:	mov	w4, #0x22                  	// #34
  420c64:	b	420c70 <nftw@plt+0x1e0f0>
  420c68:	cmp	w2, w1
  420c6c:	b.ls	420cac <nftw@plt+0x1e12c>  // b.plast
  420c70:	ldrb	w3, [x0, x1]
  420c74:	add	w5, w1, #0x1
  420c78:	add	x1, x1, #0x1
  420c7c:	cmp	w3, #0x27
  420c80:	ccmp	w3, w4, #0x4, ne  // ne = any
  420c84:	b.ne	420c68 <nftw@plt+0x1e0e8>  // b.any
  420c88:	mov	w4, w2
  420c8c:	sub	w2, w2, #0x1
  420c90:	ldrb	w1, [x0, w2, uxtw]
  420c94:	cmp	w1, w3
  420c98:	b.eq	420ca4 <nftw@plt+0x1e124>  // b.none
  420c9c:	cbnz	w2, 420c88 <nftw@plt+0x1e108>
  420ca0:	ret
  420ca4:	add	x0, x0, w4, uxtw
  420ca8:	ret
  420cac:	cmp	w2, w5
  420cb0:	add	x1, x0, w5, uxtw
  420cb4:	b.ne	420cc0 <nftw@plt+0x1e140>  // b.any
  420cb8:	mov	x0, x1
  420cbc:	ret
  420cc0:	ldrb	w3, [x0, w5, uxtw]
  420cc4:	b	420c88 <nftw@plt+0x1e108>
  420cc8:	mov	x1, x0
  420ccc:	mov	x0, x1
  420cd0:	b	420cbc <nftw@plt+0x1e13c>
  420cd4:	nop
  420cd8:	stp	x29, x30, [sp, #-112]!
  420cdc:	mov	x29, sp
  420ce0:	stp	x19, x20, [sp, #16]
  420ce4:	stp	x23, x24, [sp, #48]
  420ce8:	mov	x24, x0
  420cec:	stp	x25, x26, [sp, #64]
  420cf0:	mov	w25, w3
  420cf4:	stp	x27, x28, [sp, #80]
  420cf8:	mov	x27, x2
  420cfc:	ldr	x20, [x1, #16]
  420d00:	cbz	x2, 420d08 <nftw@plt+0x1e188>
  420d04:	str	xzr, [x2]
  420d08:	ldr	w28, [x1, #8]
  420d0c:	cmp	w28, #0x1
  420d10:	b.eq	420f98 <nftw@plt+0x1e418>  // b.none
  420d14:	mov	x5, x20
  420d18:	stp	x21, x22, [sp, #32]
  420d1c:	add	x28, x20, w28, uxtw
  420d20:	ldrb	w4, [x5], #1
  420d24:	cmp	w4, #0x30
  420d28:	b.eq	420eb8 <nftw@plt+0x1e338>  // b.none
  420d2c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x205a0>
  420d30:	add	x21, x21, #0x248
  420d34:	mov	w9, #0x0                   	// #0
  420d38:	mov	w26, #0xa                   	// #10
  420d3c:	mov	w7, w4
  420d40:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  420d44:	mov	x22, x5
  420d48:	add	x6, x6, #0xf30
  420d4c:	mov	w8, #0x0                   	// #0
  420d50:	mov	w0, #0x0                   	// #0
  420d54:	ldrh	w7, [x21, x7, lsl #1]
  420d58:	mov	w23, #0x0                   	// #0
  420d5c:	mov	w19, #0x0                   	// #0
  420d60:	tbnz	w7, #2, 420db0 <nftw@plt+0x1e230>
  420d64:	nop
  420d68:	ands	w7, w9, w7, lsr #8
  420d6c:	b.ne	420db0 <nftw@plt+0x1e230>  // b.any
  420d70:	cmp	w4, #0x27
  420d74:	b.eq	420e14 <nftw@plt+0x1e294>  // b.none
  420d78:	cmp	w4, #0x2e
  420d7c:	b.ne	420fec <nftw@plt+0x1e46c>  // b.any
  420d80:	cbnz	w8, 420dd4 <nftw@plt+0x1e254>
  420d84:	ldrb	w4, [x5]
  420d88:	cmp	w4, #0x27
  420d8c:	b.eq	420dcc <nftw@plt+0x1e24c>  // b.none
  420d90:	cbnz	w23, 420f04 <nftw@plt+0x1e384>
  420d94:	mov	w23, #0x1                   	// #1
  420d98:	mov	w7, w4
  420d9c:	mov	x20, x5
  420da0:	add	x5, x5, #0x1
  420da4:	mov	x22, x5
  420da8:	ldrh	w7, [x21, x7, lsl #1]
  420dac:	tbz	w7, #2, 420d68 <nftw@plt+0x1e1e8>
  420db0:	ldrb	w1, [x6, w4, sxtw]
  420db4:	mov	w8, #0x0                   	// #0
  420db8:	ldrb	w4, [x5]
  420dbc:	mov	w0, #0x1                   	// #1
  420dc0:	cmp	w19, w1
  420dc4:	csel	w19, w19, w1, cs  // cs = hs, nlast
  420dc8:	b	420d98 <nftw@plt+0x1e218>
  420dcc:	ldrb	w1, [x24, #1166]
  420dd0:	cbz	w1, 420d90 <nftw@plt+0x1e210>
  420dd4:	mov	w2, w25
  420dd8:	mov	x0, x24
  420ddc:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  420de0:	mov	w3, #0x0                   	// #0
  420de4:	add	x4, x4, #0x548
  420de8:	mov	w1, #0x3                   	// #3
  420dec:	bl	41f458 <nftw@plt+0x1c8d8>
  420df0:	mov	w19, #0x0                   	// #0
  420df4:	ldp	x21, x22, [sp, #32]
  420df8:	mov	w0, w19
  420dfc:	ldp	x19, x20, [sp, #16]
  420e00:	ldp	x23, x24, [sp, #48]
  420e04:	ldp	x25, x26, [sp, #64]
  420e08:	ldp	x27, x28, [sp, #80]
  420e0c:	ldp	x29, x30, [sp], #112
  420e10:	ret
  420e14:	ldrb	w1, [x24, #1166]
  420e18:	cbnz	w1, 420ea8 <nftw@plt+0x1e328>
  420e1c:	cmp	w26, #0xa
  420e20:	b.ls	420e2c <nftw@plt+0x1e2ac>  // b.plast
  420e24:	cmp	w26, #0x10
  420e28:	b.eq	421154 <nftw@plt+0x1e5d4>  // b.none
  420e2c:	cbnz	w8, 4210d8 <nftw@plt+0x1e558>
  420e30:	eor	w1, w23, #0x1
  420e34:	cmp	w26, #0x10
  420e38:	and	w1, w1, #0x1
  420e3c:	mov	x22, x20
  420e40:	csel	w1, w1, wzr, ne  // ne = any
  420e44:	and	w2, w23, #0x1
  420e48:	cbz	w1, 421028 <nftw@plt+0x1e4a8>
  420e4c:	sub	x28, x28, x20
  420e50:	mov	x1, x20
  420e54:	mov	x2, x28
  420e58:	mov	x0, x24
  420e5c:	bl	41f850 <nftw@plt+0x1ccd0>
  420e60:	mov	w21, w0
  420e64:	tst	w0, #0x300000
  420e68:	b.ne	421248 <nftw@plt+0x1e6c8>  // b.any
  420e6c:	cmp	w19, w26
  420e70:	b.cc	4212cc <nftw@plt+0x1e74c>  // b.lo, b.ul, b.last
  420e74:	add	w5, w19, #0x30
  420e78:	cmp	w26, #0x2
  420e7c:	b.ne	42112c <nftw@plt+0x1e5ac>  // b.any
  420e80:	mov	w2, w25
  420e84:	mov	x0, x24
  420e88:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  420e8c:	mov	w3, #0x0                   	// #0
  420e90:	add	x4, x4, #0x620
  420e94:	mov	w1, #0x3                   	// #3
  420e98:	mov	w19, #0x0                   	// #0
  420e9c:	bl	41f458 <nftw@plt+0x1c8d8>
  420ea0:	ldp	x21, x22, [sp, #32]
  420ea4:	b	420df8 <nftw@plt+0x1e278>
  420ea8:	cbnz	w8, 421100 <nftw@plt+0x1e580>
  420eac:	ldrb	w4, [x5]
  420eb0:	mov	w8, #0x1                   	// #1
  420eb4:	b	420d98 <nftw@plt+0x1e218>
  420eb8:	ldrb	w4, [x20, #1]
  420ebc:	and	w0, w4, #0xffffffdf
  420ec0:	and	w0, w0, #0xff
  420ec4:	cmp	w0, #0x58
  420ec8:	b.ne	420f44 <nftw@plt+0x1e3c4>  // b.any
  420ecc:	ldrb	w0, [x20, #2]
  420ed0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x205a0>
  420ed4:	add	x21, x21, #0x248
  420ed8:	cmp	w0, #0x2e
  420edc:	b.eq	420fb8 <nftw@plt+0x1e438>  // b.none
  420ee0:	ldrh	w1, [x21, w0, sxtw #1]
  420ee4:	tbnz	w1, #8, 420fb8 <nftw@plt+0x1e438>
  420ee8:	cmp	w0, #0x27
  420eec:	b.eq	421278 <nftw@plt+0x1e6f8>  // b.none
  420ef0:	mov	x20, x5
  420ef4:	mov	w9, #0x0                   	// #0
  420ef8:	add	x5, x5, #0x1
  420efc:	mov	w26, #0x8                   	// #8
  420f00:	b	420d3c <nftw@plt+0x1e1bc>
  420f04:	mov	w2, w25
  420f08:	mov	x0, x24
  420f0c:	mov	w3, #0x0                   	// #0
  420f10:	mov	w1, #0x3                   	// #3
  420f14:	mov	w19, #0x0                   	// #0
  420f18:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  420f1c:	add	x4, x4, #0x578
  420f20:	bl	41f458 <nftw@plt+0x1c8d8>
  420f24:	mov	w0, w19
  420f28:	ldp	x19, x20, [sp, #16]
  420f2c:	ldp	x21, x22, [sp, #32]
  420f30:	ldp	x23, x24, [sp, #48]
  420f34:	ldp	x25, x26, [sp, #64]
  420f38:	ldp	x27, x28, [sp, #80]
  420f3c:	ldp	x29, x30, [sp], #112
  420f40:	ret
  420f44:	cmp	w0, #0x42
  420f48:	b.ne	420fd0 <nftw@plt+0x1e450>  // b.any
  420f4c:	ldrb	w1, [x20, #2]
  420f50:	sub	w0, w1, #0x30
  420f54:	and	w0, w0, #0xff
  420f58:	cmp	w0, #0x1
  420f5c:	b.ls	421228 <nftw@plt+0x1e6a8>  // b.plast
  420f60:	cmp	w1, #0x27
  420f64:	b.ne	420fd0 <nftw@plt+0x1e450>  // b.any
  420f68:	ldrb	w1, [x24, #1166]
  420f6c:	cbz	w1, 420fd0 <nftw@plt+0x1e450>
  420f70:	mov	w2, w25
  420f74:	mov	x0, x24
  420f78:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  420f7c:	mov	w3, #0x0                   	// #0
  420f80:	add	x4, x4, #0x500
  420f84:	mov	w1, #0x3                   	// #3
  420f88:	mov	w19, #0x0                   	// #0
  420f8c:	bl	41f458 <nftw@plt+0x1c8d8>
  420f90:	ldp	x21, x22, [sp, #32]
  420f94:	b	420df8 <nftw@plt+0x1e278>
  420f98:	mov	w19, #0x111                 	// #273
  420f9c:	mov	w0, w19
  420fa0:	ldp	x19, x20, [sp, #16]
  420fa4:	ldp	x23, x24, [sp, #48]
  420fa8:	ldp	x25, x26, [sp, #64]
  420fac:	ldp	x27, x28, [sp, #80]
  420fb0:	ldp	x29, x30, [sp], #112
  420fb4:	ret
  420fb8:	add	x20, x20, #0x2
  420fbc:	mov	w4, w0
  420fc0:	add	x5, x20, #0x1
  420fc4:	mov	w9, #0x1                   	// #1
  420fc8:	mov	w26, #0x10                  	// #16
  420fcc:	b	420d3c <nftw@plt+0x1e1bc>
  420fd0:	mov	x20, x5
  420fd4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x205a0>
  420fd8:	add	x5, x5, #0x1
  420fdc:	add	x21, x21, #0x248
  420fe0:	mov	w9, #0x0                   	// #0
  420fe4:	mov	w26, #0x8                   	// #8
  420fe8:	b	420d3c <nftw@plt+0x1e1bc>
  420fec:	cmp	w26, #0xa
  420ff0:	b.ls	4216a0 <nftw@plt+0x1eb20>  // b.plast
  420ff4:	cmp	w26, #0x10
  420ff8:	b.ne	420e2c <nftw@plt+0x1e2ac>  // b.any
  420ffc:	and	w4, w4, #0xffffffdf
  421000:	cmp	w4, #0x50
  421004:	b.ne	421154 <nftw@plt+0x1e5d4>  // b.any
  421008:	cbnz	w8, 421374 <nftw@plt+0x1e7f4>
  42100c:	ldrb	w1, [x5]
  421010:	mov	w2, #0x1                   	// #1
  421014:	mov	w23, #0x2                   	// #2
  421018:	cmp	w1, #0x27
  42101c:	b.ne	421028 <nftw@plt+0x1e4a8>  // b.any
  421020:	ldrb	w1, [x24, #1166]
  421024:	cbnz	w1, 421374 <nftw@plt+0x1e7f4>
  421028:	cmp	w2, #0x0
  42102c:	ccmp	w26, #0x8, #0x0, ne  // ne = any
  421030:	b.ne	4213d4 <nftw@plt+0x1e854>  // b.any
  421034:	cmp	w19, #0x9
  421038:	mov	w26, #0xa                   	// #10
  42103c:	b.hi	421128 <nftw@plt+0x1e5a8>  // b.pmore
  421040:	cmp	w23, #0x2
  421044:	b.eq	4211cc <nftw@plt+0x1e64c>  // b.none
  421048:	sub	x20, x28, x22
  42104c:	mov	x1, x22
  421050:	mov	x2, x20
  421054:	mov	x0, x24
  421058:	str	w7, [sp, #108]
  42105c:	bl	41f850 <nftw@plt+0x1ccd0>
  421060:	mov	w19, w0
  421064:	cbnz	w0, 4214e8 <nftw@plt+0x1e968>
  421068:	ldrb	w0, [x24, #1161]
  42106c:	cbz	w0, 421674 <nftw@plt+0x1eaf4>
  421070:	ldr	w7, [sp, #108]
  421074:	cbz	x27, 42107c <nftw@plt+0x1e4fc>
  421078:	str	x22, [x27]
  42107c:	cmp	x28, x22
  421080:	b.eq	4215ec <nftw@plt+0x1ea6c>  // b.none
  421084:	ldrb	w0, [x24, #1138]
  421088:	cbnz	w0, 4215f8 <nftw@plt+0x1ea78>
  42108c:	mov	w19, #0x40                  	// #64
  421090:	movk	w19, #0x100, lsl #16
  421094:	tst	w19, #0x300000
  421098:	b.eq	42150c <nftw@plt+0x1e98c>  // b.none
  42109c:	ldrb	w0, [x24, #1154]
  4210a0:	cbnz	w0, 421560 <nftw@plt+0x1e9e0>
  4210a4:	orr	w22, w19, #0x2
  4210a8:	tbz	w19, #13, 4210b4 <nftw@plt+0x1e534>
  4210ac:	ldrb	w0, [x24, #1154]
  4210b0:	cbnz	w0, 421354 <nftw@plt+0x1e7d4>
  4210b4:	cmp	w26, #0xa
  4210b8:	b.eq	42139c <nftw@plt+0x1e81c>  // b.none
  4210bc:	orr	w0, w22, #0x400
  4210c0:	orr	w19, w22, #0x200
  4210c4:	cmp	w26, #0x10
  4210c8:	csel	w19, w19, w0, eq  // eq = none
  4210cc:	ldp	x21, x22, [sp, #32]
  4210d0:	b	420df8 <nftw@plt+0x1e278>
  4210d4:	cbz	w2, 421048 <nftw@plt+0x1e4c8>
  4210d8:	mov	w2, w25
  4210dc:	mov	x0, x24
  4210e0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4210e4:	mov	w3, #0x0                   	// #0
  4210e8:	add	x4, x4, #0x5c8
  4210ec:	mov	w1, #0x3                   	// #3
  4210f0:	mov	w19, #0x0                   	// #0
  4210f4:	bl	41f458 <nftw@plt+0x1c8d8>
  4210f8:	ldp	x21, x22, [sp, #32]
  4210fc:	b	420df8 <nftw@plt+0x1e278>
  421100:	mov	w2, w25
  421104:	mov	x0, x24
  421108:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42110c:	mov	w3, #0x0                   	// #0
  421110:	add	x4, x4, #0x528
  421114:	mov	w1, #0x3                   	// #3
  421118:	mov	w19, #0x0                   	// #0
  42111c:	bl	41f458 <nftw@plt+0x1c8d8>
  421120:	ldp	x21, x22, [sp, #32]
  421124:	b	420df8 <nftw@plt+0x1e278>
  421128:	add	w5, w19, #0x30
  42112c:	mov	w2, w25
  421130:	mov	x0, x24
  421134:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421138:	mov	w3, #0x0                   	// #0
  42113c:	add	x4, x4, #0x648
  421140:	mov	w1, #0x3                   	// #3
  421144:	mov	w19, #0x0                   	// #0
  421148:	bl	41f458 <nftw@plt+0x1c8d8>
  42114c:	ldp	x21, x22, [sp, #32]
  421150:	b	420df8 <nftw@plt+0x1e278>
  421154:	cbnz	w8, 4210d8 <nftw@plt+0x1e558>
  421158:	mov	x22, x20
  42115c:	cmp	w19, #0x10
  421160:	add	w5, w19, #0x30
  421164:	b.cs	42112c <nftw@plt+0x1e5ac>  // b.hs, b.nlast
  421168:	cbz	w23, 4212c4 <nftw@plt+0x1e744>
  42116c:	cmp	w26, #0x2
  421170:	b.eq	421538 <nftw@plt+0x1e9b8>  // b.none
  421174:	eor	w0, w0, #0x1
  421178:	tst	w9, w0
  42117c:	b.ne	4214c0 <nftw@plt+0x1e940>  // b.any
  421180:	cmp	w26, #0x10
  421184:	b.ne	421040 <nftw@plt+0x1e4c0>  // b.any
  421188:	ldrb	w0, [x24, #1154]
  42118c:	cbz	w0, 4211c4 <nftw@plt+0x1e644>
  421190:	ldrb	w0, [x24, #1127]
  421194:	cbnz	w0, 4211c4 <nftw@plt+0x1e644>
  421198:	ldrb	w0, [x24, #1120]
  42119c:	str	w7, [sp, #108]
  4211a0:	cbz	w0, 4216b0 <nftw@plt+0x1eb30>
  4211a4:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4211a8:	add	x4, x4, #0x6d0
  4211ac:	mov	w3, #0x0                   	// #0
  4211b0:	mov	w2, w25
  4211b4:	mov	x0, x24
  4211b8:	mov	w1, #0x2                   	// #2
  4211bc:	bl	41f458 <nftw@plt+0x1c8d8>
  4211c0:	ldr	w7, [sp, #108]
  4211c4:	cmp	w23, #0x2
  4211c8:	b.ne	421588 <nftw@plt+0x1ea08>  // b.any
  4211cc:	ldrb	w0, [x22]
  4211d0:	mov	w1, #0xfd                  	// #253
  4211d4:	sub	w2, w0, #0x2b
  4211d8:	tst	w2, w1
  4211dc:	b.ne	4211e8 <nftw@plt+0x1e668>  // b.any
  4211e0:	ldrb	w0, [x22, #1]
  4211e4:	add	x22, x22, #0x1
  4211e8:	ldrh	w1, [x21, w0, sxtw #1]
  4211ec:	tbnz	w1, #2, 421284 <nftw@plt+0x1e704>
  4211f0:	cmp	w0, #0x27
  4211f4:	b.ne	421200 <nftw@plt+0x1e680>  // b.any
  4211f8:	ldrb	w0, [x24, #1166]
  4211fc:	cbnz	w0, 421374 <nftw@plt+0x1e7f4>
  421200:	mov	w2, w25
  421204:	mov	x0, x24
  421208:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42120c:	mov	w3, #0x0                   	// #0
  421210:	add	x4, x4, #0x730
  421214:	mov	w1, #0x3                   	// #3
  421218:	mov	w19, #0x0                   	// #0
  42121c:	bl	41f458 <nftw@plt+0x1c8d8>
  421220:	ldp	x21, x22, [sp, #32]
  421224:	b	420df8 <nftw@plt+0x1e278>
  421228:	add	x20, x20, #0x2
  42122c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x205a0>
  421230:	mov	w4, w1
  421234:	add	x5, x20, #0x1
  421238:	add	x21, x21, #0x248
  42123c:	mov	w9, #0x0                   	// #0
  421240:	mov	w26, #0x2                   	// #2
  421244:	b	420d3c <nftw@plt+0x1e1bc>
  421248:	ldrb	w0, [x24, #1154]
  42124c:	cmp	w26, #0x8
  421250:	orr	w22, w21, #0x2
  421254:	b.eq	421460 <nftw@plt+0x1e8e0>  // b.none
  421258:	cbnz	w0, 421468 <nftw@plt+0x1e8e8>
  42125c:	cmp	w26, #0x2
  421260:	b.ne	4210b4 <nftw@plt+0x1e534>  // b.any
  421264:	ldrb	w0, [x24, #1165]
  421268:	cbz	w0, 4213e0 <nftw@plt+0x1e860>
  42126c:	orr	w19, w22, #0x800
  421270:	ldp	x21, x22, [sp, #32]
  421274:	b	420df8 <nftw@plt+0x1e278>
  421278:	ldrb	w1, [x24, #1166]
  42127c:	cbz	w1, 420ef0 <nftw@plt+0x1e370>
  421280:	b	420f70 <nftw@plt+0x1e3f0>
  421284:	cmp	w0, #0x27
  421288:	mov	w2, #0x0                   	// #0
  42128c:	b.eq	42148c <nftw@plt+0x1e90c>  // b.none
  421290:	ldrb	w0, [x22, #1]!
  421294:	ldrh	w1, [x21, w0, sxtw #1]
  421298:	tbnz	w1, #2, 421284 <nftw@plt+0x1e704>
  42129c:	cmp	w0, #0x27
  4212a0:	b.ne	4210d4 <nftw@plt+0x1e554>  // b.any
  4212a4:	ldrb	w1, [x24, #1166]
  4212a8:	cbz	w1, 4210d4 <nftw@plt+0x1e554>
  4212ac:	ldrb	w0, [x22, #1]!
  4212b0:	cmp	w1, #0x0
  4212b4:	cset	w2, ne  // ne = any
  4212b8:	ldrh	w1, [x21, w0, sxtw #1]
  4212bc:	tbnz	w1, #2, 421284 <nftw@plt+0x1e704>
  4212c0:	b	42129c <nftw@plt+0x1e71c>
  4212c4:	sub	x28, x28, x22
  4212c8:	mov	x20, x22
  4212cc:	mov	x2, x28
  4212d0:	mov	x1, x20
  4212d4:	mov	x0, x24
  4212d8:	bl	41ff18 <nftw@plt+0x1d398>
  4212dc:	mov	w19, w0
  4212e0:	cbnz	w0, 4213a8 <nftw@plt+0x1e828>
  4212e4:	ldrb	w0, [x24, #1161]
  4212e8:	cbz	w0, 4215b0 <nftw@plt+0x1ea30>
  4212ec:	cbz	x27, 4212f4 <nftw@plt+0x1e774>
  4212f0:	str	x20, [x27]
  4212f4:	ldrb	w0, [x24, #1138]
  4212f8:	cbnz	w0, 421494 <nftw@plt+0x1e914>
  4212fc:	ldrb	w0, [x24, #1139]
  421300:	mov	w22, #0x1041                	// #4161
  421304:	movk	w22, #0x100, lsl #16
  421308:	cbz	w0, 42125c <nftw@plt+0x1e6dc>
  42130c:	ldrb	w1, [x24, #1152]
  421310:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421314:	ldrb	w2, [x24, #1120]
  421318:	add	x0, x0, #0x478
  42131c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421320:	add	x4, x4, #0x450
  421324:	cmp	w2, #0x0
  421328:	mov	w21, w19
  42132c:	csel	x4, x4, x0, ne  // ne = any
  421330:	mov	w2, w25
  421334:	mov	w3, #0x0                   	// #0
  421338:	cbz	w1, 4215dc <nftw@plt+0x1ea5c>
  42133c:	mov	x0, x24
  421340:	mov	w1, #0x7                   	// #7
  421344:	bl	41f4d0 <nftw@plt+0x1c950>
  421348:	cbz	w21, 42125c <nftw@plt+0x1e6dc>
  42134c:	ldrb	w0, [x24, #1154]
  421350:	cbz	w0, 42125c <nftw@plt+0x1e6dc>
  421354:	mov	w2, w25
  421358:	mov	x0, x24
  42135c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421360:	mov	w3, #0x0                   	// #0
  421364:	add	x4, x4, #0x8a8
  421368:	mov	w1, #0x2                   	// #2
  42136c:	bl	41f458 <nftw@plt+0x1c8d8>
  421370:	b	42125c <nftw@plt+0x1e6dc>
  421374:	mov	w2, w25
  421378:	mov	x0, x24
  42137c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421380:	mov	w3, #0x0                   	// #0
  421384:	add	x4, x4, #0x5a0
  421388:	mov	w1, #0x3                   	// #3
  42138c:	mov	w19, #0x0                   	// #0
  421390:	bl	41f458 <nftw@plt+0x1c8d8>
  421394:	ldp	x21, x22, [sp, #32]
  421398:	b	420df8 <nftw@plt+0x1e278>
  42139c:	orr	w19, w22, #0x100
  4213a0:	ldp	x21, x22, [sp, #32]
  4213a4:	b	420df8 <nftw@plt+0x1e278>
  4213a8:	ldrb	w0, [x24, #1138]
  4213ac:	and	w23, w19, #0xf0
  4213b0:	orr	w22, w19, #0x1
  4213b4:	and	w21, w19, #0x2000
  4213b8:	cbnz	w0, 42141c <nftw@plt+0x1e89c>
  4213bc:	cmp	w23, #0x40
  4213c0:	b.ne	421348 <nftw@plt+0x1e7c8>  // b.any
  4213c4:	ldrb	w0, [x24, #1139]
  4213c8:	cbz	w0, 421348 <nftw@plt+0x1e7c8>
  4213cc:	mov	w19, w21
  4213d0:	b	42130c <nftw@plt+0x1e78c>
  4213d4:	cmp	w19, w26
  4213d8:	b.cc	421168 <nftw@plt+0x1e5e8>  // b.lo, b.ul, b.last
  4213dc:	b	420e74 <nftw@plt+0x1e2f4>
  4213e0:	ldrb	w0, [x24, #1154]
  4213e4:	cbz	w0, 42126c <nftw@plt+0x1e6ec>
  4213e8:	ldrb	w0, [x24, #1120]
  4213ec:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4213f0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4213f4:	add	x3, x3, #0x4d8
  4213f8:	cmp	w0, #0x0
  4213fc:	add	x4, x4, #0x4a0
  421400:	csel	x4, x4, x3, ne  // ne = any
  421404:	mov	w2, w25
  421408:	mov	w1, w26
  42140c:	mov	x0, x24
  421410:	mov	w3, #0x0                   	// #0
  421414:	bl	41f458 <nftw@plt+0x1c8d8>
  421418:	b	42126c <nftw@plt+0x1e6ec>
  42141c:	mov	x0, x24
  421420:	bl	42e4f8 <nftw@plt+0x2b978>
  421424:	cbnz	w0, 4213bc <nftw@plt+0x1e83c>
  421428:	and	w19, w19, #0x3000
  42142c:	cmp	w23, #0x40
  421430:	b.eq	421664 <nftw@plt+0x1eae4>  // b.none
  421434:	cbz	w19, 421348 <nftw@plt+0x1e7c8>
  421438:	mov	w1, #0x6                   	// #6
  42143c:	mov	x6, x20
  421440:	mov	w5, w28
  421444:	mov	w2, w25
  421448:	mov	x0, x24
  42144c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421450:	mov	w3, #0x0                   	// #0
  421454:	add	x4, x4, #0x7b0
  421458:	bl	41f4d0 <nftw@plt+0x1c950>
  42145c:	b	4213bc <nftw@plt+0x1e83c>
  421460:	cbz	w0, 42139c <nftw@plt+0x1e81c>
  421464:	mov	w26, #0xa                   	// #10
  421468:	and	w21, w21, #0x2000
  42146c:	mov	w2, w25
  421470:	mov	x0, x24
  421474:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421478:	mov	w3, #0x0                   	// #0
  42147c:	add	x4, x4, #0x5f0
  421480:	mov	w1, #0x2                   	// #2
  421484:	bl	41f458 <nftw@plt+0x1c8d8>
  421488:	b	421348 <nftw@plt+0x1e7c8>
  42148c:	ldrb	w1, [x24, #1166]
  421490:	b	4212ac <nftw@plt+0x1e72c>
  421494:	mov	x0, x24
  421498:	bl	42e4f8 <nftw@plt+0x2b978>
  42149c:	cbnz	w0, 4212fc <nftw@plt+0x1e77c>
  4214a0:	ldrb	w0, [x24, #1139]
  4214a4:	mov	w22, #0x1041                	// #4161
  4214a8:	mov	w21, #0x0                   	// #0
  4214ac:	movk	w22, #0x100, lsl #16
  4214b0:	mov	w23, #0x40                  	// #64
  4214b4:	cbz	w0, 421438 <nftw@plt+0x1e8b8>
  4214b8:	mov	w1, #0x7                   	// #7
  4214bc:	b	42143c <nftw@plt+0x1e8bc>
  4214c0:	mov	w2, w25
  4214c4:	mov	x0, x24
  4214c8:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4214cc:	mov	w3, #0x0                   	// #0
  4214d0:	add	x4, x4, #0x6a0
  4214d4:	mov	w1, #0x3                   	// #3
  4214d8:	mov	w19, #0x0                   	// #0
  4214dc:	bl	41f458 <nftw@plt+0x1c8d8>
  4214e0:	ldp	x21, x22, [sp, #32]
  4214e4:	b	420df8 <nftw@plt+0x1e278>
  4214e8:	cmp	x28, x22
  4214ec:	ubfx	x7, x19, #14, #1
  4214f0:	b.eq	4214fc <nftw@plt+0x1e97c>  // b.none
  4214f4:	ldrb	w0, [x24, #1138]
  4214f8:	cbnz	w0, 4216c0 <nftw@plt+0x1eb40>
  4214fc:	cmp	w19, #0x20
  421500:	b.ne	421614 <nftw@plt+0x1ea94>  // b.any
  421504:	ldrb	w0, [x24, #1154]
  421508:	cbnz	w0, 421650 <nftw@plt+0x1ead0>
  42150c:	cbz	w7, 4210a4 <nftw@plt+0x1e524>
  421510:	ldrb	w0, [x24, #1154]
  421514:	cbz	w0, 4210a4 <nftw@plt+0x1e524>
  421518:	mov	w2, w25
  42151c:	mov	x0, x24
  421520:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421524:	mov	w3, #0x0                   	// #0
  421528:	add	x4, x4, #0x848
  42152c:	mov	w1, #0x2                   	// #2
  421530:	bl	41f458 <nftw@plt+0x1c8d8>
  421534:	b	4210a4 <nftw@plt+0x1e524>
  421538:	mov	w2, w25
  42153c:	mov	x0, x24
  421540:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421544:	mov	w3, #0x0                   	// #0
  421548:	add	x4, x4, #0x670
  42154c:	mov	w1, #0x3                   	// #3
  421550:	mov	w19, #0x0                   	// #0
  421554:	bl	41f458 <nftw@plt+0x1c8d8>
  421558:	ldp	x21, x22, [sp, #32]
  42155c:	b	420df8 <nftw@plt+0x1e278>
  421560:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421564:	add	x4, x4, #0x5f0
  421568:	mov	w3, #0x0                   	// #0
  42156c:	str	w7, [sp, #108]
  421570:	mov	w2, w25
  421574:	mov	x0, x24
  421578:	mov	w1, #0x2                   	// #2
  42157c:	bl	41f458 <nftw@plt+0x1c8d8>
  421580:	ldr	w7, [sp, #108]
  421584:	b	42150c <nftw@plt+0x1e98c>
  421588:	mov	w2, w25
  42158c:	mov	x0, x24
  421590:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421594:	mov	w3, #0x0                   	// #0
  421598:	add	x4, x4, #0x748
  42159c:	mov	w1, #0x3                   	// #3
  4215a0:	mov	w19, #0x0                   	// #0
  4215a4:	bl	41f458 <nftw@plt+0x1c8d8>
  4215a8:	ldp	x21, x22, [sp, #32]
  4215ac:	b	420df8 <nftw@plt+0x1e278>
  4215b0:	mov	x6, x20
  4215b4:	mov	w5, w28
  4215b8:	mov	w2, w25
  4215bc:	mov	x0, x24
  4215c0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4215c4:	mov	w3, #0x0                   	// #0
  4215c8:	add	x4, x4, #0x878
  4215cc:	mov	w1, #0x3                   	// #3
  4215d0:	bl	41f458 <nftw@plt+0x1c8d8>
  4215d4:	ldp	x21, x22, [sp, #32]
  4215d8:	b	420df8 <nftw@plt+0x1e278>
  4215dc:	mov	x0, x24
  4215e0:	mov	w1, #0x7                   	// #7
  4215e4:	bl	41f550 <nftw@plt+0x1c9d0>
  4215e8:	b	421348 <nftw@plt+0x1e7c8>
  4215ec:	mov	w22, #0x42                  	// #66
  4215f0:	movk	w22, #0x100, lsl #16
  4215f4:	b	4210b4 <nftw@plt+0x1e534>
  4215f8:	mov	x0, x24
  4215fc:	mov	w19, #0x40                  	// #64
  421600:	str	w7, [sp, #108]
  421604:	bl	42e4f8 <nftw@plt+0x2b978>
  421608:	ldr	w7, [sp, #108]
  42160c:	movk	w19, #0x100, lsl #16
  421610:	cbz	w0, 4216d4 <nftw@plt+0x1eb54>
  421614:	cmp	w7, #0x0
  421618:	ccmp	w26, #0xa, #0x4, ne  // ne = any
  42161c:	b.eq	421094 <nftw@plt+0x1e514>  // b.none
  421620:	mov	x6, x22
  421624:	mov	w5, w20
  421628:	mov	w2, w25
  42162c:	mov	x0, x24
  421630:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421634:	mov	w3, #0x0                   	// #0
  421638:	add	x4, x4, #0x808
  42163c:	mov	w1, #0x3                   	// #3
  421640:	mov	w19, #0x0                   	// #0
  421644:	bl	41f458 <nftw@plt+0x1c8d8>
  421648:	ldp	x21, x22, [sp, #32]
  42164c:	b	420df8 <nftw@plt+0x1e278>
  421650:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421654:	mov	w3, #0x0                   	// #0
  421658:	add	x4, x4, #0x7d8
  42165c:	str	w7, [sp, #108]
  421660:	b	421570 <nftw@plt+0x1e9f0>
  421664:	ldrb	w0, [x24, #1139]
  421668:	cbz	w0, 421434 <nftw@plt+0x1e8b4>
  42166c:	mov	w1, #0x7                   	// #7
  421670:	b	42143c <nftw@plt+0x1e8bc>
  421674:	mov	x6, x22
  421678:	mov	w5, w20
  42167c:	mov	w2, w25
  421680:	mov	x0, x24
  421684:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421688:	mov	w3, #0x0                   	// #0
  42168c:	add	x4, x4, #0x780
  421690:	mov	w1, #0x3                   	// #3
  421694:	bl	41f458 <nftw@plt+0x1c8d8>
  421698:	ldp	x21, x22, [sp, #32]
  42169c:	b	420df8 <nftw@plt+0x1e278>
  4216a0:	and	w4, w4, #0xffffffdf
  4216a4:	cmp	w4, #0x45
  4216a8:	b.eq	421008 <nftw@plt+0x1e488>  // b.none
  4216ac:	b	420e2c <nftw@plt+0x1e2ac>
  4216b0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4216b4:	mov	w3, #0x0                   	// #0
  4216b8:	add	x4, x4, #0x700
  4216bc:	b	4211b0 <nftw@plt+0x1e630>
  4216c0:	mov	x0, x24
  4216c4:	str	w7, [sp, #108]
  4216c8:	bl	42e4f8 <nftw@plt+0x2b978>
  4216cc:	ldr	w7, [sp, #108]
  4216d0:	cbnz	w0, 4214fc <nftw@plt+0x1e97c>
  4216d4:	mov	x6, x22
  4216d8:	mov	w5, w20
  4216dc:	mov	w2, w25
  4216e0:	mov	x0, x24
  4216e4:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4216e8:	mov	w3, #0x0                   	// #0
  4216ec:	add	x4, x4, #0x7b0
  4216f0:	mov	w1, #0x6                   	// #6
  4216f4:	str	w7, [sp, #108]
  4216f8:	bl	41f4d0 <nftw@plt+0x1c950>
  4216fc:	ldr	w7, [sp, #108]
  421700:	b	4214fc <nftw@plt+0x1e97c>
  421704:	nop
  421708:	stp	x29, x30, [sp, #-48]!
  42170c:	ubfx	x6, x2, #12, #1
  421710:	mov	x10, x0
  421714:	mov	x29, sp
  421718:	stp	x19, x20, [sp, #16]
  42171c:	mov	x19, x8
  421720:	strb	w6, [x8, #16]
  421724:	stp	xzr, xzr, [x19]
  421728:	strb	wzr, [x8, #17]
  42172c:	ldr	w8, [x1, #8]
  421730:	ldr	x0, [x1, #16]
  421734:	cmp	w8, #0x1
  421738:	b.eq	421948 <nftw@plt+0x1edc8>  // b.none
  42173c:	and	w3, w2, #0xf00
  421740:	cmp	w3, #0x400
  421744:	ldr	x1, [x10, #1208]
  421748:	b.eq	421770 <nftw@plt+0x1ebf0>  // b.none
  42174c:	cmp	w3, #0x200
  421750:	b.eq	421a18 <nftw@plt+0x1ee98>  // b.none
  421754:	cmp	w3, #0x800
  421758:	b.eq	4219c4 <nftw@plt+0x1ee44>  // b.none
  42175c:	mov	x12, #0xa                   	// #10
  421760:	mov	x5, x0
  421764:	mov	w11, w12
  421768:	mov	x7, #0xfffffffffffffff7    	// #-9
  42176c:	b	421780 <nftw@plt+0x1ec00>
  421770:	mov	x12, #0x8                   	// #8
  421774:	add	x5, x0, #0x1
  421778:	mov	w11, w12
  42177c:	mov	x7, #0xfffffffffffffff9    	// #-7
  421780:	neg	w3, w1
  421784:	cmp	x1, #0x40
  421788:	mov	x4, #0xffffffffffffffff    	// #-1
  42178c:	add	x8, x0, w8, uxtw
  421790:	lsr	x3, x4, x3
  421794:	csel	x3, x3, x4, cc  // cc = lo, ul, last
  421798:	add	x3, x3, x7
  42179c:	cmp	x5, x8
  4217a0:	udiv	x3, x3, x12
  4217a4:	add	x3, x3, #0x1
  4217a8:	b.cs	421814 <nftw@plt+0x1ec94>  // b.hs, b.nlast
  4217ac:	sub	x16, x1, #0x40
  4217b0:	lsl	x15, x4, x1
  4217b4:	adrp	x13, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4217b8:	adrp	x14, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4217bc:	lsl	x4, x4, x16
  4217c0:	mvn	x15, x15
  4217c4:	add	x13, x13, #0x248
  4217c8:	mvn	x9, x4
  4217cc:	add	x14, x14, #0xf30
  4217d0:	mov	w17, #0x0                   	// #0
  4217d4:	mov	w18, #0x1                   	// #1
  4217d8:	str	x21, [sp, #32]
  4217dc:	ldrb	w0, [x5]
  4217e0:	mov	x6, x0
  4217e4:	ldrh	w0, [x13, x0, lsl #1]
  4217e8:	tbnz	w0, #2, 42187c <nftw@plt+0x1ecfc>
  4217ec:	cmp	w11, #0x10
  4217f0:	b.eq	4218a8 <nftw@plt+0x1ed28>  // b.none
  4217f4:	cmp	w6, #0x27
  4217f8:	b.ne	421804 <nftw@plt+0x1ec84>  // b.any
  4217fc:	ldrb	w0, [x10, #1166]
  421800:	cbnz	w0, 421898 <nftw@plt+0x1ed18>
  421804:	cbz	w17, 42180c <nftw@plt+0x1ec8c>
  421808:	tbz	w2, #24, 421a44 <nftw@plt+0x1eec4>
  42180c:	ldrb	w6, [x19, #16]
  421810:	ldr	x21, [sp, #32]
  421814:	cbnz	w6, 421870 <nftw@plt+0x1ecf0>
  421818:	ldrb	w0, [x10, #1160]
  42181c:	cbnz	w0, 4219b8 <nftw@plt+0x1ee38>
  421820:	cmp	x1, #0x40
  421824:	ldp	x0, x2, [x19]
  421828:	b.hi	4219d8 <nftw@plt+0x1ee58>  // b.pmore
  42182c:	sub	w1, w1, #0x1
  421830:	lsr	x1, x2, x1
  421834:	mvn	x0, x1
  421838:	and	w0, w0, #0x1
  42183c:	cbnz	w0, 421870 <nftw@plt+0x1ecf0>
  421840:	cmp	w11, #0xa
  421844:	b.ne	421868 <nftw@plt+0x1ece8>  // b.any
  421848:	ldrb	w1, [x10, #1152]
  42184c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421850:	mov	x0, x10
  421854:	add	x2, x2, #0x900
  421858:	cmp	w1, #0x0
  42185c:	cset	w1, ne  // ne = any
  421860:	lsl	w1, w1, #1
  421864:	bl	41f298 <nftw@plt+0x1c718>
  421868:	mov	w0, #0x1                   	// #1
  42186c:	strb	w0, [x19, #16]
  421870:	ldp	x19, x20, [sp, #16]
  421874:	ldp	x29, x30, [sp], #48
  421878:	ret
  42187c:	ldr	x7, [x19, #8]
  421880:	ldrb	w4, [x14, w6, sxtw]
  421884:	cmp	x7, x3
  421888:	b.cs	421964 <nftw@plt+0x1ede4>  // b.hs, b.nlast
  42188c:	and	x4, x4, #0xff
  421890:	madd	x4, x12, x7, x4
  421894:	str	x4, [x19, #8]
  421898:	add	x5, x5, #0x1
  42189c:	cmp	x8, x5
  4218a0:	b.ne	4217dc <nftw@plt+0x1ec5c>  // b.any
  4218a4:	b	421804 <nftw@plt+0x1ec84>
  4218a8:	tbz	w0, #8, 4217f4 <nftw@plt+0x1ec74>
  4218ac:	ldr	x7, [x19, #8]
  4218b0:	ldrb	w4, [x14, w6, sxtw]
  4218b4:	cmp	x7, x3
  4218b8:	b.cc	42188c <nftw@plt+0x1ed0c>  // b.lo, b.ul, b.last
  4218bc:	ldrb	w20, [x19, #16]
  4218c0:	and	x4, x4, #0xff
  4218c4:	ldr	x3, [x19]
  4218c8:	mov	w21, #0x3c                  	// #60
  4218cc:	mov	w30, #0x4                   	// #4
  4218d0:	lsr	x0, x3, x21
  4218d4:	cmp	x0, #0x0
  4218d8:	lsr	x21, x7, x21
  4218dc:	cset	w6, ne  // ne = any
  4218e0:	lsl	x0, x3, x30
  4218e4:	orr	x21, x0, x21
  4218e8:	lsl	x30, x7, x30
  4218ec:	adds	x4, x4, x30
  4218f0:	b.cc	421904 <nftw@plt+0x1ed84>  // b.lo, b.ul, b.last
  4218f4:	mov	x0, #0x1                   	// #1
  4218f8:	adds	x0, x0, x21
  4218fc:	mov	x21, x0
  421900:	csel	w6, w6, w18, cc  // cc = lo, ul, last
  421904:	cmp	x1, #0x40
  421908:	b.ls	4219e4 <nftw@plt+0x1ee64>  // b.plast
  42190c:	and	x0, x9, x21
  421910:	cmp	x16, #0x3f
  421914:	b.ls	421a6c <nftw@plt+0x1eeec>  // b.plast
  421918:	mov	x7, x4
  42191c:	mov	x0, x21
  421920:	orr	w17, w17, w6
  421924:	mov	x3, #0x0                   	// #0
  421928:	and	w17, w17, #0xff
  42192c:	stp	x0, x7, [x19]
  421930:	strb	w20, [x19, #16]
  421934:	strb	w6, [x19, #17]
  421938:	add	x5, x5, #0x1
  42193c:	cmp	x8, x5
  421940:	b.ne	4217dc <nftw@plt+0x1ec5c>  // b.any
  421944:	b	421804 <nftw@plt+0x1ec84>
  421948:	ldrb	w0, [x0]
  42194c:	sub	w0, w0, #0x30
  421950:	sxtw	x0, w0
  421954:	str	x0, [x19, #8]
  421958:	ldp	x19, x20, [sp, #16]
  42195c:	ldp	x29, x30, [sp], #48
  421960:	ret
  421964:	ldrb	w20, [x19, #16]
  421968:	and	x4, x4, #0xff
  42196c:	cmp	w11, #0x2
  421970:	ldr	x3, [x19]
  421974:	b.eq	421a2c <nftw@plt+0x1eeac>  // b.none
  421978:	cmp	w11, #0x10
  42197c:	b.eq	421a38 <nftw@plt+0x1eeb8>  // b.none
  421980:	cmp	xzr, x3, lsr #61
  421984:	lsl	x30, x7, #3
  421988:	cset	w6, ne  // ne = any
  42198c:	extr	x21, x3, x7, #61
  421990:	cmp	w11, #0xa
  421994:	b.ne	4218ec <nftw@plt+0x1ed6c>  // b.any
  421998:	lsr	x0, x7, #63
  42199c:	lsl	x7, x7, #1
  4219a0:	adds	x4, x7, x4
  4219a4:	add	x0, x0, x3, lsl #1
  4219a8:	cinc	x0, x0, cs  // cs = hs, nlast
  4219ac:	adds	x4, x30, x4
  4219b0:	cinc	x0, x0, cs  // cs = hs, nlast
  4219b4:	b	4218f8 <nftw@plt+0x1ed78>
  4219b8:	ldrb	w0, [x10, #16]
  4219bc:	cbnz	w0, 421870 <nftw@plt+0x1ecf0>
  4219c0:	b	421820 <nftw@plt+0x1eca0>
  4219c4:	mov	x12, #0x2                   	// #2
  4219c8:	mov	x7, #0xffffffffffffffff    	// #-1
  4219cc:	add	x5, x0, x12
  4219d0:	mov	w11, w12
  4219d4:	b	421780 <nftw@plt+0x1ec00>
  4219d8:	bl	420348 <nftw@plt+0x1d7c8>
  4219dc:	and	w0, w0, #0xff
  4219e0:	b	42183c <nftw@plt+0x1ecbc>
  4219e4:	b.eq	421a68 <nftw@plt+0x1eee8>  // b.none
  4219e8:	bics	xzr, x4, x15
  4219ec:	and	x7, x15, x4
  4219f0:	mov	x0, #0x0                   	// #0
  4219f4:	b.eq	421a6c <nftw@plt+0x1eeec>  // b.none
  4219f8:	mov	w6, #0x1                   	// #1
  4219fc:	orr	w17, w17, w6
  421a00:	mov	x3, #0x0                   	// #0
  421a04:	and	w17, w17, #0xff
  421a08:	stp	x0, x7, [x19]
  421a0c:	strb	w20, [x19, #16]
  421a10:	strb	w6, [x19, #17]
  421a14:	b	421938 <nftw@plt+0x1edb8>
  421a18:	mov	x12, #0x10                  	// #16
  421a1c:	add	x5, x0, #0x2
  421a20:	mov	w11, w12
  421a24:	mov	x7, #0xfffffffffffffff1    	// #-15
  421a28:	b	421780 <nftw@plt+0x1ec00>
  421a2c:	mov	w21, #0x3f                  	// #63
  421a30:	mov	w30, #0x1                   	// #1
  421a34:	b	4218d0 <nftw@plt+0x1ed50>
  421a38:	mov	w21, #0x3c                  	// #60
  421a3c:	mov	w30, #0x4                   	// #4
  421a40:	b	4218d0 <nftw@plt+0x1ed50>
  421a44:	mov	x0, x10
  421a48:	mov	w1, #0x2                   	// #2
  421a4c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421a50:	add	x2, x2, #0x8d0
  421a54:	bl	41f298 <nftw@plt+0x1c718>
  421a58:	ldp	x19, x20, [sp, #16]
  421a5c:	ldr	x21, [sp, #32]
  421a60:	ldp	x29, x30, [sp], #48
  421a64:	ret
  421a68:	mov	x0, #0x0                   	// #0
  421a6c:	mov	x7, x4
  421a70:	cmp	x0, x21
  421a74:	b.eq	421920 <nftw@plt+0x1eda0>  // b.none
  421a78:	mov	w6, #0x1                   	// #1
  421a7c:	b	4219fc <nftw@plt+0x1ee7c>
  421a80:	stp	x29, x30, [sp, #-48]!
  421a84:	mov	x29, sp
  421a88:	stp	x19, x20, [sp, #16]
  421a8c:	mov	x20, x0
  421a90:	ldr	x0, [x0, #1096]
  421a94:	str	x21, [sp, #32]
  421a98:	ldr	x21, [x20, #1104]
  421a9c:	sub	x21, x21, x0
  421aa0:	asr	x19, x21, #3
  421aa4:	add	x19, x19, #0x32
  421aa8:	lsl	x19, x19, #4
  421aac:	mov	x1, x19
  421ab0:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  421ab4:	add	x19, x0, x19
  421ab8:	str	x0, [x20, #1096]
  421abc:	str	x19, [x20, #1104]
  421ac0:	add	x0, x0, x21
  421ac4:	ldp	x19, x20, [sp, #16]
  421ac8:	ldr	x21, [sp, #32]
  421acc:	ldp	x29, x30, [sp], #48
  421ad0:	ret
  421ad4:	nop
  421ad8:	stp	x29, x30, [sp, #-448]!
  421adc:	and	w1, w1, #0xff
  421ae0:	mov	x29, sp
  421ae4:	stp	x25, x26, [sp, #64]
  421ae8:	mov	x26, x0
  421aec:	mov	x25, x26
  421af0:	stp	x27, x28, [sp, #80]
  421af4:	mov	w0, #0x16                  	// #22
  421af8:	ldr	x27, [x26, #1096]
  421afc:	stp	x19, x20, [sp, #16]
  421b00:	stp	x21, x22, [sp, #32]
  421b04:	stp	x23, x24, [sp, #48]
  421b08:	str	wzr, [x26, #28]
  421b0c:	str	xzr, [x26, #432]
  421b10:	str	w0, [x27, #36]
  421b14:	str	wzr, [sp, #108]
  421b18:	stp	wzr, w1, [sp, #184]
  421b1c:	mov	w1, #0x1                   	// #1
  421b20:	str	w1, [sp, #104]
  421b24:	str	wzr, [sp, #300]
  421b28:	add	x1, sp, #0x12c
  421b2c:	mov	x0, x25
  421b30:	bl	431a38 <nftw@plt+0x2eeb8>
  421b34:	str	x0, [sp, #112]
  421b38:	ldr	w1, [sp, #108]
  421b3c:	ldrb	w0, [x0, #4]
  421b40:	add	w1, w1, #0x1
  421b44:	str	w1, [sp, #108]
  421b48:	ldr	w1, [sp, #300]
  421b4c:	cmp	w0, #0x5
  421b50:	str	w1, [sp, #120]
  421b54:	b.eq	422758 <nftw@plt+0x1fbd8>  // b.none
  421b58:	b.hi	4225a0 <nftw@plt+0x1fa20>  // b.pmore
  421b5c:	cmp	w0, #0x1
  421b60:	b.eq	42279c <nftw@plt+0x1fc1c>  // b.none
  421b64:	cmp	w0, #0x4
  421b68:	b.ne	422858 <nftw@plt+0x1fcd8>  // b.any
  421b6c:	ldr	w1, [sp, #104]
  421b70:	cbz	w1, 422810 <nftw@plt+0x1fc90>
  421b74:	ldr	w23, [x27, #36]
  421b78:	sub	w0, w23, #0x1
  421b7c:	cmp	w0, #0x1b
  421b80:	b.hi	422b24 <nftw@plt+0x1ffa4>  // b.pmore
  421b84:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421b88:	add	x0, x2, #0xdc8
  421b8c:	mov	x1, x0
  421b90:	sbfiz	x0, x23, #1, #32
  421b94:	str	x1, [sp, #96]
  421b98:	mov	w18, w23
  421b9c:	mov	w22, #0x1b                  	// #27
  421ba0:	ldrb	w0, [x1, x0]
  421ba4:	cmp	w0, #0x10
  421ba8:	b.ls	422548 <nftw@plt+0x1f9c8>  // b.plast
  421bac:	mov	w0, #0x10                  	// #16
  421bb0:	str	w0, [sp, #124]
  421bb4:	mov	x28, x25
  421bb8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421bbc:	add	x0, x0, #0xc48
  421bc0:	str	x0, [sp, #160]
  421bc4:	str	w22, [sp, #168]
  421bc8:	ldrb	w0, [x28, #1141]
  421bcc:	cbz	w0, 421be0 <nftw@plt+0x1f060>
  421bd0:	ldr	x0, [sp, #96]
  421bd4:	add	x18, x0, w18, sxtw #1
  421bd8:	ldrb	w0, [x18, #1]
  421bdc:	tbnz	w0, #2, 4226e8 <nftw@plt+0x1fb68>
  421be0:	ldr	w25, [x27, #36]
  421be4:	sub	w1, w25, #0x1
  421be8:	cmp	w1, #0x1b
  421bec:	b.hi	421fe8 <nftw@plt+0x1f468>  // b.pmore
  421bf0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421bf4:	add	x0, x0, #0xd90
  421bf8:	ldrh	w0, [x0, w1, uxtw #1]
  421bfc:	adr	x1, 421c08 <nftw@plt+0x1f088>
  421c00:	add	x0, x1, w0, sxth #2
  421c04:	br	x0
  421c08:	sub	x20, x27, #0x28
  421c0c:	mov	w3, w25
  421c10:	ldp	x0, x1, [x27, #-32]
  421c14:	stp	x0, x1, [sp, #224]
  421c18:	add	x2, sp, #0xc0
  421c1c:	ldr	x0, [x20, #24]
  421c20:	str	x0, [sp, #240]
  421c24:	add	x1, sp, #0xe0
  421c28:	mov	x0, x28
  421c2c:	ldp	x4, x5, [x27, #8]
  421c30:	stp	x4, x5, [sp, #192]
  421c34:	add	x8, sp, #0x100
  421c38:	ldr	x4, [x27, #24]
  421c3c:	str	x4, [sp, #208]
  421c40:	mov	x19, x20
  421c44:	bl	420650 <nftw@plt+0x1dad0>
  421c48:	ldp	x2, x3, [sp, #256]
  421c4c:	stp	x2, x3, [x27, #-32]
  421c50:	ldr	w0, [x27, #32]
  421c54:	ldr	x1, [sp, #272]
  421c58:	str	x1, [x20, #24]
  421c5c:	stur	w0, [x27, #-8]
  421c60:	ldrb	w0, [x20, #25]
  421c64:	cbz	w0, 421c70 <nftw@plt+0x1f0f0>
  421c68:	ldr	w0, [x28, #28]
  421c6c:	cbz	w0, 422934 <nftw@plt+0x1fdb4>
  421c70:	ldr	w18, [x19, #36]
  421c74:	ldr	x1, [sp, #96]
  421c78:	sbfiz	x0, x18, #1, #32
  421c7c:	ldrb	w0, [x1, x0]
  421c80:	ldr	w1, [sp, #124]
  421c84:	cmp	w0, w1
  421c88:	b.ls	4221e0 <nftw@plt+0x1f660>  // b.plast
  421c8c:	mov	x27, x19
  421c90:	b	421bc8 <nftw@plt+0x1f048>
  421c94:	sub	x20, x27, #0x28
  421c98:	ldrb	w5, [x27, #24]
  421c9c:	ldp	x0, x1, [x27, #-32]
  421ca0:	add	x22, sp, #0x190
  421ca4:	ldp	x3, x4, [x27, #8]
  421ca8:	stp	x0, x1, [sp, #400]
  421cac:	ldr	x0, [x20, #24]
  421cb0:	str	x0, [sp, #416]
  421cb4:	ldr	x6, [x28, #1208]
  421cb8:	ldp	x13, x9, [x27, #-32]
  421cbc:	ldurb	w2, [x27, #-16]
  421cc0:	mov	x1, x9
  421cc4:	mov	x0, x13
  421cc8:	bl	420a18 <nftw@plt+0x1de98>
  421ccc:	and	w1, w0, #0xff
  421cd0:	cmp	w25, #0x19
  421cd4:	b.eq	422a58 <nftw@plt+0x1fed8>  // b.none
  421cd8:	cmp	w25, #0x3
  421cdc:	b.eq	422a54 <nftw@plt+0x1fed4>  // b.none
  421ce0:	cmp	w25, #0x2
  421ce4:	b.eq	422edc <nftw@plt+0x2035c>  // b.none
  421ce8:	mov	x0, #0x1                   	// #1
  421cec:	cbz	w1, 422a5c <nftw@plt+0x1fedc>
  421cf0:	cmp	x3, x13
  421cf4:	ccmp	x4, x9, #0x0, eq  // eq = none
  421cf8:	cset	x0, eq  // eq = none
  421cfc:	b	422a5c <nftw@plt+0x1fedc>
  421d00:	add	x2, sp, #0x260
  421d04:	cmp	w25, #0x1b
  421d08:	ldp	x0, x1, [x27, #8]
  421d0c:	add	x26, sp, #0x178
  421d10:	stp	x0, x1, [x2, #-232]
  421d14:	ldr	x0, [x27, #24]
  421d18:	str	x0, [sp, #392]
  421d1c:	ldrb	w23, [x27, #24]
  421d20:	ldrb	w1, [x27, #25]
  421d24:	ldp	x19, x21, [x27, #8]
  421d28:	b.eq	422e80 <nftw@plt+0x20300>  // b.none
  421d2c:	cmp	w25, #0x1c
  421d30:	b.eq	422e30 <nftw@plt+0x202b0>  // b.none
  421d34:	cmp	w25, #0xe
  421d38:	b.eq	422db4 <nftw@plt+0x20234>  // b.none
  421d3c:	orr	x19, x19, x21
  421d40:	mov	w0, #0x0                   	// #0
  421d44:	cmp	x19, #0x0
  421d48:	mov	w23, #0x0                   	// #0
  421d4c:	cset	x21, eq  // eq = none
  421d50:	mov	x19, #0x0                   	// #0
  421d54:	add	x9, sp, #0x1a8
  421d58:	strb	w23, [sp, #392]
  421d5c:	sub	x20, x27, #0x28
  421d60:	strb	w0, [sp, #393]
  421d64:	ldr	w2, [x27, #32]
  421d68:	ldr	x3, [x26, #16]
  421d6c:	stp	x19, x21, [sp, #376]
  421d70:	mov	x19, x20
  421d74:	ldp	x0, x1, [x26]
  421d78:	stp	x0, x1, [x9]
  421d7c:	str	x3, [x9, #16]
  421d80:	stp	x0, x1, [x27, #-32]
  421d84:	ldr	x0, [x9, #16]
  421d88:	str	x0, [x20, #24]
  421d8c:	stur	w2, [x27, #-8]
  421d90:	b	421c60 <nftw@plt+0x1f0e0>
  421d94:	sub	x20, x27, #0x28
  421d98:	ldrb	w1, [x27, #24]
  421d9c:	ldp	x2, x3, [x27, #-32]
  421da0:	cmp	w25, #0x9
  421da4:	ldp	x4, x6, [x27, #8]
  421da8:	stp	x2, x3, [sp, #400]
  421dac:	add	x22, sp, #0x190
  421db0:	ldr	x0, [x20, #24]
  421db4:	str	x0, [sp, #416]
  421db8:	ldurb	w0, [x27, #-16]
  421dbc:	ldp	x3, x5, [x27, #-32]
  421dc0:	orr	w0, w0, w1
  421dc4:	b.eq	422d20 <nftw@plt+0x201a0>  // b.none
  421dc8:	cmp	w25, #0xa
  421dcc:	eor	x1, x6, x5
  421dd0:	eor	x2, x4, x3
  421dd4:	b.ne	421de0 <nftw@plt+0x1f260>  // b.any
  421dd8:	orr	x1, x6, x5
  421ddc:	orr	x2, x4, x3
  421de0:	mov	x19, x20
  421de4:	stp	x2, x1, [sp, #400]
  421de8:	strb	w0, [sp, #416]
  421dec:	strb	wzr, [sp, #417]
  421df0:	add	x3, sp, #0x260
  421df4:	ldr	w2, [x27, #32]
  421df8:	ldp	x0, x1, [x22]
  421dfc:	stp	x0, x1, [x3, #-184]
  421e00:	ldr	x3, [x22, #16]
  421e04:	str	x3, [sp, #440]
  421e08:	stp	x0, x1, [x20, #8]
  421e0c:	ldr	x0, [sp, #440]
  421e10:	str	x0, [x20, #24]
  421e14:	str	w2, [x20, #32]
  421e18:	b	421c60 <nftw@plt+0x1f0e0>
  421e1c:	add	x2, sp, #0x200
  421e20:	sub	x20, x27, #0x28
  421e24:	ldp	x0, x1, [x27, #-32]
  421e28:	add	x23, sp, #0x148
  421e2c:	stp	x0, x1, [x2, #-184]
  421e30:	add	x15, sp, #0x160
  421e34:	ldurb	w5, [x27, #-16]
  421e38:	ldp	x0, x1, [x27, #8]
  421e3c:	stp	x0, x1, [sp, #352]
  421e40:	ldr	w12, [x27, #32]
  421e44:	ldr	x0, [x20, #24]
  421e48:	str	x0, [sp, #344]
  421e4c:	ldr	x0, [x27, #24]
  421e50:	str	x0, [sp, #368]
  421e54:	ldurb	w0, [x27, #-15]
  421e58:	str	w0, [sp, #128]
  421e5c:	ldr	x0, [x28, #1208]
  421e60:	str	x0, [sp, #136]
  421e64:	str	w5, [sp, #176]
  421e68:	ldp	x21, x24, [x27, #-32]
  421e6c:	ldp	x9, x22, [x27, #8]
  421e70:	cbnz	w5, 422b18 <nftw@plt+0x1ff98>
  421e74:	ldrb	w1, [x27, #24]
  421e78:	str	wzr, [sp, #172]
  421e7c:	str	w1, [sp, #180]
  421e80:	cbz	w1, 4220b4 <nftw@plt+0x1f534>
  421e84:	cbz	x9, 422148 <nftw@plt+0x1f5c8>
  421e88:	ldr	x1, [sp, #136]
  421e8c:	mov	x0, #0x1                   	// #1
  421e90:	sub	w2, w1, #0x41
  421e94:	sub	x1, x1, #0x1
  421e98:	lsl	x0, x0, x2
  421e9c:	tst	x9, x0
  421ea0:	b.ne	42314c <nftw@plt+0x205cc>  // b.any
  421ea4:	nop
  421ea8:	lsr	x0, x0, #1
  421eac:	mov	x7, x1
  421eb0:	tst	x9, x0
  421eb4:	sub	x1, x1, #0x1
  421eb8:	b.eq	421ea8 <nftw@plt+0x1f328>  // b.none
  421ebc:	ldr	x0, [sp, #136]
  421ec0:	sub	x19, x0, x7
  421ec4:	mov	w0, #0x1                   	// #1
  421ec8:	stp	x9, x22, [sp, #352]
  421ecc:	add	x22, sp, #0x190
  421ed0:	strb	w0, [sp, #368]
  421ed4:	mov	x2, x19
  421ed8:	ldr	x18, [sp, #136]
  421edc:	add	x0, sp, #0x100
  421ee0:	ldp	x4, x5, [x15]
  421ee4:	stp	x4, x5, [sp, #256]
  421ee8:	mov	x8, x22
  421eec:	ldr	x3, [x15, #16]
  421ef0:	mov	x1, x18
  421ef4:	str	x3, [sp, #272]
  421ef8:	bl	4204e0 <nftw@plt+0x1d960>
  421efc:	stp	xzr, xzr, [sp, #144]
  421f00:	ldrb	w0, [sp, #416]
  421f04:	ldp	x9, x26, [sp, #400]
  421f08:	mov	x10, x21
  421f0c:	ldr	w12, [sp, #128]
  421f10:	mov	x11, x24
  421f14:	mov	x24, x19
  421f18:	mov	x19, x18
  421f1c:	str	x20, [sp, #128]
  421f20:	mov	w15, #0x1                   	// #1
  421f24:	mov	x21, x26
  421f28:	mov	x20, x9
  421f2c:	mov	x26, x22
  421f30:	mov	w22, w0
  421f34:	nop
  421f38:	mov	x6, x19
  421f3c:	mov	w5, w22
  421f40:	mov	x4, x21
  421f44:	mov	x3, x20
  421f48:	mov	w2, w15
  421f4c:	mov	x1, x11
  421f50:	mov	x0, x10
  421f54:	bl	420a18 <nftw@plt+0x1de98>
  421f58:	tst	w0, #0xff
  421f5c:	b.ne	42202c <nftw@plt+0x1f4ac>  // b.any
  421f60:	cbz	x24, 422968 <nftw@plt+0x1fde8>
  421f64:	sub	x24, x24, #0x1
  421f68:	extr	x21, x20, x21, #1
  421f6c:	lsr	x20, x20, #1
  421f70:	b	421f38 <nftw@plt+0x1f3b8>
  421f74:	sub	x20, x27, #0x28
  421f78:	ldr	w4, [x27, #32]
  421f7c:	ldp	x2, x3, [x27, #-32]
  421f80:	mov	x19, x20
  421f84:	ldp	x5, x0, [x27, #8]
  421f88:	stp	x2, x3, [sp, #400]
  421f8c:	ldr	x2, [x20, #24]
  421f90:	str	x2, [sp, #416]
  421f94:	ldp	x2, x3, [x27, #-32]
  421f98:	strh	wzr, [sp, #416]
  421f9c:	cmp	x3, x0
  421fa0:	cset	w0, eq  // eq = none
  421fa4:	cmp	x2, x5
  421fa8:	csel	w0, w0, wzr, eq  // eq = none
  421fac:	cmp	w25, #0x18
  421fb0:	eor	w2, w0, #0x1
  421fb4:	csel	w0, w0, w2, ne  // ne = any
  421fb8:	and	x0, x0, #0xff
  421fbc:	stp	xzr, x0, [sp, #400]
  421fc0:	ldr	x0, [sp, #416]
  421fc4:	str	x0, [sp, #440]
  421fc8:	add	x0, sp, #0x260
  421fcc:	ldp	x2, x3, [sp, #400]
  421fd0:	stp	x2, x3, [x0, #-184]
  421fd4:	stp	x2, x3, [x27, #-32]
  421fd8:	ldr	x0, [sp, #440]
  421fdc:	str	x0, [x20, #24]
  421fe0:	stur	w4, [x27, #-8]
  421fe4:	b	421c60 <nftw@plt+0x1f0e0>
  421fe8:	mov	x26, x28
  421fec:	mov	w28, w25
  421ff0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  421ff4:	mov	w3, w28
  421ff8:	mov	x0, x26
  421ffc:	add	x2, x2, #0xbf0
  422000:	mov	w1, #0x4                   	// #4
  422004:	str	wzr, [sp, #104]
  422008:	bl	41f298 <nftw@plt+0x1c718>
  42200c:	ldrb	w0, [sp, #104]
  422010:	ldp	x19, x20, [sp, #16]
  422014:	ldp	x21, x22, [sp, #32]
  422018:	ldp	x23, x24, [sp, #48]
  42201c:	ldp	x25, x26, [sp, #64]
  422020:	ldp	x27, x28, [sp, #80]
  422024:	ldp	x29, x30, [sp], #448
  422028:	ret
  42202c:	stp	x10, x11, [sp, #328]
  422030:	add	x1, sp, #0xe0
  422034:	add	x8, sp, #0x100
  422038:	strb	w15, [sp, #344]
  42203c:	add	x2, sp, #0xc0
  422040:	strb	w12, [sp, #345]
  422044:	mov	w3, #0x5                   	// #5
  422048:	stp	x20, x21, [sp, #400]
  42204c:	ldp	x10, x11, [x23]
  422050:	stp	x10, x11, [sp, #224]
  422054:	ldr	x0, [x23, #16]
  422058:	str	x0, [sp, #240]
  42205c:	mov	x0, x28
  422060:	ldp	x10, x11, [x26]
  422064:	stp	x10, x11, [sp, #192]
  422068:	ldr	x5, [x26, #16]
  42206c:	str	x5, [sp, #208]
  422070:	bl	420650 <nftw@plt+0x1dad0>
  422074:	ldp	x0, x1, [sp, #256]
  422078:	stp	x0, x1, [x23]
  42207c:	cmp	x24, #0x3f
  422080:	ldr	x0, [sp, #272]
  422084:	ldp	x10, x11, [sp, #328]
  422088:	str	x0, [x23, #16]
  42208c:	ldrb	w15, [sp, #344]
  422090:	ldrb	w12, [sp, #345]
  422094:	b.ls	42294c <nftw@plt+0x1fdcc>  // b.plast
  422098:	sub	w0, w24, #0x40
  42209c:	mov	x1, #0x1                   	// #1
  4220a0:	lsl	x0, x1, x0
  4220a4:	ldr	x1, [sp, #152]
  4220a8:	orr	x0, x1, x0
  4220ac:	str	x0, [sp, #152]
  4220b0:	b	421f64 <nftw@plt+0x1f3e4>
  4220b4:	cmp	x0, #0x40
  4220b8:	b.hi	422c40 <nftw@plt+0x200c0>  // b.pmore
  4220bc:	ldr	w0, [sp, #136]
  4220c0:	sub	w26, w0, #0x1
  4220c4:	ldr	w0, [sp, #180]
  4220c8:	str	w0, [sp, #172]
  4220cc:	lsr	x0, x24, x26
  4220d0:	tbnz	w0, #0, 42306c <nftw@plt+0x204ec>
  4220d4:	lsr	x0, x22, x26
  4220d8:	mvn	x0, x0
  4220dc:	and	w0, w0, #0x1
  4220e0:	ldr	w1, [sp, #172]
  4220e4:	str	w1, [sp, #176]
  4220e8:	cbnz	w0, 421e84 <nftw@plt+0x1f304>
  4220ec:	stp	x9, x22, [sp, #352]
  4220f0:	add	x0, sp, #0xe0
  4220f4:	add	x8, sp, #0x100
  4220f8:	strb	wzr, [sp, #368]
  4220fc:	ldr	x1, [sp, #136]
  422100:	str	w5, [sp, #144]
  422104:	ldp	x2, x3, [x15]
  422108:	stp	x2, x3, [sp, #224]
  42210c:	ldr	w2, [sp, #172]
  422110:	eor	w2, w2, #0x1
  422114:	str	w2, [sp, #176]
  422118:	ldr	x2, [x15, #16]
  42211c:	str	x2, [sp, #240]
  422120:	bl	420070 <nftw@plt+0x1d4f0>
  422124:	str	wzr, [sp, #180]
  422128:	ldp	x0, x1, [sp, #256]
  42212c:	stp	x0, x1, [x15]
  422130:	ldr	w5, [sp, #144]
  422134:	ldp	x9, x22, [sp, #352]
  422138:	ldr	x0, [sp, #272]
  42213c:	str	x0, [x15, #16]
  422140:	cbnz	x9, 421e88 <nftw@plt+0x1f308>
  422144:	nop
  422148:	cbz	x22, 422bc8 <nftw@plt+0x20048>
  42214c:	ldr	x0, [sp, #136]
  422150:	mov	x1, #0x1                   	// #1
  422154:	cmp	x0, #0x40
  422158:	sub	x7, x0, #0x1
  42215c:	sub	x0, x0, #0x41
  422160:	csel	x0, x0, x7, hi  // hi = pmore
  422164:	sub	x19, x7, x0
  422168:	lsl	x1, x1, x0
  42216c:	tst	x22, x1
  422170:	b.ne	421ec4 <nftw@plt+0x1f344>  // b.any
  422174:	nop
  422178:	lsr	x1, x1, #1
  42217c:	mov	x7, x0
  422180:	tst	x22, x1
  422184:	sub	x0, x0, #0x1
  422188:	b.eq	422178 <nftw@plt+0x1f5f8>  // b.none
  42218c:	b	421ebc <nftw@plt+0x1f33c>
  422190:	ldp	x1, x0, [x27, #-32]
  422194:	sub	x20, x27, #0x28
  422198:	mov	x19, x20
  42219c:	orr	x0, x0, x1
  4221a0:	cbnz	x0, 4229e4 <nftw@plt+0x1fe64>
  4221a4:	ldr	w1, [x28, #28]
  4221a8:	sub	w1, w1, #0x1
  4221ac:	str	w1, [x28, #28]
  4221b0:	ldr	w18, [x19, #36]
  4221b4:	ldr	w1, [x27, #32]
  4221b8:	str	w1, [x20, #32]
  4221bc:	ldr	x1, [sp, #96]
  4221c0:	stp	xzr, x0, [x20, #8]
  4221c4:	sbfiz	x0, x18, #1, #32
  4221c8:	strb	wzr, [x20, #24]
  4221cc:	strb	wzr, [x20, #25]
  4221d0:	ldrb	w0, [x1, x0]
  4221d4:	ldr	w1, [sp, #124]
  4221d8:	cmp	w0, w1
  4221dc:	b.hi	421c8c <nftw@plt+0x1f10c>  // b.pmore
  4221e0:	ldr	w22, [sp, #168]
  4221e4:	mov	x25, x28
  4221e8:	mov	x27, x19
  4221ec:	cmp	w22, #0x15
  4221f0:	b.eq	4232ec <nftw@plt+0x2076c>  // b.none
  4221f4:	cmp	w22, #0x16
  4221f8:	b.ne	422514 <nftw@plt+0x1f994>  // b.any
  4221fc:	ldr	x0, [x25, #432]
  422200:	mov	x26, x25
  422204:	cbz	x0, 422220 <nftw@plt+0x1f6a0>
  422208:	ldr	w1, [sp, #108]
  42220c:	ldr	w0, [sp, #184]
  422210:	cmp	w1, #0x3
  422214:	eor	w0, w0, #0x1
  422218:	csinc	w0, w0, wzr, eq  // eq = none
  42221c:	cbnz	w0, 423254 <nftw@plt+0x206d4>
  422220:	ldr	x0, [x26, #1096]
  422224:	cmp	x0, x27
  422228:	b.eq	423208 <nftw@plt+0x20688>  // b.none
  42222c:	ldr	w0, [sp, #188]
  422230:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422234:	ldr	w2, [x27, #32]
  422238:	add	x1, x1, #0x940
  42223c:	cmp	w0, #0x0
  422240:	adrp	x5, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422244:	add	x5, x5, #0x938
  422248:	mov	x0, x26
  42224c:	csel	x5, x5, x1, ne  // ne = any
  422250:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422254:	mov	w3, #0x0                   	// #0
  422258:	add	x4, x4, #0xd78
  42225c:	mov	w1, #0x4                   	// #4
  422260:	str	wzr, [sp, #104]
  422264:	bl	41f458 <nftw@plt+0x1c8d8>
  422268:	b	42200c <nftw@plt+0x1f48c>
  42226c:	sub	x20, x27, #0x28
  422270:	add	x2, sp, #0x200
  422274:	ldp	x0, x1, [x27, #-32]
  422278:	stp	x0, x1, [sp, #304]
  42227c:	ldurb	w11, [x27, #-16]
  422280:	ldp	x0, x1, [x27, #8]
  422284:	stp	x0, x1, [x2, #-184]
  422288:	add	x23, sp, #0x148
  42228c:	ldr	x0, [x20, #24]
  422290:	str	x0, [sp, #320]
  422294:	ldr	x0, [x27, #24]
  422298:	str	x0, [sp, #344]
  42229c:	ldp	x10, x24, [x27, #-32]
  4222a0:	ldp	x26, x19, [x27, #8]
  4222a4:	ldr	x9, [x28, #1208]
  4222a8:	cbnz	w11, 422a6c <nftw@plt+0x1feec>
  4222ac:	ldrb	w18, [x27, #24]
  4222b0:	mov	w13, #0x1                   	// #1
  4222b4:	cbz	w18, 422404 <nftw@plt+0x1f884>
  4222b8:	add	x15, sp, #0x160
  4222bc:	add	x22, sp, #0x190
  4222c0:	mov	x1, x19
  4222c4:	mov	x8, x22
  4222c8:	mov	x0, x24
  4222cc:	mov	w23, #0x1                   	// #1
  4222d0:	bl	420130 <nftw@plt+0x1d5b0>
  4222d4:	mov	x0, x10
  4222d8:	ldp	x7, x14, [sp, #400]
  4222dc:	mov	x1, x19
  4222e0:	mov	x8, x15
  4222e4:	ldrh	w19, [sp, #416]
  4222e8:	bl	420130 <nftw@plt+0x1d5b0>
  4222ec:	ldp	x1, x0, [sp, #352]
  4222f0:	add	x7, x7, x0
  4222f4:	cbnz	x1, 422308 <nftw@plt+0x1f788>
  4222f8:	cmp	x26, #0x0
  4222fc:	cset	w23, ne  // ne = any
  422300:	cmp	x10, #0x0
  422304:	csel	w23, w23, wzr, ne  // ne = any
  422308:	mov	x1, x26
  42230c:	mov	x0, x24
  422310:	mov	x8, x15
  422314:	bl	420130 <nftw@plt+0x1d5b0>
  422318:	ldp	x2, x0, [sp, #352]
  42231c:	add	x6, sp, #0x260
  422320:	ldr	x1, [x22, #16]
  422324:	mov	w3, #0x1                   	// #1
  422328:	add	x26, sp, #0x178
  42232c:	add	x0, x7, x0
  422330:	stp	x1, x0, [sp, #392]
  422334:	cmp	x2, #0x0
  422338:	ldp	x4, x5, [x22]
  42233c:	stp	x4, x5, [x6, #-232]
  422340:	csel	w23, w23, w3, eq  // eq = none
  422344:	cmp	x9, #0x40
  422348:	b.ls	422a7c <nftw@plt+0x1fefc>  // b.plast
  42234c:	sub	x2, x9, #0x40
  422350:	cmp	x2, #0x3f
  422354:	b.hi	422ec4 <nftw@plt+0x20344>  // b.pmore
  422358:	mov	x3, #0xffffffffffffffff    	// #-1
  42235c:	lsl	x3, x3, x2
  422360:	bic	x3, x0, x3
  422364:	add	x2, sp, #0x260
  422368:	ldr	x1, [x26, #16]
  42236c:	str	x3, [sp, #376]
  422370:	str	x1, [x22, #16]
  422374:	ldp	x4, x5, [x26]
  422378:	stp	x4, x5, [x2, #-184]
  42237c:	stp	x4, x5, [x22]
  422380:	str	x1, [sp, #440]
  422384:	cmp	x0, x3
  422388:	mov	x2, x14
  42238c:	csinc	w23, w23, wzr, eq  // eq = none
  422390:	cbnz	w11, 422ab8 <nftw@plt+0x1ff38>
  422394:	mov	w0, #0x0                   	// #0
  422398:	cbnz	w18, 4223d8 <nftw@plt+0x1f858>
  42239c:	mov	w0, #0x1                   	// #1
  4223a0:	cbnz	w23, 4223d8 <nftw@plt+0x1f858>
  4223a4:	cmp	x9, #0x40
  4223a8:	b.hi	423110 <nftw@plt+0x20590>  // b.pmore
  4223ac:	sub	w1, w9, #0x1
  4223b0:	lsr	x1, x2, x1
  4223b4:	mvn	x1, x1
  4223b8:	and	w1, w1, #0x1
  4223bc:	eor	w11, w11, #0x1
  4223c0:	mov	w0, #0x0                   	// #0
  4223c4:	cmp	w11, w1
  4223c8:	b.eq	4223d8 <nftw@plt+0x1f858>  // b.none
  4223cc:	orr	x0, x2, x3
  4223d0:	cmp	x0, #0x0
  4223d4:	cset	w0, ne  // ne = any
  4223d8:	strb	w13, [sp, #416]
  4223dc:	mov	x19, x20
  4223e0:	strb	w0, [sp, #417]
  4223e4:	ldr	w0, [x27, #32]
  4223e8:	stp	x3, x2, [sp, #400]
  4223ec:	ldp	x2, x3, [x22]
  4223f0:	stp	x2, x3, [x20, #8]
  4223f4:	ldr	x1, [x22, #16]
  4223f8:	str	x1, [x20, #24]
  4223fc:	str	w0, [x20, #32]
  422400:	b	421c60 <nftw@plt+0x1f0e0>
  422404:	cmp	x9, #0x40
  422408:	b.hi	422c80 <nftw@plt+0x20100>  // b.pmore
  42240c:	sub	w12, w9, #0x1
  422410:	mov	w11, w18
  422414:	lsr	x0, x24, x12
  422418:	tbnz	w0, #0, 4230c8 <nftw@plt+0x20548>
  42241c:	lsr	x0, x19, x12
  422420:	mvn	x0, x0
  422424:	and	w0, w0, #0x1
  422428:	mov	w13, #0x0                   	// #0
  42242c:	cbnz	w0, 4222b8 <nftw@plt+0x1f738>
  422430:	stp	x26, x19, [sp, #328]
  422434:	eor	w11, w11, #0x1
  422438:	mov	x1, x9
  42243c:	strb	wzr, [sp, #344]
  422440:	add	x0, sp, #0xe0
  422444:	add	x8, sp, #0x100
  422448:	ldp	x2, x3, [x23]
  42244c:	stp	x2, x3, [sp, #224]
  422450:	ldr	x2, [x23, #16]
  422454:	str	x2, [sp, #240]
  422458:	bl	420070 <nftw@plt+0x1d4f0>
  42245c:	ldp	x0, x1, [sp, #256]
  422460:	stp	x0, x1, [x23]
  422464:	mov	w18, #0x0                   	// #0
  422468:	ldr	x0, [sp, #272]
  42246c:	mov	w13, w18
  422470:	ldp	x26, x19, [sp, #328]
  422474:	str	x0, [x23, #16]
  422478:	b	4222b8 <nftw@plt+0x1f738>
  42247c:	ldr	w22, [sp, #168]
  422480:	mov	x25, x28
  422484:	cmp	w22, #0x15
  422488:	b.ne	422e9c <nftw@plt+0x2031c>  // b.any
  42248c:	ldp	x2, x3, [x27, #8]
  422490:	sub	x0, x27, #0x28
  422494:	ldr	w1, [x27, #32]
  422498:	stp	x2, x3, [x27, #-32]
  42249c:	ldr	x2, [x27, #24]
  4224a0:	stur	x2, [x27, #-16]
  4224a4:	stur	w1, [x27, #-8]
  4224a8:	mov	x27, x0
  4224ac:	b	421b28 <nftw@plt+0x1efa8>
  4224b0:	ldp	x2, x1, [x27, #-72]
  4224b4:	sub	x0, x27, #0x50
  4224b8:	mov	x19, x0
  4224bc:	orr	x1, x1, x2
  4224c0:	cbz	x1, 422af8 <nftw@plt+0x1ff78>
  4224c4:	ldr	w1, [x28, #28]
  4224c8:	sub	x20, x27, #0x28
  4224cc:	ldp	x2, x3, [x27, #-32]
  4224d0:	sub	w1, w1, #0x1
  4224d4:	str	w1, [x28, #28]
  4224d8:	stp	x2, x3, [x27, #-72]
  4224dc:	ldur	w1, [x27, #-8]
  4224e0:	ldr	x2, [x20, #24]
  4224e4:	str	x2, [x0, #24]
  4224e8:	stur	w1, [x27, #-48]
  4224ec:	ldrb	w1, [x20, #24]
  4224f0:	cbnz	w1, 4224f8 <nftw@plt+0x1f978>
  4224f4:	ldrb	w1, [x27, #24]
  4224f8:	strb	w1, [x0, #24]
  4224fc:	b	421c70 <nftw@plt+0x1f0f0>
  422500:	ldr	w22, [sp, #168]
  422504:	mov	x25, x28
  422508:	sub	w0, w22, #0x12
  42250c:	cmp	w0, #0x1
  422510:	b.hi	422d04 <nftw@plt+0x20184>  // b.pmore
  422514:	cmp	w22, #0x11
  422518:	b.eq	4229f8 <nftw@plt+0x1fe78>  // b.none
  42251c:	b.hi	42268c <nftw@plt+0x1fb0c>  // b.pmore
  422520:	cmp	w22, #0xf
  422524:	b.eq	4229f8 <nftw@plt+0x1fe78>  // b.none
  422528:	cmp	w22, #0x10
  42252c:	b.ne	422548 <nftw@plt+0x1f9c8>  // b.any
  422530:	ldp	x1, x0, [x27, #8]
  422534:	orr	x0, x0, x1
  422538:	cbz	x0, 422548 <nftw@plt+0x1f9c8>
  42253c:	ldr	w0, [x25, #28]
  422540:	add	w0, w0, #0x1
  422544:	str	w0, [x25, #28]
  422548:	ldr	x0, [x25, #1104]
  42254c:	add	x27, x27, #0x28
  422550:	cmp	x0, x27
  422554:	b.eq	4226cc <nftw@plt+0x1fb4c>  // b.none
  422558:	mov	w0, #0x1                   	// #1
  42255c:	str	w0, [sp, #104]
  422560:	ldr	x0, [sp, #112]
  422564:	str	x0, [x27]
  422568:	ldr	w0, [sp, #120]
  42256c:	str	w0, [x27, #32]
  422570:	str	w22, [x27, #36]
  422574:	b	421b28 <nftw@plt+0x1efa8>
  422578:	ldp	x1, x0, [x27, #-32]
  42257c:	sub	x20, x27, #0x28
  422580:	mov	x19, x20
  422584:	orr	x0, x0, x1
  422588:	cbz	x0, 4229e4 <nftw@plt+0x1fe64>
  42258c:	ldr	w1, [x28, #28]
  422590:	mov	x0, #0x1                   	// #1
  422594:	sub	w1, w1, #0x1
  422598:	str	w1, [x28, #28]
  42259c:	b	4221b0 <nftw@plt+0x1f630>
  4225a0:	cmp	w0, #0x35
  4225a4:	b.eq	423370 <nftw@plt+0x207f0>  // b.none
  4225a8:	b.ls	42262c <nftw@plt+0x1faac>  // b.plast
  4225ac:	sub	w1, w0, #0x37
  4225b0:	and	w1, w1, #0xff
  4225b4:	cmp	w1, #0x5
  4225b8:	b.hi	4232b8 <nftw@plt+0x20738>  // b.pmore
  4225bc:	ldr	w1, [sp, #104]
  4225c0:	cbz	w1, 42263c <nftw@plt+0x1fabc>
  4225c4:	str	wzr, [sp, #400]
  4225c8:	cmp	w0, #0x37
  4225cc:	b.eq	422bdc <nftw@plt+0x2005c>  // b.none
  4225d0:	ldr	x1, [sp, #112]
  4225d4:	add	x2, sp, #0x178
  4225d8:	add	x3, sp, #0x190
  4225dc:	mov	x0, x25
  4225e0:	bl	41ab70 <nftw@plt+0x17ff0>
  4225e4:	mov	w1, w0
  4225e8:	ldr	w2, [sp, #400]
  4225ec:	cbnz	w2, 422b30 <nftw@plt+0x1ffb0>
  4225f0:	mov	w2, #0x0                   	// #0
  4225f4:	mov	x3, #0x0                   	// #0
  4225f8:	tbnz	w0, #31, 423040 <nftw@plt+0x204c0>
  4225fc:	nop
  422600:	add	x19, sp, #0x1a8
  422604:	mov	w0, #0x0                   	// #0
  422608:	stp	x3, x1, [sp, #424]
  42260c:	strb	w2, [sp, #440]
  422610:	strb	w0, [sp, #441]
  422614:	str	wzr, [sp, #104]
  422618:	ldp	x0, x1, [x19]
  42261c:	stp	x0, x1, [x27, #8]
  422620:	ldr	x0, [x19, #16]
  422624:	str	x0, [x27, #24]
  422628:	b	421b28 <nftw@plt+0x1efa8>
  42262c:	cmp	w0, #0x25
  422630:	b.ne	422858 <nftw@plt+0x1fcd8>  // b.any
  422634:	ldr	w0, [sp, #104]
  422638:	cbnz	w0, 422b3c <nftw@plt+0x1ffbc>
  42263c:	ldr	x1, [sp, #112]
  422640:	mov	x0, x25
  422644:	bl	428d50 <nftw@plt+0x261d0>
  422648:	mov	x5, x0
  42264c:	ldr	w2, [sp, #120]
  422650:	mov	x0, x25
  422654:	mov	w3, #0x0                   	// #0
  422658:	mov	w1, #0x3                   	// #3
  42265c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422660:	add	x4, x4, #0x948
  422664:	str	wzr, [sp, #104]
  422668:	bl	41f458 <nftw@plt+0x1c8d8>
  42266c:	ldrb	w0, [sp, #104]
  422670:	ldp	x19, x20, [sp, #16]
  422674:	ldp	x21, x22, [sp, #32]
  422678:	ldp	x23, x24, [sp, #48]
  42267c:	ldp	x25, x26, [sp, #64]
  422680:	ldp	x27, x28, [sp, #80]
  422684:	ldp	x29, x30, [sp], #448
  422688:	ret
  42268c:	cmp	w22, #0x12
  422690:	b.ne	4226dc <nftw@plt+0x1fb5c>  // b.any
  422694:	ldr	w0, [x27, #36]
  422698:	cmp	w0, #0x11
  42269c:	b.ne	423308 <nftw@plt+0x20788>  // b.any
  4226a0:	ldp	x2, x1, [x27, #-32]
  4226a4:	add	x27, x27, #0x28
  4226a8:	ldr	w0, [x25, #28]
  4226ac:	orr	x1, x1, x2
  4226b0:	cmp	x1, #0x0
  4226b4:	sub	w1, w0, #0x1
  4226b8:	csinc	w0, w1, w0, eq  // eq = none
  4226bc:	str	w0, [x25, #28]
  4226c0:	ldr	x0, [x25, #1104]
  4226c4:	cmp	x0, x27
  4226c8:	b.ne	422558 <nftw@plt+0x1f9d8>  // b.any
  4226cc:	mov	x0, x25
  4226d0:	bl	421a80 <nftw@plt+0x1ef00>
  4226d4:	mov	x27, x0
  4226d8:	b	422558 <nftw@plt+0x1f9d8>
  4226dc:	cmp	w22, #0x15
  4226e0:	b.eq	421b28 <nftw@plt+0x1efa8>  // b.none
  4226e4:	b	422548 <nftw@plt+0x1f9c8>
  4226e8:	ldrb	w0, [x27, #24]
  4226ec:	sub	x20, x27, #0x28
  4226f0:	ldurb	w1, [x27, #-16]
  4226f4:	cmp	w1, w0
  4226f8:	b.eq	421be0 <nftw@plt+0x1f060>  // b.none
  4226fc:	ldr	x1, [x28, #1208]
  422700:	cmp	x1, #0x40
  422704:	cbz	w0, 422a08 <nftw@plt+0x1fe88>
  422708:	ldp	x0, x2, [x27, #-32]
  42270c:	b.hi	422d3c <nftw@plt+0x201bc>  // b.pmore
  422710:	sub	w1, w1, #0x1
  422714:	lsr	x1, x2, x1
  422718:	mvn	x0, x1
  42271c:	and	w0, w0, #0x1
  422720:	cbnz	w0, 421be0 <nftw@plt+0x1f060>
  422724:	ldr	x1, [x27]
  422728:	mov	x0, x28
  42272c:	ldr	w19, [x20, #32]
  422730:	bl	428d50 <nftw@plt+0x261d0>
  422734:	mov	x5, x0
  422738:	mov	w2, w19
  42273c:	mov	x0, x28
  422740:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422744:	mov	w3, #0x0                   	// #0
  422748:	add	x4, x4, #0xc10
  42274c:	mov	w1, #0x0                   	// #0
  422750:	bl	41f458 <nftw@plt+0x1c8d8>
  422754:	b	421be0 <nftw@plt+0x1f060>
  422758:	ldr	w1, [sp, #104]
  42275c:	cbz	w1, 422810 <nftw@plt+0x1fc90>
  422760:	ldr	w23, [x27, #36]
  422764:	sub	w0, w23, #0x1
  422768:	cmp	w0, #0x1b
  42276c:	b.hi	422b24 <nftw@plt+0x1ffa4>  // b.pmore
  422770:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422774:	add	x0, x2, #0xdc8
  422778:	mov	x1, x0
  42277c:	sbfiz	x0, x23, #1, #32
  422780:	str	x1, [sp, #96]
  422784:	mov	w18, w23
  422788:	mov	w22, #0x1c                  	// #28
  42278c:	ldrb	w0, [x1, x0]
  422790:	cmp	w0, #0x10
  422794:	b.hi	421bac <nftw@plt+0x1f02c>  // b.pmore
  422798:	b	422548 <nftw@plt+0x1f9c8>
  42279c:	ldr	w1, [sp, #108]
  4227a0:	mov	w22, w0
  4227a4:	cmp	w1, #0x1
  4227a8:	cset	w1, eq  // eq = none
  4227ac:	str	w1, [sp, #184]
  4227b0:	mov	w1, w0
  4227b4:	ldr	w2, [sp, #104]
  4227b8:	cbz	w2, 423154 <nftw@plt+0x205d4>
  4227bc:	ldr	w23, [x27, #36]
  4227c0:	sub	w2, w23, #0x1
  4227c4:	cmp	w2, #0x1b
  4227c8:	b.hi	422b24 <nftw@plt+0x1ffa4>  // b.pmore
  4227cc:	cmp	w22, #0x14
  4227d0:	b.eq	422548 <nftw@plt+0x1f9c8>  // b.none
  4227d4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4227d8:	add	x2, x2, #0xdc8
  4227dc:	str	x2, [sp, #96]
  4227e0:	ldr	x4, [sp, #96]
  4227e4:	sbfiz	x1, x1, #1, #32
  4227e8:	sbfiz	x3, x23, #1, #32
  4227ec:	ubfx	x0, x0, #1, #1
  4227f0:	mov	w18, w23
  4227f4:	ldrb	w2, [x4, x1]
  4227f8:	ldrb	w1, [x4, x3]
  4227fc:	sub	w0, w2, w0
  422800:	str	w0, [sp, #124]
  422804:	cmp	w0, w1
  422808:	b.cc	421bb4 <nftw@plt+0x1f034>  // b.lo, b.ul, b.last
  42280c:	b	4221ec <nftw@plt+0x1f66c>
  422810:	ldr	w23, [x27, #36]
  422814:	mov	w22, w0
  422818:	sub	w1, w23, #0x1
  42281c:	cmp	w1, #0x1b
  422820:	b.hi	422b24 <nftw@plt+0x1ffa4>  // b.pmore
  422824:	sbfiz	x0, x0, #1, #32
  422828:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42282c:	add	x3, x2, #0xdc8
  422830:	sbfiz	x2, x23, #1, #32
  422834:	str	x3, [sp, #96]
  422838:	mov	w18, w23
  42283c:	ldrb	w1, [x3, x0]
  422840:	ldrb	w0, [x3, x2]
  422844:	sub	w1, w1, #0x1
  422848:	str	w1, [sp, #124]
  42284c:	cmp	w0, w1
  422850:	b.hi	421bb4 <nftw@plt+0x1f034>  // b.pmore
  422854:	b	422514 <nftw@plt+0x1f994>
  422858:	sub	w1, w0, #0x1
  42285c:	mov	w22, w0
  422860:	cmp	w1, #0x19
  422864:	b.hi	4232b8 <nftw@plt+0x20738>  // b.pmore
  422868:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42286c:	add	x1, x2, #0xdc8
  422870:	add	x2, x1, w0, sxtw #1
  422874:	str	x1, [sp, #96]
  422878:	mov	w1, w0
  42287c:	ldrb	w0, [x2, #1]
  422880:	tbnz	w0, #0, 4227b4 <nftw@plt+0x1fc34>
  422884:	ldr	w2, [sp, #104]
  422888:	ldr	w23, [x27, #36]
  42288c:	cbz	w2, 4227c0 <nftw@plt+0x1fc40>
  422890:	cmp	w22, #0x15
  422894:	b.ne	4228e4 <nftw@plt+0x1fd64>  // b.any
  422898:	cmp	w23, #0x14
  42289c:	b.eq	423338 <nftw@plt+0x207b8>  // b.none
  4228a0:	and	w2, w23, #0xfffffffd
  4228a4:	mov	w1, w22
  4228a8:	cmp	w2, #0x14
  4228ac:	b.eq	4227e0 <nftw@plt+0x1fc60>  // b.none
  4228b0:	ldr	x1, [x27]
  4228b4:	mov	x0, x25
  4228b8:	str	wzr, [sp, #104]
  4228bc:	bl	428d50 <nftw@plt+0x261d0>
  4228c0:	mov	x5, x0
  4228c4:	ldr	w2, [sp, #120]
  4228c8:	mov	x0, x25
  4228cc:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4228d0:	mov	w3, #0x0                   	// #0
  4228d4:	add	x4, x4, #0xba0
  4228d8:	mov	w1, #0x3                   	// #3
  4228dc:	bl	41f458 <nftw@plt+0x1c8d8>
  4228e0:	b	42200c <nftw@plt+0x1f48c>
  4228e4:	cmp	w22, #0x16
  4228e8:	b.ne	422b7c <nftw@plt+0x1fffc>  // b.any
  4228ec:	cmp	w23, #0x16
  4228f0:	b.ne	4228a0 <nftw@plt+0x1fd20>  // b.any
  4228f4:	ldr	w0, [sp, #188]
  4228f8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4228fc:	ldr	w2, [sp, #120]
  422900:	add	x1, x1, #0x940
  422904:	cmp	w0, #0x0
  422908:	adrp	x5, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42290c:	add	x5, x5, #0x938
  422910:	mov	x0, x25
  422914:	csel	x5, x5, x1, ne  // ne = any
  422918:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42291c:	mov	w3, #0x0                   	// #0
  422920:	add	x4, x4, #0xb88
  422924:	mov	w1, #0x3                   	// #3
  422928:	str	wzr, [sp, #104]
  42292c:	bl	41f458 <nftw@plt+0x1c8d8>
  422930:	b	42200c <nftw@plt+0x1f48c>
  422934:	mov	x0, x28
  422938:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42293c:	mov	w1, #0x2                   	// #2
  422940:	add	x2, x2, #0xd08
  422944:	bl	41f298 <nftw@plt+0x1c718>
  422948:	b	421c70 <nftw@plt+0x1f0f0>
  42294c:	ldr	x1, [sp, #144]
  422950:	mov	x0, #0x1                   	// #1
  422954:	lsl	x0, x0, x24
  422958:	orr	x0, x1, x0
  42295c:	str	x0, [sp, #144]
  422960:	cbnz	x24, 421f64 <nftw@plt+0x1f3e4>
  422964:	nop
  422968:	ldr	w5, [sp, #180]
  42296c:	mov	x21, x10
  422970:	mov	x24, x11
  422974:	cmp	w25, #0x7
  422978:	ldr	x20, [sp, #128]
  42297c:	b.eq	422d4c <nftw@plt+0x201cc>  // b.none
  422980:	ldr	w0, [sp, #172]
  422984:	str	wzr, [sp, #128]
  422988:	cbnz	w0, 422cb4 <nftw@plt+0x20134>
  42298c:	add	x9, sp, #0x1a8
  422990:	stp	x21, x24, [sp, #328]
  422994:	ldrb	w0, [sp, #128]
  422998:	strb	w5, [sp, #344]
  42299c:	add	x2, sp, #0x260
  4229a0:	strb	w0, [sp, #345]
  4229a4:	ldp	x0, x1, [x23]
  4229a8:	stp	x0, x1, [x2, #-184]
  4229ac:	ldr	x0, [x23, #16]
  4229b0:	str	x0, [sp, #440]
  4229b4:	ldrb	w0, [sp, #128]
  4229b8:	mov	x19, x20
  4229bc:	ldr	w2, [x27, #32]
  4229c0:	stp	x21, x24, [sp, #424]
  4229c4:	strb	w5, [sp, #440]
  4229c8:	strb	w0, [sp, #441]
  4229cc:	ldp	x0, x1, [x9]
  4229d0:	stp	x0, x1, [x20, #8]
  4229d4:	ldr	x0, [x9, #16]
  4229d8:	str	x0, [x20, #24]
  4229dc:	str	w2, [x20, #32]
  4229e0:	b	421c60 <nftw@plt+0x1f0e0>
  4229e4:	ldp	x1, x0, [x27, #8]
  4229e8:	orr	x0, x0, x1
  4229ec:	cmp	x0, #0x0
  4229f0:	cset	x0, ne  // ne = any
  4229f4:	b	4221b0 <nftw@plt+0x1f630>
  4229f8:	ldp	x1, x0, [x27, #8]
  4229fc:	orr	x0, x0, x1
  422a00:	cbnz	x0, 422548 <nftw@plt+0x1f9c8>
  422a04:	b	42253c <nftw@plt+0x1f9bc>
  422a08:	ldp	x0, x2, [x27, #8]
  422a0c:	b.hi	422d2c <nftw@plt+0x201ac>  // b.pmore
  422a10:	sub	w1, w1, #0x1
  422a14:	lsr	x1, x2, x1
  422a18:	mvn	x0, x1
  422a1c:	and	w0, w0, #0x1
  422a20:	cbnz	w0, 421be0 <nftw@plt+0x1f060>
  422a24:	ldr	x1, [x27]
  422a28:	mov	x0, x28
  422a2c:	ldr	w19, [x27, #32]
  422a30:	bl	428d50 <nftw@plt+0x261d0>
  422a34:	mov	x5, x0
  422a38:	ldr	x4, [sp, #160]
  422a3c:	mov	w2, w19
  422a40:	mov	x0, x28
  422a44:	mov	w3, #0x0                   	// #0
  422a48:	mov	w1, #0x0                   	// #0
  422a4c:	bl	41f458 <nftw@plt+0x1c8d8>
  422a50:	b	421be0 <nftw@plt+0x1f060>
  422a54:	eor	w0, w1, #0x1
  422a58:	and	x0, x0, #0xff
  422a5c:	mov	x19, x20
  422a60:	stp	xzr, x0, [sp, #400]
  422a64:	strh	wzr, [sp, #416]
  422a68:	b	421df0 <nftw@plt+0x1f270>
  422a6c:	mov	w18, w11
  422a70:	mov	w13, #0x1                   	// #1
  422a74:	mov	w11, #0x0                   	// #0
  422a78:	b	4222b8 <nftw@plt+0x1f738>
  422a7c:	b.eq	422cac <nftw@plt+0x2012c>  // b.none
  422a80:	mov	x2, #0xffffffffffffffff    	// #-1
  422a84:	str	x1, [sp, #440]
  422a88:	lsl	x2, x2, x9
  422a8c:	add	x1, sp, #0x260
  422a90:	bic	x2, x14, x2
  422a94:	stp	xzr, x2, [sp, #376]
  422a98:	cmp	x2, x14
  422a9c:	ldp	x4, x5, [x26]
  422aa0:	stp	x4, x5, [x1, #-184]
  422aa4:	stp	x4, x5, [x22]
  422aa8:	b.eq	423368 <nftw@plt+0x207e8>  // b.none
  422aac:	mov	w23, w3
  422ab0:	mov	x3, #0x0                   	// #0
  422ab4:	cbz	w11, 422394 <nftw@plt+0x1f814>
  422ab8:	stp	x3, x2, [sp, #400]
  422abc:	mov	x1, x9
  422ac0:	add	x0, sp, #0xe0
  422ac4:	strh	w19, [sp, #416]
  422ac8:	add	x8, sp, #0x100
  422acc:	ldp	x2, x3, [x22]
  422ad0:	stp	x2, x3, [sp, #224]
  422ad4:	ldr	x2, [x22, #16]
  422ad8:	str	x2, [sp, #240]
  422adc:	bl	420070 <nftw@plt+0x1d4f0>
  422ae0:	ldp	x0, x1, [sp, #256]
  422ae4:	stp	x0, x1, [x22]
  422ae8:	ldr	x0, [sp, #272]
  422aec:	ldp	x3, x2, [sp, #400]
  422af0:	str	x0, [x22, #16]
  422af4:	b	422394 <nftw@plt+0x1f814>
  422af8:	ldp	x2, x3, [x27, #8]
  422afc:	stp	x2, x3, [x27, #-72]
  422b00:	sub	x20, x27, #0x28
  422b04:	ldr	x1, [x27, #24]
  422b08:	str	x1, [x0, #24]
  422b0c:	ldr	w1, [x27, #32]
  422b10:	stur	w1, [x27, #-48]
  422b14:	b	4224ec <nftw@plt+0x1f96c>
  422b18:	stp	wzr, wzr, [sp, #172]
  422b1c:	str	w5, [sp, #180]
  422b20:	b	421e84 <nftw@plt+0x1f304>
  422b24:	mov	w28, w23
  422b28:	mov	x26, x25
  422b2c:	b	421ff0 <nftw@plt+0x1f470>
  422b30:	mov	w2, #0x1                   	// #1
  422b34:	mov	x3, #0x0                   	// #0
  422b38:	b	422600 <nftw@plt+0x1fa80>
  422b3c:	ldrb	w0, [x25, #18]
  422b40:	str	wzr, [sp, #400]
  422b44:	cbnz	w0, 422b58 <nftw@plt+0x1ffd8>
  422b48:	ldrb	w0, [x25, #1154]
  422b4c:	cbnz	w0, 423298 <nftw@plt+0x20718>
  422b50:	ldrb	w0, [x25, #1132]
  422b54:	cbnz	w0, 42325c <nftw@plt+0x206dc>
  422b58:	add	x1, sp, #0x178
  422b5c:	mov	x0, x25
  422b60:	bl	41e370 <nftw@plt+0x1b7f0>
  422b64:	ldr	w0, [sp, #400]
  422b68:	mov	x3, #0x0                   	// #0
  422b6c:	ldr	w1, [sp, #376]
  422b70:	cmp	w0, #0x0
  422b74:	cset	w2, ne  // ne = any
  422b78:	b	422600 <nftw@plt+0x1fa80>
  422b7c:	and	w2, w23, #0xfffffffd
  422b80:	cmp	w2, #0x14
  422b84:	b.ne	4228b0 <nftw@plt+0x1fd30>  // b.any
  422b88:	sub	w2, w22, #0x15
  422b8c:	cmp	w2, #0x1
  422b90:	b.ls	4227e0 <nftw@plt+0x1fc60>  // b.plast
  422b94:	ldr	x1, [sp, #112]
  422b98:	mov	x0, x25
  422b9c:	bl	428d50 <nftw@plt+0x261d0>
  422ba0:	mov	x5, x0
  422ba4:	ldr	w2, [sp, #120]
  422ba8:	mov	x0, x25
  422bac:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422bb0:	mov	w3, #0x0                   	// #0
  422bb4:	add	x4, x4, #0xbc8
  422bb8:	mov	w1, #0x3                   	// #3
  422bbc:	str	wzr, [sp, #104]
  422bc0:	bl	41f458 <nftw@plt+0x1c8d8>
  422bc4:	b	42200c <nftw@plt+0x1f48c>
  422bc8:	ldr	w0, [x28, #28]
  422bcc:	cbz	w0, 423124 <nftw@plt+0x205a4>
  422bd0:	add	x9, sp, #0x1a8
  422bd4:	stp	x21, x24, [sp, #328]
  422bd8:	b	422994 <nftw@plt+0x1fe14>
  422bdc:	ldr	w3, [sp, #120]
  422be0:	mov	x0, x25
  422be4:	ldr	x1, [sp, #112]
  422be8:	mov	x2, #0x0                   	// #0
  422bec:	bl	420cd8 <nftw@plt+0x1e158>
  422bf0:	str	w0, [sp, #376]
  422bf4:	tbnz	w0, #24, 422f80 <nftw@plt+0x20400>
  422bf8:	and	w1, w0, #0xf
  422bfc:	cmp	w1, #0x1
  422c00:	b.eq	422f54 <nftw@plt+0x203d4>  // b.none
  422c04:	cmp	w1, #0x2
  422c08:	b.ne	422c28 <nftw@plt+0x200a8>  // b.any
  422c0c:	ldr	w2, [sp, #120]
  422c10:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422c14:	add	x4, x4, #0x9a8
  422c18:	mov	w3, #0x0                   	// #0
  422c1c:	mov	x0, x25
  422c20:	mov	w1, #0x3                   	// #3
  422c24:	bl	41f458 <nftw@plt+0x1c8d8>
  422c28:	ldr	w0, [sp, #400]
  422c2c:	mov	x1, #0x0                   	// #0
  422c30:	mov	x3, #0x0                   	// #0
  422c34:	cmp	w0, #0x0
  422c38:	cset	w2, ne  // ne = any
  422c3c:	b	422600 <nftw@plt+0x1fa80>
  422c40:	mov	x1, x0
  422c44:	mov	x0, x21
  422c48:	str	w5, [sp, #144]
  422c4c:	bl	420348 <nftw@plt+0x1d7c8>
  422c50:	tst	w0, #0xff
  422c54:	ldr	w0, [sp, #180]
  422c58:	str	w0, [sp, #172]
  422c5c:	ldr	w5, [sp, #144]
  422c60:	b.eq	422fe4 <nftw@plt+0x20464>  // b.none
  422c64:	ldr	x1, [sp, #136]
  422c68:	mov	x0, x9
  422c6c:	str	w5, [sp, #144]
  422c70:	bl	420348 <nftw@plt+0x1d7c8>
  422c74:	and	w0, w0, #0xff
  422c78:	ldr	w5, [sp, #144]
  422c7c:	b	4220e0 <nftw@plt+0x1f560>
  422c80:	mov	x1, x9
  422c84:	mov	x0, x10
  422c88:	bl	420348 <nftw@plt+0x1d7c8>
  422c8c:	tst	w0, #0xff
  422c90:	mov	w11, w18
  422c94:	b.eq	422f9c <nftw@plt+0x2041c>  // b.none
  422c98:	mov	x1, x9
  422c9c:	mov	x0, x26
  422ca0:	bl	420348 <nftw@plt+0x1d7c8>
  422ca4:	and	w0, w0, #0xff
  422ca8:	b	422428 <nftw@plt+0x1f8a8>
  422cac:	mov	x3, #0x0                   	// #0
  422cb0:	b	422364 <nftw@plt+0x1f7e4>
  422cb4:	stp	x10, x11, [sp, #328]
  422cb8:	add	x0, sp, #0xe0
  422cbc:	add	x8, sp, #0x100
  422cc0:	strb	w5, [sp, #344]
  422cc4:	strb	wzr, [sp, #345]
  422cc8:	ldr	x1, [sp, #136]
  422ccc:	ldp	x2, x3, [x23]
  422cd0:	stp	x2, x3, [sp, #224]
  422cd4:	ldr	x2, [x23, #16]
  422cd8:	str	x2, [sp, #240]
  422cdc:	bl	420070 <nftw@plt+0x1d4f0>
  422ce0:	ldp	x0, x1, [sp, #256]
  422ce4:	stp	x0, x1, [x23]
  422ce8:	ldr	x0, [sp, #272]
  422cec:	ldp	x21, x24, [sp, #328]
  422cf0:	str	x0, [x23, #16]
  422cf4:	ldrb	w0, [sp, #345]
  422cf8:	ldrb	w5, [sp, #344]
  422cfc:	str	w0, [sp, #128]
  422d00:	b	42298c <nftw@plt+0x1fe0c>
  422d04:	mov	x0, x28
  422d08:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422d0c:	mov	w1, #0x3                   	// #3
  422d10:	add	x2, x2, #0xce8
  422d14:	str	wzr, [sp, #104]
  422d18:	bl	41f298 <nftw@plt+0x1c718>
  422d1c:	b	42200c <nftw@plt+0x1f48c>
  422d20:	and	x1, x6, x5
  422d24:	and	x2, x4, x3
  422d28:	b	421de0 <nftw@plt+0x1f260>
  422d2c:	bl	420348 <nftw@plt+0x1d7c8>
  422d30:	and	w0, w0, #0xff
  422d34:	cbnz	w0, 421be0 <nftw@plt+0x1f060>
  422d38:	b	422a24 <nftw@plt+0x1fea4>
  422d3c:	bl	420348 <nftw@plt+0x1d7c8>
  422d40:	and	w0, w0, #0xff
  422d44:	cbnz	w0, 421be0 <nftw@plt+0x1f060>
  422d48:	b	422724 <nftw@plt+0x1fba4>
  422d4c:	cbnz	w5, 422ef4 <nftw@plt+0x20374>
  422d50:	ldr	w0, [sp, #176]
  422d54:	cbnz	w0, 4231a0 <nftw@plt+0x20620>
  422d58:	ldr	w5, [sp, #176]
  422d5c:	add	x26, sp, #0x178
  422d60:	ldr	x0, [sp, #136]
  422d64:	cmp	x0, #0x40
  422d68:	b.hi	423184 <nftw@plt+0x20604>  // b.pmore
  422d6c:	ldr	w0, [sp, #136]
  422d70:	sub	w1, w0, #0x1
  422d74:	ldr	x0, [sp, #144]
  422d78:	lsr	x1, x0, x1
  422d7c:	mvn	x1, x1
  422d80:	and	w1, w1, #0x1
  422d84:	ldr	w0, [sp, #176]
  422d88:	str	wzr, [sp, #128]
  422d8c:	eor	w0, w0, #0x1
  422d90:	cmp	w1, w0, uxtb
  422d94:	b.eq	422dac <nftw@plt+0x2022c>  // b.none
  422d98:	ldp	x1, x0, [sp, #144]
  422d9c:	orr	x0, x0, x1
  422da0:	cmp	x0, #0x0
  422da4:	cset	w0, ne  // ne = any
  422da8:	str	w0, [sp, #128]
  422dac:	ldp	x24, x21, [sp, #144]
  422db0:	b	422f00 <nftw@plt+0x20380>
  422db4:	mvn	x4, x19
  422db8:	mvn	x2, x21
  422dbc:	stp	x4, x2, [sp, #376]
  422dc0:	add	x22, sp, #0x190
  422dc4:	strb	w23, [sp, #392]
  422dc8:	strb	w1, [sp, #393]
  422dcc:	ldr	x3, [x28, #1208]
  422dd0:	ldp	x0, x1, [x26]
  422dd4:	stp	x0, x1, [sp, #400]
  422dd8:	cmp	x3, #0x40
  422ddc:	ldr	x0, [x26, #16]
  422de0:	str	x0, [sp, #416]
  422de4:	b.hi	422f38 <nftw@plt+0x203b8>  // b.pmore
  422de8:	mov	x0, #0xffffffffffffffff    	// #-1
  422dec:	mov	x19, #0x0                   	// #0
  422df0:	lsl	x0, x0, x3
  422df4:	orr	x0, x0, x21
  422df8:	mvn	x0, x0
  422dfc:	csel	x2, x0, x2, ne  // ne = any
  422e00:	add	x0, sp, #0x260
  422e04:	mov	x21, x2
  422e08:	ldr	x1, [x22, #16]
  422e0c:	stp	x19, x2, [sp, #400]
  422e10:	add	x9, sp, #0x1a8
  422e14:	ldp	x2, x3, [x22]
  422e18:	stp	x2, x3, [x0, #-184]
  422e1c:	mov	w0, #0x0                   	// #0
  422e20:	stp	x2, x3, [x26]
  422e24:	str	x1, [x26, #16]
  422e28:	str	x1, [sp, #440]
  422e2c:	b	421d58 <nftw@plt+0x1f1d8>
  422e30:	stp	x19, x21, [sp, #376]
  422e34:	add	x9, sp, #0x1a8
  422e38:	add	x0, sp, #0xe0
  422e3c:	strb	w23, [sp, #392]
  422e40:	add	x8, sp, #0x100
  422e44:	strb	w1, [sp, #393]
  422e48:	ldr	x1, [x28, #1208]
  422e4c:	ldp	x2, x3, [x26]
  422e50:	stp	x2, x3, [sp, #224]
  422e54:	ldr	x2, [x26, #16]
  422e58:	str	x2, [sp, #240]
  422e5c:	bl	420070 <nftw@plt+0x1d4f0>
  422e60:	ldp	x0, x1, [sp, #256]
  422e64:	stp	x0, x1, [x26]
  422e68:	ldr	x0, [sp, #272]
  422e6c:	ldp	x19, x21, [sp, #376]
  422e70:	str	x0, [x26, #16]
  422e74:	ldrb	w23, [sp, #392]
  422e78:	ldrb	w0, [sp, #393]
  422e7c:	b	421d58 <nftw@plt+0x1f1d8>
  422e80:	ldrb	w0, [x28, #1138]
  422e84:	cbz	w0, 421d54 <nftw@plt+0x1f1d4>
  422e88:	ldr	w0, [x28, #28]
  422e8c:	cbz	w0, 423220 <nftw@plt+0x206a0>
  422e90:	add	x9, sp, #0x1a8
  422e94:	mov	w0, #0x0                   	// #0
  422e98:	b	421d58 <nftw@plt+0x1f1d8>
  422e9c:	ldr	x2, [x27]
  422ea0:	mov	x0, x28
  422ea4:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422ea8:	mov	w3, #0x0                   	// #0
  422eac:	add	x4, x4, #0xcc8
  422eb0:	mov	w1, #0x3                   	// #3
  422eb4:	ldr	w2, [x2]
  422eb8:	str	wzr, [sp, #104]
  422ebc:	bl	41f458 <nftw@plt+0x1c8d8>
  422ec0:	b	42200c <nftw@plt+0x1f48c>
  422ec4:	mov	x3, x0
  422ec8:	add	x0, sp, #0x260
  422ecc:	mov	x2, x14
  422ed0:	str	x1, [sp, #440]
  422ed4:	stp	x4, x5, [x0, #-184]
  422ed8:	b	422390 <nftw@plt+0x1f810>
  422edc:	mov	x0, #0x0                   	// #0
  422ee0:	cbz	w1, 422a5c <nftw@plt+0x1fedc>
  422ee4:	cmp	x3, x13
  422ee8:	ccmp	x4, x9, #0x0, eq  // eq = none
  422eec:	cset	x0, ne  // ne = any
  422ef0:	b	422a5c <nftw@plt+0x1fedc>
  422ef4:	ldp	x24, x21, [sp, #144]
  422ef8:	add	x26, sp, #0x178
  422efc:	str	wzr, [sp, #128]
  422f00:	ldr	x0, [sp, #152]
  422f04:	str	x0, [sp, #376]
  422f08:	ldr	x0, [sp, #144]
  422f0c:	str	x0, [sp, #384]
  422f10:	ldrb	w0, [sp, #128]
  422f14:	add	x2, sp, #0x260
  422f18:	strb	w5, [sp, #392]
  422f1c:	add	x9, sp, #0x1a8
  422f20:	strb	w0, [sp, #393]
  422f24:	ldp	x0, x1, [x26]
  422f28:	stp	x0, x1, [x2, #-184]
  422f2c:	ldr	x0, [x26, #16]
  422f30:	str	x0, [sp, #440]
  422f34:	b	4229b4 <nftw@plt+0x1fe34>
  422f38:	sub	x3, x3, #0x40
  422f3c:	mov	x0, #0xffffffffffffffff    	// #-1
  422f40:	cmp	x3, #0x40
  422f44:	lsl	x3, x0, x3
  422f48:	orr	x19, x3, x19
  422f4c:	csinv	x19, x4, x19, cs  // cs = hs, nlast
  422f50:	b	422e00 <nftw@plt+0x20280>
  422f54:	tbnz	w0, #13, 423240 <nftw@plt+0x206c0>
  422f58:	ldr	x1, [sp, #112]
  422f5c:	add	x19, sp, #0x1a8
  422f60:	mov	w2, w0
  422f64:	mov	x8, x19
  422f68:	mov	x0, x25
  422f6c:	bl	421708 <nftw@plt+0x1eb88>
  422f70:	ldrb	w2, [sp, #440]
  422f74:	ldrb	w0, [sp, #441]
  422f78:	ldp	x3, x1, [sp, #424]
  422f7c:	b	422608 <nftw@plt+0x1fa88>
  422f80:	mov	x0, x25
  422f84:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  422f88:	mov	w1, #0x3                   	// #3
  422f8c:	add	x2, x2, #0x978
  422f90:	bl	41f298 <nftw@plt+0x1c718>
  422f94:	ldr	w0, [sp, #376]
  422f98:	b	422bf8 <nftw@plt+0x20078>
  422f9c:	stp	x10, x24, [sp, #304]
  422fa0:	mov	w11, w13
  422fa4:	add	x0, sp, #0xe0
  422fa8:	strb	wzr, [sp, #320]
  422fac:	add	x8, sp, #0x100
  422fb0:	ldp	x2, x3, [sp, #304]
  422fb4:	stp	x2, x3, [sp, #224]
  422fb8:	mov	x1, x9
  422fbc:	ldr	x2, [sp, #320]
  422fc0:	str	x2, [sp, #240]
  422fc4:	bl	420070 <nftw@plt+0x1d4f0>
  422fc8:	ldp	x22, x0, [sp, #256]
  422fcc:	stp	x22, x0, [sp, #304]
  422fd0:	ldr	x0, [sp, #272]
  422fd4:	str	x0, [sp, #320]
  422fd8:	ldr	x24, [sp, #312]
  422fdc:	mov	x10, x22
  422fe0:	b	422c98 <nftw@plt+0x20118>
  422fe4:	ldrb	w2, [sp, #128]
  422fe8:	add	x0, sp, #0xe0
  422fec:	stp	x21, x24, [sp, #328]
  422ff0:	add	x8, sp, #0x100
  422ff4:	strb	wzr, [sp, #344]
  422ff8:	strb	w2, [sp, #345]
  422ffc:	mov	w2, #0x1                   	// #1
  423000:	str	w2, [sp, #172]
  423004:	ldp	x2, x3, [x23]
  423008:	stp	x2, x3, [sp, #224]
  42300c:	ldr	x2, [x23, #16]
  423010:	str	x2, [sp, #240]
  423014:	ldr	x1, [sp, #136]
  423018:	bl	420070 <nftw@plt+0x1d4f0>
  42301c:	ldp	x0, x1, [sp, #256]
  423020:	stp	x0, x1, [x23]
  423024:	ldr	x0, [sp, #272]
  423028:	ldp	x21, x24, [sp, #328]
  42302c:	str	x0, [x23, #16]
  423030:	ldrb	w0, [sp, #345]
  423034:	ldrb	w5, [sp, #344]
  423038:	str	w0, [sp, #128]
  42303c:	b	422c64 <nftw@plt+0x200e4>
  423040:	ldr	x0, [x25, #1208]
  423044:	orr	x1, x1, #0xffffffff00000000
  423048:	cmp	x0, #0x40
  42304c:	b.ls	42327c <nftw@plt+0x206fc>  // b.plast
  423050:	sub	x0, x0, #0x40
  423054:	cmp	x0, #0x3f
  423058:	b.hi	42332c <nftw@plt+0x207ac>  // b.pmore
  42305c:	mov	x3, #0xffffffffffffffff    	// #-1
  423060:	lsl	x3, x3, x0
  423064:	mvn	x3, x3
  423068:	b	422600 <nftw@plt+0x1fa80>
  42306c:	ldrb	w2, [sp, #128]
  423070:	add	x0, sp, #0xe0
  423074:	stp	x21, x24, [sp, #328]
  423078:	add	x8, sp, #0x100
  42307c:	strb	wzr, [sp, #344]
  423080:	strb	w2, [sp, #345]
  423084:	mov	w2, #0x1                   	// #1
  423088:	str	w2, [sp, #172]
  42308c:	ldp	x2, x3, [x23]
  423090:	stp	x2, x3, [sp, #224]
  423094:	ldr	x2, [x23, #16]
  423098:	str	x2, [sp, #240]
  42309c:	ldr	x1, [sp, #136]
  4230a0:	bl	420070 <nftw@plt+0x1d4f0>
  4230a4:	ldp	x0, x1, [sp, #256]
  4230a8:	stp	x0, x1, [x23]
  4230ac:	ldr	x0, [sp, #272]
  4230b0:	ldp	x21, x24, [sp, #328]
  4230b4:	str	x0, [x23, #16]
  4230b8:	ldrb	w0, [sp, #345]
  4230bc:	ldrb	w5, [sp, #344]
  4230c0:	str	w0, [sp, #128]
  4230c4:	b	4220d4 <nftw@plt+0x1f554>
  4230c8:	stp	x10, x24, [sp, #304]
  4230cc:	mov	w11, w13
  4230d0:	add	x0, sp, #0xe0
  4230d4:	strb	wzr, [sp, #320]
  4230d8:	add	x8, sp, #0x100
  4230dc:	ldp	x2, x3, [sp, #304]
  4230e0:	stp	x2, x3, [sp, #224]
  4230e4:	mov	x1, x9
  4230e8:	ldr	x2, [sp, #320]
  4230ec:	str	x2, [sp, #240]
  4230f0:	bl	420070 <nftw@plt+0x1d4f0>
  4230f4:	ldp	x22, x0, [sp, #256]
  4230f8:	stp	x22, x0, [sp, #304]
  4230fc:	ldr	x0, [sp, #272]
  423100:	str	x0, [sp, #320]
  423104:	ldr	x24, [sp, #312]
  423108:	mov	x10, x22
  42310c:	b	42241c <nftw@plt+0x1f89c>
  423110:	mov	x1, x9
  423114:	mov	x0, x3
  423118:	bl	420348 <nftw@plt+0x1d7c8>
  42311c:	and	w1, w0, #0xff
  423120:	b	4223bc <nftw@plt+0x1f83c>
  423124:	mov	w2, w12
  423128:	mov	x0, x28
  42312c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423130:	mov	w3, #0x0                   	// #0
  423134:	add	x4, x4, #0xcb0
  423138:	mov	w1, #0x3                   	// #3
  42313c:	str	w5, [sp, #136]
  423140:	bl	41f458 <nftw@plt+0x1c8d8>
  423144:	ldr	w5, [sp, #136]
  423148:	b	422bd0 <nftw@plt+0x20050>
  42314c:	mov	x19, #0x0                   	// #0
  423150:	b	421ec4 <nftw@plt+0x1f344>
  423154:	ldr	x1, [sp, #112]
  423158:	mov	x0, x25
  42315c:	bl	428d50 <nftw@plt+0x261d0>
  423160:	mov	x5, x0
  423164:	ldr	w2, [sp, #120]
  423168:	mov	x0, x25
  42316c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423170:	mov	w3, #0x0                   	// #0
  423174:	add	x4, x4, #0x948
  423178:	mov	w1, #0x3                   	// #3
  42317c:	bl	41f458 <nftw@plt+0x1c8d8>
  423180:	b	42200c <nftw@plt+0x1f48c>
  423184:	mov	x1, x0
  423188:	str	w5, [sp, #128]
  42318c:	ldr	x0, [sp, #152]
  423190:	bl	420348 <nftw@plt+0x1d7c8>
  423194:	and	w1, w0, #0xff
  423198:	ldr	w5, [sp, #128]
  42319c:	b	422d84 <nftw@plt+0x20204>
  4231a0:	ldr	x0, [sp, #152]
  4231a4:	add	x2, sp, #0x260
  4231a8:	str	x0, [sp, #376]
  4231ac:	add	x8, sp, #0x100
  4231b0:	ldr	x0, [sp, #144]
  4231b4:	str	x0, [sp, #384]
  4231b8:	strh	wzr, [sp, #392]
  4231bc:	add	x0, sp, #0xe0
  4231c0:	ldr	x1, [sp, #136]
  4231c4:	add	x26, sp, #0x178
  4231c8:	ldp	x2, x3, [x2, #-232]
  4231cc:	stp	x2, x3, [sp, #224]
  4231d0:	ldr	x2, [sp, #392]
  4231d4:	str	x2, [sp, #240]
  4231d8:	bl	420070 <nftw@plt+0x1d4f0>
  4231dc:	add	x2, sp, #0x260
  4231e0:	ldp	x0, x1, [sp, #256]
  4231e4:	stp	x0, x1, [x2, #-232]
  4231e8:	ldr	x0, [sp, #272]
  4231ec:	str	x0, [sp, #392]
  4231f0:	ldr	x0, [sp, #376]
  4231f4:	str	x0, [sp, #152]
  4231f8:	ldr	x0, [sp, #384]
  4231fc:	str	x0, [sp, #144]
  423200:	ldrb	w5, [sp, #392]
  423204:	b	422d60 <nftw@plt+0x201e0>
  423208:	ldp	x1, x0, [x27, #8]
  42320c:	orr	x0, x0, x1
  423210:	cmp	x0, #0x0
  423214:	cset	w0, ne  // ne = any
  423218:	str	w0, [sp, #104]
  42321c:	b	42200c <nftw@plt+0x1f48c>
  423220:	mov	x0, x28
  423224:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423228:	mov	w1, #0x6                   	// #6
  42322c:	add	x2, x2, #0xc80
  423230:	bl	41f308 <nftw@plt+0x1c788>
  423234:	add	x9, sp, #0x1a8
  423238:	mov	w0, #0x0                   	// #0
  42323c:	b	421d58 <nftw@plt+0x1f1d8>
  423240:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423244:	ldr	w2, [sp, #120]
  423248:	add	x4, x4, #0x9d8
  42324c:	mov	w3, #0x0                   	// #0
  423250:	b	422c1c <nftw@plt+0x2009c>
  423254:	str	xzr, [x25, #432]
  423258:	b	422220 <nftw@plt+0x1f6a0>
  42325c:	ldr	w2, [sp, #120]
  423260:	mov	x0, x25
  423264:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423268:	mov	w3, #0x0                   	// #0
  42326c:	add	x4, x4, #0xb00
  423270:	mov	w1, #0x1                   	// #1
  423274:	bl	41f4d0 <nftw@plt+0x1c950>
  423278:	b	422b58 <nftw@plt+0x1ffd8>
  42327c:	b.eq	42335c <nftw@plt+0x207dc>  // b.none
  423280:	mov	x3, #0xffffffffffffffff    	// #-1
  423284:	mov	w2, #0x0                   	// #0
  423288:	lsl	x0, x3, x0
  42328c:	mov	x3, #0x0                   	// #0
  423290:	bic	x1, x1, x0
  423294:	b	422600 <nftw@plt+0x1fa80>
  423298:	ldr	w2, [sp, #120]
  42329c:	mov	x0, x25
  4232a0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4232a4:	mov	w3, #0x0                   	// #0
  4232a8:	add	x4, x4, #0xae0
  4232ac:	mov	w1, #0x2                   	// #2
  4232b0:	bl	41f458 <nftw@plt+0x1c8d8>
  4232b4:	b	422b58 <nftw@plt+0x1ffd8>
  4232b8:	ldr	x1, [sp, #112]
  4232bc:	mov	x0, x25
  4232c0:	bl	428d50 <nftw@plt+0x261d0>
  4232c4:	mov	x5, x0
  4232c8:	ldr	w2, [sp, #120]
  4232cc:	mov	x0, x25
  4232d0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4232d4:	mov	w3, #0x0                   	// #0
  4232d8:	add	x4, x4, #0xb28
  4232dc:	mov	w1, #0x3                   	// #3
  4232e0:	str	wzr, [sp, #104]
  4232e4:	bl	41f458 <nftw@plt+0x1c8d8>
  4232e8:	b	42200c <nftw@plt+0x1f48c>
  4232ec:	mov	x0, x25
  4232f0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4232f4:	mov	w1, #0x3                   	// #3
  4232f8:	add	x2, x2, #0xd38
  4232fc:	str	wzr, [sp, #104]
  423300:	bl	41f298 <nftw@plt+0x1c718>
  423304:	b	42200c <nftw@plt+0x1f48c>
  423308:	ldr	w2, [sp, #120]
  42330c:	mov	x0, x25
  423310:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423314:	mov	w3, #0x0                   	// #0
  423318:	add	x4, x4, #0xd58
  42331c:	mov	w1, #0x3                   	// #3
  423320:	str	wzr, [sp, #104]
  423324:	bl	41f458 <nftw@plt+0x1c8d8>
  423328:	b	42200c <nftw@plt+0x1f48c>
  42332c:	mov	w2, #0x0                   	// #0
  423330:	mov	x3, #0xffffffffffffffff    	// #-1
  423334:	b	422600 <nftw@plt+0x1fa80>
  423338:	ldr	w2, [sp, #120]
  42333c:	mov	x0, x25
  423340:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423344:	mov	w3, #0x0                   	// #0
  423348:	add	x4, x4, #0xb60
  42334c:	mov	w1, #0x3                   	// #3
  423350:	str	wzr, [sp, #104]
  423354:	bl	41f458 <nftw@plt+0x1c8d8>
  423358:	b	42200c <nftw@plt+0x1f48c>
  42335c:	mov	w2, #0x0                   	// #0
  423360:	mov	x3, #0x0                   	// #0
  423364:	b	422600 <nftw@plt+0x1fa80>
  423368:	mov	x3, #0x0                   	// #0
  42336c:	b	422384 <nftw@plt+0x1f804>
  423370:	ldr	w0, [sp, #104]
  423374:	cbz	w0, 42263c <nftw@plt+0x1fabc>
  423378:	ldr	x0, [sp, #112]
  42337c:	str	wzr, [sp, #400]
  423380:	ldr	x1, [x25, #1248]
  423384:	ldr	x0, [x0, #8]
  423388:	cmp	x0, x1
  42338c:	b.eq	4233e8 <nftw@plt+0x20868>  // b.none
  423390:	ldr	x1, [x25, #1288]
  423394:	cmp	x0, x1
  423398:	b.eq	4234a8 <nftw@plt+0x20928>  // b.none
  42339c:	ldr	x1, [x25, #1296]
  4233a0:	cmp	x0, x1
  4233a4:	b.eq	4234cc <nftw@plt+0x2094c>  // b.none
  4233a8:	ldrb	w1, [x25, #1120]
  4233ac:	cbz	w1, 4233c8 <nftw@plt+0x20848>
  4233b0:	ldr	x1, [x25, #1256]
  4233b4:	cmp	x0, x1
  4233b8:	b.eq	423494 <nftw@plt+0x20914>  // b.none
  4233bc:	ldr	x2, [x25, #1264]
  4233c0:	cmp	x0, x2
  4233c4:	b.eq	423494 <nftw@plt+0x20914>  // b.none
  4233c8:	ldrb	w2, [x25, #1149]
  4233cc:	cbz	w2, 4233dc <nftw@plt+0x2085c>
  4233d0:	ldr	w1, [x25, #28]
  4233d4:	mov	w2, #0x0                   	// #0
  4233d8:	cbz	w1, 42350c <nftw@plt+0x2098c>
  4233dc:	mov	x1, #0x0                   	// #0
  4233e0:	mov	x3, #0x0                   	// #0
  4233e4:	b	422600 <nftw@plt+0x1fa80>
  4233e8:	ldrb	w1, [x25, #24]
  4233ec:	mov	x0, x25
  4233f0:	ldr	x20, [x25, #136]
  4233f4:	add	w1, w1, #0x1
  4233f8:	strb	w1, [x25, #24]
  4233fc:	bl	431988 <nftw@plt+0x2ee08>
  423400:	mov	x19, x0
  423404:	ldrb	w0, [x0, #4]
  423408:	cmp	w0, #0x14
  42340c:	b.eq	42353c <nftw@plt+0x209bc>  // b.none
  423410:	cmp	w0, #0x35
  423414:	b.ne	4234d8 <nftw@plt+0x20958>  // b.any
  423418:	ldr	x19, [x19, #8]
  42341c:	cbz	x19, 4234f4 <nftw@plt+0x20974>
  423420:	ldr	x0, [x25, #136]
  423424:	cmp	x20, x0
  423428:	b.eq	4235f0 <nftw@plt+0x20a70>  // b.none
  42342c:	ldrb	w0, [x25, #1150]
  423430:	cbnz	w0, 423600 <nftw@plt+0x20a80>
  423434:	ldrb	w0, [x19, #18]
  423438:	and	w0, w0, #0x3
  42343c:	cmp	w0, #0x2
  423440:	b.ne	423454 <nftw@plt+0x208d4>  // b.any
  423444:	ldr	x1, [x19, #24]
  423448:	ldrb	w0, [x1, #19]
  42344c:	orr	w0, w0, #0x20
  423450:	strb	w0, [x1, #19]
  423454:	ldrh	w0, [x19, #18]
  423458:	tbz	w0, #7, 4235e0 <nftw@plt+0x20a60>
  42345c:	ldrb	w0, [x25, #24]
  423460:	sub	w0, w0, #0x1
  423464:	strb	w0, [x25, #24]
  423468:	ldrb	w0, [x19, #18]
  42346c:	str	x19, [x25, #432]
  423470:	tbz	w0, #1, 423530 <nftw@plt+0x209b0>
  423474:	ldrh	w1, [x19, #18]
  423478:	add	x19, sp, #0x1a8
  42347c:	eor	x1, x1, #0x100
  423480:	ubfx	x1, x1, #8, #1
  423484:	mov	w0, #0x0                   	// #0
  423488:	mov	w2, #0x0                   	// #0
  42348c:	mov	x3, #0x0                   	// #0
  423490:	b	422608 <nftw@plt+0x1fa88>
  423494:	cmp	x0, x1
  423498:	mov	w2, #0x0                   	// #0
  42349c:	cset	x1, eq  // eq = none
  4234a0:	mov	x3, #0x0                   	// #0
  4234a4:	b	422600 <nftw@plt+0x1fa80>
  4234a8:	add	x19, sp, #0x1a8
  4234ac:	mov	w1, #0x0                   	// #0
  4234b0:	mov	x0, x25
  4234b4:	mov	x8, x19
  4234b8:	bl	420180 <nftw@plt+0x1d600>
  4234bc:	ldrb	w2, [sp, #440]
  4234c0:	ldrb	w0, [sp, #441]
  4234c4:	ldp	x3, x1, [sp, #424]
  4234c8:	b	422608 <nftw@plt+0x1fa88>
  4234cc:	add	x19, sp, #0x1a8
  4234d0:	mov	w1, #0x1                   	// #1
  4234d4:	b	4234b0 <nftw@plt+0x20930>
  4234d8:	mov	x0, x25
  4234dc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4234e0:	mov	w1, #0x3                   	// #3
  4234e4:	add	x2, x2, #0xa28
  4234e8:	bl	41f298 <nftw@plt+0x1c718>
  4234ec:	ldrh	w0, [x19, #6]
  4234f0:	tbnz	w0, #4, 423584 <nftw@plt+0x20a04>
  4234f4:	ldrb	w0, [x25, #24]
  4234f8:	add	x19, sp, #0x1a8
  4234fc:	mov	x1, #0x0                   	// #0
  423500:	sub	w0, w0, #0x1
  423504:	strb	w0, [x25, #24]
  423508:	b	423484 <nftw@plt+0x20904>
  42350c:	ldr	w2, [sp, #120]
  423510:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423514:	ldr	x5, [x0]
  423518:	add	x4, x4, #0xab8
  42351c:	mov	x0, x25
  423520:	mov	w3, #0x0                   	// #0
  423524:	mov	w1, #0xd                   	// #13
  423528:	bl	41f4d0 <nftw@plt+0x1c950>
  42352c:	b	422c28 <nftw@plt+0x200a8>
  423530:	add	x19, sp, #0x1a8
  423534:	mov	x1, #0x0                   	// #0
  423538:	b	423484 <nftw@plt+0x20904>
  42353c:	mov	x0, x25
  423540:	bl	431988 <nftw@plt+0x2ee08>
  423544:	mov	x19, x0
  423548:	ldrb	w0, [x0, #4]
  42354c:	cmp	w0, #0x35
  423550:	b.ne	4234d8 <nftw@plt+0x20958>  // b.any
  423554:	mov	x0, x25
  423558:	ldr	x19, [x19, #8]
  42355c:	bl	431988 <nftw@plt+0x2ee08>
  423560:	ldrb	w0, [x0, #4]
  423564:	cmp	w0, #0x15
  423568:	b.eq	42341c <nftw@plt+0x2089c>  // b.none
  42356c:	mov	x0, x25
  423570:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423574:	mov	w1, #0x3                   	// #3
  423578:	add	x2, x2, #0xa08
  42357c:	bl	41f298 <nftw@plt+0x1c718>
  423580:	b	4234f4 <nftw@plt+0x20974>
  423584:	ldrb	w2, [x19, #4]
  423588:	mov	x1, x19
  42358c:	mov	x0, x25
  423590:	add	x19, sp, #0x1a8
  423594:	strb	w2, [sp, #428]
  423598:	strh	wzr, [sp, #430]
  42359c:	bl	428d50 <nftw@plt+0x261d0>
  4235a0:	mov	x20, x0
  4235a4:	mov	x1, x19
  4235a8:	mov	x0, x25
  4235ac:	bl	428d50 <nftw@plt+0x261d0>
  4235b0:	mov	x4, x0
  4235b4:	mov	w1, #0x3                   	// #3
  4235b8:	mov	x3, x20
  4235bc:	mov	x0, x25
  4235c0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4235c4:	add	x2, x2, #0xa58
  4235c8:	bl	41f298 <nftw@plt+0x1c718>
  4235cc:	ldrb	w0, [x25, #24]
  4235d0:	mov	x1, #0x0                   	// #0
  4235d4:	sub	w0, w0, #0x1
  4235d8:	strb	w0, [x25, #24]
  4235dc:	b	423484 <nftw@plt+0x20904>
  4235e0:	mov	x1, x19
  4235e4:	mov	x0, x25
  4235e8:	bl	42fa20 <nftw@plt+0x2cea0>
  4235ec:	b	42345c <nftw@plt+0x208dc>
  4235f0:	add	x0, x25, #0x50
  4235f4:	cmp	x20, x0
  4235f8:	b.ne	42342c <nftw@plt+0x208ac>  // b.any
  4235fc:	b	423434 <nftw@plt+0x208b4>
  423600:	mov	x0, x25
  423604:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423608:	mov	w1, #0x18                  	// #24
  42360c:	add	x2, x2, #0xa88
  423610:	bl	41f378 <nftw@plt+0x1c7f8>
  423614:	b	423434 <nftw@plt+0x208b4>
  423618:	ldrb	w4, [x0, #16]
  42361c:	ldp	x3, x2, [x0]
  423620:	cbnz	w4, 423654 <nftw@plt+0x20ad4>
  423624:	cmp	x1, #0x40
  423628:	b.ls	42366c <nftw@plt+0x20aec>  // b.plast
  42362c:	sub	x1, x1, #0x40
  423630:	cmp	x1, #0x3f
  423634:	b.hi	423654 <nftw@plt+0x20ad4>  // b.pmore
  423638:	sub	w4, w1, #0x1
  42363c:	lsr	x4, x3, x4
  423640:	tbz	w4, #0, 423654 <nftw@plt+0x20ad4>
  423644:	neg	w1, w1
  423648:	mov	x4, #0xffffffffffffffff    	// #-1
  42364c:	lsr	x1, x4, x1
  423650:	orn	x3, x3, x1
  423654:	stp	x3, x2, [x0]
  423658:	ldr	x1, [x0, #16]
  42365c:	str	x1, [x8, #16]
  423660:	ldp	x0, x1, [x0]
  423664:	stp	x0, x1, [x8]
  423668:	ret
  42366c:	sub	w4, w1, #0x1
  423670:	lsr	x4, x2, x4
  423674:	tbz	w4, #0, 423654 <nftw@plt+0x20ad4>
  423678:	neg	w4, w1
  42367c:	mov	x3, #0xffffffffffffffff    	// #-1
  423680:	cmp	x1, #0x40
  423684:	lsr	x1, x3, x4
  423688:	orn	x1, x2, x1
  42368c:	csel	x2, x1, x2, ne  // ne = any
  423690:	stp	x3, x2, [x0]
  423694:	ldr	x1, [x0, #16]
  423698:	str	x1, [x8, #16]
  42369c:	ldp	x0, x1, [x0]
  4236a0:	stp	x0, x1, [x8]
  4236a4:	ret
  4236a8:	ldr	x1, [x0, #8]
  4236ac:	ldr	x0, [x0, #24]
  4236b0:	cmp	x1, #0x0
  4236b4:	add	x1, x0, #0x8
  4236b8:	csel	x0, x1, x0, eq  // eq = none
  4236bc:	ldr	x0, [x0]
  4236c0:	b	449330 <nftw@plt+0x467b0>
  4236c4:	nop
  4236c8:	stp	x29, x30, [sp, #-32]!
  4236cc:	mov	x29, sp
  4236d0:	str	x19, [sp, #16]
  4236d4:	mov	x19, x0
  4236d8:	ldr	x0, [x0, #48]
  4236dc:	bl	402910 <free@plt>
  4236e0:	ldr	x0, [x19]
  4236e4:	bl	402910 <free@plt>
  4236e8:	ldr	x0, [x19, #8]
  4236ec:	bl	402910 <free@plt>
  4236f0:	mov	x0, x19
  4236f4:	ldr	x19, [sp, #16]
  4236f8:	ldp	x29, x30, [sp], #32
  4236fc:	b	402910 <free@plt>
  423700:	stp	x29, x30, [sp, #-32]!
  423704:	mov	x29, sp
  423708:	ldr	x0, [x0]
  42370c:	stp	x19, x20, [sp, #16]
  423710:	mov	x19, x1
  423714:	ldr	x1, [x0, #8]
  423718:	cbz	x1, 423730 <nftw@plt+0x20bb0>
  42371c:	ldr	x20, [x0, #24]
  423720:	ldrb	w0, [x20, #210]
  423724:	cbnz	w0, 423730 <nftw@plt+0x20bb0>
  423728:	ldr	x0, [x20, #56]
  42372c:	cbz	x0, 423740 <nftw@plt+0x20bc0>
  423730:	mov	w0, #0x1                   	// #1
  423734:	ldp	x19, x20, [sp, #16]
  423738:	ldp	x29, x30, [sp], #32
  42373c:	ret
  423740:	ldrh	w0, [x20, #208]
  423744:	cmp	w0, #0x1
  423748:	b.ne	423730 <nftw@plt+0x20bb0>  // b.any
  42374c:	ldrb	w0, [x20, #212]
  423750:	cbnz	w0, 423730 <nftw@plt+0x20bb0>
  423754:	ldp	x1, x0, [x19]
  423758:	cbz	x1, 423774 <nftw@plt+0x20bf4>
  42375c:	add	x1, x1, x0, lsl #3
  423760:	add	x0, x0, #0x1
  423764:	str	x0, [x19, #8]
  423768:	ldr	x0, [x20, #8]
  42376c:	str	x0, [x1]
  423770:	b	423730 <nftw@plt+0x20bb0>
  423774:	mov	x1, #0x8                   	// #8
  423778:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  42377c:	mov	x1, x0
  423780:	mov	x0, #0x1                   	// #1
  423784:	str	x1, [x19]
  423788:	b	423764 <nftw@plt+0x20be4>
  42378c:	nop
  423790:	stp	x29, x30, [sp, #-16]!
  423794:	mov	x29, sp
  423798:	bl	448380 <nftw@plt+0x45800>
  42379c:	cmp	w0, #0x0
  4237a0:	cset	w0, eq  // eq = none
  4237a4:	ldp	x29, x30, [sp], #16
  4237a8:	ret
  4237ac:	nop
  4237b0:	stp	x29, x30, [sp, #-16]!
  4237b4:	mov	x29, sp
  4237b8:	ldr	x2, [x0, #8]
  4237bc:	ldr	x0, [x0, #24]
  4237c0:	cmp	x2, #0x0
  4237c4:	add	x2, x0, #0x8
  4237c8:	csel	x0, x2, x0, eq  // eq = none
  4237cc:	ldr	x0, [x0]
  4237d0:	bl	448380 <nftw@plt+0x45800>
  4237d4:	cmp	w0, #0x0
  4237d8:	cset	w0, eq  // eq = none
  4237dc:	ldp	x29, x30, [sp], #16
  4237e0:	ret
  4237e4:	nop
  4237e8:	ldr	x2, [x0, #312]
  4237ec:	ldr	w1, [x2]
  4237f0:	cmp	w1, #0x7f
  4237f4:	b.eq	423810 <nftw@plt+0x20c90>  // b.none
  4237f8:	ubfiz	x0, x1, #5, #32
  4237fc:	add	w1, w1, #0x1
  423800:	add	x0, x0, #0x10
  423804:	str	w1, [x2]
  423808:	add	x0, x2, x0
  42380c:	ret
  423810:	stp	x29, x30, [sp, #-32]!
  423814:	mov	x29, sp
  423818:	str	x19, [sp, #16]
  42381c:	mov	x19, x0
  423820:	mov	x0, #0xff0                 	// #4080
  423824:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  423828:	mov	x2, x0
  42382c:	mov	w1, #0x1                   	// #1
  423830:	ldr	x3, [x19, #312]
  423834:	str	x2, [x19, #312]
  423838:	str	x3, [x2, #8]
  42383c:	mov	x0, #0x10                  	// #16
  423840:	ldr	x19, [sp, #16]
  423844:	str	w1, [x2]
  423848:	add	x0, x2, x0
  42384c:	ldp	x29, x30, [sp], #32
  423850:	ret
  423854:	nop
  423858:	stp	x29, x30, [sp, #-64]!
  42385c:	mov	x29, sp
  423860:	stp	x21, x22, [sp, #32]
  423864:	mov	x21, x0
  423868:	mov	x0, x1
  42386c:	stp	x19, x20, [sp, #16]
  423870:	mov	x20, x1
  423874:	ldr	x19, [x21, #304]
  423878:	str	x23, [sp, #48]
  42387c:	mov	w23, w2
  423880:	bl	449330 <nftw@plt+0x467b0>
  423884:	mov	w3, #0x1                   	// #1
  423888:	mov	w2, w0
  42388c:	mov	x1, x20
  423890:	mov	x0, x19
  423894:	bl	448e60 <nftw@plt+0x462e0>
  423898:	mov	x22, x0
  42389c:	ldr	x3, [x0]
  4238a0:	cbnz	x3, 4238b0 <nftw@plt+0x20d30>
  4238a4:	b	4238d4 <nftw@plt+0x20d54>
  4238a8:	ldr	x3, [x3]
  4238ac:	cbz	x3, 4238d4 <nftw@plt+0x20d54>
  4238b0:	ldr	x4, [x3, #8]
  4238b4:	cbnz	x4, 4238a8 <nftw@plt+0x20d28>
  4238b8:	ldr	x19, [x3, #24]
  4238bc:	ldp	x21, x22, [sp, #32]
  4238c0:	mov	x0, x19
  4238c4:	ldp	x19, x20, [sp, #16]
  4238c8:	ldr	x23, [sp, #48]
  4238cc:	ldp	x29, x30, [sp], #64
  4238d0:	ret
  4238d4:	mov	x1, #0x40                  	// #64
  4238d8:	mov	x0, #0x1                   	// #1
  4238dc:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  4238e0:	mov	x19, x0
  4238e4:	ldr	x1, [x21, #200]
  4238e8:	mov	x0, x20
  4238ec:	stp	x1, x20, [x19]
  4238f0:	bl	4024f0 <strlen@plt>
  4238f4:	str	w0, [x19, #16]
  4238f8:	strb	w23, [x19, #20]
  4238fc:	mov	x0, x21
  423900:	str	xzr, [x19, #40]
  423904:	bl	4237e8 <nftw@plt+0x20c68>
  423908:	ldr	x1, [x21, #40]
  42390c:	ldr	x2, [x22]
  423910:	ldr	w1, [x1, #56]
  423914:	stp	x2, xzr, [x0]
  423918:	str	w1, [x0, #16]
  42391c:	str	x19, [x0, #24]
  423920:	str	x0, [x22]
  423924:	mov	x0, x19
  423928:	ldp	x19, x20, [sp, #16]
  42392c:	ldp	x21, x22, [sp, #32]
  423930:	ldr	x23, [sp, #48]
  423934:	ldp	x29, x30, [sp], #64
  423938:	ret
  42393c:	nop
  423940:	stp	x29, x30, [sp, #-80]!
  423944:	mov	x29, sp
  423948:	stp	x19, x20, [sp, #16]
  42394c:	mov	w20, w0
  423950:	mov	x0, #0x15                  	// #21
  423954:	stp	x21, x22, [sp, #32]
  423958:	mov	x21, x1
  42395c:	str	x25, [sp, #64]
  423960:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  423964:	and	x1, x20, #0xff
  423968:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x205a0>
  42396c:	add	x25, x25, #0x248
  423970:	mov	x22, x0
  423974:	mov	x19, x0
  423978:	ldrh	w0, [x25, x1, lsl #1]
  42397c:	tst	w0, #0xc00
  423980:	b.ne	423a24 <nftw@plt+0x20ea4>  // b.any
  423984:	stp	x23, x24, [sp, #48]
  423988:	mov	w24, #0x14                  	// #20
  42398c:	nop
  423990:	strb	w20, [x19], #1
  423994:	ldp	x2, x0, [x21, #8]
  423998:	add	x1, x2, #0x1
  42399c:	cmp	x2, x0
  4239a0:	b.cs	4239f8 <nftw@plt+0x20e78>  // b.hs, b.nlast
  4239a4:	str	x1, [x21, #8]
  4239a8:	sub	x23, x19, x22
  4239ac:	ldrb	w20, [x2]
  4239b0:	mov	w0, w20
  4239b4:	ldrh	w0, [x25, w0, sxtw #1]
  4239b8:	tst	w0, #0xc00
  4239bc:	b.ne	423a20 <nftw@plt+0x20ea0>  // b.any
  4239c0:	cmp	x23, w24, sxtw
  4239c4:	b.ne	423990 <nftw@plt+0x20e10>  // b.any
  4239c8:	lsl	w24, w24, #1
  4239cc:	mov	x0, x22
  4239d0:	add	w1, w24, #0x1
  4239d4:	sxtw	x1, w1
  4239d8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4239dc:	add	x19, x0, x23
  4239e0:	mov	x22, x0
  4239e4:	strb	w20, [x19], #1
  4239e8:	ldp	x2, x0, [x21, #8]
  4239ec:	add	x1, x2, #0x1
  4239f0:	cmp	x2, x0
  4239f4:	b.cc	4239a4 <nftw@plt+0x20e24>  // b.lo, b.ul, b.last
  4239f8:	mov	x0, x21
  4239fc:	bl	402b40 <__uflow@plt>
  423a00:	mov	w20, w0
  423a04:	cmn	w0, #0x1
  423a08:	b.eq	423a20 <nftw@plt+0x20ea0>  // b.none
  423a0c:	and	w0, w0, #0xff
  423a10:	sub	x23, x19, x22
  423a14:	ldrh	w0, [x25, w0, sxtw #1]
  423a18:	tst	w0, #0xc00
  423a1c:	b.eq	4239c0 <nftw@plt+0x20e40>  // b.none
  423a20:	ldp	x23, x24, [sp, #48]
  423a24:	strb	wzr, [x19]
  423a28:	mov	x1, x21
  423a2c:	mov	w0, w20
  423a30:	bl	402920 <ungetc@plt>
  423a34:	mov	x0, x22
  423a38:	ldp	x19, x20, [sp, #16]
  423a3c:	ldp	x21, x22, [sp, #32]
  423a40:	ldr	x25, [sp, #64]
  423a44:	ldp	x29, x30, [sp], #80
  423a48:	ret
  423a4c:	nop
  423a50:	ldr	x0, [x0]
  423a54:	ldr	x1, [x1]
  423a58:	b	402890 <strcmp@plt>
  423a5c:	nop
  423a60:	stp	x29, x30, [sp, #-32]!
  423a64:	mov	x29, sp
  423a68:	stp	x19, x20, [sp, #16]
  423a6c:	mov	x19, x0
  423a70:	ldr	x0, [x0, #8]
  423a74:	ldrb	w1, [x0]
  423a78:	cbnz	w1, 423ad8 <nftw@plt+0x20f58>
  423a7c:	str	wzr, [x19, #200]
  423a80:	add	x2, x19, #0x48
  423a84:	mov	w0, #0x0                   	// #0
  423a88:	bl	402a10 <__fxstat@plt>
  423a8c:	cbnz	w0, 423b28 <nftw@plt+0x20fa8>
  423a90:	ldr	w0, [x19, #88]
  423a94:	and	w0, w0, #0xf000
  423a98:	cmp	w0, #0x4, lsl #12
  423a9c:	b.ne	423b14 <nftw@plt+0x20f94>  // b.any
  423aa0:	bl	402aa0 <__errno_location@plt>
  423aa4:	mov	x20, x0
  423aa8:	mov	w0, #0x2                   	// #2
  423aac:	str	w0, [x20]
  423ab0:	ldr	w0, [x19, #200]
  423ab4:	bl	4027a0 <close@plt>
  423ab8:	mov	w0, #0xffffffff            	// #-1
  423abc:	str	w0, [x19, #200]
  423ac0:	ldr	w1, [x20]
  423ac4:	str	w1, [x19, #204]
  423ac8:	mov	w0, #0x0                   	// #0
  423acc:	ldp	x19, x20, [sp, #16]
  423ad0:	ldp	x29, x30, [sp], #32
  423ad4:	ret
  423ad8:	mov	w1, #0x100                 	// #256
  423adc:	mov	w2, #0x1b6                 	// #438
  423ae0:	bl	402680 <open@plt>
  423ae4:	str	w0, [x19, #200]
  423ae8:	mov	w1, w0
  423aec:	cmn	w0, #0x1
  423af0:	b.ne	423a80 <nftw@plt+0x20f00>  // b.any
  423af4:	bl	402aa0 <__errno_location@plt>
  423af8:	ldr	w1, [x0]
  423afc:	cmp	w1, #0x14
  423b00:	b.ne	423ac4 <nftw@plt+0x20f44>  // b.any
  423b04:	mov	w2, #0x2                   	// #2
  423b08:	mov	w1, w2
  423b0c:	str	w2, [x0]
  423b10:	b	423ac4 <nftw@plt+0x20f44>
  423b14:	str	wzr, [x19, #204]
  423b18:	mov	w0, #0x1                   	// #1
  423b1c:	ldp	x19, x20, [sp, #16]
  423b20:	ldp	x29, x30, [sp], #32
  423b24:	ret
  423b28:	bl	402aa0 <__errno_location@plt>
  423b2c:	mov	x20, x0
  423b30:	b	423ab0 <nftw@plt+0x20f30>
  423b34:	nop
  423b38:	stp	x29, x30, [sp, #-96]!
  423b3c:	mov	x29, sp
  423b40:	stp	x19, x20, [sp, #16]
  423b44:	mov	x19, x1
  423b48:	mov	x20, x0
  423b4c:	stp	x21, x22, [sp, #32]
  423b50:	mov	x0, x1
  423b54:	mov	x22, x2
  423b58:	stp	x23, x24, [sp, #48]
  423b5c:	ldr	x23, [x1, #8]
  423b60:	str	x2, [x1, #8]
  423b64:	bl	423a60 <nftw@plt+0x20ee0>
  423b68:	ands	w24, w0, #0xff
  423b6c:	b.eq	423c24 <nftw@plt+0x210a4>  // b.none
  423b70:	ldr	w2, [x19, #200]
  423b74:	mov	x1, x22
  423b78:	ldr	x3, [x20, #968]
  423b7c:	stp	x27, x28, [sp, #80]
  423b80:	mov	x0, x20
  423b84:	blr	x3
  423b88:	and	w24, w0, #0x1
  423b8c:	mov	w27, w24
  423b90:	tbz	w0, #0, 423c6c <nftw@plt+0x210ec>
  423b94:	ldrb	w0, [x20, #1131]
  423b98:	cbz	w0, 423c40 <nftw@plt+0x210c0>
  423b9c:	ldr	x0, [x20, #40]
  423ba0:	adrp	x28, 48c000 <_obstack_memory_used@@Base+0x425a0>
  423ba4:	ldr	w0, [x0, #48]
  423ba8:	cmp	w0, #0x1
  423bac:	b.ls	423bfc <nftw@plt+0x2107c>  // b.plast
  423bb0:	adrp	x28, 48c000 <_obstack_memory_used@@Base+0x425a0>
  423bb4:	stp	x25, x26, [sp, #64]
  423bb8:	add	x25, x28, #0x570
  423bbc:	mov	w21, #0x1                   	// #1
  423bc0:	mov	w26, #0x2e                  	// #46
  423bc4:	nop
  423bc8:	ldr	x0, [x25]
  423bcc:	ldp	x3, x1, [x0, #40]
  423bd0:	add	x2, x3, #0x1
  423bd4:	cmp	x3, x1
  423bd8:	b.cs	423c60 <nftw@plt+0x210e0>  // b.hs, b.nlast
  423bdc:	str	x2, [x0, #40]
  423be0:	strb	w26, [x3]
  423be4:	ldr	x1, [x20, #40]
  423be8:	add	w21, w21, #0x1
  423bec:	ldr	w1, [x1, #48]
  423bf0:	cmp	w1, w21
  423bf4:	b.hi	423bc8 <nftw@plt+0x21048>  // b.pmore
  423bf8:	ldp	x25, x26, [sp, #64]
  423bfc:	cmp	w27, #0x0
  423c00:	ldr	x0, [x28, #1392]
  423c04:	mov	w4, #0x21                  	// #33
  423c08:	mov	x3, x22
  423c0c:	mov	w2, #0x78                  	// #120
  423c10:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423c14:	csel	w2, w4, w2, ne  // ne = any
  423c18:	add	x1, x1, #0xe08
  423c1c:	bl	402b30 <fprintf@plt>
  423c20:	ldp	x27, x28, [sp, #80]
  423c24:	mov	w0, w24
  423c28:	ldp	x21, x22, [sp, #32]
  423c2c:	str	x23, [x19, #8]
  423c30:	ldp	x19, x20, [sp, #16]
  423c34:	ldp	x23, x24, [sp, #48]
  423c38:	ldp	x29, x30, [sp], #96
  423c3c:	ret
  423c40:	ldp	x21, x22, [sp, #32]
  423c44:	mov	w0, w24
  423c48:	ldp	x27, x28, [sp, #80]
  423c4c:	str	x23, [x19, #8]
  423c50:	ldp	x19, x20, [sp, #16]
  423c54:	ldp	x23, x24, [sp, #48]
  423c58:	ldp	x29, x30, [sp], #96
  423c5c:	ret
  423c60:	mov	w1, #0x2e                  	// #46
  423c64:	bl	402800 <__overflow@plt>
  423c68:	b	423be4 <nftw@plt+0x21064>
  423c6c:	ldr	w0, [x19, #200]
  423c70:	bl	4027a0 <close@plt>
  423c74:	mov	w0, #0xffffffff            	// #-1
  423c78:	str	w0, [x19, #200]
  423c7c:	ldrb	w0, [x20, #1131]
  423c80:	cbz	w0, 423c40 <nftw@plt+0x210c0>
  423c84:	b	423b9c <nftw@plt+0x2101c>
  423c88:	stp	x29, x30, [sp, #-48]!
  423c8c:	mov	x29, sp
  423c90:	stp	x19, x20, [sp, #16]
  423c94:	mov	x19, x0
  423c98:	mov	x20, x1
  423c9c:	ldr	x0, [x0, #40]
  423ca0:	stp	x21, x22, [sp, #32]
  423ca4:	mov	w21, w2
  423ca8:	mov	w22, w3
  423cac:	ldr	w0, [x0, #60]
  423cb0:	cmp	w0, #0x1
  423cb4:	b.ls	423cc8 <nftw@plt+0x21148>  // b.plast
  423cb8:	ldr	x0, [x19]
  423cbc:	cbz	x0, 423cc8 <nftw@plt+0x21148>
  423cc0:	ldrb	w0, [x0, #106]
  423cc4:	orr	w21, w2, w0
  423cc8:	ldrb	w0, [x19, #26]
  423ccc:	cbnz	w0, 423d58 <nftw@plt+0x211d8>
  423cd0:	bl	402aa0 <__errno_location@plt>
  423cd4:	ldr	w2, [x20, #204]
  423cd8:	cmp	w21, #0x0
  423cdc:	ldr	w1, [x19, #1200]
  423ce0:	cset	w3, ne  // ne = any
  423ce4:	str	w2, [x0]
  423ce8:	cmp	w1, w3
  423cec:	b.le	423d28 <nftw@plt+0x211a8>
  423cf0:	cmp	w2, #0x2
  423cf4:	ldrb	w0, [x19, #1204]
  423cf8:	cset	w1, eq  // eq = none
  423cfc:	tst	w1, w0
  423d00:	b.ne	423d68 <nftw@plt+0x211e8>  // b.any
  423d04:	ldr	x2, [x20, #8]
  423d08:	cbz	x2, 423d84 <nftw@plt+0x21204>
  423d0c:	mov	w3, w22
  423d10:	mov	x0, x19
  423d14:	ldp	x19, x20, [sp, #16]
  423d18:	mov	w1, #0x6                   	// #6
  423d1c:	ldp	x21, x22, [sp, #32]
  423d20:	ldp	x29, x30, [sp], #48
  423d24:	b	41f7d0 <nftw@plt+0x1cc50>
  423d28:	ldr	x2, [x20, #8]
  423d2c:	cbz	w1, 423d08 <nftw@plt+0x21188>
  423d30:	ldrb	w0, [x19, #1207]
  423d34:	cbnz	w0, 423d08 <nftw@plt+0x21188>
  423d38:	cbz	x2, 423da4 <nftw@plt+0x21224>
  423d3c:	mov	w3, w22
  423d40:	mov	x0, x19
  423d44:	ldp	x19, x20, [sp, #16]
  423d48:	mov	w1, #0x0                   	// #0
  423d4c:	ldp	x21, x22, [sp, #32]
  423d50:	ldp	x29, x30, [sp], #48
  423d54:	b	41f7d0 <nftw@plt+0x1cc50>
  423d58:	ldp	x19, x20, [sp, #16]
  423d5c:	ldp	x21, x22, [sp, #32]
  423d60:	ldp	x29, x30, [sp], #48
  423d64:	ret
  423d68:	ldr	x1, [x20]
  423d6c:	ldr	x0, [x19, #712]
  423d70:	bl	4322b0 <nftw@plt+0x2f730>
  423d74:	ldrb	w0, [x19, #1207]
  423d78:	cbz	w0, 423d58 <nftw@plt+0x211d8>
  423d7c:	ldr	x2, [x20, #8]
  423d80:	cbnz	x2, 423d0c <nftw@plt+0x2118c>
  423d84:	mov	w3, w22
  423d88:	mov	x0, x19
  423d8c:	ldr	x2, [x20]
  423d90:	mov	w1, #0x6                   	// #6
  423d94:	ldp	x19, x20, [sp, #16]
  423d98:	ldp	x21, x22, [sp, #32]
  423d9c:	ldp	x29, x30, [sp], #48
  423da0:	b	41f7d0 <nftw@plt+0x1cc50>
  423da4:	ldr	x2, [x20]
  423da8:	b	423d3c <nftw@plt+0x211bc>
  423dac:	nop
  423db0:	mov	x2, #0x20                  	// #32
  423db4:	b	402850 <memcmp@plt>
  423db8:	stp	x29, x30, [sp, #-64]!
  423dbc:	mov	x29, sp
  423dc0:	stp	x19, x20, [sp, #16]
  423dc4:	mov	w20, w2
  423dc8:	stp	x21, x22, [sp, #32]
  423dcc:	stp	x23, x24, [sp, #48]
  423dd0:	mov	x24, x1
  423dd4:	mov	x23, x0
  423dd8:	bl	4024f0 <strlen@plt>
  423ddc:	mov	x21, x0
  423de0:	add	x1, x20, #0x2
  423de4:	add	x0, x1, x0
  423de8:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  423dec:	mov	x19, x0
  423df0:	ldr	x1, [x24]
  423df4:	mov	x2, x20
  423df8:	bl	402490 <memcpy@plt>
  423dfc:	mov	x0, x19
  423e00:	cbz	x20, 423e28 <nftw@plt+0x212a8>
  423e04:	add	x0, x19, x20
  423e08:	ldurb	w1, [x0, #-1]
  423e0c:	cmp	w1, #0x2f
  423e10:	b.eq	423e28 <nftw@plt+0x212a8>  // b.none
  423e14:	mov	x22, x20
  423e18:	add	x20, x20, #0x1
  423e1c:	add	x0, x19, x20
  423e20:	mov	w1, #0x2f                  	// #47
  423e24:	strb	w1, [x19, w22, uxtw]
  423e28:	add	x2, x21, #0x1
  423e2c:	mov	x1, x23
  423e30:	bl	402490 <memcpy@plt>
  423e34:	mov	x0, x19
  423e38:	ldp	x19, x20, [sp, #16]
  423e3c:	ldp	x21, x22, [sp, #32]
  423e40:	ldp	x23, x24, [sp, #48]
  423e44:	ldp	x29, x30, [sp], #64
  423e48:	ret
  423e4c:	nop
  423e50:	stp	x29, x30, [sp, #-96]!
  423e54:	mov	x29, sp
  423e58:	stp	x19, x20, [sp, #16]
  423e5c:	ldr	w19, [x0, #16]
  423e60:	stp	x21, x22, [sp, #32]
  423e64:	mov	x21, x0
  423e68:	mov	x2, x19
  423e6c:	ldr	x1, [x0, #8]
  423e70:	add	x0, x19, #0x1b
  423e74:	and	x0, x0, #0x1fffffff0
  423e78:	stp	x23, x24, [sp, #48]
  423e7c:	stp	x25, x26, [sp, #64]
  423e80:	stp	x27, x28, [sp, #80]
  423e84:	sub	sp, sp, x0
  423e88:	mov	x3, sp
  423e8c:	mov	x0, x3
  423e90:	bl	402490 <memcpy@plt>
  423e94:	mov	x3, x0
  423e98:	mov	x4, x0
  423e9c:	cbz	x19, 423ec0 <nftw@plt+0x21340>
  423ea0:	add	x4, x0, x19
  423ea4:	ldurb	w0, [x4, #-1]
  423ea8:	cmp	w0, #0x2f
  423eac:	b.eq	423ec0 <nftw@plt+0x21340>  // b.none
  423eb0:	add	x4, x19, #0x1
  423eb4:	mov	w0, #0x2f                  	// #47
  423eb8:	add	x4, x3, x4
  423ebc:	strb	w0, [x3, x19]
  423ec0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423ec4:	add	x2, x2, #0xe10
  423ec8:	mov	x0, x3
  423ecc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  423ed0:	add	x1, x1, #0x598
  423ed4:	ldr	x3, [x2]
  423ed8:	str	x3, [x4]
  423edc:	ldur	w2, [x2, #7]
  423ee0:	stur	w2, [x4, #7]
  423ee4:	bl	4484c0 <nftw@plt+0x45940>
  423ee8:	mov	x19, x0
  423eec:	mov	x0, #0x48                  	// #72
  423ef0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  423ef4:	str	x0, [x21, #32]
  423ef8:	cbz	x19, 423f74 <nftw@plt+0x213f4>
  423efc:	ldr	x3, [x19, #16]
  423f00:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x205a0>
  423f04:	add	x24, x21, #0x8
  423f08:	add	x25, x25, #0x248
  423f0c:	mov	x22, #0x8                   	// #8
  423f10:	mov	x23, #0x9                   	// #9
  423f14:	mov	x20, #0x0                   	// #0
  423f18:	ldr	x0, [x19, #8]
  423f1c:	cmp	x0, x3
  423f20:	b.cs	423f50 <nftw@plt+0x213d0>  // b.hs, b.nlast
  423f24:	add	x1, x0, #0x1
  423f28:	str	x1, [x19, #8]
  423f2c:	ldrb	w26, [x0]
  423f30:	mov	w0, w26
  423f34:	ldrh	w0, [x25, w0, sxtw #1]
  423f38:	tst	w0, #0xc00
  423f3c:	b.eq	423f98 <nftw@plt+0x21418>  // b.none
  423f40:	ldr	x0, [x19, #8]
  423f44:	ldr	x3, [x19, #16]
  423f48:	cmp	x0, x3
  423f4c:	b.cc	423f24 <nftw@plt+0x213a4>  // b.lo, b.ul, b.last
  423f50:	mov	x0, x19
  423f54:	bl	402b40 <__uflow@plt>
  423f58:	mov	w26, w0
  423f5c:	cmn	w0, #0x1
  423f60:	b.ne	4240b8 <nftw@plt+0x21538>  // b.any
  423f64:	mov	x0, x19
  423f68:	bl	402620 <fclose@plt>
  423f6c:	ldr	x0, [x21, #32]
  423f70:	add	x0, x0, x20, lsl #3
  423f74:	str	xzr, [x0]
  423f78:	mov	sp, x29
  423f7c:	ldp	x19, x20, [sp, #16]
  423f80:	ldp	x21, x22, [sp, #32]
  423f84:	ldp	x23, x24, [sp, #48]
  423f88:	ldp	x25, x26, [sp, #64]
  423f8c:	ldp	x27, x28, [sp, #80]
  423f90:	ldp	x29, x30, [sp], #96
  423f94:	ret
  423f98:	add	x20, x20, #0x2
  423f9c:	cmp	x20, x23
  423fa0:	ldr	x27, [x21, #32]
  423fa4:	b.hi	42409c <nftw@plt+0x2151c>  // b.pmore
  423fa8:	sub	x28, x22, #0x8
  423fac:	mov	w0, w26
  423fb0:	mov	x1, x19
  423fb4:	bl	423940 <nftw@plt+0x20dc0>
  423fb8:	str	x0, [x27, x28]
  423fbc:	b	423fd4 <nftw@plt+0x21454>
  423fc0:	str	x2, [x19, #8]
  423fc4:	ldrb	w0, [x1]
  423fc8:	mov	w1, w0
  423fcc:	ldrh	w1, [x25, w1, sxtw #1]
  423fd0:	tbz	w1, #0, 423ff4 <nftw@plt+0x21474>
  423fd4:	ldp	x1, x0, [x19, #8]
  423fd8:	add	x2, x1, #0x1
  423fdc:	cmp	x1, x0
  423fe0:	b.cc	423fc0 <nftw@plt+0x21440>  // b.lo, b.ul, b.last
  423fe4:	mov	x0, x19
  423fe8:	bl	402b40 <__uflow@plt>
  423fec:	cmn	w0, #0x1
  423ff0:	b.ne	424088 <nftw@plt+0x21508>  // b.any
  423ff4:	mov	x1, x19
  423ff8:	bl	423940 <nftw@plt+0x20dc0>
  423ffc:	ldrb	w1, [x0]
  424000:	mov	x26, x0
  424004:	cmp	w1, #0x2f
  424008:	b.ne	424068 <nftw@plt+0x214e8>  // b.any
  42400c:	ldr	x0, [x21, #32]
  424010:	str	x26, [x0, x22]
  424014:	ldp	x1, x3, [x19, #8]
  424018:	add	x2, x1, #0x1
  42401c:	cmp	x3, x1
  424020:	b.ls	424048 <nftw@plt+0x214c8>  // b.plast
  424024:	nop
  424028:	str	x2, [x19, #8]
  42402c:	ldrb	w0, [x1]
  424030:	cmp	w0, #0xa
  424034:	b.eq	424060 <nftw@plt+0x214e0>  // b.none
  424038:	mov	x1, x2
  42403c:	add	x2, x1, #0x1
  424040:	cmp	x3, x1
  424044:	b.hi	424028 <nftw@plt+0x214a8>  // b.pmore
  424048:	mov	x0, x19
  42404c:	bl	402b40 <__uflow@plt>
  424050:	cmp	w0, #0xa
  424054:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  424058:	b.ne	424090 <nftw@plt+0x21510>  // b.any
  42405c:	ldr	x3, [x19, #16]
  424060:	add	x22, x22, #0x10
  424064:	b	423f18 <nftw@plt+0x21398>
  424068:	ldr	w2, [x21, #16]
  42406c:	mov	x1, x24
  424070:	ldr	x27, [x21, #32]
  424074:	bl	423db8 <nftw@plt+0x21238>
  424078:	str	x0, [x27, x22]
  42407c:	mov	x0, x26
  424080:	bl	402910 <free@plt>
  424084:	b	424014 <nftw@plt+0x21494>
  424088:	and	w1, w0, #0xff
  42408c:	b	423fcc <nftw@plt+0x2144c>
  424090:	ldp	x2, x3, [x19, #8]
  424094:	mov	x1, x2
  424098:	b	42403c <nftw@plt+0x214bc>
  42409c:	add	x23, x23, #0x8
  4240a0:	mov	x0, x27
  4240a4:	lsl	x1, x23, #3
  4240a8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4240ac:	mov	x27, x0
  4240b0:	str	x0, [x21, #32]
  4240b4:	b	423fa8 <nftw@plt+0x21428>
  4240b8:	and	w0, w0, #0xff
  4240bc:	b	423f34 <nftw@plt+0x213b4>
  4240c0:	stp	x29, x30, [sp, #-96]!
  4240c4:	mov	x29, sp
  4240c8:	stp	x19, x20, [sp, #16]
  4240cc:	ldrb	w20, [x1, #213]
  4240d0:	cbnz	w20, 424220 <nftw@plt+0x216a0>
  4240d4:	stp	x25, x26, [sp, #64]
  4240d8:	mov	x19, x1
  4240dc:	ldrb	w25, [x1, #211]
  4240e0:	cbnz	w25, 424234 <nftw@plt+0x216b4>
  4240e4:	stp	x21, x22, [sp, #32]
  4240e8:	mov	x22, x0
  4240ec:	ldr	w0, [x1, #204]
  4240f0:	cbnz	w0, 424230 <nftw@plt+0x216b0>
  4240f4:	ldr	w0, [x1, #200]
  4240f8:	stp	x23, x24, [sp, #48]
  4240fc:	mov	w23, w2
  424100:	cmn	w0, #0x1
  424104:	b.eq	424248 <nftw@plt+0x216c8>  // b.none
  424108:	ldr	w24, [x19, #88]
  42410c:	and	w24, w24, #0xf000
  424110:	cmp	w24, #0x6, lsl #12
  424114:	b.eq	4242b8 <nftw@plt+0x21738>  // b.none
  424118:	str	x27, [sp, #80]
  42411c:	cmp	w24, #0x8, lsl #12
  424120:	mov	x0, #0x2010                	// #8208
  424124:	mov	x21, #0x2000                	// #8192
  424128:	b.eq	42427c <nftw@plt+0x216fc>  // b.none
  42412c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  424130:	mov	x20, x0
  424134:	mov	x27, #0x0                   	// #0
  424138:	ldr	w0, [x19, #200]
  42413c:	sub	x2, x21, x27
  424140:	add	x1, x20, x27
  424144:	mov	x26, x27
  424148:	bl	4029d0 <read@plt>
  42414c:	add	x27, x27, x0
  424150:	cmp	x0, #0x0
  424154:	b.le	42419c <nftw@plt+0x2161c>
  424158:	cmp	x21, x27
  42415c:	b.ne	424138 <nftw@plt+0x215b8>  // b.any
  424160:	mov	x0, x20
  424164:	cmp	w24, #0x8, lsl #12
  424168:	b.eq	424288 <nftw@plt+0x21708>  // b.none
  42416c:	lsl	x21, x21, #1
  424170:	mov	x26, x27
  424174:	add	x1, x21, #0x10
  424178:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  42417c:	mov	x20, x0
  424180:	ldr	w0, [x19, #200]
  424184:	sub	x2, x21, x27
  424188:	add	x1, x20, x27
  42418c:	bl	4029d0 <read@plt>
  424190:	add	x27, x27, x0
  424194:	cmp	x0, #0x0
  424198:	b.gt	424158 <nftw@plt+0x215d8>
  42419c:	b.ne	424290 <nftw@plt+0x21710>  // b.any
  4241a0:	cmp	w24, #0x8, lsl #12
  4241a4:	ccmp	x26, x21, #0x4, eq  // eq = none
  4241a8:	b.eq	4241c8 <nftw@plt+0x21648>  // b.none
  4241ac:	ldr	x4, [x19, #8]
  4241b0:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4241b4:	mov	w2, w23
  4241b8:	add	x3, x3, #0xe38
  4241bc:	mov	x0, x22
  4241c0:	mov	w1, #0x0                   	// #0
  4241c4:	bl	41f650 <nftw@plt+0x1cad0>
  4241c8:	ldr	x1, [x22, #1184]
  4241cc:	mov	x4, x26
  4241d0:	add	x3, x21, #0x10
  4241d4:	mov	x2, x20
  4241d8:	mov	x0, x22
  4241dc:	add	x6, x19, #0x78
  4241e0:	add	x5, x19, #0x30
  4241e4:	bl	41b180 <nftw@plt+0x18600>
  4241e8:	mov	w1, #0x1                   	// #1
  4241ec:	strb	w1, [x19, #213]
  4241f0:	ldr	x27, [sp, #80]
  4241f4:	str	x0, [x19, #40]
  4241f8:	ldr	w0, [x19, #200]
  4241fc:	strb	w25, [x19, #211]
  424200:	bl	4027a0 <close@plt>
  424204:	ldrb	w20, [x19, #211]
  424208:	mov	w0, #0xffffffff            	// #-1
  42420c:	eor	w20, w20, #0x1
  424210:	ldp	x21, x22, [sp, #32]
  424214:	ldp	x23, x24, [sp, #48]
  424218:	ldp	x25, x26, [sp, #64]
  42421c:	str	w0, [x19, #200]
  424220:	mov	w0, w20
  424224:	ldp	x19, x20, [sp, #16]
  424228:	ldp	x29, x30, [sp], #96
  42422c:	ret
  424230:	ldp	x21, x22, [sp, #32]
  424234:	mov	w0, w20
  424238:	ldp	x19, x20, [sp, #16]
  42423c:	ldp	x25, x26, [sp, #64]
  424240:	ldp	x29, x30, [sp], #96
  424244:	ret
  424248:	mov	x0, x1
  42424c:	bl	423a60 <nftw@plt+0x20ee0>
  424250:	ands	w20, w0, #0xff
  424254:	b.ne	424108 <nftw@plt+0x21588>  // b.any
  424258:	mov	w3, w23
  42425c:	mov	x0, x22
  424260:	mov	x1, x19
  424264:	mov	w2, #0x0                   	// #0
  424268:	bl	423c88 <nftw@plt+0x21108>
  42426c:	ldp	x21, x22, [sp, #32]
  424270:	ldp	x23, x24, [sp, #48]
  424274:	ldp	x25, x26, [sp, #64]
  424278:	b	424220 <nftw@plt+0x216a0>
  42427c:	ldr	x21, [x19, #120]
  424280:	add	x0, x21, #0x10
  424284:	b	42412c <nftw@plt+0x215ac>
  424288:	mov	x26, x21
  42428c:	b	4241c8 <nftw@plt+0x21648>
  424290:	ldr	x2, [x19, #8]
  424294:	mov	w3, w23
  424298:	mov	w1, #0x3                   	// #3
  42429c:	mov	x0, x22
  4242a0:	mov	w25, #0x1                   	// #1
  4242a4:	bl	41f7d0 <nftw@plt+0x1cc50>
  4242a8:	mov	x0, x20
  4242ac:	bl	402910 <free@plt>
  4242b0:	ldr	x27, [sp, #80]
  4242b4:	b	4241f8 <nftw@plt+0x21678>
  4242b8:	ldr	x4, [x19, #8]
  4242bc:	mov	w2, w23
  4242c0:	mov	x0, x22
  4242c4:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4242c8:	mov	w1, #0x3                   	// #3
  4242cc:	add	x3, x3, #0xe20
  4242d0:	mov	w25, #0x1                   	// #1
  4242d4:	bl	41f650 <nftw@plt+0x1cad0>
  4242d8:	b	4241f8 <nftw@plt+0x21678>
  4242dc:	nop
  4242e0:	stp	x29, x30, [sp, #-48]!
  4242e4:	mov	x29, sp
  4242e8:	stp	x19, x20, [sp, #16]
  4242ec:	mov	x19, x0
  4242f0:	add	x20, x19, #0xd8
  4242f4:	ldrb	w0, [x1]
  4242f8:	cmp	w0, #0x2f
  4242fc:	b.eq	424320 <nftw@plt+0x217a0>  // b.none
  424300:	ldr	x4, [x19]
  424304:	cbz	x4, 42436c <nftw@plt+0x217ec>
  424308:	ldr	x20, [x4, #80]
  42430c:	cmp	w3, #0x1
  424310:	b.eq	42434c <nftw@plt+0x217cc>  // b.none
  424314:	cbz	w2, 424330 <nftw@plt+0x217b0>
  424318:	ldr	x20, [x19, #208]
  42431c:	cbz	x20, 424374 <nftw@plt+0x217f4>
  424320:	mov	x0, x20
  424324:	ldp	x19, x20, [sp, #16]
  424328:	ldp	x29, x30, [sp], #48
  42432c:	ret
  424330:	cmp	w3, #0x3
  424334:	b.eq	4243d8 <nftw@plt+0x21858>  // b.none
  424338:	ldrb	w0, [x19, #416]
  42433c:	cbz	w0, 42439c <nftw@plt+0x2181c>
  424340:	ldr	x20, [x19, #200]
  424344:	cbnz	x20, 424320 <nftw@plt+0x217a0>
  424348:	b	424374 <nftw@plt+0x217f4>
  42434c:	ldr	x0, [x20, #64]
  424350:	cbz	x0, 4243cc <nftw@plt+0x2184c>
  424354:	add	x3, x19, #0xd8
  424358:	cmp	x0, x3
  42435c:	b.eq	4243cc <nftw@plt+0x2184c>  // b.none
  424360:	ldr	x20, [x0]
  424364:	cbnz	x20, 424320 <nftw@plt+0x217a0>
  424368:	b	424374 <nftw@plt+0x217f4>
  42436c:	ldr	x20, [x19, #288]
  424370:	b	42430c <nftw@plt+0x2178c>
  424374:	mov	x3, x1
  424378:	mov	x0, x19
  42437c:	mov	w1, #0x3                   	// #3
  424380:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  424384:	add	x2, x2, #0xe60
  424388:	bl	41f298 <nftw@plt+0x1c718>
  42438c:	mov	x0, x20
  424390:	ldp	x19, x20, [sp, #16]
  424394:	ldp	x29, x30, [sp], #48
  424398:	ret
  42439c:	stp	x21, x22, [sp, #32]
  4243a0:	ldr	x21, [x20, #24]
  4243a4:	cbz	x21, 4243f4 <nftw@plt+0x21874>
  4243a8:	mov	w2, #0x0                   	// #0
  4243ac:	cbz	x4, 4243b4 <nftw@plt+0x21834>
  4243b0:	ldrb	w2, [x4, #106]
  4243b4:	mov	x1, x21
  4243b8:	mov	x0, x19
  4243bc:	ldp	x19, x20, [sp, #16]
  4243c0:	ldp	x21, x22, [sp, #32]
  4243c4:	ldp	x29, x30, [sp], #48
  4243c8:	b	423858 <nftw@plt+0x20cd8>
  4243cc:	cbz	w2, 424338 <nftw@plt+0x217b8>
  4243d0:	ldr	x20, [x19, #208]
  4243d4:	b	42431c <nftw@plt+0x2179c>
  4243d8:	mov	x0, x19
  4243dc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4243e0:	ldp	x19, x20, [sp, #16]
  4243e4:	add	x1, x1, #0xe58
  4243e8:	ldp	x29, x30, [sp], #48
  4243ec:	mov	w2, #0x0                   	// #0
  4243f0:	b	423858 <nftw@plt+0x20cd8>
  4243f4:	ldr	x0, [x20, #8]
  4243f8:	bl	4496a8 <nftw@plt+0x46b28>
  4243fc:	ldr	x22, [x20, #8]
  424400:	sub	x22, x0, x22
  424404:	add	x0, x22, #0x1
  424408:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42440c:	ldr	x1, [x20, #8]
  424410:	mov	x21, x0
  424414:	mov	x2, x22
  424418:	bl	402490 <memcpy@plt>
  42441c:	strb	wzr, [x21, x22]
  424420:	ldr	x4, [x19]
  424424:	str	x21, [x20, #24]
  424428:	b	4243a8 <nftw@plt+0x21828>
  42442c:	nop
  424430:	ldr	w0, [x0, #204]
  424434:	cmp	w0, #0x0
  424438:	cset	w0, ne  // ne = any
  42443c:	ret
  424440:	stp	x29, x30, [sp, #-288]!
  424444:	mov	x29, sp
  424448:	stp	x23, x24, [sp, #48]
  42444c:	mov	x24, x1
  424450:	and	w1, w3, #0xff
  424454:	stp	x19, x20, [sp, #16]
  424458:	mov	x20, x0
  42445c:	stp	x21, x22, [sp, #32]
  424460:	mov	x21, x2
  424464:	str	w1, [sp, #120]
  424468:	and	w1, w5, #0xff
  42446c:	str	w1, [sp, #116]
  424470:	str	w6, [sp, #136]
  424474:	str	w4, [sp, #144]
  424478:	cbz	x2, 424a28 <nftw@plt+0x21ea8>
  42447c:	ldr	x19, [x20, #296]
  424480:	mov	x0, x24
  424484:	bl	449330 <nftw@plt+0x467b0>
  424488:	mov	w2, w0
  42448c:	mov	x1, x24
  424490:	mov	x0, x19
  424494:	mov	w3, #0x1                   	// #1
  424498:	bl	448e60 <nftw@plt+0x462e0>
  42449c:	mov	x23, x0
  4244a0:	ldr	x0, [x0]
  4244a4:	cbnz	x0, 4244b4 <nftw@plt+0x21934>
  4244a8:	b	4244dc <nftw@plt+0x2195c>
  4244ac:	ldr	x0, [x0]
  4244b0:	cbz	x0, 4244dc <nftw@plt+0x2195c>
  4244b4:	ldr	x1, [x0, #8]
  4244b8:	cmp	x21, x1
  4244bc:	b.ne	4244ac <nftw@plt+0x2192c>  // b.any
  4244c0:	ldr	x19, [x0, #24]
  4244c4:	mov	x0, x19
  4244c8:	ldp	x19, x20, [sp, #16]
  4244cc:	ldp	x21, x22, [sp, #32]
  4244d0:	ldp	x23, x24, [sp, #48]
  4244d4:	ldp	x29, x30, [sp], #288
  4244d8:	ret
  4244dc:	mov	x1, #0xd8                  	// #216
  4244e0:	mov	x0, #0x1                   	// #1
  4244e4:	stp	x27, x28, [sp, #80]
  4244e8:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  4244ec:	mov	x19, x0
  4244f0:	ldr	x1, [x20]
  4244f4:	mov	w2, #0xffffffff            	// #-1
  4244f8:	str	x21, [x19, #64]
  4244fc:	mov	x0, x24
  424500:	cmp	x1, #0x0
  424504:	str	w2, [x19, #200]
  424508:	cset	w1, eq  // eq = none
  42450c:	strb	w1, [x19, #212]
  424510:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  424514:	mov	x28, x0
  424518:	ldr	w1, [sp, #116]
  42451c:	str	x28, [x19]
  424520:	mov	w0, w1
  424524:	cbz	w1, 4249f4 <nftw@plt+0x21e74>
  424528:	strb	w0, [x19, #214]
  42452c:	ldr	w0, [sp, #120]
  424530:	cbnz	w0, 424c9c <nftw@plt+0x2211c>
  424534:	stp	x25, x26, [sp, #64]
  424538:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42453c:	add	x0, x0, #0xf18
  424540:	str	x0, [sp, #152]
  424544:	ldrb	w0, [x20, #1145]
  424548:	str	wzr, [sp, #140]
  42454c:	str	wzr, [sp, #148]
  424550:	ldr	x26, [x19, #64]
  424554:	cbnz	w0, 4245e4 <nftw@plt+0x21a64>
  424558:	ldr	x2, [x26, #40]
  42455c:	cbz	x2, 4248d0 <nftw@plt+0x21d50>
  424560:	mov	x1, x26
  424564:	mov	x0, x28
  424568:	blr	x2
  42456c:	mov	x25, x0
  424570:	cbz	x25, 42474c <nftw@plt+0x21bcc>
  424574:	ldrb	w0, [x20, #1245]
  424578:	cbz	w0, 424588 <nftw@plt+0x21a08>
  42457c:	ldr	x0, [x19, #64]
  424580:	ldrb	w0, [x0, #20]
  424584:	cbnz	w0, 4248e8 <nftw@plt+0x21d68>
  424588:	mov	x0, x25
  42458c:	bl	449330 <nftw@plt+0x467b0>
  424590:	mov	w22, w0
  424594:	mov	w2, w0
  424598:	ldr	x0, [x20, #320]
  42459c:	mov	x1, x25
  4245a0:	bl	448ca0 <nftw@plt+0x46120>
  4245a4:	cbz	x0, 42475c <nftw@plt+0x21bdc>
  4245a8:	mov	w0, #0x2                   	// #2
  4245ac:	str	w0, [x19, #204]
  4245b0:	ldr	x0, [x19, #64]
  4245b4:	ldr	x26, [x0]
  4245b8:	str	x26, [x19, #64]
  4245bc:	cbz	x26, 424a60 <nftw@plt+0x21ee0>
  4245c0:	ldr	x0, [x20, #208]
  4245c4:	cmp	x26, x0
  4245c8:	b.eq	4248c4 <nftw@plt+0x21d44>  // b.none
  4245cc:	ldr	x0, [x20, #200]
  4245d0:	cmp	x26, x0
  4245d4:	b.eq	424630 <nftw@plt+0x21ab0>  // b.none
  4245d8:	ldrb	w0, [x20, #1145]
  4245dc:	ldr	x28, [x19]
  4245e0:	cbz	w0, 424558 <nftw@plt+0x219d8>
  4245e4:	ldr	x0, [x26, #32]
  4245e8:	cbz	x0, 42473c <nftw@plt+0x21bbc>
  4245ec:	ldr	x0, [x0]
  4245f0:	mov	x22, #0x0                   	// #0
  4245f4:	cbnz	x0, 42460c <nftw@plt+0x21a8c>
  4245f8:	b	424674 <nftw@plt+0x21af4>
  4245fc:	ldr	x0, [x26, #32]
  424600:	add	x22, x22, #0x2
  424604:	ldr	x0, [x0, x22, lsl #3]
  424608:	cbz	x0, 424674 <nftw@plt+0x21af4>
  42460c:	mov	x1, x28
  424610:	bl	448380 <nftw@plt+0x45800>
  424614:	cbnz	w0, 4245fc <nftw@plt+0x21a7c>
  424618:	ldr	x0, [x26, #32]
  42461c:	add	x22, x22, #0x1
  424620:	ldr	x0, [x0, x22, lsl #3]
  424624:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  424628:	mov	x25, x0
  42462c:	b	424574 <nftw@plt+0x219f4>
  424630:	mov	w0, #0x1                   	// #1
  424634:	str	w0, [sp, #140]
  424638:	ldr	x22, [x23]
  42463c:	cbnz	x22, 42464c <nftw@plt+0x21acc>
  424640:	b	4245d8 <nftw@plt+0x21a58>
  424644:	ldr	x22, [x22]
  424648:	cbz	x22, 4245d8 <nftw@plt+0x21a58>
  42464c:	ldr	x28, [x22, #8]
  424650:	cmp	x26, x28
  424654:	b.ne	424644 <nftw@plt+0x21ac4>  // b.any
  424658:	ldr	x0, [x19]
  42465c:	bl	402910 <free@plt>
  424660:	mov	x0, x19
  424664:	bl	402910 <free@plt>
  424668:	ldr	x19, [x22, #24]
  42466c:	ldp	x25, x26, [sp, #64]
  424670:	b	42482c <nftw@plt+0x21cac>
  424674:	ldrb	w0, [x28]
  424678:	cmp	w0, #0x2f
  42467c:	b.eq	424ae8 <nftw@plt+0x21f68>  // b.none
  424680:	mov	x0, x28
  424684:	mov	w1, #0x2f                  	// #47
  424688:	bl	402940 <strchr@plt>
  42468c:	cmp	x0, #0x0
  424690:	mov	x25, x0
  424694:	ccmp	x28, x0, #0x4, ne  // ne = any
  424698:	b.eq	424ae8 <nftw@plt+0x21f68>  // b.none
  42469c:	sub	x5, x0, x28
  4246a0:	ldr	w22, [x26, #16]
  4246a4:	add	x5, x5, #0x1
  4246a8:	str	x5, [sp, #104]
  4246ac:	add	x22, x22, x5
  4246b0:	add	x0, x22, #0x2
  4246b4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4246b8:	mov	x27, x0
  4246bc:	ldr	w2, [x26, #16]
  4246c0:	ldr	x1, [x26, #8]
  4246c4:	add	x7, x0, x2
  4246c8:	str	x7, [sp, #96]
  4246cc:	str	x2, [sp, #128]
  4246d0:	bl	402490 <memcpy@plt>
  4246d4:	ldr	w0, [x26, #16]
  4246d8:	ldp	x7, x5, [sp, #96]
  4246dc:	cbz	w0, 424708 <nftw@plt+0x21b88>
  4246e0:	ldr	x1, [x26, #8]
  4246e4:	sub	w0, w0, #0x1
  4246e8:	ldrb	w0, [x1, w0, uxtw]
  4246ec:	cmp	w0, #0x2f
  4246f0:	b.eq	424708 <nftw@plt+0x21b88>  // b.none
  4246f4:	ldr	x2, [sp, #128]
  4246f8:	add	x22, x22, #0x1
  4246fc:	add	x7, x7, #0x1
  424700:	mov	w0, #0x2f                  	// #47
  424704:	strb	w0, [x27, x2]
  424708:	mov	x2, x5
  42470c:	mov	x1, x28
  424710:	mov	x0, x7
  424714:	bl	402490 <memcpy@plt>
  424718:	strb	wzr, [x27, x22]
  42471c:	mov	x1, x27
  424720:	mov	x0, x20
  424724:	add	x28, x25, #0x1
  424728:	ldrb	w2, [x26, #20]
  42472c:	bl	423858 <nftw@plt+0x20cd8>
  424730:	mov	x26, x0
  424734:	ldr	x0, [x26, #32]
  424738:	cbnz	x0, 4245ec <nftw@plt+0x21a6c>
  42473c:	mov	x0, x26
  424740:	bl	423e50 <nftw@plt+0x212d0>
  424744:	ldr	x0, [x26, #32]
  424748:	b	4245ec <nftw@plt+0x21a6c>
  42474c:	mov	w0, #0x2                   	// #2
  424750:	str	xzr, [x19, #8]
  424754:	str	w0, [x19, #204]
  424758:	b	4245b0 <nftw@plt+0x21a30>
  42475c:	ldr	x0, [x19]
  424760:	str	x25, [x19, #8]
  424764:	ldrb	w0, [x0]
  424768:	cbz	w0, 424928 <nftw@plt+0x21da8>
  42476c:	ldr	x0, [x20, #968]
  424770:	cbz	x0, 424928 <nftw@plt+0x21da8>
  424774:	ldr	x0, [x20, #280]
  424778:	cbz	x0, 42478c <nftw@plt+0x21c0c>
  42477c:	ldrb	w1, [x0, #214]
  424780:	cbnz	w1, 424a40 <nftw@plt+0x21ec0>
  424784:	ldrb	w0, [x0, #212]
  424788:	cbz	w0, 424928 <nftw@plt+0x21da8>
  42478c:	mov	x0, x25
  424790:	bl	4024f0 <strlen@plt>
  424794:	mov	x2, x0
  424798:	add	x28, x0, #0x5
  42479c:	mov	x0, x28
  4247a0:	str	x2, [sp, #96]
  4247a4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4247a8:	mov	x26, x0
  4247ac:	ldr	x2, [sp, #96]
  4247b0:	mov	x1, x25
  4247b4:	add	x27, x0, x2
  4247b8:	str	x27, [sp, #128]
  4247bc:	bl	402490 <memcpy@plt>
  4247c0:	ldr	x3, [sp, #152]
  4247c4:	mov	x1, x26
  4247c8:	ldr	x2, [sp, #96]
  4247cc:	ldr	w0, [x3]
  4247d0:	ldrb	w4, [x3, #4]
  4247d4:	str	w0, [x26, x2]
  4247d8:	add	x2, sp, #0xa0
  4247dc:	strb	w4, [x27, #4]
  4247e0:	mov	w0, #0x0                   	// #0
  4247e4:	bl	402ac0 <__xstat@plt>
  4247e8:	cbnz	w0, 424920 <nftw@plt+0x21da0>
  4247ec:	ldr	w0, [sp, #176]
  4247f0:	and	w0, w0, #0xf000
  4247f4:	cmp	w0, #0x4, lsl #12
  4247f8:	b.eq	424af4 <nftw@plt+0x21f74>  // b.none
  4247fc:	mov	x2, x26
  424800:	mov	x1, x19
  424804:	mov	x0, x20
  424808:	bl	423b38 <nftw@plt+0x20fb8>
  42480c:	tst	w0, #0xff
  424810:	b.eq	424ad4 <nftw@plt+0x21f54>  // b.none
  424814:	str	x26, [x19, #16]
  424818:	ldp	x25, x26, [sp, #64]
  42481c:	mov	x28, #0x0                   	// #0
  424820:	ldr	x0, [x20, #280]
  424824:	str	x0, [x19, #32]
  424828:	str	x19, [x20, #280]
  42482c:	mov	x0, x20
  424830:	bl	4237e8 <nftw@plt+0x20c68>
  424834:	ldr	x2, [x20, #40]
  424838:	ldr	x3, [x23]
  42483c:	ldr	w2, [x2, #56]
  424840:	stp	x3, x21, [x0]
  424844:	str	w2, [x0, #16]
  424848:	str	x19, [x0, #24]
  42484c:	str	x0, [x23]
  424850:	ldr	w0, [sp, #148]
  424854:	cbz	w0, 424890 <nftw@plt+0x21d10>
  424858:	ldr	x0, [x20, #208]
  42485c:	cmp	x0, x21
  424860:	ccmp	x0, x28, #0x4, ne  // ne = any
  424864:	b.eq	424890 <nftw@plt+0x21d10>  // b.none
  424868:	mov	x0, x20
  42486c:	bl	4237e8 <nftw@plt+0x20c68>
  424870:	ldr	x2, [x20, #40]
  424874:	ldr	x4, [x23]
  424878:	ldr	w2, [x2, #56]
  42487c:	ldr	x3, [x20, #208]
  424880:	stp	x4, x3, [x0]
  424884:	str	w2, [x0, #16]
  424888:	str	x19, [x0, #24]
  42488c:	str	x0, [x23]
  424890:	ldr	w0, [sp, #140]
  424894:	cbz	w0, 4248a8 <nftw@plt+0x21d28>
  424898:	ldr	x0, [x20, #200]
  42489c:	cmp	x0, x28
  4248a0:	ccmp	x0, x21, #0x4, ne  // ne = any
  4248a4:	b.ne	424b94 <nftw@plt+0x22014>  // b.any
  4248a8:	mov	x0, x19
  4248ac:	ldp	x19, x20, [sp, #16]
  4248b0:	ldp	x21, x22, [sp, #32]
  4248b4:	ldp	x23, x24, [sp, #48]
  4248b8:	ldp	x27, x28, [sp, #80]
  4248bc:	ldp	x29, x30, [sp], #288
  4248c0:	ret
  4248c4:	mov	w0, #0x1                   	// #1
  4248c8:	str	w0, [sp, #148]
  4248cc:	b	424638 <nftw@plt+0x21ab8>
  4248d0:	ldr	w2, [x26, #16]
  4248d4:	mov	x0, x28
  4248d8:	add	x1, x26, #0x8
  4248dc:	bl	423db8 <nftw@plt+0x21238>
  4248e0:	mov	x25, x0
  4248e4:	b	424570 <nftw@plt+0x219f0>
  4248e8:	mov	x0, x25
  4248ec:	bl	4496d8 <nftw@plt+0x46b58>
  4248f0:	mov	x22, x0
  4248f4:	cbz	x0, 424a4c <nftw@plt+0x21ecc>
  4248f8:	bl	4024f0 <strlen@plt>
  4248fc:	mov	x26, x0
  424900:	mov	x0, x25
  424904:	bl	4024f0 <strlen@plt>
  424908:	cmp	x26, x0
  42490c:	b.cs	424a4c <nftw@plt+0x21ecc>  // b.hs, b.nlast
  424910:	mov	x0, x25
  424914:	mov	x25, x22
  424918:	bl	402910 <free@plt>
  42491c:	b	424588 <nftw@plt+0x21a08>
  424920:	mov	x0, x26
  424924:	bl	402910 <free@plt>
  424928:	mov	x0, x19
  42492c:	bl	423a60 <nftw@plt+0x20ee0>
  424930:	tst	w0, #0xff
  424934:	b.ne	424a58 <nftw@plt+0x21ed8>  // b.any
  424938:	ldr	w0, [x19, #204]
  42493c:	cmp	w0, #0x2
  424940:	b.ne	424a0c <nftw@plt+0x21e8c>  // b.any
  424944:	add	x26, x20, #0x148
  424948:	mov	x0, x25
  42494c:	bl	4024f0 <strlen@plt>
  424950:	add	x1, x0, #0x1
  424954:	mov	x28, x0
  424958:	ldp	x0, x4, [x26, #24]
  42495c:	sub	x4, x4, x0
  424960:	cmp	x4, x1
  424964:	b.cc	424c5c <nftw@plt+0x220dc>  // b.lo, b.ul, b.last
  424968:	mov	x2, x28
  42496c:	mov	x1, x25
  424970:	bl	402490 <memcpy@plt>
  424974:	ldr	x1, [x26, #24]
  424978:	add	x0, x1, x28
  42497c:	add	x0, x0, #0x1
  424980:	str	x0, [x26, #24]
  424984:	strb	wzr, [x1, x28]
  424988:	ldp	x28, x4, [x26, #16]
  42498c:	cmp	x28, x4
  424990:	b.eq	424c6c <nftw@plt+0x220ec>  // b.none
  424994:	ldr	x0, [x26, #48]
  424998:	ldr	x2, [x26, #8]
  42499c:	add	x4, x4, x0
  4249a0:	ldr	x5, [x26, #32]
  4249a4:	bic	x0, x4, x0
  4249a8:	str	x0, [x26, #24]
  4249ac:	sub	x4, x0, x2
  4249b0:	sub	x2, x5, x2
  4249b4:	cmp	x4, x2
  4249b8:	b.ls	4249c4 <nftw@plt+0x21e44>  // b.plast
  4249bc:	mov	x0, x5
  4249c0:	str	x5, [x26, #24]
  4249c4:	str	x0, [x26, #16]
  4249c8:	mov	x0, x25
  4249cc:	bl	402910 <free@plt>
  4249d0:	ldr	x0, [x20, #320]
  4249d4:	mov	w2, w22
  4249d8:	mov	x1, x28
  4249dc:	mov	w3, #0x1                   	// #1
  4249e0:	bl	448e60 <nftw@plt+0x462e0>
  4249e4:	str	x28, [x0]
  4249e8:	ldr	x0, [x19]
  4249ec:	str	x0, [x19, #8]
  4249f0:	b	4245b0 <nftw@plt+0x21a30>
  4249f4:	ldr	x1, [x20]
  4249f8:	ldr	w0, [sp, #116]
  4249fc:	cbz	x1, 424528 <nftw@plt+0x219a8>
  424a00:	ldr	x0, [x1, #80]
  424a04:	ldrb	w0, [x0, #214]
  424a08:	b	424528 <nftw@plt+0x219a8>
  424a0c:	ldr	w3, [sp, #136]
  424a10:	mov	x1, x19
  424a14:	mov	x0, x20
  424a18:	mov	w2, #0x0                   	// #0
  424a1c:	bl	423c88 <nftw@plt+0x21108>
  424a20:	ldp	x25, x26, [sp, #64]
  424a24:	b	42481c <nftw@plt+0x21c9c>
  424a28:	mov	w2, w6
  424a2c:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  424a30:	mov	w1, #0x4                   	// #4
  424a34:	add	x3, x3, #0xe90
  424a38:	bl	41f650 <nftw@plt+0x1cad0>
  424a3c:	b	42447c <nftw@plt+0x218fc>
  424a40:	ldr	x0, [x0, #32]
  424a44:	cbnz	x0, 42477c <nftw@plt+0x21bfc>
  424a48:	b	42478c <nftw@plt+0x21c0c>
  424a4c:	mov	x0, x22
  424a50:	bl	402910 <free@plt>
  424a54:	b	424588 <nftw@plt+0x21a08>
  424a58:	ldp	x25, x26, [sp, #64]
  424a5c:	b	42481c <nftw@plt+0x21c9c>
  424a60:	ldr	x3, [x20, #984]
  424a64:	cbz	x3, 424aa0 <nftw@plt+0x21f20>
  424a68:	mov	x1, x24
  424a6c:	add	x2, x19, #0x40
  424a70:	mov	x0, x20
  424a74:	blr	x3
  424a78:	str	x0, [x19, #8]
  424a7c:	cbz	x0, 424a98 <nftw@plt+0x21f18>
  424a80:	mov	x0, x19
  424a84:	bl	423a60 <nftw@plt+0x20ee0>
  424a88:	tst	w0, #0xff
  424a8c:	b.ne	424c7c <nftw@plt+0x220fc>  // b.any
  424a90:	ldr	x0, [x19, #8]
  424a94:	bl	402910 <free@plt>
  424a98:	ldr	x0, [x19]
  424a9c:	str	x0, [x19, #8]
  424aa0:	ldr	w0, [sp, #120]
  424aa4:	cbnz	w0, 424bc4 <nftw@plt+0x22044>
  424aa8:	ldr	w0, [sp, #116]
  424aac:	cbnz	w0, 424c00 <nftw@plt+0x22080>
  424ab0:	ldr	w3, [sp, #136]
  424ab4:	mov	x1, x19
  424ab8:	ldr	w2, [sp, #144]
  424abc:	mov	x0, x20
  424ac0:	bl	423c88 <nftw@plt+0x21108>
  424ac4:	ldp	x25, x26, [sp, #64]
  424ac8:	b	42481c <nftw@plt+0x21c9c>
  424acc:	mov	x0, x27
  424ad0:	bl	402780 <closedir@plt>
  424ad4:	mov	w1, #0x1                   	// #1
  424ad8:	mov	x0, x26
  424adc:	str	w1, [sp, #120]
  424ae0:	bl	402910 <free@plt>
  424ae4:	b	424928 <nftw@plt+0x21da8>
  424ae8:	ldr	x28, [x19]
  424aec:	ldr	x26, [x19, #64]
  424af0:	b	424558 <nftw@plt+0x219d8>
  424af4:	mov	x0, x26
  424af8:	bl	4025c0 <opendir@plt>
  424afc:	mov	x27, x0
  424b00:	cbz	x0, 424ad4 <nftw@plt+0x21f54>
  424b04:	ldr	x0, [sp, #128]
  424b08:	mov	w1, #0x2f                  	// #47
  424b0c:	str	x28, [sp, #104]
  424b10:	strb	w1, [x0, #4]
  424b14:	nop
  424b18:	mov	x0, x27
  424b1c:	bl	402740 <readdir@plt>
  424b20:	mov	x1, x0
  424b24:	cbz	x0, 424acc <nftw@plt+0x21f4c>
  424b28:	ldurh	w1, [x1, #19]
  424b2c:	add	x4, x0, #0x13
  424b30:	mov	x0, x4
  424b34:	cmp	w1, #0x2e
  424b38:	b.eq	424b18 <nftw@plt+0x21f98>  // b.none
  424b3c:	mov	w2, #0x2e2e                	// #11822
  424b40:	cmp	w1, w2
  424b44:	b.eq	424c28 <nftw@plt+0x220a8>  // b.none
  424b48:	str	x4, [sp, #96]
  424b4c:	bl	4024f0 <strlen@plt>
  424b50:	ldp	x4, x1, [sp, #96]
  424b54:	add	x2, x0, #0x1
  424b58:	add	x0, x28, x2
  424b5c:	cmp	x0, x1
  424b60:	b.hi	424c34 <nftw@plt+0x220b4>  // b.pmore
  424b64:	mov	x1, x4
  424b68:	add	x0, x26, x28
  424b6c:	bl	402490 <memcpy@plt>
  424b70:	mov	x2, x26
  424b74:	mov	x1, x19
  424b78:	mov	x0, x20
  424b7c:	bl	423b38 <nftw@plt+0x20fb8>
  424b80:	tst	w0, #0xff
  424b84:	b.eq	424b18 <nftw@plt+0x21f98>  // b.none
  424b88:	mov	x0, x27
  424b8c:	bl	402780 <closedir@plt>
  424b90:	b	424814 <nftw@plt+0x21c94>
  424b94:	mov	x0, x20
  424b98:	bl	4237e8 <nftw@plt+0x20c68>
  424b9c:	ldr	x1, [x20, #40]
  424ba0:	ldr	x3, [x23]
  424ba4:	ldr	w1, [x1, #56]
  424ba8:	ldr	x2, [x20, #200]
  424bac:	ldp	x27, x28, [sp, #80]
  424bb0:	stp	x3, x2, [x0]
  424bb4:	str	w1, [x0, #16]
  424bb8:	str	x19, [x0, #24]
  424bbc:	str	x0, [x23]
  424bc0:	b	4244c4 <nftw@plt+0x21944>
  424bc4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  424bc8:	add	x2, x2, #0xeb8
  424bcc:	mov	w1, #0x3                   	// #3
  424bd0:	mov	x0, x20
  424bd4:	bl	41f298 <nftw@plt+0x1c718>
  424bd8:	mov	x0, x20
  424bdc:	bl	41e400 <nftw@plt+0x1b880>
  424be0:	ldrb	w0, [x0, #84]
  424be4:	cbnz	w0, 424aa8 <nftw@plt+0x21f28>
  424be8:	mov	x0, x20
  424bec:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  424bf0:	mov	w1, #0x3                   	// #3
  424bf4:	add	x2, x2, #0xef0
  424bf8:	bl	41f298 <nftw@plt+0x1c718>
  424bfc:	b	424aa8 <nftw@plt+0x21f28>
  424c00:	ldr	x0, [x19]
  424c04:	bl	402910 <free@plt>
  424c08:	mov	x0, x19
  424c0c:	bl	402910 <free@plt>
  424c10:	ldr	x0, [x23]
  424c14:	cbz	x0, 424cc4 <nftw@plt+0x22144>
  424c18:	mov	x19, #0x0                   	// #0
  424c1c:	ldp	x25, x26, [sp, #64]
  424c20:	ldp	x27, x28, [sp, #80]
  424c24:	b	4244c4 <nftw@plt+0x21944>
  424c28:	ldrb	w1, [x4, #2]
  424c2c:	cbz	w1, 424b18 <nftw@plt+0x21f98>
  424c30:	b	424b48 <nftw@plt+0x21fc8>
  424c34:	add	x1, x1, #0x40
  424c38:	mov	x0, x26
  424c3c:	add	x1, x1, x2
  424c40:	stp	x2, x1, [sp, #96]
  424c44:	str	x4, [sp, #120]
  424c48:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  424c4c:	mov	x26, x0
  424c50:	ldr	x2, [sp, #96]
  424c54:	ldr	x4, [sp, #120]
  424c58:	b	424b64 <nftw@plt+0x21fe4>
  424c5c:	mov	x0, x26
  424c60:	bl	449870 <_obstack_newchunk@@Base>
  424c64:	ldr	x0, [x26, #24]
  424c68:	b	424968 <nftw@plt+0x21de8>
  424c6c:	ldrb	w0, [x26, #80]
  424c70:	orr	w0, w0, #0x2
  424c74:	strb	w0, [x26, #80]
  424c78:	b	424994 <nftw@plt+0x21e14>
  424c7c:	ldr	x0, [x20, #280]
  424c80:	str	x0, [x19, #32]
  424c84:	str	x19, [x20, #280]
  424c88:	ldr	x0, [x23]
  424c8c:	cbz	x0, 424ca8 <nftw@plt+0x22128>
  424c90:	ldp	x25, x26, [sp, #64]
  424c94:	ldp	x27, x28, [sp, #80]
  424c98:	b	4244c4 <nftw@plt+0x21944>
  424c9c:	str	wzr, [sp, #140]
  424ca0:	str	wzr, [sp, #148]
  424ca4:	b	42481c <nftw@plt+0x21c9c>
  424ca8:	str	x19, [x23]
  424cac:	mov	x1, x23
  424cb0:	ldr	x0, [x20, #296]
  424cb4:	bl	4491b8 <nftw@plt+0x46638>
  424cb8:	ldp	x25, x26, [sp, #64]
  424cbc:	ldp	x27, x28, [sp, #80]
  424cc0:	b	4244c4 <nftw@plt+0x21944>
  424cc4:	str	x19, [x23]
  424cc8:	mov	x1, x23
  424ccc:	mov	x19, #0x0                   	// #0
  424cd0:	ldr	x0, [x20, #296]
  424cd4:	bl	4491b8 <nftw@plt+0x46638>
  424cd8:	ldp	x25, x26, [sp, #64]
  424cdc:	ldp	x27, x28, [sp, #80]
  424ce0:	b	4244c4 <nftw@plt+0x21944>
  424ce4:	nop
  424ce8:	stp	x29, x30, [sp, #-160]!
  424cec:	mov	x29, sp
  424cf0:	stp	x19, x20, [sp, #16]
  424cf4:	ldrb	w20, [x1, #210]
  424cf8:	cbnz	w20, 424d98 <nftw@plt+0x22218>
  424cfc:	stp	x21, x22, [sp, #32]
  424d00:	mov	x19, x1
  424d04:	mov	w21, w3
  424d08:	stp	x27, x28, [sp, #80]
  424d0c:	mov	x28, x0
  424d10:	and	w27, w2, #0xff
  424d14:	cbz	w27, 424d2c <nftw@plt+0x221ac>
  424d18:	ldrh	w1, [x1, #208]
  424d1c:	mov	w0, #0x1                   	// #1
  424d20:	strb	w0, [x28, #417]
  424d24:	strb	w0, [x19, #210]
  424d28:	cbnz	w1, 424dac <nftw@plt+0x2222c>
  424d2c:	ldr	x0, [x19, #56]
  424d30:	cbz	x0, 424d3c <nftw@plt+0x221bc>
  424d34:	ldrb	w0, [x0, #18]
  424d38:	tbnz	w0, #1, 424dac <nftw@plt+0x2222c>
  424d3c:	ldr	x1, [x19, #16]
  424d40:	cbz	x1, 424db8 <nftw@plt+0x22238>
  424d44:	ldr	w2, [x19, #200]
  424d48:	mov	x0, x28
  424d4c:	ldr	x3, [x19, #8]
  424d50:	ldr	x4, [x28, #976]
  424d54:	blr	x4
  424d58:	ldr	x0, [x19, #16]
  424d5c:	mov	w1, #0xffffffff            	// #-1
  424d60:	str	w1, [x19, #200]
  424d64:	bl	402910 <free@plt>
  424d68:	ldp	x21, x22, [sp, #32]
  424d6c:	mov	w0, w20
  424d70:	ldp	x27, x28, [sp, #80]
  424d74:	str	xzr, [x19, #16]
  424d78:	ldp	x19, x20, [sp, #16]
  424d7c:	ldp	x29, x30, [sp], #160
  424d80:	ret
  424d84:	ldp	x21, x22, [sp, #32]
  424d88:	ldp	x23, x24, [sp, #48]
  424d8c:	ldp	x25, x26, [sp, #64]
  424d90:	ldp	x27, x28, [sp, #80]
  424d94:	nop
  424d98:	mov	w20, #0x0                   	// #0
  424d9c:	mov	w0, w20
  424da0:	ldp	x19, x20, [sp, #16]
  424da4:	ldp	x29, x30, [sp], #160
  424da8:	ret
  424dac:	ldp	x21, x22, [sp, #32]
  424db0:	ldp	x27, x28, [sp, #80]
  424db4:	b	424d98 <nftw@plt+0x22218>
  424db8:	mov	w2, w21
  424dbc:	mov	x1, x19
  424dc0:	mov	x0, x28
  424dc4:	bl	4240c0 <nftw@plt+0x21540>
  424dc8:	ands	w20, w0, #0xff
  424dcc:	b.eq	424dac <nftw@plt+0x2222c>  // b.none
  424dd0:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  424dd4:	stp	x25, x26, [sp, #64]
  424dd8:	ldr	x26, [x0, #2400]
  424ddc:	stp	x23, x24, [sp, #48]
  424de0:	cbz	x26, 424e7c <nftw@plt+0x222fc>
  424de4:	cbnz	w27, 424df0 <nftw@plt+0x22270>
  424de8:	ldrb	w0, [x26, #8]
  424dec:	cbz	w0, 424e7c <nftw@plt+0x222fc>
  424df0:	ldr	x0, [x19, #120]
  424df4:	str	x0, [sp, #120]
  424df8:	mov	x0, x26
  424dfc:	strb	wzr, [sp, #144]
  424e00:	strb	w27, [sp, #145]
  424e04:	ldr	x25, [x0], #16
  424e08:	str	x0, [sp, #104]
  424e0c:	str	x19, [sp, #152]
  424e10:	cbz	x25, 424e7c <nftw@plt+0x222fc>
  424e14:	add	x26, sp, #0x80
  424e18:	mov	x24, #0x0                   	// #0
  424e1c:	nop
  424e20:	add	x22, x25, x24
  424e24:	add	x0, sp, #0x78
  424e28:	ldr	x1, [sp, #104]
  424e2c:	lsr	x22, x22, #1
  424e30:	mov	x2, #0x8                   	// #8
  424e34:	add	x23, x1, x22, lsl #5
  424e38:	mov	x1, x23
  424e3c:	bl	402850 <memcmp@plt>
  424e40:	cbnz	w0, 425058 <nftw@plt+0x224d8>
  424e44:	ldrb	w0, [sp, #144]
  424e48:	cbz	w0, 425064 <nftw@plt+0x224e4>
  424e4c:	add	x1, x23, #0x8
  424e50:	mov	x0, x26
  424e54:	mov	x2, #0x10                  	// #16
  424e58:	bl	402850 <memcmp@plt>
  424e5c:	cbnz	w0, 425058 <nftw@plt+0x224d8>
  424e60:	ldrb	w0, [sp, #145]
  424e64:	cbnz	w0, 424f34 <nftw@plt+0x223b4>
  424e68:	ldrb	w0, [x23, #24]
  424e6c:	cbnz	w0, 424f34 <nftw@plt+0x223b4>
  424e70:	add	x24, x22, #0x1
  424e74:	cmp	x25, x24
  424e78:	b.hi	424e20 <nftw@plt+0x222a0>  // b.pmore
  424e7c:	ldrb	w0, [x28, #417]
  424e80:	cbz	w0, 424f5c <nftw@plt+0x223dc>
  424e84:	ldr	x22, [x28, #280]
  424e88:	cbz	x22, 424f5c <nftw@plt+0x223dc>
  424e8c:	mov	w23, #0xffffffff            	// #-1
  424e90:	b	424e9c <nftw@plt+0x2231c>
  424e94:	ldr	x22, [x22, #32]
  424e98:	cbz	x22, 424f5c <nftw@plt+0x223dc>
  424e9c:	cmp	x19, x22
  424ea0:	b.eq	424e94 <nftw@plt+0x22314>  // b.none
  424ea4:	cbnz	w27, 424eb0 <nftw@plt+0x22330>
  424ea8:	ldrb	w0, [x22, #210]
  424eac:	cbz	w0, 424e94 <nftw@plt+0x22314>
  424eb0:	ldr	w0, [x22, #204]
  424eb4:	cbnz	w0, 424e94 <nftw@plt+0x22314>
  424eb8:	ldr	x0, [x19, #160]
  424ebc:	ldr	x1, [x22, #160]
  424ec0:	cmp	x1, x0
  424ec4:	b.ne	424e94 <nftw@plt+0x22314>  // b.any
  424ec8:	ldr	x0, [x19, #120]
  424ecc:	ldr	x1, [x22, #120]
  424ed0:	cmp	x1, x0
  424ed4:	b.ne	424e94 <nftw@plt+0x22314>  // b.any
  424ed8:	ldr	x0, [x22, #40]
  424edc:	mov	x24, x22
  424ee0:	cbz	x0, 424eec <nftw@plt+0x2236c>
  424ee4:	ldrb	w0, [x22, #213]
  424ee8:	cbz	w0, 425084 <nftw@plt+0x22504>
  424eec:	mov	w2, w21
  424ef0:	mov	x1, x24
  424ef4:	mov	x0, x28
  424ef8:	bl	4240c0 <nftw@plt+0x21540>
  424efc:	tst	w0, #0xff
  424f00:	b.eq	424f14 <nftw@plt+0x22394>  // b.none
  424f04:	ldr	x0, [x19, #120]
  424f08:	ldr	x2, [x24, #120]
  424f0c:	cmp	x2, x0
  424f10:	b.eq	4250c8 <nftw@plt+0x22548>  // b.none
  424f14:	ldr	x0, [x22, #40]
  424f18:	cbz	x0, 424e94 <nftw@plt+0x22314>
  424f1c:	ldrb	w0, [x22, #213]
  424f20:	cbnz	w0, 424e94 <nftw@plt+0x22314>
  424f24:	str	xzr, [x24, #8]
  424f28:	mov	x0, x24
  424f2c:	bl	4236c8 <nftw@plt+0x20b48>
  424f30:	b	424e94 <nftw@plt+0x22314>
  424f34:	cbnz	w27, 424d84 <nftw@plt+0x22204>
  424f38:	mov	w0, #0x1                   	// #1
  424f3c:	strb	w0, [x28, #417]
  424f40:	mov	w20, #0x0                   	// #0
  424f44:	strb	w0, [x19, #210]
  424f48:	ldp	x21, x22, [sp, #32]
  424f4c:	ldp	x23, x24, [sp, #48]
  424f50:	ldp	x25, x26, [sp, #64]
  424f54:	ldp	x27, x28, [sp, #80]
  424f58:	b	424d9c <nftw@plt+0x2221c>
  424f5c:	ldr	x0, [x28]
  424f60:	cbz	x0, 425048 <nftw@plt+0x224c8>
  424f64:	ldr	x1, [x19, #64]
  424f68:	cbz	x1, 425048 <nftw@plt+0x224c8>
  424f6c:	ldrb	w21, [x1, #20]
  424f70:	ldrb	w0, [x0, #106]
  424f74:	cmp	w21, w0, uxtb
  424f78:	csel	w21, w21, w0, cs  // cs = hs, nlast
  424f7c:	ands	w21, w21, #0xff
  424f80:	cset	w2, ne  // ne = any
  424f84:	mov	w22, w21
  424f88:	ldr	w1, [x28, #1200]
  424f8c:	ldrh	w0, [x19, #208]
  424f90:	cmp	w1, w2
  424f94:	b.le	424fc0 <nftw@plt+0x22440>
  424f98:	cbnz	w0, 424fc0 <nftw@plt+0x22440>
  424f9c:	ldrb	w1, [x19, #212]
  424fa0:	cbz	w1, 424fac <nftw@plt+0x2242c>
  424fa4:	ldrb	w1, [x28, #1206]
  424fa8:	cbnz	w1, 424fc0 <nftw@plt+0x22440>
  424fac:	ldr	x1, [x19, #8]
  424fb0:	ldr	x0, [x28, #712]
  424fb4:	bl	4322b0 <nftw@plt+0x2f730>
  424fb8:	ldrh	w0, [x19, #208]
  424fbc:	nop
  424fc0:	add	w0, w0, #0x1
  424fc4:	strh	w0, [x19, #208]
  424fc8:	strb	wzr, [x19, #213]
  424fcc:	mov	w3, #0x0                   	// #0
  424fd0:	ldr	x1, [x19, #40]
  424fd4:	ldrb	w0, [x28, #1155]
  424fd8:	ldr	x2, [x19, #120]
  424fdc:	cbz	w0, 424fe8 <nftw@plt+0x22468>
  424fe0:	ldrb	w3, [x28, #1244]
  424fe4:	eor	w3, w3, #0x1
  424fe8:	mov	x0, x28
  424fec:	bl	41e468 <nftw@plt+0x1b8e8>
  424ff0:	mov	x6, x0
  424ff4:	mov	w7, #0x1                   	// #1
  424ff8:	mov	w4, w22
  424ffc:	mov	x0, x28
  425000:	mov	w3, #0x1                   	// #1
  425004:	mov	w1, #0x0                   	// #0
  425008:	strb	w21, [x6, #106]
  42500c:	ldr	x2, [x19, #8]
  425010:	ldr	x8, [x19, #48]
  425014:	str	x8, [x6, #40]
  425018:	str	x19, [x6, #80]
  42501c:	str	xzr, [x28, #424]
  425020:	strb	w7, [x28, #440]
  425024:	bl	41dac8 <nftw@plt+0x1af48>
  425028:	mov	w0, w20
  42502c:	ldp	x19, x20, [sp, #16]
  425030:	ldp	x21, x22, [sp, #32]
  425034:	ldp	x23, x24, [sp, #48]
  425038:	ldp	x25, x26, [sp, #64]
  42503c:	ldp	x27, x28, [sp, #80]
  425040:	ldp	x29, x30, [sp], #160
  425044:	ret
  425048:	mov	w22, #0x0                   	// #0
  42504c:	mov	w21, #0x0                   	// #0
  425050:	mov	w2, #0x0                   	// #0
  425054:	b	424f88 <nftw@plt+0x22408>
  425058:	tbz	w0, #31, 424e70 <nftw@plt+0x222f0>
  42505c:	mov	x25, x22
  425060:	b	424e74 <nftw@plt+0x222f4>
  425064:	ldr	x1, [sp, #152]
  425068:	mov	x2, x26
  42506c:	ldr	x0, [x1, #40]
  425070:	ldr	x1, [x1, #120]
  425074:	bl	447ac8 <nftw@plt+0x44f48>
  425078:	mov	w0, #0x1                   	// #1
  42507c:	strb	w0, [sp, #144]
  425080:	b	424e4c <nftw@plt+0x222cc>
  425084:	mov	x1, #0xd8                  	// #216
  425088:	mov	x0, #0x1                   	// #1
  42508c:	ldr	x26, [x22]
  425090:	ldr	x25, [x22, #64]
  425094:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  425098:	ldr	x1, [x28]
  42509c:	mov	x24, x0
  4250a0:	mov	x0, x26
  4250a4:	cmp	x1, #0x0
  4250a8:	cset	w1, eq  // eq = none
  4250ac:	str	x25, [x24, #64]
  4250b0:	str	w23, [x24, #200]
  4250b4:	strb	w1, [x24, #212]
  4250b8:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  4250bc:	ldr	x1, [x22, #8]
  4250c0:	stp	x0, x1, [x24]
  4250c4:	b	424eec <nftw@plt+0x2236c>
  4250c8:	ldr	x1, [x19, #40]
  4250cc:	ldr	x0, [x24, #40]
  4250d0:	bl	402850 <memcmp@plt>
  4250d4:	cbnz	w0, 424f14 <nftw@plt+0x22394>
  4250d8:	ldr	x0, [x22, #40]
  4250dc:	cbz	x0, 424d84 <nftw@plt+0x22204>
  4250e0:	ldrb	w20, [x22, #213]
  4250e4:	cbnz	w20, 424d84 <nftw@plt+0x22204>
  4250e8:	str	xzr, [x24, #8]
  4250ec:	mov	x0, x24
  4250f0:	bl	4236c8 <nftw@plt+0x20b48>
  4250f4:	ldp	x21, x22, [sp, #32]
  4250f8:	ldp	x23, x24, [sp, #48]
  4250fc:	ldp	x25, x26, [sp, #64]
  425100:	ldp	x27, x28, [sp, #80]
  425104:	b	424d9c <nftw@plt+0x2221c>
  425108:	mov	w2, #0x1                   	// #1
  42510c:	strb	w2, [x0, #417]
  425110:	strb	w2, [x1, #210]
  425114:	ret
  425118:	stp	x29, x30, [sp, #-80]!
  42511c:	cmp	w3, #0x3
  425120:	mov	x29, sp
  425124:	stp	x19, x20, [sp, #16]
  425128:	mov	w20, w3
  42512c:	mov	x19, x0
  425130:	stp	x21, x22, [sp, #32]
  425134:	mov	w21, w4
  425138:	mov	x22, x1
  42513c:	str	x23, [sp, #48]
  425140:	mov	w23, w2
  425144:	b.eq	4251d0 <nftw@plt+0x22650>  // b.none
  425148:	bl	4242e0 <nftw@plt+0x21760>
  42514c:	mov	x2, x0
  425150:	cbz	x0, 4251b8 <nftw@plt+0x22638>
  425154:	cmp	w20, #0x4
  425158:	mov	w4, w23
  42515c:	cset	w23, eq  // eq = none
  425160:	mov	x1, x22
  425164:	mov	w5, w23
  425168:	mov	w6, w21
  42516c:	mov	x0, x19
  425170:	mov	w3, #0x0                   	// #0
  425174:	bl	424440 <nftw@plt+0x218c0>
  425178:	cmp	x0, #0x0
  42517c:	mov	x22, x0
  425180:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  425184:	b.ne	4251b8 <nftw@plt+0x22638>  // b.any
  425188:	ldr	x0, [x22, #16]
  42518c:	cmp	w20, #0x2
  425190:	cset	w2, eq  // eq = none
  425194:	cbz	x0, 425234 <nftw@plt+0x226b4>
  425198:	mov	w3, w21
  42519c:	mov	x1, x22
  4251a0:	mov	x0, x19
  4251a4:	ldp	x19, x20, [sp, #16]
  4251a8:	ldp	x21, x22, [sp, #32]
  4251ac:	ldr	x23, [sp, #48]
  4251b0:	ldp	x29, x30, [sp], #80
  4251b4:	b	424ce8 <nftw@plt+0x22168>
  4251b8:	mov	w0, #0x0                   	// #0
  4251bc:	ldp	x19, x20, [sp, #16]
  4251c0:	ldp	x21, x22, [sp, #32]
  4251c4:	ldr	x23, [sp, #48]
  4251c8:	ldp	x29, x30, [sp], #80
  4251cc:	ret
  4251d0:	ldr	x1, [x19, #488]
  4251d4:	ldr	x0, [x0, #448]
  4251d8:	ldr	x1, [x1, #16]
  4251dc:	cmp	x0, x1
  4251e0:	b.eq	4251e8 <nftw@plt+0x22668>  // b.none
  4251e4:	stur	wzr, [x0, #-24]
  4251e8:	mov	w2, w23
  4251ec:	mov	x1, x22
  4251f0:	mov	x0, x19
  4251f4:	mov	w3, #0x3                   	// #3
  4251f8:	bl	4242e0 <nftw@plt+0x21760>
  4251fc:	mov	x2, x0
  425200:	cbz	x0, 4251b8 <nftw@plt+0x22638>
  425204:	mov	x1, x22
  425208:	mov	w4, w23
  42520c:	mov	w6, w21
  425210:	mov	x0, x19
  425214:	mov	w5, #0x0                   	// #0
  425218:	mov	w3, #0x0                   	// #0
  42521c:	bl	424440 <nftw@plt+0x218c0>
  425220:	mov	x22, x0
  425224:	cmp	w20, #0x2
  425228:	cset	w2, eq  // eq = none
  42522c:	ldr	x0, [x22, #16]
  425230:	cbnz	x0, 425198 <nftw@plt+0x22618>
  425234:	ldr	w0, [x22, #204]
  425238:	cbnz	w0, 425198 <nftw@plt+0x22618>
  42523c:	sub	w20, w20, #0x3
  425240:	cmp	w20, #0x1
  425244:	b.ls	425198 <nftw@plt+0x22618>  // b.plast
  425248:	ldr	x0, [x19, #40]
  42524c:	str	w2, [sp, #76]
  425250:	ldr	w1, [x0, #56]
  425254:	bl	42bde0 <nftw@plt+0x29260>
  425258:	mov	w20, w0
  42525c:	ldr	x0, [x19, #40]
  425260:	mov	w1, w21
  425264:	bl	42bde0 <nftw@plt+0x29260>
  425268:	cmp	w20, w0
  42526c:	ldr	w2, [sp, #76]
  425270:	b.le	425198 <nftw@plt+0x22618>
  425274:	ldr	x5, [x19, #40]
  425278:	mov	w3, w21
  42527c:	mov	x1, x22
  425280:	mov	x0, x19
  425284:	ldr	w4, [x5, #56]
  425288:	sub	w4, w4, #0x1
  42528c:	str	w4, [x5, #56]
  425290:	bl	424ce8 <nftw@plt+0x22168>
  425294:	ands	w0, w0, #0xff
  425298:	b.ne	4251bc <nftw@plt+0x2263c>  // b.any
  42529c:	ldr	x2, [x19, #40]
  4252a0:	ldp	x19, x20, [sp, #16]
  4252a4:	ldr	w1, [x2, #56]
  4252a8:	ldp	x21, x22, [sp, #32]
  4252ac:	add	w1, w1, #0x1
  4252b0:	str	w1, [x2, #56]
  4252b4:	ldr	x23, [sp, #48]
  4252b8:	ldp	x29, x30, [sp], #80
  4252bc:	ret
  4252c0:	stp	x29, x30, [sp, #-32]!
  4252c4:	mov	x2, x0
  4252c8:	mov	x0, x1
  4252cc:	mov	x29, sp
  4252d0:	stp	x19, x20, [sp, #16]
  4252d4:	mov	x19, x1
  4252d8:	ldr	x20, [x2, #296]
  4252dc:	bl	449330 <nftw@plt+0x467b0>
  4252e0:	mov	x1, x19
  4252e4:	mov	w2, w0
  4252e8:	mov	x0, x20
  4252ec:	bl	448ca0 <nftw@plt+0x46120>
  4252f0:	cbz	x0, 425330 <nftw@plt+0x227b0>
  4252f4:	nop
  4252f8:	ldr	x1, [x0, #8]
  4252fc:	cbz	x1, 42530c <nftw@plt+0x2278c>
  425300:	ldr	x1, [x0, #24]
  425304:	ldr	w1, [x1, #204]
  425308:	cbz	w1, 425320 <nftw@plt+0x227a0>
  42530c:	ldr	x0, [x0]
  425310:	cbnz	x0, 4252f8 <nftw@plt+0x22778>
  425314:	ldp	x19, x20, [sp, #16]
  425318:	ldp	x29, x30, [sp], #32
  42531c:	ret
  425320:	mov	w0, #0x1                   	// #1
  425324:	ldp	x19, x20, [sp, #16]
  425328:	ldp	x29, x30, [sp], #32
  42532c:	ret
  425330:	mov	w0, #0x0                   	// #0
  425334:	b	425314 <nftw@plt+0x22794>
  425338:	stp	x29, x30, [sp, #-48]!
  42533c:	mov	x29, sp
  425340:	stp	x21, x22, [sp, #32]
  425344:	mov	x21, x0
  425348:	mov	x0, x1
  42534c:	stp	x19, x20, [sp, #16]
  425350:	mov	x19, x1
  425354:	mov	w20, w2
  425358:	ldr	x22, [x21, #296]
  42535c:	bl	449330 <nftw@plt+0x467b0>
  425360:	mov	x1, x19
  425364:	mov	w2, w0
  425368:	mov	x0, x22
  42536c:	bl	448ca0 <nftw@plt+0x46120>
  425370:	mov	x19, x0
  425374:	tbnz	w20, #31, 4253bc <nftw@plt+0x2283c>
  425378:	cbz	x19, 4253a8 <nftw@plt+0x22828>
  42537c:	nop
  425380:	ldr	x1, [x19, #8]
  425384:	cbz	x1, 4253a0 <nftw@plt+0x22820>
  425388:	ldr	x1, [x19, #24]
  42538c:	ldr	w1, [x1, #204]
  425390:	cbnz	w1, 4253a0 <nftw@plt+0x22820>
  425394:	ldr	w0, [x19, #16]
  425398:	cmp	w0, w20
  42539c:	b.ls	4253d0 <nftw@plt+0x22850>  // b.plast
  4253a0:	ldr	x19, [x19]
  4253a4:	cbnz	x19, 425380 <nftw@plt+0x22800>
  4253a8:	mov	w0, #0x0                   	// #0
  4253ac:	ldp	x19, x20, [sp, #16]
  4253b0:	ldp	x21, x22, [sp, #32]
  4253b4:	ldp	x29, x30, [sp], #48
  4253b8:	ret
  4253bc:	ldr	x0, [x21, #40]
  4253c0:	mov	w1, w20
  4253c4:	bl	42b010 <nftw@plt+0x28490>
  4253c8:	mov	w20, w0
  4253cc:	b	425378 <nftw@plt+0x227f8>
  4253d0:	mov	w0, #0x1                   	// #1
  4253d4:	ldp	x19, x20, [sp, #16]
  4253d8:	ldp	x21, x22, [sp, #32]
  4253dc:	ldp	x29, x30, [sp], #48
  4253e0:	ret
  4253e4:	nop
  4253e8:	stp	x29, x30, [sp, #-64]!
  4253ec:	mov	x3, #0x0                   	// #0
  4253f0:	mov	x29, sp
  4253f4:	stp	x19, x20, [sp, #16]
  4253f8:	mov	x19, x0
  4253fc:	adrp	x20, 402000 <memcpy@plt-0x490>
  425400:	add	x20, x20, #0x910
  425404:	stp	x21, x22, [sp, #32]
  425408:	adrp	x21, 449000 <nftw@plt+0x46480>
  42540c:	adrp	x22, 423000 <nftw@plt+0x20480>
  425410:	add	x21, x21, #0xbb0
  425414:	add	x22, x22, #0x6a8
  425418:	str	x23, [sp, #48]
  42541c:	adrp	x23, 423000 <nftw@plt+0x20480>
  425420:	add	x23, x23, #0x7b0
  425424:	mov	x5, x20
  425428:	mov	x4, x21
  42542c:	mov	x1, x22
  425430:	mov	x2, x23
  425434:	mov	x0, #0x7f                  	// #127
  425438:	bl	448a70 <nftw@plt+0x45ef0>
  42543c:	str	x0, [x19, #296]
  425440:	mov	x2, x23
  425444:	mov	x1, x22
  425448:	mov	x5, x20
  42544c:	mov	x4, x21
  425450:	mov	x3, #0x0                   	// #0
  425454:	mov	x0, #0x7f                  	// #127
  425458:	bl	448a70 <nftw@plt+0x45ef0>
  42545c:	str	x0, [x19, #304]
  425460:	mov	x0, #0xff0                 	// #4080
  425464:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  425468:	mov	x6, x0
  42546c:	ldr	x7, [x19, #312]
  425470:	str	x6, [x19, #312]
  425474:	str	wzr, [x6]
  425478:	mov	x4, x21
  42547c:	str	x7, [x6, #8]
  425480:	mov	x5, x20
  425484:	mov	x3, #0x0                   	// #0
  425488:	adrp	x2, 423000 <nftw@plt+0x20480>
  42548c:	adrp	x1, 449000 <nftw@plt+0x46480>
  425490:	add	x2, x2, #0x790
  425494:	add	x1, x1, #0x330
  425498:	mov	x0, #0x7f                  	// #127
  42549c:	bl	448a70 <nftw@plt+0x45ef0>
  4254a0:	ldp	x21, x22, [sp, #32]
  4254a4:	mov	x4, x20
  4254a8:	ldr	x23, [sp, #48]
  4254ac:	str	x0, [x19, #320]
  4254b0:	add	x0, x19, #0x148
  4254b4:	adrp	x3, 449000 <nftw@plt+0x46480>
  4254b8:	ldp	x19, x20, [sp, #16]
  4254bc:	add	x3, x3, #0xb78
  4254c0:	ldp	x29, x30, [sp], #64
  4254c4:	mov	x2, #0x0                   	// #0
  4254c8:	mov	x1, #0x0                   	// #0
  4254cc:	b	449840 <_obstack_begin@@Base>
  4254d0:	stp	x29, x30, [sp, #-32]!
  4254d4:	mov	x29, sp
  4254d8:	stp	x19, x20, [sp, #16]
  4254dc:	mov	x20, x0
  4254e0:	ldr	x0, [x0, #296]
  4254e4:	bl	448ac8 <nftw@plt+0x45f48>
  4254e8:	ldr	x0, [x20, #304]
  4254ec:	bl	448ac8 <nftw@plt+0x45f48>
  4254f0:	ldr	x0, [x20, #320]
  4254f4:	bl	448ac8 <nftw@plt+0x45f48>
  4254f8:	add	x0, x20, #0x148
  4254fc:	mov	x1, #0x0                   	// #0
  425500:	bl	4499d0 <_obstack_free@@Base>
  425504:	ldr	x19, [x20, #312]
  425508:	cbz	x19, 425520 <nftw@plt+0x229a0>
  42550c:	nop
  425510:	mov	x0, x19
  425514:	ldr	x19, [x19, #8]
  425518:	bl	402910 <free@plt>
  42551c:	cbnz	x19, 425510 <nftw@plt+0x22990>
  425520:	ldr	x19, [x20, #280]
  425524:	cbz	x19, 425538 <nftw@plt+0x229b8>
  425528:	mov	x0, x19
  42552c:	ldr	x19, [x19, #32]
  425530:	bl	4236c8 <nftw@plt+0x20b48>
  425534:	cbnz	x19, 425528 <nftw@plt+0x229a8>
  425538:	ldp	x19, x20, [sp, #16]
  42553c:	ldp	x29, x30, [sp], #32
  425540:	ret
  425544:	nop
  425548:	stp	x29, x30, [sp, #-32]!
  42554c:	mov	x29, sp
  425550:	str	x19, [sp, #16]
  425554:	mov	x19, x0
  425558:	bl	4254d0 <nftw@plt+0x22950>
  42555c:	mov	x0, x19
  425560:	str	xzr, [x19, #280]
  425564:	str	xzr, [x19, #312]
  425568:	ldr	x19, [sp, #16]
  42556c:	ldp	x29, x30, [sp], #32
  425570:	b	4253e8 <nftw@plt+0x22868>
  425574:	nop
  425578:	ldr	x2, [x0]
  42557c:	mov	w6, #0x0                   	// #0
  425580:	mov	w5, #0x0                   	// #0
  425584:	mov	w4, #0x0                   	// #0
  425588:	mov	w3, #0x1                   	// #1
  42558c:	ldr	x2, [x2, #80]
  425590:	ldr	x2, [x2, #64]
  425594:	b	424440 <nftw@plt+0x218c0>
  425598:	ldr	x6, [x0, #40]
  42559c:	mov	w3, #0x18                  	// #24
  4255a0:	ldr	w5, [x6, #12]
  4255a4:	ldr	x8, [x6]
  4255a8:	sub	w5, w5, #0x1
  4255ac:	smull	x5, w5, w3
  4255b0:	add	x7, x8, x5
  4255b4:	cbz	w1, 4255c8 <nftw@plt+0x22a48>
  4255b8:	cbz	w2, 425600 <nftw@plt+0x22a80>
  4255bc:	mov	w4, #0x2                   	// #2
  4255c0:	mov	w3, w4
  4255c4:	b	4255d0 <nftw@plt+0x22a50>
  4255c8:	mov	w4, #0x0                   	// #0
  4255cc:	mov	w3, #0x0                   	// #0
  4255d0:	ldr	x2, [x0]
  4255d4:	mov	w1, #0x2                   	// #2
  4255d8:	strb	w3, [x2, #106]
  4255dc:	ldrb	w3, [x7, #6]
  4255e0:	ldr	w8, [x8, x5]
  4255e4:	ldr	w5, [x6, #60]
  4255e8:	ldr	x2, [x7, #8]
  4255ec:	sub	w5, w5, w8
  4255f0:	ldr	w7, [x7, #16]
  4255f4:	lsr	w3, w5, w3
  4255f8:	add	w3, w3, w7
  4255fc:	b	41dac8 <nftw@plt+0x1af48>
  425600:	mov	w4, #0x1                   	// #1
  425604:	mov	w3, w4
  425608:	b	4255d0 <nftw@plt+0x22a50>
  42560c:	nop
  425610:	mov	w4, #0x0                   	// #0
  425614:	mov	w3, #0x1                   	// #1
  425618:	b	41dac8 <nftw@plt+0x1af48>
  42561c:	nop
  425620:	stp	x29, x30, [sp, #-64]!
  425624:	mov	x29, sp
  425628:	stp	x19, x20, [sp, #16]
  42562c:	mov	x19, x0
  425630:	ldr	x0, [x0, #296]
  425634:	str	xzr, [sp, #48]
  425638:	bl	448898 <nftw@plt+0x45d18>
  42563c:	mov	x3, x0
  425640:	ldr	x0, [x19, #296]
  425644:	add	x2, sp, #0x30
  425648:	adrp	x1, 423000 <nftw@plt+0x20480>
  42564c:	add	x1, x1, #0x700
  425650:	str	x3, [sp, #56]
  425654:	bl	449280 <nftw@plt+0x46700>
  425658:	ldr	x0, [sp, #48]
  42565c:	cbz	x0, 4256f8 <nftw@plt+0x22b78>
  425660:	ldr	x1, [sp, #56]
  425664:	adrp	x3, 423000 <nftw@plt+0x20480>
  425668:	add	x3, x3, #0xa50
  42566c:	mov	x2, #0x8                   	// #8
  425670:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x425a0>
  425674:	bl	4025f0 <qsort@plt>
  425678:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42567c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425680:	add	x1, x1, #0xf20
  425684:	add	x0, x0, #0x390
  425688:	bl	402900 <dgettext@plt>
  42568c:	ldr	x1, [x20, #1392]
  425690:	bl	402a50 <fputs_unlocked@plt>
  425694:	ldr	x0, [sp, #56]
  425698:	cbz	x0, 4256f0 <nftw@plt+0x22b70>
  42569c:	add	x20, x20, #0x570
  4256a0:	mov	x19, #0x0                   	// #0
  4256a4:	str	x21, [sp, #32]
  4256a8:	mov	w21, #0xa                   	// #10
  4256ac:	nop
  4256b0:	ldr	x0, [sp, #48]
  4256b4:	ldr	x1, [x20]
  4256b8:	ldr	x0, [x0, x19, lsl #3]
  4256bc:	bl	402a50 <fputs_unlocked@plt>
  4256c0:	ldr	x0, [x20]
  4256c4:	ldp	x1, x2, [x0, #40]
  4256c8:	add	x3, x1, #0x1
  4256cc:	cmp	x1, x2
  4256d0:	b.cs	425704 <nftw@plt+0x22b84>  // b.hs, b.nlast
  4256d4:	str	x3, [x0, #40]
  4256d8:	strb	w21, [x1]
  4256dc:	ldr	x0, [sp, #56]
  4256e0:	add	x19, x19, #0x1
  4256e4:	cmp	x0, x19
  4256e8:	b.hi	4256b0 <nftw@plt+0x22b30>  // b.pmore
  4256ec:	ldr	x21, [sp, #32]
  4256f0:	ldr	x0, [sp, #48]
  4256f4:	bl	402910 <free@plt>
  4256f8:	ldp	x19, x20, [sp, #16]
  4256fc:	ldp	x29, x30, [sp], #64
  425700:	ret
  425704:	mov	w1, #0xa                   	// #10
  425708:	bl	402800 <__overflow@plt>
  42570c:	b	4256dc <nftw@plt+0x22b5c>
  425710:	stp	x29, x30, [sp, #-48]!
  425714:	mov	w3, #0x0                   	// #0
  425718:	mov	x29, sp
  42571c:	stp	x19, x20, [sp, #16]
  425720:	mov	x19, x0
  425724:	mov	x20, x1
  425728:	str	x21, [sp, #32]
  42572c:	mov	w21, w2
  425730:	bl	4242e0 <nftw@plt+0x21760>
  425734:	cbz	x0, 4257a4 <nftw@plt+0x22c24>
  425738:	mov	x2, x0
  42573c:	mov	x1, x20
  425740:	mov	w4, w21
  425744:	mov	x0, x19
  425748:	mov	w6, #0x0                   	// #0
  42574c:	mov	w5, #0x0                   	// #0
  425750:	mov	w3, #0x0                   	// #0
  425754:	bl	424440 <nftw@plt+0x218c0>
  425758:	mov	x20, x0
  42575c:	ldr	w0, [x0, #204]
  425760:	cbnz	w0, 4257a4 <nftw@plt+0x22c24>
  425764:	ldr	w0, [x20, #200]
  425768:	cmn	w0, #0x1
  42576c:	b.eq	42577c <nftw@plt+0x22bfc>  // b.none
  425770:	bl	4027a0 <close@plt>
  425774:	mov	w0, #0xffffffff            	// #-1
  425778:	str	w0, [x20, #200]
  42577c:	ldr	x0, [x19]
  425780:	ldr	x1, [x20, #160]
  425784:	ldr	x0, [x0, #80]
  425788:	ldp	x19, x20, [sp, #16]
  42578c:	ldr	x0, [x0, #160]
  425790:	ldr	x21, [sp, #32]
  425794:	cmp	x1, x0
  425798:	cset	w0, gt
  42579c:	ldp	x29, x30, [sp], #48
  4257a0:	ret
  4257a4:	mov	w0, #0xffffffff            	// #-1
  4257a8:	ldp	x19, x20, [sp, #16]
  4257ac:	ldr	x21, [sp, #32]
  4257b0:	ldp	x29, x30, [sp], #48
  4257b4:	ret
  4257b8:	mov	w4, #0x0                   	// #0
  4257bc:	mov	w3, #0x3                   	// #3
  4257c0:	mov	w2, #0x0                   	// #0
  4257c4:	b	425118 <nftw@plt+0x22598>
  4257c8:	mov	w4, #0x0                   	// #0
  4257cc:	mov	w3, #0x4                   	// #4
  4257d0:	mov	w2, #0x1                   	// #1
  4257d4:	b	425118 <nftw@plt+0x22598>
  4257d8:	mov	x3, x0
  4257dc:	mov	x0, x2
  4257e0:	ldrb	w2, [x3, #440]
  4257e4:	cbz	w2, 4257f0 <nftw@plt+0x22c70>
  4257e8:	ldr	x2, [x1, #56]
  4257ec:	cbz	x2, 425818 <nftw@plt+0x22c98>
  4257f0:	strb	wzr, [x3, #440]
  4257f4:	cbz	x0, 425814 <nftw@plt+0x22c94>
  4257f8:	ldr	x2, [x1, #48]
  4257fc:	cmp	x2, x0
  425800:	b.eq	425808 <nftw@plt+0x22c88>  // b.none
  425804:	b	402910 <free@plt>
  425808:	stp	xzr, xzr, [x1, #40]
  42580c:	strb	wzr, [x1, #213]
  425810:	b	402910 <free@plt>
  425814:	ret
  425818:	ldr	x2, [x3, #424]
  42581c:	str	x2, [x1, #56]
  425820:	b	4257f0 <nftw@plt+0x22c70>
  425824:	nop
  425828:	ldr	x0, [x0]
  42582c:	ret
  425830:	add	x0, x0, #0x48
  425834:	ret
  425838:	stp	x29, x30, [sp, #-48]!
  42583c:	cmp	w3, #0x0
  425840:	mov	x29, sp
  425844:	str	x21, [sp, #32]
  425848:	mov	x21, x0
  42584c:	cset	w0, ne  // ne = any
  425850:	stp	x1, x1, [x21, #200]
  425854:	strb	w0, [x21, #416]
  425858:	cbz	x1, 42589c <nftw@plt+0x22d1c>
  42585c:	stp	x19, x20, [sp, #16]
  425860:	mov	x19, x1
  425864:	mov	x20, x2
  425868:	b	425874 <nftw@plt+0x22cf4>
  42586c:	ldr	x19, [x19]
  425870:	cbz	x19, 425898 <nftw@plt+0x22d18>
  425874:	ldr	x0, [x19, #8]
  425878:	str	xzr, [x19, #32]
  42587c:	bl	4024f0 <strlen@plt>
  425880:	str	w0, [x19, #16]
  425884:	cmp	x20, x19
  425888:	b.ne	42586c <nftw@plt+0x22cec>  // b.any
  42588c:	ldr	x19, [x19]
  425890:	str	x20, [x21, #208]
  425894:	cbnz	x19, 425874 <nftw@plt+0x22cf4>
  425898:	ldp	x19, x20, [sp, #16]
  42589c:	ldr	x21, [sp, #32]
  4258a0:	ldp	x29, x30, [sp], #48
  4258a4:	ret
  4258a8:	ldr	x0, [x0, #8]
  4258ac:	ret
  4258b0:	ldr	x0, [x0, #64]
  4258b4:	ret
  4258b8:	ldr	x0, [x0]
  4258bc:	ret
  4258c0:	ldr	x0, [x0, #80]
  4258c4:	ret
  4258c8:	ldr	x0, [x0, #72]
  4258cc:	ret
  4258d0:	stp	x29, x30, [sp, #-80]!
  4258d4:	mov	x29, sp
  4258d8:	ldr	x2, [x0, #280]
  4258dc:	stp	x19, x20, [sp, #16]
  4258e0:	stp	x21, x22, [sp, #32]
  4258e4:	mov	x22, x0
  4258e8:	stp	x23, x24, [sp, #48]
  4258ec:	mov	x23, x1
  4258f0:	stp	x25, x26, [sp, #64]
  4258f4:	cbz	x2, 425a8c <nftw@plt+0x22f0c>
  4258f8:	mov	x3, #0x0                   	// #0
  4258fc:	nop
  425900:	ldr	x2, [x2, #32]
  425904:	mov	x0, x3
  425908:	add	x3, x3, #0x1
  42590c:	cbnz	x2, 425900 <nftw@plt+0x22d80>
  425910:	lsl	x0, x0, #5
  425914:	add	x1, x0, #0x30
  425918:	mov	x0, #0x1                   	// #1
  42591c:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  425920:	ldr	x19, [x22, #280]
  425924:	str	xzr, [x0]
  425928:	strb	wzr, [x0, #8]
  42592c:	mov	x20, x0
  425930:	cbz	x19, 425a94 <nftw@plt+0x22f14>
  425934:	adrp	x24, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425938:	mov	x1, #0x0                   	// #0
  42593c:	add	x24, x24, #0xf50
  425940:	b	425970 <nftw@plt+0x22df0>
  425944:	ldr	x0, [x19, #40]
  425948:	add	x2, x21, #0x18
  42594c:	ldr	x1, [x19, #120]
  425950:	add	x2, x20, x2
  425954:	bl	447ac8 <nftw@plt+0x44f48>
  425958:	add	x21, x20, x21
  42595c:	ldr	x0, [x19, #120]
  425960:	str	x0, [x21, #16]
  425964:	ldr	x1, [x20]
  425968:	ldr	x19, [x19, #32]
  42596c:	cbz	x19, 4259f8 <nftw@plt+0x22e78>
  425970:	ldrb	w2, [x19, #211]
  425974:	cbnz	w2, 425968 <nftw@plt+0x22de8>
  425978:	ldr	w0, [x19, #204]
  42597c:	add	x2, x1, #0x1
  425980:	add	x3, x20, x2, lsl #5
  425984:	cbnz	w0, 425968 <nftw@plt+0x22de8>
  425988:	ldrh	w0, [x19, #208]
  42598c:	cbz	w0, 425968 <nftw@plt+0x22de8>
  425990:	ldrb	w4, [x19, #210]
  425994:	lsl	x21, x1, #5
  425998:	str	x2, [x20]
  42599c:	mov	x0, x19
  4259a0:	strb	w4, [x3, #8]
  4259a4:	ldrb	w2, [x20, #8]
  4259a8:	ldrb	w3, [x19, #210]
  4259ac:	orr	w2, w2, w3
  4259b0:	strb	w2, [x20, #8]
  4259b4:	ldrb	w2, [x19, #213]
  4259b8:	cbnz	w2, 425944 <nftw@plt+0x22dc4>
  4259bc:	ldr	w26, [x19, #200]
  4259c0:	bl	423a60 <nftw@plt+0x20ee0>
  4259c4:	mov	x1, x24
  4259c8:	ands	w25, w0, #0xff
  4259cc:	b.eq	425a54 <nftw@plt+0x22ed4>  // b.none
  4259d0:	ldr	w0, [x19, #200]
  4259d4:	bl	4484f0 <nftw@plt+0x45970>
  4259d8:	mov	x25, x0
  4259dc:	add	x1, x21, #0x18
  4259e0:	add	x1, x20, x1
  4259e4:	bl	447b28 <nftw@plt+0x44fa8>
  4259e8:	mov	x0, x25
  4259ec:	bl	402620 <fclose@plt>
  4259f0:	str	w26, [x19, #200]
  4259f4:	b	425958 <nftw@plt+0x22dd8>
  4259f8:	lsl	x19, x1, #5
  4259fc:	add	x19, x19, #0x10
  425a00:	add	x0, x20, #0x10
  425a04:	mov	x2, #0x20                  	// #32
  425a08:	adrp	x3, 423000 <nftw@plt+0x20480>
  425a0c:	add	x3, x3, #0xdb0
  425a10:	bl	4025f0 <qsort@plt>
  425a14:	mov	x3, x23
  425a18:	mov	x1, x19
  425a1c:	mov	x2, #0x1                   	// #1
  425a20:	mov	x0, x20
  425a24:	bl	4024d0 <fwrite_unlocked@plt>
  425a28:	cmp	x0, #0x1
  425a2c:	cset	w25, eq  // eq = none
  425a30:	mov	x0, x20
  425a34:	bl	402910 <free@plt>
  425a38:	mov	w0, w25
  425a3c:	ldp	x19, x20, [sp, #16]
  425a40:	ldp	x21, x22, [sp, #32]
  425a44:	ldp	x23, x24, [sp, #48]
  425a48:	ldp	x25, x26, [sp, #64]
  425a4c:	ldp	x29, x30, [sp], #80
  425a50:	ret
  425a54:	mov	x1, x19
  425a58:	mov	w3, #0x0                   	// #0
  425a5c:	mov	w2, #0x0                   	// #0
  425a60:	mov	x0, x22
  425a64:	bl	423c88 <nftw@plt+0x21108>
  425a68:	mov	x0, x20
  425a6c:	bl	402910 <free@plt>
  425a70:	mov	w0, w25
  425a74:	ldp	x19, x20, [sp, #16]
  425a78:	ldp	x21, x22, [sp, #32]
  425a7c:	ldp	x23, x24, [sp, #48]
  425a80:	ldp	x25, x26, [sp, #64]
  425a84:	ldp	x29, x30, [sp], #80
  425a88:	ret
  425a8c:	mov	x1, #0x10                  	// #16
  425a90:	b	425918 <nftw@plt+0x22d98>
  425a94:	mov	x19, #0x10                  	// #16
  425a98:	mov	x1, #0x0                   	// #0
  425a9c:	b	425a00 <nftw@plt+0x22e80>
  425aa0:	stp	x29, x30, [sp, #-80]!
  425aa4:	mov	x2, #0x1                   	// #1
  425aa8:	mov	x29, sp
  425aac:	str	x19, [sp, #16]
  425ab0:	mov	x19, x1
  425ab4:	add	x0, sp, #0x20
  425ab8:	mov	x3, x19
  425abc:	mov	x1, #0x10                  	// #16
  425ac0:	bl	402840 <fread_unlocked@plt>
  425ac4:	cmp	x0, #0x1
  425ac8:	b.eq	425adc <nftw@plt+0x22f5c>  // b.none
  425acc:	mov	w0, #0x0                   	// #0
  425ad0:	ldr	x19, [sp, #16]
  425ad4:	ldp	x29, x30, [sp], #80
  425ad8:	ret
  425adc:	ldr	x0, [sp, #32]
  425ae0:	lsl	x0, x0, #5
  425ae4:	add	x0, x0, #0x10
  425ae8:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  425aec:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  425af0:	mov	x3, x19
  425af4:	ldp	x4, x5, [sp, #32]
  425af8:	str	x0, [x2, #2400]
  425afc:	ldr	x2, [sp, #32]
  425b00:	stp	x4, x5, [x0], #16
  425b04:	mov	x1, #0x20                  	// #32
  425b08:	bl	402840 <fread_unlocked@plt>
  425b0c:	ldr	x1, [sp, #32]
  425b10:	ldr	x19, [sp, #16]
  425b14:	cmp	x1, x0
  425b18:	cset	w0, eq  // eq = none
  425b1c:	ldp	x29, x30, [sp], #80
  425b20:	ret
  425b24:	nop
  425b28:	stp	x29, x30, [sp, #-48]!
  425b2c:	mov	x29, sp
  425b30:	stp	x19, x20, [sp, #16]
  425b34:	mov	x19, x0
  425b38:	mov	x20, x1
  425b3c:	str	x21, [sp, #32]
  425b40:	mov	w21, w2
  425b44:	bl	4242e0 <nftw@plt+0x21760>
  425b48:	mov	x2, x0
  425b4c:	mov	w4, w21
  425b50:	mov	x1, x20
  425b54:	mov	x0, x19
  425b58:	mov	w6, #0x0                   	// #0
  425b5c:	mov	w5, #0x0                   	// #0
  425b60:	mov	w3, #0x0                   	// #0
  425b64:	bl	424440 <nftw@plt+0x218c0>
  425b68:	ldr	w0, [x0, #204]
  425b6c:	ldp	x19, x20, [sp, #16]
  425b70:	cmp	w0, #0x2
  425b74:	cset	w0, ne  // ne = any
  425b78:	ldr	x21, [sp, #32]
  425b7c:	ldp	x29, x30, [sp], #48
  425b80:	ret
  425b84:	nop
  425b88:	stp	x29, x30, [sp, #-32]!
  425b8c:	mov	x29, sp
  425b90:	str	x19, [sp, #16]
  425b94:	ldr	x19, [x0, #120]
  425b98:	add	x19, x19, #0x2d0
  425b9c:	ldp	x0, x4, [x19, #24]
  425ba0:	sub	x1, x4, x0
  425ba4:	cmp	x1, #0x1f
  425ba8:	b.ls	425c00 <nftw@plt+0x23080>  // b.plast
  425bac:	add	x1, x0, #0x20
  425bb0:	ldr	x0, [x19, #16]
  425bb4:	cmp	x1, x0
  425bb8:	b.eq	425c20 <nftw@plt+0x230a0>  // b.none
  425bbc:	ldr	x2, [x19, #48]
  425bc0:	ldr	x3, [x19, #8]
  425bc4:	add	x1, x1, x2
  425bc8:	bic	x1, x1, x2
  425bcc:	str	x1, [x19, #24]
  425bd0:	sub	x2, x1, x3
  425bd4:	sub	x3, x4, x3
  425bd8:	cmp	x2, x3
  425bdc:	b.ls	425be8 <nftw@plt+0x23068>  // b.plast
  425be0:	mov	x1, x4
  425be4:	str	x4, [x19, #24]
  425be8:	str	x1, [x19, #16]
  425bec:	stp	xzr, xzr, [x0]
  425bf0:	stp	xzr, xzr, [x0, #16]
  425bf4:	ldr	x19, [sp, #16]
  425bf8:	ldp	x29, x30, [sp], #32
  425bfc:	ret
  425c00:	mov	x0, x19
  425c04:	mov	x1, #0x20                  	// #32
  425c08:	bl	449870 <_obstack_newchunk@@Base>
  425c0c:	ldp	x0, x4, [x19, #24]
  425c10:	add	x1, x0, #0x20
  425c14:	ldr	x0, [x19, #16]
  425c18:	cmp	x1, x0
  425c1c:	b.ne	425bbc <nftw@plt+0x2303c>  // b.any
  425c20:	ldrb	w2, [x19, #80]
  425c24:	orr	w2, w2, #0x2
  425c28:	strb	w2, [x19, #80]
  425c2c:	b	425bbc <nftw@plt+0x2303c>
  425c30:	stp	x29, x30, [sp, #-32]!
  425c34:	mov	x29, sp
  425c38:	stp	x19, x20, [sp, #16]
  425c3c:	mov	x19, x0
  425c40:	mov	x20, x1
  425c44:	cbz	x1, 425d58 <nftw@plt+0x231d8>
  425c48:	str	x19, [x20, #120]
  425c4c:	mov	x0, x19
  425c50:	str	x20, [x19, #1088]
  425c54:	bl	41f018 <nftw@plt+0x1c498>
  425c58:	mov	x0, x19
  425c5c:	bl	41e178 <nftw@plt+0x1b5f8>
  425c60:	ldr	x0, [x19, #1088]
  425c64:	mov	w3, #0x1                   	// #1
  425c68:	mov	x2, #0x7                   	// #7
  425c6c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425c70:	add	x1, x1, #0xf58
  425c74:	bl	432e18 <nftw@plt+0x30298>
  425c78:	mov	x1, x0
  425c7c:	ldr	x0, [x19, #1088]
  425c80:	str	x1, [x19, #1248]
  425c84:	mov	w3, #0x1                   	// #1
  425c88:	mov	x2, #0x4                   	// #4
  425c8c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425c90:	add	x1, x1, #0xf60
  425c94:	bl	432e18 <nftw@plt+0x30298>
  425c98:	mov	x1, x0
  425c9c:	ldr	x0, [x19, #1088]
  425ca0:	str	x1, [x19, #1256]
  425ca4:	mov	w3, #0x1                   	// #1
  425ca8:	mov	x2, #0x5                   	// #5
  425cac:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425cb0:	add	x1, x1, #0xf68
  425cb4:	bl	432e18 <nftw@plt+0x30298>
  425cb8:	mov	x1, x0
  425cbc:	ldr	x0, [x19, #1088]
  425cc0:	str	x1, [x19, #1264]
  425cc4:	mov	w3, #0x1                   	// #1
  425cc8:	mov	x2, #0xb                   	// #11
  425ccc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425cd0:	add	x1, x1, #0xf70
  425cd4:	bl	432e18 <nftw@plt+0x30298>
  425cd8:	str	x0, [x19, #1272]
  425cdc:	mov	w3, #0x1                   	// #1
  425ce0:	mov	x2, #0xa                   	// #10
  425ce4:	ldrh	w4, [x0, #18]
  425ce8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425cec:	add	x1, x1, #0xf80
  425cf0:	orr	w4, w4, #0x10
  425cf4:	strh	w4, [x0, #18]
  425cf8:	ldr	x0, [x19, #1088]
  425cfc:	bl	432e18 <nftw@plt+0x30298>
  425d00:	str	x0, [x19, #1280]
  425d04:	mov	w3, #0x1                   	// #1
  425d08:	mov	x2, #0xf                   	// #15
  425d0c:	ldrh	w4, [x0, #18]
  425d10:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425d14:	add	x1, x1, #0xf90
  425d18:	orr	w4, w4, #0x10
  425d1c:	strh	w4, [x0, #18]
  425d20:	ldr	x0, [x19, #1088]
  425d24:	bl	432e18 <nftw@plt+0x30298>
  425d28:	mov	x1, x0
  425d2c:	ldr	x0, [x19, #1088]
  425d30:	str	x1, [x19, #1288]
  425d34:	mov	w3, #0x1                   	// #1
  425d38:	mov	x2, #0x14                  	// #20
  425d3c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  425d40:	add	x1, x1, #0xfa0
  425d44:	bl	432e18 <nftw@plt+0x30298>
  425d48:	str	x0, [x19, #1296]
  425d4c:	ldp	x19, x20, [sp, #16]
  425d50:	ldp	x29, x30, [sp], #32
  425d54:	ret
  425d58:	mov	w0, #0x1                   	// #1
  425d5c:	strb	w0, [x19, #1304]
  425d60:	mov	w0, #0xd                   	// #13
  425d64:	bl	4329f8 <nftw@plt+0x2fe78>
  425d68:	mov	x20, x0
  425d6c:	adrp	x0, 425000 <nftw@plt+0x22480>
  425d70:	add	x0, x0, #0xb88
  425d74:	adrp	x4, 402000 <memcpy@plt-0x490>
  425d78:	adrp	x3, 449000 <nftw@plt+0x46480>
  425d7c:	str	x0, [x20, #96]
  425d80:	add	x4, x4, #0x910
  425d84:	add	x3, x3, #0xb78
  425d88:	add	x0, x19, #0x2d0
  425d8c:	mov	x2, #0x0                   	// #0
  425d90:	mov	x1, #0x0                   	// #0
  425d94:	bl	449840 <_obstack_begin@@Base>
  425d98:	b	425c48 <nftw@plt+0x230c8>
  425d9c:	nop
  425da0:	stp	x29, x30, [sp, #-32]!
  425da4:	mov	x29, sp
  425da8:	str	x19, [sp, #16]
  425dac:	mov	x19, x0
  425db0:	ldrb	w0, [x0, #1304]
  425db4:	cbnz	w0, 425dc4 <nftw@plt+0x23244>
  425db8:	ldr	x19, [sp, #16]
  425dbc:	ldp	x29, x30, [sp], #32
  425dc0:	ret
  425dc4:	ldr	x0, [x19, #1088]
  425dc8:	bl	432a78 <nftw@plt+0x2fef8>
  425dcc:	add	x0, x19, #0x2d0
  425dd0:	mov	x1, #0x0                   	// #0
  425dd4:	ldr	x19, [sp, #16]
  425dd8:	ldp	x29, x30, [sp], #32
  425ddc:	b	4499d0 <_obstack_free@@Base>
  425de0:	ldr	x0, [x0, #1088]
  425de4:	mov	w2, w2
  425de8:	mov	w3, #0x1                   	// #1
  425dec:	b	432e18 <nftw@plt+0x30298>
  425df0:	stp	x29, x30, [sp, #-16]!
  425df4:	sxtw	x2, w2
  425df8:	mov	w3, #0x0                   	// #0
  425dfc:	mov	x29, sp
  425e00:	ldr	x0, [x0, #1088]
  425e04:	bl	432e18 <nftw@plt+0x30298>
  425e08:	cbz	x0, 425e1c <nftw@plt+0x2329c>
  425e0c:	ldrb	w0, [x0, #18]
  425e10:	ldp	x29, x30, [sp], #16
  425e14:	ubfx	x0, x0, #1, #1
  425e18:	ret
  425e1c:	mov	w0, #0x0                   	// #0
  425e20:	ldp	x29, x30, [sp], #16
  425e24:	ret
  425e28:	ldr	x0, [x0, #1088]
  425e2c:	b	432e60 <nftw@plt+0x302e0>
  425e30:	stp	x29, x30, [sp, #-48]!
  425e34:	mov	x29, sp
  425e38:	ldr	w3, [x0, #60]
  425e3c:	stp	x19, x20, [sp, #16]
  425e40:	mov	x19, x0
  425e44:	mov	w20, w2
  425e48:	str	x21, [sp, #32]
  425e4c:	mov	x21, x1
  425e50:	ldr	w1, [x0, #64]
  425e54:	ldr	x0, [x0, #48]
  425e58:	cmp	w3, w1
  425e5c:	b.eq	425e88 <nftw@plt+0x23308>  // b.none
  425e60:	ubfiz	x1, x3, #4, #32
  425e64:	add	w3, w3, #0x1
  425e68:	add	x2, x0, x1
  425e6c:	str	x21, [x0, x1]
  425e70:	ldr	x21, [sp, #32]
  425e74:	str	w20, [x2, #8]
  425e78:	str	w3, [x19, #60]
  425e7c:	ldp	x19, x20, [sp, #16]
  425e80:	ldp	x29, x30, [sp], #48
  425e84:	ret
  425e88:	add	w3, w3, #0x64
  425e8c:	lsl	w3, w3, #1
  425e90:	str	w3, [x19, #64]
  425e94:	lsl	x1, x3, #4
  425e98:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  425e9c:	str	x0, [x19, #48]
  425ea0:	ldr	w3, [x19, #60]
  425ea4:	b	425e60 <nftw@plt+0x232e0>
  425ea8:	stp	x29, x30, [sp, #-32]!
  425eac:	mov	x29, sp
  425eb0:	stp	x19, x20, [sp, #16]
  425eb4:	mov	x19, x0
  425eb8:	ldr	x0, [x0]
  425ebc:	cbz	x0, 425ecc <nftw@plt+0x2334c>
  425ec0:	ldp	x19, x20, [sp, #16]
  425ec4:	ldp	x29, x30, [sp], #32
  425ec8:	ret
  425ecc:	mov	x0, #0x20                  	// #32
  425ed0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  425ed4:	mov	x20, x0
  425ed8:	str	x20, [x19]
  425edc:	mov	x0, #0x1770                	// #6000
  425ee0:	str	x19, [x20, #8]
  425ee4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  425ee8:	mov	x1, x0
  425eec:	mov	x0, #0x1770                	// #6000
  425ef0:	add	x2, x1, x0
  425ef4:	str	xzr, [x20]
  425ef8:	stp	x1, x2, [x20, #16]
  425efc:	ldr	x0, [x19]
  425f00:	ldp	x19, x20, [sp, #16]
  425f04:	ldp	x29, x30, [sp], #32
  425f08:	ret
  425f0c:	nop
  425f10:	stp	x29, x30, [sp, #-48]!
  425f14:	mov	x4, x2
  425f18:	mov	x29, sp
  425f1c:	stp	x19, x20, [sp, #16]
  425f20:	ldr	x20, [x0]
  425f24:	ldr	x3, [x20]
  425f28:	ldrb	w2, [x3]
  425f2c:	cmp	w2, #0x24
  425f30:	b.eq	425f5c <nftw@plt+0x233dc>  // b.none
  425f34:	ldrb	w5, [x0, #1147]
  425f38:	cmp	w5, #0x0
  425f3c:	cset	w19, ne  // ne = any
  425f40:	cmp	w2, #0x5c
  425f44:	csel	w19, w19, wzr, eq  // eq = none
  425f48:	cbnz	w19, 425f9c <nftw@plt+0x2341c>
  425f4c:	mov	w0, w19
  425f50:	ldp	x19, x20, [sp, #16]
  425f54:	ldp	x29, x30, [sp], #48
  425f58:	ret
  425f5c:	ldrb	w1, [x0, #1146]
  425f60:	mov	w19, #0x0                   	// #0
  425f64:	cbz	w1, 425f4c <nftw@plt+0x233cc>
  425f68:	add	x3, x3, #0x1
  425f6c:	str	x3, [x20]
  425f70:	mov	w19, #0x1                   	// #1
  425f74:	ldrb	w1, [x0, #1148]
  425f78:	cbz	w1, 425f4c <nftw@plt+0x233cc>
  425f7c:	ldrb	w1, [x0, #18]
  425f80:	cbnz	w1, 425f4c <nftw@plt+0x233cc>
  425f84:	strb	wzr, [x0, #1148]
  425f88:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x135a0>
  425f8c:	mov	w1, #0x2                   	// #2
  425f90:	add	x2, x2, #0x720
  425f94:	bl	41f298 <nftw@plt+0x1c718>
  425f98:	b	425f4c <nftw@plt+0x233cc>
  425f9c:	ldrb	w2, [x3, #1]
  425fa0:	mov	w19, #0x0                   	// #0
  425fa4:	and	w2, w2, #0xffffffdf
  425fa8:	and	w2, w2, #0xff
  425fac:	cmp	w2, #0x55
  425fb0:	b.ne	425f4c <nftw@plt+0x233cc>  // b.any
  425fb4:	ldr	x2, [x20, #32]
  425fb8:	add	x3, x3, #0x2
  425fbc:	str	x3, [x20]
  425fc0:	add	x5, sp, #0x2c
  425fc4:	mov	x7, #0x0                   	// #0
  425fc8:	mov	x6, #0x0                   	// #0
  425fcc:	mov	w3, #0x2                   	// #2
  425fd0:	sub	w3, w3, w1
  425fd4:	mov	x1, x20
  425fd8:	bl	418120 <nftw@plt+0x155a0>
  425fdc:	ands	w19, w0, #0xff
  425fe0:	b.ne	425f4c <nftw@plt+0x233cc>  // b.any
  425fe4:	ldr	x0, [x20]
  425fe8:	sub	x0, x0, #0x2
  425fec:	str	x0, [x20]
  425ff0:	b	425f4c <nftw@plt+0x233cc>
  425ff4:	nop
  425ff8:	ldrb	w2, [x1]
  425ffc:	mov	x7, x0
  426000:	tbz	w2, #7, 4260a0 <nftw@plt+0x23520>
  426004:	mov	w0, w2
  426008:	mov	w5, #0x0                   	// #0
  42600c:	nop
  426010:	mov	w6, w5
  426014:	lsl	w2, w2, #1
  426018:	add	w5, w5, #0x1
  42601c:	tbnz	w2, #7, 426010 <nftw@plt+0x23490>
  426020:	mov	w2, #0x7f                  	// #127
  426024:	cmp	w5, #0x1
  426028:	asr	w2, w2, w5
  42602c:	and	w2, w2, w0
  426030:	sxtw	x2, w2
  426034:	b.eq	4260ac <nftw@plt+0x2352c>  // b.none
  426038:	add	x0, x1, #0x1
  42603c:	mov	x1, #0x0                   	// #0
  426040:	ldrb	w3, [x0, x1]
  426044:	and	w4, w3, #0xffffffc0
  426048:	bfi	x3, x2, #6, #58
  42604c:	cmp	w4, #0x80
  426050:	mov	x2, x3
  426054:	b.ne	4260b4 <nftw@plt+0x23534>  // b.any
  426058:	add	x1, x1, #0x1
  42605c:	cmp	w6, w1
  426060:	b.gt	426040 <nftw@plt+0x234c0>
  426064:	sxtw	x0, w5
  426068:	mov	x4, x7
  42606c:	adrp	x5, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  426070:	add	x5, x5, #0xfe0
  426074:	mov	w3, #0x555c                	// #21852
  426078:	mov	w1, #0x1c                  	// #28
  42607c:	strh	w3, [x4], #2
  426080:	lsr	x3, x2, x1
  426084:	and	x3, x3, #0xf
  426088:	sub	w1, w1, #0x4
  42608c:	cmn	w1, #0x4
  426090:	ldrb	w3, [x5, x3]
  426094:	strb	w3, [x4], #1
  426098:	b.ne	426080 <nftw@plt+0x23500>  // b.any
  42609c:	ret
  4260a0:	and	x2, x2, #0xff
  4260a4:	mov	x0, #0x0                   	// #0
  4260a8:	b	426068 <nftw@plt+0x234e8>
  4260ac:	mov	x0, #0x1                   	// #1
  4260b0:	b	426068 <nftw@plt+0x234e8>
  4260b4:	stp	x29, x30, [sp, #-16]!
  4260b8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4260bc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4260c0:	mov	x29, sp
  4260c4:	add	x2, x2, #0xfb8
  4260c8:	add	x0, x0, #0xfc8
  4260cc:	mov	w1, #0xc89                 	// #3209
  4260d0:	bl	402bf0 <nftw@plt+0x70>
  4260d4:	nop
  4260d8:	ldrb	w1, [x0, #1154]
  4260dc:	cbz	w1, 426108 <nftw@plt+0x23588>
  4260e0:	ldrb	w1, [x0, #1167]
  4260e4:	cbnz	w1, 426108 <nftw@plt+0x23588>
  4260e8:	ldr	x1, [x0]
  4260ec:	cbz	x1, 4260f8 <nftw@plt+0x23578>
  4260f0:	ldrb	w1, [x1, #106]
  4260f4:	cbnz	w1, 426110 <nftw@plt+0x23590>
  4260f8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4260fc:	mov	w1, #0x2                   	// #2
  426100:	add	x2, x2, #0xff8
  426104:	b	41f298 <nftw@plt+0x1c718>
  426108:	ldrb	w1, [x0, #22]
  42610c:	cbz	w1, 426114 <nftw@plt+0x23594>
  426110:	ret
  426114:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426118:	mov	w1, #0x2                   	// #2
  42611c:	add	x2, x2, #0x20
  426120:	b	41f298 <nftw@plt+0x1c718>
  426124:	nop
  426128:	stp	x29, x30, [sp, #-80]!
  42612c:	tst	w2, #0xff
  426130:	mov	x29, sp
  426134:	ldr	x6, [x0]
  426138:	stp	x19, x20, [sp, #16]
  42613c:	mov	x20, x3
  426140:	stp	x21, x22, [sp, #32]
  426144:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x205a0>
  426148:	add	x22, x22, #0x248
  42614c:	ldr	x19, [x6]
  426150:	stp	x23, x24, [sp, #48]
  426154:	mov	x21, x0
  426158:	str	x25, [sp, #64]
  42615c:	mov	x24, x1
  426160:	mov	x25, x4
  426164:	ldrb	w5, [x19]
  426168:	ldrh	w3, [x22, w5, sxtw #1]
  42616c:	b.ne	4261d8 <nftw@plt+0x23658>  // b.any
  426170:	ldrb	w23, [x1]
  426174:	mov	w1, #0x204                 	// #516
  426178:	tst	w3, w1
  42617c:	sub	w23, w23, #0x71
  426180:	b.eq	4261a0 <nftw@plt+0x23620>  // b.none
  426184:	mov	w2, #0x43                  	// #67
  426188:	madd	w23, w23, w2, w5
  42618c:	ldrb	w5, [x19, #1]!
  426190:	sub	w23, w23, #0x71
  426194:	ldrh	w0, [x22, w5, sxtw #1]
  426198:	tst	w1, w0
  42619c:	b.ne	426188 <nftw@plt+0x23608>  // b.any
  4261a0:	ldurb	w0, [x19, #-1]
  4261a4:	mov	x2, x20
  4261a8:	str	w0, [x20]
  4261ac:	mov	w1, #0x0                   	// #0
  4261b0:	strb	wzr, [x20, #4]
  4261b4:	mov	x0, x21
  4261b8:	str	x19, [x6]
  4261bc:	bl	425f10 <nftw@plt+0x23390>
  4261c0:	tst	w0, #0xff
  4261c4:	b.eq	426284 <nftw@plt+0x23704>  // b.none
  4261c8:	ldr	x6, [x21]
  4261cc:	ldr	x19, [x6]
  4261d0:	ldrb	w5, [x19]
  4261d4:	ldrh	w3, [x22, w5, sxtw #1]
  4261d8:	mov	w23, #0x204                 	// #516
  4261dc:	b	4261f8 <nftw@plt+0x23678>
  4261e0:	str	w5, [x20]
  4261e4:	add	x19, x19, #0x1
  4261e8:	strb	wzr, [x20, #4]
  4261ec:	str	x19, [x6]
  4261f0:	ldrb	w5, [x19]
  4261f4:	ldrh	w3, [x22, w5, sxtw #1]
  4261f8:	mov	x2, x20
  4261fc:	mov	x0, x21
  426200:	tst	w3, w23
  426204:	mov	w1, #0x0                   	// #0
  426208:	b.ne	4261e0 <nftw@plt+0x23660>  // b.any
  42620c:	bl	425f10 <nftw@plt+0x23390>
  426210:	tst	w0, #0xff
  426214:	b.eq	426224 <nftw@plt+0x236a4>  // b.none
  426218:	ldr	x6, [x21]
  42621c:	ldr	x19, [x6]
  426220:	b	4261f0 <nftw@plt+0x23670>
  426224:	ldr	x2, [x21]
  426228:	mov	x1, x24
  42622c:	mov	x0, x21
  426230:	ldr	x2, [x2]
  426234:	sub	x2, x2, x24
  426238:	bl	41af30 <nftw@plt+0x183b0>
  42623c:	ldr	x2, [x21]
  426240:	mov	x19, x0
  426244:	mov	x1, x24
  426248:	mov	x0, x21
  42624c:	ldr	x2, [x2]
  426250:	sub	w2, w2, w24
  426254:	bl	425de0 <nftw@plt+0x23260>
  426258:	str	x0, [x25]
  42625c:	ldrh	w0, [x19, #18]
  426260:	ubfx	x1, x0, #2, #8
  426264:	tbnz	w0, #4, 4262b4 <nftw@plt+0x23734>
  426268:	mov	x0, x19
  42626c:	ldp	x19, x20, [sp, #16]
  426270:	ldp	x21, x22, [sp, #32]
  426274:	ldp	x23, x24, [sp, #48]
  426278:	ldr	x25, [sp, #64]
  42627c:	ldp	x29, x30, [sp], #80
  426280:	ret
  426284:	ldr	x0, [x21, #1088]
  426288:	sub	x3, x19, x24
  42628c:	sub	w2, w19, w24
  426290:	mov	x1, x24
  426294:	add	w3, w23, w3
  426298:	mov	w4, #0x1                   	// #1
  42629c:	bl	432ac0 <nftw@plt+0x2ff40>
  4262a0:	mov	x19, x0
  4262a4:	str	x0, [x25]
  4262a8:	ldrh	w0, [x19, #18]
  4262ac:	ubfx	x1, x0, #2, #8
  4262b0:	tbz	w0, #4, 426268 <nftw@plt+0x236e8>
  4262b4:	ldrb	w0, [x21, #18]
  4262b8:	cbnz	w0, 426268 <nftw@plt+0x236e8>
  4262bc:	tbz	w1, #1, 4262c8 <nftw@plt+0x23748>
  4262c0:	ldrb	w0, [x21, #23]
  4262c4:	cbz	w0, 42632c <nftw@plt+0x237ac>
  4262c8:	ldr	x0, [x21, #1272]
  4262cc:	cmp	x0, x19
  4262d0:	b.eq	426304 <nftw@plt+0x23784>  // b.none
  4262d4:	ldr	x0, [x21, #1280]
  4262d8:	cmp	x0, x19
  4262dc:	b.eq	426348 <nftw@plt+0x237c8>  // b.none
  4262e0:	ldrh	w0, [x19, #18]
  4262e4:	tbz	w0, #9, 426268 <nftw@plt+0x236e8>
  4262e8:	ldr	x3, [x19]
  4262ec:	mov	x0, x21
  4262f0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4262f4:	mov	w1, #0xf                   	// #15
  4262f8:	add	x2, x2, #0x118
  4262fc:	bl	41f308 <nftw@plt+0x1c788>
  426300:	b	426268 <nftw@plt+0x236e8>
  426304:	ldrb	w0, [x21, #22]
  426308:	cbnz	w0, 4262d4 <nftw@plt+0x23754>
  42630c:	ldrb	w0, [x21, #1120]
  426310:	cbz	w0, 426354 <nftw@plt+0x237d4>
  426314:	mov	x0, x21
  426318:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42631c:	mov	w1, #0x2                   	// #2
  426320:	add	x2, x2, #0x88
  426324:	bl	41f298 <nftw@plt+0x1c718>
  426328:	b	4262d4 <nftw@plt+0x23754>
  42632c:	ldr	x3, [x19]
  426330:	mov	x0, x21
  426334:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426338:	mov	w1, #0x3                   	// #3
  42633c:	add	x2, x2, #0x68
  426340:	bl	41f298 <nftw@plt+0x1c718>
  426344:	b	4262c8 <nftw@plt+0x23748>
  426348:	mov	x0, x21
  42634c:	bl	4260d8 <nftw@plt+0x23558>
  426350:	b	4262e0 <nftw@plt+0x23760>
  426354:	mov	x0, x21
  426358:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42635c:	mov	w1, #0x2                   	// #2
  426360:	add	x2, x2, #0xd0
  426364:	bl	41f298 <nftw@plt+0x1c718>
  426368:	b	4262d4 <nftw@plt+0x23754>
  42636c:	nop
  426370:	ldrb	w3, [x1]
  426374:	adrp	x6, 46a000 <_obstack_memory_used@@Base+0x205a0>
  426378:	add	x6, x6, #0x248
  42637c:	ldrh	w2, [x6, w3, sxtw #1]
  426380:	tbz	w2, #9, 426400 <nftw@plt+0x23880>
  426384:	stp	x29, x30, [sp, #-16]!
  426388:	mov	w7, #0x204                 	// #516
  42638c:	sub	w3, w3, #0x71
  426390:	mov	x29, sp
  426394:	ldrb	w2, [x1, #1]
  426398:	add	x4, x1, #0x1
  42639c:	ldrh	w5, [x6, w2, sxtw #1]
  4263a0:	tst	w7, w5
  4263a4:	b.eq	426408 <nftw@plt+0x23888>  // b.none
  4263a8:	mov	w8, #0x43                  	// #67
  4263ac:	nop
  4263b0:	madd	w3, w3, w8, w2
  4263b4:	ldrb	w2, [x4, #1]!
  4263b8:	sub	w3, w3, #0x71
  4263bc:	ldrh	w5, [x6, w2, sxtw #1]
  4263c0:	tst	w7, w5
  4263c4:	b.ne	4263b0 <nftw@plt+0x23830>  // b.any
  4263c8:	sub	x2, x4, x1
  4263cc:	mov	w4, w2
  4263d0:	ldr	x0, [x0]
  4263d4:	add	w3, w3, w4
  4263d8:	mov	w4, #0x0                   	// #0
  4263dc:	bl	432ac0 <nftw@plt+0x2ff40>
  4263e0:	cbz	x0, 4263f4 <nftw@plt+0x23874>
  4263e4:	ldrb	w0, [x0, #18]
  4263e8:	ldp	x29, x30, [sp], #16
  4263ec:	ubfx	x0, x0, #1, #1
  4263f0:	ret
  4263f4:	mov	w0, #0x0                   	// #0
  4263f8:	ldp	x29, x30, [sp], #16
  4263fc:	ret
  426400:	mov	w0, #0x0                   	// #0
  426404:	ret
  426408:	mov	x2, #0x1                   	// #1
  42640c:	mov	w4, w2
  426410:	b	4263d0 <nftw@plt+0x23850>
  426414:	nop
  426418:	ldrb	w2, [x0, #4]
  42641c:	cmp	w2, #0x35
  426420:	b.ne	426448 <nftw@plt+0x238c8>  // b.any
  426424:	stp	x29, x30, [sp, #-16]!
  426428:	mov	x29, sp
  42642c:	ldr	x0, [x0, #8]
  426430:	ldr	x0, [x0]
  426434:	bl	402890 <strcmp@plt>
  426438:	cmp	w0, #0x0
  42643c:	cset	w0, eq  // eq = none
  426440:	ldp	x29, x30, [sp], #16
  426444:	ret
  426448:	mov	w0, #0x0                   	// #0
  42644c:	ret
  426450:	ret
  426454:	nop
  426458:	stp	x29, x30, [sp, #-96]!
  42645c:	mov	x29, sp
  426460:	stp	x21, x22, [sp, #32]
  426464:	ldr	x21, [x0]
  426468:	stp	x23, x24, [sp, #48]
  42646c:	mov	x23, x0
  426470:	stp	x19, x20, [sp, #16]
  426474:	ldrb	w0, [x21, #105]
  426478:	ldr	x20, [x21, #16]
  42647c:	stp	x20, x20, [x21]
  426480:	str	xzr, [x21, #56]
  426484:	strb	wzr, [x21, #104]
  426488:	tbnz	w0, #1, 4265e4 <nftw@plt+0x23a64>
  42648c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  426490:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426494:	mov	x22, #0x1000                	// #4096
  426498:	stp	x25, x26, [sp, #64]
  42649c:	mov	x25, #0x0                   	// #0
  4264a0:	ldr	q16, [x1]
  4264a4:	ldr	q17, [x0, #4080]
  4264a8:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4264ac:	add	x24, x0, #0x978
  4264b0:	and	x0, x20, #0xfff
  4264b4:	and	x2, x20, #0xfffffffffffffff0
  4264b8:	sub	x0, x22, x0
  4264bc:	mov	x1, x2
  4264c0:	movi	v1.16b, #0xa
  4264c4:	cmp	x0, #0xf
  4264c8:	b.ls	426668 <nftw@plt+0x23ae8>  // b.plast
  4264cc:	movi	v0.16b, #0xd
  4264d0:	ldr	q2, [x20]
  4264d4:	movi	v3.16b, #0x5c
  4264d8:	movi	v4.16b, #0x3f
  4264dc:	cmeq	v1.16b, v2.16b, v1.16b
  4264e0:	cmeq	v0.16b, v2.16b, v0.16b
  4264e4:	cmeq	v3.16b, v2.16b, v3.16b
  4264e8:	cmeq	v2.16b, v2.16b, v4.16b
  4264ec:	orr	v0.16b, v1.16b, v0.16b
  4264f0:	orr	v0.16b, v0.16b, v3.16b
  4264f4:	orr	v0.16b, v0.16b, v2.16b
  4264f8:	addp	d1, v0.2d
  4264fc:	fmov	x0, d1
  426500:	cbnz	x0, 426548 <nftw@plt+0x239c8>
  426504:	movi	v7.16b, #0xa
  426508:	movi	v6.16b, #0xd
  42650c:	movi	v5.16b, #0x5c
  426510:	movi	v4.16b, #0x3f
  426514:	nop
  426518:	ldr	q1, [x1, #16]!
  42651c:	cmeq	v0.16b, v1.16b, v7.16b
  426520:	cmeq	v3.16b, v1.16b, v6.16b
  426524:	cmeq	v2.16b, v1.16b, v5.16b
  426528:	cmeq	v1.16b, v1.16b, v4.16b
  42652c:	orr	v0.16b, v0.16b, v3.16b
  426530:	orr	v0.16b, v0.16b, v2.16b
  426534:	orr	v0.16b, v0.16b, v1.16b
  426538:	addp	d1, v0.2d
  42653c:	fmov	x2, d1
  426540:	cbz	x2, 426518 <nftw@plt+0x23998>
  426544:	mov	x2, x1
  426548:	and	v0.16b, v0.16b, v17.16b
  42654c:	cmp	x20, x2
  426550:	uaddlp	v0.8h, v0.16b
  426554:	ushl	v0.8h, v0.8h, v16.8h
  426558:	csel	x20, x20, x1, hi  // hi = pmore
  42655c:	addv	h0, v0.8h
  426560:	umov	w19, v0.h[0]
  426564:	rbit	w19, w19
  426568:	clz	w19, w19
  42656c:	add	x19, x20, w19, sxtw
  426570:	mov	x20, x19
  426574:	ldrb	w0, [x20], #1
  426578:	cmp	w0, #0x5c
  42657c:	b.eq	426650 <nftw@plt+0x23ad0>  // b.none
  426580:	cmp	w0, #0x3f
  426584:	b.eq	426640 <nftw@plt+0x23ac0>  // b.none
  426588:	ldr	x1, [x21, #32]
  42658c:	cmp	x1, x19
  426590:	b.eq	426858 <nftw@plt+0x23cd8>  // b.none
  426594:	str	x27, [sp, #80]
  426598:	cmp	w0, #0xd
  42659c:	mov	x22, x20
  4265a0:	mov	x27, x19
  4265a4:	b.eq	4266cc <nftw@plt+0x23b4c>  // b.none
  4265a8:	cbnz	x25, 426864 <nftw@plt+0x23ce4>
  4265ac:	ldp	x25, x26, [sp, #64]
  4265b0:	ldr	x27, [sp, #80]
  4265b4:	mov	w0, #0xa                   	// #10
  4265b8:	strb	w0, [x19]
  4265bc:	mov	x1, x20
  4265c0:	mov	x0, x21
  4265c4:	mov	w2, #0xa                   	// #10
  4265c8:	bl	425e30 <nftw@plt+0x232b0>
  4265cc:	ldp	x19, x20, [sp, #16]
  4265d0:	ldp	x23, x24, [sp, #48]
  4265d4:	str	x22, [x21, #16]
  4265d8:	ldp	x21, x22, [sp, #32]
  4265dc:	ldp	x29, x30, [sp], #96
  4265e0:	ret
  4265e4:	ldrb	w1, [x20]
  4265e8:	cmp	w1, #0xa
  4265ec:	b.ne	42660c <nftw@plt+0x23a8c>  // b.any
  4265f0:	add	x22, x20, #0x1
  4265f4:	mov	x19, x20
  4265f8:	mov	x20, x22
  4265fc:	b	4265b4 <nftw@plt+0x23a34>
  426600:	ldrb	w1, [x20]
  426604:	cmp	w1, #0xa
  426608:	b.eq	426658 <nftw@plt+0x23ad8>  // b.none
  42660c:	mov	x19, x20
  426610:	cmp	w1, #0xd
  426614:	add	x20, x20, #0x1
  426618:	b.ne	426600 <nftw@plt+0x23a80>  // b.any
  42661c:	ldr	x0, [x21, #32]
  426620:	mov	x22, x20
  426624:	cmp	x0, x19
  426628:	b.eq	4265b4 <nftw@plt+0x23a34>  // b.none
  42662c:	ldrb	w0, [x19, #1]
  426630:	add	x22, x19, #0x2
  426634:	cmp	w0, #0xa
  426638:	csel	x22, x22, x20, eq  // eq = none
  42663c:	b	4265b4 <nftw@plt+0x23a34>
  426640:	ldrb	w0, [x19, #1]
  426644:	cmp	w0, #0x3f
  426648:	b.eq	4266ec <nftw@plt+0x23b6c>  // b.none
  42664c:	mov	x19, x25
  426650:	mov	x25, x19
  426654:	b	4264b0 <nftw@plt+0x23930>
  426658:	add	x22, x19, #0x2
  42665c:	mov	x19, x20
  426660:	mov	x20, x22
  426664:	b	4265b4 <nftw@plt+0x23a34>
  426668:	movi	v0.16b, #0xd
  42666c:	and	w0, w20, #0xf
  426670:	ldr	q2, [x2]
  426674:	mov	w3, #0xffffffff            	// #-1
  426678:	movi	v3.16b, #0x5c
  42667c:	lsl	w3, w3, w0
  426680:	movi	v4.16b, #0x3f
  426684:	cmeq	v1.16b, v2.16b, v1.16b
  426688:	cmeq	v0.16b, v2.16b, v0.16b
  42668c:	cmeq	v3.16b, v2.16b, v3.16b
  426690:	cmeq	v2.16b, v2.16b, v4.16b
  426694:	orr	v0.16b, v1.16b, v0.16b
  426698:	orr	v0.16b, v0.16b, v3.16b
  42669c:	orr	v0.16b, v0.16b, v2.16b
  4266a0:	and	v0.16b, v0.16b, v17.16b
  4266a4:	uaddlp	v0.8h, v0.16b
  4266a8:	ushl	v0.8h, v0.8h, v16.8h
  4266ac:	addv	h0, v0.8h
  4266b0:	umov	w0, v0.h[0]
  4266b4:	ands	w0, w3, w0
  4266b8:	b.eq	426504 <nftw@plt+0x23984>  // b.none
  4266bc:	rbit	w0, w0
  4266c0:	clz	w0, w0
  4266c4:	add	x19, x2, w0, sxtw
  4266c8:	b	426570 <nftw@plt+0x239f0>
  4266cc:	ldrb	w0, [x19, #1]
  4266d0:	cmp	w0, #0xa
  4266d4:	b.ne	4265a8 <nftw@plt+0x23a28>  // b.any
  4266d8:	cmp	x1, x20
  4266dc:	add	x22, x19, #0x2
  4266e0:	b.eq	4265ac <nftw@plt+0x23a2c>  // b.none
  4266e4:	mov	x27, x20
  4266e8:	b	4265a8 <nftw@plt+0x23a28>
  4266ec:	ldrb	w2, [x19, #2]
  4266f0:	ldrb	w0, [x24, w2, sxtw]
  4266f4:	cbz	w0, 42664c <nftw@plt+0x23acc>
  4266f8:	mov	x1, x19
  4266fc:	mov	x0, x21
  426700:	bl	425e30 <nftw@plt+0x232b0>
  426704:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426708:	ldrb	w0, [x23, #1125]
  42670c:	ldr	q17, [x1, #4080]
  426710:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  426714:	ldr	q16, [x1]
  426718:	cbz	w0, 42664c <nftw@plt+0x23acc>
  42671c:	str	x27, [sp, #80]
  426720:	mov	x27, x19
  426724:	mov	x20, x19
  426728:	ldrb	w0, [x19, #2]
  42672c:	ldrb	w0, [x24, x0]
  426730:	strb	w0, [x27], #2
  426734:	ldrb	w0, [x27, #1]
  426738:	adrp	x25, 48d000 <__environ@@GLIBC_2.17+0xa68>
  42673c:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x205a0>
  426740:	add	x25, x25, #0x978
  426744:	add	x26, x26, #0x248
  426748:	mov	w24, #0x20                  	// #32
  42674c:	nop
  426750:	strb	w0, [x20, #1]
  426754:	cmp	w0, #0xa
  426758:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42675c:	add	x22, x27, #0x1
  426760:	add	x19, x20, #0x1
  426764:	b.ne	4267f8 <nftw@plt+0x23c78>  // b.any
  426768:	cmp	w0, #0xd
  42676c:	ldr	x0, [x21, #32]
  426770:	b.eq	426824 <nftw@plt+0x23ca4>  // b.none
  426774:	cmp	x22, x0
  426778:	b.eq	426810 <nftw@plt+0x23c90>  // b.none
  42677c:	ldr	x1, [x21, #16]
  426780:	cmp	x1, x19
  426784:	b.eq	426810 <nftw@plt+0x23c90>  // b.none
  426788:	mov	x3, x19
  42678c:	b	42679c <nftw@plt+0x23c1c>
  426790:	sub	x3, x3, #0x1
  426794:	cmp	x1, x3
  426798:	b.eq	426810 <nftw@plt+0x23c90>  // b.none
  42679c:	ldurb	w2, [x3, #-1]
  4267a0:	ldrh	w0, [x26, w2, sxtw #1]
  4267a4:	tbnz	w0, #11, 426790 <nftw@plt+0x23c10>
  4267a8:	cmp	x1, x3
  4267ac:	b.eq	426810 <nftw@plt+0x23c90>  // b.none
  4267b0:	cmp	w2, #0x5c
  4267b4:	b.ne	426810 <nftw@plt+0x23c90>  // b.any
  4267b8:	cmp	x19, x3
  4267bc:	sub	x19, x3, #0x1
  4267c0:	sub	x20, x3, #0x2
  4267c4:	csel	w2, w24, w2, ne  // ne = any
  4267c8:	mov	x1, x19
  4267cc:	mov	x0, x21
  4267d0:	bl	425e30 <nftw@plt+0x232b0>
  4267d4:	str	x19, [x21, #16]
  4267d8:	mov	x27, x22
  4267dc:	add	x19, x20, #0x1
  4267e0:	ldrb	w0, [x22, #1]
  4267e4:	add	x22, x27, #0x1
  4267e8:	strb	w0, [x20, #1]
  4267ec:	cmp	w0, #0xa
  4267f0:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  4267f4:	b.eq	426768 <nftw@plt+0x23be8>  // b.none
  4267f8:	cmp	w0, #0x3f
  4267fc:	b.eq	426840 <nftw@plt+0x23cc0>  // b.none
  426800:	ldrb	w0, [x27, #2]
  426804:	mov	x20, x19
  426808:	mov	x27, x22
  42680c:	b	426750 <nftw@plt+0x23bd0>
  426810:	add	x20, x20, #0x2
  426814:	add	x22, x22, #0x1
  426818:	ldp	x25, x26, [sp, #64]
  42681c:	ldr	x27, [sp, #80]
  426820:	b	4265b4 <nftw@plt+0x23a34>
  426824:	cmp	x22, x0
  426828:	b.eq	426810 <nftw@plt+0x23c90>  // b.none
  42682c:	ldrb	w1, [x27, #2]
  426830:	cmp	w1, #0xa
  426834:	b.ne	42677c <nftw@plt+0x23bfc>  // b.any
  426838:	add	x22, x27, #0x2
  42683c:	b	426774 <nftw@plt+0x23bf4>
  426840:	ldrb	w0, [x27, #2]
  426844:	cmp	w0, #0x3f
  426848:	b.eq	4268c8 <nftw@plt+0x23d48>  // b.none
  42684c:	mov	x20, x19
  426850:	mov	x27, x22
  426854:	b	426750 <nftw@plt+0x23bd0>
  426858:	mov	x22, x20
  42685c:	ldp	x25, x26, [sp, #64]
  426860:	b	4265b4 <nftw@plt+0x23a34>
  426864:	ldurb	w0, [x19, #-1]
  426868:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x205a0>
  42686c:	add	x2, x2, #0x248
  426870:	ldrh	w0, [x2, x0, lsl #1]
  426874:	tbz	w0, #11, 426908 <nftw@plt+0x23d88>
  426878:	mov	x0, x19
  42687c:	nop
  426880:	mov	x3, x0
  426884:	sub	x0, x0, #0x1
  426888:	ldurb	w1, [x0, #-1]
  42688c:	ldrh	w1, [x2, x1, lsl #1]
  426890:	tbnz	w1, #11, 426880 <nftw@plt+0x23d00>
  426894:	sub	x3, x3, #0x2
  426898:	cmp	x25, x3
  42689c:	b.ne	4265ac <nftw@plt+0x23a2c>  // b.any
  4268a0:	cmp	x0, x19
  4268a4:	mov	w2, #0x20                  	// #32
  4268a8:	mov	w1, #0x5c                  	// #92
  4268ac:	csel	w2, w2, w1, ne  // ne = any
  4268b0:	sub	x20, x0, #0x2
  4268b4:	mov	x1, x25
  4268b8:	mov	x0, x21
  4268bc:	bl	425e30 <nftw@plt+0x232b0>
  4268c0:	str	x25, [x21, #16]
  4268c4:	b	426734 <nftw@plt+0x23bb4>
  4268c8:	ldrb	w2, [x27, #3]
  4268cc:	ldrb	w1, [x25, w2, sxtw]
  4268d0:	cbz	w1, 42684c <nftw@plt+0x23ccc>
  4268d4:	mov	x0, x21
  4268d8:	mov	x1, x19
  4268dc:	bl	425e30 <nftw@plt+0x232b0>
  4268e0:	ldrb	w0, [x23, #1125]
  4268e4:	cbz	w0, 426800 <nftw@plt+0x23c80>
  4268e8:	mov	x1, x27
  4268ec:	ldrb	w0, [x1, #3]!
  4268f0:	ldrb	w0, [x25, w0, sxtw]
  4268f4:	strb	w0, [x20, #1]
  4268f8:	mov	x20, x19
  4268fc:	ldrb	w0, [x27, #4]
  426900:	mov	x27, x1
  426904:	b	426750 <nftw@plt+0x23bd0>
  426908:	sub	x0, x19, #0x1
  42690c:	cmp	x25, x0
  426910:	b.ne	4265ac <nftw@plt+0x23a2c>  // b.any
  426914:	mov	x0, x19
  426918:	mov	w2, #0x5c                  	// #92
  42691c:	b	4268b0 <nftw@plt+0x23d30>
  426920:	stp	x29, x30, [sp, #-32]!
  426924:	mov	x29, sp
  426928:	stp	x19, x20, [sp, #16]
  42692c:	mov	x20, x0
  426930:	ldr	x1, [x0]
  426934:	b	426954 <nftw@plt+0x23dd4>
  426938:	ubfx	x19, x2, #2, #1
  42693c:	mov	x0, x20
  426940:	bl	41e590 <nftw@plt+0x1ba10>
  426944:	ldr	x1, [x20]
  426948:	cmp	x1, #0x0
  42694c:	csinc	w2, w19, wzr, ne  // ne = any
  426950:	cbnz	w2, 4269ac <nftw@plt+0x23e2c>
  426954:	ldrb	w19, [x1, #104]
  426958:	cbz	w19, 4269c0 <nftw@plt+0x23e40>
  42695c:	ldr	x0, [x1, #16]
  426960:	ldr	x3, [x1, #32]
  426964:	cmp	x0, x3
  426968:	b.cc	4269d4 <nftw@plt+0x23e54>  // b.lo, b.ul, b.last
  42696c:	ldrb	w2, [x20, #25]
  426970:	cbnz	w2, 4269ac <nftw@plt+0x23e2c>
  426974:	ldr	x2, [x1, #24]
  426978:	cmp	x2, x3
  42697c:	ldrb	w2, [x1, #105]
  426980:	ccmp	x0, x3, #0x0, ne  // ne = any
  426984:	b.ls	426938 <nftw@plt+0x23db8>  // b.plast
  426988:	tbnz	w2, #1, 426938 <nftw@plt+0x23db8>
  42698c:	str	x3, [x1, #16]
  426990:	ubfx	x19, x2, #2, #1
  426994:	mov	x0, x20
  426998:	bl	41e590 <nftw@plt+0x1ba10>
  42699c:	ldr	x1, [x20]
  4269a0:	cmp	x1, #0x0
  4269a4:	csinc	w2, w19, wzr, ne  // ne = any
  4269a8:	cbz	w2, 426954 <nftw@plt+0x23dd4>
  4269ac:	mov	w19, #0x0                   	// #0
  4269b0:	mov	w0, w19
  4269b4:	ldp	x19, x20, [sp, #16]
  4269b8:	ldp	x29, x30, [sp], #32
  4269bc:	ret
  4269c0:	mov	w19, #0x1                   	// #1
  4269c4:	mov	w0, w19
  4269c8:	ldp	x19, x20, [sp, #16]
  4269cc:	ldp	x29, x30, [sp], #32
  4269d0:	ret
  4269d4:	mov	x0, x20
  4269d8:	bl	426458 <nftw@plt+0x238d8>
  4269dc:	mov	w0, w19
  4269e0:	ldp	x19, x20, [sp, #16]
  4269e4:	ldp	x29, x30, [sp], #32
  4269e8:	ret
  4269ec:	nop
  4269f0:	stp	x29, x30, [sp, #-80]!
  4269f4:	mov	x29, sp
  4269f8:	stp	x19, x20, [sp, #16]
  4269fc:	ldr	x19, [x0]
  426a00:	stp	x25, x26, [sp, #64]
  426a04:	mov	x25, x0
  426a08:	stp	x23, x24, [sp, #48]
  426a0c:	mov	w23, w1
  426a10:	ldr	w2, [x19, #56]
  426a14:	ldr	x4, [x19, #48]
  426a18:	ubfiz	x0, x2, #4, #32
  426a1c:	ldr	x7, [x19]
  426a20:	add	x26, x4, x0
  426a24:	ldr	x1, [x4, x0]
  426a28:	cmp	x7, x1
  426a2c:	b.cc	426b50 <nftw@plt+0x23fd0>  // b.lo, b.ul, b.last
  426a30:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426a34:	add	x24, x24, #0x180
  426a38:	stp	x21, x22, [sp, #32]
  426a3c:	adrp	x22, 48d000 <__environ@@GLIBC_2.17+0xa68>
  426a40:	mov	w21, #0x18                  	// #24
  426a44:	add	x22, x22, #0x978
  426a48:	b	426ab4 <nftw@plt+0x23f34>
  426a4c:	cmp	w5, #0x20
  426a50:	b.eq	426b64 <nftw@plt+0x23fe4>  // b.none
  426a54:	ldrb	w6, [x22, w5, uxtw]
  426a58:	cbz	w6, 426b90 <nftw@plt+0x24010>
  426a5c:	ldrb	w0, [x25, #1136]
  426a60:	cbz	w0, 426aa0 <nftw@plt+0x23f20>
  426a64:	cbnz	w23, 426bd8 <nftw@plt+0x24058>
  426a68:	ldrb	w0, [x25, #1125]
  426a6c:	ldr	x1, [x25, #40]
  426a70:	ldr	w2, [x1, #60]
  426a74:	cbz	w0, 426c20 <nftw@plt+0x240a0>
  426a78:	mov	w3, w20
  426a7c:	mov	x0, x25
  426a80:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426a84:	mov	w1, #0x4                   	// #4
  426a88:	add	x4, x4, #0x1a8
  426a8c:	bl	41f4d0 <nftw@plt+0x1c950>
  426a90:	ldr	w2, [x19, #56]
  426a94:	ldr	x7, [x19]
  426a98:	ldr	x4, [x19, #48]
  426a9c:	nop
  426aa0:	ubfiz	x0, x2, #4, #32
  426aa4:	add	x26, x4, x0
  426aa8:	ldr	x1, [x4, x0]
  426aac:	cmp	x1, x7
  426ab0:	b.hi	426b4c <nftw@plt+0x23fcc>  // b.pmore
  426ab4:	ldr	x20, [x19, #8]
  426ab8:	add	w2, w2, #0x1
  426abc:	ldr	w5, [x26, #8]
  426ac0:	add	x3, x1, #0x1
  426ac4:	str	w2, [x19, #56]
  426ac8:	sub	x20, x3, x20
  426acc:	cmp	w5, #0x5c
  426ad0:	b.ne	426a4c <nftw@plt+0x23ecc>  // b.any
  426ad4:	ldr	x0, [x25, #40]
  426ad8:	ldr	w4, [x0, #60]
  426adc:	ldr	x2, [x19, #16]
  426ae0:	ldr	x1, [x19, #32]
  426ae4:	cmp	x2, x1
  426ae8:	b.hi	426bac <nftw@plt+0x2402c>  // b.pmore
  426aec:	ldr	w3, [x0, #12]
  426af0:	ldr	x1, [x0]
  426af4:	sub	w3, w3, #0x1
  426af8:	ldr	x2, [x26]
  426afc:	smull	x3, w3, w21
  426b00:	add	x5, x1, x3
  426b04:	ldr	w6, [x1, x3]
  426b08:	ldrb	w3, [x5, #6]
  426b0c:	sub	w4, w4, w6
  426b10:	ldr	w1, [x5, #16]
  426b14:	str	x2, [x19, #8]
  426b18:	mov	w2, #0x0                   	// #0
  426b1c:	lsr	w4, w4, w3
  426b20:	add	w1, w1, #0x1
  426b24:	add	w1, w4, w1
  426b28:	bl	42b4f0 <nftw@plt+0x28970>
  426b2c:	ldr	w2, [x19, #56]
  426b30:	ldr	x4, [x19, #48]
  426b34:	ubfiz	x0, x2, #4, #32
  426b38:	ldr	x7, [x19]
  426b3c:	add	x26, x4, x0
  426b40:	ldr	x1, [x4, x0]
  426b44:	cmp	x1, x7
  426b48:	b.ls	426ab4 <nftw@plt+0x23f34>  // b.plast
  426b4c:	ldp	x21, x22, [sp, #32]
  426b50:	ldp	x19, x20, [sp, #16]
  426b54:	ldp	x23, x24, [sp, #48]
  426b58:	ldp	x25, x26, [sp, #64]
  426b5c:	ldp	x29, x30, [sp], #80
  426b60:	ret
  426b64:	ldr	x0, [x25, #40]
  426b68:	ldr	w4, [x0, #60]
  426b6c:	cbnz	w23, 426adc <nftw@plt+0x23f5c>
  426b70:	mov	w2, w4
  426b74:	mov	w3, w20
  426b78:	mov	x0, x25
  426b7c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426b80:	mov	w1, #0x0                   	// #0
  426b84:	add	x4, x4, #0x150
  426b88:	bl	41f458 <nftw@plt+0x1c8d8>
  426b8c:	b	426ad4 <nftw@plt+0x23f54>
  426b90:	cbz	w5, 426aa0 <nftw@plt+0x23f20>
  426b94:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426b98:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  426b9c:	add	x2, x2, #0x1f8
  426ba0:	add	x0, x0, #0xfc8
  426ba4:	mov	w1, #0x48b                 	// #1163
  426ba8:	bl	402bf0 <nftw@plt+0x70>
  426bac:	mov	w2, w4
  426bb0:	mov	w1, #0x2                   	// #2
  426bb4:	mov	x4, x24
  426bb8:	mov	w3, w20
  426bbc:	mov	x0, x25
  426bc0:	bl	41f458 <nftw@plt+0x1c8d8>
  426bc4:	ldr	x0, [x25, #40]
  426bc8:	ldr	x1, [x19, #32]
  426bcc:	ldr	w4, [x0, #60]
  426bd0:	str	x1, [x19, #16]
  426bd4:	b	426aec <nftw@plt+0x23f6c>
  426bd8:	cmp	w5, #0x2f
  426bdc:	b.ne	426aa0 <nftw@plt+0x23f20>  // b.any
  426be0:	ldrb	w0, [x25, #1125]
  426be4:	cbnz	w0, 426c64 <nftw@plt+0x240e4>
  426be8:	ldrb	w0, [x1, #3]
  426bec:	adrp	x6, 46a000 <_obstack_memory_used@@Base+0x205a0>
  426bf0:	add	x6, x6, #0x248
  426bf4:	add	x1, x1, #0x3
  426bf8:	ldrh	w3, [x6, w0, sxtw #1]
  426bfc:	tbnz	w3, #11, 426c48 <nftw@plt+0x240c8>
  426c00:	cmp	w0, #0xa
  426c04:	b.ne	426aa0 <nftw@plt+0x23f20>  // b.any
  426c08:	ldr	x0, [x26, #16]
  426c0c:	cmp	x0, x1
  426c10:	b.ls	426aa0 <nftw@plt+0x23f20>  // b.plast
  426c14:	ldr	x0, [x25, #40]
  426c18:	ldr	w2, [x0, #60]
  426c1c:	nop
  426c20:	mov	w3, w20
  426c24:	mov	x0, x25
  426c28:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426c2c:	mov	w1, #0x4                   	// #4
  426c30:	add	x4, x4, #0x1c8
  426c34:	bl	41f4d0 <nftw@plt+0x1c950>
  426c38:	ldr	w2, [x19, #56]
  426c3c:	ldr	x7, [x19]
  426c40:	ldr	x4, [x19, #48]
  426c44:	b	426aa0 <nftw@plt+0x23f20>
  426c48:	ldrb	w0, [x1, #1]!
  426c4c:	ldrh	w3, [x6, w0, sxtw #1]
  426c50:	tbz	w3, #11, 426c00 <nftw@plt+0x24080>
  426c54:	ldrb	w0, [x1, #1]!
  426c58:	ldrh	w3, [x6, w0, sxtw #1]
  426c5c:	tbnz	w3, #11, 426c48 <nftw@plt+0x240c8>
  426c60:	b	426c00 <nftw@plt+0x24080>
  426c64:	ldr	x0, [x26, #16]
  426c68:	cmp	x0, x1
  426c6c:	b.ne	426aa0 <nftw@plt+0x23f20>  // b.any
  426c70:	ldr	x0, [x25, #40]
  426c74:	ldr	w2, [x0, #60]
  426c78:	b	426a78 <nftw@plt+0x23ef8>
  426c7c:	nop
  426c80:	stp	x29, x30, [sp, #-64]!
  426c84:	mov	x29, sp
  426c88:	stp	x21, x22, [sp, #32]
  426c8c:	mov	x22, x0
  426c90:	ldr	x21, [x0]
  426c94:	stp	x19, x20, [sp, #16]
  426c98:	stp	x23, x24, [sp, #48]
  426c9c:	ldr	x19, [x21]
  426ca0:	ldrb	w1, [x19, #1]
  426ca4:	cmp	w1, #0x2f
  426ca8:	b.eq	426df4 <nftw@plt+0x24274>  // b.none
  426cac:	add	x19, x19, #0x1
  426cb0:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426cb4:	add	x24, x24, #0x210
  426cb8:	mov	w23, #0x18                  	// #24
  426cbc:	nop
  426cc0:	cmp	w1, #0x2f
  426cc4:	add	x20, x19, #0x1
  426cc8:	b.eq	426ce8 <nftw@plt+0x24168>  // b.none
  426ccc:	cmp	w1, #0xa
  426cd0:	b.eq	426d10 <nftw@plt+0x24190>  // b.none
  426cd4:	ldrb	w1, [x19, #1]
  426cd8:	mov	x19, x20
  426cdc:	add	x20, x19, #0x1
  426ce0:	cmp	w1, #0x2f
  426ce4:	b.ne	426ccc <nftw@plt+0x2414c>  // b.any
  426ce8:	ldurb	w0, [x19, #-1]
  426cec:	cmp	w0, #0x2a
  426cf0:	b.eq	426dcc <nftw@plt+0x2424c>  // b.none
  426cf4:	ldrb	w0, [x22, #1133]
  426cf8:	cbz	w0, 426cd4 <nftw@plt+0x24154>
  426cfc:	ldrb	w1, [x19, #1]
  426d00:	cmp	w1, #0x2a
  426d04:	b.eq	426d88 <nftw@plt+0x24208>  // b.none
  426d08:	mov	x19, x20
  426d0c:	b	426cc0 <nftw@plt+0x24140>
  426d10:	str	x19, [x21]
  426d14:	mov	x0, x22
  426d18:	mov	w1, #0x1                   	// #1
  426d1c:	bl	4269f0 <nftw@plt+0x23e70>
  426d20:	ldr	x1, [x21, #16]
  426d24:	ldr	x0, [x21, #32]
  426d28:	cmp	x1, x0
  426d2c:	b.cs	426e00 <nftw@plt+0x24280>  // b.hs, b.nlast
  426d30:	mov	x0, x22
  426d34:	bl	426458 <nftw@plt+0x238d8>
  426d38:	ldr	x0, [x22, #40]
  426d3c:	ldp	x2, x6, [x21, #8]
  426d40:	ldr	w1, [x0, #12]
  426d44:	ldr	x5, [x0]
  426d48:	sub	w1, w1, #0x1
  426d4c:	ldr	w3, [x0, #60]
  426d50:	sub	w2, w6, w2
  426d54:	smull	x1, w1, w23
  426d58:	add	x4, x5, x1
  426d5c:	ldr	w6, [x5, x1]
  426d60:	ldrb	w5, [x4, #6]
  426d64:	sub	w3, w3, w6
  426d68:	ldr	w1, [x4, #16]
  426d6c:	lsr	w3, w3, w5
  426d70:	add	w1, w1, #0x1
  426d74:	add	w1, w3, w1
  426d78:	bl	42b4f0 <nftw@plt+0x28970>
  426d7c:	ldr	x19, [x21]
  426d80:	ldrb	w1, [x19]
  426d84:	b	426cc0 <nftw@plt+0x24140>
  426d88:	ldrb	w0, [x19, #2]
  426d8c:	cmp	w0, #0x2f
  426d90:	b.ne	426da4 <nftw@plt+0x24224>  // b.any
  426d94:	add	x0, x19, #0x2
  426d98:	mov	x19, x20
  426d9c:	mov	x20, x0
  426da0:	b	426cd4 <nftw@plt+0x24154>
  426da4:	ldr	x0, [x22, #40]
  426da8:	mov	x4, x24
  426dac:	ldr	x3, [x21, #8]
  426db0:	mov	w1, #0x2                   	// #2
  426db4:	ldr	w2, [x0, #60]
  426db8:	mov	x0, x22
  426dbc:	str	x20, [x21]
  426dc0:	sub	w3, w20, w3
  426dc4:	bl	41f4d0 <nftw@plt+0x1c950>
  426dc8:	b	426cd4 <nftw@plt+0x24154>
  426dcc:	str	x20, [x21]
  426dd0:	mov	x0, x22
  426dd4:	mov	w1, #0x1                   	// #1
  426dd8:	bl	4269f0 <nftw@plt+0x23e70>
  426ddc:	mov	w0, #0x0                   	// #0
  426de0:	ldp	x19, x20, [sp, #16]
  426de4:	ldp	x21, x22, [sp, #32]
  426de8:	ldp	x23, x24, [sp, #48]
  426dec:	ldp	x29, x30, [sp], #64
  426df0:	ret
  426df4:	ldrb	w1, [x19, #2]
  426df8:	add	x19, x19, #0x2
  426dfc:	b	426cb0 <nftw@plt+0x24130>
  426e00:	mov	w0, #0x1                   	// #1
  426e04:	ldp	x19, x20, [sp, #16]
  426e08:	ldp	x21, x22, [sp, #32]
  426e0c:	ldp	x23, x24, [sp, #48]
  426e10:	ldp	x29, x30, [sp], #64
  426e14:	ret
  426e18:	stp	x29, x30, [sp, #-32]!
  426e1c:	mov	x2, x1
  426e20:	adrp	x5, 46a000 <_obstack_memory_used@@Base+0x205a0>
  426e24:	mov	x29, sp
  426e28:	stp	x19, x20, [sp, #16]
  426e2c:	add	x5, x5, #0x248
  426e30:	mov	x20, x0
  426e34:	ldrb	w4, [x1, #1]
  426e38:	mov	w6, #0x204                 	// #516
  426e3c:	ldrb	w3, [x2], #1
  426e40:	sub	w3, w3, #0x71
  426e44:	ldrh	w0, [x5, w4, sxtw #1]
  426e48:	tst	w6, w0
  426e4c:	b.eq	426eac <nftw@plt+0x2432c>  // b.none
  426e50:	mov	w7, #0x43                  	// #67
  426e54:	nop
  426e58:	madd	w3, w3, w7, w4
  426e5c:	ldrb	w4, [x2, #1]!
  426e60:	sub	w3, w3, #0x71
  426e64:	ldrh	w0, [x5, w4, sxtw #1]
  426e68:	tst	w6, w0
  426e6c:	b.ne	426e58 <nftw@plt+0x242d8>  // b.any
  426e70:	ldr	x0, [x20, #1088]
  426e74:	sub	x2, x2, x1
  426e78:	mov	w4, w2
  426e7c:	and	x2, x2, #0xffffffff
  426e80:	add	w3, w3, w4
  426e84:	mov	w4, #0x1                   	// #1
  426e88:	bl	432ac0 <nftw@plt+0x2ff40>
  426e8c:	mov	x19, x0
  426e90:	ldrh	w0, [x0, #18]
  426e94:	ubfx	x1, x0, #2, #8
  426e98:	tbnz	w0, #4, 426ed8 <nftw@plt+0x24358>
  426e9c:	mov	x0, x19
  426ea0:	ldp	x19, x20, [sp, #16]
  426ea4:	ldp	x29, x30, [sp], #32
  426ea8:	ret
  426eac:	ldr	x0, [x20, #1088]
  426eb0:	mov	x2, #0x1                   	// #1
  426eb4:	mov	w4, w2
  426eb8:	add	w3, w3, w4
  426ebc:	mov	w4, #0x1                   	// #1
  426ec0:	bl	432ac0 <nftw@plt+0x2ff40>
  426ec4:	mov	x19, x0
  426ec8:	ldrh	w0, [x0, #18]
  426ecc:	ubfx	x1, x0, #2, #8
  426ed0:	tbz	w0, #4, 426e9c <nftw@plt+0x2431c>
  426ed4:	nop
  426ed8:	ldrb	w0, [x20, #18]
  426edc:	cbnz	w0, 426e9c <nftw@plt+0x2431c>
  426ee0:	tbz	w1, #1, 426eec <nftw@plt+0x2436c>
  426ee4:	ldrb	w0, [x20, #23]
  426ee8:	cbz	w0, 426f5c <nftw@plt+0x243dc>
  426eec:	ldr	x0, [x20, #1272]
  426ef0:	cmp	x19, x0
  426ef4:	b.eq	426f28 <nftw@plt+0x243a8>  // b.none
  426ef8:	ldr	x0, [x20, #1280]
  426efc:	cmp	x19, x0
  426f00:	b.eq	426f50 <nftw@plt+0x243d0>  // b.none
  426f04:	ldrh	w0, [x19, #18]
  426f08:	tbz	w0, #9, 426e9c <nftw@plt+0x2431c>
  426f0c:	ldr	x3, [x19]
  426f10:	mov	x0, x20
  426f14:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426f18:	mov	w1, #0xf                   	// #15
  426f1c:	add	x2, x2, #0x118
  426f20:	bl	41f308 <nftw@plt+0x1c788>
  426f24:	b	426e9c <nftw@plt+0x2431c>
  426f28:	ldrb	w0, [x20, #22]
  426f2c:	cbnz	w0, 426ef8 <nftw@plt+0x24378>
  426f30:	ldrb	w0, [x20, #1120]
  426f34:	cbz	w0, 426f78 <nftw@plt+0x243f8>
  426f38:	mov	x0, x20
  426f3c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426f40:	mov	w1, #0x2                   	// #2
  426f44:	add	x2, x2, #0x88
  426f48:	bl	41f298 <nftw@plt+0x1c718>
  426f4c:	b	426ef8 <nftw@plt+0x24378>
  426f50:	mov	x0, x20
  426f54:	bl	4260d8 <nftw@plt+0x23558>
  426f58:	b	426f04 <nftw@plt+0x24384>
  426f5c:	ldr	x3, [x19]
  426f60:	mov	x0, x20
  426f64:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426f68:	mov	w1, #0x3                   	// #3
  426f6c:	add	x2, x2, #0x68
  426f70:	bl	41f298 <nftw@plt+0x1c718>
  426f74:	b	426eec <nftw@plt+0x2436c>
  426f78:	mov	x0, x20
  426f7c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  426f80:	mov	w1, #0x2                   	// #2
  426f84:	add	x2, x2, #0xd0
  426f88:	bl	41f298 <nftw@plt+0x1c718>
  426f8c:	b	426ef8 <nftw@plt+0x24378>
  426f90:	add	x0, x0, #0x568
  426f94:	ret
  426f98:	stp	x29, x30, [sp, #-32]!
  426f9c:	mov	x29, sp
  426fa0:	stp	x19, x20, [sp, #16]
  426fa4:	mov	w20, #0x18                  	// #24
  426fa8:	mov	x19, x0
  426fac:	umull	x20, w1, w20
  426fb0:	mov	x0, x20
  426fb4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  426fb8:	add	x1, x0, x20
  426fbc:	str	xzr, [x19]
  426fc0:	stp	x0, x1, [x19, #16]
  426fc4:	ldp	x19, x20, [sp, #16]
  426fc8:	ldp	x29, x30, [sp], #32
  426fcc:	ret
  426fd0:	ldr	w1, [x0, #48]
  426fd4:	cmp	w1, #0x1
  426fd8:	b.eq	426ff4 <nftw@plt+0x24474>  // b.none
  426fdc:	tst	w1, #0xfffffffd
  426fe0:	b.ne	427010 <nftw@plt+0x24490>  // b.any
  426fe4:	ldp	x1, x0, [x0, #16]
  426fe8:	sub	x0, x0, x1
  426fec:	ubfx	x0, x0, #3, #32
  426ff0:	ret
  426ff4:	ldp	x2, x0, [x0, #16]
  426ff8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  426ffc:	movk	x1, #0xaaab
  427000:	sub	x0, x0, x2
  427004:	asr	x0, x0, #3
  427008:	mul	w0, w0, w1
  42700c:	ret
  427010:	stp	x29, x30, [sp, #-16]!
  427014:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427018:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42701c:	mov	x29, sp
  427020:	add	x2, x2, #0x228
  427024:	add	x0, x0, #0xfc8
  427028:	mov	w1, #0x99f                 	// #2463
  42702c:	bl	402bf0 <nftw@plt+0x70>
  427030:	stp	x29, x30, [sp, #-64]!
  427034:	mov	x29, sp
  427038:	ldr	x1, [x0, #488]
  42703c:	stp	x23, x24, [sp, #48]
  427040:	ldr	w23, [x0, #496]
  427044:	stp	x19, x20, [sp, #16]
  427048:	mov	x19, x0
  42704c:	stp	x21, x22, [sp, #32]
  427050:	ldr	x20, [x1, #24]
  427054:	ldr	x22, [x0, #448]
  427058:	sub	x20, x20, x22
  42705c:	cbz	x23, 4270b8 <nftw@plt+0x24538>
  427060:	asr	x21, x20, #3
  427064:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  427068:	movk	x2, #0xaaab
  42706c:	mov	x0, x22
  427070:	mul	x21, x21, x2
  427074:	cmp	x21, x23
  427078:	b.le	4270e8 <nftw@plt+0x24568>
  42707c:	cmp	x20, #0x18
  427080:	b.gt	4270c0 <nftw@plt+0x24540>
  427084:	cbnz	x20, 427094 <nftw@plt+0x24514>
  427088:	ldr	x2, [x1, #24]
  42708c:	cmp	x2, x0
  427090:	b.eq	427128 <nftw@plt+0x245a8>  // b.none
  427094:	add	x1, x0, #0x18
  427098:	ldp	x23, x24, [sp, #48]
  42709c:	str	x1, [x19, #448]
  4270a0:	ldur	w1, [x22, #-24]
  4270a4:	ldp	x19, x20, [sp, #16]
  4270a8:	ldp	x21, x22, [sp, #32]
  4270ac:	str	w1, [x0]
  4270b0:	ldp	x29, x30, [sp], #64
  4270b4:	ret
  4270b8:	mov	x0, x22
  4270bc:	b	427084 <nftw@plt+0x24504>
  4270c0:	sub	x21, x21, #0x1
  4270c4:	mov	x1, x0
  4270c8:	cmp	x21, x23
  4270cc:	add	x0, x0, #0x18
  4270d0:	csel	x21, x21, x23, le
  4270d4:	add	x21, x21, x21, lsl #1
  4270d8:	lsl	x2, x21, #3
  4270dc:	bl	4024a0 <memmove@plt>
  4270e0:	ldr	x0, [x19, #448]
  4270e4:	b	427094 <nftw@plt+0x24514>
  4270e8:	mov	x0, x1
  4270ec:	bl	425ea8 <nftw@plt+0x23328>
  4270f0:	cmp	x21, x23
  4270f4:	mov	x24, x0
  4270f8:	b.lt	42713c <nftw@plt+0x245bc>  // b.tstop
  4270fc:	ldr	x1, [x19, #488]
  427100:	cmp	x20, #0x18
  427104:	ldr	x4, [x24, #16]
  427108:	ldr	x5, [x1, #24]
  42710c:	ldr	x0, [x19, #448]
  427110:	ldp	x2, x3, [x5, #-24]
  427114:	stp	x2, x3, [x4]
  427118:	ldur	x2, [x5, #-8]
  42711c:	str	x2, [x4, #16]
  427120:	b.le	427084 <nftw@plt+0x24504>
  427124:	b	4270c0 <nftw@plt+0x24540>
  427128:	mov	x0, x1
  42712c:	bl	425ea8 <nftw@plt+0x23328>
  427130:	str	x0, [x19, #488]
  427134:	ldr	x0, [x0, #16]
  427138:	b	427094 <nftw@plt+0x24514>
  42713c:	sub	x2, x23, x21
  427140:	ldr	x1, [x0, #16]
  427144:	add	x2, x2, x2, lsl #1
  427148:	add	x0, x1, #0x18
  42714c:	lsl	x2, x2, #3
  427150:	bl	4024a0 <memmove@plt>
  427154:	b	4270fc <nftw@plt+0x2457c>
  427158:	ldrb	w1, [x0, #16]
  42715c:	cbnz	w1, 427164 <nftw@plt+0x245e4>
  427160:	b	426920 <nftw@plt+0x23da0>
  427164:	mov	w0, #0x0                   	// #0
  427168:	ret
  42716c:	nop
  427170:	mov	x1, x0
  427174:	ldrb	w0, [x0, #4]
  427178:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42717c:	add	x2, x2, #0xa80
  427180:	lsl	x0, x0, #4
  427184:	ldr	w0, [x2, x0]
  427188:	cmp	w0, #0x1
  42718c:	b.eq	4271a4 <nftw@plt+0x24624>  // b.none
  427190:	cmp	w0, #0x2
  427194:	mov	w0, #0x6                   	// #6
  427198:	b.ne	4271a0 <nftw@plt+0x24620>  // b.any
  42719c:	ldr	w0, [x1, #8]
  4271a0:	ret
  4271a4:	ldr	x0, [x1, #8]
  4271a8:	ldr	w0, [x0, #8]
  4271ac:	add	w0, w0, w0, lsl #2
  4271b0:	lsl	w0, w0, #1
  4271b4:	ret
  4271b8:	stp	x29, x30, [sp, #-48]!
  4271bc:	mov	x29, sp
  4271c0:	stp	x19, x20, [sp, #16]
  4271c4:	mov	x20, x0
  4271c8:	ldr	w0, [x1, #8]
  4271cc:	stp	x21, x22, [sp, #32]
  4271d0:	ldr	x21, [x1]
  4271d4:	cbz	w0, 42722c <nftw@plt+0x246ac>
  4271d8:	mov	x22, x1
  4271dc:	mov	x19, #0x0                   	// #0
  4271e0:	b	4271fc <nftw@plt+0x2467c>
  4271e4:	strb	w2, [x0], #1
  4271e8:	add	x19, x19, #0x1
  4271ec:	mov	x20, x0
  4271f0:	ldr	w0, [x22, #8]
  4271f4:	cmp	x0, x19
  4271f8:	b.ls	42722c <nftw@plt+0x246ac>  // b.plast
  4271fc:	ldrb	w2, [x21, x19]
  427200:	mov	x0, x20
  427204:	add	x1, x21, x19
  427208:	tbz	w2, #7, 4271e4 <nftw@plt+0x24664>
  42720c:	bl	425ff8 <nftw@plt+0x23478>
  427210:	sub	x19, x19, #0x1
  427214:	add	x19, x0, x19
  427218:	ldr	w0, [x22, #8]
  42721c:	add	x19, x19, #0x1
  427220:	add	x20, x20, #0xa
  427224:	cmp	x0, x19
  427228:	b.hi	4271fc <nftw@plt+0x2467c>  // b.pmore
  42722c:	mov	x0, x20
  427230:	ldp	x19, x20, [sp, #16]
  427234:	ldp	x21, x22, [sp, #32]
  427238:	ldp	x29, x30, [sp], #48
  42723c:	ret
  427240:	stp	x29, x30, [sp, #-32]!
  427244:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427248:	add	x4, x4, #0xa80
  42724c:	mov	x29, sp
  427250:	stp	x19, x20, [sp, #16]
  427254:	mov	x19, x2
  427258:	ldrb	w2, [x1, #4]
  42725c:	mov	x20, x1
  427260:	sbfiz	x1, x2, #4, #32
  427264:	add	x5, x4, x1
  427268:	ldr	w1, [x4, x1]
  42726c:	cmp	w1, #0x2
  427270:	b.eq	427310 <nftw@plt+0x24790>  // b.none
  427274:	b.hi	4272b0 <nftw@plt+0x24730>  // b.pmore
  427278:	and	w3, w3, #0xff
  42727c:	cbz	w1, 4272dc <nftw@plt+0x2475c>
  427280:	cbz	w3, 427334 <nftw@plt+0x247b4>
  427284:	ldr	x1, [x20, #16]
  427288:	mov	x0, x19
  42728c:	ldr	w2, [x1, #8]
  427290:	ldr	x1, [x1]
  427294:	bl	402490 <memcpy@plt>
  427298:	ldr	x0, [x20, #16]
  42729c:	ldr	w0, [x0, #8]
  4272a0:	add	x0, x19, x0
  4272a4:	ldp	x19, x20, [sp, #16]
  4272a8:	ldp	x29, x30, [sp], #32
  4272ac:	ret
  4272b0:	cmp	w1, #0x3
  4272b4:	b.ne	4272cc <nftw@plt+0x2474c>  // b.any
  4272b8:	ldr	x3, [x5, #8]
  4272bc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4272c0:	mov	w1, #0x4                   	// #4
  4272c4:	add	x2, x2, #0x250
  4272c8:	bl	41f298 <nftw@plt+0x1c718>
  4272cc:	mov	x0, x19
  4272d0:	ldp	x19, x20, [sp, #16]
  4272d4:	ldp	x29, x30, [sp], #32
  4272d8:	ret
  4272dc:	ldrh	w0, [x20, #6]
  4272e0:	tbnz	w0, #1, 427348 <nftw@plt+0x247c8>
  4272e4:	tbnz	w0, #4, 427280 <nftw@plt+0x24700>
  4272e8:	ldr	x2, [x5, #8]
  4272ec:	mov	x0, x19
  4272f0:	ldrb	w1, [x2], #1
  4272f4:	cbz	w1, 4272d0 <nftw@plt+0x24750>
  4272f8:	strb	w1, [x0], #1
  4272fc:	ldrb	w1, [x2], #1
  427300:	cbnz	w1, 4272f8 <nftw@plt+0x24778>
  427304:	ldp	x19, x20, [sp, #16]
  427308:	ldp	x29, x30, [sp], #32
  42730c:	ret
  427310:	ldr	w2, [x20, #8]
  427314:	mov	x0, x19
  427318:	ldr	x1, [x20, #16]
  42731c:	bl	402490 <memcpy@plt>
  427320:	ldr	w0, [x20, #8]
  427324:	add	x0, x19, x0
  427328:	ldp	x19, x20, [sp, #16]
  42732c:	ldp	x29, x30, [sp], #32
  427330:	ret
  427334:	mov	x0, x19
  427338:	ldr	x1, [x20, #8]
  42733c:	ldp	x19, x20, [sp, #16]
  427340:	ldp	x29, x30, [sp], #32
  427344:	b	4271b8 <nftw@plt+0x24638>
  427348:	add	x4, x4, #0x540
  42734c:	sub	w2, w2, #0x25
  427350:	ldr	x2, [x4, w2, sxtw #3]
  427354:	b	4272ec <nftw@plt+0x2476c>
  427358:	stp	x29, x30, [sp, #-48]!
  42735c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427360:	mov	x29, sp
  427364:	stp	x19, x20, [sp, #16]
  427368:	mov	x20, x1
  42736c:	add	x1, x3, #0xa80
  427370:	stp	x21, x22, [sp, #32]
  427374:	mov	x21, x0
  427378:	ldrb	w0, [x20, #4]
  42737c:	mov	x22, x2
  427380:	lsl	x0, x0, #4
  427384:	ldr	w0, [x1, x0]
  427388:	cmp	w0, #0x1
  42738c:	b.eq	42742c <nftw@plt+0x248ac>  // b.none
  427390:	cmp	w0, #0x2
  427394:	mov	x0, #0x6                   	// #6
  427398:	b.ne	4273a0 <nftw@plt+0x24820>  // b.any
  42739c:	ldr	w0, [x20, #8]
  4273a0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4273a4:	mov	x2, x0
  4273a8:	mov	x19, x0
  4273ac:	mov	x1, x20
  4273b0:	mov	x0, x21
  4273b4:	mov	w3, #0x0                   	// #0
  4273b8:	bl	427240 <nftw@plt+0x246c0>
  4273bc:	sub	x5, x0, x19
  4273c0:	ldr	w1, [x22]
  4273c4:	mov	x0, x21
  4273c8:	ldr	w2, [x20]
  4273cc:	cmp	w1, #0x1
  4273d0:	b.eq	427400 <nftw@plt+0x24880>  // b.none
  4273d4:	mov	x6, x19
  4273d8:	mov	w3, #0x0                   	// #0
  4273dc:	mov	w1, #0x10                  	// #16
  4273e0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4273e4:	add	x4, x4, #0x280
  4273e8:	bl	41f4d0 <nftw@plt+0x1c950>
  4273ec:	mov	x0, x19
  4273f0:	ldp	x19, x20, [sp, #16]
  4273f4:	ldp	x21, x22, [sp, #32]
  4273f8:	ldp	x29, x30, [sp], #48
  4273fc:	b	402910 <free@plt>
  427400:	mov	x6, x19
  427404:	mov	w3, #0x0                   	// #0
  427408:	mov	w1, #0x10                  	// #16
  42740c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427410:	add	x4, x4, #0x268
  427414:	bl	41f4d0 <nftw@plt+0x1c950>
  427418:	mov	x0, x19
  42741c:	ldp	x19, x20, [sp, #16]
  427420:	ldp	x21, x22, [sp, #32]
  427424:	ldp	x29, x30, [sp], #48
  427428:	b	402910 <free@plt>
  42742c:	ldr	x0, [x20, #8]
  427430:	ldr	w0, [x0, #8]
  427434:	add	w0, w0, w0, lsl #2
  427438:	lsl	w0, w0, #1
  42743c:	b	4273a0 <nftw@plt+0x24820>
  427440:	tst	w1, #0x2
  427444:	mov	w2, w0
  427448:	and	w1, w1, #0xff
  42744c:	b.eq	427468 <nftw@plt+0x248e8>  // b.none
  427450:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427454:	add	x1, x1, #0xa80
  427458:	add	x1, x1, #0x540
  42745c:	sub	w0, w0, #0x25
  427460:	ldr	x0, [x1, w0, sxtw #3]
  427464:	ret
  427468:	tbnz	w1, #4, 427480 <nftw@plt+0x24900>
  42746c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427470:	add	x0, x0, #0xa80
  427474:	add	x0, x0, w2, sxtw #4
  427478:	ldr	x0, [x0, #8]
  42747c:	ret
  427480:	b	4351f8 <nftw@plt+0x32678>
  427484:	nop
  427488:	stp	x29, x30, [sp, #-64]!
  42748c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427490:	mov	x29, sp
  427494:	stp	x21, x22, [sp, #32]
  427498:	mov	x21, x0
  42749c:	add	x0, x2, #0xa80
  4274a0:	stp	x19, x20, [sp, #16]
  4274a4:	mov	x20, x1
  4274a8:	ldrb	w2, [x21, #4]
  4274ac:	sbfiz	x1, x2, #4, #32
  4274b0:	add	x3, x0, x1
  4274b4:	ldr	w1, [x0, x1]
  4274b8:	cmp	w1, #0x1
  4274bc:	b.eq	4274dc <nftw@plt+0x2495c>  // b.none
  4274c0:	cmp	w1, #0x2
  4274c4:	b.eq	4275a0 <nftw@plt+0x24a20>  // b.none
  4274c8:	cbz	w1, 42755c <nftw@plt+0x249dc>
  4274cc:	ldp	x19, x20, [sp, #16]
  4274d0:	ldp	x21, x22, [sp, #32]
  4274d4:	ldp	x29, x30, [sp], #64
  4274d8:	ret
  4274dc:	ldr	x0, [x21, #8]
  4274e0:	ldr	w1, [x0, #8]
  4274e4:	ldr	x22, [x0]
  4274e8:	cbz	w1, 4274cc <nftw@plt+0x2494c>
  4274ec:	mov	x19, #0x0                   	// #0
  4274f0:	b	427528 <nftw@plt+0x249a8>
  4274f4:	ldr	x1, [x0]
  4274f8:	ldp	x0, x2, [x20, #40]
  4274fc:	ldrb	w1, [x1, x19]
  427500:	add	x3, x0, #0x1
  427504:	cmp	x0, x2
  427508:	b.cs	4275d4 <nftw@plt+0x24a54>  // b.hs, b.nlast
  42750c:	str	x3, [x20, #40]
  427510:	strb	w1, [x0]
  427514:	ldr	x0, [x21, #8]
  427518:	add	x19, x19, #0x1
  42751c:	ldr	w1, [x0, #8]
  427520:	cmp	x1, x19
  427524:	b.ls	4274cc <nftw@plt+0x2494c>  // b.plast
  427528:	ldrb	w2, [x22, x19]
  42752c:	add	x1, x22, x19
  427530:	tbz	w2, #7, 4274f4 <nftw@plt+0x24974>
  427534:	add	x0, sp, #0x30
  427538:	sub	x19, x19, #0x1
  42753c:	bl	425ff8 <nftw@plt+0x23478>
  427540:	add	x19, x0, x19
  427544:	mov	x3, x20
  427548:	add	x0, sp, #0x30
  42754c:	mov	x2, #0xa                   	// #10
  427550:	mov	x1, #0x1                   	// #1
  427554:	bl	4024d0 <fwrite_unlocked@plt>
  427558:	b	427514 <nftw@plt+0x24994>
  42755c:	ldrh	w1, [x21, #6]
  427560:	tbnz	w1, #1, 4275c4 <nftw@plt+0x24a44>
  427564:	tbnz	w1, #4, 4274dc <nftw@plt+0x2495c>
  427568:	ldr	x19, [x3, #8]
  42756c:	ldrb	w1, [x19]
  427570:	b	427584 <nftw@plt+0x24a04>
  427574:	str	x3, [x20, #40]
  427578:	strb	w1, [x0]
  42757c:	ldrb	w1, [x19, #1]!
  427580:	cbz	w1, 4274cc <nftw@plt+0x2494c>
  427584:	ldp	x0, x2, [x20, #40]
  427588:	add	x3, x0, #0x1
  42758c:	cmp	x0, x2
  427590:	b.cc	427574 <nftw@plt+0x249f4>  // b.lo, b.ul, b.last
  427594:	mov	x0, x20
  427598:	bl	402800 <__overflow@plt>
  42759c:	b	42757c <nftw@plt+0x249fc>
  4275a0:	ldr	w2, [x21, #8]
  4275a4:	mov	x3, x20
  4275a8:	ldr	x0, [x21, #16]
  4275ac:	mov	x1, #0x1                   	// #1
  4275b0:	bl	4024d0 <fwrite_unlocked@plt>
  4275b4:	ldp	x19, x20, [sp, #16]
  4275b8:	ldp	x21, x22, [sp, #32]
  4275bc:	ldp	x29, x30, [sp], #64
  4275c0:	ret
  4275c4:	add	x0, x0, #0x540
  4275c8:	sub	w2, w2, #0x25
  4275cc:	ldr	x19, [x0, w2, sxtw #3]
  4275d0:	b	42756c <nftw@plt+0x249ec>
  4275d4:	mov	x0, x20
  4275d8:	bl	402800 <__overflow@plt>
  4275dc:	b	427514 <nftw@plt+0x24994>
  4275e0:	ldr	w2, [x0, #4]
  4275e4:	mov	x3, x0
  4275e8:	ldr	w0, [x1, #4]
  4275ec:	and	w2, w2, #0xffff00ff
  4275f0:	and	w0, w0, #0xffff00ff
  4275f4:	cmp	w2, w0
  4275f8:	b.eq	427604 <nftw@plt+0x24a84>  // b.none
  4275fc:	mov	w0, #0x0                   	// #0
  427600:	ret
  427604:	ldrb	w2, [x3, #4]
  427608:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42760c:	add	x0, x0, #0xa80
  427610:	sbfiz	x4, x2, #4, #32
  427614:	ldr	w0, [x0, x4]
  427618:	cmp	w0, #0x2
  42761c:	b.eq	42768c <nftw@plt+0x24b0c>  // b.none
  427620:	cmp	w0, #0x3
  427624:	b.eq	427658 <nftw@plt+0x24ad8>  // b.none
  427628:	cmp	w0, #0x1
  42762c:	b.eq	427640 <nftw@plt+0x24ac0>  // b.none
  427630:	cmp	w2, #0x26
  427634:	mov	w0, #0x1                   	// #1
  427638:	b.eq	4276c8 <nftw@plt+0x24b48>  // b.none
  42763c:	ret
  427640:	ldr	x2, [x1, #8]
  427644:	mov	w0, #0x0                   	// #0
  427648:	ldr	x4, [x3, #8]
  42764c:	cmp	x4, x2
  427650:	b.eq	427678 <nftw@plt+0x24af8>  // b.none
  427654:	ret
  427658:	cmp	w2, #0x50
  42765c:	mov	w0, #0x1                   	// #1
  427660:	b.ne	42763c <nftw@plt+0x24abc>  // b.any
  427664:	ldr	w2, [x1, #8]
  427668:	mov	w0, #0x0                   	// #0
  42766c:	ldr	w4, [x3, #8]
  427670:	cmp	w4, w2
  427674:	b.ne	42763c <nftw@plt+0x24abc>  // b.any
  427678:	ldr	x0, [x1, #16]
  42767c:	ldr	x2, [x3, #16]
  427680:	cmp	x2, x0
  427684:	cset	w0, eq  // eq = none
  427688:	ret
  42768c:	ldr	w4, [x1, #8]
  427690:	mov	w0, #0x0                   	// #0
  427694:	ldr	w2, [x3, #8]
  427698:	cmp	w2, w4
  42769c:	b.ne	42763c <nftw@plt+0x24abc>  // b.any
  4276a0:	stp	x29, x30, [sp, #-16]!
  4276a4:	mov	w2, w2
  4276a8:	mov	x29, sp
  4276ac:	ldr	x1, [x1, #16]
  4276b0:	ldr	x0, [x3, #16]
  4276b4:	bl	402850 <memcmp@plt>
  4276b8:	cmp	w0, #0x0
  4276bc:	cset	w0, eq  // eq = none
  4276c0:	ldp	x29, x30, [sp], #16
  4276c4:	ret
  4276c8:	ldr	w0, [x1, #8]
  4276cc:	ldr	w2, [x3, #8]
  4276d0:	cmp	w2, w0
  4276d4:	cset	w0, eq  // eq = none
  4276d8:	ret
  4276dc:	nop
  4276e0:	ldrh	w6, [x1, #6]
  4276e4:	mov	w5, #0x35                  	// #53
  4276e8:	ldrh	w4, [x2, #6]
  4276ec:	mov	x8, x0
  4276f0:	ldrb	w3, [x1, #4]
  4276f4:	tst	x6, #0x10
  4276f8:	ldrb	w6, [x2, #4]
  4276fc:	csel	w3, w3, w5, eq  // eq = none
  427700:	tbnz	w4, #4, 4278d8 <nftw@plt+0x24d58>
  427704:	mov	w5, w6
  427708:	mov	w7, w6
  42770c:	mov	w9, w6
  427710:	tbz	w4, #1, 4278b4 <nftw@plt+0x24d34>
  427714:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427718:	add	x4, x4, #0xa80
  42771c:	sub	w5, w5, #0x25
  427720:	add	x0, x4, #0x540
  427724:	ldr	x0, [x0, w5, sxtw #3]
  427728:	ldrb	w5, [x0]
  42772c:	cmp	w5, #0x3d
  427730:	mov	w0, #0x1                   	// #1
  427734:	ccmp	w3, #0xd, #0x0, eq  // eq = none
  427738:	b.le	42776c <nftw@plt+0x24bec>
  42773c:	cmp	w3, #0x12
  427740:	b.eq	42787c <nftw@plt+0x24cfc>  // b.none
  427744:	b.hi	427798 <nftw@plt+0x24c18>  // b.pmore
  427748:	cmp	w3, #0x7
  42774c:	b.eq	42798c <nftw@plt+0x24e0c>  // b.none
  427750:	b.ls	427770 <nftw@plt+0x24bf0>  // b.plast
  427754:	cmp	w3, #0x9
  427758:	b.eq	42794c <nftw@plt+0x24dcc>  // b.none
  42775c:	cmp	w3, #0xa
  427760:	b.ne	427874 <nftw@plt+0x24cf4>  // b.any
  427764:	cmp	w5, #0x7c
  427768:	cset	w0, eq  // eq = none
  42776c:	ret
  427770:	cmp	w3, #0x4
  427774:	b.eq	427958 <nftw@plt+0x24dd8>  // b.none
  427778:	b.ls	42788c <nftw@plt+0x24d0c>  // b.plast
  42777c:	cmp	w3, #0x5
  427780:	b.ne	4278ec <nftw@plt+0x24d6c>  // b.any
  427784:	cmp	w5, #0x2d
  427788:	mov	w0, #0x3e                  	// #62
  42778c:	ccmp	w5, w0, #0x4, ne  // ne = any
  427790:	cset	w0, eq  // eq = none
  427794:	ret
  427798:	cmp	w3, #0x35
  42779c:	b.eq	427964 <nftw@plt+0x24de4>  // b.none
  4277a0:	b.ls	427804 <nftw@plt+0x24c84>  // b.plast
  4277a4:	cmp	w3, #0x3d
  4277a8:	b.eq	42790c <nftw@plt+0x24d8c>  // b.none
  4277ac:	b.ls	427830 <nftw@plt+0x24cb0>  // b.plast
  4277b0:	sub	w3, w3, #0x3e
  4277b4:	cmp	w3, #0x4
  4277b8:	b.hi	4278ec <nftw@plt+0x24d6c>  // b.pmore
  4277bc:	ldrb	w1, [x8, #1161]
  4277c0:	mov	w0, #0x0                   	// #0
  4277c4:	cbz	w1, 42776c <nftw@plt+0x24bec>
  4277c8:	cmp	w7, #0x35
  4277cc:	mov	w0, #0x1                   	// #1
  4277d0:	b.eq	42776c <nftw@plt+0x24bec>  // b.none
  4277d4:	sbfiz	x6, x6, #4, #32
  4277d8:	mov	w0, #0x0                   	// #0
  4277dc:	ldr	w1, [x4, x6]
  4277e0:	cmp	w1, #0x2
  4277e4:	b.ne	42776c <nftw@plt+0x24bec>  // b.any
  4277e8:	ldr	x1, [x2, #16]
  4277ec:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4277f0:	add	x0, x0, #0x248
  4277f4:	ldrb	w1, [x1]
  4277f8:	ldrh	w0, [x0, x1, lsl #1]
  4277fc:	ubfx	x0, x0, #9, #1
  427800:	ret
  427804:	cmp	w3, #0x2f
  427808:	b.eq	427900 <nftw@plt+0x24d80>  // b.none
  42780c:	cmp	w3, #0x30
  427810:	b.ne	42785c <nftw@plt+0x24cdc>  // b.any
  427814:	cmp	w5, #0x2e
  427818:	mov	w0, #0x25                  	// #37
  42781c:	ccmp	w5, w0, #0x4, ne  // ne = any
  427820:	mov	w0, #0x37                  	// #55
  427824:	ccmp	w7, w0, #0x4, ne  // ne = any
  427828:	cset	w0, eq  // eq = none
  42782c:	ret
  427830:	cmp	w3, #0x37
  427834:	b.ne	4278ec <nftw@plt+0x24d6c>  // b.any
  427838:	and	w9, w9, #0xfffffffd
  42783c:	mov	w0, #0x1                   	// #1
  427840:	cmp	w9, #0x35
  427844:	b.eq	42776c <nftw@plt+0x24bec>  // b.none
  427848:	cmp	w5, #0x2b
  42784c:	sub	w5, w5, #0x2d
  427850:	ccmp	w5, w0, #0x0, ne  // ne = any
  427854:	cset	w0, ls  // ls = plast
  427858:	ret
  42785c:	cmp	w3, #0x25
  427860:	b.ne	4278ec <nftw@plt+0x24d6c>  // b.any
  427864:	sub	w5, w5, #0x23
  427868:	tst	w5, #0xfffffffd
  42786c:	cset	w0, eq  // eq = none
  427870:	ret
  427874:	cmp	w3, #0x8
  427878:	b.ne	4278ec <nftw@plt+0x24d6c>  // b.any
  42787c:	and	w5, w5, #0xfffffffb
  427880:	cmp	w5, #0x3a
  427884:	cset	w0, eq  // eq = none
  427888:	ret
  42788c:	cmp	w3, #0x2
  427890:	b.eq	4278f4 <nftw@plt+0x24d74>  // b.none
  427894:	cmp	w3, #0x3
  427898:	b.ne	4278ec <nftw@plt+0x24d6c>  // b.any
  42789c:	sub	w0, w5, #0x3a
  4278a0:	cmp	w5, #0x25
  4278a4:	and	w0, w0, #0xfffffffd
  4278a8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4278ac:	cset	w0, eq  // eq = none
  4278b0:	ret
  4278b4:	sbfiz	x5, x5, #4, #32
  4278b8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4278bc:	add	x4, x4, #0xa80
  4278c0:	add	x10, x4, x5
  4278c4:	ldr	w0, [x4, x5]
  4278c8:	cbnz	w0, 4278e4 <nftw@plt+0x24d64>
  4278cc:	ldr	x0, [x10, #8]
  4278d0:	ldrb	w5, [x0]
  4278d4:	b	42772c <nftw@plt+0x24bac>
  4278d8:	mov	w7, w5
  4278dc:	mov	w9, w5
  4278e0:	b	427710 <nftw@plt+0x24b90>
  4278e4:	mov	w5, #0xffffffff            	// #-1
  4278e8:	b	42773c <nftw@plt+0x24bbc>
  4278ec:	mov	w0, #0x0                   	// #0
  4278f0:	ret
  4278f4:	cmp	w5, #0x3e
  4278f8:	cset	w0, eq  // eq = none
  4278fc:	ret
  427900:	cmp	w5, #0x2a
  427904:	cset	w0, eq  // eq = none
  427908:	ret
  42790c:	ldr	x0, [x1, #16]
  427910:	cmp	w7, #0x35
  427914:	cset	w1, eq  // eq = none
  427918:	ldrb	w0, [x0]
  42791c:	cmp	w0, #0x5c
  427920:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  427924:	b.ne	4279f4 <nftw@plt+0x24e74>  // b.any
  427928:	ldrb	w2, [x8, #1122]
  42792c:	cmp	w0, #0x40
  427930:	mov	w0, #0x0                   	// #0
  427934:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  427938:	b.eq	42776c <nftw@plt+0x24bec>  // b.none
  42793c:	cmp	w7, #0x3e
  427940:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  427944:	cset	w0, ne  // ne = any
  427948:	ret
  42794c:	cmp	w5, #0x26
  427950:	cset	w0, eq  // eq = none
  427954:	ret
  427958:	cmp	w5, #0x2b
  42795c:	cset	w0, eq  // eq = none
  427960:	ret
  427964:	cmp	w7, #0x37
  427968:	b.eq	4279a0 <nftw@plt+0x24e20>  // b.none
  42796c:	cmp	w7, #0x35
  427970:	mov	w1, #0x38                  	// #56
  427974:	mov	w0, #0x1                   	// #1
  427978:	ccmp	w7, w1, #0x4, ne  // ne = any
  42797c:	b.eq	42776c <nftw@plt+0x24bec>  // b.none
  427980:	cmp	w7, #0x3e
  427984:	cset	w0, eq  // eq = none
  427988:	ret
  42798c:	cmp	w5, #0x2f
  427990:	mov	w0, #0x2a                  	// #42
  427994:	ccmp	w5, w0, #0x4, ne  // ne = any
  427998:	cset	w0, eq  // eq = none
  42799c:	ret
  4279a0:	ldr	w1, [x2, #8]
  4279a4:	cbz	w1, 4279f4 <nftw@plt+0x24e74>
  4279a8:	ldr	x0, [x2, #16]
  4279ac:	sub	w1, w1, #0x1
  4279b0:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4279b4:	add	x4, x4, #0x248
  4279b8:	add	x3, x0, #0x1
  4279bc:	mov	w5, #0x204                 	// #516
  4279c0:	add	x3, x1, x3
  4279c4:	nop
  4279c8:	ldrb	w1, [x0]
  4279cc:	add	x0, x0, #0x1
  4279d0:	ldrh	w2, [x4, w1, sxtw #1]
  4279d4:	tst	w5, w2
  4279d8:	b.ne	4279ec <nftw@plt+0x24e6c>  // b.any
  4279dc:	cmp	w1, #0x24
  4279e0:	b.ne	427980 <nftw@plt+0x24e00>  // b.any
  4279e4:	ldrb	w1, [x8, #1146]
  4279e8:	cbz	w1, 427980 <nftw@plt+0x24e00>
  4279ec:	cmp	x3, x0
  4279f0:	b.ne	4279c8 <nftw@plt+0x24e48>  // b.any
  4279f4:	mov	w0, #0x1                   	// #1
  4279f8:	ret
  4279fc:	nop
  427a00:	stp	x29, x30, [sp, #-48]!
  427a04:	mov	x29, sp
  427a08:	stp	x19, x20, [sp, #16]
  427a0c:	mov	x20, x1
  427a10:	stp	x21, x22, [sp, #32]
  427a14:	mov	x21, x0
  427a18:	bl	431988 <nftw@plt+0x2ee08>
  427a1c:	mov	x19, x0
  427a20:	ldrb	w0, [x0, #4]
  427a24:	cmp	w0, #0x16
  427a28:	b.eq	427a74 <nftw@plt+0x24ef4>  // b.none
  427a2c:	mov	w22, #0x20                  	// #32
  427a30:	mov	x1, x20
  427a34:	mov	x0, x19
  427a38:	bl	427488 <nftw@plt+0x24908>
  427a3c:	mov	x0, x21
  427a40:	bl	431988 <nftw@plt+0x2ee08>
  427a44:	ldrh	w1, [x0, #6]
  427a48:	mov	x19, x0
  427a4c:	tbz	w1, #0, 427a68 <nftw@plt+0x24ee8>
  427a50:	ldp	x1, x0, [x20, #40]
  427a54:	add	x2, x1, #0x1
  427a58:	cmp	x1, x0
  427a5c:	b.cs	427aa0 <nftw@plt+0x24f20>  // b.hs, b.nlast
  427a60:	str	x2, [x20, #40]
  427a64:	strb	w22, [x1]
  427a68:	ldrb	w1, [x19, #4]
  427a6c:	cmp	w1, #0x16
  427a70:	b.ne	427a30 <nftw@plt+0x24eb0>  // b.any
  427a74:	ldp	x0, x1, [x20, #40]
  427a78:	cmp	x0, x1
  427a7c:	b.cs	427ab0 <nftw@plt+0x24f30>  // b.hs, b.nlast
  427a80:	add	x1, x0, #0x1
  427a84:	str	x1, [x20, #40]
  427a88:	mov	w1, #0xa                   	// #10
  427a8c:	strb	w1, [x0]
  427a90:	ldp	x19, x20, [sp, #16]
  427a94:	ldp	x21, x22, [sp, #32]
  427a98:	ldp	x29, x30, [sp], #48
  427a9c:	ret
  427aa0:	mov	x0, x20
  427aa4:	mov	w1, #0x20                  	// #32
  427aa8:	bl	402800 <__overflow@plt>
  427aac:	b	427a68 <nftw@plt+0x24ee8>
  427ab0:	mov	x0, x20
  427ab4:	mov	w1, #0xa                   	// #10
  427ab8:	ldp	x19, x20, [sp, #16]
  427abc:	ldp	x21, x22, [sp, #32]
  427ac0:	ldp	x29, x30, [sp], #48
  427ac4:	b	402800 <__overflow@plt>
  427ac8:	stp	x29, x30, [sp, #-80]!
  427acc:	mov	x29, sp
  427ad0:	stp	x19, x20, [sp, #16]
  427ad4:	stp	x21, x22, [sp, #32]
  427ad8:	mov	x22, x0
  427adc:	stp	x23, x24, [sp, #48]
  427ae0:	stp	x25, x26, [sp, #64]
  427ae4:	cbz	x1, 427c1c <nftw@plt+0x2509c>
  427ae8:	mov	x19, x1
  427aec:	mov	x0, x1
  427af0:	bl	4024f0 <strlen@plt>
  427af4:	add	w23, w0, #0x78
  427af8:	add	w26, w0, #0x2
  427afc:	add	w20, w0, #0x2
  427b00:	add	w0, w0, #0x78
  427b04:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  427b08:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427b0c:	mov	x2, x19
  427b10:	mov	x21, x0
  427b14:	add	x1, x1, #0x298
  427b18:	bl	4025b0 <sprintf@plt>
  427b1c:	mov	x0, x22
  427b20:	bl	431988 <nftw@plt+0x2ee08>
  427b24:	ldrb	w1, [x0, #4]
  427b28:	mov	x19, x0
  427b2c:	cmp	w1, #0x16
  427b30:	b.eq	427bfc <nftw@plt+0x2507c>  // b.none
  427b34:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  427b38:	mov	w25, #0x20                  	// #32
  427b3c:	add	x24, x24, #0xa80
  427b40:	b	427ba4 <nftw@plt+0x25024>
  427b44:	cmp	w1, #0x2
  427b48:	b.ne	427b50 <nftw@plt+0x24fd0>  // b.any
  427b4c:	ldr	w0, [x19, #8]
  427b50:	add	w1, w26, #0x2
  427b54:	add	w1, w1, w0
  427b58:	cmp	w1, w23
  427b5c:	b.hi	427bd8 <nftw@plt+0x25058>  // b.pmore
  427b60:	add	x2, x21, w26, uxtw
  427b64:	mov	x1, x19
  427b68:	mov	w3, #0x0                   	// #0
  427b6c:	mov	x0, x22
  427b70:	bl	427240 <nftw@plt+0x246c0>
  427b74:	sub	x20, x0, x21
  427b78:	mov	x0, x22
  427b7c:	bl	431988 <nftw@plt+0x2ee08>
  427b80:	mov	x19, x0
  427b84:	ldrh	w0, [x0, #6]
  427b88:	mov	w26, w20
  427b8c:	tbz	w0, #0, 427b98 <nftw@plt+0x25018>
  427b90:	add	w26, w20, #0x1
  427b94:	strb	w25, [x21, w20, uxtw]
  427b98:	ldrb	w1, [x19, #4]
  427b9c:	cmp	w1, #0x16
  427ba0:	b.eq	427bf8 <nftw@plt+0x25078>  // b.none
  427ba4:	sbfiz	x1, x1, #4, #32
  427ba8:	mov	w0, #0x6                   	// #6
  427bac:	ldr	w1, [x24, x1]
  427bb0:	cmp	w1, #0x1
  427bb4:	b.ne	427b44 <nftw@plt+0x24fc4>  // b.any
  427bb8:	ldr	x0, [x19, #8]
  427bbc:	ldr	w1, [x0, #8]
  427bc0:	add	w1, w1, w1, lsl #2
  427bc4:	lsl	w0, w1, #1
  427bc8:	add	w1, w26, #0x2
  427bcc:	add	w1, w1, w0
  427bd0:	cmp	w1, w23
  427bd4:	b.ls	427b60 <nftw@plt+0x24fe0>  // b.plast
  427bd8:	lsl	w2, w23, #1
  427bdc:	mov	x0, x21
  427be0:	cmp	w1, w2
  427be4:	csel	w23, w1, w2, cs  // cs = hs, nlast
  427be8:	csel	w1, w1, w2, cs  // cs = hs, nlast
  427bec:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  427bf0:	mov	x21, x0
  427bf4:	b	427b60 <nftw@plt+0x24fe0>
  427bf8:	mov	w20, w26
  427bfc:	strb	wzr, [x21, x20]
  427c00:	mov	x0, x21
  427c04:	ldp	x19, x20, [sp, #16]
  427c08:	ldp	x21, x22, [sp, #32]
  427c0c:	ldp	x23, x24, [sp, #48]
  427c10:	ldp	x25, x26, [sp, #64]
  427c14:	ldp	x29, x30, [sp], #80
  427c18:	ret
  427c1c:	mov	x0, #0x78                  	// #120
  427c20:	mov	x20, #0x0                   	// #0
  427c24:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  427c28:	mov	w23, #0x78                  	// #120
  427c2c:	mov	x21, x0
  427c30:	mov	w26, #0x0                   	// #0
  427c34:	b	427b1c <nftw@plt+0x24f9c>
  427c38:	mov	x2, x1
  427c3c:	nop
  427c40:	mov	x3, x2
  427c44:	ldr	x2, [x2]
  427c48:	cbnz	x2, 427c40 <nftw@plt+0x250c0>
  427c4c:	ldr	x2, [x0, #72]
  427c50:	str	x2, [x3]
  427c54:	str	x1, [x0, #72]
  427c58:	ret
  427c5c:	nop
  427c60:	add	x4, x0, #0x48
  427c64:	ldr	x0, [x0, #72]
  427c68:	cbz	x0, 427ca0 <nftw@plt+0x25120>
  427c6c:	add	x5, x1, x1, lsl #1
  427c70:	mov	x2, #0x1f40                	// #8000
  427c74:	add	x5, x2, x5, lsr #1
  427c78:	ldr	x3, [x0, #8]
  427c7c:	ldr	x2, [x0, #24]
  427c80:	sub	x2, x2, x3
  427c84:	cmp	x2, x1
  427c88:	b.cc	427c94 <nftw@plt+0x25114>  // b.lo, b.ul, b.last
  427c8c:	cmp	x5, x2
  427c90:	b.cs	427ce8 <nftw@plt+0x25168>  // b.hs, b.nlast
  427c94:	mov	x4, x0
  427c98:	ldr	x0, [x0]
  427c9c:	cbnz	x0, 427c78 <nftw@plt+0x250f8>
  427ca0:	stp	x29, x30, [sp, #-32]!
  427ca4:	mov	x29, sp
  427ca8:	str	x19, [sp, #16]
  427cac:	mov	x19, #0x1f40                	// #8000
  427cb0:	cmp	x1, x19
  427cb4:	csel	x19, x1, x19, cs  // cs = hs, nlast
  427cb8:	add	x19, x19, #0x7
  427cbc:	and	x19, x19, #0xfffffffffffffff8
  427cc0:	add	x0, x19, #0x20
  427cc4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  427cc8:	mov	x1, x0
  427ccc:	add	x0, x0, x19
  427cd0:	stp	x1, x1, [x0, #8]
  427cd4:	str	x0, [x0, #24]
  427cd8:	str	xzr, [x1, x19]
  427cdc:	ldr	x19, [sp, #16]
  427ce0:	ldp	x29, x30, [sp], #32
  427ce4:	ret
  427ce8:	ldr	x1, [x0]
  427cec:	str	x1, [x4]
  427cf0:	str	xzr, [x0]
  427cf4:	str	x3, [x0, #16]
  427cf8:	ret
  427cfc:	nop
  427d00:	stp	x29, x30, [sp, #-32]!
  427d04:	mov	x29, sp
  427d08:	stp	x19, x20, [sp, #16]
  427d0c:	mov	x19, x1
  427d10:	ldp	x1, x3, [x1, #16]
  427d14:	sub	x1, x3, x1
  427d18:	add	x1, x2, x1, lsl #1
  427d1c:	bl	427c60 <nftw@plt+0x250e0>
  427d20:	ldp	x1, x2, [x19, #16]
  427d24:	mov	x20, x0
  427d28:	ldr	x0, [x0, #8]
  427d2c:	str	x20, [x19]
  427d30:	sub	x2, x2, x1
  427d34:	bl	402490 <memcpy@plt>
  427d38:	mov	x0, x20
  427d3c:	ldp	x19, x20, [sp, #16]
  427d40:	ldp	x29, x30, [sp], #32
  427d44:	ret
  427d48:	stp	x29, x30, [sp, #-80]!
  427d4c:	mov	x29, sp
  427d50:	stp	x25, x26, [sp, #64]
  427d54:	ldr	x25, [x3]
  427d58:	stp	x19, x20, [sp, #16]
  427d5c:	mov	x20, x2
  427d60:	stp	x21, x22, [sp, #32]
  427d64:	mov	x22, x3
  427d68:	mov	x21, x4
  427d6c:	stp	x23, x24, [sp, #48]
  427d70:	mov	x23, x1
  427d74:	ldr	x19, [x4]
  427d78:	cbz	x25, 427e00 <nftw@plt+0x25280>
  427d7c:	mov	x26, x0
  427d80:	ldp	x0, x24, [x19, #16]
  427d84:	sub	x24, x24, x0
  427d88:	cmp	x24, x2
  427d8c:	b.cc	427dc8 <nftw@plt+0x25248>  // b.lo, b.ul, b.last
  427d90:	mov	x1, x23
  427d94:	mov	x2, x20
  427d98:	bl	402490 <memcpy@plt>
  427d9c:	ldr	x2, [x19, #16]
  427da0:	ldp	x23, x24, [sp, #48]
  427da4:	add	x20, x2, x20
  427da8:	str	x20, [x19, #16]
  427dac:	str	x25, [x22]
  427db0:	ldp	x25, x26, [sp, #64]
  427db4:	str	x19, [x21]
  427db8:	ldp	x19, x20, [sp, #16]
  427dbc:	ldp	x21, x22, [sp, #32]
  427dc0:	ldp	x29, x30, [sp], #80
  427dc4:	ret
  427dc8:	mov	x2, x24
  427dcc:	bl	402490 <memcpy@plt>
  427dd0:	ldr	x3, [x19, #16]
  427dd4:	sub	x20, x20, x24
  427dd8:	mov	x1, x19
  427ddc:	mov	x0, x26
  427de0:	add	x3, x3, x24
  427de4:	str	x3, [x19, #16]
  427de8:	mov	x2, x20
  427dec:	add	x23, x23, x24
  427df0:	bl	427d00 <nftw@plt+0x25180>
  427df4:	mov	x19, x0
  427df8:	ldr	x0, [x0, #16]
  427dfc:	b	427d90 <nftw@plt+0x25210>
  427e00:	mov	x1, x2
  427e04:	bl	427c60 <nftw@plt+0x250e0>
  427e08:	mov	x25, x0
  427e0c:	mov	x19, x0
  427e10:	ldr	x0, [x0, #16]
  427e14:	b	427d90 <nftw@plt+0x25210>
  427e18:	stp	x29, x30, [sp, #-48]!
  427e1c:	mov	x29, sp
  427e20:	stp	x19, x20, [sp, #16]
  427e24:	ldr	x20, [x1]
  427e28:	str	x21, [sp, #32]
  427e2c:	mov	x21, x1
  427e30:	ldp	x1, x3, [x20, #16]
  427e34:	sub	x1, x3, x1
  427e38:	add	x1, x2, x1, lsl #1
  427e3c:	bl	427c60 <nftw@plt+0x250e0>
  427e40:	ldp	x1, x2, [x20, #16]
  427e44:	mov	x19, x0
  427e48:	ldr	x0, [x0, #8]
  427e4c:	sub	x2, x2, x1
  427e50:	bl	402490 <memcpy@plt>
  427e54:	str	x20, [x19]
  427e58:	str	x19, [x21]
  427e5c:	ldp	x19, x20, [sp, #16]
  427e60:	ldr	x21, [sp, #32]
  427e64:	ldp	x29, x30, [sp], #48
  427e68:	ret
  427e6c:	nop
  427e70:	cbz	x0, 427ea4 <nftw@plt+0x25324>
  427e74:	stp	x29, x30, [sp, #-32]!
  427e78:	mov	x29, sp
  427e7c:	str	x19, [sp, #16]
  427e80:	mov	x19, x0
  427e84:	nop
  427e88:	ldr	x0, [x19, #8]
  427e8c:	ldr	x19, [x19]
  427e90:	bl	402910 <free@plt>
  427e94:	cbnz	x19, 427e88 <nftw@plt+0x25308>
  427e98:	ldr	x19, [sp, #16]
  427e9c:	ldp	x29, x30, [sp], #32
  427ea0:	ret
  427ea4:	ret
  427ea8:	stp	x29, x30, [sp, #-32]!
  427eac:	mov	x29, sp
  427eb0:	ldr	x2, [x0, #64]
  427eb4:	stp	x19, x20, [sp, #16]
  427eb8:	mov	x19, x1
  427ebc:	ldp	x3, x4, [x2, #16]
  427ec0:	sub	x4, x4, x3
  427ec4:	cmp	x4, x1
  427ec8:	b.cc	427ee4 <nftw@plt+0x25364>  // b.lo, b.ul, b.last
  427ecc:	add	x19, x3, x19
  427ed0:	str	x19, [x2, #16]
  427ed4:	mov	x0, x3
  427ed8:	ldp	x19, x20, [sp, #16]
  427edc:	ldp	x29, x30, [sp], #32
  427ee0:	ret
  427ee4:	mov	x20, x0
  427ee8:	bl	427c60 <nftw@plt+0x250e0>
  427eec:	mov	x2, x0
  427ef0:	ldr	x3, [x0, #16]
  427ef4:	ldr	x0, [x20, #64]
  427ef8:	str	x0, [x2]
  427efc:	str	x2, [x20, #64]
  427f00:	add	x19, x3, x19
  427f04:	str	x19, [x2, #16]
  427f08:	mov	x0, x3
  427f0c:	ldp	x19, x20, [sp, #16]
  427f10:	ldp	x29, x30, [sp], #32
  427f14:	ret
  427f18:	stp	x29, x30, [sp, #-48]!
  427f1c:	mov	x29, sp
  427f20:	stp	x19, x20, [sp, #16]
  427f24:	mov	w19, w3
  427f28:	mov	x20, x1
  427f2c:	add	w1, w3, #0x1
  427f30:	stp	x21, x22, [sp, #32]
  427f34:	mov	w22, w4
  427f38:	mov	x21, x2
  427f3c:	bl	427ea8 <nftw@plt+0x25328>
  427f40:	mov	x1, x21
  427f44:	mov	x21, x0
  427f48:	mov	w2, w19
  427f4c:	bl	402490 <memcpy@plt>
  427f50:	strb	wzr, [x21, w19, uxtw]
  427f54:	strb	w22, [x20, #4]
  427f58:	str	w19, [x20, #8]
  427f5c:	str	x21, [x20, #16]
  427f60:	ldp	x19, x20, [sp, #16]
  427f64:	ldp	x21, x22, [sp, #32]
  427f68:	ldp	x29, x30, [sp], #48
  427f6c:	ret
  427f70:	stp	x29, x30, [sp, #-224]!
  427f74:	mov	x3, x2
  427f78:	mov	x29, sp
  427f7c:	stp	x19, x20, [sp, #16]
  427f80:	stp	x21, x22, [sp, #32]
  427f84:	mov	x21, x1
  427f88:	stp	x23, x24, [sp, #48]
  427f8c:	stp	x27, x28, [sp, #80]
  427f90:	mov	x28, x0
  427f94:	ldrb	w1, [x2]
  427f98:	str	x2, [sp, #112]
  427f9c:	mov	w2, #0x55                  	// #85
  427fa0:	cmp	w1, #0x4c
  427fa4:	ccmp	w1, w2, #0x4, ne  // ne = any
  427fa8:	b.ne	428038 <nftw@plt+0x254b8>  // b.any
  427fac:	ldrb	w22, [x3, #1]
  427fb0:	add	x19, x3, #0x2
  427fb4:	cmp	w22, #0x52
  427fb8:	b.eq	4282bc <nftw@plt+0x2573c>  // b.none
  427fbc:	cmp	w22, #0x22
  427fc0:	b.eq	428884 <nftw@plt+0x25d04>  // b.none
  427fc4:	cmp	w22, #0x27
  427fc8:	b.eq	428258 <nftw@plt+0x256d8>  // b.none
  427fcc:	mov	w23, #0x44                  	// #68
  427fd0:	mov	w22, #0x3e                  	// #62
  427fd4:	ldrb	w1, [x19]
  427fd8:	mov	w2, #0x0                   	// #0
  427fdc:	nop
  427fe0:	cmp	w1, #0x5c
  427fe4:	add	x20, x19, #0x1
  427fe8:	b.eq	428018 <nftw@plt+0x25498>  // b.none
  427fec:	cmp	w1, w22
  427ff0:	b.eq	4280ac <nftw@plt+0x2552c>  // b.none
  427ff4:	cmp	w1, #0xa
  427ff8:	b.eq	42816c <nftw@plt+0x255ec>  // b.none
  427ffc:	cbnz	w1, 428098 <nftw@plt+0x25518>
  428000:	ldrb	w1, [x19, #1]
  428004:	mov	x19, x20
  428008:	add	x20, x19, #0x1
  42800c:	mov	w2, #0x1                   	// #1
  428010:	cmp	w1, #0x5c
  428014:	b.ne	427fec <nftw@plt+0x2546c>  // b.any
  428018:	ldrb	w1, [x28, #19]
  42801c:	cbnz	w1, 428098 <nftw@plt+0x25518>
  428020:	ldrb	w1, [x19, #1]
  428024:	cmp	w1, #0xa
  428028:	b.eq	4280a4 <nftw@plt+0x25524>  // b.none
  42802c:	ldrb	w1, [x19, #2]
  428030:	add	x19, x19, #0x2
  428034:	b	427fe0 <nftw@plt+0x25460>
  428038:	ldr	x2, [sp, #112]
  42803c:	mov	w0, w1
  428040:	cmp	w1, #0x75
  428044:	add	x19, x2, #0x1
  428048:	b.eq	4281dc <nftw@plt+0x2565c>  // b.none
  42804c:	cmp	w0, #0x52
  428050:	b.eq	4289d4 <nftw@plt+0x25e54>  // b.none
  428054:	cmp	w0, #0x22
  428058:	b.eq	4288a0 <nftw@plt+0x25d20>  // b.none
  42805c:	cmp	w0, #0x27
  428060:	b.ne	427fcc <nftw@plt+0x2544c>  // b.any
  428064:	cmp	w1, #0x55
  428068:	b.eq	428a48 <nftw@plt+0x25ec8>  // b.none
  42806c:	cmp	w1, #0x75
  428070:	mov	w23, #0x38                  	// #56
  428074:	mov	w22, #0x27                  	// #39
  428078:	b.ne	427fd4 <nftw@plt+0x25454>  // b.any
  42807c:	ldr	x0, [sp, #112]
  428080:	mov	w23, #0x3c                  	// #60
  428084:	ldrb	w1, [x0, #1]
  428088:	mov	w0, #0x3a                  	// #58
  42808c:	cmp	w1, #0x38
  428090:	csel	w23, w23, w0, eq  // eq = none
  428094:	b	427fd4 <nftw@plt+0x25454>
  428098:	ldrb	w1, [x19, #1]
  42809c:	mov	x19, x20
  4280a0:	b	427fe0 <nftw@plt+0x25460>
  4280a4:	mov	x19, x20
  4280a8:	b	427fe0 <nftw@plt+0x25460>
  4280ac:	cbz	w2, 4280b8 <nftw@plt+0x25538>
  4280b0:	ldrb	w0, [x28, #18]
  4280b4:	cbz	w0, 4282a4 <nftw@plt+0x25724>
  4280b8:	cmp	w23, #0x3d
  4280bc:	b.eq	428b5c <nftw@plt+0x25fdc>  // b.none
  4280c0:	ldrb	w0, [x28, #1161]
  4280c4:	cbz	w0, 428198 <nftw@plt+0x25618>
  4280c8:	ldrb	w0, [x20]
  4280cc:	cmp	w0, #0x5f
  4280d0:	b.ne	428128 <nftw@plt+0x255a8>  // b.any
  4280d4:	ldrb	w1, [x20, #1]
  4280d8:	cmp	w1, #0x5f
  4280dc:	b.eq	428128 <nftw@plt+0x255a8>  // b.none
  4280e0:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4280e4:	add	x19, x19, #0x248
  4280e8:	ldrh	w0, [x19, w0, sxtw #1]
  4280ec:	tbnz	w0, #9, 428268 <nftw@plt+0x256e8>
  4280f0:	ldr	x5, [x28]
  4280f4:	mov	w4, w23
  4280f8:	ldr	x2, [sp, #112]
  4280fc:	mov	x1, x21
  428100:	str	x20, [x5]
  428104:	mov	x0, x28
  428108:	sub	w3, w20, w2
  42810c:	bl	427f18 <nftw@plt+0x25398>
  428110:	ldp	x19, x20, [sp, #16]
  428114:	ldp	x21, x22, [sp, #32]
  428118:	ldp	x23, x24, [sp, #48]
  42811c:	ldp	x27, x28, [sp, #80]
  428120:	ldp	x29, x30, [sp], #224
  428124:	ret
  428128:	mov	x1, x20
  42812c:	add	x0, x28, #0x440
  428130:	bl	426370 <nftw@plt+0x237f0>
  428134:	tst	w0, #0xff
  428138:	b.eq	42821c <nftw@plt+0x2569c>  // b.none
  42813c:	ldrb	w0, [x28, #1162]
  428140:	cbz	w0, 4280f0 <nftw@plt+0x25570>
  428144:	ldrb	w0, [x28, #18]
  428148:	cbnz	w0, 4280f0 <nftw@plt+0x25570>
  42814c:	ldr	w2, [x21]
  428150:	mov	x0, x28
  428154:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428158:	mov	w3, #0x0                   	// #0
  42815c:	add	x4, x4, #0x368
  428160:	mov	w1, #0x13                  	// #19
  428164:	bl	41f4d0 <nftw@plt+0x1c950>
  428168:	b	4280f0 <nftw@plt+0x25570>
  42816c:	cmp	w22, #0x3e
  428170:	b.eq	428930 <nftw@plt+0x25db0>  // b.none
  428174:	cbnz	w2, 4281fc <nftw@plt+0x2567c>
  428178:	ldr	w0, [x28, #1116]
  42817c:	cmp	w0, #0x15
  428180:	b.ne	428234 <nftw@plt+0x256b4>  // b.any
  428184:	ldrb	w0, [x28, #1161]
  428188:	mov	x20, x19
  42818c:	mov	w23, #0x3d                  	// #61
  428190:	cbnz	w0, 4280c8 <nftw@plt+0x25548>
  428194:	nop
  428198:	ldrb	w0, [x28, #1199]
  42819c:	cbz	w0, 4280f0 <nftw@plt+0x25570>
  4281a0:	mov	x1, x20
  4281a4:	add	x0, x28, #0x440
  4281a8:	bl	426370 <nftw@plt+0x237f0>
  4281ac:	tst	w0, #0xff
  4281b0:	b.eq	4280f0 <nftw@plt+0x25570>  // b.none
  4281b4:	ldrb	w0, [x28, #18]
  4281b8:	cbnz	w0, 4280f0 <nftw@plt+0x25570>
  4281bc:	ldr	w2, [x21]
  4281c0:	mov	x0, x28
  4281c4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4281c8:	mov	w3, #0x0                   	// #0
  4281cc:	add	x4, x4, #0x410
  4281d0:	mov	w1, #0x17                  	// #23
  4281d4:	bl	41f4d0 <nftw@plt+0x1c950>
  4281d8:	b	4280f0 <nftw@plt+0x25570>
  4281dc:	ldrb	w0, [x2, #1]
  4281e0:	add	x19, x2, #0x2
  4281e4:	cmp	w0, #0x38
  4281e8:	b.ne	42804c <nftw@plt+0x254cc>  // b.any
  4281ec:	ldr	x0, [sp, #112]
  4281f0:	add	x19, x0, #0x3
  4281f4:	ldrb	w0, [x0, #2]
  4281f8:	b	42804c <nftw@plt+0x254cc>
  4281fc:	ldrb	w0, [x28, #18]
  428200:	cbnz	w0, 428178 <nftw@plt+0x255f8>
  428204:	mov	x0, x28
  428208:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42820c:	mov	w1, #0x0                   	// #0
  428210:	add	x2, x2, #0x3c0
  428214:	bl	41f298 <nftw@plt+0x1c718>
  428218:	b	428178 <nftw@plt+0x255f8>
  42821c:	ldrb	w0, [x20]
  428220:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x205a0>
  428224:	add	x19, x19, #0x248
  428228:	ldrh	w0, [x19, w0, sxtw #1]
  42822c:	tbz	w0, #9, 4280f0 <nftw@plt+0x25570>
  428230:	b	428268 <nftw@plt+0x256e8>
  428234:	mov	w3, w22
  428238:	mov	x20, x19
  42823c:	mov	x0, x28
  428240:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428244:	mov	w1, #0x2                   	// #2
  428248:	add	x2, x2, #0x3e8
  42824c:	mov	w23, #0x3d                  	// #61
  428250:	bl	41f298 <nftw@plt+0x1c718>
  428254:	b	4280c0 <nftw@plt+0x25540>
  428258:	cmp	w1, #0x4c
  42825c:	mov	w23, #0x39                  	// #57
  428260:	b.eq	427fd4 <nftw@plt+0x25454>  // b.none
  428264:	b	428064 <nftw@plt+0x254e4>
  428268:	mov	w0, w23
  42826c:	bl	420be0 <nftw@plt+0x1e060>
  428270:	bl	420b40 <nftw@plt+0x1dfc0>
  428274:	mov	w23, w0
  428278:	ldrb	w2, [x20, #1]
  42827c:	mov	w1, #0x204                 	// #516
  428280:	add	x20, x20, #0x1
  428284:	ldrh	w0, [x19, x2, lsl #1]
  428288:	tst	w1, w0
  42828c:	b.eq	4280f0 <nftw@plt+0x25570>  // b.none
  428290:	ldrb	w0, [x20, #1]!
  428294:	ldrh	w0, [x19, x0, lsl #1]
  428298:	tst	w1, w0
  42829c:	b.ne	428290 <nftw@plt+0x25710>  // b.any
  4282a0:	b	4280f0 <nftw@plt+0x25570>
  4282a4:	mov	x0, x28
  4282a8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4282ac:	mov	w1, #0x0                   	// #0
  4282b0:	add	x2, x2, #0x3c0
  4282b4:	bl	41f298 <nftw@plt+0x1c718>
  4282b8:	b	4280b8 <nftw@plt+0x25538>
  4282bc:	ldr	x0, [x0]
  4282c0:	mov	w2, #0x3f                  	// #63
  4282c4:	str	w2, [sp, #140]
  4282c8:	cmp	w1, #0x4c
  4282cc:	stp	x25, x26, [sp, #64]
  4282d0:	ldr	w5, [x0, #56]
  4282d4:	ldr	x2, [x0, #48]
  4282d8:	stp	xzr, xzr, [sp, #160]
  4282dc:	add	x27, x2, x5, lsl #4
  4282e0:	b.ne	428a34 <nftw@plt+0x25eb4>  // b.any
  4282e4:	add	x0, x19, #0x1
  4282e8:	mov	x22, #0x0                   	// #0
  4282ec:	ldr	x26, [sp, #112]
  4282f0:	mov	x19, x0
  4282f4:	mov	x20, #0x0                   	// #0
  4282f8:	stp	wzr, wzr, [sp, #120]
  4282fc:	str	x0, [sp, #128]
  428300:	str	wzr, [sp, #136]
  428304:	nop
  428308:	ldr	x0, [x27]
  42830c:	cmp	x0, x19
  428310:	b.cs	428324 <nftw@plt+0x257a4>  // b.hs, b.nlast
  428314:	ldr	x0, [x27, #16]
  428318:	add	x27, x27, #0x10
  42831c:	cmp	x0, x19
  428320:	b.cc	428314 <nftw@plt+0x25794>  // b.lo, b.ul, b.last
  428324:	b.ne	428b40 <nftw@plt+0x25fc0>  // b.any
  428328:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x115a0>
  42832c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x115a0>
  428330:	add	x23, x23, #0x398
  428334:	add	x0, x0, #0xf78
  428338:	str	x0, [sp, #104]
  42833c:	b	428378 <nftw@plt+0x257f8>
  428340:	cbz	w0, 428364 <nftw@plt+0x257e4>
  428344:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  428348:	add	x1, x1, #0x978
  42834c:	ldrb	w1, [x1, w0, uxtw]
  428350:	cbz	w1, 428c74 <nftw@plt+0x260f4>
  428354:	str	wzr, [x27, #8]
  428358:	strb	w0, [sp, #159]
  42835c:	ldrb	w0, [x28, #1125]
  428360:	cbnz	w0, 4284fc <nftw@plt+0x2597c>
  428364:	ldr	x0, [x27, #16]
  428368:	add	x5, x27, #0x10
  42836c:	cmp	x19, x0
  428370:	b.ne	428418 <nftw@plt+0x25898>  // b.any
  428374:	mov	x27, x5
  428378:	ldr	w0, [x27, #8]
  42837c:	cmp	w0, #0x20
  428380:	b.eq	42838c <nftw@plt+0x2580c>  // b.none
  428384:	cmp	w0, #0x5c
  428388:	b.ne	428340 <nftw@plt+0x257c0>  // b.any
  42838c:	sub	x25, x19, x26
  428390:	add	x24, sp, #0xa0
  428394:	mov	x1, x26
  428398:	mov	x2, x25
  42839c:	mov	x3, x24
  4283a0:	add	x4, sp, #0xa8
  4283a4:	mov	x0, x28
  4283a8:	bl	427d48 <nftw@plt+0x251c8>
  4283ac:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4283b0:	add	x20, x20, #0x1
  4283b4:	add	x26, x1, #0x2a0
  4283b8:	mov	x3, x24
  4283bc:	mov	x1, x26
  4283c0:	add	x4, sp, #0xa8
  4283c4:	mov	x0, x28
  4283c8:	add	x20, x25, x20
  4283cc:	mov	x2, #0x1                   	// #1
  4283d0:	bl	427d48 <nftw@plt+0x251c8>
  4283d4:	add	x20, x20, #0x1
  4283d8:	cmp	x22, #0x10
  4283dc:	b.ls	428630 <nftw@plt+0x25ab0>  // b.plast
  4283e0:	ldr	w0, [x27, #8]
  4283e4:	mov	x3, x24
  4283e8:	cmp	w0, #0x20
  4283ec:	b.eq	42860c <nftw@plt+0x25a8c>  // b.none
  4283f0:	mov	x0, x28
  4283f4:	add	x4, sp, #0xa8
  4283f8:	mov	x1, x23
  4283fc:	mov	x2, #0x1                   	// #1
  428400:	bl	427d48 <nftw@plt+0x251c8>
  428404:	mov	x26, x19
  428408:	ldr	x0, [x27, #16]
  42840c:	add	x5, x27, #0x10
  428410:	cmp	x19, x0
  428414:	b.eq	428374 <nftw@plt+0x257f4>  // b.none
  428418:	mov	x23, x19
  42841c:	cmp	x22, #0x10
  428420:	ldrb	w1, [x23], #1
  428424:	b.ls	428a1c <nftw@plt+0x25e9c>  // b.plast
  428428:	ldr	w0, [sp, #120]
  42842c:	cbz	w0, 4286e0 <nftw@plt+0x25b60>
  428430:	ldr	w0, [sp, #120]
  428434:	cmp	w0, #0x2
  428438:	b.eq	42893c <nftw@plt+0x25dbc>  // b.none
  42843c:	mov	x27, x5
  428440:	cmp	w1, #0x29
  428444:	b.eq	428808 <nftw@plt+0x25c88>  // b.none
  428448:	cmp	w1, #0xa
  42844c:	mov	x19, x23
  428450:	b.ne	428308 <nftw@plt+0x25788>  // b.any
  428454:	ldrb	w0, [x28, #16]
  428458:	cbnz	w0, 428b64 <nftw@plt+0x25fe4>
  42845c:	ldrb	w0, [x28, #25]
  428460:	cbz	w0, 428478 <nftw@plt+0x258f8>
  428464:	ldr	x0, [x28]
  428468:	ldr	x1, [x0, #16]
  42846c:	ldr	x0, [x0, #32]
  428470:	cmp	x1, x0
  428474:	b.cs	428b64 <nftw@plt+0x25fe4>  // b.hs, b.nlast
  428478:	sub	x19, x23, x26
  42847c:	mov	x1, x26
  428480:	mov	x2, x19
  428484:	mov	x0, x28
  428488:	add	x4, sp, #0xa8
  42848c:	add	x3, sp, #0xa0
  428490:	bl	427d48 <nftw@plt+0x251c8>
  428494:	ldr	x0, [x28]
  428498:	ldr	x2, [x0]
  42849c:	ldr	x1, [x0, #32]
  4284a0:	cmp	x2, x1
  4284a4:	b.cc	428ad8 <nftw@plt+0x25f58>  // b.lo, b.ul, b.last
  4284a8:	mov	w1, #0x1                   	// #1
  4284ac:	sub	x23, x23, #0x1
  4284b0:	str	x23, [x0]
  4284b4:	strb	w1, [x0, #104]
  4284b8:	mov	x0, x28
  4284bc:	mov	w1, #0x0                   	// #0
  4284c0:	bl	4269f0 <nftw@plt+0x23e70>
  4284c4:	ldrb	w0, [x28, #16]
  4284c8:	cbnz	w0, 428a54 <nftw@plt+0x25ed4>
  4284cc:	mov	x0, x28
  4284d0:	bl	426920 <nftw@plt+0x23da0>
  4284d4:	tst	w0, #0xff
  4284d8:	b.eq	428a54 <nftw@plt+0x25ed4>  // b.none
  4284dc:	ldr	x0, [x28]
  4284e0:	add	x20, x20, x19
  4284e4:	ldr	x1, [x0, #48]
  4284e8:	ldr	w5, [x0, #56]
  4284ec:	ldr	x26, [x0]
  4284f0:	add	x27, x1, x5, lsl #4
  4284f4:	mov	x19, x26
  4284f8:	b	428308 <nftw@plt+0x25788>
  4284fc:	sub	x7, x19, x26
  428500:	add	x24, sp, #0xa0
  428504:	mov	x2, x7
  428508:	mov	x1, x26
  42850c:	mov	x3, x24
  428510:	add	x4, sp, #0xa8
  428514:	mov	x0, x28
  428518:	str	x7, [sp, #96]
  42851c:	bl	427d48 <nftw@plt+0x251c8>
  428520:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428524:	add	x26, x1, #0x2a8
  428528:	mov	x1, x26
  42852c:	mov	x3, x24
  428530:	add	x4, sp, #0xa8
  428534:	mov	x0, x28
  428538:	mov	x2, #0x2                   	// #2
  42853c:	bl	427d48 <nftw@plt+0x251c8>
  428540:	ldr	x7, [sp, #96]
  428544:	cmp	x19, x26
  428548:	ccmp	x22, #0x10, #0x2, ne  // ne = any
  42854c:	add	x26, x7, x20
  428550:	b.ls	4288cc <nftw@plt+0x25d4c>  // b.plast
  428554:	ldrb	w8, [sp, #159]
  428558:	cmp	w8, #0x2f
  42855c:	b.ne	4288f0 <nftw@plt+0x25d70>  // b.any
  428560:	ldr	x0, [x27, #16]
  428564:	cmp	x19, x0
  428568:	b.ne	4288f0 <nftw@plt+0x25d70>  // b.any
  42856c:	ldr	w0, [x27, #24]
  428570:	mov	w1, #0x5c                  	// #92
  428574:	cmp	w0, #0x20
  428578:	ccmp	w0, w1, #0x4, ne  // ne = any
  42857c:	b.ne	428d08 <nftw@plt+0x26188>  // b.any
  428580:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  428584:	add	x20, x20, #0x770
  428588:	mov	x1, x20
  42858c:	add	x4, sp, #0xa8
  428590:	mov	x3, x24
  428594:	mov	x0, x28
  428598:	mov	x2, #0x1                   	// #1
  42859c:	str	w8, [sp, #96]
  4285a0:	bl	427d48 <nftw@plt+0x251c8>
  4285a4:	cmp	x19, x20
  4285a8:	ldr	w8, [sp, #96]
  4285ac:	ccmp	x22, #0x10, #0x2, ne  // ne = any
  4285b0:	b.ls	4288e0 <nftw@plt+0x25d60>  // b.plast
  4285b4:	ldr	w0, [x27, #24]
  4285b8:	add	x27, x27, #0x10
  4285bc:	add	x20, x26, #0x4
  4285c0:	cmp	w0, #0x20
  4285c4:	b.eq	428658 <nftw@plt+0x25ad8>  // b.none
  4285c8:	mov	x3, x24
  4285cc:	add	x4, sp, #0xa8
  4285d0:	mov	x1, x23
  4285d4:	mov	x0, x28
  4285d8:	mov	x2, #0x1                   	// #1
  4285dc:	bl	427d48 <nftw@plt+0x251c8>
  4285e0:	cmp	x22, #0x10
  4285e4:	mov	x26, x19
  4285e8:	b.hi	428364 <nftw@plt+0x257e4>  // b.pmore
  4285ec:	cmp	x19, x23
  4285f0:	mov	x26, x19
  4285f4:	b.eq	428364 <nftw@plt+0x257e4>  // b.none
  4285f8:	add	x1, sp, #0xc8
  4285fc:	mov	w0, #0xa                   	// #10
  428600:	strb	w0, [x1, x22]
  428604:	add	x22, x22, #0x1
  428608:	b	428364 <nftw@plt+0x257e4>
  42860c:	ldr	x1, [sp, #104]
  428610:	add	x4, sp, #0xa8
  428614:	mov	x3, x24
  428618:	mov	x0, x28
  42861c:	mov	x2, #0x1                   	// #1
  428620:	bl	427d48 <nftw@plt+0x251c8>
  428624:	mov	x3, x24
  428628:	add	x20, x20, #0x1
  42862c:	b	4283f0 <nftw@plt+0x25870>
  428630:	cmp	x19, x26
  428634:	b.eq	4286b8 <nftw@plt+0x25b38>  // b.none
  428638:	add	x1, sp, #0xc8
  42863c:	mov	w0, #0x5c                  	// #92
  428640:	strb	w0, [x1, x22]
  428644:	add	x22, x22, #0x1
  428648:	ldr	w0, [x27, #8]
  42864c:	cmp	w0, #0x20
  428650:	b.ne	4285c8 <nftw@plt+0x25a48>  // b.any
  428654:	nop
  428658:	ldr	x1, [sp, #104]
  42865c:	add	x4, sp, #0xa8
  428660:	mov	x3, x24
  428664:	mov	x0, x28
  428668:	mov	x2, #0x1                   	// #1
  42866c:	bl	427d48 <nftw@plt+0x251c8>
  428670:	cmp	x22, #0x10
  428674:	b.hi	428624 <nftw@plt+0x25aa4>  // b.pmore
  428678:	ldr	x0, [sp, #104]
  42867c:	add	x20, x20, #0x1
  428680:	cmp	x19, x0
  428684:	b.eq	42869c <nftw@plt+0x25b1c>  // b.none
  428688:	add	x1, sp, #0xc8
  42868c:	mov	w0, #0x20                  	// #32
  428690:	strb	w0, [x1, x22]
  428694:	add	x22, x22, #0x1
  428698:	b	4285c8 <nftw@plt+0x25a48>
  42869c:	mov	x3, x24
  4286a0:	add	x4, sp, #0xa8
  4286a4:	mov	x1, x23
  4286a8:	mov	x0, x28
  4286ac:	mov	x2, #0x1                   	// #1
  4286b0:	bl	427d48 <nftw@plt+0x251c8>
  4286b4:	b	4285ec <nftw@plt+0x25a6c>
  4286b8:	ldr	w0, [x27, #8]
  4286bc:	cmp	w0, #0x20
  4286c0:	b.ne	42869c <nftw@plt+0x25b1c>  // b.any
  4286c4:	ldr	x1, [sp, #104]
  4286c8:	add	x4, sp, #0xa8
  4286cc:	mov	x3, x24
  4286d0:	mov	x0, x28
  4286d4:	mov	x2, #0x1                   	// #1
  4286d8:	bl	427d48 <nftw@plt+0x251c8>
  4286dc:	b	428678 <nftw@plt+0x25af8>
  4286e0:	ldr	w0, [sp, #124]
  4286e4:	mov	w1, w0
  4286e8:	cmp	x22, w0, uxtw
  4286ec:	b.ls	4289c8 <nftw@plt+0x25e48>  // b.plast
  4286f0:	add	x2, sp, #0xc8
  4286f4:	add	x7, sp, #0xb0
  4286f8:	add	w3, w0, #0x1
  4286fc:	add	x4, x2, x1
  428700:	add	x9, x7, x1
  428704:	sub	x11, x3, #0x1
  428708:	mov	x10, #0x0                   	// #0
  42870c:	mov	x3, #0x1                   	// #1
  428710:	ldrb	w1, [x4, x10]
  428714:	strb	w1, [x9, x10]
  428718:	cmp	w1, #0x3f
  42871c:	b.hi	428820 <nftw@plt+0x25ca0>  // b.pmore
  428720:	cmp	w1, #0x20
  428724:	b.hi	4287c8 <nftw@plt+0x25c48>  // b.pmore
  428728:	cmp	w1, #0x28
  42872c:	b.eq	428ab8 <nftw@plt+0x25f38>  // b.none
  428730:	ldr	x3, [x28]
  428734:	cmp	w0, #0x10
  428738:	ldr	w2, [x21]
  42873c:	ldr	x3, [x3, #8]
  428740:	sub	x23, x23, x3
  428744:	add	w23, w23, #0x1
  428748:	b.eq	428868 <nftw@plt+0x25ce8>  // b.none
  42874c:	cmp	w1, #0xa
  428750:	b.eq	428b24 <nftw@plt+0x25fa4>  // b.none
  428754:	mov	w5, w1
  428758:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42875c:	mov	w3, w23
  428760:	add	x4, x4, #0x320
  428764:	mov	x0, x28
  428768:	mov	w1, #0x3                   	// #3
  42876c:	bl	41f458 <nftw@plt+0x1c8d8>
  428770:	ldr	x0, [x28]
  428774:	ldr	x1, [sp, #128]
  428778:	ldr	x2, [sp, #112]
  42877c:	sub	x4, x1, #0x1
  428780:	str	x4, [x0]
  428784:	mov	x0, x28
  428788:	sub	x3, x1, x2
  42878c:	mov	w4, #0x3d                  	// #61
  428790:	mov	x1, x21
  428794:	sub	w3, w3, #0x1
  428798:	bl	427f18 <nftw@plt+0x25398>
  42879c:	ldr	x2, [sp, #160]
  4287a0:	cbz	x2, 428a2c <nftw@plt+0x25eac>
  4287a4:	mov	x0, x2
  4287a8:	mov	x1, x0
  4287ac:	ldr	x0, [x0]
  4287b0:	cbnz	x0, 4287a8 <nftw@plt+0x25c28>
  4287b4:	ldr	x0, [x28, #72]
  4287b8:	ldp	x25, x26, [sp, #64]
  4287bc:	str	x0, [x1]
  4287c0:	str	x2, [x28, #72]
  4287c4:	b	428110 <nftw@plt+0x25590>
  4287c8:	mov	x6, #0xfcee00000000        	// #278099132416000
  4287cc:	lsl	x2, x3, x1
  4287d0:	movk	x6, #0xffff, lsl #48
  4287d4:	tst	x2, x6
  4287d8:	b.eq	428728 <nftw@plt+0x25ba8>  // b.none
  4287dc:	cmp	w0, #0xf
  4287e0:	b.hi	428728 <nftw@plt+0x25ba8>  // b.pmore
  4287e4:	add	x10, x10, #0x1
  4287e8:	add	w0, w0, #0x1
  4287ec:	add	x1, x11, x10
  4287f0:	cmp	x22, x1
  4287f4:	b.hi	428710 <nftw@plt+0x25b90>  // b.pmore
  4287f8:	mov	x27, x5
  4287fc:	mov	x19, x23
  428800:	str	w0, [sp, #124]
  428804:	b	428308 <nftw@plt+0x25788>
  428808:	mov	w0, #0x2                   	// #2
  42880c:	mov	x19, x23
  428810:	mov	x22, #0x0                   	// #0
  428814:	str	w0, [sp, #120]
  428818:	str	wzr, [sp, #136]
  42881c:	b	428308 <nftw@plt+0x25788>
  428820:	sub	w2, w1, #0x41
  428824:	and	w2, w2, #0xff
  428828:	cmp	w2, #0x3d
  42882c:	b.hi	42884c <nftw@plt+0x25ccc>  // b.pmore
  428830:	mov	x6, #0xffffffff77ffffff    	// #-2281701377
  428834:	lsl	x2, x3, x2
  428838:	movk	x6, #0x3fff, lsl #48
  42883c:	tst	x2, x6
  428840:	b.eq	42884c <nftw@plt+0x25ccc>  // b.none
  428844:	cmp	w0, #0xf
  428848:	b.ls	4287e4 <nftw@plt+0x25c64>  // b.plast
  42884c:	ldr	x3, [x28]
  428850:	cmp	w0, #0x10
  428854:	ldr	w2, [x21]
  428858:	ldr	x3, [x3, #8]
  42885c:	sub	x23, x23, x3
  428860:	add	w23, w23, #0x1
  428864:	b.ne	428754 <nftw@plt+0x25bd4>  // b.any
  428868:	mov	w3, w23
  42886c:	mov	x0, x28
  428870:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428874:	mov	w1, #0x3                   	// #3
  428878:	add	x4, x4, #0x2c0
  42887c:	bl	41f458 <nftw@plt+0x1c8d8>
  428880:	b	428770 <nftw@plt+0x25bf0>
  428884:	cmp	w1, #0x4c
  428888:	mov	w23, #0x3f                  	// #63
  42888c:	b.eq	427fd4 <nftw@plt+0x25454>  // b.none
  428890:	cmp	w1, #0x55
  428894:	mov	w23, #0x41                  	// #65
  428898:	b.eq	427fd4 <nftw@plt+0x25454>  // b.none
  42889c:	nop
  4288a0:	cmp	w1, #0x75
  4288a4:	mov	w23, #0x3e                  	// #62
  4288a8:	mov	w22, #0x22                  	// #34
  4288ac:	b.ne	427fd4 <nftw@plt+0x25454>  // b.any
  4288b0:	ldr	x0, [sp, #112]
  4288b4:	mov	w23, #0x42                  	// #66
  4288b8:	ldrb	w1, [x0, #1]
  4288bc:	mov	w0, #0x40                  	// #64
  4288c0:	cmp	w1, #0x38
  4288c4:	csel	w23, w23, w0, eq  // eq = none
  4288c8:	b	427fd4 <nftw@plt+0x25454>
  4288cc:	add	x1, sp, #0xc8
  4288d0:	mov	w0, #0x3f3f                	// #16191
  4288d4:	strh	w0, [x1, x22]
  4288d8:	add	x22, x22, #0x2
  4288dc:	b	428554 <nftw@plt+0x259d4>
  4288e0:	add	x0, sp, #0xc8
  4288e4:	strb	w8, [x0, x22]
  4288e8:	add	x22, x22, #0x1
  4288ec:	b	4285b4 <nftw@plt+0x25a34>
  4288f0:	add	x20, sp, #0x9f
  4288f4:	mov	x3, x24
  4288f8:	mov	x1, x20
  4288fc:	add	x23, x19, #0x1
  428900:	add	x4, sp, #0xa8
  428904:	mov	x0, x28
  428908:	mov	x2, #0x1                   	// #1
  42890c:	bl	427d48 <nftw@plt+0x251c8>
  428910:	cmp	x20, x23
  428914:	add	x20, x26, #0x3
  428918:	ccmp	x22, #0x10, #0x2, ne  // ne = any
  42891c:	b.ls	428b48 <nftw@plt+0x25fc8>  // b.plast
  428920:	ldrb	w1, [sp, #159]
  428924:	mov	x5, x27
  428928:	mov	x26, x23
  42892c:	b	428428 <nftw@plt+0x258a8>
  428930:	mov	w0, #0x3                   	// #3
  428934:	strb	w0, [x21, #4]
  428938:	b	428110 <nftw@plt+0x25590>
  42893c:	ldr	w2, [sp, #124]
  428940:	ldr	w0, [sp, #136]
  428944:	cmp	w2, w0
  428948:	b.cc	428b8c <nftw@plt+0x2600c>  // b.lo, b.ul, b.last
  42894c:	cmp	x22, w0, uxtw
  428950:	mov	w3, w0
  428954:	b.ls	428c8c <nftw@plt+0x2610c>  // b.plast
  428958:	add	w0, w0, #0x1
  42895c:	add	x2, sp, #0xc8
  428960:	sub	x3, x3, x0
  428964:	add	x7, sp, #0xb0
  428968:	add	x2, x2, x3
  42896c:	add	x7, x7, x3
  428970:	b	428990 <nftw@plt+0x25e10>
  428974:	ldr	w3, [sp, #124]
  428978:	cmp	w3, w0
  42897c:	b.cc	428b8c <nftw@plt+0x2600c>  // b.lo, b.ul, b.last
  428980:	cmp	x22, x0
  428984:	add	x3, x0, #0x1
  428988:	b.ls	4289b0 <nftw@plt+0x25e30>  // b.plast
  42898c:	mov	x0, x3
  428990:	ldrb	w4, [x2, x0]
  428994:	sub	w9, w0, #0x1
  428998:	ldrb	w3, [x7, x0]
  42899c:	str	w0, [sp, #136]
  4289a0:	cmp	w4, w3
  4289a4:	b.eq	428974 <nftw@plt+0x25df4>  // b.none
  4289a8:	mov	w0, w9
  4289ac:	str	w9, [sp, #136]
  4289b0:	cmp	x22, x0
  4289b4:	b.eq	4289c8 <nftw@plt+0x25e48>  // b.none
  4289b8:	mov	w0, #0x1                   	// #1
  4289bc:	mov	x22, #0x11                  	// #17
  4289c0:	str	w0, [sp, #120]
  4289c4:	b	42843c <nftw@plt+0x258bc>
  4289c8:	mov	x27, x5
  4289cc:	mov	x19, x23
  4289d0:	b	428308 <nftw@plt+0x25788>
  4289d4:	ldr	x0, [x28]
  4289d8:	stp	x25, x26, [sp, #64]
  4289dc:	stp	xzr, xzr, [sp, #160]
  4289e0:	ldr	w5, [x0, #56]
  4289e4:	ldr	x2, [x0, #48]
  4289e8:	add	x27, x2, x5, lsl #4
  4289ec:	mov	w0, #0x3e                  	// #62
  4289f0:	str	w0, [sp, #140]
  4289f4:	cmp	w1, #0x75
  4289f8:	b.ne	4282e4 <nftw@plt+0x25764>  // b.any
  4289fc:	ldr	x0, [sp, #112]
  428a00:	mov	w1, #0x42                  	// #66
  428a04:	ldrb	w2, [x0, #1]
  428a08:	mov	w0, #0x40                  	// #64
  428a0c:	cmp	w2, #0x38
  428a10:	csel	w0, w1, w0, eq  // eq = none
  428a14:	str	w0, [sp, #140]
  428a18:	b	4282e4 <nftw@plt+0x25764>
  428a1c:	add	x2, sp, #0xc8
  428a20:	strb	w1, [x2, x22]
  428a24:	add	x22, x22, #0x1
  428a28:	b	428428 <nftw@plt+0x258a8>
  428a2c:	ldp	x25, x26, [sp, #64]
  428a30:	b	428110 <nftw@plt+0x25590>
  428a34:	mov	w0, #0x41                  	// #65
  428a38:	str	w0, [sp, #140]
  428a3c:	cmp	w1, #0x55
  428a40:	b.eq	4282e4 <nftw@plt+0x25764>  // b.none
  428a44:	b	4289ec <nftw@plt+0x25e6c>
  428a48:	mov	w23, #0x3b                  	// #59
  428a4c:	mov	w22, #0x27                  	// #39
  428a50:	b	427fd4 <nftw@plt+0x25454>
  428a54:	ldr	x1, [x28, #40]
  428a58:	mov	w2, #0x40                  	// #64
  428a5c:	ldr	x3, [sp, #160]
  428a60:	mov	w0, #0x16                  	// #22
  428a64:	ldr	w1, [x1, #60]
  428a68:	strb	w0, [x21, #4]
  428a6c:	mov	x0, x3
  428a70:	strh	w2, [x21, #6]
  428a74:	ldr	w2, [x21]
  428a78:	str	w1, [x21]
  428a7c:	cbz	x3, 428a98 <nftw@plt+0x25f18>
  428a80:	mov	x1, x0
  428a84:	ldr	x0, [x0]
  428a88:	cbnz	x0, 428a80 <nftw@plt+0x25f00>
  428a8c:	ldr	x0, [x28, #72]
  428a90:	str	x0, [x1]
  428a94:	str	x3, [x28, #72]
  428a98:	mov	x0, x28
  428a9c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428aa0:	mov	w3, #0x0                   	// #0
  428aa4:	add	x4, x4, #0x350
  428aa8:	mov	w1, #0x3                   	// #3
  428aac:	bl	41f458 <nftw@plt+0x1c8d8>
  428ab0:	ldp	x25, x26, [sp, #64]
  428ab4:	b	428110 <nftw@plt+0x25590>
  428ab8:	mov	w1, #0x22                  	// #34
  428abc:	mov	w2, #0x1                   	// #1
  428ac0:	mov	x27, x5
  428ac4:	mov	x19, x23
  428ac8:	mov	x22, #0x11                  	// #17
  428acc:	strb	w1, [x7, w0, uxtw]
  428ad0:	stp	w2, w0, [sp, #120]
  428ad4:	b	428308 <nftw@plt+0x25788>
  428ad8:	ldr	x0, [x28, #40]
  428adc:	mov	w4, #0x18                  	// #24
  428ae0:	mov	w2, #0x0                   	// #0
  428ae4:	ldr	w1, [x0, #12]
  428ae8:	ldr	x5, [x0]
  428aec:	sub	w1, w1, #0x1
  428af0:	ldr	w3, [x0, #60]
  428af4:	smull	x1, w1, w4
  428af8:	add	x4, x5, x1
  428afc:	ldr	w1, [x5, x1]
  428b00:	ldrb	w5, [x4, #6]
  428b04:	ldr	w4, [x4, #16]
  428b08:	sub	w1, w3, w1
  428b0c:	add	w4, w4, #0x1
  428b10:	lsr	w1, w1, w5
  428b14:	add	w1, w1, w4
  428b18:	bl	42b4f0 <nftw@plt+0x28970>
  428b1c:	ldr	x0, [x28]
  428b20:	b	4284a8 <nftw@plt+0x25928>
  428b24:	mov	w3, w23
  428b28:	mov	x0, x28
  428b2c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428b30:	mov	w1, #0x3                   	// #3
  428b34:	add	x4, x4, #0x2f0
  428b38:	bl	41f458 <nftw@plt+0x1c8d8>
  428b3c:	b	428770 <nftw@plt+0x25bf0>
  428b40:	mov	x5, x27
  428b44:	b	428418 <nftw@plt+0x25898>
  428b48:	add	x2, sp, #0xc8
  428b4c:	ldrb	w1, [sp, #159]
  428b50:	strb	w1, [x2, x22]
  428b54:	add	x22, x22, #0x1
  428b58:	b	428924 <nftw@plt+0x25da4>
  428b5c:	mov	x19, x20
  428b60:	b	428178 <nftw@plt+0x255f8>
  428b64:	ldr	w2, [x21]
  428b68:	mov	w5, #0x3d                  	// #61
  428b6c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428b70:	sub	x23, x23, #0x1
  428b74:	add	x4, x4, #0x350
  428b78:	mov	x0, x28
  428b7c:	mov	w3, #0x0                   	// #0
  428b80:	mov	w1, #0x3                   	// #3
  428b84:	str	w5, [sp, #140]
  428b88:	bl	41f458 <nftw@plt+0x1c8d8>
  428b8c:	ldrb	w0, [x28, #1161]
  428b90:	cbz	w0, 428bbc <nftw@plt+0x2603c>
  428b94:	ldrb	w0, [x23]
  428b98:	cmp	w0, #0x5f
  428b9c:	b.ne	428c94 <nftw@plt+0x26114>  // b.any
  428ba0:	ldrb	w1, [x23, #1]
  428ba4:	cmp	w1, #0x5f
  428ba8:	b.eq	428c94 <nftw@plt+0x26114>  // b.none
  428bac:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x205a0>
  428bb0:	add	x19, x19, #0x248
  428bb4:	ldrh	w0, [x19, w0, sxtw #1]
  428bb8:	tbnz	w0, #9, 428cd0 <nftw@plt+0x26150>
  428bbc:	ldr	x1, [x28]
  428bc0:	sub	x19, x23, x26
  428bc4:	ldr	x0, [sp, #160]
  428bc8:	str	x23, [x1]
  428bcc:	cbz	x0, 428cb0 <nftw@plt+0x26130>
  428bd0:	add	x1, x20, #0x1
  428bd4:	mov	x0, x28
  428bd8:	add	x1, x1, x19
  428bdc:	bl	427ea8 <nftw@plt+0x25328>
  428be0:	ldr	x1, [sp, #160]
  428be4:	mov	x4, x0
  428be8:	ldrb	w0, [sp, #140]
  428bec:	add	w20, w20, w19
  428bf0:	strb	w0, [x21, #4]
  428bf4:	mov	x3, x1
  428bf8:	str	w20, [x21, #8]
  428bfc:	str	x4, [x21, #16]
  428c00:	str	x1, [sp, #168]
  428c04:	cbz	x1, 428c3c <nftw@plt+0x260bc>
  428c08:	ldp	x1, x2, [x3, #8]
  428c0c:	mov	x0, x4
  428c10:	sub	x2, x2, x1
  428c14:	bl	402490 <memcpy@plt>
  428c18:	mov	x4, x0
  428c1c:	ldr	x0, [sp, #168]
  428c20:	ldp	x3, x1, [x0]
  428c24:	str	x3, [sp, #168]
  428c28:	ldr	x0, [x0, #16]
  428c2c:	sub	x0, x0, x1
  428c30:	add	x4, x4, x0
  428c34:	cbnz	x3, 428c08 <nftw@plt+0x26088>
  428c38:	ldr	x1, [sp, #160]
  428c3c:	mov	x0, x1
  428c40:	mov	x2, x0
  428c44:	ldr	x0, [x0]
  428c48:	cbnz	x0, 428c40 <nftw@plt+0x260c0>
  428c4c:	ldr	x0, [x28, #72]
  428c50:	str	x0, [x2]
  428c54:	str	x1, [x28, #72]
  428c58:	mov	x2, x19
  428c5c:	mov	x1, x26
  428c60:	mov	x0, x4
  428c64:	bl	402490 <memcpy@plt>
  428c68:	strb	wzr, [x0, x19]
  428c6c:	ldp	x25, x26, [sp, #64]
  428c70:	b	428110 <nftw@plt+0x25590>
  428c74:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428c78:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  428c7c:	add	x2, x2, #0x2b0
  428c80:	add	x0, x0, #0xfc8
  428c84:	mov	w1, #0x6f0                 	// #1776
  428c88:	bl	402bf0 <nftw@plt+0x70>
  428c8c:	mov	x0, x3
  428c90:	b	4289b0 <nftw@plt+0x25e30>
  428c94:	mov	x1, x23
  428c98:	add	x0, x28, #0x440
  428c9c:	bl	426370 <nftw@plt+0x237f0>
  428ca0:	tst	w0, #0xff
  428ca4:	b.ne	428d20 <nftw@plt+0x261a0>  // b.any
  428ca8:	ldrb	w0, [x23]
  428cac:	b	428bac <nftw@plt+0x2602c>
  428cb0:	ldr	w4, [sp, #140]
  428cb4:	mov	x2, x26
  428cb8:	mov	w3, w19
  428cbc:	mov	x1, x21
  428cc0:	mov	x0, x28
  428cc4:	bl	427f18 <nftw@plt+0x25398>
  428cc8:	ldp	x25, x26, [sp, #64]
  428ccc:	b	428110 <nftw@plt+0x25590>
  428cd0:	ldr	w0, [sp, #140]
  428cd4:	add	x23, x23, #0x1
  428cd8:	bl	420b40 <nftw@plt+0x1dfc0>
  428cdc:	str	w0, [sp, #140]
  428ce0:	ldrb	w1, [x23]
  428ce4:	mov	w0, #0x204                 	// #516
  428ce8:	ldrh	w1, [x19, x1, lsl #1]
  428cec:	tst	w0, w1
  428cf0:	b.eq	428bbc <nftw@plt+0x2603c>  // b.none
  428cf4:	ldrb	w1, [x23, #1]!
  428cf8:	ldrh	w1, [x19, x1, lsl #1]
  428cfc:	tst	w0, w1
  428d00:	b.ne	428cf4 <nftw@plt+0x26174>  // b.any
  428d04:	b	428bbc <nftw@plt+0x2603c>
  428d08:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428d0c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  428d10:	add	x2, x2, #0x2b0
  428d14:	add	x0, x0, #0xfc8
  428d18:	mov	w1, #0x6e1                 	// #1761
  428d1c:	bl	402bf0 <nftw@plt+0x70>
  428d20:	ldrb	w0, [x28, #1162]
  428d24:	cbz	w0, 428bbc <nftw@plt+0x2603c>
  428d28:	ldrb	w0, [x28, #18]
  428d2c:	cbnz	w0, 428bbc <nftw@plt+0x2603c>
  428d30:	ldr	w2, [x21]
  428d34:	mov	x0, x28
  428d38:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428d3c:	mov	w3, #0x0                   	// #0
  428d40:	add	x4, x4, #0x368
  428d44:	mov	w1, #0x13                  	// #19
  428d48:	bl	41f4d0 <nftw@plt+0x1c950>
  428d4c:	b	428bbc <nftw@plt+0x2603c>
  428d50:	stp	x29, x30, [sp, #-48]!
  428d54:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428d58:	mov	x29, sp
  428d5c:	stp	x19, x20, [sp, #16]
  428d60:	mov	x19, x1
  428d64:	mov	x20, x0
  428d68:	add	x1, x2, #0xa80
  428d6c:	ldrb	w0, [x19, #4]
  428d70:	str	x21, [sp, #32]
  428d74:	lsl	x0, x0, #4
  428d78:	ldr	w0, [x1, x0]
  428d7c:	cmp	w0, #0x1
  428d80:	b.eq	428dd4 <nftw@plt+0x26254>  // b.none
  428d84:	cmp	w0, #0x2
  428d88:	mov	x1, #0x7                   	// #7
  428d8c:	b.ne	428d98 <nftw@plt+0x26218>  // b.any
  428d90:	ldr	w1, [x19, #8]
  428d94:	add	w1, w1, #0x1
  428d98:	mov	x0, x20
  428d9c:	bl	427ea8 <nftw@plt+0x25328>
  428da0:	mov	x1, x19
  428da4:	mov	x21, x0
  428da8:	mov	x2, x21
  428dac:	mov	x0, x20
  428db0:	mov	w3, #0x0                   	// #0
  428db4:	bl	427240 <nftw@plt+0x246c0>
  428db8:	mov	x1, x0
  428dbc:	mov	x0, x21
  428dc0:	strb	wzr, [x1]
  428dc4:	ldp	x19, x20, [sp, #16]
  428dc8:	ldr	x21, [sp, #32]
  428dcc:	ldp	x29, x30, [sp], #48
  428dd0:	ret
  428dd4:	ldr	x0, [x19, #8]
  428dd8:	ldr	w1, [x0, #8]
  428ddc:	add	w1, w1, w1, lsl #2
  428de0:	lsl	w1, w1, #1
  428de4:	add	w1, w1, #0x1
  428de8:	b	428d98 <nftw@plt+0x26218>
  428dec:	nop
  428df0:	stp	x29, x30, [sp, #-80]!
  428df4:	mov	x29, sp
  428df8:	ldr	x4, [x0]
  428dfc:	stp	x19, x20, [sp, #16]
  428e00:	mov	x20, x3
  428e04:	stp	x21, x22, [sp, #32]
  428e08:	mov	x21, x1
  428e0c:	mov	x22, x2
  428e10:	ldr	x3, [x4]
  428e14:	stp	x23, x24, [sp, #48]
  428e18:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x205a0>
  428e1c:	sub	x23, x3, #0x1
  428e20:	add	x24, x24, #0x248
  428e24:	stp	x25, x26, [sp, #64]
  428e28:	mov	x26, x0
  428e2c:	mov	w25, #0x204                 	// #516
  428e30:	mov	x19, x3
  428e34:	b	428e44 <nftw@plt+0x262c4>
  428e38:	add	x19, x19, #0x1
  428e3c:	str	w0, [x20]
  428e40:	strb	wzr, [x20, #4]
  428e44:	ldrb	w0, [x19]
  428e48:	cmp	w0, #0x2e
  428e4c:	ldrh	w1, [x24, w0, sxtw #1]
  428e50:	and	w1, w25, w1
  428e54:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  428e58:	b.ne	428e38 <nftw@plt+0x262b8>  // b.any
  428e5c:	sub	w1, w0, #0x2b
  428e60:	cmp	w0, #0x27
  428e64:	b.eq	428ec0 <nftw@plt+0x26340>  // b.none
  428e68:	mov	w2, #0xfd                  	// #253
  428e6c:	tst	w1, w2
  428e70:	b.ne	428ec8 <nftw@plt+0x26348>  // b.any
  428e74:	ldurb	w1, [x19, #-1]
  428e78:	and	w1, w1, #0xffffffdf
  428e7c:	and	w1, w1, #0xff
  428e80:	cmp	w1, #0x45
  428e84:	b.eq	428e38 <nftw@plt+0x262b8>  // b.none
  428e88:	cmp	w1, #0x50
  428e8c:	b.ne	428ec8 <nftw@plt+0x26348>  // b.any
  428e90:	ldrb	w1, [x26, #1127]
  428e94:	cbnz	w1, 428e38 <nftw@plt+0x262b8>
  428e98:	str	x19, [x4]
  428e9c:	mov	x2, x20
  428ea0:	mov	x0, x26
  428ea4:	mov	w1, #0x0                   	// #0
  428ea8:	bl	425f10 <nftw@plt+0x23390>
  428eac:	tst	w0, #0xff
  428eb0:	b.eq	428f10 <nftw@plt+0x26390>  // b.none
  428eb4:	ldr	x4, [x26]
  428eb8:	ldr	x3, [x4]
  428ebc:	b	428e30 <nftw@plt+0x262b0>
  428ec0:	ldrb	w1, [x26, #1166]
  428ec4:	cbnz	w1, 428e38 <nftw@plt+0x262b8>
  428ec8:	cmp	x19, x3
  428ecc:	b.hi	428ee0 <nftw@plt+0x26360>  // b.pmore
  428ed0:	b	428e98 <nftw@plt+0x26318>
  428ed4:	sub	x19, x19, #0x1
  428ed8:	cmp	x19, x3
  428edc:	b.eq	428e98 <nftw@plt+0x26318>  // b.none
  428ee0:	ldurb	w0, [x19, #-1]
  428ee4:	cmp	w0, #0x27
  428ee8:	b.ne	428e98 <nftw@plt+0x26318>  // b.any
  428eec:	ldrb	w0, [x26, #1166]
  428ef0:	cbnz	w0, 428ed4 <nftw@plt+0x26354>
  428ef4:	str	x19, [x4]
  428ef8:	mov	x2, x20
  428efc:	mov	x0, x26
  428f00:	mov	w1, #0x0                   	// #0
  428f04:	bl	425f10 <nftw@plt+0x23390>
  428f08:	tst	w0, #0xff
  428f0c:	b.ne	428eb4 <nftw@plt+0x26334>  // b.any
  428f10:	sub	x1, x19, x23
  428f14:	str	w1, [x21]
  428f18:	mov	x0, x26
  428f1c:	add	w1, w1, #0x1
  428f20:	bl	427ea8 <nftw@plt+0x25328>
  428f24:	mov	x19, x0
  428f28:	ldr	w2, [x21]
  428f2c:	mov	x1, x23
  428f30:	bl	402490 <memcpy@plt>
  428f34:	ldr	w0, [x21]
  428f38:	strb	wzr, [x19, x0]
  428f3c:	ldp	x23, x24, [sp, #48]
  428f40:	ldp	x25, x26, [sp, #64]
  428f44:	str	x19, [x22]
  428f48:	ldp	x19, x20, [sp, #16]
  428f4c:	ldp	x21, x22, [sp, #32]
  428f50:	ldp	x29, x30, [sp], #80
  428f54:	ret
  428f58:	stp	x29, x30, [sp, #-144]!
  428f5c:	mov	x29, sp
  428f60:	stp	x19, x20, [sp, #16]
  428f64:	mov	x19, x0
  428f68:	stp	x23, x24, [sp, #48]
  428f6c:	mov	x24, #0x6166                	// #24934
  428f70:	movk	x24, #0x6c6c, lsl #16
  428f74:	ldr	x20, [x0, #448]
  428f78:	adrp	x23, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  428f7c:	movk	x24, #0x6874, lsl #32
  428f80:	add	x23, x23, #0x458
  428f84:	stp	x21, x22, [sp, #32]
  428f88:	add	x0, x20, #0x18
  428f8c:	movk	x24, #0x6f72, lsl #48
  428f90:	stp	x27, x28, [sp, #80]
  428f94:	mov	w27, #0x0                   	// #0
  428f98:	str	x0, [x19, #448]
  428f9c:	ldr	x21, [x19]
  428fa0:	strh	wzr, [x20, #6]
  428fa4:	ldrb	w0, [x21, #104]
  428fa8:	cbz	w0, 42901c <nftw@plt+0x2649c>
  428fac:	ldrb	w0, [x19, #32]
  428fb0:	cbnz	w0, 429a88 <nftw@plt+0x26f08>
  428fb4:	ldrb	w0, [x19, #16]
  428fb8:	cbnz	w0, 42911c <nftw@plt+0x2659c>
  428fbc:	mov	x0, x19
  428fc0:	bl	426920 <nftw@plt+0x23da0>
  428fc4:	tst	w0, #0xff
  428fc8:	b.eq	42911c <nftw@plt+0x2659c>  // b.none
  428fcc:	ldr	w0, [x19, #500]
  428fd0:	ldr	x1, [x19]
  428fd4:	stp	x25, x26, [sp, #64]
  428fd8:	cmp	x1, x21
  428fdc:	csel	w27, w27, wzr, eq  // eq = none
  428fe0:	cbnz	w0, 428ff8 <nftw@plt+0x26478>
  428fe4:	ldr	x20, [x19, #472]
  428fe8:	add	x0, x19, #0x1c8
  428fec:	str	x0, [x19, #488]
  428ff0:	add	x0, x20, #0x18
  428ff4:	str	x0, [x19, #448]
  428ff8:	mov	w0, #0x40                  	// #64
  428ffc:	strh	w0, [x20, #6]
  429000:	mov	x21, x1
  429004:	mov	w1, #0x41                  	// #65
  429008:	ldrb	w2, [x19, #25]
  42900c:	cmp	w2, #0x2
  429010:	csel	w0, w1, w0, eq  // eq = none
  429014:	strh	w0, [x20, #6]
  429018:	b	429020 <nftw@plt+0x264a0>
  42901c:	stp	x25, x26, [sp, #64]
  429020:	mov	w25, #0x594c                	// #22860
  429024:	movk	w25, #0x4620, lsl #16
  429028:	ldr	x0, [x19, #40]
  42902c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  429030:	add	x28, x1, #0x980
  429034:	ldr	w0, [x0, #60]
  429038:	str	w0, [x20]
  42903c:	ldr	w1, [x21, #56]
  429040:	ldr	x2, [x21, #48]
  429044:	lsl	x1, x1, #4
  429048:	ldr	x0, [x21]
  42904c:	ldr	x1, [x2, x1]
  429050:	cmp	x0, x1
  429054:	b.cs	4290e0 <nftw@plt+0x26560>  // b.hs, b.nlast
  429058:	ldr	w2, [x19, #1408]
  42905c:	add	x1, x0, #0x1
  429060:	str	x1, [x21]
  429064:	ldrb	w22, [x0]
  429068:	mov	w26, w22
  42906c:	cbz	w2, 429104 <nftw@plt+0x26584>
  429070:	str	w2, [x20]
  429074:	cmp	w22, #0x7e
  429078:	b.ls	4290d0 <nftw@plt+0x26550>  // b.plast
  42907c:	ldr	x2, [x21]
  429080:	sub	x2, x2, #0x1
  429084:	mov	x1, x20
  429088:	mov	x0, x19
  42908c:	mov	w4, #0x3d                  	// #61
  429090:	mov	w3, #0x1                   	// #1
  429094:	bl	427f18 <nftw@plt+0x25398>
  429098:	ldr	w22, [x20]
  42909c:	cmp	w22, #0x1
  4290a0:	b.ls	4290b0 <nftw@plt+0x26530>  // b.plast
  4290a4:	ldrb	w0, [x20, #4]
  4290a8:	cmp	w0, #0x16
  4290ac:	b.ne	429444 <nftw@plt+0x268c4>  // b.any
  4290b0:	mov	x0, x20
  4290b4:	ldp	x19, x20, [sp, #16]
  4290b8:	ldp	x21, x22, [sp, #32]
  4290bc:	ldp	x23, x24, [sp, #48]
  4290c0:	ldp	x25, x26, [sp, #64]
  4290c4:	ldp	x27, x28, [sp, #80]
  4290c8:	ldp	x29, x30, [sp], #144
  4290cc:	ret
  4290d0:	ldrh	w0, [x28, w22, uxtw #1]
  4290d4:	adr	x1, 4290e0 <nftw@plt+0x26560>
  4290d8:	add	x0, x1, w0, sxth #2
  4290dc:	br	x0
  4290e0:	ldr	x1, [x19, #8]
  4290e4:	cbnz	x1, 429058 <nftw@plt+0x264d8>
  4290e8:	mov	x0, x19
  4290ec:	bl	4269f0 <nftw@plt+0x23e70>
  4290f0:	ldr	x1, [x19, #40]
  4290f4:	ldr	x0, [x21]
  4290f8:	ldr	w1, [x1, #60]
  4290fc:	str	w1, [x20]
  429100:	b	429058 <nftw@plt+0x264d8>
  429104:	ldr	x2, [x21, #8]
  429108:	ldr	x0, [x19, #40]
  42910c:	sub	w1, w1, w2
  429110:	bl	42b748 <nftw@plt+0x28bc8>
  429114:	str	w0, [x20]
  429118:	b	429074 <nftw@plt+0x264f4>
  42911c:	mov	w0, #0x16                  	// #22
  429120:	strb	w0, [x20, #4]
  429124:	ldrb	w0, [x19, #16]
  429128:	cbnz	w0, 429140 <nftw@plt+0x265c0>
  42912c:	ldr	x1, [x19, #40]
  429130:	mov	w0, #0x40                  	// #64
  429134:	ldr	w1, [x1, #60]
  429138:	str	w1, [x20]
  42913c:	strh	w0, [x20, #6]
  429140:	mov	x0, x20
  429144:	ldp	x19, x20, [sp, #16]
  429148:	ldp	x21, x22, [sp, #32]
  42914c:	ldp	x23, x24, [sp, #48]
  429150:	ldp	x27, x28, [sp, #80]
  429154:	ldp	x29, x30, [sp], #144
  429158:	ret
  42915c:	ldr	x1, [x21]
  429160:	mov	w0, #0x35                  	// #53
  429164:	strb	w0, [x20, #4]
  429168:	sub	x1, x1, #0x1
  42916c:	mov	w2, #0x0                   	// #0
  429170:	add	x3, sp, #0x80
  429174:	add	x4, x20, #0x10
  429178:	mov	x0, x19
  42917c:	str	wzr, [sp, #128]
  429180:	strb	wzr, [sp, #132]
  429184:	str	wzr, [sp, #136]
  429188:	bl	426128 <nftw@plt+0x235a8>
  42918c:	ldr	w2, [x19, #1192]
  429190:	ldr	w1, [sp, #136]
  429194:	str	x0, [x20, #8]
  429198:	cmp	w2, w1
  42919c:	b.ge	4291bc <nftw@plt+0x2663c>  // b.tcont
  4291a0:	ldrb	w1, [x19, #18]
  4291a4:	cbnz	w1, 4291bc <nftw@plt+0x2663c>
  4291a8:	mov	x0, x19
  4291ac:	add	x2, sp, #0x88
  4291b0:	mov	x1, x20
  4291b4:	bl	427358 <nftw@plt+0x247d8>
  4291b8:	ldr	x0, [x20, #8]
  4291bc:	ldrh	w1, [x0, #18]
  4291c0:	tbz	w1, #2, 4291dc <nftw@plt+0x2665c>
  4291c4:	ldrb	w1, [x0, #16]
  4291c8:	ldrh	w0, [x20, #6]
  4291cc:	ubfx	x1, x1, #1, #7
  4291d0:	orr	w0, w0, #0x10
  4291d4:	strb	w1, [x20, #4]
  4291d8:	strh	w0, [x20, #6]
  4291dc:	cbz	w27, 429098 <nftw@plt+0x26518>
  4291e0:	ldrh	w0, [x20, #6]
  4291e4:	ldr	w22, [x20]
  4291e8:	orr	w0, w0, #0x20
  4291ec:	strh	w0, [x20, #6]
  4291f0:	b	42909c <nftw@plt+0x2651c>
  4291f4:	str	wzr, [sp, #128]
  4291f8:	mov	w0, #0x37                  	// #55
  4291fc:	strb	wzr, [sp, #132]
  429200:	add	x1, x20, #0x8
  429204:	str	wzr, [sp, #136]
  429208:	add	x3, sp, #0x80
  42920c:	strb	w0, [x20, #4]
  429210:	add	x2, x20, #0x10
  429214:	mov	x0, x19
  429218:	bl	428df0 <nftw@plt+0x26270>
  42921c:	ldr	w1, [x19, #1192]
  429220:	ldr	w0, [sp, #136]
  429224:	cmp	w1, w0
  429228:	b.ge	429098 <nftw@plt+0x26518>  // b.tcont
  42922c:	ldrb	w0, [x19, #18]
  429230:	cbnz	w0, 429098 <nftw@plt+0x26518>
  429234:	add	x2, sp, #0x88
  429238:	mov	x1, x20
  42923c:	mov	x0, x19
  429240:	bl	427358 <nftw@plt+0x247d8>
  429244:	ldr	w22, [x20]
  429248:	b	42909c <nftw@plt+0x2651c>
  42924c:	ldr	x22, [x19]
  429250:	adrp	x6, 46a000 <_obstack_memory_used@@Base+0x205a0>
  429254:	ldrh	w0, [x20, #6]
  429258:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42925c:	add	x6, x6, #0x248
  429260:	add	x8, x1, #0x448
  429264:	orr	w0, w0, #0x1
  429268:	mov	w7, #0x0                   	// #0
  42926c:	strh	w0, [x20, #6]
  429270:	ldr	x0, [x22]
  429274:	b	4292ec <nftw@plt+0x2676c>
  429278:	ldrb	w1, [x19, #16]
  42927c:	cbz	w1, 4292d0 <nftw@plt+0x26750>
  429280:	ldrb	w1, [x19, #1154]
  429284:	cbz	w1, 4292d0 <nftw@plt+0x26750>
  429288:	ldr	x1, [x19, #40]
  42928c:	cmp	w26, #0xc
  429290:	ldr	x3, [x22, #8]
  429294:	csel	x5, x8, x23, eq  // eq = none
  429298:	ldr	w2, [x1, #60]
  42929c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4292a0:	sub	w3, w0, w3
  4292a4:	mov	w1, #0x2                   	// #2
  4292a8:	add	x4, x4, #0x488
  4292ac:	mov	x0, x19
  4292b0:	str	w7, [sp, #96]
  4292b4:	bl	41f458 <nftw@plt+0x1c8d8>
  4292b8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4292bc:	ldr	w7, [sp, #96]
  4292c0:	ldr	x0, [x22]
  4292c4:	add	x8, x1, #0x448
  4292c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4292cc:	add	x6, x1, #0x248
  4292d0:	add	x1, x0, #0x1
  4292d4:	str	x1, [x22]
  4292d8:	ldrb	w2, [x0]
  4292dc:	mov	x26, x2
  4292e0:	ldrh	w2, [x6, x2, lsl #1]
  4292e4:	tbz	w2, #11, 4299c8 <nftw@plt+0x26e48>
  4292e8:	mov	x0, x1
  4292ec:	cmp	w26, #0x20
  4292f0:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  4292f4:	b.eq	4292d0 <nftw@plt+0x26750>  // b.none
  4292f8:	cbnz	w26, 429278 <nftw@plt+0x266f8>
  4292fc:	mov	w7, #0x1                   	// #1
  429300:	b	4292d0 <nftw@plt+0x26750>
  429304:	cmp	w22, #0x4c
  429308:	ldr	x1, [x21]
  42930c:	b.eq	429328 <nftw@plt+0x267a8>  // b.none
  429310:	ldrb	w0, [x19, #1130]
  429314:	cbnz	w0, 429b64 <nftw@plt+0x26fe4>
  429318:	cmp	w22, #0x52
  42931c:	b.eq	429160 <nftw@plt+0x265e0>  // b.none
  429320:	ldrb	w0, [x19, #1128]
  429324:	cbz	w0, 429160 <nftw@plt+0x265e0>
  429328:	ldrb	w0, [x1]
  42932c:	cmp	w0, #0x27
  429330:	b.eq	429390 <nftw@plt+0x26810>  // b.none
  429334:	cmp	w0, #0x22
  429338:	b.eq	429390 <nftw@plt+0x26810>  // b.none
  42933c:	cmp	w22, #0x52
  429340:	mov	w2, #0x52                  	// #82
  429344:	ccmp	w0, w2, #0x0, ne  // ne = any
  429348:	b.eq	42a0c0 <nftw@plt+0x27540>  // b.none
  42934c:	cmp	w0, #0x38
  429350:	mov	w0, #0x75                  	// #117
  429354:	ccmp	w22, w0, #0x0, eq  // eq = none
  429358:	b.ne	429160 <nftw@plt+0x265e0>  // b.any
  42935c:	ldrb	w0, [x1, #1]
  429360:	cmp	w0, #0x22
  429364:	b.eq	429390 <nftw@plt+0x26810>  // b.none
  429368:	cmp	w0, #0x27
  42936c:	b.eq	42a550 <nftw@plt+0x279d0>  // b.none
  429370:	cmp	w0, #0x52
  429374:	b.ne	429160 <nftw@plt+0x265e0>  // b.any
  429378:	ldrb	w0, [x1, #2]
  42937c:	cmp	w0, #0x22
  429380:	b.ne	429160 <nftw@plt+0x265e0>  // b.any
  429384:	ldrb	w0, [x19, #1130]
  429388:	cbz	w0, 429160 <nftw@plt+0x265e0>
  42938c:	nop
  429390:	sub	x2, x1, #0x1
  429394:	mov	x0, x19
  429398:	mov	x1, x20
  42939c:	bl	427f70 <nftw@plt+0x253f0>
  4293a0:	ldr	w22, [x20]
  4293a4:	b	42909c <nftw@plt+0x2651c>
  4293a8:	ldr	x22, [x21]
  4293ac:	add	x2, sp, #0x80
  4293b0:	mov	x0, x19
  4293b4:	mov	w1, #0x1                   	// #1
  4293b8:	sub	x22, x22, #0x1
  4293bc:	str	x22, [x21]
  4293c0:	str	wzr, [sp, #128]
  4293c4:	strb	wzr, [sp, #132]
  4293c8:	str	wzr, [sp, #136]
  4293cc:	bl	425f10 <nftw@plt+0x23390>
  4293d0:	tst	w0, #0xff
  4293d4:	b.ne	429b7c <nftw@plt+0x26ffc>  // b.any
  4293d8:	ldr	x2, [x21]
  4293dc:	add	x0, x2, #0x1
  4293e0:	str	x0, [x21]
  4293e4:	b	429084 <nftw@plt+0x26504>
  4293e8:	ldr	x2, [x21]
  4293ec:	mov	x1, x20
  4293f0:	mov	x0, x19
  4293f4:	sub	x2, x2, #0x1
  4293f8:	bl	427f70 <nftw@plt+0x253f0>
  4293fc:	ldr	w22, [x20]
  429400:	b	42909c <nftw@plt+0x2651c>
  429404:	ldr	x0, [x21]
  429408:	mov	w1, #0xa                   	// #10
  42940c:	strb	w1, [x20, #4]
  429410:	ldrb	w1, [x0]
  429414:	cmp	w1, #0x7c
  429418:	b.eq	429b50 <nftw@plt+0x26fd0>  // b.none
  42941c:	cmp	w1, #0x3d
  429420:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429424:	add	x0, x0, #0x1
  429428:	str	x0, [x21]
  42942c:	mov	w0, #0x21                  	// #33
  429430:	strb	w0, [x20, #4]
  429434:	nop
  429438:	ldr	w22, [x20]
  42943c:	cmp	w22, #0x1
  429440:	b.ls	4290b0 <nftw@plt+0x26530>  // b.plast
  429444:	ldr	w0, [x21, #56]
  429448:	ldr	x2, [x21, #48]
  42944c:	lsl	x0, x0, #4
  429450:	ldr	x1, [x21]
  429454:	ldr	x0, [x2, x0]
  429458:	cmp	x1, x0
  42945c:	b.cc	429468 <nftw@plt+0x268e8>  // b.lo, b.ul, b.last
  429460:	ldr	x0, [x19, #8]
  429464:	cbz	x0, 4299b0 <nftw@plt+0x26e30>
  429468:	ldr	x2, [x21, #8]
  42946c:	ldr	x0, [x19, #40]
  429470:	sub	w1, w1, w2
  429474:	bl	42b748 <nftw@plt+0x28bc8>
  429478:	mov	w3, w0
  42947c:	ldr	w1, [x20]
  429480:	mov	x2, #0x0                   	// #0
  429484:	ldr	x0, [x19, #40]
  429488:	bfxil	x2, x22, #0, #32
  42948c:	bfi	x2, x3, #32, #32
  429490:	mov	x3, #0x0                   	// #0
  429494:	bl	42b980 <nftw@plt+0x28e00>
  429498:	ldp	x25, x26, [sp, #64]
  42949c:	str	w0, [x20]
  4294a0:	mov	x0, x20
  4294a4:	ldp	x19, x20, [sp, #16]
  4294a8:	ldp	x21, x22, [sp, #32]
  4294ac:	ldp	x23, x24, [sp, #48]
  4294b0:	ldp	x27, x28, [sp, #80]
  4294b4:	ldp	x29, x30, [sp], #144
  4294b8:	ret
  4294bc:	mov	w0, #0x2a                  	// #42
  4294c0:	strb	w0, [x20, #4]
  4294c4:	b	429438 <nftw@plt+0x268b8>
  4294c8:	mov	w0, #0xe                   	// #14
  4294cc:	strb	w0, [x20, #4]
  4294d0:	b	429438 <nftw@plt+0x268b8>
  4294d4:	ldr	x1, [x21]
  4294d8:	ldr	x0, [x21, #32]
  4294dc:	cmp	x1, x0
  4294e0:	b.cc	429bb4 <nftw@plt+0x27034>  // b.lo, b.ul, b.last
  4294e4:	mov	w0, #0x1                   	// #1
  4294e8:	strb	w0, [x21, #104]
  4294ec:	ldp	x25, x26, [sp, #64]
  4294f0:	b	428f9c <nftw@plt+0x2641c>
  4294f4:	ldr	x0, [x21]
  4294f8:	mov	w1, #0x1                   	// #1
  4294fc:	strb	w1, [x20, #4]
  429500:	ldrb	w1, [x0]
  429504:	cmp	w1, #0x3d
  429508:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  42950c:	add	x0, x0, #0x1
  429510:	str	x0, [x21]
  429514:	mov	w0, #0x18                  	// #24
  429518:	strb	w0, [x20, #4]
  42951c:	b	429438 <nftw@plt+0x268b8>
  429520:	mov	w0, #0x2b                  	// #43
  429524:	strb	w0, [x20, #4]
  429528:	b	429438 <nftw@plt+0x268b8>
  42952c:	ldrb	w0, [x19, #19]
  429530:	ldr	x2, [x21]
  429534:	cbnz	w0, 429bfc <nftw@plt+0x2707c>
  429538:	mov	w0, #0x3                   	// #3
  42953c:	strb	w0, [x20, #4]
  429540:	ldrb	w0, [x2]
  429544:	cmp	w0, #0x3d
  429548:	b.eq	429c20 <nftw@plt+0x270a0>  // b.none
  42954c:	cmp	w0, #0x3c
  429550:	b.eq	429dec <nftw@plt+0x2726c>  // b.none
  429554:	ldrb	w1, [x19, #1126]
  429558:	cbz	w1, 429438 <nftw@plt+0x268b8>
  42955c:	cmp	w0, #0x3a
  429560:	b.eq	42a0d0 <nftw@plt+0x27550>  // b.none
  429564:	cmp	w0, #0x25
  429568:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  42956c:	ldrh	w0, [x20, #6]
  429570:	add	x2, x2, #0x1
  429574:	str	x2, [x21]
  429578:	mov	w1, #0x29                  	// #41
  42957c:	orr	w0, w0, #0x2
  429580:	strb	w1, [x20, #4]
  429584:	strh	w0, [x20, #6]
  429588:	b	429438 <nftw@plt+0x268b8>
  42958c:	ldr	x0, [x21]
  429590:	strb	wzr, [x20, #4]
  429594:	ldrb	w1, [x0]
  429598:	cmp	w1, #0x3d
  42959c:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  4295a0:	add	x0, x0, #0x1
  4295a4:	str	x0, [x21]
  4295a8:	mov	w0, #0x17                  	// #23
  4295ac:	strb	w0, [x20, #4]
  4295b0:	b	429438 <nftw@plt+0x268b8>
  4295b4:	ldr	x0, [x21]
  4295b8:	mov	w1, #0x5                   	// #5
  4295bc:	strb	w1, [x20, #4]
  4295c0:	ldrb	w1, [x0]
  4295c4:	cmp	w1, #0x3e
  4295c8:	b.eq	429b18 <nftw@plt+0x26f98>  // b.none
  4295cc:	cmp	w1, #0x2d
  4295d0:	b.eq	429db0 <nftw@plt+0x27230>  // b.none
  4295d4:	cmp	w1, #0x3d
  4295d8:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  4295dc:	add	x0, x0, #0x1
  4295e0:	str	x0, [x21]
  4295e4:	mov	w0, #0x1c                  	// #28
  4295e8:	strb	w0, [x20, #4]
  4295ec:	b	429438 <nftw@plt+0x268b8>
  4295f0:	mov	w0, #0x29                  	// #41
  4295f4:	strb	w0, [x20, #4]
  4295f8:	b	429438 <nftw@plt+0x268b8>
  4295fc:	ldr	x2, [x21]
  429600:	mov	w0, #0x30                  	// #48
  429604:	strb	w0, [x20, #4]
  429608:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  42960c:	add	x0, x0, #0x248
  429610:	ldrb	w1, [x2]
  429614:	ldrh	w0, [x0, w1, sxtw #1]
  429618:	tbnz	w0, #2, 4291f4 <nftw@plt+0x26674>
  42961c:	cmp	w1, #0x2e
  429620:	b.eq	429d90 <nftw@plt+0x27210>  // b.none
  429624:	cmp	w1, #0x2a
  429628:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  42962c:	ldrb	w0, [x19, #1120]
  429630:	cbz	w0, 429438 <nftw@plt+0x268b8>
  429634:	add	x2, x2, #0x1
  429638:	str	x2, [x21]
  42963c:	mov	w0, #0x33                  	// #51
  429640:	strb	w0, [x20, #4]
  429644:	b	429438 <nftw@plt+0x268b8>
  429648:	ldr	x28, [x21]
  42964c:	ldrb	w26, [x28]
  429650:	cmp	w26, #0x2a
  429654:	b.eq	429dc4 <nftw@plt+0x27244>  // b.none
  429658:	cmp	w26, #0x2f
  42965c:	b.ne	42a4b4 <nftw@plt+0x27934>  // b.any
  429660:	ldrb	w0, [x19, #1160]
  429664:	cbnz	w0, 42a1d4 <nftw@plt+0x27654>
  429668:	ldr	x2, [x19]
  42966c:	cbz	x2, 429678 <nftw@plt+0x26af8>
  429670:	ldrb	w0, [x2, #106]
  429674:	cbnz	w0, 4296d8 <nftw@plt+0x26b58>
  429678:	ldr	w0, [x19, #1116]
  42967c:	cbnz	w0, 429c34 <nftw@plt+0x270b4>
  429680:	ldrb	w1, [x19, #1154]
  429684:	cbz	w1, 429690 <nftw@plt+0x26b10>
  429688:	ldrb	w1, [x21, #105]
  42968c:	tbz	w1, #0, 42a16c <nftw@plt+0x275ec>
  429690:	ldrsb	w1, [x19, #1198]
  429694:	cmp	w1, #0x0
  429698:	b.le	4296d8 <nftw@plt+0x26b58>
  42969c:	ldrb	w1, [x19, #1120]
  4296a0:	cbnz	w1, 4296d8 <nftw@plt+0x26b58>
  4296a4:	ldrb	w1, [x21, #105]
  4296a8:	tbz	w1, #0, 42a138 <nftw@plt+0x275b8>
  4296ac:	sub	w0, w0, #0x5
  4296b0:	cmp	w0, #0x1
  4296b4:	b.hi	4296d8 <nftw@plt+0x26b58>  // b.pmore
  4296b8:	ldrb	w0, [x28, #1]
  4296bc:	cmp	w0, #0x2a
  4296c0:	b.eq	42a1d4 <nftw@plt+0x27654>  // b.none
  4296c4:	ldr	w0, [x19, #16]
  4296c8:	tst	w0, #0xff00ff
  4296cc:	b.ne	42a1d4 <nftw@plt+0x27654>  // b.any
  4296d0:	ldrb	w0, [x21, #105]
  4296d4:	tbz	w0, #0, 42a108 <nftw@plt+0x27588>
  4296d8:	ldr	x0, [x2]
  4296dc:	ldr	x1, [x19, #40]
  4296e0:	ldrb	w3, [x0], #1
  4296e4:	ldr	w22, [x1, #60]
  4296e8:	cmp	w3, #0xa
  4296ec:	b.eq	429700 <nftw@plt+0x26b80>  // b.none
  4296f0:	str	x0, [x2]
  4296f4:	ldrb	w1, [x0], #1
  4296f8:	cmp	w1, #0xa
  4296fc:	b.ne	4296f0 <nftw@plt+0x26b70>  // b.any
  429700:	mov	x0, x19
  429704:	mov	w1, #0x1                   	// #1
  429708:	bl	4269f0 <nftw@plt+0x23e70>
  42970c:	ldr	x0, [x19, #40]
  429710:	ldr	w0, [x0, #60]
  429714:	cmp	w22, w0
  429718:	b.eq	429724 <nftw@plt+0x26ba4>  // b.none
  42971c:	ldrb	w0, [x19, #1133]
  429720:	cbnz	w0, 429e1c <nftw@plt+0x2729c>
  429724:	ldrb	w0, [x19, #1144]
  429728:	add	x22, x28, #0x1
  42972c:	ldr	x3, [x19]
  429730:	cmp	w0, #0x2
  429734:	b.eq	429c4c <nftw@plt+0x270cc>  // b.none
  429738:	b.hi	4299f8 <nftw@plt+0x26e78>  // b.pmore
  42973c:	cmp	w0, #0x1
  429740:	csinc	w27, w27, wzr, ne  // ne = any
  429744:	ldr	x4, [x19, #1072]
  429748:	cbz	x4, 429768 <nftw@plt+0x26be8>
  42974c:	ldr	w1, [x20]
  429750:	sub	x2, x28, #0x1
  429754:	ldr	x3, [x3]
  429758:	mov	x0, x19
  42975c:	sub	x3, x3, x28
  429760:	add	x3, x3, #0x1
  429764:	blr	x4
  429768:	ldrb	w0, [x19, #21]
  42976c:	cbnz	w0, 42a390 <nftw@plt+0x27810>
  429770:	ldrh	w0, [x20, #6]
  429774:	orr	w0, w0, #0x1
  429778:	strh	w0, [x20, #6]
  42977c:	b	429028 <nftw@plt+0x264a8>
  429780:	ldr	x0, [x21]
  429784:	mov	w1, #0x6                   	// #6
  429788:	strb	w1, [x20, #4]
  42978c:	ldrb	w1, [x0]
  429790:	cmp	w1, #0x3d
  429794:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429798:	add	x0, x0, #0x1
  42979c:	str	x0, [x21]
  4297a0:	mov	w0, #0x1d                  	// #29
  4297a4:	strb	w0, [x20, #4]
  4297a8:	b	429438 <nftw@plt+0x268b8>
  4297ac:	ldr	x0, [x21]
  4297b0:	mov	w1, #0xb                   	// #11
  4297b4:	strb	w1, [x20, #4]
  4297b8:	ldrb	w1, [x0]
  4297bc:	cmp	w1, #0x3d
  4297c0:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  4297c4:	add	x0, x0, #0x1
  4297c8:	str	x0, [x21]
  4297cc:	mov	w0, #0x22                  	// #34
  4297d0:	strb	w0, [x20, #4]
  4297d4:	b	429438 <nftw@plt+0x268b8>
  4297d8:	mov	w0, #0x27                  	// #39
  4297dc:	strb	w0, [x20, #4]
  4297e0:	b	429438 <nftw@plt+0x268b8>
  4297e4:	mov	w0, #0x34                  	// #52
  4297e8:	strb	w0, [x20, #4]
  4297ec:	b	429438 <nftw@plt+0x268b8>
  4297f0:	mov	w0, #0x28                  	// #40
  4297f4:	strb	w0, [x20, #4]
  4297f8:	b	429438 <nftw@plt+0x268b8>
  4297fc:	mov	w0, #0x11                  	// #17
  429800:	strb	w0, [x20, #4]
  429804:	b	429438 <nftw@plt+0x268b8>
  429808:	mov	w0, #0x15                  	// #21
  42980c:	strb	w0, [x20, #4]
  429810:	b	429438 <nftw@plt+0x268b8>
  429814:	ldr	x0, [x21]
  429818:	mov	w1, #0x2                   	// #2
  42981c:	strb	w1, [x20, #4]
  429820:	ldrb	w1, [x0]
  429824:	cmp	w1, #0x3d
  429828:	b.eq	429adc <nftw@plt+0x26f5c>  // b.none
  42982c:	cmp	w1, #0x3e
  429830:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429834:	add	x1, x0, #0x1
  429838:	str	x1, [x21]
  42983c:	mov	w1, #0xc                   	// #12
  429840:	strb	w1, [x20, #4]
  429844:	ldrb	w1, [x0, #1]
  429848:	cmp	w1, #0x3d
  42984c:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429850:	add	x0, x0, #0x2
  429854:	str	x0, [x21]
  429858:	mov	w0, #0x23                  	// #35
  42985c:	strb	w0, [x20, #4]
  429860:	b	429438 <nftw@plt+0x268b8>
  429864:	mov	w0, #0x14                  	// #20
  429868:	strb	w0, [x20, #4]
  42986c:	b	429438 <nftw@plt+0x268b8>
  429870:	mov	w0, #0x13                  	// #19
  429874:	strb	w0, [x20, #4]
  429878:	b	429438 <nftw@plt+0x268b8>
  42987c:	ldr	x0, [x21]
  429880:	mov	w1, #0x9                   	// #9
  429884:	strb	w1, [x20, #4]
  429888:	ldrb	w1, [x0]
  42988c:	cmp	w1, #0x26
  429890:	b.eq	429ac8 <nftw@plt+0x26f48>  // b.none
  429894:	cmp	w1, #0x3d
  429898:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  42989c:	add	x0, x0, #0x1
  4298a0:	str	x0, [x21]
  4298a4:	mov	w0, #0x20                  	// #32
  4298a8:	strb	w0, [x20, #4]
  4298ac:	b	429438 <nftw@plt+0x268b8>
  4298b0:	ldr	x0, [x21]
  4298b4:	mov	w1, #0x4                   	// #4
  4298b8:	strb	w1, [x20, #4]
  4298bc:	ldrb	w1, [x0]
  4298c0:	cmp	w1, #0x2b
  4298c4:	b.eq	429af0 <nftw@plt+0x26f70>  // b.none
  4298c8:	cmp	w1, #0x3d
  4298cc:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  4298d0:	add	x0, x0, #0x1
  4298d4:	str	x0, [x21]
  4298d8:	mov	w0, #0x1b                  	// #27
  4298dc:	strb	w0, [x20, #4]
  4298e0:	b	429438 <nftw@plt+0x268b8>
  4298e4:	ldr	x0, [x21]
  4298e8:	mov	w1, #0x25                  	// #37
  4298ec:	strb	w1, [x20, #4]
  4298f0:	ldrb	w1, [x0]
  4298f4:	cmp	w1, #0x23
  4298f8:	b.ne	42990c <nftw@plt+0x26d8c>  // b.any
  4298fc:	add	x0, x0, #0x1
  429900:	str	x0, [x21]
  429904:	mov	w0, #0x26                  	// #38
  429908:	strb	w0, [x20, #4]
  42990c:	ldr	w22, [x20]
  429910:	str	wzr, [x20, #8]
  429914:	b	42909c <nftw@plt+0x2651c>
  429918:	ldr	x0, [x21]
  42991c:	mov	w1, #0x8                   	// #8
  429920:	strb	w1, [x20, #4]
  429924:	ldrb	w1, [x0]
  429928:	cmp	w1, #0x3d
  42992c:	b.eq	429b04 <nftw@plt+0x26f84>  // b.none
  429930:	ldrb	w2, [x19, #1126]
  429934:	cbz	w2, 429438 <nftw@plt+0x268b8>
  429938:	cmp	w1, #0x3a
  42993c:	b.eq	429e34 <nftw@plt+0x272b4>  // b.none
  429940:	cmp	w1, #0x3e
  429944:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429948:	ldrh	w1, [x20, #6]
  42994c:	add	x0, x0, #0x1
  429950:	str	x0, [x21]
  429954:	mov	w2, #0x2a                  	// #42
  429958:	orr	w0, w1, #0x2
  42995c:	strb	w2, [x20, #4]
  429960:	strh	w0, [x20, #6]
  429964:	b	429438 <nftw@plt+0x268b8>
  429968:	ldr	x0, [x21]
  42996c:	mov	w1, #0x12                  	// #18
  429970:	strb	w1, [x20, #4]
  429974:	ldrb	w1, [x0]
  429978:	cmp	w1, #0x3a
  42997c:	b.eq	429aac <nftw@plt+0x26f2c>  // b.none
  429980:	cmp	w1, #0x3e
  429984:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429988:	ldrb	w1, [x19, #1126]
  42998c:	cbz	w1, 429438 <nftw@plt+0x268b8>
  429990:	ldrh	w1, [x20, #6]
  429994:	add	x0, x0, #0x1
  429998:	str	x0, [x21]
  42999c:	mov	w2, #0x28                  	// #40
  4299a0:	orr	w0, w1, #0x2
  4299a4:	strb	w2, [x20, #4]
  4299a8:	strh	w0, [x20, #6]
  4299ac:	b	429438 <nftw@plt+0x268b8>
  4299b0:	mov	w1, #0x0                   	// #0
  4299b4:	mov	x0, x19
  4299b8:	bl	4269f0 <nftw@plt+0x23e70>
  4299bc:	ldr	w22, [x20]
  4299c0:	ldr	x1, [x21]
  4299c4:	b	429468 <nftw@plt+0x268e8>
  4299c8:	cbnz	w7, 4299d4 <nftw@plt+0x26e54>
  4299cc:	str	x0, [x22]
  4299d0:	b	42903c <nftw@plt+0x264bc>
  4299d4:	mov	x0, x19
  4299d8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4299dc:	mov	w1, #0x0                   	// #0
  4299e0:	add	x2, x2, #0x4a8
  4299e4:	bl	41f298 <nftw@plt+0x1c718>
  4299e8:	ldr	x0, [x22]
  4299ec:	sub	x0, x0, #0x1
  4299f0:	str	x0, [x22]
  4299f4:	b	42903c <nftw@plt+0x264bc>
  4299f8:	sub	w1, w0, #0x3
  4299fc:	and	w1, w1, #0xff
  429a00:	cmp	w1, #0x1
  429a04:	b.hi	429744 <nftw@plt+0x26bc4>  // b.pmore
  429a08:	ldrb	w4, [x28, #1]
  429a0c:	cmp	w4, #0x40
  429a10:	cset	w5, eq  // eq = none
  429a14:	cmp	w4, #0x2d
  429a18:	csinc	w5, w5, wzr, ne  // ne = any
  429a1c:	cbz	w5, 429e80 <nftw@plt+0x27300>
  429a20:	ldr	x0, [x3]
  429a24:	sub	x0, x0, x22
  429a28:	sub	x0, x0, #0x1
  429a2c:	cmp	x0, #0xa
  429a30:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  429a34:	ldur	x1, [x28, #2]
  429a38:	cmp	x1, x24
  429a3c:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  429a40:	ldrh	w2, [x28, #10]
  429a44:	mov	w1, #0x6775                	// #26485
  429a48:	cmp	w2, w1
  429a4c:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  429a50:	ldrb	w0, [x28, #12]
  429a54:	cmp	w0, #0x68
  429a58:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  429a5c:	cmp	w4, #0x40
  429a60:	b.eq	42a37c <nftw@plt+0x277fc>  // b.none
  429a64:	mov	x0, #0xc                   	// #12
  429a68:	add	x22, x22, x0
  429a6c:	ldrb	w0, [x28]
  429a70:	cmp	w0, #0x2a
  429a74:	b.eq	42a204 <nftw@plt+0x27684>  // b.none
  429a78:	ldrb	w0, [x22]
  429a7c:	cmp	w0, #0xa
  429a80:	csinc	w27, w27, wzr, ne  // ne = any
  429a84:	b	429744 <nftw@plt+0x26bc4>
  429a88:	mov	w0, #0x52                  	// #82
  429a8c:	strb	w0, [x20, #4]
  429a90:	strb	wzr, [x19, #32]
  429a94:	ldrb	w0, [x19, #33]
  429a98:	cbnz	w0, 429140 <nftw@plt+0x265c0>
  429a9c:	ldrb	w0, [x19, #24]
  429aa0:	sub	w0, w0, #0x1
  429aa4:	strb	w0, [x19, #24]
  429aa8:	b	429140 <nftw@plt+0x265c0>
  429aac:	ldrb	w1, [x19, #1120]
  429ab0:	cbz	w1, 429438 <nftw@plt+0x268b8>
  429ab4:	add	x0, x0, #0x1
  429ab8:	str	x0, [x21]
  429abc:	mov	w0, #0x31                  	// #49
  429ac0:	strb	w0, [x20, #4]
  429ac4:	b	429438 <nftw@plt+0x268b8>
  429ac8:	add	x0, x0, #0x1
  429acc:	str	x0, [x21]
  429ad0:	mov	w0, #0xf                   	// #15
  429ad4:	strb	w0, [x20, #4]
  429ad8:	b	429438 <nftw@plt+0x268b8>
  429adc:	add	x0, x0, #0x1
  429ae0:	str	x0, [x21]
  429ae4:	mov	w0, #0x19                  	// #25
  429ae8:	strb	w0, [x20, #4]
  429aec:	b	429438 <nftw@plt+0x268b8>
  429af0:	add	x0, x0, #0x1
  429af4:	str	x0, [x21]
  429af8:	mov	w0, #0x2d                  	// #45
  429afc:	strb	w0, [x20, #4]
  429b00:	b	429438 <nftw@plt+0x268b8>
  429b04:	add	x0, x0, #0x1
  429b08:	str	x0, [x21]
  429b0c:	mov	w0, #0x1f                  	// #31
  429b10:	strb	w0, [x20, #4]
  429b14:	b	429438 <nftw@plt+0x268b8>
  429b18:	add	x1, x0, #0x1
  429b1c:	str	x1, [x21]
  429b20:	mov	w1, #0x2f                  	// #47
  429b24:	strb	w1, [x20, #4]
  429b28:	ldrb	w1, [x0, #1]
  429b2c:	cmp	w1, #0x2a
  429b30:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429b34:	ldrb	w1, [x19, #1120]
  429b38:	cbz	w1, 429438 <nftw@plt+0x268b8>
  429b3c:	add	x0, x0, #0x2
  429b40:	str	x0, [x21]
  429b44:	mov	w0, #0x32                  	// #50
  429b48:	strb	w0, [x20, #4]
  429b4c:	b	429438 <nftw@plt+0x268b8>
  429b50:	add	x0, x0, #0x1
  429b54:	str	x0, [x21]
  429b58:	mov	w0, #0x10                  	// #16
  429b5c:	strb	w0, [x20, #4]
  429b60:	b	429438 <nftw@plt+0x268b8>
  429b64:	ldrb	w0, [x1]
  429b68:	cmp	w0, #0x27
  429b6c:	b.ne	429334 <nftw@plt+0x267b4>  // b.any
  429b70:	cmp	w22, #0x52
  429b74:	b.eq	429160 <nftw@plt+0x265e0>  // b.none
  429b78:	b	429390 <nftw@plt+0x26810>
  429b7c:	mov	w0, #0x35                  	// #53
  429b80:	strb	w0, [x20, #4]
  429b84:	mov	x1, x22
  429b88:	add	x4, x20, #0x10
  429b8c:	add	x3, sp, #0x80
  429b90:	mov	x0, x19
  429b94:	mov	w2, #0x1                   	// #1
  429b98:	bl	426128 <nftw@plt+0x235a8>
  429b9c:	ldr	w1, [x19, #1192]
  429ba0:	str	x0, [x20, #8]
  429ba4:	ldr	w0, [sp, #136]
  429ba8:	cmp	w1, w0
  429bac:	b.lt	42922c <nftw@plt+0x266ac>  // b.tstop
  429bb0:	b	429098 <nftw@plt+0x26518>
  429bb4:	ldr	x0, [x19, #40]
  429bb8:	mov	w4, #0x18                  	// #24
  429bbc:	mov	w2, #0x0                   	// #0
  429bc0:	ldr	w1, [x0, #12]
  429bc4:	ldr	x5, [x0]
  429bc8:	sub	w1, w1, #0x1
  429bcc:	ldr	w3, [x0, #60]
  429bd0:	smull	x1, w1, w4
  429bd4:	add	x4, x5, x1
  429bd8:	ldr	w1, [x5, x1]
  429bdc:	ldrb	w5, [x4, #6]
  429be0:	ldr	w4, [x4, #16]
  429be4:	sub	w1, w3, w1
  429be8:	add	w4, w4, #0x1
  429bec:	lsr	w1, w1, w5
  429bf0:	add	w1, w1, w4
  429bf4:	bl	42b4f0 <nftw@plt+0x28970>
  429bf8:	b	4294e4 <nftw@plt+0x26964>
  429bfc:	mov	x0, x19
  429c00:	sub	x2, x2, #0x1
  429c04:	mov	x1, x20
  429c08:	bl	427f70 <nftw@plt+0x253f0>
  429c0c:	ldrb	w0, [x20, #4]
  429c10:	cmp	w0, #0x3
  429c14:	b.ne	429098 <nftw@plt+0x26518>  // b.any
  429c18:	ldr	x2, [x21]
  429c1c:	b	429538 <nftw@plt+0x269b8>
  429c20:	add	x2, x2, #0x1
  429c24:	str	x2, [x21]
  429c28:	mov	w0, #0x1a                  	// #26
  429c2c:	strb	w0, [x20, #4]
  429c30:	b	429438 <nftw@plt+0x268b8>
  429c34:	ldrsb	w1, [x19, #1198]
  429c38:	cmp	w1, #0x0
  429c3c:	b.le	4296ac <nftw@plt+0x26b2c>
  429c40:	ldrb	w1, [x19, #1120]
  429c44:	cbnz	w1, 4296ac <nftw@plt+0x26b2c>
  429c48:	b	4296a4 <nftw@plt+0x26b24>
  429c4c:	ldr	x2, [x3]
  429c50:	sub	x0, x2, x22
  429c54:	cmp	x0, #0x7
  429c58:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  429c5c:	mov	w1, #0x2d                  	// #45
  429c60:	b	429c74 <nftw@plt+0x270f4>
  429c64:	add	x22, x22, #0x1
  429c68:	sub	x0, x2, x22
  429c6c:	cmp	x0, #0x7
  429c70:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  429c74:	ldrb	w0, [x22]
  429c78:	and	w0, w0, #0xffffffdf
  429c7c:	and	w0, w0, #0xff
  429c80:	cmp	w0, #0x46
  429c84:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429c88:	ldrb	w0, [x22, #1]
  429c8c:	and	w0, w0, #0xffffffdf
  429c90:	and	w0, w0, #0xff
  429c94:	cmp	w0, #0x41
  429c98:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429c9c:	ldrb	w0, [x22, #2]
  429ca0:	and	w0, w0, #0xffffffdf
  429ca4:	and	w0, w0, #0xff
  429ca8:	cmp	w0, #0x4c
  429cac:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429cb0:	ldrb	w0, [x22, #3]
  429cb4:	and	w0, w0, #0xffffffdf
  429cb8:	and	w0, w0, #0xff
  429cbc:	cmp	w0, #0x4c
  429cc0:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429cc4:	ldrb	w0, [x22, #4]
  429cc8:	and	w4, w0, #0xffffffdf
  429ccc:	cmp	w4, #0x53
  429cd0:	b.ne	429d88 <nftw@plt+0x27208>  // b.any
  429cd4:	ldrb	w0, [x22, #5]
  429cd8:	add	x22, x22, #0x5
  429cdc:	b	429ce4 <nftw@plt+0x27164>
  429ce0:	ldrb	w0, [x22, #1]!
  429ce4:	cmp	w0, #0x20
  429ce8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429cec:	ccmp	w0, w1, #0x4, ne  // ne = any
  429cf0:	b.eq	429ce0 <nftw@plt+0x27160>  // b.none
  429cf4:	and	w0, w0, #0xffffffdf
  429cf8:	cmp	w0, #0x54
  429cfc:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429d00:	ldrb	w0, [x22, #1]
  429d04:	and	w0, w0, #0xffffffdf
  429d08:	and	w0, w0, #0xff
  429d0c:	cmp	w0, #0x48
  429d10:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429d14:	ldrb	w0, [x22, #2]
  429d18:	and	w0, w0, #0xffffffdf
  429d1c:	and	w0, w0, #0xff
  429d20:	cmp	w0, #0x52
  429d24:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429d28:	ldrb	w0, [x22, #3]
  429d2c:	and	w0, w0, #0xffffffdf
  429d30:	and	w0, w0, #0xff
  429d34:	cmp	w0, #0x55
  429d38:	b.eq	429d80 <nftw@plt+0x27200>  // b.none
  429d3c:	cmp	w0, #0x4f
  429d40:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429d44:	ldrb	w0, [x22, #4]
  429d48:	and	w0, w0, #0xffffffdf
  429d4c:	and	w0, w0, #0xff
  429d50:	cmp	w0, #0x55
  429d54:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429d58:	ldrb	w0, [x22, #5]
  429d5c:	and	w0, w0, #0xffffffdf
  429d60:	and	w0, w0, #0xff
  429d64:	cmp	w0, #0x47
  429d68:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429d6c:	ldrb	w0, [x22, #6]
  429d70:	and	w0, w0, #0xffffffdf
  429d74:	and	w0, w0, #0xff
  429d78:	cmp	w0, #0x48
  429d7c:	b.ne	429c64 <nftw@plt+0x270e4>  // b.any
  429d80:	mov	w27, #0x1                   	// #1
  429d84:	b	429744 <nftw@plt+0x26bc4>
  429d88:	add	x22, x22, #0x4
  429d8c:	b	429ce4 <nftw@plt+0x27164>
  429d90:	ldrb	w0, [x2, #1]
  429d94:	cmp	w0, #0x2e
  429d98:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429d9c:	add	x2, x2, #0x2
  429da0:	str	x2, [x21]
  429da4:	mov	w0, #0x2c                  	// #44
  429da8:	strb	w0, [x20, #4]
  429dac:	b	429438 <nftw@plt+0x268b8>
  429db0:	add	x0, x0, #0x1
  429db4:	str	x0, [x21]
  429db8:	mov	w0, #0x2e                  	// #46
  429dbc:	strb	w0, [x20, #4]
  429dc0:	b	429438 <nftw@plt+0x268b8>
  429dc4:	mov	x0, x19
  429dc8:	bl	426c80 <nftw@plt+0x24100>
  429dcc:	tst	w0, #0xff
  429dd0:	b.eq	429724 <nftw@plt+0x26ba4>  // b.none
  429dd4:	mov	x0, x19
  429dd8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  429ddc:	mov	w1, #0x3                   	// #3
  429de0:	add	x2, x2, #0x4c8
  429de4:	bl	41f298 <nftw@plt+0x1c718>
  429de8:	b	429724 <nftw@plt+0x26ba4>
  429dec:	add	x0, x2, #0x1
  429df0:	str	x0, [x21]
  429df4:	mov	w0, #0xd                   	// #13
  429df8:	strb	w0, [x20, #4]
  429dfc:	ldrb	w0, [x2, #1]
  429e00:	cmp	w0, #0x3d
  429e04:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429e08:	add	x2, x2, #0x2
  429e0c:	str	x2, [x21]
  429e10:	mov	w0, #0x24                  	// #36
  429e14:	strb	w0, [x20, #4]
  429e18:	b	429438 <nftw@plt+0x268b8>
  429e1c:	mov	x0, x19
  429e20:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  429e24:	mov	w1, #0x2                   	// #2
  429e28:	add	x2, x2, #0x578
  429e2c:	bl	41f308 <nftw@plt+0x1c788>
  429e30:	b	429724 <nftw@plt+0x26ba4>
  429e34:	ldrh	w1, [x20, #6]
  429e38:	add	x2, x0, #0x1
  429e3c:	str	x2, [x21]
  429e40:	mov	w2, #0x25                  	// #37
  429e44:	orr	w1, w1, #0x2
  429e48:	strb	w2, [x20, #4]
  429e4c:	strh	w1, [x20, #6]
  429e50:	ldrb	w1, [x0, #1]
  429e54:	cmp	w1, #0x25
  429e58:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429e5c:	ldrb	w1, [x0, #2]
  429e60:	cmp	w1, #0x3a
  429e64:	b.ne	429438 <nftw@plt+0x268b8>  // b.any
  429e68:	add	x0, x0, #0x3
  429e6c:	str	x0, [x21]
  429e70:	mov	w0, #0x26                  	// #38
  429e74:	strb	w0, [x20, #4]
  429e78:	str	wzr, [x20, #8]
  429e7c:	b	429438 <nftw@plt+0x268b8>
  429e80:	cmp	w4, #0x6c
  429e84:	b.eq	42a178 <nftw@plt+0x275f8>  // b.none
  429e88:	cmp	w4, #0x9
  429e8c:	cset	w1, ne  // ne = any
  429e90:	cmp	w0, #0x4
  429e94:	b.eq	42a2d0 <nftw@plt+0x27750>  // b.none
  429e98:	cmp	w4, #0x2e
  429e9c:	sub	w0, w4, #0x20
  429ea0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  429ea4:	and	w0, w0, #0xff
  429ea8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  429eac:	b.hi	429ecc <nftw@plt+0x2734c>  // b.pmore
  429eb0:	ldrb	w4, [x22, #1]!
  429eb4:	cmp	w4, #0x2e
  429eb8:	sub	w0, w4, #0x20
  429ebc:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  429ec0:	and	w0, w0, #0xff
  429ec4:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  429ec8:	b.ls	429eb0 <nftw@plt+0x27330>  // b.plast
  429ecc:	and	w0, w4, #0xffffffdf
  429ed0:	cmp	w0, #0x45
  429ed4:	and	w0, w0, #0xff
  429ed8:	b.ne	42a220 <nftw@plt+0x276a0>  // b.any
  429edc:	ldr	x0, [x3]
  429ee0:	sub	x0, x0, x22
  429ee4:	cmp	x0, #0xc
  429ee8:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  429eec:	cmp	w4, #0x45
  429ef0:	add	x6, x22, #0x1
  429ef4:	b.eq	42a708 <nftw@plt+0x27b88>  // b.none
  429ef8:	mov	x0, x6
  429efc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  429f00:	mov	x2, #0x3                   	// #3
  429f04:	add	x1, x1, #0x5c8
  429f08:	str	x3, [sp, #96]
  429f0c:	str	w4, [sp, #104]
  429f10:	str	w5, [sp, #112]
  429f14:	bl	402850 <memcmp@plt>
  429f18:	ldr	w4, [sp, #104]
  429f1c:	ldr	w5, [sp, #112]
  429f20:	ldr	x3, [sp, #96]
  429f24:	cbnz	w0, 429744 <nftw@plt+0x26bc4>
  429f28:	add	x0, x22, #0x5
  429f2c:	ldrb	w1, [x22, #4]!
  429f30:	cmp	w1, #0x2c
  429f34:	csel	x0, x0, x22, eq  // eq = none
  429f38:	ldrb	w1, [x0]
  429f3c:	cmp	w1, #0x20
  429f40:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  429f44:	ldrb	w7, [x0, #1]
  429f48:	add	x22, x0, #0x1
  429f4c:	cbz	w5, 429f58 <nftw@plt+0x273d8>
  429f50:	cmp	w7, #0x66
  429f54:	b.eq	429744 <nftw@plt+0x26bc4>  // b.none
  429f58:	cmp	w4, #0x65
  429f5c:	b.eq	42a7c4 <nftw@plt+0x27c44>  // b.none
  429f60:	and	w0, w7, #0xffffffdf
  429f64:	and	w0, w0, #0xff
  429f68:	cmp	w0, #0x46
  429f6c:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  429f70:	ldr	x6, [x3]
  429f74:	sub	x0, x6, x22
  429f78:	cmp	x0, #0x7
  429f7c:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  429f80:	cmp	w7, #0x46
  429f84:	b.eq	42a580 <nftw@plt+0x27a00>  // b.none
  429f88:	str	w5, [sp, #104]
  429f8c:	str	w7, [sp, #112]
  429f90:	str	x6, [sp, #120]
  429f94:	cbnz	w5, 429744 <nftw@plt+0x26bc4>
  429f98:	add	x0, x22, #0x1
  429f9c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  429fa0:	mov	x2, #0x3                   	// #3
  429fa4:	add	x1, x1, #0x600
  429fa8:	str	x3, [sp, #96]
  429fac:	bl	402850 <memcmp@plt>
  429fb0:	ldr	w5, [sp, #104]
  429fb4:	ldr	w7, [sp, #112]
  429fb8:	ldr	x3, [sp, #96]
  429fbc:	ldr	x6, [sp, #120]
  429fc0:	cbnz	w0, 429744 <nftw@plt+0x26bc4>
  429fc4:	ldrb	w0, [x22, #4]
  429fc8:	add	x4, x22, #0x4
  429fcc:	mov	w1, #0x73                  	// #115
  429fd0:	cmp	w1, w0
  429fd4:	b.eq	42a7ec <nftw@plt+0x27c6c>  // b.none
  429fd8:	cmp	w0, #0x20
  429fdc:	mov	w1, #0x2d                  	// #45
  429fe0:	ccmp	w0, w1, #0x4, ne  // ne = any
  429fe4:	b.ne	42a7d0 <nftw@plt+0x27c50>  // b.any
  429fe8:	add	x4, x22, #0x5
  429fec:	cmp	w7, #0x66
  429ff0:	b.eq	42a000 <nftw@plt+0x27480>  // b.none
  429ff4:	ldrb	w0, [x4]
  429ff8:	cmp	w0, #0x54
  429ffc:	b.eq	42a740 <nftw@plt+0x27bc0>  // b.none
  42a000:	cbnz	w5, 429744 <nftw@plt+0x26bc4>
  42a004:	ldrb	w0, [x4]
  42a008:	cmp	w0, #0x74
  42a00c:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  42a010:	sub	x22, x6, x4
  42a014:	cmp	x22, #0x3
  42a018:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  42a01c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a020:	add	x6, x4, #0x1
  42a024:	add	x1, x1, #0x468
  42a028:	mov	x0, x6
  42a02c:	mov	x2, #0x3                   	// #3
  42a030:	stp	x3, x4, [sp, #96]
  42a034:	str	x6, [sp, #112]
  42a038:	str	w5, [sp, #120]
  42a03c:	bl	402850 <memcmp@plt>
  42a040:	ldp	x3, x4, [sp, #96]
  42a044:	cbz	w0, 42a76c <nftw@plt+0x27bec>
  42a048:	cmp	x22, #0x6
  42a04c:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  42a050:	ldr	w5, [sp, #120]
  42a054:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a058:	ldr	x6, [sp, #112]
  42a05c:	cmp	w5, #0x0
  42a060:	add	x1, x1, #0x480
  42a064:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a068:	add	x2, x2, #0x478
  42a06c:	mov	x0, x6
  42a070:	csel	x1, x2, x1, ne  // ne = any
  42a074:	mov	x2, #0x6                   	// #6
  42a078:	bl	402850 <memcmp@plt>
  42a07c:	ldr	x3, [sp, #96]
  42a080:	cbnz	w0, 429744 <nftw@plt+0x26bc4>
  42a084:	ldr	x4, [sp, #104]
  42a088:	add	x4, x4, #0x7
  42a08c:	b	42a094 <nftw@plt+0x27514>
  42a090:	add	x4, x4, #0x1
  42a094:	ldrb	w0, [x4]
  42a098:	cmp	w0, #0x2e
  42a09c:	sub	w1, w0, #0x20
  42a0a0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42a0a4:	and	w1, w1, #0xff
  42a0a8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  42a0ac:	b.ls	42a090 <nftw@plt+0x27510>  // b.plast
  42a0b0:	cmp	w0, #0x2d
  42a0b4:	b.eq	42a774 <nftw@plt+0x27bf4>  // b.none
  42a0b8:	mov	x22, x4
  42a0bc:	b	429a6c <nftw@plt+0x26eec>
  42a0c0:	ldrb	w0, [x1, #1]
  42a0c4:	cmp	w0, #0x22
  42a0c8:	b.ne	429160 <nftw@plt+0x265e0>  // b.any
  42a0cc:	b	429384 <nftw@plt+0x26804>
  42a0d0:	ldrb	w0, [x19, #1120]
  42a0d4:	cbz	w0, 42a0e8 <nftw@plt+0x27568>
  42a0d8:	ldr	w0, [x19, #1116]
  42a0dc:	sub	w0, w0, #0xb
  42a0e0:	cmp	w0, #0x1
  42a0e4:	b.hi	42a52c <nftw@plt+0x279ac>  // b.pmore
  42a0e8:	ldrh	w0, [x20, #6]
  42a0ec:	add	x2, x2, #0x1
  42a0f0:	str	x2, [x21]
  42a0f4:	mov	w1, #0x27                  	// #39
  42a0f8:	orr	w0, w0, #0x2
  42a0fc:	strb	w1, [x20, #4]
  42a100:	strh	w0, [x20, #6]
  42a104:	b	429438 <nftw@plt+0x268b8>
  42a108:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a10c:	mov	w1, #0x3                   	// #3
  42a110:	add	x2, x2, #0x4e0
  42a114:	mov	x0, x19
  42a118:	bl	41f298 <nftw@plt+0x1c718>
  42a11c:	tst	w0, #0xff
  42a120:	b.ne	42a154 <nftw@plt+0x275d4>  // b.any
  42a124:	ldrb	w0, [x21, #105]
  42a128:	orr	w0, w0, #0x1
  42a12c:	strb	w0, [x21, #105]
  42a130:	ldr	x2, [x19]
  42a134:	b	4296d8 <nftw@plt+0x26b58>
  42a138:	mov	x0, x19
  42a13c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a140:	mov	w1, #0x0                   	// #0
  42a144:	add	x2, x2, #0x548
  42a148:	bl	41f298 <nftw@plt+0x1c718>
  42a14c:	tst	w0, #0xff
  42a150:	b.eq	42a124 <nftw@plt+0x275a4>  // b.none
  42a154:	mov	x0, x19
  42a158:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a15c:	mov	w1, #0x5                   	// #5
  42a160:	add	x2, x2, #0x510
  42a164:	bl	41f298 <nftw@plt+0x1c718>
  42a168:	b	42a124 <nftw@plt+0x275a4>
  42a16c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a170:	mov	w1, #0x2                   	// #2
  42a174:	b	42a110 <nftw@plt+0x27590>
  42a178:	ldr	x0, [x3]
  42a17c:	sub	x0, x0, x22
  42a180:	sub	x0, x0, #0x1
  42a184:	cmp	x0, #0xf
  42a188:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  42a18c:	add	x0, x28, #0x2
  42a190:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a194:	mov	x2, #0x10                  	// #16
  42a198:	add	x1, x1, #0x5a0
  42a19c:	str	x3, [sp, #96]
  42a1a0:	bl	402850 <memcmp@plt>
  42a1a4:	ldr	x3, [sp, #96]
  42a1a8:	cbnz	w0, 429744 <nftw@plt+0x26bc4>
  42a1ac:	ldrb	w0, [x28, #18]
  42a1b0:	add	x22, x28, #0x12
  42a1b4:	cmp	w0, #0x20
  42a1b8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42a1bc:	b.ne	429a6c <nftw@plt+0x26eec>  // b.any
  42a1c0:	ldrb	w0, [x22, #1]!
  42a1c4:	cmp	w0, #0x20
  42a1c8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42a1cc:	b.eq	42a1c0 <nftw@plt+0x27640>  // b.none
  42a1d0:	b	429a6c <nftw@plt+0x26eec>
  42a1d4:	mov	w0, #0x7                   	// #7
  42a1d8:	strb	w0, [x20, #4]
  42a1dc:	b	429438 <nftw@plt+0x268b8>
  42a1e0:	add	x4, x4, #0x2
  42a1e4:	ldurb	w0, [x4, #-1]
  42a1e8:	sub	x22, x4, #0x1
  42a1ec:	cmp	w0, #0x2a
  42a1f0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  42a1f4:	b.eq	42a800 <nftw@plt+0x27c80>  // b.none
  42a1f8:	cmp	w0, #0xd
  42a1fc:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  42a200:	b.ne	42a814 <nftw@plt+0x27c94>  // b.any
  42a204:	ldrb	w0, [x22]
  42a208:	cmp	w0, #0x2a
  42a20c:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  42a210:	ldrb	w0, [x22, #1]
  42a214:	cmp	w0, #0x2f
  42a218:	csinc	w27, w27, wzr, ne  // ne = any
  42a21c:	b	429744 <nftw@plt+0x26bc4>
  42a220:	cmp	w0, #0x49
  42a224:	b.ne	42a55c <nftw@plt+0x279dc>  // b.any
  42a228:	ldr	x0, [x3]
  42a22c:	sub	x0, x0, x22
  42a230:	cmp	x0, #0x13
  42a234:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  42a238:	cmp	w4, #0x49
  42a23c:	add	x6, x22, #0x1
  42a240:	b.eq	42a5cc <nftw@plt+0x27a4c>  // b.none
  42a244:	mov	x0, x6
  42a248:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a24c:	mov	x2, #0xa                   	// #10
  42a250:	add	x1, x1, #0x5e0
  42a254:	str	x3, [sp, #96]
  42a258:	str	w4, [sp, #104]
  42a25c:	str	w5, [sp, #112]
  42a260:	bl	402850 <memcmp@plt>
  42a264:	ldr	w4, [sp, #104]
  42a268:	ldr	w5, [sp, #112]
  42a26c:	ldr	x3, [sp, #96]
  42a270:	cbnz	w0, 429744 <nftw@plt+0x26bc4>
  42a274:	ldrb	w1, [x22, #11]
  42a278:	add	x0, x22, #0xb
  42a27c:	cmp	w1, #0x20
  42a280:	b.eq	42a7bc <nftw@plt+0x27c3c>  // b.none
  42a284:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a288:	mov	x2, #0x3                   	// #3
  42a28c:	add	x1, x1, #0x5f0
  42a290:	str	x3, [sp, #96]
  42a294:	str	w4, [sp, #104]
  42a298:	str	w5, [sp, #112]
  42a29c:	bl	402850 <memcmp@plt>
  42a2a0:	ldr	w4, [sp, #104]
  42a2a4:	ldr	w5, [sp, #112]
  42a2a8:	ldr	x3, [sp, #96]
  42a2ac:	cbnz	w0, 429744 <nftw@plt+0x26bc4>
  42a2b0:	add	x22, x22, #0xe
  42a2b4:	ldrb	w0, [x22]
  42a2b8:	cmp	w4, #0x69
  42a2bc:	b.ne	42a2c8 <nftw@plt+0x27748>  // b.any
  42a2c0:	cmp	w0, #0x46
  42a2c4:	b.eq	429744 <nftw@plt+0x26bc4>  // b.none
  42a2c8:	ldrb	w7, [x22]
  42a2cc:	b	429f60 <nftw@plt+0x273e0>
  42a2d0:	cmp	w4, #0x20
  42a2d4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  42a2d8:	b.ne	42a2ec <nftw@plt+0x2776c>  // b.any
  42a2dc:	ldrb	w0, [x22, #1]!
  42a2e0:	cmp	w0, #0x20
  42a2e4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42a2e8:	b.eq	42a2dc <nftw@plt+0x2775c>  // b.none
  42a2ec:	ldr	x4, [x3]
  42a2f0:	str	x4, [sp, #104]
  42a2f4:	sub	x0, x4, x22
  42a2f8:	cmp	x0, #0x7
  42a2fc:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  42a300:	mov	x0, x22
  42a304:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a308:	mov	x2, #0x7                   	// #7
  42a30c:	add	x1, x1, #0x5b8
  42a310:	str	x3, [sp, #96]
  42a314:	bl	402850 <memcmp@plt>
  42a318:	ldr	x3, [sp, #96]
  42a31c:	cbnz	w0, 429744 <nftw@plt+0x26bc4>
  42a320:	ldrb	w0, [x22, #7]
  42a324:	ldr	x4, [sp, #104]
  42a328:	cmp	w0, #0x55
  42a32c:	b.eq	42a6e4 <nftw@plt+0x27b64>  // b.none
  42a330:	add	x0, x22, #0x7
  42a334:	sub	x4, x4, x0
  42a338:	cmp	x4, #0x3
  42a33c:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  42a340:	ldur	w1, [x22, #7]
  42a344:	mov	w0, #0x554f                	// #21839
  42a348:	movk	w0, #0x4847, lsl #16
  42a34c:	cmp	w1, w0
  42a350:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  42a354:	add	x22, x22, #0xb
  42a358:	ldrb	w0, [x22]
  42a35c:	cmp	w0, #0x20
  42a360:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42a364:	b.ne	429a6c <nftw@plt+0x26eec>  // b.any
  42a368:	ldrb	w0, [x22, #1]!
  42a36c:	cmp	w0, #0x20
  42a370:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42a374:	b.eq	42a368 <nftw@plt+0x277e8>  // b.none
  42a378:	b	429a6c <nftw@plt+0x26eec>
  42a37c:	ldrb	w0, [x28, #13]
  42a380:	cmp	w0, #0x40
  42a384:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  42a388:	mov	x0, #0xd                   	// #13
  42a38c:	b	429a68 <nftw@plt+0x26ee8>
  42a390:	cbz	w27, 42a3a0 <nftw@plt+0x27820>
  42a394:	ldrh	w0, [x20, #6]
  42a398:	orr	w0, w0, #0x20
  42a39c:	strh	w0, [x20, #6]
  42a3a0:	ldr	x1, [x19]
  42a3a4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  42a3a8:	add	x0, x0, #0x248
  42a3ac:	ldrb	w2, [x19, #16]
  42a3b0:	ldr	x1, [x1]
  42a3b4:	sub	w23, w1, w28
  42a3b8:	ldurb	w1, [x1, #-1]
  42a3bc:	ldrh	w0, [x0, x1, lsl #1]
  42a3c0:	tst	x0, #0x400
  42a3c4:	cinc	w23, w23, eq  // eq = none
  42a3c8:	sub	w25, w23, #0x1
  42a3cc:	mov	x24, x25
  42a3d0:	cbnz	w2, 42a4d0 <nftw@plt+0x27950>
  42a3d4:	ldrb	w0, [x19, #25]
  42a3d8:	cbnz	w0, 42a4d0 <nftw@plt+0x27950>
  42a3dc:	mov	w1, w23
  42a3e0:	mov	x0, x19
  42a3e4:	bl	427ea8 <nftw@plt+0x25328>
  42a3e8:	mov	x22, x0
  42a3ec:	mov	x3, x22
  42a3f0:	mov	w0, #0x4f                  	// #79
  42a3f4:	strb	w0, [x20, #4]
  42a3f8:	mov	w0, #0x2f                  	// #47
  42a3fc:	str	w23, [x20, #8]
  42a400:	mov	x2, x25
  42a404:	str	x22, [x20, #16]
  42a408:	mov	x1, x28
  42a40c:	strb	w0, [x3], #1
  42a410:	mov	x0, x3
  42a414:	bl	402490 <memcpy@plt>
  42a418:	mov	x3, x0
  42a41c:	ldrb	w0, [x19, #16]
  42a420:	cbz	w0, 42a520 <nftw@plt+0x279a0>
  42a424:	cmp	w26, #0x2f
  42a428:	b.eq	42a678 <nftw@plt+0x27af8>  // b.none
  42a42c:	ldr	w1, [x19, #1396]
  42a430:	cbz	w1, 42a564 <nftw@plt+0x279e4>
  42a434:	ldr	w0, [x19, #1392]
  42a438:	cmp	w0, w1
  42a43c:	b.eq	42a6ec <nftw@plt+0x27b6c>  // b.none
  42a440:	ldr	w22, [x20, #8]
  42a444:	ldrsw	x23, [x19, #1392]
  42a448:	add	w0, w22, #0x1
  42a44c:	ldr	x24, [x19, #1384]
  42a450:	sxtw	x0, w0
  42a454:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42a458:	lsl	x23, x23, #4
  42a45c:	ldrsw	x1, [x19, #1392]
  42a460:	sxtw	x22, w22
  42a464:	ldr	x3, [x19, #1384]
  42a468:	str	x0, [x24, x23]
  42a46c:	lsl	x0, x1, #4
  42a470:	mov	x2, x22
  42a474:	ldr	x1, [x20, #16]
  42a478:	ldr	x0, [x3, x0]
  42a47c:	bl	402490 <memcpy@plt>
  42a480:	ldrsw	x0, [x19, #1392]
  42a484:	ldr	x1, [x19, #1384]
  42a488:	lsl	x0, x0, #4
  42a48c:	ldr	x0, [x1, x0]
  42a490:	strb	wzr, [x0, x22]
  42a494:	ldr	x2, [x19, #1384]
  42a498:	ldr	w0, [x19, #1392]
  42a49c:	ldr	w22, [x20]
  42a4a0:	add	w1, w0, #0x1
  42a4a4:	add	x0, x2, w0, sxtw #4
  42a4a8:	str	w22, [x0, #8]
  42a4ac:	str	w1, [x19, #1392]
  42a4b0:	b	42909c <nftw@plt+0x2651c>
  42a4b4:	cmp	w26, #0x3d
  42a4b8:	b.ne	42a1d4 <nftw@plt+0x27654>  // b.any
  42a4bc:	add	x28, x28, #0x1
  42a4c0:	str	x28, [x21]
  42a4c4:	mov	w0, #0x1e                  	// #30
  42a4c8:	strb	w0, [x20, #4]
  42a4cc:	b	429438 <nftw@plt+0x268b8>
  42a4d0:	cmp	w26, #0x2f
  42a4d4:	b.eq	42a624 <nftw@plt+0x27aa4>  // b.none
  42a4d8:	mov	w1, w23
  42a4dc:	mov	x0, x19
  42a4e0:	bl	427ea8 <nftw@plt+0x25328>
  42a4e4:	mov	x22, x0
  42a4e8:	mov	x3, x22
  42a4ec:	mov	w0, #0x4f                  	// #79
  42a4f0:	strb	w0, [x20, #4]
  42a4f4:	mov	w0, #0x2f                  	// #47
  42a4f8:	str	w23, [x20, #8]
  42a4fc:	mov	x2, x25
  42a500:	str	x22, [x20, #16]
  42a504:	mov	x1, x28
  42a508:	strb	w0, [x3], #1
  42a50c:	mov	x0, x3
  42a510:	bl	402490 <memcpy@plt>
  42a514:	mov	x3, x0
  42a518:	ldrb	w0, [x19, #16]
  42a51c:	cbnz	w0, 42a42c <nftw@plt+0x278ac>
  42a520:	ldrb	w0, [x19, #25]
  42a524:	cbnz	w0, 42a424 <nftw@plt+0x278a4>
  42a528:	b	42a42c <nftw@plt+0x278ac>
  42a52c:	ldrb	w0, [x2, #1]
  42a530:	cmp	w0, #0x3a
  42a534:	b.ne	42a0e8 <nftw@plt+0x27568>  // b.any
  42a538:	ldrb	w0, [x2, #2]
  42a53c:	and	w0, w0, #0xfffffffb
  42a540:	and	w0, w0, #0xff
  42a544:	cmp	w0, #0x3a
  42a548:	b.eq	42a0e8 <nftw@plt+0x27568>  // b.none
  42a54c:	b	429438 <nftw@plt+0x268b8>
  42a550:	ldrb	w0, [x19, #1129]
  42a554:	cbnz	w0, 429390 <nftw@plt+0x26810>
  42a558:	b	429160 <nftw@plt+0x265e0>
  42a55c:	mov	w7, w4
  42a560:	b	429f60 <nftw@plt+0x273e0>
  42a564:	mov	w0, #0x100                 	// #256
  42a568:	str	w0, [x19, #1396]
  42a56c:	mov	x0, #0x1000                	// #4096
  42a570:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42a574:	str	x0, [x19, #1384]
  42a578:	ldr	w1, [x19, #1396]
  42a57c:	b	42a434 <nftw@plt+0x278b4>
  42a580:	add	x0, x22, #0x1
  42a584:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a588:	mov	x2, #0x3                   	// #3
  42a58c:	add	x1, x1, #0x5f8
  42a590:	str	x3, [sp, #96]
  42a594:	str	w5, [sp, #104]
  42a598:	str	w7, [sp, #112]
  42a59c:	str	x6, [sp, #120]
  42a5a0:	bl	402850 <memcmp@plt>
  42a5a4:	ldr	w5, [sp, #104]
  42a5a8:	ldr	w7, [sp, #112]
  42a5ac:	ldr	x3, [sp, #96]
  42a5b0:	ldr	x6, [sp, #120]
  42a5b4:	cbnz	w0, 429f88 <nftw@plt+0x27408>
  42a5b8:	ldrb	w0, [x22, #4]
  42a5bc:	add	x4, x22, #0x4
  42a5c0:	mov	w5, #0x1                   	// #1
  42a5c4:	mov	w1, #0x53                  	// #83
  42a5c8:	b	429fd0 <nftw@plt+0x27450>
  42a5cc:	mov	x0, x6
  42a5d0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a5d4:	mov	x2, #0xa                   	// #10
  42a5d8:	add	x1, x1, #0x5d0
  42a5dc:	stp	x6, x3, [sp, #96]
  42a5e0:	str	w4, [sp, #112]
  42a5e4:	str	w5, [sp, #120]
  42a5e8:	bl	402850 <memcmp@plt>
  42a5ec:	ldr	w4, [sp, #112]
  42a5f0:	ldr	w5, [sp, #120]
  42a5f4:	ldp	x6, x3, [sp, #96]
  42a5f8:	cbnz	w0, 42a244 <nftw@plt+0x276c4>
  42a5fc:	ldrb	w0, [x22, #11]
  42a600:	cmp	w0, #0x20
  42a604:	b.ne	42a7a4 <nftw@plt+0x27c24>  // b.any
  42a608:	ldrb	w0, [x22, #12]
  42a60c:	add	x22, x22, #0xc
  42a610:	cmp	w0, #0x66
  42a614:	b.eq	429744 <nftw@plt+0x26bc4>  // b.none
  42a618:	mov	w5, #0x1                   	// #1
  42a61c:	ldrb	w7, [x22]
  42a620:	b	429f60 <nftw@plt+0x273e0>
  42a624:	add	w1, w23, #0x2
  42a628:	mov	x0, x19
  42a62c:	mov	x23, x1
  42a630:	bl	427ea8 <nftw@plt+0x25328>
  42a634:	mov	x3, x0
  42a638:	mov	w1, #0x4f                  	// #79
  42a63c:	strb	w1, [x20, #4]
  42a640:	mov	x22, x0
  42a644:	str	w23, [x20, #8]
  42a648:	mov	x2, x25
  42a64c:	str	x0, [x20, #16]
  42a650:	mov	x1, x28
  42a654:	strb	w26, [x3], #1
  42a658:	mov	x0, x3
  42a65c:	bl	402490 <memcpy@plt>
  42a660:	mov	x3, x0
  42a664:	ldrb	w0, [x19, #16]
  42a668:	cbnz	w0, 42a674 <nftw@plt+0x27af4>
  42a66c:	ldrb	w0, [x19, #25]
  42a670:	cbz	w0, 42a42c <nftw@plt+0x278ac>
  42a674:	sub	w24, w23, #0x1
  42a678:	sub	w0, w23, #0x2
  42a67c:	mov	w1, #0x2a                  	// #42
  42a680:	strb	w1, [x22, #1]
  42a684:	mov	w2, #0x2f                  	// #47
  42a688:	cmp	w0, #0x2
  42a68c:	strb	w1, [x22, w0, uxtw]
  42a690:	strb	w2, [x22, w24, uxtw]
  42a694:	b.ls	42a42c <nftw@plt+0x278ac>  // b.plast
  42a698:	add	x0, x22, #0x2
  42a69c:	sub	w23, w23, #0x5
  42a6a0:	add	x0, x0, x23
  42a6a4:	mov	w1, #0x7c                  	// #124
  42a6a8:	b	42a6b8 <nftw@plt+0x27b38>
  42a6ac:	add	x3, x3, #0x1
  42a6b0:	cmp	x0, x3
  42a6b4:	b.eq	42a42c <nftw@plt+0x278ac>  // b.none
  42a6b8:	ldrb	w2, [x3, #1]
  42a6bc:	cmp	w2, #0x2f
  42a6c0:	b.ne	42a6ac <nftw@plt+0x27b2c>  // b.any
  42a6c4:	ldrb	w2, [x3]
  42a6c8:	cmp	w2, #0x2a
  42a6cc:	b.eq	42a6dc <nftw@plt+0x27b5c>  // b.none
  42a6d0:	ldrb	w2, [x3, #2]
  42a6d4:	cmp	w2, #0x2a
  42a6d8:	b.ne	42a6ac <nftw@plt+0x27b2c>  // b.any
  42a6dc:	strb	w1, [x3, #1]
  42a6e0:	b	42a6ac <nftw@plt+0x27b2c>
  42a6e4:	add	x22, x22, #0x8
  42a6e8:	b	42a358 <nftw@plt+0x277d8>
  42a6ec:	ldr	x0, [x19, #1384]
  42a6f0:	lsl	w1, w1, #1
  42a6f4:	str	w1, [x19, #1396]
  42a6f8:	sbfiz	x1, x1, #4, #32
  42a6fc:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  42a700:	str	x0, [x19, #1384]
  42a704:	b	42a440 <nftw@plt+0x278c0>
  42a708:	mov	x0, x6
  42a70c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a710:	mov	x2, #0x3                   	// #3
  42a714:	add	x1, x1, #0x5c0
  42a718:	stp	x6, x3, [sp, #96]
  42a71c:	str	w4, [sp, #112]
  42a720:	str	w5, [sp, #120]
  42a724:	bl	402850 <memcmp@plt>
  42a728:	ldr	w4, [sp, #112]
  42a72c:	ldr	w5, [sp, #120]
  42a730:	ldp	x6, x3, [sp, #96]
  42a734:	cbnz	w0, 429ef8 <nftw@plt+0x27378>
  42a738:	mov	w5, #0x1                   	// #1
  42a73c:	b	429f28 <nftw@plt+0x273a8>
  42a740:	sub	x22, x6, x4
  42a744:	cmp	x22, #0x3
  42a748:	b.ls	429744 <nftw@plt+0x26bc4>  // b.plast
  42a74c:	cmp	w5, #0x0
  42a750:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a754:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a758:	add	x0, x0, #0x470
  42a75c:	add	x1, x1, #0x468
  42a760:	add	x6, x4, #0x1
  42a764:	csel	x1, x1, x0, eq  // eq = none
  42a768:	b	42a028 <nftw@plt+0x274a8>
  42a76c:	add	x4, x4, #0x4
  42a770:	b	42a094 <nftw@plt+0x27514>
  42a774:	ldrb	w0, [x28]
  42a778:	add	x22, x4, #0x1
  42a77c:	cmp	w0, #0x2a
  42a780:	b.ne	42a78c <nftw@plt+0x27c0c>  // b.any
  42a784:	b	42a1e0 <nftw@plt+0x27660>
  42a788:	add	x22, x22, #0x1
  42a78c:	ldrb	w0, [x22]
  42a790:	cmp	w0, #0x0
  42a794:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  42a798:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42a79c:	b.ne	42a788 <nftw@plt+0x27c08>  // b.any
  42a7a0:	b	429a78 <nftw@plt+0x26ef8>
  42a7a4:	ldur	w0, [x22, #11]
  42a7a8:	cmp	w0, w25
  42a7ac:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  42a7b0:	add	x22, x22, #0xe
  42a7b4:	mov	w5, #0x1                   	// #1
  42a7b8:	b	42a61c <nftw@plt+0x27a9c>
  42a7bc:	add	x22, x22, #0xc
  42a7c0:	b	42a2b4 <nftw@plt+0x27734>
  42a7c4:	cmp	w7, #0x46
  42a7c8:	b.ne	429f60 <nftw@plt+0x273e0>  // b.any
  42a7cc:	b	429744 <nftw@plt+0x26bc4>
  42a7d0:	cmp	w5, #0x0
  42a7d4:	mov	w1, #0x54                  	// #84
  42a7d8:	mov	w2, #0x74                  	// #116
  42a7dc:	csel	w1, w1, w2, ne  // ne = any
  42a7e0:	cmp	w1, w0
  42a7e4:	b.ne	429744 <nftw@plt+0x26bc4>  // b.any
  42a7e8:	b	429fec <nftw@plt+0x2746c>
  42a7ec:	ldrb	w1, [x22, #5]
  42a7f0:	cmp	w1, #0x20
  42a7f4:	b.ne	429fd8 <nftw@plt+0x27458>  // b.any
  42a7f8:	add	x4, x22, #0x6
  42a7fc:	b	429fec <nftw@plt+0x2746c>
  42a800:	cmp	w0, #0x2a
  42a804:	b.ne	42a204 <nftw@plt+0x27684>  // b.any
  42a808:	ldrb	w0, [x4]
  42a80c:	cmp	w0, #0x2f
  42a810:	b.eq	42a204 <nftw@plt+0x27684>  // b.none
  42a814:	add	x4, x4, #0x1
  42a818:	b	42a1e4 <nftw@plt+0x27664>
  42a81c:	nop
  42a820:	stp	x29, x30, [sp, #-48]!
  42a824:	mov	x29, sp
  42a828:	stp	x19, x20, [sp, #16]
  42a82c:	mov	x19, x0
  42a830:	str	x21, [sp, #32]
  42a834:	add	x21, x0, #0x98
  42a838:	ldr	x0, [x19, #488]
  42a83c:	ldr	x20, [x19, #448]
  42a840:	ldr	x1, [x0, #24]
  42a844:	cmp	x20, x1
  42a848:	b.eq	42a938 <nftw@plt+0x27db8>  // b.none
  42a84c:	ldr	x0, [x0, #16]
  42a850:	cmp	x20, x0
  42a854:	b.cc	42a94c <nftw@plt+0x27dcc>  // b.lo, b.ul, b.last
  42a858:	cmp	x1, x20
  42a85c:	b.ls	42a94c <nftw@plt+0x27dcc>  // b.plast
  42a860:	ldr	w0, [x19, #496]
  42a864:	cbz	w0, 42a928 <nftw@plt+0x27da8>
  42a868:	sub	w0, w0, #0x1
  42a86c:	add	x1, x20, #0x18
  42a870:	str	x1, [x19, #448]
  42a874:	str	w0, [x19, #496]
  42a878:	ldrh	w1, [x20, #6]
  42a87c:	tbz	w1, #6, 42a8b8 <nftw@plt+0x27d38>
  42a880:	ldrb	w0, [x20, #4]
  42a884:	cmp	w0, #0x25
  42a888:	b.eq	42a8f4 <nftw@plt+0x27d74>  // b.none
  42a88c:	ldrb	w0, [x19, #32]
  42a890:	cbnz	w0, 42a920 <nftw@plt+0x27da0>
  42a894:	ldr	x3, [x19, #904]
  42a898:	cbz	x3, 42a8b8 <nftw@plt+0x27d38>
  42a89c:	ldrb	w0, [x19, #18]
  42a8a0:	cbnz	w0, 42a8b8 <nftw@plt+0x27d38>
  42a8a4:	ldrb	w2, [x19, #25]
  42a8a8:	mov	x1, x20
  42a8ac:	mov	x0, x19
  42a8b0:	blr	x3
  42a8b4:	nop
  42a8b8:	ldrb	w0, [x19, #16]
  42a8bc:	cbnz	w0, 42a8e0 <nftw@plt+0x27d60>
  42a8c0:	ldrb	w0, [x19, #32]
  42a8c4:	cbnz	w0, 42a8e0 <nftw@plt+0x27d60>
  42a8c8:	ldrb	w0, [x19, #18]
  42a8cc:	strb	wzr, [x19, #440]
  42a8d0:	cbz	w0, 42a8e0 <nftw@plt+0x27d60>
  42a8d4:	ldrb	w0, [x20, #4]
  42a8d8:	cmp	w0, #0x16
  42a8dc:	b.ne	42a838 <nftw@plt+0x27cb8>  // b.any
  42a8e0:	mov	x0, x20
  42a8e4:	ldp	x19, x20, [sp, #16]
  42a8e8:	ldr	x21, [sp, #32]
  42a8ec:	ldp	x29, x30, [sp], #48
  42a8f0:	ret
  42a8f4:	ldrb	w0, [x19, #25]
  42a8f8:	cmp	w0, #0x1
  42a8fc:	b.eq	42a88c <nftw@plt+0x27d0c>  // b.none
  42a900:	and	w1, w1, #0x1
  42a904:	mov	x0, x19
  42a908:	bl	41d690 <nftw@plt+0x1ab10>
  42a90c:	cbz	w0, 42a894 <nftw@plt+0x27d14>
  42a910:	ldrb	w0, [x19, #156]
  42a914:	cmp	w0, #0x53
  42a918:	b.eq	42a838 <nftw@plt+0x27cb8>  // b.none
  42a91c:	nop
  42a920:	mov	x20, x21
  42a924:	b	42a894 <nftw@plt+0x27d14>
  42a928:	mov	x0, x19
  42a92c:	bl	428f58 <nftw@plt+0x263d8>
  42a930:	mov	x20, x0
  42a934:	b	42a878 <nftw@plt+0x27cf8>
  42a938:	bl	425ea8 <nftw@plt+0x23328>
  42a93c:	ldp	x20, x1, [x0, #16]
  42a940:	str	x20, [x19, #448]
  42a944:	str	x0, [x19, #488]
  42a948:	b	42a858 <nftw@plt+0x27cd8>
  42a94c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42a950:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42a954:	add	x2, x2, #0x608
  42a958:	add	x0, x0, #0xfc8
  42a95c:	mov	w1, #0xa1d                 	// #2589
  42a960:	bl	402bf0 <nftw@plt+0x70>
  42a964:	nop
  42a968:	stp	x29, x30, [sp, #-64]!
  42a96c:	mov	x29, sp
  42a970:	stp	x21, x22, [sp, #32]
  42a974:	mov	x22, x0
  42a978:	ldr	x21, [x0, #136]
  42a97c:	stp	x19, x20, [sp, #16]
  42a980:	mov	w19, w1
  42a984:	ldr	x20, [x21, #8]
  42a988:	cbnz	x20, 42a9a4 <nftw@plt+0x27e24>
  42a98c:	b	42a9e4 <nftw@plt+0x27e64>
  42a990:	ldr	x1, [x20, #8]
  42a994:	sub	w19, w19, w0
  42a998:	mov	x21, x20
  42a99c:	cbz	x1, 42a9e4 <nftw@plt+0x27e64>
  42a9a0:	mov	x20, x1
  42a9a4:	mov	x0, x21
  42a9a8:	bl	426fd0 <nftw@plt+0x24450>
  42a9ac:	cmp	w0, w19
  42a9b0:	b.le	42a990 <nftw@plt+0x27e10>
  42a9b4:	ldr	w0, [x21, #48]
  42a9b8:	ldr	x1, [x21, #16]
  42a9bc:	cmp	w0, #0x1
  42a9c0:	b.eq	42aa64 <nftw@plt+0x27ee4>  // b.none
  42a9c4:	tst	w0, #0xfffffffd
  42a9c8:	b.ne	42aa80 <nftw@plt+0x27f00>  // b.any
  42a9cc:	ldr	x20, [x1, w19, sxtw #3]
  42a9d0:	ldp	x21, x22, [sp, #32]
  42a9d4:	mov	x0, x20
  42a9d8:	ldp	x19, x20, [sp, #16]
  42a9dc:	ldp	x29, x30, [sp], #64
  42a9e0:	ret
  42a9e4:	ldr	w0, [x22, #500]
  42a9e8:	mov	w21, w19
  42a9ec:	str	x23, [sp, #48]
  42a9f0:	add	w0, w0, #0x1
  42a9f4:	str	w0, [x22, #500]
  42a9f8:	ldr	x23, [x22, #904]
  42a9fc:	str	xzr, [x22, #904]
  42aa00:	b	42aa08 <nftw@plt+0x27e88>
  42aa04:	cbz	w1, 42aa5c <nftw@plt+0x27edc>
  42aa08:	mov	x0, x22
  42aa0c:	bl	42a820 <nftw@plt+0x27ca0>
  42aa10:	mov	x20, x0
  42aa14:	ldrb	w0, [x0, #4]
  42aa18:	mov	w1, w21
  42aa1c:	sub	w21, w21, #0x1
  42aa20:	cmp	w0, #0x16
  42aa24:	b.ne	42aa04 <nftw@plt+0x27e84>  // b.any
  42aa28:	sub	w1, w19, w21
  42aa2c:	mov	x0, x22
  42aa30:	bl	42e530 <nftw@plt+0x2b9b0>
  42aa34:	str	x23, [x22, #904]
  42aa38:	ldr	w0, [x22, #500]
  42aa3c:	ldr	x23, [sp, #48]
  42aa40:	sub	w0, w0, #0x1
  42aa44:	str	w0, [x22, #500]
  42aa48:	mov	x0, x20
  42aa4c:	ldp	x19, x20, [sp, #16]
  42aa50:	ldp	x21, x22, [sp, #32]
  42aa54:	ldp	x29, x30, [sp], #64
  42aa58:	ret
  42aa5c:	mov	w21, #0xffffffff            	// #-1
  42aa60:	b	42aa28 <nftw@plt+0x27ea8>
  42aa64:	mov	w20, #0x18                  	// #24
  42aa68:	ldp	x21, x22, [sp, #32]
  42aa6c:	smaddl	x20, w19, w20, x1
  42aa70:	mov	x0, x20
  42aa74:	ldp	x19, x20, [sp, #16]
  42aa78:	ldp	x29, x30, [sp], #64
  42aa7c:	ret
  42aa80:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42aa84:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  42aa88:	add	x2, x2, #0x618
  42aa8c:	add	x0, x0, #0xfc8
  42aa90:	mov	w1, #0x9ad                 	// #2477
  42aa94:	str	x23, [sp, #48]
  42aa98:	bl	402bf0 <nftw@plt+0x70>
  42aa9c:	nop
  42aaa0:	stp	x29, x30, [sp, #-32]!
  42aaa4:	mov	x29, sp
  42aaa8:	ldr	x2, [x0, #56]
  42aaac:	stp	x19, x20, [sp, #16]
  42aab0:	mov	x19, x1
  42aab4:	ldp	x3, x4, [x2, #16]
  42aab8:	sub	x4, x4, x3
  42aabc:	cmp	x4, x1
  42aac0:	b.cc	42aadc <nftw@plt+0x27f5c>  // b.lo, b.ul, b.last
  42aac4:	add	x19, x3, x19
  42aac8:	str	x19, [x2, #16]
  42aacc:	mov	x0, x3
  42aad0:	ldp	x19, x20, [sp, #16]
  42aad4:	ldp	x29, x30, [sp], #32
  42aad8:	ret
  42aadc:	mov	x20, x0
  42aae0:	bl	427c60 <nftw@plt+0x250e0>
  42aae4:	mov	x2, x0
  42aae8:	ldr	x3, [x0, #16]
  42aaec:	ldr	x0, [x20, #56]
  42aaf0:	str	x0, [x2]
  42aaf4:	str	x2, [x20, #56]
  42aaf8:	add	x19, x3, x19
  42aafc:	str	x19, [x2, #16]
  42ab00:	mov	x0, x3
  42ab04:	ldp	x19, x20, [sp, #16]
  42ab08:	ldp	x29, x30, [sp], #32
  42ab0c:	ret
  42ab10:	stp	x29, x30, [sp, #-48]!
  42ab14:	mov	x29, sp
  42ab18:	stp	x19, x20, [sp, #16]
  42ab1c:	mov	x19, x1
  42ab20:	ldr	x1, [x0, #1088]
  42ab24:	ldr	x0, [x0, #56]
  42ab28:	ldr	x1, [x1, #104]
  42ab2c:	str	x21, [sp, #32]
  42ab30:	ldr	x21, [x0, #16]
  42ab34:	cbz	x1, 42ab64 <nftw@plt+0x27fe4>
  42ab38:	mov	x0, x19
  42ab3c:	blr	x1
  42ab40:	mov	x2, x19
  42ab44:	mov	x1, x21
  42ab48:	mov	x20, x0
  42ab4c:	bl	402490 <memcpy@plt>
  42ab50:	mov	x0, x20
  42ab54:	ldp	x19, x20, [sp, #16]
  42ab58:	ldr	x21, [sp, #32]
  42ab5c:	ldp	x29, x30, [sp], #48
  42ab60:	ret
  42ab64:	add	x19, x21, x19
  42ab68:	str	x19, [x0, #16]
  42ab6c:	mov	x20, x21
  42ab70:	mov	x0, x20
  42ab74:	ldp	x19, x20, [sp, #16]
  42ab78:	ldr	x21, [sp, #32]
  42ab7c:	ldp	x29, x30, [sp], #48
  42ab80:	ret
  42ab84:	nop
  42ab88:	ldrb	w2, [x0, #4]
  42ab8c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  42ab90:	add	x1, x1, #0xa80
  42ab94:	sbfiz	x0, x2, #4, #32
  42ab98:	ldr	w0, [x1, x0]
  42ab9c:	cmp	w0, #0x2
  42aba0:	b.eq	42abb0 <nftw@plt+0x28030>  // b.none
  42aba4:	b.hi	42abb4 <nftw@plt+0x28034>  // b.pmore
  42aba8:	cbz	w0, 42abe8 <nftw@plt+0x28068>
  42abac:	mov	w0, #0x0                   	// #0
  42abb0:	ret
  42abb4:	cmp	w0, #0x3
  42abb8:	b.ne	42abe0 <nftw@plt+0x28060>  // b.any
  42abbc:	cmp	w2, #0x50
  42abc0:	b.eq	42abb0 <nftw@plt+0x28030>  // b.none
  42abc4:	cmp	w2, #0x53
  42abc8:	mov	w0, #0x1                   	// #1
  42abcc:	b.eq	42abb0 <nftw@plt+0x28030>  // b.none
  42abd0:	cmp	w2, #0x51
  42abd4:	cset	w0, ne  // ne = any
  42abd8:	add	w0, w0, #0x5
  42abdc:	ret
  42abe0:	mov	w0, #0x6                   	// #6
  42abe4:	ret
  42abe8:	cmp	w2, #0x26
  42abec:	mov	w1, #0x6                   	// #6
  42abf0:	mov	w0, #0x4                   	// #4
  42abf4:	csel	w0, w0, w1, eq  // eq = none
  42abf8:	ret
  42abfc:	nop
  42ac00:	str	w1, [x0, #1408]
  42ac04:	ret
  42ac08:	str	wzr, [x0, #1408]
  42ac0c:	ret
  42ac10:	ldp	w2, w4, [x0]
  42ac14:	ldr	x3, [x0, #16]
  42ac18:	add	w2, w2, w4
  42ac1c:	ldr	w1, [x0, #8]
  42ac20:	add	w0, w1, w3
  42ac24:	add	w0, w2, w0
  42ac28:	ret
  42ac2c:	nop
  42ac30:	mov	x2, x0
  42ac34:	ldr	x0, [x1]
  42ac38:	ldr	x3, [x2]
  42ac3c:	cmp	x3, x0
  42ac40:	b.eq	42ac4c <nftw@plt+0x280cc>  // b.none
  42ac44:	mov	w0, #0x0                   	// #0
  42ac48:	ret
  42ac4c:	ldr	w3, [x1, #8]
  42ac50:	mov	w0, #0x0                   	// #0
  42ac54:	ldr	w4, [x2, #8]
  42ac58:	cmp	w4, w3
  42ac5c:	b.ne	42ac48 <nftw@plt+0x280c8>  // b.any
  42ac60:	ldr	x0, [x1, #16]
  42ac64:	ldr	x2, [x2, #16]
  42ac68:	cmp	x2, x0
  42ac6c:	cset	w0, eq  // eq = none
  42ac70:	ret
  42ac74:	nop
  42ac78:	mov	x2, x0
  42ac7c:	mov	w0, #0x1                   	// #1
  42ac80:	ldr	x3, [x1]
  42ac84:	ldr	x1, [x2]
  42ac88:	add	x1, x1, x3
  42ac8c:	str	x1, [x2]
  42ac90:	ret
  42ac94:	nop
  42ac98:	mov	x8, x0
  42ac9c:	tbz	w1, #31, 42acb4 <nftw@plt+0x28134>
  42aca0:	and	w1, w1, #0x7fffffff
  42aca4:	mov	w2, #0x18                  	// #24
  42aca8:	ldr	x0, [x0, #104]
  42acac:	umull	x1, w1, w2
  42acb0:	ldr	w1, [x0, x1]
  42acb4:	cmp	x8, #0x0
  42acb8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  42acbc:	b.ls	42ad4c <nftw@plt+0x281cc>  // b.plast
  42acc0:	ldr	w4, [x8, #16]
  42acc4:	mov	w2, #0x18                  	// #24
  42acc8:	ldr	x6, [x8]
  42accc:	smull	x2, w4, w2
  42acd0:	add	x0, x6, x2
  42acd4:	ldr	w2, [x6, x2]
  42acd8:	cmp	w1, w2
  42acdc:	b.cc	42ad44 <nftw@plt+0x281c4>  // b.lo, b.ul, b.last
  42ace0:	ldr	w2, [x8, #12]
  42ace4:	add	w3, w4, #0x1
  42ace8:	cmp	w3, w2
  42acec:	b.eq	42ad40 <nftw@plt+0x281c0>  // b.none
  42acf0:	ldr	w3, [x0, #24]
  42acf4:	cmp	w1, w3
  42acf8:	b.cc	42ad40 <nftw@plt+0x281c0>  // b.lo, b.ul, b.last
  42acfc:	mov	w3, w4
  42ad00:	mov	w4, w2
  42ad04:	mov	w7, #0x18                  	// #24
  42ad08:	b	42ad24 <nftw@plt+0x281a4>
  42ad0c:	lsr	w2, w2, #1
  42ad10:	umull	x5, w2, w7
  42ad14:	ldr	w5, [x6, x5]
  42ad18:	cmp	w1, w5
  42ad1c:	csel	w3, w3, w2, cc  // cc = lo, ul, last
  42ad20:	csel	w4, w2, w4, cc  // cc = lo, ul, last
  42ad24:	sub	w5, w4, w3
  42ad28:	add	w2, w3, w4
  42ad2c:	cmp	w5, #0x1
  42ad30:	b.hi	42ad0c <nftw@plt+0x2818c>  // b.pmore
  42ad34:	mov	w0, #0x18                  	// #24
  42ad38:	str	w3, [x8, #16]
  42ad3c:	smaddl	x0, w3, w0, x6
  42ad40:	ret
  42ad44:	mov	w3, #0x0                   	// #0
  42ad48:	b	42ad04 <nftw@plt+0x28184>
  42ad4c:	mov	x0, #0x0                   	// #0
  42ad50:	ret
  42ad54:	nop
  42ad58:	stp	x29, x30, [sp, #-80]!
  42ad5c:	mov	x29, sp
  42ad60:	stp	x19, x20, [sp, #16]
  42ad64:	mov	x19, x0
  42ad68:	mov	w0, #0x6fffffff            	// #1879048191
  42ad6c:	stp	x21, x22, [sp, #32]
  42ad70:	cmp	w1, w0
  42ad74:	mov	w22, w1
  42ad78:	stp	x23, x24, [sp, #48]
  42ad7c:	b.ls	42adbc <nftw@plt+0x2823c>  // b.plast
  42ad80:	ldp	w0, w21, [x19, #32]
  42ad84:	add	x23, x19, #0x24
  42ad88:	cmp	w0, w21
  42ad8c:	mov	w20, w21
  42ad90:	b.eq	42ae84 <nftw@plt+0x28304>  // b.none
  42ad94:	ldr	x0, [x19, #24]
  42ad98:	add	w21, w21, #0x1
  42ad9c:	add	x0, x0, x20, lsl #5
  42ada0:	ldp	x19, x20, [sp, #16]
  42ada4:	str	w21, [x23]
  42ada8:	ldp	x23, x24, [sp, #48]
  42adac:	str	w22, [x0]
  42adb0:	ldp	x21, x22, [sp, #32]
  42adb4:	ldp	x29, x30, [sp], #80
  42adb8:	ret
  42adbc:	ldp	w0, w20, [x19, #8]
  42adc0:	add	x23, x19, #0xc
  42adc4:	cmp	w0, w20
  42adc8:	mov	w21, w20
  42adcc:	b.eq	42adfc <nftw@plt+0x2827c>  // b.none
  42add0:	ldr	x0, [x19]
  42add4:	mov	w1, #0x18                  	// #24
  42add8:	umaddl	x0, w20, w1, x0
  42addc:	add	w21, w21, #0x1
  42ade0:	ldp	x19, x20, [sp, #16]
  42ade4:	str	w21, [x23]
  42ade8:	ldp	x23, x24, [sp, #48]
  42adec:	str	w22, [x0]
  42adf0:	ldp	x21, x22, [sp, #32]
  42adf4:	ldp	x29, x30, [sp], #80
  42adf8:	ret
  42adfc:	cmp	w20, #0x0
  42ae00:	mov	x1, #0x100                 	// #256
  42ae04:	lsl	w0, w20, #1
  42ae08:	csel	x0, x0, x1, ne  // ne = any
  42ae0c:	ldr	x1, [x19, #80]
  42ae10:	add	x0, x0, x0, lsl #1
  42ae14:	ldr	x24, [x19]
  42ae18:	lsl	x0, x0, #3
  42ae1c:	blr	x1
  42ae20:	mov	x21, x0
  42ae24:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42ae28:	mov	x0, x24
  42ae2c:	movk	x1, #0xaaab
  42ae30:	ldr	x2, [x19, #72]
  42ae34:	umulh	x21, x21, x1
  42ae38:	ubfx	x1, x21, #4, #32
  42ae3c:	lsr	x21, x21, #4
  42ae40:	add	x1, x1, x1, lsl #1
  42ae44:	lsl	x1, x1, #3
  42ae48:	blr	x2
  42ae4c:	sub	w2, w21, w20
  42ae50:	mov	x24, x0
  42ae54:	mov	w0, #0x18                  	// #24
  42ae58:	mov	w1, #0x0                   	// #0
  42ae5c:	umull	x2, w2, w0
  42ae60:	umaddl	x0, w20, w0, x24
  42ae64:	bl	4026f0 <memset@plt>
  42ae68:	str	x24, [x19]
  42ae6c:	mov	w1, #0x18                  	// #24
  42ae70:	str	w21, [x19, #8]
  42ae74:	ldr	x0, [x19]
  42ae78:	ldr	w21, [x19, #12]
  42ae7c:	umaddl	x0, w20, w1, x0
  42ae80:	b	42addc <nftw@plt+0x2825c>
  42ae84:	ldr	x1, [x19, #80]
  42ae88:	cmp	w21, #0x0
  42ae8c:	lsl	w0, w21, #1
  42ae90:	mov	x2, #0x100                 	// #256
  42ae94:	csel	x0, x0, x2, ne  // ne = any
  42ae98:	str	x25, [sp, #64]
  42ae9c:	ldr	x25, [x19, #24]
  42aea0:	lsl	x0, x0, #5
  42aea4:	blr	x1
  42aea8:	mov	x1, x0
  42aeac:	ldr	x2, [x19, #72]
  42aeb0:	lsr	x24, x0, #5
  42aeb4:	and	x1, x1, #0x1fffffffe0
  42aeb8:	mov	x0, x25
  42aebc:	blr	x2
  42aec0:	sub	w2, w24, w21
  42aec4:	mov	x21, x0
  42aec8:	mov	w1, #0x0                   	// #0
  42aecc:	add	x0, x0, x20, lsl #5
  42aed0:	lsl	x2, x2, #5
  42aed4:	bl	4026f0 <memset@plt>
  42aed8:	ldr	x25, [sp, #64]
  42aedc:	str	x21, [x19, #24]
  42aee0:	ldr	w21, [x19, #36]
  42aee4:	str	w24, [x19, #32]
  42aee8:	b	42ad94 <nftw@plt+0x28214>
  42aeec:	nop
  42aef0:	stp	x29, x30, [sp, #-48]!
  42aef4:	mov	x29, sp
  42aef8:	stp	x19, x20, [sp, #16]
  42aefc:	mov	x19, x0
  42af00:	mov	x0, x2
  42af04:	str	x21, [sp, #32]
  42af08:	mov	x21, x2
  42af0c:	str	w1, [x19, #4]
  42af10:	bl	4024f0 <strlen@plt>
  42af14:	mov	x20, x0
  42af18:	ldp	x0, x1, [x19, #8]
  42af1c:	add	x1, x1, #0x1
  42af20:	add	x1, x1, x20
  42af24:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  42af28:	ldr	x3, [x19, #16]
  42af2c:	str	x0, [x19, #8]
  42af30:	mov	x1, x21
  42af34:	mov	x2, x20
  42af38:	add	x0, x0, x3
  42af3c:	bl	402490 <memcpy@plt>
  42af40:	ldp	x1, x2, [x19, #8]
  42af44:	mov	w0, #0x1                   	// #1
  42af48:	add	x20, x20, x2
  42af4c:	str	x20, [x19, #16]
  42af50:	strb	wzr, [x1, x20]
  42af54:	ldp	x19, x20, [sp, #16]
  42af58:	ldr	x21, [sp, #32]
  42af5c:	ldp	x29, x30, [sp], #48
  42af60:	ret
  42af64:	nop
  42af68:	ldr	x0, [x0, #88]
  42af6c:	cbz	x0, 42af74 <nftw@plt+0x283f4>
  42af70:	b	448ac8 <nftw@plt+0x45f48>
  42af74:	ret
  42af78:	stp	x29, x30, [sp, #-48]!
  42af7c:	adrp	x2, 42a000 <nftw@plt+0x27480>
  42af80:	adrp	x1, 42a000 <nftw@plt+0x27480>
  42af84:	mov	x29, sp
  42af88:	stp	x19, x20, [sp, #16]
  42af8c:	mov	x20, x0
  42af90:	add	x1, x1, #0xc10
  42af94:	add	x2, x2, #0xc30
  42af98:	mov	x3, #0x0                   	// #0
  42af9c:	mov	x0, #0x64                  	// #100
  42afa0:	bl	448a98 <nftw@plt+0x45f18>
  42afa4:	ldr	w1, [x20, #96]
  42afa8:	str	x0, [x20, #88]
  42afac:	cbz	w1, 42afe8 <nftw@plt+0x28468>
  42afb0:	mov	w19, #0x0                   	// #0
  42afb4:	str	x21, [sp, #32]
  42afb8:	mov	w21, #0x18                  	// #24
  42afbc:	b	42afc4 <nftw@plt+0x28444>
  42afc0:	ldr	x0, [x20, #88]
  42afc4:	mov	w2, #0x1                   	// #1
  42afc8:	ldr	x1, [x20, #104]
  42afcc:	umaddl	x1, w19, w21, x1
  42afd0:	add	w19, w19, w2
  42afd4:	bl	4490e8 <nftw@plt+0x46568>
  42afd8:	ldr	w0, [x20, #96]
  42afdc:	cmp	w0, w19
  42afe0:	b.hi	42afc0 <nftw@plt+0x28440>  // b.pmore
  42afe4:	ldr	x21, [sp, #32]
  42afe8:	ldp	x19, x20, [sp, #16]
  42afec:	ldp	x29, x30, [sp], #48
  42aff0:	ret
  42aff4:	nop
  42aff8:	ldr	x0, [x0, #104]
  42affc:	and	w1, w1, #0x7fffffff
  42b000:	mov	w2, #0x18                  	// #24
  42b004:	umaddl	x1, w1, w2, x0
  42b008:	ldr	x0, [x1, #16]
  42b00c:	ret
  42b010:	and	w1, w1, #0x7fffffff
  42b014:	mov	w2, #0x18                  	// #24
  42b018:	ldr	x0, [x0, #104]
  42b01c:	umull	x1, w1, w2
  42b020:	ldr	w0, [x0, x1]
  42b024:	ret
  42b028:	stp	x29, x30, [sp, #-32]!
  42b02c:	adrp	x4, 449000 <nftw@plt+0x46480>
  42b030:	add	x4, x4, #0xc00
  42b034:	mov	x29, sp
  42b038:	stp	x19, x20, [sp, #16]
  42b03c:	mov	x19, x0
  42b040:	mov	x5, #0x100000001           	// #4294967297
  42b044:	stp	xzr, xzr, [x0]
  42b048:	mov	w20, w1
  42b04c:	mov	x3, #0x0                   	// #0
  42b050:	stp	xzr, xzr, [x0, #48]
  42b054:	adrp	x2, 42a000 <nftw@plt+0x27480>
  42b058:	adrp	x1, 42a000 <nftw@plt+0x27480>
  42b05c:	stp	xzr, xzr, [x0, #64]
  42b060:	add	x2, x2, #0xc30
  42b064:	add	x1, x1, #0xc10
  42b068:	stp	xzr, xzr, [x19, #16]
  42b06c:	mov	x0, #0x64                  	// #100
  42b070:	stp	xzr, xzr, [x19, #32]
  42b074:	str	x5, [x19, #56]
  42b078:	str	x4, [x19, #72]
  42b07c:	stp	xzr, xzr, [x19, #80]
  42b080:	stp	xzr, xzr, [x19, #96]
  42b084:	stp	xzr, xzr, [x19, #112]
  42b088:	str	xzr, [x19, #128]
  42b08c:	bl	448a98 <nftw@plt+0x45f18>
  42b090:	str	x0, [x19, #88]
  42b094:	str	w20, [x19, #112]
  42b098:	ldp	x19, x20, [sp, #16]
  42b09c:	ldp	x29, x30, [sp], #32
  42b0a0:	ret
  42b0a4:	nop
  42b0a8:	ldr	w1, [x1, #20]
  42b0ac:	b	42ac98 <nftw@plt+0x28118>
  42b0b0:	stp	x29, x30, [sp, #-48]!
  42b0b4:	mov	w1, #0x18                  	// #24
  42b0b8:	mov	x29, sp
  42b0bc:	stp	x19, x20, [sp, #16]
  42b0c0:	mov	x20, x0
  42b0c4:	ldr	w19, [x0, #12]
  42b0c8:	ldr	x0, [x0]
  42b0cc:	sub	w19, w19, #0x1
  42b0d0:	smaddl	x19, w19, w1, x0
  42b0d4:	ldr	w0, [x19, #20]
  42b0d8:	cbz	w0, 42b11c <nftw@plt+0x2859c>
  42b0dc:	stp	x21, x22, [sp, #32]
  42b0e0:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42b0e4:	adrp	x21, 48c000 <_obstack_memory_used@@Base+0x425a0>
  42b0e8:	add	x22, x22, #0x20
  42b0ec:	add	x21, x21, #0x570
  42b0f0:	ldr	x0, [x21]
  42b0f4:	mov	x1, x22
  42b0f8:	ldr	x2, [x19, #8]
  42b0fc:	bl	402b30 <fprintf@plt>
  42b100:	ldr	w1, [x19, #20]
  42b104:	mov	x0, x20
  42b108:	bl	42ac98 <nftw@plt+0x28118>
  42b10c:	ldr	w1, [x0, #20]
  42b110:	mov	x19, x0
  42b114:	cbnz	w1, 42b0f0 <nftw@plt+0x28570>
  42b118:	ldp	x21, x22, [sp, #32]
  42b11c:	ldp	x19, x20, [sp, #16]
  42b120:	ldp	x29, x30, [sp], #48
  42b124:	ret
  42b128:	stp	x29, x30, [sp, #-80]!
  42b12c:	mov	x29, sp
  42b130:	ldr	w5, [x0, #56]
  42b134:	stp	x19, x20, [sp, #16]
  42b138:	mov	x19, x0
  42b13c:	mov	w0, #0x5fffffff            	// #1610612735
  42b140:	stp	x21, x22, [sp, #32]
  42b144:	cmp	w5, w0
  42b148:	mov	w22, w2
  42b14c:	stp	x23, x24, [sp, #48]
  42b150:	add	w21, w5, #0x1
  42b154:	mov	w24, w1
  42b158:	str	x25, [sp, #64]
  42b15c:	mov	w23, w4
  42b160:	mov	x25, x3
  42b164:	b.hi	42b188 <nftw@plt+0x28608>  // b.pmore
  42b168:	ldr	w1, [x19, #120]
  42b16c:	mov	w0, #0x1                   	// #1
  42b170:	cmp	w1, #0x0
  42b174:	lsl	w0, w0, w1
  42b178:	add	w21, w0, w5
  42b17c:	neg	w0, w0
  42b180:	and	w0, w21, w0
  42b184:	csel	w21, w0, w21, ne  // ne = any
  42b188:	cmp	w24, #0x1
  42b18c:	b.eq	42b308 <nftw@plt+0x28788>  // b.none
  42b190:	mov	w0, #0x6fffffff            	// #1879048191
  42b194:	cmp	w21, w0
  42b198:	csel	w21, w21, wzr, ls  // ls = plast
  42b19c:	mov	x0, x19
  42b1a0:	mov	w1, w21
  42b1a4:	bl	42ad58 <nftw@plt+0x281d8>
  42b1a8:	strb	w24, [x0, #4]
  42b1ac:	mov	x20, x0
  42b1b0:	cmp	w24, #0x3
  42b1b4:	cbz	x25, 42b1d8 <nftw@plt+0x28658>
  42b1b8:	ldrb	w0, [x25]
  42b1bc:	cbnz	w0, 42b1d8 <nftw@plt+0x28658>
  42b1c0:	b.eq	42b2b8 <nftw@plt+0x28738>  // b.none
  42b1c4:	cmp	w24, #0x1
  42b1c8:	b.eq	42b3bc <nftw@plt+0x2883c>  // b.none
  42b1cc:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42b1d0:	add	x25, x3, #0x50
  42b1d4:	b	42b1e4 <nftw@plt+0x28664>
  42b1d8:	b.eq	42b2b8 <nftw@plt+0x28738>  // b.none
  42b1dc:	cmp	w24, #0x1
  42b1e0:	b.eq	42b3a0 <nftw@plt+0x28820>  // b.none
  42b1e4:	and	w22, w22, #0xff
  42b1e8:	mov	x0, #0x0                   	// #0
  42b1ec:	strb	w22, [x20, #5]
  42b1f0:	str	w23, [x20, #16]
  42b1f4:	str	x25, [x20, #8]
  42b1f8:	ldr	w4, [x19, #12]
  42b1fc:	sub	w4, w4, #0x1
  42b200:	str	w4, [x19, #16]
  42b204:	strh	wzr, [x20, #6]
  42b208:	stp	w21, w21, [x19, #56]
  42b20c:	str	wzr, [x19, #64]
  42b210:	cbnz	w24, 42b2c8 <nftw@plt+0x28748>
  42b214:	ldr	w21, [x19, #48]
  42b218:	ldrb	w1, [x19, #52]
  42b21c:	add	w3, w21, #0x1
  42b220:	cbz	w21, 42b340 <nftw@plt+0x287c0>
  42b224:	ldr	w0, [x20]
  42b228:	mov	w2, #0xffffffff            	// #-1
  42b22c:	ldur	w4, [x20, #-24]
  42b230:	adrp	x24, 48c000 <_obstack_memory_used@@Base+0x425a0>
  42b234:	ldurb	w5, [x20, #-18]
  42b238:	add	w0, w0, w2
  42b23c:	sub	w0, w0, w4
  42b240:	add	x23, x24, #0x570
  42b244:	mov	w22, #0x2e                  	// #46
  42b248:	lsl	w2, w2, w5
  42b24c:	and	w0, w0, w2
  42b250:	add	w0, w0, w4
  42b254:	str	w0, [x20, #20]
  42b258:	str	w3, [x19, #48]
  42b25c:	cbz	w1, 42b29c <nftw@plt+0x2871c>
  42b260:	ldr	x0, [x23]
  42b264:	ldp	x1, x3, [x0, #40]
  42b268:	add	x2, x1, #0x1
  42b26c:	cmp	x1, x3
  42b270:	b.cs	42b394 <nftw@plt+0x28814>  // b.hs, b.nlast
  42b274:	str	x2, [x0, #40]
  42b278:	strb	w22, [x1]
  42b27c:	subs	w21, w21, #0x1
  42b280:	b.ne	42b260 <nftw@plt+0x286e0>  // b.any
  42b284:	ldr	x25, [x20, #8]
  42b288:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42b28c:	ldr	x0, [x24, #1392]
  42b290:	mov	x2, x25
  42b294:	add	x1, x1, #0x58
  42b298:	bl	402b30 <fprintf@plt>
  42b29c:	mov	x0, x20
  42b2a0:	ldp	x19, x20, [sp, #16]
  42b2a4:	ldp	x21, x22, [sp, #32]
  42b2a8:	ldp	x23, x24, [sp, #48]
  42b2ac:	ldr	x25, [sp, #64]
  42b2b0:	ldp	x29, x30, [sp], #80
  42b2b4:	ret
  42b2b8:	and	w22, w22, #0xff
  42b2bc:	mov	w24, #0x2                   	// #2
  42b2c0:	mov	x0, #0x0                   	// #0
  42b2c4:	b	42b1ec <nftw@plt+0x2866c>
  42b2c8:	cmp	w24, #0x2
  42b2cc:	b.eq	42b370 <nftw@plt+0x287f0>  // b.none
  42b2d0:	cmp	w24, #0x1
  42b2d4:	b.ne	42b29c <nftw@plt+0x2871c>  // b.any
  42b2d8:	ldr	w1, [x19, #48]
  42b2dc:	ldp	x21, x22, [sp, #32]
  42b2e0:	sub	w1, w1, #0x1
  42b2e4:	str	w1, [x19, #48]
  42b2e8:	ldp	x23, x24, [sp, #48]
  42b2ec:	ldr	w0, [x0, #20]
  42b2f0:	str	w0, [x20, #20]
  42b2f4:	mov	x0, x20
  42b2f8:	ldp	x19, x20, [sp, #16]
  42b2fc:	ldr	x25, [sp, #64]
  42b300:	ldp	x29, x30, [sp], #80
  42b304:	ret
  42b308:	ldr	w0, [x19, #12]
  42b30c:	mov	w2, #0x18                  	// #24
  42b310:	ldr	x1, [x19]
  42b314:	sub	w0, w0, #0x1
  42b318:	smaddl	x0, w0, w2, x1
  42b31c:	ldr	w0, [x0, #20]
  42b320:	cmp	w0, #0x0
  42b324:	ccmp	x25, #0x0, #0x0, eq  // eq = none
  42b328:	b.ne	42b190 <nftw@plt+0x28610>  // b.any
  42b32c:	ldr	w0, [x19, #48]
  42b330:	mov	x20, #0x0                   	// #0
  42b334:	sub	w0, w0, #0x1
  42b338:	str	w0, [x19, #48]
  42b33c:	b	42b29c <nftw@plt+0x2871c>
  42b340:	str	wzr, [x20, #20]
  42b344:	mov	w0, #0x1                   	// #1
  42b348:	str	w0, [x19, #48]
  42b34c:	adrp	x24, 48c000 <_obstack_memory_used@@Base+0x425a0>
  42b350:	cbnz	w1, 42b288 <nftw@plt+0x28708>
  42b354:	mov	x0, x20
  42b358:	ldp	x19, x20, [sp, #16]
  42b35c:	ldp	x21, x22, [sp, #32]
  42b360:	ldp	x23, x24, [sp, #48]
  42b364:	ldr	x25, [sp, #64]
  42b368:	ldp	x29, x30, [sp], #80
  42b36c:	ret
  42b370:	ldur	w0, [x20, #-4]
  42b374:	str	w0, [x20, #20]
  42b378:	mov	x0, x20
  42b37c:	ldp	x19, x20, [sp, #16]
  42b380:	ldp	x21, x22, [sp, #32]
  42b384:	ldp	x23, x24, [sp, #48]
  42b388:	ldr	x25, [sp, #64]
  42b38c:	ldp	x29, x30, [sp], #80
  42b390:	ret
  42b394:	mov	w1, #0x2e                  	// #46
  42b398:	bl	402800 <__overflow@plt>
  42b39c:	b	42b27c <nftw@plt+0x286fc>
  42b3a0:	ldur	w1, [x20, #-4]
  42b3a4:	mov	x0, x19
  42b3a8:	bl	42ac98 <nftw@plt+0x28118>
  42b3ac:	cbz	x25, 42b3d4 <nftw@plt+0x28854>
  42b3b0:	and	w22, w22, #0xff
  42b3b4:	mov	w24, #0x1                   	// #1
  42b3b8:	b	42b1ec <nftw@plt+0x2866c>
  42b3bc:	ldur	w1, [x20, #-4]
  42b3c0:	mov	x0, x19
  42b3c4:	bl	42ac98 <nftw@plt+0x28118>
  42b3c8:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42b3cc:	add	x25, x3, #0x50
  42b3d0:	b	42b3b0 <nftw@plt+0x28830>
  42b3d4:	ldr	w2, [x0]
  42b3d8:	ldr	w23, [x0, #24]
  42b3dc:	ldrb	w1, [x0, #6]
  42b3e0:	ldr	w4, [x0, #16]
  42b3e4:	sub	w23, w23, w2
  42b3e8:	ldrb	w22, [x0, #5]
  42b3ec:	lsr	w23, w23, w1
  42b3f0:	add	w23, w23, w4
  42b3f4:	ldr	x25, [x0, #8]
  42b3f8:	b	42b1ec <nftw@plt+0x2866c>
  42b3fc:	nop
  42b400:	ldr	x0, [x0, #24]
  42b404:	cmp	x0, #0x0
  42b408:	cset	w0, ne  // ne = any
  42b40c:	ret
  42b410:	stp	x29, x30, [sp, #-64]!
  42b414:	mov	x29, sp
  42b418:	stp	x21, x22, [sp, #32]
  42b41c:	mov	w21, w3
  42b420:	ldr	w3, [x0, #36]
  42b424:	stp	x19, x20, [sp, #16]
  42b428:	mov	w22, w2
  42b42c:	mov	x19, x0
  42b430:	stp	x23, x24, [sp, #48]
  42b434:	mov	w0, #0x80000000            	// #-2147483648
  42b438:	mov	x23, x1
  42b43c:	cbz	w3, 42b450 <nftw@plt+0x288d0>
  42b440:	sub	w3, w3, #0x1
  42b444:	ldr	x0, [x19, #24]
  42b448:	sbfiz	x3, x3, #5, #32
  42b44c:	ldr	w0, [x0, x3]
  42b450:	sub	w1, w0, w21
  42b454:	mov	x20, #0x0                   	// #0
  42b458:	mov	w0, #0x6fffffff            	// #1879048191
  42b45c:	cmp	w1, w0
  42b460:	b.ls	42b4ac <nftw@plt+0x2892c>  // b.plast
  42b464:	mov	x0, x19
  42b468:	bl	42ad58 <nftw@plt+0x281d8>
  42b46c:	mov	x20, x0
  42b470:	ubfiz	x24, x21, #3, #31
  42b474:	ldr	x2, [x19, #72]
  42b478:	mov	x1, x24
  42b47c:	str	w21, [x20, #4]
  42b480:	mov	x0, #0x0                   	// #0
  42b484:	str	x23, [x20, #8]
  42b488:	blr	x2
  42b48c:	str	x0, [x20, #16]
  42b490:	str	w22, [x20, #24]
  42b494:	mov	x2, x24
  42b498:	mov	w1, #0x0                   	// #0
  42b49c:	bl	4026f0 <memset@plt>
  42b4a0:	ldr	w0, [x19, #36]
  42b4a4:	sub	w0, w0, #0x1
  42b4a8:	str	w0, [x19, #40]
  42b4ac:	mov	x0, x20
  42b4b0:	ldp	x19, x20, [sp, #16]
  42b4b4:	ldp	x21, x22, [sp, #32]
  42b4b8:	ldp	x23, x24, [sp, #48]
  42b4bc:	ldp	x29, x30, [sp], #64
  42b4c0:	ret
  42b4c4:	nop
  42b4c8:	ldr	x5, [x0, #16]
  42b4cc:	lsl	w6, w1, #1
  42b4d0:	lsl	w4, w1, #1
  42b4d4:	add	w4, w4, #0x1
  42b4d8:	str	w2, [x5, x6, lsl #2]
  42b4dc:	str	w3, [x5, x4, lsl #2]
  42b4e0:	ldr	w0, [x0]
  42b4e4:	add	w0, w1, w0
  42b4e8:	ret
  42b4ec:	nop
  42b4f0:	stp	x29, x30, [sp, #-64]!
  42b4f4:	mov	w5, #0x18                  	// #24
  42b4f8:	mov	x29, sp
  42b4fc:	stp	x19, x20, [sp, #16]
  42b500:	mov	x20, x0
  42b504:	ldr	w0, [x0, #12]
  42b508:	stp	x21, x22, [sp, #32]
  42b50c:	mov	w22, w1
  42b510:	sub	w0, w0, #0x1
  42b514:	ldr	x1, [x20]
  42b518:	stp	x23, x24, [sp, #48]
  42b51c:	smull	x0, w0, w5
  42b520:	ldp	w8, w3, [x20, #56]
  42b524:	add	x6, x1, x0
  42b528:	ldr	w0, [x1, x0]
  42b52c:	ldrb	w4, [x6, #6]
  42b530:	ldr	w9, [x6, #16]
  42b534:	sub	w7, w3, w0
  42b538:	ldrb	w11, [x6, #7]
  42b53c:	lsr	w7, w7, w4
  42b540:	add	w7, w7, w9
  42b544:	subs	w5, w22, w7
  42b548:	b.mi	42b5a0 <nftw@plt+0x28a20>  // b.first
  42b54c:	cmp	w5, #0xa
  42b550:	b.gt	42b590 <nftw@plt+0x28a10>
  42b554:	sub	w10, w4, w11
  42b558:	mov	w1, #0x1                   	// #1
  42b55c:	lsl	w1, w1, w10
  42b560:	cmp	w1, w2
  42b564:	b.ls	42b5a0 <nftw@plt+0x28a20>  // b.plast
  42b568:	cmp	w2, #0x50
  42b56c:	ccmp	w10, #0x9, #0x4, ls  // ls = plast
  42b570:	b.gt	42b5a0 <nftw@plt+0x28a20>
  42b574:	mov	w1, #0x50000000            	// #1342177280
  42b578:	cmp	w8, w1
  42b57c:	b.hi	42b644 <nftw@plt+0x28ac4>  // b.pmore
  42b580:	ldr	w21, [x20, #64]
  42b584:	lsl	w5, w5, w4
  42b588:	add	w0, w5, w3
  42b58c:	b	42b6bc <nftw@plt+0x28b3c>
  42b590:	mul	w1, w5, w4
  42b594:	cmp	w1, #0x3e8
  42b598:	b.le	42b554 <nftw@plt+0x289d4>
  42b59c:	nop
  42b5a0:	cmp	w2, #0x1, lsl #12
  42b5a4:	mov	w1, #0x60000000            	// #1610612736
  42b5a8:	ccmp	w8, w1, #0x2, ls  // ls = plast
  42b5ac:	b.hi	42b658 <nftw@plt+0x28ad8>  // b.pmore
  42b5b0:	mov	w1, #0x50000000            	// #1342177280
  42b5b4:	cmp	w8, w1
  42b5b8:	b.hi	42b70c <nftw@plt+0x28b8c>  // b.pmore
  42b5bc:	ldr	w10, [x20, #120]
  42b5c0:	and	w23, w10, #0xff
  42b5c4:	cmp	w2, #0x7f
  42b5c8:	mov	w3, #0x7                   	// #7
  42b5cc:	b.ls	42b718 <nftw@plt+0x28b98>  // b.plast
  42b5d0:	mov	w1, #0x1                   	// #1
  42b5d4:	nop
  42b5d8:	add	w3, w3, #0x1
  42b5dc:	lsl	w21, w1, w3
  42b5e0:	cmp	w21, w2
  42b5e4:	b.ls	42b5d8 <nftw@plt+0x28a58>  // b.plast
  42b5e8:	add	w19, w10, w3
  42b5ec:	cmp	w5, #0x0
  42b5f0:	and	w24, w19, #0xff
  42b5f4:	ccmp	w7, w9, #0x0, ge  // ge = tcont
  42b5f8:	b.ne	42b684 <nftw@plt+0x28b04>  // b.any
  42b5fc:	mov	w2, #0x1                   	// #1
  42b600:	sub	w8, w8, w0
  42b604:	lsl	w2, w2, w4
  42b608:	sub	w2, w2, #0x1
  42b60c:	and	w2, w2, w8
  42b610:	sub	w1, w19, w10
  42b614:	lsr	w2, w2, w11
  42b618:	lsr	w1, w2, w1
  42b61c:	cbnz	w1, 42b684 <nftw@plt+0x28b04>
  42b620:	sub	w1, w22, w9
  42b624:	mov	w2, #0x20                  	// #32
  42b628:	sub	w2, w2, w19
  42b62c:	sub	w3, w22, w9
  42b630:	lsr	x1, x1, x2
  42b634:	cmp	x1, #0x0
  42b638:	ccmp	w11, w10, #0x0, eq  // eq = none
  42b63c:	b.gt	42b684 <nftw@plt+0x28b04>
  42b640:	b	42b6ac <nftw@plt+0x28b2c>
  42b644:	cbz	w11, 42b720 <nftw@plt+0x28ba0>
  42b648:	cmp	w2, #0x1, lsl #12
  42b64c:	mov	w1, #0x60000000            	// #1610612736
  42b650:	ccmp	w8, w1, #0x2, ls  // ls = plast
  42b654:	b.ls	42b70c <nftw@plt+0x28b8c>  // b.plast
  42b658:	mov	w1, #0x6fffffff            	// #1879048191
  42b65c:	cmp	w8, w1
  42b660:	b.hi	42b6f4 <nftw@plt+0x28b74>  // b.pmore
  42b664:	cmp	w5, #0x0
  42b668:	mov	w23, #0x0                   	// #0
  42b66c:	ccmp	w7, w9, #0x0, ge  // ge = tcont
  42b670:	mov	w24, #0x0                   	// #0
  42b674:	mov	w10, #0x0                   	// #0
  42b678:	mov	w19, #0x0                   	// #0
  42b67c:	mov	w21, #0x0                   	// #0
  42b680:	b.eq	42b5fc <nftw@plt+0x28a7c>  // b.none
  42b684:	ldrb	w2, [x6, #5]
  42b688:	mov	w4, w22
  42b68c:	ldr	x3, [x6, #8]
  42b690:	mov	x0, x20
  42b694:	mov	w1, #0x2                   	// #2
  42b698:	bl	42b128 <nftw@plt+0x285a8>
  42b69c:	mov	x6, x0
  42b6a0:	ldr	w0, [x0]
  42b6a4:	ldr	w3, [x6, #16]
  42b6a8:	sub	w3, w22, w3
  42b6ac:	lsl	w3, w3, w19
  42b6b0:	add	w0, w3, w0
  42b6b4:	strb	w24, [x6, #6]
  42b6b8:	strb	w23, [x6, #7]
  42b6bc:	mov	w1, #0x6fffffff            	// #1879048191
  42b6c0:	cmp	w0, w1
  42b6c4:	b.hi	42b6f4 <nftw@plt+0x28b74>  // b.pmore
  42b6c8:	ldr	w1, [x20, #56]
  42b6cc:	str	w0, [x20, #60]
  42b6d0:	cmp	w1, w0
  42b6d4:	b.cs	42b6dc <nftw@plt+0x28b5c>  // b.hs, b.nlast
  42b6d8:	str	w0, [x20, #56]
  42b6dc:	str	w21, [x20, #64]
  42b6e0:	ldp	x19, x20, [sp, #16]
  42b6e4:	ldp	x21, x22, [sp, #32]
  42b6e8:	ldp	x23, x24, [sp, #48]
  42b6ec:	ldp	x29, x30, [sp], #64
  42b6f0:	ret
  42b6f4:	mov	w0, #0x0                   	// #0
  42b6f8:	ldp	x19, x20, [sp, #16]
  42b6fc:	ldp	x21, x22, [sp, #32]
  42b700:	ldp	x23, x24, [sp, #48]
  42b704:	ldp	x29, x30, [sp], #64
  42b708:	ret
  42b70c:	mov	w23, #0x0                   	// #0
  42b710:	mov	w10, #0x0                   	// #0
  42b714:	b	42b5c4 <nftw@plt+0x28a44>
  42b718:	mov	w21, #0x80                  	// #128
  42b71c:	b	42b5e8 <nftw@plt+0x28a68>
  42b720:	mov	w1, #0x60000000            	// #1610612736
  42b724:	ldr	w21, [x20, #64]
  42b728:	cmp	w8, w1
  42b72c:	b.ls	42b584 <nftw@plt+0x28a04>  // b.plast
  42b730:	cmp	w21, #0x0
  42b734:	mov	w1, #0x6fffffff            	// #1879048191
  42b738:	ccmp	w8, w1, #0x2, eq  // eq = none
  42b73c:	b.hi	42b658 <nftw@plt+0x28ad8>  // b.pmore
  42b740:	mov	w21, #0x0                   	// #0
  42b744:	b	42b584 <nftw@plt+0x28a04>
  42b748:	stp	x29, x30, [sp, #-48]!
  42b74c:	mov	x29, sp
  42b750:	stp	x19, x20, [sp, #16]
  42b754:	mov	w20, w1
  42b758:	mov	x19, x0
  42b75c:	ldp	w3, w1, [x0, #60]
  42b760:	cmp	w1, w20
  42b764:	b.ls	42b7a8 <nftw@plt+0x28c28>  // b.plast
  42b768:	ldr	w0, [x0, #12]
  42b76c:	mov	w2, #0x18                  	// #24
  42b770:	ldr	x1, [x19]
  42b774:	sub	w0, w0, #0x1
  42b778:	smaddl	x0, w0, w2, x1
  42b77c:	ldrb	w1, [x0, #7]
  42b780:	ldr	w0, [x19, #56]
  42b784:	lsl	w20, w20, w1
  42b788:	add	w3, w3, w20
  42b78c:	cmp	w0, w3
  42b790:	b.hi	42b798 <nftw@plt+0x28c18>  // b.pmore
  42b794:	str	w3, [x19, #56]
  42b798:	mov	w0, w3
  42b79c:	ldp	x19, x20, [sp, #16]
  42b7a0:	ldp	x29, x30, [sp], #48
  42b7a4:	ret
  42b7a8:	cmp	w20, #0x1, lsl #12
  42b7ac:	mov	w1, #0x60000000            	// #1610612736
  42b7b0:	ccmp	w3, w1, #0x2, ls  // ls = plast
  42b7b4:	b.hi	42b798 <nftw@plt+0x28c18>  // b.pmore
  42b7b8:	ldr	w1, [x0, #12]
  42b7bc:	add	w2, w20, #0x32
  42b7c0:	ldr	x5, [x0]
  42b7c4:	sub	w1, w1, #0x1
  42b7c8:	str	x21, [sp, #32]
  42b7cc:	mov	w21, #0x18                  	// #24
  42b7d0:	smull	x1, w1, w21
  42b7d4:	add	x4, x5, x1
  42b7d8:	ldr	w1, [x5, x1]
  42b7dc:	ldrb	w5, [x4, #6]
  42b7e0:	sub	w3, w3, w1
  42b7e4:	ldr	w1, [x4, #16]
  42b7e8:	lsr	w3, w3, w5
  42b7ec:	add	w1, w3, w1
  42b7f0:	bl	42b4f0 <nftw@plt+0x28970>
  42b7f4:	mov	w3, w0
  42b7f8:	ldr	w1, [x19, #12]
  42b7fc:	ldr	x2, [x19]
  42b800:	sub	w0, w1, #0x1
  42b804:	smaddl	x0, w0, w21, x2
  42b808:	ldr	x21, [sp, #32]
  42b80c:	ldrb	w1, [x0, #6]
  42b810:	cbnz	w1, 42b77c <nftw@plt+0x28bfc>
  42b814:	b	42b798 <nftw@plt+0x28c18>
  42b818:	mov	x4, x0
  42b81c:	ldr	w0, [x1, #16]
  42b820:	ldrb	w5, [x1, #6]
  42b824:	mov	w6, #0x60000000            	// #1610612736
  42b828:	sub	w2, w2, w0
  42b82c:	ldr	w0, [x1]
  42b830:	lsl	w2, w2, w5
  42b834:	add	w0, w2, w0
  42b838:	cmp	w0, w6
  42b83c:	b.hi	42b85c <nftw@plt+0x28cdc>  // b.pmore
  42b840:	mov	w2, #0x1                   	// #1
  42b844:	ldrb	w6, [x1, #7]
  42b848:	lsl	w1, w2, w5
  42b84c:	sub	w1, w1, #0x1
  42b850:	and	w1, w1, w3
  42b854:	lsl	w1, w1, w6
  42b858:	add	w0, w0, w1
  42b85c:	ldr	w2, [x4, #36]
  42b860:	mov	w1, #0x80000000            	// #-2147483648
  42b864:	cbz	w2, 42b878 <nftw@plt+0x28cf8>
  42b868:	sub	w2, w2, #0x1
  42b86c:	ldr	x1, [x4, #24]
  42b870:	sbfiz	x2, x2, #5, #32
  42b874:	ldr	w1, [x1, x2]
  42b878:	cmp	w0, w1
  42b87c:	ldr	w2, [x4, #56]
  42b880:	sub	w1, w1, #0x1
  42b884:	csel	w0, w1, w0, cs  // cs = hs, nlast
  42b888:	cmp	w2, w0
  42b88c:	b.cs	42b894 <nftw@plt+0x28d14>  // b.hs, b.nlast
  42b890:	str	w0, [x4, #56]
  42b894:	ret
  42b898:	tbnz	w1, #31, 42b8c8 <nftw@plt+0x28d48>
  42b89c:	mov	w2, #0x6fffffff            	// #1879048191
  42b8a0:	cmp	w1, w2
  42b8a4:	b.ls	42b8c4 <nftw@plt+0x28d44>  // b.plast
  42b8a8:	mov	x2, #0x0                   	// #0
  42b8ac:	cbz	x0, 42b96c <nftw@plt+0x28dec>
  42b8b0:	mov	w5, w1
  42b8b4:	b	42b900 <nftw@plt+0x28d80>
  42b8b8:	mov	w2, #0x6fffffff            	// #1879048191
  42b8bc:	cmp	w1, w2
  42b8c0:	b.hi	42b8b0 <nftw@plt+0x28d30>  // b.pmore
  42b8c4:	b	42ac98 <nftw@plt+0x28118>
  42b8c8:	and	w1, w1, #0x7fffffff
  42b8cc:	mov	w5, #0x18                  	// #24
  42b8d0:	ldr	x4, [x0, #104]
  42b8d4:	umull	x1, w1, w5
  42b8d8:	ldr	w1, [x4, x1]
  42b8dc:	tbz	w1, #31, 42b8b8 <nftw@plt+0x28d38>
  42b8e0:	and	w3, w1, #0x7fffffff
  42b8e4:	mov	w2, #0x90000000            	// #-1879048192
  42b8e8:	mov	w6, #0xfffffff             	// #268435455
  42b8ec:	umull	x3, w3, w5
  42b8f0:	ldr	w5, [x4, x3]
  42b8f4:	add	w2, w5, w2
  42b8f8:	cmp	w2, w6
  42b8fc:	b.hi	42b8c4 <nftw@plt+0x28d44>  // b.pmore
  42b900:	ldp	w3, w4, [x0, #36]
  42b904:	ldr	x6, [x0, #24]
  42b908:	sbfiz	x1, x4, #5, #32
  42b90c:	add	x2, x6, x1
  42b910:	ldr	w1, [x6, x1]
  42b914:	cmp	w5, w1
  42b918:	b.cc	42b954 <nftw@plt+0x28dd4>  // b.lo, b.ul, b.last
  42b91c:	cbz	w4, 42b96c <nftw@plt+0x28dec>
  42b920:	ldur	w1, [x2, #-32]
  42b924:	cmp	w5, w1
  42b928:	b.cc	42b96c <nftw@plt+0x28dec>  // b.lo, b.ul, b.last
  42b92c:	sub	w3, w4, #0x1
  42b930:	mov	w4, #0x0                   	// #0
  42b934:	b	42b954 <nftw@plt+0x28dd4>
  42b938:	lsr	w2, w1, #1
  42b93c:	lsr	w1, w1, #1
  42b940:	lsl	x2, x2, #5
  42b944:	ldr	w2, [x6, x2]
  42b948:	cmp	w5, w2
  42b94c:	b.cc	42b974 <nftw@plt+0x28df4>  // b.lo, b.ul, b.last
  42b950:	mov	w3, w1
  42b954:	add	w1, w3, w4
  42b958:	cmp	w3, w4
  42b95c:	b.hi	42b938 <nftw@plt+0x28db8>  // b.pmore
  42b960:	sbfiz	x2, x3, #5, #32
  42b964:	str	w3, [x0, #40]
  42b968:	add	x2, x6, x2
  42b96c:	mov	x0, x2
  42b970:	ret
  42b974:	add	w4, w1, #0x1
  42b978:	b	42b954 <nftw@plt+0x28dd4>
  42b97c:	nop
  42b980:	stp	x29, x30, [sp, #-80]!
  42b984:	mov	w9, w1
  42b988:	mov	x12, x2
  42b98c:	mov	x29, sp
  42b990:	stp	x19, x20, [sp, #16]
  42b994:	mov	x10, x3
  42b998:	mov	x19, x0
  42b99c:	tbz	w1, #31, 42b9b4 <nftw@plt+0x28e34>
  42b9a0:	and	w9, w1, #0x7fffffff
  42b9a4:	mov	w1, #0x18                  	// #24
  42b9a8:	ldr	x0, [x0, #104]
  42b9ac:	umull	x9, w9, w1
  42b9b0:	ldr	w9, [x0, x9]
  42b9b4:	cmp	w9, #0x0
  42b9b8:	mov	w0, #0x0                   	// #0
  42b9bc:	ccmp	x10, #0x0, #0x0, eq  // eq = none
  42b9c0:	b.eq	42ba14 <nftw@plt+0x28e94>  // b.none
  42b9c4:	lsr	x11, x12, #32
  42b9c8:	mov	w0, w11
  42b9cc:	cbz	x10, 42ba20 <nftw@plt+0x28ea0>
  42b9d0:	ldr	x0, [x19, #88]
  42b9d4:	add	x1, sp, #0x38
  42b9d8:	mov	w2, #0x1                   	// #1
  42b9dc:	stp	w9, w12, [sp, #56]
  42b9e0:	str	w11, [sp, #64]
  42b9e4:	str	x10, [sp, #72]
  42b9e8:	bl	4490e8 <nftw@plt+0x46568>
  42b9ec:	ldr	x1, [x0]
  42b9f0:	mov	x20, x0
  42b9f4:	cbz	x1, 42baa8 <nftw@plt+0x28f28>
  42b9f8:	ldr	x0, [x19, #104]
  42b9fc:	sub	x0, x1, x0
  42ba00:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42ba04:	asr	x0, x0, #3
  42ba08:	movk	x1, #0xaaab
  42ba0c:	mul	x0, x0, x1
  42ba10:	orr	w0, w0, #0x80000000
  42ba14:	ldp	x19, x20, [sp, #16]
  42ba18:	ldp	x29, x30, [sp], #80
  42ba1c:	ret
  42ba20:	cmp	w9, w12
  42ba24:	b.ne	42bb50 <nftw@plt+0x28fd0>  // b.any
  42ba28:	cmp	w11, w9
  42ba2c:	b.cc	42bb50 <nftw@plt+0x28fd0>  // b.lo, b.ul, b.last
  42ba30:	sub	w2, w9, #0x2
  42ba34:	mov	w1, #0xfffd                	// #65533
  42ba38:	movk	w1, #0x4fff, lsl #16
  42ba3c:	cmp	w2, w1
  42ba40:	b.hi	42bb48 <nftw@plt+0x28fc8>  // b.pmore
  42ba44:	ldr	w0, [x19, #36]
  42ba48:	mov	w1, #0x80000000            	// #-2147483648
  42ba4c:	cbz	w0, 42ba60 <nftw@plt+0x28ee0>
  42ba50:	sub	w0, w0, #0x1
  42ba54:	ldr	x1, [x19, #24]
  42ba58:	sbfiz	x0, x0, #5, #32
  42ba5c:	ldr	w1, [x1, x0]
  42ba60:	cmp	w12, w1
  42ba64:	b.cs	42ba98 <nftw@plt+0x28f18>  // b.hs, b.nlast
  42ba68:	cmp	w11, w1
  42ba6c:	b.cs	42ba98 <nftw@plt+0x28f18>  // b.hs, b.nlast
  42ba70:	mov	w1, w12
  42ba74:	mov	x0, x19
  42ba78:	bl	42b898 <nftw@plt+0x28d18>
  42ba7c:	ldrb	w0, [x0, #7]
  42ba80:	sub	w4, w11, w12
  42ba84:	mov	w1, #0x1                   	// #1
  42ba88:	lsr	w4, w4, w0
  42ba8c:	lsl	w1, w1, w0
  42ba90:	cmp	w1, w4
  42ba94:	b.hi	42bb6c <nftw@plt+0x28fec>  // b.pmore
  42ba98:	cmp	w11, w12
  42ba9c:	b.ne	42bb50 <nftw@plt+0x28fd0>  // b.any
  42baa0:	mov	w0, w11
  42baa4:	b	42ba14 <nftw@plt+0x28e94>
  42baa8:	ldp	w0, w1, [x19, #96]
  42baac:	str	x21, [sp, #32]
  42bab0:	ldr	x21, [x19, #104]
  42bab4:	cmp	w0, w1
  42bab8:	b.cc	42bb0c <nftw@plt+0x28f8c>  // b.lo, b.ul, b.last
  42babc:	ldr	x2, [x19, #72]
  42bac0:	adrp	x0, 449000 <nftw@plt+0x46480>
  42bac4:	add	x0, x0, #0xc00
  42bac8:	cmp	x2, #0x0
  42bacc:	csel	x2, x0, x2, eq  // eq = none
  42bad0:	cbz	w1, 42bb60 <nftw@plt+0x28fe0>
  42bad4:	lsl	w0, w1, #1
  42bad8:	mov	w1, #0x18                  	// #24
  42badc:	umull	x1, w0, w1
  42bae0:	str	w0, [x19, #100]
  42bae4:	mov	x0, x21
  42bae8:	blr	x2
  42baec:	sub	x21, x0, x21
  42baf0:	ldr	w1, [x19, #100]
  42baf4:	str	x21, [sp, #48]
  42baf8:	str	x0, [x19, #104]
  42bafc:	cmp	w1, #0x80
  42bb00:	b.hi	42bb80 <nftw@plt+0x29000>  // b.pmore
  42bb04:	mov	x21, x0
  42bb08:	ldr	w0, [x19, #96]
  42bb0c:	mov	w2, #0x18                  	// #24
  42bb10:	add	w1, w0, #0x1
  42bb14:	umull	x2, w0, w2
  42bb18:	add	x21, x21, x2
  42bb1c:	str	x21, [x20]
  42bb20:	ldr	x21, [sp, #32]
  42bb24:	str	w1, [x19, #96]
  42bb28:	ldr	x0, [x19, #104]
  42bb2c:	ldp	x4, x5, [sp, #56]
  42bb30:	add	x2, x0, x2
  42bb34:	stp	x4, x5, [x2]
  42bb38:	ldr	x1, [sp, #72]
  42bb3c:	str	x1, [x2, #16]
  42bb40:	ldr	x1, [x20]
  42bb44:	b	42b9fc <nftw@plt+0x28e7c>
  42bb48:	cmp	w11, w9
  42bb4c:	b.eq	42ba14 <nftw@plt+0x28e94>  // b.none
  42bb50:	ldr	w0, [x19, #128]
  42bb54:	add	w0, w0, #0x1
  42bb58:	str	w0, [x19, #128]
  42bb5c:	b	42b9d0 <nftw@plt+0x28e50>
  42bb60:	mov	x1, #0xc00                 	// #3072
  42bb64:	mov	w0, #0x80                  	// #128
  42bb68:	b	42bae0 <nftw@plt+0x28f60>
  42bb6c:	ldr	w1, [x19, #124]
  42bb70:	orr	w0, w4, w12
  42bb74:	add	w1, w1, #0x1
  42bb78:	str	w1, [x19, #124]
  42bb7c:	b	42ba14 <nftw@plt+0x28e94>
  42bb80:	ldr	x0, [x19, #88]
  42bb84:	add	x2, sp, #0x30
  42bb88:	adrp	x1, 42a000 <nftw@plt+0x27480>
  42bb8c:	add	x1, x1, #0xc78
  42bb90:	bl	449280 <nftw@plt+0x46700>
  42bb94:	ldr	x0, [x19, #104]
  42bb98:	b	42bb04 <nftw@plt+0x28f84>
  42bb9c:	nop
  42bba0:	tbnz	w1, #31, 42bbdc <nftw@plt+0x2905c>
  42bba4:	cmp	w1, #0x1
  42bba8:	b.ls	42bbcc <nftw@plt+0x2904c>  // b.plast
  42bbac:	ldr	w2, [x0, #36]
  42bbb0:	cbz	w2, 42bbf4 <nftw@plt+0x29074>
  42bbb4:	sub	w2, w2, #0x1
  42bbb8:	ldr	x3, [x0, #24]
  42bbbc:	sbfiz	x2, x2, #5, #32
  42bbc0:	ldr	w2, [x3, x2]
  42bbc4:	cmp	w1, w2
  42bbc8:	b.cc	42bbf4 <nftw@plt+0x29074>  // b.lo, b.ul, b.last
  42bbcc:	mov	x0, #0x0                   	// #0
  42bbd0:	bfxil	x0, x1, #0, #32
  42bbd4:	bfi	x0, x1, #32, #32
  42bbd8:	ret
  42bbdc:	ldr	x0, [x0, #104]
  42bbe0:	and	w1, w1, #0x7fffffff
  42bbe4:	mov	w2, #0x18                  	// #24
  42bbe8:	umaddl	x1, w1, w2, x0
  42bbec:	ldur	x0, [x1, #4]
  42bbf0:	ret
  42bbf4:	mov	w2, #0x50000000            	// #1342177280
  42bbf8:	cmp	w1, w2
  42bbfc:	b.hi	42bbcc <nftw@plt+0x2904c>  // b.pmore
  42bc00:	stp	x29, x30, [sp, #-32]!
  42bc04:	mov	x29, sp
  42bc08:	str	w1, [sp, #28]
  42bc0c:	bl	42b898 <nftw@plt+0x28d18>
  42bc10:	mov	x3, x0
  42bc14:	ldr	w1, [sp, #28]
  42bc18:	mov	w2, #0x1                   	// #1
  42bc1c:	mov	x0, #0x0                   	// #0
  42bc20:	ldrb	w4, [x3, #7]
  42bc24:	ldp	x29, x30, [sp], #32
  42bc28:	lsl	w2, w2, w4
  42bc2c:	sub	w2, w2, #0x1
  42bc30:	and	w3, w2, w1
  42bc34:	bic	w1, w1, w2
  42bc38:	lsl	w3, w3, w4
  42bc3c:	bfxil	x0, x1, #0, #32
  42bc40:	add	w1, w3, w1
  42bc44:	bfi	x0, x1, #32, #32
  42bc48:	ret
  42bc4c:	nop
  42bc50:	tbnz	w1, #31, 42bc84 <nftw@plt+0x29104>
  42bc54:	mov	w9, w1
  42bc58:	stp	x29, x30, [sp, #-16]!
  42bc5c:	mov	x29, sp
  42bc60:	bl	42b898 <nftw@plt+0x28d18>
  42bc64:	cbz	x0, 42bc8c <nftw@plt+0x2910c>
  42bc68:	ldrb	w1, [x0, #7]
  42bc6c:	mov	w0, #0xffffffff            	// #-1
  42bc70:	ldp	x29, x30, [sp], #16
  42bc74:	lsl	w0, w0, w1
  42bc78:	bics	wzr, w9, w0
  42bc7c:	cset	w0, eq  // eq = none
  42bc80:	ret
  42bc84:	mov	w0, #0x0                   	// #0
  42bc88:	ret
  42bc8c:	mov	w0, #0x1                   	// #1
  42bc90:	ldp	x29, x30, [sp], #16
  42bc94:	ret
  42bc98:	mov	w9, w1
  42bc9c:	tbz	w1, #31, 42bcb4 <nftw@plt+0x29134>
  42bca0:	and	w9, w1, #0x7fffffff
  42bca4:	mov	w2, #0x18                  	// #24
  42bca8:	ldr	x1, [x0, #104]
  42bcac:	umull	x9, w9, w2
  42bcb0:	ldr	w9, [x1, x9]
  42bcb4:	ldr	w1, [x0, #36]
  42bcb8:	mov	w2, #0x80000000            	// #-2147483648
  42bcbc:	cbz	w1, 42bcd0 <nftw@plt+0x29150>
  42bcc0:	sub	w1, w1, #0x1
  42bcc4:	ldr	x2, [x0, #24]
  42bcc8:	sbfiz	x1, x1, #5, #32
  42bccc:	ldr	w2, [x2, x1]
  42bcd0:	cmp	w9, #0x1
  42bcd4:	ccmp	w9, w2, #0x2, hi  // hi = pmore
  42bcd8:	b.cc	42bce4 <nftw@plt+0x29164>  // b.lo, b.ul, b.last
  42bcdc:	mov	w0, w9
  42bce0:	ret
  42bce4:	stp	x29, x30, [sp, #-16]!
  42bce8:	mov	w1, w9
  42bcec:	mov	x29, sp
  42bcf0:	bl	42b898 <nftw@plt+0x28d18>
  42bcf4:	ldrb	w0, [x0, #7]
  42bcf8:	mov	w1, #0xffffffff            	// #-1
  42bcfc:	ldp	x29, x30, [sp], #16
  42bd00:	lsl	w1, w1, w0
  42bd04:	and	w9, w9, w1
  42bd08:	mov	w0, w9
  42bd0c:	ret
  42bd10:	stp	x29, x30, [sp, #-16]!
  42bd14:	mov	x10, x0
  42bd18:	mov	w9, w1
  42bd1c:	mov	x29, sp
  42bd20:	mov	x11, x2
  42bd24:	tbnz	w1, #31, 42bd74 <nftw@plt+0x291f4>
  42bd28:	mov	w12, #0x6fffffff            	// #1879048191
  42bd2c:	mov	w1, w9
  42bd30:	mov	x0, x10
  42bd34:	bl	42b898 <nftw@plt+0x28d18>
  42bd38:	cbz	x0, 42bd60 <nftw@plt+0x291e0>
  42bd3c:	ldr	w1, [x0]
  42bd40:	cmp	w1, w12
  42bd44:	b.ls	42bd60 <nftw@plt+0x291e0>  // b.plast
  42bd48:	ldr	w9, [x0, #24]
  42bd4c:	mov	x0, x10
  42bd50:	mov	w1, w9
  42bd54:	bl	42b898 <nftw@plt+0x28d18>
  42bd58:	cbnz	x0, 42bd3c <nftw@plt+0x291bc>
  42bd5c:	nop
  42bd60:	cbz	x11, 42bd68 <nftw@plt+0x291e8>
  42bd64:	str	x0, [x11]
  42bd68:	mov	w0, w9
  42bd6c:	ldp	x29, x30, [sp], #16
  42bd70:	ret
  42bd74:	and	w9, w1, #0x7fffffff
  42bd78:	mov	w1, #0x18                  	// #24
  42bd7c:	ldr	x0, [x0, #104]
  42bd80:	umull	x9, w9, w1
  42bd84:	ldr	w9, [x0, x9]
  42bd88:	b	42bd28 <nftw@plt+0x291a8>
  42bd8c:	nop
  42bd90:	cbz	x0, 42bda8 <nftw@plt+0x29228>
  42bd94:	ldr	w1, [x0]
  42bd98:	mov	w0, #0x6fffffff            	// #1879048191
  42bd9c:	cmp	w1, w0
  42bda0:	cset	w0, hi  // hi = pmore
  42bda4:	ret
  42bda8:	mov	w0, #0x0                   	// #0
  42bdac:	ret
  42bdb0:	tbz	w2, #31, 42bdc8 <nftw@plt+0x29248>
  42bdb4:	and	w2, w2, #0x7fffffff
  42bdb8:	mov	w3, #0x18                  	// #24
  42bdbc:	ldr	x0, [x0, #104]
  42bdc0:	umull	x2, w2, w3
  42bdc4:	ldr	w2, [x0, x2]
  42bdc8:	ldr	w3, [x1]
  42bdcc:	ldr	x0, [x1, #16]
  42bdd0:	sub	w2, w2, w3
  42bdd4:	lsl	w2, w2, #1
  42bdd8:	ldr	w0, [x0, x2, lsl #2]
  42bddc:	ret
  42bde0:	stp	x29, x30, [sp, #-32]!
  42bde4:	mov	x2, x0
  42bde8:	mov	x29, sp
  42bdec:	str	xzr, [sp, #24]
  42bdf0:	tbz	w1, #31, 42be08 <nftw@plt+0x29288>
  42bdf4:	and	w1, w1, #0x7fffffff
  42bdf8:	mov	w3, #0x18                  	// #24
  42bdfc:	ldr	x0, [x0, #104]
  42be00:	umull	x1, w1, w3
  42be04:	ldr	w1, [x0, x1]
  42be08:	cmp	w1, #0x1
  42be0c:	mov	w0, #0x0                   	// #0
  42be10:	b.ls	42be3c <nftw@plt+0x292bc>  // b.plast
  42be14:	mov	x0, x2
  42be18:	add	x2, sp, #0x18
  42be1c:	bl	42bd10 <nftw@plt+0x29190>
  42be20:	ldr	x1, [sp, #24]
  42be24:	ldr	w3, [x1]
  42be28:	ldrb	w2, [x1, #6]
  42be2c:	sub	w0, w0, w3
  42be30:	ldr	w1, [x1, #16]
  42be34:	lsr	w0, w0, w2
  42be38:	add	w0, w0, w1
  42be3c:	ldp	x29, x30, [sp], #32
  42be40:	ret
  42be44:	nop
  42be48:	stp	x29, x30, [sp, #-32]!
  42be4c:	mov	x29, sp
  42be50:	str	xzr, [sp, #24]
  42be54:	tbz	w1, #31, 42be6c <nftw@plt+0x292ec>
  42be58:	and	w1, w1, #0x7fffffff
  42be5c:	mov	w3, #0x18                  	// #24
  42be60:	ldr	x2, [x0, #104]
  42be64:	umull	x1, w1, w3
  42be68:	ldr	w1, [x2, x1]
  42be6c:	cmp	w1, #0x1
  42be70:	mov	x2, #0x0                   	// #0
  42be74:	b.ls	42be88 <nftw@plt+0x29308>  // b.plast
  42be78:	add	x2, sp, #0x18
  42be7c:	bl	42bd10 <nftw@plt+0x29190>
  42be80:	ldr	x0, [sp, #24]
  42be84:	ldr	x2, [x0, #8]
  42be88:	mov	x0, x2
  42be8c:	ldp	x29, x30, [sp], #32
  42be90:	ret
  42be94:	nop
  42be98:	ldr	x0, [x0, #8]
  42be9c:	ldr	x0, [x0]
  42bea0:	ret
  42bea4:	nop
  42bea8:	mov	x10, x0
  42beac:	mov	w9, w1
  42beb0:	tbz	w1, #31, 42bec8 <nftw@plt+0x29348>
  42beb4:	and	w9, w1, #0x7fffffff
  42beb8:	mov	w1, #0x18                  	// #24
  42bebc:	ldr	x0, [x0, #104]
  42bec0:	umull	x9, w9, w1
  42bec4:	ldr	w9, [x0, x9]
  42bec8:	cmp	w9, #0x1
  42becc:	b.ls	42bf64 <nftw@plt+0x293e4>  // b.plast
  42bed0:	stp	x29, x30, [sp, #-16]!
  42bed4:	mov	w11, #0x6fffffff            	// #1879048191
  42bed8:	mov	w12, #0x18                  	// #24
  42bedc:	mov	x29, sp
  42bee0:	mov	w1, w9
  42bee4:	mov	x0, x10
  42bee8:	bl	42b898 <nftw@plt+0x28d18>
  42beec:	cbz	x0, 42bf58 <nftw@plt+0x293d8>
  42bef0:	ldr	w1, [x0]
  42bef4:	cmp	w1, w11
  42bef8:	b.ls	42bf20 <nftw@plt+0x293a0>  // b.plast
  42befc:	tbnz	w9, #31, 42bf2c <nftw@plt+0x293ac>
  42bf00:	sub	w9, w9, w1
  42bf04:	ldr	x1, [x0, #16]
  42bf08:	lsl	w9, w9, #1
  42bf0c:	ldr	w9, [x1, x9, lsl #2]
  42bf10:	cmp	w9, #0x1
  42bf14:	b.hi	42bee0 <nftw@plt+0x29360>  // b.pmore
  42bf18:	ldr	w9, [x0, #24]
  42bf1c:	b	42bee0 <nftw@plt+0x29360>
  42bf20:	ldrb	w0, [x0, #5]
  42bf24:	ldp	x29, x30, [sp], #16
  42bf28:	ret
  42bf2c:	and	w2, w9, #0x7fffffff
  42bf30:	ldr	x3, [x10, #104]
  42bf34:	umull	x2, w2, w12
  42bf38:	ldr	w9, [x3, x2]
  42bf3c:	sub	w9, w9, w1
  42bf40:	ldr	x1, [x0, #16]
  42bf44:	lsl	w9, w9, #1
  42bf48:	ldr	w9, [x1, x9, lsl #2]
  42bf4c:	cmp	w9, #0x1
  42bf50:	b.hi	42bee0 <nftw@plt+0x29360>  // b.pmore
  42bf54:	b	42bf18 <nftw@plt+0x29398>
  42bf58:	mov	w0, #0x0                   	// #0
  42bf5c:	ldp	x29, x30, [sp], #16
  42bf60:	ret
  42bf64:	mov	w0, #0x0                   	// #0
  42bf68:	ret
  42bf6c:	nop
  42bf70:	tbz	w1, #31, 42bf88 <nftw@plt+0x29408>
  42bf74:	and	w1, w1, #0x7fffffff
  42bf78:	mov	w2, #0x18                  	// #24
  42bf7c:	ldr	x0, [x0, #104]
  42bf80:	umull	x1, w1, w2
  42bf84:	ldr	w1, [x0, x1]
  42bf88:	mov	w0, #0x90000000            	// #-1879048192
  42bf8c:	add	w1, w1, w0
  42bf90:	mov	w0, #0xfffffff             	// #268435455
  42bf94:	cmp	w1, w0
  42bf98:	cset	w0, ls  // ls = plast
  42bf9c:	ret
  42bfa0:	mov	w9, w1
  42bfa4:	mov	x12, x0
  42bfa8:	mov	x11, x3
  42bfac:	tbz	w1, #31, 42bfc4 <nftw@plt+0x29444>
  42bfb0:	and	w0, w1, #0x7fffffff
  42bfb4:	mov	w3, #0x18                  	// #24
  42bfb8:	ldr	x1, [x12, #104]
  42bfbc:	umull	x0, w0, w3
  42bfc0:	ldr	w1, [x1, x0]
  42bfc4:	cmp	w1, #0x1
  42bfc8:	b.ls	42c0c8 <nftw@plt+0x29548>  // b.plast
  42bfcc:	stp	x29, x30, [sp, #-16]!
  42bfd0:	cmp	w2, #0x1
  42bfd4:	mov	w10, #0x6fffffff            	// #1879048191
  42bfd8:	mov	x29, sp
  42bfdc:	mov	w13, #0x18                  	// #24
  42bfe0:	b.eq	42c038 <nftw@plt+0x294b8>  // b.none
  42bfe4:	cmp	w2, #0x2
  42bfe8:	b.eq	42c05c <nftw@plt+0x294dc>  // b.none
  42bfec:	cbz	w2, 42c0b4 <nftw@plt+0x29534>
  42bff0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42bff4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42bff8:	add	x2, x2, #0x60
  42bffc:	add	x0, x0, #0x80
  42c000:	mov	w1, #0x621                 	// #1569
  42c004:	bl	402bf0 <nftw@plt+0x70>
  42c008:	ldr	w2, [x0]
  42c00c:	cmp	w2, w10
  42c010:	b.ls	42c048 <nftw@plt+0x294c8>  // b.plast
  42c014:	tbz	w9, #31, 42c028 <nftw@plt+0x294a8>
  42c018:	and	w9, w9, #0x7fffffff
  42c01c:	ldr	x1, [x12, #104]
  42c020:	umull	x9, w9, w13
  42c024:	ldr	w9, [x1, x9]
  42c028:	sub	w9, w9, w2
  42c02c:	ldr	x0, [x0, #16]
  42c030:	lsl	w9, w9, #1
  42c034:	ldr	w9, [x0, x9, lsl #2]
  42c038:	mov	w1, w9
  42c03c:	mov	x0, x12
  42c040:	bl	42b898 <nftw@plt+0x28d18>
  42c044:	cbnz	x0, 42c008 <nftw@plt+0x29488>
  42c048:	cbz	x11, 42c050 <nftw@plt+0x294d0>
  42c04c:	str	x0, [x11]
  42c050:	mov	w0, w9
  42c054:	ldp	x29, x30, [sp], #16
  42c058:	ret
  42c05c:	mov	w14, #0x18                  	// #24
  42c060:	mov	w13, #0x6fffffff            	// #1879048191
  42c064:	b	42c088 <nftw@plt+0x29508>
  42c068:	ldr	w1, [x0]
  42c06c:	cmp	w1, w13
  42c070:	b.ls	42c048 <nftw@plt+0x294c8>  // b.plast
  42c074:	sub	w10, w10, w1
  42c078:	ldr	x0, [x0, #16]
  42c07c:	lsl	w10, w10, #1
  42c080:	add	w10, w10, #0x1
  42c084:	ldr	w9, [x0, x10, lsl #2]
  42c088:	mov	w10, w9
  42c08c:	tbz	w9, #31, 42c0a0 <nftw@plt+0x29520>
  42c090:	and	w1, w9, #0x7fffffff
  42c094:	ldr	x0, [x12, #104]
  42c098:	umull	x1, w1, w14
  42c09c:	ldr	w10, [x0, x1]
  42c0a0:	mov	w1, w10
  42c0a4:	mov	x0, x12
  42c0a8:	bl	42b898 <nftw@plt+0x28d18>
  42c0ac:	cbnz	x0, 42c068 <nftw@plt+0x294e8>
  42c0b0:	b	42c048 <nftw@plt+0x294c8>
  42c0b4:	ldp	x29, x30, [sp], #16
  42c0b8:	mov	x2, x11
  42c0bc:	mov	w1, w9
  42c0c0:	mov	x0, x12
  42c0c4:	b	42bd10 <nftw@plt+0x29190>
  42c0c8:	cbz	x11, 42c0d0 <nftw@plt+0x29550>
  42c0cc:	str	xzr, [x11]
  42c0d0:	mov	w0, w9
  42c0d4:	ret
  42c0d8:	stp	x29, x30, [sp, #-64]!
  42c0dc:	mov	w9, w1
  42c0e0:	mov	x29, sp
  42c0e4:	stp	x19, x20, [sp, #16]
  42c0e8:	mov	w19, w2
  42c0ec:	str	x21, [sp, #32]
  42c0f0:	mov	x21, x0
  42c0f4:	str	xzr, [sp, #56]
  42c0f8:	tbnz	w1, #31, 42c11c <nftw@plt+0x2959c>
  42c0fc:	mov	w0, #0x6fffffff            	// #1879048191
  42c100:	cmp	w9, w0
  42c104:	b.ls	42c154 <nftw@plt+0x295d4>  // b.plast
  42c108:	mov	w0, w9
  42c10c:	ldp	x19, x20, [sp, #16]
  42c110:	ldr	x21, [sp, #32]
  42c114:	ldp	x29, x30, [sp], #64
  42c118:	ret
  42c11c:	and	w9, w1, #0x7fffffff
  42c120:	mov	w3, #0x18                  	// #24
  42c124:	ldr	x2, [x0, #104]
  42c128:	umull	x9, w9, w3
  42c12c:	ldr	w9, [x2, x9]
  42c130:	tbz	w9, #31, 42c0fc <nftw@plt+0x2957c>
  42c134:	and	w1, w9, #0x7fffffff
  42c138:	mov	w5, #0x90000000            	// #-1879048192
  42c13c:	mov	w4, #0xfffffff             	// #268435455
  42c140:	umull	x1, w1, w3
  42c144:	ldr	w0, [x2, x1]
  42c148:	add	w0, w0, w5
  42c14c:	cmp	w0, w4
  42c150:	b.ls	42c108 <nftw@plt+0x29588>  // b.plast
  42c154:	cmp	w19, #0x0
  42c158:	cset	w20, eq  // eq = none
  42c15c:	cmp	w9, #0x1
  42c160:	cset	w0, ls  // ls = plast
  42c164:	orr	w20, w20, w0
  42c168:	cbnz	w20, 42c108 <nftw@plt+0x29588>
  42c16c:	mov	w1, w9
  42c170:	add	x3, sp, #0x38
  42c174:	mov	x0, x21
  42c178:	mov	w2, #0x1                   	// #1
  42c17c:	bl	42bfa0 <nftw@plt+0x29420>
  42c180:	mov	w9, w0
  42c184:	ldr	x3, [sp, #56]
  42c188:	ldrb	w5, [x3, #7]
  42c18c:	mov	w10, w5
  42c190:	lsl	w1, w19, w5
  42c194:	add	w1, w1, w0
  42c198:	ldr	w0, [x3]
  42c19c:	cmp	w1, w0
  42c1a0:	b.ls	42c108 <nftw@plt+0x29588>  // b.plast
  42c1a4:	ldr	w1, [x21, #12]
  42c1a8:	sub	w8, w9, w0
  42c1ac:	ldr	x2, [x21]
  42c1b0:	sub	w1, w1, #0x1
  42c1b4:	ldrb	w7, [x3, #6]
  42c1b8:	mov	w4, #0x18                  	// #24
  42c1bc:	ldr	w0, [x3, #16]
  42c1c0:	smaddl	x1, w1, w4, x2
  42c1c4:	lsr	w2, w8, w7
  42c1c8:	add	w2, w2, w0
  42c1cc:	b	42c1f4 <nftw@plt+0x29674>
  42c1d0:	ldr	w0, [x3, #24]
  42c1d4:	cmp	w4, w0
  42c1d8:	b.cc	42c270 <nftw@plt+0x296f0>  // b.lo, b.ul, b.last
  42c1dc:	ldr	w0, [x3, #40]
  42c1e0:	add	x3, x3, #0x18
  42c1e4:	mov	w20, #0x1                   	// #1
  42c1e8:	cmp	w0, w2
  42c1ec:	b.hi	42c108 <nftw@plt+0x29588>  // b.pmore
  42c1f0:	ldrb	w5, [x6, #31]
  42c1f4:	lsl	w4, w19, w5
  42c1f8:	cmp	x3, x1
  42c1fc:	add	w4, w4, w9
  42c200:	mov	x6, x3
  42c204:	b.ne	42c1d0 <nftw@plt+0x29650>  // b.any
  42c208:	cbz	w20, 42c210 <nftw@plt+0x29690>
  42c20c:	str	x1, [sp, #56]
  42c210:	mov	w0, #0x1                   	// #1
  42c214:	ldrb	w4, [x1, #6]
  42c218:	lsl	w3, w0, w7
  42c21c:	sub	w3, w3, #0x1
  42c220:	and	w3, w3, w8
  42c224:	sub	w5, w4, w5
  42c228:	lsr	w3, w3, w10
  42c22c:	add	w3, w3, w19
  42c230:	lsl	w0, w0, w5
  42c234:	cmp	w0, w3
  42c238:	b.ls	42c108 <nftw@plt+0x29588>  // b.plast
  42c23c:	mov	x0, x21
  42c240:	bl	42b818 <nftw@plt+0x28c98>
  42c244:	ldr	w1, [x21, #56]
  42c248:	mov	w10, w0
  42c24c:	cmp	w1, w0
  42c250:	b.cc	42c108 <nftw@plt+0x29588>  // b.lo, b.ul, b.last
  42c254:	mov	w1, w10
  42c258:	mov	x0, x21
  42c25c:	bl	42b898 <nftw@plt+0x28d18>
  42c260:	ldr	x1, [sp, #56]
  42c264:	cmp	x1, x0
  42c268:	csel	w9, w9, w10, ne  // ne = any
  42c26c:	b	42c108 <nftw@plt+0x29588>
  42c270:	mov	x1, x3
  42c274:	b	42c208 <nftw@plt+0x29688>
  42c278:	stp	x29, x30, [sp, #-64]!
  42c27c:	mov	x29, sp
  42c280:	stp	x19, x20, [sp, #16]
  42c284:	mov	w20, w1
  42c288:	stp	x21, x22, [sp, #32]
  42c28c:	mov	w21, w1
  42c290:	mov	w22, w2
  42c294:	stp	x23, x24, [sp, #48]
  42c298:	mov	x23, x0
  42c29c:	tbz	w1, #31, 42c2b4 <nftw@plt+0x29734>
  42c2a0:	and	w0, w1, #0x7fffffff
  42c2a4:	mov	w1, #0x18                  	// #24
  42c2a8:	ldr	x3, [x23, #104]
  42c2ac:	umull	x0, w0, w1
  42c2b0:	ldr	w20, [x3, x0]
  42c2b4:	mov	w19, w22
  42c2b8:	tbz	w22, #31, 42c2d0 <nftw@plt+0x29750>
  42c2bc:	and	w0, w22, #0x7fffffff
  42c2c0:	mov	w1, #0x18                  	// #24
  42c2c4:	ldr	x3, [x23, #104]
  42c2c8:	umull	x0, w0, w1
  42c2cc:	ldr	w19, [x3, x0]
  42c2d0:	cmp	w20, w19
  42c2d4:	b.eq	42c3d8 <nftw@plt+0x29858>  // b.none
  42c2d8:	tbnz	w20, #31, 42c358 <nftw@plt+0x297d8>
  42c2dc:	mov	w0, #0x6fffffff            	// #1879048191
  42c2e0:	mov	w24, #0x0                   	// #0
  42c2e4:	cmp	w20, w0
  42c2e8:	b.ls	42c308 <nftw@plt+0x29788>  // b.plast
  42c2ec:	mov	w1, w20
  42c2f0:	mov	x0, x23
  42c2f4:	mov	x3, #0x0                   	// #0
  42c2f8:	mov	w2, #0x0                   	// #0
  42c2fc:	bl	42bfa0 <nftw@plt+0x29420>
  42c300:	mov	w20, w0
  42c304:	mov	w24, #0x1                   	// #1
  42c308:	tbnz	w19, #31, 42c388 <nftw@plt+0x29808>
  42c30c:	mov	w0, #0x6fffffff            	// #1879048191
  42c310:	cmp	w19, w0
  42c314:	b.ls	42c3b8 <nftw@plt+0x29838>  // b.plast
  42c318:	mov	w1, w19
  42c31c:	mov	x0, x23
  42c320:	mov	x3, #0x0                   	// #0
  42c324:	mov	w2, #0x0                   	// #0
  42c328:	bl	42bfa0 <nftw@plt+0x29420>
  42c32c:	mov	w19, w0
  42c330:	cmp	w0, w20
  42c334:	b.eq	42c408 <nftw@plt+0x29888>  // b.none
  42c338:	tbnz	w20, #31, 42c3bc <nftw@plt+0x2983c>
  42c33c:	tbnz	w19, #31, 42c3f0 <nftw@plt+0x29870>
  42c340:	sub	w0, w19, w20
  42c344:	ldp	x19, x20, [sp, #16]
  42c348:	ldp	x21, x22, [sp, #32]
  42c34c:	ldp	x23, x24, [sp, #48]
  42c350:	ldp	x29, x30, [sp], #64
  42c354:	ret
  42c358:	and	w1, w20, #0x7fffffff
  42c35c:	mov	w0, #0x18                  	// #24
  42c360:	ldr	x3, [x23, #104]
  42c364:	mov	w4, #0x90000000            	// #-1879048192
  42c368:	umull	x1, w1, w0
  42c36c:	mov	w2, #0xfffffff             	// #268435455
  42c370:	mov	w24, #0x0                   	// #0
  42c374:	ldr	w0, [x3, x1]
  42c378:	add	w0, w0, w4
  42c37c:	cmp	w0, w2
  42c380:	b.ls	42c2ec <nftw@plt+0x2976c>  // b.plast
  42c384:	tbz	w19, #31, 42c30c <nftw@plt+0x2978c>
  42c388:	and	w0, w19, #0x7fffffff
  42c38c:	mov	w2, #0x18                  	// #24
  42c390:	ldr	x3, [x23, #104]
  42c394:	mov	w5, #0x90000000            	// #-1879048192
  42c398:	umull	x2, w0, w2
  42c39c:	mov	w4, #0xfffffff             	// #268435455
  42c3a0:	ldr	w1, [x3, x2]
  42c3a4:	add	w1, w1, w5
  42c3a8:	cmp	w1, w4
  42c3ac:	b.ls	42c318 <nftw@plt+0x29798>  // b.plast
  42c3b0:	tbz	w20, #31, 42c3f8 <nftw@plt+0x29878>
  42c3b4:	b	42c3c0 <nftw@plt+0x29840>
  42c3b8:	tbz	w20, #31, 42c340 <nftw@plt+0x297c0>
  42c3bc:	ldr	x3, [x23, #104]
  42c3c0:	and	w0, w20, #0x7fffffff
  42c3c4:	mov	w20, #0x18                  	// #24
  42c3c8:	umull	x0, w0, w20
  42c3cc:	ldr	w20, [x3, x0]
  42c3d0:	tbz	w19, #31, 42c340 <nftw@plt+0x297c0>
  42c3d4:	b	42c3f0 <nftw@plt+0x29870>
  42c3d8:	mov	w0, #0x0                   	// #0
  42c3dc:	ldp	x19, x20, [sp, #16]
  42c3e0:	ldp	x21, x22, [sp, #32]
  42c3e4:	ldp	x23, x24, [sp, #48]
  42c3e8:	ldp	x29, x30, [sp], #64
  42c3ec:	ret
  42c3f0:	ldr	x3, [x23, #104]
  42c3f4:	and	w0, w19, #0x7fffffff
  42c3f8:	mov	w1, #0x18                  	// #24
  42c3fc:	umull	x0, w0, w1
  42c400:	ldr	w19, [x3, x0]
  42c404:	b	42c340 <nftw@plt+0x297c0>
  42c408:	cbz	w24, 42c338 <nftw@plt+0x297b8>
  42c40c:	mov	w1, w21
  42c410:	mov	x0, x23
  42c414:	bl	42b898 <nftw@plt+0x28d18>
  42c418:	mov	x9, x0
  42c41c:	mov	w1, w22
  42c420:	mov	x0, x23
  42c424:	bl	42b898 <nftw@plt+0x28d18>
  42c428:	mov	x10, x0
  42c42c:	mov	w11, #0x6fffffff            	// #1879048191
  42c430:	cbz	x9, 42c480 <nftw@plt+0x29900>
  42c434:	ldr	w0, [x9]
  42c438:	cmp	w0, w11
  42c43c:	b.ls	42c498 <nftw@plt+0x29918>  // b.plast
  42c440:	cbz	x10, 42c480 <nftw@plt+0x29900>
  42c444:	cmp	x9, x10
  42c448:	ldr	w2, [x10]
  42c44c:	cset	w1, ne  // ne = any
  42c450:	cmp	w1, #0x0
  42c454:	ccmp	w2, w11, #0x0, ne  // ne = any
  42c458:	b.ls	42c4a0 <nftw@plt+0x29920>  // b.plast
  42c45c:	cmp	w0, w2
  42c460:	b.cs	42c4ac <nftw@plt+0x2992c>  // b.hs, b.nlast
  42c464:	ldr	w21, [x9, #24]
  42c468:	mov	x0, x23
  42c46c:	mov	w1, w21
  42c470:	bl	42b898 <nftw@plt+0x28d18>
  42c474:	mov	x9, x0
  42c478:	cbnz	x0, 42c434 <nftw@plt+0x298b4>
  42c47c:	nop
  42c480:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c484:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c488:	add	x2, x2, #0x98
  42c48c:	add	x0, x0, #0x80
  42c490:	mov	w1, #0x549                 	// #1353
  42c494:	bl	402bf0 <nftw@plt+0x70>
  42c498:	cmp	x9, x10
  42c49c:	cset	w1, ne  // ne = any
  42c4a0:	sub	w0, w22, w21
  42c4a4:	cbz	w1, 42c344 <nftw@plt+0x297c4>
  42c4a8:	b	42c480 <nftw@plt+0x29900>
  42c4ac:	ldr	w22, [x10, #24]
  42c4b0:	mov	x0, x23
  42c4b4:	mov	w1, w22
  42c4b8:	bl	42b898 <nftw@plt+0x28d18>
  42c4bc:	mov	x10, x0
  42c4c0:	b	42c434 <nftw@plt+0x298b4>
  42c4c4:	nop
  42c4c8:	mov	x10, x0
  42c4cc:	mov	w9, w1
  42c4d0:	tbnz	w1, #31, 42c58c <nftw@plt+0x29a0c>
  42c4d4:	mov	w0, #0x6fffffff            	// #1879048191
  42c4d8:	cmp	w9, w0
  42c4dc:	b.ls	42c54c <nftw@plt+0x299cc>  // b.plast
  42c4e0:	stp	x29, x30, [sp, #-16]!
  42c4e4:	mov	w11, #0x18                  	// #24
  42c4e8:	mov	w12, #0x6fffffff            	// #1879048191
  42c4ec:	mov	w14, #0x90000000            	// #-1879048192
  42c4f0:	mov	w13, #0xfffffff             	// #268435455
  42c4f4:	mov	x29, sp
  42c4f8:	mov	w1, w9
  42c4fc:	mov	x0, x10
  42c500:	bl	42b898 <nftw@plt+0x28d18>
  42c504:	and	w1, w9, #0x7fffffff
  42c508:	mov	x3, x0
  42c50c:	mov	w2, w9
  42c510:	tbz	w9, #31, 42c520 <nftw@plt+0x299a0>
  42c514:	umull	x1, w1, w11
  42c518:	ldr	x0, [x10, #104]
  42c51c:	ldr	w2, [x0, x1]
  42c520:	ldr	w1, [x3]
  42c524:	ldr	x0, [x3, #16]
  42c528:	sub	w2, w2, w1
  42c52c:	lsl	w2, w2, #1
  42c530:	ldr	w2, [x0, x2, lsl #2]
  42c534:	and	w3, w2, #0x7fffffff
  42c538:	tbnz	w2, #31, 42c554 <nftw@plt+0x299d4>
  42c53c:	cmp	w2, w12
  42c540:	b.ls	42c56c <nftw@plt+0x299ec>  // b.plast
  42c544:	mov	w9, w2
  42c548:	b	42c4f8 <nftw@plt+0x29978>
  42c54c:	mov	w0, #0x0                   	// #0
  42c550:	ret
  42c554:	umull	x3, w3, w11
  42c558:	ldr	x4, [x10, #104]
  42c55c:	ldr	w3, [x4, x3]
  42c560:	add	w3, w3, w14
  42c564:	cmp	w3, w13
  42c568:	b.ls	42c544 <nftw@plt+0x299c4>  // b.plast
  42c56c:	sub	w1, w9, w1
  42c570:	ldp	x29, x30, [sp], #16
  42c574:	lsl	w1, w1, #1
  42c578:	add	w1, w1, #0x1
  42c57c:	ldr	w0, [x0, x1, lsl #2]
  42c580:	cmp	w0, w2
  42c584:	cset	w0, eq  // eq = none
  42c588:	ret
  42c58c:	and	w9, w1, #0x7fffffff
  42c590:	mov	w4, #0x18                  	// #24
  42c594:	ldr	x3, [x0, #104]
  42c598:	umull	x9, w9, w4
  42c59c:	ldr	w9, [x3, x9]
  42c5a0:	tbz	w9, #31, 42c4d4 <nftw@plt+0x29954>
  42c5a4:	and	w2, w9, #0x7fffffff
  42c5a8:	mov	w6, #0x90000000            	// #-1879048192
  42c5ac:	mov	w5, #0xfffffff             	// #268435455
  42c5b0:	mov	w0, #0x0                   	// #0
  42c5b4:	umull	x2, w2, w4
  42c5b8:	ldr	w1, [x3, x2]
  42c5bc:	add	w1, w1, w6
  42c5c0:	cmp	w1, w5
  42c5c4:	b.ls	42c4e0 <nftw@plt+0x29960>  // b.plast
  42c5c8:	ret
  42c5cc:	nop
  42c5d0:	stp	x29, x30, [sp, #-16]!
  42c5d4:	mov	x10, x2
  42c5d8:	mov	x9, x0
  42c5dc:	mov	x29, sp
  42c5e0:	ldr	x12, [x2]
  42c5e4:	tbnz	w1, #31, 42c654 <nftw@plt+0x29ad4>
  42c5e8:	ldr	w3, [x12]
  42c5ec:	mov	x0, x9
  42c5f0:	ldr	x2, [x12, #16]
  42c5f4:	sub	w1, w1, w3
  42c5f8:	lsl	w1, w1, #1
  42c5fc:	ldr	w11, [x2, x1, lsl #2]
  42c600:	mov	w1, w11
  42c604:	bl	42b898 <nftw@plt+0x28d18>
  42c608:	mov	x3, x0
  42c60c:	cbz	x0, 42c630 <nftw@plt+0x29ab0>
  42c610:	ldr	w1, [x3]
  42c614:	mov	w0, #0x6fffffff            	// #1879048191
  42c618:	cmp	w1, w0
  42c61c:	b.ls	42c630 <nftw@plt+0x29ab0>  // b.plast
  42c620:	str	x3, [x10]
  42c624:	mov	w0, w11
  42c628:	ldp	x29, x30, [sp], #16
  42c62c:	ret
  42c630:	ldr	w11, [x12, #24]
  42c634:	mov	x0, x9
  42c638:	mov	w1, w11
  42c63c:	bl	42b898 <nftw@plt+0x28d18>
  42c640:	mov	x3, x0
  42c644:	str	x3, [x10]
  42c648:	mov	w0, w11
  42c64c:	ldp	x29, x30, [sp], #16
  42c650:	ret
  42c654:	and	w1, w1, #0x7fffffff
  42c658:	mov	w2, #0x18                  	// #24
  42c65c:	ldr	x0, [x0, #104]
  42c660:	umull	x1, w1, w2
  42c664:	ldr	w1, [x0, x1]
  42c668:	tbz	w1, #31, 42c5e8 <nftw@plt+0x29a68>
  42c66c:	and	w1, w1, #0x7fffffff
  42c670:	umull	x1, w1, w2
  42c674:	ldr	w1, [x0, x1]
  42c678:	b	42c5e8 <nftw@plt+0x29a68>
  42c67c:	nop
  42c680:	stp	x29, x30, [sp, #-64]!
  42c684:	mov	x29, sp
  42c688:	stp	x19, x20, [sp, #16]
  42c68c:	mov	x20, x0
  42c690:	mov	w19, w1
  42c694:	stp	x21, x22, [sp, #32]
  42c698:	mov	x21, x2
  42c69c:	stp	xzr, xzr, [sp, #48]
  42c6a0:	tbz	w1, #31, 42c6b8 <nftw@plt+0x29b38>
  42c6a4:	and	w19, w1, #0x7fffffff
  42c6a8:	mov	w1, #0x18                  	// #24
  42c6ac:	ldr	x0, [x0, #104]
  42c6b0:	umull	x19, w19, w1
  42c6b4:	ldr	w19, [x0, x19]
  42c6b8:	mov	w1, w19
  42c6bc:	mov	x0, x20
  42c6c0:	bl	42b898 <nftw@plt+0x28d18>
  42c6c4:	str	x0, [sp, #48]
  42c6c8:	cbz	x0, 42c770 <nftw@plt+0x29bf0>
  42c6cc:	ldr	w1, [x0]
  42c6d0:	mov	w0, #0x6fffffff            	// #1879048191
  42c6d4:	cmp	w1, w0
  42c6d8:	b.ls	42c770 <nftw@plt+0x29bf0>  // b.plast
  42c6dc:	add	x3, sp, #0x38
  42c6e0:	mov	w1, w19
  42c6e4:	mov	x0, x20
  42c6e8:	mov	w2, #0x1                   	// #1
  42c6ec:	bl	42bfa0 <nftw@plt+0x29420>
  42c6f0:	mov	w3, w0
  42c6f4:	cmp	w0, #0x1
  42c6f8:	b.ls	42c708 <nftw@plt+0x29b88>  // b.plast
  42c6fc:	ldr	x0, [sp, #56]
  42c700:	ldrb	w0, [x0, #5]
  42c704:	cbz	w0, 42c770 <nftw@plt+0x29bf0>
  42c708:	ldr	x4, [sp, #48]
  42c70c:	mov	w22, #0x6fffffff            	// #1879048191
  42c710:	cbz	x4, 42c768 <nftw@plt+0x29be8>
  42c714:	ldr	w5, [x4]
  42c718:	mov	w1, w19
  42c71c:	add	x2, sp, #0x30
  42c720:	mov	x0, x20
  42c724:	cmp	w5, w22
  42c728:	b.ls	42c768 <nftw@plt+0x29be8>  // b.plast
  42c72c:	cmp	w3, #0x1
  42c730:	b.ls	42c740 <nftw@plt+0x29bc0>  // b.plast
  42c734:	ldr	x3, [sp, #56]
  42c738:	ldrb	w3, [x3, #5]
  42c73c:	cbz	w3, 42c768 <nftw@plt+0x29be8>
  42c740:	bl	42c5d0 <nftw@plt+0x29a50>
  42c744:	mov	w1, w0
  42c748:	add	x3, sp, #0x38
  42c74c:	mov	w19, w0
  42c750:	mov	w2, #0x1                   	// #1
  42c754:	mov	x0, x20
  42c758:	bl	42bfa0 <nftw@plt+0x29420>
  42c75c:	mov	w3, w0
  42c760:	ldr	x4, [sp, #48]
  42c764:	cbnz	x4, 42c714 <nftw@plt+0x29b94>
  42c768:	cbz	x21, 42c770 <nftw@plt+0x29bf0>
  42c76c:	str	x4, [x21]
  42c770:	mov	w0, w19
  42c774:	ldp	x19, x20, [sp, #16]
  42c778:	ldp	x21, x22, [sp, #32]
  42c77c:	ldp	x29, x30, [sp], #64
  42c780:	ret
  42c784:	nop
  42c788:	stp	xzr, xzr, [x8]
  42c78c:	stp	xzr, xzr, [x8, #16]
  42c790:	tbz	w2, #31, 42c7b4 <nftw@plt+0x29c34>
  42c794:	and	w2, w2, #0x7fffffff
  42c798:	mov	w4, #0x18                  	// #24
  42c79c:	ldr	x3, [x0, #104]
  42c7a0:	umull	x2, w2, w4
  42c7a4:	add	x4, x3, x2
  42c7a8:	ldr	w2, [x3, x2]
  42c7ac:	ldr	x3, [x4, #16]
  42c7b0:	str	x3, [x8, #16]
  42c7b4:	cmp	w2, #0x1
  42c7b8:	b.ls	42c86c <nftw@plt+0x29cec>  // b.plast
  42c7bc:	stp	x29, x30, [sp, #-16]!
  42c7c0:	mov	x29, sp
  42c7c4:	cbz	x1, 42c870 <nftw@plt+0x29cf0>
  42c7c8:	tbnz	w2, #31, 42c7f0 <nftw@plt+0x29c70>
  42c7cc:	mov	w0, #0x6fffffff            	// #1879048191
  42c7d0:	cmp	w2, w0
  42c7d4:	b.ls	42c818 <nftw@plt+0x29c98>  // b.plast
  42c7d8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c7dc:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c7e0:	add	x2, x2, #0xb8
  42c7e4:	add	x0, x0, #0x80
  42c7e8:	mov	w1, #0x6c5                 	// #1733
  42c7ec:	bl	402bf0 <nftw@plt+0x70>
  42c7f0:	and	w3, w2, #0x7fffffff
  42c7f4:	mov	w4, #0x18                  	// #24
  42c7f8:	ldr	x0, [x0, #104]
  42c7fc:	mov	w5, #0x90000000            	// #-1879048192
  42c800:	umull	x3, w3, w4
  42c804:	mov	w4, #0xfffffff             	// #268435455
  42c808:	ldr	w0, [x0, x3]
  42c80c:	add	w0, w0, w5
  42c810:	cmp	w0, w4
  42c814:	b.ls	42c7d8 <nftw@plt+0x29c58>  // b.plast
  42c818:	ldrb	w3, [x1, #6]
  42c81c:	mov	w0, #0x1                   	// #1
  42c820:	ldr	w4, [x1]
  42c824:	ldrb	w5, [x1, #7]
  42c828:	ldrb	w6, [x1, #5]
  42c82c:	sub	w2, w2, w4
  42c830:	lsl	w0, w0, w3
  42c834:	sub	w0, w0, #0x1
  42c838:	ldr	w4, [x1, #16]
  42c83c:	and	w0, w0, w2
  42c840:	cmp	w6, #0x0
  42c844:	lsr	w2, w2, w3
  42c848:	ldr	x3, [x1, #8]
  42c84c:	add	w2, w2, w4
  42c850:	cset	w1, ne  // ne = any
  42c854:	lsr	w0, w0, w5
  42c858:	str	x3, [x8]
  42c85c:	stp	w2, w0, [x8, #8]
  42c860:	strb	w1, [x8, #24]
  42c864:	ldp	x29, x30, [sp], #16
  42c868:	ret
  42c86c:	ret
  42c870:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c874:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c878:	add	x2, x2, #0xb8
  42c87c:	add	x0, x0, #0x80
  42c880:	mov	w1, #0x6bd                 	// #1725
  42c884:	bl	402bf0 <nftw@plt+0x70>
  42c888:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c88c:	add	x4, x4, #0x250
  42c890:	stp	x29, x30, [sp, #-96]!
  42c894:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  42c898:	mov	x29, sp
  42c89c:	ldp	x6, x7, [x4]
  42c8a0:	stp	x19, x20, [sp, #16]
  42c8a4:	mov	x19, x0
  42c8a8:	ldr	x0, [x5, #1392]
  42c8ac:	stp	x6, x7, [sp, #56]
  42c8b0:	cmp	x19, #0x0
  42c8b4:	ldp	x6, x7, [x4, #16]
  42c8b8:	stp	x21, x22, [sp, #32]
  42c8bc:	csel	x19, x0, x19, eq  // eq = none
  42c8c0:	ldr	x5, [x4, #32]
  42c8c4:	stp	x6, x7, [sp, #72]
  42c8c8:	mov	x21, x1
  42c8cc:	str	x5, [sp, #88]
  42c8d0:	mov	w0, w2
  42c8d4:	tst	w3, #0xff
  42c8d8:	b.ne	42c9a8 <nftw@plt+0x29e28>  // b.any
  42c8dc:	mov	w1, #0x18                  	// #24
  42c8e0:	smull	x1, w2, w1
  42c8e4:	ldr	x2, [x21]
  42c8e8:	add	x22, x2, x1
  42c8ec:	ldr	w4, [x2, x1]
  42c8f0:	ldrb	w1, [x22, #4]
  42c8f4:	cmp	w1, #0x4
  42c8f8:	b.ls	42ca08 <nftw@plt+0x29e88>  // b.plast
  42c8fc:	adrp	x5, 45b000 <_obstack_memory_used@@Base+0x115a0>
  42c900:	add	x5, x5, #0xac0
  42c904:	ldrb	w2, [x22, #5]
  42c908:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c90c:	adrp	x6, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c910:	add	x1, x1, #0xe0
  42c914:	cmp	w2, #0x0
  42c918:	add	x6, x6, #0xd8
  42c91c:	mov	w2, w0
  42c920:	csel	x6, x6, x1, ne  // ne = any
  42c924:	mov	x3, x22
  42c928:	mov	x0, x19
  42c92c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c930:	add	x1, x1, #0xe8
  42c934:	bl	402b30 <fprintf@plt>
  42c938:	ldr	w1, [x22, #20]
  42c93c:	mov	x0, x21
  42c940:	bl	42ac98 <nftw@plt+0x28118>
  42c944:	mov	x20, x0
  42c948:	ldr	w3, [x22, #16]
  42c94c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c950:	ldr	x2, [x22, #8]
  42c954:	mov	x0, x19
  42c958:	add	x1, x1, #0x148
  42c95c:	bl	402b30 <fprintf@plt>
  42c960:	cbz	x20, 42ca18 <nftw@plt+0x29e98>
  42c964:	ldr	x2, [x21]
  42c968:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42c96c:	movk	x0, #0xaaab
  42c970:	sub	x2, x20, x2
  42c974:	ldr	x3, [x20, #8]
  42c978:	asr	x2, x2, #3
  42c97c:	mul	w2, w2, w0
  42c980:	mov	x0, x19
  42c984:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c988:	add	x1, x1, #0x130
  42c98c:	bl	402b30 <fprintf@plt>
  42c990:	mov	x1, x19
  42c994:	mov	w0, #0xa                   	// #10
  42c998:	ldp	x19, x20, [sp, #16]
  42c99c:	ldp	x21, x22, [sp, #32]
  42c9a0:	ldp	x29, x30, [sp], #96
  42c9a4:	b	4025e0 <fputc@plt>
  42c9a8:	ldr	x1, [x1, #24]
  42c9ac:	sbfiz	x0, x2, #5, #32
  42c9b0:	adrp	x6, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c9b4:	add	x6, x6, #0xe0
  42c9b8:	add	x20, x1, x0
  42c9bc:	ldr	w4, [x1, x0]
  42c9c0:	mov	x3, x20
  42c9c4:	mov	x0, x19
  42c9c8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c9cc:	add	x1, x1, #0xe8
  42c9d0:	bl	402b30 <fprintf@plt>
  42c9d4:	ldr	x2, [x20, #8]
  42c9d8:	mov	x0, x19
  42c9dc:	ldr	w3, [x20, #4]
  42c9e0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42c9e4:	add	x1, x1, #0x118
  42c9e8:	ldr	x2, [x2]
  42c9ec:	bl	402b30 <fprintf@plt>
  42c9f0:	mov	x1, x19
  42c9f4:	mov	w0, #0xa                   	// #10
  42c9f8:	ldp	x19, x20, [sp, #16]
  42c9fc:	ldp	x21, x22, [sp, #32]
  42ca00:	ldp	x29, x30, [sp], #96
  42ca04:	b	4025e0 <fputc@plt>
  42ca08:	add	x2, sp, #0x60
  42ca0c:	add	x1, x2, w1, uxtb #3
  42ca10:	ldur	x5, [x1, #-40]
  42ca14:	b	42c904 <nftw@plt+0x29d84>
  42ca18:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42ca1c:	mov	w2, #0xffffffff            	// #-1
  42ca20:	add	x3, x3, #0xd0
  42ca24:	b	42c980 <nftw@plt+0x29e00>
  42ca28:	sub	sp, sp, #0x80
  42ca2c:	stp	x29, x30, [sp, #32]
  42ca30:	add	x29, sp, #0x20
  42ca34:	stp	x19, x20, [sp, #48]
  42ca38:	mov	x20, x0
  42ca3c:	mov	w19, w1
  42ca40:	str	x21, [sp, #64]
  42ca44:	mov	x21, x2
  42ca48:	tbnz	w1, #31, 42ca64 <nftw@plt+0x29ee4>
  42ca4c:	cbnz	w19, 42ca7c <nftw@plt+0x29efc>
  42ca50:	ldp	x29, x30, [sp, #32]
  42ca54:	ldp	x19, x20, [sp, #48]
  42ca58:	ldr	x21, [sp, #64]
  42ca5c:	add	sp, sp, #0x80
  42ca60:	ret
  42ca64:	and	w19, w1, #0x7fffffff
  42ca68:	mov	w1, #0x18                  	// #24
  42ca6c:	ldr	x0, [x0, #104]
  42ca70:	umull	x19, w19, w1
  42ca74:	ldr	w19, [x0, x19]
  42ca78:	cbz	w19, 42ca50 <nftw@plt+0x29ed0>
  42ca7c:	add	x3, sp, #0x78
  42ca80:	mov	w1, w19
  42ca84:	mov	x0, x20
  42ca88:	mov	w2, #0x2                   	// #2
  42ca8c:	bl	42bfa0 <nftw@plt+0x29420>
  42ca90:	mov	w9, w0
  42ca94:	ldr	x7, [sp, #120]
  42ca98:	cbz	x7, 42cb20 <nftw@plt+0x29fa0>
  42ca9c:	ldrb	w4, [x7, #6]
  42caa0:	mov	w3, #0x1                   	// #1
  42caa4:	ldrb	w6, [x7, #5]
  42caa8:	ldr	w1, [x7]
  42caac:	ldrb	w2, [x7, #7]
  42cab0:	cmp	w6, #0x0
  42cab4:	sub	w1, w9, w1
  42cab8:	lsl	w5, w3, w4
  42cabc:	sub	w5, w5, #0x1
  42cac0:	cset	w6, ne  // ne = any
  42cac4:	and	w5, w5, w1
  42cac8:	cmp	w19, w0
  42cacc:	ldr	w0, [x7, #16]
  42cad0:	lsr	w1, w1, w4
  42cad4:	lsr	w5, w5, w2
  42cad8:	add	w4, w1, w0
  42cadc:	ldr	x2, [x7, #8]
  42cae0:	b.eq	42cb40 <nftw@plt+0x29fc0>  // b.none
  42cae4:	mov	w1, w3
  42cae8:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42caec:	add	x3, x3, #0x160
  42caf0:	str	w1, [sp]
  42caf4:	mov	x0, x21
  42caf8:	str	w19, [sp, #8]
  42cafc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42cb00:	str	w9, [sp, #16]
  42cb04:	add	x1, x1, #0x168
  42cb08:	bl	402b30 <fprintf@plt>
  42cb0c:	ldp	x29, x30, [sp, #32]
  42cb10:	ldp	x19, x20, [sp, #48]
  42cb14:	ldr	x21, [sp, #64]
  42cb18:	add	sp, sp, #0x80
  42cb1c:	ret
  42cb20:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x105a0>
  42cb24:	add	x3, x3, #0xbd0
  42cb28:	mov	w1, #0xffffffff            	// #-1
  42cb2c:	mov	x2, x3
  42cb30:	mov	w6, w1
  42cb34:	mov	w5, w1
  42cb38:	mov	w4, w1
  42cb3c:	b	42caf0 <nftw@plt+0x29f70>
  42cb40:	ldr	w1, [x7, #20]
  42cb44:	mov	x0, x20
  42cb48:	str	x2, [sp, #88]
  42cb4c:	stp	w4, w5, [sp, #100]
  42cb50:	str	w6, [sp, #108]
  42cb54:	bl	42ac98 <nftw@plt+0x28118>
  42cb58:	ldp	w4, w5, [sp, #100]
  42cb5c:	ldr	w6, [sp, #108]
  42cb60:	ldr	x2, [sp, #88]
  42cb64:	cbz	x0, 42cb78 <nftw@plt+0x29ff8>
  42cb68:	mov	w1, #0x0                   	// #0
  42cb6c:	ldr	x3, [x0, #8]
  42cb70:	ldr	x7, [sp, #120]
  42cb74:	b	42caf0 <nftw@plt+0x29f70>
  42cb78:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42cb7c:	mov	w1, #0x0                   	// #0
  42cb80:	add	x3, x3, #0x158
  42cb84:	ldr	x7, [sp, #120]
  42cb88:	b	42caf0 <nftw@plt+0x29f70>
  42cb8c:	nop
  42cb90:	cbz	x0, 42cc5c <nftw@plt+0x2a0dc>
  42cb94:	stp	x29, x30, [sp, #-64]!
  42cb98:	mov	x29, sp
  42cb9c:	stp	x19, x20, [sp, #16]
  42cba0:	ldr	w19, [x0, #12]
  42cba4:	stp	x23, x24, [sp, #48]
  42cba8:	mov	x23, x0
  42cbac:	cbz	w19, 42cc04 <nftw@plt+0x2a084>
  42cbb0:	subs	w19, w19, #0x1
  42cbb4:	b.mi	42cc04 <nftw@plt+0x2a084>  // b.first
  42cbb8:	mov	w20, #0x18                  	// #24
  42cbbc:	mov	x24, x1
  42cbc0:	stp	x21, x22, [sp, #32]
  42cbc4:	mov	x22, x2
  42cbc8:	smull	x20, w19, w20
  42cbcc:	sxtw	x21, w19
  42cbd0:	ldr	x3, [x23]
  42cbd4:	mov	x1, x24
  42cbd8:	add	x3, x3, x20
  42cbdc:	sub	x20, x20, #0x18
  42cbe0:	ldr	x0, [x3, #8]
  42cbe4:	cbz	x0, 42cbf0 <nftw@plt+0x2a070>
  42cbe8:	bl	448380 <nftw@plt+0x45800>
  42cbec:	cbz	w0, 42cc18 <nftw@plt+0x2a098>
  42cbf0:	sub	w19, w19, #0x1
  42cbf4:	sub	x21, x21, #0x1
  42cbf8:	cmn	w19, #0x1
  42cbfc:	b.ne	42cbd0 <nftw@plt+0x2a050>  // b.any
  42cc00:	ldp	x21, x22, [sp, #32]
  42cc04:	mov	w0, #0x0                   	// #0
  42cc08:	ldp	x19, x20, [sp, #16]
  42cc0c:	ldp	x23, x24, [sp, #48]
  42cc10:	ldp	x29, x30, [sp], #64
  42cc14:	ret
  42cc18:	ldr	w0, [x23, #12]
  42cc1c:	sub	w0, w0, #0x1
  42cc20:	cmp	w0, w19
  42cc24:	b.eq	42cc64 <nftw@plt+0x2a0e4>  // b.none
  42cc28:	add	x21, x21, #0x1
  42cc2c:	ldr	x0, [x23]
  42cc30:	add	x21, x21, x21, lsl #1
  42cc34:	lsl	x21, x21, #3
  42cc38:	ldr	w1, [x0, x21]
  42cc3c:	sub	w1, w1, #0x1
  42cc40:	str	w1, [x22]
  42cc44:	mov	w0, #0x1                   	// #1
  42cc48:	ldp	x19, x20, [sp, #16]
  42cc4c:	ldp	x21, x22, [sp, #32]
  42cc50:	ldp	x23, x24, [sp, #48]
  42cc54:	ldp	x29, x30, [sp], #64
  42cc58:	ret
  42cc5c:	mov	w0, #0x0                   	// #0
  42cc60:	ret
  42cc64:	ldr	w1, [x23, #56]
  42cc68:	b	42cc40 <nftw@plt+0x2a0c0>
  42cc6c:	nop
  42cc70:	ldp	w13, w16, [x0, #8]
  42cc74:	mov	w2, #0x18                  	// #24
  42cc78:	ldp	w14, w12, [x0, #32]
  42cc7c:	ldr	x9, [x0, #24]
  42cc80:	umull	x17, w13, w2
  42cc84:	umull	x15, w16, w2
  42cc88:	lsl	x14, x14, #5
  42cc8c:	cbz	x9, 42cd44 <nftw@plt+0x2a1c4>
  42cc90:	sub	w11, w12, #0x1
  42cc94:	mov	x3, #0x0                   	// #0
  42cc98:	mov	x10, #0x0                   	// #0
  42cc9c:	sbfiz	x11, x11, #5, #32
  42cca0:	add	x11, x9, x11
  42cca4:	cmp	x11, x9
  42cca8:	b.cc	42ccf8 <nftw@plt+0x2a178>  // b.lo, b.ul, b.last
  42ccac:	nop
  42ccb0:	ldr	w8, [x9, #4]
  42ccb4:	lsl	w8, w8, #1
  42ccb8:	add	x10, x10, w8, uxtw #2
  42ccbc:	cbz	w8, 42ccec <nftw@plt+0x2a16c>
  42ccc0:	ldr	x4, [x9, #16]
  42ccc4:	mov	w2, #0x0                   	// #0
  42ccc8:	add	w6, w2, #0x1
  42cccc:	ldr	w7, [x4, w2, uxtw #2]
  42ccd0:	add	x5, x3, #0x4
  42ccd4:	add	w2, w2, #0x2
  42ccd8:	ldr	w6, [x4, x6, lsl #2]
  42ccdc:	cmp	w7, w6
  42cce0:	csel	x3, x5, x3, eq  // eq = none
  42cce4:	cmp	w8, w2
  42cce8:	b.hi	42ccc8 <nftw@plt+0x2a148>  // b.pmore
  42ccec:	add	x9, x9, #0x20
  42ccf0:	cmp	x11, x9
  42ccf4:	b.cs	42ccb0 <nftw@plt+0x2a130>  // b.hs, b.nlast
  42ccf8:	ldp	w5, w4, [x0, #96]
  42ccfc:	mov	w7, #0x18                  	// #24
  42cd00:	adrp	x6, 48d000 <__environ@@GLIBC_2.17+0xa68>
  42cd04:	adrp	x8, 48d000 <__environ@@GLIBC_2.17+0xa68>
  42cd08:	mov	w2, w12
  42cd0c:	mov	w13, w13
  42cd10:	ldr	w8, [x8, #2412]
  42cd14:	umull	x4, w4, w7
  42cd18:	ldr	w7, [x6, #2408]
  42cd1c:	mov	w0, w16
  42cd20:	lsl	x6, x2, #5
  42cd24:	stp	x13, x0, [x1]
  42cd28:	stp	x17, x15, [x1, #16]
  42cd2c:	stp	x8, x7, [x1, #32]
  42cd30:	stp	x2, x14, [x1, #48]
  42cd34:	stp	x6, x10, [x1, #64]
  42cd38:	stp	x3, x4, [x1, #80]
  42cd3c:	str	x5, [x1, #96]
  42cd40:	ret
  42cd44:	mov	x3, #0x0                   	// #0
  42cd48:	mov	x10, #0x0                   	// #0
  42cd4c:	b	42ccf8 <nftw@plt+0x2a178>
  42cd50:	cbz	x1, 42ceb8 <nftw@plt+0x2a338>
  42cd54:	stp	x29, x30, [sp, #-64]!
  42cd58:	mov	x29, sp
  42cd5c:	stp	x19, x20, [sp, #16]
  42cd60:	mov	x19, x1
  42cd64:	mov	x20, x0
  42cd68:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  42cd6c:	str	x23, [sp, #48]
  42cd70:	mov	w23, w2
  42cd74:	ldr	w2, [x19, #12]
  42cd78:	ldr	x0, [x0, #1392]
  42cd7c:	cmp	x20, #0x0
  42cd80:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42cd84:	add	x1, x1, #0x1a0
  42cd88:	csel	x20, x0, x20, eq  // eq = none
  42cd8c:	stp	x21, x22, [sp, #32]
  42cd90:	mov	x0, x20
  42cd94:	mov	w22, w3
  42cd98:	bl	402b30 <fprintf@plt>
  42cd9c:	ldr	w2, [x19, #36]
  42cda0:	mov	x0, x20
  42cda4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42cda8:	add	x1, x1, #0x1c0
  42cdac:	bl	402b30 <fprintf@plt>
  42cdb0:	ldr	w2, [x19, #48]
  42cdb4:	mov	x0, x20
  42cdb8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42cdbc:	add	x1, x1, #0x1e0
  42cdc0:	bl	402b30 <fprintf@plt>
  42cdc4:	ldr	w2, [x19, #56]
  42cdc8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42cdcc:	mov	x0, x20
  42cdd0:	add	x1, x1, #0x200
  42cdd4:	bl	402b30 <fprintf@plt>
  42cdd8:	cbnz	w23, 42cdf4 <nftw@plt+0x2a274>
  42cddc:	cbnz	w22, 42ce50 <nftw@plt+0x2a2d0>
  42cde0:	ldp	x19, x20, [sp, #16]
  42cde4:	ldp	x21, x22, [sp, #32]
  42cde8:	ldr	x23, [sp, #48]
  42cdec:	ldp	x29, x30, [sp], #64
  42cdf0:	ret
  42cdf4:	mov	x3, x20
  42cdf8:	mov	w21, #0x0                   	// #0
  42cdfc:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42ce00:	mov	x2, #0x14                  	// #20
  42ce04:	mov	x1, #0x1                   	// #1
  42ce08:	add	x0, x0, #0x220
  42ce0c:	bl	402950 <fwrite@plt>
  42ce10:	b	42ce20 <nftw@plt+0x2a2a0>
  42ce14:	bl	42c888 <nftw@plt+0x29d08>
  42ce18:	cmp	w23, w21
  42ce1c:	b.eq	42ce40 <nftw@plt+0x2a2c0>  // b.none
  42ce20:	ldr	w4, [x19, #12]
  42ce24:	mov	w2, w21
  42ce28:	mov	x1, x19
  42ce2c:	mov	x0, x20
  42ce30:	cmp	w4, w21
  42ce34:	mov	w3, #0x0                   	// #0
  42ce38:	add	w21, w21, #0x1
  42ce3c:	b.hi	42ce14 <nftw@plt+0x2a294>  // b.pmore
  42ce40:	mov	x1, x20
  42ce44:	mov	w0, #0xa                   	// #10
  42ce48:	bl	4025e0 <fputc@plt>
  42ce4c:	cbz	w22, 42cde0 <nftw@plt+0x2a260>
  42ce50:	mov	x3, x20
  42ce54:	mov	w21, #0x0                   	// #0
  42ce58:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42ce5c:	mov	x2, #0x11                  	// #17
  42ce60:	mov	x1, #0x1                   	// #1
  42ce64:	add	x0, x0, #0x238
  42ce68:	bl	402950 <fwrite@plt>
  42ce6c:	b	42ce7c <nftw@plt+0x2a2fc>
  42ce70:	bl	42c888 <nftw@plt+0x29d08>
  42ce74:	cmp	w22, w21
  42ce78:	b.eq	42ce9c <nftw@plt+0x2a31c>  // b.none
  42ce7c:	ldr	w4, [x19, #36]
  42ce80:	mov	w2, w21
  42ce84:	mov	x1, x19
  42ce88:	mov	x0, x20
  42ce8c:	cmp	w4, w21
  42ce90:	mov	w3, #0x1                   	// #1
  42ce94:	add	w21, w21, #0x1
  42ce98:	b.hi	42ce70 <nftw@plt+0x2a2f0>  // b.pmore
  42ce9c:	mov	x1, x20
  42cea0:	mov	w0, #0xa                   	// #10
  42cea4:	ldp	x19, x20, [sp, #16]
  42cea8:	ldp	x21, x22, [sp, #32]
  42ceac:	ldr	x23, [sp, #48]
  42ceb0:	ldp	x29, x30, [sp], #64
  42ceb4:	b	4025e0 <fputc@plt>
  42ceb8:	ret
  42cebc:	nop
  42cec0:	stp	x29, x30, [sp, #-64]!
  42cec4:	mov	x29, sp
  42cec8:	stp	x21, x22, [sp, #32]
  42cecc:	mov	x21, x0
  42ced0:	mov	x22, x0
  42ced4:	ldr	w3, [x21, #120]!
  42ced8:	cbz	w3, 42cf48 <nftw@plt+0x2a3c8>
  42cedc:	stp	x19, x20, [sp, #16]
  42cee0:	mov	w19, #0x0                   	// #0
  42cee4:	str	x23, [sp, #48]
  42cee8:	mov	x23, #0xfffffffffffffff0    	// #-16
  42ceec:	b	42cf24 <nftw@plt+0x2a3a4>
  42cef0:	ldr	x1, [x21, #32]
  42cef4:	add	x1, x1, x4
  42cef8:	ldr	x20, [x1]
  42cefc:	add	w19, w19, #0x1
  42cf00:	cbz	x20, 42cf1c <nftw@plt+0x2a39c>
  42cf04:	ldr	x0, [x20, #8]
  42cf08:	bl	402910 <free@plt>
  42cf0c:	mov	x0, x20
  42cf10:	mov	x1, #0x18                  	// #24
  42cf14:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  42cf18:	ldr	w3, [x22, #120]
  42cf1c:	cmp	w3, w19
  42cf20:	b.ls	42cf40 <nftw@plt+0x2a3c0>  // b.plast
  42cf24:	add	x4, x23, w19, sxtw #3
  42cf28:	cmp	w19, #0x1
  42cf2c:	sxtw	x2, w19
  42cf30:	b.gt	42cef0 <nftw@plt+0x2a370>
  42cf34:	add	x1, x2, #0x1
  42cf38:	add	x1, x21, x1, lsl #3
  42cf3c:	b	42cef8 <nftw@plt+0x2a378>
  42cf40:	ldp	x19, x20, [sp, #16]
  42cf44:	ldr	x23, [sp, #48]
  42cf48:	ldr	x0, [x21, #32]
  42cf4c:	bl	402910 <free@plt>
  42cf50:	ldr	x0, [x22, #72]
  42cf54:	ldp	x21, x22, [sp, #32]
  42cf58:	ldp	x29, x30, [sp], #64
  42cf5c:	b	402910 <free@plt>
  42cf60:	cmp	w1, #0x2
  42cf64:	sbfiz	x1, x1, #4, #32
  42cf68:	b.gt	42cf7c <nftw@plt+0x2a3fc>
  42cf6c:	add	x0, x0, x1
  42cf70:	add	x0, x0, #0x10
  42cf74:	ldr	w0, [x0]
  42cf78:	ret
  42cf7c:	ldr	x0, [x0, #72]
  42cf80:	sub	x1, x1, #0x30
  42cf84:	add	x0, x0, x1
  42cf88:	ldr	w0, [x0]
  42cf8c:	ret
  42cf90:	cmp	w1, #0x2
  42cf94:	sbfiz	x1, x1, #4, #32
  42cf98:	b.gt	42cfa8 <nftw@plt+0x2a428>
  42cf9c:	add	x0, x0, x1
  42cfa0:	add	x0, x0, #0x10
  42cfa4:	ret
  42cfa8:	ldr	x0, [x0, #72]
  42cfac:	sub	x1, x1, #0x30
  42cfb0:	add	x0, x0, x1
  42cfb4:	ret
  42cfb8:	b	42cf90 <nftw@plt+0x2a410>
  42cfbc:	nop
  42cfc0:	stp	x29, x30, [sp, #-80]!
  42cfc4:	mov	x29, sp
  42cfc8:	stp	x19, x20, [sp, #16]
  42cfcc:	mov	x20, x8
  42cfd0:	mov	x19, x0
  42cfd4:	cbnz	w1, 42d008 <nftw@plt+0x2a488>
  42cfd8:	ldrb	w0, [x0, #84]
  42cfdc:	str	x21, [sp, #32]
  42cfe0:	add	x21, x19, #0x58
  42cfe4:	cbz	w0, 42d048 <nftw@plt+0x2a4c8>
  42cfe8:	ldp	x0, x1, [x21, #16]
  42cfec:	stp	x0, x1, [x20, #16]
  42cff0:	ldp	x0, x1, [x19, #88]
  42cff4:	stp	x0, x1, [x20]
  42cff8:	ldp	x19, x20, [sp, #16]
  42cffc:	ldr	x21, [sp, #32]
  42d000:	ldp	x29, x30, [sp], #80
  42d004:	ret
  42d008:	cmp	w1, #0x2
  42d00c:	sbfiz	x0, x1, #4, #32
  42d010:	b.le	42d03c <nftw@plt+0x2a4bc>
  42d014:	ldr	x19, [x19, #72]
  42d018:	sub	x0, x0, #0x30
  42d01c:	add	x19, x19, x0
  42d020:	ldr	w0, [x19]
  42d024:	mov	x8, x20
  42d028:	mov	w1, #0x0                   	// #0
  42d02c:	bl	414628 <nftw@plt+0x11aa8>
  42d030:	ldp	x19, x20, [sp, #16]
  42d034:	ldp	x29, x30, [sp], #80
  42d038:	ret
  42d03c:	add	x19, x19, x0
  42d040:	add	x19, x19, #0x10
  42d044:	b	42d020 <nftw@plt+0x2a4a0>
  42d048:	ldr	w0, [x19, #16]
  42d04c:	add	x8, sp, #0x30
  42d050:	bl	414628 <nftw@plt+0x11aa8>
  42d054:	ldp	x2, x3, [sp, #48]
  42d058:	stp	x2, x3, [x19, #88]
  42d05c:	ldr	w0, [x19, #80]
  42d060:	ldp	x2, x3, [sp, #64]
  42d064:	stp	x2, x3, [x21, #16]
  42d068:	cbz	w0, 42d070 <nftw@plt+0x2a4f0>
  42d06c:	str	w0, [x19, #100]
  42d070:	mov	w0, #0x1                   	// #1
  42d074:	strb	w0, [x19, #84]
  42d078:	b	42cfe8 <nftw@plt+0x2a468>
  42d07c:	nop
  42d080:	str	w1, [x0, #80]
  42d084:	strb	wzr, [x0, #84]
  42d088:	ret
  42d08c:	nop
  42d090:	ldr	w1, [x0, #120]
  42d094:	cbz	w1, 42d0d0 <nftw@plt+0x2a550>
  42d098:	sub	w1, w1, #0x1
  42d09c:	cmp	w1, #0x1
  42d0a0:	sxtw	x2, w1
  42d0a4:	b.le	42d0c0 <nftw@plt+0x2a540>
  42d0a8:	ldr	x0, [x0, #152]
  42d0ac:	mov	x2, #0xfffffffffffffff0    	// #-16
  42d0b0:	add	x1, x2, w1, sxtw #3
  42d0b4:	add	x1, x0, x1
  42d0b8:	ldr	x0, [x1]
  42d0bc:	ret
  42d0c0:	add	x1, x0, x2, lsl #3
  42d0c4:	add	x1, x1, #0x80
  42d0c8:	ldr	x0, [x1]
  42d0cc:	b	42d0bc <nftw@plt+0x2a53c>
  42d0d0:	mov	x0, #0x0                   	// #0
  42d0d4:	ret
  42d0d8:	stp	x29, x30, [sp, #-64]!
  42d0dc:	mov	w1, #0x1                   	// #1
  42d0e0:	mov	x29, sp
  42d0e4:	stp	x21, x22, [sp, #32]
  42d0e8:	mov	x21, x0
  42d0ec:	mov	x22, x0
  42d0f0:	strb	w1, [x0, #160]
  42d0f4:	ldr	w3, [x21, #120]!
  42d0f8:	cbz	w3, 42d168 <nftw@plt+0x2a5e8>
  42d0fc:	stp	x19, x20, [sp, #16]
  42d100:	mov	w19, #0x0                   	// #0
  42d104:	str	x23, [sp, #48]
  42d108:	mov	x23, #0xfffffffffffffff0    	// #-16
  42d10c:	b	42d144 <nftw@plt+0x2a5c4>
  42d110:	ldr	x1, [x21, #32]
  42d114:	add	x1, x1, x4
  42d118:	ldr	x20, [x1]
  42d11c:	add	w19, w19, #0x1
  42d120:	cbz	x20, 42d13c <nftw@plt+0x2a5bc>
  42d124:	ldr	x0, [x20, #8]
  42d128:	bl	402910 <free@plt>
  42d12c:	mov	x0, x20
  42d130:	mov	x1, #0x18                  	// #24
  42d134:	bl	44a118 <_obstack_memory_used@@Base+0x6b8>
  42d138:	ldr	w3, [x22, #120]
  42d13c:	cmp	w3, w19
  42d140:	b.ls	42d160 <nftw@plt+0x2a5e0>  // b.plast
  42d144:	add	x4, x23, w19, sxtw #3
  42d148:	cmp	w19, #0x1
  42d14c:	sxtw	x2, w19
  42d150:	b.gt	42d110 <nftw@plt+0x2a590>
  42d154:	add	x1, x2, #0x1
  42d158:	add	x1, x21, x1, lsl #3
  42d15c:	b	42d118 <nftw@plt+0x2a598>
  42d160:	ldp	x19, x20, [sp, #16]
  42d164:	ldr	x23, [sp, #48]
  42d168:	str	wzr, [x22, #120]
  42d16c:	ldp	x21, x22, [sp, #32]
  42d170:	ldp	x29, x30, [sp], #64
  42d174:	ret
  42d178:	ldrb	w2, [x0, #160]
  42d17c:	cbnz	w2, 42d18c <nftw@plt+0x2a60c>
  42d180:	mov	w3, #0x60000000            	// #1610612736
  42d184:	cmp	w1, w3
  42d188:	b.hi	42d194 <nftw@plt+0x2a614>  // b.pmore
  42d18c:	mov	w0, w2
  42d190:	ret
  42d194:	stp	x29, x30, [sp, #-16]!
  42d198:	mov	x29, sp
  42d19c:	bl	42d0d8 <nftw@plt+0x2a558>
  42d1a0:	mov	w2, #0x1                   	// #1
  42d1a4:	mov	w0, w2
  42d1a8:	ldp	x29, x30, [sp], #16
  42d1ac:	ret
  42d1b0:	stp	x29, x30, [sp, #-128]!
  42d1b4:	mov	x29, sp
  42d1b8:	stp	x19, x20, [sp, #16]
  42d1bc:	mov	x19, x0
  42d1c0:	ldrb	w0, [x0, #160]
  42d1c4:	cbnz	w0, 42d328 <nftw@plt+0x2a7a8>
  42d1c8:	stp	x21, x22, [sp, #32]
  42d1cc:	mov	w0, #0x60000000            	// #1610612736
  42d1d0:	mov	w22, w1
  42d1d4:	cmp	w1, w0
  42d1d8:	b.hi	42d338 <nftw@plt+0x2a7b8>  // b.pmore
  42d1dc:	mov	w21, w2
  42d1e0:	cmp	w2, w0
  42d1e4:	b.hi	42d338 <nftw@plt+0x2a7b8>  // b.pmore
  42d1e8:	mov	x20, x3
  42d1ec:	add	x8, sp, #0x40
  42d1f0:	mov	w0, w22
  42d1f4:	mov	w1, #0x1                   	// #1
  42d1f8:	stp	x23, x24, [sp, #48]
  42d1fc:	bl	414628 <nftw@plt+0x11aa8>
  42d200:	mov	w0, w21
  42d204:	mov	w1, #0x1                   	// #1
  42d208:	ldr	w23, [sp, #76]
  42d20c:	add	x8, sp, #0x60
  42d210:	bl	414628 <nftw@plt+0x11aa8>
  42d214:	ldr	x1, [sp, #64]
  42d218:	ldr	x0, [sp, #96]
  42d21c:	cmp	x1, x0
  42d220:	b.ne	42d334 <nftw@plt+0x2a7b4>  // b.any
  42d224:	ldr	w1, [sp, #72]
  42d228:	ldr	w0, [sp, #104]
  42d22c:	cmp	w1, w0
  42d230:	b.ne	42d334 <nftw@plt+0x2a7b4>  // b.any
  42d234:	ldr	w0, [sp, #108]
  42d238:	cmp	w0, w23
  42d23c:	b.lt	42d334 <nftw@plt+0x2a7b4>  // b.tstop
  42d240:	mov	x0, x20
  42d244:	mov	w1, #0xa                   	// #10
  42d248:	bl	402940 <strchr@plt>
  42d24c:	cbz	x0, 42d268 <nftw@plt+0x2a6e8>
  42d250:	cmp	w22, w21
  42d254:	b.ne	42d334 <nftw@plt+0x2a7b4>  // b.any
  42d258:	cmp	w23, #0x1
  42d25c:	b.ne	42d334 <nftw@plt+0x2a7b4>  // b.any
  42d260:	ldrb	w0, [x0, #1]
  42d264:	cbnz	w0, 42d334 <nftw@plt+0x2a7b4>
  42d268:	ldr	w0, [x19, #120]
  42d26c:	cbz	w0, 42d388 <nftw@plt+0x2a808>
  42d270:	sub	w0, w0, #0x1
  42d274:	cmp	w0, #0x1
  42d278:	sxtw	x1, w0
  42d27c:	b.le	42d378 <nftw@plt+0x2a7f8>
  42d280:	add	x24, x19, #0x78
  42d284:	mov	x1, #0xfffffffffffffff0    	// #-16
  42d288:	add	x0, x1, w0, sxtw #3
  42d28c:	ldr	x1, [x24, #32]
  42d290:	add	x0, x1, x0
  42d294:	ldr	x0, [x0]
  42d298:	cbz	x0, 42d2c4 <nftw@plt+0x2a744>
  42d29c:	ldr	x2, [x0, #16]
  42d2a0:	cbz	x2, 42d2b8 <nftw@plt+0x2a738>
  42d2a4:	ldr	x1, [x0, #8]
  42d2a8:	add	x1, x1, x2
  42d2ac:	ldurb	w1, [x1, #-1]
  42d2b0:	cmp	w1, #0xa
  42d2b4:	b.eq	42d2c4 <nftw@plt+0x2a744>  // b.none
  42d2b8:	ldr	w1, [x0, #4]
  42d2bc:	cmp	w22, w1
  42d2c0:	b.eq	42d390 <nftw@plt+0x2a810>  // b.none
  42d2c4:	mov	x0, #0x18                  	// #24
  42d2c8:	bl	44a358 <_obstack_memory_used@@Base+0x8f8>
  42d2cc:	mov	x23, x0
  42d2d0:	mov	x0, x20
  42d2d4:	stp	w22, w21, [x23]
  42d2d8:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  42d2dc:	mov	x1, x0
  42d2e0:	str	x1, [x23, #8]
  42d2e4:	mov	x0, x20
  42d2e8:	bl	4024f0 <strlen@plt>
  42d2ec:	str	x0, [x23, #16]
  42d2f0:	ldr	w1, [x19, #120]
  42d2f4:	add	w0, w1, #0x1
  42d2f8:	str	w0, [x19, #120]
  42d2fc:	cmp	w1, #0x1
  42d300:	b.le	42d364 <nftw@plt+0x2a7e4>
  42d304:	ldr	x0, [x24, #32]
  42d308:	sub	w19, w1, #0x2
  42d30c:	cbz	x0, 42d3a8 <nftw@plt+0x2a828>
  42d310:	ldr	w1, [x24, #24]
  42d314:	cmp	w19, w1
  42d318:	b.ge	42d34c <nftw@plt+0x2a7cc>  // b.tcont
  42d31c:	str	x23, [x0, w19, sxtw #3]
  42d320:	ldp	x21, x22, [sp, #32]
  42d324:	ldp	x23, x24, [sp, #48]
  42d328:	ldp	x19, x20, [sp, #16]
  42d32c:	ldp	x29, x30, [sp], #128
  42d330:	ret
  42d334:	ldp	x23, x24, [sp, #48]
  42d338:	mov	x0, x19
  42d33c:	ldp	x19, x20, [sp, #16]
  42d340:	ldp	x21, x22, [sp, #32]
  42d344:	ldp	x29, x30, [sp], #128
  42d348:	b	42d0d8 <nftw@plt+0x2a558>
  42d34c:	lsl	w1, w1, #1
  42d350:	str	w1, [x24, #24]
  42d354:	sbfiz	x1, x1, #3, #32
  42d358:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  42d35c:	str	x0, [x24, #32]
  42d360:	b	42d31c <nftw@plt+0x2a79c>
  42d364:	add	x1, x24, w1, sxtw #3
  42d368:	ldp	x21, x22, [sp, #32]
  42d36c:	str	x23, [x1, #8]
  42d370:	ldp	x23, x24, [sp, #48]
  42d374:	b	42d328 <nftw@plt+0x2a7a8>
  42d378:	add	x0, x1, #0x1
  42d37c:	add	x24, x19, #0x78
  42d380:	add	x0, x24, x0, lsl #3
  42d384:	b	42d294 <nftw@plt+0x2a714>
  42d388:	add	x24, x19, #0x78
  42d38c:	b	42d2c4 <nftw@plt+0x2a744>
  42d390:	mov	x2, x20
  42d394:	mov	w1, w21
  42d398:	bl	42aef0 <nftw@plt+0x28370>
  42d39c:	tst	w0, #0xff
  42d3a0:	b.eq	42d2c4 <nftw@plt+0x2a744>  // b.none
  42d3a4:	b	42d320 <nftw@plt+0x2a7a0>
  42d3a8:	mov	w0, #0x10                  	// #16
  42d3ac:	str	w0, [x24, #24]
  42d3b0:	mov	x0, #0x80                  	// #128
  42d3b4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42d3b8:	str	x0, [x24, #32]
  42d3bc:	b	42d31c <nftw@plt+0x2a79c>
  42d3c0:	stp	x29, x30, [sp, #-16]!
  42d3c4:	mov	x9, x0
  42d3c8:	mov	x10, x2
  42d3cc:	mov	x29, sp
  42d3d0:	ldr	x0, [x0]
  42d3d4:	bl	42bba0 <nftw@plt+0x29020>
  42d3d8:	mov	x1, x0
  42d3dc:	ldp	x29, x30, [sp], #16
  42d3e0:	mov	x3, x10
  42d3e4:	mov	x0, x9
  42d3e8:	mov	w2, w1
  42d3ec:	b	42d1b0 <nftw@plt+0x2a630>
  42d3f0:	mov	x2, x1
  42d3f4:	ldr	w1, [x0, #16]
  42d3f8:	b	42d3c0 <nftw@plt+0x2a840>
  42d3fc:	nop
  42d400:	stp	x29, x30, [sp, #-48]!
  42d404:	mov	x29, sp
  42d408:	stp	x19, x20, [sp, #16]
  42d40c:	mov	x19, x0
  42d410:	ldr	x0, [x0]
  42d414:	str	x21, [sp, #32]
  42d418:	mov	x21, x2
  42d41c:	bl	42bba0 <nftw@plt+0x29020>
  42d420:	lsr	x20, x0, #32
  42d424:	ldr	x0, [x19]
  42d428:	mov	w1, w20
  42d42c:	mov	w2, #0x1                   	// #1
  42d430:	bl	42c0d8 <nftw@plt+0x29558>
  42d434:	cmp	w20, w0
  42d438:	b.eq	42d45c <nftw@plt+0x2a8dc>  // b.none
  42d43c:	mov	w2, w0
  42d440:	mov	x3, x21
  42d444:	mov	x0, x19
  42d448:	mov	w1, w2
  42d44c:	ldp	x19, x20, [sp, #16]
  42d450:	ldr	x21, [sp, #32]
  42d454:	ldp	x29, x30, [sp], #48
  42d458:	b	42d1b0 <nftw@plt+0x2a630>
  42d45c:	mov	x0, x19
  42d460:	ldp	x19, x20, [sp, #16]
  42d464:	ldr	x21, [sp, #32]
  42d468:	ldp	x29, x30, [sp], #48
  42d46c:	b	42d0d8 <nftw@plt+0x2a558>
  42d470:	mov	x2, x1
  42d474:	ldr	w1, [x0, #16]
  42d478:	b	42d400 <nftw@plt+0x2a880>
  42d47c:	nop
  42d480:	stp	x29, x30, [sp, #-48]!
  42d484:	mov	x10, x1
  42d488:	mov	x29, sp
  42d48c:	stp	x19, x20, [sp, #16]
  42d490:	mov	x19, x0
  42d494:	ldr	x0, [x0]
  42d498:	stp	x21, x22, [sp, #32]
  42d49c:	mov	x22, x2
  42d4a0:	bl	42bc98 <nftw@plt+0x29118>
  42d4a4:	mov	w21, w0
  42d4a8:	ldr	x0, [x19]
  42d4ac:	lsr	x1, x10, #32
  42d4b0:	bl	42bc98 <nftw@plt+0x29118>
  42d4b4:	mov	w20, w0
  42d4b8:	mov	w1, w0
  42d4bc:	mov	w2, #0x1                   	// #1
  42d4c0:	ldr	x0, [x19]
  42d4c4:	bl	42c0d8 <nftw@plt+0x29558>
  42d4c8:	cmp	w20, w0
  42d4cc:	b.eq	42d4f0 <nftw@plt+0x2a970>  // b.none
  42d4d0:	mov	w2, w0
  42d4d4:	mov	x3, x22
  42d4d8:	mov	w1, w21
  42d4dc:	mov	x0, x19
  42d4e0:	ldp	x19, x20, [sp, #16]
  42d4e4:	ldp	x21, x22, [sp, #32]
  42d4e8:	ldp	x29, x30, [sp], #48
  42d4ec:	b	42d1b0 <nftw@plt+0x2a630>
  42d4f0:	mov	x0, x19
  42d4f4:	ldp	x19, x20, [sp, #16]
  42d4f8:	ldp	x21, x22, [sp, #32]
  42d4fc:	ldp	x29, x30, [sp], #48
  42d500:	b	42d0d8 <nftw@plt+0x2a558>
  42d504:	nop
  42d508:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  42d50c:	add	x2, x2, #0xbd0
  42d510:	b	42d480 <nftw@plt+0x2a900>
  42d514:	nop
  42d518:	stp	x29, x30, [sp, #-16]!
  42d51c:	mov	x9, x0
  42d520:	mov	x29, sp
  42d524:	ldr	x0, [x0]
  42d528:	bl	42bba0 <nftw@plt+0x29020>
  42d52c:	mov	x1, x0
  42d530:	ldp	x29, x30, [sp], #16
  42d534:	mov	x0, x9
  42d538:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x105a0>
  42d53c:	add	x2, x2, #0xbd0
  42d540:	b	42d480 <nftw@plt+0x2a900>
  42d544:	nop
  42d548:	ldr	w1, [x0, #16]
  42d54c:	b	42d518 <nftw@plt+0x2a998>
  42d550:	stp	x29, x30, [sp, #-16]!
  42d554:	mov	x9, x0
  42d558:	mov	x10, x2
  42d55c:	mov	x29, sp
  42d560:	ldr	x0, [x0]
  42d564:	bl	42bba0 <nftw@plt+0x29020>
  42d568:	mov	x1, x0
  42d56c:	ldp	x29, x30, [sp], #16
  42d570:	mov	x2, x10
  42d574:	mov	x0, x9
  42d578:	b	42d480 <nftw@plt+0x2a900>
  42d57c:	nop
  42d580:	mov	x2, x1
  42d584:	ldr	w1, [x0, #16]
  42d588:	b	42d550 <nftw@plt+0x2a9d0>
  42d58c:	nop
  42d590:	stp	x29, x30, [sp, #-32]!
  42d594:	mov	x29, sp
  42d598:	stp	x19, x20, [sp, #16]
  42d59c:	mov	x19, x0
  42d5a0:	mov	x20, x3
  42d5a4:	mov	x0, x3
  42d5a8:	stp	w1, w2, [x19]
  42d5ac:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  42d5b0:	str	x0, [x19, #8]
  42d5b4:	mov	x0, x20
  42d5b8:	bl	4024f0 <strlen@plt>
  42d5bc:	str	x0, [x19, #16]
  42d5c0:	ldp	x19, x20, [sp, #16]
  42d5c4:	ldp	x29, x30, [sp], #32
  42d5c8:	ret
  42d5cc:	nop
  42d5d0:	stp	x29, x30, [sp, #-112]!
  42d5d4:	mov	x29, sp
  42d5d8:	stp	x19, x20, [sp, #16]
  42d5dc:	mov	x19, x0
  42d5e0:	ldr	w0, [x0]
  42d5e4:	mov	x20, x1
  42d5e8:	add	x8, sp, #0x30
  42d5ec:	mov	w1, #0x1                   	// #1
  42d5f0:	stp	x21, x22, [sp, #32]
  42d5f4:	mov	w21, w2
  42d5f8:	bl	414628 <nftw@plt+0x11aa8>
  42d5fc:	ldr	x22, [sp, #48]
  42d600:	cmp	x22, x20
  42d604:	b.eq	42d61c <nftw@plt+0x2aa9c>  // b.none
  42d608:	mov	w0, #0x0                   	// #0
  42d60c:	ldp	x19, x20, [sp, #16]
  42d610:	ldp	x21, x22, [sp, #32]
  42d614:	ldp	x29, x30, [sp], #112
  42d618:	ret
  42d61c:	ldr	w0, [sp, #56]
  42d620:	cmp	w0, w21
  42d624:	b.gt	42d608 <nftw@plt+0x2aa88>
  42d628:	ldr	w0, [x19, #4]
  42d62c:	add	x8, sp, #0x50
  42d630:	mov	w1, #0x1                   	// #1
  42d634:	bl	414628 <nftw@plt+0x11aa8>
  42d638:	ldr	x0, [sp, #80]
  42d63c:	cmp	x0, x22
  42d640:	b.ne	42d608 <nftw@plt+0x2aa88>  // b.any
  42d644:	ldr	w0, [sp, #88]
  42d648:	ldp	x19, x20, [sp, #16]
  42d64c:	cmp	w0, w21
  42d650:	cset	w0, ge  // ge = tcont
  42d654:	ldp	x21, x22, [sp, #32]
  42d658:	ldp	x29, x30, [sp], #112
  42d65c:	ret
  42d660:	mov	w4, w2
  42d664:	ldr	w2, [x0, #4]
  42d668:	cmp	w2, w1
  42d66c:	b.eq	42d678 <nftw@plt+0x2aaf8>  // b.none
  42d670:	mov	w0, #0x0                   	// #0
  42d674:	ret
  42d678:	mov	x2, x3
  42d67c:	mov	w1, w4
  42d680:	b	42aef0 <nftw@plt+0x28370>
  42d684:	nop
  42d688:	ldr	x1, [x0, #16]
  42d68c:	cbz	x1, 42d6a8 <nftw@plt+0x2ab28>
  42d690:	ldr	x0, [x0, #8]
  42d694:	add	x1, x0, x1
  42d698:	ldurb	w0, [x1, #-1]
  42d69c:	cmp	w0, #0xa
  42d6a0:	cset	w0, eq  // eq = none
  42d6a4:	ret
  42d6a8:	mov	w0, #0x0                   	// #0
  42d6ac:	ret
  42d6b0:	stp	x29, x30, [sp, #-32]!
  42d6b4:	mov	w4, w1
  42d6b8:	add	x0, x0, #0x8
  42d6bc:	mov	x29, sp
  42d6c0:	add	x1, sp, #0x10
  42d6c4:	stp	w4, w2, [sp, #16]
  42d6c8:	str	x3, [sp, #24]
  42d6cc:	bl	42d7a0 <nftw@plt+0x2ac20>
  42d6d0:	ldp	x29, x30, [sp], #32
  42d6d4:	ret
  42d6d8:	stp	x29, x30, [sp, #-32]!
  42d6dc:	mov	x4, x0
  42d6e0:	mov	x6, x1
  42d6e4:	mov	x29, sp
  42d6e8:	str	x6, [x0], #8
  42d6ec:	add	x1, sp, #0x10
  42d6f0:	str	wzr, [x4, #8]
  42d6f4:	str	wzr, [x0, #56]
  42d6f8:	str	xzr, [x0, #64]
  42d6fc:	str	wzr, [x4, #80]
  42d700:	strb	wzr, [x4, #84]
  42d704:	str	wzr, [x4, #120]
  42d708:	str	wzr, [x4, #144]
  42d70c:	str	xzr, [x4, #152]
  42d710:	strh	wzr, [x4, #160]
  42d714:	stp	w2, wzr, [sp, #16]
  42d718:	str	x3, [sp, #24]
  42d71c:	bl	42d7a0 <nftw@plt+0x2ac20>
  42d720:	ldp	x29, x30, [sp], #32
  42d724:	ret
  42d728:	stp	x29, x30, [sp, #-48]!
  42d72c:	mov	x29, sp
  42d730:	stp	x19, x20, [sp, #16]
  42d734:	mov	x20, x0
  42d738:	ldr	w0, [x0, #8]
  42d73c:	mov	w19, w1
  42d740:	cmp	w0, w1
  42d744:	b.eq	42d788 <nftw@plt+0x2ac08>  // b.none
  42d748:	cmp	w1, #0x2
  42d74c:	sbfiz	x1, x1, #4, #32
  42d750:	b.gt	42d774 <nftw@plt+0x2abf4>
  42d754:	add	x0, x20, x1
  42d758:	add	x0, x0, #0x10
  42d75c:	stp	w2, w3, [x0]
  42d760:	cbnz	w19, 42d768 <nftw@plt+0x2abe8>
  42d764:	strb	wzr, [x20, #84]
  42d768:	ldp	x19, x20, [sp, #16]
  42d76c:	ldp	x29, x30, [sp], #48
  42d770:	ret
  42d774:	ldr	x0, [x20, #72]
  42d778:	sub	x1, x1, #0x30
  42d77c:	add	x0, x0, x1
  42d780:	stp	w2, w3, [x0]
  42d784:	b	42d760 <nftw@plt+0x2abe0>
  42d788:	add	x1, sp, #0x20
  42d78c:	add	x0, x20, #0x8
  42d790:	stp	w2, w3, [sp, #32]
  42d794:	str	xzr, [sp, #40]
  42d798:	bl	42d7a0 <nftw@plt+0x2ac20>
  42d79c:	b	42d760 <nftw@plt+0x2abe0>
  42d7a0:	stp	x29, x30, [sp, #-48]!
  42d7a4:	mov	x29, sp
  42d7a8:	stp	x19, x20, [sp, #16]
  42d7ac:	mov	x20, x0
  42d7b0:	ldr	w2, [x0]
  42d7b4:	str	x21, [sp, #32]
  42d7b8:	mov	x21, x1
  42d7bc:	add	w0, w2, #0x1
  42d7c0:	str	w0, [x20]
  42d7c4:	cmp	w2, #0x2
  42d7c8:	b.gt	42d7e8 <nftw@plt+0x2ac68>
  42d7cc:	add	x2, x20, w2, sxtw #4
  42d7d0:	ldp	x0, x1, [x1]
  42d7d4:	stp	x0, x1, [x2, #8]
  42d7d8:	ldp	x19, x20, [sp, #16]
  42d7dc:	ldr	x21, [sp, #32]
  42d7e0:	ldp	x29, x30, [sp], #48
  42d7e4:	ret
  42d7e8:	ldr	x0, [x20, #64]
  42d7ec:	sub	w19, w2, #0x3
  42d7f0:	cbz	x0, 42d81c <nftw@plt+0x2ac9c>
  42d7f4:	ldr	w1, [x20, #56]
  42d7f8:	cmp	w1, w19
  42d7fc:	b.le	42d834 <nftw@plt+0x2acb4>
  42d800:	add	x2, x0, w19, sxtw #4
  42d804:	ldp	x0, x1, [x21]
  42d808:	stp	x0, x1, [x2]
  42d80c:	ldp	x19, x20, [sp, #16]
  42d810:	ldr	x21, [sp, #32]
  42d814:	ldp	x29, x30, [sp], #48
  42d818:	ret
  42d81c:	mov	w0, #0x10                  	// #16
  42d820:	str	w0, [x20, #56]
  42d824:	mov	x0, #0x100                 	// #256
  42d828:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42d82c:	str	x0, [x20, #64]
  42d830:	b	42d800 <nftw@plt+0x2ac80>
  42d834:	lsl	w1, w1, #1
  42d838:	str	w1, [x20, #56]
  42d83c:	sbfiz	x1, x1, #4, #32
  42d840:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  42d844:	str	x0, [x20, #64]
  42d848:	b	42d800 <nftw@plt+0x2ac80>
  42d84c:	nop
  42d850:	stp	x29, x30, [sp, #-32]!
  42d854:	mov	x29, sp
  42d858:	str	x19, [sp, #16]
  42d85c:	mov	x19, x0
  42d860:	ldr	x0, [x0]
  42d864:	ldr	x0, [x0]
  42d868:	cbz	x0, 42d87c <nftw@plt+0x2acfc>
  42d86c:	str	x0, [x19]
  42d870:	ldr	x19, [sp, #16]
  42d874:	ldp	x29, x30, [sp], #32
  42d878:	ret
  42d87c:	mov	x0, #0x38                  	// #56
  42d880:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42d884:	ldr	x1, [x19]
  42d888:	stp	xzr, xzr, [x0]
  42d88c:	str	x1, [x0, #8]
  42d890:	stp	xzr, xzr, [x0, #16]
  42d894:	stp	xzr, xzr, [x0, #32]
  42d898:	str	xzr, [x0, #48]
  42d89c:	str	x0, [x1]
  42d8a0:	str	x0, [x19]
  42d8a4:	ldr	x19, [sp, #16]
  42d8a8:	ldp	x29, x30, [sp], #32
  42d8ac:	ret
  42d8b0:	stp	x29, x30, [sp, #-64]!
  42d8b4:	mov	x29, sp
  42d8b8:	stp	x19, x20, [sp, #16]
  42d8bc:	mov	x20, x1
  42d8c0:	stp	x21, x22, [sp, #32]
  42d8c4:	mov	x22, x4
  42d8c8:	mov	w21, w5
  42d8cc:	stp	x23, x24, [sp, #48]
  42d8d0:	mov	x24, x2
  42d8d4:	mov	x23, x3
  42d8d8:	cbz	x1, 42d924 <nftw@plt+0x2ada4>
  42d8dc:	add	x0, x0, #0x88
  42d8e0:	bl	42d850 <nftw@plt+0x2acd0>
  42d8e4:	mov	x19, x0
  42d8e8:	mov	w1, #0x2                   	// #2
  42d8ec:	mov	x0, #0x18                  	// #24
  42d8f0:	add	x21, x22, w21, uxtw #3
  42d8f4:	str	x24, [x19, #32]
  42d8f8:	str	w1, [x19, #48]
  42d8fc:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42d900:	stp	x20, x23, [x0]
  42d904:	str	x23, [x0, #16]
  42d908:	ldp	x23, x24, [sp, #48]
  42d90c:	stp	x22, x21, [x19, #16]
  42d910:	str	x0, [x19, #40]
  42d914:	ldp	x19, x20, [sp, #16]
  42d918:	ldp	x21, x22, [sp, #32]
  42d91c:	ldp	x29, x30, [sp], #64
  42d920:	ret
  42d924:	ldr	x20, [x0, #136]
  42d928:	cbz	x20, 42d8dc <nftw@plt+0x2ad5c>
  42d92c:	ldr	w1, [x20, #48]
  42d930:	ldr	x20, [x20, #40]
  42d934:	cmp	w1, #0x2
  42d938:	b.ne	42d8dc <nftw@plt+0x2ad5c>  // b.any
  42d93c:	ldr	x20, [x20]
  42d940:	b	42d8dc <nftw@plt+0x2ad5c>
  42d944:	nop
  42d948:	stp	x29, x30, [sp, #-32]!
  42d94c:	mov	x29, sp
  42d950:	stp	x19, x20, [sp, #16]
  42d954:	mov	x19, x1
  42d958:	mov	x20, x2
  42d95c:	bl	427030 <nftw@plt+0x244b0>
  42d960:	ldr	x1, [x19]
  42d964:	ldrb	w1, [x1, #4]
  42d968:	strb	w1, [x0, #4]
  42d96c:	ldr	x2, [x19]
  42d970:	ldrh	w1, [x20]
  42d974:	ldp	x2, x3, [x2, #8]
  42d978:	stp	x2, x3, [x0, #8]
  42d97c:	tbz	w1, #3, 42d9a0 <nftw@plt+0x2ae20>
  42d980:	ldr	x1, [x19]
  42d984:	ldrh	w1, [x1, #6]
  42d988:	orr	w1, w1, #0x8
  42d98c:	strh	w1, [x0, #6]
  42d990:	str	x0, [x19]
  42d994:	ldp	x19, x20, [sp, #16]
  42d998:	ldp	x29, x30, [sp], #32
  42d99c:	ret
  42d9a0:	ldr	x1, [x19]
  42d9a4:	ldrh	w1, [x1, #6]
  42d9a8:	and	w1, w1, #0xfffffff7
  42d9ac:	and	w1, w1, #0xffff
  42d9b0:	strh	w1, [x0, #6]
  42d9b4:	str	x0, [x19]
  42d9b8:	ldp	x19, x20, [sp, #16]
  42d9bc:	ldp	x29, x30, [sp], #32
  42d9c0:	ret
  42d9c4:	nop
  42d9c8:	stp	x29, x30, [sp, #-64]!
  42d9cc:	mov	x29, sp
  42d9d0:	stp	x19, x20, [sp, #16]
  42d9d4:	stp	x21, x22, [sp, #32]
  42d9d8:	mov	x21, x1
  42d9dc:	ldp	x19, x1, [x0, #16]
  42d9e0:	str	x23, [sp, #48]
  42d9e4:	cmp	x19, x1
  42d9e8:	b.hi	42da44 <nftw@plt+0x2aec4>  // b.pmore
  42d9ec:	mov	x20, x0
  42d9f0:	mov	x23, x2
  42d9f4:	cbz	x21, 42da24 <nftw@plt+0x2aea4>
  42d9f8:	ldr	x22, [x0, #8]
  42d9fc:	mov	w2, w3
  42da00:	sub	x22, x19, x22
  42da04:	ubfx	x22, x22, #3, #32
  42da08:	cbz	x5, 42da20 <nftw@plt+0x2aea0>
  42da0c:	mov	w3, w4
  42da10:	mov	w1, w6
  42da14:	mov	x0, x5
  42da18:	bl	42b4c8 <nftw@plt+0x28948>
  42da1c:	mov	w2, w0
  42da20:	str	w2, [x21, x22, lsl #2]
  42da24:	mov	x0, x19
  42da28:	ldp	x21, x22, [sp, #32]
  42da2c:	str	x23, [x0], #8
  42da30:	ldr	x23, [sp, #48]
  42da34:	str	x0, [x20, #16]
  42da38:	ldp	x19, x20, [sp, #16]
  42da3c:	ldp	x29, x30, [sp], #64
  42da40:	ret
  42da44:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42da48:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42da4c:	add	x2, x2, #0x330
  42da50:	add	x0, x0, #0x348
  42da54:	mov	w1, #0x953                 	// #2387
  42da58:	bl	402bf0 <nftw@plt+0x70>
  42da5c:	nop
  42da60:	stp	x29, x30, [sp, #-48]!
  42da64:	mov	x29, sp
  42da68:	str	x21, [sp, #32]
  42da6c:	ldr	x21, [x1, #24]
  42da70:	stp	x19, x20, [sp, #16]
  42da74:	mov	x20, x0
  42da78:	ldrb	w0, [x21, #19]
  42da7c:	tbz	w0, #5, 42da90 <nftw@plt+0x2af10>
  42da80:	ldp	x19, x20, [sp, #16]
  42da84:	ldr	x21, [sp, #32]
  42da88:	ldp	x29, x30, [sp], #48
  42da8c:	ret
  42da90:	mov	x19, x1
  42da94:	ldr	w1, [x21, #8]
  42da98:	ldr	x0, [x20, #40]
  42da9c:	bl	42b898 <nftw@plt+0x28d18>
  42daa0:	ldr	w0, [x0, #20]
  42daa4:	cbnz	w0, 42da80 <nftw@plt+0x2af00>
  42daa8:	ldr	w2, [x21, #8]
  42daac:	mov	x0, x20
  42dab0:	ldr	x5, [x19]
  42dab4:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42dab8:	ldp	x19, x20, [sp, #16]
  42dabc:	add	x4, x4, #0x360
  42dac0:	ldr	x21, [sp, #32]
  42dac4:	mov	w3, #0x0                   	// #0
  42dac8:	ldp	x29, x30, [sp], #48
  42dacc:	mov	w1, #0xe                   	// #14
  42dad0:	b	41f4d0 <nftw@plt+0x1c950>
  42dad4:	nop
  42dad8:	ldrb	w2, [x1, #18]
  42dadc:	and	w2, w2, #0x3
  42dae0:	cmp	w2, #0x2
  42dae4:	b.eq	42daf0 <nftw@plt+0x2af70>  // b.none
  42dae8:	mov	w0, #0x1                   	// #1
  42daec:	ret
  42daf0:	stp	x29, x30, [sp, #-16]!
  42daf4:	mov	x29, sp
  42daf8:	bl	42da60 <nftw@plt+0x2aee0>
  42dafc:	mov	w0, #0x1                   	// #1
  42db00:	ldp	x29, x30, [sp], #16
  42db04:	ret
  42db08:	stp	x29, x30, [sp, #-80]!
  42db0c:	mov	x29, sp
  42db10:	ldr	w3, [x1, #24]
  42db14:	stp	x19, x20, [sp, #16]
  42db18:	mov	x20, x1
  42db1c:	mov	x19, x0
  42db20:	cmp	w3, #0x5
  42db24:	b.eq	42dbe8 <nftw@plt+0x2b068>  // b.none
  42db28:	b.ls	42dbb8 <nftw@plt+0x2b038>  // b.plast
  42db2c:	cmp	w3, #0x9
  42db30:	b.eq	42dcd0 <nftw@plt+0x2b150>  // b.none
  42db34:	b.ls	42db80 <nftw@plt+0x2b000>  // b.plast
  42db38:	cmp	w3, #0xa
  42db3c:	b.ne	42dcf0 <nftw@plt+0x2b170>  // b.any
  42db40:	ldr	x1, [x0, #1040]
  42db44:	blr	x1
  42db48:	mov	w20, w0
  42db4c:	nop
  42db50:	mov	x1, #0x15                  	// #21
  42db54:	mov	x0, x19
  42db58:	bl	427ea8 <nftw@plt+0x25328>
  42db5c:	mov	w2, w20
  42db60:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  42db64:	mov	x20, x0
  42db68:	add	x1, x1, #0x5d8
  42db6c:	bl	4025b0 <sprintf@plt>
  42db70:	mov	x0, x20
  42db74:	ldp	x19, x20, [sp, #16]
  42db78:	ldp	x29, x30, [sp], #80
  42db7c:	ret
  42db80:	cmp	w3, #0x6
  42db84:	b.eq	42dd10 <nftw@plt+0x2b190>  // b.none
  42db88:	cmp	w3, #0x8
  42db8c:	b.ne	42dcf0 <nftw@plt+0x2b170>  // b.any
  42db90:	stp	x21, x22, [sp, #32]
  42db94:	ldrb	w1, [x0, #1134]
  42db98:	cbnz	w1, 42dd54 <nftw@plt+0x2b1d4>
  42db9c:	mov	x0, x19
  42dba0:	bl	4258b8 <nftw@plt+0x22d38>
  42dba4:	ldr	x20, [x0, #88]
  42dba8:	mov	x21, x0
  42dbac:	cbz	x20, 42de78 <nftw@plt+0x2b2f8>
  42dbb0:	ldp	x21, x22, [sp, #32]
  42dbb4:	b	42db70 <nftw@plt+0x2aff0>
  42dbb8:	cmp	w3, #0x4
  42dbbc:	b.eq	42dd28 <nftw@plt+0x2b1a8>  // b.none
  42dbc0:	cmp	w3, #0x1
  42dbc4:	b.hi	42dc14 <nftw@plt+0x2b094>  // b.pmore
  42dbc8:	cbnz	w3, 42dbe8 <nftw@plt+0x2b068>
  42dbcc:	ldrb	w1, [x0, #1160]
  42dbd0:	ldr	x0, [x0, #40]
  42dbd4:	cbz	w1, 42dd6c <nftw@plt+0x2b1ec>
  42dbd8:	ldr	w1, [x0, #60]
  42dbdc:	bl	42bde0 <nftw@plt+0x29260>
  42dbe0:	mov	w20, w0
  42dbe4:	b	42db50 <nftw@plt+0x2afd0>
  42dbe8:	ldrb	w0, [x19, #1134]
  42dbec:	cbnz	w0, 42ddbc <nftw@plt+0x2b23c>
  42dbf0:	ldr	x0, [x19, #640]
  42dbf4:	cbz	x0, 42ddd8 <nftw@plt+0x2b258>
  42dbf8:	ldr	w0, [x20, #24]
  42dbfc:	cmp	w0, #0x1
  42dc00:	b.eq	42dd9c <nftw@plt+0x2b21c>  // b.none
  42dc04:	ldr	x20, [x19, #648]
  42dc08:	cbnz	x20, 42db70 <nftw@plt+0x2aff0>
  42dc0c:	mov	w20, #0x1                   	// #1
  42dc10:	b	42db50 <nftw@plt+0x2afd0>
  42dc14:	stp	x21, x22, [sp, #32]
  42dc18:	cmp	w3, #0x2
  42dc1c:	b.eq	42dda8 <nftw@plt+0x2b228>  // b.none
  42dc20:	ldr	x0, [x0, #288]
  42dc24:	bl	425828 <nftw@plt+0x22ca8>
  42dc28:	mov	x21, x0
  42dc2c:	cbz	x0, 42df84 <nftw@plt+0x2b404>
  42dc30:	ldr	x1, [x19, #1080]
  42dc34:	cbz	x1, 42dc44 <nftw@plt+0x2b0c4>
  42dc38:	mov	x0, x21
  42dc3c:	blr	x1
  42dc40:	mov	x21, x0
  42dc44:	mov	x0, x21
  42dc48:	bl	4024f0 <strlen@plt>
  42dc4c:	mov	x1, x0
  42dc50:	mov	x0, x19
  42dc54:	mov	x19, x1
  42dc58:	lsl	w1, w1, #1
  42dc5c:	add	w1, w1, #0x3
  42dc60:	bl	427ea8 <nftw@plt+0x25328>
  42dc64:	mov	x2, x0
  42dc68:	mov	w3, #0x22                  	// #34
  42dc6c:	mov	x20, x0
  42dc70:	sub	w1, w19, #0x1
  42dc74:	strb	w3, [x2], #1
  42dc78:	cbz	w19, 42dd38 <nftw@plt+0x2b1b8>
  42dc7c:	mov	w3, w1
  42dc80:	mov	w4, #0x5c                  	// #92
  42dc84:	add	x3, x3, #0x1
  42dc88:	add	x3, x21, x3
  42dc8c:	b	42dca0 <nftw@plt+0x2b120>
  42dc90:	mov	x2, x0
  42dc94:	cmp	x21, x3
  42dc98:	strb	w1, [x2], #1
  42dc9c:	b.eq	42dd38 <nftw@plt+0x2b1b8>  // b.none
  42dca0:	ldrb	w1, [x21], #1
  42dca4:	cmp	w1, #0x22
  42dca8:	b.eq	42dcc4 <nftw@plt+0x2b144>  // b.none
  42dcac:	cmp	w1, #0x5c
  42dcb0:	b.eq	42dcc4 <nftw@plt+0x2b144>  // b.none
  42dcb4:	cmp	w1, #0xa
  42dcb8:	mov	x0, x2
  42dcbc:	b.ne	42dc90 <nftw@plt+0x2b110>  // b.any
  42dcc0:	mov	w1, #0x6e                  	// #110
  42dcc4:	mov	x0, x2
  42dcc8:	strb	w4, [x0], #1
  42dccc:	b	42dc90 <nftw@plt+0x2b110>
  42dcd0:	ldrb	w1, [x0, #1244]
  42dcd4:	cbz	w1, 42dce0 <nftw@plt+0x2b160>
  42dcd8:	ldrb	w1, [x0, #16]
  42dcdc:	cbnz	w1, 42dd88 <nftw@plt+0x2b208>
  42dce0:	ldr	w20, [x19, #1376]
  42dce4:	add	w0, w20, #0x1
  42dce8:	str	w0, [x19, #1376]
  42dcec:	b	42db50 <nftw@plt+0x2afd0>
  42dcf0:	ldr	x3, [x20]
  42dcf4:	mov	x0, x19
  42dcf8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42dcfc:	mov	w1, #0x4                   	// #4
  42dd00:	add	x2, x2, #0x398
  42dd04:	mov	w20, #0x1                   	// #1
  42dd08:	bl	41f298 <nftw@plt+0x1c718>
  42dd0c:	b	42db50 <nftw@plt+0x2afd0>
  42dd10:	ldr	x0, [x0]
  42dd14:	cbz	x0, 42dc0c <nftw@plt+0x2b08c>
  42dd18:	ldrb	w0, [x0, #106]
  42dd1c:	cmp	w0, #0x0
  42dd20:	cset	w20, eq  // eq = none
  42dd24:	b	42db50 <nftw@plt+0x2afd0>
  42dd28:	ldr	x0, [x0, #40]
  42dd2c:	ldr	w20, [x0, #48]
  42dd30:	sub	w20, w20, #0x1
  42dd34:	b	42db50 <nftw@plt+0x2afd0>
  42dd38:	mov	w0, #0x22                  	// #34
  42dd3c:	strh	w0, [x2]
  42dd40:	mov	x0, x20
  42dd44:	ldp	x19, x20, [sp, #16]
  42dd48:	ldp	x21, x22, [sp, #32]
  42dd4c:	ldp	x29, x30, [sp], #80
  42dd50:	ret
  42dd54:	ldr	x3, [x20]
  42dd58:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42dd5c:	mov	w1, #0x14                  	// #20
  42dd60:	add	x2, x2, #0x3b8
  42dd64:	bl	41f308 <nftw@plt+0x1c788>
  42dd68:	b	42db9c <nftw@plt+0x2b01c>
  42dd6c:	mov	w1, w2
  42dd70:	mov	x3, #0x0                   	// #0
  42dd74:	mov	w2, #0x0                   	// #0
  42dd78:	bl	42bfa0 <nftw@plt+0x29420>
  42dd7c:	mov	w1, w0
  42dd80:	ldr	x0, [x19, #40]
  42dd84:	b	42dbdc <nftw@plt+0x2b05c>
  42dd88:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42dd8c:	mov	w1, #0x3                   	// #3
  42dd90:	add	x2, x2, #0x498
  42dd94:	bl	41f298 <nftw@plt+0x1c718>
  42dd98:	b	42dce0 <nftw@plt+0x2b160>
  42dd9c:	ldr	x20, [x19, #640]
  42dda0:	cbz	x20, 42dc0c <nftw@plt+0x2b08c>
  42dda4:	b	42db70 <nftw@plt+0x2aff0>
  42dda8:	ldr	x0, [x0, #40]
  42ddac:	ldr	w1, [x0, #60]
  42ddb0:	bl	42be48 <nftw@plt+0x292c8>
  42ddb4:	mov	x21, x0
  42ddb8:	b	42dc30 <nftw@plt+0x2b0b0>
  42ddbc:	ldr	x3, [x20]
  42ddc0:	mov	x0, x19
  42ddc4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42ddc8:	mov	w1, #0x14                  	// #20
  42ddcc:	add	x2, x2, #0x3b8
  42ddd0:	bl	41f308 <nftw@plt+0x1c788>
  42ddd4:	b	42dbf0 <nftw@plt+0x2b070>
  42ddd8:	ldr	x0, [x19, #656]
  42dddc:	stp	x21, x22, [sp, #32]
  42dde0:	cmn	x0, #0x2
  42dde4:	b.eq	42de60 <nftw@plt+0x2b2e0>  // b.none
  42dde8:	tbnz	x0, #63, 42df14 <nftw@plt+0x2b394>
  42ddec:	add	x0, x19, #0x290
  42ddf0:	bl	402730 <gmtime@plt>
  42ddf4:	mov	x21, x0
  42ddf8:	cbz	x21, 42dee0 <nftw@plt+0x2b360>
  42ddfc:	mov	x1, #0xe                   	// #14
  42de00:	mov	x0, x19
  42de04:	bl	427ea8 <nftw@plt+0x25328>
  42de08:	ldrsw	x5, [x21, #16]
  42de0c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42de10:	add	x2, x2, #0xbf0
  42de14:	ldr	w3, [x21, #12]
  42de18:	ldr	w4, [x21, #20]
  42de1c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42de20:	str	x0, [x19, #640]
  42de24:	add	x1, x1, #0x428
  42de28:	ldr	x2, [x2, x5, lsl #3]
  42de2c:	add	w4, w4, #0x76c
  42de30:	bl	4025b0 <sprintf@plt>
  42de34:	mov	x1, #0xb                   	// #11
  42de38:	mov	x0, x19
  42de3c:	bl	427ea8 <nftw@plt+0x25328>
  42de40:	ldp	w4, w3, [x21]
  42de44:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42de48:	ldr	w2, [x21, #8]
  42de4c:	add	x1, x1, #0x438
  42de50:	str	x0, [x19, #648]
  42de54:	bl	4025b0 <sprintf@plt>
  42de58:	ldp	x21, x22, [sp, #32]
  42de5c:	b	42dbf8 <nftw@plt+0x2b078>
  42de60:	ldr	x1, [x19, #1056]
  42de64:	cbz	x1, 42df14 <nftw@plt+0x2b394>
  42de68:	mov	x0, x19
  42de6c:	blr	x1
  42de70:	str	x0, [x19, #656]
  42de74:	b	42dde8 <nftw@plt+0x2b268>
  42de78:	bl	4258c0 <nftw@plt+0x22d40>
  42de7c:	cbz	x0, 42df4c <nftw@plt+0x2b3cc>
  42de80:	bl	425830 <nftw@plt+0x22cb0>
  42de84:	cbz	x0, 42df5c <nftw@plt+0x2b3dc>
  42de88:	add	x0, x0, #0x58
  42de8c:	bl	402610 <localtime@plt>
  42de90:	cbz	x0, 42df5c <nftw@plt+0x2b3dc>
  42de94:	str	x23, [sp, #48]
  42de98:	bl	402a00 <asctime@plt>
  42de9c:	mov	x22, x0
  42dea0:	bl	4024f0 <strlen@plt>
  42dea4:	mov	x1, x0
  42dea8:	mov	x0, x19
  42deac:	mov	x19, x1
  42deb0:	add	x1, x1, #0x2
  42deb4:	bl	427ea8 <nftw@plt+0x25328>
  42deb8:	mov	x20, x0
  42debc:	mov	w23, #0x22                  	// #34
  42dec0:	strb	w23, [x0], #1
  42dec4:	mov	x1, x22
  42dec8:	bl	402990 <strcpy@plt>
  42decc:	strb	w23, [x20, x19]
  42ded0:	ldr	x23, [sp, #48]
  42ded4:	str	x20, [x21, #88]
  42ded8:	ldp	x21, x22, [sp, #32]
  42dedc:	b	42db70 <nftw@plt+0x2aff0>
  42dee0:	mov	w1, #0x0                   	// #0
  42dee4:	mov	x0, x19
  42dee8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42deec:	add	x2, x2, #0x450
  42def0:	bl	41f770 <nftw@plt+0x1cbf0>
  42def4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42def8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42defc:	add	x1, x1, #0x478
  42df00:	add	x0, x0, #0x488
  42df04:	ldp	x21, x22, [sp, #32]
  42df08:	str	x1, [x19, #640]
  42df0c:	str	x0, [x19, #648]
  42df10:	b	42dbf8 <nftw@plt+0x2b078>
  42df14:	bl	402aa0 <__errno_location@plt>
  42df18:	mov	x21, x0
  42df1c:	mov	x0, #0x0                   	// #0
  42df20:	str	wzr, [x21]
  42df24:	bl	402660 <time@plt>
  42df28:	str	x0, [sp, #72]
  42df2c:	cmn	x0, #0x1
  42df30:	b.ne	42df3c <nftw@plt+0x2b3bc>  // b.any
  42df34:	ldr	w0, [x21]
  42df38:	cbnz	w0, 42dee0 <nftw@plt+0x2b360>
  42df3c:	add	x0, sp, #0x48
  42df40:	bl	402610 <localtime@plt>
  42df44:	mov	x21, x0
  42df48:	b	42ddf8 <nftw@plt+0x2b278>
  42df4c:	ldr	x20, [x21, #88]
  42df50:	ldp	x21, x22, [sp, #32]
  42df54:	cbz	x20, 42dc0c <nftw@plt+0x2b08c>
  42df58:	b	42db70 <nftw@plt+0x2aff0>
  42df5c:	mov	x0, x19
  42df60:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42df64:	mov	w1, #0x0                   	// #0
  42df68:	add	x2, x2, #0x3e8
  42df6c:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42df70:	bl	41f770 <nftw@plt+0x1cbf0>
  42df74:	add	x20, x20, #0x378
  42df78:	str	x20, [x21, #88]
  42df7c:	ldp	x21, x22, [sp, #32]
  42df80:	b	42db70 <nftw@plt+0x2aff0>
  42df84:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42df88:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42df8c:	add	x2, x2, #0x410
  42df90:	add	x0, x0, #0x348
  42df94:	mov	w1, #0x1c5                 	// #453
  42df98:	str	x23, [sp, #48]
  42df9c:	bl	402bf0 <nftw@plt+0x70>
  42dfa0:	sub	w3, w2, #0x1
  42dfa4:	cbz	w2, 42e008 <nftw@plt+0x2b488>
  42dfa8:	mov	w4, w3
  42dfac:	mov	w5, #0x5c                  	// #92
  42dfb0:	add	x4, x4, #0x1
  42dfb4:	add	x4, x1, x4
  42dfb8:	b	42dfcc <nftw@plt+0x2b44c>
  42dfbc:	mov	x0, x3
  42dfc0:	cmp	x1, x4
  42dfc4:	strb	w2, [x0], #1
  42dfc8:	b.eq	42e008 <nftw@plt+0x2b488>  // b.none
  42dfcc:	ldrb	w2, [x1], #1
  42dfd0:	mov	x3, x0
  42dfd4:	cmp	w2, #0x22
  42dfd8:	b.eq	42dff0 <nftw@plt+0x2b470>  // b.none
  42dfdc:	cmp	w2, #0x5c
  42dfe0:	b.eq	42dff0 <nftw@plt+0x2b470>  // b.none
  42dfe4:	cmp	w2, #0xa
  42dfe8:	b.ne	42dfbc <nftw@plt+0x2b43c>  // b.any
  42dfec:	mov	w2, #0x6e                  	// #110
  42dff0:	mov	x3, x0
  42dff4:	cmp	x1, x4
  42dff8:	strb	w5, [x3], #1
  42dffc:	mov	x0, x3
  42e000:	strb	w2, [x0], #1
  42e004:	b.ne	42dfcc <nftw@plt+0x2b44c>  // b.any
  42e008:	ret
  42e00c:	nop
  42e010:	stp	x29, x30, [sp, #-48]!
  42e014:	mov	x29, sp
  42e018:	ldrh	w4, [x1, #16]
  42e01c:	stp	x19, x20, [sp, #16]
  42e020:	mov	w19, #0x1                   	// #1
  42e024:	cmp	w4, w3
  42e028:	b.eq	42e088 <nftw@plt+0x2b508>  // b.none
  42e02c:	str	x21, [sp, #32]
  42e030:	mov	x19, x1
  42e034:	mov	w6, w3
  42e038:	mov	x20, x2
  42e03c:	mov	x21, x0
  42e040:	b.ls	42e0c4 <nftw@plt+0x2b544>  // b.plast
  42e044:	add	w1, w3, #0x1
  42e048:	cmp	w4, w1
  42e04c:	b.ne	42e058 <nftw@plt+0x2b4d8>  // b.any
  42e050:	ldrb	w1, [x19, #19]
  42e054:	tbnz	w1, #3, 42e0e4 <nftw@plt+0x2b564>
  42e058:	ldr	x3, [x20]
  42e05c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e060:	mov	w5, w6
  42e064:	add	x2, x2, #0x578
  42e068:	mov	x0, x21
  42e06c:	mov	w1, #0x3                   	// #3
  42e070:	bl	41f298 <nftw@plt+0x1c718>
  42e074:	ldr	w2, [x19, #8]
  42e078:	mov	w19, #0x0                   	// #0
  42e07c:	cmp	w2, #0x2
  42e080:	b.hi	42e098 <nftw@plt+0x2b518>  // b.pmore
  42e084:	ldr	x21, [sp, #32]
  42e088:	mov	w0, w19
  42e08c:	ldp	x19, x20, [sp, #16]
  42e090:	ldp	x29, x30, [sp], #48
  42e094:	ret
  42e098:	ldr	x4, [x20]
  42e09c:	mov	x0, x21
  42e0a0:	mov	w1, #0x5                   	// #5
  42e0a4:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e0a8:	add	x3, x3, #0x5e8
  42e0ac:	bl	41f650 <nftw@plt+0x1cad0>
  42e0b0:	mov	w0, w19
  42e0b4:	ldp	x19, x20, [sp, #16]
  42e0b8:	ldr	x21, [sp, #32]
  42e0bc:	ldp	x29, x30, [sp], #48
  42e0c0:	ret
  42e0c4:	mov	w5, w4
  42e0c8:	mov	w4, w3
  42e0cc:	ldr	x3, [x20]
  42e0d0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e0d4:	mov	w1, #0x3                   	// #3
  42e0d8:	add	x2, x2, #0x5b0
  42e0dc:	bl	41f298 <nftw@plt+0x1c718>
  42e0e0:	b	42e074 <nftw@plt+0x2b4f4>
  42e0e4:	ldrb	w2, [x0, #1154]
  42e0e8:	mov	w19, #0x1                   	// #1
  42e0ec:	cbz	w2, 42e084 <nftw@plt+0x2b504>
  42e0f0:	tbnz	w1, #4, 42e084 <nftw@plt+0x2b504>
  42e0f4:	ldrb	w1, [x0, #1167]
  42e0f8:	cbnz	w1, 42e084 <nftw@plt+0x2b504>
  42e0fc:	ldrb	w1, [x0, #1120]
  42e100:	cbz	w1, 42e11c <nftw@plt+0x2b59c>
  42e104:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e108:	mov	w1, #0x2                   	// #2
  42e10c:	add	x2, x2, #0x4d8
  42e110:	bl	41f298 <nftw@plt+0x1c718>
  42e114:	ldr	x21, [sp, #32]
  42e118:	b	42e088 <nftw@plt+0x2b508>
  42e11c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e120:	mov	w1, #0x2                   	// #2
  42e124:	add	x2, x2, #0x528
  42e128:	bl	41f298 <nftw@plt+0x1c718>
  42e12c:	ldr	x21, [sp, #32]
  42e130:	b	42e088 <nftw@plt+0x2b508>
  42e134:	nop
  42e138:	stp	x29, x30, [sp, #-48]!
  42e13c:	mov	x29, sp
  42e140:	stp	x19, x20, [sp, #16]
  42e144:	mov	x19, x1
  42e148:	mov	w20, w3
  42e14c:	str	x21, [sp, #32]
  42e150:	mov	x21, x2
  42e154:	cbz	x1, 42e188 <nftw@plt+0x2b608>
  42e158:	add	x0, x0, #0x88
  42e15c:	bl	42d850 <nftw@plt+0x2acd0>
  42e160:	mov	w3, #0x18                  	// #24
  42e164:	mov	w1, #0x1                   	// #1
  42e168:	stp	xzr, x19, [x0, #32]
  42e16c:	umaddl	x20, w20, w3, x21
  42e170:	stp	x21, x20, [x0, #16]
  42e174:	str	w1, [x0, #48]
  42e178:	ldp	x19, x20, [sp, #16]
  42e17c:	ldr	x21, [sp, #32]
  42e180:	ldp	x29, x30, [sp], #48
  42e184:	ret
  42e188:	ldr	x19, [x0, #136]
  42e18c:	cbz	x19, 42e158 <nftw@plt+0x2b5d8>
  42e190:	ldr	w1, [x19, #48]
  42e194:	ldr	x19, [x19, #40]
  42e198:	cmp	w1, #0x2
  42e19c:	b.ne	42e158 <nftw@plt+0x2b5d8>  // b.any
  42e1a0:	ldr	x19, [x19]
  42e1a4:	b	42e158 <nftw@plt+0x2b5d8>
  42e1a8:	stp	x29, x30, [sp, #-64]!
  42e1ac:	mov	x29, sp
  42e1b0:	ldr	w4, [x1, #24]
  42e1b4:	stp	x19, x20, [sp, #16]
  42e1b8:	mov	x19, x0
  42e1bc:	cmp	w4, #0x7
  42e1c0:	stp	x21, x22, [sp, #32]
  42e1c4:	mov	w22, w2
  42e1c8:	stp	x23, x24, [sp, #48]
  42e1cc:	b.ne	42e220 <nftw@plt+0x2b6a0>  // b.any
  42e1d0:	ldrb	w2, [x0, #16]
  42e1d4:	mov	w1, #0x0                   	// #0
  42e1d8:	cbz	w2, 42e1f8 <nftw@plt+0x2b678>
  42e1dc:	mov	sp, x29
  42e1e0:	mov	w0, w1
  42e1e4:	ldp	x19, x20, [sp, #16]
  42e1e8:	ldp	x21, x22, [sp, #32]
  42e1ec:	ldp	x23, x24, [sp, #48]
  42e1f0:	ldp	x29, x30, [sp], #64
  42e1f4:	ret
  42e1f8:	mov	w1, w22
  42e1fc:	bl	41ec20 <nftw@plt+0x1c0a0>
  42e200:	mov	sp, x29
  42e204:	mov	w1, w0
  42e208:	mov	w0, w1
  42e20c:	ldp	x19, x20, [sp, #16]
  42e210:	ldp	x21, x22, [sp, #32]
  42e214:	ldp	x23, x24, [sp, #48]
  42e218:	ldp	x29, x30, [sp], #64
  42e21c:	ret
  42e220:	mov	w2, w3
  42e224:	mov	x21, x1
  42e228:	bl	42db08 <nftw@plt+0x2af88>
  42e22c:	mov	x23, x0
  42e230:	bl	4024f0 <strlen@plt>
  42e234:	mov	x20, x0
  42e238:	add	x0, x0, #0x10
  42e23c:	mov	x2, x20
  42e240:	and	x0, x0, #0xfffffffffffffff0
  42e244:	mov	x1, x23
  42e248:	sub	sp, sp, x0
  42e24c:	mov	x4, sp
  42e250:	mov	x0, x4
  42e254:	bl	402490 <memcpy@plt>
  42e258:	mov	x4, x0
  42e25c:	mov	x1, x0
  42e260:	mov	x2, x20
  42e264:	mov	w5, #0xa                   	// #10
  42e268:	mov	w3, #0x1                   	// #1
  42e26c:	strb	w5, [x4, x20]
  42e270:	mov	x0, x19
  42e274:	bl	41e468 <nftw@plt+0x1b8e8>
  42e278:	mov	x0, x19
  42e27c:	bl	426458 <nftw@plt+0x238d8>
  42e280:	mov	x0, x19
  42e284:	bl	427030 <nftw@plt+0x244b0>
  42e288:	str	x0, [x19, #448]
  42e28c:	mov	x0, x19
  42e290:	bl	428f58 <nftw@plt+0x263d8>
  42e294:	mov	x20, x0
  42e298:	ldr	x1, [x19, #136]
  42e29c:	ldr	w0, [x1, #48]
  42e2a0:	str	w22, [x20]
  42e2a4:	cmp	w0, #0x2
  42e2a8:	b.eq	42e314 <nftw@plt+0x2b794>  // b.none
  42e2ac:	mov	x2, x20
  42e2b0:	mov	x0, x19
  42e2b4:	mov	w3, #0x1                   	// #1
  42e2b8:	mov	x1, #0x0                   	// #0
  42e2bc:	bl	42e138 <nftw@plt+0x2b5b8>
  42e2c0:	ldr	x0, [x19]
  42e2c4:	ldr	x1, [x0]
  42e2c8:	ldr	x0, [x0, #32]
  42e2cc:	cmp	x1, x0
  42e2d0:	b.eq	42e2ec <nftw@plt+0x2b76c>  // b.none
  42e2d4:	ldr	x3, [x21]
  42e2d8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e2dc:	mov	x0, x19
  42e2e0:	add	x2, x2, #0x398
  42e2e4:	mov	w1, #0x4                   	// #4
  42e2e8:	bl	41f298 <nftw@plt+0x1c718>
  42e2ec:	mov	x0, x19
  42e2f0:	bl	41e590 <nftw@plt+0x1ba10>
  42e2f4:	mov	sp, x29
  42e2f8:	mov	w1, #0x1                   	// #1
  42e2fc:	mov	w0, w1
  42e300:	ldp	x19, x20, [sp, #16]
  42e304:	ldp	x21, x22, [sp, #32]
  42e308:	ldp	x23, x24, [sp, #48]
  42e30c:	ldp	x29, x30, [sp], #64
  42e310:	ret
  42e314:	mov	x0, #0x10                  	// #16
  42e318:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42e31c:	mov	x1, #0x8                   	// #8
  42e320:	mov	x24, x0
  42e324:	mov	x0, x19
  42e328:	bl	427c60 <nftw@plt+0x250e0>
  42e32c:	mov	x23, x0
  42e330:	mov	w2, w22
  42e334:	ldr	x0, [x19, #40]
  42e338:	mov	x1, x21
  42e33c:	mov	w3, #0x1                   	// #1
  42e340:	bl	42b410 <nftw@plt+0x28890>
  42e344:	mov	x5, x0
  42e348:	ldr	x3, [x19, #40]
  42e34c:	mov	x2, x20
  42e350:	mov	x1, x24
  42e354:	mov	x0, x23
  42e358:	mov	w6, #0x0                   	// #0
  42e35c:	ldr	w4, [x3, #112]
  42e360:	mov	w3, w4
  42e364:	bl	42d9c8 <nftw@plt+0x2ae48>
  42e368:	ldr	x4, [x23, #8]
  42e36c:	mov	x3, x24
  42e370:	mov	x2, x23
  42e374:	mov	x1, x21
  42e378:	mov	x0, x19
  42e37c:	mov	w5, #0x1                   	// #1
  42e380:	bl	42d8b0 <nftw@plt+0x2ad30>
  42e384:	b	42e2c0 <nftw@plt+0x2b740>
  42e388:	stp	x29, x30, [sp, #-48]!
  42e38c:	add	x0, x0, #0x88
  42e390:	mov	x29, sp
  42e394:	stp	x19, x20, [sp, #16]
  42e398:	mov	x19, x1
  42e39c:	mov	x20, x3
  42e3a0:	str	x21, [sp, #32]
  42e3a4:	mov	x21, x2
  42e3a8:	bl	42d850 <nftw@plt+0x2acd0>
  42e3ac:	add	x20, x21, x20
  42e3b0:	mov	w1, #0x1                   	// #1
  42e3b4:	stp	x21, x20, [x0, #16]
  42e3b8:	stp	xzr, x19, [x0, #32]
  42e3bc:	str	w1, [x0, #48]
  42e3c0:	ldrh	w0, [x19, #18]
  42e3c4:	orr	w0, w0, #0x40
  42e3c8:	strh	w0, [x19, #18]
  42e3cc:	ldp	x19, x20, [sp, #16]
  42e3d0:	ldr	x21, [sp, #32]
  42e3d4:	ldp	x29, x30, [sp], #48
  42e3d8:	ret
  42e3dc:	nop
  42e3e0:	stp	x29, x30, [sp, #-48]!
  42e3e4:	mov	x29, sp
  42e3e8:	stp	x19, x20, [sp, #16]
  42e3ec:	mov	x20, x0
  42e3f0:	add	x0, x0, #0x50
  42e3f4:	stp	x21, x22, [sp, #32]
  42e3f8:	ldr	x19, [x20, #136]
  42e3fc:	cmp	x19, x0
  42e400:	b.eq	42e4dc <nftw@plt+0x2b95c>  // b.none
  42e404:	ldr	x21, [x19, #40]
  42e408:	cbz	x21, 42e460 <nftw@plt+0x2b8e0>
  42e40c:	ldr	w0, [x19, #48]
  42e410:	cmp	w0, #0x2
  42e414:	b.eq	42e48c <nftw@plt+0x2b90c>  // b.none
  42e418:	ldr	x0, [x19, #8]
  42e41c:	cbz	x0, 42e43c <nftw@plt+0x2b8bc>
  42e420:	ldr	w1, [x0, #48]
  42e424:	ldr	x0, [x0, #40]
  42e428:	cmp	w1, #0x2
  42e42c:	b.ne	42e434 <nftw@plt+0x2b8b4>  // b.any
  42e430:	ldr	x0, [x0]
  42e434:	cmp	x0, x21
  42e438:	b.eq	42e460 <nftw@plt+0x2b8e0>  // b.none
  42e43c:	ldrh	w0, [x21, #18]
  42e440:	ldr	x1, [x20, #184]
  42e444:	mov	w2, w0
  42e448:	ubfx	x0, x0, #2, #8
  42e44c:	and	w0, w0, #0xffffffef
  42e450:	cmp	x1, x21
  42e454:	bfi	w2, w0, #2, #8
  42e458:	strh	w2, [x21, #18]
  42e45c:	b.eq	42e4c4 <nftw@plt+0x2b944>  // b.none
  42e460:	ldr	x0, [x19, #32]
  42e464:	cbz	x0, 42e46c <nftw@plt+0x2b8ec>
  42e468:	bl	427e70 <nftw@plt+0x252f0>
  42e46c:	ldr	x1, [x19, #8]
  42e470:	mov	x0, x19
  42e474:	ldp	x21, x22, [sp, #32]
  42e478:	str	x1, [x20, #136]
  42e47c:	ldp	x19, x20, [sp, #16]
  42e480:	str	xzr, [x1]
  42e484:	ldp	x29, x30, [sp], #48
  42e488:	b	402910 <free@plt>
  42e48c:	ldr	x0, [x19, #32]
  42e490:	ldr	x22, [x21]
  42e494:	cbz	x0, 42e4a4 <nftw@plt+0x2b924>
  42e498:	ldr	x0, [x21, #8]
  42e49c:	cbz	x0, 42e4a4 <nftw@plt+0x2b924>
  42e4a0:	bl	402910 <free@plt>
  42e4a4:	mov	x0, x21
  42e4a8:	bl	402910 <free@plt>
  42e4ac:	str	xzr, [x19, #40]
  42e4b0:	cbnz	x22, 42e4d4 <nftw@plt+0x2b954>
  42e4b4:	ldr	x1, [x20, #184]
  42e4b8:	mov	x21, #0x0                   	// #0
  42e4bc:	cmp	x1, x21
  42e4c0:	b.ne	42e460 <nftw@plt+0x2b8e0>  // b.any
  42e4c4:	ldr	x0, [x19, #8]
  42e4c8:	cbnz	x0, 42e460 <nftw@plt+0x2b8e0>
  42e4cc:	str	xzr, [x20, #184]
  42e4d0:	b	42e460 <nftw@plt+0x2b8e0>
  42e4d4:	mov	x21, x22
  42e4d8:	b	42e418 <nftw@plt+0x2b898>
  42e4dc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e4e0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e4e4:	add	x2, x2, #0x600
  42e4e8:	add	x0, x0, #0x348
  42e4ec:	mov	w1, #0x9eb                 	// #2539
  42e4f0:	bl	402bf0 <nftw@plt+0x70>
  42e4f4:	nop
  42e4f8:	ldr	x0, [x0, #136]
  42e4fc:	ldr	w2, [x0, #48]
  42e500:	ldr	x1, [x0, #40]
  42e504:	cmp	w2, #0x2
  42e508:	b.ne	42e510 <nftw@plt+0x2b990>  // b.any
  42e50c:	ldr	x1, [x1]
  42e510:	mov	w0, #0x0                   	// #0
  42e514:	cbz	x1, 42e528 <nftw@plt+0x2b9a8>
  42e518:	ldr	x1, [x1, #24]
  42e51c:	cbz	x1, 42e528 <nftw@plt+0x2b9a8>
  42e520:	ldrb	w0, [x1, #19]
  42e524:	ubfx	x0, x0, #4, #1
  42e528:	ret
  42e52c:	nop
  42e530:	ldr	w3, [x0, #496]
  42e534:	sub	w2, w1, #0x1
  42e538:	add	w3, w3, w1
  42e53c:	str	w3, [x0, #496]
  42e540:	cbz	w1, 42e58c <nftw@plt+0x2ba0c>
  42e544:	ldr	x1, [x0, #448]
  42e548:	b	42e558 <nftw@plt+0x2b9d8>
  42e54c:	sub	w2, w2, #0x1
  42e550:	cmn	w2, #0x1
  42e554:	b.eq	42e588 <nftw@plt+0x2ba08>  // b.none
  42e558:	ldr	x3, [x0, #488]
  42e55c:	sub	x1, x1, #0x18
  42e560:	ldr	x4, [x3, #16]
  42e564:	cmp	x1, x4
  42e568:	b.ne	42e54c <nftw@plt+0x2b9cc>  // b.any
  42e56c:	ldr	x3, [x3, #8]
  42e570:	cbz	x3, 42e54c <nftw@plt+0x2b9cc>
  42e574:	ldr	x1, [x3, #24]
  42e578:	str	x3, [x0, #488]
  42e57c:	sub	w2, w2, #0x1
  42e580:	cmn	w2, #0x1
  42e584:	b.ne	42e558 <nftw@plt+0x2b9d8>  // b.any
  42e588:	str	x1, [x0, #448]
  42e58c:	ret
  42e590:	ldr	x2, [x0, #136]
  42e594:	ldr	x3, [x2, #8]
  42e598:	cbz	x3, 42e5e4 <nftw@plt+0x2ba64>
  42e59c:	stp	x29, x30, [sp, #-16]!
  42e5a0:	cmp	w1, #0x1
  42e5a4:	mov	x29, sp
  42e5a8:	b.ne	42e678 <nftw@plt+0x2baf8>  // b.any
  42e5ac:	ldr	w0, [x2, #48]
  42e5b0:	cmp	w0, #0x1
  42e5b4:	b.eq	42e5d0 <nftw@plt+0x2ba50>  // b.none
  42e5b8:	cbnz	w0, 42e648 <nftw@plt+0x2bac8>
  42e5bc:	ldr	x0, [x2, #16]
  42e5c0:	sub	x0, x0, #0x8
  42e5c4:	str	x0, [x2, #16]
  42e5c8:	ldp	x29, x30, [sp], #16
  42e5cc:	ret
  42e5d0:	ldr	x0, [x2, #16]
  42e5d4:	sub	x0, x0, #0x18
  42e5d8:	str	x0, [x2, #16]
  42e5dc:	ldp	x29, x30, [sp], #16
  42e5e0:	ret
  42e5e4:	ldr	w3, [x0, #496]
  42e5e8:	sub	w2, w1, #0x1
  42e5ec:	add	w3, w3, w1
  42e5f0:	str	w3, [x0, #496]
  42e5f4:	cbz	w1, 42e644 <nftw@plt+0x2bac4>
  42e5f8:	ldr	x1, [x0, #448]
  42e5fc:	b	42e60c <nftw@plt+0x2ba8c>
  42e600:	sub	w2, w2, #0x1
  42e604:	cmn	w2, #0x1
  42e608:	b.eq	42e63c <nftw@plt+0x2babc>  // b.none
  42e60c:	ldr	x3, [x0, #488]
  42e610:	sub	x1, x1, #0x18
  42e614:	ldr	x4, [x3, #16]
  42e618:	cmp	x1, x4
  42e61c:	b.ne	42e600 <nftw@plt+0x2ba80>  // b.any
  42e620:	ldr	x3, [x3, #8]
  42e624:	cbz	x3, 42e600 <nftw@plt+0x2ba80>
  42e628:	ldr	x1, [x3, #24]
  42e62c:	str	x3, [x0, #488]
  42e630:	sub	w2, w2, #0x1
  42e634:	cmn	w2, #0x1
  42e638:	b.ne	42e60c <nftw@plt+0x2ba8c>  // b.any
  42e63c:	str	x1, [x0, #448]
  42e640:	ret
  42e644:	ret
  42e648:	cmp	w0, #0x2
  42e64c:	b.ne	42e690 <nftw@plt+0x2bb10>  // b.any
  42e650:	ldr	x1, [x2, #16]
  42e654:	ldr	x0, [x2, #40]
  42e658:	sub	x1, x1, #0x8
  42e65c:	str	x1, [x2, #16]
  42e660:	cbz	x0, 42e6a8 <nftw@plt+0x2bb28>
  42e664:	ldr	x1, [x0, #16]
  42e668:	sub	x1, x1, #0x4
  42e66c:	str	x1, [x0, #16]
  42e670:	ldp	x29, x30, [sp], #16
  42e674:	ret
  42e678:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e67c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e680:	add	x2, x2, #0x618
  42e684:	add	x0, x0, #0x348
  42e688:	mov	w1, #0xb8f                 	// #2959
  42e68c:	bl	402bf0 <nftw@plt+0x70>
  42e690:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e694:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e698:	add	x2, x2, #0x618
  42e69c:	add	x0, x0, #0x348
  42e6a0:	mov	w1, #0xba1                 	// #2977
  42e6a4:	bl	402bf0 <nftw@plt+0x70>
  42e6a8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e6ac:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e6b0:	add	x2, x2, #0x618
  42e6b4:	add	x0, x0, #0x348
  42e6b8:	mov	w1, #0xb9e                 	// #2974
  42e6bc:	bl	402bf0 <nftw@plt+0x70>
  42e6c0:	stp	x29, x30, [sp, #-96]!
  42e6c4:	mov	x29, sp
  42e6c8:	stp	x19, x20, [sp, #16]
  42e6cc:	mov	x19, x0
  42e6d0:	ldr	x0, [x2]
  42e6d4:	stp	x21, x22, [sp, #32]
  42e6d8:	mov	x21, x2
  42e6dc:	mov	x22, x3
  42e6e0:	stp	x23, x24, [sp, #48]
  42e6e4:	mov	w23, w1
  42e6e8:	stp	x25, x26, [sp, #64]
  42e6ec:	str	x27, [sp, #80]
  42e6f0:	bl	427170 <nftw@plt+0x245f0>
  42e6f4:	mov	w20, w0
  42e6f8:	mov	x0, x22
  42e6fc:	bl	427170 <nftw@plt+0x245f0>
  42e700:	add	w20, w20, w0
  42e704:	add	w20, w20, #0x1
  42e708:	mov	x0, x19
  42e70c:	add	x20, x20, #0xf
  42e710:	mov	w3, #0x1                   	// #1
  42e714:	ldr	x1, [x21]
  42e718:	and	x20, x20, #0x1fffffff0
  42e71c:	sub	sp, sp, x20
  42e720:	mov	x25, sp
  42e724:	mov	x2, x25
  42e728:	bl	427240 <nftw@plt+0x246c0>
  42e72c:	ldr	x1, [x21]
  42e730:	mov	x24, x0
  42e734:	mov	x4, x0
  42e738:	ldrb	w0, [x1, #4]
  42e73c:	cmp	w0, #0x7
  42e740:	b.eq	42e84c <nftw@plt+0x2bccc>  // b.none
  42e744:	ldrb	w0, [x22, #4]
  42e748:	cmp	w0, #0x53
  42e74c:	b.ne	42e854 <nftw@plt+0x2bcd4>  // b.any
  42e750:	sub	x2, x4, x25
  42e754:	mov	x1, x25
  42e758:	mov	w0, #0xa                   	// #10
  42e75c:	strb	w0, [x4]
  42e760:	mov	w3, #0x1                   	// #1
  42e764:	mov	x0, x19
  42e768:	bl	41e468 <nftw@plt+0x1b8e8>
  42e76c:	mov	x0, x19
  42e770:	bl	426458 <nftw@plt+0x238d8>
  42e774:	mov	x0, x19
  42e778:	bl	427030 <nftw@plt+0x244b0>
  42e77c:	str	x0, [x19, #448]
  42e780:	mov	x0, x19
  42e784:	bl	428f58 <nftw@plt+0x263d8>
  42e788:	mov	x20, x0
  42e78c:	ldr	x1, [x19]
  42e790:	ldr	x2, [x1]
  42e794:	ldr	x0, [x1, #32]
  42e798:	cmp	x2, x0
  42e79c:	b.eq	42e870 <nftw@plt+0x2bcf0>  // b.none
  42e7a0:	ldr	w27, [x20]
  42e7a4:	mov	x0, x19
  42e7a8:	bl	41e590 <nftw@plt+0x1ba10>
  42e7ac:	mov	w26, #0x0                   	// #0
  42e7b0:	mov	x0, x19
  42e7b4:	mov	w1, #0x1                   	// #1
  42e7b8:	bl	42e590 <nftw@plt+0x2ba10>
  42e7bc:	strb	wzr, [x24]
  42e7c0:	ldr	x0, [x21]
  42e7c4:	ldr	w1, [x19, #1116]
  42e7c8:	ldp	x2, x3, [x0]
  42e7cc:	stp	x2, x3, [x20]
  42e7d0:	cmp	w1, #0x15
  42e7d4:	ldr	x0, [x0, #16]
  42e7d8:	str	x0, [x20, #16]
  42e7dc:	ldrh	w0, [x20, #6]
  42e7e0:	str	x20, [x21]
  42e7e4:	and	w0, w0, #0xfffffff7
  42e7e8:	str	w27, [x20]
  42e7ec:	strh	w0, [x20, #6]
  42e7f0:	b.ne	42e818 <nftw@plt+0x2bc98>  // b.any
  42e7f4:	mov	sp, x29
  42e7f8:	mov	w0, w26
  42e7fc:	ldp	x19, x20, [sp, #16]
  42e800:	ldp	x21, x22, [sp, #32]
  42e804:	ldp	x23, x24, [sp, #48]
  42e808:	ldp	x25, x26, [sp, #64]
  42e80c:	ldr	x27, [sp, #80]
  42e810:	ldp	x29, x30, [sp], #96
  42e814:	ret
  42e818:	mov	x1, x22
  42e81c:	mov	x0, x19
  42e820:	bl	428d50 <nftw@plt+0x261d0>
  42e824:	mov	x6, x0
  42e828:	mov	x5, x25
  42e82c:	mov	w2, w23
  42e830:	mov	x0, x19
  42e834:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e838:	mov	w3, #0x0                   	// #0
  42e83c:	add	x4, x4, #0x630
  42e840:	mov	w1, #0x3                   	// #3
  42e844:	bl	41f458 <nftw@plt+0x1c8d8>
  42e848:	b	42e7f4 <nftw@plt+0x2bc74>
  42e84c:	ldrb	w0, [x22, #4]
  42e850:	cbnz	w0, 42e884 <nftw@plt+0x2bd04>
  42e854:	mov	x2, x4
  42e858:	mov	x1, x22
  42e85c:	mov	x0, x19
  42e860:	mov	w3, #0x1                   	// #1
  42e864:	bl	427240 <nftw@plt+0x246c0>
  42e868:	mov	x4, x0
  42e86c:	b	42e750 <nftw@plt+0x2bbd0>
  42e870:	str	x20, [x21]
  42e874:	mov	x0, x19
  42e878:	mov	w26, #0x1                   	// #1
  42e87c:	bl	41e590 <nftw@plt+0x1ba10>
  42e880:	b	42e7f4 <nftw@plt+0x2bc74>
  42e884:	mov	w0, #0x20                  	// #32
  42e888:	strb	w0, [x4], #1
  42e88c:	b	42e744 <nftw@plt+0x2bbc4>
  42e890:	ldrb	w1, [x0, #18]
  42e894:	str	xzr, [x0, #24]
  42e898:	and	w1, w1, #0xfffffffc
  42e89c:	strb	w1, [x0, #18]
  42e8a0:	ldrh	w1, [x0, #18]
  42e8a4:	mov	w2, w1
  42e8a8:	ubfx	x1, x1, #2, #8
  42e8ac:	and	w1, w1, #0xffffffcf
  42e8b0:	bfi	w2, w1, #2, #8
  42e8b4:	strh	w2, [x0, #18]
  42e8b8:	ret
  42e8bc:	nop
  42e8c0:	stp	x29, x30, [sp, #-64]!
  42e8c4:	mov	x29, sp
  42e8c8:	stp	x19, x20, [sp, #16]
  42e8cc:	mov	w20, w1
  42e8d0:	ldrb	w1, [x2, #18]
  42e8d4:	mov	x19, x2
  42e8d8:	and	w2, w1, #0x3
  42e8dc:	cmp	w2, #0x1
  42e8e0:	b.eq	42e9b4 <nftw@plt+0x2be34>  // b.none
  42e8e4:	stp	x23, x24, [sp, #48]
  42e8e8:	add	w24, w20, #0x1
  42e8ec:	mov	x23, x3
  42e8f0:	ldr	w3, [x0, #512]
  42e8f4:	add	w2, w24, w24, lsl #1
  42e8f8:	stp	x21, x22, [sp, #32]
  42e8fc:	mov	x21, x0
  42e900:	lsl	w22, w2, #3
  42e904:	cmp	w3, w2, lsl #3
  42e908:	ldr	x0, [x0, #504]
  42e90c:	b.cc	42e980 <nftw@plt+0x2be00>  // b.lo, b.ul, b.last
  42e910:	mov	w2, #0x18                  	// #24
  42e914:	and	w1, w1, #0x3
  42e918:	ldr	x5, [x21, #56]
  42e91c:	umull	x2, w20, w2
  42e920:	ldr	x6, [x19, #24]
  42e924:	add	x4, x0, x2
  42e928:	ldr	x3, [x5, #16]
  42e92c:	str	x19, [x0, x2]
  42e930:	ldr	x2, [x5, #24]
  42e934:	ubfiz	x0, x20, #3, #32
  42e938:	str	x6, [x4, #8]
  42e93c:	add	x0, x0, #0x8
  42e940:	str	w1, [x4, #16]
  42e944:	sub	x1, x2, x3
  42e948:	cmp	x1, x0
  42e94c:	b.cc	42e998 <nftw@plt+0x2be18>  // b.lo, b.ul, b.last
  42e950:	ldrb	w1, [x19, #18]
  42e954:	mov	w2, #0x1                   	// #1
  42e958:	str	x23, [x3, x20, lsl #3]
  42e95c:	mov	w0, w2
  42e960:	strh	w24, [x19, #24]
  42e964:	bfxil	w1, w2, #0, #2
  42e968:	strb	w1, [x19, #18]
  42e96c:	ldp	x19, x20, [sp, #16]
  42e970:	ldp	x21, x22, [sp, #32]
  42e974:	ldp	x23, x24, [sp, #48]
  42e978:	ldp	x29, x30, [sp], #64
  42e97c:	ret
  42e980:	mov	w1, w22
  42e984:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  42e988:	ldrb	w1, [x19, #18]
  42e98c:	str	x0, [x21, #504]
  42e990:	str	w22, [x21, #512]
  42e994:	b	42e910 <nftw@plt+0x2bd90>
  42e998:	mov	x0, x21
  42e99c:	add	x1, x21, #0x38
  42e9a0:	mov	x2, #0x8                   	// #8
  42e9a4:	bl	427e18 <nftw@plt+0x25298>
  42e9a8:	ldr	x0, [x21, #56]
  42e9ac:	ldr	x3, [x0, #16]
  42e9b0:	b	42e950 <nftw@plt+0x2bdd0>
  42e9b4:	ldr	x3, [x19]
  42e9b8:	mov	w1, #0x3                   	// #3
  42e9bc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42e9c0:	add	x2, x2, #0x670
  42e9c4:	bl	41f298 <nftw@plt+0x1c718>
  42e9c8:	mov	w0, #0x0                   	// #0
  42e9cc:	ldp	x19, x20, [sp, #16]
  42e9d0:	ldp	x29, x30, [sp], #64
  42e9d4:	ret
  42e9d8:	sub	w2, w1, #0x1
  42e9dc:	cbz	w1, 42ea18 <nftw@plt+0x2be98>
  42e9e0:	ldr	x4, [x0, #504]
  42e9e4:	mov	w0, #0x18                  	// #24
  42e9e8:	umaddl	x0, w2, w0, x4
  42e9ec:	nop
  42e9f0:	ldr	x1, [x0]
  42e9f4:	cmp	x4, x0
  42e9f8:	ldr	w3, [x0, #16]
  42e9fc:	sub	x0, x0, #0x18
  42ea00:	ldrb	w2, [x1, #18]
  42ea04:	bfxil	w2, w3, #0, #2
  42ea08:	strb	w2, [x1, #18]
  42ea0c:	ldr	x2, [x0, #32]
  42ea10:	str	x2, [x1, #24]
  42ea14:	b.ne	42e9f0 <nftw@plt+0x2be70>  // b.any
  42ea18:	ret
  42ea1c:	nop
  42ea20:	mov	x3, x0
  42ea24:	mov	x0, x2
  42ea28:	mov	x5, #0x9300000000000000    	// #-7854277750134145024
  42ea2c:	mov	w2, #0x0                   	// #0
  42ea30:	ldr	w4, [x3, #48]
  42ea34:	str	xzr, [x0]
  42ea38:	str	w4, [x0, #8]
  42ea3c:	ldur	x4, [x0, #12]
  42ea40:	ldrb	w6, [x3, #1151]
  42ea44:	and	x5, x4, x5
  42ea48:	cmp	w6, #0x0
  42ea4c:	cset	x4, eq  // eq = none
  42ea50:	orr	x4, x5, x4, lsl #61
  42ea54:	stur	x4, [x0, #12]
  42ea58:	ldr	x3, [x3]
  42ea5c:	cbz	x3, 42ea6c <nftw@plt+0x2beec>
  42ea60:	ldrb	w2, [x3, #106]
  42ea64:	cmp	w2, #0x0
  42ea68:	cset	w2, ne  // ne = any
  42ea6c:	ldrb	w3, [x0, #19]
  42ea70:	and	w1, w1, #0x3
  42ea74:	orr	w2, w1, w2, lsl #4
  42ea78:	mov	w1, #0xffffffec            	// #-20
  42ea7c:	and	w1, w3, w1
  42ea80:	orr	w2, w2, w1
  42ea84:	strb	w2, [x0, #19]
  42ea88:	ret
  42ea8c:	nop
  42ea90:	stp	x29, x30, [sp, #-240]!
  42ea94:	mov	x29, sp
  42ea98:	stp	x19, x20, [sp, #16]
  42ea9c:	mov	x19, x1
  42eaa0:	stp	x21, x22, [sp, #32]
  42eaa4:	stp	x25, x26, [sp, #64]
  42eaa8:	mov	x25, x0
  42eaac:	stp	x27, x28, [sp, #80]
  42eab0:	ldrb	w1, [x0, #1160]
  42eab4:	cbz	w1, 42eb5c <nftw@plt+0x2bfdc>
  42eab8:	bl	434858 <nftw@plt+0x31cd8>
  42eabc:	mov	x28, x0
  42eac0:	cbz	x28, 42f960 <nftw@plt+0x2cde0>
  42eac4:	ldrb	w0, [x19, #18]
  42eac8:	tbnz	w0, #1, 42ed14 <nftw@plt+0x2c194>
  42eacc:	ldrh	w20, [x19, #18]
  42ead0:	ubfx	x20, x20, #2, #8
  42ead4:	ldrb	w0, [x19, #18]
  42ead8:	mov	w1, #0x2                   	// #2
  42eadc:	ldr	x21, [x19]
  42eae0:	str	x28, [x19, #24]
  42eae4:	bfxil	w0, w1, #0, #2
  42eae8:	strb	w0, [x19, #18]
  42eaec:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42eaf0:	mov	x0, x21
  42eaf4:	add	x1, x1, #0x9b0
  42eaf8:	mov	x2, #0x7                   	// #7
  42eafc:	bl	4026a0 <strncmp@plt>
  42eb00:	cbnz	w0, 42eb30 <nftw@plt+0x2bfb0>
  42eb04:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42eb08:	mov	x0, x21
  42eb0c:	add	x1, x1, #0x9b8
  42eb10:	bl	402890 <strcmp@plt>
  42eb14:	cbz	w0, 42eb30 <nftw@plt+0x2bfb0>
  42eb18:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42eb1c:	mov	x0, x21
  42eb20:	add	x1, x1, #0x9d0
  42eb24:	bl	402890 <strcmp@plt>
  42eb28:	cbnz	w0, 42f3f8 <nftw@plt+0x2c878>
  42eb2c:	nop
  42eb30:	ldrh	w1, [x19, #18]
  42eb34:	and	w20, w20, #0xffffffbf
  42eb38:	mov	w0, #0x1                   	// #1
  42eb3c:	bfi	w1, w20, #2, #8
  42eb40:	strh	w1, [x19, #18]
  42eb44:	ldp	x19, x20, [sp, #16]
  42eb48:	ldp	x21, x22, [sp, #32]
  42eb4c:	ldp	x25, x26, [sp, #64]
  42eb50:	ldp	x27, x28, [sp, #80]
  42eb54:	ldp	x29, x30, [sp], #240
  42eb58:	ret
  42eb5c:	add	x1, sp, #0xb0
  42eb60:	stp	x23, x24, [sp, #48]
  42eb64:	ldr	x21, [x0, #448]
  42eb68:	str	x1, [x0, #448]
  42eb6c:	bl	428f58 <nftw@plt+0x263d8>
  42eb70:	mov	x20, x0
  42eb74:	ldrh	w0, [x0, #6]
  42eb78:	str	x21, [x25, #448]
  42eb7c:	tbz	w0, #0, 42ede4 <nftw@plt+0x2c264>
  42eb80:	mov	w0, #0xffffffff            	// #-1
  42eb84:	mov	w21, #0x0                   	// #0
  42eb88:	mov	x26, #0x0                   	// #0
  42eb8c:	stp	wzr, w0, [sp, #160]
  42eb90:	ldr	x1, [x25, #56]
  42eb94:	ldp	x28, x0, [x1, #16]
  42eb98:	sub	x0, x0, x28
  42eb9c:	cmp	x0, #0x2f
  42eba0:	b.ls	42f574 <nftw@plt+0x2c9f4>  // b.plast
  42eba4:	ldr	w0, [x25, #48]
  42eba8:	mov	x4, #0x9300000000000000    	// #-7854277750134145024
  42ebac:	str	xzr, [x28]
  42ebb0:	mov	w2, #0x0                   	// #0
  42ebb4:	str	w0, [x28, #8]
  42ebb8:	ldur	x3, [x28, #12]
  42ebbc:	ldrb	w0, [x25, #1151]
  42ebc0:	and	x4, x3, x4
  42ebc4:	cmp	w0, #0x0
  42ebc8:	cset	x3, eq  // eq = none
  42ebcc:	orr	x3, x4, x3, lsl #61
  42ebd0:	stur	x3, [x28, #12]
  42ebd4:	ldr	x0, [x25]
  42ebd8:	cbz	x0, 42ebe8 <nftw@plt+0x2c068>
  42ebdc:	ldrb	w0, [x0, #106]
  42ebe0:	cmp	w0, #0x0
  42ebe4:	cset	w2, ne  // ne = any
  42ebe8:	ldrb	w3, [x28, #19]
  42ebec:	mov	w0, #0xffffffec            	// #-20
  42ebf0:	and	w3, w3, w0
  42ebf4:	orr	w2, w3, w2, lsl #4
  42ebf8:	strb	w2, [x28, #19]
  42ebfc:	cbz	x20, 42f6c4 <nftw@plt+0x2cb44>
  42ec00:	ldp	x2, x3, [x20]
  42ec04:	stp	x2, x3, [x28, #24]
  42ec08:	add	x0, x28, #0x18
  42ec0c:	ldr	x3, [x20, #16]
  42ec10:	str	x3, [x28, #40]
  42ec14:	ldrb	w5, [x28, #19]
  42ec18:	mov	x2, x0
  42ec1c:	mov	w1, #0x1                   	// #1
  42ec20:	ldrb	w0, [x0, #4]
  42ec24:	str	w1, [x28, #12]
  42ec28:	ubfx	x23, x5, #3, #1
  42ec2c:	cmp	w0, #0x16
  42ec30:	b.eq	42f988 <nftw@plt+0x2ce08>  // b.none
  42ec34:	mov	w20, #0x0                   	// #0
  42ec38:	mov	w21, #0x0                   	// #0
  42ec3c:	mov	w24, #0x0                   	// #0
  42ec40:	mov	w22, #0x0                   	// #0
  42ec44:	mov	w27, #0x0                   	// #0
  42ec48:	cmp	w0, #0x26
  42ec4c:	b.ne	42ef50 <nftw@plt+0x2c3d0>  // b.any
  42ec50:	ldr	w3, [x28, #12]
  42ec54:	cmp	w3, #0x1
  42ec58:	b.eq	42f6ac <nftw@plt+0x2cb2c>  // b.none
  42ec5c:	sub	w3, w3, #0x1
  42ec60:	cbz	w27, 42eea4 <nftw@plt+0x2c324>
  42ec64:	add	w21, w21, #0x1
  42ec68:	str	w3, [x2, #8]
  42ec6c:	cbz	w23, 42eed8 <nftw@plt+0x2c358>
  42ec70:	cmp	w24, #0x1
  42ec74:	b.eq	42f1cc <nftw@plt+0x2c64c>  // b.none
  42ec78:	cmp	w24, #0x1
  42ec7c:	b.le	42f174 <nftw@plt+0x2c5f4>
  42ec80:	cmp	w0, #0x26
  42ec84:	cset	w3, eq  // eq = none
  42ec88:	cmp	w3, #0x0
  42ec8c:	ccmp	w24, #0x2, #0x0, ne  // ne = any
  42ec90:	b.eq	42ee34 <nftw@plt+0x2c2b4>  // b.none
  42ec94:	cmp	w24, #0x2
  42ec98:	b.eq	42f1f4 <nftw@plt+0x2c674>  // b.none
  42ec9c:	cbnz	w3, 42f250 <nftw@plt+0x2c6d0>
  42eca0:	cmp	w0, #0x14
  42eca4:	b.eq	42f200 <nftw@plt+0x2c680>  // b.none
  42eca8:	cmp	w0, #0x15
  42ecac:	b.ne	42ef90 <nftw@plt+0x2c410>  // b.any
  42ecb0:	sub	w24, w24, #0x1
  42ecb4:	cmp	w24, #0x2
  42ecb8:	b.ne	42ef90 <nftw@plt+0x2c410>  // b.any
  42ecbc:	cbnz	w20, 42ee34 <nftw@plt+0x2c2b4>
  42ecc0:	ldr	x1, [x25, #56]
  42ecc4:	mov	w27, w23
  42ecc8:	ldr	w2, [x28, #12]
  42eccc:	mov	w24, #0x0                   	// #0
  42ecd0:	mov	w23, #0x1                   	// #1
  42ecd4:	add	x2, x2, #0x2
  42ecd8:	ldr	x28, [x1, #16]
  42ecdc:	add	x2, x2, x2, lsl #1
  42ece0:	ldr	x0, [x1, #24]
  42ece4:	lsl	x2, x2, #3
  42ece8:	sub	x0, x0, x28
  42ecec:	cmp	x0, x2
  42ecf0:	b.cs	42efc8 <nftw@plt+0x2c448>  // b.hs, b.nlast
  42ecf4:	nop
  42ecf8:	mov	x0, x25
  42ecfc:	add	x1, x25, #0x38
  42ed00:	mov	x2, #0x18                  	// #24
  42ed04:	bl	427e18 <nftw@plt+0x25298>
  42ed08:	ldr	x0, [x25, #56]
  42ed0c:	ldr	x28, [x0, #16]
  42ed10:	b	42efc8 <nftw@plt+0x2c448>
  42ed14:	ldrb	w1, [x25, #1151]
  42ed18:	and	w0, w0, #0x3
  42ed1c:	cbz	w1, 42ed28 <nftw@plt+0x2c1a8>
  42ed20:	cmp	w0, #0x2
  42ed24:	b.eq	42f4f8 <nftw@plt+0x2c978>  // b.none
  42ed28:	ldrh	w1, [x19, #18]
  42ed2c:	ubfx	x20, x1, #2, #8
  42ed30:	tbnz	w1, #5, 42f6a4 <nftw@plt+0x2cb24>
  42ed34:	cmp	w0, #0x3
  42ed38:	b.eq	42f718 <nftw@plt+0x2cb98>  // b.none
  42ed3c:	tbnz	w20, #6, 42edcc <nftw@plt+0x2c24c>
  42ed40:	ldr	x20, [x19, #24]
  42ed44:	ldrb	w2, [x20, #18]
  42ed48:	cbz	w2, 42f590 <nftw@plt+0x2ca10>
  42ed4c:	ldr	x3, [x25, #1048]
  42ed50:	mov	x1, x20
  42ed54:	mov	x0, x25
  42ed58:	sub	w2, w2, #0x1
  42ed5c:	blr	x3
  42ed60:	strb	wzr, [x20, #18]
  42ed64:	ldrh	w1, [x20, #16]
  42ed68:	ldrh	w0, [x28, #16]
  42ed6c:	cmp	w1, w0
  42ed70:	b.eq	42f5a0 <nftw@plt+0x2ca20>  // b.none
  42ed74:	ldrb	w0, [x19, #18]
  42ed78:	and	w0, w0, #0x3
  42ed7c:	cmp	w0, #0x3
  42ed80:	b.ne	42f6a4 <nftw@plt+0x2cb24>  // b.any
  42ed84:	ldrh	w0, [x19, #18]
  42ed88:	mov	w1, #0xb                   	// #11
  42ed8c:	tbnz	w0, #5, 42f6a4 <nftw@plt+0x2cb24>
  42ed90:	ldr	w2, [x25, #48]
  42ed94:	mov	x0, x25
  42ed98:	ldr	x5, [x19]
  42ed9c:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42eda0:	mov	w3, #0x0                   	// #0
  42eda4:	add	x4, x4, #0x970
  42eda8:	bl	41f550 <nftw@plt+0x1c9d0>
  42edac:	tst	w0, #0xff
  42edb0:	b.eq	42edc4 <nftw@plt+0x2c244>  // b.none
  42edb4:	ldrb	w0, [x19, #18]
  42edb8:	and	w0, w0, #0x3
  42edbc:	cmp	w0, #0x2
  42edc0:	b.eq	42f864 <nftw@plt+0x2cce4>  // b.none
  42edc4:	ldrh	w20, [x19, #18]
  42edc8:	ubfx	x20, x20, #2, #8
  42edcc:	ldrh	w0, [x19, #18]
  42edd0:	and	w20, w20, #0xffffffcf
  42edd4:	and	w20, w20, #0xff
  42edd8:	bfi	w0, w20, #2, #8
  42eddc:	strh	w0, [x19, #18]
  42ede0:	b	42ead4 <nftw@plt+0x2bf54>
  42ede4:	ldrb	w0, [x20, #4]
  42ede8:	cmp	w0, #0x14
  42edec:	b.eq	42f41c <nftw@plt+0x2c89c>  // b.none
  42edf0:	cmp	w0, #0x16
  42edf4:	b.eq	42eb80 <nftw@plt+0x2c000>  // b.none
  42edf8:	cmp	w0, #0x4f
  42edfc:	b.eq	42f510 <nftw@plt+0x2c990>  // b.none
  42ee00:	ldrb	w1, [x25, #1152]
  42ee04:	cbnz	w1, 42f524 <nftw@plt+0x2c9a4>
  42ee08:	cmp	w0, #0x3d
  42ee0c:	b.eq	42f888 <nftw@plt+0x2cd08>  // b.none
  42ee10:	b.hi	42f780 <nftw@plt+0x2cc00>  // b.pmore
  42ee14:	and	w0, w0, #0xfffffffd
  42ee18:	cmp	w0, #0x34
  42ee1c:	cset	w1, eq  // eq = none
  42ee20:	lsl	w1, w1, #1
  42ee24:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42ee28:	mov	x0, x25
  42ee2c:	add	x2, x2, #0x7f0
  42ee30:	b	42f548 <nftw@plt+0x2c9c8>
  42ee34:	ldr	w2, [x2]
  42ee38:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42ee3c:	mov	x0, x25
  42ee40:	add	x3, x3, #0x940
  42ee44:	mov	w1, #0x3                   	// #3
  42ee48:	bl	41f650 <nftw@plt+0x1cad0>
  42ee4c:	nop
  42ee50:	ldr	w0, [sp, #160]
  42ee54:	mov	w20, #0x0                   	// #0
  42ee58:	strb	wzr, [x25, #22]
  42ee5c:	cbz	w0, 42f4d8 <nftw@plt+0x2c958>
  42ee60:	ldr	w1, [sp, #164]
  42ee64:	mov	w0, #0x18                  	// #24
  42ee68:	ldr	x3, [x25, #504]
  42ee6c:	umaddl	x24, w1, w0, x3
  42ee70:	ldr	x0, [x24]
  42ee74:	cmp	x3, x24
  42ee78:	ldr	w2, [x24, #16]
  42ee7c:	sub	x24, x24, #0x18
  42ee80:	ldrb	w1, [x0, #18]
  42ee84:	bfxil	w1, w2, #0, #2
  42ee88:	strb	w1, [x0, #18]
  42ee8c:	ldr	x1, [x24, #32]
  42ee90:	str	x1, [x0, #24]
  42ee94:	b.ne	42ee70 <nftw@plt+0x2c2f0>  // b.any
  42ee98:	cbz	w20, 42f4d8 <nftw@plt+0x2c958>
  42ee9c:	ldp	x23, x24, [sp, #48]
  42eea0:	b	42eac0 <nftw@plt+0x2bf40>
  42eea4:	ldrh	w8, [x2, #6]
  42eea8:	mov	w9, #0x108                 	// #264
  42eeac:	ldurh	w6, [x2, #-18]
  42eeb0:	str	w3, [x28, #12]
  42eeb4:	orr	w1, w6, #0x8
  42eeb8:	tst	x8, #0x2
  42eebc:	orr	w6, w6, w9
  42eec0:	csel	w1, w1, w6, eq  // eq = none
  42eec4:	sturh	w1, [x2, #-18]
  42eec8:	tbz	w8, #0, 42ec6c <nftw@plt+0x2c0ec>
  42eecc:	orr	w1, w1, #0x200
  42eed0:	sturh	w1, [x2, #-18]
  42eed4:	cbnz	w23, 42ec70 <nftw@plt+0x2c0f0>
  42eed8:	ldr	w2, [x28, #12]
  42eedc:	mov	w27, #0x1                   	// #1
  42eee0:	add	x2, x2, #0x2
  42eee4:	ldr	x1, [x25, #56]
  42eee8:	add	x2, x2, x2, lsl #1
  42eeec:	lsl	x2, x2, #3
  42eef0:	ldr	x28, [x1, #16]
  42eef4:	b	42efb8 <nftw@plt+0x2c438>
  42eef8:	ldrh	w1, [x3, #30]
  42eefc:	tbz	w1, #0, 42ef08 <nftw@plt+0x2c388>
  42ef00:	orr	w1, w1, #0x200
  42ef04:	strh	w1, [x3, #30]
  42ef08:	ldurh	w6, [x2, #-18]
  42ef0c:	add	x0, x0, x0, lsl #1
  42ef10:	orr	w9, w1, #0x100
  42ef14:	and	w9, w9, #0xffff
  42ef18:	add	x3, x28, x0, lsl #3
  42ef1c:	tst	x6, #0x2
  42ef20:	and	w6, w6, #0x1
  42ef24:	csel	w1, w9, w1, ne  // ne = any
  42ef28:	and	w1, w1, #0xfffffffe
  42ef2c:	orr	w1, w1, #0x4
  42ef30:	orr	w1, w1, w6
  42ef34:	strh	w1, [x3, #30]
  42ef38:	ldp	x0, x1, [x3, #24]
  42ef3c:	stp	x0, x1, [x2, #-24]
  42ef40:	ldr	x0, [x3, #40]
  42ef44:	stur	x0, [x2, #-8]
  42ef48:	str	w8, [x28, #12]
  42ef4c:	ldrb	w0, [x3, #28]
  42ef50:	cbz	w23, 42f1e8 <nftw@plt+0x2c668>
  42ef54:	cmp	w0, #0x35
  42ef58:	b.ne	42f198 <nftw@plt+0x2c618>  // b.any
  42ef5c:	ldr	x1, [x2, #8]
  42ef60:	ldr	x0, [x25, #1280]
  42ef64:	cmp	x1, x0
  42ef68:	b.eq	42f22c <nftw@plt+0x2c6ac>  // b.none
  42ef6c:	cmp	w24, #0x1
  42ef70:	b.eq	42f1cc <nftw@plt+0x2c64c>  // b.none
  42ef74:	mov	w23, #0x0                   	// #0
  42ef78:	b.le	42f174 <nftw@plt+0x2c5f4>
  42ef7c:	cmp	w24, #0x2
  42ef80:	mov	w23, #0x0                   	// #0
  42ef84:	b.ne	42ef90 <nftw@plt+0x2c410>  // b.any
  42ef88:	mov	w24, #0x3                   	// #3
  42ef8c:	mov	w23, #0x0                   	// #0
  42ef90:	ldr	w2, [x28, #12]
  42ef94:	mov	w27, w23
  42ef98:	ldr	x1, [x25, #56]
  42ef9c:	add	x2, x2, #0x2
  42efa0:	mov	w20, #0x0                   	// #0
  42efa4:	mov	w23, #0x1                   	// #1
  42efa8:	add	x2, x2, x2, lsl #1
  42efac:	ldr	x28, [x1, #16]
  42efb0:	lsl	x2, x2, #3
  42efb4:	nop
  42efb8:	ldr	x0, [x1, #24]
  42efbc:	sub	x0, x0, x28
  42efc0:	cmp	x0, x2
  42efc4:	b.cc	42ecf8 <nftw@plt+0x2c178>  // b.lo, b.ul, b.last
  42efc8:	ldr	w1, [x28, #12]
  42efcc:	mov	x0, x25
  42efd0:	ldr	x26, [x25, #448]
  42efd4:	add	x1, x1, #0x1
  42efd8:	add	x1, x1, x1, lsl #1
  42efdc:	add	x1, x28, x1, lsl #3
  42efe0:	str	x1, [x25, #448]
  42efe4:	bl	428f58 <nftw@plt+0x263d8>
  42efe8:	ldrb	w1, [x0, #4]
  42efec:	str	x26, [x25, #448]
  42eff0:	cmp	w1, #0x35
  42eff4:	b.eq	42f278 <nftw@plt+0x2c6f8>  // b.none
  42eff8:	ldrb	w2, [x25, #1138]
  42effc:	cbz	w2, 42f018 <nftw@plt+0x2c498>
  42f000:	ldrh	w10, [x28, #16]
  42f004:	cbz	w10, 42f018 <nftw@plt+0x2c498>
  42f008:	cmp	w1, #0x3e
  42f00c:	mov	w2, #0x38                  	// #56
  42f010:	ccmp	w1, w2, #0x4, ne  // ne = any
  42f014:	b.eq	42f2ac <nftw@plt+0x2c72c>  // b.none
  42f018:	ldr	w8, [x28, #12]
  42f01c:	mov	w0, w8
  42f020:	add	w1, w8, #0x1
  42f024:	add	x2, x0, #0x1
  42f028:	str	w1, [x28, #12]
  42f02c:	cmp	w1, #0x1
  42f030:	add	x2, x2, x2, lsl #1
  42f034:	add	x2, x28, x2, lsl #3
  42f038:	b.ls	42f048 <nftw@plt+0x2c4c8>  // b.plast
  42f03c:	ldurb	w1, [x2, #-20]
  42f040:	cmp	w1, #0x25
  42f044:	b.eq	42f134 <nftw@plt+0x2c5b4>  // b.none
  42f048:	ldrb	w0, [x2, #4]
  42f04c:	cmp	w0, #0x16
  42f050:	b.ne	42ec48 <nftw@plt+0x2c0c8>  // b.any
  42f054:	cbnz	w27, 42f6ac <nftw@plt+0x2cb2c>
  42f058:	cbz	w23, 42f710 <nftw@plt+0x2cb90>
  42f05c:	cbnz	w24, 42f740 <nftw@plt+0x2cbc0>
  42f060:	ldr	w1, [x28, #12]
  42f064:	mov	x0, x25
  42f068:	sub	w1, w1, #0x1
  42f06c:	str	w1, [x28, #12]
  42f070:	add	x1, x1, #0x1
  42f074:	add	x1, x1, x1, lsl #1
  42f078:	lsl	x1, x1, #3
  42f07c:	bl	42ab10 <nftw@plt+0x27f90>
  42f080:	mov	x28, x0
  42f084:	ldr	w0, [x0, #12]
  42f088:	cbz	w0, 42f098 <nftw@plt+0x2c518>
  42f08c:	ldrh	w1, [x28, #30]
  42f090:	and	w1, w1, #0xfffffffe
  42f094:	strh	w1, [x28, #30]
  42f098:	cbz	w21, 42f728 <nftw@plt+0x2cba8>
  42f09c:	ldr	x2, [x25, #56]
  42f0a0:	mov	w1, #0x18                  	// #24
  42f0a4:	umull	x21, w21, w1
  42f0a8:	ldp	x1, x2, [x2, #16]
  42f0ac:	sub	x2, x2, x1
  42f0b0:	cmp	x21, x2
  42f0b4:	b.hi	42f968 <nftw@plt+0x2cde8>  // b.pmore
  42f0b8:	add	x10, x28, #0x18
  42f0bc:	cbz	w0, 42f834 <nftw@plt+0x2ccb4>
  42f0c0:	sub	w0, w0, #0x1
  42f0c4:	add	x2, x28, #0x30
  42f0c8:	mov	w9, #0x18                  	// #24
  42f0cc:	mov	x3, x10
  42f0d0:	mov	w8, w9
  42f0d4:	mov	w6, #0x0                   	// #0
  42f0d8:	umaddl	x9, w0, w9, x2
  42f0dc:	mov	w12, #0x0                   	// #0
  42f0e0:	b	42f108 <nftw@plt+0x2c588>
  42f0e4:	ldp	x4, x5, [x3]
  42f0e8:	add	w6, w6, #0x1
  42f0ec:	stp	x4, x5, [x0]
  42f0f0:	ldr	x4, [x3, #16]
  42f0f4:	str	x4, [x0, #16]
  42f0f8:	umaddl	x0, w6, w8, x10
  42f0fc:	add	x3, x3, #0x18
  42f100:	cmp	x9, x3
  42f104:	b.eq	42f838 <nftw@plt+0x2ccb8>  // b.none
  42f108:	ldrb	w4, [x3, #4]
  42f10c:	umaddl	x0, w6, w8, x10
  42f110:	cmp	w4, #0x26
  42f114:	b.ne	42f0e4 <nftw@plt+0x2c564>  // b.any
  42f118:	umaddl	x11, w12, w8, x1
  42f11c:	add	w12, w12, #0x1
  42f120:	ldp	x4, x5, [x3]
  42f124:	stp	x4, x5, [x11]
  42f128:	ldr	x4, [x3, #16]
  42f12c:	str	x4, [x11, #16]
  42f130:	b	42f0fc <nftw@plt+0x2c57c>
  42f134:	ldrb	w1, [x28, #19]
  42f138:	tbz	w1, #2, 42f048 <nftw@plt+0x2c4c8>
  42f13c:	add	x3, x0, x0, lsl #1
  42f140:	add	x3, x28, x3, lsl #3
  42f144:	ldrb	w1, [x3, #28]
  42f148:	cmp	w1, #0x50
  42f14c:	b.eq	42eef8 <nftw@plt+0x2c378>  // b.none
  42f150:	ldr	w0, [x25, #1116]
  42f154:	cmp	w0, #0x15
  42f158:	b.eq	42f048 <nftw@plt+0x2c4c8>  // b.none
  42f15c:	mov	x0, x25
  42f160:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f164:	mov	w1, #0x3                   	// #3
  42f168:	add	x2, x2, #0x858
  42f16c:	bl	41f298 <nftw@plt+0x1c718>
  42f170:	b	42ee50 <nftw@plt+0x2c2d0>
  42f174:	ldr	w2, [x28, #12]
  42f178:	mov	w27, w23
  42f17c:	ldr	x1, [x25, #56]
  42f180:	add	x2, x2, #0x2
  42f184:	mov	w23, #0x1                   	// #1
  42f188:	add	x2, x2, x2, lsl #1
  42f18c:	ldr	x28, [x1, #16]
  42f190:	lsl	x2, x2, #3
  42f194:	b	42efb8 <nftw@plt+0x2c438>
  42f198:	cmp	w24, #0x1
  42f19c:	b.ne	42fa04 <nftw@plt+0x2ce84>  // b.any
  42f1a0:	cmp	w0, #0x14
  42f1a4:	b.ne	42f1cc <nftw@plt+0x2c64c>  // b.any
  42f1a8:	ldr	w2, [x28, #12]
  42f1ac:	mov	w24, #0x2                   	// #2
  42f1b0:	add	x2, x2, #0x2
  42f1b4:	mov	w27, #0x0                   	// #0
  42f1b8:	ldr	x1, [x25, #56]
  42f1bc:	add	x2, x2, x2, lsl #1
  42f1c0:	lsl	x2, x2, #3
  42f1c4:	ldr	x28, [x1, #16]
  42f1c8:	b	42efb8 <nftw@plt+0x2c438>
  42f1cc:	mov	w2, w22
  42f1d0:	mov	x0, x25
  42f1d4:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f1d8:	mov	w1, #0x3                   	// #3
  42f1dc:	add	x3, x3, #0x908
  42f1e0:	bl	41f650 <nftw@plt+0x1cad0>
  42f1e4:	b	42ee50 <nftw@plt+0x2c2d0>
  42f1e8:	ldr	w2, [x28, #12]
  42f1ec:	mov	w27, #0x0                   	// #0
  42f1f0:	b	42eee0 <nftw@plt+0x2c360>
  42f1f4:	cmp	w0, #0x14
  42f1f8:	mov	w24, #0x3                   	// #3
  42f1fc:	b.ne	42eca8 <nftw@plt+0x2c128>  // b.any
  42f200:	ldr	w2, [x28, #12]
  42f204:	mov	w27, w23
  42f208:	ldr	x1, [x25, #56]
  42f20c:	add	x2, x2, #0x2
  42f210:	add	w24, w24, #0x1
  42f214:	mov	w20, #0x0                   	// #0
  42f218:	add	x2, x2, x2, lsl #1
  42f21c:	mov	w23, #0x1                   	// #1
  42f220:	ldr	x28, [x1, #16]
  42f224:	lsl	x2, x2, #3
  42f228:	b	42efb8 <nftw@plt+0x2c438>
  42f22c:	ldr	w22, [x2]
  42f230:	cbz	w24, 42f2a0 <nftw@plt+0x2c720>
  42f234:	mov	w2, w22
  42f238:	mov	x0, x25
  42f23c:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f240:	mov	w1, #0x3                   	// #3
  42f244:	add	x3, x3, #0x8d8
  42f248:	bl	41f650 <nftw@plt+0x1cad0>
  42f24c:	b	42ee50 <nftw@plt+0x2c2d0>
  42f250:	ldr	w2, [x28, #12]
  42f254:	mov	w27, w23
  42f258:	ldr	x1, [x25, #56]
  42f25c:	add	x2, x2, #0x2
  42f260:	mov	w23, w3
  42f264:	mov	w20, #0x1                   	// #1
  42f268:	add	x2, x2, x2, lsl #1
  42f26c:	ldr	x28, [x1, #16]
  42f270:	lsl	x2, x2, #3
  42f274:	b	42efb8 <nftw@plt+0x2c438>
  42f278:	ldr	x3, [x0, #8]
  42f27c:	ldrb	w2, [x3, #18]
  42f280:	and	w2, w2, #0x3
  42f284:	cmp	w2, #0x1
  42f288:	b.ne	42eff8 <nftw@plt+0x2c478>  // b.any
  42f28c:	ldrh	w1, [x3, #24]
  42f290:	mov	w2, #0x50                  	// #80
  42f294:	strb	w2, [x0, #4]
  42f298:	str	w1, [x0, #8]
  42f29c:	b	42f018 <nftw@plt+0x2c498>
  42f2a0:	ldr	w2, [x28, #12]
  42f2a4:	mov	w24, #0x1                   	// #1
  42f2a8:	b	42f1b0 <nftw@plt+0x2c630>
  42f2ac:	ldr	w11, [x0, #8]
  42f2b0:	ldr	x8, [x0, #16]
  42f2b4:	sub	x11, x11, #0x1
  42f2b8:	add	x26, x8, x11
  42f2bc:	add	x8, x8, #0x1
  42f2c0:	cmp	x26, x8
  42f2c4:	b.ls	42f018 <nftw@plt+0x2c498>  // b.plast
  42f2c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  42f2cc:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f2d0:	add	x1, x1, #0x248
  42f2d4:	add	x0, x0, #0x818
  42f2d8:	str	x1, [sp, #96]
  42f2dc:	str	x0, [sp, #168]
  42f2e0:	b	42f2f0 <nftw@plt+0x2c770>
  42f2e4:	add	x8, x8, #0x1
  42f2e8:	cmp	x26, x8
  42f2ec:	b.ls	42f648 <nftw@plt+0x2cac8>  // b.plast
  42f2f0:	ldrb	w0, [x8]
  42f2f4:	ldr	x1, [sp, #96]
  42f2f8:	ldrh	w1, [x1, w0, sxtw #1]
  42f2fc:	tbnz	w1, #9, 42f310 <nftw@plt+0x2c790>
  42f300:	cmp	w0, #0x24
  42f304:	b.ne	42f2e4 <nftw@plt+0x2c764>  // b.any
  42f308:	ldrb	w2, [x25, #1146]
  42f30c:	cbz	w2, 42f2e4 <nftw@plt+0x2c764>
  42f310:	mov	x9, x8
  42f314:	cmp	x26, x8
  42f318:	b.ls	42f64c <nftw@plt+0x2cacc>  // b.plast
  42f31c:	mov	w2, #0x204                 	// #516
  42f320:	b	42f330 <nftw@plt+0x2c7b0>
  42f324:	ldrb	w0, [x9]
  42f328:	ldr	x1, [sp, #96]
  42f32c:	ldrh	w1, [x1, w0, sxtw #1]
  42f330:	tst	w1, w2
  42f334:	b.ne	42f348 <nftw@plt+0x2c7c8>  // b.any
  42f338:	cmp	w0, #0x24
  42f33c:	b.ne	42f638 <nftw@plt+0x2cab8>  // b.any
  42f340:	ldrb	w0, [x25, #1146]
  42f344:	cbz	w0, 42f638 <nftw@plt+0x2cab8>
  42f348:	add	x9, x9, #0x1
  42f34c:	cmp	x26, x9
  42f350:	b.ne	42f324 <nftw@plt+0x2c7a4>  // b.any
  42f354:	sub	x2, x26, x8
  42f358:	mov	x9, x26
  42f35c:	mov	w13, w2
  42f360:	cbz	w10, 42f018 <nftw@plt+0x2c498>
  42f364:	ldr	x0, [x28]
  42f368:	and	x2, x2, #0xffffffff
  42f36c:	mov	x12, #0x0                   	// #0
  42f370:	str	x0, [sp, #152]
  42f374:	b	42f380 <nftw@plt+0x2c800>
  42f378:	cmp	w10, w12
  42f37c:	b.ls	42f3e4 <nftw@plt+0x2c864>  // b.plast
  42f380:	ldr	x0, [sp, #152]
  42f384:	ldr	x0, [x0, x12, lsl #3]
  42f388:	add	x12, x12, #0x1
  42f38c:	ldr	w1, [x0, #8]
  42f390:	cmp	w1, w13
  42f394:	b.ne	42f378 <nftw@plt+0x2c7f8>  // b.any
  42f398:	ldr	x1, [x0]
  42f39c:	mov	x0, x8
  42f3a0:	stp	x1, x8, [sp, #104]
  42f3a4:	stp	x2, x12, [sp, #120]
  42f3a8:	str	x9, [sp, #136]
  42f3ac:	stp	w13, w10, [sp, #144]
  42f3b0:	bl	402850 <memcmp@plt>
  42f3b4:	ldp	w13, w10, [sp, #144]
  42f3b8:	ldp	x1, x8, [sp, #104]
  42f3bc:	ldp	x2, x12, [sp, #120]
  42f3c0:	ldr	x9, [sp, #136]
  42f3c4:	cbnz	w0, 42f378 <nftw@plt+0x2c7f8>
  42f3c8:	ldr	x2, [sp, #168]
  42f3cc:	mov	x3, x1
  42f3d0:	mov	x0, x25
  42f3d4:	mov	w1, #0x6                   	// #6
  42f3d8:	str	x9, [sp, #104]
  42f3dc:	bl	41f308 <nftw@plt+0x1c788>
  42f3e0:	ldr	x9, [sp, #104]
  42f3e4:	cmp	x26, x9
  42f3e8:	b.ls	42f018 <nftw@plt+0x2c498>  // b.plast
  42f3ec:	ldrh	w10, [x28, #16]
  42f3f0:	mov	x8, x9
  42f3f4:	b	42f2f0 <nftw@plt+0x2c770>
  42f3f8:	mov	x0, x21
  42f3fc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f400:	add	x1, x1, #0x9e8
  42f404:	bl	402890 <strcmp@plt>
  42f408:	orr	w1, w20, #0x8
  42f40c:	cmp	w0, #0x0
  42f410:	and	w1, w1, #0xff
  42f414:	csel	w20, w1, w20, ne  // ne = any
  42f418:	b	42eb30 <nftw@plt+0x2bfb0>
  42f41c:	adrp	x24, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f420:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f424:	add	x24, x24, #0x730
  42f428:	add	x22, x22, #0x700
  42f42c:	mov	w21, #0x0                   	// #0
  42f430:	mov	w20, #0x0                   	// #0
  42f434:	str	wzr, [sp, #160]
  42f438:	mov	x0, x25
  42f43c:	bl	42a820 <nftw@plt+0x27ca0>
  42f440:	ldrb	w1, [x0, #4]
  42f444:	cmp	w1, #0x2c
  42f448:	b.eq	42f7c0 <nftw@plt+0x2cc40>  // b.none
  42f44c:	b.hi	42f658 <nftw@plt+0x2cad8>  // b.pmore
  42f450:	cmp	w1, #0x13
  42f454:	b.eq	42f700 <nftw@plt+0x2cb80>  // b.none
  42f458:	cmp	w1, #0x15
  42f45c:	b.ne	42f7f8 <nftw@plt+0x2cc78>  // b.any
  42f460:	ldr	w1, [sp, #160]
  42f464:	cmp	w1, #0x0
  42f468:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  42f46c:	b.ne	42f75c <nftw@plt+0x2cbdc>  // b.any
  42f470:	cbnz	w21, 42f75c <nftw@plt+0x2cbdc>
  42f474:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f478:	add	x1, x1, #0xbf0
  42f47c:	mov	w20, #0x0                   	// #0
  42f480:	ldp	x4, x5, [x1, #96]
  42f484:	stp	x4, x5, [sp, #200]
  42f488:	ldp	x4, x5, [x1, #112]
  42f48c:	stp	x4, x5, [sp, #216]
  42f490:	ldr	x1, [x1, #128]
  42f494:	str	x1, [sp, #232]
  42f498:	mov	x1, x0
  42f49c:	mov	x0, x25
  42f4a0:	bl	428d50 <nftw@plt+0x261d0>
  42f4a4:	mov	x3, x0
  42f4a8:	add	x2, sp, #0xc8
  42f4ac:	ldr	w21, [sp, #160]
  42f4b0:	mov	x0, x25
  42f4b4:	mov	w1, #0x3                   	// #3
  42f4b8:	sub	w4, w21, #0x1
  42f4bc:	str	w4, [sp, #164]
  42f4c0:	ldr	x2, [x2, w20, uxtw #3]
  42f4c4:	mov	x28, #0x0                   	// #0
  42f4c8:	mov	w20, #0x0                   	// #0
  42f4cc:	bl	41f298 <nftw@plt+0x1c718>
  42f4d0:	strb	wzr, [x25, #22]
  42f4d4:	cbnz	w21, 42ee60 <nftw@plt+0x2c2e0>
  42f4d8:	mov	w0, #0x0                   	// #0
  42f4dc:	ldp	x19, x20, [sp, #16]
  42f4e0:	ldp	x21, x22, [sp, #32]
  42f4e4:	ldp	x23, x24, [sp, #48]
  42f4e8:	ldp	x25, x26, [sp, #64]
  42f4ec:	ldp	x27, x28, [sp, #80]
  42f4f0:	ldp	x29, x30, [sp], #240
  42f4f4:	ret
  42f4f8:	mov	x0, x25
  42f4fc:	mov	x1, x19
  42f500:	bl	42da60 <nftw@plt+0x2aee0>
  42f504:	ldrb	w0, [x19, #18]
  42f508:	and	w0, w0, #0x3
  42f50c:	b	42ed28 <nftw@plt+0x2c1a8>
  42f510:	ldrb	w0, [x25, #1124]
  42f514:	cbz	w0, 42eb80 <nftw@plt+0x2c000>
  42f518:	ldrb	w0, [x25, #1152]
  42f51c:	mov	w1, #0x0                   	// #0
  42f520:	cbz	w0, 42ee24 <nftw@plt+0x2c2a4>
  42f524:	ldrb	w1, [x25, #1120]
  42f528:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f52c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f530:	add	x0, x0, #0x798
  42f534:	cmp	w1, #0x0
  42f538:	add	x2, x2, #0x760
  42f53c:	csel	x2, x2, x0, ne  // ne = any
  42f540:	mov	x0, x25
  42f544:	mov	w1, #0x2                   	// #2
  42f548:	mov	w3, #0xffffffff            	// #-1
  42f54c:	str	w3, [sp, #164]
  42f550:	mov	w21, #0x0                   	// #0
  42f554:	mov	x26, #0x0                   	// #0
  42f558:	bl	41f298 <nftw@plt+0x1c718>
  42f55c:	str	wzr, [sp, #160]
  42f560:	ldr	x1, [x25, #56]
  42f564:	ldp	x28, x0, [x1, #16]
  42f568:	sub	x0, x0, x28
  42f56c:	cmp	x0, #0x2f
  42f570:	b.hi	42eba4 <nftw@plt+0x2c024>  // b.pmore
  42f574:	add	x1, x25, #0x38
  42f578:	mov	x0, x25
  42f57c:	mov	x2, #0x30                  	// #48
  42f580:	bl	427e18 <nftw@plt+0x25298>
  42f584:	ldr	x1, [x25, #56]
  42f588:	ldr	x28, [x1, #16]
  42f58c:	b	42eba4 <nftw@plt+0x2c024>
  42f590:	ldrh	w0, [x20, #16]
  42f594:	ldrh	w1, [x28, #16]
  42f598:	cmp	w1, w0
  42f59c:	b.ne	42f6a4 <nftw@plt+0x2cb24>  // b.any
  42f5a0:	ldrb	w4, [x20, #19]
  42f5a4:	ldrb	w1, [x28, #19]
  42f5a8:	eor	w1, w4, w1
  42f5ac:	tst	w1, #0xc
  42f5b0:	b.ne	42ed74 <nftw@plt+0x2c1f4>  // b.any
  42f5b4:	sub	w0, w0, #0x1
  42f5b8:	b	42f5d8 <nftw@plt+0x2ca58>
  42f5bc:	ldr	x2, [x20]
  42f5c0:	sub	w0, w0, #0x1
  42f5c4:	ldr	x3, [x28]
  42f5c8:	ldr	x2, [x2, x1, lsl #3]
  42f5cc:	ldr	x1, [x3, x1, lsl #3]
  42f5d0:	cmp	x2, x1
  42f5d4:	b.ne	42ed74 <nftw@plt+0x2c1f4>  // b.any
  42f5d8:	mov	w1, w0
  42f5dc:	cmn	w0, #0x1
  42f5e0:	b.ne	42f5bc <nftw@plt+0x2ca3c>  // b.any
  42f5e4:	and	w4, w4, #0x3
  42f5e8:	cmp	w4, #0x2
  42f5ec:	b.eq	42f8ac <nftw@plt+0x2cd2c>  // b.none
  42f5f0:	ldr	w21, [x20, #12]
  42f5f4:	ldr	w0, [x28, #12]
  42f5f8:	cmp	w21, w0
  42f5fc:	b.ne	42ed74 <nftw@plt+0x2c1f4>  // b.any
  42f600:	sub	w21, w21, #0x1
  42f604:	nop
  42f608:	mov	w0, w21
  42f60c:	cmn	w21, #0x1
  42f610:	add	x0, x0, #0x1
  42f614:	b.eq	42edc4 <nftw@plt+0x2c244>  // b.none
  42f618:	add	x0, x0, x0, lsl #1
  42f61c:	sub	w21, w21, #0x1
  42f620:	lsl	x0, x0, #3
  42f624:	add	x1, x28, x0
  42f628:	add	x0, x20, x0
  42f62c:	bl	4275e0 <nftw@plt+0x24a60>
  42f630:	cbnz	w0, 42f608 <nftw@plt+0x2ca88>
  42f634:	b	42ed74 <nftw@plt+0x2c1f4>
  42f638:	sub	x2, x9, x8
  42f63c:	mov	w13, w2
  42f640:	cbnz	w10, 42f364 <nftw@plt+0x2c7e4>
  42f644:	b	42f3e4 <nftw@plt+0x2c864>
  42f648:	mov	x9, x8
  42f64c:	mov	x2, #0x0                   	// #0
  42f650:	mov	w13, #0x0                   	// #0
  42f654:	b	42f360 <nftw@plt+0x2c7e0>
  42f658:	cmp	w1, #0x35
  42f65c:	b.eq	42f790 <nftw@plt+0x2cc10>  // b.none
  42f660:	cmp	w1, #0x4f
  42f664:	b.ne	42f670 <nftw@plt+0x2caf0>  // b.any
  42f668:	ldrb	w1, [x25, #1124]
  42f66c:	cbz	w1, 42f438 <nftw@plt+0x2c8b8>
  42f670:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f674:	add	x1, x1, #0xbf0
  42f678:	ldp	x4, x5, [x1, #96]
  42f67c:	stp	x4, x5, [sp, #200]
  42f680:	ldp	x4, x5, [x1, #112]
  42f684:	stp	x4, x5, [sp, #216]
  42f688:	ldr	x1, [x1, #128]
  42f68c:	str	x1, [sp, #232]
  42f690:	cbz	w21, 42f498 <nftw@plt+0x2c918>
  42f694:	nop
  42f698:	mov	x3, #0x0                   	// #0
  42f69c:	mov	w20, #0x4                   	// #4
  42f6a0:	b	42f4a8 <nftw@plt+0x2c928>
  42f6a4:	mov	w1, #0x0                   	// #0
  42f6a8:	b	42ed90 <nftw@plt+0x2c210>
  42f6ac:	mov	x0, x25
  42f6b0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f6b4:	mov	w1, #0x3                   	// #3
  42f6b8:	add	x2, x2, #0x888
  42f6bc:	bl	41f298 <nftw@plt+0x1c718>
  42f6c0:	b	42ee50 <nftw@plt+0x2c2d0>
  42f6c4:	ubfiz	w0, w21, #3, #1
  42f6c8:	and	w2, w2, #0xfffffff3
  42f6cc:	orr	w0, w0, #0x4
  42f6d0:	ldrh	w3, [sp, #160]
  42f6d4:	orr	w0, w0, w2
  42f6d8:	mov	w22, #0x0                   	// #0
  42f6dc:	mov	x2, #0x30                  	// #48
  42f6e0:	mov	w24, #0x0                   	// #0
  42f6e4:	ubfx	x23, x0, #3, #1
  42f6e8:	mov	w21, #0x0                   	// #0
  42f6ec:	mov	w27, #0x0                   	// #0
  42f6f0:	str	x26, [x28]
  42f6f4:	strh	w3, [x28, #16]
  42f6f8:	strb	w0, [x28, #19]
  42f6fc:	b	42efb8 <nftw@plt+0x2c438>
  42f700:	cbz	w20, 42f9d8 <nftw@plt+0x2ce58>
  42f704:	cbnz	w21, 42f990 <nftw@plt+0x2ce10>
  42f708:	mov	w20, #0x0                   	// #0
  42f70c:	b	42f438 <nftw@plt+0x2c8b8>
  42f710:	cbnz	w24, 42ee50 <nftw@plt+0x2c2d0>
  42f714:	b	42f060 <nftw@plt+0x2c4e0>
  42f718:	ldrb	w0, [x25, #1143]
  42f71c:	cbz	w0, 42edcc <nftw@plt+0x2c24c>
  42f720:	mov	w1, #0xb                   	// #11
  42f724:	b	42ed90 <nftw@plt+0x2c210>
  42f728:	ldr	w0, [sp, #160]
  42f72c:	mov	w20, #0x1                   	// #1
  42f730:	strb	wzr, [x25, #22]
  42f734:	cbnz	w0, 42ee60 <nftw@plt+0x2c2e0>
  42f738:	ldp	x23, x24, [sp, #48]
  42f73c:	b	42eac0 <nftw@plt+0x2bf40>
  42f740:	mov	w2, w22
  42f744:	mov	x0, x25
  42f748:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f74c:	mov	w1, #0x3                   	// #3
  42f750:	add	x3, x3, #0x8c0
  42f754:	bl	41f650 <nftw@plt+0x1cad0>
  42f758:	b	42ee50 <nftw@plt+0x2c2d0>
  42f75c:	ldr	w20, [sp, #160]
  42f760:	mov	x0, x25
  42f764:	ubfiz	x1, x20, #3, #32
  42f768:	bl	42ab10 <nftw@plt+0x27f90>
  42f76c:	mov	x26, x0
  42f770:	sub	w0, w20, #0x1
  42f774:	mov	x20, #0x0                   	// #0
  42f778:	str	w0, [sp, #164]
  42f77c:	b	42eb90 <nftw@plt+0x2c010>
  42f780:	cmp	w0, #0x43
  42f784:	cset	w1, eq  // eq = none
  42f788:	lsl	w1, w1, #1
  42f78c:	b	42ee24 <nftw@plt+0x2c2a4>
  42f790:	cbnz	w20, 42f670 <nftw@plt+0x2caf0>
  42f794:	cbnz	w21, 42f990 <nftw@plt+0x2ce10>
  42f798:	ldp	x2, x3, [x0, #8]
  42f79c:	mov	x0, x25
  42f7a0:	ldr	w23, [sp, #160]
  42f7a4:	mov	w1, w23
  42f7a8:	bl	42e8c0 <nftw@plt+0x2bd40>
  42f7ac:	ands	w20, w0, #0xff
  42f7b0:	b.eq	42f9bc <nftw@plt+0x2ce3c>  // b.none
  42f7b4:	add	w0, w23, #0x1
  42f7b8:	str	w0, [sp, #160]
  42f7bc:	b	42f438 <nftw@plt+0x2c8b8>
  42f7c0:	cbnz	w21, 42f990 <nftw@plt+0x2ce10>
  42f7c4:	cbz	w20, 42f8c4 <nftw@plt+0x2cd44>
  42f7c8:	ldrb	w0, [x25, #1154]
  42f7cc:	mov	w21, w20
  42f7d0:	cbz	w0, 42f438 <nftw@plt+0x2c8b8>
  42f7d4:	ldrb	w0, [x25, #1142]
  42f7d8:	cbz	w0, 42f438 <nftw@plt+0x2c8b8>
  42f7dc:	ldrb	w2, [x25, #1120]
  42f7e0:	mov	x0, x25
  42f7e4:	mov	w1, #0xa                   	// #10
  42f7e8:	cmp	w2, #0x0
  42f7ec:	csel	x2, x22, x24, ne  // ne = any
  42f7f0:	bl	41f378 <nftw@plt+0x1c7f8>
  42f7f4:	b	42f438 <nftw@plt+0x2c8b8>
  42f7f8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f7fc:	add	x2, x2, #0xbf0
  42f800:	add	x4, x2, #0x60
  42f804:	ldp	x2, x3, [x2, #96]
  42f808:	stp	x2, x3, [sp, #200]
  42f80c:	ldp	x2, x3, [x4, #16]
  42f810:	stp	x2, x3, [sp, #216]
  42f814:	ldr	x2, [x4, #32]
  42f818:	str	x2, [sp, #232]
  42f81c:	cbnz	w21, 42f698 <nftw@plt+0x2cb18>
  42f820:	cmp	w1, #0x16
  42f824:	b.ne	42f498 <nftw@plt+0x2c918>  // b.any
  42f828:	add	w20, w20, #0x2
  42f82c:	mov	x3, #0x0                   	// #0
  42f830:	b	42f4a8 <nftw@plt+0x2c928>
  42f834:	mov	x0, x10
  42f838:	mov	x2, x21
  42f83c:	bl	402490 <memcpy@plt>
  42f840:	ldrb	w0, [x28, #19]
  42f844:	mov	w20, #0x1                   	// #1
  42f848:	orr	w0, w0, #0x40
  42f84c:	strb	w0, [x28, #19]
  42f850:	ldr	w0, [sp, #160]
  42f854:	strb	wzr, [x25, #22]
  42f858:	cbnz	w0, 42ee60 <nftw@plt+0x2c2e0>
  42f85c:	ldp	x23, x24, [sp, #48]
  42f860:	b	42eac0 <nftw@plt+0x2bf40>
  42f864:	ldr	x2, [x19, #24]
  42f868:	mov	x0, x25
  42f86c:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f870:	mov	w3, #0x0                   	// #0
  42f874:	add	x4, x4, #0x980
  42f878:	mov	w1, #0x5                   	// #5
  42f87c:	ldr	w2, [x2, #8]
  42f880:	bl	41f458 <nftw@plt+0x1c8d8>
  42f884:	b	42edc4 <nftw@plt+0x2c244>
  42f888:	ldr	x1, [x20, #16]
  42f88c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f890:	add	x0, x0, #0x7d0
  42f894:	ldrb	w1, [x1]
  42f898:	bl	402940 <strchr@plt>
  42f89c:	cmp	x0, #0x0
  42f8a0:	cset	w1, eq  // eq = none
  42f8a4:	lsl	w1, w1, #1
  42f8a8:	b	42ee24 <nftw@plt+0x2c2a4>
  42f8ac:	mov	x0, x20
  42f8b0:	mov	x1, x28
  42f8b4:	bl	434b20 <nftw@plt+0x31fa0>
  42f8b8:	tst	w0, #0xff
  42f8bc:	b.eq	42edc4 <nftw@plt+0x2c244>  // b.none
  42f8c0:	b	42ed74 <nftw@plt+0x2c1f4>
  42f8c4:	ldr	w1, [sp, #160]
  42f8c8:	mov	x0, x25
  42f8cc:	ldr	x3, [x25, #1272]
  42f8d0:	add	w2, w1, #0x1
  42f8d4:	str	w2, [sp, #160]
  42f8d8:	mov	x2, x3
  42f8dc:	bl	42e8c0 <nftw@plt+0x2bd40>
  42f8e0:	ldrb	w0, [x25, #1152]
  42f8e4:	mov	w1, #0x1                   	// #1
  42f8e8:	strb	w1, [x25, #22]
  42f8ec:	cbnz	w0, 42f930 <nftw@plt+0x2cdb0>
  42f8f0:	ldrb	w0, [x25, #1154]
  42f8f4:	cbz	w0, 42f930 <nftw@plt+0x2cdb0>
  42f8f8:	ldrb	w0, [x25, #1142]
  42f8fc:	cbz	w0, 42f930 <nftw@plt+0x2cdb0>
  42f900:	ldrb	w1, [x25, #1120]
  42f904:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f908:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f90c:	add	x0, x0, #0x6c8
  42f910:	cmp	w1, #0x0
  42f914:	add	x2, x2, #0x690
  42f918:	csel	x2, x2, x0, ne  // ne = any
  42f91c:	mov	w1, #0xa                   	// #10
  42f920:	mov	x0, x25
  42f924:	mov	w21, #0x1                   	// #1
  42f928:	bl	41f378 <nftw@plt+0x1c7f8>
  42f92c:	b	42f438 <nftw@plt+0x2c8b8>
  42f930:	ldrsb	w0, [x25, #1198]
  42f934:	mov	w21, #0x1                   	// #1
  42f938:	cmp	w0, #0x0
  42f93c:	b.le	42f438 <nftw@plt+0x2c8b8>
  42f940:	ldrb	w0, [x25, #1120]
  42f944:	cbnz	w0, 42f438 <nftw@plt+0x2c8b8>
  42f948:	mov	x0, x25
  42f94c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f950:	mov	w1, #0x0                   	// #0
  42f954:	add	x2, x2, #0x6c8
  42f958:	bl	41f298 <nftw@plt+0x1c718>
  42f95c:	b	42f438 <nftw@plt+0x2c8b8>
  42f960:	mov	w0, #0x0                   	// #0
  42f964:	b	42eb44 <nftw@plt+0x2bfc4>
  42f968:	add	x1, x25, #0x38
  42f96c:	mov	x0, x25
  42f970:	mov	x2, x21
  42f974:	bl	427e18 <nftw@plt+0x25298>
  42f978:	ldr	x1, [x25, #56]
  42f97c:	ldr	w0, [x28, #12]
  42f980:	ldr	x1, [x1, #16]
  42f984:	b	42f0b8 <nftw@plt+0x2c538>
  42f988:	mov	w21, #0x0                   	// #0
  42f98c:	b	42f060 <nftw@plt+0x2c4e0>
  42f990:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f994:	add	x0, x0, #0xbf0
  42f998:	mov	x3, #0x0                   	// #0
  42f99c:	mov	w20, #0x4                   	// #4
  42f9a0:	ldp	x4, x5, [x0, #96]
  42f9a4:	stp	x4, x5, [sp, #200]
  42f9a8:	ldp	x4, x5, [x0, #112]
  42f9ac:	stp	x4, x5, [sp, #216]
  42f9b0:	ldr	x0, [x0, #128]
  42f9b4:	str	x0, [sp, #232]
  42f9b8:	b	42f4a8 <nftw@plt+0x2c928>
  42f9bc:	ldr	w0, [sp, #160]
  42f9c0:	strb	wzr, [x25, #22]
  42f9c4:	cbz	w0, 42f4d8 <nftw@plt+0x2c958>
  42f9c8:	sub	w0, w0, #0x1
  42f9cc:	mov	x28, #0x0                   	// #0
  42f9d0:	str	w0, [sp, #164]
  42f9d4:	b	42ee60 <nftw@plt+0x2c2e0>
  42f9d8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42f9dc:	add	x1, x1, #0xbf0
  42f9e0:	ldp	x4, x5, [x1, #96]
  42f9e4:	stp	x4, x5, [sp, #200]
  42f9e8:	ldp	x4, x5, [x1, #112]
  42f9ec:	stp	x4, x5, [sp, #216]
  42f9f0:	ldr	x1, [x1, #128]
  42f9f4:	str	x1, [sp, #232]
  42f9f8:	cbnz	w21, 42f698 <nftw@plt+0x2cb18>
  42f9fc:	mov	w20, #0x0                   	// #0
  42fa00:	b	42f498 <nftw@plt+0x2c918>
  42fa04:	mov	w23, #0x0                   	// #0
  42fa08:	b	42ec78 <nftw@plt+0x2c0f8>
  42fa0c:	nop
  42fa10:	ldr	x0, [x1, #24]
  42fa14:	add	w2, w2, #0x1
  42fa18:	strb	w2, [x0, #18]
  42fa1c:	ret
  42fa20:	stp	x29, x30, [sp, #-48]!
  42fa24:	mov	x29, sp
  42fa28:	stp	x19, x20, [sp, #16]
  42fa2c:	mov	x19, x1
  42fa30:	mov	x20, x0
  42fa34:	ldrh	w2, [x1, #18]
  42fa38:	orr	w2, w2, #0x80
  42fa3c:	strh	w2, [x1, #18]
  42fa40:	and	w2, w2, #0x3
  42fa44:	cmp	w2, #0x2
  42fa48:	b.eq	42fa74 <nftw@plt+0x2cef4>  // b.none
  42fa4c:	cmp	w2, #0x3
  42fa50:	b.eq	42fa88 <nftw@plt+0x2cf08>  // b.none
  42fa54:	cbz	w2, 42fab8 <nftw@plt+0x2cf38>
  42fa58:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42fa5c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42fa60:	add	x2, x2, #0xa00
  42fa64:	add	x0, x0, #0x348
  42fa68:	mov	w1, #0xe0b                 	// #3595
  42fa6c:	str	x21, [sp, #32]
  42fa70:	bl	402bf0 <nftw@plt+0x70>
  42fa74:	str	x21, [sp, #32]
  42fa78:	ldr	x21, [x1, #24]
  42fa7c:	ldrb	w2, [x21, #18]
  42fa80:	cbnz	w2, 42fad8 <nftw@plt+0x2cf58>
  42fa84:	ldr	x21, [sp, #32]
  42fa88:	ldr	x3, [x20, #1008]
  42fa8c:	cbz	x3, 42faac <nftw@plt+0x2cf2c>
  42fa90:	ldr	w1, [x20, #48]
  42fa94:	mov	x2, x19
  42fa98:	mov	x0, x20
  42fa9c:	mov	x16, x3
  42faa0:	ldp	x19, x20, [sp, #16]
  42faa4:	ldp	x29, x30, [sp], #48
  42faa8:	br	x16
  42faac:	ldp	x19, x20, [sp, #16]
  42fab0:	ldp	x29, x30, [sp], #48
  42fab4:	ret
  42fab8:	ldr	x3, [x0, #1016]
  42fabc:	cbz	x3, 42faac <nftw@plt+0x2cf2c>
  42fac0:	ldp	x19, x20, [sp, #16]
  42fac4:	mov	x2, x1
  42fac8:	ldp	x29, x30, [sp], #48
  42facc:	mov	x16, x3
  42fad0:	ldr	w1, [x0, #48]
  42fad4:	br	x16
  42fad8:	ldr	x3, [x0, #1048]
  42fadc:	mov	x1, x21
  42fae0:	sub	w2, w2, #0x1
  42fae4:	blr	x3
  42fae8:	strb	wzr, [x21, #18]
  42faec:	ldr	x3, [x20, #1008]
  42faf0:	ldr	x21, [sp, #32]
  42faf4:	cbnz	x3, 42fa90 <nftw@plt+0x2cf10>
  42faf8:	b	42faac <nftw@plt+0x2cf2c>
  42fafc:	nop
  42fb00:	stp	x29, x30, [sp, #-304]!
  42fb04:	mov	x29, sp
  42fb08:	stp	x23, x24, [sp, #48]
  42fb0c:	mov	x23, x1
  42fb10:	mov	w1, #0x1                   	// #1
  42fb14:	stp	x27, x28, [sp, #80]
  42fb18:	mov	x28, x0
  42fb1c:	strb	wzr, [x0, #19]
  42fb20:	strb	w1, [x0, #192]
  42fb24:	ldrb	w0, [x23, #18]
  42fb28:	str	w3, [sp, #100]
  42fb2c:	str	x2, [sp, #104]
  42fb30:	and	w0, w0, #0x3
  42fb34:	strb	wzr, [x28, #440]
  42fb38:	cmp	w0, #0x2
  42fb3c:	b.eq	42fb98 <nftw@plt+0x2d018>  // b.none
  42fb40:	ldr	x1, [x28, #184]
  42fb44:	strb	wzr, [x28, #192]
  42fb48:	ldrb	w0, [x1, #18]
  42fb4c:	and	w0, w0, #0x3
  42fb50:	cmp	w0, #0x2
  42fb54:	b.eq	42fb7c <nftw@plt+0x2cffc>  // b.none
  42fb58:	ldr	w3, [x28, #176]
  42fb5c:	ldr	w2, [sp, #100]
  42fb60:	mov	x1, x23
  42fb64:	mov	x0, x28
  42fb68:	bl	42e1a8 <nftw@plt+0x2b628>
  42fb6c:	ldp	x23, x24, [sp, #48]
  42fb70:	ldp	x27, x28, [sp, #80]
  42fb74:	ldp	x29, x30, [sp], #304
  42fb78:	ret
  42fb7c:	ldr	x0, [x1, #24]
  42fb80:	ldrb	w0, [x0, #19]
  42fb84:	tbz	w0, #2, 42fb58 <nftw@plt+0x2cfd8>
  42fb88:	ldrb	w0, [x28, #1157]
  42fb8c:	ldr	w3, [sp, #100]
  42fb90:	cbnz	w0, 42fb5c <nftw@plt+0x2cfdc>
  42fb94:	b	42fb58 <nftw@plt+0x2cfd8>
  42fb98:	ldr	x0, [x23, #24]
  42fb9c:	str	x0, [sp, #112]
  42fba0:	stp	x19, x20, [sp, #16]
  42fba4:	mov	x19, #0x0                   	// #0
  42fba8:	ldrb	w0, [x0, #19]
  42fbac:	stp	x21, x22, [sp, #32]
  42fbb0:	tbnz	w0, #2, 42fd6c <nftw@plt+0x2d1ec>
  42fbb4:	ldrh	w0, [x23, #18]
  42fbb8:	mov	w1, w0
  42fbbc:	ubfx	x0, x0, #2, #8
  42fbc0:	orr	w2, w0, #0x10
  42fbc4:	bfi	w1, w2, #2, #8
  42fbc8:	strh	w1, [x23, #18]
  42fbcc:	tbz	w0, #5, 42fe8c <nftw@plt+0x2d30c>
  42fbd0:	ldr	x3, [x28, #1032]
  42fbd4:	cbz	x3, 42fbe8 <nftw@plt+0x2d068>
  42fbd8:	ldr	w1, [sp, #100]
  42fbdc:	mov	x2, x23
  42fbe0:	mov	x0, x28
  42fbe4:	blr	x3
  42fbe8:	ldr	x2, [sp, #112]
  42fbec:	ldrb	w0, [x2, #19]
  42fbf0:	ldrh	w1, [x2, #16]
  42fbf4:	orr	w0, w0, #0x20
  42fbf8:	strb	w0, [x2, #19]
  42fbfc:	cbnz	w1, 42fcb8 <nftw@plt+0x2d138>
  42fc00:	stp	x25, x26, [sp, #64]
  42fc04:	ldr	w22, [x2, #12]
  42fc08:	ldrb	w1, [x28, #1157]
  42fc0c:	tbnz	w0, #6, 42feb0 <nftw@plt+0x2d330>
  42fc10:	add	x20, x2, #0x18
  42fc14:	cbz	w1, 42fef0 <nftw@plt+0x2d370>
  42fc18:	mov	w21, w22
  42fc1c:	ubfiz	x0, x22, #4, #32
  42fc20:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  42fc24:	mov	x25, x0
  42fc28:	lsl	x1, x21, #3
  42fc2c:	mov	x0, x28
  42fc30:	bl	427c60 <nftw@plt+0x250e0>
  42fc34:	mov	x24, x0
  42fc38:	ldr	w2, [sp, #100]
  42fc3c:	mov	w3, w22
  42fc40:	ldr	x0, [x28, #40]
  42fc44:	mov	x1, x23
  42fc48:	bl	42b410 <nftw@plt+0x28890>
  42fc4c:	mov	x26, x0
  42fc50:	cbz	w22, 42fc88 <nftw@plt+0x2d108>
  42fc54:	mov	w21, #0x0                   	// #0
  42fc58:	ldr	w4, [x20]
  42fc5c:	mov	w6, w21
  42fc60:	mov	x2, x20
  42fc64:	mov	x5, x26
  42fc68:	add	w21, w21, #0x1
  42fc6c:	mov	x1, x25
  42fc70:	mov	x0, x24
  42fc74:	mov	w3, w4
  42fc78:	bl	42d9c8 <nftw@plt+0x2ae48>
  42fc7c:	add	x20, x20, #0x18
  42fc80:	cmp	w21, w22
  42fc84:	b.cc	42fc58 <nftw@plt+0x2d0d8>  // b.lo, b.ul, b.last
  42fc88:	ldr	x4, [x24, #8]
  42fc8c:	mov	x3, x25
  42fc90:	mov	x1, x23
  42fc94:	mov	x2, x24
  42fc98:	mov	w5, w22
  42fc9c:	mov	x0, x28
  42fca0:	bl	42d8b0 <nftw@plt+0x2ad30>
  42fca4:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  42fca8:	ldp	x25, x26, [sp, #64]
  42fcac:	ldr	w0, [x1, #2408]
  42fcb0:	add	w22, w0, w22
  42fcb4:	str	w22, [x1, #2408]
  42fcb8:	cbz	x19, 42fe9c <nftw@plt+0x2d31c>
  42fcbc:	ldrb	w0, [x28, #16]
  42fcc0:	cbz	w0, 42fd38 <nftw@plt+0x2d1b8>
  42fcc4:	adrp	x22, 48d000 <__environ@@GLIBC_2.17+0xa68>
  42fcc8:	add	x23, x28, #0x88
  42fccc:	add	x22, x22, #0x968
  42fcd0:	mov	x21, x19
  42fcd4:	mov	x0, x23
  42fcd8:	ldr	x19, [x19]
  42fcdc:	ldp	x24, x20, [x21, #8]
  42fce0:	str	xzr, [x21]
  42fce4:	bl	42d850 <nftw@plt+0x2acd0>
  42fce8:	stp	x21, xzr, [x0, #32]
  42fcec:	str	wzr, [x0, #48]
  42fcf0:	sub	x20, x20, x24
  42fcf4:	asr	x20, x20, #3
  42fcf8:	add	x1, x24, w20, uxtw #3
  42fcfc:	stp	x24, x1, [x0, #16]
  42fd00:	ldrb	w0, [x28, #1157]
  42fd04:	cbnz	w0, 42fd14 <nftw@plt+0x2d194>
  42fd08:	ldr	w0, [x22]
  42fd0c:	add	w20, w0, w20
  42fd10:	str	w20, [x22]
  42fd14:	cbnz	x19, 42fcd0 <nftw@plt+0x2d150>
  42fd18:	strb	wzr, [x28, #192]
  42fd1c:	mov	w0, #0x2                   	// #2
  42fd20:	ldp	x19, x20, [sp, #16]
  42fd24:	ldp	x21, x22, [sp, #32]
  42fd28:	ldp	x23, x24, [sp, #48]
  42fd2c:	ldp	x27, x28, [sp, #80]
  42fd30:	ldp	x29, x30, [sp], #304
  42fd34:	ret
  42fd38:	mov	x0, x28
  42fd3c:	bl	427030 <nftw@plt+0x244b0>
  42fd40:	mov	x2, x0
  42fd44:	mov	w4, #0x53                  	// #83
  42fd48:	mov	x0, x28
  42fd4c:	mov	w3, #0x1                   	// #1
  42fd50:	mov	x1, #0x0                   	// #0
  42fd54:	strb	w4, [x2, #4]
  42fd58:	ldr	x4, [sp, #104]
  42fd5c:	strh	wzr, [x2, #6]
  42fd60:	str	x4, [x2, #8]
  42fd64:	bl	42e138 <nftw@plt+0x2b5b8>
  42fd68:	b	42fcc4 <nftw@plt+0x2d144>
  42fd6c:	ldrb	w2, [x28, #24]
  42fd70:	ldr	w0, [x28, #500]
  42fd74:	add	w2, w2, #0x1
  42fd78:	strb	w2, [x28, #24]
  42fd7c:	add	w0, w0, #0x1
  42fd80:	strb	w1, [x28, #25]
  42fd84:	str	w0, [x28, #500]
  42fd88:	mov	x1, #0x0                   	// #0
  42fd8c:	mov	x0, x28
  42fd90:	bl	4314a8 <nftw@plt+0x2e928>
  42fd94:	ldrb	w1, [x0, #4]
  42fd98:	cmp	w1, #0x53
  42fd9c:	b.ne	42fdd0 <nftw@plt+0x2d250>  // b.any
  42fda0:	cbz	x19, 42fe84 <nftw@plt+0x2d304>
  42fda4:	ldrh	w1, [x19, #6]
  42fda8:	tbnz	w1, #0, 42fd88 <nftw@plt+0x2d208>
  42fdac:	ldr	x1, [x0, #8]
  42fdb0:	cmp	x1, #0x0
  42fdb4:	mov	x1, #0x0                   	// #0
  42fdb8:	csel	x19, x19, x0, ne  // ne = any
  42fdbc:	mov	x0, x28
  42fdc0:	bl	4314a8 <nftw@plt+0x2e928>
  42fdc4:	ldrb	w1, [x0, #4]
  42fdc8:	cmp	w1, #0x53
  42fdcc:	b.eq	42fda0 <nftw@plt+0x2d220>  // b.none
  42fdd0:	cmp	w1, #0x14
  42fdd4:	b.eq	42ff08 <nftw@plt+0x2d388>  // b.none
  42fdd8:	cmp	w1, #0x16
  42fddc:	b.ne	42fe5c <nftw@plt+0x2d2dc>  // b.any
  42fde0:	add	x1, x28, #0x2b0
  42fde4:	cmp	x0, x1
  42fde8:	b.eq	42fe5c <nftw@plt+0x2d2dc>  // b.none
  42fdec:	ldrb	w1, [x28, #24]
  42fdf0:	ldr	w0, [x28, #500]
  42fdf4:	ldrb	w2, [x28, #1138]
  42fdf8:	sub	w1, w1, #0x1
  42fdfc:	sub	w0, w0, #0x1
  42fe00:	strb	w1, [x28, #24]
  42fe04:	strb	wzr, [x28, #25]
  42fe08:	str	w0, [x28, #500]
  42fe0c:	cbz	w2, 42fe48 <nftw@plt+0x2d2c8>
  42fe10:	ldr	x0, [x23, #24]
  42fe14:	mov	x19, #0x0                   	// #0
  42fe18:	ldrb	w0, [x0, #19]
  42fe1c:	tbnz	w0, #4, 42fe48 <nftw@plt+0x2d2c8>
  42fe20:	ldr	x3, [x23]
  42fe24:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  42fe28:	mov	x0, x28
  42fe2c:	add	x2, x2, #0xa48
  42fe30:	mov	w1, #0x6                   	// #6
  42fe34:	bl	41f308 <nftw@plt+0x1c788>
  42fe38:	cbz	x19, 42fe48 <nftw@plt+0x2d2c8>
  42fe3c:	mov	x1, x19
  42fe40:	mov	x0, x28
  42fe44:	bl	427c38 <nftw@plt+0x250b8>
  42fe48:	mov	w0, #0x0                   	// #0
  42fe4c:	strb	wzr, [x28, #192]
  42fe50:	ldp	x19, x20, [sp, #16]
  42fe54:	ldp	x21, x22, [sp, #32]
  42fe58:	b	42fb6c <nftw@plt+0x2cfec>
  42fe5c:	mov	x0, x28
  42fe60:	mov	w1, #0x1                   	// #1
  42fe64:	bl	42e590 <nftw@plt+0x2ba10>
  42fe68:	cbz	x19, 42fdec <nftw@plt+0x2d26c>
  42fe6c:	mov	x2, x19
  42fe70:	mov	x0, x28
  42fe74:	mov	w3, #0x1                   	// #1
  42fe78:	mov	x1, #0x0                   	// #0
  42fe7c:	bl	42e138 <nftw@plt+0x2b5b8>
  42fe80:	b	42fdec <nftw@plt+0x2d26c>
  42fe84:	mov	x19, x0
  42fe88:	b	42fd88 <nftw@plt+0x2d208>
  42fe8c:	mov	x1, x23
  42fe90:	mov	x0, x28
  42fe94:	bl	42fa20 <nftw@plt+0x2cea0>
  42fe98:	b	42fbd0 <nftw@plt+0x2d050>
  42fe9c:	mov	w0, #0x1                   	// #1
  42fea0:	strb	wzr, [x28, #192]
  42fea4:	ldp	x19, x20, [sp, #16]
  42fea8:	ldp	x21, x22, [sp, #32]
  42feac:	b	42fb6c <nftw@plt+0x2cfec>
  42feb0:	ldr	x2, [sp, #112]
  42feb4:	b	42fed0 <nftw@plt+0x2d350>
  42feb8:	ubfiz	x0, x22, #1, #32
  42febc:	add	x0, x0, w22, uxtw
  42fec0:	add	x0, x2, x0, lsl #3
  42fec4:	ldrb	w0, [x0, #28]
  42fec8:	cmp	w0, #0x26
  42fecc:	b.ne	4310b4 <nftw@plt+0x2e534>  // b.any
  42fed0:	mov	w21, w22
  42fed4:	sub	w22, w22, #0x1
  42fed8:	cbnz	w21, 42feb8 <nftw@plt+0x2d338>
  42fedc:	cbnz	w1, 431198 <nftw@plt+0x2e618>
  42fee0:	ldr	x0, [sp, #112]
  42fee4:	mov	w22, #0x0                   	// #0
  42fee8:	add	x20, x0, #0x18
  42feec:	nop
  42fef0:	mov	x2, x20
  42fef4:	mov	x1, x23
  42fef8:	mov	w3, w22
  42fefc:	mov	x0, x28
  42ff00:	bl	42e138 <nftw@plt+0x2b5b8>
  42ff04:	b	42fca4 <nftw@plt+0x2d124>
  42ff08:	stp	x25, x26, [sp, #64]
  42ff0c:	mov	w0, #0x2                   	// #2
  42ff10:	mov	w1, #0x1c0                 	// #448
  42ff14:	strb	w0, [x28, #25]
  42ff18:	mov	x19, #0x0                   	// #0
  42ff1c:	ldrb	w24, [x28, #1157]
  42ff20:	ldr	x0, [x23, #24]
  42ff24:	stp	wzr, w24, [sp, #132]
  42ff28:	mov	x2, x0
  42ff2c:	mov	x0, x28
  42ff30:	str	x2, [sp, #120]
  42ff34:	ldrh	w20, [x2, #16]
  42ff38:	cmp	w20, #0x0
  42ff3c:	csinc	w20, w20, wzr, ne  // ne = any
  42ff40:	umull	x1, w20, w1
  42ff44:	bl	427c60 <nftw@plt+0x250e0>
  42ff48:	mov	x21, x0
  42ff4c:	mov	w0, #0x30                  	// #48
  42ff50:	mov	w1, #0x0                   	// #0
  42ff54:	ldr	x22, [x21, #8]
  42ff58:	umull	x20, w20, w0
  42ff5c:	stp	x22, x21, [sp, #152]
  42ff60:	mov	x2, x20
  42ff64:	mov	x0, x22
  42ff68:	bl	4026f0 <memset@plt>
  42ff6c:	cmp	w24, #0x0
  42ff70:	mov	x26, x22
  42ff74:	cset	w2, ne  // ne = any
  42ff78:	mov	x24, x21
  42ff7c:	str	x23, [sp, #144]
  42ff80:	mov	w23, w2
  42ff84:	add	x1, x22, x20
  42ff88:	str	x1, [x21, #16]
  42ff8c:	nop
  42ff90:	ldr	w0, [sp, #132]
  42ff94:	str	x1, [x26]
  42ff98:	add	w0, w0, #0x1
  42ff9c:	str	w0, [sp, #128]
  42ffa0:	ldr	w0, [sp, #136]
  42ffa4:	cbnz	w0, 43029c <nftw@plt+0x2d71c>
  42ffa8:	mov	w21, #0x32                  	// #50
  42ffac:	mov	w27, #0x0                   	// #0
  42ffb0:	mov	w20, #0x0                   	// #0
  42ffb4:	mov	w22, #0x2                   	// #2
  42ffb8:	b	42ffcc <nftw@plt+0x2d44c>
  42ffbc:	cbz	x1, 4300c8 <nftw@plt+0x2d548>
  42ffc0:	str	x25, [x1, w27, uxtw #3]
  42ffc4:	add	w27, w27, #0x1
  42ffc8:	add	w22, w27, #0x2
  42ffcc:	ldr	x0, [x24, #24]
  42ffd0:	add	x1, x1, w22, uxtw #3
  42ffd4:	cmp	x0, x1
  42ffd8:	b.cc	430088 <nftw@plt+0x2d508>  // b.lo, b.ul, b.last
  42ffdc:	cmp	w23, #0x0
  42ffe0:	ccmp	w22, w21, #0x0, ne  // ne = any
  42ffe4:	b.hi	4300b0 <nftw@plt+0x2d530>  // b.pmore
  42ffe8:	add	x1, sp, #0x12c
  42ffec:	mov	x0, x28
  42fff0:	bl	4314a8 <nftw@plt+0x2e928>
  42fff4:	ldrb	w1, [x0, #4]
  42fff8:	mov	x25, x0
  42fffc:	cmp	w1, #0x53
  430000:	b.eq	430070 <nftw@plt+0x2d4f0>  // b.none
  430004:	cmp	w1, #0x14
  430008:	b.eq	430064 <nftw@plt+0x2d4e4>  // b.none
  43000c:	cmp	w1, #0x15
  430010:	b.eq	4300d4 <nftw@plt+0x2d554>  // b.none
  430014:	cmp	w1, #0x13
  430018:	b.eq	43017c <nftw@plt+0x2d5fc>  // b.none
  43001c:	cmp	w1, #0x16
  430020:	b.eq	4300ec <nftw@plt+0x2d56c>  // b.none
  430024:	cmp	w1, #0x25
  430028:	b.eq	4301a8 <nftw@plt+0x2d628>  // b.none
  43002c:	cmp	w1, #0x51
  430030:	b.eq	4301bc <nftw@plt+0x2d63c>  // b.none
  430034:	ldr	x1, [x26]
  430038:	ldrb	w0, [x28, #1157]
  43003c:	cbz	w0, 42ffbc <nftw@plt+0x2d43c>
  430040:	cbz	x1, 4300c8 <nftw@plt+0x2d548>
  430044:	mov	w5, w27
  430048:	ldr	w6, [sp, #300]
  43004c:	ldr	x0, [x26, #32]
  430050:	str	x25, [x1, x5, lsl #3]
  430054:	add	x7, x0, w27, uxtw #2
  430058:	cbz	x7, 42ffc4 <nftw@plt+0x2d444>
  43005c:	str	w6, [x0, x5, lsl #2]
  430060:	b	42ffc4 <nftw@plt+0x2d444>
  430064:	add	w20, w20, #0x1
  430068:	ldr	x1, [x26]
  43006c:	b	430038 <nftw@plt+0x2d4b8>
  430070:	ldr	x1, [x26]
  430074:	cbnz	w27, 430038 <nftw@plt+0x2d4b8>
  430078:	ldr	x0, [x24, #24]
  43007c:	add	x1, x1, w22, uxtw #3
  430080:	cmp	x0, x1
  430084:	b.cs	42ffdc <nftw@plt+0x2d45c>  // b.hs, b.nlast
  430088:	mov	x1, x24
  43008c:	mov	x0, x28
  430090:	mov	x2, #0x1f40                	// #8000
  430094:	bl	427d00 <nftw@plt+0x25180>
  430098:	mov	x24, x0
  43009c:	cmp	w23, #0x0
  4300a0:	ldr	x0, [x0, #16]
  4300a4:	str	x0, [x26]
  4300a8:	ccmp	w22, w21, #0x0, ne  // ne = any
  4300ac:	b.ls	42ffe8 <nftw@plt+0x2d468>  // b.plast
  4300b0:	ldr	x0, [x26, #32]
  4300b4:	add	w21, w21, #0x3e8
  4300b8:	ubfiz	x1, x21, #2, #32
  4300bc:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4300c0:	str	x0, [x26, #32]
  4300c4:	b	42ffe8 <nftw@plt+0x2d468>
  4300c8:	mov	x0, #0x0                   	// #0
  4300cc:	str	x25, [x0]
  4300d0:	brk	#0x3e8
  4300d4:	ldr	x1, [x26]
  4300d8:	sub	w5, w20, #0x1
  4300dc:	mov	x0, x1
  4300e0:	cbz	w20, 4300f0 <nftw@plt+0x2d570>
  4300e4:	mov	w20, w5
  4300e8:	b	430038 <nftw@plt+0x2d4b8>
  4300ec:	ldr	x0, [x26]
  4300f0:	cbz	w27, 430114 <nftw@plt+0x2d594>
  4300f4:	nop
  4300f8:	sub	w1, w27, #0x1
  4300fc:	ldr	x5, [x0, w1, uxtw #3]
  430100:	ldrb	w5, [x5, #4]
  430104:	cmp	w5, #0x53
  430108:	b.ne	430294 <nftw@plt+0x2d714>  // b.any
  43010c:	mov	w27, w1
  430110:	cbnz	w27, 4300f8 <nftw@plt+0x2d578>
  430114:	mov	x1, #0x0                   	// #0
  430118:	str	w27, [x26, #24]
  43011c:	add	x6, x28, #0x2b0
  430120:	ldrb	w5, [x28, #1157]
  430124:	cbnz	w5, 430274 <nftw@plt+0x2d6f4>
  430128:	cbz	x0, 4302b0 <nftw@plt+0x2d730>
  43012c:	str	x6, [x0, x1, lsl #3]
  430130:	ldr	x1, [sp, #120]
  430134:	ldrh	w6, [x1, #16]
  430138:	ldr	w1, [sp, #128]
  43013c:	cmp	w1, w6
  430140:	b.hi	430158 <nftw@plt+0x2d5d8>  // b.pmore
  430144:	add	w3, w27, #0x1
  430148:	add	x1, x26, #0x30
  43014c:	csel	x26, x1, x26, ne  // ne = any
  430150:	add	x3, x0, x3, lsl #3
  430154:	str	x3, [x24, #16]
  430158:	ldrb	w1, [x25, #4]
  43015c:	sub	w0, w1, #0x15
  430160:	and	w0, w0, #0xff
  430164:	cmp	w0, #0x1
  430168:	b.ls	4302bc <nftw@plt+0x2d73c>  // b.plast
  43016c:	ldr	w0, [sp, #128]
  430170:	str	w0, [sp, #132]
  430174:	ldr	x1, [x24, #16]
  430178:	b	42ff90 <nftw@plt+0x2d410>
  43017c:	ldr	x0, [x26]
  430180:	mov	x1, x0
  430184:	cbnz	w20, 430038 <nftw@plt+0x2d4b8>
  430188:	ldr	x2, [sp, #120]
  43018c:	ldrb	w5, [x2, #19]
  430190:	tbz	w5, #3, 4300f0 <nftw@plt+0x2d570>
  430194:	ldrh	w5, [x2, #16]
  430198:	ldr	w2, [sp, #128]
  43019c:	cmp	w2, w5
  4301a0:	b.eq	430038 <nftw@plt+0x2d4b8>  // b.none
  4301a4:	b	4300f0 <nftw@plt+0x2d570>
  4301a8:	ldrh	w5, [x0, #6]
  4301ac:	ldr	x0, [x26]
  4301b0:	mov	x1, x0
  4301b4:	tbz	w5, #6, 430038 <nftw@plt+0x2d4b8>
  4301b8:	b	4300f0 <nftw@plt+0x2d570>
  4301bc:	mov	x0, x28
  4301c0:	bl	427030 <nftw@plt+0x244b0>
  4301c4:	ldp	x6, x7, [x25]
  4301c8:	stp	x6, x7, [x0]
  4301cc:	ldr	x1, [x25, #16]
  4301d0:	mov	x25, x0
  4301d4:	str	x1, [x0, #16]
  4301d8:	cbz	x19, 43025c <nftw@plt+0x2d6dc>
  4301dc:	ldp	x1, x0, [x19, #16]
  4301e0:	sub	x0, x0, x1
  4301e4:	cmp	x0, #0x7
  4301e8:	b.hi	43020c <nftw@plt+0x2d68c>  // b.pmore
  4301ec:	ldr	x5, [x19, #8]
  4301f0:	mov	x0, x28
  4301f4:	sub	x1, x1, x5
  4301f8:	lsl	x1, x1, #1
  4301fc:	bl	427c60 <nftw@plt+0x250e0>
  430200:	ldr	x1, [x0, #16]
  430204:	str	x19, [x0]
  430208:	mov	x19, x0
  43020c:	str	x25, [x1], #8
  430210:	ldrb	w0, [x25, #4]
  430214:	str	x1, [x19, #16]
  430218:	cmp	w0, #0x52
  43021c:	b.eq	43023c <nftw@plt+0x2d6bc>  // b.none
  430220:	add	x1, sp, #0x12c
  430224:	mov	x0, x28
  430228:	bl	4314a8 <nftw@plt+0x2e928>
  43022c:	mov	x25, x0
  430230:	ldrb	w0, [x0, #4]
  430234:	cmp	w0, #0x16
  430238:	b.ne	4301d8 <nftw@plt+0x2d658>  // b.any
  43023c:	mov	w0, #0x201                 	// #513
  430240:	strh	w0, [x28, #24]
  430244:	ldr	x0, [x26]
  430248:	ldrb	w5, [x25, #4]
  43024c:	mov	x1, x0
  430250:	cmp	w5, #0x16
  430254:	b.eq	4300f0 <nftw@plt+0x2d570>  // b.none
  430258:	b	42ffcc <nftw@plt+0x2d44c>
  43025c:	mov	x1, #0x100                 	// #256
  430260:	mov	x0, x28
  430264:	bl	427c60 <nftw@plt+0x250e0>
  430268:	mov	x19, x0
  43026c:	ldr	x1, [x0, #16]
  430270:	b	43020c <nftw@plt+0x2d68c>
  430274:	cbz	x0, 4302b0 <nftw@plt+0x2d730>
  430278:	ldr	x5, [x26, #32]
  43027c:	ldr	w7, [x28, #688]
  430280:	str	x6, [x0, x1, lsl #3]
  430284:	add	x6, x5, x1, lsl #2
  430288:	cbz	x6, 430130 <nftw@plt+0x2d5b0>
  43028c:	str	w7, [x5, x1, lsl #2]
  430290:	b	430130 <nftw@plt+0x2d5b0>
  430294:	mov	w1, w27
  430298:	b	430118 <nftw@plt+0x2d598>
  43029c:	mov	x0, #0xc8                  	// #200
  4302a0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4302a4:	str	x0, [x26, #32]
  4302a8:	ldr	x1, [x26]
  4302ac:	b	42ffa8 <nftw@plt+0x2d428>
  4302b0:	mov	x0, #0x0                   	// #0
  4302b4:	str	x6, [x0]
  4302b8:	brk	#0x3e8
  4302bc:	cmp	w1, #0x16
  4302c0:	ldr	x23, [sp, #144]
  4302c4:	b.eq	430f3c <nftw@plt+0x2e3bc>  // b.none
  4302c8:	ldr	w0, [sp, #128]
  4302cc:	cmp	w0, #0x1
  4302d0:	mov	w20, w0
  4302d4:	b.eq	431104 <nftw@plt+0x2e584>  // b.none
  4302d8:	ldr	x21, [sp, #120]
  4302dc:	mov	w3, w20
  4302e0:	mov	x2, x23
  4302e4:	mov	x0, x28
  4302e8:	mov	x1, x21
  4302ec:	bl	42e010 <nftw@plt+0x2b490>
  4302f0:	ands	w0, w0, #0xff
  4302f4:	str	w0, [sp, #168]
  4302f8:	b.eq	430f6c <nftw@plt+0x2e3ec>  // b.none
  4302fc:	ldrb	w0, [x21, #19]
  430300:	tbz	w0, #3, 430318 <nftw@plt+0x2d798>
  430304:	ldrh	w0, [x21, #16]
  430308:	cmp	w20, w0
  43030c:	b.cc	431228 <nftw@plt+0x2e6a8>  // b.lo, b.ul, b.last
  430310:	cmp	w20, #0x1
  430314:	b.eq	431214 <nftw@plt+0x2e694>  // b.none
  430318:	ldrb	w0, [x28, #24]
  43031c:	ldr	x1, [sp, #112]
  430320:	sub	w0, w0, #0x1
  430324:	strb	w0, [x28, #24]
  430328:	ldr	w0, [x28, #500]
  43032c:	strb	wzr, [x28, #25]
  430330:	sub	w0, w0, #0x1
  430334:	ldrh	w1, [x1, #16]
  430338:	str	w0, [x28, #500]
  43033c:	ldr	x0, [sp, #160]
  430340:	ldr	x0, [x0, #8]
  430344:	str	x0, [sp, #120]
  430348:	cbnz	w1, 4303bc <nftw@plt+0x2d83c>
  43034c:	ldr	w0, [sp, #128]
  430350:	cbz	w0, 4303ac <nftw@plt+0x2d82c>
  430354:	ldr	w1, [sp, #132]
  430358:	mov	w21, #0x30                  	// #48
  43035c:	ldr	x0, [sp, #120]
  430360:	add	x20, x0, #0x8
  430364:	umaddl	x21, w1, w21, x0
  430368:	add	x21, x21, #0x38
  43036c:	nop
  430370:	ldr	x0, [x20]
  430374:	cbz	x0, 430380 <nftw@plt+0x2d800>
  430378:	bl	402910 <free@plt>
  43037c:	str	xzr, [x20]
  430380:	ldr	x0, [x20, #24]
  430384:	cbz	x0, 430390 <nftw@plt+0x2d810>
  430388:	bl	402910 <free@plt>
  43038c:	str	xzr, [x20, #24]
  430390:	ldr	x0, [x20, #32]
  430394:	cbz	x0, 4303a0 <nftw@plt+0x2d820>
  430398:	bl	402910 <free@plt>
  43039c:	str	xzr, [x20, #32]
  4303a0:	add	x20, x20, #0x30
  4303a4:	cmp	x21, x20
  4303a8:	b.ne	430370 <nftw@plt+0x2d7f0>  // b.any
  4303ac:	ldr	x0, [sp, #160]
  4303b0:	bl	427e70 <nftw@plt+0x252f0>
  4303b4:	ldp	x25, x26, [sp, #64]
  4303b8:	b	42fbb4 <nftw@plt+0x2d034>
  4303bc:	ldr	x1, [sp, #112]
  4303c0:	ldrb	w0, [x1, #19]
  4303c4:	ldr	w21, [x1, #12]
  4303c8:	tbnz	w0, #6, 430618 <nftw@plt+0x2da98>
  4303cc:	ldr	x0, [sp, #112]
  4303d0:	mov	w1, #0x18                  	// #24
  4303d4:	add	x22, x0, #0x18
  4303d8:	str	x22, [sp, #136]
  4303dc:	mov	w0, w21
  4303e0:	umaddl	x24, w21, w1, x22
  4303e4:	cmp	x22, x24
  4303e8:	b.cs	431370 <nftw@plt+0x2e7f0>  // b.hs, b.nlast
  4303ec:	mov	w25, w21
  4303f0:	mov	x27, x28
  4303f4:	stp	x19, x23, [sp, #144]
  4303f8:	b	430408 <nftw@plt+0x2d888>
  4303fc:	add	x22, x22, #0x18
  430400:	cmp	x24, x22
  430404:	b.ls	430b64 <nftw@plt+0x2dfe4>  // b.plast
  430408:	ldrb	w0, [x22, #4]
  43040c:	cmp	w0, #0x50
  430410:	b.ne	4303fc <nftw@plt+0x2d87c>  // b.any
  430414:	ldr	w6, [x22, #8]
  430418:	mov	w1, #0x30                  	// #48
  43041c:	ldrh	w0, [x22, #6]
  430420:	add	w21, w21, #0x2
  430424:	ldr	x2, [sp, #120]
  430428:	sub	w6, w6, #0x1
  43042c:	add	w26, w25, #0x2
  430430:	umaddl	x19, w6, w1, x2
  430434:	tbz	w0, #2, 430a7c <nftw@plt+0x2defc>
  430438:	ldr	x0, [x19, #16]
  43043c:	mov	w25, w26
  430440:	cbnz	x0, 4303fc <nftw@plt+0x2d87c>
  430444:	ldr	x1, [x27, #64]
  430448:	ldp	x0, x1, [x1, #16]
  43044c:	sub	x1, x1, x0
  430450:	cmp	x1, #0x2
  430454:	b.ls	431240 <nftw@plt+0x2e6c0>  // b.plast
  430458:	mov	x20, x0
  43045c:	mov	w1, #0x22                  	// #34
  430460:	mov	x23, #0x0                   	// #0
  430464:	mov	w2, #0x0                   	// #0
  430468:	mov	w25, #0x0                   	// #0
  43046c:	strb	w1, [x20], #1
  430470:	ldr	w1, [x19, #24]
  430474:	cbz	w1, 431408 <nftw@plt+0x2e888>
  430478:	mov	w28, w2
  43047c:	str	w21, [sp, #192]
  430480:	mov	x21, x27
  430484:	stp	x24, x22, [sp, #176]
  430488:	ldr	x0, [x19]
  43048c:	ldr	x22, [x0, w25, uxtw #3]
  430490:	ldrb	w0, [x22, #4]
  430494:	cmp	w0, #0x53
  430498:	b.eq	430fa4 <nftw@plt+0x2e424>  // b.none
  43049c:	cmp	w0, #0x3e
  4304a0:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304a4:	cmp	w0, #0x38
  4304a8:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304ac:	cmp	w0, #0x3f
  4304b0:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304b4:	cmp	w0, #0x39
  4304b8:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304bc:	cmp	w0, #0x41
  4304c0:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304c4:	cmp	w0, #0x3b
  4304c8:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304cc:	cmp	w0, #0x40
  4304d0:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304d4:	cmp	w0, #0x3a
  4304d8:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304dc:	cmp	w0, #0x42
  4304e0:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304e4:	cmp	w0, #0x3c
  4304e8:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  4304ec:	bl	420c30 <nftw@plt+0x1e0b0>
  4304f0:	tst	w0, #0xff
  4304f4:	b.eq	4307e0 <nftw@plt+0x2dc60>  // b.none
  4304f8:	mov	x0, x22
  4304fc:	bl	427170 <nftw@plt+0x245f0>
  430500:	mov	w0, w0
  430504:	ldr	w24, [sp, #168]
  430508:	lsl	x0, x0, #2
  43050c:	ldr	x1, [x21, #64]
  430510:	add	x27, x0, #0x3
  430514:	ldr	x0, [x1, #24]
  430518:	ldr	x1, [x1, #16]
  43051c:	sub	x0, x0, x20
  430520:	cmp	x27, x0
  430524:	b.hi	430db8 <nftw@plt+0x2e238>  // b.pmore
  430528:	sub	x0, x20, #0x1
  43052c:	cmp	x1, x0
  430530:	b.eq	43054c <nftw@plt+0x2d9cc>  // b.none
  430534:	cmp	x23, #0x0
  430538:	csel	x23, x23, x22, ne  // ne = any
  43053c:	ldrh	w0, [x23, #6]
  430540:	tbz	w0, #0, 43054c <nftw@plt+0x2d9cc>
  430544:	mov	w0, #0x20                  	// #32
  430548:	strb	w0, [x20], #1
  43054c:	cbnz	w24, 430e08 <nftw@plt+0x2e288>
  430550:	mov	x2, x20
  430554:	mov	x1, x22
  430558:	mov	x0, x21
  43055c:	mov	w3, #0x1                   	// #1
  430560:	bl	427240 <nftw@plt+0x246c0>
  430564:	mov	x20, x0
  430568:	ldrb	w0, [x22, #4]
  43056c:	cmp	w0, #0x3d
  430570:	b.eq	430d98 <nftw@plt+0x2e218>  // b.none
  430574:	ldr	w1, [x19, #24]
  430578:	mov	x23, #0x0                   	// #0
  43057c:	mov	w28, #0x0                   	// #0
  430580:	add	w25, w25, #0x1
  430584:	cmp	w1, w25
  430588:	b.hi	430488 <nftw@plt+0x2d908>  // b.pmore
  43058c:	mov	x27, x21
  430590:	add	x1, x20, #0x1
  430594:	ldr	w21, [sp, #192]
  430598:	ldp	x24, x22, [sp, #176]
  43059c:	tbz	w28, #0, 4305bc <nftw@plt+0x2da3c>
  4305a0:	mov	w1, #0x0                   	// #0
  4305a4:	mov	x0, x27
  4305a8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4305ac:	add	x2, x2, #0xa90
  4305b0:	bl	41f298 <nftw@plt+0x1c718>
  4305b4:	mov	x1, x20
  4305b8:	sub	x20, x20, #0x1
  4305bc:	mov	w2, #0x22                  	// #34
  4305c0:	strb	w2, [x20], #2
  4305c4:	mov	w25, w26
  4305c8:	mov	x0, x27
  4305cc:	ldr	x2, [x27, #64]
  4305d0:	ldr	x26, [x2, #16]
  4305d4:	str	x20, [x2, #16]
  4305d8:	sub	x20, x1, x26
  4305dc:	bl	427030 <nftw@plt+0x244b0>
  4305e0:	mov	w1, #0x3e                  	// #62
  4305e4:	strb	wzr, [x26, w20, uxtw]
  4305e8:	strb	w1, [x0, #4]
  4305ec:	strh	wzr, [x0, #6]
  4305f0:	str	w20, [x0, #8]
  4305f4:	str	x26, [x0, #16]
  4305f8:	str	x0, [x19, #16]
  4305fc:	b	4303fc <nftw@plt+0x2d87c>
  430600:	ubfiz	x0, x21, #1, #32
  430604:	add	x0, x0, w21, uxtw
  430608:	add	x0, x1, x0, lsl #3
  43060c:	ldrb	w0, [x0, #28]
  430610:	cmp	w0, #0x26
  430614:	b.ne	431388 <nftw@plt+0x2e808>  // b.any
  430618:	mov	w25, w21
  43061c:	sub	w21, w21, #0x1
  430620:	cbnz	w25, 430600 <nftw@plt+0x2da80>
  430624:	ldr	x0, [sp, #112]
  430628:	mov	w21, #0x0                   	// #0
  43062c:	mov	x20, #0x0                   	// #0
  430630:	add	x0, x0, #0x18
  430634:	str	x0, [sp, #136]
  430638:	mov	x24, x0
  43063c:	mov	x0, #0x0                   	// #0
  430640:	ldrb	w1, [x28, #1157]
  430644:	str	w1, [sp, #176]
  430648:	cbnz	w1, 430cd0 <nftw@plt+0x2e150>
  43064c:	mov	x1, x20
  430650:	mov	x0, x28
  430654:	bl	427c60 <nftw@plt+0x250e0>
  430658:	mov	x22, x0
  43065c:	ldr	x0, [x0, #8]
  430660:	mov	x5, #0x0                   	// #0
  430664:	str	xzr, [sp, #224]
  430668:	str	x0, [sp, #248]
  43066c:	ldr	x1, [sp, #112]
  430670:	mov	w0, #0x30                  	// #48
  430674:	mov	x2, #0xffffffffffffffd0    	// #-48
  430678:	ldr	x4, [sp, #136]
  43067c:	ldrh	w3, [x1, #16]
  430680:	ldrb	w1, [x1, #19]
  430684:	cmp	x4, x24
  430688:	and	w1, w1, #0x8
  43068c:	str	w1, [sp, #144]
  430690:	ldr	x1, [sp, #120]
  430694:	umaddl	x0, w0, w3, x2
  430698:	add	x0, x1, x0
  43069c:	ldr	w0, [x0, #24]
  4306a0:	str	w0, [sp, #272]
  4306a4:	b.cs	430ae8 <nftw@plt+0x2df68>  // b.hs, b.nlast
  4306a8:	ldr	x21, [sp, #136]
  4306ac:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4306b0:	add	x0, x0, #0xac0
  4306b4:	mov	x27, x28
  4306b8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4306bc:	mov	x28, x21
  4306c0:	add	x1, x1, #0xb10
  4306c4:	mov	x21, x22
  4306c8:	mov	w20, #0x0                   	// #0
  4306cc:	mov	x22, x5
  4306d0:	str	x24, [sp, #152]
  4306d4:	str	xzr, [sp, #208]
  4306d8:	stp	wzr, wzr, [sp, #216]
  4306dc:	str	x23, [sp, #240]
  4306e0:	stp	x19, x1, [sp, #256]
  4306e4:	str	x0, [sp, #280]
  4306e8:	mov	w0, #0x0                   	// #0
  4306ec:	mov	w19, w0
  4306f0:	ldr	x25, [sp, #224]
  4306f4:	b	430768 <nftw@plt+0x2dbe8>
  4306f8:	cmp	w20, #0x1
  4306fc:	b.eq	430a00 <nftw@plt+0x2de80>  // b.none
  430700:	b.le	430810 <nftw@plt+0x2dc90>
  430704:	cmp	w20, #0x2
  430708:	b.eq	430b54 <nftw@plt+0x2dfd4>  // b.none
  43070c:	cmp	w0, #0x26
  430710:	b.eq	430cbc <nftw@plt+0x2e13c>  // b.none
  430714:	cmp	w0, #0x14
  430718:	b.eq	430dfc <nftw@plt+0x2e27c>  // b.none
  43071c:	cmp	w0, #0x15
  430720:	b.ne	430800 <nftw@plt+0x2dc80>  // b.any
  430724:	sub	w20, w20, #0x1
  430728:	cmp	w20, #0x2
  43072c:	b.ne	430f34 <nftw@plt+0x2e3b4>  // b.any
  430730:	ldr	w0, [sp, #216]
  430734:	cbz	w0, 430ea0 <nftw@plt+0x2e320>
  430738:	ldr	w2, [x28]
  43073c:	mov	x0, x27
  430740:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  430744:	mov	w1, #0x3                   	// #3
  430748:	add	x3, x3, #0x940
  43074c:	mov	w20, #0x0                   	// #0
  430750:	bl	41f650 <nftw@plt+0x1cad0>
  430754:	str	wzr, [sp, #216]
  430758:	ldr	x0, [sp, #152]
  43075c:	add	x28, x28, #0x18
  430760:	cmp	x28, x0
  430764:	b.cs	430ad8 <nftw@plt+0x2df58>  // b.hs, b.nlast
  430768:	ldr	w1, [sp, #144]
  43076c:	ldrb	w0, [x28, #4]
  430770:	cbz	w1, 430810 <nftw@plt+0x2dc90>
  430774:	cmp	w0, #0x35
  430778:	b.ne	4306f8 <nftw@plt+0x2db78>  // b.any
  43077c:	ldr	x2, [x28, #8]
  430780:	ldr	x1, [x27, #1280]
  430784:	cmp	x2, x1
  430788:	b.eq	430b78 <nftw@plt+0x2dff8>  // b.none
  43078c:	cmp	w20, #0x1
  430790:	b.eq	430a0c <nftw@plt+0x2de8c>  // b.none
  430794:	b.gt	430704 <nftw@plt+0x2db84>
  430798:	ldrb	w12, [x27, #1157]
  43079c:	ldr	x0, [sp, #136]
  4307a0:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4307a4:	ldr	w4, [x28]
  4307a8:	movk	x7, #0xaaab
  4307ac:	sub	x6, x28, x0
  4307b0:	cmp	w12, #0x2
  4307b4:	mov	x5, x22
  4307b8:	mov	x2, x28
  4307bc:	asr	x6, x6, #3
  4307c0:	mov	x1, x25
  4307c4:	mov	w3, w4
  4307c8:	mov	x0, x21
  4307cc:	mul	x6, x6, x7
  4307d0:	csel	w6, w6, w19, cc  // cc = lo, ul, last
  4307d4:	add	w19, w19, #0x1
  4307d8:	bl	42d9c8 <nftw@plt+0x2ae48>
  4307dc:	b	430758 <nftw@plt+0x2dbd8>
  4307e0:	ldrb	w0, [x22, #4]
  4307e4:	bl	420c40 <nftw@plt+0x1e0c0>
  4307e8:	ands	w24, w0, #0xff
  4307ec:	mov	x0, x22
  4307f0:	b.ne	4304fc <nftw@plt+0x2d97c>  // b.any
  4307f4:	bl	427170 <nftw@plt+0x245f0>
  4307f8:	mov	w0, w0
  4307fc:	b	43050c <nftw@plt+0x2d98c>
  430800:	ldr	w1, [sp, #272]
  430804:	str	wzr, [sp, #216]
  430808:	cbz	w1, 430758 <nftw@plt+0x2dbd8>
  43080c:	nop
  430810:	ldrb	w12, [x27, #1157]
  430814:	cmp	w0, #0x50
  430818:	b.ne	43079c <nftw@plt+0x2dc1c>  // b.any
  43081c:	ldr	w2, [x28, #8]
  430820:	mov	w3, #0x30                  	// #48
  430824:	ldrh	w1, [x28, #6]
  430828:	ldr	x4, [sp, #120]
  43082c:	sub	w0, w2, #0x1
  430830:	umaddl	x0, w0, w3, x4
  430834:	tbz	w1, #2, 430aac <nftw@plt+0x2df2c>
  430838:	add	x24, x0, #0x10
  43083c:	mov	w26, #0x1                   	// #1
  430840:	cbnz	w12, 431024 <nftw@plt+0x2e4a4>
  430844:	mov	w23, w26
  430848:	str	xzr, [sp, #168]
  43084c:	ldrb	w0, [x27, #16]
  430850:	cbz	w0, 430860 <nftw@plt+0x2dce0>
  430854:	ldrb	w0, [x27, #17]
  430858:	str	xzr, [sp, #184]
  43085c:	cbz	w0, 4308fc <nftw@plt+0x2dd7c>
  430860:	ldr	x0, [sp, #136]
  430864:	str	xzr, [sp, #184]
  430868:	cmp	x0, x28
  43086c:	b.eq	4308fc <nftw@plt+0x2dd7c>  // b.none
  430870:	ldurh	w0, [x28, #-18]
  430874:	tbnz	w0, #3, 4308fc <nftw@plt+0x2dd7c>
  430878:	ldr	x2, [sp, #208]
  43087c:	cbz	x2, 430898 <nftw@plt+0x2dd18>
  430880:	ldp	x1, x0, [x21, #8]
  430884:	cmp	x1, x0
  430888:	b.eq	430898 <nftw@plt+0x2dd18>  // b.none
  43088c:	sub	x0, x0, #0x8
  430890:	cmp	x2, x0
  430894:	b.eq	4308fc <nftw@plt+0x2dd7c>  // b.none
  430898:	mov	x0, x27
  43089c:	str	w12, [sp, #192]
  4308a0:	bl	427030 <nftw@plt+0x244b0>
  4308a4:	ldr	w4, [x0]
  4308a8:	mov	x2, x0
  4308ac:	mov	w3, #0x53                  	// #83
  4308b0:	strb	w3, [x0, #4]
  4308b4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4308b8:	strh	wzr, [x0, #6]
  4308bc:	movk	x3, #0xaaab
  4308c0:	ldr	x0, [sp, #136]
  4308c4:	str	x28, [x2, #8]
  4308c8:	mov	x5, x22
  4308cc:	mov	x1, x25
  4308d0:	sub	x6, x28, x0
  4308d4:	mov	x0, x21
  4308d8:	str	xzr, [sp, #184]
  4308dc:	asr	x6, x6, #3
  4308e0:	mul	x6, x6, x3
  4308e4:	ldrb	w3, [x27, #1157]
  4308e8:	cmp	w3, #0x2
  4308ec:	mov	w3, w4
  4308f0:	csel	w6, w6, w19, cc  // cc = lo, ul, last
  4308f4:	bl	42d9c8 <nftw@plt+0x2ae48>
  4308f8:	ldr	w12, [sp, #192]
  4308fc:	cbnz	w23, 430bd0 <nftw@plt+0x2e050>
  430900:	ldrb	w0, [x27, #1154]
  430904:	cbz	w0, 430a2c <nftw@plt+0x2deac>
  430908:	ldrb	w0, [x27, #1152]
  43090c:	cbnz	w0, 430a2c <nftw@plt+0x2deac>
  430910:	ldr	x0, [sp, #112]
  430914:	ldrb	w0, [x0, #19]
  430918:	tbnz	w0, #4, 430a2c <nftw@plt+0x2deac>
  43091c:	ldr	x0, [x27]
  430920:	cbz	x0, 43092c <nftw@plt+0x2ddac>
  430924:	ldrb	w0, [x0, #106]
  430928:	cbnz	w0, 430a2c <nftw@plt+0x2deac>
  43092c:	ldrb	w0, [x27, #1120]
  430930:	cbnz	w0, 431390 <nftw@plt+0x2e810>
  430934:	ldrsb	w0, [x27, #1198]
  430938:	cmp	w0, #0x0
  43093c:	cbz	w0, 430960 <nftw@plt+0x2dde0>
  430940:	ldr	x0, [sp, #240]
  430944:	cset	w1, gt
  430948:	ldr	w4, [x28, #8]
  43094c:	add	w1, w1, #0x15
  430950:	ldr	x2, [sp, #264]
  430954:	ldr	x3, [x0]
  430958:	mov	x0, x27
  43095c:	bl	41f378 <nftw@plt+0x1c7f8>
  430960:	ldrb	w0, [x27, #16]
  430964:	mov	w23, w19
  430968:	cbnz	w0, 4309b4 <nftw@plt+0x2de34>
  43096c:	ldrh	w0, [x28, #6]
  430970:	tbnz	w0, #3, 4309b4 <nftw@plt+0x2de34>
  430974:	ldr	x2, [sp, #208]
  430978:	cbz	x2, 430994 <nftw@plt+0x2de14>
  43097c:	ldp	x1, x0, [x21, #8]
  430980:	cmp	x1, x0
  430984:	b.eq	430994 <nftw@plt+0x2de14>  // b.none
  430988:	sub	x0, x0, #0x8
  43098c:	cmp	x2, x0
  430990:	b.eq	4309b4 <nftw@plt+0x2de34>  // b.none
  430994:	ldr	w4, [x27, #664]
  430998:	add	x2, x27, #0x298
  43099c:	mov	x1, x25
  4309a0:	mov	x0, x21
  4309a4:	mov	w3, w4
  4309a8:	mov	w6, #0x0                   	// #0
  4309ac:	mov	x5, #0x0                   	// #0
  4309b0:	bl	42d9c8 <nftw@plt+0x2ae48>
  4309b4:	ldr	x0, [sp, #184]
  4309b8:	cbnz	x0, 4309e8 <nftw@plt+0x2de68>
  4309bc:	mov	w19, w23
  4309c0:	b	430758 <nftw@plt+0x2dbd8>
  4309c4:	ldrh	w0, [x28, #6]
  4309c8:	mov	x25, x19
  4309cc:	ldr	w20, [sp, #276]
  4309d0:	tbz	w0, #3, 4310a8 <nftw@plt+0x2e528>
  4309d4:	ldp	x1, x0, [x21, #8]
  4309d8:	cmp	x1, x0
  4309dc:	sub	x0, x0, #0x8
  4309e0:	str	x0, [sp, #184]
  4309e4:	b.eq	4309bc <nftw@plt+0x2de3c>  // b.none
  4309e8:	ldr	x1, [sp, #184]
  4309ec:	add	x2, x28, #0x6
  4309f0:	mov	x0, x27
  4309f4:	mov	w19, w23
  4309f8:	bl	42d948 <nftw@plt+0x2adc8>
  4309fc:	b	430758 <nftw@plt+0x2dbd8>
  430a00:	cmp	w0, #0x14
  430a04:	mov	w20, #0x2                   	// #2
  430a08:	b.eq	430758 <nftw@plt+0x2dbd8>  // b.none
  430a0c:	ldr	w2, [sp, #220]
  430a10:	mov	x0, x27
  430a14:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  430a18:	mov	w1, #0x3                   	// #3
  430a1c:	add	x3, x3, #0x908
  430a20:	mov	w20, #0x1                   	// #1
  430a24:	bl	41f650 <nftw@plt+0x1cad0>
  430a28:	b	430758 <nftw@plt+0x2dbd8>
  430a2c:	ldrsb	w0, [x27, #1198]
  430a30:	cmp	w0, #0x0
  430a34:	b.le	430960 <nftw@plt+0x2dde0>
  430a38:	ldrb	w0, [x27, #1120]
  430a3c:	cbnz	w0, 430960 <nftw@plt+0x2dde0>
  430a40:	ldr	x0, [sp, #112]
  430a44:	ldrb	w0, [x0, #19]
  430a48:	tbnz	w0, #4, 430960 <nftw@plt+0x2dde0>
  430a4c:	ldr	x0, [x27]
  430a50:	cbz	x0, 430a5c <nftw@plt+0x2dedc>
  430a54:	ldrb	w0, [x0, #106]
  430a58:	cbnz	w0, 430960 <nftw@plt+0x2dde0>
  430a5c:	ldr	x0, [sp, #240]
  430a60:	mov	w1, #0x16                  	// #22
  430a64:	ldr	w4, [x28, #8]
  430a68:	ldr	x2, [sp, #264]
  430a6c:	ldr	x3, [x0]
  430a70:	mov	x0, x27
  430a74:	bl	41f308 <nftw@plt+0x1c788>
  430a78:	b	430960 <nftw@plt+0x2dde0>
  430a7c:	tbnz	w0, #3, 430b44 <nftw@plt+0x2dfc4>
  430a80:	ldr	x0, [sp, #136]
  430a84:	cmp	x0, x22
  430a88:	b.eq	430a94 <nftw@plt+0x2df14>  // b.none
  430a8c:	ldurh	w0, [x22, #-18]
  430a90:	tbnz	w0, #3, 430b44 <nftw@plt+0x2dfc4>
  430a94:	ldr	x0, [x19, #8]
  430a98:	cbz	x0, 43125c <nftw@plt+0x2e6dc>
  430a9c:	ldr	w0, [x19, #28]
  430aa0:	add	w25, w25, #0x1
  430aa4:	add	w25, w25, w0
  430aa8:	b	4303fc <nftw@plt+0x2d87c>
  430aac:	tbz	w1, #3, 430d18 <nftw@plt+0x2e198>
  430ab0:	str	xzr, [sp, #168]
  430ab4:	mov	w26, #0x0                   	// #0
  430ab8:	ldr	w23, [x0, #24]
  430abc:	ldr	x24, [x0]
  430ac0:	cbz	w12, 43084c <nftw@plt+0x2dccc>
  430ac4:	cbz	x24, 4313fc <nftw@plt+0x2e87c>
  430ac8:	ldr	x0, [x0, #32]
  430acc:	mov	w26, #0x0                   	// #0
  430ad0:	str	x0, [sp, #168]
  430ad4:	b	43084c <nftw@plt+0x2dccc>
  430ad8:	ldr	x23, [sp, #240]
  430adc:	mov	x22, x21
  430ae0:	ldr	x19, [sp, #256]
  430ae4:	mov	x28, x27
  430ae8:	ldp	x0, x20, [x22, #8]
  430aec:	sub	x20, x20, x0
  430af0:	ldr	w0, [sp, #176]
  430af4:	lsr	x20, x20, #3
  430af8:	cbz	w0, 430ddc <nftw@plt+0x2e25c>
  430afc:	ldr	x3, [sp, #224]
  430b00:	mov	w5, w20
  430b04:	ldr	x4, [sp, #248]
  430b08:	mov	x2, x22
  430b0c:	mov	x1, x23
  430b10:	mov	x0, x28
  430b14:	bl	42d8b0 <nftw@plt+0x2ad30>
  430b18:	ldp	x3, x0, [x22, #8]
  430b1c:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  430b20:	ldr	w1, [x2, #2408]
  430b24:	sub	x0, x0, x3
  430b28:	ldr	x3, [sp, #160]
  430b2c:	lsr	x0, x0, #3
  430b30:	add	w0, w1, w0
  430b34:	str	w0, [x2, #2408]
  430b38:	ldr	x3, [x3, #8]
  430b3c:	str	x3, [sp, #120]
  430b40:	b	43034c <nftw@plt+0x2d7cc>
  430b44:	ldr	w0, [x19, #24]
  430b48:	add	w25, w25, #0x1
  430b4c:	add	w25, w25, w0
  430b50:	b	4303fc <nftw@plt+0x2d87c>
  430b54:	cmp	w0, #0x26
  430b58:	b.eq	4311f8 <nftw@plt+0x2e678>  // b.none
  430b5c:	mov	w20, #0x3                   	// #3
  430b60:	b	430714 <nftw@plt+0x2db94>
  430b64:	mov	x28, x27
  430b68:	mov	w0, w25
  430b6c:	ubfiz	x20, x25, #3, #32
  430b70:	ldp	x19, x23, [sp, #144]
  430b74:	b	430640 <nftw@plt+0x2dac0>
  430b78:	cbz	w20, 430b98 <nftw@plt+0x2e018>
  430b7c:	ldr	w2, [x28]
  430b80:	mov	x0, x27
  430b84:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  430b88:	mov	w1, #0x3                   	// #3
  430b8c:	add	x3, x3, #0x8d8
  430b90:	bl	41f650 <nftw@plt+0x1cad0>
  430b94:	b	430758 <nftw@plt+0x2dbd8>
  430b98:	ldr	x0, [sp, #136]
  430b9c:	cmp	x0, x28
  430ba0:	ldr	w0, [x28]
  430ba4:	str	w0, [sp, #220]
  430ba8:	b.eq	430bb4 <nftw@plt+0x2e034>  // b.none
  430bac:	ldurh	w0, [x28, #-18]
  430bb0:	tbz	w0, #3, 430fc8 <nftw@plt+0x2e448>
  430bb4:	ldp	x1, x0, [x21, #8]
  430bb8:	cmp	x1, x0
  430bbc:	b.eq	4311dc <nftw@plt+0x2e65c>  // b.none
  430bc0:	sub	x0, x0, #0x8
  430bc4:	mov	w20, #0x1                   	// #1
  430bc8:	str	x0, [sp, #208]
  430bcc:	b	430758 <nftw@plt+0x2dbd8>
  430bd0:	ldr	x0, [sp, #136]
  430bd4:	and	w26, w26, #0xfffffffd
  430bd8:	eor	w1, w26, #0x1
  430bdc:	str	w1, [sp, #196]
  430be0:	sub	x0, x28, x0
  430be4:	mov	w1, #0xaaab                	// #43691
  430be8:	movk	w1, #0xaaaa, lsl #16
  430bec:	mov	w26, w19
  430bf0:	asr	x0, x0, #3
  430bf4:	add	w23, w19, w23
  430bf8:	str	w20, [sp, #276]
  430bfc:	mov	x20, x24
  430c00:	mov	w24, w19
  430c04:	mov	x19, x25
  430c08:	mul	w0, w0, w1
  430c0c:	mov	w25, w26
  430c10:	mov	w26, w12
  430c14:	str	w0, [sp, #192]
  430c18:	b	430c58 <nftw@plt+0x2e0d8>
  430c1c:	ldr	x0, [sp, #168]
  430c20:	mov	x5, x22
  430c24:	mov	x1, x19
  430c28:	ldr	w3, [x0]
  430c2c:	mov	x0, x21
  430c30:	bl	42d9c8 <nftw@plt+0x2ae48>
  430c34:	ldr	w0, [sp, #196]
  430c38:	cbz	w0, 430c4c <nftw@plt+0x2e0cc>
  430c3c:	ldr	x0, [sp, #168]
  430c40:	add	x20, x20, #0x8
  430c44:	add	x0, x0, #0x4
  430c48:	str	x0, [sp, #168]
  430c4c:	add	w25, w25, #0x1
  430c50:	cmp	w23, w25
  430c54:	b.eq	4309c4 <nftw@plt+0x2de44>  // b.none
  430c58:	ldr	w1, [sp, #176]
  430c5c:	ldrb	w0, [x27, #1157]
  430c60:	cmp	w1, #0x1
  430c64:	csel	w6, w25, w24, gt
  430c68:	cmp	w0, #0x1
  430c6c:	ldr	w0, [sp, #192]
  430c70:	csel	w6, w6, w0, hi  // hi = pmore
  430c74:	cbz	x20, 430fc0 <nftw@plt+0x2e440>
  430c78:	ldr	x2, [x20]
  430c7c:	ldr	w4, [x28]
  430c80:	cbnz	w26, 430c1c <nftw@plt+0x2e09c>
  430c84:	mov	x9, x20
  430c88:	mov	x5, x22
  430c8c:	mov	x1, x19
  430c90:	mov	x0, x21
  430c94:	ldr	x3, [x9], #8
  430c98:	str	x9, [sp, #200]
  430c9c:	str	x9, [sp, #232]
  430ca0:	ldr	w3, [x3]
  430ca4:	bl	42d9c8 <nftw@plt+0x2ae48>
  430ca8:	ldr	w0, [sp, #196]
  430cac:	ldr	x9, [sp, #200]
  430cb0:	cmp	w0, #0x0
  430cb4:	csel	x20, x9, x20, ne  // ne = any
  430cb8:	b	430c4c <nftw@plt+0x2e0cc>
  430cbc:	mov	w0, #0x1                   	// #1
  430cc0:	str	w0, [sp, #216]
  430cc4:	ldr	w0, [sp, #272]
  430cc8:	cbz	w0, 430758 <nftw@plt+0x2dbd8>
  430ccc:	b	430798 <nftw@plt+0x2dc18>
  430cd0:	lsl	x0, x0, #4
  430cd4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  430cd8:	mov	x1, x20
  430cdc:	str	x0, [sp, #224]
  430ce0:	mov	x0, x28
  430ce4:	bl	427c60 <nftw@plt+0x250e0>
  430ce8:	ldr	w1, [sp, #176]
  430cec:	mov	x22, x0
  430cf0:	ldr	w2, [sp, #100]
  430cf4:	ldr	x4, [x0, #8]
  430cf8:	cmp	w1, #0x1
  430cfc:	ldr	x0, [x28, #40]
  430d00:	csel	w3, w25, w21, ne  // ne = any
  430d04:	mov	x1, x23
  430d08:	str	x4, [sp, #248]
  430d0c:	bl	42b410 <nftw@plt+0x28890>
  430d10:	mov	x5, x0
  430d14:	b	43066c <nftw@plt+0x2daec>
  430d18:	ldr	x1, [sp, #136]
  430d1c:	cmp	x1, x28
  430d20:	b.eq	431034 <nftw@plt+0x2e4b4>  // b.none
  430d24:	ldurh	w1, [x28, #-18]
  430d28:	tbz	w1, #3, 431034 <nftw@plt+0x2e4b4>
  430d2c:	str	xzr, [sp, #168]
  430d30:	ldr	w23, [x0, #24]
  430d34:	ldr	x24, [x0]
  430d38:	cbnz	w12, 431360 <nftw@plt+0x2e7e0>
  430d3c:	ldp	x1, x0, [x21, #8]
  430d40:	sub	x3, x0, x1
  430d44:	tst	x3, #0x7fffffff8
  430d48:	b.eq	431178 <nftw@plt+0x2e5f8>  // b.none
  430d4c:	cmp	x1, x0
  430d50:	b.eq	431494 <nftw@plt+0x2e914>  // b.none
  430d54:	ldur	x3, [x0, #-8]
  430d58:	sub	x4, x0, #0x8
  430d5c:	str	x4, [sp, #184]
  430d60:	ldrb	w3, [x3, #4]
  430d64:	cmp	w3, #0x13
  430d68:	b.eq	4313c0 <nftw@plt+0x2e840>  // b.none
  430d6c:	ldr	x0, [sp, #184]
  430d70:	cmp	w23, #0x0
  430d74:	ldr	x1, [sp, #208]
  430d78:	ccmp	x0, x1, #0x4, eq  // eq = none
  430d7c:	b.eq	431178 <nftw@plt+0x2e5f8>  // b.none
  430d80:	ldrb	w0, [x27, #16]
  430d84:	cbz	w0, 430900 <nftw@plt+0x2dd80>
  430d88:	ldrb	w0, [x27, #17]
  430d8c:	cbz	w0, 430900 <nftw@plt+0x2dd80>
  430d90:	mov	w26, #0x0                   	// #0
  430d94:	b	4308fc <nftw@plt+0x2dd7c>
  430d98:	ldr	x0, [x22, #16]
  430d9c:	ldrb	w0, [x0]
  430da0:	cmp	w0, #0x5c
  430da4:	b.eq	431140 <nftw@plt+0x2e5c0>  // b.none
  430da8:	ldr	w1, [x19, #24]
  430dac:	mov	x23, #0x0                   	// #0
  430db0:	mov	w28, #0x0                   	// #0
  430db4:	b	430580 <nftw@plt+0x2da00>
  430db8:	sub	x20, x20, x1
  430dbc:	mov	x0, x21
  430dc0:	add	x1, x21, #0x40
  430dc4:	mov	x2, x27
  430dc8:	bl	427e18 <nftw@plt+0x25298>
  430dcc:	ldr	x0, [x21, #64]
  430dd0:	ldr	x1, [x0, #16]
  430dd4:	add	x20, x1, x20
  430dd8:	b	430528 <nftw@plt+0x2d9a8>
  430ddc:	add	x0, x28, #0x88
  430de0:	bl	42d850 <nftw@plt+0x2acd0>
  430de4:	ldr	x1, [sp, #248]
  430de8:	stp	x22, x23, [x0, #32]
  430dec:	str	wzr, [x0, #48]
  430df0:	add	x20, x1, w20, uxtw #3
  430df4:	stp	x1, x20, [x0, #16]
  430df8:	b	430b18 <nftw@plt+0x2df98>
  430dfc:	add	w20, w20, #0x1
  430e00:	str	wzr, [sp, #216]
  430e04:	b	430cc4 <nftw@plt+0x2e144>
  430e08:	mov	x1, x27
  430e0c:	mov	x0, x21
  430e10:	bl	427c60 <nftw@plt+0x250e0>
  430e14:	mov	x23, x0
  430e18:	mov	x1, x22
  430e1c:	mov	x0, x21
  430e20:	mov	w3, #0x1                   	// #1
  430e24:	ldr	x27, [x23, #16]
  430e28:	mov	x2, x27
  430e2c:	bl	427240 <nftw@plt+0x246c0>
  430e30:	sub	x0, x0, x27
  430e34:	sub	w1, w0, #0x1
  430e38:	cbz	w0, 430e90 <nftw@plt+0x2e310>
  430e3c:	mov	w2, w1
  430e40:	add	x2, x2, #0x1
  430e44:	add	x2, x27, x2
  430e48:	b	430e5c <nftw@plt+0x2e2dc>
  430e4c:	mov	x20, x1
  430e50:	cmp	x27, x2
  430e54:	strb	w0, [x20], #1
  430e58:	b.eq	430e90 <nftw@plt+0x2e310>  // b.none
  430e5c:	ldrb	w0, [x27], #1
  430e60:	cmp	w0, #0x22
  430e64:	b.eq	430e80 <nftw@plt+0x2e300>  // b.none
  430e68:	cmp	w0, #0x5c
  430e6c:	b.eq	430e80 <nftw@plt+0x2e300>  // b.none
  430e70:	cmp	w0, #0xa
  430e74:	mov	x1, x20
  430e78:	b.ne	430e4c <nftw@plt+0x2e2cc>  // b.any
  430e7c:	mov	w0, #0x6e                  	// #110
  430e80:	mov	x1, x20
  430e84:	mov	w3, #0x5c                  	// #92
  430e88:	strb	w3, [x1], #1
  430e8c:	b	430e4c <nftw@plt+0x2e2cc>
  430e90:	mov	x1, x23
  430e94:	mov	x0, x21
  430e98:	bl	427c38 <nftw@plt+0x250b8>
  430e9c:	b	430568 <nftw@plt+0x2d9e8>
  430ea0:	ldp	x0, x1, [x21, #8]
  430ea4:	ldrh	w3, [x28, #6]
  430ea8:	and	w3, w3, #0x8
  430eac:	cmp	x0, x1
  430eb0:	b.eq	4313b0 <nftw@plt+0x2e830>  // b.none
  430eb4:	ldr	x4, [sp, #208]
  430eb8:	sub	x1, x1, #0x8
  430ebc:	cmp	x1, x4
  430ec0:	b.ne	430ed4 <nftw@plt+0x2e354>  // b.any
  430ec4:	b	431150 <nftw@plt+0x2e5d0>
  430ec8:	sub	x1, x1, #0x8
  430ecc:	cmp	x1, x4
  430ed0:	b.eq	431154 <nftw@plt+0x2e5d4>  // b.none
  430ed4:	ldr	x2, [x1]
  430ed8:	ldrb	w2, [x2, #4]
  430edc:	cmp	w2, #0x53
  430ee0:	b.ne	431120 <nftw@plt+0x2e5a0>  // b.any
  430ee4:	ldr	x1, [x21, #16]
  430ee8:	cmp	x0, x1
  430eec:	b.cs	430ef8 <nftw@plt+0x2e378>  // b.hs, b.nlast
  430ef0:	sub	x1, x1, #0x8
  430ef4:	str	x1, [x21, #16]
  430ef8:	cmp	x0, x1
  430efc:	b.ne	430ec8 <nftw@plt+0x2e348>  // b.any
  430f00:	cbnz	w3, 431168 <nftw@plt+0x2e5e8>
  430f04:	ldr	w4, [x27, #664]
  430f08:	add	x2, x27, #0x298
  430f0c:	mov	x1, x25
  430f10:	mov	x0, x21
  430f14:	mov	w3, w4
  430f18:	mov	w6, #0x0                   	// #0
  430f1c:	mov	x5, #0x0                   	// #0
  430f20:	mov	w20, #0x0                   	// #0
  430f24:	bl	42d9c8 <nftw@plt+0x2ae48>
  430f28:	str	xzr, [sp, #208]
  430f2c:	str	wzr, [sp, #216]
  430f30:	b	430758 <nftw@plt+0x2dbd8>
  430f34:	str	wzr, [sp, #216]
  430f38:	b	430cc4 <nftw@plt+0x2e144>
  430f3c:	ldr	x0, [x28, #136]
  430f40:	ldr	x0, [x0, #8]
  430f44:	cbz	x0, 43137c <nftw@plt+0x2e7fc>
  430f48:	mov	x0, x28
  430f4c:	mov	w1, #0x1                   	// #1
  430f50:	bl	42e590 <nftw@plt+0x2ba10>
  430f54:	ldr	x3, [x23]
  430f58:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  430f5c:	mov	x0, x28
  430f60:	add	x2, x2, #0xa18
  430f64:	mov	w1, #0x3                   	// #3
  430f68:	bl	41f298 <nftw@plt+0x1c718>
  430f6c:	ldr	x1, [sp, #160]
  430f70:	mov	x0, x28
  430f74:	bl	427c38 <nftw@plt+0x250b8>
  430f78:	strb	wzr, [x28, #25]
  430f7c:	ldrb	w1, [x28, #24]
  430f80:	ldr	w0, [x28, #500]
  430f84:	ldrb	w2, [x28, #1138]
  430f88:	sub	w1, w1, #0x1
  430f8c:	sub	w0, w0, #0x1
  430f90:	strb	w1, [x28, #24]
  430f94:	str	w0, [x28, #500]
  430f98:	cbnz	w2, 431480 <nftw@plt+0x2e900>
  430f9c:	ldp	x25, x26, [sp, #64]
  430fa0:	b	42fe38 <nftw@plt+0x2d2b8>
  430fa4:	cbz	x23, 4311d0 <nftw@plt+0x2e650>
  430fa8:	ldrh	w0, [x23, #6]
  430fac:	tbnz	w0, #0, 430580 <nftw@plt+0x2da00>
  430fb0:	ldr	x0, [x22, #8]
  430fb4:	cbnz	x0, 430580 <nftw@plt+0x2da00>
  430fb8:	mov	x23, x0
  430fbc:	b	430580 <nftw@plt+0x2da00>
  430fc0:	mov	x2, #0x0                   	// #0
  430fc4:	b	430c7c <nftw@plt+0x2e0fc>
  430fc8:	mov	x0, x27
  430fcc:	bl	427030 <nftw@plt+0x244b0>
  430fd0:	mov	w3, #0x53                  	// #83
  430fd4:	ldr	w4, [x0]
  430fd8:	mov	x2, x0
  430fdc:	strb	w3, [x0, #4]
  430fe0:	strh	wzr, [x0, #6]
  430fe4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  430fe8:	ldr	x0, [sp, #136]
  430fec:	str	x28, [x2, #8]
  430ff0:	movk	x3, #0xaaab
  430ff4:	mov	x5, x22
  430ff8:	sub	x6, x28, x0
  430ffc:	ldrb	w9, [x27, #1157]
  431000:	mov	x1, x25
  431004:	mov	x0, x21
  431008:	asr	x6, x6, #3
  43100c:	cmp	w9, #0x2
  431010:	mul	x6, x6, x3
  431014:	mov	w3, w4
  431018:	csel	w6, w6, w19, cc  // cc = lo, ul, last
  43101c:	bl	42d9c8 <nftw@plt+0x2ae48>
  431020:	b	430bb4 <nftw@plt+0x2e034>
  431024:	ldr	x0, [x0, #16]
  431028:	mov	w23, w26
  43102c:	str	x0, [sp, #168]
  431030:	b	43084c <nftw@plt+0x2dccc>
  431034:	str	xzr, [sp, #168]
  431038:	ldr	w23, [x0, #28]
  43103c:	ldr	x24, [x0, #8]
  431040:	cbnz	w12, 4311e8 <nftw@plt+0x2e668>
  431044:	ldr	x2, [sp, #208]
  431048:	cbz	x2, 4310a0 <nftw@plt+0x2e520>
  43104c:	ldp	x1, x0, [x21, #8]
  431050:	cmp	x1, x0
  431054:	b.eq	4310a0 <nftw@plt+0x2e520>  // b.none
  431058:	sub	x0, x0, #0x8
  43105c:	mov	w26, #0x2                   	// #2
  431060:	cmp	x2, x0
  431064:	b.ne	43084c <nftw@plt+0x2dccc>  // b.any
  431068:	cbz	w23, 43084c <nftw@plt+0x2dccc>
  43106c:	ldr	x1, [sp, #168]
  431070:	cbz	x24, 4314a0 <nftw@plt+0x2e920>
  431074:	ldr	x0, [x24]
  431078:	ldrb	w0, [x0, #4]
  43107c:	cmp	w0, #0x53
  431080:	b.ne	43109c <nftw@plt+0x2e51c>  // b.any
  431084:	cmp	w12, #0x0
  431088:	add	x0, x1, #0x4
  43108c:	csel	x1, x0, x1, ne  // ne = any
  431090:	add	x24, x24, #0x8
  431094:	subs	w23, w23, #0x1
  431098:	b.ne	431070 <nftw@plt+0x2e4f0>  // b.any
  43109c:	str	x1, [sp, #168]
  4310a0:	mov	w26, #0x2                   	// #2
  4310a4:	b	43084c <nftw@plt+0x2dccc>
  4310a8:	ldrb	w0, [x27, #16]
  4310ac:	cbz	w0, 430974 <nftw@plt+0x2ddf4>
  4310b0:	b	4309b4 <nftw@plt+0x2de34>
  4310b4:	ldr	x0, [sp, #112]
  4310b8:	mov	w22, w21
  4310bc:	add	x20, x0, #0x18
  4310c0:	cbz	w1, 42fef0 <nftw@plt+0x2d370>
  4310c4:	mov	w22, w21
  4310c8:	ubfiz	x0, x21, #4, #32
  4310cc:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4310d0:	mov	x25, x0
  4310d4:	lsl	x1, x22, #3
  4310d8:	mov	x0, x28
  4310dc:	bl	427c60 <nftw@plt+0x250e0>
  4310e0:	mov	x24, x0
  4310e4:	ldr	w2, [sp, #100]
  4310e8:	mov	w3, w21
  4310ec:	ldr	x0, [x28, #40]
  4310f0:	mov	x1, x23
  4310f4:	mov	w22, w21
  4310f8:	bl	42b410 <nftw@plt+0x28890>
  4310fc:	mov	x26, x0
  431100:	b	42fc54 <nftw@plt+0x2d0d4>
  431104:	mov	x20, x0
  431108:	cbnz	w6, 4302d8 <nftw@plt+0x2d758>
  43110c:	ldr	x0, [sp, #152]
  431110:	ldr	w0, [x0, #24]
  431114:	cmp	w0, #0x0
  431118:	cset	w20, ne  // ne = any
  43111c:	b	4302d8 <nftw@plt+0x2d758>
  431120:	cbz	w3, 430f04 <nftw@plt+0x2e384>
  431124:	add	x2, x28, #0x6
  431128:	mov	x0, x27
  43112c:	mov	w20, #0x0                   	// #0
  431130:	bl	42d948 <nftw@plt+0x2adc8>
  431134:	str	xzr, [sp, #208]
  431138:	str	wzr, [sp, #216]
  43113c:	b	430758 <nftw@plt+0x2dbd8>
  431140:	ldr	w1, [x19, #24]
  431144:	add	w28, w28, #0x1
  431148:	mov	x23, #0x0                   	// #0
  43114c:	b	430580 <nftw@plt+0x2da00>
  431150:	ldr	x1, [sp, #208]
  431154:	cbz	w3, 430f04 <nftw@plt+0x2e384>
  431158:	ldr	x0, [x1]
  43115c:	ldrb	w0, [x0, #4]
  431160:	cmp	w0, #0x53
  431164:	b.ne	431124 <nftw@plt+0x2e5a4>  // b.any
  431168:	mov	w20, #0x0                   	// #0
  43116c:	str	xzr, [sp, #208]
  431170:	str	wzr, [sp, #216]
  431174:	b	430758 <nftw@plt+0x2dbd8>
  431178:	str	xzr, [sp, #184]
  43117c:	ldrb	w0, [x27, #16]
  431180:	mov	w26, #0x0                   	// #0
  431184:	cbz	w0, 4308fc <nftw@plt+0x2dd7c>
  431188:	ldrb	w0, [x27, #17]
  43118c:	cbz	w0, 4308fc <nftw@plt+0x2dd7c>
  431190:	mov	w26, #0x0                   	// #0
  431194:	b	4308fc <nftw@plt+0x2dd7c>
  431198:	mov	x0, #0x0                   	// #0
  43119c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4311a0:	mov	x1, #0x0                   	// #0
  4311a4:	mov	x25, x0
  4311a8:	mov	x0, x28
  4311ac:	bl	427c60 <nftw@plt+0x250e0>
  4311b0:	ldr	w2, [sp, #100]
  4311b4:	mov	x24, x0
  4311b8:	ldr	x0, [x28, #40]
  4311bc:	mov	x1, x23
  4311c0:	mov	w3, #0x0                   	// #0
  4311c4:	mov	w22, #0x0                   	// #0
  4311c8:	bl	42b410 <nftw@plt+0x28890>
  4311cc:	b	42fc88 <nftw@plt+0x2d108>
  4311d0:	ldr	x0, [x22, #8]
  4311d4:	mov	x23, x0
  4311d8:	b	430580 <nftw@plt+0x2da00>
  4311dc:	mov	w20, #0x1                   	// #1
  4311e0:	str	xzr, [sp, #208]
  4311e4:	b	430758 <nftw@plt+0x2dbd8>
  4311e8:	cbz	x24, 431410 <nftw@plt+0x2e890>
  4311ec:	ldr	x0, [x0, #40]
  4311f0:	str	x0, [sp, #168]
  4311f4:	b	431044 <nftw@plt+0x2e4c4>
  4311f8:	ldr	w2, [x28]
  4311fc:	mov	x0, x27
  431200:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  431204:	mov	w1, #0x3                   	// #3
  431208:	add	x3, x3, #0x940
  43120c:	bl	41f650 <nftw@plt+0x1cad0>
  431210:	b	430758 <nftw@plt+0x2dbd8>
  431214:	ldr	x1, [sp, #152]
  431218:	ldr	w1, [x1, #24]
  43121c:	cbnz	w1, 430318 <nftw@plt+0x2d798>
  431220:	ldrb	w1, [x28, #1153]
  431224:	cbnz	w1, 430318 <nftw@plt+0x2d798>
  431228:	mov	w1, #0x30                  	// #48
  43122c:	mov	x2, #0xffffffffffffffd0    	// #-48
  431230:	umaddl	x0, w1, w0, x2
  431234:	ldr	x1, [sp, #152]
  431238:	str	xzr, [x1, x0]
  43123c:	b	430318 <nftw@plt+0x2d798>
  431240:	mov	x0, x27
  431244:	add	x1, x27, #0x40
  431248:	mov	x2, #0x3                   	// #3
  43124c:	bl	427e18 <nftw@plt+0x25298>
  431250:	ldr	x0, [x27, #64]
  431254:	ldr	x0, [x0, #16]
  431258:	b	430458 <nftw@plt+0x2d8d8>
  43125c:	ldr	w0, [x19, #24]
  431260:	cbz	w0, 430a9c <nftw@plt+0x2df1c>
  431264:	ldrb	w1, [x27, #1138]
  431268:	mov	x0, #0x800                 	// #2048
  43126c:	strb	wzr, [x27, #1138]
  431270:	cmp	w1, #0x0
  431274:	ldrb	w20, [x27, #1157]
  431278:	cset	w26, ne  // ne = any
  43127c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  431280:	str	x0, [x19, #8]
  431284:	ldrb	w0, [x27, #1157]
  431288:	cbnz	w0, 431460 <nftw@plt+0x2e8e0>
  43128c:	ldr	w28, [x19, #24]
  431290:	ldr	x4, [x19]
  431294:	add	w28, w28, #0x1
  431298:	cbz	w20, 43143c <nftw@plt+0x2e8bc>
  43129c:	ldr	x3, [x19, #32]
  4312a0:	mov	w5, w28
  4312a4:	mov	x0, x27
  4312a8:	mov	x2, #0x0                   	// #0
  4312ac:	mov	x1, #0x0                   	// #0
  4312b0:	bl	42d8b0 <nftw@plt+0x2ad30>
  4312b4:	ldr	w0, [x19, #28]
  4312b8:	mov	x20, #0x100                 	// #256
  4312bc:	b	4312d0 <nftw@plt+0x2e750>
  4312c0:	cbz	x2, 431418 <nftw@plt+0x2e898>
  4312c4:	str	x1, [x2, w0, uxtw #3]
  4312c8:	add	w0, w0, #0x1
  4312cc:	str	w0, [x19, #28]
  4312d0:	add	w23, w0, #0x1
  4312d4:	cmp	x23, x20
  4312d8:	b.ls	43130c <nftw@plt+0x2e78c>  // b.plast
  4312dc:	ldr	x0, [x19, #8]
  4312e0:	lsl	x1, x23, #4
  4312e4:	lsl	x20, x23, #1
  4312e8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4312ec:	str	x0, [x19, #8]
  4312f0:	ldrb	w0, [x27, #1157]
  4312f4:	cbz	w0, 43130c <nftw@plt+0x2e78c>
  4312f8:	ldr	x0, [x19, #40]
  4312fc:	lsl	x1, x23, #3
  431300:	cbz	x0, 431470 <nftw@plt+0x2e8f0>
  431304:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  431308:	str	x0, [x19, #40]
  43130c:	add	x1, sp, #0x12c
  431310:	mov	x0, x27
  431314:	bl	4314a8 <nftw@plt+0x2e928>
  431318:	mov	x1, x0
  43131c:	ldrb	w0, [x0, #4]
  431320:	cmp	w0, #0x16
  431324:	b.eq	43142c <nftw@plt+0x2e8ac>  // b.none
  431328:	ldrb	w3, [x27, #1157]
  43132c:	ldr	w0, [x19, #28]
  431330:	ldr	x2, [x19, #8]
  431334:	cbz	w3, 4312c0 <nftw@plt+0x2e740>
  431338:	cbz	x2, 431418 <nftw@plt+0x2e898>
  43133c:	mov	w4, w0
  431340:	ldr	w5, [sp, #300]
  431344:	ldr	x3, [x19, #40]
  431348:	str	x1, [x2, x4, lsl #3]
  43134c:	add	x1, x3, w0, uxtw #2
  431350:	cbz	x1, 4312c8 <nftw@plt+0x2e748>
  431354:	str	w5, [x3, x4, lsl #2]
  431358:	ldr	w0, [x19, #28]
  43135c:	b	4312c8 <nftw@plt+0x2e748>
  431360:	cbz	x24, 431424 <nftw@plt+0x2e8a4>
  431364:	ldr	x0, [x0, #32]
  431368:	str	x0, [sp, #168]
  43136c:	b	430d3c <nftw@plt+0x2e1bc>
  431370:	lsl	x20, x0, #3
  431374:	mov	w25, w21
  431378:	b	430640 <nftw@plt+0x2dac0>
  43137c:	ldrb	w0, [x28, #16]
  431380:	cbz	w0, 430f54 <nftw@plt+0x2e3d4>
  431384:	b	430f48 <nftw@plt+0x2e3c8>
  431388:	mov	w21, w25
  43138c:	b	4303cc <nftw@plt+0x2d84c>
  431390:	ldr	x0, [sp, #240]
  431394:	mov	w1, #0x15                  	// #21
  431398:	ldr	w4, [x28, #8]
  43139c:	ldr	x2, [sp, #280]
  4313a0:	ldr	x3, [x0]
  4313a4:	mov	x0, x27
  4313a8:	bl	41f378 <nftw@plt+0x1c7f8>
  4313ac:	b	430960 <nftw@plt+0x2dde0>
  4313b0:	str	xzr, [sp, #208]
  4313b4:	mov	w20, #0x0                   	// #0
  4313b8:	cbnz	w3, 430758 <nftw@plt+0x2dbd8>
  4313bc:	b	430f04 <nftw@plt+0x2e384>
  4313c0:	ldr	x4, [sp, #112]
  4313c4:	ldrb	w3, [x4, #19]
  4313c8:	tbz	w3, #3, 430d6c <nftw@plt+0x2e1ec>
  4313cc:	ldrh	w3, [x4, #16]
  4313d0:	cmp	w2, w3
  4313d4:	b.ne	430d6c <nftw@plt+0x2e1ec>  // b.any
  4313d8:	cbz	x24, 4313e4 <nftw@plt+0x2e864>
  4313dc:	ldr	x2, [x24]
  4313e0:	cbnz	x2, 43117c <nftw@plt+0x2e5fc>
  4313e4:	cmp	x1, x0
  4313e8:	b.cs	431178 <nftw@plt+0x2e5f8>  // b.hs, b.nlast
  4313ec:	ldr	x0, [sp, #184]
  4313f0:	str	x0, [x21, #16]
  4313f4:	str	xzr, [sp, #184]
  4313f8:	b	43117c <nftw@plt+0x2e5fc>
  4313fc:	mov	w26, #0x0                   	// #0
  431400:	str	x24, [sp, #168]
  431404:	b	43084c <nftw@plt+0x2dccc>
  431408:	add	x1, x0, #0x2
  43140c:	b	4305bc <nftw@plt+0x2da3c>
  431410:	str	x24, [sp, #168]
  431414:	b	431044 <nftw@plt+0x2e4c4>
  431418:	mov	x0, #0x0                   	// #0
  43141c:	str	x1, [x0]
  431420:	brk	#0x3e8
  431424:	str	x24, [sp, #168]
  431428:	b	430d3c <nftw@plt+0x2e1bc>
  43142c:	mov	x0, x27
  431430:	bl	42e3e0 <nftw@plt+0x2b860>
  431434:	strb	w26, [x27, #1138]
  431438:	b	430a9c <nftw@plt+0x2df1c>
  43143c:	add	x0, x27, #0x88
  431440:	str	x4, [sp, #176]
  431444:	bl	42d850 <nftw@plt+0x2acd0>
  431448:	stp	xzr, xzr, [x0, #32]
  43144c:	ldr	x4, [sp, #176]
  431450:	str	wzr, [x0, #48]
  431454:	add	x28, x4, w28, uxtw #3
  431458:	stp	x4, x28, [x0, #16]
  43145c:	b	4312b4 <nftw@plt+0x2e734>
  431460:	mov	x0, #0x400                 	// #1024
  431464:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  431468:	str	x0, [x19, #40]
  43146c:	b	43128c <nftw@plt+0x2e70c>
  431470:	mov	x0, x1
  431474:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  431478:	str	x0, [x19, #40]
  43147c:	b	43130c <nftw@plt+0x2e78c>
  431480:	ldr	x0, [x23, #24]
  431484:	ldp	x25, x26, [sp, #64]
  431488:	ldrb	w0, [x0, #19]
  43148c:	tbnz	w0, #4, 42fe38 <nftw@plt+0x2d2b8>
  431490:	b	42fe20 <nftw@plt+0x2d2a0>
  431494:	mov	x0, #0x0                   	// #0
  431498:	ldr	x0, [x0]
  43149c:	brk	#0x3e8
  4314a0:	ldrb	w0, [x24, #4]
  4314a4:	brk	#0x3e8
  4314a8:	stp	x29, x30, [sp, #-112]!
  4314ac:	mov	x29, sp
  4314b0:	stp	x25, x26, [sp, #64]
  4314b4:	adrp	x25, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4314b8:	ldrb	w26, [x0, #192]
  4314bc:	add	x25, x25, #0x968
  4314c0:	stp	x19, x20, [sp, #16]
  4314c4:	mov	x19, x0
  4314c8:	stp	x23, x24, [sp, #48]
  4314cc:	mov	x24, x1
  4314d0:	mov	w23, #0x0                   	// #0
  4314d4:	stp	x21, x22, [sp, #32]
  4314d8:	ldr	x20, [x19, #136]
  4314dc:	ldr	x0, [x20, #8]
  4314e0:	cbz	x0, 431594 <nftw@plt+0x2ea14>
  4314e4:	ldr	w2, [x20, #48]
  4314e8:	cmp	w2, #0x1
  4314ec:	b.eq	431770 <nftw@plt+0x2ebf0>  // b.none
  4314f0:	tst	w2, #0xfffffffd
  4314f4:	b.ne	43196c <nftw@plt+0x2edec>  // b.any
  4314f8:	ldp	x0, x1, [x20, #16]
  4314fc:	cmp	x0, x1
  431500:	b.ne	4316bc <nftw@plt+0x2eb3c>  // b.any
  431504:	ldr	x0, [x20, #40]
  431508:	cbz	x0, 431518 <nftw@plt+0x2e998>
  43150c:	ldr	w0, [x25, #4]
  431510:	add	w0, w0, #0x1
  431514:	str	w0, [x25, #4]
  431518:	mov	x0, x19
  43151c:	bl	42e3e0 <nftw@plt+0x2b860>
  431520:	ldrb	w0, [x19, #16]
  431524:	cbnz	w0, 4314d8 <nftw@plt+0x2e958>
  431528:	add	x20, x19, #0x298
  43152c:	cbz	x24, 431574 <nftw@plt+0x2e9f4>
  431530:	cbnz	w23, 431538 <nftw@plt+0x2e9b8>
  431534:	ldr	w23, [x20]
  431538:	str	w23, [x24]
  43153c:	ldrb	w0, [x19, #1157]
  431540:	cbnz	w0, 431568 <nftw@plt+0x2e9e8>
  431544:	ldr	x0, [x19, #136]
  431548:	cbz	x0, 431568 <nftw@plt+0x2e9e8>
  43154c:	ldr	w1, [x0, #48]
  431550:	ldr	x0, [x0, #40]
  431554:	cmp	w1, #0x2
  431558:	b.eq	4317c0 <nftw@plt+0x2ec40>  // b.none
  43155c:	cbz	x0, 431568 <nftw@plt+0x2e9e8>
  431560:	ldr	w23, [x19, #176]
  431564:	str	w23, [x24]
  431568:	ldrb	w0, [x19, #1160]
  43156c:	cbnz	w0, 4316ac <nftw@plt+0x2eb2c>
  431570:	str	w23, [x24]
  431574:	strb	w26, [x19, #192]
  431578:	mov	x0, x20
  43157c:	ldp	x19, x20, [sp, #16]
  431580:	ldp	x21, x22, [sp, #32]
  431584:	ldp	x23, x24, [sp, #48]
  431588:	ldp	x25, x26, [sp, #64]
  43158c:	ldp	x29, x30, [sp], #112
  431590:	ret
  431594:	mov	x0, x19
  431598:	bl	42a820 <nftw@plt+0x27ca0>
  43159c:	ldr	w23, [x0]
  4315a0:	mov	x22, x0
  4315a4:	ldrb	w1, [x19, #16]
  4315a8:	ldrb	w0, [x22, #4]
  4315ac:	cbz	w1, 4315b8 <nftw@plt+0x2ea38>
  4315b0:	cmp	w0, #0x4f
  4315b4:	b.eq	4314d8 <nftw@plt+0x2e958>  // b.none
  4315b8:	cmp	w0, #0x35
  4315bc:	b.ne	431824 <nftw@plt+0x2eca4>  // b.any
  4315c0:	ldr	x1, [x22, #8]
  4315c4:	ldrb	w0, [x1, #18]
  4315c8:	tst	x0, #0x3
  4315cc:	b.eq	431824 <nftw@plt+0x2eca4>  // b.none
  4315d0:	ldrh	w0, [x22, #6]
  4315d4:	tbnz	w0, #10, 431824 <nftw@plt+0x2eca4>
  4315d8:	ldrh	w0, [x1, #18]
  4315dc:	ubfx	x2, x0, #2, #8
  4315e0:	tbnz	w0, #6, 4318b4 <nftw@plt+0x2ed34>
  4315e4:	ldrb	w0, [x19, #192]
  4315e8:	cbz	w0, 431680 <nftw@plt+0x2eb00>
  4315ec:	ldrb	w0, [x19, #24]
  4315f0:	cbnz	w0, 431824 <nftw@plt+0x2eca4>
  4315f4:	tbz	w2, #6, 43163c <nftw@plt+0x2eabc>
  4315f8:	ldr	x0, [x19, #992]
  4315fc:	cbz	x0, 431824 <nftw@plt+0x2eca4>
  431600:	mov	w1, #0x0                   	// #0
  431604:	mov	x0, x19
  431608:	bl	42a968 <nftw@plt+0x27de8>
  43160c:	ldrb	w1, [x0, #4]
  431610:	mov	w21, #0x1                   	// #1
  431614:	cmp	w1, #0x53
  431618:	b.eq	431624 <nftw@plt+0x2eaa4>  // b.none
  43161c:	ldrb	w21, [x0, #6]
  431620:	and	w21, w21, #0x1
  431624:	ldr	x2, [x19, #992]
  431628:	mov	x1, x22
  43162c:	mov	x0, x19
  431630:	blr	x2
  431634:	mov	x1, x0
  431638:	cbz	x0, 4318f8 <nftw@plt+0x2ed78>
  43163c:	mov	w3, w23
  431640:	mov	x2, x22
  431644:	mov	x0, x19
  431648:	bl	42fb00 <nftw@plt+0x2cf80>
  43164c:	cbz	w0, 431824 <nftw@plt+0x2eca4>
  431650:	ldrb	w1, [x19, #16]
  431654:	cmp	w1, #0x0
  431658:	ccmp	w0, #0x2, #0x4, eq  // eq = none
  43165c:	b.eq	4314d8 <nftw@plt+0x2e958>  // b.none
  431660:	mov	x0, x19
  431664:	bl	427030 <nftw@plt+0x244b0>
  431668:	mov	w1, #0x53                  	// #83
  43166c:	mov	x20, x0
  431670:	strb	w1, [x0, #4]
  431674:	strh	wzr, [x0, #6]
  431678:	str	x22, [x0, #8]
  43167c:	b	43152c <nftw@plt+0x2e9ac>
  431680:	ldr	x0, [x19, #136]
  431684:	cbz	x0, 43169c <nftw@plt+0x2eb1c>
  431688:	ldr	w3, [x0, #48]
  43168c:	ldr	x0, [x0, #40]
  431690:	cmp	w3, #0x2
  431694:	b.eq	4317b4 <nftw@plt+0x2ec34>  // b.none
  431698:	cbnz	x0, 4315ec <nftw@plt+0x2ea6c>
  43169c:	ldr	w0, [x22]
  4316a0:	str	w0, [x19, #176]
  4316a4:	str	x1, [x19, #184]
  4316a8:	b	4315ec <nftw@plt+0x2ea6c>
  4316ac:	ldrb	w0, [x19, #16]
  4316b0:	cbz	w0, 431570 <nftw@plt+0x2e9f0>
  4316b4:	ldr	w23, [x19, #48]
  4316b8:	b	431570 <nftw@plt+0x2e9f0>
  4316bc:	ldr	x22, [x0], #8
  4316c0:	cbz	w2, 4317a8 <nftw@plt+0x2ec28>
  4316c4:	ldr	x1, [x20, #40]
  4316c8:	ldr	x3, [x1, #8]
  4316cc:	cbz	x3, 4318ac <nftw@plt+0x2ed2c>
  4316d0:	ldr	x3, [x1, #16]
  4316d4:	ldr	w23, [x3], #4
  4316d8:	str	x3, [x1, #16]
  4316dc:	ldrh	w3, [x22, #6]
  4316e0:	str	x0, [x20, #16]
  4316e4:	tbz	w3, #3, 4315a4 <nftw@plt+0x2ea24>
  4316e8:	ldr	x0, [x1]
  4316ec:	stp	x27, x28, [sp, #80]
  4316f0:	str	x22, [sp, #104]
  4316f4:	cbz	x0, 4318e0 <nftw@plt+0x2ed60>
  4316f8:	ldr	x0, [x1, #16]
  4316fc:	ldur	w27, [x0, #-4]
  431700:	mov	x21, #0x0                   	// #0
  431704:	b	431758 <nftw@plt+0x2ebd8>
  431708:	cbnz	w2, 4317c8 <nftw@plt+0x2ec48>
  43170c:	ldr	x0, [x20, #16]
  431710:	add	x1, x0, #0x8
  431714:	str	x1, [x20, #16]
  431718:	ldr	x21, [x0]
  43171c:	ldrb	w0, [x21, #4]
  431720:	cmp	w0, #0x53
  431724:	b.ne	431730 <nftw@plt+0x2ebb0>  // b.any
  431728:	ldrh	w0, [x21, #6]
  43172c:	tbnz	w0, #3, 431954 <nftw@plt+0x2edd4>
  431730:	mov	x3, x21
  431734:	add	x2, sp, #0x68
  431738:	mov	w1, w27
  43173c:	mov	x0, x19
  431740:	bl	42e6c0 <nftw@plt+0x2bb40>
  431744:	tst	w0, #0xff
  431748:	b.eq	4317f4 <nftw@plt+0x2ec74>  // b.none
  43174c:	ldrh	w0, [x21, #6]
  431750:	ldr	w2, [x20, #48]
  431754:	tbz	w0, #3, 4317f8 <nftw@plt+0x2ec78>
  431758:	cmp	w2, #0x1
  43175c:	b.ne	431708 <nftw@plt+0x2eb88>  // b.any
  431760:	ldr	x21, [x20, #16]
  431764:	add	x0, x21, #0x18
  431768:	str	x0, [x20, #16]
  43176c:	b	43171c <nftw@plt+0x2eb9c>
  431770:	ldp	x22, x0, [x20, #16]
  431774:	cmp	x22, x0
  431778:	b.eq	431504 <nftw@plt+0x2e984>  // b.none
  43177c:	mov	x0, x22
  431780:	ldr	w23, [x0], #24
  431784:	str	x0, [x20, #16]
  431788:	ldrh	w0, [x22, #6]
  43178c:	tbz	w0, #3, 4315a4 <nftw@plt+0x2ea24>
  431790:	ldr	x0, [x20, #40]
  431794:	stp	x27, x28, [sp, #80]
  431798:	str	x22, [sp, #104]
  43179c:	cbz	x0, 4318e0 <nftw@plt+0x2ed60>
  4317a0:	ldr	w27, [x19, #176]
  4317a4:	b	431700 <nftw@plt+0x2eb80>
  4317a8:	ldr	w23, [x22]
  4317ac:	str	x0, [x20, #16]
  4317b0:	b	431788 <nftw@plt+0x2ec08>
  4317b4:	ldr	x0, [x0]
  4317b8:	cbnz	x0, 4315ec <nftw@plt+0x2ea6c>
  4317bc:	b	43169c <nftw@plt+0x2eb1c>
  4317c0:	ldr	x0, [x0]
  4317c4:	b	43155c <nftw@plt+0x2e9dc>
  4317c8:	cmp	w2, #0x2
  4317cc:	b.ne	43171c <nftw@plt+0x2eb9c>  // b.any
  4317d0:	ldr	x1, [x20, #40]
  4317d4:	ldr	x2, [x20, #16]
  4317d8:	ldr	x0, [x1, #16]
  4317dc:	add	x3, x2, #0x8
  4317e0:	str	x3, [x20, #16]
  4317e4:	add	x0, x0, #0x4
  4317e8:	ldr	x21, [x2]
  4317ec:	str	x0, [x1, #16]
  4317f0:	b	43171c <nftw@plt+0x2eb9c>
  4317f4:	ldr	w2, [x20, #48]
  4317f8:	cmp	w2, #0x2
  4317fc:	b.eq	431850 <nftw@plt+0x2ecd0>  // b.none
  431800:	ldr	x2, [sp, #104]
  431804:	mov	x0, x19
  431808:	mov	w3, #0x1                   	// #1
  43180c:	mov	x1, #0x0                   	// #0
  431810:	bl	42e138 <nftw@plt+0x2b5b8>
  431814:	ldrb	w0, [x19, #16]
  431818:	cbz	w0, 43182c <nftw@plt+0x2ecac>
  43181c:	ldp	x27, x28, [sp, #80]
  431820:	b	4314d8 <nftw@plt+0x2e958>
  431824:	mov	x20, x22
  431828:	b	43152c <nftw@plt+0x2e9ac>
  43182c:	mov	x0, x19
  431830:	bl	427030 <nftw@plt+0x244b0>
  431834:	mov	w1, #0x53                  	// #83
  431838:	mov	x20, x0
  43183c:	strb	w1, [x0, #4]
  431840:	strh	wzr, [x0, #6]
  431844:	ldp	x27, x28, [sp, #80]
  431848:	str	x22, [x0, #8]
  43184c:	b	43152c <nftw@plt+0x2e9ac>
  431850:	mov	x0, #0x10                  	// #16
  431854:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  431858:	mov	x1, #0x8                   	// #8
  43185c:	mov	x28, x0
  431860:	mov	x0, x19
  431864:	bl	427c60 <nftw@plt+0x250e0>
  431868:	ldr	x2, [sp, #104]
  43186c:	mov	x21, x0
  431870:	mov	w3, w27
  431874:	mov	x1, x28
  431878:	mov	w6, #0x0                   	// #0
  43187c:	mov	x5, #0x0                   	// #0
  431880:	mov	w4, #0x0                   	// #0
  431884:	bl	42d9c8 <nftw@plt+0x2ae48>
  431888:	ldr	x0, [x20, #40]
  43188c:	mov	x3, x28
  431890:	ldr	x4, [x21, #8]
  431894:	mov	x2, x21
  431898:	ldr	x1, [x0]
  43189c:	mov	w5, #0x1                   	// #1
  4318a0:	mov	x0, x19
  4318a4:	bl	42d8b0 <nftw@plt+0x2ad30>
  4318a8:	b	431814 <nftw@plt+0x2ec94>
  4318ac:	ldr	w23, [x22]
  4318b0:	b	4316dc <nftw@plt+0x2eb5c>
  4318b4:	mov	x0, x19
  4318b8:	bl	427030 <nftw@plt+0x244b0>
  4318bc:	mov	x20, x0
  4318c0:	ldrh	w1, [x22, #6]
  4318c4:	ldrb	w0, [x22, #4]
  4318c8:	ldp	x2, x3, [x22, #8]
  4318cc:	orr	w1, w1, #0x400
  4318d0:	strb	w0, [x20, #4]
  4318d4:	strh	w1, [x20, #6]
  4318d8:	stp	x2, x3, [x20, #8]
  4318dc:	b	43152c <nftw@plt+0x2e9ac>
  4318e0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4318e4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4318e8:	add	x2, x2, #0xb78
  4318ec:	add	x0, x0, #0x348
  4318f0:	mov	w1, #0x352                 	// #850
  4318f4:	bl	402bf0 <nftw@plt+0x70>
  4318f8:	mov	x20, x22
  4318fc:	cbz	w21, 43152c <nftw@plt+0x2e9ac>
  431900:	mov	x0, x19
  431904:	mov	w1, #0x0                   	// #0
  431908:	bl	42a968 <nftw@plt+0x27de8>
  43190c:	mov	x21, x0
  431910:	ldrb	w0, [x0, #4]
  431914:	cmp	w0, #0x53
  431918:	b.eq	43152c <nftw@plt+0x2e9ac>  // b.none
  43191c:	ldrh	w0, [x21, #6]
  431920:	tbnz	w0, #0, 43152c <nftw@plt+0x2e9ac>
  431924:	mov	x0, x19
  431928:	bl	427030 <nftw@plt+0x244b0>
  43192c:	mov	x2, x0
  431930:	mov	w4, #0x53                  	// #83
  431934:	mov	x0, x19
  431938:	mov	w3, #0x1                   	// #1
  43193c:	mov	x1, #0x0                   	// #0
  431940:	strb	w4, [x2, #4]
  431944:	strh	wzr, [x2, #6]
  431948:	str	x21, [x2, #8]
  43194c:	bl	42e138 <nftw@plt+0x2b5b8>
  431950:	b	43152c <nftw@plt+0x2e9ac>
  431954:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  431958:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  43195c:	add	x2, x2, #0xb78
  431960:	add	x0, x0, #0x348
  431964:	mov	w1, #0x380                 	// #896
  431968:	bl	402bf0 <nftw@plt+0x70>
  43196c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  431970:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  431974:	add	x2, x2, #0xb60
  431978:	add	x0, x0, #0x348
  43197c:	mov	w1, #0xa2f                 	// #2607
  431980:	stp	x27, x28, [sp, #80]
  431984:	bl	402bf0 <nftw@plt+0x70>
  431988:	mov	x1, #0x0                   	// #0
  43198c:	b	4314a8 <nftw@plt+0x2e928>
  431990:	stp	x29, x30, [sp, #-32]!
  431994:	mov	x29, sp
  431998:	ldr	x1, [x0]
  43199c:	str	x19, [sp, #16]
  4319a0:	mov	x19, x0
  4319a4:	ldrb	w0, [x1, #105]
  4319a8:	orr	w0, w0, #0x4
  4319ac:	strb	w0, [x1, #105]
  4319b0:	ldrb	w1, [x19, #24]
  4319b4:	ldrb	w0, [x19, #27]
  4319b8:	ldrb	w2, [x19, #1160]
  4319bc:	add	w1, w1, #0x1
  4319c0:	add	w0, w0, #0x1
  4319c4:	strb	w1, [x19, #24]
  4319c8:	strb	w0, [x19, #27]
  4319cc:	cbz	w2, 431a04 <nftw@plt+0x2ee84>
  4319d0:	mov	x0, x19
  4319d4:	bl	4346b0 <nftw@plt+0x31b30>
  4319d8:	tst	w0, #0xff
  4319dc:	b.ne	4319d0 <nftw@plt+0x2ee50>  // b.any
  4319e0:	ldrb	w1, [x19, #24]
  4319e4:	ldrb	w0, [x19, #27]
  4319e8:	sub	w1, w1, #0x1
  4319ec:	strb	w1, [x19, #24]
  4319f0:	sub	w0, w0, #0x1
  4319f4:	strb	w0, [x19, #27]
  4319f8:	ldr	x19, [sp, #16]
  4319fc:	ldp	x29, x30, [sp], #32
  431a00:	ret
  431a04:	mov	x0, x19
  431a08:	mov	x1, #0x0                   	// #0
  431a0c:	bl	4314a8 <nftw@plt+0x2e928>
  431a10:	ldrb	w0, [x0, #4]
  431a14:	cmp	w0, #0x16
  431a18:	b.eq	4319e0 <nftw@plt+0x2ee60>  // b.none
  431a1c:	mov	x0, x19
  431a20:	mov	x1, #0x0                   	// #0
  431a24:	bl	4314a8 <nftw@plt+0x2e928>
  431a28:	ldrb	w0, [x0, #4]
  431a2c:	cmp	w0, #0x16
  431a30:	b.ne	431a04 <nftw@plt+0x2ee84>  // b.any
  431a34:	b	4319e0 <nftw@plt+0x2ee60>
  431a38:	b	4314a8 <nftw@plt+0x2e928>
  431a3c:	nop
  431a40:	stp	x29, x30, [sp, #-96]!
  431a44:	mov	x29, sp
  431a48:	stp	x21, x22, [sp, #32]
  431a4c:	ldr	x21, [x1, #24]
  431a50:	stp	x23, x24, [sp, #48]
  431a54:	mov	x24, x0
  431a58:	ldr	w0, [x1, #8]
  431a5c:	mov	x23, x1
  431a60:	ldrb	w4, [x21, #19]
  431a64:	stp	x19, x20, [sp, #16]
  431a68:	add	w0, w0, w0, lsl #2
  431a6c:	stp	x25, x26, [sp, #64]
  431a70:	lsl	w0, w0, #1
  431a74:	add	w19, w0, #0x2
  431a78:	tbz	w4, #2, 431aac <nftw@plt+0x2ef2c>
  431a7c:	ldrh	w2, [x21, #16]
  431a80:	add	w19, w0, #0x6
  431a84:	cbz	w2, 431aac <nftw@plt+0x2ef2c>
  431a88:	ldr	x3, [x21]
  431a8c:	mov	x1, #0x0                   	// #0
  431a90:	ldr	x0, [x3, x1, lsl #3]
  431a94:	add	x1, x1, #0x1
  431a98:	cmp	w2, w1
  431a9c:	ldr	w0, [x0, #8]
  431aa0:	add	w0, w0, #0x1
  431aa4:	add	w19, w19, w0
  431aa8:	b.hi	431a90 <nftw@plt+0x2ef10>  // b.pmore
  431aac:	ldrb	w0, [x24, #1160]
  431ab0:	cbnz	w0, 431d3c <nftw@plt+0x2f1bc>
  431ab4:	ldr	w25, [x21, #12]
  431ab8:	tbnz	w4, #6, 431b48 <nftw@plt+0x2efc8>
  431abc:	cbz	w25, 431b58 <nftw@plt+0x2efd8>
  431ac0:	add	x22, x21, #0x18
  431ac4:	mov	w20, #0x0                   	// #0
  431ac8:	b	431b08 <nftw@plt+0x2ef88>
  431acc:	ldr	x0, [x22, #16]
  431ad0:	ldr	w0, [x0, #8]
  431ad4:	add	w19, w19, w0
  431ad8:	ldrh	w2, [x22, #6]
  431adc:	add	w20, w20, #0x1
  431ae0:	add	x22, x22, #0x18
  431ae4:	and	w0, w2, #0x1
  431ae8:	ubfx	x1, x2, #2, #1
  431aec:	tst	x2, #0x8
  431af0:	add	w19, w19, w1
  431af4:	add	w1, w19, #0x3
  431af8:	csel	w19, w1, w19, ne  // ne = any
  431afc:	cmp	w25, w20
  431b00:	add	w19, w19, w0
  431b04:	b.ls	431b58 <nftw@plt+0x2efd8>  // b.plast
  431b08:	ubfiz	x2, x20, #1, #32
  431b0c:	mov	x0, x22
  431b10:	add	x2, x2, w20, uxtw
  431b14:	add	x2, x21, x2, lsl #3
  431b18:	ldrb	w1, [x2, #28]
  431b1c:	cmp	w1, #0x50
  431b20:	b.eq	431acc <nftw@plt+0x2ef4c>  // b.none
  431b24:	bl	427170 <nftw@plt+0x245f0>
  431b28:	add	w19, w19, w0
  431b2c:	b	431ad8 <nftw@plt+0x2ef58>
  431b30:	ubfiz	x0, x25, #1, #32
  431b34:	add	x0, x0, w25, uxtw
  431b38:	add	x0, x21, x0, lsl #3
  431b3c:	ldrb	w0, [x0, #28]
  431b40:	cmp	w0, #0x26
  431b44:	b.ne	431d9c <nftw@plt+0x2f21c>  // b.any
  431b48:	mov	w1, w25
  431b4c:	sub	w25, w25, #0x1
  431b50:	cbnz	w1, 431b30 <nftw@plt+0x2efb0>
  431b54:	nop
  431b58:	ldr	w1, [x24, #512]
  431b5c:	ldr	x0, [x24, #504]
  431b60:	cmp	w1, w19
  431b64:	b.cc	431d58 <nftw@plt+0x2f1d8>  // b.lo, b.ul, b.last
  431b68:	mov	x1, x23
  431b6c:	bl	4271b8 <nftw@plt+0x24638>
  431b70:	mov	x4, x0
  431b74:	ldrb	w0, [x21, #19]
  431b78:	tbz	w0, #2, 431c2c <nftw@plt+0x2f0ac>
  431b7c:	mov	x19, x4
  431b80:	mov	w0, #0x28                  	// #40
  431b84:	strb	w0, [x19], #1
  431b88:	ldrh	w1, [x21, #16]
  431b8c:	cbz	w1, 431c20 <nftw@plt+0x2f0a0>
  431b90:	mov	x23, #0x0                   	// #0
  431b94:	mov	w20, #0x0                   	// #0
  431b98:	mov	w26, #0x2e                  	// #46
  431b9c:	mov	w25, #0x2c                  	// #44
  431ba0:	str	x27, [sp, #80]
  431ba4:	mov	w27, #0x2e2e                	// #11822
  431ba8:	b	431bc4 <nftw@plt+0x2f044>
  431bac:	strb	w25, [x0], #1
  431bb0:	mov	x19, x0
  431bb4:	ldrh	w1, [x21, #16]
  431bb8:	add	x23, x23, #0x8
  431bbc:	cmp	w1, w20
  431bc0:	b.ls	431c1c <nftw@plt+0x2f09c>  // b.plast
  431bc4:	ldr	x3, [x21]
  431bc8:	mov	x0, x19
  431bcc:	ldr	x2, [x24, #1272]
  431bd0:	add	w20, w20, #0x1
  431bd4:	ldr	x22, [x3, x23]
  431bd8:	cmp	x2, x22
  431bdc:	b.eq	431bf8 <nftw@plt+0x2f078>  // b.none
  431be0:	ldr	w2, [x22, #8]
  431be4:	ldr	x1, [x22]
  431be8:	bl	402490 <memcpy@plt>
  431bec:	ldr	w0, [x22, #8]
  431bf0:	ldrh	w1, [x21, #16]
  431bf4:	add	x19, x19, x0
  431bf8:	mov	x0, x19
  431bfc:	cmp	w20, w1
  431c00:	b.cc	431bac <nftw@plt+0x2f02c>  // b.lo, b.ul, b.last
  431c04:	ldrb	w1, [x21, #19]
  431c08:	tbz	w1, #3, 431c1c <nftw@plt+0x2f09c>
  431c0c:	strh	w27, [x0], #3
  431c10:	strb	w26, [x19, #2]
  431c14:	mov	x19, x0
  431c18:	b	431bb4 <nftw@plt+0x2f034>
  431c1c:	ldr	x27, [sp, #80]
  431c20:	mov	x4, x19
  431c24:	mov	w0, #0x29                  	// #41
  431c28:	strb	w0, [x4], #1
  431c2c:	mov	w0, #0x20                  	// #32
  431c30:	strb	w0, [x4], #1
  431c34:	ldrb	w0, [x24, #1160]
  431c38:	cbnz	w0, 431d0c <nftw@plt+0x2f18c>
  431c3c:	ldr	w20, [x21, #12]
  431c40:	cbz	w20, 431d1c <nftw@plt+0x2f19c>
  431c44:	ldrb	w0, [x21, #19]
  431c48:	tbnz	w0, #6, 431d6c <nftw@plt+0x2f1ec>
  431c4c:	add	x19, x21, #0x18
  431c50:	mov	w26, #0x0                   	// #0
  431c54:	mov	w25, #0x20                  	// #32
  431c58:	mov	w22, #0x23                  	// #35
  431c5c:	mov	w23, #0x2320                	// #8992
  431c60:	b	431c94 <nftw@plt+0x2f114>
  431c64:	bl	427240 <nftw@plt+0x246c0>
  431c68:	mov	x4, x0
  431c6c:	ldrh	w1, [x19, #6]
  431c70:	mov	x0, x4
  431c74:	add	w26, w26, #0x1
  431c78:	add	x19, x19, #0x18
  431c7c:	tbz	w1, #3, 431c8c <nftw@plt+0x2f10c>
  431c80:	strh	w23, [x0], #3
  431c84:	strb	w22, [x4, #2]
  431c88:	mov	x4, x0
  431c8c:	cmp	w20, w26
  431c90:	b.ls	431d1c <nftw@plt+0x2f19c>  // b.plast
  431c94:	ldrh	w2, [x19, #6]
  431c98:	ubfiz	x5, x26, #1, #32
  431c9c:	add	x5, x5, w26, uxtw
  431ca0:	mov	x6, x4
  431ca4:	mov	x1, x19
  431ca8:	mov	x0, x24
  431cac:	add	x5, x21, x5, lsl #3
  431cb0:	mov	w3, #0x1                   	// #1
  431cb4:	tbz	w2, #0, 431cc4 <nftw@plt+0x2f144>
  431cb8:	strb	w25, [x6], #1
  431cbc:	ldrh	w2, [x19, #6]
  431cc0:	mov	x4, x6
  431cc4:	mov	x6, x4
  431cc8:	tbz	w2, #2, 431cd4 <nftw@plt+0x2f154>
  431ccc:	strb	w22, [x6], #1
  431cd0:	mov	x4, x6
  431cd4:	ldrb	w5, [x5, #28]
  431cd8:	mov	x2, x4
  431cdc:	cmp	w5, #0x50
  431ce0:	b.ne	431c64 <nftw@plt+0x2f0e4>  // b.any
  431ce4:	ldr	x1, [x19, #16]
  431ce8:	mov	x0, x4
  431cec:	ldr	w2, [x1, #8]
  431cf0:	ldr	x1, [x1]
  431cf4:	bl	402490 <memcpy@plt>
  431cf8:	mov	x4, x0
  431cfc:	ldr	x0, [x19, #16]
  431d00:	ldr	w0, [x0, #8]
  431d04:	add	x4, x4, x0
  431d08:	b	431c6c <nftw@plt+0x2f0ec>
  431d0c:	mov	x1, x4
  431d10:	mov	x0, x21
  431d14:	bl	434788 <nftw@plt+0x31c08>
  431d18:	mov	x4, x0
  431d1c:	strb	wzr, [x4]
  431d20:	ldp	x19, x20, [sp, #16]
  431d24:	ldp	x21, x22, [sp, #32]
  431d28:	ldp	x25, x26, [sp, #64]
  431d2c:	ldr	x0, [x24, #504]
  431d30:	ldp	x23, x24, [sp, #48]
  431d34:	ldp	x29, x30, [sp], #96
  431d38:	ret
  431d3c:	mov	x0, x21
  431d40:	bl	434718 <nftw@plt+0x31b98>
  431d44:	ldr	w1, [x24, #512]
  431d48:	add	w19, w19, w0
  431d4c:	ldr	x0, [x24, #504]
  431d50:	cmp	w1, w19
  431d54:	b.cs	431b68 <nftw@plt+0x2efe8>  // b.hs, b.nlast
  431d58:	mov	w1, w19
  431d5c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  431d60:	str	x0, [x24, #504]
  431d64:	str	w19, [x24, #512]
  431d68:	b	431b68 <nftw@plt+0x2efe8>
  431d6c:	sub	w0, w20, #0x1
  431d70:	ubfiz	x1, x0, #1, #32
  431d74:	add	w20, w0, #0x1
  431d78:	add	x1, x1, w0, uxtw
  431d7c:	sub	w0, w0, #0x1
  431d80:	add	x1, x21, x1, lsl #3
  431d84:	ldrb	w1, [x1, #28]
  431d88:	cmp	w1, #0x26
  431d8c:	b.ne	431c4c <nftw@plt+0x2f0cc>  // b.any
  431d90:	cmn	w0, #0x1
  431d94:	b.ne	431d70 <nftw@plt+0x2f1f0>  // b.any
  431d98:	b	431d1c <nftw@plt+0x2f19c>
  431d9c:	mov	w25, w1
  431da0:	b	431ac0 <nftw@plt+0x2ef40>
  431da4:	nop
  431da8:	stp	x29, x30, [sp, #-48]!
  431dac:	mov	x29, sp
  431db0:	stp	x21, x22, [sp, #32]
  431db4:	mov	x21, x0
  431db8:	ldr	x0, [x0, #32]
  431dbc:	stp	x19, x20, [sp, #16]
  431dc0:	mov	x19, x1
  431dc4:	cbz	x0, 431e44 <nftw@plt+0x2f2c4>
  431dc8:	ldr	w1, [x21, #48]
  431dcc:	cbz	w1, 431e44 <nftw@plt+0x2f2c4>
  431dd0:	mov	w20, #0x0                   	// #0
  431dd4:	b	431ddc <nftw@plt+0x2f25c>
  431dd8:	ldr	x0, [x21, #32]
  431ddc:	mov	w22, w20
  431de0:	ldr	x2, [x21, #40]
  431de4:	add	w20, w20, #0x1
  431de8:	ldr	x0, [x0, x22, lsl #3]
  431dec:	mov	x1, x19
  431df0:	ldr	x2, [x2, x22, lsl #3]
  431df4:	bl	448388 <nftw@plt+0x45808>
  431df8:	cbnz	w0, 431e38 <nftw@plt+0x2f2b8>
  431dfc:	ldr	x0, [x21, #40]
  431e00:	ldr	x0, [x0, x22, lsl #3]
  431e04:	add	x1, x19, x0
  431e08:	ldrb	w2, [x19, x0]
  431e0c:	cmp	w2, #0x2f
  431e10:	b.ne	431e38 <nftw@plt+0x2f2b8>  // b.any
  431e14:	ldrb	w2, [x1, #1]
  431e18:	cmp	w2, #0x2e
  431e1c:	b.ne	431e94 <nftw@plt+0x2f314>  // b.any
  431e20:	ldrb	w2, [x1, #2]
  431e24:	cmp	w2, #0x2e
  431e28:	b.ne	431e94 <nftw@plt+0x2f314>  // b.any
  431e2c:	ldrb	w1, [x1, #3]
  431e30:	cmp	w1, #0x2f
  431e34:	b.ne	431e94 <nftw@plt+0x2f314>  // b.any
  431e38:	ldr	w0, [x21, #48]
  431e3c:	cmp	w0, w20
  431e40:	b.hi	431dd8 <nftw@plt+0x2f258>  // b.pmore
  431e44:	mov	x0, x19
  431e48:	ldrb	w1, [x0]
  431e4c:	cmp	w1, #0x2e
  431e50:	b.ne	431e84 <nftw@plt+0x2f304>  // b.any
  431e54:	ldrb	w1, [x0, #1]
  431e58:	cmp	w1, #0x2f
  431e5c:	b.ne	431e84 <nftw@plt+0x2f304>  // b.any
  431e60:	ldrb	w1, [x0, #2]
  431e64:	add	x0, x0, #0x2
  431e68:	cmp	w1, #0x2f
  431e6c:	b.ne	431e4c <nftw@plt+0x2f2cc>  // b.any
  431e70:	ldrb	w1, [x0, #1]!
  431e74:	cmp	w1, #0x2f
  431e78:	b.eq	431e70 <nftw@plt+0x2f2f0>  // b.none
  431e7c:	cmp	w1, #0x2e
  431e80:	b.eq	431e54 <nftw@plt+0x2f2d4>  // b.none
  431e84:	ldp	x19, x20, [sp, #16]
  431e88:	ldp	x21, x22, [sp, #32]
  431e8c:	ldp	x29, x30, [sp], #48
  431e90:	ret
  431e94:	add	x0, x0, #0x1
  431e98:	add	x0, x19, x0
  431e9c:	b	431e48 <nftw@plt+0x2f2c8>
  431ea0:	stp	x29, x30, [sp, #-32]!
  431ea4:	mov	x29, sp
  431ea8:	str	x19, [sp, #16]
  431eac:	mov	x19, x0
  431eb0:	ldrb	w1, [x0]
  431eb4:	cbz	w1, 432044 <nftw@plt+0x2f4c4>
  431eb8:	sub	x7, x0, #0x1
  431ebc:	mov	w2, #0x0                   	// #0
  431ec0:	mov	x6, x7
  431ec4:	b	431edc <nftw@plt+0x2f35c>
  431ec8:	add	w4, w2, #0x3
  431ecc:	mov	w2, w3
  431ed0:	ldrb	w1, [x6, #2]
  431ed4:	add	x6, x6, #0x1
  431ed8:	cbz	w1, 431f50 <nftw@plt+0x2f3d0>
  431edc:	cmp	w1, #0x24
  431ee0:	add	w0, w2, #0x1
  431ee4:	add	w3, w2, #0x2
  431ee8:	b.hi	431ffc <nftw@plt+0x2f47c>  // b.pmore
  431eec:	cmp	w1, #0x22
  431ef0:	b.hi	431ec8 <nftw@plt+0x2f348>  // b.pmore
  431ef4:	cmp	w1, #0x9
  431ef8:	b.eq	431f04 <nftw@plt+0x2f384>  // b.none
  431efc:	cmp	w1, #0x20
  431f00:	b.ne	431ffc <nftw@plt+0x2f47c>  // b.any
  431f04:	cmp	x19, x6
  431f08:	mov	x1, x6
  431f0c:	b.hi	431ec8 <nftw@plt+0x2f348>  // b.pmore
  431f10:	ldrb	w5, [x1]
  431f14:	add	w4, w3, #0x1
  431f18:	mov	w2, w3
  431f1c:	sub	x1, x1, #0x1
  431f20:	mov	w3, w4
  431f24:	cmp	w5, #0x5c
  431f28:	b.ne	431ed0 <nftw@plt+0x2f350>  // b.any
  431f2c:	cmp	x7, x1
  431f30:	b.ne	431f10 <nftw@plt+0x2f390>  // b.any
  431f34:	ldrb	w1, [x6, #2]
  431f38:	add	w0, w2, #0x2
  431f3c:	add	x6, x6, #0x1
  431f40:	mov	w2, w4
  431f44:	mov	w4, w0
  431f48:	cbnz	w1, 431edc <nftw@plt+0x2f35c>
  431f4c:	nop
  431f50:	sxtw	x0, w4
  431f54:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  431f58:	ldrb	w4, [x19]
  431f5c:	cbz	w4, 432054 <nftw@plt+0x2f4d4>
  431f60:	sub	x9, x19, #0x1
  431f64:	mov	x1, x0
  431f68:	mov	x7, x9
  431f6c:	mov	w10, #0x5c                  	// #92
  431f70:	add	x6, x1, #0x1
  431f74:	cmp	w4, #0x23
  431f78:	mov	x3, x6
  431f7c:	b.eq	432024 <nftw@plt+0x2f4a4>  // b.none
  431f80:	b.hi	432008 <nftw@plt+0x2f488>  // b.pmore
  431f84:	cmp	w4, #0x9
  431f88:	b.eq	431f94 <nftw@plt+0x2f414>  // b.none
  431f8c:	cmp	w4, #0x20
  431f90:	b.ne	432018 <nftw@plt+0x2f498>  // b.any
  431f94:	cmp	x19, x7
  431f98:	mov	x2, x7
  431f9c:	b.ls	431fb0 <nftw@plt+0x2f430>  // b.plast
  431fa0:	b	432038 <nftw@plt+0x2f4b8>
  431fa4:	sturb	w5, [x1, #-1]
  431fa8:	cmp	x9, x2
  431fac:	b.eq	43202c <nftw@plt+0x2f4ac>  // b.none
  431fb0:	ldrb	w5, [x2]
  431fb4:	mov	x8, x1
  431fb8:	mov	x1, x3
  431fbc:	add	x3, x3, #0x1
  431fc0:	sub	x2, x2, #0x1
  431fc4:	cmp	w5, #0x5c
  431fc8:	mov	x6, x3
  431fcc:	b.eq	431fa4 <nftw@plt+0x2f424>  // b.none
  431fd0:	mov	x6, x1
  431fd4:	mov	x1, x3
  431fd8:	strb	w10, [x8]
  431fdc:	add	x7, x7, #0x1
  431fe0:	strb	w4, [x6]
  431fe4:	ldrb	w4, [x7, #1]
  431fe8:	cbnz	w4, 431f70 <nftw@plt+0x2f3f0>
  431fec:	strb	wzr, [x1]
  431ff0:	ldr	x19, [sp, #16]
  431ff4:	ldp	x29, x30, [sp], #32
  431ff8:	ret
  431ffc:	mov	w4, w3
  432000:	mov	w2, w0
  432004:	b	431ed0 <nftw@plt+0x2f350>
  432008:	cmp	w4, #0x24
  43200c:	b.ne	432018 <nftw@plt+0x2f498>  // b.any
  432010:	strb	w4, [x1], #2
  432014:	b	431fdc <nftw@plt+0x2f45c>
  432018:	mov	x6, x1
  43201c:	mov	x1, x3
  432020:	b	431fdc <nftw@plt+0x2f45c>
  432024:	strb	w10, [x1], #2
  432028:	b	431fdc <nftw@plt+0x2f45c>
  43202c:	mov	x8, x1
  432030:	add	x1, x3, #0x1
  432034:	b	431fd8 <nftw@plt+0x2f458>
  432038:	mov	x8, x1
  43203c:	add	x1, x1, #0x2
  432040:	b	431fd8 <nftw@plt+0x2f458>
  432044:	mov	x0, #0x1                   	// #1
  432048:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  43204c:	ldrb	w4, [x19]
  432050:	cbnz	w4, 431f60 <nftw@plt+0x2f3e0>
  432054:	mov	x1, x0
  432058:	strb	wzr, [x1]
  43205c:	ldr	x19, [sp, #16]
  432060:	ldp	x29, x30, [sp], #32
  432064:	ret
  432068:	mov	x1, #0x38                  	// #56
  43206c:	mov	x0, #0x1                   	// #1
  432070:	b	449bb0 <_obstack_memory_used@@Base+0x150>
  432074:	nop
  432078:	stp	x29, x30, [sp, #-32]!
  43207c:	mov	x29, sp
  432080:	stp	x19, x20, [sp, #16]
  432084:	mov	x19, x0
  432088:	ldr	x0, [x0]
  43208c:	cbz	x0, 4320c0 <nftw@plt+0x2f540>
  432090:	ldr	w1, [x19, #8]
  432094:	cbz	w1, 4320bc <nftw@plt+0x2f53c>
  432098:	mov	w20, #0x0                   	// #0
  43209c:	nop
  4320a0:	ldr	x0, [x0, w20, uxtw #3]
  4320a4:	add	w20, w20, #0x1
  4320a8:	bl	402910 <free@plt>
  4320ac:	ldr	w0, [x19, #8]
  4320b0:	cmp	w0, w20
  4320b4:	ldr	x0, [x19]
  4320b8:	b.hi	4320a0 <nftw@plt+0x2f520>  // b.pmore
  4320bc:	bl	402910 <free@plt>
  4320c0:	ldr	x0, [x19, #16]
  4320c4:	cbz	x0, 4320f8 <nftw@plt+0x2f578>
  4320c8:	ldr	w1, [x19, #24]
  4320cc:	cbz	w1, 4320f4 <nftw@plt+0x2f574>
  4320d0:	mov	w20, #0x0                   	// #0
  4320d4:	nop
  4320d8:	ldr	x0, [x0, w20, uxtw #3]
  4320dc:	add	w20, w20, #0x1
  4320e0:	bl	402910 <free@plt>
  4320e4:	ldr	w0, [x19, #24]
  4320e8:	cmp	w0, w20
  4320ec:	ldr	x0, [x19, #16]
  4320f0:	b.hi	4320d8 <nftw@plt+0x2f558>  // b.pmore
  4320f4:	bl	402910 <free@plt>
  4320f8:	ldr	x0, [x19, #32]
  4320fc:	cbz	x0, 432138 <nftw@plt+0x2f5b8>
  432100:	ldr	w1, [x19, #48]
  432104:	cbz	w1, 43212c <nftw@plt+0x2f5ac>
  432108:	mov	w20, #0x0                   	// #0
  43210c:	nop
  432110:	ldr	x0, [x0, w20, uxtw #3]
  432114:	add	w20, w20, #0x1
  432118:	bl	402910 <free@plt>
  43211c:	ldr	w0, [x19, #48]
  432120:	cmp	w0, w20
  432124:	ldr	x0, [x19, #32]
  432128:	b.hi	432110 <nftw@plt+0x2f590>  // b.pmore
  43212c:	bl	402910 <free@plt>
  432130:	ldr	x0, [x19, #40]
  432134:	bl	402910 <free@plt>
  432138:	mov	x0, x19
  43213c:	ldp	x19, x20, [sp, #16]
  432140:	ldp	x29, x30, [sp], #32
  432144:	b	402910 <free@plt>
  432148:	stp	x29, x30, [sp, #-48]!
  43214c:	mov	x29, sp
  432150:	stp	x19, x20, [sp, #16]
  432154:	mov	x19, x0
  432158:	ldr	w0, [x0, #8]
  43215c:	str	x21, [sp, #32]
  432160:	mov	x21, x1
  432164:	ldr	w1, [x19, #12]
  432168:	mov	w20, w2
  43216c:	cmp	w0, w1
  432170:	b.eq	4321b4 <nftw@plt+0x2f634>  // b.none
  432174:	mov	x1, x21
  432178:	mov	x0, x19
  43217c:	bl	431da8 <nftw@plt+0x2f228>
  432180:	cbz	w20, 4321ac <nftw@plt+0x2f62c>
  432184:	bl	431ea0 <nftw@plt+0x2f320>
  432188:	ldr	w1, [x19, #8]
  43218c:	ldr	x2, [x19]
  432190:	add	w3, w1, #0x1
  432194:	ldr	x21, [sp, #32]
  432198:	str	w3, [x19, #8]
  43219c:	str	x0, [x2, w1, uxtw #3]
  4321a0:	ldp	x19, x20, [sp, #16]
  4321a4:	ldp	x29, x30, [sp], #48
  4321a8:	ret
  4321ac:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  4321b0:	b	432188 <nftw@plt+0x2f608>
  4321b4:	add	w2, w0, #0x2
  4321b8:	ldr	x0, [x19]
  4321bc:	lsl	w1, w2, #1
  4321c0:	mov	x2, x1
  4321c4:	str	w2, [x19, #12]
  4321c8:	lsl	x1, x1, #3
  4321cc:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4321d0:	str	x0, [x19]
  4321d4:	b	432174 <nftw@plt+0x2f5f4>
  4321d8:	ldr	w2, [x0, #8]
  4321dc:	cbnz	w2, 4322a8 <nftw@plt+0x2f728>
  4321e0:	stp	x29, x30, [sp, #-48]!
  4321e4:	mov	x29, sp
  4321e8:	stp	x19, x20, [sp, #16]
  4321ec:	str	x21, [sp, #32]
  4321f0:	ldrb	w2, [x1]
  4321f4:	cbz	w2, 432284 <nftw@plt+0x2f704>
  4321f8:	mov	x19, x0
  4321fc:	mov	x0, x1
  432200:	bl	4496a8 <nftw@plt+0x46b28>
  432204:	mov	x20, x0
  432208:	bl	4024f0 <strlen@plt>
  43220c:	mov	x1, x20
  432210:	mov	x20, x0
  432214:	add	x0, x0, #0x12
  432218:	add	x2, x20, #0x1
  43221c:	and	x0, x0, #0xfffffffffffffff0
  432220:	sub	sp, sp, x0
  432224:	mov	x21, sp
  432228:	mov	x0, x21
  43222c:	bl	402490 <memcpy@plt>
  432230:	mov	x0, x21
  432234:	mov	w1, #0x2e                  	// #46
  432238:	bl	4027b0 <strrchr@plt>
  43223c:	add	x20, x21, x20
  432240:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  432244:	add	x4, x4, #0xc78
  432248:	cmp	x0, #0x0
  43224c:	mov	x1, x21
  432250:	csel	x3, x20, x0, eq  // eq = none
  432254:	mov	w2, #0x1                   	// #1
  432258:	ldrh	w5, [x4]
  43225c:	mov	x0, x19
  432260:	ldrb	w4, [x4, #2]
  432264:	strh	w5, [x3]
  432268:	strb	w4, [x3, #2]
  43226c:	bl	432148 <nftw@plt+0x2f5c8>
  432270:	mov	sp, x29
  432274:	ldp	x19, x20, [sp, #16]
  432278:	ldr	x21, [sp, #32]
  43227c:	ldp	x29, x30, [sp], #48
  432280:	ret
  432284:	mov	w2, #0x1                   	// #1
  432288:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  43228c:	add	x1, x1, #0x650
  432290:	bl	432148 <nftw@plt+0x2f5c8>
  432294:	mov	sp, x29
  432298:	ldp	x19, x20, [sp, #16]
  43229c:	ldr	x21, [sp, #32]
  4322a0:	ldp	x29, x30, [sp], #48
  4322a4:	ret
  4322a8:	ret
  4322ac:	nop
  4322b0:	stp	x29, x30, [sp, #-32]!
  4322b4:	mov	x29, sp
  4322b8:	stp	x19, x20, [sp, #16]
  4322bc:	mov	x19, x0
  4322c0:	bl	431da8 <nftw@plt+0x2f228>
  4322c4:	bl	431ea0 <nftw@plt+0x2f320>
  4322c8:	mov	x20, x0
  4322cc:	ldp	w1, w0, [x19, #24]
  4322d0:	cmp	w1, w0
  4322d4:	b.eq	4322f4 <nftw@plt+0x2f774>  // b.none
  4322d8:	ldr	x0, [x19, #16]
  4322dc:	add	w2, w1, #0x1
  4322e0:	str	w2, [x19, #24]
  4322e4:	str	x20, [x0, w1, uxtw #3]
  4322e8:	ldp	x19, x20, [sp, #16]
  4322ec:	ldp	x29, x30, [sp], #32
  4322f0:	ret
  4322f4:	add	w1, w1, #0x4
  4322f8:	ldr	x0, [x19, #16]
  4322fc:	lsl	w1, w1, #1
  432300:	mov	x2, x1
  432304:	str	w2, [x19, #28]
  432308:	lsl	x1, x1, #3
  43230c:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  432310:	str	x0, [x19, #16]
  432314:	ldr	w1, [x19, #24]
  432318:	add	w2, w1, #0x1
  43231c:	str	w2, [x19, #24]
  432320:	str	x20, [x0, w1, uxtw #3]
  432324:	ldp	x19, x20, [sp, #16]
  432328:	ldp	x29, x30, [sp], #32
  43232c:	ret
  432330:	stp	x29, x30, [sp, #-64]!
  432334:	mov	x29, sp
  432338:	stp	x19, x20, [sp, #16]
  43233c:	mov	x20, x0
  432340:	ldrb	w0, [x1]
  432344:	cbz	w0, 4323dc <nftw@plt+0x2f85c>
  432348:	stp	x21, x22, [sp, #32]
  43234c:	mov	x21, x1
  432350:	str	x23, [sp, #48]
  432354:	nop
  432358:	mov	x19, x21
  43235c:	cmp	w0, #0x3a
  432360:	b.eq	432428 <nftw@plt+0x2f8a8>  // b.none
  432364:	nop
  432368:	ldrb	w2, [x19, #1]!
  43236c:	cmp	w2, #0x3a
  432370:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  432374:	b.ne	432368 <nftw@plt+0x2f7e8>  // b.any
  432378:	sub	x23, x19, x21
  43237c:	add	x0, x23, #0x1
  432380:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  432384:	mov	x22, x0
  432388:	mov	x1, x21
  43238c:	mov	x2, x23
  432390:	bl	402490 <memcpy@plt>
  432394:	ldrb	w0, [x19]
  432398:	ldp	w3, w1, [x20, #48]
  43239c:	strb	wzr, [x22, x23]
  4323a0:	cmp	w0, #0x3a
  4323a4:	cinc	x21, x19, eq  // eq = none
  4323a8:	cmp	w3, w1
  4323ac:	ldr	x0, [x20, #32]
  4323b0:	b.eq	4323e8 <nftw@plt+0x2f868>  // b.none
  4323b4:	ldr	x2, [x20, #40]
  4323b8:	mov	w1, w3
  4323bc:	add	w3, w3, #0x1
  4323c0:	str	x22, [x0, x1, lsl #3]
  4323c4:	str	x23, [x2, x1, lsl #3]
  4323c8:	str	w3, [x20, #48]
  4323cc:	ldrb	w0, [x21]
  4323d0:	cbnz	w0, 432358 <nftw@plt+0x2f7d8>
  4323d4:	ldp	x21, x22, [sp, #32]
  4323d8:	ldr	x23, [sp, #48]
  4323dc:	ldp	x19, x20, [sp, #16]
  4323e0:	ldp	x29, x30, [sp], #64
  4323e4:	ret
  4323e8:	add	w3, w3, #0x4
  4323ec:	lsl	w3, w3, #1
  4323f0:	str	w3, [x20, #52]
  4323f4:	lsl	x1, x3, #3
  4323f8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  4323fc:	mov	x2, x0
  432400:	ldr	x0, [x20, #40]
  432404:	str	x2, [x20, #32]
  432408:	ldr	w1, [x20, #52]
  43240c:	lsl	x1, x1, #3
  432410:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  432414:	ldr	w3, [x20, #48]
  432418:	mov	x2, x0
  43241c:	str	x2, [x20, #40]
  432420:	ldr	x0, [x20, #32]
  432424:	b	4323b8 <nftw@plt+0x2f838>
  432428:	mov	x23, #0x0                   	// #0
  43242c:	mov	x0, #0x1                   	// #1
  432430:	b	432380 <nftw@plt+0x2f800>
  432434:	nop
  432438:	stp	x29, x30, [sp, #-96]!
  43243c:	mov	x29, sp
  432440:	stp	x19, x20, [sp, #16]
  432444:	mov	x20, x0
  432448:	sub	w0, w2, #0x1
  43244c:	cmp	w0, #0x20
  432450:	stp	x21, x22, [sp, #32]
  432454:	ldr	w0, [x20, #8]
  432458:	stp	x23, x24, [sp, #48]
  43245c:	mov	x19, x1
  432460:	mov	w1, #0x22                  	// #34
  432464:	stp	x25, x26, [sp, #64]
  432468:	csel	w24, w2, w1, hi  // hi = pmore
  43246c:	stp	x27, x28, [sp, #80]
  432470:	cbz	w0, 43265c <nftw@plt+0x2fadc>
  432474:	ldr	x0, [x20]
  432478:	adrp	x26, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  43247c:	add	x26, x26, #0xc80
  432480:	mov	w21, #0x0                   	// #0
  432484:	mov	w27, #0x20                  	// #32
  432488:	ldr	x25, [x0]
  43248c:	mov	x0, x25
  432490:	bl	4024f0 <strlen@plt>
  432494:	mov	w23, w0
  432498:	mov	x0, x25
  43249c:	mov	x1, x19
  4324a0:	bl	402a50 <fputs_unlocked@plt>
  4324a4:	add	w28, w21, #0x1
  4324a8:	ldr	w0, [x20, #8]
  4324ac:	mov	x21, x28
  4324b0:	cmp	w0, w28
  4324b4:	b.ls	432524 <nftw@plt+0x2f9a4>  // b.plast
  4324b8:	ldr	x0, [x20]
  4324bc:	ldr	x25, [x0, x28, lsl #3]
  4324c0:	mov	x0, x25
  4324c4:	bl	4024f0 <strlen@plt>
  4324c8:	cmp	w24, #0x0
  4324cc:	mov	x22, x0
  4324d0:	add	w23, w23, w0
  4324d4:	cbz	w21, 432498 <nftw@plt+0x2f918>
  4324d8:	ccmp	w24, w23, #0x2, ne  // ne = any
  4324dc:	b.cc	432618 <nftw@plt+0x2fa98>  // b.lo, b.ul, b.last
  4324e0:	ldp	x0, x1, [x19, #40]
  4324e4:	add	x2, x0, #0x1
  4324e8:	cmp	x0, x1
  4324ec:	b.cs	43264c <nftw@plt+0x2facc>  // b.hs, b.nlast
  4324f0:	str	x2, [x19, #40]
  4324f4:	strb	w27, [x0]
  4324f8:	ldr	x0, [x20]
  4324fc:	mov	x1, x19
  432500:	add	w23, w23, #0x1
  432504:	ldr	x25, [x0, x28, lsl #3]
  432508:	add	w28, w21, #0x1
  43250c:	mov	x21, x28
  432510:	mov	x0, x25
  432514:	bl	402a50 <fputs_unlocked@plt>
  432518:	ldr	w0, [x20, #8]
  43251c:	cmp	w0, w28
  432520:	b.hi	4324b8 <nftw@plt+0x2f938>  // b.pmore
  432524:	ldp	x0, x1, [x19, #40]
  432528:	add	w23, w23, #0x1
  43252c:	cmp	x0, x1
  432530:	b.cs	432670 <nftw@plt+0x2faf0>  // b.hs, b.nlast
  432534:	add	x1, x0, #0x1
  432538:	str	x1, [x19, #40]
  43253c:	mov	w1, #0x3a                  	// #58
  432540:	strb	w1, [x0]
  432544:	ldr	w0, [x20, #24]
  432548:	cbz	w0, 4325c4 <nftw@plt+0x2fa44>
  43254c:	cmp	w24, #0x0
  432550:	adrp	x26, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  432554:	cset	w22, ne  // ne = any
  432558:	add	x26, x26, #0xc80
  43255c:	mov	w21, #0x0                   	// #0
  432560:	mov	w25, #0x20                  	// #32
  432564:	nop
  432568:	ldr	x0, [x20, #16]
  43256c:	mov	w27, w21
  432570:	ldr	x0, [x0, x27, lsl #3]
  432574:	bl	4024f0 <strlen@plt>
  432578:	add	w23, w23, w0
  43257c:	cmp	w22, #0x0
  432580:	ccmp	w24, w23, #0x2, ne  // ne = any
  432584:	b.cc	4325fc <nftw@plt+0x2fa7c>  // b.lo, b.ul, b.last
  432588:	ldp	x0, x1, [x19, #40]
  43258c:	add	x2, x0, #0x1
  432590:	cmp	x0, x1
  432594:	b.cs	43263c <nftw@plt+0x2fabc>  // b.hs, b.nlast
  432598:	str	x2, [x19, #40]
  43259c:	strb	w25, [x0]
  4325a0:	add	w23, w23, #0x1
  4325a4:	ldr	x0, [x20, #16]
  4325a8:	mov	x1, x19
  4325ac:	add	w21, w21, #0x1
  4325b0:	ldr	x0, [x0, x27, lsl #3]
  4325b4:	bl	402a50 <fputs_unlocked@plt>
  4325b8:	ldr	w0, [x20, #24]
  4325bc:	cmp	w0, w21
  4325c0:	b.hi	432568 <nftw@plt+0x2f9e8>  // b.pmore
  4325c4:	ldp	x0, x1, [x19, #40]
  4325c8:	cmp	x0, x1
  4325cc:	b.cs	432680 <nftw@plt+0x2fb00>  // b.hs, b.nlast
  4325d0:	add	x1, x0, #0x1
  4325d4:	str	x1, [x19, #40]
  4325d8:	mov	w1, #0xa                   	// #10
  4325dc:	strb	w1, [x0]
  4325e0:	ldp	x19, x20, [sp, #16]
  4325e4:	ldp	x21, x22, [sp, #32]
  4325e8:	ldp	x23, x24, [sp, #48]
  4325ec:	ldp	x25, x26, [sp, #64]
  4325f0:	ldp	x27, x28, [sp, #80]
  4325f4:	ldp	x29, x30, [sp], #96
  4325f8:	ret
  4325fc:	add	w23, w0, #0x1
  432600:	mov	x3, x19
  432604:	mov	x0, x26
  432608:	mov	x2, #0x4                   	// #4
  43260c:	mov	x1, #0x1                   	// #1
  432610:	bl	4024d0 <fwrite_unlocked@plt>
  432614:	b	4325a4 <nftw@plt+0x2fa24>
  432618:	mov	x3, x19
  43261c:	mov	x0, x26
  432620:	mov	x2, #0x4                   	// #4
  432624:	mov	x1, #0x1                   	// #1
  432628:	bl	4024d0 <fwrite_unlocked@plt>
  43262c:	add	w23, w22, #0x1
  432630:	ldr	x0, [x20]
  432634:	ldr	x25, [x0, x28, lsl #3]
  432638:	b	432498 <nftw@plt+0x2f918>
  43263c:	mov	x0, x19
  432640:	mov	w1, #0x20                  	// #32
  432644:	bl	402800 <__overflow@plt>
  432648:	b	4325a0 <nftw@plt+0x2fa20>
  43264c:	mov	x0, x19
  432650:	mov	w1, #0x20                  	// #32
  432654:	bl	402800 <__overflow@plt>
  432658:	b	4324f8 <nftw@plt+0x2f978>
  43265c:	ldp	x0, x1, [x19, #40]
  432660:	mov	w23, #0x1                   	// #1
  432664:	cmp	x0, x1
  432668:	b.cc	432534 <nftw@plt+0x2f9b4>  // b.lo, b.ul, b.last
  43266c:	nop
  432670:	mov	x0, x19
  432674:	mov	w1, #0x3a                  	// #58
  432678:	bl	402800 <__overflow@plt>
  43267c:	b	432544 <nftw@plt+0x2f9c4>
  432680:	mov	x0, x19
  432684:	mov	w1, #0xa                   	// #10
  432688:	ldp	x19, x20, [sp, #16]
  43268c:	ldp	x21, x22, [sp, #32]
  432690:	ldp	x23, x24, [sp, #48]
  432694:	ldp	x25, x26, [sp, #64]
  432698:	ldp	x27, x28, [sp, #80]
  43269c:	ldp	x29, x30, [sp], #96
  4326a0:	b	402800 <__overflow@plt>
  4326a4:	nop
  4326a8:	stp	x29, x30, [sp, #-64]!
  4326ac:	mov	x29, sp
  4326b0:	stp	x21, x22, [sp, #32]
  4326b4:	mov	x21, x0
  4326b8:	ldr	w0, [x0, #24]
  4326bc:	cmp	w0, #0x1
  4326c0:	b.ls	432750 <nftw@plt+0x2fbd0>  // b.plast
  4326c4:	stp	x19, x20, [sp, #16]
  4326c8:	mov	x19, x1
  4326cc:	mov	w20, #0x1                   	// #1
  4326d0:	mov	w22, #0xa                   	// #10
  4326d4:	str	x23, [sp, #48]
  4326d8:	mov	w23, #0x3a                  	// #58
  4326dc:	nop
  4326e0:	ldp	x1, x0, [x19, #40]
  4326e4:	add	x2, x1, #0x1
  4326e8:	cmp	x1, x0
  4326ec:	b.cs	43275c <nftw@plt+0x2fbdc>  // b.hs, b.nlast
  4326f0:	str	x2, [x19, #40]
  4326f4:	strb	w22, [x1]
  4326f8:	mov	x1, x19
  4326fc:	ldr	x0, [x21, #16]
  432700:	ldr	x0, [x0, w20, uxtw #3]
  432704:	bl	402a50 <fputs_unlocked@plt>
  432708:	ldp	x1, x0, [x19, #40]
  43270c:	add	x2, x1, #0x1
  432710:	cmp	x1, x0
  432714:	b.cs	432788 <nftw@plt+0x2fc08>  // b.hs, b.nlast
  432718:	str	x2, [x19, #40]
  43271c:	strb	w23, [x1]
  432720:	ldp	x1, x0, [x19, #40]
  432724:	add	x2, x1, #0x1
  432728:	cmp	x1, x0
  43272c:	b.cs	4327a8 <nftw@plt+0x2fc28>  // b.hs, b.nlast
  432730:	str	x2, [x19, #40]
  432734:	strb	w22, [x1]
  432738:	ldr	w0, [x21, #24]
  43273c:	add	w20, w20, #0x1
  432740:	cmp	w0, w20
  432744:	b.hi	4326e0 <nftw@plt+0x2fb60>  // b.pmore
  432748:	ldp	x19, x20, [sp, #16]
  43274c:	ldr	x23, [sp, #48]
  432750:	ldp	x21, x22, [sp, #32]
  432754:	ldp	x29, x30, [sp], #64
  432758:	ret
  43275c:	mov	w1, #0xa                   	// #10
  432760:	mov	x0, x19
  432764:	bl	402800 <__overflow@plt>
  432768:	ldr	x0, [x21, #16]
  43276c:	mov	x1, x19
  432770:	ldr	x0, [x0, w20, uxtw #3]
  432774:	bl	402a50 <fputs_unlocked@plt>
  432778:	ldp	x1, x0, [x19, #40]
  43277c:	add	x2, x1, #0x1
  432780:	cmp	x1, x0
  432784:	b.cc	432718 <nftw@plt+0x2fb98>  // b.lo, b.ul, b.last
  432788:	mov	w1, #0x3a                  	// #58
  43278c:	mov	x0, x19
  432790:	bl	402800 <__overflow@plt>
  432794:	ldp	x1, x0, [x19, #40]
  432798:	add	x2, x1, #0x1
  43279c:	cmp	x1, x0
  4327a0:	b.cc	432730 <nftw@plt+0x2fbb0>  // b.lo, b.ul, b.last
  4327a4:	nop
  4327a8:	mov	x0, x19
  4327ac:	mov	w1, #0xa                   	// #10
  4327b0:	bl	402800 <__overflow@plt>
  4327b4:	b	432738 <nftw@plt+0x2fbb8>
  4327b8:	stp	x29, x30, [sp, #-64]!
  4327bc:	mov	x3, x1
  4327c0:	mov	x2, #0x1                   	// #1
  4327c4:	mov	x29, sp
  4327c8:	stp	x19, x20, [sp, #16]
  4327cc:	mov	x20, x0
  4327d0:	add	x0, x0, #0x18
  4327d4:	stp	x21, x22, [sp, #32]
  4327d8:	mov	x22, x1
  4327dc:	mov	x1, #0x4                   	// #4
  4327e0:	bl	4024d0 <fwrite_unlocked@plt>
  4327e4:	cmp	x0, #0x1
  4327e8:	b.ne	432860 <nftw@plt+0x2fce0>  // b.any
  4327ec:	ldr	w0, [x20, #24]
  4327f0:	mov	w19, #0x0                   	// #0
  4327f4:	cbnz	w0, 432820 <nftw@plt+0x2fca0>
  4327f8:	b	432874 <nftw@plt+0x2fcf4>
  4327fc:	ldr	x0, [x20, #16]
  432800:	ldr	x1, [sp, #56]
  432804:	ldr	x0, [x0, x21, lsl #3]
  432808:	bl	4024d0 <fwrite_unlocked@plt>
  43280c:	cmp	x0, #0x1
  432810:	b.ne	432860 <nftw@plt+0x2fce0>  // b.any
  432814:	ldr	w0, [x20, #24]
  432818:	cmp	w0, w19
  43281c:	b.ls	432874 <nftw@plt+0x2fcf4>  // b.plast
  432820:	ldr	x0, [x20, #16]
  432824:	mov	w21, w19
  432828:	add	w19, w19, #0x1
  43282c:	ldr	x0, [x0, x21, lsl #3]
  432830:	bl	4024f0 <strlen@plt>
  432834:	mov	x4, x0
  432838:	mov	x3, x22
  43283c:	mov	x2, #0x1                   	// #1
  432840:	add	x0, sp, #0x38
  432844:	mov	x1, #0x8                   	// #8
  432848:	str	x4, [sp, #56]
  43284c:	bl	4024d0 <fwrite_unlocked@plt>
  432850:	mov	x3, x22
  432854:	mov	x2, x0
  432858:	cmp	x0, #0x1
  43285c:	b.eq	4327fc <nftw@plt+0x2fc7c>  // b.none
  432860:	mov	w0, #0xffffffff            	// #-1
  432864:	ldp	x19, x20, [sp, #16]
  432868:	ldp	x21, x22, [sp, #32]
  43286c:	ldp	x29, x30, [sp], #64
  432870:	ret
  432874:	mov	w0, #0x0                   	// #0
  432878:	ldp	x19, x20, [sp, #16]
  43287c:	ldp	x21, x22, [sp, #32]
  432880:	ldp	x29, x30, [sp], #64
  432884:	ret
  432888:	stp	x29, x30, [sp, #-80]!
  43288c:	mov	x3, x1
  432890:	mov	x29, sp
  432894:	stp	x21, x22, [sp, #32]
  432898:	mov	x21, x1
  43289c:	mov	x22, x2
  4328a0:	mov	x1, #0x1                   	// #1
  4328a4:	mov	x2, #0x4                   	// #4
  4328a8:	stp	x23, x24, [sp, #48]
  4328ac:	mov	x23, x0
  4328b0:	add	x0, sp, #0x44
  4328b4:	bl	402840 <fread_unlocked@plt>
  4328b8:	cmp	x0, #0x4
  4328bc:	b.ne	4329ec <nftw@plt+0x2fe6c>  // b.any
  4328c0:	mov	x0, #0x200                 	// #512
  4328c4:	stp	x19, x20, [sp, #16]
  4328c8:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4328cc:	ldr	w1, [sp, #68]
  4328d0:	mov	x19, x0
  4328d4:	cbz	w1, 432990 <nftw@plt+0x2fe10>
  4328d8:	mov	x24, #0x200                 	// #512
  4328dc:	mov	w20, #0x0                   	// #0
  4328e0:	b	432928 <nftw@plt+0x2fda8>
  4328e4:	mov	x3, x21
  4328e8:	mov	x1, #0x1                   	// #1
  4328ec:	mov	x0, x19
  4328f0:	bl	402840 <fread_unlocked@plt>
  4328f4:	ldr	x2, [sp, #72]
  4328f8:	mov	x3, x0
  4328fc:	mov	x1, x22
  432900:	mov	x0, x19
  432904:	cmp	x3, x2
  432908:	b.ne	4329d0 <nftw@plt+0x2fe50>  // b.any
  43290c:	strb	wzr, [x19, x3]
  432910:	cbz	x22, 43291c <nftw@plt+0x2fd9c>
  432914:	bl	448380 <nftw@plt+0x45800>
  432918:	cbnz	w0, 432974 <nftw@plt+0x2fdf4>
  43291c:	ldr	w0, [sp, #68]
  432920:	cmp	w0, w20
  432924:	b.ls	432990 <nftw@plt+0x2fe10>  // b.plast
  432928:	mov	x3, x21
  43292c:	add	x0, sp, #0x48
  432930:	mov	x2, #0x8                   	// #8
  432934:	mov	x1, #0x1                   	// #1
  432938:	add	w20, w20, #0x1
  43293c:	bl	402840 <fread_unlocked@plt>
  432940:	cmp	x0, #0x8
  432944:	b.ne	4329b0 <nftw@plt+0x2fe30>  // b.any
  432948:	ldr	x2, [sp, #72]
  43294c:	add	x0, x2, #0x1
  432950:	cmp	x0, x24
  432954:	b.ls	4328e4 <nftw@plt+0x2fd64>  // b.plast
  432958:	add	x24, x2, #0x80
  43295c:	mov	x0, x19
  432960:	mov	x1, x24
  432964:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  432968:	mov	x19, x0
  43296c:	ldr	x2, [sp, #72]
  432970:	b	4328e4 <nftw@plt+0x2fd64>
  432974:	mov	x0, x23
  432978:	mov	x1, x19
  43297c:	bl	4322b0 <nftw@plt+0x2f730>
  432980:	ldr	w0, [sp, #68]
  432984:	cmp	w0, w20
  432988:	b.hi	432928 <nftw@plt+0x2fda8>  // b.pmore
  43298c:	nop
  432990:	mov	x0, x19
  432994:	bl	402910 <free@plt>
  432998:	ldp	x19, x20, [sp, #16]
  43299c:	mov	w0, #0x0                   	// #0
  4329a0:	ldp	x21, x22, [sp, #32]
  4329a4:	ldp	x23, x24, [sp, #48]
  4329a8:	ldp	x29, x30, [sp], #80
  4329ac:	ret
  4329b0:	mov	x0, x19
  4329b4:	bl	402910 <free@plt>
  4329b8:	mov	w0, #0xffffffff            	// #-1
  4329bc:	ldp	x19, x20, [sp, #16]
  4329c0:	ldp	x21, x22, [sp, #32]
  4329c4:	ldp	x23, x24, [sp, #48]
  4329c8:	ldp	x29, x30, [sp], #80
  4329cc:	ret
  4329d0:	bl	402910 <free@plt>
  4329d4:	mov	w0, #0xffffffff            	// #-1
  4329d8:	ldp	x19, x20, [sp, #16]
  4329dc:	ldp	x21, x22, [sp, #32]
  4329e0:	ldp	x23, x24, [sp, #48]
  4329e4:	ldp	x29, x30, [sp], #80
  4329e8:	ret
  4329ec:	mov	w0, #0xffffffff            	// #-1
  4329f0:	b	4329a0 <nftw@plt+0x2fe20>
  4329f4:	nop
  4329f8:	stp	x29, x30, [sp, #-48]!
  4329fc:	mov	x1, #0x90                  	// #144
  432a00:	mov	x29, sp
  432a04:	stp	x19, x20, [sp, #16]
  432a08:	mov	w20, w0
  432a0c:	mov	x0, #0x1                   	// #1
  432a10:	str	x21, [sp, #32]
  432a14:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  432a18:	adrp	x4, 402000 <memcpy@plt-0x490>
  432a1c:	mov	x19, x0
  432a20:	add	x4, x4, #0x910
  432a24:	adrp	x3, 449000 <nftw@plt+0x46480>
  432a28:	add	x3, x3, #0xb78
  432a2c:	mov	x2, #0x0                   	// #0
  432a30:	mov	w21, #0x1                   	// #1
  432a34:	mov	x1, #0x0                   	// #0
  432a38:	bl	449840 <_obstack_begin@@Base>
  432a3c:	lsl	w20, w21, w20
  432a40:	mov	x1, #0x8                   	// #8
  432a44:	mov	w0, w20
  432a48:	str	xzr, [x19, #48]
  432a4c:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  432a50:	mov	x1, x0
  432a54:	mov	x0, x19
  432a58:	str	x1, [x19, #88]
  432a5c:	str	w20, [x19, #112]
  432a60:	strb	w21, [x19, #136]
  432a64:	ldp	x19, x20, [sp, #16]
  432a68:	ldr	x21, [sp, #32]
  432a6c:	ldp	x29, x30, [sp], #48
  432a70:	ret
  432a74:	nop
  432a78:	stp	x29, x30, [sp, #-32]!
  432a7c:	mov	x1, #0x0                   	// #0
  432a80:	mov	x29, sp
  432a84:	str	x19, [sp, #16]
  432a88:	mov	x19, x0
  432a8c:	bl	4499d0 <_obstack_free@@Base>
  432a90:	ldrb	w0, [x19, #136]
  432a94:	cbnz	w0, 432aa8 <nftw@plt+0x2ff28>
  432a98:	mov	x0, x19
  432a9c:	ldr	x19, [sp, #16]
  432aa0:	ldp	x29, x30, [sp], #32
  432aa4:	b	402910 <free@plt>
  432aa8:	ldr	x0, [x19, #88]
  432aac:	bl	402910 <free@plt>
  432ab0:	mov	x0, x19
  432ab4:	ldr	x19, [sp, #16]
  432ab8:	ldp	x29, x30, [sp], #32
  432abc:	b	402910 <free@plt>
  432ac0:	stp	x29, x30, [sp, #-112]!
  432ac4:	mov	x29, sp
  432ac8:	ldr	w7, [x0, #112]
  432acc:	stp	x23, x24, [sp, #48]
  432ad0:	mov	x23, x0
  432ad4:	sub	w24, w7, #0x1
  432ad8:	stp	x27, x28, [sp, #80]
  432adc:	and	w5, w24, w3
  432ae0:	ldr	x27, [x0, #88]
  432ae4:	stp	x19, x20, [sp, #16]
  432ae8:	ldr	w0, [x0, #128]
  432aec:	stp	x21, x22, [sp, #32]
  432af0:	and	w19, w24, w3
  432af4:	add	w0, w0, #0x1
  432af8:	ldr	x20, [x27, x5, lsl #3]
  432afc:	stp	x25, x26, [sp, #64]
  432b00:	mov	x22, x2
  432b04:	str	x1, [sp, #96]
  432b08:	mov	w26, w3
  432b0c:	str	w0, [x23, #128]
  432b10:	cbz	x20, 432d14 <nftw@plt+0x30194>
  432b14:	cmn	x20, #0x1
  432b18:	b.eq	432cb8 <nftw@plt+0x30138>  // b.none
  432b1c:	ldr	w0, [x20, #12]
  432b20:	mov	w28, w7
  432b24:	cmp	w0, w3
  432b28:	b.eq	432dec <nftw@plt+0x3026c>  // b.none
  432b2c:	add	w25, w26, w26, lsl #4
  432b30:	ldr	w21, [x23, #132]
  432b34:	and	w25, w25, w24
  432b38:	orr	w25, w25, #0x1
  432b3c:	add	w21, w21, #0x1
  432b40:	add	w5, w19, w25
  432b44:	and	w6, w24, w5
  432b48:	and	w19, w24, w5
  432b4c:	ldr	x20, [x27, x6, lsl #3]
  432b50:	str	w21, [x23, #132]
  432b54:	cbnz	x20, 432b84 <nftw@plt+0x30004>
  432b58:	b	432bb0 <nftw@plt+0x30030>
  432b5c:	ldr	w0, [x20, #12]
  432b60:	cmp	w0, w26
  432b64:	b.eq	432cc0 <nftw@plt+0x30140>  // b.none
  432b68:	add	w5, w25, w19
  432b6c:	add	w21, w21, #0x1
  432b70:	and	w6, w24, w5
  432b74:	and	w19, w24, w5
  432b78:	ldr	x20, [x27, x6, lsl #3]
  432b7c:	str	w21, [x23, #132]
  432b80:	cbz	x20, 432bb0 <nftw@plt+0x30030>
  432b84:	cmn	x20, #0x1
  432b88:	b.ne	432b5c <nftw@plt+0x2ffdc>  // b.any
  432b8c:	add	w5, w25, w19
  432b90:	add	w21, w21, #0x1
  432b94:	and	w6, w24, w5
  432b98:	cmp	w7, w28
  432b9c:	csel	w28, w28, w19, eq  // eq = none
  432ba0:	and	w19, w24, w5
  432ba4:	ldr	x20, [x27, x6, lsl #3]
  432ba8:	str	w21, [x23, #132]
  432bac:	cbnz	x20, 432b84 <nftw@plt+0x30004>
  432bb0:	cbz	w4, 432d1c <nftw@plt+0x3019c>
  432bb4:	lsl	x6, x6, #3
  432bb8:	cmp	w7, w28
  432bbc:	ubfiz	x5, x28, #3, #32
  432bc0:	csel	x21, x6, x5, eq  // eq = none
  432bc4:	ldr	x1, [x23, #96]
  432bc8:	mov	x0, x23
  432bcc:	blr	x1
  432bd0:	mov	x20, x0
  432bd4:	ldr	x1, [x23, #88]
  432bd8:	add	x0, x22, #0x1
  432bdc:	ldr	x2, [x23, #104]
  432be0:	str	x20, [x1, x21]
  432be4:	stp	w22, w26, [x20, #8]
  432be8:	cbz	x2, 432d40 <nftw@plt+0x301c0>
  432bec:	blr	x2
  432bf0:	mov	x19, x0
  432bf4:	ldr	x1, [sp, #96]
  432bf8:	mov	x2, x22
  432bfc:	bl	402490 <memcpy@plt>
  432c00:	strb	wzr, [x19, x22]
  432c04:	str	x19, [x20]
  432c08:	ldp	w0, w1, [x23, #112]
  432c0c:	add	w1, w1, #0x1
  432c10:	str	w1, [x23, #116]
  432c14:	lsl	w21, w0, #1
  432c18:	add	w0, w21, w0
  432c1c:	cmp	w0, w1, lsl #2
  432c20:	b.hi	432c98 <nftw@plt+0x30118>  // b.pmore
  432c24:	mov	w0, w21
  432c28:	mov	x1, #0x8                   	// #8
  432c2c:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  432c30:	mov	x19, x0
  432c34:	ldr	x9, [x23, #88]
  432c38:	sub	w3, w21, #0x1
  432c3c:	ldr	w8, [x23, #112]
  432c40:	mov	x5, x9
  432c44:	add	x8, x9, x8, lsl #3
  432c48:	ldr	x7, [x5]
  432c4c:	sub	x1, x7, #0x1
  432c50:	cmn	x1, #0x3
  432c54:	b.hi	432c74 <nftw@plt+0x300f4>  // b.pmore
  432c58:	ldr	w2, [x7, #12]
  432c5c:	and	w4, w3, w2
  432c60:	and	w1, w3, w2
  432c64:	add	x6, x19, x4, lsl #3
  432c68:	ldr	x4, [x19, x4, lsl #3]
  432c6c:	cbnz	x4, 432cec <nftw@plt+0x3016c>
  432c70:	str	x7, [x6]
  432c74:	add	x5, x5, #0x8
  432c78:	cmp	x8, x5
  432c7c:	b.hi	432c48 <nftw@plt+0x300c8>  // b.pmore
  432c80:	ldrb	w0, [x23, #136]
  432c84:	cbnz	w0, 432dbc <nftw@plt+0x3023c>
  432c88:	mov	w0, #0x1                   	// #1
  432c8c:	str	x19, [x23, #88]
  432c90:	str	w21, [x23, #112]
  432c94:	strb	w0, [x23, #136]
  432c98:	mov	x0, x20
  432c9c:	ldp	x19, x20, [sp, #16]
  432ca0:	ldp	x21, x22, [sp, #32]
  432ca4:	ldp	x23, x24, [sp, #48]
  432ca8:	ldp	x25, x26, [sp, #64]
  432cac:	ldp	x27, x28, [sp, #80]
  432cb0:	ldp	x29, x30, [sp], #112
  432cb4:	ret
  432cb8:	mov	w28, w19
  432cbc:	b	432b2c <nftw@plt+0x2ffac>
  432cc0:	ldr	w0, [x20, #8]
  432cc4:	cmp	w0, w22
  432cc8:	b.ne	432b68 <nftw@plt+0x2ffe8>  // b.any
  432ccc:	ldr	x0, [x20]
  432cd0:	mov	x2, x22
  432cd4:	ldr	x1, [sp, #96]
  432cd8:	stp	w7, w4, [sp, #104]
  432cdc:	bl	402850 <memcmp@plt>
  432ce0:	ldp	w7, w4, [sp, #104]
  432ce4:	cbnz	w0, 432b68 <nftw@plt+0x2ffe8>
  432ce8:	b	432c98 <nftw@plt+0x30118>
  432cec:	add	w2, w2, w2, lsl #4
  432cf0:	and	w4, w2, w3
  432cf4:	orr	w4, w4, #0x1
  432cf8:	add	w1, w4, w1
  432cfc:	and	w2, w3, w1
  432d00:	and	w1, w3, w1
  432d04:	add	x6, x19, x2, lsl #3
  432d08:	ldr	x2, [x19, x2, lsl #3]
  432d0c:	cbnz	x2, 432cf8 <nftw@plt+0x30178>
  432d10:	b	432c70 <nftw@plt+0x300f0>
  432d14:	lsl	x21, x5, #3
  432d18:	cbnz	w4, 432bc4 <nftw@plt+0x30044>
  432d1c:	mov	x20, #0x0                   	// #0
  432d20:	mov	x0, x20
  432d24:	ldp	x19, x20, [sp, #16]
  432d28:	ldp	x21, x22, [sp, #32]
  432d2c:	ldp	x23, x24, [sp, #48]
  432d30:	ldp	x25, x26, [sp, #64]
  432d34:	ldp	x27, x28, [sp, #80]
  432d38:	ldp	x29, x30, [sp], #112
  432d3c:	ret
  432d40:	ldp	x2, x1, [x23, #24]
  432d44:	sub	x1, x1, x2
  432d48:	cmp	x1, x0
  432d4c:	b.cc	432dc8 <nftw@plt+0x30248>  // b.lo, b.ul, b.last
  432d50:	ldr	x1, [sp, #96]
  432d54:	mov	x0, x2
  432d58:	mov	x2, x22
  432d5c:	bl	402490 <memcpy@plt>
  432d60:	ldr	x1, [x23, #24]
  432d64:	add	x0, x1, x22
  432d68:	add	x0, x0, #0x1
  432d6c:	str	x0, [x23, #24]
  432d70:	strb	wzr, [x1, x22]
  432d74:	ldp	x3, x2, [x23, #16]
  432d78:	cmp	x2, x3
  432d7c:	b.eq	432ddc <nftw@plt+0x3025c>  // b.none
  432d80:	ldr	x0, [x23, #48]
  432d84:	ldr	x1, [x23, #8]
  432d88:	add	x2, x2, x0
  432d8c:	ldr	x4, [x23, #32]
  432d90:	bic	x0, x2, x0
  432d94:	str	x0, [x23, #24]
  432d98:	sub	x2, x0, x1
  432d9c:	sub	x1, x4, x1
  432da0:	cmp	x2, x1
  432da4:	b.ls	432db0 <nftw@plt+0x30230>  // b.plast
  432da8:	mov	x0, x4
  432dac:	str	x4, [x23, #24]
  432db0:	str	x0, [x23, #16]
  432db4:	str	x3, [x20]
  432db8:	b	432c08 <nftw@plt+0x30088>
  432dbc:	mov	x0, x9
  432dc0:	bl	402910 <free@plt>
  432dc4:	b	432c88 <nftw@plt+0x30108>
  432dc8:	mov	x1, x0
  432dcc:	mov	x0, x23
  432dd0:	bl	449870 <_obstack_newchunk@@Base>
  432dd4:	ldr	x2, [x23, #24]
  432dd8:	b	432d50 <nftw@plt+0x301d0>
  432ddc:	ldrb	w0, [x23, #80]
  432de0:	orr	w0, w0, #0x2
  432de4:	strb	w0, [x23, #80]
  432de8:	b	432d80 <nftw@plt+0x30200>
  432dec:	ldr	w0, [x20, #8]
  432df0:	cmp	w0, w2
  432df4:	b.ne	432b2c <nftw@plt+0x2ffac>  // b.any
  432df8:	ldr	x0, [x20]
  432dfc:	stp	w7, w4, [sp, #104]
  432e00:	bl	402850 <memcmp@plt>
  432e04:	cbz	w0, 432c98 <nftw@plt+0x30118>
  432e08:	ldp	w7, w4, [sp, #104]
  432e0c:	mov	w28, w7
  432e10:	b	432b2c <nftw@plt+0x2ffac>
  432e14:	nop
  432e18:	mov	w4, w3
  432e1c:	cbz	x2, 432e50 <nftw@plt+0x302d0>
  432e20:	add	x9, x1, x2
  432e24:	mov	x6, x1
  432e28:	mov	w5, #0x0                   	// #0
  432e2c:	mov	w8, #0x43                  	// #67
  432e30:	mul	w5, w5, w8
  432e34:	ldrb	w7, [x6], #1
  432e38:	sub	w5, w5, #0x71
  432e3c:	cmp	x6, x9
  432e40:	add	w5, w7, w5
  432e44:	b.ne	432e30 <nftw@plt+0x302b0>  // b.any
  432e48:	add	w3, w5, w2
  432e4c:	b	432ac0 <nftw@plt+0x2ff40>
  432e50:	mov	w5, #0x0                   	// #0
  432e54:	add	w3, w5, w2
  432e58:	b	432ac0 <nftw@plt+0x2ff40>
  432e5c:	nop
  432e60:	stp	x29, x30, [sp, #-64]!
  432e64:	mov	x29, sp
  432e68:	stp	x19, x20, [sp, #16]
  432e6c:	mov	x20, x2
  432e70:	ldr	x19, [x0, #88]
  432e74:	stp	x21, x22, [sp, #32]
  432e78:	ldr	w21, [x0, #112]
  432e7c:	mov	x22, x0
  432e80:	str	x23, [sp, #48]
  432e84:	mov	x23, x1
  432e88:	add	x21, x19, x21, lsl #3
  432e8c:	nop
  432e90:	ldr	x1, [x19]
  432e94:	mov	x2, x20
  432e98:	add	x19, x19, #0x8
  432e9c:	sub	x3, x1, #0x1
  432ea0:	cmn	x3, #0x3
  432ea4:	b.hi	432eb4 <nftw@plt+0x30334>  // b.pmore
  432ea8:	ldr	x0, [x22, #120]
  432eac:	blr	x23
  432eb0:	cbz	w0, 432ebc <nftw@plt+0x3033c>
  432eb4:	cmp	x21, x19
  432eb8:	b.hi	432e90 <nftw@plt+0x30310>  // b.pmore
  432ebc:	ldp	x19, x20, [sp, #16]
  432ec0:	ldp	x21, x22, [sp, #32]
  432ec4:	ldr	x23, [sp, #48]
  432ec8:	ldp	x29, x30, [sp], #64
  432ecc:	ret
  432ed0:	stp	x29, x30, [sp, #-64]!
  432ed4:	mov	x29, sp
  432ed8:	stp	x19, x20, [sp, #16]
  432edc:	ldr	w20, [x0, #112]
  432ee0:	ldr	x19, [x0, #88]
  432ee4:	stp	x21, x22, [sp, #32]
  432ee8:	mov	x22, x0
  432eec:	mov	x21, x2
  432ef0:	stp	x23, x24, [sp, #48]
  432ef4:	add	x20, x19, x20, lsl #3
  432ef8:	mov	x23, x1
  432efc:	mov	x24, #0xffffffffffffffff    	// #-1
  432f00:	ldr	x1, [x19]
  432f04:	mov	x2, x21
  432f08:	sub	x3, x1, #0x1
  432f0c:	cmn	x3, #0x3
  432f10:	b.hi	432f24 <nftw@plt+0x303a4>  // b.pmore
  432f14:	ldr	x0, [x22, #120]
  432f18:	blr	x23
  432f1c:	cbz	w0, 432f24 <nftw@plt+0x303a4>
  432f20:	str	x24, [x19]
  432f24:	add	x19, x19, #0x8
  432f28:	cmp	x20, x19
  432f2c:	b.hi	432f00 <nftw@plt+0x30380>  // b.pmore
  432f30:	ldp	x19, x20, [sp, #16]
  432f34:	ldp	x21, x22, [sp, #32]
  432f38:	ldp	x23, x24, [sp, #48]
  432f3c:	ldp	x29, x30, [sp], #64
  432f40:	ret
  432f44:	nop
  432f48:	stp	x29, x30, [sp, #-64]!
  432f4c:	mov	x29, sp
  432f50:	stp	x19, x20, [sp, #16]
  432f54:	mov	x19, x0
  432f58:	ldrb	w0, [x0, #136]
  432f5c:	stp	x21, x22, [sp, #32]
  432f60:	mov	w20, w3
  432f64:	mov	x22, x1
  432f68:	str	x23, [sp, #48]
  432f6c:	mov	w21, w2
  432f70:	and	w23, w4, #0xff
  432f74:	cbnz	w0, 432f98 <nftw@plt+0x30418>
  432f78:	strb	w23, [x19, #136]
  432f7c:	ldr	x23, [sp, #48]
  432f80:	str	x22, [x19, #88]
  432f84:	stp	w21, w20, [x19, #112]
  432f88:	ldp	x19, x20, [sp, #16]
  432f8c:	ldp	x21, x22, [sp, #32]
  432f90:	ldp	x29, x30, [sp], #64
  432f94:	ret
  432f98:	ldr	x0, [x19, #88]
  432f9c:	bl	402910 <free@plt>
  432fa0:	strb	w23, [x19, #136]
  432fa4:	ldr	x23, [sp, #48]
  432fa8:	str	x22, [x19, #88]
  432fac:	stp	w21, w20, [x19, #112]
  432fb0:	ldp	x19, x20, [sp, #16]
  432fb4:	ldp	x21, x22, [sp, #32]
  432fb8:	ldp	x29, x30, [sp], #64
  432fbc:	ret
  432fc0:	stp	x29, x30, [sp, #-112]!
  432fc4:	mov	x29, sp
  432fc8:	stp	x23, x24, [sp, #48]
  432fcc:	ldr	w24, [x0, #112]
  432fd0:	ldr	x1, [x0, #88]
  432fd4:	stp	x19, x20, [sp, #16]
  432fd8:	lsl	x24, x24, #3
  432fdc:	mov	x20, #0x0                   	// #0
  432fe0:	mov	x19, #0x0                   	// #0
  432fe4:	stp	x21, x22, [sp, #32]
  432fe8:	mov	x22, x0
  432fec:	mov	x21, #0x0                   	// #0
  432ff0:	add	x0, x1, x24
  432ff4:	stp	x25, x26, [sp, #64]
  432ff8:	mov	x25, #0x0                   	// #0
  432ffc:	stp	d8, d9, [sp, #80]
  433000:	movi	d8, #0x0
  433004:	str	d10, [sp, #96]
  433008:	b	43303c <nftw@plt+0x304bc>
  43300c:	cbz	x2, 433030 <nftw@plt+0x304b0>
  433010:	ldr	w2, [x2, #8]
  433014:	add	x21, x21, #0x1
  433018:	mov	w3, w2
  43301c:	ucvtf	d0, w2
  433020:	cmp	x20, x3
  433024:	csel	x20, x20, x3, cs  // cs = hs, nlast
  433028:	add	x19, x19, x3
  43302c:	fmadd	d8, d0, d0, d8
  433030:	add	x1, x1, #0x8
  433034:	cmp	x0, x1
  433038:	b.ls	433058 <nftw@plt+0x304d8>  // b.plast
  43303c:	ldr	x2, [x1]
  433040:	cmn	x2, #0x1
  433044:	b.ne	43300c <nftw@plt+0x3048c>  // b.any
  433048:	add	x1, x1, #0x8
  43304c:	add	x25, x25, #0x1
  433050:	cmp	x0, x1
  433054:	b.hi	43303c <nftw@plt+0x304bc>  // b.pmore
  433058:	adrp	x23, 48c000 <_obstack_memory_used@@Base+0x425a0>
  43305c:	ldr	w26, [x22, #116]
  433060:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433064:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433068:	ldr	x0, [x23, #1392]
  43306c:	add	x2, x2, #0xc88
  433070:	add	x1, x1, #0xc98
  433074:	mov	w3, w26
  433078:	bl	402b30 <fprintf@plt>
  43307c:	ucvtf	d0, x21
  433080:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  433084:	fmov	d1, x0
  433088:	ucvtf	d10, w26
  43308c:	ldr	x0, [x23, #1392]
  433090:	mov	x3, x21
  433094:	fmul	d0, d0, d1
  433098:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  43309c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4330a0:	add	x2, x2, #0xcb0
  4330a4:	add	x1, x1, #0xcc0
  4330a8:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4330ac:	add	x21, x21, #0xce0
  4330b0:	fdiv	d0, d0, d10
  4330b4:	bl	402b30 <fprintf@plt>
  4330b8:	ldr	w3, [x22, #112]
  4330bc:	mov	x1, x21
  4330c0:	ldr	x0, [x23, #1392]
  4330c4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4330c8:	add	x2, x2, #0xcd8
  4330cc:	bl	402b30 <fprintf@plt>
  4330d0:	ldr	x0, [x23, #1392]
  4330d4:	mov	x3, x25
  4330d8:	mov	x1, x21
  4330dc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4330e0:	add	x2, x2, #0xcf0
  4330e4:	bl	402b30 <fprintf@plt>
  4330e8:	ldr	x0, [x22, #104]
  4330ec:	cbz	x0, 43325c <nftw@plt+0x306dc>
  4330f0:	mov	x0, #0x27ff                	// #10239
  4330f4:	cmp	x19, x0
  4330f8:	ldr	x0, [x23, #1392]
  4330fc:	b.hi	433244 <nftw@plt+0x306c4>  // b.pmore
  433100:	mov	x3, x19
  433104:	mov	w4, #0x20                  	// #32
  433108:	adrp	x25, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  43310c:	add	x25, x25, #0xd10
  433110:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433114:	mov	x1, x25
  433118:	add	x2, x2, #0xd00
  43311c:	bl	402b30 <fprintf@plt>
  433120:	mov	x0, #0x27ff                	// #10239
  433124:	mov	w4, #0x20                  	// #32
  433128:	cmp	x24, x0
  43312c:	ldr	x0, [x23, #1392]
  433130:	b.ls	433148 <nftw@plt+0x305c8>  // b.plast
  433134:	mov	w1, #0x9fffff              	// #10485759
  433138:	cmp	x24, x1
  43313c:	b.hi	4332c4 <nftw@plt+0x30744>  // b.pmore
  433140:	lsr	x24, x24, #10
  433144:	mov	w4, #0x6b                  	// #107
  433148:	mov	x3, x24
  43314c:	mov	x1, x25
  433150:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433154:	add	x2, x2, #0xd50
  433158:	bl	402b30 <fprintf@plt>
  43315c:	ldp	w1, w2, [x22, #128]
  433160:	ucvtf	d9, x19
  433164:	ldr	x0, [x23, #1392]
  433168:	ucvtf	d1, w2
  43316c:	ucvtf	d0, w1
  433170:	adrp	x19, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433174:	fdiv	d9, d9, d10
  433178:	add	x19, x19, #0xd70
  43317c:	mov	x1, x19
  433180:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433184:	add	x2, x2, #0xd60
  433188:	fdiv	d0, d1, d0
  43318c:	bl	402b30 <fprintf@plt>
  433190:	ldr	w2, [x22, #128]
  433194:	mov	x1, x19
  433198:	ldr	x0, [x23, #1392]
  43319c:	ucvtf	d0, w2
  4331a0:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4331a4:	add	x2, x2, #0xd80
  4331a8:	fdiv	d0, d10, d0
  4331ac:	bl	402b30 <fprintf@plt>
  4331b0:	fdiv	d8, d8, d10
  4331b4:	ldr	x0, [x23, #1392]
  4331b8:	fmsub	d8, d9, d9, d8
  4331bc:	fcmpe	d8, #0.0
  4331c0:	b.mi	43330c <nftw@plt+0x3078c>  // b.first
  4331c4:	fcmp	d8, #0.0
  4331c8:	movi	d1, #0x0
  4331cc:	b.eq	4331f8 <nftw@plt+0x30678>  // b.none
  4331d0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4331d4:	fmov	d1, d8
  4331d8:	ldr	d3, [x1, #3576]
  4331dc:	nop
  4331e0:	fnmsub	d0, d1, d1, d8
  4331e4:	fadd	d2, d1, d1
  4331e8:	fdiv	d0, d0, d2
  4331ec:	fcmpe	d0, d3
  4331f0:	fsub	d1, d1, d0
  4331f4:	b.gt	4331e0 <nftw@plt+0x30660>
  4331f8:	fmov	d0, d9
  4331fc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433200:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433204:	add	x2, x2, #0xdb8
  433208:	add	x1, x1, #0xdc8
  43320c:	bl	402b30 <fprintf@plt>
  433210:	ldr	x0, [x23, #1392]
  433214:	mov	x3, x20
  433218:	mov	x1, x21
  43321c:	ldr	d10, [sp, #96]
  433220:	ldp	x19, x20, [sp, #16]
  433224:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433228:	ldp	x21, x22, [sp, #32]
  43322c:	add	x2, x2, #0xde8
  433230:	ldp	x23, x24, [sp, #48]
  433234:	ldp	x25, x26, [sp, #64]
  433238:	ldp	d8, d9, [sp, #80]
  43323c:	ldp	x29, x30, [sp], #112
  433240:	b	402b30 <fprintf@plt>
  433244:	mov	w1, #0x9fffff              	// #10485759
  433248:	cmp	x19, x1
  43324c:	b.hi	4332d0 <nftw@plt+0x30750>  // b.pmore
  433250:	lsr	x3, x19, #10
  433254:	mov	w4, #0x6b                  	// #107
  433258:	b	433108 <nftw@plt+0x30588>
  43325c:	mov	x0, x22
  433260:	bl	449a60 <_obstack_memory_used@@Base>
  433264:	mov	x1, #0x27ff                	// #10239
  433268:	sub	x5, x0, x19
  43326c:	cmp	x19, x1
  433270:	ldr	x0, [x23, #1392]
  433274:	b.hi	4332dc <nftw@plt+0x3075c>  // b.pmore
  433278:	mov	x3, x19
  43327c:	mov	w4, #0x20                  	// #32
  433280:	mov	x1, #0x27ff                	// #10239
  433284:	mov	w6, #0x20                  	// #32
  433288:	cmp	x5, x1
  43328c:	b.ls	4332a4 <nftw@plt+0x30724>  // b.plast
  433290:	mov	w1, #0x9fffff              	// #10485759
  433294:	cmp	x5, x1
  433298:	b.hi	4332f4 <nftw@plt+0x30774>  // b.pmore
  43329c:	lsr	x5, x5, #10
  4332a0:	mov	w6, #0x6b                  	// #107
  4332a4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4332a8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4332ac:	add	x2, x2, #0xd20
  4332b0:	add	x1, x1, #0xd30
  4332b4:	adrp	x25, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4332b8:	bl	402b30 <fprintf@plt>
  4332bc:	add	x25, x25, #0xd10
  4332c0:	b	433120 <nftw@plt+0x305a0>
  4332c4:	lsr	x24, x24, #20
  4332c8:	mov	w4, #0x4d                  	// #77
  4332cc:	b	433148 <nftw@plt+0x305c8>
  4332d0:	lsr	x3, x19, #20
  4332d4:	mov	w4, #0x4d                  	// #77
  4332d8:	b	433108 <nftw@plt+0x30588>
  4332dc:	mov	w1, #0x9fffff              	// #10485759
  4332e0:	cmp	x19, x1
  4332e4:	b.hi	433300 <nftw@plt+0x30780>  // b.pmore
  4332e8:	lsr	x3, x19, #10
  4332ec:	mov	w4, #0x6b                  	// #107
  4332f0:	b	433280 <nftw@plt+0x30700>
  4332f4:	lsr	x5, x5, #20
  4332f8:	mov	w6, #0x4d                  	// #77
  4332fc:	b	4332a4 <nftw@plt+0x30724>
  433300:	lsr	x3, x19, #20
  433304:	mov	w4, #0x4d                  	// #77
  433308:	b	433280 <nftw@plt+0x30700>
  43330c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433310:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433314:	add	x2, x2, #0xd90
  433318:	add	x0, x0, #0xda0
  43331c:	mov	w1, #0x165                 	// #357
  433320:	bl	402bf0 <nftw@plt+0x70>
  433324:	nop
  433328:	ldrb	w6, [x3]
  43332c:	cbz	x2, 4333d0 <nftw@plt+0x30850>
  433330:	adrp	x7, 46a000 <_obstack_memory_used@@Base+0x205a0>
  433334:	add	x5, x0, #0x1
  433338:	add	x7, x7, #0x248
  43333c:	mov	w10, #0x20                  	// #32
  433340:	mov	w9, #0x22                  	// #34
  433344:	b	433368 <nftw@plt+0x307e8>
  433348:	cmp	w4, w6
  43334c:	csel	w6, w6, wzr, ne  // ne = any
  433350:	sturb	w4, [x5, #-1]
  433354:	mov	x8, x5
  433358:	add	x1, x1, #0x1
  43335c:	sub	x2, x2, #0x1
  433360:	add	x5, x5, #0x1
  433364:	cbz	x2, 4333c4 <nftw@plt+0x30844>
  433368:	ldrb	w4, [x1]
  43336c:	ldrh	w8, [x7, w4, sxtw #1]
  433370:	tst	w8, #0xc00
  433374:	ccmp	w6, #0x0, #0x0, ne  // ne = any
  433378:	b.eq	4333a4 <nftw@plt+0x30824>  // b.none
  43337c:	cmp	w4, #0x27
  433380:	ccmp	w4, w9, #0x4, ne  // ne = any
  433384:	b.ne	433350 <nftw@plt+0x307d0>  // b.any
  433388:	cbnz	w6, 433348 <nftw@plt+0x307c8>
  43338c:	mov	w6, w4
  433390:	b	433350 <nftw@plt+0x307d0>
  433394:	ldrb	w4, [x1]
  433398:	ldrh	w4, [x7, x4, lsl #1]
  43339c:	tst	w4, #0xc00
  4333a0:	b.eq	4333b0 <nftw@plt+0x30830>  // b.none
  4333a4:	add	x1, x1, #0x1
  4333a8:	subs	x2, x2, #0x1
  4333ac:	b.ne	433394 <nftw@plt+0x30814>  // b.any
  4333b0:	sturb	w10, [x5, #-1]
  4333b4:	mov	x8, x5
  4333b8:	mov	w6, #0x0                   	// #0
  4333bc:	add	x5, x5, #0x1
  4333c0:	cbnz	x2, 433368 <nftw@plt+0x307e8>
  4333c4:	sub	x0, x8, x0
  4333c8:	strb	w6, [x3]
  4333cc:	ret
  4333d0:	mov	x0, #0x0                   	// #0
  4333d4:	strb	w6, [x3]
  4333d8:	ret
  4333dc:	nop
  4333e0:	stp	x29, x30, [sp, #-80]!
  4333e4:	mov	x29, sp
  4333e8:	stp	x19, x20, [sp, #16]
  4333ec:	mov	x20, x1
  4333f0:	mov	x19, x0
  4333f4:	ldr	x1, [x0, #136]
  4333f8:	stp	x21, x22, [sp, #32]
  4333fc:	mov	w22, w2
  433400:	ldr	x2, [x0, #40]
  433404:	ldr	x21, [x0]
  433408:	ldr	x1, [x1, #8]
  43340c:	ldr	w2, [x2, #60]
  433410:	str	x23, [sp, #48]
  433414:	str	x20, [x21]
  433418:	cbz	x1, 433574 <nftw@plt+0x309f4>
  43341c:	ldrb	w4, [x20, #1]
  433420:	add	x5, x20, #0x1
  433424:	cmp	w4, #0x2f
  433428:	b.ne	433450 <nftw@plt+0x308d0>  // b.any
  43342c:	ldrb	w4, [x20, #2]
  433430:	add	x5, x20, #0x2
  433434:	add	x3, x5, #0x1
  433438:	cmp	w4, #0x2f
  43343c:	b.eq	43345c <nftw@plt+0x308dc>  // b.none
  433440:	cmp	w4, #0xa
  433444:	b.eq	4334a4 <nftw@plt+0x30924>  // b.none
  433448:	ldrb	w4, [x3]
  43344c:	mov	x5, x3
  433450:	cmp	w4, #0x2f
  433454:	add	x3, x5, #0x1
  433458:	b.ne	433440 <nftw@plt+0x308c0>  // b.any
  43345c:	ldurb	w0, [x3, #-2]
  433460:	cmp	w0, #0x2a
  433464:	b.ne	433448 <nftw@plt+0x308c8>  // b.any
  433468:	str	x3, [x21]
  43346c:	mov	w23, #0x0                   	// #0
  433470:	ldr	x0, [x19, #1328]
  433474:	ldrb	w1, [x19, #16]
  433478:	cbnz	w1, 4334d0 <nftw@plt+0x30950>
  43347c:	ldrb	w1, [x19, #1123]
  433480:	cbz	w1, 4334dc <nftw@plt+0x3095c>
  433484:	sub	x0, x0, #0x1
  433488:	str	x0, [x19, #1328]
  43348c:	ldr	x0, [x21]
  433490:	ldp	x19, x20, [sp, #16]
  433494:	ldp	x21, x22, [sp, #32]
  433498:	ldr	x23, [sp, #48]
  43349c:	ldp	x29, x30, [sp], #80
  4334a0:	ret
  4334a4:	str	x5, [x21]
  4334a8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4334ac:	mov	x0, x19
  4334b0:	add	x4, x4, #0x4c8
  4334b4:	mov	w23, #0x1                   	// #1
  4334b8:	mov	w3, #0x0                   	// #0
  4334bc:	mov	w1, #0x3                   	// #3
  4334c0:	bl	41f458 <nftw@plt+0x1c8d8>
  4334c4:	ldrb	w1, [x19, #16]
  4334c8:	ldr	x0, [x19, #1328]
  4334cc:	cbz	w1, 43347c <nftw@plt+0x308fc>
  4334d0:	cbz	w22, 433538 <nftw@plt+0x309b8>
  4334d4:	ldrb	w1, [x19, #1124]
  4334d8:	cbnz	w1, 433484 <nftw@plt+0x30904>
  4334dc:	ldr	x2, [x21]
  4334e0:	mov	x1, x20
  4334e4:	sub	x20, x2, x20
  4334e8:	mov	x2, x20
  4334ec:	bl	402490 <memcpy@plt>
  4334f0:	ldr	x1, [x19, #1328]
  4334f4:	add	x0, x1, x20
  4334f8:	cbz	w23, 433558 <nftw@plt+0x309d8>
  4334fc:	add	x0, x0, #0x1
  433500:	str	x0, [x19, #1328]
  433504:	mov	w0, #0x2a                  	// #42
  433508:	strb	w0, [x1, x20]
  43350c:	mov	w1, #0x2f                  	// #47
  433510:	ldr	x0, [x19, #1328]
  433514:	add	x2, x0, #0x1
  433518:	str	x2, [x19, #1328]
  43351c:	strb	w1, [x0]
  433520:	ldr	x0, [x21]
  433524:	ldp	x19, x20, [sp, #16]
  433528:	ldp	x21, x22, [sp, #32]
  43352c:	ldr	x23, [sp, #48]
  433530:	ldp	x29, x30, [sp], #80
  433534:	ret
  433538:	mov	w1, #0x20                  	// #32
  43353c:	sturb	w1, [x0, #-1]
  433540:	ldr	x0, [x21]
  433544:	ldp	x19, x20, [sp, #16]
  433548:	ldp	x21, x22, [sp, #32]
  43354c:	ldr	x23, [sp, #48]
  433550:	ldp	x29, x30, [sp], #80
  433554:	ret
  433558:	str	x0, [x19, #1328]
  43355c:	ldr	x0, [x21]
  433560:	ldp	x19, x20, [sp, #16]
  433564:	ldp	x21, x22, [sp, #32]
  433568:	ldr	x23, [sp, #48]
  43356c:	ldp	x29, x30, [sp], #80
  433570:	ret
  433574:	str	w2, [sp, #76]
  433578:	bl	426c80 <nftw@plt+0x24100>
  43357c:	ldr	w2, [sp, #76]
  433580:	ands	w23, w0, #0xff
  433584:	b.eq	4334c4 <nftw@plt+0x30944>  // b.none
  433588:	b	4334a8 <nftw@plt+0x30928>
  43358c:	nop
  433590:	stp	x29, x30, [sp, #-48]!
  433594:	mov	x29, sp
  433598:	stp	x19, x20, [sp, #16]
  43359c:	mov	x19, x0
  4335a0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4335a4:	mov	x0, x1
  4335a8:	add	x20, x20, #0x248
  4335ac:	ldr	x5, [x19, #1328]
  4335b0:	str	x21, [sp, #32]
  4335b4:	mov	w21, w2
  4335b8:	mov	x1, x0
  4335bc:	mov	x4, x5
  4335c0:	ldrb	w2, [x1], #1
  4335c4:	strb	w2, [x4], #1
  4335c8:	mov	x3, x2
  4335cc:	ldrh	w2, [x20, x2, lsl #1]
  4335d0:	tbnz	w2, #11, 433600 <nftw@plt+0x30a80>
  4335d4:	cmp	w3, #0x2f
  4335d8:	b.ne	4335ec <nftw@plt+0x30a6c>  // b.any
  4335dc:	ldrb	w2, [x0, #1]
  4335e0:	cmp	w2, #0x2a
  4335e4:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  4335e8:	b.ne	43360c <nftw@plt+0x30a8c>  // b.any
  4335ec:	ldr	x21, [sp, #32]
  4335f0:	str	x5, [x19, #1328]
  4335f4:	ldp	x19, x20, [sp, #16]
  4335f8:	ldp	x29, x30, [sp], #48
  4335fc:	ret
  433600:	mov	x5, x4
  433604:	mov	x0, x1
  433608:	b	4335b8 <nftw@plt+0x30a38>
  43360c:	str	x4, [x19, #1328]
  433610:	mov	x0, x19
  433614:	mov	w2, #0x0                   	// #0
  433618:	bl	4333e0 <nftw@plt+0x30860>
  43361c:	ldr	x5, [x19, #1328]
  433620:	b	4335b8 <nftw@plt+0x30a38>
  433624:	nop
  433628:	stp	x29, x30, [sp, #-64]!
  43362c:	mov	x29, sp
  433630:	stp	x21, x22, [sp, #32]
  433634:	ldr	x21, [x0, #1328]
  433638:	str	x23, [sp, #48]
  43363c:	mov	w23, w2
  433640:	ldrh	w2, [x1, #16]
  433644:	stp	x19, x20, [sp, #16]
  433648:	mov	x20, x1
  43364c:	mov	x19, x0
  433650:	ldr	x1, [x0, #1312]
  433654:	sub	x21, x21, x1
  433658:	cbz	w2, 4336f4 <nftw@plt+0x30b74>
  43365c:	ldr	x5, [x0, #56]
  433660:	add	x22, x21, #0xd
  433664:	ldr	w4, [x20, #12]
  433668:	and	x22, x22, #0xfffffffffffffff8
  43366c:	ldp	x3, x5, [x5, #16]
  433670:	add	x2, x4, x22
  433674:	sub	x5, x5, x3
  433678:	cmp	x2, x5
  43367c:	b.hi	4336d8 <nftw@plt+0x30b58>  // b.pmore
  433680:	add	x5, x3, x4
  433684:	str	x3, [x20, #24]
  433688:	str	w21, [x3, x4]
  43368c:	add	x0, x5, #0x6
  433690:	mov	x2, x21
  433694:	strh	w23, [x5, #4]
  433698:	bl	402490 <memcpy@plt>
  43369c:	ldr	w0, [x20, #12]
  4336a0:	ldr	x1, [x19, #1312]
  4336a4:	str	x1, [x19, #1328]
  4336a8:	add	w22, w0, w22
  4336ac:	str	w22, [x20, #12]
  4336b0:	cbnz	w23, 4336c4 <nftw@plt+0x30b44>
  4336b4:	ldr	x0, [x19, #56]
  4336b8:	ldr	x1, [x0, #16]
  4336bc:	add	x22, x1, w22, uxtw
  4336c0:	str	x22, [x0, #16]
  4336c4:	ldp	x19, x20, [sp, #16]
  4336c8:	ldp	x21, x22, [sp, #32]
  4336cc:	ldr	x23, [sp, #48]
  4336d0:	ldp	x29, x30, [sp], #64
  4336d4:	ret
  4336d8:	add	x1, x0, #0x38
  4336dc:	bl	427e18 <nftw@plt+0x25298>
  4336e0:	ldr	x0, [x19, #56]
  4336e4:	ldr	w4, [x20, #12]
  4336e8:	ldr	x1, [x19, #1312]
  4336ec:	ldr	x3, [x0, #16]
  4336f0:	b	433680 <nftw@plt+0x30b00>
  4336f4:	add	x1, x21, #0x1
  4336f8:	bl	427ea8 <nftw@plt+0x25328>
  4336fc:	ldr	x1, [x19, #1312]
  433700:	mov	x19, x0
  433704:	mov	x2, x21
  433708:	bl	402490 <memcpy@plt>
  43370c:	mov	w0, #0xa                   	// #10
  433710:	strb	w0, [x19, x21]
  433714:	str	w21, [x20, #12]
  433718:	str	x19, [x20, #24]
  43371c:	ldp	x19, x20, [sp, #16]
  433720:	ldp	x21, x22, [sp, #32]
  433724:	ldr	x23, [sp, #48]
  433728:	ldp	x29, x30, [sp], #64
  43372c:	ret
  433730:	stp	x29, x30, [sp, #-48]!
  433734:	add	x1, x1, #0x3
  433738:	mov	x29, sp
  43373c:	stp	x19, x20, [sp, #16]
  433740:	mov	x20, x0
  433744:	ldr	x0, [x0, #1320]
  433748:	ldr	x2, [x20, #1328]
  43374c:	sub	x0, x0, x2
  433750:	cmp	x0, x1
  433754:	b.cc	433764 <nftw@plt+0x30be4>  // b.lo, b.ul, b.last
  433758:	ldp	x19, x20, [sp, #16]
  43375c:	ldp	x29, x30, [sp], #48
  433760:	ret
  433764:	ldr	x0, [x20, #1312]
  433768:	str	x21, [sp, #32]
  43376c:	sub	x21, x2, x0
  433770:	add	x1, x1, x21
  433774:	add	x1, x1, x1, lsl #1
  433778:	lsr	x19, x1, #1
  43377c:	mov	x1, x19
  433780:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  433784:	add	x19, x0, x19
  433788:	str	x0, [x20, #1312]
  43378c:	add	x0, x0, x21
  433790:	str	x19, [x20, #1320]
  433794:	ldr	x21, [sp, #32]
  433798:	str	x0, [x20, #1328]
  43379c:	ldp	x19, x20, [sp, #16]
  4337a0:	ldp	x29, x30, [sp], #48
  4337a4:	ret
  4337a8:	stp	x29, x30, [sp, #-48]!
  4337ac:	mov	x29, sp
  4337b0:	ldrb	w2, [x1, #18]
  4337b4:	stp	x19, x20, [sp, #16]
  4337b8:	mov	x19, x1
  4337bc:	and	w2, w2, #0x3
  4337c0:	stp	x21, x22, [sp, #32]
  4337c4:	mov	x20, x0
  4337c8:	cmp	w2, #0x3
  4337cc:	b.eq	433808 <nftw@plt+0x30c88>  // b.none
  4337d0:	ldr	x1, [x1, #24]
  4337d4:	mov	x0, x20
  4337d8:	ldrb	w4, [x1, #19]
  4337dc:	ldr	x22, [x1, #24]
  4337e0:	orr	w4, w4, #0x20
  4337e4:	ldr	w21, [x1, #12]
  4337e8:	strb	w4, [x1, #19]
  4337ec:	mov	x2, x22
  4337f0:	mov	x3, x21
  4337f4:	mov	x1, x19
  4337f8:	ldp	x19, x20, [sp, #16]
  4337fc:	ldp	x21, x22, [sp, #32]
  433800:	ldp	x29, x30, [sp], #48
  433804:	b	42e388 <nftw@plt+0x2b808>
  433808:	mov	w2, #0x0                   	// #0
  43380c:	bl	42db08 <nftw@plt+0x2af88>
  433810:	mov	x22, x0
  433814:	bl	4024f0 <strlen@plt>
  433818:	mov	x21, x0
  43381c:	add	x1, x21, #0x1
  433820:	mov	x0, x20
  433824:	bl	427ea8 <nftw@plt+0x25328>
  433828:	mov	x1, x22
  43382c:	mov	x22, x0
  433830:	mov	x2, x21
  433834:	bl	402490 <memcpy@plt>
  433838:	mov	w0, #0xa                   	// #10
  43383c:	mov	x3, x21
  433840:	strb	w0, [x22, x21]
  433844:	mov	x2, x22
  433848:	mov	x1, x19
  43384c:	mov	x0, x20
  433850:	ldp	x19, x20, [sp, #16]
  433854:	ldp	x21, x22, [sp, #32]
  433858:	ldp	x29, x30, [sp], #48
  43385c:	b	42e388 <nftw@plt+0x2b808>
  433860:	stp	x29, x30, [sp, #-32]!
  433864:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x205a0>
  433868:	mov	x4, x1
  43386c:	mov	x29, sp
  433870:	stp	x19, x20, [sp, #16]
  433874:	add	x3, x3, #0x248
  433878:	mov	x20, x0
  43387c:	ldrb	w2, [x1]
  433880:	mov	w5, #0x204                 	// #516
  433884:	ldr	x19, [x0, #1328]
  433888:	strb	w2, [x19], #1
  43388c:	ldrb	w2, [x4, #1]!
  433890:	ldrh	w1, [x3, w2, sxtw #1]
  433894:	tst	w5, w1
  433898:	b.ne	433888 <nftw@plt+0x30d08>  // b.any
  43389c:	ldr	x2, [x20, #136]
  4338a0:	mov	w3, #0x1                   	// #1
  4338a4:	ldr	x0, [x20, #1088]
  4338a8:	ldr	x1, [x20, #1328]
  4338ac:	str	x4, [x2, #16]
  4338b0:	sub	x2, x19, x1
  4338b4:	bl	432e18 <nftw@plt+0x30298>
  4338b8:	str	x19, [x20, #1328]
  4338bc:	ldp	x19, x20, [sp, #16]
  4338c0:	ldp	x29, x30, [sp], #32
  4338c4:	ret
  4338c8:	ldrh	w2, [x1, #18]
  4338cc:	tbz	w2, #6, 433918 <nftw@plt+0x30d98>
  4338d0:	ldrb	w2, [x1, #18]
  4338d4:	and	w2, w2, #0x3
  4338d8:	cmp	w2, #0x3
  4338dc:	b.eq	433948 <nftw@plt+0x30dc8>  // b.none
  4338e0:	ldr	x2, [x1, #24]
  4338e4:	ldrb	w2, [x2, #19]
  4338e8:	ubfx	x2, x2, #2, #1
  4338ec:	cbz	w2, 433920 <nftw@plt+0x30da0>
  4338f0:	mov	x3, #0x1                   	// #1
  4338f4:	ldr	x2, [x0, #136]
  4338f8:	b	43390c <nftw@plt+0x30d8c>
  4338fc:	ldr	x4, [x2, #40]
  433900:	cmp	x4, x1
  433904:	ccmp	x3, #0x14, #0x0, eq  // eq = none
  433908:	b.hi	433920 <nftw@plt+0x30da0>  // b.pmore
  43390c:	ldr	x2, [x2, #8]
  433910:	add	x3, x3, #0x1
  433914:	cbnz	x2, 4338fc <nftw@plt+0x30d7c>
  433918:	mov	w0, #0x0                   	// #0
  43391c:	ret
  433920:	stp	x29, x30, [sp, #-16]!
  433924:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433928:	add	x2, x2, #0xe00
  43392c:	mov	x29, sp
  433930:	ldr	x3, [x1]
  433934:	mov	w1, #0x3                   	// #3
  433938:	bl	41f298 <nftw@plt+0x1c718>
  43393c:	mov	w0, #0x1                   	// #1
  433940:	ldp	x29, x30, [sp], #16
  433944:	ret
  433948:	ldr	w2, [x1, #24]
  43394c:	cmp	w2, #0xa
  433950:	cset	w2, eq  // eq = none
  433954:	b	4338ec <nftw@plt+0x30d6c>
  433958:	ldr	x3, [x0]
  43395c:	add	x2, x1, x2
  433960:	ldr	x4, [x3]
  433964:	ldr	x5, [x3, #32]
  433968:	str	x4, [x0, #1344]
  43396c:	ldr	x4, [x3, #16]
  433970:	str	x3, [x0, #8]
  433974:	str	x5, [x0, #1352]
  433978:	str	x4, [x0, #1360]
  43397c:	stp	x1, x1, [x3]
  433980:	str	x2, [x3, #32]
  433984:	strb	wzr, [x3, #104]
  433988:	ret
  43398c:	nop
  433990:	ldr	x1, [x0, #8]
  433994:	mov	w2, #0x1                   	// #1
  433998:	ldr	x4, [x0, #1344]
  43399c:	ldr	x3, [x0, #1352]
  4339a0:	str	x4, [x1]
  4339a4:	ldr	x4, [x0, #1360]
  4339a8:	str	x4, [x1, #8]
  4339ac:	str	x3, [x1, #32]
  4339b0:	strb	w2, [x1, #104]
  4339b4:	str	xzr, [x0, #8]
  4339b8:	ret
  4339bc:	nop
  4339c0:	stp	x29, x30, [sp, #-272]!
  4339c4:	mov	x29, sp
  4339c8:	stp	x19, x20, [sp, #16]
  4339cc:	stp	x21, x22, [sp, #32]
  4339d0:	stp	x23, x24, [sp, #48]
  4339d4:	stp	x25, x26, [sp, #64]
  4339d8:	stp	x27, x28, [sp, #80]
  4339dc:	mov	x27, x0
  4339e0:	ldrb	w3, [x0, #19]
  4339e4:	ldr	x0, [x0]
  4339e8:	str	x1, [sp, #128]
  4339ec:	ldr	x24, [x27, #136]
  4339f0:	cmp	w3, #0x0
  4339f4:	ldr	x1, [x0]
  4339f8:	str	x1, [sp, #104]
  4339fc:	str	x1, [x24, #16]
  433a00:	cset	w21, ne  // ne = any
  433a04:	ldr	x1, [x0, #32]
  433a08:	str	x1, [x24, #24]
  433a0c:	ands	w22, w2, #0xff
  433a10:	b.ne	433a28 <nftw@plt+0x30ea8>  // b.any
  433a14:	ldr	x0, [x27, #40]
  433a18:	ldr	x2, [x27, #1312]
  433a1c:	ldr	w0, [x0, #60]
  433a20:	str	x2, [x27, #1328]
  433a24:	str	w0, [x27, #1336]
  433a28:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  433a2c:	add	x0, x0, #0x248
  433a30:	mov	w23, #0x0                   	// #0
  433a34:	str	x0, [sp, #168]
  433a38:	mov	w0, w22
  433a3c:	adrp	x19, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433a40:	ldr	x25, [sp, #104]
  433a44:	mov	w22, w23
  433a48:	add	x19, x19, #0xe58
  433a4c:	mov	w23, w21
  433a50:	mov	w21, w0
  433a54:	mov	w26, #0x0                   	// #0
  433a58:	str	wzr, [sp, #100]
  433a5c:	str	xzr, [sp, #112]
  433a60:	str	xzr, [sp, #136]
  433a64:	stp	wzr, wzr, [sp, #144]
  433a68:	stp	xzr, xzr, [sp, #152]
  433a6c:	str	wzr, [sp, #176]
  433a70:	sub	x1, x1, x25
  433a74:	mov	x0, x27
  433a78:	bl	433730 <nftw@plt+0x30bb0>
  433a7c:	ldr	x3, [x27, #1328]
  433a80:	mov	w4, w22
  433a84:	mov	w22, w21
  433a88:	mov	x21, x3
  433a8c:	nop
  433a90:	ldr	x0, [x24, #8]
  433a94:	cmp	x0, #0x0
  433a98:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  433a9c:	b.eq	433b34 <nftw@plt+0x30fb4>  // b.none
  433aa0:	mov	x20, x25
  433aa4:	mov	x28, x21
  433aa8:	ldrb	w1, [x20], #1
  433aac:	strb	w1, [x28], #1
  433ab0:	cmp	w1, #0x7a
  433ab4:	b.hi	433ae0 <nftw@plt+0x30f60>  // b.pmore
  433ab8:	ldrh	w0, [x19, w1, uxtw #1]
  433abc:	adr	x2, 433ac8 <nftw@plt+0x30f48>
  433ac0:	add	x0, x2, w0, sxth #2
  433ac4:	br	x0
  433ac8:	ldrb	w0, [x27, #18]
  433acc:	cbnz	w0, 433ae0 <nftw@plt+0x30f60>
  433ad0:	ldr	x0, [sp, #128]
  433ad4:	cmp	w4, #0x0
  433ad8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  433adc:	b.ne	433f4c <nftw@plt+0x313cc>  // b.any
  433ae0:	ldrb	w0, [x27, #16]
  433ae4:	cbnz	w0, 433b90 <nftw@plt+0x31010>
  433ae8:	mov	x21, x28
  433aec:	mov	x25, x20
  433af0:	strb	wzr, [x27, #440]
  433af4:	cmp	w26, #0x1
  433af8:	b.ls	433b1c <nftw@plt+0x30f9c>  // b.plast
  433afc:	cmp	w26, #0x8
  433b00:	sub	w0, w26, #0x5
  433b04:	ccmp	w26, #0x3, #0x4, ne  // ne = any
  433b08:	cset	w23, eq  // eq = none
  433b0c:	cmp	w0, #0x1
  433b10:	cset	w0, ls  // ls = plast
  433b14:	orr	w23, w23, w0
  433b18:	cbz	w23, 433a90 <nftw@plt+0x30f10>
  433b1c:	ldr	x0, [x24, #8]
  433b20:	mov	w23, #0x0                   	// #0
  433b24:	mov	w26, #0x0                   	// #0
  433b28:	cmp	x0, #0x0
  433b2c:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  433b30:	b.ne	433aa0 <nftw@plt+0x30f20>  // b.any
  433b34:	ldr	x1, [x27]
  433b38:	ldr	w0, [x1, #56]
  433b3c:	ldr	x2, [x1, #48]
  433b40:	lsl	x0, x0, #4
  433b44:	ldr	x0, [x2, x0]
  433b48:	cmp	x0, x25
  433b4c:	b.hi	433aa0 <nftw@plt+0x30f20>  // b.pmore
  433b50:	str	x25, [x1]
  433b54:	mov	x0, x27
  433b58:	mov	w1, #0x0                   	// #0
  433b5c:	str	w4, [sp, #120]
  433b60:	bl	4269f0 <nftw@plt+0x23e70>
  433b64:	ldr	w4, [sp, #120]
  433b68:	b	433aa0 <nftw@plt+0x30f20>
  433b6c:	mov	x21, x28
  433b70:	mov	x25, x20
  433b74:	b	433a90 <nftw@plt+0x30f10>
  433b78:	cmp	w4, w1
  433b7c:	b.eq	433e00 <nftw@plt+0x31280>  // b.none
  433b80:	ldrb	w0, [x27, #16]
  433b84:	cmp	w4, #0x0
  433b88:	csel	w4, w4, w1, ne  // ne = any
  433b8c:	cbz	w0, 433ae8 <nftw@plt+0x30f68>
  433b90:	mov	x21, x28
  433b94:	mov	x25, x20
  433b98:	b	433af4 <nftw@plt+0x30f74>
  433b9c:	ldr	x0, [x24, #8]
  433ba0:	cbnz	x0, 4344fc <nftw@plt+0x3197c>
  433ba4:	ldr	x2, [x27]
  433ba8:	str	x21, [x27, #1328]
  433bac:	str	w4, [sp, #120]
  433bb0:	str	x20, [x2]
  433bb4:	cbnz	w22, 433dc0 <nftw@plt+0x31240>
  433bb8:	ldr	x0, [x27, #40]
  433bbc:	mov	w1, #0x1                   	// #1
  433bc0:	strb	w1, [x2, #104]
  433bc4:	mov	w5, #0x18                  	// #24
  433bc8:	mov	w2, #0x0                   	// #0
  433bcc:	ldr	w1, [x0, #12]
  433bd0:	ldr	x6, [x0]
  433bd4:	sub	w1, w1, #0x1
  433bd8:	ldr	w3, [x0, #60]
  433bdc:	smull	x1, w1, w5
  433be0:	add	x5, x6, x1
  433be4:	ldr	w1, [x6, x1]
  433be8:	ldrb	w6, [x5, #6]
  433bec:	ldr	w5, [x5, #16]
  433bf0:	sub	w1, w3, w1
  433bf4:	add	w5, w5, #0x1
  433bf8:	lsr	w1, w1, w6
  433bfc:	add	w1, w1, w5
  433c00:	bl	42b4f0 <nftw@plt+0x28970>
  433c04:	sub	w0, w26, #0x1
  433c08:	cmp	w0, #0x1
  433c0c:	b.hi	433dc0 <nftw@plt+0x31240>  // b.pmore
  433c10:	ldrb	w0, [x27, #16]
  433c14:	cbnz	w0, 433dc0 <nftw@plt+0x31240>
  433c18:	mov	x0, x27
  433c1c:	bl	427158 <nftw@plt+0x245d8>
  433c20:	tst	w0, #0xff
  433c24:	b.eq	433dc0 <nftw@plt+0x31240>  // b.none
  433c28:	ldr	w4, [sp, #120]
  433c2c:	cmp	w26, #0x2
  433c30:	b.ne	433c3c <nftw@plt+0x310bc>  // b.any
  433c34:	mov	w0, #0x20                  	// #32
  433c38:	strb	w0, [x21]
  433c3c:	ldr	x0, [x27]
  433c40:	mov	x21, x28
  433c44:	ldr	x25, [x0]
  433c48:	b	433a90 <nftw@plt+0x30f10>
  433c4c:	cbnz	w4, 433ae0 <nftw@plt+0x30f60>
  433c50:	ldr	w0, [sp, #100]
  433c54:	cmp	w26, #0x1
  433c58:	add	w0, w0, #0x1
  433c5c:	str	w0, [sp, #100]
  433c60:	b.eq	434054 <nftw@plt+0x314d4>  // b.none
  433c64:	cmp	w26, #0x6
  433c68:	b.eq	433f18 <nftw@plt+0x31398>  // b.none
  433c6c:	cmp	w26, #0x3
  433c70:	b.eq	434084 <nftw@plt+0x31504>  // b.none
  433c74:	cmp	w26, #0x8
  433c78:	b.ne	433ae0 <nftw@plt+0x30f60>  // b.any
  433c7c:	ldrb	w0, [x27, #16]
  433c80:	mov	w26, #0x9                   	// #9
  433c84:	cbnz	w0, 433d28 <nftw@plt+0x311a8>
  433c88:	mov	w4, #0x0                   	// #0
  433c8c:	b	433ae8 <nftw@plt+0x30f68>
  433c90:	ldr	x0, [sp, #104]
  433c94:	cmp	x0, x25
  433c98:	b.eq	433e08 <nftw@plt+0x31288>  // b.none
  433c9c:	ldrb	w0, [x27, #20]
  433ca0:	cbz	w0, 433ae0 <nftw@plt+0x30f60>
  433ca4:	mov	x21, x28
  433ca8:	mov	x25, x20
  433cac:	mov	w26, #0x5                   	// #5
  433cb0:	b	433a90 <nftw@plt+0x30f10>
  433cb4:	cmp	w23, #0x0
  433cb8:	mov	w0, #0x3e                  	// #62
  433cbc:	csel	w4, w4, w0, eq  // eq = none
  433cc0:	b	433ae0 <nftw@plt+0x30f60>
  433cc4:	cbnz	w4, 433ae0 <nftw@plt+0x30f60>
  433cc8:	ldrb	w0, [x25, #1]
  433ccc:	cmp	w0, #0x2a
  433cd0:	b.ne	433ae0 <nftw@plt+0x30f60>  // b.any
  433cd4:	ldr	x0, [sp, #128]
  433cd8:	str	x28, [x27, #1328]
  433cdc:	mov	x1, x20
  433ce0:	str	w4, [sp, #120]
  433ce4:	cmp	x0, #0x0
  433ce8:	mov	x0, x27
  433cec:	cset	w2, ne  // ne = any
  433cf0:	bl	4333e0 <nftw@plt+0x30860>
  433cf4:	mov	x25, x0
  433cf8:	ldr	w4, [sp, #120]
  433cfc:	ldr	x21, [x27, #1328]
  433d00:	b	433a90 <nftw@plt+0x30f10>
  433d04:	cmp	w4, #0x0
  433d08:	ccmp	w26, #0x2, #0x0, eq  // eq = none
  433d0c:	b.ne	433ae0 <nftw@plt+0x30f60>  // b.any
  433d10:	ldr	w0, [sp, #100]
  433d14:	mov	w26, #0x2                   	// #2
  433d18:	cmp	w0, #0x1
  433d1c:	b.eq	433f20 <nftw@plt+0x313a0>  // b.none
  433d20:	ldrb	w0, [x27, #16]
  433d24:	cbz	w0, 433c88 <nftw@plt+0x31108>
  433d28:	mov	x21, x28
  433d2c:	mov	x25, x20
  433d30:	mov	w23, #0x0                   	// #0
  433d34:	mov	w4, #0x0                   	// #0
  433d38:	b	433a90 <nftw@plt+0x30f10>
  433d3c:	cbnz	w4, 433ae0 <nftw@plt+0x30f60>
  433d40:	ldr	w0, [sp, #100]
  433d44:	subs	w0, w0, #0x1
  433d48:	str	w0, [sp, #100]
  433d4c:	ccmp	w26, #0x2, #0x0, eq  // eq = none
  433d50:	b.eq	433e98 <nftw@plt+0x31318>  // b.none
  433d54:	sub	w0, w26, #0x7
  433d58:	tst	w0, #0xfffffffd
  433d5c:	ccmp	w26, #0x4, #0x4, ne  // ne = any
  433d60:	b.ne	433ae0 <nftw@plt+0x30f60>  // b.any
  433d64:	ldrb	w0, [x27, #16]
  433d68:	mov	x21, x28
  433d6c:	mov	x25, x20
  433d70:	mov	w23, #0x0                   	// #0
  433d74:	mov	w26, #0x0                   	// #0
  433d78:	mov	w4, #0x0                   	// #0
  433d7c:	cbnz	w0, 433a90 <nftw@plt+0x30f10>
  433d80:	strb	wzr, [x27, #440]
  433d84:	b	433a90 <nftw@plt+0x30f10>
  433d88:	cmp	w4, #0x3e
  433d8c:	csel	w4, w4, wzr, ne  // ne = any
  433d90:	b	433ae0 <nftw@plt+0x30f60>
  433d94:	ldrb	w0, [x25, #1]
  433d98:	mov	w2, #0x22                  	// #34
  433d9c:	mov	w1, #0x27                  	// #39
  433da0:	cmp	w0, #0x5c
  433da4:	ccmp	w0, w2, #0x4, ne  // ne = any
  433da8:	ccmp	w0, w1, #0x4, ne  // ne = any
  433dac:	b.ne	433ae0 <nftw@plt+0x30f60>  // b.any
  433db0:	add	x20, x25, #0x2
  433db4:	add	x28, x21, #0x2
  433db8:	strb	w0, [x21, #1]
  433dbc:	b	433ae0 <nftw@plt+0x30f60>
  433dc0:	mov	w19, #0x1                   	// #1
  433dc4:	ldr	x0, [sp, #136]
  433dc8:	cbz	x0, 433dd8 <nftw@plt+0x31258>
  433dcc:	mov	x1, x0
  433dd0:	mov	x0, x27
  433dd4:	bl	427c38 <nftw@plt+0x250b8>
  433dd8:	cmp	w26, #0x2
  433ddc:	b.eq	433fd8 <nftw@plt+0x31458>  // b.none
  433de0:	mov	w0, w19
  433de4:	ldp	x19, x20, [sp, #16]
  433de8:	ldp	x21, x22, [sp, #32]
  433dec:	ldp	x23, x24, [sp, #48]
  433df0:	ldp	x25, x26, [sp, #64]
  433df4:	ldp	x27, x28, [sp, #80]
  433df8:	ldp	x29, x30, [sp], #272
  433dfc:	ret
  433e00:	mov	w4, #0x0                   	// #0
  433e04:	b	433ae0 <nftw@plt+0x30f60>
  433e08:	ldr	x0, [x27, #136]
  433e0c:	ldr	x0, [x0, #8]
  433e10:	cbnz	x0, 433c9c <nftw@plt+0x3111c>
  433e14:	ldrb	w0, [x27, #16]
  433e18:	cbnz	w0, 433c9c <nftw@plt+0x3111c>
  433e1c:	str	x28, [x27, #1328]
  433e20:	mov	x1, x20
  433e24:	mov	x0, x27
  433e28:	mov	w2, #0x1                   	// #1
  433e2c:	str	w4, [sp, #120]
  433e30:	bl	433590 <nftw@plt+0x30a10>
  433e34:	mov	x20, x0
  433e38:	ldrb	w0, [x0]
  433e3c:	ldr	w4, [sp, #120]
  433e40:	cmp	w0, #0xa
  433e44:	ldr	x28, [x27, #1328]
  433e48:	b.eq	43462c <nftw@plt+0x31aac>  // b.none
  433e4c:	ldr	x1, [sp, #168]
  433e50:	ldrh	w1, [x1, w0, sxtw #1]
  433e54:	tbz	w1, #2, 433e64 <nftw@plt+0x312e4>
  433e58:	ldr	w2, [x27, #1116]
  433e5c:	cmp	w2, #0x15
  433e60:	b.ne	433e7c <nftw@plt+0x312fc>  // b.any
  433e64:	tbnz	w1, #9, 434348 <nftw@plt+0x317c8>
  433e68:	cmp	w0, #0x24
  433e6c:	b.eq	434340 <nftw@plt+0x317c0>  // b.none
  433e70:	ldr	w0, [x27, #1116]
  433e74:	cmp	w0, #0x15
  433e78:	b.eq	433c9c <nftw@plt+0x3111c>  // b.none
  433e7c:	ldr	x2, [x27]
  433e80:	mov	x0, x27
  433e84:	mov	w1, #0x0                   	// #0
  433e88:	mov	w19, #0x0                   	// #0
  433e8c:	str	x20, [x2]
  433e90:	bl	41d690 <nftw@plt+0x1ab10>
  433e94:	b	433dc4 <nftw@plt+0x31244>
  433e98:	ldr	x0, [sp, #112]
  433e9c:	ldr	w1, [sp, #144]
  433ea0:	ldr	x2, [x27, #1312]
  433ea4:	add	w1, w1, #0x1
  433ea8:	ldrb	w0, [x0, #18]
  433eac:	str	w1, [sp, #144]
  433eb0:	sub	x3, x28, x2
  433eb4:	and	w0, w0, #0x3
  433eb8:	cmp	w0, #0x3
  433ebc:	b.eq	43408c <nftw@plt+0x3150c>  // b.none
  433ec0:	ldr	x0, [sp, #112]
  433ec4:	ldr	w5, [sp, #144]
  433ec8:	ldr	x1, [x0, #24]
  433ecc:	ldr	w0, [sp, #148]
  433ed0:	cmp	w5, w0
  433ed4:	ldrb	w0, [x1, #19]
  433ed8:	orr	w0, w0, #0x20
  433edc:	strb	w0, [x1, #19]
  433ee0:	b.ls	43401c <nftw@plt+0x3149c>  // b.plast
  433ee4:	ldr	w0, [sp, #144]
  433ee8:	cmp	w0, #0x1
  433eec:	b.eq	434030 <nftw@plt+0x314b0>  // b.none
  433ef0:	ldr	w3, [sp, #144]
  433ef4:	mov	x0, x27
  433ef8:	ldr	x2, [sp, #112]
  433efc:	str	w4, [sp, #100]
  433f00:	bl	42e010 <nftw@plt+0x2b490>
  433f04:	tst	w0, #0xff
  433f08:	ldr	w4, [sp, #100]
  433f0c:	b.ne	434368 <nftw@plt+0x317e8>  // b.any
  433f10:	str	wzr, [sp, #100]
  433f14:	b	433d64 <nftw@plt+0x311e4>
  433f18:	mov	w26, #0x7                   	// #7
  433f1c:	b	433d20 <nftw@plt+0x311a0>
  433f20:	ldr	w0, [sp, #144]
  433f24:	add	w1, w0, #0x1
  433f28:	ldr	w0, [sp, #148]
  433f2c:	str	w1, [sp, #144]
  433f30:	cmp	w1, w0
  433f34:	b.hi	433d20 <nftw@plt+0x311a0>  // b.pmore
  433f38:	ldr	x2, [sp, #152]
  433f3c:	ldr	x0, [x27, #1312]
  433f40:	sub	x0, x28, x0
  433f44:	str	x0, [x2, w1, uxtw #3]
  433f48:	b	433d20 <nftw@plt+0x311a0>
  433f4c:	str	x21, [x27, #1328]
  433f50:	mov	x1, x25
  433f54:	mov	x0, x27
  433f58:	str	w4, [sp, #120]
  433f5c:	bl	433860 <nftw@plt+0x30ce0>
  433f60:	mov	x25, x0
  433f64:	ldrb	w0, [x0, #18]
  433f68:	ldr	w4, [sp, #120]
  433f6c:	ldr	x20, [x24, #16]
  433f70:	tst	x0, #0x2
  433f74:	ccmp	w26, #0x1, #0x2, ne  // ne = any
  433f78:	ldr	x28, [x27, #1328]
  433f7c:	b.ls	4342a4 <nftw@plt+0x31724>  // b.plast
  433f80:	ldr	x1, [sp, #128]
  433f84:	cbz	x1, 433f94 <nftw@plt+0x31414>
  433f88:	and	w0, w0, #0x3
  433f8c:	cmp	w0, #0x1
  433f90:	b.eq	43431c <nftw@plt+0x3179c>  // b.none
  433f94:	cmp	w26, #0x5
  433f98:	b.eq	4342f8 <nftw@plt+0x31778>  // b.none
  433f9c:	ldrb	w0, [x27, #20]
  433fa0:	cbz	w0, 433ae0 <nftw@plt+0x30f60>
  433fa4:	ldr	x0, [x27, #1248]
  433fa8:	cmp	x0, x25
  433fac:	b.eq	434534 <nftw@plt+0x319b4>  // b.none
  433fb0:	ldr	x0, [x27, #1288]
  433fb4:	cmp	x0, x25
  433fb8:	b.eq	433fc8 <nftw@plt+0x31448>  // b.none
  433fbc:	ldr	x0, [x27, #1296]
  433fc0:	cmp	x0, x25
  433fc4:	b.ne	433ae0 <nftw@plt+0x30f60>  // b.any
  433fc8:	mov	x21, x28
  433fcc:	mov	x25, x20
  433fd0:	mov	w26, #0x8                   	// #8
  433fd4:	b	433a90 <nftw@plt+0x30f10>
  433fd8:	ldr	x0, [sp, #112]
  433fdc:	mov	w3, #0x0                   	// #0
  433fe0:	ldr	w2, [sp, #176]
  433fe4:	mov	w1, #0x3                   	// #3
  433fe8:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  433fec:	add	x4, x4, #0xa18
  433ff0:	ldr	x5, [x0]
  433ff4:	mov	x0, x27
  433ff8:	bl	41f458 <nftw@plt+0x1c8d8>
  433ffc:	mov	w0, w19
  434000:	ldp	x19, x20, [sp, #16]
  434004:	ldp	x21, x22, [sp, #32]
  434008:	ldp	x23, x24, [sp, #48]
  43400c:	ldp	x25, x26, [sp, #64]
  434010:	ldp	x27, x28, [sp, #80]
  434014:	ldp	x29, x30, [sp], #272
  434018:	ret
  43401c:	ldr	x0, [sp, #152]
  434020:	str	x3, [x0, w5, uxtw #3]
  434024:	ldr	w0, [sp, #144]
  434028:	cmp	w0, #0x1
  43402c:	b.ne	433ef0 <nftw@plt+0x31370>  // b.any
  434030:	ldrh	w0, [x1, #16]
  434034:	cbnz	w0, 433ef0 <nftw@plt+0x31370>
  434038:	ldr	x0, [sp, #160]
  43403c:	add	x0, x0, #0x1
  434040:	add	x2, x2, x0
  434044:	cmp	x28, x2
  434048:	cset	w0, ne  // ne = any
  43404c:	str	w0, [sp, #144]
  434050:	b	433ef0 <nftw@plt+0x31370>
  434054:	ldr	x1, [sp, #112]
  434058:	mov	x0, x27
  43405c:	bl	4338c8 <nftw@plt+0x30d48>
  434060:	tst	w0, #0xff
  434064:	b.ne	433d64 <nftw@plt+0x311e4>  // b.any
  434068:	ldp	x1, x0, [sp, #152]
  43406c:	str	w26, [sp, #100]
  434070:	ldr	x28, [x27, #1312]
  434074:	mov	w26, #0x2                   	// #2
  434078:	str	x0, [x1]
  43407c:	add	x28, x28, x0
  434080:	b	433d20 <nftw@plt+0x311a0>
  434084:	mov	w26, #0x4                   	// #4
  434088:	b	433d20 <nftw@plt+0x311a0>
  43408c:	mov	w0, w1
  434090:	ldr	w1, [sp, #148]
  434094:	cmp	w0, w1
  434098:	b.hi	4340a4 <nftw@plt+0x31524>  // b.pmore
  43409c:	ldr	x1, [sp, #152]
  4340a0:	str	x3, [x1, w0, uxtw #3]
  4340a4:	ldr	w3, [sp, #144]
  4340a8:	add	x1, sp, #0xe0
  4340ac:	str	w4, [sp, #100]
  4340b0:	mov	x0, x27
  4340b4:	ldrh	w4, [sp, #148]
  4340b8:	ldr	x2, [sp, #112]
  4340bc:	stp	xzr, xzr, [sp, #240]
  4340c0:	stp	xzr, xzr, [sp, #224]
  4340c4:	strh	w4, [sp, #240]
  4340c8:	stp	xzr, xzr, [sp, #256]
  4340cc:	bl	42e010 <nftw@plt+0x2b490>
  4340d0:	ldr	w4, [sp, #100]
  4340d4:	tst	w0, #0xff
  4340d8:	b.eq	433f10 <nftw@plt+0x31390>  // b.none
  4340dc:	mov	w21, w22
  4340e0:	mov	w22, w4
  4340e4:	ldp	x3, x4, [sp, #152]
  4340e8:	mov	x0, x27
  4340ec:	ldr	x1, [x27, #1312]
  4340f0:	mov	w25, #0xa                   	// #10
  4340f4:	mov	w26, #0x0                   	// #0
  4340f8:	ldp	x2, x28, [x3]
  4340fc:	add	x1, x1, x4
  434100:	str	x1, [x27, #1328]
  434104:	str	x20, [x24, #16]
  434108:	sub	x28, x28, x2
  43410c:	add	x1, x28, #0x2
  434110:	bl	427ea8 <nftw@plt+0x25328>
  434114:	ldr	x3, [sp, #152]
  434118:	mov	x8, x0
  43411c:	mov	w1, #0x28                  	// #40
  434120:	strb	w1, [x0], #1
  434124:	mov	x2, x28
  434128:	str	wzr, [sp, #100]
  43412c:	ldr	x1, [x3]
  434130:	str	x8, [sp, #120]
  434134:	ldr	x3, [x27, #1312]
  434138:	add	x28, x28, #0x1
  43413c:	add	x1, x3, x1
  434140:	bl	402490 <memcpy@plt>
  434144:	ldr	x8, [sp, #120]
  434148:	mov	w2, #0x1                   	// #1
  43414c:	mov	x1, #0x0                   	// #0
  434150:	mov	x0, x27
  434154:	add	x12, x8, x28
  434158:	strb	w25, [x8, x28]
  43415c:	ldp	x3, x10, [x27]
  434160:	str	x10, [sp, #216]
  434164:	ldr	x9, [x24, #24]
  434168:	ldr	x13, [x3]
  43416c:	str	x8, [x3]
  434170:	ldr	x11, [x3, #32]
  434174:	str	x12, [x3, #32]
  434178:	ldr	x12, [x3, #8]
  43417c:	str	x8, [x3, #8]
  434180:	ldrb	w8, [x3, #104]
  434184:	strb	wzr, [x3, #104]
  434188:	str	x3, [x27, #8]
  43418c:	ldrb	w3, [x27, #16]
  434190:	strb	w2, [x27, #16]
  434194:	cmp	w3, #0x0
  434198:	str	w8, [sp, #180]
  43419c:	ldr	x3, [x24, #8]
  4341a0:	str	xzr, [x24, #8]
  4341a4:	cset	w28, ne  // ne = any
  4341a8:	str	x3, [sp, #120]
  4341ac:	stp	x12, x11, [sp, #184]
  4341b0:	stp	x9, x13, [sp, #200]
  4341b4:	bl	4339c0 <nftw@plt+0x30e40>
  4341b8:	mov	x0, x27
  4341bc:	strb	w28, [x27, #16]
  4341c0:	mov	x1, #0x1                   	// #1
  4341c4:	bl	433730 <nftw@plt+0x30bb0>
  4341c8:	ldr	x0, [x27, #1328]
  4341cc:	mov	w2, #0x0                   	// #0
  4341d0:	ldr	x4, [sp, #160]
  4341d4:	strb	w25, [x0]
  4341d8:	ldr	x1, [x27]
  4341dc:	ldr	x0, [x27, #1312]
  4341e0:	ldr	x14, [x27, #1328]
  4341e4:	add	x0, x0, x4
  4341e8:	stp	x0, x0, [x1]
  4341ec:	str	x14, [x1, #32]
  4341f0:	stp	x0, x14, [x24, #16]
  4341f4:	mov	x0, x27
  4341f8:	ldrb	w14, [x27, #24]
  4341fc:	ldr	x1, [sp, #112]
  434200:	add	w14, w14, #0x1
  434204:	strb	w14, [x27, #24]
  434208:	bl	42db08 <nftw@plt+0x2af88>
  43420c:	mov	x28, x0
  434210:	ldrb	w2, [x27, #24]
  434214:	ldr	x1, [x27]
  434218:	sub	w2, w2, #0x1
  43421c:	strb	w2, [x27, #24]
  434220:	ldr	x3, [sp, #120]
  434224:	ldr	x4, [sp, #160]
  434228:	ldp	x12, x11, [sp, #184]
  43422c:	ldp	x9, x13, [sp, #200]
  434230:	ldr	x2, [x27, #1312]
  434234:	str	x3, [x24, #8]
  434238:	ldr	w8, [sp, #180]
  43423c:	stp	x13, x12, [x1]
  434240:	add	x2, x2, x4
  434244:	str	x11, [x1, #32]
  434248:	strb	w8, [x1, #104]
  43424c:	ldr	x10, [sp, #216]
  434250:	str	x10, [x27, #8]
  434254:	str	x2, [x27, #1328]
  434258:	stp	x20, x9, [x24, #16]
  43425c:	bl	4024f0 <strlen@plt>
  434260:	mov	x20, x0
  434264:	add	x1, x20, #0x1
  434268:	mov	x0, x27
  43426c:	bl	427ea8 <nftw@plt+0x25328>
  434270:	mov	x1, x28
  434274:	mov	x2, x20
  434278:	mov	x28, x0
  43427c:	bl	402490 <memcpy@plt>
  434280:	ldr	x1, [sp, #112]
  434284:	mov	x3, x20
  434288:	strb	w25, [x28, x20]
  43428c:	mov	x2, x28
  434290:	mov	x0, x27
  434294:	bl	42e388 <nftw@plt+0x2b808>
  434298:	ldr	x24, [x27, #136]
  43429c:	ldp	x25, x1, [x24, #16]
  4342a0:	b	433a70 <nftw@plt+0x30ef0>
  4342a4:	ldrb	w1, [x27, #24]
  4342a8:	cbnz	w1, 434308 <nftw@plt+0x31788>
  4342ac:	strb	wzr, [x27, #440]
  4342b0:	and	w0, w0, #0x3
  4342b4:	cmp	w0, #0x3
  4342b8:	b.eq	434544 <nftw@plt+0x319c4>  // b.none
  4342bc:	ldr	x0, [x25, #24]
  4342c0:	ldrb	w1, [x0, #19]
  4342c4:	tbnz	w1, #2, 4345c8 <nftw@plt+0x31a48>
  4342c8:	mov	x1, x25
  4342cc:	mov	x0, x27
  4342d0:	str	w4, [sp, #120]
  4342d4:	bl	4338c8 <nftw@plt+0x30d48>
  4342d8:	ldr	w4, [sp, #120]
  4342dc:	tst	w0, #0xff
  4342e0:	b.eq	434684 <nftw@plt+0x31b04>  // b.none
  4342e4:	ldrb	w0, [x27, #16]
  4342e8:	cbz	w0, 433ae8 <nftw@plt+0x30f68>
  4342ec:	mov	x21, x28
  4342f0:	mov	x25, x20
  4342f4:	b	433b1c <nftw@plt+0x30f9c>
  4342f8:	mov	x21, x28
  4342fc:	mov	x25, x20
  434300:	mov	w26, #0x6                   	// #6
  434304:	b	433a90 <nftw@plt+0x30f10>
  434308:	ldr	x1, [sp, #128]
  43430c:	cbz	x1, 433f9c <nftw@plt+0x3141c>
  434310:	and	w0, w0, #0x3
  434314:	cmp	w0, #0x1
  434318:	b.ne	433f9c <nftw@plt+0x3141c>  // b.any
  43431c:	ldrh	w2, [x25, #24]
  434320:	mov	x0, x27
  434324:	ldr	x1, [sp, #128]
  434328:	str	x21, [x27, #1328]
  43432c:	str	w4, [sp, #120]
  434330:	bl	433628 <nftw@plt+0x30aa8>
  434334:	ldr	w4, [sp, #120]
  434338:	ldr	x28, [x27, #1312]
  43433c:	b	433ae0 <nftw@plt+0x30f60>
  434340:	ldrb	w0, [x27, #1146]
  434344:	cbz	w0, 433e70 <nftw@plt+0x312f0>
  434348:	mov	x1, x20
  43434c:	mov	x0, x27
  434350:	str	w4, [sp, #120]
  434354:	bl	433860 <nftw@plt+0x30ce0>
  434358:	ldrb	w0, [x0, #16]
  43435c:	ldr	w4, [sp, #120]
  434360:	tbz	w0, #0, 433e70 <nftw@plt+0x312f0>
  434364:	b	433e7c <nftw@plt+0x312fc>
  434368:	ldr	x0, [sp, #112]
  43436c:	mov	w21, w22
  434370:	ldr	x2, [sp, #160]
  434374:	mov	w22, w4
  434378:	ldr	x25, [x0, #24]
  43437c:	ldr	x0, [x27, #1312]
  434380:	ldrh	w1, [x25, #16]
  434384:	add	x0, x0, x2
  434388:	str	x0, [x27, #1328]
  43438c:	str	x20, [x24, #16]
  434390:	cbz	w1, 43460c <nftw@plt+0x31a8c>
  434394:	ldr	x5, [x25, #24]
  434398:	ldrh	w2, [x5, #4]
  43439c:	ldr	w0, [x5]
  4343a0:	mov	x1, x0
  4343a4:	cbz	w2, 4343e4 <nftw@plt+0x31864>
  4343a8:	ldr	x4, [sp, #152]
  4343ac:	mov	w3, w2
  4343b0:	add	x0, x0, #0xd
  4343b4:	add	x2, x4, w2, uxth #3
  4343b8:	and	x0, x0, #0xfffffffffffffff8
  4343bc:	add	x5, x5, x0
  4343c0:	ldr	x3, [x4, x3, lsl #3]
  4343c4:	ldur	x6, [x2, #-8]
  4343c8:	sub	x3, x3, #0x1
  4343cc:	ldr	w0, [x5]
  4343d0:	ldrh	w2, [x5, #4]
  4343d4:	sub	x3, x3, x6
  4343d8:	add	x3, x0, x3, lsl #1
  4343dc:	add	x1, x1, x3
  4343e0:	cbnz	w2, 4343ac <nftw@plt+0x3182c>
  4343e4:	add	x1, x1, #0x1
  4343e8:	mov	x0, x27
  4343ec:	bl	427c60 <nftw@plt+0x250e0>
  4343f0:	mov	x20, x0
  4343f4:	ldr	x5, [x0, #16]
  4343f8:	mov	w8, #0x0                   	// #0
  4343fc:	ldr	x13, [x25, #24]
  434400:	mov	x3, #0x0                   	// #0
  434404:	ldr	x11, [sp, #152]
  434408:	mov	w14, #0x5c                  	// #92
  43440c:	ldr	w4, [x13]
  434410:	add	x3, x3, x4
  434414:	cbz	x4, 434444 <nftw@plt+0x318c4>
  434418:	add	x6, x13, #0x6
  43441c:	mov	x0, #0x0                   	// #0
  434420:	ldrb	w1, [x6, x0]
  434424:	eor	w2, w8, #0x1
  434428:	strb	w1, [x5, x0]
  43442c:	add	x0, x0, #0x1
  434430:	cmp	w1, #0x22
  434434:	csel	w8, w2, w8, eq  // eq = none
  434438:	cmp	x4, x0
  43443c:	b.ne	434420 <nftw@plt+0x318a0>  // b.any
  434440:	add	x5, x5, x4
  434444:	ldrh	w0, [x13, #4]
  434448:	cbz	w0, 4345dc <nftw@plt+0x31a5c>
  43444c:	mov	w1, w0
  434450:	add	x0, x11, w0, uxth #3
  434454:	ldr	x6, [x27, #1312]
  434458:	ldr	x1, [x11, x1, lsl #3]
  43445c:	ldur	x10, [x0, #-8]
  434460:	sub	x0, x1, #0x1
  434464:	cmp	x0, x10
  434468:	add	x10, x6, x10
  43446c:	b.eq	434520 <nftw@plt+0x319a0>  // b.none
  434470:	add	x6, x6, x0
  434474:	mov	w9, #0x0                   	// #0
  434478:	mov	x0, x10
  43447c:	b	4344ac <nftw@plt+0x3192c>
  434480:	cbz	w9, 43448c <nftw@plt+0x3190c>
  434484:	cmp	w2, #0x5c
  434488:	b.eq	4344ec <nftw@plt+0x3196c>  // b.none
  43448c:	mov	x7, x1
  434490:	mov	x3, x4
  434494:	mov	x1, x5
  434498:	mov	x5, x7
  43449c:	strb	w2, [x1]
  4344a0:	add	x0, x0, #0x1
  4344a4:	cmp	x0, x6
  4344a8:	b.eq	434520 <nftw@plt+0x319a0>  // b.none
  4344ac:	ldrb	w2, [x0]
  4344b0:	add	x1, x5, #0x1
  4344b4:	add	x4, x3, #0x1
  4344b8:	cbz	w8, 43448c <nftw@plt+0x3190c>
  4344bc:	cmp	w2, #0x22
  4344c0:	b.ne	434480 <nftw@plt+0x31900>  // b.any
  4344c4:	cmp	x0, x10
  4344c8:	b.ls	4344dc <nftw@plt+0x3195c>  // b.plast
  4344cc:	ldurb	w4, [x0, #-1]
  4344d0:	eor	w2, w9, #0x1
  4344d4:	cmp	w4, #0x5c
  4344d8:	csel	w9, w2, w9, ne  // ne = any
  4344dc:	strb	w14, [x5], #2
  4344e0:	add	x3, x3, #0x2
  4344e4:	ldrb	w2, [x0]
  4344e8:	b	43449c <nftw@plt+0x3191c>
  4344ec:	strb	w2, [x5], #2
  4344f0:	add	x3, x3, #0x2
  4344f4:	ldrb	w2, [x0]
  4344f8:	b	43449c <nftw@plt+0x3191c>
  4344fc:	mov	x3, x21
  434500:	str	x3, [x27, #1328]
  434504:	mov	w21, w22
  434508:	mov	x0, x27
  43450c:	mov	w22, w4
  434510:	bl	42e3e0 <nftw@plt+0x2b860>
  434514:	ldr	x24, [x27, #136]
  434518:	ldp	x25, x1, [x24, #16]
  43451c:	b	433a70 <nftw@plt+0x30ef0>
  434520:	ldr	w0, [x13]
  434524:	add	x0, x0, #0xd
  434528:	and	x0, x0, #0xfffffffffffffff8
  43452c:	add	x13, x13, x0
  434530:	b	43440c <nftw@plt+0x3188c>
  434534:	mov	x21, x28
  434538:	mov	x25, x20
  43453c:	mov	w26, #0x3                   	// #3
  434540:	b	433a90 <nftw@plt+0x30f10>
  434544:	ldr	w0, [x25, #24]
  434548:	cmp	w0, #0xa
  43454c:	b.ne	4342c8 <nftw@plt+0x31748>  // b.any
  434550:	mov	w0, #0x1                   	// #1
  434554:	mov	x26, #0x10                  	// #16
  434558:	str	w0, [sp, #148]
  43455c:	ldr	x1, [sp, #136]
  434560:	cbz	x1, 434574 <nftw@plt+0x319f4>
  434564:	mov	x0, x27
  434568:	str	w4, [sp, #144]
  43456c:	bl	427c38 <nftw@plt+0x250b8>
  434570:	ldr	w4, [sp, #144]
  434574:	mov	x1, x26
  434578:	mov	x0, x27
  43457c:	str	w4, [sp, #120]
  434580:	bl	427c60 <nftw@plt+0x250e0>
  434584:	mov	x2, x0
  434588:	ldr	w4, [sp, #120]
  43458c:	ldr	x1, [x27, #40]
  434590:	mov	w26, #0x1                   	// #1
  434594:	ldr	x0, [x27, #1312]
  434598:	str	x25, [sp, #112]
  43459c:	mov	x25, x20
  4345a0:	str	x2, [sp, #136]
  4345a4:	sub	x0, x21, x0
  4345a8:	str	x0, [sp, #160]
  4345ac:	ldr	w0, [x1, #60]
  4345b0:	mov	x21, x28
  4345b4:	str	w0, [sp, #176]
  4345b8:	ldr	x0, [x2, #16]
  4345bc:	str	wzr, [sp, #144]
  4345c0:	str	x0, [sp, #152]
  4345c4:	b	433a90 <nftw@plt+0x30f10>
  4345c8:	ldrh	w0, [x0, #16]
  4345cc:	str	w0, [sp, #148]
  4345d0:	add	w26, w0, #0x1
  4345d4:	ubfiz	x26, x26, #3, #17
  4345d8:	b	43455c <nftw@plt+0x319dc>
  4345dc:	mov	w0, #0xa                   	// #10
  4345e0:	strb	w0, [x5]
  4345e4:	ldr	x1, [sp, #112]
  4345e8:	mov	x0, x27
  4345ec:	ldr	x2, [x20, #16]
  4345f0:	str	wzr, [sp, #100]
  4345f4:	mov	w26, #0x0                   	// #0
  4345f8:	bl	42e388 <nftw@plt+0x2b808>
  4345fc:	ldr	x24, [x27, #136]
  434600:	str	x20, [x24, #32]
  434604:	ldp	x25, x1, [x24, #16]
  434608:	b	433a70 <nftw@plt+0x30ef0>
  43460c:	ldr	x1, [sp, #112]
  434610:	mov	x0, x27
  434614:	mov	w26, #0x0                   	// #0
  434618:	bl	4337a8 <nftw@plt+0x30c28>
  43461c:	str	wzr, [sp, #100]
  434620:	ldr	x24, [x27, #136]
  434624:	ldp	x25, x1, [x24, #16]
  434628:	b	433a70 <nftw@plt+0x30ef0>
  43462c:	ldr	x0, [x27, #40]
  434630:	mov	w4, #0x18                  	// #24
  434634:	ldr	x8, [x27]
  434638:	mov	w9, #0x1                   	// #1
  43463c:	ldr	w1, [x0, #12]
  434640:	mov	w2, #0x0                   	// #0
  434644:	ldr	x7, [x0]
  434648:	sub	w1, w1, #0x1
  43464c:	ldr	w3, [x0, #60]
  434650:	mov	w19, #0x0                   	// #0
  434654:	strb	w9, [x8, #104]
  434658:	smull	x1, w1, w4
  43465c:	add	x4, x7, x1
  434660:	ldr	w1, [x7, x1]
  434664:	ldrb	w7, [x4, #6]
  434668:	ldr	w4, [x4, #16]
  43466c:	sub	w1, w3, w1
  434670:	add	w4, w4, #0x1
  434674:	lsr	w1, w1, w7
  434678:	add	w1, w1, w4
  43467c:	bl	42b4f0 <nftw@plt+0x28970>
  434680:	b	433dc4 <nftw@plt+0x31244>
  434684:	mov	x3, x21
  434688:	str	x3, [x27, #1328]
  43468c:	mov	x1, x25
  434690:	mov	w21, w22
  434694:	mov	x0, x27
  434698:	mov	w22, w4
  43469c:	bl	4337a8 <nftw@plt+0x30c28>
  4346a0:	mov	w26, #0x0                   	// #0
  4346a4:	ldr	x24, [x27, #136]
  4346a8:	ldp	x25, x1, [x24, #16]
  4346ac:	b	433a70 <nftw@plt+0x30ef0>
  4346b0:	stp	x29, x30, [sp, #-32]!
  4346b4:	mov	x29, sp
  4346b8:	str	x19, [sp, #16]
  4346bc:	mov	x19, x0
  4346c0:	ldr	x1, [x19]
  4346c4:	mov	x0, x19
  4346c8:	ldrb	w1, [x1, #104]
  4346cc:	cbz	w1, 4346dc <nftw@plt+0x31b5c>
  4346d0:	bl	427158 <nftw@plt+0x245d8>
  4346d4:	ands	w0, w0, #0xff
  4346d8:	b.eq	434708 <nftw@plt+0x31b88>  // b.none
  4346dc:	mov	x0, x19
  4346e0:	mov	w2, #0x0                   	// #0
  4346e4:	mov	x1, #0x0                   	// #0
  4346e8:	bl	4339c0 <nftw@plt+0x30e40>
  4346ec:	tst	w0, #0xff
  4346f0:	b.eq	4346c0 <nftw@plt+0x31b40>  // b.none
  4346f4:	ldrb	w0, [x19, #18]
  4346f8:	cbnz	w0, 4346c0 <nftw@plt+0x31b40>
  4346fc:	ldr	x0, [x19]
  434700:	cmp	x0, #0x0
  434704:	cset	w0, ne  // ne = any
  434708:	ldr	x19, [sp, #16]
  43470c:	ldp	x29, x30, [sp], #32
  434710:	ret
  434714:	nop
  434718:	ldrb	w1, [x0, #19]
  43471c:	tbz	w1, #2, 434778 <nftw@plt+0x31bf8>
  434720:	ldrh	w1, [x0, #16]
  434724:	cbz	w1, 434778 <nftw@plt+0x31bf8>
  434728:	ldr	x3, [x0, #24]
  43472c:	ldrh	w2, [x3, #4]
  434730:	ldr	w1, [x3]
  434734:	cbz	w2, 434780 <nftw@plt+0x31c00>
  434738:	ldr	x6, [x0]
  43473c:	mov	x0, x1
  434740:	mov	x5, #0xfffffffffffffff8    	// #-8
  434744:	nop
  434748:	add	x2, x5, w2, uxtw #3
  43474c:	add	x1, x1, #0xd
  434750:	and	x1, x1, #0xfffffffffffffff8
  434754:	add	x3, x3, x1
  434758:	ldr	x4, [x6, x2]
  43475c:	ldrh	w2, [x3, #4]
  434760:	ldr	w1, [x3]
  434764:	ldr	w4, [x4, #8]
  434768:	add	x4, x4, x1
  43476c:	add	x0, x0, x4
  434770:	cbnz	w2, 434748 <nftw@plt+0x31bc8>
  434774:	ret
  434778:	ldr	w0, [x0, #12]
  43477c:	ret
  434780:	mov	x0, x1
  434784:	ret
  434788:	stp	x29, x30, [sp, #-64]!
  43478c:	mov	x3, x1
  434790:	mov	x29, sp
  434794:	stp	x21, x22, [sp, #32]
  434798:	mov	x22, x0
  43479c:	ldrb	w0, [x0, #19]
  4347a0:	stp	x19, x20, [sp, #16]
  4347a4:	ldr	x20, [x22, #24]
  4347a8:	tbz	w0, #2, 43482c <nftw@plt+0x31cac>
  4347ac:	ldrh	w0, [x22, #16]
  4347b0:	cbz	w0, 43482c <nftw@plt+0x31cac>
  4347b4:	str	x23, [sp, #48]
  4347b8:	mov	x23, #0xfffffffffffffff8    	// #-8
  4347bc:	b	4347ec <nftw@plt+0x31c6c>
  4347c0:	ldr	x2, [x22]
  4347c4:	ldr	x21, [x2, x1]
  4347c8:	ldr	w2, [x21, #8]
  4347cc:	ldr	x1, [x21]
  4347d0:	bl	402490 <memcpy@plt>
  4347d4:	ldr	w2, [x20]
  4347d8:	ldr	w3, [x21, #8]
  4347dc:	add	x2, x2, #0xd
  4347e0:	and	x2, x2, #0xfffffffffffffff8
  4347e4:	add	x3, x19, x3
  4347e8:	add	x20, x20, x2
  4347ec:	mov	x1, x20
  4347f0:	mov	x0, x3
  4347f4:	ldr	w2, [x1], #6
  4347f8:	bl	402490 <memcpy@plt>
  4347fc:	ldr	w19, [x20]
  434800:	ldrh	w2, [x20, #4]
  434804:	add	x19, x0, x19
  434808:	mov	x0, x19
  43480c:	add	x1, x23, w2, uxtw #3
  434810:	cbnz	w2, 4347c0 <nftw@plt+0x31c40>
  434814:	mov	x0, x19
  434818:	ldp	x19, x20, [sp, #16]
  43481c:	ldp	x21, x22, [sp, #32]
  434820:	ldr	x23, [sp, #48]
  434824:	ldp	x29, x30, [sp], #64
  434828:	ret
  43482c:	ldr	w2, [x22, #12]
  434830:	mov	x1, x20
  434834:	mov	x0, x3
  434838:	bl	402490 <memcpy@plt>
  43483c:	ldr	w19, [x22, #12]
  434840:	ldp	x21, x22, [sp, #32]
  434844:	add	x19, x0, x19
  434848:	mov	x0, x19
  43484c:	ldp	x19, x20, [sp, #16]
  434850:	ldp	x29, x30, [sp], #64
  434854:	ret
  434858:	stp	x29, x30, [sp, #-80]!
  43485c:	mov	x29, sp
  434860:	ldr	x2, [x0]
  434864:	stp	x21, x22, [sp, #32]
  434868:	ldr	x22, [x0, #136]
  43486c:	stp	x19, x20, [sp, #16]
  434870:	mov	x19, x0
  434874:	stp	x23, x24, [sp, #48]
  434878:	stp	x25, x26, [sp, #64]
  43487c:	ldr	x1, [x0, #1312]
  434880:	str	x1, [x0, #1328]
  434884:	ldr	x1, [x2]
  434888:	ldr	x2, [x2, #32]
  43488c:	stp	x1, x2, [x22, #16]
  434890:	sub	x1, x2, x1
  434894:	bl	433730 <nftw@plt+0x30bb0>
  434898:	ldr	x0, [x22, #16]
  43489c:	ldrb	w0, [x0]
  4348a0:	cmp	w0, #0x28
  4348a4:	b.eq	4349a0 <nftw@plt+0x31e20>  // b.none
  4348a8:	mov	w25, #0x0                   	// #0
  4348ac:	mov	w24, #0x0                   	// #0
  4348b0:	mov	w23, #0x0                   	// #0
  4348b4:	mov	x26, #0x0                   	// #0
  4348b8:	mov	x1, #0x30                  	// #48
  4348bc:	mov	x0, x19
  4348c0:	bl	42aaa0 <nftw@plt+0x27f20>
  4348c4:	mov	x2, x0
  4348c8:	mov	w1, #0x2                   	// #2
  4348cc:	mov	x0, x19
  4348d0:	bl	42ea20 <nftw@plt+0x2bea0>
  4348d4:	mov	x21, x0
  4348d8:	ldr	x20, [x19]
  4348dc:	mov	x0, x19
  4348e0:	ldrb	w1, [x21, #19]
  4348e4:	strh	w24, [x21, #16]
  4348e8:	bfi	w1, w25, #2, #1
  4348ec:	strb	w1, [x21, #19]
  4348f0:	ldr	x1, [x22, #16]
  4348f4:	str	x26, [x21]
  4348f8:	ldrb	w2, [x19, #1124]
  4348fc:	bl	433590 <nftw@plt+0x30a10>
  434900:	str	x0, [x20]
  434904:	mov	x1, x21
  434908:	mov	w2, #0x0                   	// #0
  43490c:	ldrb	w3, [x19, #24]
  434910:	mov	x0, x19
  434914:	add	w3, w3, #0x1
  434918:	strb	w3, [x19, #24]
  43491c:	bl	4339c0 <nftw@plt+0x30e40>
  434920:	ldrb	w2, [x19, #24]
  434924:	mov	w1, w23
  434928:	mov	x0, x19
  43492c:	sub	w2, w2, #0x1
  434930:	strb	w2, [x19, #24]
  434934:	bl	42e9d8 <nftw@plt+0x2be58>
  434938:	ldr	x0, [x19, #1312]
  43493c:	ldr	x1, [x19, #1328]
  434940:	cmp	x0, x1
  434944:	b.cs	434970 <nftw@plt+0x31df0>  // b.hs, b.nlast
  434948:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x205a0>
  43494c:	add	x20, x20, #0x248
  434950:	b	434960 <nftw@plt+0x31de0>
  434954:	sub	x1, x1, #0x1
  434958:	cmp	x0, x1
  43495c:	b.eq	434970 <nftw@plt+0x31df0>  // b.none
  434960:	ldurb	w2, [x1, #-1]
  434964:	ldrh	w2, [x20, x2, lsl #1]
  434968:	tst	w2, #0xc00
  43496c:	b.ne	434954 <nftw@plt+0x31dd4>  // b.any
  434970:	str	x1, [x19, #1328]
  434974:	mov	x0, x19
  434978:	mov	x1, x21
  43497c:	mov	w2, #0x0                   	// #0
  434980:	bl	433628 <nftw@plt+0x30aa8>
  434984:	mov	x0, x21
  434988:	ldp	x19, x20, [sp, #16]
  43498c:	ldp	x21, x22, [sp, #32]
  434990:	ldp	x23, x24, [sp, #48]
  434994:	ldp	x25, x26, [sp, #64]
  434998:	ldp	x29, x30, [sp], #80
  43499c:	ret
  4349a0:	ldr	x0, [x19, #136]
  4349a4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4349a8:	add	x20, x20, #0x248
  4349ac:	mov	w23, #0x0                   	// #0
  4349b0:	ldr	x1, [x0, #16]
  4349b4:	add	x1, x1, #0x1
  4349b8:	mov	w2, #0x1                   	// #1
  4349bc:	mov	x0, x19
  4349c0:	bl	433590 <nftw@plt+0x30a10>
  4349c4:	mov	x21, x0
  4349c8:	mov	x1, x21
  4349cc:	mov	x0, x19
  4349d0:	ldrb	w3, [x21]
  4349d4:	ldrh	w2, [x20, w3, sxtw #1]
  4349d8:	and	w24, w2, #0x200
  4349dc:	tbnz	w2, #9, 4349f0 <nftw@plt+0x31e70>
  4349e0:	cmp	w3, #0x24
  4349e4:	b.ne	434b08 <nftw@plt+0x31f88>  // b.any
  4349e8:	ldrb	w2, [x19, #1146]
  4349ec:	cbz	w2, 434a6c <nftw@plt+0x31eec>
  4349f0:	bl	433860 <nftw@plt+0x30ce0>
  4349f4:	mov	x2, x0
  4349f8:	mov	w1, w23
  4349fc:	mov	x3, x0
  434a00:	mov	x0, x19
  434a04:	bl	42e8c0 <nftw@plt+0x2bd40>
  434a08:	mov	w1, w0
  434a0c:	mov	w2, #0x1                   	// #1
  434a10:	mov	x0, x19
  434a14:	tst	w1, #0xff
  434a18:	b.eq	434a6c <nftw@plt+0x31eec>  // b.none
  434a1c:	ldr	x1, [x19, #136]
  434a20:	add	w23, w23, w2
  434a24:	ldr	x1, [x1, #16]
  434a28:	bl	433590 <nftw@plt+0x30a10>
  434a2c:	mov	x21, x0
  434a30:	ldrb	w0, [x0]
  434a34:	cmp	w0, #0x2c
  434a38:	b.eq	434b00 <nftw@plt+0x31f80>  // b.none
  434a3c:	cmp	w0, #0x29
  434a40:	ubfiz	x1, x23, #3, #32
  434a44:	and	w24, w23, #0xffff
  434a48:	b.ne	434a6c <nftw@plt+0x31eec>  // b.any
  434a4c:	ldr	x2, [x19, #136]
  434a50:	add	x21, x21, #0x1
  434a54:	mov	x0, x19
  434a58:	mov	w25, #0x1                   	// #1
  434a5c:	str	x21, [x2, #16]
  434a60:	bl	42ab10 <nftw@plt+0x27f90>
  434a64:	mov	x26, x0
  434a68:	b	4348b8 <nftw@plt+0x31d38>
  434a6c:	mov	x0, x19
  434a70:	mov	w1, #0x3                   	// #3
  434a74:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  434a78:	add	x2, x2, #0xe30
  434a7c:	bl	41f298 <nftw@plt+0x1c718>
  434a80:	ldr	x1, [x19, #136]
  434a84:	ldrb	w0, [x21]
  434a88:	ldr	x20, [x19]
  434a8c:	cmp	w0, #0x29
  434a90:	cinc	x21, x21, eq  // eq = none
  434a94:	str	x21, [x1, #16]
  434a98:	mov	x0, x19
  434a9c:	mov	x21, #0x0                   	// #0
  434aa0:	ldrb	w2, [x19, #1124]
  434aa4:	ldr	x1, [x22, #16]
  434aa8:	bl	433590 <nftw@plt+0x30a10>
  434aac:	str	x0, [x20]
  434ab0:	mov	w2, #0x0                   	// #0
  434ab4:	mov	x0, x19
  434ab8:	ldrb	w3, [x19, #24]
  434abc:	mov	x1, #0x0                   	// #0
  434ac0:	add	w3, w3, #0x1
  434ac4:	strb	w3, [x19, #24]
  434ac8:	bl	4339c0 <nftw@plt+0x30e40>
  434acc:	ldrb	w2, [x19, #24]
  434ad0:	mov	w1, w23
  434ad4:	mov	x0, x19
  434ad8:	sub	w2, w2, #0x1
  434adc:	strb	w2, [x19, #24]
  434ae0:	bl	42e9d8 <nftw@plt+0x2be58>
  434ae4:	mov	x0, x21
  434ae8:	ldp	x19, x20, [sp, #16]
  434aec:	ldp	x21, x22, [sp, #32]
  434af0:	ldp	x23, x24, [sp, #48]
  434af4:	ldp	x25, x26, [sp, #64]
  434af8:	ldp	x29, x30, [sp], #80
  434afc:	ret
  434b00:	add	x1, x21, #0x1
  434b04:	b	4349b8 <nftw@plt+0x31e38>
  434b08:	cmp	w3, #0x29
  434b0c:	ccmp	w23, #0x0, #0x0, eq  // eq = none
  434b10:	b.ne	434a6c <nftw@plt+0x31eec>  // b.any
  434b14:	mov	x1, #0x0                   	// #0
  434b18:	mov	w23, #0x0                   	// #0
  434b1c:	b	434a4c <nftw@plt+0x31ecc>
  434b20:	stp	x29, x30, [sp, #-64]!
  434b24:	mov	x29, sp
  434b28:	stp	x19, x20, [sp, #16]
  434b2c:	mov	x20, x1
  434b30:	ldr	w1, [x0, #12]
  434b34:	mov	x19, x0
  434b38:	stp	x21, x22, [sp, #32]
  434b3c:	ldr	w0, [x20, #12]
  434b40:	add	w0, w1, w0
  434b44:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  434b48:	ldrh	w1, [x19, #16]
  434b4c:	mov	x22, x0
  434b50:	ldr	w2, [x19, #12]
  434b54:	strb	wzr, [sp, #62]
  434b58:	strb	wzr, [sp, #63]
  434b5c:	add	x21, x0, x2
  434b60:	cbz	w1, 434c20 <nftw@plt+0x320a0>
  434b64:	ldr	x19, [x19, #24]
  434b68:	ldr	x20, [x20, #24]
  434b6c:	ldrh	w0, [x19, #4]
  434b70:	ldrh	w1, [x20, #4]
  434b74:	cmp	w1, w0
  434b78:	b.eq	434bcc <nftw@plt+0x3204c>  // b.none
  434b7c:	b	434c00 <nftw@plt+0x32080>
  434b80:	mov	x2, x11
  434b84:	mov	x1, x21
  434b88:	mov	x0, x22
  434b8c:	bl	402850 <memcmp@plt>
  434b90:	cbnz	w0, 434c00 <nftw@plt+0x32080>
  434b94:	ldrh	w0, [x19, #4]
  434b98:	cbz	w0, 434c80 <nftw@plt+0x32100>
  434b9c:	ldr	w2, [x19]
  434ba0:	ldr	w1, [x20]
  434ba4:	add	x2, x2, #0xd
  434ba8:	add	x1, x1, #0xd
  434bac:	and	x2, x2, #0xfffffffffffffff8
  434bb0:	and	x1, x1, #0xfffffffffffffff8
  434bb4:	add	x19, x19, x2
  434bb8:	add	x20, x20, x1
  434bbc:	ldrh	w1, [x19, #4]
  434bc0:	ldrh	w0, [x20, #4]
  434bc4:	cmp	w1, w0
  434bc8:	b.ne	434c00 <nftw@plt+0x32080>  // b.any
  434bcc:	mov	x1, x19
  434bd0:	add	x3, sp, #0x3e
  434bd4:	mov	x0, x22
  434bd8:	ldr	w2, [x1], #6
  434bdc:	bl	433328 <nftw@plt+0x307a8>
  434be0:	mov	x11, x0
  434be4:	mov	x1, x20
  434be8:	add	x3, sp, #0x3f
  434bec:	mov	x0, x21
  434bf0:	ldr	w2, [x1], #6
  434bf4:	bl	433328 <nftw@plt+0x307a8>
  434bf8:	cmp	x11, x0
  434bfc:	b.eq	434b80 <nftw@plt+0x32000>  // b.none
  434c00:	mov	x0, x22
  434c04:	mov	w19, #0x1                   	// #1
  434c08:	bl	402910 <free@plt>
  434c0c:	mov	w0, w19
  434c10:	ldp	x19, x20, [sp, #16]
  434c14:	ldp	x21, x22, [sp, #32]
  434c18:	ldp	x29, x30, [sp], #64
  434c1c:	ret
  434c20:	ldr	x1, [x19, #24]
  434c24:	add	x3, sp, #0x3e
  434c28:	bl	433328 <nftw@plt+0x307a8>
  434c2c:	mov	x11, x0
  434c30:	ldr	w2, [x20, #12]
  434c34:	add	x3, sp, #0x3f
  434c38:	ldr	x1, [x20, #24]
  434c3c:	mov	x0, x21
  434c40:	bl	433328 <nftw@plt+0x307a8>
  434c44:	cmp	x11, x0
  434c48:	b.ne	434c00 <nftw@plt+0x32080>  // b.any
  434c4c:	mov	x1, x21
  434c50:	mov	x2, x11
  434c54:	mov	x0, x22
  434c58:	bl	402850 <memcmp@plt>
  434c5c:	cmp	w0, #0x0
  434c60:	mov	x0, x22
  434c64:	cset	w19, ne  // ne = any
  434c68:	bl	402910 <free@plt>
  434c6c:	mov	w0, w19
  434c70:	ldp	x19, x20, [sp, #16]
  434c74:	ldp	x21, x22, [sp, #32]
  434c78:	ldp	x29, x30, [sp], #64
  434c7c:	ret
  434c80:	mov	x0, x22
  434c84:	mov	w19, #0x0                   	// #0
  434c88:	bl	402910 <free@plt>
  434c8c:	mov	w0, w19
  434c90:	ldp	x19, x20, [sp, #16]
  434c94:	ldp	x21, x22, [sp, #32]
  434c98:	ldp	x29, x30, [sp], #64
  434c9c:	ret
  434ca0:	stp	x29, x30, [sp, #-48]!
  434ca4:	mov	x29, sp
  434ca8:	stp	x19, x20, [sp, #16]
  434cac:	mov	x19, x0
  434cb0:	str	x21, [sp, #32]
  434cb4:	bl	428f58 <nftw@plt+0x263d8>
  434cb8:	ldrb	w0, [x0, #4]
  434cbc:	cmp	w0, #0x25
  434cc0:	mov	x0, x19
  434cc4:	b.eq	434ce4 <nftw@plt+0x32164>  // b.none
  434cc8:	mov	w1, #0x1                   	// #1
  434ccc:	bl	42e590 <nftw@plt+0x2ba10>
  434cd0:	mov	sp, x29
  434cd4:	ldp	x19, x20, [sp, #16]
  434cd8:	ldr	x21, [sp, #32]
  434cdc:	ldp	x29, x30, [sp], #48
  434ce0:	ret
  434ce4:	bl	428f58 <nftw@plt+0x263d8>
  434ce8:	ldrb	w0, [x0, #4]
  434cec:	cmp	w0, #0x37
  434cf0:	mov	x0, x19
  434cf4:	b.eq	434d14 <nftw@plt+0x32194>  // b.none
  434cf8:	mov	w1, #0x2                   	// #2
  434cfc:	bl	42e590 <nftw@plt+0x2ba10>
  434d00:	mov	sp, x29
  434d04:	ldp	x19, x20, [sp, #16]
  434d08:	ldr	x21, [sp, #32]
  434d0c:	ldp	x29, x30, [sp], #48
  434d10:	ret
  434d14:	bl	428f58 <nftw@plt+0x263d8>
  434d18:	mov	x20, x0
  434d1c:	ldrb	w0, [x0, #4]
  434d20:	cmp	w0, #0x3e
  434d24:	b.ne	434da0 <nftw@plt+0x32220>  // b.any
  434d28:	ldr	w2, [x20, #8]
  434d2c:	cmp	w2, #0x4
  434d30:	b.ls	434da0 <nftw@plt+0x32220>  // b.plast
  434d34:	ldr	x1, [x20, #16]
  434d38:	sub	w0, w2, #0x2
  434d3c:	ldrb	w0, [x1, w0, uxtw]
  434d40:	cmp	w0, #0x2f
  434d44:	b.ne	434da0 <nftw@plt+0x32220>  // b.any
  434d48:	sub	w3, w2, #0x3
  434d4c:	ldrb	w0, [x1, w3, uxtw]
  434d50:	cmp	w0, #0x2f
  434d54:	b.ne	434da0 <nftw@plt+0x32220>  // b.any
  434d58:	ldr	x21, [x19, #920]
  434d5c:	cbz	x21, 434cd0 <nftw@plt+0x32150>
  434d60:	add	x0, x3, #0xf
  434d64:	sub	w2, w2, #0x4
  434d68:	and	x0, x0, #0x1fffffff0
  434d6c:	add	x1, x1, #0x1
  434d70:	sub	sp, sp, x0
  434d74:	mov	x3, sp
  434d78:	mov	x0, x3
  434d7c:	bl	402490 <memcpy@plt>
  434d80:	mov	x3, x0
  434d84:	ldr	w2, [x20, #8]
  434d88:	mov	x1, x0
  434d8c:	mov	x0, x19
  434d90:	sub	w2, w2, #0x4
  434d94:	strb	wzr, [x3, w2, uxtw]
  434d98:	blr	x21
  434d9c:	b	434cd0 <nftw@plt+0x32150>
  434da0:	mov	x0, x19
  434da4:	mov	w1, #0x3                   	// #3
  434da8:	bl	42e590 <nftw@plt+0x2ba10>
  434dac:	mov	sp, x29
  434db0:	ldp	x19, x20, [sp, #16]
  434db4:	ldr	x21, [sp, #32]
  434db8:	ldp	x29, x30, [sp], #48
  434dbc:	ret
  434dc0:	sbfiz	x3, x1, #4, #32
  434dc4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  434dc8:	sub	x3, x3, w1, sxtw
  434dcc:	add	x4, x4, #0x218
  434dd0:	add	x2, x4, x3
  434dd4:	str	w1, [x0, #1116]
  434dd8:	add	x5, x0, #0x400
  434ddc:	ldrb	w6, [x4, x3]
  434de0:	ldrb	w1, [x2, #4]
  434de4:	ldrb	w4, [x2, #5]
  434de8:	ldrb	w3, [x2, #9]
  434dec:	ldrb	w12, [x2, #1]
  434df0:	ldrb	w10, [x2, #2]
  434df4:	ldrb	w7, [x2, #3]
  434df8:	ldrb	w11, [x2, #6]
  434dfc:	ldrb	w9, [x2, #7]
  434e00:	ldrb	w8, [x2, #8]
  434e04:	strb	w12, [x0, #1120]
  434e08:	strb	w11, [x0, #1126]
  434e0c:	strb	w10, [x0, #1127]
  434e10:	strb	w9, [x0, #1128]
  434e14:	strb	w8, [x0, #1130]
  434e18:	strb	w7, [x0, #1147]
  434e1c:	strb	w6, [x0, #1152]
  434e20:	strb	w4, [x0, #1153]
  434e24:	strb	w3, [x0, #1161]
  434e28:	strb	w1, [x0, #1164]
  434e2c:	ldrb	w4, [x2, #12]
  434e30:	ldrh	w1, [x2, #10]
  434e34:	ldrb	w3, [x2, #13]
  434e38:	sturh	w1, [x5, #141]
  434e3c:	ldrb	w1, [x2, #14]
  434e40:	strb	w4, [x0, #1125]
  434e44:	strb	w3, [x0, #1129]
  434e48:	strb	w1, [x0, #1167]
  434e4c:	ret
  434e50:	stp	x29, x30, [sp, #-64]!
  434e54:	adrp	x3, 48d000 <__environ@@GLIBC_2.17+0xa68>
  434e58:	mov	x29, sp
  434e5c:	ldr	w4, [x3, #2416]
  434e60:	stp	x19, x20, [sp, #16]
  434e64:	mov	w20, w0
  434e68:	stp	x21, x22, [sp, #32]
  434e6c:	mov	x21, x1
  434e70:	mov	x22, x2
  434e74:	str	x23, [sp, #48]
  434e78:	cbz	w4, 435028 <nftw@plt+0x324a8>
  434e7c:	mov	x1, #0x588                 	// #1416
  434e80:	mov	x0, #0x1                   	// #1
  434e84:	bl	449bb0 <_obstack_memory_used@@Base+0x150>
  434e88:	stp	xzr, xzr, [x0, #80]
  434e8c:	mov	x19, x0
  434e90:	stp	xzr, xzr, [x0, #96]
  434e94:	add	x23, x0, #0x1c8
  434e98:	mov	w1, w20
  434e9c:	stp	xzr, xzr, [x0, #112]
  434ea0:	add	x20, x0, #0x50
  434ea4:	str	xzr, [x0, #128]
  434ea8:	bl	434dc0 <nftw@plt+0x32240>
  434eac:	add	x2, x0, #0x400
  434eb0:	mov	w1, #0x101                 	// #257
  434eb4:	mov	w6, #0x102                 	// #258
  434eb8:	mov	w0, #0x1                   	// #1
  434ebc:	mov	w3, #0x8                   	// #8
  434ec0:	sturh	w1, [x2, #99]
  434ec4:	mov	w5, #0xff                  	// #255
  434ec8:	str	w3, [x19, #1112]
  434ecc:	mov	w4, #0x100                 	// #256
  434ed0:	strb	w0, [x19, #1132]
  434ed4:	mov	w3, #0x1                   	// #1
  434ed8:	strh	w6, [x19, #1136]
  434edc:	mov	x8, #0x40                  	// #64
  434ee0:	strh	w5, [x19, #1198]
  434ee4:	mov	x7, #0x8                   	// #8
  434ee8:	sturh	w4, [x2, #115]
  434eec:	mov	x5, #0x20                  	// #32
  434ef0:	strh	w1, [x19, #1142]
  434ef4:	strb	wzr, [x19, #1144]
  434ef8:	strb	w0, [x19, #1146]
  434efc:	strb	w0, [x19, #1148]
  434f00:	sturh	w6, [x2, #133]
  434f04:	strb	w0, [x19, #1242]
  434f08:	add	x0, x19, #0x4b8
  434f0c:	strb	wzr, [x19, #1134]
  434f10:	strh	w1, [x19, #1162]
  434f14:	str	w3, [x19, #1192]
  434f18:	strh	w4, [x19, #1240]
  434f1c:	strb	w3, [x19, #1245]
  434f20:	stp	x8, x7, [x0]
  434f24:	stp	x5, x5, [x0, #16]
  434f28:	bl	41b368 <nftw@plt+0x187e8>
  434f2c:	str	x0, [x19, #1168]
  434f30:	str	xzr, [x19, #1176]
  434f34:	bl	41b368 <nftw@plt+0x187e8>
  434f38:	mov	x2, x0
  434f3c:	ldrb	w0, [x19, #1123]
  434f40:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x105a0>
  434f44:	add	x3, x3, #0xbd0
  434f48:	mov	w5, #0x53                  	// #83
  434f4c:	cmp	w0, #0x0
  434f50:	mov	w4, #0x16                  	// #22
  434f54:	cset	w6, eq  // eq = none
  434f58:	strb	w6, [x19, #21]
  434f5c:	str	x22, [x19, #40]
  434f60:	mov	x0, x23
  434f64:	str	x3, [x19, #224]
  434f68:	mov	w1, #0xfa                  	// #250
  434f6c:	strb	w5, [x19, #668]
  434f70:	str	xzr, [x19, #672]
  434f74:	strb	w4, [x19, #692]
  434f78:	strh	wzr, [x19, #694]
  434f7c:	str	x2, [x19, #1184]
  434f80:	bl	426f98 <nftw@plt+0x24418>
  434f84:	stp	xzr, xzr, [x19, #80]
  434f88:	mov	x0, x19
  434f8c:	ldr	x2, [x19, #472]
  434f90:	str	xzr, [x19, #120]
  434f94:	str	x20, [x19, #136]
  434f98:	mov	x1, #0x0                   	// #0
  434f9c:	str	x2, [x19, #448]
  434fa0:	str	x23, [x19, #488]
  434fa4:	bl	427c60 <nftw@plt+0x250e0>
  434fa8:	mov	x2, x0
  434fac:	str	x2, [x19, #56]
  434fb0:	mov	x0, x19
  434fb4:	mov	x1, #0x0                   	// #0
  434fb8:	bl	427c60 <nftw@plt+0x250e0>
  434fbc:	mov	x2, x0
  434fc0:	mov	x1, #0xfffffffffffffffe    	// #-2
  434fc4:	str	x2, [x19, #64]
  434fc8:	str	x1, [x19, #656]
  434fcc:	mov	x0, x19
  434fd0:	str	xzr, [x19, #1400]
  434fd4:	str	wzr, [x19, #1408]
  434fd8:	bl	421a80 <nftw@plt+0x1ef00>
  434fdc:	adrp	x4, 402000 <memcpy@plt-0x490>
  434fe0:	adrp	x3, 449000 <nftw@plt+0x46480>
  434fe4:	add	x4, x4, #0x910
  434fe8:	add	x3, x3, #0xb78
  434fec:	mov	x2, #0x0                   	// #0
  434ff0:	mov	x1, #0x0                   	// #0
  434ff4:	add	x0, x19, #0x328
  434ff8:	bl	449840 <_obstack_begin@@Base>
  434ffc:	mov	x0, x19
  435000:	bl	4253e8 <nftw@plt+0x22868>
  435004:	mov	x1, x21
  435008:	mov	x0, x19
  43500c:	bl	425c30 <nftw@plt+0x230b0>
  435010:	mov	x0, x19
  435014:	ldp	x19, x20, [sp, #16]
  435018:	ldp	x21, x22, [sp, #32]
  43501c:	ldr	x23, [sp, #48]
  435020:	ldp	x29, x30, [sp], #64
  435024:	ret
  435028:	add	x19, x3, #0x970
  43502c:	mov	w0, #0x1                   	// #1
  435030:	str	w0, [x3, #2416]
  435034:	bl	426450 <nftw@plt+0x238d0>
  435038:	mov	w9, #0x7c                  	// #124
  43503c:	mov	w8, #0x5e                  	// #94
  435040:	mov	w7, #0x5d5b                	// #23899
  435044:	mov	w5, #0x5c                  	// #92
  435048:	mov	w4, #0x237b                	// #9083
  43504c:	mov	w3, #0x7d                  	// #125
  435050:	mov	w6, #0x7e                  	// #126
  435054:	strb	w9, [x19, #41]
  435058:	strb	w8, [x19, #47]
  43505c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  435060:	strh	w7, [x19, #48]
  435064:	add	x1, x1, #0x650
  435068:	strb	w6, [x19, #53]
  43506c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  435070:	strb	w5, [x19, #55]
  435074:	add	x0, x0, #0x390
  435078:	strh	w4, [x19, #68]
  43507c:	strb	w3, [x19, #70]
  435080:	bl	4026b0 <bindtextdomain@plt>
  435084:	b	434e7c <nftw@plt+0x322fc>
  435088:	str	x1, [x0, #40]
  43508c:	ret
  435090:	stp	x29, x30, [sp, #-48]!
  435094:	mov	x29, sp
  435098:	stp	x19, x20, [sp, #16]
  43509c:	mov	x19, x0
  4350a0:	ldr	x0, [x0, #1096]
  4350a4:	stp	x21, x22, [sp, #32]
  4350a8:	bl	402910 <free@plt>
  4350ac:	ldr	x0, [x19]
  4350b0:	cbz	x0, 4350c8 <nftw@plt+0x32548>
  4350b4:	nop
  4350b8:	mov	x0, x19
  4350bc:	bl	41e590 <nftw@plt+0x1ba10>
  4350c0:	ldr	x0, [x19]
  4350c4:	cbnz	x0, 4350b8 <nftw@plt+0x32538>
  4350c8:	ldr	x0, [x19, #1312]
  4350cc:	bl	402910 <free@plt>
  4350d0:	ldr	x0, [x19, #504]
  4350d4:	cbz	x0, 4350e4 <nftw@plt+0x32564>
  4350d8:	bl	402910 <free@plt>
  4350dc:	str	xzr, [x19, #504]
  4350e0:	str	wzr, [x19, #512]
  4350e4:	ldr	x0, [x19, #712]
  4350e8:	cbz	x0, 4350f0 <nftw@plt+0x32570>
  4350ec:	bl	432078 <nftw@plt+0x2f4f8>
  4350f0:	mov	x1, #0x0                   	// #0
  4350f4:	add	x0, x19, #0x328
  4350f8:	bl	4499d0 <_obstack_free@@Base>
  4350fc:	add	x22, x19, #0x1c8
  435100:	mov	x0, x19
  435104:	bl	425da0 <nftw@plt+0x23220>
  435108:	mov	x0, x19
  43510c:	bl	4254d0 <nftw@plt+0x22950>
  435110:	mov	x0, x19
  435114:	bl	417e10 <nftw@plt+0x15290>
  435118:	ldr	x0, [x19, #56]
  43511c:	bl	427e70 <nftw@plt+0x252f0>
  435120:	ldr	x0, [x19, #64]
  435124:	bl	427e70 <nftw@plt+0x252f0>
  435128:	ldr	x0, [x19, #72]
  43512c:	bl	427e70 <nftw@plt+0x252f0>
  435130:	ldr	x0, [x22, #16]
  435134:	ldr	x20, [x19, #456]
  435138:	bl	402910 <free@plt>
  43513c:	cbz	x20, 435164 <nftw@plt+0x325e4>
  435140:	ldr	x0, [x20, #16]
  435144:	ldr	x21, [x20]
  435148:	bl	402910 <free@plt>
  43514c:	cmp	x20, x22
  435150:	b.eq	43515c <nftw@plt+0x325dc>  // b.none
  435154:	mov	x0, x20
  435158:	bl	402910 <free@plt>
  43515c:	mov	x20, x21
  435160:	cbnz	x20, 435140 <nftw@plt+0x325c0>
  435164:	ldr	x20, [x19, #80]
  435168:	cbz	x20, 435180 <nftw@plt+0x32600>
  43516c:	nop
  435170:	mov	x0, x20
  435174:	ldr	x20, [x20]
  435178:	bl	402910 <free@plt>
  43517c:	cbnz	x20, 435170 <nftw@plt+0x325f0>
  435180:	ldr	x0, [x19, #1384]
  435184:	cbz	x0, 4351bc <nftw@plt+0x3263c>
  435188:	ldr	w1, [x19, #1392]
  43518c:	cmp	w1, #0x0
  435190:	b.le	4351b8 <nftw@plt+0x32638>
  435194:	mov	x20, #0x0                   	// #0
  435198:	lsl	x1, x20, #4
  43519c:	add	x20, x20, #0x1
  4351a0:	ldr	x0, [x0, x1]
  4351a4:	bl	402910 <free@plt>
  4351a8:	ldr	w0, [x19, #1392]
  4351ac:	cmp	w0, w20
  4351b0:	ldr	x0, [x19, #1384]
  4351b4:	b.gt	435198 <nftw@plt+0x32618>
  4351b8:	bl	402910 <free@plt>
  4351bc:	ldr	x20, [x19, #1400]
  4351c0:	cbz	x20, 4351e4 <nftw@plt+0x32664>
  4351c4:	nop
  4351c8:	ldp	x1, x0, [x20]
  4351cc:	str	x1, [x19, #1400]
  4351d0:	bl	402910 <free@plt>
  4351d4:	mov	x0, x20
  4351d8:	bl	402910 <free@plt>
  4351dc:	ldr	x20, [x19, #1400]
  4351e0:	cbnz	x20, 4351c8 <nftw@plt+0x32648>
  4351e4:	mov	x0, x19
  4351e8:	ldp	x19, x20, [sp, #16]
  4351ec:	ldp	x21, x22, [sp, #32]
  4351f0:	ldp	x29, x30, [sp], #48
  4351f4:	b	402910 <free@plt>
  4351f8:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  4351fc:	add	x3, x3, #0x218
  435200:	add	x1, x3, #0x150
  435204:	mov	w2, #0xf                   	// #15
  435208:	add	x3, x3, #0x200
  43520c:	b	435214 <nftw@plt+0x32694>
  435210:	ldrh	w2, [x1, #10]
  435214:	cmp	w2, w0
  435218:	b.eq	435230 <nftw@plt+0x326b0>  // b.none
  43521c:	add	x1, x1, #0x10
  435220:	cmp	x1, x3
  435224:	b.ne	435210 <nftw@plt+0x32690>  // b.any
  435228:	mov	x0, #0x0                   	// #0
  43522c:	ret
  435230:	ldr	x0, [x1]
  435234:	ret
  435238:	stp	x29, x30, [sp, #-48]!
  43523c:	mov	x29, sp
  435240:	stp	x19, x20, [sp, #16]
  435244:	mov	x20, x0
  435248:	str	x21, [sp, #32]
  43524c:	mov	x21, #0xa0                  	// #160
  435250:	ldrb	w0, [x0, #1160]
  435254:	cbnz	w0, 435264 <nftw@plt+0x326e4>
  435258:	ldrb	w0, [x20, #1243]
  43525c:	mov	x21, #0xb0                  	// #176
  435260:	cbnz	w0, 4352f0 <nftw@plt+0x32770>
  435264:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435268:	add	x19, x19, #0x218
  43526c:	add	x19, x19, #0x200
  435270:	mov	w1, #0x8                   	// #8
  435274:	add	x21, x19, x21
  435278:	b	435280 <nftw@plt+0x32700>
  43527c:	ldrh	w1, [x19, #10]
  435280:	mov	x0, x20
  435284:	cmp	w1, #0xa
  435288:	b.ne	4352a0 <nftw@plt+0x32720>  // b.any
  43528c:	ldr	w1, [x20, #1116]
  435290:	cmp	w1, #0x15
  435294:	b.eq	4352d4 <nftw@plt+0x32754>  // b.none
  435298:	ldr	x1, [x20, #1040]
  43529c:	cbz	x1, 4352d4 <nftw@plt+0x32754>
  4352a0:	ldrh	w2, [x19, #8]
  4352a4:	ldr	x1, [x19]
  4352a8:	bl	425de0 <nftw@plt+0x23260>
  4352ac:	ldrb	w1, [x0, #18]
  4352b0:	ldrb	w2, [x19, #12]
  4352b4:	orr	w1, w1, #0x3
  4352b8:	strb	w1, [x0, #18]
  4352bc:	cbz	w2, 4352cc <nftw@plt+0x3274c>
  4352c0:	ldrh	w1, [x0, #18]
  4352c4:	orr	w1, w1, #0x20
  4352c8:	strh	w1, [x0, #18]
  4352cc:	ldrh	w1, [x19, #10]
  4352d0:	str	w1, [x0, #24]
  4352d4:	add	x19, x19, #0x10
  4352d8:	cmp	x19, x21
  4352dc:	b.cc	43527c <nftw@plt+0x326fc>  // b.lo, b.ul, b.last
  4352e0:	ldp	x19, x20, [sp, #16]
  4352e4:	ldr	x21, [sp, #32]
  4352e8:	ldp	x29, x30, [sp], #48
  4352ec:	ret
  4352f0:	ldrb	w1, [x20, #1153]
  4352f4:	mov	x0, #0xc0                  	// #192
  4352f8:	cmp	w1, #0x0
  4352fc:	csel	x21, x0, x21, eq  // eq = none
  435300:	b	435264 <nftw@plt+0x326e4>
  435304:	nop
  435308:	stp	x29, x30, [sp, #-32]!
  43530c:	mov	x29, sp
  435310:	stp	x19, x20, [sp, #16]
  435314:	mov	x19, x0
  435318:	mov	w20, w1
  43531c:	bl	435238 <nftw@plt+0x326b8>
  435320:	ldrb	w0, [x19, #1160]
  435324:	cbnz	w0, 435338 <nftw@plt+0x327b8>
  435328:	ldrb	w0, [x19, #1243]
  43532c:	cbz	w0, 435430 <nftw@plt+0x328b0>
  435330:	ldrb	w0, [x19, #1153]
  435334:	cbnz	w0, 435430 <nftw@plt+0x328b0>
  435338:	ldrb	w2, [x19, #1120]
  43533c:	ldr	w0, [x19, #1116]
  435340:	cbz	w2, 4353b8 <nftw@plt+0x32838>
  435344:	sub	w1, w0, #0x13
  435348:	cmp	w1, #0x1
  43534c:	b.ls	43549c <nftw@plt+0x3291c>  // b.plast
  435350:	sub	w1, w0, #0x11
  435354:	cmp	w1, #0x1
  435358:	b.ls	4354d8 <nftw@plt+0x32958>  // b.plast
  43535c:	sub	w1, w0, #0xf
  435360:	cmp	w1, #0x1
  435364:	b.ls	435514 <nftw@plt+0x32994>  // b.plast
  435368:	sub	w0, w0, #0xd
  43536c:	cmp	w0, #0x1
  435370:	b.ls	4354c4 <nftw@plt+0x32944>  // b.plast
  435374:	mov	x0, x19
  435378:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  43537c:	add	x1, x1, #0xfc0
  435380:	bl	41ee78 <nftw@plt+0x1c2f8>
  435384:	ldrb	w0, [x19, #1128]
  435388:	cbnz	w0, 435460 <nftw@plt+0x328e0>
  43538c:	nop
  435390:	cbz	w20, 435400 <nftw@plt+0x32880>
  435394:	mov	x0, x19
  435398:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43539c:	add	x1, x1, #0xb8
  4353a0:	bl	41ee78 <nftw@plt+0x1c2f8>
  4353a4:	ldrb	w0, [x19, #1122]
  4353a8:	cbnz	w0, 435418 <nftw@plt+0x32898>
  4353ac:	ldp	x19, x20, [sp, #16]
  4353b0:	ldp	x29, x30, [sp], #32
  4353b4:	ret
  4353b8:	cmp	w0, #0x15
  4353bc:	b.eq	4354b0 <nftw@plt+0x32930>  // b.none
  4353c0:	cmp	w0, #0x6
  4353c4:	b.eq	4354ec <nftw@plt+0x3296c>  // b.none
  4353c8:	cmp	w0, #0xa
  4353cc:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  4353d0:	b.eq	435444 <nftw@plt+0x328c4>  // b.none
  4353d4:	cmp	w0, #0x9
  4353d8:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  4353dc:	b.eq	435500 <nftw@plt+0x32980>  // b.none
  4353e0:	cmp	w0, #0x8
  4353e4:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  4353e8:	b.eq	435528 <nftw@plt+0x329a8>  // b.none
  4353ec:	ldrb	w0, [x19, #1152]
  4353f0:	cbnz	w0, 43553c <nftw@plt+0x329bc>
  4353f4:	ldrb	w0, [x19, #1128]
  4353f8:	cbnz	w0, 435478 <nftw@plt+0x328f8>
  4353fc:	cbnz	w20, 435394 <nftw@plt+0x32814>
  435400:	mov	x0, x19
  435404:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435408:	add	x1, x1, #0xd0
  43540c:	bl	41ee78 <nftw@plt+0x1c2f8>
  435410:	ldrb	w0, [x19, #1122]
  435414:	cbz	w0, 4353ac <nftw@plt+0x3282c>
  435418:	mov	x0, x19
  43541c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435420:	ldp	x19, x20, [sp, #16]
  435424:	add	x1, x1, #0xe8
  435428:	ldp	x29, x30, [sp], #32
  43542c:	b	41ee78 <nftw@plt+0x1c2f8>
  435430:	mov	x0, x19
  435434:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  435438:	add	x1, x1, #0xf50
  43543c:	bl	41ee78 <nftw@plt+0x1c2f8>
  435440:	b	435338 <nftw@plt+0x327b8>
  435444:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435448:	mov	x0, x19
  43544c:	add	x1, x1, #0x8
  435450:	bl	41ee78 <nftw@plt+0x1c2f8>
  435454:	nop
  435458:	ldrb	w0, [x19, #1128]
  43545c:	cbz	w0, 435390 <nftw@plt+0x32810>
  435460:	ldrb	w0, [x19, #1120]
  435464:	cbz	w0, 435478 <nftw@plt+0x328f8>
  435468:	ldr	w0, [x19, #1116]
  43546c:	sub	w0, w0, #0xb
  435470:	cmp	w0, #0x1
  435474:	b.ls	435390 <nftw@plt+0x32810>  // b.plast
  435478:	mov	x0, x19
  43547c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435480:	add	x1, x1, #0x88
  435484:	bl	41ee78 <nftw@plt+0x1c2f8>
  435488:	mov	x0, x19
  43548c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435490:	add	x1, x1, #0xa0
  435494:	bl	41ee78 <nftw@plt+0x1c2f8>
  435498:	b	435390 <nftw@plt+0x32810>
  43549c:	mov	x0, x19
  4354a0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4354a4:	add	x1, x1, #0xf60
  4354a8:	bl	41ee78 <nftw@plt+0x1c2f8>
  4354ac:	b	435458 <nftw@plt+0x328d8>
  4354b0:	mov	x0, x19
  4354b4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4354b8:	add	x1, x1, #0xfd8
  4354bc:	bl	41ee78 <nftw@plt+0x1c2f8>
  4354c0:	b	435458 <nftw@plt+0x328d8>
  4354c4:	mov	x0, x19
  4354c8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4354cc:	add	x1, x1, #0xfa8
  4354d0:	bl	41ee78 <nftw@plt+0x1c2f8>
  4354d4:	b	435458 <nftw@plt+0x328d8>
  4354d8:	mov	x0, x19
  4354dc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4354e0:	add	x1, x1, #0xf78
  4354e4:	bl	41ee78 <nftw@plt+0x1c2f8>
  4354e8:	b	435458 <nftw@plt+0x328d8>
  4354ec:	mov	x0, x19
  4354f0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  4354f4:	add	x1, x1, #0xfe8
  4354f8:	bl	41ee78 <nftw@plt+0x1c2f8>
  4354fc:	b	435458 <nftw@plt+0x328d8>
  435500:	mov	x0, x19
  435504:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435508:	add	x1, x1, #0x28
  43550c:	bl	41ee78 <nftw@plt+0x1c2f8>
  435510:	b	435458 <nftw@plt+0x328d8>
  435514:	mov	x0, x19
  435518:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1c5a0>
  43551c:	add	x1, x1, #0xf90
  435520:	bl	41ee78 <nftw@plt+0x1c2f8>
  435524:	b	435458 <nftw@plt+0x328d8>
  435528:	mov	x0, x19
  43552c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435530:	add	x1, x1, #0x48
  435534:	bl	41ee78 <nftw@plt+0x1c2f8>
  435538:	b	435458 <nftw@plt+0x328d8>
  43553c:	mov	x0, x19
  435540:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435544:	add	x1, x1, #0x68
  435548:	bl	41ee78 <nftw@plt+0x1c2f8>
  43554c:	b	435458 <nftw@plt+0x328d8>
  435550:	stp	x29, x30, [sp, #-48]!
  435554:	mov	x29, sp
  435558:	stp	x19, x20, [sp, #16]
  43555c:	mov	x19, x0
  435560:	ldrb	w0, [x0, #1120]
  435564:	cbz	w0, 43556c <nftw@plt+0x329ec>
  435568:	strb	wzr, [x19, #1138]
  43556c:	ldrb	w2, [x19, #1155]
  435570:	ldrb	w1, [x19, #1136]
  435574:	cbz	w2, 4355b8 <nftw@plt+0x32a38>
  435578:	ldrb	w2, [x19, #1244]
  43557c:	cbnz	w2, 435588 <nftw@plt+0x32a08>
  435580:	mov	w2, #0x1                   	// #1
  435584:	strb	w2, [x19, #24]
  435588:	strb	wzr, [x19, #1160]
  43558c:	cmp	w1, #0x2
  435590:	b.eq	435660 <nftw@plt+0x32ae0>  // b.none
  435594:	ldrb	w1, [x19, #1159]
  435598:	cbz	w0, 4355d8 <nftw@plt+0x32a58>
  43559c:	ldrb	w0, [x19, #1158]
  4355a0:	cbz	w0, 4355d8 <nftw@plt+0x32a58>
  4355a4:	cmp	w1, #0x0
  4355a8:	stp	x21, x22, [sp, #32]
  4355ac:	mov	w21, #0xffffff85            	// #-123
  4355b0:	csinc	w21, w21, wzr, ne  // ne = any
  4355b4:	b	4355e4 <nftw@plt+0x32a64>
  4355b8:	cmp	w1, #0x2
  4355bc:	ldrb	w1, [x19, #1160]
  4355c0:	b.eq	435674 <nftw@plt+0x32af4>  // b.none
  4355c4:	cbz	w1, 435594 <nftw@plt+0x32a14>
  4355c8:	strb	wzr, [x19, #1125]
  4355cc:	strb	wzr, [x19, #1136]
  4355d0:	ldrb	w1, [x19, #1159]
  4355d4:	cbnz	w0, 43559c <nftw@plt+0x32a1c>
  4355d8:	cbz	w1, 435654 <nftw@plt+0x32ad4>
  4355dc:	stp	x21, x22, [sp, #32]
  4355e0:	mov	w21, #0xffffff84            	// #-124
  4355e4:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  4355e8:	add	x20, x20, #0x218
  4355ec:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  4355f0:	add	x22, x20, #0x150
  4355f4:	add	x1, x1, #0xf8
  4355f8:	add	x20, x20, #0x200
  4355fc:	mov	w2, #0x3                   	// #3
  435600:	b	43560c <nftw@plt+0x32a8c>
  435604:	ldrh	w2, [x22, #8]
  435608:	ldr	x1, [x22]
  43560c:	mov	x0, x19
  435610:	bl	425de0 <nftw@plt+0x23260>
  435614:	ldrh	w2, [x0, #18]
  435618:	ldrb	w1, [x0, #16]
  43561c:	add	x22, x22, #0x10
  435620:	mov	w3, w2
  435624:	ubfx	x2, x2, #2, #8
  435628:	and	w1, w1, #0xfffffffe
  43562c:	orr	w2, w21, w2
  435630:	strb	w1, [x0, #16]
  435634:	bfi	w3, w2, #2, #8
  435638:	strh	w3, [x0, #18]
  43563c:	ldurh	w2, [x22, #-6]
  435640:	cmp	x22, x20
  435644:	bfi	w1, w2, #1, #7
  435648:	strb	w1, [x0, #16]
  43564c:	b.ne	435604 <nftw@plt+0x32a84>  // b.any
  435650:	ldp	x21, x22, [sp, #32]
  435654:	ldp	x19, x20, [sp, #16]
  435658:	ldp	x29, x30, [sp], #48
  43565c:	ret
  435660:	ldrb	w1, [x19, #1125]
  435664:	cmp	w1, #0x0
  435668:	cset	w1, eq  // eq = none
  43566c:	strb	w1, [x19, #1136]
  435670:	b	435594 <nftw@plt+0x32a14>
  435674:	ldrb	w2, [x19, #1125]
  435678:	cmp	w2, #0x0
  43567c:	cset	w2, eq  // eq = none
  435680:	strb	w2, [x19, #1136]
  435684:	cbnz	w1, 4355c8 <nftw@plt+0x32a48>
  435688:	b	435594 <nftw@plt+0x32a14>
  43568c:	nop
  435690:	stp	x29, x30, [sp, #-48]!
  435694:	mov	x29, sp
  435698:	stp	x19, x20, [sp, #16]
  43569c:	mov	x19, x0
  4356a0:	ldr	w0, [x0, #1200]
  4356a4:	mov	x20, x1
  4356a8:	cbz	w0, 4356bc <nftw@plt+0x32b3c>
  4356ac:	ldr	x0, [x19, #712]
  4356b0:	cbz	x0, 435768 <nftw@plt+0x32be8>
  4356b4:	mov	x1, x20
  4356b8:	bl	4321d8 <nftw@plt+0x2f658>
  4356bc:	add	x2, x19, #0xd8
  4356c0:	mov	x1, x20
  4356c4:	mov	w6, #0x0                   	// #0
  4356c8:	mov	w5, #0x0                   	// #0
  4356cc:	mov	w4, #0x0                   	// #0
  4356d0:	mov	w3, #0x0                   	// #0
  4356d4:	mov	x0, x19
  4356d8:	bl	424440 <nftw@plt+0x218c0>
  4356dc:	str	x0, [x19, #288]
  4356e0:	bl	424430 <nftw@plt+0x218b0>
  4356e4:	tst	w0, #0xff
  4356e8:	mov	x0, #0x0                   	// #0
  4356ec:	b.ne	435710 <nftw@plt+0x32b90>  // b.any
  4356f0:	ldr	x1, [x19, #288]
  4356f4:	mov	x0, x19
  4356f8:	mov	w3, #0x0                   	// #0
  4356fc:	mov	w2, #0x0                   	// #0
  435700:	bl	424ce8 <nftw@plt+0x22168>
  435704:	ldrb	w1, [x19, #1155]
  435708:	mov	x0, x20
  43570c:	cbnz	w1, 43571c <nftw@plt+0x32b9c>
  435710:	ldp	x19, x20, [sp, #16]
  435714:	ldp	x29, x30, [sp], #48
  435718:	ret
  43571c:	mov	x0, x19
  435720:	bl	428f58 <nftw@plt+0x263d8>
  435724:	mov	x20, x0
  435728:	ldrb	w0, [x0, #4]
  43572c:	cmp	w0, #0x25
  435730:	b.eq	435774 <nftw@plt+0x32bf4>  // b.none
  435734:	mov	x0, x19
  435738:	mov	w1, #0x1                   	// #1
  43573c:	bl	42e590 <nftw@plt+0x2ba10>
  435740:	ldr	x1, [x19, #40]
  435744:	mov	w2, #0x18                  	// #24
  435748:	ldp	x19, x20, [sp, #16]
  43574c:	ldr	w0, [x1, #12]
  435750:	ldr	x1, [x1]
  435754:	sub	w0, w0, #0x1
  435758:	ldp	x29, x30, [sp], #48
  43575c:	smaddl	x0, w0, w2, x1
  435760:	ldr	x0, [x0, #8]
  435764:	ret
  435768:	bl	432068 <nftw@plt+0x2f4e8>
  43576c:	str	x0, [x19, #712]
  435770:	b	4356b4 <nftw@plt+0x32b34>
  435774:	str	x21, [sp, #32]
  435778:	mov	w0, #0x1                   	// #1
  43577c:	strb	w0, [x19, #16]
  435780:	mov	x0, x19
  435784:	bl	428f58 <nftw@plt+0x263d8>
  435788:	mov	x21, x0
  43578c:	mov	w1, #0x1                   	// #1
  435790:	mov	x0, x19
  435794:	bl	42e590 <nftw@plt+0x2ba10>
  435798:	strb	wzr, [x19, #16]
  43579c:	ldrb	w0, [x21, #4]
  4357a0:	cmp	w0, #0x37
  4357a4:	b.eq	4357b0 <nftw@plt+0x32c30>  // b.none
  4357a8:	ldr	x21, [sp, #32]
  4357ac:	b	435734 <nftw@plt+0x32bb4>
  4357b0:	ldrh	w1, [x20, #6]
  4357b4:	mov	x0, x19
  4357b8:	and	w1, w1, #0x1
  4357bc:	bl	41d690 <nftw@plt+0x1ab10>
  4357c0:	cbz	w0, 4357a8 <nftw@plt+0x32c28>
  4357c4:	mov	x0, x19
  4357c8:	bl	434ca0 <nftw@plt+0x32120>
  4357cc:	ldr	x21, [sp, #32]
  4357d0:	b	435740 <nftw@plt+0x32bc0>
  4357d4:	nop
  4357d8:	stp	x29, x30, [sp, #-32]!
  4357dc:	mov	x29, sp
  4357e0:	stp	x19, x20, [sp, #16]
  4357e4:	mov	x20, x1
  4357e8:	mov	x19, x0
  4357ec:	ldrb	w1, [x0, #1151]
  4357f0:	cbz	w1, 435800 <nftw@plt+0x32c80>
  4357f4:	b	43582c <nftw@plt+0x32cac>
  4357f8:	mov	x0, x19
  4357fc:	bl	41e590 <nftw@plt+0x1ba10>
  435800:	ldr	x0, [x19]
  435804:	cbnz	x0, 4357f8 <nftw@plt+0x32c78>
  435808:	ldr	w0, [x19, #1200]
  43580c:	cmp	w0, #0x0
  435810:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  435814:	b.ne	435850 <nftw@plt+0x32cd0>  // b.any
  435818:	ldrb	w0, [x19, #1131]
  43581c:	cbnz	w0, 435840 <nftw@plt+0x32cc0>
  435820:	ldp	x19, x20, [sp, #16]
  435824:	ldp	x29, x30, [sp], #32
  435828:	ret
  43582c:	adrp	x1, 42d000 <nftw@plt+0x2a480>
  435830:	mov	x2, #0x0                   	// #0
  435834:	add	x1, x1, #0xad8
  435838:	bl	425e28 <nftw@plt+0x232a8>
  43583c:	b	435800 <nftw@plt+0x32c80>
  435840:	mov	x0, x19
  435844:	ldp	x19, x20, [sp, #16]
  435848:	ldp	x29, x30, [sp], #32
  43584c:	b	425620 <nftw@plt+0x22aa0>
  435850:	ldr	x0, [x19, #712]
  435854:	mov	x1, x20
  435858:	mov	w2, #0x48                  	// #72
  43585c:	bl	432438 <nftw@plt+0x2f8b8>
  435860:	ldrb	w0, [x19, #1205]
  435864:	cbz	w0, 435818 <nftw@plt+0x32c98>
  435868:	ldr	x0, [x19, #712]
  43586c:	mov	x1, x20
  435870:	bl	4326a8 <nftw@plt+0x2fb28>
  435874:	b	435818 <nftw@plt+0x32c98>
  435878:	stp	x29, x30, [sp, #-96]!
  43587c:	mov	x7, x0
  435880:	mov	w6, w1
  435884:	add	x4, sp, #0x18
  435888:	mov	x29, sp
  43588c:	mov	x0, x4
  435890:	stp	xzr, xzr, [sp, #32]
  435894:	mov	x1, #0x48                  	// #72
  435898:	str	x7, [sp, #24]
  43589c:	str	w6, [sp, #32]
  4358a0:	stp	xzr, xzr, [sp, #48]
  4358a4:	stp	xzr, xzr, [sp, #64]
  4358a8:	stp	xzr, xzr, [sp, #80]
  4358ac:	bl	435b68 <nftw@plt+0x32fe8>
  4358b0:	cbz	x0, 4358dc <nftw@plt+0x32d5c>
  4358b4:	ldp	x2, x3, [sp, #24]
  4358b8:	stp	x2, x3, [x0]
  4358bc:	ldp	x2, x3, [sp, #40]
  4358c0:	stp	x2, x3, [x0, #16]
  4358c4:	ldp	x2, x3, [sp, #56]
  4358c8:	stp	x2, x3, [x0, #32]
  4358cc:	ldp	x2, x3, [sp, #72]
  4358d0:	stp	x2, x3, [x0, #48]
  4358d4:	ldr	x1, [sp, #88]
  4358d8:	str	x1, [x0, #64]
  4358dc:	ldp	x29, x30, [sp], #96
  4358e0:	ret
  4358e4:	nop
  4358e8:	stp	x29, x30, [sp, #-48]!
  4358ec:	mov	x29, sp
  4358f0:	str	x19, [sp, #16]
  4358f4:	mov	x19, x1
  4358f8:	add	x1, sp, #0x2c
  4358fc:	str	wzr, [sp, #44]
  435900:	bl	458250 <_obstack_memory_used@@Base+0xe7f0>
  435904:	mov	x1, x0
  435908:	ldr	w0, [x19]
  43590c:	cmp	w0, #0x0
  435910:	b.gt	435964 <nftw@plt+0x32de4>
  435914:	ldr	w2, [sp, #44]
  435918:	ldr	w0, [x19, #44]
  43591c:	cmp	w2, #0x0
  435920:	cset	x2, eq  // eq = none
  435924:	sub	x1, x1, x2
  435928:	ldr	x5, [x19, #16]
  43592c:	ldr	x4, [x19, #32]
  435930:	cbnz	w0, 43597c <nftw@plt+0x32dfc>
  435934:	mov	x0, x4
  435938:	mov	w3, #0x0                   	// #0
  43593c:	mov	x4, #0x0                   	// #0
  435940:	mov	x2, #0x0                   	// #0
  435944:	blr	x5
  435948:	str	w0, [x19, #40]
  43594c:	cmp	w0, #0x0
  435950:	mov	w0, #0x5                   	// #5
  435954:	csel	w0, wzr, w0, eq  // eq = none
  435958:	ldr	x19, [sp, #16]
  43595c:	ldp	x29, x30, [sp], #48
  435960:	ret
  435964:	sub	w1, w0, #0x1
  435968:	str	w1, [x19]
  43596c:	mov	w0, #0x0                   	// #0
  435970:	ldr	x19, [sp, #16]
  435974:	ldp	x29, x30, [sp], #48
  435978:	ret
  43597c:	ldr	x0, [x19, #8]
  435980:	mov	x2, x5
  435984:	ldr	x3, [x19, #24]
  435988:	bl	436070 <nftw@plt+0x334f0>
  43598c:	str	w0, [x19, #40]
  435990:	b	43594c <nftw@plt+0x32dcc>
  435994:	nop
  435998:	stp	x29, x30, [sp, #-80]!
  43599c:	add	w5, w1, #0x1
  4359a0:	mov	x7, x2
  4359a4:	mov	x6, x3
  4359a8:	mov	x29, sp
  4359ac:	mov	x3, #0x0                   	// #0
  4359b0:	mov	x2, #0x0                   	// #0
  4359b4:	mov	x1, #0x1000                	// #4096
  4359b8:	str	x19, [sp, #16]
  4359bc:	mov	x19, x0
  4359c0:	str	w5, [sp, #32]
  4359c4:	stp	x0, x7, [sp, #40]
  4359c8:	stp	x6, x4, [sp, #56]
  4359cc:	str	wzr, [sp, #72]
  4359d0:	bl	435b68 <nftw@plt+0x32fe8>
  4359d4:	cbz	x0, 435a18 <nftw@plt+0x32e98>
  4359d8:	mov	x1, x0
  4359dc:	mov	x4, #0x0                   	// #0
  4359e0:	mov	x0, x19
  4359e4:	mov	x3, #0x0                   	// #0
  4359e8:	mov	x2, #0x1000                	// #4096
  4359ec:	bl	435a90 <nftw@plt+0x32f10>
  4359f0:	mov	w0, #0x1                   	// #1
  4359f4:	str	w0, [sp, #76]
  4359f8:	add	x1, sp, #0x20
  4359fc:	adrp	x0, 435000 <nftw@plt+0x32480>
  435a00:	add	x0, x0, #0x8e8
  435a04:	bl	458898 <_obstack_memory_used@@Base+0xee38>
  435a08:	ldr	w0, [sp, #72]
  435a0c:	ldr	x19, [sp, #16]
  435a10:	ldp	x29, x30, [sp], #80
  435a14:	ret
  435a18:	str	wzr, [sp, #76]
  435a1c:	b	4359f8 <nftw@plt+0x32e78>
  435a20:	ldr	x9, [x0, #64]
  435a24:	add	x4, x0, #0x40
  435a28:	mov	x5, #0x0                   	// #0
  435a2c:	mov	x3, x9
  435a30:	cbnz	x9, 435a4c <nftw@plt+0x32ecc>
  435a34:	b	435a80 <nftw@plt+0x32f00>
  435a38:	ldr	x7, [x4]
  435a3c:	ldr	x8, [x3, #8]
  435a40:	ldr	x7, [x7, #8]
  435a44:	cmp	x8, x7
  435a48:	csel	x4, x4, x6, cs  // cs = hs, nlast
  435a4c:	mov	x6, x3
  435a50:	add	x5, x5, #0x1
  435a54:	ldr	x3, [x3]
  435a58:	cbnz	x3, 435a38 <nftw@plt+0x32eb8>
  435a5c:	cmp	x5, #0xf
  435a60:	b.ls	435a80 <nftw@plt+0x32f00>  // b.plast
  435a64:	ldr	x3, [x4]
  435a68:	ldr	x5, [x3, #8]
  435a6c:	cmp	x5, x2
  435a70:	b.cs	435a88 <nftw@plt+0x32f08>  // b.hs, b.nlast
  435a74:	ldr	x3, [x3]
  435a78:	str	x3, [x4]
  435a7c:	ldr	x9, [x0, #64]
  435a80:	stp	x9, x2, [x1]
  435a84:	str	x1, [x0, #64]
  435a88:	ret
  435a8c:	nop
  435a90:	stp	x29, x30, [sp, #-48]!
  435a94:	mov	x29, sp
  435a98:	stp	x19, x20, [sp, #16]
  435a9c:	mov	x19, x0
  435aa0:	mov	x20, x2
  435aa4:	str	x21, [sp, #32]
  435aa8:	mov	x0, #0xffff                	// #65535
  435aac:	mov	x21, x1
  435ab0:	cmp	x2, x0
  435ab4:	b.hi	435ad8 <nftw@plt+0x32f58>  // b.pmore
  435ab8:	ldr	w0, [x19, #8]
  435abc:	cbnz	w0, 435af8 <nftw@plt+0x32f78>
  435ac0:	cmp	x2, #0xf
  435ac4:	b.hi	435b40 <nftw@plt+0x32fc0>  // b.pmore
  435ac8:	ldp	x19, x20, [sp, #16]
  435acc:	ldr	x21, [sp, #32]
  435ad0:	ldp	x29, x30, [sp], #48
  435ad4:	ret
  435ad8:	bl	402760 <getpagesize@plt>
  435adc:	sxtw	x0, w0
  435ae0:	orr	x1, x21, x20
  435ae4:	sub	x0, x0, #0x1
  435ae8:	tst	x0, x1
  435aec:	b.eq	435b54 <nftw@plt+0x32fd4>  // b.none
  435af0:	ldr	w0, [x19, #8]
  435af4:	cbz	w0, 435b40 <nftw@plt+0x32fc0>
  435af8:	add	x0, x19, #0x3c
  435afc:	mov	w2, #0x1                   	// #1
  435b00:	ldxr	w1, [x0]
  435b04:	stxr	w3, w2, [x0]
  435b08:	cbnz	w3, 435b00 <nftw@plt+0x32f80>
  435b0c:	dmb	ish
  435b10:	cbnz	w1, 435ac8 <nftw@plt+0x32f48>
  435b14:	cmp	x20, #0xf
  435b18:	b.hi	435b40 <nftw@plt+0x32fc0>  // b.pmore
  435b1c:	nop
  435b20:	ldr	w0, [x19, #8]
  435b24:	cbz	w0, 435ac8 <nftw@plt+0x32f48>
  435b28:	add	x19, x19, #0x3c
  435b2c:	stlr	wzr, [x19]
  435b30:	ldp	x19, x20, [sp, #16]
  435b34:	ldr	x21, [sp, #32]
  435b38:	ldp	x29, x30, [sp], #48
  435b3c:	ret
  435b40:	mov	x2, x20
  435b44:	mov	x1, x21
  435b48:	mov	x0, x19
  435b4c:	bl	435a20 <nftw@plt+0x32ea0>
  435b50:	b	435b20 <nftw@plt+0x32fa0>
  435b54:	mov	x1, x20
  435b58:	mov	x0, x21
  435b5c:	bl	402970 <munmap@plt>
  435b60:	cbnz	w0, 435af0 <nftw@plt+0x32f70>
  435b64:	b	435ac8 <nftw@plt+0x32f48>
  435b68:	stp	x29, x30, [sp, #-64]!
  435b6c:	mov	x29, sp
  435b70:	stp	x19, x20, [sp, #16]
  435b74:	mov	x20, x1
  435b78:	ldr	w1, [x0, #8]
  435b7c:	stp	x21, x22, [sp, #32]
  435b80:	mov	x22, x3
  435b84:	stp	x23, x24, [sp, #48]
  435b88:	mov	x23, x0
  435b8c:	mov	x24, x2
  435b90:	cbnz	w1, 435c00 <nftw@plt+0x33080>
  435b94:	ldr	x4, [x0, #64]
  435b98:	add	x6, x0, #0x40
  435b9c:	cbnz	x4, 435bac <nftw@plt+0x3302c>
  435ba0:	b	435c38 <nftw@plt+0x330b8>
  435ba4:	mov	x6, x19
  435ba8:	cbz	x4, 435c28 <nftw@plt+0x330a8>
  435bac:	ldr	x5, [x4, #8]
  435bb0:	mov	x19, x4
  435bb4:	ldr	x4, [x4]
  435bb8:	cmp	x5, x20
  435bbc:	b.cc	435ba4 <nftw@plt+0x33024>  // b.lo, b.ul, b.last
  435bc0:	add	x1, x20, #0x7
  435bc4:	str	x4, [x6]
  435bc8:	and	x1, x1, #0xfffffffffffffff8
  435bcc:	cmp	x5, x1
  435bd0:	b.ls	435be0 <nftw@plt+0x33060>  // b.plast
  435bd4:	sub	x2, x5, x1
  435bd8:	cmp	x2, #0xf
  435bdc:	b.hi	435ca4 <nftw@plt+0x33124>  // b.pmore
  435be0:	ldr	w0, [x23, #8]
  435be4:	cbnz	w0, 435cdc <nftw@plt+0x3315c>
  435be8:	mov	x0, x19
  435bec:	ldp	x19, x20, [sp, #16]
  435bf0:	ldp	x21, x22, [sp, #32]
  435bf4:	ldp	x23, x24, [sp, #48]
  435bf8:	ldp	x29, x30, [sp], #64
  435bfc:	ret
  435c00:	add	x0, x0, #0x3c
  435c04:	mov	w2, #0x1                   	// #1
  435c08:	ldxr	w1, [x0]
  435c0c:	stxr	w3, w2, [x0]
  435c10:	cbnz	w3, 435c08 <nftw@plt+0x33088>
  435c14:	dmb	ish
  435c18:	cbnz	w1, 435c38 <nftw@plt+0x330b8>
  435c1c:	ldr	x4, [x23, #64]
  435c20:	add	x6, x23, #0x40
  435c24:	cbnz	x4, 435bac <nftw@plt+0x3302c>
  435c28:	ldr	w0, [x23, #8]
  435c2c:	cbz	w0, 435c38 <nftw@plt+0x330b8>
  435c30:	add	x0, x23, #0x3c
  435c34:	stlr	wzr, [x0]
  435c38:	bl	402760 <getpagesize@plt>
  435c3c:	sub	x21, x20, #0x1
  435c40:	sxtw	x1, w0
  435c44:	mov	x5, #0x0                   	// #0
  435c48:	add	x21, x21, x1
  435c4c:	neg	x1, x1
  435c50:	and	x21, x21, x1
  435c54:	mov	w4, #0xffffffff            	// #-1
  435c58:	mov	x1, x21
  435c5c:	mov	w3, #0x22                  	// #34
  435c60:	mov	w2, #0x3                   	// #3
  435c64:	mov	x0, #0x0                   	// #0
  435c68:	bl	4028b0 <mmap@plt>
  435c6c:	mov	x19, x0
  435c70:	cmn	x0, #0x1
  435c74:	b.eq	435cb4 <nftw@plt+0x33134>  // b.none
  435c78:	add	x1, x20, #0x7
  435c7c:	and	x1, x1, #0xfffffffffffffff8
  435c80:	cmp	x21, x1
  435c84:	b.ls	435be8 <nftw@plt+0x33068>  // b.plast
  435c88:	sub	x2, x21, x1
  435c8c:	mov	x4, x22
  435c90:	add	x1, x0, x1
  435c94:	mov	x3, x24
  435c98:	mov	x0, x23
  435c9c:	bl	435a90 <nftw@plt+0x32f10>
  435ca0:	b	435be8 <nftw@plt+0x33068>
  435ca4:	add	x1, x19, x1
  435ca8:	mov	x0, x23
  435cac:	bl	435a20 <nftw@plt+0x32ea0>
  435cb0:	b	435be0 <nftw@plt+0x33060>
  435cb4:	mov	x19, #0x0                   	// #0
  435cb8:	cbz	x24, 435be8 <nftw@plt+0x33068>
  435cbc:	bl	402aa0 <__errno_location@plt>
  435cc0:	mov	x2, x0
  435cc4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435cc8:	mov	x0, x22
  435ccc:	add	x1, x1, #0x4d8
  435cd0:	ldr	w2, [x2]
  435cd4:	blr	x24
  435cd8:	b	435be8 <nftw@plt+0x33068>
  435cdc:	add	x0, x23, #0x3c
  435ce0:	stlr	wzr, [x0]
  435ce4:	b	435be8 <nftw@plt+0x33068>
  435ce8:	stp	x29, x30, [sp, #-96]!
  435cec:	mov	x29, sp
  435cf0:	stp	x23, x24, [sp, #48]
  435cf4:	ldp	x23, x5, [x4, #8]
  435cf8:	stp	x19, x20, [sp, #16]
  435cfc:	mov	x19, x4
  435d00:	stp	x21, x22, [sp, #32]
  435d04:	mov	x21, x1
  435d08:	add	x20, x1, x23
  435d0c:	cmp	x5, x1
  435d10:	b.cc	435d3c <nftw@plt+0x331bc>  // b.lo, b.ul, b.last
  435d14:	ldr	x22, [x4]
  435d18:	add	x22, x22, x23
  435d1c:	sub	x5, x5, x21
  435d20:	stp	x20, x5, [x19, #8]
  435d24:	mov	x0, x22
  435d28:	ldp	x19, x20, [sp, #16]
  435d2c:	ldp	x21, x22, [sp, #32]
  435d30:	ldp	x23, x24, [sp, #48]
  435d34:	ldp	x29, x30, [sp], #96
  435d38:	ret
  435d3c:	stp	x25, x26, [sp, #64]
  435d40:	mov	x24, x0
  435d44:	mov	x25, x2
  435d48:	mov	x26, x3
  435d4c:	cbnz	x23, 435dc4 <nftw@plt+0x33244>
  435d50:	lsl	x20, x20, #4
  435d54:	mov	x3, x26
  435d58:	mov	x2, x25
  435d5c:	mov	x1, x20
  435d60:	mov	x0, x24
  435d64:	bl	435b68 <nftw@plt+0x32fe8>
  435d68:	mov	x22, x0
  435d6c:	cbz	x0, 435df8 <nftw@plt+0x33278>
  435d70:	ldr	x23, [x19, #8]
  435d74:	str	x27, [sp, #80]
  435d78:	ldr	x27, [x19]
  435d7c:	cbz	x27, 435dac <nftw@plt+0x3322c>
  435d80:	mov	x2, x23
  435d84:	mov	x1, x27
  435d88:	bl	402490 <memcpy@plt>
  435d8c:	ldr	x2, [x19, #16]
  435d90:	mov	x4, x26
  435d94:	mov	x3, x25
  435d98:	mov	x1, x27
  435d9c:	add	x2, x23, x2
  435da0:	mov	x0, x24
  435da4:	bl	435a90 <nftw@plt+0x32f10>
  435da8:	ldr	x23, [x19, #8]
  435dac:	sub	x5, x20, x23
  435db0:	add	x20, x21, x23
  435db4:	ldp	x25, x26, [sp, #64]
  435db8:	ldr	x27, [sp, #80]
  435dbc:	str	x22, [x19]
  435dc0:	b	435d18 <nftw@plt+0x33198>
  435dc4:	bl	402760 <getpagesize@plt>
  435dc8:	cmp	x20, w0, sxtw
  435dcc:	lsl	x6, x20, #1
  435dd0:	sxtw	x5, w0
  435dd4:	b.cs	435de4 <nftw@plt+0x33264>  // b.hs, b.nlast
  435dd8:	cmp	x5, x6
  435ddc:	csel	x20, x5, x6, ls  // ls = plast
  435de0:	b	435d54 <nftw@plt+0x331d4>
  435de4:	sub	x20, x6, #0x1
  435de8:	neg	x0, x5
  435dec:	add	x20, x20, x5
  435df0:	and	x20, x20, x0
  435df4:	b	435d54 <nftw@plt+0x331d4>
  435df8:	ldp	x25, x26, [sp, #64]
  435dfc:	b	435d24 <nftw@plt+0x331a4>
  435e00:	ldp	x0, x2, [x1]
  435e04:	add	x2, x0, x2
  435e08:	stp	x2, xzr, [x1]
  435e0c:	ret
  435e10:	stp	x29, x30, [sp, #-32]!
  435e14:	mov	x4, x3
  435e18:	mov	x3, x2
  435e1c:	mov	x29, sp
  435e20:	ldp	x2, x6, [x1, #8]
  435e24:	str	x19, [sp, #16]
  435e28:	mov	x19, x1
  435e2c:	ldr	x5, [x19]
  435e30:	add	x1, x2, #0x7
  435e34:	and	x1, x1, #0xfffffffffffffff8
  435e38:	add	x2, x2, x6
  435e3c:	sub	x2, x2, x1
  435e40:	add	x1, x5, x1
  435e44:	bl	435a90 <nftw@plt+0x32f10>
  435e48:	str	xzr, [x19, #16]
  435e4c:	ldr	x0, [x19, #8]
  435e50:	cbnz	x0, 435e58 <nftw@plt+0x332d8>
  435e54:	str	xzr, [x19]
  435e58:	mov	w0, #0x1                   	// #1
  435e5c:	ldr	x19, [sp, #16]
  435e60:	ldp	x29, x30, [sp], #32
  435e64:	ret
  435e68:	stp	x29, x30, [sp, #-160]!
  435e6c:	mov	x29, sp
  435e70:	stp	x19, x20, [sp, #16]
  435e74:	mov	x20, x0
  435e78:	ldr	w0, [x0, #8]
  435e7c:	stp	x21, x22, [sp, #32]
  435e80:	mov	x22, x1
  435e84:	stp	x23, x24, [sp, #48]
  435e88:	mov	x23, x2
  435e8c:	cbnz	w0, 435ee8 <nftw@plt+0x33368>
  435e90:	ldr	w0, [x20, #56]
  435e94:	cbnz	w0, 435ebc <nftw@plt+0x3333c>
  435e98:	ldr	x1, [x20, #24]
  435e9c:	str	x1, [sp, #88]
  435ea0:	mov	w0, #0x1                   	// #1
  435ea4:	cbz	x1, 435f10 <nftw@plt+0x33390>
  435ea8:	ldp	x19, x20, [sp, #16]
  435eac:	ldp	x21, x22, [sp, #32]
  435eb0:	ldp	x23, x24, [sp, #48]
  435eb4:	ldp	x29, x30, [sp], #160
  435eb8:	ret
  435ebc:	mov	x0, x23
  435ec0:	mov	w2, #0xffffffff            	// #-1
  435ec4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435ec8:	add	x1, x1, #0x508
  435ecc:	blr	x22
  435ed0:	mov	w0, #0x0                   	// #0
  435ed4:	ldp	x19, x20, [sp, #16]
  435ed8:	ldp	x21, x22, [sp, #32]
  435edc:	ldp	x23, x24, [sp, #48]
  435ee0:	ldp	x29, x30, [sp], #160
  435ee4:	ret
  435ee8:	add	x0, x20, #0x38
  435eec:	ldar	w0, [x0]
  435ef0:	cbnz	w0, 435ebc <nftw@plt+0x3333c>
  435ef4:	ldr	w0, [x20, #8]
  435ef8:	cbz	w0, 435e98 <nftw@plt+0x33318>
  435efc:	add	x0, x20, #0x18
  435f00:	ldar	x1, [x0]
  435f04:	str	x1, [sp, #88]
  435f08:	mov	w0, #0x1                   	// #1
  435f0c:	cbnz	x1, 435ea8 <nftw@plt+0x33328>
  435f10:	adrp	x24, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435f14:	add	x24, x24, #0x530
  435f18:	stp	x25, x26, [sp, #64]
  435f1c:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435f20:	add	x26, sp, #0x54
  435f24:	add	x25, x25, #0x4e0
  435f28:	mov	w19, #0x0                   	// #0
  435f2c:	cmp	w19, #0x3
  435f30:	b.eq	436028 <nftw@plt+0x334a8>  // b.none
  435f34:	cmp	w19, #0x4
  435f38:	b.eq	436004 <nftw@plt+0x33484>  // b.none
  435f3c:	cmp	w19, #0x1
  435f40:	b.eq	435fc0 <nftw@plt+0x33440>  // b.none
  435f44:	cmp	w19, #0x2
  435f48:	b.ne	435fb8 <nftw@plt+0x33438>  // b.any
  435f4c:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  435f50:	add	x21, x21, #0x4f8
  435f54:	mov	x3, x26
  435f58:	mov	x2, x23
  435f5c:	mov	x1, x22
  435f60:	mov	x0, x21
  435f64:	bl	436170 <nftw@plt+0x335f0>
  435f68:	tbnz	w0, #31, 435ff8 <nftw@plt+0x33478>
  435f6c:	mov	w2, w0
  435f70:	mov	x4, x23
  435f74:	mov	x3, x22
  435f78:	mov	x1, x21
  435f7c:	add	x5, sp, #0x58
  435f80:	mov	x0, x20
  435f84:	bl	439038 <nftw@plt+0x364b8>
  435f88:	cbz	w0, 435fe0 <nftw@plt+0x33460>
  435f8c:	ldr	w0, [x20, #8]
  435f90:	ldr	x1, [sp, #88]
  435f94:	cbnz	w0, 436030 <nftw@plt+0x334b0>
  435f98:	ldp	x25, x26, [sp, #64]
  435f9c:	str	x1, [x20, #24]
  435fa0:	mov	w0, #0x1                   	// #1
  435fa4:	ldp	x19, x20, [sp, #16]
  435fa8:	ldp	x21, x22, [sp, #32]
  435fac:	ldp	x23, x24, [sp, #48]
  435fb0:	ldp	x29, x30, [sp], #160
  435fb4:	ret
  435fb8:	ldr	x21, [x20]
  435fbc:	cbnz	x21, 435f54 <nftw@plt+0x333d4>
  435fc0:	add	w19, w19, #0x1
  435fc4:	cmp	w19, #0x5
  435fc8:	b.ne	435f2c <nftw@plt+0x333ac>  // b.any
  435fcc:	ldr	x1, [x20]
  435fd0:	mov	x0, x23
  435fd4:	cbz	x1, 436044 <nftw@plt+0x334c4>
  435fd8:	mov	w2, #0x2                   	// #2
  435fdc:	blr	x22
  435fe0:	ldr	w0, [x20, #8]
  435fe4:	cbnz	w0, 436058 <nftw@plt+0x334d8>
  435fe8:	mov	w1, #0x1                   	// #1
  435fec:	ldp	x25, x26, [sp, #64]
  435ff0:	str	w1, [x20, #56]
  435ff4:	b	435ea8 <nftw@plt+0x33328>
  435ff8:	ldr	w0, [sp, #84]
  435ffc:	cbnz	w0, 435fc0 <nftw@plt+0x33440>
  436000:	b	435fe0 <nftw@plt+0x33460>
  436004:	bl	402630 <getpid@plt>
  436008:	sxtw	x3, w0
  43600c:	add	x1, sp, #0x60
  436010:	mov	x2, x24
  436014:	mov	x21, x1
  436018:	mov	x0, x1
  43601c:	mov	x1, #0x40                  	// #64
  436020:	bl	402600 <snprintf@plt>
  436024:	b	435f54 <nftw@plt+0x333d4>
  436028:	mov	x21, x25
  43602c:	b	435f54 <nftw@plt+0x333d4>
  436030:	add	x20, x20, #0x18
  436034:	stlr	x1, [x20]
  436038:	mov	w0, #0x1                   	// #1
  43603c:	ldp	x25, x26, [sp, #64]
  436040:	b	435ea8 <nftw@plt+0x33328>
  436044:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  436048:	mov	w2, #0x0                   	// #0
  43604c:	add	x1, x1, #0x548
  436050:	blr	x22
  436054:	b	435fe0 <nftw@plt+0x33460>
  436058:	mov	w0, #0x1                   	// #1
  43605c:	add	x20, x20, #0x38
  436060:	stlr	w0, [x20]
  436064:	ldp	x25, x26, [sp, #64]
  436068:	mov	w0, #0x0                   	// #0
  43606c:	b	435ea8 <nftw@plt+0x33328>
  436070:	stp	x29, x30, [sp, #-64]!
  436074:	mov	x29, sp
  436078:	stp	x19, x20, [sp, #16]
  43607c:	mov	x20, x3
  436080:	mov	x19, x0
  436084:	stp	x21, x22, [sp, #32]
  436088:	mov	x22, x1
  43608c:	mov	x21, x4
  436090:	mov	x1, x3
  436094:	str	x23, [sp, #48]
  436098:	mov	x23, x2
  43609c:	mov	x2, x4
  4360a0:	bl	435e68 <nftw@plt+0x332e8>
  4360a4:	cbz	w0, 4360e0 <nftw@plt+0x33560>
  4360a8:	ldr	w0, [x19, #56]
  4360ac:	cbnz	w0, 4360e0 <nftw@plt+0x33560>
  4360b0:	mov	x4, x21
  4360b4:	mov	x3, x20
  4360b8:	mov	x2, x23
  4360bc:	mov	x1, x22
  4360c0:	mov	x0, x19
  4360c4:	ldr	x5, [x19, #24]
  4360c8:	ldp	x19, x20, [sp, #16]
  4360cc:	mov	x16, x5
  4360d0:	ldp	x21, x22, [sp, #32]
  4360d4:	ldr	x23, [sp, #48]
  4360d8:	ldp	x29, x30, [sp], #64
  4360dc:	br	x16
  4360e0:	mov	w0, #0x0                   	// #0
  4360e4:	ldp	x19, x20, [sp, #16]
  4360e8:	ldp	x21, x22, [sp, #32]
  4360ec:	ldr	x23, [sp, #48]
  4360f0:	ldp	x29, x30, [sp], #64
  4360f4:	ret
  4360f8:	stp	x29, x30, [sp, #-64]!
  4360fc:	mov	x29, sp
  436100:	stp	x19, x20, [sp, #16]
  436104:	mov	x20, x3
  436108:	mov	x19, x0
  43610c:	stp	x21, x22, [sp, #32]
  436110:	mov	x22, x2
  436114:	mov	x21, x4
  436118:	mov	x2, x4
  43611c:	str	x23, [sp, #48]
  436120:	mov	x23, x1
  436124:	mov	x1, x3
  436128:	bl	435e68 <nftw@plt+0x332e8>
  43612c:	cbz	w0, 43615c <nftw@plt+0x335dc>
  436130:	ldr	w1, [x19, #56]
  436134:	mov	w0, #0x0                   	// #0
  436138:	cbnz	w1, 43615c <nftw@plt+0x335dc>
  43613c:	ldr	x5, [x19, #40]
  436140:	mov	x0, x19
  436144:	mov	x4, x21
  436148:	mov	x3, x20
  43614c:	mov	x2, x22
  436150:	mov	x1, x23
  436154:	blr	x5
  436158:	mov	w0, #0x1                   	// #1
  43615c:	ldp	x19, x20, [sp, #16]
  436160:	ldp	x21, x22, [sp, #32]
  436164:	ldr	x23, [sp, #48]
  436168:	ldp	x29, x30, [sp], #64
  43616c:	ret
  436170:	stp	x29, x30, [sp, #-64]!
  436174:	mov	x29, sp
  436178:	stp	x19, x20, [sp, #16]
  43617c:	stp	x21, x22, [sp, #32]
  436180:	mov	x22, x2
  436184:	mov	x21, x0
  436188:	str	x23, [sp, #48]
  43618c:	mov	x23, x1
  436190:	cbz	x3, 4361d4 <nftw@plt+0x33654>
  436194:	str	wzr, [x3]
  436198:	mov	x20, x3
  43619c:	mov	w1, #0x80000               	// #524288
  4361a0:	bl	402680 <open@plt>
  4361a4:	mov	w19, w0
  4361a8:	tbnz	w0, #31, 436200 <nftw@plt+0x33680>
  4361ac:	mov	w0, w19
  4361b0:	mov	w2, #0x1                   	// #1
  4361b4:	mov	w1, #0x2                   	// #2
  4361b8:	bl	402960 <fcntl@plt>
  4361bc:	mov	w0, w19
  4361c0:	ldp	x19, x20, [sp, #16]
  4361c4:	ldp	x21, x22, [sp, #32]
  4361c8:	ldr	x23, [sp, #48]
  4361cc:	ldp	x29, x30, [sp], #64
  4361d0:	ret
  4361d4:	mov	w1, #0x80000               	// #524288
  4361d8:	bl	402680 <open@plt>
  4361dc:	mov	w19, w0
  4361e0:	tbz	w0, #31, 4361ac <nftw@plt+0x3362c>
  4361e4:	bl	402aa0 <__errno_location@plt>
  4361e8:	ldr	w2, [x0]
  4361ec:	mov	x1, x21
  4361f0:	mov	x0, x22
  4361f4:	mov	w19, #0xffffffff            	// #-1
  4361f8:	blr	x23
  4361fc:	b	4361bc <nftw@plt+0x3363c>
  436200:	bl	402aa0 <__errno_location@plt>
  436204:	ldr	w1, [x0]
  436208:	cmp	w1, #0x2
  43620c:	b.ne	4361e8 <nftw@plt+0x33668>  // b.any
  436210:	mov	w0, #0x1                   	// #1
  436214:	mov	w19, #0xffffffff            	// #-1
  436218:	str	w0, [x20]
  43621c:	b	4361bc <nftw@plt+0x3363c>
  436220:	stp	x29, x30, [sp, #-32]!
  436224:	mov	x29, sp
  436228:	stp	x19, x20, [sp, #16]
  43622c:	mov	x19, x1
  436230:	mov	x20, x2
  436234:	bl	4027a0 <close@plt>
  436238:	tbnz	w0, #31, 43624c <nftw@plt+0x336cc>
  43623c:	mov	w0, #0x1                   	// #1
  436240:	ldp	x19, x20, [sp, #16]
  436244:	ldp	x29, x30, [sp], #32
  436248:	ret
  43624c:	bl	402aa0 <__errno_location@plt>
  436250:	mov	x2, x0
  436254:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  436258:	mov	x0, x20
  43625c:	add	x1, x1, #0x578
  436260:	ldr	w2, [x2]
  436264:	blr	x19
  436268:	mov	w0, #0x0                   	// #0
  43626c:	ldp	x19, x20, [sp, #16]
  436270:	ldp	x29, x30, [sp], #32
  436274:	ret
  436278:	stp	x29, x30, [sp, #-16]!
  43627c:	mov	x0, x4
  436280:	mov	w2, #0xffffffff            	// #-1
  436284:	mov	x29, sp
  436288:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43628c:	add	x1, x1, #0x580
  436290:	blr	x3
  436294:	mov	w0, #0x0                   	// #0
  436298:	ldp	x29, x30, [sp], #16
  43629c:	ret
  4362a0:	mov	x0, x4
  4362a4:	mov	x16, x3
  4362a8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  4362ac:	mov	w2, #0xffffffff            	// #-1
  4362b0:	add	x1, x1, #0x5a0
  4362b4:	br	x16
  4362b8:	ldr	x2, [x0, #8]
  4362bc:	mov	w3, #0xffffffff            	// #-1
  4362c0:	ldr	x1, [x1, #8]
  4362c4:	cmp	x2, x1
  4362c8:	cset	w0, hi  // hi = pmore
  4362cc:	csel	w0, w0, w3, cs  // cs = hs, nlast
  4362d0:	ret
  4362d4:	nop
  4362d8:	stp	x29, x30, [sp, #-176]!
  4362dc:	mov	x5, #0x0                   	// #0
  4362e0:	mov	x29, sp
  4362e4:	add	x9, sp, #0x90
  4362e8:	add	x10, sp, #0x70
  4362ec:	stp	x19, x20, [sp, #16]
  4362f0:	add	x20, x2, #0x1, lsl #12
  4362f4:	add	x19, sp, #0x50
  4362f8:	stp	xzr, xzr, [sp, #80]
  4362fc:	stp	xzr, xzr, [sp, #96]
  436300:	b	436320 <nftw@plt+0x337a0>
  436304:	add	w6, w6, #0x1
  436308:	strh	w8, [x10, x7]
  43630c:	strh	w8, [x9, x7]
  436310:	add	x5, x5, #0x1
  436314:	strh	w6, [x19, x4, lsl #1]
  436318:	cmp	x1, x5
  43631c:	b.eq	436368 <nftw@plt+0x337e8>  // b.none
  436320:	ldrb	w4, [x0, x5]
  436324:	and	w8, w5, #0xffff
  436328:	cmp	w4, #0xf
  43632c:	b.hi	436460 <nftw@plt+0x338e0>  // b.pmore
  436330:	sbfiz	x7, x4, #1, #32
  436334:	ldrh	w6, [x19, x7]
  436338:	cbz	w6, 436304 <nftw@plt+0x33784>
  43633c:	ldrh	w2, [x9, x7]
  436340:	strh	w8, [x20, x2, lsl #1]
  436344:	ldrb	w4, [x0, x5]
  436348:	add	x5, x5, #0x1
  43634c:	cmp	x1, x5
  436350:	lsl	x7, x4, #1
  436354:	ldrh	w6, [x19, x7]
  436358:	strh	w8, [x9, x7]
  43635c:	add	w6, w6, #0x1
  436360:	strh	w6, [x19, x4, lsl #1]
  436364:	b.ne	436320 <nftw@plt+0x337a0>  // b.any
  436368:	mov	x0, x3
  43636c:	mov	w1, #0x0                   	// #0
  436370:	mov	x2, #0x800                 	// #2048
  436374:	bl	4026f0 <memset@plt>
  436378:	add	x12, sp, #0x70
  43637c:	mov	x3, x0
  436380:	mov	x5, #0x0                   	// #0
  436384:	mov	w1, #0x0                   	// #0
  436388:	mov	w10, #0x1                   	// #1
  43638c:	lsl	x2, x5, #1
  436390:	add	x0, x19, x2
  436394:	ldrh	w0, [x0, #2]
  436398:	cbnz	w0, 436470 <nftw@plt+0x338f0>
  43639c:	add	x5, x5, #0x1
  4363a0:	cmp	x5, #0x8
  4363a4:	b.ne	43638c <nftw@plt+0x3380c>  // b.any
  4363a8:	mov	x8, x19
  4363ac:	add	x11, sp, #0x40
  4363b0:	mov	x2, #0x9                   	// #9
  4363b4:	mov	w9, #0x1                   	// #1
  4363b8:	b	4363cc <nftw@plt+0x3384c>
  4363bc:	add	x2, x2, #0x1
  4363c0:	add	x8, x8, #0x2
  4363c4:	cmp	x2, #0x10
  4363c8:	b.eq	436530 <nftw@plt+0x339b0>  // b.none
  4363cc:	ldrh	w7, [x8, #18]
  4363d0:	cbz	w7, 4363bc <nftw@plt+0x3383c>
  4363d4:	add	x0, x11, x2, lsl #1
  4363d8:	sub	w10, w2, #0x1
  4363dc:	mov	w5, #0x0                   	// #0
  4363e0:	mov	x6, #0x0                   	// #0
  4363e4:	sturh	w1, [x0, #-18]
  4363e8:	b	4363fc <nftw@plt+0x3387c>
  4363ec:	add	w6, w5, #0x1
  4363f0:	mov	x5, x6
  4363f4:	cmp	x2, w6, uxtw
  4363f8:	b.ls	436458 <nftw@plt+0x338d8>  // b.plast
  4363fc:	lsr	w0, w7, w5
  436400:	tbz	w0, #0, 4363ec <nftw@plt+0x3386c>
  436404:	sub	w0, w10, w5
  436408:	subs	x6, x2, x6
  43640c:	lsl	w0, w9, w0
  436410:	b.eq	436440 <nftw@plt+0x338c0>  // b.none
  436414:	tst	w1, w0
  436418:	b.eq	4364d4 <nftw@plt+0x33954>  // b.none
  43641c:	mov	w4, #0x0                   	// #0
  436420:	b	43642c <nftw@plt+0x338ac>
  436424:	tst	w1, w0
  436428:	b.eq	4364d4 <nftw@plt+0x33954>  // b.none
  43642c:	add	w4, w4, #0x1
  436430:	bic	w1, w1, w0
  436434:	lsr	w0, w0, #1
  436438:	cmp	x6, w4, uxtw
  43643c:	b.hi	436424 <nftw@plt+0x338a4>  // b.pmore
  436440:	lsl	w0, w9, w5
  436444:	bic	w7, w7, w0
  436448:	add	w6, w5, #0x1
  43644c:	mov	x5, x6
  436450:	cmp	x2, w6, uxtw
  436454:	b.hi	4363fc <nftw@plt+0x3387c>  // b.pmore
  436458:	cbz	w7, 4363bc <nftw@plt+0x3383c>
  43645c:	nop
  436460:	mov	w0, #0x0                   	// #0
  436464:	ldp	x19, x20, [sp, #16]
  436468:	ldp	x29, x30, [sp], #176
  43646c:	ret
  436470:	add	w4, w5, #0x1
  436474:	lsl	w4, w10, w4
  436478:	cmp	w4, w0
  43647c:	b.cc	436460 <nftw@plt+0x338e0>  // b.lo, b.ul, b.last
  436480:	add	x2, x2, x12
  436484:	and	x6, x0, #0xffff
  436488:	ldrh	w8, [x2, #2]
  43648c:	tst	w8, #0xfe00
  436490:	b.ne	436460 <nftw@plt+0x338e0>  // b.any
  436494:	sxtw	x4, w4
  436498:	ubfiz	w13, w5, #9, #7
  43649c:	lsl	w9, w10, w5
  4364a0:	mov	x11, #0x0                   	// #0
  4364a4:	cmp	w1, #0xff
  4364a8:	orr	w7, w13, w8
  4364ac:	mov	w0, w1
  4364b0:	b.ls	4364c8 <nftw@plt+0x33948>  // b.plast
  4364b4:	b	4364e4 <nftw@plt+0x33964>
  4364b8:	strh	w7, [x3, x0, lsl #1]
  4364bc:	add	x0, x0, x4
  4364c0:	cmp	x0, #0xff
  4364c4:	b.hi	4364e4 <nftw@plt+0x33964>  // b.pmore
  4364c8:	ldrh	w2, [x3, x0, lsl #1]
  4364cc:	cbz	w2, 4364b8 <nftw@plt+0x33938>
  4364d0:	b	436460 <nftw@plt+0x338e0>
  4364d4:	add	w1, w1, w0
  4364d8:	lsl	w0, w9, w5
  4364dc:	bic	w7, w7, w0
  4364e0:	b	436448 <nftw@plt+0x338c8>
  4364e4:	add	x11, x11, #0x1
  4364e8:	cmp	x11, x6
  4364ec:	b.cs	4364f8 <nftw@plt+0x33978>  // b.hs, b.nlast
  4364f0:	ubfiz	x8, x8, #1, #16
  4364f4:	ldrh	w8, [x20, x8]
  4364f8:	mov	w0, w9
  4364fc:	tst	w9, w1
  436500:	b.eq	436564 <nftw@plt+0x339e4>  // b.none
  436504:	nop
  436508:	lsr	w0, w0, #1
  43650c:	tst	w0, w1
  436510:	b.ne	436508 <nftw@plt+0x33988>  // b.any
  436514:	cbnz	w0, 436564 <nftw@plt+0x339e4>
  436518:	mov	w1, #0x0                   	// #0
  43651c:	cmp	x11, x6
  436520:	b.eq	43639c <nftw@plt+0x3381c>  // b.none
  436524:	tst	w8, #0xfe00
  436528:	b.eq	4364a4 <nftw@plt+0x33924>  // b.none
  43652c:	b	436460 <nftw@plt+0x338e0>
  436530:	add	x30, sp, #0x70
  436534:	add	x18, sp, #0x40
  436538:	mov	x6, #0x7                   	// #7
  43653c:	mov	x11, #0x0                   	// #0
  436540:	mov	w9, #0x1                   	// #1
  436544:	lsl	x0, x6, #1
  436548:	add	x1, x19, x0
  43654c:	ldrh	w8, [x1, #16]
  436550:	cbnz	w8, 436574 <nftw@plt+0x339f4>
  436554:	subs	x6, x6, #0x1
  436558:	b.ne	436544 <nftw@plt+0x339c4>  // b.any
  43655c:	mov	w0, #0x1                   	// #1
  436560:	b	436464 <nftw@plt+0x338e4>
  436564:	sub	w2, w0, #0x1
  436568:	and	w1, w2, w1
  43656c:	add	w1, w0, w1
  436570:	b	43651c <nftw@plt+0x3399c>
  436574:	add	x1, x0, x30
  436578:	add	x0, x0, x18
  43657c:	ubfiz	w13, w6, #9, #7
  436580:	lsl	w5, w9, w6
  436584:	add	w12, w13, #0x1, lsl #12
  436588:	add	w10, w6, #0x7
  43658c:	ldrh	w15, [x1, #16]
  436590:	and	x8, x8, #0xffff
  436594:	ldurh	w7, [x0, #-2]
  436598:	and	w12, w12, #0xffff
  43659c:	stp	x21, x22, [sp, #32]
  4365a0:	sxtw	x22, w5
  4365a4:	mov	w21, w6
  4365a8:	mov	w5, w5
  4365ac:	lsl	w10, w9, w10
  4365b0:	mov	x17, #0x0                   	// #0
  4365b4:	mov	x14, #0x0                   	// #0
  4365b8:	mov	x16, #0x0                   	// #0
  4365bc:	stp	x23, x24, [sp, #48]
  4365c0:	mov	x24, #0x100                 	// #256
  4365c4:	mov	w2, w17
  4365c8:	cmp	x24, w7, uxtb
  4365cc:	and	x1, x7, #0xff
  4365d0:	b.eq	436604 <nftw@plt+0x33a84>  // b.none
  4365d4:	lsl	x2, x1, #1
  4365d8:	ldrh	w0, [x3, x2]
  4365dc:	cbnz	w0, 436690 <nftw@plt+0x33b10>
  4365e0:	tst	x11, #0xfffffffffffffe00
  4365e4:	b.ne	43663c <nftw@plt+0x33abc>  // b.any
  4365e8:	add	w0, w12, w11
  4365ec:	mov	x14, x11
  4365f0:	mov	x24, x1
  4365f4:	add	x11, x11, x22
  4365f8:	mov	x17, x6
  4365fc:	strh	w0, [x3, x2]
  436600:	mov	w2, w21
  436604:	lsr	w0, w7, #8
  436608:	add	x1, x3, x14, lsl #1
  43660c:	lsl	w2, w9, w2
  436610:	add	x1, x1, #0x200
  436614:	cmp	x2, x0
  436618:	orr	w23, w13, w15
  43661c:	b.hi	436634 <nftw@plt+0x33ab4>  // b.pmore
  436620:	b	436648 <nftw@plt+0x33ac8>
  436624:	strh	w23, [x1, x0, lsl #1]
  436628:	add	x0, x0, x5
  43662c:	cmp	x2, x0
  436630:	b.ls	436648 <nftw@plt+0x33ac8>  // b.plast
  436634:	ldrh	w4, [x1, x0, lsl #1]
  436638:	cbz	w4, 436624 <nftw@plt+0x33aa4>
  43663c:	ldp	x21, x22, [sp, #32]
  436640:	ldp	x23, x24, [sp, #48]
  436644:	b	436460 <nftw@plt+0x338e0>
  436648:	add	x16, x16, #0x1
  43664c:	cmp	x8, x16
  436650:	b.ls	43665c <nftw@plt+0x33adc>  // b.plast
  436654:	ubfiz	x15, x15, #1, #16
  436658:	ldrh	w15, [x20, x15]
  43665c:	mov	w0, w10
  436660:	tst	w10, w7
  436664:	b.eq	4366b0 <nftw@plt+0x33b30>  // b.none
  436668:	lsr	w0, w0, #1
  43666c:	tst	w0, w7
  436670:	b.ne	436668 <nftw@plt+0x33ae8>  // b.any
  436674:	cbnz	w0, 4366b0 <nftw@plt+0x33b30>
  436678:	mov	w7, #0x0                   	// #0
  43667c:	cmp	x8, x16
  436680:	b.ne	4365c4 <nftw@plt+0x33a44>  // b.any
  436684:	ldp	x21, x22, [sp, #32]
  436688:	ldp	x23, x24, [sp, #48]
  43668c:	b	436554 <nftw@plt+0x339d4>
  436690:	tbz	w0, #12, 43663c <nftw@plt+0x33abc>
  436694:	ubfx	x17, x0, #9, #3
  436698:	and	x14, x0, #0x1ff
  43669c:	cmp	x17, x6
  4366a0:	mov	x2, x17
  4366a4:	b.cc	43663c <nftw@plt+0x33abc>  // b.lo, b.ul, b.last
  4366a8:	mov	x24, x1
  4366ac:	b	436604 <nftw@plt+0x33a84>
  4366b0:	sub	w1, w0, #0x1
  4366b4:	and	w7, w1, w7
  4366b8:	add	w7, w0, w7
  4366bc:	b	43667c <nftw@plt+0x33afc>
  4366c0:	mov	x10, x0
  4366c4:	mov	x11, x2
  4366c8:	mov	x0, x4
  4366cc:	ldr	w2, [x10, #8]
  4366d0:	cbnz	w2, 436758 <nftw@plt+0x33bd8>
  4366d4:	ldr	x2, [x10, #48]
  4366d8:	cbz	x2, 43673c <nftw@plt+0x33bbc>
  4366dc:	nop
  4366e0:	ldp	x9, x8, [x2, #8]
  4366e4:	mov	x7, #0x0                   	// #0
  4366e8:	add	x3, x8, x7
  4366ec:	cmp	x8, x7
  4366f0:	and	x5, x3, #0xfffffffffffffffe
  4366f4:	b.ls	436734 <nftw@plt+0x33bb4>  // b.plast
  4366f8:	lsr	x3, x3, #1
  4366fc:	add	x5, x5, x3
  436700:	add	x5, x9, x5, lsl #3
  436704:	ldr	x6, [x5, #8]
  436708:	cmp	x6, x1
  43670c:	b.hi	436750 <nftw@plt+0x33bd0>  // b.pmore
  436710:	ldr	x4, [x5, #16]
  436714:	add	x7, x3, #0x1
  436718:	add	x3, x6, x4
  43671c:	cmp	x3, x1
  436720:	b.ls	4366e8 <nftw@plt+0x33b68>  // b.plast
  436724:	ldr	x2, [x5]
  436728:	mov	x3, x6
  43672c:	mov	x16, x11
  436730:	br	x16
  436734:	ldr	x2, [x2]
  436738:	cbnz	x2, 4366e0 <nftw@plt+0x33b60>
  43673c:	mov	x16, x11
  436740:	mov	x4, #0x0                   	// #0
  436744:	mov	x3, #0x0                   	// #0
  436748:	mov	x2, #0x0                   	// #0
  43674c:	br	x16
  436750:	mov	x8, x3
  436754:	b	4366e8 <nftw@plt+0x33b68>
  436758:	add	x10, x10, #0x30
  43675c:	nop
  436760:	ldar	x10, [x10]
  436764:	cbz	x10, 43673c <nftw@plt+0x33bbc>
  436768:	ldp	x9, x8, [x10, #8]
  43676c:	mov	x7, #0x0                   	// #0
  436770:	add	x3, x8, x7
  436774:	cmp	x8, x7
  436778:	and	x5, x3, #0xfffffffffffffffe
  43677c:	b.ls	436760 <nftw@plt+0x33be0>  // b.plast
  436780:	lsr	x3, x3, #1
  436784:	add	x5, x5, x3
  436788:	add	x5, x9, x5, lsl #3
  43678c:	ldr	x6, [x5, #8]
  436790:	cmp	x6, x1
  436794:	b.hi	4367bc <nftw@plt+0x33c3c>  // b.pmore
  436798:	ldr	x4, [x5, #16]
  43679c:	add	x7, x3, #0x1
  4367a0:	add	x3, x6, x4
  4367a4:	cmp	x3, x1
  4367a8:	b.ls	436770 <nftw@plt+0x33bf0>  // b.plast
  4367ac:	ldr	x2, [x5]
  4367b0:	mov	x3, x6
  4367b4:	mov	x16, x11
  4367b8:	br	x16
  4367bc:	mov	x8, x3
  4367c0:	b	436770 <nftw@plt+0x33bf0>
  4367c4:	nop
  4367c8:	stp	x29, x30, [sp, #-144]!
  4367cc:	mov	x29, sp
  4367d0:	stp	x27, x28, [sp, #80]
  4367d4:	add	x28, x2, x4
  4367d8:	mov	x27, x5
  4367dc:	stp	x19, x20, [sp, #16]
  4367e0:	mov	x20, x6
  4367e4:	stp	x21, x22, [sp, #32]
  4367e8:	mov	x22, x2
  4367ec:	mov	x21, x7
  4367f0:	stp	x23, x24, [sp, #48]
  4367f4:	mov	x23, x0
  4367f8:	mov	x0, x5
  4367fc:	stp	x25, x26, [sp, #64]
  436800:	mov	x25, x4
  436804:	stp	x3, x1, [sp, #112]
  436808:	bl	4024f0 <strlen@plt>
  43680c:	mov	x24, x0
  436810:	add	x0, x28, x0
  436814:	mov	x3, x21
  436818:	add	x26, x0, #0x1
  43681c:	mov	x2, x20
  436820:	mov	x1, x26
  436824:	str	x0, [sp, #104]
  436828:	mov	x0, x23
  43682c:	bl	435b68 <nftw@plt+0x32fe8>
  436830:	cbz	x0, 4368c0 <nftw@plt+0x33d40>
  436834:	ldr	x8, [sp, #120]
  436838:	mov	x19, x0
  43683c:	mov	x2, x22
  436840:	mov	x1, x8
  436844:	bl	402490 <memcpy@plt>
  436848:	ldr	x1, [sp, #112]
  43684c:	mov	x2, x25
  436850:	add	x0, x19, x22
  436854:	bl	402490 <memcpy@plt>
  436858:	mov	x2, x24
  43685c:	mov	x1, x27
  436860:	add	x0, x19, x28
  436864:	bl	402490 <memcpy@plt>
  436868:	ldr	x0, [sp, #104]
  43686c:	add	x3, sp, #0x8c
  436870:	mov	x2, x21
  436874:	mov	x1, x20
  436878:	strb	wzr, [x19, x0]
  43687c:	mov	x0, x19
  436880:	bl	436170 <nftw@plt+0x335f0>
  436884:	mov	w22, w0
  436888:	mov	x4, x21
  43688c:	mov	x3, x20
  436890:	mov	x2, x26
  436894:	mov	x1, x19
  436898:	mov	x0, x23
  43689c:	bl	435a90 <nftw@plt+0x32f10>
  4368a0:	mov	w0, w22
  4368a4:	ldp	x19, x20, [sp, #16]
  4368a8:	ldp	x21, x22, [sp, #32]
  4368ac:	ldp	x23, x24, [sp, #48]
  4368b0:	ldp	x25, x26, [sp, #64]
  4368b4:	ldp	x27, x28, [sp, #80]
  4368b8:	ldp	x29, x30, [sp], #144
  4368bc:	ret
  4368c0:	mov	w22, #0xffffffff            	// #-1
  4368c4:	b	4368a0 <nftw@plt+0x33d20>
  4368c8:	stp	x29, x30, [sp, #-256]!
  4368cc:	mov	x29, sp
  4368d0:	stp	x19, x20, [sp, #16]
  4368d4:	mov	x20, x0
  4368d8:	mov	x19, x1
  4368dc:	stp	x21, x22, [sp, #32]
  4368e0:	mov	x21, x3
  4368e4:	mov	x22, x4
  4368e8:	stp	x27, x28, [sp, #80]
  4368ec:	add	x27, sp, #0x80
  4368f0:	stp	x23, x24, [sp, #48]
  4368f4:	mov	x24, #0x0                   	// #0
  4368f8:	stp	x25, x26, [sp, #64]
  4368fc:	mov	x25, #0x0                   	// #0
  436900:	str	x2, [sp, #104]
  436904:	mov	x2, x27
  436908:	mov	x1, x19
  43690c:	mov	w0, #0x0                   	// #0
  436910:	bl	4029c0 <__lxstat@plt>
  436914:	tbnz	w0, #31, 4369a0 <nftw@plt+0x33e20>
  436918:	ldr	w0, [sp, #144]
  43691c:	and	w0, w0, #0xf000
  436920:	cmp	w0, #0xa, lsl #12
  436924:	b.ne	4369a0 <nftw@plt+0x33e20>  // b.any
  436928:	mov	x28, #0x80                  	// #128
  43692c:	b	436954 <nftw@plt+0x33dd4>
  436930:	cmp	x1, x0
  436934:	b.hi	436a14 <nftw@plt+0x33e94>  // b.pmore
  436938:	mov	x2, x28
  43693c:	mov	x1, x26
  436940:	mov	x4, x22
  436944:	mov	x3, x21
  436948:	mov	x0, x20
  43694c:	lsl	x28, x28, #1
  436950:	bl	435a90 <nftw@plt+0x32f10>
  436954:	mov	x2, x21
  436958:	mov	x3, x22
  43695c:	mov	x1, x28
  436960:	mov	x0, x20
  436964:	bl	435b68 <nftw@plt+0x32fe8>
  436968:	mov	x26, x0
  43696c:	mov	x2, x28
  436970:	mov	x0, x19
  436974:	cbz	x26, 4369a0 <nftw@plt+0x33e20>
  436978:	mov	x1, x26
  43697c:	bl	402590 <readlink@plt>
  436980:	sub	x1, x28, #0x1
  436984:	tbz	x0, #63, 436930 <nftw@plt+0x33db0>
  436988:	mov	x2, x28
  43698c:	mov	x1, x26
  436990:	mov	x4, x22
  436994:	mov	x3, x21
  436998:	mov	x0, x20
  43699c:	bl	435a90 <nftw@plt+0x32f10>
  4369a0:	mov	x0, x19
  4369a4:	mov	w1, #0x2f                  	// #47
  4369a8:	bl	4027b0 <strrchr@plt>
  4369ac:	cbz	x0, 436b90 <nftw@plt+0x34010>
  4369b0:	add	x0, x0, #0x1
  4369b4:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x105a0>
  4369b8:	sub	x23, x0, x19
  4369bc:	ldr	x5, [sp, #104]
  4369c0:	add	x3, x3, #0xbd0
  4369c4:	mov	x7, x22
  4369c8:	mov	x6, x21
  4369cc:	mov	x2, x23
  4369d0:	mov	x1, x19
  4369d4:	mov	x0, x20
  4369d8:	mov	x4, #0x0                   	// #0
  4369dc:	bl	4367c8 <nftw@plt+0x33c48>
  4369e0:	mov	w27, w0
  4369e4:	tbnz	w0, #31, 436aec <nftw@plt+0x33f6c>
  4369e8:	cmp	x24, #0x0
  4369ec:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  4369f0:	b.ne	436b58 <nftw@plt+0x33fd8>  // b.any
  4369f4:	mov	w0, w27
  4369f8:	ldp	x19, x20, [sp, #16]
  4369fc:	ldp	x21, x22, [sp, #32]
  436a00:	ldp	x23, x24, [sp, #48]
  436a04:	ldp	x25, x26, [sp, #64]
  436a08:	ldp	x27, x28, [sp, #80]
  436a0c:	ldp	x29, x30, [sp], #256
  436a10:	ret
  436a14:	strb	wzr, [x26, x0]
  436a18:	ldrb	w0, [x26]
  436a1c:	cmp	w0, #0x2f
  436a20:	b.eq	436ac0 <nftw@plt+0x33f40>  // b.none
  436a24:	mov	x0, x19
  436a28:	mov	w1, #0x2f                  	// #47
  436a2c:	bl	4027b0 <strrchr@plt>
  436a30:	cbz	x0, 436ac0 <nftw@plt+0x33f40>
  436a34:	add	x23, x0, #0x1
  436a38:	mov	x0, x26
  436a3c:	sub	x23, x23, x19
  436a40:	bl	4024f0 <strlen@plt>
  436a44:	add	x1, x23, #0x1
  436a48:	mov	x3, x22
  436a4c:	add	x0, x1, x0
  436a50:	mov	x2, x21
  436a54:	mov	x1, x0
  436a58:	str	x0, [sp, #112]
  436a5c:	mov	x0, x20
  436a60:	bl	435b68 <nftw@plt+0x32fe8>
  436a64:	str	x0, [sp, #120]
  436a68:	cbz	x0, 436ba0 <nftw@plt+0x34020>
  436a6c:	mov	x1, x19
  436a70:	mov	x2, x23
  436a74:	bl	402490 <memcpy@plt>
  436a78:	ldr	x3, [sp, #120]
  436a7c:	mov	x0, x26
  436a80:	add	x23, x3, x23
  436a84:	bl	4024f0 <strlen@plt>
  436a88:	mov	x19, x0
  436a8c:	mov	x1, x26
  436a90:	mov	x2, x19
  436a94:	mov	x0, x23
  436a98:	bl	402490 <memcpy@plt>
  436a9c:	mov	x2, x28
  436aa0:	strb	wzr, [x23, x19]
  436aa4:	ldp	x28, x3, [sp, #112]
  436aa8:	mov	x1, x26
  436aac:	mov	x4, x22
  436ab0:	mov	x0, x20
  436ab4:	mov	x26, x3
  436ab8:	mov	x3, x21
  436abc:	bl	435a90 <nftw@plt+0x32f10>
  436ac0:	cbz	x24, 436adc <nftw@plt+0x33f5c>
  436ac4:	mov	x2, x25
  436ac8:	mov	x1, x24
  436acc:	mov	x4, x22
  436ad0:	mov	x3, x21
  436ad4:	mov	x0, x20
  436ad8:	bl	435a90 <nftw@plt+0x32f10>
  436adc:	mov	x24, x26
  436ae0:	mov	x25, x28
  436ae4:	mov	x19, x26
  436ae8:	b	436904 <nftw@plt+0x33d84>
  436aec:	ldr	x5, [sp, #104]
  436af0:	mov	x7, x22
  436af4:	mov	x6, x21
  436af8:	mov	x2, x23
  436afc:	mov	x1, x19
  436b00:	mov	x0, x20
  436b04:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  436b08:	mov	x4, #0x7                   	// #7
  436b0c:	add	x3, x3, #0x5c8
  436b10:	bl	4367c8 <nftw@plt+0x33c48>
  436b14:	mov	w27, w0
  436b18:	tbz	w0, #31, 4369e8 <nftw@plt+0x33e68>
  436b1c:	ldr	x5, [sp, #104]
  436b20:	mov	x4, x23
  436b24:	mov	x3, x19
  436b28:	mov	x7, x22
  436b2c:	mov	x6, x21
  436b30:	mov	x0, x20
  436b34:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  436b38:	mov	x2, #0xf                   	// #15
  436b3c:	add	x1, x1, #0x5d0
  436b40:	bl	4367c8 <nftw@plt+0x33c48>
  436b44:	cmp	w0, #0x0
  436b48:	csinv	w27, w0, wzr, ge  // ge = tcont
  436b4c:	cmp	x24, #0x0
  436b50:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  436b54:	b.eq	4369f4 <nftw@plt+0x33e74>  // b.none
  436b58:	mov	x4, x22
  436b5c:	mov	x3, x21
  436b60:	mov	x2, x25
  436b64:	mov	x1, x24
  436b68:	mov	x0, x20
  436b6c:	bl	435a90 <nftw@plt+0x32f10>
  436b70:	mov	w0, w27
  436b74:	ldp	x19, x20, [sp, #16]
  436b78:	ldp	x21, x22, [sp, #32]
  436b7c:	ldp	x23, x24, [sp, #48]
  436b80:	ldp	x25, x26, [sp, #64]
  436b84:	ldp	x27, x28, [sp, #80]
  436b88:	ldp	x29, x30, [sp], #256
  436b8c:	ret
  436b90:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x105a0>
  436b94:	mov	x23, #0x0                   	// #0
  436b98:	add	x19, x3, #0xbd0
  436b9c:	b	4369bc <nftw@plt+0x33e3c>
  436ba0:	mov	w27, #0xffffffff            	// #-1
  436ba4:	b	4369e8 <nftw@plt+0x33e68>
  436ba8:	stp	x29, x30, [sp, #-224]!
  436bac:	cmp	x1, #0x4
  436bb0:	mov	x29, sp
  436bb4:	stp	x19, x20, [sp, #16]
  436bb8:	mov	x19, x3
  436bbc:	stp	x21, x22, [sp, #32]
  436bc0:	add	x21, x0, x1
  436bc4:	mov	x22, x1
  436bc8:	stp	x23, x24, [sp, #48]
  436bcc:	mov	x23, x0
  436bd0:	add	x0, x3, x4
  436bd4:	str	x0, [sp, #104]
  436bd8:	mov	x24, x4
  436bdc:	b.le	437674 <nftw@plt+0x34af4>
  436be0:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  436be4:	mov	x13, x2
  436be8:	add	x0, x20, #0x818
  436bec:	mov	x5, x23
  436bf0:	mov	x20, x3
  436bf4:	str	x0, [sp, #112]
  436bf8:	add	x0, x0, #0x200
  436bfc:	str	x0, [sp, #120]
  436c00:	ldrb	w0, [x5]
  436c04:	and	w1, w0, #0xf
  436c08:	cmp	w1, #0x8
  436c0c:	b.ne	437064 <nftw@plt+0x344e4>  // b.any
  436c10:	cmp	w0, #0x7f
  436c14:	b.hi	437064 <nftw@plt+0x344e4>  // b.pmore
  436c18:	ldrb	w1, [x5, #1]
  436c1c:	ldrh	w0, [x5]
  436c20:	rev16	w0, w0
  436c24:	tbnz	w1, #5, 437064 <nftw@plt+0x344e4>
  436c28:	mov	x1, #0x4211                	// #16913
  436c2c:	and	x0, x0, #0xffff
  436c30:	movk	x1, #0x2108, lsl #16
  436c34:	movk	x1, #0x1084, lsl #32
  436c38:	movk	x1, #0x842, lsl #48
  436c3c:	umulh	x2, x0, x1
  436c40:	sub	x1, x0, x2
  436c44:	add	x1, x2, x1, lsr #1
  436c48:	lsr	x1, x1, #4
  436c4c:	lsl	x2, x1, #5
  436c50:	sub	x1, x2, x1
  436c54:	cmp	x0, x1
  436c58:	b.ne	437064 <nftw@plt+0x344e4>  // b.any
  436c5c:	add	x5, x5, #0x2
  436c60:	ands	x10, x5, #0x3
  436c64:	b.eq	4375bc <nftw@plt+0x34a3c>  // b.none
  436c68:	mov	x10, #0x0                   	// #0
  436c6c:	mov	w3, #0x0                   	// #0
  436c70:	ldrb	w0, [x5], #1
  436c74:	lsl	x0, x0, x3
  436c78:	tst	x5, #0x3
  436c7c:	orr	x10, x10, x0
  436c80:	add	w3, w3, #0x8
  436c84:	b.ne	436c70 <nftw@plt+0x340f0>  // b.any
  436c88:	cmp	w3, #0xe
  436c8c:	b.hi	436cb0 <nftw@plt+0x34130>  // b.pmore
  436c90:	sub	x0, x21, x5
  436c94:	cmp	x0, #0x3
  436c98:	b.le	437064 <nftw@plt+0x344e4>
  436c9c:	ldr	w0, [x5], #4
  436ca0:	lsl	x0, x0, x3
  436ca4:	add	w3, w3, #0x20
  436ca8:	prfm	pldl1strm, [x5]
  436cac:	orr	x10, x10, x0
  436cb0:	ubfx	w0, w10, #1, #2
  436cb4:	sub	w7, w3, #0x3
  436cb8:	cmp	w0, #0x3
  436cbc:	b.eq	437064 <nftw@plt+0x344e4>  // b.none
  436cc0:	cbz	w0, 4370f0 <nftw@plt+0x34570>
  436cc4:	stp	x25, x26, [sp, #64]
  436cc8:	cmp	w0, #0x1
  436ccc:	lsr	x6, x10, #3
  436cd0:	stp	x27, x28, [sp, #80]
  436cd4:	b.eq	43727c <nftw@plt+0x346fc>  // b.none
  436cd8:	cmp	w7, #0xe
  436cdc:	b.hi	436d00 <nftw@plt+0x34180>  // b.pmore
  436ce0:	sub	x0, x21, x5
  436ce4:	cmp	x0, #0x3
  436ce8:	b.le	43707c <nftw@plt+0x344fc>
  436cec:	ldr	w0, [x5], #4
  436cf0:	lsl	x0, x0, x7
  436cf4:	add	w7, w3, #0x1d
  436cf8:	prfm	pldl1strm, [x5]
  436cfc:	orr	x6, x6, x0
  436d00:	and	w26, w6, #0x1f
  436d04:	ubfx	w28, w6, #5, #5
  436d08:	add	w26, w26, #0x101
  436d0c:	add	w28, w28, #0x1
  436d10:	cmp	w26, #0x11e
  436d14:	ubfx	w1, w6, #10, #4
  436d18:	ccmp	w28, #0x1e, #0x2, ls  // ls = plast
  436d1c:	add	w1, w1, #0x4
  436d20:	lsr	x2, x6, #14
  436d24:	sub	w3, w7, #0xe
  436d28:	b.hi	43707c <nftw@plt+0x344fc>  // b.pmore
  436d2c:	stp	xzr, xzr, [sp, #200]
  436d30:	cmp	w3, #0xe
  436d34:	add	x0, sp, #0xc8
  436d38:	strh	wzr, [sp, #216]
  436d3c:	strb	wzr, [sp, #218]
  436d40:	b.hi	436d64 <nftw@plt+0x341e4>  // b.pmore
  436d44:	sub	x6, x21, x5
  436d48:	cmp	x6, #0x3
  436d4c:	b.le	43707c <nftw@plt+0x344fc>
  436d50:	ldr	w6, [x5], #4
  436d54:	lsl	x6, x6, x3
  436d58:	add	w3, w7, #0x12
  436d5c:	prfm	pldl1strm, [x5]
  436d60:	orr	x2, x2, x6
  436d64:	and	w6, w2, #0x7
  436d68:	strb	w6, [sp, #216]
  436d6c:	ubfx	w6, w2, #3, #3
  436d70:	strb	w6, [sp, #217]
  436d74:	ubfx	w6, w2, #6, #3
  436d78:	strb	w6, [sp, #218]
  436d7c:	ubfx	w6, w2, #9, #3
  436d80:	strb	w6, [sp, #200]
  436d84:	sub	w7, w3, #0xc
  436d88:	cmp	w1, #0x4
  436d8c:	lsr	x6, x2, #12
  436d90:	b.eq	436f40 <nftw@plt+0x343c0>  // b.none
  436d94:	and	w6, w6, #0x7
  436d98:	strb	w6, [sp, #208]
  436d9c:	cmp	w1, #0x5
  436da0:	lsr	x6, x2, #15
  436da4:	sub	w7, w3, #0xf
  436da8:	b.eq	436f40 <nftw@plt+0x343c0>  // b.none
  436dac:	cmp	w7, #0xe
  436db0:	b.hi	436dd4 <nftw@plt+0x34254>  // b.pmore
  436db4:	sub	x2, x21, x5
  436db8:	cmp	x2, #0x3
  436dbc:	b.le	43707c <nftw@plt+0x344fc>
  436dc0:	ldr	w2, [x5], #4
  436dc4:	lsl	x2, x2, x7
  436dc8:	add	w7, w3, #0x11
  436dcc:	prfm	pldl1strm, [x5]
  436dd0:	orr	x6, x6, x2
  436dd4:	and	w2, w6, #0x7
  436dd8:	strb	w2, [sp, #207]
  436ddc:	cmp	w1, #0x6
  436de0:	lsr	x2, x6, #3
  436de4:	b.eq	4375dc <nftw@plt+0x34a5c>  // b.none
  436de8:	and	w2, w2, #0x7
  436dec:	strb	w2, [sp, #209]
  436df0:	cmp	w1, #0x7
  436df4:	lsr	x2, x6, #6
  436df8:	b.eq	4375f0 <nftw@plt+0x34a70>  // b.none
  436dfc:	and	w2, w2, #0x7
  436e00:	strb	w2, [sp, #206]
  436e04:	cmp	w1, #0x8
  436e08:	lsr	x2, x6, #9
  436e0c:	b.eq	437668 <nftw@plt+0x34ae8>  // b.none
  436e10:	and	w2, w2, #0x7
  436e14:	strb	w2, [sp, #210]
  436e18:	cmp	w1, #0x9
  436e1c:	lsr	x2, x6, #12
  436e20:	b.eq	4375c4 <nftw@plt+0x34a44>  // b.none
  436e24:	and	w2, w2, #0x7
  436e28:	strb	w2, [sp, #205]
  436e2c:	lsr	x6, x6, #15
  436e30:	cmp	w1, #0xa
  436e34:	sub	w2, w7, #0xf
  436e38:	b.eq	437918 <nftw@plt+0x34d98>  // b.none
  436e3c:	cmp	w2, #0xe
  436e40:	b.hi	436e64 <nftw@plt+0x342e4>  // b.pmore
  436e44:	sub	x3, x21, x5
  436e48:	cmp	x3, #0x3
  436e4c:	b.le	43707c <nftw@plt+0x344fc>
  436e50:	ldr	w3, [x5], #4
  436e54:	lsl	x3, x3, x2
  436e58:	add	w2, w7, #0x11
  436e5c:	prfm	pldl1strm, [x5]
  436e60:	orr	x6, x6, x3
  436e64:	and	w3, w6, #0x7
  436e68:	strb	w3, [sp, #211]
  436e6c:	cmp	w1, #0xb
  436e70:	lsr	x3, x6, #3
  436e74:	b.eq	437920 <nftw@plt+0x34da0>  // b.none
  436e78:	and	w3, w3, #0x7
  436e7c:	strb	w3, [sp, #204]
  436e80:	cmp	w1, #0xc
  436e84:	lsr	x3, x6, #6
  436e88:	b.eq	437940 <nftw@plt+0x34dc0>  // b.none
  436e8c:	and	w3, w3, #0x7
  436e90:	strb	w3, [sp, #212]
  436e94:	cmp	w1, #0xd
  436e98:	lsr	x3, x6, #9
  436e9c:	b.eq	43794c <nftw@plt+0x34dcc>  // b.none
  436ea0:	and	w3, w3, #0x7
  436ea4:	strb	w3, [sp, #203]
  436ea8:	cmp	w1, #0xe
  436eac:	lsr	x3, x6, #12
  436eb0:	b.eq	437960 <nftw@plt+0x34de0>  // b.none
  436eb4:	and	w3, w3, #0x7
  436eb8:	strb	w3, [sp, #213]
  436ebc:	lsr	x6, x6, #15
  436ec0:	cmp	w1, #0xf
  436ec4:	sub	w7, w2, #0xf
  436ec8:	b.eq	436f40 <nftw@plt+0x343c0>  // b.none
  436ecc:	cmp	w7, #0xe
  436ed0:	b.hi	436ef4 <nftw@plt+0x34374>  // b.pmore
  436ed4:	sub	x3, x21, x5
  436ed8:	cmp	x3, #0x3
  436edc:	b.le	43707c <nftw@plt+0x344fc>
  436ee0:	ldr	w3, [x5], #4
  436ee4:	lsl	x3, x3, x7
  436ee8:	add	w7, w2, #0x11
  436eec:	prfm	pldl1strm, [x5]
  436ef0:	orr	x6, x6, x3
  436ef4:	and	w2, w6, #0x7
  436ef8:	strb	w2, [sp, #202]
  436efc:	cmp	w1, #0x10
  436f00:	lsr	x2, x6, #3
  436f04:	b.eq	4375dc <nftw@plt+0x34a5c>  // b.none
  436f08:	and	w2, w2, #0x7
  436f0c:	strb	w2, [sp, #214]
  436f10:	cmp	w1, #0x11
  436f14:	lsr	x2, x6, #6
  436f18:	b.eq	4375f0 <nftw@plt+0x34a70>  // b.none
  436f1c:	and	w2, w2, #0x7
  436f20:	strb	w2, [sp, #201]
  436f24:	cmp	w1, #0x12
  436f28:	lsr	x1, x6, #9
  436f2c:	b.eq	4375d0 <nftw@plt+0x34a50>  // b.none
  436f30:	lsr	x6, x6, #12
  436f34:	sub	w7, w7, #0xc
  436f38:	and	w1, w1, #0x7
  436f3c:	strb	w1, [sp, #215]
  436f40:	mov	x3, x13
  436f44:	mov	x2, x13
  436f48:	mov	x1, #0x13                  	// #19
  436f4c:	stp	x13, x10, [sp, #128]
  436f50:	str	x5, [sp, #144]
  436f54:	str	w7, [sp, #152]
  436f58:	str	x6, [sp, #160]
  436f5c:	bl	4362d8 <nftw@plt+0x33758>
  436f60:	cbz	w0, 43707c <nftw@plt+0x344fc>
  436f64:	ldp	x13, x10, [sp, #128]
  436f68:	add	x27, x26, x28
  436f6c:	mov	x1, #0x1278                	// #4728
  436f70:	ldr	w7, [sp, #152]
  436f74:	ldr	x5, [sp, #144]
  436f78:	ldr	x6, [sp, #160]
  436f7c:	add	x14, x13, x1
  436f80:	add	x27, x14, x27
  436f84:	cmp	x14, x27
  436f88:	b.cs	4375fc <nftw@plt+0x34a7c>  // b.hs, b.nlast
  436f8c:	mov	x25, x14
  436f90:	b	436fa4 <nftw@plt+0x34424>
  436f94:	sub	w7, w7, #0x1
  436f98:	strb	w0, [x25], #1
  436f9c:	cmp	x27, x25
  436fa0:	b.ls	4375fc <nftw@plt+0x34a7c>  // b.plast
  436fa4:	cmp	w7, #0xe
  436fa8:	b.hi	436fcc <nftw@plt+0x3444c>  // b.pmore
  436fac:	sub	x0, x21, x5
  436fb0:	cmp	x0, #0x3
  436fb4:	b.le	43707c <nftw@plt+0x344fc>
  436fb8:	ldr	w0, [x5], #4
  436fbc:	lsl	x0, x0, x7
  436fc0:	add	w7, w7, #0x20
  436fc4:	prfm	pldl1strm, [x5]
  436fc8:	orr	x6, x6, x0
  436fcc:	and	x0, x6, #0xff
  436fd0:	ldrh	w0, [x13, x0, lsl #1]
  436fd4:	tbnz	w0, #12, 43707c <nftw@plt+0x344fc>
  436fd8:	ubfx	x1, x0, #9, #3
  436fdc:	tst	w0, #0x1f0
  436fe0:	add	w2, w1, #0x1
  436fe4:	sub	w7, w7, w1
  436fe8:	and	w0, w0, #0x1ff
  436fec:	lsr	x6, x6, x2
  436ff0:	b.eq	436f94 <nftw@plt+0x34414>  // b.none
  436ff4:	cmp	w0, #0x10
  436ff8:	b.eq	43709c <nftw@plt+0x3451c>  // b.none
  436ffc:	cmp	w0, #0x11
  437000:	b.eq	4371d8 <nftw@plt+0x34658>  // b.none
  437004:	stp	x10, x5, [sp, #128]
  437008:	cmp	w0, #0x12
  43700c:	stp	x14, x13, [sp, #144]
  437010:	b.ne	43707c <nftw@plt+0x344fc>  // b.any
  437014:	and	w2, w6, #0x7f
  437018:	sub	w7, w7, #0x8
  43701c:	lsr	x6, x6, #7
  437020:	str	x6, [sp, #160]
  437024:	str	w7, [sp, #168]
  437028:	sub	x0, x27, x25
  43702c:	add	w2, w2, #0xb
  437030:	cmp	w2, w0
  437034:	b.hi	43707c <nftw@plt+0x344fc>  // b.pmore
  437038:	mov	x0, x25
  43703c:	mov	w1, #0x0                   	// #0
  437040:	add	x25, x25, x2
  437044:	bl	4026f0 <memset@plt>
  437048:	ldr	w7, [sp, #168]
  43704c:	ldp	x10, x5, [sp, #128]
  437050:	ldp	x14, x13, [sp, #144]
  437054:	ldr	x6, [sp, #160]
  437058:	b	436f9c <nftw@plt+0x3441c>
  43705c:	ldp	x25, x26, [sp, #64]
  437060:	ldp	x27, x28, [sp, #80]
  437064:	mov	w0, #0x0                   	// #0
  437068:	ldp	x19, x20, [sp, #16]
  43706c:	ldp	x21, x22, [sp, #32]
  437070:	ldp	x23, x24, [sp, #48]
  437074:	ldp	x29, x30, [sp], #224
  437078:	ret
  43707c:	mov	w0, #0x0                   	// #0
  437080:	ldp	x19, x20, [sp, #16]
  437084:	ldp	x21, x22, [sp, #32]
  437088:	ldp	x23, x24, [sp, #48]
  43708c:	ldp	x25, x26, [sp, #64]
  437090:	ldp	x27, x28, [sp, #80]
  437094:	ldp	x29, x30, [sp], #224
  437098:	ret
  43709c:	cmp	x14, x25
  4370a0:	b.eq	43707c <nftw@plt+0x344fc>  // b.none
  4370a4:	and	w0, w6, #0x3
  4370a8:	sub	x1, x27, x25
  4370ac:	add	w0, w0, #0x3
  4370b0:	sub	w7, w7, #0x3
  4370b4:	lsr	x6, x6, #2
  4370b8:	cmp	w0, w1
  4370bc:	b.hi	43707c <nftw@plt+0x344fc>  // b.pmore
  4370c0:	ldurb	w1, [x25, #-1]
  4370c4:	cmp	w0, #0x5
  4370c8:	b.eq	4371bc <nftw@plt+0x3463c>  // b.none
  4370cc:	cmp	w0, #0x6
  4370d0:	b.eq	4371b8 <nftw@plt+0x34638>  // b.none
  4370d4:	cmp	w0, #0x4
  4370d8:	b.eq	4371c0 <nftw@plt+0x34640>  // b.none
  4370dc:	add	x25, x25, #0x3
  4370e0:	sturb	w1, [x25, #-3]
  4370e4:	sturb	w1, [x25, #-2]
  4370e8:	sturb	w1, [x25, #-1]
  4370ec:	b	436f9c <nftw@plt+0x3441c>
  4370f0:	sub	w3, w3, #0xc
  4370f4:	stp	x10, x13, [sp, #128]
  4370f8:	lsr	w3, w3, #3
  4370fc:	mvn	x2, x3
  437100:	add	x6, x5, x2
  437104:	sub	x0, x21, x6
  437108:	cmp	x0, #0x3
  43710c:	b.le	437064 <nftw@plt+0x344e4>
  437110:	ldrb	w7, [x6, #3]
  437114:	sub	x3, x5, x3
  437118:	ldrb	w0, [x6, #2]
  43711c:	add	x1, x3, #0x3
  437120:	ldrb	w2, [x5, x2]
  437124:	ldrb	w3, [x6, #1]
  437128:	bfi	w0, w7, #8, #24
  43712c:	mvn	w0, w0
  437130:	bfi	w2, w3, #8, #24
  437134:	cmp	w2, w0, uxth
  437138:	b.ne	437064 <nftw@plt+0x344e4>  // b.any
  43713c:	sub	x0, x21, x1
  437140:	cmp	w2, w0
  437144:	b.hi	437064 <nftw@plt+0x344e4>  // b.pmore
  437148:	ldr	x0, [sp, #104]
  43714c:	sub	x0, x0, x20
  437150:	cmp	w2, w0
  437154:	b.hi	437064 <nftw@plt+0x344e4>  // b.pmore
  437158:	stp	x25, x26, [sp, #64]
  43715c:	and	x25, x2, #0xffff
  437160:	add	x5, x1, x25
  437164:	mov	x0, x20
  437168:	mov	x2, x25
  43716c:	str	x5, [sp, #144]
  437170:	add	x20, x20, x25
  437174:	bl	402490 <memcpy@plt>
  437178:	ldr	x5, [sp, #144]
  43717c:	ldp	x10, x13, [sp, #128]
  437180:	ands	x6, x5, #0x3
  437184:	b.eq	437958 <nftw@plt+0x34dd8>  // b.none
  437188:	mov	x6, #0x0                   	// #0
  43718c:	mov	w3, #0x0                   	// #0
  437190:	ldrb	w0, [x5], #1
  437194:	lsl	x0, x0, x3
  437198:	tst	x5, #0x3
  43719c:	orr	x6, x6, x0
  4371a0:	add	w3, w3, #0x8
  4371a4:	b.ne	437190 <nftw@plt+0x34610>  // b.any
  4371a8:	tbnz	w10, #0, 43792c <nftw@plt+0x34dac>
  4371ac:	mov	x10, x6
  4371b0:	ldp	x25, x26, [sp, #64]
  4371b4:	b	436c88 <nftw@plt+0x34108>
  4371b8:	strb	w1, [x25], #1
  4371bc:	strb	w1, [x25], #1
  4371c0:	strb	w1, [x25], #1
  4371c4:	add	x25, x25, #0x3
  4371c8:	sturb	w1, [x25, #-3]
  4371cc:	sturb	w1, [x25, #-2]
  4371d0:	sturb	w1, [x25, #-1]
  4371d4:	b	436f9c <nftw@plt+0x3441c>
  4371d8:	and	w0, w6, #0x7
  4371dc:	sub	x1, x27, x25
  4371e0:	add	w0, w0, #0x3
  4371e4:	sub	w7, w7, #0x4
  4371e8:	lsr	x6, x6, #3
  4371ec:	cmp	w0, w1
  4371f0:	b.hi	43707c <nftw@plt+0x344fc>  // b.pmore
  4371f4:	cmp	w0, #0x7
  4371f8:	b.eq	437260 <nftw@plt+0x346e0>  // b.none
  4371fc:	b.hi	437244 <nftw@plt+0x346c4>  // b.pmore
  437200:	cmp	w0, #0x5
  437204:	b.eq	437218 <nftw@plt+0x34698>  // b.none
  437208:	cmp	w0, #0x6
  43720c:	b.ne	437234 <nftw@plt+0x346b4>  // b.any
  437210:	strb	wzr, [x25], #1
  437214:	nop
  437218:	strb	wzr, [x25], #1
  43721c:	mov	x0, x25
  437220:	strb	wzr, [x0], #1
  437224:	mov	x25, x0
  437228:	strh	wzr, [x25], #3
  43722c:	strb	wzr, [x0, #2]
  437230:	b	436f9c <nftw@plt+0x3441c>
  437234:	cmp	w0, #0x4
  437238:	b.eq	43721c <nftw@plt+0x3469c>  // b.none
  43723c:	mov	x0, x25
  437240:	b	437224 <nftw@plt+0x346a4>
  437244:	cmp	w0, #0x9
  437248:	b.eq	437258 <nftw@plt+0x346d8>  // b.none
  43724c:	cmp	w0, #0xa
  437250:	b.ne	43726c <nftw@plt+0x346ec>  // b.any
  437254:	strb	wzr, [x25], #1
  437258:	strb	wzr, [x25], #1
  43725c:	strb	wzr, [x25], #1
  437260:	strb	wzr, [x25], #1
  437264:	strb	wzr, [x25], #1
  437268:	b	437218 <nftw@plt+0x34698>
  43726c:	cmp	w0, #0x8
  437270:	b.ne	43723c <nftw@plt+0x346bc>  // b.any
  437274:	strb	wzr, [x25], #1
  437278:	b	437260 <nftw@plt+0x346e0>
  43727c:	ldp	x0, x25, [sp, #112]
  437280:	str	x0, [sp, #176]
  437284:	cmp	w7, #0xe
  437288:	b.hi	4372ac <nftw@plt+0x3472c>  // b.pmore
  43728c:	sub	x0, x21, x5
  437290:	cmp	x0, #0x3
  437294:	b.le	43705c <nftw@plt+0x344dc>
  437298:	ldr	w0, [x5], #4
  43729c:	lsl	x0, x0, x7
  4372a0:	add	w7, w7, #0x20
  4372a4:	prfm	pldl1strm, [x5]
  4372a8:	orr	x6, x6, x0
  4372ac:	and	x0, x6, #0xff
  4372b0:	ldrh	w1, [x25, x0, lsl #1]
  4372b4:	and	w3, w1, #0x1ff
  4372b8:	ubfx	x0, x1, #9, #3
  4372bc:	tbnz	w1, #12, 437300 <nftw@plt+0x34780>
  4372c0:	add	w1, w0, #0x1
  4372c4:	sub	w7, w7, #0x1
  4372c8:	sub	w7, w7, w0
  4372cc:	cmp	w3, #0xff
  4372d0:	lsr	x6, x6, x1
  4372d4:	b.hi	43733c <nftw@plt+0x347bc>  // b.pmore
  4372d8:	ldr	x0, [sp, #104]
  4372dc:	cmp	x0, x20
  4372e0:	b.eq	43705c <nftw@plt+0x344dc>  // b.none
  4372e4:	mov	x11, x20
  4372e8:	cmp	w7, #0xe
  4372ec:	strb	w3, [x11], #1
  4372f0:	prfm	pstl1keep, [x11]
  4372f4:	mov	x20, x11
  4372f8:	b.ls	43728c <nftw@plt+0x3470c>  // b.plast
  4372fc:	b	4372ac <nftw@plt+0x3472c>
  437300:	mov	w1, #0x1                   	// #1
  437304:	add	w3, w3, #0x100
  437308:	lsl	w0, w1, w0
  43730c:	sub	w0, w0, #0x1
  437310:	and	x0, x0, x6, lsr #8
  437314:	sub	w7, w7, #0x8
  437318:	add	x3, x0, w3, sxtw
  43731c:	ldrh	w0, [x25, x3, lsl #1]
  437320:	and	w3, w0, #0x1ff
  437324:	ubfx	x0, x0, #9, #3
  437328:	cmp	w3, #0xff
  43732c:	add	w1, w0, #0x8
  437330:	sub	w7, w7, w0
  437334:	lsr	x6, x6, x1
  437338:	b.ls	4372d8 <nftw@plt+0x34758>  // b.plast
  43733c:	cmp	w3, #0x100
  437340:	b.eq	43796c <nftw@plt+0x34dec>  // b.none
  437344:	cmp	w3, #0x108
  437348:	b.hi	4373ec <nftw@plt+0x3486c>  // b.pmore
  43734c:	sub	w28, w3, #0xfe
  437350:	cmp	w7, #0xe
  437354:	b.hi	437378 <nftw@plt+0x347f8>  // b.pmore
  437358:	sub	x0, x21, x5
  43735c:	cmp	x0, #0x3
  437360:	b.le	43705c <nftw@plt+0x344dc>
  437364:	ldr	w0, [x5], #4
  437368:	lsl	x0, x0, x7
  43736c:	add	w7, w7, #0x20
  437370:	prfm	pldl1strm, [x5]
  437374:	orr	x6, x6, x0
  437378:	ldr	x1, [sp, #176]
  43737c:	and	x0, x6, #0xff
  437380:	ldrh	w1, [x1, x0, lsl #1]
  437384:	and	w14, w1, #0x1ff
  437388:	ubfx	x0, x1, #9, #3
  43738c:	tbnz	w1, #12, 437464 <nftw@plt+0x348e4>
  437390:	add	w1, w0, #0x1
  437394:	sub	w7, w7, #0x1
  437398:	sub	w7, w7, w0
  43739c:	lsr	x6, x6, x1
  4373a0:	cbnz	w14, 4374a0 <nftw@plt+0x34920>
  4373a4:	stp	x10, x5, [sp, #128]
  4373a8:	cmp	x19, x20
  4373ac:	str	w7, [sp, #144]
  4373b0:	stp	x6, x13, [sp, #152]
  4373b4:	b.eq	43705c <nftw@plt+0x344dc>  // b.none
  4373b8:	ldr	x0, [sp, #104]
  4373bc:	sub	x0, x0, x20
  4373c0:	cmp	w28, w0
  4373c4:	b.hi	43705c <nftw@plt+0x344dc>  // b.pmore
  4373c8:	ldurb	w1, [x20, #-1]
  4373cc:	mov	w2, w28
  4373d0:	mov	x0, x20
  4373d4:	add	x20, x20, x2
  4373d8:	bl	4026f0 <memset@plt>
  4373dc:	ldr	w7, [sp, #144]
  4373e0:	ldp	x10, x5, [sp, #128]
  4373e4:	ldp	x6, x13, [sp, #152]
  4373e8:	b	437284 <nftw@plt+0x34704>
  4373ec:	cmp	w3, #0x11d
  4373f0:	b.eq	4375e8 <nftw@plt+0x34a68>  // b.none
  4373f4:	b.hi	43705c <nftw@plt+0x344dc>  // b.pmore
  4373f8:	cmp	w7, #0xe
  4373fc:	b.hi	437420 <nftw@plt+0x348a0>  // b.pmore
  437400:	sub	x0, x21, x5
  437404:	cmp	x0, #0x3
  437408:	b.le	43705c <nftw@plt+0x344dc>
  43740c:	ldr	w0, [x5], #4
  437410:	lsl	x0, x0, x7
  437414:	add	w7, w7, #0x20
  437418:	prfm	pldl1strm, [x5]
  43741c:	orr	x6, x6, x0
  437420:	sub	w3, w3, #0x109
  437424:	mov	w2, #0x1                   	// #1
  437428:	and	w0, w3, #0x3
  43742c:	lsr	w3, w3, #2
  437430:	add	w1, w3, #0x1
  437434:	lsl	w3, w2, w3
  437438:	mov	w2, #0xffffffff            	// #-1
  43743c:	sub	w3, w3, #0x1
  437440:	lsl	w2, w2, w1
  437444:	bic	w2, w6, w2
  437448:	lsl	w0, w0, w1
  43744c:	add	w2, w2, w3, lsl #3
  437450:	add	w3, w0, #0xb
  437454:	sub	w7, w7, w1
  437458:	add	w28, w2, w3
  43745c:	lsr	x6, x6, x1
  437460:	b	437350 <nftw@plt+0x347d0>
  437464:	mov	w1, #0x1                   	// #1
  437468:	add	w14, w14, #0x100
  43746c:	lsl	w0, w1, w0
  437470:	sub	w0, w0, #0x1
  437474:	and	x0, x0, x6, lsr #8
  437478:	sub	w7, w7, #0x8
  43747c:	add	x14, x0, w14, sxtw
  437480:	ldr	x0, [sp, #176]
  437484:	ldrh	w0, [x0, x14, lsl #1]
  437488:	and	w14, w0, #0x1ff
  43748c:	ubfx	x0, x0, #9, #3
  437490:	add	w1, w0, #0x8
  437494:	sub	w7, w7, w0
  437498:	lsr	x6, x6, x1
  43749c:	cbz	w14, 4373a4 <nftw@plt+0x34824>
  4374a0:	cmp	w14, #0x1d
  4374a4:	b.hi	43705c <nftw@plt+0x344dc>  // b.pmore
  4374a8:	add	w27, w14, #0x1
  4374ac:	cmp	w14, #0x3
  4374b0:	b.ls	43751c <nftw@plt+0x3499c>  // b.plast
  4374b4:	cmp	w7, #0xe
  4374b8:	b.hi	4374dc <nftw@plt+0x3495c>  // b.pmore
  4374bc:	sub	x0, x21, x5
  4374c0:	cmp	x0, #0x3
  4374c4:	b.le	43705c <nftw@plt+0x344dc>
  4374c8:	ldr	w0, [x5], #4
  4374cc:	lsl	x0, x0, x7
  4374d0:	add	w7, w7, #0x20
  4374d4:	prfm	pldl1strm, [x5]
  4374d8:	orr	x6, x6, x0
  4374dc:	sub	w14, w14, #0x4
  4374e0:	mov	w2, #0x1                   	// #1
  4374e4:	and	w0, w14, #0x1
  4374e8:	lsr	w14, w14, #1
  4374ec:	add	w1, w14, #0x1
  4374f0:	lsl	w14, w2, w14
  4374f4:	mov	w2, #0xffffffff            	// #-1
  4374f8:	sub	w14, w14, #0x1
  4374fc:	lsl	w2, w2, w1
  437500:	bic	w2, w6, w2
  437504:	lsl	w0, w0, w1
  437508:	add	w14, w2, w14, lsl #2
  43750c:	add	w0, w0, #0x5
  437510:	sub	w7, w7, w1
  437514:	add	w27, w14, w0
  437518:	lsr	x6, x6, x1
  43751c:	sub	x0, x20, x19
  437520:	cmp	w27, w0
  437524:	b.hi	43705c <nftw@plt+0x344dc>  // b.pmore
  437528:	ldr	x0, [sp, #104]
  43752c:	sub	x0, x0, x20
  437530:	cmp	w28, w0
  437534:	b.hi	43705c <nftw@plt+0x344dc>  // b.pmore
  437538:	mov	w26, w27
  43753c:	cmp	w28, w27
  437540:	neg	x0, x26
  437544:	str	x0, [sp, #184]
  437548:	b.hi	437570 <nftw@plt+0x349f0>  // b.pmore
  43754c:	mov	w2, w28
  437550:	add	x1, x20, x0
  437554:	mov	x0, x20
  437558:	add	x20, x20, x2
  43755c:	stp	x10, x5, [sp, #128]
  437560:	str	w7, [sp, #144]
  437564:	stp	x6, x13, [sp, #152]
  437568:	bl	402490 <memcpy@plt>
  43756c:	b	4373dc <nftw@plt+0x3485c>
  437570:	cmp	w27, w28
  437574:	str	x5, [sp, #144]
  437578:	ldr	x0, [sp, #184]
  43757c:	csel	w2, w27, w28, ls  // ls = plast
  437580:	csel	w26, w27, w28, ls  // ls = plast
  437584:	stp	x2, x10, [sp, #128]
  437588:	add	x1, x20, x0
  43758c:	mov	x0, x20
  437590:	str	w7, [sp, #152]
  437594:	stp	x6, x13, [sp, #160]
  437598:	bl	402490 <memcpy@plt>
  43759c:	ldr	w7, [sp, #152]
  4375a0:	ldp	x2, x10, [sp, #128]
  4375a4:	subs	w28, w28, w26
  4375a8:	ldr	x5, [sp, #144]
  4375ac:	ldp	x6, x13, [sp, #160]
  4375b0:	add	x20, x20, x2
  4375b4:	b.ne	437570 <nftw@plt+0x349f0>  // b.any
  4375b8:	b	437284 <nftw@plt+0x34704>
  4375bc:	mov	w3, #0x0                   	// #0
  4375c0:	b	436c88 <nftw@plt+0x34108>
  4375c4:	sub	w7, w7, #0xc
  4375c8:	mov	x6, x2
  4375cc:	b	436f40 <nftw@plt+0x343c0>
  4375d0:	sub	w7, w7, #0x9
  4375d4:	mov	x6, x1
  4375d8:	b	436f40 <nftw@plt+0x343c0>
  4375dc:	sub	w7, w7, #0x3
  4375e0:	mov	x6, x2
  4375e4:	b	436f40 <nftw@plt+0x343c0>
  4375e8:	mov	w28, #0x102                 	// #258
  4375ec:	b	437350 <nftw@plt+0x347d0>
  4375f0:	sub	w7, w7, #0x6
  4375f4:	mov	x6, x2
  4375f8:	b	436f40 <nftw@plt+0x343c0>
  4375fc:	add	x0, x13, #0x1, lsl #12
  437600:	stp	x10, x5, [sp, #128]
  437604:	str	w7, [sp, #144]
  437608:	ldrb	w0, [x0, #888]
  43760c:	str	x6, [sp, #152]
  437610:	cbz	w0, 43707c <nftw@plt+0x344fc>
  437614:	mov	x3, x13
  437618:	mov	x2, x13
  43761c:	mov	x1, x26
  437620:	mov	x0, x14
  437624:	stp	x14, x13, [sp, #160]
  437628:	bl	4362d8 <nftw@plt+0x33758>
  43762c:	cbz	w0, 43707c <nftw@plt+0x344fc>
  437630:	ldp	x14, x13, [sp, #160]
  437634:	mov	x1, x28
  437638:	str	x13, [sp, #160]
  43763c:	add	x3, x13, #0x800
  437640:	add	x0, x14, x26
  437644:	mov	x2, x13
  437648:	str	x3, [sp, #176]
  43764c:	bl	4362d8 <nftw@plt+0x33758>
  437650:	cbz	w0, 43707c <nftw@plt+0x344fc>
  437654:	ldp	x6, x13, [sp, #152]
  437658:	ldr	w7, [sp, #144]
  43765c:	ldp	x10, x5, [sp, #128]
  437660:	mov	x25, x13
  437664:	b	437284 <nftw@plt+0x34704>
  437668:	sub	w7, w7, #0x9
  43766c:	mov	x6, x2
  437670:	b	436f40 <nftw@plt+0x343c0>
  437674:	mov	x20, x3
  437678:	ldr	x0, [sp, #104]
  43767c:	cmp	x0, x20
  437680:	b.ne	437064 <nftw@plt+0x344e4>  // b.any
  437684:	sub	x9, x22, #0x4
  437688:	mov	w7, #0x0                   	// #0
  43768c:	add	x8, x23, x9
  437690:	ldrb	w0, [x8], #1
  437694:	cmp	x21, x8
  437698:	orr	w7, w0, w7, lsl #8
  43769c:	b.ne	437690 <nftw@plt+0x34b10>  // b.any
  4376a0:	mov	x11, #0x15af                	// #5551
  4376a4:	mov	w5, #0x0                   	// #0
  4376a8:	cmp	x24, x11
  4376ac:	mov	w3, #0x1                   	// #1
  4376b0:	b.ls	4377c0 <nftw@plt+0x34c40>  // b.plast
  4376b4:	mov	w13, #0x8071                	// #32881
  4376b8:	mov	x14, #0x15b0                	// #5552
  4376bc:	movk	w13, #0x8007, lsl #16
  4376c0:	mov	w12, #0xfff1                	// #65521
  4376c4:	nop
  4376c8:	mov	x0, #0x15b0                	// #5552
  4376cc:	add	x15, x19, x0
  4376d0:	ldrb	w2, [x19]
  4376d4:	add	x19, x19, #0x10
  4376d8:	ldurb	w1, [x19, #-15]
  4376dc:	ldurb	w0, [x19, #-14]
  4376e0:	add	w3, w2, w3
  4376e4:	add	w1, w1, w3
  4376e8:	ldurb	w2, [x19, #-13]
  4376ec:	add	w0, w0, w1
  4376f0:	ldurb	w10, [x19, #-12]
  4376f4:	ldurb	w22, [x19, #-11]
  4376f8:	add	w2, w2, w0
  4376fc:	add	w10, w10, w2
  437700:	ldurb	w9, [x19, #-10]
  437704:	ldurb	w21, [x19, #-9]
  437708:	add	w22, w22, w10
  43770c:	ldurb	w17, [x19, #-8]
  437710:	add	w9, w9, w22
  437714:	ldurb	w18, [x19, #-7]
  437718:	add	w21, w21, w9
  43771c:	ldurb	w20, [x19, #-6]
  437720:	add	w17, w17, w21
  437724:	ldurb	w16, [x19, #-5]
  437728:	add	w18, w18, w17
  43772c:	ldurb	w8, [x19, #-4]
  437730:	add	w3, w3, w1
  437734:	ldurb	w6, [x19, #-2]
  437738:	add	w2, w0, w2
  43773c:	ldurb	w1, [x19, #-3]
  437740:	add	w20, w20, w18
  437744:	add	w2, w2, w3
  437748:	add	w16, w16, w20
  43774c:	add	w3, w10, w22
  437750:	add	w9, w9, w21
  437754:	add	w2, w2, w3
  437758:	add	w8, w8, w16
  43775c:	add	w2, w2, w9
  437760:	ldurb	w3, [x19, #-1]
  437764:	add	w9, w1, w8
  437768:	add	w0, w17, w18
  43776c:	add	w6, w6, w9
  437770:	add	w0, w2, w0
  437774:	add	w10, w20, w16
  437778:	add	w8, w8, w9
  43777c:	add	w0, w0, w10
  437780:	add	w3, w3, w6
  437784:	add	w0, w0, w8
  437788:	add	w6, w6, w3
  43778c:	add	w0, w0, w6
  437790:	cmp	x19, x15
  437794:	add	w5, w5, w0
  437798:	b.ne	4376d0 <nftw@plt+0x34b50>  // b.any
  43779c:	umull	x1, w3, w13
  4377a0:	sub	x24, x24, x14
  4377a4:	umull	x0, w5, w13
  4377a8:	cmp	x24, x11
  4377ac:	lsr	x1, x1, #47
  4377b0:	lsr	x0, x0, #47
  4377b4:	msub	w3, w1, w12, w3
  4377b8:	msub	w5, w0, w12, w5
  4377bc:	b.hi	4376c8 <nftw@plt+0x34b48>  // b.pmore
  4377c0:	cmp	x24, #0xf
  4377c4:	b.ls	4378a8 <nftw@plt+0x34d28>  // b.plast
  4377c8:	sub	x13, x24, #0x10
  4377cc:	and	x13, x13, #0xfffffffffffffff0
  4377d0:	add	x13, x13, #0x10
  4377d4:	add	x13, x19, x13
  4377d8:	ldrb	w1, [x19]
  4377dc:	add	x19, x19, #0x10
  4377e0:	ldurb	w2, [x19, #-15]
  4377e4:	ldurb	w0, [x19, #-14]
  4377e8:	add	w3, w1, w3
  4377ec:	add	w2, w2, w3
  4377f0:	ldurb	w1, [x19, #-13]
  4377f4:	add	w0, w0, w2
  4377f8:	ldurb	w12, [x19, #-12]
  4377fc:	ldurb	w17, [x19, #-11]
  437800:	add	w1, w1, w0
  437804:	ldurb	w11, [x19, #-10]
  437808:	add	w12, w12, w1
  43780c:	ldurb	w16, [x19, #-9]
  437810:	add	w17, w17, w12
  437814:	ldurb	w10, [x19, #-8]
  437818:	add	w11, w11, w17
  43781c:	ldurb	w15, [x19, #-7]
  437820:	add	w16, w16, w11
  437824:	ldurb	w9, [x19, #-6]
  437828:	add	w10, w10, w16
  43782c:	ldurb	w14, [x19, #-5]
  437830:	add	w15, w15, w10
  437834:	ldurb	w8, [x19, #-4]
  437838:	add	w3, w3, w2
  43783c:	ldurb	w6, [x19, #-2]
  437840:	add	w1, w0, w1
  437844:	ldurb	w2, [x19, #-3]
  437848:	add	w9, w9, w15
  43784c:	add	w1, w1, w3
  437850:	add	w14, w14, w9
  437854:	add	w12, w12, w17
  437858:	add	w0, w11, w16
  43785c:	add	w8, w8, w14
  437860:	add	w1, w1, w12
  437864:	add	w1, w1, w0
  437868:	add	w11, w2, w8
  43786c:	ldurb	w3, [x19, #-1]
  437870:	add	w0, w10, w15
  437874:	add	w6, w6, w11
  437878:	add	w0, w1, w0
  43787c:	add	w9, w9, w14
  437880:	add	w8, w8, w11
  437884:	add	w0, w0, w9
  437888:	add	w3, w3, w6
  43788c:	add	w0, w0, w8
  437890:	add	w6, w6, w3
  437894:	add	w0, w0, w6
  437898:	cmp	x19, x13
  43789c:	add	w5, w5, w0
  4378a0:	b.ne	4377d8 <nftw@plt+0x34c58>  // b.any
  4378a4:	and	x24, x24, #0xf
  4378a8:	cbz	x24, 4378d4 <nftw@plt+0x34d54>
  4378ac:	mov	w0, #0x1                   	// #1
  4378b0:	sub	w0, w0, w19
  4378b4:	nop
  4378b8:	ldrb	w1, [x19]
  4378bc:	add	w2, w0, w19
  4378c0:	cmp	x2, x24
  4378c4:	add	x19, x19, #0x1
  4378c8:	add	w3, w3, w1
  4378cc:	add	w5, w5, w3
  4378d0:	b.cc	4378b8 <nftw@plt+0x34d38>  // b.lo, b.ul, b.last
  4378d4:	mov	w0, #0x8071                	// #32881
  4378d8:	mov	w2, #0xfff1                	// #65521
  4378dc:	movk	w0, #0x8007, lsl #16
  4378e0:	ldp	x19, x20, [sp, #16]
  4378e4:	umull	x1, w5, w0
  4378e8:	umull	x0, w3, w0
  4378ec:	ldp	x21, x22, [sp, #32]
  4378f0:	lsr	x1, x1, #47
  4378f4:	lsr	x0, x0, #47
  4378f8:	ldp	x23, x24, [sp, #48]
  4378fc:	msub	w5, w1, w2, w5
  437900:	msub	w3, w0, w2, w3
  437904:	ldp	x29, x30, [sp], #224
  437908:	add	w3, w3, w5, lsl #16
  43790c:	cmp	w3, w7
  437910:	cset	w0, eq  // eq = none
  437914:	ret
  437918:	mov	w7, w2
  43791c:	b	436f40 <nftw@plt+0x343c0>
  437920:	sub	w7, w2, #0x3
  437924:	mov	x6, x3
  437928:	b	436f40 <nftw@plt+0x343c0>
  43792c:	sub	x0, x21, x5
  437930:	cmp	x0, #0x4
  437934:	ldp	x25, x26, [sp, #64]
  437938:	b.gt	436c00 <nftw@plt+0x34080>
  43793c:	b	437678 <nftw@plt+0x34af8>
  437940:	sub	w7, w2, #0x6
  437944:	mov	x6, x3
  437948:	b	436f40 <nftw@plt+0x343c0>
  43794c:	sub	w7, w2, #0x9
  437950:	mov	x6, x3
  437954:	b	436f40 <nftw@plt+0x343c0>
  437958:	mov	w3, #0x0                   	// #0
  43795c:	b	4371a8 <nftw@plt+0x34628>
  437960:	sub	w7, w2, #0xc
  437964:	mov	x6, x3
  437968:	b	436f40 <nftw@plt+0x343c0>
  43796c:	mov	w3, w7
  437970:	ldp	x27, x28, [sp, #80]
  437974:	b	4371a8 <nftw@plt+0x34628>
  437978:	stp	x29, x30, [sp, #-80]!
  43797c:	add	x8, x1, #0xc
  437980:	mov	x29, sp
  437984:	stp	x19, x20, [sp, #16]
  437988:	add	x19, x1, #0x4
  43798c:	mov	x20, #0x0                   	// #0
  437990:	stp	x21, x22, [sp, #32]
  437994:	mov	x22, x2
  437998:	mov	x2, x4
  43799c:	stp	x23, x24, [sp, #48]
  4379a0:	mov	x24, x6
  4379a4:	mov	x23, x7
  4379a8:	str	x25, [sp, #64]
  4379ac:	mov	x25, x3
  4379b0:	mov	x3, x5
  4379b4:	nop
  4379b8:	ldrb	w1, [x19], #1
  4379bc:	cmp	x19, x8
  4379c0:	orr	x20, x1, x20, lsl #8
  4379c4:	b.ne	4379b8 <nftw@plt+0x34e38>  // b.any
  4379c8:	mov	x1, x20
  4379cc:	bl	435b68 <nftw@plt+0x32fe8>
  4379d0:	mov	x21, x0
  4379d4:	cbz	x0, 437a1c <nftw@plt+0x34e9c>
  4379d8:	sub	x1, x22, #0xc
  4379dc:	mov	x2, x25
  4379e0:	mov	x0, x19
  4379e4:	mov	x4, x20
  4379e8:	mov	x3, x21
  4379ec:	bl	436ba8 <nftw@plt+0x34028>
  4379f0:	mov	w1, w0
  4379f4:	mov	w0, #0x1                   	// #1
  4379f8:	cbz	w1, 437a04 <nftw@plt+0x34e84>
  4379fc:	str	x21, [x24]
  437a00:	str	x20, [x23]
  437a04:	ldp	x19, x20, [sp, #16]
  437a08:	ldp	x21, x22, [sp, #32]
  437a0c:	ldp	x23, x24, [sp, #48]
  437a10:	ldr	x25, [sp, #64]
  437a14:	ldp	x29, x30, [sp], #80
  437a18:	ret
  437a1c:	mov	w0, #0x0                   	// #0
  437a20:	b	437a04 <nftw@plt+0x34e84>
  437a24:	nop
  437a28:	sub	sp, sp, #0x4b0
  437a2c:	stp	x29, x30, [sp, #80]
  437a30:	add	x29, sp, #0x50
  437a34:	stp	x21, x22, [sp, #112]
  437a38:	mov	x21, x0
  437a3c:	ldr	w0, [sp, #1224]
  437a40:	stp	x19, x20, [sp, #96]
  437a44:	mov	w22, w2
  437a48:	mov	x19, x4
  437a4c:	stp	x23, x24, [sp, #128]
  437a50:	mov	x20, x5
  437a54:	stp	x27, x28, [sp, #160]
  437a58:	mov	x27, x7
  437a5c:	stp	x3, x6, [sp, #176]
  437a60:	str	x1, [sp, #192]
  437a64:	cbnz	w0, 437a74 <nftw@plt+0x34ef4>
  437a68:	ldr	x0, [sp, #1200]
  437a6c:	str	wzr, [x7]
  437a70:	str	wzr, [x0]
  437a74:	add	x23, sp, #0x1a8
  437a78:	mov	x5, x20
  437a7c:	mov	x6, x23
  437a80:	mov	x4, x19
  437a84:	mov	w1, w22
  437a88:	mov	x0, x21
  437a8c:	mov	x3, #0x40                  	// #64
  437a90:	mov	x2, #0x0                   	// #0
  437a94:	bl	4391b8 <nftw@plt+0x36638>
  437a98:	cbnz	w0, 437b00 <nftw@plt+0x34f80>
  437a9c:	mov	w23, #0x0                   	// #0
  437aa0:	mov	x24, #0x0                   	// #0
  437aa4:	nop
  437aa8:	cbnz	w23, 437bb4 <nftw@plt+0x35034>
  437aac:	cbz	x24, 437ac4 <nftw@plt+0x34f44>
  437ab0:	add	x1, x24, #0x18
  437ab4:	mov	x0, x21
  437ab8:	mov	x3, x20
  437abc:	mov	x2, x19
  437ac0:	bl	439288 <nftw@plt+0x36708>
  437ac4:	cmn	w22, #0x1
  437ac8:	mov	w24, #0x0                   	// #0
  437acc:	b.eq	437ae0 <nftw@plt+0x34f60>  // b.none
  437ad0:	mov	x2, x20
  437ad4:	mov	x1, x19
  437ad8:	mov	w0, w22
  437adc:	bl	436220 <nftw@plt+0x336a0>
  437ae0:	mov	w0, w24
  437ae4:	ldp	x29, x30, [sp, #80]
  437ae8:	ldp	x19, x20, [sp, #96]
  437aec:	ldp	x21, x22, [sp, #112]
  437af0:	ldp	x23, x24, [sp, #128]
  437af4:	ldp	x27, x28, [sp, #160]
  437af8:	add	sp, sp, #0x4b0
  437afc:	ret
  437b00:	ldr	x4, [sp, #424]
  437b04:	add	x5, sp, #0x200
  437b08:	stp	x25, x26, [sp, #144]
  437b0c:	mov	x1, x23
  437b10:	mov	x0, x21
  437b14:	ldp	x6, x7, [x4]
  437b18:	stp	x6, x7, [x5, #176]
  437b1c:	ldrb	w25, [x4, #4]
  437b20:	ldp	x6, x7, [x4, #16]
  437b24:	stp	x6, x7, [x5, #192]
  437b28:	ldrb	w5, [x4, #5]
  437b2c:	str	w5, [sp, #220]
  437b30:	add	x5, sp, #0x200
  437b34:	ldp	x6, x7, [x4, #32]
  437b38:	mov	x3, x20
  437b3c:	stp	x6, x7, [x5, #208]
  437b40:	add	x5, sp, #0x2e0
  437b44:	ldrb	w23, [x4, #6]
  437b48:	ldp	x6, x7, [x4, #48]
  437b4c:	stp	x6, x7, [x5]
  437b50:	ldrh	w5, [x4, #18]
  437b54:	ldrh	w28, [x4, #16]
  437b58:	mov	x2, x19
  437b5c:	ldrh	w24, [x4, #62]
  437b60:	str	w5, [sp, #216]
  437b64:	ldrh	w5, [x4, #60]
  437b68:	ldr	x26, [x4, #40]
  437b6c:	str	w5, [sp, #200]
  437b70:	ldr	w4, [x4, #48]
  437b74:	str	w4, [sp, #208]
  437b78:	bl	439288 <nftw@plt+0x36708>
  437b7c:	ldr	w1, [sp, #688]
  437b80:	mov	w0, #0x457f                	// #17791
  437b84:	movk	w0, #0x464c, lsl #16
  437b88:	cmp	w1, w0
  437b8c:	b.eq	437bcc <nftw@plt+0x3504c>  // b.none
  437b90:	mov	x0, x20
  437b94:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437b98:	mov	w2, #0x0                   	// #0
  437b9c:	add	x1, x1, #0x5f0
  437ba0:	mov	w23, #0x0                   	// #0
  437ba4:	blr	x19
  437ba8:	mov	x24, #0x0                   	// #0
  437bac:	ldp	x25, x26, [sp, #144]
  437bb0:	b	437aa8 <nftw@plt+0x34f28>
  437bb4:	mov	x3, x20
  437bb8:	mov	x2, x19
  437bbc:	add	x1, sp, #0x2f0
  437bc0:	mov	x0, x21
  437bc4:	bl	439288 <nftw@plt+0x36708>
  437bc8:	b	437aac <nftw@plt+0x34f2c>
  437bcc:	cmp	w23, #0x1
  437bd0:	b.ne	437c00 <nftw@plt+0x35080>  // b.any
  437bd4:	cmp	w25, #0x2
  437bd8:	b.eq	437c24 <nftw@plt+0x350a4>  // b.none
  437bdc:	mov	x0, x20
  437be0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437be4:	mov	w2, #0x0                   	// #0
  437be8:	add	x1, x1, #0x640
  437bec:	mov	w23, #0x0                   	// #0
  437bf0:	blr	x19
  437bf4:	mov	x24, #0x0                   	// #0
  437bf8:	ldp	x25, x26, [sp, #144]
  437bfc:	b	437aa8 <nftw@plt+0x34f28>
  437c00:	mov	x0, x20
  437c04:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437c08:	mov	w2, #0x0                   	// #0
  437c0c:	add	x1, x1, #0x610
  437c10:	mov	w23, #0x0                   	// #0
  437c14:	blr	x19
  437c18:	mov	x24, #0x0                   	// #0
  437c1c:	ldp	x25, x26, [sp, #144]
  437c20:	b	437aa8 <nftw@plt+0x34f28>
  437c24:	ldr	w0, [sp, #220]
  437c28:	sub	w0, w0, #0x1
  437c2c:	and	w0, w0, #0xff
  437c30:	cmp	w0, #0x1
  437c34:	b.hi	437d20 <nftw@plt+0x351a0>  // b.pmore
  437c38:	ldr	w0, [sp, #1216]
  437c3c:	cmp	w28, #0x3
  437c40:	and	w0, w0, #0x1
  437c44:	csel	w0, w0, wzr, eq  // eq = none
  437c48:	cbnz	w0, 438b64 <nftw@plt+0x35fe4>
  437c4c:	ldr	w0, [sp, #200]
  437c50:	mov	w25, #0xffff                	// #65535
  437c54:	str	w0, [sp, #240]
  437c58:	cmp	w0, #0x0
  437c5c:	ccmp	w24, w25, #0x4, ne  // ne = any
  437c60:	ccmp	x26, #0x0, #0x4, eq  // eq = none
  437c64:	b.ne	437d5c <nftw@plt+0x351dc>  // b.any
  437c68:	ldr	w25, [sp, #240]
  437c6c:	add	x0, sp, #0x1c0
  437c70:	mov	x6, x0
  437c74:	add	x2, x26, #0x40
  437c78:	sub	w3, w25, #0x1
  437c7c:	mov	x5, x20
  437c80:	mov	x4, x19
  437c84:	mov	w1, w22
  437c88:	lsl	x3, x3, #6
  437c8c:	str	x0, [sp, #224]
  437c90:	mov	x0, x21
  437c94:	bl	4391b8 <nftw@plt+0x36638>
  437c98:	cbz	w0, 437d50 <nftw@plt+0x351d0>
  437c9c:	ldr	x0, [sp, #448]
  437ca0:	sub	w24, w24, #0x1
  437ca4:	add	x1, sp, #0x1d8
  437ca8:	mov	x5, x20
  437cac:	mov	x6, x1
  437cb0:	mov	x4, x19
  437cb4:	add	x3, x0, x24, lsl #6
  437cb8:	str	x1, [sp, #232]
  437cbc:	mov	w1, w22
  437cc0:	str	x0, [sp, #320]
  437cc4:	mov	x0, x21
  437cc8:	ldp	x2, x3, [x3, #24]
  437ccc:	str	x3, [sp, #296]
  437cd0:	bl	4391b8 <nftw@plt+0x36638>
  437cd4:	mov	w23, w0
  437cd8:	cbnz	w0, 437dcc <nftw@plt+0x3524c>
  437cdc:	ldr	x1, [sp, #224]
  437ce0:	mov	x3, x20
  437ce4:	mov	x2, x19
  437ce8:	mov	x0, x21
  437cec:	mov	x24, #0x0                   	// #0
  437cf0:	str	wzr, [sp, #200]
  437cf4:	bl	439288 <nftw@plt+0x36708>
  437cf8:	ldr	w0, [sp, #200]
  437cfc:	cbz	w0, 437d44 <nftw@plt+0x351c4>
  437d00:	mov	x3, x20
  437d04:	mov	x2, x19
  437d08:	add	x1, sp, #0x220
  437d0c:	mov	x0, x21
  437d10:	bl	439288 <nftw@plt+0x36708>
  437d14:	ldp	x25, x26, [sp, #144]
  437d18:	cbz	w23, 437aac <nftw@plt+0x34f2c>
  437d1c:	b	437bb4 <nftw@plt+0x35034>
  437d20:	mov	x0, x20
  437d24:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437d28:	mov	w2, #0x0                   	// #0
  437d2c:	add	x1, x1, #0x668
  437d30:	mov	w23, #0x0                   	// #0
  437d34:	blr	x19
  437d38:	mov	x24, #0x0                   	// #0
  437d3c:	ldp	x25, x26, [sp, #144]
  437d40:	b	437aa8 <nftw@plt+0x34f28>
  437d44:	ldp	x25, x26, [sp, #144]
  437d48:	cbz	w23, 437aac <nftw@plt+0x34f2c>
  437d4c:	b	437bb4 <nftw@plt+0x35034>
  437d50:	mov	w23, #0x0                   	// #0
  437d54:	ldp	x25, x26, [sp, #144]
  437d58:	b	437aa0 <nftw@plt+0x34f20>
  437d5c:	add	x0, sp, #0x370
  437d60:	mov	x5, x20
  437d64:	mov	x6, x0
  437d68:	mov	x4, x19
  437d6c:	mov	x2, x26
  437d70:	mov	w1, w22
  437d74:	mov	x3, #0x8                   	// #8
  437d78:	str	x0, [sp, #288]
  437d7c:	mov	x0, x21
  437d80:	bl	4391b8 <nftw@plt+0x36638>
  437d84:	mov	w23, w0
  437d88:	cbz	w0, 4382d0 <nftw@plt+0x35750>
  437d8c:	ldr	w1, [sp, #240]
  437d90:	ldr	x0, [sp, #880]
  437d94:	cbz	w1, 438284 <nftw@plt+0x35704>
  437d98:	ldr	w24, [x0, #40]
  437d9c:	mov	w1, #0xffff                	// #65535
  437da0:	ldr	w0, [sp, #240]
  437da4:	cmp	w24, w0
  437da8:	sub	w0, w24, #0x100
  437dac:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
  437db0:	csel	w24, w0, w24, hi  // hi = pmore
  437db4:	ldr	x1, [sp, #288]
  437db8:	mov	x3, x20
  437dbc:	mov	x2, x19
  437dc0:	mov	x0, x21
  437dc4:	bl	439288 <nftw@plt+0x36708>
  437dc8:	b	437c68 <nftw@plt+0x350e8>
  437dcc:	ldr	x3, [sp, #472]
  437dd0:	add	x0, sp, #0x370
  437dd4:	mov	x2, #0x140                 	// #320
  437dd8:	mov	w1, #0x0                   	// #0
  437ddc:	str	x3, [sp, #248]
  437de0:	str	x0, [sp, #288]
  437de4:	bl	4026f0 <memset@plt>
  437de8:	cmp	w25, #0x1
  437dec:	b.ls	438b20 <nftw@plt+0x35fa0>  // b.plast
  437df0:	add	x0, sp, #0x280
  437df4:	mov	x24, #0x0                   	// #0
  437df8:	stp	x19, x20, [sp, #272]
  437dfc:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x405a0>
  437e00:	mov	w1, #0x0                   	// #0
  437e04:	stp	x24, xzr, [sp, #352]
  437e08:	add	x28, x28, #0xda0
  437e0c:	ldr	w24, [sp, #1224]
  437e10:	str	x0, [sp, #376]
  437e14:	add	x0, sp, #0x298
  437e18:	ldr	x20, [sp, #296]
  437e1c:	str	w22, [sp, #264]
  437e20:	ldr	x26, [sp, #320]
  437e24:	str	x0, [sp, #384]
  437e28:	mov	w0, #0x1                   	// #1
  437e2c:	mov	w22, w0
  437e30:	str	x27, [sp, #392]
  437e34:	mov	w27, w1
  437e38:	mov	w23, #0x0                   	// #0
  437e3c:	mov	w25, #0x0                   	// #0
  437e40:	str	wzr, [sp, #200]
  437e44:	str	x21, [sp, #256]
  437e48:	str	xzr, [sp, #304]
  437e4c:	str	wzr, [sp, #328]
  437e50:	str	wzr, [sp, #332]
  437e54:	stp	xzr, xzr, [sp, #336]
  437e58:	str	wzr, [sp, #368]
  437e5c:	str	wzr, [sp, #372]
  437e60:	ldr	w0, [x26, #4]
  437e64:	cmp	w0, #0x2
  437e68:	b.eq	4380ec <nftw@plt+0x3556c>  // b.none
  437e6c:	cmp	w0, #0xb
  437e70:	csel	w25, w25, w22, ne  // ne = any
  437e74:	ldr	w19, [x26]
  437e78:	cmp	x19, x20
  437e7c:	b.cs	438298 <nftw@plt+0x35718>  // b.hs, b.nlast
  437e80:	ldr	x0, [sp, #248]
  437e84:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437e88:	mov	x21, #0x0                   	// #0
  437e8c:	add	x1, x1, #0x5e0
  437e90:	add	x19, x0, x19
  437e94:	b	437e9c <nftw@plt+0x3531c>
  437e98:	ldr	x1, [x28, x21, lsl #3]
  437e9c:	mov	x0, x19
  437ea0:	bl	402890 <strcmp@plt>
  437ea4:	mov	w1, w21
  437ea8:	add	x21, x21, #0x1
  437eac:	cbz	w0, 4380bc <nftw@plt+0x3553c>
  437eb0:	cmp	x21, #0xa
  437eb4:	b.ne	437e98 <nftw@plt+0x35318>  // b.any
  437eb8:	ldr	x0, [sp, #1232]
  437ebc:	eor	w21, w24, #0x1
  437ec0:	and	w21, w21, #0x1
  437ec4:	cmp	x0, #0x0
  437ec8:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  437ecc:	b.eq	437f10 <nftw@plt+0x35390>  // b.none
  437ed0:	ldr	w0, [sp, #200]
  437ed4:	cbnz	w0, 437ef0 <nftw@plt+0x35370>
  437ed8:	mov	x0, x19
  437edc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437ee0:	add	x1, x1, #0x6b0
  437ee4:	bl	402890 <strcmp@plt>
  437ee8:	mov	w7, w0
  437eec:	cbz	w0, 4381bc <nftw@plt+0x3563c>
  437ef0:	orr	w0, w24, w27
  437ef4:	cbnz	w0, 437f10 <nftw@plt+0x35390>
  437ef8:	mov	x0, x19
  437efc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437f00:	mov	w27, #0x0                   	// #0
  437f04:	add	x1, x1, #0x6d0
  437f08:	bl	402890 <strcmp@plt>
  437f0c:	cbz	w0, 438038 <nftw@plt+0x354b8>
  437f10:	cbnz	w23, 437f28 <nftw@plt+0x353a8>
  437f14:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437f18:	mov	x0, x19
  437f1c:	add	x1, x1, #0x6e0
  437f20:	bl	402890 <strcmp@plt>
  437f24:	cbz	w0, 438160 <nftw@plt+0x355e0>
  437f28:	ldr	w0, [sp, #216]
  437f2c:	cmp	w0, #0x15
  437f30:	b.eq	4380f4 <nftw@plt+0x35574>  // b.none
  437f34:	ldr	w0, [sp, #240]
  437f38:	add	w22, w22, #0x1
  437f3c:	add	x26, x26, #0x40
  437f40:	cmp	w0, w22
  437f44:	b.ne	437e60 <nftw@plt+0x352e0>  // b.any
  437f48:	ldr	w0, [sp, #328]
  437f4c:	str	w27, [sp, #208]
  437f50:	cmp	w0, #0x0
  437f54:	str	w23, [sp, #216]
  437f58:	csel	w0, w0, w25, ne  // ne = any
  437f5c:	ldr	w22, [sp, #264]
  437f60:	cmp	w0, #0x0
  437f64:	ccmp	w21, #0x0, #0x4, ne  // ne = any
  437f68:	ldr	x21, [sp, #256]
  437f6c:	ldp	x19, x20, [sp, #272]
  437f70:	ldr	x24, [sp, #352]
  437f74:	ldr	x27, [sp, #392]
  437f78:	b.eq	4383dc <nftw@plt+0x3585c>  // b.none
  437f7c:	sub	w26, w0, #0x1
  437f80:	ldr	x0, [sp, #320]
  437f84:	add	x26, x0, x26, lsl #6
  437f88:	ldr	w0, [sp, #240]
  437f8c:	ldr	w28, [x26, #40]
  437f90:	cmp	w0, w28
  437f94:	b.hi	4382dc <nftw@plt+0x3575c>  // b.pmore
  437f98:	mov	x0, x20
  437f9c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  437fa0:	mov	w2, #0x0                   	// #0
  437fa4:	add	x1, x1, #0x700
  437fa8:	mov	w23, #0x0                   	// #0
  437fac:	blr	x19
  437fb0:	str	wzr, [sp, #240]
  437fb4:	ldr	x1, [sp, #224]
  437fb8:	mov	x3, x20
  437fbc:	mov	x2, x19
  437fc0:	mov	x0, x21
  437fc4:	bl	439288 <nftw@plt+0x36708>
  437fc8:	ldr	x1, [sp, #232]
  437fcc:	mov	x0, x21
  437fd0:	mov	x3, x20
  437fd4:	mov	x2, x19
  437fd8:	bl	439288 <nftw@plt+0x36708>
  437fdc:	ldr	w0, [sp, #240]
  437fe0:	cbz	w0, 437ff8 <nftw@plt+0x35478>
  437fe4:	mov	x3, x20
  437fe8:	mov	x2, x19
  437fec:	add	x1, sp, #0x1f0
  437ff0:	mov	x0, x21
  437ff4:	bl	439288 <nftw@plt+0x36708>
  437ff8:	cbnz	w23, 4380a0 <nftw@plt+0x35520>
  437ffc:	ldr	w0, [sp, #208]
  438000:	cbz	w0, 438018 <nftw@plt+0x35498>
  438004:	mov	x3, x20
  438008:	mov	x2, x19
  43800c:	add	x1, sp, #0x238
  438010:	mov	x0, x21
  438014:	bl	439288 <nftw@plt+0x36708>
  438018:	ldr	w0, [sp, #216]
  43801c:	cbz	w0, 437cf8 <nftw@plt+0x35178>
  438020:	mov	x3, x20
  438024:	mov	x2, x19
  438028:	add	x1, sp, #0x250
  43802c:	mov	x0, x21
  438030:	bl	439288 <nftw@plt+0x36708>
  438034:	b	437cf8 <nftw@plt+0x35178>
  438038:	ldp	x2, x3, [x26, #24]
  43803c:	add	x6, sp, #0x238
  438040:	ldp	x4, x5, [sp, #272]
  438044:	ldr	w1, [sp, #264]
  438048:	ldr	x0, [sp, #256]
  43804c:	bl	4391b8 <nftw@plt+0x36638>
  438050:	mov	w7, w0
  438054:	cbz	w0, 4383b8 <nftw@plt+0x35838>
  438058:	ldr	x1, [x26, #32]
  43805c:	str	x1, [sp, #296]
  438060:	ldr	x2, [sp, #568]
  438064:	str	x2, [sp, #312]
  438068:	mov	w27, #0x1                   	// #1
  43806c:	mov	x0, x2
  438070:	bl	402540 <strnlen@plt>
  438074:	add	x0, x0, #0x3
  438078:	ldr	x1, [sp, #296]
  43807c:	and	x0, x0, #0xfffffffffffffffc
  438080:	add	x3, x0, #0x4
  438084:	cmp	x1, x3
  438088:	b.cc	437f10 <nftw@plt+0x35390>  // b.lo, b.ul, b.last
  43808c:	ldr	x2, [sp, #312]
  438090:	str	x2, [sp, #344]
  438094:	ldr	w0, [x2, x0]
  438098:	str	w0, [sp, #332]
  43809c:	b	437f10 <nftw@plt+0x35390>
  4380a0:	mov	w23, #0x0                   	// #0
  4380a4:	mov	x3, x20
  4380a8:	mov	x2, x19
  4380ac:	add	x1, sp, #0x208
  4380b0:	mov	x0, x21
  4380b4:	bl	439288 <nftw@plt+0x36708>
  4380b8:	b	437ffc <nftw@plt+0x3547c>
  4380bc:	ldr	x4, [sp, #288]
  4380c0:	sbfiz	x1, x1, #5, #32
  4380c4:	ldr	x3, [x26, #24]
  4380c8:	add	x0, sp, #0x378
  4380cc:	str	x3, [x4, x1]
  4380d0:	add	x2, sp, #0x388
  4380d4:	ldr	x3, [x26, #32]
  4380d8:	str	x3, [x0, x1]
  4380dc:	ldr	x0, [x26, #8]
  4380e0:	ubfx	w0, w0, #11, #1
  4380e4:	str	w0, [x2, x1]
  4380e8:	b	437eb8 <nftw@plt+0x35338>
  4380ec:	str	w22, [sp, #328]
  4380f0:	b	437e74 <nftw@plt+0x352f4>
  4380f4:	ldr	x0, [sp, #208]
  4380f8:	tbnz	w0, #1, 437f34 <nftw@plt+0x353b4>
  4380fc:	ldr	w0, [x26, #4]
  438100:	cmp	w0, #0x1
  438104:	b.ne	437f34 <nftw@plt+0x353b4>  // b.any
  438108:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43810c:	mov	x0, x19
  438110:	add	x1, x1, #0x6f8
  438114:	bl	402890 <strcmp@plt>
  438118:	cbnz	w0, 437f34 <nftw@plt+0x353b4>
  43811c:	ldp	x2, x3, [x26, #24]
  438120:	ldp	x4, x5, [sp, #272]
  438124:	ldr	w1, [sp, #264]
  438128:	ldr	x0, [sp, #256]
  43812c:	ldr	x6, [sp, #384]
  438130:	bl	4391b8 <nftw@plt+0x36638>
  438134:	mov	w7, w0
  438138:	cbz	w0, 4383b8 <nftw@plt+0x35838>
  43813c:	ldr	x0, [x26, #16]
  438140:	str	x0, [sp, #640]
  438144:	ldr	x0, [sp, #376]
  438148:	str	x0, [sp, #352]
  43814c:	ldr	x0, [x26, #32]
  438150:	str	x0, [sp, #656]
  438154:	ldr	x0, [sp, #664]
  438158:	str	x0, [sp, #648]
  43815c:	b	437f34 <nftw@plt+0x353b4>
  438160:	ldp	x2, x3, [x26, #24]
  438164:	add	x6, sp, #0x250
  438168:	ldp	x4, x5, [sp, #272]
  43816c:	ldr	w1, [sp, #264]
  438170:	ldr	x0, [sp, #256]
  438174:	bl	4391b8 <nftw@plt+0x36638>
  438178:	mov	w7, w0
  43817c:	cbz	w0, 4383b8 <nftw@plt+0x35838>
  438180:	ldr	x1, [x26, #32]
  438184:	mov	w23, #0x1                   	// #1
  438188:	ldr	x0, [sp, #592]
  43818c:	stp	x1, x0, [sp, #296]
  438190:	bl	402540 <strnlen@plt>
  438194:	ldr	x1, [sp, #296]
  438198:	cmp	x1, x0
  43819c:	b.ls	437f28 <nftw@plt+0x353a8>  // b.plast
  4381a0:	add	x0, x0, #0x1
  4381a4:	sub	w2, w1, w0
  4381a8:	str	w2, [sp, #368]
  4381ac:	ldr	x1, [sp, #304]
  4381b0:	add	x0, x1, x0
  4381b4:	str	x0, [sp, #336]
  4381b8:	b	437f28 <nftw@plt+0x353a8>
  4381bc:	ldp	x2, x3, [x26, #24]
  4381c0:	add	x6, sp, #0x220
  4381c4:	ldp	x4, x5, [sp, #272]
  4381c8:	str	w7, [sp, #296]
  4381cc:	ldr	w1, [sp, #264]
  4381d0:	ldr	x0, [sp, #256]
  4381d4:	bl	4391b8 <nftw@plt+0x36638>
  4381d8:	cbz	w0, 438a28 <nftw@plt+0x35ea8>
  4381dc:	ldr	x2, [sp, #544]
  4381e0:	ldr	w7, [sp, #296]
  4381e4:	ldr	w0, [x2, #8]
  4381e8:	cmp	w0, #0x3
  4381ec:	b.eq	438230 <nftw@plt+0x356b0>  // b.none
  4381f0:	ldr	w0, [sp, #1240]
  4381f4:	cbz	w0, 438224 <nftw@plt+0x356a4>
  4381f8:	ldr	w0, [sp, #372]
  4381fc:	ldr	w1, [sp, #1240]
  438200:	cmp	w0, w1
  438204:	b.ne	438a50 <nftw@plt+0x35ed0>  // b.any
  438208:	mov	w2, w0
  43820c:	str	w7, [sp, #200]
  438210:	ldr	x0, [sp, #360]
  438214:	ldr	x1, [sp, #1232]
  438218:	bl	402850 <memcmp@plt>
  43821c:	ldr	w7, [sp, #200]
  438220:	cbnz	w0, 438a50 <nftw@plt+0x35ed0>
  438224:	mov	w0, #0x1                   	// #1
  438228:	str	w0, [sp, #200]
  43822c:	b	437ef0 <nftw@plt+0x35370>
  438230:	ldr	w0, [x2]
  438234:	cmp	w0, #0x4
  438238:	b.ne	4381f0 <nftw@plt+0x35670>  // b.any
  43823c:	add	x0, x2, #0xc
  438240:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  438244:	add	x1, x1, #0x6c8
  438248:	str	x2, [sp, #200]
  43824c:	str	w7, [sp, #296]
  438250:	bl	402890 <strcmp@plt>
  438254:	ldr	w7, [sp, #296]
  438258:	cbnz	w0, 4381f0 <nftw@plt+0x35670>
  43825c:	ldr	x2, [sp, #200]
  438260:	ldr	x3, [x26, #32]
  438264:	ldr	w0, [x2, #4]
  438268:	add	w1, w0, #0x10
  43826c:	cmp	x3, x1
  438270:	b.hi	4381f0 <nftw@plt+0x35670>  // b.pmore
  438274:	add	x1, x2, #0x10
  438278:	str	x1, [sp, #360]
  43827c:	str	w0, [sp, #372]
  438280:	b	4381f0 <nftw@plt+0x35670>
  438284:	ldr	w1, [x0, #32]
  438288:	cmp	w24, w25
  43828c:	str	w1, [sp, #240]
  438290:	b.ne	437db4 <nftw@plt+0x35234>  // b.any
  438294:	b	437d98 <nftw@plt+0x35218>
  438298:	ldp	x19, x20, [sp, #272]
  43829c:	str	w27, [sp, #208]
  4382a0:	str	w23, [sp, #216]
  4382a4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  4382a8:	ldr	w22, [sp, #264]
  4382ac:	add	x1, x1, #0x690
  4382b0:	mov	w2, #0x0                   	// #0
  4382b4:	mov	w23, #0x0                   	// #0
  4382b8:	ldr	x21, [sp, #256]
  4382bc:	mov	x0, x20
  4382c0:	ldr	x24, [sp, #352]
  4382c4:	blr	x19
  4382c8:	str	wzr, [sp, #240]
  4382cc:	b	437fb4 <nftw@plt+0x35434>
  4382d0:	mov	x24, #0x0                   	// #0
  4382d4:	ldp	x25, x26, [sp, #144]
  4382d8:	b	437aa8 <nftw@plt+0x34f28>
  4382dc:	ldp	x2, x3, [x26, #24]
  4382e0:	add	x25, sp, #0x1f0
  4382e4:	mov	x6, x25
  4382e8:	mov	x5, x20
  4382ec:	mov	x4, x19
  4382f0:	mov	w1, w22
  4382f4:	mov	x0, x21
  4382f8:	mov	w23, #0x0                   	// #0
  4382fc:	bl	4391b8 <nftw@plt+0x36638>
  438300:	str	w0, [sp, #240]
  438304:	cbz	w0, 437fb4 <nftw@plt+0x35434>
  438308:	ldr	x0, [sp, #320]
  43830c:	sub	w28, w28, #0x1
  438310:	add	x6, sp, #0x208
  438314:	mov	x5, x20
  438318:	mov	x4, x19
  43831c:	mov	w1, w22
  438320:	add	x28, x0, x28, lsl #6
  438324:	mov	x0, x21
  438328:	ldp	x2, x3, [x28, #24]
  43832c:	bl	4391b8 <nftw@plt+0x36638>
  438330:	mov	w23, w0
  438334:	cbz	w0, 4388e8 <nftw@plt+0x35d68>
  438338:	mov	x3, x20
  43833c:	mov	x2, x19
  438340:	mov	x0, x21
  438344:	mov	x1, #0x18                  	// #24
  438348:	bl	435b68 <nftw@plt+0x32fe8>
  43834c:	mov	x23, x0
  438350:	cbz	x0, 438e3c <nftw@plt+0x362bc>
  438354:	ldr	x4, [x26, #32]
  438358:	mov	x0, #0x18                  	// #24
  43835c:	ldr	x7, [x28, #32]
  438360:	cmp	x4, #0x17
  438364:	udiv	x4, x4, x0
  438368:	ldr	x6, [sp, #496]
  43836c:	ldr	x12, [sp, #520]
  438370:	b.ls	438e18 <nftw@plt+0x36298>  // b.plast
  438374:	mov	x1, x6
  438378:	mov	x2, #0x0                   	// #0
  43837c:	mov	x28, #0x0                   	// #0
  438380:	b	438390 <nftw@plt+0x35810>
  438384:	add	x1, x1, #0x18
  438388:	cmp	x4, x2
  43838c:	b.ls	4388f4 <nftw@plt+0x35d74>  // b.plast
  438390:	ldrb	w0, [x1, #4]
  438394:	add	x2, x2, #0x1
  438398:	and	w0, w0, #0xf
  43839c:	sub	w0, w0, #0x1
  4383a0:	cmp	w0, #0x1
  4383a4:	b.hi	438384 <nftw@plt+0x35804>  // b.pmore
  4383a8:	ldrh	w0, [x1, #6]
  4383ac:	cbz	w0, 438384 <nftw@plt+0x35804>
  4383b0:	add	x28, x28, #0x1
  4383b4:	b	438384 <nftw@plt+0x35804>
  4383b8:	ldr	w22, [sp, #264]
  4383bc:	str	w27, [sp, #208]
  4383c0:	str	w23, [sp, #216]
  4383c4:	mov	w23, #0x0                   	// #0
  4383c8:	str	w7, [sp, #240]
  4383cc:	ldr	x21, [sp, #256]
  4383d0:	ldp	x19, x20, [sp, #272]
  4383d4:	ldr	x24, [sp, #352]
  4383d8:	b	437fb4 <nftw@plt+0x35434>
  4383dc:	str	wzr, [sp, #240]
  4383e0:	ldr	x1, [sp, #224]
  4383e4:	mov	x3, x20
  4383e8:	mov	x2, x19
  4383ec:	mov	x0, x21
  4383f0:	bl	439288 <nftw@plt+0x36708>
  4383f4:	ldr	x1, [sp, #232]
  4383f8:	mov	x3, x20
  4383fc:	mov	x2, x19
  438400:	mov	x0, x21
  438404:	bl	439288 <nftw@plt+0x36708>
  438408:	ldr	x23, [sp, #360]
  43840c:	cbz	x23, 4384c8 <nftw@plt+0x35948>
  438410:	ldr	w25, [sp, #372]
  438414:	mov	x26, #0x21                  	// #33
  438418:	mov	x3, x20
  43841c:	mov	x2, x19
  438420:	mov	x0, x21
  438424:	add	x26, x26, w25, uxtw #1
  438428:	mov	x1, x26
  43842c:	bl	435b68 <nftw@plt+0x32fe8>
  438430:	mov	w6, w25
  438434:	mov	x25, x0
  438438:	cbz	x0, 4384c8 <nftw@plt+0x35948>
  43843c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  438440:	add	x2, x2, #0x758
  438444:	add	x4, x0, #0x19
  438448:	ldp	x0, x1, [x2]
  43844c:	stp	x0, x1, [x25]
  438450:	ldrb	w0, [x2, #24]
  438454:	ldr	x1, [x2, #16]
  438458:	str	x1, [x25, #16]
  43845c:	strb	w0, [x25, #24]
  438460:	cbz	x6, 438784 <nftw@plt+0x35c04>
  438464:	mov	x8, x23
  438468:	mov	x2, #0x0                   	// #0
  43846c:	mov	w7, #0x2f                  	// #47
  438470:	b	438484 <nftw@plt+0x35904>
  438474:	add	x4, x4, #0x2
  438478:	add	x2, x2, #0x1
  43847c:	cmp	x6, x2
  438480:	b.eq	438784 <nftw@plt+0x35c04>  // b.none
  438484:	ldrb	w0, [x8, x2]
  438488:	and	w1, w0, #0xf
  43848c:	lsr	w0, w0, #4
  438490:	add	w3, w1, #0x30
  438494:	cmp	w0, #0x9
  438498:	add	w5, w0, #0x30
  43849c:	add	w0, w0, #0x57
  4384a0:	csel	w0, w0, w5, hi  // hi = pmore
  4384a4:	cmp	w1, #0x9
  4384a8:	add	w1, w1, #0x57
  4384ac:	strb	w0, [x4]
  4384b0:	csel	w0, w1, w3, hi  // hi = pmore
  4384b4:	strb	w0, [x4, #1]
  4384b8:	cbnz	x2, 438474 <nftw@plt+0x358f4>
  4384bc:	add	x4, x4, #0x3
  4384c0:	sturb	w7, [x4, #-1]
  4384c4:	b	438478 <nftw@plt+0x358f8>
  4384c8:	ldr	w0, [sp, #200]
  4384cc:	cbnz	w0, 438594 <nftw@plt+0x35a14>
  4384d0:	cbz	x24, 4384e8 <nftw@plt+0x35968>
  4384d4:	add	x1, x24, #0x18
  4384d8:	mov	x3, x20
  4384dc:	mov	x2, x19
  4384e0:	mov	x0, x21
  4384e4:	bl	439288 <nftw@plt+0x36708>
  4384e8:	ldr	x0, [sp, #344]
  4384ec:	cbz	x0, 438658 <nftw@plt+0x35ad8>
  4384f0:	ldr	x1, [sp, #192]
  4384f4:	mov	x2, x0
  4384f8:	mov	x4, x20
  4384fc:	mov	x3, x19
  438500:	mov	x0, x21
  438504:	bl	4368c8 <nftw@plt+0x33d48>
  438508:	mov	w23, w0
  43850c:	tbnz	w0, #31, 438658 <nftw@plt+0x35ad8>
  438510:	ldr	w0, [sp, #332]
  438514:	cbnz	w0, 4385ac <nftw@plt+0x35a2c>
  438518:	mov	x3, x20
  43851c:	mov	x2, x19
  438520:	add	x1, sp, #0x238
  438524:	mov	x0, x21
  438528:	bl	439288 <nftw@plt+0x36708>
  43852c:	ldr	w0, [sp, #216]
  438530:	cbnz	w0, 438b70 <nftw@plt+0x35ff0>
  438534:	ldp	x3, x6, [sp, #176]
  438538:	mov	w0, #0x1                   	// #1
  43853c:	ldr	x1, [sp, #1200]
  438540:	stp	x1, xzr, [sp]
  438544:	mov	w2, w23
  438548:	str	wzr, [sp, #16]
  43854c:	mov	x7, x27
  438550:	str	w0, [sp, #24]
  438554:	mov	x5, x20
  438558:	str	xzr, [sp, #32]
  43855c:	mov	x4, x19
  438560:	str	wzr, [sp, #40]
  438564:	mov	x0, x21
  438568:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x105a0>
  43856c:	add	x1, x1, #0xbd0
  438570:	bl	437a28 <nftw@plt+0x34ea8>
  438574:	mov	w24, w0
  438578:	mov	x2, x20
  43857c:	mov	x1, x19
  438580:	tbnz	w0, #31, 4388d8 <nftw@plt+0x35d58>
  438584:	mov	w0, w22
  438588:	bl	436220 <nftw@plt+0x336a0>
  43858c:	ldp	x25, x26, [sp, #144]
  438590:	b	437ae0 <nftw@plt+0x34f60>
  438594:	mov	x3, x20
  438598:	mov	x2, x19
  43859c:	add	x1, sp, #0x220
  4385a0:	mov	x0, x21
  4385a4:	bl	439288 <nftw@plt+0x36708>
  4385a8:	b	4384d0 <nftw@plt+0x35950>
  4385ac:	add	x2, sp, #0x2f0
  4385b0:	mov	w1, w23
  4385b4:	mov	w0, #0x0                   	// #0
  4385b8:	bl	402a10 <__fxstat@plt>
  4385bc:	tbnz	w0, #31, 438b88 <nftw@plt+0x36008>
  4385c0:	ldr	x3, [sp, #800]
  4385c4:	add	x25, sp, #0x268
  4385c8:	mov	x6, x25
  4385cc:	mov	x5, x20
  4385d0:	mov	x4, x19
  4385d4:	mov	w1, w23
  4385d8:	mov	x0, x21
  4385dc:	mov	x2, #0x0                   	// #0
  4385e0:	bl	4391b8 <nftw@plt+0x36638>
  4385e4:	cbz	w0, 438648 <nftw@plt+0x35ac8>
  4385e8:	ldr	x2, [sp, #616]
  4385ec:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  4385f0:	ldr	x3, [sp, #800]
  4385f4:	add	x0, x0, #0x818
  4385f8:	add	x0, x0, #0x4e0
  4385fc:	mov	w24, #0xffffffff            	// #-1
  438600:	add	x3, x2, x3
  438604:	b	43861c <nftw@plt+0x35a9c>
  438608:	ldrb	w1, [x2], #1
  43860c:	eor	w1, w1, w24
  438610:	and	x1, x1, #0xff
  438614:	ldr	w1, [x0, x1, lsl #2]
  438618:	eor	w24, w1, w24, lsr #8
  43861c:	cmp	x3, x2
  438620:	b.hi	438608 <nftw@plt+0x35a88>  // b.pmore
  438624:	mov	x0, x21
  438628:	mov	x1, x25
  43862c:	mov	x3, x20
  438630:	mov	x2, x19
  438634:	bl	439288 <nftw@plt+0x36708>
  438638:	mvn	w24, w24
  43863c:	ldr	w0, [sp, #332]
  438640:	cmp	w24, w0
  438644:	b.eq	438518 <nftw@plt+0x35998>  // b.none
  438648:	mov	w0, w23
  43864c:	mov	x2, x20
  438650:	mov	x1, x19
  438654:	bl	436220 <nftw@plt+0x336a0>
  438658:	ldr	w0, [sp, #208]
  43865c:	cbnz	w0, 4388ac <nftw@plt+0x35d2c>
  438660:	ldr	x0, [sp, #304]
  438664:	str	xzr, [sp, #408]
  438668:	cbz	x0, 4387f4 <nftw@plt+0x35c74>
  43866c:	ldr	x24, [sp, #192]
  438670:	mov	x2, x0
  438674:	mov	x4, x20
  438678:	mov	x3, x19
  43867c:	mov	x0, x21
  438680:	mov	x1, x24
  438684:	bl	4368c8 <nftw@plt+0x33d48>
  438688:	mov	w23, w0
  43868c:	tbnz	w0, #31, 4387f4 <nftw@plt+0x35c74>
  438690:	mov	w8, #0x1                   	// #1
  438694:	str	w8, [sp, #24]
  438698:	ldp	x3, x6, [sp, #176]
  43869c:	add	x0, sp, #0x198
  4386a0:	ldr	x8, [sp, #336]
  4386a4:	str	x8, [sp, #32]
  4386a8:	ldr	w8, [sp, #368]
  4386ac:	mov	x7, x27
  4386b0:	ldr	x1, [sp, #1200]
  4386b4:	mov	x5, x20
  4386b8:	mov	x4, x19
  4386bc:	stp	x1, x0, [sp]
  4386c0:	mov	w2, w23
  4386c4:	str	wzr, [sp, #16]
  4386c8:	mov	x1, x24
  4386cc:	str	w8, [sp, #40]
  4386d0:	mov	x0, x21
  4386d4:	bl	437a28 <nftw@plt+0x34ea8>
  4386d8:	mov	w24, w0
  4386dc:	mov	x3, x20
  4386e0:	mov	x2, x19
  4386e4:	add	x1, sp, #0x250
  4386e8:	mov	x0, x21
  4386ec:	bl	439288 <nftw@plt+0x36708>
  4386f0:	tbnz	w24, #31, 4388d0 <nftw@plt+0x35d50>
  4386f4:	ldr	x0, [sp, #288]
  4386f8:	add	x4, sp, #0x4b0
  4386fc:	mov	x3, #0x0                   	// #0
  438700:	mov	x26, #0x0                   	// #0
  438704:	mov	x24, x0
  438708:	b	43872c <nftw@plt+0x35bac>
  43870c:	cmp	x1, x26
  438710:	csel	x26, x26, x1, ge  // ge = tcont
  438714:	add	x1, x1, x2
  438718:	cmp	x3, x1
  43871c:	csel	x3, x3, x1, ge  // ge = tcont
  438720:	add	x0, x0, #0x20
  438724:	cmp	x4, x0
  438728:	b.eq	438744 <nftw@plt+0x35bc4>  // b.none
  43872c:	ldr	x2, [x0, #8]
  438730:	cbz	x2, 438720 <nftw@plt+0x35ba0>
  438734:	ldr	x1, [x0]
  438738:	cbnz	x26, 43870c <nftw@plt+0x35b8c>
  43873c:	mov	x26, x1
  438740:	b	438714 <nftw@plt+0x35b94>
  438744:	cmp	x26, #0x0
  438748:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43874c:	b.ne	438814 <nftw@plt+0x35c94>  // b.any
  438750:	mov	x2, x20
  438754:	mov	x1, x19
  438758:	mov	w0, w22
  43875c:	bl	436220 <nftw@plt+0x336a0>
  438760:	mov	w23, w0
  438764:	cbnz	w0, 4388c4 <nftw@plt+0x35d44>
  438768:	ldr	w0, [sp, #240]
  43876c:	cbz	w0, 4382d0 <nftw@plt+0x35750>
  438770:	mov	x24, #0x0                   	// #0
  438774:	str	wzr, [sp, #200]
  438778:	str	wzr, [sp, #208]
  43877c:	str	wzr, [sp, #216]
  438780:	b	4380a4 <nftw@plt+0x35524>
  438784:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  438788:	add	x0, x0, #0x778
  43878c:	strb	wzr, [x4, #6]
  438790:	add	x3, sp, #0x2f0
  438794:	mov	x2, x20
  438798:	ldr	w1, [x0]
  43879c:	ldrh	w0, [x0, #4]
  4387a0:	str	w1, [x4]
  4387a4:	mov	x1, x19
  4387a8:	strh	w0, [x4, #4]
  4387ac:	mov	x0, x25
  4387b0:	bl	436170 <nftw@plt+0x335f0>
  4387b4:	mov	w23, w0
  4387b8:	mov	x2, x26
  4387bc:	mov	x1, x25
  4387c0:	mov	x4, x20
  4387c4:	mov	x3, x19
  4387c8:	mov	x0, x21
  4387cc:	bl	435a90 <nftw@plt+0x32f10>
  4387d0:	tbnz	w23, #31, 4384c8 <nftw@plt+0x35948>
  4387d4:	mov	x0, x21
  4387d8:	mov	x3, x20
  4387dc:	mov	x2, x19
  4387e0:	add	x1, sp, #0x220
  4387e4:	bl	439288 <nftw@plt+0x36708>
  4387e8:	ldr	w0, [sp, #208]
  4387ec:	cbz	w0, 43852c <nftw@plt+0x359ac>
  4387f0:	b	438518 <nftw@plt+0x35998>
  4387f4:	ldr	w0, [sp, #216]
  4387f8:	cbz	w0, 4386f4 <nftw@plt+0x35b74>
  4387fc:	mov	x3, x20
  438800:	mov	x2, x19
  438804:	add	x1, sp, #0x250
  438808:	mov	x0, x21
  43880c:	bl	439288 <nftw@plt+0x36708>
  438810:	b	4386f4 <nftw@plt+0x35b74>
  438814:	add	x0, sp, #0x2f0
  438818:	sub	x3, x3, x26
  43881c:	mov	x6, x0
  438820:	mov	x5, x20
  438824:	mov	x4, x19
  438828:	mov	x2, x26
  43882c:	mov	w1, w22
  438830:	str	x0, [sp, #192]
  438834:	mov	x0, x21
  438838:	bl	4391b8 <nftw@plt+0x36638>
  43883c:	mov	w23, w0
  438840:	cbz	w0, 438768 <nftw@plt+0x35be8>
  438844:	mov	x2, x20
  438848:	mov	x1, x19
  43884c:	mov	w0, w22
  438850:	bl	436220 <nftw@plt+0x336a0>
  438854:	cbz	w0, 438ba8 <nftw@plt+0x36028>
  438858:	mov	w22, #0x0                   	// #0
  43885c:	mov	w1, #0x0                   	// #0
  438860:	ldr	x0, [sp, #288]
  438864:	ldr	x3, [sp, #752]
  438868:	b	438880 <nftw@plt+0x35d00>
  43886c:	str	xzr, [x0, #16]
  438870:	cmp	w2, #0xa
  438874:	b.eq	438bb0 <nftw@plt+0x36030>  // b.none
  438878:	add	x0, x0, #0x20
  43887c:	mov	w1, w2
  438880:	ldr	x4, [x0, #8]
  438884:	add	w2, w1, #0x1
  438888:	cmp	w1, #0x4
  43888c:	cbz	x4, 43886c <nftw@plt+0x35cec>
  438890:	ldr	x1, [x0]
  438894:	sub	x1, x1, x26
  438898:	add	x1, x3, x1
  43889c:	str	x1, [x0, #16]
  4388a0:	b.hi	438870 <nftw@plt+0x35cf0>  // b.pmore
  4388a4:	add	w22, w22, #0x1
  4388a8:	b	438878 <nftw@plt+0x35cf8>
  4388ac:	mov	x3, x20
  4388b0:	mov	x2, x19
  4388b4:	add	x1, sp, #0x238
  4388b8:	mov	x0, x21
  4388bc:	bl	439288 <nftw@plt+0x36708>
  4388c0:	b	438660 <nftw@plt+0x35ae0>
  4388c4:	mov	w24, #0x1                   	// #1
  4388c8:	ldp	x25, x26, [sp, #144]
  4388cc:	b	437ae0 <nftw@plt+0x34f60>
  4388d0:	mov	x2, x20
  4388d4:	mov	x1, x19
  4388d8:	mov	w0, w23
  4388dc:	bl	436220 <nftw@plt+0x336a0>
  4388e0:	ldp	x25, x26, [sp, #144]
  4388e4:	b	437ae0 <nftw@plt+0x34f60>
  4388e8:	mov	w0, #0x1                   	// #1
  4388ec:	str	w0, [sp, #240]
  4388f0:	b	437fb4 <nftw@plt+0x35434>
  4388f4:	mov	x8, #0x18                  	// #24
  4388f8:	mov	x3, x20
  4388fc:	mov	x2, x19
  438900:	mov	x0, x21
  438904:	mul	x5, x28, x8
  438908:	stp	x7, x4, [sp, #256]
  43890c:	mov	x1, x5
  438910:	stp	x5, x12, [sp, #240]
  438914:	str	x6, [sp, #272]
  438918:	bl	435b68 <nftw@plt+0x32fe8>
  43891c:	mov	x26, x0
  438920:	cbz	x0, 438ab0 <nftw@plt+0x35f30>
  438924:	ldp	x5, x12, [sp, #240]
  438928:	mov	x8, #0x18                  	// #24
  43892c:	ldp	x7, x4, [sp, #256]
  438930:	mov	x1, #0x0                   	// #0
  438934:	ldr	x6, [sp, #272]
  438938:	mov	w3, #0x0                   	// #0
  43893c:	ldrb	w0, [x6, #4]
  438940:	add	x1, x1, #0x1
  438944:	and	w0, w0, #0xf
  438948:	sub	w0, w0, #0x1
  43894c:	cmp	w0, #0x1
  438950:	b.hi	4389c0 <nftw@plt+0x35e40>  // b.pmore
  438954:	ldrh	w2, [x6, #6]
  438958:	umull	x0, w3, w8
  43895c:	add	x9, x26, x0
  438960:	cbz	w2, 4389c0 <nftw@plt+0x35e40>
  438964:	ldr	w2, [x6]
  438968:	add	w3, w3, #0x1
  43896c:	add	x10, x12, x2
  438970:	cmp	x7, x2
  438974:	b.ls	438a7c <nftw@plt+0x35efc>  // b.plast
  438978:	str	x10, [x26, x0]
  43897c:	ldr	x0, [x6, #8]
  438980:	cbz	x24, 4389ac <nftw@plt+0x35e2c>
  438984:	ldr	x2, [x24]
  438988:	cmp	x2, x0
  43898c:	b.hi	4389ac <nftw@plt+0x35e2c>  // b.pmore
  438990:	ldr	x11, [x24, #16]
  438994:	sub	x10, x0, x2
  438998:	add	x2, x2, x11
  43899c:	cmp	x2, x0
  4389a0:	b.ls	4389ac <nftw@plt+0x35e2c>  // b.plast
  4389a4:	ldr	x0, [x24, #8]
  4389a8:	ldr	x0, [x0, x10]
  4389ac:	ldr	x2, [sp, #176]
  4389b0:	add	x0, x2, x0
  4389b4:	str	x0, [x9, #8]
  4389b8:	ldr	x0, [x6, #16]
  4389bc:	str	x0, [x9, #16]
  4389c0:	add	x6, x6, #0x18
  4389c4:	cmp	x4, x1
  4389c8:	b.hi	43893c <nftw@plt+0x35dbc>  // b.pmore
  4389cc:	mov	x1, x28
  4389d0:	mov	x0, x26
  4389d4:	mov	x2, #0x18                  	// #24
  4389d8:	adrp	x3, 436000 <nftw@plt+0x33480>
  4389dc:	add	x3, x3, #0x2b8
  4389e0:	bl	43cb10 <nftw@plt+0x39f90>
  4389e4:	stp	xzr, x26, [x23]
  4389e8:	mov	x1, x25
  4389ec:	mov	x0, x21
  4389f0:	str	x28, [x23, #16]
  4389f4:	mov	x3, x20
  4389f8:	mov	x2, x19
  4389fc:	bl	439288 <nftw@plt+0x36708>
  438a00:	mov	w0, #0x1                   	// #1
  438a04:	str	w0, [x27]
  438a08:	add	x1, x21, #0x30
  438a0c:	ldr	w0, [x21, #8]
  438a10:	cbnz	w0, 438ad4 <nftw@plt+0x35f54>
  438a14:	ldr	x0, [x21, #48]
  438a18:	cbz	x0, 438b10 <nftw@plt+0x35f90>
  438a1c:	mov	x1, x0
  438a20:	ldr	x0, [x0]
  438a24:	b	438a18 <nftw@plt+0x35e98>
  438a28:	str	w23, [sp, #216]
  438a2c:	mov	w23, w0
  438a30:	ldr	w0, [sp, #200]
  438a34:	ldr	w22, [sp, #264]
  438a38:	str	w27, [sp, #208]
  438a3c:	str	w0, [sp, #240]
  438a40:	ldr	x21, [sp, #256]
  438a44:	ldp	x19, x20, [sp, #272]
  438a48:	ldr	x24, [sp, #352]
  438a4c:	b	437fb4 <nftw@plt+0x35434>
  438a50:	mov	w0, #0x1                   	// #1
  438a54:	ldr	w22, [sp, #264]
  438a58:	str	w0, [sp, #200]
  438a5c:	str	w27, [sp, #208]
  438a60:	str	w23, [sp, #216]
  438a64:	mov	w23, #0x0                   	// #0
  438a68:	str	w7, [sp, #240]
  438a6c:	ldr	x21, [sp, #256]
  438a70:	ldp	x19, x20, [sp, #272]
  438a74:	ldr	x24, [sp, #352]
  438a78:	b	437fb4 <nftw@plt+0x35434>
  438a7c:	str	x5, [sp, #176]
  438a80:	mov	x0, x20
  438a84:	mov	w2, #0x0                   	// #0
  438a88:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  438a8c:	add	x1, x1, #0x730
  438a90:	blr	x19
  438a94:	ldr	x5, [sp, #176]
  438a98:	mov	x4, x20
  438a9c:	mov	x3, x19
  438aa0:	mov	x1, x26
  438aa4:	mov	x0, x21
  438aa8:	mov	x2, x5
  438aac:	bl	435a90 <nftw@plt+0x32f10>
  438ab0:	mov	x1, x23
  438ab4:	mov	x4, x20
  438ab8:	mov	x3, x19
  438abc:	mov	x0, x21
  438ac0:	mov	x2, #0x18                  	// #24
  438ac4:	mov	w23, #0x1                   	// #1
  438ac8:	bl	435a90 <nftw@plt+0x32f10>
  438acc:	str	w23, [sp, #240]
  438ad0:	b	437fb4 <nftw@plt+0x35434>
  438ad4:	mov	x0, x1
  438ad8:	b	438ae0 <nftw@plt+0x35f60>
  438adc:	mov	x0, x2
  438ae0:	ldar	x2, [x0]
  438ae4:	cbnz	x2, 438adc <nftw@plt+0x35f5c>
  438ae8:	ldxr	x2, [x0]
  438aec:	cbnz	x2, 438af8 <nftw@plt+0x35f78>
  438af0:	stlxr	w3, x23, [x0]
  438af4:	cbnz	w3, 438ae8 <nftw@plt+0x35f68>
  438af8:	dmb	ish
  438afc:	cmp	x2, #0x0
  438b00:	b.ne	438ad4 <nftw@plt+0x35f54>  // b.any
  438b04:	mov	w0, #0x1                   	// #1
  438b08:	str	w0, [sp, #240]
  438b0c:	b	4383e0 <nftw@plt+0x35860>
  438b10:	mov	w0, #0x1                   	// #1
  438b14:	str	x23, [x1]
  438b18:	str	w0, [sp, #240]
  438b1c:	b	4383e0 <nftw@plt+0x35860>
  438b20:	ldr	x1, [sp, #224]
  438b24:	mov	x3, x20
  438b28:	mov	x2, x19
  438b2c:	mov	x0, x21
  438b30:	str	xzr, [sp, #336]
  438b34:	bl	439288 <nftw@plt+0x36708>
  438b38:	str	wzr, [sp, #208]
  438b3c:	ldr	x1, [sp, #232]
  438b40:	mov	x3, x20
  438b44:	mov	x2, x19
  438b48:	mov	x0, x21
  438b4c:	bl	439288 <nftw@plt+0x36708>
  438b50:	str	wzr, [sp, #216]
  438b54:	str	wzr, [sp, #240]
  438b58:	str	xzr, [sp, #304]
  438b5c:	str	wzr, [sp, #368]
  438b60:	b	438658 <nftw@plt+0x35ad8>
  438b64:	mov	w24, #0xffffffff            	// #-1
  438b68:	ldp	x25, x26, [sp, #144]
  438b6c:	b	437ae0 <nftw@plt+0x34f60>
  438b70:	mov	x3, x20
  438b74:	mov	x2, x19
  438b78:	add	x1, sp, #0x250
  438b7c:	mov	x0, x21
  438b80:	bl	439288 <nftw@plt+0x36708>
  438b84:	b	438534 <nftw@plt+0x359b4>
  438b88:	bl	402aa0 <__errno_location@plt>
  438b8c:	mov	x2, x0
  438b90:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  438b94:	mov	x0, x20
  438b98:	add	x1, x1, #0x780
  438b9c:	ldr	w2, [x2]
  438ba0:	blr	x19
  438ba4:	b	438648 <nftw@plt+0x35ac8>
  438ba8:	mov	w23, #0x1                   	// #1
  438bac:	b	438768 <nftw@plt+0x35be8>
  438bb0:	ldr	x26, [sp, #288]
  438bb4:	add	x28, sp, #0x268
  438bb8:	add	x27, sp, #0x1a0
  438bbc:	str	w22, [sp, #200]
  438bc0:	mov	x22, x20
  438bc4:	mov	x20, x19
  438bc8:	mov	w23, #0x5                   	// #5
  438bcc:	mov	x25, #0x0                   	// #0
  438bd0:	ldr	x0, [x26, #8]
  438bd4:	cbnz	x0, 438c44 <nftw@plt+0x360c4>
  438bd8:	ldr	x19, [x26, #168]
  438bdc:	cbz	x19, 438c44 <nftw@plt+0x360c4>
  438be0:	cbz	x25, 438de8 <nftw@plt+0x36268>
  438be4:	str	xzr, [sp, #416]
  438be8:	cmp	x19, #0xb
  438bec:	str	xzr, [sp, #616]
  438bf0:	mov	x7, x28
  438bf4:	mov	x6, x27
  438bf8:	mov	x5, x22
  438bfc:	b.ls	438c30 <nftw@plt+0x360b0>  // b.plast
  438c00:	ldr	x1, [x26, #176]
  438c04:	mov	w8, #0x4c5a                	// #19546
  438c08:	movk	w8, #0x4249, lsl #16
  438c0c:	mov	x4, x20
  438c10:	mov	x3, x25
  438c14:	mov	x2, x19
  438c18:	ldr	w9, [x1]
  438c1c:	mov	x0, x21
  438c20:	cmp	w9, w8
  438c24:	b.ne	438c30 <nftw@plt+0x360b0>  // b.any
  438c28:	bl	437978 <nftw@plt+0x34df8>
  438c2c:	cbz	w0, 438e04 <nftw@plt+0x36284>
  438c30:	ldr	x0, [sp, #416]
  438c34:	str	x0, [x26, #16]
  438c38:	ldr	x0, [sp, #616]
  438c3c:	str	x0, [x26, #8]
  438c40:	str	wzr, [x26, #24]
  438c44:	add	x26, x26, #0x20
  438c48:	subs	w23, w23, #0x1
  438c4c:	b.ne	438bd0 <nftw@plt+0x36050>  // b.any
  438c50:	mov	x19, x20
  438c54:	mov	x20, x22
  438c58:	ldr	w22, [sp, #200]
  438c5c:	mov	w26, #0x5                   	// #5
  438c60:	ldr	x28, [x24, #8]
  438c64:	cbz	x28, 438ca0 <nftw@plt+0x36120>
  438c68:	ldr	w0, [x24, #24]
  438c6c:	cbz	w0, 438ca0 <nftw@plt+0x36120>
  438c70:	cbz	x25, 438d58 <nftw@plt+0x361d8>
  438c74:	cmp	x28, #0x17
  438c78:	b.ls	438c8c <nftw@plt+0x3610c>  // b.plast
  438c7c:	ldr	x27, [x24, #16]
  438c80:	ldr	w4, [x27]
  438c84:	cmp	w4, #0x1
  438c88:	b.eq	438d80 <nftw@plt+0x36200>  // b.none
  438c8c:	mov	x0, #0x0                   	// #0
  438c90:	mov	x23, #0x0                   	// #0
  438c94:	sub	w22, w22, #0x1
  438c98:	stp	x0, x23, [x24, #8]
  438c9c:	str	wzr, [x24, #24]
  438ca0:	add	x24, x24, #0x20
  438ca4:	subs	w26, w26, #0x1
  438ca8:	b.ne	438c60 <nftw@plt+0x360e0>  // b.any
  438cac:	cbz	x25, 438cc8 <nftw@plt+0x36148>
  438cb0:	mov	x1, x25
  438cb4:	mov	x4, x20
  438cb8:	mov	x3, x19
  438cbc:	mov	x0, x21
  438cc0:	mov	x2, #0x13b4                	// #5044
  438cc4:	bl	435a90 <nftw@plt+0x32f10>
  438cc8:	cbz	w22, 438dcc <nftw@plt+0x3624c>
  438ccc:	mov	w23, #0x1                   	// #1
  438cd0:	ldr	w0, [sp, #220]
  438cd4:	add	x6, sp, #0x378
  438cd8:	ldr	x1, [sp, #176]
  438cdc:	cmp	w0, #0x2
  438ce0:	cset	w0, eq  // eq = none
  438ce4:	ldp	x3, x2, [x6]
  438ce8:	ldp	x5, x4, [x6, #32]
  438cec:	str	w0, [sp, #32]
  438cf0:	ldr	x0, [sp, #184]
  438cf4:	str	x0, [sp, #64]
  438cf8:	ldr	x0, [sp, #408]
  438cfc:	str	x0, [sp, #40]
  438d00:	ldr	x0, [sp, #984]
  438d04:	str	x0, [sp, #8]
  438d08:	ldr	x0, [sp, #992]
  438d0c:	str	x0, [sp]
  438d10:	ldr	x7, [sp, #952]
  438d14:	stp	x19, x20, [sp, #48]
  438d18:	ldr	x6, [sp, #960]
  438d1c:	ldr	x0, [sp, #1016]
  438d20:	str	x0, [sp, #24]
  438d24:	ldr	x0, [sp, #1024]
  438d28:	str	x0, [sp, #16]
  438d2c:	ldr	x0, [sp, #1208]
  438d30:	str	x0, [sp, #72]
  438d34:	mov	x0, x21
  438d38:	bl	43c2d8 <nftw@plt+0x39758>
  438d3c:	cbz	w0, 438dc4 <nftw@plt+0x36244>
  438d40:	ldr	x1, [sp, #1200]
  438d44:	mov	w0, #0x1                   	// #1
  438d48:	mov	w24, w0
  438d4c:	ldp	x25, x26, [sp, #144]
  438d50:	str	w0, [x1]
  438d54:	b	437ae0 <nftw@plt+0x34f60>
  438d58:	mov	x3, x20
  438d5c:	mov	x2, x19
  438d60:	mov	x0, x21
  438d64:	mov	x1, #0x13b4                	// #5044
  438d68:	bl	435b68 <nftw@plt+0x32fe8>
  438d6c:	mov	x25, x0
  438d70:	cbnz	x0, 438c74 <nftw@plt+0x360f4>
  438d74:	mov	w23, #0x1                   	// #1
  438d78:	mov	w22, #0xffffffff            	// #-1
  438d7c:	b	438768 <nftw@plt+0x35be8>
  438d80:	ldr	x1, [x27, #8]
  438d84:	mov	x3, x20
  438d88:	mov	x2, x19
  438d8c:	mov	x0, x21
  438d90:	str	w4, [sp, #200]
  438d94:	bl	435b68 <nftw@plt+0x32fe8>
  438d98:	mov	x23, x0
  438d9c:	cbz	x0, 438d74 <nftw@plt+0x361f4>
  438da0:	ldr	x4, [x27, #8]
  438da4:	mov	x3, x0
  438da8:	sub	x1, x28, #0x18
  438dac:	mov	x2, x25
  438db0:	add	x0, x27, #0x18
  438db4:	bl	436ba8 <nftw@plt+0x34028>
  438db8:	cbz	w0, 438c8c <nftw@plt+0x3610c>
  438dbc:	ldr	x0, [x27, #8]
  438dc0:	b	438c94 <nftw@plt+0x36114>
  438dc4:	mov	w22, #0xffffffff            	// #-1
  438dc8:	b	438768 <nftw@plt+0x35be8>
  438dcc:	ldr	x1, [sp, #192]
  438dd0:	mov	x3, x20
  438dd4:	mov	x2, x19
  438dd8:	mov	x0, x21
  438ddc:	mov	w23, #0x0                   	// #0
  438de0:	bl	439288 <nftw@plt+0x36708>
  438de4:	b	438cd0 <nftw@plt+0x36150>
  438de8:	mov	x3, x22
  438dec:	mov	x2, x20
  438df0:	mov	x0, x21
  438df4:	mov	x1, #0x13b4                	// #5044
  438df8:	bl	435b68 <nftw@plt+0x32fe8>
  438dfc:	mov	x25, x0
  438e00:	cbnz	x0, 438be4 <nftw@plt+0x36064>
  438e04:	mov	x19, x20
  438e08:	mov	w23, #0x1                   	// #1
  438e0c:	mov	x20, x22
  438e10:	mov	w22, #0xffffffff            	// #-1
  438e14:	b	438768 <nftw@plt+0x35be8>
  438e18:	mov	x3, x20
  438e1c:	mov	x2, x19
  438e20:	mov	x0, x21
  438e24:	mov	x1, #0x0                   	// #0
  438e28:	bl	435b68 <nftw@plt+0x32fe8>
  438e2c:	mov	x26, x0
  438e30:	cbz	x0, 438ab0 <nftw@plt+0x35f30>
  438e34:	mov	x28, #0x0                   	// #0
  438e38:	b	4389cc <nftw@plt+0x35e4c>
  438e3c:	mov	w23, #0x1                   	// #1
  438e40:	str	w23, [sp, #240]
  438e44:	b	437fb4 <nftw@plt+0x35434>
  438e48:	sub	sp, sp, #0x70
  438e4c:	stp	x29, x30, [sp, #48]
  438e50:	add	x29, sp, #0x30
  438e54:	ldr	w6, [x2, #56]
  438e58:	str	x21, [sp, #80]
  438e5c:	ldr	x21, [x0, #8]
  438e60:	stp	x19, x20, [sp, #64]
  438e64:	cmn	w6, #0x1
  438e68:	mov	x20, x0
  438e6c:	mov	x19, x2
  438e70:	cbz	x21, 438e7c <nftw@plt+0x362fc>
  438e74:	ldrb	w0, [x21]
  438e78:	cbnz	w0, 438f08 <nftw@plt+0x36388>
  438e7c:	b.eq	438ef0 <nftw@plt+0x36370>  // b.none
  438e80:	ldr	x21, [x19, #48]
  438e84:	mov	w0, #0xffffffff            	// #-1
  438e88:	str	w0, [x19, #56]
  438e8c:	add	x1, sp, #0x64
  438e90:	mov	w2, w6
  438e94:	ldr	x0, [x19]
  438e98:	add	x6, sp, #0x68
  438e9c:	ldr	x3, [x20]
  438ea0:	str	x1, [sp]
  438ea4:	mov	x1, x21
  438ea8:	ldr	x4, [x19, #8]
  438eac:	str	xzr, [sp, #8]
  438eb0:	ldr	x5, [x19, #16]
  438eb4:	str	wzr, [sp, #16]
  438eb8:	ldr	x7, [x19, #32]
  438ebc:	str	wzr, [sp, #24]
  438ec0:	str	xzr, [sp, #32]
  438ec4:	str	wzr, [sp, #40]
  438ec8:	bl	437a28 <nftw@plt+0x34ea8>
  438ecc:	cbz	w0, 438ef0 <nftw@plt+0x36370>
  438ed0:	ldr	w0, [sp, #100]
  438ed4:	cbz	w0, 438ef0 <nftw@plt+0x36370>
  438ed8:	ldr	x1, [x19, #40]
  438edc:	mov	w2, #0x1                   	// #1
  438ee0:	ldr	x0, [x19, #24]
  438ee4:	str	w2, [x1]
  438ee8:	ldr	x1, [sp, #104]
  438eec:	str	x1, [x0]
  438ef0:	mov	w0, #0x0                   	// #0
  438ef4:	ldp	x29, x30, [sp, #48]
  438ef8:	ldp	x19, x20, [sp, #64]
  438efc:	ldr	x21, [sp, #80]
  438f00:	add	sp, sp, #0x70
  438f04:	ret
  438f08:	ldp	x1, x2, [x2, #8]
  438f0c:	b.ne	438f28 <nftw@plt+0x363a8>  // b.any
  438f10:	add	x3, sp, #0x60
  438f14:	mov	x0, x21
  438f18:	bl	436170 <nftw@plt+0x335f0>
  438f1c:	mov	w6, w0
  438f20:	tbz	w0, #31, 438e8c <nftw@plt+0x3630c>
  438f24:	b	438ef0 <nftw@plt+0x36370>
  438f28:	mov	w0, w6
  438f2c:	bl	436220 <nftw@plt+0x336a0>
  438f30:	ldp	x1, x2, [x19, #8]
  438f34:	mov	w0, #0xffffffff            	// #-1
  438f38:	ldr	x21, [x20, #8]
  438f3c:	str	w0, [x19, #56]
  438f40:	add	x3, sp, #0x60
  438f44:	mov	x0, x21
  438f48:	bl	436170 <nftw@plt+0x335f0>
  438f4c:	mov	w6, w0
  438f50:	tbz	w0, #31, 438e8c <nftw@plt+0x3630c>
  438f54:	b	438ef0 <nftw@plt+0x36370>
  438f58:	stp	x29, x30, [sp, #-96]!
  438f5c:	mov	x29, sp
  438f60:	stp	x19, x20, [sp, #16]
  438f64:	mov	x20, x3
  438f68:	mov	x3, x4
  438f6c:	stp	x21, x22, [sp, #32]
  438f70:	mov	x21, x4
  438f74:	mov	x22, x0
  438f78:	stp	x23, x24, [sp, #48]
  438f7c:	mov	x23, x2
  438f80:	mov	x24, x5
  438f84:	mov	x2, x20
  438f88:	stp	x25, x26, [sp, #64]
  438f8c:	mov	x26, x1
  438f90:	mov	x25, x6
  438f94:	mov	x1, #0x13b4                	// #5044
  438f98:	str	x27, [sp, #80]
  438f9c:	bl	435b68 <nftw@plt+0x32fe8>
  438fa0:	cbz	x0, 439030 <nftw@plt+0x364b0>
  438fa4:	str	xzr, [x24]
  438fa8:	mov	x19, x0
  438fac:	str	xzr, [x25]
  438fb0:	cmp	x23, #0xb
  438fb4:	mov	w27, #0x1                   	// #1
  438fb8:	b.ls	438ff8 <nftw@plt+0x36478>  // b.plast
  438fbc:	ldr	w1, [x26]
  438fc0:	mov	w0, #0x4c5a                	// #19546
  438fc4:	movk	w0, #0x4249, lsl #16
  438fc8:	cmp	w1, w0
  438fcc:	b.ne	438ff8 <nftw@plt+0x36478>  // b.any
  438fd0:	mov	x7, x25
  438fd4:	mov	x6, x24
  438fd8:	mov	x2, x23
  438fdc:	mov	x1, x26
  438fe0:	mov	x5, x21
  438fe4:	mov	x4, x20
  438fe8:	mov	x3, x19
  438fec:	mov	x0, x22
  438ff0:	bl	437978 <nftw@plt+0x34df8>
  438ff4:	mov	w27, w0
  438ff8:	mov	x4, x21
  438ffc:	mov	x3, x20
  439000:	mov	x1, x19
  439004:	mov	x0, x22
  439008:	mov	x2, #0x13b4                	// #5044
  43900c:	bl	435a90 <nftw@plt+0x32f10>
  439010:	mov	w0, w27
  439014:	ldp	x19, x20, [sp, #16]
  439018:	ldp	x21, x22, [sp, #32]
  43901c:	ldp	x23, x24, [sp, #48]
  439020:	ldp	x25, x26, [sp, #64]
  439024:	ldr	x27, [sp, #80]
  439028:	ldp	x29, x30, [sp], #96
  43902c:	ret
  439030:	mov	w27, #0x0                   	// #0
  439034:	b	439010 <nftw@plt+0x36490>
  439038:	sub	sp, sp, #0xe0
  43903c:	mov	w6, #0x1                   	// #1
  439040:	stp	x29, x30, [sp, #48]
  439044:	add	x29, sp, #0x30
  439048:	stp	x23, x24, [sp, #96]
  43904c:	adrp	x24, 436000 <nftw@plt+0x33480>
  439050:	add	x8, x24, #0x278
  439054:	str	w6, [sp, #16]
  439058:	mov	x23, x5
  43905c:	str	wzr, [sp, #24]
  439060:	mov	x5, x4
  439064:	str	xzr, [sp, #32]
  439068:	str	wzr, [sp, #40]
  43906c:	stp	x27, x28, [sp, #128]
  439070:	add	x28, sp, #0x94
  439074:	add	x27, sp, #0x98
  439078:	stp	x28, xzr, [sp]
  43907c:	mov	x6, x27
  439080:	stp	x25, x26, [sp, #112]
  439084:	add	x26, sp, #0x90
  439088:	mov	x25, x1
  43908c:	mov	x7, x26
  439090:	stp	x19, x20, [sp, #64]
  439094:	mov	x19, x0
  439098:	mov	w20, w2
  43909c:	stp	x21, x22, [sp, #80]
  4390a0:	mov	x22, x3
  4390a4:	mov	x21, x4
  4390a8:	mov	x4, x3
  4390ac:	mov	x3, #0x0                   	// #0
  4390b0:	str	x8, [sp, #152]
  4390b4:	bl	437a28 <nftw@plt+0x34ea8>
  4390b8:	cbz	w0, 439124 <nftw@plt+0x365a4>
  4390bc:	cmp	w0, #0x0
  4390c0:	add	x1, sp, #0xa0
  4390c4:	csinv	w20, w20, wzr, lt  // lt = tstop
  4390c8:	adrp	x0, 438000 <nftw@plt+0x35480>
  4390cc:	add	x0, x0, #0xe48
  4390d0:	stp	x19, x22, [sp, #160]
  4390d4:	stp	x21, x27, [sp, #176]
  4390d8:	stp	x26, x28, [sp, #192]
  4390dc:	str	x25, [sp, #208]
  4390e0:	str	w20, [sp, #216]
  4390e4:	bl	4028e0 <dl_iterate_phdr@plt>
  4390e8:	ldr	w0, [x19, #8]
  4390ec:	cbnz	w0, 439144 <nftw@plt+0x365c4>
  4390f0:	ldr	w0, [sp, #144]
  4390f4:	cbnz	w0, 439174 <nftw@plt+0x365f4>
  4390f8:	ldr	x0, [x19, #40]
  4390fc:	cbz	x0, 4391a4 <nftw@plt+0x36624>
  439100:	ldr	x0, [x19, #24]
  439104:	str	x0, [x23]
  439108:	cmp	x0, #0x0
  43910c:	add	x24, x24, #0x278
  439110:	ccmp	x0, x24, #0x4, ne  // ne = any
  439114:	mov	w0, #0x1                   	// #1
  439118:	b.ne	439124 <nftw@plt+0x365a4>  // b.any
  43911c:	ldr	x1, [sp, #152]
  439120:	str	x1, [x23]
  439124:	ldp	x29, x30, [sp, #48]
  439128:	ldp	x19, x20, [sp, #64]
  43912c:	ldp	x21, x22, [sp, #80]
  439130:	ldp	x23, x24, [sp, #96]
  439134:	ldp	x25, x26, [sp, #112]
  439138:	ldp	x27, x28, [sp, #128]
  43913c:	add	sp, sp, #0xe0
  439140:	ret
  439144:	ldr	w1, [sp, #144]
  439148:	add	x0, x19, #0x28
  43914c:	cbz	w1, 439184 <nftw@plt+0x36604>
  439150:	adrp	x1, 436000 <nftw@plt+0x33480>
  439154:	add	x1, x1, #0x6c0
  439158:	stlr	x1, [x0]
  43915c:	ldr	w0, [x19, #8]
  439160:	cbz	w0, 439100 <nftw@plt+0x36580>
  439164:	add	x19, x19, #0x18
  439168:	ldar	x0, [x19]
  43916c:	str	x0, [x23]
  439170:	b	439108 <nftw@plt+0x36588>
  439174:	adrp	x0, 436000 <nftw@plt+0x33480>
  439178:	add	x0, x0, #0x6c0
  43917c:	str	x0, [x19, #40]
  439180:	b	439100 <nftw@plt+0x36580>
  439184:	adrp	x1, 436000 <nftw@plt+0x33480>
  439188:	add	x1, x1, #0x2a0
  43918c:	ldxr	x2, [x0]
  439190:	cbnz	x2, 43919c <nftw@plt+0x3661c>
  439194:	stlxr	w3, x1, [x0]
  439198:	cbnz	w3, 43918c <nftw@plt+0x3660c>
  43919c:	dmb	ish
  4391a0:	b	43915c <nftw@plt+0x365dc>
  4391a4:	adrp	x0, 436000 <nftw@plt+0x33480>
  4391a8:	add	x0, x0, #0x2a0
  4391ac:	str	x0, [x19, #40]
  4391b0:	b	439100 <nftw@plt+0x36580>
  4391b4:	nop
  4391b8:	stp	x29, x30, [sp, #-64]!
  4391bc:	mov	x29, sp
  4391c0:	stp	x19, x20, [sp, #16]
  4391c4:	mov	x19, x3
  4391c8:	mov	x20, x4
  4391cc:	stp	x21, x22, [sp, #32]
  4391d0:	mov	x22, x2
  4391d4:	mov	x21, x5
  4391d8:	stp	x23, x24, [sp, #48]
  4391dc:	mov	w24, w1
  4391e0:	mov	x23, x6
  4391e4:	bl	402760 <getpagesize@plt>
  4391e8:	sxtw	x7, w0
  4391ec:	sub	x8, x19, #0x1
  4391f0:	neg	x1, x7
  4391f4:	mov	w4, w24
  4391f8:	mov	w3, #0x2                   	// #2
  4391fc:	udiv	x19, x22, x7
  439200:	mov	w2, #0x1                   	// #1
  439204:	mov	x0, #0x0                   	// #0
  439208:	msub	w19, w19, w7, w22
  43920c:	add	x7, x7, x19
  439210:	sub	x5, x22, x19
  439214:	add	x7, x8, x7
  439218:	and	x22, x1, x7
  43921c:	mov	x1, x22
  439220:	bl	4028b0 <mmap@plt>
  439224:	cmn	x0, #0x1
  439228:	b.eq	439254 <nftw@plt+0x366d4>  // b.none
  43922c:	mov	x2, x0
  439230:	add	x19, x0, x19
  439234:	stp	x19, x2, [x23]
  439238:	mov	w0, #0x1                   	// #1
  43923c:	str	x22, [x23, #16]
  439240:	ldp	x19, x20, [sp, #16]
  439244:	ldp	x21, x22, [sp, #32]
  439248:	ldp	x23, x24, [sp, #48]
  43924c:	ldp	x29, x30, [sp], #64
  439250:	ret
  439254:	bl	402aa0 <__errno_location@plt>
  439258:	mov	x2, x0
  43925c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  439260:	mov	x0, x21
  439264:	add	x1, x1, #0x4d8
  439268:	ldr	w2, [x2]
  43926c:	blr	x20
  439270:	mov	w0, #0x0                   	// #0
  439274:	ldp	x19, x20, [sp, #16]
  439278:	ldp	x21, x22, [sp, #32]
  43927c:	ldp	x23, x24, [sp, #48]
  439280:	ldp	x29, x30, [sp], #64
  439284:	ret
  439288:	stp	x29, x30, [sp, #-32]!
  43928c:	mov	x29, sp
  439290:	ldp	x0, x1, [x1, #8]
  439294:	stp	x19, x20, [sp, #16]
  439298:	mov	x19, x2
  43929c:	mov	x20, x3
  4392a0:	bl	402970 <munmap@plt>
  4392a4:	tbnz	w0, #31, 4392b4 <nftw@plt+0x36734>
  4392a8:	ldp	x19, x20, [sp, #16]
  4392ac:	ldp	x29, x30, [sp], #32
  4392b0:	ret
  4392b4:	bl	402aa0 <__errno_location@plt>
  4392b8:	mov	x2, x0
  4392bc:	mov	x16, x19
  4392c0:	mov	x0, x20
  4392c4:	ldp	x19, x20, [sp, #16]
  4392c8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  4392cc:	ldp	x29, x30, [sp], #32
  4392d0:	add	x1, x1, #0xf8
  4392d4:	ldr	w2, [x2]
  4392d8:	br	x16
  4392dc:	nop
  4392e0:	ldr	x2, [x0]
  4392e4:	mov	w3, #0xffffffff            	// #-1
  4392e8:	ldr	x1, [x1]
  4392ec:	cmp	x2, x1
  4392f0:	cset	w0, hi  // hi = pmore
  4392f4:	csel	w0, w0, w3, cs  // cs = hs, nlast
  4392f8:	ret
  4392fc:	nop
  439300:	stp	x29, x30, [sp, #-48]!
  439304:	mov	x29, sp
  439308:	stp	x21, x22, [sp, #32]
  43930c:	ldp	x22, x21, [x2]
  439310:	stp	x19, x20, [sp, #16]
  439314:	mov	x19, x2
  439318:	ldr	x6, [x5, #24]
  43931c:	mov	x2, x3
  439320:	mov	x20, x5
  439324:	mov	x3, x4
  439328:	add	x22, x1, x22
  43932c:	add	x21, x1, x21
  439330:	cbz	x6, 439360 <nftw@plt+0x367e0>
  439334:	add	x6, x6, x6, lsl #1
  439338:	ldr	x1, [x5]
  43933c:	lsl	x6, x6, #3
  439340:	sub	x6, x6, #0x18
  439344:	add	x6, x1, x6
  439348:	ldr	x1, [x6, #8]
  43934c:	cmp	x22, x1
  439350:	b.eq	4393a8 <nftw@plt+0x36828>  // b.none
  439354:	add	x4, x1, #0x1
  439358:	cmp	x22, x4
  43935c:	b.eq	4393a8 <nftw@plt+0x36828>  // b.none
  439360:	mov	x1, #0x18                  	// #24
  439364:	mov	x4, x20
  439368:	bl	435ce8 <nftw@plt+0x33168>
  43936c:	mov	x1, x0
  439370:	cbz	x0, 4393cc <nftw@plt+0x3684c>
  439374:	stp	x22, x21, [x19]
  439378:	mov	w0, #0x1                   	// #1
  43937c:	ldr	x2, [x20, #24]
  439380:	ldp	x4, x5, [x19]
  439384:	stp	x4, x5, [x1]
  439388:	add	x2, x2, #0x1
  43938c:	ldr	x3, [x19, #16]
  439390:	str	x3, [x1, #16]
  439394:	str	x2, [x20, #24]
  439398:	ldp	x19, x20, [sp, #16]
  43939c:	ldp	x21, x22, [sp, #32]
  4393a0:	ldp	x29, x30, [sp], #48
  4393a4:	ret
  4393a8:	ldr	x4, [x6, #16]
  4393ac:	ldr	x5, [x19, #16]
  4393b0:	cmp	x5, x4
  4393b4:	b.ne	439360 <nftw@plt+0x367e0>  // b.any
  4393b8:	cmp	x21, x1
  4393bc:	mov	w0, #0x1                   	// #1
  4393c0:	b.ls	439398 <nftw@plt+0x36818>  // b.plast
  4393c4:	str	x21, [x6, #8]
  4393c8:	b	439398 <nftw@plt+0x36818>
  4393cc:	mov	w0, #0x0                   	// #0
  4393d0:	ldp	x19, x20, [sp, #16]
  4393d4:	ldp	x21, x22, [sp, #32]
  4393d8:	ldp	x29, x30, [sp], #48
  4393dc:	ret
  4393e0:	stp	x29, x30, [sp, #-240]!
  4393e4:	mov	x3, x1
  4393e8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  4393ec:	mov	x29, sp
  4393f0:	stp	x19, x20, [sp, #16]
  4393f4:	mov	x19, x0
  4393f8:	add	x20, sp, #0x28
  4393fc:	mov	x0, x20
  439400:	add	x2, x2, #0x100
  439404:	ldp	x4, x5, [x19]
  439408:	mov	x1, #0xc8                  	// #200
  43940c:	ldr	x6, [x19, #16]
  439410:	sub	w5, w6, w5
  439414:	bl	402600 <snprintf@plt>
  439418:	ldp	x3, x0, [x19, #40]
  43941c:	mov	x1, x20
  439420:	mov	w2, #0x0                   	// #0
  439424:	blr	x3
  439428:	ldp	x19, x20, [sp, #16]
  43942c:	ldp	x29, x30, [sp], #240
  439430:	ret
  439434:	nop
  439438:	stp	x29, x30, [sp, #-48]!
  43943c:	mov	x29, sp
  439440:	stp	x19, x20, [sp, #16]
  439444:	mov	x20, x2
  439448:	mov	x19, x1
  43944c:	ldr	x2, [x1, #32]
  439450:	stp	x21, x22, [sp, #32]
  439454:	mov	x21, x3
  439458:	mov	x22, x0
  43945c:	cbnz	x2, 439484 <nftw@plt+0x36904>
  439460:	mov	x4, x21
  439464:	mov	x3, x20
  439468:	mov	x0, x22
  43946c:	ldp	x21, x22, [sp, #32]
  439470:	ldp	x2, x1, [x19, #48]
  439474:	ldp	x19, x20, [sp, #16]
  439478:	ldp	x29, x30, [sp], #48
  43947c:	lsl	x2, x2, #3
  439480:	b	435a90 <nftw@plt+0x32f10>
  439484:	ldr	x1, [x1, #40]
  439488:	mov	x4, x3
  43948c:	lsl	x2, x2, #3
  439490:	mov	x3, x20
  439494:	bl	435a90 <nftw@plt+0x32f10>
  439498:	b	439460 <nftw@plt+0x368e0>
  43949c:	nop
  4394a0:	mov	x2, x0
  4394a4:	ldr	x0, [x1]
  4394a8:	ldr	x3, [x2]
  4394ac:	cmp	x3, x0
  4394b0:	b.cc	4394f4 <nftw@plt+0x36974>  // b.lo, b.ul, b.last
  4394b4:	mov	w0, #0x1                   	// #1
  4394b8:	b.hi	4394f0 <nftw@plt+0x36970>  // b.pmore
  4394bc:	ldr	x3, [x1, #8]
  4394c0:	ldr	x4, [x2, #8]
  4394c4:	cmp	x4, x3
  4394c8:	b.cc	4394f0 <nftw@plt+0x36970>  // b.lo, b.ul, b.last
  4394cc:	mov	w0, #0xffffffff            	// #-1
  4394d0:	b.hi	4394f0 <nftw@plt+0x36970>  // b.pmore
  4394d4:	ldr	x1, [x1, #16]
  4394d8:	ldr	x2, [x2, #16]
  4394dc:	ldr	x1, [x1, #56]
  4394e0:	ldr	x2, [x2, #56]
  4394e4:	cmp	x2, x1
  4394e8:	cset	w3, gt
  4394ec:	csel	w0, w3, w0, ge  // ge = tcont
  4394f0:	ret
  4394f4:	mov	w0, #0xffffffff            	// #-1
  4394f8:	ret
  4394fc:	nop
  439500:	mov	x2, x0
  439504:	ldr	x0, [x1]
  439508:	ldr	x3, [x2]
  43950c:	cmp	x3, x0
  439510:	b.cc	439538 <nftw@plt+0x369b8>  // b.lo, b.ul, b.last
  439514:	mov	w0, #0x1                   	// #1
  439518:	b.hi	439534 <nftw@plt+0x369b4>  // b.pmore
  43951c:	ldr	w1, [x1, #20]
  439520:	mov	w3, #0xffffffff            	// #-1
  439524:	ldr	w2, [x2, #20]
  439528:	cmp	w2, w1
  43952c:	cset	w0, gt
  439530:	csel	w0, w0, w3, ge  // ge = tcont
  439534:	ret
  439538:	mov	w0, #0xffffffff            	// #-1
  43953c:	ret
  439540:	cbz	x2, 439698 <nftw@plt+0x36b18>
  439544:	stp	x29, x30, [sp, #-64]!
  439548:	mov	x10, x2
  43954c:	mov	x29, sp
  439550:	stp	x19, x20, [sp, #16]
  439554:	mov	x20, x6
  439558:	mov	x19, x0
  43955c:	stp	x21, x22, [sp, #32]
  439560:	mov	x21, x3
  439564:	mov	x22, x4
  439568:	stp	x23, x24, [sp, #48]
  43956c:	mov	x23, x5
  439570:	mov	x0, #0x0                   	// #0
  439574:	add	x7, x10, x0
  439578:	cmp	x10, x0
  43957c:	and	x8, x7, #0xfffffffffffffffe
  439580:	b.ls	439680 <nftw@plt+0x36b00>  // b.plast
  439584:	lsr	x7, x7, #1
  439588:	add	x8, x8, x7
  43958c:	lsl	x9, x8, #3
  439590:	ldr	x3, [x1, x8, lsl #3]
  439594:	add	x8, x1, x9
  439598:	cmp	x3, x19
  43959c:	b.hi	43966c <nftw@plt+0x36aec>  // b.pmore
  4395a0:	ldr	x3, [x8, #8]
  4395a4:	add	x0, x7, #0x1
  4395a8:	cmp	x19, x3
  4395ac:	b.cs	439574 <nftw@plt+0x369f4>  // b.hs, b.nlast
  4395b0:	asr	x9, x9, #3
  4395b4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4395b8:	movk	x0, #0xaaab
  4395bc:	mov	x3, x0
  4395c0:	mul	x9, x9, x0
  4395c4:	add	x9, x9, #0x1
  4395c8:	cmp	x2, x9
  4395cc:	b.hi	4395fc <nftw@plt+0x36a7c>  // b.pmore
  4395d0:	b	439608 <nftw@plt+0x36a88>
  4395d4:	ldr	x0, [x8, #32]
  4395d8:	cmp	x19, x0
  4395dc:	b.cs	439608 <nftw@plt+0x36a88>  // b.hs, b.nlast
  4395e0:	add	x8, x8, #0x18
  4395e4:	sub	x7, x8, x1
  4395e8:	asr	x7, x7, #3
  4395ec:	mul	x7, x7, x3
  4395f0:	add	x7, x7, #0x1
  4395f4:	cmp	x7, x2
  4395f8:	b.cs	439608 <nftw@plt+0x36a88>  // b.hs, b.nlast
  4395fc:	ldr	x0, [x8, #24]
  439600:	cmp	x19, x0
  439604:	b.cs	4395d4 <nftw@plt+0x36a54>  // b.hs, b.nlast
  439608:	ldr	x24, [x8, #16]
  43960c:	mov	x6, x20
  439610:	mov	x5, x23
  439614:	mov	x4, x22
  439618:	mov	x3, x21
  43961c:	mov	x0, x19
  439620:	ldp	x1, x2, [x24, #24]
  439624:	bl	439540 <nftw@plt+0x369c0>
  439628:	cbnz	w0, 439658 <nftw@plt+0x36ad8>
  43962c:	ldr	w3, [x20]
  439630:	mov	x1, x19
  439634:	ldr	x2, [x23]
  439638:	mov	x0, x22
  43963c:	ldr	x4, [x24]
  439640:	blr	x21
  439644:	cbnz	w0, 439658 <nftw@plt+0x36ad8>
  439648:	ldr	x1, [x24, #8]
  43964c:	str	x1, [x23]
  439650:	ldr	w1, [x24, #16]
  439654:	str	w1, [x20]
  439658:	ldp	x19, x20, [sp, #16]
  43965c:	ldp	x21, x22, [sp, #32]
  439660:	ldp	x23, x24, [sp, #48]
  439664:	ldp	x29, x30, [sp], #64
  439668:	ret
  43966c:	mov	x10, x7
  439670:	add	x7, x10, x0
  439674:	cmp	x10, x0
  439678:	and	x8, x7, #0xfffffffffffffffe
  43967c:	b.hi	439584 <nftw@plt+0x36a04>  // b.pmore
  439680:	mov	w0, #0x0                   	// #0
  439684:	ldp	x19, x20, [sp, #16]
  439688:	ldp	x21, x22, [sp, #32]
  43968c:	ldp	x23, x24, [sp, #48]
  439690:	ldp	x29, x30, [sp], #64
  439694:	ret
  439698:	mov	w0, #0x0                   	// #0
  43969c:	ret
  4396a0:	mov	x7, x0
  4396a4:	sub	x0, x2, #0x1
  4396a8:	cmp	x0, x7
  4396ac:	b.cs	4396c8 <nftw@plt+0x36b48>  // b.hs, b.nlast
  4396b0:	lsl	x5, x2, #5
  4396b4:	sub	x5, x5, #0x20
  4396b8:	add	x0, x1, x5
  4396bc:	ldr	x5, [x1, x5]
  4396c0:	cmp	x2, x5
  4396c4:	b.eq	43972c <nftw@plt+0x36bac>  // b.none
  4396c8:	mov	x8, #0x0                   	// #0
  4396cc:	add	x5, x7, x8
  4396d0:	cmp	x7, x8
  4396d4:	b.ls	439704 <nftw@plt+0x36b84>  // b.plast
  4396d8:	lsr	x5, x5, #1
  4396dc:	lsl	x6, x5, #5
  4396e0:	add	x0, x1, x6
  4396e4:	ldr	x6, [x1, x6]
  4396e8:	cmp	x2, x6
  4396ec:	b.cc	439730 <nftw@plt+0x36bb0>  // b.lo, b.ul, b.last
  4396f0:	b.ls	43972c <nftw@plt+0x36bac>  // b.plast
  4396f4:	add	x8, x5, #0x1
  4396f8:	add	x5, x7, x8
  4396fc:	cmp	x7, x8
  439700:	b.hi	4396d8 <nftw@plt+0x36b58>  // b.pmore
  439704:	stp	x29, x30, [sp, #-16]!
  439708:	mov	x0, x4
  43970c:	mov	w2, #0x0                   	// #0
  439710:	mov	x29, sp
  439714:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  439718:	add	x1, x1, #0x110
  43971c:	blr	x3
  439720:	mov	x0, #0x0                   	// #0
  439724:	ldp	x29, x30, [sp], #16
  439728:	ret
  43972c:	ret
  439730:	mov	x7, x5
  439734:	b	4396cc <nftw@plt+0x36b4c>
  439738:	stp	x29, x30, [sp, #-64]!
  43973c:	mov	x29, sp
  439740:	ldr	x8, [x7, #24]
  439744:	stp	x19, x20, [sp, #16]
  439748:	mov	x20, x2
  43974c:	stp	x21, x22, [sp, #32]
  439750:	mov	x19, x7
  439754:	mov	x22, x1
  439758:	str	x23, [sp, #48]
  43975c:	mov	w21, w4
  439760:	mov	x23, x3
  439764:	mov	x2, x5
  439768:	mov	x3, x6
  43976c:	cbz	x8, 439790 <nftw@plt+0x36c10>
  439770:	add	x8, x8, x8, lsl #1
  439774:	ldr	x1, [x7]
  439778:	lsl	x8, x8, #3
  43977c:	sub	x8, x8, #0x18
  439780:	add	x4, x1, x8
  439784:	ldr	x1, [x1, x8]
  439788:	cmp	x1, x20
  43978c:	b.eq	4397dc <nftw@plt+0x36c5c>  // b.none
  439790:	mov	x4, x19
  439794:	mov	x1, #0x18                  	// #24
  439798:	bl	435ce8 <nftw@plt+0x33168>
  43979c:	mov	x5, x0
  4397a0:	cbz	x0, 4397fc <nftw@plt+0x36c7c>
  4397a4:	ldr	x2, [x22]
  4397a8:	mov	w4, #0x1                   	// #1
  4397ac:	ldr	x1, [x19, #24]
  4397b0:	add	x20, x2, x20
  4397b4:	stp	x20, x23, [x5]
  4397b8:	add	x0, x1, #0x1
  4397bc:	stp	w21, w1, [x5, #16]
  4397c0:	str	x0, [x19, #24]
  4397c4:	mov	w0, w4
  4397c8:	ldp	x19, x20, [sp, #16]
  4397cc:	ldp	x21, x22, [sp, #32]
  4397d0:	ldr	x23, [sp, #48]
  4397d4:	ldp	x29, x30, [sp], #64
  4397d8:	ret
  4397dc:	ldr	x1, [x4, #8]
  4397e0:	cmp	x1, x23
  4397e4:	b.ne	439790 <nftw@plt+0x36c10>  // b.any
  4397e8:	ldr	w1, [x4, #16]
  4397ec:	mov	w4, #0x1                   	// #1
  4397f0:	cmp	w1, w21
  4397f4:	b.ne	439790 <nftw@plt+0x36c10>  // b.any
  4397f8:	b	4397c4 <nftw@plt+0x36c44>
  4397fc:	mov	w4, #0x0                   	// #0
  439800:	mov	w0, w4
  439804:	ldp	x19, x20, [sp, #16]
  439808:	ldp	x21, x22, [sp, #32]
  43980c:	ldr	x23, [sp, #48]
  439810:	ldp	x29, x30, [sp], #64
  439814:	ret
  439818:	stp	x29, x30, [sp, #-48]!
  43981c:	mov	x29, sp
  439820:	ldr	x8, [x7, #24]
  439824:	stp	x19, x20, [sp, #16]
  439828:	add	x20, x3, x1
  43982c:	stp	x21, x22, [sp, #32]
  439830:	mov	x19, x7
  439834:	mov	x22, x2
  439838:	add	x21, x4, x1
  43983c:	mov	x2, x5
  439840:	mov	x3, x6
  439844:	cbz	x8, 439874 <nftw@plt+0x36cf4>
  439848:	add	x8, x8, x8, lsl #1
  43984c:	ldr	x1, [x7]
  439850:	lsl	x8, x8, #3
  439854:	sub	x8, x8, #0x18
  439858:	add	x8, x1, x8
  43985c:	ldr	x1, [x8, #8]
  439860:	cmp	x20, x1
  439864:	b.eq	4398b0 <nftw@plt+0x36d30>  // b.none
  439868:	add	x4, x1, #0x1
  43986c:	cmp	x20, x4
  439870:	b.eq	4398b0 <nftw@plt+0x36d30>  // b.none
  439874:	mov	x1, #0x18                  	// #24
  439878:	mov	x4, x19
  43987c:	bl	435ce8 <nftw@plt+0x33168>
  439880:	mov	x1, x0
  439884:	cbz	x0, 4398d0 <nftw@plt+0x36d50>
  439888:	ldr	x3, [x19, #24]
  43988c:	stp	x20, x21, [x1]
  439890:	mov	w0, #0x1                   	// #1
  439894:	str	x22, [x1, #16]
  439898:	add	x1, x3, #0x1
  43989c:	str	x1, [x19, #24]
  4398a0:	ldp	x19, x20, [sp, #16]
  4398a4:	ldp	x21, x22, [sp, #32]
  4398a8:	ldp	x29, x30, [sp], #48
  4398ac:	ret
  4398b0:	ldr	x4, [x8, #16]
  4398b4:	cmp	x4, x22
  4398b8:	b.ne	439874 <nftw@plt+0x36cf4>  // b.any
  4398bc:	cmp	x21, x1
  4398c0:	mov	w0, #0x1                   	// #1
  4398c4:	b.ls	4398a0 <nftw@plt+0x36d20>  // b.plast
  4398c8:	str	x21, [x8, #8]
  4398cc:	b	4398a0 <nftw@plt+0x36d20>
  4398d0:	mov	w0, #0x0                   	// #0
  4398d4:	ldp	x19, x20, [sp, #16]
  4398d8:	ldp	x21, x22, [sp, #32]
  4398dc:	ldp	x29, x30, [sp], #48
  4398e0:	ret
  4398e4:	nop
  4398e8:	ldr	w1, [x0, #56]
  4398ec:	cbz	w1, 4398f8 <nftw@plt+0x36d78>
  4398f0:	mov	w0, #0x0                   	// #0
  4398f4:	ret
  4398f8:	stp	x29, x30, [sp, #-32]!
  4398fc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  439900:	add	x1, x1, #0x130
  439904:	mov	x29, sp
  439908:	str	x19, [sp, #16]
  43990c:	mov	x19, x0
  439910:	bl	4393e0 <nftw@plt+0x36860>
  439914:	mov	w0, #0x1                   	// #1
  439918:	str	w0, [x19, #56]
  43991c:	mov	w0, #0x0                   	// #0
  439920:	ldr	x19, [sp, #16]
  439924:	ldp	x29, x30, [sp], #32
  439928:	ret
  43992c:	nop
  439930:	stp	x29, x30, [sp, #-32]!
  439934:	mov	x29, sp
  439938:	stp	x19, x20, [sp, #16]
  43993c:	mov	x19, x0
  439940:	ldp	x20, x1, [x0, #16]
  439944:	cmp	x1, #0x3
  439948:	b.hi	43997c <nftw@plt+0x36dfc>  // b.pmore
  43994c:	bl	4398e8 <nftw@plt+0x36d68>
  439950:	mov	w1, w0
  439954:	mov	w0, #0x0                   	// #0
  439958:	cbz	w1, 439970 <nftw@plt+0x36df0>
  43995c:	ldr	w0, [x20]
  439960:	ldr	w2, [x19, #32]
  439964:	rev	w1, w0
  439968:	cmp	w2, #0x0
  43996c:	csel	w0, w1, w0, ne  // ne = any
  439970:	ldp	x19, x20, [sp, #16]
  439974:	ldp	x29, x30, [sp], #32
  439978:	ret
  43997c:	sub	x1, x1, #0x4
  439980:	add	x0, x20, #0x4
  439984:	stp	x0, x1, [x19, #16]
  439988:	b	43995c <nftw@plt+0x36ddc>
  43998c:	nop
  439990:	stp	x29, x30, [sp, #-32]!
  439994:	mov	x29, sp
  439998:	stp	x19, x20, [sp, #16]
  43999c:	mov	x19, x0
  4399a0:	ldp	x20, x1, [x0, #16]
  4399a4:	cmp	x1, #0x7
  4399a8:	b.hi	4399dc <nftw@plt+0x36e5c>  // b.pmore
  4399ac:	bl	4398e8 <nftw@plt+0x36d68>
  4399b0:	mov	w1, w0
  4399b4:	mov	x0, #0x0                   	// #0
  4399b8:	cbz	w1, 4399d0 <nftw@plt+0x36e50>
  4399bc:	ldr	x0, [x20]
  4399c0:	ldr	w2, [x19, #32]
  4399c4:	rev	x1, x0
  4399c8:	cmp	w2, #0x0
  4399cc:	csel	x0, x1, x0, ne  // ne = any
  4399d0:	ldp	x19, x20, [sp, #16]
  4399d4:	ldp	x29, x30, [sp], #32
  4399d8:	ret
  4399dc:	sub	x1, x1, #0x8
  4399e0:	add	x0, x20, #0x8
  4399e4:	stp	x0, x1, [x19, #16]
  4399e8:	b	4399bc <nftw@plt+0x36e3c>
  4399ec:	nop
  4399f0:	stp	x29, x30, [sp, #-32]!
  4399f4:	mov	x29, sp
  4399f8:	stp	x19, x20, [sp, #16]
  4399fc:	mov	x19, x0
  439a00:	ldp	x20, x1, [x0, #16]
  439a04:	cmp	x1, #0x1
  439a08:	b.hi	439a44 <nftw@plt+0x36ec4>  // b.pmore
  439a0c:	bl	4398e8 <nftw@plt+0x36d68>
  439a10:	mov	w1, #0x0                   	// #0
  439a14:	cbz	w0, 439a34 <nftw@plt+0x36eb4>
  439a18:	ldrb	w2, [x20, #1]
  439a1c:	ldrb	w1, [x20]
  439a20:	ldr	w3, [x19, #32]
  439a24:	orr	w0, w2, w1, lsl #8
  439a28:	cmp	w3, #0x0
  439a2c:	orr	w1, w1, w2, lsl #8
  439a30:	csel	w1, w1, w0, eq  // eq = none
  439a34:	mov	w0, w1
  439a38:	ldp	x19, x20, [sp, #16]
  439a3c:	ldp	x29, x30, [sp], #32
  439a40:	ret
  439a44:	sub	x1, x1, #0x2
  439a48:	add	x0, x20, #0x2
  439a4c:	stp	x0, x1, [x19, #16]
  439a50:	b	439a18 <nftw@plt+0x36e98>
  439a54:	nop
  439a58:	stp	x29, x30, [sp, #-32]!
  439a5c:	mov	x29, sp
  439a60:	ldr	x2, [x0, #24]
  439a64:	str	x19, [sp, #16]
  439a68:	ldr	x19, [x0, #16]
  439a6c:	cbnz	x2, 439a90 <nftw@plt+0x36f10>
  439a70:	bl	4398e8 <nftw@plt+0x36d68>
  439a74:	mov	w1, #0x0                   	// #0
  439a78:	cbz	w0, 439a80 <nftw@plt+0x36f00>
  439a7c:	ldrb	w1, [x19]
  439a80:	mov	w0, w1
  439a84:	ldr	x19, [sp, #16]
  439a88:	ldp	x29, x30, [sp], #32
  439a8c:	ret
  439a90:	mov	x1, x0
  439a94:	sub	x2, x2, #0x1
  439a98:	add	x0, x19, #0x1
  439a9c:	stp	x0, x2, [x1, #16]
  439aa0:	b	439a7c <nftw@plt+0x36efc>
  439aa4:	nop
  439aa8:	stp	x29, x30, [sp, #-16]!
  439aac:	cmp	w1, #0x4
  439ab0:	mov	x29, sp
  439ab4:	b.eq	439af0 <nftw@plt+0x36f70>  // b.none
  439ab8:	mov	x2, x0
  439abc:	b.gt	439ae0 <nftw@plt+0x36f60>
  439ac0:	cmp	w1, #0x1
  439ac4:	b.eq	439b00 <nftw@plt+0x36f80>  // b.none
  439ac8:	cmp	w1, #0x2
  439acc:	b.ne	439b10 <nftw@plt+0x36f90>  // b.any
  439ad0:	bl	4399f0 <nftw@plt+0x36e70>
  439ad4:	and	x0, x0, #0xffff
  439ad8:	ldp	x29, x30, [sp], #16
  439adc:	ret
  439ae0:	cmp	w1, #0x8
  439ae4:	b.ne	439b10 <nftw@plt+0x36f90>  // b.any
  439ae8:	ldp	x29, x30, [sp], #16
  439aec:	b	439990 <nftw@plt+0x36e10>
  439af0:	bl	439930 <nftw@plt+0x36db0>
  439af4:	mov	w0, w0
  439af8:	ldp	x29, x30, [sp], #16
  439afc:	ret
  439b00:	bl	439a58 <nftw@plt+0x36ed8>
  439b04:	and	x0, x0, #0xff
  439b08:	ldp	x29, x30, [sp], #16
  439b0c:	ret
  439b10:	mov	x0, x2
  439b14:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  439b18:	add	x1, x1, #0x140
  439b1c:	bl	4393e0 <nftw@plt+0x36860>
  439b20:	mov	x0, #0x0                   	// #0
  439b24:	ldp	x29, x30, [sp], #16
  439b28:	ret
  439b2c:	nop
  439b30:	stp	x29, x30, [sp, #-64]!
  439b34:	mov	x29, sp
  439b38:	stp	x19, x20, [sp, #16]
  439b3c:	mov	x19, x0
  439b40:	mov	w20, #0x0                   	// #0
  439b44:	stp	x21, x22, [sp, #32]
  439b48:	mov	x22, #0x0                   	// #0
  439b4c:	stp	x23, x24, [sp, #48]
  439b50:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  439b54:	mov	w23, #0x0                   	// #0
  439b58:	add	x24, x24, #0x160
  439b5c:	b	439b74 <nftw@plt+0x36ff4>
  439b60:	and	x0, x21, #0x7f
  439b64:	lsl	x0, x0, x20
  439b68:	orr	x22, x22, x0
  439b6c:	add	w20, w20, #0x7
  439b70:	tbz	w21, #7, 439bb0 <nftw@plt+0x37030>
  439b74:	ldp	x21, x1, [x19, #16]
  439b78:	mov	x0, x19
  439b7c:	cbnz	x1, 439bc8 <nftw@plt+0x37048>
  439b80:	bl	4398e8 <nftw@plt+0x36d68>
  439b84:	cbz	w0, 439bd8 <nftw@plt+0x37058>
  439b88:	ldrb	w21, [x21]
  439b8c:	cmp	w20, #0x3f
  439b90:	b.ls	439b60 <nftw@plt+0x36fe0>  // b.plast
  439b94:	cbnz	w23, 439b6c <nftw@plt+0x36fec>
  439b98:	mov	x1, x24
  439b9c:	mov	x0, x19
  439ba0:	add	w20, w20, #0x7
  439ba4:	mov	w23, #0x1                   	// #1
  439ba8:	bl	4393e0 <nftw@plt+0x36860>
  439bac:	tbnz	w21, #7, 439b74 <nftw@plt+0x36ff4>
  439bb0:	mov	x0, x22
  439bb4:	ldp	x19, x20, [sp, #16]
  439bb8:	ldp	x21, x22, [sp, #32]
  439bbc:	ldp	x23, x24, [sp, #48]
  439bc0:	ldp	x29, x30, [sp], #64
  439bc4:	ret
  439bc8:	sub	x1, x1, #0x1
  439bcc:	add	x0, x21, #0x1
  439bd0:	stp	x0, x1, [x19, #16]
  439bd4:	b	439b88 <nftw@plt+0x37008>
  439bd8:	mov	x22, #0x0                   	// #0
  439bdc:	mov	x0, x22
  439be0:	ldp	x19, x20, [sp, #16]
  439be4:	ldp	x21, x22, [sp, #32]
  439be8:	ldp	x23, x24, [sp, #48]
  439bec:	ldp	x29, x30, [sp], #64
  439bf0:	ret
  439bf4:	nop
  439bf8:	stp	x29, x30, [sp, #-64]!
  439bfc:	mov	x29, sp
  439c00:	stp	x19, x20, [sp, #16]
  439c04:	mov	x19, x0
  439c08:	mov	w20, #0x0                   	// #0
  439c0c:	stp	x21, x22, [sp, #32]
  439c10:	mov	x22, #0x0                   	// #0
  439c14:	stp	x23, x24, [sp, #48]
  439c18:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  439c1c:	mov	w23, #0x0                   	// #0
  439c20:	add	x24, x24, #0x180
  439c24:	b	439c3c <nftw@plt+0x370bc>
  439c28:	and	x1, x21, #0x7f
  439c2c:	lsl	x1, x1, x20
  439c30:	orr	x22, x22, x1
  439c34:	add	w20, w20, #0x7
  439c38:	tbz	w21, #7, 439c78 <nftw@plt+0x370f8>
  439c3c:	ldp	x21, x1, [x19, #16]
  439c40:	mov	x0, x19
  439c44:	cbnz	x1, 439ca8 <nftw@plt+0x37128>
  439c48:	bl	4398e8 <nftw@plt+0x36d68>
  439c4c:	cbz	w0, 439cb8 <nftw@plt+0x37138>
  439c50:	ldrb	w21, [x21]
  439c54:	cmp	w20, #0x3f
  439c58:	b.ls	439c28 <nftw@plt+0x370a8>  // b.plast
  439c5c:	cbnz	w23, 439c34 <nftw@plt+0x370b4>
  439c60:	mov	x1, x24
  439c64:	mov	x0, x19
  439c68:	add	w20, w20, #0x7
  439c6c:	mov	w23, #0x1                   	// #1
  439c70:	bl	4393e0 <nftw@plt+0x36860>
  439c74:	tbnz	w21, #7, 439c3c <nftw@plt+0x370bc>
  439c78:	and	w21, w21, #0x40
  439c7c:	cmp	w20, #0x3f
  439c80:	mov	x0, #0xffffffffffffffff    	// #-1
  439c84:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
  439c88:	lsl	x0, x0, x20
  439c8c:	orr	x0, x22, x0
  439c90:	csel	x0, x0, x22, ne  // ne = any
  439c94:	ldp	x19, x20, [sp, #16]
  439c98:	ldp	x21, x22, [sp, #32]
  439c9c:	ldp	x23, x24, [sp, #48]
  439ca0:	ldp	x29, x30, [sp], #64
  439ca4:	ret
  439ca8:	sub	x1, x1, #0x1
  439cac:	add	x0, x21, #0x1
  439cb0:	stp	x0, x1, [x19, #16]
  439cb4:	b	439c50 <nftw@plt+0x370d0>
  439cb8:	mov	x0, #0x0                   	// #0
  439cbc:	ldp	x19, x20, [sp, #16]
  439cc0:	ldp	x21, x22, [sp, #32]
  439cc4:	ldp	x23, x24, [sp, #48]
  439cc8:	ldp	x29, x30, [sp], #64
  439ccc:	ret
  439cd0:	stp	x29, x30, [sp, #-48]!
  439cd4:	mov	x29, sp
  439cd8:	stp	x19, x20, [sp, #16]
  439cdc:	mov	x19, x0
  439ce0:	ldr	x20, [x0, #16]
  439ce4:	str	x21, [sp, #32]
  439ce8:	ldr	x21, [x0, #24]
  439cec:	mov	x0, x20
  439cf0:	mov	x1, x21
  439cf4:	bl	402540 <strnlen@plt>
  439cf8:	add	x0, x0, #0x1
  439cfc:	cmp	x21, x0
  439d00:	b.cs	439d28 <nftw@plt+0x371a8>  // b.hs, b.nlast
  439d04:	mov	x0, x19
  439d08:	bl	4398e8 <nftw@plt+0x36d68>
  439d0c:	cmp	w0, #0x0
  439d10:	csel	x20, x20, xzr, ne  // ne = any
  439d14:	mov	x0, x20
  439d18:	ldp	x19, x20, [sp, #16]
  439d1c:	ldr	x21, [sp, #32]
  439d20:	ldp	x29, x30, [sp], #48
  439d24:	ret
  439d28:	sub	x21, x21, x0
  439d2c:	add	x0, x20, x0
  439d30:	stp	x0, x21, [x19, #16]
  439d34:	mov	x0, x20
  439d38:	ldp	x19, x20, [sp, #16]
  439d3c:	ldr	x21, [sp, #32]
  439d40:	ldp	x29, x30, [sp], #48
  439d44:	ret
  439d48:	stp	x29, x30, [sp, #-96]!
  439d4c:	mov	x29, sp
  439d50:	str	x21, [sp, #32]
  439d54:	ldr	x21, [sp, #96]
  439d58:	stp	x19, x20, [sp, #16]
  439d5c:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  439d60:	mov	x19, x1
  439d64:	add	x20, x20, #0x3fc
  439d68:	stp	xzr, xzr, [x21]
  439d6c:	cmp	w0, #0x20
  439d70:	b.hi	439d94 <nftw@plt+0x37214>  // b.pmore
  439d74:	cbz	w0, 439ff4 <nftw@plt+0x37474>
  439d78:	sub	w0, w0, #0x1
  439d7c:	cmp	w0, #0x1f
  439d80:	b.hi	439ff4 <nftw@plt+0x37474>  // b.pmore
  439d84:	ldrh	w0, [x20, w0, uxtw #1]
  439d88:	adr	x1, 439d94 <nftw@plt+0x37214>
  439d8c:	add	x0, x1, w0, sxth #2
  439d90:	br	x0
  439d94:	mov	w1, #0x1f20                	// #7968
  439d98:	cmp	w0, w1
  439d9c:	b.eq	43a124 <nftw@plt+0x375a4>  // b.none
  439da0:	b.ls	439df4 <nftw@plt+0x37274>  // b.plast
  439da4:	mov	w1, #0x1f21                	// #7969
  439da8:	cmp	w0, w1
  439dac:	b.ne	439ff4 <nftw@plt+0x37474>  // b.any
  439db0:	str	x7, [sp, #48]
  439db4:	mov	x0, x19
  439db8:	cbz	w2, 43a114 <nftw@plt+0x37594>
  439dbc:	bl	439990 <nftw@plt+0x36e10>
  439dc0:	mov	x1, x0
  439dc4:	ldr	x7, [sp, #48]
  439dc8:	cbz	x7, 43a17c <nftw@plt+0x375fc>
  439dcc:	ldr	x0, [x7, #112]
  439dd0:	cmp	x0, x1
  439dd4:	b.ls	43a1a0 <nftw@plt+0x37620>  // b.plast
  439dd8:	ldr	x2, [x7, #104]
  439ddc:	mov	w3, #0x4                   	// #4
  439de0:	mov	w0, #0x1                   	// #1
  439de4:	str	w3, [x21]
  439de8:	add	x1, x2, x1
  439dec:	str	x1, [x21, #8]
  439df0:	b	439e4c <nftw@plt+0x372cc>
  439df4:	mov	w1, #0xffffe0ff            	// #-7937
  439df8:	add	w0, w0, w1
  439dfc:	cmp	w0, #0x1
  439e00:	b.hi	439ff4 <nftw@plt+0x37474>  // b.pmore
  439e04:	mov	w0, #0x8                   	// #8
  439e08:	str	w0, [x21]
  439e0c:	mov	x0, x19
  439e10:	bl	439b30 <nftw@plt+0x36fb0>
  439e14:	mov	x1, x0
  439e18:	str	x1, [x21, #8]
  439e1c:	mov	w0, #0x1                   	// #1
  439e20:	ldp	x19, x20, [sp, #16]
  439e24:	ldr	x21, [sp, #32]
  439e28:	ldp	x29, x30, [sp], #96
  439e2c:	ret
  439e30:	mov	w0, #0x2                   	// #2
  439e34:	str	w0, [x21]
  439e38:	mov	x0, x19
  439e3c:	bl	439a58 <nftw@plt+0x36ed8>
  439e40:	and	x1, x0, #0xff
  439e44:	mov	w0, #0x1                   	// #1
  439e48:	str	x1, [x21, #8]
  439e4c:	ldp	x19, x20, [sp, #16]
  439e50:	ldr	x21, [sp, #32]
  439e54:	ldp	x29, x30, [sp], #96
  439e58:	ret
  439e5c:	mov	w0, #0x3                   	// #3
  439e60:	str	w0, [x21]
  439e64:	mov	x0, x19
  439e68:	bl	439bf8 <nftw@plt+0x37078>
  439e6c:	mov	x1, x0
  439e70:	mov	w0, #0x1                   	// #1
  439e74:	str	x1, [x21, #8]
  439e78:	b	439e4c <nftw@plt+0x372cc>
  439e7c:	mov	w0, #0xa                   	// #10
  439e80:	str	w0, [x21]
  439e84:	mov	x0, x19
  439e88:	bl	439a58 <nftw@plt+0x36ed8>
  439e8c:	and	x2, x0, #0xff
  439e90:	ldr	x1, [x19, #24]
  439e94:	cmp	x1, w0, uxtb
  439e98:	b.cs	439f74 <nftw@plt+0x373f4>  // b.hs, b.nlast
  439e9c:	mov	x0, x19
  439ea0:	ldp	x19, x20, [sp, #16]
  439ea4:	ldr	x21, [sp, #32]
  439ea8:	ldp	x29, x30, [sp], #96
  439eac:	b	4398e8 <nftw@plt+0x36d68>
  439eb0:	mov	w0, #0xa                   	// #10
  439eb4:	str	w0, [x21]
  439eb8:	mov	x0, x19
  439ebc:	bl	439b30 <nftw@plt+0x36fb0>
  439ec0:	mov	x1, x0
  439ec4:	ldr	x2, [x19, #24]
  439ec8:	cmp	x0, x2
  439ecc:	b.hi	439e9c <nftw@plt+0x3731c>  // b.pmore
  439ed0:	ldr	x3, [x19, #16]
  439ed4:	sub	x2, x2, x0
  439ed8:	mov	w0, #0x1                   	// #1
  439edc:	add	x1, x3, x1
  439ee0:	stp	x1, x2, [x19, #16]
  439ee4:	b	439e4c <nftw@plt+0x372cc>
  439ee8:	mov	w0, #0x2                   	// #2
  439eec:	str	w0, [x21]
  439ef0:	mov	x0, x19
  439ef4:	bl	439990 <nftw@plt+0x36e10>
  439ef8:	mov	x1, x0
  439efc:	str	x1, [x21, #8]
  439f00:	mov	w0, #0x1                   	// #1
  439f04:	ldp	x19, x20, [sp, #16]
  439f08:	ldr	x21, [sp, #32]
  439f0c:	ldp	x29, x30, [sp], #96
  439f10:	ret
  439f14:	mov	w0, #0x2                   	// #2
  439f18:	str	w0, [x21]
  439f1c:	mov	x0, x19
  439f20:	bl	439930 <nftw@plt+0x36db0>
  439f24:	mov	w1, w0
  439f28:	mov	w0, #0x1                   	// #1
  439f2c:	str	x1, [x21, #8]
  439f30:	b	439e4c <nftw@plt+0x372cc>
  439f34:	mov	w0, #0x2                   	// #2
  439f38:	str	w0, [x21]
  439f3c:	mov	x0, x19
  439f40:	bl	4399f0 <nftw@plt+0x36e70>
  439f44:	and	x1, x0, #0xffff
  439f48:	mov	w0, #0x1                   	// #1
  439f4c:	str	x1, [x21, #8]
  439f50:	b	439e4c <nftw@plt+0x372cc>
  439f54:	mov	w0, #0xa                   	// #10
  439f58:	str	w0, [x21]
  439f5c:	mov	x0, x19
  439f60:	bl	439930 <nftw@plt+0x36db0>
  439f64:	mov	w2, w0
  439f68:	ldr	x1, [x19, #24]
  439f6c:	cmp	x1, w0, uxtw
  439f70:	b.cc	439e9c <nftw@plt+0x3731c>  // b.lo, b.ul, b.last
  439f74:	ldr	x3, [x19, #16]
  439f78:	sub	x1, x1, x2
  439f7c:	mov	w0, #0x1                   	// #1
  439f80:	add	x2, x3, x2
  439f84:	stp	x2, x1, [x19, #16]
  439f88:	b	439e4c <nftw@plt+0x372cc>
  439f8c:	mov	w0, #0x4                   	// #4
  439f90:	str	w0, [x21]
  439f94:	mov	x0, x19
  439f98:	bl	439cd0 <nftw@plt+0x37150>
  439f9c:	cmp	x0, #0x0
  439fa0:	str	x0, [x21, #8]
  439fa4:	cset	w0, ne  // ne = any
  439fa8:	b	439e4c <nftw@plt+0x372cc>
  439fac:	mov	w0, #0xa                   	// #10
  439fb0:	str	w0, [x21]
  439fb4:	mov	x0, x19
  439fb8:	bl	4399f0 <nftw@plt+0x36e70>
  439fbc:	and	x2, x0, #0xffff
  439fc0:	ldr	x1, [x19, #24]
  439fc4:	cmp	x1, w0, uxth
  439fc8:	b.cc	439e9c <nftw@plt+0x3731c>  // b.lo, b.ul, b.last
  439fcc:	b	439f74 <nftw@plt+0x373f4>
  439fd0:	mov	w20, #0x1                   	// #1
  439fd4:	str	w20, [x21]
  439fd8:	mov	w1, w4
  439fdc:	mov	x0, x19
  439fe0:	bl	439aa8 <nftw@plt+0x36f28>
  439fe4:	mov	x1, x0
  439fe8:	mov	w0, w20
  439fec:	str	x1, [x21, #8]
  439ff0:	b	439e4c <nftw@plt+0x372cc>
  439ff4:	mov	x0, x19
  439ff8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  439ffc:	add	x1, x1, #0x1f0
  43a000:	bl	4393e0 <nftw@plt+0x36860>
  43a004:	mov	w0, #0x0                   	// #0
  43a008:	b	439e4c <nftw@plt+0x372cc>
  43a00c:	mov	w0, #0x9                   	// #9
  43a010:	b	439eec <nftw@plt+0x3736c>
  43a014:	mov	x1, #0x1                   	// #1
  43a018:	mov	w2, #0x2                   	// #2
  43a01c:	mov	w0, w1
  43a020:	str	w2, [x21]
  43a024:	str	x1, [x21, #8]
  43a028:	b	439e4c <nftw@plt+0x372cc>
  43a02c:	mov	w0, #0xb                   	// #11
  43a030:	b	439eb4 <nftw@plt+0x37334>
  43a034:	mov	w0, #0x8                   	// #8
  43a038:	str	w0, [x21]
  43a03c:	mov	x0, x19
  43a040:	cbz	w2, 43a150 <nftw@plt+0x375d0>
  43a044:	bl	439990 <nftw@plt+0x36e10>
  43a048:	mov	x1, x0
  43a04c:	b	439e18 <nftw@plt+0x37298>
  43a050:	mov	x0, x19
  43a054:	str	w2, [sp, #48]
  43a058:	str	w3, [sp, #56]
  43a05c:	str	w4, [sp, #68]
  43a060:	stp	x5, x6, [sp, #72]
  43a064:	str	x7, [sp, #88]
  43a068:	bl	439b30 <nftw@plt+0x36fb0>
  43a06c:	ldr	w2, [sp, #48]
  43a070:	ldr	w3, [sp, #56]
  43a074:	ldr	w4, [sp, #68]
  43a078:	ldp	x5, x6, [sp, #72]
  43a07c:	ldr	x7, [sp, #88]
  43a080:	b	439d68 <nftw@plt+0x371e8>
  43a084:	mov	w0, #0x5                   	// #5
  43a088:	b	439e08 <nftw@plt+0x37288>
  43a08c:	mov	w0, #0x5                   	// #5
  43a090:	b	439eec <nftw@plt+0x3736c>
  43a094:	mov	w0, #0x5                   	// #5
  43a098:	b	439f18 <nftw@plt+0x37398>
  43a09c:	mov	w0, #0x5                   	// #5
  43a0a0:	b	439f38 <nftw@plt+0x373b8>
  43a0a4:	mov	w0, #0x5                   	// #5
  43a0a8:	b	439e34 <nftw@plt+0x372b4>
  43a0ac:	mov	w0, #0x6                   	// #6
  43a0b0:	str	w0, [x21]
  43a0b4:	cmp	w3, #0x2
  43a0b8:	b.ne	43a03c <nftw@plt+0x374bc>  // b.any
  43a0bc:	mov	w1, w4
  43a0c0:	mov	x0, x19
  43a0c4:	bl	439aa8 <nftw@plt+0x36f28>
  43a0c8:	mov	x1, x0
  43a0cc:	mov	w0, #0x1                   	// #1
  43a0d0:	str	x1, [x21, #8]
  43a0d4:	b	439e4c <nftw@plt+0x372cc>
  43a0d8:	mov	w0, #0x2                   	// #2
  43a0dc:	b	439e08 <nftw@plt+0x37288>
  43a0e0:	stp	x5, x6, [sp, #48]
  43a0e4:	mov	x0, x19
  43a0e8:	cbz	w2, 43a16c <nftw@plt+0x375ec>
  43a0ec:	bl	439990 <nftw@plt+0x36e10>
  43a0f0:	ldp	x5, x6, [sp, #48]
  43a0f4:	cmp	x0, x6
  43a0f8:	b.cs	43a188 <nftw@plt+0x37608>  // b.hs, b.nlast
  43a0fc:	add	x5, x5, x0
  43a100:	mov	w1, #0x4                   	// #4
  43a104:	mov	w0, #0x1                   	// #1
  43a108:	str	w1, [x21]
  43a10c:	str	x5, [x21, #8]
  43a110:	b	439e4c <nftw@plt+0x372cc>
  43a114:	bl	439930 <nftw@plt+0x36db0>
  43a118:	mov	w1, w0
  43a11c:	ldr	x7, [sp, #48]
  43a120:	b	439dc8 <nftw@plt+0x37248>
  43a124:	str	x7, [sp, #48]
  43a128:	mov	x0, x19
  43a12c:	cbz	w2, 43a15c <nftw@plt+0x375dc>
  43a130:	bl	439990 <nftw@plt+0x36e10>
  43a134:	ldr	x7, [sp, #48]
  43a138:	str	x0, [x21, #8]
  43a13c:	cbz	x7, 43a17c <nftw@plt+0x375fc>
  43a140:	mov	w1, #0x7                   	// #7
  43a144:	mov	w0, #0x1                   	// #1
  43a148:	str	w1, [x21]
  43a14c:	b	439e4c <nftw@plt+0x372cc>
  43a150:	bl	439930 <nftw@plt+0x36db0>
  43a154:	mov	w1, w0
  43a158:	b	439e18 <nftw@plt+0x37298>
  43a15c:	bl	439930 <nftw@plt+0x36db0>
  43a160:	mov	w0, w0
  43a164:	ldr	x7, [sp, #48]
  43a168:	b	43a138 <nftw@plt+0x375b8>
  43a16c:	bl	439930 <nftw@plt+0x36db0>
  43a170:	mov	w0, w0
  43a174:	ldp	x5, x6, [sp, #48]
  43a178:	b	43a0f4 <nftw@plt+0x37574>
  43a17c:	mov	w0, #0x1                   	// #1
  43a180:	str	wzr, [x21]
  43a184:	b	439e4c <nftw@plt+0x372cc>
  43a188:	mov	x0, x19
  43a18c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43a190:	add	x1, x1, #0x1a8
  43a194:	bl	4393e0 <nftw@plt+0x36860>
  43a198:	mov	w0, #0x0                   	// #0
  43a19c:	b	439e4c <nftw@plt+0x372cc>
  43a1a0:	mov	x0, x19
  43a1a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43a1a8:	add	x1, x1, #0x1c8
  43a1ac:	bl	4393e0 <nftw@plt+0x36860>
  43a1b0:	mov	w0, #0x0                   	// #0
  43a1b4:	b	439e4c <nftw@plt+0x372cc>
  43a1b8:	sub	sp, sp, #0x170
  43a1bc:	stp	x29, x30, [sp, #48]
  43a1c0:	add	x29, sp, #0x30
  43a1c4:	stp	x25, x26, [sp, #112]
  43a1c8:	ldr	x25, [sp, #368]
  43a1cc:	stp	x27, x28, [sp, #128]
  43a1d0:	add	x28, sp, #0x130
  43a1d4:	ldr	x26, [sp, #392]
  43a1d8:	mov	x27, x4
  43a1dc:	stp	x19, x20, [sp, #64]
  43a1e0:	mov	x19, x2
  43a1e4:	mov	x20, x3
  43a1e8:	stp	x23, x24, [sp, #96]
  43a1ec:	mov	x24, x26
  43a1f0:	mov	x26, x25
  43a1f4:	mov	x25, x28
  43a1f8:	stp	x21, x22, [sp, #80]
  43a1fc:	stp	x0, x1, [sp, #192]
  43a200:	str	x6, [sp, #208]
  43a204:	str	x5, [sp, #224]
  43a208:	str	w7, [sp, #236]
  43a20c:	add	x0, sp, #0xf0
  43a210:	str	x0, [sp, #216]
  43a214:	ldr	x0, [x19, #24]
  43a218:	cbz	x0, 43a4d0 <nftw@plt+0x37950>
  43a21c:	mov	x0, x19
  43a220:	bl	439b30 <nftw@plt+0x36fb0>
  43a224:	mov	x2, x0
  43a228:	cbz	x0, 43a4d0 <nftw@plt+0x37950>
  43a22c:	ldp	x0, x1, [x24, #88]
  43a230:	ldp	x3, x4, [sp, #376]
  43a234:	bl	4396a0 <nftw@plt+0x36b20>
  43a238:	mov	x28, x0
  43a23c:	cbz	x0, 43a408 <nftw@plt+0x37888>
  43a240:	ldr	x0, [sp, #408]
  43a244:	cbz	x0, 43a254 <nftw@plt+0x376d4>
  43a248:	ldr	x1, [sp, #408]
  43a24c:	ldr	w0, [x28, #8]
  43a250:	str	w0, [x1]
  43a254:	ldr	x0, [x28, #16]
  43a258:	cbz	x0, 43a3bc <nftw@plt+0x3783c>
  43a25c:	mov	x23, #0x0                   	// #0
  43a260:	mov	x21, #0x0                   	// #0
  43a264:	str	wzr, [sp, #152]
  43a268:	str	wzr, [sp, #160]
  43a26c:	stp	xzr, xzr, [sp, #168]
  43a270:	str	wzr, [sp, #184]
  43a274:	str	wzr, [sp, #232]
  43a278:	ldr	x2, [x28, #24]
  43a27c:	b	43a2b8 <nftw@plt+0x37738>
  43a280:	cmp	w0, #0x10
  43a284:	b.eq	43a458 <nftw@plt+0x378d8>  // b.none
  43a288:	cmp	w0, #0x11
  43a28c:	b.ne	43a42c <nftw@plt+0x378ac>  // b.any
  43a290:	ldr	w0, [sp, #304]
  43a294:	cmp	w0, #0x1
  43a298:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a29c:	ldr	x21, [sp, #312]
  43a2a0:	str	w0, [sp, #184]
  43a2a4:	nop
  43a2a8:	ldr	x0, [x28, #16]
  43a2ac:	add	x23, x23, #0x1
  43a2b0:	cmp	x0, x23
  43a2b4:	b.ls	43a340 <nftw@plt+0x377c0>  // b.plast
  43a2b8:	lsl	x22, x23, #3
  43a2bc:	ldr	w4, [x24, #48]
  43a2c0:	add	x0, x2, x22
  43a2c4:	mov	x7, x26
  43a2c8:	ldp	w3, w2, [x24, #40]
  43a2cc:	mov	x6, x27
  43a2d0:	ldr	w0, [x0, #4]
  43a2d4:	mov	x5, x20
  43a2d8:	str	x25, [sp]
  43a2dc:	mov	x1, x19
  43a2e0:	bl	439d48 <nftw@plt+0x371c8>
  43a2e4:	cbz	w0, 43a40c <nftw@plt+0x3788c>
  43a2e8:	ldr	x2, [x28, #24]
  43a2ec:	ldr	w0, [x2, x22]
  43a2f0:	cmp	w0, #0x12
  43a2f4:	b.eq	43a4a4 <nftw@plt+0x37924>  // b.none
  43a2f8:	b.ls	43a280 <nftw@plt+0x37700>  // b.plast
  43a2fc:	cmp	w0, #0x1b
  43a300:	b.eq	43a480 <nftw@plt+0x37900>  // b.none
  43a304:	cmp	w0, #0x55
  43a308:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a30c:	ldr	w0, [sp, #304]
  43a310:	cmp	w0, #0x2
  43a314:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43a318:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a31c:	mov	w0, #0x1                   	// #1
  43a320:	str	w0, [sp, #152]
  43a324:	ldr	x0, [sp, #312]
  43a328:	str	x0, [sp, #176]
  43a32c:	ldr	x0, [x28, #16]
  43a330:	add	x23, x23, #0x1
  43a334:	cmp	x0, x23
  43a338:	b.hi	43a2b8 <nftw@plt+0x37738>  // b.pmore
  43a33c:	nop
  43a340:	ldr	w0, [x28, #8]
  43a344:	cmp	w0, #0x2e
  43a348:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  43a34c:	b.ne	43a3bc <nftw@plt+0x3783c>  // b.any
  43a350:	ldr	w0, [sp, #152]
  43a354:	cbnz	w0, 43a4d8 <nftw@plt+0x37958>
  43a358:	ldr	w1, [sp, #160]
  43a35c:	ldr	w0, [sp, #184]
  43a360:	tst	w0, w1
  43a364:	b.eq	43a3bc <nftw@plt+0x3783c>  // b.none
  43a368:	ldr	x1, [sp, #168]
  43a36c:	str	x24, [sp, #320]
  43a370:	ldr	w0, [sp, #232]
  43a374:	ldr	x8, [sp, #216]
  43a378:	cmp	w0, #0x0
  43a37c:	add	x0, x1, x21
  43a380:	csel	x0, x0, x1, ne  // ne = any
  43a384:	stp	x21, x0, [sp, #304]
  43a388:	mov	x2, x8
  43a38c:	ldp	x6, x7, [x25]
  43a390:	ldp	x3, x4, [sp, #376]
  43a394:	ldr	x0, [sp, #192]
  43a398:	ldr	x1, [sp, #200]
  43a39c:	ldr	x5, [sp, #400]
  43a3a0:	stp	x6, x7, [x8]
  43a3a4:	str	x24, [x8, #16]
  43a3a8:	bl	439300 <nftw@plt+0x36780>
  43a3ac:	cbz	w0, 43a40c <nftw@plt+0x3788c>
  43a3b0:	ldr	w0, [x28, #8]
  43a3b4:	cmp	w0, #0x11
  43a3b8:	b.eq	43a4d0 <nftw@plt+0x37950>  // b.none
  43a3bc:	ldr	w0, [x28, #12]
  43a3c0:	cbz	w0, 43a214 <nftw@plt+0x37694>
  43a3c4:	ldr	x0, [sp, #376]
  43a3c8:	stp	x26, x0, [sp]
  43a3cc:	ldr	w7, [sp, #236]
  43a3d0:	ldp	x1, x6, [sp, #200]
  43a3d4:	str	x24, [sp, #24]
  43a3d8:	ldr	x0, [sp, #384]
  43a3dc:	str	x0, [sp, #16]
  43a3e0:	ldr	x0, [sp, #400]
  43a3e4:	str	x0, [sp, #32]
  43a3e8:	ldr	x0, [sp, #192]
  43a3ec:	str	xzr, [sp, #40]
  43a3f0:	ldr	x5, [sp, #224]
  43a3f4:	mov	x4, x27
  43a3f8:	mov	x3, x20
  43a3fc:	mov	x2, x19
  43a400:	bl	43a1b8 <nftw@plt+0x37638>
  43a404:	cbnz	w0, 43a20c <nftw@plt+0x3768c>
  43a408:	mov	w0, #0x0                   	// #0
  43a40c:	ldp	x29, x30, [sp, #48]
  43a410:	ldp	x19, x20, [sp, #64]
  43a414:	ldp	x21, x22, [sp, #80]
  43a418:	ldp	x23, x24, [sp, #96]
  43a41c:	ldp	x25, x26, [sp, #112]
  43a420:	ldp	x27, x28, [sp, #128]
  43a424:	add	sp, sp, #0x170
  43a428:	ret
  43a42c:	cmp	w0, #0x3
  43a430:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a434:	ldr	w0, [x28, #8]
  43a438:	cmp	w0, #0x11
  43a43c:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a440:	ldr	w0, [sp, #304]
  43a444:	cmp	w0, #0x4
  43a448:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a44c:	ldr	x0, [sp, #312]
  43a450:	str	x0, [x24, #64]
  43a454:	b	43a2a8 <nftw@plt+0x37728>
  43a458:	ldr	w0, [x28, #8]
  43a45c:	cmp	w0, #0x11
  43a460:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a464:	ldr	w0, [sp, #304]
  43a468:	cmp	w0, #0x2
  43a46c:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43a470:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a474:	ldr	x0, [sp, #312]
  43a478:	str	x0, [x24, #56]
  43a47c:	b	43a2a8 <nftw@plt+0x37728>
  43a480:	ldr	w0, [x28, #8]
  43a484:	cmp	w0, #0x11
  43a488:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a48c:	ldr	w0, [sp, #304]
  43a490:	cmp	w0, #0x4
  43a494:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a498:	ldr	x0, [sp, #312]
  43a49c:	str	x0, [x24, #72]
  43a4a0:	b	43a2a8 <nftw@plt+0x37728>
  43a4a4:	ldr	w0, [sp, #304]
  43a4a8:	cmp	w0, #0x1
  43a4ac:	b.eq	43a4c0 <nftw@plt+0x37940>  // b.none
  43a4b0:	cmp	w0, #0x2
  43a4b4:	b.ne	43a2a8 <nftw@plt+0x37728>  // b.any
  43a4b8:	mov	w0, #0x1                   	// #1
  43a4bc:	str	w0, [sp, #232]
  43a4c0:	str	w0, [sp, #160]
  43a4c4:	ldr	x0, [sp, #312]
  43a4c8:	str	x0, [sp, #168]
  43a4cc:	b	43a2a8 <nftw@plt+0x37728>
  43a4d0:	mov	w0, #0x1                   	// #1
  43a4d4:	b	43a40c <nftw@plt+0x3788c>
  43a4d8:	ldr	x0, [sp, #176]
  43a4dc:	ldr	x1, [sp, #208]
  43a4e0:	cmp	x0, x1
  43a4e4:	b.cs	43a620 <nftw@plt+0x37aa0>  // b.hs, b.nlast
  43a4e8:	ldr	x3, [sp, #176]
  43a4ec:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43a4f0:	ldr	x4, [sp, #208]
  43a4f4:	add	x0, x0, #0x7a8
  43a4f8:	ldr	x2, [sp, #224]
  43a4fc:	stp	x0, x2, [sp, #304]
  43a500:	ldr	w0, [sp, #236]
  43a504:	sub	x23, x4, x3
  43a508:	str	w0, [sp, #336]
  43a50c:	ldr	x0, [sp, #376]
  43a510:	add	x1, x2, x3
  43a514:	stp	x20, x27, [sp, #168]
  43a518:	mov	x22, #0xffff                	// #65535
  43a51c:	stp	x1, x23, [sp, #320]
  43a520:	str	x0, [sp, #344]
  43a524:	ldp	x20, x23, [sp, #192]
  43a528:	stp	x28, x19, [sp, #152]
  43a52c:	ldr	x0, [sp, #384]
  43a530:	str	x26, [sp, #184]
  43a534:	ldr	x19, [sp, #216]
  43a538:	mov	x28, x0
  43a53c:	ldr	x27, [sp, #376]
  43a540:	str	x0, [sp, #352]
  43a544:	str	wzr, [sp, #360]
  43a548:	ldr	w1, [x24, #48]
  43a54c:	mov	x0, x25
  43a550:	bl	439aa8 <nftw@plt+0x36f28>
  43a554:	mov	x26, x0
  43a558:	ldr	w1, [x24, #48]
  43a55c:	mov	x0, x25
  43a560:	bl	439aa8 <nftw@plt+0x36f28>
  43a564:	orr	x1, x26, x0
  43a568:	cbz	x1, 43a63c <nftw@plt+0x37abc>
  43a56c:	ldr	w1, [x24, #48]
  43a570:	cmp	w1, #0x4
  43a574:	b.eq	43a610 <nftw@plt+0x37a90>  // b.none
  43a578:	b.gt	43a5ac <nftw@plt+0x37a2c>
  43a57c:	cmp	w1, #0x1
  43a580:	b.eq	43a604 <nftw@plt+0x37a84>  // b.none
  43a584:	cmp	w1, #0x2
  43a588:	b.ne	43a5c0 <nftw@plt+0x37a40>  // b.any
  43a58c:	cmp	x26, x22
  43a590:	cset	w1, eq  // eq = none
  43a594:	cbz	w1, 43a5c0 <nftw@plt+0x37a40>
  43a598:	mov	x21, x0
  43a59c:	ldr	w0, [sp, #360]
  43a5a0:	cbz	w0, 43a548 <nftw@plt+0x379c8>
  43a5a4:	mov	w0, #0x0                   	// #0
  43a5a8:	b	43a40c <nftw@plt+0x3788c>
  43a5ac:	cmp	w1, #0x8
  43a5b0:	b.ne	43a5c0 <nftw@plt+0x37a40>  // b.any
  43a5b4:	cmn	x26, #0x1
  43a5b8:	cset	w1, eq  // eq = none
  43a5bc:	cbnz	w1, 43a598 <nftw@plt+0x37a18>
  43a5c0:	add	x0, x21, x0
  43a5c4:	add	x2, x21, x26
  43a5c8:	stp	x2, x0, [sp, #280]
  43a5cc:	add	x0, sp, #0x200
  43a5d0:	mov	x4, x28
  43a5d4:	ldr	x5, [sp, #400]
  43a5d8:	str	x24, [sp, #296]
  43a5dc:	ldp	x0, x1, [x0, #-232]
  43a5e0:	stp	x0, x1, [x19]
  43a5e4:	mov	x3, x27
  43a5e8:	str	x24, [x19, #16]
  43a5ec:	mov	x2, x19
  43a5f0:	mov	x1, x23
  43a5f4:	mov	x0, x20
  43a5f8:	bl	439300 <nftw@plt+0x36780>
  43a5fc:	cbnz	w0, 43a59c <nftw@plt+0x37a1c>
  43a600:	b	43a40c <nftw@plt+0x3788c>
  43a604:	cmp	x26, #0xff
  43a608:	cset	w1, eq  // eq = none
  43a60c:	b	43a594 <nftw@plt+0x37a14>
  43a610:	mov	x1, #0xffffffff            	// #4294967295
  43a614:	cmp	x26, x1
  43a618:	cset	w1, eq  // eq = none
  43a61c:	b	43a594 <nftw@plt+0x37a14>
  43a620:	ldp	x3, x0, [sp, #376]
  43a624:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43a628:	mov	w2, #0x0                   	// #0
  43a62c:	add	x1, x1, #0x208
  43a630:	blr	x3
  43a634:	mov	w0, #0x0                   	// #0
  43a638:	b	43a40c <nftw@plt+0x3788c>
  43a63c:	ldr	w0, [sp, #360]
  43a640:	ldp	x28, x19, [sp, #152]
  43a644:	ldp	x20, x27, [sp, #168]
  43a648:	ldr	x26, [sp, #184]
  43a64c:	cbz	w0, 43a3b0 <nftw@plt+0x37830>
  43a650:	mov	w0, #0x0                   	// #0
  43a654:	b	43a40c <nftw@plt+0x3788c>
  43a658:	ldr	w2, [x2]
  43a65c:	mov	x6, x3
  43a660:	mov	x7, x0
  43a664:	mov	x3, x4
  43a668:	cmp	w2, #0x6
  43a66c:	mov	x4, x5
  43a670:	b.eq	43a6d8 <nftw@plt+0x37b58>  // b.none
  43a674:	cmp	w2, #0x2
  43a678:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  43a67c:	b.eq	43a730 <nftw@plt+0x37bb0>  // b.none
  43a680:	cmp	w2, #0x7
  43a684:	b.ne	43a6d0 <nftw@plt+0x37b50>  // b.any
  43a688:	ldr	x0, [x0, #8]
  43a68c:	mov	x5, #0x0                   	// #0
  43a690:	ldr	x2, [x6]
  43a694:	ldp	x9, x7, [x0, #40]
  43a698:	add	x6, x7, x5
  43a69c:	cmp	x7, x5
  43a6a0:	b.ls	43a6d0 <nftw@plt+0x37b50>  // b.plast
  43a6a4:	lsr	x6, x6, #1
  43a6a8:	ldr	x1, [x9, x6, lsl #3]
  43a6ac:	ldr	x8, [x1, #24]
  43a6b0:	cmp	x2, x8
  43a6b4:	b.cc	43a728 <nftw@plt+0x37ba8>  // b.lo, b.ul, b.last
  43a6b8:	ldr	x10, [x1, #32]
  43a6bc:	add	x5, x6, #0x1
  43a6c0:	cmp	x2, x10
  43a6c4:	b.cs	43a698 <nftw@plt+0x37b18>  // b.hs, b.nlast
  43a6c8:	sub	x2, x2, x8
  43a6cc:	b	43a738 <nftw@plt+0x37bb8>
  43a6d0:	mov	x0, #0x0                   	// #0
  43a6d4:	ret
  43a6d8:	ldp	x9, x5, [x7, #40]
  43a6dc:	mov	x0, #0x0                   	// #0
  43a6e0:	ldr	x2, [x6]
  43a6e4:	add	x6, x5, x0
  43a6e8:	cmp	x5, x0
  43a6ec:	b.ls	43a6d0 <nftw@plt+0x37b50>  // b.plast
  43a6f0:	lsr	x6, x6, #1
  43a6f4:	ldr	x1, [x9, x6, lsl #3]
  43a6f8:	ldr	x8, [x1, #24]
  43a6fc:	cmp	x2, x8
  43a700:	b.cc	43a720 <nftw@plt+0x37ba0>  // b.lo, b.ul, b.last
  43a704:	ldr	x10, [x1, #32]
  43a708:	add	x0, x6, #0x1
  43a70c:	cmp	x2, x10
  43a710:	b.cs	43a6e4 <nftw@plt+0x37b64>  // b.hs, b.nlast
  43a714:	sub	x2, x2, x8
  43a718:	mov	x0, x7
  43a71c:	b	43a738 <nftw@plt+0x37bb8>
  43a720:	mov	x5, x6
  43a724:	b	43a6e4 <nftw@plt+0x37b64>
  43a728:	mov	x7, x6
  43a72c:	b	43a698 <nftw@plt+0x37b18>
  43a730:	ldr	x2, [x6]
  43a734:	b	43a738 <nftw@plt+0x37bb8>
  43a738:	sub	sp, sp, #0xd0
  43a73c:	stp	x29, x30, [sp, #16]
  43a740:	add	x29, sp, #0x10
  43a744:	stp	x27, x28, [sp, #96]
  43a748:	mov	x27, x0
  43a74c:	ldr	x0, [x1, #16]
  43a750:	stp	x21, x22, [sp, #48]
  43a754:	stp	x25, x26, [sp, #80]
  43a758:	cmp	x0, x2
  43a75c:	mov	x25, x4
  43a760:	str	x3, [sp, #112]
  43a764:	b.hi	43a908 <nftw@plt+0x37d88>  // b.pmore
  43a768:	stp	x19, x20, [sp, #32]
  43a76c:	mov	x19, x1
  43a770:	sub	x4, x2, x0
  43a774:	ldr	x1, [x1, #8]
  43a778:	cmp	x4, x1
  43a77c:	b.cs	43a904 <nftw@plt+0x37d84>  // b.hs, b.nlast
  43a780:	ldr	x3, [x19]
  43a784:	add	x0, x0, x1
  43a788:	sub	x1, x0, x2
  43a78c:	ldr	w5, [x27, #120]
  43a790:	add	x2, x3, x4
  43a794:	stp	x2, x1, [sp, #160]
  43a798:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43a79c:	ldr	x6, [x27, #56]
  43a7a0:	add	x3, x3, #0x5e0
  43a7a4:	ldr	x1, [sp, #112]
  43a7a8:	add	x21, sp, #0x90
  43a7ac:	mov	x0, x21
  43a7b0:	stp	x3, x6, [sp, #144]
  43a7b4:	str	w5, [sp, #176]
  43a7b8:	str	x1, [sp, #184]
  43a7bc:	str	x25, [sp, #192]
  43a7c0:	str	wzr, [sp, #200]
  43a7c4:	bl	439b30 <nftw@plt+0x36fb0>
  43a7c8:	mov	x2, x0
  43a7cc:	cbz	x0, 43a954 <nftw@plt+0x37dd4>
  43a7d0:	ldp	x0, x1, [x19, #88]
  43a7d4:	mov	x4, x25
  43a7d8:	ldr	x3, [sp, #112]
  43a7dc:	bl	4396a0 <nftw@plt+0x36b20>
  43a7e0:	mov	x26, x0
  43a7e4:	cbz	x0, 43a998 <nftw@plt+0x37e18>
  43a7e8:	ldr	x0, [x0, #16]
  43a7ec:	cbz	x0, 43a998 <nftw@plt+0x37e18>
  43a7f0:	add	x20, sp, #0x80
  43a7f4:	mov	x28, #0x0                   	// #0
  43a7f8:	add	x0, x20, #0x8
  43a7fc:	mov	x22, #0x0                   	// #0
  43a800:	stp	x23, x24, [sp, #64]
  43a804:	mov	w23, #0x2007                	// #8199
  43a808:	str	x0, [sp, #120]
  43a80c:	b	43a82c <nftw@plt+0x37cac>
  43a810:	cmp	w2, #0x3
  43a814:	b.ne	43a81c <nftw@plt+0x37c9c>  // b.any
  43a818:	cbz	x22, 43a940 <nftw@plt+0x37dc0>
  43a81c:	ldr	x0, [x26, #16]
  43a820:	add	x28, x28, #0x1
  43a824:	cmp	x0, x28
  43a828:	b.ls	43a8e0 <nftw@plt+0x37d60>  // b.plast
  43a82c:	ldr	x8, [x26, #24]
  43a830:	lsl	x24, x28, #3
  43a834:	ldp	x5, x6, [x27, #104]
  43a838:	add	x8, x8, x24
  43a83c:	ldp	w3, w2, [x19, #40]
  43a840:	mov	x1, x21
  43a844:	ldr	w4, [x19, #48]
  43a848:	ldr	w0, [x8, #4]
  43a84c:	ldr	x7, [x27, #8]
  43a850:	str	x20, [sp]
  43a854:	bl	439d48 <nftw@plt+0x371c8>
  43a858:	cbz	w0, 43a988 <nftw@plt+0x37e08>
  43a85c:	ldr	x0, [x26, #24]
  43a860:	add	x1, x0, x24
  43a864:	ldr	w2, [x0, x24]
  43a868:	cmp	w2, #0x47
  43a86c:	b.eq	43a8a0 <nftw@plt+0x37d20>  // b.none
  43a870:	b.ls	43a810 <nftw@plt+0x37c90>  // b.plast
  43a874:	cmp	w2, #0x6e
  43a878:	b.eq	43a884 <nftw@plt+0x37d04>  // b.none
  43a87c:	cmp	w2, w23
  43a880:	b.ne	43a81c <nftw@plt+0x37c9c>  // b.any
  43a884:	ldr	w0, [sp, #128]
  43a888:	cmp	w0, #0x4
  43a88c:	b.ne	43a81c <nftw@plt+0x37c9c>  // b.any
  43a890:	ldp	x19, x20, [sp, #32]
  43a894:	ldp	x23, x24, [sp, #64]
  43a898:	ldr	x22, [sp, #136]
  43a89c:	b	43a924 <nftw@plt+0x37da4>
  43a8a0:	ldr	w0, [x1, #4]
  43a8a4:	cmp	w0, #0x20
  43a8a8:	b.eq	43a81c <nftw@plt+0x37c9c>  // b.none
  43a8ac:	ldp	x4, x3, [sp, #112]
  43a8b0:	mov	x5, x25
  43a8b4:	mov	x2, x20
  43a8b8:	mov	x1, x19
  43a8bc:	mov	x0, x27
  43a8c0:	add	x28, x28, #0x1
  43a8c4:	bl	43a658 <nftw@plt+0x37ad8>
  43a8c8:	cmp	x0, #0x0
  43a8cc:	csel	x22, x22, x0, eq  // eq = none
  43a8d0:	ldr	x0, [x26, #16]
  43a8d4:	cmp	x0, x28
  43a8d8:	b.hi	43a82c <nftw@plt+0x37cac>  // b.pmore
  43a8dc:	nop
  43a8e0:	ldp	x19, x20, [sp, #32]
  43a8e4:	ldp	x23, x24, [sp, #64]
  43a8e8:	mov	x0, x22
  43a8ec:	ldp	x29, x30, [sp, #16]
  43a8f0:	ldp	x21, x22, [sp, #48]
  43a8f4:	ldp	x25, x26, [sp, #80]
  43a8f8:	ldp	x27, x28, [sp, #96]
  43a8fc:	add	sp, sp, #0xd0
  43a900:	ret
  43a904:	ldp	x19, x20, [sp, #32]
  43a908:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43a90c:	ldr	x3, [sp, #112]
  43a910:	mov	x0, x25
  43a914:	add	x1, x1, #0x228
  43a918:	mov	w2, #0x0                   	// #0
  43a91c:	mov	x22, #0x0                   	// #0
  43a920:	blr	x3
  43a924:	mov	x0, x22
  43a928:	ldp	x29, x30, [sp, #16]
  43a92c:	ldp	x21, x22, [sp, #48]
  43a930:	ldp	x25, x26, [sp, #80]
  43a934:	ldp	x27, x28, [sp, #96]
  43a938:	add	sp, sp, #0xd0
  43a93c:	ret
  43a940:	ldr	w0, [sp, #128]
  43a944:	ldr	x22, [sp, #136]
  43a948:	cmp	w0, #0x4
  43a94c:	csel	x22, x22, xzr, eq  // eq = none
  43a950:	b	43a81c <nftw@plt+0x37c9c>
  43a954:	mov	x0, x21
  43a958:	mov	x22, #0x0                   	// #0
  43a95c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43a960:	add	x1, x1, #0x258
  43a964:	bl	4393e0 <nftw@plt+0x36860>
  43a968:	mov	x0, x22
  43a96c:	ldp	x29, x30, [sp, #16]
  43a970:	ldp	x19, x20, [sp, #32]
  43a974:	ldp	x21, x22, [sp, #48]
  43a978:	ldp	x25, x26, [sp, #80]
  43a97c:	ldp	x27, x28, [sp, #96]
  43a980:	add	sp, sp, #0xd0
  43a984:	ret
  43a988:	mov	x22, #0x0                   	// #0
  43a98c:	ldp	x19, x20, [sp, #32]
  43a990:	ldp	x23, x24, [sp, #64]
  43a994:	b	43a8e8 <nftw@plt+0x37d68>
  43a998:	mov	x22, #0x0                   	// #0
  43a99c:	ldp	x19, x20, [sp, #32]
  43a9a0:	b	43a924 <nftw@plt+0x37da4>
  43a9a4:	nop
  43a9a8:	sub	sp, sp, #0x130
  43a9ac:	stp	x29, x30, [sp, #16]
  43a9b0:	add	x29, sp, #0x10
  43a9b4:	stp	x25, x26, [sp, #80]
  43a9b8:	mov	x25, x4
  43a9bc:	ldr	x4, [x4, #24]
  43a9c0:	stp	x6, x7, [sp, #120]
  43a9c4:	str	x0, [sp, #176]
  43a9c8:	str	x3, [sp, #192]
  43a9cc:	str	x5, [sp, #216]
  43a9d0:	cbz	x4, 43ac00 <nftw@plt+0x38080>
  43a9d4:	mov	x26, x2
  43a9d8:	stp	x23, x24, [sp, #64]
  43a9dc:	add	x24, sp, #0xf0
  43a9e0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  43a9e4:	add	x0, x0, #0xbd0
  43a9e8:	stp	x19, x20, [sp, #32]
  43a9ec:	stp	x21, x22, [sp, #48]
  43a9f0:	stp	x27, x28, [sp, #96]
  43a9f4:	mov	x28, x1
  43a9f8:	add	x1, x24, #0x8
  43a9fc:	stp	x1, x0, [sp, #224]
  43aa00:	mov	x0, x25
  43aa04:	bl	439b30 <nftw@plt+0x36fb0>
  43aa08:	mov	x2, x0
  43aa0c:	cbz	x0, 43abf0 <nftw@plt+0x38070>
  43aa10:	ldp	x0, x1, [x26, #88]
  43aa14:	ldp	x3, x4, [sp, #120]
  43aa18:	bl	4396a0 <nftw@plt+0x36b20>
  43aa1c:	mov	x27, x0
  43aa20:	cbz	x0, 43ac90 <nftw@plt+0x38110>
  43aa24:	ldr	w0, [x0, #8]
  43aa28:	cmp	w0, #0x2e
  43aa2c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  43aa30:	b.eq	43adb8 <nftw@plt+0x38238>  // b.none
  43aa34:	cmp	w0, #0x1d
  43aa38:	b.eq	43ae28 <nftw@plt+0x382a8>  // b.none
  43aa3c:	ldr	x0, [sp, #304]
  43aa40:	mov	w19, #0x0                   	// #0
  43aa44:	mov	x21, #0x0                   	// #0
  43aa48:	str	x0, [sp, #184]
  43aa4c:	ldr	x0, [x27, #16]
  43aa50:	str	x0, [sp, #136]
  43aa54:	cbz	x0, 43af88 <nftw@plt+0x38408>
  43aa58:	mov	x23, x26
  43aa5c:	mov	x22, #0x0                   	// #0
  43aa60:	mov	w20, #0x2007                	// #8199
  43aa64:	str	xzr, [sp, #136]
  43aa68:	str	wzr, [sp, #144]
  43aa6c:	str	wzr, [sp, #152]
  43aa70:	str	wzr, [sp, #164]
  43aa74:	str	xzr, [sp, #168]
  43aa78:	str	xzr, [sp, #200]
  43aa7c:	stp	wzr, wzr, [sp, #208]
  43aa80:	ldr	x0, [x27, #24]
  43aa84:	lsl	x26, x22, #3
  43aa88:	ldp	x5, x6, [x28, #104]
  43aa8c:	add	x0, x0, x26
  43aa90:	ldp	w3, w2, [x23, #40]
  43aa94:	mov	x1, x25
  43aa98:	ldr	w4, [x23, #48]
  43aa9c:	ldr	w0, [x0, #4]
  43aaa0:	ldr	x7, [x28, #8]
  43aaa4:	str	x24, [sp]
  43aaa8:	bl	439d48 <nftw@plt+0x371c8>
  43aaac:	cbz	w0, 43ac90 <nftw@plt+0x38110>
  43aab0:	ldr	w0, [x27, #8]
  43aab4:	cmp	w0, #0x11
  43aab8:	b.eq	43ac08 <nftw@plt+0x38088>  // b.none
  43aabc:	cbz	w19, 43ab00 <nftw@plt+0x37f80>
  43aac0:	ldr	x0, [x27, #24]
  43aac4:	add	x1, x0, x26
  43aac8:	ldr	w0, [x0, x26]
  43aacc:	cmp	w0, #0x55
  43aad0:	b.eq	43ad58 <nftw@plt+0x381d8>  // b.none
  43aad4:	b.hi	43acdc <nftw@plt+0x3815c>  // b.pmore
  43aad8:	cmp	w0, #0x12
  43aadc:	b.eq	43ad90 <nftw@plt+0x38210>  // b.none
  43aae0:	b.ls	43acb4 <nftw@plt+0x38134>  // b.plast
  43aae4:	cmp	w0, #0x31
  43aae8:	b.eq	43aaf4 <nftw@plt+0x37f74>  // b.none
  43aaec:	cmp	w0, #0x47
  43aaf0:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43aaf4:	ldr	w0, [sp, #144]
  43aaf8:	cbz	w0, 43adf4 <nftw@plt+0x38274>
  43aafc:	nop
  43ab00:	ldr	x0, [x27, #16]
  43ab04:	add	x22, x22, #0x1
  43ab08:	cmp	x0, x22
  43ab0c:	b.hi	43aa80 <nftw@plt+0x37f00>  // b.pmore
  43ab10:	mov	x26, x23
  43ab14:	cbz	w19, 43ac54 <nftw@plt+0x380d4>
  43ab18:	ldr	x0, [x21]
  43ab1c:	cbz	x0, 43ac40 <nftw@plt+0x380c0>
  43ab20:	ldr	w0, [sp, #152]
  43ab24:	cbnz	w0, 43ae60 <nftw@plt+0x382e0>
  43ab28:	ldr	w1, [sp, #164]
  43ab2c:	ldr	w0, [sp, #208]
  43ab30:	tst	w0, w1
  43ab34:	b.eq	43ac40 <nftw@plt+0x380c0>  // b.none
  43ab38:	ldr	w0, [sp, #212]
  43ab3c:	mov	x2, x21
  43ab40:	ldr	x3, [sp, #200]
  43ab44:	cmp	w0, #0x0
  43ab48:	ldr	x0, [sp, #136]
  43ab4c:	ldp	x5, x6, [sp, #120]
  43ab50:	add	x4, x0, x3
  43ab54:	csel	x4, x4, x0, ne  // ne = any
  43ab58:	ldr	x1, [x28, #16]
  43ab5c:	ldr	x0, [sp, #176]
  43ab60:	ldr	x7, [sp, #184]
  43ab64:	bl	439818 <nftw@plt+0x36c98>
  43ab68:	cbz	w0, 43ac90 <nftw@plt+0x38110>
  43ab6c:	ldr	w0, [x27, #12]
  43ab70:	cbz	w0, 43abe8 <nftw@plt+0x38068>
  43ab74:	ldp	x6, x7, [sp, #120]
  43ab78:	mov	x4, x25
  43ab7c:	ldr	x0, [sp, #304]
  43ab80:	stp	x0, x24, [sp]
  43ab84:	mov	x2, x26
  43ab88:	ldr	x0, [sp, #176]
  43ab8c:	stp	xzr, xzr, [x24]
  43ab90:	mov	x1, x28
  43ab94:	ldr	x3, [sp, #192]
  43ab98:	stp	xzr, xzr, [x24, #16]
  43ab9c:	ldr	x5, [sp, #216]
  43aba0:	bl	43a9a8 <nftw@plt+0x37e28>
  43aba4:	cbz	w0, 43ac90 <nftw@plt+0x38110>
  43aba8:	ldr	x0, [sp, #264]
  43abac:	cbz	x0, 43abe8 <nftw@plt+0x38068>
  43abb0:	ldp	x2, x3, [sp, #120]
  43abb4:	mov	x1, x24
  43abb8:	ldr	x0, [sp, #176]
  43abbc:	bl	435e10 <nftw@plt+0x33290>
  43abc0:	cbz	w0, 43ac90 <nftw@plt+0x38110>
  43abc4:	ldr	x1, [sp, #264]
  43abc8:	adrp	x3, 43c000 <nftw@plt+0x39480>
  43abcc:	ldr	x19, [sp, #240]
  43abd0:	add	x3, x3, #0x1e8
  43abd4:	mov	x2, #0x18                  	// #24
  43abd8:	mov	x0, x19
  43abdc:	bl	43cb10 <nftw@plt+0x39f90>
  43abe0:	ldr	x0, [sp, #264]
  43abe4:	stp	x19, x0, [x21, #24]
  43abe8:	ldr	x0, [x25, #24]
  43abec:	cbnz	x0, 43aa00 <nftw@plt+0x37e80>
  43abf0:	ldp	x19, x20, [sp, #32]
  43abf4:	ldp	x21, x22, [sp, #48]
  43abf8:	ldp	x23, x24, [sp, #64]
  43abfc:	ldp	x27, x28, [sp, #96]
  43ac00:	mov	w0, #0x1                   	// #1
  43ac04:	b	43aca4 <nftw@plt+0x38124>
  43ac08:	ldr	x0, [x27, #24]
  43ac0c:	ldr	w0, [x0, x26]
  43ac10:	cmp	w0, #0x11
  43ac14:	b.ne	43aabc <nftw@plt+0x37f3c>  // b.any
  43ac18:	ldr	w0, [sp, #240]
  43ac1c:	cmp	w0, #0x1
  43ac20:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ac24:	ldr	x0, [sp, #248]
  43ac28:	str	x0, [sp, #192]
  43ac2c:	cbz	w19, 43ab00 <nftw@plt+0x37f80>
  43ac30:	str	x0, [sp, #200]
  43ac34:	mov	w0, #0x1                   	// #1
  43ac38:	str	w0, [sp, #208]
  43ac3c:	b	43ab00 <nftw@plt+0x37f80>
  43ac40:	ldp	x3, x4, [sp, #120]
  43ac44:	mov	x1, x21
  43ac48:	ldr	x0, [sp, #176]
  43ac4c:	mov	x2, #0x28                  	// #40
  43ac50:	bl	435a90 <nftw@plt+0x32f10>
  43ac54:	ldr	w0, [x27, #12]
  43ac58:	cbz	w0, 43abe8 <nftw@plt+0x38068>
  43ac5c:	ldp	x6, x7, [sp, #120]
  43ac60:	mov	x4, x25
  43ac64:	ldr	x0, [sp, #304]
  43ac68:	str	x0, [sp]
  43ac6c:	ldr	x0, [sp, #312]
  43ac70:	str	x0, [sp, #8]
  43ac74:	ldr	x0, [sp, #176]
  43ac78:	mov	x2, x26
  43ac7c:	ldr	x3, [sp, #192]
  43ac80:	mov	x1, x28
  43ac84:	ldr	x5, [sp, #216]
  43ac88:	bl	43a9a8 <nftw@plt+0x37e28>
  43ac8c:	cbnz	w0, 43abe8 <nftw@plt+0x38068>
  43ac90:	ldp	x19, x20, [sp, #32]
  43ac94:	mov	w0, #0x0                   	// #0
  43ac98:	ldp	x21, x22, [sp, #48]
  43ac9c:	ldp	x23, x24, [sp, #64]
  43aca0:	ldp	x27, x28, [sp, #96]
  43aca4:	ldp	x29, x30, [sp, #16]
  43aca8:	ldp	x25, x26, [sp, #80]
  43acac:	add	sp, sp, #0x130
  43acb0:	ret
  43acb4:	cmp	w0, #0x3
  43acb8:	b.ne	43ad3c <nftw@plt+0x381bc>  // b.any
  43acbc:	ldr	x0, [x21]
  43acc0:	cbnz	x0, 43ab00 <nftw@plt+0x37f80>
  43acc4:	ldr	w0, [sp, #240]
  43acc8:	cmp	w0, #0x4
  43accc:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43acd0:	ldr	x0, [sp, #248]
  43acd4:	str	x0, [x21]
  43acd8:	b	43ab00 <nftw@plt+0x37f80>
  43acdc:	cmp	w0, #0x59
  43ace0:	b.eq	43ad78 <nftw@plt+0x381f8>  // b.none
  43ace4:	b.ls	43ad14 <nftw@plt+0x38194>  // b.plast
  43ace8:	cmp	w0, #0x6e
  43acec:	b.eq	43acf8 <nftw@plt+0x38178>  // b.none
  43acf0:	cmp	w0, w20
  43acf4:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43acf8:	ldr	w0, [sp, #240]
  43acfc:	cmp	w0, #0x4
  43ad00:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ad04:	ldr	x0, [sp, #248]
  43ad08:	str	x0, [x21]
  43ad0c:	str	w19, [sp, #144]
  43ad10:	b	43ab00 <nftw@plt+0x37f80>
  43ad14:	cmp	w0, #0x58
  43ad18:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ad1c:	ldr	w0, [sp, #240]
  43ad20:	cmp	w0, #0x2
  43ad24:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ad28:	ldr	x0, [sp, #248]
  43ad2c:	cbnz	x0, 43ae34 <nftw@plt+0x382b4>
  43ad30:	ldr	x0, [sp, #232]
  43ad34:	str	x0, [x21, #8]
  43ad38:	b	43ab00 <nftw@plt+0x37f80>
  43ad3c:	cmp	w0, #0x11
  43ad40:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ad44:	ldr	w0, [sp, #240]
  43ad48:	cmp	w0, #0x1
  43ad4c:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ad50:	ldr	x0, [sp, #248]
  43ad54:	b	43ac30 <nftw@plt+0x380b0>
  43ad58:	ldr	w0, [sp, #240]
  43ad5c:	cmp	w0, #0x2
  43ad60:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43ad64:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ad68:	ldr	x0, [sp, #248]
  43ad6c:	str	w19, [sp, #152]
  43ad70:	str	x0, [sp, #168]
  43ad74:	b	43ab00 <nftw@plt+0x37f80>
  43ad78:	ldr	w0, [sp, #240]
  43ad7c:	cmp	w0, #0x2
  43ad80:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ad84:	ldr	x0, [sp, #248]
  43ad88:	str	w0, [x21, #16]
  43ad8c:	b	43ab00 <nftw@plt+0x37f80>
  43ad90:	ldr	w0, [sp, #240]
  43ad94:	cmp	w0, #0x1
  43ad98:	b.eq	43ada8 <nftw@plt+0x38228>  // b.none
  43ad9c:	cmp	w0, #0x2
  43ada0:	b.ne	43ab00 <nftw@plt+0x37f80>  // b.any
  43ada4:	str	w19, [sp, #212]
  43ada8:	ldr	x0, [sp, #248]
  43adac:	str	x0, [sp, #136]
  43adb0:	str	w19, [sp, #164]
  43adb4:	b	43ab00 <nftw@plt+0x37f80>
  43adb8:	cmp	w0, #0x1d
  43adbc:	ldp	x0, x1, [sp, #304]
  43adc0:	csel	x0, x0, x1, ne  // ne = any
  43adc4:	str	x0, [sp, #184]
  43adc8:	ldp	x2, x3, [sp, #120]
  43adcc:	mov	x1, #0x28                  	// #40
  43add0:	ldr	x0, [sp, #176]
  43add4:	bl	435b68 <nftw@plt+0x32fe8>
  43add8:	mov	x21, x0
  43addc:	cbz	x0, 43ac90 <nftw@plt+0x38110>
  43ade0:	mov	w19, #0x1                   	// #1
  43ade4:	stp	xzr, xzr, [x0]
  43ade8:	stp	xzr, xzr, [x0, #16]
  43adec:	str	xzr, [x0, #32]
  43adf0:	b	43aa4c <nftw@plt+0x37ecc>
  43adf4:	ldr	w0, [x1, #4]
  43adf8:	cmp	w0, #0x20
  43adfc:	b.eq	43afbc <nftw@plt+0x3843c>  // b.none
  43ae00:	ldp	x4, x5, [sp, #120]
  43ae04:	mov	x2, x24
  43ae08:	ldr	x3, [sp, #224]
  43ae0c:	mov	x1, x23
  43ae10:	mov	x0, x28
  43ae14:	bl	43a658 <nftw@plt+0x37ad8>
  43ae18:	str	wzr, [sp, #144]
  43ae1c:	cbz	x0, 43ab00 <nftw@plt+0x37f80>
  43ae20:	str	x0, [x21]
  43ae24:	b	43ab00 <nftw@plt+0x37f80>
  43ae28:	ldr	x0, [sp, #312]
  43ae2c:	str	x0, [sp, #184]
  43ae30:	b	43adc8 <nftw@plt+0x38248>
  43ae34:	ldr	x1, [sp, #216]
  43ae38:	sub	x2, x0, #0x1
  43ae3c:	ldr	x1, [x1, #48]
  43ae40:	cmp	x2, x1
  43ae44:	b.cs	43afd8 <nftw@plt+0x38458>  // b.hs, b.nlast
  43ae48:	ldr	x1, [sp, #216]
  43ae4c:	ldr	x1, [x1, #56]
  43ae50:	add	x0, x1, x0, lsl #3
  43ae54:	ldur	x0, [x0, #-8]
  43ae58:	str	x0, [x21, #8]
  43ae5c:	b	43ab00 <nftw@plt+0x37f80>
  43ae60:	ldr	x0, [x28, #96]
  43ae64:	ldr	x1, [sp, #168]
  43ae68:	cmp	x0, x1
  43ae6c:	b.ls	43afa4 <nftw@plt+0x38424>  // b.plast
  43ae70:	ldr	x3, [x28, #88]
  43ae74:	str	x25, [sp, #152]
  43ae78:	ldr	x5, [sp, #168]
  43ae7c:	stp	x28, x27, [sp, #136]
  43ae80:	ldr	w4, [x28, #120]
  43ae84:	sub	x1, x0, x5
  43ae88:	add	x0, x3, x5
  43ae8c:	stp	x0, x1, [sp, #256]
  43ae90:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43ae94:	mov	x23, #0xffffffff            	// #4294967295
  43ae98:	ldp	x0, x1, [sp, #120]
  43ae9c:	add	x2, x2, #0x7a8
  43aea0:	ldr	x25, [sp, #176]
  43aea4:	mov	x20, #0xffff                	// #65535
  43aea8:	ldr	x19, [sp, #192]
  43aeac:	stp	x2, x3, [sp, #240]
  43aeb0:	mov	x27, x0
  43aeb4:	mov	x28, x1
  43aeb8:	str	w4, [sp, #272]
  43aebc:	stp	x0, x1, [sp, #280]
  43aec0:	str	wzr, [sp, #296]
  43aec4:	nop
  43aec8:	ldr	w1, [x26, #48]
  43aecc:	mov	x0, x24
  43aed0:	bl	439aa8 <nftw@plt+0x36f28>
  43aed4:	mov	x22, x0
  43aed8:	ldr	w1, [x26, #48]
  43aedc:	mov	x0, x24
  43aee0:	bl	439aa8 <nftw@plt+0x36f28>
  43aee4:	orr	x1, x22, x0
  43aee8:	cbz	x1, 43afc4 <nftw@plt+0x38444>
  43aeec:	ldr	w1, [x26, #48]
  43aef0:	cmp	w1, #0x4
  43aef4:	b.eq	43af70 <nftw@plt+0x383f0>  // b.none
  43aef8:	b.gt	43af28 <nftw@plt+0x383a8>
  43aefc:	cmp	w1, #0x1
  43af00:	b.eq	43af7c <nftw@plt+0x383fc>  // b.none
  43af04:	cmp	w1, #0x2
  43af08:	b.ne	43af40 <nftw@plt+0x383c0>  // b.any
  43af0c:	cmp	x22, x20
  43af10:	cset	w1, eq  // eq = none
  43af14:	cbz	w1, 43af40 <nftw@plt+0x383c0>
  43af18:	mov	x19, x0
  43af1c:	ldr	w0, [sp, #296]
  43af20:	cbz	w0, 43aec8 <nftw@plt+0x38348>
  43af24:	b	43ac90 <nftw@plt+0x38110>
  43af28:	cmp	w1, #0x8
  43af2c:	b.ne	43af40 <nftw@plt+0x383c0>  // b.any
  43af30:	cmn	x22, #0x1
  43af34:	cset	w1, eq  // eq = none
  43af38:	cbnz	w1, 43af18 <nftw@plt+0x38398>
  43af3c:	nop
  43af40:	ldr	x1, [sp, #136]
  43af44:	add	x4, x0, x19
  43af48:	ldr	x7, [sp, #184]
  43af4c:	add	x3, x22, x19
  43af50:	ldr	x1, [x1, #16]
  43af54:	mov	x6, x28
  43af58:	mov	x5, x27
  43af5c:	mov	x2, x21
  43af60:	mov	x0, x25
  43af64:	bl	439818 <nftw@plt+0x36c98>
  43af68:	cbnz	w0, 43af1c <nftw@plt+0x3839c>
  43af6c:	b	43ac90 <nftw@plt+0x38110>
  43af70:	cmp	x22, x23
  43af74:	cset	w1, eq  // eq = none
  43af78:	b	43af14 <nftw@plt+0x38394>
  43af7c:	cmp	x22, #0xff
  43af80:	cset	w1, eq  // eq = none
  43af84:	b	43af14 <nftw@plt+0x38394>
  43af88:	str	wzr, [sp, #152]
  43af8c:	str	wzr, [sp, #164]
  43af90:	str	xzr, [sp, #168]
  43af94:	str	xzr, [sp, #200]
  43af98:	stp	wzr, wzr, [sp, #208]
  43af9c:	cbz	w19, 43ac54 <nftw@plt+0x380d4>
  43afa0:	b	43ab18 <nftw@plt+0x37f98>
  43afa4:	ldp	x3, x0, [sp, #120]
  43afa8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43afac:	mov	w2, #0x0                   	// #0
  43afb0:	add	x1, x1, #0x2c0
  43afb4:	blr	x3
  43afb8:	b	43ac90 <nftw@plt+0x38110>
  43afbc:	str	wzr, [sp, #144]
  43afc0:	b	43ab00 <nftw@plt+0x37f80>
  43afc4:	ldr	w0, [sp, #296]
  43afc8:	ldp	x28, x27, [sp, #136]
  43afcc:	ldr	x25, [sp, #152]
  43afd0:	cbz	w0, 43ab6c <nftw@plt+0x37fec>
  43afd4:	b	43ac90 <nftw@plt+0x38110>
  43afd8:	mov	x0, x25
  43afdc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43afe0:	add	x1, x1, #0x288
  43afe4:	bl	4393e0 <nftw@plt+0x36860>
  43afe8:	b	43ac90 <nftw@plt+0x38110>
  43afec:	nop
  43aff0:	sub	sp, sp, #0x1d0
  43aff4:	mov	x7, x6
  43aff8:	stp	x29, x30, [sp, #16]
  43affc:	add	x29, sp, #0x10
  43b000:	stp	x23, x24, [sp, #64]
  43b004:	mov	x23, x1
  43b008:	mov	w1, #0x1                   	// #1
  43b00c:	stp	x3, x6, [sp, #120]
  43b010:	ldr	x6, [x23, #32]
  43b014:	str	w1, [x7]
  43b018:	str	x4, [sp, #136]
  43b01c:	cbz	x6, 43b2bc <nftw@plt+0x3873c>
  43b020:	ldr	x4, [x23, #24]
  43b024:	stp	x19, x20, [sp, #32]
  43b028:	mov	x19, x0
  43b02c:	stp	x21, x22, [sp, #48]
  43b030:	mov	x22, x5
  43b034:	mov	x21, x2
  43b038:	mov	x5, x6
  43b03c:	mov	x3, #0x0                   	// #0
  43b040:	stp	x27, x28, [sp, #96]
  43b044:	add	x0, x5, x3
  43b048:	cmp	x5, x3
  43b04c:	and	x1, x0, #0xfffffffffffffffe
  43b050:	b.ls	43b2b0 <nftw@plt+0x38730>  // b.plast
  43b054:	lsr	x0, x0, #1
  43b058:	add	x1, x1, x0
  43b05c:	lsl	x2, x1, #3
  43b060:	ldr	x1, [x4, x1, lsl #3]
  43b064:	add	x24, x4, x2
  43b068:	cmp	x1, x21
  43b06c:	b.hi	43b29c <nftw@plt+0x3871c>  // b.pmore
  43b070:	ldr	x1, [x24, #8]
  43b074:	add	x3, x0, #0x1
  43b078:	cmp	x1, x21
  43b07c:	b.ls	43b044 <nftw@plt+0x384c4>  // b.plast
  43b080:	asr	x2, x2, #3
  43b084:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43b088:	movk	x0, #0xaaab
  43b08c:	mov	x1, x0
  43b090:	mul	x2, x2, x0
  43b094:	add	x2, x2, #0x1
  43b098:	cmp	x6, x2
  43b09c:	b.hi	43b0cc <nftw@plt+0x3854c>  // b.pmore
  43b0a0:	b	43b0d8 <nftw@plt+0x38558>
  43b0a4:	ldr	x0, [x24, #32]
  43b0a8:	cmp	x0, x21
  43b0ac:	b.ls	43b0d8 <nftw@plt+0x38558>  // b.plast
  43b0b0:	add	x24, x24, #0x18
  43b0b4:	sub	x0, x24, x4
  43b0b8:	asr	x0, x0, #3
  43b0bc:	mul	x0, x0, x1
  43b0c0:	add	x0, x0, #0x1
  43b0c4:	cmp	x6, x0
  43b0c8:	b.ls	43b0d8 <nftw@plt+0x38558>  // b.plast
  43b0cc:	ldr	x0, [x24, #24]
  43b0d0:	cmp	x0, x21
  43b0d4:	b.ls	43b0a4 <nftw@plt+0x38524>  // b.plast
  43b0d8:	ldr	x27, [x24, #16]
  43b0dc:	cmp	x4, x24
  43b0e0:	ldr	w1, [x19, #8]
  43b0e4:	ldr	x20, [x27, #104]
  43b0e8:	b.cc	43b110 <nftw@plt+0x38590>  // b.lo, b.ul, b.last
  43b0ec:	b	43b140 <nftw@plt+0x385c0>
  43b0f0:	cmn	x20, #0x1
  43b0f4:	b.ne	43b140 <nftw@plt+0x385c0>  // b.any
  43b0f8:	ldur	x27, [x24, #-8]
  43b0fc:	sub	x24, x24, #0x18
  43b100:	ldr	x0, [x23, #24]
  43b104:	ldr	x20, [x27, #104]
  43b108:	cmp	x0, x24
  43b10c:	b.cs	43b140 <nftw@plt+0x385c0>  // b.hs, b.nlast
  43b110:	ldur	x0, [x24, #-24]
  43b114:	cmp	x0, x21
  43b118:	b.hi	43b140 <nftw@plt+0x385c0>  // b.pmore
  43b11c:	ldur	x0, [x24, #-16]
  43b120:	cmp	x0, x21
  43b124:	b.ls	43b140 <nftw@plt+0x385c0>  // b.plast
  43b128:	cbz	w1, 43b0f0 <nftw@plt+0x38570>
  43b12c:	add	x0, x27, #0x68
  43b130:	ldar	x20, [x0]
  43b134:	ldr	w1, [x19, #8]
  43b138:	cmn	x20, #0x1
  43b13c:	b.eq	43b0f8 <nftw@plt+0x38578>  // b.none
  43b140:	cbnz	w1, 43b338 <nftw@plt+0x387b8>
  43b144:	cbz	x20, 43b344 <nftw@plt+0x387c4>
  43b148:	cmn	x20, #0x1
  43b14c:	b.eq	43b408 <nftw@plt+0x38888>  // b.none
  43b150:	ldr	x7, [x24, #16]
  43b154:	mov	x2, #0x0                   	// #0
  43b158:	ldr	x3, [x7, #112]
  43b15c:	add	x0, x2, x3
  43b160:	cmp	x2, x3
  43b164:	and	x1, x0, #0xfffffffffffffffe
  43b168:	b.cs	43b2ec <nftw@plt+0x3876c>  // b.hs, b.nlast
  43b16c:	lsr	x0, x0, #1
  43b170:	add	x1, x1, x0
  43b174:	add	x4, x20, x1, lsl #3
  43b178:	ldr	x1, [x20, x1, lsl #3]
  43b17c:	cmp	x1, x21
  43b180:	b.hi	43b2d8 <nftw@plt+0x38758>  // b.pmore
  43b184:	ldr	x1, [x4, #24]
  43b188:	add	x2, x0, #0x1
  43b18c:	cmp	x1, x21
  43b190:	b.ls	43b15c <nftw@plt+0x385dc>  // b.plast
  43b194:	ldr	x6, [x7, #128]
  43b198:	ldr	w10, [x4, #16]
  43b19c:	ldr	x8, [x4, #8]
  43b1a0:	cbz	x6, 43b320 <nftw@plt+0x387a0>
  43b1a4:	ldr	x4, [x7, #120]
  43b1a8:	mov	x5, x6
  43b1ac:	mov	x3, #0x0                   	// #0
  43b1b0:	add	x0, x5, x3
  43b1b4:	cmp	x5, x3
  43b1b8:	and	x1, x0, #0xfffffffffffffffe
  43b1bc:	b.ls	43b320 <nftw@plt+0x387a0>  // b.plast
  43b1c0:	lsr	x0, x0, #1
  43b1c4:	add	x1, x1, x0
  43b1c8:	lsl	x2, x1, #3
  43b1cc:	ldr	x7, [x4, x1, lsl #3]
  43b1d0:	add	x1, x4, x2
  43b1d4:	cmp	x7, x21
  43b1d8:	b.hi	43b30c <nftw@plt+0x3878c>  // b.pmore
  43b1dc:	ldr	x7, [x1, #8]
  43b1e0:	add	x3, x0, #0x1
  43b1e4:	cmp	x7, x21
  43b1e8:	b.ls	43b1b0 <nftw@plt+0x38630>  // b.plast
  43b1ec:	asr	x0, x2, #3
  43b1f0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43b1f4:	movk	x2, #0xaaab
  43b1f8:	mov	x3, x2
  43b1fc:	mul	x0, x0, x2
  43b200:	add	x0, x0, #0x1
  43b204:	cmp	x6, x0
  43b208:	b.hi	43b238 <nftw@plt+0x386b8>  // b.pmore
  43b20c:	b	43b244 <nftw@plt+0x386c4>
  43b210:	ldr	x0, [x1, #32]
  43b214:	cmp	x0, x21
  43b218:	b.ls	43b244 <nftw@plt+0x386c4>  // b.plast
  43b21c:	add	x1, x1, #0x18
  43b220:	sub	x0, x1, x4
  43b224:	asr	x0, x0, #3
  43b228:	mul	x0, x0, x3
  43b22c:	add	x0, x0, #0x1
  43b230:	cmp	x6, x0
  43b234:	b.ls	43b244 <nftw@plt+0x386c4>  // b.plast
  43b238:	ldr	x0, [x1, #24]
  43b23c:	cmp	x0, x21
  43b240:	b.ls	43b210 <nftw@plt+0x38690>  // b.plast
  43b244:	ldr	x19, [x1, #16]
  43b248:	add	x6, sp, #0x150
  43b24c:	ldr	x20, [sp, #120]
  43b250:	add	x5, sp, #0x190
  43b254:	ldp	x1, x2, [x19, #24]
  43b258:	mov	x4, x22
  43b25c:	mov	x0, x21
  43b260:	mov	x3, x20
  43b264:	str	w10, [sp, #336]
  43b268:	str	x8, [sp, #400]
  43b26c:	bl	439540 <nftw@plt+0x369c0>
  43b270:	cbnz	w0, 43b560 <nftw@plt+0x389e0>
  43b274:	ldr	w3, [sp, #336]
  43b278:	mov	x1, x21
  43b27c:	ldr	x4, [x19]
  43b280:	mov	x0, x22
  43b284:	ldr	x2, [sp, #400]
  43b288:	blr	x20
  43b28c:	ldp	x19, x20, [sp, #32]
  43b290:	ldp	x21, x22, [sp, #48]
  43b294:	ldp	x27, x28, [sp, #96]
  43b298:	b	43b2c8 <nftw@plt+0x38748>
  43b29c:	mov	x5, x0
  43b2a0:	add	x0, x5, x3
  43b2a4:	cmp	x5, x3
  43b2a8:	and	x1, x0, #0xfffffffffffffffe
  43b2ac:	b.hi	43b054 <nftw@plt+0x384d4>  // b.pmore
  43b2b0:	ldp	x19, x20, [sp, #32]
  43b2b4:	ldp	x21, x22, [sp, #48]
  43b2b8:	ldp	x27, x28, [sp, #96]
  43b2bc:	mov	w0, #0x0                   	// #0
  43b2c0:	ldr	x1, [sp, #128]
  43b2c4:	str	wzr, [x1]
  43b2c8:	ldp	x29, x30, [sp, #16]
  43b2cc:	ldp	x23, x24, [sp, #64]
  43b2d0:	add	sp, sp, #0x1d0
  43b2d4:	ret
  43b2d8:	mov	x3, x0
  43b2dc:	add	x0, x2, x3
  43b2e0:	cmp	x2, x3
  43b2e4:	and	x1, x0, #0xfffffffffffffffe
  43b2e8:	b.cc	43b16c <nftw@plt+0x385ec>  // b.lo, b.ul, b.last
  43b2ec:	ldr	x20, [x7, #80]
  43b2f0:	cbz	x20, 43b440 <nftw@plt+0x388c0>
  43b2f4:	mov	x2, x20
  43b2f8:	mov	x1, x21
  43b2fc:	mov	x0, x22
  43b300:	mov	x4, #0x0                   	// #0
  43b304:	mov	w3, #0x0                   	// #0
  43b308:	b	43b41c <nftw@plt+0x3889c>
  43b30c:	mov	x5, x0
  43b310:	add	x0, x5, x3
  43b314:	cmp	x5, x3
  43b318:	and	x1, x0, #0xfffffffffffffffe
  43b31c:	b.hi	43b1c0 <nftw@plt+0x38640>  // b.pmore
  43b320:	mov	w3, w10
  43b324:	mov	x2, x8
  43b328:	mov	x1, x21
  43b32c:	mov	x0, x22
  43b330:	mov	x4, #0x0                   	// #0
  43b334:	b	43b41c <nftw@plt+0x3889c>
  43b338:	add	x0, x27, #0x68
  43b33c:	ldar	x20, [x0]
  43b340:	cbnz	x20, 43b148 <nftw@plt+0x385c8>
  43b344:	ldr	x0, [x24, #16]
  43b348:	stp	xzr, xzr, [sp, #272]
  43b34c:	stp	xzr, xzr, [sp, #288]
  43b350:	stp	xzr, xzr, [sp, #304]
  43b354:	stp	xzr, xzr, [sp, #320]
  43b358:	str	x0, [sp, #160]
  43b35c:	ldr	x0, [x0, #56]
  43b360:	stp	x25, x26, [sp, #80]
  43b364:	ldr	x1, [x23, #80]
  43b368:	stp	xzr, xzr, [sp, #240]
  43b36c:	stp	xzr, xzr, [sp, #256]
  43b370:	cmp	x0, x1
  43b374:	b.cc	43b4d4 <nftw@plt+0x38954>  // b.lo, b.ul, b.last
  43b378:	add	x3, sp, #0xf0
  43b37c:	str	x3, [sp, #144]
  43b380:	ldr	x3, [sp, #136]
  43b384:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43b388:	mov	x0, x22
  43b38c:	add	x1, x1, #0x2e8
  43b390:	mov	w2, #0x0                   	// #0
  43b394:	blr	x3
  43b398:	ldp	x5, x4, [sp, #248]
  43b39c:	mov	x3, x22
  43b3a0:	ldp	x20, x1, [sp, #136]
  43b3a4:	mov	x0, x19
  43b3a8:	mov	x25, #0x0                   	// #0
  43b3ac:	mov	x28, #0x0                   	// #0
  43b3b0:	add	x4, x4, x5
  43b3b4:	stp	xzr, x4, [sp, #248]
  43b3b8:	mov	x2, x20
  43b3bc:	bl	435e10 <nftw@plt+0x33290>
  43b3c0:	mov	x2, x20
  43b3c4:	add	x1, sp, #0x110
  43b3c8:	mov	x3, x22
  43b3cc:	mov	x0, x19
  43b3d0:	bl	439438 <nftw@plt+0x368b8>
  43b3d4:	mov	x20, #0xffffffffffffffff    	// #-1
  43b3d8:	mov	w1, #0x0                   	// #0
  43b3dc:	str	xzr, [sp, #144]
  43b3e0:	ldr	w0, [x19, #8]
  43b3e4:	cbnz	w0, 43b570 <nftw@plt+0x389f0>
  43b3e8:	ldr	x0, [sp, #144]
  43b3ec:	stp	x20, x0, [x27, #104]
  43b3f0:	stp	x25, x28, [x27, #120]
  43b3f4:	cmn	x20, #0x1
  43b3f8:	b.eq	43b598 <nftw@plt+0x38a18>  // b.none
  43b3fc:	ldp	x25, x26, [sp, #80]
  43b400:	b	43b150 <nftw@plt+0x385d0>
  43b404:	ldp	x25, x26, [sp, #80]
  43b408:	mov	x1, x21
  43b40c:	mov	x0, x22
  43b410:	mov	x4, #0x0                   	// #0
  43b414:	mov	w3, #0x0                   	// #0
  43b418:	mov	x2, #0x0                   	// #0
  43b41c:	ldr	x5, [sp, #120]
  43b420:	blr	x5
  43b424:	ldp	x29, x30, [sp, #16]
  43b428:	ldp	x19, x20, [sp, #32]
  43b42c:	ldp	x21, x22, [sp, #48]
  43b430:	ldp	x23, x24, [sp, #64]
  43b434:	ldp	x27, x28, [sp, #96]
  43b438:	add	sp, sp, #0x1d0
  43b43c:	ret
  43b440:	ldr	x20, [x7, #64]
  43b444:	cbz	x20, 43b4cc <nftw@plt+0x3894c>
  43b448:	ldrb	w0, [x20]
  43b44c:	cmp	w0, #0x2f
  43b450:	b.eq	43b4cc <nftw@plt+0x3894c>  // b.none
  43b454:	stp	x25, x26, [sp, #80]
  43b458:	ldr	x26, [x7, #72]
  43b45c:	cbz	x26, 43b77c <nftw@plt+0x38bfc>
  43b460:	mov	x0, x20
  43b464:	bl	4024f0 <strlen@plt>
  43b468:	mov	x25, x0
  43b46c:	mov	x0, x26
  43b470:	bl	4024f0 <strlen@plt>
  43b474:	mov	x23, x0
  43b478:	ldr	x2, [sp, #136]
  43b47c:	add	x1, x25, x23
  43b480:	mov	x0, x19
  43b484:	mov	x3, x22
  43b488:	add	x1, x1, #0x2
  43b48c:	bl	435b68 <nftw@plt+0x32fe8>
  43b490:	mov	x19, x0
  43b494:	cbz	x0, 43c094 <nftw@plt+0x39514>
  43b498:	mov	x1, x26
  43b49c:	mov	x2, x23
  43b4a0:	bl	402490 <memcpy@plt>
  43b4a4:	mov	w3, #0x2f                  	// #47
  43b4a8:	strb	w3, [x19, x23]
  43b4ac:	add	x0, x23, #0x1
  43b4b0:	add	x2, x25, #0x1
  43b4b4:	mov	x1, x20
  43b4b8:	add	x0, x19, x0
  43b4bc:	bl	402490 <memcpy@plt>
  43b4c0:	mov	x20, x19
  43b4c4:	ldp	x25, x26, [sp, #80]
  43b4c8:	ldr	x7, [x24, #16]
  43b4cc:	str	x20, [x7, #80]
  43b4d0:	b	43b2f4 <nftw@plt+0x38774>
  43b4d4:	ldr	x4, [x23, #72]
  43b4d8:	sub	x2, x1, x0
  43b4dc:	ldr	w5, [x23, #120]
  43b4e0:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43b4e4:	add	x1, x4, x0
  43b4e8:	stp	x1, x2, [sp, #352]
  43b4ec:	add	x3, x3, #0x788
  43b4f0:	ldr	x1, [sp, #136]
  43b4f4:	add	x25, sp, #0x150
  43b4f8:	mov	x0, x25
  43b4fc:	stp	x3, x4, [sp, #336]
  43b500:	str	w5, [sp, #368]
  43b504:	str	x1, [sp, #376]
  43b508:	str	x22, [sp, #384]
  43b50c:	str	wzr, [sp, #392]
  43b510:	bl	439930 <nftw@plt+0x36db0>
  43b514:	mov	x1, #0xffffffff            	// #4294967295
  43b518:	mov	w2, w0
  43b51c:	cmp	x1, w0, uxtw
  43b520:	mov	x0, x25
  43b524:	b.eq	43b798 <nftw@plt+0x38c18>  // b.none
  43b528:	str	x2, [sp, #360]
  43b52c:	bl	4399f0 <nftw@plt+0x36e70>
  43b530:	and	w0, w0, #0xffff
  43b534:	str	w0, [sp, #272]
  43b538:	sub	w0, w0, #0x2
  43b53c:	cmp	w0, #0x2
  43b540:	b.ls	43b5cc <nftw@plt+0x38a4c>  // b.plast
  43b544:	add	x2, sp, #0xf0
  43b548:	mov	x0, x25
  43b54c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43b550:	add	x1, x1, #0x308
  43b554:	str	x2, [sp, #144]
  43b558:	bl	4393e0 <nftw@plt+0x36860>
  43b55c:	b	43b398 <nftw@plt+0x38818>
  43b560:	ldp	x19, x20, [sp, #32]
  43b564:	ldp	x21, x22, [sp, #48]
  43b568:	ldp	x27, x28, [sp, #96]
  43b56c:	b	43b2c8 <nftw@plt+0x38748>
  43b570:	add	x0, x27, #0x70
  43b574:	ldr	x2, [sp, #144]
  43b578:	stlr	x2, [x0]
  43b57c:	add	x0, x27, #0x78
  43b580:	stlr	x25, [x0]
  43b584:	add	x0, x27, #0x80
  43b588:	stlr	x28, [x0]
  43b58c:	add	x11, x27, #0x68
  43b590:	stlr	x20, [x11]
  43b594:	b	43b3f4 <nftw@plt+0x38874>
  43b598:	cbz	w1, 43b404 <nftw@plt+0x38884>
  43b59c:	ldp	x3, x6, [sp, #120]
  43b5a0:	mov	x5, x22
  43b5a4:	ldr	x4, [sp, #136]
  43b5a8:	mov	x2, x21
  43b5ac:	mov	x0, x19
  43b5b0:	mov	x1, x23
  43b5b4:	bl	43aff0 <nftw@plt+0x38470>
  43b5b8:	ldp	x19, x20, [sp, #32]
  43b5bc:	ldp	x21, x22, [sp, #48]
  43b5c0:	ldp	x25, x26, [sp, #80]
  43b5c4:	ldp	x27, x28, [sp, #96]
  43b5c8:	b	43b2c8 <nftw@plt+0x38748>
  43b5cc:	mov	x0, x25
  43b5d0:	bl	439930 <nftw@plt+0x36db0>
  43b5d4:	mov	w0, w0
  43b5d8:	ldp	x2, x3, [sp, #352]
  43b5dc:	stp	x2, x3, [sp, #416]
  43b5e0:	ldp	x2, x3, [sp, #336]
  43b5e4:	stp	x2, x3, [sp, #400]
  43b5e8:	ldp	x2, x3, [sp, #368]
  43b5ec:	stp	x2, x3, [sp, #432]
  43b5f0:	ldr	x1, [sp, #360]
  43b5f4:	str	x0, [sp, #424]
  43b5f8:	ldp	x2, x3, [sp, #384]
  43b5fc:	stp	x2, x3, [sp, #448]
  43b600:	cmp	x0, x1
  43b604:	b.ls	43b768 <nftw@plt+0x38be8>  // b.plast
  43b608:	mov	x0, x25
  43b60c:	bl	4398e8 <nftw@plt+0x36d68>
  43b610:	cbz	w0, 43b75c <nftw@plt+0x38bdc>
  43b614:	add	x0, sp, #0x190
  43b618:	str	x0, [sp, #152]
  43b61c:	bl	439a58 <nftw@plt+0x36ed8>
  43b620:	and	w0, w0, #0xff
  43b624:	ldr	w1, [sp, #272]
  43b628:	str	w0, [sp, #276]
  43b62c:	cmp	w1, #0x3
  43b630:	b.gt	43b7dc <nftw@plt+0x38c5c>
  43b634:	mov	w0, #0x1                   	// #1
  43b638:	str	w0, [sp, #280]
  43b63c:	ldr	x0, [sp, #152]
  43b640:	bl	439a58 <nftw@plt+0x36ed8>
  43b644:	ldp	x20, x0, [sp, #416]
  43b648:	cbnz	x0, 43b7cc <nftw@plt+0x38c4c>
  43b64c:	ldr	x0, [sp, #152]
  43b650:	bl	4398e8 <nftw@plt+0x36d68>
  43b654:	mov	w1, w0
  43b658:	cbz	w0, 43b66c <nftw@plt+0x38aec>
  43b65c:	ldrb	w1, [x20]
  43b660:	eor	w1, w1, #0xffffff80
  43b664:	sub	w1, w1, #0x80
  43b668:	sxtb	w1, w1
  43b66c:	ldr	x20, [sp, #152]
  43b670:	str	w1, [sp, #284]
  43b674:	mov	x0, x20
  43b678:	bl	439a58 <nftw@plt+0x36ed8>
  43b67c:	and	w1, w0, #0xff
  43b680:	mov	x0, x20
  43b684:	str	w1, [sp, #288]
  43b688:	bl	439a58 <nftw@plt+0x36ed8>
  43b68c:	and	w1, w0, #0xff
  43b690:	ldp	x20, x0, [sp, #416]
  43b694:	str	w1, [sp, #292]
  43b698:	str	x20, [sp, #296]
  43b69c:	sub	w1, w1, #0x1
  43b6a0:	cmp	x1, x0
  43b6a4:	b.ls	43b788 <nftw@plt+0x38c08>  // b.plast
  43b6a8:	ldr	x0, [sp, #152]
  43b6ac:	bl	4398e8 <nftw@plt+0x36d68>
  43b6b0:	cbz	w0, 43b75c <nftw@plt+0x38bdc>
  43b6b4:	ldp	x20, x0, [sp, #416]
  43b6b8:	str	xzr, [sp, #304]
  43b6bc:	add	x2, x20, x0
  43b6c0:	mov	x26, x20
  43b6c4:	cmp	x2, x20
  43b6c8:	mov	x28, #0x0                   	// #0
  43b6cc:	b.ls	43c038 <nftw@plt+0x394b8>  // b.plast
  43b6d0:	str	x19, [sp, #144]
  43b6d4:	mov	x19, x2
  43b6d8:	b	43b6f8 <nftw@plt+0x38b78>
  43b6dc:	bl	402540 <strnlen@plt>
  43b6e0:	add	x28, x28, #0x1
  43b6e4:	add	x0, x0, #0x1
  43b6e8:	str	x28, [sp, #304]
  43b6ec:	add	x26, x26, x0
  43b6f0:	cmp	x19, x26
  43b6f4:	b.ls	43b708 <nftw@plt+0x38b88>  // b.plast
  43b6f8:	ldrb	w3, [x26]
  43b6fc:	sub	x1, x19, x26
  43b700:	mov	x0, x26
  43b704:	cbnz	w3, 43b6dc <nftw@plt+0x38b5c>
  43b708:	str	xzr, [sp, #312]
  43b70c:	ldr	x19, [sp, #144]
  43b710:	cbnz	x28, 43b9d4 <nftw@plt+0x38e54>
  43b714:	ldrb	w0, [x20]
  43b718:	mov	x26, #0x0                   	// #0
  43b71c:	cbz	w0, 43b7f0 <nftw@plt+0x38c70>
  43b720:	ldr	x28, [sp, #152]
  43b724:	b	43b750 <nftw@plt+0x38bd0>
  43b728:	ldr	x20, [sp, #312]
  43b72c:	bl	439cd0 <nftw@plt+0x37150>
  43b730:	ldr	x1, [sp, #312]
  43b734:	str	x0, [x20, x26]
  43b738:	ldr	x0, [x1, x26]
  43b73c:	add	x26, x26, #0x8
  43b740:	cbz	x0, 43b75c <nftw@plt+0x38bdc>
  43b744:	ldr	x20, [sp, #416]
  43b748:	ldrb	w0, [x20]
  43b74c:	cbz	w0, 43b7f0 <nftw@plt+0x38c70>
  43b750:	ldr	w1, [sp, #456]
  43b754:	mov	x0, x28
  43b758:	cbz	w1, 43b728 <nftw@plt+0x38ba8>
  43b75c:	add	x0, sp, #0xf0
  43b760:	str	x0, [sp, #144]
  43b764:	b	43b398 <nftw@plt+0x38818>
  43b768:	ldr	x2, [sp, #352]
  43b76c:	sub	x1, x1, x0
  43b770:	add	x0, x2, x0
  43b774:	stp	x0, x1, [sp, #352]
  43b778:	b	43b614 <nftw@plt+0x38a94>
  43b77c:	ldp	x25, x26, [sp, #80]
  43b780:	str	x20, [x7, #80]
  43b784:	b	43b2f4 <nftw@plt+0x38774>
  43b788:	add	x20, x20, x1
  43b78c:	sub	x0, x0, x1
  43b790:	stp	x20, x0, [sp, #416]
  43b794:	b	43b6b8 <nftw@plt+0x38b38>
  43b798:	bl	439990 <nftw@plt+0x36e10>
  43b79c:	mov	x1, x0
  43b7a0:	mov	x0, x25
  43b7a4:	str	x1, [sp, #360]
  43b7a8:	bl	4399f0 <nftw@plt+0x36e70>
  43b7ac:	and	w0, w0, #0xffff
  43b7b0:	str	w0, [sp, #272]
  43b7b4:	sub	w0, w0, #0x2
  43b7b8:	cmp	w0, #0x2
  43b7bc:	b.hi	43b544 <nftw@plt+0x389c4>  // b.pmore
  43b7c0:	mov	x0, x25
  43b7c4:	bl	439990 <nftw@plt+0x36e10>
  43b7c8:	b	43b5d8 <nftw@plt+0x38a58>
  43b7cc:	sub	x0, x0, #0x1
  43b7d0:	add	x1, x20, #0x1
  43b7d4:	stp	x1, x0, [sp, #416]
  43b7d8:	b	43b65c <nftw@plt+0x38adc>
  43b7dc:	ldr	x0, [sp, #152]
  43b7e0:	bl	439a58 <nftw@plt+0x36ed8>
  43b7e4:	and	w0, w0, #0xff
  43b7e8:	str	w0, [sp, #280]
  43b7ec:	b	43b63c <nftw@plt+0x38abc>
  43b7f0:	ldr	x28, [sp, #424]
  43b7f4:	cbnz	x28, 43ba1c <nftw@plt+0x38e9c>
  43b7f8:	ldr	x0, [sp, #152]
  43b7fc:	bl	4398e8 <nftw@plt+0x36d68>
  43b800:	cbz	w0, 43b75c <nftw@plt+0x38bdc>
  43b804:	ldp	x20, x28, [sp, #416]
  43b808:	str	xzr, [sp, #320]
  43b80c:	add	x28, x20, x28
  43b810:	mov	x26, #0x0                   	// #0
  43b814:	cmp	x28, x20
  43b818:	b.ls	43b8a8 <nftw@plt+0x38d28>  // b.plast
  43b81c:	ldrb	w0, [x20]
  43b820:	cbz	w0, 43b8a8 <nftw@plt+0x38d28>
  43b824:	sub	x1, x28, x20
  43b828:	mov	x0, x20
  43b82c:	bl	402540 <strnlen@plt>
  43b830:	add	x1, x0, #0x1
  43b834:	add	x2, x20, x1
  43b838:	ldrsb	w1, [x20, x1]
  43b83c:	tbz	w1, #31, 43b9f4 <nftw@plt+0x38e74>
  43b840:	add	x20, x20, x0
  43b844:	mov	x0, #0x1                   	// #1
  43b848:	add	x0, x0, #0x1
  43b84c:	ldrsb	w1, [x20, x0]
  43b850:	tbnz	w1, #31, 43b848 <nftw@plt+0x38cc8>
  43b854:	ldrsb	w1, [x2, x0]
  43b858:	add	x0, x2, x0
  43b85c:	tbz	w1, #31, 43ba04 <nftw@plt+0x38e84>
  43b860:	sub	x2, x0, #0x1
  43b864:	mov	x20, #0x1                   	// #1
  43b868:	add	x20, x20, #0x1
  43b86c:	ldrsb	w1, [x2, x20]
  43b870:	tbnz	w1, #31, 43b868 <nftw@plt+0x38ce8>
  43b874:	ldrsb	w1, [x0, x20]
  43b878:	add	x0, x0, x20
  43b87c:	tbz	w1, #31, 43b9fc <nftw@plt+0x38e7c>
  43b880:	sub	x2, x0, #0x1
  43b884:	mov	x20, #0x1                   	// #1
  43b888:	add	x20, x20, #0x1
  43b88c:	ldrsb	w1, [x2, x20]
  43b890:	tbnz	w1, #31, 43b888 <nftw@plt+0x38d08>
  43b894:	add	x26, x26, #0x1
  43b898:	str	x26, [sp, #320]
  43b89c:	add	x20, x0, x20
  43b8a0:	cmp	x28, x20
  43b8a4:	b.hi	43b81c <nftw@plt+0x38c9c>  // b.pmore
  43b8a8:	ldp	x2, x3, [sp, #376]
  43b8ac:	lsl	x1, x26, #3
  43b8b0:	mov	x0, x19
  43b8b4:	bl	435b68 <nftw@plt+0x32fe8>
  43b8b8:	str	x0, [sp, #328]
  43b8bc:	cbz	x0, 43b75c <nftw@plt+0x38bdc>
  43b8c0:	ldr	x0, [sp, #416]
  43b8c4:	mov	x1, #0x0                   	// #0
  43b8c8:	ldrb	w0, [x0]
  43b8cc:	cbz	w0, 43ba38 <nftw@plt+0x38eb8>
  43b8d0:	mov	x26, x1
  43b8d4:	str	x24, [sp, #144]
  43b8d8:	stp	x23, x21, [sp, #168]
  43b8dc:	str	x22, [sp, #184]
  43b8e0:	ldr	x20, [sp, #152]
  43b8e4:	b	43b98c <nftw@plt+0x38e0c>
  43b8e8:	cbz	x0, 43b9c4 <nftw@plt+0x38e44>
  43b8ec:	ldr	x1, [sp, #304]
  43b8f0:	sub	x2, x0, #0x1
  43b8f4:	cmp	x2, x1
  43b8f8:	b.cs	43c06c <nftw@plt+0x394ec>  // b.hs, b.nlast
  43b8fc:	ldr	x1, [sp, #312]
  43b900:	add	x0, x1, x0, lsl #3
  43b904:	ldur	x23, [x0, #-8]
  43b908:	mov	x0, x23
  43b90c:	bl	4024f0 <strlen@plt>
  43b910:	mov	x24, x0
  43b914:	mov	x0, x22
  43b918:	bl	4024f0 <strlen@plt>
  43b91c:	ldp	x2, x3, [sp, #376]
  43b920:	mov	x28, x0
  43b924:	add	x1, x24, x28
  43b928:	mov	x0, x19
  43b92c:	add	x1, x1, #0x2
  43b930:	bl	435b68 <nftw@plt+0x32fe8>
  43b934:	mov	x21, x0
  43b938:	cbz	x0, 43ba0c <nftw@plt+0x38e8c>
  43b93c:	mov	x1, x23
  43b940:	mov	x2, x24
  43b944:	bl	402490 <memcpy@plt>
  43b948:	mov	w3, #0x2f                  	// #47
  43b94c:	strb	w3, [x21, x24]
  43b950:	add	x0, x24, #0x1
  43b954:	add	x2, x28, #0x1
  43b958:	add	x0, x21, x0
  43b95c:	mov	x1, x22
  43b960:	bl	402490 <memcpy@plt>
  43b964:	ldr	x0, [sp, #328]
  43b968:	str	x21, [x0, x26]
  43b96c:	mov	x0, x20
  43b970:	bl	439b30 <nftw@plt+0x36fb0>
  43b974:	mov	x0, x20
  43b978:	bl	439b30 <nftw@plt+0x36fb0>
  43b97c:	ldr	x0, [sp, #416]
  43b980:	add	x26, x26, #0x8
  43b984:	ldrb	w0, [x0]
  43b988:	cbz	w0, 43ba2c <nftw@plt+0x38eac>
  43b98c:	ldr	w0, [sp, #456]
  43b990:	cbnz	w0, 43ba0c <nftw@plt+0x38e8c>
  43b994:	mov	x0, x20
  43b998:	bl	439cd0 <nftw@plt+0x37150>
  43b99c:	mov	x22, x0
  43b9a0:	cbz	x0, 43ba0c <nftw@plt+0x38e8c>
  43b9a4:	mov	x0, x20
  43b9a8:	bl	439b30 <nftw@plt+0x36fb0>
  43b9ac:	ldrb	w1, [x22]
  43b9b0:	cmp	w1, #0x2f
  43b9b4:	b.ne	43b8e8 <nftw@plt+0x38d68>  // b.any
  43b9b8:	ldr	x0, [sp, #328]
  43b9bc:	str	x22, [x0, x26]
  43b9c0:	b	43b96c <nftw@plt+0x38dec>
  43b9c4:	ldr	x0, [sp, #160]
  43b9c8:	ldr	x23, [x0, #72]
  43b9cc:	cbnz	x23, 43b908 <nftw@plt+0x38d88>
  43b9d0:	b	43b9b8 <nftw@plt+0x38e38>
  43b9d4:	ldp	x2, x3, [sp, #376]
  43b9d8:	lsl	x1, x28, #3
  43b9dc:	mov	x0, x19
  43b9e0:	bl	435b68 <nftw@plt+0x32fe8>
  43b9e4:	str	x0, [sp, #312]
  43b9e8:	cbz	x0, 43b75c <nftw@plt+0x38bdc>
  43b9ec:	ldr	x20, [sp, #416]
  43b9f0:	b	43b714 <nftw@plt+0x38b94>
  43b9f4:	mov	x0, #0x1                   	// #1
  43b9f8:	b	43b854 <nftw@plt+0x38cd4>
  43b9fc:	mov	x20, #0x1                   	// #1
  43ba00:	b	43b894 <nftw@plt+0x38d14>
  43ba04:	mov	x20, #0x1                   	// #1
  43ba08:	b	43b874 <nftw@plt+0x38cf4>
  43ba0c:	ldr	x24, [sp, #144]
  43ba10:	ldp	x23, x21, [sp, #168]
  43ba14:	ldr	x22, [sp, #184]
  43ba18:	b	43b75c <nftw@plt+0x38bdc>
  43ba1c:	add	x20, x20, #0x1
  43ba20:	sub	x28, x28, #0x1
  43ba24:	stp	x20, x28, [sp, #416]
  43ba28:	b	43b808 <nftw@plt+0x38c88>
  43ba2c:	ldp	x23, x21, [sp, #168]
  43ba30:	ldr	x24, [sp, #144]
  43ba34:	ldr	x22, [sp, #184]
  43ba38:	ldr	w0, [sp, #456]
  43ba3c:	cbnz	w0, 43b75c <nftw@plt+0x38bdc>
  43ba40:	ldr	x0, [sp, #320]
  43ba44:	cbz	x0, 43c008 <nftw@plt+0x39488>
  43ba48:	ldr	x0, [sp, #328]
  43ba4c:	ldr	x0, [x0]
  43ba50:	str	x0, [sp, #168]
  43ba54:	ldr	x0, [sp, #360]
  43ba58:	cbz	x0, 43c040 <nftw@plt+0x394c0>
  43ba5c:	ldr	x1, [sp, #168]
  43ba60:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  43ba64:	add	x0, x0, #0xbd0
  43ba68:	add	x2, x23, #0x10
  43ba6c:	str	x0, [sp, #224]
  43ba70:	add	x0, sp, #0xf0
  43ba74:	mov	w3, #0x1                   	// #1
  43ba78:	stp	x24, x27, [sp, #176]
  43ba7c:	mov	x24, x2
  43ba80:	stp	x23, x21, [sp, #192]
  43ba84:	mov	w21, w3
  43ba88:	mov	x23, x0
  43ba8c:	str	x22, [sp, #208]
  43ba90:	mov	x22, x1
  43ba94:	mov	x26, #0x0                   	// #0
  43ba98:	mov	w20, #0x0                   	// #0
  43ba9c:	str	x0, [sp, #144]
  43baa0:	mov	x0, x25
  43baa4:	bl	439a58 <nftw@plt+0x36ed8>
  43baa8:	ldr	w2, [sp, #292]
  43baac:	and	w1, w0, #0xff
  43bab0:	cmp	w2, w0, uxtb
  43bab4:	b.ls	43bccc <nftw@plt+0x3914c>  // b.plast
  43bab8:	cbz	w1, 43bd2c <nftw@plt+0x391ac>
  43babc:	cmp	w1, #0x5
  43bac0:	b.eq	43bc74 <nftw@plt+0x390f4>  // b.none
  43bac4:	b.hi	43bc58 <nftw@plt+0x390d8>  // b.pmore
  43bac8:	cmp	w1, #0x3
  43bacc:	b.eq	43bea0 <nftw@plt+0x39320>  // b.none
  43bad0:	cmp	w1, #0x4
  43bad4:	b.ne	43bc18 <nftw@plt+0x39098>  // b.any
  43bad8:	mov	x0, x25
  43badc:	bl	439b30 <nftw@plt+0x36fb0>
  43bae0:	cbnz	x0, 43bfa8 <nftw@plt+0x39428>
  43bae4:	ldr	x22, [sp, #224]
  43bae8:	ldr	x1, [sp, #360]
  43baec:	nop
  43baf0:	cbnz	x1, 43baa0 <nftw@plt+0x38f20>
  43baf4:	ldp	x24, x27, [sp, #176]
  43baf8:	ldp	x23, x21, [sp, #192]
  43bafc:	ldr	x22, [sp, #208]
  43bb00:	ldr	w0, [sp, #392]
  43bb04:	cbnz	w0, 43b398 <nftw@plt+0x38818>
  43bb08:	ldr	x0, [sp, #264]
  43bb0c:	cbz	x0, 43b398 <nftw@plt+0x38818>
  43bb10:	ldp	x20, x26, [sp, #136]
  43bb14:	mov	x3, x22
  43bb18:	mov	x0, x19
  43bb1c:	mov	x1, #0x18                  	// #24
  43bb20:	mov	x4, x26
  43bb24:	mov	x2, x20
  43bb28:	bl	435ce8 <nftw@plt+0x33168>
  43bb2c:	cbz	x0, 43b398 <nftw@plt+0x38818>
  43bb30:	mov	x1, #0xffffffffffffffff    	// #-1
  43bb34:	stp	x1, xzr, [x0]
  43bb38:	mov	x3, x22
  43bb3c:	str	xzr, [x0, #16]
  43bb40:	mov	x2, x20
  43bb44:	mov	x1, x26
  43bb48:	mov	x0, x19
  43bb4c:	bl	435e10 <nftw@plt+0x33290>
  43bb50:	cbz	w0, 43b398 <nftw@plt+0x38818>
  43bb54:	ldr	x0, [sp, #240]
  43bb58:	adrp	x3, 439000 <nftw@plt+0x36480>
  43bb5c:	ldr	x1, [sp, #264]
  43bb60:	add	x3, x3, #0x500
  43bb64:	mov	x2, #0x18                  	// #24
  43bb68:	str	x0, [sp, #160]
  43bb6c:	bl	43cb10 <nftw@plt+0x39f90>
  43bb70:	ldr	w0, [x19, #8]
  43bb74:	ldr	x1, [sp, #264]
  43bb78:	str	x1, [sp, #144]
  43bb7c:	cbz	w0, 43bf98 <nftw@plt+0x39418>
  43bb80:	mov	x26, x25
  43bb84:	str	xzr, [sp, #176]
  43bb88:	ldr	x28, [x24, #16]
  43bb8c:	stp	xzr, xzr, [sp, #336]
  43bb90:	stp	xzr, xzr, [sp, #352]
  43bb94:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43bb98:	add	x1, x1, #0x5e0
  43bb9c:	add	x20, sp, #0x110
  43bba0:	ldr	x4, [x23, #56]
  43bba4:	str	x21, [sp, #168]
  43bba8:	ldp	x3, x0, [x28]
  43bbac:	stp	x1, x4, [sp, #400]
  43bbb0:	ldr	w1, [x23, #120]
  43bbb4:	str	w1, [sp, #432]
  43bbb8:	mov	x21, x20
  43bbbc:	ldr	x1, [sp, #136]
  43bbc0:	mov	x20, x26
  43bbc4:	ldr	x26, [sp, #152]
  43bbc8:	str	x25, [sp, #152]
  43bbcc:	mov	x25, x1
  43bbd0:	stp	x3, x0, [sp, #416]
  43bbd4:	str	x1, [sp, #440]
  43bbd8:	str	x22, [sp, #448]
  43bbdc:	str	wzr, [sp, #456]
  43bbe0:	cbz	x0, 43bf08 <nftw@plt+0x39388>
  43bbe4:	stp	x20, x20, [sp]
  43bbe8:	mov	x7, x22
  43bbec:	mov	x6, x25
  43bbf0:	mov	x5, x21
  43bbf4:	mov	x4, x26
  43bbf8:	mov	x2, x28
  43bbfc:	mov	x1, x23
  43bc00:	mov	x0, x19
  43bc04:	mov	x3, #0x0                   	// #0
  43bc08:	bl	43a9a8 <nftw@plt+0x37e28>
  43bc0c:	cbz	w0, 43bf84 <nftw@plt+0x39404>
  43bc10:	ldr	x0, [sp, #424]
  43bc14:	b	43bbe0 <nftw@plt+0x39060>
  43bc18:	cmp	w1, #0x1
  43bc1c:	b.eq	43bee0 <nftw@plt+0x39360>  // b.none
  43bc20:	cmp	w1, #0x2
  43bc24:	b.ne	43beb4 <nftw@plt+0x39334>  // b.any
  43bc28:	mov	x0, x25
  43bc2c:	bl	439b30 <nftw@plt+0x36fb0>
  43bc30:	ldr	w2, [sp, #276]
  43bc34:	add	x20, x0, w20, uxtw
  43bc38:	ldr	w3, [sp, #280]
  43bc3c:	ldr	x1, [sp, #360]
  43bc40:	mul	x0, x2, x20
  43bc44:	udiv	x2, x20, x3
  43bc48:	udiv	x0, x0, x3
  43bc4c:	msub	w20, w2, w3, w20
  43bc50:	add	x26, x26, x0
  43bc54:	b	43baf0 <nftw@plt+0x38f70>
  43bc58:	cmp	w1, #0x9
  43bc5c:	b.eq	43be88 <nftw@plt+0x39308>  // b.none
  43bc60:	b.ls	43bc84 <nftw@plt+0x39104>  // b.plast
  43bc64:	cmp	w1, #0xb
  43bc68:	b.ls	43bda0 <nftw@plt+0x39220>  // b.plast
  43bc6c:	cmp	w1, #0xc
  43bc70:	b.ne	43beb4 <nftw@plt+0x39334>  // b.any
  43bc74:	mov	x0, x25
  43bc78:	bl	439b30 <nftw@plt+0x36fb0>
  43bc7c:	ldr	x1, [sp, #360]
  43bc80:	b	43baf0 <nftw@plt+0x38f70>
  43bc84:	cmp	w1, #0x7
  43bc88:	b.ls	43bda0 <nftw@plt+0x39220>  // b.plast
  43bc8c:	cmp	w1, #0x8
  43bc90:	b.ne	43beb4 <nftw@plt+0x39334>  // b.any
  43bc94:	ldr	w0, [sp, #288]
  43bc98:	mov	w1, #0xff                  	// #255
  43bc9c:	sub	w2, w1, w2
  43bca0:	ldr	w3, [sp, #276]
  43bca4:	ldr	w4, [sp, #280]
  43bca8:	ldr	x1, [sp, #360]
  43bcac:	udiv	w0, w2, w0
  43bcb0:	add	w20, w0, w20
  43bcb4:	udiv	w2, w20, w4
  43bcb8:	mul	w0, w20, w3
  43bcbc:	udiv	w0, w0, w4
  43bcc0:	msub	w20, w2, w4, w20
  43bcc4:	add	x26, x26, x0
  43bcc8:	b	43baf0 <nftw@plt+0x38f70>
  43bccc:	add	x4, sp, #0x11c
  43bcd0:	sub	w2, w1, w2
  43bcd4:	mov	x7, x23
  43bcd8:	mov	x1, x24
  43bcdc:	mov	x3, x22
  43bce0:	mov	x0, x19
  43bce4:	ldp	w10, w6, [x4]
  43bce8:	ldp	w8, w9, [x4, #-8]
  43bcec:	udiv	w4, w2, w6
  43bcf0:	add	w20, w4, w20
  43bcf4:	msub	w2, w4, w6, w2
  43bcf8:	ldp	x5, x6, [sp, #376]
  43bcfc:	add	w2, w2, w10
  43bd00:	mul	w8, w20, w8
  43bd04:	add	w21, w21, w2
  43bd08:	udiv	w10, w20, w9
  43bd0c:	mov	w4, w21
  43bd10:	udiv	w2, w8, w9
  43bd14:	msub	w20, w10, w9, w20
  43bd18:	add	x26, x26, x2
  43bd1c:	mov	x2, x26
  43bd20:	bl	439738 <nftw@plt+0x36bb8>
  43bd24:	ldr	x1, [sp, #360]
  43bd28:	b	43baf0 <nftw@plt+0x38f70>
  43bd2c:	mov	x0, x25
  43bd30:	bl	439b30 <nftw@plt+0x36fb0>
  43bd34:	mov	x27, x0
  43bd38:	mov	x0, x25
  43bd3c:	bl	439a58 <nftw@plt+0x36ed8>
  43bd40:	and	w0, w0, #0xff
  43bd44:	cmp	w0, #0x3
  43bd48:	b.eq	43bdd0 <nftw@plt+0x39250>  // b.none
  43bd4c:	b.hi	43bd7c <nftw@plt+0x391fc>  // b.pmore
  43bd50:	cmp	w0, #0x1
  43bd54:	b.eq	43bdb8 <nftw@plt+0x39238>  // b.none
  43bd58:	cmp	w0, #0x2
  43bd5c:	b.ne	43bd84 <nftw@plt+0x39204>  // b.any
  43bd60:	ldr	x0, [sp, #160]
  43bd64:	ldr	w1, [x0, #48]
  43bd68:	mov	x0, x25
  43bd6c:	bl	439aa8 <nftw@plt+0x36f28>
  43bd70:	mov	x26, x0
  43bd74:	ldr	x1, [sp, #360]
  43bd78:	b	43baf0 <nftw@plt+0x38f70>
  43bd7c:	cmp	w0, #0x4
  43bd80:	b.eq	43bc74 <nftw@plt+0x390f4>  // b.none
  43bd84:	ldr	x1, [sp, #360]
  43bd88:	sub	x27, x27, #0x1
  43bd8c:	cmp	x27, x1
  43bd90:	b.ls	43bfcc <nftw@plt+0x3944c>  // b.plast
  43bd94:	mov	x0, x25
  43bd98:	bl	4398e8 <nftw@plt+0x36d68>
  43bd9c:	cbz	w0, 43bda8 <nftw@plt+0x39228>
  43bda0:	ldr	x1, [sp, #360]
  43bda4:	b	43baf0 <nftw@plt+0x38f70>
  43bda8:	ldp	x24, x27, [sp, #176]
  43bdac:	ldp	x23, x21, [sp, #192]
  43bdb0:	ldr	x22, [sp, #208]
  43bdb4:	b	43b398 <nftw@plt+0x38818>
  43bdb8:	mov	w21, w0
  43bdbc:	mov	w20, #0x0                   	// #0
  43bdc0:	mov	x26, #0x0                   	// #0
  43bdc4:	ldr	x22, [sp, #168]
  43bdc8:	ldr	x1, [sp, #360]
  43bdcc:	b	43baf0 <nftw@plt+0x38f70>
  43bdd0:	mov	x0, x25
  43bdd4:	bl	439cd0 <nftw@plt+0x37150>
  43bdd8:	mov	x28, x0
  43bddc:	cbz	x0, 43bda8 <nftw@plt+0x39228>
  43bde0:	mov	x0, x25
  43bde4:	bl	439b30 <nftw@plt+0x36fb0>
  43bde8:	mov	x22, x0
  43bdec:	mov	x0, x25
  43bdf0:	bl	439b30 <nftw@plt+0x36fb0>
  43bdf4:	mov	x0, x25
  43bdf8:	bl	439b30 <nftw@plt+0x36fb0>
  43bdfc:	ldrb	w0, [x28]
  43be00:	cmp	w0, #0x2f
  43be04:	b.eq	43bfe0 <nftw@plt+0x39460>  // b.none
  43be08:	cbnz	w22, 43bfec <nftw@plt+0x3946c>
  43be0c:	ldr	x0, [sp, #160]
  43be10:	ldr	x5, [x0, #72]
  43be14:	mov	x0, x5
  43be18:	str	x5, [sp, #232]
  43be1c:	bl	4024f0 <strlen@plt>
  43be20:	mov	x27, x0
  43be24:	mov	x0, x28
  43be28:	bl	4024f0 <strlen@plt>
  43be2c:	mov	x1, x0
  43be30:	ldp	x2, x3, [sp, #376]
  43be34:	str	x1, [sp, #216]
  43be38:	add	x1, x27, x1
  43be3c:	mov	x0, x19
  43be40:	add	x1, x1, #0x2
  43be44:	bl	435b68 <nftw@plt+0x32fe8>
  43be48:	mov	x22, x0
  43be4c:	cbz	x0, 43bda8 <nftw@plt+0x39228>
  43be50:	ldr	x5, [sp, #232]
  43be54:	mov	x2, x27
  43be58:	mov	x1, x5
  43be5c:	bl	402490 <memcpy@plt>
  43be60:	ldr	x1, [sp, #216]
  43be64:	mov	w0, #0x2f                  	// #47
  43be68:	strb	w0, [x22, x27]
  43be6c:	add	x0, x27, #0x1
  43be70:	add	x2, x1, #0x1
  43be74:	add	x0, x22, x0
  43be78:	mov	x1, x28
  43be7c:	bl	402490 <memcpy@plt>
  43be80:	ldr	x1, [sp, #360]
  43be84:	b	43baf0 <nftw@plt+0x38f70>
  43be88:	mov	x0, x25
  43be8c:	bl	4399f0 <nftw@plt+0x36e70>
  43be90:	mov	w20, #0x0                   	// #0
  43be94:	add	x26, x26, w0, uxth
  43be98:	ldr	x1, [sp, #360]
  43be9c:	b	43baf0 <nftw@plt+0x38f70>
  43bea0:	mov	x0, x25
  43bea4:	bl	439bf8 <nftw@plt+0x37078>
  43bea8:	add	w21, w21, w0
  43beac:	ldr	x1, [sp, #360]
  43beb0:	b	43baf0 <nftw@plt+0x38f70>
  43beb4:	ldr	x0, [sp, #296]
  43beb8:	sub	w1, w1, #0x1
  43bebc:	ldrb	w27, [x0, w1, uxtw]
  43bec0:	cbz	w27, 43bda0 <nftw@plt+0x39220>
  43bec4:	nop
  43bec8:	mov	x0, x25
  43becc:	bl	439b30 <nftw@plt+0x36fb0>
  43bed0:	subs	w27, w27, #0x1
  43bed4:	b.ne	43bec8 <nftw@plt+0x39348>  // b.any
  43bed8:	ldr	x1, [sp, #360]
  43bedc:	b	43baf0 <nftw@plt+0x38f70>
  43bee0:	ldp	x5, x6, [sp, #376]
  43bee4:	mov	x1, x24
  43bee8:	mov	x7, x23
  43beec:	mov	w4, w21
  43bef0:	mov	x3, x22
  43bef4:	mov	x2, x26
  43bef8:	mov	x0, x19
  43befc:	bl	439738 <nftw@plt+0x36bb8>
  43bf00:	ldr	x1, [sp, #360]
  43bf04:	b	43baf0 <nftw@plt+0x38f70>
  43bf08:	mov	x26, x20
  43bf0c:	mov	x20, x21
  43bf10:	ldr	x25, [sp, #152]
  43bf14:	ldr	x28, [x26, #24]
  43bf18:	ldr	x21, [sp, #168]
  43bf1c:	cbz	x28, 43bf8c <nftw@plt+0x3940c>
  43bf20:	ldr	x0, [sp, #176]
  43bf24:	cbz	x0, 43c018 <nftw@plt+0x39498>
  43bf28:	ldr	x2, [sp, #136]
  43bf2c:	mov	x3, x22
  43bf30:	ldr	x26, [sp, #176]
  43bf34:	mov	x0, x19
  43bf38:	mov	x1, x26
  43bf3c:	bl	435e00 <nftw@plt+0x33280>
  43bf40:	mov	x25, x0
  43bf44:	cbz	x0, 43bf8c <nftw@plt+0x3940c>
  43bf48:	str	xzr, [x26, #24]
  43bf4c:	adrp	x3, 43c000 <nftw@plt+0x39480>
  43bf50:	mov	x1, x28
  43bf54:	add	x3, x3, #0x1e8
  43bf58:	mov	x0, x25
  43bf5c:	mov	x2, #0x18                  	// #24
  43bf60:	bl	43cb10 <nftw@plt+0x39f90>
  43bf64:	ldr	x2, [sp, #136]
  43bf68:	mov	x1, x20
  43bf6c:	mov	x3, x22
  43bf70:	mov	x0, x19
  43bf74:	bl	439438 <nftw@plt+0x368b8>
  43bf78:	mov	w1, #0x1                   	// #1
  43bf7c:	ldr	x20, [sp, #160]
  43bf80:	b	43b3e0 <nftw@plt+0x38860>
  43bf84:	mov	x20, x21
  43bf88:	ldr	x21, [sp, #168]
  43bf8c:	mov	x25, #0x0                   	// #0
  43bf90:	mov	x28, #0x0                   	// #0
  43bf94:	b	43bf64 <nftw@plt+0x393e4>
  43bf98:	add	x26, x23, #0x80
  43bf9c:	str	x26, [sp, #176]
  43bfa0:	ldr	x28, [x24, #16]
  43bfa4:	b	43bb94 <nftw@plt+0x39014>
  43bfa8:	ldr	x1, [sp, #320]
  43bfac:	sub	x2, x0, #0x1
  43bfb0:	cmp	x2, x1
  43bfb4:	b.cs	43c04c <nftw@plt+0x394cc>  // b.hs, b.nlast
  43bfb8:	ldr	x2, [sp, #328]
  43bfbc:	ldr	x1, [sp, #360]
  43bfc0:	add	x0, x2, x0, lsl #3
  43bfc4:	ldur	x22, [x0, #-8]
  43bfc8:	b	43baf0 <nftw@plt+0x38f70>
  43bfcc:	ldr	x0, [sp, #352]
  43bfd0:	sub	x1, x1, x27
  43bfd4:	add	x27, x0, x27
  43bfd8:	stp	x27, x1, [sp, #352]
  43bfdc:	b	43baf0 <nftw@plt+0x38f70>
  43bfe0:	mov	x22, x28
  43bfe4:	ldr	x1, [sp, #360]
  43bfe8:	b	43baf0 <nftw@plt+0x38f70>
  43bfec:	ldr	x0, [sp, #304]
  43bff0:	sub	w22, w22, #0x1
  43bff4:	cmp	x22, x0
  43bff8:	b.cs	43c0a8 <nftw@plt+0x39528>  // b.hs, b.nlast
  43bffc:	ldr	x0, [sp, #312]
  43c000:	ldr	x5, [x0, x22, lsl #3]
  43c004:	b	43be14 <nftw@plt+0x39294>
  43c008:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x105a0>
  43c00c:	add	x0, x0, #0xbd0
  43c010:	str	x0, [sp, #168]
  43c014:	b	43ba54 <nftw@plt+0x38ed4>
  43c018:	ldr	x2, [sp, #136]
  43c01c:	mov	x1, x25
  43c020:	mov	x3, x22
  43c024:	mov	x0, x19
  43c028:	bl	435e10 <nftw@plt+0x33290>
  43c02c:	cbz	w0, 43bf8c <nftw@plt+0x3940c>
  43c030:	ldr	x25, [x26]
  43c034:	b	43bf4c <nftw@plt+0x393cc>
  43c038:	str	xzr, [sp, #312]
  43c03c:	b	43b714 <nftw@plt+0x38b94>
  43c040:	add	x0, sp, #0xf0
  43c044:	str	x0, [sp, #144]
  43c048:	b	43bb00 <nftw@plt+0x38f80>
  43c04c:	mov	x0, x25
  43c050:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43c054:	add	x1, x1, #0x390
  43c058:	ldp	x24, x27, [sp, #176]
  43c05c:	ldp	x23, x21, [sp, #192]
  43c060:	ldr	x22, [sp, #208]
  43c064:	bl	4393e0 <nftw@plt+0x36860>
  43c068:	b	43b398 <nftw@plt+0x38818>
  43c06c:	add	x2, sp, #0xf0
  43c070:	mov	x0, x25
  43c074:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43c078:	add	x1, x1, #0x328
  43c07c:	ldr	x24, [sp, #144]
  43c080:	str	x2, [sp, #144]
  43c084:	ldp	x23, x21, [sp, #168]
  43c088:	ldr	x22, [sp, #184]
  43c08c:	bl	4393e0 <nftw@plt+0x36860>
  43c090:	b	43b398 <nftw@plt+0x38818>
  43c094:	ldp	x19, x20, [sp, #32]
  43c098:	ldp	x21, x22, [sp, #48]
  43c09c:	ldp	x25, x26, [sp, #80]
  43c0a0:	ldp	x27, x28, [sp, #96]
  43c0a4:	b	43b2bc <nftw@plt+0x3873c>
  43c0a8:	mov	x0, x25
  43c0ac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43c0b0:	add	x1, x1, #0x360
  43c0b4:	ldp	x24, x27, [sp, #176]
  43c0b8:	ldp	x23, x21, [sp, #192]
  43c0bc:	ldr	x22, [sp, #208]
  43c0c0:	bl	4393e0 <nftw@plt+0x36860>
  43c0c4:	b	43b398 <nftw@plt+0x38818>
  43c0c8:	stp	x29, x30, [sp, #-96]!
  43c0cc:	mov	x29, sp
  43c0d0:	stp	x23, x24, [sp, #48]
  43c0d4:	mov	x24, x0
  43c0d8:	ldr	w0, [x0, #8]
  43c0dc:	stp	x19, x20, [sp, #16]
  43c0e0:	mov	x23, x3
  43c0e4:	mov	x20, x2
  43c0e8:	stp	x21, x22, [sp, #32]
  43c0ec:	mov	x22, x1
  43c0f0:	mov	x21, x4
  43c0f4:	cbnz	w0, 43c158 <nftw@plt+0x395d8>
  43c0f8:	ldr	x19, [x24, #32]
  43c0fc:	cbz	x19, 43c1a0 <nftw@plt+0x39620>
  43c100:	str	x25, [sp, #64]
  43c104:	add	x25, sp, #0x5c
  43c108:	b	43c11c <nftw@plt+0x3959c>
  43c10c:	ldr	w0, [sp, #92]
  43c110:	cbnz	w0, 43c1cc <nftw@plt+0x3964c>
  43c114:	ldr	x19, [x19]
  43c118:	cbz	x19, 43c19c <nftw@plt+0x3961c>
  43c11c:	mov	x6, x25
  43c120:	mov	x5, x21
  43c124:	mov	x4, x23
  43c128:	mov	x3, x20
  43c12c:	mov	x2, x22
  43c130:	mov	x1, x19
  43c134:	mov	x0, x24
  43c138:	bl	43aff0 <nftw@plt+0x38470>
  43c13c:	cbz	w0, 43c10c <nftw@plt+0x3958c>
  43c140:	ldp	x19, x20, [sp, #16]
  43c144:	ldp	x21, x22, [sp, #32]
  43c148:	ldp	x23, x24, [sp, #48]
  43c14c:	ldr	x25, [sp, #64]
  43c150:	ldp	x29, x30, [sp], #96
  43c154:	ret
  43c158:	add	x19, x24, #0x20
  43c15c:	str	x25, [sp, #64]
  43c160:	add	x25, sp, #0x5c
  43c164:	b	43c178 <nftw@plt+0x395f8>
  43c168:	bl	43aff0 <nftw@plt+0x38470>
  43c16c:	cbnz	w0, 43c140 <nftw@plt+0x395c0>
  43c170:	ldr	w0, [sp, #92]
  43c174:	cbnz	w0, 43c1cc <nftw@plt+0x3964c>
  43c178:	ldar	x19, [x19]
  43c17c:	mov	x6, x25
  43c180:	mov	x5, x21
  43c184:	mov	x4, x23
  43c188:	mov	x3, x20
  43c18c:	mov	x2, x22
  43c190:	mov	x1, x19
  43c194:	mov	x0, x24
  43c198:	cbnz	x19, 43c168 <nftw@plt+0x395e8>
  43c19c:	ldr	x25, [sp, #64]
  43c1a0:	mov	x1, x22
  43c1a4:	mov	x0, x21
  43c1a8:	mov	x4, #0x0                   	// #0
  43c1ac:	mov	w3, #0x0                   	// #0
  43c1b0:	mov	x2, #0x0                   	// #0
  43c1b4:	blr	x20
  43c1b8:	ldp	x19, x20, [sp, #16]
  43c1bc:	ldp	x21, x22, [sp, #32]
  43c1c0:	ldp	x23, x24, [sp, #48]
  43c1c4:	ldp	x29, x30, [sp], #96
  43c1c8:	ret
  43c1cc:	mov	w0, #0x0                   	// #0
  43c1d0:	ldp	x19, x20, [sp, #16]
  43c1d4:	ldp	x21, x22, [sp, #32]
  43c1d8:	ldp	x23, x24, [sp, #48]
  43c1dc:	ldr	x25, [sp, #64]
  43c1e0:	ldp	x29, x30, [sp], #96
  43c1e4:	ret
  43c1e8:	ldr	x3, [x0]
  43c1ec:	ldr	x2, [x1]
  43c1f0:	cmp	x3, x2
  43c1f4:	b.cc	43c22c <nftw@plt+0x396ac>  // b.lo, b.ul, b.last
  43c1f8:	b.hi	43c224 <nftw@plt+0x396a4>  // b.pmore
  43c1fc:	ldr	x3, [x0, #8]
  43c200:	ldr	x2, [x1, #8]
  43c204:	cmp	x3, x2
  43c208:	b.cc	43c224 <nftw@plt+0x396a4>  // b.lo, b.ul, b.last
  43c20c:	b.hi	43c22c <nftw@plt+0x396ac>  // b.pmore
  43c210:	ldr	x0, [x0, #16]
  43c214:	ldr	x1, [x1, #16]
  43c218:	ldr	x0, [x0]
  43c21c:	ldr	x1, [x1]
  43c220:	b	402890 <strcmp@plt>
  43c224:	mov	w0, #0x1                   	// #1
  43c228:	ret
  43c22c:	mov	w0, #0xffffffff            	// #-1
  43c230:	ret
  43c234:	nop
  43c238:	stp	x29, x30, [sp, #-64]!
  43c23c:	mov	x29, sp
  43c240:	stp	x19, x20, [sp, #16]
  43c244:	mov	x20, x2
  43c248:	ldr	x2, [x1]
  43c24c:	stp	x21, x22, [sp, #32]
  43c250:	mov	x21, x1
  43c254:	stp	x23, x24, [sp, #48]
  43c258:	mov	x22, x0
  43c25c:	mov	x23, x3
  43c260:	mov	x24, x4
  43c264:	cbz	x2, 43c2a4 <nftw@plt+0x39724>
  43c268:	mov	x19, #0x0                   	// #0
  43c26c:	nop
  43c270:	ldr	x5, [x20]
  43c274:	mov	x4, x24
  43c278:	mov	x3, x23
  43c27c:	mov	x0, x22
  43c280:	add	x5, x5, x19, lsl #5
  43c284:	add	x19, x19, #0x1
  43c288:	ldp	x2, x1, [x5, #16]
  43c28c:	lsl	x2, x2, #3
  43c290:	bl	435a90 <nftw@plt+0x32f10>
  43c294:	ldr	x5, [x21]
  43c298:	cmp	x19, x5
  43c29c:	b.cc	43c270 <nftw@plt+0x396f0>  // b.lo, b.ul, b.last
  43c2a0:	lsl	x2, x5, #5
  43c2a4:	ldr	x1, [x20]
  43c2a8:	mov	x4, x24
  43c2ac:	mov	x3, x23
  43c2b0:	mov	x0, x22
  43c2b4:	bl	435a90 <nftw@plt+0x32f10>
  43c2b8:	ldp	x23, x24, [sp, #48]
  43c2bc:	str	xzr, [x21]
  43c2c0:	ldp	x21, x22, [sp, #32]
  43c2c4:	str	xzr, [x20]
  43c2c8:	ldp	x19, x20, [sp, #16]
  43c2cc:	ldp	x29, x30, [sp], #64
  43c2d0:	ret
  43c2d4:	nop
  43c2d8:	sub	sp, sp, #0x290
  43c2dc:	mov	x8, x2
  43c2e0:	add	x9, sp, #0x200
  43c2e4:	stp	x29, x30, [sp, #48]
  43c2e8:	add	x29, sp, #0x30
  43c2ec:	stp	x19, x20, [sp, #64]
  43c2f0:	stp	x21, x22, [sp, #80]
  43c2f4:	stp	x23, x24, [sp, #96]
  43c2f8:	stp	x25, x26, [sp, #112]
  43c2fc:	stp	x27, x28, [sp, #128]
  43c300:	mov	x27, x0
  43c304:	stp	xzr, xzr, [x9, #-200]
  43c308:	str	x7, [sp, #160]
  43c30c:	str	x1, [sp, #192]
  43c310:	str	x6, [sp, #208]
  43c314:	stp	x2, x3, [sp, #248]
  43c318:	stp	x4, x5, [sp, #264]
  43c31c:	str	xzr, [sp, #328]
  43c320:	stp	xzr, xzr, [sp, #336]
  43c324:	stp	xzr, xzr, [sp, #352]
  43c328:	stp	xzr, xzr, [sp, #368]
  43c32c:	stp	xzr, xzr, [sp, #384]
  43c330:	str	x2, [sp, #408]
  43c334:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43c338:	add	x2, x2, #0x5e0
  43c33c:	str	x2, [sp, #400]
  43c340:	ldr	x23, [sp, #704]
  43c344:	ldr	x25, [sp, #712]
  43c348:	stp	x8, x3, [sp, #416]
  43c34c:	ldr	w0, [sp, #688]
  43c350:	str	w0, [sp, #432]
  43c354:	stp	x23, x25, [sp, #440]
  43c358:	str	wzr, [sp, #456]
  43c35c:	cbz	x3, 43cb00 <nftw@plt+0x39f80>
  43c360:	ldr	x1, [sp, #248]
  43c364:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1d5a0>
  43c368:	add	x0, x0, #0x798
  43c36c:	add	x28, sp, #0x190
  43c370:	str	x0, [sp, #224]
  43c374:	add	x0, sp, #0x138
  43c378:	str	xzr, [sp, #152]
  43c37c:	mov	x24, x27
  43c380:	stp	xzr, x1, [sp, #168]
  43c384:	add	x26, sp, #0x1d0
  43c388:	add	x20, sp, #0x250
  43c38c:	str	x0, [sp, #216]
  43c390:	mov	x0, x28
  43c394:	bl	439930 <nftw@plt+0x36db0>
  43c398:	str	wzr, [sp, #184]
  43c39c:	mov	x1, #0xffffffff            	// #4294967295
  43c3a0:	add	x21, sp, #0x210
  43c3a4:	mov	w27, w0
  43c3a8:	cmp	x1, w0, uxtw
  43c3ac:	b.eq	43c8a8 <nftw@plt+0x39d28>  // b.none
  43c3b0:	ldp	x2, x3, [x28]
  43c3b4:	stp	x2, x3, [x26]
  43c3b8:	ldp	x0, x1, [x28, #16]
  43c3bc:	stp	x0, x1, [x26, #16]
  43c3c0:	ldp	x2, x3, [x28, #32]
  43c3c4:	stp	x2, x3, [x26, #32]
  43c3c8:	ldp	x2, x3, [x28, #48]
  43c3cc:	stp	x2, x3, [x26, #48]
  43c3d0:	ldr	x0, [sp, #424]
  43c3d4:	str	x27, [sp, #488]
  43c3d8:	cmp	x0, x27
  43c3dc:	b.cs	43c748 <nftw@plt+0x39bc8>  // b.hs, b.nlast
  43c3e0:	mov	x0, x28
  43c3e4:	bl	4398e8 <nftw@plt+0x36d68>
  43c3e8:	cbz	w0, 43c6f8 <nftw@plt+0x39b78>
  43c3ec:	mov	x0, x26
  43c3f0:	bl	4399f0 <nftw@plt+0x36e70>
  43c3f4:	and	w0, w0, #0xffff
  43c3f8:	str	w0, [sp, #188]
  43c3fc:	sub	w0, w0, #0x2
  43c400:	cmp	w0, #0x2
  43c404:	b.hi	43c778 <nftw@plt+0x39bf8>  // b.pmore
  43c408:	ldr	x4, [sp, #216]
  43c40c:	mov	x3, x25
  43c410:	mov	x2, x23
  43c414:	mov	x0, x24
  43c418:	mov	x1, #0x8                   	// #8
  43c41c:	bl	435ce8 <nftw@plt+0x33168>
  43c420:	mov	x22, x0
  43c424:	cbz	x0, 43c6f8 <nftw@plt+0x39b78>
  43c428:	mov	x3, x25
  43c42c:	mov	x2, x23
  43c430:	mov	x0, x24
  43c434:	mov	x1, #0x88                  	// #136
  43c438:	bl	435b68 <nftw@plt+0x32fe8>
  43c43c:	mov	x19, x0
  43c440:	cbz	x0, 43c6f8 <nftw@plt+0x39b78>
  43c444:	ldr	x0, [sp, #152]
  43c448:	str	x19, [x22]
  43c44c:	stp	xzr, xzr, [x19, #88]
  43c450:	add	x0, x0, #0x1
  43c454:	str	x0, [sp, #152]
  43c458:	add	x0, x19, #0x58
  43c45c:	str	x0, [sp, #232]
  43c460:	ldr	w0, [sp, #184]
  43c464:	cbz	w0, 43c710 <nftw@plt+0x39b90>
  43c468:	mov	x0, x26
  43c46c:	bl	439990 <nftw@plt+0x36e10>
  43c470:	ldr	x1, [sp, #160]
  43c474:	stp	xzr, xzr, [x19, #88]
  43c478:	cmp	x1, x0
  43c47c:	b.ls	43c72c <nftw@plt+0x39bac>  // b.plast
  43c480:	add	x4, sp, #0x210
  43c484:	str	x23, [sp, #568]
  43c488:	ldr	x3, [sp, #160]
  43c48c:	str	x25, [sp, #576]
  43c490:	ldr	x2, [sp, #208]
  43c494:	str	wzr, [sp, #584]
  43c498:	mov	x22, #0x0                   	// #0
  43c49c:	add	x1, x2, x0
  43c4a0:	sub	x0, x3, x0
  43c4a4:	stp	x1, x0, [x4, #16]
  43c4a8:	ldr	w0, [sp, #688]
  43c4ac:	ldr	x3, [sp, #224]
  43c4b0:	stp	x3, x2, [x4]
  43c4b4:	str	w0, [sp, #560]
  43c4b8:	ldp	x0, x1, [x21, #16]
  43c4bc:	stp	x0, x1, [x20, #16]
  43c4c0:	ldp	x0, x1, [x21]
  43c4c4:	stp	x0, x1, [x20]
  43c4c8:	ldp	x0, x1, [x21, #32]
  43c4cc:	stp	x0, x1, [x20, #32]
  43c4d0:	ldp	x0, x1, [x21, #48]
  43c4d4:	stp	x0, x1, [x20, #48]
  43c4d8:	mov	x0, x20
  43c4dc:	bl	439b30 <nftw@plt+0x36fb0>
  43c4e0:	cbz	x0, 43c530 <nftw@plt+0x399b0>
  43c4e4:	nop
  43c4e8:	ldr	w0, [sp, #648]
  43c4ec:	cbnz	w0, 43c6f8 <nftw@plt+0x39b78>
  43c4f0:	mov	x0, x20
  43c4f4:	bl	439b30 <nftw@plt+0x36fb0>
  43c4f8:	add	x22, x22, #0x1
  43c4fc:	mov	x0, x20
  43c500:	bl	439a58 <nftw@plt+0x36ed8>
  43c504:	b	43c510 <nftw@plt+0x39990>
  43c508:	mov	x0, x20
  43c50c:	bl	439b30 <nftw@plt+0x36fb0>
  43c510:	mov	x0, x20
  43c514:	bl	439b30 <nftw@plt+0x36fb0>
  43c518:	cbnz	x0, 43c508 <nftw@plt+0x39988>
  43c51c:	mov	x0, x20
  43c520:	bl	439b30 <nftw@plt+0x36fb0>
  43c524:	mov	x0, x20
  43c528:	bl	439b30 <nftw@plt+0x36fb0>
  43c52c:	cbnz	x0, 43c4e8 <nftw@plt+0x39968>
  43c530:	ldr	w0, [sp, #648]
  43c534:	cbnz	w0, 43c6f8 <nftw@plt+0x39b78>
  43c538:	cbz	x22, 43c7bc <nftw@plt+0x39c3c>
  43c53c:	lsl	x1, x22, #5
  43c540:	mov	x3, x25
  43c544:	mov	x2, x23
  43c548:	mov	x0, x24
  43c54c:	str	x1, [sp, #200]
  43c550:	bl	435b68 <nftw@plt+0x32fe8>
  43c554:	str	x0, [x19, #96]
  43c558:	cbz	x0, 43c6f8 <nftw@plt+0x39b78>
  43c55c:	ldr	x1, [sp, #200]
  43c560:	str	x22, [x19, #88]
  43c564:	mov	x2, x1
  43c568:	mov	w1, #0x0                   	// #0
  43c56c:	bl	4026f0 <memset@plt>
  43c570:	ldr	w0, [sp, #584]
  43c574:	cbnz	w0, 43caf8 <nftw@plt+0x39f78>
  43c578:	mov	x0, #0x0                   	// #0
  43c57c:	stp	x27, x28, [sp, #280]
  43c580:	mov	x27, x0
  43c584:	str	x26, [sp, #296]
  43c588:	mov	x26, x21
  43c58c:	str	x24, [sp, #240]
  43c590:	str	x23, [sp, #704]
  43c594:	str	x25, [sp, #712]
  43c598:	mov	x0, x26
  43c59c:	bl	439b30 <nftw@plt+0x36fb0>
  43c5a0:	mov	x22, x0
  43c5a4:	cbz	x0, 43c790 <nftw@plt+0x39c10>
  43c5a8:	mov	x0, x26
  43c5ac:	bl	439b30 <nftw@plt+0x36fb0>
  43c5b0:	mov	x21, x0
  43c5b4:	mov	x0, x26
  43c5b8:	bl	439a58 <nftw@plt+0x36ed8>
  43c5bc:	mov	x24, #0x0                   	// #0
  43c5c0:	ldp	x2, x3, [x26]
  43c5c4:	stp	x2, x3, [x20]
  43c5c8:	and	w28, w0, #0xff
  43c5cc:	ldp	x2, x3, [x26, #16]
  43c5d0:	stp	x2, x3, [x20, #16]
  43c5d4:	ldp	x2, x3, [x26, #32]
  43c5d8:	stp	x2, x3, [x20, #32]
  43c5dc:	ldp	x2, x3, [x26, #48]
  43c5e0:	stp	x2, x3, [x20, #48]
  43c5e4:	b	43c5f4 <nftw@plt+0x39a74>
  43c5e8:	add	x24, x24, #0x1
  43c5ec:	mov	x0, x20
  43c5f0:	bl	439b30 <nftw@plt+0x36fb0>
  43c5f4:	mov	x0, x20
  43c5f8:	bl	439b30 <nftw@plt+0x36fb0>
  43c5fc:	cbnz	x0, 43c5e8 <nftw@plt+0x39a68>
  43c600:	cbnz	x24, 43c8c0 <nftw@plt+0x39d40>
  43c604:	mov	x23, #0x0                   	// #0
  43c608:	mov	x0, x26
  43c60c:	bl	439b30 <nftw@plt+0x36fb0>
  43c610:	mov	x0, x26
  43c614:	bl	439b30 <nftw@plt+0x36fb0>
  43c618:	ldr	x3, [x19, #96]
  43c61c:	ldr	w5, [sp, #584]
  43c620:	add	x0, x3, x27
  43c624:	str	x22, [x3, x27]
  43c628:	add	x27, x27, #0x20
  43c62c:	stp	w21, w28, [x0, #8]
  43c630:	stp	x24, x23, [x0, #16]
  43c634:	cbz	w5, 43c598 <nftw@plt+0x39a18>
  43c638:	ldr	x27, [sp, #240]
  43c63c:	ldr	x23, [sp, #704]
  43c640:	ldr	x25, [sp, #712]
  43c644:	mov	x0, x27
  43c648:	ldr	x1, [sp, #232]
  43c64c:	add	x2, x19, #0x60
  43c650:	mov	x4, x25
  43c654:	mov	x3, x23
  43c658:	bl	43c238 <nftw@plt+0x396b8>
  43c65c:	ldr	x0, [sp, #152]
  43c660:	cbz	x0, 43c6cc <nftw@plt+0x39b4c>
  43c664:	ldr	x19, [sp, #312]
  43c668:	add	x20, x19, x0, lsl #3
  43c66c:	nop
  43c670:	ldr	x1, [x19]
  43c674:	mov	x4, x25
  43c678:	mov	x3, x23
  43c67c:	mov	x0, x27
  43c680:	add	x2, x1, #0x60
  43c684:	add	x1, x1, #0x58
  43c688:	bl	43c238 <nftw@plt+0x396b8>
  43c68c:	ldr	x1, [x19], #8
  43c690:	mov	x4, x25
  43c694:	mov	x3, x23
  43c698:	mov	x0, x27
  43c69c:	mov	x2, #0x88                  	// #136
  43c6a0:	bl	435a90 <nftw@plt+0x32f10>
  43c6a4:	cmp	x19, x20
  43c6a8:	b.ne	43c670 <nftw@plt+0x39af0>  // b.any
  43c6ac:	ldp	x5, x4, [sp, #320]
  43c6b0:	mov	x3, x25
  43c6b4:	mov	x2, x23
  43c6b8:	add	x1, sp, #0x138
  43c6bc:	mov	x0, x27
  43c6c0:	add	x4, x4, x5
  43c6c4:	stp	xzr, x4, [sp, #320]
  43c6c8:	bl	435e10 <nftw@plt+0x33290>
  43c6cc:	ldr	x0, [sp, #360]
  43c6d0:	cbnz	x0, 43c938 <nftw@plt+0x39db8>
  43c6d4:	mov	w0, #0x0                   	// #0
  43c6d8:	ldp	x29, x30, [sp, #48]
  43c6dc:	ldp	x19, x20, [sp, #64]
  43c6e0:	ldp	x21, x22, [sp, #80]
  43c6e4:	ldp	x23, x24, [sp, #96]
  43c6e8:	ldp	x25, x26, [sp, #112]
  43c6ec:	ldp	x27, x28, [sp, #128]
  43c6f0:	add	sp, sp, #0x290
  43c6f4:	ret
  43c6f8:	mov	x27, x24
  43c6fc:	ldr	x0, [sp, #152]
  43c700:	cbnz	x0, 43c664 <nftw@plt+0x39ae4>
  43c704:	ldr	x0, [sp, #360]
  43c708:	cbz	x0, 43c6d4 <nftw@plt+0x39b54>
  43c70c:	b	43c938 <nftw@plt+0x39db8>
  43c710:	mov	x0, x26
  43c714:	bl	439930 <nftw@plt+0x36db0>
  43c718:	ldr	x1, [sp, #160]
  43c71c:	stp	xzr, xzr, [x19, #88]
  43c720:	mov	w0, w0
  43c724:	cmp	x1, x0
  43c728:	b.hi	43c480 <nftw@plt+0x39900>  // b.pmore
  43c72c:	mov	x27, x24
  43c730:	mov	x0, x25
  43c734:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43c738:	mov	w2, #0x0                   	// #0
  43c73c:	add	x1, x1, #0x3e0
  43c740:	blr	x23
  43c744:	b	43c6fc <nftw@plt+0x39b7c>
  43c748:	ldr	x1, [sp, #416]
  43c74c:	sub	x0, x0, x27
  43c750:	str	x0, [sp, #424]
  43c754:	add	x0, x1, x27
  43c758:	str	x0, [sp, #416]
  43c75c:	mov	x0, x26
  43c760:	bl	4399f0 <nftw@plt+0x36e70>
  43c764:	and	w0, w0, #0xffff
  43c768:	str	w0, [sp, #188]
  43c76c:	sub	w0, w0, #0x2
  43c770:	cmp	w0, #0x2
  43c774:	b.ls	43c408 <nftw@plt+0x39888>  // b.plast
  43c778:	mov	x27, x24
  43c77c:	mov	x0, x26
  43c780:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43c784:	add	x1, x1, #0x3c0
  43c788:	bl	4393e0 <nftw@plt+0x36860>
  43c78c:	b	43c6fc <nftw@plt+0x39b7c>
  43c790:	ldp	x1, x0, [x19, #88]
  43c794:	mov	x21, x26
  43c798:	adrp	x3, 439000 <nftw@plt+0x36480>
  43c79c:	mov	x2, #0x20                  	// #32
  43c7a0:	add	x3, x3, #0x2e0
  43c7a4:	ldr	x24, [sp, #240]
  43c7a8:	ldp	x27, x28, [sp, #280]
  43c7ac:	ldr	x26, [sp, #296]
  43c7b0:	ldr	x23, [sp, #704]
  43c7b4:	ldr	x25, [sp, #712]
  43c7b8:	bl	43cb10 <nftw@plt+0x39f90>
  43c7bc:	mov	x0, x26
  43c7c0:	bl	439a58 <nftw@plt+0x36ed8>
  43c7c4:	ldr	w8, [sp, #184]
  43c7c8:	mov	x3, #0x4                   	// #4
  43c7cc:	mov	x1, #0xc                   	// #12
  43c7d0:	add	x22, sp, #0x150
  43c7d4:	cmp	w8, #0x0
  43c7d8:	stp	x25, x19, [sp, #16]
  43c7dc:	csel	x1, x1, x3, ne  // ne = any
  43c7e0:	ldr	x3, [sp, #696]
  43c7e4:	stp	x3, x23, [sp]
  43c7e8:	add	x1, x1, x27
  43c7ec:	ldr	x3, [sp, #176]
  43c7f0:	stp	x22, x20, [sp, #32]
  43c7f4:	ldr	w7, [sp, #688]
  43c7f8:	ldr	x2, [sp, #480]
  43c7fc:	str	x2, [x19]
  43c800:	ldr	x5, [sp, #656]
  43c804:	sub	x3, x2, x3
  43c808:	ldr	x2, [sp, #168]
  43c80c:	str	x2, [x19, #24]
  43c810:	str	x3, [x19, #16]
  43c814:	and	w0, w0, #0xff
  43c818:	add	x1, x2, x1
  43c81c:	stp	w8, w0, [x19, #44]
  43c820:	mov	x2, x1
  43c824:	str	x2, [x19, #32]
  43c828:	ldr	x1, [sp, #488]
  43c82c:	str	x1, [x19, #8]
  43c830:	ldr	w1, [sp, #188]
  43c834:	mov	x0, x24
  43c838:	str	w1, [x19, #40]
  43c83c:	ldr	x1, [sp, #192]
  43c840:	stp	xzr, xzr, [x19, #56]
  43c844:	ldr	x6, [sp, #664]
  43c848:	stp	xzr, xzr, [x19, #72]
  43c84c:	ldr	x3, [sp, #672]
  43c850:	str	x2, [sp, #168]
  43c854:	ldr	x4, [sp, #680]
  43c858:	stp	xzr, xzr, [x19, #104]
  43c85c:	mov	x2, x26
  43c860:	stp	xzr, xzr, [x19, #120]
  43c864:	bl	43a1b8 <nftw@plt+0x37638>
  43c868:	cbz	w0, 43c6f8 <nftw@plt+0x39b78>
  43c86c:	ldr	w0, [sp, #520]
  43c870:	cbnz	w0, 43c6f8 <nftw@plt+0x39b78>
  43c874:	ldr	x1, [sp, #424]
  43c878:	ldr	w0, [sp, #456]
  43c87c:	cbz	x1, 43c95c <nftw@plt+0x39ddc>
  43c880:	cbnz	w0, 43c6f8 <nftw@plt+0x39b78>
  43c884:	ldr	x0, [sp, #416]
  43c888:	str	x0, [sp, #176]
  43c88c:	mov	x0, x28
  43c890:	bl	439930 <nftw@plt+0x36db0>
  43c894:	str	wzr, [sp, #184]
  43c898:	mov	x1, #0xffffffff            	// #4294967295
  43c89c:	mov	w27, w0
  43c8a0:	cmp	x1, w0, uxtw
  43c8a4:	b.ne	43c3b0 <nftw@plt+0x39830>  // b.any
  43c8a8:	mov	x0, x28
  43c8ac:	bl	439990 <nftw@plt+0x36e10>
  43c8b0:	mov	w1, #0x1                   	// #1
  43c8b4:	mov	x27, x0
  43c8b8:	str	w1, [sp, #184]
  43c8bc:	b	43c3b0 <nftw@plt+0x39830>
  43c8c0:	ldr	x0, [sp, #240]
  43c8c4:	lsl	x1, x24, #3
  43c8c8:	ldr	x2, [sp, #704]
  43c8cc:	ldr	x3, [sp, #712]
  43c8d0:	bl	435b68 <nftw@plt+0x32fe8>
  43c8d4:	mov	x23, x0
  43c8d8:	cbz	x0, 43c638 <nftw@plt+0x39ab8>
  43c8dc:	mov	x0, x26
  43c8e0:	mov	x24, #0x0                   	// #0
  43c8e4:	mov	x26, x24
  43c8e8:	mov	x24, x20
  43c8ec:	mov	x20, x0
  43c8f0:	str	x19, [sp, #200]
  43c8f4:	mov	x19, x23
  43c8f8:	b	43c908 <nftw@plt+0x39d88>
  43c8fc:	add	x26, x26, #0x1
  43c900:	stp	w25, w0, [x19]
  43c904:	add	x19, x19, #0x8
  43c908:	mov	x0, x20
  43c90c:	bl	439b30 <nftw@plt+0x36fb0>
  43c910:	mov	x25, x0
  43c914:	mov	x0, x20
  43c918:	bl	439b30 <nftw@plt+0x36fb0>
  43c91c:	cbnz	x25, 43c8fc <nftw@plt+0x39d7c>
  43c920:	mov	x0, x20
  43c924:	mov	x20, x24
  43c928:	mov	x24, x26
  43c92c:	mov	x26, x0
  43c930:	ldr	x19, [sp, #200]
  43c934:	b	43c618 <nftw@plt+0x39a98>
  43c938:	ldp	x5, x4, [sp, #344]
  43c93c:	mov	x3, x25
  43c940:	mov	x2, x23
  43c944:	mov	x0, x27
  43c948:	add	x1, sp, #0x150
  43c94c:	add	x4, x4, x5
  43c950:	stp	xzr, x4, [sp, #344]
  43c954:	bl	435e10 <nftw@plt+0x33290>
  43c958:	b	43c6d4 <nftw@plt+0x39b54>
  43c95c:	mov	x27, x24
  43c960:	mov	x24, x22
  43c964:	cbnz	w0, 43c6fc <nftw@plt+0x39b7c>
  43c968:	add	x0, sp, #0x200
  43c96c:	mov	x1, x24
  43c970:	ldr	x4, [sp, #152]
  43c974:	add	x19, sp, #0x170
  43c978:	ldp	x2, x3, [x0, #-200]
  43c97c:	stp	x2, x3, [sp, #368]
  43c980:	ldr	x0, [sp, #328]
  43c984:	mov	x3, x25
  43c988:	mov	x2, x23
  43c98c:	stp	x0, x4, [sp, #384]
  43c990:	mov	x0, x27
  43c994:	bl	435e10 <nftw@plt+0x33290>
  43c998:	cbz	w0, 43c6d4 <nftw@plt+0x39b54>
  43c99c:	mov	x1, x19
  43c9a0:	mov	x3, x25
  43c9a4:	mov	x2, x23
  43c9a8:	mov	x0, x27
  43c9ac:	bl	435e10 <nftw@plt+0x33290>
  43c9b0:	cbz	w0, 43c6d4 <nftw@plt+0x39b54>
  43c9b4:	ldp	x19, x22, [sp, #360]
  43c9b8:	mov	x2, #0x18                  	// #24
  43c9bc:	ldr	x20, [sp, #336]
  43c9c0:	adrp	x3, 439000 <nftw@plt+0x36480>
  43c9c4:	add	x3, x3, #0x4a0
  43c9c8:	mov	x0, x20
  43c9cc:	mov	x1, x19
  43c9d0:	ldr	x21, [sp, #392]
  43c9d4:	bl	43cb10 <nftw@plt+0x39f90>
  43c9d8:	mov	x3, x25
  43c9dc:	mov	x2, x23
  43c9e0:	mov	x0, x27
  43c9e4:	mov	x1, #0xa0                  	// #160
  43c9e8:	bl	435b68 <nftw@plt+0x32fe8>
  43c9ec:	cbz	x0, 43c6d4 <nftw@plt+0x39b54>
  43c9f0:	ldr	x1, [sp, #696]
  43c9f4:	stp	xzr, x1, [x0]
  43c9f8:	ldr	x1, [sp, #192]
  43c9fc:	str	x1, [x0, #16]
  43ca00:	ldr	x1, [sp, #248]
  43ca04:	str	x1, [x0, #56]
  43ca08:	ldr	x1, [sp, #256]
  43ca0c:	str	x1, [x0, #64]
  43ca10:	ldr	x1, [sp, #264]
  43ca14:	str	x1, [x0, #72]
  43ca18:	ldr	x1, [sp, #272]
  43ca1c:	str	x1, [x0, #80]
  43ca20:	ldr	x1, [sp, #656]
  43ca24:	str	x1, [x0, #88]
  43ca28:	ldr	x1, [sp, #664]
  43ca2c:	str	x1, [x0, #96]
  43ca30:	ldr	x1, [sp, #672]
  43ca34:	str	x1, [x0, #104]
  43ca38:	ldr	x1, [sp, #680]
  43ca3c:	str	x1, [x0, #112]
  43ca40:	ldr	w1, [sp, #688]
  43ca44:	str	w1, [x0, #120]
  43ca48:	ldr	x1, [sp, #728]
  43ca4c:	stp	x20, x19, [x0, #24]
  43ca50:	stp	x22, x21, [x0, #40]
  43ca54:	stp	xzr, xzr, [x0, #128]
  43ca58:	stp	xzr, xzr, [x0, #144]
  43ca5c:	cbz	x1, 43ca64 <nftw@plt+0x39ee4>
  43ca60:	str	x0, [x1]
  43ca64:	ldr	w1, [x27, #8]
  43ca68:	add	x3, x27, #0x20
  43ca6c:	cbnz	w1, 43cae0 <nftw@plt+0x39f60>
  43ca70:	ldr	x1, [x27, #32]
  43ca74:	cbz	x1, 43ca88 <nftw@plt+0x39f08>
  43ca78:	mov	x2, x1
  43ca7c:	ldr	x1, [x1]
  43ca80:	cbnz	x1, 43ca78 <nftw@plt+0x39ef8>
  43ca84:	mov	x3, x2
  43ca88:	str	x0, [x3]
  43ca8c:	ldr	x2, [sp, #720]
  43ca90:	adrp	x1, 43c000 <nftw@plt+0x39480>
  43ca94:	add	x1, x1, #0xc8
  43ca98:	mov	w0, #0x1                   	// #1
  43ca9c:	ldp	x29, x30, [sp, #48]
  43caa0:	str	x1, [x2]
  43caa4:	ldp	x19, x20, [sp, #64]
  43caa8:	ldp	x21, x22, [sp, #80]
  43caac:	ldp	x23, x24, [sp, #96]
  43cab0:	ldp	x25, x26, [sp, #112]
  43cab4:	ldp	x27, x28, [sp, #128]
  43cab8:	add	sp, sp, #0x290
  43cabc:	ret
  43cac0:	ldxr	x1, [x2]
  43cac4:	cbnz	x1, 43cad0 <nftw@plt+0x39f50>
  43cac8:	stlxr	w4, x0, [x2]
  43cacc:	cbnz	w4, 43cac0 <nftw@plt+0x39f40>
  43cad0:	dmb	ish
  43cad4:	cmp	x1, #0x0
  43cad8:	b.eq	43ca8c <nftw@plt+0x39f0c>  // b.none
  43cadc:	nop
  43cae0:	mov	x2, x3
  43cae4:	b	43caec <nftw@plt+0x39f6c>
  43cae8:	mov	x2, x1
  43caec:	ldar	x1, [x2]
  43caf0:	cbnz	x1, 43cae8 <nftw@plt+0x39f68>
  43caf4:	b	43cac0 <nftw@plt+0x39f40>
  43caf8:	mov	x27, x24
  43cafc:	b	43c644 <nftw@plt+0x39ac4>
  43cb00:	add	x24, sp, #0x150
  43cb04:	str	xzr, [sp, #152]
  43cb08:	b	43c968 <nftw@plt+0x39de8>
  43cb0c:	nop
  43cb10:	cmp	x1, #0x1
  43cb14:	b.ls	43cc90 <nftw@plt+0x3a110>  // b.plast
  43cb18:	stp	x29, x30, [sp, #-80]!
  43cb1c:	mov	x29, sp
  43cb20:	stp	x19, x20, [sp, #16]
  43cb24:	mov	x20, x2
  43cb28:	stp	x21, x22, [sp, #32]
  43cb2c:	mov	x21, x0
  43cb30:	stp	x23, x24, [sp, #48]
  43cb34:	mov	x23, x1
  43cb38:	mov	x24, x3
  43cb3c:	str	x25, [sp, #64]
  43cb40:	lsr	x0, x23, #1
  43cb44:	mov	x4, #0x0                   	// #0
  43cb48:	madd	x0, x0, x20, x21
  43cb4c:	cbz	x20, 43cb6c <nftw@plt+0x39fec>
  43cb50:	ldrb	w2, [x0, x4]
  43cb54:	ldrb	w1, [x21, x4]
  43cb58:	strb	w2, [x21, x4]
  43cb5c:	strb	w1, [x0, x4]
  43cb60:	add	x4, x4, #0x1
  43cb64:	cmp	x20, x4
  43cb68:	b.ne	43cb50 <nftw@plt+0x39fd0>  // b.any
  43cb6c:	add	x19, x21, x20
  43cb70:	mov	x25, #0x0                   	// #0
  43cb74:	mov	x22, #0x1                   	// #1
  43cb78:	b	43cb8c <nftw@plt+0x3a00c>
  43cb7c:	add	x22, x22, #0x1
  43cb80:	add	x19, x19, x20
  43cb84:	cmp	x22, x23
  43cb88:	b.cs	43cbf8 <nftw@plt+0x3a078>  // b.hs, b.nlast
  43cb8c:	mov	x1, x19
  43cb90:	mov	x0, x21
  43cb94:	blr	x24
  43cb98:	cmp	w0, #0x0
  43cb9c:	add	x3, x25, #0x1
  43cba0:	mov	x5, x3
  43cba4:	b.le	43cb7c <nftw@plt+0x39ffc>
  43cba8:	add	x3, x25, #0x2
  43cbac:	cmp	x5, x22
  43cbb0:	mov	x25, x22
  43cbb4:	b.eq	43cb7c <nftw@plt+0x39ffc>  // b.none
  43cbb8:	madd	x0, x20, x5, x21
  43cbbc:	cbz	x20, 43cbe4 <nftw@plt+0x3a064>
  43cbc0:	mov	x4, #0x0                   	// #0
  43cbc4:	nop
  43cbc8:	ldrb	w1, [x19, x4]
  43cbcc:	ldrb	w2, [x0, x4]
  43cbd0:	strb	w1, [x0, x4]
  43cbd4:	strb	w2, [x19, x4]
  43cbd8:	add	x4, x4, #0x1
  43cbdc:	cmp	x20, x4
  43cbe0:	b.ne	43cbc8 <nftw@plt+0x3a048>  // b.any
  43cbe4:	add	x22, x22, #0x1
  43cbe8:	mov	x25, x5
  43cbec:	add	x19, x19, x20
  43cbf0:	cmp	x22, x23
  43cbf4:	b.cc	43cb8c <nftw@plt+0x3a00c>  // b.lo, b.ul, b.last
  43cbf8:	cbnz	x25, 43cc64 <nftw@plt+0x3a0e4>
  43cbfc:	sub	x0, x23, #0x1
  43cc00:	cmp	x23, x25, lsl #1
  43cc04:	madd	x3, x20, x3, x21
  43cc08:	sub	x23, x0, x25
  43cc0c:	b.ls	43cc48 <nftw@plt+0x3a0c8>  // b.plast
  43cc10:	mov	x0, x21
  43cc14:	mov	x1, x25
  43cc18:	mov	x21, x3
  43cc1c:	mov	x2, x20
  43cc20:	mov	x3, x24
  43cc24:	bl	43cb10 <nftw@plt+0x39f90>
  43cc28:	cmp	x23, #0x1
  43cc2c:	b.hi	43cb40 <nftw@plt+0x39fc0>  // b.pmore
  43cc30:	ldp	x19, x20, [sp, #16]
  43cc34:	ldp	x21, x22, [sp, #32]
  43cc38:	ldp	x23, x24, [sp, #48]
  43cc3c:	ldr	x25, [sp, #64]
  43cc40:	ldp	x29, x30, [sp], #80
  43cc44:	ret
  43cc48:	mov	x1, x23
  43cc4c:	mov	x0, x3
  43cc50:	mov	x23, x25
  43cc54:	mov	x3, x24
  43cc58:	mov	x2, x20
  43cc5c:	bl	43cb10 <nftw@plt+0x39f90>
  43cc60:	b	43cc28 <nftw@plt+0x3a0a8>
  43cc64:	madd	x1, x25, x20, x21
  43cc68:	cbz	x20, 43cbfc <nftw@plt+0x3a07c>
  43cc6c:	mov	x0, #0x0                   	// #0
  43cc70:	ldrb	w4, [x1, x0]
  43cc74:	ldrb	w2, [x21, x0]
  43cc78:	strb	w4, [x21, x0]
  43cc7c:	strb	w2, [x1, x0]
  43cc80:	add	x0, x0, #0x1
  43cc84:	cmp	x20, x0
  43cc88:	b.ne	43cc70 <nftw@plt+0x3a0f0>  // b.any
  43cc8c:	b	43cbfc <nftw@plt+0x3a07c>
  43cc90:	ret
  43cc94:	nop
  43cc98:	sub	w5, w1, #0x1
  43cc9c:	mov	x4, x0
  43cca0:	cmp	w5, #0x4f
  43cca4:	b.ls	43ccb0 <nftw@plt+0x3a130>  // b.plast
  43cca8:	mov	x0, #0x0                   	// #0
  43ccac:	ret
  43ccb0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43ccb4:	add	x0, x0, #0x440
  43ccb8:	ldrb	w0, [x0, w5, uxtw]
  43ccbc:	adr	x5, 43ccc8 <nftw@plt+0x3a148>
  43ccc0:	add	x0, x5, w0, sxtb #2
  43ccc4:	br	x0
  43ccc8:	cbz	x3, 43cca8 <nftw@plt+0x3a128>
  43cccc:	ldp	w0, w5, [x4, #40]
  43ccd0:	cmp	w0, w5
  43ccd4:	b.ge	43cca8 <nftw@plt+0x3a128>  // b.tcont
  43ccd8:	mov	w5, #0x18                  	// #24
  43ccdc:	add	w7, w0, #0x1
  43cce0:	ldr	x6, [x4, #32]
  43cce4:	smull	x5, w0, w5
  43cce8:	add	x0, x6, x5
  43ccec:	str	wzr, [x0, #4]
  43ccf0:	str	w7, [x4, #40]
  43ccf4:	str	w1, [x6, x5]
  43ccf8:	stp	x2, x3, [x0, #8]
  43ccfc:	ret
  43cd00:	cbnz	x2, 43cccc <nftw@plt+0x3a14c>
  43cd04:	mov	x0, #0x0                   	// #0
  43cd08:	b	43ccac <nftw@plt+0x3a12c>
  43cd0c:	cmp	x2, #0x0
  43cd10:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43cd14:	b.ne	43cccc <nftw@plt+0x3a14c>  // b.any
  43cd18:	mov	x0, #0x0                   	// #0
  43cd1c:	b	43ccac <nftw@plt+0x3a12c>
  43cd20:	ldr	x3, [x0, #24]
  43cd24:	mov	x2, x1
  43cd28:	mov	w4, #0x4f                  	// #79
  43cd2c:	ldrb	w1, [x3]
  43cd30:	cmp	w1, #0x52
  43cd34:	ccmp	w1, w4, #0x4, ne  // ne = any
  43cd38:	b.ne	43cd64 <nftw@plt+0x3a1e4>  // b.any
  43cd3c:	ldr	w5, [x0, #72]
  43cd40:	cmp	w1, #0x52
  43cd44:	mov	w1, #0x20                  	// #32
  43cd48:	add	w4, w5, #0x3
  43cd4c:	b.eq	43cd6c <nftw@plt+0x3a1ec>  // b.none
  43cd50:	add	x3, x3, #0x1
  43cd54:	str	x3, [x0, #24]
  43cd58:	str	w4, [x0, #72]
  43cd5c:	mov	x3, #0x0                   	// #0
  43cd60:	b	43cc98 <nftw@plt+0x3a118>
  43cd64:	mov	x0, x2
  43cd68:	ret
  43cd6c:	add	w4, w5, #0x2
  43cd70:	add	x3, x3, #0x1
  43cd74:	str	x3, [x0, #24]
  43cd78:	mov	w1, #0x1f                  	// #31
  43cd7c:	str	w4, [x0, #72]
  43cd80:	mov	x3, #0x0                   	// #0
  43cd84:	b	43cc98 <nftw@plt+0x3a118>
  43cd88:	cbz	x1, 43ce68 <nftw@plt+0x3a2e8>
  43cd8c:	stp	x29, x30, [sp, #-32]!
  43cd90:	mov	x29, sp
  43cd94:	stp	x19, x20, [sp, #16]
  43cd98:	mov	x20, x0
  43cd9c:	mov	x19, x1
  43cda0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43cda4:	add	x0, x0, #0x490
  43cda8:	ldr	w1, [x19]
  43cdac:	sub	w1, w1, #0x1
  43cdb0:	cmp	w1, #0x4f
  43cdb4:	b.ls	43cdc4 <nftw@plt+0x3a244>  // b.plast
  43cdb8:	ldp	x19, x20, [sp, #16]
  43cdbc:	ldp	x29, x30, [sp], #32
  43cdc0:	ret
  43cdc4:	ldrb	w1, [x0, w1, uxtw]
  43cdc8:	adr	x2, 43cdd4 <nftw@plt+0x3a254>
  43cdcc:	add	x1, x2, w1, sxtb #2
  43cdd0:	br	x1
  43cdd4:	ldr	x0, [x19, #8]
  43cdd8:	ldr	w0, [x0]
  43cddc:	cmp	w0, #0x5
  43cde0:	b.ne	43cdf0 <nftw@plt+0x3a270>  // b.any
  43cde4:	ldr	w0, [x20, #348]
  43cde8:	add	w0, w0, #0x1
  43cdec:	str	w0, [x20, #348]
  43cdf0:	ldr	w0, [x20, #308]
  43cdf4:	cmp	w0, #0x800
  43cdf8:	b.gt	43cdb8 <nftw@plt+0x3a238>
  43cdfc:	ldr	x1, [x19, #8]
  43ce00:	add	w0, w0, #0x1
  43ce04:	str	w0, [x20, #308]
  43ce08:	mov	x0, x20
  43ce0c:	bl	43cd88 <nftw@plt+0x3a208>
  43ce10:	ldr	x1, [x19, #16]
  43ce14:	mov	x0, x20
  43ce18:	bl	43cd88 <nftw@plt+0x3a208>
  43ce1c:	ldr	w0, [x20, #308]
  43ce20:	sub	w0, w0, #0x1
  43ce24:	str	w0, [x20, #308]
  43ce28:	ldp	x19, x20, [sp, #16]
  43ce2c:	ldp	x29, x30, [sp], #32
  43ce30:	ret
  43ce34:	ldr	x19, [x19, #8]
  43ce38:	cbnz	x19, 43cda8 <nftw@plt+0x3a228>
  43ce3c:	b	43cdb8 <nftw@plt+0x3a238>
  43ce40:	ldr	x19, [x19, #16]
  43ce44:	cbnz	x19, 43cda8 <nftw@plt+0x3a228>
  43ce48:	b	43cdb8 <nftw@plt+0x3a238>
  43ce4c:	ldr	w0, [x20, #364]
  43ce50:	add	w0, w0, #0x1
  43ce54:	str	w0, [x20, #364]
  43ce58:	ldr	w0, [x20, #308]
  43ce5c:	cmp	w0, #0x800
  43ce60:	b.gt	43cdb8 <nftw@plt+0x3a238>
  43ce64:	b	43cdfc <nftw@plt+0x3a27c>
  43ce68:	ret
  43ce6c:	nop
  43ce70:	cbz	x2, 43cf10 <nftw@plt+0x3a390>
  43ce74:	stp	x29, x30, [sp, #-48]!
  43ce78:	mov	x29, sp
  43ce7c:	stp	x19, x20, [sp, #16]
  43ce80:	mov	x20, x1
  43ce84:	mov	x19, x0
  43ce88:	stp	x21, x22, [sp, #32]
  43ce8c:	add	x22, x1, x2
  43ce90:	ldr	x1, [x0, #256]
  43ce94:	b	43ceb8 <nftw@plt+0x3a338>
  43ce98:	mov	x0, x1
  43ce9c:	add	x1, x1, #0x1
  43cea0:	str	x1, [x19, #256]
  43cea4:	add	x20, x20, #0x1
  43cea8:	cmp	x20, x22
  43ceac:	strb	w21, [x19, x0]
  43ceb0:	strb	w21, [x19, #264]
  43ceb4:	b.eq	43cf00 <nftw@plt+0x3a380>  // b.none
  43ceb8:	ldrb	w21, [x20]
  43cebc:	cmp	x1, #0xff
  43cec0:	b.ne	43ce98 <nftw@plt+0x3a318>  // b.any
  43cec4:	ldp	x3, x2, [x19, #272]
  43cec8:	strb	wzr, [x19, #255]
  43cecc:	mov	x0, x19
  43ced0:	add	x20, x20, #0x1
  43ced4:	blr	x3
  43ced8:	ldr	x2, [x19, #320]
  43cedc:	mov	x0, #0x0                   	// #0
  43cee0:	mov	x1, #0x1                   	// #1
  43cee4:	str	x1, [x19, #256]
  43cee8:	add	x2, x2, x1
  43ceec:	str	x2, [x19, #320]
  43cef0:	strb	w21, [x19, x0]
  43cef4:	cmp	x20, x22
  43cef8:	strb	w21, [x19, #264]
  43cefc:	b.ne	43ceb8 <nftw@plt+0x3a338>  // b.any
  43cf00:	ldp	x19, x20, [sp, #16]
  43cf04:	ldp	x21, x22, [sp, #32]
  43cf08:	ldp	x29, x30, [sp], #48
  43cf0c:	ret
  43cf10:	ret
  43cf14:	nop
  43cf18:	ldr	x3, [x0]
  43cf1c:	mov	x6, x0
  43cf20:	ldrb	w4, [x3]
  43cf24:	cmp	w4, #0x6e
  43cf28:	b.eq	43cfb4 <nftw@plt+0x3a434>  // b.none
  43cf2c:	sub	w0, w4, #0x30
  43cf30:	and	w0, w0, #0xff
  43cf34:	cmp	w0, #0x9
  43cf38:	b.hi	43cfdc <nftw@plt+0x3a45c>  // b.pmore
  43cf3c:	mov	w9, #0x0                   	// #0
  43cf40:	mov	w8, #0xcccd                	// #52429
  43cf44:	add	x3, x3, #0x1
  43cf48:	mov	w0, #0x0                   	// #0
  43cf4c:	mov	w7, #0x7fffffff            	// #2147483647
  43cf50:	movk	w8, #0xcccc, lsl #16
  43cf54:	b	43cf68 <nftw@plt+0x3a3e8>
  43cf58:	umull	x1, w1, w8
  43cf5c:	lsr	x1, x1, #35
  43cf60:	cmp	w1, w0
  43cf64:	b.lt	43cfac <nftw@plt+0x3a42c>  // b.tstop
  43cf68:	str	x3, [x6]
  43cf6c:	add	w0, w0, w0, lsl #2
  43cf70:	add	x3, x3, #0x1
  43cf74:	ldurb	w1, [x3, #-1]
  43cf78:	add	w5, w4, w0, lsl #1
  43cf7c:	sub	w0, w5, #0x30
  43cf80:	sub	w2, w1, #0x30
  43cf84:	mov	w4, w1
  43cf88:	sub	w1, w7, w2
  43cf8c:	and	w2, w2, #0xff
  43cf90:	cmp	w2, #0x9
  43cf94:	b.ls	43cf58 <nftw@plt+0x3a3d8>  // b.plast
  43cf98:	cmp	w9, #0x0
  43cf9c:	mov	w1, #0x30                  	// #48
  43cfa0:	sub	w5, w1, w5
  43cfa4:	csel	w0, w5, w0, ne  // ne = any
  43cfa8:	ret
  43cfac:	mov	w0, #0xffffffff            	// #-1
  43cfb0:	ret
  43cfb4:	add	x1, x3, #0x1
  43cfb8:	str	x1, [x0]
  43cfbc:	ldrb	w4, [x3, #1]
  43cfc0:	sub	w0, w4, #0x30
  43cfc4:	and	w0, w0, #0xff
  43cfc8:	cmp	w0, #0x9
  43cfcc:	b.hi	43cfdc <nftw@plt+0x3a45c>  // b.pmore
  43cfd0:	mov	x3, x1
  43cfd4:	mov	w9, #0x1                   	// #1
  43cfd8:	b	43cf40 <nftw@plt+0x3a3c0>
  43cfdc:	mov	w0, #0x0                   	// #0
  43cfe0:	ret
  43cfe4:	nop
  43cfe8:	mov	x1, x0
  43cfec:	ldr	w0, [x0, #40]
  43cff0:	ldr	w2, [x1, #44]
  43cff4:	cmp	w0, w2
  43cff8:	b.ge	43d044 <nftw@plt+0x3a4c4>  // b.tcont
  43cffc:	stp	x29, x30, [sp, #-16]!
  43d000:	mov	w2, #0x18                  	// #24
  43d004:	add	w5, w0, #0x1
  43d008:	mov	x29, sp
  43d00c:	ldr	x3, [x1, #32]
  43d010:	smull	x2, w0, w2
  43d014:	mov	w4, #0x42                  	// #66
  43d018:	add	x0, x1, #0x18
  43d01c:	add	x10, x3, x2
  43d020:	str	wzr, [x10, #4]
  43d024:	str	w5, [x1, #40]
  43d028:	str	w4, [x3, x2]
  43d02c:	bl	43cf18 <nftw@plt+0x3a398>
  43d030:	sxtw	x0, w0
  43d034:	str	x0, [x10, #8]
  43d038:	mov	x0, x10
  43d03c:	ldp	x29, x30, [sp], #16
  43d040:	ret
  43d044:	mov	x10, #0x0                   	// #0
  43d048:	mov	x0, x10
  43d04c:	ret
  43d050:	ldr	x1, [x0, #24]
  43d054:	mov	x10, x0
  43d058:	ldrb	w0, [x1]
  43d05c:	cmp	w0, #0x5f
  43d060:	b.eq	43d0a4 <nftw@plt+0x3a524>  // b.none
  43d064:	cmp	w0, #0x6e
  43d068:	b.eq	43d0bc <nftw@plt+0x3a53c>  // b.none
  43d06c:	stp	x29, x30, [sp, #-16]!
  43d070:	add	x0, x10, #0x18
  43d074:	mov	x29, sp
  43d078:	bl	43cf18 <nftw@plt+0x3a398>
  43d07c:	adds	w0, w0, #0x1
  43d080:	b.mi	43d0b4 <nftw@plt+0x3a534>  // b.first
  43d084:	ldr	x1, [x10, #24]
  43d088:	ldrb	w2, [x1]
  43d08c:	cmp	w2, #0x5f
  43d090:	b.ne	43d0b4 <nftw@plt+0x3a534>  // b.any
  43d094:	add	x1, x1, #0x1
  43d098:	str	x1, [x10, #24]
  43d09c:	ldp	x29, x30, [sp], #16
  43d0a0:	ret
  43d0a4:	add	x1, x1, #0x1
  43d0a8:	mov	w0, #0x0                   	// #0
  43d0ac:	str	x1, [x10, #24]
  43d0b0:	ret
  43d0b4:	mov	w0, #0xffffffff            	// #-1
  43d0b8:	b	43d09c <nftw@plt+0x3a51c>
  43d0bc:	mov	w0, #0xffffffff            	// #-1
  43d0c0:	ret
  43d0c4:	nop
  43d0c8:	ldr	x1, [x0, #24]
  43d0cc:	ldrb	w2, [x1]
  43d0d0:	cmp	w2, #0x54
  43d0d4:	b.ne	43d140 <nftw@plt+0x3a5c0>  // b.any
  43d0d8:	stp	x29, x30, [sp, #-16]!
  43d0dc:	add	x1, x1, #0x1
  43d0e0:	mov	x11, x0
  43d0e4:	mov	x29, sp
  43d0e8:	str	x1, [x0, #24]
  43d0ec:	bl	43d050 <nftw@plt+0x3a4d0>
  43d0f0:	tbnz	w0, #31, 43d134 <nftw@plt+0x3a5b4>
  43d0f4:	ldp	w1, w2, [x11, #40]
  43d0f8:	cmp	w1, w2
  43d0fc:	b.ge	43d134 <nftw@plt+0x3a5b4>  // b.tcont
  43d100:	mov	w2, #0x18                  	// #24
  43d104:	add	w5, w1, #0x1
  43d108:	ldr	x3, [x11, #32]
  43d10c:	smull	x2, w1, w2
  43d110:	sxtw	x1, w0
  43d114:	mov	w4, #0x5                   	// #5
  43d118:	add	x0, x3, x2
  43d11c:	str	wzr, [x0, #4]
  43d120:	str	w5, [x11, #40]
  43d124:	str	w4, [x3, x2]
  43d128:	str	x1, [x0, #8]
  43d12c:	ldp	x29, x30, [sp], #16
  43d130:	ret
  43d134:	mov	x0, #0x0                   	// #0
  43d138:	ldp	x29, x30, [sp], #16
  43d13c:	ret
  43d140:	mov	x0, #0x0                   	// #0
  43d144:	ret
  43d148:	mov	x10, x0
  43d14c:	stp	x29, x30, [sp, #-16]!
  43d150:	add	x0, x0, #0x18
  43d154:	mov	x29, sp
  43d158:	bl	43cf18 <nftw@plt+0x3a398>
  43d15c:	cmp	w0, #0x0
  43d160:	b.le	43d258 <nftw@plt+0x3a6d8>
  43d164:	mov	w1, w0
  43d168:	sxtw	x3, w0
  43d16c:	ldr	x0, [x10, #8]
  43d170:	ldr	x2, [x10, #24]
  43d174:	sub	x0, x0, x2
  43d178:	cmp	x0, w1, sxtw
  43d17c:	b.lt	43d250 <nftw@plt+0x3a6d0>  // b.tstop
  43d180:	ldr	w0, [x10, #16]
  43d184:	add	x3, x2, x3
  43d188:	str	x3, [x10, #24]
  43d18c:	tbz	w0, #2, 43d19c <nftw@plt+0x3a61c>
  43d190:	ldrb	w0, [x2, w1, sxtw]
  43d194:	cmp	w0, #0x24
  43d198:	b.eq	43d264 <nftw@plt+0x3a6e4>  // b.none
  43d19c:	ldp	w0, w3, [x10, #40]
  43d1a0:	cmp	w1, #0x9
  43d1a4:	b.gt	43d1e0 <nftw@plt+0x3a660>
  43d1a8:	cmp	w3, w0
  43d1ac:	b.le	43d250 <nftw@plt+0x3a6d0>
  43d1b0:	ldr	x4, [x10, #32]
  43d1b4:	mov	w5, #0x18                  	// #24
  43d1b8:	add	w3, w0, #0x1
  43d1bc:	smaddl	x0, w0, w5, x4
  43d1c0:	str	wzr, [x0, #4]
  43d1c4:	str	w3, [x10, #40]
  43d1c8:	cbz	x2, 43d250 <nftw@plt+0x3a6d0>
  43d1cc:	stp	xzr, x2, [x0]
  43d1d0:	str	w1, [x0, #16]
  43d1d4:	str	x0, [x10, #64]
  43d1d8:	ldp	x29, x30, [sp], #16
  43d1dc:	ret
  43d1e0:	mov	x4, #0x475f                	// #18271
  43d1e4:	ldr	x5, [x2]
  43d1e8:	movk	x4, #0x4f4c, lsl #16
  43d1ec:	movk	x4, #0x4142, lsl #32
  43d1f0:	movk	x4, #0x5f4c, lsl #48
  43d1f4:	cmp	x5, x4
  43d1f8:	b.ne	43d224 <nftw@plt+0x3a6a4>  // b.any
  43d1fc:	ldrb	w4, [x2, #8]
  43d200:	mov	w6, #0x5f                  	// #95
  43d204:	mov	w5, #0x24                  	// #36
  43d208:	cmp	w4, #0x2e
  43d20c:	ccmp	w4, w6, #0x4, ne  // ne = any
  43d210:	ccmp	w4, w5, #0x4, ne  // ne = any
  43d214:	b.ne	43d224 <nftw@plt+0x3a6a4>  // b.any
  43d218:	ldrb	w4, [x2, #9]
  43d21c:	cmp	w4, #0x4e
  43d220:	b.eq	43d27c <nftw@plt+0x3a6fc>  // b.none
  43d224:	cmp	w3, w0
  43d228:	b.le	43d250 <nftw@plt+0x3a6d0>
  43d22c:	ldr	x4, [x10, #32]
  43d230:	mov	w5, #0x18                  	// #24
  43d234:	add	w3, w0, #0x1
  43d238:	smaddl	x0, w0, w5, x4
  43d23c:	str	wzr, [x0, #4]
  43d240:	str	w3, [x10, #40]
  43d244:	stp	xzr, x2, [x0]
  43d248:	str	w1, [x0, #16]
  43d24c:	b	43d1d4 <nftw@plt+0x3a654>
  43d250:	mov	x0, #0x0                   	// #0
  43d254:	b	43d1d4 <nftw@plt+0x3a654>
  43d258:	mov	x0, #0x0                   	// #0
  43d25c:	ldp	x29, x30, [sp], #16
  43d260:	ret
  43d264:	add	x3, x3, #0x1
  43d268:	str	x3, [x10, #24]
  43d26c:	cmp	w1, #0x9
  43d270:	ldp	w0, w3, [x10, #40]
  43d274:	b.le	43d1a8 <nftw@plt+0x3a628>
  43d278:	b	43d1e0 <nftw@plt+0x3a660>
  43d27c:	ldr	w2, [x10, #72]
  43d280:	cmp	w3, w0
  43d284:	add	w2, w2, #0x16
  43d288:	sub	w1, w2, w1
  43d28c:	str	w1, [x10, #72]
  43d290:	b.le	43d250 <nftw@plt+0x3a6d0>
  43d294:	mov	w1, #0x18                  	// #24
  43d298:	add	w2, w0, #0x1
  43d29c:	ldr	x3, [x10, #32]
  43d2a0:	smull	x1, w0, w1
  43d2a4:	str	w2, [x10, #40]
  43d2a8:	mov	w4, #0x15                  	// #21
  43d2ac:	add	x0, x3, x1
  43d2b0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43d2b4:	add	x2, x2, #0x2e0
  43d2b8:	str	xzr, [x3, x1]
  43d2bc:	str	x2, [x0, #8]
  43d2c0:	str	w4, [x0, #16]
  43d2c4:	b	43d1d4 <nftw@plt+0x3a654>
  43d2c8:	ldr	x3, [x0, #24]
  43d2cc:	mov	x11, x0
  43d2d0:	ldr	x13, [x0, #64]
  43d2d4:	mov	x12, x1
  43d2d8:	ldrb	w0, [x3]
  43d2dc:	cmp	w0, #0x42
  43d2e0:	b.ne	43d338 <nftw@plt+0x3a7b8>  // b.any
  43d2e4:	stp	x29, x30, [sp, #-16]!
  43d2e8:	mov	x29, sp
  43d2ec:	nop
  43d2f0:	add	x3, x3, #0x1
  43d2f4:	str	x3, [x11, #24]
  43d2f8:	mov	x0, x11
  43d2fc:	bl	43d148 <nftw@plt+0x3a5c8>
  43d300:	mov	x3, x0
  43d304:	mov	x2, x12
  43d308:	mov	x0, x11
  43d30c:	mov	w1, #0x4c                  	// #76
  43d310:	bl	43cc98 <nftw@plt+0x3a118>
  43d314:	ldr	x3, [x11, #24]
  43d318:	mov	x12, x0
  43d31c:	ldrb	w0, [x3]
  43d320:	cmp	w0, #0x42
  43d324:	b.eq	43d2f0 <nftw@plt+0x3a770>  // b.none
  43d328:	str	x13, [x11, #64]
  43d32c:	mov	x0, x12
  43d330:	ldp	x29, x30, [sp], #16
  43d334:	ret
  43d338:	mov	x0, x1
  43d33c:	str	x13, [x11, #64]
  43d340:	ret
  43d344:	nop
  43d348:	mov	x14, x0
  43d34c:	ldr	x0, [x0, #24]
  43d350:	ldrb	w2, [x0]
  43d354:	cmp	w2, #0x53
  43d358:	b.ne	43d3c8 <nftw@plt+0x3a848>  // b.any
  43d35c:	add	x2, x0, #0x1
  43d360:	str	x2, [x14, #24]
  43d364:	ldrb	w2, [x0, #1]
  43d368:	cbnz	w2, 43d3d0 <nftw@plt+0x3a850>
  43d36c:	ldr	w0, [x14, #16]
  43d370:	and	w1, w1, #0x1
  43d374:	ands	w3, w0, #0x8
  43d378:	ubfx	x4, x0, #3, #1
  43d37c:	csel	w1, w1, wzr, eq  // eq = none
  43d380:	cbz	w1, 43d39c <nftw@plt+0x3a81c>
  43d384:	ldr	x0, [x14, #24]
  43d388:	ldrb	w0, [x0]
  43d38c:	sub	w0, w0, #0x43
  43d390:	and	w0, w0, #0xff
  43d394:	cmp	w0, #0x1
  43d398:	csinc	w4, w4, wzr, hi  // hi = pmore
  43d39c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43d3a0:	add	x0, x0, #0x6b8
  43d3a4:	add	x3, x0, #0x188
  43d3a8:	mov	w1, #0x74                  	// #116
  43d3ac:	b	43d3b4 <nftw@plt+0x3a834>
  43d3b0:	ldrb	w1, [x0]
  43d3b4:	cmp	w1, w2
  43d3b8:	b.eq	43d4a4 <nftw@plt+0x3a924>  // b.none
  43d3bc:	add	x0, x0, #0x38
  43d3c0:	cmp	x0, x3
  43d3c4:	b.ne	43d3b0 <nftw@plt+0x3a830>  // b.any
  43d3c8:	mov	x0, #0x0                   	// #0
  43d3cc:	ret
  43d3d0:	add	x2, x0, #0x2
  43d3d4:	str	x2, [x14, #24]
  43d3d8:	ldrb	w2, [x0, #1]
  43d3dc:	sub	w5, w2, #0x30
  43d3e0:	cmp	w2, #0x5f
  43d3e4:	and	w0, w5, #0xff
  43d3e8:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  43d3ec:	b.hi	43d414 <nftw@plt+0x3a894>  // b.pmore
  43d3f0:	cmp	w2, #0x5f
  43d3f4:	mov	w1, #0x0                   	// #0
  43d3f8:	b.ne	43d428 <nftw@plt+0x3a8a8>  // b.any
  43d3fc:	ldr	w0, [x14, #56]
  43d400:	cmp	w0, w1
  43d404:	b.ls	43d3c8 <nftw@plt+0x3a848>  // b.plast
  43d408:	ldr	x0, [x14, #48]
  43d40c:	ldr	x0, [x0, w1, uxtw #3]
  43d410:	ret
  43d414:	sub	w0, w2, #0x41
  43d418:	and	w0, w0, #0xff
  43d41c:	cmp	w0, #0x19
  43d420:	b.hi	43d36c <nftw@plt+0x3a7ec>  // b.pmore
  43d424:	nop
  43d428:	mov	w3, #0x0                   	// #0
  43d42c:	nop
  43d430:	add	w1, w3, w3, lsl #3
  43d434:	sub	w6, w2, #0x41
  43d438:	mov	w4, w1
  43d43c:	and	w5, w5, #0xff
  43d440:	add	w1, w2, w1, lsl #2
  43d444:	and	w6, w6, #0xff
  43d448:	sub	w1, w1, #0x37
  43d44c:	add	w2, w2, w4, lsl #2
  43d450:	cmp	w5, #0x9
  43d454:	b.hi	43d498 <nftw@plt+0x3a918>  // b.pmore
  43d458:	sub	w1, w2, #0x30
  43d45c:	cmp	w3, w1
  43d460:	b.hi	43d3c8 <nftw@plt+0x3a848>  // b.pmore
  43d464:	ldr	x4, [x14, #24]
  43d468:	mov	w3, w1
  43d46c:	add	x0, x4, #0x1
  43d470:	ldrb	w2, [x4]
  43d474:	cbz	w2, 43d488 <nftw@plt+0x3a908>
  43d478:	str	x0, [x14, #24]
  43d47c:	ldrb	w2, [x4]
  43d480:	cmp	w2, #0x5f
  43d484:	b.eq	43d490 <nftw@plt+0x3a910>  // b.none
  43d488:	sub	w5, w2, #0x30
  43d48c:	b	43d430 <nftw@plt+0x3a8b0>
  43d490:	add	w1, w1, #0x1
  43d494:	b	43d3fc <nftw@plt+0x3a87c>
  43d498:	cmp	w6, #0x19
  43d49c:	b.ls	43d45c <nftw@plt+0x3a8dc>  // b.plast
  43d4a0:	b	43d3c8 <nftw@plt+0x3a848>
  43d4a4:	ldr	x5, [x0, #40]
  43d4a8:	ldp	w1, w3, [x14, #40]
  43d4ac:	cbz	x5, 43d4e8 <nftw@plt+0x3a968>
  43d4b0:	ldr	w9, [x0, #48]
  43d4b4:	cmp	w3, w1
  43d4b8:	b.le	43d5a0 <nftw@plt+0x3aa20>
  43d4bc:	mov	w8, #0x18                  	// #24
  43d4c0:	ldr	x7, [x14, #32]
  43d4c4:	smull	x6, w1, w8
  43d4c8:	add	w1, w1, #0x1
  43d4cc:	add	x2, x7, x6
  43d4d0:	str	wzr, [x2, #4]
  43d4d4:	str	w1, [x14, #40]
  43d4d8:	str	w8, [x7, x6]
  43d4dc:	str	x5, [x2, #8]
  43d4e0:	str	w9, [x2, #16]
  43d4e4:	str	x2, [x14, #64]
  43d4e8:	cbz	w4, 43d544 <nftw@plt+0x3a9c4>
  43d4ec:	ldr	w2, [x0, #32]
  43d4f0:	ldr	x5, [x0, #24]
  43d4f4:	cmp	w1, w3
  43d4f8:	ldr	w0, [x14, #72]
  43d4fc:	add	w0, w0, w2
  43d500:	str	w0, [x14, #72]
  43d504:	b.ge	43d598 <nftw@plt+0x3aa18>  // b.tcont
  43d508:	mov	w4, #0x18                  	// #24
  43d50c:	add	w6, w1, #0x1
  43d510:	ldr	x3, [x14, #32]
  43d514:	smull	x1, w1, w4
  43d518:	add	x0, x3, x1
  43d51c:	str	wzr, [x0, #4]
  43d520:	str	w6, [x14, #40]
  43d524:	str	w4, [x3, x1]
  43d528:	str	x5, [x0, #8]
  43d52c:	str	w2, [x0, #16]
  43d530:	ldr	x1, [x14, #24]
  43d534:	ldrb	w1, [x1]
  43d538:	cmp	w1, #0x42
  43d53c:	b.eq	43d550 <nftw@plt+0x3a9d0>  // b.none
  43d540:	ret
  43d544:	ldr	w2, [x0, #16]
  43d548:	ldr	x5, [x0, #8]
  43d54c:	b	43d4f4 <nftw@plt+0x3a974>
  43d550:	stp	x29, x30, [sp, #-16]!
  43d554:	mov	x1, x0
  43d558:	mov	x0, x14
  43d55c:	mov	x29, sp
  43d560:	bl	43d2c8 <nftw@plt+0x3a748>
  43d564:	cbz	x0, 43d58c <nftw@plt+0x3aa0c>
  43d568:	ldp	w1, w2, [x14, #56]
  43d56c:	cmp	w1, w2
  43d570:	b.ge	43d58c <nftw@plt+0x3aa0c>  // b.tcont
  43d574:	ldr	x3, [x14, #48]
  43d578:	add	w2, w1, #0x1
  43d57c:	str	x0, [x3, w1, sxtw #3]
  43d580:	str	w2, [x14, #56]
  43d584:	ldp	x29, x30, [sp], #16
  43d588:	ret
  43d58c:	mov	x0, #0x0                   	// #0
  43d590:	ldp	x29, x30, [sp], #16
  43d594:	ret
  43d598:	mov	x0, #0x0                   	// #0
  43d59c:	b	43d530 <nftw@plt+0x3a9b0>
  43d5a0:	mov	x2, #0x0                   	// #0
  43d5a4:	str	x2, [x14, #64]
  43d5a8:	b	43d4e8 <nftw@plt+0x3a968>
  43d5ac:	nop
  43d5b0:	mov	x10, x0
  43d5b4:	cbnz	w1, 43d5d0 <nftw@plt+0x3aa50>
  43d5b8:	ldr	x0, [x0, #24]
  43d5bc:	ldrb	w1, [x0]
  43d5c0:	cbz	w1, 43d610 <nftw@plt+0x3aa90>
  43d5c4:	add	x1, x0, #0x1
  43d5c8:	str	x1, [x10, #24]
  43d5cc:	ldrb	w1, [x0]
  43d5d0:	stp	x29, x30, [sp, #-16]!
  43d5d4:	cmp	w1, #0x68
  43d5d8:	mov	x29, sp
  43d5dc:	b.eq	43d64c <nftw@plt+0x3aacc>  // b.none
  43d5e0:	cmp	w1, #0x76
  43d5e4:	b.ne	43d604 <nftw@plt+0x3aa84>  // b.any
  43d5e8:	add	x11, x10, #0x18
  43d5ec:	mov	x0, x11
  43d5f0:	bl	43cf18 <nftw@plt+0x3a398>
  43d5f4:	ldr	x0, [x10, #24]
  43d5f8:	ldrb	w1, [x0]
  43d5fc:	cmp	w1, #0x5f
  43d600:	b.eq	43d618 <nftw@plt+0x3aa98>  // b.none
  43d604:	mov	w0, #0x0                   	// #0
  43d608:	ldp	x29, x30, [sp], #16
  43d60c:	ret
  43d610:	mov	w0, #0x0                   	// #0
  43d614:	ret
  43d618:	add	x0, x0, #0x1
  43d61c:	str	x0, [x10, #24]
  43d620:	mov	x0, x11
  43d624:	bl	43cf18 <nftw@plt+0x3a398>
  43d628:	ldr	x0, [x10, #24]
  43d62c:	ldrb	w1, [x0]
  43d630:	cmp	w1, #0x5f
  43d634:	b.ne	43d604 <nftw@plt+0x3aa84>  // b.any
  43d638:	add	x1, x0, #0x1
  43d63c:	str	x1, [x10, #24]
  43d640:	mov	w0, #0x1                   	// #1
  43d644:	ldp	x29, x30, [sp], #16
  43d648:	ret
  43d64c:	add	x0, x10, #0x18
  43d650:	bl	43cf18 <nftw@plt+0x3a398>
  43d654:	b	43d628 <nftw@plt+0x3aaa8>
  43d658:	mov	x2, x0
  43d65c:	mov	w3, #0x56                  	// #86
  43d660:	mov	w0, #0x4b                  	// #75
  43d664:	ldrb	w1, [x2]
  43d668:	cmp	w1, #0x72
  43d66c:	ccmp	w1, w3, #0x4, ne  // ne = any
  43d670:	ccmp	w1, w0, #0x4, ne  // ne = any
  43d674:	mov	w0, #0x1                   	// #1
  43d678:	b.eq	43d688 <nftw@plt+0x3ab08>  // b.none
  43d67c:	cmp	w1, #0x44
  43d680:	mov	w0, #0x0                   	// #0
  43d684:	b.eq	43d68c <nftw@plt+0x3ab0c>  // b.none
  43d688:	ret
  43d68c:	ldrb	w0, [x2, #1]
  43d690:	and	w1, w0, #0xffffffdf
  43d694:	sub	w0, w0, #0x77
  43d698:	cmp	w1, #0x4f
  43d69c:	and	w0, w0, #0xff
  43d6a0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  43d6a4:	cset	w0, ls  // ls = plast
  43d6a8:	ret
  43d6ac:	nop
  43d6b0:	ldr	x1, [x0, #24]
  43d6b4:	mov	x10, x0
  43d6b8:	ldrb	w0, [x1]
  43d6bc:	cmp	w0, #0x5f
  43d6c0:	b.eq	43d6cc <nftw@plt+0x3ab4c>  // b.none
  43d6c4:	mov	w0, #0x1                   	// #1
  43d6c8:	ret
  43d6cc:	stp	x29, x30, [sp, #-16]!
  43d6d0:	add	x0, x1, #0x1
  43d6d4:	mov	x29, sp
  43d6d8:	str	x0, [x10, #24]
  43d6dc:	ldrb	w0, [x1, #1]
  43d6e0:	cmp	w0, #0x5f
  43d6e4:	b.eq	43d708 <nftw@plt+0x3ab88>  // b.none
  43d6e8:	add	x0, x10, #0x18
  43d6ec:	bl	43cf18 <nftw@plt+0x3a398>
  43d6f0:	mov	w1, w0
  43d6f4:	mov	w0, #0x0                   	// #0
  43d6f8:	tbnz	w1, #31, 43d700 <nftw@plt+0x3ab80>
  43d6fc:	mov	w0, #0x1                   	// #1
  43d700:	ldp	x29, x30, [sp], #16
  43d704:	ret
  43d708:	mov	x0, x10
  43d70c:	add	x1, x1, #0x2
  43d710:	str	x1, [x0, #24]!
  43d714:	bl	43cf18 <nftw@plt+0x3a398>
  43d718:	tbnz	w0, #31, 43d748 <nftw@plt+0x3abc8>
  43d71c:	cmp	w0, #0x9
  43d720:	b.le	43d6fc <nftw@plt+0x3ab7c>
  43d724:	ldr	x1, [x10, #24]
  43d728:	mov	w0, #0x0                   	// #0
  43d72c:	ldrb	w2, [x1]
  43d730:	cmp	w2, #0x5f
  43d734:	b.ne	43d700 <nftw@plt+0x3ab80>  // b.any
  43d738:	add	x1, x1, #0x1
  43d73c:	mov	w0, #0x1                   	// #1
  43d740:	str	x1, [x10, #24]
  43d744:	b	43d700 <nftw@plt+0x3ab80>
  43d748:	mov	w0, #0x0                   	// #0
  43d74c:	b	43d700 <nftw@plt+0x3ab80>
  43d750:	cbnz	x0, 43d76c <nftw@plt+0x3abec>
  43d754:	b	43d778 <nftw@plt+0x3abf8>
  43d758:	cmp	w1, #0x0
  43d75c:	b.le	43d780 <nftw@plt+0x3ac00>
  43d760:	ldr	x0, [x0, #16]
  43d764:	sub	w1, w1, #0x1
  43d768:	cbz	x0, 43d77c <nftw@plt+0x3abfc>
  43d76c:	ldr	w2, [x0]
  43d770:	cmp	w2, #0x2f
  43d774:	b.eq	43d758 <nftw@plt+0x3abd8>  // b.none
  43d778:	mov	x0, #0x0                   	// #0
  43d77c:	ret
  43d780:	b.ne	43d778 <nftw@plt+0x3abf8>  // b.any
  43d784:	ldr	x0, [x0, #8]
  43d788:	ret
  43d78c:	nop
  43d790:	mov	x2, x0
  43d794:	ldr	x0, [x0, #288]
  43d798:	cbz	x0, 43d7b0 <nftw@plt+0x3ac30>
  43d79c:	ldr	x1, [x1]
  43d7a0:	ldr	x0, [x0, #8]
  43d7a4:	ldr	x0, [x0, #16]
  43d7a8:	tbnz	w1, #31, 43d7b8 <nftw@plt+0x3ac38>
  43d7ac:	b	43d750 <nftw@plt+0x3abd0>
  43d7b0:	mov	w1, #0x1                   	// #1
  43d7b4:	str	w1, [x2, #304]
  43d7b8:	ret
  43d7bc:	nop
  43d7c0:	cbz	x1, 43d894 <nftw@plt+0x3ad14>
  43d7c4:	stp	x29, x30, [sp, #-48]!
  43d7c8:	mov	x29, sp
  43d7cc:	stp	x21, x22, [sp, #32]
  43d7d0:	mov	x21, #0x8001                	// #32769
  43d7d4:	movk	x21, #0x410, lsl #16
  43d7d8:	movk	x21, #0xc600, lsl #32
  43d7dc:	stp	x19, x20, [sp, #16]
  43d7e0:	mov	x20, x0
  43d7e4:	mov	x19, x1
  43d7e8:	mov	x22, #0x1                   	// #1
  43d7ec:	movk	x21, #0x19, lsl #48
  43d7f0:	ldr	w2, [x19]
  43d7f4:	cmp	w2, #0x8
  43d7f8:	b.eq	43d810 <nftw@plt+0x3ac90>  // b.none
  43d7fc:	b.hi	43d864 <nftw@plt+0x3ace4>  // b.pmore
  43d800:	cmp	w2, #0x6
  43d804:	b.eq	43d818 <nftw@plt+0x3ac98>  // b.none
  43d808:	cmp	w2, #0x7
  43d80c:	b.ne	43d82c <nftw@plt+0x3acac>  // b.any
  43d810:	ldr	x19, [x19, #16]
  43d814:	cbnz	x19, 43d7f0 <nftw@plt+0x3ac70>
  43d818:	mov	x0, #0x0                   	// #0
  43d81c:	ldp	x19, x20, [sp, #16]
  43d820:	ldp	x21, x22, [sp, #32]
  43d824:	ldp	x29, x30, [sp], #48
  43d828:	ret
  43d82c:	cbz	w2, 43d818 <nftw@plt+0x3ac98>
  43d830:	cmp	w2, #0x5
  43d834:	b.ne	43d880 <nftw@plt+0x3ad00>  // b.any
  43d838:	add	x1, x19, #0x8
  43d83c:	mov	x0, x20
  43d840:	bl	43d790 <nftw@plt+0x3ac10>
  43d844:	cbz	x0, 43d818 <nftw@plt+0x3ac98>
  43d848:	ldr	w1, [x0]
  43d84c:	cmp	w1, #0x2f
  43d850:	b.ne	43d818 <nftw@plt+0x3ac98>  // b.any
  43d854:	ldp	x19, x20, [sp, #16]
  43d858:	ldp	x21, x22, [sp, #32]
  43d85c:	ldp	x29, x30, [sp], #48
  43d860:	ret
  43d864:	sub	w2, w2, #0x18
  43d868:	cmp	w2, #0x34
  43d86c:	b.hi	43d880 <nftw@plt+0x3ad00>  // b.pmore
  43d870:	lsl	x2, x22, x2
  43d874:	tst	x2, x21
  43d878:	b.ne	43d818 <nftw@plt+0x3ac98>  // b.any
  43d87c:	tbnz	w2, #27, 43d810 <nftw@plt+0x3ac90>
  43d880:	ldr	x1, [x19, #8]
  43d884:	mov	x0, x20
  43d888:	bl	43d7c0 <nftw@plt+0x3ac40>
  43d88c:	cbz	x0, 43d810 <nftw@plt+0x3ac90>
  43d890:	b	43d81c <nftw@plt+0x3ac9c>
  43d894:	mov	x0, #0x0                   	// #0
  43d898:	ret
  43d89c:	nop
  43d8a0:	stp	x29, x30, [sp, #-48]!
  43d8a4:	mov	x29, sp
  43d8a8:	stp	x19, x20, [sp, #16]
  43d8ac:	mov	x19, x2
  43d8b0:	add	x2, x1, #0x1
  43d8b4:	stp	x21, x22, [sp, #32]
  43d8b8:	mov	x21, x1
  43d8bc:	mov	x22, x0
  43d8c0:	ldp	x1, x20, [x19, #8]
  43d8c4:	add	x1, x2, x1
  43d8c8:	ldr	w2, [x19, #24]
  43d8cc:	cmp	x1, x20
  43d8d0:	b.hi	43d914 <nftw@plt+0x3ad94>  // b.pmore
  43d8d4:	cbnz	w2, 43d904 <nftw@plt+0x3ad84>
  43d8d8:	ldp	x3, x0, [x19]
  43d8dc:	mov	x1, x22
  43d8e0:	mov	x2, x21
  43d8e4:	add	x0, x3, x0
  43d8e8:	bl	402490 <memcpy@plt>
  43d8ec:	ldp	x0, x1, [x19]
  43d8f0:	add	x0, x0, x21
  43d8f4:	strb	wzr, [x0, x1]
  43d8f8:	ldr	x1, [x19, #8]
  43d8fc:	add	x1, x1, x21
  43d900:	str	x1, [x19, #8]
  43d904:	ldp	x19, x20, [sp, #16]
  43d908:	ldp	x21, x22, [sp, #32]
  43d90c:	ldp	x29, x30, [sp], #48
  43d910:	ret
  43d914:	cbnz	w2, 43d904 <nftw@plt+0x3ad84>
  43d918:	cbz	x20, 43d950 <nftw@plt+0x3add0>
  43d91c:	nop
  43d920:	lsl	x20, x20, #1
  43d924:	cmp	x1, x20
  43d928:	b.hi	43d920 <nftw@plt+0x3ada0>  // b.pmore
  43d92c:	ldr	x0, [x19]
  43d930:	mov	x1, x20
  43d934:	bl	402750 <realloc@plt>
  43d938:	cbz	x0, 43d960 <nftw@plt+0x3ade0>
  43d93c:	ldr	w2, [x19, #24]
  43d940:	str	x0, [x19]
  43d944:	str	x20, [x19, #16]
  43d948:	cbz	w2, 43d8d8 <nftw@plt+0x3ad58>
  43d94c:	b	43d904 <nftw@plt+0x3ad84>
  43d950:	cmp	x1, #0x2
  43d954:	mov	x20, #0x2                   	// #2
  43d958:	b.hi	43d920 <nftw@plt+0x3ada0>  // b.pmore
  43d95c:	b	43d92c <nftw@plt+0x3adac>
  43d960:	ldr	x0, [x19]
  43d964:	bl	402910 <free@plt>
  43d968:	stp	xzr, xzr, [x19]
  43d96c:	mov	w0, #0x1                   	// #1
  43d970:	str	xzr, [x19, #16]
  43d974:	str	w0, [x19, #24]
  43d978:	b	43d904 <nftw@plt+0x3ad84>
  43d97c:	nop
  43d980:	stp	x29, x30, [sp, #-224]!
  43d984:	mov	x29, sp
  43d988:	stp	x19, x20, [sp, #16]
  43d98c:	mov	x19, x0
  43d990:	cbz	x2, 43da18 <nftw@plt+0x3ae98>
  43d994:	stp	x21, x22, [sp, #32]
  43d998:	ldr	w22, [x0, #304]
  43d99c:	cbnz	w22, 43d9e0 <nftw@plt+0x3ae60>
  43d9a0:	ldr	w0, [x2]
  43d9a4:	mov	x20, x2
  43d9a8:	cmp	w0, #0x50
  43d9ac:	b.ls	43d9c0 <nftw@plt+0x3ae40>  // b.plast
  43d9b0:	mov	w0, #0x1                   	// #1
  43d9b4:	ldp	x21, x22, [sp, #32]
  43d9b8:	str	w0, [x19, #304]
  43d9bc:	b	43d9e4 <nftw@plt+0x3ae64>
  43d9c0:	mov	w21, w1
  43d9c4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43d9c8:	add	x1, x1, #0x4e0
  43d9cc:	stp	x23, x24, [sp, #48]
  43d9d0:	ldrh	w1, [x1, w0, uxtw #1]
  43d9d4:	adr	x2, 43d9e0 <nftw@plt+0x3ae60>
  43d9d8:	add	x1, x2, w1, sxth #2
  43d9dc:	br	x1
  43d9e0:	ldp	x21, x22, [sp, #32]
  43d9e4:	ldp	x19, x20, [sp, #16]
  43d9e8:	ldp	x29, x30, [sp], #224
  43d9ec:	ret
  43d9f0:	ldr	x0, [x20, #16]
  43d9f4:	ldr	w1, [x0]
  43d9f8:	cmp	w1, #0x3b
  43d9fc:	b.ne	43da10 <nftw@plt+0x3ae90>  // b.any
  43da00:	ldr	x0, [x0, #16]
  43da04:	ldr	w0, [x0]
  43da08:	cmp	w0, #0x3c
  43da0c:	b.eq	440e1c <nftw@plt+0x3e29c>  // b.none
  43da10:	ldp	x21, x22, [sp, #32]
  43da14:	ldp	x23, x24, [sp, #48]
  43da18:	mov	w0, #0x1                   	// #1
  43da1c:	str	w0, [x19, #304]
  43da20:	ldp	x19, x20, [sp, #16]
  43da24:	ldp	x29, x30, [sp], #224
  43da28:	ret
  43da2c:	ldp	x1, x2, [x19, #288]
  43da30:	add	x0, sp, #0x60
  43da34:	stp	x2, x20, [sp, #96]
  43da38:	str	wzr, [sp, #112]
  43da3c:	str	x1, [sp, #120]
  43da40:	str	x0, [x19, #296]
  43da44:	ldr	x2, [x20, #8]
  43da48:	mov	x0, x19
  43da4c:	mov	w1, w21
  43da50:	bl	441798 <nftw@plt+0x3ec18>
  43da54:	ldr	w0, [sp, #112]
  43da58:	cbz	w0, 43fe04 <nftw@plt+0x3d284>
  43da5c:	ldr	x0, [sp, #96]
  43da60:	str	x0, [x19, #296]
  43da64:	cbz	w22, 43f630 <nftw@plt+0x3cab0>
  43da68:	ldp	x21, x22, [sp, #32]
  43da6c:	str	x23, [x19, #288]
  43da70:	ldp	x23, x24, [sp, #48]
  43da74:	b	43d9e4 <nftw@plt+0x3ae64>
  43da78:	ldr	x4, [x19, #296]
  43da7c:	cbz	x4, 43dbb8 <nftw@plt+0x3b038>
  43da80:	mov	x1, x4
  43da84:	nop
  43da88:	ldr	w2, [x1, #16]
  43da8c:	cbnz	w2, 43daac <nftw@plt+0x3af2c>
  43da90:	ldr	x2, [x1, #8]
  43da94:	ldr	w2, [x2]
  43da98:	sub	w3, w2, #0x19
  43da9c:	cmp	w3, #0x2
  43daa0:	b.hi	440a5c <nftw@plt+0x3dedc>  // b.pmore
  43daa4:	cmp	w0, w2
  43daa8:	b.eq	440a64 <nftw@plt+0x3dee4>  // b.none
  43daac:	ldr	x1, [x1]
  43dab0:	cbnz	x1, 43da88 <nftw@plt+0x3af08>
  43dab4:	b	43dbb8 <nftw@plt+0x3b038>
  43dab8:	ldp	x23, x24, [sp, #48]
  43dabc:	b	43d9b0 <nftw@plt+0x3ae30>
  43dac0:	ldr	x2, [x20, #8]
  43dac4:	mov	w22, #0x0                   	// #0
  43dac8:	ldr	w1, [x2]
  43dacc:	cmp	w1, #0x27
  43dad0:	b.eq	4402e4 <nftw@plt+0x3d764>  // b.none
  43dad4:	ldr	x1, [x19, #256]
  43dad8:	add	x0, x1, #0x1
  43dadc:	cmp	x1, #0xff
  43dae0:	b.ne	43db0c <nftw@plt+0x3af8c>  // b.any
  43dae4:	ldp	x3, x2, [x19, #272]
  43dae8:	strb	wzr, [x19, #255]
  43daec:	mov	x0, x19
  43daf0:	blr	x3
  43daf4:	ldr	x3, [x19, #320]
  43daf8:	mov	x0, #0x1                   	// #1
  43dafc:	mov	x1, #0x0                   	// #0
  43db00:	add	x3, x3, x0
  43db04:	ldr	x2, [x20, #8]
  43db08:	str	x3, [x19, #320]
  43db0c:	str	x0, [x19, #256]
  43db10:	mov	w0, #0x28                  	// #40
  43db14:	strb	w0, [x19, x1]
  43db18:	mov	w1, w21
  43db1c:	strb	w0, [x19, #264]
  43db20:	mov	x0, x19
  43db24:	bl	441798 <nftw@plt+0x3ec18>
  43db28:	ldr	x1, [x19, #256]
  43db2c:	cmp	x1, #0xff
  43db30:	b.eq	440798 <nftw@plt+0x3dc18>  // b.none
  43db34:	add	x3, x1, #0x1
  43db38:	str	x3, [x19, #256]
  43db3c:	mov	w0, #0x29                  	// #41
  43db40:	strb	w0, [x19, x1]
  43db44:	strb	w0, [x19, #264]
  43db48:	ldr	w0, [x20]
  43db4c:	cmp	w0, #0x3e
  43db50:	b.eq	440a98 <nftw@plt+0x3df18>  // b.none
  43db54:	cmp	w22, #0x8
  43db58:	b.eq	440990 <nftw@plt+0x3de10>  // b.none
  43db5c:	ldr	x2, [x20, #16]
  43db60:	mov	w1, w21
  43db64:	mov	x0, x19
  43db68:	bl	441798 <nftw@plt+0x3ec18>
  43db6c:	ldp	x21, x22, [sp, #32]
  43db70:	ldp	x23, x24, [sp, #48]
  43db74:	b	43d9e4 <nftw@plt+0x3ae64>
  43db78:	ldr	w2, [x19, #312]
  43db7c:	ldr	x0, [x20, #8]
  43db80:	ldr	w1, [x0]
  43db84:	cbnz	w2, 43db94 <nftw@plt+0x3b014>
  43db88:	cmp	w1, #0x5
  43db8c:	mov	w22, #0x0                   	// #0
  43db90:	b.eq	440d78 <nftw@plt+0x3e1f8>  // b.none
  43db94:	cmp	w1, #0x23
  43db98:	ldr	x4, [x19, #296]
  43db9c:	b.eq	43feac <nftw@plt+0x3d32c>  // b.none
  43dba0:	ldr	w2, [x20]
  43dba4:	cmp	w2, w1
  43dba8:	b.eq	43feac <nftw@plt+0x3d32c>  // b.none
  43dbac:	cmp	w1, #0x24
  43dbb0:	b.eq	43f60c <nftw@plt+0x3ca8c>  // b.none
  43dbb4:	nop
  43dbb8:	ldr	x1, [x19, #288]
  43dbbc:	add	x0, sp, #0x60
  43dbc0:	stp	x4, x20, [sp, #96]
  43dbc4:	str	wzr, [sp, #112]
  43dbc8:	str	x1, [sp, #120]
  43dbcc:	str	x0, [x19, #296]
  43dbd0:	b	43da44 <nftw@plt+0x3aec4>
  43dbd4:	ldr	x2, [x20, #8]
  43dbd8:	mov	w1, w21
  43dbdc:	mov	x0, x19
  43dbe0:	bl	441798 <nftw@plt+0x3ec18>
  43dbe4:	tbz	w21, #2, 4408a4 <nftw@plt+0x3dd24>
  43dbe8:	ldr	x1, [x19, #256]
  43dbec:	add	x0, x1, #0x1
  43dbf0:	cmp	x1, #0xff
  43dbf4:	b.ne	43dc1c <nftw@plt+0x3b09c>  // b.any
  43dbf8:	ldp	x3, x2, [x19, #272]
  43dbfc:	strb	wzr, [x19, #255]
  43dc00:	mov	x0, x19
  43dc04:	blr	x3
  43dc08:	ldr	x2, [x19, #320]
  43dc0c:	mov	x0, #0x1                   	// #1
  43dc10:	mov	x1, #0x0                   	// #0
  43dc14:	add	x2, x2, x0
  43dc18:	str	x2, [x19, #320]
  43dc1c:	str	x0, [x19, #256]
  43dc20:	mov	w0, #0x2e                  	// #46
  43dc24:	strb	w0, [x19, x1]
  43dc28:	strb	w0, [x19, #264]
  43dc2c:	ldr	x23, [x20, #16]
  43dc30:	ldr	w0, [x23]
  43dc34:	cmp	w0, #0x47
  43dc38:	b.eq	440ac8 <nftw@plt+0x3df48>  // b.none
  43dc3c:	mov	x2, x23
  43dc40:	mov	w1, w21
  43dc44:	mov	x0, x19
  43dc48:	bl	441798 <nftw@plt+0x3ec18>
  43dc4c:	ldp	x21, x22, [sp, #32]
  43dc50:	ldp	x23, x24, [sp, #48]
  43dc54:	b	43d9e4 <nftw@plt+0x3ae64>
  43dc58:	ldp	x3, x4, [x19, #288]
  43dc5c:	add	x0, sp, #0x60
  43dc60:	ldr	x2, [x20, #16]
  43dc64:	str	x0, [x19, #296]
  43dc68:	mov	w1, w21
  43dc6c:	mov	x0, x19
  43dc70:	stp	x4, x20, [sp, #96]
  43dc74:	str	wzr, [sp, #112]
  43dc78:	str	x3, [sp, #120]
  43dc7c:	bl	441798 <nftw@plt+0x3ec18>
  43dc80:	ldr	w0, [sp, #112]
  43dc84:	cbz	w0, 4407f0 <nftw@plt+0x3dc70>
  43dc88:	ldr	x0, [sp, #96]
  43dc8c:	ldp	x21, x22, [sp, #32]
  43dc90:	ldp	x23, x24, [sp, #48]
  43dc94:	str	x0, [x19, #296]
  43dc98:	b	43d9e4 <nftw@plt+0x3ae64>
  43dc9c:	ldr	x2, [x20, #8]
  43dca0:	cbz	x2, 43dcb0 <nftw@plt+0x3b130>
  43dca4:	mov	w1, w21
  43dca8:	mov	x0, x19
  43dcac:	bl	441798 <nftw@plt+0x3ec18>
  43dcb0:	ldr	x0, [x20, #16]
  43dcb4:	cbz	x0, 440a44 <nftw@plt+0x3dec4>
  43dcb8:	ldr	x22, [x19, #256]
  43dcbc:	cmp	x22, #0xfd
  43dcc0:	b.ls	43dcec <nftw@plt+0x3b16c>  // b.plast
  43dcc4:	strb	wzr, [x19, x22]
  43dcc8:	mov	x1, x22
  43dccc:	mov	x0, x19
  43dcd0:	mov	x22, #0x0                   	// #0
  43dcd4:	ldp	x3, x2, [x19, #272]
  43dcd8:	blr	x3
  43dcdc:	str	xzr, [x19, #256]
  43dce0:	ldr	x0, [x19, #320]
  43dce4:	add	x0, x0, #0x1
  43dce8:	str	x0, [x19, #320]
  43dcec:	mov	w23, #0x2c                  	// #44
  43dcf0:	mov	x24, #0x0                   	// #0
  43dcf4:	b	43dd18 <nftw@plt+0x3b198>
  43dcf8:	mov	x0, x22
  43dcfc:	add	x22, x22, #0x1
  43dd00:	str	x22, [x19, #256]
  43dd04:	strb	w23, [x19, x0]
  43dd08:	strb	w23, [x19, #264]
  43dd0c:	mov	w23, #0x20                  	// #32
  43dd10:	cbnz	x24, 43fe4c <nftw@plt+0x3d2cc>
  43dd14:	mov	x24, #0x1                   	// #1
  43dd18:	cmp	x22, #0xff
  43dd1c:	b.ne	43dcf8 <nftw@plt+0x3b178>  // b.any
  43dd20:	ldp	x3, x2, [x19, #272]
  43dd24:	strb	wzr, [x19, #255]
  43dd28:	mov	x1, x22
  43dd2c:	mov	x0, x19
  43dd30:	mov	x22, #0x1                   	// #1
  43dd34:	blr	x3
  43dd38:	ldr	x1, [x19, #320]
  43dd3c:	mov	x0, #0x0                   	// #0
  43dd40:	add	x1, x1, x22
  43dd44:	str	x1, [x19, #320]
  43dd48:	b	43dd00 <nftw@plt+0x3b180>
  43dd4c:	ldr	x2, [x20, #16]
  43dd50:	mov	w1, w21
  43dd54:	mov	x0, x19
  43dd58:	bl	441798 <nftw@plt+0x3ec18>
  43dd5c:	ldp	x21, x22, [sp, #32]
  43dd60:	ldp	x23, x24, [sp, #48]
  43dd64:	b	43d9e4 <nftw@plt+0x3ae64>
  43dd68:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43dd6c:	add	x24, x24, #0x5a0
  43dd70:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43dd74:	add	x24, x24, #0x1c
  43dd78:	add	x22, x22, #0x5a1
  43dd7c:	mov	w23, #0x67                  	// #103
  43dd80:	ldr	x1, [x19, #256]
  43dd84:	b	43dda8 <nftw@plt+0x3b228>
  43dd88:	mov	x0, x1
  43dd8c:	add	x1, x1, #0x1
  43dd90:	str	x1, [x19, #256]
  43dd94:	cmp	x24, x22
  43dd98:	strb	w23, [x19, x0]
  43dd9c:	strb	w23, [x19, #264]
  43dda0:	b.eq	43fa48 <nftw@plt+0x3cec8>  // b.none
  43dda4:	ldrb	w23, [x22], #1
  43dda8:	cmp	x1, #0xff
  43ddac:	b.ne	43dd88 <nftw@plt+0x3b208>  // b.any
  43ddb0:	ldp	x3, x2, [x19, #272]
  43ddb4:	strb	wzr, [x19, #255]
  43ddb8:	mov	x0, x19
  43ddbc:	blr	x3
  43ddc0:	ldr	x2, [x19, #320]
  43ddc4:	mov	x1, #0x1                   	// #1
  43ddc8:	mov	x0, #0x0                   	// #0
  43ddcc:	add	x2, x2, x1
  43ddd0:	str	x2, [x19, #320]
  43ddd4:	b	43dd90 <nftw@plt+0x3b210>
  43ddd8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43dddc:	add	x22, x22, #0x5c0
  43dde0:	add	x24, x22, #0x8
  43dde4:	mov	w23, #0x7b                  	// #123
  43dde8:	ldr	x1, [x19, #256]
  43ddec:	b	43de14 <nftw@plt+0x3b294>
  43ddf0:	mov	x0, x1
  43ddf4:	add	x1, x1, #0x1
  43ddf8:	str	x1, [x19, #256]
  43ddfc:	add	x22, x22, #0x1
  43de00:	strb	w23, [x19, x0]
  43de04:	cmp	x24, x22
  43de08:	strb	w23, [x19, #264]
  43de0c:	b.eq	43fa64 <nftw@plt+0x3cee4>  // b.none
  43de10:	ldrb	w23, [x22]
  43de14:	cmp	x1, #0xff
  43de18:	b.ne	43ddf0 <nftw@plt+0x3b270>  // b.any
  43de1c:	ldp	x3, x2, [x19, #272]
  43de20:	strb	wzr, [x19, #255]
  43de24:	mov	x0, x19
  43de28:	blr	x3
  43de2c:	ldr	x2, [x19, #320]
  43de30:	mov	x1, #0x1                   	// #1
  43de34:	mov	x0, #0x0                   	// #0
  43de38:	add	x2, x2, x1
  43de3c:	str	x2, [x19, #320]
  43de40:	b	43ddf8 <nftw@plt+0x3b278>
  43de44:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43de48:	add	x23, x23, #0x5d0
  43de4c:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43de50:	add	x23, x23, #0xe
  43de54:	add	x21, x21, #0x5d1
  43de58:	mov	w22, #0x7b                  	// #123
  43de5c:	ldr	x1, [x19, #256]
  43de60:	b	43de84 <nftw@plt+0x3b304>
  43de64:	mov	x0, x1
  43de68:	add	x1, x1, #0x1
  43de6c:	str	x1, [x19, #256]
  43de70:	cmp	x23, x21
  43de74:	strb	w22, [x19, x0]
  43de78:	strb	w22, [x19, #264]
  43de7c:	b.eq	43f954 <nftw@plt+0x3cdd4>  // b.none
  43de80:	ldrb	w22, [x21], #1
  43de84:	cmp	x1, #0xff
  43de88:	b.ne	43de64 <nftw@plt+0x3b2e4>  // b.any
  43de8c:	ldp	x3, x2, [x19, #272]
  43de90:	strb	wzr, [x19, #255]
  43de94:	mov	x0, x19
  43de98:	blr	x3
  43de9c:	ldr	x2, [x19, #320]
  43dea0:	mov	x1, #0x1                   	// #1
  43dea4:	mov	x0, #0x0                   	// #0
  43dea8:	add	x2, x2, x1
  43deac:	str	x2, [x19, #320]
  43deb0:	b	43de6c <nftw@plt+0x3b2ec>
  43deb4:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43deb8:	add	x24, x24, #0x4b0
  43debc:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43dec0:	add	x24, x24, #0x16
  43dec4:	add	x22, x22, #0x4b1
  43dec8:	mov	w23, #0x74                  	// #116
  43decc:	ldr	x1, [x19, #256]
  43ded0:	b	43def4 <nftw@plt+0x3b374>
  43ded4:	mov	x0, x1
  43ded8:	add	x1, x1, #0x1
  43dedc:	str	x1, [x19, #256]
  43dee0:	cmp	x24, x22
  43dee4:	strb	w23, [x19, x0]
  43dee8:	strb	w23, [x19, #264]
  43deec:	b.eq	43f9dc <nftw@plt+0x3ce5c>  // b.none
  43def0:	ldrb	w23, [x22], #1
  43def4:	cmp	x1, #0xff
  43def8:	b.ne	43ded4 <nftw@plt+0x3b354>  // b.any
  43defc:	ldp	x3, x2, [x19, #272]
  43df00:	strb	wzr, [x19, #255]
  43df04:	mov	x0, x19
  43df08:	blr	x3
  43df0c:	ldr	x2, [x19, #320]
  43df10:	mov	x1, #0x1                   	// #1
  43df14:	mov	x0, #0x0                   	// #0
  43df18:	add	x2, x2, x1
  43df1c:	str	x2, [x19, #320]
  43df20:	b	43dedc <nftw@plt+0x3b35c>
  43df24:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43df28:	add	x24, x24, #0x328
  43df2c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43df30:	add	x24, x24, #0x1e
  43df34:	add	x22, x22, #0x329
  43df38:	mov	w23, #0x74                  	// #116
  43df3c:	ldr	x1, [x19, #256]
  43df40:	b	43df64 <nftw@plt+0x3b3e4>
  43df44:	mov	x0, x1
  43df48:	add	x1, x1, #0x1
  43df4c:	str	x1, [x19, #256]
  43df50:	cmp	x24, x22
  43df54:	strb	w23, [x19, x0]
  43df58:	strb	w23, [x19, #264]
  43df5c:	b.eq	43f938 <nftw@plt+0x3cdb8>  // b.none
  43df60:	ldrb	w23, [x22], #1
  43df64:	cmp	x1, #0xff
  43df68:	b.ne	43df44 <nftw@plt+0x3b3c4>  // b.any
  43df6c:	ldp	x3, x2, [x19, #272]
  43df70:	strb	wzr, [x19, #255]
  43df74:	mov	x0, x19
  43df78:	blr	x3
  43df7c:	ldr	x2, [x19, #320]
  43df80:	mov	x1, #0x1                   	// #1
  43df84:	mov	x0, #0x0                   	// #0
  43df88:	add	x2, x2, x1
  43df8c:	str	x2, [x19, #320]
  43df90:	b	43df4c <nftw@plt+0x3b3cc>
  43df94:	ldp	x2, x20, [x20, #8]
  43df98:	cbz	x2, 43dfa8 <nftw@plt+0x3b428>
  43df9c:	mov	w1, w21
  43dfa0:	mov	x0, x19
  43dfa4:	bl	441798 <nftw@plt+0x3ec18>
  43dfa8:	ldr	x1, [x19, #256]
  43dfac:	add	x0, x1, #0x1
  43dfb0:	cmp	x1, #0xff
  43dfb4:	b.ne	43dfdc <nftw@plt+0x3b45c>  // b.any
  43dfb8:	ldp	x3, x2, [x19, #272]
  43dfbc:	strb	wzr, [x19, #255]
  43dfc0:	mov	x0, x19
  43dfc4:	blr	x3
  43dfc8:	ldr	x2, [x19, #320]
  43dfcc:	mov	x0, #0x1                   	// #1
  43dfd0:	mov	x1, #0x0                   	// #0
  43dfd4:	add	x2, x2, x0
  43dfd8:	str	x2, [x19, #320]
  43dfdc:	str	x0, [x19, #256]
  43dfe0:	mov	w0, #0x7b                  	// #123
  43dfe4:	strb	w0, [x19, x1]
  43dfe8:	mov	x2, x20
  43dfec:	strb	w0, [x19, #264]
  43dff0:	mov	w1, w21
  43dff4:	mov	x0, x19
  43dff8:	bl	441798 <nftw@plt+0x3ec18>
  43dffc:	ldr	x1, [x19, #256]
  43e000:	add	x0, x1, #0x1
  43e004:	cmp	x1, #0xff
  43e008:	b.ne	43e030 <nftw@plt+0x3b4b0>  // b.any
  43e00c:	ldp	x3, x2, [x19, #272]
  43e010:	strb	wzr, [x19, #255]
  43e014:	mov	x0, x19
  43e018:	blr	x3
  43e01c:	ldr	x2, [x19, #320]
  43e020:	mov	x0, #0x1                   	// #1
  43e024:	mov	x1, #0x0                   	// #0
  43e028:	add	x2, x2, x0
  43e02c:	str	x2, [x19, #320]
  43e030:	str	x0, [x19, #256]
  43e034:	mov	w0, #0x7d                  	// #125
  43e038:	strb	w0, [x19, x1]
  43e03c:	strb	w0, [x19, #264]
  43e040:	ldp	x21, x22, [sp, #32]
  43e044:	ldp	x23, x24, [sp, #48]
  43e048:	b	43d9e4 <nftw@plt+0x3ae64>
  43e04c:	ldr	x22, [x20, #8]
  43e050:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e054:	add	x20, x20, #0x500
  43e058:	mov	w21, #0x6f                  	// #111
  43e05c:	add	x24, x20, #0x8
  43e060:	ldr	w23, [x22, #16]
  43e064:	ldr	x1, [x19, #256]
  43e068:	b	43e090 <nftw@plt+0x3b510>
  43e06c:	mov	x0, x1
  43e070:	add	x1, x1, #0x1
  43e074:	str	x1, [x19, #256]
  43e078:	add	x20, x20, #0x1
  43e07c:	strb	w21, [x19, x0]
  43e080:	cmp	x24, x20
  43e084:	strb	w21, [x19, #264]
  43e088:	b.eq	43f85c <nftw@plt+0x3ccdc>  // b.none
  43e08c:	ldrb	w21, [x20]
  43e090:	cmp	x1, #0xff
  43e094:	b.ne	43e06c <nftw@plt+0x3b4ec>  // b.any
  43e098:	ldp	x3, x2, [x19, #272]
  43e09c:	strb	wzr, [x19, #255]
  43e0a0:	mov	x0, x19
  43e0a4:	blr	x3
  43e0a8:	ldr	x2, [x19, #320]
  43e0ac:	mov	x1, #0x1                   	// #1
  43e0b0:	mov	x0, #0x0                   	// #0
  43e0b4:	add	x2, x2, x1
  43e0b8:	str	x2, [x19, #320]
  43e0bc:	b	43e074 <nftw@plt+0x3b4f4>
  43e0c0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e0c4:	add	x22, x22, #0x510
  43e0c8:	add	x24, x22, #0x9
  43e0cc:	mov	w23, #0x6f                  	// #111
  43e0d0:	ldr	x1, [x19, #256]
  43e0d4:	b	43e0fc <nftw@plt+0x3b57c>
  43e0d8:	mov	x0, x1
  43e0dc:	add	x1, x1, #0x1
  43e0e0:	str	x1, [x19, #256]
  43e0e4:	add	x22, x22, #0x1
  43e0e8:	strb	w23, [x19, x0]
  43e0ec:	cmp	x24, x22
  43e0f0:	strb	w23, [x19, #264]
  43e0f4:	b.eq	43f69c <nftw@plt+0x3cb1c>  // b.none
  43e0f8:	ldrb	w23, [x22]
  43e0fc:	cmp	x1, #0xff
  43e100:	b.ne	43e0d8 <nftw@plt+0x3b558>  // b.any
  43e104:	ldp	x3, x2, [x19, #272]
  43e108:	strb	wzr, [x19, #255]
  43e10c:	mov	x0, x19
  43e110:	blr	x3
  43e114:	ldr	x2, [x19, #320]
  43e118:	mov	x1, #0x1                   	// #1
  43e11c:	mov	x0, #0x0                   	// #0
  43e120:	add	x2, x2, x1
  43e124:	str	x2, [x19, #320]
  43e128:	b	43e0e0 <nftw@plt+0x3b560>
  43e12c:	ldr	x2, [x20, #8]
  43e130:	mov	w1, w21
  43e134:	mov	x0, x19
  43e138:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e13c:	add	x22, x22, #0x5e0
  43e140:	mov	w23, #0x20                  	// #32
  43e144:	bl	441798 <nftw@plt+0x3ec18>
  43e148:	add	x24, x22, #0x8
  43e14c:	ldr	x1, [x19, #256]
  43e150:	b	43e178 <nftw@plt+0x3b5f8>
  43e154:	mov	x0, x1
  43e158:	add	x1, x1, #0x1
  43e15c:	str	x1, [x19, #256]
  43e160:	add	x22, x22, #0x1
  43e164:	strb	w23, [x19, x0]
  43e168:	cmp	x24, x22
  43e16c:	strb	w23, [x19, #264]
  43e170:	b.eq	43f63c <nftw@plt+0x3cabc>  // b.none
  43e174:	ldrb	w23, [x22]
  43e178:	cmp	x1, #0xff
  43e17c:	b.ne	43e154 <nftw@plt+0x3b5d4>  // b.any
  43e180:	ldp	x3, x2, [x19, #272]
  43e184:	strb	wzr, [x19, #255]
  43e188:	mov	x0, x19
  43e18c:	blr	x3
  43e190:	ldr	x2, [x19, #320]
  43e194:	mov	x1, #0x1                   	// #1
  43e198:	mov	x0, #0x0                   	// #0
  43e19c:	add	x2, x2, x1
  43e1a0:	str	x2, [x19, #320]
  43e1a4:	b	43e15c <nftw@plt+0x3b5dc>
  43e1a8:	ldr	x2, [x20, #8]
  43e1ac:	mov	w1, w21
  43e1b0:	mov	x0, x19
  43e1b4:	bl	441798 <nftw@plt+0x3ec18>
  43e1b8:	ldp	x21, x22, [sp, #32]
  43e1bc:	ldp	x23, x24, [sp, #48]
  43e1c0:	b	43d9e4 <nftw@plt+0x3ae64>
  43e1c4:	and	w22, w21, #0xffffff9f
  43e1c8:	ldr	x3, [x19, #296]
  43e1cc:	tbnz	w21, #5, 440874 <nftw@plt+0x3dcf4>
  43e1d0:	ldr	x2, [x20, #8]
  43e1d4:	cbz	x2, 43e1dc <nftw@plt+0x3b65c>
  43e1d8:	tbz	w21, #6, 440cdc <nftw@plt+0x3e15c>
  43e1dc:	mov	w1, w22
  43e1e0:	add	x2, x20, #0x10
  43e1e4:	mov	x0, x19
  43e1e8:	bl	442030 <nftw@plt+0x3f4b0>
  43e1ec:	ldp	x21, x22, [sp, #32]
  43e1f0:	ldp	x23, x24, [sp, #48]
  43e1f4:	b	43d9e4 <nftw@plt+0x3ae64>
  43e1f8:	ldr	x23, [x20, #8]
  43e1fc:	ldr	x1, [x19, #256]
  43e200:	cbz	x23, 43ffbc <nftw@plt+0x3d43c>
  43e204:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e208:	add	x20, x20, #0x570
  43e20c:	add	x22, x20, #0x6
  43e210:	mov	w21, #0x7b                  	// #123
  43e214:	b	43e23c <nftw@plt+0x3b6bc>
  43e218:	mov	x0, x1
  43e21c:	add	x1, x1, #0x1
  43e220:	str	x1, [x19, #256]
  43e224:	add	x20, x20, #0x1
  43e228:	strb	w21, [x19, x0]
  43e22c:	cmp	x22, x20
  43e230:	strb	w21, [x19, #264]
  43e234:	b.eq	440030 <nftw@plt+0x3d4b0>  // b.none
  43e238:	ldrb	w21, [x20]
  43e23c:	cmp	x1, #0xff
  43e240:	b.ne	43e218 <nftw@plt+0x3b698>  // b.any
  43e244:	ldp	x3, x2, [x19, #272]
  43e248:	strb	wzr, [x19, #255]
  43e24c:	mov	x0, x19
  43e250:	blr	x3
  43e254:	ldr	x2, [x19, #320]
  43e258:	mov	x1, #0x1                   	// #1
  43e25c:	mov	x0, #0x0                   	// #0
  43e260:	add	x2, x2, x1
  43e264:	str	x2, [x19, #320]
  43e268:	b	43e220 <nftw@plt+0x3b6a0>
  43e26c:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e270:	add	x24, x24, #0x498
  43e274:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e278:	add	x24, x24, #0x11
  43e27c:	add	x22, x22, #0x499
  43e280:	mov	w23, #0x68                  	// #104
  43e284:	ldr	x1, [x19, #256]
  43e288:	b	43e2ac <nftw@plt+0x3b72c>
  43e28c:	mov	x0, x1
  43e290:	add	x1, x1, #0x1
  43e294:	str	x1, [x19, #256]
  43e298:	cmp	x22, x24
  43e29c:	strb	w23, [x19, x0]
  43e2a0:	strb	w23, [x19, #264]
  43e2a4:	b.eq	43fd0c <nftw@plt+0x3d18c>  // b.none
  43e2a8:	ldrb	w23, [x22], #1
  43e2ac:	cmp	x1, #0xff
  43e2b0:	b.ne	43e28c <nftw@plt+0x3b70c>  // b.any
  43e2b4:	ldp	x3, x2, [x19, #272]
  43e2b8:	strb	wzr, [x19, #255]
  43e2bc:	mov	x0, x19
  43e2c0:	blr	x3
  43e2c4:	ldr	x2, [x19, #320]
  43e2c8:	mov	x1, #0x1                   	// #1
  43e2cc:	mov	x0, #0x0                   	// #0
  43e2d0:	add	x2, x2, x1
  43e2d4:	str	x2, [x19, #320]
  43e2d8:	b	43e294 <nftw@plt+0x3b714>
  43e2dc:	ldrsw	x22, [x20, #16]
  43e2e0:	ldr	x20, [x20, #8]
  43e2e4:	cbz	x22, 4410ec <nftw@plt+0x3e56c>
  43e2e8:	add	x22, x20, x22
  43e2ec:	ldr	x1, [x19, #256]
  43e2f0:	b	43e314 <nftw@plt+0x3b794>
  43e2f4:	mov	x0, x1
  43e2f8:	add	x1, x1, #0x1
  43e2fc:	str	x1, [x19, #256]
  43e300:	add	x20, x20, #0x1
  43e304:	strb	w21, [x19, x0]
  43e308:	cmp	x20, x22
  43e30c:	strb	w21, [x19, #264]
  43e310:	b.eq	43fe18 <nftw@plt+0x3d298>  // b.none
  43e314:	ldrb	w21, [x20]
  43e318:	cmp	x1, #0xff
  43e31c:	b.ne	43e2f4 <nftw@plt+0x3b774>  // b.any
  43e320:	ldp	x3, x2, [x19, #272]
  43e324:	strb	wzr, [x19, #255]
  43e328:	mov	x0, x19
  43e32c:	blr	x3
  43e330:	ldr	x2, [x19, #320]
  43e334:	mov	x1, #0x1                   	// #1
  43e338:	mov	x0, #0x0                   	// #0
  43e33c:	add	x2, x2, x1
  43e340:	str	x2, [x19, #320]
  43e344:	b	43e2fc <nftw@plt+0x3b77c>
  43e348:	ldp	x1, x5, [x19, #288]
  43e34c:	add	x23, sp, #0x60
  43e350:	stp	x5, x20, [sp, #96]
  43e354:	mov	w22, #0x1                   	// #1
  43e358:	mov	w6, w22
  43e35c:	str	wzr, [sp, #112]
  43e360:	str	x1, [sp, #120]
  43e364:	str	x23, [x19, #296]
  43e368:	mov	x24, x5
  43e36c:	mov	x0, x5
  43e370:	mov	x5, x23
  43e374:	cbnz	x24, 43e3c0 <nftw@plt+0x3b840>
  43e378:	b	44145c <nftw@plt+0x3e8dc>
  43e37c:	ldr	w1, [x0, #16]
  43e380:	cbnz	w1, 43e3b8 <nftw@plt+0x3b838>
  43e384:	cmp	w22, #0x3
  43e388:	b.hi	440cc8 <nftw@plt+0x3e148>  // b.pmore
  43e38c:	ubfiz	x1, x22, #5, #32
  43e390:	add	w22, w22, #0x1
  43e394:	add	x4, x23, x1
  43e398:	ldp	x2, x3, [x0]
  43e39c:	stp	x2, x3, [x4]
  43e3a0:	ldp	x2, x3, [x0, #16]
  43e3a4:	stp	x2, x3, [x4, #16]
  43e3a8:	str	x5, [x23, x1]
  43e3ac:	mov	x5, x4
  43e3b0:	str	x4, [x19, #296]
  43e3b4:	str	w6, [x0, #16]
  43e3b8:	ldr	x0, [x0]
  43e3bc:	cbz	x0, 43e3d4 <nftw@plt+0x3b854>
  43e3c0:	ldr	x1, [x0, #8]
  43e3c4:	ldr	w1, [x1]
  43e3c8:	sub	w1, w1, #0x19
  43e3cc:	cmp	w1, #0x2
  43e3d0:	b.ls	43e37c <nftw@plt+0x3b7fc>  // b.plast
  43e3d4:	ldr	x2, [x20, #16]
  43e3d8:	mov	x0, x19
  43e3dc:	mov	w1, w21
  43e3e0:	bl	441798 <nftw@plt+0x3ec18>
  43e3e4:	str	x24, [x19, #296]
  43e3e8:	ldr	w0, [sp, #112]
  43e3ec:	cbnz	w0, 440a50 <nftw@plt+0x3ded0>
  43e3f0:	ubfiz	x0, x22, #5, #32
  43e3f4:	cmp	w22, #0x1
  43e3f8:	add	x23, x23, x0
  43e3fc:	b.eq	43e420 <nftw@plt+0x3b8a0>  // b.none
  43e400:	ldur	x2, [x23, #-24]
  43e404:	sub	w22, w22, #0x1
  43e408:	mov	w1, w21
  43e40c:	mov	x0, x19
  43e410:	sub	x23, x23, #0x20
  43e414:	bl	441830 <nftw@plt+0x3ecb0>
  43e418:	cmp	w22, #0x1
  43e41c:	b.ne	43e400 <nftw@plt+0x3b880>  // b.any
  43e420:	ldr	x3, [x19, #296]
  43e424:	mov	w1, w21
  43e428:	add	x2, x20, #0x8
  43e42c:	mov	x0, x19
  43e430:	bl	4426b0 <nftw@plt+0x3fb30>
  43e434:	ldp	x21, x22, [sp, #32]
  43e438:	ldp	x23, x24, [sp, #48]
  43e43c:	b	43d9e4 <nftw@plt+0x3ae64>
  43e440:	ldrsh	w0, [x20, #18]
  43e444:	cbnz	w0, 440804 <nftw@plt+0x3dc84>
  43e448:	ldr	x2, [x20, #8]
  43e44c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  43e450:	add	x0, x0, #0x6b8
  43e454:	add	x0, x0, #0x288
  43e458:	ldr	x1, [x2, #8]
  43e45c:	cmp	x1, x0
  43e460:	b.eq	4402a0 <nftw@plt+0x3d720>  // b.none
  43e464:	mov	w1, w21
  43e468:	mov	x0, x19
  43e46c:	bl	441798 <nftw@plt+0x3ec18>
  43e470:	ldr	x0, [x19, #256]
  43e474:	add	x1, x0, #0x1
  43e478:	cmp	x0, #0xff
  43e47c:	b.ne	43e4a8 <nftw@plt+0x3b928>  // b.any
  43e480:	ldp	x3, x2, [x19, #272]
  43e484:	strb	wzr, [x19, #255]
  43e488:	mov	x1, x0
  43e48c:	mov	x0, x19
  43e490:	blr	x3
  43e494:	ldr	x2, [x19, #320]
  43e498:	mov	x1, #0x1                   	// #1
  43e49c:	mov	x0, #0x0                   	// #0
  43e4a0:	add	x2, x2, x1
  43e4a4:	str	x2, [x19, #320]
  43e4a8:	str	x1, [x19, #256]
  43e4ac:	mov	w2, #0x20                  	// #32
  43e4b0:	strb	w2, [x19, x0]
  43e4b4:	strb	w2, [x19, #264]
  43e4b8:	ldrsh	w0, [x20, #16]
  43e4bc:	cbnz	w0, 43feb4 <nftw@plt+0x3d334>
  43e4c0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e4c4:	add	x20, x20, #0x4f0
  43e4c8:	add	x22, x20, #0x6
  43e4cc:	mov	w21, #0x5f                  	// #95
  43e4d0:	b	43e4f8 <nftw@plt+0x3b978>
  43e4d4:	mov	x0, x1
  43e4d8:	add	x1, x1, #0x1
  43e4dc:	str	x1, [x19, #256]
  43e4e0:	add	x20, x20, #0x1
  43e4e4:	strb	w21, [x19, x0]
  43e4e8:	cmp	x20, x22
  43e4ec:	strb	w21, [x19, #264]
  43e4f0:	b.eq	43ff1c <nftw@plt+0x3d39c>  // b.none
  43e4f4:	ldrb	w21, [x20]
  43e4f8:	cmp	x1, #0xff
  43e4fc:	b.ne	43e4d4 <nftw@plt+0x3b954>  // b.any
  43e500:	ldp	x3, x2, [x19, #272]
  43e504:	strb	wzr, [x19, #255]
  43e508:	mov	x0, x19
  43e50c:	blr	x3
  43e510:	ldr	x2, [x19, #320]
  43e514:	mov	x1, #0x1                   	// #1
  43e518:	mov	x0, #0x0                   	// #0
  43e51c:	add	x2, x2, x1
  43e520:	str	x2, [x19, #320]
  43e524:	b	43e4dc <nftw@plt+0x3b95c>
  43e528:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e52c:	add	x24, x24, #0x3d0
  43e530:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e534:	add	x24, x24, #0x15
  43e538:	add	x22, x22, #0x3d1
  43e53c:	mov	w23, #0x6e                  	// #110
  43e540:	ldr	x1, [x19, #256]
  43e544:	b	43e568 <nftw@plt+0x3b9e8>
  43e548:	mov	x0, x1
  43e54c:	add	x1, x1, #0x1
  43e550:	str	x1, [x19, #256]
  43e554:	cmp	x24, x22
  43e558:	strb	w23, [x19, x0]
  43e55c:	strb	w23, [x19, #264]
  43e560:	b.eq	43fd28 <nftw@plt+0x3d1a8>  // b.none
  43e564:	ldrb	w23, [x22], #1
  43e568:	cmp	x1, #0xff
  43e56c:	b.ne	43e548 <nftw@plt+0x3b9c8>  // b.any
  43e570:	ldp	x3, x2, [x19, #272]
  43e574:	strb	wzr, [x19, #255]
  43e578:	mov	x0, x19
  43e57c:	blr	x3
  43e580:	ldr	x2, [x19, #320]
  43e584:	mov	x1, #0x1                   	// #1
  43e588:	mov	x0, #0x0                   	// #0
  43e58c:	add	x2, x2, x1
  43e590:	str	x2, [x19, #320]
  43e594:	b	43e550 <nftw@plt+0x3b9d0>
  43e598:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e59c:	add	x24, x24, #0x3e8
  43e5a0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e5a4:	add	x24, x24, #0x11
  43e5a8:	add	x22, x22, #0x3e9
  43e5ac:	mov	w23, #0x76                  	// #118
  43e5b0:	ldr	x1, [x19, #256]
  43e5b4:	b	43e5d8 <nftw@plt+0x3ba58>
  43e5b8:	mov	x0, x1
  43e5bc:	add	x1, x1, #0x1
  43e5c0:	str	x1, [x19, #256]
  43e5c4:	cmp	x24, x22
  43e5c8:	strb	w23, [x19, x0]
  43e5cc:	strb	w23, [x19, #264]
  43e5d0:	b.eq	43fd44 <nftw@plt+0x3d1c4>  // b.none
  43e5d4:	ldrb	w23, [x22], #1
  43e5d8:	cmp	x1, #0xff
  43e5dc:	b.ne	43e5b8 <nftw@plt+0x3ba38>  // b.any
  43e5e0:	ldp	x3, x2, [x19, #272]
  43e5e4:	strb	wzr, [x19, #255]
  43e5e8:	mov	x0, x19
  43e5ec:	blr	x3
  43e5f0:	ldr	x2, [x19, #320]
  43e5f4:	mov	x1, #0x1                   	// #1
  43e5f8:	mov	x0, #0x0                   	// #0
  43e5fc:	add	x2, x2, x1
  43e600:	str	x2, [x19, #320]
  43e604:	b	43e5c0 <nftw@plt+0x3ba40>
  43e608:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e60c:	add	x24, x24, #0x400
  43e610:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e614:	add	x24, x24, #0x1a
  43e618:	add	x22, x22, #0x401
  43e61c:	mov	w23, #0x63                  	// #99
  43e620:	ldr	x1, [x19, #256]
  43e624:	b	43e648 <nftw@plt+0x3bac8>
  43e628:	mov	x0, x1
  43e62c:	add	x1, x1, #0x1
  43e630:	str	x1, [x19, #256]
  43e634:	cmp	x24, x22
  43e638:	strb	w23, [x19, x0]
  43e63c:	strb	w23, [x19, #264]
  43e640:	b.eq	43fd60 <nftw@plt+0x3d1e0>  // b.none
  43e644:	ldrb	w23, [x22], #1
  43e648:	cmp	x1, #0xff
  43e64c:	b.ne	43e628 <nftw@plt+0x3baa8>  // b.any
  43e650:	ldp	x3, x2, [x19, #272]
  43e654:	strb	wzr, [x19, #255]
  43e658:	mov	x0, x19
  43e65c:	blr	x3
  43e660:	ldr	x2, [x19, #320]
  43e664:	mov	x1, #0x1                   	// #1
  43e668:	mov	x0, #0x0                   	// #0
  43e66c:	add	x2, x2, x1
  43e670:	str	x2, [x19, #320]
  43e674:	b	43e630 <nftw@plt+0x3bab0>
  43e678:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e67c:	add	x24, x24, #0x420
  43e680:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e684:	add	x24, x24, #0xf
  43e688:	add	x22, x22, #0x421
  43e68c:	mov	w23, #0x6a                  	// #106
  43e690:	ldr	x1, [x19, #256]
  43e694:	b	43e6b8 <nftw@plt+0x3bb38>
  43e698:	mov	x0, x1
  43e69c:	add	x1, x1, #0x1
  43e6a0:	str	x1, [x19, #256]
  43e6a4:	cmp	x22, x24
  43e6a8:	strb	w23, [x19, x0]
  43e6ac:	strb	w23, [x19, #264]
  43e6b0:	b.eq	43f6b8 <nftw@plt+0x3cb38>  // b.none
  43e6b4:	ldrb	w23, [x22], #1
  43e6b8:	cmp	x1, #0xff
  43e6bc:	b.ne	43e698 <nftw@plt+0x3bb18>  // b.any
  43e6c0:	ldp	x3, x2, [x19, #272]
  43e6c4:	strb	wzr, [x19, #255]
  43e6c8:	mov	x0, x19
  43e6cc:	blr	x3
  43e6d0:	ldr	x2, [x19, #320]
  43e6d4:	mov	x1, #0x1                   	// #1
  43e6d8:	mov	x0, #0x0                   	// #0
  43e6dc:	add	x2, x2, x1
  43e6e0:	str	x2, [x19, #320]
  43e6e4:	b	43e6a0 <nftw@plt+0x3bb20>
  43e6e8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e6ec:	add	x24, x24, #0x480
  43e6f0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e6f4:	add	x24, x24, #0x15
  43e6f8:	add	x22, x22, #0x481
  43e6fc:	mov	w23, #0x72                  	// #114
  43e700:	ldr	x1, [x19, #256]
  43e704:	b	43e728 <nftw@plt+0x3bba8>
  43e708:	mov	x0, x1
  43e70c:	add	x1, x1, #0x1
  43e710:	str	x1, [x19, #256]
  43e714:	cmp	x22, x24
  43e718:	strb	w23, [x19, x0]
  43e71c:	strb	w23, [x19, #264]
  43e720:	b.eq	43f6f0 <nftw@plt+0x3cb70>  // b.none
  43e724:	ldrb	w23, [x22], #1
  43e728:	cmp	x1, #0xff
  43e72c:	b.ne	43e708 <nftw@plt+0x3bb88>  // b.any
  43e730:	ldp	x3, x2, [x19, #272]
  43e734:	strb	wzr, [x19, #255]
  43e738:	mov	x0, x19
  43e73c:	blr	x3
  43e740:	ldr	x2, [x19, #320]
  43e744:	mov	x1, #0x1                   	// #1
  43e748:	mov	x0, #0x0                   	// #0
  43e74c:	add	x2, x2, x1
  43e750:	str	x2, [x19, #320]
  43e754:	b	43e710 <nftw@plt+0x3bb90>
  43e758:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e75c:	add	x24, x24, #0x448
  43e760:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e764:	add	x24, x24, #0x16
  43e768:	add	x22, x22, #0x449
  43e76c:	mov	w23, #0x54                  	// #84
  43e770:	ldr	x1, [x19, #256]
  43e774:	b	43e798 <nftw@plt+0x3bc18>
  43e778:	mov	x0, x1
  43e77c:	add	x1, x1, #0x1
  43e780:	str	x1, [x19, #256]
  43e784:	cmp	x22, x24
  43e788:	strb	w23, [x19, x0]
  43e78c:	strb	w23, [x19, #264]
  43e790:	b.eq	43fcd4 <nftw@plt+0x3d154>  // b.none
  43e794:	ldrb	w23, [x22], #1
  43e798:	cmp	x1, #0xff
  43e79c:	b.ne	43e778 <nftw@plt+0x3bbf8>  // b.any
  43e7a0:	ldp	x3, x2, [x19, #272]
  43e7a4:	strb	wzr, [x19, #255]
  43e7a8:	mov	x0, x19
  43e7ac:	blr	x3
  43e7b0:	ldr	x2, [x19, #320]
  43e7b4:	mov	x1, #0x1                   	// #1
  43e7b8:	mov	x0, #0x0                   	// #0
  43e7bc:	add	x2, x2, x1
  43e7c0:	str	x2, [x19, #320]
  43e7c4:	b	43e780 <nftw@plt+0x3bc00>
  43e7c8:	ldr	x1, [x20, #8]
  43e7cc:	mov	x0, x19
  43e7d0:	mov	w24, #0x0                   	// #0
  43e7d4:	bl	43d7c0 <nftw@plt+0x3ac40>
  43e7d8:	cbz	x0, 4411f4 <nftw@plt+0x3e674>
  43e7dc:	stp	x25, x26, [sp, #64]
  43e7e0:	ldr	w1, [x0]
  43e7e4:	cmp	w1, #0x2f
  43e7e8:	b.ne	43fe94 <nftw@plt+0x3d314>  // b.any
  43e7ec:	ldr	x1, [x0, #8]
  43e7f0:	cbz	x1, 43fe94 <nftw@plt+0x3d314>
  43e7f4:	ldr	x0, [x0, #16]
  43e7f8:	add	w24, w24, #0x1
  43e7fc:	cbnz	x0, 43e7e0 <nftw@plt+0x3bc60>
  43e800:	ldr	x25, [x20, #8]
  43e804:	sub	w26, w24, #0x1
  43e808:	b	43e818 <nftw@plt+0x3bc98>
  43e80c:	add	w22, w22, #0x1
  43e810:	cmp	w22, w24
  43e814:	b.ge	43fe3c <nftw@plt+0x3d2bc>  // b.tcont
  43e818:	str	w22, [x19, #316]
  43e81c:	mov	x2, x25
  43e820:	mov	w1, w21
  43e824:	mov	x0, x19
  43e828:	bl	441798 <nftw@plt+0x3ec18>
  43e82c:	cmp	w26, w22
  43e830:	b.le	43e80c <nftw@plt+0x3bc8c>
  43e834:	mov	w20, #0x2c                  	// #44
  43e838:	mov	x23, #0x0                   	// #0
  43e83c:	ldr	x1, [x19, #256]
  43e840:	b	43e864 <nftw@plt+0x3bce4>
  43e844:	mov	x0, x1
  43e848:	add	x1, x1, #0x1
  43e84c:	str	x1, [x19, #256]
  43e850:	strb	w20, [x19, x0]
  43e854:	strb	w20, [x19, #264]
  43e858:	mov	w20, #0x20                  	// #32
  43e85c:	cbnz	x23, 43e80c <nftw@plt+0x3bc8c>
  43e860:	mov	x23, #0x1                   	// #1
  43e864:	cmp	x1, #0xff
  43e868:	b.ne	43e844 <nftw@plt+0x3bcc4>  // b.any
  43e86c:	ldp	x3, x2, [x19, #272]
  43e870:	strb	wzr, [x19, #255]
  43e874:	mov	x0, x19
  43e878:	blr	x3
  43e87c:	ldr	x2, [x19, #320]
  43e880:	mov	x1, #0x1                   	// #1
  43e884:	mov	x0, #0x0                   	// #0
  43e888:	add	x2, x2, x1
  43e88c:	str	x2, [x19, #320]
  43e890:	b	43e84c <nftw@plt+0x3bccc>
  43e894:	ldr	x2, [x20, #8]
  43e898:	mov	w1, w21
  43e89c:	mov	x0, x19
  43e8a0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e8a4:	add	x24, x24, #0x2f8
  43e8a8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e8ac:	bl	441798 <nftw@plt+0x3ec18>
  43e8b0:	add	x24, x24, #0x5
  43e8b4:	add	x22, x22, #0x2f9
  43e8b8:	mov	w23, #0x5b                  	// #91
  43e8bc:	ldr	x1, [x19, #256]
  43e8c0:	b	43e8e4 <nftw@plt+0x3bd64>
  43e8c4:	mov	x0, x1
  43e8c8:	add	x1, x1, #0x1
  43e8cc:	str	x1, [x19, #256]
  43e8d0:	cmp	x24, x22
  43e8d4:	strb	w23, [x19, x0]
  43e8d8:	strb	w23, [x19, #264]
  43e8dc:	b.eq	43f7fc <nftw@plt+0x3cc7c>  // b.none
  43e8e0:	ldrb	w23, [x22], #1
  43e8e4:	cmp	x1, #0xff
  43e8e8:	b.ne	43e8c4 <nftw@plt+0x3bd44>  // b.any
  43e8ec:	ldp	x3, x2, [x19, #272]
  43e8f0:	strb	wzr, [x19, #255]
  43e8f4:	mov	x0, x19
  43e8f8:	blr	x3
  43e8fc:	ldr	x2, [x19, #320]
  43e900:	mov	x1, #0x1                   	// #1
  43e904:	mov	x0, #0x0                   	// #0
  43e908:	add	x2, x2, x1
  43e90c:	str	x2, [x19, #320]
  43e910:	b	43e8cc <nftw@plt+0x3bd4c>
  43e914:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e918:	add	x24, x24, #0x4c8
  43e91c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e920:	add	x24, x24, #0x1a
  43e924:	add	x22, x22, #0x4c9
  43e928:	mov	w23, #0x6e                  	// #110
  43e92c:	ldr	x1, [x19, #256]
  43e930:	b	43e954 <nftw@plt+0x3bdd4>
  43e934:	mov	x0, x1
  43e938:	add	x1, x1, #0x1
  43e93c:	str	x1, [x19, #256]
  43e940:	cmp	x24, x22
  43e944:	strb	w23, [x19, x0]
  43e948:	strb	w23, [x19, #264]
  43e94c:	b.eq	43f7c4 <nftw@plt+0x3cc44>  // b.none
  43e950:	ldrb	w23, [x22], #1
  43e954:	cmp	x1, #0xff
  43e958:	b.ne	43e934 <nftw@plt+0x3bdb4>  // b.any
  43e95c:	ldp	x3, x2, [x19, #272]
  43e960:	strb	wzr, [x19, #255]
  43e964:	mov	x0, x19
  43e968:	blr	x3
  43e96c:	ldr	x2, [x19, #320]
  43e970:	mov	x1, #0x1                   	// #1
  43e974:	mov	x0, #0x0                   	// #0
  43e978:	add	x2, x2, x1
  43e97c:	str	x2, [x19, #320]
  43e980:	b	43e93c <nftw@plt+0x3bdbc>
  43e984:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e988:	add	x24, x24, #0x430
  43e98c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e990:	add	x24, x24, #0x13
  43e994:	add	x22, x22, #0x431
  43e998:	mov	w23, #0x67                  	// #103
  43e99c:	ldr	x1, [x19, #256]
  43e9a0:	b	43e9c4 <nftw@plt+0x3be44>
  43e9a4:	mov	x0, x1
  43e9a8:	add	x1, x1, #0x1
  43e9ac:	str	x1, [x19, #256]
  43e9b0:	cmp	x24, x22
  43e9b4:	strb	w23, [x19, x0]
  43e9b8:	strb	w23, [x19, #264]
  43e9bc:	b.eq	43f6d4 <nftw@plt+0x3cb54>  // b.none
  43e9c0:	ldrb	w23, [x22], #1
  43e9c4:	cmp	x1, #0xff
  43e9c8:	b.ne	43e9a4 <nftw@plt+0x3be24>  // b.any
  43e9cc:	ldp	x3, x2, [x19, #272]
  43e9d0:	strb	wzr, [x19, #255]
  43e9d4:	mov	x0, x19
  43e9d8:	blr	x3
  43e9dc:	ldr	x2, [x19, #320]
  43e9e0:	mov	x1, #0x1                   	// #1
  43e9e4:	mov	x0, #0x0                   	// #0
  43e9e8:	add	x2, x2, x1
  43e9ec:	str	x2, [x19, #320]
  43e9f0:	b	43e9ac <nftw@plt+0x3be2c>
  43e9f4:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43e9f8:	add	x24, x24, #0x460
  43e9fc:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ea00:	add	x24, x24, #0x19
  43ea04:	add	x22, x22, #0x461
  43ea08:	mov	w23, #0x54                  	// #84
  43ea0c:	ldr	x1, [x19, #256]
  43ea10:	b	43ea34 <nftw@plt+0x3beb4>
  43ea14:	mov	x0, x1
  43ea18:	add	x1, x1, #0x1
  43ea1c:	str	x1, [x19, #256]
  43ea20:	cmp	x24, x22
  43ea24:	strb	w23, [x19, x0]
  43ea28:	strb	w23, [x19, #264]
  43ea2c:	b.eq	43fcf0 <nftw@plt+0x3d170>  // b.none
  43ea30:	ldrb	w23, [x22], #1
  43ea34:	cmp	x1, #0xff
  43ea38:	b.ne	43ea14 <nftw@plt+0x3be94>  // b.any
  43ea3c:	ldp	x3, x2, [x19, #272]
  43ea40:	strb	wzr, [x19, #255]
  43ea44:	mov	x0, x19
  43ea48:	blr	x3
  43ea4c:	ldr	x2, [x19, #320]
  43ea50:	mov	x1, #0x1                   	// #1
  43ea54:	mov	x0, #0x0                   	// #0
  43ea58:	add	x2, x2, x1
  43ea5c:	str	x2, [x19, #320]
  43ea60:	b	43ea1c <nftw@plt+0x3be9c>
  43ea64:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ea68:	add	x22, x22, #0x358
  43ea6c:	add	x24, x22, #0x8
  43ea70:	mov	w23, #0x56                  	// #86
  43ea74:	ldr	x1, [x19, #256]
  43ea78:	b	43eaa0 <nftw@plt+0x3bf20>
  43ea7c:	mov	x0, x1
  43ea80:	add	x1, x1, #0x1
  43ea84:	str	x1, [x19, #256]
  43ea88:	add	x22, x22, #0x1
  43ea8c:	strb	w23, [x19, x0]
  43ea90:	cmp	x24, x22
  43ea94:	strb	w23, [x19, #264]
  43ea98:	b.eq	43fc20 <nftw@plt+0x3d0a0>  // b.none
  43ea9c:	ldrb	w23, [x22]
  43eaa0:	cmp	x1, #0xff
  43eaa4:	b.ne	43ea7c <nftw@plt+0x3befc>  // b.any
  43eaa8:	ldp	x3, x2, [x19, #272]
  43eaac:	strb	wzr, [x19, #255]
  43eab0:	mov	x0, x19
  43eab4:	blr	x3
  43eab8:	ldr	x2, [x19, #320]
  43eabc:	mov	x1, #0x1                   	// #1
  43eac0:	mov	x0, #0x0                   	// #0
  43eac4:	add	x2, x2, x1
  43eac8:	str	x2, [x19, #320]
  43eacc:	b	43ea84 <nftw@plt+0x3bf04>
  43ead0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ead4:	add	x24, x24, #0x368
  43ead8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43eadc:	add	x24, x24, #0x18
  43eae0:	add	x22, x22, #0x369
  43eae4:	mov	w23, #0x63                  	// #99
  43eae8:	ldr	x1, [x19, #256]
  43eaec:	b	43eb10 <nftw@plt+0x3bf90>
  43eaf0:	mov	x0, x1
  43eaf4:	add	x1, x1, #0x1
  43eaf8:	str	x1, [x19, #256]
  43eafc:	cmp	x24, x22
  43eb00:	strb	w23, [x19, x0]
  43eb04:	strb	w23, [x19, #264]
  43eb08:	b.eq	43fc3c <nftw@plt+0x3d0bc>  // b.none
  43eb0c:	ldrb	w23, [x22], #1
  43eb10:	cmp	x1, #0xff
  43eb14:	b.ne	43eaf0 <nftw@plt+0x3bf70>  // b.any
  43eb18:	ldp	x3, x2, [x19, #272]
  43eb1c:	strb	wzr, [x19, #255]
  43eb20:	mov	x0, x19
  43eb24:	blr	x3
  43eb28:	ldr	x2, [x19, #320]
  43eb2c:	mov	x1, #0x1                   	// #1
  43eb30:	mov	x0, #0x0                   	// #0
  43eb34:	add	x2, x2, x1
  43eb38:	str	x2, [x19, #320]
  43eb3c:	b	43eaf8 <nftw@plt+0x3bf78>
  43eb40:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43eb44:	add	x24, x24, #0x390
  43eb48:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43eb4c:	add	x24, x24, #0xd
  43eb50:	add	x22, x22, #0x391
  43eb54:	mov	w23, #0x74                  	// #116
  43eb58:	ldr	x1, [x19, #256]
  43eb5c:	b	43eb80 <nftw@plt+0x3c000>
  43eb60:	mov	x0, x1
  43eb64:	add	x1, x1, #0x1
  43eb68:	str	x1, [x19, #256]
  43eb6c:	cmp	x24, x22
  43eb70:	strb	w23, [x19, x0]
  43eb74:	strb	w23, [x19, #264]
  43eb78:	b.eq	43f78c <nftw@plt+0x3cc0c>  // b.none
  43eb7c:	ldrb	w23, [x22], #1
  43eb80:	cmp	x1, #0xff
  43eb84:	b.ne	43eb60 <nftw@plt+0x3bfe0>  // b.any
  43eb88:	ldp	x3, x2, [x19, #272]
  43eb8c:	strb	wzr, [x19, #255]
  43eb90:	mov	x0, x19
  43eb94:	blr	x3
  43eb98:	ldr	x2, [x19, #320]
  43eb9c:	mov	x1, #0x1                   	// #1
  43eba0:	mov	x0, #0x0                   	// #0
  43eba4:	add	x2, x2, x1
  43eba8:	str	x2, [x19, #320]
  43ebac:	b	43eb68 <nftw@plt+0x3bfe8>
  43ebb0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ebb4:	add	x24, x24, #0x3a0
  43ebb8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ebbc:	add	x24, x24, #0x12
  43ebc0:	add	x22, x22, #0x3a1
  43ebc4:	mov	w23, #0x74                  	// #116
  43ebc8:	ldr	x1, [x19, #256]
  43ebcc:	b	43ebf0 <nftw@plt+0x3c070>
  43ebd0:	mov	x0, x1
  43ebd4:	add	x1, x1, #0x1
  43ebd8:	str	x1, [x19, #256]
  43ebdc:	cmp	x24, x22
  43ebe0:	strb	w23, [x19, x0]
  43ebe4:	strb	w23, [x19, #264]
  43ebe8:	b.eq	43f7a8 <nftw@plt+0x3cc28>  // b.none
  43ebec:	ldrb	w23, [x22], #1
  43ebf0:	cmp	x1, #0xff
  43ebf4:	b.ne	43ebd0 <nftw@plt+0x3c050>  // b.any
  43ebf8:	ldp	x3, x2, [x19, #272]
  43ebfc:	strb	wzr, [x19, #255]
  43ec00:	mov	x0, x19
  43ec04:	blr	x3
  43ec08:	ldr	x2, [x19, #320]
  43ec0c:	mov	x1, #0x1                   	// #1
  43ec10:	mov	x0, #0x0                   	// #0
  43ec14:	add	x2, x2, x1
  43ec18:	str	x2, [x19, #320]
  43ec1c:	b	43ebd8 <nftw@plt+0x3c058>
  43ec20:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ec24:	add	x24, x24, #0x3b8
  43ec28:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ec2c:	add	x24, x24, #0x10
  43ec30:	add	x22, x22, #0x3b9
  43ec34:	mov	w23, #0x74                  	// #116
  43ec38:	ldr	x1, [x19, #256]
  43ec3c:	b	43ec60 <nftw@plt+0x3c0e0>
  43ec40:	mov	x0, x1
  43ec44:	add	x1, x1, #0x1
  43ec48:	str	x1, [x19, #256]
  43ec4c:	cmp	x24, x22
  43ec50:	strb	w23, [x19, x0]
  43ec54:	strb	w23, [x19, #264]
  43ec58:	b.eq	43fc04 <nftw@plt+0x3d084>  // b.none
  43ec5c:	ldrb	w23, [x22], #1
  43ec60:	cmp	x1, #0xff
  43ec64:	b.ne	43ec40 <nftw@plt+0x3c0c0>  // b.any
  43ec68:	ldp	x3, x2, [x19, #272]
  43ec6c:	strb	wzr, [x19, #255]
  43ec70:	mov	x0, x19
  43ec74:	blr	x3
  43ec78:	ldr	x2, [x19, #320]
  43ec7c:	mov	x1, #0x1                   	// #1
  43ec80:	mov	x0, #0x0                   	// #0
  43ec84:	add	x2, x2, x1
  43ec88:	str	x2, [x19, #320]
  43ec8c:	b	43ec48 <nftw@plt+0x3c0c8>
  43ec90:	stp	x25, x26, [sp, #64]
  43ec94:	ldr	x25, [x20, #8]
  43ec98:	ldr	x22, [x19, #296]
  43ec9c:	str	xzr, [x19, #296]
  43eca0:	cbz	x25, 440d60 <nftw@plt+0x3e1e0>
  43eca4:	add	x23, sp, #0x60
  43eca8:	mov	x2, #0x1f                  	// #31
  43ecac:	ldr	x6, [x19, #288]
  43ecb0:	mov	x3, x23
  43ecb4:	mov	x0, #0x0                   	// #0
  43ecb8:	mov	w24, #0x0                   	// #0
  43ecbc:	mov	x1, #0x1                   	// #1
  43ecc0:	movk	x2, #0x1a, lsl #48
  43ecc4:	str	wzr, [x3, #16]
  43ecc8:	add	w24, w24, #0x1
  43eccc:	str	x0, [x3]
  43ecd0:	mov	x4, x3
  43ecd4:	ldr	w5, [x25]
  43ecd8:	str	x25, [x3, #8]
  43ecdc:	str	x6, [x3, #24]
  43ece0:	sub	w0, w5, #0x1c
  43ece4:	cmp	w0, #0x34
  43ece8:	b.hi	43ecf8 <nftw@plt+0x3c178>  // b.pmore
  43ecec:	lsl	x0, x1, x0
  43ecf0:	tst	x0, x2
  43ecf4:	b.ne	43fe78 <nftw@plt+0x3d2f8>  // b.any
  43ecf8:	str	x3, [x19, #296]
  43ecfc:	cmp	w5, #0x2
  43ed00:	b.eq	440c40 <nftw@plt+0x3e0c0>  // b.none
  43ed04:	cmp	w5, #0x4
  43ed08:	b.ne	43ed18 <nftw@plt+0x3c198>  // b.any
  43ed0c:	add	x0, sp, #0x50
  43ed10:	stp	x6, x25, [sp, #80]
  43ed14:	str	x0, [x19, #288]
  43ed18:	ldr	x2, [x20, #16]
  43ed1c:	mov	x0, x19
  43ed20:	mov	w1, w21
  43ed24:	bl	441798 <nftw@plt+0x3ec18>
  43ed28:	ldr	w0, [x25]
  43ed2c:	cmp	w0, #0x4
  43ed30:	b.ne	43ed3c <nftw@plt+0x3c1bc>  // b.any
  43ed34:	ldr	x0, [sp, #80]
  43ed38:	str	x0, [x19, #288]
  43ed3c:	sub	w20, w24, #0x1
  43ed40:	mov	w24, #0x20                  	// #32
  43ed44:	add	x20, x23, x20, lsl #5
  43ed48:	ldr	w0, [x20, #16]
  43ed4c:	cbnz	w0, 43eda4 <nftw@plt+0x3c224>
  43ed50:	ldr	x0, [x19, #256]
  43ed54:	add	x1, x0, #0x1
  43ed58:	cmp	x0, #0xff
  43ed5c:	b.ne	43ed88 <nftw@plt+0x3c208>  // b.any
  43ed60:	ldp	x3, x2, [x19, #272]
  43ed64:	strb	wzr, [x19, #255]
  43ed68:	mov	x1, x0
  43ed6c:	mov	x0, x19
  43ed70:	blr	x3
  43ed74:	ldr	x2, [x19, #320]
  43ed78:	mov	x1, #0x1                   	// #1
  43ed7c:	mov	x0, #0x0                   	// #0
  43ed80:	add	x2, x2, x1
  43ed84:	str	x2, [x19, #320]
  43ed88:	str	x1, [x19, #256]
  43ed8c:	mov	w1, w21
  43ed90:	ldr	x2, [x20, #8]
  43ed94:	strb	w24, [x19, x0]
  43ed98:	strb	w24, [x19, #264]
  43ed9c:	mov	x0, x19
  43eda0:	bl	441830 <nftw@plt+0x3ecb0>
  43eda4:	cmp	x23, x20
  43eda8:	sub	x20, x20, #0x20
  43edac:	b.ne	43ed48 <nftw@plt+0x3c1c8>  // b.any
  43edb0:	ldp	x23, x24, [sp, #48]
  43edb4:	ldp	x25, x26, [sp, #64]
  43edb8:	str	x22, [x19, #296]
  43edbc:	ldp	x21, x22, [sp, #32]
  43edc0:	b	43d9e4 <nftw@plt+0x3ae64>
  43edc4:	ldr	x22, [x20, #8]
  43edc8:	ldr	x24, [x19, #296]
  43edcc:	str	xzr, [x19, #296]
  43edd0:	ldr	x23, [x19, #368]
  43edd4:	str	x20, [x19, #368]
  43edd8:	tbz	w21, #2, 43edf0 <nftw@plt+0x3c270>
  43eddc:	ldr	w0, [x22]
  43ede0:	cbnz	w0, 43edf0 <nftw@plt+0x3c270>
  43ede4:	ldr	w0, [x22, #16]
  43ede8:	cmp	w0, #0x6
  43edec:	b.eq	4411a8 <nftw@plt+0x3e628>  // b.none
  43edf0:	mov	x0, x19
  43edf4:	mov	x2, x22
  43edf8:	mov	w1, w21
  43edfc:	bl	441798 <nftw@plt+0x3ec18>
  43ee00:	ldrb	w0, [x19, #264]
  43ee04:	cmp	w0, #0x3c
  43ee08:	b.eq	440948 <nftw@plt+0x3ddc8>  // b.none
  43ee0c:	ldr	x1, [x19, #256]
  43ee10:	add	x0, x1, #0x1
  43ee14:	cmp	x1, #0xff
  43ee18:	b.ne	43ee40 <nftw@plt+0x3c2c0>  // b.any
  43ee1c:	ldp	x3, x2, [x19, #272]
  43ee20:	strb	wzr, [x19, #255]
  43ee24:	mov	x0, x19
  43ee28:	blr	x3
  43ee2c:	ldr	x2, [x19, #320]
  43ee30:	mov	x0, #0x1                   	// #1
  43ee34:	mov	x1, #0x0                   	// #0
  43ee38:	add	x2, x2, x0
  43ee3c:	str	x2, [x19, #320]
  43ee40:	str	x0, [x19, #256]
  43ee44:	mov	w0, #0x3c                  	// #60
  43ee48:	strb	w0, [x19, x1]
  43ee4c:	mov	w1, w21
  43ee50:	strb	w0, [x19, #264]
  43ee54:	mov	x0, x19
  43ee58:	ldr	x2, [x20, #16]
  43ee5c:	bl	441798 <nftw@plt+0x3ec18>
  43ee60:	ldrb	w0, [x19, #264]
  43ee64:	cmp	w0, #0x3e
  43ee68:	b.eq	440900 <nftw@plt+0x3dd80>  // b.none
  43ee6c:	ldr	x1, [x19, #256]
  43ee70:	add	x0, x1, #0x1
  43ee74:	cmp	x1, #0xff
  43ee78:	b.ne	43eea0 <nftw@plt+0x3c320>  // b.any
  43ee7c:	ldp	x3, x2, [x19, #272]
  43ee80:	strb	wzr, [x19, #255]
  43ee84:	mov	x0, x19
  43ee88:	blr	x3
  43ee8c:	ldr	x2, [x19, #320]
  43ee90:	mov	x0, #0x1                   	// #1
  43ee94:	mov	x1, #0x0                   	// #0
  43ee98:	add	x2, x2, x0
  43ee9c:	str	x2, [x19, #320]
  43eea0:	str	x0, [x19, #256]
  43eea4:	mov	w0, #0x3e                  	// #62
  43eea8:	strb	w0, [x19, x1]
  43eeac:	strb	w0, [x19, #264]
  43eeb0:	ldp	x21, x22, [sp, #32]
  43eeb4:	str	x24, [x19, #296]
  43eeb8:	str	x23, [x19, #368]
  43eebc:	ldp	x23, x24, [sp, #48]
  43eec0:	b	43d9e4 <nftw@plt+0x3ae64>
  43eec4:	ldr	w0, [x19, #312]
  43eec8:	cbz	w0, 440104 <nftw@plt+0x3d584>
  43eecc:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43eed0:	add	x23, x23, #0x320
  43eed4:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43eed8:	add	x23, x23, #0x5
  43eedc:	add	x21, x21, #0x321
  43eee0:	mov	w22, #0x61                  	// #97
  43eee4:	ldr	x1, [x19, #256]
  43eee8:	b	43ef0c <nftw@plt+0x3c38c>
  43eeec:	mov	x0, x1
  43eef0:	add	x1, x1, #0x1
  43eef4:	str	x1, [x19, #256]
  43eef8:	cmp	x23, x21
  43eefc:	strb	w22, [x19, x0]
  43ef00:	strb	w22, [x19, #264]
  43ef04:	b.eq	43ff34 <nftw@plt+0x3d3b4>  // b.none
  43ef08:	ldrb	w22, [x21], #1
  43ef0c:	cmp	x1, #0xff
  43ef10:	b.ne	43eeec <nftw@plt+0x3c36c>  // b.any
  43ef14:	ldp	x3, x2, [x19, #272]
  43ef18:	strb	wzr, [x19, #255]
  43ef1c:	mov	x0, x19
  43ef20:	blr	x3
  43ef24:	ldr	x2, [x19, #320]
  43ef28:	mov	x1, #0x1                   	// #1
  43ef2c:	mov	x0, #0x0                   	// #0
  43ef30:	add	x2, x2, x1
  43ef34:	str	x2, [x19, #320]
  43ef38:	b	43eef4 <nftw@plt+0x3c374>
  43ef3c:	ldr	x1, [x19, #256]
  43ef40:	add	x0, x1, #0x1
  43ef44:	cmp	x1, #0xff
  43ef48:	b.ne	43ef70 <nftw@plt+0x3c3f0>  // b.any
  43ef4c:	ldp	x3, x2, [x19, #272]
  43ef50:	strb	wzr, [x19, #255]
  43ef54:	mov	x0, x19
  43ef58:	blr	x3
  43ef5c:	ldr	x2, [x19, #320]
  43ef60:	mov	x0, #0x1                   	// #1
  43ef64:	mov	x1, #0x0                   	// #0
  43ef68:	add	x2, x2, x0
  43ef6c:	str	x2, [x19, #320]
  43ef70:	str	x0, [x19, #256]
  43ef74:	mov	w0, #0x7e                  	// #126
  43ef78:	strb	w0, [x19, x1]
  43ef7c:	mov	w1, w21
  43ef80:	strb	w0, [x19, #264]
  43ef84:	mov	x0, x19
  43ef88:	ldr	x2, [x20, #16]
  43ef8c:	bl	441798 <nftw@plt+0x3ec18>
  43ef90:	ldp	x21, x22, [sp, #32]
  43ef94:	ldp	x23, x24, [sp, #48]
  43ef98:	b	43d9e4 <nftw@plt+0x3ae64>
  43ef9c:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43efa0:	add	x24, x24, #0x348
  43efa4:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43efa8:	add	x24, x24, #0xb
  43efac:	add	x22, x22, #0x349
  43efb0:	mov	w23, #0x76                  	// #118
  43efb4:	ldr	x1, [x19, #256]
  43efb8:	b	43efdc <nftw@plt+0x3c45c>
  43efbc:	mov	x0, x1
  43efc0:	add	x1, x1, #0x1
  43efc4:	str	x1, [x19, #256]
  43efc8:	cmp	x24, x22
  43efcc:	strb	w23, [x19, x0]
  43efd0:	strb	w23, [x19, #264]
  43efd4:	b.eq	43f770 <nftw@plt+0x3cbf0>  // b.none
  43efd8:	ldrb	w23, [x22], #1
  43efdc:	cmp	x1, #0xff
  43efe0:	b.ne	43efbc <nftw@plt+0x3c43c>  // b.any
  43efe4:	ldp	x3, x2, [x19, #272]
  43efe8:	strb	wzr, [x19, #255]
  43efec:	mov	x0, x19
  43eff0:	blr	x3
  43eff4:	ldr	x2, [x19, #320]
  43eff8:	mov	x1, #0x1                   	// #1
  43effc:	mov	x0, #0x0                   	// #0
  43f000:	add	x2, x2, x1
  43f004:	str	x2, [x19, #320]
  43f008:	b	43efc4 <nftw@plt+0x3c444>
  43f00c:	ldr	x0, [x20, #16]
  43f010:	ldr	w0, [x0]
  43f014:	cmp	w0, #0x39
  43f018:	b.ne	43da10 <nftw@plt+0x3ae90>  // b.any
  43f01c:	ldr	x2, [x20, #8]
  43f020:	ldr	x0, [x2, #8]
  43f024:	ldr	x0, [x0]
  43f028:	ldrb	w1, [x0, #1]
  43f02c:	cmp	w1, #0x63
  43f030:	b.eq	440eb8 <nftw@plt+0x3e338>  // b.none
  43f034:	add	x3, x20, #0x10
  43f038:	mov	w1, w21
  43f03c:	mov	x0, x19
  43f040:	bl	442ae8 <nftw@plt+0x3ff68>
  43f044:	cbnz	w0, 441018 <nftw@plt+0x3e498>
  43f048:	ldr	x0, [x20, #8]
  43f04c:	ldr	w1, [x0]
  43f050:	cmp	w1, #0x32
  43f054:	b.eq	441224 <nftw@plt+0x3e6a4>  // b.none
  43f058:	ldr	x0, [x0, #8]
  43f05c:	ldr	x1, [x0]
  43f060:	ldrb	w0, [x1]
  43f064:	subs	w0, w0, #0x63
  43f068:	b.ne	43f07c <nftw@plt+0x3c4fc>  // b.any
  43f06c:	ldrb	w0, [x1, #1]
  43f070:	subs	w0, w0, #0x6c
  43f074:	b.ne	43f07c <nftw@plt+0x3c4fc>  // b.any
  43f078:	ldrb	w0, [x1, #2]
  43f07c:	ldr	x1, [x20, #16]
  43f080:	ldr	x2, [x1, #8]
  43f084:	cbnz	w0, 43f094 <nftw@plt+0x3c514>
  43f088:	ldr	w0, [x2]
  43f08c:	cmp	w0, #0x3
  43f090:	b.eq	441300 <nftw@plt+0x3e780>  // b.none
  43f094:	mov	w1, w21
  43f098:	mov	x0, x19
  43f09c:	bl	4429f0 <nftw@plt+0x3fe70>
  43f0a0:	ldr	x2, [x20, #8]
  43f0a4:	ldr	x0, [x2, #8]
  43f0a8:	ldr	x0, [x0]
  43f0ac:	ldrb	w1, [x0]
  43f0b0:	cmp	w1, #0x69
  43f0b4:	b.ne	4410c0 <nftw@plt+0x3e540>  // b.any
  43f0b8:	ldrb	w3, [x0, #1]
  43f0bc:	cmp	w3, #0x78
  43f0c0:	b.ne	4410c0 <nftw@plt+0x3e540>  // b.any
  43f0c4:	ldrb	w3, [x0, #2]
  43f0c8:	cbnz	w3, 4410c0 <nftw@plt+0x3e540>
  43f0cc:	ldr	x1, [x19, #256]
  43f0d0:	cmp	x1, #0xff
  43f0d4:	b.ne	43f0fc <nftw@plt+0x3c57c>  // b.any
  43f0d8:	ldp	x3, x2, [x19, #272]
  43f0dc:	strb	wzr, [x19, #255]
  43f0e0:	mov	x0, x19
  43f0e4:	blr	x3
  43f0e8:	str	xzr, [x19, #256]
  43f0ec:	ldr	x0, [x19, #320]
  43f0f0:	mov	x1, #0x0                   	// #0
  43f0f4:	add	x0, x0, #0x1
  43f0f8:	str	x0, [x19, #320]
  43f0fc:	add	x0, x1, #0x1
  43f100:	str	x0, [x19, #256]
  43f104:	mov	w0, #0x5b                  	// #91
  43f108:	strb	w0, [x19, x1]
  43f10c:	strb	w0, [x19, #264]
  43f110:	mov	w1, w21
  43f114:	mov	x0, x19
  43f118:	ldr	x2, [x20, #16]
  43f11c:	ldr	x2, [x2, #16]
  43f120:	bl	441798 <nftw@plt+0x3ec18>
  43f124:	ldr	x1, [x19, #256]
  43f128:	cmp	x1, #0xff
  43f12c:	b.ne	43f154 <nftw@plt+0x3c5d4>  // b.any
  43f130:	ldp	x3, x2, [x19, #272]
  43f134:	strb	wzr, [x19, #255]
  43f138:	mov	x0, x19
  43f13c:	blr	x3
  43f140:	str	xzr, [x19, #256]
  43f144:	ldr	x0, [x19, #320]
  43f148:	mov	x1, #0x0                   	// #0
  43f14c:	add	x0, x0, #0x1
  43f150:	str	x0, [x19, #320]
  43f154:	add	x0, x1, #0x1
  43f158:	str	x0, [x19, #256]
  43f15c:	mov	w0, #0x5d                  	// #93
  43f160:	strb	w0, [x19, x1]
  43f164:	strb	w0, [x19, #264]
  43f168:	ldr	x0, [x20, #8]
  43f16c:	ldr	w1, [x0]
  43f170:	cmp	w1, #0x32
  43f174:	b.eq	4412a4 <nftw@plt+0x3e724>  // b.none
  43f178:	ldp	x21, x22, [sp, #32]
  43f17c:	ldp	x23, x24, [sp, #48]
  43f180:	b	43d9e4 <nftw@plt+0x3ae64>
  43f184:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f188:	add	x24, x24, #0x550
  43f18c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f190:	add	x24, x24, #0xe
  43f194:	add	x22, x22, #0x551
  43f198:	mov	w23, #0x6a                  	// #106
  43f19c:	ldr	x1, [x19, #256]
  43f1a0:	b	43f1c4 <nftw@plt+0x3c644>
  43f1a4:	mov	x0, x1
  43f1a8:	add	x1, x1, #0x1
  43f1ac:	str	x1, [x19, #256]
  43f1b0:	cmp	x24, x22
  43f1b4:	strb	w23, [x19, x0]
  43f1b8:	strb	w23, [x19, #264]
  43f1bc:	b.eq	43fd7c <nftw@plt+0x3d1fc>  // b.none
  43f1c0:	ldrb	w23, [x22], #1
  43f1c4:	cmp	x1, #0xff
  43f1c8:	b.ne	43f1a4 <nftw@plt+0x3c624>  // b.any
  43f1cc:	ldp	x3, x2, [x19, #272]
  43f1d0:	strb	wzr, [x19, #255]
  43f1d4:	mov	x0, x19
  43f1d8:	blr	x3
  43f1dc:	ldr	x2, [x19, #320]
  43f1e0:	mov	x1, #0x1                   	// #1
  43f1e4:	mov	x0, #0x0                   	// #0
  43f1e8:	add	x2, x2, x1
  43f1ec:	str	x2, [x19, #320]
  43f1f0:	b	43f1ac <nftw@plt+0x3c62c>
  43f1f4:	ldr	x2, [x20, #8]
  43f1f8:	mov	w1, w21
  43f1fc:	mov	x0, x19
  43f200:	bl	441798 <nftw@plt+0x3ec18>
  43f204:	ldr	x2, [x20, #16]
  43f208:	mov	w1, w21
  43f20c:	mov	x0, x19
  43f210:	bl	441798 <nftw@plt+0x3ec18>
  43f214:	ldp	x21, x22, [sp, #32]
  43f218:	ldp	x23, x24, [sp, #48]
  43f21c:	b	43d9e4 <nftw@plt+0x3ae64>
  43f220:	ldr	x1, [x19, #256]
  43f224:	ldrb	w20, [x20, #8]
  43f228:	add	x0, x1, #0x1
  43f22c:	cmp	x1, #0xff
  43f230:	b.ne	43f258 <nftw@plt+0x3c6d8>  // b.any
  43f234:	ldp	x3, x2, [x19, #272]
  43f238:	strb	wzr, [x19, #255]
  43f23c:	mov	x0, x19
  43f240:	blr	x3
  43f244:	ldr	x2, [x19, #320]
  43f248:	mov	x0, #0x1                   	// #1
  43f24c:	mov	x1, #0x0                   	// #0
  43f250:	add	x2, x2, x0
  43f254:	str	x2, [x19, #320]
  43f258:	str	x0, [x19, #256]
  43f25c:	strb	w20, [x19, x1]
  43f260:	strb	w20, [x19, #264]
  43f264:	ldp	x21, x22, [sp, #32]
  43f268:	ldp	x23, x24, [sp, #48]
  43f26c:	b	43d9e4 <nftw@plt+0x3ae64>
  43f270:	ldr	w2, [x20, #8]
  43f274:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  43f278:	add	x1, x1, #0x840
  43f27c:	add	x0, sp, #0x60
  43f280:	bl	4025b0 <sprintf@plt>
  43f284:	add	x0, sp, #0x60
  43f288:	bl	4024f0 <strlen@plt>
  43f28c:	cbz	x0, 441110 <nftw@plt+0x3e590>
  43f290:	add	x20, sp, #0x60
  43f294:	add	x22, x20, x0
  43f298:	ldr	x1, [x19, #256]
  43f29c:	b	43f2c0 <nftw@plt+0x3c740>
  43f2a0:	mov	x0, x1
  43f2a4:	add	x1, x1, #0x1
  43f2a8:	str	x1, [x19, #256]
  43f2ac:	add	x20, x20, #0x1
  43f2b0:	strb	w21, [x19, x0]
  43f2b4:	cmp	x22, x20
  43f2b8:	strb	w21, [x19, #264]
  43f2bc:	b.eq	43fe30 <nftw@plt+0x3d2b0>  // b.none
  43f2c0:	ldrb	w21, [x20]
  43f2c4:	cmp	x1, #0xff
  43f2c8:	b.ne	43f2a0 <nftw@plt+0x3c720>  // b.any
  43f2cc:	ldp	x3, x2, [x19, #272]
  43f2d0:	strb	wzr, [x19, #255]
  43f2d4:	mov	x0, x19
  43f2d8:	blr	x3
  43f2dc:	ldr	x2, [x19, #320]
  43f2e0:	mov	x1, #0x1                   	// #1
  43f2e4:	mov	x0, #0x0                   	// #0
  43f2e8:	add	x2, x2, x1
  43f2ec:	str	x2, [x19, #320]
  43f2f0:	b	43f2a8 <nftw@plt+0x3c728>
  43f2f4:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f2f8:	add	x24, x24, #0x560
  43f2fc:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f300:	add	x24, x24, #0xa
  43f304:	add	x22, x22, #0x561
  43f308:	mov	w23, #0x64                  	// #100
  43f30c:	ldr	x1, [x19, #256]
  43f310:	b	43f334 <nftw@plt+0x3c7b4>
  43f314:	mov	x0, x1
  43f318:	add	x1, x1, #0x1
  43f31c:	str	x1, [x19, #256]
  43f320:	cmp	x22, x24
  43f324:	strb	w23, [x19, x0]
  43f328:	strb	w23, [x19, #264]
  43f32c:	b.eq	43fba4 <nftw@plt+0x3d024>  // b.none
  43f330:	ldrb	w23, [x22], #1
  43f334:	cmp	x1, #0xff
  43f338:	b.ne	43f314 <nftw@plt+0x3c794>  // b.any
  43f33c:	ldp	x3, x2, [x19, #272]
  43f340:	strb	wzr, [x19, #255]
  43f344:	mov	x0, x19
  43f348:	blr	x3
  43f34c:	ldr	x2, [x19, #320]
  43f350:	mov	x1, #0x1                   	// #1
  43f354:	mov	x0, #0x0                   	// #0
  43f358:	add	x2, x2, x1
  43f35c:	str	x2, [x19, #320]
  43f360:	b	43f31c <nftw@plt+0x3c79c>
  43f364:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f368:	add	x24, x24, #0x580
  43f36c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f370:	add	x24, x24, #0x1d
  43f374:	add	x22, x22, #0x581
  43f378:	mov	w23, #0x67                  	// #103
  43f37c:	ldr	x1, [x19, #256]
  43f380:	b	43f3a4 <nftw@plt+0x3c824>
  43f384:	mov	x0, x1
  43f388:	add	x1, x1, #0x1
  43f38c:	str	x1, [x19, #256]
  43f390:	cmp	x22, x24
  43f394:	strb	w23, [x19, x0]
  43f398:	strb	w23, [x19, #264]
  43f39c:	b.eq	43fde8 <nftw@plt+0x3d268>  // b.none
  43f3a0:	ldrb	w23, [x22], #1
  43f3a4:	cmp	x1, #0xff
  43f3a8:	b.ne	43f384 <nftw@plt+0x3c804>  // b.any
  43f3ac:	ldp	x3, x2, [x19, #272]
  43f3b0:	strb	wzr, [x19, #255]
  43f3b4:	mov	x0, x19
  43f3b8:	blr	x3
  43f3bc:	ldr	x2, [x19, #320]
  43f3c0:	mov	x1, #0x1                   	// #1
  43f3c4:	mov	x0, #0x0                   	// #0
  43f3c8:	add	x2, x2, x1
  43f3cc:	str	x2, [x19, #320]
  43f3d0:	b	43f38c <nftw@plt+0x3c80c>
  43f3d4:	ldrsw	x22, [x20, #16]
  43f3d8:	ldr	x20, [x20, #8]
  43f3dc:	tbnz	w21, #2, 4401b8 <nftw@plt+0x3d638>
  43f3e0:	cbz	x22, 44138c <nftw@plt+0x3e80c>
  43f3e4:	add	x22, x20, x22
  43f3e8:	ldr	x1, [x19, #256]
  43f3ec:	b	43f410 <nftw@plt+0x3c890>
  43f3f0:	mov	x0, x1
  43f3f4:	add	x1, x1, #0x1
  43f3f8:	str	x1, [x19, #256]
  43f3fc:	add	x20, x20, #0x1
  43f400:	strb	w21, [x19, x0]
  43f404:	cmp	x22, x20
  43f408:	strb	w21, [x19, #264]
  43f40c:	b.eq	4402cc <nftw@plt+0x3d74c>  // b.none
  43f410:	ldrb	w21, [x20]
  43f414:	cmp	x1, #0xff
  43f418:	b.ne	43f3f0 <nftw@plt+0x3c870>  // b.any
  43f41c:	ldp	x3, x2, [x19, #272]
  43f420:	strb	wzr, [x19, #255]
  43f424:	mov	x0, x19
  43f428:	blr	x3
  43f42c:	ldr	x2, [x19, #320]
  43f430:	mov	x1, #0x1                   	// #1
  43f434:	mov	x0, #0x0                   	// #0
  43f438:	add	x2, x2, x1
  43f43c:	str	x2, [x19, #320]
  43f440:	b	43f3f8 <nftw@plt+0x3c878>
  43f444:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f448:	add	x22, x22, #0x510
  43f44c:	add	x24, x22, #0x9
  43f450:	mov	w23, #0x6f                  	// #111
  43f454:	ldr	x1, [x19, #256]
  43f458:	b	43f480 <nftw@plt+0x3c900>
  43f45c:	mov	x0, x1
  43f460:	add	x1, x1, #0x1
  43f464:	str	x1, [x19, #256]
  43f468:	add	x22, x22, #0x1
  43f46c:	strb	w23, [x19, x0]
  43f470:	cmp	x22, x24
  43f474:	strb	w23, [x19, #264]
  43f478:	b.eq	43fd98 <nftw@plt+0x3d218>  // b.none
  43f47c:	ldrb	w23, [x22]
  43f480:	cmp	x1, #0xff
  43f484:	b.ne	43f45c <nftw@plt+0x3c8dc>  // b.any
  43f488:	ldp	x3, x2, [x19, #272]
  43f48c:	strb	wzr, [x19, #255]
  43f490:	mov	x0, x19
  43f494:	blr	x3
  43f498:	ldr	x2, [x19, #320]
  43f49c:	mov	x1, #0x1                   	// #1
  43f4a0:	mov	x0, #0x0                   	// #0
  43f4a4:	add	x2, x2, x1
  43f4a8:	str	x2, [x19, #320]
  43f4ac:	b	43f464 <nftw@plt+0x3c8e4>
  43f4b0:	ldr	x2, [x20, #8]
  43f4b4:	mov	w1, w21
  43f4b8:	mov	x0, x19
  43f4bc:	bl	442938 <nftw@plt+0x3fdb8>
  43f4c0:	ldp	x21, x22, [sp, #32]
  43f4c4:	ldp	x23, x24, [sp, #48]
  43f4c8:	b	43d9e4 <nftw@plt+0x3ae64>
  43f4cc:	ldp	x22, x20, [x20, #8]
  43f4d0:	ldr	w0, [x22]
  43f4d4:	cmp	w0, #0x32
  43f4d8:	b.eq	440408 <nftw@plt+0x3d888>  // b.none
  43f4dc:	cmp	w0, #0x34
  43f4e0:	b.ne	441754 <nftw@plt+0x3ebd4>  // b.any
  43f4e4:	ldr	x1, [x19, #256]
  43f4e8:	add	x0, x1, #0x1
  43f4ec:	cmp	x1, #0xff
  43f4f0:	b.ne	43f518 <nftw@plt+0x3c998>  // b.any
  43f4f4:	ldp	x3, x2, [x19, #272]
  43f4f8:	strb	wzr, [x19, #255]
  43f4fc:	mov	x0, x19
  43f500:	blr	x3
  43f504:	ldr	x2, [x19, #320]
  43f508:	mov	x0, #0x1                   	// #1
  43f50c:	mov	x1, #0x0                   	// #0
  43f510:	add	x2, x2, x0
  43f514:	str	x2, [x19, #320]
  43f518:	str	x0, [x19, #256]
  43f51c:	mov	w0, #0x28                  	// #40
  43f520:	strb	w0, [x19, x1]
  43f524:	mov	w1, w21
  43f528:	strb	w0, [x19, #264]
  43f52c:	mov	x0, x19
  43f530:	ldr	x2, [x22, #8]
  43f534:	bl	441798 <nftw@plt+0x3ec18>
  43f538:	ldr	x1, [x19, #256]
  43f53c:	add	x0, x1, #0x1
  43f540:	cmp	x1, #0xff
  43f544:	b.ne	43f56c <nftw@plt+0x3c9ec>  // b.any
  43f548:	ldp	x3, x2, [x19, #272]
  43f54c:	strb	wzr, [x19, #255]
  43f550:	mov	x0, x19
  43f554:	blr	x3
  43f558:	ldr	x2, [x19, #320]
  43f55c:	mov	x0, #0x1                   	// #1
  43f560:	mov	x1, #0x0                   	// #0
  43f564:	add	x2, x2, x0
  43f568:	str	x2, [x19, #320]
  43f56c:	str	x0, [x19, #256]
  43f570:	mov	w0, #0x29                  	// #41
  43f574:	strb	w0, [x19, x1]
  43f578:	strb	w0, [x19, #264]
  43f57c:	mov	w1, w21
  43f580:	mov	x2, x20
  43f584:	mov	x0, x19
  43f588:	bl	4429f0 <nftw@plt+0x3fe70>
  43f58c:	ldp	x21, x22, [sp, #32]
  43f590:	ldp	x23, x24, [sp, #48]
  43f594:	b	43d9e4 <nftw@plt+0x3ae64>
  43f598:	ldr	x0, [x20, #8]
  43f59c:	tbnz	w21, #2, 44014c <nftw@plt+0x3d5cc>
  43f5a0:	ldrsw	x22, [x0, #8]
  43f5a4:	ldr	x20, [x0]
  43f5a8:	cbz	x22, 441350 <nftw@plt+0x3e7d0>
  43f5ac:	add	x22, x20, x22
  43f5b0:	ldr	x1, [x19, #256]
  43f5b4:	b	43f5d8 <nftw@plt+0x3ca58>
  43f5b8:	mov	x0, x1
  43f5bc:	add	x1, x1, #0x1
  43f5c0:	str	x1, [x19, #256]
  43f5c4:	add	x20, x20, #0x1
  43f5c8:	strb	w21, [x19, x0]
  43f5cc:	cmp	x22, x20
  43f5d0:	strb	w21, [x19, #264]
  43f5d4:	b.eq	4402d8 <nftw@plt+0x3d758>  // b.none
  43f5d8:	ldrb	w21, [x20]
  43f5dc:	cmp	x1, #0xff
  43f5e0:	b.ne	43f5b8 <nftw@plt+0x3ca38>  // b.any
  43f5e4:	ldp	x3, x2, [x19, #272]
  43f5e8:	strb	wzr, [x19, #255]
  43f5ec:	mov	x0, x19
  43f5f0:	blr	x3
  43f5f4:	ldr	x2, [x19, #320]
  43f5f8:	mov	x1, #0x1                   	// #1
  43f5fc:	mov	x0, #0x0                   	// #0
  43f600:	add	x2, x2, x1
  43f604:	str	x2, [x19, #320]
  43f608:	b	43f5c0 <nftw@plt+0x3ca40>
  43f60c:	ldr	x2, [x0, #8]
  43f610:	add	x0, sp, #0x60
  43f614:	ldr	x1, [x19, #288]
  43f618:	stp	x4, x20, [sp, #96]
  43f61c:	str	wzr, [sp, #112]
  43f620:	str	x1, [sp, #120]
  43f624:	str	x0, [x19, #296]
  43f628:	cbnz	x2, 43da48 <nftw@plt+0x3aec8>
  43f62c:	b	43da44 <nftw@plt+0x3aec4>
  43f630:	ldp	x21, x22, [sp, #32]
  43f634:	ldp	x23, x24, [sp, #48]
  43f638:	b	43d9e4 <nftw@plt+0x3ae64>
  43f63c:	ldr	x2, [x20, #16]
  43f640:	mov	w1, w21
  43f644:	mov	x0, x19
  43f648:	bl	441798 <nftw@plt+0x3ec18>
  43f64c:	ldr	x1, [x19, #256]
  43f650:	add	x0, x1, #0x1
  43f654:	cmp	x1, #0xff
  43f658:	b.ne	43f680 <nftw@plt+0x3cb00>  // b.any
  43f65c:	ldp	x3, x2, [x19, #272]
  43f660:	strb	wzr, [x19, #255]
  43f664:	mov	x0, x19
  43f668:	blr	x3
  43f66c:	ldr	x2, [x19, #320]
  43f670:	mov	x0, #0x1                   	// #1
  43f674:	mov	x1, #0x0                   	// #0
  43f678:	add	x2, x2, x0
  43f67c:	str	x2, [x19, #320]
  43f680:	str	x0, [x19, #256]
  43f684:	mov	w0, #0x5d                  	// #93
  43f688:	strb	w0, [x19, x1]
  43f68c:	strb	w0, [x19, #264]
  43f690:	ldp	x21, x22, [sp, #32]
  43f694:	ldp	x23, x24, [sp, #48]
  43f698:	b	43d9e4 <nftw@plt+0x3ae64>
  43f69c:	ldr	x2, [x20, #16]
  43f6a0:	mov	w1, w21
  43f6a4:	mov	x0, x19
  43f6a8:	bl	441798 <nftw@plt+0x3ec18>
  43f6ac:	ldp	x21, x22, [sp, #32]
  43f6b0:	ldp	x23, x24, [sp, #48]
  43f6b4:	b	43d9e4 <nftw@plt+0x3ae64>
  43f6b8:	ldr	x2, [x20, #8]
  43f6bc:	mov	w1, w21
  43f6c0:	mov	x0, x19
  43f6c4:	bl	441798 <nftw@plt+0x3ec18>
  43f6c8:	ldp	x21, x22, [sp, #32]
  43f6cc:	ldp	x23, x24, [sp, #48]
  43f6d0:	b	43d9e4 <nftw@plt+0x3ae64>
  43f6d4:	ldr	x2, [x20, #8]
  43f6d8:	mov	w1, w21
  43f6dc:	mov	x0, x19
  43f6e0:	bl	441798 <nftw@plt+0x3ec18>
  43f6e4:	ldp	x21, x22, [sp, #32]
  43f6e8:	ldp	x23, x24, [sp, #48]
  43f6ec:	b	43d9e4 <nftw@plt+0x3ae64>
  43f6f0:	ldr	x2, [x20, #16]
  43f6f4:	mov	w1, w21
  43f6f8:	mov	x0, x19
  43f6fc:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f700:	add	x24, x24, #0x398
  43f704:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43f708:	bl	441798 <nftw@plt+0x3ec18>
  43f70c:	add	x24, x24, #0x5
  43f710:	add	x22, x22, #0x399
  43f714:	mov	w23, #0x20                  	// #32
  43f718:	ldr	x1, [x19, #256]
  43f71c:	b	43f740 <nftw@plt+0x3cbc0>
  43f720:	mov	x0, x1
  43f724:	add	x1, x1, #0x1
  43f728:	str	x1, [x19, #256]
  43f72c:	cmp	x22, x24
  43f730:	strb	w23, [x19, x0]
  43f734:	strb	w23, [x19, #264]
  43f738:	b.eq	43f7e0 <nftw@plt+0x3cc60>  // b.none
  43f73c:	ldrb	w23, [x22], #1
  43f740:	cmp	x1, #0xff
  43f744:	b.ne	43f720 <nftw@plt+0x3cba0>  // b.any
  43f748:	ldp	x3, x2, [x19, #272]
  43f74c:	strb	wzr, [x19, #255]
  43f750:	mov	x0, x19
  43f754:	blr	x3
  43f758:	ldr	x2, [x19, #320]
  43f75c:	mov	x1, #0x1                   	// #1
  43f760:	mov	x0, #0x0                   	// #0
  43f764:	add	x2, x2, x1
  43f768:	str	x2, [x19, #320]
  43f76c:	b	43f728 <nftw@plt+0x3cba8>
  43f770:	ldr	x2, [x20, #8]
  43f774:	mov	w1, w21
  43f778:	mov	x0, x19
  43f77c:	bl	441798 <nftw@plt+0x3ec18>
  43f780:	ldp	x21, x22, [sp, #32]
  43f784:	ldp	x23, x24, [sp, #48]
  43f788:	b	43d9e4 <nftw@plt+0x3ae64>
  43f78c:	ldr	x2, [x20, #8]
  43f790:	mov	w1, w21
  43f794:	mov	x0, x19
  43f798:	bl	441798 <nftw@plt+0x3ec18>
  43f79c:	ldp	x21, x22, [sp, #32]
  43f7a0:	ldp	x23, x24, [sp, #48]
  43f7a4:	b	43d9e4 <nftw@plt+0x3ae64>
  43f7a8:	ldr	x2, [x20, #8]
  43f7ac:	mov	w1, w21
  43f7b0:	mov	x0, x19
  43f7b4:	bl	441798 <nftw@plt+0x3ec18>
  43f7b8:	ldp	x21, x22, [sp, #32]
  43f7bc:	ldp	x23, x24, [sp, #48]
  43f7c0:	b	43d9e4 <nftw@plt+0x3ae64>
  43f7c4:	ldr	x2, [x20, #8]
  43f7c8:	mov	w1, w21
  43f7cc:	mov	x0, x19
  43f7d0:	bl	441798 <nftw@plt+0x3ec18>
  43f7d4:	ldp	x21, x22, [sp, #32]
  43f7d8:	ldp	x23, x24, [sp, #48]
  43f7dc:	b	43d9e4 <nftw@plt+0x3ae64>
  43f7e0:	ldr	x2, [x20, #8]
  43f7e4:	mov	w1, w21
  43f7e8:	mov	x0, x19
  43f7ec:	bl	441798 <nftw@plt+0x3ec18>
  43f7f0:	ldp	x21, x22, [sp, #32]
  43f7f4:	ldp	x23, x24, [sp, #48]
  43f7f8:	b	43d9e4 <nftw@plt+0x3ae64>
  43f7fc:	ldr	x2, [x20, #16]
  43f800:	mov	w1, w21
  43f804:	mov	x0, x19
  43f808:	bl	441798 <nftw@plt+0x3ec18>
  43f80c:	ldr	x1, [x19, #256]
  43f810:	add	x0, x1, #0x1
  43f814:	cmp	x1, #0xff
  43f818:	b.ne	43f840 <nftw@plt+0x3ccc0>  // b.any
  43f81c:	ldp	x3, x2, [x19, #272]
  43f820:	strb	wzr, [x19, #255]
  43f824:	mov	x0, x19
  43f828:	blr	x3
  43f82c:	ldr	x2, [x19, #320]
  43f830:	mov	x0, #0x1                   	// #1
  43f834:	mov	x1, #0x0                   	// #0
  43f838:	add	x2, x2, x0
  43f83c:	str	x2, [x19, #320]
  43f840:	str	x0, [x19, #256]
  43f844:	mov	w0, #0x5d                  	// #93
  43f848:	strb	w0, [x19, x1]
  43f84c:	strb	w0, [x19, #264]
  43f850:	ldp	x21, x22, [sp, #32]
  43f854:	ldp	x23, x24, [sp, #48]
  43f858:	b	43d9e4 <nftw@plt+0x3ae64>
  43f85c:	ldr	x20, [x22, #8]
  43f860:	ldrb	w0, [x20]
  43f864:	sub	w0, w0, #0x61
  43f868:	and	w0, w0, #0xff
  43f86c:	cmp	w0, #0x19
  43f870:	b.hi	43f8b8 <nftw@plt+0x3cd38>  // b.pmore
  43f874:	add	x0, x1, #0x1
  43f878:	cmp	x1, #0xff
  43f87c:	b.ne	43f8a8 <nftw@plt+0x3cd28>  // b.any
  43f880:	ldp	x3, x2, [x19, #272]
  43f884:	strb	wzr, [x19, #255]
  43f888:	mov	x0, x19
  43f88c:	blr	x3
  43f890:	ldr	x2, [x19, #320]
  43f894:	mov	x0, #0x1                   	// #1
  43f898:	mov	x1, #0x0                   	// #0
  43f89c:	add	x2, x2, x0
  43f8a0:	ldr	x20, [x22, #8]
  43f8a4:	str	x2, [x19, #320]
  43f8a8:	str	x0, [x19, #256]
  43f8ac:	mov	w0, #0x20                  	// #32
  43f8b0:	strb	w0, [x19, x1]
  43f8b4:	strb	w0, [x19, #264]
  43f8b8:	sxtw	x22, w23
  43f8bc:	sub	w0, w23, #0x1
  43f8c0:	add	x1, x20, x22
  43f8c4:	sxtw	x0, w0
  43f8c8:	ldurb	w1, [x1, #-1]
  43f8cc:	cmp	w1, #0x20
  43f8d0:	csel	x22, x22, x0, ne  // ne = any
  43f8d4:	cbz	x22, 441104 <nftw@plt+0x3e584>
  43f8d8:	add	x22, x20, x22
  43f8dc:	ldr	x1, [x19, #256]
  43f8e0:	b	43f904 <nftw@plt+0x3cd84>
  43f8e4:	mov	x0, x1
  43f8e8:	add	x1, x1, #0x1
  43f8ec:	str	x1, [x19, #256]
  43f8f0:	add	x20, x20, #0x1
  43f8f4:	strb	w21, [x19, x0]
  43f8f8:	cmp	x22, x20
  43f8fc:	strb	w21, [x19, #264]
  43f900:	b.eq	43fe24 <nftw@plt+0x3d2a4>  // b.none
  43f904:	ldrb	w21, [x20]
  43f908:	cmp	x1, #0xff
  43f90c:	b.ne	43f8e4 <nftw@plt+0x3cd64>  // b.any
  43f910:	ldp	x3, x2, [x19, #272]
  43f914:	strb	wzr, [x19, #255]
  43f918:	mov	x0, x19
  43f91c:	blr	x3
  43f920:	ldr	x2, [x19, #320]
  43f924:	mov	x1, #0x1                   	// #1
  43f928:	mov	x0, #0x0                   	// #0
  43f92c:	add	x2, x2, x1
  43f930:	str	x2, [x19, #320]
  43f934:	b	43f8ec <nftw@plt+0x3cd6c>
  43f938:	ldr	x2, [x20, #8]
  43f93c:	mov	w1, w21
  43f940:	mov	x0, x19
  43f944:	bl	441798 <nftw@plt+0x3ec18>
  43f948:	ldp	x21, x22, [sp, #32]
  43f94c:	ldp	x23, x24, [sp, #48]
  43f950:	b	43d9e4 <nftw@plt+0x3ae64>
  43f954:	ldr	x2, [x20, #8]
  43f958:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  43f95c:	add	x1, x1, #0x840
  43f960:	add	x0, sp, #0x60
  43f964:	add	w2, w2, #0x1
  43f968:	bl	4025b0 <sprintf@plt>
  43f96c:	add	x0, sp, #0x60
  43f970:	bl	4024f0 <strlen@plt>
  43f974:	cbz	x0, 43f9f8 <nftw@plt+0x3ce78>
  43f978:	add	x20, sp, #0x60
  43f97c:	add	x22, x20, x0
  43f980:	ldr	x1, [x19, #256]
  43f984:	b	43f9a8 <nftw@plt+0x3ce28>
  43f988:	mov	x0, x1
  43f98c:	add	x1, x1, #0x1
  43f990:	str	x1, [x19, #256]
  43f994:	add	x20, x20, #0x1
  43f998:	strb	w21, [x19, x0]
  43f99c:	cmp	x22, x20
  43f9a0:	strb	w21, [x19, #264]
  43f9a4:	b.eq	43f9fc <nftw@plt+0x3ce7c>  // b.none
  43f9a8:	ldrb	w21, [x20]
  43f9ac:	cmp	x1, #0xff
  43f9b0:	b.ne	43f988 <nftw@plt+0x3ce08>  // b.any
  43f9b4:	ldp	x3, x2, [x19, #272]
  43f9b8:	strb	wzr, [x19, #255]
  43f9bc:	mov	x0, x19
  43f9c0:	blr	x3
  43f9c4:	ldr	x2, [x19, #320]
  43f9c8:	mov	x1, #0x1                   	// #1
  43f9cc:	mov	x0, #0x0                   	// #0
  43f9d0:	add	x2, x2, x1
  43f9d4:	str	x2, [x19, #320]
  43f9d8:	b	43f990 <nftw@plt+0x3ce10>
  43f9dc:	ldr	x2, [x20, #8]
  43f9e0:	mov	w1, w21
  43f9e4:	mov	x0, x19
  43f9e8:	bl	441798 <nftw@plt+0x3ec18>
  43f9ec:	ldp	x21, x22, [sp, #32]
  43f9f0:	ldp	x23, x24, [sp, #48]
  43f9f4:	b	43d9e4 <nftw@plt+0x3ae64>
  43f9f8:	ldr	x1, [x19, #256]
  43f9fc:	add	x0, x1, #0x1
  43fa00:	cmp	x1, #0xff
  43fa04:	b.ne	43fa2c <nftw@plt+0x3ceac>  // b.any
  43fa08:	ldp	x3, x2, [x19, #272]
  43fa0c:	strb	wzr, [x19, #255]
  43fa10:	mov	x0, x19
  43fa14:	blr	x3
  43fa18:	ldr	x2, [x19, #320]
  43fa1c:	mov	x0, #0x1                   	// #1
  43fa20:	mov	x1, #0x0                   	// #0
  43fa24:	add	x2, x2, x0
  43fa28:	str	x2, [x19, #320]
  43fa2c:	str	x0, [x19, #256]
  43fa30:	mov	w0, #0x7d                  	// #125
  43fa34:	strb	w0, [x19, x1]
  43fa38:	strb	w0, [x19, #264]
  43fa3c:	ldp	x21, x22, [sp, #32]
  43fa40:	ldp	x23, x24, [sp, #48]
  43fa44:	b	43d9e4 <nftw@plt+0x3ae64>
  43fa48:	ldr	x2, [x20, #8]
  43fa4c:	mov	w1, w21
  43fa50:	mov	x0, x19
  43fa54:	bl	441798 <nftw@plt+0x3ec18>
  43fa58:	ldp	x21, x22, [sp, #32]
  43fa5c:	ldp	x23, x24, [sp, #48]
  43fa60:	b	43d9e4 <nftw@plt+0x3ae64>
  43fa64:	ldr	w3, [x19, #312]
  43fa68:	mov	w1, w21
  43fa6c:	ldr	x2, [x20, #8]
  43fa70:	add	w3, w3, #0x1
  43fa74:	str	w3, [x19, #312]
  43fa78:	mov	x0, x19
  43fa7c:	mov	w21, #0x29                  	// #41
  43fa80:	mov	x22, #0x0                   	// #0
  43fa84:	bl	441798 <nftw@plt+0x3ec18>
  43fa88:	ldr	w0, [x19, #312]
  43fa8c:	ldr	x1, [x19, #256]
  43fa90:	sub	w0, w0, #0x1
  43fa94:	str	w0, [x19, #312]
  43fa98:	b	43fac0 <nftw@plt+0x3cf40>
  43fa9c:	mov	x0, x1
  43faa0:	add	x1, x1, #0x1
  43faa4:	str	x1, [x19, #256]
  43faa8:	cmp	x22, #0x1
  43faac:	strb	w21, [x19, x0]
  43fab0:	strb	w21, [x19, #264]
  43fab4:	mov	w21, #0x23                  	// #35
  43fab8:	b.eq	43faf0 <nftw@plt+0x3cf70>  // b.none
  43fabc:	mov	x22, #0x1                   	// #1
  43fac0:	cmp	x1, #0xff
  43fac4:	b.ne	43fa9c <nftw@plt+0x3cf1c>  // b.any
  43fac8:	ldp	x3, x2, [x19, #272]
  43facc:	strb	wzr, [x19, #255]
  43fad0:	mov	x0, x19
  43fad4:	blr	x3
  43fad8:	ldr	x2, [x19, #320]
  43fadc:	mov	x1, #0x1                   	// #1
  43fae0:	mov	x0, #0x0                   	// #0
  43fae4:	add	x2, x2, x1
  43fae8:	str	x2, [x19, #320]
  43faec:	b	43faa4 <nftw@plt+0x3cf24>
  43faf0:	ldr	w2, [x20, #16]
  43faf4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  43faf8:	add	x1, x1, #0x840
  43fafc:	add	x0, sp, #0x60
  43fb00:	add	w2, w2, #0x1
  43fb04:	bl	4025b0 <sprintf@plt>
  43fb08:	add	x0, sp, #0x60
  43fb0c:	bl	4024f0 <strlen@plt>
  43fb10:	cbz	x0, 43fb78 <nftw@plt+0x3cff8>
  43fb14:	add	x20, sp, #0x60
  43fb18:	add	x23, x20, x0
  43fb1c:	ldr	x1, [x19, #256]
  43fb20:	b	43fb44 <nftw@plt+0x3cfc4>
  43fb24:	mov	x0, x1
  43fb28:	add	x1, x1, #0x1
  43fb2c:	str	x1, [x19, #256]
  43fb30:	add	x20, x20, #0x1
  43fb34:	strb	w21, [x19, x0]
  43fb38:	cmp	x23, x20
  43fb3c:	strb	w21, [x19, #264]
  43fb40:	b.eq	43fb7c <nftw@plt+0x3cffc>  // b.none
  43fb44:	ldrb	w21, [x20]
  43fb48:	cmp	x1, #0xff
  43fb4c:	b.ne	43fb24 <nftw@plt+0x3cfa4>  // b.any
  43fb50:	ldp	x3, x2, [x19, #272]
  43fb54:	strb	wzr, [x19, #255]
  43fb58:	mov	x0, x19
  43fb5c:	blr	x3
  43fb60:	ldr	x2, [x19, #320]
  43fb64:	mov	x1, #0x1                   	// #1
  43fb68:	mov	x0, #0x0                   	// #0
  43fb6c:	add	x2, x2, x1
  43fb70:	str	x2, [x19, #320]
  43fb74:	b	43fb2c <nftw@plt+0x3cfac>
  43fb78:	ldr	x1, [x19, #256]
  43fb7c:	cmp	x1, #0xff
  43fb80:	b.eq	4403e4 <nftw@plt+0x3d864>  // b.none
  43fb84:	add	x22, x1, #0x1
  43fb88:	str	x22, [x19, #256]
  43fb8c:	mov	w0, #0x7d                  	// #125
  43fb90:	strb	w0, [x19, x1]
  43fb94:	strb	w0, [x19, #264]
  43fb98:	ldp	x21, x22, [sp, #32]
  43fb9c:	ldp	x23, x24, [sp, #48]
  43fba0:	b	43d9e4 <nftw@plt+0x3ae64>
  43fba4:	ldr	x2, [x20, #8]
  43fba8:	mov	w1, w21
  43fbac:	mov	x0, x19
  43fbb0:	bl	441798 <nftw@plt+0x3ec18>
  43fbb4:	ldr	x1, [x19, #256]
  43fbb8:	add	x0, x1, #0x1
  43fbbc:	cmp	x1, #0xff
  43fbc0:	b.ne	43fbe8 <nftw@plt+0x3d068>  // b.any
  43fbc4:	ldp	x3, x2, [x19, #272]
  43fbc8:	strb	wzr, [x19, #255]
  43fbcc:	mov	x0, x19
  43fbd0:	blr	x3
  43fbd4:	ldr	x2, [x19, #320]
  43fbd8:	mov	x0, #0x1                   	// #1
  43fbdc:	mov	x1, #0x0                   	// #0
  43fbe0:	add	x2, x2, x0
  43fbe4:	str	x2, [x19, #320]
  43fbe8:	str	x0, [x19, #256]
  43fbec:	mov	w0, #0x29                  	// #41
  43fbf0:	strb	w0, [x19, x1]
  43fbf4:	strb	w0, [x19, #264]
  43fbf8:	ldp	x21, x22, [sp, #32]
  43fbfc:	ldp	x23, x24, [sp, #48]
  43fc00:	b	43d9e4 <nftw@plt+0x3ae64>
  43fc04:	ldr	x2, [x20, #8]
  43fc08:	mov	w1, w21
  43fc0c:	mov	x0, x19
  43fc10:	bl	441798 <nftw@plt+0x3ec18>
  43fc14:	ldp	x21, x22, [sp, #32]
  43fc18:	ldp	x23, x24, [sp, #48]
  43fc1c:	b	43d9e4 <nftw@plt+0x3ae64>
  43fc20:	ldr	x2, [x20, #8]
  43fc24:	mov	w1, w21
  43fc28:	mov	x0, x19
  43fc2c:	bl	441798 <nftw@plt+0x3ec18>
  43fc30:	ldp	x21, x22, [sp, #32]
  43fc34:	ldp	x23, x24, [sp, #48]
  43fc38:	b	43d9e4 <nftw@plt+0x3ae64>
  43fc3c:	ldr	x2, [x20, #8]
  43fc40:	mov	w1, w21
  43fc44:	mov	x0, x19
  43fc48:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43fc4c:	add	x22, x22, #0x388
  43fc50:	mov	w23, #0x2d                  	// #45
  43fc54:	bl	441798 <nftw@plt+0x3ec18>
  43fc58:	add	x24, x22, #0x4
  43fc5c:	ldr	x1, [x19, #256]
  43fc60:	b	43fc88 <nftw@plt+0x3d108>
  43fc64:	mov	x0, x1
  43fc68:	add	x1, x1, #0x1
  43fc6c:	str	x1, [x19, #256]
  43fc70:	add	x22, x22, #0x1
  43fc74:	strb	w23, [x19, x0]
  43fc78:	cmp	x24, x22
  43fc7c:	strb	w23, [x19, #264]
  43fc80:	b.eq	43fcb8 <nftw@plt+0x3d138>  // b.none
  43fc84:	ldrb	w23, [x22]
  43fc88:	cmp	x1, #0xff
  43fc8c:	b.ne	43fc64 <nftw@plt+0x3d0e4>  // b.any
  43fc90:	ldp	x3, x2, [x19, #272]
  43fc94:	strb	wzr, [x19, #255]
  43fc98:	mov	x0, x19
  43fc9c:	blr	x3
  43fca0:	ldr	x2, [x19, #320]
  43fca4:	mov	x1, #0x1                   	// #1
  43fca8:	mov	x0, #0x0                   	// #0
  43fcac:	add	x2, x2, x1
  43fcb0:	str	x2, [x19, #320]
  43fcb4:	b	43fc6c <nftw@plt+0x3d0ec>
  43fcb8:	ldr	x2, [x20, #16]
  43fcbc:	mov	w1, w21
  43fcc0:	mov	x0, x19
  43fcc4:	bl	441798 <nftw@plt+0x3ec18>
  43fcc8:	ldp	x21, x22, [sp, #32]
  43fccc:	ldp	x23, x24, [sp, #48]
  43fcd0:	b	43d9e4 <nftw@plt+0x3ae64>
  43fcd4:	ldr	x2, [x20, #8]
  43fcd8:	mov	w1, w21
  43fcdc:	mov	x0, x19
  43fce0:	bl	441798 <nftw@plt+0x3ec18>
  43fce4:	ldp	x21, x22, [sp, #32]
  43fce8:	ldp	x23, x24, [sp, #48]
  43fcec:	b	43d9e4 <nftw@plt+0x3ae64>
  43fcf0:	ldr	x2, [x20, #8]
  43fcf4:	mov	w1, w21
  43fcf8:	mov	x0, x19
  43fcfc:	bl	441798 <nftw@plt+0x3ec18>
  43fd00:	ldp	x21, x22, [sp, #32]
  43fd04:	ldp	x23, x24, [sp, #48]
  43fd08:	b	43d9e4 <nftw@plt+0x3ae64>
  43fd0c:	ldr	x2, [x20, #8]
  43fd10:	mov	w1, w21
  43fd14:	mov	x0, x19
  43fd18:	bl	441798 <nftw@plt+0x3ec18>
  43fd1c:	ldp	x21, x22, [sp, #32]
  43fd20:	ldp	x23, x24, [sp, #48]
  43fd24:	b	43d9e4 <nftw@plt+0x3ae64>
  43fd28:	ldr	x2, [x20, #8]
  43fd2c:	mov	w1, w21
  43fd30:	mov	x0, x19
  43fd34:	bl	441798 <nftw@plt+0x3ec18>
  43fd38:	ldp	x21, x22, [sp, #32]
  43fd3c:	ldp	x23, x24, [sp, #48]
  43fd40:	b	43d9e4 <nftw@plt+0x3ae64>
  43fd44:	ldr	x2, [x20, #8]
  43fd48:	mov	w1, w21
  43fd4c:	mov	x0, x19
  43fd50:	bl	441798 <nftw@plt+0x3ec18>
  43fd54:	ldp	x21, x22, [sp, #32]
  43fd58:	ldp	x23, x24, [sp, #48]
  43fd5c:	b	43d9e4 <nftw@plt+0x3ae64>
  43fd60:	ldr	x2, [x20, #8]
  43fd64:	mov	w1, w21
  43fd68:	mov	x0, x19
  43fd6c:	bl	441798 <nftw@plt+0x3ec18>
  43fd70:	ldp	x21, x22, [sp, #32]
  43fd74:	ldp	x23, x24, [sp, #48]
  43fd78:	b	43d9e4 <nftw@plt+0x3ae64>
  43fd7c:	ldr	x2, [x20, #8]
  43fd80:	mov	w1, w21
  43fd84:	mov	x0, x19
  43fd88:	bl	441798 <nftw@plt+0x3ec18>
  43fd8c:	ldp	x21, x22, [sp, #32]
  43fd90:	ldp	x23, x24, [sp, #48]
  43fd94:	b	43d9e4 <nftw@plt+0x3ae64>
  43fd98:	ldr	x0, [x19, #368]
  43fd9c:	cbz	x0, 43fdb0 <nftw@plt+0x3d230>
  43fda0:	ldr	x2, [x19, #288]
  43fda4:	add	x1, sp, #0x60
  43fda8:	stp	x2, x0, [sp, #96]
  43fdac:	str	x1, [x19, #288]
  43fdb0:	ldr	x2, [x20, #8]
  43fdb4:	ldr	w0, [x2]
  43fdb8:	cmp	w0, #0x4
  43fdbc:	b.eq	4406ac <nftw@plt+0x3db2c>  // b.none
  43fdc0:	mov	x0, x19
  43fdc4:	mov	w1, w21
  43fdc8:	bl	441798 <nftw@plt+0x3ec18>
  43fdcc:	ldr	x0, [x19, #368]
  43fdd0:	cbz	x0, 440c34 <nftw@plt+0x3e0b4>
  43fdd4:	ldr	x0, [sp, #96]
  43fdd8:	ldp	x21, x22, [sp, #32]
  43fddc:	ldp	x23, x24, [sp, #48]
  43fde0:	str	x0, [x19, #288]
  43fde4:	b	43d9e4 <nftw@plt+0x3ae64>
  43fde8:	ldr	x2, [x20, #8]
  43fdec:	mov	w1, w21
  43fdf0:	mov	x0, x19
  43fdf4:	bl	441798 <nftw@plt+0x3ec18>
  43fdf8:	ldp	x21, x22, [sp, #32]
  43fdfc:	ldp	x23, x24, [sp, #48]
  43fe00:	b	43d9e4 <nftw@plt+0x3ae64>
  43fe04:	mov	x2, x20
  43fe08:	mov	w1, w21
  43fe0c:	mov	x0, x19
  43fe10:	bl	441830 <nftw@plt+0x3ecb0>
  43fe14:	b	43da5c <nftw@plt+0x3aedc>
  43fe18:	ldp	x21, x22, [sp, #32]
  43fe1c:	ldp	x23, x24, [sp, #48]
  43fe20:	b	43d9e4 <nftw@plt+0x3ae64>
  43fe24:	ldp	x21, x22, [sp, #32]
  43fe28:	ldp	x23, x24, [sp, #48]
  43fe2c:	b	43d9e4 <nftw@plt+0x3ae64>
  43fe30:	ldp	x21, x22, [sp, #32]
  43fe34:	ldp	x23, x24, [sp, #48]
  43fe38:	b	43d9e4 <nftw@plt+0x3ae64>
  43fe3c:	ldp	x21, x22, [sp, #32]
  43fe40:	ldp	x23, x24, [sp, #48]
  43fe44:	ldp	x25, x26, [sp, #64]
  43fe48:	b	43d9e4 <nftw@plt+0x3ae64>
  43fe4c:	ldr	x2, [x20, #16]
  43fe50:	mov	x0, x19
  43fe54:	mov	w1, w21
  43fe58:	ldr	x20, [x19, #320]
  43fe5c:	bl	441798 <nftw@plt+0x3ec18>
  43fe60:	ldr	x0, [x19, #320]
  43fe64:	cmp	x0, x20
  43fe68:	b.eq	440a80 <nftw@plt+0x3df00>  // b.none
  43fe6c:	ldp	x21, x22, [sp, #32]
  43fe70:	ldp	x23, x24, [sp, #48]
  43fe74:	b	43d9e4 <nftw@plt+0x3ae64>
  43fe78:	ldr	x25, [x25, #8]
  43fe7c:	cbz	x25, 440d5c <nftw@plt+0x3e1dc>
  43fe80:	add	x3, x3, #0x20
  43fe84:	cmp	w24, #0x4
  43fe88:	b.eq	440a2c <nftw@plt+0x3deac>  // b.none
  43fe8c:	mov	x0, x4
  43fe90:	b	43ecc4 <nftw@plt+0x3c144>
  43fe94:	ldr	x25, [x20, #8]
  43fe98:	cbnz	w24, 43e804 <nftw@plt+0x3bc84>
  43fe9c:	ldp	x21, x22, [sp, #32]
  43fea0:	ldp	x23, x24, [sp, #48]
  43fea4:	ldp	x25, x26, [sp, #64]
  43fea8:	b	43d9e4 <nftw@plt+0x3ae64>
  43feac:	mov	x20, x0
  43feb0:	b	43dbb8 <nftw@plt+0x3b038>
  43feb4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43feb8:	add	x20, x20, #0x4f8
  43febc:	add	x22, x20, #0x6
  43fec0:	mov	w21, #0x5f                  	// #95
  43fec4:	b	43feec <nftw@plt+0x3d36c>
  43fec8:	mov	x0, x1
  43fecc:	add	x1, x1, #0x1
  43fed0:	str	x1, [x19, #256]
  43fed4:	add	x20, x20, #0x1
  43fed8:	strb	w21, [x19, x0]
  43fedc:	cmp	x22, x20
  43fee0:	strb	w21, [x19, #264]
  43fee4:	b.eq	43ff28 <nftw@plt+0x3d3a8>  // b.none
  43fee8:	ldrb	w21, [x20]
  43feec:	cmp	x1, #0xff
  43fef0:	b.ne	43fec8 <nftw@plt+0x3d348>  // b.any
  43fef4:	ldp	x3, x2, [x19, #272]
  43fef8:	strb	wzr, [x19, #255]
  43fefc:	mov	x0, x19
  43ff00:	blr	x3
  43ff04:	ldr	x2, [x19, #320]
  43ff08:	mov	x1, #0x1                   	// #1
  43ff0c:	mov	x0, #0x0                   	// #0
  43ff10:	add	x2, x2, x1
  43ff14:	str	x2, [x19, #320]
  43ff18:	b	43fed0 <nftw@plt+0x3d350>
  43ff1c:	ldp	x21, x22, [sp, #32]
  43ff20:	ldp	x23, x24, [sp, #48]
  43ff24:	b	43d9e4 <nftw@plt+0x3ae64>
  43ff28:	ldp	x21, x22, [sp, #32]
  43ff2c:	ldp	x23, x24, [sp, #48]
  43ff30:	b	43d9e4 <nftw@plt+0x3ae64>
  43ff34:	ldr	x2, [x20, #8]
  43ff38:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  43ff3c:	add	x1, x1, #0x840
  43ff40:	add	x0, sp, #0x60
  43ff44:	add	w2, w2, #0x1
  43ff48:	bl	4025b0 <sprintf@plt>
  43ff4c:	add	x0, sp, #0x60
  43ff50:	bl	4024f0 <strlen@plt>
  43ff54:	cbz	x0, 4413a4 <nftw@plt+0x3e824>
  43ff58:	add	x20, sp, #0x60
  43ff5c:	add	x22, x20, x0
  43ff60:	ldr	x1, [x19, #256]
  43ff64:	b	43ff88 <nftw@plt+0x3d408>
  43ff68:	mov	x0, x1
  43ff6c:	add	x1, x1, #0x1
  43ff70:	str	x1, [x19, #256]
  43ff74:	add	x20, x20, #0x1
  43ff78:	strb	w21, [x19, x0]
  43ff7c:	cmp	x22, x20
  43ff80:	strb	w21, [x19, #264]
  43ff84:	b.eq	4402c0 <nftw@plt+0x3d740>  // b.none
  43ff88:	ldrb	w21, [x20]
  43ff8c:	cmp	x1, #0xff
  43ff90:	b.ne	43ff68 <nftw@plt+0x3d3e8>  // b.any
  43ff94:	ldp	x3, x2, [x19, #272]
  43ff98:	strb	wzr, [x19, #255]
  43ff9c:	mov	x0, x19
  43ffa0:	blr	x3
  43ffa4:	ldr	x2, [x19, #320]
  43ffa8:	mov	x1, #0x1                   	// #1
  43ffac:	mov	x0, #0x0                   	// #0
  43ffb0:	add	x2, x2, x1
  43ffb4:	str	x2, [x19, #320]
  43ffb8:	b	43ff70 <nftw@plt+0x3d3f0>
  43ffbc:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  43ffc0:	add	x20, x20, #0x578
  43ffc4:	add	x22, x20, #0x4
  43ffc8:	mov	w21, #0x74                  	// #116
  43ffcc:	b	43fff4 <nftw@plt+0x3d474>
  43ffd0:	mov	x0, x1
  43ffd4:	add	x1, x1, #0x1
  43ffd8:	str	x1, [x19, #256]
  43ffdc:	add	x20, x20, #0x1
  43ffe0:	strb	w21, [x19, x0]
  43ffe4:	cmp	x22, x20
  43ffe8:	strb	w21, [x19, #264]
  43ffec:	b.eq	440024 <nftw@plt+0x3d4a4>  // b.none
  43fff0:	ldrb	w21, [x20]
  43fff4:	cmp	x1, #0xff
  43fff8:	b.ne	43ffd0 <nftw@plt+0x3d450>  // b.any
  43fffc:	ldp	x3, x2, [x19, #272]
  440000:	strb	wzr, [x19, #255]
  440004:	mov	x0, x19
  440008:	blr	x3
  44000c:	ldr	x2, [x19, #320]
  440010:	mov	x1, #0x1                   	// #1
  440014:	mov	x0, #0x0                   	// #0
  440018:	add	x2, x2, x1
  44001c:	str	x2, [x19, #320]
  440020:	b	43ffd8 <nftw@plt+0x3d458>
  440024:	ldp	x21, x22, [sp, #32]
  440028:	ldp	x23, x24, [sp, #48]
  44002c:	b	43d9e4 <nftw@plt+0x3ae64>
  440030:	mov	w2, w23
  440034:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  440038:	add	x1, x1, #0x840
  44003c:	add	x0, sp, #0x60
  440040:	bl	4025b0 <sprintf@plt>
  440044:	add	x0, sp, #0x60
  440048:	bl	4024f0 <strlen@plt>
  44004c:	cbz	x0, 4400b4 <nftw@plt+0x3d534>
  440050:	add	x20, sp, #0x60
  440054:	add	x22, x20, x0
  440058:	ldr	x1, [x19, #256]
  44005c:	b	440080 <nftw@plt+0x3d500>
  440060:	mov	x0, x1
  440064:	add	x1, x1, #0x1
  440068:	str	x1, [x19, #256]
  44006c:	add	x20, x20, #0x1
  440070:	strb	w21, [x19, x0]
  440074:	cmp	x20, x22
  440078:	strb	w21, [x19, #264]
  44007c:	b.eq	4400b8 <nftw@plt+0x3d538>  // b.none
  440080:	ldrb	w21, [x20]
  440084:	cmp	x1, #0xff
  440088:	b.ne	440060 <nftw@plt+0x3d4e0>  // b.any
  44008c:	ldp	x3, x2, [x19, #272]
  440090:	strb	wzr, [x19, #255]
  440094:	mov	x0, x19
  440098:	blr	x3
  44009c:	ldr	x2, [x19, #320]
  4400a0:	mov	x1, #0x1                   	// #1
  4400a4:	mov	x0, #0x0                   	// #0
  4400a8:	add	x2, x2, x1
  4400ac:	str	x2, [x19, #320]
  4400b0:	b	440068 <nftw@plt+0x3d4e8>
  4400b4:	ldr	x1, [x19, #256]
  4400b8:	add	x0, x1, #0x1
  4400bc:	cmp	x1, #0xff
  4400c0:	b.ne	4400e8 <nftw@plt+0x3d568>  // b.any
  4400c4:	ldp	x3, x2, [x19, #272]
  4400c8:	strb	wzr, [x19, #255]
  4400cc:	mov	x0, x19
  4400d0:	blr	x3
  4400d4:	ldr	x2, [x19, #320]
  4400d8:	mov	x0, #0x1                   	// #1
  4400dc:	mov	x1, #0x0                   	// #0
  4400e0:	add	x2, x2, x0
  4400e4:	str	x2, [x19, #320]
  4400e8:	str	x0, [x19, #256]
  4400ec:	mov	w0, #0x7d                  	// #125
  4400f0:	strb	w0, [x19, x1]
  4400f4:	strb	w0, [x19, #264]
  4400f8:	ldp	x21, x22, [sp, #32]
  4400fc:	ldp	x23, x24, [sp, #48]
  440100:	b	43d9e4 <nftw@plt+0x3ae64>
  440104:	add	x1, x20, #0x8
  440108:	mov	x0, x19
  44010c:	bl	43d790 <nftw@plt+0x3ac10>
  440110:	mov	x2, x0
  440114:	cbz	x0, 43da10 <nftw@plt+0x3ae90>
  440118:	ldr	w1, [x0]
  44011c:	cmp	w1, #0x2f
  440120:	b.eq	441024 <nftw@plt+0x3e4a4>  // b.none
  440124:	ldr	x20, [x19, #288]
  440128:	mov	w1, w21
  44012c:	mov	x0, x19
  440130:	ldr	x3, [x20]
  440134:	str	x3, [x19, #288]
  440138:	bl	441798 <nftw@plt+0x3ec18>
  44013c:	ldp	x21, x22, [sp, #32]
  440140:	ldp	x23, x24, [sp, #48]
  440144:	str	x20, [x19, #288]
  440148:	b	43d9e4 <nftw@plt+0x3ae64>
  44014c:	ldrsw	x22, [x0, #24]
  440150:	ldr	x20, [x0, #16]
  440154:	cbz	x22, 441380 <nftw@plt+0x3e800>
  440158:	add	x22, x20, x22
  44015c:	ldr	x1, [x19, #256]
  440160:	b	440184 <nftw@plt+0x3d604>
  440164:	mov	x0, x1
  440168:	add	x1, x1, #0x1
  44016c:	str	x1, [x19, #256]
  440170:	add	x20, x20, #0x1
  440174:	strb	w21, [x19, x0]
  440178:	cmp	x20, x22
  44017c:	strb	w21, [x19, #264]
  440180:	b.eq	4402a8 <nftw@plt+0x3d728>  // b.none
  440184:	ldrb	w21, [x20]
  440188:	cmp	x1, #0xff
  44018c:	b.ne	440164 <nftw@plt+0x3d5e4>  // b.any
  440190:	ldp	x3, x2, [x19, #272]
  440194:	strb	wzr, [x19, #255]
  440198:	mov	x0, x19
  44019c:	blr	x3
  4401a0:	ldr	x2, [x19, #320]
  4401a4:	mov	x1, #0x1                   	// #1
  4401a8:	mov	x0, #0x0                   	// #0
  4401ac:	add	x2, x2, x1
  4401b0:	str	x2, [x19, #320]
  4401b4:	b	44016c <nftw@plt+0x3d5ec>
  4401b8:	add	x21, x20, x22
  4401bc:	cmp	x21, x20
  4401c0:	b.ls	4412f4 <nftw@plt+0x3e774>  // b.plast
  4401c4:	mov	w23, #0x5f                  	// #95
  4401c8:	b	440218 <nftw@plt+0x3d698>
  4401cc:	ldr	x1, [x19, #256]
  4401d0:	add	x0, x1, #0x1
  4401d4:	cmp	x1, #0xff
  4401d8:	b.ne	440200 <nftw@plt+0x3d680>  // b.any
  4401dc:	ldp	x3, x2, [x19, #272]
  4401e0:	strb	wzr, [x19, #255]
  4401e4:	mov	x0, x19
  4401e8:	blr	x3
  4401ec:	ldr	x2, [x19, #320]
  4401f0:	mov	x0, #0x1                   	// #1
  4401f4:	mov	x1, #0x0                   	// #0
  4401f8:	add	x2, x2, x0
  4401fc:	str	x2, [x19, #320]
  440200:	str	x0, [x19, #256]
  440204:	strb	w22, [x19, x1]
  440208:	strb	w22, [x19, #264]
  44020c:	add	x20, x20, #0x1
  440210:	cmp	x21, x20
  440214:	b.ls	4402b4 <nftw@plt+0x3d734>  // b.plast
  440218:	sub	x0, x21, x20
  44021c:	ldrb	w22, [x20]
  440220:	cmp	x0, #0x3
  440224:	b.le	4401cc <nftw@plt+0x3d64c>
  440228:	cmp	w22, #0x5f
  44022c:	b.ne	4401cc <nftw@plt+0x3d64c>  // b.any
  440230:	ldrb	w0, [x20, #1]
  440234:	cmp	w0, #0x5f
  440238:	b.ne	4401cc <nftw@plt+0x3d64c>  // b.any
  44023c:	ldrb	w0, [x20, #2]
  440240:	cmp	w0, #0x55
  440244:	b.ne	4401cc <nftw@plt+0x3d64c>  // b.any
  440248:	add	x24, x20, #0x3
  44024c:	cmp	x21, x24
  440250:	b.ls	4401cc <nftw@plt+0x3d64c>  // b.plast
  440254:	mov	x2, #0x0                   	// #0
  440258:	b	440274 <nftw@plt+0x3d6f4>
  44025c:	mov	w0, w1
  440260:	sxtw	x0, w0
  440264:	add	x24, x24, #0x1
  440268:	add	x2, x0, x2, lsl #4
  44026c:	cmp	x21, x24
  440270:	b.eq	4401cc <nftw@plt+0x3d64c>  // b.none
  440274:	ldrb	w0, [x24]
  440278:	sub	w1, w0, #0x30
  44027c:	and	w3, w1, #0xff
  440280:	cmp	w3, #0x9
  440284:	b.ls	44025c <nftw@plt+0x3d6dc>  // b.plast
  440288:	sub	w1, w0, #0x41
  44028c:	and	w1, w1, #0xff
  440290:	cmp	w1, #0x5
  440294:	b.hi	440f9c <nftw@plt+0x3e41c>  // b.pmore
  440298:	sub	w0, w0, #0x37
  44029c:	b	440260 <nftw@plt+0x3d6e0>
  4402a0:	ldr	x1, [x19, #256]
  4402a4:	b	43e4b8 <nftw@plt+0x3b938>
  4402a8:	ldp	x21, x22, [sp, #32]
  4402ac:	ldp	x23, x24, [sp, #48]
  4402b0:	b	43d9e4 <nftw@plt+0x3ae64>
  4402b4:	ldp	x21, x22, [sp, #32]
  4402b8:	ldp	x23, x24, [sp, #48]
  4402bc:	b	43d9e4 <nftw@plt+0x3ae64>
  4402c0:	ldp	x21, x22, [sp, #32]
  4402c4:	ldp	x23, x24, [sp, #48]
  4402c8:	b	43d9e4 <nftw@plt+0x3ae64>
  4402cc:	ldp	x21, x22, [sp, #32]
  4402d0:	ldp	x23, x24, [sp, #48]
  4402d4:	b	43d9e4 <nftw@plt+0x3ae64>
  4402d8:	ldp	x21, x22, [sp, #32]
  4402dc:	ldp	x23, x24, [sp, #48]
  4402e0:	b	43d9e4 <nftw@plt+0x3ae64>
  4402e4:	ldr	x1, [x2, #8]
  4402e8:	ldr	w22, [x1, #28]
  4402ec:	cmp	w22, #0x6
  4402f0:	b.hi	440388 <nftw@plt+0x3d808>  // b.pmore
  4402f4:	cbz	w22, 43dad4 <nftw@plt+0x3af54>
  4402f8:	ldr	x1, [x20, #16]
  4402fc:	ldr	w1, [x1]
  440300:	cbnz	w1, 43dad4 <nftw@plt+0x3af54>
  440304:	cmp	w0, #0x3e
  440308:	b.eq	441694 <nftw@plt+0x3eb14>  // b.none
  44030c:	ldr	x2, [x20, #16]
  440310:	mov	w1, w21
  440314:	mov	x0, x19
  440318:	bl	441798 <nftw@plt+0x3ec18>
  44031c:	cmp	w22, #0x4
  440320:	b.eq	4416dc <nftw@plt+0x3eb5c>  // b.none
  440324:	b.hi	4414b0 <nftw@plt+0x3e930>  // b.pmore
  440328:	cmp	w22, #0x2
  44032c:	b.eq	441704 <nftw@plt+0x3eb84>  // b.none
  440330:	cmp	w22, #0x3
  440334:	b.ne	441768 <nftw@plt+0x3ebe8>  // b.any
  440338:	ldr	x1, [x19, #256]
  44033c:	cmp	x1, #0xff
  440340:	b.ne	440368 <nftw@plt+0x3d7e8>  // b.any
  440344:	ldp	x3, x2, [x19, #272]
  440348:	strb	wzr, [x19, #255]
  44034c:	mov	x0, x19
  440350:	blr	x3
  440354:	str	xzr, [x19, #256]
  440358:	ldr	x0, [x19, #320]
  44035c:	mov	x1, #0x0                   	// #0
  440360:	add	x0, x0, #0x1
  440364:	str	x0, [x19, #320]
  440368:	add	x0, x1, #0x1
  44036c:	str	x0, [x19, #256]
  440370:	mov	w0, #0x6c                  	// #108
  440374:	strb	w0, [x19, x1]
  440378:	strb	w0, [x19, #264]
  44037c:	ldp	x21, x22, [sp, #32]
  440380:	ldp	x23, x24, [sp, #48]
  440384:	b	43d9e4 <nftw@plt+0x3ae64>
  440388:	cmp	w22, #0x7
  44038c:	b.ne	43dad4 <nftw@plt+0x3af54>  // b.any
  440390:	ldr	x1, [x20, #16]
  440394:	ldr	w3, [x1]
  440398:	cbnz	w3, 43dad4 <nftw@plt+0x3af54>
  44039c:	ldr	w3, [x1, #16]
  4403a0:	cmp	w0, #0x3d
  4403a4:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  4403a8:	b.ne	43dad4 <nftw@plt+0x3af54>  // b.any
  4403ac:	ldr	x0, [x1, #8]
  4403b0:	ldrb	w0, [x0]
  4403b4:	cmp	w0, #0x30
  4403b8:	b.eq	441774 <nftw@plt+0x3ebf4>  // b.none
  4403bc:	cmp	w0, #0x31
  4403c0:	b.ne	43dad4 <nftw@plt+0x3af54>  // b.any
  4403c4:	mov	x0, x19
  4403c8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  4403cc:	mov	x2, #0x4                   	// #4
  4403d0:	add	x1, x1, #0xf60
  4403d4:	bl	43ce70 <nftw@plt+0x3a2f0>
  4403d8:	ldp	x21, x22, [sp, #32]
  4403dc:	ldp	x23, x24, [sp, #48]
  4403e0:	b	43d9e4 <nftw@plt+0x3ae64>
  4403e4:	ldp	x3, x2, [x19, #272]
  4403e8:	strb	wzr, [x19, #255]
  4403ec:	mov	x0, x19
  4403f0:	blr	x3
  4403f4:	ldr	x0, [x19, #320]
  4403f8:	mov	x1, #0x0                   	// #0
  4403fc:	add	x0, x0, #0x1
  440400:	str	x0, [x19, #320]
  440404:	b	43fb88 <nftw@plt+0x3d008>
  440408:	ldr	x0, [x22, #8]
  44040c:	ldr	x23, [x0]
  440410:	ldrb	w0, [x23]
  440414:	subs	w1, w0, #0x61
  440418:	b.ne	44042c <nftw@plt+0x3d8ac>  // b.any
  44041c:	ldrb	w1, [x23, #1]
  440420:	subs	w1, w1, #0x64
  440424:	b.ne	44042c <nftw@plt+0x3d8ac>  // b.any
  440428:	ldrb	w1, [x23, #2]
  44042c:	ldr	w2, [x20]
  440430:	cbnz	w1, 44043c <nftw@plt+0x3d8bc>
  440434:	cmp	w2, #0x3
  440438:	b.eq	44132c <nftw@plt+0x3e7ac>  // b.none
  44043c:	cmp	w2, #0x39
  440440:	b.eq	441484 <nftw@plt+0x3e904>  // b.none
  440444:	cmp	w0, #0x73
  440448:	b.ne	440518 <nftw@plt+0x3d998>  // b.any
  44044c:	ldrb	w1, [x23, #1]
  440450:	cmp	w1, #0x5a
  440454:	b.ne	440564 <nftw@plt+0x3d9e4>  // b.any
  440458:	ldrb	w3, [x23, #2]
  44045c:	cbnz	w3, 440564 <nftw@plt+0x3d9e4>
  440460:	mov	x1, x20
  440464:	mov	x0, x19
  440468:	bl	43d7c0 <nftw@plt+0x3ac40>
  44046c:	cbnz	x0, 440488 <nftw@plt+0x3d908>
  440470:	b	440494 <nftw@plt+0x3d914>
  440474:	ldr	x1, [x0, #8]
  440478:	cbz	x1, 440494 <nftw@plt+0x3d914>
  44047c:	ldr	x0, [x0, #16]
  440480:	add	w3, w3, #0x1
  440484:	cbz	x0, 440494 <nftw@plt+0x3d914>
  440488:	ldr	w1, [x0]
  44048c:	cmp	w1, #0x2f
  440490:	b.eq	440474 <nftw@plt+0x3d8f4>  // b.none
  440494:	mov	w2, w3
  440498:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  44049c:	add	x1, x1, #0x840
  4404a0:	add	x0, sp, #0x60
  4404a4:	bl	4025b0 <sprintf@plt>
  4404a8:	add	x0, sp, #0x60
  4404ac:	bl	4024f0 <strlen@plt>
  4404b0:	cbz	x0, 441674 <nftw@plt+0x3eaf4>
  4404b4:	add	x20, sp, #0x60
  4404b8:	add	x22, x20, x0
  4404bc:	ldr	x1, [x19, #256]
  4404c0:	b	4404e4 <nftw@plt+0x3d964>
  4404c4:	mov	x0, x1
  4404c8:	add	x1, x1, #0x1
  4404cc:	str	x1, [x19, #256]
  4404d0:	add	x20, x20, #0x1
  4404d4:	strb	w21, [x19, x0]
  4404d8:	cmp	x22, x20
  4404dc:	strb	w21, [x19, #264]
  4404e0:	b.eq	441398 <nftw@plt+0x3e818>  // b.none
  4404e4:	ldrb	w21, [x20]
  4404e8:	cmp	x1, #0xff
  4404ec:	b.ne	4404c4 <nftw@plt+0x3d944>  // b.any
  4404f0:	ldp	x3, x2, [x19, #272]
  4404f4:	strb	wzr, [x19, #255]
  4404f8:	mov	x0, x19
  4404fc:	blr	x3
  440500:	ldr	x2, [x19, #320]
  440504:	mov	x1, #0x1                   	// #1
  440508:	mov	x0, #0x0                   	// #0
  44050c:	add	x2, x2, x1
  440510:	str	x2, [x19, #320]
  440514:	b	4404cc <nftw@plt+0x3d94c>
  440518:	mov	x0, x19
  44051c:	mov	x2, x22
  440520:	mov	w1, w21
  440524:	bl	442938 <nftw@plt+0x3fdb8>
  440528:	ldrb	w0, [x23]
  44052c:	cmp	w0, #0x67
  440530:	b.ne	4405f4 <nftw@plt+0x3da74>  // b.any
  440534:	ldrb	w1, [x23, #1]
  440538:	cmp	w1, #0x73
  44053c:	b.ne	4405f4 <nftw@plt+0x3da74>  // b.any
  440540:	ldrb	w1, [x23, #2]
  440544:	cbnz	w1, 4405f4 <nftw@plt+0x3da74>
  440548:	mov	w1, w21
  44054c:	mov	x2, x20
  440550:	mov	x0, x19
  440554:	bl	441798 <nftw@plt+0x3ec18>
  440558:	ldp	x21, x22, [sp, #32]
  44055c:	ldp	x23, x24, [sp, #48]
  440560:	b	43d9e4 <nftw@plt+0x3ae64>
  440564:	cmp	w0, #0x73
  440568:	b.ne	440518 <nftw@plt+0x3d998>  // b.any
  44056c:	ldrb	w0, [x23, #1]
  440570:	cmp	w0, #0x50
  440574:	b.ne	440518 <nftw@plt+0x3d998>  // b.any
  440578:	ldrb	w0, [x23, #2]
  44057c:	mov	w3, #0x0                   	// #0
  440580:	cbz	w0, 440594 <nftw@plt+0x3da14>
  440584:	b	440518 <nftw@plt+0x3d998>
  440588:	add	w3, w3, #0x1
  44058c:	ldr	x20, [x20, #16]
  440590:	cbz	x20, 44103c <nftw@plt+0x3e4bc>
  440594:	ldr	w0, [x20]
  440598:	cmp	w0, #0x2f
  44059c:	b.ne	44103c <nftw@plt+0x3e4bc>  // b.any
  4405a0:	ldr	x0, [x20, #8]
  4405a4:	cbz	x0, 44103c <nftw@plt+0x3e4bc>
  4405a8:	ldr	w1, [x0]
  4405ac:	cmp	w1, #0x4b
  4405b0:	b.ne	440588 <nftw@plt+0x3da08>  // b.any
  4405b4:	ldr	x1, [x0, #8]
  4405b8:	mov	x0, x19
  4405bc:	bl	43d7c0 <nftw@plt+0x3ac40>
  4405c0:	mov	w1, #0x0                   	// #0
  4405c4:	cbnz	x0, 4405e0 <nftw@plt+0x3da60>
  4405c8:	b	4405ec <nftw@plt+0x3da6c>
  4405cc:	ldr	x2, [x0, #8]
  4405d0:	cbz	x2, 4405ec <nftw@plt+0x3da6c>
  4405d4:	ldr	x0, [x0, #16]
  4405d8:	add	w1, w1, #0x1
  4405dc:	cbz	x0, 4405ec <nftw@plt+0x3da6c>
  4405e0:	ldr	w2, [x0]
  4405e4:	cmp	w2, #0x2f
  4405e8:	b.eq	4405cc <nftw@plt+0x3da4c>  // b.none
  4405ec:	add	w3, w3, w1
  4405f0:	b	44058c <nftw@plt+0x3da0c>
  4405f4:	cmp	w0, #0x73
  4405f8:	b.ne	43f57c <nftw@plt+0x3c9fc>  // b.any
  4405fc:	ldrb	w0, [x23, #1]
  440600:	cmp	w0, #0x74
  440604:	b.ne	43f57c <nftw@plt+0x3c9fc>  // b.any
  440608:	ldrb	w0, [x23, #2]
  44060c:	cbnz	w0, 43f57c <nftw@plt+0x3c9fc>
  440610:	ldr	x1, [x19, #256]
  440614:	cmp	x1, #0xff
  440618:	b.ne	44063c <nftw@plt+0x3dabc>  // b.any
  44061c:	ldp	x3, x2, [x19, #272]
  440620:	strb	wzr, [x19, #255]
  440624:	mov	x0, x19
  440628:	blr	x3
  44062c:	ldr	x0, [x19, #320]
  440630:	mov	x1, #0x0                   	// #0
  440634:	add	x0, x0, #0x1
  440638:	str	x0, [x19, #320]
  44063c:	add	x0, x1, #0x1
  440640:	str	x0, [x19, #256]
  440644:	mov	w0, #0x28                  	// #40
  440648:	strb	w0, [x19, x1]
  44064c:	strb	w0, [x19, #264]
  440650:	mov	w1, w21
  440654:	mov	x2, x20
  440658:	mov	x0, x19
  44065c:	bl	441798 <nftw@plt+0x3ec18>
  440660:	ldr	x1, [x19, #256]
  440664:	cmp	x1, #0xff
  440668:	b.ne	44068c <nftw@plt+0x3db0c>  // b.any
  44066c:	ldp	x3, x2, [x19, #272]
  440670:	strb	wzr, [x19, #255]
  440674:	mov	x0, x19
  440678:	blr	x3
  44067c:	ldr	x0, [x19, #320]
  440680:	mov	x1, #0x0                   	// #0
  440684:	add	x0, x0, #0x1
  440688:	str	x0, [x19, #320]
  44068c:	add	x0, x1, #0x1
  440690:	str	x0, [x19, #256]
  440694:	mov	w0, #0x29                  	// #41
  440698:	strb	w0, [x19, x1]
  44069c:	strb	w0, [x19, #264]
  4406a0:	ldp	x21, x22, [sp, #32]
  4406a4:	ldp	x23, x24, [sp, #48]
  4406a8:	b	43d9e4 <nftw@plt+0x3ae64>
  4406ac:	ldr	x2, [x2, #8]
  4406b0:	mov	x0, x19
  4406b4:	mov	w1, w21
  4406b8:	bl	441798 <nftw@plt+0x3ec18>
  4406bc:	ldr	x0, [x19, #368]
  4406c0:	cbz	x0, 4406cc <nftw@plt+0x3db4c>
  4406c4:	ldr	x0, [sp, #96]
  4406c8:	str	x0, [x19, #288]
  4406cc:	ldr	x1, [x19, #256]
  4406d0:	ldrb	w2, [x19, #264]
  4406d4:	mov	x0, x1
  4406d8:	cmp	w2, #0x3c
  4406dc:	b.eq	441164 <nftw@plt+0x3e5e4>  // b.none
  4406e0:	add	x1, x0, #0x1
  4406e4:	cmp	x0, #0xff
  4406e8:	b.ne	440714 <nftw@plt+0x3db94>  // b.any
  4406ec:	ldp	x3, x2, [x19, #272]
  4406f0:	strb	wzr, [x19, #255]
  4406f4:	mov	x1, x0
  4406f8:	mov	x0, x19
  4406fc:	blr	x3
  440700:	ldr	x2, [x19, #320]
  440704:	mov	x1, #0x1                   	// #1
  440708:	mov	x0, #0x0                   	// #0
  44070c:	add	x2, x2, x1
  440710:	str	x2, [x19, #320]
  440714:	str	x1, [x19, #256]
  440718:	mov	w2, #0x3c                  	// #60
  44071c:	strb	w2, [x19, x0]
  440720:	mov	w1, w21
  440724:	strb	w2, [x19, #264]
  440728:	mov	x0, x19
  44072c:	ldr	x2, [x20, #8]
  440730:	ldr	x2, [x2, #16]
  440734:	bl	441798 <nftw@plt+0x3ec18>
  440738:	ldrb	w0, [x19, #264]
  44073c:	cmp	w0, #0x3e
  440740:	b.eq	44111c <nftw@plt+0x3e59c>  // b.none
  440744:	ldr	x0, [x19, #256]
  440748:	add	x1, x0, #0x1
  44074c:	cmp	x0, #0xff
  440750:	b.ne	44077c <nftw@plt+0x3dbfc>  // b.any
  440754:	ldp	x3, x2, [x19, #272]
  440758:	strb	wzr, [x19, #255]
  44075c:	mov	x1, x0
  440760:	mov	x0, x19
  440764:	blr	x3
  440768:	ldr	x2, [x19, #320]
  44076c:	mov	x1, #0x1                   	// #1
  440770:	mov	x0, #0x0                   	// #0
  440774:	add	x2, x2, x1
  440778:	str	x2, [x19, #320]
  44077c:	str	x1, [x19, #256]
  440780:	mov	w1, #0x3e                  	// #62
  440784:	strb	w1, [x19, x0]
  440788:	strb	w1, [x19, #264]
  44078c:	ldp	x21, x22, [sp, #32]
  440790:	ldp	x23, x24, [sp, #48]
  440794:	b	43d9e4 <nftw@plt+0x3ae64>
  440798:	ldp	x3, x2, [x19, #272]
  44079c:	strb	wzr, [x19, #255]
  4407a0:	mov	x0, x19
  4407a4:	blr	x3
  4407a8:	ldr	x0, [x19, #320]
  4407ac:	mov	w1, #0x29                  	// #41
  4407b0:	strb	w1, [x19]
  4407b4:	strb	w1, [x19, #264]
  4407b8:	mov	x1, #0x1                   	// #1
  4407bc:	add	x0, x0, x1
  4407c0:	str	x1, [x19, #256]
  4407c4:	str	x0, [x19, #320]
  4407c8:	ldr	w0, [x20]
  4407cc:	cmp	w0, #0x3e
  4407d0:	b.ne	43db54 <nftw@plt+0x3afd4>  // b.any
  4407d4:	ldr	x1, [x19, #256]
  4407d8:	mov	w0, #0x2d                  	// #45
  4407dc:	add	x2, x1, #0x1
  4407e0:	str	x2, [x19, #256]
  4407e4:	strb	w0, [x19, x1]
  4407e8:	strb	w0, [x19, #264]
  4407ec:	b	43db54 <nftw@plt+0x3afd4>
  4407f0:	mov	x2, x20
  4407f4:	mov	w1, w21
  4407f8:	mov	x0, x19
  4407fc:	bl	441830 <nftw@plt+0x3ecb0>
  440800:	b	43dc88 <nftw@plt+0x3b108>
  440804:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  440808:	add	x24, x24, #0x4e8
  44080c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  440810:	add	x24, x24, #0x5
  440814:	add	x22, x22, #0x4e9
  440818:	mov	w23, #0x5f                  	// #95
  44081c:	ldr	x1, [x19, #256]
  440820:	b	440844 <nftw@plt+0x3dcc4>
  440824:	mov	x0, x1
  440828:	add	x1, x1, #0x1
  44082c:	str	x1, [x19, #256]
  440830:	cmp	x24, x22
  440834:	strb	w23, [x19, x0]
  440838:	strb	w23, [x19, #264]
  44083c:	b.eq	43e448 <nftw@plt+0x3b8c8>  // b.none
  440840:	ldrb	w23, [x22], #1
  440844:	cmp	x1, #0xff
  440848:	b.ne	440824 <nftw@plt+0x3dca4>  // b.any
  44084c:	ldp	x3, x2, [x19, #272]
  440850:	strb	wzr, [x19, #255]
  440854:	mov	x0, x19
  440858:	blr	x3
  44085c:	ldr	x2, [x19, #320]
  440860:	mov	x1, #0x1                   	// #1
  440864:	mov	x0, #0x0                   	// #0
  440868:	add	x2, x2, x1
  44086c:	str	x2, [x19, #320]
  440870:	b	44082c <nftw@plt+0x3dcac>
  440874:	add	x2, x20, #0x10
  440878:	mov	w1, w22
  44087c:	mov	x0, x19
  440880:	bl	442030 <nftw@plt+0x3f4b0>
  440884:	ldr	x2, [x20, #8]
  440888:	cbz	x2, 4411e8 <nftw@plt+0x3e668>
  44088c:	mov	w1, w22
  440890:	mov	x0, x19
  440894:	bl	441798 <nftw@plt+0x3ec18>
  440898:	ldp	x21, x22, [sp, #32]
  44089c:	ldp	x23, x24, [sp, #48]
  4408a0:	b	43d9e4 <nftw@plt+0x3ae64>
  4408a4:	mov	x23, #0x0                   	// #0
  4408a8:	mov	w22, #0x3a                  	// #58
  4408ac:	ldr	x1, [x19, #256]
  4408b0:	b	4408d0 <nftw@plt+0x3dd50>
  4408b4:	mov	x0, x1
  4408b8:	add	x1, x1, #0x1
  4408bc:	str	x1, [x19, #256]
  4408c0:	strb	w22, [x19, x0]
  4408c4:	strb	w22, [x19, #264]
  4408c8:	cbnz	x23, 43dc2c <nftw@plt+0x3b0ac>
  4408cc:	mov	x23, #0x1                   	// #1
  4408d0:	cmp	x1, #0xff
  4408d4:	b.ne	4408b4 <nftw@plt+0x3dd34>  // b.any
  4408d8:	ldp	x3, x2, [x19, #272]
  4408dc:	strb	wzr, [x19, #255]
  4408e0:	mov	x0, x19
  4408e4:	blr	x3
  4408e8:	ldr	x2, [x19, #320]
  4408ec:	mov	x1, #0x1                   	// #1
  4408f0:	mov	x0, #0x0                   	// #0
  4408f4:	add	x2, x2, x1
  4408f8:	str	x2, [x19, #320]
  4408fc:	b	4408bc <nftw@plt+0x3dd3c>
  440900:	ldr	x0, [x19, #256]
  440904:	cmp	x0, #0xff
  440908:	b.ne	440930 <nftw@plt+0x3ddb0>  // b.any
  44090c:	ldp	x3, x2, [x19, #272]
  440910:	strb	wzr, [x19, #255]
  440914:	mov	x1, x0
  440918:	mov	x0, x19
  44091c:	blr	x3
  440920:	ldr	x1, [x19, #320]
  440924:	mov	x0, #0x0                   	// #0
  440928:	add	x1, x1, #0x1
  44092c:	str	x1, [x19, #320]
  440930:	add	x1, x0, #0x1
  440934:	str	x1, [x19, #256]
  440938:	mov	w2, #0x20                  	// #32
  44093c:	strb	w2, [x19, x0]
  440940:	strb	w2, [x19, #264]
  440944:	b	43ee70 <nftw@plt+0x3c2f0>
  440948:	ldr	x0, [x19, #256]
  44094c:	cmp	x0, #0xff
  440950:	b.ne	440978 <nftw@plt+0x3ddf8>  // b.any
  440954:	ldp	x3, x2, [x19, #272]
  440958:	strb	wzr, [x19, #255]
  44095c:	mov	x1, x0
  440960:	mov	x0, x19
  440964:	blr	x3
  440968:	ldr	x1, [x19, #320]
  44096c:	mov	x0, #0x0                   	// #0
  440970:	add	x1, x1, #0x1
  440974:	str	x1, [x19, #320]
  440978:	add	x1, x0, #0x1
  44097c:	str	x1, [x19, #256]
  440980:	mov	w2, #0x20                  	// #32
  440984:	strb	w2, [x19, x0]
  440988:	strb	w2, [x19, #264]
  44098c:	b	43ee10 <nftw@plt+0x3c290>
  440990:	ldr	x1, [x19, #256]
  440994:	cmp	x1, #0xff
  440998:	b.ne	4409bc <nftw@plt+0x3de3c>  // b.any
  44099c:	ldp	x3, x2, [x19, #272]
  4409a0:	strb	wzr, [x19, #255]
  4409a4:	mov	x0, x19
  4409a8:	blr	x3
  4409ac:	ldr	x0, [x19, #320]
  4409b0:	mov	x1, #0x0                   	// #0
  4409b4:	add	x0, x0, #0x1
  4409b8:	str	x0, [x19, #320]
  4409bc:	add	x0, x1, #0x1
  4409c0:	str	x0, [x19, #256]
  4409c4:	mov	w0, #0x5b                  	// #91
  4409c8:	strb	w0, [x19, x1]
  4409cc:	strb	w0, [x19, #264]
  4409d0:	mov	w1, w21
  4409d4:	mov	x0, x19
  4409d8:	ldr	x2, [x20, #16]
  4409dc:	bl	441798 <nftw@plt+0x3ec18>
  4409e0:	ldr	x1, [x19, #256]
  4409e4:	cmp	x1, #0xff
  4409e8:	b.ne	440a0c <nftw@plt+0x3de8c>  // b.any
  4409ec:	ldp	x3, x2, [x19, #272]
  4409f0:	strb	wzr, [x19, #255]
  4409f4:	mov	x0, x19
  4409f8:	blr	x3
  4409fc:	ldr	x0, [x19, #320]
  440a00:	mov	x1, #0x0                   	// #0
  440a04:	add	x0, x0, #0x1
  440a08:	str	x0, [x19, #320]
  440a0c:	add	x0, x1, #0x1
  440a10:	str	x0, [x19, #256]
  440a14:	mov	w0, #0x5d                  	// #93
  440a18:	strb	w0, [x19, x1]
  440a1c:	strb	w0, [x19, #264]
  440a20:	ldp	x21, x22, [sp, #32]
  440a24:	ldp	x23, x24, [sp, #48]
  440a28:	b	43d9e4 <nftw@plt+0x3ae64>
  440a2c:	ldp	x21, x22, [sp, #32]
  440a30:	ldp	x23, x24, [sp, #48]
  440a34:	ldp	x25, x26, [sp, #64]
  440a38:	str	x4, [x19, #296]
  440a3c:	str	w1, [x19, #304]
  440a40:	b	43d9e4 <nftw@plt+0x3ae64>
  440a44:	ldp	x21, x22, [sp, #32]
  440a48:	ldp	x23, x24, [sp, #48]
  440a4c:	b	43d9e4 <nftw@plt+0x3ae64>
  440a50:	ldp	x21, x22, [sp, #32]
  440a54:	ldp	x23, x24, [sp, #48]
  440a58:	b	43d9e4 <nftw@plt+0x3ae64>
  440a5c:	mov	w22, #0x0                   	// #0
  440a60:	b	43dbb8 <nftw@plt+0x3b038>
  440a64:	ldr	x2, [x20, #8]
  440a68:	mov	w1, w21
  440a6c:	mov	x0, x19
  440a70:	bl	441798 <nftw@plt+0x3ec18>
  440a74:	ldp	x21, x22, [sp, #32]
  440a78:	ldp	x23, x24, [sp, #48]
  440a7c:	b	43d9e4 <nftw@plt+0x3ae64>
  440a80:	ldr	x0, [x19, #256]
  440a84:	cmp	x0, x22
  440a88:	b.eq	441290 <nftw@plt+0x3e710>  // b.none
  440a8c:	ldp	x21, x22, [sp, #32]
  440a90:	ldp	x23, x24, [sp, #48]
  440a94:	b	43d9e4 <nftw@plt+0x3ae64>
  440a98:	cmp	x3, #0xff
  440a9c:	b.ne	4407d4 <nftw@plt+0x3dc54>  // b.any
  440aa0:	ldp	x4, x2, [x19, #272]
  440aa4:	strb	wzr, [x19, #255]
  440aa8:	mov	x0, x19
  440aac:	mov	x1, x3
  440ab0:	blr	x4
  440ab4:	str	xzr, [x19, #256]
  440ab8:	ldr	x0, [x19, #320]
  440abc:	add	x0, x0, #0x1
  440ac0:	str	x0, [x19, #320]
  440ac4:	b	4407d4 <nftw@plt+0x3dc54>
  440ac8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  440acc:	add	x24, x24, #0x300
  440ad0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  440ad4:	add	x24, x24, #0xd
  440ad8:	add	x22, x22, #0x301
  440adc:	mov	w20, #0x7b                  	// #123
  440ae0:	ldr	x1, [x19, #256]
  440ae4:	b	440b08 <nftw@plt+0x3df88>
  440ae8:	mov	x0, x1
  440aec:	add	x1, x1, #0x1
  440af0:	str	x1, [x19, #256]
  440af4:	cmp	x24, x22
  440af8:	strb	w20, [x19, x0]
  440afc:	strb	w20, [x19, #264]
  440b00:	b.eq	440b38 <nftw@plt+0x3dfb8>  // b.none
  440b04:	ldrb	w20, [x22], #1
  440b08:	cmp	x1, #0xff
  440b0c:	b.ne	440ae8 <nftw@plt+0x3df68>  // b.any
  440b10:	ldp	x3, x2, [x19, #272]
  440b14:	strb	wzr, [x19, #255]
  440b18:	mov	x0, x19
  440b1c:	blr	x3
  440b20:	ldr	x2, [x19, #320]
  440b24:	mov	x1, #0x1                   	// #1
  440b28:	mov	x0, #0x0                   	// #0
  440b2c:	add	x2, x2, x1
  440b30:	str	x2, [x19, #320]
  440b34:	b	440af0 <nftw@plt+0x3df70>
  440b38:	ldr	w2, [x23, #16]
  440b3c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  440b40:	add	x1, x1, #0x840
  440b44:	add	x0, sp, #0x60
  440b48:	add	w2, w2, #0x1
  440b4c:	bl	4025b0 <sprintf@plt>
  440b50:	add	x0, sp, #0x60
  440b54:	bl	4024f0 <strlen@plt>
  440b58:	cbz	x0, 440bc0 <nftw@plt+0x3e040>
  440b5c:	add	x20, sp, #0x60
  440b60:	add	x24, x20, x0
  440b64:	ldr	x1, [x19, #256]
  440b68:	b	440b8c <nftw@plt+0x3e00c>
  440b6c:	mov	x0, x1
  440b70:	add	x1, x1, #0x1
  440b74:	str	x1, [x19, #256]
  440b78:	add	x20, x20, #0x1
  440b7c:	strb	w22, [x19, x0]
  440b80:	cmp	x24, x20
  440b84:	strb	w22, [x19, #264]
  440b88:	b.eq	440bc4 <nftw@plt+0x3e044>  // b.none
  440b8c:	ldrb	w22, [x20]
  440b90:	cmp	x1, #0xff
  440b94:	b.ne	440b6c <nftw@plt+0x3dfec>  // b.any
  440b98:	ldp	x3, x2, [x19, #272]
  440b9c:	strb	wzr, [x19, #255]
  440ba0:	mov	x0, x19
  440ba4:	blr	x3
  440ba8:	ldr	x2, [x19, #320]
  440bac:	mov	x1, #0x1                   	// #1
  440bb0:	mov	x0, #0x0                   	// #0
  440bb4:	add	x2, x2, x1
  440bb8:	str	x2, [x19, #320]
  440bbc:	b	440b74 <nftw@plt+0x3dff4>
  440bc0:	ldr	x1, [x19, #256]
  440bc4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  440bc8:	add	x20, x20, #0x310
  440bcc:	mov	w22, #0x7d                  	// #125
  440bd0:	add	x24, x20, #0x3
  440bd4:	b	440bfc <nftw@plt+0x3e07c>
  440bd8:	mov	x0, x1
  440bdc:	add	x1, x1, #0x1
  440be0:	str	x1, [x19, #256]
  440be4:	add	x20, x20, #0x1
  440be8:	strb	w22, [x19, x0]
  440bec:	cmp	x24, x20
  440bf0:	strb	w22, [x19, #264]
  440bf4:	b.eq	440c2c <nftw@plt+0x3e0ac>  // b.none
  440bf8:	ldrb	w22, [x20]
  440bfc:	cmp	x1, #0xff
  440c00:	b.ne	440bd8 <nftw@plt+0x3e058>  // b.any
  440c04:	ldp	x3, x2, [x19, #272]
  440c08:	strb	wzr, [x19, #255]
  440c0c:	mov	x0, x19
  440c10:	blr	x3
  440c14:	ldr	x2, [x19, #320]
  440c18:	mov	x1, #0x1                   	// #1
  440c1c:	mov	x0, #0x0                   	// #0
  440c20:	add	x2, x2, x1
  440c24:	str	x2, [x19, #320]
  440c28:	b	440be0 <nftw@plt+0x3e060>
  440c2c:	ldr	x23, [x23, #8]
  440c30:	b	43dc3c <nftw@plt+0x3b0bc>
  440c34:	ldp	x21, x22, [sp, #32]
  440c38:	ldp	x23, x24, [sp, #48]
  440c3c:	b	43d9e4 <nftw@plt+0x3ae64>
  440c40:	ldr	x25, [x25, #16]
  440c44:	ldr	w5, [x25]
  440c48:	cmp	w5, #0x47
  440c4c:	b.eq	4412e4 <nftw@plt+0x3e764>  // b.none
  440c50:	ubfiz	x3, x24, #5, #32
  440c54:	sub	w0, w5, #0x1c
  440c58:	mov	x1, #0x1f                  	// #31
  440c5c:	add	x3, x23, x3
  440c60:	cmp	w0, #0x34
  440c64:	mov	x2, #0x1                   	// #1
  440c68:	movk	x1, #0x1a, lsl #48
  440c6c:	b.hi	43ed04 <nftw@plt+0x3c184>  // b.pmore
  440c70:	lsl	x0, x2, x0
  440c74:	tst	x0, x1
  440c78:	b.eq	43ed04 <nftw@plt+0x3c184>  // b.none
  440c7c:	cmp	w24, #0x4
  440c80:	b.eq	440d60 <nftw@plt+0x3e1e0>  // b.none
  440c84:	ldp	x8, x9, [x3, #-32]
  440c88:	stur	x25, [x3, #-24]
  440c8c:	ldp	x4, x5, [x3, #-16]
  440c90:	stur	wzr, [x3, #-16]
  440c94:	stp	x8, x9, [x3]
  440c98:	sub	x0, x3, #0x20
  440c9c:	add	w24, w24, #0x1
  440ca0:	ldr	x25, [x25, #8]
  440ca4:	stp	x4, x5, [x3, #16]
  440ca8:	ldr	w5, [x25]
  440cac:	stp	x6, x0, [x3, #-8]
  440cb0:	sub	w0, w5, #0x1c
  440cb4:	str	x3, [x19, #296]
  440cb8:	cmp	w0, #0x34
  440cbc:	add	x3, x3, #0x20
  440cc0:	b.ls	440c70 <nftw@plt+0x3e0f0>  // b.plast
  440cc4:	b	43ed04 <nftw@plt+0x3c184>
  440cc8:	mov	w0, #0x1                   	// #1
  440ccc:	ldp	x21, x22, [sp, #32]
  440cd0:	ldp	x23, x24, [sp, #48]
  440cd4:	str	w0, [x19, #304]
  440cd8:	b	43d9e4 <nftw@plt+0x3ae64>
  440cdc:	ldr	x4, [x19, #288]
  440ce0:	add	x0, sp, #0x60
  440ce4:	str	x0, [x19, #296]
  440ce8:	mov	w1, w22
  440cec:	mov	x0, x19
  440cf0:	stp	x3, x20, [sp, #96]
  440cf4:	str	wzr, [sp, #112]
  440cf8:	str	x4, [sp, #120]
  440cfc:	bl	441798 <nftw@plt+0x3ec18>
  440d00:	ldr	w0, [sp, #112]
  440d04:	ldr	x1, [sp, #96]
  440d08:	str	x1, [x19, #296]
  440d0c:	cbnz	w0, 44135c <nftw@plt+0x3e7dc>
  440d10:	ldr	x1, [x19, #256]
  440d14:	cmp	x1, #0xff
  440d18:	b.ne	440d40 <nftw@plt+0x3e1c0>  // b.any
  440d1c:	ldp	x3, x2, [x19, #272]
  440d20:	strb	wzr, [x19, #255]
  440d24:	mov	x0, x19
  440d28:	blr	x3
  440d2c:	str	xzr, [x19, #256]
  440d30:	ldr	x0, [x19, #320]
  440d34:	mov	x1, #0x0                   	// #0
  440d38:	add	x0, x0, #0x1
  440d3c:	str	x0, [x19, #320]
  440d40:	add	x0, x1, #0x1
  440d44:	str	x0, [x19, #256]
  440d48:	mov	w0, #0x20                  	// #32
  440d4c:	strb	w0, [x19, x1]
  440d50:	strb	w0, [x19, #264]
  440d54:	ldr	x3, [x19, #296]
  440d58:	b	43e1dc <nftw@plt+0x3b65c>
  440d5c:	str	x3, [x19, #296]
  440d60:	mov	w0, #0x1                   	// #1
  440d64:	ldp	x21, x22, [sp, #32]
  440d68:	ldp	x23, x24, [sp, #48]
  440d6c:	ldp	x25, x26, [sp, #64]
  440d70:	str	w0, [x19, #304]
  440d74:	b	43d9e4 <nftw@plt+0x3ae64>
  440d78:	ldr	w4, [x19, #344]
  440d7c:	ldr	x5, [x19, #336]
  440d80:	cmp	w4, #0x0
  440d84:	b.le	4414d8 <nftw@plt+0x3e958>
  440d88:	sub	w3, w4, #0x1
  440d8c:	add	x1, x5, #0x10
  440d90:	mov	x2, x5
  440d94:	add	x3, x1, w3, uxtw #4
  440d98:	b	440da8 <nftw@plt+0x3e228>
  440d9c:	add	x2, x2, #0x10
  440da0:	cmp	x3, x2
  440da4:	b.eq	4414d8 <nftw@plt+0x3e958>  // b.none
  440da8:	ldr	x1, [x2]
  440dac:	cmp	x0, x1
  440db0:	b.ne	440d9c <nftw@plt+0x3e21c>  // b.any
  440db4:	ldr	x4, [x19, #328]
  440db8:	mov	x1, x4
  440dbc:	cbnz	x4, 440dd8 <nftw@plt+0x3e258>
  440dc0:	b	4412c0 <nftw@plt+0x3e740>
  440dc4:	cmp	x3, x20
  440dc8:	ccmp	x4, x1, #0x4, eq  // eq = none
  440dcc:	b.ne	440de4 <nftw@plt+0x3e264>  // b.any
  440dd0:	ldr	x1, [x1, #8]
  440dd4:	cbz	x1, 4412c0 <nftw@plt+0x3e740>
  440dd8:	ldr	x3, [x1]
  440ddc:	cmp	x3, x0
  440de0:	b.ne	440dc4 <nftw@plt+0x3e244>  // b.any
  440de4:	add	x1, x0, #0x8
  440de8:	mov	x0, x19
  440dec:	bl	43d790 <nftw@plt+0x3ac10>
  440df0:	cbz	x0, 43da10 <nftw@plt+0x3ae90>
  440df4:	mov	w22, #0x0                   	// #0
  440df8:	ldr	w1, [x0]
  440dfc:	cmp	w1, #0x2f
  440e00:	b.ne	43db94 <nftw@plt+0x3b014>  // b.any
  440e04:	ldr	w1, [x19, #316]
  440e08:	tbnz	w1, #31, 441660 <nftw@plt+0x3eae0>
  440e0c:	bl	43d750 <nftw@plt+0x3abd0>
  440e10:	cbz	x0, 441680 <nftw@plt+0x3eb00>
  440e14:	ldr	w1, [x0]
  440e18:	b	43db94 <nftw@plt+0x3b014>
  440e1c:	ldr	x2, [x20, #8]
  440e20:	add	x3, x20, #0x10
  440e24:	mov	w1, w21
  440e28:	mov	x0, x19
  440e2c:	bl	442ae8 <nftw@plt+0x3ff68>
  440e30:	cbnz	w0, 441450 <nftw@plt+0x3e8d0>
  440e34:	ldp	x24, x3, [x20, #8]
  440e38:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  440e3c:	add	x1, x1, #0x520
  440e40:	ldr	x0, [x24, #8]
  440e44:	ldp	x22, x2, [x3, #8]
  440e48:	ldr	x0, [x0]
  440e4c:	ldp	x23, x20, [x2, #8]
  440e50:	bl	402890 <strcmp@plt>
  440e54:	cbnz	w0, 4413b0 <nftw@plt+0x3e830>
  440e58:	mov	x2, x22
  440e5c:	mov	w1, w21
  440e60:	mov	x0, x19
  440e64:	bl	4429f0 <nftw@plt+0x3fe70>
  440e68:	mov	x2, x24
  440e6c:	mov	w1, w21
  440e70:	mov	x0, x19
  440e74:	bl	442938 <nftw@plt+0x3fdb8>
  440e78:	mov	x2, x23
  440e7c:	mov	w1, w21
  440e80:	mov	x0, x19
  440e84:	bl	4429f0 <nftw@plt+0x3fe70>
  440e88:	mov	x0, x19
  440e8c:	mov	x2, #0x3                   	// #3
  440e90:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  440e94:	add	x1, x1, #0x528
  440e98:	bl	43ce70 <nftw@plt+0x3a2f0>
  440e9c:	mov	w1, w21
  440ea0:	mov	x2, x20
  440ea4:	mov	x0, x19
  440ea8:	bl	4429f0 <nftw@plt+0x3fe70>
  440eac:	ldp	x21, x22, [sp, #32]
  440eb0:	ldp	x23, x24, [sp, #48]
  440eb4:	b	43d9e4 <nftw@plt+0x3ae64>
  440eb8:	ldrb	w0, [x0]
  440ebc:	sub	w1, w0, #0x63
  440ec0:	sub	w0, w0, #0x72
  440ec4:	and	w1, w1, #0xff
  440ec8:	and	w0, w0, #0xff
  440ecc:	cmp	w1, #0x1
  440ed0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  440ed4:	b.hi	43f034 <nftw@plt+0x3c4b4>  // b.pmore
  440ed8:	mov	w1, w21
  440edc:	mov	x0, x19
  440ee0:	bl	442938 <nftw@plt+0x3fdb8>
  440ee4:	ldr	x1, [x19, #256]
  440ee8:	cmp	x1, #0xff
  440eec:	b.ne	440f14 <nftw@plt+0x3e394>  // b.any
  440ef0:	ldp	x3, x2, [x19, #272]
  440ef4:	strb	wzr, [x19, #255]
  440ef8:	mov	x0, x19
  440efc:	blr	x3
  440f00:	str	xzr, [x19, #256]
  440f04:	ldr	x0, [x19, #320]
  440f08:	mov	x1, #0x0                   	// #0
  440f0c:	add	x0, x0, #0x1
  440f10:	str	x0, [x19, #320]
  440f14:	add	x0, x1, #0x1
  440f18:	str	x0, [x19, #256]
  440f1c:	mov	w0, #0x3c                  	// #60
  440f20:	strb	w0, [x19, x1]
  440f24:	strb	w0, [x19, #264]
  440f28:	mov	w1, w21
  440f2c:	mov	x0, x19
  440f30:	mov	w22, #0x3e                  	// #62
  440f34:	ldr	x2, [x20, #16]
  440f38:	mov	x23, #0x0                   	// #0
  440f3c:	ldr	x2, [x2, #8]
  440f40:	bl	441798 <nftw@plt+0x3ec18>
  440f44:	ldr	x1, [x19, #256]
  440f48:	b	440f6c <nftw@plt+0x3e3ec>
  440f4c:	mov	x0, x1
  440f50:	add	x1, x1, #0x1
  440f54:	str	x1, [x19, #256]
  440f58:	strb	w22, [x19, x0]
  440f5c:	strb	w22, [x19, #264]
  440f60:	mov	w22, #0x28                  	// #40
  440f64:	cbnz	x23, 440fb4 <nftw@plt+0x3e434>
  440f68:	mov	x23, #0x1                   	// #1
  440f6c:	cmp	x1, #0xff
  440f70:	b.ne	440f4c <nftw@plt+0x3e3cc>  // b.any
  440f74:	ldp	x3, x2, [x19, #272]
  440f78:	strb	wzr, [x19, #255]
  440f7c:	mov	x0, x19
  440f80:	blr	x3
  440f84:	ldr	x2, [x19, #320]
  440f88:	mov	x1, #0x1                   	// #1
  440f8c:	mov	x0, #0x0                   	// #0
  440f90:	add	x2, x2, x1
  440f94:	str	x2, [x19, #320]
  440f98:	b	440f54 <nftw@plt+0x3e3d4>
  440f9c:	sub	w1, w0, #0x61
  440fa0:	and	w1, w1, #0xff
  440fa4:	cmp	w1, #0x5
  440fa8:	b.hi	441568 <nftw@plt+0x3e9e8>  // b.pmore
  440fac:	sub	w0, w0, #0x57
  440fb0:	b	440260 <nftw@plt+0x3d6e0>
  440fb4:	ldr	x2, [x20, #16]
  440fb8:	mov	w1, w21
  440fbc:	mov	x0, x19
  440fc0:	ldr	x2, [x2, #16]
  440fc4:	bl	441798 <nftw@plt+0x3ec18>
  440fc8:	ldr	x1, [x19, #256]
  440fcc:	cmp	x1, #0xff
  440fd0:	b.ne	440ff8 <nftw@plt+0x3e478>  // b.any
  440fd4:	ldp	x3, x2, [x19, #272]
  440fd8:	strb	wzr, [x19, #255]
  440fdc:	mov	x0, x19
  440fe0:	blr	x3
  440fe4:	str	xzr, [x19, #256]
  440fe8:	ldr	x0, [x19, #320]
  440fec:	mov	x1, #0x0                   	// #0
  440ff0:	add	x0, x0, #0x1
  440ff4:	str	x0, [x19, #320]
  440ff8:	add	x0, x1, #0x1
  440ffc:	str	x0, [x19, #256]
  441000:	mov	w0, #0x29                  	// #41
  441004:	strb	w0, [x19, x1]
  441008:	strb	w0, [x19, #264]
  44100c:	ldp	x21, x22, [sp, #32]
  441010:	ldp	x23, x24, [sp, #48]
  441014:	b	43d9e4 <nftw@plt+0x3ae64>
  441018:	ldp	x21, x22, [sp, #32]
  44101c:	ldp	x23, x24, [sp, #48]
  441020:	b	43d9e4 <nftw@plt+0x3ae64>
  441024:	ldr	w1, [x19, #316]
  441028:	tbnz	w1, #31, 440124 <nftw@plt+0x3d5a4>
  44102c:	bl	43d750 <nftw@plt+0x3abd0>
  441030:	mov	x2, x0
  441034:	cbnz	x0, 440124 <nftw@plt+0x3d5a4>
  441038:	b	43da10 <nftw@plt+0x3ae90>
  44103c:	mov	w2, w3
  441040:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  441044:	add	x1, x1, #0x840
  441048:	add	x0, sp, #0x60
  44104c:	bl	4025b0 <sprintf@plt>
  441050:	add	x0, sp, #0x60
  441054:	bl	4024f0 <strlen@plt>
  441058:	cbz	x0, 441654 <nftw@plt+0x3ead4>
  44105c:	add	x20, sp, #0x60
  441060:	add	x22, x20, x0
  441064:	ldr	x1, [x19, #256]
  441068:	b	44108c <nftw@plt+0x3e50c>
  44106c:	mov	x0, x1
  441070:	add	x1, x1, #0x1
  441074:	str	x1, [x19, #256]
  441078:	add	x20, x20, #0x1
  44107c:	strb	w21, [x19, x0]
  441080:	cmp	x20, x22
  441084:	strb	w21, [x19, #264]
  441088:	b.eq	4410f8 <nftw@plt+0x3e578>  // b.none
  44108c:	ldrb	w21, [x20]
  441090:	cmp	x1, #0xff
  441094:	b.ne	44106c <nftw@plt+0x3e4ec>  // b.any
  441098:	ldp	x3, x2, [x19, #272]
  44109c:	strb	wzr, [x19, #255]
  4410a0:	mov	x0, x19
  4410a4:	blr	x3
  4410a8:	ldr	x2, [x19, #320]
  4410ac:	mov	x1, #0x1                   	// #1
  4410b0:	mov	x0, #0x0                   	// #0
  4410b4:	add	x2, x2, x1
  4410b8:	str	x2, [x19, #320]
  4410bc:	b	441074 <nftw@plt+0x3e4f4>
  4410c0:	cmp	w1, #0x63
  4410c4:	b.eq	441368 <nftw@plt+0x3e7e8>  // b.none
  4410c8:	mov	w1, w21
  4410cc:	mov	x0, x19
  4410d0:	bl	442938 <nftw@plt+0x3fdb8>
  4410d4:	ldr	x2, [x20, #16]
  4410d8:	mov	w1, w21
  4410dc:	mov	x0, x19
  4410e0:	ldr	x2, [x2, #16]
  4410e4:	bl	4429f0 <nftw@plt+0x3fe70>
  4410e8:	b	43f168 <nftw@plt+0x3c5e8>
  4410ec:	ldp	x21, x22, [sp, #32]
  4410f0:	ldp	x23, x24, [sp, #48]
  4410f4:	b	43d9e4 <nftw@plt+0x3ae64>
  4410f8:	ldp	x21, x22, [sp, #32]
  4410fc:	ldp	x23, x24, [sp, #48]
  441100:	b	43d9e4 <nftw@plt+0x3ae64>
  441104:	ldp	x21, x22, [sp, #32]
  441108:	ldp	x23, x24, [sp, #48]
  44110c:	b	43d9e4 <nftw@plt+0x3ae64>
  441110:	ldp	x21, x22, [sp, #32]
  441114:	ldp	x23, x24, [sp, #48]
  441118:	b	43d9e4 <nftw@plt+0x3ae64>
  44111c:	ldr	x1, [x19, #256]
  441120:	cmp	x1, #0xff
  441124:	b.ne	44114c <nftw@plt+0x3e5cc>  // b.any
  441128:	ldp	x3, x2, [x19, #272]
  44112c:	strb	wzr, [x19, #255]
  441130:	mov	x0, x19
  441134:	blr	x3
  441138:	str	xzr, [x19, #256]
  44113c:	ldr	x0, [x19, #320]
  441140:	mov	x1, #0x0                   	// #0
  441144:	add	x0, x0, #0x1
  441148:	str	x0, [x19, #320]
  44114c:	add	x0, x1, #0x1
  441150:	str	x0, [x19, #256]
  441154:	mov	w2, #0x20                  	// #32
  441158:	strb	w2, [x19, x1]
  44115c:	strb	w2, [x19, #264]
  441160:	b	440748 <nftw@plt+0x3dbc8>
  441164:	cmp	x1, #0xff
  441168:	b.ne	441190 <nftw@plt+0x3e610>  // b.any
  44116c:	ldp	x3, x2, [x19, #272]
  441170:	strb	wzr, [x19, #255]
  441174:	mov	x0, x19
  441178:	blr	x3
  44117c:	str	xzr, [x19, #256]
  441180:	ldr	x0, [x19, #320]
  441184:	mov	x1, #0x0                   	// #0
  441188:	add	x0, x0, #0x1
  44118c:	str	x0, [x19, #320]
  441190:	add	x0, x1, #0x1
  441194:	str	x0, [x19, #256]
  441198:	mov	w2, #0x20                  	// #32
  44119c:	strb	w2, [x19, x1]
  4411a0:	strb	w2, [x19, #264]
  4411a4:	b	4406e0 <nftw@plt+0x3db60>
  4411a8:	ldr	x0, [x22, #8]
  4411ac:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4411b0:	mov	x2, #0x6                   	// #6
  4411b4:	add	x1, x1, #0x318
  4411b8:	bl	4026a0 <strncmp@plt>
  4411bc:	cbnz	w0, 43edf0 <nftw@plt+0x3c270>
  4411c0:	ldr	x2, [x20, #16]
  4411c4:	mov	w1, w21
  4411c8:	mov	x0, x19
  4411cc:	bl	441798 <nftw@plt+0x3ec18>
  4411d0:	mov	x0, x19
  4411d4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  4411d8:	mov	x2, #0x2                   	// #2
  4411dc:	add	x1, x1, #0x4b0
  4411e0:	bl	43ce70 <nftw@plt+0x3a2f0>
  4411e4:	b	43eeb0 <nftw@plt+0x3c330>
  4411e8:	ldp	x21, x22, [sp, #32]
  4411ec:	ldp	x23, x24, [sp, #48]
  4411f0:	b	43d9e4 <nftw@plt+0x3ae64>
  4411f4:	ldr	x2, [x20, #8]
  4411f8:	mov	w1, w21
  4411fc:	mov	x0, x19
  441200:	bl	4429f0 <nftw@plt+0x3fe70>
  441204:	mov	x0, x19
  441208:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  44120c:	mov	x2, #0x3                   	// #3
  441210:	add	x1, x1, #0x768
  441214:	bl	43ce70 <nftw@plt+0x3a2f0>
  441218:	ldp	x21, x22, [sp, #32]
  44121c:	ldp	x23, x24, [sp, #48]
  441220:	b	43d9e4 <nftw@plt+0x3ae64>
  441224:	ldr	x1, [x0, #8]
  441228:	ldr	w2, [x1, #16]
  44122c:	cmp	w2, #0x1
  441230:	b.ne	43f058 <nftw@plt+0x3c4d8>  // b.any
  441234:	ldr	x1, [x1, #8]
  441238:	ldrb	w1, [x1]
  44123c:	cmp	w1, #0x3e
  441240:	b.ne	43f058 <nftw@plt+0x3c4d8>  // b.any
  441244:	ldr	x1, [x19, #256]
  441248:	cmp	x1, #0xff
  44124c:	b.ne	441274 <nftw@plt+0x3e6f4>  // b.any
  441250:	ldp	x3, x2, [x19, #272]
  441254:	strb	wzr, [x19, #255]
  441258:	mov	x0, x19
  44125c:	blr	x3
  441260:	str	xzr, [x19, #256]
  441264:	ldr	x0, [x19, #320]
  441268:	mov	x1, #0x0                   	// #0
  44126c:	add	x0, x0, #0x1
  441270:	str	x0, [x19, #320]
  441274:	add	x0, x1, #0x1
  441278:	str	x0, [x19, #256]
  44127c:	mov	w0, #0x28                  	// #40
  441280:	strb	w0, [x19, x1]
  441284:	strb	w0, [x19, #264]
  441288:	ldr	x0, [x20, #8]
  44128c:	b	43f058 <nftw@plt+0x3c4d8>
  441290:	sub	x22, x22, #0x2
  441294:	ldp	x23, x24, [sp, #48]
  441298:	str	x22, [x19, #256]
  44129c:	ldp	x21, x22, [sp, #32]
  4412a0:	b	43d9e4 <nftw@plt+0x3ae64>
  4412a4:	ldr	x0, [x0, #8]
  4412a8:	ldr	w1, [x0, #16]
  4412ac:	cmp	w1, #0x1
  4412b0:	b.eq	4415c8 <nftw@plt+0x3ea48>  // b.none
  4412b4:	ldp	x21, x22, [sp, #32]
  4412b8:	ldp	x23, x24, [sp, #48]
  4412bc:	b	43d9e4 <nftw@plt+0x3ae64>
  4412c0:	ldr	x2, [x2, #8]
  4412c4:	add	x1, x0, #0x8
  4412c8:	ldr	x23, [x19, #288]
  4412cc:	str	x2, [x19, #288]
  4412d0:	mov	x0, x19
  4412d4:	bl	43d790 <nftw@plt+0x3ac10>
  4412d8:	cbz	x0, 441684 <nftw@plt+0x3eb04>
  4412dc:	mov	w22, #0x1                   	// #1
  4412e0:	b	440df8 <nftw@plt+0x3e278>
  4412e4:	ldr	x25, [x25, #8]
  4412e8:	cbz	x25, 440d60 <nftw@plt+0x3e1e0>
  4412ec:	ldr	w5, [x25]
  4412f0:	b	440c50 <nftw@plt+0x3e0d0>
  4412f4:	ldp	x21, x22, [sp, #32]
  4412f8:	ldp	x23, x24, [sp, #48]
  4412fc:	b	43d9e4 <nftw@plt+0x3ae64>
  441300:	ldr	x0, [x2, #16]
  441304:	ldr	w0, [x0]
  441308:	cmp	w0, #0x29
  44130c:	b.eq	441318 <nftw@plt+0x3e798>  // b.none
  441310:	mov	w0, #0x1                   	// #1
  441314:	str	w0, [x19, #304]
  441318:	ldr	x2, [x2, #8]
  44131c:	mov	w1, w21
  441320:	mov	x0, x19
  441324:	bl	4429f0 <nftw@plt+0x3fe70>
  441328:	b	43f0a0 <nftw@plt+0x3c520>
  44132c:	ldr	x1, [x20, #8]
  441330:	ldr	w2, [x1]
  441334:	cmp	w2, #0x1
  441338:	b.ne	440444 <nftw@plt+0x3d8c4>  // b.any
  44133c:	ldr	x2, [x20, #16]
  441340:	ldr	w2, [x2]
  441344:	cmp	w2, #0x29
  441348:	csel	x20, x20, x1, ne  // ne = any
  44134c:	b	440444 <nftw@plt+0x3d8c4>
  441350:	ldp	x21, x22, [sp, #32]
  441354:	ldp	x23, x24, [sp, #48]
  441358:	b	43d9e4 <nftw@plt+0x3ae64>
  44135c:	ldp	x21, x22, [sp, #32]
  441360:	ldp	x23, x24, [sp, #48]
  441364:	b	43d9e4 <nftw@plt+0x3ae64>
  441368:	ldrb	w1, [x0, #1]
  44136c:	cmp	w1, #0x6c
  441370:	b.ne	4410c8 <nftw@plt+0x3e548>  // b.any
  441374:	ldrb	w0, [x0, #2]
  441378:	cbz	w0, 4410d4 <nftw@plt+0x3e554>
  44137c:	b	4410c8 <nftw@plt+0x3e548>
  441380:	ldp	x21, x22, [sp, #32]
  441384:	ldp	x23, x24, [sp, #48]
  441388:	b	43d9e4 <nftw@plt+0x3ae64>
  44138c:	ldp	x21, x22, [sp, #32]
  441390:	ldp	x23, x24, [sp, #48]
  441394:	b	43d9e4 <nftw@plt+0x3ae64>
  441398:	ldp	x21, x22, [sp, #32]
  44139c:	ldp	x23, x24, [sp, #48]
  4413a0:	b	43d9e4 <nftw@plt+0x3ae64>
  4413a4:	ldp	x21, x22, [sp, #32]
  4413a8:	ldp	x23, x24, [sp, #48]
  4413ac:	b	43d9e4 <nftw@plt+0x3ae64>
  4413b0:	mov	x0, x19
  4413b4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4413b8:	mov	x2, #0x4                   	// #4
  4413bc:	add	x1, x1, #0x530
  4413c0:	bl	43ce70 <nftw@plt+0x3a2f0>
  4413c4:	ldr	x0, [x22, #8]
  4413c8:	cbz	x0, 441420 <nftw@plt+0x3e8a0>
  4413cc:	mov	w1, w21
  4413d0:	mov	x2, x22
  4413d4:	mov	x0, x19
  4413d8:	bl	4429f0 <nftw@plt+0x3fe70>
  4413dc:	ldr	x1, [x19, #256]
  4413e0:	cmp	x1, #0xff
  4413e4:	b.ne	44140c <nftw@plt+0x3e88c>  // b.any
  4413e8:	ldp	x3, x2, [x19, #272]
  4413ec:	strb	wzr, [x19, #255]
  4413f0:	mov	x0, x19
  4413f4:	blr	x3
  4413f8:	str	xzr, [x19, #256]
  4413fc:	ldr	x0, [x19, #320]
  441400:	mov	x1, #0x0                   	// #0
  441404:	add	x0, x0, #0x1
  441408:	str	x0, [x19, #320]
  44140c:	add	x0, x1, #0x1
  441410:	str	x0, [x19, #256]
  441414:	mov	w0, #0x20                  	// #32
  441418:	strb	w0, [x19, x1]
  44141c:	strb	w0, [x19, #264]
  441420:	mov	x2, x23
  441424:	mov	w1, w21
  441428:	mov	x0, x19
  44142c:	bl	441798 <nftw@plt+0x3ec18>
  441430:	cbz	x20, 44155c <nftw@plt+0x3e9dc>
  441434:	mov	w1, w21
  441438:	mov	x2, x20
  44143c:	mov	x0, x19
  441440:	bl	4429f0 <nftw@plt+0x3fe70>
  441444:	ldp	x21, x22, [sp, #32]
  441448:	ldp	x23, x24, [sp, #48]
  44144c:	b	43d9e4 <nftw@plt+0x3ae64>
  441450:	ldp	x21, x22, [sp, #32]
  441454:	ldp	x23, x24, [sp, #48]
  441458:	b	43d9e4 <nftw@plt+0x3ae64>
  44145c:	ldr	x2, [x20, #16]
  441460:	mov	x0, x19
  441464:	mov	w1, w21
  441468:	bl	441798 <nftw@plt+0x3ec18>
  44146c:	str	xzr, [x19, #296]
  441470:	ldr	w0, [sp, #112]
  441474:	cbz	w0, 43e420 <nftw@plt+0x3b8a0>
  441478:	ldp	x21, x22, [sp, #32]
  44147c:	ldp	x23, x24, [sp, #48]
  441480:	b	43d9e4 <nftw@plt+0x3ae64>
  441484:	ldr	x2, [x20, #8]
  441488:	mov	w1, w21
  44148c:	mov	x0, x19
  441490:	bl	4429f0 <nftw@plt+0x3fe70>
  441494:	mov	x2, x22
  441498:	mov	w1, w21
  44149c:	mov	x0, x19
  4414a0:	bl	442938 <nftw@plt+0x3fdb8>
  4414a4:	ldp	x21, x22, [sp, #32]
  4414a8:	ldp	x23, x24, [sp, #48]
  4414ac:	b	43d9e4 <nftw@plt+0x3ae64>
  4414b0:	cmp	w22, #0x5
  4414b4:	b.eq	4415e4 <nftw@plt+0x3ea64>  // b.none
  4414b8:	mov	x0, x19
  4414bc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4414c0:	mov	x2, #0x3                   	// #3
  4414c4:	add	x1, x1, #0x548
  4414c8:	bl	43ce70 <nftw@plt+0x3a2f0>
  4414cc:	ldp	x21, x22, [sp, #32]
  4414d0:	ldp	x23, x24, [sp, #48]
  4414d4:	b	43d9e4 <nftw@plt+0x3ae64>
  4414d8:	ldr	w1, [x19, #348]
  4414dc:	cmp	w4, w1
  4414e0:	b.ge	441548 <nftw@plt+0x3e9c8>  // b.tcont
  4414e4:	sbfiz	x1, x4, #4, #32
  4414e8:	add	w2, w4, #0x1
  4414ec:	ldr	x3, [x19, #288]
  4414f0:	str	w2, [x19, #344]
  4414f4:	str	x0, [x5, x1]
  4414f8:	add	x1, x5, w4, sxtw #4
  4414fc:	add	x1, x1, #0x8
  441500:	cbz	x3, 4416fc <nftw@plt+0x3eb7c>
  441504:	ldr	w2, [x19, #360]
  441508:	ldr	w6, [x19, #364]
  44150c:	sbfiz	x5, x2, #4, #32
  441510:	b	441540 <nftw@plt+0x3e9c0>
  441514:	ldr	x4, [x19, #352]
  441518:	add	w2, w2, #0x1
  44151c:	ldr	x7, [x3, #8]
  441520:	add	x4, x4, x5
  441524:	str	w2, [x19, #360]
  441528:	add	x5, x5, #0x10
  44152c:	str	x7, [x4, #8]
  441530:	str	x4, [x1]
  441534:	mov	x1, x4
  441538:	ldr	x3, [x3]
  44153c:	cbz	x3, 4416fc <nftw@plt+0x3eb7c>
  441540:	cmp	w6, w2
  441544:	b.gt	441514 <nftw@plt+0x3e994>
  441548:	mov	w0, #0x1                   	// #1
  44154c:	ldp	x21, x22, [sp, #32]
  441550:	ldp	x23, x24, [sp, #48]
  441554:	str	w0, [x19, #304]
  441558:	b	43d9e4 <nftw@plt+0x3ae64>
  44155c:	ldp	x21, x22, [sp, #32]
  441560:	ldp	x23, x24, [sp, #48]
  441564:	b	43d9e4 <nftw@plt+0x3ae64>
  441568:	cmp	x21, x24
  44156c:	b.ls	4401cc <nftw@plt+0x3d64c>  // b.plast
  441570:	cmp	x2, #0xff
  441574:	ccmp	w0, w23, #0x0, ls  // ls = plast
  441578:	b.ne	4401cc <nftw@plt+0x3d64c>  // b.any
  44157c:	ldr	x1, [x19, #256]
  441580:	and	w22, w2, #0xff
  441584:	cmp	x1, #0xff
  441588:	b.ne	4415b0 <nftw@plt+0x3ea30>  // b.any
  44158c:	ldp	x3, x2, [x19, #272]
  441590:	strb	wzr, [x19, #255]
  441594:	mov	x0, x19
  441598:	blr	x3
  44159c:	str	xzr, [x19, #256]
  4415a0:	ldr	x0, [x19, #320]
  4415a4:	mov	x1, #0x0                   	// #0
  4415a8:	add	x0, x0, #0x1
  4415ac:	str	x0, [x19, #320]
  4415b0:	add	x0, x1, #0x1
  4415b4:	str	x0, [x19, #256]
  4415b8:	strb	w22, [x19, x1]
  4415bc:	mov	x20, x24
  4415c0:	strb	w22, [x19, #264]
  4415c4:	b	44020c <nftw@plt+0x3d68c>
  4415c8:	ldr	x0, [x0, #8]
  4415cc:	ldrb	w0, [x0]
  4415d0:	cmp	w0, #0x3e
  4415d4:	b.eq	441604 <nftw@plt+0x3ea84>  // b.none
  4415d8:	ldp	x21, x22, [sp, #32]
  4415dc:	ldp	x23, x24, [sp, #48]
  4415e0:	b	43d9e4 <nftw@plt+0x3ae64>
  4415e4:	mov	x0, x19
  4415e8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4415ec:	mov	x2, #0x2                   	// #2
  4415f0:	add	x1, x1, #0x540
  4415f4:	bl	43ce70 <nftw@plt+0x3a2f0>
  4415f8:	ldp	x21, x22, [sp, #32]
  4415fc:	ldp	x23, x24, [sp, #48]
  441600:	b	43d9e4 <nftw@plt+0x3ae64>
  441604:	ldr	x1, [x19, #256]
  441608:	cmp	x1, #0xff
  44160c:	b.ne	441634 <nftw@plt+0x3eab4>  // b.any
  441610:	ldp	x3, x2, [x19, #272]
  441614:	strb	wzr, [x19, #255]
  441618:	mov	x0, x19
  44161c:	blr	x3
  441620:	str	xzr, [x19, #256]
  441624:	ldr	x0, [x19, #320]
  441628:	mov	x1, #0x0                   	// #0
  44162c:	add	x0, x0, #0x1
  441630:	str	x0, [x19, #320]
  441634:	add	x0, x1, #0x1
  441638:	str	x0, [x19, #256]
  44163c:	mov	w0, #0x29                  	// #41
  441640:	strb	w0, [x19, x1]
  441644:	strb	w0, [x19, #264]
  441648:	ldp	x21, x22, [sp, #32]
  44164c:	ldp	x23, x24, [sp, #48]
  441650:	b	43d9e4 <nftw@plt+0x3ae64>
  441654:	ldp	x21, x22, [sp, #32]
  441658:	ldp	x23, x24, [sp, #48]
  44165c:	b	43d9e4 <nftw@plt+0x3ae64>
  441660:	ldr	w1, [x20]
  441664:	ldr	x4, [x19, #296]
  441668:	cmp	w1, #0x2f
  44166c:	csel	x20, x20, x0, ne  // ne = any
  441670:	b	43dbb8 <nftw@plt+0x3b038>
  441674:	ldp	x21, x22, [sp, #32]
  441678:	ldp	x23, x24, [sp, #48]
  44167c:	b	43d9e4 <nftw@plt+0x3ae64>
  441680:	cbz	w22, 43da10 <nftw@plt+0x3ae90>
  441684:	ldp	x21, x22, [sp, #32]
  441688:	str	x23, [x19, #288]
  44168c:	ldp	x23, x24, [sp, #48]
  441690:	b	43da18 <nftw@plt+0x3ae98>
  441694:	ldr	x1, [x19, #256]
  441698:	cmp	x1, #0xff
  44169c:	b.ne	4416c4 <nftw@plt+0x3eb44>  // b.any
  4416a0:	ldp	x3, x2, [x19, #272]
  4416a4:	strb	wzr, [x19, #255]
  4416a8:	mov	x0, x19
  4416ac:	blr	x3
  4416b0:	str	xzr, [x19, #256]
  4416b4:	ldr	x0, [x19, #320]
  4416b8:	mov	x1, #0x0                   	// #0
  4416bc:	add	x0, x0, #0x1
  4416c0:	str	x0, [x19, #320]
  4416c4:	add	x0, x1, #0x1
  4416c8:	str	x0, [x19, #256]
  4416cc:	mov	w0, #0x2d                  	// #45
  4416d0:	strb	w0, [x19, x1]
  4416d4:	strb	w0, [x19, #264]
  4416d8:	b	44030c <nftw@plt+0x3d78c>
  4416dc:	mov	x0, x19
  4416e0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4416e4:	mov	x2, #0x2                   	// #2
  4416e8:	add	x1, x1, #0x538
  4416ec:	bl	43ce70 <nftw@plt+0x3a2f0>
  4416f0:	ldp	x21, x22, [sp, #32]
  4416f4:	ldp	x23, x24, [sp, #48]
  4416f8:	b	43d9e4 <nftw@plt+0x3ae64>
  4416fc:	str	xzr, [x1]
  441700:	b	440de4 <nftw@plt+0x3e264>
  441704:	ldr	x1, [x19, #256]
  441708:	cmp	x1, #0xff
  44170c:	b.ne	441734 <nftw@plt+0x3ebb4>  // b.any
  441710:	ldp	x3, x2, [x19, #272]
  441714:	strb	wzr, [x19, #255]
  441718:	mov	x0, x19
  44171c:	blr	x3
  441720:	str	xzr, [x19, #256]
  441724:	ldr	x0, [x19, #320]
  441728:	mov	x1, #0x0                   	// #0
  44172c:	add	x0, x0, #0x1
  441730:	str	x0, [x19, #320]
  441734:	add	x0, x1, #0x1
  441738:	str	x0, [x19, #256]
  44173c:	mov	w0, #0x75                  	// #117
  441740:	strb	w0, [x19, x1]
  441744:	strb	w0, [x19, #264]
  441748:	ldp	x21, x22, [sp, #32]
  44174c:	ldp	x23, x24, [sp, #48]
  441750:	b	43d9e4 <nftw@plt+0x3ae64>
  441754:	mov	x2, x22
  441758:	mov	w1, w21
  44175c:	mov	x0, x19
  441760:	bl	442938 <nftw@plt+0x3fdb8>
  441764:	b	43f57c <nftw@plt+0x3c9fc>
  441768:	ldp	x21, x22, [sp, #32]
  44176c:	ldp	x23, x24, [sp, #48]
  441770:	b	43d9e4 <nftw@plt+0x3ae64>
  441774:	mov	x0, x19
  441778:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  44177c:	mov	x2, #0x5                   	// #5
  441780:	add	x1, x1, #0xf68
  441784:	bl	43ce70 <nftw@plt+0x3a2f0>
  441788:	ldp	x21, x22, [sp, #32]
  44178c:	ldp	x23, x24, [sp, #48]
  441790:	b	43d9e4 <nftw@plt+0x3ae64>
  441794:	nop
  441798:	stp	x29, x30, [sp, #-48]!
  44179c:	mov	x29, sp
  4417a0:	stp	x19, x20, [sp, #16]
  4417a4:	mov	x20, x0
  4417a8:	cbz	x2, 441818 <nftw@plt+0x3ec98>
  4417ac:	ldr	w3, [x2, #4]
  4417b0:	mov	x19, x2
  4417b4:	cmp	w3, #0x1
  4417b8:	b.gt	441818 <nftw@plt+0x3ec98>
  4417bc:	ldr	w4, [x0, #308]
  4417c0:	cmp	w4, #0x400
  4417c4:	b.gt	441818 <nftw@plt+0x3ec98>
  4417c8:	add	w3, w3, #0x1
  4417cc:	str	w3, [x2, #4]
  4417d0:	ldr	x3, [x0, #328]
  4417d4:	add	x5, sp, #0x20
  4417d8:	add	w4, w4, #0x1
  4417dc:	str	w4, [x0, #308]
  4417e0:	str	x5, [x0, #328]
  4417e4:	stp	x2, x3, [sp, #32]
  4417e8:	bl	43d980 <nftw@plt+0x3ae00>
  4417ec:	ldr	w1, [x19, #4]
  4417f0:	ldr	x0, [sp, #40]
  4417f4:	str	x0, [x20, #328]
  4417f8:	ldr	w0, [x20, #308]
  4417fc:	sub	w1, w1, #0x1
  441800:	str	w1, [x19, #4]
  441804:	sub	w0, w0, #0x1
  441808:	str	w0, [x20, #308]
  44180c:	ldp	x19, x20, [sp, #16]
  441810:	ldp	x29, x30, [sp], #48
  441814:	ret
  441818:	mov	w0, #0x1                   	// #1
  44181c:	str	w0, [x20, #304]
  441820:	ldp	x19, x20, [sp, #16]
  441824:	ldp	x29, x30, [sp], #48
  441828:	ret
  44182c:	nop
  441830:	stp	x29, x30, [sp, #-64]!
  441834:	mov	x29, sp
  441838:	stp	x19, x20, [sp, #16]
  44183c:	mov	x19, x0
  441840:	ldr	w0, [x2]
  441844:	stp	x21, x22, [sp, #32]
  441848:	mov	x20, x2
  44184c:	sub	w0, w0, #0x3
  441850:	mov	w21, w1
  441854:	cmp	w0, #0x4d
  441858:	b.ls	441878 <nftw@plt+0x3ecf8>  // b.plast
  44185c:	mov	x2, x20
  441860:	mov	w1, w21
  441864:	mov	x0, x19
  441868:	ldp	x19, x20, [sp, #16]
  44186c:	ldp	x21, x22, [sp, #32]
  441870:	ldp	x29, x30, [sp], #64
  441874:	b	441798 <nftw@plt+0x3ec18>
  441878:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  44187c:	add	x1, x1, #0x584
  441880:	ldrh	w0, [x1, w0, uxtw #1]
  441884:	adr	x1, 441890 <nftw@plt+0x3ed10>
  441888:	add	x0, x1, w0, sxth #2
  44188c:	br	x0
  441890:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441894:	add	x20, x20, #0x5f0
  441898:	add	x22, x20, #0x9
  44189c:	mov	w21, #0x20                  	// #32
  4418a0:	ldr	x1, [x19, #256]
  4418a4:	b	4418cc <nftw@plt+0x3ed4c>
  4418a8:	mov	x0, x1
  4418ac:	add	x1, x1, #0x1
  4418b0:	str	x1, [x19, #256]
  4418b4:	add	x20, x20, #0x1
  4418b8:	strb	w21, [x19, x0]
  4418bc:	cmp	x22, x20
  4418c0:	strb	w21, [x19, #264]
  4418c4:	b.eq	441a84 <nftw@plt+0x3ef04>  // b.none
  4418c8:	ldrb	w21, [x20]
  4418cc:	cmp	x1, #0xff
  4418d0:	b.ne	4418a8 <nftw@plt+0x3ed28>  // b.any
  4418d4:	ldp	x3, x2, [x19, #272]
  4418d8:	strb	wzr, [x19, #255]
  4418dc:	mov	x0, x19
  4418e0:	blr	x3
  4418e4:	ldr	x2, [x19, #320]
  4418e8:	mov	x1, #0x1                   	// #1
  4418ec:	mov	x0, #0x0                   	// #0
  4418f0:	add	x2, x2, x1
  4418f4:	str	x2, [x19, #320]
  4418f8:	b	4418b0 <nftw@plt+0x3ed30>
  4418fc:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441900:	add	x20, x20, #0x600
  441904:	add	x22, x20, #0x9
  441908:	mov	w21, #0x20                  	// #32
  44190c:	ldr	x1, [x19, #256]
  441910:	b	441938 <nftw@plt+0x3edb8>
  441914:	mov	x0, x1
  441918:	add	x1, x1, #0x1
  44191c:	str	x1, [x19, #256]
  441920:	add	x20, x20, #0x1
  441924:	strb	w21, [x19, x0]
  441928:	cmp	x20, x22
  44192c:	strb	w21, [x19, #264]
  441930:	b.eq	441a84 <nftw@plt+0x3ef04>  // b.none
  441934:	ldrb	w21, [x20]
  441938:	cmp	x1, #0xff
  44193c:	b.ne	441914 <nftw@plt+0x3ed94>  // b.any
  441940:	ldp	x3, x2, [x19, #272]
  441944:	strb	wzr, [x19, #255]
  441948:	mov	x0, x19
  44194c:	blr	x3
  441950:	ldr	x2, [x19, #320]
  441954:	mov	x1, #0x1                   	// #1
  441958:	mov	x0, #0x0                   	// #0
  44195c:	add	x2, x2, x1
  441960:	str	x2, [x19, #320]
  441964:	b	44191c <nftw@plt+0x3ed9c>
  441968:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44196c:	add	x20, x20, #0x610
  441970:	add	x22, x20, #0x6
  441974:	mov	w21, #0x20                  	// #32
  441978:	ldr	x1, [x19, #256]
  44197c:	b	4419a4 <nftw@plt+0x3ee24>
  441980:	mov	x0, x1
  441984:	add	x1, x1, #0x1
  441988:	str	x1, [x19, #256]
  44198c:	add	x20, x20, #0x1
  441990:	strb	w21, [x19, x0]
  441994:	cmp	x22, x20
  441998:	strb	w21, [x19, #264]
  44199c:	b.eq	441a84 <nftw@plt+0x3ef04>  // b.none
  4419a0:	ldrb	w21, [x20]
  4419a4:	cmp	x1, #0xff
  4419a8:	b.ne	441980 <nftw@plt+0x3ee00>  // b.any
  4419ac:	ldp	x3, x2, [x19, #272]
  4419b0:	strb	wzr, [x19, #255]
  4419b4:	mov	x0, x19
  4419b8:	blr	x3
  4419bc:	ldr	x2, [x19, #320]
  4419c0:	mov	x1, #0x1                   	// #1
  4419c4:	mov	x0, #0x0                   	// #0
  4419c8:	add	x2, x2, x1
  4419cc:	str	x2, [x19, #320]
  4419d0:	b	441988 <nftw@plt+0x3ee08>
  4419d4:	ldr	x2, [x2, #8]
  4419d8:	b	441860 <nftw@plt+0x3ece0>
  4419dc:	ldr	x0, [x19, #256]
  4419e0:	cmp	x0, #0xff
  4419e4:	b.eq	441fa0 <nftw@plt+0x3f420>  // b.none
  4419e8:	add	x1, x0, #0x1
  4419ec:	str	x1, [x19, #256]
  4419f0:	mov	w2, #0x20                  	// #32
  4419f4:	strb	w2, [x19, x0]
  4419f8:	strb	w2, [x19, #264]
  4419fc:	b	441bec <nftw@plt+0x3f06c>
  441a00:	ldr	x0, [x19, #256]
  441a04:	add	x1, x0, #0x1
  441a08:	cmp	x0, #0xff
  441a0c:	b.eq	441ff8 <nftw@plt+0x3f478>  // b.none
  441a10:	str	x1, [x19, #256]
  441a14:	mov	w2, #0x20                  	// #32
  441a18:	strb	w2, [x19, x0]
  441a1c:	strb	w2, [x19, #264]
  441a20:	mov	x21, #0x0                   	// #0
  441a24:	mov	w20, #0x26                  	// #38
  441a28:	b	441a48 <nftw@plt+0x3eec8>
  441a2c:	mov	x0, x1
  441a30:	add	x1, x1, #0x1
  441a34:	str	x1, [x19, #256]
  441a38:	strb	w20, [x19, x0]
  441a3c:	strb	w20, [x19, #264]
  441a40:	cbnz	x21, 441a84 <nftw@plt+0x3ef04>
  441a44:	mov	x21, #0x1                   	// #1
  441a48:	cmp	x1, #0xff
  441a4c:	b.ne	441a2c <nftw@plt+0x3eeac>  // b.any
  441a50:	ldp	x3, x2, [x19, #272]
  441a54:	strb	wzr, [x19, #255]
  441a58:	mov	x0, x19
  441a5c:	blr	x3
  441a60:	ldr	x2, [x19, #320]
  441a64:	mov	x0, #0x0                   	// #0
  441a68:	mov	x1, #0x1                   	// #1
  441a6c:	str	x1, [x19, #256]
  441a70:	add	x2, x2, x1
  441a74:	str	x2, [x19, #320]
  441a78:	strb	w20, [x19, x0]
  441a7c:	strb	w20, [x19, #264]
  441a80:	cbz	x21, 441a44 <nftw@plt+0x3eec4>
  441a84:	ldp	x19, x20, [sp, #16]
  441a88:	ldp	x21, x22, [sp, #32]
  441a8c:	ldp	x29, x30, [sp], #64
  441a90:	ret
  441a94:	ldr	x1, [x19, #256]
  441a98:	add	x0, x1, #0x1
  441a9c:	cmp	x1, #0xff
  441aa0:	b.eq	441fd0 <nftw@plt+0x3f450>  // b.none
  441aa4:	str	x0, [x19, #256]
  441aa8:	mov	w0, #0x20                  	// #32
  441aac:	strb	w0, [x19, x1]
  441ab0:	mov	w1, w21
  441ab4:	strb	w0, [x19, #264]
  441ab8:	mov	x0, x19
  441abc:	ldr	x2, [x20, #16]
  441ac0:	ldp	x19, x20, [sp, #16]
  441ac4:	ldp	x21, x22, [sp, #32]
  441ac8:	ldp	x29, x30, [sp], #64
  441acc:	b	441798 <nftw@plt+0x3ec18>
  441ad0:	tbnz	w21, #2, 441a84 <nftw@plt+0x3ef04>
  441ad4:	ldr	x1, [x19, #256]
  441ad8:	add	x0, x1, #0x1
  441adc:	cmp	x1, #0xff
  441ae0:	b.ne	441b08 <nftw@plt+0x3ef88>  // b.any
  441ae4:	ldp	x3, x2, [x19, #272]
  441ae8:	strb	wzr, [x19, #255]
  441aec:	mov	x0, x19
  441af0:	blr	x3
  441af4:	ldr	x2, [x19, #320]
  441af8:	mov	x0, #0x1                   	// #1
  441afc:	mov	x1, #0x0                   	// #0
  441b00:	add	x2, x2, x0
  441b04:	str	x2, [x19, #320]
  441b08:	str	x0, [x19, #256]
  441b0c:	mov	w0, #0x2a                  	// #42
  441b10:	strb	w0, [x19, x1]
  441b14:	strb	w0, [x19, #264]
  441b18:	b	441a84 <nftw@plt+0x3ef04>
  441b1c:	ldrb	w0, [x19, #264]
  441b20:	cmp	w0, #0x28
  441b24:	b.eq	441b6c <nftw@plt+0x3efec>  // b.none
  441b28:	ldr	x1, [x19, #256]
  441b2c:	add	x0, x1, #0x1
  441b30:	cmp	x1, #0xff
  441b34:	b.ne	441b5c <nftw@plt+0x3efdc>  // b.any
  441b38:	ldp	x3, x2, [x19, #272]
  441b3c:	strb	wzr, [x19, #255]
  441b40:	mov	x0, x19
  441b44:	blr	x3
  441b48:	ldr	x2, [x19, #320]
  441b4c:	mov	x0, #0x1                   	// #1
  441b50:	mov	x1, #0x0                   	// #0
  441b54:	add	x2, x2, x0
  441b58:	str	x2, [x19, #320]
  441b5c:	str	x0, [x19, #256]
  441b60:	mov	w0, #0x20                  	// #32
  441b64:	strb	w0, [x19, x1]
  441b68:	strb	w0, [x19, #264]
  441b6c:	ldr	x2, [x20, #8]
  441b70:	mov	w1, w21
  441b74:	mov	x0, x19
  441b78:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441b7c:	add	x20, x20, #0x668
  441b80:	mov	w21, #0x3a                  	// #58
  441b84:	bl	441798 <nftw@plt+0x3ec18>
  441b88:	add	x22, x20, #0x3
  441b8c:	ldr	x1, [x19, #256]
  441b90:	b	441bb8 <nftw@plt+0x3f038>
  441b94:	mov	x0, x1
  441b98:	add	x1, x1, #0x1
  441b9c:	str	x1, [x19, #256]
  441ba0:	add	x20, x20, #0x1
  441ba4:	strb	w21, [x19, x0]
  441ba8:	cmp	x22, x20
  441bac:	strb	w21, [x19, #264]
  441bb0:	b.eq	441a84 <nftw@plt+0x3ef04>  // b.none
  441bb4:	ldrb	w21, [x20]
  441bb8:	cmp	x1, #0xff
  441bbc:	b.ne	441b94 <nftw@plt+0x3f014>  // b.any
  441bc0:	ldp	x3, x2, [x19, #272]
  441bc4:	strb	wzr, [x19, #255]
  441bc8:	mov	x0, x19
  441bcc:	blr	x3
  441bd0:	ldr	x2, [x19, #320]
  441bd4:	mov	x1, #0x1                   	// #1
  441bd8:	mov	x0, #0x0                   	// #0
  441bdc:	add	x2, x2, x1
  441be0:	str	x2, [x19, #320]
  441be4:	b	441b9c <nftw@plt+0x3f01c>
  441be8:	ldr	x1, [x19, #256]
  441bec:	cmp	x1, #0xff
  441bf0:	b.eq	441f78 <nftw@plt+0x3f3f8>  // b.none
  441bf4:	add	x0, x1, #0x1
  441bf8:	str	x0, [x19, #256]
  441bfc:	mov	w0, #0x26                  	// #38
  441c00:	strb	w0, [x19, x1]
  441c04:	strb	w0, [x19, #264]
  441c08:	ldp	x19, x20, [sp, #16]
  441c0c:	ldp	x21, x22, [sp, #32]
  441c10:	ldp	x29, x30, [sp], #64
  441c14:	ret
  441c18:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441c1c:	add	x22, x22, #0x640
  441c20:	stp	x23, x24, [sp, #48]
  441c24:	add	x24, x22, #0x6
  441c28:	mov	w23, #0x20                  	// #32
  441c2c:	ldr	x1, [x19, #256]
  441c30:	b	441c58 <nftw@plt+0x3f0d8>
  441c34:	mov	x0, x1
  441c38:	add	x1, x1, #0x1
  441c3c:	str	x1, [x19, #256]
  441c40:	add	x22, x22, #0x1
  441c44:	strb	w23, [x19, x0]
  441c48:	cmp	x24, x22
  441c4c:	strb	w23, [x19, #264]
  441c50:	b.eq	441ec0 <nftw@plt+0x3f340>  // b.none
  441c54:	ldrb	w23, [x22]
  441c58:	cmp	x1, #0xff
  441c5c:	b.ne	441c34 <nftw@plt+0x3f0b4>  // b.any
  441c60:	ldp	x3, x2, [x19, #272]
  441c64:	strb	wzr, [x19, #255]
  441c68:	mov	x0, x19
  441c6c:	blr	x3
  441c70:	ldr	x2, [x19, #320]
  441c74:	mov	x1, #0x1                   	// #1
  441c78:	mov	x0, #0x0                   	// #0
  441c7c:	add	x2, x2, x1
  441c80:	str	x2, [x19, #320]
  441c84:	b	441c3c <nftw@plt+0x3f0bc>
  441c88:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441c8c:	add	x22, x22, #0x630
  441c90:	stp	x23, x24, [sp, #48]
  441c94:	add	x24, x22, #0x9
  441c98:	mov	w23, #0x20                  	// #32
  441c9c:	ldr	x1, [x19, #256]
  441ca0:	b	441cc8 <nftw@plt+0x3f148>
  441ca4:	mov	x0, x1
  441ca8:	add	x1, x1, #0x1
  441cac:	str	x1, [x19, #256]
  441cb0:	add	x22, x22, #0x1
  441cb4:	strb	w23, [x19, x0]
  441cb8:	cmp	x22, x24
  441cbc:	strb	w23, [x19, #264]
  441cc0:	b.eq	441ec0 <nftw@plt+0x3f340>  // b.none
  441cc4:	ldrb	w23, [x22]
  441cc8:	cmp	x1, #0xff
  441ccc:	b.ne	441ca4 <nftw@plt+0x3f124>  // b.any
  441cd0:	ldp	x3, x2, [x19, #272]
  441cd4:	strb	wzr, [x19, #255]
  441cd8:	mov	x0, x19
  441cdc:	blr	x3
  441ce0:	ldr	x2, [x19, #320]
  441ce4:	mov	x1, #0x1                   	// #1
  441ce8:	mov	x0, #0x0                   	// #0
  441cec:	add	x2, x2, x1
  441cf0:	str	x2, [x19, #320]
  441cf4:	b	441cac <nftw@plt+0x3f12c>
  441cf8:	stp	x23, x24, [sp, #48]
  441cfc:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441d00:	add	x24, x24, #0x670
  441d04:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441d08:	add	x24, x24, #0xa
  441d0c:	add	x22, x22, #0x671
  441d10:	mov	w23, #0x20                  	// #32
  441d14:	ldr	x1, [x19, #256]
  441d18:	b	441d3c <nftw@plt+0x3f1bc>
  441d1c:	mov	x0, x1
  441d20:	add	x1, x1, #0x1
  441d24:	str	x1, [x19, #256]
  441d28:	cmp	x22, x24
  441d2c:	strb	w23, [x19, x0]
  441d30:	strb	w23, [x19, #264]
  441d34:	b.eq	441f70 <nftw@plt+0x3f3f0>  // b.none
  441d38:	ldrb	w23, [x22], #1
  441d3c:	cmp	x1, #0xff
  441d40:	b.ne	441d1c <nftw@plt+0x3f19c>  // b.any
  441d44:	ldp	x3, x2, [x19, #272]
  441d48:	strb	wzr, [x19, #255]
  441d4c:	mov	x0, x19
  441d50:	blr	x3
  441d54:	ldr	x2, [x19, #320]
  441d58:	mov	x1, #0x1                   	// #1
  441d5c:	mov	x0, #0x0                   	// #0
  441d60:	add	x2, x2, x1
  441d64:	str	x2, [x19, #320]
  441d68:	b	441d24 <nftw@plt+0x3f1a4>
  441d6c:	ldr	x1, [x19, #256]
  441d70:	b	441a20 <nftw@plt+0x3eea0>
  441d74:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441d78:	add	x20, x20, #0x648
  441d7c:	add	x22, x20, #0x8
  441d80:	mov	w21, #0x63                  	// #99
  441d84:	ldr	x1, [x19, #256]
  441d88:	b	441db0 <nftw@plt+0x3f230>
  441d8c:	mov	x0, x1
  441d90:	add	x1, x1, #0x1
  441d94:	str	x1, [x19, #256]
  441d98:	add	x20, x20, #0x1
  441d9c:	strb	w21, [x19, x0]
  441da0:	cmp	x22, x20
  441da4:	strb	w21, [x19, #264]
  441da8:	b.eq	441a84 <nftw@plt+0x3ef04>  // b.none
  441dac:	ldrb	w21, [x20]
  441db0:	cmp	x1, #0xff
  441db4:	b.ne	441d8c <nftw@plt+0x3f20c>  // b.any
  441db8:	ldp	x3, x2, [x19, #272]
  441dbc:	strb	wzr, [x19, #255]
  441dc0:	mov	x0, x19
  441dc4:	blr	x3
  441dc8:	ldr	x2, [x19, #320]
  441dcc:	mov	x1, #0x1                   	// #1
  441dd0:	mov	x0, #0x0                   	// #0
  441dd4:	add	x2, x2, x1
  441dd8:	str	x2, [x19, #320]
  441ddc:	b	441d94 <nftw@plt+0x3f214>
  441de0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441de4:	add	x22, x22, #0x658
  441de8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441dec:	add	x22, x22, #0xa
  441df0:	add	x20, x20, #0x659
  441df4:	mov	w21, #0x69                  	// #105
  441df8:	ldr	x1, [x19, #256]
  441dfc:	b	441e20 <nftw@plt+0x3f2a0>
  441e00:	mov	x0, x1
  441e04:	add	x1, x1, #0x1
  441e08:	str	x1, [x19, #256]
  441e0c:	cmp	x20, x22
  441e10:	strb	w21, [x19, x0]
  441e14:	strb	w21, [x19, #264]
  441e18:	b.eq	441a84 <nftw@plt+0x3ef04>  // b.none
  441e1c:	ldrb	w21, [x20], #1
  441e20:	cmp	x1, #0xff
  441e24:	b.ne	441e00 <nftw@plt+0x3f280>  // b.any
  441e28:	ldp	x3, x2, [x19, #272]
  441e2c:	strb	wzr, [x19, #255]
  441e30:	mov	x0, x19
  441e34:	blr	x3
  441e38:	ldr	x2, [x19, #320]
  441e3c:	mov	x1, #0x1                   	// #1
  441e40:	mov	x0, #0x0                   	// #0
  441e44:	add	x2, x2, x1
  441e48:	str	x2, [x19, #320]
  441e4c:	b	441e08 <nftw@plt+0x3f288>
  441e50:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441e54:	add	x22, x22, #0x618
  441e58:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  441e5c:	add	x22, x22, #0x11
  441e60:	add	x20, x20, #0x619
  441e64:	mov	w21, #0x20                  	// #32
  441e68:	ldr	x1, [x19, #256]
  441e6c:	b	441e90 <nftw@plt+0x3f310>
  441e70:	mov	x0, x1
  441e74:	add	x1, x1, #0x1
  441e78:	str	x1, [x19, #256]
  441e7c:	cmp	x22, x20
  441e80:	strb	w21, [x19, x0]
  441e84:	strb	w21, [x19, #264]
  441e88:	b.eq	441a84 <nftw@plt+0x3ef04>  // b.none
  441e8c:	ldrb	w21, [x20], #1
  441e90:	cmp	x1, #0xff
  441e94:	b.ne	441e70 <nftw@plt+0x3f2f0>  // b.any
  441e98:	ldp	x3, x2, [x19, #272]
  441e9c:	strb	wzr, [x19, #255]
  441ea0:	mov	x0, x19
  441ea4:	blr	x3
  441ea8:	ldr	x2, [x19, #320]
  441eac:	mov	x1, #0x1                   	// #1
  441eb0:	mov	x0, #0x0                   	// #0
  441eb4:	add	x2, x2, x1
  441eb8:	str	x2, [x19, #320]
  441ebc:	b	441e78 <nftw@plt+0x3f2f8>
  441ec0:	ldr	x2, [x20, #16]
  441ec4:	cbz	x2, 442024 <nftw@plt+0x3f4a4>
  441ec8:	add	x0, x1, #0x1
  441ecc:	cmp	x1, #0xff
  441ed0:	b.ne	441efc <nftw@plt+0x3f37c>  // b.any
  441ed4:	ldp	x3, x2, [x19, #272]
  441ed8:	strb	wzr, [x19, #255]
  441edc:	mov	x0, x19
  441ee0:	blr	x3
  441ee4:	ldr	x3, [x19, #320]
  441ee8:	mov	x0, #0x1                   	// #1
  441eec:	mov	x1, #0x0                   	// #0
  441ef0:	add	x3, x3, x0
  441ef4:	ldr	x2, [x20, #16]
  441ef8:	str	x3, [x19, #320]
  441efc:	str	x0, [x19, #256]
  441f00:	mov	w0, #0x28                  	// #40
  441f04:	strb	w0, [x19, x1]
  441f08:	strb	w0, [x19, #264]
  441f0c:	mov	w1, w21
  441f10:	mov	x0, x19
  441f14:	bl	441798 <nftw@plt+0x3ec18>
  441f18:	ldr	x1, [x19, #256]
  441f1c:	add	x0, x1, #0x1
  441f20:	cmp	x1, #0xff
  441f24:	b.ne	441f4c <nftw@plt+0x3f3cc>  // b.any
  441f28:	ldp	x3, x2, [x19, #272]
  441f2c:	strb	wzr, [x19, #255]
  441f30:	mov	x0, x19
  441f34:	blr	x3
  441f38:	ldr	x2, [x19, #320]
  441f3c:	mov	x0, #0x1                   	// #1
  441f40:	mov	x1, #0x0                   	// #0
  441f44:	add	x2, x2, x0
  441f48:	str	x2, [x19, #320]
  441f4c:	str	x0, [x19, #256]
  441f50:	mov	w0, #0x29                  	// #41
  441f54:	strb	w0, [x19, x1]
  441f58:	strb	w0, [x19, #264]
  441f5c:	ldp	x19, x20, [sp, #16]
  441f60:	ldp	x21, x22, [sp, #32]
  441f64:	ldp	x23, x24, [sp, #48]
  441f68:	ldp	x29, x30, [sp], #64
  441f6c:	ret
  441f70:	ldr	x2, [x20, #8]
  441f74:	b	441f0c <nftw@plt+0x3f38c>
  441f78:	ldp	x3, x2, [x19, #272]
  441f7c:	strb	wzr, [x19, #255]
  441f80:	mov	x0, x19
  441f84:	blr	x3
  441f88:	ldr	x2, [x19, #320]
  441f8c:	mov	x0, #0x1                   	// #1
  441f90:	mov	x1, #0x0                   	// #0
  441f94:	add	x2, x2, x0
  441f98:	str	x2, [x19, #320]
  441f9c:	b	441bf8 <nftw@plt+0x3f078>
  441fa0:	ldp	x3, x2, [x19, #272]
  441fa4:	strb	wzr, [x19, #255]
  441fa8:	mov	x1, x0
  441fac:	mov	x0, x19
  441fb0:	blr	x3
  441fb4:	ldr	x0, [x19, #320]
  441fb8:	mov	w2, #0x20                  	// #32
  441fbc:	mov	x1, #0x1                   	// #1
  441fc0:	strb	w2, [x19]
  441fc4:	add	x0, x0, x1
  441fc8:	str	x0, [x19, #320]
  441fcc:	b	441bf4 <nftw@plt+0x3f074>
  441fd0:	ldp	x3, x2, [x19, #272]
  441fd4:	strb	wzr, [x19, #255]
  441fd8:	mov	x0, x19
  441fdc:	blr	x3
  441fe0:	ldr	x2, [x19, #320]
  441fe4:	mov	x0, #0x1                   	// #1
  441fe8:	mov	x1, #0x0                   	// #0
  441fec:	add	x2, x2, x0
  441ff0:	str	x2, [x19, #320]
  441ff4:	b	441aa4 <nftw@plt+0x3ef24>
  441ff8:	ldp	x3, x2, [x19, #272]
  441ffc:	strb	wzr, [x19, #255]
  442000:	mov	x1, x0
  442004:	mov	x0, x19
  442008:	blr	x3
  44200c:	ldr	x2, [x19, #320]
  442010:	mov	x1, #0x1                   	// #1
  442014:	mov	x0, #0x0                   	// #0
  442018:	add	x2, x2, x1
  44201c:	str	x2, [x19, #320]
  442020:	b	441a10 <nftw@plt+0x3ee90>
  442024:	ldp	x23, x24, [sp, #48]
  442028:	b	441a84 <nftw@plt+0x3ef04>
  44202c:	nop
  442030:	stp	x29, x30, [sp, #-64]!
  442034:	mov	x29, sp
  442038:	stp	x19, x20, [sp, #16]
  44203c:	mov	x19, x0
  442040:	mov	x20, x3
  442044:	stp	x21, x22, [sp, #32]
  442048:	mov	x21, x2
  44204c:	stp	x23, x24, [sp, #48]
  442050:	mov	w23, w1
  442054:	cbz	x3, 442098 <nftw@plt+0x3f518>
  442058:	mov	x2, #0xe000000             	// #234881024
  44205c:	mov	x4, #0x1                   	// #1
  442060:	movk	x2, #0x862, lsl #32
  442064:	ldr	w0, [x3, #16]
  442068:	cbnz	w0, 442098 <nftw@plt+0x3f518>
  44206c:	ldr	x0, [x3, #8]
  442070:	ldr	w0, [x0]
  442074:	cmp	w0, #0x2b
  442078:	b.hi	442090 <nftw@plt+0x3f510>  // b.pmore
  44207c:	lsl	x0, x4, x0
  442080:	tst	x0, x2
  442084:	b.ne	442160 <nftw@plt+0x3f5e0>  // b.any
  442088:	tst	x0, #0x1c00000000
  44208c:	b.ne	44222c <nftw@plt+0x3f6ac>  // b.any
  442090:	ldr	x3, [x3]
  442094:	cbnz	x3, 442064 <nftw@plt+0x3f4e4>
  442098:	ldr	x22, [x19, #296]
  44209c:	str	xzr, [x19, #296]
  4420a0:	mov	w1, w23
  4420a4:	mov	x2, x20
  4420a8:	mov	x0, x19
  4420ac:	mov	w3, #0x0                   	// #0
  4420b0:	bl	4422e0 <nftw@plt+0x3f760>
  4420b4:	ldr	x1, [x19, #256]
  4420b8:	cmp	x1, #0xff
  4420bc:	b.eq	4421f0 <nftw@plt+0x3f670>  // b.none
  4420c0:	add	x0, x1, #0x1
  4420c4:	str	x0, [x19, #256]
  4420c8:	mov	w2, #0x28                  	// #40
  4420cc:	strb	w2, [x19, x1]
  4420d0:	strb	w2, [x19, #264]
  4420d4:	ldr	x2, [x21]
  4420d8:	cbz	x2, 4420ec <nftw@plt+0x3f56c>
  4420dc:	mov	x0, x19
  4420e0:	mov	w1, w23
  4420e4:	bl	441798 <nftw@plt+0x3ec18>
  4420e8:	ldr	x0, [x19, #256]
  4420ec:	cmp	x0, #0xff
  4420f0:	b.eq	442134 <nftw@plt+0x3f5b4>  // b.none
  4420f4:	add	x1, x0, #0x1
  4420f8:	str	x1, [x19, #256]
  4420fc:	mov	w3, #0x29                  	// #41
  442100:	strb	w3, [x19, x0]
  442104:	mov	x2, x20
  442108:	strb	w3, [x19, #264]
  44210c:	mov	w1, w23
  442110:	mov	x0, x19
  442114:	mov	w3, #0x1                   	// #1
  442118:	bl	4422e0 <nftw@plt+0x3f760>
  44211c:	ldp	x23, x24, [sp, #48]
  442120:	str	x22, [x19, #296]
  442124:	ldp	x19, x20, [sp, #16]
  442128:	ldp	x21, x22, [sp, #32]
  44212c:	ldp	x29, x30, [sp], #64
  442130:	ret
  442134:	ldp	x3, x2, [x19, #272]
  442138:	strb	wzr, [x19, #255]
  44213c:	mov	x1, x0
  442140:	mov	x0, x19
  442144:	blr	x3
  442148:	ldr	x2, [x19, #320]
  44214c:	mov	x1, #0x1                   	// #1
  442150:	mov	x0, #0x0                   	// #0
  442154:	add	x2, x2, x1
  442158:	str	x2, [x19, #320]
  44215c:	b	4420f8 <nftw@plt+0x3f578>
  442160:	ldrb	w0, [x19, #264]
  442164:	ldr	x1, [x19, #256]
  442168:	cmp	w0, #0x20
  44216c:	b.eq	442190 <nftw@plt+0x3f610>  // b.none
  442170:	cmp	x1, #0xff
  442174:	b.eq	442270 <nftw@plt+0x3f6f0>  // b.none
  442178:	add	x2, x1, #0x1
  44217c:	str	x2, [x19, #256]
  442180:	mov	w0, #0x20                  	// #32
  442184:	strb	w0, [x19, x1]
  442188:	mov	x1, x2
  44218c:	strb	w0, [x19, #264]
  442190:	cmp	x1, #0xff
  442194:	b.eq	442248 <nftw@plt+0x3f6c8>  // b.none
  442198:	add	x0, x1, #0x1
  44219c:	str	x0, [x19, #256]
  4421a0:	mov	w24, #0x28                  	// #40
  4421a4:	strb	w24, [x19, x1]
  4421a8:	mov	x0, x19
  4421ac:	strb	w24, [x19, #264]
  4421b0:	mov	x2, x20
  4421b4:	ldr	x22, [x19, #296]
  4421b8:	str	xzr, [x19, #296]
  4421bc:	mov	w1, w23
  4421c0:	mov	w3, #0x0                   	// #0
  4421c4:	bl	4422e0 <nftw@plt+0x3f760>
  4421c8:	ldr	x0, [x19, #256]
  4421cc:	cmp	x0, #0xff
  4421d0:	b.eq	44229c <nftw@plt+0x3f71c>  // b.none
  4421d4:	add	x1, x0, #0x1
  4421d8:	str	x1, [x19, #256]
  4421dc:	mov	w2, #0x29                  	// #41
  4421e0:	strb	w2, [x19, x0]
  4421e4:	strb	w2, [x19, #264]
  4421e8:	cmp	x1, #0xff
  4421ec:	b.ne	4420c0 <nftw@plt+0x3f540>  // b.any
  4421f0:	ldp	x3, x2, [x19, #272]
  4421f4:	strb	wzr, [x19, #255]
  4421f8:	mov	x0, x19
  4421fc:	blr	x3
  442200:	mov	w1, #0x28                  	// #40
  442204:	strb	w1, [x19]
  442208:	strb	w1, [x19, #264]
  44220c:	mov	x0, #0x1                   	// #1
  442210:	ldr	x1, [x19, #320]
  442214:	ldr	x2, [x21]
  442218:	add	x1, x1, x0
  44221c:	str	x0, [x19, #256]
  442220:	str	x1, [x19, #320]
  442224:	cbnz	x2, 4420dc <nftw@plt+0x3f55c>
  442228:	b	4420f4 <nftw@plt+0x3f574>
  44222c:	ldrb	w0, [x19, #264]
  442230:	ldr	x1, [x19, #256]
  442234:	and	w2, w0, #0xfffffffd
  442238:	cmp	w2, #0x28
  44223c:	b.ne	442168 <nftw@plt+0x3f5e8>  // b.any
  442240:	cmp	x1, #0xff
  442244:	b.ne	442198 <nftw@plt+0x3f618>  // b.any
  442248:	ldp	x3, x2, [x19, #272]
  44224c:	strb	wzr, [x19, #255]
  442250:	mov	x0, x19
  442254:	blr	x3
  442258:	ldr	x2, [x19, #320]
  44225c:	mov	x0, #0x1                   	// #1
  442260:	mov	x1, #0x0                   	// #0
  442264:	add	x2, x2, x0
  442268:	str	x2, [x19, #320]
  44226c:	b	44219c <nftw@plt+0x3f61c>
  442270:	ldp	x3, x2, [x19, #272]
  442274:	strb	wzr, [x19, #255]
  442278:	mov	x0, x19
  44227c:	blr	x3
  442280:	ldr	x0, [x19, #320]
  442284:	mov	w2, #0x20                  	// #32
  442288:	mov	x1, #0x1                   	// #1
  44228c:	strb	w2, [x19]
  442290:	add	x0, x0, x1
  442294:	str	x0, [x19, #320]
  442298:	b	442198 <nftw@plt+0x3f618>
  44229c:	ldp	x3, x2, [x19, #272]
  4422a0:	strb	wzr, [x19, #255]
  4422a4:	mov	x1, x0
  4422a8:	mov	x0, x19
  4422ac:	blr	x3
  4422b0:	strb	w24, [x19, #264]
  4422b4:	mov	w0, #0x2829                	// #10281
  4422b8:	strh	w0, [x19]
  4422bc:	ldr	x1, [x19, #320]
  4422c0:	mov	x0, #0x2                   	// #2
  4422c4:	ldr	x2, [x21]
  4422c8:	add	x1, x1, #0x1
  4422cc:	str	x0, [x19, #256]
  4422d0:	str	x1, [x19, #320]
  4422d4:	cbnz	x2, 4420dc <nftw@plt+0x3f55c>
  4422d8:	b	4420f4 <nftw@plt+0x3f574>
  4422dc:	nop
  4422e0:	cbz	x2, 44253c <nftw@plt+0x3f9bc>
  4422e4:	stp	x29, x30, [sp, #-112]!
  4422e8:	mov	x29, sp
  4422ec:	stp	x23, x24, [sp, #48]
  4422f0:	mov	x24, #0x1f                  	// #31
  4422f4:	movk	x24, #0x1a, lsl #48
  4422f8:	stp	x19, x20, [sp, #16]
  4422fc:	mov	w20, w1
  442300:	mov	x19, x2
  442304:	stp	x21, x22, [sp, #32]
  442308:	mov	w21, w3
  44230c:	mov	w22, #0x1                   	// #1
  442310:	stp	x25, x26, [sp, #64]
  442314:	mov	x26, x0
  442318:	mov	x25, #0x1                   	// #1
  44231c:	b	442360 <nftw@plt+0x3f7e0>
  442320:	ldr	x1, [x19, #24]
  442324:	cmp	w5, #0x29
  442328:	ldr	x23, [x26, #288]
  44232c:	str	w22, [x19, #16]
  442330:	str	x1, [x26, #288]
  442334:	b.eq	4423ac <nftw@plt+0x3f82c>  // b.none
  442338:	cmp	w5, #0x2a
  44233c:	b.eq	4423dc <nftw@plt+0x3f85c>  // b.none
  442340:	cmp	w5, #0x2
  442344:	b.eq	44240c <nftw@plt+0x3f88c>  // b.none
  442348:	mov	w1, w20
  44234c:	mov	x0, x26
  442350:	bl	441830 <nftw@plt+0x3ecb0>
  442354:	str	x23, [x26, #288]
  442358:	ldr	x19, [x19]
  44235c:	cbz	x19, 4423c4 <nftw@plt+0x3f844>
  442360:	ldr	w2, [x26, #304]
  442364:	cbnz	w2, 4423c4 <nftw@plt+0x3f844>
  442368:	ldr	w2, [x19, #16]
  44236c:	cbnz	w2, 442358 <nftw@plt+0x3f7d8>
  442370:	ldr	x2, [x19, #8]
  442374:	ldr	w5, [x2]
  442378:	cbnz	w21, 442320 <nftw@plt+0x3f7a0>
  44237c:	sub	w4, w5, #0x1c
  442380:	cmp	w4, #0x34
  442384:	b.hi	442320 <nftw@plt+0x3f7a0>  // b.pmore
  442388:	lsl	x4, x25, x4
  44238c:	tst	x4, x24
  442390:	b.ne	442358 <nftw@plt+0x3f7d8>  // b.any
  442394:	ldr	x1, [x19, #24]
  442398:	cmp	w5, #0x29
  44239c:	ldr	x23, [x26, #288]
  4423a0:	str	w22, [x19, #16]
  4423a4:	str	x1, [x26, #288]
  4423a8:	b.ne	442338 <nftw@plt+0x3f7b8>  // b.any
  4423ac:	ldr	x3, [x19]
  4423b0:	add	x2, x2, #0x10
  4423b4:	mov	w1, w20
  4423b8:	mov	x0, x26
  4423bc:	bl	442030 <nftw@plt+0x3f4b0>
  4423c0:	str	x23, [x26, #288]
  4423c4:	ldp	x19, x20, [sp, #16]
  4423c8:	ldp	x21, x22, [sp, #32]
  4423cc:	ldp	x23, x24, [sp, #48]
  4423d0:	ldp	x25, x26, [sp, #64]
  4423d4:	ldp	x29, x30, [sp], #112
  4423d8:	ret
  4423dc:	ldr	x3, [x19]
  4423e0:	mov	w1, w20
  4423e4:	mov	x0, x26
  4423e8:	add	x2, x2, #0x8
  4423ec:	bl	4426b0 <nftw@plt+0x3fb30>
  4423f0:	str	x23, [x26, #288]
  4423f4:	ldp	x19, x20, [sp, #16]
  4423f8:	ldp	x21, x22, [sp, #32]
  4423fc:	ldp	x23, x24, [sp, #48]
  442400:	ldp	x25, x26, [sp, #64]
  442404:	ldp	x29, x30, [sp], #112
  442408:	ret
  44240c:	ldr	x2, [x2, #8]
  442410:	mov	w1, w20
  442414:	ldr	x21, [x26, #296]
  442418:	str	xzr, [x26, #296]
  44241c:	mov	x0, x26
  442420:	bl	441798 <nftw@plt+0x3ec18>
  442424:	str	x21, [x26, #296]
  442428:	tbz	w20, #2, 4424e0 <nftw@plt+0x3f960>
  44242c:	ldr	x1, [x26, #256]
  442430:	add	x0, x1, #0x1
  442434:	cmp	x1, #0xff
  442438:	b.ne	442460 <nftw@plt+0x3f8e0>  // b.any
  44243c:	ldp	x3, x2, [x26, #272]
  442440:	strb	wzr, [x26, #255]
  442444:	mov	x0, x26
  442448:	blr	x3
  44244c:	ldr	x2, [x26, #320]
  442450:	mov	x0, #0x1                   	// #1
  442454:	mov	x1, #0x0                   	// #0
  442458:	add	x2, x2, x0
  44245c:	str	x2, [x26, #320]
  442460:	str	x0, [x26, #256]
  442464:	mov	w0, #0x2e                  	// #46
  442468:	strb	w0, [x26, x1]
  44246c:	strb	w0, [x26, #264]
  442470:	ldr	x0, [x19, #8]
  442474:	ldr	x21, [x0, #16]
  442478:	ldr	w2, [x21]
  44247c:	cmp	w2, #0x47
  442480:	b.eq	442540 <nftw@plt+0x3f9c0>  // b.none
  442484:	mov	x1, #0x1f                  	// #31
  442488:	mov	x3, #0x1                   	// #1
  44248c:	movk	x1, #0x1a, lsl #48
  442490:	sub	w2, w2, #0x1c
  442494:	cmp	w2, #0x34
  442498:	b.hi	4424a8 <nftw@plt+0x3f928>  // b.pmore
  44249c:	lsl	x2, x3, x2
  4424a0:	tst	x2, x1
  4424a4:	b.ne	4424d4 <nftw@plt+0x3f954>  // b.any
  4424a8:	mov	x2, x21
  4424ac:	mov	w1, w20
  4424b0:	mov	x0, x26
  4424b4:	bl	441798 <nftw@plt+0x3ec18>
  4424b8:	str	x23, [x26, #288]
  4424bc:	ldp	x19, x20, [sp, #16]
  4424c0:	ldp	x21, x22, [sp, #32]
  4424c4:	ldp	x23, x24, [sp, #48]
  4424c8:	ldp	x25, x26, [sp, #64]
  4424cc:	ldp	x29, x30, [sp], #112
  4424d0:	ret
  4424d4:	ldr	x21, [x21, #8]
  4424d8:	ldr	w2, [x21]
  4424dc:	b	442490 <nftw@plt+0x3f910>
  4424e0:	mov	x22, #0x0                   	// #0
  4424e4:	mov	w21, #0x3a                  	// #58
  4424e8:	ldr	x1, [x26, #256]
  4424ec:	b	44250c <nftw@plt+0x3f98c>
  4424f0:	mov	x0, x1
  4424f4:	add	x1, x1, #0x1
  4424f8:	str	x1, [x26, #256]
  4424fc:	strb	w21, [x26, x0]
  442500:	strb	w21, [x26, #264]
  442504:	cbnz	x22, 442470 <nftw@plt+0x3f8f0>
  442508:	mov	x22, #0x1                   	// #1
  44250c:	cmp	x1, #0xff
  442510:	b.ne	4424f0 <nftw@plt+0x3f970>  // b.any
  442514:	ldp	x3, x2, [x26, #272]
  442518:	strb	wzr, [x26, #255]
  44251c:	mov	x0, x26
  442520:	blr	x3
  442524:	ldr	x2, [x26, #320]
  442528:	mov	x1, #0x1                   	// #1
  44252c:	mov	x0, #0x0                   	// #0
  442530:	add	x2, x2, x1
  442534:	str	x2, [x26, #320]
  442538:	b	4424f8 <nftw@plt+0x3f978>
  44253c:	ret
  442540:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  442544:	add	x24, x24, #0x300
  442548:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44254c:	add	x24, x24, #0xd
  442550:	add	x22, x22, #0x301
  442554:	mov	w19, #0x7b                  	// #123
  442558:	ldr	x1, [x26, #256]
  44255c:	b	442580 <nftw@plt+0x3fa00>
  442560:	mov	x0, x1
  442564:	add	x1, x1, #0x1
  442568:	str	x1, [x26, #256]
  44256c:	cmp	x22, x24
  442570:	strb	w19, [x26, x0]
  442574:	strb	w19, [x26, #264]
  442578:	b.eq	4425b0 <nftw@plt+0x3fa30>  // b.none
  44257c:	ldrb	w19, [x22], #1
  442580:	cmp	x1, #0xff
  442584:	b.ne	442560 <nftw@plt+0x3f9e0>  // b.any
  442588:	ldp	x3, x2, [x26, #272]
  44258c:	strb	wzr, [x26, #255]
  442590:	mov	x0, x26
  442594:	blr	x3
  442598:	ldr	x2, [x26, #320]
  44259c:	mov	x1, #0x1                   	// #1
  4425a0:	mov	x0, #0x0                   	// #0
  4425a4:	add	x2, x2, x1
  4425a8:	str	x2, [x26, #320]
  4425ac:	b	442568 <nftw@plt+0x3f9e8>
  4425b0:	ldr	w2, [x21, #16]
  4425b4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4425b8:	add	x1, x1, #0x840
  4425bc:	add	x0, sp, #0x50
  4425c0:	add	w2, w2, #0x1
  4425c4:	bl	4025b0 <sprintf@plt>
  4425c8:	add	x0, sp, #0x50
  4425cc:	bl	4024f0 <strlen@plt>
  4425d0:	cbz	x0, 442638 <nftw@plt+0x3fab8>
  4425d4:	add	x19, sp, #0x50
  4425d8:	add	x24, x19, x0
  4425dc:	ldr	x1, [x26, #256]
  4425e0:	b	442604 <nftw@plt+0x3fa84>
  4425e4:	mov	x0, x1
  4425e8:	add	x1, x1, #0x1
  4425ec:	str	x1, [x26, #256]
  4425f0:	add	x19, x19, #0x1
  4425f4:	strb	w22, [x26, x0]
  4425f8:	cmp	x24, x19
  4425fc:	strb	w22, [x26, #264]
  442600:	b.eq	44263c <nftw@plt+0x3fabc>  // b.none
  442604:	ldrb	w22, [x19]
  442608:	cmp	x1, #0xff
  44260c:	b.ne	4425e4 <nftw@plt+0x3fa64>  // b.any
  442610:	ldp	x3, x2, [x26, #272]
  442614:	strb	wzr, [x26, #255]
  442618:	mov	x0, x26
  44261c:	blr	x3
  442620:	ldr	x2, [x26, #320]
  442624:	mov	x1, #0x1                   	// #1
  442628:	mov	x0, #0x0                   	// #0
  44262c:	add	x2, x2, x1
  442630:	str	x2, [x26, #320]
  442634:	b	4425ec <nftw@plt+0x3fa6c>
  442638:	ldr	x1, [x26, #256]
  44263c:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  442640:	add	x19, x19, #0x310
  442644:	mov	w22, #0x7d                  	// #125
  442648:	add	x24, x19, #0x3
  44264c:	b	442674 <nftw@plt+0x3faf4>
  442650:	mov	x0, x1
  442654:	add	x1, x1, #0x1
  442658:	str	x1, [x26, #256]
  44265c:	add	x19, x19, #0x1
  442660:	strb	w22, [x26, x0]
  442664:	cmp	x24, x19
  442668:	strb	w22, [x26, #264]
  44266c:	b.eq	4426a4 <nftw@plt+0x3fb24>  // b.none
  442670:	ldrb	w22, [x19]
  442674:	cmp	x1, #0xff
  442678:	b.ne	442650 <nftw@plt+0x3fad0>  // b.any
  44267c:	ldp	x3, x2, [x26, #272]
  442680:	strb	wzr, [x26, #255]
  442684:	mov	x0, x26
  442688:	blr	x3
  44268c:	ldr	x2, [x26, #320]
  442690:	mov	x1, #0x1                   	// #1
  442694:	mov	x0, #0x0                   	// #0
  442698:	add	x2, x2, x1
  44269c:	str	x2, [x26, #320]
  4426a0:	b	442658 <nftw@plt+0x3fad8>
  4426a4:	ldr	x21, [x21, #8]
  4426a8:	ldr	w2, [x21]
  4426ac:	b	442484 <nftw@plt+0x3f904>
  4426b0:	stp	x29, x30, [sp, #-64]!
  4426b4:	mov	x29, sp
  4426b8:	stp	x19, x20, [sp, #16]
  4426bc:	mov	x19, x0
  4426c0:	mov	x20, x3
  4426c4:	stp	x21, x22, [sp, #32]
  4426c8:	mov	x0, x3
  4426cc:	mov	w21, w1
  4426d0:	stp	x23, x24, [sp, #48]
  4426d4:	mov	x22, x2
  4426d8:	cbz	x3, 442704 <nftw@plt+0x3fb84>
  4426dc:	nop
  4426e0:	ldr	w4, [x0, #16]
  4426e4:	cbz	w4, 4427f0 <nftw@plt+0x3fc70>
  4426e8:	ldr	x0, [x0]
  4426ec:	cbnz	x0, 4426e0 <nftw@plt+0x3fb60>
  4426f0:	mov	x2, x20
  4426f4:	mov	w1, w21
  4426f8:	mov	x0, x19
  4426fc:	mov	w3, #0x0                   	// #0
  442700:	bl	4422e0 <nftw@plt+0x3f760>
  442704:	ldr	x23, [x19, #256]
  442708:	cmp	x23, #0xff
  44270c:	b.eq	44281c <nftw@plt+0x3fc9c>  // b.none
  442710:	add	x1, x23, #0x1
  442714:	str	x1, [x19, #256]
  442718:	mov	w0, #0x20                  	// #32
  44271c:	strb	w0, [x19, x23]
  442720:	strb	w0, [x19, #264]
  442724:	cmp	x1, #0xff
  442728:	b.eq	4427b4 <nftw@plt+0x3fc34>  // b.none
  44272c:	add	x0, x1, #0x1
  442730:	str	x0, [x19, #256]
  442734:	mov	w2, #0x5b                  	// #91
  442738:	strb	w2, [x19, x1]
  44273c:	strb	w2, [x19, #264]
  442740:	ldr	x2, [x22]
  442744:	cbz	x2, 442758 <nftw@plt+0x3fbd8>
  442748:	mov	x0, x19
  44274c:	mov	w1, w21
  442750:	bl	441798 <nftw@plt+0x3ec18>
  442754:	ldr	x0, [x19, #256]
  442758:	cmp	x0, #0xff
  44275c:	b.eq	442788 <nftw@plt+0x3fc08>  // b.none
  442760:	add	x1, x0, #0x1
  442764:	str	x1, [x19, #256]
  442768:	mov	w1, #0x5d                  	// #93
  44276c:	strb	w1, [x19, x0]
  442770:	strb	w1, [x19, #264]
  442774:	ldp	x19, x20, [sp, #16]
  442778:	ldp	x21, x22, [sp, #32]
  44277c:	ldp	x23, x24, [sp, #48]
  442780:	ldp	x29, x30, [sp], #64
  442784:	ret
  442788:	ldp	x3, x2, [x19, #272]
  44278c:	strb	wzr, [x19, #255]
  442790:	mov	x1, x0
  442794:	mov	x0, x19
  442798:	blr	x3
  44279c:	ldr	x2, [x19, #320]
  4427a0:	mov	x1, #0x1                   	// #1
  4427a4:	mov	x0, #0x0                   	// #0
  4427a8:	add	x2, x2, x1
  4427ac:	str	x2, [x19, #320]
  4427b0:	b	442764 <nftw@plt+0x3fbe4>
  4427b4:	ldp	x3, x2, [x19, #272]
  4427b8:	strb	wzr, [x19, #255]
  4427bc:	mov	x0, x19
  4427c0:	blr	x3
  4427c4:	mov	w1, #0x5b                  	// #91
  4427c8:	strb	w1, [x19]
  4427cc:	strb	w1, [x19, #264]
  4427d0:	mov	x0, #0x1                   	// #1
  4427d4:	ldr	x1, [x19, #320]
  4427d8:	ldr	x2, [x22]
  4427dc:	add	x1, x1, x0
  4427e0:	str	x0, [x19, #256]
  4427e4:	str	x1, [x19, #320]
  4427e8:	cbnz	x2, 442748 <nftw@plt+0x3fbc8>
  4427ec:	b	442760 <nftw@plt+0x3fbe0>
  4427f0:	ldr	x0, [x0, #8]
  4427f4:	ldr	w0, [x0]
  4427f8:	cmp	w0, #0x2a
  4427fc:	b.ne	442860 <nftw@plt+0x3fce0>  // b.any
  442800:	mov	w1, w21
  442804:	mov	x2, x20
  442808:	mov	x0, x19
  44280c:	mov	w3, #0x0                   	// #0
  442810:	bl	4422e0 <nftw@plt+0x3f760>
  442814:	ldr	x1, [x19, #256]
  442818:	b	442724 <nftw@plt+0x3fba4>
  44281c:	ldp	x3, x2, [x19, #272]
  442820:	strb	wzr, [x19, #255]
  442824:	mov	x1, x23
  442828:	mov	x0, x19
  44282c:	blr	x3
  442830:	mov	w1, #0x5b20                	// #23328
  442834:	mov	w0, #0x5b                  	// #91
  442838:	strh	w1, [x19]
  44283c:	strb	w0, [x19, #264]
  442840:	mov	x0, #0x2                   	// #2
  442844:	ldr	x1, [x19, #320]
  442848:	ldr	x2, [x22]
  44284c:	add	x1, x1, #0x1
  442850:	str	x0, [x19, #256]
  442854:	str	x1, [x19, #320]
  442858:	cbnz	x2, 442748 <nftw@plt+0x3fbc8>
  44285c:	b	442760 <nftw@plt+0x3fbe0>
  442860:	mov	w24, #0x20                  	// #32
  442864:	mov	x23, #0x0                   	// #0
  442868:	ldr	x1, [x19, #256]
  44286c:	b	442894 <nftw@plt+0x3fd14>
  442870:	mov	x0, x1
  442874:	add	x1, x1, #0x1
  442878:	str	x1, [x19, #256]
  44287c:	cmp	x23, #0x1
  442880:	strb	w24, [x19, x0]
  442884:	strb	w24, [x19, #264]
  442888:	mov	w24, #0x28                  	// #40
  44288c:	b.eq	4428d8 <nftw@plt+0x3fd58>  // b.none
  442890:	mov	x23, #0x1                   	// #1
  442894:	cmp	x1, #0xff
  442898:	b.ne	442870 <nftw@plt+0x3fcf0>  // b.any
  44289c:	ldp	x3, x2, [x19, #272]
  4428a0:	strb	wzr, [x19, #255]
  4428a4:	mov	x0, x19
  4428a8:	blr	x3
  4428ac:	ldr	x2, [x19, #320]
  4428b0:	mov	x0, #0x0                   	// #0
  4428b4:	mov	x1, #0x1                   	// #1
  4428b8:	str	x1, [x19, #256]
  4428bc:	add	x2, x2, x1
  4428c0:	str	x2, [x19, #320]
  4428c4:	strb	w24, [x19, x0]
  4428c8:	cmp	x23, #0x1
  4428cc:	strb	w24, [x19, #264]
  4428d0:	mov	w24, #0x28                  	// #40
  4428d4:	b.ne	442890 <nftw@plt+0x3fd10>  // b.any
  4428d8:	mov	w1, w21
  4428dc:	mov	x2, x20
  4428e0:	mov	x0, x19
  4428e4:	mov	w3, #0x0                   	// #0
  4428e8:	bl	4422e0 <nftw@plt+0x3f760>
  4428ec:	ldr	x1, [x19, #256]
  4428f0:	cmp	x1, #0xff
  4428f4:	b.eq	442910 <nftw@plt+0x3fd90>  // b.none
  4428f8:	add	x23, x1, #0x1
  4428fc:	str	x23, [x19, #256]
  442900:	mov	w0, #0x29                  	// #41
  442904:	strb	w0, [x19, x1]
  442908:	strb	w0, [x19, #264]
  44290c:	b	442708 <nftw@plt+0x3fb88>
  442910:	ldp	x3, x2, [x19, #272]
  442914:	strb	wzr, [x19, #255]
  442918:	mov	x0, x19
  44291c:	blr	x3
  442920:	ldr	x0, [x19, #320]
  442924:	mov	w1, #0x29                  	// #41
  442928:	strb	w1, [x19]
  44292c:	add	x0, x0, #0x1
  442930:	str	x0, [x19, #320]
  442934:	b	442710 <nftw@plt+0x3fb90>
  442938:	ldr	w4, [x2]
  44293c:	cmp	w4, #0x32
  442940:	b.eq	442948 <nftw@plt+0x3fdc8>  // b.none
  442944:	b	441798 <nftw@plt+0x3ec18>
  442948:	stp	x29, x30, [sp, #-48]!
  44294c:	mov	x29, sp
  442950:	stp	x19, x20, [sp, #16]
  442954:	mov	x19, x0
  442958:	ldr	x0, [x2, #8]
  44295c:	stp	x21, x22, [sp, #32]
  442960:	ldrsw	x22, [x0, #16]
  442964:	ldr	x20, [x0, #8]
  442968:	cbz	x22, 4429e0 <nftw@plt+0x3fe60>
  44296c:	add	x22, x20, x22
  442970:	ldr	x1, [x19, #256]
  442974:	b	442998 <nftw@plt+0x3fe18>
  442978:	mov	x2, x1
  44297c:	add	x1, x1, #0x1
  442980:	str	x1, [x19, #256]
  442984:	add	x20, x20, #0x1
  442988:	cmp	x20, x22
  44298c:	strb	w21, [x19, x2]
  442990:	strb	w21, [x19, #264]
  442994:	b.eq	4429e0 <nftw@plt+0x3fe60>  // b.none
  442998:	ldrb	w21, [x20]
  44299c:	cmp	x1, #0xff
  4429a0:	b.ne	442978 <nftw@plt+0x3fdf8>  // b.any
  4429a4:	ldp	x3, x2, [x19, #272]
  4429a8:	strb	wzr, [x19, #255]
  4429ac:	mov	x0, x19
  4429b0:	add	x20, x20, #0x1
  4429b4:	blr	x3
  4429b8:	ldr	x0, [x19, #320]
  4429bc:	mov	x2, #0x0                   	// #0
  4429c0:	mov	x1, #0x1                   	// #1
  4429c4:	str	x1, [x19, #256]
  4429c8:	add	x0, x0, x1
  4429cc:	str	x0, [x19, #320]
  4429d0:	strb	w21, [x19, x2]
  4429d4:	cmp	x20, x22
  4429d8:	strb	w21, [x19, #264]
  4429dc:	b.ne	442998 <nftw@plt+0x3fe18>  // b.any
  4429e0:	ldp	x19, x20, [sp, #16]
  4429e4:	ldp	x21, x22, [sp, #32]
  4429e8:	ldp	x29, x30, [sp], #48
  4429ec:	ret
  4429f0:	stp	x29, x30, [sp, #-48]!
  4429f4:	mov	x29, sp
  4429f8:	str	x21, [sp, #32]
  4429fc:	mov	w21, w1
  442a00:	ldr	w1, [x2]
  442a04:	stp	x19, x20, [sp, #16]
  442a08:	mov	x20, x2
  442a0c:	cmp	w1, #0x31
  442a10:	mov	x19, x0
  442a14:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  442a18:	b.ls	442aa8 <nftw@plt+0x3ff28>  // b.plast
  442a1c:	cmp	w1, #0x6
  442a20:	b.eq	442aa8 <nftw@plt+0x3ff28>  // b.none
  442a24:	ldr	x1, [x0, #256]
  442a28:	cmp	x1, #0xff
  442a2c:	b.eq	442ac4 <nftw@plt+0x3ff44>  // b.none
  442a30:	add	x0, x1, #0x1
  442a34:	str	x0, [x19, #256]
  442a38:	mov	w0, #0x28                  	// #40
  442a3c:	strb	w0, [x19, x1]
  442a40:	mov	x2, x20
  442a44:	strb	w0, [x19, #264]
  442a48:	mov	w1, w21
  442a4c:	mov	x0, x19
  442a50:	bl	441798 <nftw@plt+0x3ec18>
  442a54:	ldr	x1, [x19, #256]
  442a58:	add	x0, x1, #0x1
  442a5c:	cmp	x1, #0xff
  442a60:	b.ne	442a88 <nftw@plt+0x3ff08>  // b.any
  442a64:	ldp	x3, x2, [x19, #272]
  442a68:	strb	wzr, [x19, #255]
  442a6c:	mov	x0, x19
  442a70:	blr	x3
  442a74:	ldr	x2, [x19, #320]
  442a78:	mov	x0, #0x1                   	// #1
  442a7c:	mov	x1, #0x0                   	// #0
  442a80:	add	x2, x2, x0
  442a84:	str	x2, [x19, #320]
  442a88:	str	x0, [x19, #256]
  442a8c:	mov	w0, #0x29                  	// #41
  442a90:	strb	w0, [x19, x1]
  442a94:	strb	w0, [x19, #264]
  442a98:	ldp	x19, x20, [sp, #16]
  442a9c:	ldr	x21, [sp, #32]
  442aa0:	ldp	x29, x30, [sp], #48
  442aa4:	ret
  442aa8:	mov	x2, x20
  442aac:	mov	w1, w21
  442ab0:	mov	x0, x19
  442ab4:	ldp	x19, x20, [sp, #16]
  442ab8:	ldr	x21, [sp, #32]
  442abc:	ldp	x29, x30, [sp], #48
  442ac0:	b	441798 <nftw@plt+0x3ec18>
  442ac4:	ldp	x3, x2, [x0, #272]
  442ac8:	strb	wzr, [x0, #255]
  442acc:	blr	x3
  442ad0:	ldr	x2, [x19, #320]
  442ad4:	mov	x0, #0x1                   	// #1
  442ad8:	mov	x1, #0x0                   	// #0
  442adc:	add	x2, x2, x0
  442ae0:	str	x2, [x19, #320]
  442ae4:	b	442a34 <nftw@plt+0x3feb4>
  442ae8:	stp	x29, x30, [sp, #-80]!
  442aec:	mov	x29, sp
  442af0:	stp	x19, x20, [sp, #16]
  442af4:	mov	x19, x0
  442af8:	ldr	x0, [x2, #8]
  442afc:	stp	x21, x22, [sp, #32]
  442b00:	mov	w22, w1
  442b04:	ldr	x0, [x0]
  442b08:	ldrb	w1, [x0]
  442b0c:	cmp	w1, #0x66
  442b10:	b.ne	442ca4 <nftw@plt+0x40124>  // b.any
  442b14:	ldr	x1, [x3]
  442b18:	stp	x23, x24, [sp, #48]
  442b1c:	stp	x25, x26, [sp, #64]
  442b20:	mov	x25, #0x0                   	// #0
  442b24:	ldp	x23, x26, [x1, #8]
  442b28:	ldr	w1, [x26]
  442b2c:	cmp	w1, #0x3c
  442b30:	b.eq	442d6c <nftw@plt+0x401ec>  // b.none
  442b34:	ldr	w21, [x19, #316]
  442b38:	mov	w1, #0xffffffff            	// #-1
  442b3c:	str	w1, [x19, #316]
  442b40:	ldrb	w0, [x0, #1]
  442b44:	cmp	w0, #0x6c
  442b48:	b.eq	442d8c <nftw@plt+0x4020c>  // b.none
  442b4c:	b.hi	442cb8 <nftw@plt+0x40138>  // b.pmore
  442b50:	cmp	w0, #0x4c
  442b54:	b.eq	442b60 <nftw@plt+0x3ffe0>  // b.none
  442b58:	cmp	w0, #0x52
  442b5c:	b.ne	442c84 <nftw@plt+0x40104>  // b.any
  442b60:	ldr	x1, [x19, #256]
  442b64:	add	x0, x1, #0x1
  442b68:	cmp	x1, #0xff
  442b6c:	b.eq	442e4c <nftw@plt+0x402cc>  // b.none
  442b70:	str	x0, [x19, #256]
  442b74:	mov	w0, #0x28                  	// #40
  442b78:	strb	w0, [x19, x1]
  442b7c:	mov	x2, x26
  442b80:	strb	w0, [x19, #264]
  442b84:	mov	w1, w22
  442b88:	mov	x0, x19
  442b8c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  442b90:	bl	4429f0 <nftw@plt+0x3fe70>
  442b94:	add	x20, x20, #0x768
  442b98:	mov	w1, w22
  442b9c:	mov	x2, x23
  442ba0:	mov	x0, x19
  442ba4:	bl	442938 <nftw@plt+0x3fdb8>
  442ba8:	add	x26, x20, #0x3
  442bac:	mov	w24, #0x2e                  	// #46
  442bb0:	ldr	x1, [x19, #256]
  442bb4:	b	442bdc <nftw@plt+0x4005c>
  442bb8:	mov	x0, x1
  442bbc:	add	x1, x1, #0x1
  442bc0:	str	x1, [x19, #256]
  442bc4:	add	x20, x20, #0x1
  442bc8:	cmp	x26, x20
  442bcc:	strb	w24, [x19, x0]
  442bd0:	strb	w24, [x19, #264]
  442bd4:	b.eq	442c20 <nftw@plt+0x400a0>  // b.none
  442bd8:	ldrb	w24, [x20]
  442bdc:	cmp	x1, #0xff
  442be0:	b.ne	442bb8 <nftw@plt+0x40038>  // b.any
  442be4:	ldp	x3, x2, [x19, #272]
  442be8:	strb	wzr, [x19, #255]
  442bec:	mov	x0, x19
  442bf0:	add	x20, x20, #0x1
  442bf4:	blr	x3
  442bf8:	ldr	x2, [x19, #320]
  442bfc:	mov	x0, #0x0                   	// #0
  442c00:	mov	x1, #0x1                   	// #1
  442c04:	str	x1, [x19, #256]
  442c08:	add	x2, x2, x1
  442c0c:	str	x2, [x19, #320]
  442c10:	strb	w24, [x19, x0]
  442c14:	cmp	x26, x20
  442c18:	strb	w24, [x19, #264]
  442c1c:	b.ne	442bd8 <nftw@plt+0x40058>  // b.any
  442c20:	mov	x2, x23
  442c24:	mov	w1, w22
  442c28:	mov	x0, x19
  442c2c:	bl	442938 <nftw@plt+0x3fdb8>
  442c30:	mov	x2, x25
  442c34:	mov	w1, w22
  442c38:	mov	x0, x19
  442c3c:	bl	4429f0 <nftw@plt+0x3fe70>
  442c40:	ldr	x1, [x19, #256]
  442c44:	add	x0, x1, #0x1
  442c48:	cmp	x1, #0xff
  442c4c:	b.ne	442c74 <nftw@plt+0x400f4>  // b.any
  442c50:	ldp	x3, x2, [x19, #272]
  442c54:	strb	wzr, [x19, #255]
  442c58:	mov	x0, x19
  442c5c:	blr	x3
  442c60:	ldr	x2, [x19, #320]
  442c64:	mov	x0, #0x1                   	// #1
  442c68:	mov	x1, #0x0                   	// #0
  442c6c:	add	x2, x2, x0
  442c70:	str	x2, [x19, #320]
  442c74:	str	x0, [x19, #256]
  442c78:	mov	w0, #0x29                  	// #41
  442c7c:	strb	w0, [x19, x1]
  442c80:	strb	w0, [x19, #264]
  442c84:	ldp	x23, x24, [sp, #48]
  442c88:	mov	w0, #0x1                   	// #1
  442c8c:	ldp	x25, x26, [sp, #64]
  442c90:	str	w21, [x19, #316]
  442c94:	ldp	x19, x20, [sp, #16]
  442c98:	ldp	x21, x22, [sp, #32]
  442c9c:	ldp	x29, x30, [sp], #80
  442ca0:	ret
  442ca4:	mov	w0, #0x0                   	// #0
  442ca8:	ldp	x19, x20, [sp, #16]
  442cac:	ldp	x21, x22, [sp, #32]
  442cb0:	ldp	x29, x30, [sp], #80
  442cb4:	ret
  442cb8:	cmp	w0, #0x72
  442cbc:	b.ne	442c84 <nftw@plt+0x40104>  // b.any
  442cc0:	ldr	x1, [x19, #256]
  442cc4:	add	x0, x1, #0x1
  442cc8:	cmp	x1, #0xff
  442ccc:	b.eq	442e24 <nftw@plt+0x402a4>  // b.none
  442cd0:	str	x0, [x19, #256]
  442cd4:	mov	w0, #0x28                  	// #40
  442cd8:	strb	w0, [x19, x1]
  442cdc:	mov	x2, x26
  442ce0:	strb	w0, [x19, #264]
  442ce4:	mov	w1, w22
  442ce8:	mov	x0, x19
  442cec:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  442cf0:	bl	4429f0 <nftw@plt+0x3fe70>
  442cf4:	add	x20, x20, #0x688
  442cf8:	mov	w1, w22
  442cfc:	mov	x2, x23
  442d00:	mov	x0, x19
  442d04:	bl	442938 <nftw@plt+0x3fdb8>
  442d08:	add	x22, x20, #0x4
  442d0c:	mov	w24, #0x2e                  	// #46
  442d10:	ldr	x1, [x19, #256]
  442d14:	b	442d3c <nftw@plt+0x401bc>
  442d18:	mov	x0, x1
  442d1c:	add	x1, x1, #0x1
  442d20:	str	x1, [x19, #256]
  442d24:	add	x20, x20, #0x1
  442d28:	strb	w24, [x19, x0]
  442d2c:	cmp	x20, x22
  442d30:	strb	w24, [x19, #264]
  442d34:	b.eq	442c84 <nftw@plt+0x40104>  // b.none
  442d38:	ldrb	w24, [x20]
  442d3c:	cmp	x1, #0xff
  442d40:	b.ne	442d18 <nftw@plt+0x40198>  // b.any
  442d44:	ldp	x3, x2, [x19, #272]
  442d48:	strb	wzr, [x19, #255]
  442d4c:	mov	x0, x19
  442d50:	blr	x3
  442d54:	ldr	x2, [x19, #320]
  442d58:	mov	x1, #0x1                   	// #1
  442d5c:	mov	x0, #0x0                   	// #0
  442d60:	add	x2, x2, x1
  442d64:	str	x2, [x19, #320]
  442d68:	b	442d20 <nftw@plt+0x401a0>
  442d6c:	ldr	w21, [x19, #316]
  442d70:	mov	w1, #0xffffffff            	// #-1
  442d74:	ldr	x25, [x26, #16]
  442d78:	ldr	x26, [x26, #8]
  442d7c:	str	w1, [x19, #316]
  442d80:	ldrb	w0, [x0, #1]
  442d84:	cmp	w0, #0x6c
  442d88:	b.ne	442b4c <nftw@plt+0x3ffcc>  // b.any
  442d8c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  442d90:	add	x20, x20, #0x680
  442d94:	add	x25, x20, #0x4
  442d98:	mov	w24, #0x28                  	// #40
  442d9c:	ldr	x1, [x19, #256]
  442da0:	b	442dc8 <nftw@plt+0x40248>
  442da4:	mov	x0, x1
  442da8:	add	x1, x1, #0x1
  442dac:	str	x1, [x19, #256]
  442db0:	add	x20, x20, #0x1
  442db4:	cmp	x25, x20
  442db8:	strb	w24, [x19, x0]
  442dbc:	strb	w24, [x19, #264]
  442dc0:	b.eq	442e0c <nftw@plt+0x4028c>  // b.none
  442dc4:	ldrb	w24, [x20]
  442dc8:	cmp	x1, #0xff
  442dcc:	b.ne	442da4 <nftw@plt+0x40224>  // b.any
  442dd0:	ldp	x3, x2, [x19, #272]
  442dd4:	strb	wzr, [x19, #255]
  442dd8:	mov	x0, x19
  442ddc:	add	x20, x20, #0x1
  442de0:	blr	x3
  442de4:	ldr	x2, [x19, #320]
  442de8:	mov	x0, #0x0                   	// #0
  442dec:	mov	x1, #0x1                   	// #1
  442df0:	str	x1, [x19, #256]
  442df4:	add	x2, x2, x1
  442df8:	str	x2, [x19, #320]
  442dfc:	strb	w24, [x19, x0]
  442e00:	cmp	x25, x20
  442e04:	strb	w24, [x19, #264]
  442e08:	b.ne	442dc4 <nftw@plt+0x40244>  // b.any
  442e0c:	mov	x2, x23
  442e10:	mov	w1, w22
  442e14:	mov	x0, x19
  442e18:	bl	442938 <nftw@plt+0x3fdb8>
  442e1c:	mov	x2, x26
  442e20:	b	442c34 <nftw@plt+0x400b4>
  442e24:	ldp	x3, x2, [x19, #272]
  442e28:	strb	wzr, [x19, #255]
  442e2c:	mov	x0, x19
  442e30:	blr	x3
  442e34:	ldr	x2, [x19, #320]
  442e38:	mov	x0, #0x1                   	// #1
  442e3c:	mov	x1, #0x0                   	// #0
  442e40:	add	x2, x2, x0
  442e44:	str	x2, [x19, #320]
  442e48:	b	442cd0 <nftw@plt+0x40150>
  442e4c:	ldp	x3, x2, [x19, #272]
  442e50:	strb	wzr, [x19, #255]
  442e54:	mov	x0, x19
  442e58:	blr	x3
  442e5c:	ldr	x2, [x19, #320]
  442e60:	mov	x0, #0x1                   	// #1
  442e64:	mov	x1, #0x0                   	// #0
  442e68:	add	x2, x2, x0
  442e6c:	str	x2, [x19, #320]
  442e70:	b	442b70 <nftw@plt+0x3fff0>
  442e74:	nop
  442e78:	cmp	x1, #0x0
  442e7c:	mov	x3, x0
  442e80:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  442e84:	ccmp	x0, #0x0, #0x4, gt
  442e88:	mov	w0, #0x0                   	// #0
  442e8c:	b.ne	442e94 <nftw@plt+0x40314>  // b.any
  442e90:	ret
  442e94:	mov	w0, #0x1                   	// #1
  442e98:	stp	xzr, x1, [x3]
  442e9c:	str	w2, [x3, #16]
  442ea0:	ret
  442ea4:	nop
  442ea8:	cmp	w1, #0x0
  442eac:	mov	x3, x0
  442eb0:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
  442eb4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  442eb8:	mov	w0, #0x0                   	// #0
  442ebc:	b.eq	442ed4 <nftw@plt+0x40354>  // b.none
  442ec0:	mov	x4, #0x33                  	// #51
  442ec4:	mov	w0, #0x1                   	// #1
  442ec8:	str	x4, [x3]
  442ecc:	str	w1, [x3, #8]
  442ed0:	str	x2, [x3, #16]
  442ed4:	ret
  442ed8:	cmp	x0, #0x0
  442edc:	mov	x3, x0
  442ee0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  442ee4:	mov	w0, #0x0                   	// #0
  442ee8:	b.eq	442f10 <nftw@plt+0x40390>  // b.none
  442eec:	sub	w4, w1, #0x1
  442ef0:	mov	w0, #0x0                   	// #0
  442ef4:	cmp	w4, #0x4
  442ef8:	b.hi	442f10 <nftw@plt+0x40390>  // b.pmore
  442efc:	mov	x4, #0x7                   	// #7
  442f00:	mov	w0, #0x1                   	// #1
  442f04:	str	x4, [x3]
  442f08:	str	w1, [x3, #8]
  442f0c:	str	x2, [x3, #16]
  442f10:	ret
  442f14:	nop
  442f18:	cmp	x0, #0x0
  442f1c:	mov	x3, x0
  442f20:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  442f24:	mov	w0, #0x0                   	// #0
  442f28:	b.eq	442f50 <nftw@plt+0x403d0>  // b.none
  442f2c:	sub	w4, w1, #0x1
  442f30:	mov	w0, #0x0                   	// #0
  442f34:	cmp	w4, #0x4
  442f38:	b.hi	442f50 <nftw@plt+0x403d0>  // b.pmore
  442f3c:	mov	x4, #0x8                   	// #8
  442f40:	mov	w0, #0x1                   	// #1
  442f44:	str	x4, [x3]
  442f48:	str	w1, [x3, #8]
  442f4c:	str	x2, [x3, #16]
  442f50:	ret
  442f54:	nop
  442f58:	stp	x29, x30, [sp, #-80]!
  442f5c:	mov	x29, sp
  442f60:	ldr	x4, [x0, #24]
  442f64:	stp	x19, x20, [sp, #16]
  442f68:	mov	x19, x0
  442f6c:	mov	x0, x4
  442f70:	bl	43d658 <nftw@plt+0x3aad8>
  442f74:	cbnz	w0, 442fb4 <nftw@plt+0x40434>
  442f78:	ldrb	w1, [x4]
  442f7c:	sub	w0, w1, #0x30
  442f80:	cmp	w0, #0x4a
  442f84:	b.ls	442f9c <nftw@plt+0x4041c>  // b.plast
  442f88:	mov	x20, #0x0                   	// #0
  442f8c:	mov	x0, x20
  442f90:	ldp	x19, x20, [sp, #16]
  442f94:	ldp	x29, x30, [sp], #80
  442f98:	ret
  442f9c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  442fa0:	add	x2, x2, #0x620
  442fa4:	ldrh	w0, [x2, w0, uxtw #1]
  442fa8:	adr	x2, 442fb4 <nftw@plt+0x40434>
  442fac:	add	x0, x2, w0, sxth #2
  442fb0:	br	x0
  442fb4:	add	x1, sp, #0x48
  442fb8:	mov	x0, x19
  442fbc:	mov	w2, #0x0                   	// #0
  442fc0:	stp	x21, x22, [sp, #32]
  442fc4:	bl	445370 <nftw@plt+0x427f0>
  442fc8:	mov	x21, x0
  442fcc:	cbz	x0, 443060 <nftw@plt+0x404e0>
  442fd0:	ldr	x0, [x19, #24]
  442fd4:	ldrb	w0, [x0]
  442fd8:	cmp	w0, #0x46
  442fdc:	mov	x0, x19
  442fe0:	b.eq	443054 <nftw@plt+0x404d4>  // b.none
  442fe4:	bl	442f58 <nftw@plt+0x403d8>
  442fe8:	str	x0, [x21]
  442fec:	cbz	x0, 443060 <nftw@plt+0x404e0>
  442ff0:	ldr	w1, [x0]
  442ff4:	ldr	x20, [sp, #72]
  442ff8:	sub	w1, w1, #0x1f
  442ffc:	cmp	w1, #0x1
  443000:	b.ls	443038 <nftw@plt+0x404b8>  // b.plast
  443004:	cbz	x20, 443060 <nftw@plt+0x404e0>
  443008:	ldp	w0, w1, [x19, #56]
  44300c:	cmp	w0, w1
  443010:	b.ge	443060 <nftw@plt+0x404e0>  // b.tcont
  443014:	ldr	x2, [x19, #48]
  443018:	add	w1, w0, #0x1
  44301c:	ldp	x21, x22, [sp, #32]
  443020:	str	x20, [x2, w0, sxtw #3]
  443024:	mov	x0, x20
  443028:	str	w1, [x19, #56]
  44302c:	ldp	x19, x20, [sp, #16]
  443030:	ldp	x29, x30, [sp], #80
  443034:	ret
  443038:	ldr	x1, [x0, #8]
  44303c:	str	x20, [x0, #8]
  443040:	ldr	x0, [x21]
  443044:	str	x0, [sp, #72]
  443048:	str	x1, [x21]
  44304c:	ldr	x20, [sp, #72]
  443050:	b	443004 <nftw@plt+0x40484>
  443054:	bl	444340 <nftw@plt+0x417c0>
  443058:	str	x0, [x21]
  44305c:	b	442fec <nftw@plt+0x4046c>
  443060:	ldp	x21, x22, [sp, #32]
  443064:	b	442f88 <nftw@plt+0x40408>
  443068:	ldp	w2, w3, [x19, #40]
  44306c:	sub	w1, w1, #0x61
  443070:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  443074:	add	x0, x0, #0x6b8
  443078:	sbfiz	x1, x1, #5, #32
  44307c:	add	x0, x0, #0x188
  443080:	add	x1, x0, x1
  443084:	cmp	w2, w3
  443088:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  44308c:	mov	w0, #0x18                  	// #24
  443090:	add	w6, w2, #0x1
  443094:	ldr	x3, [x19, #32]
  443098:	smull	x2, w2, w0
  44309c:	ldr	w7, [x1, #8]
  4430a0:	mov	w5, #0x27                  	// #39
  4430a4:	add	x20, x3, x2
  4430a8:	ldr	w0, [x19, #72]
  4430ac:	add	x4, x4, #0x1
  4430b0:	add	w0, w0, w7
  4430b4:	str	wzr, [x20, #4]
  4430b8:	str	w6, [x19, #40]
  4430bc:	str	w5, [x3, x2]
  4430c0:	str	x1, [x20, #8]
  4430c4:	str	x4, [x19, #24]
  4430c8:	str	w0, [x19, #72]
  4430cc:	b	442f8c <nftw@plt+0x4040c>
  4430d0:	mov	x0, x19
  4430d4:	bl	4457a0 <nftw@plt+0x42c20>
  4430d8:	mov	x20, x0
  4430dc:	str	x0, [sp, #72]
  4430e0:	cbz	x20, 442f88 <nftw@plt+0x40408>
  4430e4:	ldp	w0, w1, [x19, #56]
  4430e8:	cmp	w0, w1
  4430ec:	b.ge	442f88 <nftw@plt+0x40408>  // b.tcont
  4430f0:	ldr	x2, [x19, #48]
  4430f4:	add	w1, w0, #0x1
  4430f8:	str	x20, [x2, w0, sxtw #3]
  4430fc:	str	w1, [x19, #56]
  443100:	ldr	x20, [sp, #72]
  443104:	mov	x0, x20
  443108:	ldp	x19, x20, [sp, #16]
  44310c:	ldp	x29, x30, [sp], #80
  443110:	ret
  443114:	mov	x0, x19
  443118:	bl	444340 <nftw@plt+0x417c0>
  44311c:	mov	x20, x0
  443120:	str	x0, [sp, #72]
  443124:	b	4430e0 <nftw@plt+0x40560>
  443128:	add	x4, x4, #0x1
  44312c:	str	x4, [x19, #24]
  443130:	mov	x0, x19
  443134:	bl	442f58 <nftw@plt+0x403d8>
  443138:	mov	x2, x0
  44313c:	mov	x3, #0x0                   	// #0
  443140:	mov	x0, x19
  443144:	mov	w1, #0x26                  	// #38
  443148:	bl	43cc98 <nftw@plt+0x3a118>
  44314c:	mov	x20, x0
  443150:	str	x0, [sp, #72]
  443154:	b	4430e0 <nftw@plt+0x40560>
  443158:	add	x4, x4, #0x1
  44315c:	str	x4, [x19, #24]
  443160:	mov	x0, x19
  443164:	bl	442f58 <nftw@plt+0x403d8>
  443168:	mov	x2, x0
  44316c:	mov	x3, #0x0                   	// #0
  443170:	mov	x0, x19
  443174:	mov	w1, #0x24                  	// #36
  443178:	bl	43cc98 <nftw@plt+0x3a118>
  44317c:	mov	x20, x0
  443180:	str	x0, [sp, #72]
  443184:	b	4430e0 <nftw@plt+0x40560>
  443188:	add	x4, x4, #0x1
  44318c:	str	x4, [x19, #24]
  443190:	mov	x0, x19
  443194:	bl	442f58 <nftw@plt+0x403d8>
  443198:	mov	x2, x0
  44319c:	mov	x3, #0x0                   	// #0
  4431a0:	mov	x0, x19
  4431a4:	mov	w1, #0x25                  	// #37
  4431a8:	bl	43cc98 <nftw@plt+0x3a118>
  4431ac:	mov	x20, x0
  4431b0:	str	x0, [sp, #72]
  4431b4:	b	4430e0 <nftw@plt+0x40560>
  4431b8:	add	x0, x4, #0x1
  4431bc:	str	x0, [x19, #24]
  4431c0:	ldrb	w0, [x4, #1]
  4431c4:	cbz	w0, 442f88 <nftw@plt+0x40408>
  4431c8:	add	x0, x4, #0x2
  4431cc:	str	x0, [x19, #24]
  4431d0:	ldrb	w0, [x4, #1]
  4431d4:	cmp	w0, #0x68
  4431d8:	b.eq	443918 <nftw@plt+0x40d98>  // b.none
  4431dc:	b.hi	44352c <nftw@plt+0x409ac>  // b.pmore
  4431e0:	cmp	w0, #0x63
  4431e4:	b.eq	4438d8 <nftw@plt+0x40d58>  // b.none
  4431e8:	b.ls	4434dc <nftw@plt+0x4095c>  // b.plast
  4431ec:	cmp	w0, #0x65
  4431f0:	b.eq	4439b8 <nftw@plt+0x40e38>  // b.none
  4431f4:	cmp	w0, #0x66
  4431f8:	b.ne	443748 <nftw@plt+0x40bc8>  // b.any
  4431fc:	ldp	w0, w1, [x19, #40]
  443200:	cmp	w0, w1
  443204:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  443208:	mov	w1, #0x18                  	// #24
  44320c:	add	w5, w0, #0x1
  443210:	ldr	x3, [x19, #32]
  443214:	smull	x0, w0, w1
  443218:	ldr	w2, [x19, #72]
  44321c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  443220:	add	x1, x1, #0x6b8
  443224:	add	x20, x3, x0
  443228:	add	x1, x1, #0x4c8
  44322c:	mov	w4, #0x27                  	// #39
  443230:	str	wzr, [x20, #4]
  443234:	add	w2, w2, #0x9
  443238:	str	w5, [x19, #40]
  44323c:	str	w4, [x3, x0]
  443240:	str	x1, [x20, #8]
  443244:	str	w2, [x19, #72]
  443248:	b	442f8c <nftw@plt+0x4040c>
  44324c:	add	x4, x4, #0x1
  443250:	str	x4, [x19, #24]
  443254:	mov	x0, x19
  443258:	bl	43d148 <nftw@plt+0x3a5c8>
  44325c:	str	x0, [sp, #72]
  443260:	ldr	x1, [x19, #24]
  443264:	mov	x20, x0
  443268:	ldrb	w0, [x1]
  44326c:	cmp	w0, #0x49
  443270:	b.eq	443808 <nftw@plt+0x40c88>  // b.none
  443274:	mov	x0, x19
  443278:	bl	442f58 <nftw@plt+0x403d8>
  44327c:	ldr	x3, [sp, #72]
  443280:	mov	x2, x0
  443284:	mov	w1, #0x21                  	// #33
  443288:	mov	x0, x19
  44328c:	bl	43cc98 <nftw@plt+0x3a118>
  443290:	mov	x20, x0
  443294:	str	x0, [sp, #72]
  443298:	b	4430e0 <nftw@plt+0x40560>
  44329c:	add	x4, x4, #0x1
  4432a0:	str	x4, [x19, #24]
  4432a4:	mov	x0, x19
  4432a8:	bl	442f58 <nftw@plt+0x403d8>
  4432ac:	mov	x2, x0
  4432b0:	mov	x3, #0x0                   	// #0
  4432b4:	mov	x0, x19
  4432b8:	mov	w1, #0x22                  	// #34
  4432bc:	bl	43cc98 <nftw@plt+0x3a118>
  4432c0:	mov	x20, x0
  4432c4:	str	x0, [sp, #72]
  4432c8:	b	4430e0 <nftw@plt+0x40560>
  4432cc:	ldrb	w0, [x4, #1]
  4432d0:	sub	w1, w0, #0x30
  4432d4:	cmp	w0, #0x5f
  4432d8:	and	w1, w1, #0xff
  4432dc:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  4432e0:	b.ls	4432f4 <nftw@plt+0x40774>  // b.plast
  4432e4:	sub	w0, w0, #0x41
  4432e8:	and	w0, w0, #0xff
  4432ec:	cmp	w0, #0x19
  4432f0:	b.hi	4437e4 <nftw@plt+0x40c64>  // b.pmore
  4432f4:	mov	w1, #0x0                   	// #0
  4432f8:	mov	x0, x19
  4432fc:	bl	43d348 <nftw@plt+0x3a7c8>
  443300:	str	x0, [sp, #72]
  443304:	ldr	x1, [x19, #24]
  443308:	mov	x20, x0
  44330c:	ldrb	w0, [x1]
  443310:	cmp	w0, #0x49
  443314:	b.ne	442f8c <nftw@plt+0x4040c>  // b.any
  443318:	mov	x0, x19
  44331c:	bl	445770 <nftw@plt+0x42bf0>
  443320:	mov	x2, x20
  443324:	mov	x3, x0
  443328:	mov	w1, #0x4                   	// #4
  44332c:	mov	x0, x19
  443330:	bl	43cc98 <nftw@plt+0x3a118>
  443334:	mov	x20, x0
  443338:	str	x0, [sp, #72]
  44333c:	b	4430e0 <nftw@plt+0x40560>
  443340:	mov	x0, x19
  443344:	stp	x21, x22, [sp, #32]
  443348:	bl	43d0c8 <nftw@plt+0x3a548>
  44334c:	ldr	x21, [x19, #24]
  443350:	str	x0, [sp, #72]
  443354:	mov	x20, x0
  443358:	ldrb	w0, [x21]
  44335c:	cmp	w0, #0x49
  443360:	b.eq	443788 <nftw@plt+0x40c08>  // b.none
  443364:	ldp	x21, x22, [sp, #32]
  443368:	b	4430e0 <nftw@plt+0x40560>
  44336c:	add	x4, x4, #0x1
  443370:	str	x4, [x19, #24]
  443374:	mov	x0, x19
  443378:	bl	43d148 <nftw@plt+0x3a5c8>
  44337c:	mov	x2, x0
  443380:	mov	x3, #0x0                   	// #0
  443384:	mov	x0, x19
  443388:	mov	w1, #0x28                  	// #40
  44338c:	bl	43cc98 <nftw@plt+0x3a118>
  443390:	mov	x20, x0
  443394:	str	x0, [sp, #72]
  443398:	b	4430e0 <nftw@plt+0x40560>
  44339c:	add	x4, x4, #0x1
  4433a0:	str	x4, [x19, #24]
  4433a4:	mov	x0, x19
  4433a8:	bl	442f58 <nftw@plt+0x403d8>
  4433ac:	mov	x2, x0
  4433b0:	mov	x3, #0x0                   	// #0
  4433b4:	mov	x0, x19
  4433b8:	mov	w1, #0x23                  	// #35
  4433bc:	bl	43cc98 <nftw@plt+0x3a118>
  4433c0:	mov	x20, x0
  4433c4:	str	x0, [sp, #72]
  4433c8:	b	4430e0 <nftw@plt+0x40560>
  4433cc:	add	x3, x4, #0x1
  4433d0:	str	x3, [x19, #24]
  4433d4:	ldrb	w0, [x4, #1]
  4433d8:	cmp	w0, #0x5f
  4433dc:	b.eq	4437dc <nftw@plt+0x40c5c>  // b.none
  4433e0:	sub	w0, w0, #0x30
  4433e4:	and	w0, w0, #0xff
  4433e8:	cmp	w0, #0x9
  4433ec:	b.hi	44382c <nftw@plt+0x40cac>  // b.pmore
  4433f0:	mov	x1, x3
  4433f4:	nop
  4433f8:	mov	x4, x1
  4433fc:	add	x1, x1, #0x1
  443400:	str	x1, [x19, #24]
  443404:	ldrb	w0, [x1]
  443408:	sub	w0, w0, #0x30
  44340c:	and	w0, w0, #0xff
  443410:	cmp	w0, #0x9
  443414:	b.ls	4433f8 <nftw@plt+0x40878>  // b.plast
  443418:	ldp	w0, w5, [x19, #40]
  44341c:	sub	x2, x1, x3
  443420:	cmp	w0, w5
  443424:	b.ge	442f88 <nftw@plt+0x40408>  // b.tcont
  443428:	mov	w7, #0x18                  	// #24
  44342c:	add	w6, w0, #0x1
  443430:	ldr	x5, [x19, #32]
  443434:	smull	x0, w0, w7
  443438:	cmp	w2, #0x0
  44343c:	add	x20, x5, x0
  443440:	str	wzr, [x20, #4]
  443444:	str	w6, [x19, #40]
  443448:	b.le	442f88 <nftw@plt+0x40408>
  44344c:	str	xzr, [x5, x0]
  443450:	str	x3, [x20, #8]
  443454:	str	w2, [x20, #16]
  443458:	ldrb	w0, [x4, #1]
  44345c:	mov	x3, x1
  443460:	cmp	w0, #0x5f
  443464:	b.ne	442f88 <nftw@plt+0x40408>  // b.any
  443468:	add	x3, x3, #0x1
  44346c:	str	x3, [x19, #24]
  443470:	mov	x0, x19
  443474:	bl	442f58 <nftw@plt+0x403d8>
  443478:	mov	x3, x0
  44347c:	mov	x2, x20
  443480:	mov	x0, x19
  443484:	mov	w1, #0x2a                  	// #42
  443488:	bl	43cc98 <nftw@plt+0x3a118>
  44348c:	mov	x20, x0
  443490:	str	x0, [sp, #72]
  443494:	b	4430e0 <nftw@plt+0x40560>
  443498:	add	x4, x4, #0x1
  44349c:	str	x4, [x19, #24]
  4434a0:	mov	x0, x19
  4434a4:	bl	442f58 <nftw@plt+0x403d8>
  4434a8:	mov	x20, x0
  4434ac:	cbz	x0, 442f88 <nftw@plt+0x40408>
  4434b0:	mov	x0, x19
  4434b4:	bl	442f58 <nftw@plt+0x403d8>
  4434b8:	mov	x3, x0
  4434bc:	cbz	x0, 442f88 <nftw@plt+0x40408>
  4434c0:	mov	x2, x20
  4434c4:	mov	x0, x19
  4434c8:	mov	w1, #0x2b                  	// #43
  4434cc:	bl	43cc98 <nftw@plt+0x3a118>
  4434d0:	mov	x20, x0
  4434d4:	str	x0, [sp, #72]
  4434d8:	b	4430e0 <nftw@plt+0x40560>
  4434dc:	cmp	w0, #0x54
  4434e0:	b.eq	4435ac <nftw@plt+0x40a2c>  // b.none
  4434e4:	cmp	w0, #0x61
  4434e8:	b.ne	443640 <nftw@plt+0x40ac0>  // b.any
  4434ec:	ldp	w0, w1, [x19, #40]
  4434f0:	cmp	w0, w1
  4434f4:	b.ge	442f88 <nftw@plt+0x40408>  // b.tcont
  4434f8:	mov	w3, #0x18                  	// #24
  4434fc:	add	w1, w0, #0x1
  443500:	ldr	x2, [x19, #32]
  443504:	smull	x0, w0, w3
  443508:	str	w1, [x19, #40]
  44350c:	mov	w3, #0x4                   	// #4
  443510:	add	x20, x2, x0
  443514:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  443518:	add	x1, x1, #0x690
  44351c:	str	xzr, [x2, x0]
  443520:	str	x1, [x20, #8]
  443524:	str	w3, [x20, #16]
  443528:	b	442f8c <nftw@plt+0x4040c>
  44352c:	cmp	w0, #0x73
  443530:	b.eq	4438a0 <nftw@plt+0x40d20>  // b.none
  443534:	b.ls	443608 <nftw@plt+0x40a88>  // b.plast
  443538:	cmp	w0, #0x75
  44353c:	b.eq	443a08 <nftw@plt+0x40e88>  // b.none
  443540:	cmp	w0, #0x76
  443544:	b.ne	4435a4 <nftw@plt+0x40a24>  // b.any
  443548:	ldrb	w0, [x4, #2]
  44354c:	cmp	w0, #0x5f
  443550:	b.eq	443aa0 <nftw@plt+0x40f20>  // b.none
  443554:	mov	x0, x19
  443558:	bl	43cfe8 <nftw@plt+0x3a468>
  44355c:	mov	x20, x0
  443560:	cbz	x20, 442f88 <nftw@plt+0x40408>
  443564:	ldr	x0, [x19, #24]
  443568:	ldrb	w1, [x0]
  44356c:	cmp	w1, #0x5f
  443570:	b.ne	442f88 <nftw@plt+0x40408>  // b.any
  443574:	add	x0, x0, #0x1
  443578:	str	x0, [x19, #24]
  44357c:	mov	x0, x19
  443580:	bl	442f58 <nftw@plt+0x403d8>
  443584:	mov	x3, x0
  443588:	mov	x2, x20
  44358c:	mov	x0, x19
  443590:	mov	w1, #0x2d                  	// #45
  443594:	bl	43cc98 <nftw@plt+0x3a118>
  443598:	mov	x20, x0
  44359c:	str	x0, [sp, #72]
  4435a0:	b	4430e0 <nftw@plt+0x40560>
  4435a4:	cmp	w0, #0x74
  4435a8:	b.ne	442f88 <nftw@plt+0x40408>  // b.any
  4435ac:	ldr	w20, [x19, #76]
  4435b0:	mov	w0, #0x1                   	// #1
  4435b4:	str	w0, [x19, #76]
  4435b8:	mov	x0, x19
  4435bc:	bl	444c40 <nftw@plt+0x420c0>
  4435c0:	str	w20, [x19, #76]
  4435c4:	mov	x2, x0
  4435c8:	mov	x3, #0x0                   	// #0
  4435cc:	mov	x0, x19
  4435d0:	mov	w1, #0x43                  	// #67
  4435d4:	bl	43cc98 <nftw@plt+0x3a118>
  4435d8:	str	x0, [sp, #72]
  4435dc:	mov	x20, x0
  4435e0:	cbz	x0, 442f88 <nftw@plt+0x40408>
  4435e4:	ldr	x0, [x19, #24]
  4435e8:	ldrb	w1, [x0]
  4435ec:	cbz	w1, 442f88 <nftw@plt+0x40408>
  4435f0:	add	x1, x0, #0x1
  4435f4:	str	x1, [x19, #24]
  4435f8:	ldrb	w0, [x0]
  4435fc:	cmp	w0, #0x45
  443600:	b.ne	442f88 <nftw@plt+0x40408>  // b.any
  443604:	b	4430e4 <nftw@plt+0x40564>
  443608:	cmp	w0, #0x6e
  44360c:	b.eq	443968 <nftw@plt+0x40de8>  // b.none
  443610:	cmp	w0, #0x70
  443614:	b.ne	4436f0 <nftw@plt+0x40b70>  // b.any
  443618:	mov	x0, x19
  44361c:	bl	442f58 <nftw@plt+0x403d8>
  443620:	mov	x3, #0x0                   	// #0
  443624:	mov	x2, x0
  443628:	mov	w1, #0x4b                  	// #75
  44362c:	mov	x0, x19
  443630:	bl	43cc98 <nftw@plt+0x3a118>
  443634:	mov	x20, x0
  443638:	str	x0, [sp, #72]
  44363c:	b	4430e0 <nftw@plt+0x40560>
  443640:	cmp	w0, #0x46
  443644:	b.ne	442f88 <nftw@plt+0x40408>  // b.any
  443648:	ldp	w0, w1, [x19, #40]
  44364c:	cmp	w0, w1
  443650:	b.ge	443adc <nftw@plt+0x40f5c>  // b.tcont
  443654:	mov	w2, #0x18                  	// #24
  443658:	add	w3, w0, #0x1
  44365c:	ldr	x1, [x19, #32]
  443660:	smull	x0, w0, w2
  443664:	mov	w2, #0x2c                  	// #44
  443668:	add	x20, x1, x0
  44366c:	str	wzr, [x20, #4]
  443670:	str	w3, [x19, #40]
  443674:	str	x20, [sp, #72]
  443678:	str	w2, [x1, x0]
  44367c:	ldrb	w0, [x4, #2]
  443680:	sub	w0, w0, #0x30
  443684:	and	w0, w0, #0xff
  443688:	cmp	w0, #0x9
  44368c:	cset	w1, ls  // ls = plast
  443690:	strh	w1, [x20, #16]
  443694:	b.hi	4436a4 <nftw@plt+0x40b24>  // b.pmore
  443698:	add	x0, x19, #0x18
  44369c:	bl	43cf18 <nftw@plt+0x3a398>
  4436a0:	ldr	x20, [sp, #72]
  4436a4:	mov	x0, x19
  4436a8:	bl	442f58 <nftw@plt+0x403d8>
  4436ac:	str	x0, [x20, #8]
  4436b0:	ldr	x1, [sp, #72]
  4436b4:	ldr	x0, [x1, #8]
  4436b8:	cbz	x0, 442f88 <nftw@plt+0x40408>
  4436bc:	add	x0, x19, #0x18
  4436c0:	bl	43cf18 <nftw@plt+0x3a398>
  4436c4:	ldr	x1, [x19, #24]
  4436c8:	ldrb	w0, [x1]
  4436cc:	cbz	w0, 4436dc <nftw@plt+0x40b5c>
  4436d0:	add	x0, x1, #0x1
  4436d4:	str	x0, [x19, #24]
  4436d8:	ldrb	w0, [x1]
  4436dc:	ldr	x20, [sp, #72]
  4436e0:	cmp	w0, #0x73
  4436e4:	cset	w0, eq  // eq = none
  4436e8:	strh	w0, [x20, #18]
  4436ec:	b	442f8c <nftw@plt+0x4040c>
  4436f0:	cmp	w0, #0x69
  4436f4:	b.ne	442f88 <nftw@plt+0x40408>  // b.any
  4436f8:	ldp	w0, w1, [x19, #40]
  4436fc:	cmp	w0, w1
  443700:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  443704:	mov	w1, #0x18                  	// #24
  443708:	add	w5, w0, #0x1
  44370c:	ldr	x3, [x19, #32]
  443710:	smull	x0, w0, w1
  443714:	ldr	w2, [x19, #72]
  443718:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  44371c:	add	x1, x1, #0x6b8
  443720:	add	x20, x3, x0
  443724:	add	x1, x1, #0x588
  443728:	mov	w4, #0x27                  	// #39
  44372c:	str	wzr, [x20, #4]
  443730:	add	w2, w2, #0x8
  443734:	str	w5, [x19, #40]
  443738:	str	w4, [x3, x0]
  44373c:	str	x1, [x20, #8]
  443740:	str	w2, [x19, #72]
  443744:	b	442f8c <nftw@plt+0x4040c>
  443748:	cmp	w0, #0x64
  44374c:	b.ne	442f88 <nftw@plt+0x40408>  // b.any
  443750:	ldp	w0, w1, [x19, #40]
  443754:	cmp	w0, w1
  443758:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  44375c:	mov	w1, #0x18                  	// #24
  443760:	add	w5, w0, #0x1
  443764:	ldr	x3, [x19, #32]
  443768:	smull	x0, w0, w1
  44376c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  443770:	add	x1, x1, #0x6b8
  443774:	ldr	w2, [x19, #72]
  443778:	add	x1, x1, #0x4e8
  44377c:	add	x20, x3, x0
  443780:	mov	w4, #0x27                  	// #39
  443784:	b	443230 <nftw@plt+0x406b0>
  443788:	ldr	w0, [x19, #80]
  44378c:	cbnz	w0, 443858 <nftw@plt+0x40cd8>
  443790:	cbz	x20, 443060 <nftw@plt+0x404e0>
  443794:	ldp	w1, w0, [x19, #56]
  443798:	cmp	w1, w0
  44379c:	b.ge	443060 <nftw@plt+0x404e0>  // b.tcont
  4437a0:	ldr	x3, [x19, #48]
  4437a4:	add	w2, w1, #0x1
  4437a8:	mov	x0, x19
  4437ac:	str	x20, [x3, w1, sxtw #3]
  4437b0:	str	w2, [x19, #56]
  4437b4:	bl	445770 <nftw@plt+0x42bf0>
  4437b8:	mov	x3, x0
  4437bc:	mov	x2, x20
  4437c0:	mov	x0, x19
  4437c4:	mov	w1, #0x4                   	// #4
  4437c8:	bl	43cc98 <nftw@plt+0x3a118>
  4437cc:	mov	x20, x0
  4437d0:	str	x0, [sp, #72]
  4437d4:	ldp	x21, x22, [sp, #32]
  4437d8:	b	4430e0 <nftw@plt+0x40560>
  4437dc:	mov	x20, #0x0                   	// #0
  4437e0:	b	443468 <nftw@plt+0x408e8>
  4437e4:	mov	x0, x19
  4437e8:	bl	4457a0 <nftw@plt+0x42c20>
  4437ec:	str	x0, [sp, #72]
  4437f0:	mov	x20, x0
  4437f4:	cbz	x0, 442f88 <nftw@plt+0x40408>
  4437f8:	ldr	w0, [x0]
  4437fc:	cmp	w0, #0x18
  443800:	b.ne	4430e4 <nftw@plt+0x40564>  // b.any
  443804:	b	442f8c <nftw@plt+0x4040c>
  443808:	mov	x0, x19
  44380c:	bl	445770 <nftw@plt+0x42bf0>
  443810:	mov	x2, x20
  443814:	mov	x3, x0
  443818:	mov	w1, #0x4                   	// #4
  44381c:	mov	x0, x19
  443820:	bl	43cc98 <nftw@plt+0x3a118>
  443824:	str	x0, [sp, #72]
  443828:	b	443274 <nftw@plt+0x406f4>
  44382c:	ldr	w20, [x19, #76]
  443830:	mov	w0, #0x1                   	// #1
  443834:	str	w0, [x19, #76]
  443838:	mov	x0, x19
  44383c:	bl	444c40 <nftw@plt+0x420c0>
  443840:	str	w20, [x19, #76]
  443844:	mov	x20, x0
  443848:	cbz	x0, 442f88 <nftw@plt+0x40408>
  44384c:	ldr	x1, [x19, #24]
  443850:	ldrb	w0, [x1]
  443854:	b	44345c <nftw@plt+0x408dc>
  443858:	ldr	w22, [x19, #56]
  44385c:	mov	x0, x19
  443860:	ldr	w20, [x19, #72]
  443864:	str	x23, [sp, #48]
  443868:	ldr	w23, [x19, #40]
  44386c:	bl	445770 <nftw@plt+0x42bf0>
  443870:	ldr	x1, [x19, #24]
  443874:	ldrb	w1, [x1]
  443878:	cmp	w1, #0x49
  44387c:	b.eq	443a58 <nftw@plt+0x40ed8>  // b.none
  443880:	str	x21, [x19, #24]
  443884:	str	w23, [x19, #40]
  443888:	str	w22, [x19, #56]
  44388c:	str	w20, [x19, #72]
  443890:	ldp	x21, x22, [sp, #32]
  443894:	ldr	x23, [sp, #48]
  443898:	ldr	x20, [sp, #72]
  44389c:	b	4430e0 <nftw@plt+0x40560>
  4438a0:	ldp	w0, w1, [x19, #40]
  4438a4:	cmp	w0, w1
  4438a8:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  4438ac:	mov	w1, #0x18                  	// #24
  4438b0:	add	w5, w0, #0x1
  4438b4:	ldr	x3, [x19, #32]
  4438b8:	smull	x0, w0, w1
  4438bc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  4438c0:	add	x1, x1, #0x6b8
  4438c4:	ldr	w2, [x19, #72]
  4438c8:	add	x1, x1, #0x568
  4438cc:	add	x20, x3, x0
  4438d0:	mov	w4, #0x27                  	// #39
  4438d4:	b	44372c <nftw@plt+0x40bac>
  4438d8:	ldp	w0, w1, [x19, #40]
  4438dc:	cmp	w0, w1
  4438e0:	b.ge	442f88 <nftw@plt+0x40408>  // b.tcont
  4438e4:	mov	w3, #0x18                  	// #24
  4438e8:	add	w1, w0, #0x1
  4438ec:	ldr	x2, [x19, #32]
  4438f0:	smull	x0, w0, w3
  4438f4:	str	w1, [x19, #40]
  4438f8:	mov	w3, #0xe                   	// #14
  4438fc:	add	x20, x2, x0
  443900:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  443904:	add	x1, x1, #0x698
  443908:	str	xzr, [x2, x0]
  44390c:	str	x1, [x20, #8]
  443910:	str	w3, [x20, #16]
  443914:	b	442f8c <nftw@plt+0x4040c>
  443918:	ldp	w0, w1, [x19, #40]
  44391c:	cmp	w0, w1
  443920:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  443924:	mov	w1, #0x18                  	// #24
  443928:	add	w5, w0, #0x1
  44392c:	ldr	x3, [x19, #32]
  443930:	smull	x0, w0, w1
  443934:	ldr	w2, [x19, #72]
  443938:	mov	w4, #0x27                  	// #39
  44393c:	add	x20, x3, x0
  443940:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  443944:	add	x1, x1, #0x6b8
  443948:	add	w2, w2, #0x4
  44394c:	add	x1, x1, #0x528
  443950:	str	wzr, [x20, #4]
  443954:	str	w5, [x19, #40]
  443958:	str	w4, [x3, x0]
  44395c:	str	x1, [x20, #8]
  443960:	str	w2, [x19, #72]
  443964:	b	442f8c <nftw@plt+0x4040c>
  443968:	ldp	w0, w1, [x19, #40]
  44396c:	cmp	w0, w1
  443970:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  443974:	mov	w1, #0x18                  	// #24
  443978:	add	w5, w0, #0x1
  44397c:	ldr	x3, [x19, #32]
  443980:	smull	x0, w0, w1
  443984:	ldr	w2, [x19, #72]
  443988:	mov	w4, #0x27                  	// #39
  44398c:	add	x20, x3, x0
  443990:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  443994:	add	x1, x1, #0x6b8
  443998:	add	w2, w2, #0x11
  44399c:	add	x1, x1, #0x5a8
  4439a0:	str	wzr, [x20, #4]
  4439a4:	str	w5, [x19, #40]
  4439a8:	str	w4, [x3, x0]
  4439ac:	str	x1, [x20, #8]
  4439b0:	str	w2, [x19, #72]
  4439b4:	b	442f8c <nftw@plt+0x4040c>
  4439b8:	ldp	w0, w1, [x19, #40]
  4439bc:	cmp	w0, w1
  4439c0:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  4439c4:	mov	w1, #0x18                  	// #24
  4439c8:	add	w5, w0, #0x1
  4439cc:	ldr	x3, [x19, #32]
  4439d0:	smull	x0, w0, w1
  4439d4:	ldr	w2, [x19, #72]
  4439d8:	mov	w4, #0x27                  	// #39
  4439dc:	add	x20, x3, x0
  4439e0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  4439e4:	add	x1, x1, #0x6b8
  4439e8:	add	w2, w2, #0xa
  4439ec:	add	x1, x1, #0x508
  4439f0:	str	wzr, [x20, #4]
  4439f4:	str	w5, [x19, #40]
  4439f8:	str	w4, [x3, x0]
  4439fc:	str	x1, [x20, #8]
  443a00:	str	w2, [x19, #72]
  443a04:	b	442f8c <nftw@plt+0x4040c>
  443a08:	ldp	w0, w1, [x19, #40]
  443a0c:	cmp	w0, w1
  443a10:	b.ge	443af0 <nftw@plt+0x40f70>  // b.tcont
  443a14:	mov	w1, #0x18                  	// #24
  443a18:	add	w5, w0, #0x1
  443a1c:	ldr	x3, [x19, #32]
  443a20:	smull	x0, w0, w1
  443a24:	ldr	w2, [x19, #72]
  443a28:	mov	w4, #0x27                  	// #39
  443a2c:	add	x20, x3, x0
  443a30:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  443a34:	add	x1, x1, #0x6b8
  443a38:	add	w2, w2, #0x7
  443a3c:	add	x1, x1, #0x548
  443a40:	str	wzr, [x20, #4]
  443a44:	str	w5, [x19, #40]
  443a48:	str	w4, [x3, x0]
  443a4c:	str	x1, [x20, #8]
  443a50:	str	w2, [x19, #72]
  443a54:	b	442f8c <nftw@plt+0x4040c>
  443a58:	ldr	x2, [sp, #72]
  443a5c:	cbz	x2, 443ad0 <nftw@plt+0x40f50>
  443a60:	ldp	w4, w1, [x19, #56]
  443a64:	cmp	w4, w1
  443a68:	b.ge	443ad0 <nftw@plt+0x40f50>  // b.tcont
  443a6c:	ldr	x6, [x19, #48]
  443a70:	add	w5, w4, #0x1
  443a74:	mov	x3, x0
  443a78:	mov	w1, #0x4                   	// #4
  443a7c:	mov	x0, x19
  443a80:	str	x2, [x6, w4, sxtw #3]
  443a84:	str	w5, [x19, #56]
  443a88:	bl	43cc98 <nftw@plt+0x3a118>
  443a8c:	mov	x20, x0
  443a90:	str	x0, [sp, #72]
  443a94:	ldp	x21, x22, [sp, #32]
  443a98:	ldr	x23, [sp, #48]
  443a9c:	b	4430e0 <nftw@plt+0x40560>
  443aa0:	add	x4, x4, #0x3
  443aa4:	stp	x21, x22, [sp, #32]
  443aa8:	mov	w1, #0x1                   	// #1
  443aac:	ldr	w21, [x19, #76]
  443ab0:	mov	x0, x19
  443ab4:	str	x4, [x19, #24]
  443ab8:	str	w1, [x19, #76]
  443abc:	bl	444c40 <nftw@plt+0x420c0>
  443ac0:	mov	x20, x0
  443ac4:	str	w21, [x19, #76]
  443ac8:	ldp	x21, x22, [sp, #32]
  443acc:	b	443560 <nftw@plt+0x409e0>
  443ad0:	ldp	x21, x22, [sp, #32]
  443ad4:	ldr	x23, [sp, #48]
  443ad8:	b	442f88 <nftw@plt+0x40408>
  443adc:	mov	x0, #0x0                   	// #0
  443ae0:	stp	x21, x22, [sp, #32]
  443ae4:	str	x23, [sp, #48]
  443ae8:	str	wzr, [x0]
  443aec:	brk	#0x3e8
  443af0:	mov	x0, #0x0                   	// #0
  443af4:	str	xzr, [sp, #72]
  443af8:	stp	x21, x22, [sp, #32]
  443afc:	str	x23, [sp, #48]
  443b00:	ldr	x0, [x0, #8]
  443b04:	brk	#0x3e8
  443b08:	stp	x29, x30, [sp, #-64]!
  443b0c:	mov	x29, sp
  443b10:	stp	x19, x20, [sp, #16]
  443b14:	mov	x19, x0
  443b18:	mov	w0, #0x2e                  	// #46
  443b1c:	str	xzr, [sp, #56]
  443b20:	ldr	x2, [x19, #24]
  443b24:	ldrb	w1, [x2]
  443b28:	cmp	w1, #0x45
  443b2c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  443b30:	ccmp	w1, w0, #0x4, ne  // ne = any
  443b34:	b.eq	443bc8 <nftw@plt+0x41048>  // b.none
  443b38:	add	x20, sp, #0x38
  443b3c:	stp	x21, x22, [sp, #32]
  443b40:	mov	w22, w0
  443b44:	mov	w21, #0x4f                  	// #79
  443b48:	cmp	w1, #0x52
  443b4c:	mov	x0, x19
  443b50:	ccmp	w1, w21, #0x4, ne  // ne = any
  443b54:	b.ne	443b64 <nftw@plt+0x40fe4>  // b.any
  443b58:	ldrb	w1, [x2, #1]
  443b5c:	cmp	w1, #0x45
  443b60:	b.eq	443ba4 <nftw@plt+0x41024>  // b.none
  443b64:	bl	442f58 <nftw@plt+0x403d8>
  443b68:	mov	x2, x0
  443b6c:	mov	x3, #0x0                   	// #0
  443b70:	mov	x0, x19
  443b74:	mov	w1, #0x2e                  	// #46
  443b78:	cbz	x2, 443bc4 <nftw@plt+0x41044>
  443b7c:	bl	43cc98 <nftw@plt+0x3a118>
  443b80:	str	x0, [x20]
  443b84:	add	x20, x0, #0x10
  443b88:	cbz	x0, 443bc4 <nftw@plt+0x41044>
  443b8c:	ldr	x2, [x19, #24]
  443b90:	ldrb	w1, [x2]
  443b94:	cmp	w1, #0x45
  443b98:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  443b9c:	ccmp	w1, w22, #0x4, ne  // ne = any
  443ba0:	b.ne	443b48 <nftw@plt+0x40fc8>  // b.any
  443ba4:	ldr	x0, [sp, #56]
  443ba8:	cbz	x0, 443bc4 <nftw@plt+0x41044>
  443bac:	ldr	x1, [x0, #16]
  443bb0:	cbz	x1, 443bd8 <nftw@plt+0x41058>
  443bb4:	ldp	x21, x22, [sp, #32]
  443bb8:	ldp	x19, x20, [sp, #16]
  443bbc:	ldp	x29, x30, [sp], #64
  443bc0:	ret
  443bc4:	ldp	x21, x22, [sp, #32]
  443bc8:	mov	x0, #0x0                   	// #0
  443bcc:	ldp	x19, x20, [sp, #16]
  443bd0:	ldp	x29, x30, [sp], #64
  443bd4:	ret
  443bd8:	ldr	x1, [x0, #8]
  443bdc:	ldr	w2, [x1]
  443be0:	cmp	w2, #0x27
  443be4:	b.ne	443bb4 <nftw@plt+0x41034>  // b.any
  443be8:	ldr	x1, [x1, #8]
  443bec:	ldr	w2, [x1, #28]
  443bf0:	cmp	w2, #0x9
  443bf4:	b.ne	443bb4 <nftw@plt+0x41034>  // b.any
  443bf8:	ldr	w2, [x1, #8]
  443bfc:	ldr	w1, [x19, #72]
  443c00:	ldp	x21, x22, [sp, #32]
  443c04:	sub	w1, w1, w2
  443c08:	str	w1, [x19, #72]
  443c0c:	str	xzr, [x0, #8]
  443c10:	b	443bb8 <nftw@plt+0x41038>
  443c14:	nop
  443c18:	stp	x29, x30, [sp, #-32]!
  443c1c:	mov	x29, sp
  443c20:	ldr	x1, [x0, #24]
  443c24:	stp	x19, x20, [sp, #16]
  443c28:	mov	x19, x0
  443c2c:	ldrb	w10, [x1]
  443c30:	cbz	w10, 443cf4 <nftw@plt+0x41174>
  443c34:	add	x2, x1, #0x1
  443c38:	str	x2, [x0, #24]
  443c3c:	ldrb	w10, [x1, #1]
  443c40:	ldrb	w8, [x1]
  443c44:	cbnz	w10, 443cfc <nftw@plt+0x4117c>
  443c48:	adrp	x5, 468000 <_obstack_memory_used@@Base+0x1e5a0>
  443c4c:	add	x5, x5, #0x6b8
  443c50:	add	x5, x5, #0x5c8
  443c54:	mov	w4, #0x43                  	// #67
  443c58:	mov	w2, #0x0                   	// #0
  443c5c:	mov	w7, #0x18                  	// #24
  443c60:	sub	w1, w4, w2
  443c64:	add	w1, w1, w1, lsr #31
  443c68:	add	w1, w2, w1, asr #1
  443c6c:	smull	x3, w1, w7
  443c70:	add	x9, x5, x3
  443c74:	ldr	x3, [x5, x3]
  443c78:	ldrb	w6, [x3]
  443c7c:	cmp	w6, w8
  443c80:	b.eq	443ca4 <nftw@plt+0x41124>  // b.none
  443c84:	b.ls	443cec <nftw@plt+0x4116c>  // b.plast
  443c88:	mov	w4, w1
  443c8c:	cmp	w2, w4
  443c90:	b.ne	443c60 <nftw@plt+0x410e0>  // b.any
  443c94:	mov	x0, #0x0                   	// #0
  443c98:	ldp	x19, x20, [sp, #16]
  443c9c:	ldp	x29, x30, [sp], #32
  443ca0:	ret
  443ca4:	ldrb	w3, [x3, #1]
  443ca8:	cmp	w3, w10
  443cac:	b.ne	443c84 <nftw@plt+0x41104>  // b.any
  443cb0:	ldp	w0, w1, [x19, #40]
  443cb4:	cmp	w0, w1
  443cb8:	b.ge	443c94 <nftw@plt+0x41114>  // b.tcont
  443cbc:	ldr	x2, [x19, #32]
  443cc0:	smull	x7, w0, w7
  443cc4:	add	w1, w0, #0x1
  443cc8:	mov	w3, #0x32                  	// #50
  443ccc:	add	x0, x2, x7
  443cd0:	str	wzr, [x0, #4]
  443cd4:	str	w1, [x19, #40]
  443cd8:	str	w3, [x2, x7]
  443cdc:	str	x9, [x0, #8]
  443ce0:	ldp	x19, x20, [sp, #16]
  443ce4:	ldp	x29, x30, [sp], #32
  443ce8:	ret
  443cec:	add	w2, w1, #0x1
  443cf0:	b	443c8c <nftw@plt+0x4110c>
  443cf4:	mov	w8, #0x0                   	// #0
  443cf8:	b	443c48 <nftw@plt+0x410c8>
  443cfc:	add	x2, x1, #0x2
  443d00:	str	x2, [x0, #24]
  443d04:	cmp	w8, #0x76
  443d08:	ldrb	w10, [x1, #1]
  443d0c:	b.ne	443d68 <nftw@plt+0x411e8>  // b.any
  443d10:	sub	w11, w10, #0x30
  443d14:	and	w1, w11, #0xff
  443d18:	cmp	w1, #0x9
  443d1c:	b.hi	443c48 <nftw@plt+0x410c8>  // b.pmore
  443d20:	bl	43d148 <nftw@plt+0x3a5c8>
  443d24:	mov	x2, x0
  443d28:	ldp	w1, w0, [x19, #40]
  443d2c:	cmp	w1, w0
  443d30:	b.ge	443c94 <nftw@plt+0x41114>  // b.tcont
  443d34:	mov	w0, #0x18                  	// #24
  443d38:	add	w4, w1, #0x1
  443d3c:	ldr	x3, [x19, #32]
  443d40:	smull	x1, w1, w0
  443d44:	add	x0, x3, x1
  443d48:	str	wzr, [x0, #4]
  443d4c:	str	w4, [x19, #40]
  443d50:	cbz	x2, 443c94 <nftw@plt+0x41114>
  443d54:	mov	x4, #0x33                  	// #51
  443d58:	str	x4, [x3, x1]
  443d5c:	str	w11, [x0, #8]
  443d60:	str	x2, [x0, #16]
  443d64:	b	443c98 <nftw@plt+0x41118>
  443d68:	cmp	w10, #0x76
  443d6c:	mov	w1, #0x63                  	// #99
  443d70:	ccmp	w8, w1, #0x0, eq  // eq = none
  443d74:	b.ne	443c48 <nftw@plt+0x410c8>  // b.any
  443d78:	ldp	w1, w20, [x0, #76]
  443d7c:	cmp	w1, #0x0
  443d80:	cset	w1, eq  // eq = none
  443d84:	str	w1, [x0, #80]
  443d88:	bl	442f58 <nftw@plt+0x403d8>
  443d8c:	mov	x2, x0
  443d90:	ldr	w1, [x19, #80]
  443d94:	mov	x3, #0x0                   	// #0
  443d98:	cbz	w1, 443db8 <nftw@plt+0x41238>
  443d9c:	mov	x0, x19
  443da0:	mov	w1, #0x35                  	// #53
  443da4:	bl	43cc98 <nftw@plt+0x3a118>
  443da8:	str	w20, [x19, #80]
  443dac:	ldp	x19, x20, [sp, #16]
  443db0:	ldp	x29, x30, [sp], #32
  443db4:	ret
  443db8:	mov	x0, x19
  443dbc:	mov	w1, #0x34                  	// #52
  443dc0:	bl	43cc98 <nftw@plt+0x3a118>
  443dc4:	str	w20, [x19, #80]
  443dc8:	b	443dac <nftw@plt+0x4122c>
  443dcc:	nop
  443dd0:	stp	x29, x30, [sp, #-48]!
  443dd4:	mov	x29, sp
  443dd8:	ldr	x3, [x0, #24]
  443ddc:	stp	x19, x20, [sp, #16]
  443de0:	mov	x19, x0
  443de4:	ldrb	w2, [x3]
  443de8:	sub	w1, w2, #0x30
  443dec:	and	w1, w1, #0xff
  443df0:	cmp	w1, #0x9
  443df4:	b.ls	443f04 <nftw@plt+0x41384>  // b.plast
  443df8:	sub	w1, w2, #0x61
  443dfc:	and	w1, w1, #0xff
  443e00:	cmp	w1, #0x19
  443e04:	b.hi	443e4c <nftw@plt+0x412cc>  // b.pmore
  443e08:	cmp	w2, #0x6f
  443e0c:	b.eq	443fcc <nftw@plt+0x4144c>  // b.none
  443e10:	mov	x0, x19
  443e14:	bl	443c18 <nftw@plt+0x41098>
  443e18:	mov	x20, x0
  443e1c:	cbz	x0, 443e2c <nftw@plt+0x412ac>
  443e20:	ldr	w0, [x0]
  443e24:	cmp	w0, #0x32
  443e28:	b.eq	443f30 <nftw@plt+0x413b0>  // b.none
  443e2c:	ldr	x0, [x19, #24]
  443e30:	ldrb	w1, [x0]
  443e34:	cmp	w1, #0x42
  443e38:	b.eq	443f1c <nftw@plt+0x4139c>  // b.none
  443e3c:	mov	x0, x20
  443e40:	ldp	x19, x20, [sp, #16]
  443e44:	ldp	x29, x30, [sp], #48
  443e48:	ret
  443e4c:	sub	w1, w2, #0x43
  443e50:	and	w1, w1, #0xff
  443e54:	cmp	w1, #0x1
  443e58:	b.ls	443fe4 <nftw@plt+0x41464>  // b.plast
  443e5c:	cmp	w2, #0x4c
  443e60:	b.eq	443f98 <nftw@plt+0x41418>  // b.none
  443e64:	cmp	w2, #0x55
  443e68:	b.ne	443fb8 <nftw@plt+0x41438>  // b.any
  443e6c:	ldrb	w1, [x3, #1]
  443e70:	cmp	w1, #0x6c
  443e74:	b.eq	4440a8 <nftw@plt+0x41528>  // b.none
  443e78:	cmp	w1, #0x74
  443e7c:	b.ne	443fb8 <nftw@plt+0x41438>  // b.any
  443e80:	add	x1, x3, #0x1
  443e84:	str	x1, [x0, #24]
  443e88:	mov	x20, #0x0                   	// #0
  443e8c:	ldrb	w1, [x3, #1]
  443e90:	cmp	w1, #0x74
  443e94:	b.ne	443e34 <nftw@plt+0x412b4>  // b.any
  443e98:	add	x3, x3, #0x2
  443e9c:	str	x3, [x0, #24]
  443ea0:	bl	43d050 <nftw@plt+0x3a4d0>
  443ea4:	tbnz	w0, #31, 443e2c <nftw@plt+0x412ac>
  443ea8:	ldp	w1, w2, [x19, #40]
  443eac:	cmp	w1, w2
  443eb0:	b.ge	444270 <nftw@plt+0x416f0>  // b.tcont
  443eb4:	ldp	x7, x3, [x19, #24]
  443eb8:	mov	w2, #0x18                  	// #24
  443ebc:	add	w6, w1, #0x1
  443ec0:	mov	w4, #0x48                  	// #72
  443ec4:	smull	x1, w1, w2
  443ec8:	sxtw	x0, w0
  443ecc:	ldp	w2, w5, [x19, #56]
  443ed0:	add	x20, x3, x1
  443ed4:	cmp	w2, w5
  443ed8:	str	wzr, [x20, #4]
  443edc:	str	w6, [x19, #40]
  443ee0:	str	w4, [x3, x1]
  443ee4:	str	x0, [x20, #8]
  443ee8:	b.ge	444264 <nftw@plt+0x416e4>  // b.tcont
  443eec:	ldr	x1, [x19, #48]
  443ef0:	add	w0, w2, #0x1
  443ef4:	str	x20, [x1, w2, sxtw #3]
  443ef8:	str	w0, [x19, #56]
  443efc:	ldrb	w1, [x7]
  443f00:	b	443e34 <nftw@plt+0x412b4>
  443f04:	bl	43d148 <nftw@plt+0x3a5c8>
  443f08:	mov	x20, x0
  443f0c:	ldr	x3, [x19, #24]
  443f10:	ldrb	w1, [x3]
  443f14:	cmp	w1, #0x42
  443f18:	b.ne	443e3c <nftw@plt+0x412bc>  // b.any
  443f1c:	mov	x1, x20
  443f20:	mov	x0, x19
  443f24:	ldp	x19, x20, [sp, #16]
  443f28:	ldp	x29, x30, [sp], #48
  443f2c:	b	43d2c8 <nftw@plt+0x3a748>
  443f30:	ldr	x1, [x20, #8]
  443f34:	ldr	w0, [x19, #72]
  443f38:	ldr	x2, [x1]
  443f3c:	add	w0, w0, #0x7
  443f40:	ldr	w1, [x1, #16]
  443f44:	add	w0, w0, w1
  443f48:	str	w0, [x19, #72]
  443f4c:	ldrb	w0, [x2]
  443f50:	cmp	w0, #0x6c
  443f54:	b.ne	443e2c <nftw@plt+0x412ac>  // b.any
  443f58:	ldrb	w0, [x2, #1]
  443f5c:	cmp	w0, #0x69
  443f60:	b.ne	443e2c <nftw@plt+0x412ac>  // b.any
  443f64:	ldrb	w0, [x2, #2]
  443f68:	cbnz	w0, 443e2c <nftw@plt+0x412ac>
  443f6c:	mov	x0, x19
  443f70:	bl	43d148 <nftw@plt+0x3a5c8>
  443f74:	mov	x2, x20
  443f78:	mov	x3, x0
  443f7c:	mov	w1, #0x37                  	// #55
  443f80:	mov	x0, x19
  443f84:	bl	43cc98 <nftw@plt+0x3a118>
  443f88:	mov	x20, x0
  443f8c:	ldr	x3, [x19, #24]
  443f90:	ldrb	w1, [x3]
  443f94:	b	443e34 <nftw@plt+0x412b4>
  443f98:	add	x3, x3, #0x1
  443f9c:	str	x3, [x0, #24]
  443fa0:	bl	43d148 <nftw@plt+0x3a5c8>
  443fa4:	mov	x20, x0
  443fa8:	cbz	x0, 443fb8 <nftw@plt+0x41438>
  443fac:	mov	x0, x19
  443fb0:	bl	43d6b0 <nftw@plt+0x3ab30>
  443fb4:	cbnz	w0, 443e2c <nftw@plt+0x412ac>
  443fb8:	mov	x20, #0x0                   	// #0
  443fbc:	mov	x0, x20
  443fc0:	ldp	x19, x20, [sp, #16]
  443fc4:	ldp	x29, x30, [sp], #48
  443fc8:	ret
  443fcc:	ldrb	w0, [x3, #1]
  443fd0:	cmp	w0, #0x6e
  443fd4:	b.ne	443e10 <nftw@plt+0x41290>  // b.any
  443fd8:	add	x3, x3, #0x2
  443fdc:	str	x3, [x19, #24]
  443fe0:	b	443e10 <nftw@plt+0x41290>
  443fe4:	ldr	x0, [x0, #64]
  443fe8:	cbz	x0, 443ffc <nftw@plt+0x4147c>
  443fec:	ldr	w1, [x0]
  443ff0:	cbz	w1, 444078 <nftw@plt+0x414f8>
  443ff4:	cmp	w1, #0x18
  443ff8:	b.eq	444078 <nftw@plt+0x414f8>  // b.none
  443ffc:	cmp	w2, #0x43
  444000:	b.eq	444158 <nftw@plt+0x415d8>  // b.none
  444004:	ldrb	w1, [x3, #1]
  444008:	cmp	w1, #0x32
  44400c:	b.eq	44425c <nftw@plt+0x416dc>  // b.none
  444010:	b.hi	4441cc <nftw@plt+0x4164c>  // b.pmore
  444014:	cmp	w1, #0x30
  444018:	b.eq	4441f8 <nftw@plt+0x41678>  // b.none
  44401c:	cmp	w1, #0x31
  444020:	mov	w4, #0x2                   	// #2
  444024:	b.ne	4441e0 <nftw@plt+0x41660>  // b.any
  444028:	add	x1, x3, #0x2
  44402c:	ldr	w2, [x19, #44]
  444030:	str	x1, [x19, #24]
  444034:	ldr	w1, [x19, #40]
  444038:	cmp	w1, w2
  44403c:	b.ge	4441ec <nftw@plt+0x4166c>  // b.tcont
  444040:	mov	w6, #0x18                  	// #24
  444044:	add	w5, w1, #0x1
  444048:	ldr	x2, [x19, #32]
  44404c:	smull	x1, w1, w6
  444050:	add	x20, x2, x1
  444054:	str	wzr, [x20, #4]
  444058:	str	w5, [x19, #40]
  44405c:	cbz	x0, 4441ec <nftw@plt+0x4166c>
  444060:	mov	x5, #0x8                   	// #8
  444064:	str	x5, [x2, x1]
  444068:	str	w4, [x20, #8]
  44406c:	str	x0, [x20, #16]
  444070:	ldrb	w1, [x3, #2]
  444074:	b	443e34 <nftw@plt+0x412b4>
  444078:	ldr	w2, [x0, #16]
  44407c:	ldr	w1, [x19, #72]
  444080:	add	w1, w1, w2
  444084:	str	w1, [x19, #72]
  444088:	ldrb	w1, [x3]
  44408c:	cmp	w1, #0x43
  444090:	mov	w2, w1
  444094:	b.eq	444158 <nftw@plt+0x415d8>  // b.none
  444098:	cmp	w1, #0x44
  44409c:	b.eq	444004 <nftw@plt+0x41484>  // b.none
  4440a0:	mov	x20, #0x0                   	// #0
  4440a4:	b	443e34 <nftw@plt+0x412b4>
  4440a8:	add	x1, x3, #0x1
  4440ac:	str	x1, [x0, #24]
  4440b0:	mov	x20, #0x0                   	// #0
  4440b4:	ldrb	w1, [x3, #1]
  4440b8:	cmp	w1, #0x6c
  4440bc:	b.ne	443e34 <nftw@plt+0x412b4>  // b.any
  4440c0:	add	x3, x3, #0x2
  4440c4:	str	x3, [x0, #24]
  4440c8:	bl	443b08 <nftw@plt+0x40f88>
  4440cc:	mov	x11, x0
  4440d0:	ldr	x0, [x19, #24]
  4440d4:	ldrb	w1, [x0]
  4440d8:	cbz	x11, 443e34 <nftw@plt+0x412b4>
  4440dc:	cmp	w1, #0x45
  4440e0:	b.ne	443e34 <nftw@plt+0x412b4>  // b.any
  4440e4:	add	x0, x0, #0x1
  4440e8:	str	x0, [x19, #24]
  4440ec:	mov	x0, x19
  4440f0:	bl	43d050 <nftw@plt+0x3a4d0>
  4440f4:	tbnz	w0, #31, 444270 <nftw@plt+0x416f0>
  4440f8:	ldp	w1, w2, [x19, #40]
  4440fc:	ldr	x4, [x19, #24]
  444100:	cmp	w1, w2
  444104:	b.ge	444280 <nftw@plt+0x41700>  // b.tcont
  444108:	mov	w2, #0x18                  	// #24
  44410c:	add	w6, w1, #0x1
  444110:	ldr	x3, [x19, #32]
  444114:	smull	x1, w1, w2
  444118:	ldp	w2, w7, [x19, #56]
  44411c:	add	x20, x3, x1
  444120:	mov	w5, #0x46                  	// #70
  444124:	cmp	w2, w7
  444128:	str	wzr, [x20, #4]
  44412c:	str	w6, [x19, #40]
  444130:	str	w5, [x3, x1]
  444134:	str	x11, [x20, #8]
  444138:	str	w0, [x20, #16]
  44413c:	b.ge	444280 <nftw@plt+0x41700>  // b.tcont
  444140:	ldr	x1, [x19, #48]
  444144:	add	w0, w2, #0x1
  444148:	str	x20, [x1, w2, sxtw #3]
  44414c:	str	w0, [x19, #56]
  444150:	ldrb	w1, [x4]
  444154:	b	443e34 <nftw@plt+0x412b4>
  444158:	str	x21, [sp, #32]
  44415c:	ldrb	w1, [x3, #1]
  444160:	cmp	w1, #0x49
  444164:	b.eq	444208 <nftw@plt+0x41688>  // b.none
  444168:	sub	w2, w1, #0x31
  44416c:	and	w2, w2, #0xff
  444170:	cmp	w2, #0x4
  444174:	b.hi	444250 <nftw@plt+0x416d0>  // b.pmore
  444178:	sub	w21, w1, #0x30
  44417c:	add	x3, x3, #0x2
  444180:	str	x3, [x19, #24]
  444184:	ldp	w1, w2, [x19, #40]
  444188:	cmp	w1, w2
  44418c:	b.ge	44428c <nftw@plt+0x4170c>  // b.tcont
  444190:	mov	w4, #0x18                  	// #24
  444194:	add	w3, w1, #0x1
  444198:	smull	x1, w1, w4
  44419c:	ldp	x4, x2, [x19, #24]
  4441a0:	add	x20, x2, x1
  4441a4:	str	wzr, [x20, #4]
  4441a8:	str	w3, [x19, #40]
  4441ac:	cbz	x0, 444240 <nftw@plt+0x416c0>
  4441b0:	mov	x3, #0x7                   	// #7
  4441b4:	str	x3, [x2, x1]
  4441b8:	str	w21, [x20, #8]
  4441bc:	str	x0, [x20, #16]
  4441c0:	ldr	x21, [sp, #32]
  4441c4:	ldrb	w1, [x4]
  4441c8:	b	443e34 <nftw@plt+0x412b4>
  4441cc:	cmp	w1, #0x34
  4441d0:	b.eq	444200 <nftw@plt+0x41680>  // b.none
  4441d4:	cmp	w1, #0x35
  4441d8:	mov	w4, #0x5                   	// #5
  4441dc:	b.eq	444028 <nftw@plt+0x414a8>  // b.none
  4441e0:	mov	w1, w2
  4441e4:	mov	x20, #0x0                   	// #0
  4441e8:	b	443e34 <nftw@plt+0x412b4>
  4441ec:	ldrb	w1, [x3, #2]
  4441f0:	mov	x20, #0x0                   	// #0
  4441f4:	b	443e34 <nftw@plt+0x412b4>
  4441f8:	mov	w4, #0x1                   	// #1
  4441fc:	b	444028 <nftw@plt+0x414a8>
  444200:	mov	w4, #0x4                   	// #4
  444204:	b	444028 <nftw@plt+0x414a8>
  444208:	add	x0, x3, #0x1
  44420c:	str	x0, [x19, #24]
  444210:	ldrb	w1, [x3, #2]
  444214:	sub	w0, w1, #0x31
  444218:	and	w0, w0, #0xff
  44421c:	cmp	w0, #0x4
  444220:	b.hi	4442a0 <nftw@plt+0x41720>  // b.pmore
  444224:	add	x3, x3, #0x3
  444228:	str	x3, [x19, #24]
  44422c:	sub	w21, w1, #0x30
  444230:	mov	x0, x19
  444234:	bl	442f58 <nftw@plt+0x403d8>
  444238:	ldr	x0, [x19, #64]
  44423c:	b	444184 <nftw@plt+0x41604>
  444240:	ldrb	w1, [x4]
  444244:	mov	x20, #0x0                   	// #0
  444248:	ldr	x21, [sp, #32]
  44424c:	b	443e34 <nftw@plt+0x412b4>
  444250:	mov	x20, #0x0                   	// #0
  444254:	ldr	x21, [sp, #32]
  444258:	b	443fbc <nftw@plt+0x4143c>
  44425c:	mov	w4, #0x3                   	// #3
  444260:	b	444028 <nftw@plt+0x414a8>
  444264:	ldrb	w1, [x7]
  444268:	mov	x20, #0x0                   	// #0
  44426c:	b	443e34 <nftw@plt+0x412b4>
  444270:	ldr	x0, [x19, #24]
  444274:	mov	x20, #0x0                   	// #0
  444278:	ldrb	w1, [x0]
  44427c:	b	443e34 <nftw@plt+0x412b4>
  444280:	ldrb	w1, [x4]
  444284:	mov	x20, #0x0                   	// #0
  444288:	b	443e34 <nftw@plt+0x412b4>
  44428c:	ldr	x0, [x19, #24]
  444290:	mov	x20, #0x0                   	// #0
  444294:	ldr	x21, [sp, #32]
  444298:	ldrb	w1, [x0]
  44429c:	b	443e34 <nftw@plt+0x412b4>
  4442a0:	ldrb	w1, [x3, #1]
  4442a4:	mov	x20, #0x0                   	// #0
  4442a8:	ldr	x21, [sp, #32]
  4442ac:	b	443e34 <nftw@plt+0x412b4>
  4442b0:	stp	x29, x30, [sp, #-32]!
  4442b4:	mov	x29, sp
  4442b8:	stp	x19, x20, [sp, #16]
  4442bc:	mov	x19, x0
  4442c0:	ldr	x0, [x0, #24]
  4442c4:	ldrb	w2, [x0]
  4442c8:	cmp	w2, #0x4a
  4442cc:	b.eq	444330 <nftw@plt+0x417b0>  // b.none
  4442d0:	cbz	w1, 44430c <nftw@plt+0x4178c>
  4442d4:	mov	x0, x19
  4442d8:	bl	442f58 <nftw@plt+0x403d8>
  4442dc:	mov	x20, x0
  4442e0:	cbz	x0, 444320 <nftw@plt+0x417a0>
  4442e4:	mov	x0, x19
  4442e8:	bl	443b08 <nftw@plt+0x40f88>
  4442ec:	mov	x3, x0
  4442f0:	cbz	x0, 444320 <nftw@plt+0x417a0>
  4442f4:	mov	x2, x20
  4442f8:	mov	x0, x19
  4442fc:	ldp	x19, x20, [sp, #16]
  444300:	mov	w1, #0x29                  	// #41
  444304:	ldp	x29, x30, [sp], #32
  444308:	b	43cc98 <nftw@plt+0x3a118>
  44430c:	mov	x0, x19
  444310:	mov	x20, #0x0                   	// #0
  444314:	bl	443b08 <nftw@plt+0x40f88>
  444318:	mov	x3, x0
  44431c:	cbnz	x0, 4442f4 <nftw@plt+0x41774>
  444320:	mov	x0, #0x0                   	// #0
  444324:	ldp	x19, x20, [sp, #16]
  444328:	ldp	x29, x30, [sp], #32
  44432c:	ret
  444330:	add	x0, x0, #0x1
  444334:	str	x0, [x19, #24]
  444338:	b	4442d4 <nftw@plt+0x41754>
  44433c:	nop
  444340:	stp	x29, x30, [sp, #-32]!
  444344:	mov	x29, sp
  444348:	str	x19, [sp, #16]
  44434c:	mov	x19, x0
  444350:	ldr	w0, [x0, #16]
  444354:	tbnz	w0, #18, 444390 <nftw@plt+0x41810>
  444358:	ldr	w1, [x19, #84]
  44435c:	cmp	w1, #0x800
  444360:	b.hi	4443a0 <nftw@plt+0x41820>  // b.pmore
  444364:	ldr	x2, [x19, #24]
  444368:	add	w0, w1, #0x1
  44436c:	str	w0, [x19, #84]
  444370:	mov	x0, #0x0                   	// #0
  444374:	ldrb	w3, [x2]
  444378:	cmp	w3, #0x46
  44437c:	b.eq	4443b0 <nftw@plt+0x41830>  // b.none
  444380:	str	w1, [x19, #84]
  444384:	ldr	x19, [sp, #16]
  444388:	ldp	x29, x30, [sp], #32
  44438c:	ret
  444390:	ldr	x2, [x19, #24]
  444394:	ldrb	w0, [x2]
  444398:	cmp	w0, #0x46
  44439c:	b.eq	4443b0 <nftw@plt+0x41830>  // b.none
  4443a0:	mov	x0, #0x0                   	// #0
  4443a4:	ldr	x19, [sp, #16]
  4443a8:	ldp	x29, x30, [sp], #32
  4443ac:	ret
  4443b0:	add	x4, x2, #0x1
  4443b4:	str	x4, [x19, #24]
  4443b8:	add	x3, x2, #0x2
  4443bc:	mov	w1, #0x1                   	// #1
  4443c0:	ldrb	w2, [x2, #1]
  4443c4:	mov	x0, x19
  4443c8:	cmp	w2, #0x59
  4443cc:	csel	x2, x3, x4, eq  // eq = none
  4443d0:	str	x2, [x19, #24]
  4443d4:	bl	4442b0 <nftw@plt+0x41730>
  4443d8:	mov	x1, x0
  4443dc:	mov	x0, x19
  4443e0:	bl	43cd20 <nftw@plt+0x3a1a0>
  4443e4:	ldr	x1, [x19, #24]
  4443e8:	ldrb	w2, [x1]
  4443ec:	cmp	w2, #0x45
  4443f0:	b.eq	444410 <nftw@plt+0x41890>  // b.none
  4443f4:	mov	x0, #0x0                   	// #0
  4443f8:	ldr	w1, [x19, #16]
  4443fc:	tbnz	w1, #18, 4443a4 <nftw@plt+0x41824>
  444400:	ldr	w1, [x19, #84]
  444404:	sub	w1, w1, #0x1
  444408:	str	w1, [x19, #84]
  44440c:	b	444384 <nftw@plt+0x41804>
  444410:	add	x1, x1, #0x1
  444414:	str	x1, [x19, #24]
  444418:	b	4443f8 <nftw@plt+0x41878>
  44441c:	nop
  444420:	stp	x29, x30, [sp, #-112]!
  444424:	mov	x29, sp
  444428:	ldr	x2, [x0, #24]
  44442c:	stp	x19, x20, [sp, #16]
  444430:	mov	x19, x0
  444434:	str	xzr, [sp, #104]
  444438:	ldrb	w3, [x2]
  44443c:	cmp	w3, w1, uxtb
  444440:	b.eq	444b40 <nftw@plt+0x41fc0>  // b.none
  444444:	stp	x21, x22, [sp, #32]
  444448:	add	x21, sp, #0x68
  44444c:	mov	w22, #0x1                   	// #1
  444450:	stp	x23, x24, [sp, #48]
  444454:	and	w23, w1, #0xff
  444458:	mov	w24, #0x6d                  	// #109
  44445c:	stp	x25, x26, [sp, #64]
  444460:	ldr	w25, [x19, #76]
  444464:	str	w22, [x19, #76]
  444468:	ldrb	w0, [x2]
  44446c:	cmp	w0, #0x4c
  444470:	b.eq	444640 <nftw@plt+0x41ac0>  // b.none
  444474:	cmp	w0, #0x54
  444478:	b.eq	4446d0 <nftw@plt+0x41b50>  // b.none
  44447c:	cmp	w0, #0x73
  444480:	b.eq	444600 <nftw@plt+0x41a80>  // b.none
  444484:	cmp	w0, #0x66
  444488:	b.ne	444524 <nftw@plt+0x419a4>  // b.any
  44448c:	ldrb	w0, [x2, #1]
  444490:	cmp	w0, #0x70
  444494:	b.eq	4446e0 <nftw@plt+0x41b60>  // b.none
  444498:	mov	x0, x19
  44449c:	bl	443c18 <nftw@plt+0x41098>
  4444a0:	mov	x20, x0
  4444a4:	cbz	x0, 444504 <nftw@plt+0x41984>
  4444a8:	ldr	w0, [x0]
  4444ac:	cmp	w0, #0x32
  4444b0:	b.eq	444748 <nftw@plt+0x41bc8>  // b.none
  4444b4:	cmp	w0, #0x34
  4444b8:	b.eq	444b60 <nftw@plt+0x41fe0>  // b.none
  4444bc:	b.hi	444500 <nftw@plt+0x41980>  // b.pmore
  4444c0:	cmp	w0, #0x33
  4444c4:	b.ne	444500 <nftw@plt+0x41980>  // b.any
  4444c8:	ldr	w0, [x20, #8]
  4444cc:	cmp	w0, #0x2
  4444d0:	b.eq	444500 <nftw@plt+0x41980>  // b.none
  4444d4:	b.gt	444500 <nftw@plt+0x41980>
  4444d8:	cbnz	w0, 444910 <nftw@plt+0x41d90>
  4444dc:	mov	x2, x20
  4444e0:	mov	x0, x19
  4444e4:	mov	x3, #0x0                   	// #0
  4444e8:	mov	w1, #0x36                  	// #54
  4444ec:	bl	43cc98 <nftw@plt+0x3a118>
  4444f0:	mov	x20, x0
  4444f4:	b	4445d8 <nftw@plt+0x41a58>
  4444f8:	ldr	x27, [sp, #80]
  4444fc:	nop
  444500:	mov	x20, #0x0                   	// #0
  444504:	str	w25, [x19, #76]
  444508:	mov	x0, x20
  44450c:	ldp	x19, x20, [sp, #16]
  444510:	ldp	x21, x22, [sp, #32]
  444514:	ldp	x23, x24, [sp, #48]
  444518:	ldp	x25, x26, [sp, #64]
  44451c:	ldp	x29, x30, [sp], #112
  444520:	ret
  444524:	sub	w1, w0, #0x30
  444528:	and	w1, w1, #0xff
  44452c:	cmp	w1, #0x9
  444530:	b.hi	444650 <nftw@plt+0x41ad0>  // b.pmore
  444534:	mov	x0, x19
  444538:	bl	443dd0 <nftw@plt+0x41250>
  44453c:	mov	x20, x0
  444540:	cbz	x0, 444504 <nftw@plt+0x41984>
  444544:	ldr	x0, [x19, #24]
  444548:	ldrb	w1, [x0]
  44454c:	cmp	w1, #0x49
  444550:	b.eq	4445b0 <nftw@plt+0x41a30>  // b.none
  444554:	str	w25, [x19, #76]
  444558:	mov	x2, x20
  44455c:	mov	x0, x19
  444560:	mov	x3, #0x0                   	// #0
  444564:	mov	w1, #0x2e                  	// #46
  444568:	bl	43cc98 <nftw@plt+0x3a118>
  44456c:	str	x0, [x21]
  444570:	cbz	x0, 4445e0 <nftw@plt+0x41a60>
  444574:	ldr	x2, [x19, #24]
  444578:	add	x21, x0, #0x10
  44457c:	ldrb	w0, [x2]
  444580:	cmp	w0, w23
  444584:	b.ne	444460 <nftw@plt+0x418e0>  // b.any
  444588:	ldr	x20, [sp, #104]
  44458c:	add	x2, x2, #0x1
  444590:	str	x2, [x19, #24]
  444594:	mov	x0, x20
  444598:	ldp	x19, x20, [sp, #16]
  44459c:	ldp	x21, x22, [sp, #32]
  4445a0:	ldp	x23, x24, [sp, #48]
  4445a4:	ldp	x25, x26, [sp, #64]
  4445a8:	ldp	x29, x30, [sp], #112
  4445ac:	ret
  4445b0:	add	x0, x0, #0x1
  4445b4:	str	x0, [x19, #24]
  4445b8:	mov	x0, x19
  4445bc:	bl	4456a8 <nftw@plt+0x42b28>
  4445c0:	mov	x3, x0
  4445c4:	mov	x2, x20
  4445c8:	mov	x0, x19
  4445cc:	mov	w1, #0x4                   	// #4
  4445d0:	bl	43cc98 <nftw@plt+0x3a118>
  4445d4:	mov	x20, x0
  4445d8:	str	w25, [x19, #76]
  4445dc:	cbnz	x20, 444558 <nftw@plt+0x419d8>
  4445e0:	mov	x20, #0x0                   	// #0
  4445e4:	mov	x0, x20
  4445e8:	ldp	x19, x20, [sp, #16]
  4445ec:	ldp	x21, x22, [sp, #32]
  4445f0:	ldp	x23, x24, [sp, #48]
  4445f4:	ldp	x25, x26, [sp, #64]
  4445f8:	ldp	x29, x30, [sp], #112
  4445fc:	ret
  444600:	ldrb	w0, [x2, #1]
  444604:	cmp	w0, #0x72
  444608:	b.eq	444890 <nftw@plt+0x41d10>  // b.none
  44460c:	cmp	w0, #0x70
  444610:	b.ne	444498 <nftw@plt+0x41918>  // b.any
  444614:	add	x2, x2, #0x2
  444618:	str	x2, [x19, #24]
  44461c:	mov	x0, x19
  444620:	bl	444c40 <nftw@plt+0x420c0>
  444624:	mov	x2, x0
  444628:	mov	x3, #0x0                   	// #0
  44462c:	mov	x0, x19
  444630:	mov	w1, #0x4b                  	// #75
  444634:	bl	43cc98 <nftw@plt+0x3a118>
  444638:	mov	x20, x0
  44463c:	b	4445d8 <nftw@plt+0x41a58>
  444640:	mov	x0, x19
  444644:	bl	446608 <nftw@plt+0x43a88>
  444648:	mov	x20, x0
  44464c:	b	4445d8 <nftw@plt+0x41a58>
  444650:	cmp	w0, #0x6f
  444654:	b.ne	444670 <nftw@plt+0x41af0>  // b.any
  444658:	ldrb	w0, [x2, #1]
  44465c:	cmp	w0, #0x6e
  444660:	b.ne	444498 <nftw@plt+0x41918>  // b.any
  444664:	add	x2, x2, #0x2
  444668:	str	x2, [x19, #24]
  44466c:	b	444534 <nftw@plt+0x419b4>
  444670:	cmp	w0, #0x69
  444674:	mov	w1, #0x74                  	// #116
  444678:	ccmp	w0, w1, #0x4, ne  // ne = any
  44467c:	b.ne	444498 <nftw@plt+0x41918>  // b.any
  444680:	ldrb	w1, [x2, #1]
  444684:	cmp	w1, #0x6c
  444688:	b.ne	444498 <nftw@plt+0x41918>  // b.any
  44468c:	add	x1, x2, #0x2
  444690:	str	x1, [x19, #24]
  444694:	cmp	w0, #0x74
  444698:	mov	x20, #0x0                   	// #0
  44469c:	b.eq	4449e0 <nftw@plt+0x41e60>  // b.none
  4446a0:	ldrb	w0, [x1, #1]
  4446a4:	cbz	w0, 444500 <nftw@plt+0x41980>
  4446a8:	mov	w1, #0x45                  	// #69
  4446ac:	mov	x0, x19
  4446b0:	bl	444420 <nftw@plt+0x418a0>
  4446b4:	mov	x3, x0
  4446b8:	mov	x2, x20
  4446bc:	mov	x0, x19
  4446c0:	mov	w1, #0x31                  	// #49
  4446c4:	bl	43cc98 <nftw@plt+0x3a118>
  4446c8:	mov	x20, x0
  4446cc:	b	4445d8 <nftw@plt+0x41a58>
  4446d0:	mov	x0, x19
  4446d4:	bl	43d0c8 <nftw@plt+0x3a548>
  4446d8:	mov	x20, x0
  4446dc:	b	4445d8 <nftw@plt+0x41a58>
  4446e0:	add	x0, x2, #0x2
  4446e4:	str	x0, [x19, #24]
  4446e8:	ldrb	w0, [x2, #2]
  4446ec:	cmp	w0, #0x54
  4446f0:	b.eq	444880 <nftw@plt+0x41d00>  // b.none
  4446f4:	mov	x0, x19
  4446f8:	bl	43d050 <nftw@plt+0x3a4d0>
  4446fc:	mvn	x1, x0
  444700:	tst	x1, #0x7fffffff
  444704:	b.eq	444500 <nftw@plt+0x41980>  // b.none
  444708:	add	w0, w0, #0x1
  44470c:	ldp	w1, w2, [x19, #40]
  444710:	cmp	w1, w2
  444714:	b.ge	444500 <nftw@plt+0x41980>  // b.tcont
  444718:	mov	w3, #0x18                  	// #24
  44471c:	add	w4, w1, #0x1
  444720:	ldr	x2, [x19, #32]
  444724:	smull	x1, w1, w3
  444728:	mov	w3, #0x6                   	// #6
  44472c:	sxtw	x0, w0
  444730:	add	x20, x2, x1
  444734:	str	wzr, [x20, #4]
  444738:	str	w4, [x19, #40]
  44473c:	str	w3, [x2, x1]
  444740:	str	x0, [x20, #8]
  444744:	b	444554 <nftw@plt+0x419d4>
  444748:	ldr	x2, [x20, #8]
  44474c:	ldr	w0, [x19, #72]
  444750:	ldr	w1, [x2, #16]
  444754:	ldr	x26, [x2]
  444758:	sub	w1, w1, #0x2
  44475c:	add	w0, w0, w1
  444760:	str	w0, [x19, #72]
  444764:	ldrb	w1, [x26]
  444768:	cmp	w1, #0x73
  44476c:	b.eq	44485c <nftw@plt+0x41cdc>  // b.none
  444770:	str	x27, [sp, #80]
  444774:	ldr	w27, [x2, #20]
  444778:	cmp	w27, #0x1
  44477c:	b.eq	444928 <nftw@plt+0x41da8>  // b.none
  444780:	b.le	444904 <nftw@plt+0x41d84>
  444784:	cmp	w27, #0x2
  444788:	b.eq	444a48 <nftw@plt+0x41ec8>  // b.none
  44478c:	cmp	w27, #0x3
  444790:	b.ne	4444f8 <nftw@plt+0x41978>  // b.any
  444794:	cmp	w1, #0x71
  444798:	b.eq	4449fc <nftw@plt+0x41e7c>  // b.none
  44479c:	ldrb	w0, [x26]
  4447a0:	cmp	w0, #0x66
  4447a4:	b.eq	444bcc <nftw@plt+0x4204c>  // b.none
  4447a8:	cmp	w0, #0x6e
  4447ac:	b.ne	444a38 <nftw@plt+0x41eb8>  // b.any
  4447b0:	ldrb	w0, [x26, #1]
  4447b4:	mov	w1, #0x61                  	// #97
  4447b8:	cmp	w0, #0x77
  4447bc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4447c0:	b.ne	444a38 <nftw@plt+0x41eb8>  // b.any
  4447c4:	mov	w1, #0x5f                  	// #95
  4447c8:	mov	x0, x19
  4447cc:	bl	444420 <nftw@plt+0x418a0>
  4447d0:	mov	x26, x0
  4447d4:	mov	x0, x19
  4447d8:	bl	442f58 <nftw@plt+0x403d8>
  4447dc:	ldr	x1, [x19, #24]
  4447e0:	mov	x27, x0
  4447e4:	ldrb	w0, [x1]
  4447e8:	cmp	w0, #0x45
  4447ec:	b.eq	444c2c <nftw@plt+0x420ac>  // b.none
  4447f0:	cmp	w0, #0x70
  4447f4:	b.eq	444c04 <nftw@plt+0x42084>  // b.none
  4447f8:	cmp	w0, #0x69
  4447fc:	b.ne	444a38 <nftw@plt+0x41eb8>  // b.any
  444800:	ldrb	w0, [x1, #1]
  444804:	cmp	w0, #0x6c
  444808:	b.ne	444a38 <nftw@plt+0x41eb8>  // b.any
  44480c:	mov	x0, x19
  444810:	bl	444c40 <nftw@plt+0x420c0>
  444814:	mov	x3, x0
  444818:	mov	x2, x27
  44481c:	mov	w1, #0x3c                  	// #60
  444820:	mov	x0, x19
  444824:	bl	43cc98 <nftw@plt+0x3a118>
  444828:	mov	x2, x26
  44482c:	mov	x3, x0
  444830:	mov	w1, #0x3b                  	// #59
  444834:	mov	x0, x19
  444838:	bl	43cc98 <nftw@plt+0x3a118>
  44483c:	mov	x3, x0
  444840:	mov	x2, x20
  444844:	mov	x0, x19
  444848:	mov	w1, #0x3a                  	// #58
  44484c:	bl	43cc98 <nftw@plt+0x3a118>
  444850:	mov	x20, x0
  444854:	ldr	x27, [sp, #80]
  444858:	b	4445d8 <nftw@plt+0x41a58>
  44485c:	ldrb	w0, [x26, #1]
  444860:	cmp	w0, #0x74
  444864:	b.ne	444770 <nftw@plt+0x41bf0>  // b.any
  444868:	ldrb	w0, [x26, #2]
  44486c:	cbnz	w0, 444770 <nftw@plt+0x41bf0>
  444870:	mov	x0, x19
  444874:	bl	442f58 <nftw@plt+0x403d8>
  444878:	mov	x3, x0
  44487c:	b	44496c <nftw@plt+0x41dec>
  444880:	add	x2, x2, #0x3
  444884:	mov	w0, #0x0                   	// #0
  444888:	str	x2, [x19, #24]
  44488c:	b	44470c <nftw@plt+0x41b8c>
  444890:	add	x2, x2, #0x2
  444894:	str	x2, [x19, #24]
  444898:	mov	x0, x19
  44489c:	bl	442f58 <nftw@plt+0x403d8>
  4448a0:	mov	x20, x0
  4448a4:	mov	x0, x19
  4448a8:	bl	443dd0 <nftw@plt+0x41250>
  4448ac:	ldr	x1, [x19, #24]
  4448b0:	mov	x26, x0
  4448b4:	mov	x3, x26
  4448b8:	ldrb	w0, [x1]
  4448bc:	cmp	w0, #0x49
  4448c0:	b.ne	4448ec <nftw@plt+0x41d6c>  // b.any
  4448c4:	add	x1, x1, #0x1
  4448c8:	str	x1, [x19, #24]
  4448cc:	mov	x0, x19
  4448d0:	bl	4456a8 <nftw@plt+0x42b28>
  4448d4:	mov	x3, x0
  4448d8:	mov	x2, x26
  4448dc:	mov	x0, x19
  4448e0:	mov	w1, #0x4                   	// #4
  4448e4:	bl	43cc98 <nftw@plt+0x3a118>
  4448e8:	mov	x3, x0
  4448ec:	mov	x2, x20
  4448f0:	mov	x0, x19
  4448f4:	mov	w1, #0x1                   	// #1
  4448f8:	bl	43cc98 <nftw@plt+0x3a118>
  4448fc:	mov	x20, x0
  444900:	b	4445d8 <nftw@plt+0x41a58>
  444904:	cbnz	w27, 4444f8 <nftw@plt+0x41978>
  444908:	ldr	x27, [sp, #80]
  44490c:	b	4444dc <nftw@plt+0x4195c>
  444910:	cmp	w0, #0x1
  444914:	b.ne	444500 <nftw@plt+0x41980>  // b.any
  444918:	mov	x0, x19
  44491c:	bl	444c40 <nftw@plt+0x420c0>
  444920:	mov	x3, x0
  444924:	b	44496c <nftw@plt+0x41dec>
  444928:	ldrb	w0, [x26]
  44492c:	cmp	w0, #0x70
  444930:	ccmp	w0, w24, #0x4, ne  // ne = any
  444934:	b.eq	4449b0 <nftw@plt+0x41e30>  // b.none
  444938:	mov	w27, #0x0                   	// #0
  44493c:	cmp	w1, #0x73
  444940:	b.ne	444984 <nftw@plt+0x41e04>  // b.any
  444944:	ldrb	w0, [x26, #1]
  444948:	cmp	w0, #0x50
  44494c:	b.ne	444984 <nftw@plt+0x41e04>  // b.any
  444950:	ldrb	w0, [x26, #2]
  444954:	cbnz	w0, 444984 <nftw@plt+0x41e04>
  444958:	mov	x0, x19
  44495c:	bl	4456a8 <nftw@plt+0x42b28>
  444960:	mov	x3, x0
  444964:	cbnz	w27, 444994 <nftw@plt+0x41e14>
  444968:	ldr	x27, [sp, #80]
  44496c:	mov	x2, x20
  444970:	mov	x0, x19
  444974:	mov	w1, #0x37                  	// #55
  444978:	bl	43cc98 <nftw@plt+0x3a118>
  44497c:	mov	x20, x0
  444980:	b	4445d8 <nftw@plt+0x41a58>
  444984:	mov	x0, x19
  444988:	bl	444c40 <nftw@plt+0x420c0>
  44498c:	mov	x3, x0
  444990:	cbz	w27, 444968 <nftw@plt+0x41de8>
  444994:	mov	x2, x3
  444998:	mov	x0, x19
  44499c:	mov	w1, #0x39                  	// #57
  4449a0:	bl	43cc98 <nftw@plt+0x3a118>
  4449a4:	mov	x3, x0
  4449a8:	ldr	x27, [sp, #80]
  4449ac:	b	44496c <nftw@plt+0x41dec>
  4449b0:	ldrb	w2, [x26, #1]
  4449b4:	cmp	w2, w0
  4449b8:	b.ne	444938 <nftw@plt+0x41db8>  // b.any
  4449bc:	ldr	x0, [x19, #24]
  4449c0:	ldrb	w2, [x0]
  4449c4:	cmp	w2, #0x5f
  4449c8:	b.ne	44493c <nftw@plt+0x41dbc>  // b.any
  4449cc:	add	x0, x0, #0x1
  4449d0:	str	x0, [x19, #24]
  4449d4:	mov	w27, #0x0                   	// #0
  4449d8:	ldrb	w1, [x26]
  4449dc:	b	44493c <nftw@plt+0x41dbc>
  4449e0:	mov	x0, x19
  4449e4:	bl	442f58 <nftw@plt+0x403d8>
  4449e8:	ldr	x1, [x19, #24]
  4449ec:	mov	x20, x0
  4449f0:	ldrb	w0, [x1, #1]
  4449f4:	cbnz	w0, 4446a8 <nftw@plt+0x41b28>
  4449f8:	b	444500 <nftw@plt+0x41980>
  4449fc:	ldrb	w0, [x26, #1]
  444a00:	cmp	w0, #0x75
  444a04:	b.ne	44479c <nftw@plt+0x41c1c>  // b.any
  444a08:	ldrb	w0, [x26, #2]
  444a0c:	cbnz	w0, 44479c <nftw@plt+0x41c1c>
  444a10:	mov	x0, x19
  444a14:	bl	444c40 <nftw@plt+0x420c0>
  444a18:	mov	x26, x0
  444a1c:	mov	x0, x19
  444a20:	bl	444c40 <nftw@plt+0x420c0>
  444a24:	mov	x27, x0
  444a28:	mov	x0, x19
  444a2c:	bl	444c40 <nftw@plt+0x420c0>
  444a30:	mov	x3, x0
  444a34:	cbnz	x0, 444818 <nftw@plt+0x41c98>
  444a38:	mov	x20, #0x0                   	// #0
  444a3c:	ldr	x27, [sp, #80]
  444a40:	str	w25, [x19, #76]
  444a44:	b	444508 <nftw@plt+0x41988>
  444a48:	ldr	x0, [x20, #8]
  444a4c:	ldr	x0, [x0]
  444a50:	ldrb	w1, [x0, #1]
  444a54:	cmp	w1, #0x63
  444a58:	b.eq	444b8c <nftw@plt+0x4200c>  // b.none
  444a5c:	ldrb	w0, [x26]
  444a60:	cmp	w0, #0x66
  444a64:	b.eq	444bbc <nftw@plt+0x4203c>  // b.none
  444a68:	mov	x0, x19
  444a6c:	bl	444c40 <nftw@plt+0x420c0>
  444a70:	mov	x27, x0
  444a74:	ldrb	w1, [x26]
  444a78:	cmp	w1, #0x63
  444a7c:	b.ne	444aa8 <nftw@plt+0x41f28>  // b.any
  444a80:	ldrb	w0, [x26, #1]
  444a84:	cmp	w0, #0x6c
  444a88:	b.ne	444aa8 <nftw@plt+0x41f28>  // b.any
  444a8c:	ldrb	w0, [x26, #2]
  444a90:	cbnz	w0, 444aa8 <nftw@plt+0x41f28>
  444a94:	mov	x0, x19
  444a98:	mov	w1, #0x45                  	// #69
  444a9c:	bl	444420 <nftw@plt+0x418a0>
  444aa0:	mov	x26, x0
  444aa4:	b	444ae0 <nftw@plt+0x41f60>
  444aa8:	cmp	w1, #0x64
  444aac:	b.ne	444b14 <nftw@plt+0x41f94>  // b.any
  444ab0:	ldrb	w0, [x26, #1]
  444ab4:	cmp	w0, #0x74
  444ab8:	b.ne	444b14 <nftw@plt+0x41f94>  // b.any
  444abc:	ldrb	w0, [x26, #2]
  444ac0:	cbnz	w0, 444b14 <nftw@plt+0x41f94>
  444ac4:	mov	x0, x19
  444ac8:	bl	443dd0 <nftw@plt+0x41250>
  444acc:	ldr	x1, [x19, #24]
  444ad0:	mov	x26, x0
  444ad4:	ldrb	w0, [x1]
  444ad8:	cmp	w0, #0x49
  444adc:	b.eq	444bd8 <nftw@plt+0x42058>  // b.none
  444ae0:	mov	x2, x27
  444ae4:	mov	x3, x26
  444ae8:	mov	w1, #0x39                  	// #57
  444aec:	mov	x0, x19
  444af0:	bl	43cc98 <nftw@plt+0x3a118>
  444af4:	mov	x3, x0
  444af8:	mov	x2, x20
  444afc:	mov	x0, x19
  444b00:	mov	w1, #0x38                  	// #56
  444b04:	bl	43cc98 <nftw@plt+0x3a118>
  444b08:	mov	x20, x0
  444b0c:	ldr	x27, [sp, #80]
  444b10:	b	4445d8 <nftw@plt+0x41a58>
  444b14:	cmp	w1, #0x70
  444b18:	b.ne	444b30 <nftw@plt+0x41fb0>  // b.any
  444b1c:	ldrb	w0, [x26, #1]
  444b20:	cmp	w0, #0x74
  444b24:	b.ne	444b30 <nftw@plt+0x41fb0>  // b.any
  444b28:	ldrb	w0, [x26, #2]
  444b2c:	cbz	w0, 444ac4 <nftw@plt+0x41f44>
  444b30:	mov	x0, x19
  444b34:	bl	444c40 <nftw@plt+0x420c0>
  444b38:	mov	x26, x0
  444b3c:	b	444ae0 <nftw@plt+0x41f60>
  444b40:	add	x2, x2, #0x1
  444b44:	str	x2, [x0, #24]
  444b48:	ldp	x19, x20, [sp, #16]
  444b4c:	mov	x3, #0x0                   	// #0
  444b50:	ldp	x29, x30, [sp], #112
  444b54:	mov	w1, #0x2e                  	// #46
  444b58:	mov	x2, #0x0                   	// #0
  444b5c:	b	43cc98 <nftw@plt+0x3a118>
  444b60:	ldr	x0, [x19, #24]
  444b64:	ldrb	w1, [x0]
  444b68:	cmp	w1, #0x5f
  444b6c:	b.ne	444918 <nftw@plt+0x41d98>  // b.any
  444b70:	add	x0, x0, #0x1
  444b74:	str	x0, [x19, #24]
  444b78:	mov	w1, #0x45                  	// #69
  444b7c:	mov	x0, x19
  444b80:	bl	444420 <nftw@plt+0x418a0>
  444b84:	mov	x3, x0
  444b88:	b	44496c <nftw@plt+0x41dec>
  444b8c:	ldrb	w0, [x0]
  444b90:	sub	w1, w0, #0x72
  444b94:	sub	w0, w0, #0x63
  444b98:	and	w1, w1, #0xff
  444b9c:	and	w0, w0, #0xff
  444ba0:	cmp	w1, #0x1
  444ba4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  444ba8:	b.hi	444a5c <nftw@plt+0x41edc>  // b.pmore
  444bac:	mov	x0, x19
  444bb0:	bl	442f58 <nftw@plt+0x403d8>
  444bb4:	mov	x27, x0
  444bb8:	b	444a74 <nftw@plt+0x41ef4>
  444bbc:	mov	x0, x19
  444bc0:	bl	443c18 <nftw@plt+0x41098>
  444bc4:	mov	x27, x0
  444bc8:	b	444a74 <nftw@plt+0x41ef4>
  444bcc:	mov	x0, x19
  444bd0:	bl	443c18 <nftw@plt+0x41098>
  444bd4:	b	444a18 <nftw@plt+0x41e98>
  444bd8:	add	x1, x1, #0x1
  444bdc:	str	x1, [x19, #24]
  444be0:	mov	x0, x19
  444be4:	bl	4456a8 <nftw@plt+0x42b28>
  444be8:	mov	x3, x0
  444bec:	mov	x2, x26
  444bf0:	mov	x0, x19
  444bf4:	mov	w1, #0x4                   	// #4
  444bf8:	bl	43cc98 <nftw@plt+0x3a118>
  444bfc:	mov	x26, x0
  444c00:	b	444ae0 <nftw@plt+0x41f60>
  444c04:	ldrb	w0, [x1, #1]
  444c08:	cmp	w0, #0x69
  444c0c:	b.ne	444a38 <nftw@plt+0x41eb8>  // b.any
  444c10:	add	x1, x1, #0x2
  444c14:	str	x1, [x19, #24]
  444c18:	mov	x0, x19
  444c1c:	mov	w1, #0x45                  	// #69
  444c20:	bl	444420 <nftw@plt+0x418a0>
  444c24:	mov	x3, x0
  444c28:	b	444818 <nftw@plt+0x41c98>
  444c2c:	add	x1, x1, #0x1
  444c30:	mov	x3, #0x0                   	// #0
  444c34:	str	x1, [x19, #24]
  444c38:	b	444818 <nftw@plt+0x41c98>
  444c3c:	nop
  444c40:	ldr	x2, [x0, #24]
  444c44:	ldrb	w1, [x2]
  444c48:	cmp	w1, #0x4c
  444c4c:	b.eq	444ddc <nftw@plt+0x4225c>  // b.none
  444c50:	cmp	w1, #0x54
  444c54:	b.eq	444e60 <nftw@plt+0x422e0>  // b.none
  444c58:	stp	x29, x30, [sp, #-48]!
  444c5c:	cmp	w1, #0x73
  444c60:	mov	x29, sp
  444c64:	stp	x19, x20, [sp, #16]
  444c68:	mov	x19, x0
  444c6c:	b.eq	444d24 <nftw@plt+0x421a4>  // b.none
  444c70:	cmp	w1, #0x66
  444c74:	b.eq	444cb8 <nftw@plt+0x42138>  // b.none
  444c78:	sub	w3, w1, #0x30
  444c7c:	and	w3, w3, #0xff
  444c80:	cmp	w3, #0x9
  444c84:	b.hi	444de0 <nftw@plt+0x42260>  // b.pmore
  444c88:	mov	x0, x19
  444c8c:	bl	443dd0 <nftw@plt+0x41250>
  444c90:	mov	x20, x0
  444c94:	cbz	x0, 444dc8 <nftw@plt+0x42248>
  444c98:	ldr	x0, [x19, #24]
  444c9c:	ldrb	w1, [x0]
  444ca0:	cmp	w1, #0x49
  444ca4:	b.eq	444f38 <nftw@plt+0x423b8>  // b.none
  444ca8:	mov	x0, x20
  444cac:	ldp	x19, x20, [sp, #16]
  444cb0:	ldp	x29, x30, [sp], #48
  444cb4:	ret
  444cb8:	ldrb	w1, [x2, #1]
  444cbc:	cmp	w1, #0x70
  444cc0:	b.eq	444d60 <nftw@plt+0x421e0>  // b.none
  444cc4:	mov	x0, x19
  444cc8:	bl	443c18 <nftw@plt+0x41098>
  444ccc:	mov	x20, x0
  444cd0:	cbz	x0, 444dc8 <nftw@plt+0x42248>
  444cd4:	ldr	w0, [x0]
  444cd8:	cmp	w0, #0x32
  444cdc:	b.eq	444e64 <nftw@plt+0x422e4>  // b.none
  444ce0:	cmp	w0, #0x34
  444ce4:	b.eq	445290 <nftw@plt+0x42710>  // b.none
  444ce8:	b.hi	444dc8 <nftw@plt+0x42248>  // b.pmore
  444cec:	cmp	w0, #0x33
  444cf0:	b.ne	444dc8 <nftw@plt+0x42248>  // b.any
  444cf4:	ldr	w0, [x20, #8]
  444cf8:	cmp	w0, #0x2
  444cfc:	b.eq	444dc8 <nftw@plt+0x42248>  // b.none
  444d00:	b.gt	444dc8 <nftw@plt+0x42248>
  444d04:	cbnz	w0, 44502c <nftw@plt+0x424ac>
  444d08:	mov	x2, x20
  444d0c:	mov	x0, x19
  444d10:	ldp	x19, x20, [sp, #16]
  444d14:	mov	x3, #0x0                   	// #0
  444d18:	ldp	x29, x30, [sp], #48
  444d1c:	mov	w1, #0x36                  	// #54
  444d20:	b	43cc98 <nftw@plt+0x3a118>
  444d24:	ldrb	w1, [x2, #1]
  444d28:	cmp	w1, #0x72
  444d2c:	b.eq	444f64 <nftw@plt+0x423e4>  // b.none
  444d30:	cmp	w1, #0x70
  444d34:	b.ne	444cc4 <nftw@plt+0x42144>  // b.any
  444d38:	add	x2, x2, #0x2
  444d3c:	str	x2, [x0, #24]
  444d40:	bl	444c40 <nftw@plt+0x420c0>
  444d44:	mov	x2, x0
  444d48:	mov	x0, x19
  444d4c:	mov	x3, #0x0                   	// #0
  444d50:	ldp	x19, x20, [sp, #16]
  444d54:	mov	w1, #0x4b                  	// #75
  444d58:	ldp	x29, x30, [sp], #48
  444d5c:	b	43cc98 <nftw@plt+0x3a118>
  444d60:	add	x1, x2, #0x2
  444d64:	str	x1, [x0, #24]
  444d68:	ldrb	w1, [x2, #2]
  444d6c:	cmp	w1, #0x54
  444d70:	b.eq	4450f0 <nftw@plt+0x42570>  // b.none
  444d74:	bl	43d050 <nftw@plt+0x3a4d0>
  444d78:	mvn	x1, x0
  444d7c:	add	w0, w0, #0x1
  444d80:	tst	x1, #0x7fffffff
  444d84:	b.eq	444dc8 <nftw@plt+0x42248>  // b.none
  444d88:	ldp	w1, w2, [x19, #40]
  444d8c:	cmp	w1, w2
  444d90:	b.ge	444dc8 <nftw@plt+0x42248>  // b.tcont
  444d94:	mov	w3, #0x18                  	// #24
  444d98:	add	w4, w1, #0x1
  444d9c:	ldr	x2, [x19, #32]
  444da0:	smull	x1, w1, w3
  444da4:	mov	w3, #0x6                   	// #6
  444da8:	sxtw	x0, w0
  444dac:	add	x20, x2, x1
  444db0:	str	wzr, [x20, #4]
  444db4:	str	w4, [x19, #40]
  444db8:	str	w3, [x2, x1]
  444dbc:	str	x0, [x20, #8]
  444dc0:	b	444ca8 <nftw@plt+0x42128>
  444dc4:	ldp	x21, x22, [sp, #32]
  444dc8:	mov	x20, #0x0                   	// #0
  444dcc:	mov	x0, x20
  444dd0:	ldp	x19, x20, [sp, #16]
  444dd4:	ldp	x29, x30, [sp], #48
  444dd8:	ret
  444ddc:	b	446608 <nftw@plt+0x43a88>
  444de0:	cmp	w1, #0x6f
  444de4:	b.ne	444e00 <nftw@plt+0x42280>  // b.any
  444de8:	ldrb	w0, [x2, #1]
  444dec:	cmp	w0, #0x6e
  444df0:	b.ne	444cc4 <nftw@plt+0x42144>  // b.any
  444df4:	add	x2, x2, #0x2
  444df8:	str	x2, [x19, #24]
  444dfc:	b	444c88 <nftw@plt+0x42108>
  444e00:	cmp	w1, #0x69
  444e04:	mov	w3, #0x74                  	// #116
  444e08:	ccmp	w1, w3, #0x4, ne  // ne = any
  444e0c:	b.ne	444cc4 <nftw@plt+0x42144>  // b.any
  444e10:	ldrb	w3, [x2, #1]
  444e14:	cmp	w3, #0x6c
  444e18:	b.ne	444cc4 <nftw@plt+0x42144>  // b.any
  444e1c:	add	x3, x2, #0x2
  444e20:	str	x3, [x0, #24]
  444e24:	cmp	w1, #0x74
  444e28:	mov	x20, #0x0                   	// #0
  444e2c:	b.eq	44501c <nftw@plt+0x4249c>  // b.none
  444e30:	ldrb	w0, [x3, #1]
  444e34:	cbz	w0, 444dc8 <nftw@plt+0x42248>
  444e38:	mov	x0, x19
  444e3c:	mov	w1, #0x45                  	// #69
  444e40:	bl	444420 <nftw@plt+0x418a0>
  444e44:	mov	x3, x0
  444e48:	mov	x2, x20
  444e4c:	mov	x0, x19
  444e50:	ldp	x19, x20, [sp, #16]
  444e54:	mov	w1, #0x31                  	// #49
  444e58:	ldp	x29, x30, [sp], #48
  444e5c:	b	43cc98 <nftw@plt+0x3a118>
  444e60:	b	43d0c8 <nftw@plt+0x3a548>
  444e64:	ldr	x2, [x20, #8]
  444e68:	stp	x21, x22, [sp, #32]
  444e6c:	ldr	w0, [x19, #72]
  444e70:	ldr	w1, [x2, #16]
  444e74:	ldr	x21, [x2]
  444e78:	sub	w1, w1, #0x2
  444e7c:	add	w0, w0, w1
  444e80:	str	w0, [x19, #72]
  444e84:	ldrb	w1, [x21]
  444e88:	cmp	w1, #0x73
  444e8c:	b.eq	444fb4 <nftw@plt+0x42434>  // b.none
  444e90:	ldr	w22, [x2, #20]
  444e94:	cmp	w22, #0x1
  444e98:	b.eq	445064 <nftw@plt+0x424e4>  // b.none
  444e9c:	b.le	445058 <nftw@plt+0x424d8>
  444ea0:	cmp	w22, #0x2
  444ea4:	b.eq	44511c <nftw@plt+0x4259c>  // b.none
  444ea8:	cmp	w22, #0x3
  444eac:	b.ne	444dc4 <nftw@plt+0x42244>  // b.any
  444eb0:	cmp	w1, #0x71
  444eb4:	b.ne	4451ac <nftw@plt+0x4262c>  // b.any
  444eb8:	ldrb	w0, [x21, #1]
  444ebc:	cmp	w0, #0x75
  444ec0:	b.ne	4451ac <nftw@plt+0x4262c>  // b.any
  444ec4:	ldrb	w0, [x21, #2]
  444ec8:	cbnz	w0, 4451ac <nftw@plt+0x4262c>
  444ecc:	mov	x0, x19
  444ed0:	bl	444c40 <nftw@plt+0x420c0>
  444ed4:	mov	x21, x0
  444ed8:	mov	x0, x19
  444edc:	bl	444c40 <nftw@plt+0x420c0>
  444ee0:	mov	x22, x0
  444ee4:	mov	x0, x19
  444ee8:	bl	444c40 <nftw@plt+0x420c0>
  444eec:	mov	x3, x0
  444ef0:	cbz	x0, 444dc4 <nftw@plt+0x42244>
  444ef4:	mov	x2, x22
  444ef8:	mov	x0, x19
  444efc:	mov	w1, #0x3c                  	// #60
  444f00:	bl	43cc98 <nftw@plt+0x3a118>
  444f04:	mov	x2, x21
  444f08:	mov	x3, x0
  444f0c:	mov	w1, #0x3b                  	// #59
  444f10:	mov	x0, x19
  444f14:	bl	43cc98 <nftw@plt+0x3a118>
  444f18:	mov	x3, x0
  444f1c:	mov	x2, x20
  444f20:	mov	x0, x19
  444f24:	ldp	x19, x20, [sp, #16]
  444f28:	mov	w1, #0x3a                  	// #58
  444f2c:	ldp	x21, x22, [sp, #32]
  444f30:	ldp	x29, x30, [sp], #48
  444f34:	b	43cc98 <nftw@plt+0x3a118>
  444f38:	add	x0, x0, #0x1
  444f3c:	str	x0, [x19, #24]
  444f40:	mov	x0, x19
  444f44:	bl	4456a8 <nftw@plt+0x42b28>
  444f48:	mov	x3, x0
  444f4c:	mov	x2, x20
  444f50:	mov	x0, x19
  444f54:	ldp	x19, x20, [sp, #16]
  444f58:	mov	w1, #0x4                   	// #4
  444f5c:	ldp	x29, x30, [sp], #48
  444f60:	b	43cc98 <nftw@plt+0x3a118>
  444f64:	add	x2, x2, #0x2
  444f68:	stp	x21, x22, [sp, #32]
  444f6c:	str	x2, [x0, #24]
  444f70:	bl	442f58 <nftw@plt+0x403d8>
  444f74:	mov	x20, x0
  444f78:	mov	x0, x19
  444f7c:	bl	443dd0 <nftw@plt+0x41250>
  444f80:	ldr	x1, [x19, #24]
  444f84:	mov	x21, x0
  444f88:	mov	x3, x21
  444f8c:	ldrb	w0, [x1]
  444f90:	cmp	w0, #0x49
  444f94:	b.eq	444ff0 <nftw@plt+0x42470>  // b.none
  444f98:	mov	x2, x20
  444f9c:	mov	x0, x19
  444fa0:	ldp	x19, x20, [sp, #16]
  444fa4:	mov	w1, #0x1                   	// #1
  444fa8:	ldp	x21, x22, [sp, #32]
  444fac:	ldp	x29, x30, [sp], #48
  444fb0:	b	43cc98 <nftw@plt+0x3a118>
  444fb4:	ldrb	w0, [x21, #1]
  444fb8:	cmp	w0, #0x74
  444fbc:	b.ne	444e90 <nftw@plt+0x42310>  // b.any
  444fc0:	ldrb	w0, [x21, #2]
  444fc4:	cbnz	w0, 444e90 <nftw@plt+0x42310>
  444fc8:	mov	x0, x19
  444fcc:	bl	442f58 <nftw@plt+0x403d8>
  444fd0:	mov	x2, x20
  444fd4:	mov	x3, x0
  444fd8:	mov	x0, x19
  444fdc:	mov	w1, #0x37                  	// #55
  444fe0:	ldp	x19, x20, [sp, #16]
  444fe4:	ldp	x21, x22, [sp, #32]
  444fe8:	ldp	x29, x30, [sp], #48
  444fec:	b	43cc98 <nftw@plt+0x3a118>
  444ff0:	add	x1, x1, #0x1
  444ff4:	str	x1, [x19, #24]
  444ff8:	mov	x0, x19
  444ffc:	bl	4456a8 <nftw@plt+0x42b28>
  445000:	mov	x3, x0
  445004:	mov	x2, x21
  445008:	mov	x0, x19
  44500c:	mov	w1, #0x4                   	// #4
  445010:	bl	43cc98 <nftw@plt+0x3a118>
  445014:	mov	x3, x0
  445018:	b	444f98 <nftw@plt+0x42418>
  44501c:	bl	442f58 <nftw@plt+0x403d8>
  445020:	mov	x20, x0
  445024:	ldr	x3, [x19, #24]
  445028:	b	444e30 <nftw@plt+0x422b0>
  44502c:	cmp	w0, #0x1
  445030:	b.ne	444dc8 <nftw@plt+0x42248>  // b.any
  445034:	mov	x0, x19
  445038:	bl	444c40 <nftw@plt+0x420c0>
  44503c:	mov	x3, x0
  445040:	mov	x2, x20
  445044:	mov	x0, x19
  445048:	ldp	x19, x20, [sp, #16]
  44504c:	mov	w1, #0x37                  	// #55
  445050:	ldp	x29, x30, [sp], #48
  445054:	b	43cc98 <nftw@plt+0x3a118>
  445058:	cbnz	w22, 444dc4 <nftw@plt+0x42244>
  44505c:	ldp	x21, x22, [sp, #32]
  445060:	b	444d08 <nftw@plt+0x42188>
  445064:	ldrb	w0, [x21]
  445068:	mov	w2, #0x6d                  	// #109
  44506c:	cmp	w0, #0x70
  445070:	ccmp	w0, w2, #0x4, ne  // ne = any
  445074:	b.ne	445084 <nftw@plt+0x42504>  // b.any
  445078:	ldrb	w2, [x21, #1]
  44507c:	cmp	w2, w0
  445080:	b.eq	4450bc <nftw@plt+0x4253c>  // b.none
  445084:	mov	w22, #0x0                   	// #0
  445088:	cmp	w1, #0x73
  44508c:	b.ne	4450e0 <nftw@plt+0x42560>  // b.any
  445090:	ldrb	w0, [x21, #1]
  445094:	cmp	w0, #0x50
  445098:	b.ne	4450e0 <nftw@plt+0x42560>  // b.any
  44509c:	ldrb	w0, [x21, #2]
  4450a0:	cbnz	w0, 4450e0 <nftw@plt+0x42560>
  4450a4:	mov	x0, x19
  4450a8:	bl	4456a8 <nftw@plt+0x42b28>
  4450ac:	mov	x3, x0
  4450b0:	cbnz	w22, 445100 <nftw@plt+0x42580>
  4450b4:	ldp	x21, x22, [sp, #32]
  4450b8:	b	445040 <nftw@plt+0x424c0>
  4450bc:	ldr	x0, [x19, #24]
  4450c0:	ldrb	w2, [x0]
  4450c4:	cmp	w2, #0x5f
  4450c8:	b.ne	445088 <nftw@plt+0x42508>  // b.any
  4450cc:	add	x0, x0, #0x1
  4450d0:	str	x0, [x19, #24]
  4450d4:	mov	w22, #0x0                   	// #0
  4450d8:	ldrb	w1, [x21]
  4450dc:	b	445088 <nftw@plt+0x42508>
  4450e0:	mov	x0, x19
  4450e4:	bl	444c40 <nftw@plt+0x420c0>
  4450e8:	mov	x3, x0
  4450ec:	b	4450b0 <nftw@plt+0x42530>
  4450f0:	add	x2, x2, #0x3
  4450f4:	mov	w0, #0x0                   	// #0
  4450f8:	str	x2, [x19, #24]
  4450fc:	b	444d88 <nftw@plt+0x42208>
  445100:	mov	x2, x3
  445104:	mov	x0, x19
  445108:	mov	w1, #0x39                  	// #57
  44510c:	bl	43cc98 <nftw@plt+0x3a118>
  445110:	mov	x3, x0
  445114:	ldp	x21, x22, [sp, #32]
  445118:	b	445040 <nftw@plt+0x424c0>
  44511c:	ldr	x0, [x20, #8]
  445120:	ldr	x0, [x0]
  445124:	ldrb	w1, [x0, #1]
  445128:	cmp	w1, #0x63
  44512c:	b.eq	4452d4 <nftw@plt+0x42754>  // b.none
  445130:	ldrb	w0, [x21]
  445134:	cmp	w0, #0x66
  445138:	b.eq	445304 <nftw@plt+0x42784>  // b.none
  44513c:	mov	x0, x19
  445140:	bl	444c40 <nftw@plt+0x420c0>
  445144:	mov	x22, x0
  445148:	ldrb	w1, [x21]
  44514c:	cmp	w1, #0x63
  445150:	b.ne	44522c <nftw@plt+0x426ac>  // b.any
  445154:	ldrb	w0, [x21, #1]
  445158:	cmp	w0, #0x6c
  44515c:	b.ne	44522c <nftw@plt+0x426ac>  // b.any
  445160:	ldrb	w0, [x21, #2]
  445164:	cbnz	w0, 44522c <nftw@plt+0x426ac>
  445168:	mov	x0, x19
  44516c:	mov	w1, #0x45                  	// #69
  445170:	bl	444420 <nftw@plt+0x418a0>
  445174:	mov	x21, x0
  445178:	mov	x3, x21
  44517c:	mov	x2, x22
  445180:	mov	x0, x19
  445184:	mov	w1, #0x39                  	// #57
  445188:	bl	43cc98 <nftw@plt+0x3a118>
  44518c:	mov	x3, x0
  445190:	mov	x2, x20
  445194:	mov	x0, x19
  445198:	ldp	x19, x20, [sp, #16]
  44519c:	mov	w1, #0x38                  	// #56
  4451a0:	ldp	x21, x22, [sp, #32]
  4451a4:	ldp	x29, x30, [sp], #48
  4451a8:	b	43cc98 <nftw@plt+0x3a118>
  4451ac:	ldrb	w0, [x21]
  4451b0:	cmp	w0, #0x66
  4451b4:	b.eq	44532c <nftw@plt+0x427ac>  // b.none
  4451b8:	cmp	w0, #0x6e
  4451bc:	b.ne	444dc4 <nftw@plt+0x42244>  // b.any
  4451c0:	ldrb	w0, [x21, #1]
  4451c4:	mov	w1, #0x61                  	// #97
  4451c8:	cmp	w0, #0x77
  4451cc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4451d0:	b.ne	444dc4 <nftw@plt+0x42244>  // b.any
  4451d4:	mov	w1, #0x5f                  	// #95
  4451d8:	mov	x0, x19
  4451dc:	bl	444420 <nftw@plt+0x418a0>
  4451e0:	mov	x21, x0
  4451e4:	mov	x0, x19
  4451e8:	bl	442f58 <nftw@plt+0x403d8>
  4451ec:	ldr	x1, [x19, #24]
  4451f0:	mov	x22, x0
  4451f4:	ldrb	w0, [x1]
  4451f8:	cmp	w0, #0x45
  4451fc:	b.eq	445360 <nftw@plt+0x427e0>  // b.none
  445200:	cmp	w0, #0x70
  445204:	b.eq	445338 <nftw@plt+0x427b8>  // b.none
  445208:	cmp	w0, #0x69
  44520c:	b.ne	444dc4 <nftw@plt+0x42244>  // b.any
  445210:	ldrb	w0, [x1, #1]
  445214:	cmp	w0, #0x6c
  445218:	b.ne	444dc4 <nftw@plt+0x42244>  // b.any
  44521c:	mov	x0, x19
  445220:	bl	444c40 <nftw@plt+0x420c0>
  445224:	mov	x3, x0
  445228:	b	444ef4 <nftw@plt+0x42374>
  44522c:	cmp	w1, #0x64
  445230:	b.ne	4452bc <nftw@plt+0x4273c>  // b.any
  445234:	ldrb	w0, [x21, #1]
  445238:	cmp	w0, #0x74
  44523c:	b.ne	4452bc <nftw@plt+0x4273c>  // b.any
  445240:	ldrb	w0, [x21, #2]
  445244:	cbnz	w0, 4452bc <nftw@plt+0x4273c>
  445248:	mov	x0, x19
  44524c:	bl	443dd0 <nftw@plt+0x41250>
  445250:	ldr	x1, [x19, #24]
  445254:	mov	x21, x0
  445258:	ldrb	w0, [x1]
  44525c:	cmp	w0, #0x49
  445260:	b.ne	445178 <nftw@plt+0x425f8>  // b.any
  445264:	add	x1, x1, #0x1
  445268:	str	x1, [x19, #24]
  44526c:	mov	x0, x19
  445270:	bl	4456a8 <nftw@plt+0x42b28>
  445274:	mov	x3, x0
  445278:	mov	x2, x21
  44527c:	mov	x0, x19
  445280:	mov	w1, #0x4                   	// #4
  445284:	bl	43cc98 <nftw@plt+0x3a118>
  445288:	mov	x21, x0
  44528c:	b	445178 <nftw@plt+0x425f8>
  445290:	ldr	x0, [x19, #24]
  445294:	ldrb	w1, [x0]
  445298:	cmp	w1, #0x5f
  44529c:	b.ne	445034 <nftw@plt+0x424b4>  // b.any
  4452a0:	add	x0, x0, #0x1
  4452a4:	str	x0, [x19, #24]
  4452a8:	mov	w1, #0x45                  	// #69
  4452ac:	mov	x0, x19
  4452b0:	bl	444420 <nftw@plt+0x418a0>
  4452b4:	mov	x3, x0
  4452b8:	b	445040 <nftw@plt+0x424c0>
  4452bc:	cmp	w1, #0x70
  4452c0:	b.eq	445314 <nftw@plt+0x42794>  // b.none
  4452c4:	mov	x0, x19
  4452c8:	bl	444c40 <nftw@plt+0x420c0>
  4452cc:	mov	x21, x0
  4452d0:	b	445178 <nftw@plt+0x425f8>
  4452d4:	ldrb	w0, [x0]
  4452d8:	sub	w1, w0, #0x63
  4452dc:	sub	w0, w0, #0x72
  4452e0:	and	w1, w1, #0xff
  4452e4:	and	w0, w0, #0xff
  4452e8:	cmp	w1, #0x1
  4452ec:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  4452f0:	b.hi	445130 <nftw@plt+0x425b0>  // b.pmore
  4452f4:	mov	x0, x19
  4452f8:	bl	442f58 <nftw@plt+0x403d8>
  4452fc:	mov	x22, x0
  445300:	b	445148 <nftw@plt+0x425c8>
  445304:	mov	x0, x19
  445308:	bl	443c18 <nftw@plt+0x41098>
  44530c:	mov	x22, x0
  445310:	b	445148 <nftw@plt+0x425c8>
  445314:	ldrb	w0, [x21, #1]
  445318:	cmp	w0, #0x74
  44531c:	b.ne	4452c4 <nftw@plt+0x42744>  // b.any
  445320:	ldrb	w0, [x21, #2]
  445324:	cbz	w0, 445248 <nftw@plt+0x426c8>
  445328:	b	4452c4 <nftw@plt+0x42744>
  44532c:	mov	x0, x19
  445330:	bl	443c18 <nftw@plt+0x41098>
  445334:	b	444ed4 <nftw@plt+0x42354>
  445338:	ldrb	w0, [x1, #1]
  44533c:	cmp	w0, #0x69
  445340:	b.ne	444dc4 <nftw@plt+0x42244>  // b.any
  445344:	add	x1, x1, #0x2
  445348:	str	x1, [x19, #24]
  44534c:	mov	x0, x19
  445350:	mov	w1, #0x45                  	// #69
  445354:	bl	444420 <nftw@plt+0x418a0>
  445358:	mov	x3, x0
  44535c:	b	444ef4 <nftw@plt+0x42374>
  445360:	add	x1, x1, #0x1
  445364:	mov	x3, #0x0                   	// #0
  445368:	str	x1, [x19, #24]
  44536c:	b	444ef4 <nftw@plt+0x42374>
  445370:	stp	x29, x30, [sp, #-96]!
  445374:	cmp	w2, #0x0
  445378:	mov	x29, sp
  44537c:	stp	x19, x20, [sp, #16]
  445380:	mov	x19, x0
  445384:	mov	w0, #0x1b                  	// #27
  445388:	stp	x21, x22, [sp, #32]
  44538c:	mov	x20, x1
  445390:	mov	w22, #0x1c                  	// #28
  445394:	ldr	x4, [x19, #24]
  445398:	stp	x23, x24, [sp, #48]
  44539c:	mov	w23, #0x1d                  	// #29
  4453a0:	stp	x25, x26, [sp, #64]
  4453a4:	mov	w25, #0x1e                  	// #30
  4453a8:	csel	w25, w25, w0, ne  // ne = any
  4453ac:	ldrb	w5, [x4]
  4453b0:	mov	w0, #0x1a                  	// #26
  4453b4:	csel	w23, w23, w0, ne  // ne = any
  4453b8:	mov	w0, #0x19                  	// #25
  4453bc:	mov	w24, w2
  4453c0:	csel	w22, w22, w0, ne  // ne = any
  4453c4:	mov	x21, x1
  4453c8:	mov	x0, x4
  4453cc:	mov	w26, #0x1                   	// #1
  4453d0:	bl	43d658 <nftw@plt+0x3aad8>
  4453d4:	cbz	w0, 4454f0 <nftw@plt+0x42970>
  4453d8:	add	x0, x4, #0x1
  4453dc:	str	x0, [x19, #24]
  4453e0:	cmp	w5, #0x72
  4453e4:	b.eq	4454b0 <nftw@plt+0x42930>  // b.none
  4453e8:	cmp	w5, #0x56
  4453ec:	b.eq	445550 <nftw@plt+0x429d0>  // b.none
  4453f0:	cmp	w5, #0x4b
  4453f4:	b.eq	445568 <nftw@plt+0x429e8>  // b.none
  4453f8:	ldrb	w0, [x4, #1]
  4453fc:	cbz	w0, 445490 <nftw@plt+0x42910>
  445400:	add	x0, x4, #0x2
  445404:	str	x0, [x19, #24]
  445408:	ldrb	w0, [x4, #1]
  44540c:	cmp	w0, #0x78
  445410:	b.eq	445580 <nftw@plt+0x42a00>  // b.none
  445414:	and	w1, w0, #0xffffffdf
  445418:	cmp	w1, #0x4f
  44541c:	and	w1, w1, #0xff
  445420:	b.ne	445598 <nftw@plt+0x42a18>  // b.any
  445424:	ldr	w2, [x19, #72]
  445428:	cmp	w0, #0x4f
  44542c:	add	w0, w2, #0x9
  445430:	str	w0, [x19, #72]
  445434:	b.ne	4455dc <nftw@plt+0x42a5c>  // b.any
  445438:	str	x27, [sp, #80]
  44543c:	mov	x0, x19
  445440:	ldr	w27, [x19, #76]
  445444:	str	w26, [x19, #76]
  445448:	bl	444c40 <nftw@plt+0x420c0>
  44544c:	str	w27, [x19, #76]
  445450:	mov	x3, x0
  445454:	cbz	x0, 4455f4 <nftw@plt+0x42a74>
  445458:	ldr	x0, [x19, #24]
  44545c:	ldrb	w1, [x0]
  445460:	cmp	w1, #0x45
  445464:	b.ne	4455f4 <nftw@plt+0x42a74>  // b.any
  445468:	add	x0, x0, #0x1
  44546c:	mov	w1, #0x4f                  	// #79
  445470:	ldr	x27, [sp, #80]
  445474:	str	x0, [x19, #24]
  445478:	mov	x2, #0x0                   	// #0
  44547c:	mov	x0, x19
  445480:	bl	43cc98 <nftw@plt+0x3a118>
  445484:	str	x0, [x20]
  445488:	cbnz	x0, 4454d8 <nftw@plt+0x42958>
  44548c:	nop
  445490:	mov	x20, #0x0                   	// #0
  445494:	mov	x0, x20
  445498:	ldp	x19, x20, [sp, #16]
  44549c:	ldp	x21, x22, [sp, #32]
  4454a0:	ldp	x23, x24, [sp, #48]
  4454a4:	ldp	x25, x26, [sp, #64]
  4454a8:	ldp	x29, x30, [sp], #96
  4454ac:	ret
  4454b0:	ldr	w0, [x19, #72]
  4454b4:	mov	w1, w22
  4454b8:	mov	x3, #0x0                   	// #0
  4454bc:	add	w0, w0, #0x9
  4454c0:	str	w0, [x19, #72]
  4454c4:	mov	x0, x19
  4454c8:	mov	x2, #0x0                   	// #0
  4454cc:	bl	43cc98 <nftw@plt+0x3a118>
  4454d0:	str	x0, [x20]
  4454d4:	cbz	x0, 445490 <nftw@plt+0x42910>
  4454d8:	ldr	x4, [x19, #24]
  4454dc:	add	x20, x0, #0x8
  4454e0:	mov	x0, x4
  4454e4:	ldrb	w5, [x4]
  4454e8:	bl	43d658 <nftw@plt+0x3aad8>
  4454ec:	cbnz	w0, 4453d8 <nftw@plt+0x42858>
  4454f0:	cmp	w5, #0x46
  4454f4:	eor	w24, w24, #0x1
  4454f8:	cset	w0, eq  // eq = none
  4454fc:	tst	w24, w0
  445500:	b.eq	445494 <nftw@plt+0x42914>  // b.none
  445504:	cmp	x20, x21
  445508:	b.eq	445494 <nftw@plt+0x42914>  // b.none
  44550c:	mov	w3, #0x1d                  	// #29
  445510:	mov	w2, #0x1e                  	// #30
  445514:	mov	w1, #0x1c                  	// #28
  445518:	b	445530 <nftw@plt+0x429b0>
  44551c:	cmp	w0, #0x19
  445520:	b.eq	4455ec <nftw@plt+0x42a6c>  // b.none
  445524:	add	x21, x21, #0x8
  445528:	cmp	x20, x21
  44552c:	b.eq	445494 <nftw@plt+0x42914>  // b.none
  445530:	ldr	x21, [x21]
  445534:	ldr	w0, [x21]
  445538:	cmp	w0, #0x1a
  44553c:	b.eq	4455e4 <nftw@plt+0x42a64>  // b.none
  445540:	cmp	w0, #0x1b
  445544:	b.ne	44551c <nftw@plt+0x4299c>  // b.any
  445548:	str	w2, [x21]
  44554c:	b	445524 <nftw@plt+0x429a4>
  445550:	ldr	w0, [x19, #72]
  445554:	mov	w1, w23
  445558:	mov	x3, #0x0                   	// #0
  44555c:	add	w0, w0, #0x9
  445560:	str	w0, [x19, #72]
  445564:	b	4454c4 <nftw@plt+0x42944>
  445568:	ldr	w0, [x19, #72]
  44556c:	mov	w1, w25
  445570:	mov	x3, #0x0                   	// #0
  445574:	add	w0, w0, #0x6
  445578:	str	w0, [x19, #72]
  44557c:	b	4454c4 <nftw@plt+0x42944>
  445580:	ldr	w0, [x19, #72]
  445584:	mov	x3, #0x0                   	// #0
  445588:	mov	w1, #0x4d                  	// #77
  44558c:	add	w0, w0, #0x11
  445590:	str	w0, [x19, #72]
  445594:	b	4454c4 <nftw@plt+0x42944>
  445598:	cmp	w0, #0x77
  44559c:	b.ne	445490 <nftw@plt+0x42910>  // b.any
  4455a0:	ldr	w1, [x19, #72]
  4455a4:	mov	x0, x19
  4455a8:	add	w1, w1, #0x6
  4455ac:	str	w1, [x19, #72]
  4455b0:	bl	443b08 <nftw@plt+0x40f88>
  4455b4:	mov	x3, x0
  4455b8:	cbz	x0, 445490 <nftw@plt+0x42910>
  4455bc:	ldr	x0, [x19, #24]
  4455c0:	ldrb	w1, [x0]
  4455c4:	cmp	w1, #0x45
  4455c8:	b.ne	445490 <nftw@plt+0x42910>  // b.any
  4455cc:	add	x0, x0, #0x1
  4455d0:	mov	w1, #0x50                  	// #80
  4455d4:	str	x0, [x19, #24]
  4455d8:	b	4454c4 <nftw@plt+0x42944>
  4455dc:	mov	x3, #0x0                   	// #0
  4455e0:	b	4454c4 <nftw@plt+0x42944>
  4455e4:	str	w3, [x21]
  4455e8:	b	445524 <nftw@plt+0x429a4>
  4455ec:	str	w1, [x21]
  4455f0:	b	445524 <nftw@plt+0x429a4>
  4455f4:	ldr	x27, [sp, #80]
  4455f8:	b	445490 <nftw@plt+0x42910>
  4455fc:	nop
  445600:	ldr	x2, [x0, #24]
  445604:	ldrb	w1, [x2]
  445608:	cmp	w1, #0x4c
  44560c:	b.eq	445698 <nftw@plt+0x42b18>  // b.none
  445610:	stp	x29, x30, [sp, #-32]!
  445614:	mov	x29, sp
  445618:	stp	x19, x20, [sp, #16]
  44561c:	mov	x19, x0
  445620:	b.hi	445640 <nftw@plt+0x42ac0>  // b.pmore
  445624:	sub	w1, w1, #0x49
  445628:	and	w1, w1, #0xff
  44562c:	cmp	w1, #0x1
  445630:	b.hi	445688 <nftw@plt+0x42b08>  // b.pmore
  445634:	ldp	x19, x20, [sp, #16]
  445638:	ldp	x29, x30, [sp], #32
  44563c:	b	445770 <nftw@plt+0x42bf0>
  445640:	cmp	w1, #0x58
  445644:	b.ne	445688 <nftw@plt+0x42b08>  // b.any
  445648:	add	x2, x2, #0x1
  44564c:	ldr	w20, [x0, #76]
  445650:	mov	w1, #0x1                   	// #1
  445654:	str	x2, [x0, #24]
  445658:	str	w1, [x0, #76]
  44565c:	bl	444c40 <nftw@plt+0x420c0>
  445660:	str	w20, [x19, #76]
  445664:	ldr	x1, [x19, #24]
  445668:	ldrb	w2, [x1]
  44566c:	cmp	w2, #0x45
  445670:	b.ne	44569c <nftw@plt+0x42b1c>  // b.any
  445674:	add	x1, x1, #0x1
  445678:	str	x1, [x19, #24]
  44567c:	ldp	x19, x20, [sp, #16]
  445680:	ldp	x29, x30, [sp], #32
  445684:	ret
  445688:	mov	x0, x19
  44568c:	ldp	x19, x20, [sp, #16]
  445690:	ldp	x29, x30, [sp], #32
  445694:	b	442f58 <nftw@plt+0x403d8>
  445698:	b	446608 <nftw@plt+0x43a88>
  44569c:	mov	x0, #0x0                   	// #0
  4456a0:	b	44567c <nftw@plt+0x42afc>
  4456a4:	nop
  4456a8:	stp	x29, x30, [sp, #-64]!
  4456ac:	mov	x29, sp
  4456b0:	ldr	x1, [x0, #24]
  4456b4:	stp	x19, x20, [sp, #16]
  4456b8:	mov	x19, x0
  4456bc:	str	x21, [sp, #32]
  4456c0:	ldr	x21, [x0, #64]
  4456c4:	ldrb	w2, [x1]
  4456c8:	cmp	w2, #0x45
  4456cc:	b.eq	44574c <nftw@plt+0x42bcc>  // b.none
  4456d0:	add	x20, sp, #0x38
  4456d4:	str	xzr, [sp, #56]
  4456d8:	b	4456fc <nftw@plt+0x42b7c>
  4456dc:	bl	43cc98 <nftw@plt+0x3a118>
  4456e0:	str	x0, [x20]
  4456e4:	add	x20, x0, #0x10
  4456e8:	cbz	x0, 445718 <nftw@plt+0x42b98>
  4456ec:	ldr	x1, [x19, #24]
  4456f0:	ldrb	w0, [x1]
  4456f4:	cmp	w0, #0x45
  4456f8:	b.eq	44572c <nftw@plt+0x42bac>  // b.none
  4456fc:	mov	x0, x19
  445700:	bl	445600 <nftw@plt+0x42a80>
  445704:	mov	x3, #0x0                   	// #0
  445708:	mov	x2, x0
  44570c:	mov	w1, #0x2f                  	// #47
  445710:	mov	x0, x19
  445714:	cbnz	x2, 4456dc <nftw@plt+0x42b5c>
  445718:	mov	x0, #0x0                   	// #0
  44571c:	ldp	x19, x20, [sp, #16]
  445720:	ldr	x21, [sp, #32]
  445724:	ldp	x29, x30, [sp], #64
  445728:	ret
  44572c:	add	x1, x1, #0x1
  445730:	str	x1, [x19, #24]
  445734:	str	x21, [x19, #64]
  445738:	ldp	x19, x20, [sp, #16]
  44573c:	ldr	x21, [sp, #32]
  445740:	ldr	x0, [sp, #56]
  445744:	ldp	x29, x30, [sp], #64
  445748:	ret
  44574c:	add	x1, x1, #0x1
  445750:	mov	x3, #0x0                   	// #0
  445754:	ldr	x21, [sp, #32]
  445758:	str	x1, [x0, #24]
  44575c:	ldp	x19, x20, [sp, #16]
  445760:	mov	x2, #0x0                   	// #0
  445764:	ldp	x29, x30, [sp], #64
  445768:	mov	w1, #0x2f                  	// #47
  44576c:	b	43cc98 <nftw@plt+0x3a118>
  445770:	ldr	x3, [x0, #24]
  445774:	ldrb	w1, [x3]
  445778:	sub	w1, w1, #0x49
  44577c:	and	w1, w1, #0xff
  445780:	cmp	w1, #0x1
  445784:	b.hi	445794 <nftw@plt+0x42c14>  // b.pmore
  445788:	add	x3, x3, #0x1
  44578c:	str	x3, [x0, #24]
  445790:	b	4456a8 <nftw@plt+0x42b28>
  445794:	mov	x0, #0x0                   	// #0
  445798:	ret
  44579c:	nop
  4457a0:	stp	x29, x30, [sp, #-112]!
  4457a4:	mov	x29, sp
  4457a8:	ldr	x2, [x0, #24]
  4457ac:	stp	x19, x20, [sp, #16]
  4457b0:	ldrb	w1, [x2]
  4457b4:	cmp	w1, #0x55
  4457b8:	b.eq	4459b8 <nftw@plt+0x42e38>  // b.none
  4457bc:	mov	x19, x0
  4457c0:	b.hi	445870 <nftw@plt+0x42cf0>  // b.pmore
  4457c4:	cmp	w1, #0x4e
  4457c8:	b.eq	4459d0 <nftw@plt+0x42e50>  // b.none
  4457cc:	cmp	w1, #0x53
  4457d0:	b.ne	445960 <nftw@plt+0x42de0>  // b.any
  4457d4:	ldrb	w1, [x2, #1]
  4457d8:	cmp	w1, #0x74
  4457dc:	b.ne	445900 <nftw@plt+0x42d80>  // b.any
  4457e0:	ldp	w0, w1, [x0, #40]
  4457e4:	add	x2, x2, #0x2
  4457e8:	str	x2, [x19, #24]
  4457ec:	cmp	w0, w1
  4457f0:	b.ge	445ca0 <nftw@plt+0x43120>  // b.tcont
  4457f4:	mov	w3, #0x18                  	// #24
  4457f8:	add	w1, w0, #0x1
  4457fc:	ldr	x2, [x19, #32]
  445800:	smull	x0, w0, w3
  445804:	str	w1, [x19, #40]
  445808:	mov	w3, #0x3                   	// #3
  44580c:	add	x20, x2, x0
  445810:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  445814:	add	x1, x1, #0x6b8
  445818:	str	xzr, [x2, x0]
  44581c:	str	x1, [x20, #8]
  445820:	str	w3, [x20, #16]
  445824:	mov	x0, x19
  445828:	bl	443dd0 <nftw@plt+0x41250>
  44582c:	mov	x2, x20
  445830:	mov	x3, x0
  445834:	mov	w1, #0x1                   	// #1
  445838:	mov	x0, x19
  44583c:	bl	43cc98 <nftw@plt+0x3a118>
  445840:	mov	x20, x0
  445844:	ldr	w3, [x19, #72]
  445848:	ldr	x1, [x19, #24]
  44584c:	add	w3, w3, #0x3
  445850:	str	w3, [x19, #72]
  445854:	ldrb	w0, [x1]
  445858:	cmp	w0, #0x49
  44585c:	b.eq	445c4c <nftw@plt+0x430cc>  // b.none
  445860:	mov	x0, x20
  445864:	ldp	x19, x20, [sp, #16]
  445868:	ldp	x29, x30, [sp], #112
  44586c:	ret
  445870:	cmp	w1, #0x5a
  445874:	b.ne	445960 <nftw@plt+0x42de0>  // b.any
  445878:	add	x2, x2, #0x1
  44587c:	str	x2, [x0, #24]
  445880:	mov	w1, #0x0                   	// #0
  445884:	bl	445d58 <nftw@plt+0x431d8>
  445888:	mov	x20, x0
  44588c:	cbz	x0, 445958 <nftw@plt+0x42dd8>
  445890:	ldr	x0, [x19, #24]
  445894:	ldrb	w1, [x0]
  445898:	cmp	w1, #0x45
  44589c:	b.ne	445958 <nftw@plt+0x42dd8>  // b.any
  4458a0:	add	x1, x0, #0x1
  4458a4:	str	x1, [x19, #24]
  4458a8:	ldrb	w1, [x0, #1]
  4458ac:	cmp	w1, #0x73
  4458b0:	b.eq	445cc8 <nftw@plt+0x43148>  // b.none
  4458b4:	cmp	w1, #0x64
  4458b8:	b.eq	445b5c <nftw@plt+0x42fdc>  // b.none
  4458bc:	mov	x0, x19
  4458c0:	bl	4457a0 <nftw@plt+0x42c20>
  4458c4:	mov	x3, x0
  4458c8:	cbz	x0, 4458dc <nftw@plt+0x42d5c>
  4458cc:	ldr	w0, [x0]
  4458d0:	sub	w0, w0, #0x46
  4458d4:	tst	w0, #0xfffffffd
  4458d8:	b.ne	445d1c <nftw@plt+0x4319c>  // b.any
  4458dc:	ldr	w0, [x20]
  4458e0:	cmp	w0, #0x3
  4458e4:	b.eq	445c88 <nftw@plt+0x43108>  // b.none
  4458e8:	mov	x2, x20
  4458ec:	mov	x0, x19
  4458f0:	mov	w1, #0x2                   	// #2
  4458f4:	bl	43cc98 <nftw@plt+0x3a118>
  4458f8:	mov	x20, x0
  4458fc:	b	445860 <nftw@plt+0x42ce0>
  445900:	mov	w1, #0x0                   	// #0
  445904:	bl	43d348 <nftw@plt+0x3a7c8>
  445908:	ldr	x1, [x19, #24]
  44590c:	mov	x20, x0
  445910:	ldrb	w0, [x1]
  445914:	cmp	w0, #0x49
  445918:	b.ne	445860 <nftw@plt+0x42ce0>  // b.any
  44591c:	add	x1, x1, #0x1
  445920:	str	x1, [x19, #24]
  445924:	mov	x0, x19
  445928:	bl	4456a8 <nftw@plt+0x42b28>
  44592c:	mov	x3, x0
  445930:	mov	x2, x20
  445934:	mov	x0, x19
  445938:	mov	w1, #0x4                   	// #4
  44593c:	bl	43cc98 <nftw@plt+0x3a118>
  445940:	mov	x20, x0
  445944:	b	445860 <nftw@plt+0x42ce0>
  445948:	mov	x0, x19
  44594c:	bl	43d6b0 <nftw@plt+0x3ab30>
  445950:	cbnz	w0, 445b98 <nftw@plt+0x43018>
  445954:	ldp	x21, x22, [sp, #32]
  445958:	mov	x20, #0x0                   	// #0
  44595c:	b	445860 <nftw@plt+0x42ce0>
  445960:	mov	x0, x19
  445964:	bl	443dd0 <nftw@plt+0x41250>
  445968:	ldr	x1, [x19, #24]
  44596c:	mov	x20, x0
  445970:	ldrb	w0, [x1]
  445974:	cmp	w0, #0x49
  445978:	b.ne	445860 <nftw@plt+0x42ce0>  // b.any
  44597c:	cbz	x20, 445958 <nftw@plt+0x42dd8>
  445980:	ldp	w2, w0, [x19, #56]
  445984:	cmp	w2, w0
  445988:	b.ge	445958 <nftw@plt+0x42dd8>  // b.tcont
  44598c:	ldr	x4, [x19, #48]
  445990:	add	w0, w2, #0x1
  445994:	mov	x3, #0x0                   	// #0
  445998:	str	x20, [x4, w2, sxtw #3]
  44599c:	str	w0, [x19, #56]
  4459a0:	ldrb	w2, [x1]
  4459a4:	sub	w2, w2, #0x49
  4459a8:	and	w2, w2, #0xff
  4459ac:	cmp	w2, #0x1
  4459b0:	b.ls	44591c <nftw@plt+0x42d9c>  // b.plast
  4459b4:	b	445930 <nftw@plt+0x42db0>
  4459b8:	bl	443dd0 <nftw@plt+0x41250>
  4459bc:	mov	x20, x0
  4459c0:	mov	x0, x20
  4459c4:	ldp	x19, x20, [sp, #16]
  4459c8:	ldp	x29, x30, [sp], #112
  4459cc:	ret
  4459d0:	stp	x21, x22, [sp, #32]
  4459d4:	add	x2, x2, #0x1
  4459d8:	add	x1, sp, #0x68
  4459dc:	str	x2, [x0, #24]
  4459e0:	mov	w2, #0x1                   	// #1
  4459e4:	bl	445370 <nftw@plt+0x427f0>
  4459e8:	mov	x22, x0
  4459ec:	cbz	x0, 445c40 <nftw@plt+0x430c0>
  4459f0:	mov	x1, #0x0                   	// #0
  4459f4:	mov	x0, x19
  4459f8:	stp	x23, x24, [sp, #48]
  4459fc:	bl	43cd20 <nftw@plt+0x3a1a0>
  445a00:	mov	x23, x0
  445a04:	ldr	x1, [x19, #24]
  445a08:	ldrb	w20, [x1]
  445a0c:	cbz	w20, 445ac4 <nftw@plt+0x42f44>
  445a10:	mov	x21, #0x0                   	// #0
  445a14:	mov	w24, #0x4c                  	// #76
  445a18:	stp	x25, x26, [sp, #64]
  445a1c:	mov	w25, #0x55                  	// #85
  445a20:	cmp	w20, #0x44
  445a24:	b.eq	445ad8 <nftw@plt+0x42f58>  // b.none
  445a28:	sub	w2, w20, #0x30
  445a2c:	sub	w0, w20, #0x61
  445a30:	and	w2, w2, #0xff
  445a34:	and	w0, w0, #0xff
  445a38:	cmp	w2, #0x9
  445a3c:	mov	x26, x21
  445a40:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  445a44:	b.ls	445a58 <nftw@plt+0x42ed8>  // b.plast
  445a48:	cmp	w20, #0x43
  445a4c:	ccmp	w20, w25, #0x4, ne  // ne = any
  445a50:	ccmp	w20, w24, #0x4, ne  // ne = any
  445a54:	b.ne	445b24 <nftw@plt+0x42fa4>  // b.any
  445a58:	mov	x0, x19
  445a5c:	bl	443dd0 <nftw@plt+0x41250>
  445a60:	mov	x21, x0
  445a64:	cbz	x26, 445a80 <nftw@plt+0x42f00>
  445a68:	mov	w1, #0x1                   	// #1
  445a6c:	mov	x3, x21
  445a70:	mov	x2, x26
  445a74:	mov	x0, x19
  445a78:	bl	43cc98 <nftw@plt+0x3a118>
  445a7c:	mov	x21, x0
  445a80:	cmp	w20, #0x53
  445a84:	ldr	x1, [x19, #24]
  445a88:	b.eq	445ab8 <nftw@plt+0x42f38>  // b.none
  445a8c:	ldrb	w20, [x1]
  445a90:	cmp	w20, #0x45
  445a94:	b.eq	445b0c <nftw@plt+0x42f8c>  // b.none
  445a98:	cbz	x21, 445ac0 <nftw@plt+0x42f40>
  445a9c:	ldp	w0, w2, [x19, #56]
  445aa0:	cmp	w0, w2
  445aa4:	b.ge	445ac0 <nftw@plt+0x42f40>  // b.tcont
  445aa8:	ldr	x3, [x19, #48]
  445aac:	add	w2, w0, #0x1
  445ab0:	str	x21, [x3, w0, sxtw #3]
  445ab4:	str	w2, [x19, #56]
  445ab8:	ldrb	w20, [x1]
  445abc:	cbnz	w20, 445a20 <nftw@plt+0x42ea0>
  445ac0:	ldp	x25, x26, [sp, #64]
  445ac4:	mov	x20, #0x0                   	// #0
  445ac8:	ldp	x23, x24, [sp, #48]
  445acc:	str	xzr, [x22]
  445ad0:	ldp	x21, x22, [sp, #32]
  445ad4:	b	445860 <nftw@plt+0x42ce0>
  445ad8:	ldrb	w0, [x1, #1]
  445adc:	and	w0, w0, #0xffffffdf
  445ae0:	and	w0, w0, #0xff
  445ae4:	cmp	w0, #0x54
  445ae8:	mov	x0, x19
  445aec:	b.ne	445b14 <nftw@plt+0x42f94>  // b.any
  445af0:	mov	x26, x21
  445af4:	bl	442f58 <nftw@plt+0x403d8>
  445af8:	mov	x21, x0
  445afc:	mov	w1, #0x1                   	// #1
  445b00:	cbnz	x26, 445a6c <nftw@plt+0x42eec>
  445b04:	ldr	x1, [x19, #24]
  445b08:	b	445a8c <nftw@plt+0x42f0c>
  445b0c:	mov	x26, x21
  445b10:	b	445a48 <nftw@plt+0x42ec8>
  445b14:	mov	x26, x21
  445b18:	bl	443dd0 <nftw@plt+0x41250>
  445b1c:	mov	x21, x0
  445b20:	b	445afc <nftw@plt+0x42f7c>
  445b24:	cmp	w20, #0x53
  445b28:	b.eq	445bd8 <nftw@plt+0x43058>  // b.none
  445b2c:	cmp	w20, #0x49
  445b30:	b.eq	445ca8 <nftw@plt+0x43128>  // b.none
  445b34:	cmp	w20, #0x54
  445b38:	b.eq	445d44 <nftw@plt+0x431c4>  // b.none
  445b3c:	cmp	w20, #0x45
  445b40:	b.eq	445bf4 <nftw@plt+0x43074>  // b.none
  445b44:	cmp	w20, #0x4d
  445b48:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  445b4c:	b.eq	445ac0 <nftw@plt+0x42f40>  // b.none
  445b50:	add	x1, x1, #0x1
  445b54:	str	x1, [x19, #24]
  445b58:	b	445ab8 <nftw@plt+0x42f38>
  445b5c:	stp	x21, x22, [sp, #32]
  445b60:	add	x0, x0, #0x2
  445b64:	str	x0, [x19, #24]
  445b68:	mov	x0, x19
  445b6c:	bl	43d050 <nftw@plt+0x3a4d0>
  445b70:	mov	w21, w0
  445b74:	tbnz	w0, #31, 445954 <nftw@plt+0x42dd4>
  445b78:	mov	x0, x19
  445b7c:	bl	4457a0 <nftw@plt+0x42c20>
  445b80:	mov	x11, x0
  445b84:	cbz	x0, 445b98 <nftw@plt+0x43018>
  445b88:	ldr	w0, [x0]
  445b8c:	sub	w0, w0, #0x46
  445b90:	tst	w0, #0xfffffffd
  445b94:	b.ne	445948 <nftw@plt+0x42dc8>  // b.any
  445b98:	ldp	w1, w0, [x19, #40]
  445b9c:	cmp	w1, w0
  445ba0:	b.ge	445d38 <nftw@plt+0x431b8>  // b.tcont
  445ba4:	mov	w2, #0x18                  	// #24
  445ba8:	add	w4, w1, #0x1
  445bac:	ldr	x0, [x19, #32]
  445bb0:	smull	x1, w1, w2
  445bb4:	mov	w2, #0x47                  	// #71
  445bb8:	add	x3, x0, x1
  445bbc:	str	wzr, [x3, #4]
  445bc0:	str	w4, [x19, #40]
  445bc4:	str	w2, [x0, x1]
  445bc8:	str	x11, [x3, #8]
  445bcc:	str	w21, [x3, #16]
  445bd0:	ldp	x21, x22, [sp, #32]
  445bd4:	b	4458dc <nftw@plt+0x42d5c>
  445bd8:	mov	x0, x19
  445bdc:	mov	w1, #0x1                   	// #1
  445be0:	bl	43d348 <nftw@plt+0x3a7c8>
  445be4:	mov	x21, x0
  445be8:	cbnz	x26, 445a68 <nftw@plt+0x42ee8>
  445bec:	ldr	x1, [x19, #24]
  445bf0:	b	445ab8 <nftw@plt+0x42f38>
  445bf4:	str	x21, [x22]
  445bf8:	cbz	x21, 445c38 <nftw@plt+0x430b8>
  445bfc:	cbz	x23, 445c0c <nftw@plt+0x4308c>
  445c00:	ldr	x0, [sp, #104]
  445c04:	str	x0, [x23, #8]
  445c08:	str	x23, [sp, #104]
  445c0c:	ldr	x0, [x19, #24]
  445c10:	ldrb	w1, [x0]
  445c14:	cmp	w1, #0x45
  445c18:	b.ne	445c38 <nftw@plt+0x430b8>  // b.any
  445c1c:	add	x0, x0, #0x1
  445c20:	ldp	x21, x22, [sp, #32]
  445c24:	ldp	x23, x24, [sp, #48]
  445c28:	ldp	x25, x26, [sp, #64]
  445c2c:	str	x0, [x19, #24]
  445c30:	ldr	x20, [sp, #104]
  445c34:	b	445860 <nftw@plt+0x42ce0>
  445c38:	ldp	x23, x24, [sp, #48]
  445c3c:	ldp	x25, x26, [sp, #64]
  445c40:	mov	x20, #0x0                   	// #0
  445c44:	ldp	x21, x22, [sp, #32]
  445c48:	b	445860 <nftw@plt+0x42ce0>
  445c4c:	cbz	x20, 445958 <nftw@plt+0x42dd8>
  445c50:	ldp	w0, w2, [x19, #56]
  445c54:	cmp	w0, w2
  445c58:	b.ge	445958 <nftw@plt+0x42dd8>  // b.tcont
  445c5c:	ldr	x4, [x19, #48]
  445c60:	add	w2, w0, #0x1
  445c64:	mov	x3, #0x0                   	// #0
  445c68:	str	x20, [x4, w0, sxtw #3]
  445c6c:	str	w2, [x19, #56]
  445c70:	ldrb	w0, [x1]
  445c74:	sub	w0, w0, #0x49
  445c78:	and	w0, w0, #0xff
  445c7c:	cmp	w0, #0x1
  445c80:	b.hi	445930 <nftw@plt+0x42db0>  // b.pmore
  445c84:	b	44591c <nftw@plt+0x42d9c>
  445c88:	ldr	x0, [x20, #16]
  445c8c:	ldr	w1, [x0]
  445c90:	cmp	w1, #0x29
  445c94:	b.ne	4458e8 <nftw@plt+0x42d68>  // b.any
  445c98:	str	xzr, [x0, #8]
  445c9c:	b	4458e8 <nftw@plt+0x42d68>
  445ca0:	mov	x20, #0x0                   	// #0
  445ca4:	b	445824 <nftw@plt+0x42ca4>
  445ca8:	cbz	x21, 445ac0 <nftw@plt+0x42f40>
  445cac:	add	x1, x1, #0x1
  445cb0:	str	x1, [x19, #24]
  445cb4:	mov	x0, x19
  445cb8:	bl	4456a8 <nftw@plt+0x42b28>
  445cbc:	mov	x21, x0
  445cc0:	mov	w1, #0x4                   	// #4
  445cc4:	b	445a6c <nftw@plt+0x42eec>
  445cc8:	add	x0, x0, #0x2
  445ccc:	str	x0, [x19, #24]
  445cd0:	mov	x0, x19
  445cd4:	bl	43d6b0 <nftw@plt+0x3ab30>
  445cd8:	cbz	w0, 445958 <nftw@plt+0x42dd8>
  445cdc:	ldp	w0, w1, [x19, #40]
  445ce0:	cmp	w0, w1
  445ce4:	b.ge	445d3c <nftw@plt+0x431bc>  // b.tcont
  445ce8:	mov	w3, #0x18                  	// #24
  445cec:	add	w1, w0, #0x1
  445cf0:	ldr	x2, [x19, #32]
  445cf4:	smull	x0, w0, w3
  445cf8:	str	w1, [x19, #40]
  445cfc:	mov	w4, #0xe                   	// #14
  445d00:	add	x3, x2, x0
  445d04:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  445d08:	add	x1, x1, #0x6a8
  445d0c:	str	xzr, [x2, x0]
  445d10:	str	x1, [x3, #8]
  445d14:	str	w4, [x3, #16]
  445d18:	b	4458dc <nftw@plt+0x42d5c>
  445d1c:	mov	x0, x19
  445d20:	str	x3, [sp, #88]
  445d24:	bl	43d6b0 <nftw@plt+0x3ab30>
  445d28:	ldr	x3, [sp, #88]
  445d2c:	cbnz	w0, 4458dc <nftw@plt+0x42d5c>
  445d30:	mov	x20, #0x0                   	// #0
  445d34:	b	445860 <nftw@plt+0x42ce0>
  445d38:	ldp	x21, x22, [sp, #32]
  445d3c:	mov	x3, #0x0                   	// #0
  445d40:	b	4458dc <nftw@plt+0x42d5c>
  445d44:	mov	x0, x19
  445d48:	bl	43d0c8 <nftw@plt+0x3a548>
  445d4c:	mov	x21, x0
  445d50:	b	445afc <nftw@plt+0x42f7c>
  445d54:	nop
  445d58:	stp	x29, x30, [sp, #-64]!
  445d5c:	mov	w3, #0x54                  	// #84
  445d60:	mov	x29, sp
  445d64:	ldr	x2, [x0, #24]
  445d68:	stp	x19, x20, [sp, #16]
  445d6c:	mov	x19, x0
  445d70:	str	x21, [sp, #32]
  445d74:	mov	w21, w1
  445d78:	ldrb	w1, [x2]
  445d7c:	cmp	w1, #0x47
  445d80:	ccmp	w1, w3, #0x4, ne  // ne = any
  445d84:	b.ne	445e10 <nftw@plt+0x43290>  // b.any
  445d88:	ldr	w3, [x0, #72]
  445d8c:	add	w1, w3, #0x14
  445d90:	str	w1, [x0, #72]
  445d94:	ldrb	w1, [x2]
  445d98:	cmp	w1, #0x54
  445d9c:	b.eq	445f30 <nftw@plt+0x433b0>  // b.none
  445da0:	cmp	w1, #0x47
  445da4:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  445da8:	add	x1, x2, #0x1
  445dac:	str	x1, [x0, #24]
  445db0:	ldrb	w1, [x2, #1]
  445db4:	cbz	w1, 445f18 <nftw@plt+0x43398>
  445db8:	add	x1, x2, #0x2
  445dbc:	str	x1, [x0, #24]
  445dc0:	ldrb	w1, [x2, #1]
  445dc4:	cmp	w1, #0x54
  445dc8:	b.eq	446270 <nftw@plt+0x436f0>  // b.none
  445dcc:	b.hi	445f8c <nftw@plt+0x4340c>  // b.pmore
  445dd0:	cmp	w1, #0x41
  445dd4:	b.eq	446254 <nftw@plt+0x436d4>  // b.none
  445dd8:	cmp	w1, #0x52
  445ddc:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  445de0:	bl	4457a0 <nftw@plt+0x42c20>
  445de4:	mov	x11, x0
  445de8:	mov	x0, x19
  445dec:	bl	43cfe8 <nftw@plt+0x3a468>
  445df0:	mov	x3, x0
  445df4:	mov	x2, x11
  445df8:	mov	x0, x19
  445dfc:	mov	w1, #0x16                  	// #22
  445e00:	ldp	x19, x20, [sp, #16]
  445e04:	ldr	x21, [sp, #32]
  445e08:	ldp	x29, x30, [sp], #64
  445e0c:	b	43cc98 <nftw@plt+0x3a118>
  445e10:	bl	4457a0 <nftw@plt+0x42c20>
  445e14:	str	x0, [sp, #56]
  445e18:	mov	x20, x0
  445e1c:	cbz	x0, 445f18 <nftw@plt+0x43398>
  445e20:	cbz	w21, 445e70 <nftw@plt+0x432f0>
  445e24:	ldr	w0, [x19, #16]
  445e28:	tbnz	w0, #0, 445e70 <nftw@plt+0x432f0>
  445e2c:	mov	x1, #0x1f                  	// #31
  445e30:	mov	x2, #0x1                   	// #1
  445e34:	movk	x1, #0x1a, lsl #48
  445e38:	ldr	w3, [x20]
  445e3c:	sub	w0, w3, #0x1c
  445e40:	cmp	w0, #0x34
  445e44:	b.hi	445e54 <nftw@plt+0x432d4>  // b.pmore
  445e48:	lsl	x0, x2, x0
  445e4c:	tst	x0, x1
  445e50:	b.ne	446138 <nftw@plt+0x435b8>  // b.any
  445e54:	cmp	w3, #0x2
  445e58:	b.eq	446140 <nftw@plt+0x435c0>  // b.none
  445e5c:	mov	x0, x20
  445e60:	ldp	x19, x20, [sp, #16]
  445e64:	ldr	x21, [sp, #32]
  445e68:	ldp	x29, x30, [sp], #64
  445e6c:	ret
  445e70:	ldr	x0, [x19, #24]
  445e74:	ldrb	w0, [x0]
  445e78:	cmp	w0, #0x45
  445e7c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  445e80:	b.eq	445e5c <nftw@plt+0x432dc>  // b.none
  445e84:	mov	x1, #0x1f                  	// #31
  445e88:	mov	x4, x20
  445e8c:	mov	x2, #0x1                   	// #1
  445e90:	movk	x1, #0x1a, lsl #48
  445e94:	ldr	w3, [x4]
  445e98:	cmp	w3, #0x4
  445e9c:	b.eq	4461a8 <nftw@plt+0x43628>  // b.none
  445ea0:	sub	w0, w3, #0x1c
  445ea4:	b.hi	446074 <nftw@plt+0x434f4>  // b.pmore
  445ea8:	cmp	w3, #0x2
  445eac:	b.ne	445eb8 <nftw@plt+0x43338>  // b.any
  445eb0:	ldr	x4, [x4, #16]
  445eb4:	cbnz	x4, 445e94 <nftw@plt+0x43314>
  445eb8:	mov	w1, #0x0                   	// #0
  445ebc:	mov	x0, x19
  445ec0:	bl	4442b0 <nftw@plt+0x41730>
  445ec4:	str	x0, [sp, #56]
  445ec8:	mov	x3, x0
  445ecc:	cbz	x0, 445f18 <nftw@plt+0x43398>
  445ed0:	cbnz	w21, 445ef0 <nftw@plt+0x43370>
  445ed4:	ldr	w0, [x20]
  445ed8:	cmp	w0, #0x2
  445edc:	b.ne	445ef0 <nftw@plt+0x43370>  // b.any
  445ee0:	ldr	w0, [x3]
  445ee4:	cmp	w0, #0x29
  445ee8:	b.ne	445ef0 <nftw@plt+0x43370>  // b.any
  445eec:	str	xzr, [x3, #8]
  445ef0:	mov	x2, x20
  445ef4:	mov	x0, x19
  445ef8:	mov	w1, #0x3                   	// #3
  445efc:	b	445e00 <nftw@plt+0x43280>
  445f00:	cmp	w1, #0x68
  445f04:	b.eq	4463d0 <nftw@plt+0x43850>  // b.none
  445f08:	cmp	w1, #0x76
  445f0c:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  445f10:	bl	43d5b0 <nftw@plt+0x3aa30>
  445f14:	cbnz	w0, 446188 <nftw@plt+0x43608>
  445f18:	mov	x20, #0x0                   	// #0
  445f1c:	mov	x0, x20
  445f20:	ldp	x19, x20, [sp, #16]
  445f24:	ldr	x21, [sp, #32]
  445f28:	ldp	x29, x30, [sp], #64
  445f2c:	ret
  445f30:	add	x1, x2, #0x1
  445f34:	str	x1, [x0, #24]
  445f38:	ldrb	w1, [x2, #1]
  445f3c:	cbz	w1, 445f18 <nftw@plt+0x43398>
  445f40:	add	x1, x2, #0x2
  445f44:	str	x1, [x0, #24]
  445f48:	ldrb	w1, [x2, #1]
  445f4c:	cmp	w1, #0x53
  445f50:	b.eq	44637c <nftw@plt+0x437fc>  // b.none
  445f54:	b.hi	4460bc <nftw@plt+0x4353c>  // b.pmore
  445f58:	cmp	w1, #0x48
  445f5c:	b.eq	446364 <nftw@plt+0x437e4>  // b.none
  445f60:	b.hi	446094 <nftw@plt+0x43514>  // b.pmore
  445f64:	cmp	w1, #0x43
  445f68:	b.eq	446310 <nftw@plt+0x43790>  // b.none
  445f6c:	cmp	w1, #0x46
  445f70:	b.ne	4460f0 <nftw@plt+0x43570>  // b.any
  445f74:	bl	442f58 <nftw@plt+0x403d8>
  445f78:	mov	x2, x0
  445f7c:	mov	x3, #0x0                   	// #0
  445f80:	mov	x0, x19
  445f84:	mov	w1, #0xe                   	// #14
  445f88:	b	445e00 <nftw@plt+0x43280>
  445f8c:	cmp	w1, #0x56
  445f90:	b.eq	4462ac <nftw@plt+0x4372c>  // b.none
  445f94:	cmp	w1, #0x72
  445f98:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  445f9c:	add	x0, x0, #0x18
  445fa0:	bl	43cf18 <nftw@plt+0x3a398>
  445fa4:	cmp	w0, #0x1
  445fa8:	b.le	445f18 <nftw@plt+0x43398>
  445fac:	ldr	x1, [x19, #24]
  445fb0:	ldrb	w2, [x1]
  445fb4:	cbz	w2, 445f18 <nftw@plt+0x43398>
  445fb8:	add	x8, x1, #0x1
  445fbc:	str	x8, [x19, #24]
  445fc0:	ldrb	w1, [x1]
  445fc4:	cmp	w1, #0x5f
  445fc8:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  445fcc:	sub	w9, w0, #0x1
  445fd0:	mov	x2, #0x0                   	// #0
  445fd4:	mov	w11, #0x18                  	// #24
  445fd8:	mov	w10, #0x41                  	// #65
  445fdc:	ldrb	w0, [x8]
  445fe0:	cbz	w0, 445f18 <nftw@plt+0x43398>
  445fe4:	cmp	w0, #0x24
  445fe8:	b.ne	4461ec <nftw@plt+0x4366c>  // b.any
  445fec:	ldrb	w0, [x8, #1]
  445ff0:	cmp	w0, #0x53
  445ff4:	b.eq	4462d4 <nftw@plt+0x43754>  // b.none
  445ff8:	cmp	w0, #0x5f
  445ffc:	b.eq	4462cc <nftw@plt+0x4374c>  // b.none
  446000:	cmp	w0, #0x24
  446004:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  446008:	ldp	w1, w3, [x19, #40]
  44600c:	ldr	x8, [x19, #24]
  446010:	cmp	w1, w3
  446014:	add	x8, x8, #0x2
  446018:	b.ge	446410 <nftw@plt+0x43890>  // b.tcont
  44601c:	ldr	x5, [x19, #32]
  446020:	smull	x4, w1, w11
  446024:	add	w1, w1, #0x1
  446028:	sub	w9, w9, #0x2
  44602c:	add	x3, x5, x4
  446030:	str	wzr, [x3, #4]
  446034:	str	w1, [x19, #40]
  446038:	str	w10, [x5, x4]
  44603c:	str	w0, [x3, #8]
  446040:	str	x8, [x19, #24]
  446044:	cbz	x2, 4462c4 <nftw@plt+0x43744>
  446048:	mov	x0, x19
  44604c:	mov	w1, #0x40                  	// #64
  446050:	bl	43cc98 <nftw@plt+0x3a118>
  446054:	mov	x2, x0
  446058:	cbz	x0, 445f18 <nftw@plt+0x43398>
  44605c:	cmp	w9, #0x0
  446060:	b.gt	445fdc <nftw@plt+0x4345c>
  446064:	mov	x0, x19
  446068:	mov	x3, #0x0                   	// #0
  44606c:	mov	w1, #0x3f                  	// #63
  446070:	b	445e00 <nftw@plt+0x43280>
  446074:	cmp	w0, #0x34
  446078:	b.hi	445eb8 <nftw@plt+0x43338>  // b.pmore
  44607c:	lsl	x0, x2, x0
  446080:	tst	x0, x1
  446084:	b.eq	445eb8 <nftw@plt+0x43338>  // b.none
  446088:	ldr	x4, [x4, #8]
  44608c:	cbnz	x4, 445e94 <nftw@plt+0x43314>
  446090:	b	445eb8 <nftw@plt+0x43338>
  446094:	cmp	w1, #0x49
  446098:	b.eq	4463f8 <nftw@plt+0x43878>  // b.none
  44609c:	cmp	w1, #0x4a
  4460a0:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  4460a4:	bl	442f58 <nftw@plt+0x403d8>
  4460a8:	mov	x2, x0
  4460ac:	mov	x3, #0x0                   	// #0
  4460b0:	mov	x0, x19
  4460b4:	mov	w1, #0x12                  	// #18
  4460b8:	b	445e00 <nftw@plt+0x43280>
  4460bc:	cmp	w1, #0x63
  4460c0:	b.eq	446394 <nftw@plt+0x43814>  // b.none
  4460c4:	b.hi	445f00 <nftw@plt+0x43380>  // b.pmore
  4460c8:	cmp	w1, #0x56
  4460cc:	b.eq	4462f0 <nftw@plt+0x43770>  // b.none
  4460d0:	cmp	w1, #0x57
  4460d4:	b.ne	446110 <nftw@plt+0x43590>  // b.any
  4460d8:	bl	4457a0 <nftw@plt+0x42c20>
  4460dc:	mov	x2, x0
  4460e0:	mov	x3, #0x0                   	// #0
  4460e4:	mov	x0, x19
  4460e8:	mov	w1, #0x15                  	// #21
  4460ec:	b	445e00 <nftw@plt+0x43280>
  4460f0:	cmp	w1, #0x41
  4460f4:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  4460f8:	bl	445600 <nftw@plt+0x42a80>
  4460fc:	mov	x2, x0
  446100:	mov	x3, #0x0                   	// #0
  446104:	mov	x0, x19
  446108:	mov	w1, #0x30                  	// #48
  44610c:	b	445e00 <nftw@plt+0x43280>
  446110:	cmp	w1, #0x54
  446114:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  446118:	add	w3, w3, #0xa
  44611c:	str	w3, [x0, #72]
  446120:	bl	442f58 <nftw@plt+0x403d8>
  446124:	mov	x2, x0
  446128:	mov	x3, #0x0                   	// #0
  44612c:	mov	x0, x19
  446130:	mov	w1, #0xa                   	// #10
  446134:	b	445e00 <nftw@plt+0x43280>
  446138:	ldr	x20, [x20, #8]
  44613c:	b	445e38 <nftw@plt+0x432b8>
  446140:	ldr	x3, [x20, #16]
  446144:	mov	x1, #0x1f                  	// #31
  446148:	mov	x2, #0x1                   	// #1
  44614c:	movk	x1, #0x1a, lsl #48
  446150:	ldr	w0, [x3]
  446154:	sub	w0, w0, #0x1c
  446158:	cmp	w0, #0x34
  44615c:	b.hi	445e5c <nftw@plt+0x432dc>  // b.pmore
  446160:	lsl	x0, x2, x0
  446164:	tst	x0, x1
  446168:	b.eq	445e5c <nftw@plt+0x432dc>  // b.none
  44616c:	ldr	x3, [x3, #8]
  446170:	str	x3, [x20, #16]
  446174:	ldr	w0, [x3]
  446178:	sub	w0, w0, #0x1c
  44617c:	cmp	w0, #0x34
  446180:	b.ls	446160 <nftw@plt+0x435e0>  // b.plast
  446184:	b	445e5c <nftw@plt+0x432dc>
  446188:	mov	w1, #0x0                   	// #0
  44618c:	mov	x0, x19
  446190:	bl	445d58 <nftw@plt+0x431d8>
  446194:	mov	x2, x0
  446198:	mov	x3, #0x0                   	// #0
  44619c:	mov	x0, x19
  4461a0:	mov	w1, #0x10                  	// #16
  4461a4:	b	445e00 <nftw@plt+0x43280>
  4461a8:	ldr	x1, [x4, #8]
  4461ac:	cbz	x1, 4461d8 <nftw@plt+0x43658>
  4461b0:	ldr	w0, [x1]
  4461b4:	sub	w2, w0, #0x1
  4461b8:	cmp	w0, #0x8
  4461bc:	b.hi	4461e0 <nftw@plt+0x43660>  // b.pmore
  4461c0:	cmp	w0, #0x6
  4461c4:	b.hi	445eb8 <nftw@plt+0x43338>  // b.pmore
  4461c8:	cmp	w2, #0x1
  4461cc:	b.hi	4461d8 <nftw@plt+0x43658>  // b.pmore
  4461d0:	ldr	x1, [x1, #16]
  4461d4:	cbnz	x1, 4461b0 <nftw@plt+0x43630>
  4461d8:	mov	w1, #0x1                   	// #1
  4461dc:	b	445ebc <nftw@plt+0x4333c>
  4461e0:	cmp	w0, #0x35
  4461e4:	cset	w1, ne  // ne = any
  4461e8:	b	445ebc <nftw@plt+0x4333c>
  4461ec:	mov	x1, #0x1                   	// #1
  4461f0:	b	4461f8 <nftw@plt+0x43678>
  4461f4:	mov	x1, x4
  4461f8:	cmp	w9, w1
  4461fc:	mov	w5, w1
  446200:	b.le	446218 <nftw@plt+0x43698>
  446204:	ldrb	w3, [x8, x1]
  446208:	add	x4, x1, #0x1
  44620c:	cmp	w3, #0x24
  446210:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  446214:	b.ne	4461f4 <nftw@plt+0x43674>  // b.any
  446218:	ldp	w3, w0, [x19, #40]
  44621c:	cmp	w3, w0
  446220:	b.ge	4462dc <nftw@plt+0x4375c>  // b.tcont
  446224:	ldr	x4, [x19, #32]
  446228:	add	w0, w3, #0x1
  44622c:	sub	w9, w9, w5
  446230:	smaddl	x3, w3, w11, x4
  446234:	str	wzr, [x3, #4]
  446238:	str	w0, [x19, #40]
  44623c:	stp	xzr, x8, [x3]
  446240:	ldr	x8, [x19, #24]
  446244:	str	w5, [x3, #16]
  446248:	add	x8, x8, x1
  44624c:	str	x8, [x19, #24]
  446250:	b	446044 <nftw@plt+0x434c4>
  446254:	mov	w1, #0x0                   	// #0
  446258:	bl	445d58 <nftw@plt+0x431d8>
  44625c:	mov	x3, #0x0                   	// #0
  446260:	mov	x2, x0
  446264:	mov	w1, #0x17                  	// #23
  446268:	mov	x0, x19
  44626c:	b	445e00 <nftw@plt+0x43280>
  446270:	ldrb	w1, [x2, #2]
  446274:	cbz	w1, 44628c <nftw@plt+0x4370c>
  446278:	add	x1, x2, #0x3
  44627c:	str	x1, [x0, #24]
  446280:	ldrb	w1, [x2, #2]
  446284:	cmp	w1, #0x6e
  446288:	b.eq	44641c <nftw@plt+0x4389c>  // b.none
  44628c:	mov	w1, #0x0                   	// #0
  446290:	mov	x0, x19
  446294:	bl	445d58 <nftw@plt+0x431d8>
  446298:	mov	x2, x0
  44629c:	mov	x3, #0x0                   	// #0
  4462a0:	mov	x0, x19
  4462a4:	mov	w1, #0x49                  	// #73
  4462a8:	b	445e00 <nftw@plt+0x43280>
  4462ac:	bl	4457a0 <nftw@plt+0x42c20>
  4462b0:	mov	x2, x0
  4462b4:	mov	x3, #0x0                   	// #0
  4462b8:	mov	x0, x19
  4462bc:	mov	w1, #0x13                  	// #19
  4462c0:	b	445e00 <nftw@plt+0x43280>
  4462c4:	mov	x2, x3
  4462c8:	b	44605c <nftw@plt+0x434dc>
  4462cc:	mov	w0, #0x2e                  	// #46
  4462d0:	b	446008 <nftw@plt+0x43488>
  4462d4:	mov	w0, #0x2f                  	// #47
  4462d8:	b	446008 <nftw@plt+0x43488>
  4462dc:	ldr	x0, [x19, #24]
  4462e0:	mov	x20, #0x0                   	// #0
  4462e4:	add	x1, x0, x1
  4462e8:	str	x1, [x19, #24]
  4462ec:	b	445e5c <nftw@plt+0x432dc>
  4462f0:	add	w3, w3, #0xf
  4462f4:	str	w3, [x0, #72]
  4462f8:	bl	442f58 <nftw@plt+0x403d8>
  4462fc:	mov	x2, x0
  446300:	mov	x3, #0x0                   	// #0
  446304:	mov	x0, x19
  446308:	mov	w1, #0x9                   	// #9
  44630c:	b	445e00 <nftw@plt+0x43280>
  446310:	bl	442f58 <nftw@plt+0x403d8>
  446314:	mov	x20, x0
  446318:	add	x0, x19, #0x18
  44631c:	bl	43cf18 <nftw@plt+0x3a398>
  446320:	tbnz	w0, #31, 445f18 <nftw@plt+0x43398>
  446324:	ldr	x0, [x19, #24]
  446328:	ldrb	w1, [x0]
  44632c:	cmp	w1, #0x5f
  446330:	b.ne	445f18 <nftw@plt+0x43398>  // b.any
  446334:	add	x0, x0, #0x1
  446338:	str	x0, [x19, #24]
  44633c:	mov	x0, x19
  446340:	bl	442f58 <nftw@plt+0x403d8>
  446344:	mov	x2, x0
  446348:	ldr	w1, [x19, #72]
  44634c:	mov	x3, x20
  446350:	mov	x0, x19
  446354:	add	w1, w1, #0x5
  446358:	str	w1, [x19, #72]
  44635c:	mov	w1, #0xb                   	// #11
  446360:	b	445e00 <nftw@plt+0x43280>
  446364:	bl	4457a0 <nftw@plt+0x42c20>
  446368:	mov	x2, x0
  44636c:	mov	x3, #0x0                   	// #0
  446370:	mov	x0, x19
  446374:	mov	w1, #0x14                  	// #20
  446378:	b	445e00 <nftw@plt+0x43280>
  44637c:	bl	442f58 <nftw@plt+0x403d8>
  446380:	mov	x2, x0
  446384:	mov	x3, #0x0                   	// #0
  446388:	mov	x0, x19
  44638c:	mov	w1, #0xd                   	// #13
  446390:	b	445e00 <nftw@plt+0x43280>
  446394:	mov	w1, #0x0                   	// #0
  446398:	bl	43d5b0 <nftw@plt+0x3aa30>
  44639c:	cbz	w0, 445f18 <nftw@plt+0x43398>
  4463a0:	mov	x0, x19
  4463a4:	mov	w1, #0x0                   	// #0
  4463a8:	bl	43d5b0 <nftw@plt+0x3aa30>
  4463ac:	cbz	w0, 445f18 <nftw@plt+0x43398>
  4463b0:	mov	w1, #0x0                   	// #0
  4463b4:	mov	x0, x19
  4463b8:	bl	445d58 <nftw@plt+0x431d8>
  4463bc:	mov	x2, x0
  4463c0:	mov	x3, #0x0                   	// #0
  4463c4:	mov	x0, x19
  4463c8:	mov	w1, #0x11                  	// #17
  4463cc:	b	445e00 <nftw@plt+0x43280>
  4463d0:	bl	43d5b0 <nftw@plt+0x3aa30>
  4463d4:	cbz	w0, 445f18 <nftw@plt+0x43398>
  4463d8:	mov	w1, #0x0                   	// #0
  4463dc:	mov	x0, x19
  4463e0:	bl	445d58 <nftw@plt+0x431d8>
  4463e4:	mov	x2, x0
  4463e8:	mov	x3, #0x0                   	// #0
  4463ec:	mov	x0, x19
  4463f0:	mov	w1, #0xf                   	// #15
  4463f4:	b	445e00 <nftw@plt+0x43280>
  4463f8:	bl	442f58 <nftw@plt+0x403d8>
  4463fc:	mov	x2, x0
  446400:	mov	x3, #0x0                   	// #0
  446404:	mov	x0, x19
  446408:	mov	w1, #0xc                   	// #12
  44640c:	b	445e00 <nftw@plt+0x43280>
  446410:	mov	x20, #0x0                   	// #0
  446414:	str	x8, [x19, #24]
  446418:	b	445e5c <nftw@plt+0x432dc>
  44641c:	mov	w1, #0x0                   	// #0
  446420:	bl	445d58 <nftw@plt+0x431d8>
  446424:	mov	x3, #0x0                   	// #0
  446428:	mov	x2, x0
  44642c:	mov	w1, #0x4a                  	// #74
  446430:	mov	x0, x19
  446434:	b	445e00 <nftw@plt+0x43280>
  446438:	stp	x29, x30, [sp, #-32]!
  44643c:	mov	x29, sp
  446440:	ldr	x2, [x0, #24]
  446444:	stp	x19, x20, [sp, #16]
  446448:	mov	x19, x0
  44644c:	mov	w20, w1
  446450:	ldrb	w3, [x2]
  446454:	cmp	w3, #0x5f
  446458:	b.eq	446490 <nftw@plt+0x43910>  // b.none
  44645c:	cbnz	w1, 446468 <nftw@plt+0x438e8>
  446460:	cmp	w3, #0x5a
  446464:	b.eq	44647c <nftw@plt+0x438fc>  // b.none
  446468:	mov	x2, #0x0                   	// #0
  44646c:	mov	x0, x2
  446470:	ldp	x19, x20, [sp, #16]
  446474:	ldp	x29, x30, [sp], #32
  446478:	ret
  44647c:	add	x2, x2, #0x1
  446480:	str	x2, [x19, #24]
  446484:	ldp	x19, x20, [sp, #16]
  446488:	ldp	x29, x30, [sp], #32
  44648c:	b	445d58 <nftw@plt+0x431d8>
  446490:	add	x3, x2, #0x1
  446494:	str	x3, [x0, #24]
  446498:	ldrb	w3, [x2, #1]
  44649c:	cmp	w3, #0x5a
  4464a0:	b.ne	446468 <nftw@plt+0x438e8>  // b.any
  4464a4:	add	x2, x2, #0x2
  4464a8:	str	x2, [x0, #24]
  4464ac:	bl	445d58 <nftw@plt+0x431d8>
  4464b0:	mov	x2, x0
  4464b4:	cbz	w20, 44646c <nftw@plt+0x438ec>
  4464b8:	ldr	w0, [x19, #16]
  4464bc:	tbz	w0, #0, 44646c <nftw@plt+0x438ec>
  4464c0:	ldr	x4, [x19, #24]
  4464c4:	mov	w8, #0x18                  	// #24
  4464c8:	ldrb	w0, [x4]
  4464cc:	cmp	w0, #0x2e
  4464d0:	b.ne	44646c <nftw@plt+0x438ec>  // b.any
  4464d4:	ldrb	w1, [x4, #1]
  4464d8:	sub	w0, w1, #0x61
  4464dc:	cmp	w1, #0x5f
  4464e0:	and	w0, w0, #0xff
  4464e4:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  4464e8:	b.ls	4465d4 <nftw@plt+0x43a54>  // b.plast
  4464ec:	nop
  4464f0:	sub	w1, w1, #0x30
  4464f4:	and	w1, w1, #0xff
  4464f8:	cmp	w1, #0x9
  4464fc:	b.hi	44646c <nftw@plt+0x438ec>  // b.pmore
  446500:	ldrb	w0, [x4]
  446504:	mov	x1, x4
  446508:	cmp	w0, #0x2e
  44650c:	b.ne	44655c <nftw@plt+0x439dc>  // b.any
  446510:	ldrb	w3, [x1, #1]
  446514:	sub	w3, w3, #0x30
  446518:	and	w3, w3, #0xff
  44651c:	cmp	w3, #0x9
  446520:	b.hi	44655c <nftw@plt+0x439dc>  // b.pmore
  446524:	ldrb	w0, [x1, #2]
  446528:	add	x1, x1, #0x2
  44652c:	sub	w3, w0, #0x30
  446530:	and	w3, w3, #0xff
  446534:	cmp	w3, #0x9
  446538:	b.hi	446508 <nftw@plt+0x43988>  // b.pmore
  44653c:	nop
  446540:	ldrb	w0, [x1, #1]!
  446544:	sub	w3, w0, #0x30
  446548:	and	w3, w3, #0xff
  44654c:	cmp	w3, #0x9
  446550:	b.ls	446540 <nftw@plt+0x439c0>  // b.plast
  446554:	cmp	w0, #0x2e
  446558:	b.eq	446510 <nftw@plt+0x43990>  // b.none
  44655c:	ldp	w0, w3, [x19, #40]
  446560:	str	x1, [x19, #24]
  446564:	sub	x1, x1, x4
  446568:	cmp	w0, w3
  44656c:	b.ge	4465fc <nftw@plt+0x43a7c>  // b.tcont
  446570:	ldr	x6, [x19, #32]
  446574:	smull	x5, w0, w8
  446578:	add	w0, w0, #0x1
  44657c:	cmp	w1, #0x0
  446580:	add	x3, x6, x5
  446584:	str	wzr, [x3, #4]
  446588:	str	w0, [x19, #40]
  44658c:	b.le	4465fc <nftw@plt+0x43a7c>
  446590:	str	xzr, [x6, x5]
  446594:	str	x4, [x3, #8]
  446598:	str	w1, [x3, #16]
  44659c:	mov	x0, x19
  4465a0:	mov	w1, #0x4e                  	// #78
  4465a4:	bl	43cc98 <nftw@plt+0x3a118>
  4465a8:	mov	x2, x0
  4465ac:	ldr	x4, [x19, #24]
  4465b0:	ldrb	w0, [x4]
  4465b4:	cmp	w0, #0x2e
  4465b8:	b.ne	44646c <nftw@plt+0x438ec>  // b.any
  4465bc:	ldrb	w1, [x4, #1]
  4465c0:	sub	w0, w1, #0x61
  4465c4:	cmp	w1, #0x5f
  4465c8:	and	w0, w0, #0xff
  4465cc:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  4465d0:	b.hi	4464f0 <nftw@plt+0x43970>  // b.pmore
  4465d4:	ldrb	w0, [x4, #2]
  4465d8:	add	x1, x4, #0x2
  4465dc:	b	4465e4 <nftw@plt+0x43a64>
  4465e0:	ldrb	w0, [x1, #1]!
  4465e4:	sub	w3, w0, #0x61
  4465e8:	cmp	w0, #0x5f
  4465ec:	and	w3, w3, #0xff
  4465f0:	ccmp	w3, #0x19, #0x0, ne  // ne = any
  4465f4:	b.ls	4465e0 <nftw@plt+0x43a60>  // b.plast
  4465f8:	b	446508 <nftw@plt+0x43988>
  4465fc:	mov	x3, #0x0                   	// #0
  446600:	b	44659c <nftw@plt+0x43a1c>
  446604:	nop
  446608:	ldr	x1, [x0, #24]
  44660c:	ldrb	w2, [x1]
  446610:	cmp	w2, #0x4c
  446614:	b.ne	4466e8 <nftw@plt+0x43b68>  // b.any
  446618:	stp	x29, x30, [sp, #-32]!
  44661c:	add	x2, x1, #0x1
  446620:	mov	x29, sp
  446624:	str	x19, [sp, #16]
  446628:	mov	x19, x0
  44662c:	str	x2, [x0, #24]
  446630:	mov	w2, #0x5a                  	// #90
  446634:	ldrb	w1, [x1, #1]
  446638:	cmp	w1, #0x5f
  44663c:	ccmp	w1, w2, #0x4, ne  // ne = any
  446640:	b.ne	446670 <nftw@plt+0x43af0>  // b.any
  446644:	mov	w1, #0x0                   	// #0
  446648:	bl	446438 <nftw@plt+0x438b8>
  44664c:	ldr	x1, [x19, #24]
  446650:	ldrb	w2, [x1]
  446654:	cmp	w2, #0x45
  446658:	b.ne	4466d8 <nftw@plt+0x43b58>  // b.any
  44665c:	add	x1, x1, #0x1
  446660:	str	x1, [x19, #24]
  446664:	ldr	x19, [sp, #16]
  446668:	ldp	x29, x30, [sp], #32
  44666c:	ret
  446670:	bl	442f58 <nftw@plt+0x403d8>
  446674:	mov	x2, x0
  446678:	cbz	x0, 4466d8 <nftw@plt+0x43b58>
  44667c:	ldr	w0, [x0]
  446680:	cmp	w0, #0x27
  446684:	b.eq	44673c <nftw@plt+0x43bbc>  // b.none
  446688:	ldr	x0, [x19, #24]
  44668c:	mov	w1, #0x3d                  	// #61
  446690:	ldrb	w4, [x0]
  446694:	cmp	w4, #0x6e
  446698:	b.ne	4466b0 <nftw@plt+0x43b30>  // b.any
  44669c:	add	x3, x0, #0x1
  4466a0:	str	x3, [x19, #24]
  4466a4:	mov	w1, #0x3e                  	// #62
  4466a8:	ldrb	w4, [x0, #1]
  4466ac:	mov	x0, x3
  4466b0:	cmp	w4, #0x45
  4466b4:	b.eq	446764 <nftw@plt+0x43be4>  // b.none
  4466b8:	add	x3, x0, #0x1
  4466bc:	b	4466d0 <nftw@plt+0x43b50>
  4466c0:	str	x3, [x19, #24]
  4466c4:	ldrb	w4, [x3], #1
  4466c8:	cmp	w4, #0x45
  4466cc:	b.eq	4466f0 <nftw@plt+0x43b70>  // b.none
  4466d0:	mov	x5, x3
  4466d4:	cbnz	w4, 4466c0 <nftw@plt+0x43b40>
  4466d8:	mov	x0, #0x0                   	// #0
  4466dc:	ldr	x19, [sp, #16]
  4466e0:	ldp	x29, x30, [sp], #32
  4466e4:	ret
  4466e8:	mov	x0, #0x0                   	// #0
  4466ec:	ret
  4466f0:	sub	w5, w5, w0
  4466f4:	ldp	w3, w4, [x19, #40]
  4466f8:	cmp	w3, w4
  4466fc:	b.ge	44675c <nftw@plt+0x43bdc>  // b.tcont
  446700:	mov	w4, #0x18                  	// #24
  446704:	add	w7, w3, #0x1
  446708:	ldr	x6, [x19, #32]
  44670c:	smull	x4, w3, w4
  446710:	cmp	w5, #0x0
  446714:	add	x3, x6, x4
  446718:	str	wzr, [x3, #4]
  44671c:	str	w7, [x19, #40]
  446720:	b.le	44675c <nftw@plt+0x43bdc>
  446724:	str	xzr, [x6, x4]
  446728:	str	x0, [x3, #8]
  44672c:	str	w5, [x3, #16]
  446730:	mov	x0, x19
  446734:	bl	43cc98 <nftw@plt+0x3a118>
  446738:	b	44664c <nftw@plt+0x43acc>
  44673c:	ldr	x0, [x2, #8]
  446740:	ldr	w1, [x0, #28]
  446744:	cbz	w1, 446688 <nftw@plt+0x43b08>
  446748:	ldr	w1, [x0, #8]
  44674c:	ldr	w0, [x19, #72]
  446750:	sub	w0, w0, w1
  446754:	str	w0, [x19, #72]
  446758:	b	446688 <nftw@plt+0x43b08>
  44675c:	mov	x3, #0x0                   	// #0
  446760:	b	446730 <nftw@plt+0x43bb0>
  446764:	mov	w5, #0x0                   	// #0
  446768:	b	4466f4 <nftw@plt+0x43b74>
  44676c:	nop
  446770:	stp	x29, x30, [sp, #-144]!
  446774:	mov	x29, sp
  446778:	stp	x19, x20, [sp, #16]
  44677c:	mov	x19, x0
  446780:	mov	x20, x2
  446784:	str	x21, [sp, #32]
  446788:	mov	x21, x1
  44678c:	str	wzr, [x1]
  446790:	str	wzr, [x2]
  446794:	bl	4024f0 <strlen@plt>
  446798:	lsl	w2, w0, #1
  44679c:	mov	x8, sp
  4467a0:	mov	w7, #0x18                  	// #24
  4467a4:	sbfiz	x4, x0, #3, #32
  4467a8:	add	x5, x19, x0
  4467ac:	add	x4, x4, #0xf
  4467b0:	stp	x19, x5, [x29, #56]
  4467b4:	smsubl	x7, w2, w7, x8
  4467b8:	and	x4, x4, #0xfffffffffffffff0
  4467bc:	mov	x3, x0
  4467c0:	mov	sp, x7
  4467c4:	mov	w6, #0x4000                	// #16384
  4467c8:	mov	x5, sp
  4467cc:	sub	sp, sp, x4
  4467d0:	mov	x4, sp
  4467d4:	add	x0, x29, #0x38
  4467d8:	mov	w1, #0x1                   	// #1
  4467dc:	str	w6, [x29, #72]
  4467e0:	str	x19, [x29, #80]
  4467e4:	str	x5, [x29, #88]
  4467e8:	stp	wzr, w2, [x29, #96]
  4467ec:	str	x4, [x29, #104]
  4467f0:	stp	wzr, w3, [x29, #112]
  4467f4:	stp	xzr, xzr, [x29, #120]
  4467f8:	str	xzr, [x29, #136]
  4467fc:	bl	446438 <nftw@plt+0x438b8>
  446800:	cbz	x0, 446824 <nftw@plt+0x43ca4>
  446804:	ldr	w3, [x0]
  446808:	cmp	w3, #0x7
  44680c:	b.eq	446858 <nftw@plt+0x43cd8>  // b.none
  446810:	b.hi	446878 <nftw@plt+0x43cf8>  // b.pmore
  446814:	sub	w1, w3, #0x3
  446818:	cmp	w3, #0x2
  44681c:	b.hi	44683c <nftw@plt+0x43cbc>  // b.pmore
  446820:	cbnz	w3, 4468a0 <nftw@plt+0x43d20>
  446824:	mov	w0, #0x0                   	// #0
  446828:	mov	sp, x29
  44682c:	ldp	x19, x20, [sp, #16]
  446830:	ldr	x21, [sp, #32]
  446834:	ldp	x29, x30, [sp], #144
  446838:	ret
  44683c:	cmp	w1, #0x1
  446840:	b.hi	446824 <nftw@plt+0x43ca4>  // b.pmore
  446844:	ldr	x0, [x0, #8]
  446848:	cbz	x0, 446828 <nftw@plt+0x43ca8>
  44684c:	ldr	w3, [x0]
  446850:	cmp	w3, #0x7
  446854:	b.ne	446810 <nftw@plt+0x43c90>  // b.any
  446858:	ldr	w1, [x0, #8]
  44685c:	mov	w0, #0x1                   	// #1
  446860:	str	w1, [x21]
  446864:	mov	sp, x29
  446868:	ldp	x19, x20, [sp, #16]
  44686c:	ldr	x21, [sp, #32]
  446870:	ldp	x29, x30, [sp], #144
  446874:	ret
  446878:	cmp	w3, #0x8
  44687c:	b.ne	446824 <nftw@plt+0x43ca4>  // b.any
  446880:	ldr	w1, [x0, #8]
  446884:	mov	w0, #0x1                   	// #1
  446888:	str	w1, [x20]
  44688c:	mov	sp, x29
  446890:	ldp	x19, x20, [sp, #16]
  446894:	ldr	x21, [sp, #32]
  446898:	ldp	x29, x30, [sp], #144
  44689c:	ret
  4468a0:	ldr	x0, [x0, #16]
  4468a4:	cbnz	x0, 44684c <nftw@plt+0x43ccc>
  4468a8:	b	446828 <nftw@plt+0x43ca8>
  4468ac:	nop
  4468b0:	stp	x29, x30, [sp, #-416]!
  4468b4:	mov	w4, w0
  4468b8:	mov	x5, x1
  4468bc:	mov	x29, sp
  4468c0:	stp	x19, x20, [sp, #16]
  4468c4:	add	x19, x29, #0x28
  4468c8:	mov	x0, x19
  4468cc:	str	xzr, [x29, #296]
  4468d0:	strb	wzr, [x29, #304]
  4468d4:	stp	x2, x3, [x29, #312]
  4468d8:	stp	xzr, xzr, [x29, #328]
  4468dc:	stp	xzr, xzr, [x29, #344]
  4468e0:	stp	xzr, xzr, [x29, #360]
  4468e4:	stp	xzr, xzr, [x29, #376]
  4468e8:	stp	xzr, xzr, [x29, #392]
  4468ec:	bl	43cd88 <nftw@plt+0x3a208>
  4468f0:	ldr	w0, [x29, #348]
  4468f4:	cmp	w0, #0x7ff
  4468f8:	b.gt	446900 <nftw@plt+0x43d80>
  4468fc:	str	wzr, [x29, #348]
  446900:	ldr	w7, [x29, #404]
  446904:	mov	w6, #0x1                   	// #1
  446908:	ldr	w3, [x29, #388]
  44690c:	mov	x2, x5
  446910:	mov	x20, sp
  446914:	mov	w1, w4
  446918:	cmp	w3, #0x0
  44691c:	mov	x0, x19
  446920:	csel	w5, w3, w6, gt
  446924:	str	xzr, [x29, #408]
  446928:	mul	w3, w3, w7
  44692c:	str	w3, [x29, #404]
  446930:	sub	sp, sp, w5, sxtw #4
  446934:	cmp	w3, #0x0
  446938:	mov	x4, sp
  44693c:	csel	w3, w3, w6, gt
  446940:	str	x4, [x29, #376]
  446944:	sub	sp, sp, w3, sxtw #4
  446948:	mov	x3, sp
  44694c:	str	x3, [x29, #392]
  446950:	bl	441798 <nftw@plt+0x3ec18>
  446954:	mov	sp, x20
  446958:	ldr	x1, [x29, #296]
  44695c:	mov	x0, x19
  446960:	ldp	x3, x2, [x29, #312]
  446964:	strb	wzr, [x19, x1]
  446968:	blr	x3
  44696c:	ldr	w0, [x29, #344]
  446970:	mov	sp, x29
  446974:	cmp	w0, #0x0
  446978:	cset	w0, eq  // eq = none
  44697c:	ldp	x19, x20, [sp, #16]
  446980:	ldp	x29, x30, [sp], #416
  446984:	ret
  446988:	stp	x29, x30, [sp, #-192]!
  44698c:	mov	x29, sp
  446990:	stp	x19, x20, [sp, #16]
  446994:	mov	x19, x0
  446998:	mov	w20, w1
  44699c:	stp	x21, x22, [sp, #32]
  4469a0:	mov	x21, x2
  4469a4:	mov	x22, x3
  4469a8:	stp	x23, x24, [sp, #48]
  4469ac:	stp	x25, x26, [sp, #64]
  4469b0:	str	x27, [sp, #80]
  4469b4:	ldrb	w0, [x0]
  4469b8:	cmp	w0, #0x5f
  4469bc:	b.eq	446ba4 <nftw@plt+0x44024>  // b.none
  4469c0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4469c4:	mov	x0, x19
  4469c8:	add	x1, x1, #0x6c0
  4469cc:	mov	x2, #0x8                   	// #8
  4469d0:	bl	4026a0 <strncmp@plt>
  4469d4:	cbz	w0, 446b34 <nftw@plt+0x43fb4>
  4469d8:	mov	w23, #0x0                   	// #0
  4469dc:	tbz	w20, #4, 446b80 <nftw@plt+0x44000>
  4469e0:	mov	x0, x19
  4469e4:	bl	4024f0 <strlen@plt>
  4469e8:	add	x1, x19, x0
  4469ec:	lsl	w3, w0, #1
  4469f0:	stp	x19, x1, [x29, #104]
  4469f4:	cmp	w3, #0x800
  4469f8:	and	w1, w20, #0x40000
  4469fc:	str	w20, [x29, #120]
  446a00:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
  446a04:	str	x19, [x29, #128]
  446a08:	stp	wzr, w3, [x29, #144]
  446a0c:	stp	wzr, w0, [x29, #160]
  446a10:	stp	xzr, xzr, [x29, #168]
  446a14:	str	xzr, [x29, #184]
  446a18:	b.eq	446b80 <nftw@plt+0x44000>  // b.none
  446a1c:	mov	x26, sp
  446a20:	mov	w1, #0x18                  	// #24
  446a24:	sbfiz	x4, x0, #3, #32
  446a28:	cmp	w23, #0x1
  446a2c:	add	x4, x4, #0xf
  446a30:	smsubl	x0, w3, w1, x26
  446a34:	and	x4, x4, #0xfffffffffffffff0
  446a38:	mov	sp, x0
  446a3c:	mov	x24, sp
  446a40:	sub	sp, sp, x4
  446a44:	mov	x0, sp
  446a48:	str	x24, [x29, #136]
  446a4c:	str	x0, [x29, #152]
  446a50:	b.eq	446be4 <nftw@plt+0x44064>  // b.none
  446a54:	sub	w0, w23, #0x2
  446a58:	cmp	w0, #0x1
  446a5c:	b.hi	446bf8 <nftw@plt+0x44078>  // b.pmore
  446a60:	cmp	w23, #0x2
  446a64:	ldrb	w0, [x19, #11]
  446a68:	add	x25, x19, #0xb
  446a6c:	str	x25, [x29, #128]
  446a70:	cset	w1, ne  // ne = any
  446a74:	cmp	w0, #0x5f
  446a78:	add	w23, w1, #0x44
  446a7c:	b.eq	446bb8 <nftw@plt+0x44038>  // b.none
  446a80:	cmp	w3, #0x0
  446a84:	b.le	446c08 <nftw@plt+0x44088>
  446a88:	mov	x0, x25
  446a8c:	bl	4024f0 <strlen@plt>
  446a90:	mov	w1, #0x1                   	// #1
  446a94:	str	wzr, [x24, #4]
  446a98:	str	w1, [x29, #144]
  446a9c:	cmp	w0, #0x0
  446aa0:	b.le	446c08 <nftw@plt+0x44088>
  446aa4:	add	x27, x29, #0x68
  446aa8:	str	wzr, [x24]
  446aac:	str	x25, [x24, #8]
  446ab0:	str	w0, [x24, #16]
  446ab4:	mov	w1, w23
  446ab8:	mov	x2, x24
  446abc:	mov	x3, #0x0                   	// #0
  446ac0:	mov	x0, x27
  446ac4:	bl	43cc98 <nftw@plt+0x3a118>
  446ac8:	mov	x19, x0
  446acc:	ldr	x23, [x29, #128]
  446ad0:	mov	x0, x23
  446ad4:	bl	4024f0 <strlen@plt>
  446ad8:	add	x23, x23, x0
  446adc:	str	x23, [x29, #128]
  446ae0:	tbz	w20, #0, 446af4 <nftw@plt+0x43f74>
  446ae4:	ldr	x1, [x29, #128]
  446ae8:	mov	w0, #0x0                   	// #0
  446aec:	ldrb	w1, [x1]
  446af0:	cbnz	w1, 446b10 <nftw@plt+0x43f90>
  446af4:	mov	w0, #0x0                   	// #0
  446af8:	cbz	x19, 446b10 <nftw@plt+0x43f90>
  446afc:	mov	x3, x22
  446b00:	mov	x2, x21
  446b04:	mov	x1, x19
  446b08:	mov	w0, w20
  446b0c:	bl	4468b0 <nftw@plt+0x43d30>
  446b10:	mov	sp, x26
  446b14:	mov	sp, x29
  446b18:	ldp	x19, x20, [sp, #16]
  446b1c:	ldp	x21, x22, [sp, #32]
  446b20:	ldp	x23, x24, [sp, #48]
  446b24:	ldp	x25, x26, [sp, #64]
  446b28:	ldr	x27, [sp, #80]
  446b2c:	ldp	x29, x30, [sp], #192
  446b30:	ret
  446b34:	ldrb	w0, [x19, #8]
  446b38:	mov	w2, #0x5f                  	// #95
  446b3c:	mov	w1, #0x24                  	// #36
  446b40:	cmp	w0, #0x2e
  446b44:	ccmp	w0, w2, #0x4, ne  // ne = any
  446b48:	ccmp	w0, w1, #0x4, ne  // ne = any
  446b4c:	b.ne	4469d8 <nftw@plt+0x43e58>  // b.any
  446b50:	ldrb	w0, [x19, #9]
  446b54:	mov	w1, #0x49                  	// #73
  446b58:	cmp	w0, #0x44
  446b5c:	ccmp	w0, w1, #0x4, ne  // ne = any
  446b60:	b.ne	4469d8 <nftw@plt+0x43e58>  // b.any
  446b64:	ldrb	w1, [x19, #10]
  446b68:	cmp	w1, w2
  446b6c:	b.ne	4469d8 <nftw@plt+0x43e58>  // b.any
  446b70:	cmp	w0, #0x49
  446b74:	cset	w23, ne  // ne = any
  446b78:	add	w23, w23, #0x2
  446b7c:	b	4469e0 <nftw@plt+0x43e60>
  446b80:	mov	sp, x29
  446b84:	mov	w0, #0x0                   	// #0
  446b88:	ldp	x19, x20, [sp, #16]
  446b8c:	ldp	x21, x22, [sp, #32]
  446b90:	ldp	x23, x24, [sp, #48]
  446b94:	ldp	x25, x26, [sp, #64]
  446b98:	ldr	x27, [sp, #80]
  446b9c:	ldp	x29, x30, [sp], #192
  446ba0:	ret
  446ba4:	ldrb	w0, [x19, #1]
  446ba8:	cmp	w0, #0x5a
  446bac:	b.ne	4469c0 <nftw@plt+0x43e40>  // b.any
  446bb0:	mov	w23, #0x1                   	// #1
  446bb4:	b	4469e0 <nftw@plt+0x43e60>
  446bb8:	ldrb	w0, [x19, #12]
  446bbc:	cmp	w0, #0x5a
  446bc0:	b.ne	446a80 <nftw@plt+0x43f00>  // b.any
  446bc4:	add	x27, x29, #0x68
  446bc8:	add	x19, x19, #0xd
  446bcc:	mov	x0, x27
  446bd0:	mov	w1, #0x0                   	// #0
  446bd4:	str	x19, [x29, #128]
  446bd8:	bl	445d58 <nftw@plt+0x431d8>
  446bdc:	mov	x24, x0
  446be0:	b	446ab4 <nftw@plt+0x43f34>
  446be4:	mov	w1, w23
  446be8:	add	x0, x29, #0x68
  446bec:	bl	446438 <nftw@plt+0x438b8>
  446bf0:	mov	x19, x0
  446bf4:	b	446ae0 <nftw@plt+0x43f60>
  446bf8:	add	x0, x29, #0x68
  446bfc:	bl	442f58 <nftw@plt+0x403d8>
  446c00:	mov	x19, x0
  446c04:	b	446ae0 <nftw@plt+0x43f60>
  446c08:	add	x27, x29, #0x68
  446c0c:	mov	x24, #0x0                   	// #0
  446c10:	b	446ab4 <nftw@plt+0x43f34>
  446c14:	nop
  446c18:	stp	x29, x30, [sp, #-64]!
  446c1c:	adrp	x3, 43d000 <nftw@plt+0x3a480>
  446c20:	mov	x29, sp
  446c24:	str	x19, [sp, #16]
  446c28:	mov	x19, x2
  446c2c:	add	x2, x3, #0x8a0
  446c30:	add	x3, sp, #0x20
  446c34:	stp	xzr, xzr, [sp, #32]
  446c38:	str	xzr, [sp, #48]
  446c3c:	str	wzr, [sp, #56]
  446c40:	bl	446988 <nftw@plt+0x43e08>
  446c44:	cbz	w0, 446c6c <nftw@plt+0x440ec>
  446c48:	ldr	w2, [sp, #56]
  446c4c:	ldr	x1, [sp, #48]
  446c50:	cmp	w2, #0x0
  446c54:	ldr	x0, [sp, #32]
  446c58:	csinc	x1, x1, xzr, eq  // eq = none
  446c5c:	str	x1, [x19]
  446c60:	ldr	x19, [sp, #16]
  446c64:	ldp	x29, x30, [sp], #64
  446c68:	ret
  446c6c:	ldr	x0, [sp, #32]
  446c70:	bl	402910 <free@plt>
  446c74:	str	xzr, [x19]
  446c78:	mov	x0, #0x0                   	// #0
  446c7c:	b	446c60 <nftw@plt+0x440e0>
  446c80:	stp	x29, x30, [sp, #-96]!
  446c84:	mov	x29, sp
  446c88:	stp	x19, x20, [sp, #16]
  446c8c:	mov	w19, w0
  446c90:	str	x21, [sp, #32]
  446c94:	mov	x21, x3
  446c98:	stp	xzr, xzr, [sp, #64]
  446c9c:	str	xzr, [sp, #80]
  446ca0:	str	wzr, [sp, #88]
  446ca4:	cbnz	w2, 446ce8 <nftw@plt+0x44168>
  446ca8:	adrp	x2, 43d000 <nftw@plt+0x3a480>
  446cac:	mov	w0, w19
  446cb0:	add	x3, sp, #0x40
  446cb4:	add	x2, x2, #0x8a0
  446cb8:	bl	4468b0 <nftw@plt+0x43d30>
  446cbc:	cbz	w0, 446d24 <nftw@plt+0x441a4>
  446cc0:	ldr	w2, [sp, #88]
  446cc4:	ldr	x1, [sp, #80]
  446cc8:	cmp	w2, #0x0
  446ccc:	ldr	x0, [sp, #64]
  446cd0:	csinc	x1, x1, xzr, eq  // eq = none
  446cd4:	str	x1, [x21]
  446cd8:	ldp	x19, x20, [sp, #16]
  446cdc:	ldr	x21, [sp, #32]
  446ce0:	ldp	x29, x30, [sp], #96
  446ce4:	ret
  446ce8:	sxtw	x0, w2
  446cec:	mov	x20, #0x2                   	// #2
  446cf0:	cmp	x0, #0x2
  446cf4:	b.ls	446d04 <nftw@plt+0x44184>  // b.plast
  446cf8:	lsl	x20, x20, #1
  446cfc:	cmp	x0, x20
  446d00:	b.hi	446cf8 <nftw@plt+0x44178>  // b.pmore
  446d04:	mov	x0, x20
  446d08:	str	x1, [sp, #56]
  446d0c:	bl	402670 <malloc@plt>
  446d10:	ldr	x1, [sp, #56]
  446d14:	cbz	x0, 446d38 <nftw@plt+0x441b8>
  446d18:	str	x0, [sp, #64]
  446d1c:	str	x20, [sp, #80]
  446d20:	b	446ca8 <nftw@plt+0x44128>
  446d24:	ldr	x0, [sp, #64]
  446d28:	bl	402910 <free@plt>
  446d2c:	str	xzr, [x21]
  446d30:	mov	x0, #0x0                   	// #0
  446d34:	b	446cd8 <nftw@plt+0x44158>
  446d38:	mov	w0, #0x1                   	// #1
  446d3c:	str	w0, [sp, #88]
  446d40:	b	446ca8 <nftw@plt+0x44128>
  446d44:	nop
  446d48:	lsl	w4, w2, #1
  446d4c:	add	x5, x0, x2
  446d50:	stp	x0, x5, [x3]
  446d54:	str	w1, [x3, #16]
  446d58:	str	x0, [x3, #24]
  446d5c:	stp	wzr, w4, [x3, #40]
  446d60:	stp	wzr, w2, [x3, #56]
  446d64:	stp	xzr, xzr, [x3, #64]
  446d68:	str	xzr, [x3, #80]
  446d6c:	ret
  446d70:	stp	x29, x30, [sp, #-32]!
  446d74:	mov	x29, sp
  446d78:	add	x2, sp, #0x18
  446d7c:	bl	446c18 <nftw@plt+0x44098>
  446d80:	ldp	x29, x30, [sp], #32
  446d84:	ret
  446d88:	b	446988 <nftw@plt+0x43e08>
  446d8c:	nop
  446d90:	stp	x29, x30, [sp, #-32]!
  446d94:	mov	w1, #0x25                  	// #37
  446d98:	mov	x29, sp
  446d9c:	add	x2, sp, #0x18
  446da0:	bl	446c18 <nftw@plt+0x44098>
  446da4:	ldp	x29, x30, [sp], #32
  446da8:	ret
  446dac:	nop
  446db0:	mov	x3, x2
  446db4:	mov	x2, x1
  446db8:	mov	w1, #0x25                  	// #37
  446dbc:	b	446988 <nftw@plt+0x43e08>
  446dc0:	stp	x29, x30, [sp, #-32]!
  446dc4:	mov	x29, sp
  446dc8:	add	x2, sp, #0x1c
  446dcc:	add	x1, sp, #0x18
  446dd0:	bl	446770 <nftw@plt+0x43bf0>
  446dd4:	cmp	w0, #0x0
  446dd8:	ldr	w1, [sp, #24]
  446ddc:	ldp	x29, x30, [sp], #32
  446de0:	csel	w0, w1, wzr, ne  // ne = any
  446de4:	ret
  446de8:	stp	x29, x30, [sp, #-32]!
  446dec:	mov	x29, sp
  446df0:	add	x2, sp, #0x1c
  446df4:	add	x1, sp, #0x18
  446df8:	bl	446770 <nftw@plt+0x43bf0>
  446dfc:	cmp	w0, #0x0
  446e00:	ldr	w1, [sp, #28]
  446e04:	ldp	x29, x30, [sp], #32
  446e08:	csel	w0, w1, wzr, ne  // ne = any
  446e0c:	ret
  446e10:	mov	x2, #0x2301                	// #8961
  446e14:	mov	x1, #0xdcfe                	// #56574
  446e18:	movk	x2, #0x6745, lsl #16
  446e1c:	movk	x1, #0x98ba, lsl #16
  446e20:	movk	x2, #0xab89, lsl #32
  446e24:	movk	x1, #0x5476, lsl #32
  446e28:	movk	x2, #0xefcd, lsl #48
  446e2c:	movk	x1, #0x1032, lsl #48
  446e30:	stp	x2, x1, [x0]
  446e34:	str	xzr, [x0, #16]
  446e38:	str	wzr, [x0, #24]
  446e3c:	ret
  446e40:	mov	x2, x0
  446e44:	mov	x0, x1
  446e48:	ldp	x3, x1, [x2]
  446e4c:	stp	x3, x1, [x0]
  446e50:	ret
  446e54:	nop
  446e58:	stp	x29, x30, [sp, #-112]!
  446e5c:	and	x3, x1, #0xfffffffffffffffc
  446e60:	add	x6, x0, x3
  446e64:	mov	x29, sp
  446e68:	ldp	w4, w3, [x2, #16]
  446e6c:	lsr	x5, x1, #32
  446e70:	stp	x27, x28, [sp, #80]
  446e74:	add	w4, w4, w1
  446e78:	add	w3, w3, w5
  446e7c:	cmp	x1, w4, uxtw
  446e80:	cinc	w1, w3, hi  // hi = pmore
  446e84:	stp	w4, w1, [x2, #16]
  446e88:	ldp	w28, w10, [x2]
  446e8c:	cmp	x0, x6
  446e90:	ldp	w11, w12, [x2, #8]
  446e94:	b.cs	447874 <nftw@plt+0x44cf4>  // b.hs, b.nlast
  446e98:	mov	x27, x6
  446e9c:	stp	x19, x20, [sp, #16]
  446ea0:	stp	x21, x22, [sp, #32]
  446ea4:	stp	x23, x24, [sp, #48]
  446ea8:	stp	x25, x26, [sp, #64]
  446eac:	str	x2, [sp, #104]
  446eb0:	ldp	w26, w20, [x0]
  446eb4:	eor	w3, w11, w12
  446eb8:	and	w3, w3, w10
  446ebc:	mov	w1, #0xa478                	// #42104
  446ec0:	eor	w3, w3, w12
  446ec4:	movk	w1, #0xd76a, lsl #16
  446ec8:	add	w3, w3, w26
  446ecc:	add	w1, w28, w1
  446ed0:	add	w3, w3, w1
  446ed4:	eor	w2, w10, w11
  446ed8:	mov	w1, #0xb756                	// #46934
  446edc:	mov	w4, #0x70db                	// #28891
  446ee0:	movk	w1, #0xe8c7, lsl #16
  446ee4:	ror	w3, w3, #25
  446ee8:	add	w3, w3, w10
  446eec:	add	w1, w12, w1
  446ef0:	and	w2, w2, w3
  446ef4:	eor	w22, w3, w10
  446ef8:	eor	w2, w2, w11
  446efc:	movk	w4, #0x2420, lsl #16
  446f00:	add	w2, w2, w20
  446f04:	add	w4, w11, w4
  446f08:	add	w2, w2, w1
  446f0c:	mov	w1, #0xfaf                 	// #4015
  446f10:	ldp	w13, w21, [x0, #8]
  446f14:	ror	w2, w2, #20
  446f18:	add	w2, w3, w2
  446f1c:	movk	w1, #0xf57c, lsl #16
  446f20:	and	w22, w22, w2
  446f24:	mov	w5, #0xceee                	// #52974
  446f28:	ldp	w15, w23, [x0, #16]
  446f2c:	eor	w22, w22, w10
  446f30:	add	w22, w22, w13
  446f34:	movk	w5, #0xc1bd, lsl #16
  446f38:	add	w22, w22, w4
  446f3c:	add	w16, w15, w1
  446f40:	mov	w1, #0xc62a                	// #50730
  446f44:	add	w14, w10, w5
  446f48:	movk	w1, #0x4787, lsl #16
  446f4c:	ror	w22, w22, #15
  446f50:	add	w22, w2, w22
  446f54:	add	w8, w23, w1
  446f58:	eor	w1, w3, w2
  446f5c:	eor	w24, w2, w22
  446f60:	and	w1, w1, w22
  446f64:	mov	w5, #0x4613                	// #17939
  446f68:	eor	w1, w1, w3
  446f6c:	movk	w5, #0xa830, lsl #16
  446f70:	add	w1, w1, w21
  446f74:	mov	w4, #0x9501                	// #38145
  446f78:	add	w1, w1, w14
  446f7c:	movk	w4, #0xfd46, lsl #16
  446f80:	ldp	w17, w25, [x0, #24]
  446f84:	ror	w1, w1, #10
  446f88:	add	w1, w22, w1
  446f8c:	ldr	w7, [x0, #40]
  446f90:	and	w24, w24, w1
  446f94:	add	w6, w17, w5
  446f98:	eor	w24, w24, w2
  446f9c:	add	w18, w25, w4
  446fa0:	add	w3, w24, w3
  446fa4:	eor	w24, w22, w1
  446fa8:	add	w16, w16, w3
  446fac:	mov	w4, #0x98d8                	// #39128
  446fb0:	ldp	w19, w9, [x0, #32]
  446fb4:	ror	w16, w16, #25
  446fb8:	add	w16, w1, w16
  446fbc:	movk	w4, #0x6980, lsl #16
  446fc0:	and	w24, w24, w16
  446fc4:	add	w5, w19, w4
  446fc8:	eor	w24, w24, w22
  446fcc:	mov	w4, #0xf7af                	// #63407
  446fd0:	add	w2, w24, w2
  446fd4:	eor	w24, w1, w16
  446fd8:	add	w8, w8, w2
  446fdc:	movk	w4, #0x8b44, lsl #16
  446fe0:	add	w4, w9, w4
  446fe4:	mov	w3, #0xffff5bb1            	// #-42063
  446fe8:	add	w3, w7, w3
  446fec:	ror	w8, w8, #20
  446ff0:	add	w8, w16, w8
  446ff4:	mov	w2, #0xd7be                	// #55230
  446ff8:	and	w24, w24, w8
  446ffc:	movk	w2, #0x895c, lsl #16
  447000:	eor	w24, w24, w1
  447004:	add	w22, w24, w22
  447008:	eor	w24, w16, w8
  44700c:	add	w6, w6, w22
  447010:	ldp	w14, w22, [x0, #44]
  447014:	ror	w6, w6, #15
  447018:	add	w6, w8, w6
  44701c:	and	w24, w24, w6
  447020:	add	w2, w14, w2
  447024:	eor	w24, w24, w16
  447028:	add	w1, w24, w1
  44702c:	eor	w24, w8, w6
  447030:	add	w1, w18, w1
  447034:	mov	w18, #0x1122                	// #4386
  447038:	movk	w18, #0x6b90, lsl #16
  44703c:	add	w18, w22, w18
  447040:	ror	w1, w1, #10
  447044:	add	w1, w6, w1
  447048:	and	w24, w24, w1
  44704c:	eor	w24, w24, w8
  447050:	add	w16, w24, w16
  447054:	eor	w24, w6, w1
  447058:	add	w5, w5, w16
  44705c:	ldr	w16, [x0, #52]
  447060:	ror	w5, w5, #25
  447064:	add	w5, w1, w5
  447068:	and	w24, w24, w5
  44706c:	eor	w24, w24, w6
  447070:	add	w24, w24, w8
  447074:	eor	w8, w1, w5
  447078:	add	w4, w4, w24
  44707c:	mov	w24, #0x7193                	// #29075
  447080:	movk	w24, #0xfd98, lsl #16
  447084:	add	w30, w16, w24
  447088:	ror	w4, w4, #20
  44708c:	add	w4, w5, w4
  447090:	and	w8, w8, w4
  447094:	eor	w8, w8, w1
  447098:	add	w8, w8, w6
  44709c:	eor	w6, w5, w4
  4470a0:	add	w3, w3, w8
  4470a4:	ror	w3, w3, #15
  4470a8:	add	w3, w4, w3
  4470ac:	and	w6, w6, w3
  4470b0:	eor	w6, w6, w5
  4470b4:	add	w6, w6, w1
  4470b8:	eor	w1, w4, w3
  4470bc:	add	w2, w2, w6
  4470c0:	mov	w6, #0x438e                	// #17294
  4470c4:	movk	w6, #0xa679, lsl #16
  4470c8:	ror	w2, w2, #10
  4470cc:	add	w2, w3, w2
  4470d0:	and	w1, w1, w2
  4470d4:	eor	w1, w1, w4
  4470d8:	add	w5, w1, w5
  4470dc:	add	w5, w18, w5
  4470e0:	ldp	w24, w18, [x0, #56]
  4470e4:	ror	w1, w5, #25
  4470e8:	add	w1, w2, w1
  4470ec:	add	x0, x0, #0x40
  4470f0:	add	w8, w24, w6
  4470f4:	eor	w6, w3, w2
  4470f8:	and	w6, w6, w1
  4470fc:	eor	w5, w2, w1
  447100:	eor	w6, w6, w3
  447104:	cmp	x27, x0
  447108:	add	w4, w6, w4
  44710c:	add	w30, w30, w4
  447110:	mov	w4, #0x821                 	// #2081
  447114:	movk	w4, #0x49b4, lsl #16
  447118:	add	w6, w18, w4
  44711c:	ror	w30, w30, #20
  447120:	add	w30, w1, w30
  447124:	and	w5, w5, w30
  447128:	eor	w4, w1, w30
  44712c:	eor	w5, w5, w2
  447130:	add	w3, w5, w3
  447134:	add	w8, w8, w3
  447138:	mov	w3, #0x2562                	// #9570
  44713c:	movk	w3, #0xf61e, lsl #16
  447140:	add	w5, w20, w3
  447144:	mov	w3, #0xb340                	// #45888
  447148:	ror	w8, w8, #15
  44714c:	add	w8, w30, w8
  447150:	movk	w3, #0xc040, lsl #16
  447154:	and	w4, w4, w8
  447158:	eor	w4, w4, w1
  44715c:	add	w2, w4, w2
  447160:	add	w4, w17, w3
  447164:	add	w6, w6, w2
  447168:	mov	w2, #0x5a51                	// #23121
  44716c:	movk	w2, #0x265e, lsl #16
  447170:	add	w3, w14, w2
  447174:	ror	w6, w6, #10
  447178:	add	w6, w8, w6
  44717c:	eor	w2, w8, w6
  447180:	and	w2, w2, w30
  447184:	eor	w2, w2, w8
  447188:	add	w1, w2, w1
  44718c:	add	w5, w5, w1
  447190:	mov	w1, #0xc7aa                	// #51114
  447194:	movk	w1, #0xe9b6, lsl #16
  447198:	add	w2, w26, w1
  44719c:	ror	w5, w5, #27
  4471a0:	add	w5, w6, w5
  4471a4:	eor	w1, w6, w5
  4471a8:	and	w1, w1, w8
  4471ac:	eor	w1, w1, w6
  4471b0:	add	w30, w1, w30
  4471b4:	mov	w1, #0x105d                	// #4189
  4471b8:	add	w4, w4, w30
  4471bc:	movk	w1, #0xd62f, lsl #16
  4471c0:	add	w30, w23, w1
  4471c4:	ror	w4, w4, #23
  4471c8:	add	w4, w5, w4
  4471cc:	eor	w1, w5, w4
  4471d0:	and	w1, w1, w6
  4471d4:	eor	w1, w1, w5
  4471d8:	add	w8, w1, w8
  4471dc:	mov	w1, #0x1453                	// #5203
  4471e0:	add	w3, w3, w8
  4471e4:	movk	w1, #0x244, lsl #16
  4471e8:	add	w1, w7, w1
  4471ec:	ror	w3, w3, #18
  4471f0:	add	w3, w4, w3
  4471f4:	eor	w8, w4, w3
  4471f8:	and	w8, w8, w5
  4471fc:	eor	w8, w8, w4
  447200:	add	w6, w8, w6
  447204:	add	w2, w2, w6
  447208:	mov	w6, #0xe681                	// #59009
  44720c:	movk	w6, #0xd8a1, lsl #16
  447210:	add	w8, w18, w6
  447214:	ror	w2, w2, #12
  447218:	add	w2, w3, w2
  44721c:	eor	w6, w3, w2
  447220:	and	w6, w6, w4
  447224:	eor	w6, w6, w3
  447228:	add	w5, w6, w5
  44722c:	add	w30, w30, w5
  447230:	mov	w5, #0xfbc8                	// #64456
  447234:	movk	w5, #0xe7d3, lsl #16
  447238:	add	w6, w15, w5
  44723c:	ror	w30, w30, #27
  447240:	add	w30, w2, w30
  447244:	eor	w5, w2, w30
  447248:	and	w5, w5, w3
  44724c:	eor	w5, w5, w2
  447250:	add	w4, w5, w4
  447254:	add	w1, w1, w4
  447258:	mov	w4, #0xcde6                	// #52710
  44725c:	movk	w4, #0x21e1, lsl #16
  447260:	add	w5, w9, w4
  447264:	ror	w1, w1, #23
  447268:	add	w1, w30, w1
  44726c:	eor	w4, w30, w1
  447270:	and	w4, w4, w2
  447274:	eor	w4, w4, w30
  447278:	add	w3, w4, w3
  44727c:	add	w8, w8, w3
  447280:	mov	w3, #0x7d6                 	// #2006
  447284:	movk	w3, #0xc337, lsl #16
  447288:	add	w4, w24, w3
  44728c:	ror	w8, w8, #18
  447290:	add	w8, w1, w8
  447294:	eor	w3, w1, w8
  447298:	and	w3, w3, w30
  44729c:	eor	w3, w3, w1
  4472a0:	add	w2, w3, w2
  4472a4:	mov	w3, #0xd87                 	// #3463
  4472a8:	add	w6, w6, w2
  4472ac:	movk	w3, #0xf4d5, lsl #16
  4472b0:	add	w3, w21, w3
  4472b4:	ror	w6, w6, #12
  4472b8:	add	w6, w8, w6
  4472bc:	eor	w2, w8, w6
  4472c0:	and	w2, w2, w1
  4472c4:	eor	w2, w2, w8
  4472c8:	add	w30, w2, w30
  4472cc:	add	w5, w5, w30
  4472d0:	mov	w30, #0x14ed                	// #5357
  4472d4:	movk	w30, #0x455a, lsl #16
  4472d8:	add	w30, w19, w30
  4472dc:	ror	w5, w5, #27
  4472e0:	add	w5, w6, w5
  4472e4:	eor	w2, w6, w5
  4472e8:	and	w2, w2, w8
  4472ec:	eor	w2, w2, w6
  4472f0:	add	w1, w2, w1
  4472f4:	add	w4, w4, w1
  4472f8:	mov	w1, #0xe905                	// #59653
  4472fc:	movk	w1, #0xa9e3, lsl #16
  447300:	add	w1, w16, w1
  447304:	ror	w4, w4, #23
  447308:	add	w4, w5, w4
  44730c:	eor	w2, w5, w4
  447310:	and	w2, w2, w6
  447314:	eor	w2, w2, w5
  447318:	add	w8, w2, w8
  44731c:	add	w3, w3, w8
  447320:	mov	w8, #0xa3f8                	// #41976
  447324:	movk	w8, #0xfcef, lsl #16
  447328:	add	w8, w13, w8
  44732c:	ror	w3, w3, #18
  447330:	add	w3, w4, w3
  447334:	eor	w2, w4, w3
  447338:	and	w2, w2, w5
  44733c:	eor	w2, w2, w4
  447340:	add	w2, w2, w6
  447344:	add	w2, w30, w2
  447348:	mov	w30, #0x2d9                 	// #729
  44734c:	movk	w30, #0x676f, lsl #16
  447350:	add	w30, w25, w30
  447354:	ror	w2, w2, #12
  447358:	add	w2, w3, w2
  44735c:	eor	w6, w3, w2
  447360:	and	w6, w6, w4
  447364:	eor	w6, w6, w3
  447368:	add	w5, w6, w5
  44736c:	mov	w6, #0x4c8a                	// #19594
  447370:	add	w1, w1, w5
  447374:	movk	w6, #0x8d2a, lsl #16
  447378:	add	w6, w22, w6
  44737c:	ror	w1, w1, #27
  447380:	add	w1, w2, w1
  447384:	eor	w5, w2, w1
  447388:	and	w5, w5, w3
  44738c:	eor	w5, w5, w2
  447390:	add	w4, w5, w4
  447394:	add	w8, w8, w4
  447398:	sub	w4, w23, #0x5c, lsl #12
  44739c:	sub	w4, w4, #0x6be
  4473a0:	ror	w8, w8, #23
  4473a4:	add	w8, w1, w8
  4473a8:	eor	w5, w1, w8
  4473ac:	and	w5, w5, w2
  4473b0:	eor	w5, w5, w1
  4473b4:	add	w3, w5, w3
  4473b8:	add	w30, w30, w3
  4473bc:	ror	w30, w30, #18
  4473c0:	add	w30, w8, w30
  4473c4:	eor	w5, w8, w30
  4473c8:	and	w3, w5, w1
  4473cc:	eor	w3, w3, w8
  4473d0:	add	w2, w3, w2
  4473d4:	mov	w3, #0xf681                	// #63105
  4473d8:	add	w6, w6, w2
  4473dc:	movk	w3, #0x8771, lsl #16
  4473e0:	add	w3, w19, w3
  4473e4:	ror	w6, w6, #12
  4473e8:	add	w6, w30, w6
  4473ec:	eor	w5, w5, w6
  4473f0:	eor	w2, w30, w6
  4473f4:	add	w1, w5, w1
  4473f8:	mov	w5, #0x6122                	// #24866
  4473fc:	add	w4, w4, w1
  447400:	movk	w5, #0x6d9d, lsl #16
  447404:	add	w5, w14, w5
  447408:	ror	w4, w4, #28
  44740c:	add	w4, w6, w4
  447410:	eor	w2, w2, w4
  447414:	eor	w1, w6, w4
  447418:	add	w8, w2, w8
  44741c:	mov	w2, #0x380c                	// #14348
  447420:	add	w3, w3, w8
  447424:	movk	w2, #0xfde5, lsl #16
  447428:	add	w2, w24, w2
  44742c:	ror	w3, w3, #21
  447430:	add	w3, w4, w3
  447434:	eor	w1, w1, w3
  447438:	eor	w8, w4, w3
  44743c:	add	w30, w1, w30
  447440:	mov	w1, #0xea44                	// #59972
  447444:	add	w5, w5, w30
  447448:	movk	w1, #0xa4be, lsl #16
  44744c:	add	w1, w20, w1
  447450:	ror	w5, w5, #16
  447454:	add	w5, w3, w5
  447458:	eor	w8, w8, w5
  44745c:	eor	w30, w3, w5
  447460:	add	w6, w8, w6
  447464:	mov	w8, #0xcfa9                	// #53161
  447468:	add	w2, w2, w6
  44746c:	movk	w8, #0x4bde, lsl #16
  447470:	add	w8, w15, w8
  447474:	ror	w2, w2, #9
  447478:	add	w2, w5, w2
  44747c:	eor	w30, w30, w2
  447480:	eor	w6, w5, w2
  447484:	add	w4, w30, w4
  447488:	mov	w30, #0x4b60                	// #19296
  44748c:	add	w1, w1, w4
  447490:	movk	w30, #0xf6bb, lsl #16
  447494:	add	w30, w25, w30
  447498:	ror	w1, w1, #28
  44749c:	add	w1, w2, w1
  4474a0:	eor	w6, w6, w1
  4474a4:	eor	w4, w2, w1
  4474a8:	add	w3, w6, w3
  4474ac:	mov	w6, #0xbc70                	// #48240
  4474b0:	add	w8, w8, w3
  4474b4:	movk	w6, #0xbebf, lsl #16
  4474b8:	add	w6, w7, w6
  4474bc:	sub	w7, w7, #0x100, lsl #12
  4474c0:	sub	w7, w7, #0xb83
  4474c4:	ror	w8, w8, #21
  4474c8:	add	w8, w1, w8
  4474cc:	eor	w4, w4, w8
  4474d0:	eor	w3, w1, w8
  4474d4:	add	w5, w4, w5
  4474d8:	mov	w4, #0x7ec6                	// #32454
  4474dc:	add	w30, w30, w5
  4474e0:	movk	w4, #0x289b, lsl #16
  4474e4:	add	w4, w16, w4
  4474e8:	ror	w30, w30, #16
  4474ec:	add	w30, w8, w30
  4474f0:	eor	w3, w3, w30
  4474f4:	eor	w5, w8, w30
  4474f8:	add	w2, w3, w2
  4474fc:	mov	w3, #0x27fa                	// #10234
  447500:	add	w6, w6, w2
  447504:	movk	w3, #0xeaa1, lsl #16
  447508:	add	w3, w26, w3
  44750c:	ror	w6, w6, #9
  447510:	add	w6, w30, w6
  447514:	eor	w5, w5, w6
  447518:	eor	w2, w30, w6
  44751c:	add	w1, w5, w1
  447520:	mov	w5, #0x3085                	// #12421
  447524:	add	w4, w4, w1
  447528:	movk	w5, #0xd4ef, lsl #16
  44752c:	add	w5, w21, w5
  447530:	ror	w4, w4, #28
  447534:	add	w4, w6, w4
  447538:	eor	w2, w2, w4
  44753c:	eor	w1, w6, w4
  447540:	add	w8, w2, w8
  447544:	mov	w2, #0x1d05                	// #7429
  447548:	add	w3, w3, w8
  44754c:	movk	w2, #0x488, lsl #16
  447550:	add	w2, w17, w2
  447554:	ror	w3, w3, #21
  447558:	add	w3, w4, w3
  44755c:	eor	w1, w1, w3
  447560:	eor	w8, w4, w3
  447564:	add	w30, w1, w30
  447568:	mov	w1, #0xd039                	// #53305
  44756c:	add	w5, w5, w30
  447570:	movk	w1, #0xd9d4, lsl #16
  447574:	add	w1, w9, w1
  447578:	ror	w5, w5, #16
  44757c:	add	w5, w3, w5
  447580:	eor	w8, w8, w5
  447584:	eor	w30, w3, w5
  447588:	add	w6, w8, w6
  44758c:	mov	w8, #0x99e5                	// #39397
  447590:	add	w2, w2, w6
  447594:	movk	w8, #0xe6db, lsl #16
  447598:	add	w8, w22, w8
  44759c:	ror	w2, w2, #9
  4475a0:	add	w2, w5, w2
  4475a4:	eor	w30, w30, w2
  4475a8:	eor	w6, w5, w2
  4475ac:	add	w4, w30, w4
  4475b0:	mov	w30, #0x7cf8                	// #31992
  4475b4:	add	w1, w1, w4
  4475b8:	movk	w30, #0x1fa2, lsl #16
  4475bc:	add	w30, w18, w30
  4475c0:	ror	w1, w1, #28
  4475c4:	add	w1, w2, w1
  4475c8:	eor	w6, w6, w1
  4475cc:	eor	w4, w2, w1
  4475d0:	add	w3, w6, w3
  4475d4:	mov	w6, #0x5665                	// #22117
  4475d8:	add	w8, w8, w3
  4475dc:	movk	w6, #0xc4ac, lsl #16
  4475e0:	add	w6, w13, w6
  4475e4:	ror	w8, w8, #21
  4475e8:	add	w8, w1, w8
  4475ec:	eor	w4, w4, w8
  4475f0:	eor	w3, w1, w8
  4475f4:	add	w5, w4, w5
  4475f8:	mov	w4, #0x2244                	// #8772
  4475fc:	add	w30, w30, w5
  447600:	movk	w4, #0xf429, lsl #16
  447604:	add	w26, w26, w4
  447608:	mov	w4, #0xff97                	// #65431
  44760c:	movk	w4, #0x432a, lsl #16
  447610:	ror	w30, w30, #16
  447614:	add	w30, w8, w30
  447618:	add	w25, w25, w4
  44761c:	eor	w3, w3, w30
  447620:	mov	w4, #0x23a7                	// #9127
  447624:	add	w2, w3, w2
  447628:	movk	w4, #0xab94, lsl #16
  44762c:	add	w6, w6, w2
  447630:	mov	w2, #0xa039                	// #41017
  447634:	movk	w2, #0xfc93, lsl #16
  447638:	add	w23, w23, w2
  44763c:	mov	w2, #0x59c3                	// #22979
  447640:	ror	w6, w6, #9
  447644:	add	w6, w30, w6
  447648:	movk	w2, #0x655b, lsl #16
  44764c:	add	w22, w22, w2
  447650:	orn	w2, w6, w8
  447654:	eor	w2, w2, w30
  447658:	add	w24, w24, w4
  44765c:	add	w1, w2, w1
  447660:	mov	w3, #0xcc92                	// #52370
  447664:	add	w26, w26, w1
  447668:	mov	w1, #0x7e4f                	// #32335
  44766c:	movk	w1, #0x6fa8, lsl #16
  447670:	add	w19, w19, w1
  447674:	mov	w1, #0xe6e0                	// #59104
  447678:	ror	w26, w26, #26
  44767c:	add	w26, w6, w26
  447680:	movk	w1, #0xfe2c, lsl #16
  447684:	orn	w4, w26, w30
  447688:	add	w18, w18, w1
  44768c:	eor	w4, w4, w6
  447690:	mov	w1, #0x4314                	// #17172
  447694:	movk	w1, #0xa301, lsl #16
  447698:	add	w4, w4, w8
  44769c:	add	w17, w17, w1
  4476a0:	add	w4, w25, w4
  4476a4:	mov	w1, #0x11a1                	// #4513
  4476a8:	movk	w3, #0x8f0c, lsl #16
  4476ac:	movk	w1, #0x4e08, lsl #16
  4476b0:	ror	w4, w4, #22
  4476b4:	add	w16, w16, w1
  4476b8:	mov	w1, #0x7e82                	// #32386
  4476bc:	add	w4, w26, w4
  4476c0:	movk	w1, #0xf753, lsl #16
  4476c4:	add	w15, w15, w1
  4476c8:	orn	w1, w4, w6
  4476cc:	eor	w1, w1, w26
  4476d0:	add	w21, w21, w3
  4476d4:	add	w30, w1, w30
  4476d8:	mov	w1, #0xd2bb                	// #53947
  4476dc:	add	w24, w24, w30
  4476e0:	movk	w1, #0x2ad7, lsl #16
  4476e4:	add	w13, w13, w1
  4476e8:	mov	w1, #0xd391                	// #54161
  4476ec:	movk	w1, #0xeb86, lsl #16
  4476f0:	ror	w24, w24, #17
  4476f4:	add	w24, w4, w24
  4476f8:	add	w9, w9, w1
  4476fc:	orn	w1, w24, w26
  447700:	mov	w2, #0x5dd1                	// #24017
  447704:	eor	w1, w1, w4
  447708:	movk	w2, #0x8584, lsl #16
  44770c:	add	w6, w1, w6
  447710:	add	w20, w20, w2
  447714:	add	w23, w23, w6
  447718:	mov	w2, #0xf235                	// #62005
  44771c:	movk	w2, #0xbd3a, lsl #16
  447720:	add	w14, w14, w2
  447724:	ror	w23, w23, #11
  447728:	add	w23, w24, w23
  44772c:	orn	w1, w23, w4
  447730:	eor	w1, w1, w24
  447734:	add	w26, w1, w26
  447738:	add	w22, w22, w26
  44773c:	ror	w22, w22, #26
  447740:	add	w22, w23, w22
  447744:	orn	w25, w22, w24
  447748:	eor	w25, w25, w23
  44774c:	add	w4, w25, w4
  447750:	add	w21, w21, w4
  447754:	ror	w21, w21, #22
  447758:	add	w21, w22, w21
  44775c:	orn	w1, w21, w23
  447760:	eor	w1, w1, w22
  447764:	add	w24, w1, w24
  447768:	add	w7, w7, w24
  44776c:	ror	w7, w7, #17
  447770:	add	w7, w21, w7
  447774:	orn	w1, w7, w22
  447778:	eor	w1, w1, w21
  44777c:	add	w23, w1, w23
  447780:	add	w20, w20, w23
  447784:	ror	w20, w20, #11
  447788:	add	w20, w7, w20
  44778c:	orn	w1, w20, w21
  447790:	eor	w1, w1, w7
  447794:	add	w22, w1, w22
  447798:	add	w19, w19, w22
  44779c:	ror	w19, w19, #26
  4477a0:	add	w19, w20, w19
  4477a4:	orn	w1, w19, w7
  4477a8:	eor	w1, w1, w20
  4477ac:	add	w21, w1, w21
  4477b0:	add	w18, w18, w21
  4477b4:	ror	w18, w18, #22
  4477b8:	add	w18, w19, w18
  4477bc:	orn	w1, w18, w20
  4477c0:	eor	w1, w1, w19
  4477c4:	add	w7, w1, w7
  4477c8:	add	w17, w17, w7
  4477cc:	ror	w17, w17, #17
  4477d0:	add	w17, w18, w17
  4477d4:	orn	w1, w17, w19
  4477d8:	eor	w1, w1, w18
  4477dc:	add	w20, w1, w20
  4477e0:	add	w16, w16, w20
  4477e4:	ror	w16, w16, #11
  4477e8:	add	w16, w17, w16
  4477ec:	orn	w1, w16, w18
  4477f0:	eor	w1, w1, w17
  4477f4:	add	w19, w1, w19
  4477f8:	add	w15, w15, w19
  4477fc:	ror	w15, w15, #26
  447800:	add	w15, w16, w15
  447804:	orn	w1, w15, w17
  447808:	add	w28, w28, w15
  44780c:	eor	w1, w1, w16
  447810:	add	w18, w1, w18
  447814:	add	w14, w14, w18
  447818:	ror	w14, w14, #22
  44781c:	add	w14, w15, w14
  447820:	orn	w1, w14, w16
  447824:	add	w12, w12, w14
  447828:	eor	w1, w1, w15
  44782c:	add	w17, w1, w17
  447830:	add	w13, w13, w17
  447834:	ror	w13, w13, #17
  447838:	add	w13, w14, w13
  44783c:	orn	w15, w13, w15
  447840:	add	w11, w11, w13
  447844:	eor	w15, w15, w14
  447848:	add	w15, w15, w16
  44784c:	add	w9, w9, w15
  447850:	ror	w9, w9, #11
  447854:	add	w13, w13, w9
  447858:	add	w10, w10, w13
  44785c:	b.hi	446eb0 <nftw@plt+0x44330>  // b.pmore
  447860:	ldp	x19, x20, [sp, #16]
  447864:	ldp	x21, x22, [sp, #32]
  447868:	ldp	x23, x24, [sp, #48]
  44786c:	ldp	x25, x26, [sp, #64]
  447870:	ldr	x2, [sp, #104]
  447874:	stp	w28, w10, [x2]
  447878:	stp	w11, w12, [x2, #8]
  44787c:	ldp	x27, x28, [sp, #80]
  447880:	ldp	x29, x30, [sp], #112
  447884:	ret
  447888:	stp	x29, x30, [sp, #-48]!
  44788c:	mov	x29, sp
  447890:	stp	x19, x20, [sp, #16]
  447894:	mov	x19, x0
  447898:	ldr	w0, [x0, #16]
  44789c:	stp	x21, x22, [sp, #32]
  4478a0:	mov	x22, x1
  4478a4:	ldr	w20, [x19, #24]
  4478a8:	adds	w0, w0, w20
  4478ac:	str	w0, [x19, #16]
  4478b0:	b.cc	4478c0 <nftw@plt+0x44d40>  // b.lo, b.ul, b.last
  4478b4:	ldr	w0, [x19, #20]
  4478b8:	add	w0, w0, #0x1
  4478bc:	str	w0, [x19, #20]
  4478c0:	cmp	w20, #0x38
  4478c4:	mov	w21, w20
  4478c8:	mov	w1, #0x78                  	// #120
  4478cc:	mov	w2, #0x38                  	// #56
  4478d0:	sub	w1, w1, w20
  4478d4:	sub	w2, w2, w20
  4478d8:	csel	x20, x2, x1, cc  // cc = lo, ul, last
  4478dc:	add	x0, x21, #0x1c
  4478e0:	mov	x2, x20
  4478e4:	add	x0, x19, x0
  4478e8:	add	x20, x20, x21
  4478ec:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4478f0:	add	x1, x1, #0xc88
  4478f4:	bl	402490 <memcpy@plt>
  4478f8:	ldr	w5, [x19, #16]
  4478fc:	add	x4, x19, x20
  447900:	add	x1, x20, #0x8
  447904:	mov	x2, x19
  447908:	add	x0, x19, #0x1c
  44790c:	lsl	w3, w5, #3
  447910:	str	w3, [x4, #28]
  447914:	ldr	w3, [x19, #20]
  447918:	extr	w3, w3, w5, #29
  44791c:	str	w3, [x4, #32]
  447920:	bl	446e58 <nftw@plt+0x442d8>
  447924:	ldp	x2, x1, [x19]
  447928:	stp	x2, x1, [x22]
  44792c:	mov	x0, x22
  447930:	ldp	x19, x20, [sp, #16]
  447934:	ldp	x21, x22, [sp, #32]
  447938:	ldp	x29, x30, [sp], #48
  44793c:	ret
  447940:	stp	x29, x30, [sp, #-80]!
  447944:	mov	x29, sp
  447948:	stp	x21, x22, [sp, #32]
  44794c:	mov	x21, x1
  447950:	ldr	w22, [x2, #24]
  447954:	stp	x19, x20, [sp, #16]
  447958:	mov	x19, x0
  44795c:	stp	x23, x24, [sp, #48]
  447960:	mov	x24, x2
  447964:	cbnz	w22, 447a2c <nftw@plt+0x44eac>
  447968:	cmp	x21, #0x40
  44796c:	b.ls	447a14 <nftw@plt+0x44e94>  // b.plast
  447970:	tst	x19, #0x3
  447974:	b.eq	4479fc <nftw@plt+0x44e7c>  // b.none
  447978:	sub	x23, x21, #0x41
  44797c:	add	x20, x24, #0x1c
  447980:	lsr	x23, x23, #6
  447984:	add	x22, x23, #0x1
  447988:	add	x22, x19, x22, lsl #6
  44798c:	nop
  447990:	ldp	x0, x1, [x19]
  447994:	stp	x0, x1, [x20]
  447998:	mov	x2, x24
  44799c:	ldp	x0, x1, [x19, #16]
  4479a0:	stp	x0, x1, [x20, #16]
  4479a4:	ldp	x4, x5, [x19, #32]
  4479a8:	stp	x4, x5, [x20, #32]
  4479ac:	mov	x1, #0x40                  	// #64
  4479b0:	ldp	x4, x5, [x19, #48]
  4479b4:	stp	x4, x5, [x20, #48]
  4479b8:	add	x19, x19, x1
  4479bc:	mov	x0, x20
  4479c0:	bl	446e58 <nftw@plt+0x442d8>
  4479c4:	cmp	x19, x22
  4479c8:	b.ne	447990 <nftw@plt+0x44e10>  // b.any
  4479cc:	sub	x21, x21, #0x40
  4479d0:	sub	x21, x21, x23, lsl #6
  4479d4:	mov	x1, x22
  4479d8:	mov	x2, x21
  4479dc:	mov	x0, x20
  4479e0:	bl	402490 <memcpy@plt>
  4479e4:	str	w21, [x24, #24]
  4479e8:	ldp	x19, x20, [sp, #16]
  4479ec:	ldp	x21, x22, [sp, #32]
  4479f0:	ldp	x23, x24, [sp, #48]
  4479f4:	ldp	x29, x30, [sp], #80
  4479f8:	ret
  4479fc:	and	x1, x21, #0xffffffffffffffc0
  447a00:	mov	x0, x19
  447a04:	and	x21, x21, #0x3f
  447a08:	add	x19, x19, x1
  447a0c:	mov	x2, x24
  447a10:	bl	446e58 <nftw@plt+0x442d8>
  447a14:	cbnz	x21, 447abc <nftw@plt+0x44f3c>
  447a18:	ldp	x19, x20, [sp, #16]
  447a1c:	ldp	x21, x22, [sp, #32]
  447a20:	ldp	x23, x24, [sp, #48]
  447a24:	ldp	x29, x30, [sp], #80
  447a28:	ret
  447a2c:	mov	w3, w22
  447a30:	mov	x20, #0x80                  	// #128
  447a34:	sub	x20, x20, x3
  447a38:	add	x0, x3, #0x1c
  447a3c:	cmp	x20, x1
  447a40:	add	x0, x2, x0
  447a44:	csel	x20, x20, x1, ls  // ls = plast
  447a48:	mov	x1, x19
  447a4c:	add	x23, x3, x20
  447a50:	mov	x2, x20
  447a54:	bl	402490 <memcpy@plt>
  447a58:	ldr	w0, [x24, #24]
  447a5c:	cmp	x23, #0x40
  447a60:	add	w0, w0, w20
  447a64:	str	w0, [x24, #24]
  447a68:	b.hi	447a78 <nftw@plt+0x44ef8>  // b.pmore
  447a6c:	add	x19, x19, x20
  447a70:	sub	x21, x21, x20
  447a74:	b	447968 <nftw@plt+0x44de8>
  447a78:	stp	x25, x26, [sp, #64]
  447a7c:	add	x26, x24, #0x1c
  447a80:	and	x25, x23, #0xffffffffffffffc0
  447a84:	mov	x0, x26
  447a88:	mov	x1, x25
  447a8c:	mov	x2, x24
  447a90:	bl	446e58 <nftw@plt+0x442d8>
  447a94:	add	x1, x25, #0x1c
  447a98:	add	w22, w22, w20
  447a9c:	mov	x0, x26
  447aa0:	add	x1, x24, x1
  447aa4:	and	x2, x23, #0x3f
  447aa8:	and	w22, w22, #0x3f
  447aac:	bl	402490 <memcpy@plt>
  447ab0:	ldp	x25, x26, [sp, #64]
  447ab4:	str	w22, [x24, #24]
  447ab8:	b	447a6c <nftw@plt+0x44eec>
  447abc:	mov	x22, x19
  447ac0:	add	x20, x24, #0x1c
  447ac4:	b	4479d4 <nftw@plt+0x44e54>
  447ac8:	stp	x29, x30, [sp, #-192]!
  447acc:	mov	x4, #0x2301                	// #8961
  447ad0:	mov	x3, #0xdcfe                	// #56574
  447ad4:	movk	x4, #0x6745, lsl #16
  447ad8:	movk	x3, #0x98ba, lsl #16
  447adc:	mov	x29, sp
  447ae0:	movk	x4, #0xab89, lsl #32
  447ae4:	movk	x3, #0x5476, lsl #32
  447ae8:	movk	x4, #0xefcd, lsl #48
  447aec:	movk	x3, #0x1032, lsl #48
  447af0:	str	x19, [sp, #16]
  447af4:	mov	x19, x2
  447af8:	add	x2, sp, #0x20
  447afc:	stp	x4, x3, [sp, #32]
  447b00:	str	xzr, [sp, #48]
  447b04:	str	wzr, [sp, #56]
  447b08:	bl	447940 <nftw@plt+0x44dc0>
  447b0c:	mov	x1, x19
  447b10:	add	x0, sp, #0x20
  447b14:	bl	447888 <nftw@plt+0x44d08>
  447b18:	ldr	x19, [sp, #16]
  447b1c:	ldp	x29, x30, [sp], #192
  447b20:	ret
  447b24:	nop
  447b28:	mov	x12, #0x1120                	// #4384
  447b2c:	sub	sp, sp, x12
  447b30:	mov	x2, #0x2301                	// #8961
  447b34:	movk	x2, #0x6745, lsl #16
  447b38:	stp	x29, x30, [sp]
  447b3c:	mov	x29, sp
  447b40:	movk	x2, #0xab89, lsl #32
  447b44:	movk	x2, #0xefcd, lsl #48
  447b48:	stp	x19, x20, [sp, #16]
  447b4c:	mov	x20, x0
  447b50:	mov	x0, #0xdcfe                	// #56574
  447b54:	movk	x0, #0x98ba, lsl #16
  447b58:	stp	x21, x22, [sp, #32]
  447b5c:	movk	x0, #0x5476, lsl #32
  447b60:	mov	x22, x1
  447b64:	movk	x0, #0x1032, lsl #48
  447b68:	mov	x21, #0x1000                	// #4096
  447b6c:	stp	x2, x0, [sp, #56]
  447b70:	str	xzr, [sp, #72]
  447b74:	str	wzr, [sp, #80]
  447b78:	mov	x19, #0x0                   	// #0
  447b7c:	nop
  447b80:	add	x0, sp, #0xd8
  447b84:	sub	x2, x21, x19
  447b88:	add	x0, x0, x19
  447b8c:	mov	x3, x20
  447b90:	mov	x1, #0x1                   	// #1
  447b94:	bl	4028d0 <fread@plt>
  447b98:	add	x19, x19, x0
  447b9c:	cmp	x19, #0xfff
  447ba0:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  447ba4:	b.ne	447b80 <nftw@plt+0x45000>  // b.any
  447ba8:	cbz	x0, 447bc0 <nftw@plt+0x45040>
  447bac:	add	x2, sp, #0x38
  447bb0:	add	x0, sp, #0xd8
  447bb4:	mov	x1, #0x1000                	// #4096
  447bb8:	bl	446e58 <nftw@plt+0x442d8>
  447bbc:	b	447b78 <nftw@plt+0x44ff8>
  447bc0:	mov	x0, x20
  447bc4:	bl	402b70 <ferror@plt>
  447bc8:	mov	w20, w0
  447bcc:	cbnz	w0, 447c00 <nftw@plt+0x45080>
  447bd0:	add	x21, sp, #0x38
  447bd4:	cbnz	x19, 447c20 <nftw@plt+0x450a0>
  447bd8:	mov	x1, x22
  447bdc:	mov	x0, x21
  447be0:	bl	447888 <nftw@plt+0x44d08>
  447be4:	mov	w0, w20
  447be8:	mov	x12, #0x1120                	// #4384
  447bec:	ldp	x29, x30, [sp]
  447bf0:	ldp	x19, x20, [sp, #16]
  447bf4:	ldp	x21, x22, [sp, #32]
  447bf8:	add	sp, sp, x12
  447bfc:	ret
  447c00:	mov	w20, #0x1                   	// #1
  447c04:	mov	x12, #0x1120                	// #4384
  447c08:	mov	w0, w20
  447c0c:	ldp	x29, x30, [sp]
  447c10:	ldp	x19, x20, [sp, #16]
  447c14:	ldp	x21, x22, [sp, #32]
  447c18:	add	sp, sp, x12
  447c1c:	ret
  447c20:	mov	x1, x19
  447c24:	add	x0, sp, #0xd8
  447c28:	mov	x2, x21
  447c2c:	bl	447940 <nftw@plt+0x44dc0>
  447c30:	b	447bd8 <nftw@plt+0x45058>
  447c34:	nop
  447c38:	stp	x29, x30, [sp, #-48]!
  447c3c:	mov	x29, sp
  447c40:	str	x21, [sp, #32]
  447c44:	cbz	x0, 447ce0 <nftw@plt+0x45160>
  447c48:	stp	x19, x20, [sp, #16]
  447c4c:	mov	x20, x0
  447c50:	ldr	x0, [x0]
  447c54:	cbz	x0, 447cc0 <nftw@plt+0x45140>
  447c58:	sub	x3, x20, #0x8
  447c5c:	mov	x1, #0x1                   	// #1
  447c60:	mov	w0, w1
  447c64:	add	x1, x1, #0x1
  447c68:	ldr	x2, [x3, x1, lsl #3]
  447c6c:	cbnz	x2, 447c60 <nftw@plt+0x450e0>
  447c70:	add	w0, w0, #0x1
  447c74:	sbfiz	x0, x0, #3, #32
  447c78:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  447c7c:	mov	x21, x0
  447c80:	ldr	x0, [x20]
  447c84:	cbz	x0, 447cd8 <nftw@plt+0x45158>
  447c88:	mov	x19, #0x0                   	// #0
  447c8c:	nop
  447c90:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  447c94:	str	x0, [x21, x19]
  447c98:	add	x19, x19, #0x8
  447c9c:	ldr	x0, [x20, x19]
  447ca0:	cbnz	x0, 447c90 <nftw@plt+0x45110>
  447ca4:	add	x19, x21, x19
  447ca8:	str	xzr, [x19]
  447cac:	ldp	x19, x20, [sp, #16]
  447cb0:	mov	x0, x21
  447cb4:	ldr	x21, [sp, #32]
  447cb8:	ldp	x29, x30, [sp], #48
  447cbc:	ret
  447cc0:	mov	x0, #0x8                   	// #8
  447cc4:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  447cc8:	mov	x21, x0
  447ccc:	ldr	x0, [x20]
  447cd0:	cbnz	x0, 447c88 <nftw@plt+0x45108>
  447cd4:	nop
  447cd8:	mov	x19, x21
  447cdc:	b	447ca8 <nftw@plt+0x45128>
  447ce0:	mov	x21, #0x0                   	// #0
  447ce4:	b	447cb0 <nftw@plt+0x45130>
  447ce8:	cbz	x0, 447d24 <nftw@plt+0x451a4>
  447cec:	stp	x29, x30, [sp, #-32]!
  447cf0:	mov	x29, sp
  447cf4:	stp	x19, x20, [sp, #16]
  447cf8:	mov	x20, x0
  447cfc:	ldr	x0, [x0]
  447d00:	cbz	x0, 447d14 <nftw@plt+0x45194>
  447d04:	mov	x19, x20
  447d08:	bl	402910 <free@plt>
  447d0c:	ldr	x0, [x19, #8]!
  447d10:	cbnz	x0, 447d08 <nftw@plt+0x45188>
  447d14:	mov	x0, x20
  447d18:	ldp	x19, x20, [sp, #16]
  447d1c:	ldp	x29, x30, [sp], #32
  447d20:	b	402910 <free@plt>
  447d24:	ret
  447d28:	stp	x29, x30, [sp, #-112]!
  447d2c:	mov	x29, sp
  447d30:	stp	x25, x26, [sp, #64]
  447d34:	mov	x25, #0x0                   	// #0
  447d38:	cbz	x0, 447e5c <nftw@plt+0x452dc>
  447d3c:	stp	x19, x20, [sp, #16]
  447d40:	mov	x19, x0
  447d44:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x205a0>
  447d48:	add	x20, x20, #0x248
  447d4c:	stp	x21, x22, [sp, #32]
  447d50:	mov	x26, #0x0                   	// #0
  447d54:	stp	x23, x24, [sp, #48]
  447d58:	mov	x25, #0x0                   	// #0
  447d5c:	mov	w21, #0x0                   	// #0
  447d60:	stp	x27, x28, [sp, #80]
  447d64:	bl	4024f0 <strlen@plt>
  447d68:	add	x0, x0, #0x1
  447d6c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  447d70:	mov	x22, x0
  447d74:	mov	w27, #0x0                   	// #0
  447d78:	mov	w24, #0x0                   	// #0
  447d7c:	mov	w23, #0x0                   	// #0
  447d80:	ldrb	w0, [x19]
  447d84:	ldrh	w0, [x20, x0, lsl #1]
  447d88:	tbz	w0, #6, 447d9c <nftw@plt+0x4521c>
  447d8c:	nop
  447d90:	ldrb	w1, [x19, #1]!
  447d94:	ldrh	w1, [x20, x1, lsl #1]
  447d98:	tbnz	w1, #6, 447d90 <nftw@plt+0x45210>
  447d9c:	lsl	x2, x26, #3
  447da0:	cbz	w27, 447db4 <nftw@plt+0x45234>
  447da4:	sub	w0, w27, #0x1
  447da8:	add	x28, x25, x2
  447dac:	cmp	w0, w26
  447db0:	b.gt	447ddc <nftw@plt+0x4525c>
  447db4:	str	x2, [sp, #104]
  447db8:	cbz	x25, 447ee4 <nftw@plt+0x45364>
  447dbc:	lsl	w27, w27, #1
  447dc0:	mov	x0, x25
  447dc4:	sbfiz	x1, x27, #3, #32
  447dc8:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  447dcc:	ldr	x2, [sp, #104]
  447dd0:	mov	x25, x0
  447dd4:	add	x28, x25, x2
  447dd8:	str	xzr, [x25, x2]
  447ddc:	ldrb	w1, [x19]
  447de0:	mov	x2, x22
  447de4:	cbz	w1, 447e10 <nftw@plt+0x45290>
  447de8:	ldrh	w3, [x20, w1, sxtw #1]
  447dec:	tbz	w3, #6, 447dfc <nftw@plt+0x4527c>
  447df0:	orr	w3, w24, w23
  447df4:	orr	w3, w3, w21
  447df8:	cbz	w3, 447e6c <nftw@plt+0x452ec>
  447dfc:	cbz	w21, 447e7c <nftw@plt+0x452fc>
  447e00:	mov	w21, #0x0                   	// #0
  447e04:	strb	w1, [x2], #1
  447e08:	ldrb	w1, [x19, #1]!
  447e0c:	cbnz	w1, 447de8 <nftw@plt+0x45268>
  447e10:	strb	wzr, [x2]
  447e14:	mov	x0, x22
  447e18:	bl	449cc0 <_obstack_memory_used@@Base+0x260>
  447e1c:	stp	x0, xzr, [x28]
  447e20:	ldrb	w1, [x19]
  447e24:	ldrh	w0, [x20, w1, sxtw #1]
  447e28:	tbz	w0, #6, 447e3c <nftw@plt+0x452bc>
  447e2c:	nop
  447e30:	ldrb	w1, [x19, #1]!
  447e34:	ldrh	w2, [x20, w1, sxtw #1]
  447e38:	tbnz	w2, #6, 447e30 <nftw@plt+0x452b0>
  447e3c:	add	x26, x26, #0x1
  447e40:	cbnz	w1, 447d80 <nftw@plt+0x45200>
  447e44:	mov	x0, x22
  447e48:	bl	402910 <free@plt>
  447e4c:	ldp	x19, x20, [sp, #16]
  447e50:	ldp	x21, x22, [sp, #32]
  447e54:	ldp	x23, x24, [sp, #48]
  447e58:	ldp	x27, x28, [sp, #80]
  447e5c:	mov	x0, x25
  447e60:	ldp	x25, x26, [sp, #64]
  447e64:	ldp	x29, x30, [sp], #112
  447e68:	ret
  447e6c:	mov	w24, #0x0                   	// #0
  447e70:	mov	w23, #0x0                   	// #0
  447e74:	mov	w21, #0x0                   	// #0
  447e78:	b	447e10 <nftw@plt+0x45290>
  447e7c:	cmp	w1, #0x5c
  447e80:	b.eq	447ea0 <nftw@plt+0x45320>  // b.none
  447e84:	cbz	w23, 447ea8 <nftw@plt+0x45328>
  447e88:	cmp	w1, #0x27
  447e8c:	b.eq	447e98 <nftw@plt+0x45318>  // b.none
  447e90:	strb	w1, [x2], #1
  447e94:	b	447e08 <nftw@plt+0x45288>
  447e98:	mov	w23, #0x0                   	// #0
  447e9c:	b	447e08 <nftw@plt+0x45288>
  447ea0:	mov	w21, #0x1                   	// #1
  447ea4:	b	447e08 <nftw@plt+0x45288>
  447ea8:	cbz	w24, 447ec0 <nftw@plt+0x45340>
  447eac:	mov	w21, w23
  447eb0:	cmp	w1, #0x22
  447eb4:	b.ne	447e90 <nftw@plt+0x45310>  // b.any
  447eb8:	mov	w24, #0x0                   	// #0
  447ebc:	b	447e08 <nftw@plt+0x45288>
  447ec0:	mov	w21, w24
  447ec4:	cmp	w1, #0x27
  447ec8:	mov	w23, #0x1                   	// #1
  447ecc:	b.eq	447e08 <nftw@plt+0x45288>  // b.none
  447ed0:	cmp	w1, #0x22
  447ed4:	b.eq	447efc <nftw@plt+0x4537c>  // b.none
  447ed8:	mov	w23, w24
  447edc:	strb	w1, [x2], #1
  447ee0:	b	447e08 <nftw@plt+0x45288>
  447ee4:	mov	x0, #0x40                  	// #64
  447ee8:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  447eec:	mov	w27, #0x8                   	// #8
  447ef0:	mov	x25, x0
  447ef4:	ldr	x2, [sp, #104]
  447ef8:	b	447dd4 <nftw@plt+0x45254>
  447efc:	mov	w23, w24
  447f00:	mov	w24, #0x1                   	// #1
  447f04:	b	447e08 <nftw@plt+0x45288>
  447f08:	cbz	x1, 447fe0 <nftw@plt+0x45460>
  447f0c:	stp	x29, x30, [sp, #-80]!
  447f10:	mov	x29, sp
  447f14:	stp	x21, x22, [sp, #32]
  447f18:	ldr	x21, [x0]
  447f1c:	stp	x23, x24, [sp, #48]
  447f20:	mov	x24, x0
  447f24:	cbz	x21, 447fd8 <nftw@plt+0x45458>
  447f28:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x205a0>
  447f2c:	add	x22, x22, #0x248
  447f30:	stp	x19, x20, [sp, #16]
  447f34:	mov	x20, x1
  447f38:	mov	w23, #0x22                  	// #34
  447f3c:	str	x25, [sp, #64]
  447f40:	mov	w25, #0x27                  	// #39
  447f44:	ldrb	w19, [x21]
  447f48:	cbnz	w19, 447f58 <nftw@plt+0x453d8>
  447f4c:	b	447fb4 <nftw@plt+0x45434>
  447f50:	ldrb	w19, [x21, #1]!
  447f54:	cbz	w19, 447fb4 <nftw@plt+0x45434>
  447f58:	ldrh	w2, [x22, w19, sxtw #1]
  447f5c:	mov	x1, x20
  447f60:	mov	w0, #0x5c                  	// #92
  447f64:	tbnz	w2, #6, 447f78 <nftw@plt+0x453f8>
  447f68:	cmp	w19, w0
  447f6c:	ccmp	w19, w25, #0x4, ne  // ne = any
  447f70:	ccmp	w19, w23, #0x4, ne  // ne = any
  447f74:	b.ne	447f84 <nftw@plt+0x45404>  // b.any
  447f78:	bl	4025e0 <fputc@plt>
  447f7c:	cmn	w0, #0x1
  447f80:	b.eq	447f98 <nftw@plt+0x45418>  // b.none
  447f84:	mov	w0, w19
  447f88:	mov	x1, x20
  447f8c:	bl	4025e0 <fputc@plt>
  447f90:	cmn	w0, #0x1
  447f94:	b.ne	447f50 <nftw@plt+0x453d0>  // b.any
  447f98:	ldp	x19, x20, [sp, #16]
  447f9c:	mov	w0, #0x1                   	// #1
  447fa0:	ldr	x25, [sp, #64]
  447fa4:	ldp	x21, x22, [sp, #32]
  447fa8:	ldp	x23, x24, [sp, #48]
  447fac:	ldp	x29, x30, [sp], #80
  447fb0:	ret
  447fb4:	mov	x1, x20
  447fb8:	mov	w0, #0xa                   	// #10
  447fbc:	bl	4025e0 <fputc@plt>
  447fc0:	cmn	w0, #0x1
  447fc4:	b.eq	447f98 <nftw@plt+0x45418>  // b.none
  447fc8:	ldr	x21, [x24, #8]!
  447fcc:	cbnz	x21, 447f44 <nftw@plt+0x453c4>
  447fd0:	ldp	x19, x20, [sp, #16]
  447fd4:	ldr	x25, [sp, #64]
  447fd8:	mov	w0, #0x0                   	// #0
  447fdc:	b	447fa4 <nftw@plt+0x45424>
  447fe0:	mov	w0, #0x1                   	// #1
  447fe4:	ret
  447fe8:	stp	x29, x30, [sp, #-288]!
  447fec:	mov	x29, sp
  447ff0:	ldr	w3, [x0]
  447ff4:	stp	x23, x24, [sp, #48]
  447ff8:	mov	x24, x0
  447ffc:	cmp	w3, #0x1
  448000:	ldr	x0, [x1]
  448004:	str	x0, [sp, #152]
  448008:	b.le	448158 <nftw@plt+0x455d8>
  44800c:	mov	w23, #0x0                   	// #0
  448010:	stp	x19, x20, [sp, #16]
  448014:	mov	w20, #0x7d0                 	// #2000
  448018:	stp	x21, x22, [sp, #32]
  44801c:	mov	x21, x1
  448020:	stp	x25, x26, [sp, #64]
  448024:	adrp	x25, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  448028:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44802c:	add	x25, x25, #0x598
  448030:	add	x1, x26, #0x248
  448034:	stp	x27, x28, [sp, #80]
  448038:	mov	w28, #0x1                   	// #1
  44803c:	str	x1, [sp, #96]
  448040:	b	448120 <nftw@plt+0x455a0>
  448044:	subs	w20, w20, #0x1
  448048:	b.eq	4482e4 <nftw@plt+0x45764>  // b.none
  44804c:	add	x27, x1, #0x1
  448050:	add	x2, sp, #0xa0
  448054:	mov	x1, x27
  448058:	mov	w0, #0x0                   	// #0
  44805c:	bl	402ac0 <__xstat@plt>
  448060:	tbnz	w0, #31, 448164 <nftw@plt+0x455e4>
  448064:	ldr	w0, [sp, #176]
  448068:	and	w0, w0, #0xf000
  44806c:	cmp	w0, #0x4, lsl #12
  448070:	b.eq	448304 <nftw@plt+0x45784>  // b.none
  448074:	mov	x0, x27
  448078:	mov	x1, x25
  44807c:	bl	402650 <fopen@plt>
  448080:	mov	x27, x0
  448084:	cbz	x0, 448164 <nftw@plt+0x455e4>
  448088:	mov	w2, #0x2                   	// #2
  44808c:	mov	x1, #0x0                   	// #0
  448090:	bl	4027e0 <fseek@plt>
  448094:	cmn	w0, #0x1
  448098:	b.eq	448100 <nftw@plt+0x45580>  // b.none
  44809c:	mov	x0, x27
  4480a0:	bl	4025a0 <ftell@plt>
  4480a4:	mov	x26, x0
  4480a8:	cmn	x0, #0x1
  4480ac:	b.eq	448100 <nftw@plt+0x45580>  // b.none
  4480b0:	mov	x0, x27
  4480b4:	mov	w2, #0x0                   	// #0
  4480b8:	mov	x1, #0x0                   	// #0
  4480bc:	bl	4027e0 <fseek@plt>
  4480c0:	cmn	w0, #0x1
  4480c4:	b.eq	448100 <nftw@plt+0x45580>  // b.none
  4480c8:	add	x0, x26, #0x1
  4480cc:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  4480d0:	mov	x1, #0x1                   	// #1
  4480d4:	mov	x3, x27
  4480d8:	mov	x2, x26
  4480dc:	str	x0, [sp, #104]
  4480e0:	bl	4028d0 <fread@plt>
  4480e4:	mov	x1, x0
  4480e8:	cmp	x26, x0
  4480ec:	b.eq	448174 <nftw@plt+0x455f4>  // b.none
  4480f0:	mov	x0, x27
  4480f4:	str	x1, [sp, #112]
  4480f8:	bl	402b70 <ferror@plt>
  4480fc:	cbz	w0, 448170 <nftw@plt+0x455f0>
  448100:	mov	x0, x27
  448104:	bl	402620 <fclose@plt>
  448108:	ldr	w3, [x24]
  44810c:	mov	w23, w28
  448110:	add	w28, w28, #0x1
  448114:	cmp	w3, w28
  448118:	b.le	448148 <nftw@plt+0x455c8>
  44811c:	ldr	x0, [x21]
  448120:	sxtw	x19, w28
  448124:	sbfiz	x22, x28, #3, #32
  448128:	ldr	x1, [x0, x19, lsl #3]
  44812c:	ldrb	w2, [x1]
  448130:	cmp	w2, #0x40
  448134:	b.eq	448044 <nftw@plt+0x454c4>  // b.none
  448138:	mov	w23, w28
  44813c:	add	w28, w28, #0x1
  448140:	cmp	w3, w28
  448144:	b.gt	44811c <nftw@plt+0x4559c>
  448148:	ldp	x19, x20, [sp, #16]
  44814c:	ldp	x21, x22, [sp, #32]
  448150:	ldp	x25, x26, [sp, #64]
  448154:	ldp	x27, x28, [sp, #80]
  448158:	ldp	x23, x24, [sp, #48]
  44815c:	ldp	x29, x30, [sp], #288
  448160:	ret
  448164:	ldr	w3, [x24]
  448168:	mov	w23, w28
  44816c:	b	44813c <nftw@plt+0x455bc>
  448170:	ldr	x1, [sp, #112]
  448174:	ldr	x0, [sp, #104]
  448178:	strb	wzr, [x0, x1]
  44817c:	mov	x1, x0
  448180:	ldrb	w0, [x0]
  448184:	cbnz	w0, 448194 <nftw@plt+0x45614>
  448188:	b	448288 <nftw@plt+0x45708>
  44818c:	ldrb	w0, [x1, #1]!
  448190:	cbz	w0, 448288 <nftw@plt+0x45708>
  448194:	ldr	x2, [sp, #96]
  448198:	ldrh	w0, [x2, w0, sxtw #1]
  44819c:	tbnz	w0, #6, 44818c <nftw@plt+0x4560c>
  4481a0:	ldr	x0, [sp, #104]
  4481a4:	bl	447d28 <nftw@plt+0x451a8>
  4481a8:	mov	x5, x0
  4481ac:	ldr	x9, [x21]
  4481b0:	ldr	x0, [sp, #152]
  4481b4:	cmp	x9, x0
  4481b8:	b.eq	448328 <nftw@plt+0x457a8>  // b.none
  4481bc:	ldr	x1, [x5]
  4481c0:	cbz	x1, 4482d0 <nftw@plt+0x45750>
  4481c4:	mov	x1, #0x0                   	// #0
  4481c8:	add	x1, x1, #0x1
  4481cc:	lsl	x6, x1, #3
  4481d0:	ldr	x2, [x5, x1, lsl #3]
  4481d4:	cbnz	x2, 4481c8 <nftw@plt+0x45648>
  4481d8:	add	x7, x19, x1
  4481dc:	mov	w8, w1
  4481e0:	lsl	x7, x7, #3
  4481e4:	ldr	x0, [x9, x19, lsl #3]
  4481e8:	stp	x5, x1, [sp, #112]
  4481ec:	stp	x6, x7, [sp, #128]
  4481f0:	str	w8, [sp, #148]
  4481f4:	bl	402910 <free@plt>
  4481f8:	ldrsw	x2, [x24]
  4481fc:	ldr	x1, [sp, #120]
  448200:	add	x2, x2, #0x1
  448204:	ldr	x0, [x21]
  448208:	add	x1, x2, x1
  44820c:	lsl	x1, x1, #3
  448210:	bl	449c00 <_obstack_memory_used@@Base+0x1a0>
  448214:	mov	x1, x0
  448218:	ldr	w2, [x24]
  44821c:	add	x4, x22, #0x8
  448220:	ldr	x7, [sp, #136]
  448224:	sub	w2, w2, w28
  448228:	str	x1, [x21]
  44822c:	add	x1, x1, x4
  448230:	add	x0, x0, x7
  448234:	sbfiz	x2, x2, #3, #32
  448238:	bl	4024a0 <memmove@plt>
  44823c:	mov	w28, w23
  448240:	ldr	x5, [sp, #112]
  448244:	ldr	x6, [sp, #128]
  448248:	mov	x1, x5
  44824c:	ldr	x0, [x21]
  448250:	mov	x2, x6
  448254:	add	x0, x0, x22
  448258:	bl	402490 <memcpy@plt>
  44825c:	ldr	w1, [x24]
  448260:	ldr	w8, [sp, #148]
  448264:	sub	w1, w1, #0x1
  448268:	ldr	x5, [sp, #112]
  44826c:	add	w1, w1, w8
  448270:	str	w1, [x24]
  448274:	mov	x0, x5
  448278:	bl	402910 <free@plt>
  44827c:	ldr	x0, [sp, #104]
  448280:	bl	402910 <free@plt>
  448284:	b	448100 <nftw@plt+0x45580>
  448288:	mov	x0, #0x8                   	// #8
  44828c:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  448290:	mov	x5, x0
  448294:	ldr	x9, [x21]
  448298:	ldr	x0, [sp, #152]
  44829c:	str	xzr, [x5]
  4482a0:	cmp	x0, x9
  4482a4:	b.ne	4482d0 <nftw@plt+0x45750>  // b.any
  4482a8:	str	x5, [sp, #112]
  4482ac:	bl	447c38 <nftw@plt+0x450b8>
  4482b0:	mov	x7, x22
  4482b4:	mov	x9, x0
  4482b8:	mov	w8, #0x0                   	// #0
  4482bc:	mov	x1, #0x0                   	// #0
  4482c0:	mov	x6, #0x0                   	// #0
  4482c4:	str	x0, [x21]
  4482c8:	ldr	x5, [sp, #112]
  4482cc:	b	4481e4 <nftw@plt+0x45664>
  4482d0:	mov	x7, x22
  4482d4:	mov	w8, #0x0                   	// #0
  4482d8:	mov	x1, #0x0                   	// #0
  4482dc:	mov	x6, #0x0                   	// #0
  4482e0:	b	4481e4 <nftw@plt+0x45664>
  4482e4:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4482e8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4482ec:	ldr	x2, [x0]
  4482f0:	add	x1, x1, #0xcc8
  4482f4:	ldr	x0, [x3, #1392]
  4482f8:	bl	402b30 <fprintf@plt>
  4482fc:	mov	w0, #0x1                   	// #1
  448300:	bl	449a88 <_obstack_memory_used@@Base+0x28>
  448304:	ldr	x2, [x21]
  448308:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  44830c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  448310:	add	x1, x1, #0xcf8
  448314:	ldr	x0, [x0, #1392]
  448318:	ldr	x2, [x2]
  44831c:	bl	402b30 <fprintf@plt>
  448320:	mov	w0, #0x1                   	// #1
  448324:	bl	449a88 <_obstack_memory_used@@Base+0x28>
  448328:	ldr	x1, [x5]
  44832c:	stp	x1, x5, [sp, #112]
  448330:	ldr	x0, [sp, #152]
  448334:	bl	447c38 <nftw@plt+0x450b8>
  448338:	mov	x9, x0
  44833c:	str	x0, [x21]
  448340:	ldp	x1, x5, [sp, #112]
  448344:	b	4481c0 <nftw@plt+0x45640>
  448348:	mov	x1, x0
  44834c:	cbz	x0, 448378 <nftw@plt+0x457f8>
  448350:	ldr	x2, [x1]
  448354:	mov	w0, #0x0                   	// #0
  448358:	cbz	x2, 448374 <nftw@plt+0x457f4>
  44835c:	sub	x1, x1, #0x8
  448360:	mov	x2, #0x1                   	// #1
  448364:	mov	w0, w2
  448368:	add	x2, x2, #0x1
  44836c:	ldr	x3, [x1, x2, lsl #3]
  448370:	cbnz	x3, 448364 <nftw@plt+0x457e4>
  448374:	ret
  448378:	mov	w0, #0x0                   	// #0
  44837c:	ret
  448380:	b	402890 <strcmp@plt>
  448384:	nop
  448388:	b	4026a0 <strncmp@plt>
  44838c:	nop
  448390:	mov	x2, x0
  448394:	ldrb	w1, [x2], #1
  448398:	cbz	w1, 4483d4 <nftw@plt+0x45854>
  44839c:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4483a0:	add	x4, x4, #0x148
  4483a4:	mov	w0, #0x0                   	// #0
  4483a8:	mov	w6, #0x2f                  	// #47
  4483ac:	mov	w5, #0x43                  	// #67
  4483b0:	cmp	w1, #0x5c
  4483b4:	mul	w0, w0, w5
  4483b8:	csel	w1, w1, w6, ne  // ne = any
  4483bc:	sub	w0, w0, #0x71
  4483c0:	ldrb	w3, [x4, w1, sxtw]
  4483c4:	ldrb	w1, [x2], #1
  4483c8:	add	w0, w3, w0
  4483cc:	cbnz	w1, 4483b0 <nftw@plt+0x45830>
  4483d0:	ret
  4483d4:	mov	w0, #0x0                   	// #0
  4483d8:	ret
  4483dc:	nop
  4483e0:	stp	x29, x30, [sp, #-16]!
  4483e4:	mov	x29, sp
  4483e8:	bl	402890 <strcmp@plt>
  4483ec:	cmp	w0, #0x0
  4483f0:	cset	w0, eq  // eq = none
  4483f4:	ldp	x29, x30, [sp], #16
  4483f8:	ret
  4483fc:	nop
  448400:	stp	x29, x30, [sp, #-32]!
  448404:	mov	x29, sp
  448408:	stp	x19, x20, [sp, #16]
  44840c:	mov	x19, x1
  448410:	bl	4496d8 <nftw@plt+0x46b58>
  448414:	mov	x20, x0
  448418:	mov	x0, x19
  44841c:	bl	4496d8 <nftw@plt+0x46b58>
  448420:	mov	x19, x0
  448424:	mov	x1, x19
  448428:	mov	x0, x20
  44842c:	bl	402890 <strcmp@plt>
  448430:	mov	w1, w0
  448434:	mov	x0, x20
  448438:	mov	w20, w1
  44843c:	bl	402910 <free@plt>
  448440:	mov	x0, x19
  448444:	bl	402910 <free@plt>
  448448:	cmp	w20, #0x0
  44844c:	cset	w0, eq  // eq = none
  448450:	ldp	x19, x20, [sp, #16]
  448454:	ldp	x29, x30, [sp], #32
  448458:	ret
  44845c:	nop
  448460:	cbz	x0, 44846c <nftw@plt+0x458ec>
  448464:	mov	w1, #0x2                   	// #2
  448468:	b	402a60 <__fsetlocking@plt>
  44846c:	ret
  448470:	stp	x29, x30, [sp, #-16]!
  448474:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  448478:	mov	x29, sp
  44847c:	ldr	x0, [x0, #1424]
  448480:	cbz	x0, 44848c <nftw@plt+0x4590c>
  448484:	mov	w1, #0x2                   	// #2
  448488:	bl	402a60 <__fsetlocking@plt>
  44848c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  448490:	ldr	x0, [x0, #1416]
  448494:	cbz	x0, 4484a0 <nftw@plt+0x45920>
  448498:	mov	w1, #0x2                   	// #2
  44849c:	bl	402a60 <__fsetlocking@plt>
  4484a0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4484a4:	ldr	x0, [x0, #1392]
  4484a8:	cbz	x0, 4484b8 <nftw@plt+0x45938>
  4484ac:	ldp	x29, x30, [sp], #16
  4484b0:	mov	w1, #0x2                   	// #2
  4484b4:	b	402a60 <__fsetlocking@plt>
  4484b8:	ldp	x29, x30, [sp], #16
  4484bc:	ret
  4484c0:	stp	x29, x30, [sp, #-32]!
  4484c4:	mov	x29, sp
  4484c8:	str	x19, [sp, #16]
  4484cc:	bl	402650 <fopen@plt>
  4484d0:	mov	x19, x0
  4484d4:	cbz	x0, 4484e0 <nftw@plt+0x45960>
  4484d8:	mov	w1, #0x2                   	// #2
  4484dc:	bl	402a60 <__fsetlocking@plt>
  4484e0:	mov	x0, x19
  4484e4:	ldr	x19, [sp, #16]
  4484e8:	ldp	x29, x30, [sp], #32
  4484ec:	ret
  4484f0:	stp	x29, x30, [sp, #-32]!
  4484f4:	mov	x29, sp
  4484f8:	str	x19, [sp, #16]
  4484fc:	bl	402700 <fdopen@plt>
  448500:	mov	x19, x0
  448504:	cbz	x0, 448510 <nftw@plt+0x45990>
  448508:	mov	w1, #0x2                   	// #2
  44850c:	bl	402a60 <__fsetlocking@plt>
  448510:	mov	x0, x19
  448514:	ldr	x19, [sp, #16]
  448518:	ldp	x29, x30, [sp], #32
  44851c:	ret
  448520:	stp	x29, x30, [sp, #-32]!
  448524:	mov	x29, sp
  448528:	str	x19, [sp, #16]
  44852c:	bl	402930 <freopen@plt>
  448530:	mov	x19, x0
  448534:	cbz	x0, 448540 <nftw@plt+0x459c0>
  448538:	mov	w1, #0x2                   	// #2
  44853c:	bl	402a60 <__fsetlocking@plt>
  448540:	mov	x0, x19
  448544:	ldr	x19, [sp, #16]
  448548:	ldp	x29, x30, [sp], #32
  44854c:	ret
  448550:	cmp	x1, x0
  448554:	cset	w0, eq  // eq = none
  448558:	ret
  44855c:	nop
  448560:	asr	x1, x0, #32
  448564:	mov	w3, #0x2785                	// #10117
  448568:	mov	w5, #0xadcc                	// #44492
  44856c:	movk	w3, #0x5c24, lsl #16
  448570:	add	w3, w3, w0
  448574:	sub	w0, w1, w0
  448578:	movk	w5, #0xbdec, lsl #16
  44857c:	mov	w4, #0x109a                	// #4250
  448580:	add	w0, w0, w5
  448584:	movk	w4, #0x2, lsl #16
  448588:	mov	w2, #0x5234                	// #21044
  44858c:	eor	w0, w0, w4
  448590:	sub	w3, w3, w0
  448594:	movk	w2, #0x4213, lsl #16
  448598:	sub	w1, w2, w0
  44859c:	eor	w2, w3, w0, lsl #8
  4485a0:	sub	w1, w1, w2
  4485a4:	sub	w0, w0, w2
  4485a8:	eor	w1, w1, w2, lsr #13
  4485ac:	sub	w0, w0, w1
  4485b0:	sub	w2, w2, w1
  4485b4:	eor	w0, w0, w1, lsr #12
  4485b8:	sub	w2, w2, w0
  4485bc:	sub	w1, w1, w0
  4485c0:	eor	w2, w2, w0, lsl #16
  4485c4:	sub	w1, w1, w2
  4485c8:	sub	w0, w0, w2
  4485cc:	eor	w1, w1, w2, lsr #5
  4485d0:	sub	w0, w0, w1
  4485d4:	sub	w2, w2, w1
  4485d8:	eor	w0, w0, w1, lsr #3
  4485dc:	sub	w2, w2, w0
  4485e0:	sub	w1, w1, w0
  4485e4:	eor	w0, w2, w0, lsl #10
  4485e8:	sub	w1, w1, w0
  4485ec:	eor	w0, w1, w0, lsr #15
  4485f0:	ret
  4485f4:	nop
  4485f8:	mov	x2, x0
  4485fc:	adrp	x5, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  448600:	mov	w0, #0x1e                  	// #30
  448604:	add	x5, x5, #0xd50
  448608:	mov	w3, #0x0                   	// #0
  44860c:	b	44862c <nftw@plt+0x45aac>
  448610:	sub	w1, w0, w3
  448614:	add	w1, w3, w1, lsr #1
  448618:	ubfiz	x4, x1, #4, #32
  44861c:	ldr	w4, [x5, x4]
  448620:	cmp	x4, x2
  448624:	b.cc	448648 <nftw@plt+0x45ac8>  // b.lo, b.ul, b.last
  448628:	mov	w0, w1
  44862c:	cmp	w0, w3
  448630:	b.ne	448610 <nftw@plt+0x45a90>  // b.any
  448634:	ubfiz	x1, x0, #4, #32
  448638:	ldr	w1, [x5, x1]
  44863c:	cmp	x1, x2
  448640:	b.cc	448650 <nftw@plt+0x45ad0>  // b.lo, b.ul, b.last
  448644:	ret
  448648:	add	w3, w1, #0x1
  44864c:	b	44862c <nftw@plt+0x45aac>
  448650:	stp	x29, x30, [sp, #-16]!
  448654:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  448658:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44865c:	mov	x29, sp
  448660:	ldr	x0, [x0, #1392]
  448664:	add	x1, x1, #0xd28
  448668:	bl	402b30 <fprintf@plt>
  44866c:	bl	4027f0 <abort@plt>
  448670:	stp	x29, x30, [sp, #-80]!
  448674:	mov	x29, sp
  448678:	stp	x21, x22, [sp, #32]
  44867c:	mov	x21, x0
  448680:	ldp	x1, x0, [x0, #40]
  448684:	stp	x19, x20, [sp, #16]
  448688:	stp	x23, x24, [sp, #48]
  44868c:	ldp	x20, x23, [x21, #24]
  448690:	sub	x1, x1, x0
  448694:	str	x25, [sp, #64]
  448698:	lsl	x0, x1, #1
  44869c:	ldr	w25, [x21, #104]
  4486a0:	cmp	x23, x1, lsl #1
  4486a4:	add	x19, x20, x23, lsl #3
  4486a8:	b.cc	448800 <nftw@plt+0x45c80>  // b.lo, b.ul, b.last
  4486ac:	lsl	x1, x1, #3
  4486b0:	mov	x2, #0x20                  	// #32
  4486b4:	cmp	x1, x2
  4486b8:	csel	x1, x1, x2, cs  // cs = hs, nlast
  4486bc:	cmp	x23, x1
  4486c0:	b.hi	448800 <nftw@plt+0x45c80>  // b.pmore
  4486c4:	ldr	x3, [x21, #88]
  4486c8:	cbz	x3, 448820 <nftw@plt+0x45ca0>
  4486cc:	ldr	x0, [x21, #80]
  4486d0:	mov	x1, x23
  4486d4:	mov	x2, #0x8                   	// #8
  4486d8:	blr	x3
  4486dc:	cbz	x0, 448834 <nftw@plt+0x45cb4>
  4486e0:	ldp	x1, x2, [x21, #40]
  4486e4:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4486e8:	mov	x22, x20
  4486ec:	add	x24, x24, #0xd50
  4486f0:	stp	x0, x23, [x21, #24]
  4486f4:	str	xzr, [x21, #48]
  4486f8:	sub	x0, x1, x2
  4486fc:	str	x0, [x21, #40]
  448700:	str	w25, [x21, #104]
  448704:	nop
  448708:	ldr	x23, [x22]
  44870c:	cmp	x23, #0x1
  448710:	b.ls	4487c4 <nftw@plt+0x45c44>  // b.plast
  448714:	ldr	x1, [x21]
  448718:	mov	x0, x23
  44871c:	blr	x1
  448720:	ldr	w1, [x21, #104]
  448724:	ldr	x4, [x21, #24]
  448728:	lsl	x1, x1, #4
  44872c:	add	x6, x24, x1
  448730:	ldr	w5, [x24, x1]
  448734:	ldr	w1, [x6, #4]
  448738:	ldr	w7, [x6, #12]
  44873c:	umull	x1, w0, w1
  448740:	lsr	x3, x1, #32
  448744:	sub	w1, w0, w3
  448748:	add	w1, w3, w1, lsr #1
  44874c:	lsr	w1, w1, w7
  448750:	msub	w1, w1, w5, w0
  448754:	add	x3, x4, w1, uxtw #3
  448758:	ldr	x2, [x4, w1, uxtw #3]
  44875c:	cbz	x2, 4487c0 <nftw@plt+0x45c40>
  448760:	cmp	x2, #0x1
  448764:	b.eq	448888 <nftw@plt+0x45d08>  // b.none
  448768:	ldr	w3, [x6, #8]
  44876c:	add	w8, w0, #0x1
  448770:	sub	w6, w5, #0x2
  448774:	ldr	x5, [x21, #32]
  448778:	umull	x3, w0, w3
  44877c:	lsr	x3, x3, #32
  448780:	sub	w2, w0, w3
  448784:	add	w2, w3, w2, lsr #1
  448788:	lsr	w2, w2, w7
  44878c:	msub	w2, w2, w6, w8
  448790:	b	44879c <nftw@plt+0x45c1c>
  448794:	cmp	x0, #0x1
  448798:	b.eq	448888 <nftw@plt+0x45d08>  // b.none
  44879c:	add	w3, w1, w2
  4487a0:	mov	x1, x3
  4487a4:	cmp	x5, w3, uxtw
  4487a8:	b.hi	4487b4 <nftw@plt+0x45c34>  // b.pmore
  4487ac:	sub	w3, w3, w5
  4487b0:	mov	x1, x3
  4487b4:	ldr	x0, [x4, x3, lsl #3]
  4487b8:	add	x3, x4, x3, lsl #3
  4487bc:	cbnz	x0, 448794 <nftw@plt+0x45c14>
  4487c0:	str	x23, [x3]
  4487c4:	add	x22, x22, #0x8
  4487c8:	cmp	x19, x22
  4487cc:	b.hi	448708 <nftw@plt+0x45b88>  // b.pmore
  4487d0:	ldr	x1, [x21, #72]
  4487d4:	cbz	x1, 448854 <nftw@plt+0x45cd4>
  4487d8:	mov	x0, x20
  4487dc:	mov	w19, #0x1                   	// #1
  4487e0:	blr	x1
  4487e4:	mov	w0, w19
  4487e8:	ldp	x19, x20, [sp, #16]
  4487ec:	ldp	x21, x22, [sp, #32]
  4487f0:	ldp	x23, x24, [sp, #48]
  4487f4:	ldr	x25, [sp, #64]
  4487f8:	ldp	x29, x30, [sp], #80
  4487fc:	ret
  448800:	bl	4485f8 <nftw@plt+0x45a78>
  448804:	mov	w25, w0
  448808:	ldr	x3, [x21, #88]
  44880c:	ubfiz	x0, x25, #4, #32
  448810:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  448814:	add	x1, x1, #0xd50
  448818:	ldr	w23, [x1, x0]
  44881c:	cbnz	x3, 4486cc <nftw@plt+0x45b4c>
  448820:	ldr	x2, [x21, #64]
  448824:	mov	x0, x23
  448828:	mov	x1, #0x8                   	// #8
  44882c:	blr	x2
  448830:	cbnz	x0, 4486e0 <nftw@plt+0x45b60>
  448834:	mov	w19, #0x0                   	// #0
  448838:	mov	w0, w19
  44883c:	ldp	x19, x20, [sp, #16]
  448840:	ldp	x21, x22, [sp, #32]
  448844:	ldp	x23, x24, [sp, #48]
  448848:	ldr	x25, [sp, #64]
  44884c:	ldp	x29, x30, [sp], #80
  448850:	ret
  448854:	ldr	x2, [x21, #96]
  448858:	mov	w19, #0x1                   	// #1
  44885c:	cbz	x2, 4487e4 <nftw@plt+0x45c64>
  448860:	ldr	x0, [x21, #80]
  448864:	mov	x1, x20
  448868:	blr	x2
  44886c:	mov	w0, w19
  448870:	ldp	x19, x20, [sp, #16]
  448874:	ldp	x21, x22, [sp, #32]
  448878:	ldp	x23, x24, [sp, #48]
  44887c:	ldr	x25, [sp, #64]
  448880:	ldp	x29, x30, [sp], #80
  448884:	ret
  448888:	bl	4027f0 <abort@plt>
  44888c:	nop
  448890:	ldr	x0, [x0, #32]
  448894:	ret
  448898:	ldp	x1, x0, [x0, #40]
  44889c:	sub	x0, x1, x0
  4488a0:	ret
  4488a4:	nop
  4488a8:	stp	x29, x30, [sp, #-96]!
  4488ac:	mov	x29, sp
  4488b0:	stp	x19, x20, [sp, #16]
  4488b4:	mov	x20, x4
  4488b8:	stp	x21, x22, [sp, #32]
  4488bc:	mov	x21, x5
  4488c0:	stp	x23, x24, [sp, #48]
  4488c4:	mov	x24, x3
  4488c8:	mov	x23, x6
  4488cc:	stp	x25, x26, [sp, #64]
  4488d0:	mov	x26, x1
  4488d4:	mov	x25, x2
  4488d8:	str	x27, [sp, #80]
  4488dc:	bl	4485f8 <nftw@plt+0x45a78>
  4488e0:	mov	w22, w0
  4488e4:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4488e8:	add	x3, x3, #0xd50
  4488ec:	mov	x0, x20
  4488f0:	ubfiz	x4, x22, #4, #32
  4488f4:	mov	x2, #0x70                  	// #112
  4488f8:	mov	x1, #0x1                   	// #1
  4488fc:	ldr	w27, [x3, x4]
  448900:	blr	x21
  448904:	cbz	x0, 44895c <nftw@plt+0x45ddc>
  448908:	mov	x19, x0
  44890c:	mov	x1, x27
  448910:	mov	x0, x20
  448914:	mov	x2, #0x8                   	// #8
  448918:	blr	x21
  44891c:	str	x0, [x19, #24]
  448920:	cbz	x0, 448980 <nftw@plt+0x45e00>
  448924:	stp	x26, x25, [x19]
  448928:	str	x24, [x19, #16]
  44892c:	str	x27, [x19, #32]
  448930:	stp	x20, x21, [x19, #80]
  448934:	str	x23, [x19, #96]
  448938:	str	w22, [x19, #104]
  44893c:	mov	x0, x19
  448940:	ldp	x19, x20, [sp, #16]
  448944:	ldp	x21, x22, [sp, #32]
  448948:	ldp	x23, x24, [sp, #48]
  44894c:	ldp	x25, x26, [sp, #64]
  448950:	ldr	x27, [sp, #80]
  448954:	ldp	x29, x30, [sp], #96
  448958:	ret
  44895c:	mov	x19, #0x0                   	// #0
  448960:	mov	x0, x19
  448964:	ldp	x19, x20, [sp, #16]
  448968:	ldp	x21, x22, [sp, #32]
  44896c:	ldp	x23, x24, [sp, #48]
  448970:	ldp	x25, x26, [sp, #64]
  448974:	ldr	x27, [sp, #80]
  448978:	ldp	x29, x30, [sp], #96
  44897c:	ret
  448980:	cbz	x23, 44895c <nftw@plt+0x45ddc>
  448984:	mov	x1, x19
  448988:	mov	x0, x20
  44898c:	mov	x19, #0x0                   	// #0
  448990:	blr	x23
  448994:	b	44893c <nftw@plt+0x45dbc>
  448998:	stp	x29, x30, [sp, #-80]!
  44899c:	mov	x29, sp
  4489a0:	stp	x19, x20, [sp, #16]
  4489a4:	mov	x19, x4
  4489a8:	stp	x21, x22, [sp, #32]
  4489ac:	mov	x21, x5
  4489b0:	mov	x22, x6
  4489b4:	stp	x23, x24, [sp, #48]
  4489b8:	mov	x24, x2
  4489bc:	mov	x23, x3
  4489c0:	stp	x25, x26, [sp, #64]
  4489c4:	mov	x25, x1
  4489c8:	bl	4485f8 <nftw@plt+0x45a78>
  4489cc:	mov	w20, w0
  4489d0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4489d4:	add	x2, x2, #0xd50
  4489d8:	mov	x1, #0x70                  	// #112
  4489dc:	ubfiz	x3, x20, #4, #32
  4489e0:	mov	x0, #0x1                   	// #1
  4489e4:	ldr	w26, [x2, x3]
  4489e8:	blr	x19
  4489ec:	cbz	x0, 448a38 <nftw@plt+0x45eb8>
  4489f0:	mov	x19, x0
  4489f4:	mov	x1, #0x8                   	// #8
  4489f8:	mov	x0, x26
  4489fc:	blr	x21
  448a00:	str	x0, [x19, #24]
  448a04:	cbz	x0, 448a58 <nftw@plt+0x45ed8>
  448a08:	stp	x25, x24, [x19]
  448a0c:	str	x23, [x19, #16]
  448a10:	str	x26, [x19, #32]
  448a14:	stp	x21, x22, [x19, #64]
  448a18:	str	w20, [x19, #104]
  448a1c:	mov	x0, x19
  448a20:	ldp	x19, x20, [sp, #16]
  448a24:	ldp	x21, x22, [sp, #32]
  448a28:	ldp	x23, x24, [sp, #48]
  448a2c:	ldp	x25, x26, [sp, #64]
  448a30:	ldp	x29, x30, [sp], #80
  448a34:	ret
  448a38:	mov	x19, #0x0                   	// #0
  448a3c:	mov	x0, x19
  448a40:	ldp	x19, x20, [sp, #16]
  448a44:	ldp	x21, x22, [sp, #32]
  448a48:	ldp	x23, x24, [sp, #48]
  448a4c:	ldp	x25, x26, [sp, #64]
  448a50:	ldp	x29, x30, [sp], #80
  448a54:	ret
  448a58:	cbz	x22, 448a38 <nftw@plt+0x45eb8>
  448a5c:	mov	x0, x19
  448a60:	mov	x19, #0x0                   	// #0
  448a64:	blr	x22
  448a68:	b	448a1c <nftw@plt+0x45e9c>
  448a6c:	nop
  448a70:	mov	x6, x5
  448a74:	mov	x5, x4
  448a78:	b	448998 <nftw@plt+0x45e18>
  448a7c:	nop
  448a80:	stp	x1, x2, [x0]
  448a84:	str	x3, [x0, #16]
  448a88:	stp	x4, x5, [x0, #80]
  448a8c:	str	x6, [x0, #96]
  448a90:	ret
  448a94:	nop
  448a98:	adrp	x5, 449000 <nftw@plt+0x46480>
  448a9c:	add	x5, x5, #0xbb0
  448aa0:	mov	x4, x5
  448aa4:	adrp	x6, 402000 <memcpy@plt-0x490>
  448aa8:	add	x6, x6, #0x910
  448aac:	b	448998 <nftw@plt+0x45e18>
  448ab0:	adrp	x5, 402000 <memcpy@plt-0x490>
  448ab4:	add	x5, x5, #0x710
  448ab8:	mov	x4, x5
  448abc:	adrp	x6, 402000 <memcpy@plt-0x490>
  448ac0:	add	x6, x6, #0x910
  448ac4:	b	448998 <nftw@plt+0x45e18>
  448ac8:	stp	x29, x30, [sp, #-48]!
  448acc:	mov	x29, sp
  448ad0:	stp	x19, x20, [sp, #16]
  448ad4:	mov	x20, x0
  448ad8:	ldr	x0, [x0, #16]
  448adc:	str	x21, [sp, #32]
  448ae0:	ldr	x21, [x20, #24]
  448ae4:	cbz	x0, 448b14 <nftw@plt+0x45f94>
  448ae8:	ldr	x19, [x20, #32]
  448aec:	subs	w19, w19, #0x1
  448af0:	b.mi	448b14 <nftw@plt+0x45f94>  // b.first
  448af4:	sxtw	x19, w19
  448af8:	ldr	x0, [x21, x19, lsl #3]
  448afc:	sub	x19, x19, #0x1
  448b00:	cmp	x0, #0x1
  448b04:	b.ls	448b10 <nftw@plt+0x45f90>  // b.plast
  448b08:	ldr	x1, [x20, #16]
  448b0c:	blr	x1
  448b10:	tbz	w19, #31, 448af8 <nftw@plt+0x45f78>
  448b14:	ldr	x1, [x20, #72]
  448b18:	cbz	x1, 448b40 <nftw@plt+0x45fc0>
  448b1c:	mov	x0, x21
  448b20:	blr	x1
  448b24:	mov	x0, x20
  448b28:	ldr	x21, [sp, #32]
  448b2c:	ldr	x1, [x20, #72]
  448b30:	ldp	x19, x20, [sp, #16]
  448b34:	mov	x16, x1
  448b38:	ldp	x29, x30, [sp], #48
  448b3c:	br	x16
  448b40:	ldr	x2, [x20, #96]
  448b44:	cbz	x2, 448b74 <nftw@plt+0x45ff4>
  448b48:	ldr	x0, [x20, #80]
  448b4c:	mov	x1, x21
  448b50:	blr	x2
  448b54:	mov	x1, x20
  448b58:	ldr	x21, [sp, #32]
  448b5c:	ldr	x0, [x20, #80]
  448b60:	ldr	x2, [x20, #96]
  448b64:	ldp	x19, x20, [sp, #16]
  448b68:	mov	x16, x2
  448b6c:	ldp	x29, x30, [sp], #48
  448b70:	br	x16
  448b74:	ldp	x19, x20, [sp, #16]
  448b78:	ldr	x21, [sp, #32]
  448b7c:	ldp	x29, x30, [sp], #48
  448b80:	ret
  448b84:	nop
  448b88:	stp	x29, x30, [sp, #-48]!
  448b8c:	mov	x29, sp
  448b90:	stp	x19, x20, [sp, #16]
  448b94:	mov	x20, x0
  448b98:	ldr	x0, [x0, #16]
  448b9c:	stp	x21, x22, [sp, #32]
  448ba0:	ldp	x21, x22, [x20, #24]
  448ba4:	cbz	x0, 448bd4 <nftw@plt+0x46054>
  448ba8:	subs	w19, w22, #0x1
  448bac:	b.mi	448bd4 <nftw@plt+0x46054>  // b.first
  448bb0:	sxtw	x19, w19
  448bb4:	nop
  448bb8:	ldr	x0, [x21, x19, lsl #3]
  448bbc:	sub	x19, x19, #0x1
  448bc0:	cmp	x0, #0x1
  448bc4:	b.ls	448bd0 <nftw@plt+0x46050>  // b.plast
  448bc8:	ldr	x1, [x20, #16]
  448bcc:	blr	x1
  448bd0:	tbz	w19, #31, 448bb8 <nftw@plt+0x46038>
  448bd4:	cmp	x22, #0x20, lsl #12
  448bd8:	b.ls	448c44 <nftw@plt+0x460c4>  // b.plast
  448bdc:	mov	x0, #0x80                  	// #128
  448be0:	bl	4485f8 <nftw@plt+0x45a78>
  448be4:	ldr	x2, [x20, #72]
  448be8:	mov	w19, w0
  448bec:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  448bf0:	sbfiz	x0, x0, #4, #32
  448bf4:	add	x1, x1, #0xd50
  448bf8:	ldr	w21, [x1, x0]
  448bfc:	cbz	x2, 448c68 <nftw@plt+0x460e8>
  448c00:	ldr	x0, [x20, #24]
  448c04:	blr	x2
  448c08:	ldr	x3, [x20, #88]
  448c0c:	sxtw	x21, w21
  448c10:	cbz	x3, 448c88 <nftw@plt+0x46108>
  448c14:	ldr	x0, [x20, #80]
  448c18:	mov	x1, x21
  448c1c:	mov	x2, #0x8                   	// #8
  448c20:	blr	x3
  448c24:	str	x0, [x20, #24]
  448c28:	str	x21, [x20, #32]
  448c2c:	str	w19, [x20, #104]
  448c30:	ldp	x21, x22, [sp, #32]
  448c34:	stp	xzr, xzr, [x20, #40]
  448c38:	ldp	x19, x20, [sp, #16]
  448c3c:	ldp	x29, x30, [sp], #48
  448c40:	ret
  448c44:	lsl	x2, x22, #3
  448c48:	mov	x0, x21
  448c4c:	mov	w1, #0x0                   	// #0
  448c50:	bl	4026f0 <memset@plt>
  448c54:	ldp	x21, x22, [sp, #32]
  448c58:	stp	xzr, xzr, [x20, #40]
  448c5c:	ldp	x19, x20, [sp, #16]
  448c60:	ldp	x29, x30, [sp], #48
  448c64:	ret
  448c68:	ldr	x2, [x20, #96]
  448c6c:	cbz	x2, 448c08 <nftw@plt+0x46088>
  448c70:	ldr	x1, [x20, #24]
  448c74:	sxtw	x21, w21
  448c78:	ldr	x0, [x20, #80]
  448c7c:	blr	x2
  448c80:	ldr	x3, [x20, #88]
  448c84:	cbnz	x3, 448c14 <nftw@plt+0x46094>
  448c88:	ldr	x2, [x20, #64]
  448c8c:	mov	x0, x21
  448c90:	mov	x1, #0x8                   	// #8
  448c94:	blr	x2
  448c98:	str	x0, [x20, #24]
  448c9c:	b	448c28 <nftw@plt+0x460a8>
  448ca0:	stp	x29, x30, [sp, #-80]!
  448ca4:	mov	x29, sp
  448ca8:	stp	x21, x22, [sp, #32]
  448cac:	mov	x21, x0
  448cb0:	ldr	w0, [x0, #104]
  448cb4:	mov	w22, w2
  448cb8:	stp	x19, x20, [sp, #16]
  448cbc:	ldr	w2, [x21, #56]
  448cc0:	lsl	x3, x0, #4
  448cc4:	ldr	x4, [x21, #24]
  448cc8:	str	x25, [sp, #64]
  448ccc:	adrp	x25, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  448cd0:	add	x25, x25, #0xd50
  448cd4:	add	x5, x25, x3
  448cd8:	add	w2, w2, #0x1
  448cdc:	str	w2, [x21, #56]
  448ce0:	ldr	w2, [x25, x3]
  448ce4:	ldr	w3, [x5, #4]
  448ce8:	ldr	w5, [x5, #12]
  448cec:	umull	x3, w22, w3
  448cf0:	lsr	x3, x3, #32
  448cf4:	sub	w19, w22, w3
  448cf8:	add	w19, w3, w19, lsr #1
  448cfc:	lsr	w19, w19, w5
  448d00:	msub	w19, w19, w2, w22
  448d04:	ldr	x20, [x4, w19, uxtw #3]
  448d08:	cbz	x20, 448df0 <nftw@plt+0x46270>
  448d0c:	stp	x23, x24, [sp, #48]
  448d10:	cmp	x20, #0x1
  448d14:	mov	x24, x1
  448d18:	ldr	x23, [x21, #32]
  448d1c:	b.eq	448d48 <nftw@plt+0x461c8>  // b.none
  448d20:	ldr	x2, [x21, #8]
  448d24:	mov	x0, x20
  448d28:	blr	x2
  448d2c:	cbnz	w0, 448e0c <nftw@plt+0x4628c>
  448d30:	ldr	w0, [x21, #104]
  448d34:	ldr	x4, [x21, #24]
  448d38:	lsl	x1, x0, #4
  448d3c:	add	x3, x25, x1
  448d40:	ldr	w2, [x25, x1]
  448d44:	ldr	w5, [x3, #12]
  448d48:	add	x25, x25, x0, lsl #4
  448d4c:	sub	w0, w2, #0x2
  448d50:	add	w6, w22, #0x1
  448d54:	ldr	w3, [x21, #60]
  448d58:	ldr	w1, [x25, #8]
  448d5c:	umull	x2, w22, w1
  448d60:	lsr	x1, x2, #32
  448d64:	sub	w2, w22, w1
  448d68:	add	w2, w1, w2, lsr #1
  448d6c:	lsr	w2, w2, w5
  448d70:	msub	w22, w2, w0, w6
  448d74:	add	w2, w19, w22
  448d78:	add	w3, w3, #0x1
  448d7c:	str	w3, [x21, #60]
  448d80:	mov	x19, x2
  448d84:	cmp	x23, w2, uxtw
  448d88:	mov	x1, x24
  448d8c:	b.hi	448d98 <nftw@plt+0x46218>  // b.pmore
  448d90:	sub	w2, w2, w23
  448d94:	mov	x19, x2
  448d98:	ldr	x20, [x4, x2, lsl #3]
  448d9c:	cmp	x20, #0x1
  448da0:	mov	x0, x20
  448da4:	cbz	x20, 448dec <nftw@plt+0x4626c>
  448da8:	b.eq	448d74 <nftw@plt+0x461f4>  // b.none
  448dac:	ldr	x2, [x21, #8]
  448db0:	blr	x2
  448db4:	cbnz	w0, 448e0c <nftw@plt+0x4628c>
  448db8:	ldr	w3, [x21, #60]
  448dbc:	add	w2, w19, w22
  448dc0:	mov	x19, x2
  448dc4:	mov	x1, x24
  448dc8:	add	w3, w3, #0x1
  448dcc:	str	w3, [x21, #60]
  448dd0:	cmp	x23, w2, uxtw
  448dd4:	ldr	x4, [x21, #24]
  448dd8:	b.ls	448d90 <nftw@plt+0x46210>  // b.plast
  448ddc:	ldr	x20, [x4, x2, lsl #3]
  448de0:	cmp	x20, #0x1
  448de4:	mov	x0, x20
  448de8:	cbnz	x20, 448da8 <nftw@plt+0x46228>
  448dec:	ldp	x23, x24, [sp, #48]
  448df0:	mov	x20, #0x0                   	// #0
  448df4:	mov	x0, x20
  448df8:	ldp	x19, x20, [sp, #16]
  448dfc:	ldp	x21, x22, [sp, #32]
  448e00:	ldr	x25, [sp, #64]
  448e04:	ldp	x29, x30, [sp], #80
  448e08:	ret
  448e0c:	mov	x0, x20
  448e10:	ldp	x19, x20, [sp, #16]
  448e14:	ldp	x21, x22, [sp, #32]
  448e18:	ldp	x23, x24, [sp, #48]
  448e1c:	ldr	x25, [sp, #64]
  448e20:	ldp	x29, x30, [sp], #80
  448e24:	ret
  448e28:	stp	x29, x30, [sp, #-32]!
  448e2c:	mov	x29, sp
  448e30:	stp	x19, x20, [sp, #16]
  448e34:	mov	x19, x0
  448e38:	mov	x20, x1
  448e3c:	mov	x0, x1
  448e40:	ldr	x1, [x19]
  448e44:	blr	x1
  448e48:	mov	w2, w0
  448e4c:	mov	x1, x20
  448e50:	mov	x0, x19
  448e54:	ldp	x19, x20, [sp, #16]
  448e58:	ldp	x29, x30, [sp], #32
  448e5c:	b	448ca0 <nftw@plt+0x46120>
  448e60:	stp	x29, x30, [sp, #-96]!
  448e64:	cmp	w3, #0x1
  448e68:	mov	x29, sp
  448e6c:	stp	x21, x22, [sp, #32]
  448e70:	mov	w22, w3
  448e74:	mov	w21, w2
  448e78:	stp	x23, x24, [sp, #48]
  448e7c:	mov	x24, x0
  448e80:	stp	x25, x26, [sp, #64]
  448e84:	mov	x26, x1
  448e88:	ldr	x25, [x0, #32]
  448e8c:	b.eq	449014 <nftw@plt+0x46494>  // b.none
  448e90:	stp	x19, x20, [sp, #16]
  448e94:	str	x27, [sp, #80]
  448e98:	ldr	w1, [x24, #104]
  448e9c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  448ea0:	add	x20, x20, #0xd50
  448ea4:	ldr	w0, [x24, #56]
  448ea8:	ldr	x3, [x24, #24]
  448eac:	lsl	x2, x1, #4
  448eb0:	add	x5, x20, x2
  448eb4:	add	w0, w0, #0x1
  448eb8:	str	w0, [x24, #56]
  448ebc:	ldr	w4, [x20, x2]
  448ec0:	ldr	w2, [x5, #4]
  448ec4:	ldr	w5, [x5, #12]
  448ec8:	umull	x2, w21, w2
  448ecc:	lsr	x2, x2, #32
  448ed0:	sub	w19, w21, w2
  448ed4:	add	w19, w2, w19, lsr #1
  448ed8:	lsr	w19, w19, w5
  448edc:	msub	w19, w19, w4, w21
  448ee0:	ubfiz	x27, x19, #3, #32
  448ee4:	ldr	x0, [x3, w19, uxtw #3]
  448ee8:	add	x23, x3, x27
  448eec:	cbz	x0, 44908c <nftw@plt+0x4650c>
  448ef0:	cmp	x0, #0x1
  448ef4:	b.eq	448f24 <nftw@plt+0x463a4>  // b.none
  448ef8:	ldr	x2, [x24, #8]
  448efc:	mov	x1, x26
  448f00:	blr	x2
  448f04:	cbnz	w0, 449064 <nftw@plt+0x464e4>
  448f08:	ldr	w1, [x24, #104]
  448f0c:	mov	x23, #0x0                   	// #0
  448f10:	ldr	x3, [x24, #24]
  448f14:	lsl	x0, x1, #4
  448f18:	add	x2, x20, x0
  448f1c:	ldr	w4, [x20, x0]
  448f20:	ldr	w5, [x2, #12]
  448f24:	add	x1, x20, x1, lsl #4
  448f28:	sub	w2, w4, #0x2
  448f2c:	add	w6, w21, #0x1
  448f30:	ldr	w4, [x24, #60]
  448f34:	ldr	w0, [x1, #8]
  448f38:	umull	x0, w21, w0
  448f3c:	lsr	x0, x0, #32
  448f40:	sub	w20, w21, w0
  448f44:	add	w20, w0, w20, lsr #1
  448f48:	lsr	w20, w20, w5
  448f4c:	msub	w20, w20, w2, w6
  448f50:	add	w2, w19, w20
  448f54:	add	w4, w4, #0x1
  448f58:	str	w4, [x24, #60]
  448f5c:	mov	x19, x2
  448f60:	cmp	x25, w2, uxtw
  448f64:	mov	x1, x26
  448f68:	b.hi	448f74 <nftw@plt+0x463f4>  // b.pmore
  448f6c:	sub	w2, w2, w25
  448f70:	mov	x19, x2
  448f74:	ldr	x0, [x3, x2, lsl #3]
  448f78:	lsl	x21, x2, #3
  448f7c:	add	x2, x3, x21
  448f80:	cmp	x0, #0x1
  448f84:	cbz	x0, 448fd0 <nftw@plt+0x46450>
  448f88:	b.eq	449008 <nftw@plt+0x46488>  // b.none
  448f8c:	ldr	x2, [x24, #8]
  448f90:	blr	x2
  448f94:	cbnz	w0, 44903c <nftw@plt+0x464bc>
  448f98:	ldr	w4, [x24, #60]
  448f9c:	add	w2, w19, w20
  448fa0:	mov	x19, x2
  448fa4:	mov	x1, x26
  448fa8:	add	w4, w4, #0x1
  448fac:	str	w4, [x24, #60]
  448fb0:	cmp	x25, w2, uxtw
  448fb4:	ldr	x3, [x24, #24]
  448fb8:	b.ls	448f6c <nftw@plt+0x463ec>  // b.plast
  448fbc:	ldr	x0, [x3, x2, lsl #3]
  448fc0:	lsl	x21, x2, #3
  448fc4:	add	x2, x3, x21
  448fc8:	cmp	x0, #0x1
  448fcc:	cbnz	x0, 448f88 <nftw@plt+0x46408>
  448fd0:	cbz	w22, 4490bc <nftw@plt+0x4653c>
  448fd4:	cbz	x23, 4490e0 <nftw@plt+0x46560>
  448fd8:	ldr	x0, [x24, #48]
  448fdc:	ldp	x19, x20, [sp, #16]
  448fe0:	sub	x0, x0, #0x1
  448fe4:	ldr	x27, [sp, #80]
  448fe8:	str	x0, [x24, #48]
  448fec:	str	xzr, [x23]
  448ff0:	mov	x0, x23
  448ff4:	ldp	x21, x22, [sp, #32]
  448ff8:	ldp	x23, x24, [sp, #48]
  448ffc:	ldp	x25, x26, [sp, #64]
  449000:	ldp	x29, x30, [sp], #96
  449004:	ret
  449008:	cmp	x23, #0x0
  44900c:	csel	x23, x23, x2, ne  // ne = any
  449010:	b	448f50 <nftw@plt+0x463d0>
  449014:	ldr	x2, [x0, #40]
  449018:	add	x1, x25, x25, lsl #1
  44901c:	cmp	x1, x2, lsl #2
  449020:	b.hi	448e90 <nftw@plt+0x46310>  // b.pmore
  449024:	bl	448670 <nftw@plt+0x45af0>
  449028:	cbz	w0, 4490c4 <nftw@plt+0x46544>
  44902c:	stp	x19, x20, [sp, #16]
  449030:	ldr	x25, [x24, #32]
  449034:	str	x27, [sp, #80]
  449038:	b	448e98 <nftw@plt+0x46318>
  44903c:	ldr	x23, [x24, #24]
  449040:	ldp	x19, x20, [sp, #16]
  449044:	add	x23, x23, x21
  449048:	mov	x0, x23
  44904c:	ldp	x21, x22, [sp, #32]
  449050:	ldp	x23, x24, [sp, #48]
  449054:	ldp	x25, x26, [sp, #64]
  449058:	ldr	x27, [sp, #80]
  44905c:	ldp	x29, x30, [sp], #96
  449060:	ret
  449064:	ldr	x23, [x24, #24]
  449068:	ldp	x19, x20, [sp, #16]
  44906c:	add	x23, x23, x27
  449070:	mov	x0, x23
  449074:	ldp	x21, x22, [sp, #32]
  449078:	ldp	x23, x24, [sp, #48]
  44907c:	ldp	x25, x26, [sp, #64]
  449080:	ldr	x27, [sp, #80]
  449084:	ldp	x29, x30, [sp], #96
  449088:	ret
  44908c:	cbz	w22, 4490bc <nftw@plt+0x4653c>
  449090:	ldr	x0, [x24, #40]
  449094:	ldp	x19, x20, [sp, #16]
  449098:	add	x0, x0, #0x1
  44909c:	ldr	x27, [sp, #80]
  4490a0:	str	x0, [x24, #40]
  4490a4:	mov	x0, x23
  4490a8:	ldp	x21, x22, [sp, #32]
  4490ac:	ldp	x23, x24, [sp, #48]
  4490b0:	ldp	x25, x26, [sp, #64]
  4490b4:	ldp	x29, x30, [sp], #96
  4490b8:	ret
  4490bc:	ldp	x19, x20, [sp, #16]
  4490c0:	ldr	x27, [sp, #80]
  4490c4:	mov	x23, #0x0                   	// #0
  4490c8:	mov	x0, x23
  4490cc:	ldp	x21, x22, [sp, #32]
  4490d0:	ldp	x23, x24, [sp, #48]
  4490d4:	ldp	x25, x26, [sp, #64]
  4490d8:	ldp	x29, x30, [sp], #96
  4490dc:	ret
  4490e0:	mov	x23, x2
  4490e4:	b	449090 <nftw@plt+0x46510>
  4490e8:	stp	x29, x30, [sp, #-48]!
  4490ec:	mov	x29, sp
  4490f0:	stp	x19, x20, [sp, #16]
  4490f4:	mov	x19, x0
  4490f8:	mov	x20, x1
  4490fc:	mov	x0, x1
  449100:	ldr	x1, [x19]
  449104:	str	x21, [sp, #32]
  449108:	mov	w21, w2
  44910c:	blr	x1
  449110:	mov	w2, w0
  449114:	mov	w3, w21
  449118:	mov	x1, x20
  44911c:	mov	x0, x19
  449120:	ldp	x19, x20, [sp, #16]
  449124:	ldr	x21, [sp, #32]
  449128:	ldp	x29, x30, [sp], #48
  44912c:	b	448e60 <nftw@plt+0x462e0>
  449130:	stp	x29, x30, [sp, #-32]!
  449134:	mov	w3, #0x0                   	// #0
  449138:	mov	x29, sp
  44913c:	stp	x19, x20, [sp, #16]
  449140:	mov	x19, x0
  449144:	bl	448e60 <nftw@plt+0x462e0>
  449148:	cbz	x0, 449174 <nftw@plt+0x465f4>
  44914c:	ldr	x1, [x19, #16]
  449150:	mov	x20, x0
  449154:	cbz	x1, 449160 <nftw@plt+0x465e0>
  449158:	ldr	x0, [x0]
  44915c:	blr	x1
  449160:	ldr	x0, [x19, #48]
  449164:	mov	x1, #0x1                   	// #1
  449168:	str	x1, [x20]
  44916c:	add	x0, x0, x1
  449170:	str	x0, [x19, #48]
  449174:	ldp	x19, x20, [sp, #16]
  449178:	ldp	x29, x30, [sp], #32
  44917c:	ret
  449180:	stp	x29, x30, [sp, #-32]!
  449184:	mov	x29, sp
  449188:	stp	x19, x20, [sp, #16]
  44918c:	mov	x19, x0
  449190:	mov	x20, x1
  449194:	mov	x0, x1
  449198:	ldr	x1, [x19]
  44919c:	blr	x1
  4491a0:	mov	w2, w0
  4491a4:	mov	x1, x20
  4491a8:	mov	x0, x19
  4491ac:	ldp	x19, x20, [sp, #16]
  4491b0:	ldp	x29, x30, [sp], #32
  4491b4:	b	449130 <nftw@plt+0x465b0>
  4491b8:	stp	x29, x30, [sp, #-32]!
  4491bc:	mov	x29, sp
  4491c0:	stp	x19, x20, [sp, #16]
  4491c4:	mov	x20, x1
  4491c8:	ldr	x1, [x0, #24]
  4491cc:	cmp	x1, x20
  4491d0:	b.hi	449220 <nftw@plt+0x466a0>  // b.pmore
  4491d4:	mov	x19, x0
  4491d8:	ldr	x0, [x0, #32]
  4491dc:	add	x0, x1, x0, lsl #3
  4491e0:	cmp	x20, x0
  4491e4:	b.cs	449220 <nftw@plt+0x466a0>  // b.hs, b.nlast
  4491e8:	ldr	x0, [x20]
  4491ec:	cmp	x0, #0x1
  4491f0:	b.ls	449220 <nftw@plt+0x466a0>  // b.plast
  4491f4:	ldr	x1, [x19, #16]
  4491f8:	cbz	x1, 449200 <nftw@plt+0x46680>
  4491fc:	blr	x1
  449200:	ldr	x0, [x19, #48]
  449204:	mov	x1, #0x1                   	// #1
  449208:	str	x1, [x20]
  44920c:	add	x0, x0, x1
  449210:	str	x0, [x19, #48]
  449214:	ldp	x19, x20, [sp, #16]
  449218:	ldp	x29, x30, [sp], #32
  44921c:	ret
  449220:	bl	4027f0 <abort@plt>
  449224:	nop
  449228:	stp	x29, x30, [sp, #-48]!
  44922c:	mov	x29, sp
  449230:	stp	x19, x20, [sp, #16]
  449234:	mov	x20, x2
  449238:	stp	x21, x22, [sp, #32]
  44923c:	mov	x22, x1
  449240:	ldp	x19, x21, [x0, #24]
  449244:	add	x21, x19, x21, lsl #3
  449248:	ldr	x3, [x19]
  44924c:	mov	x0, x19
  449250:	mov	x1, x20
  449254:	add	x19, x19, #0x8
  449258:	cmp	x3, #0x1
  44925c:	b.ls	449268 <nftw@plt+0x466e8>  // b.plast
  449260:	blr	x22
  449264:	cbz	w0, 449270 <nftw@plt+0x466f0>
  449268:	cmp	x21, x19
  44926c:	b.hi	449248 <nftw@plt+0x466c8>  // b.pmore
  449270:	ldp	x19, x20, [sp, #16]
  449274:	ldp	x21, x22, [sp, #32]
  449278:	ldp	x29, x30, [sp], #48
  44927c:	ret
  449280:	stp	x29, x30, [sp, #-48]!
  449284:	mov	x3, #0x20                  	// #32
  449288:	mov	x29, sp
  44928c:	stp	x19, x20, [sp, #16]
  449290:	mov	x19, x0
  449294:	stp	x21, x22, [sp, #32]
  449298:	mov	x22, x1
  44929c:	mov	x21, x2
  4492a0:	ldp	x20, x1, [x0, #32]
  4492a4:	ldr	x2, [x0, #48]
  4492a8:	sub	x1, x1, x2
  4492ac:	lsl	x1, x1, #3
  4492b0:	cmp	x1, x3
  4492b4:	csel	x1, x1, x3, cs  // cs = hs, nlast
  4492b8:	cmp	x20, x1
  4492bc:	b.hi	449300 <nftw@plt+0x46780>  // b.pmore
  4492c0:	ldr	x19, [x19, #24]
  4492c4:	add	x20, x19, x20, lsl #3
  4492c8:	ldr	x3, [x19]
  4492cc:	mov	x0, x19
  4492d0:	mov	x1, x21
  4492d4:	add	x19, x19, #0x8
  4492d8:	cmp	x3, #0x1
  4492dc:	b.ls	4492e8 <nftw@plt+0x46768>  // b.plast
  4492e0:	blr	x22
  4492e4:	cbz	w0, 4492f0 <nftw@plt+0x46770>
  4492e8:	cmp	x20, x19
  4492ec:	b.hi	4492c8 <nftw@plt+0x46748>  // b.pmore
  4492f0:	ldp	x19, x20, [sp, #16]
  4492f4:	ldp	x21, x22, [sp, #32]
  4492f8:	ldp	x29, x30, [sp], #48
  4492fc:	ret
  449300:	bl	448670 <nftw@plt+0x45af0>
  449304:	ldr	x20, [x19, #32]
  449308:	b	4492c0 <nftw@plt+0x46740>
  44930c:	nop
  449310:	ldr	w1, [x0, #56]
  449314:	movi	d0, #0x0
  449318:	cbz	w1, 44932c <nftw@plt+0x467ac>
  44931c:	ldr	w0, [x0, #60]
  449320:	ucvtf	d1, w1
  449324:	ucvtf	d0, w0
  449328:	fdiv	d0, d0, d1
  44932c:	ret
  449330:	mov	x2, x0
  449334:	mov	w0, #0x0                   	// #0
  449338:	ldrb	w1, [x2], #1
  44933c:	cbz	w1, 449358 <nftw@plt+0x467d8>
  449340:	mov	w3, #0x43                  	// #67
  449344:	nop
  449348:	madd	w0, w0, w3, w1
  44934c:	ldrb	w1, [x2], #1
  449350:	sub	w0, w0, #0x71
  449354:	cbnz	w1, 449348 <nftw@plt+0x467c8>
  449358:	ret
  44935c:	nop
  449360:	mov	w8, #0x79b9                	// #31161
  449364:	mov	w5, w1
  449368:	movk	w8, #0x9e37, lsl #16
  44936c:	tst	x0, #0x3
  449370:	mov	w7, w8
  449374:	b.eq	4495a0 <nftw@plt+0x46a20>  // b.none
  449378:	cmp	w1, #0xb
  44937c:	b.ls	449464 <nftw@plt+0x468e4>  // b.plast
  449380:	ldrb	w3, [x0, #10]
  449384:	sub	w5, w5, #0xc
  449388:	ldrb	w10, [x0, #6]
  44938c:	cmp	w5, #0xb
  449390:	ldrb	w4, [x0, #5]
  449394:	ldrb	w9, [x0, #7]
  449398:	lsl	w6, w3, #16
  44939c:	ldrb	w13, [x0, #4]
  4493a0:	lsl	w10, w10, #16
  4493a4:	ldrb	w3, [x0, #9]
  4493a8:	add	w4, w10, w4, lsl #8
  4493ac:	ldrb	w11, [x0, #11]
  4493b0:	ldrb	w12, [x0, #8]
  4493b4:	add	w9, w13, w9, lsl #24
  4493b8:	ldrb	w10, [x0, #2]
  4493bc:	add	w3, w6, w3, lsl #8
  4493c0:	add	w4, w4, w9
  4493c4:	ldrb	w6, [x0, #1]
  4493c8:	ldrb	w9, [x0, #3]
  4493cc:	add	w11, w12, w11, lsl #24
  4493d0:	ldrb	w12, [x0], #12
  4493d4:	add	w3, w3, w11
  4493d8:	lsl	w10, w10, #16
  4493dc:	add	w2, w3, w2
  4493e0:	add	w4, w4, w8
  4493e4:	add	w6, w10, w6, lsl #8
  4493e8:	add	w3, w12, w9, lsl #24
  4493ec:	add	w8, w4, w2
  4493f0:	add	w6, w6, w3
  4493f4:	sub	w3, w4, w2
  4493f8:	sub	w4, w6, w8
  4493fc:	add	w4, w4, w7
  449400:	eor	w4, w4, w2, lsr #13
  449404:	sub	w3, w3, w4
  449408:	sub	w2, w2, w4
  44940c:	eor	w3, w3, w4, lsl #8
  449410:	sub	w2, w2, w3
  449414:	sub	w4, w4, w3
  449418:	eor	w2, w2, w3, lsr #13
  44941c:	sub	w4, w4, w2
  449420:	sub	w3, w3, w2
  449424:	eor	w4, w4, w2, lsr #12
  449428:	sub	w3, w3, w4
  44942c:	sub	w2, w2, w4
  449430:	eor	w3, w3, w4, lsl #16
  449434:	sub	w2, w2, w3
  449438:	sub	w4, w4, w3
  44943c:	eor	w2, w2, w3, lsr #5
  449440:	sub	w4, w4, w2
  449444:	sub	w3, w3, w2
  449448:	eor	w7, w4, w2, lsr #3
  44944c:	sub	w3, w3, w7
  449450:	sub	w2, w2, w7
  449454:	eor	w8, w3, w7, lsl #10
  449458:	sub	w2, w2, w8
  44945c:	eor	w2, w2, w8, lsr #15
  449460:	b.hi	449380 <nftw@plt+0x46800>  // b.pmore
  449464:	add	w2, w2, w1
  449468:	cmp	w5, #0x6
  44946c:	b.eq	4494b0 <nftw@plt+0x46930>  // b.none
  449470:	b.ls	4494bc <nftw@plt+0x4693c>  // b.plast
  449474:	cmp	w5, #0x9
  449478:	b.eq	449498 <nftw@plt+0x46918>  // b.none
  44947c:	b.ls	449584 <nftw@plt+0x46a04>  // b.plast
  449480:	cmp	w5, #0xa
  449484:	b.eq	449490 <nftw@plt+0x46910>  // b.none
  449488:	ldrb	w1, [x0, #10]
  44948c:	add	w2, w2, w1, lsl #24
  449490:	ldrb	w1, [x0, #9]
  449494:	add	w2, w2, w1, lsl #16
  449498:	ldrb	w1, [x0, #8]
  44949c:	add	w2, w2, w1, lsl #8
  4494a0:	ldrb	w1, [x0, #7]
  4494a4:	add	w8, w8, w1, lsl #24
  4494a8:	ldrb	w1, [x0, #6]
  4494ac:	add	w8, w8, w1, lsl #16
  4494b0:	ldrb	w1, [x0, #5]
  4494b4:	add	w8, w8, w1, lsl #8
  4494b8:	b	4494d8 <nftw@plt+0x46958>
  4494bc:	cmp	w5, #0x3
  4494c0:	b.eq	4494e8 <nftw@plt+0x46968>  // b.none
  4494c4:	b.ls	449570 <nftw@plt+0x469f0>  // b.plast
  4494c8:	cmp	w5, #0x4
  4494cc:	b.eq	4494e0 <nftw@plt+0x46960>  // b.none
  4494d0:	cmp	w5, #0x5
  4494d4:	b.ne	449500 <nftw@plt+0x46980>  // b.any
  4494d8:	ldrb	w1, [x0, #4]
  4494dc:	add	w8, w8, w1
  4494e0:	ldrb	w1, [x0, #3]
  4494e4:	add	w7, w7, w1, lsl #24
  4494e8:	ldrb	w1, [x0, #2]
  4494ec:	add	w7, w7, w1, lsl #16
  4494f0:	ldrb	w1, [x0, #1]
  4494f4:	add	w7, w7, w1, lsl #8
  4494f8:	ldrb	w0, [x0]
  4494fc:	add	w7, w7, w0
  449500:	add	w4, w8, w2
  449504:	sub	w3, w8, w2
  449508:	sub	w4, w7, w4
  44950c:	eor	w7, w4, w2, lsr #13
  449510:	sub	w3, w3, w7
  449514:	sub	w2, w2, w7
  449518:	eor	w3, w3, w7, lsl #8
  44951c:	sub	w2, w2, w3
  449520:	sub	w0, w7, w3
  449524:	eor	w2, w2, w3, lsr #13
  449528:	sub	w0, w0, w2
  44952c:	sub	w1, w3, w2
  449530:	eor	w0, w0, w2, lsr #12
  449534:	sub	w1, w1, w0
  449538:	sub	w2, w2, w0
  44953c:	eor	w1, w1, w0, lsl #16
  449540:	sub	w2, w2, w1
  449544:	sub	w0, w0, w1
  449548:	eor	w2, w2, w1, lsr #5
  44954c:	sub	w0, w0, w2
  449550:	sub	w1, w1, w2
  449554:	eor	w0, w0, w2, lsr #3
  449558:	sub	w1, w1, w0
  44955c:	sub	w2, w2, w0
  449560:	eor	w0, w1, w0, lsl #10
  449564:	sub	w2, w2, w0
  449568:	eor	w0, w2, w0, lsr #15
  44956c:	ret
  449570:	cmp	w5, #0x1
  449574:	b.eq	4494f8 <nftw@plt+0x46978>  // b.none
  449578:	cmp	w5, #0x2
  44957c:	b.eq	4494f0 <nftw@plt+0x46970>  // b.none
  449580:	b	449500 <nftw@plt+0x46980>
  449584:	cmp	w5, #0x7
  449588:	b.eq	4494a8 <nftw@plt+0x46928>  // b.none
  44958c:	cmp	w5, #0x8
  449590:	b.ne	449500 <nftw@plt+0x46980>  // b.any
  449594:	ldrb	w1, [x0, #7]
  449598:	add	w8, w8, w1, lsl #24
  44959c:	b	4494a8 <nftw@plt+0x46928>
  4495a0:	cmp	w1, #0xb
  4495a4:	b.ls	449464 <nftw@plt+0x468e4>  // b.plast
  4495a8:	ldp	w4, w3, [x0]
  4495ac:	sub	w5, w5, #0xc
  4495b0:	ldr	w6, [x0, #8]
  4495b4:	cmp	w5, #0xb
  4495b8:	add	w3, w8, w3
  4495bc:	add	w4, w7, w4
  4495c0:	add	w2, w2, w6
  4495c4:	add	x0, x0, #0xc
  4495c8:	add	w6, w3, w2
  4495cc:	sub	w3, w3, w2
  4495d0:	sub	w4, w4, w6
  4495d4:	eor	w4, w4, w2, lsr #13
  4495d8:	sub	w3, w3, w4
  4495dc:	sub	w2, w2, w4
  4495e0:	eor	w3, w3, w4, lsl #8
  4495e4:	sub	w2, w2, w3
  4495e8:	sub	w4, w4, w3
  4495ec:	eor	w2, w2, w3, lsr #13
  4495f0:	sub	w4, w4, w2
  4495f4:	sub	w3, w3, w2
  4495f8:	eor	w4, w4, w2, lsr #12
  4495fc:	sub	w3, w3, w4
  449600:	sub	w2, w2, w4
  449604:	eor	w3, w3, w4, lsl #16
  449608:	sub	w2, w2, w3
  44960c:	sub	w4, w4, w3
  449610:	eor	w2, w2, w3, lsr #5
  449614:	sub	w4, w4, w2
  449618:	sub	w3, w3, w2
  44961c:	eor	w7, w4, w2, lsr #3
  449620:	sub	w3, w3, w7
  449624:	sub	w2, w2, w7
  449628:	eor	w8, w3, w7, lsl #10
  44962c:	sub	w2, w2, w8
  449630:	eor	w2, w2, w8, lsr #15
  449634:	b.hi	4495a8 <nftw@plt+0x46a28>  // b.pmore
  449638:	b	449464 <nftw@plt+0x468e4>
  44963c:	nop
  449640:	ret
  449644:	nop
  449648:	mov	x1, x0
  44964c:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x205a0>
  449650:	add	x0, x2, #0x248
  449654:	mov	w3, #0x88                  	// #136
  449658:	ldrb	w2, [x1]
  44965c:	ldrh	w0, [x0, w2, sxtw #1]
  449660:	tst	w3, w0
  449664:	b.eq	449674 <nftw@plt+0x46af4>  // b.none
  449668:	ldrb	w0, [x1, #1]
  44966c:	cmp	w0, #0x3a
  449670:	b.eq	44969c <nftw@plt+0x46b1c>  // b.none
  449674:	mov	x0, x1
  449678:	cbz	w2, 449698 <nftw@plt+0x46b18>
  44967c:	mov	w3, #0x5c                  	// #92
  449680:	add	x1, x1, #0x1
  449684:	cmp	w2, #0x2f
  449688:	ccmp	w2, w3, #0x4, ne  // ne = any
  44968c:	csel	x0, x0, x1, ne  // ne = any
  449690:	ldrb	w2, [x1]
  449694:	cbnz	w2, 449680 <nftw@plt+0x46b00>
  449698:	ret
  44969c:	ldrb	w2, [x1, #2]
  4496a0:	add	x1, x1, #0x2
  4496a4:	b	449674 <nftw@plt+0x46af4>
  4496a8:	ldrb	w2, [x0]
  4496ac:	mov	x1, x0
  4496b0:	cbz	w2, 4496cc <nftw@plt+0x46b4c>
  4496b4:	nop
  4496b8:	add	x1, x1, #0x1
  4496bc:	cmp	w2, #0x2f
  4496c0:	csel	x0, x0, x1, ne  // ne = any
  4496c4:	ldrb	w2, [x1]
  4496c8:	cbnz	w2, 4496b8 <nftw@plt+0x46b38>
  4496cc:	ret
  4496d0:	b	4496a8 <nftw@plt+0x46b28>
  4496d4:	nop
  4496d8:	mov	x12, #0x1020                	// #4128
  4496dc:	sub	sp, sp, x12
  4496e0:	add	x1, sp, #0x20
  4496e4:	stp	x29, x30, [sp]
  4496e8:	mov	x29, sp
  4496ec:	str	x19, [sp, #16]
  4496f0:	mov	x19, x0
  4496f4:	bl	402a30 <realpath@plt>
  4496f8:	cmp	x0, #0x0
  4496fc:	csel	x0, x0, x19, ne  // ne = any
  449700:	bl	402770 <strdup@plt>
  449704:	mov	x12, #0x1020                	// #4128
  449708:	ldp	x29, x30, [sp]
  44970c:	ldr	x19, [sp, #16]
  449710:	add	sp, sp, x12
  449714:	ret
  449718:	stp	x29, x30, [sp, #-16]!
  44971c:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  449720:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x205a0>
  449724:	mov	x29, sp
  449728:	ldr	x0, [x0, #1392]
  44972c:	add	x2, x2, #0x30
  449730:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  449734:	add	x1, x1, #0xc88
  449738:	bl	402b30 <fprintf@plt>
  44973c:	mov	w0, #0x1                   	// #1
  449740:	bl	402520 <exit@plt>
  449744:	nop
  449748:	mov	x2, x0
  44974c:	mov	x0, x1
  449750:	ldrb	w4, [x2, #80]
  449754:	ldr	x3, [x2, #56]
  449758:	tbz	w4, #0, 449768 <nftw@plt+0x46be8>
  44975c:	ldr	x0, [x2, #72]
  449760:	mov	x16, x3
  449764:	br	x16
  449768:	mov	x16, x3
  44976c:	br	x16
  449770:	stp	x29, x30, [sp, #-48]!
  449774:	mov	x29, sp
  449778:	stp	x19, x20, [sp, #16]
  44977c:	mov	x19, x0
  449780:	stp	x21, x22, [sp, #32]
  449784:	cbz	x2, 4497fc <nftw@plt+0x46c7c>
  449788:	sub	x22, x2, #0x1
  44978c:	neg	x21, x2
  449790:	cmp	x1, #0x0
  449794:	mov	x0, #0xfe0                 	// #4064
  449798:	csel	x1, x1, x0, ne  // ne = any
  44979c:	str	x1, [x19]
  4497a0:	str	x22, [x19, #48]
  4497a4:	mov	x0, x19
  4497a8:	bl	449748 <nftw@plt+0x46bc8>
  4497ac:	mov	x20, x0
  4497b0:	cbz	x0, 449808 <nftw@plt+0x46c88>
  4497b4:	add	x2, x20, #0x10
  4497b8:	mov	w0, #0x1                   	// #1
  4497bc:	ldr	x1, [x19]
  4497c0:	add	x2, x2, x22
  4497c4:	and	x2, x2, x21
  4497c8:	ldp	x21, x22, [sp, #32]
  4497cc:	stp	x20, x2, [x19, #8]
  4497d0:	add	x1, x20, x1
  4497d4:	str	x2, [x19, #24]
  4497d8:	str	x1, [x20]
  4497dc:	str	x1, [x19, #32]
  4497e0:	ldrb	w1, [x19, #80]
  4497e4:	str	xzr, [x20, #8]
  4497e8:	and	w1, w1, #0xfffffff9
  4497ec:	strb	w1, [x19, #80]
  4497f0:	ldp	x19, x20, [sp, #16]
  4497f4:	ldp	x29, x30, [sp], #48
  4497f8:	ret
  4497fc:	mov	x21, #0xfffffffffffffff0    	// #-16
  449800:	mov	x22, #0xf                   	// #15
  449804:	b	449790 <nftw@plt+0x46c10>
  449808:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  44980c:	ldr	x0, [x0, #1336]
  449810:	blr	x0
  449814:	b	4497b4 <nftw@plt+0x46c34>
  449818:	mov	x2, x0
  44981c:	mov	x0, x1
  449820:	ldrb	w4, [x2, #80]
  449824:	ldr	x3, [x2, #64]
  449828:	tbz	w4, #0, 449838 <nftw@plt+0x46cb8>
  44982c:	ldr	x0, [x2, #72]
  449830:	mov	x16, x3
  449834:	br	x16
  449838:	mov	x16, x3
  44983c:	br	x16

0000000000449840 <_obstack_begin@@Base>:
  449840:	ldrb	w6, [x0, #80]
  449844:	stp	x3, x4, [x0, #56]
  449848:	and	w6, w6, #0xfffffffe
  44984c:	strb	w6, [x0, #80]
  449850:	b	449770 <nftw@plt+0x46bf0>
  449854:	nop

0000000000449858 <_obstack_begin_1@@Base>:
  449858:	ldrb	w7, [x0, #80]
  44985c:	stp	x3, x4, [x0, #56]
  449860:	orr	w7, w7, #0x1
  449864:	str	x5, [x0, #72]
  449868:	strb	w7, [x0, #80]
  44986c:	b	449770 <nftw@plt+0x46bf0>

0000000000449870 <_obstack_newchunk@@Base>:
  449870:	stp	x29, x30, [sp, #-64]!
  449874:	mov	x29, sp
  449878:	stp	x19, x20, [sp, #16]
  44987c:	mov	x19, x0
  449880:	ldp	x2, x20, [x0, #16]
  449884:	stp	x21, x22, [sp, #32]
  449888:	ldr	x3, [x0, #48]
  44988c:	str	x23, [sp, #48]
  449890:	ldr	x23, [x0, #8]
  449894:	sub	x20, x20, x2
  449898:	adds	x1, x20, x1
  44989c:	cset	x4, cs  // cs = hs, nlast
  4498a0:	adds	x1, x3, x1
  4498a4:	cset	x2, cs  // cs = hs, nlast
  4498a8:	cmp	x4, #0x0
  4498ac:	ccmp	x2, #0x0, #0x0, eq  // eq = none
  4498b0:	b.eq	4498d0 <_obstack_newchunk@@Base+0x60>  // b.none
  4498b4:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  4498b8:	ldr	x0, [x0, #1336]
  4498bc:	blr	x0
  4498c0:	str	xzr, [x19, #8]
  4498c4:	mov	x0, #0x0                   	// #0
  4498c8:	str	x23, [x0, #8]
  4498cc:	brk	#0x3e8
  4498d0:	ldr	x3, [x0]
  4498d4:	lsr	x21, x20, #3
  4498d8:	add	x21, x21, #0x64
  4498dc:	cmp	x3, x1
  4498e0:	add	x21, x21, x1
  4498e4:	csel	x1, x3, x1, cs  // cs = hs, nlast
  4498e8:	cmp	x1, x21
  4498ec:	csel	x21, x1, x21, cs  // cs = hs, nlast
  4498f0:	mov	x1, x21
  4498f4:	bl	449748 <nftw@plt+0x46bc8>
  4498f8:	mov	x22, x0
  4498fc:	cbz	x0, 4498b4 <_obstack_newchunk@@Base+0x44>
  449900:	str	x0, [x19, #8]
  449904:	add	x1, x0, x21
  449908:	ldr	x21, [x19, #48]
  44990c:	str	x23, [x0, #8]
  449910:	str	x1, [x19, #32]
  449914:	mov	x2, x20
  449918:	str	x1, [x0], #16
  44991c:	ldr	x1, [x19, #16]
  449920:	add	x0, x0, x21
  449924:	bic	x21, x0, x21
  449928:	mov	x0, x21
  44992c:	bl	402490 <memcpy@plt>
  449930:	ldrb	w0, [x19, #80]
  449934:	tbnz	w0, #1, 449954 <_obstack_newchunk@@Base+0xe4>
  449938:	ldr	x2, [x19, #48]
  44993c:	add	x1, x23, #0x10
  449940:	ldr	x0, [x19, #16]
  449944:	add	x1, x1, x2
  449948:	bic	x1, x1, x2
  44994c:	cmp	x0, x1
  449950:	b.eq	44997c <_obstack_newchunk@@Base+0x10c>  // b.none
  449954:	ldrb	w0, [x19, #80]
  449958:	add	x20, x21, x20
  44995c:	ldr	x23, [sp, #48]
  449960:	and	w0, w0, #0xfffffffd
  449964:	stp	x21, x20, [x19, #16]
  449968:	strb	w0, [x19, #80]
  44996c:	ldp	x19, x20, [sp, #16]
  449970:	ldp	x21, x22, [sp, #32]
  449974:	ldp	x29, x30, [sp], #64
  449978:	ret
  44997c:	ldr	x0, [x23, #8]
  449980:	str	x0, [x22, #8]
  449984:	mov	x1, x23
  449988:	mov	x0, x19
  44998c:	bl	449818 <nftw@plt+0x46c98>
  449990:	b	449954 <_obstack_newchunk@@Base+0xe4>
  449994:	nop

0000000000449998 <_obstack_allocated_p@@Base>:
  449998:	ldr	x0, [x0, #8]
  44999c:	cbz	x0, 4499c0 <_obstack_allocated_p@@Base+0x28>
  4499a0:	cmp	x1, x0
  4499a4:	b.ls	4499b4 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  4499a8:	ldr	x2, [x0]
  4499ac:	cmp	x2, x1
  4499b0:	b.cs	4499c4 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  4499b4:	ldr	x0, [x0, #8]
  4499b8:	cbnz	x0, 4499a0 <_obstack_allocated_p@@Base+0x8>
  4499bc:	mov	w0, #0x0                   	// #0
  4499c0:	ret
  4499c4:	mov	w0, #0x1                   	// #1
  4499c8:	ret
  4499cc:	nop

00000000004499d0 <_obstack_free@@Base>:
  4499d0:	stp	x29, x30, [sp, #-48]!
  4499d4:	mov	x29, sp
  4499d8:	str	x21, [sp, #32]
  4499dc:	mov	x21, x1
  4499e0:	ldr	x1, [x0, #8]
  4499e4:	cbz	x1, 449a2c <_obstack_free@@Base+0x5c>
  4499e8:	stp	x19, x20, [sp, #16]
  4499ec:	mov	x20, x0
  4499f0:	b	4499f8 <_obstack_free@@Base+0x28>
  4499f4:	mov	x1, x19
  4499f8:	cmp	x1, x21
  4499fc:	b.cs	449a0c <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  449a00:	ldr	x0, [x1]
  449a04:	cmp	x0, x21
  449a08:	b.cs	449a3c <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  449a0c:	mov	x0, x20
  449a10:	ldr	x19, [x1, #8]
  449a14:	bl	449818 <nftw@plt+0x46c98>
  449a18:	ldrb	w2, [x20, #80]
  449a1c:	orr	w2, w2, #0x2
  449a20:	strb	w2, [x20, #80]
  449a24:	cbnz	x19, 4499f4 <_obstack_free@@Base+0x24>
  449a28:	ldp	x19, x20, [sp, #16]
  449a2c:	cbnz	x21, 449a54 <_obstack_free@@Base+0x84>
  449a30:	ldr	x21, [sp, #32]
  449a34:	ldp	x29, x30, [sp], #48
  449a38:	ret
  449a3c:	stp	x1, x21, [x20, #8]
  449a40:	stp	x21, x0, [x20, #24]
  449a44:	ldp	x19, x20, [sp, #16]
  449a48:	ldr	x21, [sp, #32]
  449a4c:	ldp	x29, x30, [sp], #48
  449a50:	ret
  449a54:	stp	x19, x20, [sp, #16]
  449a58:	bl	4027f0 <abort@plt>
  449a5c:	nop

0000000000449a60 <_obstack_memory_used@@Base>:
  449a60:	ldr	x1, [x0, #8]
  449a64:	mov	x0, #0x0                   	// #0
  449a68:	cbz	x1, 449a84 <_obstack_memory_used@@Base+0x24>
  449a6c:	nop
  449a70:	ldr	x2, [x1]
  449a74:	sub	x2, x2, x1
  449a78:	ldr	x1, [x1, #8]
  449a7c:	add	x0, x0, x2
  449a80:	cbnz	x1, 449a70 <_obstack_memory_used@@Base+0x10>
  449a84:	ret
  449a88:	stp	x29, x30, [sp, #-32]!
  449a8c:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  449a90:	mov	x29, sp
  449a94:	str	x19, [sp, #16]
  449a98:	mov	w19, w0
  449a9c:	ldr	x0, [x1, #3408]
  449aa0:	cbz	x0, 449aa8 <_obstack_memory_used@@Base+0x48>
  449aa4:	blr	x0
  449aa8:	mov	w0, w19
  449aac:	bl	402520 <exit@plt>
  449ab0:	stp	x29, x30, [sp, #-32]!
  449ab4:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x425a0>
  449ab8:	mov	x29, sp
  449abc:	str	x19, [sp, #16]
  449ac0:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  449ac4:	str	x0, [x2, #1344]
  449ac8:	ldr	x1, [x19, #2680]
  449acc:	cbz	x1, 449adc <_obstack_memory_used@@Base+0x7c>
  449ad0:	ldr	x19, [sp, #16]
  449ad4:	ldp	x29, x30, [sp], #32
  449ad8:	ret
  449adc:	mov	x0, #0x0                   	// #0
  449ae0:	bl	402530 <sbrk@plt>
  449ae4:	str	x0, [x19, #2680]
  449ae8:	ldr	x19, [sp, #16]
  449aec:	ldp	x29, x30, [sp], #32
  449af0:	ret
  449af4:	nop
  449af8:	stp	x29, x30, [sp, #-32]!
  449afc:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  449b00:	mov	x29, sp
  449b04:	stp	x19, x20, [sp, #16]
  449b08:	mov	x19, x0
  449b0c:	mov	x0, #0x0                   	// #0
  449b10:	ldr	x20, [x1, #2680]
  449b14:	cbz	x20, 449b64 <_obstack_memory_used@@Base+0x104>
  449b18:	bl	402530 <sbrk@plt>
  449b1c:	sub	x5, x0, x20
  449b20:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x425a0>
  449b24:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x425a0>
  449b28:	adrp	x6, 45a000 <_obstack_memory_used@@Base+0x105a0>
  449b2c:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x115a0>
  449b30:	ldr	x2, [x1, #1344]
  449b34:	add	x6, x6, #0xbd0
  449b38:	ldr	x0, [x0, #1392]
  449b3c:	add	x3, x3, #0xa50
  449b40:	ldrb	w1, [x2]
  449b44:	mov	x4, x19
  449b48:	cmp	w1, #0x0
  449b4c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  449b50:	csel	x3, x3, x6, ne  // ne = any
  449b54:	add	x1, x1, #0x448
  449b58:	bl	402b30 <fprintf@plt>
  449b5c:	mov	w0, #0x1                   	// #1
  449b60:	bl	449a88 <_obstack_memory_used@@Base+0x28>
  449b64:	bl	402530 <sbrk@plt>
  449b68:	adrp	x5, 48c000 <_obstack_memory_used@@Base+0x425a0>
  449b6c:	add	x5, x5, #0x598
  449b70:	sub	x5, x0, x5
  449b74:	b	449b20 <_obstack_memory_used@@Base+0xc0>
  449b78:	stp	x29, x30, [sp, #-32]!
  449b7c:	cmp	x0, #0x0
  449b80:	mov	x29, sp
  449b84:	str	x19, [sp, #16]
  449b88:	csinc	x19, x0, xzr, ne  // ne = any
  449b8c:	mov	x0, x19
  449b90:	bl	402670 <malloc@plt>
  449b94:	cbz	x0, 449ba4 <_obstack_memory_used@@Base+0x144>
  449b98:	ldr	x19, [sp, #16]
  449b9c:	ldp	x29, x30, [sp], #32
  449ba0:	ret
  449ba4:	mov	x0, x19
  449ba8:	bl	449af8 <_obstack_memory_used@@Base+0x98>
  449bac:	nop
  449bb0:	stp	x29, x30, [sp, #-32]!
  449bb4:	cmp	x0, #0x0
  449bb8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  449bbc:	mov	x29, sp
  449bc0:	stp	x19, x20, [sp, #16]
  449bc4:	b.ne	449bec <_obstack_memory_used@@Base+0x18c>  // b.any
  449bc8:	mov	x19, #0x1                   	// #1
  449bcc:	mov	x20, x19
  449bd0:	mov	x1, x19
  449bd4:	mov	x0, x20
  449bd8:	bl	402710 <calloc@plt>
  449bdc:	cbz	x0, 449bf8 <_obstack_memory_used@@Base+0x198>
  449be0:	ldp	x19, x20, [sp, #16]
  449be4:	ldp	x29, x30, [sp], #32
  449be8:	ret
  449bec:	mov	x20, x0
  449bf0:	mov	x19, x1
  449bf4:	b	449bd0 <_obstack_memory_used@@Base+0x170>
  449bf8:	mul	x0, x20, x19
  449bfc:	bl	449af8 <_obstack_memory_used@@Base+0x98>
  449c00:	stp	x29, x30, [sp, #-32]!
  449c04:	cmp	x1, #0x0
  449c08:	mov	x29, sp
  449c0c:	str	x19, [sp, #16]
  449c10:	csinc	x19, x1, xzr, ne  // ne = any
  449c14:	cbz	x0, 449c30 <_obstack_memory_used@@Base+0x1d0>
  449c18:	mov	x1, x19
  449c1c:	bl	402750 <realloc@plt>
  449c20:	cbz	x0, 449c3c <_obstack_memory_used@@Base+0x1dc>
  449c24:	ldr	x19, [sp, #16]
  449c28:	ldp	x29, x30, [sp], #32
  449c2c:	ret
  449c30:	mov	x0, x19
  449c34:	bl	402670 <malloc@plt>
  449c38:	b	449c20 <_obstack_memory_used@@Base+0x1c0>
  449c3c:	mov	x0, x19
  449c40:	bl	449af8 <_obstack_memory_used@@Base+0x98>
  449c44:	nop
  449c48:	stp	x29, x30, [sp, #-48]!
  449c4c:	mov	x29, sp
  449c50:	stp	x19, x20, [sp, #16]
  449c54:	mov	x20, x2
  449c58:	mov	x19, x1
  449c5c:	stp	x21, x22, [sp, #32]
  449c60:	mov	x22, x0
  449c64:	mov	x0, x2
  449c68:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  449c6c:	mov	x21, x0
  449c70:	cmp	x20, x19
  449c74:	b.hi	449c94 <_obstack_memory_used@@Base+0x234>  // b.pmore
  449c78:	mov	x2, x19
  449c7c:	mov	x1, x22
  449c80:	mov	x0, x21
  449c84:	ldp	x19, x20, [sp, #16]
  449c88:	ldp	x21, x22, [sp, #32]
  449c8c:	ldp	x29, x30, [sp], #48
  449c90:	b	402490 <memcpy@plt>
  449c94:	sub	x2, x20, x19
  449c98:	add	x0, x0, x19
  449c9c:	mov	w1, #0x0                   	// #0
  449ca0:	bl	4026f0 <memset@plt>
  449ca4:	mov	x2, x19
  449ca8:	mov	x1, x22
  449cac:	mov	x0, x21
  449cb0:	ldp	x19, x20, [sp, #16]
  449cb4:	ldp	x21, x22, [sp, #32]
  449cb8:	ldp	x29, x30, [sp], #48
  449cbc:	b	402490 <memcpy@plt>
  449cc0:	stp	x29, x30, [sp, #-32]!
  449cc4:	mov	x29, sp
  449cc8:	stp	x19, x20, [sp, #16]
  449ccc:	mov	x20, x0
  449cd0:	bl	4024f0 <strlen@plt>
  449cd4:	add	x19, x0, #0x1
  449cd8:	mov	x0, x19
  449cdc:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  449ce0:	mov	x2, x19
  449ce4:	mov	x1, x20
  449ce8:	ldp	x19, x20, [sp, #16]
  449cec:	ldp	x29, x30, [sp], #32
  449cf0:	b	402490 <memcpy@plt>
  449cf4:	nop
  449cf8:	stp	x29, x30, [sp, #-32]!
  449cfc:	mov	x29, sp
  449d00:	stp	x19, x20, [sp, #16]
  449d04:	mov	w20, w0
  449d08:	bl	402790 <strerror@plt>
  449d0c:	cbz	x0, 449d1c <_obstack_memory_used@@Base+0x2bc>
  449d10:	ldp	x19, x20, [sp, #16]
  449d14:	ldp	x29, x30, [sp], #32
  449d18:	ret
  449d1c:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  449d20:	add	x19, x19, #0xa80
  449d24:	mov	w2, w20
  449d28:	mov	x0, x19
  449d2c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  449d30:	add	x1, x1, #0x490
  449d34:	bl	4025b0 <sprintf@plt>
  449d38:	mov	x0, x19
  449d3c:	ldp	x19, x20, [sp, #16]
  449d40:	ldp	x29, x30, [sp], #32
  449d44:	ret
  449d48:	stp	x29, x30, [sp, #-32]!
  449d4c:	mov	x29, sp
  449d50:	stp	x19, x20, [sp, #16]
  449d54:	mov	x20, x0
  449d58:	bl	402540 <strnlen@plt>
  449d5c:	mov	x19, x0
  449d60:	add	x0, x0, #0x1
  449d64:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  449d68:	mov	x1, x20
  449d6c:	mov	x2, x19
  449d70:	strb	wzr, [x0, x19]
  449d74:	ldp	x19, x20, [sp, #16]
  449d78:	ldp	x29, x30, [sp], #32
  449d7c:	b	402490 <memcpy@plt>
  449d80:	stp	x29, x30, [sp, #-64]!
  449d84:	mov	x29, sp
  449d88:	stp	x19, x20, [sp, #16]
  449d8c:	mov	x19, x1
  449d90:	add	x1, sp, #0x20
  449d94:	mov	x20, x0
  449d98:	ldp	x2, x3, [x19]
  449d9c:	stp	x2, x3, [sp, #32]
  449da0:	ldp	x2, x3, [x19, #16]
  449da4:	stp	x2, x3, [sp, #48]
  449da8:	bl	449de8 <_obstack_memory_used@@Base+0x388>
  449dac:	sxtw	x0, w0
  449db0:	bl	449b78 <_obstack_memory_used@@Base+0x118>
  449db4:	ldp	x6, x7, [x19]
  449db8:	mov	x1, x20
  449dbc:	ldp	x4, x5, [x19, #16]
  449dc0:	add	x2, sp, #0x20
  449dc4:	mov	x19, x0
  449dc8:	stp	x6, x7, [sp, #32]
  449dcc:	stp	x4, x5, [sp, #48]
  449dd0:	bl	4029b0 <vsprintf@plt>
  449dd4:	mov	x0, x19
  449dd8:	ldp	x19, x20, [sp, #16]
  449ddc:	ldp	x29, x30, [sp], #64
  449de0:	ret
  449de4:	nop
  449de8:	stp	x29, x30, [sp, #-112]!
  449dec:	mov	x29, sp
  449df0:	stp	x19, x20, [sp, #16]
  449df4:	mov	x20, x1
  449df8:	mov	x19, x0
  449dfc:	stp	x21, x22, [sp, #32]
  449e00:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x205a0>
  449e04:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x205a0>
  449e08:	stp	x23, x24, [sp, #48]
  449e0c:	add	x22, x22, #0x4a8
  449e10:	add	x21, x21, #0x4b0
  449e14:	str	x0, [sp, #72]
  449e18:	bl	4024f0 <strlen@plt>
  449e1c:	add	w23, w0, #0x1
  449e20:	ldp	x2, x3, [x20]
  449e24:	stp	x2, x3, [sp, #80]
  449e28:	ldp	x0, x1, [x20, #16]
  449e2c:	stp	x0, x1, [sp, #96]
  449e30:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  449e34:	add	x19, x19, #0x1
  449e38:	str	x19, [sp, #72]
  449e3c:	ldurb	w0, [x19, #-1]
  449e40:	cmp	w0, #0x25
  449e44:	b.eq	449e6c <_obstack_memory_used@@Base+0x40c>  // b.none
  449e48:	ldrb	w0, [x19]
  449e4c:	cbnz	w0, 449e34 <_obstack_memory_used@@Base+0x3d4>
  449e50:	mov	w0, w23
  449e54:	ldp	x19, x20, [sp, #16]
  449e58:	ldp	x21, x22, [sp, #32]
  449e5c:	ldp	x23, x24, [sp, #48]
  449e60:	ldp	x29, x30, [sp], #112
  449e64:	ret
  449e68:	str	x19, [sp, #72]
  449e6c:	mov	x24, x19
  449e70:	ldrb	w20, [x19], #1
  449e74:	mov	x0, x22
  449e78:	mov	w1, w20
  449e7c:	bl	402940 <strchr@plt>
  449e80:	cbnz	x0, 449e68 <_obstack_memory_used@@Base+0x408>
  449e84:	cmp	w20, #0x2a
  449e88:	b.ne	449f2c <_obstack_memory_used@@Base+0x4cc>  // b.any
  449e8c:	ldr	w1, [sp, #104]
  449e90:	str	x19, [sp, #72]
  449e94:	ldr	x0, [sp, #80]
  449e98:	tbnz	w1, #31, 44a038 <_obstack_memory_used@@Base+0x5d8>
  449e9c:	add	x1, x0, #0xb
  449ea0:	and	x1, x1, #0xfffffffffffffff8
  449ea4:	str	x1, [sp, #80]
  449ea8:	ldr	w24, [x0]
  449eac:	ldrb	w20, [x19]
  449eb0:	cmp	w24, #0x0
  449eb4:	cneg	w24, w24, lt  // lt = tstop
  449eb8:	cmp	w20, #0x2e
  449ebc:	add	w24, w24, w23
  449ec0:	b.ne	449ed0 <_obstack_memory_used@@Base+0x470>  // b.any
  449ec4:	b	449f50 <_obstack_memory_used@@Base+0x4f0>
  449ec8:	str	x19, [sp, #72]
  449ecc:	ldrb	w20, [x19]
  449ed0:	add	x19, x19, #0x1
  449ed4:	mov	w1, w20
  449ed8:	mov	x0, x21
  449edc:	bl	402940 <strchr@plt>
  449ee0:	cbnz	x0, 449ec8 <_obstack_memory_used@@Base+0x468>
  449ee4:	cmp	w20, #0x67
  449ee8:	add	w23, w24, #0x1e
  449eec:	b.ls	449fa0 <_obstack_memory_used@@Base+0x540>  // b.plast
  449ef0:	sub	w20, w20, #0x69
  449ef4:	and	w20, w20, #0xff
  449ef8:	cmp	w20, #0xf
  449efc:	b.hi	449f24 <_obstack_memory_used@@Base+0x4c4>  // b.pmore
  449f00:	mov	x1, #0x1                   	// #1
  449f04:	mov	x0, #0x9041                	// #36929
  449f08:	lsl	x1, x1, x20
  449f0c:	tst	x1, x0
  449f10:	b.ne	449fd0 <_obstack_memory_used@@Base+0x570>  // b.any
  449f14:	mov	x0, #0xa0                  	// #160
  449f18:	tst	x1, x0
  449f1c:	b.ne	44a054 <_obstack_memory_used@@Base+0x5f4>  // b.any
  449f20:	tbnz	w1, #10, 449ff0 <_obstack_memory_used@@Base+0x590>
  449f24:	str	x19, [sp, #72]
  449f28:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  449f2c:	mov	x0, x24
  449f30:	add	x1, sp, #0x48
  449f34:	mov	w2, #0xa                   	// #10
  449f38:	bl	4024e0 <strtoul@plt>
  449f3c:	ldr	x19, [sp, #72]
  449f40:	add	w24, w23, w0
  449f44:	ldrb	w20, [x19]
  449f48:	cmp	w20, #0x2e
  449f4c:	b.ne	449ed0 <_obstack_memory_used@@Base+0x470>  // b.any
  449f50:	add	x0, x19, #0x1
  449f54:	str	x0, [sp, #72]
  449f58:	ldrb	w1, [x19, #1]
  449f5c:	cmp	w1, #0x2a
  449f60:	b.ne	44a01c <_obstack_memory_used@@Base+0x5bc>  // b.any
  449f64:	ldr	w2, [sp, #104]
  449f68:	add	x1, x19, #0x2
  449f6c:	str	x1, [sp, #72]
  449f70:	ldr	x0, [sp, #80]
  449f74:	tbnz	w2, #31, 44a0fc <_obstack_memory_used@@Base+0x69c>
  449f78:	add	x2, x0, #0xb
  449f7c:	and	x2, x2, #0xfffffffffffffff8
  449f80:	str	x2, [sp, #80]
  449f84:	ldr	w0, [x0]
  449f88:	ldrb	w20, [x19, #2]
  449f8c:	mov	x19, x1
  449f90:	cmp	w0, #0x0
  449f94:	cneg	w0, w0, lt  // lt = tstop
  449f98:	add	w24, w24, w0
  449f9c:	b	449ed0 <_obstack_memory_used@@Base+0x470>
  449fa0:	cmp	w20, #0x44
  449fa4:	b.ls	449f24 <_obstack_memory_used@@Base+0x4c4>  // b.plast
  449fa8:	sub	w20, w20, #0x45
  449fac:	mov	x1, #0x1                   	// #1
  449fb0:	mov	x0, #0x5                   	// #5
  449fb4:	movk	x0, #0x7, lsl #32
  449fb8:	lsl	x20, x1, x20
  449fbc:	tst	x20, x0
  449fc0:	b.ne	44a074 <_obstack_memory_used@@Base+0x614>  // b.any
  449fc4:	mov	x0, #0xc0080000            	// #3221749760
  449fc8:	tst	x20, x0
  449fcc:	b.eq	449f24 <_obstack_memory_used@@Base+0x4c4>  // b.none
  449fd0:	ldr	w1, [sp, #104]
  449fd4:	ldr	x0, [sp, #80]
  449fd8:	tbnz	w1, #31, 44a0b0 <_obstack_memory_used@@Base+0x650>
  449fdc:	add	x0, x0, #0xb
  449fe0:	str	x19, [sp, #72]
  449fe4:	and	x0, x0, #0xfffffffffffffff8
  449fe8:	str	x0, [sp, #80]
  449fec:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  449ff0:	ldr	w1, [sp, #104]
  449ff4:	ldr	x0, [sp, #80]
  449ff8:	tbnz	w1, #31, 44a0c8 <_obstack_memory_used@@Base+0x668>
  449ffc:	add	x1, x0, #0xf
  44a000:	and	x1, x1, #0xfffffffffffffff8
  44a004:	str	x1, [sp, #80]
  44a008:	ldr	x0, [x0]
  44a00c:	bl	4024f0 <strlen@plt>
  44a010:	add	w23, w23, w0
  44a014:	str	x19, [sp, #72]
  44a018:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  44a01c:	add	x1, sp, #0x48
  44a020:	mov	w2, #0xa                   	// #10
  44a024:	bl	4024e0 <strtoul@plt>
  44a028:	add	w24, w24, w0
  44a02c:	ldr	x19, [sp, #72]
  44a030:	ldrb	w20, [x19]
  44a034:	b	449ed0 <_obstack_memory_used@@Base+0x470>
  44a038:	add	w2, w1, #0x8
  44a03c:	str	w2, [sp, #104]
  44a040:	cmp	w2, #0x0
  44a044:	b.gt	449e9c <_obstack_memory_used@@Base+0x43c>
  44a048:	ldr	x0, [sp, #88]
  44a04c:	add	x0, x0, w1, sxtw
  44a050:	b	449ea8 <_obstack_memory_used@@Base+0x448>
  44a054:	ldr	w1, [sp, #104]
  44a058:	ldr	x0, [sp, #80]
  44a05c:	tbnz	w1, #31, 44a0e4 <_obstack_memory_used@@Base+0x684>
  44a060:	add	x0, x0, #0xf
  44a064:	str	x19, [sp, #72]
  44a068:	and	x0, x0, #0xfffffffffffffff8
  44a06c:	str	x0, [sp, #80]
  44a070:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  44a074:	ldr	w1, [sp, #108]
  44a078:	ldr	x0, [sp, #80]
  44a07c:	tbnz	w1, #31, 44a098 <_obstack_memory_used@@Base+0x638>
  44a080:	add	x0, x0, #0xf
  44a084:	add	w23, w24, #0x151
  44a088:	and	x0, x0, #0xfffffffffffffff8
  44a08c:	str	x0, [sp, #80]
  44a090:	str	x19, [sp, #72]
  44a094:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  44a098:	add	w1, w1, #0x10
  44a09c:	str	w1, [sp, #108]
  44a0a0:	cmp	w1, #0x0
  44a0a4:	b.gt	44a080 <_obstack_memory_used@@Base+0x620>
  44a0a8:	add	w23, w24, #0x151
  44a0ac:	b	44a090 <_obstack_memory_used@@Base+0x630>
  44a0b0:	add	w1, w1, #0x8
  44a0b4:	str	w1, [sp, #104]
  44a0b8:	cmp	w1, #0x0
  44a0bc:	b.gt	449fdc <_obstack_memory_used@@Base+0x57c>
  44a0c0:	str	x19, [sp, #72]
  44a0c4:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  44a0c8:	add	w2, w1, #0x8
  44a0cc:	str	w2, [sp, #104]
  44a0d0:	cmp	w2, #0x0
  44a0d4:	b.gt	449ffc <_obstack_memory_used@@Base+0x59c>
  44a0d8:	ldr	x0, [sp, #88]
  44a0dc:	add	x0, x0, w1, sxtw
  44a0e0:	b	44a008 <_obstack_memory_used@@Base+0x5a8>
  44a0e4:	add	w1, w1, #0x8
  44a0e8:	str	w1, [sp, #104]
  44a0ec:	cmp	w1, #0x0
  44a0f0:	b.gt	44a060 <_obstack_memory_used@@Base+0x600>
  44a0f4:	str	x19, [sp, #72]
  44a0f8:	b	449e48 <_obstack_memory_used@@Base+0x3e8>
  44a0fc:	add	w3, w2, #0x8
  44a100:	str	w3, [sp, #104]
  44a104:	cmp	w3, #0x0
  44a108:	b.gt	449f78 <_obstack_memory_used@@Base+0x518>
  44a10c:	ldr	x0, [sp, #88]
  44a110:	add	x0, x0, w2, sxtw
  44a114:	b	449f84 <_obstack_memory_used@@Base+0x524>
  44a118:	b	44a9d0 <_obstack_memory_used@@Base+0xf70>
  44a11c:	nop
  44a120:	b	44a9d8 <_obstack_memory_used@@Base+0xf78>
  44a124:	nop
  44a128:	stp	x29, x30, [sp, #-64]!
  44a12c:	mov	x29, sp
  44a130:	str	x23, [sp, #48]
  44a134:	mov	x23, x0
  44a138:	ldarb	w0, [x0]
  44a13c:	tst	w0, #0xff
  44a140:	b.ne	44a19c <_obstack_memory_used@@Base+0x73c>  // b.any
  44a144:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a148:	ldr	x0, [x0, #3880]
  44a14c:	cbz	x0, 44a1ac <_obstack_memory_used@@Base+0x74c>
  44a150:	stp	x19, x20, [sp, #16]
  44a154:	mov	w19, #0x100                 	// #256
  44a158:	mov	w20, #0x1                   	// #1
  44a15c:	stp	x21, x22, [sp, #32]
  44a160:	mov	w21, w19
  44a164:	ldaxr	w0, [x23]
  44a168:	cbnz	w0, 44a174 <_obstack_memory_used@@Base+0x714>
  44a16c:	stlxr	w1, w19, [x23]
  44a170:	cbnz	w1, 44a164 <_obstack_memory_used@@Base+0x704>
  44a174:	cmp	w0, #0x0
  44a178:	b.ne	44a1d4 <_obstack_memory_used@@Base+0x774>  // b.any
  44a17c:	mov	w0, #0x1                   	// #1
  44a180:	ldp	x19, x20, [sp, #16]
  44a184:	ldp	x21, x22, [sp, #32]
  44a188:	ldr	x23, [sp, #48]
  44a18c:	ldp	x29, x30, [sp], #64
  44a190:	ret
  44a194:	ldp	x19, x20, [sp, #16]
  44a198:	ldp	x21, x22, [sp, #32]
  44a19c:	mov	w0, #0x0                   	// #0
  44a1a0:	ldr	x23, [sp, #48]
  44a1a4:	ldp	x29, x30, [sp], #64
  44a1a8:	ret
  44a1ac:	ldrb	w0, [x23]
  44a1b0:	cbnz	w0, 44a19c <_obstack_memory_used@@Base+0x73c>
  44a1b4:	ldrb	w0, [x23, #1]
  44a1b8:	cbnz	w0, 44a24c <_obstack_memory_used@@Base+0x7ec>
  44a1bc:	mov	w2, #0x1                   	// #1
  44a1c0:	strb	w2, [x23, #1]
  44a1c4:	mov	w0, #0x1                   	// #1
  44a1c8:	ldr	x23, [sp, #48]
  44a1cc:	ldp	x29, x30, [sp], #64
  44a1d0:	ret
  44a1d4:	orr	w22, w19, #0x10000
  44a1d8:	mov	w3, w0
  44a1dc:	cmp	w20, w3
  44a1e0:	b.eq	44a194 <_obstack_memory_used@@Base+0x734>  // b.none
  44a1e4:	cmp	w19, w3
  44a1e8:	b.ne	44a208 <_obstack_memory_used@@Base+0x7a8>  // b.any
  44a1ec:	mov	w3, w22
  44a1f0:	ldaxr	w2, [x23]
  44a1f4:	cmp	w2, w0
  44a1f8:	b.ne	44a204 <_obstack_memory_used@@Base+0x7a4>  // b.any
  44a1fc:	stlxr	w1, w22, [x23]
  44a200:	cbnz	w1, 44a1f0 <_obstack_memory_used@@Base+0x790>
  44a204:	b.ne	44a23c <_obstack_memory_used@@Base+0x7dc>  // b.any
  44a208:	mov	x1, x23
  44a20c:	mov	w4, #0x0                   	// #0
  44a210:	mov	w2, #0x0                   	// #0
  44a214:	mov	x0, #0x62                  	// #98
  44a218:	bl	402af0 <syscall@plt>
  44a21c:	ldaxr	w0, [x23]
  44a220:	cbnz	w0, 44a22c <_obstack_memory_used@@Base+0x7cc>
  44a224:	stlxr	w1, w21, [x23]
  44a228:	cbnz	w1, 44a21c <_obstack_memory_used@@Base+0x7bc>
  44a22c:	cmp	w0, #0x0
  44a230:	mov	w3, w0
  44a234:	b.eq	44a17c <_obstack_memory_used@@Base+0x71c>  // b.none
  44a238:	b	44a1dc <_obstack_memory_used@@Base+0x77c>
  44a23c:	cmp	w20, w2
  44a240:	b.eq	44a194 <_obstack_memory_used@@Base+0x734>  // b.none
  44a244:	cbnz	w2, 44a208 <_obstack_memory_used@@Base+0x7a8>
  44a248:	b	44a21c <_obstack_memory_used@@Base+0x7bc>
  44a24c:	mov	x0, #0x8                   	// #8
  44a250:	stp	x19, x20, [sp, #16]
  44a254:	stp	x21, x22, [sp, #32]
  44a258:	bl	44ad48 <_obstack_memory_used@@Base+0x12e8>
  44a25c:	mov	x19, x0
  44a260:	bl	44a340 <_obstack_memory_used@@Base+0x8e0>
  44a264:	adrp	x2, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a268:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a26c:	mov	x0, x19
  44a270:	ldr	x2, [x2, #4016]
  44a274:	ldr	x1, [x1, #3896]
  44a278:	bl	44bb60 <_obstack_memory_used@@Base+0x2100>
  44a27c:	nop
  44a280:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a284:	ldr	x1, [x1, #3880]
  44a288:	cbnz	x1, 44a294 <_obstack_memory_used@@Base+0x834>
  44a28c:	strb	wzr, [x0, #1]
  44a290:	ret
  44a294:	ldaxr	w1, [x0]
  44a298:	stlxr	w2, wzr, [x0]
  44a29c:	cbnz	w2, 44a294 <_obstack_memory_used@@Base+0x834>
  44a2a0:	tbz	w1, #16, 44a290 <_obstack_memory_used@@Base+0x830>
  44a2a4:	mov	x1, x0
  44a2a8:	mov	w3, #0x7fffffff            	// #2147483647
  44a2ac:	mov	w2, #0x1                   	// #1
  44a2b0:	mov	x0, #0x62                  	// #98
  44a2b4:	b	402af0 <syscall@plt>
  44a2b8:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a2bc:	ldr	x1, [x1, #3880]
  44a2c0:	cbz	x1, 44a2dc <_obstack_memory_used@@Base+0x87c>
  44a2c4:	mov	w2, #0x1                   	// #1
  44a2c8:	ldaxr	w1, [x0]
  44a2cc:	stlxr	w3, w2, [x0]
  44a2d0:	cbnz	w3, 44a2c8 <_obstack_memory_used@@Base+0x868>
  44a2d4:	tbnz	w1, #16, 44a2ec <_obstack_memory_used@@Base+0x88c>
  44a2d8:	ret
  44a2dc:	strb	wzr, [x0, #1]
  44a2e0:	mov	w1, #0x1                   	// #1
  44a2e4:	stlrb	w1, [x0]
  44a2e8:	ret
  44a2ec:	mov	x1, x0
  44a2f0:	mov	w3, #0x7fffffff            	// #2147483647
  44a2f4:	mov	x0, #0x62                  	// #98
  44a2f8:	b	402af0 <syscall@plt>
  44a2fc:	nop
  44a300:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a304:	ldr	x1, [x1, #4056]
  44a308:	add	x1, x1, #0x10
  44a30c:	str	x1, [x0]
  44a310:	b	44ae80 <_obstack_memory_used@@Base+0x1420>
  44a314:	nop
  44a318:	stp	x29, x30, [sp, #-32]!
  44a31c:	mov	x29, sp
  44a320:	str	x19, [sp, #16]
  44a324:	mov	x19, x0
  44a328:	bl	44a300 <_obstack_memory_used@@Base+0x8a0>
  44a32c:	mov	x0, x19
  44a330:	mov	x1, #0x8                   	// #8
  44a334:	ldr	x19, [sp, #16]
  44a338:	ldp	x29, x30, [sp], #32
  44a33c:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44a340:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a344:	ldr	x1, [x1, #4056]
  44a348:	add	x1, x1, #0x10
  44a34c:	str	x1, [x0]
  44a350:	ret
  44a354:	nop
  44a358:	stp	x29, x30, [sp, #-32]!
  44a35c:	cmp	x0, #0x0
  44a360:	mov	x29, sp
  44a364:	str	x19, [sp, #16]
  44a368:	csinc	x19, x0, xzr, ne  // ne = any
  44a36c:	mov	x0, x19
  44a370:	bl	402670 <malloc@plt>
  44a374:	cbz	x0, 44a384 <_obstack_memory_used@@Base+0x924>
  44a378:	ldr	x19, [sp, #16]
  44a37c:	ldp	x29, x30, [sp], #32
  44a380:	ret
  44a384:	bl	44bc50 <_obstack_memory_used@@Base+0x21f0>
  44a388:	cbz	x0, 44a394 <_obstack_memory_used@@Base+0x934>
  44a38c:	blr	x0
  44a390:	b	44a36c <_obstack_memory_used@@Base+0x90c>
  44a394:	mov	x0, #0x8                   	// #8
  44a398:	bl	44ad48 <_obstack_memory_used@@Base+0x12e8>
  44a39c:	adrp	x3, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a3a0:	adrp	x2, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a3a4:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a3a8:	ldr	x3, [x3, #3992]
  44a3ac:	ldr	x2, [x2, #3920]
  44a3b0:	add	x3, x3, #0x10
  44a3b4:	ldr	x1, [x1, #3904]
  44a3b8:	str	x3, [x0]
  44a3bc:	bl	44bb60 <_obstack_memory_used@@Base+0x2100>
  44a3c0:	b	44a358 <_obstack_memory_used@@Base+0x8f8>
  44a3c4:	nop
  44a3c8:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a3cc:	ldr	x1, [x1, #4008]
  44a3d0:	add	x1, x1, #0x10
  44a3d4:	str	x1, [x0]
  44a3d8:	b	44a790 <_obstack_memory_used@@Base+0xd30>
  44a3dc:	nop
  44a3e0:	stp	x29, x30, [sp, #-32]!
  44a3e4:	mov	x29, sp
  44a3e8:	str	x19, [sp, #16]
  44a3ec:	mov	x19, x0
  44a3f0:	bl	44a3c8 <_obstack_memory_used@@Base+0x968>
  44a3f4:	mov	x0, x19
  44a3f8:	mov	x1, #0x18                  	// #24
  44a3fc:	ldr	x19, [sp, #16]
  44a400:	ldp	x29, x30, [sp], #32
  44a404:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44a408:	stp	x29, x30, [sp, #-64]!
  44a40c:	cmp	x4, x2
  44a410:	mov	x29, sp
  44a414:	stp	x19, x20, [sp, #16]
  44a418:	mov	x19, x0
  44a41c:	mov	x20, x1
  44a420:	b.eq	44a444 <_obstack_memory_used@@Base+0x9e4>  // b.none
  44a424:	ldr	x0, [x19, #16]
  44a428:	mov	x1, x20
  44a42c:	ldp	x19, x20, [sp, #16]
  44a430:	ldr	x5, [x0]
  44a434:	ldr	x5, [x5, #64]
  44a438:	ldp	x29, x30, [sp], #64
  44a43c:	mov	x16, x5
  44a440:	br	x16
  44a444:	ldr	x1, [x3, #8]
  44a448:	ldr	x0, [x0, #8]
  44a44c:	cmp	x0, x1
  44a450:	b.eq	44a478 <_obstack_memory_used@@Base+0xa18>  // b.none
  44a454:	ldrb	w5, [x0]
  44a458:	cmp	w5, #0x2a
  44a45c:	b.eq	44a424 <_obstack_memory_used@@Base+0x9c4>  // b.none
  44a460:	stp	x2, x3, [sp, #40]
  44a464:	str	x4, [sp, #56]
  44a468:	bl	402890 <strcmp@plt>
  44a46c:	ldp	x2, x3, [sp, #40]
  44a470:	ldr	x4, [sp, #56]
  44a474:	cbnz	w0, 44a424 <_obstack_memory_used@@Base+0x9c4>
  44a478:	mov	w0, #0x6                   	// #6
  44a47c:	ldp	x19, x20, [sp, #16]
  44a480:	ldp	x29, x30, [sp], #64
  44a484:	ret
  44a488:	stp	x29, x30, [sp, #-96]!
  44a48c:	mov	x29, sp
  44a490:	stp	x21, x22, [sp, #32]
  44a494:	mov	x22, x3
  44a498:	mov	x21, x1
  44a49c:	stp	x25, x26, [sp, #64]
  44a4a0:	mov	w26, w2
  44a4a4:	ldr	x25, [x0, #8]
  44a4a8:	stp	x19, x20, [sp, #16]
  44a4ac:	mov	x19, x4
  44a4b0:	ldr	x3, [x3, #8]
  44a4b4:	stp	x23, x24, [sp, #48]
  44a4b8:	mov	x20, x7
  44a4bc:	mov	x23, x6
  44a4c0:	cmp	x25, x3
  44a4c4:	b.eq	44a4f4 <_obstack_memory_used@@Base+0xa94>  // b.none
  44a4c8:	stp	x27, x28, [sp, #80]
  44a4cc:	mov	x24, x5
  44a4d0:	mov	x27, x0
  44a4d4:	ldrb	w28, [x25]
  44a4d8:	cmp	w28, #0x2a
  44a4dc:	b.eq	44a530 <_obstack_memory_used@@Base+0xad0>  // b.none
  44a4e0:	mov	x1, x3
  44a4e4:	mov	x0, x25
  44a4e8:	bl	402890 <strcmp@plt>
  44a4ec:	cbnz	w0, 44a530 <_obstack_memory_used@@Base+0xad0>
  44a4f0:	ldp	x27, x28, [sp, #80]
  44a4f4:	str	x19, [x20]
  44a4f8:	str	w26, [x20, #8]
  44a4fc:	tbnz	x21, #63, 44a580 <_obstack_memory_used@@Base+0xb20>
  44a500:	add	x1, x19, x21
  44a504:	mov	w2, #0x6                   	// #6
  44a508:	cmp	x23, x1
  44a50c:	mov	w0, #0x0                   	// #0
  44a510:	csinc	w2, w2, wzr, eq  // eq = none
  44a514:	str	w2, [x20, #16]
  44a518:	ldp	x19, x20, [sp, #16]
  44a51c:	ldp	x21, x22, [sp, #32]
  44a520:	ldp	x23, x24, [sp, #48]
  44a524:	ldp	x25, x26, [sp, #64]
  44a528:	ldp	x29, x30, [sp], #96
  44a52c:	ret
  44a530:	cmp	x19, x23
  44a534:	b.eq	44a598 <_obstack_memory_used@@Base+0xb38>  // b.none
  44a538:	ldr	x0, [x27, #16]
  44a53c:	mov	x7, x20
  44a540:	mov	x6, x23
  44a544:	mov	x5, x24
  44a548:	mov	x4, x19
  44a54c:	mov	x3, x22
  44a550:	ldr	x8, [x0]
  44a554:	mov	w2, w26
  44a558:	mov	x1, x21
  44a55c:	ldp	x19, x20, [sp, #16]
  44a560:	ldp	x21, x22, [sp, #32]
  44a564:	ldp	x23, x24, [sp, #48]
  44a568:	ldp	x25, x26, [sp, #64]
  44a56c:	ldp	x27, x28, [sp, #80]
  44a570:	ldp	x29, x30, [sp], #96
  44a574:	ldr	x8, [x8, #56]
  44a578:	mov	x16, x8
  44a57c:	br	x16
  44a580:	cmn	x21, #0x2
  44a584:	mov	w0, #0x0                   	// #0
  44a588:	b.ne	44a518 <_obstack_memory_used@@Base+0xab8>  // b.any
  44a58c:	mov	w1, #0x1                   	// #1
  44a590:	str	w1, [x20, #16]
  44a594:	b	44a518 <_obstack_memory_used@@Base+0xab8>
  44a598:	ldr	x1, [x24, #8]
  44a59c:	cmp	x25, x1
  44a5a0:	b.eq	44a5b8 <_obstack_memory_used@@Base+0xb58>  // b.none
  44a5a4:	cmp	w28, #0x2a
  44a5a8:	b.eq	44a538 <_obstack_memory_used@@Base+0xad8>  // b.none
  44a5ac:	mov	x0, x25
  44a5b0:	bl	402890 <strcmp@plt>
  44a5b4:	cbnz	w0, 44a538 <_obstack_memory_used@@Base+0xad8>
  44a5b8:	mov	w0, #0x0                   	// #0
  44a5bc:	ldp	x27, x28, [sp, #80]
  44a5c0:	str	w26, [x20, #12]
  44a5c4:	b	44a518 <_obstack_memory_used@@Base+0xab8>
  44a5c8:	stp	x29, x30, [sp, #-48]!
  44a5cc:	mov	x29, sp
  44a5d0:	stp	x19, x20, [sp, #16]
  44a5d4:	mov	x19, x1
  44a5d8:	mov	x20, x2
  44a5dc:	stp	x21, x22, [sp, #32]
  44a5e0:	mov	x22, x0
  44a5e4:	mov	x21, x3
  44a5e8:	bl	44a8b0 <_obstack_memory_used@@Base+0xe50>
  44a5ec:	tst	w0, #0xff
  44a5f0:	b.ne	44a620 <_obstack_memory_used@@Base+0xbc0>  // b.any
  44a5f4:	ldr	x0, [x22, #16]
  44a5f8:	mov	x3, x21
  44a5fc:	mov	x2, x20
  44a600:	mov	x1, x19
  44a604:	ldp	x19, x20, [sp, #16]
  44a608:	ldr	x4, [x0]
  44a60c:	ldp	x21, x22, [sp, #32]
  44a610:	ldp	x29, x30, [sp], #48
  44a614:	ldr	x4, [x4, #48]
  44a618:	mov	x16, x4
  44a61c:	br	x16
  44a620:	ldp	x19, x20, [sp, #16]
  44a624:	ldp	x21, x22, [sp, #32]
  44a628:	ldp	x29, x30, [sp], #48
  44a62c:	ret
  44a630:	ret
  44a634:	nop
  44a638:	mov	w0, #0x0                   	// #0
  44a63c:	ret
  44a640:	mov	w0, #0x0                   	// #0
  44a644:	ret
  44a648:	stp	x29, x30, [sp, #-32]!
  44a64c:	mov	x29, sp
  44a650:	str	x19, [sp, #16]
  44a654:	mov	x19, x0
  44a658:	bl	44a630 <_obstack_memory_used@@Base+0xbd0>
  44a65c:	mov	x0, x19
  44a660:	mov	x1, #0x10                  	// #16
  44a664:	ldr	x19, [sp, #16]
  44a668:	ldp	x29, x30, [sp], #32
  44a66c:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44a670:	ldr	x2, [x0, #8]
  44a674:	ldr	x1, [x1, #8]
  44a678:	cmp	x2, x1
  44a67c:	b.eq	44a6b4 <_obstack_memory_used@@Base+0xc54>  // b.none
  44a680:	ldrb	w3, [x2]
  44a684:	mov	w0, #0x0                   	// #0
  44a688:	cmp	w3, #0x2a
  44a68c:	b.eq	44a6b0 <_obstack_memory_used@@Base+0xc50>  // b.none
  44a690:	stp	x29, x30, [sp, #-16]!
  44a694:	mov	x0, x2
  44a698:	mov	x29, sp
  44a69c:	bl	402890 <strcmp@plt>
  44a6a0:	cmp	w0, #0x0
  44a6a4:	cset	w0, eq  // eq = none
  44a6a8:	ldp	x29, x30, [sp], #16
  44a6ac:	ret
  44a6b0:	ret
  44a6b4:	mov	w0, #0x1                   	// #1
  44a6b8:	ret
  44a6bc:	nop
  44a6c0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44a6c4:	add	x0, x0, #0x518
  44a6c8:	ret
  44a6cc:	nop
  44a6d0:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a6d4:	ldr	x1, [x1, #3992]
  44a6d8:	add	x1, x1, #0x10
  44a6dc:	str	x1, [x0]
  44a6e0:	b	44ae80 <_obstack_memory_used@@Base+0x1420>
  44a6e4:	nop
  44a6e8:	stp	x29, x30, [sp, #-32]!
  44a6ec:	mov	x29, sp
  44a6f0:	str	x19, [sp, #16]
  44a6f4:	mov	x19, x0
  44a6f8:	bl	44a6d0 <_obstack_memory_used@@Base+0xc70>
  44a6fc:	mov	x0, x19
  44a700:	mov	x1, #0x8                   	// #8
  44a704:	ldr	x19, [sp, #16]
  44a708:	ldp	x29, x30, [sp], #32
  44a70c:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44a710:	stp	x29, x30, [sp, #-64]!
  44a714:	mov	x29, sp
  44a718:	ldr	x4, [x0]
  44a71c:	str	xzr, [sp, #40]
  44a720:	str	xzr, [sp, #56]
  44a724:	add	x3, sp, #0x28
  44a728:	ldr	x4, [x4, #48]
  44a72c:	str	x19, [sp, #16]
  44a730:	mov	x19, x2
  44a734:	mov	x2, #0x1000000000          	// #68719476736
  44a738:	str	x2, [sp, #48]
  44a73c:	ldr	x2, [x19]
  44a740:	blr	x4
  44a744:	ldr	w0, [sp, #48]
  44a748:	and	w0, w0, #0x6
  44a74c:	cmp	w0, #0x6
  44a750:	b.ne	44a76c <_obstack_memory_used@@Base+0xd0c>  // b.any
  44a754:	ldr	x1, [sp, #40]
  44a758:	str	x1, [x19]
  44a75c:	mov	w0, #0x1                   	// #1
  44a760:	ldr	x19, [sp, #16]
  44a764:	ldp	x29, x30, [sp], #64
  44a768:	ret
  44a76c:	mov	w0, #0x0                   	// #0
  44a770:	ldr	x19, [sp, #16]
  44a774:	ldp	x29, x30, [sp], #64
  44a778:	ret
  44a77c:	nop
  44a780:	cmp	x4, x2
  44a784:	mov	w0, #0x6                   	// #6
  44a788:	csinc	w0, w0, wzr, eq  // eq = none
  44a78c:	ret
  44a790:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44a794:	ldr	x1, [x1, #4048]
  44a798:	add	x1, x1, #0x10
  44a79c:	str	x1, [x0]
  44a7a0:	b	44a630 <_obstack_memory_used@@Base+0xbd0>
  44a7a4:	nop
  44a7a8:	stp	x29, x30, [sp, #-32]!
  44a7ac:	mov	x29, sp
  44a7b0:	str	x19, [sp, #16]
  44a7b4:	mov	x19, x0
  44a7b8:	bl	44a790 <_obstack_memory_used@@Base+0xd30>
  44a7bc:	mov	x0, x19
  44a7c0:	mov	x1, #0x10                  	// #16
  44a7c4:	ldr	x19, [sp, #16]
  44a7c8:	ldp	x29, x30, [sp], #32
  44a7cc:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44a7d0:	stp	x29, x30, [sp, #-64]!
  44a7d4:	cmp	x4, x6
  44a7d8:	mov	x29, sp
  44a7dc:	stp	x19, x20, [sp, #16]
  44a7e0:	mov	x20, x4
  44a7e4:	mov	x19, x7
  44a7e8:	stp	x21, x22, [sp, #32]
  44a7ec:	mov	w21, w2
  44a7f0:	ldr	x22, [x0, #8]
  44a7f4:	str	x23, [sp, #48]
  44a7f8:	mov	x23, x3
  44a7fc:	b.eq	44a84c <_obstack_memory_used@@Base+0xdec>  // b.none
  44a800:	ldr	x1, [x3, #8]
  44a804:	cmp	x1, x22
  44a808:	b.eq	44a824 <_obstack_memory_used@@Base+0xdc4>  // b.none
  44a80c:	ldrb	w0, [x22]
  44a810:	cmp	w0, #0x2a
  44a814:	b.eq	44a834 <_obstack_memory_used@@Base+0xdd4>  // b.none
  44a818:	mov	x0, x22
  44a81c:	bl	402890 <strcmp@plt>
  44a820:	cbnz	w0, 44a834 <_obstack_memory_used@@Base+0xdd4>
  44a824:	mov	w0, #0x1                   	// #1
  44a828:	str	x20, [x19]
  44a82c:	str	w21, [x19, #8]
  44a830:	str	w0, [x19, #16]
  44a834:	mov	w0, #0x0                   	// #0
  44a838:	ldp	x19, x20, [sp, #16]
  44a83c:	ldp	x21, x22, [sp, #32]
  44a840:	ldr	x23, [sp, #48]
  44a844:	ldp	x29, x30, [sp], #64
  44a848:	ret
  44a84c:	ldr	x1, [x5, #8]
  44a850:	cmp	x1, x22
  44a854:	b.eq	44a890 <_obstack_memory_used@@Base+0xe30>  // b.none
  44a858:	ldrb	w0, [x22]
  44a85c:	cmp	w0, #0x2a
  44a860:	b.eq	44a880 <_obstack_memory_used@@Base+0xe20>  // b.none
  44a864:	mov	x0, x22
  44a868:	bl	402890 <strcmp@plt>
  44a86c:	cbz	w0, 44a890 <_obstack_memory_used@@Base+0xe30>
  44a870:	ldr	x1, [x23, #8]
  44a874:	cmp	x22, x1
  44a878:	b.ne	44a818 <_obstack_memory_used@@Base+0xdb8>  // b.any
  44a87c:	b	44a824 <_obstack_memory_used@@Base+0xdc4>
  44a880:	ldr	x0, [x3, #8]
  44a884:	cmp	x0, x22
  44a888:	b.ne	44a834 <_obstack_memory_used@@Base+0xdd4>  // b.any
  44a88c:	b	44a824 <_obstack_memory_used@@Base+0xdc4>
  44a890:	str	w21, [x19, #12]
  44a894:	mov	w0, #0x0                   	// #0
  44a898:	ldp	x19, x20, [sp, #16]
  44a89c:	ldp	x21, x22, [sp, #32]
  44a8a0:	ldr	x23, [sp, #48]
  44a8a4:	ldp	x29, x30, [sp], #64
  44a8a8:	ret
  44a8ac:	nop
  44a8b0:	stp	x29, x30, [sp, #-48]!
  44a8b4:	mov	x29, sp
  44a8b8:	ldr	x0, [x0, #8]
  44a8bc:	stp	x19, x20, [sp, #16]
  44a8c0:	mov	x20, x2
  44a8c4:	ldr	x1, [x1, #8]
  44a8c8:	str	x21, [sp, #32]
  44a8cc:	mov	x19, x3
  44a8d0:	cmp	x0, x1
  44a8d4:	b.eq	44a8f0 <_obstack_memory_used@@Base+0xe90>  // b.none
  44a8d8:	ldrb	w2, [x0]
  44a8dc:	mov	w21, #0x0                   	// #0
  44a8e0:	cmp	w2, #0x2a
  44a8e4:	b.eq	44a908 <_obstack_memory_used@@Base+0xea8>  // b.none
  44a8e8:	bl	402890 <strcmp@plt>
  44a8ec:	cbnz	w0, 44a908 <_obstack_memory_used@@Base+0xea8>
  44a8f0:	mov	x0, #0x10                  	// #16
  44a8f4:	mov	w1, #0x6                   	// #6
  44a8f8:	mov	w21, #0x1                   	// #1
  44a8fc:	str	x20, [x19]
  44a900:	str	w1, [x19, #8]
  44a904:	str	x0, [x19, #16]
  44a908:	mov	w0, w21
  44a90c:	ldp	x19, x20, [sp, #16]
  44a910:	ldr	x21, [sp, #32]
  44a914:	ldp	x29, x30, [sp], #48
  44a918:	ret
  44a91c:	nop
  44a920:	stp	x29, x30, [sp, #-48]!
  44a924:	mov	x29, sp
  44a928:	stp	x19, x20, [sp, #16]
  44a92c:	mov	x20, x0
  44a930:	mov	x19, x1
  44a934:	ldr	x0, [x0, #8]
  44a938:	ldr	x1, [x1, #8]
  44a93c:	cmp	x0, x1
  44a940:	b.eq	44a9a8 <_obstack_memory_used@@Base+0xf48>  // b.none
  44a944:	stp	x21, x22, [sp, #32]
  44a948:	mov	x22, x2
  44a94c:	mov	w21, w3
  44a950:	ldrb	w2, [x0]
  44a954:	cmp	w2, #0x2a
  44a958:	b.eq	44a978 <_obstack_memory_used@@Base+0xf18>  // b.none
  44a95c:	bl	402890 <strcmp@plt>
  44a960:	cbnz	w0, 44a978 <_obstack_memory_used@@Base+0xf18>
  44a964:	mov	w0, #0x1                   	// #1
  44a968:	ldp	x19, x20, [sp, #16]
  44a96c:	ldp	x21, x22, [sp, #32]
  44a970:	ldp	x29, x30, [sp], #48
  44a974:	ret
  44a978:	cmp	w21, #0x3
  44a97c:	b.hi	44a9b8 <_obstack_memory_used@@Base+0xf58>  // b.pmore
  44a980:	ldr	x3, [x19]
  44a984:	mov	x2, x22
  44a988:	mov	x1, x20
  44a98c:	mov	x0, x19
  44a990:	ldp	x19, x20, [sp, #16]
  44a994:	ldp	x21, x22, [sp, #32]
  44a998:	ldp	x29, x30, [sp], #48
  44a99c:	ldr	x3, [x3, #40]
  44a9a0:	mov	x16, x3
  44a9a4:	br	x16
  44a9a8:	mov	w0, #0x1                   	// #1
  44a9ac:	ldp	x19, x20, [sp, #16]
  44a9b0:	ldp	x29, x30, [sp], #48
  44a9b4:	ret
  44a9b8:	mov	w0, #0x0                   	// #0
  44a9bc:	ldp	x19, x20, [sp, #16]
  44a9c0:	ldp	x21, x22, [sp, #32]
  44a9c4:	ldp	x29, x30, [sp], #48
  44a9c8:	ret
  44a9cc:	nop
  44a9d0:	b	402910 <free@plt>
  44a9d4:	nop
  44a9d8:	b	44a9d0 <_obstack_memory_used@@Base+0xf70>
  44a9dc:	nop
  44a9e0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44a9e4:	add	x0, x0, #0x560
  44a9e8:	ret
  44a9ec:	nop
  44a9f0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44a9f4:	add	x0, x0, #0x588
  44a9f8:	ret
  44a9fc:	nop
  44aa00:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44aa04:	ldr	x1, [x1, #4000]
  44aa08:	add	x1, x1, #0x10
  44aa0c:	str	x1, [x0]
  44aa10:	b	44ae80 <_obstack_memory_used@@Base+0x1420>
  44aa14:	nop
  44aa18:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44aa1c:	ldr	x1, [x1, #3984]
  44aa20:	add	x1, x1, #0x10
  44aa24:	str	x1, [x0]
  44aa28:	b	44ae80 <_obstack_memory_used@@Base+0x1420>
  44aa2c:	nop
  44aa30:	stp	x29, x30, [sp, #-32]!
  44aa34:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44aa38:	mov	x29, sp
  44aa3c:	ldr	x1, [x1, #4000]
  44aa40:	str	x19, [sp, #16]
  44aa44:	mov	x19, x0
  44aa48:	add	x1, x1, #0x10
  44aa4c:	str	x1, [x0]
  44aa50:	bl	44ae80 <_obstack_memory_used@@Base+0x1420>
  44aa54:	mov	x0, x19
  44aa58:	mov	x1, #0x8                   	// #8
  44aa5c:	ldr	x19, [sp, #16]
  44aa60:	ldp	x29, x30, [sp], #32
  44aa64:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44aa68:	stp	x29, x30, [sp, #-32]!
  44aa6c:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44aa70:	mov	x29, sp
  44aa74:	ldr	x1, [x1, #3984]
  44aa78:	str	x19, [sp, #16]
  44aa7c:	mov	x19, x0
  44aa80:	add	x1, x1, #0x10
  44aa84:	str	x1, [x0]
  44aa88:	bl	44ae80 <_obstack_memory_used@@Base+0x1420>
  44aa8c:	mov	x0, x19
  44aa90:	mov	x1, #0x8                   	// #8
  44aa94:	ldr	x19, [sp, #16]
  44aa98:	ldp	x29, x30, [sp], #32
  44aa9c:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44aaa0:	stp	x29, x30, [sp, #-48]!
  44aaa4:	mov	x29, sp
  44aaa8:	stp	x19, x20, [sp, #16]
  44aaac:	adrp	x20, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44aab0:	mov	x19, x0
  44aab4:	ldr	x0, [x20, #3880]
  44aab8:	str	x21, [sp, #32]
  44aabc:	adrp	x21, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44aac0:	cbz	x0, 44aad0 <_obstack_memory_used@@Base+0x1070>
  44aac4:	add	x0, x21, #0xab0
  44aac8:	bl	402ad0 <pthread_mutex_lock@plt>
  44aacc:	cbnz	w0, 44abc8 <_obstack_memory_used@@Base+0x1168>
  44aad0:	add	x0, x21, #0xab0
  44aad4:	sub	x5, x19, #0x10
  44aad8:	ldr	x1, [x0, #48]
  44aadc:	cbz	x1, 44ab58 <_obstack_memory_used@@Base+0x10f8>
  44aae0:	ldur	x6, [x19, #-16]
  44aae4:	add	x4, x5, x6
  44aae8:	cmp	x1, x4
  44aaec:	b.hi	44ab58 <_obstack_memory_used@@Base+0x10f8>  // b.pmore
  44aaf0:	ldr	x2, [x1, #8]
  44aaf4:	b.eq	44abac <_obstack_memory_used@@Base+0x114c>  // b.none
  44aaf8:	add	x0, x0, #0x30
  44aafc:	cbnz	x2, 44ab18 <_obstack_memory_used@@Base+0x10b8>
  44ab00:	b	44ab34 <_obstack_memory_used@@Base+0x10d4>
  44ab04:	ldr	x3, [x2, #8]
  44ab08:	add	x0, x1, #0x8
  44ab0c:	cbz	x3, 44ab94 <_obstack_memory_used@@Base+0x1134>
  44ab10:	mov	x1, x2
  44ab14:	mov	x2, x3
  44ab18:	cmp	x4, x2
  44ab1c:	b.cc	44ab04 <_obstack_memory_used@@Base+0x10a4>  // b.lo, b.ul, b.last
  44ab20:	b.ne	44abc0 <_obstack_memory_used@@Base+0x1160>  // b.any
  44ab24:	ldp	x2, x3, [x4]
  44ab28:	str	x3, [x1, #8]
  44ab2c:	ldr	x1, [x0]
  44ab30:	add	x6, x6, x2
  44ab34:	ldr	x2, [x1]
  44ab38:	add	x3, x1, x2
  44ab3c:	cmp	x5, x3
  44ab40:	b.eq	44ab88 <_obstack_memory_used@@Base+0x1128>  // b.none
  44ab44:	ldr	x1, [x1, #8]
  44ab48:	stp	x6, x1, [x19, #-16]
  44ab4c:	ldr	x0, [x0]
  44ab50:	str	x5, [x0, #8]
  44ab54:	b	44ab64 <_obstack_memory_used@@Base+0x1104>
  44ab58:	add	x0, x21, #0xab0
  44ab5c:	stur	x1, [x19, #-8]
  44ab60:	str	x5, [x0, #48]
  44ab64:	ldr	x20, [x20, #3880]
  44ab68:	cbz	x20, 44ab78 <_obstack_memory_used@@Base+0x1118>
  44ab6c:	add	x0, x21, #0xab0
  44ab70:	bl	402b00 <pthread_mutex_unlock@plt>
  44ab74:	cbnz	w0, 44abcc <_obstack_memory_used@@Base+0x116c>
  44ab78:	ldp	x19, x20, [sp, #16]
  44ab7c:	ldr	x21, [sp, #32]
  44ab80:	ldp	x29, x30, [sp], #48
  44ab84:	ret
  44ab88:	add	x6, x2, x6
  44ab8c:	str	x6, [x1]
  44ab90:	b	44ab64 <_obstack_memory_used@@Base+0x1104>
  44ab94:	ldr	x1, [x1, #8]
  44ab98:	ldr	x2, [x1]
  44ab9c:	add	x3, x1, x2
  44aba0:	cmp	x5, x3
  44aba4:	b.ne	44ab44 <_obstack_memory_used@@Base+0x10e4>  // b.any
  44aba8:	b	44ab88 <_obstack_memory_used@@Base+0x1128>
  44abac:	ldr	x1, [x1]
  44abb0:	add	x6, x1, x6
  44abb4:	stp	x6, x2, [x19, #-16]
  44abb8:	str	x5, [x0, #48]
  44abbc:	b	44ab64 <_obstack_memory_used@@Base+0x1104>
  44abc0:	ldr	x1, [x0]
  44abc4:	b	44ab34 <_obstack_memory_used@@Base+0x10d4>
  44abc8:	bl	402c5c <nftw@plt+0xdc>
  44abcc:	mov	x0, #0x8                   	// #8
  44abd0:	bl	44ad48 <_obstack_memory_used@@Base+0x12e8>
  44abd4:	adrp	x3, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44abd8:	adrp	x2, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44abdc:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44abe0:	ldr	x3, [x3, #3984]
  44abe4:	ldr	x2, [x2, #4064]
  44abe8:	add	x3, x3, #0x10
  44abec:	ldr	x1, [x1, #4040]
  44abf0:	str	x3, [x0]
  44abf4:	bl	44bb60 <_obstack_memory_used@@Base+0x2100>
  44abf8:	cmn	x1, #0x1
  44abfc:	b.ne	44ac04 <_obstack_memory_used@@Base+0x11a4>  // b.any
  44ac00:	bl	44b900 <_obstack_memory_used@@Base+0x1ea0>
  44ac04:	bl	458660 <_obstack_memory_used@@Base+0xec00>
  44ac08:	stp	x29, x30, [sp, #-48]!
  44ac0c:	mov	x29, sp
  44ac10:	stp	x19, x20, [sp, #16]
  44ac14:	adrp	x20, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ac18:	mov	x19, x0
  44ac1c:	ldr	x0, [x20, #3880]
  44ac20:	str	x21, [sp, #32]
  44ac24:	adrp	x21, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44ac28:	cbz	x0, 44ac38 <_obstack_memory_used@@Base+0x11d8>
  44ac2c:	add	x0, x21, #0xab0
  44ac30:	bl	402ad0 <pthread_mutex_lock@plt>
  44ac34:	cbnz	w0, 44acd4 <_obstack_memory_used@@Base+0x1274>
  44ac38:	add	x3, x21, #0xab0
  44ac3c:	adds	x0, x19, #0x10
  44ac40:	mov	x19, #0x10                  	// #16
  44ac44:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  44ac48:	add	x0, x0, #0xf
  44ac4c:	ldr	x19, [x3, #48]
  44ac50:	and	x0, x0, #0xfffffffffffffff0
  44ac54:	cbz	x19, 44aca0 <_obstack_memory_used@@Base+0x1240>
  44ac58:	add	x3, x3, #0x30
  44ac5c:	b	44ac68 <_obstack_memory_used@@Base+0x1208>
  44ac60:	add	x3, x2, #0x8
  44ac64:	cbz	x19, 44aca0 <_obstack_memory_used@@Base+0x1240>
  44ac68:	mov	x2, x19
  44ac6c:	ldp	x1, x19, [x19]
  44ac70:	cmp	x0, x1
  44ac74:	b.hi	44ac60 <_obstack_memory_used@@Base+0x1200>  // b.pmore
  44ac78:	sub	x1, x1, x0
  44ac7c:	cmp	x1, #0xf
  44ac80:	b.ls	44acc8 <_obstack_memory_used@@Base+0x1268>  // b.plast
  44ac84:	add	x4, x2, x0
  44ac88:	str	x19, [x4, #8]
  44ac8c:	str	x1, [x2, x0]
  44ac90:	ldr	x2, [x3]
  44ac94:	add	x19, x2, #0x10
  44ac98:	str	x0, [x2]
  44ac9c:	str	x4, [x3]
  44aca0:	ldr	x20, [x20, #3880]
  44aca4:	cbz	x20, 44acb4 <_obstack_memory_used@@Base+0x1254>
  44aca8:	add	x0, x21, #0xab0
  44acac:	bl	402b00 <pthread_mutex_unlock@plt>
  44acb0:	cbnz	w0, 44acd8 <_obstack_memory_used@@Base+0x1278>
  44acb4:	mov	x0, x19
  44acb8:	ldp	x19, x20, [sp, #16]
  44acbc:	ldr	x21, [sp, #32]
  44acc0:	ldp	x29, x30, [sp], #48
  44acc4:	ret
  44acc8:	str	x19, [x3]
  44accc:	add	x19, x2, #0x10
  44acd0:	b	44aca0 <_obstack_memory_used@@Base+0x1240>
  44acd4:	bl	402c5c <nftw@plt+0xdc>
  44acd8:	mov	x0, #0x8                   	// #8
  44acdc:	bl	44ad48 <_obstack_memory_used@@Base+0x12e8>
  44ace0:	adrp	x3, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ace4:	adrp	x2, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ace8:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44acec:	ldr	x3, [x3, #3984]
  44acf0:	ldr	x2, [x2, #4064]
  44acf4:	add	x3, x3, #0x10
  44acf8:	ldr	x1, [x1, #4040]
  44acfc:	str	x3, [x0]
  44ad00:	bl	44bb60 <_obstack_memory_used@@Base+0x2100>
  44ad04:	cmn	x1, #0x1
  44ad08:	b.ne	44ad10 <_obstack_memory_used@@Base+0x12b0>  // b.any
  44ad0c:	bl	44b900 <_obstack_memory_used@@Base+0x1ea0>
  44ad10:	bl	458660 <_obstack_memory_used@@Base+0xec00>
  44ad14:	nop
  44ad18:	stp	x29, x30, [sp, #-32]!
  44ad1c:	mov	x29, sp
  44ad20:	str	x19, [sp, #16]
  44ad24:	adrp	x19, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44ad28:	add	x19, x19, #0xab0
  44ad2c:	ldr	x0, [x19, #56]
  44ad30:	cbz	x0, 44ad3c <_obstack_memory_used@@Base+0x12dc>
  44ad34:	bl	402910 <free@plt>
  44ad38:	str	xzr, [x19, #56]
  44ad3c:	ldr	x19, [sp, #16]
  44ad40:	ldp	x29, x30, [sp], #32
  44ad44:	ret
  44ad48:	stp	x29, x30, [sp, #-32]!
  44ad4c:	mov	x29, sp
  44ad50:	str	x19, [sp, #16]
  44ad54:	add	x19, x0, #0x80
  44ad58:	mov	x0, x19
  44ad5c:	bl	402670 <malloc@plt>
  44ad60:	mov	x1, x0
  44ad64:	cbz	x0, 44ad98 <_obstack_memory_used@@Base+0x1338>
  44ad68:	stp	xzr, xzr, [x1]
  44ad6c:	add	x0, x1, #0x80
  44ad70:	stp	xzr, xzr, [x1, #16]
  44ad74:	stp	xzr, xzr, [x1, #32]
  44ad78:	stp	xzr, xzr, [x1, #48]
  44ad7c:	stp	xzr, xzr, [x1, #64]
  44ad80:	stp	xzr, xzr, [x1, #80]
  44ad84:	stp	xzr, xzr, [x1, #96]
  44ad88:	stp	xzr, xzr, [x1, #112]
  44ad8c:	ldr	x19, [sp, #16]
  44ad90:	ldp	x29, x30, [sp], #32
  44ad94:	ret
  44ad98:	mov	x0, x19
  44ad9c:	bl	44ac08 <_obstack_memory_used@@Base+0x11a8>
  44ada0:	mov	x1, x0
  44ada4:	cbnz	x0, 44ad68 <_obstack_memory_used@@Base+0x1308>
  44ada8:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44adac:	nop
  44adb0:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44adb4:	add	x1, x1, #0xab0
  44adb8:	sub	x0, x0, #0x80
  44adbc:	ldr	x2, [x1, #56]
  44adc0:	cmp	x0, x2
  44adc4:	b.ls	44adec <_obstack_memory_used@@Base+0x138c>  // b.plast
  44adc8:	ldr	x1, [x1, #64]
  44adcc:	add	x2, x2, x1
  44add0:	cmp	x0, x2
  44add4:	b.cs	44adec <_obstack_memory_used@@Base+0x138c>  // b.hs, b.nlast
  44add8:	stp	x29, x30, [sp, #-16]!
  44addc:	mov	x29, sp
  44ade0:	bl	44aaa0 <_obstack_memory_used@@Base+0x1040>
  44ade4:	ldp	x29, x30, [sp], #16
  44ade8:	ret
  44adec:	b	402910 <free@plt>
  44adf0:	stp	x29, x30, [sp, #-16]!
  44adf4:	mov	x0, #0x70                  	// #112
  44adf8:	mov	x29, sp
  44adfc:	bl	402670 <malloc@plt>
  44ae00:	cbz	x0, 44ae28 <_obstack_memory_used@@Base+0x13c8>
  44ae04:	stp	xzr, xzr, [x0]
  44ae08:	stp	xzr, xzr, [x0, #16]
  44ae0c:	stp	xzr, xzr, [x0, #32]
  44ae10:	stp	xzr, xzr, [x0, #48]
  44ae14:	stp	xzr, xzr, [x0, #64]
  44ae18:	stp	xzr, xzr, [x0, #80]
  44ae1c:	stp	xzr, xzr, [x0, #96]
  44ae20:	ldp	x29, x30, [sp], #16
  44ae24:	ret
  44ae28:	mov	x0, #0x70                  	// #112
  44ae2c:	bl	44ac08 <_obstack_memory_used@@Base+0x11a8>
  44ae30:	cbnz	x0, 44ae04 <_obstack_memory_used@@Base+0x13a4>
  44ae34:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44ae38:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44ae3c:	add	x2, x2, #0xab0
  44ae40:	mov	x1, x0
  44ae44:	ldr	x3, [x2, #56]
  44ae48:	cmp	x0, x3
  44ae4c:	b.ls	44ae74 <_obstack_memory_used@@Base+0x1414>  // b.plast
  44ae50:	ldr	x2, [x2, #64]
  44ae54:	add	x3, x3, x2
  44ae58:	cmp	x0, x3
  44ae5c:	b.cs	44ae74 <_obstack_memory_used@@Base+0x1414>  // b.hs, b.nlast
  44ae60:	stp	x29, x30, [sp, #-16]!
  44ae64:	mov	x29, sp
  44ae68:	bl	44aaa0 <_obstack_memory_used@@Base+0x1040>
  44ae6c:	ldp	x29, x30, [sp], #16
  44ae70:	ret
  44ae74:	mov	x0, x1
  44ae78:	b	402910 <free@plt>
  44ae7c:	nop
  44ae80:	ret
  44ae84:	nop
  44ae88:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ae8c:	ldr	x1, [x1, #3944]
  44ae90:	add	x1, x1, #0x10
  44ae94:	str	x1, [x0]
  44ae98:	b	44ae80 <_obstack_memory_used@@Base+0x1420>
  44ae9c:	nop
  44aea0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44aea4:	add	x0, x0, #0x608
  44aea8:	ret
  44aeac:	nop
  44aeb0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44aeb4:	add	x0, x0, #0x618
  44aeb8:	ret
  44aebc:	nop
  44aec0:	stp	x29, x30, [sp, #-32]!
  44aec4:	mov	x29, sp
  44aec8:	str	x19, [sp, #16]
  44aecc:	mov	x19, x0
  44aed0:	bl	44ae80 <_obstack_memory_used@@Base+0x1420>
  44aed4:	mov	x0, x19
  44aed8:	mov	x1, #0x8                   	// #8
  44aedc:	ldr	x19, [sp, #16]
  44aee0:	ldp	x29, x30, [sp], #32
  44aee4:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44aee8:	stp	x29, x30, [sp, #-32]!
  44aeec:	mov	x29, sp
  44aef0:	str	x19, [sp, #16]
  44aef4:	mov	x19, x0
  44aef8:	bl	44ae88 <_obstack_memory_used@@Base+0x1428>
  44aefc:	mov	x0, x19
  44af00:	mov	x1, #0x8                   	// #8
  44af04:	ldr	x19, [sp, #16]
  44af08:	ldp	x29, x30, [sp], #32
  44af0c:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44af10:	ret
  44af14:	nop
  44af18:	stp	x29, x30, [sp, #-32]!
  44af1c:	mov	x29, sp
  44af20:	str	x19, [sp, #16]
  44af24:	mov	x19, x0
  44af28:	bl	44af10 <_obstack_memory_used@@Base+0x14b0>
  44af2c:	mov	x0, x19
  44af30:	mov	x1, #0x8                   	// #8
  44af34:	ldr	x19, [sp, #16]
  44af38:	ldp	x29, x30, [sp], #32
  44af3c:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44af40:	ret
  44af44:	nop
  44af48:	stp	x29, x30, [sp, #-32]!
  44af4c:	mov	x29, sp
  44af50:	str	x19, [sp, #16]
  44af54:	mov	x19, x0
  44af58:	bl	44af40 <_obstack_memory_used@@Base+0x14e0>
  44af5c:	mov	x0, x19
  44af60:	mov	x1, #0x8                   	// #8
  44af64:	ldr	x19, [sp, #16]
  44af68:	ldp	x29, x30, [sp], #32
  44af6c:	b	44a118 <_obstack_memory_used@@Base+0x6b8>
  44af70:	ret
  44af74:	nop
  44af78:	b	44aea0 <_obstack_memory_used@@Base+0x1440>
  44af7c:	nop
  44af80:	ret
  44af84:	nop
  44af88:	b	44aeb0 <_obstack_memory_used@@Base+0x1450>
  44af8c:	nop
  44af90:	stp	x29, x30, [sp, #-64]!
  44af94:	mov	x29, sp
  44af98:	stp	x19, x20, [sp, #16]
  44af9c:	mov	x19, x1
  44afa0:	mov	x20, x0
  44afa4:	mov	x0, x1
  44afa8:	ldr	x1, [x1]
  44afac:	ldr	x1, [x1, #16]
  44afb0:	str	x21, [sp, #32]
  44afb4:	mov	x21, x2
  44afb8:	ldr	x2, [x2]
  44afbc:	str	x2, [sp, #56]
  44afc0:	blr	x1
  44afc4:	tst	w0, #0xff
  44afc8:	b.eq	44afd8 <_obstack_memory_used@@Base+0x1578>  // b.none
  44afcc:	ldr	x0, [sp, #56]
  44afd0:	ldr	x0, [x0]
  44afd4:	str	x0, [sp, #56]
  44afd8:	ldr	x4, [x20]
  44afdc:	mov	x1, x19
  44afe0:	mov	x0, x20
  44afe4:	add	x2, sp, #0x38
  44afe8:	mov	w3, #0x1                   	// #1
  44afec:	ldr	x4, [x4, #32]
  44aff0:	blr	x4
  44aff4:	tst	w0, #0xff
  44aff8:	b.eq	44b004 <_obstack_memory_used@@Base+0x15a4>  // b.none
  44affc:	ldr	x1, [sp, #56]
  44b000:	str	x1, [x21]
  44b004:	ldp	x19, x20, [sp, #16]
  44b008:	ldr	x21, [sp, #32]
  44b00c:	ldp	x29, x30, [sp], #64
  44b010:	ret
  44b014:	nop
  44b018:	and	w5, w0, #0xff
  44b01c:	cmp	w5, #0x50
  44b020:	b.eq	44b138 <_obstack_memory_used@@Base+0x16d8>  // b.none
  44b024:	and	w4, w5, #0xf
  44b028:	cmp	w4, #0x4
  44b02c:	b.eq	44b048 <_obstack_memory_used@@Base+0x15e8>  // b.none
  44b030:	b.ls	44b05c <_obstack_memory_used@@Base+0x15fc>  // b.plast
  44b034:	cmp	w4, #0xb
  44b038:	b.eq	44b15c <_obstack_memory_used@@Base+0x16fc>  // b.none
  44b03c:	b.ls	44b0b8 <_obstack_memory_used@@Base+0x1658>  // b.plast
  44b040:	cmp	w4, #0xc
  44b044:	b.ne	44b16c <_obstack_memory_used@@Base+0x170c>  // b.any
  44b048:	mov	x0, x2
  44b04c:	ldr	x4, [x0], #8
  44b050:	cbnz	x4, 44b118 <_obstack_memory_used@@Base+0x16b8>
  44b054:	str	x4, [x3]
  44b058:	ret
  44b05c:	cmp	w4, #0x2
  44b060:	b.eq	44b14c <_obstack_memory_used@@Base+0x16ec>  // b.none
  44b064:	b.ls	44b080 <_obstack_memory_used@@Base+0x1620>  // b.plast
  44b068:	cmp	w4, #0x3
  44b06c:	b.ne	44b16c <_obstack_memory_used@@Base+0x170c>  // b.any
  44b070:	mov	x0, x2
  44b074:	ldr	w4, [x0], #4
  44b078:	cbz	x4, 44b054 <_obstack_memory_used@@Base+0x15f4>
  44b07c:	b	44b118 <_obstack_memory_used@@Base+0x16b8>
  44b080:	cbz	w4, 44b048 <_obstack_memory_used@@Base+0x15e8>
  44b084:	cmp	w4, #0x1
  44b088:	b.ne	44b16c <_obstack_memory_used@@Base+0x170c>  // b.any
  44b08c:	mov	x0, x2
  44b090:	mov	x4, #0x0                   	// #0
  44b094:	mov	w7, #0x0                   	// #0
  44b098:	ldrb	w8, [x0], #1
  44b09c:	and	x6, x8, #0x7f
  44b0a0:	lsl	x6, x6, x7
  44b0a4:	add	w7, w7, #0x7
  44b0a8:	orr	x4, x4, x6
  44b0ac:	tbnz	w8, #7, 44b098 <_obstack_memory_used@@Base+0x1638>
  44b0b0:	cbz	x4, 44b054 <_obstack_memory_used@@Base+0x15f4>
  44b0b4:	b	44b118 <_obstack_memory_used@@Base+0x16b8>
  44b0b8:	cmp	w4, #0x9
  44b0bc:	b.eq	44b0d8 <_obstack_memory_used@@Base+0x1678>  // b.none
  44b0c0:	cmp	w4, #0xa
  44b0c4:	b.ne	44b16c <_obstack_memory_used@@Base+0x170c>  // b.any
  44b0c8:	mov	x0, x2
  44b0cc:	ldrsh	x4, [x0], #2
  44b0d0:	cbz	x4, 44b054 <_obstack_memory_used@@Base+0x15f4>
  44b0d4:	b	44b118 <_obstack_memory_used@@Base+0x16b8>
  44b0d8:	mov	x0, x2
  44b0dc:	mov	x4, #0x0                   	// #0
  44b0e0:	mov	w7, #0x0                   	// #0
  44b0e4:	ldrb	w8, [x0], #1
  44b0e8:	and	x6, x8, #0x7f
  44b0ec:	lsl	x6, x6, x7
  44b0f0:	add	w7, w7, #0x7
  44b0f4:	orr	x4, x4, x6
  44b0f8:	tbnz	w8, #7, 44b0e4 <_obstack_memory_used@@Base+0x1684>
  44b0fc:	cmp	w7, #0x3f
  44b100:	b.hi	44b050 <_obstack_memory_used@@Base+0x15f0>  // b.pmore
  44b104:	tbz	w8, #6, 44b050 <_obstack_memory_used@@Base+0x15f0>
  44b108:	mov	x6, #0xffffffffffffffff    	// #-1
  44b10c:	lsl	x7, x6, x7
  44b110:	orr	x4, x4, x7
  44b114:	nop
  44b118:	and	w6, w5, #0x70
  44b11c:	cmp	w6, #0x10
  44b120:	csel	x1, x2, x1, eq  // eq = none
  44b124:	add	x4, x4, x1
  44b128:	tbz	w5, #7, 44b054 <_obstack_memory_used@@Base+0x15f4>
  44b12c:	ldr	x4, [x4]
  44b130:	str	x4, [x3]
  44b134:	ret
  44b138:	add	x0, x2, #0x7
  44b13c:	and	x0, x0, #0xfffffffffffffff8
  44b140:	ldr	x4, [x0], #8
  44b144:	str	x4, [x3]
  44b148:	ret
  44b14c:	mov	x0, x2
  44b150:	ldrh	w4, [x0], #2
  44b154:	cbz	x4, 44b054 <_obstack_memory_used@@Base+0x15f4>
  44b158:	b	44b118 <_obstack_memory_used@@Base+0x16b8>
  44b15c:	mov	x0, x2
  44b160:	ldrsw	x4, [x0], #4
  44b164:	cbz	x4, 44b054 <_obstack_memory_used@@Base+0x15f4>
  44b168:	b	44b118 <_obstack_memory_used@@Base+0x16b8>
  44b16c:	stp	x29, x30, [sp, #-16]!
  44b170:	mov	x29, sp
  44b174:	bl	4027f0 <abort@plt>
  44b178:	stp	x29, x30, [sp, #-32]!
  44b17c:	mov	x3, x0
  44b180:	mov	x29, sp
  44b184:	ldrb	w0, [x0, #40]
  44b188:	cmp	w0, #0xff
  44b18c:	b.eq	44b218 <_obstack_memory_used@@Base+0x17b8>  // b.none
  44b190:	and	w4, w0, #0x7
  44b194:	cmp	w4, #0x2
  44b198:	b.eq	44b1f8 <_obstack_memory_used@@Base+0x1798>  // b.none
  44b19c:	b.ls	44b1c8 <_obstack_memory_used@@Base+0x1768>  // b.plast
  44b1a0:	cmp	w4, #0x3
  44b1a4:	neg	x2, x1, lsl #2
  44b1a8:	b.ne	44b1ec <_obstack_memory_used@@Base+0x178c>  // b.any
  44b1ac:	ldp	x1, x4, [x3, #16]
  44b1b0:	add	x3, sp, #0x18
  44b1b4:	add	x2, x4, x2
  44b1b8:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b1bc:	ldr	x0, [sp, #24]
  44b1c0:	ldp	x29, x30, [sp], #32
  44b1c4:	ret
  44b1c8:	cbnz	w4, 44b1f4 <_obstack_memory_used@@Base+0x1794>
  44b1cc:	neg	x2, x1, lsl #3
  44b1d0:	ldp	x1, x4, [x3, #16]
  44b1d4:	add	x3, sp, #0x18
  44b1d8:	add	x2, x4, x2
  44b1dc:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b1e0:	ldr	x0, [sp, #24]
  44b1e4:	ldp	x29, x30, [sp], #32
  44b1e8:	ret
  44b1ec:	cmp	w4, #0x4
  44b1f0:	b.eq	44b1cc <_obstack_memory_used@@Base+0x176c>  // b.none
  44b1f4:	bl	4027f0 <abort@plt>
  44b1f8:	neg	x2, x1, lsl #1
  44b1fc:	ldp	x1, x4, [x3, #16]
  44b200:	add	x3, sp, #0x18
  44b204:	add	x2, x4, x2
  44b208:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b20c:	ldr	x0, [sp, #24]
  44b210:	ldp	x29, x30, [sp], #32
  44b214:	ret
  44b218:	ldp	x1, x4, [x3, #16]
  44b21c:	mov	x2, #0x0                   	// #0
  44b220:	add	x3, sp, #0x18
  44b224:	add	x2, x4, x2
  44b228:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b22c:	ldr	x0, [sp, #24]
  44b230:	ldp	x29, x30, [sp], #32
  44b234:	ret
  44b238:	stp	x29, x30, [sp, #-64]!
  44b23c:	mov	x29, sp
  44b240:	stp	x21, x22, [sp, #32]
  44b244:	mov	x22, x0
  44b248:	mvn	x0, x3
  44b24c:	stp	x19, x20, [sp, #16]
  44b250:	add	x21, sp, #0x38
  44b254:	mov	x20, x1
  44b258:	ldr	x19, [x22, #24]
  44b25c:	str	x2, [sp, #56]
  44b260:	add	x19, x19, x0
  44b264:	nop
  44b268:	mov	x1, #0x0                   	// #0
  44b26c:	mov	w3, #0x0                   	// #0
  44b270:	ldrb	w4, [x19], #1
  44b274:	and	x2, x4, #0x7f
  44b278:	lsl	x2, x2, x3
  44b27c:	add	w3, w3, #0x7
  44b280:	orr	x1, x1, x2
  44b284:	tbnz	w4, #7, 44b270 <_obstack_memory_used@@Base+0x1810>
  44b288:	cbz	x1, 44b2b8 <_obstack_memory_used@@Base+0x1858>
  44b28c:	mov	x0, x22
  44b290:	bl	44b178 <_obstack_memory_used@@Base+0x1718>
  44b294:	mov	x2, x21
  44b298:	mov	x1, x20
  44b29c:	bl	44af90 <_obstack_memory_used@@Base+0x1530>
  44b2a0:	ands	w0, w0, #0xff
  44b2a4:	b.eq	44b268 <_obstack_memory_used@@Base+0x1808>  // b.none
  44b2a8:	ldp	x19, x20, [sp, #16]
  44b2ac:	ldp	x21, x22, [sp, #32]
  44b2b0:	ldp	x29, x30, [sp], #64
  44b2b4:	ret
  44b2b8:	mov	w0, #0x0                   	// #0
  44b2bc:	ldp	x19, x20, [sp, #16]
  44b2c0:	ldp	x21, x22, [sp, #32]
  44b2c4:	ldp	x29, x30, [sp], #64
  44b2c8:	ret
  44b2cc:	nop
  44b2d0:	and	w3, w0, #0xff
  44b2d4:	cmp	w3, #0xff
  44b2d8:	b.eq	44b328 <_obstack_memory_used@@Base+0x18c8>  // b.none
  44b2dc:	and	w2, w3, #0x70
  44b2e0:	mov	x0, x1
  44b2e4:	cmp	w2, #0x30
  44b2e8:	b.eq	44b330 <_obstack_memory_used@@Base+0x18d0>  // b.none
  44b2ec:	b.hi	44b2fc <_obstack_memory_used@@Base+0x189c>  // b.pmore
  44b2f0:	cmp	w2, #0x20
  44b2f4:	b.ne	44b308 <_obstack_memory_used@@Base+0x18a8>  // b.any
  44b2f8:	b	4582b0 <_obstack_memory_used@@Base+0xe850>
  44b2fc:	cmp	w2, #0x40
  44b300:	b.ne	44b320 <_obstack_memory_used@@Base+0x18c0>  // b.any
  44b304:	b	458278 <_obstack_memory_used@@Base+0xe818>
  44b308:	b.hi	44b314 <_obstack_memory_used@@Base+0x18b4>  // b.pmore
  44b30c:	tst	w3, #0x60
  44b310:	b.eq	44b328 <_obstack_memory_used@@Base+0x18c8>  // b.none
  44b314:	stp	x29, x30, [sp, #-16]!
  44b318:	mov	x29, sp
  44b31c:	bl	4027f0 <abort@plt>
  44b320:	cmp	w2, #0x50
  44b324:	b.ne	44b314 <_obstack_memory_used@@Base+0x18b4>  // b.any
  44b328:	mov	x0, #0x0                   	// #0
  44b32c:	ret
  44b330:	b	4582a8 <_obstack_memory_used@@Base+0xe848>
  44b334:	nop
  44b338:	stp	x29, x30, [sp, #-48]!
  44b33c:	mov	x29, sp
  44b340:	stp	x19, x20, [sp, #16]
  44b344:	mov	x19, x1
  44b348:	mov	x20, x2
  44b34c:	stp	x21, x22, [sp, #32]
  44b350:	mov	x1, #0x0                   	// #0
  44b354:	mov	x21, x0
  44b358:	cbz	x0, 44b364 <_obstack_memory_used@@Base+0x1904>
  44b35c:	bl	458278 <_obstack_memory_used@@Base+0xe818>
  44b360:	mov	x1, x0
  44b364:	str	x1, [x20]
  44b368:	ldrb	w22, [x19], #1
  44b36c:	cmp	w22, #0xff
  44b370:	b.ne	44b3f8 <_obstack_memory_used@@Base+0x1998>  // b.any
  44b374:	mov	x0, x19
  44b378:	str	x1, [x20, #8]
  44b37c:	ldrb	w1, [x0], #1
  44b380:	strb	w1, [x20, #40]
  44b384:	cmp	w1, #0xff
  44b388:	b.eq	44b430 <_obstack_memory_used@@Base+0x19d0>  // b.none
  44b38c:	mov	x5, #0x0                   	// #0
  44b390:	mov	w3, #0x0                   	// #0
  44b394:	nop
  44b398:	ldrb	w4, [x0], #1
  44b39c:	and	x1, x4, #0x7f
  44b3a0:	lsl	x1, x1, x3
  44b3a4:	add	w3, w3, #0x7
  44b3a8:	orr	x5, x5, x1
  44b3ac:	tbnz	w4, #7, 44b398 <_obstack_memory_used@@Base+0x1938>
  44b3b0:	add	x5, x0, x5
  44b3b4:	str	x5, [x20, #24]
  44b3b8:	ldrb	w1, [x0], #1
  44b3bc:	mov	x5, #0x0                   	// #0
  44b3c0:	mov	w3, #0x0                   	// #0
  44b3c4:	strb	w1, [x20, #41]
  44b3c8:	ldrb	w4, [x0], #1
  44b3cc:	and	x1, x4, #0x7f
  44b3d0:	lsl	x1, x1, x3
  44b3d4:	add	w3, w3, #0x7
  44b3d8:	orr	x5, x5, x1
  44b3dc:	tbnz	w4, #7, 44b3c8 <_obstack_memory_used@@Base+0x1968>
  44b3e0:	add	x5, x0, x5
  44b3e4:	ldp	x21, x22, [sp, #32]
  44b3e8:	str	x5, [x20, #32]
  44b3ec:	ldp	x19, x20, [sp, #16]
  44b3f0:	ldp	x29, x30, [sp], #48
  44b3f4:	ret
  44b3f8:	mov	x1, x21
  44b3fc:	mov	w0, w22
  44b400:	bl	44b2d0 <_obstack_memory_used@@Base+0x1870>
  44b404:	mov	x1, x0
  44b408:	mov	x2, x19
  44b40c:	mov	w0, w22
  44b410:	add	x3, x20, #0x8
  44b414:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b418:	mov	x19, x0
  44b41c:	mov	x0, x19
  44b420:	ldrb	w1, [x0], #1
  44b424:	strb	w1, [x20, #40]
  44b428:	cmp	w1, #0xff
  44b42c:	b.ne	44b38c <_obstack_memory_used@@Base+0x192c>  // b.any
  44b430:	str	xzr, [x20, #24]
  44b434:	b	44b3b8 <_obstack_memory_used@@Base+0x1958>
  44b438:	stp	x29, x30, [sp, #-240]!
  44b43c:	cmp	w0, #0x1
  44b440:	mov	x29, sp
  44b444:	str	wzr, [sp, #156]
  44b448:	str	xzr, [sp, #160]
  44b44c:	b.ne	44b4b0 <_obstack_memory_used@@Base+0x1a50>  // b.any
  44b450:	stp	x19, x20, [sp, #16]
  44b454:	mov	x20, #0xd500                	// #54528
  44b458:	movk	x20, #0xbcd4, lsl #16
  44b45c:	movk	x20, #0xaabc, lsl #32
  44b460:	stp	x21, x22, [sp, #32]
  44b464:	movk	x20, #0xb8b1, lsl #48
  44b468:	add	x0, x2, x20
  44b46c:	stp	x23, x24, [sp, #48]
  44b470:	cmp	x0, #0x1
  44b474:	stp	x25, x26, [sp, #64]
  44b478:	mov	w22, w1
  44b47c:	mov	x21, x3
  44b480:	stp	x27, x28, [sp, #80]
  44b484:	mov	x19, x4
  44b488:	str	x0, [sp, #104]
  44b48c:	cset	w0, ls  // ls = plast
  44b490:	str	w0, [sp, #128]
  44b494:	cmp	w1, #0x6
  44b498:	csel	w27, w0, wzr, eq  // eq = none
  44b49c:	cbz	w27, 44b4bc <_obstack_memory_used@@Base+0x1a5c>
  44b4a0:	ldur	x26, [x3, #-16]
  44b4a4:	cbnz	x26, 44b630 <_obstack_memory_used@@Base+0x1bd0>
  44b4a8:	mov	x0, x21
  44b4ac:	bl	44bca0 <_obstack_memory_used@@Base+0x2240>
  44b4b0:	mov	w0, #0x3                   	// #3
  44b4b4:	ldp	x29, x30, [sp], #240
  44b4b8:	ret
  44b4bc:	mov	x0, x4
  44b4c0:	bl	458270 <_obstack_memory_used@@Base+0xe810>
  44b4c4:	str	x0, [sp, #112]
  44b4c8:	cbz	x0, 44b694 <_obstack_memory_used@@Base+0x1c34>
  44b4cc:	ldr	x1, [sp, #112]
  44b4d0:	add	x0, sp, #0xc0
  44b4d4:	mov	x2, x0
  44b4d8:	str	x0, [sp, #120]
  44b4dc:	mov	x0, x19
  44b4e0:	bl	44b338 <_obstack_memory_used@@Base+0x18d8>
  44b4e4:	mov	x20, x0
  44b4e8:	ldrb	w0, [sp, #232]
  44b4ec:	mov	x1, x19
  44b4f0:	bl	44b2d0 <_obstack_memory_used@@Base+0x1870>
  44b4f4:	mov	x3, x0
  44b4f8:	add	x1, sp, #0x9c
  44b4fc:	mov	x0, x19
  44b500:	str	x3, [sp, #208]
  44b504:	bl	458250 <_obstack_memory_used@@Base+0xe7f0>
  44b508:	ldr	w3, [sp, #156]
  44b50c:	ldr	x1, [sp, #224]
  44b510:	cmp	w3, #0x0
  44b514:	cset	x3, eq  // eq = none
  44b518:	sub	x23, x0, x3
  44b51c:	cmp	x20, x1
  44b520:	b.cs	44b5f8 <_obstack_memory_used@@Base+0x1b98>  // b.hs, b.nlast
  44b524:	add	x26, sp, #0xa8
  44b528:	add	x25, sp, #0xb0
  44b52c:	add	x24, sp, #0xb8
  44b530:	ldrb	w28, [sp, #233]
  44b534:	mov	x1, #0x0                   	// #0
  44b538:	mov	w0, w28
  44b53c:	bl	44b2d0 <_obstack_memory_used@@Base+0x1870>
  44b540:	mov	x2, x20
  44b544:	mov	x3, x26
  44b548:	mov	x1, x0
  44b54c:	mov	w0, w28
  44b550:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b554:	ldrb	w20, [sp, #233]
  44b558:	mov	x28, x0
  44b55c:	mov	x1, #0x0                   	// #0
  44b560:	mov	w0, w20
  44b564:	bl	44b2d0 <_obstack_memory_used@@Base+0x1870>
  44b568:	mov	x2, x28
  44b56c:	mov	x3, x25
  44b570:	mov	x1, x0
  44b574:	mov	w0, w20
  44b578:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b57c:	ldrb	w20, [sp, #233]
  44b580:	mov	x28, x0
  44b584:	mov	x1, #0x0                   	// #0
  44b588:	mov	w0, w20
  44b58c:	bl	44b2d0 <_obstack_memory_used@@Base+0x1870>
  44b590:	mov	x3, x24
  44b594:	mov	x1, x0
  44b598:	mov	x2, x28
  44b59c:	mov	w0, w20
  44b5a0:	bl	44b018 <_obstack_memory_used@@Base+0x15b8>
  44b5a4:	mov	x20, x0
  44b5a8:	mov	w3, #0x0                   	// #0
  44b5ac:	mov	x0, #0x0                   	// #0
  44b5b0:	ldrb	w4, [x20], #1
  44b5b4:	and	x1, x4, #0x7f
  44b5b8:	lsl	x1, x1, x3
  44b5bc:	add	w3, w3, #0x7
  44b5c0:	orr	x0, x0, x1
  44b5c4:	tbnz	w4, #7, 44b5b0 <_obstack_memory_used@@Base+0x1b50>
  44b5c8:	ldr	x3, [sp, #168]
  44b5cc:	ldr	x1, [sp, #192]
  44b5d0:	add	x1, x1, x3
  44b5d4:	cmp	x1, x23
  44b5d8:	b.hi	44b5f8 <_obstack_memory_used@@Base+0x1b98>  // b.pmore
  44b5dc:	ldr	x3, [sp, #176]
  44b5e0:	add	x1, x1, x3
  44b5e4:	cmp	x1, x23
  44b5e8:	b.hi	44b674 <_obstack_memory_used@@Base+0x1c14>  // b.pmore
  44b5ec:	ldr	x0, [sp, #224]
  44b5f0:	cmp	x0, x20
  44b5f4:	b.hi	44b530 <_obstack_memory_used@@Base+0x1ad0>  // b.pmore
  44b5f8:	tbz	w22, #0, 44b6b4 <_obstack_memory_used@@Base+0x1c54>
  44b5fc:	mov	w24, #0x0                   	// #0
  44b600:	mov	x26, #0x0                   	// #0
  44b604:	mov	x23, #0x0                   	// #0
  44b608:	ldr	x0, [sp, #104]
  44b60c:	cmp	x0, #0x1
  44b610:	mov	w0, #0x6                   	// #6
  44b614:	b.hi	44b698 <_obstack_memory_used@@Base+0x1c38>  // b.pmore
  44b618:	ldr	x2, [sp, #112]
  44b61c:	stur	w24, [x21, #-36]
  44b620:	ldr	x1, [sp, #160]
  44b624:	stp	x23, x2, [x21, #-32]
  44b628:	stp	x26, x1, [x21, #-16]
  44b62c:	b	44b698 <_obstack_memory_used@@Base+0x1c38>
  44b630:	ldur	w24, [x3, #-36]
  44b634:	ldur	x0, [x3, #-24]
  44b638:	str	x0, [sp, #112]
  44b63c:	tbnz	w24, #31, 44b6c8 <_obstack_memory_used@@Base+0x1c68>
  44b640:	mov	x2, x21
  44b644:	mov	x0, x19
  44b648:	mov	w1, #0x0                   	// #0
  44b64c:	bl	4581f0 <_obstack_memory_used@@Base+0xe790>
  44b650:	sxtw	x2, w24
  44b654:	mov	x0, x19
  44b658:	mov	w1, #0x1                   	// #1
  44b65c:	bl	4581f0 <_obstack_memory_used@@Base+0xe790>
  44b660:	mov	x0, x19
  44b664:	mov	x1, x26
  44b668:	bl	458268 <_obstack_memory_used@@Base+0xe808>
  44b66c:	mov	w0, #0x7                   	// #7
  44b670:	b	44b698 <_obstack_memory_used@@Base+0x1c38>
  44b674:	ldr	x26, [sp, #184]
  44b678:	cbz	x26, 44b694 <_obstack_memory_used@@Base+0x1c34>
  44b67c:	ldr	x1, [sp, #200]
  44b680:	add	x26, x26, x1
  44b684:	cbnz	x0, 44b700 <_obstack_memory_used@@Base+0x1ca0>
  44b688:	cbz	x26, 44b694 <_obstack_memory_used@@Base+0x1c34>
  44b68c:	and	w24, w22, #0x1
  44b690:	tbz	w22, #0, 44b640 <_obstack_memory_used@@Base+0x1be0>
  44b694:	mov	w0, #0x8                   	// #8
  44b698:	ldp	x19, x20, [sp, #16]
  44b69c:	ldp	x21, x22, [sp, #32]
  44b6a0:	ldp	x23, x24, [sp, #48]
  44b6a4:	ldp	x25, x26, [sp, #64]
  44b6a8:	ldp	x27, x28, [sp, #80]
  44b6ac:	ldp	x29, x30, [sp], #240
  44b6b0:	ret
  44b6b4:	tbnz	w22, #3, 44b6c4 <_obstack_memory_used@@Base+0x1c64>
  44b6b8:	ldr	x0, [sp, #104]
  44b6bc:	cmp	x0, #0x1
  44b6c0:	b.ls	44b4a8 <_obstack_memory_used@@Base+0x1a48>  // b.plast
  44b6c4:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44b6c8:	ldr	x1, [sp, #112]
  44b6cc:	add	x2, sp, #0xc0
  44b6d0:	mov	x0, x19
  44b6d4:	bl	44b338 <_obstack_memory_used@@Base+0x18d8>
  44b6d8:	ldrb	w0, [sp, #232]
  44b6dc:	mov	x1, x19
  44b6e0:	bl	44b2d0 <_obstack_memory_used@@Base+0x1870>
  44b6e4:	mov	x2, x0
  44b6e8:	ldrb	w0, [sp, #232]
  44b6ec:	mov	x1, x19
  44b6f0:	str	x2, [sp, #208]
  44b6f4:	bl	44b2d0 <_obstack_memory_used@@Base+0x1870>
  44b6f8:	stur	x0, [x21, #-16]
  44b6fc:	b	44b640 <_obstack_memory_used@@Base+0x1be0>
  44b700:	ldr	x4, [sp, #224]
  44b704:	sub	x0, x0, #0x1
  44b708:	add	x23, x4, x0
  44b70c:	cbz	x26, 44b694 <_obstack_memory_used@@Base+0x1c34>
  44b710:	cbz	x23, 44b68c <_obstack_memory_used@@Base+0x1c2c>
  44b714:	and	w0, w22, #0x8
  44b718:	str	w0, [sp, #132]
  44b71c:	tbnz	w22, #3, 44b8cc <_obstack_memory_used@@Base+0x1e6c>
  44b720:	ldr	x0, [sp, #104]
  44b724:	adrp	x6, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44b728:	cmp	x0, #0x1
  44b72c:	ldr	x6, [x6, #3976]
  44b730:	b.ls	44b8d8 <_obstack_memory_used@@Base+0x1e78>  // b.plast
  44b734:	add	x28, sp, #0xa0
  44b738:	mov	x5, #0x1                   	// #1
  44b73c:	nop
  44b740:	mov	x25, x23
  44b744:	mov	x24, #0x0                   	// #0
  44b748:	mov	w1, #0x0                   	// #0
  44b74c:	nop
  44b750:	ldrb	w2, [x25], #1
  44b754:	and	x0, x2, #0x7f
  44b758:	lsl	x0, x0, x1
  44b75c:	add	w1, w1, #0x7
  44b760:	orr	x24, x24, x0
  44b764:	tbnz	w2, #7, 44b750 <_obstack_memory_used@@Base+0x1cf0>
  44b768:	cmp	w1, #0x3f
  44b76c:	b.hi	44b784 <_obstack_memory_used@@Base+0x1d24>  // b.pmore
  44b770:	lsl	x0, x5, x1
  44b774:	neg	x0, x0
  44b778:	orr	x0, x24, x0
  44b77c:	tst	x2, #0x40
  44b780:	csel	x24, x0, x24, ne  // ne = any
  44b784:	mov	x8, x25
  44b788:	mov	x20, #0x0                   	// #0
  44b78c:	mov	w1, #0x0                   	// #0
  44b790:	ldrb	w2, [x8], #1
  44b794:	and	x0, x2, #0x7f
  44b798:	lsl	x0, x0, x1
  44b79c:	add	w1, w1, #0x7
  44b7a0:	orr	x20, x20, x0
  44b7a4:	tbnz	w2, #7, 44b790 <_obstack_memory_used@@Base+0x1d30>
  44b7a8:	cmp	w1, #0x3f
  44b7ac:	b.hi	44b7c4 <_obstack_memory_used@@Base+0x1d64>  // b.pmore
  44b7b0:	lsl	x0, x5, x1
  44b7b4:	neg	x0, x0
  44b7b8:	orr	x0, x20, x0
  44b7bc:	tst	x2, #0x40
  44b7c0:	csel	x20, x0, x20, ne  // ne = any
  44b7c4:	cmp	x24, #0x0
  44b7c8:	cbz	x24, 44b88c <_obstack_memory_used@@Base+0x1e2c>
  44b7cc:	b.gt	44b830 <_obstack_memory_used@@Base+0x1dd0>
  44b7d0:	ldr	w0, [sp, #132]
  44b7d4:	cmp	w0, #0x0
  44b7d8:	ldr	w0, [sp, #128]
  44b7dc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  44b7e0:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  44b7e4:	b.ne	44b894 <_obstack_memory_used@@Base+0x1e34>  // b.any
  44b7e8:	ldr	x0, [sp, #216]
  44b7ec:	mvn	x8, x24
  44b7f0:	mov	x9, #0x0                   	// #0
  44b7f4:	mov	w1, #0x0                   	// #0
  44b7f8:	add	x8, x0, x8
  44b7fc:	nop
  44b800:	ldrb	w2, [x8], #1
  44b804:	and	x0, x2, #0x7f
  44b808:	lsl	x0, x0, x1
  44b80c:	add	w1, w1, #0x7
  44b810:	orr	x9, x9, x0
  44b814:	tbnz	w2, #7, 44b800 <_obstack_memory_used@@Base+0x1da0>
  44b818:	cmp	x9, #0x0
  44b81c:	cset	w0, eq  // eq = none
  44b820:	cbnz	w0, 44b86c <_obstack_memory_used@@Base+0x1e0c>
  44b824:	cbz	x20, 44b8c4 <_obstack_memory_used@@Base+0x1e64>
  44b828:	add	x23, x25, x20
  44b82c:	b	44b740 <_obstack_memory_used@@Base+0x1ce0>
  44b830:	ldr	x0, [sp, #120]
  44b834:	mov	x1, x24
  44b838:	str	x6, [sp, #136]
  44b83c:	bl	44b178 <_obstack_memory_used@@Base+0x1718>
  44b840:	cbz	x0, 44b86c <_obstack_memory_used@@Base+0x1e0c>
  44b844:	ldr	x6, [sp, #136]
  44b848:	mov	x5, #0x1                   	// #1
  44b84c:	cbz	x6, 44b824 <_obstack_memory_used@@Base+0x1dc4>
  44b850:	mov	x1, x6
  44b854:	mov	x2, x28
  44b858:	bl	44af90 <_obstack_memory_used@@Base+0x1530>
  44b85c:	tst	w0, #0xff
  44b860:	mov	x5, #0x1                   	// #1
  44b864:	ldr	x6, [sp, #136]
  44b868:	b.eq	44b824 <_obstack_memory_used@@Base+0x1dc4>  // b.none
  44b86c:	tbnz	w22, #0, 44b608 <_obstack_memory_used@@Base+0x1ba8>
  44b870:	ldr	w0, [sp, #132]
  44b874:	cbnz	w0, 44b884 <_obstack_memory_used@@Base+0x1e24>
  44b878:	ldr	x0, [sp, #104]
  44b87c:	cmp	x0, #0x1
  44b880:	b.ls	44b63c <_obstack_memory_used@@Base+0x1bdc>  // b.plast
  44b884:	tbz	w24, #31, 44b640 <_obstack_memory_used@@Base+0x1be0>
  44b888:	bl	44ba88 <_obstack_memory_used@@Base+0x2028>
  44b88c:	mov	w27, #0x1                   	// #1
  44b890:	b	44b824 <_obstack_memory_used@@Base+0x1dc4>
  44b894:	ldr	x0, [sp, #120]
  44b898:	mov	x1, x6
  44b89c:	ldr	x2, [sp, #160]
  44b8a0:	mov	x3, x24
  44b8a4:	str	x6, [sp, #136]
  44b8a8:	bl	44b238 <_obstack_memory_used@@Base+0x17d8>
  44b8ac:	and	w0, w0, #0xff
  44b8b0:	eor	w0, w0, #0x1
  44b8b4:	mov	x5, #0x1                   	// #1
  44b8b8:	ldr	x6, [sp, #136]
  44b8bc:	cbz	w0, 44b824 <_obstack_memory_used@@Base+0x1dc4>
  44b8c0:	b	44b86c <_obstack_memory_used@@Base+0x1e0c>
  44b8c4:	cbnz	w27, 44b68c <_obstack_memory_used@@Base+0x1c2c>
  44b8c8:	b	44b694 <_obstack_memory_used@@Base+0x1c34>
  44b8cc:	adrp	x6, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44b8d0:	ldr	x6, [x6, #3952]
  44b8d4:	b	44b734 <_obstack_memory_used@@Base+0x1cd4>
  44b8d8:	mov	x0, x21
  44b8dc:	ldr	x1, [x0], #32
  44b8e0:	tbz	w1, #0, 44b8e8 <_obstack_memory_used@@Base+0x1e88>
  44b8e4:	ldur	x0, [x21, #-80]
  44b8e8:	ldur	x6, [x0, #-112]
  44b8ec:	str	x0, [sp, #160]
  44b8f0:	b	44b734 <_obstack_memory_used@@Base+0x1cd4>
  44b8f4:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44b8f8:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44b8fc:	nop
  44b900:	stp	x29, x30, [sp, #-112]!
  44b904:	mov	x29, sp
  44b908:	stp	x19, x20, [sp, #16]
  44b90c:	mov	x19, x0
  44b910:	stp	x21, x22, [sp, #32]
  44b914:	str	x23, [sp, #48]
  44b918:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44b91c:	ldp	x0, x21, [x19, #-64]
  44b920:	ldur	x1, [x19, #-16]
  44b924:	str	x1, [sp, #80]
  44b928:	ldur	w20, [x19, #-36]
  44b92c:	ldur	x19, [x19, #-24]
  44b930:	bl	44ba48 <_obstack_memory_used@@Base+0x1fe8>
  44b934:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44b938:	bl	44be60 <_obstack_memory_used@@Base+0x2400>
  44b93c:	ldr	x22, [x0]
  44b940:	ldr	x0, [x22, #80]
  44b944:	tbz	w0, #0, 44b9c8 <_obstack_memory_used@@Base+0x1f68>
  44b948:	ldr	x22, [x22]
  44b94c:	add	x23, sp, #0x40
  44b950:	mov	x1, x19
  44b954:	mov	x2, x23
  44b958:	mov	x0, #0x0                   	// #0
  44b95c:	bl	44b338 <_obstack_memory_used@@Base+0x18d8>
  44b960:	ldur	x1, [x22, #-112]
  44b964:	sxtw	x20, w20
  44b968:	mov	x3, x20
  44b96c:	mov	x2, x22
  44b970:	mov	x0, x23
  44b974:	bl	44b238 <_obstack_memory_used@@Base+0x17d8>
  44b978:	tst	w0, #0xff
  44b97c:	b.ne	44b9e4 <_obstack_memory_used@@Base+0x1f84>  // b.any
  44b980:	adrp	x19, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44b984:	mov	x3, x20
  44b988:	mov	x0, x23
  44b98c:	mov	x2, #0x0                   	// #0
  44b990:	ldr	x1, [x19, #4024]
  44b994:	bl	44b238 <_obstack_memory_used@@Base+0x17d8>
  44b998:	tst	w0, #0xff
  44b99c:	b.eq	44b9e8 <_obstack_memory_used@@Base+0x1f88>  // b.none
  44b9a0:	mov	x0, #0x8                   	// #8
  44b9a4:	bl	44ad48 <_obstack_memory_used@@Base+0x12e8>
  44b9a8:	adrp	x3, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44b9ac:	adrp	x2, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44b9b0:	ldr	x1, [x19, #4024]
  44b9b4:	ldr	x3, [x3, #3944]
  44b9b8:	ldr	x2, [x2, #3936]
  44b9bc:	add	x3, x3, #0x10
  44b9c0:	str	x3, [x0]
  44b9c4:	bl	44bb60 <_obstack_memory_used@@Base+0x2100>
  44b9c8:	add	x22, x22, #0x70
  44b9cc:	b	44b94c <_obstack_memory_used@@Base+0x1eec>
  44b9d0:	mov	x19, x0
  44b9d4:	bl	44bd90 <_obstack_memory_used@@Base+0x2330>
  44b9d8:	bl	44bd90 <_obstack_memory_used@@Base+0x2330>
  44b9dc:	mov	x0, x19
  44b9e0:	bl	458660 <_obstack_memory_used@@Base+0xec00>
  44b9e4:	bl	44bbc0 <_obstack_memory_used@@Base+0x2160>
  44b9e8:	mov	x0, x21
  44b9ec:	bl	44b9f0 <_obstack_memory_used@@Base+0x1f90>
  44b9f0:	stp	x29, x30, [sp, #-16]!
  44b9f4:	mov	x29, sp
  44b9f8:	blr	x0
  44b9fc:	bl	4027f0 <abort@plt>
  44ba00:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44ba04:	bl	4027f0 <abort@plt>
  44ba08:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ba0c:	mov	x2, x0
  44ba10:	ldr	x1, [x1, #3888]
  44ba14:	ldaxr	x0, [x1]
  44ba18:	stlxr	w3, x2, [x1]
  44ba1c:	cbnz	w3, 44ba14 <_obstack_memory_used@@Base+0x1fb4>
  44ba20:	ret
  44ba24:	nop
  44ba28:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ba2c:	ldr	x0, [x0, #3888]
  44ba30:	ldar	x0, [x0]
  44ba34:	ret
  44ba38:	stp	x29, x30, [sp, #-16]!
  44ba3c:	mov	x29, sp
  44ba40:	bl	44ba28 <_obstack_memory_used@@Base+0x1fc8>
  44ba44:	bl	44b9f0 <_obstack_memory_used@@Base+0x1f90>
  44ba48:	stp	x29, x30, [sp, #-16]!
  44ba4c:	mov	x29, sp
  44ba50:	blr	x0
  44ba54:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44ba58:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ba5c:	mov	x2, x0
  44ba60:	ldr	x1, [x1, #3968]
  44ba64:	ldaxr	x0, [x1]
  44ba68:	stlxr	w3, x2, [x1]
  44ba6c:	cbnz	w3, 44ba64 <_obstack_memory_used@@Base+0x2004>
  44ba70:	ret
  44ba74:	nop
  44ba78:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44ba7c:	ldr	x0, [x0, #3968]
  44ba80:	ldar	x0, [x0]
  44ba84:	ret
  44ba88:	stp	x29, x30, [sp, #-16]!
  44ba8c:	mov	x29, sp
  44ba90:	bl	44ba78 <_obstack_memory_used@@Base+0x2018>
  44ba94:	bl	44ba48 <_obstack_memory_used@@Base+0x1fe8>
  44ba98:	stp	x29, x30, [sp, #-32]!
  44ba9c:	cmp	w0, #0x1
  44baa0:	mov	x29, sp
  44baa4:	b.hi	44baf0 <_obstack_memory_used@@Base+0x2090>  // b.pmore
  44baa8:	sub	x0, x1, #0x60
  44baac:	ldaxr	w2, [x0]
  44bab0:	sub	w2, w2, #0x1
  44bab4:	stlxr	w3, w2, [x0]
  44bab8:	cbnz	w3, 44baac <_obstack_memory_used@@Base+0x204c>
  44babc:	cbnz	w2, 44bae8 <_obstack_memory_used@@Base+0x2088>
  44bac0:	ldur	x2, [x1, #-72]
  44bac4:	str	x19, [sp, #16]
  44bac8:	add	x19, x1, #0x20
  44bacc:	cbz	x2, 44bad8 <_obstack_memory_used@@Base+0x2078>
  44bad0:	mov	x0, x19
  44bad4:	blr	x2
  44bad8:	mov	x0, x19
  44badc:	ldr	x19, [sp, #16]
  44bae0:	ldp	x29, x30, [sp], #32
  44bae4:	b	44adb0 <_obstack_memory_used@@Base+0x1350>
  44bae8:	ldp	x29, x30, [sp], #32
  44baec:	ret
  44baf0:	ldur	x0, [x1, #-56]
  44baf4:	str	x19, [sp, #16]
  44baf8:	bl	44b9f0 <_obstack_memory_used@@Base+0x1f90>
  44bafc:	nop
  44bb00:	stp	x29, x30, [sp, #-32]!
  44bb04:	mov	x29, sp
  44bb08:	stp	x19, x20, [sp, #16]
  44bb0c:	mov	x19, x0
  44bb10:	sub	x20, x0, #0x80
  44bb14:	stur	wzr, [x0, #-128]
  44bb18:	stp	x1, x2, [x0, #-112]
  44bb1c:	bl	44ba78 <_obstack_memory_used@@Base+0x2018>
  44bb20:	stur	x0, [x19, #-96]
  44bb24:	bl	44ba28 <_obstack_memory_used@@Base+0x1fc8>
  44bb28:	mov	x3, x0
  44bb2c:	mov	x2, #0x2b00                	// #11008
  44bb30:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x15a0>
  44bb34:	movk	x2, #0x432b, lsl #16
  44bb38:	add	x1, x1, #0xa98
  44bb3c:	movk	x2, #0x5543, lsl #32
  44bb40:	stur	x3, [x19, #-88]
  44bb44:	movk	x2, #0x474e, lsl #48
  44bb48:	stp	x2, x1, [x19, #-32]
  44bb4c:	mov	x0, x20
  44bb50:	ldp	x19, x20, [sp, #16]
  44bb54:	ldp	x29, x30, [sp], #32
  44bb58:	ret
  44bb5c:	nop
  44bb60:	stp	x29, x30, [sp, #-48]!
  44bb64:	mov	x29, sp
  44bb68:	stp	x19, x20, [sp, #16]
  44bb6c:	mov	x19, x0
  44bb70:	mov	x20, x1
  44bb74:	str	x21, [sp, #32]
  44bb78:	mov	x21, x2
  44bb7c:	bl	44be88 <_obstack_memory_used@@Base+0x2428>
  44bb80:	mov	x3, x0
  44bb84:	mov	x2, x21
  44bb88:	mov	x1, x20
  44bb8c:	mov	x0, x19
  44bb90:	ldr	w4, [x3, #8]
  44bb94:	add	w4, w4, #0x1
  44bb98:	str	w4, [x3, #8]
  44bb9c:	bl	44bb00 <_obstack_memory_used@@Base+0x20a0>
  44bba0:	mov	x19, x0
  44bba4:	mov	w0, #0x1                   	// #1
  44bba8:	str	w0, [x19], #96
  44bbac:	mov	x0, x19
  44bbb0:	bl	4583d0 <_obstack_memory_used@@Base+0xe970>
  44bbb4:	mov	x0, x19
  44bbb8:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44bbbc:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44bbc0:	stp	x29, x30, [sp, #-32]!
  44bbc4:	mov	x29, sp
  44bbc8:	str	x19, [sp, #16]
  44bbcc:	bl	44be88 <_obstack_memory_used@@Base+0x2428>
  44bbd0:	ldr	w2, [x0, #8]
  44bbd4:	ldr	x1, [x0]
  44bbd8:	add	w2, w2, #0x1
  44bbdc:	str	w2, [x0, #8]
  44bbe0:	cbz	x1, 44bc1c <_obstack_memory_used@@Base+0x21bc>
  44bbe4:	mov	x3, #0xd500                	// #54528
  44bbe8:	ldr	x2, [x1, #80]
  44bbec:	movk	x3, #0xbcd4, lsl #16
  44bbf0:	movk	x3, #0xaabc, lsl #32
  44bbf4:	movk	x3, #0xb8b1, lsl #48
  44bbf8:	add	x2, x2, x3
  44bbfc:	cmp	x2, #0x1
  44bc00:	b.ls	44bc20 <_obstack_memory_used@@Base+0x21c0>  // b.plast
  44bc04:	str	xzr, [x0]
  44bc08:	add	x19, x1, #0x50
  44bc0c:	mov	x0, x19
  44bc10:	bl	458770 <_obstack_memory_used@@Base+0xed10>
  44bc14:	mov	x0, x19
  44bc18:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44bc1c:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44bc20:	ldr	w0, [x1, #40]
  44bc24:	neg	w0, w0
  44bc28:	str	w0, [x1, #40]
  44bc2c:	b	44bc08 <_obstack_memory_used@@Base+0x21a8>
  44bc30:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44bc34:	mov	x2, x0
  44bc38:	add	x1, x1, #0xaf8
  44bc3c:	ldaxr	x0, [x1]
  44bc40:	stlxr	w3, x2, [x1]
  44bc44:	cbnz	w3, 44bc3c <_obstack_memory_used@@Base+0x21dc>
  44bc48:	ret
  44bc4c:	nop
  44bc50:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44bc54:	add	x0, x0, #0xaf8
  44bc58:	ldar	x0, [x0]
  44bc5c:	ret
  44bc60:	stp	x29, x30, [sp, #-16]!
  44bc64:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44bc68:	add	x1, x1, #0x6a8
  44bc6c:	mov	x2, #0x1b                  	// #27
  44bc70:	mov	x29, sp
  44bc74:	mov	w0, #0x2                   	// #2
  44bc78:	bl	4027d0 <write@plt>
  44bc7c:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44bc80:	stp	x29, x30, [sp, #-16]!
  44bc84:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44bc88:	add	x1, x1, #0x6c8
  44bc8c:	mov	x2, #0x1e                  	// #30
  44bc90:	mov	x29, sp
  44bc94:	mov	w0, #0x2                   	// #2
  44bc98:	bl	4027d0 <write@plt>
  44bc9c:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44bca0:	stp	x29, x30, [sp, #-32]!
  44bca4:	mov	x29, sp
  44bca8:	str	x19, [sp, #16]
  44bcac:	cbz	x0, 44bcd8 <_obstack_memory_used@@Base+0x2278>
  44bcb0:	mov	x19, x0
  44bcb4:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44bcb8:	mov	x1, #0xd500                	// #54528
  44bcbc:	movk	x1, #0xbcd4, lsl #16
  44bcc0:	ldr	x0, [x19]
  44bcc4:	movk	x1, #0xaabc, lsl #32
  44bcc8:	movk	x1, #0xb8b1, lsl #48
  44bccc:	add	x0, x0, x1
  44bcd0:	cmp	x0, #0x1
  44bcd4:	b.ls	44bcdc <_obstack_memory_used@@Base+0x227c>  // b.plast
  44bcd8:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44bcdc:	ldur	x0, [x19, #-56]
  44bce0:	bl	44b9f0 <_obstack_memory_used@@Base+0x1f90>
  44bce4:	nop
  44bce8:	ldur	x0, [x0, #-8]
  44bcec:	ret
  44bcf0:	stp	x29, x30, [sp, #-32]!
  44bcf4:	mov	x29, sp
  44bcf8:	str	x19, [sp, #16]
  44bcfc:	mov	x19, x0
  44bd00:	bl	44be88 <_obstack_memory_used@@Base+0x2428>
  44bd04:	mov	x1, x0
  44bd08:	mov	x2, x19
  44bd0c:	mov	x4, #0xd500                	// #54528
  44bd10:	movk	x4, #0xbcd4, lsl #16
  44bd14:	movk	x4, #0xaabc, lsl #32
  44bd18:	ldr	x3, [x2], #-80
  44bd1c:	movk	x4, #0xb8b1, lsl #48
  44bd20:	ldr	x0, [x0]
  44bd24:	add	x3, x3, x4
  44bd28:	cmp	x3, #0x1
  44bd2c:	b.ls	44bd44 <_obstack_memory_used@@Base+0x22e4>  // b.plast
  44bd30:	cbnz	x0, 44bd88 <_obstack_memory_used@@Base+0x2328>
  44bd34:	str	x2, [x1]
  44bd38:	ldr	x19, [sp, #16]
  44bd3c:	ldp	x29, x30, [sp], #32
  44bd40:	ret
  44bd44:	ldur	w3, [x19, #-40]
  44bd48:	mov	w5, #0x1                   	// #1
  44bd4c:	ldr	w4, [x1, #8]
  44bd50:	cmp	w3, #0x0
  44bd54:	sub	w5, w5, w3
  44bd58:	csinc	w3, w5, w3, lt  // lt = tstop
  44bd5c:	stur	w3, [x19, #-40]
  44bd60:	sub	w3, w4, #0x1
  44bd64:	str	w3, [x1, #8]
  44bd68:	cmp	x0, x2
  44bd6c:	b.eq	44bd78 <_obstack_memory_used@@Base+0x2318>  // b.none
  44bd70:	stur	x0, [x19, #-48]
  44bd74:	str	x2, [x1]
  44bd78:	ldur	x0, [x19, #-8]
  44bd7c:	ldr	x19, [sp, #16]
  44bd80:	ldp	x29, x30, [sp], #32
  44bd84:	ret
  44bd88:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44bd8c:	nop
  44bd90:	stp	x29, x30, [sp, #-16]!
  44bd94:	mov	x29, sp
  44bd98:	bl	44be60 <_obstack_memory_used@@Base+0x2400>
  44bd9c:	ldr	x1, [x0]
  44bda0:	cbz	x1, 44bde0 <_obstack_memory_used@@Base+0x2380>
  44bda4:	mov	x3, #0xd500                	// #54528
  44bda8:	ldr	x2, [x1, #80]
  44bdac:	movk	x3, #0xbcd4, lsl #16
  44bdb0:	movk	x3, #0xaabc, lsl #32
  44bdb4:	movk	x3, #0xb8b1, lsl #48
  44bdb8:	add	x2, x2, x3
  44bdbc:	cmp	x2, #0x1
  44bdc0:	b.hi	44be00 <_obstack_memory_used@@Base+0x23a0>  // b.pmore
  44bdc4:	ldr	w2, [x1, #40]
  44bdc8:	tbnz	w2, #31, 44bde8 <_obstack_memory_used@@Base+0x2388>
  44bdcc:	subs	w2, w2, #0x1
  44bdd0:	b.eq	44be10 <_obstack_memory_used@@Base+0x23b0>  // b.none
  44bdd4:	cmn	w2, #0x1
  44bdd8:	b.eq	44be24 <_obstack_memory_used@@Base+0x23c4>  // b.none
  44bddc:	str	w2, [x1, #40]
  44bde0:	ldp	x29, x30, [sp], #16
  44bde4:	ret
  44bde8:	adds	w2, w2, #0x1
  44bdec:	b.ne	44bddc <_obstack_memory_used@@Base+0x237c>  // b.any
  44bdf0:	ldr	x3, [x1, #32]
  44bdf4:	str	x3, [x0]
  44bdf8:	str	w2, [x1, #40]
  44bdfc:	b	44bde0 <_obstack_memory_used@@Base+0x2380>
  44be00:	str	xzr, [x0]
  44be04:	add	x0, x1, #0x50
  44be08:	ldp	x29, x30, [sp], #16
  44be0c:	b	458878 <_obstack_memory_used@@Base+0xee18>
  44be10:	ldr	x2, [x1, #32]
  44be14:	str	x2, [x0]
  44be18:	add	x0, x1, #0x50
  44be1c:	ldp	x29, x30, [sp], #16
  44be20:	b	458878 <_obstack_memory_used@@Base+0xee18>
  44be24:	bl	44ba38 <_obstack_memory_used@@Base+0x1fd8>
  44be28:	stp	x29, x30, [sp, #-16]!
  44be2c:	mov	x29, sp
  44be30:	bl	44be88 <_obstack_memory_used@@Base+0x2428>
  44be34:	ldr	w0, [x0, #8]
  44be38:	ldp	x29, x30, [sp], #16
  44be3c:	cmp	w0, #0x0
  44be40:	cset	w0, ne  // ne = any
  44be44:	ret
  44be48:	stp	x29, x30, [sp, #-16]!
  44be4c:	mov	x29, sp
  44be50:	bl	44be88 <_obstack_memory_used@@Base+0x2428>
  44be54:	ldr	w0, [x0, #8]
  44be58:	ldp	x29, x30, [sp], #16
  44be5c:	ret
  44be60:	stp	x29, x30, [sp, #-16]!
  44be64:	mrs	x1, tpidr_el0
  44be68:	movz	x0, #0x0, lsl #16
  44be6c:	movk	x0, #0x10
  44be70:	nop
  44be74:	nop
  44be78:	mov	x29, sp
  44be7c:	add	x0, x1, x0
  44be80:	ldp	x29, x30, [sp], #16
  44be84:	ret
  44be88:	stp	x29, x30, [sp, #-16]!
  44be8c:	mrs	x1, tpidr_el0
  44be90:	movz	x0, #0x0, lsl #16
  44be94:	movk	x0, #0x10
  44be98:	nop
  44be9c:	nop
  44bea0:	mov	x29, sp
  44bea4:	add	x0, x1, x0
  44bea8:	ldp	x29, x30, [sp], #16
  44beac:	ret
  44beb0:	stp	x29, x30, [sp, #-64]!
  44beb4:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  44beb8:	mov	x29, sp
  44bebc:	ldrb	w1, [x0, #2816]
  44bec0:	cbnz	w1, 44bfa8 <_obstack_memory_used@@Base+0x2548>
  44bec4:	mov	w1, #0x1                   	// #1
  44bec8:	strb	w1, [x0, #2816]
  44becc:	bl	455fe8 <_obstack_memory_used@@Base+0xc588>
  44bed0:	cbz	x0, 44bf7c <_obstack_memory_used@@Base+0x251c>
  44bed4:	stp	x19, x20, [sp, #16]
  44bed8:	mov	w4, #0xffffffff            	// #-1
  44bedc:	add	x3, sp, #0x3c
  44bee0:	ldr	x19, [x0, #8]
  44bee4:	stp	x21, x22, [sp, #32]
  44bee8:	adrp	x21, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44beec:	mov	x2, #0x0                   	// #0
  44bef0:	mov	x1, #0x0                   	// #0
  44bef4:	ldrb	w0, [x19]
  44bef8:	str	w4, [sp, #60]
  44befc:	cmp	w0, #0x2a
  44bf00:	cinc	x19, x19, eq  // eq = none
  44bf04:	mov	x0, x19
  44bf08:	bl	455e20 <_obstack_memory_used@@Base+0xc3c0>
  44bf0c:	mov	x20, x0
  44bf10:	ldr	x22, [x21, #3912]
  44bf14:	mov	x1, #0x1                   	// #1
  44bf18:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44bf1c:	mov	x2, #0x30                  	// #48
  44bf20:	add	x0, x0, #0x708
  44bf24:	ldr	x3, [x22]
  44bf28:	bl	402950 <fwrite@plt>
  44bf2c:	ldr	w0, [sp, #60]
  44bf30:	ldr	x1, [x22]
  44bf34:	cbz	w0, 44bf70 <_obstack_memory_used@@Base+0x2510>
  44bf38:	mov	x0, x19
  44bf3c:	bl	402500 <fputs@plt>
  44bf40:	ldr	x3, [x21, #3912]
  44bf44:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44bf48:	mov	x2, #0x2                   	// #2
  44bf4c:	add	x0, x0, #0x740
  44bf50:	mov	x1, #0x1                   	// #1
  44bf54:	ldr	x3, [x3]
  44bf58:	bl	402950 <fwrite@plt>
  44bf5c:	ldr	w0, [sp, #60]
  44bf60:	cbnz	w0, 44bf6c <_obstack_memory_used@@Base+0x250c>
  44bf64:	mov	x0, x20
  44bf68:	bl	402910 <free@plt>
  44bf6c:	bl	44bbc0 <_obstack_memory_used@@Base+0x2160>
  44bf70:	mov	x0, x20
  44bf74:	bl	402500 <fputs@plt>
  44bf78:	b	44bf40 <_obstack_memory_used@@Base+0x24e0>
  44bf7c:	adrp	x3, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44bf80:	mov	x2, #0x2d                  	// #45
  44bf84:	mov	x1, #0x1                   	// #1
  44bf88:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44bf8c:	ldr	x3, [x3, #3912]
  44bf90:	add	x0, x0, #0x748
  44bf94:	ldr	x3, [x3]
  44bf98:	bl	402950 <fwrite@plt>
  44bf9c:	stp	x19, x20, [sp, #16]
  44bfa0:	stp	x21, x22, [sp, #32]
  44bfa4:	bl	4027f0 <abort@plt>
  44bfa8:	adrp	x3, 48b000 <_obstack_memory_used@@Base+0x415a0>
  44bfac:	mov	x2, #0x1d                  	// #29
  44bfb0:	mov	x1, #0x1                   	// #1
  44bfb4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44bfb8:	ldr	x3, [x3, #3912]
  44bfbc:	add	x0, x0, #0x6e8
  44bfc0:	stp	x19, x20, [sp, #16]
  44bfc4:	ldr	x3, [x3]
  44bfc8:	stp	x21, x22, [sp, #32]
  44bfcc:	bl	402950 <fwrite@plt>
  44bfd0:	bl	4027f0 <abort@plt>
  44bfd4:	mov	x19, x1
  44bfd8:	cmp	x1, #0x1
  44bfdc:	b.ne	44c038 <_obstack_memory_used@@Base+0x25d8>  // b.any
  44bfe0:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44bfe4:	ldr	x1, [x0]
  44bfe8:	ldr	x1, [x1, #16]
  44bfec:	blr	x1
  44bff0:	mov	x20, x0
  44bff4:	ldr	x3, [x21, #3912]
  44bff8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44bffc:	mov	x1, x19
  44c000:	add	x0, x0, #0x778
  44c004:	mov	x2, #0xb                   	// #11
  44c008:	ldr	x3, [x3]
  44c00c:	bl	402950 <fwrite@plt>
  44c010:	ldr	x1, [x21, #3912]
  44c014:	mov	x0, x20
  44c018:	ldr	x1, [x1]
  44c01c:	bl	402500 <fputs@plt>
  44c020:	ldr	x21, [x21, #3912]
  44c024:	mov	w0, #0xa                   	// #10
  44c028:	ldr	x1, [x21]
  44c02c:	bl	4025e0 <fputc@plt>
  44c030:	bl	44bd90 <_obstack_memory_used@@Base+0x2330>
  44c034:	bl	4027f0 <abort@plt>
  44c038:	bl	44bcf0 <_obstack_memory_used@@Base+0x2290>
  44c03c:	bl	44bd90 <_obstack_memory_used@@Base+0x2330>
  44c040:	bl	4027f0 <abort@plt>
  44c044:	mov	x19, x0
  44c048:	bl	44bd90 <_obstack_memory_used@@Base+0x2330>
  44c04c:	mov	x0, x19
  44c050:	bl	458660 <_obstack_memory_used@@Base+0xec00>
  44c054:	nop
  44c058:	sub	w5, w1, #0x1
  44c05c:	mov	x4, x0
  44c060:	cmp	w5, #0x4f
  44c064:	b.ls	44c070 <_obstack_memory_used@@Base+0x2610>  // b.plast
  44c068:	mov	x0, #0x0                   	// #0
  44c06c:	ret
  44c070:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44c074:	add	x0, x0, #0x784
  44c078:	ldrb	w0, [x0, w5, uxtw]
  44c07c:	adr	x5, 44c088 <_obstack_memory_used@@Base+0x2628>
  44c080:	add	x0, x5, w0, sxtb #2
  44c084:	br	x0
  44c088:	cbz	x3, 44c068 <_obstack_memory_used@@Base+0x2608>
  44c08c:	ldp	w0, w5, [x4, #40]
  44c090:	cmp	w0, w5
  44c094:	b.ge	44c068 <_obstack_memory_used@@Base+0x2608>  // b.tcont
  44c098:	mov	w5, #0x18                  	// #24
  44c09c:	add	w7, w0, #0x1
  44c0a0:	ldr	x6, [x4, #32]
  44c0a4:	smull	x5, w0, w5
  44c0a8:	add	x0, x6, x5
  44c0ac:	str	wzr, [x0, #4]
  44c0b0:	str	w7, [x4, #40]
  44c0b4:	str	w1, [x6, x5]
  44c0b8:	stp	x2, x3, [x0, #8]
  44c0bc:	ret
  44c0c0:	cbnz	x2, 44c08c <_obstack_memory_used@@Base+0x262c>
  44c0c4:	mov	x0, #0x0                   	// #0
  44c0c8:	b	44c06c <_obstack_memory_used@@Base+0x260c>
  44c0cc:	cmp	x2, #0x0
  44c0d0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  44c0d4:	b.ne	44c08c <_obstack_memory_used@@Base+0x262c>  // b.any
  44c0d8:	mov	x0, #0x0                   	// #0
  44c0dc:	b	44c06c <_obstack_memory_used@@Base+0x260c>
  44c0e0:	ldr	x3, [x0, #24]
  44c0e4:	mov	x2, x1
  44c0e8:	mov	w4, #0x4f                  	// #79
  44c0ec:	ldrb	w1, [x3]
  44c0f0:	cmp	w1, #0x52
  44c0f4:	ccmp	w1, w4, #0x4, ne  // ne = any
  44c0f8:	b.ne	44c124 <_obstack_memory_used@@Base+0x26c4>  // b.any
  44c0fc:	ldr	w5, [x0, #72]
  44c100:	cmp	w1, #0x52
  44c104:	mov	w1, #0x20                  	// #32
  44c108:	add	w4, w5, #0x3
  44c10c:	b.eq	44c12c <_obstack_memory_used@@Base+0x26cc>  // b.none
  44c110:	add	x3, x3, #0x1
  44c114:	str	x3, [x0, #24]
  44c118:	str	w4, [x0, #72]
  44c11c:	mov	x3, #0x0                   	// #0
  44c120:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44c124:	mov	x0, x2
  44c128:	ret
  44c12c:	add	w4, w5, #0x2
  44c130:	add	x3, x3, #0x1
  44c134:	str	x3, [x0, #24]
  44c138:	mov	w1, #0x1f                  	// #31
  44c13c:	str	w4, [x0, #72]
  44c140:	mov	x3, #0x0                   	// #0
  44c144:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44c148:	cbz	x1, 44c228 <_obstack_memory_used@@Base+0x27c8>
  44c14c:	stp	x29, x30, [sp, #-32]!
  44c150:	mov	x29, sp
  44c154:	stp	x19, x20, [sp, #16]
  44c158:	mov	x20, x0
  44c15c:	mov	x19, x1
  44c160:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44c164:	add	x0, x0, #0x7d4
  44c168:	ldr	w1, [x19]
  44c16c:	sub	w1, w1, #0x1
  44c170:	cmp	w1, #0x4f
  44c174:	b.ls	44c184 <_obstack_memory_used@@Base+0x2724>  // b.plast
  44c178:	ldp	x19, x20, [sp, #16]
  44c17c:	ldp	x29, x30, [sp], #32
  44c180:	ret
  44c184:	ldrb	w1, [x0, w1, uxtw]
  44c188:	adr	x2, 44c194 <_obstack_memory_used@@Base+0x2734>
  44c18c:	add	x1, x2, w1, sxtb #2
  44c190:	br	x1
  44c194:	ldr	x0, [x19, #8]
  44c198:	ldr	w0, [x0]
  44c19c:	cmp	w0, #0x5
  44c1a0:	b.ne	44c1b0 <_obstack_memory_used@@Base+0x2750>  // b.any
  44c1a4:	ldr	w0, [x20, #348]
  44c1a8:	add	w0, w0, #0x1
  44c1ac:	str	w0, [x20, #348]
  44c1b0:	ldr	w0, [x20, #308]
  44c1b4:	cmp	w0, #0x800
  44c1b8:	b.gt	44c178 <_obstack_memory_used@@Base+0x2718>
  44c1bc:	ldr	x1, [x19, #8]
  44c1c0:	add	w0, w0, #0x1
  44c1c4:	str	w0, [x20, #308]
  44c1c8:	mov	x0, x20
  44c1cc:	bl	44c148 <_obstack_memory_used@@Base+0x26e8>
  44c1d0:	ldr	x1, [x19, #16]
  44c1d4:	mov	x0, x20
  44c1d8:	bl	44c148 <_obstack_memory_used@@Base+0x26e8>
  44c1dc:	ldr	w0, [x20, #308]
  44c1e0:	sub	w0, w0, #0x1
  44c1e4:	str	w0, [x20, #308]
  44c1e8:	ldp	x19, x20, [sp, #16]
  44c1ec:	ldp	x29, x30, [sp], #32
  44c1f0:	ret
  44c1f4:	ldr	x19, [x19, #8]
  44c1f8:	cbnz	x19, 44c168 <_obstack_memory_used@@Base+0x2708>
  44c1fc:	b	44c178 <_obstack_memory_used@@Base+0x2718>
  44c200:	ldr	x19, [x19, #16]
  44c204:	cbnz	x19, 44c168 <_obstack_memory_used@@Base+0x2708>
  44c208:	b	44c178 <_obstack_memory_used@@Base+0x2718>
  44c20c:	ldr	w0, [x20, #364]
  44c210:	add	w0, w0, #0x1
  44c214:	str	w0, [x20, #364]
  44c218:	ldr	w0, [x20, #308]
  44c21c:	cmp	w0, #0x800
  44c220:	b.gt	44c178 <_obstack_memory_used@@Base+0x2718>
  44c224:	b	44c1bc <_obstack_memory_used@@Base+0x275c>
  44c228:	ret
  44c22c:	nop
  44c230:	cbz	x2, 44c2d0 <_obstack_memory_used@@Base+0x2870>
  44c234:	stp	x29, x30, [sp, #-48]!
  44c238:	mov	x29, sp
  44c23c:	stp	x19, x20, [sp, #16]
  44c240:	mov	x20, x1
  44c244:	mov	x19, x0
  44c248:	stp	x21, x22, [sp, #32]
  44c24c:	add	x22, x1, x2
  44c250:	ldr	x1, [x0, #256]
  44c254:	b	44c278 <_obstack_memory_used@@Base+0x2818>
  44c258:	mov	x0, x1
  44c25c:	add	x1, x1, #0x1
  44c260:	str	x1, [x19, #256]
  44c264:	add	x20, x20, #0x1
  44c268:	cmp	x20, x22
  44c26c:	strb	w21, [x19, x0]
  44c270:	strb	w21, [x19, #264]
  44c274:	b.eq	44c2c0 <_obstack_memory_used@@Base+0x2860>  // b.none
  44c278:	ldrb	w21, [x20]
  44c27c:	cmp	x1, #0xff
  44c280:	b.ne	44c258 <_obstack_memory_used@@Base+0x27f8>  // b.any
  44c284:	ldp	x3, x2, [x19, #272]
  44c288:	strb	wzr, [x19, #255]
  44c28c:	mov	x0, x19
  44c290:	add	x20, x20, #0x1
  44c294:	blr	x3
  44c298:	ldr	x2, [x19, #320]
  44c29c:	mov	x0, #0x0                   	// #0
  44c2a0:	mov	x1, #0x1                   	// #1
  44c2a4:	str	x1, [x19, #256]
  44c2a8:	add	x2, x2, x1
  44c2ac:	str	x2, [x19, #320]
  44c2b0:	strb	w21, [x19, x0]
  44c2b4:	cmp	x20, x22
  44c2b8:	strb	w21, [x19, #264]
  44c2bc:	b.ne	44c278 <_obstack_memory_used@@Base+0x2818>  // b.any
  44c2c0:	ldp	x19, x20, [sp, #16]
  44c2c4:	ldp	x21, x22, [sp, #32]
  44c2c8:	ldp	x29, x30, [sp], #48
  44c2cc:	ret
  44c2d0:	ret
  44c2d4:	nop
  44c2d8:	ldr	x3, [x0]
  44c2dc:	mov	x6, x0
  44c2e0:	ldrb	w4, [x3]
  44c2e4:	cmp	w4, #0x6e
  44c2e8:	b.eq	44c374 <_obstack_memory_used@@Base+0x2914>  // b.none
  44c2ec:	sub	w0, w4, #0x30
  44c2f0:	and	w0, w0, #0xff
  44c2f4:	cmp	w0, #0x9
  44c2f8:	b.hi	44c39c <_obstack_memory_used@@Base+0x293c>  // b.pmore
  44c2fc:	mov	w9, #0x0                   	// #0
  44c300:	mov	w8, #0xcccd                	// #52429
  44c304:	add	x3, x3, #0x1
  44c308:	mov	w0, #0x0                   	// #0
  44c30c:	mov	w7, #0x7fffffff            	// #2147483647
  44c310:	movk	w8, #0xcccc, lsl #16
  44c314:	b	44c328 <_obstack_memory_used@@Base+0x28c8>
  44c318:	umull	x1, w1, w8
  44c31c:	lsr	x1, x1, #35
  44c320:	cmp	w1, w0
  44c324:	b.lt	44c36c <_obstack_memory_used@@Base+0x290c>  // b.tstop
  44c328:	str	x3, [x6]
  44c32c:	add	w0, w0, w0, lsl #2
  44c330:	add	x3, x3, #0x1
  44c334:	ldurb	w1, [x3, #-1]
  44c338:	add	w5, w4, w0, lsl #1
  44c33c:	sub	w0, w5, #0x30
  44c340:	sub	w2, w1, #0x30
  44c344:	mov	w4, w1
  44c348:	sub	w1, w7, w2
  44c34c:	and	w2, w2, #0xff
  44c350:	cmp	w2, #0x9
  44c354:	b.ls	44c318 <_obstack_memory_used@@Base+0x28b8>  // b.plast
  44c358:	cmp	w9, #0x0
  44c35c:	mov	w1, #0x30                  	// #48
  44c360:	sub	w5, w1, w5
  44c364:	csel	w0, w5, w0, ne  // ne = any
  44c368:	ret
  44c36c:	mov	w0, #0xffffffff            	// #-1
  44c370:	ret
  44c374:	add	x1, x3, #0x1
  44c378:	str	x1, [x0]
  44c37c:	ldrb	w4, [x3, #1]
  44c380:	sub	w0, w4, #0x30
  44c384:	and	w0, w0, #0xff
  44c388:	cmp	w0, #0x9
  44c38c:	b.hi	44c39c <_obstack_memory_used@@Base+0x293c>  // b.pmore
  44c390:	mov	x3, x1
  44c394:	mov	w9, #0x1                   	// #1
  44c398:	b	44c300 <_obstack_memory_used@@Base+0x28a0>
  44c39c:	mov	w0, #0x0                   	// #0
  44c3a0:	ret
  44c3a4:	nop
  44c3a8:	mov	x1, x0
  44c3ac:	ldr	w0, [x0, #40]
  44c3b0:	ldr	w2, [x1, #44]
  44c3b4:	cmp	w0, w2
  44c3b8:	b.ge	44c404 <_obstack_memory_used@@Base+0x29a4>  // b.tcont
  44c3bc:	stp	x29, x30, [sp, #-16]!
  44c3c0:	mov	w2, #0x18                  	// #24
  44c3c4:	add	w5, w0, #0x1
  44c3c8:	mov	x29, sp
  44c3cc:	ldr	x3, [x1, #32]
  44c3d0:	smull	x2, w0, w2
  44c3d4:	mov	w4, #0x42                  	// #66
  44c3d8:	add	x0, x1, #0x18
  44c3dc:	add	x10, x3, x2
  44c3e0:	str	wzr, [x10, #4]
  44c3e4:	str	w5, [x1, #40]
  44c3e8:	str	w4, [x3, x2]
  44c3ec:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44c3f0:	sxtw	x0, w0
  44c3f4:	str	x0, [x10, #8]
  44c3f8:	mov	x0, x10
  44c3fc:	ldp	x29, x30, [sp], #16
  44c400:	ret
  44c404:	mov	x10, #0x0                   	// #0
  44c408:	mov	x0, x10
  44c40c:	ret
  44c410:	ldr	x1, [x0, #24]
  44c414:	mov	x10, x0
  44c418:	ldrb	w0, [x1]
  44c41c:	cmp	w0, #0x5f
  44c420:	b.eq	44c464 <_obstack_memory_used@@Base+0x2a04>  // b.none
  44c424:	cmp	w0, #0x6e
  44c428:	b.eq	44c47c <_obstack_memory_used@@Base+0x2a1c>  // b.none
  44c42c:	stp	x29, x30, [sp, #-16]!
  44c430:	add	x0, x10, #0x18
  44c434:	mov	x29, sp
  44c438:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44c43c:	adds	w0, w0, #0x1
  44c440:	b.mi	44c474 <_obstack_memory_used@@Base+0x2a14>  // b.first
  44c444:	ldr	x1, [x10, #24]
  44c448:	ldrb	w2, [x1]
  44c44c:	cmp	w2, #0x5f
  44c450:	b.ne	44c474 <_obstack_memory_used@@Base+0x2a14>  // b.any
  44c454:	add	x1, x1, #0x1
  44c458:	str	x1, [x10, #24]
  44c45c:	ldp	x29, x30, [sp], #16
  44c460:	ret
  44c464:	add	x1, x1, #0x1
  44c468:	mov	w0, #0x0                   	// #0
  44c46c:	str	x1, [x10, #24]
  44c470:	ret
  44c474:	mov	w0, #0xffffffff            	// #-1
  44c478:	b	44c45c <_obstack_memory_used@@Base+0x29fc>
  44c47c:	mov	w0, #0xffffffff            	// #-1
  44c480:	ret
  44c484:	nop
  44c488:	ldr	x1, [x0, #24]
  44c48c:	ldrb	w2, [x1]
  44c490:	cmp	w2, #0x54
  44c494:	b.ne	44c500 <_obstack_memory_used@@Base+0x2aa0>  // b.any
  44c498:	stp	x29, x30, [sp, #-16]!
  44c49c:	add	x1, x1, #0x1
  44c4a0:	mov	x11, x0
  44c4a4:	mov	x29, sp
  44c4a8:	str	x1, [x0, #24]
  44c4ac:	bl	44c410 <_obstack_memory_used@@Base+0x29b0>
  44c4b0:	tbnz	w0, #31, 44c4f4 <_obstack_memory_used@@Base+0x2a94>
  44c4b4:	ldp	w1, w2, [x11, #40]
  44c4b8:	cmp	w1, w2
  44c4bc:	b.ge	44c4f4 <_obstack_memory_used@@Base+0x2a94>  // b.tcont
  44c4c0:	mov	w2, #0x18                  	// #24
  44c4c4:	add	w5, w1, #0x1
  44c4c8:	ldr	x3, [x11, #32]
  44c4cc:	smull	x2, w1, w2
  44c4d0:	sxtw	x1, w0
  44c4d4:	mov	w4, #0x5                   	// #5
  44c4d8:	add	x0, x3, x2
  44c4dc:	str	wzr, [x0, #4]
  44c4e0:	str	w5, [x11, #40]
  44c4e4:	str	w4, [x3, x2]
  44c4e8:	str	x1, [x0, #8]
  44c4ec:	ldp	x29, x30, [sp], #16
  44c4f0:	ret
  44c4f4:	mov	x0, #0x0                   	// #0
  44c4f8:	ldp	x29, x30, [sp], #16
  44c4fc:	ret
  44c500:	mov	x0, #0x0                   	// #0
  44c504:	ret
  44c508:	mov	x10, x0
  44c50c:	stp	x29, x30, [sp, #-16]!
  44c510:	add	x0, x0, #0x18
  44c514:	mov	x29, sp
  44c518:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44c51c:	cmp	w0, #0x0
  44c520:	b.le	44c618 <_obstack_memory_used@@Base+0x2bb8>
  44c524:	mov	w1, w0
  44c528:	sxtw	x3, w0
  44c52c:	ldr	x0, [x10, #8]
  44c530:	ldr	x2, [x10, #24]
  44c534:	sub	x0, x0, x2
  44c538:	cmp	x0, w1, sxtw
  44c53c:	b.lt	44c610 <_obstack_memory_used@@Base+0x2bb0>  // b.tstop
  44c540:	ldr	w0, [x10, #16]
  44c544:	add	x3, x2, x3
  44c548:	str	x3, [x10, #24]
  44c54c:	tbz	w0, #2, 44c55c <_obstack_memory_used@@Base+0x2afc>
  44c550:	ldrb	w0, [x2, w1, sxtw]
  44c554:	cmp	w0, #0x24
  44c558:	b.eq	44c624 <_obstack_memory_used@@Base+0x2bc4>  // b.none
  44c55c:	ldp	w0, w3, [x10, #40]
  44c560:	cmp	w1, #0x9
  44c564:	b.gt	44c5a0 <_obstack_memory_used@@Base+0x2b40>
  44c568:	cmp	w3, w0
  44c56c:	b.le	44c610 <_obstack_memory_used@@Base+0x2bb0>
  44c570:	ldr	x4, [x10, #32]
  44c574:	mov	w5, #0x18                  	// #24
  44c578:	add	w3, w0, #0x1
  44c57c:	smaddl	x0, w0, w5, x4
  44c580:	str	wzr, [x0, #4]
  44c584:	str	w3, [x10, #40]
  44c588:	cbz	x2, 44c610 <_obstack_memory_used@@Base+0x2bb0>
  44c58c:	stp	xzr, x2, [x0]
  44c590:	str	w1, [x0, #16]
  44c594:	str	x0, [x10, #64]
  44c598:	ldp	x29, x30, [sp], #16
  44c59c:	ret
  44c5a0:	mov	x4, #0x475f                	// #18271
  44c5a4:	ldr	x5, [x2]
  44c5a8:	movk	x4, #0x4f4c, lsl #16
  44c5ac:	movk	x4, #0x4142, lsl #32
  44c5b0:	movk	x4, #0x5f4c, lsl #48
  44c5b4:	cmp	x5, x4
  44c5b8:	b.ne	44c5e4 <_obstack_memory_used@@Base+0x2b84>  // b.any
  44c5bc:	ldrb	w4, [x2, #8]
  44c5c0:	mov	w6, #0x5f                  	// #95
  44c5c4:	mov	w5, #0x24                  	// #36
  44c5c8:	cmp	w4, #0x2e
  44c5cc:	ccmp	w4, w6, #0x4, ne  // ne = any
  44c5d0:	ccmp	w4, w5, #0x4, ne  // ne = any
  44c5d4:	b.ne	44c5e4 <_obstack_memory_used@@Base+0x2b84>  // b.any
  44c5d8:	ldrb	w4, [x2, #9]
  44c5dc:	cmp	w4, #0x4e
  44c5e0:	b.eq	44c63c <_obstack_memory_used@@Base+0x2bdc>  // b.none
  44c5e4:	cmp	w3, w0
  44c5e8:	b.le	44c610 <_obstack_memory_used@@Base+0x2bb0>
  44c5ec:	ldr	x4, [x10, #32]
  44c5f0:	mov	w5, #0x18                  	// #24
  44c5f4:	add	w3, w0, #0x1
  44c5f8:	smaddl	x0, w0, w5, x4
  44c5fc:	str	wzr, [x0, #4]
  44c600:	str	w3, [x10, #40]
  44c604:	stp	xzr, x2, [x0]
  44c608:	str	w1, [x0, #16]
  44c60c:	b	44c594 <_obstack_memory_used@@Base+0x2b34>
  44c610:	mov	x0, #0x0                   	// #0
  44c614:	b	44c594 <_obstack_memory_used@@Base+0x2b34>
  44c618:	mov	x0, #0x0                   	// #0
  44c61c:	ldp	x29, x30, [sp], #16
  44c620:	ret
  44c624:	add	x3, x3, #0x1
  44c628:	str	x3, [x10, #24]
  44c62c:	cmp	w1, #0x9
  44c630:	ldp	w0, w3, [x10, #40]
  44c634:	b.le	44c568 <_obstack_memory_used@@Base+0x2b08>
  44c638:	b	44c5a0 <_obstack_memory_used@@Base+0x2b40>
  44c63c:	ldr	w2, [x10, #72]
  44c640:	cmp	w3, w0
  44c644:	add	w2, w2, #0x16
  44c648:	sub	w1, w2, w1
  44c64c:	str	w1, [x10, #72]
  44c650:	b.le	44c610 <_obstack_memory_used@@Base+0x2bb0>
  44c654:	mov	w1, #0x18                  	// #24
  44c658:	add	w2, w0, #0x1
  44c65c:	ldr	x3, [x10, #32]
  44c660:	smull	x1, w0, w1
  44c664:	str	w2, [x10, #40]
  44c668:	mov	w4, #0x15                  	// #21
  44c66c:	add	x0, x3, x1
  44c670:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44c674:	add	x2, x2, #0x2e0
  44c678:	str	xzr, [x3, x1]
  44c67c:	str	x2, [x0, #8]
  44c680:	str	w4, [x0, #16]
  44c684:	b	44c594 <_obstack_memory_used@@Base+0x2b34>
  44c688:	ldr	x3, [x0, #24]
  44c68c:	mov	x11, x0
  44c690:	ldr	x13, [x0, #64]
  44c694:	mov	x12, x1
  44c698:	ldrb	w0, [x3]
  44c69c:	cmp	w0, #0x42
  44c6a0:	b.ne	44c6f8 <_obstack_memory_used@@Base+0x2c98>  // b.any
  44c6a4:	stp	x29, x30, [sp, #-16]!
  44c6a8:	mov	x29, sp
  44c6ac:	nop
  44c6b0:	add	x3, x3, #0x1
  44c6b4:	str	x3, [x11, #24]
  44c6b8:	mov	x0, x11
  44c6bc:	bl	44c508 <_obstack_memory_used@@Base+0x2aa8>
  44c6c0:	mov	x3, x0
  44c6c4:	mov	x2, x12
  44c6c8:	mov	x0, x11
  44c6cc:	mov	w1, #0x4c                  	// #76
  44c6d0:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44c6d4:	ldr	x3, [x11, #24]
  44c6d8:	mov	x12, x0
  44c6dc:	ldrb	w0, [x3]
  44c6e0:	cmp	w0, #0x42
  44c6e4:	b.eq	44c6b0 <_obstack_memory_used@@Base+0x2c50>  // b.none
  44c6e8:	str	x13, [x11, #64]
  44c6ec:	mov	x0, x12
  44c6f0:	ldp	x29, x30, [sp], #16
  44c6f4:	ret
  44c6f8:	mov	x0, x1
  44c6fc:	str	x13, [x11, #64]
  44c700:	ret
  44c704:	nop
  44c708:	mov	x14, x0
  44c70c:	ldr	x0, [x0, #24]
  44c710:	ldrb	w2, [x0]
  44c714:	cmp	w2, #0x53
  44c718:	b.ne	44c788 <_obstack_memory_used@@Base+0x2d28>  // b.any
  44c71c:	add	x2, x0, #0x1
  44c720:	str	x2, [x14, #24]
  44c724:	ldrb	w2, [x0, #1]
  44c728:	cbnz	w2, 44c790 <_obstack_memory_used@@Base+0x2d30>
  44c72c:	ldr	w0, [x14, #16]
  44c730:	and	w1, w1, #0x1
  44c734:	ands	w3, w0, #0x8
  44c738:	ubfx	x4, x0, #3, #1
  44c73c:	csel	w1, w1, wzr, eq  // eq = none
  44c740:	cbz	w1, 44c75c <_obstack_memory_used@@Base+0x2cfc>
  44c744:	ldr	x0, [x14, #24]
  44c748:	ldrb	w0, [x0]
  44c74c:	sub	w0, w0, #0x43
  44c750:	and	w0, w0, #0xff
  44c754:	cmp	w0, #0x1
  44c758:	csinc	w4, w4, wzr, hi  // hi = pmore
  44c75c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44c760:	add	x0, x0, #0xdf0
  44c764:	add	x3, x0, #0x188
  44c768:	mov	w1, #0x74                  	// #116
  44c76c:	b	44c774 <_obstack_memory_used@@Base+0x2d14>
  44c770:	ldrb	w1, [x0]
  44c774:	cmp	w1, w2
  44c778:	b.eq	44c864 <_obstack_memory_used@@Base+0x2e04>  // b.none
  44c77c:	add	x0, x0, #0x38
  44c780:	cmp	x0, x3
  44c784:	b.ne	44c770 <_obstack_memory_used@@Base+0x2d10>  // b.any
  44c788:	mov	x0, #0x0                   	// #0
  44c78c:	ret
  44c790:	add	x2, x0, #0x2
  44c794:	str	x2, [x14, #24]
  44c798:	ldrb	w2, [x0, #1]
  44c79c:	sub	w5, w2, #0x30
  44c7a0:	cmp	w2, #0x5f
  44c7a4:	and	w0, w5, #0xff
  44c7a8:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  44c7ac:	b.hi	44c7d4 <_obstack_memory_used@@Base+0x2d74>  // b.pmore
  44c7b0:	cmp	w2, #0x5f
  44c7b4:	mov	w1, #0x0                   	// #0
  44c7b8:	b.ne	44c7e8 <_obstack_memory_used@@Base+0x2d88>  // b.any
  44c7bc:	ldr	w0, [x14, #56]
  44c7c0:	cmp	w0, w1
  44c7c4:	b.ls	44c788 <_obstack_memory_used@@Base+0x2d28>  // b.plast
  44c7c8:	ldr	x0, [x14, #48]
  44c7cc:	ldr	x0, [x0, w1, uxtw #3]
  44c7d0:	ret
  44c7d4:	sub	w0, w2, #0x41
  44c7d8:	and	w0, w0, #0xff
  44c7dc:	cmp	w0, #0x19
  44c7e0:	b.hi	44c72c <_obstack_memory_used@@Base+0x2ccc>  // b.pmore
  44c7e4:	nop
  44c7e8:	mov	w3, #0x0                   	// #0
  44c7ec:	nop
  44c7f0:	add	w1, w3, w3, lsl #3
  44c7f4:	sub	w6, w2, #0x41
  44c7f8:	mov	w4, w1
  44c7fc:	and	w5, w5, #0xff
  44c800:	add	w1, w2, w1, lsl #2
  44c804:	and	w6, w6, #0xff
  44c808:	sub	w1, w1, #0x37
  44c80c:	add	w2, w2, w4, lsl #2
  44c810:	cmp	w5, #0x9
  44c814:	b.hi	44c858 <_obstack_memory_used@@Base+0x2df8>  // b.pmore
  44c818:	sub	w1, w2, #0x30
  44c81c:	cmp	w3, w1
  44c820:	b.hi	44c788 <_obstack_memory_used@@Base+0x2d28>  // b.pmore
  44c824:	ldr	x4, [x14, #24]
  44c828:	mov	w3, w1
  44c82c:	add	x0, x4, #0x1
  44c830:	ldrb	w2, [x4]
  44c834:	cbz	w2, 44c848 <_obstack_memory_used@@Base+0x2de8>
  44c838:	str	x0, [x14, #24]
  44c83c:	ldrb	w2, [x4]
  44c840:	cmp	w2, #0x5f
  44c844:	b.eq	44c850 <_obstack_memory_used@@Base+0x2df0>  // b.none
  44c848:	sub	w5, w2, #0x30
  44c84c:	b	44c7f0 <_obstack_memory_used@@Base+0x2d90>
  44c850:	add	w1, w1, #0x1
  44c854:	b	44c7bc <_obstack_memory_used@@Base+0x2d5c>
  44c858:	cmp	w6, #0x19
  44c85c:	b.ls	44c81c <_obstack_memory_used@@Base+0x2dbc>  // b.plast
  44c860:	b	44c788 <_obstack_memory_used@@Base+0x2d28>
  44c864:	ldr	x5, [x0, #40]
  44c868:	ldp	w1, w3, [x14, #40]
  44c86c:	cbz	x5, 44c8a8 <_obstack_memory_used@@Base+0x2e48>
  44c870:	ldr	w9, [x0, #48]
  44c874:	cmp	w3, w1
  44c878:	b.le	44c960 <_obstack_memory_used@@Base+0x2f00>
  44c87c:	mov	w8, #0x18                  	// #24
  44c880:	ldr	x7, [x14, #32]
  44c884:	smull	x6, w1, w8
  44c888:	add	w1, w1, #0x1
  44c88c:	add	x2, x7, x6
  44c890:	str	wzr, [x2, #4]
  44c894:	str	w1, [x14, #40]
  44c898:	str	w8, [x7, x6]
  44c89c:	str	x5, [x2, #8]
  44c8a0:	str	w9, [x2, #16]
  44c8a4:	str	x2, [x14, #64]
  44c8a8:	cbz	w4, 44c904 <_obstack_memory_used@@Base+0x2ea4>
  44c8ac:	ldr	w2, [x0, #32]
  44c8b0:	ldr	x5, [x0, #24]
  44c8b4:	cmp	w1, w3
  44c8b8:	ldr	w0, [x14, #72]
  44c8bc:	add	w0, w0, w2
  44c8c0:	str	w0, [x14, #72]
  44c8c4:	b.ge	44c958 <_obstack_memory_used@@Base+0x2ef8>  // b.tcont
  44c8c8:	mov	w4, #0x18                  	// #24
  44c8cc:	add	w6, w1, #0x1
  44c8d0:	ldr	x3, [x14, #32]
  44c8d4:	smull	x1, w1, w4
  44c8d8:	add	x0, x3, x1
  44c8dc:	str	wzr, [x0, #4]
  44c8e0:	str	w6, [x14, #40]
  44c8e4:	str	w4, [x3, x1]
  44c8e8:	str	x5, [x0, #8]
  44c8ec:	str	w2, [x0, #16]
  44c8f0:	ldr	x1, [x14, #24]
  44c8f4:	ldrb	w1, [x1]
  44c8f8:	cmp	w1, #0x42
  44c8fc:	b.eq	44c910 <_obstack_memory_used@@Base+0x2eb0>  // b.none
  44c900:	ret
  44c904:	ldr	w2, [x0, #16]
  44c908:	ldr	x5, [x0, #8]
  44c90c:	b	44c8b4 <_obstack_memory_used@@Base+0x2e54>
  44c910:	stp	x29, x30, [sp, #-16]!
  44c914:	mov	x1, x0
  44c918:	mov	x0, x14
  44c91c:	mov	x29, sp
  44c920:	bl	44c688 <_obstack_memory_used@@Base+0x2c28>
  44c924:	cbz	x0, 44c94c <_obstack_memory_used@@Base+0x2eec>
  44c928:	ldp	w1, w2, [x14, #56]
  44c92c:	cmp	w1, w2
  44c930:	b.ge	44c94c <_obstack_memory_used@@Base+0x2eec>  // b.tcont
  44c934:	ldr	x3, [x14, #48]
  44c938:	add	w2, w1, #0x1
  44c93c:	str	x0, [x3, w1, sxtw #3]
  44c940:	str	w2, [x14, #56]
  44c944:	ldp	x29, x30, [sp], #16
  44c948:	ret
  44c94c:	mov	x0, #0x0                   	// #0
  44c950:	ldp	x29, x30, [sp], #16
  44c954:	ret
  44c958:	mov	x0, #0x0                   	// #0
  44c95c:	b	44c8f0 <_obstack_memory_used@@Base+0x2e90>
  44c960:	mov	x2, #0x0                   	// #0
  44c964:	str	x2, [x14, #64]
  44c968:	b	44c8a8 <_obstack_memory_used@@Base+0x2e48>
  44c96c:	nop
  44c970:	mov	x10, x0
  44c974:	cbnz	w1, 44c990 <_obstack_memory_used@@Base+0x2f30>
  44c978:	ldr	x0, [x0, #24]
  44c97c:	ldrb	w1, [x0]
  44c980:	cbz	w1, 44c9d0 <_obstack_memory_used@@Base+0x2f70>
  44c984:	add	x1, x0, #0x1
  44c988:	str	x1, [x10, #24]
  44c98c:	ldrb	w1, [x0]
  44c990:	stp	x29, x30, [sp, #-16]!
  44c994:	cmp	w1, #0x68
  44c998:	mov	x29, sp
  44c99c:	b.eq	44ca0c <_obstack_memory_used@@Base+0x2fac>  // b.none
  44c9a0:	cmp	w1, #0x76
  44c9a4:	b.ne	44c9c4 <_obstack_memory_used@@Base+0x2f64>  // b.any
  44c9a8:	add	x11, x10, #0x18
  44c9ac:	mov	x0, x11
  44c9b0:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44c9b4:	ldr	x0, [x10, #24]
  44c9b8:	ldrb	w1, [x0]
  44c9bc:	cmp	w1, #0x5f
  44c9c0:	b.eq	44c9d8 <_obstack_memory_used@@Base+0x2f78>  // b.none
  44c9c4:	mov	w0, #0x0                   	// #0
  44c9c8:	ldp	x29, x30, [sp], #16
  44c9cc:	ret
  44c9d0:	mov	w0, #0x0                   	// #0
  44c9d4:	ret
  44c9d8:	add	x0, x0, #0x1
  44c9dc:	str	x0, [x10, #24]
  44c9e0:	mov	x0, x11
  44c9e4:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44c9e8:	ldr	x0, [x10, #24]
  44c9ec:	ldrb	w1, [x0]
  44c9f0:	cmp	w1, #0x5f
  44c9f4:	b.ne	44c9c4 <_obstack_memory_used@@Base+0x2f64>  // b.any
  44c9f8:	add	x1, x0, #0x1
  44c9fc:	str	x1, [x10, #24]
  44ca00:	mov	w0, #0x1                   	// #1
  44ca04:	ldp	x29, x30, [sp], #16
  44ca08:	ret
  44ca0c:	add	x0, x10, #0x18
  44ca10:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44ca14:	b	44c9e8 <_obstack_memory_used@@Base+0x2f88>
  44ca18:	mov	x2, x0
  44ca1c:	mov	w3, #0x56                  	// #86
  44ca20:	mov	w0, #0x4b                  	// #75
  44ca24:	ldrb	w1, [x2]
  44ca28:	cmp	w1, #0x72
  44ca2c:	ccmp	w1, w3, #0x4, ne  // ne = any
  44ca30:	ccmp	w1, w0, #0x4, ne  // ne = any
  44ca34:	mov	w0, #0x1                   	// #1
  44ca38:	b.eq	44ca48 <_obstack_memory_used@@Base+0x2fe8>  // b.none
  44ca3c:	cmp	w1, #0x44
  44ca40:	mov	w0, #0x0                   	// #0
  44ca44:	b.eq	44ca4c <_obstack_memory_used@@Base+0x2fec>  // b.none
  44ca48:	ret
  44ca4c:	ldrb	w0, [x2, #1]
  44ca50:	and	w1, w0, #0xffffffdf
  44ca54:	sub	w0, w0, #0x77
  44ca58:	cmp	w1, #0x4f
  44ca5c:	and	w0, w0, #0xff
  44ca60:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  44ca64:	cset	w0, ls  // ls = plast
  44ca68:	ret
  44ca6c:	nop
  44ca70:	ldr	x1, [x0, #24]
  44ca74:	mov	x10, x0
  44ca78:	ldrb	w0, [x1]
  44ca7c:	cmp	w0, #0x5f
  44ca80:	b.eq	44ca8c <_obstack_memory_used@@Base+0x302c>  // b.none
  44ca84:	mov	w0, #0x1                   	// #1
  44ca88:	ret
  44ca8c:	stp	x29, x30, [sp, #-16]!
  44ca90:	add	x0, x1, #0x1
  44ca94:	mov	x29, sp
  44ca98:	str	x0, [x10, #24]
  44ca9c:	ldrb	w0, [x1, #1]
  44caa0:	cmp	w0, #0x5f
  44caa4:	b.eq	44cac8 <_obstack_memory_used@@Base+0x3068>  // b.none
  44caa8:	add	x0, x10, #0x18
  44caac:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44cab0:	mov	w1, w0
  44cab4:	mov	w0, #0x0                   	// #0
  44cab8:	tbnz	w1, #31, 44cac0 <_obstack_memory_used@@Base+0x3060>
  44cabc:	mov	w0, #0x1                   	// #1
  44cac0:	ldp	x29, x30, [sp], #16
  44cac4:	ret
  44cac8:	mov	x0, x10
  44cacc:	add	x1, x1, #0x2
  44cad0:	str	x1, [x0, #24]!
  44cad4:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44cad8:	tbnz	w0, #31, 44cb08 <_obstack_memory_used@@Base+0x30a8>
  44cadc:	cmp	w0, #0x9
  44cae0:	b.le	44cabc <_obstack_memory_used@@Base+0x305c>
  44cae4:	ldr	x1, [x10, #24]
  44cae8:	mov	w0, #0x0                   	// #0
  44caec:	ldrb	w2, [x1]
  44caf0:	cmp	w2, #0x5f
  44caf4:	b.ne	44cac0 <_obstack_memory_used@@Base+0x3060>  // b.any
  44caf8:	add	x1, x1, #0x1
  44cafc:	mov	w0, #0x1                   	// #1
  44cb00:	str	x1, [x10, #24]
  44cb04:	b	44cac0 <_obstack_memory_used@@Base+0x3060>
  44cb08:	mov	w0, #0x0                   	// #0
  44cb0c:	b	44cac0 <_obstack_memory_used@@Base+0x3060>
  44cb10:	cbnz	x0, 44cb2c <_obstack_memory_used@@Base+0x30cc>
  44cb14:	b	44cb38 <_obstack_memory_used@@Base+0x30d8>
  44cb18:	cmp	w1, #0x0
  44cb1c:	b.le	44cb40 <_obstack_memory_used@@Base+0x30e0>
  44cb20:	ldr	x0, [x0, #16]
  44cb24:	sub	w1, w1, #0x1
  44cb28:	cbz	x0, 44cb3c <_obstack_memory_used@@Base+0x30dc>
  44cb2c:	ldr	w2, [x0]
  44cb30:	cmp	w2, #0x2f
  44cb34:	b.eq	44cb18 <_obstack_memory_used@@Base+0x30b8>  // b.none
  44cb38:	mov	x0, #0x0                   	// #0
  44cb3c:	ret
  44cb40:	b.ne	44cb38 <_obstack_memory_used@@Base+0x30d8>  // b.any
  44cb44:	ldr	x0, [x0, #8]
  44cb48:	ret
  44cb4c:	nop
  44cb50:	mov	x2, x0
  44cb54:	ldr	x0, [x0, #288]
  44cb58:	cbz	x0, 44cb70 <_obstack_memory_used@@Base+0x3110>
  44cb5c:	ldr	x1, [x1]
  44cb60:	ldr	x0, [x0, #8]
  44cb64:	ldr	x0, [x0, #16]
  44cb68:	tbnz	w1, #31, 44cb78 <_obstack_memory_used@@Base+0x3118>
  44cb6c:	b	44cb10 <_obstack_memory_used@@Base+0x30b0>
  44cb70:	mov	w1, #0x1                   	// #1
  44cb74:	str	w1, [x2, #304]
  44cb78:	ret
  44cb7c:	nop
  44cb80:	cbz	x1, 44cc54 <_obstack_memory_used@@Base+0x31f4>
  44cb84:	stp	x29, x30, [sp, #-48]!
  44cb88:	mov	x29, sp
  44cb8c:	stp	x21, x22, [sp, #32]
  44cb90:	mov	x21, #0x8001                	// #32769
  44cb94:	movk	x21, #0x410, lsl #16
  44cb98:	movk	x21, #0xc600, lsl #32
  44cb9c:	stp	x19, x20, [sp, #16]
  44cba0:	mov	x20, x0
  44cba4:	mov	x19, x1
  44cba8:	mov	x22, #0x1                   	// #1
  44cbac:	movk	x21, #0x19, lsl #48
  44cbb0:	ldr	w2, [x19]
  44cbb4:	cmp	w2, #0x8
  44cbb8:	b.eq	44cbd0 <_obstack_memory_used@@Base+0x3170>  // b.none
  44cbbc:	b.hi	44cc24 <_obstack_memory_used@@Base+0x31c4>  // b.pmore
  44cbc0:	cmp	w2, #0x6
  44cbc4:	b.eq	44cbd8 <_obstack_memory_used@@Base+0x3178>  // b.none
  44cbc8:	cmp	w2, #0x7
  44cbcc:	b.ne	44cbec <_obstack_memory_used@@Base+0x318c>  // b.any
  44cbd0:	ldr	x19, [x19, #16]
  44cbd4:	cbnz	x19, 44cbb0 <_obstack_memory_used@@Base+0x3150>
  44cbd8:	mov	x0, #0x0                   	// #0
  44cbdc:	ldp	x19, x20, [sp, #16]
  44cbe0:	ldp	x21, x22, [sp, #32]
  44cbe4:	ldp	x29, x30, [sp], #48
  44cbe8:	ret
  44cbec:	cbz	w2, 44cbd8 <_obstack_memory_used@@Base+0x3178>
  44cbf0:	cmp	w2, #0x5
  44cbf4:	b.ne	44cc40 <_obstack_memory_used@@Base+0x31e0>  // b.any
  44cbf8:	add	x1, x19, #0x8
  44cbfc:	mov	x0, x20
  44cc00:	bl	44cb50 <_obstack_memory_used@@Base+0x30f0>
  44cc04:	cbz	x0, 44cbd8 <_obstack_memory_used@@Base+0x3178>
  44cc08:	ldr	w1, [x0]
  44cc0c:	cmp	w1, #0x2f
  44cc10:	b.ne	44cbd8 <_obstack_memory_used@@Base+0x3178>  // b.any
  44cc14:	ldp	x19, x20, [sp, #16]
  44cc18:	ldp	x21, x22, [sp, #32]
  44cc1c:	ldp	x29, x30, [sp], #48
  44cc20:	ret
  44cc24:	sub	w2, w2, #0x18
  44cc28:	cmp	w2, #0x34
  44cc2c:	b.hi	44cc40 <_obstack_memory_used@@Base+0x31e0>  // b.pmore
  44cc30:	lsl	x2, x22, x2
  44cc34:	tst	x2, x21
  44cc38:	b.ne	44cbd8 <_obstack_memory_used@@Base+0x3178>  // b.any
  44cc3c:	tbnz	w2, #27, 44cbd0 <_obstack_memory_used@@Base+0x3170>
  44cc40:	ldr	x1, [x19, #8]
  44cc44:	mov	x0, x20
  44cc48:	bl	44cb80 <_obstack_memory_used@@Base+0x3120>
  44cc4c:	cbz	x0, 44cbd0 <_obstack_memory_used@@Base+0x3170>
  44cc50:	b	44cbdc <_obstack_memory_used@@Base+0x317c>
  44cc54:	mov	x0, #0x0                   	// #0
  44cc58:	ret
  44cc5c:	nop
  44cc60:	stp	x29, x30, [sp, #-48]!
  44cc64:	mov	x29, sp
  44cc68:	stp	x19, x20, [sp, #16]
  44cc6c:	mov	x19, x2
  44cc70:	add	x2, x1, #0x1
  44cc74:	stp	x21, x22, [sp, #32]
  44cc78:	mov	x21, x1
  44cc7c:	mov	x22, x0
  44cc80:	ldp	x1, x20, [x19, #8]
  44cc84:	add	x1, x2, x1
  44cc88:	ldr	w2, [x19, #24]
  44cc8c:	cmp	x1, x20
  44cc90:	b.hi	44ccd4 <_obstack_memory_used@@Base+0x3274>  // b.pmore
  44cc94:	cbnz	w2, 44ccc4 <_obstack_memory_used@@Base+0x3264>
  44cc98:	ldp	x3, x0, [x19]
  44cc9c:	mov	x1, x22
  44cca0:	mov	x2, x21
  44cca4:	add	x0, x3, x0
  44cca8:	bl	402490 <memcpy@plt>
  44ccac:	ldp	x0, x1, [x19]
  44ccb0:	add	x0, x0, x21
  44ccb4:	strb	wzr, [x0, x1]
  44ccb8:	ldr	x1, [x19, #8]
  44ccbc:	add	x1, x1, x21
  44ccc0:	str	x1, [x19, #8]
  44ccc4:	ldp	x19, x20, [sp, #16]
  44ccc8:	ldp	x21, x22, [sp, #32]
  44cccc:	ldp	x29, x30, [sp], #48
  44ccd0:	ret
  44ccd4:	cbnz	w2, 44ccc4 <_obstack_memory_used@@Base+0x3264>
  44ccd8:	cbz	x20, 44cd10 <_obstack_memory_used@@Base+0x32b0>
  44ccdc:	nop
  44cce0:	lsl	x20, x20, #1
  44cce4:	cmp	x1, x20
  44cce8:	b.hi	44cce0 <_obstack_memory_used@@Base+0x3280>  // b.pmore
  44ccec:	ldr	x0, [x19]
  44ccf0:	mov	x1, x20
  44ccf4:	bl	402750 <realloc@plt>
  44ccf8:	cbz	x0, 44cd20 <_obstack_memory_used@@Base+0x32c0>
  44ccfc:	ldr	w2, [x19, #24]
  44cd00:	str	x0, [x19]
  44cd04:	str	x20, [x19, #16]
  44cd08:	cbz	w2, 44cc98 <_obstack_memory_used@@Base+0x3238>
  44cd0c:	b	44ccc4 <_obstack_memory_used@@Base+0x3264>
  44cd10:	cmp	x1, #0x2
  44cd14:	mov	x20, #0x2                   	// #2
  44cd18:	b.hi	44cce0 <_obstack_memory_used@@Base+0x3280>  // b.pmore
  44cd1c:	b	44ccec <_obstack_memory_used@@Base+0x328c>
  44cd20:	ldr	x0, [x19]
  44cd24:	bl	402910 <free@plt>
  44cd28:	stp	xzr, xzr, [x19]
  44cd2c:	mov	w0, #0x1                   	// #1
  44cd30:	str	xzr, [x19, #16]
  44cd34:	str	w0, [x19, #24]
  44cd38:	b	44ccc4 <_obstack_memory_used@@Base+0x3264>
  44cd3c:	nop
  44cd40:	stp	x29, x30, [sp, #-112]!
  44cd44:	mov	x29, sp
  44cd48:	ldr	x2, [x0, #24]
  44cd4c:	stp	x19, x20, [sp, #16]
  44cd50:	mov	x19, x0
  44cd54:	str	xzr, [sp, #104]
  44cd58:	ldrb	w3, [x2]
  44cd5c:	cmp	w3, w1, uxtb
  44cd60:	b.eq	44d460 <_obstack_memory_used@@Base+0x3a00>  // b.none
  44cd64:	stp	x21, x22, [sp, #32]
  44cd68:	add	x21, sp, #0x68
  44cd6c:	mov	w22, #0x1                   	// #1
  44cd70:	stp	x23, x24, [sp, #48]
  44cd74:	and	w23, w1, #0xff
  44cd78:	mov	w24, #0x6d                  	// #109
  44cd7c:	stp	x25, x26, [sp, #64]
  44cd80:	ldr	w25, [x19, #76]
  44cd84:	str	w22, [x19, #76]
  44cd88:	ldrb	w0, [x2]
  44cd8c:	cmp	w0, #0x4c
  44cd90:	b.eq	44cf60 <_obstack_memory_used@@Base+0x3500>  // b.none
  44cd94:	cmp	w0, #0x54
  44cd98:	b.eq	44cff0 <_obstack_memory_used@@Base+0x3590>  // b.none
  44cd9c:	cmp	w0, #0x73
  44cda0:	b.eq	44cf20 <_obstack_memory_used@@Base+0x34c0>  // b.none
  44cda4:	cmp	w0, #0x66
  44cda8:	b.ne	44ce44 <_obstack_memory_used@@Base+0x33e4>  // b.any
  44cdac:	ldrb	w0, [x2, #1]
  44cdb0:	cmp	w0, #0x70
  44cdb4:	b.eq	44d000 <_obstack_memory_used@@Base+0x35a0>  // b.none
  44cdb8:	mov	x0, x19
  44cdbc:	bl	44f760 <_obstack_memory_used@@Base+0x5d00>
  44cdc0:	mov	x20, x0
  44cdc4:	cbz	x0, 44ce24 <_obstack_memory_used@@Base+0x33c4>
  44cdc8:	ldr	w0, [x0]
  44cdcc:	cmp	w0, #0x32
  44cdd0:	b.eq	44d068 <_obstack_memory_used@@Base+0x3608>  // b.none
  44cdd4:	cmp	w0, #0x34
  44cdd8:	b.eq	44d480 <_obstack_memory_used@@Base+0x3a20>  // b.none
  44cddc:	b.hi	44ce20 <_obstack_memory_used@@Base+0x33c0>  // b.pmore
  44cde0:	cmp	w0, #0x33
  44cde4:	b.ne	44ce20 <_obstack_memory_used@@Base+0x33c0>  // b.any
  44cde8:	ldr	w0, [x20, #8]
  44cdec:	cmp	w0, #0x2
  44cdf0:	b.eq	44ce20 <_obstack_memory_used@@Base+0x33c0>  // b.none
  44cdf4:	b.gt	44ce20 <_obstack_memory_used@@Base+0x33c0>
  44cdf8:	cbnz	w0, 44d230 <_obstack_memory_used@@Base+0x37d0>
  44cdfc:	mov	x2, x20
  44ce00:	mov	x0, x19
  44ce04:	mov	x3, #0x0                   	// #0
  44ce08:	mov	w1, #0x36                  	// #54
  44ce0c:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44ce10:	mov	x20, x0
  44ce14:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44ce18:	ldr	x27, [sp, #80]
  44ce1c:	nop
  44ce20:	mov	x20, #0x0                   	// #0
  44ce24:	str	w25, [x19, #76]
  44ce28:	mov	x0, x20
  44ce2c:	ldp	x19, x20, [sp, #16]
  44ce30:	ldp	x21, x22, [sp, #32]
  44ce34:	ldp	x23, x24, [sp, #48]
  44ce38:	ldp	x25, x26, [sp, #64]
  44ce3c:	ldp	x29, x30, [sp], #112
  44ce40:	ret
  44ce44:	sub	w1, w0, #0x30
  44ce48:	and	w1, w1, #0xff
  44ce4c:	cmp	w1, #0x9
  44ce50:	b.hi	44cf70 <_obstack_memory_used@@Base+0x3510>  // b.pmore
  44ce54:	mov	x0, x19
  44ce58:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44ce5c:	mov	x20, x0
  44ce60:	cbz	x0, 44ce24 <_obstack_memory_used@@Base+0x33c4>
  44ce64:	ldr	x0, [x19, #24]
  44ce68:	ldrb	w1, [x0]
  44ce6c:	cmp	w1, #0x49
  44ce70:	b.eq	44ced0 <_obstack_memory_used@@Base+0x3470>  // b.none
  44ce74:	str	w25, [x19, #76]
  44ce78:	mov	x2, x20
  44ce7c:	mov	x0, x19
  44ce80:	mov	x3, #0x0                   	// #0
  44ce84:	mov	w1, #0x2e                  	// #46
  44ce88:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44ce8c:	str	x0, [x21]
  44ce90:	cbz	x0, 44cf00 <_obstack_memory_used@@Base+0x34a0>
  44ce94:	ldr	x2, [x19, #24]
  44ce98:	add	x21, x0, #0x10
  44ce9c:	ldrb	w0, [x2]
  44cea0:	cmp	w0, w23
  44cea4:	b.ne	44cd80 <_obstack_memory_used@@Base+0x3320>  // b.any
  44cea8:	ldr	x20, [sp, #104]
  44ceac:	add	x2, x2, #0x1
  44ceb0:	str	x2, [x19, #24]
  44ceb4:	mov	x0, x20
  44ceb8:	ldp	x19, x20, [sp, #16]
  44cebc:	ldp	x21, x22, [sp, #32]
  44cec0:	ldp	x23, x24, [sp, #48]
  44cec4:	ldp	x25, x26, [sp, #64]
  44cec8:	ldp	x29, x30, [sp], #112
  44cecc:	ret
  44ced0:	add	x0, x0, #0x1
  44ced4:	str	x0, [x19, #24]
  44ced8:	mov	x0, x19
  44cedc:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44cee0:	mov	x3, x0
  44cee4:	mov	x2, x20
  44cee8:	mov	x0, x19
  44ceec:	mov	w1, #0x4                   	// #4
  44cef0:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44cef4:	mov	x20, x0
  44cef8:	str	w25, [x19, #76]
  44cefc:	cbnz	x20, 44ce78 <_obstack_memory_used@@Base+0x3418>
  44cf00:	mov	x20, #0x0                   	// #0
  44cf04:	mov	x0, x20
  44cf08:	ldp	x19, x20, [sp, #16]
  44cf0c:	ldp	x21, x22, [sp, #32]
  44cf10:	ldp	x23, x24, [sp, #48]
  44cf14:	ldp	x25, x26, [sp, #64]
  44cf18:	ldp	x29, x30, [sp], #112
  44cf1c:	ret
  44cf20:	ldrb	w0, [x2, #1]
  44cf24:	cmp	w0, #0x72
  44cf28:	b.eq	44d1b0 <_obstack_memory_used@@Base+0x3750>  // b.none
  44cf2c:	cmp	w0, #0x70
  44cf30:	b.ne	44cdb8 <_obstack_memory_used@@Base+0x3358>  // b.any
  44cf34:	add	x2, x2, #0x2
  44cf38:	str	x2, [x19, #24]
  44cf3c:	mov	x0, x19
  44cf40:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44cf44:	mov	x2, x0
  44cf48:	mov	x3, #0x0                   	// #0
  44cf4c:	mov	x0, x19
  44cf50:	mov	w1, #0x4b                  	// #75
  44cf54:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44cf58:	mov	x20, x0
  44cf5c:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44cf60:	mov	x0, x19
  44cf64:	bl	450308 <_obstack_memory_used@@Base+0x68a8>
  44cf68:	mov	x20, x0
  44cf6c:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44cf70:	cmp	w0, #0x6f
  44cf74:	b.ne	44cf90 <_obstack_memory_used@@Base+0x3530>  // b.any
  44cf78:	ldrb	w0, [x2, #1]
  44cf7c:	cmp	w0, #0x6e
  44cf80:	b.ne	44cdb8 <_obstack_memory_used@@Base+0x3358>  // b.any
  44cf84:	add	x2, x2, #0x2
  44cf88:	str	x2, [x19, #24]
  44cf8c:	b	44ce54 <_obstack_memory_used@@Base+0x33f4>
  44cf90:	cmp	w0, #0x69
  44cf94:	mov	w1, #0x74                  	// #116
  44cf98:	ccmp	w0, w1, #0x4, ne  // ne = any
  44cf9c:	b.ne	44cdb8 <_obstack_memory_used@@Base+0x3358>  // b.any
  44cfa0:	ldrb	w1, [x2, #1]
  44cfa4:	cmp	w1, #0x6c
  44cfa8:	b.ne	44cdb8 <_obstack_memory_used@@Base+0x3358>  // b.any
  44cfac:	add	x1, x2, #0x2
  44cfb0:	str	x1, [x19, #24]
  44cfb4:	cmp	w0, #0x74
  44cfb8:	mov	x20, #0x0                   	// #0
  44cfbc:	b.eq	44d300 <_obstack_memory_used@@Base+0x38a0>  // b.none
  44cfc0:	ldrb	w0, [x1, #1]
  44cfc4:	cbz	w0, 44ce20 <_obstack_memory_used@@Base+0x33c0>
  44cfc8:	mov	w1, #0x45                  	// #69
  44cfcc:	mov	x0, x19
  44cfd0:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44cfd4:	mov	x3, x0
  44cfd8:	mov	x2, x20
  44cfdc:	mov	x0, x19
  44cfe0:	mov	w1, #0x31                  	// #49
  44cfe4:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44cfe8:	mov	x20, x0
  44cfec:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44cff0:	mov	x0, x19
  44cff4:	bl	44c488 <_obstack_memory_used@@Base+0x2a28>
  44cff8:	mov	x20, x0
  44cffc:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44d000:	add	x0, x2, #0x2
  44d004:	str	x0, [x19, #24]
  44d008:	ldrb	w0, [x2, #2]
  44d00c:	cmp	w0, #0x54
  44d010:	b.eq	44d1a0 <_obstack_memory_used@@Base+0x3740>  // b.none
  44d014:	mov	x0, x19
  44d018:	bl	44c410 <_obstack_memory_used@@Base+0x29b0>
  44d01c:	mvn	x1, x0
  44d020:	tst	x1, #0x7fffffff
  44d024:	b.eq	44ce20 <_obstack_memory_used@@Base+0x33c0>  // b.none
  44d028:	add	w0, w0, #0x1
  44d02c:	ldp	w1, w2, [x19, #40]
  44d030:	cmp	w1, w2
  44d034:	b.ge	44ce20 <_obstack_memory_used@@Base+0x33c0>  // b.tcont
  44d038:	mov	w3, #0x18                  	// #24
  44d03c:	add	w4, w1, #0x1
  44d040:	ldr	x2, [x19, #32]
  44d044:	smull	x1, w1, w3
  44d048:	mov	w3, #0x6                   	// #6
  44d04c:	sxtw	x0, w0
  44d050:	add	x20, x2, x1
  44d054:	str	wzr, [x20, #4]
  44d058:	str	w4, [x19, #40]
  44d05c:	str	w3, [x2, x1]
  44d060:	str	x0, [x20, #8]
  44d064:	b	44ce74 <_obstack_memory_used@@Base+0x3414>
  44d068:	ldr	x2, [x20, #8]
  44d06c:	ldr	w0, [x19, #72]
  44d070:	ldr	w1, [x2, #16]
  44d074:	ldr	x26, [x2]
  44d078:	sub	w1, w1, #0x2
  44d07c:	add	w0, w0, w1
  44d080:	str	w0, [x19, #72]
  44d084:	ldrb	w1, [x26]
  44d088:	cmp	w1, #0x73
  44d08c:	b.eq	44d17c <_obstack_memory_used@@Base+0x371c>  // b.none
  44d090:	str	x27, [sp, #80]
  44d094:	ldr	w27, [x2, #20]
  44d098:	cmp	w27, #0x1
  44d09c:	b.eq	44d248 <_obstack_memory_used@@Base+0x37e8>  // b.none
  44d0a0:	b.le	44d224 <_obstack_memory_used@@Base+0x37c4>
  44d0a4:	cmp	w27, #0x2
  44d0a8:	b.eq	44d368 <_obstack_memory_used@@Base+0x3908>  // b.none
  44d0ac:	cmp	w27, #0x3
  44d0b0:	b.ne	44ce18 <_obstack_memory_used@@Base+0x33b8>  // b.any
  44d0b4:	cmp	w1, #0x71
  44d0b8:	b.eq	44d31c <_obstack_memory_used@@Base+0x38bc>  // b.none
  44d0bc:	ldrb	w0, [x26]
  44d0c0:	cmp	w0, #0x66
  44d0c4:	b.eq	44d4ec <_obstack_memory_used@@Base+0x3a8c>  // b.none
  44d0c8:	cmp	w0, #0x6e
  44d0cc:	b.ne	44d358 <_obstack_memory_used@@Base+0x38f8>  // b.any
  44d0d0:	ldrb	w0, [x26, #1]
  44d0d4:	mov	w1, #0x61                  	// #97
  44d0d8:	cmp	w0, #0x77
  44d0dc:	ccmp	w0, w1, #0x4, ne  // ne = any
  44d0e0:	b.ne	44d358 <_obstack_memory_used@@Base+0x38f8>  // b.any
  44d0e4:	mov	w1, #0x5f                  	// #95
  44d0e8:	mov	x0, x19
  44d0ec:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44d0f0:	mov	x26, x0
  44d0f4:	mov	x0, x19
  44d0f8:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d0fc:	ldr	x1, [x19, #24]
  44d100:	mov	x27, x0
  44d104:	ldrb	w0, [x1]
  44d108:	cmp	w0, #0x45
  44d10c:	b.eq	44d54c <_obstack_memory_used@@Base+0x3aec>  // b.none
  44d110:	cmp	w0, #0x70
  44d114:	b.eq	44d524 <_obstack_memory_used@@Base+0x3ac4>  // b.none
  44d118:	cmp	w0, #0x69
  44d11c:	b.ne	44d358 <_obstack_memory_used@@Base+0x38f8>  // b.any
  44d120:	ldrb	w0, [x1, #1]
  44d124:	cmp	w0, #0x6c
  44d128:	b.ne	44d358 <_obstack_memory_used@@Base+0x38f8>  // b.any
  44d12c:	mov	x0, x19
  44d130:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d134:	mov	x3, x0
  44d138:	mov	x2, x27
  44d13c:	mov	w1, #0x3c                  	// #60
  44d140:	mov	x0, x19
  44d144:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d148:	mov	x2, x26
  44d14c:	mov	x3, x0
  44d150:	mov	w1, #0x3b                  	// #59
  44d154:	mov	x0, x19
  44d158:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d15c:	mov	x3, x0
  44d160:	mov	x2, x20
  44d164:	mov	x0, x19
  44d168:	mov	w1, #0x3a                  	// #58
  44d16c:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d170:	mov	x20, x0
  44d174:	ldr	x27, [sp, #80]
  44d178:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44d17c:	ldrb	w0, [x26, #1]
  44d180:	cmp	w0, #0x74
  44d184:	b.ne	44d090 <_obstack_memory_used@@Base+0x3630>  // b.any
  44d188:	ldrb	w0, [x26, #2]
  44d18c:	cbnz	w0, 44d090 <_obstack_memory_used@@Base+0x3630>
  44d190:	mov	x0, x19
  44d194:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d198:	mov	x3, x0
  44d19c:	b	44d28c <_obstack_memory_used@@Base+0x382c>
  44d1a0:	add	x2, x2, #0x3
  44d1a4:	mov	w0, #0x0                   	// #0
  44d1a8:	str	x2, [x19, #24]
  44d1ac:	b	44d02c <_obstack_memory_used@@Base+0x35cc>
  44d1b0:	add	x2, x2, #0x2
  44d1b4:	str	x2, [x19, #24]
  44d1b8:	mov	x0, x19
  44d1bc:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d1c0:	mov	x20, x0
  44d1c4:	mov	x0, x19
  44d1c8:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44d1cc:	ldr	x1, [x19, #24]
  44d1d0:	mov	x26, x0
  44d1d4:	mov	x3, x26
  44d1d8:	ldrb	w0, [x1]
  44d1dc:	cmp	w0, #0x49
  44d1e0:	b.ne	44d20c <_obstack_memory_used@@Base+0x37ac>  // b.any
  44d1e4:	add	x1, x1, #0x1
  44d1e8:	str	x1, [x19, #24]
  44d1ec:	mov	x0, x19
  44d1f0:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44d1f4:	mov	x3, x0
  44d1f8:	mov	x2, x26
  44d1fc:	mov	x0, x19
  44d200:	mov	w1, #0x4                   	// #4
  44d204:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d208:	mov	x3, x0
  44d20c:	mov	x2, x20
  44d210:	mov	x0, x19
  44d214:	mov	w1, #0x1                   	// #1
  44d218:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d21c:	mov	x20, x0
  44d220:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44d224:	cbnz	w27, 44ce18 <_obstack_memory_used@@Base+0x33b8>
  44d228:	ldr	x27, [sp, #80]
  44d22c:	b	44cdfc <_obstack_memory_used@@Base+0x339c>
  44d230:	cmp	w0, #0x1
  44d234:	b.ne	44ce20 <_obstack_memory_used@@Base+0x33c0>  // b.any
  44d238:	mov	x0, x19
  44d23c:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d240:	mov	x3, x0
  44d244:	b	44d28c <_obstack_memory_used@@Base+0x382c>
  44d248:	ldrb	w0, [x26]
  44d24c:	cmp	w0, #0x70
  44d250:	ccmp	w0, w24, #0x4, ne  // ne = any
  44d254:	b.eq	44d2d0 <_obstack_memory_used@@Base+0x3870>  // b.none
  44d258:	mov	w27, #0x0                   	// #0
  44d25c:	cmp	w1, #0x73
  44d260:	b.ne	44d2a4 <_obstack_memory_used@@Base+0x3844>  // b.any
  44d264:	ldrb	w0, [x26, #1]
  44d268:	cmp	w0, #0x50
  44d26c:	b.ne	44d2a4 <_obstack_memory_used@@Base+0x3844>  // b.any
  44d270:	ldrb	w0, [x26, #2]
  44d274:	cbnz	w0, 44d2a4 <_obstack_memory_used@@Base+0x3844>
  44d278:	mov	x0, x19
  44d27c:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44d280:	mov	x3, x0
  44d284:	cbnz	w27, 44d2b4 <_obstack_memory_used@@Base+0x3854>
  44d288:	ldr	x27, [sp, #80]
  44d28c:	mov	x2, x20
  44d290:	mov	x0, x19
  44d294:	mov	w1, #0x37                  	// #55
  44d298:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d29c:	mov	x20, x0
  44d2a0:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44d2a4:	mov	x0, x19
  44d2a8:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d2ac:	mov	x3, x0
  44d2b0:	cbz	w27, 44d288 <_obstack_memory_used@@Base+0x3828>
  44d2b4:	mov	x2, x3
  44d2b8:	mov	x0, x19
  44d2bc:	mov	w1, #0x39                  	// #57
  44d2c0:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d2c4:	mov	x3, x0
  44d2c8:	ldr	x27, [sp, #80]
  44d2cc:	b	44d28c <_obstack_memory_used@@Base+0x382c>
  44d2d0:	ldrb	w2, [x26, #1]
  44d2d4:	cmp	w2, w0
  44d2d8:	b.ne	44d258 <_obstack_memory_used@@Base+0x37f8>  // b.any
  44d2dc:	ldr	x0, [x19, #24]
  44d2e0:	ldrb	w2, [x0]
  44d2e4:	cmp	w2, #0x5f
  44d2e8:	b.ne	44d25c <_obstack_memory_used@@Base+0x37fc>  // b.any
  44d2ec:	add	x0, x0, #0x1
  44d2f0:	str	x0, [x19, #24]
  44d2f4:	mov	w27, #0x0                   	// #0
  44d2f8:	ldrb	w1, [x26]
  44d2fc:	b	44d25c <_obstack_memory_used@@Base+0x37fc>
  44d300:	mov	x0, x19
  44d304:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d308:	ldr	x1, [x19, #24]
  44d30c:	mov	x20, x0
  44d310:	ldrb	w0, [x1, #1]
  44d314:	cbnz	w0, 44cfc8 <_obstack_memory_used@@Base+0x3568>
  44d318:	b	44ce20 <_obstack_memory_used@@Base+0x33c0>
  44d31c:	ldrb	w0, [x26, #1]
  44d320:	cmp	w0, #0x75
  44d324:	b.ne	44d0bc <_obstack_memory_used@@Base+0x365c>  // b.any
  44d328:	ldrb	w0, [x26, #2]
  44d32c:	cbnz	w0, 44d0bc <_obstack_memory_used@@Base+0x365c>
  44d330:	mov	x0, x19
  44d334:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d338:	mov	x26, x0
  44d33c:	mov	x0, x19
  44d340:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d344:	mov	x27, x0
  44d348:	mov	x0, x19
  44d34c:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d350:	mov	x3, x0
  44d354:	cbnz	x0, 44d138 <_obstack_memory_used@@Base+0x36d8>
  44d358:	mov	x20, #0x0                   	// #0
  44d35c:	ldr	x27, [sp, #80]
  44d360:	str	w25, [x19, #76]
  44d364:	b	44ce28 <_obstack_memory_used@@Base+0x33c8>
  44d368:	ldr	x0, [x20, #8]
  44d36c:	ldr	x0, [x0]
  44d370:	ldrb	w1, [x0, #1]
  44d374:	cmp	w1, #0x63
  44d378:	b.eq	44d4ac <_obstack_memory_used@@Base+0x3a4c>  // b.none
  44d37c:	ldrb	w0, [x26]
  44d380:	cmp	w0, #0x66
  44d384:	b.eq	44d4dc <_obstack_memory_used@@Base+0x3a7c>  // b.none
  44d388:	mov	x0, x19
  44d38c:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d390:	mov	x27, x0
  44d394:	ldrb	w1, [x26]
  44d398:	cmp	w1, #0x63
  44d39c:	b.ne	44d3c8 <_obstack_memory_used@@Base+0x3968>  // b.any
  44d3a0:	ldrb	w0, [x26, #1]
  44d3a4:	cmp	w0, #0x6c
  44d3a8:	b.ne	44d3c8 <_obstack_memory_used@@Base+0x3968>  // b.any
  44d3ac:	ldrb	w0, [x26, #2]
  44d3b0:	cbnz	w0, 44d3c8 <_obstack_memory_used@@Base+0x3968>
  44d3b4:	mov	x0, x19
  44d3b8:	mov	w1, #0x45                  	// #69
  44d3bc:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44d3c0:	mov	x26, x0
  44d3c4:	b	44d400 <_obstack_memory_used@@Base+0x39a0>
  44d3c8:	cmp	w1, #0x64
  44d3cc:	b.ne	44d434 <_obstack_memory_used@@Base+0x39d4>  // b.any
  44d3d0:	ldrb	w0, [x26, #1]
  44d3d4:	cmp	w0, #0x74
  44d3d8:	b.ne	44d434 <_obstack_memory_used@@Base+0x39d4>  // b.any
  44d3dc:	ldrb	w0, [x26, #2]
  44d3e0:	cbnz	w0, 44d434 <_obstack_memory_used@@Base+0x39d4>
  44d3e4:	mov	x0, x19
  44d3e8:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44d3ec:	ldr	x1, [x19, #24]
  44d3f0:	mov	x26, x0
  44d3f4:	ldrb	w0, [x1]
  44d3f8:	cmp	w0, #0x49
  44d3fc:	b.eq	44d4f8 <_obstack_memory_used@@Base+0x3a98>  // b.none
  44d400:	mov	x2, x27
  44d404:	mov	x3, x26
  44d408:	mov	w1, #0x39                  	// #57
  44d40c:	mov	x0, x19
  44d410:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d414:	mov	x3, x0
  44d418:	mov	x2, x20
  44d41c:	mov	x0, x19
  44d420:	mov	w1, #0x38                  	// #56
  44d424:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d428:	mov	x20, x0
  44d42c:	ldr	x27, [sp, #80]
  44d430:	b	44cef8 <_obstack_memory_used@@Base+0x3498>
  44d434:	cmp	w1, #0x70
  44d438:	b.ne	44d450 <_obstack_memory_used@@Base+0x39f0>  // b.any
  44d43c:	ldrb	w0, [x26, #1]
  44d440:	cmp	w0, #0x74
  44d444:	b.ne	44d450 <_obstack_memory_used@@Base+0x39f0>  // b.any
  44d448:	ldrb	w0, [x26, #2]
  44d44c:	cbz	w0, 44d3e4 <_obstack_memory_used@@Base+0x3984>
  44d450:	mov	x0, x19
  44d454:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d458:	mov	x26, x0
  44d45c:	b	44d400 <_obstack_memory_used@@Base+0x39a0>
  44d460:	add	x2, x2, #0x1
  44d464:	str	x2, [x0, #24]
  44d468:	ldp	x19, x20, [sp, #16]
  44d46c:	mov	x3, #0x0                   	// #0
  44d470:	ldp	x29, x30, [sp], #112
  44d474:	mov	w1, #0x2e                  	// #46
  44d478:	mov	x2, #0x0                   	// #0
  44d47c:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d480:	ldr	x0, [x19, #24]
  44d484:	ldrb	w1, [x0]
  44d488:	cmp	w1, #0x5f
  44d48c:	b.ne	44d238 <_obstack_memory_used@@Base+0x37d8>  // b.any
  44d490:	add	x0, x0, #0x1
  44d494:	str	x0, [x19, #24]
  44d498:	mov	w1, #0x45                  	// #69
  44d49c:	mov	x0, x19
  44d4a0:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44d4a4:	mov	x3, x0
  44d4a8:	b	44d28c <_obstack_memory_used@@Base+0x382c>
  44d4ac:	ldrb	w0, [x0]
  44d4b0:	sub	w1, w0, #0x72
  44d4b4:	sub	w0, w0, #0x63
  44d4b8:	and	w1, w1, #0xff
  44d4bc:	and	w0, w0, #0xff
  44d4c0:	cmp	w1, #0x1
  44d4c4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  44d4c8:	b.hi	44d37c <_obstack_memory_used@@Base+0x391c>  // b.pmore
  44d4cc:	mov	x0, x19
  44d4d0:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d4d4:	mov	x27, x0
  44d4d8:	b	44d394 <_obstack_memory_used@@Base+0x3934>
  44d4dc:	mov	x0, x19
  44d4e0:	bl	44f760 <_obstack_memory_used@@Base+0x5d00>
  44d4e4:	mov	x27, x0
  44d4e8:	b	44d394 <_obstack_memory_used@@Base+0x3934>
  44d4ec:	mov	x0, x19
  44d4f0:	bl	44f760 <_obstack_memory_used@@Base+0x5d00>
  44d4f4:	b	44d338 <_obstack_memory_used@@Base+0x38d8>
  44d4f8:	add	x1, x1, #0x1
  44d4fc:	str	x1, [x19, #24]
  44d500:	mov	x0, x19
  44d504:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44d508:	mov	x3, x0
  44d50c:	mov	x2, x26
  44d510:	mov	x0, x19
  44d514:	mov	w1, #0x4                   	// #4
  44d518:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d51c:	mov	x26, x0
  44d520:	b	44d400 <_obstack_memory_used@@Base+0x39a0>
  44d524:	ldrb	w0, [x1, #1]
  44d528:	cmp	w0, #0x69
  44d52c:	b.ne	44d358 <_obstack_memory_used@@Base+0x38f8>  // b.any
  44d530:	add	x1, x1, #0x2
  44d534:	str	x1, [x19, #24]
  44d538:	mov	x0, x19
  44d53c:	mov	w1, #0x45                  	// #69
  44d540:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44d544:	mov	x3, x0
  44d548:	b	44d138 <_obstack_memory_used@@Base+0x36d8>
  44d54c:	add	x1, x1, #0x1
  44d550:	mov	x3, #0x0                   	// #0
  44d554:	str	x1, [x19, #24]
  44d558:	b	44d138 <_obstack_memory_used@@Base+0x36d8>
  44d55c:	nop
  44d560:	ldr	x2, [x0, #24]
  44d564:	ldrb	w1, [x2]
  44d568:	cmp	w1, #0x4c
  44d56c:	b.eq	44d6fc <_obstack_memory_used@@Base+0x3c9c>  // b.none
  44d570:	cmp	w1, #0x54
  44d574:	b.eq	44d780 <_obstack_memory_used@@Base+0x3d20>  // b.none
  44d578:	stp	x29, x30, [sp, #-48]!
  44d57c:	cmp	w1, #0x73
  44d580:	mov	x29, sp
  44d584:	stp	x19, x20, [sp, #16]
  44d588:	mov	x19, x0
  44d58c:	b.eq	44d644 <_obstack_memory_used@@Base+0x3be4>  // b.none
  44d590:	cmp	w1, #0x66
  44d594:	b.eq	44d5d8 <_obstack_memory_used@@Base+0x3b78>  // b.none
  44d598:	sub	w3, w1, #0x30
  44d59c:	and	w3, w3, #0xff
  44d5a0:	cmp	w3, #0x9
  44d5a4:	b.hi	44d700 <_obstack_memory_used@@Base+0x3ca0>  // b.pmore
  44d5a8:	mov	x0, x19
  44d5ac:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44d5b0:	mov	x20, x0
  44d5b4:	cbz	x0, 44d6e8 <_obstack_memory_used@@Base+0x3c88>
  44d5b8:	ldr	x0, [x19, #24]
  44d5bc:	ldrb	w1, [x0]
  44d5c0:	cmp	w1, #0x49
  44d5c4:	b.eq	44d858 <_obstack_memory_used@@Base+0x3df8>  // b.none
  44d5c8:	mov	x0, x20
  44d5cc:	ldp	x19, x20, [sp, #16]
  44d5d0:	ldp	x29, x30, [sp], #48
  44d5d4:	ret
  44d5d8:	ldrb	w1, [x2, #1]
  44d5dc:	cmp	w1, #0x70
  44d5e0:	b.eq	44d680 <_obstack_memory_used@@Base+0x3c20>  // b.none
  44d5e4:	mov	x0, x19
  44d5e8:	bl	44f760 <_obstack_memory_used@@Base+0x5d00>
  44d5ec:	mov	x20, x0
  44d5f0:	cbz	x0, 44d6e8 <_obstack_memory_used@@Base+0x3c88>
  44d5f4:	ldr	w0, [x0]
  44d5f8:	cmp	w0, #0x32
  44d5fc:	b.eq	44d784 <_obstack_memory_used@@Base+0x3d24>  // b.none
  44d600:	cmp	w0, #0x34
  44d604:	b.eq	44dbb0 <_obstack_memory_used@@Base+0x4150>  // b.none
  44d608:	b.hi	44d6e8 <_obstack_memory_used@@Base+0x3c88>  // b.pmore
  44d60c:	cmp	w0, #0x33
  44d610:	b.ne	44d6e8 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44d614:	ldr	w0, [x20, #8]
  44d618:	cmp	w0, #0x2
  44d61c:	b.eq	44d6e8 <_obstack_memory_used@@Base+0x3c88>  // b.none
  44d620:	b.gt	44d6e8 <_obstack_memory_used@@Base+0x3c88>
  44d624:	cbnz	w0, 44d94c <_obstack_memory_used@@Base+0x3eec>
  44d628:	mov	x2, x20
  44d62c:	mov	x0, x19
  44d630:	ldp	x19, x20, [sp, #16]
  44d634:	mov	x3, #0x0                   	// #0
  44d638:	ldp	x29, x30, [sp], #48
  44d63c:	mov	w1, #0x36                  	// #54
  44d640:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d644:	ldrb	w1, [x2, #1]
  44d648:	cmp	w1, #0x72
  44d64c:	b.eq	44d884 <_obstack_memory_used@@Base+0x3e24>  // b.none
  44d650:	cmp	w1, #0x70
  44d654:	b.ne	44d5e4 <_obstack_memory_used@@Base+0x3b84>  // b.any
  44d658:	add	x2, x2, #0x2
  44d65c:	str	x2, [x0, #24]
  44d660:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d664:	mov	x2, x0
  44d668:	mov	x0, x19
  44d66c:	mov	x3, #0x0                   	// #0
  44d670:	ldp	x19, x20, [sp, #16]
  44d674:	mov	w1, #0x4b                  	// #75
  44d678:	ldp	x29, x30, [sp], #48
  44d67c:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d680:	add	x1, x2, #0x2
  44d684:	str	x1, [x0, #24]
  44d688:	ldrb	w1, [x2, #2]
  44d68c:	cmp	w1, #0x54
  44d690:	b.eq	44da10 <_obstack_memory_used@@Base+0x3fb0>  // b.none
  44d694:	bl	44c410 <_obstack_memory_used@@Base+0x29b0>
  44d698:	mvn	x1, x0
  44d69c:	add	w0, w0, #0x1
  44d6a0:	tst	x1, #0x7fffffff
  44d6a4:	b.eq	44d6e8 <_obstack_memory_used@@Base+0x3c88>  // b.none
  44d6a8:	ldp	w1, w2, [x19, #40]
  44d6ac:	cmp	w1, w2
  44d6b0:	b.ge	44d6e8 <_obstack_memory_used@@Base+0x3c88>  // b.tcont
  44d6b4:	mov	w3, #0x18                  	// #24
  44d6b8:	add	w4, w1, #0x1
  44d6bc:	ldr	x2, [x19, #32]
  44d6c0:	smull	x1, w1, w3
  44d6c4:	mov	w3, #0x6                   	// #6
  44d6c8:	sxtw	x0, w0
  44d6cc:	add	x20, x2, x1
  44d6d0:	str	wzr, [x20, #4]
  44d6d4:	str	w4, [x19, #40]
  44d6d8:	str	w3, [x2, x1]
  44d6dc:	str	x0, [x20, #8]
  44d6e0:	b	44d5c8 <_obstack_memory_used@@Base+0x3b68>
  44d6e4:	ldp	x21, x22, [sp, #32]
  44d6e8:	mov	x20, #0x0                   	// #0
  44d6ec:	mov	x0, x20
  44d6f0:	ldp	x19, x20, [sp, #16]
  44d6f4:	ldp	x29, x30, [sp], #48
  44d6f8:	ret
  44d6fc:	b	450308 <_obstack_memory_used@@Base+0x68a8>
  44d700:	cmp	w1, #0x6f
  44d704:	b.ne	44d720 <_obstack_memory_used@@Base+0x3cc0>  // b.any
  44d708:	ldrb	w0, [x2, #1]
  44d70c:	cmp	w0, #0x6e
  44d710:	b.ne	44d5e4 <_obstack_memory_used@@Base+0x3b84>  // b.any
  44d714:	add	x2, x2, #0x2
  44d718:	str	x2, [x19, #24]
  44d71c:	b	44d5a8 <_obstack_memory_used@@Base+0x3b48>
  44d720:	cmp	w1, #0x69
  44d724:	mov	w3, #0x74                  	// #116
  44d728:	ccmp	w1, w3, #0x4, ne  // ne = any
  44d72c:	b.ne	44d5e4 <_obstack_memory_used@@Base+0x3b84>  // b.any
  44d730:	ldrb	w3, [x2, #1]
  44d734:	cmp	w3, #0x6c
  44d738:	b.ne	44d5e4 <_obstack_memory_used@@Base+0x3b84>  // b.any
  44d73c:	add	x3, x2, #0x2
  44d740:	str	x3, [x0, #24]
  44d744:	cmp	w1, #0x74
  44d748:	mov	x20, #0x0                   	// #0
  44d74c:	b.eq	44d93c <_obstack_memory_used@@Base+0x3edc>  // b.none
  44d750:	ldrb	w0, [x3, #1]
  44d754:	cbz	w0, 44d6e8 <_obstack_memory_used@@Base+0x3c88>
  44d758:	mov	x0, x19
  44d75c:	mov	w1, #0x45                  	// #69
  44d760:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44d764:	mov	x3, x0
  44d768:	mov	x2, x20
  44d76c:	mov	x0, x19
  44d770:	ldp	x19, x20, [sp, #16]
  44d774:	mov	w1, #0x31                  	// #49
  44d778:	ldp	x29, x30, [sp], #48
  44d77c:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d780:	b	44c488 <_obstack_memory_used@@Base+0x2a28>
  44d784:	ldr	x2, [x20, #8]
  44d788:	stp	x21, x22, [sp, #32]
  44d78c:	ldr	w0, [x19, #72]
  44d790:	ldr	w1, [x2, #16]
  44d794:	ldr	x21, [x2]
  44d798:	sub	w1, w1, #0x2
  44d79c:	add	w0, w0, w1
  44d7a0:	str	w0, [x19, #72]
  44d7a4:	ldrb	w1, [x21]
  44d7a8:	cmp	w1, #0x73
  44d7ac:	b.eq	44d8d4 <_obstack_memory_used@@Base+0x3e74>  // b.none
  44d7b0:	ldr	w22, [x2, #20]
  44d7b4:	cmp	w22, #0x1
  44d7b8:	b.eq	44d984 <_obstack_memory_used@@Base+0x3f24>  // b.none
  44d7bc:	b.le	44d978 <_obstack_memory_used@@Base+0x3f18>
  44d7c0:	cmp	w22, #0x2
  44d7c4:	b.eq	44da3c <_obstack_memory_used@@Base+0x3fdc>  // b.none
  44d7c8:	cmp	w22, #0x3
  44d7cc:	b.ne	44d6e4 <_obstack_memory_used@@Base+0x3c84>  // b.any
  44d7d0:	cmp	w1, #0x71
  44d7d4:	b.ne	44dacc <_obstack_memory_used@@Base+0x406c>  // b.any
  44d7d8:	ldrb	w0, [x21, #1]
  44d7dc:	cmp	w0, #0x75
  44d7e0:	b.ne	44dacc <_obstack_memory_used@@Base+0x406c>  // b.any
  44d7e4:	ldrb	w0, [x21, #2]
  44d7e8:	cbnz	w0, 44dacc <_obstack_memory_used@@Base+0x406c>
  44d7ec:	mov	x0, x19
  44d7f0:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d7f4:	mov	x21, x0
  44d7f8:	mov	x0, x19
  44d7fc:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d800:	mov	x22, x0
  44d804:	mov	x0, x19
  44d808:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d80c:	mov	x3, x0
  44d810:	cbz	x0, 44d6e4 <_obstack_memory_used@@Base+0x3c84>
  44d814:	mov	x2, x22
  44d818:	mov	x0, x19
  44d81c:	mov	w1, #0x3c                  	// #60
  44d820:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d824:	mov	x2, x21
  44d828:	mov	x3, x0
  44d82c:	mov	w1, #0x3b                  	// #59
  44d830:	mov	x0, x19
  44d834:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d838:	mov	x3, x0
  44d83c:	mov	x2, x20
  44d840:	mov	x0, x19
  44d844:	ldp	x19, x20, [sp, #16]
  44d848:	mov	w1, #0x3a                  	// #58
  44d84c:	ldp	x21, x22, [sp, #32]
  44d850:	ldp	x29, x30, [sp], #48
  44d854:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d858:	add	x0, x0, #0x1
  44d85c:	str	x0, [x19, #24]
  44d860:	mov	x0, x19
  44d864:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44d868:	mov	x3, x0
  44d86c:	mov	x2, x20
  44d870:	mov	x0, x19
  44d874:	ldp	x19, x20, [sp, #16]
  44d878:	mov	w1, #0x4                   	// #4
  44d87c:	ldp	x29, x30, [sp], #48
  44d880:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d884:	add	x2, x2, #0x2
  44d888:	stp	x21, x22, [sp, #32]
  44d88c:	str	x2, [x0, #24]
  44d890:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d894:	mov	x20, x0
  44d898:	mov	x0, x19
  44d89c:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44d8a0:	ldr	x1, [x19, #24]
  44d8a4:	mov	x21, x0
  44d8a8:	mov	x3, x21
  44d8ac:	ldrb	w0, [x1]
  44d8b0:	cmp	w0, #0x49
  44d8b4:	b.eq	44d910 <_obstack_memory_used@@Base+0x3eb0>  // b.none
  44d8b8:	mov	x2, x20
  44d8bc:	mov	x0, x19
  44d8c0:	ldp	x19, x20, [sp, #16]
  44d8c4:	mov	w1, #0x1                   	// #1
  44d8c8:	ldp	x21, x22, [sp, #32]
  44d8cc:	ldp	x29, x30, [sp], #48
  44d8d0:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d8d4:	ldrb	w0, [x21, #1]
  44d8d8:	cmp	w0, #0x74
  44d8dc:	b.ne	44d7b0 <_obstack_memory_used@@Base+0x3d50>  // b.any
  44d8e0:	ldrb	w0, [x21, #2]
  44d8e4:	cbnz	w0, 44d7b0 <_obstack_memory_used@@Base+0x3d50>
  44d8e8:	mov	x0, x19
  44d8ec:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d8f0:	mov	x2, x20
  44d8f4:	mov	x3, x0
  44d8f8:	mov	x0, x19
  44d8fc:	mov	w1, #0x37                  	// #55
  44d900:	ldp	x19, x20, [sp, #16]
  44d904:	ldp	x21, x22, [sp, #32]
  44d908:	ldp	x29, x30, [sp], #48
  44d90c:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d910:	add	x1, x1, #0x1
  44d914:	str	x1, [x19, #24]
  44d918:	mov	x0, x19
  44d91c:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44d920:	mov	x3, x0
  44d924:	mov	x2, x21
  44d928:	mov	x0, x19
  44d92c:	mov	w1, #0x4                   	// #4
  44d930:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d934:	mov	x3, x0
  44d938:	b	44d8b8 <_obstack_memory_used@@Base+0x3e58>
  44d93c:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44d940:	mov	x20, x0
  44d944:	ldr	x3, [x19, #24]
  44d948:	b	44d750 <_obstack_memory_used@@Base+0x3cf0>
  44d94c:	cmp	w0, #0x1
  44d950:	b.ne	44d6e8 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44d954:	mov	x0, x19
  44d958:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44d95c:	mov	x3, x0
  44d960:	mov	x2, x20
  44d964:	mov	x0, x19
  44d968:	ldp	x19, x20, [sp, #16]
  44d96c:	mov	w1, #0x37                  	// #55
  44d970:	ldp	x29, x30, [sp], #48
  44d974:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44d978:	cbnz	w22, 44d6e4 <_obstack_memory_used@@Base+0x3c84>
  44d97c:	ldp	x21, x22, [sp, #32]
  44d980:	b	44d628 <_obstack_memory_used@@Base+0x3bc8>
  44d984:	ldrb	w0, [x21]
  44d988:	mov	w2, #0x6d                  	// #109
  44d98c:	cmp	w0, #0x70
  44d990:	ccmp	w0, w2, #0x4, ne  // ne = any
  44d994:	b.ne	44d9a4 <_obstack_memory_used@@Base+0x3f44>  // b.any
  44d998:	ldrb	w2, [x21, #1]
  44d99c:	cmp	w2, w0
  44d9a0:	b.eq	44d9dc <_obstack_memory_used@@Base+0x3f7c>  // b.none
  44d9a4:	mov	w22, #0x0                   	// #0
  44d9a8:	cmp	w1, #0x73
  44d9ac:	b.ne	44da00 <_obstack_memory_used@@Base+0x3fa0>  // b.any
  44d9b0:	ldrb	w0, [x21, #1]
  44d9b4:	cmp	w0, #0x50
  44d9b8:	b.ne	44da00 <_obstack_memory_used@@Base+0x3fa0>  // b.any
  44d9bc:	ldrb	w0, [x21, #2]
  44d9c0:	cbnz	w0, 44da00 <_obstack_memory_used@@Base+0x3fa0>
  44d9c4:	mov	x0, x19
  44d9c8:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44d9cc:	mov	x3, x0
  44d9d0:	cbnz	w22, 44da20 <_obstack_memory_used@@Base+0x3fc0>
  44d9d4:	ldp	x21, x22, [sp, #32]
  44d9d8:	b	44d960 <_obstack_memory_used@@Base+0x3f00>
  44d9dc:	ldr	x0, [x19, #24]
  44d9e0:	ldrb	w2, [x0]
  44d9e4:	cmp	w2, #0x5f
  44d9e8:	b.ne	44d9a8 <_obstack_memory_used@@Base+0x3f48>  // b.any
  44d9ec:	add	x0, x0, #0x1
  44d9f0:	str	x0, [x19, #24]
  44d9f4:	mov	w22, #0x0                   	// #0
  44d9f8:	ldrb	w1, [x21]
  44d9fc:	b	44d9a8 <_obstack_memory_used@@Base+0x3f48>
  44da00:	mov	x0, x19
  44da04:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44da08:	mov	x3, x0
  44da0c:	b	44d9d0 <_obstack_memory_used@@Base+0x3f70>
  44da10:	add	x2, x2, #0x3
  44da14:	mov	w0, #0x0                   	// #0
  44da18:	str	x2, [x19, #24]
  44da1c:	b	44d6a8 <_obstack_memory_used@@Base+0x3c48>
  44da20:	mov	x2, x3
  44da24:	mov	x0, x19
  44da28:	mov	w1, #0x39                  	// #57
  44da2c:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44da30:	mov	x3, x0
  44da34:	ldp	x21, x22, [sp, #32]
  44da38:	b	44d960 <_obstack_memory_used@@Base+0x3f00>
  44da3c:	ldr	x0, [x20, #8]
  44da40:	ldr	x0, [x0]
  44da44:	ldrb	w1, [x0, #1]
  44da48:	cmp	w1, #0x63
  44da4c:	b.eq	44dbf4 <_obstack_memory_used@@Base+0x4194>  // b.none
  44da50:	ldrb	w0, [x21]
  44da54:	cmp	w0, #0x66
  44da58:	b.eq	44dc24 <_obstack_memory_used@@Base+0x41c4>  // b.none
  44da5c:	mov	x0, x19
  44da60:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44da64:	mov	x22, x0
  44da68:	ldrb	w1, [x21]
  44da6c:	cmp	w1, #0x63
  44da70:	b.ne	44db4c <_obstack_memory_used@@Base+0x40ec>  // b.any
  44da74:	ldrb	w0, [x21, #1]
  44da78:	cmp	w0, #0x6c
  44da7c:	b.ne	44db4c <_obstack_memory_used@@Base+0x40ec>  // b.any
  44da80:	ldrb	w0, [x21, #2]
  44da84:	cbnz	w0, 44db4c <_obstack_memory_used@@Base+0x40ec>
  44da88:	mov	x0, x19
  44da8c:	mov	w1, #0x45                  	// #69
  44da90:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44da94:	mov	x21, x0
  44da98:	mov	x3, x21
  44da9c:	mov	x2, x22
  44daa0:	mov	x0, x19
  44daa4:	mov	w1, #0x39                  	// #57
  44daa8:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44daac:	mov	x3, x0
  44dab0:	mov	x2, x20
  44dab4:	mov	x0, x19
  44dab8:	ldp	x19, x20, [sp, #16]
  44dabc:	mov	w1, #0x38                  	// #56
  44dac0:	ldp	x21, x22, [sp, #32]
  44dac4:	ldp	x29, x30, [sp], #48
  44dac8:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44dacc:	ldrb	w0, [x21]
  44dad0:	cmp	w0, #0x66
  44dad4:	b.eq	44dc4c <_obstack_memory_used@@Base+0x41ec>  // b.none
  44dad8:	cmp	w0, #0x6e
  44dadc:	b.ne	44d6e4 <_obstack_memory_used@@Base+0x3c84>  // b.any
  44dae0:	ldrb	w0, [x21, #1]
  44dae4:	mov	w1, #0x61                  	// #97
  44dae8:	cmp	w0, #0x77
  44daec:	ccmp	w0, w1, #0x4, ne  // ne = any
  44daf0:	b.ne	44d6e4 <_obstack_memory_used@@Base+0x3c84>  // b.any
  44daf4:	mov	w1, #0x5f                  	// #95
  44daf8:	mov	x0, x19
  44dafc:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44db00:	mov	x21, x0
  44db04:	mov	x0, x19
  44db08:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44db0c:	ldr	x1, [x19, #24]
  44db10:	mov	x22, x0
  44db14:	ldrb	w0, [x1]
  44db18:	cmp	w0, #0x45
  44db1c:	b.eq	44dc80 <_obstack_memory_used@@Base+0x4220>  // b.none
  44db20:	cmp	w0, #0x70
  44db24:	b.eq	44dc58 <_obstack_memory_used@@Base+0x41f8>  // b.none
  44db28:	cmp	w0, #0x69
  44db2c:	b.ne	44d6e4 <_obstack_memory_used@@Base+0x3c84>  // b.any
  44db30:	ldrb	w0, [x1, #1]
  44db34:	cmp	w0, #0x6c
  44db38:	b.ne	44d6e4 <_obstack_memory_used@@Base+0x3c84>  // b.any
  44db3c:	mov	x0, x19
  44db40:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44db44:	mov	x3, x0
  44db48:	b	44d814 <_obstack_memory_used@@Base+0x3db4>
  44db4c:	cmp	w1, #0x64
  44db50:	b.ne	44dbdc <_obstack_memory_used@@Base+0x417c>  // b.any
  44db54:	ldrb	w0, [x21, #1]
  44db58:	cmp	w0, #0x74
  44db5c:	b.ne	44dbdc <_obstack_memory_used@@Base+0x417c>  // b.any
  44db60:	ldrb	w0, [x21, #2]
  44db64:	cbnz	w0, 44dbdc <_obstack_memory_used@@Base+0x417c>
  44db68:	mov	x0, x19
  44db6c:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44db70:	ldr	x1, [x19, #24]
  44db74:	mov	x21, x0
  44db78:	ldrb	w0, [x1]
  44db7c:	cmp	w0, #0x49
  44db80:	b.ne	44da98 <_obstack_memory_used@@Base+0x4038>  // b.any
  44db84:	add	x1, x1, #0x1
  44db88:	str	x1, [x19, #24]
  44db8c:	mov	x0, x19
  44db90:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44db94:	mov	x3, x0
  44db98:	mov	x2, x21
  44db9c:	mov	x0, x19
  44dba0:	mov	w1, #0x4                   	// #4
  44dba4:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44dba8:	mov	x21, x0
  44dbac:	b	44da98 <_obstack_memory_used@@Base+0x4038>
  44dbb0:	ldr	x0, [x19, #24]
  44dbb4:	ldrb	w1, [x0]
  44dbb8:	cmp	w1, #0x5f
  44dbbc:	b.ne	44d954 <_obstack_memory_used@@Base+0x3ef4>  // b.any
  44dbc0:	add	x0, x0, #0x1
  44dbc4:	str	x0, [x19, #24]
  44dbc8:	mov	w1, #0x45                  	// #69
  44dbcc:	mov	x0, x19
  44dbd0:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44dbd4:	mov	x3, x0
  44dbd8:	b	44d960 <_obstack_memory_used@@Base+0x3f00>
  44dbdc:	cmp	w1, #0x70
  44dbe0:	b.eq	44dc34 <_obstack_memory_used@@Base+0x41d4>  // b.none
  44dbe4:	mov	x0, x19
  44dbe8:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44dbec:	mov	x21, x0
  44dbf0:	b	44da98 <_obstack_memory_used@@Base+0x4038>
  44dbf4:	ldrb	w0, [x0]
  44dbf8:	sub	w1, w0, #0x63
  44dbfc:	sub	w0, w0, #0x72
  44dc00:	and	w1, w1, #0xff
  44dc04:	and	w0, w0, #0xff
  44dc08:	cmp	w1, #0x1
  44dc0c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  44dc10:	b.hi	44da50 <_obstack_memory_used@@Base+0x3ff0>  // b.pmore
  44dc14:	mov	x0, x19
  44dc18:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44dc1c:	mov	x22, x0
  44dc20:	b	44da68 <_obstack_memory_used@@Base+0x4008>
  44dc24:	mov	x0, x19
  44dc28:	bl	44f760 <_obstack_memory_used@@Base+0x5d00>
  44dc2c:	mov	x22, x0
  44dc30:	b	44da68 <_obstack_memory_used@@Base+0x4008>
  44dc34:	ldrb	w0, [x21, #1]
  44dc38:	cmp	w0, #0x74
  44dc3c:	b.ne	44dbe4 <_obstack_memory_used@@Base+0x4184>  // b.any
  44dc40:	ldrb	w0, [x21, #2]
  44dc44:	cbz	w0, 44db68 <_obstack_memory_used@@Base+0x4108>
  44dc48:	b	44dbe4 <_obstack_memory_used@@Base+0x4184>
  44dc4c:	mov	x0, x19
  44dc50:	bl	44f760 <_obstack_memory_used@@Base+0x5d00>
  44dc54:	b	44d7f4 <_obstack_memory_used@@Base+0x3d94>
  44dc58:	ldrb	w0, [x1, #1]
  44dc5c:	cmp	w0, #0x69
  44dc60:	b.ne	44d6e4 <_obstack_memory_used@@Base+0x3c84>  // b.any
  44dc64:	add	x1, x1, #0x2
  44dc68:	str	x1, [x19, #24]
  44dc6c:	mov	x0, x19
  44dc70:	mov	w1, #0x45                  	// #69
  44dc74:	bl	44cd40 <_obstack_memory_used@@Base+0x32e0>
  44dc78:	mov	x3, x0
  44dc7c:	b	44d814 <_obstack_memory_used@@Base+0x3db4>
  44dc80:	add	x1, x1, #0x1
  44dc84:	mov	x3, #0x0                   	// #0
  44dc88:	str	x1, [x19, #24]
  44dc8c:	b	44d814 <_obstack_memory_used@@Base+0x3db4>
  44dc90:	ldr	x2, [x0, #24]
  44dc94:	ldrb	w1, [x2]
  44dc98:	cmp	w1, #0x4c
  44dc9c:	b.eq	44dd28 <_obstack_memory_used@@Base+0x42c8>  // b.none
  44dca0:	stp	x29, x30, [sp, #-32]!
  44dca4:	mov	x29, sp
  44dca8:	stp	x19, x20, [sp, #16]
  44dcac:	mov	x19, x0
  44dcb0:	b.hi	44dcd0 <_obstack_memory_used@@Base+0x4270>  // b.pmore
  44dcb4:	sub	w1, w1, #0x49
  44dcb8:	and	w1, w1, #0xff
  44dcbc:	cmp	w1, #0x1
  44dcc0:	b.hi	44dd18 <_obstack_memory_used@@Base+0x42b8>  // b.pmore
  44dcc4:	ldp	x19, x20, [sp, #16]
  44dcc8:	ldp	x29, x30, [sp], #32
  44dccc:	b	44de00 <_obstack_memory_used@@Base+0x43a0>
  44dcd0:	cmp	w1, #0x58
  44dcd4:	b.ne	44dd18 <_obstack_memory_used@@Base+0x42b8>  // b.any
  44dcd8:	add	x2, x2, #0x1
  44dcdc:	ldr	w20, [x0, #76]
  44dce0:	mov	w1, #0x1                   	// #1
  44dce4:	str	x2, [x0, #24]
  44dce8:	str	w1, [x0, #76]
  44dcec:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44dcf0:	str	w20, [x19, #76]
  44dcf4:	ldr	x1, [x19, #24]
  44dcf8:	ldrb	w2, [x1]
  44dcfc:	cmp	w2, #0x45
  44dd00:	b.ne	44dd2c <_obstack_memory_used@@Base+0x42cc>  // b.any
  44dd04:	add	x1, x1, #0x1
  44dd08:	str	x1, [x19, #24]
  44dd0c:	ldp	x19, x20, [sp, #16]
  44dd10:	ldp	x29, x30, [sp], #32
  44dd14:	ret
  44dd18:	mov	x0, x19
  44dd1c:	ldp	x19, x20, [sp, #16]
  44dd20:	ldp	x29, x30, [sp], #32
  44dd24:	b	44eb78 <_obstack_memory_used@@Base+0x5118>
  44dd28:	b	450308 <_obstack_memory_used@@Base+0x68a8>
  44dd2c:	mov	x0, #0x0                   	// #0
  44dd30:	b	44dd0c <_obstack_memory_used@@Base+0x42ac>
  44dd34:	nop
  44dd38:	stp	x29, x30, [sp, #-64]!
  44dd3c:	mov	x29, sp
  44dd40:	ldr	x1, [x0, #24]
  44dd44:	stp	x19, x20, [sp, #16]
  44dd48:	mov	x19, x0
  44dd4c:	str	x21, [sp, #32]
  44dd50:	ldr	x21, [x0, #64]
  44dd54:	ldrb	w2, [x1]
  44dd58:	cmp	w2, #0x45
  44dd5c:	b.eq	44dddc <_obstack_memory_used@@Base+0x437c>  // b.none
  44dd60:	add	x20, sp, #0x38
  44dd64:	str	xzr, [sp, #56]
  44dd68:	b	44dd8c <_obstack_memory_used@@Base+0x432c>
  44dd6c:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44dd70:	str	x0, [x20]
  44dd74:	add	x20, x0, #0x10
  44dd78:	cbz	x0, 44dda8 <_obstack_memory_used@@Base+0x4348>
  44dd7c:	ldr	x1, [x19, #24]
  44dd80:	ldrb	w0, [x1]
  44dd84:	cmp	w0, #0x45
  44dd88:	b.eq	44ddbc <_obstack_memory_used@@Base+0x435c>  // b.none
  44dd8c:	mov	x0, x19
  44dd90:	bl	44dc90 <_obstack_memory_used@@Base+0x4230>
  44dd94:	mov	x3, #0x0                   	// #0
  44dd98:	mov	x2, x0
  44dd9c:	mov	w1, #0x2f                  	// #47
  44dda0:	mov	x0, x19
  44dda4:	cbnz	x2, 44dd6c <_obstack_memory_used@@Base+0x430c>
  44dda8:	mov	x0, #0x0                   	// #0
  44ddac:	ldp	x19, x20, [sp, #16]
  44ddb0:	ldr	x21, [sp, #32]
  44ddb4:	ldp	x29, x30, [sp], #64
  44ddb8:	ret
  44ddbc:	add	x1, x1, #0x1
  44ddc0:	str	x1, [x19, #24]
  44ddc4:	str	x21, [x19, #64]
  44ddc8:	ldp	x19, x20, [sp, #16]
  44ddcc:	ldr	x21, [sp, #32]
  44ddd0:	ldr	x0, [sp, #56]
  44ddd4:	ldp	x29, x30, [sp], #64
  44ddd8:	ret
  44dddc:	add	x1, x1, #0x1
  44dde0:	mov	x3, #0x0                   	// #0
  44dde4:	ldr	x21, [sp, #32]
  44dde8:	str	x1, [x0, #24]
  44ddec:	ldp	x19, x20, [sp, #16]
  44ddf0:	mov	x2, #0x0                   	// #0
  44ddf4:	ldp	x29, x30, [sp], #64
  44ddf8:	mov	w1, #0x2f                  	// #47
  44ddfc:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44de00:	ldr	x3, [x0, #24]
  44de04:	ldrb	w1, [x3]
  44de08:	sub	w1, w1, #0x49
  44de0c:	and	w1, w1, #0xff
  44de10:	cmp	w1, #0x1
  44de14:	b.hi	44de24 <_obstack_memory_used@@Base+0x43c4>  // b.pmore
  44de18:	add	x3, x3, #0x1
  44de1c:	str	x3, [x0, #24]
  44de20:	b	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44de24:	mov	x0, #0x0                   	// #0
  44de28:	ret
  44de2c:	nop
  44de30:	stp	x29, x30, [sp, #-48]!
  44de34:	mov	w3, #0x54                  	// #84
  44de38:	mov	x29, sp
  44de3c:	ldr	x2, [x0, #24]
  44de40:	stp	x19, x20, [sp, #16]
  44de44:	mov	x19, x0
  44de48:	str	x21, [sp, #32]
  44de4c:	mov	w21, w1
  44de50:	ldrb	w1, [x2]
  44de54:	cmp	w1, #0x47
  44de58:	ccmp	w1, w3, #0x4, ne  // ne = any
  44de5c:	b.ne	44dee8 <_obstack_memory_used@@Base+0x4488>  // b.any
  44de60:	ldr	w3, [x0, #72]
  44de64:	add	w1, w3, #0x14
  44de68:	str	w1, [x0, #72]
  44de6c:	ldrb	w1, [x2]
  44de70:	cmp	w1, #0x54
  44de74:	b.eq	44e00c <_obstack_memory_used@@Base+0x45ac>  // b.none
  44de78:	cmp	w1, #0x47
  44de7c:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44de80:	add	x1, x2, #0x1
  44de84:	str	x1, [x0, #24]
  44de88:	ldrb	w1, [x2, #1]
  44de8c:	cbz	w1, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44de90:	add	x1, x2, #0x2
  44de94:	str	x1, [x0, #24]
  44de98:	ldrb	w1, [x2, #1]
  44de9c:	cmp	w1, #0x54
  44dea0:	b.eq	44e3a8 <_obstack_memory_used@@Base+0x4948>  // b.none
  44dea4:	b.hi	44e074 <_obstack_memory_used@@Base+0x4614>  // b.pmore
  44dea8:	cmp	w1, #0x41
  44deac:	b.eq	44e3f0 <_obstack_memory_used@@Base+0x4990>  // b.none
  44deb0:	cmp	w1, #0x52
  44deb4:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44deb8:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44debc:	mov	x11, x0
  44dec0:	mov	x0, x19
  44dec4:	bl	44c3a8 <_obstack_memory_used@@Base+0x2948>
  44dec8:	mov	x3, x0
  44decc:	mov	x0, x19
  44ded0:	mov	x2, x11
  44ded4:	ldp	x19, x20, [sp, #16]
  44ded8:	mov	w1, #0x16                  	// #22
  44dedc:	ldr	x21, [sp, #32]
  44dee0:	ldp	x29, x30, [sp], #48
  44dee4:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44dee8:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44deec:	mov	x20, x0
  44def0:	cbz	x0, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44def4:	cbz	w21, 44df44 <_obstack_memory_used@@Base+0x44e4>
  44def8:	ldr	w0, [x19, #16]
  44defc:	tbnz	w0, #0, 44df44 <_obstack_memory_used@@Base+0x44e4>
  44df00:	mov	x1, #0x1f                  	// #31
  44df04:	mov	x2, #0x1                   	// #1
  44df08:	movk	x1, #0x1a, lsl #48
  44df0c:	ldr	w3, [x20]
  44df10:	sub	w0, w3, #0x1c
  44df14:	cmp	w0, #0x34
  44df18:	b.hi	44df28 <_obstack_memory_used@@Base+0x44c8>  // b.pmore
  44df1c:	lsl	x0, x2, x0
  44df20:	tst	x0, x1
  44df24:	b.ne	44e25c <_obstack_memory_used@@Base+0x47fc>  // b.any
  44df28:	cmp	w3, #0x2
  44df2c:	b.eq	44e264 <_obstack_memory_used@@Base+0x4804>  // b.none
  44df30:	mov	x0, x20
  44df34:	ldp	x19, x20, [sp, #16]
  44df38:	ldr	x21, [sp, #32]
  44df3c:	ldp	x29, x30, [sp], #48
  44df40:	ret
  44df44:	ldr	x0, [x19, #24]
  44df48:	ldrb	w0, [x0]
  44df4c:	cmp	w0, #0x45
  44df50:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  44df54:	b.eq	44df30 <_obstack_memory_used@@Base+0x44d0>  // b.none
  44df58:	mov	x1, #0x1f                  	// #31
  44df5c:	mov	x4, x20
  44df60:	mov	x2, #0x1                   	// #1
  44df64:	movk	x1, #0x1a, lsl #48
  44df68:	ldr	w3, [x4]
  44df6c:	cmp	w3, #0x4
  44df70:	b.eq	44e2d8 <_obstack_memory_used@@Base+0x4878>  // b.none
  44df74:	sub	w0, w3, #0x1c
  44df78:	b.hi	44e168 <_obstack_memory_used@@Base+0x4708>  // b.pmore
  44df7c:	cmp	w3, #0x2
  44df80:	b.ne	44df8c <_obstack_memory_used@@Base+0x452c>  // b.any
  44df84:	ldr	x4, [x4, #16]
  44df88:	cbnz	x4, 44df68 <_obstack_memory_used@@Base+0x4508>
  44df8c:	mov	w1, #0x0                   	// #0
  44df90:	mov	x0, x19
  44df94:	bl	44fcb8 <_obstack_memory_used@@Base+0x6258>
  44df98:	mov	x3, x0
  44df9c:	cbz	x0, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44dfa0:	cbnz	w21, 44dfc0 <_obstack_memory_used@@Base+0x4560>
  44dfa4:	ldr	w0, [x20]
  44dfa8:	cmp	w0, #0x2
  44dfac:	b.ne	44dfc0 <_obstack_memory_used@@Base+0x4560>  // b.any
  44dfb0:	ldr	w0, [x3]
  44dfb4:	cmp	w0, #0x29
  44dfb8:	b.ne	44dfc0 <_obstack_memory_used@@Base+0x4560>  // b.any
  44dfbc:	str	xzr, [x3, #8]
  44dfc0:	mov	x2, x20
  44dfc4:	mov	x0, x19
  44dfc8:	ldp	x19, x20, [sp, #16]
  44dfcc:	mov	w1, #0x3                   	// #3
  44dfd0:	ldr	x21, [sp, #32]
  44dfd4:	ldp	x29, x30, [sp], #48
  44dfd8:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44dfdc:	cmp	w1, #0x68
  44dfe0:	b.eq	44e584 <_obstack_memory_used@@Base+0x4b24>  // b.none
  44dfe4:	cmp	w1, #0x76
  44dfe8:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44dfec:	bl	44c970 <_obstack_memory_used@@Base+0x2f10>
  44dff0:	cbnz	w0, 44e2ac <_obstack_memory_used@@Base+0x484c>
  44dff4:	mov	x20, #0x0                   	// #0
  44dff8:	mov	x0, x20
  44dffc:	ldp	x19, x20, [sp, #16]
  44e000:	ldr	x21, [sp, #32]
  44e004:	ldp	x29, x30, [sp], #48
  44e008:	ret
  44e00c:	add	x1, x2, #0x1
  44e010:	str	x1, [x0, #24]
  44e014:	ldrb	w1, [x2, #1]
  44e018:	cbz	w1, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e01c:	add	x1, x2, #0x2
  44e020:	str	x1, [x0, #24]
  44e024:	ldrb	w1, [x2, #1]
  44e028:	cmp	w1, #0x53
  44e02c:	b.eq	44e4f4 <_obstack_memory_used@@Base+0x4a94>  // b.none
  44e030:	b.hi	44e1e8 <_obstack_memory_used@@Base+0x4788>  // b.pmore
  44e034:	cmp	w1, #0x48
  44e038:	b.eq	44e4d0 <_obstack_memory_used@@Base+0x4a70>  // b.none
  44e03c:	b.hi	44e1b4 <_obstack_memory_used@@Base+0x4754>  // b.pmore
  44e040:	cmp	w1, #0x43
  44e044:	b.eq	44e470 <_obstack_memory_used@@Base+0x4a10>  // b.none
  44e048:	cmp	w1, #0x46
  44e04c:	b.ne	44e188 <_obstack_memory_used@@Base+0x4728>  // b.any
  44e050:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e054:	mov	x2, x0
  44e058:	mov	x0, x19
  44e05c:	mov	x3, #0x0                   	// #0
  44e060:	ldp	x19, x20, [sp, #16]
  44e064:	mov	w1, #0xe                   	// #14
  44e068:	ldr	x21, [sp, #32]
  44e06c:	ldp	x29, x30, [sp], #48
  44e070:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e074:	cmp	w1, #0x56
  44e078:	b.eq	44e384 <_obstack_memory_used@@Base+0x4924>  // b.none
  44e07c:	cmp	w1, #0x72
  44e080:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44e084:	add	x0, x0, #0x18
  44e088:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44e08c:	cmp	w0, #0x1
  44e090:	b.le	44dff4 <_obstack_memory_used@@Base+0x4594>
  44e094:	ldr	x1, [x19, #24]
  44e098:	ldrb	w2, [x1]
  44e09c:	cbz	w2, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e0a0:	add	x8, x1, #0x1
  44e0a4:	str	x8, [x19, #24]
  44e0a8:	ldrb	w1, [x1]
  44e0ac:	cmp	w1, #0x5f
  44e0b0:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44e0b4:	sub	w9, w0, #0x1
  44e0b8:	mov	x2, #0x0                   	// #0
  44e0bc:	mov	w11, #0x18                  	// #24
  44e0c0:	mov	w10, #0x41                  	// #65
  44e0c4:	ldrb	w0, [x8]
  44e0c8:	cbz	w0, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e0cc:	cmp	w0, #0x24
  44e0d0:	b.ne	44e31c <_obstack_memory_used@@Base+0x48bc>  // b.any
  44e0d4:	ldrb	w0, [x8, #1]
  44e0d8:	cmp	w0, #0x53
  44e0dc:	b.eq	44e428 <_obstack_memory_used@@Base+0x49c8>  // b.none
  44e0e0:	cmp	w0, #0x5f
  44e0e4:	b.eq	44e420 <_obstack_memory_used@@Base+0x49c0>  // b.none
  44e0e8:	cmp	w0, #0x24
  44e0ec:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44e0f0:	ldp	w1, w3, [x19, #40]
  44e0f4:	ldr	x8, [x19, #24]
  44e0f8:	cmp	w1, w3
  44e0fc:	add	x8, x8, #0x2
  44e100:	b.ge	44e5b8 <_obstack_memory_used@@Base+0x4b58>  // b.tcont
  44e104:	ldr	x5, [x19, #32]
  44e108:	smull	x4, w1, w11
  44e10c:	add	w1, w1, #0x1
  44e110:	sub	w9, w9, #0x2
  44e114:	add	x3, x5, x4
  44e118:	str	wzr, [x3, #4]
  44e11c:	str	w1, [x19, #40]
  44e120:	str	w10, [x5, x4]
  44e124:	str	w0, [x3, #8]
  44e128:	str	x8, [x19, #24]
  44e12c:	cbz	x2, 44e418 <_obstack_memory_used@@Base+0x49b8>
  44e130:	mov	x0, x19
  44e134:	mov	w1, #0x40                  	// #64
  44e138:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e13c:	mov	x2, x0
  44e140:	cbz	x0, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e144:	cmp	w9, #0x0
  44e148:	b.gt	44e0c4 <_obstack_memory_used@@Base+0x4664>
  44e14c:	mov	x0, x19
  44e150:	mov	x3, #0x0                   	// #0
  44e154:	ldp	x19, x20, [sp, #16]
  44e158:	mov	w1, #0x3f                  	// #63
  44e15c:	ldr	x21, [sp, #32]
  44e160:	ldp	x29, x30, [sp], #48
  44e164:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e168:	cmp	w0, #0x34
  44e16c:	b.hi	44df8c <_obstack_memory_used@@Base+0x452c>  // b.pmore
  44e170:	lsl	x0, x2, x0
  44e174:	tst	x0, x1
  44e178:	b.eq	44df8c <_obstack_memory_used@@Base+0x452c>  // b.none
  44e17c:	ldr	x4, [x4, #8]
  44e180:	cbnz	x4, 44df68 <_obstack_memory_used@@Base+0x4508>
  44e184:	b	44df8c <_obstack_memory_used@@Base+0x452c>
  44e188:	cmp	w1, #0x41
  44e18c:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44e190:	bl	44dc90 <_obstack_memory_used@@Base+0x4230>
  44e194:	mov	x2, x0
  44e198:	mov	x0, x19
  44e19c:	mov	x3, #0x0                   	// #0
  44e1a0:	ldp	x19, x20, [sp, #16]
  44e1a4:	mov	w1, #0x30                  	// #48
  44e1a8:	ldr	x21, [sp, #32]
  44e1ac:	ldp	x29, x30, [sp], #48
  44e1b0:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e1b4:	cmp	w1, #0x49
  44e1b8:	b.eq	44e560 <_obstack_memory_used@@Base+0x4b00>  // b.none
  44e1bc:	cmp	w1, #0x4a
  44e1c0:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44e1c4:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e1c8:	mov	x2, x0
  44e1cc:	mov	x0, x19
  44e1d0:	mov	x3, #0x0                   	// #0
  44e1d4:	ldp	x19, x20, [sp, #16]
  44e1d8:	mov	w1, #0x12                  	// #18
  44e1dc:	ldr	x21, [sp, #32]
  44e1e0:	ldp	x29, x30, [sp], #48
  44e1e4:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e1e8:	cmp	w1, #0x63
  44e1ec:	b.eq	44e518 <_obstack_memory_used@@Base+0x4ab8>  // b.none
  44e1f0:	b.hi	44dfdc <_obstack_memory_used@@Base+0x457c>  // b.pmore
  44e1f4:	cmp	w1, #0x56
  44e1f8:	b.eq	44e444 <_obstack_memory_used@@Base+0x49e4>  // b.none
  44e1fc:	cmp	w1, #0x57
  44e200:	b.ne	44e228 <_obstack_memory_used@@Base+0x47c8>  // b.any
  44e204:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44e208:	mov	x2, x0
  44e20c:	mov	x0, x19
  44e210:	mov	x3, #0x0                   	// #0
  44e214:	ldp	x19, x20, [sp, #16]
  44e218:	mov	w1, #0x15                  	// #21
  44e21c:	ldr	x21, [sp, #32]
  44e220:	ldp	x29, x30, [sp], #48
  44e224:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e228:	cmp	w1, #0x54
  44e22c:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44e230:	add	w3, w3, #0xa
  44e234:	str	w3, [x0, #72]
  44e238:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e23c:	mov	x2, x0
  44e240:	mov	x0, x19
  44e244:	mov	x3, #0x0                   	// #0
  44e248:	ldp	x19, x20, [sp, #16]
  44e24c:	mov	w1, #0xa                   	// #10
  44e250:	ldr	x21, [sp, #32]
  44e254:	ldp	x29, x30, [sp], #48
  44e258:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e25c:	ldr	x20, [x20, #8]
  44e260:	b	44df0c <_obstack_memory_used@@Base+0x44ac>
  44e264:	ldr	x3, [x20, #16]
  44e268:	mov	x1, #0x1f                  	// #31
  44e26c:	mov	x2, #0x1                   	// #1
  44e270:	movk	x1, #0x1a, lsl #48
  44e274:	ldr	w0, [x3]
  44e278:	sub	w0, w0, #0x1c
  44e27c:	cmp	w0, #0x34
  44e280:	b.hi	44df30 <_obstack_memory_used@@Base+0x44d0>  // b.pmore
  44e284:	lsl	x0, x2, x0
  44e288:	tst	x0, x1
  44e28c:	b.eq	44df30 <_obstack_memory_used@@Base+0x44d0>  // b.none
  44e290:	ldr	x3, [x3, #8]
  44e294:	str	x3, [x20, #16]
  44e298:	ldr	w0, [x3]
  44e29c:	sub	w0, w0, #0x1c
  44e2a0:	cmp	w0, #0x34
  44e2a4:	b.ls	44e284 <_obstack_memory_used@@Base+0x4824>  // b.plast
  44e2a8:	b	44df30 <_obstack_memory_used@@Base+0x44d0>
  44e2ac:	mov	x0, x19
  44e2b0:	mov	w1, #0x0                   	// #0
  44e2b4:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  44e2b8:	mov	x2, x0
  44e2bc:	mov	x0, x19
  44e2c0:	mov	x3, #0x0                   	// #0
  44e2c4:	ldp	x19, x20, [sp, #16]
  44e2c8:	mov	w1, #0x10                  	// #16
  44e2cc:	ldr	x21, [sp, #32]
  44e2d0:	ldp	x29, x30, [sp], #48
  44e2d4:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e2d8:	ldr	x1, [x4, #8]
  44e2dc:	cbz	x1, 44e308 <_obstack_memory_used@@Base+0x48a8>
  44e2e0:	ldr	w0, [x1]
  44e2e4:	sub	w2, w0, #0x1
  44e2e8:	cmp	w0, #0x8
  44e2ec:	b.hi	44e310 <_obstack_memory_used@@Base+0x48b0>  // b.pmore
  44e2f0:	cmp	w0, #0x6
  44e2f4:	b.hi	44df8c <_obstack_memory_used@@Base+0x452c>  // b.pmore
  44e2f8:	cmp	w2, #0x1
  44e2fc:	b.hi	44e308 <_obstack_memory_used@@Base+0x48a8>  // b.pmore
  44e300:	ldr	x1, [x1, #16]
  44e304:	cbnz	x1, 44e2e0 <_obstack_memory_used@@Base+0x4880>
  44e308:	mov	w1, #0x1                   	// #1
  44e30c:	b	44df90 <_obstack_memory_used@@Base+0x4530>
  44e310:	cmp	w0, #0x35
  44e314:	cset	w1, ne  // ne = any
  44e318:	b	44df90 <_obstack_memory_used@@Base+0x4530>
  44e31c:	mov	x1, #0x1                   	// #1
  44e320:	b	44e328 <_obstack_memory_used@@Base+0x48c8>
  44e324:	mov	x1, x4
  44e328:	cmp	w9, w1
  44e32c:	mov	w5, w1
  44e330:	b.le	44e348 <_obstack_memory_used@@Base+0x48e8>
  44e334:	ldrb	w3, [x8, x1]
  44e338:	add	x4, x1, #0x1
  44e33c:	cmp	w3, #0x24
  44e340:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  44e344:	b.ne	44e324 <_obstack_memory_used@@Base+0x48c4>  // b.any
  44e348:	ldp	w3, w0, [x19, #40]
  44e34c:	cmp	w3, w0
  44e350:	b.ge	44e430 <_obstack_memory_used@@Base+0x49d0>  // b.tcont
  44e354:	ldr	x4, [x19, #32]
  44e358:	add	w0, w3, #0x1
  44e35c:	sub	w9, w9, w5
  44e360:	smaddl	x3, w3, w11, x4
  44e364:	str	wzr, [x3, #4]
  44e368:	str	w0, [x19, #40]
  44e36c:	stp	xzr, x8, [x3]
  44e370:	ldr	x8, [x19, #24]
  44e374:	str	w5, [x3, #16]
  44e378:	add	x8, x8, x1
  44e37c:	str	x8, [x19, #24]
  44e380:	b	44e12c <_obstack_memory_used@@Base+0x46cc>
  44e384:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44e388:	mov	x2, x0
  44e38c:	mov	x0, x19
  44e390:	mov	x3, #0x0                   	// #0
  44e394:	ldp	x19, x20, [sp, #16]
  44e398:	mov	w1, #0x13                  	// #19
  44e39c:	ldr	x21, [sp, #32]
  44e3a0:	ldp	x29, x30, [sp], #48
  44e3a4:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e3a8:	ldrb	w1, [x2, #2]
  44e3ac:	cbz	w1, 44e3c4 <_obstack_memory_used@@Base+0x4964>
  44e3b0:	add	x1, x2, #0x3
  44e3b4:	str	x1, [x0, #24]
  44e3b8:	ldrb	w1, [x2, #2]
  44e3bc:	cmp	w1, #0x6e
  44e3c0:	b.eq	44e5c4 <_obstack_memory_used@@Base+0x4b64>  // b.none
  44e3c4:	mov	x0, x19
  44e3c8:	mov	w1, #0x0                   	// #0
  44e3cc:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  44e3d0:	mov	x2, x0
  44e3d4:	mov	x0, x19
  44e3d8:	mov	x3, #0x0                   	// #0
  44e3dc:	ldp	x19, x20, [sp, #16]
  44e3e0:	mov	w1, #0x49                  	// #73
  44e3e4:	ldr	x21, [sp, #32]
  44e3e8:	ldp	x29, x30, [sp], #48
  44e3ec:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e3f0:	mov	w1, #0x0                   	// #0
  44e3f4:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  44e3f8:	mov	x2, x0
  44e3fc:	mov	x0, x19
  44e400:	ldp	x19, x20, [sp, #16]
  44e404:	mov	x3, #0x0                   	// #0
  44e408:	ldr	x21, [sp, #32]
  44e40c:	mov	w1, #0x17                  	// #23
  44e410:	ldp	x29, x30, [sp], #48
  44e414:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e418:	mov	x2, x3
  44e41c:	b	44e144 <_obstack_memory_used@@Base+0x46e4>
  44e420:	mov	w0, #0x2e                  	// #46
  44e424:	b	44e0f0 <_obstack_memory_used@@Base+0x4690>
  44e428:	mov	w0, #0x2f                  	// #47
  44e42c:	b	44e0f0 <_obstack_memory_used@@Base+0x4690>
  44e430:	ldr	x0, [x19, #24]
  44e434:	mov	x20, #0x0                   	// #0
  44e438:	add	x1, x0, x1
  44e43c:	str	x1, [x19, #24]
  44e440:	b	44df30 <_obstack_memory_used@@Base+0x44d0>
  44e444:	add	w3, w3, #0xf
  44e448:	str	w3, [x0, #72]
  44e44c:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e450:	mov	x2, x0
  44e454:	mov	x0, x19
  44e458:	mov	x3, #0x0                   	// #0
  44e45c:	ldp	x19, x20, [sp, #16]
  44e460:	mov	w1, #0x9                   	// #9
  44e464:	ldr	x21, [sp, #32]
  44e468:	ldp	x29, x30, [sp], #48
  44e46c:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e470:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e474:	mov	x20, x0
  44e478:	add	x0, x19, #0x18
  44e47c:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44e480:	tbnz	w0, #31, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e484:	ldr	x0, [x19, #24]
  44e488:	ldrb	w1, [x0]
  44e48c:	cmp	w1, #0x5f
  44e490:	b.ne	44dff4 <_obstack_memory_used@@Base+0x4594>  // b.any
  44e494:	add	x0, x0, #0x1
  44e498:	str	x0, [x19, #24]
  44e49c:	mov	x0, x19
  44e4a0:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e4a4:	mov	x2, x0
  44e4a8:	ldr	w1, [x19, #72]
  44e4ac:	mov	x3, x20
  44e4b0:	ldr	x21, [sp, #32]
  44e4b4:	add	w1, w1, #0x5
  44e4b8:	str	w1, [x19, #72]
  44e4bc:	mov	x0, x19
  44e4c0:	ldp	x19, x20, [sp, #16]
  44e4c4:	mov	w1, #0xb                   	// #11
  44e4c8:	ldp	x29, x30, [sp], #48
  44e4cc:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e4d0:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44e4d4:	mov	x2, x0
  44e4d8:	mov	x0, x19
  44e4dc:	mov	x3, #0x0                   	// #0
  44e4e0:	ldp	x19, x20, [sp, #16]
  44e4e4:	mov	w1, #0x14                  	// #20
  44e4e8:	ldr	x21, [sp, #32]
  44e4ec:	ldp	x29, x30, [sp], #48
  44e4f0:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e4f4:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e4f8:	mov	x2, x0
  44e4fc:	mov	x0, x19
  44e500:	mov	x3, #0x0                   	// #0
  44e504:	ldp	x19, x20, [sp, #16]
  44e508:	mov	w1, #0xd                   	// #13
  44e50c:	ldr	x21, [sp, #32]
  44e510:	ldp	x29, x30, [sp], #48
  44e514:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e518:	mov	w1, #0x0                   	// #0
  44e51c:	bl	44c970 <_obstack_memory_used@@Base+0x2f10>
  44e520:	cbz	w0, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e524:	mov	x0, x19
  44e528:	mov	w1, #0x0                   	// #0
  44e52c:	bl	44c970 <_obstack_memory_used@@Base+0x2f10>
  44e530:	cbz	w0, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e534:	mov	x0, x19
  44e538:	mov	w1, #0x0                   	// #0
  44e53c:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  44e540:	mov	x2, x0
  44e544:	mov	x0, x19
  44e548:	mov	x3, #0x0                   	// #0
  44e54c:	ldp	x19, x20, [sp, #16]
  44e550:	mov	w1, #0x11                  	// #17
  44e554:	ldr	x21, [sp, #32]
  44e558:	ldp	x29, x30, [sp], #48
  44e55c:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e560:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e564:	mov	x2, x0
  44e568:	mov	x0, x19
  44e56c:	mov	x3, #0x0                   	// #0
  44e570:	ldp	x19, x20, [sp, #16]
  44e574:	mov	w1, #0xc                   	// #12
  44e578:	ldr	x21, [sp, #32]
  44e57c:	ldp	x29, x30, [sp], #48
  44e580:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e584:	bl	44c970 <_obstack_memory_used@@Base+0x2f10>
  44e588:	cbz	w0, 44dff4 <_obstack_memory_used@@Base+0x4594>
  44e58c:	mov	x0, x19
  44e590:	mov	w1, #0x0                   	// #0
  44e594:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  44e598:	mov	x2, x0
  44e59c:	mov	x0, x19
  44e5a0:	mov	x3, #0x0                   	// #0
  44e5a4:	ldp	x19, x20, [sp, #16]
  44e5a8:	mov	w1, #0xf                   	// #15
  44e5ac:	ldr	x21, [sp, #32]
  44e5b0:	ldp	x29, x30, [sp], #48
  44e5b4:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e5b8:	mov	x20, #0x0                   	// #0
  44e5bc:	str	x8, [x19, #24]
  44e5c0:	b	44df30 <_obstack_memory_used@@Base+0x44d0>
  44e5c4:	mov	w1, #0x0                   	// #0
  44e5c8:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  44e5cc:	mov	x2, x0
  44e5d0:	mov	x0, x19
  44e5d4:	ldp	x19, x20, [sp, #16]
  44e5d8:	mov	x3, #0x0                   	// #0
  44e5dc:	ldr	x21, [sp, #32]
  44e5e0:	mov	w1, #0x4a                  	// #74
  44e5e4:	ldp	x29, x30, [sp], #48
  44e5e8:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e5ec:	nop
  44e5f0:	stp	x29, x30, [sp, #-112]!
  44e5f4:	mov	x29, sp
  44e5f8:	ldr	x2, [x0, #24]
  44e5fc:	stp	x19, x20, [sp, #16]
  44e600:	ldrb	w1, [x2]
  44e604:	cmp	w1, #0x55
  44e608:	b.eq	44e7f0 <_obstack_memory_used@@Base+0x4d90>  // b.none
  44e60c:	mov	x19, x0
  44e610:	b.hi	44e6c0 <_obstack_memory_used@@Base+0x4c60>  // b.pmore
  44e614:	cmp	w1, #0x4e
  44e618:	b.eq	44e808 <_obstack_memory_used@@Base+0x4da8>  // b.none
  44e61c:	cmp	w1, #0x53
  44e620:	b.ne	44e790 <_obstack_memory_used@@Base+0x4d30>  // b.any
  44e624:	ldrb	w1, [x2, #1]
  44e628:	cmp	w1, #0x74
  44e62c:	b.ne	44e750 <_obstack_memory_used@@Base+0x4cf0>  // b.any
  44e630:	ldp	w0, w1, [x0, #40]
  44e634:	add	x2, x2, #0x2
  44e638:	str	x2, [x19, #24]
  44e63c:	cmp	w0, w1
  44e640:	b.ge	44eac4 <_obstack_memory_used@@Base+0x5064>  // b.tcont
  44e644:	mov	w3, #0x18                  	// #24
  44e648:	add	w1, w0, #0x1
  44e64c:	ldr	x2, [x19, #32]
  44e650:	smull	x0, w0, w3
  44e654:	str	w1, [x19, #40]
  44e658:	mov	w3, #0x3                   	// #3
  44e65c:	add	x20, x2, x0
  44e660:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44e664:	add	x1, x1, #0x6b8
  44e668:	str	xzr, [x2, x0]
  44e66c:	str	x1, [x20, #8]
  44e670:	str	w3, [x20, #16]
  44e674:	mov	x0, x19
  44e678:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44e67c:	mov	x2, x20
  44e680:	mov	x3, x0
  44e684:	mov	w1, #0x1                   	// #1
  44e688:	mov	x0, x19
  44e68c:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e690:	mov	x20, x0
  44e694:	ldr	w1, [x19, #72]
  44e698:	ldr	x2, [x19, #24]
  44e69c:	add	w1, w1, #0x3
  44e6a0:	str	w1, [x19, #72]
  44e6a4:	ldrb	w0, [x2]
  44e6a8:	cmp	w0, #0x49
  44e6ac:	b.eq	44ea70 <_obstack_memory_used@@Base+0x5010>  // b.none
  44e6b0:	mov	x0, x20
  44e6b4:	ldp	x19, x20, [sp, #16]
  44e6b8:	ldp	x29, x30, [sp], #112
  44e6bc:	ret
  44e6c0:	cmp	w1, #0x5a
  44e6c4:	b.ne	44e790 <_obstack_memory_used@@Base+0x4d30>  // b.any
  44e6c8:	add	x2, x2, #0x1
  44e6cc:	str	x2, [x0, #24]
  44e6d0:	mov	w1, #0x0                   	// #0
  44e6d4:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  44e6d8:	mov	x20, x0
  44e6dc:	cbz	x0, 44e788 <_obstack_memory_used@@Base+0x4d28>
  44e6e0:	ldr	x0, [x19, #24]
  44e6e4:	ldrb	w1, [x0]
  44e6e8:	cmp	w1, #0x45
  44e6ec:	b.ne	44e788 <_obstack_memory_used@@Base+0x4d28>  // b.any
  44e6f0:	add	x1, x0, #0x1
  44e6f4:	str	x1, [x19, #24]
  44e6f8:	ldrb	w1, [x0, #1]
  44e6fc:	cmp	w1, #0x73
  44e700:	b.eq	44eaec <_obstack_memory_used@@Base+0x508c>  // b.none
  44e704:	cmp	w1, #0x64
  44e708:	b.eq	44e994 <_obstack_memory_used@@Base+0x4f34>  // b.none
  44e70c:	mov	x0, x19
  44e710:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44e714:	mov	x3, x0
  44e718:	cbz	x0, 44e72c <_obstack_memory_used@@Base+0x4ccc>
  44e71c:	ldr	w0, [x0]
  44e720:	sub	w0, w0, #0x46
  44e724:	tst	w0, #0xfffffffd
  44e728:	b.ne	44eb40 <_obstack_memory_used@@Base+0x50e0>  // b.any
  44e72c:	ldr	w0, [x20]
  44e730:	cmp	w0, #0x3
  44e734:	b.eq	44eaac <_obstack_memory_used@@Base+0x504c>  // b.none
  44e738:	mov	x2, x20
  44e73c:	mov	x0, x19
  44e740:	mov	w1, #0x2                   	// #2
  44e744:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e748:	mov	x20, x0
  44e74c:	b	44e6b0 <_obstack_memory_used@@Base+0x4c50>
  44e750:	mov	w1, #0x0                   	// #0
  44e754:	bl	44c708 <_obstack_memory_used@@Base+0x2ca8>
  44e758:	ldr	x1, [x19, #24]
  44e75c:	mov	x20, x0
  44e760:	ldrb	w0, [x1]
  44e764:	cmp	w0, #0x49
  44e768:	b.ne	44e6b0 <_obstack_memory_used@@Base+0x4c50>  // b.any
  44e76c:	mov	x0, x19
  44e770:	b	44e7d0 <_obstack_memory_used@@Base+0x4d70>
  44e774:	mov	x0, x19
  44e778:	bl	44ca70 <_obstack_memory_used@@Base+0x3010>
  44e77c:	cbnz	w0, 44e9d0 <_obstack_memory_used@@Base+0x4f70>
  44e780:	ldp	x21, x22, [sp, #32]
  44e784:	nop
  44e788:	mov	x20, #0x0                   	// #0
  44e78c:	b	44e6b0 <_obstack_memory_used@@Base+0x4c50>
  44e790:	mov	x0, x19
  44e794:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44e798:	ldr	x1, [x19, #24]
  44e79c:	mov	x20, x0
  44e7a0:	ldrb	w0, [x1]
  44e7a4:	cmp	w0, #0x49
  44e7a8:	b.ne	44e6b0 <_obstack_memory_used@@Base+0x4c50>  // b.any
  44e7ac:	cbz	x20, 44e788 <_obstack_memory_used@@Base+0x4d28>
  44e7b0:	ldp	w1, w0, [x19, #56]
  44e7b4:	cmp	w1, w0
  44e7b8:	b.ge	44e788 <_obstack_memory_used@@Base+0x4d28>  // b.tcont
  44e7bc:	ldr	x3, [x19, #48]
  44e7c0:	mov	x0, x19
  44e7c4:	add	w2, w1, #0x1
  44e7c8:	str	x20, [x3, w1, sxtw #3]
  44e7cc:	str	w2, [x19, #56]
  44e7d0:	bl	44de00 <_obstack_memory_used@@Base+0x43a0>
  44e7d4:	mov	x3, x0
  44e7d8:	mov	x2, x20
  44e7dc:	mov	x0, x19
  44e7e0:	mov	w1, #0x4                   	// #4
  44e7e4:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e7e8:	mov	x20, x0
  44e7ec:	b	44e6b0 <_obstack_memory_used@@Base+0x4c50>
  44e7f0:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44e7f4:	mov	x20, x0
  44e7f8:	mov	x0, x20
  44e7fc:	ldp	x19, x20, [sp, #16]
  44e800:	ldp	x29, x30, [sp], #112
  44e804:	ret
  44e808:	stp	x21, x22, [sp, #32]
  44e80c:	add	x2, x2, #0x1
  44e810:	add	x1, sp, #0x68
  44e814:	str	x2, [x0, #24]
  44e818:	mov	w2, #0x1                   	// #1
  44e81c:	bl	44fa28 <_obstack_memory_used@@Base+0x5fc8>
  44e820:	mov	x22, x0
  44e824:	cbz	x0, 44eaa0 <_obstack_memory_used@@Base+0x5040>
  44e828:	mov	x1, #0x0                   	// #0
  44e82c:	mov	x0, x19
  44e830:	stp	x23, x24, [sp, #48]
  44e834:	bl	44c0e0 <_obstack_memory_used@@Base+0x2680>
  44e838:	mov	x23, x0
  44e83c:	ldr	x1, [x19, #24]
  44e840:	ldrb	w20, [x1]
  44e844:	cbz	w20, 44e8fc <_obstack_memory_used@@Base+0x4e9c>
  44e848:	mov	x21, #0x0                   	// #0
  44e84c:	mov	w24, #0x4c                  	// #76
  44e850:	stp	x25, x26, [sp, #64]
  44e854:	mov	w25, #0x55                  	// #85
  44e858:	cmp	w20, #0x44
  44e85c:	b.eq	44e910 <_obstack_memory_used@@Base+0x4eb0>  // b.none
  44e860:	sub	w2, w20, #0x30
  44e864:	sub	w0, w20, #0x61
  44e868:	and	w2, w2, #0xff
  44e86c:	and	w0, w0, #0xff
  44e870:	cmp	w2, #0x9
  44e874:	mov	x26, x21
  44e878:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  44e87c:	b.ls	44e890 <_obstack_memory_used@@Base+0x4e30>  // b.plast
  44e880:	cmp	w20, #0x43
  44e884:	ccmp	w20, w25, #0x4, ne  // ne = any
  44e888:	ccmp	w20, w24, #0x4, ne  // ne = any
  44e88c:	b.ne	44e95c <_obstack_memory_used@@Base+0x4efc>  // b.any
  44e890:	mov	x0, x19
  44e894:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44e898:	mov	x21, x0
  44e89c:	cbz	x26, 44e8b8 <_obstack_memory_used@@Base+0x4e58>
  44e8a0:	mov	w1, #0x1                   	// #1
  44e8a4:	mov	x3, x21
  44e8a8:	mov	x2, x26
  44e8ac:	mov	x0, x19
  44e8b0:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44e8b4:	mov	x21, x0
  44e8b8:	cmp	w20, #0x53
  44e8bc:	ldr	x1, [x19, #24]
  44e8c0:	b.eq	44e8f0 <_obstack_memory_used@@Base+0x4e90>  // b.none
  44e8c4:	ldrb	w20, [x1]
  44e8c8:	cmp	w20, #0x45
  44e8cc:	b.eq	44e944 <_obstack_memory_used@@Base+0x4ee4>  // b.none
  44e8d0:	cbz	x21, 44e8f8 <_obstack_memory_used@@Base+0x4e98>
  44e8d4:	ldp	w0, w2, [x19, #56]
  44e8d8:	cmp	w0, w2
  44e8dc:	b.ge	44e8f8 <_obstack_memory_used@@Base+0x4e98>  // b.tcont
  44e8e0:	ldr	x3, [x19, #48]
  44e8e4:	add	w2, w0, #0x1
  44e8e8:	str	x21, [x3, w0, sxtw #3]
  44e8ec:	str	w2, [x19, #56]
  44e8f0:	ldrb	w20, [x1]
  44e8f4:	cbnz	w20, 44e858 <_obstack_memory_used@@Base+0x4df8>
  44e8f8:	ldp	x25, x26, [sp, #64]
  44e8fc:	mov	x20, #0x0                   	// #0
  44e900:	ldp	x23, x24, [sp, #48]
  44e904:	str	xzr, [x22]
  44e908:	ldp	x21, x22, [sp, #32]
  44e90c:	b	44e6b0 <_obstack_memory_used@@Base+0x4c50>
  44e910:	ldrb	w0, [x1, #1]
  44e914:	and	w0, w0, #0xffffffdf
  44e918:	and	w0, w0, #0xff
  44e91c:	cmp	w0, #0x54
  44e920:	mov	x0, x19
  44e924:	b.ne	44e94c <_obstack_memory_used@@Base+0x4eec>  // b.any
  44e928:	mov	x26, x21
  44e92c:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44e930:	mov	x21, x0
  44e934:	mov	w1, #0x1                   	// #1
  44e938:	cbnz	x26, 44e8a4 <_obstack_memory_used@@Base+0x4e44>
  44e93c:	ldr	x1, [x19, #24]
  44e940:	b	44e8c4 <_obstack_memory_used@@Base+0x4e64>
  44e944:	mov	x26, x21
  44e948:	b	44e880 <_obstack_memory_used@@Base+0x4e20>
  44e94c:	mov	x26, x21
  44e950:	bl	44fe28 <_obstack_memory_used@@Base+0x63c8>
  44e954:	mov	x21, x0
  44e958:	b	44e934 <_obstack_memory_used@@Base+0x4ed4>
  44e95c:	cmp	w20, #0x53
  44e960:	b.eq	44ea10 <_obstack_memory_used@@Base+0x4fb0>  // b.none
  44e964:	cmp	w20, #0x49
  44e968:	b.eq	44eacc <_obstack_memory_used@@Base+0x506c>  // b.none
  44e96c:	cmp	w20, #0x54
  44e970:	b.eq	44eb68 <_obstack_memory_used@@Base+0x5108>  // b.none
  44e974:	cmp	w20, #0x45
  44e978:	b.eq	44ea2c <_obstack_memory_used@@Base+0x4fcc>  // b.none
  44e97c:	cmp	w20, #0x4d
  44e980:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  44e984:	b.eq	44e8f8 <_obstack_memory_used@@Base+0x4e98>  // b.none
  44e988:	add	x1, x1, #0x1
  44e98c:	str	x1, [x19, #24]
  44e990:	b	44e8f0 <_obstack_memory_used@@Base+0x4e90>
  44e994:	stp	x21, x22, [sp, #32]
  44e998:	add	x0, x0, #0x2
  44e99c:	str	x0, [x19, #24]
  44e9a0:	mov	x0, x19
  44e9a4:	bl	44c410 <_obstack_memory_used@@Base+0x29b0>
  44e9a8:	mov	w21, w0
  44e9ac:	tbnz	w0, #31, 44e780 <_obstack_memory_used@@Base+0x4d20>
  44e9b0:	mov	x0, x19
  44e9b4:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44e9b8:	mov	x11, x0
  44e9bc:	cbz	x0, 44e9d0 <_obstack_memory_used@@Base+0x4f70>
  44e9c0:	ldr	w0, [x0]
  44e9c4:	sub	w0, w0, #0x46
  44e9c8:	tst	w0, #0xfffffffd
  44e9cc:	b.ne	44e774 <_obstack_memory_used@@Base+0x4d14>  // b.any
  44e9d0:	ldp	w1, w0, [x19, #40]
  44e9d4:	cmp	w1, w0
  44e9d8:	b.ge	44eb5c <_obstack_memory_used@@Base+0x50fc>  // b.tcont
  44e9dc:	mov	w2, #0x18                  	// #24
  44e9e0:	add	w4, w1, #0x1
  44e9e4:	ldr	x0, [x19, #32]
  44e9e8:	smull	x1, w1, w2
  44e9ec:	mov	w2, #0x47                  	// #71
  44e9f0:	add	x3, x0, x1
  44e9f4:	str	wzr, [x3, #4]
  44e9f8:	str	w4, [x19, #40]
  44e9fc:	str	w2, [x0, x1]
  44ea00:	str	x11, [x3, #8]
  44ea04:	str	w21, [x3, #16]
  44ea08:	ldp	x21, x22, [sp, #32]
  44ea0c:	b	44e72c <_obstack_memory_used@@Base+0x4ccc>
  44ea10:	mov	x0, x19
  44ea14:	mov	w1, #0x1                   	// #1
  44ea18:	bl	44c708 <_obstack_memory_used@@Base+0x2ca8>
  44ea1c:	mov	x21, x0
  44ea20:	cbnz	x26, 44e8a0 <_obstack_memory_used@@Base+0x4e40>
  44ea24:	ldr	x1, [x19, #24]
  44ea28:	b	44e8f0 <_obstack_memory_used@@Base+0x4e90>
  44ea2c:	str	x21, [x22]
  44ea30:	cbz	x21, 44ea98 <_obstack_memory_used@@Base+0x5038>
  44ea34:	cbz	x23, 44ea44 <_obstack_memory_used@@Base+0x4fe4>
  44ea38:	ldr	x0, [sp, #104]
  44ea3c:	str	x0, [x23, #8]
  44ea40:	str	x23, [sp, #104]
  44ea44:	ldr	x0, [x19, #24]
  44ea48:	ldrb	w1, [x0]
  44ea4c:	cmp	w1, #0x45
  44ea50:	b.ne	44ea98 <_obstack_memory_used@@Base+0x5038>  // b.any
  44ea54:	add	x0, x0, #0x1
  44ea58:	ldp	x21, x22, [sp, #32]
  44ea5c:	ldp	x23, x24, [sp, #48]
  44ea60:	ldp	x25, x26, [sp, #64]
  44ea64:	str	x0, [x19, #24]
  44ea68:	ldr	x20, [sp, #104]
  44ea6c:	b	44e6b0 <_obstack_memory_used@@Base+0x4c50>
  44ea70:	cbz	x20, 44e788 <_obstack_memory_used@@Base+0x4d28>
  44ea74:	ldp	w0, w1, [x19, #56]
  44ea78:	cmp	w0, w1
  44ea7c:	b.ge	44e788 <_obstack_memory_used@@Base+0x4d28>  // b.tcont
  44ea80:	ldr	x2, [x19, #48]
  44ea84:	add	w1, w0, #0x1
  44ea88:	str	x20, [x2, w0, sxtw #3]
  44ea8c:	mov	x0, x19
  44ea90:	str	w1, [x19, #56]
  44ea94:	b	44e7d0 <_obstack_memory_used@@Base+0x4d70>
  44ea98:	ldp	x23, x24, [sp, #48]
  44ea9c:	ldp	x25, x26, [sp, #64]
  44eaa0:	mov	x20, #0x0                   	// #0
  44eaa4:	ldp	x21, x22, [sp, #32]
  44eaa8:	b	44e6b0 <_obstack_memory_used@@Base+0x4c50>
  44eaac:	ldr	x0, [x20, #16]
  44eab0:	ldr	w1, [x0]
  44eab4:	cmp	w1, #0x29
  44eab8:	b.ne	44e738 <_obstack_memory_used@@Base+0x4cd8>  // b.any
  44eabc:	str	xzr, [x0, #8]
  44eac0:	b	44e738 <_obstack_memory_used@@Base+0x4cd8>
  44eac4:	mov	x20, #0x0                   	// #0
  44eac8:	b	44e674 <_obstack_memory_used@@Base+0x4c14>
  44eacc:	cbz	x21, 44e8f8 <_obstack_memory_used@@Base+0x4e98>
  44ead0:	add	x1, x1, #0x1
  44ead4:	str	x1, [x19, #24]
  44ead8:	mov	x0, x19
  44eadc:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44eae0:	mov	x21, x0
  44eae4:	mov	w1, #0x4                   	// #4
  44eae8:	b	44e8a4 <_obstack_memory_used@@Base+0x4e44>
  44eaec:	add	x0, x0, #0x2
  44eaf0:	str	x0, [x19, #24]
  44eaf4:	mov	x0, x19
  44eaf8:	bl	44ca70 <_obstack_memory_used@@Base+0x3010>
  44eafc:	cbz	w0, 44e788 <_obstack_memory_used@@Base+0x4d28>
  44eb00:	ldp	w0, w1, [x19, #40]
  44eb04:	cmp	w0, w1
  44eb08:	b.ge	44eb60 <_obstack_memory_used@@Base+0x5100>  // b.tcont
  44eb0c:	mov	w3, #0x18                  	// #24
  44eb10:	add	w1, w0, #0x1
  44eb14:	ldr	x2, [x19, #32]
  44eb18:	smull	x0, w0, w3
  44eb1c:	str	w1, [x19, #40]
  44eb20:	mov	w4, #0xe                   	// #14
  44eb24:	add	x3, x2, x0
  44eb28:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44eb2c:	add	x1, x1, #0x6a8
  44eb30:	str	xzr, [x2, x0]
  44eb34:	str	x1, [x3, #8]
  44eb38:	str	w4, [x3, #16]
  44eb3c:	b	44e72c <_obstack_memory_used@@Base+0x4ccc>
  44eb40:	mov	x0, x19
  44eb44:	str	x3, [sp, #88]
  44eb48:	bl	44ca70 <_obstack_memory_used@@Base+0x3010>
  44eb4c:	ldr	x3, [sp, #88]
  44eb50:	cbnz	w0, 44e72c <_obstack_memory_used@@Base+0x4ccc>
  44eb54:	mov	x20, #0x0                   	// #0
  44eb58:	b	44e6b0 <_obstack_memory_used@@Base+0x4c50>
  44eb5c:	ldp	x21, x22, [sp, #32]
  44eb60:	mov	x3, #0x0                   	// #0
  44eb64:	b	44e72c <_obstack_memory_used@@Base+0x4ccc>
  44eb68:	mov	x0, x19
  44eb6c:	bl	44c488 <_obstack_memory_used@@Base+0x2a28>
  44eb70:	mov	x21, x0
  44eb74:	b	44e934 <_obstack_memory_used@@Base+0x4ed4>
  44eb78:	stp	x29, x30, [sp, #-80]!
  44eb7c:	mov	x29, sp
  44eb80:	ldr	x4, [x0, #24]
  44eb84:	stp	x19, x20, [sp, #16]
  44eb88:	mov	x19, x0
  44eb8c:	mov	x0, x4
  44eb90:	bl	44ca18 <_obstack_memory_used@@Base+0x2fb8>
  44eb94:	cbnz	w0, 44ebd4 <_obstack_memory_used@@Base+0x5174>
  44eb98:	ldrb	w1, [x4]
  44eb9c:	sub	w0, w1, #0x30
  44eba0:	cmp	w0, #0x4a
  44eba4:	b.ls	44ebbc <_obstack_memory_used@@Base+0x515c>  // b.plast
  44eba8:	mov	x20, #0x0                   	// #0
  44ebac:	mov	x0, x20
  44ebb0:	ldp	x19, x20, [sp, #16]
  44ebb4:	ldp	x29, x30, [sp], #80
  44ebb8:	ret
  44ebbc:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x205a0>
  44ebc0:	add	x2, x2, #0x824
  44ebc4:	ldrh	w0, [x2, w0, uxtw #1]
  44ebc8:	adr	x2, 44ebd4 <_obstack_memory_used@@Base+0x5174>
  44ebcc:	add	x0, x2, w0, sxth #2
  44ebd0:	br	x0
  44ebd4:	add	x1, sp, #0x48
  44ebd8:	mov	x0, x19
  44ebdc:	mov	w2, #0x0                   	// #0
  44ebe0:	stp	x21, x22, [sp, #32]
  44ebe4:	bl	44fa28 <_obstack_memory_used@@Base+0x5fc8>
  44ebe8:	mov	x21, x0
  44ebec:	cbz	x0, 44ec80 <_obstack_memory_used@@Base+0x5220>
  44ebf0:	ldr	x0, [x19, #24]
  44ebf4:	ldrb	w0, [x0]
  44ebf8:	cmp	w0, #0x46
  44ebfc:	mov	x0, x19
  44ec00:	b.eq	44ec74 <_obstack_memory_used@@Base+0x5214>  // b.none
  44ec04:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44ec08:	str	x0, [x21]
  44ec0c:	cbz	x0, 44ec80 <_obstack_memory_used@@Base+0x5220>
  44ec10:	ldr	w1, [x0]
  44ec14:	ldr	x20, [sp, #72]
  44ec18:	sub	w1, w1, #0x1f
  44ec1c:	cmp	w1, #0x1
  44ec20:	b.ls	44ec58 <_obstack_memory_used@@Base+0x51f8>  // b.plast
  44ec24:	cbz	x20, 44ec80 <_obstack_memory_used@@Base+0x5220>
  44ec28:	ldp	w0, w1, [x19, #56]
  44ec2c:	cmp	w0, w1
  44ec30:	b.ge	44ec80 <_obstack_memory_used@@Base+0x5220>  // b.tcont
  44ec34:	ldr	x2, [x19, #48]
  44ec38:	add	w1, w0, #0x1
  44ec3c:	ldp	x21, x22, [sp, #32]
  44ec40:	str	x20, [x2, w0, sxtw #3]
  44ec44:	mov	x0, x20
  44ec48:	str	w1, [x19, #56]
  44ec4c:	ldp	x19, x20, [sp, #16]
  44ec50:	ldp	x29, x30, [sp], #80
  44ec54:	ret
  44ec58:	ldr	x1, [x0, #8]
  44ec5c:	str	x20, [x0, #8]
  44ec60:	ldr	x0, [x21]
  44ec64:	str	x0, [sp, #72]
  44ec68:	str	x1, [x21]
  44ec6c:	ldr	x20, [sp, #72]
  44ec70:	b	44ec24 <_obstack_memory_used@@Base+0x51c4>
  44ec74:	bl	44fd48 <_obstack_memory_used@@Base+0x62e8>
  44ec78:	str	x0, [x21]
  44ec7c:	b	44ec0c <_obstack_memory_used@@Base+0x51ac>
  44ec80:	ldp	x21, x22, [sp, #32]
  44ec84:	b	44eba8 <_obstack_memory_used@@Base+0x5148>
  44ec88:	ldp	w2, w3, [x19, #40]
  44ec8c:	sub	w1, w1, #0x61
  44ec90:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44ec94:	add	x0, x0, #0xdf0
  44ec98:	sbfiz	x1, x1, #5, #32
  44ec9c:	add	x0, x0, #0x188
  44eca0:	add	x1, x0, x1
  44eca4:	cmp	w2, w3
  44eca8:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44ecac:	mov	w0, #0x18                  	// #24
  44ecb0:	add	w6, w2, #0x1
  44ecb4:	ldr	x3, [x19, #32]
  44ecb8:	smull	x2, w2, w0
  44ecbc:	ldr	w7, [x1, #8]
  44ecc0:	mov	w5, #0x27                  	// #39
  44ecc4:	add	x20, x3, x2
  44ecc8:	ldr	w0, [x19, #72]
  44eccc:	add	x4, x4, #0x1
  44ecd0:	add	w0, w0, w7
  44ecd4:	str	wzr, [x20, #4]
  44ecd8:	str	w6, [x19, #40]
  44ecdc:	str	w5, [x3, x2]
  44ece0:	str	x1, [x20, #8]
  44ece4:	str	x4, [x19, #24]
  44ece8:	str	w0, [x19, #72]
  44ecec:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44ecf0:	mov	x0, x19
  44ecf4:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44ecf8:	mov	x20, x0
  44ecfc:	str	x0, [sp, #72]
  44ed00:	cbz	x20, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44ed04:	ldp	w0, w1, [x19, #56]
  44ed08:	cmp	w0, w1
  44ed0c:	b.ge	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  44ed10:	ldr	x2, [x19, #48]
  44ed14:	add	w1, w0, #0x1
  44ed18:	str	x20, [x2, w0, sxtw #3]
  44ed1c:	str	w1, [x19, #56]
  44ed20:	ldr	x20, [sp, #72]
  44ed24:	mov	x0, x20
  44ed28:	ldp	x19, x20, [sp, #16]
  44ed2c:	ldp	x29, x30, [sp], #80
  44ed30:	ret
  44ed34:	mov	x0, x19
  44ed38:	bl	44fd48 <_obstack_memory_used@@Base+0x62e8>
  44ed3c:	mov	x20, x0
  44ed40:	str	x0, [sp, #72]
  44ed44:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44ed48:	add	x4, x4, #0x1
  44ed4c:	str	x4, [x19, #24]
  44ed50:	mov	x0, x19
  44ed54:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44ed58:	mov	x2, x0
  44ed5c:	mov	x3, #0x0                   	// #0
  44ed60:	mov	x0, x19
  44ed64:	mov	w1, #0x26                  	// #38
  44ed68:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44ed6c:	mov	x20, x0
  44ed70:	str	x0, [sp, #72]
  44ed74:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44ed78:	add	x4, x4, #0x1
  44ed7c:	str	x4, [x19, #24]
  44ed80:	mov	x0, x19
  44ed84:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44ed88:	mov	x2, x0
  44ed8c:	mov	x3, #0x0                   	// #0
  44ed90:	mov	x0, x19
  44ed94:	mov	w1, #0x24                  	// #36
  44ed98:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44ed9c:	mov	x20, x0
  44eda0:	str	x0, [sp, #72]
  44eda4:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44eda8:	add	x4, x4, #0x1
  44edac:	str	x4, [x19, #24]
  44edb0:	mov	x0, x19
  44edb4:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44edb8:	mov	x2, x0
  44edbc:	mov	x3, #0x0                   	// #0
  44edc0:	mov	x0, x19
  44edc4:	mov	w1, #0x25                  	// #37
  44edc8:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44edcc:	mov	x20, x0
  44edd0:	str	x0, [sp, #72]
  44edd4:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44edd8:	add	x0, x4, #0x1
  44eddc:	str	x0, [x19, #24]
  44ede0:	ldrb	w0, [x4, #1]
  44ede4:	cbz	w0, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44ede8:	add	x0, x4, #0x2
  44edec:	str	x0, [x19, #24]
  44edf0:	ldrb	w0, [x4, #1]
  44edf4:	cmp	w0, #0x68
  44edf8:	b.eq	44f570 <_obstack_memory_used@@Base+0x5b10>  // b.none
  44edfc:	b.hi	44f154 <_obstack_memory_used@@Base+0x56f4>  // b.pmore
  44ee00:	cmp	w0, #0x63
  44ee04:	b.eq	44f530 <_obstack_memory_used@@Base+0x5ad0>  // b.none
  44ee08:	b.ls	44f104 <_obstack_memory_used@@Base+0x56a4>  // b.plast
  44ee0c:	cmp	w0, #0x65
  44ee10:	b.eq	44f610 <_obstack_memory_used@@Base+0x5bb0>  // b.none
  44ee14:	cmp	w0, #0x66
  44ee18:	b.ne	44f370 <_obstack_memory_used@@Base+0x5910>  // b.any
  44ee1c:	ldp	w0, w1, [x19, #40]
  44ee20:	cmp	w0, w1
  44ee24:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44ee28:	mov	w1, #0x18                  	// #24
  44ee2c:	add	w5, w0, #0x1
  44ee30:	ldr	x3, [x19, #32]
  44ee34:	smull	x0, w0, w1
  44ee38:	ldr	w2, [x19, #72]
  44ee3c:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44ee40:	add	x1, x1, #0xdf0
  44ee44:	add	x20, x3, x0
  44ee48:	add	x1, x1, #0x4c8
  44ee4c:	mov	w4, #0x27                  	// #39
  44ee50:	str	wzr, [x20, #4]
  44ee54:	add	w2, w2, #0x9
  44ee58:	str	w5, [x19, #40]
  44ee5c:	str	w4, [x3, x0]
  44ee60:	str	x1, [x20, #8]
  44ee64:	str	w2, [x19, #72]
  44ee68:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44ee6c:	add	x4, x4, #0x1
  44ee70:	str	x4, [x19, #24]
  44ee74:	mov	x0, x19
  44ee78:	bl	44c508 <_obstack_memory_used@@Base+0x2aa8>
  44ee7c:	str	x0, [sp, #72]
  44ee80:	ldr	x1, [x19, #24]
  44ee84:	mov	x20, x0
  44ee88:	ldrb	w0, [x1]
  44ee8c:	cmp	w0, #0x49
  44ee90:	b.eq	44f450 <_obstack_memory_used@@Base+0x59f0>  // b.none
  44ee94:	mov	x0, x19
  44ee98:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44ee9c:	ldr	x3, [sp, #72]
  44eea0:	mov	x2, x0
  44eea4:	mov	w1, #0x21                  	// #33
  44eea8:	mov	x0, x19
  44eeac:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44eeb0:	mov	x20, x0
  44eeb4:	str	x0, [sp, #72]
  44eeb8:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44eebc:	add	x4, x4, #0x1
  44eec0:	str	x4, [x19, #24]
  44eec4:	mov	x0, x19
  44eec8:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44eecc:	mov	x2, x0
  44eed0:	mov	x3, #0x0                   	// #0
  44eed4:	mov	x0, x19
  44eed8:	mov	w1, #0x22                  	// #34
  44eedc:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44eee0:	mov	x20, x0
  44eee4:	str	x0, [sp, #72]
  44eee8:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44eeec:	ldrb	w0, [x4, #1]
  44eef0:	sub	w1, w0, #0x30
  44eef4:	cmp	w0, #0x5f
  44eef8:	and	w1, w1, #0xff
  44eefc:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  44ef00:	b.ls	44ef14 <_obstack_memory_used@@Base+0x54b4>  // b.plast
  44ef04:	sub	w0, w0, #0x41
  44ef08:	and	w0, w0, #0xff
  44ef0c:	cmp	w0, #0x19
  44ef10:	b.hi	44f42c <_obstack_memory_used@@Base+0x59cc>  // b.pmore
  44ef14:	mov	w1, #0x0                   	// #0
  44ef18:	mov	x0, x19
  44ef1c:	bl	44c708 <_obstack_memory_used@@Base+0x2ca8>
  44ef20:	str	x0, [sp, #72]
  44ef24:	ldr	x1, [x19, #24]
  44ef28:	mov	x20, x0
  44ef2c:	ldrb	w0, [x1]
  44ef30:	cmp	w0, #0x49
  44ef34:	b.ne	44ebac <_obstack_memory_used@@Base+0x514c>  // b.any
  44ef38:	add	x1, x1, #0x1
  44ef3c:	str	x1, [x19, #24]
  44ef40:	mov	x0, x19
  44ef44:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44ef48:	mov	x3, x0
  44ef4c:	mov	x2, x20
  44ef50:	mov	x0, x19
  44ef54:	mov	w1, #0x4                   	// #4
  44ef58:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44ef5c:	mov	x20, x0
  44ef60:	str	x0, [sp, #72]
  44ef64:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44ef68:	mov	x0, x19
  44ef6c:	stp	x21, x22, [sp, #32]
  44ef70:	bl	44c488 <_obstack_memory_used@@Base+0x2a28>
  44ef74:	ldr	x21, [x19, #24]
  44ef78:	str	x0, [sp, #72]
  44ef7c:	mov	x20, x0
  44ef80:	ldrb	w0, [x21]
  44ef84:	cmp	w0, #0x49
  44ef88:	b.eq	44f3b0 <_obstack_memory_used@@Base+0x5950>  // b.none
  44ef8c:	ldp	x21, x22, [sp, #32]
  44ef90:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44ef94:	add	x4, x4, #0x1
  44ef98:	str	x4, [x19, #24]
  44ef9c:	mov	x0, x19
  44efa0:	bl	44c508 <_obstack_memory_used@@Base+0x2aa8>
  44efa4:	mov	x2, x0
  44efa8:	mov	x3, #0x0                   	// #0
  44efac:	mov	x0, x19
  44efb0:	mov	w1, #0x28                  	// #40
  44efb4:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44efb8:	mov	x20, x0
  44efbc:	str	x0, [sp, #72]
  44efc0:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44efc4:	add	x4, x4, #0x1
  44efc8:	str	x4, [x19, #24]
  44efcc:	mov	x0, x19
  44efd0:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44efd4:	mov	x2, x0
  44efd8:	mov	x3, #0x0                   	// #0
  44efdc:	mov	x0, x19
  44efe0:	mov	w1, #0x23                  	// #35
  44efe4:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44efe8:	mov	x20, x0
  44efec:	str	x0, [sp, #72]
  44eff0:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44eff4:	add	x3, x4, #0x1
  44eff8:	str	x3, [x19, #24]
  44effc:	ldrb	w0, [x4, #1]
  44f000:	cmp	w0, #0x5f
  44f004:	b.eq	44f424 <_obstack_memory_used@@Base+0x59c4>  // b.none
  44f008:	sub	w0, w0, #0x30
  44f00c:	and	w0, w0, #0xff
  44f010:	cmp	w0, #0x9
  44f014:	b.hi	44f47c <_obstack_memory_used@@Base+0x5a1c>  // b.pmore
  44f018:	mov	x1, x3
  44f01c:	nop
  44f020:	mov	x4, x1
  44f024:	add	x1, x1, #0x1
  44f028:	str	x1, [x19, #24]
  44f02c:	ldrb	w0, [x1]
  44f030:	sub	w0, w0, #0x30
  44f034:	and	w0, w0, #0xff
  44f038:	cmp	w0, #0x9
  44f03c:	b.ls	44f020 <_obstack_memory_used@@Base+0x55c0>  // b.plast
  44f040:	ldp	w0, w5, [x19, #40]
  44f044:	sub	x2, x1, x3
  44f048:	cmp	w0, w5
  44f04c:	b.ge	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  44f050:	mov	w7, #0x18                  	// #24
  44f054:	add	w6, w0, #0x1
  44f058:	ldr	x5, [x19, #32]
  44f05c:	smull	x0, w0, w7
  44f060:	cmp	w2, #0x0
  44f064:	add	x20, x5, x0
  44f068:	str	wzr, [x20, #4]
  44f06c:	str	w6, [x19, #40]
  44f070:	b.le	44eba8 <_obstack_memory_used@@Base+0x5148>
  44f074:	str	xzr, [x5, x0]
  44f078:	str	x3, [x20, #8]
  44f07c:	str	w2, [x20, #16]
  44f080:	ldrb	w0, [x4, #1]
  44f084:	mov	x3, x1
  44f088:	cmp	w0, #0x5f
  44f08c:	b.ne	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.any
  44f090:	add	x3, x3, #0x1
  44f094:	str	x3, [x19, #24]
  44f098:	mov	x0, x19
  44f09c:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f0a0:	mov	x3, x0
  44f0a4:	mov	x2, x20
  44f0a8:	mov	x0, x19
  44f0ac:	mov	w1, #0x2a                  	// #42
  44f0b0:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f0b4:	mov	x20, x0
  44f0b8:	str	x0, [sp, #72]
  44f0bc:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44f0c0:	add	x4, x4, #0x1
  44f0c4:	str	x4, [x19, #24]
  44f0c8:	mov	x0, x19
  44f0cc:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f0d0:	mov	x20, x0
  44f0d4:	cbz	x0, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f0d8:	mov	x0, x19
  44f0dc:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f0e0:	mov	x3, x0
  44f0e4:	cbz	x0, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f0e8:	mov	x2, x20
  44f0ec:	mov	x0, x19
  44f0f0:	mov	w1, #0x2b                  	// #43
  44f0f4:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f0f8:	mov	x20, x0
  44f0fc:	str	x0, [sp, #72]
  44f100:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44f104:	cmp	w0, #0x54
  44f108:	b.eq	44f1d4 <_obstack_memory_used@@Base+0x5774>  // b.none
  44f10c:	cmp	w0, #0x61
  44f110:	b.ne	44f268 <_obstack_memory_used@@Base+0x5808>  // b.any
  44f114:	ldp	w0, w1, [x19, #40]
  44f118:	cmp	w0, w1
  44f11c:	b.ge	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  44f120:	mov	w3, #0x18                  	// #24
  44f124:	add	w1, w0, #0x1
  44f128:	ldr	x2, [x19, #32]
  44f12c:	smull	x0, w0, w3
  44f130:	str	w1, [x19, #40]
  44f134:	mov	w3, #0x4                   	// #4
  44f138:	add	x20, x2, x0
  44f13c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44f140:	add	x1, x1, #0x690
  44f144:	str	xzr, [x2, x0]
  44f148:	str	x1, [x20, #8]
  44f14c:	str	w3, [x20, #16]
  44f150:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f154:	cmp	w0, #0x73
  44f158:	b.eq	44f4f8 <_obstack_memory_used@@Base+0x5a98>  // b.none
  44f15c:	b.ls	44f230 <_obstack_memory_used@@Base+0x57d0>  // b.plast
  44f160:	cmp	w0, #0x75
  44f164:	b.eq	44f660 <_obstack_memory_used@@Base+0x5c00>  // b.none
  44f168:	cmp	w0, #0x76
  44f16c:	b.ne	44f1cc <_obstack_memory_used@@Base+0x576c>  // b.any
  44f170:	ldrb	w0, [x4, #2]
  44f174:	cmp	w0, #0x5f
  44f178:	b.eq	44f6f8 <_obstack_memory_used@@Base+0x5c98>  // b.none
  44f17c:	mov	x0, x19
  44f180:	bl	44c3a8 <_obstack_memory_used@@Base+0x2948>
  44f184:	mov	x20, x0
  44f188:	cbz	x20, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f18c:	ldr	x0, [x19, #24]
  44f190:	ldrb	w1, [x0]
  44f194:	cmp	w1, #0x5f
  44f198:	b.ne	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.any
  44f19c:	add	x0, x0, #0x1
  44f1a0:	str	x0, [x19, #24]
  44f1a4:	mov	x0, x19
  44f1a8:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f1ac:	mov	x3, x0
  44f1b0:	mov	x2, x20
  44f1b4:	mov	x0, x19
  44f1b8:	mov	w1, #0x2d                  	// #45
  44f1bc:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f1c0:	mov	x20, x0
  44f1c4:	str	x0, [sp, #72]
  44f1c8:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44f1cc:	cmp	w0, #0x74
  44f1d0:	b.ne	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.any
  44f1d4:	ldr	w20, [x19, #76]
  44f1d8:	mov	w0, #0x1                   	// #1
  44f1dc:	str	w0, [x19, #76]
  44f1e0:	mov	x0, x19
  44f1e4:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44f1e8:	str	w20, [x19, #76]
  44f1ec:	mov	x2, x0
  44f1f0:	mov	x3, #0x0                   	// #0
  44f1f4:	mov	x0, x19
  44f1f8:	mov	w1, #0x43                  	// #67
  44f1fc:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f200:	str	x0, [sp, #72]
  44f204:	mov	x20, x0
  44f208:	cbz	x0, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f20c:	ldr	x0, [x19, #24]
  44f210:	ldrb	w1, [x0]
  44f214:	cbz	w1, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f218:	add	x1, x0, #0x1
  44f21c:	str	x1, [x19, #24]
  44f220:	ldrb	w0, [x0]
  44f224:	cmp	w0, #0x45
  44f228:	b.ne	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.any
  44f22c:	b	44ed04 <_obstack_memory_used@@Base+0x52a4>
  44f230:	cmp	w0, #0x6e
  44f234:	b.eq	44f5c0 <_obstack_memory_used@@Base+0x5b60>  // b.none
  44f238:	cmp	w0, #0x70
  44f23c:	b.ne	44f318 <_obstack_memory_used@@Base+0x58b8>  // b.any
  44f240:	mov	x0, x19
  44f244:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f248:	mov	x3, #0x0                   	// #0
  44f24c:	mov	x2, x0
  44f250:	mov	w1, #0x4b                  	// #75
  44f254:	mov	x0, x19
  44f258:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f25c:	mov	x20, x0
  44f260:	str	x0, [sp, #72]
  44f264:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44f268:	cmp	w0, #0x46
  44f26c:	b.ne	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.any
  44f270:	ldp	w0, w1, [x19, #40]
  44f274:	cmp	w0, w1
  44f278:	b.ge	44f734 <_obstack_memory_used@@Base+0x5cd4>  // b.tcont
  44f27c:	mov	w2, #0x18                  	// #24
  44f280:	add	w3, w0, #0x1
  44f284:	ldr	x1, [x19, #32]
  44f288:	smull	x0, w0, w2
  44f28c:	mov	w2, #0x2c                  	// #44
  44f290:	add	x20, x1, x0
  44f294:	str	wzr, [x20, #4]
  44f298:	str	w3, [x19, #40]
  44f29c:	str	x20, [sp, #72]
  44f2a0:	str	w2, [x1, x0]
  44f2a4:	ldrb	w0, [x4, #2]
  44f2a8:	sub	w0, w0, #0x30
  44f2ac:	and	w0, w0, #0xff
  44f2b0:	cmp	w0, #0x9
  44f2b4:	cset	w1, ls  // ls = plast
  44f2b8:	strh	w1, [x20, #16]
  44f2bc:	b.hi	44f2cc <_obstack_memory_used@@Base+0x586c>  // b.pmore
  44f2c0:	add	x0, x19, #0x18
  44f2c4:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44f2c8:	ldr	x20, [sp, #72]
  44f2cc:	mov	x0, x19
  44f2d0:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f2d4:	str	x0, [x20, #8]
  44f2d8:	ldr	x1, [sp, #72]
  44f2dc:	ldr	x0, [x1, #8]
  44f2e0:	cbz	x0, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f2e4:	add	x0, x19, #0x18
  44f2e8:	bl	44c2d8 <_obstack_memory_used@@Base+0x2878>
  44f2ec:	ldr	x1, [x19, #24]
  44f2f0:	ldrb	w0, [x1]
  44f2f4:	cbz	w0, 44f304 <_obstack_memory_used@@Base+0x58a4>
  44f2f8:	add	x0, x1, #0x1
  44f2fc:	str	x0, [x19, #24]
  44f300:	ldrb	w0, [x1]
  44f304:	ldr	x20, [sp, #72]
  44f308:	cmp	w0, #0x73
  44f30c:	cset	w0, eq  // eq = none
  44f310:	strh	w0, [x20, #18]
  44f314:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f318:	cmp	w0, #0x69
  44f31c:	b.ne	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.any
  44f320:	ldp	w0, w1, [x19, #40]
  44f324:	cmp	w0, w1
  44f328:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44f32c:	mov	w1, #0x18                  	// #24
  44f330:	add	w5, w0, #0x1
  44f334:	ldr	x3, [x19, #32]
  44f338:	smull	x0, w0, w1
  44f33c:	ldr	w2, [x19, #72]
  44f340:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f344:	add	x1, x1, #0xdf0
  44f348:	add	x20, x3, x0
  44f34c:	add	x1, x1, #0x588
  44f350:	mov	w4, #0x27                  	// #39
  44f354:	str	wzr, [x20, #4]
  44f358:	add	w2, w2, #0x8
  44f35c:	str	w5, [x19, #40]
  44f360:	str	w4, [x3, x0]
  44f364:	str	x1, [x20, #8]
  44f368:	str	w2, [x19, #72]
  44f36c:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f370:	cmp	w0, #0x64
  44f374:	b.ne	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.any
  44f378:	ldp	w0, w1, [x19, #40]
  44f37c:	cmp	w0, w1
  44f380:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44f384:	mov	w1, #0x18                  	// #24
  44f388:	add	w5, w0, #0x1
  44f38c:	ldr	x3, [x19, #32]
  44f390:	smull	x0, w0, w1
  44f394:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f398:	add	x1, x1, #0xdf0
  44f39c:	ldr	w2, [x19, #72]
  44f3a0:	add	x1, x1, #0x4e8
  44f3a4:	add	x20, x3, x0
  44f3a8:	mov	w4, #0x27                  	// #39
  44f3ac:	b	44ee50 <_obstack_memory_used@@Base+0x53f0>
  44f3b0:	ldr	w0, [x19, #80]
  44f3b4:	cbnz	w0, 44f4a8 <_obstack_memory_used@@Base+0x5a48>
  44f3b8:	cbz	x20, 44ec80 <_obstack_memory_used@@Base+0x5220>
  44f3bc:	ldp	w0, w1, [x19, #56]
  44f3c0:	cmp	w0, w1
  44f3c4:	b.ge	44ec80 <_obstack_memory_used@@Base+0x5220>  // b.tcont
  44f3c8:	ldr	x2, [x19, #48]
  44f3cc:	add	w1, w0, #0x1
  44f3d0:	mov	x3, #0x0                   	// #0
  44f3d4:	str	x20, [x2, w0, sxtw #3]
  44f3d8:	str	w1, [x19, #56]
  44f3dc:	ldrb	w0, [x21]
  44f3e0:	sub	w0, w0, #0x49
  44f3e4:	and	w0, w0, #0xff
  44f3e8:	cmp	w0, #0x1
  44f3ec:	b.hi	44f404 <_obstack_memory_used@@Base+0x59a4>  // b.pmore
  44f3f0:	add	x21, x21, #0x1
  44f3f4:	str	x21, [x19, #24]
  44f3f8:	mov	x0, x19
  44f3fc:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44f400:	mov	x3, x0
  44f404:	mov	x2, x20
  44f408:	mov	x0, x19
  44f40c:	mov	w1, #0x4                   	// #4
  44f410:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f414:	mov	x20, x0
  44f418:	str	x0, [sp, #72]
  44f41c:	ldp	x21, x22, [sp, #32]
  44f420:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44f424:	mov	x20, #0x0                   	// #0
  44f428:	b	44f090 <_obstack_memory_used@@Base+0x5630>
  44f42c:	mov	x0, x19
  44f430:	bl	44e5f0 <_obstack_memory_used@@Base+0x4b90>
  44f434:	str	x0, [sp, #72]
  44f438:	mov	x20, x0
  44f43c:	cbz	x0, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f440:	ldr	w0, [x0]
  44f444:	cmp	w0, #0x18
  44f448:	b.ne	44ed04 <_obstack_memory_used@@Base+0x52a4>  // b.any
  44f44c:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f450:	add	x1, x1, #0x1
  44f454:	str	x1, [x19, #24]
  44f458:	mov	x0, x19
  44f45c:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44f460:	mov	x3, x0
  44f464:	mov	x2, x20
  44f468:	mov	x0, x19
  44f46c:	mov	w1, #0x4                   	// #4
  44f470:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f474:	str	x0, [sp, #72]
  44f478:	b	44ee94 <_obstack_memory_used@@Base+0x5434>
  44f47c:	ldr	w20, [x19, #76]
  44f480:	mov	w0, #0x1                   	// #1
  44f484:	str	w0, [x19, #76]
  44f488:	mov	x0, x19
  44f48c:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44f490:	str	w20, [x19, #76]
  44f494:	mov	x20, x0
  44f498:	cbz	x0, 44eba8 <_obstack_memory_used@@Base+0x5148>
  44f49c:	ldr	x1, [x19, #24]
  44f4a0:	ldrb	w0, [x1]
  44f4a4:	b	44f084 <_obstack_memory_used@@Base+0x5624>
  44f4a8:	ldr	w22, [x19, #56]
  44f4ac:	add	x0, x21, #0x1
  44f4b0:	ldr	w20, [x19, #72]
  44f4b4:	str	x23, [sp, #48]
  44f4b8:	str	x0, [x19, #24]
  44f4bc:	mov	x0, x19
  44f4c0:	ldr	w23, [x19, #40]
  44f4c4:	bl	44dd38 <_obstack_memory_used@@Base+0x42d8>
  44f4c8:	ldr	x1, [x19, #24]
  44f4cc:	ldrb	w1, [x1]
  44f4d0:	cmp	w1, #0x49
  44f4d4:	b.eq	44f6b0 <_obstack_memory_used@@Base+0x5c50>  // b.none
  44f4d8:	str	x21, [x19, #24]
  44f4dc:	str	w23, [x19, #40]
  44f4e0:	str	w22, [x19, #56]
  44f4e4:	str	w20, [x19, #72]
  44f4e8:	ldp	x21, x22, [sp, #32]
  44f4ec:	ldr	x23, [sp, #48]
  44f4f0:	ldr	x20, [sp, #72]
  44f4f4:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44f4f8:	ldp	w0, w1, [x19, #40]
  44f4fc:	cmp	w0, w1
  44f500:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44f504:	mov	w1, #0x18                  	// #24
  44f508:	add	w5, w0, #0x1
  44f50c:	ldr	x3, [x19, #32]
  44f510:	smull	x0, w0, w1
  44f514:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f518:	add	x1, x1, #0xdf0
  44f51c:	ldr	w2, [x19, #72]
  44f520:	add	x1, x1, #0x568
  44f524:	add	x20, x3, x0
  44f528:	mov	w4, #0x27                  	// #39
  44f52c:	b	44f354 <_obstack_memory_used@@Base+0x58f4>
  44f530:	ldp	w0, w1, [x19, #40]
  44f534:	cmp	w0, w1
  44f538:	b.ge	44eba8 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  44f53c:	mov	w3, #0x18                  	// #24
  44f540:	add	w1, w0, #0x1
  44f544:	ldr	x2, [x19, #32]
  44f548:	smull	x0, w0, w3
  44f54c:	str	w1, [x19, #40]
  44f550:	mov	w3, #0xe                   	// #14
  44f554:	add	x20, x2, x0
  44f558:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  44f55c:	add	x1, x1, #0x698
  44f560:	str	xzr, [x2, x0]
  44f564:	str	x1, [x20, #8]
  44f568:	str	w3, [x20, #16]
  44f56c:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f570:	ldp	w0, w1, [x19, #40]
  44f574:	cmp	w0, w1
  44f578:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44f57c:	mov	w1, #0x18                  	// #24
  44f580:	add	w5, w0, #0x1
  44f584:	ldr	x3, [x19, #32]
  44f588:	smull	x0, w0, w1
  44f58c:	ldr	w2, [x19, #72]
  44f590:	mov	w4, #0x27                  	// #39
  44f594:	add	x20, x3, x0
  44f598:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f59c:	add	x1, x1, #0xdf0
  44f5a0:	add	w2, w2, #0x4
  44f5a4:	add	x1, x1, #0x528
  44f5a8:	str	wzr, [x20, #4]
  44f5ac:	str	w5, [x19, #40]
  44f5b0:	str	w4, [x3, x0]
  44f5b4:	str	x1, [x20, #8]
  44f5b8:	str	w2, [x19, #72]
  44f5bc:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f5c0:	ldp	w0, w1, [x19, #40]
  44f5c4:	cmp	w0, w1
  44f5c8:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44f5cc:	mov	w1, #0x18                  	// #24
  44f5d0:	add	w5, w0, #0x1
  44f5d4:	ldr	x3, [x19, #32]
  44f5d8:	smull	x0, w0, w1
  44f5dc:	ldr	w2, [x19, #72]
  44f5e0:	mov	w4, #0x27                  	// #39
  44f5e4:	add	x20, x3, x0
  44f5e8:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f5ec:	add	x1, x1, #0xdf0
  44f5f0:	add	w2, w2, #0x11
  44f5f4:	add	x1, x1, #0x5a8
  44f5f8:	str	wzr, [x20, #4]
  44f5fc:	str	w5, [x19, #40]
  44f600:	str	w4, [x3, x0]
  44f604:	str	x1, [x20, #8]
  44f608:	str	w2, [x19, #72]
  44f60c:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f610:	ldp	w0, w1, [x19, #40]
  44f614:	cmp	w0, w1
  44f618:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44f61c:	mov	w1, #0x18                  	// #24
  44f620:	add	w5, w0, #0x1
  44f624:	ldr	x3, [x19, #32]
  44f628:	smull	x0, w0, w1
  44f62c:	ldr	w2, [x19, #72]
  44f630:	mov	w4, #0x27                  	// #39
  44f634:	add	x20, x3, x0
  44f638:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f63c:	add	x1, x1, #0xdf0
  44f640:	add	w2, w2, #0xa
  44f644:	add	x1, x1, #0x508
  44f648:	str	wzr, [x20, #4]
  44f64c:	str	w5, [x19, #40]
  44f650:	str	w4, [x3, x0]
  44f654:	str	x1, [x20, #8]
  44f658:	str	w2, [x19, #72]
  44f65c:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f660:	ldp	w0, w1, [x19, #40]
  44f664:	cmp	w0, w1
  44f668:	b.ge	44f748 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  44f66c:	mov	w1, #0x18                  	// #24
  44f670:	add	w5, w0, #0x1
  44f674:	ldr	x3, [x19, #32]
  44f678:	smull	x0, w0, w1
  44f67c:	ldr	w2, [x19, #72]
  44f680:	mov	w4, #0x27                  	// #39
  44f684:	add	x20, x3, x0
  44f688:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f68c:	add	x1, x1, #0xdf0
  44f690:	add	w2, w2, #0x7
  44f694:	add	x1, x1, #0x548
  44f698:	str	wzr, [x20, #4]
  44f69c:	str	w5, [x19, #40]
  44f6a0:	str	w4, [x3, x0]
  44f6a4:	str	x1, [x20, #8]
  44f6a8:	str	w2, [x19, #72]
  44f6ac:	b	44ebac <_obstack_memory_used@@Base+0x514c>
  44f6b0:	ldr	x2, [sp, #72]
  44f6b4:	cbz	x2, 44f728 <_obstack_memory_used@@Base+0x5cc8>
  44f6b8:	ldp	w4, w1, [x19, #56]
  44f6bc:	cmp	w4, w1
  44f6c0:	b.ge	44f728 <_obstack_memory_used@@Base+0x5cc8>  // b.tcont
  44f6c4:	ldr	x6, [x19, #48]
  44f6c8:	add	w5, w4, #0x1
  44f6cc:	mov	x3, x0
  44f6d0:	mov	w1, #0x4                   	// #4
  44f6d4:	mov	x0, x19
  44f6d8:	str	x2, [x6, w4, sxtw #3]
  44f6dc:	str	w5, [x19, #56]
  44f6e0:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f6e4:	mov	x20, x0
  44f6e8:	str	x0, [sp, #72]
  44f6ec:	ldp	x21, x22, [sp, #32]
  44f6f0:	ldr	x23, [sp, #48]
  44f6f4:	b	44ed00 <_obstack_memory_used@@Base+0x52a0>
  44f6f8:	add	x4, x4, #0x3
  44f6fc:	stp	x21, x22, [sp, #32]
  44f700:	mov	w1, #0x1                   	// #1
  44f704:	ldr	w21, [x19, #76]
  44f708:	mov	x0, x19
  44f70c:	str	x4, [x19, #24]
  44f710:	str	w1, [x19, #76]
  44f714:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44f718:	mov	x20, x0
  44f71c:	str	w21, [x19, #76]
  44f720:	ldp	x21, x22, [sp, #32]
  44f724:	b	44f188 <_obstack_memory_used@@Base+0x5728>
  44f728:	ldp	x21, x22, [sp, #32]
  44f72c:	ldr	x23, [sp, #48]
  44f730:	b	44eba8 <_obstack_memory_used@@Base+0x5148>
  44f734:	mov	x0, #0x0                   	// #0
  44f738:	stp	x21, x22, [sp, #32]
  44f73c:	str	x23, [sp, #48]
  44f740:	str	wzr, [x0]
  44f744:	brk	#0x3e8
  44f748:	mov	x0, #0x0                   	// #0
  44f74c:	str	xzr, [sp, #72]
  44f750:	stp	x21, x22, [sp, #32]
  44f754:	str	x23, [sp, #48]
  44f758:	ldr	x0, [x0, #8]
  44f75c:	brk	#0x3e8
  44f760:	stp	x29, x30, [sp, #-32]!
  44f764:	mov	x29, sp
  44f768:	ldr	x1, [x0, #24]
  44f76c:	stp	x19, x20, [sp, #16]
  44f770:	mov	x19, x0
  44f774:	ldrb	w10, [x1]
  44f778:	cbz	w10, 44f83c <_obstack_memory_used@@Base+0x5ddc>
  44f77c:	add	x2, x1, #0x1
  44f780:	str	x2, [x0, #24]
  44f784:	ldrb	w10, [x1, #1]
  44f788:	ldrb	w8, [x1]
  44f78c:	cbnz	w10, 44f844 <_obstack_memory_used@@Base+0x5de4>
  44f790:	adrp	x5, 48a000 <_obstack_memory_used@@Base+0x405a0>
  44f794:	add	x5, x5, #0xdf0
  44f798:	add	x5, x5, #0x5c8
  44f79c:	mov	w4, #0x43                  	// #67
  44f7a0:	mov	w2, #0x0                   	// #0
  44f7a4:	mov	w7, #0x18                  	// #24
  44f7a8:	sub	w1, w4, w2
  44f7ac:	add	w1, w1, w1, lsr #31
  44f7b0:	add	w1, w2, w1, asr #1
  44f7b4:	smull	x3, w1, w7
  44f7b8:	add	x9, x5, x3
  44f7bc:	ldr	x3, [x5, x3]
  44f7c0:	ldrb	w6, [x3]
  44f7c4:	cmp	w6, w8
  44f7c8:	b.eq	44f7ec <_obstack_memory_used@@Base+0x5d8c>  // b.none
  44f7cc:	b.ls	44f834 <_obstack_memory_used@@Base+0x5dd4>  // b.plast
  44f7d0:	mov	w4, w1
  44f7d4:	cmp	w2, w4
  44f7d8:	b.ne	44f7a8 <_obstack_memory_used@@Base+0x5d48>  // b.any
  44f7dc:	mov	x0, #0x0                   	// #0
  44f7e0:	ldp	x19, x20, [sp, #16]
  44f7e4:	ldp	x29, x30, [sp], #32
  44f7e8:	ret
  44f7ec:	ldrb	w3, [x3, #1]
  44f7f0:	cmp	w3, w10
  44f7f4:	b.ne	44f7cc <_obstack_memory_used@@Base+0x5d6c>  // b.any
  44f7f8:	ldp	w0, w1, [x19, #40]
  44f7fc:	cmp	w0, w1
  44f800:	b.ge	44f7dc <_obstack_memory_used@@Base+0x5d7c>  // b.tcont
  44f804:	ldr	x2, [x19, #32]
  44f808:	smull	x7, w0, w7
  44f80c:	add	w1, w0, #0x1
  44f810:	mov	w3, #0x32                  	// #50
  44f814:	add	x0, x2, x7
  44f818:	str	wzr, [x0, #4]
  44f81c:	str	w1, [x19, #40]
  44f820:	str	w3, [x2, x7]
  44f824:	str	x9, [x0, #8]
  44f828:	ldp	x19, x20, [sp, #16]
  44f82c:	ldp	x29, x30, [sp], #32
  44f830:	ret
  44f834:	add	w2, w1, #0x1
  44f838:	b	44f7d4 <_obstack_memory_used@@Base+0x5d74>
  44f83c:	mov	w8, #0x0                   	// #0
  44f840:	b	44f790 <_obstack_memory_used@@Base+0x5d30>
  44f844:	add	x2, x1, #0x2
  44f848:	str	x2, [x0, #24]
  44f84c:	cmp	w8, #0x76
  44f850:	ldrb	w10, [x1, #1]
  44f854:	b.ne	44f8b0 <_obstack_memory_used@@Base+0x5e50>  // b.any
  44f858:	sub	w11, w10, #0x30
  44f85c:	and	w1, w11, #0xff
  44f860:	cmp	w1, #0x9
  44f864:	b.hi	44f790 <_obstack_memory_used@@Base+0x5d30>  // b.pmore
  44f868:	bl	44c508 <_obstack_memory_used@@Base+0x2aa8>
  44f86c:	mov	x2, x0
  44f870:	ldp	w1, w0, [x19, #40]
  44f874:	cmp	w1, w0
  44f878:	b.ge	44f7dc <_obstack_memory_used@@Base+0x5d7c>  // b.tcont
  44f87c:	mov	w0, #0x18                  	// #24
  44f880:	add	w4, w1, #0x1
  44f884:	ldr	x3, [x19, #32]
  44f888:	smull	x1, w1, w0
  44f88c:	add	x0, x3, x1
  44f890:	str	wzr, [x0, #4]
  44f894:	str	w4, [x19, #40]
  44f898:	cbz	x2, 44f7dc <_obstack_memory_used@@Base+0x5d7c>
  44f89c:	mov	x4, #0x33                  	// #51
  44f8a0:	str	x4, [x3, x1]
  44f8a4:	str	w11, [x0, #8]
  44f8a8:	str	x2, [x0, #16]
  44f8ac:	b	44f7e0 <_obstack_memory_used@@Base+0x5d80>
  44f8b0:	cmp	w10, #0x76
  44f8b4:	mov	w1, #0x63                  	// #99
  44f8b8:	ccmp	w8, w1, #0x0, eq  // eq = none
  44f8bc:	b.ne	44f790 <_obstack_memory_used@@Base+0x5d30>  // b.any
  44f8c0:	ldp	w1, w20, [x0, #76]
  44f8c4:	cmp	w1, #0x0
  44f8c8:	cset	w1, eq  // eq = none
  44f8cc:	str	w1, [x0, #80]
  44f8d0:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f8d4:	mov	x2, x0
  44f8d8:	ldr	w1, [x19, #80]
  44f8dc:	mov	x3, #0x0                   	// #0
  44f8e0:	cbz	w1, 44f900 <_obstack_memory_used@@Base+0x5ea0>
  44f8e4:	mov	x0, x19
  44f8e8:	mov	w1, #0x35                  	// #53
  44f8ec:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f8f0:	str	w20, [x19, #80]
  44f8f4:	ldp	x19, x20, [sp, #16]
  44f8f8:	ldp	x29, x30, [sp], #32
  44f8fc:	ret
  44f900:	mov	x0, x19
  44f904:	mov	w1, #0x34                  	// #52
  44f908:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f90c:	str	w20, [x19, #80]
  44f910:	b	44f8f4 <_obstack_memory_used@@Base+0x5e94>
  44f914:	nop
  44f918:	stp	x29, x30, [sp, #-64]!
  44f91c:	mov	x29, sp
  44f920:	stp	x19, x20, [sp, #16]
  44f924:	mov	x19, x0
  44f928:	mov	w0, #0x2e                  	// #46
  44f92c:	str	xzr, [sp, #56]
  44f930:	ldr	x2, [x19, #24]
  44f934:	ldrb	w1, [x2]
  44f938:	cmp	w1, #0x45
  44f93c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44f940:	ccmp	w1, w0, #0x4, ne  // ne = any
  44f944:	b.eq	44f9d8 <_obstack_memory_used@@Base+0x5f78>  // b.none
  44f948:	add	x20, sp, #0x38
  44f94c:	stp	x21, x22, [sp, #32]
  44f950:	mov	w22, w0
  44f954:	mov	w21, #0x4f                  	// #79
  44f958:	cmp	w1, #0x52
  44f95c:	mov	x0, x19
  44f960:	ccmp	w1, w21, #0x4, ne  // ne = any
  44f964:	b.ne	44f974 <_obstack_memory_used@@Base+0x5f14>  // b.any
  44f968:	ldrb	w1, [x2, #1]
  44f96c:	cmp	w1, #0x45
  44f970:	b.eq	44f9b4 <_obstack_memory_used@@Base+0x5f54>  // b.none
  44f974:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44f978:	mov	x2, x0
  44f97c:	mov	x3, #0x0                   	// #0
  44f980:	mov	x0, x19
  44f984:	mov	w1, #0x2e                  	// #46
  44f988:	cbz	x2, 44f9d4 <_obstack_memory_used@@Base+0x5f74>
  44f98c:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44f990:	str	x0, [x20]
  44f994:	add	x20, x0, #0x10
  44f998:	cbz	x0, 44f9d4 <_obstack_memory_used@@Base+0x5f74>
  44f99c:	ldr	x2, [x19, #24]
  44f9a0:	ldrb	w1, [x2]
  44f9a4:	cmp	w1, #0x45
  44f9a8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44f9ac:	ccmp	w1, w22, #0x4, ne  // ne = any
  44f9b0:	b.ne	44f958 <_obstack_memory_used@@Base+0x5ef8>  // b.any
  44f9b4:	ldr	x0, [sp, #56]
  44f9b8:	cbz	x0, 44f9d4 <_obstack_memory_used@@Base+0x5f74>
  44f9bc:	ldr	x1, [x0, #16]
  44f9c0:	cbz	x1, 44f9e8 <_obstack_memory_used@@Base+0x5f88>
  44f9c4:	ldp	x21, x22, [sp, #32]
  44f9c8:	ldp	x19, x20, [sp, #16]
  44f9cc:	ldp	x29, x30, [sp], #64
  44f9d0:	ret
  44f9d4:	ldp	x21, x22, [sp, #32]
  44f9d8:	mov	x0, #0x0                   	// #0
  44f9dc:	ldp	x19, x20, [sp, #16]
  44f9e0:	ldp	x29, x30, [sp], #64
  44f9e4:	ret
  44f9e8:	ldr	x1, [x0, #8]
  44f9ec:	ldr	w2, [x1]
  44f9f0:	cmp	w2, #0x27
  44f9f4:	b.ne	44f9c4 <_obstack_memory_used@@Base+0x5f64>  // b.any
  44f9f8:	ldr	x1, [x1, #8]
  44f9fc:	ldr	w2, [x1, #28]
  44fa00:	cmp	w2, #0x9
  44fa04:	b.ne	44f9c4 <_obstack_memory_used@@Base+0x5f64>  // b.any
  44fa08:	ldr	w2, [x1, #8]
  44fa0c:	ldr	w1, [x19, #72]
  44fa10:	ldp	x21, x22, [sp, #32]
  44fa14:	sub	w1, w1, w2
  44fa18:	str	w1, [x19, #72]
  44fa1c:	str	xzr, [x0, #8]
  44fa20:	b	44f9c8 <_obstack_memory_used@@Base+0x5f68>
  44fa24:	nop
  44fa28:	stp	x29, x30, [sp, #-96]!
  44fa2c:	cmp	w2, #0x0
  44fa30:	mov	x29, sp
  44fa34:	stp	x19, x20, [sp, #16]
  44fa38:	mov	x19, x0
  44fa3c:	mov	w0, #0x1b                  	// #27
  44fa40:	stp	x21, x22, [sp, #32]
  44fa44:	mov	x20, x1
  44fa48:	mov	w22, #0x1c                  	// #28
  44fa4c:	ldr	x4, [x19, #24]
  44fa50:	stp	x23, x24, [sp, #48]
  44fa54:	mov	w23, #0x1d                  	// #29
  44fa58:	stp	x25, x26, [sp, #64]
  44fa5c:	mov	w25, #0x1e                  	// #30
  44fa60:	csel	w25, w25, w0, ne  // ne = any
  44fa64:	ldrb	w5, [x4]
  44fa68:	mov	w0, #0x1a                  	// #26
  44fa6c:	csel	w23, w23, w0, ne  // ne = any
  44fa70:	mov	w0, #0x19                  	// #25
  44fa74:	mov	w24, w2
  44fa78:	csel	w22, w22, w0, ne  // ne = any
  44fa7c:	mov	x21, x1
  44fa80:	mov	x0, x4
  44fa84:	mov	w26, #0x1                   	// #1
  44fa88:	bl	44ca18 <_obstack_memory_used@@Base+0x2fb8>
  44fa8c:	cbz	w0, 44fba8 <_obstack_memory_used@@Base+0x6148>
  44fa90:	add	x0, x4, #0x1
  44fa94:	str	x0, [x19, #24]
  44fa98:	cmp	w5, #0x72
  44fa9c:	b.eq	44fb68 <_obstack_memory_used@@Base+0x6108>  // b.none
  44faa0:	cmp	w5, #0x56
  44faa4:	b.eq	44fc08 <_obstack_memory_used@@Base+0x61a8>  // b.none
  44faa8:	cmp	w5, #0x4b
  44faac:	b.eq	44fc20 <_obstack_memory_used@@Base+0x61c0>  // b.none
  44fab0:	ldrb	w0, [x4, #1]
  44fab4:	cbz	w0, 44fb48 <_obstack_memory_used@@Base+0x60e8>
  44fab8:	add	x0, x4, #0x2
  44fabc:	str	x0, [x19, #24]
  44fac0:	ldrb	w0, [x4, #1]
  44fac4:	cmp	w0, #0x78
  44fac8:	b.eq	44fc38 <_obstack_memory_used@@Base+0x61d8>  // b.none
  44facc:	and	w1, w0, #0xffffffdf
  44fad0:	cmp	w1, #0x4f
  44fad4:	and	w1, w1, #0xff
  44fad8:	b.ne	44fc50 <_obstack_memory_used@@Base+0x61f0>  // b.any
  44fadc:	ldr	w2, [x19, #72]
  44fae0:	cmp	w0, #0x4f
  44fae4:	add	w0, w2, #0x9
  44fae8:	str	w0, [x19, #72]
  44faec:	b.ne	44fc94 <_obstack_memory_used@@Base+0x6234>  // b.any
  44faf0:	str	x27, [sp, #80]
  44faf4:	mov	x0, x19
  44faf8:	ldr	w27, [x19, #76]
  44fafc:	str	w26, [x19, #76]
  44fb00:	bl	44d560 <_obstack_memory_used@@Base+0x3b00>
  44fb04:	str	w27, [x19, #76]
  44fb08:	mov	x3, x0
  44fb0c:	cbz	x0, 44fcac <_obstack_memory_used@@Base+0x624c>
  44fb10:	ldr	x0, [x19, #24]
  44fb14:	ldrb	w1, [x0]
  44fb18:	cmp	w1, #0x45
  44fb1c:	b.ne	44fcac <_obstack_memory_used@@Base+0x624c>  // b.any
  44fb20:	add	x0, x0, #0x1
  44fb24:	mov	w1, #0x4f                  	// #79
  44fb28:	ldr	x27, [sp, #80]
  44fb2c:	str	x0, [x19, #24]
  44fb30:	mov	x2, #0x0                   	// #0
  44fb34:	mov	x0, x19
  44fb38:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44fb3c:	str	x0, [x20]
  44fb40:	cbnz	x0, 44fb90 <_obstack_memory_used@@Base+0x6130>
  44fb44:	nop
  44fb48:	mov	x20, #0x0                   	// #0
  44fb4c:	mov	x0, x20
  44fb50:	ldp	x19, x20, [sp, #16]
  44fb54:	ldp	x21, x22, [sp, #32]
  44fb58:	ldp	x23, x24, [sp, #48]
  44fb5c:	ldp	x25, x26, [sp, #64]
  44fb60:	ldp	x29, x30, [sp], #96
  44fb64:	ret
  44fb68:	ldr	w0, [x19, #72]
  44fb6c:	mov	w1, w22
  44fb70:	mov	x3, #0x0                   	// #0
  44fb74:	add	w0, w0, #0x9
  44fb78:	str	w0, [x19, #72]
  44fb7c:	mov	x0, x19
  44fb80:	mov	x2, #0x0                   	// #0
  44fb84:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44fb88:	str	x0, [x20]
  44fb8c:	cbz	x0, 44fb48 <_obstack_memory_used@@Base+0x60e8>
  44fb90:	ldr	x4, [x19, #24]
  44fb94:	add	x20, x0, #0x8
  44fb98:	mov	x0, x4
  44fb9c:	ldrb	w5, [x4]
  44fba0:	bl	44ca18 <_obstack_memory_used@@Base+0x2fb8>
  44fba4:	cbnz	w0, 44fa90 <_obstack_memory_used@@Base+0x6030>
  44fba8:	cmp	w5, #0x46
  44fbac:	eor	w24, w24, #0x1
  44fbb0:	cset	w0, eq  // eq = none
  44fbb4:	tst	w24, w0
  44fbb8:	b.eq	44fb4c <_obstack_memory_used@@Base+0x60ec>  // b.none
  44fbbc:	cmp	x20, x21
  44fbc0:	b.eq	44fb4c <_obstack_memory_used@@Base+0x60ec>  // b.none
  44fbc4:	mov	w3, #0x1d                  	// #29
  44fbc8:	mov	w2, #0x1e                  	// #30
  44fbcc:	mov	w1, #0x1c                  	// #28
  44fbd0:	b	44fbe8 <_obstack_memory_used@@Base+0x6188>
  44fbd4:	cmp	w0, #0x19
  44fbd8:	b.eq	44fca4 <_obstack_memory_used@@Base+0x6244>  // b.none
  44fbdc:	add	x21, x21, #0x8
  44fbe0:	cmp	x20, x21
  44fbe4:	b.eq	44fb4c <_obstack_memory_used@@Base+0x60ec>  // b.none
  44fbe8:	ldr	x21, [x21]
  44fbec:	ldr	w0, [x21]
  44fbf0:	cmp	w0, #0x1a
  44fbf4:	b.eq	44fc9c <_obstack_memory_used@@Base+0x623c>  // b.none
  44fbf8:	cmp	w0, #0x1b
  44fbfc:	b.ne	44fbd4 <_obstack_memory_used@@Base+0x6174>  // b.any
  44fc00:	str	w2, [x21]
  44fc04:	b	44fbdc <_obstack_memory_used@@Base+0x617c>
  44fc08:	ldr	w0, [x19, #72]
  44fc0c:	mov	w1, w23
  44fc10:	mov	x3, #0x0                   	// #0
  44fc14:	add	w0, w0, #0x9
  44fc18:	str	w0, [x19, #72]
  44fc1c:	b	44fb7c <_obstack_memory_used@@Base+0x611c>
  44fc20:	ldr	w0, [x19, #72]
  44fc24:	mov	w1, w25
  44fc28:	mov	x3, #0x0                   	// #0
  44fc2c:	add	w0, w0, #0x6
  44fc30:	str	w0, [x19, #72]
  44fc34:	b	44fb7c <_obstack_memory_used@@Base+0x611c>
  44fc38:	ldr	w0, [x19, #72]
  44fc3c:	mov	x3, #0x0                   	// #0
  44fc40:	mov	w1, #0x4d                  	// #77
  44fc44:	add	w0, w0, #0x11
  44fc48:	str	w0, [x19, #72]
  44fc4c:	b	44fb7c <_obstack_memory_used@@Base+0x611c>
  44fc50:	cmp	w0, #0x77
  44fc54:	b.ne	44fb48 <_obstack_memory_used@@Base+0x60e8>  // b.any
  44fc58:	ldr	w1, [x19, #72]
  44fc5c:	mov	x0, x19
  44fc60:	add	w1, w1, #0x6
  44fc64:	str	w1, [x19, #72]
  44fc68:	bl	44f918 <_obstack_memory_used@@Base+0x5eb8>
  44fc6c:	mov	x3, x0
  44fc70:	cbz	x0, 44fb48 <_obstack_memory_used@@Base+0x60e8>
  44fc74:	ldr	x0, [x19, #24]
  44fc78:	ldrb	w1, [x0]
  44fc7c:	cmp	w1, #0x45
  44fc80:	b.ne	44fb48 <_obstack_memory_used@@Base+0x60e8>  // b.any
  44fc84:	add	x0, x0, #0x1
  44fc88:	mov	w1, #0x50                  	// #80
  44fc8c:	str	x0, [x19, #24]
  44fc90:	b	44fb7c <_obstack_memory_used@@Base+0x611c>
  44fc94:	mov	x3, #0x0                   	// #0
  44fc98:	b	44fb7c <_obstack_memory_used@@Base+0x611c>
  44fc9c:	str	w3, [x21]
  44fca0:	b	44fbdc <_obstack_memory_used@@Base+0x617c>
  44fca4:	str	w1, [x21]
  44fca8:	b	44fbdc <_obstack_memory_used@@Base+0x617c>
  44fcac:	ldr	x27, [sp, #80]
  44fcb0:	b	44fb48 <_obstack_memory_used@@Base+0x60e8>
  44fcb4:	nop
  44fcb8:	stp	x29, x30, [sp, #-32]!
  44fcbc:	mov	x29, sp
  44fcc0:	stp	x19, x20, [sp, #16]
  44fcc4:	mov	x19, x0
  44fcc8:	ldr	x0, [x0, #24]
  44fccc:	ldrb	w2, [x0]
  44fcd0:	cmp	w2, #0x4a
  44fcd4:	b.eq	44fd38 <_obstack_memory_used@@Base+0x62d8>  // b.none
  44fcd8:	cbz	w1, 44fd14 <_obstack_memory_used@@Base+0x62b4>
  44fcdc:	mov	x0, x19
  44fce0:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  44fce4:	mov	x20, x0
  44fce8:	cbz	x0, 44fd28 <_obstack_memory_used@@Base+0x62c8>
  44fcec:	mov	x0, x19
  44fcf0:	bl	44f918 <_obstack_memory_used@@Base+0x5eb8>
  44fcf4:	mov	x3, x0
  44fcf8:	cbz	x0, 44fd28 <_obstack_memory_used@@Base+0x62c8>
  44fcfc:	mov	x2, x20
  44fd00:	mov	x0, x19
  44fd04:	ldp	x19, x20, [sp, #16]
  44fd08:	mov	w1, #0x29                  	// #41
  44fd0c:	ldp	x29, x30, [sp], #32
  44fd10:	b	44c058 <_obstack_memory_used@@Base+0x25f8>
  44fd14:	mov	x0, x19
  44fd18:	mov	x20, #0x0                   	// #0
  44fd1c:	bl	44f918 <_obstack_memory_used@@Base+0x5eb8>
  44fd20:	mov	x3, x0
  44fd24:	cbnz	x0, 44fcfc <_obstack_memory_used@@Base+0x629c>
  44fd28:	mov	x0, #0x0                   	// #0
  44fd2c:	ldp	x19, x20, [sp, #16]
  44fd30:	ldp	x29, x30, [sp], #32
  44fd34:	ret
  44fd38:	add	x0, x0, #0x1
  44fd3c:	str	x0, [x19, #24]
  44fd40:	b	44fcdc <_obstack_memory_used@@Base+0x627c>
  44fd44:	nop
  44fd48:	stp	x29, x30, [sp, #-32]!
  44fd4c:	mov	x29, sp
  44fd50:	str	x19, [sp, #16]
  44fd54:	mov	x19, x0
  44fd58:	ldr	w0, [x0, #16]
  44fd5c:	tbnz	w0, #18, 44fd98 <_obstack_memory_used@@Base+0x6338>
  44fd60:	ldr	w1, [x19, #84]
  44fd64:	cmp	w1, #0x800
  44fd68:	b.hi	44fda8 <_obstack_memory_used@@Base+0x6348>  // b.pmore
  44fd6c:	ldr	x2, [x19, #24]
  44fd70:	add	w0, w1, #0x1
  44fd74:	str	w0, [x19, #84]
  44fd78:	mov	x0, #0x0                   	// #0
  44fd7c:	ldrb	w3, [x2]
  44fd80:	cmp	w3, #0x46
  44fd84:	b.eq	44fdb8 <_obstack_memory_used@@Base+0x6358>  // b.none
  44fd88:	str	w1, [x19, #84]
  44fd8c:	ldr	x19, [sp, #16]
  44fd90:	ldp	x29, x30, [sp], #32
  44fd94:	ret
  44fd98:	ldr	x2, [x19, #24]
  44fd9c:	ldrb	w0, [x2]
  44fda0:	cmp	w0, #0x46
  44fda4:	b.eq	44fdb8 <_obstack_memory_used@@Base+0x6358>  // b.none
  44fda8:	mov	x0, #0x0                   	// #0
  44fdac:	ldr	x19, [sp, #16]
  44fdb0:	ldp	x29, x30, [sp], #32
  44fdb4:	ret
  44fdb8:	add	x4, x2, #0x1
  44fdbc:	str	x4, [x19, #24]
  44fdc0:	add	x3, x2, #0x2
  44fdc4:	mov	w1, #0x1                   	// #1
  44fdc8:	ldrb	w2, [x2, #1]
  44fdcc:	mov	x0, x19
  44fdd0:	cmp	w2, #0x59
  44fdd4:	csel	x2, x3, x4, eq  // eq = none
  44fdd8:	str	x2, [x19, #24]
  44fddc:	bl	44fcb8 <_obstack_memory_used@@Base+0x6258>
  44fde0:	mov	x1, x0
  44fde4:	mov	x0, x19
  44fde8:	bl	44c0e0 <_obstack_memory_used@@Base+0x2680>
  44fdec:	ldr	x1, [x19, #24]
  44fdf0:	ldrb	w2, [x1]
  44fdf4:	cmp	w2, #0x45
  44fdf8:	b.eq	44fe18 <_obstack_memory_used@@Base+0x63b8>  // b.none
  44fdfc:	mov	x0, #0x0                   	// #0
  44fe00:	ldr	w1, [x19, #16]
  44fe04:	tbnz	w1, #18, 44fdac <_obstack_memory_used@@Base+0x634c>
  44fe08:	ldr	w1, [x19, #84]
  44fe0c:	sub	w1, w1, #0x1
  44fe10:	str	w1, [x19, #84]
  44fe14:	b	44fd8c <_obstack_memory_used@@Base+0x632c>
  44fe18:	add	x1, x1, #0x1
  44fe1c:	str	x1, [x19, #24]
  44fe20:	b	44fe00 <_obstack_memory_used@@Base+0x63a0>
  44fe24:	nop
  44fe28:	stp	x29, x30, [sp, #-48]!
  44fe2c:	mov	x29, sp
  44fe30:	ldr	x3, [x0, #24]
  44fe34:	stp	x19, x20, [sp, #16]
  44fe38:	mov	x19, x0
  44fe3c:	ldrb	w2, [x3]
  44fe40:	sub	w1, w2, #0x30
  44fe44:	and	w1, w1, #0xff
  44fe48:	cmp	w1, #0x9
  44fe4c:	b.ls	44ff5c <_obstack_memory_used@@Base+0x64fc>  // b.plast
  44fe50:	sub	w1, w2, #0x61
  44fe54:	and	w1, w1, #0xff
  44fe58:	cmp	w1, #0x19
  44fe5c:	b.hi	44fea4 <_obstack_memory_used@@Base+0x6444>  // b.pmore
  44fe60:	cmp	w2, #0x6f
  44fe64:	b.eq	450024 <_obstack_memory_used@@Base+0x65c4>  // b.none
  44fe68:	mov	x0, x19
  44fe6c:	bl	44f760 <_obstack_memory_used@@Base+0x5d00>
  44fe70:	mov	x20, x0
  44fe74:	cbz	x0, 44fe84 <_obstack_memory_used@@Base+0x6424>
  44fe78:	ldr	w0, [x0]
  44fe7c:	cmp	w0, #0x32
  44fe80:	b.eq	44ff88 <_obstack_memory_used@@Base+0x6528>  // b.none
  44fe84:	ldr	x0, [x19, #24]
  44fe88:	ldrb	w1, [x0]
  44fe8c:	cmp	w1, #0x42
  44fe90:	b.eq	44ff74 <_obstack_memory_used@@Base+0x6514>  // b.none
  44fe94:	mov	x0, x20
  44fe98:	ldp	x19, x20, [sp, #16]
  44fe9c:	ldp	x29, x30, [sp], #48
  44fea0:	ret
  44fea4:	sub	w1, w2, #0x43
  44fea8:	and	w1, w1, #0xff
  44feac:	cmp	w1, #0x1
  44feb0:	b.ls	45003c <_obstack_memory_used@@Base+0x65dc>  // b.plast
  44feb4:	cmp	w2, #0x4c
  44feb8:	b.eq	44fff0 <_obstack_memory_used@@Base+0x6590>  // b.none
  44febc:	cmp	w2, #0x55
  44fec0:	b.ne	450010 <_obstack_memory_used@@Base+0x65b0>  // b.any
  44fec4:	ldrb	w1, [x3, #1]
  44fec8:	cmp	w1, #0x6c
  44fecc:	b.eq	450100 <_obstack_memory_used@@Base+0x66a0>  // b.none
  44fed0:	cmp	w1, #0x74
  44fed4:	b.ne	450010 <_obstack_memory_used@@Base+0x65b0>  // b.any
  44fed8:	add	x1, x3, #0x1
  44fedc:	str	x1, [x0, #24]
  44fee0:	mov	x20, #0x0                   	// #0
  44fee4:	ldrb	w1, [x3, #1]
  44fee8:	cmp	w1, #0x74
  44feec:	b.ne	44fe8c <_obstack_memory_used@@Base+0x642c>  // b.any
  44fef0:	add	x3, x3, #0x2
  44fef4:	str	x3, [x0, #24]
  44fef8:	bl	44c410 <_obstack_memory_used@@Base+0x29b0>
  44fefc:	tbnz	w0, #31, 44fe84 <_obstack_memory_used@@Base+0x6424>
  44ff00:	ldp	w1, w2, [x19, #40]
  44ff04:	cmp	w1, w2
  44ff08:	b.ge	4502c8 <_obstack_memory_used@@Base+0x6868>  // b.tcont
  44ff0c:	ldp	x7, x3, [x19, #24]
  44ff10:	mov	w2, #0x18                  	// #24
  44ff14:	add	w6, w1, #0x1
  44ff18:	mov	w4, #0x48                  	// #72
  44ff1c:	smull	x1, w1, w2
  44ff20:	sxtw	x0, w0
  44ff24:	ldp	w2, w5, [x19, #56]
  44ff28:	add	x20, x3, x1
  44ff2c:	cmp	w2, w5
  44ff30:	str	wzr, [x20, #4]
  44ff34:	str	w6, [x19, #40]
  44ff38:	str	w4, [x3, x1]
  44ff3c:	str	x0, [x20, #8]
  44ff40:	b.ge	4502bc <_obstack_memory_used@@Base+0x685c>  // b.tcont
  44ff44:	ldr	x1, [x19, #48]
  44ff48:	add	w0, w2, #0x1
  44ff4c:	str	x20, [x1, w2, sxtw #3]
  44ff50:	str	w0, [x19, #56]
  44ff54:	ldrb	w1, [x7]
  44ff58:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  44ff5c:	bl	44c508 <_obstack_memory_used@@Base+0x2aa8>
  44ff60:	mov	x20, x0
  44ff64:	ldr	x3, [x19, #24]
  44ff68:	ldrb	w1, [x3]
  44ff6c:	cmp	w1, #0x42
  44ff70:	b.ne	44fe94 <_obstack_memory_used@@Base+0x6434>  // b.any
  44ff74:	mov	x1, x20
  44ff78:	mov	x0, x19
  44ff7c:	ldp	x19, x20, [sp, #16]
  44ff80:	ldp	x29, x30, [sp], #48
  44ff84:	b	44c688 <_obstack_memory_used@@Base+0x2c28>
  44ff88:	ldr	x1, [x20, #8]
  44ff8c:	ldr	w0, [x19, #72]
  44ff90:	ldr	x2, [x1]
  44ff94:	add	w0, w0, #0x7
  44ff98:	ldr	w1, [x1, #16]
  44ff9c:	add	w0, w0, w1
  44ffa0:	str	w0, [x19, #72]
  44ffa4:	ldrb	w0, [x2]
  44ffa8:	cmp	w0, #0x6c
  44ffac:	b.ne	44fe84 <_obstack_memory_used@@Base+0x6424>  // b.any
  44ffb0:	ldrb	w0, [x2, #1]
  44ffb4:	cmp	w0, #0x69
  44ffb8:	b.ne	44fe84 <_obstack_memory_used@@Base+0x6424>  // b.any
  44ffbc:	ldrb	w0, [x2, #2]
  44ffc0:	cbnz	w0, 44fe84 <_obstack_memory_used@@Base+0x6424>
  44ffc4:	mov	x0, x19
  44ffc8:	bl	44c508 <_obstack_memory_used@@Base+0x2aa8>
  44ffcc:	mov	x2, x20
  44ffd0:	mov	x3, x0
  44ffd4:	mov	w1, #0x37                  	// #55
  44ffd8:	mov	x0, x19
  44ffdc:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  44ffe0:	mov	x20, x0
  44ffe4:	ldr	x3, [x19, #24]
  44ffe8:	ldrb	w1, [x3]
  44ffec:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  44fff0:	add	x3, x3, #0x1
  44fff4:	str	x3, [x0, #24]
  44fff8:	bl	44c508 <_obstack_memory_used@@Base+0x2aa8>
  44fffc:	mov	x20, x0
  450000:	cbz	x0, 450010 <_obstack_memory_used@@Base+0x65b0>
  450004:	mov	x0, x19
  450008:	bl	44ca70 <_obstack_memory_used@@Base+0x3010>
  45000c:	cbnz	w0, 44fe84 <_obstack_memory_used@@Base+0x6424>
  450010:	mov	x20, #0x0                   	// #0
  450014:	mov	x0, x20
  450018:	ldp	x19, x20, [sp, #16]
  45001c:	ldp	x29, x30, [sp], #48
  450020:	ret
  450024:	ldrb	w0, [x3, #1]
  450028:	cmp	w0, #0x6e
  45002c:	b.ne	44fe68 <_obstack_memory_used@@Base+0x6408>  // b.any
  450030:	add	x3, x3, #0x2
  450034:	str	x3, [x19, #24]
  450038:	b	44fe68 <_obstack_memory_used@@Base+0x6408>
  45003c:	ldr	x0, [x0, #64]
  450040:	cbz	x0, 450054 <_obstack_memory_used@@Base+0x65f4>
  450044:	ldr	w1, [x0]
  450048:	cbz	w1, 4500d0 <_obstack_memory_used@@Base+0x6670>
  45004c:	cmp	w1, #0x18
  450050:	b.eq	4500d0 <_obstack_memory_used@@Base+0x6670>  // b.none
  450054:	cmp	w2, #0x43
  450058:	b.eq	4501b0 <_obstack_memory_used@@Base+0x6750>  // b.none
  45005c:	ldrb	w1, [x3, #1]
  450060:	cmp	w1, #0x32
  450064:	b.eq	4502b4 <_obstack_memory_used@@Base+0x6854>  // b.none
  450068:	b.hi	450224 <_obstack_memory_used@@Base+0x67c4>  // b.pmore
  45006c:	cmp	w1, #0x30
  450070:	b.eq	450250 <_obstack_memory_used@@Base+0x67f0>  // b.none
  450074:	cmp	w1, #0x31
  450078:	mov	w4, #0x2                   	// #2
  45007c:	b.ne	450238 <_obstack_memory_used@@Base+0x67d8>  // b.any
  450080:	add	x1, x3, #0x2
  450084:	ldr	w2, [x19, #44]
  450088:	str	x1, [x19, #24]
  45008c:	ldr	w1, [x19, #40]
  450090:	cmp	w1, w2
  450094:	b.ge	450244 <_obstack_memory_used@@Base+0x67e4>  // b.tcont
  450098:	mov	w6, #0x18                  	// #24
  45009c:	add	w5, w1, #0x1
  4500a0:	ldr	x2, [x19, #32]
  4500a4:	smull	x1, w1, w6
  4500a8:	add	x20, x2, x1
  4500ac:	str	wzr, [x20, #4]
  4500b0:	str	w5, [x19, #40]
  4500b4:	cbz	x0, 450244 <_obstack_memory_used@@Base+0x67e4>
  4500b8:	mov	x5, #0x8                   	// #8
  4500bc:	str	x5, [x2, x1]
  4500c0:	str	w4, [x20, #8]
  4500c4:	str	x0, [x20, #16]
  4500c8:	ldrb	w1, [x3, #2]
  4500cc:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  4500d0:	ldr	w2, [x0, #16]
  4500d4:	ldr	w1, [x19, #72]
  4500d8:	add	w1, w1, w2
  4500dc:	str	w1, [x19, #72]
  4500e0:	ldrb	w1, [x3]
  4500e4:	cmp	w1, #0x43
  4500e8:	mov	w2, w1
  4500ec:	b.eq	4501b0 <_obstack_memory_used@@Base+0x6750>  // b.none
  4500f0:	cmp	w1, #0x44
  4500f4:	b.eq	45005c <_obstack_memory_used@@Base+0x65fc>  // b.none
  4500f8:	mov	x20, #0x0                   	// #0
  4500fc:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  450100:	add	x1, x3, #0x1
  450104:	str	x1, [x0, #24]
  450108:	mov	x20, #0x0                   	// #0
  45010c:	ldrb	w1, [x3, #1]
  450110:	cmp	w1, #0x6c
  450114:	b.ne	44fe8c <_obstack_memory_used@@Base+0x642c>  // b.any
  450118:	add	x3, x3, #0x2
  45011c:	str	x3, [x0, #24]
  450120:	bl	44f918 <_obstack_memory_used@@Base+0x5eb8>
  450124:	mov	x11, x0
  450128:	ldr	x0, [x19, #24]
  45012c:	ldrb	w1, [x0]
  450130:	cbz	x11, 44fe8c <_obstack_memory_used@@Base+0x642c>
  450134:	cmp	w1, #0x45
  450138:	b.ne	44fe8c <_obstack_memory_used@@Base+0x642c>  // b.any
  45013c:	add	x0, x0, #0x1
  450140:	str	x0, [x19, #24]
  450144:	mov	x0, x19
  450148:	bl	44c410 <_obstack_memory_used@@Base+0x29b0>
  45014c:	tbnz	w0, #31, 4502c8 <_obstack_memory_used@@Base+0x6868>
  450150:	ldp	w1, w2, [x19, #40]
  450154:	ldr	x4, [x19, #24]
  450158:	cmp	w1, w2
  45015c:	b.ge	4502d8 <_obstack_memory_used@@Base+0x6878>  // b.tcont
  450160:	mov	w2, #0x18                  	// #24
  450164:	add	w6, w1, #0x1
  450168:	ldr	x3, [x19, #32]
  45016c:	smull	x1, w1, w2
  450170:	ldp	w2, w7, [x19, #56]
  450174:	add	x20, x3, x1
  450178:	mov	w5, #0x46                  	// #70
  45017c:	cmp	w2, w7
  450180:	str	wzr, [x20, #4]
  450184:	str	w6, [x19, #40]
  450188:	str	w5, [x3, x1]
  45018c:	str	x11, [x20, #8]
  450190:	str	w0, [x20, #16]
  450194:	b.ge	4502d8 <_obstack_memory_used@@Base+0x6878>  // b.tcont
  450198:	ldr	x1, [x19, #48]
  45019c:	add	w0, w2, #0x1
  4501a0:	str	x20, [x1, w2, sxtw #3]
  4501a4:	str	w0, [x19, #56]
  4501a8:	ldrb	w1, [x4]
  4501ac:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  4501b0:	str	x21, [sp, #32]
  4501b4:	ldrb	w1, [x3, #1]
  4501b8:	cmp	w1, #0x49
  4501bc:	b.eq	450260 <_obstack_memory_used@@Base+0x6800>  // b.none
  4501c0:	sub	w2, w1, #0x31
  4501c4:	and	w2, w2, #0xff
  4501c8:	cmp	w2, #0x4
  4501cc:	b.hi	4502a8 <_obstack_memory_used@@Base+0x6848>  // b.pmore
  4501d0:	sub	w21, w1, #0x30
  4501d4:	add	x3, x3, #0x2
  4501d8:	str	x3, [x19, #24]
  4501dc:	ldp	w1, w2, [x19, #40]
  4501e0:	cmp	w1, w2
  4501e4:	b.ge	4502e4 <_obstack_memory_used@@Base+0x6884>  // b.tcont
  4501e8:	mov	w4, #0x18                  	// #24
  4501ec:	add	w3, w1, #0x1
  4501f0:	smull	x1, w1, w4
  4501f4:	ldp	x4, x2, [x19, #24]
  4501f8:	add	x20, x2, x1
  4501fc:	str	wzr, [x20, #4]
  450200:	str	w3, [x19, #40]
  450204:	cbz	x0, 450298 <_obstack_memory_used@@Base+0x6838>
  450208:	mov	x3, #0x7                   	// #7
  45020c:	str	x3, [x2, x1]
  450210:	str	w21, [x20, #8]
  450214:	str	x0, [x20, #16]
  450218:	ldr	x21, [sp, #32]
  45021c:	ldrb	w1, [x4]
  450220:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  450224:	cmp	w1, #0x34
  450228:	b.eq	450258 <_obstack_memory_used@@Base+0x67f8>  // b.none
  45022c:	cmp	w1, #0x35
  450230:	mov	w4, #0x5                   	// #5
  450234:	b.eq	450080 <_obstack_memory_used@@Base+0x6620>  // b.none
  450238:	mov	w1, w2
  45023c:	mov	x20, #0x0                   	// #0
  450240:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  450244:	ldrb	w1, [x3, #2]
  450248:	mov	x20, #0x0                   	// #0
  45024c:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  450250:	mov	w4, #0x1                   	// #1
  450254:	b	450080 <_obstack_memory_used@@Base+0x6620>
  450258:	mov	w4, #0x4                   	// #4
  45025c:	b	450080 <_obstack_memory_used@@Base+0x6620>
  450260:	add	x0, x3, #0x1
  450264:	str	x0, [x19, #24]
  450268:	ldrb	w1, [x3, #2]
  45026c:	sub	w0, w1, #0x31
  450270:	and	w0, w0, #0xff
  450274:	cmp	w0, #0x4
  450278:	b.hi	4502f8 <_obstack_memory_used@@Base+0x6898>  // b.pmore
  45027c:	add	x3, x3, #0x3
  450280:	str	x3, [x19, #24]
  450284:	sub	w21, w1, #0x30
  450288:	mov	x0, x19
  45028c:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  450290:	ldr	x0, [x19, #64]
  450294:	b	4501dc <_obstack_memory_used@@Base+0x677c>
  450298:	ldrb	w1, [x4]
  45029c:	mov	x20, #0x0                   	// #0
  4502a0:	ldr	x21, [sp, #32]
  4502a4:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  4502a8:	mov	x20, #0x0                   	// #0
  4502ac:	ldr	x21, [sp, #32]
  4502b0:	b	450014 <_obstack_memory_used@@Base+0x65b4>
  4502b4:	mov	w4, #0x3                   	// #3
  4502b8:	b	450080 <_obstack_memory_used@@Base+0x6620>
  4502bc:	ldrb	w1, [x7]
  4502c0:	mov	x20, #0x0                   	// #0
  4502c4:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  4502c8:	ldr	x0, [x19, #24]
  4502cc:	mov	x20, #0x0                   	// #0
  4502d0:	ldrb	w1, [x0]
  4502d4:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  4502d8:	ldrb	w1, [x4]
  4502dc:	mov	x20, #0x0                   	// #0
  4502e0:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  4502e4:	ldr	x0, [x19, #24]
  4502e8:	mov	x20, #0x0                   	// #0
  4502ec:	ldr	x21, [sp, #32]
  4502f0:	ldrb	w1, [x0]
  4502f4:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  4502f8:	ldrb	w1, [x3, #1]
  4502fc:	mov	x20, #0x0                   	// #0
  450300:	ldr	x21, [sp, #32]
  450304:	b	44fe8c <_obstack_memory_used@@Base+0x642c>
  450308:	ldr	x2, [x0, #24]
  45030c:	ldrb	w1, [x2]
  450310:	cmp	w1, #0x4c
  450314:	b.ne	4503fc <_obstack_memory_used@@Base+0x699c>  // b.any
  450318:	stp	x29, x30, [sp, #-32]!
  45031c:	add	x1, x2, #0x1
  450320:	mov	w4, #0x5a                  	// #90
  450324:	mov	x29, sp
  450328:	str	x19, [sp, #16]
  45032c:	mov	x19, x0
  450330:	str	x1, [x0, #24]
  450334:	ldrb	w3, [x2, #1]
  450338:	cmp	w3, #0x5f
  45033c:	ccmp	w3, w4, #0x4, ne  // ne = any
  450340:	b.eq	4503bc <_obstack_memory_used@@Base+0x695c>  // b.none
  450344:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  450348:	mov	x2, x0
  45034c:	cbz	x0, 4503ac <_obstack_memory_used@@Base+0x694c>
  450350:	ldr	w0, [x0]
  450354:	cmp	w0, #0x27
  450358:	b.eq	450474 <_obstack_memory_used@@Base+0x6a14>  // b.none
  45035c:	ldr	x0, [x19, #24]
  450360:	mov	w1, #0x3d                  	// #61
  450364:	ldrb	w4, [x0]
  450368:	cmp	w4, #0x6e
  45036c:	b.ne	450384 <_obstack_memory_used@@Base+0x6924>  // b.any
  450370:	add	x3, x0, #0x1
  450374:	str	x3, [x19, #24]
  450378:	mov	w1, #0x3e                  	// #62
  45037c:	ldrb	w4, [x0, #1]
  450380:	mov	x0, x3
  450384:	cmp	w4, #0x45
  450388:	b.eq	45049c <_obstack_memory_used@@Base+0x6a3c>  // b.none
  45038c:	add	x3, x0, #0x1
  450390:	b	4503a4 <_obstack_memory_used@@Base+0x6944>
  450394:	str	x3, [x19, #24]
  450398:	ldrb	w4, [x3], #1
  45039c:	cmp	w4, #0x45
  4503a0:	b.eq	450420 <_obstack_memory_used@@Base+0x69c0>  // b.none
  4503a4:	mov	x5, x3
  4503a8:	cbnz	w4, 450394 <_obstack_memory_used@@Base+0x6934>
  4503ac:	mov	x0, #0x0                   	// #0
  4503b0:	ldr	x19, [sp, #16]
  4503b4:	ldp	x29, x30, [sp], #32
  4503b8:	ret
  4503bc:	cmp	w3, #0x5f
  4503c0:	b.eq	450404 <_obstack_memory_used@@Base+0x69a4>  // b.none
  4503c4:	add	x1, x1, #0x1
  4503c8:	str	x1, [x19, #24]
  4503cc:	mov	x0, x19
  4503d0:	mov	w1, #0x0                   	// #0
  4503d4:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  4503d8:	ldr	x1, [x19, #24]
  4503dc:	ldrb	w2, [x1]
  4503e0:	cmp	w2, #0x45
  4503e4:	b.ne	4503ac <_obstack_memory_used@@Base+0x694c>  // b.any
  4503e8:	add	x1, x1, #0x1
  4503ec:	str	x1, [x19, #24]
  4503f0:	ldr	x19, [sp, #16]
  4503f4:	ldp	x29, x30, [sp], #32
  4503f8:	ret
  4503fc:	mov	x0, #0x0                   	// #0
  450400:	ret
  450404:	add	x1, x2, #0x2
  450408:	str	x1, [x19, #24]
  45040c:	mov	x0, #0x0                   	// #0
  450410:	ldrb	w2, [x2, #2]
  450414:	cmp	w2, w4
  450418:	b.ne	4503e0 <_obstack_memory_used@@Base+0x6980>  // b.any
  45041c:	b	4503c4 <_obstack_memory_used@@Base+0x6964>
  450420:	sub	w5, w5, w0
  450424:	ldp	w3, w4, [x19, #40]
  450428:	cmp	w3, w4
  45042c:	b.ge	450494 <_obstack_memory_used@@Base+0x6a34>  // b.tcont
  450430:	mov	w4, #0x18                  	// #24
  450434:	add	w7, w3, #0x1
  450438:	ldr	x6, [x19, #32]
  45043c:	smull	x4, w3, w4
  450440:	cmp	w5, #0x0
  450444:	add	x3, x6, x4
  450448:	str	wzr, [x3, #4]
  45044c:	str	w7, [x19, #40]
  450450:	b.le	450494 <_obstack_memory_used@@Base+0x6a34>
  450454:	str	xzr, [x6, x4]
  450458:	str	x0, [x3, #8]
  45045c:	str	w5, [x3, #16]
  450460:	mov	x0, x19
  450464:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  450468:	ldr	x1, [x19, #24]
  45046c:	ldrb	w2, [x1]
  450470:	b	4503e0 <_obstack_memory_used@@Base+0x6980>
  450474:	ldr	x0, [x2, #8]
  450478:	ldr	w1, [x0, #28]
  45047c:	cbz	w1, 45035c <_obstack_memory_used@@Base+0x68fc>
  450480:	ldr	w1, [x0, #8]
  450484:	ldr	w0, [x19, #72]
  450488:	sub	w0, w0, w1
  45048c:	str	w0, [x19, #72]
  450490:	b	45035c <_obstack_memory_used@@Base+0x68fc>
  450494:	mov	x3, #0x0                   	// #0
  450498:	b	450460 <_obstack_memory_used@@Base+0x6a00>
  45049c:	mov	w5, #0x0                   	// #0
  4504a0:	b	450424 <_obstack_memory_used@@Base+0x69c4>
  4504a4:	nop
  4504a8:	stp	x29, x30, [sp, #-224]!
  4504ac:	mov	x29, sp
  4504b0:	stp	x19, x20, [sp, #16]
  4504b4:	mov	x19, x0
  4504b8:	cbz	x2, 450540 <_obstack_memory_used@@Base+0x6ae0>
  4504bc:	stp	x21, x22, [sp, #32]
  4504c0:	ldr	w22, [x0, #304]
  4504c4:	cbnz	w22, 450508 <_obstack_memory_used@@Base+0x6aa8>
  4504c8:	ldr	w0, [x2]
  4504cc:	mov	x20, x2
  4504d0:	cmp	w0, #0x50
  4504d4:	b.ls	4504e8 <_obstack_memory_used@@Base+0x6a88>  // b.plast
  4504d8:	mov	w0, #0x1                   	// #1
  4504dc:	ldp	x21, x22, [sp, #32]
  4504e0:	str	w0, [x19, #304]
  4504e4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4504e8:	mov	w21, w1
  4504ec:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4504f0:	add	x1, x1, #0x8bc
  4504f4:	stp	x23, x24, [sp, #48]
  4504f8:	ldrh	w1, [x1, w0, uxtw #1]
  4504fc:	adr	x2, 450508 <_obstack_memory_used@@Base+0x6aa8>
  450500:	add	x1, x2, w1, sxth #2
  450504:	br	x1
  450508:	ldp	x21, x22, [sp, #32]
  45050c:	ldp	x19, x20, [sp, #16]
  450510:	ldp	x29, x30, [sp], #224
  450514:	ret
  450518:	ldr	x0, [x20, #16]
  45051c:	ldr	w1, [x0]
  450520:	cmp	w1, #0x3b
  450524:	b.ne	450538 <_obstack_memory_used@@Base+0x6ad8>  // b.any
  450528:	ldr	x0, [x0, #16]
  45052c:	ldr	w0, [x0]
  450530:	cmp	w0, #0x3c
  450534:	b.eq	453a20 <_obstack_memory_used@@Base+0x9fc0>  // b.none
  450538:	ldp	x21, x22, [sp, #32]
  45053c:	ldp	x23, x24, [sp, #48]
  450540:	mov	w0, #0x1                   	// #1
  450544:	str	w0, [x19, #304]
  450548:	ldp	x19, x20, [sp, #16]
  45054c:	ldp	x29, x30, [sp], #224
  450550:	ret
  450554:	ldp	x1, x2, [x19, #288]
  450558:	add	x0, sp, #0x60
  45055c:	stp	x2, x20, [sp, #96]
  450560:	str	wzr, [sp, #112]
  450564:	str	x1, [sp, #120]
  450568:	str	x0, [x19, #296]
  45056c:	ldr	x2, [x20, #8]
  450570:	mov	x0, x19
  450574:	mov	w1, w21
  450578:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45057c:	ldr	w0, [sp, #112]
  450580:	cbz	w0, 45292c <_obstack_memory_used@@Base+0x8ecc>
  450584:	ldr	x0, [sp, #96]
  450588:	str	x0, [x19, #296]
  45058c:	cbz	w22, 452160 <_obstack_memory_used@@Base+0x8700>
  450590:	ldp	x21, x22, [sp, #32]
  450594:	str	x23, [x19, #288]
  450598:	ldp	x23, x24, [sp, #48]
  45059c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4505a0:	ldr	x4, [x19, #296]
  4505a4:	cbz	x4, 4506e0 <_obstack_memory_used@@Base+0x6c80>
  4505a8:	mov	x1, x4
  4505ac:	nop
  4505b0:	ldr	w2, [x1, #16]
  4505b4:	cbnz	w2, 4505d4 <_obstack_memory_used@@Base+0x6b74>
  4505b8:	ldr	x2, [x1, #8]
  4505bc:	ldr	w2, [x2]
  4505c0:	sub	w3, w2, #0x19
  4505c4:	cmp	w3, #0x2
  4505c8:	b.hi	453580 <_obstack_memory_used@@Base+0x9b20>  // b.pmore
  4505cc:	cmp	w0, w2
  4505d0:	b.eq	4535a0 <_obstack_memory_used@@Base+0x9b40>  // b.none
  4505d4:	ldr	x1, [x1]
  4505d8:	cbnz	x1, 4505b0 <_obstack_memory_used@@Base+0x6b50>
  4505dc:	b	4506e0 <_obstack_memory_used@@Base+0x6c80>
  4505e0:	ldp	x23, x24, [sp, #48]
  4505e4:	b	4504d8 <_obstack_memory_used@@Base+0x6a78>
  4505e8:	ldr	x2, [x20, #8]
  4505ec:	mov	w22, #0x0                   	// #0
  4505f0:	ldr	w1, [x2]
  4505f4:	cmp	w1, #0x27
  4505f8:	b.eq	452e08 <_obstack_memory_used@@Base+0x93a8>  // b.none
  4505fc:	ldr	x1, [x19, #256]
  450600:	add	x0, x1, #0x1
  450604:	cmp	x1, #0xff
  450608:	b.ne	450634 <_obstack_memory_used@@Base+0x6bd4>  // b.any
  45060c:	ldp	x3, x2, [x19, #272]
  450610:	strb	wzr, [x19, #255]
  450614:	mov	x0, x19
  450618:	blr	x3
  45061c:	ldr	x3, [x19, #320]
  450620:	mov	x0, #0x1                   	// #1
  450624:	mov	x1, #0x0                   	// #0
  450628:	add	x3, x3, x0
  45062c:	ldr	x2, [x20, #8]
  450630:	str	x3, [x19, #320]
  450634:	str	x0, [x19, #256]
  450638:	mov	w0, #0x28                  	// #40
  45063c:	strb	w0, [x19, x1]
  450640:	mov	w1, w21
  450644:	strb	w0, [x19, #264]
  450648:	mov	x0, x19
  45064c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450650:	ldr	x1, [x19, #256]
  450654:	cmp	x1, #0xff
  450658:	b.eq	4534f8 <_obstack_memory_used@@Base+0x9a98>  // b.none
  45065c:	add	x3, x1, #0x1
  450660:	str	x3, [x19, #256]
  450664:	mov	w0, #0x29                  	// #41
  450668:	strb	w0, [x19, x1]
  45066c:	strb	w0, [x19, #264]
  450670:	ldr	w0, [x20]
  450674:	cmp	w0, #0x3e
  450678:	b.eq	4535bc <_obstack_memory_used@@Base+0x9b5c>  // b.none
  45067c:	cmp	w22, #0x8
  450680:	b.eq	45339c <_obstack_memory_used@@Base+0x993c>  // b.none
  450684:	ldr	x2, [x20, #16]
  450688:	mov	w1, w21
  45068c:	mov	x0, x19
  450690:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450694:	ldp	x21, x22, [sp, #32]
  450698:	ldp	x23, x24, [sp, #48]
  45069c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4506a0:	ldr	w2, [x19, #312]
  4506a4:	ldr	x0, [x20, #8]
  4506a8:	ldr	w1, [x0]
  4506ac:	cbnz	w2, 4506bc <_obstack_memory_used@@Base+0x6c5c>
  4506b0:	cmp	w1, #0x5
  4506b4:	mov	w22, #0x0                   	// #0
  4506b8:	b.eq	45397c <_obstack_memory_used@@Base+0x9f1c>  // b.none
  4506bc:	cmp	w1, #0x23
  4506c0:	ldr	x4, [x19, #296]
  4506c4:	b.eq	4529d4 <_obstack_memory_used@@Base+0x8f74>  // b.none
  4506c8:	ldr	w2, [x20]
  4506cc:	cmp	w2, w1
  4506d0:	b.eq	4529d4 <_obstack_memory_used@@Base+0x8f74>  // b.none
  4506d4:	cmp	w1, #0x24
  4506d8:	b.eq	45213c <_obstack_memory_used@@Base+0x86dc>  // b.none
  4506dc:	nop
  4506e0:	ldr	x1, [x19, #288]
  4506e4:	add	x0, sp, #0x60
  4506e8:	stp	x4, x20, [sp, #96]
  4506ec:	str	wzr, [sp, #112]
  4506f0:	str	x1, [sp, #120]
  4506f4:	str	x0, [x19, #296]
  4506f8:	b	45056c <_obstack_memory_used@@Base+0x6b0c>
  4506fc:	ldr	x2, [x20, #8]
  450700:	mov	w1, w21
  450704:	mov	x0, x19
  450708:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45070c:	tbz	w21, #2, 453340 <_obstack_memory_used@@Base+0x98e0>
  450710:	ldr	x1, [x19, #256]
  450714:	add	x0, x1, #0x1
  450718:	cmp	x1, #0xff
  45071c:	b.ne	450744 <_obstack_memory_used@@Base+0x6ce4>  // b.any
  450720:	ldp	x3, x2, [x19, #272]
  450724:	strb	wzr, [x19, #255]
  450728:	mov	x0, x19
  45072c:	blr	x3
  450730:	ldr	x2, [x19, #320]
  450734:	mov	x0, #0x1                   	// #1
  450738:	mov	x1, #0x0                   	// #0
  45073c:	add	x2, x2, x0
  450740:	str	x2, [x19, #320]
  450744:	str	x0, [x19, #256]
  450748:	mov	w0, #0x2e                  	// #46
  45074c:	strb	w0, [x19, x1]
  450750:	strb	w0, [x19, #264]
  450754:	ldr	x23, [x20, #16]
  450758:	ldr	w0, [x23]
  45075c:	cmp	w0, #0x47
  450760:	b.eq	4535f8 <_obstack_memory_used@@Base+0x9b98>  // b.none
  450764:	mov	x2, x23
  450768:	mov	w1, w21
  45076c:	mov	x0, x19
  450770:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450774:	ldp	x21, x22, [sp, #32]
  450778:	ldp	x23, x24, [sp, #48]
  45077c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  450780:	ldp	x3, x4, [x19, #288]
  450784:	add	x0, sp, #0x60
  450788:	ldr	x2, [x20, #16]
  45078c:	str	x0, [x19, #296]
  450790:	mov	w1, w21
  450794:	mov	x0, x19
  450798:	stp	x4, x20, [sp, #96]
  45079c:	str	wzr, [sp, #112]
  4507a0:	str	x3, [sp, #120]
  4507a4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4507a8:	ldr	w0, [sp, #112]
  4507ac:	cbz	w0, 4532bc <_obstack_memory_used@@Base+0x985c>
  4507b0:	ldr	x0, [sp, #96]
  4507b4:	ldp	x21, x22, [sp, #32]
  4507b8:	ldp	x23, x24, [sp, #48]
  4507bc:	str	x0, [x19, #296]
  4507c0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4507c4:	ldr	x2, [x20, #8]
  4507c8:	cbz	x2, 4507d8 <_obstack_memory_used@@Base+0x6d78>
  4507cc:	mov	w1, w21
  4507d0:	mov	x0, x19
  4507d4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4507d8:	ldr	x0, [x20, #16]
  4507dc:	cbz	x0, 453568 <_obstack_memory_used@@Base+0x9b08>
  4507e0:	ldr	x22, [x19, #256]
  4507e4:	cmp	x22, #0xfd
  4507e8:	b.ls	450814 <_obstack_memory_used@@Base+0x6db4>  // b.plast
  4507ec:	strb	wzr, [x19, x22]
  4507f0:	mov	x1, x22
  4507f4:	mov	x0, x19
  4507f8:	mov	x22, #0x0                   	// #0
  4507fc:	ldp	x3, x2, [x19, #272]
  450800:	blr	x3
  450804:	str	xzr, [x19, #256]
  450808:	ldr	x0, [x19, #320]
  45080c:	add	x0, x0, #0x1
  450810:	str	x0, [x19, #320]
  450814:	mov	w23, #0x2c                  	// #44
  450818:	mov	x24, #0x0                   	// #0
  45081c:	b	450840 <_obstack_memory_used@@Base+0x6de0>
  450820:	mov	x0, x22
  450824:	add	x22, x22, #0x1
  450828:	str	x22, [x19, #256]
  45082c:	strb	w23, [x19, x0]
  450830:	strb	w23, [x19, #264]
  450834:	mov	w23, #0x20                  	// #32
  450838:	cbnz	x24, 452974 <_obstack_memory_used@@Base+0x8f14>
  45083c:	mov	x24, #0x1                   	// #1
  450840:	cmp	x22, #0xff
  450844:	b.ne	450820 <_obstack_memory_used@@Base+0x6dc0>  // b.any
  450848:	ldp	x3, x2, [x19, #272]
  45084c:	strb	wzr, [x19, #255]
  450850:	mov	x1, x22
  450854:	mov	x0, x19
  450858:	mov	x22, #0x1                   	// #1
  45085c:	blr	x3
  450860:	ldr	x1, [x19, #320]
  450864:	mov	x0, #0x0                   	// #0
  450868:	add	x1, x1, x22
  45086c:	str	x1, [x19, #320]
  450870:	b	450828 <_obstack_memory_used@@Base+0x6dc8>
  450874:	ldr	x2, [x20, #16]
  450878:	mov	w1, w21
  45087c:	mov	x0, x19
  450880:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450884:	ldp	x21, x22, [sp, #32]
  450888:	ldp	x23, x24, [sp, #48]
  45088c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  450890:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450894:	add	x24, x24, #0x5a0
  450898:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45089c:	add	x24, x24, #0x1c
  4508a0:	add	x22, x22, #0x5a1
  4508a4:	mov	w23, #0x67                  	// #103
  4508a8:	ldr	x1, [x19, #256]
  4508ac:	b	4508d0 <_obstack_memory_used@@Base+0x6e70>
  4508b0:	mov	x0, x1
  4508b4:	add	x1, x1, #0x1
  4508b8:	str	x1, [x19, #256]
  4508bc:	cmp	x22, x24
  4508c0:	strb	w23, [x19, x0]
  4508c4:	strb	w23, [x19, #264]
  4508c8:	b.eq	452574 <_obstack_memory_used@@Base+0x8b14>  // b.none
  4508cc:	ldrb	w23, [x22], #1
  4508d0:	cmp	x1, #0xff
  4508d4:	b.ne	4508b0 <_obstack_memory_used@@Base+0x6e50>  // b.any
  4508d8:	ldp	x3, x2, [x19, #272]
  4508dc:	strb	wzr, [x19, #255]
  4508e0:	mov	x0, x19
  4508e4:	blr	x3
  4508e8:	ldr	x2, [x19, #320]
  4508ec:	mov	x1, #0x1                   	// #1
  4508f0:	mov	x0, #0x0                   	// #0
  4508f4:	add	x2, x2, x1
  4508f8:	str	x2, [x19, #320]
  4508fc:	b	4508b8 <_obstack_memory_used@@Base+0x6e58>
  450900:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450904:	add	x22, x22, #0x5c0
  450908:	add	x24, x22, #0x8
  45090c:	mov	w23, #0x7b                  	// #123
  450910:	ldr	x1, [x19, #256]
  450914:	b	45093c <_obstack_memory_used@@Base+0x6edc>
  450918:	mov	x0, x1
  45091c:	add	x1, x1, #0x1
  450920:	str	x1, [x19, #256]
  450924:	add	x22, x22, #0x1
  450928:	strb	w23, [x19, x0]
  45092c:	cmp	x24, x22
  450930:	strb	w23, [x19, #264]
  450934:	b.eq	452590 <_obstack_memory_used@@Base+0x8b30>  // b.none
  450938:	ldrb	w23, [x22]
  45093c:	cmp	x1, #0xff
  450940:	b.ne	450918 <_obstack_memory_used@@Base+0x6eb8>  // b.any
  450944:	ldp	x3, x2, [x19, #272]
  450948:	strb	wzr, [x19, #255]
  45094c:	mov	x0, x19
  450950:	blr	x3
  450954:	ldr	x2, [x19, #320]
  450958:	mov	x1, #0x1                   	// #1
  45095c:	mov	x0, #0x0                   	// #0
  450960:	add	x2, x2, x1
  450964:	str	x2, [x19, #320]
  450968:	b	450920 <_obstack_memory_used@@Base+0x6ec0>
  45096c:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450970:	add	x23, x23, #0x5d0
  450974:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450978:	add	x23, x23, #0xe
  45097c:	add	x21, x21, #0x5d1
  450980:	mov	w22, #0x7b                  	// #123
  450984:	ldr	x1, [x19, #256]
  450988:	b	4509ac <_obstack_memory_used@@Base+0x6f4c>
  45098c:	mov	x0, x1
  450990:	add	x1, x1, #0x1
  450994:	str	x1, [x19, #256]
  450998:	cmp	x23, x21
  45099c:	strb	w22, [x19, x0]
  4509a0:	strb	w22, [x19, #264]
  4509a4:	b.eq	452484 <_obstack_memory_used@@Base+0x8a24>  // b.none
  4509a8:	ldrb	w22, [x21], #1
  4509ac:	cmp	x1, #0xff
  4509b0:	b.ne	45098c <_obstack_memory_used@@Base+0x6f2c>  // b.any
  4509b4:	ldp	x3, x2, [x19, #272]
  4509b8:	strb	wzr, [x19, #255]
  4509bc:	mov	x0, x19
  4509c0:	blr	x3
  4509c4:	ldr	x2, [x19, #320]
  4509c8:	mov	x1, #0x1                   	// #1
  4509cc:	mov	x0, #0x0                   	// #0
  4509d0:	add	x2, x2, x1
  4509d4:	str	x2, [x19, #320]
  4509d8:	b	450994 <_obstack_memory_used@@Base+0x6f34>
  4509dc:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4509e0:	add	x24, x24, #0x4b0
  4509e4:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4509e8:	add	x24, x24, #0x16
  4509ec:	add	x22, x22, #0x4b1
  4509f0:	mov	w23, #0x74                  	// #116
  4509f4:	ldr	x1, [x19, #256]
  4509f8:	b	450a1c <_obstack_memory_used@@Base+0x6fbc>
  4509fc:	mov	x0, x1
  450a00:	add	x1, x1, #0x1
  450a04:	str	x1, [x19, #256]
  450a08:	cmp	x24, x22
  450a0c:	strb	w23, [x19, x0]
  450a10:	strb	w23, [x19, #264]
  450a14:	b.eq	452558 <_obstack_memory_used@@Base+0x8af8>  // b.none
  450a18:	ldrb	w23, [x22], #1
  450a1c:	cmp	x1, #0xff
  450a20:	b.ne	4509fc <_obstack_memory_used@@Base+0x6f9c>  // b.any
  450a24:	ldp	x3, x2, [x19, #272]
  450a28:	strb	wzr, [x19, #255]
  450a2c:	mov	x0, x19
  450a30:	blr	x3
  450a34:	ldr	x2, [x19, #320]
  450a38:	mov	x1, #0x1                   	// #1
  450a3c:	mov	x0, #0x0                   	// #0
  450a40:	add	x2, x2, x1
  450a44:	str	x2, [x19, #320]
  450a48:	b	450a04 <_obstack_memory_used@@Base+0x6fa4>
  450a4c:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450a50:	add	x24, x24, #0x328
  450a54:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450a58:	add	x24, x24, #0x1e
  450a5c:	add	x22, x22, #0x329
  450a60:	mov	w23, #0x74                  	// #116
  450a64:	ldr	x1, [x19, #256]
  450a68:	b	450a8c <_obstack_memory_used@@Base+0x702c>
  450a6c:	mov	x0, x1
  450a70:	add	x1, x1, #0x1
  450a74:	str	x1, [x19, #256]
  450a78:	cmp	x24, x22
  450a7c:	strb	w23, [x19, x0]
  450a80:	strb	w23, [x19, #264]
  450a84:	b.eq	452468 <_obstack_memory_used@@Base+0x8a08>  // b.none
  450a88:	ldrb	w23, [x22], #1
  450a8c:	cmp	x1, #0xff
  450a90:	b.ne	450a6c <_obstack_memory_used@@Base+0x700c>  // b.any
  450a94:	ldp	x3, x2, [x19, #272]
  450a98:	strb	wzr, [x19, #255]
  450a9c:	mov	x0, x19
  450aa0:	blr	x3
  450aa4:	ldr	x2, [x19, #320]
  450aa8:	mov	x1, #0x1                   	// #1
  450aac:	mov	x0, #0x0                   	// #0
  450ab0:	add	x2, x2, x1
  450ab4:	str	x2, [x19, #320]
  450ab8:	b	450a74 <_obstack_memory_used@@Base+0x7014>
  450abc:	ldp	x2, x20, [x20, #8]
  450ac0:	cbz	x2, 450ad0 <_obstack_memory_used@@Base+0x7070>
  450ac4:	mov	w1, w21
  450ac8:	mov	x0, x19
  450acc:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450ad0:	ldr	x1, [x19, #256]
  450ad4:	add	x0, x1, #0x1
  450ad8:	cmp	x1, #0xff
  450adc:	b.ne	450b04 <_obstack_memory_used@@Base+0x70a4>  // b.any
  450ae0:	ldp	x3, x2, [x19, #272]
  450ae4:	strb	wzr, [x19, #255]
  450ae8:	mov	x0, x19
  450aec:	blr	x3
  450af0:	ldr	x2, [x19, #320]
  450af4:	mov	x0, #0x1                   	// #1
  450af8:	mov	x1, #0x0                   	// #0
  450afc:	add	x2, x2, x0
  450b00:	str	x2, [x19, #320]
  450b04:	str	x0, [x19, #256]
  450b08:	mov	w0, #0x7b                  	// #123
  450b0c:	strb	w0, [x19, x1]
  450b10:	mov	x2, x20
  450b14:	strb	w0, [x19, #264]
  450b18:	mov	w1, w21
  450b1c:	mov	x0, x19
  450b20:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450b24:	ldr	x1, [x19, #256]
  450b28:	add	x0, x1, #0x1
  450b2c:	cmp	x1, #0xff
  450b30:	b.ne	450b58 <_obstack_memory_used@@Base+0x70f8>  // b.any
  450b34:	ldp	x3, x2, [x19, #272]
  450b38:	strb	wzr, [x19, #255]
  450b3c:	mov	x0, x19
  450b40:	blr	x3
  450b44:	ldr	x2, [x19, #320]
  450b48:	mov	x0, #0x1                   	// #1
  450b4c:	mov	x1, #0x0                   	// #0
  450b50:	add	x2, x2, x0
  450b54:	str	x2, [x19, #320]
  450b58:	str	x0, [x19, #256]
  450b5c:	mov	w0, #0x7d                  	// #125
  450b60:	strb	w0, [x19, x1]
  450b64:	strb	w0, [x19, #264]
  450b68:	ldp	x21, x22, [sp, #32]
  450b6c:	ldp	x23, x24, [sp, #48]
  450b70:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  450b74:	ldr	x22, [x20, #8]
  450b78:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450b7c:	add	x20, x20, #0x500
  450b80:	mov	w21, #0x6f                  	// #111
  450b84:	add	x24, x20, #0x8
  450b88:	ldr	w23, [x22, #16]
  450b8c:	ldr	x1, [x19, #256]
  450b90:	b	450bb8 <_obstack_memory_used@@Base+0x7158>
  450b94:	mov	x0, x1
  450b98:	add	x1, x1, #0x1
  450b9c:	str	x1, [x19, #256]
  450ba0:	add	x20, x20, #0x1
  450ba4:	strb	w21, [x19, x0]
  450ba8:	cmp	x24, x20
  450bac:	strb	w21, [x19, #264]
  450bb0:	b.eq	45238c <_obstack_memory_used@@Base+0x892c>  // b.none
  450bb4:	ldrb	w21, [x20]
  450bb8:	cmp	x1, #0xff
  450bbc:	b.ne	450b94 <_obstack_memory_used@@Base+0x7134>  // b.any
  450bc0:	ldp	x3, x2, [x19, #272]
  450bc4:	strb	wzr, [x19, #255]
  450bc8:	mov	x0, x19
  450bcc:	blr	x3
  450bd0:	ldr	x2, [x19, #320]
  450bd4:	mov	x1, #0x1                   	// #1
  450bd8:	mov	x0, #0x0                   	// #0
  450bdc:	add	x2, x2, x1
  450be0:	str	x2, [x19, #320]
  450be4:	b	450b9c <_obstack_memory_used@@Base+0x713c>
  450be8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450bec:	add	x22, x22, #0x510
  450bf0:	add	x24, x22, #0x9
  450bf4:	mov	w23, #0x6f                  	// #111
  450bf8:	ldr	x1, [x19, #256]
  450bfc:	b	450c24 <_obstack_memory_used@@Base+0x71c4>
  450c00:	mov	x0, x1
  450c04:	add	x1, x1, #0x1
  450c08:	str	x1, [x19, #256]
  450c0c:	add	x22, x22, #0x1
  450c10:	strb	w23, [x19, x0]
  450c14:	cmp	x22, x24
  450c18:	strb	w23, [x19, #264]
  450c1c:	b.eq	4521cc <_obstack_memory_used@@Base+0x876c>  // b.none
  450c20:	ldrb	w23, [x22]
  450c24:	cmp	x1, #0xff
  450c28:	b.ne	450c00 <_obstack_memory_used@@Base+0x71a0>  // b.any
  450c2c:	ldp	x3, x2, [x19, #272]
  450c30:	strb	wzr, [x19, #255]
  450c34:	mov	x0, x19
  450c38:	blr	x3
  450c3c:	ldr	x2, [x19, #320]
  450c40:	mov	x1, #0x1                   	// #1
  450c44:	mov	x0, #0x0                   	// #0
  450c48:	add	x2, x2, x1
  450c4c:	str	x2, [x19, #320]
  450c50:	b	450c08 <_obstack_memory_used@@Base+0x71a8>
  450c54:	ldr	x2, [x20, #8]
  450c58:	mov	w1, w21
  450c5c:	mov	x0, x19
  450c60:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450c64:	add	x22, x22, #0x5e0
  450c68:	mov	w23, #0x20                  	// #32
  450c6c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450c70:	add	x24, x22, #0x8
  450c74:	ldr	x1, [x19, #256]
  450c78:	b	450ca0 <_obstack_memory_used@@Base+0x7240>
  450c7c:	mov	x0, x1
  450c80:	add	x1, x1, #0x1
  450c84:	str	x1, [x19, #256]
  450c88:	add	x22, x22, #0x1
  450c8c:	strb	w23, [x19, x0]
  450c90:	cmp	x24, x22
  450c94:	strb	w23, [x19, #264]
  450c98:	b.eq	45216c <_obstack_memory_used@@Base+0x870c>  // b.none
  450c9c:	ldrb	w23, [x22]
  450ca0:	cmp	x1, #0xff
  450ca4:	b.ne	450c7c <_obstack_memory_used@@Base+0x721c>  // b.any
  450ca8:	ldp	x3, x2, [x19, #272]
  450cac:	strb	wzr, [x19, #255]
  450cb0:	mov	x0, x19
  450cb4:	blr	x3
  450cb8:	ldr	x2, [x19, #320]
  450cbc:	mov	x1, #0x1                   	// #1
  450cc0:	mov	x0, #0x0                   	// #0
  450cc4:	add	x2, x2, x1
  450cc8:	str	x2, [x19, #320]
  450ccc:	b	450c84 <_obstack_memory_used@@Base+0x7224>
  450cd0:	ldr	x2, [x20, #8]
  450cd4:	mov	w1, w21
  450cd8:	mov	x0, x19
  450cdc:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450ce0:	ldp	x21, x22, [sp, #32]
  450ce4:	ldp	x23, x24, [sp, #48]
  450ce8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  450cec:	and	w22, w21, #0xffffff9f
  450cf0:	ldr	x3, [x19, #296]
  450cf4:	tbnz	w21, #5, 4534c8 <_obstack_memory_used@@Base+0x9a68>
  450cf8:	ldr	x2, [x20, #8]
  450cfc:	cbz	x2, 450d04 <_obstack_memory_used@@Base+0x72a4>
  450d00:	tbz	w21, #6, 4537fc <_obstack_memory_used@@Base+0x9d9c>
  450d04:	mov	w1, w22
  450d08:	add	x2, x20, #0x10
  450d0c:	mov	x0, x19
  450d10:	bl	454b50 <_obstack_memory_used@@Base+0xb0f0>
  450d14:	ldp	x21, x22, [sp, #32]
  450d18:	ldp	x23, x24, [sp, #48]
  450d1c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  450d20:	ldr	x23, [x20, #8]
  450d24:	ldr	x1, [x19, #256]
  450d28:	cbz	x23, 452b94 <_obstack_memory_used@@Base+0x9134>
  450d2c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450d30:	add	x20, x20, #0x570
  450d34:	add	x22, x20, #0x6
  450d38:	mov	w21, #0x7b                  	// #123
  450d3c:	b	450d64 <_obstack_memory_used@@Base+0x7304>
  450d40:	mov	x0, x1
  450d44:	add	x1, x1, #0x1
  450d48:	str	x1, [x19, #256]
  450d4c:	add	x20, x20, #0x1
  450d50:	strb	w21, [x19, x0]
  450d54:	cmp	x22, x20
  450d58:	strb	w21, [x19, #264]
  450d5c:	b.eq	452c08 <_obstack_memory_used@@Base+0x91a8>  // b.none
  450d60:	ldrb	w21, [x20]
  450d64:	cmp	x1, #0xff
  450d68:	b.ne	450d40 <_obstack_memory_used@@Base+0x72e0>  // b.any
  450d6c:	ldp	x3, x2, [x19, #272]
  450d70:	strb	wzr, [x19, #255]
  450d74:	mov	x0, x19
  450d78:	blr	x3
  450d7c:	ldr	x2, [x19, #320]
  450d80:	mov	x1, #0x1                   	// #1
  450d84:	mov	x0, #0x0                   	// #0
  450d88:	add	x2, x2, x1
  450d8c:	str	x2, [x19, #320]
  450d90:	b	450d48 <_obstack_memory_used@@Base+0x72e8>
  450d94:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450d98:	add	x24, x24, #0x498
  450d9c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450da0:	add	x24, x24, #0x11
  450da4:	add	x22, x22, #0x499
  450da8:	mov	w23, #0x68                  	// #104
  450dac:	ldr	x1, [x19, #256]
  450db0:	b	450dd4 <_obstack_memory_used@@Base+0x7374>
  450db4:	mov	x0, x1
  450db8:	add	x1, x1, #0x1
  450dbc:	str	x1, [x19, #256]
  450dc0:	cmp	x22, x24
  450dc4:	strb	w23, [x19, x0]
  450dc8:	strb	w23, [x19, #264]
  450dcc:	b.eq	452834 <_obstack_memory_used@@Base+0x8dd4>  // b.none
  450dd0:	ldrb	w23, [x22], #1
  450dd4:	cmp	x1, #0xff
  450dd8:	b.ne	450db4 <_obstack_memory_used@@Base+0x7354>  // b.any
  450ddc:	ldp	x3, x2, [x19, #272]
  450de0:	strb	wzr, [x19, #255]
  450de4:	mov	x0, x19
  450de8:	blr	x3
  450dec:	ldr	x2, [x19, #320]
  450df0:	mov	x1, #0x1                   	// #1
  450df4:	mov	x0, #0x0                   	// #0
  450df8:	add	x2, x2, x1
  450dfc:	str	x2, [x19, #320]
  450e00:	b	450dbc <_obstack_memory_used@@Base+0x735c>
  450e04:	ldrsw	x22, [x20, #16]
  450e08:	ldr	x20, [x20, #8]
  450e0c:	cbz	x22, 453cfc <_obstack_memory_used@@Base+0xa29c>
  450e10:	add	x22, x20, x22
  450e14:	ldr	x1, [x19, #256]
  450e18:	b	450e3c <_obstack_memory_used@@Base+0x73dc>
  450e1c:	mov	x0, x1
  450e20:	add	x1, x1, #0x1
  450e24:	str	x1, [x19, #256]
  450e28:	add	x20, x20, #0x1
  450e2c:	strb	w21, [x19, x0]
  450e30:	cmp	x22, x20
  450e34:	strb	w21, [x19, #264]
  450e38:	b.eq	452940 <_obstack_memory_used@@Base+0x8ee0>  // b.none
  450e3c:	ldrb	w21, [x20]
  450e40:	cmp	x1, #0xff
  450e44:	b.ne	450e1c <_obstack_memory_used@@Base+0x73bc>  // b.any
  450e48:	ldp	x3, x2, [x19, #272]
  450e4c:	strb	wzr, [x19, #255]
  450e50:	mov	x0, x19
  450e54:	blr	x3
  450e58:	ldr	x2, [x19, #320]
  450e5c:	mov	x1, #0x1                   	// #1
  450e60:	mov	x0, #0x0                   	// #0
  450e64:	add	x2, x2, x1
  450e68:	str	x2, [x19, #320]
  450e6c:	b	450e24 <_obstack_memory_used@@Base+0x73c4>
  450e70:	ldp	x1, x5, [x19, #288]
  450e74:	add	x23, sp, #0x60
  450e78:	stp	x5, x20, [sp, #96]
  450e7c:	mov	w22, #0x1                   	// #1
  450e80:	mov	w6, w22
  450e84:	str	wzr, [sp, #112]
  450e88:	str	x1, [sp, #120]
  450e8c:	str	x23, [x19, #296]
  450e90:	mov	x24, x5
  450e94:	mov	x0, x5
  450e98:	mov	x5, x23
  450e9c:	cbnz	x24, 450ee8 <_obstack_memory_used@@Base+0x7488>
  450ea0:	b	45402c <_obstack_memory_used@@Base+0xa5cc>
  450ea4:	ldr	w1, [x0, #16]
  450ea8:	cbnz	w1, 450ee0 <_obstack_memory_used@@Base+0x7480>
  450eac:	cmp	w22, #0x3
  450eb0:	b.hi	4537e8 <_obstack_memory_used@@Base+0x9d88>  // b.pmore
  450eb4:	ubfiz	x1, x22, #5, #32
  450eb8:	add	w22, w22, #0x1
  450ebc:	add	x4, x23, x1
  450ec0:	ldp	x2, x3, [x0]
  450ec4:	stp	x2, x3, [x4]
  450ec8:	ldp	x2, x3, [x0, #16]
  450ecc:	stp	x2, x3, [x4, #16]
  450ed0:	str	x5, [x23, x1]
  450ed4:	mov	x5, x4
  450ed8:	str	x4, [x19, #296]
  450edc:	str	w6, [x0, #16]
  450ee0:	ldr	x0, [x0]
  450ee4:	cbz	x0, 450efc <_obstack_memory_used@@Base+0x749c>
  450ee8:	ldr	x1, [x0, #8]
  450eec:	ldr	w1, [x1]
  450ef0:	sub	w1, w1, #0x19
  450ef4:	cmp	w1, #0x2
  450ef8:	b.ls	450ea4 <_obstack_memory_used@@Base+0x7444>  // b.plast
  450efc:	ldr	x2, [x20, #16]
  450f00:	mov	x0, x19
  450f04:	mov	w1, w21
  450f08:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450f0c:	str	x24, [x19, #296]
  450f10:	ldr	w0, [sp, #112]
  450f14:	cbnz	w0, 453574 <_obstack_memory_used@@Base+0x9b14>
  450f18:	ubfiz	x0, x22, #5, #32
  450f1c:	cmp	w22, #0x1
  450f20:	add	x23, x23, x0
  450f24:	b.eq	450f48 <_obstack_memory_used@@Base+0x74e8>  // b.none
  450f28:	ldur	x2, [x23, #-24]
  450f2c:	sub	w22, w22, #0x1
  450f30:	mov	w1, w21
  450f34:	mov	x0, x19
  450f38:	sub	x23, x23, #0x20
  450f3c:	bl	454350 <_obstack_memory_used@@Base+0xa8f0>
  450f40:	cmp	w22, #0x1
  450f44:	b.ne	450f28 <_obstack_memory_used@@Base+0x74c8>  // b.any
  450f48:	ldr	x3, [x19, #296]
  450f4c:	mov	w1, w21
  450f50:	add	x2, x20, #0x8
  450f54:	mov	x0, x19
  450f58:	bl	4551d0 <_obstack_memory_used@@Base+0xb770>
  450f5c:	ldp	x21, x22, [sp, #32]
  450f60:	ldp	x23, x24, [sp, #48]
  450f64:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  450f68:	ldrsh	w0, [x20, #18]
  450f6c:	cbnz	w0, 4532d0 <_obstack_memory_used@@Base+0x9870>
  450f70:	ldr	x2, [x20, #8]
  450f74:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x405a0>
  450f78:	add	x0, x0, #0xdf0
  450f7c:	add	x0, x0, #0x288
  450f80:	ldr	x1, [x2, #8]
  450f84:	cmp	x1, x0
  450f88:	b.eq	452dc4 <_obstack_memory_used@@Base+0x9364>  // b.none
  450f8c:	mov	w1, w21
  450f90:	mov	x0, x19
  450f94:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  450f98:	ldr	x0, [x19, #256]
  450f9c:	add	x1, x0, #0x1
  450fa0:	cmp	x0, #0xff
  450fa4:	b.ne	450fd0 <_obstack_memory_used@@Base+0x7570>  // b.any
  450fa8:	ldp	x3, x2, [x19, #272]
  450fac:	strb	wzr, [x19, #255]
  450fb0:	mov	x1, x0
  450fb4:	mov	x0, x19
  450fb8:	blr	x3
  450fbc:	ldr	x2, [x19, #320]
  450fc0:	mov	x1, #0x1                   	// #1
  450fc4:	mov	x0, #0x0                   	// #0
  450fc8:	add	x2, x2, x1
  450fcc:	str	x2, [x19, #320]
  450fd0:	str	x1, [x19, #256]
  450fd4:	mov	w2, #0x20                  	// #32
  450fd8:	strb	w2, [x19, x0]
  450fdc:	strb	w2, [x19, #264]
  450fe0:	ldrsh	w0, [x20, #16]
  450fe4:	cbnz	w0, 452cd8 <_obstack_memory_used@@Base+0x9278>
  450fe8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  450fec:	add	x20, x20, #0x4f0
  450ff0:	add	x22, x20, #0x6
  450ff4:	mov	w21, #0x5f                  	// #95
  450ff8:	b	451020 <_obstack_memory_used@@Base+0x75c0>
  450ffc:	mov	x0, x1
  451000:	add	x1, x1, #0x1
  451004:	str	x1, [x19, #256]
  451008:	add	x20, x20, #0x1
  45100c:	strb	w21, [x19, x0]
  451010:	cmp	x20, x22
  451014:	strb	w21, [x19, #264]
  451018:	b.eq	452d4c <_obstack_memory_used@@Base+0x92ec>  // b.none
  45101c:	ldrb	w21, [x20]
  451020:	cmp	x1, #0xff
  451024:	b.ne	450ffc <_obstack_memory_used@@Base+0x759c>  // b.any
  451028:	ldp	x3, x2, [x19, #272]
  45102c:	strb	wzr, [x19, #255]
  451030:	mov	x0, x19
  451034:	blr	x3
  451038:	ldr	x2, [x19, #320]
  45103c:	mov	x1, #0x1                   	// #1
  451040:	mov	x0, #0x0                   	// #0
  451044:	add	x2, x2, x1
  451048:	str	x2, [x19, #320]
  45104c:	b	451004 <_obstack_memory_used@@Base+0x75a4>
  451050:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451054:	add	x24, x24, #0x3d0
  451058:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45105c:	add	x24, x24, #0x15
  451060:	add	x22, x22, #0x3d1
  451064:	mov	w23, #0x6e                  	// #110
  451068:	ldr	x1, [x19, #256]
  45106c:	b	451090 <_obstack_memory_used@@Base+0x7630>
  451070:	mov	x0, x1
  451074:	add	x1, x1, #0x1
  451078:	str	x1, [x19, #256]
  45107c:	cmp	x24, x22
  451080:	strb	w23, [x19, x0]
  451084:	strb	w23, [x19, #264]
  451088:	b.eq	452850 <_obstack_memory_used@@Base+0x8df0>  // b.none
  45108c:	ldrb	w23, [x22], #1
  451090:	cmp	x1, #0xff
  451094:	b.ne	451070 <_obstack_memory_used@@Base+0x7610>  // b.any
  451098:	ldp	x3, x2, [x19, #272]
  45109c:	strb	wzr, [x19, #255]
  4510a0:	mov	x0, x19
  4510a4:	blr	x3
  4510a8:	ldr	x2, [x19, #320]
  4510ac:	mov	x1, #0x1                   	// #1
  4510b0:	mov	x0, #0x0                   	// #0
  4510b4:	add	x2, x2, x1
  4510b8:	str	x2, [x19, #320]
  4510bc:	b	451078 <_obstack_memory_used@@Base+0x7618>
  4510c0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4510c4:	add	x24, x24, #0x3e8
  4510c8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4510cc:	add	x24, x24, #0x11
  4510d0:	add	x22, x22, #0x3e9
  4510d4:	mov	w23, #0x76                  	// #118
  4510d8:	ldr	x1, [x19, #256]
  4510dc:	b	451100 <_obstack_memory_used@@Base+0x76a0>
  4510e0:	mov	x0, x1
  4510e4:	add	x1, x1, #0x1
  4510e8:	str	x1, [x19, #256]
  4510ec:	cmp	x24, x22
  4510f0:	strb	w23, [x19, x0]
  4510f4:	strb	w23, [x19, #264]
  4510f8:	b.eq	45286c <_obstack_memory_used@@Base+0x8e0c>  // b.none
  4510fc:	ldrb	w23, [x22], #1
  451100:	cmp	x1, #0xff
  451104:	b.ne	4510e0 <_obstack_memory_used@@Base+0x7680>  // b.any
  451108:	ldp	x3, x2, [x19, #272]
  45110c:	strb	wzr, [x19, #255]
  451110:	mov	x0, x19
  451114:	blr	x3
  451118:	ldr	x2, [x19, #320]
  45111c:	mov	x1, #0x1                   	// #1
  451120:	mov	x0, #0x0                   	// #0
  451124:	add	x2, x2, x1
  451128:	str	x2, [x19, #320]
  45112c:	b	4510e8 <_obstack_memory_used@@Base+0x7688>
  451130:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451134:	add	x24, x24, #0x400
  451138:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45113c:	add	x24, x24, #0x1a
  451140:	add	x22, x22, #0x401
  451144:	mov	w23, #0x63                  	// #99
  451148:	ldr	x1, [x19, #256]
  45114c:	b	451170 <_obstack_memory_used@@Base+0x7710>
  451150:	mov	x0, x1
  451154:	add	x1, x1, #0x1
  451158:	str	x1, [x19, #256]
  45115c:	cmp	x24, x22
  451160:	strb	w23, [x19, x0]
  451164:	strb	w23, [x19, #264]
  451168:	b.eq	452888 <_obstack_memory_used@@Base+0x8e28>  // b.none
  45116c:	ldrb	w23, [x22], #1
  451170:	cmp	x1, #0xff
  451174:	b.ne	451150 <_obstack_memory_used@@Base+0x76f0>  // b.any
  451178:	ldp	x3, x2, [x19, #272]
  45117c:	strb	wzr, [x19, #255]
  451180:	mov	x0, x19
  451184:	blr	x3
  451188:	ldr	x2, [x19, #320]
  45118c:	mov	x1, #0x1                   	// #1
  451190:	mov	x0, #0x0                   	// #0
  451194:	add	x2, x2, x1
  451198:	str	x2, [x19, #320]
  45119c:	b	451158 <_obstack_memory_used@@Base+0x76f8>
  4511a0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4511a4:	add	x24, x24, #0x420
  4511a8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4511ac:	add	x24, x24, #0xf
  4511b0:	add	x22, x22, #0x421
  4511b4:	mov	w23, #0x6a                  	// #106
  4511b8:	ldr	x1, [x19, #256]
  4511bc:	b	4511e0 <_obstack_memory_used@@Base+0x7780>
  4511c0:	mov	x0, x1
  4511c4:	add	x1, x1, #0x1
  4511c8:	str	x1, [x19, #256]
  4511cc:	cmp	x22, x24
  4511d0:	strb	w23, [x19, x0]
  4511d4:	strb	w23, [x19, #264]
  4511d8:	b.eq	4521e8 <_obstack_memory_used@@Base+0x8788>  // b.none
  4511dc:	ldrb	w23, [x22], #1
  4511e0:	cmp	x1, #0xff
  4511e4:	b.ne	4511c0 <_obstack_memory_used@@Base+0x7760>  // b.any
  4511e8:	ldp	x3, x2, [x19, #272]
  4511ec:	strb	wzr, [x19, #255]
  4511f0:	mov	x0, x19
  4511f4:	blr	x3
  4511f8:	ldr	x2, [x19, #320]
  4511fc:	mov	x1, #0x1                   	// #1
  451200:	mov	x0, #0x0                   	// #0
  451204:	add	x2, x2, x1
  451208:	str	x2, [x19, #320]
  45120c:	b	4511c8 <_obstack_memory_used@@Base+0x7768>
  451210:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451214:	add	x24, x24, #0x480
  451218:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45121c:	add	x24, x24, #0x15
  451220:	add	x22, x22, #0x481
  451224:	mov	w23, #0x72                  	// #114
  451228:	ldr	x1, [x19, #256]
  45122c:	b	451250 <_obstack_memory_used@@Base+0x77f0>
  451230:	mov	x0, x1
  451234:	add	x1, x1, #0x1
  451238:	str	x1, [x19, #256]
  45123c:	cmp	x24, x22
  451240:	strb	w23, [x19, x0]
  451244:	strb	w23, [x19, #264]
  451248:	b.eq	452220 <_obstack_memory_used@@Base+0x87c0>  // b.none
  45124c:	ldrb	w23, [x22], #1
  451250:	cmp	x1, #0xff
  451254:	b.ne	451230 <_obstack_memory_used@@Base+0x77d0>  // b.any
  451258:	ldp	x3, x2, [x19, #272]
  45125c:	strb	wzr, [x19, #255]
  451260:	mov	x0, x19
  451264:	blr	x3
  451268:	ldr	x2, [x19, #320]
  45126c:	mov	x1, #0x1                   	// #1
  451270:	mov	x0, #0x0                   	// #0
  451274:	add	x2, x2, x1
  451278:	str	x2, [x19, #320]
  45127c:	b	451238 <_obstack_memory_used@@Base+0x77d8>
  451280:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451284:	add	x24, x24, #0x448
  451288:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45128c:	add	x24, x24, #0x16
  451290:	add	x22, x22, #0x449
  451294:	mov	w23, #0x54                  	// #84
  451298:	ldr	x1, [x19, #256]
  45129c:	b	4512c0 <_obstack_memory_used@@Base+0x7860>
  4512a0:	mov	x0, x1
  4512a4:	add	x1, x1, #0x1
  4512a8:	str	x1, [x19, #256]
  4512ac:	cmp	x22, x24
  4512b0:	strb	w23, [x19, x0]
  4512b4:	strb	w23, [x19, #264]
  4512b8:	b.eq	4527e0 <_obstack_memory_used@@Base+0x8d80>  // b.none
  4512bc:	ldrb	w23, [x22], #1
  4512c0:	cmp	x1, #0xff
  4512c4:	b.ne	4512a0 <_obstack_memory_used@@Base+0x7840>  // b.any
  4512c8:	ldp	x3, x2, [x19, #272]
  4512cc:	strb	wzr, [x19, #255]
  4512d0:	mov	x0, x19
  4512d4:	blr	x3
  4512d8:	ldr	x2, [x19, #320]
  4512dc:	mov	x1, #0x1                   	// #1
  4512e0:	mov	x0, #0x0                   	// #0
  4512e4:	add	x2, x2, x1
  4512e8:	str	x2, [x19, #320]
  4512ec:	b	4512a8 <_obstack_memory_used@@Base+0x7848>
  4512f0:	ldr	x1, [x20, #8]
  4512f4:	mov	x0, x19
  4512f8:	mov	w24, #0x0                   	// #0
  4512fc:	bl	44cb80 <_obstack_memory_used@@Base+0x3120>
  451300:	cbz	x0, 453d14 <_obstack_memory_used@@Base+0xa2b4>
  451304:	stp	x25, x26, [sp, #64]
  451308:	ldr	w1, [x0]
  45130c:	cmp	w1, #0x2f
  451310:	b.ne	4529bc <_obstack_memory_used@@Base+0x8f5c>  // b.any
  451314:	ldr	x1, [x0, #8]
  451318:	cbz	x1, 4529bc <_obstack_memory_used@@Base+0x8f5c>
  45131c:	ldr	x0, [x0, #16]
  451320:	add	w24, w24, #0x1
  451324:	cbnz	x0, 451308 <_obstack_memory_used@@Base+0x78a8>
  451328:	ldr	x25, [x20, #8]
  45132c:	sub	w26, w24, #0x1
  451330:	b	451340 <_obstack_memory_used@@Base+0x78e0>
  451334:	add	w22, w22, #0x1
  451338:	cmp	w22, w24
  45133c:	b.ge	452964 <_obstack_memory_used@@Base+0x8f04>  // b.tcont
  451340:	str	w22, [x19, #316]
  451344:	mov	x2, x25
  451348:	mov	w1, w21
  45134c:	mov	x0, x19
  451350:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451354:	cmp	w26, w22
  451358:	b.le	451334 <_obstack_memory_used@@Base+0x78d4>
  45135c:	mov	w20, #0x2c                  	// #44
  451360:	mov	x23, #0x0                   	// #0
  451364:	ldr	x1, [x19, #256]
  451368:	b	45138c <_obstack_memory_used@@Base+0x792c>
  45136c:	mov	x0, x1
  451370:	add	x1, x1, #0x1
  451374:	str	x1, [x19, #256]
  451378:	strb	w20, [x19, x0]
  45137c:	strb	w20, [x19, #264]
  451380:	mov	w20, #0x20                  	// #32
  451384:	cbnz	x23, 451334 <_obstack_memory_used@@Base+0x78d4>
  451388:	mov	x23, #0x1                   	// #1
  45138c:	cmp	x1, #0xff
  451390:	b.ne	45136c <_obstack_memory_used@@Base+0x790c>  // b.any
  451394:	ldp	x3, x2, [x19, #272]
  451398:	strb	wzr, [x19, #255]
  45139c:	mov	x0, x19
  4513a0:	blr	x3
  4513a4:	ldr	x2, [x19, #320]
  4513a8:	mov	x1, #0x1                   	// #1
  4513ac:	mov	x0, #0x0                   	// #0
  4513b0:	add	x2, x2, x1
  4513b4:	str	x2, [x19, #320]
  4513b8:	b	451374 <_obstack_memory_used@@Base+0x7914>
  4513bc:	ldr	x2, [x20, #8]
  4513c0:	mov	w1, w21
  4513c4:	mov	x0, x19
  4513c8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4513cc:	add	x24, x24, #0x2f8
  4513d0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4513d4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4513d8:	add	x24, x24, #0x5
  4513dc:	add	x22, x22, #0x2f9
  4513e0:	mov	w23, #0x5b                  	// #91
  4513e4:	ldr	x1, [x19, #256]
  4513e8:	b	45140c <_obstack_memory_used@@Base+0x79ac>
  4513ec:	mov	x0, x1
  4513f0:	add	x1, x1, #0x1
  4513f4:	str	x1, [x19, #256]
  4513f8:	cmp	x24, x22
  4513fc:	strb	w23, [x19, x0]
  451400:	strb	w23, [x19, #264]
  451404:	b.eq	45232c <_obstack_memory_used@@Base+0x88cc>  // b.none
  451408:	ldrb	w23, [x22], #1
  45140c:	cmp	x1, #0xff
  451410:	b.ne	4513ec <_obstack_memory_used@@Base+0x798c>  // b.any
  451414:	ldp	x3, x2, [x19, #272]
  451418:	strb	wzr, [x19, #255]
  45141c:	mov	x0, x19
  451420:	blr	x3
  451424:	ldr	x2, [x19, #320]
  451428:	mov	x1, #0x1                   	// #1
  45142c:	mov	x0, #0x0                   	// #0
  451430:	add	x2, x2, x1
  451434:	str	x2, [x19, #320]
  451438:	b	4513f4 <_obstack_memory_used@@Base+0x7994>
  45143c:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451440:	add	x24, x24, #0x4c8
  451444:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451448:	add	x24, x24, #0x1a
  45144c:	add	x22, x22, #0x4c9
  451450:	mov	w23, #0x6e                  	// #110
  451454:	ldr	x1, [x19, #256]
  451458:	b	45147c <_obstack_memory_used@@Base+0x7a1c>
  45145c:	mov	x0, x1
  451460:	add	x1, x1, #0x1
  451464:	str	x1, [x19, #256]
  451468:	cmp	x24, x22
  45146c:	strb	w23, [x19, x0]
  451470:	strb	w23, [x19, #264]
  451474:	b.eq	4522f4 <_obstack_memory_used@@Base+0x8894>  // b.none
  451478:	ldrb	w23, [x22], #1
  45147c:	cmp	x1, #0xff
  451480:	b.ne	45145c <_obstack_memory_used@@Base+0x79fc>  // b.any
  451484:	ldp	x3, x2, [x19, #272]
  451488:	strb	wzr, [x19, #255]
  45148c:	mov	x0, x19
  451490:	blr	x3
  451494:	ldr	x2, [x19, #320]
  451498:	mov	x1, #0x1                   	// #1
  45149c:	mov	x0, #0x0                   	// #0
  4514a0:	add	x2, x2, x1
  4514a4:	str	x2, [x19, #320]
  4514a8:	b	451464 <_obstack_memory_used@@Base+0x7a04>
  4514ac:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4514b0:	add	x24, x24, #0x430
  4514b4:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4514b8:	add	x24, x24, #0x13
  4514bc:	add	x22, x22, #0x431
  4514c0:	mov	w23, #0x67                  	// #103
  4514c4:	ldr	x1, [x19, #256]
  4514c8:	b	4514ec <_obstack_memory_used@@Base+0x7a8c>
  4514cc:	mov	x0, x1
  4514d0:	add	x1, x1, #0x1
  4514d4:	str	x1, [x19, #256]
  4514d8:	cmp	x24, x22
  4514dc:	strb	w23, [x19, x0]
  4514e0:	strb	w23, [x19, #264]
  4514e4:	b.eq	452204 <_obstack_memory_used@@Base+0x87a4>  // b.none
  4514e8:	ldrb	w23, [x22], #1
  4514ec:	cmp	x1, #0xff
  4514f0:	b.ne	4514cc <_obstack_memory_used@@Base+0x7a6c>  // b.any
  4514f4:	ldp	x3, x2, [x19, #272]
  4514f8:	strb	wzr, [x19, #255]
  4514fc:	mov	x0, x19
  451500:	blr	x3
  451504:	ldr	x2, [x19, #320]
  451508:	mov	x1, #0x1                   	// #1
  45150c:	mov	x0, #0x0                   	// #0
  451510:	add	x2, x2, x1
  451514:	str	x2, [x19, #320]
  451518:	b	4514d4 <_obstack_memory_used@@Base+0x7a74>
  45151c:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451520:	add	x24, x24, #0x460
  451524:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451528:	add	x24, x24, #0x19
  45152c:	add	x22, x22, #0x461
  451530:	mov	w23, #0x54                  	// #84
  451534:	ldr	x1, [x19, #256]
  451538:	b	45155c <_obstack_memory_used@@Base+0x7afc>
  45153c:	mov	x0, x1
  451540:	add	x1, x1, #0x1
  451544:	str	x1, [x19, #256]
  451548:	cmp	x24, x22
  45154c:	strb	w23, [x19, x0]
  451550:	strb	w23, [x19, #264]
  451554:	b.eq	4527fc <_obstack_memory_used@@Base+0x8d9c>  // b.none
  451558:	ldrb	w23, [x22], #1
  45155c:	cmp	x1, #0xff
  451560:	b.ne	45153c <_obstack_memory_used@@Base+0x7adc>  // b.any
  451564:	ldp	x3, x2, [x19, #272]
  451568:	strb	wzr, [x19, #255]
  45156c:	mov	x0, x19
  451570:	blr	x3
  451574:	ldr	x2, [x19, #320]
  451578:	mov	x1, #0x1                   	// #1
  45157c:	mov	x0, #0x0                   	// #0
  451580:	add	x2, x2, x1
  451584:	str	x2, [x19, #320]
  451588:	b	451544 <_obstack_memory_used@@Base+0x7ae4>
  45158c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451590:	add	x22, x22, #0x358
  451594:	add	x24, x22, #0x8
  451598:	mov	w23, #0x56                  	// #86
  45159c:	ldr	x1, [x19, #256]
  4515a0:	b	4515c8 <_obstack_memory_used@@Base+0x7b68>
  4515a4:	mov	x0, x1
  4515a8:	add	x1, x1, #0x1
  4515ac:	str	x1, [x19, #256]
  4515b0:	add	x22, x22, #0x1
  4515b4:	strb	w23, [x19, x0]
  4515b8:	cmp	x24, x22
  4515bc:	strb	w23, [x19, #264]
  4515c0:	b.eq	452748 <_obstack_memory_used@@Base+0x8ce8>  // b.none
  4515c4:	ldrb	w23, [x22]
  4515c8:	cmp	x1, #0xff
  4515cc:	b.ne	4515a4 <_obstack_memory_used@@Base+0x7b44>  // b.any
  4515d0:	ldp	x3, x2, [x19, #272]
  4515d4:	strb	wzr, [x19, #255]
  4515d8:	mov	x0, x19
  4515dc:	blr	x3
  4515e0:	ldr	x2, [x19, #320]
  4515e4:	mov	x1, #0x1                   	// #1
  4515e8:	mov	x0, #0x0                   	// #0
  4515ec:	add	x2, x2, x1
  4515f0:	str	x2, [x19, #320]
  4515f4:	b	4515ac <_obstack_memory_used@@Base+0x7b4c>
  4515f8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4515fc:	add	x24, x24, #0x368
  451600:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451604:	add	x24, x24, #0x18
  451608:	add	x22, x22, #0x369
  45160c:	mov	w23, #0x63                  	// #99
  451610:	ldr	x1, [x19, #256]
  451614:	b	451638 <_obstack_memory_used@@Base+0x7bd8>
  451618:	mov	x0, x1
  45161c:	add	x1, x1, #0x1
  451620:	str	x1, [x19, #256]
  451624:	cmp	x24, x22
  451628:	strb	w23, [x19, x0]
  45162c:	strb	w23, [x19, #264]
  451630:	b.eq	452764 <_obstack_memory_used@@Base+0x8d04>  // b.none
  451634:	ldrb	w23, [x22], #1
  451638:	cmp	x1, #0xff
  45163c:	b.ne	451618 <_obstack_memory_used@@Base+0x7bb8>  // b.any
  451640:	ldp	x3, x2, [x19, #272]
  451644:	strb	wzr, [x19, #255]
  451648:	mov	x0, x19
  45164c:	blr	x3
  451650:	ldr	x2, [x19, #320]
  451654:	mov	x1, #0x1                   	// #1
  451658:	mov	x0, #0x0                   	// #0
  45165c:	add	x2, x2, x1
  451660:	str	x2, [x19, #320]
  451664:	b	451620 <_obstack_memory_used@@Base+0x7bc0>
  451668:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45166c:	add	x24, x24, #0x390
  451670:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451674:	add	x24, x24, #0xd
  451678:	add	x22, x22, #0x391
  45167c:	mov	w23, #0x74                  	// #116
  451680:	ldr	x1, [x19, #256]
  451684:	b	4516a8 <_obstack_memory_used@@Base+0x7c48>
  451688:	mov	x0, x1
  45168c:	add	x1, x1, #0x1
  451690:	str	x1, [x19, #256]
  451694:	cmp	x24, x22
  451698:	strb	w23, [x19, x0]
  45169c:	strb	w23, [x19, #264]
  4516a0:	b.eq	4522bc <_obstack_memory_used@@Base+0x885c>  // b.none
  4516a4:	ldrb	w23, [x22], #1
  4516a8:	cmp	x1, #0xff
  4516ac:	b.ne	451688 <_obstack_memory_used@@Base+0x7c28>  // b.any
  4516b0:	ldp	x3, x2, [x19, #272]
  4516b4:	strb	wzr, [x19, #255]
  4516b8:	mov	x0, x19
  4516bc:	blr	x3
  4516c0:	ldr	x2, [x19, #320]
  4516c4:	mov	x1, #0x1                   	// #1
  4516c8:	mov	x0, #0x0                   	// #0
  4516cc:	add	x2, x2, x1
  4516d0:	str	x2, [x19, #320]
  4516d4:	b	451690 <_obstack_memory_used@@Base+0x7c30>
  4516d8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4516dc:	add	x24, x24, #0x3a0
  4516e0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4516e4:	add	x24, x24, #0x12
  4516e8:	add	x22, x22, #0x3a1
  4516ec:	mov	w23, #0x74                  	// #116
  4516f0:	ldr	x1, [x19, #256]
  4516f4:	b	451718 <_obstack_memory_used@@Base+0x7cb8>
  4516f8:	mov	x0, x1
  4516fc:	add	x1, x1, #0x1
  451700:	str	x1, [x19, #256]
  451704:	cmp	x24, x22
  451708:	strb	w23, [x19, x0]
  45170c:	strb	w23, [x19, #264]
  451710:	b.eq	4522d8 <_obstack_memory_used@@Base+0x8878>  // b.none
  451714:	ldrb	w23, [x22], #1
  451718:	cmp	x1, #0xff
  45171c:	b.ne	4516f8 <_obstack_memory_used@@Base+0x7c98>  // b.any
  451720:	ldp	x3, x2, [x19, #272]
  451724:	strb	wzr, [x19, #255]
  451728:	mov	x0, x19
  45172c:	blr	x3
  451730:	ldr	x2, [x19, #320]
  451734:	mov	x1, #0x1                   	// #1
  451738:	mov	x0, #0x0                   	// #0
  45173c:	add	x2, x2, x1
  451740:	str	x2, [x19, #320]
  451744:	b	451700 <_obstack_memory_used@@Base+0x7ca0>
  451748:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45174c:	add	x24, x24, #0x3b8
  451750:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451754:	add	x24, x24, #0x10
  451758:	add	x22, x22, #0x3b9
  45175c:	mov	w23, #0x74                  	// #116
  451760:	ldr	x1, [x19, #256]
  451764:	b	451788 <_obstack_memory_used@@Base+0x7d28>
  451768:	mov	x0, x1
  45176c:	add	x1, x1, #0x1
  451770:	str	x1, [x19, #256]
  451774:	cmp	x24, x22
  451778:	strb	w23, [x19, x0]
  45177c:	strb	w23, [x19, #264]
  451780:	b.eq	45272c <_obstack_memory_used@@Base+0x8ccc>  // b.none
  451784:	ldrb	w23, [x22], #1
  451788:	cmp	x1, #0xff
  45178c:	b.ne	451768 <_obstack_memory_used@@Base+0x7d08>  // b.any
  451790:	ldp	x3, x2, [x19, #272]
  451794:	strb	wzr, [x19, #255]
  451798:	mov	x0, x19
  45179c:	blr	x3
  4517a0:	ldr	x2, [x19, #320]
  4517a4:	mov	x1, #0x1                   	// #1
  4517a8:	mov	x0, #0x0                   	// #0
  4517ac:	add	x2, x2, x1
  4517b0:	str	x2, [x19, #320]
  4517b4:	b	451770 <_obstack_memory_used@@Base+0x7d10>
  4517b8:	stp	x25, x26, [sp, #64]
  4517bc:	ldr	x25, [x20, #8]
  4517c0:	ldr	x22, [x19, #296]
  4517c4:	str	xzr, [x19, #296]
  4517c8:	cbz	x25, 453880 <_obstack_memory_used@@Base+0x9e20>
  4517cc:	add	x23, sp, #0x60
  4517d0:	mov	x2, #0x1f                  	// #31
  4517d4:	ldr	x6, [x19, #288]
  4517d8:	mov	x3, x23
  4517dc:	mov	x0, #0x0                   	// #0
  4517e0:	mov	w24, #0x0                   	// #0
  4517e4:	mov	x1, #0x1                   	// #1
  4517e8:	movk	x2, #0x1a, lsl #48
  4517ec:	str	wzr, [x3, #16]
  4517f0:	add	w24, w24, #0x1
  4517f4:	str	x0, [x3]
  4517f8:	mov	x4, x3
  4517fc:	ldr	w5, [x25]
  451800:	str	x25, [x3, #8]
  451804:	str	x6, [x3, #24]
  451808:	sub	w0, w5, #0x1c
  45180c:	cmp	w0, #0x34
  451810:	b.hi	451820 <_obstack_memory_used@@Base+0x7dc0>  // b.pmore
  451814:	lsl	x0, x1, x0
  451818:	tst	x0, x2
  45181c:	b.ne	4529a0 <_obstack_memory_used@@Base+0x8f40>  // b.any
  451820:	str	x3, [x19, #296]
  451824:	cmp	w5, #0x2
  451828:	b.eq	453760 <_obstack_memory_used@@Base+0x9d00>  // b.none
  45182c:	cmp	w5, #0x4
  451830:	b.ne	451840 <_obstack_memory_used@@Base+0x7de0>  // b.any
  451834:	add	x0, sp, #0x50
  451838:	stp	x6, x25, [sp, #80]
  45183c:	str	x0, [x19, #288]
  451840:	ldr	x2, [x20, #16]
  451844:	mov	x0, x19
  451848:	mov	w1, w21
  45184c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451850:	ldr	w0, [x25]
  451854:	cmp	w0, #0x4
  451858:	b.ne	451864 <_obstack_memory_used@@Base+0x7e04>  // b.any
  45185c:	ldr	x0, [sp, #80]
  451860:	str	x0, [x19, #288]
  451864:	sub	w20, w24, #0x1
  451868:	mov	w24, #0x20                  	// #32
  45186c:	ubfiz	x0, x20, #5, #32
  451870:	add	x23, x23, x0
  451874:	b	45187c <_obstack_memory_used@@Base+0x7e1c>
  451878:	sub	w20, w20, #0x1
  45187c:	ldr	w0, [x23, #16]
  451880:	cbnz	w0, 4518d8 <_obstack_memory_used@@Base+0x7e78>
  451884:	ldr	x0, [x19, #256]
  451888:	add	x1, x0, #0x1
  45188c:	cmp	x0, #0xff
  451890:	b.ne	4518bc <_obstack_memory_used@@Base+0x7e5c>  // b.any
  451894:	ldp	x3, x2, [x19, #272]
  451898:	strb	wzr, [x19, #255]
  45189c:	mov	x1, x0
  4518a0:	mov	x0, x19
  4518a4:	blr	x3
  4518a8:	ldr	x2, [x19, #320]
  4518ac:	mov	x1, #0x1                   	// #1
  4518b0:	mov	x0, #0x0                   	// #0
  4518b4:	add	x2, x2, x1
  4518b8:	str	x2, [x19, #320]
  4518bc:	str	x1, [x19, #256]
  4518c0:	mov	w1, w21
  4518c4:	ldr	x2, [x23, #8]
  4518c8:	strb	w24, [x19, x0]
  4518cc:	strb	w24, [x19, #264]
  4518d0:	mov	x0, x19
  4518d4:	bl	454350 <_obstack_memory_used@@Base+0xa8f0>
  4518d8:	sub	x23, x23, #0x20
  4518dc:	cbnz	w20, 451878 <_obstack_memory_used@@Base+0x7e18>
  4518e0:	ldp	x23, x24, [sp, #48]
  4518e4:	ldp	x25, x26, [sp, #64]
  4518e8:	str	x22, [x19, #296]
  4518ec:	ldp	x21, x22, [sp, #32]
  4518f0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4518f4:	ldr	x22, [x20, #8]
  4518f8:	ldr	x24, [x19, #296]
  4518fc:	str	xzr, [x19, #296]
  451900:	ldr	x23, [x19, #368]
  451904:	str	x20, [x19, #368]
  451908:	tbz	w21, #2, 451920 <_obstack_memory_used@@Base+0x7ec0>
  45190c:	ldr	w0, [x22]
  451910:	cbnz	w0, 451920 <_obstack_memory_used@@Base+0x7ec0>
  451914:	ldr	w0, [x22, #16]
  451918:	cmp	w0, #0x6
  45191c:	b.eq	453c18 <_obstack_memory_used@@Base+0xa1b8>  // b.none
  451920:	mov	x0, x19
  451924:	mov	x2, x22
  451928:	mov	w1, w21
  45192c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451930:	ldrb	w0, [x19, #264]
  451934:	cmp	w0, #0x3c
  451938:	b.eq	453480 <_obstack_memory_used@@Base+0x9a20>  // b.none
  45193c:	ldr	x1, [x19, #256]
  451940:	add	x0, x1, #0x1
  451944:	cmp	x1, #0xff
  451948:	b.ne	451970 <_obstack_memory_used@@Base+0x7f10>  // b.any
  45194c:	ldp	x3, x2, [x19, #272]
  451950:	strb	wzr, [x19, #255]
  451954:	mov	x0, x19
  451958:	blr	x3
  45195c:	ldr	x2, [x19, #320]
  451960:	mov	x0, #0x1                   	// #1
  451964:	mov	x1, #0x0                   	// #0
  451968:	add	x2, x2, x0
  45196c:	str	x2, [x19, #320]
  451970:	str	x0, [x19, #256]
  451974:	mov	w0, #0x3c                  	// #60
  451978:	strb	w0, [x19, x1]
  45197c:	mov	w1, w21
  451980:	strb	w0, [x19, #264]
  451984:	mov	x0, x19
  451988:	ldr	x2, [x20, #16]
  45198c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451990:	ldrb	w0, [x19, #264]
  451994:	cmp	w0, #0x3e
  451998:	b.eq	453438 <_obstack_memory_used@@Base+0x99d8>  // b.none
  45199c:	ldr	x1, [x19, #256]
  4519a0:	add	x0, x1, #0x1
  4519a4:	cmp	x1, #0xff
  4519a8:	b.ne	4519d0 <_obstack_memory_used@@Base+0x7f70>  // b.any
  4519ac:	ldp	x3, x2, [x19, #272]
  4519b0:	strb	wzr, [x19, #255]
  4519b4:	mov	x0, x19
  4519b8:	blr	x3
  4519bc:	ldr	x2, [x19, #320]
  4519c0:	mov	x0, #0x1                   	// #1
  4519c4:	mov	x1, #0x0                   	// #0
  4519c8:	add	x2, x2, x0
  4519cc:	str	x2, [x19, #320]
  4519d0:	str	x0, [x19, #256]
  4519d4:	mov	w0, #0x3e                  	// #62
  4519d8:	strb	w0, [x19, x1]
  4519dc:	strb	w0, [x19, #264]
  4519e0:	ldp	x21, x22, [sp, #32]
  4519e4:	str	x24, [x19, #296]
  4519e8:	str	x23, [x19, #368]
  4519ec:	ldp	x23, x24, [sp, #48]
  4519f0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4519f4:	ldr	w0, [x19, #312]
  4519f8:	cbz	w0, 452ac4 <_obstack_memory_used@@Base+0x9064>
  4519fc:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451a00:	add	x23, x23, #0x320
  451a04:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451a08:	add	x23, x23, #0x5
  451a0c:	add	x21, x21, #0x321
  451a10:	mov	w22, #0x61                  	// #97
  451a14:	ldr	x1, [x19, #256]
  451a18:	b	451a3c <_obstack_memory_used@@Base+0x7fdc>
  451a1c:	mov	x0, x1
  451a20:	add	x1, x1, #0x1
  451a24:	str	x1, [x19, #256]
  451a28:	cmp	x23, x21
  451a2c:	strb	w22, [x19, x0]
  451a30:	strb	w22, [x19, #264]
  451a34:	b.eq	452b0c <_obstack_memory_used@@Base+0x90ac>  // b.none
  451a38:	ldrb	w22, [x21], #1
  451a3c:	cmp	x1, #0xff
  451a40:	b.ne	451a1c <_obstack_memory_used@@Base+0x7fbc>  // b.any
  451a44:	ldp	x3, x2, [x19, #272]
  451a48:	strb	wzr, [x19, #255]
  451a4c:	mov	x0, x19
  451a50:	blr	x3
  451a54:	ldr	x2, [x19, #320]
  451a58:	mov	x1, #0x1                   	// #1
  451a5c:	mov	x0, #0x0                   	// #0
  451a60:	add	x2, x2, x1
  451a64:	str	x2, [x19, #320]
  451a68:	b	451a24 <_obstack_memory_used@@Base+0x7fc4>
  451a6c:	ldr	x1, [x19, #256]
  451a70:	add	x0, x1, #0x1
  451a74:	cmp	x1, #0xff
  451a78:	b.ne	451aa0 <_obstack_memory_used@@Base+0x8040>  // b.any
  451a7c:	ldp	x3, x2, [x19, #272]
  451a80:	strb	wzr, [x19, #255]
  451a84:	mov	x0, x19
  451a88:	blr	x3
  451a8c:	ldr	x2, [x19, #320]
  451a90:	mov	x0, #0x1                   	// #1
  451a94:	mov	x1, #0x0                   	// #0
  451a98:	add	x2, x2, x0
  451a9c:	str	x2, [x19, #320]
  451aa0:	str	x0, [x19, #256]
  451aa4:	mov	w0, #0x7e                  	// #126
  451aa8:	strb	w0, [x19, x1]
  451aac:	mov	w1, w21
  451ab0:	strb	w0, [x19, #264]
  451ab4:	mov	x0, x19
  451ab8:	ldr	x2, [x20, #16]
  451abc:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451ac0:	ldp	x21, x22, [sp, #32]
  451ac4:	ldp	x23, x24, [sp, #48]
  451ac8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  451acc:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451ad0:	add	x24, x24, #0x348
  451ad4:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451ad8:	add	x24, x24, #0xb
  451adc:	add	x22, x22, #0x349
  451ae0:	mov	w23, #0x76                  	// #118
  451ae4:	ldr	x1, [x19, #256]
  451ae8:	b	451b0c <_obstack_memory_used@@Base+0x80ac>
  451aec:	mov	x0, x1
  451af0:	add	x1, x1, #0x1
  451af4:	str	x1, [x19, #256]
  451af8:	cmp	x24, x22
  451afc:	strb	w23, [x19, x0]
  451b00:	strb	w23, [x19, #264]
  451b04:	b.eq	4522a0 <_obstack_memory_used@@Base+0x8840>  // b.none
  451b08:	ldrb	w23, [x22], #1
  451b0c:	cmp	x1, #0xff
  451b10:	b.ne	451aec <_obstack_memory_used@@Base+0x808c>  // b.any
  451b14:	ldp	x3, x2, [x19, #272]
  451b18:	strb	wzr, [x19, #255]
  451b1c:	mov	x0, x19
  451b20:	blr	x3
  451b24:	ldr	x2, [x19, #320]
  451b28:	mov	x1, #0x1                   	// #1
  451b2c:	mov	x0, #0x0                   	// #0
  451b30:	add	x2, x2, x1
  451b34:	str	x2, [x19, #320]
  451b38:	b	451af4 <_obstack_memory_used@@Base+0x8094>
  451b3c:	ldr	x0, [x20, #16]
  451b40:	ldr	w0, [x0]
  451b44:	cmp	w0, #0x39
  451b48:	b.ne	450538 <_obstack_memory_used@@Base+0x6ad8>  // b.any
  451b4c:	ldr	x2, [x20, #8]
  451b50:	ldr	x0, [x2, #8]
  451b54:	ldr	x0, [x0]
  451b58:	ldrb	w1, [x0, #1]
  451b5c:	cmp	w1, #0x63
  451b60:	b.eq	453898 <_obstack_memory_used@@Base+0x9e38>  // b.none
  451b64:	add	x3, x20, #0x10
  451b68:	mov	w1, w21
  451b6c:	mov	x0, x19
  451b70:	bl	455608 <_obstack_memory_used@@Base+0xbba8>
  451b74:	cbnz	w0, 453c00 <_obstack_memory_used@@Base+0xa1a0>
  451b78:	ldr	x0, [x20, #8]
  451b7c:	ldr	w1, [x0]
  451b80:	cmp	w1, #0x32
  451b84:	b.eq	453d74 <_obstack_memory_used@@Base+0xa314>  // b.none
  451b88:	ldr	x0, [x0, #8]
  451b8c:	ldr	x1, [x0]
  451b90:	ldrb	w0, [x1]
  451b94:	subs	w0, w0, #0x63
  451b98:	b.ne	451bac <_obstack_memory_used@@Base+0x814c>  // b.any
  451b9c:	ldrb	w0, [x1, #1]
  451ba0:	subs	w0, w0, #0x6c
  451ba4:	b.ne	451bac <_obstack_memory_used@@Base+0x814c>  // b.any
  451ba8:	ldrb	w0, [x1, #2]
  451bac:	ldr	x1, [x20, #16]
  451bb0:	ldr	x2, [x1, #8]
  451bb4:	cbnz	w0, 451bc4 <_obstack_memory_used@@Base+0x8164>
  451bb8:	ldr	w0, [x2]
  451bbc:	cmp	w0, #0x3
  451bc0:	b.eq	453e38 <_obstack_memory_used@@Base+0xa3d8>  // b.none
  451bc4:	mov	w1, w21
  451bc8:	mov	x0, x19
  451bcc:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  451bd0:	ldr	x2, [x20, #8]
  451bd4:	ldr	x0, [x2, #8]
  451bd8:	ldr	x0, [x0]
  451bdc:	ldrb	w1, [x0]
  451be0:	cmp	w1, #0x69
  451be4:	b.ne	453b50 <_obstack_memory_used@@Base+0xa0f0>  // b.any
  451be8:	ldrb	w3, [x0, #1]
  451bec:	cmp	w3, #0x78
  451bf0:	b.ne	453b50 <_obstack_memory_used@@Base+0xa0f0>  // b.any
  451bf4:	ldrb	w3, [x0, #2]
  451bf8:	cbnz	w3, 453b50 <_obstack_memory_used@@Base+0xa0f0>
  451bfc:	ldr	x1, [x19, #256]
  451c00:	cmp	x1, #0xff
  451c04:	b.ne	451c2c <_obstack_memory_used@@Base+0x81cc>  // b.any
  451c08:	ldp	x3, x2, [x19, #272]
  451c0c:	strb	wzr, [x19, #255]
  451c10:	mov	x0, x19
  451c14:	blr	x3
  451c18:	str	xzr, [x19, #256]
  451c1c:	ldr	x0, [x19, #320]
  451c20:	mov	x1, #0x0                   	// #0
  451c24:	add	x0, x0, #0x1
  451c28:	str	x0, [x19, #320]
  451c2c:	add	x0, x1, #0x1
  451c30:	str	x0, [x19, #256]
  451c34:	mov	w0, #0x5b                  	// #91
  451c38:	strb	w0, [x19, x1]
  451c3c:	strb	w0, [x19, #264]
  451c40:	mov	w1, w21
  451c44:	mov	x0, x19
  451c48:	ldr	x2, [x20, #16]
  451c4c:	ldr	x2, [x2, #16]
  451c50:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451c54:	ldr	x1, [x19, #256]
  451c58:	cmp	x1, #0xff
  451c5c:	b.ne	451c84 <_obstack_memory_used@@Base+0x8224>  // b.any
  451c60:	ldp	x3, x2, [x19, #272]
  451c64:	strb	wzr, [x19, #255]
  451c68:	mov	x0, x19
  451c6c:	blr	x3
  451c70:	str	xzr, [x19, #256]
  451c74:	ldr	x0, [x19, #320]
  451c78:	mov	x1, #0x0                   	// #0
  451c7c:	add	x0, x0, #0x1
  451c80:	str	x0, [x19, #320]
  451c84:	add	x0, x1, #0x1
  451c88:	str	x0, [x19, #256]
  451c8c:	mov	w0, #0x5d                  	// #93
  451c90:	strb	w0, [x19, x1]
  451c94:	strb	w0, [x19, #264]
  451c98:	ldr	x0, [x20, #8]
  451c9c:	ldr	w1, [x0]
  451ca0:	cmp	w1, #0x32
  451ca4:	b.eq	453d58 <_obstack_memory_used@@Base+0xa2f8>  // b.none
  451ca8:	ldp	x21, x22, [sp, #32]
  451cac:	ldp	x23, x24, [sp, #48]
  451cb0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  451cb4:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451cb8:	add	x24, x24, #0x550
  451cbc:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451cc0:	add	x24, x24, #0xe
  451cc4:	add	x22, x22, #0x551
  451cc8:	mov	w23, #0x6a                  	// #106
  451ccc:	ldr	x1, [x19, #256]
  451cd0:	b	451cf4 <_obstack_memory_used@@Base+0x8294>
  451cd4:	mov	x0, x1
  451cd8:	add	x1, x1, #0x1
  451cdc:	str	x1, [x19, #256]
  451ce0:	cmp	x24, x22
  451ce4:	strb	w23, [x19, x0]
  451ce8:	strb	w23, [x19, #264]
  451cec:	b.eq	4528a4 <_obstack_memory_used@@Base+0x8e44>  // b.none
  451cf0:	ldrb	w23, [x22], #1
  451cf4:	cmp	x1, #0xff
  451cf8:	b.ne	451cd4 <_obstack_memory_used@@Base+0x8274>  // b.any
  451cfc:	ldp	x3, x2, [x19, #272]
  451d00:	strb	wzr, [x19, #255]
  451d04:	mov	x0, x19
  451d08:	blr	x3
  451d0c:	ldr	x2, [x19, #320]
  451d10:	mov	x1, #0x1                   	// #1
  451d14:	mov	x0, #0x0                   	// #0
  451d18:	add	x2, x2, x1
  451d1c:	str	x2, [x19, #320]
  451d20:	b	451cdc <_obstack_memory_used@@Base+0x827c>
  451d24:	ldr	x2, [x20, #8]
  451d28:	mov	w1, w21
  451d2c:	mov	x0, x19
  451d30:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451d34:	ldr	x2, [x20, #16]
  451d38:	mov	w1, w21
  451d3c:	mov	x0, x19
  451d40:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  451d44:	ldp	x21, x22, [sp, #32]
  451d48:	ldp	x23, x24, [sp, #48]
  451d4c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  451d50:	ldr	x1, [x19, #256]
  451d54:	ldrb	w20, [x20, #8]
  451d58:	add	x0, x1, #0x1
  451d5c:	cmp	x1, #0xff
  451d60:	b.ne	451d88 <_obstack_memory_used@@Base+0x8328>  // b.any
  451d64:	ldp	x3, x2, [x19, #272]
  451d68:	strb	wzr, [x19, #255]
  451d6c:	mov	x0, x19
  451d70:	blr	x3
  451d74:	ldr	x2, [x19, #320]
  451d78:	mov	x0, #0x1                   	// #1
  451d7c:	mov	x1, #0x0                   	// #0
  451d80:	add	x2, x2, x0
  451d84:	str	x2, [x19, #320]
  451d88:	str	x0, [x19, #256]
  451d8c:	strb	w20, [x19, x1]
  451d90:	strb	w20, [x19, #264]
  451d94:	ldp	x21, x22, [sp, #32]
  451d98:	ldp	x23, x24, [sp, #48]
  451d9c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  451da0:	ldr	w2, [x20, #8]
  451da4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  451da8:	add	x1, x1, #0x840
  451dac:	add	x20, sp, #0x60
  451db0:	mov	x0, x20
  451db4:	bl	4025b0 <sprintf@plt>
  451db8:	mov	x0, x20
  451dbc:	bl	4024f0 <strlen@plt>
  451dc0:	cbz	x0, 453cf0 <_obstack_memory_used@@Base+0xa290>
  451dc4:	add	x22, x20, x0
  451dc8:	ldr	x1, [x19, #256]
  451dcc:	b	451df0 <_obstack_memory_used@@Base+0x8390>
  451dd0:	mov	x0, x1
  451dd4:	add	x1, x1, #0x1
  451dd8:	str	x1, [x19, #256]
  451ddc:	add	x20, x20, #0x1
  451de0:	strb	w21, [x19, x0]
  451de4:	cmp	x20, x22
  451de8:	strb	w21, [x19, #264]
  451dec:	b.eq	452958 <_obstack_memory_used@@Base+0x8ef8>  // b.none
  451df0:	ldrb	w21, [x20]
  451df4:	cmp	x1, #0xff
  451df8:	b.ne	451dd0 <_obstack_memory_used@@Base+0x8370>  // b.any
  451dfc:	ldp	x3, x2, [x19, #272]
  451e00:	strb	wzr, [x19, #255]
  451e04:	mov	x0, x19
  451e08:	blr	x3
  451e0c:	ldr	x2, [x19, #320]
  451e10:	mov	x1, #0x1                   	// #1
  451e14:	mov	x0, #0x0                   	// #0
  451e18:	add	x2, x2, x1
  451e1c:	str	x2, [x19, #320]
  451e20:	b	451dd8 <_obstack_memory_used@@Base+0x8378>
  451e24:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451e28:	add	x24, x24, #0x560
  451e2c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451e30:	add	x24, x24, #0xa
  451e34:	add	x22, x22, #0x561
  451e38:	mov	w23, #0x64                  	// #100
  451e3c:	ldr	x1, [x19, #256]
  451e40:	b	451e64 <_obstack_memory_used@@Base+0x8404>
  451e44:	mov	x0, x1
  451e48:	add	x1, x1, #0x1
  451e4c:	str	x1, [x19, #256]
  451e50:	cmp	x22, x24
  451e54:	strb	w23, [x19, x0]
  451e58:	strb	w23, [x19, #264]
  451e5c:	b.eq	4526cc <_obstack_memory_used@@Base+0x8c6c>  // b.none
  451e60:	ldrb	w23, [x22], #1
  451e64:	cmp	x1, #0xff
  451e68:	b.ne	451e44 <_obstack_memory_used@@Base+0x83e4>  // b.any
  451e6c:	ldp	x3, x2, [x19, #272]
  451e70:	strb	wzr, [x19, #255]
  451e74:	mov	x0, x19
  451e78:	blr	x3
  451e7c:	ldr	x2, [x19, #320]
  451e80:	mov	x1, #0x1                   	// #1
  451e84:	mov	x0, #0x0                   	// #0
  451e88:	add	x2, x2, x1
  451e8c:	str	x2, [x19, #320]
  451e90:	b	451e4c <_obstack_memory_used@@Base+0x83ec>
  451e94:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451e98:	add	x24, x24, #0x580
  451e9c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451ea0:	add	x24, x24, #0x1d
  451ea4:	add	x22, x22, #0x581
  451ea8:	mov	w23, #0x67                  	// #103
  451eac:	ldr	x1, [x19, #256]
  451eb0:	b	451ed4 <_obstack_memory_used@@Base+0x8474>
  451eb4:	mov	x0, x1
  451eb8:	add	x1, x1, #0x1
  451ebc:	str	x1, [x19, #256]
  451ec0:	cmp	x22, x24
  451ec4:	strb	w23, [x19, x0]
  451ec8:	strb	w23, [x19, #264]
  451ecc:	b.eq	452910 <_obstack_memory_used@@Base+0x8eb0>  // b.none
  451ed0:	ldrb	w23, [x22], #1
  451ed4:	cmp	x1, #0xff
  451ed8:	b.ne	451eb4 <_obstack_memory_used@@Base+0x8454>  // b.any
  451edc:	ldp	x3, x2, [x19, #272]
  451ee0:	strb	wzr, [x19, #255]
  451ee4:	mov	x0, x19
  451ee8:	blr	x3
  451eec:	ldr	x2, [x19, #320]
  451ef0:	mov	x1, #0x1                   	// #1
  451ef4:	mov	x0, #0x0                   	// #0
  451ef8:	add	x2, x2, x1
  451efc:	str	x2, [x19, #320]
  451f00:	b	451ebc <_obstack_memory_used@@Base+0x845c>
  451f04:	ldrsw	x22, [x20, #16]
  451f08:	ldr	x20, [x20, #8]
  451f0c:	tbnz	w21, #2, 4529dc <_obstack_memory_used@@Base+0x8f7c>
  451f10:	cbz	x22, 453e20 <_obstack_memory_used@@Base+0xa3c0>
  451f14:	add	x22, x20, x22
  451f18:	ldr	x1, [x19, #256]
  451f1c:	b	451f40 <_obstack_memory_used@@Base+0x84e0>
  451f20:	mov	x0, x1
  451f24:	add	x1, x1, #0x1
  451f28:	str	x1, [x19, #256]
  451f2c:	add	x20, x20, #0x1
  451f30:	strb	w21, [x19, x0]
  451f34:	cmp	x22, x20
  451f38:	strb	w21, [x19, #264]
  451f3c:	b.eq	452de4 <_obstack_memory_used@@Base+0x9384>  // b.none
  451f40:	ldrb	w21, [x20]
  451f44:	cmp	x1, #0xff
  451f48:	b.ne	451f20 <_obstack_memory_used@@Base+0x84c0>  // b.any
  451f4c:	ldp	x3, x2, [x19, #272]
  451f50:	strb	wzr, [x19, #255]
  451f54:	mov	x0, x19
  451f58:	blr	x3
  451f5c:	ldr	x2, [x19, #320]
  451f60:	mov	x1, #0x1                   	// #1
  451f64:	mov	x0, #0x0                   	// #0
  451f68:	add	x2, x2, x1
  451f6c:	str	x2, [x19, #320]
  451f70:	b	451f28 <_obstack_memory_used@@Base+0x84c8>
  451f74:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  451f78:	add	x22, x22, #0x510
  451f7c:	add	x24, x22, #0x9
  451f80:	mov	w23, #0x6f                  	// #111
  451f84:	ldr	x1, [x19, #256]
  451f88:	b	451fb0 <_obstack_memory_used@@Base+0x8550>
  451f8c:	mov	x0, x1
  451f90:	add	x1, x1, #0x1
  451f94:	str	x1, [x19, #256]
  451f98:	add	x22, x22, #0x1
  451f9c:	strb	w23, [x19, x0]
  451fa0:	cmp	x22, x24
  451fa4:	strb	w23, [x19, #264]
  451fa8:	b.eq	4528c0 <_obstack_memory_used@@Base+0x8e60>  // b.none
  451fac:	ldrb	w23, [x22]
  451fb0:	cmp	x1, #0xff
  451fb4:	b.ne	451f8c <_obstack_memory_used@@Base+0x852c>  // b.any
  451fb8:	ldp	x3, x2, [x19, #272]
  451fbc:	strb	wzr, [x19, #255]
  451fc0:	mov	x0, x19
  451fc4:	blr	x3
  451fc8:	ldr	x2, [x19, #320]
  451fcc:	mov	x1, #0x1                   	// #1
  451fd0:	mov	x0, #0x0                   	// #0
  451fd4:	add	x2, x2, x1
  451fd8:	str	x2, [x19, #320]
  451fdc:	b	451f94 <_obstack_memory_used@@Base+0x8534>
  451fe0:	ldr	x2, [x20, #8]
  451fe4:	mov	w1, w21
  451fe8:	mov	x0, x19
  451fec:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  451ff0:	ldp	x21, x22, [sp, #32]
  451ff4:	ldp	x23, x24, [sp, #48]
  451ff8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  451ffc:	ldp	x22, x20, [x20, #8]
  452000:	ldr	w0, [x22]
  452004:	cmp	w0, #0x32
  452008:	b.eq	452f2c <_obstack_memory_used@@Base+0x94cc>  // b.none
  45200c:	cmp	w0, #0x34
  452010:	b.ne	454274 <_obstack_memory_used@@Base+0xa814>  // b.any
  452014:	ldr	x1, [x19, #256]
  452018:	add	x0, x1, #0x1
  45201c:	cmp	x1, #0xff
  452020:	b.ne	452048 <_obstack_memory_used@@Base+0x85e8>  // b.any
  452024:	ldp	x3, x2, [x19, #272]
  452028:	strb	wzr, [x19, #255]
  45202c:	mov	x0, x19
  452030:	blr	x3
  452034:	ldr	x2, [x19, #320]
  452038:	mov	x0, #0x1                   	// #1
  45203c:	mov	x1, #0x0                   	// #0
  452040:	add	x2, x2, x0
  452044:	str	x2, [x19, #320]
  452048:	str	x0, [x19, #256]
  45204c:	mov	w0, #0x28                  	// #40
  452050:	strb	w0, [x19, x1]
  452054:	mov	w1, w21
  452058:	strb	w0, [x19, #264]
  45205c:	mov	x0, x19
  452060:	ldr	x2, [x22, #8]
  452064:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452068:	ldr	x1, [x19, #256]
  45206c:	add	x0, x1, #0x1
  452070:	cmp	x1, #0xff
  452074:	b.ne	45209c <_obstack_memory_used@@Base+0x863c>  // b.any
  452078:	ldp	x3, x2, [x19, #272]
  45207c:	strb	wzr, [x19, #255]
  452080:	mov	x0, x19
  452084:	blr	x3
  452088:	ldr	x2, [x19, #320]
  45208c:	mov	x0, #0x1                   	// #1
  452090:	mov	x1, #0x0                   	// #0
  452094:	add	x2, x2, x0
  452098:	str	x2, [x19, #320]
  45209c:	str	x0, [x19, #256]
  4520a0:	mov	w0, #0x29                  	// #41
  4520a4:	strb	w0, [x19, x1]
  4520a8:	strb	w0, [x19, #264]
  4520ac:	mov	w1, w21
  4520b0:	mov	x2, x20
  4520b4:	mov	x0, x19
  4520b8:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  4520bc:	ldp	x21, x22, [sp, #32]
  4520c0:	ldp	x23, x24, [sp, #48]
  4520c4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4520c8:	ldr	x0, [x20, #8]
  4520cc:	tbnz	w21, #2, 452d58 <_obstack_memory_used@@Base+0x92f8>
  4520d0:	ldrsw	x22, [x0, #8]
  4520d4:	ldr	x20, [x0]
  4520d8:	cbz	x22, 453f40 <_obstack_memory_used@@Base+0xa4e0>
  4520dc:	add	x22, x20, x22
  4520e0:	ldr	x1, [x19, #256]
  4520e4:	b	452108 <_obstack_memory_used@@Base+0x86a8>
  4520e8:	mov	x0, x1
  4520ec:	add	x1, x1, #0x1
  4520f0:	str	x1, [x19, #256]
  4520f4:	add	x20, x20, #0x1
  4520f8:	strb	w21, [x19, x0]
  4520fc:	cmp	x22, x20
  452100:	strb	w21, [x19, #264]
  452104:	b.eq	452dcc <_obstack_memory_used@@Base+0x936c>  // b.none
  452108:	ldrb	w21, [x20]
  45210c:	cmp	x1, #0xff
  452110:	b.ne	4520e8 <_obstack_memory_used@@Base+0x8688>  // b.any
  452114:	ldp	x3, x2, [x19, #272]
  452118:	strb	wzr, [x19, #255]
  45211c:	mov	x0, x19
  452120:	blr	x3
  452124:	ldr	x2, [x19, #320]
  452128:	mov	x1, #0x1                   	// #1
  45212c:	mov	x0, #0x0                   	// #0
  452130:	add	x2, x2, x1
  452134:	str	x2, [x19, #320]
  452138:	b	4520f0 <_obstack_memory_used@@Base+0x8690>
  45213c:	ldr	x2, [x0, #8]
  452140:	add	x0, sp, #0x60
  452144:	ldr	x1, [x19, #288]
  452148:	stp	x4, x20, [sp, #96]
  45214c:	str	wzr, [sp, #112]
  452150:	str	x1, [sp, #120]
  452154:	str	x0, [x19, #296]
  452158:	cbnz	x2, 450570 <_obstack_memory_used@@Base+0x6b10>
  45215c:	b	45056c <_obstack_memory_used@@Base+0x6b0c>
  452160:	ldp	x21, x22, [sp, #32]
  452164:	ldp	x23, x24, [sp, #48]
  452168:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45216c:	ldr	x2, [x20, #16]
  452170:	mov	w1, w21
  452174:	mov	x0, x19
  452178:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45217c:	ldr	x1, [x19, #256]
  452180:	add	x0, x1, #0x1
  452184:	cmp	x1, #0xff
  452188:	b.ne	4521b0 <_obstack_memory_used@@Base+0x8750>  // b.any
  45218c:	ldp	x3, x2, [x19, #272]
  452190:	strb	wzr, [x19, #255]
  452194:	mov	x0, x19
  452198:	blr	x3
  45219c:	ldr	x2, [x19, #320]
  4521a0:	mov	x0, #0x1                   	// #1
  4521a4:	mov	x1, #0x0                   	// #0
  4521a8:	add	x2, x2, x0
  4521ac:	str	x2, [x19, #320]
  4521b0:	str	x0, [x19, #256]
  4521b4:	mov	w0, #0x5d                  	// #93
  4521b8:	strb	w0, [x19, x1]
  4521bc:	strb	w0, [x19, #264]
  4521c0:	ldp	x21, x22, [sp, #32]
  4521c4:	ldp	x23, x24, [sp, #48]
  4521c8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4521cc:	ldr	x2, [x20, #16]
  4521d0:	mov	w1, w21
  4521d4:	mov	x0, x19
  4521d8:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4521dc:	ldp	x21, x22, [sp, #32]
  4521e0:	ldp	x23, x24, [sp, #48]
  4521e4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4521e8:	ldr	x2, [x20, #8]
  4521ec:	mov	w1, w21
  4521f0:	mov	x0, x19
  4521f4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4521f8:	ldp	x21, x22, [sp, #32]
  4521fc:	ldp	x23, x24, [sp, #48]
  452200:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452204:	ldr	x2, [x20, #8]
  452208:	mov	w1, w21
  45220c:	mov	x0, x19
  452210:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452214:	ldp	x21, x22, [sp, #32]
  452218:	ldp	x23, x24, [sp, #48]
  45221c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452220:	ldr	x2, [x20, #16]
  452224:	mov	w1, w21
  452228:	mov	x0, x19
  45222c:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  452230:	add	x24, x24, #0x398
  452234:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  452238:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45223c:	add	x24, x24, #0x5
  452240:	add	x22, x22, #0x399
  452244:	mov	w23, #0x20                  	// #32
  452248:	ldr	x1, [x19, #256]
  45224c:	b	452270 <_obstack_memory_used@@Base+0x8810>
  452250:	mov	x0, x1
  452254:	add	x1, x1, #0x1
  452258:	str	x1, [x19, #256]
  45225c:	cmp	x22, x24
  452260:	strb	w23, [x19, x0]
  452264:	strb	w23, [x19, #264]
  452268:	b.eq	452310 <_obstack_memory_used@@Base+0x88b0>  // b.none
  45226c:	ldrb	w23, [x22], #1
  452270:	cmp	x1, #0xff
  452274:	b.ne	452250 <_obstack_memory_used@@Base+0x87f0>  // b.any
  452278:	ldp	x3, x2, [x19, #272]
  45227c:	strb	wzr, [x19, #255]
  452280:	mov	x0, x19
  452284:	blr	x3
  452288:	ldr	x2, [x19, #320]
  45228c:	mov	x1, #0x1                   	// #1
  452290:	mov	x0, #0x0                   	// #0
  452294:	add	x2, x2, x1
  452298:	str	x2, [x19, #320]
  45229c:	b	452258 <_obstack_memory_used@@Base+0x87f8>
  4522a0:	ldr	x2, [x20, #8]
  4522a4:	mov	w1, w21
  4522a8:	mov	x0, x19
  4522ac:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4522b0:	ldp	x21, x22, [sp, #32]
  4522b4:	ldp	x23, x24, [sp, #48]
  4522b8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4522bc:	ldr	x2, [x20, #8]
  4522c0:	mov	w1, w21
  4522c4:	mov	x0, x19
  4522c8:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4522cc:	ldp	x21, x22, [sp, #32]
  4522d0:	ldp	x23, x24, [sp, #48]
  4522d4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4522d8:	ldr	x2, [x20, #8]
  4522dc:	mov	w1, w21
  4522e0:	mov	x0, x19
  4522e4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4522e8:	ldp	x21, x22, [sp, #32]
  4522ec:	ldp	x23, x24, [sp, #48]
  4522f0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4522f4:	ldr	x2, [x20, #8]
  4522f8:	mov	w1, w21
  4522fc:	mov	x0, x19
  452300:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452304:	ldp	x21, x22, [sp, #32]
  452308:	ldp	x23, x24, [sp, #48]
  45230c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452310:	ldr	x2, [x20, #8]
  452314:	mov	w1, w21
  452318:	mov	x0, x19
  45231c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452320:	ldp	x21, x22, [sp, #32]
  452324:	ldp	x23, x24, [sp, #48]
  452328:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45232c:	ldr	x2, [x20, #16]
  452330:	mov	w1, w21
  452334:	mov	x0, x19
  452338:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45233c:	ldr	x1, [x19, #256]
  452340:	add	x0, x1, #0x1
  452344:	cmp	x1, #0xff
  452348:	b.ne	452370 <_obstack_memory_used@@Base+0x8910>  // b.any
  45234c:	ldp	x3, x2, [x19, #272]
  452350:	strb	wzr, [x19, #255]
  452354:	mov	x0, x19
  452358:	blr	x3
  45235c:	ldr	x2, [x19, #320]
  452360:	mov	x0, #0x1                   	// #1
  452364:	mov	x1, #0x0                   	// #0
  452368:	add	x2, x2, x0
  45236c:	str	x2, [x19, #320]
  452370:	str	x0, [x19, #256]
  452374:	mov	w0, #0x5d                  	// #93
  452378:	strb	w0, [x19, x1]
  45237c:	strb	w0, [x19, #264]
  452380:	ldp	x21, x22, [sp, #32]
  452384:	ldp	x23, x24, [sp, #48]
  452388:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45238c:	ldr	x20, [x22, #8]
  452390:	ldrb	w0, [x20]
  452394:	sub	w0, w0, #0x61
  452398:	and	w0, w0, #0xff
  45239c:	cmp	w0, #0x19
  4523a0:	b.hi	4523e8 <_obstack_memory_used@@Base+0x8988>  // b.pmore
  4523a4:	add	x0, x1, #0x1
  4523a8:	cmp	x1, #0xff
  4523ac:	b.ne	4523d8 <_obstack_memory_used@@Base+0x8978>  // b.any
  4523b0:	ldp	x3, x2, [x19, #272]
  4523b4:	strb	wzr, [x19, #255]
  4523b8:	mov	x0, x19
  4523bc:	blr	x3
  4523c0:	ldr	x2, [x19, #320]
  4523c4:	mov	x0, #0x1                   	// #1
  4523c8:	mov	x1, #0x0                   	// #0
  4523cc:	add	x2, x2, x0
  4523d0:	ldr	x20, [x22, #8]
  4523d4:	str	x2, [x19, #320]
  4523d8:	str	x0, [x19, #256]
  4523dc:	mov	w0, #0x20                  	// #32
  4523e0:	strb	w0, [x19, x1]
  4523e4:	strb	w0, [x19, #264]
  4523e8:	sxtw	x22, w23
  4523ec:	sub	w0, w23, #0x1
  4523f0:	add	x1, x20, x22
  4523f4:	sxtw	x0, w0
  4523f8:	ldurb	w1, [x1, #-1]
  4523fc:	cmp	w1, #0x20
  452400:	csel	x22, x22, x0, ne  // ne = any
  452404:	cbz	x22, 453ce4 <_obstack_memory_used@@Base+0xa284>
  452408:	add	x22, x20, x22
  45240c:	ldr	x1, [x19, #256]
  452410:	b	452434 <_obstack_memory_used@@Base+0x89d4>
  452414:	mov	x0, x1
  452418:	add	x1, x1, #0x1
  45241c:	str	x1, [x19, #256]
  452420:	add	x20, x20, #0x1
  452424:	strb	w21, [x19, x0]
  452428:	cmp	x22, x20
  45242c:	strb	w21, [x19, #264]
  452430:	b.eq	45294c <_obstack_memory_used@@Base+0x8eec>  // b.none
  452434:	ldrb	w21, [x20]
  452438:	cmp	x1, #0xff
  45243c:	b.ne	452414 <_obstack_memory_used@@Base+0x89b4>  // b.any
  452440:	ldp	x3, x2, [x19, #272]
  452444:	strb	wzr, [x19, #255]
  452448:	mov	x0, x19
  45244c:	blr	x3
  452450:	ldr	x2, [x19, #320]
  452454:	mov	x1, #0x1                   	// #1
  452458:	mov	x0, #0x0                   	// #0
  45245c:	add	x2, x2, x1
  452460:	str	x2, [x19, #320]
  452464:	b	45241c <_obstack_memory_used@@Base+0x89bc>
  452468:	ldr	x2, [x20, #8]
  45246c:	mov	w1, w21
  452470:	mov	x0, x19
  452474:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452478:	ldp	x21, x22, [sp, #32]
  45247c:	ldp	x23, x24, [sp, #48]
  452480:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452484:	ldr	x2, [x20, #8]
  452488:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  45248c:	add	x1, x1, #0x840
  452490:	add	x20, sp, #0x60
  452494:	add	w2, w2, #0x1
  452498:	mov	x0, x20
  45249c:	bl	4025b0 <sprintf@plt>
  4524a0:	mov	x0, x20
  4524a4:	bl	4024f0 <strlen@plt>
  4524a8:	ldr	x1, [x19, #256]
  4524ac:	cbz	x0, 45250c <_obstack_memory_used@@Base+0x8aac>
  4524b0:	add	x22, x20, x0
  4524b4:	b	4524d8 <_obstack_memory_used@@Base+0x8a78>
  4524b8:	mov	x0, x1
  4524bc:	add	x1, x1, #0x1
  4524c0:	str	x1, [x19, #256]
  4524c4:	add	x20, x20, #0x1
  4524c8:	strb	w21, [x19, x0]
  4524cc:	cmp	x22, x20
  4524d0:	strb	w21, [x19, #264]
  4524d4:	b.eq	45250c <_obstack_memory_used@@Base+0x8aac>  // b.none
  4524d8:	ldrb	w21, [x20]
  4524dc:	cmp	x1, #0xff
  4524e0:	b.ne	4524b8 <_obstack_memory_used@@Base+0x8a58>  // b.any
  4524e4:	ldp	x3, x2, [x19, #272]
  4524e8:	strb	wzr, [x19, #255]
  4524ec:	mov	x0, x19
  4524f0:	blr	x3
  4524f4:	ldr	x2, [x19, #320]
  4524f8:	mov	x1, #0x1                   	// #1
  4524fc:	mov	x0, #0x0                   	// #0
  452500:	add	x2, x2, x1
  452504:	str	x2, [x19, #320]
  452508:	b	4524c0 <_obstack_memory_used@@Base+0x8a60>
  45250c:	add	x0, x1, #0x1
  452510:	cmp	x1, #0xff
  452514:	b.ne	45253c <_obstack_memory_used@@Base+0x8adc>  // b.any
  452518:	ldp	x3, x2, [x19, #272]
  45251c:	strb	wzr, [x19, #255]
  452520:	mov	x0, x19
  452524:	blr	x3
  452528:	ldr	x2, [x19, #320]
  45252c:	mov	x0, #0x1                   	// #1
  452530:	mov	x1, #0x0                   	// #0
  452534:	add	x2, x2, x0
  452538:	str	x2, [x19, #320]
  45253c:	str	x0, [x19, #256]
  452540:	mov	w0, #0x7d                  	// #125
  452544:	strb	w0, [x19, x1]
  452548:	strb	w0, [x19, #264]
  45254c:	ldp	x21, x22, [sp, #32]
  452550:	ldp	x23, x24, [sp, #48]
  452554:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452558:	ldr	x2, [x20, #8]
  45255c:	mov	w1, w21
  452560:	mov	x0, x19
  452564:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452568:	ldp	x21, x22, [sp, #32]
  45256c:	ldp	x23, x24, [sp, #48]
  452570:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452574:	ldr	x2, [x20, #8]
  452578:	mov	w1, w21
  45257c:	mov	x0, x19
  452580:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452584:	ldp	x21, x22, [sp, #32]
  452588:	ldp	x23, x24, [sp, #48]
  45258c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452590:	ldr	w3, [x19, #312]
  452594:	mov	w1, w21
  452598:	ldr	x2, [x20, #8]
  45259c:	add	w3, w3, #0x1
  4525a0:	str	w3, [x19, #312]
  4525a4:	mov	x0, x19
  4525a8:	mov	w21, #0x29                  	// #41
  4525ac:	mov	x22, #0x0                   	// #0
  4525b0:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4525b4:	ldr	w0, [x19, #312]
  4525b8:	ldr	x1, [x19, #256]
  4525bc:	sub	w0, w0, #0x1
  4525c0:	str	w0, [x19, #312]
  4525c4:	b	4525ec <_obstack_memory_used@@Base+0x8b8c>
  4525c8:	mov	x0, x1
  4525cc:	add	x1, x1, #0x1
  4525d0:	str	x1, [x19, #256]
  4525d4:	cmp	x22, #0x1
  4525d8:	strb	w21, [x19, x0]
  4525dc:	strb	w21, [x19, #264]
  4525e0:	mov	w21, #0x23                  	// #35
  4525e4:	b.eq	45261c <_obstack_memory_used@@Base+0x8bbc>  // b.none
  4525e8:	mov	x22, #0x1                   	// #1
  4525ec:	cmp	x1, #0xff
  4525f0:	b.ne	4525c8 <_obstack_memory_used@@Base+0x8b68>  // b.any
  4525f4:	ldp	x3, x2, [x19, #272]
  4525f8:	strb	wzr, [x19, #255]
  4525fc:	mov	x0, x19
  452600:	blr	x3
  452604:	ldr	x2, [x19, #320]
  452608:	mov	x1, #0x1                   	// #1
  45260c:	mov	x0, #0x0                   	// #0
  452610:	add	x2, x2, x1
  452614:	str	x2, [x19, #320]
  452618:	b	4525d0 <_obstack_memory_used@@Base+0x8b70>
  45261c:	ldr	w2, [x20, #16]
  452620:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  452624:	add	x1, x1, #0x840
  452628:	add	x20, sp, #0x60
  45262c:	add	w2, w2, #0x1
  452630:	mov	x0, x20
  452634:	bl	4025b0 <sprintf@plt>
  452638:	mov	x0, x20
  45263c:	bl	4024f0 <strlen@plt>
  452640:	ldr	x1, [x19, #256]
  452644:	cbz	x0, 4526a4 <_obstack_memory_used@@Base+0x8c44>
  452648:	add	x23, x20, x0
  45264c:	b	452670 <_obstack_memory_used@@Base+0x8c10>
  452650:	mov	x0, x1
  452654:	add	x1, x1, #0x1
  452658:	str	x1, [x19, #256]
  45265c:	add	x20, x20, #0x1
  452660:	strb	w21, [x19, x0]
  452664:	cmp	x23, x20
  452668:	strb	w21, [x19, #264]
  45266c:	b.eq	4526a4 <_obstack_memory_used@@Base+0x8c44>  // b.none
  452670:	ldrb	w21, [x20]
  452674:	cmp	x1, #0xff
  452678:	b.ne	452650 <_obstack_memory_used@@Base+0x8bf0>  // b.any
  45267c:	ldp	x3, x2, [x19, #272]
  452680:	strb	wzr, [x19, #255]
  452684:	mov	x0, x19
  452688:	blr	x3
  45268c:	ldr	x2, [x19, #320]
  452690:	mov	x1, #0x1                   	// #1
  452694:	mov	x0, #0x0                   	// #0
  452698:	add	x2, x2, x1
  45269c:	str	x2, [x19, #320]
  4526a0:	b	452658 <_obstack_memory_used@@Base+0x8bf8>
  4526a4:	cmp	x1, #0xff
  4526a8:	b.eq	452f08 <_obstack_memory_used@@Base+0x94a8>  // b.none
  4526ac:	add	x22, x1, #0x1
  4526b0:	str	x22, [x19, #256]
  4526b4:	mov	w0, #0x7d                  	// #125
  4526b8:	strb	w0, [x19, x1]
  4526bc:	strb	w0, [x19, #264]
  4526c0:	ldp	x21, x22, [sp, #32]
  4526c4:	ldp	x23, x24, [sp, #48]
  4526c8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4526cc:	ldr	x2, [x20, #8]
  4526d0:	mov	w1, w21
  4526d4:	mov	x0, x19
  4526d8:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4526dc:	ldr	x1, [x19, #256]
  4526e0:	add	x0, x1, #0x1
  4526e4:	cmp	x1, #0xff
  4526e8:	b.ne	452710 <_obstack_memory_used@@Base+0x8cb0>  // b.any
  4526ec:	ldp	x3, x2, [x19, #272]
  4526f0:	strb	wzr, [x19, #255]
  4526f4:	mov	x0, x19
  4526f8:	blr	x3
  4526fc:	ldr	x2, [x19, #320]
  452700:	mov	x0, #0x1                   	// #1
  452704:	mov	x1, #0x0                   	// #0
  452708:	add	x2, x2, x0
  45270c:	str	x2, [x19, #320]
  452710:	str	x0, [x19, #256]
  452714:	mov	w0, #0x29                  	// #41
  452718:	strb	w0, [x19, x1]
  45271c:	strb	w0, [x19, #264]
  452720:	ldp	x21, x22, [sp, #32]
  452724:	ldp	x23, x24, [sp, #48]
  452728:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45272c:	ldr	x2, [x20, #8]
  452730:	mov	w1, w21
  452734:	mov	x0, x19
  452738:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45273c:	ldp	x21, x22, [sp, #32]
  452740:	ldp	x23, x24, [sp, #48]
  452744:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452748:	ldr	x2, [x20, #8]
  45274c:	mov	w1, w21
  452750:	mov	x0, x19
  452754:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452758:	ldp	x21, x22, [sp, #32]
  45275c:	ldp	x23, x24, [sp, #48]
  452760:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452764:	ldr	x2, [x20, #8]
  452768:	mov	w1, w21
  45276c:	mov	x0, x19
  452770:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  452774:	add	x22, x22, #0x388
  452778:	mov	w23, #0x2d                  	// #45
  45277c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452780:	add	x24, x22, #0x4
  452784:	ldr	x1, [x19, #256]
  452788:	b	4527b0 <_obstack_memory_used@@Base+0x8d50>
  45278c:	mov	x0, x1
  452790:	add	x1, x1, #0x1
  452794:	str	x1, [x19, #256]
  452798:	add	x22, x22, #0x1
  45279c:	strb	w23, [x19, x0]
  4527a0:	cmp	x24, x22
  4527a4:	strb	w23, [x19, #264]
  4527a8:	b.eq	452818 <_obstack_memory_used@@Base+0x8db8>  // b.none
  4527ac:	ldrb	w23, [x22]
  4527b0:	cmp	x1, #0xff
  4527b4:	b.ne	45278c <_obstack_memory_used@@Base+0x8d2c>  // b.any
  4527b8:	ldp	x3, x2, [x19, #272]
  4527bc:	strb	wzr, [x19, #255]
  4527c0:	mov	x0, x19
  4527c4:	blr	x3
  4527c8:	ldr	x2, [x19, #320]
  4527cc:	mov	x1, #0x1                   	// #1
  4527d0:	mov	x0, #0x0                   	// #0
  4527d4:	add	x2, x2, x1
  4527d8:	str	x2, [x19, #320]
  4527dc:	b	452794 <_obstack_memory_used@@Base+0x8d34>
  4527e0:	ldr	x2, [x20, #8]
  4527e4:	mov	w1, w21
  4527e8:	mov	x0, x19
  4527ec:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4527f0:	ldp	x21, x22, [sp, #32]
  4527f4:	ldp	x23, x24, [sp, #48]
  4527f8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4527fc:	ldr	x2, [x20, #8]
  452800:	mov	w1, w21
  452804:	mov	x0, x19
  452808:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45280c:	ldp	x21, x22, [sp, #32]
  452810:	ldp	x23, x24, [sp, #48]
  452814:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452818:	ldr	x2, [x20, #16]
  45281c:	mov	w1, w21
  452820:	mov	x0, x19
  452824:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452828:	ldp	x21, x22, [sp, #32]
  45282c:	ldp	x23, x24, [sp, #48]
  452830:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452834:	ldr	x2, [x20, #8]
  452838:	mov	w1, w21
  45283c:	mov	x0, x19
  452840:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452844:	ldp	x21, x22, [sp, #32]
  452848:	ldp	x23, x24, [sp, #48]
  45284c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452850:	ldr	x2, [x20, #8]
  452854:	mov	w1, w21
  452858:	mov	x0, x19
  45285c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452860:	ldp	x21, x22, [sp, #32]
  452864:	ldp	x23, x24, [sp, #48]
  452868:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45286c:	ldr	x2, [x20, #8]
  452870:	mov	w1, w21
  452874:	mov	x0, x19
  452878:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45287c:	ldp	x21, x22, [sp, #32]
  452880:	ldp	x23, x24, [sp, #48]
  452884:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452888:	ldr	x2, [x20, #8]
  45288c:	mov	w1, w21
  452890:	mov	x0, x19
  452894:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452898:	ldp	x21, x22, [sp, #32]
  45289c:	ldp	x23, x24, [sp, #48]
  4528a0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4528a4:	ldr	x2, [x20, #8]
  4528a8:	mov	w1, w21
  4528ac:	mov	x0, x19
  4528b0:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4528b4:	ldp	x21, x22, [sp, #32]
  4528b8:	ldp	x23, x24, [sp, #48]
  4528bc:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4528c0:	ldr	x1, [x19, #368]
  4528c4:	cbz	x1, 4528d8 <_obstack_memory_used@@Base+0x8e78>
  4528c8:	ldr	x2, [x19, #288]
  4528cc:	add	x0, sp, #0x60
  4528d0:	stp	x2, x1, [sp, #96]
  4528d4:	str	x0, [x19, #288]
  4528d8:	ldr	x2, [x20, #8]
  4528dc:	ldr	w0, [x2]
  4528e0:	cmp	w0, #0x4
  4528e4:	b.eq	4531d0 <_obstack_memory_used@@Base+0x9770>  // b.none
  4528e8:	mov	x0, x19
  4528ec:	mov	w1, w21
  4528f0:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4528f4:	ldr	x0, [x19, #368]
  4528f8:	cbz	x0, 4535ec <_obstack_memory_used@@Base+0x9b8c>
  4528fc:	ldr	x0, [sp, #96]
  452900:	ldp	x21, x22, [sp, #32]
  452904:	ldp	x23, x24, [sp, #48]
  452908:	str	x0, [x19, #288]
  45290c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452910:	ldr	x2, [x20, #8]
  452914:	mov	w1, w21
  452918:	mov	x0, x19
  45291c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452920:	ldp	x21, x22, [sp, #32]
  452924:	ldp	x23, x24, [sp, #48]
  452928:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45292c:	mov	x2, x20
  452930:	mov	w1, w21
  452934:	mov	x0, x19
  452938:	bl	454350 <_obstack_memory_used@@Base+0xa8f0>
  45293c:	b	450584 <_obstack_memory_used@@Base+0x6b24>
  452940:	ldp	x21, x22, [sp, #32]
  452944:	ldp	x23, x24, [sp, #48]
  452948:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45294c:	ldp	x21, x22, [sp, #32]
  452950:	ldp	x23, x24, [sp, #48]
  452954:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452958:	ldp	x21, x22, [sp, #32]
  45295c:	ldp	x23, x24, [sp, #48]
  452960:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452964:	ldp	x21, x22, [sp, #32]
  452968:	ldp	x23, x24, [sp, #48]
  45296c:	ldp	x25, x26, [sp, #64]
  452970:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452974:	ldr	x2, [x20, #16]
  452978:	mov	x0, x19
  45297c:	mov	w1, w21
  452980:	ldr	x20, [x19, #320]
  452984:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452988:	ldr	x0, [x19, #320]
  45298c:	cmp	x0, x20
  452990:	b.eq	453588 <_obstack_memory_used@@Base+0x9b28>  // b.none
  452994:	ldp	x21, x22, [sp, #32]
  452998:	ldp	x23, x24, [sp, #48]
  45299c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4529a0:	ldr	x25, [x25, #8]
  4529a4:	cbz	x25, 45387c <_obstack_memory_used@@Base+0x9e1c>
  4529a8:	add	x3, x3, #0x20
  4529ac:	cmp	w24, #0x4
  4529b0:	b.eq	453550 <_obstack_memory_used@@Base+0x9af0>  // b.none
  4529b4:	mov	x0, x4
  4529b8:	b	4517ec <_obstack_memory_used@@Base+0x7d8c>
  4529bc:	ldr	x25, [x20, #8]
  4529c0:	cbnz	w24, 45132c <_obstack_memory_used@@Base+0x78cc>
  4529c4:	ldp	x21, x22, [sp, #32]
  4529c8:	ldp	x23, x24, [sp, #48]
  4529cc:	ldp	x25, x26, [sp, #64]
  4529d0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4529d4:	mov	x20, x0
  4529d8:	b	4506e0 <_obstack_memory_used@@Base+0x6c80>
  4529dc:	add	x21, x20, x22
  4529e0:	cmp	x21, x20
  4529e4:	b.ls	453e2c <_obstack_memory_used@@Base+0xa3cc>  // b.plast
  4529e8:	mov	w23, #0x5f                  	// #95
  4529ec:	b	452a3c <_obstack_memory_used@@Base+0x8fdc>
  4529f0:	ldr	x1, [x19, #256]
  4529f4:	add	x0, x1, #0x1
  4529f8:	cmp	x1, #0xff
  4529fc:	b.ne	452a24 <_obstack_memory_used@@Base+0x8fc4>  // b.any
  452a00:	ldp	x3, x2, [x19, #272]
  452a04:	strb	wzr, [x19, #255]
  452a08:	mov	x0, x19
  452a0c:	blr	x3
  452a10:	ldr	x2, [x19, #320]
  452a14:	mov	x0, #0x1                   	// #1
  452a18:	mov	x1, #0x0                   	// #0
  452a1c:	add	x2, x2, x0
  452a20:	str	x2, [x19, #320]
  452a24:	str	x0, [x19, #256]
  452a28:	strb	w22, [x19, x1]
  452a2c:	strb	w22, [x19, #264]
  452a30:	add	x20, x20, #0x1
  452a34:	cmp	x21, x20
  452a38:	b.ls	452df0 <_obstack_memory_used@@Base+0x9390>  // b.plast
  452a3c:	sub	x0, x21, x20
  452a40:	ldrb	w22, [x20]
  452a44:	cmp	x0, #0x3
  452a48:	b.le	4529f0 <_obstack_memory_used@@Base+0x8f90>
  452a4c:	cmp	w22, #0x5f
  452a50:	b.ne	4529f0 <_obstack_memory_used@@Base+0x8f90>  // b.any
  452a54:	ldrb	w0, [x20, #1]
  452a58:	cmp	w0, #0x5f
  452a5c:	b.ne	4529f0 <_obstack_memory_used@@Base+0x8f90>  // b.any
  452a60:	ldrb	w0, [x20, #2]
  452a64:	cmp	w0, #0x55
  452a68:	b.ne	4529f0 <_obstack_memory_used@@Base+0x8f90>  // b.any
  452a6c:	add	x24, x20, #0x3
  452a70:	cmp	x21, x24
  452a74:	b.ls	4529f0 <_obstack_memory_used@@Base+0x8f90>  // b.plast
  452a78:	mov	x2, #0x0                   	// #0
  452a7c:	b	452a98 <_obstack_memory_used@@Base+0x9038>
  452a80:	mov	w0, w1
  452a84:	sxtw	x0, w0
  452a88:	add	x24, x24, #0x1
  452a8c:	add	x2, x0, x2, lsl #4
  452a90:	cmp	x21, x24
  452a94:	b.eq	4529f0 <_obstack_memory_used@@Base+0x8f90>  // b.none
  452a98:	ldrb	w0, [x24]
  452a9c:	sub	w1, w0, #0x30
  452aa0:	and	w3, w1, #0xff
  452aa4:	cmp	w3, #0x9
  452aa8:	b.ls	452a80 <_obstack_memory_used@@Base+0x9020>  // b.plast
  452aac:	sub	w1, w0, #0x41
  452ab0:	and	w1, w1, #0xff
  452ab4:	cmp	w1, #0x5
  452ab8:	b.hi	453abc <_obstack_memory_used@@Base+0xa05c>  // b.pmore
  452abc:	sub	w0, w0, #0x37
  452ac0:	b	452a84 <_obstack_memory_used@@Base+0x9024>
  452ac4:	add	x1, x20, #0x8
  452ac8:	mov	x0, x19
  452acc:	bl	44cb50 <_obstack_memory_used@@Base+0x30f0>
  452ad0:	mov	x2, x0
  452ad4:	cbz	x0, 450538 <_obstack_memory_used@@Base+0x6ad8>
  452ad8:	ldr	w1, [x0]
  452adc:	cmp	w1, #0x2f
  452ae0:	b.eq	453b38 <_obstack_memory_used@@Base+0xa0d8>  // b.none
  452ae4:	ldr	x20, [x19, #288]
  452ae8:	mov	w1, w21
  452aec:	mov	x0, x19
  452af0:	ldr	x3, [x20]
  452af4:	str	x3, [x19, #288]
  452af8:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452afc:	ldp	x21, x22, [sp, #32]
  452b00:	ldp	x23, x24, [sp, #48]
  452b04:	str	x20, [x19, #288]
  452b08:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452b0c:	ldr	x2, [x20, #8]
  452b10:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  452b14:	add	x1, x1, #0x840
  452b18:	add	x20, sp, #0x60
  452b1c:	add	w2, w2, #0x1
  452b20:	mov	x0, x20
  452b24:	bl	4025b0 <sprintf@plt>
  452b28:	mov	x0, x20
  452b2c:	bl	4024f0 <strlen@plt>
  452b30:	cbz	x0, 453f34 <_obstack_memory_used@@Base+0xa4d4>
  452b34:	add	x22, x20, x0
  452b38:	ldr	x1, [x19, #256]
  452b3c:	b	452b60 <_obstack_memory_used@@Base+0x9100>
  452b40:	mov	x0, x1
  452b44:	add	x1, x1, #0x1
  452b48:	str	x1, [x19, #256]
  452b4c:	add	x20, x20, #0x1
  452b50:	strb	w21, [x19, x0]
  452b54:	cmp	x22, x20
  452b58:	strb	w21, [x19, #264]
  452b5c:	b.eq	452dfc <_obstack_memory_used@@Base+0x939c>  // b.none
  452b60:	ldrb	w21, [x20]
  452b64:	cmp	x1, #0xff
  452b68:	b.ne	452b40 <_obstack_memory_used@@Base+0x90e0>  // b.any
  452b6c:	ldp	x3, x2, [x19, #272]
  452b70:	strb	wzr, [x19, #255]
  452b74:	mov	x0, x19
  452b78:	blr	x3
  452b7c:	ldr	x2, [x19, #320]
  452b80:	mov	x1, #0x1                   	// #1
  452b84:	mov	x0, #0x0                   	// #0
  452b88:	add	x2, x2, x1
  452b8c:	str	x2, [x19, #320]
  452b90:	b	452b48 <_obstack_memory_used@@Base+0x90e8>
  452b94:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  452b98:	add	x20, x20, #0x578
  452b9c:	add	x22, x20, #0x4
  452ba0:	mov	w21, #0x74                  	// #116
  452ba4:	b	452bcc <_obstack_memory_used@@Base+0x916c>
  452ba8:	mov	x0, x1
  452bac:	add	x1, x1, #0x1
  452bb0:	str	x1, [x19, #256]
  452bb4:	add	x20, x20, #0x1
  452bb8:	strb	w21, [x19, x0]
  452bbc:	cmp	x20, x22
  452bc0:	strb	w21, [x19, #264]
  452bc4:	b.eq	452bfc <_obstack_memory_used@@Base+0x919c>  // b.none
  452bc8:	ldrb	w21, [x20]
  452bcc:	cmp	x1, #0xff
  452bd0:	b.ne	452ba8 <_obstack_memory_used@@Base+0x9148>  // b.any
  452bd4:	ldp	x3, x2, [x19, #272]
  452bd8:	strb	wzr, [x19, #255]
  452bdc:	mov	x0, x19
  452be0:	blr	x3
  452be4:	ldr	x2, [x19, #320]
  452be8:	mov	x1, #0x1                   	// #1
  452bec:	mov	x0, #0x0                   	// #0
  452bf0:	add	x2, x2, x1
  452bf4:	str	x2, [x19, #320]
  452bf8:	b	452bb0 <_obstack_memory_used@@Base+0x9150>
  452bfc:	ldp	x21, x22, [sp, #32]
  452c00:	ldp	x23, x24, [sp, #48]
  452c04:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452c08:	mov	w2, w23
  452c0c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  452c10:	add	x1, x1, #0x840
  452c14:	add	x20, sp, #0x60
  452c18:	mov	x0, x20
  452c1c:	bl	4025b0 <sprintf@plt>
  452c20:	mov	x0, x20
  452c24:	bl	4024f0 <strlen@plt>
  452c28:	ldr	x1, [x19, #256]
  452c2c:	cbz	x0, 452c8c <_obstack_memory_used@@Base+0x922c>
  452c30:	add	x22, x20, x0
  452c34:	b	452c58 <_obstack_memory_used@@Base+0x91f8>
  452c38:	mov	x0, x1
  452c3c:	add	x1, x1, #0x1
  452c40:	str	x1, [x19, #256]
  452c44:	add	x20, x20, #0x1
  452c48:	strb	w21, [x19, x0]
  452c4c:	cmp	x20, x22
  452c50:	strb	w21, [x19, #264]
  452c54:	b.eq	452c8c <_obstack_memory_used@@Base+0x922c>  // b.none
  452c58:	ldrb	w21, [x20]
  452c5c:	cmp	x1, #0xff
  452c60:	b.ne	452c38 <_obstack_memory_used@@Base+0x91d8>  // b.any
  452c64:	ldp	x3, x2, [x19, #272]
  452c68:	strb	wzr, [x19, #255]
  452c6c:	mov	x0, x19
  452c70:	blr	x3
  452c74:	ldr	x2, [x19, #320]
  452c78:	mov	x1, #0x1                   	// #1
  452c7c:	mov	x0, #0x0                   	// #0
  452c80:	add	x2, x2, x1
  452c84:	str	x2, [x19, #320]
  452c88:	b	452c40 <_obstack_memory_used@@Base+0x91e0>
  452c8c:	add	x0, x1, #0x1
  452c90:	cmp	x1, #0xff
  452c94:	b.ne	452cbc <_obstack_memory_used@@Base+0x925c>  // b.any
  452c98:	ldp	x3, x2, [x19, #272]
  452c9c:	strb	wzr, [x19, #255]
  452ca0:	mov	x0, x19
  452ca4:	blr	x3
  452ca8:	ldr	x2, [x19, #320]
  452cac:	mov	x0, #0x1                   	// #1
  452cb0:	mov	x1, #0x0                   	// #0
  452cb4:	add	x2, x2, x0
  452cb8:	str	x2, [x19, #320]
  452cbc:	str	x0, [x19, #256]
  452cc0:	mov	w0, #0x7d                  	// #125
  452cc4:	strb	w0, [x19, x1]
  452cc8:	strb	w0, [x19, #264]
  452ccc:	ldp	x21, x22, [sp, #32]
  452cd0:	ldp	x23, x24, [sp, #48]
  452cd4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452cd8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  452cdc:	add	x20, x20, #0x4f8
  452ce0:	add	x22, x20, #0x6
  452ce4:	mov	w21, #0x5f                  	// #95
  452ce8:	b	452d10 <_obstack_memory_used@@Base+0x92b0>
  452cec:	mov	x0, x1
  452cf0:	add	x1, x1, #0x1
  452cf4:	str	x1, [x19, #256]
  452cf8:	add	x20, x20, #0x1
  452cfc:	strb	w21, [x19, x0]
  452d00:	cmp	x20, x22
  452d04:	strb	w21, [x19, #264]
  452d08:	b.eq	452d40 <_obstack_memory_used@@Base+0x92e0>  // b.none
  452d0c:	ldrb	w21, [x20]
  452d10:	cmp	x1, #0xff
  452d14:	b.ne	452cec <_obstack_memory_used@@Base+0x928c>  // b.any
  452d18:	ldp	x3, x2, [x19, #272]
  452d1c:	strb	wzr, [x19, #255]
  452d20:	mov	x0, x19
  452d24:	blr	x3
  452d28:	ldr	x2, [x19, #320]
  452d2c:	mov	x1, #0x1                   	// #1
  452d30:	mov	x0, #0x0                   	// #0
  452d34:	add	x2, x2, x1
  452d38:	str	x2, [x19, #320]
  452d3c:	b	452cf4 <_obstack_memory_used@@Base+0x9294>
  452d40:	ldp	x21, x22, [sp, #32]
  452d44:	ldp	x23, x24, [sp, #48]
  452d48:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452d4c:	ldp	x21, x22, [sp, #32]
  452d50:	ldp	x23, x24, [sp, #48]
  452d54:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452d58:	ldrsw	x22, [x0, #24]
  452d5c:	ldr	x20, [x0, #16]
  452d60:	cbz	x22, 453e14 <_obstack_memory_used@@Base+0xa3b4>
  452d64:	add	x22, x20, x22
  452d68:	ldr	x1, [x19, #256]
  452d6c:	b	452d90 <_obstack_memory_used@@Base+0x9330>
  452d70:	mov	x0, x1
  452d74:	add	x1, x1, #0x1
  452d78:	str	x1, [x19, #256]
  452d7c:	add	x20, x20, #0x1
  452d80:	strb	w21, [x19, x0]
  452d84:	cmp	x20, x22
  452d88:	strb	w21, [x19, #264]
  452d8c:	b.eq	452dd8 <_obstack_memory_used@@Base+0x9378>  // b.none
  452d90:	ldrb	w21, [x20]
  452d94:	cmp	x1, #0xff
  452d98:	b.ne	452d70 <_obstack_memory_used@@Base+0x9310>  // b.any
  452d9c:	ldp	x3, x2, [x19, #272]
  452da0:	strb	wzr, [x19, #255]
  452da4:	mov	x0, x19
  452da8:	blr	x3
  452dac:	ldr	x2, [x19, #320]
  452db0:	mov	x1, #0x1                   	// #1
  452db4:	mov	x0, #0x0                   	// #0
  452db8:	add	x2, x2, x1
  452dbc:	str	x2, [x19, #320]
  452dc0:	b	452d78 <_obstack_memory_used@@Base+0x9318>
  452dc4:	ldr	x1, [x19, #256]
  452dc8:	b	450fe0 <_obstack_memory_used@@Base+0x7580>
  452dcc:	ldp	x21, x22, [sp, #32]
  452dd0:	ldp	x23, x24, [sp, #48]
  452dd4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452dd8:	ldp	x21, x22, [sp, #32]
  452ddc:	ldp	x23, x24, [sp, #48]
  452de0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452de4:	ldp	x21, x22, [sp, #32]
  452de8:	ldp	x23, x24, [sp, #48]
  452dec:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452df0:	ldp	x21, x22, [sp, #32]
  452df4:	ldp	x23, x24, [sp, #48]
  452df8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452dfc:	ldp	x21, x22, [sp, #32]
  452e00:	ldp	x23, x24, [sp, #48]
  452e04:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452e08:	ldr	x1, [x2, #8]
  452e0c:	ldr	w22, [x1, #28]
  452e10:	cmp	w22, #0x6
  452e14:	b.hi	452eac <_obstack_memory_used@@Base+0x944c>  // b.pmore
  452e18:	cbz	w22, 4505fc <_obstack_memory_used@@Base+0x6b9c>
  452e1c:	ldr	x1, [x20, #16]
  452e20:	ldr	w1, [x1]
  452e24:	cbnz	w1, 4505fc <_obstack_memory_used@@Base+0x6b9c>
  452e28:	cmp	w0, #0x3e
  452e2c:	b.eq	4541b0 <_obstack_memory_used@@Base+0xa750>  // b.none
  452e30:	ldr	x2, [x20, #16]
  452e34:	mov	w1, w21
  452e38:	mov	x0, x19
  452e3c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  452e40:	cmp	w22, #0x4
  452e44:	b.eq	454190 <_obstack_memory_used@@Base+0xa730>  // b.none
  452e48:	b.hi	454054 <_obstack_memory_used@@Base+0xa5f4>  // b.pmore
  452e4c:	cmp	w22, #0x2
  452e50:	b.eq	454140 <_obstack_memory_used@@Base+0xa6e0>  // b.none
  452e54:	cmp	w22, #0x3
  452e58:	b.ne	454288 <_obstack_memory_used@@Base+0xa828>  // b.any
  452e5c:	ldr	x1, [x19, #256]
  452e60:	cmp	x1, #0xff
  452e64:	b.ne	452e8c <_obstack_memory_used@@Base+0x942c>  // b.any
  452e68:	ldp	x3, x2, [x19, #272]
  452e6c:	strb	wzr, [x19, #255]
  452e70:	mov	x0, x19
  452e74:	blr	x3
  452e78:	str	xzr, [x19, #256]
  452e7c:	ldr	x0, [x19, #320]
  452e80:	mov	x1, #0x0                   	// #0
  452e84:	add	x0, x0, #0x1
  452e88:	str	x0, [x19, #320]
  452e8c:	add	x0, x1, #0x1
  452e90:	str	x0, [x19, #256]
  452e94:	mov	w0, #0x6c                  	// #108
  452e98:	strb	w0, [x19, x1]
  452e9c:	strb	w0, [x19, #264]
  452ea0:	ldp	x21, x22, [sp, #32]
  452ea4:	ldp	x23, x24, [sp, #48]
  452ea8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452eac:	cmp	w22, #0x7
  452eb0:	b.ne	4505fc <_obstack_memory_used@@Base+0x6b9c>  // b.any
  452eb4:	ldr	x1, [x20, #16]
  452eb8:	ldr	w3, [x1]
  452ebc:	cbnz	w3, 4505fc <_obstack_memory_used@@Base+0x6b9c>
  452ec0:	ldr	w3, [x1, #16]
  452ec4:	cmp	w0, #0x3d
  452ec8:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  452ecc:	b.ne	4505fc <_obstack_memory_used@@Base+0x6b9c>  // b.any
  452ed0:	ldr	x0, [x1, #8]
  452ed4:	ldrb	w0, [x0]
  452ed8:	cmp	w0, #0x30
  452edc:	b.eq	454294 <_obstack_memory_used@@Base+0xa834>  // b.none
  452ee0:	cmp	w0, #0x31
  452ee4:	b.ne	4505fc <_obstack_memory_used@@Base+0x6b9c>  // b.any
  452ee8:	mov	x0, x19
  452eec:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  452ef0:	mov	x2, #0x4                   	// #4
  452ef4:	add	x1, x1, #0xf60
  452ef8:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  452efc:	ldp	x21, x22, [sp, #32]
  452f00:	ldp	x23, x24, [sp, #48]
  452f04:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  452f08:	ldp	x3, x2, [x19, #272]
  452f0c:	strb	wzr, [x19, #255]
  452f10:	mov	x0, x19
  452f14:	blr	x3
  452f18:	ldr	x0, [x19, #320]
  452f1c:	mov	x1, #0x0                   	// #0
  452f20:	add	x0, x0, #0x1
  452f24:	str	x0, [x19, #320]
  452f28:	b	4526b0 <_obstack_memory_used@@Base+0x8c50>
  452f2c:	ldr	x0, [x22, #8]
  452f30:	ldr	x23, [x0]
  452f34:	ldrb	w0, [x23]
  452f38:	subs	w1, w0, #0x61
  452f3c:	b.ne	452f50 <_obstack_memory_used@@Base+0x94f0>  // b.any
  452f40:	ldrb	w1, [x23, #1]
  452f44:	subs	w1, w1, #0x64
  452f48:	b.ne	452f50 <_obstack_memory_used@@Base+0x94f0>  // b.any
  452f4c:	ldrb	w1, [x23, #2]
  452f50:	ldr	w2, [x20]
  452f54:	cbnz	w1, 452f60 <_obstack_memory_used@@Base+0x9500>
  452f58:	cmp	w2, #0x3
  452f5c:	b.eq	453f58 <_obstack_memory_used@@Base+0xa4f8>  // b.none
  452f60:	cmp	w2, #0x39
  452f64:	b.eq	454000 <_obstack_memory_used@@Base+0xa5a0>  // b.none
  452f68:	cmp	w0, #0x73
  452f6c:	b.ne	45303c <_obstack_memory_used@@Base+0x95dc>  // b.any
  452f70:	ldrb	w1, [x23, #1]
  452f74:	cmp	w1, #0x5a
  452f78:	b.ne	453088 <_obstack_memory_used@@Base+0x9628>  // b.any
  452f7c:	ldrb	w3, [x23, #2]
  452f80:	cbnz	w3, 453088 <_obstack_memory_used@@Base+0x9628>
  452f84:	mov	x1, x20
  452f88:	mov	x0, x19
  452f8c:	bl	44cb80 <_obstack_memory_used@@Base+0x3120>
  452f90:	cbnz	x0, 452fac <_obstack_memory_used@@Base+0x954c>
  452f94:	b	452fb8 <_obstack_memory_used@@Base+0x9558>
  452f98:	ldr	x1, [x0, #8]
  452f9c:	cbz	x1, 452fb8 <_obstack_memory_used@@Base+0x9558>
  452fa0:	ldr	x0, [x0, #16]
  452fa4:	add	w3, w3, #0x1
  452fa8:	cbz	x0, 452fb8 <_obstack_memory_used@@Base+0x9558>
  452fac:	ldr	w1, [x0]
  452fb0:	cmp	w1, #0x2f
  452fb4:	b.eq	452f98 <_obstack_memory_used@@Base+0x9538>  // b.none
  452fb8:	mov	w2, w3
  452fbc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  452fc0:	add	x1, x1, #0x840
  452fc4:	add	x20, sp, #0x60
  452fc8:	mov	x0, x20
  452fcc:	bl	4025b0 <sprintf@plt>
  452fd0:	mov	x0, x20
  452fd4:	bl	4024f0 <strlen@plt>
  452fd8:	cbz	x0, 45410c <_obstack_memory_used@@Base+0xa6ac>
  452fdc:	add	x22, x20, x0
  452fe0:	ldr	x1, [x19, #256]
  452fe4:	b	453008 <_obstack_memory_used@@Base+0x95a8>
  452fe8:	mov	x0, x1
  452fec:	add	x1, x1, #0x1
  452ff0:	str	x1, [x19, #256]
  452ff4:	add	x20, x20, #0x1
  452ff8:	strb	w21, [x19, x0]
  452ffc:	cmp	x20, x22
  453000:	strb	w21, [x19, #264]
  453004:	b.eq	453f10 <_obstack_memory_used@@Base+0xa4b0>  // b.none
  453008:	ldrb	w21, [x20]
  45300c:	cmp	x1, #0xff
  453010:	b.ne	452fe8 <_obstack_memory_used@@Base+0x9588>  // b.any
  453014:	ldp	x3, x2, [x19, #272]
  453018:	strb	wzr, [x19, #255]
  45301c:	mov	x0, x19
  453020:	blr	x3
  453024:	ldr	x2, [x19, #320]
  453028:	mov	x1, #0x1                   	// #1
  45302c:	mov	x0, #0x0                   	// #0
  453030:	add	x2, x2, x1
  453034:	str	x2, [x19, #320]
  453038:	b	452ff0 <_obstack_memory_used@@Base+0x9590>
  45303c:	mov	x0, x19
  453040:	mov	x2, x22
  453044:	mov	w1, w21
  453048:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  45304c:	ldrb	w0, [x23]
  453050:	cmp	w0, #0x67
  453054:	b.ne	453118 <_obstack_memory_used@@Base+0x96b8>  // b.any
  453058:	ldrb	w1, [x23, #1]
  45305c:	cmp	w1, #0x73
  453060:	b.ne	453118 <_obstack_memory_used@@Base+0x96b8>  // b.any
  453064:	ldrb	w1, [x23, #2]
  453068:	cbnz	w1, 453118 <_obstack_memory_used@@Base+0x96b8>
  45306c:	mov	w1, w21
  453070:	mov	x2, x20
  453074:	mov	x0, x19
  453078:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45307c:	ldp	x21, x22, [sp, #32]
  453080:	ldp	x23, x24, [sp, #48]
  453084:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453088:	cmp	w0, #0x73
  45308c:	b.ne	45303c <_obstack_memory_used@@Base+0x95dc>  // b.any
  453090:	ldrb	w0, [x23, #1]
  453094:	cmp	w0, #0x50
  453098:	b.ne	45303c <_obstack_memory_used@@Base+0x95dc>  // b.any
  45309c:	ldrb	w0, [x23, #2]
  4530a0:	mov	w3, #0x0                   	// #0
  4530a4:	cbz	w0, 4530b8 <_obstack_memory_used@@Base+0x9658>
  4530a8:	b	45303c <_obstack_memory_used@@Base+0x95dc>
  4530ac:	add	w3, w3, #0x1
  4530b0:	ldr	x20, [x20, #16]
  4530b4:	cbz	x20, 453b7c <_obstack_memory_used@@Base+0xa11c>
  4530b8:	ldr	w0, [x20]
  4530bc:	cmp	w0, #0x2f
  4530c0:	b.ne	453b7c <_obstack_memory_used@@Base+0xa11c>  // b.any
  4530c4:	ldr	x0, [x20, #8]
  4530c8:	cbz	x0, 453b7c <_obstack_memory_used@@Base+0xa11c>
  4530cc:	ldr	w1, [x0]
  4530d0:	cmp	w1, #0x4b
  4530d4:	b.ne	4530ac <_obstack_memory_used@@Base+0x964c>  // b.any
  4530d8:	ldr	x1, [x0, #8]
  4530dc:	mov	x0, x19
  4530e0:	bl	44cb80 <_obstack_memory_used@@Base+0x3120>
  4530e4:	mov	w1, #0x0                   	// #0
  4530e8:	cbnz	x0, 453104 <_obstack_memory_used@@Base+0x96a4>
  4530ec:	b	453110 <_obstack_memory_used@@Base+0x96b0>
  4530f0:	ldr	x2, [x0, #8]
  4530f4:	cbz	x2, 453110 <_obstack_memory_used@@Base+0x96b0>
  4530f8:	ldr	x0, [x0, #16]
  4530fc:	add	w1, w1, #0x1
  453100:	cbz	x0, 453110 <_obstack_memory_used@@Base+0x96b0>
  453104:	ldr	w2, [x0]
  453108:	cmp	w2, #0x2f
  45310c:	b.eq	4530f0 <_obstack_memory_used@@Base+0x9690>  // b.none
  453110:	add	w3, w3, w1
  453114:	b	4530b0 <_obstack_memory_used@@Base+0x9650>
  453118:	cmp	w0, #0x73
  45311c:	b.ne	4520ac <_obstack_memory_used@@Base+0x864c>  // b.any
  453120:	ldrb	w0, [x23, #1]
  453124:	cmp	w0, #0x74
  453128:	b.ne	4520ac <_obstack_memory_used@@Base+0x864c>  // b.any
  45312c:	ldrb	w0, [x23, #2]
  453130:	cbnz	w0, 4520ac <_obstack_memory_used@@Base+0x864c>
  453134:	ldr	x1, [x19, #256]
  453138:	cmp	x1, #0xff
  45313c:	b.ne	453160 <_obstack_memory_used@@Base+0x9700>  // b.any
  453140:	ldp	x3, x2, [x19, #272]
  453144:	strb	wzr, [x19, #255]
  453148:	mov	x0, x19
  45314c:	blr	x3
  453150:	ldr	x0, [x19, #320]
  453154:	mov	x1, #0x0                   	// #0
  453158:	add	x0, x0, #0x1
  45315c:	str	x0, [x19, #320]
  453160:	add	x0, x1, #0x1
  453164:	str	x0, [x19, #256]
  453168:	mov	w0, #0x28                  	// #40
  45316c:	strb	w0, [x19, x1]
  453170:	strb	w0, [x19, #264]
  453174:	mov	w1, w21
  453178:	mov	x2, x20
  45317c:	mov	x0, x19
  453180:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  453184:	ldr	x1, [x19, #256]
  453188:	cmp	x1, #0xff
  45318c:	b.ne	4531b0 <_obstack_memory_used@@Base+0x9750>  // b.any
  453190:	ldp	x3, x2, [x19, #272]
  453194:	strb	wzr, [x19, #255]
  453198:	mov	x0, x19
  45319c:	blr	x3
  4531a0:	ldr	x0, [x19, #320]
  4531a4:	mov	x1, #0x0                   	// #0
  4531a8:	add	x0, x0, #0x1
  4531ac:	str	x0, [x19, #320]
  4531b0:	add	x0, x1, #0x1
  4531b4:	str	x0, [x19, #256]
  4531b8:	mov	w0, #0x29                  	// #41
  4531bc:	strb	w0, [x19, x1]
  4531c0:	strb	w0, [x19, #264]
  4531c4:	ldp	x21, x22, [sp, #32]
  4531c8:	ldp	x23, x24, [sp, #48]
  4531cc:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4531d0:	ldr	x2, [x2, #8]
  4531d4:	mov	x0, x19
  4531d8:	mov	w1, w21
  4531dc:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4531e0:	ldr	x0, [x19, #368]
  4531e4:	cbz	x0, 4531f0 <_obstack_memory_used@@Base+0x9790>
  4531e8:	ldr	x0, [sp, #96]
  4531ec:	str	x0, [x19, #288]
  4531f0:	ldr	x1, [x19, #256]
  4531f4:	ldrb	w2, [x19, #264]
  4531f8:	mov	x0, x1
  4531fc:	cmp	w2, #0x3c
  453200:	b.eq	453c58 <_obstack_memory_used@@Base+0xa1f8>  // b.none
  453204:	add	x1, x0, #0x1
  453208:	cmp	x0, #0xff
  45320c:	b.ne	453238 <_obstack_memory_used@@Base+0x97d8>  // b.any
  453210:	ldp	x3, x2, [x19, #272]
  453214:	strb	wzr, [x19, #255]
  453218:	mov	x1, x0
  45321c:	mov	x0, x19
  453220:	blr	x3
  453224:	ldr	x2, [x19, #320]
  453228:	mov	x1, #0x1                   	// #1
  45322c:	mov	x0, #0x0                   	// #0
  453230:	add	x2, x2, x1
  453234:	str	x2, [x19, #320]
  453238:	str	x1, [x19, #256]
  45323c:	mov	w2, #0x3c                  	// #60
  453240:	strb	w2, [x19, x0]
  453244:	mov	w1, w21
  453248:	strb	w2, [x19, #264]
  45324c:	mov	x0, x19
  453250:	ldr	x2, [x20, #8]
  453254:	ldr	x2, [x2, #16]
  453258:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45325c:	ldrb	w0, [x19, #264]
  453260:	cmp	w0, #0x3e
  453264:	b.eq	453c9c <_obstack_memory_used@@Base+0xa23c>  // b.none
  453268:	ldr	x0, [x19, #256]
  45326c:	add	x1, x0, #0x1
  453270:	cmp	x0, #0xff
  453274:	b.ne	4532a0 <_obstack_memory_used@@Base+0x9840>  // b.any
  453278:	ldp	x3, x2, [x19, #272]
  45327c:	strb	wzr, [x19, #255]
  453280:	mov	x1, x0
  453284:	mov	x0, x19
  453288:	blr	x3
  45328c:	ldr	x2, [x19, #320]
  453290:	mov	x1, #0x1                   	// #1
  453294:	mov	x0, #0x0                   	// #0
  453298:	add	x2, x2, x1
  45329c:	str	x2, [x19, #320]
  4532a0:	str	x1, [x19, #256]
  4532a4:	mov	w1, #0x3e                  	// #62
  4532a8:	strb	w1, [x19, x0]
  4532ac:	strb	w1, [x19, #264]
  4532b0:	ldp	x21, x22, [sp, #32]
  4532b4:	ldp	x23, x24, [sp, #48]
  4532b8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4532bc:	mov	x2, x20
  4532c0:	mov	w1, w21
  4532c4:	mov	x0, x19
  4532c8:	bl	454350 <_obstack_memory_used@@Base+0xa8f0>
  4532cc:	b	4507b0 <_obstack_memory_used@@Base+0x6d50>
  4532d0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4532d4:	add	x24, x24, #0x4e8
  4532d8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4532dc:	add	x24, x24, #0x5
  4532e0:	add	x22, x22, #0x4e9
  4532e4:	mov	w23, #0x5f                  	// #95
  4532e8:	ldr	x1, [x19, #256]
  4532ec:	b	453310 <_obstack_memory_used@@Base+0x98b0>
  4532f0:	mov	x0, x1
  4532f4:	add	x1, x1, #0x1
  4532f8:	str	x1, [x19, #256]
  4532fc:	cmp	x24, x22
  453300:	strb	w23, [x19, x0]
  453304:	strb	w23, [x19, #264]
  453308:	b.eq	450f70 <_obstack_memory_used@@Base+0x7510>  // b.none
  45330c:	ldrb	w23, [x22], #1
  453310:	cmp	x1, #0xff
  453314:	b.ne	4532f0 <_obstack_memory_used@@Base+0x9890>  // b.any
  453318:	ldp	x3, x2, [x19, #272]
  45331c:	strb	wzr, [x19, #255]
  453320:	mov	x0, x19
  453324:	blr	x3
  453328:	ldr	x2, [x19, #320]
  45332c:	mov	x1, #0x1                   	// #1
  453330:	mov	x0, #0x0                   	// #0
  453334:	add	x2, x2, x1
  453338:	str	x2, [x19, #320]
  45333c:	b	4532f8 <_obstack_memory_used@@Base+0x9898>
  453340:	mov	x23, #0x0                   	// #0
  453344:	mov	w22, #0x3a                  	// #58
  453348:	ldr	x1, [x19, #256]
  45334c:	b	45336c <_obstack_memory_used@@Base+0x990c>
  453350:	mov	x0, x1
  453354:	add	x1, x1, #0x1
  453358:	str	x1, [x19, #256]
  45335c:	strb	w22, [x19, x0]
  453360:	strb	w22, [x19, #264]
  453364:	cbnz	x23, 450754 <_obstack_memory_used@@Base+0x6cf4>
  453368:	mov	x23, #0x1                   	// #1
  45336c:	cmp	x1, #0xff
  453370:	b.ne	453350 <_obstack_memory_used@@Base+0x98f0>  // b.any
  453374:	ldp	x3, x2, [x19, #272]
  453378:	strb	wzr, [x19, #255]
  45337c:	mov	x0, x19
  453380:	blr	x3
  453384:	ldr	x2, [x19, #320]
  453388:	mov	x1, #0x1                   	// #1
  45338c:	mov	x0, #0x0                   	// #0
  453390:	add	x2, x2, x1
  453394:	str	x2, [x19, #320]
  453398:	b	453358 <_obstack_memory_used@@Base+0x98f8>
  45339c:	ldr	x1, [x19, #256]
  4533a0:	cmp	x1, #0xff
  4533a4:	b.ne	4533c8 <_obstack_memory_used@@Base+0x9968>  // b.any
  4533a8:	ldp	x3, x2, [x19, #272]
  4533ac:	strb	wzr, [x19, #255]
  4533b0:	mov	x0, x19
  4533b4:	blr	x3
  4533b8:	ldr	x0, [x19, #320]
  4533bc:	mov	x1, #0x0                   	// #0
  4533c0:	add	x0, x0, #0x1
  4533c4:	str	x0, [x19, #320]
  4533c8:	add	x0, x1, #0x1
  4533cc:	str	x0, [x19, #256]
  4533d0:	mov	w0, #0x5b                  	// #91
  4533d4:	strb	w0, [x19, x1]
  4533d8:	strb	w0, [x19, #264]
  4533dc:	mov	w1, w21
  4533e0:	mov	x0, x19
  4533e4:	ldr	x2, [x20, #16]
  4533e8:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4533ec:	ldr	x1, [x19, #256]
  4533f0:	cmp	x1, #0xff
  4533f4:	b.ne	453418 <_obstack_memory_used@@Base+0x99b8>  // b.any
  4533f8:	ldp	x3, x2, [x19, #272]
  4533fc:	strb	wzr, [x19, #255]
  453400:	mov	x0, x19
  453404:	blr	x3
  453408:	ldr	x0, [x19, #320]
  45340c:	mov	x1, #0x0                   	// #0
  453410:	add	x0, x0, #0x1
  453414:	str	x0, [x19, #320]
  453418:	add	x0, x1, #0x1
  45341c:	str	x0, [x19, #256]
  453420:	mov	w0, #0x5d                  	// #93
  453424:	strb	w0, [x19, x1]
  453428:	strb	w0, [x19, #264]
  45342c:	ldp	x21, x22, [sp, #32]
  453430:	ldp	x23, x24, [sp, #48]
  453434:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453438:	ldr	x0, [x19, #256]
  45343c:	cmp	x0, #0xff
  453440:	b.ne	453468 <_obstack_memory_used@@Base+0x9a08>  // b.any
  453444:	ldp	x3, x2, [x19, #272]
  453448:	strb	wzr, [x19, #255]
  45344c:	mov	x1, x0
  453450:	mov	x0, x19
  453454:	blr	x3
  453458:	ldr	x1, [x19, #320]
  45345c:	mov	x0, #0x0                   	// #0
  453460:	add	x1, x1, #0x1
  453464:	str	x1, [x19, #320]
  453468:	add	x1, x0, #0x1
  45346c:	str	x1, [x19, #256]
  453470:	mov	w2, #0x20                  	// #32
  453474:	strb	w2, [x19, x0]
  453478:	strb	w2, [x19, #264]
  45347c:	b	4519a0 <_obstack_memory_used@@Base+0x7f40>
  453480:	ldr	x0, [x19, #256]
  453484:	cmp	x0, #0xff
  453488:	b.ne	4534b0 <_obstack_memory_used@@Base+0x9a50>  // b.any
  45348c:	ldp	x3, x2, [x19, #272]
  453490:	strb	wzr, [x19, #255]
  453494:	mov	x1, x0
  453498:	mov	x0, x19
  45349c:	blr	x3
  4534a0:	ldr	x1, [x19, #320]
  4534a4:	mov	x0, #0x0                   	// #0
  4534a8:	add	x1, x1, #0x1
  4534ac:	str	x1, [x19, #320]
  4534b0:	add	x1, x0, #0x1
  4534b4:	str	x1, [x19, #256]
  4534b8:	mov	w2, #0x20                  	// #32
  4534bc:	strb	w2, [x19, x0]
  4534c0:	strb	w2, [x19, #264]
  4534c4:	b	451940 <_obstack_memory_used@@Base+0x7ee0>
  4534c8:	add	x2, x20, #0x10
  4534cc:	mov	w1, w22
  4534d0:	mov	x0, x19
  4534d4:	bl	454b50 <_obstack_memory_used@@Base+0xb0f0>
  4534d8:	ldr	x2, [x20, #8]
  4534dc:	cbz	x2, 453d08 <_obstack_memory_used@@Base+0xa2a8>
  4534e0:	mov	w1, w22
  4534e4:	mov	x0, x19
  4534e8:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4534ec:	ldp	x21, x22, [sp, #32]
  4534f0:	ldp	x23, x24, [sp, #48]
  4534f4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4534f8:	ldp	x3, x2, [x19, #272]
  4534fc:	strb	wzr, [x19, #255]
  453500:	mov	x0, x19
  453504:	blr	x3
  453508:	ldr	x0, [x19, #320]
  45350c:	mov	w1, #0x29                  	// #41
  453510:	strb	w1, [x19]
  453514:	strb	w1, [x19, #264]
  453518:	mov	x1, #0x1                   	// #1
  45351c:	add	x0, x0, x1
  453520:	str	x1, [x19, #256]
  453524:	str	x0, [x19, #320]
  453528:	ldr	w0, [x20]
  45352c:	cmp	w0, #0x3e
  453530:	b.ne	45067c <_obstack_memory_used@@Base+0x6c1c>  // b.any
  453534:	ldr	x1, [x19, #256]
  453538:	mov	w0, #0x2d                  	// #45
  45353c:	add	x2, x1, #0x1
  453540:	str	x2, [x19, #256]
  453544:	strb	w0, [x19, x1]
  453548:	strb	w0, [x19, #264]
  45354c:	b	45067c <_obstack_memory_used@@Base+0x6c1c>
  453550:	ldp	x21, x22, [sp, #32]
  453554:	ldp	x23, x24, [sp, #48]
  453558:	ldp	x25, x26, [sp, #64]
  45355c:	str	x4, [x19, #296]
  453560:	str	w1, [x19, #304]
  453564:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453568:	ldp	x21, x22, [sp, #32]
  45356c:	ldp	x23, x24, [sp, #48]
  453570:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453574:	ldp	x21, x22, [sp, #32]
  453578:	ldp	x23, x24, [sp, #48]
  45357c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453580:	mov	w22, #0x0                   	// #0
  453584:	b	4506e0 <_obstack_memory_used@@Base+0x6c80>
  453588:	ldr	x0, [x19, #256]
  45358c:	cmp	x0, x22
  453590:	b.eq	453d44 <_obstack_memory_used@@Base+0xa2e4>  // b.none
  453594:	ldp	x21, x22, [sp, #32]
  453598:	ldp	x23, x24, [sp, #48]
  45359c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4535a0:	ldr	x2, [x20, #8]
  4535a4:	mov	w1, w21
  4535a8:	mov	x0, x19
  4535ac:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4535b0:	ldp	x21, x22, [sp, #32]
  4535b4:	ldp	x23, x24, [sp, #48]
  4535b8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4535bc:	cmp	x3, #0xff
  4535c0:	b.ne	453534 <_obstack_memory_used@@Base+0x9ad4>  // b.any
  4535c4:	ldp	x4, x2, [x19, #272]
  4535c8:	strb	wzr, [x19, #255]
  4535cc:	mov	x0, x19
  4535d0:	mov	x1, x3
  4535d4:	blr	x4
  4535d8:	str	xzr, [x19, #256]
  4535dc:	ldr	x0, [x19, #320]
  4535e0:	add	x0, x0, #0x1
  4535e4:	str	x0, [x19, #320]
  4535e8:	b	453534 <_obstack_memory_used@@Base+0x9ad4>
  4535ec:	ldp	x21, x22, [sp, #32]
  4535f0:	ldp	x23, x24, [sp, #48]
  4535f4:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4535f8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4535fc:	add	x24, x24, #0x300
  453600:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  453604:	add	x24, x24, #0xd
  453608:	add	x22, x22, #0x301
  45360c:	mov	w20, #0x7b                  	// #123
  453610:	ldr	x1, [x19, #256]
  453614:	b	453638 <_obstack_memory_used@@Base+0x9bd8>
  453618:	mov	x0, x1
  45361c:	add	x1, x1, #0x1
  453620:	str	x1, [x19, #256]
  453624:	cmp	x24, x22
  453628:	strb	w20, [x19, x0]
  45362c:	strb	w20, [x19, #264]
  453630:	b.eq	453668 <_obstack_memory_used@@Base+0x9c08>  // b.none
  453634:	ldrb	w20, [x22], #1
  453638:	cmp	x1, #0xff
  45363c:	b.ne	453618 <_obstack_memory_used@@Base+0x9bb8>  // b.any
  453640:	ldp	x3, x2, [x19, #272]
  453644:	strb	wzr, [x19, #255]
  453648:	mov	x0, x19
  45364c:	blr	x3
  453650:	ldr	x2, [x19, #320]
  453654:	mov	x1, #0x1                   	// #1
  453658:	mov	x0, #0x0                   	// #0
  45365c:	add	x2, x2, x1
  453660:	str	x2, [x19, #320]
  453664:	b	453620 <_obstack_memory_used@@Base+0x9bc0>
  453668:	ldr	w2, [x23, #16]
  45366c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  453670:	add	x1, x1, #0x840
  453674:	add	x20, sp, #0x60
  453678:	add	w2, w2, #0x1
  45367c:	mov	x0, x20
  453680:	bl	4025b0 <sprintf@plt>
  453684:	mov	x0, x20
  453688:	bl	4024f0 <strlen@plt>
  45368c:	ldr	x1, [x19, #256]
  453690:	cbz	x0, 4536f0 <_obstack_memory_used@@Base+0x9c90>
  453694:	add	x24, x20, x0
  453698:	b	4536bc <_obstack_memory_used@@Base+0x9c5c>
  45369c:	mov	x0, x1
  4536a0:	add	x1, x1, #0x1
  4536a4:	str	x1, [x19, #256]
  4536a8:	add	x20, x20, #0x1
  4536ac:	strb	w22, [x19, x0]
  4536b0:	cmp	x24, x20
  4536b4:	strb	w22, [x19, #264]
  4536b8:	b.eq	4536f0 <_obstack_memory_used@@Base+0x9c90>  // b.none
  4536bc:	ldrb	w22, [x20]
  4536c0:	cmp	x1, #0xff
  4536c4:	b.ne	45369c <_obstack_memory_used@@Base+0x9c3c>  // b.any
  4536c8:	ldp	x3, x2, [x19, #272]
  4536cc:	strb	wzr, [x19, #255]
  4536d0:	mov	x0, x19
  4536d4:	blr	x3
  4536d8:	ldr	x2, [x19, #320]
  4536dc:	mov	x1, #0x1                   	// #1
  4536e0:	mov	x0, #0x0                   	// #0
  4536e4:	add	x2, x2, x1
  4536e8:	str	x2, [x19, #320]
  4536ec:	b	4536a4 <_obstack_memory_used@@Base+0x9c44>
  4536f0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4536f4:	add	x20, x20, #0x310
  4536f8:	add	x24, x20, #0x3
  4536fc:	mov	w22, #0x7d                  	// #125
  453700:	b	453728 <_obstack_memory_used@@Base+0x9cc8>
  453704:	mov	x0, x1
  453708:	add	x1, x1, #0x1
  45370c:	str	x1, [x19, #256]
  453710:	add	x20, x20, #0x1
  453714:	strb	w22, [x19, x0]
  453718:	cmp	x24, x20
  45371c:	strb	w22, [x19, #264]
  453720:	b.eq	453758 <_obstack_memory_used@@Base+0x9cf8>  // b.none
  453724:	ldrb	w22, [x20]
  453728:	cmp	x1, #0xff
  45372c:	b.ne	453704 <_obstack_memory_used@@Base+0x9ca4>  // b.any
  453730:	ldp	x3, x2, [x19, #272]
  453734:	strb	wzr, [x19, #255]
  453738:	mov	x0, x19
  45373c:	blr	x3
  453740:	ldr	x2, [x19, #320]
  453744:	mov	x1, #0x1                   	// #1
  453748:	mov	x0, #0x0                   	// #0
  45374c:	add	x2, x2, x1
  453750:	str	x2, [x19, #320]
  453754:	b	45370c <_obstack_memory_used@@Base+0x9cac>
  453758:	ldr	x23, [x23, #8]
  45375c:	b	450764 <_obstack_memory_used@@Base+0x6d04>
  453760:	ldr	x25, [x25, #16]
  453764:	ldr	w5, [x25]
  453768:	cmp	w5, #0x47
  45376c:	b.eq	453e04 <_obstack_memory_used@@Base+0xa3a4>  // b.none
  453770:	ubfiz	x3, x24, #5, #32
  453774:	sub	w0, w5, #0x1c
  453778:	mov	x1, #0x1f                  	// #31
  45377c:	add	x3, x23, x3
  453780:	cmp	w0, #0x34
  453784:	mov	x2, #0x1                   	// #1
  453788:	movk	x1, #0x1a, lsl #48
  45378c:	b.hi	45182c <_obstack_memory_used@@Base+0x7dcc>  // b.pmore
  453790:	lsl	x0, x2, x0
  453794:	tst	x0, x1
  453798:	b.eq	45182c <_obstack_memory_used@@Base+0x7dcc>  // b.none
  45379c:	cmp	w24, #0x4
  4537a0:	b.eq	453880 <_obstack_memory_used@@Base+0x9e20>  // b.none
  4537a4:	ldp	x8, x9, [x3, #-32]
  4537a8:	stur	x25, [x3, #-24]
  4537ac:	ldp	x4, x5, [x3, #-16]
  4537b0:	stur	wzr, [x3, #-16]
  4537b4:	stp	x8, x9, [x3]
  4537b8:	sub	x0, x3, #0x20
  4537bc:	add	w24, w24, #0x1
  4537c0:	ldr	x25, [x25, #8]
  4537c4:	stp	x4, x5, [x3, #16]
  4537c8:	ldr	w5, [x25]
  4537cc:	stp	x6, x0, [x3, #-8]
  4537d0:	sub	w0, w5, #0x1c
  4537d4:	str	x3, [x19, #296]
  4537d8:	cmp	w0, #0x34
  4537dc:	add	x3, x3, #0x20
  4537e0:	b.ls	453790 <_obstack_memory_used@@Base+0x9d30>  // b.plast
  4537e4:	b	45182c <_obstack_memory_used@@Base+0x7dcc>
  4537e8:	mov	w0, #0x1                   	// #1
  4537ec:	ldp	x21, x22, [sp, #32]
  4537f0:	ldp	x23, x24, [sp, #48]
  4537f4:	str	w0, [x19, #304]
  4537f8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4537fc:	ldr	x4, [x19, #288]
  453800:	add	x0, sp, #0x60
  453804:	str	x0, [x19, #296]
  453808:	mov	w1, w22
  45380c:	mov	x0, x19
  453810:	stp	x3, x20, [sp, #96]
  453814:	str	wzr, [sp, #112]
  453818:	str	x4, [sp, #120]
  45381c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  453820:	ldr	w0, [sp, #112]
  453824:	ldr	x1, [sp, #96]
  453828:	str	x1, [x19, #296]
  45382c:	cbnz	w0, 453f4c <_obstack_memory_used@@Base+0xa4ec>
  453830:	ldr	x1, [x19, #256]
  453834:	cmp	x1, #0xff
  453838:	b.ne	453860 <_obstack_memory_used@@Base+0x9e00>  // b.any
  45383c:	ldp	x3, x2, [x19, #272]
  453840:	strb	wzr, [x19, #255]
  453844:	mov	x0, x19
  453848:	blr	x3
  45384c:	str	xzr, [x19, #256]
  453850:	ldr	x0, [x19, #320]
  453854:	mov	x1, #0x0                   	// #0
  453858:	add	x0, x0, #0x1
  45385c:	str	x0, [x19, #320]
  453860:	add	x0, x1, #0x1
  453864:	str	x0, [x19, #256]
  453868:	mov	w0, #0x20                  	// #32
  45386c:	strb	w0, [x19, x1]
  453870:	strb	w0, [x19, #264]
  453874:	ldr	x3, [x19, #296]
  453878:	b	450d04 <_obstack_memory_used@@Base+0x72a4>
  45387c:	str	x3, [x19, #296]
  453880:	mov	w0, #0x1                   	// #1
  453884:	ldp	x21, x22, [sp, #32]
  453888:	ldp	x23, x24, [sp, #48]
  45388c:	ldp	x25, x26, [sp, #64]
  453890:	str	w0, [x19, #304]
  453894:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453898:	ldrb	w0, [x0]
  45389c:	sub	w1, w0, #0x63
  4538a0:	sub	w0, w0, #0x72
  4538a4:	and	w1, w1, #0xff
  4538a8:	and	w0, w0, #0xff
  4538ac:	cmp	w1, #0x1
  4538b0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  4538b4:	b.hi	451b64 <_obstack_memory_used@@Base+0x8104>  // b.pmore
  4538b8:	mov	w1, w21
  4538bc:	mov	x0, x19
  4538c0:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  4538c4:	ldr	x1, [x19, #256]
  4538c8:	cmp	x1, #0xff
  4538cc:	b.ne	4538f4 <_obstack_memory_used@@Base+0x9e94>  // b.any
  4538d0:	ldp	x3, x2, [x19, #272]
  4538d4:	strb	wzr, [x19, #255]
  4538d8:	mov	x0, x19
  4538dc:	blr	x3
  4538e0:	str	xzr, [x19, #256]
  4538e4:	ldr	x0, [x19, #320]
  4538e8:	mov	x1, #0x0                   	// #0
  4538ec:	add	x0, x0, #0x1
  4538f0:	str	x0, [x19, #320]
  4538f4:	add	x0, x1, #0x1
  4538f8:	str	x0, [x19, #256]
  4538fc:	mov	w0, #0x3c                  	// #60
  453900:	strb	w0, [x19, x1]
  453904:	strb	w0, [x19, #264]
  453908:	mov	w1, w21
  45390c:	mov	x0, x19
  453910:	mov	w22, #0x3e                  	// #62
  453914:	ldr	x2, [x20, #16]
  453918:	mov	x23, #0x0                   	// #0
  45391c:	ldr	x2, [x2, #8]
  453920:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  453924:	ldr	x1, [x19, #256]
  453928:	b	45394c <_obstack_memory_used@@Base+0x9eec>
  45392c:	mov	x0, x1
  453930:	add	x1, x1, #0x1
  453934:	str	x1, [x19, #256]
  453938:	strb	w22, [x19, x0]
  45393c:	strb	w22, [x19, #264]
  453940:	mov	w22, #0x28                  	// #40
  453944:	cbnz	x23, 453ad4 <_obstack_memory_used@@Base+0xa074>
  453948:	mov	x23, #0x1                   	// #1
  45394c:	cmp	x1, #0xff
  453950:	b.ne	45392c <_obstack_memory_used@@Base+0x9ecc>  // b.any
  453954:	ldp	x3, x2, [x19, #272]
  453958:	strb	wzr, [x19, #255]
  45395c:	mov	x0, x19
  453960:	blr	x3
  453964:	ldr	x2, [x19, #320]
  453968:	mov	x1, #0x1                   	// #1
  45396c:	mov	x0, #0x0                   	// #0
  453970:	add	x2, x2, x1
  453974:	str	x2, [x19, #320]
  453978:	b	453934 <_obstack_memory_used@@Base+0x9ed4>
  45397c:	ldr	w4, [x19, #344]
  453980:	ldr	x5, [x19, #336]
  453984:	cmp	w4, #0x0
  453988:	b.le	453f7c <_obstack_memory_used@@Base+0xa51c>
  45398c:	sub	w3, w4, #0x1
  453990:	add	x1, x5, #0x10
  453994:	mov	x2, x5
  453998:	add	x3, x1, w3, uxtw #4
  45399c:	b	4539ac <_obstack_memory_used@@Base+0x9f4c>
  4539a0:	add	x2, x2, #0x10
  4539a4:	cmp	x3, x2
  4539a8:	b.eq	453f7c <_obstack_memory_used@@Base+0xa51c>  // b.none
  4539ac:	ldr	x1, [x2]
  4539b0:	cmp	x0, x1
  4539b4:	b.ne	4539a0 <_obstack_memory_used@@Base+0x9f40>  // b.any
  4539b8:	ldr	x4, [x19, #328]
  4539bc:	mov	x1, x4
  4539c0:	cbnz	x4, 4539dc <_obstack_memory_used@@Base+0x9f7c>
  4539c4:	b	453de0 <_obstack_memory_used@@Base+0xa380>
  4539c8:	cmp	x3, x20
  4539cc:	ccmp	x4, x1, #0x4, eq  // eq = none
  4539d0:	b.ne	4539e8 <_obstack_memory_used@@Base+0x9f88>  // b.any
  4539d4:	ldr	x1, [x1, #8]
  4539d8:	cbz	x1, 453de0 <_obstack_memory_used@@Base+0xa380>
  4539dc:	ldr	x3, [x1]
  4539e0:	cmp	x3, x0
  4539e4:	b.ne	4539c8 <_obstack_memory_used@@Base+0x9f68>  // b.any
  4539e8:	add	x1, x0, #0x8
  4539ec:	mov	x0, x19
  4539f0:	bl	44cb50 <_obstack_memory_used@@Base+0x30f0>
  4539f4:	cbz	x0, 450538 <_obstack_memory_used@@Base+0x6ad8>
  4539f8:	mov	w22, #0x0                   	// #0
  4539fc:	ldr	w1, [x0]
  453a00:	cmp	w1, #0x2f
  453a04:	b.ne	4506bc <_obstack_memory_used@@Base+0x6c5c>  // b.any
  453a08:	ldr	w1, [x19, #316]
  453a0c:	tbnz	w1, #31, 454118 <_obstack_memory_used@@Base+0xa6b8>
  453a10:	bl	44cb10 <_obstack_memory_used@@Base+0x30b0>
  453a14:	cbz	x0, 45412c <_obstack_memory_used@@Base+0xa6cc>
  453a18:	ldr	w1, [x0]
  453a1c:	b	4506bc <_obstack_memory_used@@Base+0x6c5c>
  453a20:	ldr	x2, [x20, #8]
  453a24:	add	x3, x20, #0x10
  453a28:	mov	w1, w21
  453a2c:	mov	x0, x19
  453a30:	bl	455608 <_obstack_memory_used@@Base+0xbba8>
  453a34:	cbnz	w0, 453f04 <_obstack_memory_used@@Base+0xa4a4>
  453a38:	ldp	x24, x3, [x20, #8]
  453a3c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  453a40:	add	x1, x1, #0x520
  453a44:	ldr	x0, [x24, #8]
  453a48:	ldp	x22, x2, [x3, #8]
  453a4c:	ldr	x0, [x0]
  453a50:	ldp	x23, x20, [x2, #8]
  453a54:	bl	402890 <strcmp@plt>
  453a58:	cbnz	w0, 453e64 <_obstack_memory_used@@Base+0xa404>
  453a5c:	mov	x2, x22
  453a60:	mov	w1, w21
  453a64:	mov	x0, x19
  453a68:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453a6c:	mov	x2, x24
  453a70:	mov	w1, w21
  453a74:	mov	x0, x19
  453a78:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  453a7c:	mov	x2, x23
  453a80:	mov	w1, w21
  453a84:	mov	x0, x19
  453a88:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453a8c:	mov	x0, x19
  453a90:	mov	x2, #0x3                   	// #3
  453a94:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  453a98:	add	x1, x1, #0x528
  453a9c:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  453aa0:	mov	w1, w21
  453aa4:	mov	x2, x20
  453aa8:	mov	x0, x19
  453aac:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453ab0:	ldp	x21, x22, [sp, #32]
  453ab4:	ldp	x23, x24, [sp, #48]
  453ab8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453abc:	sub	w1, w0, #0x61
  453ac0:	and	w1, w1, #0xff
  453ac4:	cmp	w1, #0x5
  453ac8:	b.hi	454088 <_obstack_memory_used@@Base+0xa628>  // b.pmore
  453acc:	sub	w0, w0, #0x57
  453ad0:	b	452a84 <_obstack_memory_used@@Base+0x9024>
  453ad4:	ldr	x2, [x20, #16]
  453ad8:	mov	w1, w21
  453adc:	mov	x0, x19
  453ae0:	ldr	x2, [x2, #16]
  453ae4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  453ae8:	ldr	x1, [x19, #256]
  453aec:	cmp	x1, #0xff
  453af0:	b.ne	453b18 <_obstack_memory_used@@Base+0xa0b8>  // b.any
  453af4:	ldp	x3, x2, [x19, #272]
  453af8:	strb	wzr, [x19, #255]
  453afc:	mov	x0, x19
  453b00:	blr	x3
  453b04:	str	xzr, [x19, #256]
  453b08:	ldr	x0, [x19, #320]
  453b0c:	mov	x1, #0x0                   	// #0
  453b10:	add	x0, x0, #0x1
  453b14:	str	x0, [x19, #320]
  453b18:	add	x0, x1, #0x1
  453b1c:	str	x0, [x19, #256]
  453b20:	mov	w0, #0x29                  	// #41
  453b24:	strb	w0, [x19, x1]
  453b28:	strb	w0, [x19, #264]
  453b2c:	ldp	x21, x22, [sp, #32]
  453b30:	ldp	x23, x24, [sp, #48]
  453b34:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453b38:	ldr	w1, [x19, #316]
  453b3c:	tbnz	w1, #31, 452ae4 <_obstack_memory_used@@Base+0x9084>
  453b40:	bl	44cb10 <_obstack_memory_used@@Base+0x30b0>
  453b44:	mov	x2, x0
  453b48:	cbnz	x0, 452ae4 <_obstack_memory_used@@Base+0x9084>
  453b4c:	b	450538 <_obstack_memory_used@@Base+0x6ad8>
  453b50:	cmp	w1, #0x63
  453b54:	b.eq	453f1c <_obstack_memory_used@@Base+0xa4bc>  // b.none
  453b58:	mov	w1, w21
  453b5c:	mov	x0, x19
  453b60:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  453b64:	ldr	x2, [x20, #16]
  453b68:	mov	w1, w21
  453b6c:	mov	x0, x19
  453b70:	ldr	x2, [x2, #16]
  453b74:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453b78:	b	451c98 <_obstack_memory_used@@Base+0x8238>
  453b7c:	mov	w2, w3
  453b80:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  453b84:	add	x1, x1, #0x840
  453b88:	add	x20, sp, #0x60
  453b8c:	mov	x0, x20
  453b90:	bl	4025b0 <sprintf@plt>
  453b94:	mov	x0, x20
  453b98:	bl	4024f0 <strlen@plt>
  453b9c:	cbz	x0, 4541f8 <_obstack_memory_used@@Base+0xa798>
  453ba0:	add	x22, x20, x0
  453ba4:	ldr	x1, [x19, #256]
  453ba8:	b	453bcc <_obstack_memory_used@@Base+0xa16c>
  453bac:	mov	x0, x1
  453bb0:	add	x1, x1, #0x1
  453bb4:	str	x1, [x19, #256]
  453bb8:	add	x20, x20, #0x1
  453bbc:	strb	w21, [x19, x0]
  453bc0:	cmp	x22, x20
  453bc4:	strb	w21, [x19, #264]
  453bc8:	b.eq	453c0c <_obstack_memory_used@@Base+0xa1ac>  // b.none
  453bcc:	ldrb	w21, [x20]
  453bd0:	cmp	x1, #0xff
  453bd4:	b.ne	453bac <_obstack_memory_used@@Base+0xa14c>  // b.any
  453bd8:	ldp	x3, x2, [x19, #272]
  453bdc:	strb	wzr, [x19, #255]
  453be0:	mov	x0, x19
  453be4:	blr	x3
  453be8:	ldr	x2, [x19, #320]
  453bec:	mov	x1, #0x1                   	// #1
  453bf0:	mov	x0, #0x0                   	// #0
  453bf4:	add	x2, x2, x1
  453bf8:	str	x2, [x19, #320]
  453bfc:	b	453bb4 <_obstack_memory_used@@Base+0xa154>
  453c00:	ldp	x21, x22, [sp, #32]
  453c04:	ldp	x23, x24, [sp, #48]
  453c08:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453c0c:	ldp	x21, x22, [sp, #32]
  453c10:	ldp	x23, x24, [sp, #48]
  453c14:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453c18:	ldr	x0, [x22, #8]
  453c1c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  453c20:	mov	x2, #0x6                   	// #6
  453c24:	add	x1, x1, #0x318
  453c28:	bl	4026a0 <strncmp@plt>
  453c2c:	cbnz	w0, 451920 <_obstack_memory_used@@Base+0x7ec0>
  453c30:	ldr	x2, [x20, #16]
  453c34:	mov	w1, w21
  453c38:	mov	x0, x19
  453c3c:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  453c40:	mov	x0, x19
  453c44:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x125a0>
  453c48:	mov	x2, #0x2                   	// #2
  453c4c:	add	x1, x1, #0x4b0
  453c50:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  453c54:	b	4519e0 <_obstack_memory_used@@Base+0x7f80>
  453c58:	cmp	x1, #0xff
  453c5c:	b.ne	453c84 <_obstack_memory_used@@Base+0xa224>  // b.any
  453c60:	ldp	x3, x2, [x19, #272]
  453c64:	strb	wzr, [x19, #255]
  453c68:	mov	x0, x19
  453c6c:	blr	x3
  453c70:	str	xzr, [x19, #256]
  453c74:	ldr	x0, [x19, #320]
  453c78:	mov	x1, #0x0                   	// #0
  453c7c:	add	x0, x0, #0x1
  453c80:	str	x0, [x19, #320]
  453c84:	add	x0, x1, #0x1
  453c88:	str	x0, [x19, #256]
  453c8c:	mov	w2, #0x20                  	// #32
  453c90:	strb	w2, [x19, x1]
  453c94:	strb	w2, [x19, #264]
  453c98:	b	453204 <_obstack_memory_used@@Base+0x97a4>
  453c9c:	ldr	x1, [x19, #256]
  453ca0:	cmp	x1, #0xff
  453ca4:	b.ne	453ccc <_obstack_memory_used@@Base+0xa26c>  // b.any
  453ca8:	ldp	x3, x2, [x19, #272]
  453cac:	strb	wzr, [x19, #255]
  453cb0:	mov	x0, x19
  453cb4:	blr	x3
  453cb8:	str	xzr, [x19, #256]
  453cbc:	ldr	x0, [x19, #320]
  453cc0:	mov	x1, #0x0                   	// #0
  453cc4:	add	x0, x0, #0x1
  453cc8:	str	x0, [x19, #320]
  453ccc:	add	x0, x1, #0x1
  453cd0:	str	x0, [x19, #256]
  453cd4:	mov	w2, #0x20                  	// #32
  453cd8:	strb	w2, [x19, x1]
  453cdc:	strb	w2, [x19, #264]
  453ce0:	b	45326c <_obstack_memory_used@@Base+0x980c>
  453ce4:	ldp	x21, x22, [sp, #32]
  453ce8:	ldp	x23, x24, [sp, #48]
  453cec:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453cf0:	ldp	x21, x22, [sp, #32]
  453cf4:	ldp	x23, x24, [sp, #48]
  453cf8:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453cfc:	ldp	x21, x22, [sp, #32]
  453d00:	ldp	x23, x24, [sp, #48]
  453d04:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453d08:	ldp	x21, x22, [sp, #32]
  453d0c:	ldp	x23, x24, [sp, #48]
  453d10:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453d14:	ldr	x2, [x20, #8]
  453d18:	mov	w1, w21
  453d1c:	mov	x0, x19
  453d20:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453d24:	mov	x0, x19
  453d28:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  453d2c:	mov	x2, #0x3                   	// #3
  453d30:	add	x1, x1, #0x768
  453d34:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  453d38:	ldp	x21, x22, [sp, #32]
  453d3c:	ldp	x23, x24, [sp, #48]
  453d40:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453d44:	sub	x22, x22, #0x2
  453d48:	ldp	x23, x24, [sp, #48]
  453d4c:	str	x22, [x19, #256]
  453d50:	ldp	x21, x22, [sp, #32]
  453d54:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453d58:	ldr	x0, [x0, #8]
  453d5c:	ldr	w1, [x0, #16]
  453d60:	cmp	w1, #0x1
  453d64:	b.eq	4540e8 <_obstack_memory_used@@Base+0xa688>  // b.none
  453d68:	ldp	x21, x22, [sp, #32]
  453d6c:	ldp	x23, x24, [sp, #48]
  453d70:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453d74:	ldr	x1, [x0, #8]
  453d78:	ldr	w2, [x1, #16]
  453d7c:	cmp	w2, #0x1
  453d80:	b.ne	451b88 <_obstack_memory_used@@Base+0x8128>  // b.any
  453d84:	ldr	x1, [x1, #8]
  453d88:	ldrb	w1, [x1]
  453d8c:	cmp	w1, #0x3e
  453d90:	b.ne	451b88 <_obstack_memory_used@@Base+0x8128>  // b.any
  453d94:	ldr	x1, [x19, #256]
  453d98:	cmp	x1, #0xff
  453d9c:	b.ne	453dc4 <_obstack_memory_used@@Base+0xa364>  // b.any
  453da0:	ldp	x3, x2, [x19, #272]
  453da4:	strb	wzr, [x19, #255]
  453da8:	mov	x0, x19
  453dac:	blr	x3
  453db0:	str	xzr, [x19, #256]
  453db4:	ldr	x0, [x19, #320]
  453db8:	mov	x1, #0x0                   	// #0
  453dbc:	add	x0, x0, #0x1
  453dc0:	str	x0, [x19, #320]
  453dc4:	add	x0, x1, #0x1
  453dc8:	str	x0, [x19, #256]
  453dcc:	mov	w0, #0x28                  	// #40
  453dd0:	strb	w0, [x19, x1]
  453dd4:	strb	w0, [x19, #264]
  453dd8:	ldr	x0, [x20, #8]
  453ddc:	b	451b88 <_obstack_memory_used@@Base+0x8128>
  453de0:	ldr	x2, [x2, #8]
  453de4:	add	x1, x0, #0x8
  453de8:	ldr	x23, [x19, #288]
  453dec:	str	x2, [x19, #288]
  453df0:	mov	x0, x19
  453df4:	bl	44cb50 <_obstack_memory_used@@Base+0x30f0>
  453df8:	cbz	x0, 454130 <_obstack_memory_used@@Base+0xa6d0>
  453dfc:	mov	w22, #0x1                   	// #1
  453e00:	b	4539fc <_obstack_memory_used@@Base+0x9f9c>
  453e04:	ldr	x25, [x25, #8]
  453e08:	cbz	x25, 453880 <_obstack_memory_used@@Base+0x9e20>
  453e0c:	ldr	w5, [x25]
  453e10:	b	453770 <_obstack_memory_used@@Base+0x9d10>
  453e14:	ldp	x21, x22, [sp, #32]
  453e18:	ldp	x23, x24, [sp, #48]
  453e1c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453e20:	ldp	x21, x22, [sp, #32]
  453e24:	ldp	x23, x24, [sp, #48]
  453e28:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453e2c:	ldp	x21, x22, [sp, #32]
  453e30:	ldp	x23, x24, [sp, #48]
  453e34:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453e38:	ldr	x0, [x2, #16]
  453e3c:	ldr	w0, [x0]
  453e40:	cmp	w0, #0x29
  453e44:	b.eq	453e50 <_obstack_memory_used@@Base+0xa3f0>  // b.none
  453e48:	mov	w0, #0x1                   	// #1
  453e4c:	str	w0, [x19, #304]
  453e50:	ldr	x2, [x2, #8]
  453e54:	mov	w1, w21
  453e58:	mov	x0, x19
  453e5c:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453e60:	b	451bd0 <_obstack_memory_used@@Base+0x8170>
  453e64:	mov	x0, x19
  453e68:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  453e6c:	mov	x2, #0x4                   	// #4
  453e70:	add	x1, x1, #0x530
  453e74:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  453e78:	ldr	x0, [x22, #8]
  453e7c:	cbz	x0, 453ed4 <_obstack_memory_used@@Base+0xa474>
  453e80:	mov	w1, w21
  453e84:	mov	x2, x22
  453e88:	mov	x0, x19
  453e8c:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453e90:	ldr	x1, [x19, #256]
  453e94:	cmp	x1, #0xff
  453e98:	b.ne	453ec0 <_obstack_memory_used@@Base+0xa460>  // b.any
  453e9c:	ldp	x3, x2, [x19, #272]
  453ea0:	strb	wzr, [x19, #255]
  453ea4:	mov	x0, x19
  453ea8:	blr	x3
  453eac:	str	xzr, [x19, #256]
  453eb0:	ldr	x0, [x19, #320]
  453eb4:	mov	x1, #0x0                   	// #0
  453eb8:	add	x0, x0, #0x1
  453ebc:	str	x0, [x19, #320]
  453ec0:	add	x0, x1, #0x1
  453ec4:	str	x0, [x19, #256]
  453ec8:	mov	w0, #0x20                  	// #32
  453ecc:	strb	w0, [x19, x1]
  453ed0:	strb	w0, [x19, #264]
  453ed4:	mov	x2, x23
  453ed8:	mov	w1, w21
  453edc:	mov	x0, x19
  453ee0:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  453ee4:	cbz	x20, 45407c <_obstack_memory_used@@Base+0xa61c>
  453ee8:	mov	w1, w21
  453eec:	mov	x2, x20
  453ef0:	mov	x0, x19
  453ef4:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  453ef8:	ldp	x21, x22, [sp, #32]
  453efc:	ldp	x23, x24, [sp, #48]
  453f00:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453f04:	ldp	x21, x22, [sp, #32]
  453f08:	ldp	x23, x24, [sp, #48]
  453f0c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453f10:	ldp	x21, x22, [sp, #32]
  453f14:	ldp	x23, x24, [sp, #48]
  453f18:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453f1c:	ldrb	w1, [x0, #1]
  453f20:	cmp	w1, #0x6c
  453f24:	b.ne	453b58 <_obstack_memory_used@@Base+0xa0f8>  // b.any
  453f28:	ldrb	w0, [x0, #2]
  453f2c:	cbz	w0, 453b64 <_obstack_memory_used@@Base+0xa104>
  453f30:	b	453b58 <_obstack_memory_used@@Base+0xa0f8>
  453f34:	ldp	x21, x22, [sp, #32]
  453f38:	ldp	x23, x24, [sp, #48]
  453f3c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453f40:	ldp	x21, x22, [sp, #32]
  453f44:	ldp	x23, x24, [sp, #48]
  453f48:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453f4c:	ldp	x21, x22, [sp, #32]
  453f50:	ldp	x23, x24, [sp, #48]
  453f54:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  453f58:	ldr	x1, [x20, #8]
  453f5c:	ldr	w2, [x1]
  453f60:	cmp	w2, #0x1
  453f64:	b.ne	452f68 <_obstack_memory_used@@Base+0x9508>  // b.any
  453f68:	ldr	x2, [x20, #16]
  453f6c:	ldr	w2, [x2]
  453f70:	cmp	w2, #0x29
  453f74:	csel	x20, x20, x1, ne  // ne = any
  453f78:	b	452f68 <_obstack_memory_used@@Base+0x9508>
  453f7c:	ldr	w1, [x19, #348]
  453f80:	cmp	w4, w1
  453f84:	b.ge	453fec <_obstack_memory_used@@Base+0xa58c>  // b.tcont
  453f88:	sbfiz	x1, x4, #4, #32
  453f8c:	add	w2, w4, #0x1
  453f90:	ldr	x3, [x19, #288]
  453f94:	str	w2, [x19, #344]
  453f98:	str	x0, [x5, x1]
  453f9c:	add	x1, x5, w4, sxtw #4
  453fa0:	add	x1, x1, #0x8
  453fa4:	cbz	x3, 454104 <_obstack_memory_used@@Base+0xa6a4>
  453fa8:	ldr	w2, [x19, #360]
  453fac:	ldr	w6, [x19, #364]
  453fb0:	sbfiz	x5, x2, #4, #32
  453fb4:	b	453fe4 <_obstack_memory_used@@Base+0xa584>
  453fb8:	ldr	x4, [x19, #352]
  453fbc:	add	w2, w2, #0x1
  453fc0:	ldr	x7, [x3, #8]
  453fc4:	add	x4, x4, x5
  453fc8:	str	w2, [x19, #360]
  453fcc:	add	x5, x5, #0x10
  453fd0:	str	x7, [x4, #8]
  453fd4:	str	x4, [x1]
  453fd8:	mov	x1, x4
  453fdc:	ldr	x3, [x3]
  453fe0:	cbz	x3, 454104 <_obstack_memory_used@@Base+0xa6a4>
  453fe4:	cmp	w6, w2
  453fe8:	b.gt	453fb8 <_obstack_memory_used@@Base+0xa558>
  453fec:	mov	w0, #0x1                   	// #1
  453ff0:	ldp	x21, x22, [sp, #32]
  453ff4:	ldp	x23, x24, [sp, #48]
  453ff8:	str	w0, [x19, #304]
  453ffc:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454000:	ldr	x2, [x20, #8]
  454004:	mov	w1, w21
  454008:	mov	x0, x19
  45400c:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  454010:	mov	x2, x22
  454014:	mov	w1, w21
  454018:	mov	x0, x19
  45401c:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  454020:	ldp	x21, x22, [sp, #32]
  454024:	ldp	x23, x24, [sp, #48]
  454028:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45402c:	ldr	x2, [x20, #16]
  454030:	mov	x0, x19
  454034:	mov	w1, w21
  454038:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  45403c:	str	xzr, [x19, #296]
  454040:	ldr	w0, [sp, #112]
  454044:	cbz	w0, 450f48 <_obstack_memory_used@@Base+0x74e8>
  454048:	ldp	x21, x22, [sp, #32]
  45404c:	ldp	x23, x24, [sp, #48]
  454050:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454054:	cmp	w22, #0x5
  454058:	b.eq	454204 <_obstack_memory_used@@Base+0xa7a4>  // b.none
  45405c:	mov	x0, x19
  454060:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454064:	mov	x2, #0x3                   	// #3
  454068:	add	x1, x1, #0x548
  45406c:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  454070:	ldp	x21, x22, [sp, #32]
  454074:	ldp	x23, x24, [sp, #48]
  454078:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  45407c:	ldp	x21, x22, [sp, #32]
  454080:	ldp	x23, x24, [sp, #48]
  454084:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454088:	cmp	x21, x24
  45408c:	b.ls	4529f0 <_obstack_memory_used@@Base+0x8f90>  // b.plast
  454090:	cmp	x2, #0xff
  454094:	ccmp	w0, w23, #0x0, ls  // ls = plast
  454098:	b.ne	4529f0 <_obstack_memory_used@@Base+0x8f90>  // b.any
  45409c:	ldr	x1, [x19, #256]
  4540a0:	and	w22, w2, #0xff
  4540a4:	cmp	x1, #0xff
  4540a8:	b.ne	4540d0 <_obstack_memory_used@@Base+0xa670>  // b.any
  4540ac:	ldp	x3, x2, [x19, #272]
  4540b0:	strb	wzr, [x19, #255]
  4540b4:	mov	x0, x19
  4540b8:	blr	x3
  4540bc:	str	xzr, [x19, #256]
  4540c0:	ldr	x0, [x19, #320]
  4540c4:	mov	x1, #0x0                   	// #0
  4540c8:	add	x0, x0, #0x1
  4540cc:	str	x0, [x19, #320]
  4540d0:	add	x0, x1, #0x1
  4540d4:	str	x0, [x19, #256]
  4540d8:	strb	w22, [x19, x1]
  4540dc:	mov	x20, x24
  4540e0:	strb	w22, [x19, #264]
  4540e4:	b	452a30 <_obstack_memory_used@@Base+0x8fd0>
  4540e8:	ldr	x0, [x0, #8]
  4540ec:	ldrb	w0, [x0]
  4540f0:	cmp	w0, #0x3e
  4540f4:	b.eq	454224 <_obstack_memory_used@@Base+0xa7c4>  // b.none
  4540f8:	ldp	x21, x22, [sp, #32]
  4540fc:	ldp	x23, x24, [sp, #48]
  454100:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454104:	str	xzr, [x1]
  454108:	b	4539e8 <_obstack_memory_used@@Base+0x9f88>
  45410c:	ldp	x21, x22, [sp, #32]
  454110:	ldp	x23, x24, [sp, #48]
  454114:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454118:	ldr	w1, [x20]
  45411c:	ldr	x4, [x19, #296]
  454120:	cmp	w1, #0x2f
  454124:	csel	x20, x20, x0, ne  // ne = any
  454128:	b	4506e0 <_obstack_memory_used@@Base+0x6c80>
  45412c:	cbz	w22, 450538 <_obstack_memory_used@@Base+0x6ad8>
  454130:	ldp	x21, x22, [sp, #32]
  454134:	str	x23, [x19, #288]
  454138:	ldp	x23, x24, [sp, #48]
  45413c:	b	450540 <_obstack_memory_used@@Base+0x6ae0>
  454140:	ldr	x1, [x19, #256]
  454144:	cmp	x1, #0xff
  454148:	b.ne	454170 <_obstack_memory_used@@Base+0xa710>  // b.any
  45414c:	ldp	x3, x2, [x19, #272]
  454150:	strb	wzr, [x19, #255]
  454154:	mov	x0, x19
  454158:	blr	x3
  45415c:	str	xzr, [x19, #256]
  454160:	ldr	x0, [x19, #320]
  454164:	mov	x1, #0x0                   	// #0
  454168:	add	x0, x0, #0x1
  45416c:	str	x0, [x19, #320]
  454170:	add	x0, x1, #0x1
  454174:	str	x0, [x19, #256]
  454178:	mov	w0, #0x75                  	// #117
  45417c:	strb	w0, [x19, x1]
  454180:	strb	w0, [x19, #264]
  454184:	ldp	x21, x22, [sp, #32]
  454188:	ldp	x23, x24, [sp, #48]
  45418c:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454190:	mov	x0, x19
  454194:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454198:	mov	x2, #0x2                   	// #2
  45419c:	add	x1, x1, #0x538
  4541a0:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  4541a4:	ldp	x21, x22, [sp, #32]
  4541a8:	ldp	x23, x24, [sp, #48]
  4541ac:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4541b0:	ldr	x1, [x19, #256]
  4541b4:	cmp	x1, #0xff
  4541b8:	b.ne	4541e0 <_obstack_memory_used@@Base+0xa780>  // b.any
  4541bc:	ldp	x3, x2, [x19, #272]
  4541c0:	strb	wzr, [x19, #255]
  4541c4:	mov	x0, x19
  4541c8:	blr	x3
  4541cc:	str	xzr, [x19, #256]
  4541d0:	ldr	x0, [x19, #320]
  4541d4:	mov	x1, #0x0                   	// #0
  4541d8:	add	x0, x0, #0x1
  4541dc:	str	x0, [x19, #320]
  4541e0:	add	x0, x1, #0x1
  4541e4:	str	x0, [x19, #256]
  4541e8:	mov	w0, #0x2d                  	// #45
  4541ec:	strb	w0, [x19, x1]
  4541f0:	strb	w0, [x19, #264]
  4541f4:	b	452e30 <_obstack_memory_used@@Base+0x93d0>
  4541f8:	ldp	x21, x22, [sp, #32]
  4541fc:	ldp	x23, x24, [sp, #48]
  454200:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454204:	mov	x0, x19
  454208:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45420c:	mov	x2, #0x2                   	// #2
  454210:	add	x1, x1, #0x540
  454214:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  454218:	ldp	x21, x22, [sp, #32]
  45421c:	ldp	x23, x24, [sp, #48]
  454220:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454224:	ldr	x1, [x19, #256]
  454228:	cmp	x1, #0xff
  45422c:	b.ne	454254 <_obstack_memory_used@@Base+0xa7f4>  // b.any
  454230:	ldp	x3, x2, [x19, #272]
  454234:	strb	wzr, [x19, #255]
  454238:	mov	x0, x19
  45423c:	blr	x3
  454240:	str	xzr, [x19, #256]
  454244:	ldr	x0, [x19, #320]
  454248:	mov	x1, #0x0                   	// #0
  45424c:	add	x0, x0, #0x1
  454250:	str	x0, [x19, #320]
  454254:	add	x0, x1, #0x1
  454258:	str	x0, [x19, #256]
  45425c:	mov	w0, #0x29                  	// #41
  454260:	strb	w0, [x19, x1]
  454264:	strb	w0, [x19, #264]
  454268:	ldp	x21, x22, [sp, #32]
  45426c:	ldp	x23, x24, [sp, #48]
  454270:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454274:	mov	x2, x22
  454278:	mov	w1, w21
  45427c:	mov	x0, x19
  454280:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  454284:	b	4520ac <_obstack_memory_used@@Base+0x864c>
  454288:	ldp	x21, x22, [sp, #32]
  45428c:	ldp	x23, x24, [sp, #48]
  454290:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  454294:	mov	x0, x19
  454298:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1a5a0>
  45429c:	mov	x2, #0x5                   	// #5
  4542a0:	add	x1, x1, #0xf68
  4542a4:	bl	44c230 <_obstack_memory_used@@Base+0x27d0>
  4542a8:	ldp	x21, x22, [sp, #32]
  4542ac:	ldp	x23, x24, [sp, #48]
  4542b0:	b	45050c <_obstack_memory_used@@Base+0x6aac>
  4542b4:	nop
  4542b8:	stp	x29, x30, [sp, #-48]!
  4542bc:	mov	x29, sp
  4542c0:	stp	x19, x20, [sp, #16]
  4542c4:	mov	x20, x0
  4542c8:	cbz	x2, 454338 <_obstack_memory_used@@Base+0xa8d8>
  4542cc:	ldr	w3, [x2, #4]
  4542d0:	mov	x19, x2
  4542d4:	cmp	w3, #0x1
  4542d8:	b.gt	454338 <_obstack_memory_used@@Base+0xa8d8>
  4542dc:	ldr	w4, [x0, #308]
  4542e0:	cmp	w4, #0x400
  4542e4:	b.gt	454338 <_obstack_memory_used@@Base+0xa8d8>
  4542e8:	add	w3, w3, #0x1
  4542ec:	add	w4, w4, #0x1
  4542f0:	str	w3, [x2, #4]
  4542f4:	add	x3, sp, #0x20
  4542f8:	str	w4, [x0, #308]
  4542fc:	ldr	x4, [x0, #328]
  454300:	str	x3, [x0, #328]
  454304:	stp	x2, x4, [sp, #32]
  454308:	bl	4504a8 <_obstack_memory_used@@Base+0x6a48>
  45430c:	ldr	w1, [x19, #4]
  454310:	ldr	x0, [sp, #40]
  454314:	str	x0, [x20, #328]
  454318:	ldr	w0, [x20, #308]
  45431c:	sub	w1, w1, #0x1
  454320:	str	w1, [x19, #4]
  454324:	sub	w0, w0, #0x1
  454328:	str	w0, [x20, #308]
  45432c:	ldp	x19, x20, [sp, #16]
  454330:	ldp	x29, x30, [sp], #48
  454334:	ret
  454338:	mov	w0, #0x1                   	// #1
  45433c:	str	w0, [x20, #304]
  454340:	ldp	x19, x20, [sp, #16]
  454344:	ldp	x29, x30, [sp], #48
  454348:	ret
  45434c:	nop
  454350:	stp	x29, x30, [sp, #-64]!
  454354:	mov	x29, sp
  454358:	stp	x19, x20, [sp, #16]
  45435c:	mov	x19, x0
  454360:	ldr	w0, [x2]
  454364:	stp	x21, x22, [sp, #32]
  454368:	mov	x20, x2
  45436c:	sub	w0, w0, #0x3
  454370:	mov	w21, w1
  454374:	cmp	w0, #0x4d
  454378:	b.ls	454398 <_obstack_memory_used@@Base+0xa938>  // b.plast
  45437c:	mov	x2, x20
  454380:	mov	w1, w21
  454384:	mov	x0, x19
  454388:	ldp	x19, x20, [sp, #16]
  45438c:	ldp	x21, x22, [sp, #32]
  454390:	ldp	x29, x30, [sp], #64
  454394:	b	4542b8 <_obstack_memory_used@@Base+0xa858>
  454398:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x205a0>
  45439c:	add	x1, x1, #0x960
  4543a0:	ldrh	w0, [x1, w0, uxtw #1]
  4543a4:	adr	x1, 4543b0 <_obstack_memory_used@@Base+0xa950>
  4543a8:	add	x0, x1, w0, sxth #2
  4543ac:	br	x0
  4543b0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4543b4:	add	x20, x20, #0x5f0
  4543b8:	add	x22, x20, #0x9
  4543bc:	mov	w21, #0x20                  	// #32
  4543c0:	ldr	x1, [x19, #256]
  4543c4:	b	4543ec <_obstack_memory_used@@Base+0xa98c>
  4543c8:	mov	x0, x1
  4543cc:	add	x1, x1, #0x1
  4543d0:	str	x1, [x19, #256]
  4543d4:	add	x20, x20, #0x1
  4543d8:	strb	w21, [x19, x0]
  4543dc:	cmp	x22, x20
  4543e0:	strb	w21, [x19, #264]
  4543e4:	b.eq	4545a4 <_obstack_memory_used@@Base+0xab44>  // b.none
  4543e8:	ldrb	w21, [x20]
  4543ec:	cmp	x1, #0xff
  4543f0:	b.ne	4543c8 <_obstack_memory_used@@Base+0xa968>  // b.any
  4543f4:	ldp	x3, x2, [x19, #272]
  4543f8:	strb	wzr, [x19, #255]
  4543fc:	mov	x0, x19
  454400:	blr	x3
  454404:	ldr	x2, [x19, #320]
  454408:	mov	x1, #0x1                   	// #1
  45440c:	mov	x0, #0x0                   	// #0
  454410:	add	x2, x2, x1
  454414:	str	x2, [x19, #320]
  454418:	b	4543d0 <_obstack_memory_used@@Base+0xa970>
  45441c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454420:	add	x20, x20, #0x600
  454424:	add	x22, x20, #0x9
  454428:	mov	w21, #0x20                  	// #32
  45442c:	ldr	x1, [x19, #256]
  454430:	b	454458 <_obstack_memory_used@@Base+0xa9f8>
  454434:	mov	x0, x1
  454438:	add	x1, x1, #0x1
  45443c:	str	x1, [x19, #256]
  454440:	add	x20, x20, #0x1
  454444:	strb	w21, [x19, x0]
  454448:	cmp	x20, x22
  45444c:	strb	w21, [x19, #264]
  454450:	b.eq	4545a4 <_obstack_memory_used@@Base+0xab44>  // b.none
  454454:	ldrb	w21, [x20]
  454458:	cmp	x1, #0xff
  45445c:	b.ne	454434 <_obstack_memory_used@@Base+0xa9d4>  // b.any
  454460:	ldp	x3, x2, [x19, #272]
  454464:	strb	wzr, [x19, #255]
  454468:	mov	x0, x19
  45446c:	blr	x3
  454470:	ldr	x2, [x19, #320]
  454474:	mov	x1, #0x1                   	// #1
  454478:	mov	x0, #0x0                   	// #0
  45447c:	add	x2, x2, x1
  454480:	str	x2, [x19, #320]
  454484:	b	45443c <_obstack_memory_used@@Base+0xa9dc>
  454488:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45448c:	add	x20, x20, #0x610
  454490:	add	x22, x20, #0x6
  454494:	mov	w21, #0x20                  	// #32
  454498:	ldr	x1, [x19, #256]
  45449c:	b	4544c4 <_obstack_memory_used@@Base+0xaa64>
  4544a0:	mov	x0, x1
  4544a4:	add	x1, x1, #0x1
  4544a8:	str	x1, [x19, #256]
  4544ac:	add	x20, x20, #0x1
  4544b0:	strb	w21, [x19, x0]
  4544b4:	cmp	x22, x20
  4544b8:	strb	w21, [x19, #264]
  4544bc:	b.eq	4545a4 <_obstack_memory_used@@Base+0xab44>  // b.none
  4544c0:	ldrb	w21, [x20]
  4544c4:	cmp	x1, #0xff
  4544c8:	b.ne	4544a0 <_obstack_memory_used@@Base+0xaa40>  // b.any
  4544cc:	ldp	x3, x2, [x19, #272]
  4544d0:	strb	wzr, [x19, #255]
  4544d4:	mov	x0, x19
  4544d8:	blr	x3
  4544dc:	ldr	x2, [x19, #320]
  4544e0:	mov	x1, #0x1                   	// #1
  4544e4:	mov	x0, #0x0                   	// #0
  4544e8:	add	x2, x2, x1
  4544ec:	str	x2, [x19, #320]
  4544f0:	b	4544a8 <_obstack_memory_used@@Base+0xaa48>
  4544f4:	ldr	x2, [x2, #8]
  4544f8:	b	454380 <_obstack_memory_used@@Base+0xa920>
  4544fc:	ldr	x0, [x19, #256]
  454500:	cmp	x0, #0xff
  454504:	b.eq	454ac0 <_obstack_memory_used@@Base+0xb060>  // b.none
  454508:	add	x1, x0, #0x1
  45450c:	str	x1, [x19, #256]
  454510:	mov	w2, #0x20                  	// #32
  454514:	strb	w2, [x19, x0]
  454518:	strb	w2, [x19, #264]
  45451c:	b	45470c <_obstack_memory_used@@Base+0xacac>
  454520:	ldr	x0, [x19, #256]
  454524:	add	x1, x0, #0x1
  454528:	cmp	x0, #0xff
  45452c:	b.eq	454b18 <_obstack_memory_used@@Base+0xb0b8>  // b.none
  454530:	str	x1, [x19, #256]
  454534:	mov	w2, #0x20                  	// #32
  454538:	strb	w2, [x19, x0]
  45453c:	strb	w2, [x19, #264]
  454540:	mov	x21, #0x0                   	// #0
  454544:	mov	w20, #0x26                  	// #38
  454548:	b	454568 <_obstack_memory_used@@Base+0xab08>
  45454c:	mov	x0, x1
  454550:	add	x1, x1, #0x1
  454554:	str	x1, [x19, #256]
  454558:	strb	w20, [x19, x0]
  45455c:	strb	w20, [x19, #264]
  454560:	cbnz	x21, 4545a4 <_obstack_memory_used@@Base+0xab44>
  454564:	mov	x21, #0x1                   	// #1
  454568:	cmp	x1, #0xff
  45456c:	b.ne	45454c <_obstack_memory_used@@Base+0xaaec>  // b.any
  454570:	ldp	x3, x2, [x19, #272]
  454574:	strb	wzr, [x19, #255]
  454578:	mov	x0, x19
  45457c:	blr	x3
  454580:	ldr	x2, [x19, #320]
  454584:	mov	x0, #0x0                   	// #0
  454588:	mov	x1, #0x1                   	// #1
  45458c:	str	x1, [x19, #256]
  454590:	add	x2, x2, x1
  454594:	str	x2, [x19, #320]
  454598:	strb	w20, [x19, x0]
  45459c:	strb	w20, [x19, #264]
  4545a0:	cbz	x21, 454564 <_obstack_memory_used@@Base+0xab04>
  4545a4:	ldp	x19, x20, [sp, #16]
  4545a8:	ldp	x21, x22, [sp, #32]
  4545ac:	ldp	x29, x30, [sp], #64
  4545b0:	ret
  4545b4:	ldr	x1, [x19, #256]
  4545b8:	add	x0, x1, #0x1
  4545bc:	cmp	x1, #0xff
  4545c0:	b.eq	454af0 <_obstack_memory_used@@Base+0xb090>  // b.none
  4545c4:	str	x0, [x19, #256]
  4545c8:	mov	w0, #0x20                  	// #32
  4545cc:	strb	w0, [x19, x1]
  4545d0:	mov	w1, w21
  4545d4:	strb	w0, [x19, #264]
  4545d8:	mov	x0, x19
  4545dc:	ldr	x2, [x20, #16]
  4545e0:	ldp	x19, x20, [sp, #16]
  4545e4:	ldp	x21, x22, [sp, #32]
  4545e8:	ldp	x29, x30, [sp], #64
  4545ec:	b	4542b8 <_obstack_memory_used@@Base+0xa858>
  4545f0:	tbnz	w21, #2, 4545a4 <_obstack_memory_used@@Base+0xab44>
  4545f4:	ldr	x1, [x19, #256]
  4545f8:	add	x0, x1, #0x1
  4545fc:	cmp	x1, #0xff
  454600:	b.ne	454628 <_obstack_memory_used@@Base+0xabc8>  // b.any
  454604:	ldp	x3, x2, [x19, #272]
  454608:	strb	wzr, [x19, #255]
  45460c:	mov	x0, x19
  454610:	blr	x3
  454614:	ldr	x2, [x19, #320]
  454618:	mov	x0, #0x1                   	// #1
  45461c:	mov	x1, #0x0                   	// #0
  454620:	add	x2, x2, x0
  454624:	str	x2, [x19, #320]
  454628:	str	x0, [x19, #256]
  45462c:	mov	w0, #0x2a                  	// #42
  454630:	strb	w0, [x19, x1]
  454634:	strb	w0, [x19, #264]
  454638:	b	4545a4 <_obstack_memory_used@@Base+0xab44>
  45463c:	ldrb	w0, [x19, #264]
  454640:	cmp	w0, #0x28
  454644:	b.eq	45468c <_obstack_memory_used@@Base+0xac2c>  // b.none
  454648:	ldr	x1, [x19, #256]
  45464c:	add	x0, x1, #0x1
  454650:	cmp	x1, #0xff
  454654:	b.ne	45467c <_obstack_memory_used@@Base+0xac1c>  // b.any
  454658:	ldp	x3, x2, [x19, #272]
  45465c:	strb	wzr, [x19, #255]
  454660:	mov	x0, x19
  454664:	blr	x3
  454668:	ldr	x2, [x19, #320]
  45466c:	mov	x0, #0x1                   	// #1
  454670:	mov	x1, #0x0                   	// #0
  454674:	add	x2, x2, x0
  454678:	str	x2, [x19, #320]
  45467c:	str	x0, [x19, #256]
  454680:	mov	w0, #0x20                  	// #32
  454684:	strb	w0, [x19, x1]
  454688:	strb	w0, [x19, #264]
  45468c:	ldr	x2, [x20, #8]
  454690:	mov	w1, w21
  454694:	mov	x0, x19
  454698:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45469c:	add	x20, x20, #0x668
  4546a0:	mov	w21, #0x3a                  	// #58
  4546a4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  4546a8:	add	x22, x20, #0x3
  4546ac:	ldr	x1, [x19, #256]
  4546b0:	b	4546d8 <_obstack_memory_used@@Base+0xac78>
  4546b4:	mov	x0, x1
  4546b8:	add	x1, x1, #0x1
  4546bc:	str	x1, [x19, #256]
  4546c0:	add	x20, x20, #0x1
  4546c4:	strb	w21, [x19, x0]
  4546c8:	cmp	x22, x20
  4546cc:	strb	w21, [x19, #264]
  4546d0:	b.eq	4545a4 <_obstack_memory_used@@Base+0xab44>  // b.none
  4546d4:	ldrb	w21, [x20]
  4546d8:	cmp	x1, #0xff
  4546dc:	b.ne	4546b4 <_obstack_memory_used@@Base+0xac54>  // b.any
  4546e0:	ldp	x3, x2, [x19, #272]
  4546e4:	strb	wzr, [x19, #255]
  4546e8:	mov	x0, x19
  4546ec:	blr	x3
  4546f0:	ldr	x2, [x19, #320]
  4546f4:	mov	x1, #0x1                   	// #1
  4546f8:	mov	x0, #0x0                   	// #0
  4546fc:	add	x2, x2, x1
  454700:	str	x2, [x19, #320]
  454704:	b	4546bc <_obstack_memory_used@@Base+0xac5c>
  454708:	ldr	x1, [x19, #256]
  45470c:	cmp	x1, #0xff
  454710:	b.eq	454a98 <_obstack_memory_used@@Base+0xb038>  // b.none
  454714:	add	x0, x1, #0x1
  454718:	str	x0, [x19, #256]
  45471c:	mov	w0, #0x26                  	// #38
  454720:	strb	w0, [x19, x1]
  454724:	strb	w0, [x19, #264]
  454728:	ldp	x19, x20, [sp, #16]
  45472c:	ldp	x21, x22, [sp, #32]
  454730:	ldp	x29, x30, [sp], #64
  454734:	ret
  454738:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45473c:	add	x22, x22, #0x640
  454740:	stp	x23, x24, [sp, #48]
  454744:	add	x24, x22, #0x6
  454748:	mov	w23, #0x20                  	// #32
  45474c:	ldr	x1, [x19, #256]
  454750:	b	454778 <_obstack_memory_used@@Base+0xad18>
  454754:	mov	x0, x1
  454758:	add	x1, x1, #0x1
  45475c:	str	x1, [x19, #256]
  454760:	add	x22, x22, #0x1
  454764:	strb	w23, [x19, x0]
  454768:	cmp	x24, x22
  45476c:	strb	w23, [x19, #264]
  454770:	b.eq	4549e0 <_obstack_memory_used@@Base+0xaf80>  // b.none
  454774:	ldrb	w23, [x22]
  454778:	cmp	x1, #0xff
  45477c:	b.ne	454754 <_obstack_memory_used@@Base+0xacf4>  // b.any
  454780:	ldp	x3, x2, [x19, #272]
  454784:	strb	wzr, [x19, #255]
  454788:	mov	x0, x19
  45478c:	blr	x3
  454790:	ldr	x2, [x19, #320]
  454794:	mov	x1, #0x1                   	// #1
  454798:	mov	x0, #0x0                   	// #0
  45479c:	add	x2, x2, x1
  4547a0:	str	x2, [x19, #320]
  4547a4:	b	45475c <_obstack_memory_used@@Base+0xacfc>
  4547a8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4547ac:	add	x22, x22, #0x630
  4547b0:	stp	x23, x24, [sp, #48]
  4547b4:	add	x24, x22, #0x9
  4547b8:	mov	w23, #0x20                  	// #32
  4547bc:	ldr	x1, [x19, #256]
  4547c0:	b	4547e8 <_obstack_memory_used@@Base+0xad88>
  4547c4:	mov	x0, x1
  4547c8:	add	x1, x1, #0x1
  4547cc:	str	x1, [x19, #256]
  4547d0:	add	x22, x22, #0x1
  4547d4:	strb	w23, [x19, x0]
  4547d8:	cmp	x22, x24
  4547dc:	strb	w23, [x19, #264]
  4547e0:	b.eq	4549e0 <_obstack_memory_used@@Base+0xaf80>  // b.none
  4547e4:	ldrb	w23, [x22]
  4547e8:	cmp	x1, #0xff
  4547ec:	b.ne	4547c4 <_obstack_memory_used@@Base+0xad64>  // b.any
  4547f0:	ldp	x3, x2, [x19, #272]
  4547f4:	strb	wzr, [x19, #255]
  4547f8:	mov	x0, x19
  4547fc:	blr	x3
  454800:	ldr	x2, [x19, #320]
  454804:	mov	x1, #0x1                   	// #1
  454808:	mov	x0, #0x0                   	// #0
  45480c:	add	x2, x2, x1
  454810:	str	x2, [x19, #320]
  454814:	b	4547cc <_obstack_memory_used@@Base+0xad6c>
  454818:	stp	x23, x24, [sp, #48]
  45481c:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454820:	add	x24, x24, #0x670
  454824:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454828:	add	x24, x24, #0xa
  45482c:	add	x22, x22, #0x671
  454830:	mov	w23, #0x20                  	// #32
  454834:	ldr	x1, [x19, #256]
  454838:	b	45485c <_obstack_memory_used@@Base+0xadfc>
  45483c:	mov	x0, x1
  454840:	add	x1, x1, #0x1
  454844:	str	x1, [x19, #256]
  454848:	cmp	x22, x24
  45484c:	strb	w23, [x19, x0]
  454850:	strb	w23, [x19, #264]
  454854:	b.eq	454a90 <_obstack_memory_used@@Base+0xb030>  // b.none
  454858:	ldrb	w23, [x22], #1
  45485c:	cmp	x1, #0xff
  454860:	b.ne	45483c <_obstack_memory_used@@Base+0xaddc>  // b.any
  454864:	ldp	x3, x2, [x19, #272]
  454868:	strb	wzr, [x19, #255]
  45486c:	mov	x0, x19
  454870:	blr	x3
  454874:	ldr	x2, [x19, #320]
  454878:	mov	x1, #0x1                   	// #1
  45487c:	mov	x0, #0x0                   	// #0
  454880:	add	x2, x2, x1
  454884:	str	x2, [x19, #320]
  454888:	b	454844 <_obstack_memory_used@@Base+0xade4>
  45488c:	ldr	x1, [x19, #256]
  454890:	b	454540 <_obstack_memory_used@@Base+0xaae0>
  454894:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454898:	add	x20, x20, #0x648
  45489c:	add	x22, x20, #0x8
  4548a0:	mov	w21, #0x63                  	// #99
  4548a4:	ldr	x1, [x19, #256]
  4548a8:	b	4548d0 <_obstack_memory_used@@Base+0xae70>
  4548ac:	mov	x0, x1
  4548b0:	add	x1, x1, #0x1
  4548b4:	str	x1, [x19, #256]
  4548b8:	add	x20, x20, #0x1
  4548bc:	strb	w21, [x19, x0]
  4548c0:	cmp	x22, x20
  4548c4:	strb	w21, [x19, #264]
  4548c8:	b.eq	4545a4 <_obstack_memory_used@@Base+0xab44>  // b.none
  4548cc:	ldrb	w21, [x20]
  4548d0:	cmp	x1, #0xff
  4548d4:	b.ne	4548ac <_obstack_memory_used@@Base+0xae4c>  // b.any
  4548d8:	ldp	x3, x2, [x19, #272]
  4548dc:	strb	wzr, [x19, #255]
  4548e0:	mov	x0, x19
  4548e4:	blr	x3
  4548e8:	ldr	x2, [x19, #320]
  4548ec:	mov	x1, #0x1                   	// #1
  4548f0:	mov	x0, #0x0                   	// #0
  4548f4:	add	x2, x2, x1
  4548f8:	str	x2, [x19, #320]
  4548fc:	b	4548b4 <_obstack_memory_used@@Base+0xae54>
  454900:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454904:	add	x22, x22, #0x658
  454908:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45490c:	add	x22, x22, #0xa
  454910:	add	x20, x20, #0x659
  454914:	mov	w21, #0x69                  	// #105
  454918:	ldr	x1, [x19, #256]
  45491c:	b	454940 <_obstack_memory_used@@Base+0xaee0>
  454920:	mov	x0, x1
  454924:	add	x1, x1, #0x1
  454928:	str	x1, [x19, #256]
  45492c:	cmp	x20, x22
  454930:	strb	w21, [x19, x0]
  454934:	strb	w21, [x19, #264]
  454938:	b.eq	4545a4 <_obstack_memory_used@@Base+0xab44>  // b.none
  45493c:	ldrb	w21, [x20], #1
  454940:	cmp	x1, #0xff
  454944:	b.ne	454920 <_obstack_memory_used@@Base+0xaec0>  // b.any
  454948:	ldp	x3, x2, [x19, #272]
  45494c:	strb	wzr, [x19, #255]
  454950:	mov	x0, x19
  454954:	blr	x3
  454958:	ldr	x2, [x19, #320]
  45495c:	mov	x1, #0x1                   	// #1
  454960:	mov	x0, #0x0                   	// #0
  454964:	add	x2, x2, x1
  454968:	str	x2, [x19, #320]
  45496c:	b	454928 <_obstack_memory_used@@Base+0xaec8>
  454970:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  454974:	add	x22, x22, #0x618
  454978:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45497c:	add	x22, x22, #0x11
  454980:	add	x20, x20, #0x619
  454984:	mov	w21, #0x20                  	// #32
  454988:	ldr	x1, [x19, #256]
  45498c:	b	4549b0 <_obstack_memory_used@@Base+0xaf50>
  454990:	mov	x0, x1
  454994:	add	x1, x1, #0x1
  454998:	str	x1, [x19, #256]
  45499c:	cmp	x22, x20
  4549a0:	strb	w21, [x19, x0]
  4549a4:	strb	w21, [x19, #264]
  4549a8:	b.eq	4545a4 <_obstack_memory_used@@Base+0xab44>  // b.none
  4549ac:	ldrb	w21, [x20], #1
  4549b0:	cmp	x1, #0xff
  4549b4:	b.ne	454990 <_obstack_memory_used@@Base+0xaf30>  // b.any
  4549b8:	ldp	x3, x2, [x19, #272]
  4549bc:	strb	wzr, [x19, #255]
  4549c0:	mov	x0, x19
  4549c4:	blr	x3
  4549c8:	ldr	x2, [x19, #320]
  4549cc:	mov	x1, #0x1                   	// #1
  4549d0:	mov	x0, #0x0                   	// #0
  4549d4:	add	x2, x2, x1
  4549d8:	str	x2, [x19, #320]
  4549dc:	b	454998 <_obstack_memory_used@@Base+0xaf38>
  4549e0:	ldr	x2, [x20, #16]
  4549e4:	cbz	x2, 454b44 <_obstack_memory_used@@Base+0xb0e4>
  4549e8:	add	x0, x1, #0x1
  4549ec:	cmp	x1, #0xff
  4549f0:	b.ne	454a1c <_obstack_memory_used@@Base+0xafbc>  // b.any
  4549f4:	ldp	x3, x2, [x19, #272]
  4549f8:	strb	wzr, [x19, #255]
  4549fc:	mov	x0, x19
  454a00:	blr	x3
  454a04:	ldr	x3, [x19, #320]
  454a08:	mov	x0, #0x1                   	// #1
  454a0c:	mov	x1, #0x0                   	// #0
  454a10:	add	x3, x3, x0
  454a14:	ldr	x2, [x20, #16]
  454a18:	str	x3, [x19, #320]
  454a1c:	str	x0, [x19, #256]
  454a20:	mov	w0, #0x28                  	// #40
  454a24:	strb	w0, [x19, x1]
  454a28:	strb	w0, [x19, #264]
  454a2c:	mov	w1, w21
  454a30:	mov	x0, x19
  454a34:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  454a38:	ldr	x1, [x19, #256]
  454a3c:	add	x0, x1, #0x1
  454a40:	cmp	x1, #0xff
  454a44:	b.ne	454a6c <_obstack_memory_used@@Base+0xb00c>  // b.any
  454a48:	ldp	x3, x2, [x19, #272]
  454a4c:	strb	wzr, [x19, #255]
  454a50:	mov	x0, x19
  454a54:	blr	x3
  454a58:	ldr	x2, [x19, #320]
  454a5c:	mov	x0, #0x1                   	// #1
  454a60:	mov	x1, #0x0                   	// #0
  454a64:	add	x2, x2, x0
  454a68:	str	x2, [x19, #320]
  454a6c:	str	x0, [x19, #256]
  454a70:	mov	w0, #0x29                  	// #41
  454a74:	strb	w0, [x19, x1]
  454a78:	strb	w0, [x19, #264]
  454a7c:	ldp	x19, x20, [sp, #16]
  454a80:	ldp	x21, x22, [sp, #32]
  454a84:	ldp	x23, x24, [sp, #48]
  454a88:	ldp	x29, x30, [sp], #64
  454a8c:	ret
  454a90:	ldr	x2, [x20, #8]
  454a94:	b	454a2c <_obstack_memory_used@@Base+0xafcc>
  454a98:	ldp	x3, x2, [x19, #272]
  454a9c:	strb	wzr, [x19, #255]
  454aa0:	mov	x0, x19
  454aa4:	blr	x3
  454aa8:	ldr	x2, [x19, #320]
  454aac:	mov	x0, #0x1                   	// #1
  454ab0:	mov	x1, #0x0                   	// #0
  454ab4:	add	x2, x2, x0
  454ab8:	str	x2, [x19, #320]
  454abc:	b	454718 <_obstack_memory_used@@Base+0xacb8>
  454ac0:	ldp	x3, x2, [x19, #272]
  454ac4:	strb	wzr, [x19, #255]
  454ac8:	mov	x1, x0
  454acc:	mov	x0, x19
  454ad0:	blr	x3
  454ad4:	ldr	x0, [x19, #320]
  454ad8:	mov	w2, #0x20                  	// #32
  454adc:	mov	x1, #0x1                   	// #1
  454ae0:	strb	w2, [x19]
  454ae4:	add	x0, x0, x1
  454ae8:	str	x0, [x19, #320]
  454aec:	b	454714 <_obstack_memory_used@@Base+0xacb4>
  454af0:	ldp	x3, x2, [x19, #272]
  454af4:	strb	wzr, [x19, #255]
  454af8:	mov	x0, x19
  454afc:	blr	x3
  454b00:	ldr	x2, [x19, #320]
  454b04:	mov	x0, #0x1                   	// #1
  454b08:	mov	x1, #0x0                   	// #0
  454b0c:	add	x2, x2, x0
  454b10:	str	x2, [x19, #320]
  454b14:	b	4545c4 <_obstack_memory_used@@Base+0xab64>
  454b18:	ldp	x3, x2, [x19, #272]
  454b1c:	strb	wzr, [x19, #255]
  454b20:	mov	x1, x0
  454b24:	mov	x0, x19
  454b28:	blr	x3
  454b2c:	ldr	x2, [x19, #320]
  454b30:	mov	x1, #0x1                   	// #1
  454b34:	mov	x0, #0x0                   	// #0
  454b38:	add	x2, x2, x1
  454b3c:	str	x2, [x19, #320]
  454b40:	b	454530 <_obstack_memory_used@@Base+0xaad0>
  454b44:	ldp	x23, x24, [sp, #48]
  454b48:	b	4545a4 <_obstack_memory_used@@Base+0xab44>
  454b4c:	nop
  454b50:	stp	x29, x30, [sp, #-64]!
  454b54:	mov	x29, sp
  454b58:	stp	x19, x20, [sp, #16]
  454b5c:	mov	x19, x0
  454b60:	mov	x20, x3
  454b64:	stp	x21, x22, [sp, #32]
  454b68:	mov	x21, x2
  454b6c:	stp	x23, x24, [sp, #48]
  454b70:	mov	w23, w1
  454b74:	cbz	x3, 454bb8 <_obstack_memory_used@@Base+0xb158>
  454b78:	mov	x2, #0xe000000             	// #234881024
  454b7c:	mov	x4, #0x1                   	// #1
  454b80:	movk	x2, #0x862, lsl #32
  454b84:	ldr	w0, [x3, #16]
  454b88:	cbnz	w0, 454bb8 <_obstack_memory_used@@Base+0xb158>
  454b8c:	ldr	x0, [x3, #8]
  454b90:	ldr	w0, [x0]
  454b94:	cmp	w0, #0x2b
  454b98:	b.hi	454bb0 <_obstack_memory_used@@Base+0xb150>  // b.pmore
  454b9c:	lsl	x0, x4, x0
  454ba0:	tst	x0, x2
  454ba4:	b.ne	454c80 <_obstack_memory_used@@Base+0xb220>  // b.any
  454ba8:	tst	x0, #0x1c00000000
  454bac:	b.ne	454d4c <_obstack_memory_used@@Base+0xb2ec>  // b.any
  454bb0:	ldr	x3, [x3]
  454bb4:	cbnz	x3, 454b84 <_obstack_memory_used@@Base+0xb124>
  454bb8:	ldr	x22, [x19, #296]
  454bbc:	str	xzr, [x19, #296]
  454bc0:	mov	w1, w23
  454bc4:	mov	x2, x20
  454bc8:	mov	x0, x19
  454bcc:	mov	w3, #0x0                   	// #0
  454bd0:	bl	454e00 <_obstack_memory_used@@Base+0xb3a0>
  454bd4:	ldr	x1, [x19, #256]
  454bd8:	cmp	x1, #0xff
  454bdc:	b.eq	454d10 <_obstack_memory_used@@Base+0xb2b0>  // b.none
  454be0:	add	x0, x1, #0x1
  454be4:	str	x0, [x19, #256]
  454be8:	mov	w2, #0x28                  	// #40
  454bec:	strb	w2, [x19, x1]
  454bf0:	strb	w2, [x19, #264]
  454bf4:	ldr	x2, [x21]
  454bf8:	cbz	x2, 454c0c <_obstack_memory_used@@Base+0xb1ac>
  454bfc:	mov	x0, x19
  454c00:	mov	w1, w23
  454c04:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  454c08:	ldr	x0, [x19, #256]
  454c0c:	cmp	x0, #0xff
  454c10:	b.eq	454c54 <_obstack_memory_used@@Base+0xb1f4>  // b.none
  454c14:	add	x1, x0, #0x1
  454c18:	str	x1, [x19, #256]
  454c1c:	mov	w3, #0x29                  	// #41
  454c20:	strb	w3, [x19, x0]
  454c24:	mov	x2, x20
  454c28:	strb	w3, [x19, #264]
  454c2c:	mov	w1, w23
  454c30:	mov	x0, x19
  454c34:	mov	w3, #0x1                   	// #1
  454c38:	bl	454e00 <_obstack_memory_used@@Base+0xb3a0>
  454c3c:	ldp	x23, x24, [sp, #48]
  454c40:	str	x22, [x19, #296]
  454c44:	ldp	x19, x20, [sp, #16]
  454c48:	ldp	x21, x22, [sp, #32]
  454c4c:	ldp	x29, x30, [sp], #64
  454c50:	ret
  454c54:	ldp	x3, x2, [x19, #272]
  454c58:	strb	wzr, [x19, #255]
  454c5c:	mov	x1, x0
  454c60:	mov	x0, x19
  454c64:	blr	x3
  454c68:	ldr	x2, [x19, #320]
  454c6c:	mov	x1, #0x1                   	// #1
  454c70:	mov	x0, #0x0                   	// #0
  454c74:	add	x2, x2, x1
  454c78:	str	x2, [x19, #320]
  454c7c:	b	454c18 <_obstack_memory_used@@Base+0xb1b8>
  454c80:	ldrb	w0, [x19, #264]
  454c84:	ldr	x1, [x19, #256]
  454c88:	cmp	w0, #0x20
  454c8c:	b.eq	454cb0 <_obstack_memory_used@@Base+0xb250>  // b.none
  454c90:	cmp	x1, #0xff
  454c94:	b.eq	454d90 <_obstack_memory_used@@Base+0xb330>  // b.none
  454c98:	add	x2, x1, #0x1
  454c9c:	str	x2, [x19, #256]
  454ca0:	mov	w0, #0x20                  	// #32
  454ca4:	strb	w0, [x19, x1]
  454ca8:	mov	x1, x2
  454cac:	strb	w0, [x19, #264]
  454cb0:	cmp	x1, #0xff
  454cb4:	b.eq	454d68 <_obstack_memory_used@@Base+0xb308>  // b.none
  454cb8:	add	x0, x1, #0x1
  454cbc:	str	x0, [x19, #256]
  454cc0:	mov	w24, #0x28                  	// #40
  454cc4:	strb	w24, [x19, x1]
  454cc8:	mov	x0, x19
  454ccc:	strb	w24, [x19, #264]
  454cd0:	mov	x2, x20
  454cd4:	ldr	x22, [x19, #296]
  454cd8:	str	xzr, [x19, #296]
  454cdc:	mov	w1, w23
  454ce0:	mov	w3, #0x0                   	// #0
  454ce4:	bl	454e00 <_obstack_memory_used@@Base+0xb3a0>
  454ce8:	ldr	x0, [x19, #256]
  454cec:	cmp	x0, #0xff
  454cf0:	b.eq	454dbc <_obstack_memory_used@@Base+0xb35c>  // b.none
  454cf4:	add	x1, x0, #0x1
  454cf8:	str	x1, [x19, #256]
  454cfc:	mov	w2, #0x29                  	// #41
  454d00:	strb	w2, [x19, x0]
  454d04:	strb	w2, [x19, #264]
  454d08:	cmp	x1, #0xff
  454d0c:	b.ne	454be0 <_obstack_memory_used@@Base+0xb180>  // b.any
  454d10:	ldp	x3, x2, [x19, #272]
  454d14:	strb	wzr, [x19, #255]
  454d18:	mov	x0, x19
  454d1c:	blr	x3
  454d20:	mov	w1, #0x28                  	// #40
  454d24:	strb	w1, [x19]
  454d28:	strb	w1, [x19, #264]
  454d2c:	mov	x0, #0x1                   	// #1
  454d30:	ldr	x1, [x19, #320]
  454d34:	ldr	x2, [x21]
  454d38:	add	x1, x1, x0
  454d3c:	str	x0, [x19, #256]
  454d40:	str	x1, [x19, #320]
  454d44:	cbnz	x2, 454bfc <_obstack_memory_used@@Base+0xb19c>
  454d48:	b	454c14 <_obstack_memory_used@@Base+0xb1b4>
  454d4c:	ldrb	w0, [x19, #264]
  454d50:	ldr	x1, [x19, #256]
  454d54:	and	w2, w0, #0xfffffffd
  454d58:	cmp	w2, #0x28
  454d5c:	b.ne	454c88 <_obstack_memory_used@@Base+0xb228>  // b.any
  454d60:	cmp	x1, #0xff
  454d64:	b.ne	454cb8 <_obstack_memory_used@@Base+0xb258>  // b.any
  454d68:	ldp	x3, x2, [x19, #272]
  454d6c:	strb	wzr, [x19, #255]
  454d70:	mov	x0, x19
  454d74:	blr	x3
  454d78:	ldr	x2, [x19, #320]
  454d7c:	mov	x0, #0x1                   	// #1
  454d80:	mov	x1, #0x0                   	// #0
  454d84:	add	x2, x2, x0
  454d88:	str	x2, [x19, #320]
  454d8c:	b	454cbc <_obstack_memory_used@@Base+0xb25c>
  454d90:	ldp	x3, x2, [x19, #272]
  454d94:	strb	wzr, [x19, #255]
  454d98:	mov	x0, x19
  454d9c:	blr	x3
  454da0:	ldr	x0, [x19, #320]
  454da4:	mov	w2, #0x20                  	// #32
  454da8:	mov	x1, #0x1                   	// #1
  454dac:	strb	w2, [x19]
  454db0:	add	x0, x0, x1
  454db4:	str	x0, [x19, #320]
  454db8:	b	454cb8 <_obstack_memory_used@@Base+0xb258>
  454dbc:	ldp	x3, x2, [x19, #272]
  454dc0:	strb	wzr, [x19, #255]
  454dc4:	mov	x1, x0
  454dc8:	mov	x0, x19
  454dcc:	blr	x3
  454dd0:	strb	w24, [x19, #264]
  454dd4:	mov	w0, #0x2829                	// #10281
  454dd8:	strh	w0, [x19]
  454ddc:	ldr	x1, [x19, #320]
  454de0:	mov	x0, #0x2                   	// #2
  454de4:	ldr	x2, [x21]
  454de8:	add	x1, x1, #0x1
  454dec:	str	x0, [x19, #256]
  454df0:	str	x1, [x19, #320]
  454df4:	cbnz	x2, 454bfc <_obstack_memory_used@@Base+0xb19c>
  454df8:	b	454c14 <_obstack_memory_used@@Base+0xb1b4>
  454dfc:	nop
  454e00:	cbz	x2, 45505c <_obstack_memory_used@@Base+0xb5fc>
  454e04:	stp	x29, x30, [sp, #-112]!
  454e08:	mov	x29, sp
  454e0c:	stp	x23, x24, [sp, #48]
  454e10:	mov	x24, #0x1f                  	// #31
  454e14:	movk	x24, #0x1a, lsl #48
  454e18:	stp	x19, x20, [sp, #16]
  454e1c:	mov	w20, w1
  454e20:	mov	x19, x2
  454e24:	stp	x21, x22, [sp, #32]
  454e28:	mov	w21, w3
  454e2c:	mov	w22, #0x1                   	// #1
  454e30:	stp	x25, x26, [sp, #64]
  454e34:	mov	x26, x0
  454e38:	mov	x25, #0x1                   	// #1
  454e3c:	b	454e80 <_obstack_memory_used@@Base+0xb420>
  454e40:	ldr	x1, [x19, #24]
  454e44:	cmp	w5, #0x29
  454e48:	ldr	x23, [x26, #288]
  454e4c:	str	w22, [x19, #16]
  454e50:	str	x1, [x26, #288]
  454e54:	b.eq	454ecc <_obstack_memory_used@@Base+0xb46c>  // b.none
  454e58:	cmp	w5, #0x2a
  454e5c:	b.eq	454efc <_obstack_memory_used@@Base+0xb49c>  // b.none
  454e60:	cmp	w5, #0x2
  454e64:	b.eq	454f2c <_obstack_memory_used@@Base+0xb4cc>  // b.none
  454e68:	mov	w1, w20
  454e6c:	mov	x0, x26
  454e70:	bl	454350 <_obstack_memory_used@@Base+0xa8f0>
  454e74:	str	x23, [x26, #288]
  454e78:	ldr	x19, [x19]
  454e7c:	cbz	x19, 454ee4 <_obstack_memory_used@@Base+0xb484>
  454e80:	ldr	w2, [x26, #304]
  454e84:	cbnz	w2, 454ee4 <_obstack_memory_used@@Base+0xb484>
  454e88:	ldr	w2, [x19, #16]
  454e8c:	cbnz	w2, 454e78 <_obstack_memory_used@@Base+0xb418>
  454e90:	ldr	x2, [x19, #8]
  454e94:	ldr	w5, [x2]
  454e98:	cbnz	w21, 454e40 <_obstack_memory_used@@Base+0xb3e0>
  454e9c:	sub	w4, w5, #0x1c
  454ea0:	cmp	w4, #0x34
  454ea4:	b.hi	454e40 <_obstack_memory_used@@Base+0xb3e0>  // b.pmore
  454ea8:	lsl	x4, x25, x4
  454eac:	tst	x4, x24
  454eb0:	b.ne	454e78 <_obstack_memory_used@@Base+0xb418>  // b.any
  454eb4:	ldr	x1, [x19, #24]
  454eb8:	cmp	w5, #0x29
  454ebc:	ldr	x23, [x26, #288]
  454ec0:	str	w22, [x19, #16]
  454ec4:	str	x1, [x26, #288]
  454ec8:	b.ne	454e58 <_obstack_memory_used@@Base+0xb3f8>  // b.any
  454ecc:	ldr	x3, [x19]
  454ed0:	add	x2, x2, #0x10
  454ed4:	mov	w1, w20
  454ed8:	mov	x0, x26
  454edc:	bl	454b50 <_obstack_memory_used@@Base+0xb0f0>
  454ee0:	str	x23, [x26, #288]
  454ee4:	ldp	x19, x20, [sp, #16]
  454ee8:	ldp	x21, x22, [sp, #32]
  454eec:	ldp	x23, x24, [sp, #48]
  454ef0:	ldp	x25, x26, [sp, #64]
  454ef4:	ldp	x29, x30, [sp], #112
  454ef8:	ret
  454efc:	ldr	x3, [x19]
  454f00:	mov	w1, w20
  454f04:	mov	x0, x26
  454f08:	add	x2, x2, #0x8
  454f0c:	bl	4551d0 <_obstack_memory_used@@Base+0xb770>
  454f10:	str	x23, [x26, #288]
  454f14:	ldp	x19, x20, [sp, #16]
  454f18:	ldp	x21, x22, [sp, #32]
  454f1c:	ldp	x23, x24, [sp, #48]
  454f20:	ldp	x25, x26, [sp, #64]
  454f24:	ldp	x29, x30, [sp], #112
  454f28:	ret
  454f2c:	ldr	x2, [x2, #8]
  454f30:	mov	w1, w20
  454f34:	ldr	x21, [x26, #296]
  454f38:	str	xzr, [x26, #296]
  454f3c:	mov	x0, x26
  454f40:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  454f44:	str	x21, [x26, #296]
  454f48:	tbz	w20, #2, 455000 <_obstack_memory_used@@Base+0xb5a0>
  454f4c:	ldr	x1, [x26, #256]
  454f50:	add	x0, x1, #0x1
  454f54:	cmp	x1, #0xff
  454f58:	b.ne	454f80 <_obstack_memory_used@@Base+0xb520>  // b.any
  454f5c:	ldp	x3, x2, [x26, #272]
  454f60:	strb	wzr, [x26, #255]
  454f64:	mov	x0, x26
  454f68:	blr	x3
  454f6c:	ldr	x2, [x26, #320]
  454f70:	mov	x0, #0x1                   	// #1
  454f74:	mov	x1, #0x0                   	// #0
  454f78:	add	x2, x2, x0
  454f7c:	str	x2, [x26, #320]
  454f80:	str	x0, [x26, #256]
  454f84:	mov	w0, #0x2e                  	// #46
  454f88:	strb	w0, [x26, x1]
  454f8c:	strb	w0, [x26, #264]
  454f90:	ldr	x0, [x19, #8]
  454f94:	ldr	x21, [x0, #16]
  454f98:	ldr	w2, [x21]
  454f9c:	cmp	w2, #0x47
  454fa0:	b.eq	455060 <_obstack_memory_used@@Base+0xb600>  // b.none
  454fa4:	mov	x1, #0x1f                  	// #31
  454fa8:	mov	x3, #0x1                   	// #1
  454fac:	movk	x1, #0x1a, lsl #48
  454fb0:	sub	w2, w2, #0x1c
  454fb4:	cmp	w2, #0x34
  454fb8:	b.hi	454fc8 <_obstack_memory_used@@Base+0xb568>  // b.pmore
  454fbc:	lsl	x2, x3, x2
  454fc0:	tst	x2, x1
  454fc4:	b.ne	454ff4 <_obstack_memory_used@@Base+0xb594>  // b.any
  454fc8:	mov	x2, x21
  454fcc:	mov	w1, w20
  454fd0:	mov	x0, x26
  454fd4:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  454fd8:	str	x23, [x26, #288]
  454fdc:	ldp	x19, x20, [sp, #16]
  454fe0:	ldp	x21, x22, [sp, #32]
  454fe4:	ldp	x23, x24, [sp, #48]
  454fe8:	ldp	x25, x26, [sp, #64]
  454fec:	ldp	x29, x30, [sp], #112
  454ff0:	ret
  454ff4:	ldr	x21, [x21, #8]
  454ff8:	ldr	w2, [x21]
  454ffc:	b	454fb0 <_obstack_memory_used@@Base+0xb550>
  455000:	mov	x22, #0x0                   	// #0
  455004:	mov	w21, #0x3a                  	// #58
  455008:	ldr	x1, [x26, #256]
  45500c:	b	45502c <_obstack_memory_used@@Base+0xb5cc>
  455010:	mov	x0, x1
  455014:	add	x1, x1, #0x1
  455018:	str	x1, [x26, #256]
  45501c:	strb	w21, [x26, x0]
  455020:	strb	w21, [x26, #264]
  455024:	cbnz	x22, 454f90 <_obstack_memory_used@@Base+0xb530>
  455028:	mov	x22, #0x1                   	// #1
  45502c:	cmp	x1, #0xff
  455030:	b.ne	455010 <_obstack_memory_used@@Base+0xb5b0>  // b.any
  455034:	ldp	x3, x2, [x26, #272]
  455038:	strb	wzr, [x26, #255]
  45503c:	mov	x0, x26
  455040:	blr	x3
  455044:	ldr	x2, [x26, #320]
  455048:	mov	x1, #0x1                   	// #1
  45504c:	mov	x0, #0x0                   	// #0
  455050:	add	x2, x2, x1
  455054:	str	x2, [x26, #320]
  455058:	b	455018 <_obstack_memory_used@@Base+0xb5b8>
  45505c:	ret
  455060:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  455064:	add	x24, x24, #0x300
  455068:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45506c:	add	x24, x24, #0xd
  455070:	add	x22, x22, #0x301
  455074:	mov	w19, #0x7b                  	// #123
  455078:	ldr	x1, [x26, #256]
  45507c:	b	4550a0 <_obstack_memory_used@@Base+0xb640>
  455080:	mov	x0, x1
  455084:	add	x1, x1, #0x1
  455088:	str	x1, [x26, #256]
  45508c:	cmp	x22, x24
  455090:	strb	w19, [x26, x0]
  455094:	strb	w19, [x26, #264]
  455098:	b.eq	4550d0 <_obstack_memory_used@@Base+0xb670>  // b.none
  45509c:	ldrb	w19, [x22], #1
  4550a0:	cmp	x1, #0xff
  4550a4:	b.ne	455080 <_obstack_memory_used@@Base+0xb620>  // b.any
  4550a8:	ldp	x3, x2, [x26, #272]
  4550ac:	strb	wzr, [x26, #255]
  4550b0:	mov	x0, x26
  4550b4:	blr	x3
  4550b8:	ldr	x2, [x26, #320]
  4550bc:	mov	x1, #0x1                   	// #1
  4550c0:	mov	x0, #0x0                   	// #0
  4550c4:	add	x2, x2, x1
  4550c8:	str	x2, [x26, #320]
  4550cc:	b	455088 <_obstack_memory_used@@Base+0xb628>
  4550d0:	ldr	w2, [x21, #16]
  4550d4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x115a0>
  4550d8:	add	x1, x1, #0x840
  4550dc:	add	x19, sp, #0x50
  4550e0:	add	w2, w2, #0x1
  4550e4:	mov	x0, x19
  4550e8:	bl	4025b0 <sprintf@plt>
  4550ec:	mov	x0, x19
  4550f0:	bl	4024f0 <strlen@plt>
  4550f4:	ldr	x1, [x26, #256]
  4550f8:	cbz	x0, 455158 <_obstack_memory_used@@Base+0xb6f8>
  4550fc:	add	x24, x19, x0
  455100:	b	455124 <_obstack_memory_used@@Base+0xb6c4>
  455104:	mov	x0, x1
  455108:	add	x1, x1, #0x1
  45510c:	str	x1, [x26, #256]
  455110:	add	x19, x19, #0x1
  455114:	strb	w22, [x26, x0]
  455118:	cmp	x24, x19
  45511c:	strb	w22, [x26, #264]
  455120:	b.eq	455158 <_obstack_memory_used@@Base+0xb6f8>  // b.none
  455124:	ldrb	w22, [x19]
  455128:	cmp	x1, #0xff
  45512c:	b.ne	455104 <_obstack_memory_used@@Base+0xb6a4>  // b.any
  455130:	ldp	x3, x2, [x26, #272]
  455134:	strb	wzr, [x26, #255]
  455138:	mov	x0, x26
  45513c:	blr	x3
  455140:	ldr	x2, [x26, #320]
  455144:	mov	x1, #0x1                   	// #1
  455148:	mov	x0, #0x0                   	// #0
  45514c:	add	x2, x2, x1
  455150:	str	x2, [x26, #320]
  455154:	b	45510c <_obstack_memory_used@@Base+0xb6ac>
  455158:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  45515c:	add	x19, x19, #0x310
  455160:	add	x24, x19, #0x3
  455164:	mov	w22, #0x7d                  	// #125
  455168:	b	455190 <_obstack_memory_used@@Base+0xb730>
  45516c:	mov	x0, x1
  455170:	add	x1, x1, #0x1
  455174:	str	x1, [x26, #256]
  455178:	add	x19, x19, #0x1
  45517c:	strb	w22, [x26, x0]
  455180:	cmp	x24, x19
  455184:	strb	w22, [x26, #264]
  455188:	b.eq	4551c0 <_obstack_memory_used@@Base+0xb760>  // b.none
  45518c:	ldrb	w22, [x19]
  455190:	cmp	x1, #0xff
  455194:	b.ne	45516c <_obstack_memory_used@@Base+0xb70c>  // b.any
  455198:	ldp	x3, x2, [x26, #272]
  45519c:	strb	wzr, [x26, #255]
  4551a0:	mov	x0, x26
  4551a4:	blr	x3
  4551a8:	ldr	x2, [x26, #320]
  4551ac:	mov	x1, #0x1                   	// #1
  4551b0:	mov	x0, #0x0                   	// #0
  4551b4:	add	x2, x2, x1
  4551b8:	str	x2, [x26, #320]
  4551bc:	b	455174 <_obstack_memory_used@@Base+0xb714>
  4551c0:	ldr	x21, [x21, #8]
  4551c4:	ldr	w2, [x21]
  4551c8:	b	454fa4 <_obstack_memory_used@@Base+0xb544>
  4551cc:	nop
  4551d0:	stp	x29, x30, [sp, #-64]!
  4551d4:	mov	x29, sp
  4551d8:	stp	x19, x20, [sp, #16]
  4551dc:	mov	x19, x0
  4551e0:	mov	x20, x3
  4551e4:	stp	x21, x22, [sp, #32]
  4551e8:	mov	x0, x3
  4551ec:	mov	w21, w1
  4551f0:	stp	x23, x24, [sp, #48]
  4551f4:	mov	x22, x2
  4551f8:	cbz	x3, 455224 <_obstack_memory_used@@Base+0xb7c4>
  4551fc:	nop
  455200:	ldr	w4, [x0, #16]
  455204:	cbz	w4, 455310 <_obstack_memory_used@@Base+0xb8b0>
  455208:	ldr	x0, [x0]
  45520c:	cbnz	x0, 455200 <_obstack_memory_used@@Base+0xb7a0>
  455210:	mov	x2, x20
  455214:	mov	w1, w21
  455218:	mov	x0, x19
  45521c:	mov	w3, #0x0                   	// #0
  455220:	bl	454e00 <_obstack_memory_used@@Base+0xb3a0>
  455224:	ldr	x23, [x19, #256]
  455228:	cmp	x23, #0xff
  45522c:	b.eq	45533c <_obstack_memory_used@@Base+0xb8dc>  // b.none
  455230:	add	x1, x23, #0x1
  455234:	str	x1, [x19, #256]
  455238:	mov	w0, #0x20                  	// #32
  45523c:	strb	w0, [x19, x23]
  455240:	strb	w0, [x19, #264]
  455244:	cmp	x1, #0xff
  455248:	b.eq	4552d4 <_obstack_memory_used@@Base+0xb874>  // b.none
  45524c:	add	x0, x1, #0x1
  455250:	str	x0, [x19, #256]
  455254:	mov	w2, #0x5b                  	// #91
  455258:	strb	w2, [x19, x1]
  45525c:	strb	w2, [x19, #264]
  455260:	ldr	x2, [x22]
  455264:	cbz	x2, 455278 <_obstack_memory_used@@Base+0xb818>
  455268:	mov	x0, x19
  45526c:	mov	w1, w21
  455270:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  455274:	ldr	x0, [x19, #256]
  455278:	cmp	x0, #0xff
  45527c:	b.eq	4552a8 <_obstack_memory_used@@Base+0xb848>  // b.none
  455280:	add	x1, x0, #0x1
  455284:	str	x1, [x19, #256]
  455288:	mov	w1, #0x5d                  	// #93
  45528c:	strb	w1, [x19, x0]
  455290:	strb	w1, [x19, #264]
  455294:	ldp	x19, x20, [sp, #16]
  455298:	ldp	x21, x22, [sp, #32]
  45529c:	ldp	x23, x24, [sp, #48]
  4552a0:	ldp	x29, x30, [sp], #64
  4552a4:	ret
  4552a8:	ldp	x3, x2, [x19, #272]
  4552ac:	strb	wzr, [x19, #255]
  4552b0:	mov	x1, x0
  4552b4:	mov	x0, x19
  4552b8:	blr	x3
  4552bc:	ldr	x2, [x19, #320]
  4552c0:	mov	x1, #0x1                   	// #1
  4552c4:	mov	x0, #0x0                   	// #0
  4552c8:	add	x2, x2, x1
  4552cc:	str	x2, [x19, #320]
  4552d0:	b	455284 <_obstack_memory_used@@Base+0xb824>
  4552d4:	ldp	x3, x2, [x19, #272]
  4552d8:	strb	wzr, [x19, #255]
  4552dc:	mov	x0, x19
  4552e0:	blr	x3
  4552e4:	mov	w1, #0x5b                  	// #91
  4552e8:	strb	w1, [x19]
  4552ec:	strb	w1, [x19, #264]
  4552f0:	mov	x0, #0x1                   	// #1
  4552f4:	ldr	x1, [x19, #320]
  4552f8:	ldr	x2, [x22]
  4552fc:	add	x1, x1, x0
  455300:	str	x0, [x19, #256]
  455304:	str	x1, [x19, #320]
  455308:	cbnz	x2, 455268 <_obstack_memory_used@@Base+0xb808>
  45530c:	b	455280 <_obstack_memory_used@@Base+0xb820>
  455310:	ldr	x0, [x0, #8]
  455314:	ldr	w0, [x0]
  455318:	cmp	w0, #0x2a
  45531c:	b.ne	455380 <_obstack_memory_used@@Base+0xb920>  // b.any
  455320:	mov	w1, w21
  455324:	mov	x2, x20
  455328:	mov	x0, x19
  45532c:	mov	w3, #0x0                   	// #0
  455330:	bl	454e00 <_obstack_memory_used@@Base+0xb3a0>
  455334:	ldr	x1, [x19, #256]
  455338:	b	455244 <_obstack_memory_used@@Base+0xb7e4>
  45533c:	ldp	x3, x2, [x19, #272]
  455340:	strb	wzr, [x19, #255]
  455344:	mov	x1, x23
  455348:	mov	x0, x19
  45534c:	blr	x3
  455350:	mov	w1, #0x5b20                	// #23328
  455354:	mov	w0, #0x5b                  	// #91
  455358:	strh	w1, [x19]
  45535c:	strb	w0, [x19, #264]
  455360:	mov	x0, #0x2                   	// #2
  455364:	ldr	x1, [x19, #320]
  455368:	ldr	x2, [x22]
  45536c:	add	x1, x1, #0x1
  455370:	str	x0, [x19, #256]
  455374:	str	x1, [x19, #320]
  455378:	cbnz	x2, 455268 <_obstack_memory_used@@Base+0xb808>
  45537c:	b	455280 <_obstack_memory_used@@Base+0xb820>
  455380:	mov	w24, #0x20                  	// #32
  455384:	mov	x23, #0x0                   	// #0
  455388:	ldr	x1, [x19, #256]
  45538c:	b	4553b4 <_obstack_memory_used@@Base+0xb954>
  455390:	mov	x0, x1
  455394:	add	x1, x1, #0x1
  455398:	str	x1, [x19, #256]
  45539c:	cmp	x23, #0x1
  4553a0:	strb	w24, [x19, x0]
  4553a4:	strb	w24, [x19, #264]
  4553a8:	mov	w24, #0x28                  	// #40
  4553ac:	b.eq	4553f8 <_obstack_memory_used@@Base+0xb998>  // b.none
  4553b0:	mov	x23, #0x1                   	// #1
  4553b4:	cmp	x1, #0xff
  4553b8:	b.ne	455390 <_obstack_memory_used@@Base+0xb930>  // b.any
  4553bc:	ldp	x3, x2, [x19, #272]
  4553c0:	strb	wzr, [x19, #255]
  4553c4:	mov	x0, x19
  4553c8:	blr	x3
  4553cc:	ldr	x2, [x19, #320]
  4553d0:	mov	x0, #0x0                   	// #0
  4553d4:	mov	x1, #0x1                   	// #1
  4553d8:	str	x1, [x19, #256]
  4553dc:	add	x2, x2, x1
  4553e0:	str	x2, [x19, #320]
  4553e4:	strb	w24, [x19, x0]
  4553e8:	cmp	x23, #0x1
  4553ec:	strb	w24, [x19, #264]
  4553f0:	mov	w24, #0x28                  	// #40
  4553f4:	b.ne	4553b0 <_obstack_memory_used@@Base+0xb950>  // b.any
  4553f8:	mov	w1, w21
  4553fc:	mov	x2, x20
  455400:	mov	x0, x19
  455404:	mov	w3, #0x0                   	// #0
  455408:	bl	454e00 <_obstack_memory_used@@Base+0xb3a0>
  45540c:	ldr	x1, [x19, #256]
  455410:	cmp	x1, #0xff
  455414:	b.eq	455430 <_obstack_memory_used@@Base+0xb9d0>  // b.none
  455418:	add	x23, x1, #0x1
  45541c:	str	x23, [x19, #256]
  455420:	mov	w0, #0x29                  	// #41
  455424:	strb	w0, [x19, x1]
  455428:	strb	w0, [x19, #264]
  45542c:	b	455228 <_obstack_memory_used@@Base+0xb7c8>
  455430:	ldp	x3, x2, [x19, #272]
  455434:	strb	wzr, [x19, #255]
  455438:	mov	x0, x19
  45543c:	blr	x3
  455440:	ldr	x0, [x19, #320]
  455444:	mov	w1, #0x29                  	// #41
  455448:	strb	w1, [x19]
  45544c:	add	x0, x0, #0x1
  455450:	str	x0, [x19, #320]
  455454:	b	455230 <_obstack_memory_used@@Base+0xb7d0>
  455458:	ldr	w4, [x2]
  45545c:	cmp	w4, #0x32
  455460:	b.eq	455468 <_obstack_memory_used@@Base+0xba08>  // b.none
  455464:	b	4542b8 <_obstack_memory_used@@Base+0xa858>
  455468:	stp	x29, x30, [sp, #-48]!
  45546c:	mov	x29, sp
  455470:	stp	x19, x20, [sp, #16]
  455474:	mov	x19, x0
  455478:	ldr	x0, [x2, #8]
  45547c:	stp	x21, x22, [sp, #32]
  455480:	ldrsw	x22, [x0, #16]
  455484:	ldr	x20, [x0, #8]
  455488:	cbz	x22, 455500 <_obstack_memory_used@@Base+0xbaa0>
  45548c:	add	x22, x20, x22
  455490:	ldr	x1, [x19, #256]
  455494:	b	4554b8 <_obstack_memory_used@@Base+0xba58>
  455498:	mov	x2, x1
  45549c:	add	x1, x1, #0x1
  4554a0:	str	x1, [x19, #256]
  4554a4:	add	x20, x20, #0x1
  4554a8:	cmp	x20, x22
  4554ac:	strb	w21, [x19, x2]
  4554b0:	strb	w21, [x19, #264]
  4554b4:	b.eq	455500 <_obstack_memory_used@@Base+0xbaa0>  // b.none
  4554b8:	ldrb	w21, [x20]
  4554bc:	cmp	x1, #0xff
  4554c0:	b.ne	455498 <_obstack_memory_used@@Base+0xba38>  // b.any
  4554c4:	ldp	x3, x2, [x19, #272]
  4554c8:	strb	wzr, [x19, #255]
  4554cc:	mov	x0, x19
  4554d0:	add	x20, x20, #0x1
  4554d4:	blr	x3
  4554d8:	ldr	x0, [x19, #320]
  4554dc:	mov	x2, #0x0                   	// #0
  4554e0:	mov	x1, #0x1                   	// #1
  4554e4:	str	x1, [x19, #256]
  4554e8:	add	x0, x0, x1
  4554ec:	str	x0, [x19, #320]
  4554f0:	strb	w21, [x19, x2]
  4554f4:	cmp	x20, x22
  4554f8:	strb	w21, [x19, #264]
  4554fc:	b.ne	4554b8 <_obstack_memory_used@@Base+0xba58>  // b.any
  455500:	ldp	x19, x20, [sp, #16]
  455504:	ldp	x21, x22, [sp, #32]
  455508:	ldp	x29, x30, [sp], #48
  45550c:	ret
  455510:	stp	x29, x30, [sp, #-48]!
  455514:	mov	x29, sp
  455518:	str	x21, [sp, #32]
  45551c:	mov	w21, w1
  455520:	ldr	w1, [x2]
  455524:	stp	x19, x20, [sp, #16]
  455528:	mov	x20, x2
  45552c:	cmp	w1, #0x31
  455530:	mov	x19, x0
  455534:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  455538:	b.ls	4555c8 <_obstack_memory_used@@Base+0xbb68>  // b.plast
  45553c:	cmp	w1, #0x6
  455540:	b.eq	4555c8 <_obstack_memory_used@@Base+0xbb68>  // b.none
  455544:	ldr	x1, [x0, #256]
  455548:	cmp	x1, #0xff
  45554c:	b.eq	4555e4 <_obstack_memory_used@@Base+0xbb84>  // b.none
  455550:	add	x0, x1, #0x1
  455554:	str	x0, [x19, #256]
  455558:	mov	w0, #0x28                  	// #40
  45555c:	strb	w0, [x19, x1]
  455560:	mov	x2, x20
  455564:	strb	w0, [x19, #264]
  455568:	mov	w1, w21
  45556c:	mov	x0, x19
  455570:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  455574:	ldr	x1, [x19, #256]
  455578:	add	x0, x1, #0x1
  45557c:	cmp	x1, #0xff
  455580:	b.ne	4555a8 <_obstack_memory_used@@Base+0xbb48>  // b.any
  455584:	ldp	x3, x2, [x19, #272]
  455588:	strb	wzr, [x19, #255]
  45558c:	mov	x0, x19
  455590:	blr	x3
  455594:	ldr	x2, [x19, #320]
  455598:	mov	x0, #0x1                   	// #1
  45559c:	mov	x1, #0x0                   	// #0
  4555a0:	add	x2, x2, x0
  4555a4:	str	x2, [x19, #320]
  4555a8:	str	x0, [x19, #256]
  4555ac:	mov	w0, #0x29                  	// #41
  4555b0:	strb	w0, [x19, x1]
  4555b4:	strb	w0, [x19, #264]
  4555b8:	ldp	x19, x20, [sp, #16]
  4555bc:	ldr	x21, [sp, #32]
  4555c0:	ldp	x29, x30, [sp], #48
  4555c4:	ret
  4555c8:	mov	x2, x20
  4555cc:	mov	w1, w21
  4555d0:	mov	x0, x19
  4555d4:	ldp	x19, x20, [sp, #16]
  4555d8:	ldr	x21, [sp, #32]
  4555dc:	ldp	x29, x30, [sp], #48
  4555e0:	b	4542b8 <_obstack_memory_used@@Base+0xa858>
  4555e4:	ldp	x3, x2, [x0, #272]
  4555e8:	strb	wzr, [x0, #255]
  4555ec:	blr	x3
  4555f0:	ldr	x2, [x19, #320]
  4555f4:	mov	x0, #0x1                   	// #1
  4555f8:	mov	x1, #0x0                   	// #0
  4555fc:	add	x2, x2, x0
  455600:	str	x2, [x19, #320]
  455604:	b	455554 <_obstack_memory_used@@Base+0xbaf4>
  455608:	stp	x29, x30, [sp, #-80]!
  45560c:	mov	x29, sp
  455610:	stp	x19, x20, [sp, #16]
  455614:	mov	x19, x0
  455618:	ldr	x0, [x2, #8]
  45561c:	stp	x21, x22, [sp, #32]
  455620:	mov	w22, w1
  455624:	ldr	x0, [x0]
  455628:	ldrb	w1, [x0]
  45562c:	cmp	w1, #0x66
  455630:	b.ne	4557c4 <_obstack_memory_used@@Base+0xbd64>  // b.any
  455634:	ldr	x1, [x3]
  455638:	stp	x23, x24, [sp, #48]
  45563c:	stp	x25, x26, [sp, #64]
  455640:	mov	x25, #0x0                   	// #0
  455644:	ldp	x23, x26, [x1, #8]
  455648:	ldr	w1, [x26]
  45564c:	cmp	w1, #0x3c
  455650:	b.eq	45588c <_obstack_memory_used@@Base+0xbe2c>  // b.none
  455654:	ldr	w21, [x19, #316]
  455658:	mov	w1, #0xffffffff            	// #-1
  45565c:	str	w1, [x19, #316]
  455660:	ldrb	w0, [x0, #1]
  455664:	cmp	w0, #0x6c
  455668:	b.eq	4558ac <_obstack_memory_used@@Base+0xbe4c>  // b.none
  45566c:	b.hi	4557d8 <_obstack_memory_used@@Base+0xbd78>  // b.pmore
  455670:	cmp	w0, #0x4c
  455674:	b.eq	455680 <_obstack_memory_used@@Base+0xbc20>  // b.none
  455678:	cmp	w0, #0x52
  45567c:	b.ne	4557a4 <_obstack_memory_used@@Base+0xbd44>  // b.any
  455680:	ldr	x1, [x19, #256]
  455684:	add	x0, x1, #0x1
  455688:	cmp	x1, #0xff
  45568c:	b.eq	45596c <_obstack_memory_used@@Base+0xbf0c>  // b.none
  455690:	str	x0, [x19, #256]
  455694:	mov	w0, #0x28                  	// #40
  455698:	strb	w0, [x19, x1]
  45569c:	mov	x2, x26
  4556a0:	strb	w0, [x19, #264]
  4556a4:	mov	w1, w22
  4556a8:	mov	x0, x19
  4556ac:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1b5a0>
  4556b0:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  4556b4:	add	x20, x20, #0x768
  4556b8:	mov	w1, w22
  4556bc:	mov	x2, x23
  4556c0:	mov	x0, x19
  4556c4:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  4556c8:	add	x26, x20, #0x3
  4556cc:	mov	w24, #0x2e                  	// #46
  4556d0:	ldr	x1, [x19, #256]
  4556d4:	b	4556fc <_obstack_memory_used@@Base+0xbc9c>
  4556d8:	mov	x0, x1
  4556dc:	add	x1, x1, #0x1
  4556e0:	str	x1, [x19, #256]
  4556e4:	add	x20, x20, #0x1
  4556e8:	cmp	x26, x20
  4556ec:	strb	w24, [x19, x0]
  4556f0:	strb	w24, [x19, #264]
  4556f4:	b.eq	455740 <_obstack_memory_used@@Base+0xbce0>  // b.none
  4556f8:	ldrb	w24, [x20]
  4556fc:	cmp	x1, #0xff
  455700:	b.ne	4556d8 <_obstack_memory_used@@Base+0xbc78>  // b.any
  455704:	ldp	x3, x2, [x19, #272]
  455708:	strb	wzr, [x19, #255]
  45570c:	mov	x0, x19
  455710:	add	x20, x20, #0x1
  455714:	blr	x3
  455718:	ldr	x2, [x19, #320]
  45571c:	mov	x0, #0x0                   	// #0
  455720:	mov	x1, #0x1                   	// #1
  455724:	str	x1, [x19, #256]
  455728:	add	x2, x2, x1
  45572c:	str	x2, [x19, #320]
  455730:	strb	w24, [x19, x0]
  455734:	cmp	x26, x20
  455738:	strb	w24, [x19, #264]
  45573c:	b.ne	4556f8 <_obstack_memory_used@@Base+0xbc98>  // b.any
  455740:	mov	x2, x23
  455744:	mov	w1, w22
  455748:	mov	x0, x19
  45574c:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  455750:	mov	x2, x25
  455754:	mov	w1, w22
  455758:	mov	x0, x19
  45575c:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  455760:	ldr	x1, [x19, #256]
  455764:	add	x0, x1, #0x1
  455768:	cmp	x1, #0xff
  45576c:	b.ne	455794 <_obstack_memory_used@@Base+0xbd34>  // b.any
  455770:	ldp	x3, x2, [x19, #272]
  455774:	strb	wzr, [x19, #255]
  455778:	mov	x0, x19
  45577c:	blr	x3
  455780:	ldr	x2, [x19, #320]
  455784:	mov	x0, #0x1                   	// #1
  455788:	mov	x1, #0x0                   	// #0
  45578c:	add	x2, x2, x0
  455790:	str	x2, [x19, #320]
  455794:	str	x0, [x19, #256]
  455798:	mov	w0, #0x29                  	// #41
  45579c:	strb	w0, [x19, x1]
  4557a0:	strb	w0, [x19, #264]
  4557a4:	ldp	x23, x24, [sp, #48]
  4557a8:	mov	w0, #0x1                   	// #1
  4557ac:	ldp	x25, x26, [sp, #64]
  4557b0:	str	w21, [x19, #316]
  4557b4:	ldp	x19, x20, [sp, #16]
  4557b8:	ldp	x21, x22, [sp, #32]
  4557bc:	ldp	x29, x30, [sp], #80
  4557c0:	ret
  4557c4:	mov	w0, #0x0                   	// #0
  4557c8:	ldp	x19, x20, [sp, #16]
  4557cc:	ldp	x21, x22, [sp, #32]
  4557d0:	ldp	x29, x30, [sp], #80
  4557d4:	ret
  4557d8:	cmp	w0, #0x72
  4557dc:	b.ne	4557a4 <_obstack_memory_used@@Base+0xbd44>  // b.any
  4557e0:	ldr	x1, [x19, #256]
  4557e4:	add	x0, x1, #0x1
  4557e8:	cmp	x1, #0xff
  4557ec:	b.eq	455944 <_obstack_memory_used@@Base+0xbee4>  // b.none
  4557f0:	str	x0, [x19, #256]
  4557f4:	mov	w0, #0x28                  	// #40
  4557f8:	strb	w0, [x19, x1]
  4557fc:	mov	x2, x26
  455800:	strb	w0, [x19, #264]
  455804:	mov	w1, w22
  455808:	mov	x0, x19
  45580c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  455810:	bl	455510 <_obstack_memory_used@@Base+0xbab0>
  455814:	add	x20, x20, #0x688
  455818:	mov	w1, w22
  45581c:	mov	x2, x23
  455820:	mov	x0, x19
  455824:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  455828:	add	x22, x20, #0x4
  45582c:	mov	w24, #0x2e                  	// #46
  455830:	ldr	x1, [x19, #256]
  455834:	b	45585c <_obstack_memory_used@@Base+0xbdfc>
  455838:	mov	x0, x1
  45583c:	add	x1, x1, #0x1
  455840:	str	x1, [x19, #256]
  455844:	add	x20, x20, #0x1
  455848:	strb	w24, [x19, x0]
  45584c:	cmp	x20, x22
  455850:	strb	w24, [x19, #264]
  455854:	b.eq	4557a4 <_obstack_memory_used@@Base+0xbd44>  // b.none
  455858:	ldrb	w24, [x20]
  45585c:	cmp	x1, #0xff
  455860:	b.ne	455838 <_obstack_memory_used@@Base+0xbdd8>  // b.any
  455864:	ldp	x3, x2, [x19, #272]
  455868:	strb	wzr, [x19, #255]
  45586c:	mov	x0, x19
  455870:	blr	x3
  455874:	ldr	x2, [x19, #320]
  455878:	mov	x1, #0x1                   	// #1
  45587c:	mov	x0, #0x0                   	// #0
  455880:	add	x2, x2, x1
  455884:	str	x2, [x19, #320]
  455888:	b	455840 <_obstack_memory_used@@Base+0xbde0>
  45588c:	ldr	w21, [x19, #316]
  455890:	mov	w1, #0xffffffff            	// #-1
  455894:	ldr	x25, [x26, #16]
  455898:	ldr	x26, [x26, #8]
  45589c:	str	w1, [x19, #316]
  4558a0:	ldrb	w0, [x0, #1]
  4558a4:	cmp	w0, #0x6c
  4558a8:	b.ne	45566c <_obstack_memory_used@@Base+0xbc0c>  // b.any
  4558ac:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4558b0:	add	x20, x20, #0x680
  4558b4:	add	x25, x20, #0x4
  4558b8:	mov	w24, #0x28                  	// #40
  4558bc:	ldr	x1, [x19, #256]
  4558c0:	b	4558e8 <_obstack_memory_used@@Base+0xbe88>
  4558c4:	mov	x0, x1
  4558c8:	add	x1, x1, #0x1
  4558cc:	str	x1, [x19, #256]
  4558d0:	add	x20, x20, #0x1
  4558d4:	cmp	x25, x20
  4558d8:	strb	w24, [x19, x0]
  4558dc:	strb	w24, [x19, #264]
  4558e0:	b.eq	45592c <_obstack_memory_used@@Base+0xbecc>  // b.none
  4558e4:	ldrb	w24, [x20]
  4558e8:	cmp	x1, #0xff
  4558ec:	b.ne	4558c4 <_obstack_memory_used@@Base+0xbe64>  // b.any
  4558f0:	ldp	x3, x2, [x19, #272]
  4558f4:	strb	wzr, [x19, #255]
  4558f8:	mov	x0, x19
  4558fc:	add	x20, x20, #0x1
  455900:	blr	x3
  455904:	ldr	x2, [x19, #320]
  455908:	mov	x0, #0x0                   	// #0
  45590c:	mov	x1, #0x1                   	// #1
  455910:	str	x1, [x19, #256]
  455914:	add	x2, x2, x1
  455918:	str	x2, [x19, #320]
  45591c:	strb	w24, [x19, x0]
  455920:	cmp	x25, x20
  455924:	strb	w24, [x19, #264]
  455928:	b.ne	4558e4 <_obstack_memory_used@@Base+0xbe84>  // b.any
  45592c:	mov	x2, x23
  455930:	mov	w1, w22
  455934:	mov	x0, x19
  455938:	bl	455458 <_obstack_memory_used@@Base+0xb9f8>
  45593c:	mov	x2, x26
  455940:	b	455754 <_obstack_memory_used@@Base+0xbcf4>
  455944:	ldp	x3, x2, [x19, #272]
  455948:	strb	wzr, [x19, #255]
  45594c:	mov	x0, x19
  455950:	blr	x3
  455954:	ldr	x2, [x19, #320]
  455958:	mov	x0, #0x1                   	// #1
  45595c:	mov	x1, #0x0                   	// #0
  455960:	add	x2, x2, x0
  455964:	str	x2, [x19, #320]
  455968:	b	4557f0 <_obstack_memory_used@@Base+0xbd90>
  45596c:	ldp	x3, x2, [x19, #272]
  455970:	strb	wzr, [x19, #255]
  455974:	mov	x0, x19
  455978:	blr	x3
  45597c:	ldr	x2, [x19, #320]
  455980:	mov	x0, #0x1                   	// #1
  455984:	mov	x1, #0x0                   	// #0
  455988:	add	x2, x2, x0
  45598c:	str	x2, [x19, #320]
  455990:	b	455690 <_obstack_memory_used@@Base+0xbc30>
  455994:	nop
  455998:	sub	sp, sp, #0x230
  45599c:	stp	x29, x30, [sp]
  4559a0:	mov	x29, sp
  4559a4:	stp	x19, x20, [sp, #16]
  4559a8:	mov	x19, x0
  4559ac:	mov	x20, x1
  4559b0:	stp	x21, x22, [sp, #32]
  4559b4:	mov	x21, x2
  4559b8:	stp	x23, x24, [sp, #48]
  4559bc:	stp	x25, x26, [sp, #64]
  4559c0:	str	x27, [sp, #80]
  4559c4:	ldrb	w24, [x0]
  4559c8:	cmp	w24, #0x5f
  4559cc:	b.eq	455b78 <_obstack_memory_used@@Base+0xc118>  // b.none
  4559d0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1f5a0>
  4559d4:	mov	x0, x19
  4559d8:	add	x1, x1, #0x6c0
  4559dc:	mov	x2, #0x8                   	// #8
  4559e0:	mov	w23, #0x0                   	// #0
  4559e4:	bl	4026a0 <strncmp@plt>
  4559e8:	cbnz	w0, 455a38 <_obstack_memory_used@@Base+0xbfd8>
  4559ec:	ldrb	w0, [x19, #8]
  4559f0:	mov	w2, #0x5f                  	// #95
  4559f4:	mov	w1, #0x24                  	// #36
  4559f8:	cmp	w0, #0x2e
  4559fc:	ccmp	w0, w2, #0x4, ne  // ne = any
  455a00:	ccmp	w0, w1, #0x4, ne  // ne = any
  455a04:	b.ne	455a38 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  455a08:	ldrb	w0, [x19, #9]
  455a0c:	mov	w1, #0x49                  	// #73
  455a10:	cmp	w0, #0x44
  455a14:	ccmp	w0, w1, #0x4, ne  // ne = any
  455a18:	b.ne	455a38 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  455a1c:	ldrb	w1, [x19, #10]
  455a20:	cmp	w1, w2
  455a24:	b.ne	455a38 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  455a28:	cmp	w0, #0x49
  455a2c:	cset	w23, ne  // ne = any
  455a30:	add	w23, w23, #0x2
  455a34:	nop
  455a38:	mov	x0, x19
  455a3c:	bl	4024f0 <strlen@plt>
  455a40:	mov	x3, x0
  455a44:	mov	w1, #0x11                  	// #17
  455a48:	add	x0, x19, x0
  455a4c:	stp	x19, x0, [x29, #96]
  455a50:	lsl	w4, w3, #1
  455a54:	str	w1, [x29, #112]
  455a58:	cmp	w4, #0x800
  455a5c:	str	x19, [x29, #120]
  455a60:	mov	w0, #0x0                   	// #0
  455a64:	stp	wzr, w4, [x29, #136]
  455a68:	stp	wzr, w3, [x29, #152]
  455a6c:	stp	xzr, xzr, [x29, #160]
  455a70:	str	xzr, [x29, #176]
  455a74:	b.hi	455b54 <_obstack_memory_used@@Base+0xc0f4>  // b.pmore
  455a78:	mov	x22, sp
  455a7c:	mov	w27, #0x18                  	// #24
  455a80:	sbfiz	x3, x3, #3, #32
  455a84:	cmp	w23, #0x1
  455a88:	add	x3, x3, #0xf
  455a8c:	smsubl	x0, w4, w27, x22
  455a90:	and	x3, x3, #0xfffffffffffffff0
  455a94:	mov	sp, x0
  455a98:	mov	x25, sp
  455a9c:	sub	sp, sp, x3
  455aa0:	mov	x0, sp
  455aa4:	str	x25, [x29, #128]
  455aa8:	str	x0, [x29, #144]
  455aac:	b.eq	455bb8 <_obstack_memory_used@@Base+0xc158>  // b.none
  455ab0:	sub	w0, w23, #0x2
  455ab4:	cmp	w0, #0x1
  455ab8:	b.hi	455bfc <_obstack_memory_used@@Base+0xc19c>  // b.pmore
  455abc:	cmp	w23, #0x2
  455ac0:	ldrb	w0, [x19, #11]
  455ac4:	add	x24, x19, #0xb
  455ac8:	str	x24, [x29, #120]
  455acc:	cset	w1, ne  // ne = any
  455ad0:	cmp	w0, #0x5f
  455ad4:	add	w23, w1, #0x44
  455ad8:	b.eq	455b8c <_obstack_memory_used@@Base+0xc12c>  // b.none
  455adc:	cmp	w4, #0x0
  455ae0:	b.le	455ce0 <_obstack_memory_used@@Base+0xc280>
  455ae4:	mov	x0, x24
  455ae8:	bl	4024f0 <strlen@plt>
  455aec:	mov	w1, #0x1                   	// #1
  455af0:	str	wzr, [x25, #4]
  455af4:	str	w1, [x29, #136]
  455af8:	cmp	w0, #0x0
  455afc:	b.le	455ce0 <_obstack_memory_used@@Base+0xc280>
  455b00:	add	x26, x29, #0x60
  455b04:	str	wzr, [x25]
  455b08:	str	x24, [x25, #8]
  455b0c:	str	w0, [x25, #16]
  455b10:	mov	w1, w23
  455b14:	mov	x2, x25
  455b18:	mov	x3, #0x0                   	// #0
  455b1c:	mov	x0, x26
  455b20:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  455b24:	mov	x19, x0
  455b28:	ldr	x23, [x29, #120]
  455b2c:	mov	x0, x23
  455b30:	bl	4024f0 <strlen@plt>
  455b34:	add	x1, x23, x0
  455b38:	str	x1, [x29, #120]
  455b3c:	ldrb	w0, [x23, x0]
  455b40:	cmp	w0, #0x0
  455b44:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  455b48:	b.ne	455c1c <_obstack_memory_used@@Base+0xc1bc>  // b.any
  455b4c:	mov	sp, x22
  455b50:	mov	w0, #0x0                   	// #0
  455b54:	mov	sp, x29
  455b58:	ldp	x29, x30, [sp]
  455b5c:	ldp	x19, x20, [sp, #16]
  455b60:	ldp	x21, x22, [sp, #32]
  455b64:	ldp	x23, x24, [sp, #48]
  455b68:	ldp	x25, x26, [sp, #64]
  455b6c:	ldr	x27, [sp, #80]
  455b70:	add	sp, sp, #0x230
  455b74:	ret
  455b78:	ldrb	w0, [x0, #1]
  455b7c:	mov	w23, #0x1                   	// #1
  455b80:	cmp	w0, #0x5a
  455b84:	b.ne	4559d0 <_obstack_memory_used@@Base+0xbf70>  // b.any
  455b88:	b	455a38 <_obstack_memory_used@@Base+0xbfd8>
  455b8c:	ldrb	w0, [x19, #12]
  455b90:	cmp	w0, #0x5a
  455b94:	b.ne	455adc <_obstack_memory_used@@Base+0xc07c>  // b.any
  455b98:	add	x26, x29, #0x60
  455b9c:	add	x19, x19, #0xd
  455ba0:	mov	x0, x26
  455ba4:	mov	w1, #0x0                   	// #0
  455ba8:	str	x19, [x29, #120]
  455bac:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  455bb0:	mov	x25, x0
  455bb4:	b	455b10 <_obstack_memory_used@@Base+0xc0b0>
  455bb8:	cmp	w24, #0x5f
  455bbc:	b.ne	455b4c <_obstack_memory_used@@Base+0xc0ec>  // b.any
  455bc0:	ldrb	w0, [x19, #1]
  455bc4:	cmp	w0, #0x5a
  455bc8:	b.ne	455b4c <_obstack_memory_used@@Base+0xc0ec>  // b.any
  455bcc:	add	x26, x29, #0x60
  455bd0:	add	x19, x19, #0x2
  455bd4:	mov	w1, w23
  455bd8:	mov	x0, x26
  455bdc:	str	x19, [x29, #120]
  455be0:	bl	44de30 <_obstack_memory_used@@Base+0x43d0>
  455be4:	ldr	w3, [x29, #112]
  455be8:	mov	x19, x0
  455bec:	tbnz	w3, #0, 455cec <_obstack_memory_used@@Base+0xc28c>
  455bf0:	ldr	x0, [x29, #120]
  455bf4:	ldrb	w0, [x0]
  455bf8:	b	455b40 <_obstack_memory_used@@Base+0xc0e0>
  455bfc:	add	x0, x29, #0x60
  455c00:	bl	44eb78 <_obstack_memory_used@@Base+0x5118>
  455c04:	ldr	x3, [x29, #120]
  455c08:	mov	x19, x0
  455c0c:	ldrb	w0, [x3]
  455c10:	cmp	w0, #0x0
  455c14:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  455c18:	b.eq	455b4c <_obstack_memory_used@@Base+0xc0ec>  // b.none
  455c1c:	add	x2, x29, #0x208
  455c20:	add	x23, x29, #0xb8
  455c24:	mov	x0, x23
  455c28:	mov	x1, x19
  455c2c:	str	xzr, [x29, #440]
  455c30:	stp	xzr, xzr, [x2]
  455c34:	stp	xzr, xzr, [x2, #16]
  455c38:	strb	wzr, [x29, #448]
  455c3c:	stp	x20, x21, [x29, #456]
  455c40:	stp	xzr, xzr, [x29, #472]
  455c44:	stp	xzr, xzr, [x29, #488]
  455c48:	stp	xzr, xzr, [x29, #504]
  455c4c:	bl	44c148 <_obstack_memory_used@@Base+0x26e8>
  455c50:	ldr	w0, [x29, #492]
  455c54:	cmp	w0, #0x7ff
  455c58:	b.gt	455c60 <_obstack_memory_used@@Base+0xc200>
  455c5c:	str	wzr, [x29, #492]
  455c60:	ldr	w3, [x29, #532]
  455c64:	mov	w4, #0x1                   	// #1
  455c68:	ldr	w6, [x29, #548]
  455c6c:	mov	x20, sp
  455c70:	cmp	w3, #0x0
  455c74:	mov	x2, x19
  455c78:	csel	w5, w3, w4, gt
  455c7c:	mov	x0, x23
  455c80:	mov	w1, #0x11                  	// #17
  455c84:	str	xzr, [x29, #552]
  455c88:	mul	w3, w3, w6
  455c8c:	sub	sp, sp, w5, sxtw #4
  455c90:	str	w3, [x29, #548]
  455c94:	mov	x5, sp
  455c98:	cmp	w3, #0x0
  455c9c:	str	x5, [x29, #520]
  455ca0:	csel	w3, w3, w4, gt
  455ca4:	sub	sp, sp, w3, sxtw #4
  455ca8:	mov	x3, sp
  455cac:	str	x3, [x29, #536]
  455cb0:	bl	4542b8 <_obstack_memory_used@@Base+0xa858>
  455cb4:	mov	sp, x20
  455cb8:	ldr	x1, [x29, #440]
  455cbc:	mov	x0, x23
  455cc0:	ldp	x3, x2, [x29, #456]
  455cc4:	strb	wzr, [x23, x1]
  455cc8:	blr	x3
  455ccc:	ldr	w0, [x29, #488]
  455cd0:	mov	sp, x22
  455cd4:	cmp	w0, #0x0
  455cd8:	cset	w0, eq  // eq = none
  455cdc:	b	455b54 <_obstack_memory_used@@Base+0xc0f4>
  455ce0:	add	x26, x29, #0x60
  455ce4:	mov	x25, #0x0                   	// #0
  455ce8:	b	455b10 <_obstack_memory_used@@Base+0xc0b0>
  455cec:	ldr	x6, [x29, #120]
  455cf0:	ldrb	w0, [x6]
  455cf4:	cmp	w0, #0x2e
  455cf8:	b.ne	455b40 <_obstack_memory_used@@Base+0xc0e0>  // b.any
  455cfc:	nop
  455d00:	ldrb	w0, [x6, #1]
  455d04:	sub	w1, w0, #0x61
  455d08:	cmp	w0, #0x5f
  455d0c:	and	w1, w1, #0xff
  455d10:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  455d14:	b.ls	455df4 <_obstack_memory_used@@Base+0xc394>  // b.plast
  455d18:	sub	w0, w0, #0x30
  455d1c:	and	w0, w0, #0xff
  455d20:	cmp	w0, #0x9
  455d24:	ldrb	w0, [x6]
  455d28:	b.hi	455b40 <_obstack_memory_used@@Base+0xc0e0>  // b.pmore
  455d2c:	mov	x3, x6
  455d30:	cmp	w0, #0x2e
  455d34:	b.ne	455d84 <_obstack_memory_used@@Base+0xc324>  // b.any
  455d38:	ldrb	w4, [x3, #1]
  455d3c:	sub	w4, w4, #0x30
  455d40:	and	w4, w4, #0xff
  455d44:	cmp	w4, #0x9
  455d48:	b.hi	455d84 <_obstack_memory_used@@Base+0xc324>  // b.pmore
  455d4c:	ldrb	w4, [x3, #2]
  455d50:	add	x3, x3, #0x2
  455d54:	sub	w5, w4, #0x30
  455d58:	and	w5, w5, #0xff
  455d5c:	cmp	w5, #0x9
  455d60:	b.hi	455d7c <_obstack_memory_used@@Base+0xc31c>  // b.pmore
  455d64:	nop
  455d68:	ldrb	w4, [x3, #1]!
  455d6c:	sub	w5, w4, #0x30
  455d70:	and	w5, w5, #0xff
  455d74:	cmp	w5, #0x9
  455d78:	b.ls	455d68 <_obstack_memory_used@@Base+0xc308>  // b.plast
  455d7c:	cmp	w4, #0x2e
  455d80:	b.eq	455d38 <_obstack_memory_used@@Base+0xc2d8>  // b.none
  455d84:	ldp	w0, w1, [x29, #136]
  455d88:	str	x3, [x29, #120]
  455d8c:	sub	x4, x3, x6
  455d90:	cmp	w0, w1
  455d94:	b.ge	455dec <_obstack_memory_used@@Base+0xc38c>  // b.tcont
  455d98:	ldr	x2, [x29, #128]
  455d9c:	smull	x1, w0, w27
  455da0:	add	w0, w0, #0x1
  455da4:	cmp	w4, #0x0
  455da8:	add	x3, x2, x1
  455dac:	str	wzr, [x3, #4]
  455db0:	str	w0, [x29, #136]
  455db4:	b.le	455dec <_obstack_memory_used@@Base+0xc38c>
  455db8:	str	xzr, [x2, x1]
  455dbc:	str	x6, [x3, #8]
  455dc0:	str	w4, [x3, #16]
  455dc4:	mov	x2, x19
  455dc8:	mov	x0, x26
  455dcc:	mov	w1, #0x4e                  	// #78
  455dd0:	bl	44c058 <_obstack_memory_used@@Base+0x25f8>
  455dd4:	ldr	x6, [x29, #120]
  455dd8:	mov	x19, x0
  455ddc:	ldrb	w0, [x6]
  455de0:	cmp	w0, #0x2e
  455de4:	b.eq	455d00 <_obstack_memory_used@@Base+0xc2a0>  // b.none
  455de8:	b	455b40 <_obstack_memory_used@@Base+0xc0e0>
  455dec:	mov	x3, #0x0                   	// #0
  455df0:	b	455dc4 <_obstack_memory_used@@Base+0xc364>
  455df4:	ldrb	w0, [x6, #2]
  455df8:	add	x3, x6, #0x2
  455dfc:	b	455e04 <_obstack_memory_used@@Base+0xc3a4>
  455e00:	ldrb	w0, [x3, #1]!
  455e04:	sub	w1, w0, #0x61
  455e08:	cmp	w0, #0x5f
  455e0c:	and	w1, w1, #0xff
  455e10:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  455e14:	b.ls	455e00 <_obstack_memory_used@@Base+0xc3a0>  // b.plast
  455e18:	b	455d30 <_obstack_memory_used@@Base+0xc2d0>
  455e1c:	nop
  455e20:	stp	x29, x30, [sp, #-96]!
  455e24:	mov	x29, sp
  455e28:	stp	x21, x22, [sp, #32]
  455e2c:	mov	x21, x3
  455e30:	cbz	x0, 455f00 <_obstack_memory_used@@Base+0xc4a0>
  455e34:	stp	x19, x20, [sp, #16]
  455e38:	cmp	x1, #0x0
  455e3c:	mov	x19, x1
  455e40:	mov	x20, x2
  455e44:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  455e48:	b.eq	455efc <_obstack_memory_used@@Base+0xc49c>  // b.none
  455e4c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x25a0>
  455e50:	add	x2, sp, #0x40
  455e54:	add	x1, x1, #0xc60
  455e58:	stp	xzr, xzr, [sp, #64]
  455e5c:	str	xzr, [sp, #80]
  455e60:	str	wzr, [sp, #88]
  455e64:	bl	455998 <_obstack_memory_used@@Base+0xbf38>
  455e68:	cbz	w0, 455f54 <_obstack_memory_used@@Base+0xc4f4>
  455e6c:	ldr	w0, [sp, #88]
  455e70:	str	x23, [sp, #48]
  455e74:	ldr	x22, [sp, #64]
  455e78:	cbnz	w0, 455ed8 <_obstack_memory_used@@Base+0xc478>
  455e7c:	ldr	x23, [sp, #80]
  455e80:	cbz	x22, 455f78 <_obstack_memory_used@@Base+0xc518>
  455e84:	cbz	x19, 455f48 <_obstack_memory_used@@Base+0xc4e8>
  455e88:	mov	x0, x22
  455e8c:	bl	4024f0 <strlen@plt>
  455e90:	ldr	x1, [x20]
  455e94:	cmp	x0, x1
  455e98:	b.cs	455f20 <_obstack_memory_used@@Base+0xc4c0>  // b.hs, b.nlast
  455e9c:	add	x2, x0, #0x1
  455ea0:	mov	x1, x22
  455ea4:	mov	x0, x19
  455ea8:	bl	402490 <memcpy@plt>
  455eac:	mov	x0, x22
  455eb0:	mov	x22, x19
  455eb4:	bl	402910 <free@plt>
  455eb8:	cbz	x21, 455f30 <_obstack_memory_used@@Base+0xc4d0>
  455ebc:	ldp	x19, x20, [sp, #16]
  455ec0:	ldr	x23, [sp, #48]
  455ec4:	str	wzr, [x21]
  455ec8:	mov	x0, x22
  455ecc:	ldp	x21, x22, [sp, #32]
  455ed0:	ldp	x29, x30, [sp], #96
  455ed4:	ret
  455ed8:	mov	x23, #0x1                   	// #1
  455edc:	cbnz	x22, 455e84 <_obstack_memory_used@@Base+0xc424>
  455ee0:	cbz	x21, 455f9c <_obstack_memory_used@@Base+0xc53c>
  455ee4:	mov	w0, #0xffffffff            	// #-1
  455ee8:	mov	x22, #0x0                   	// #0
  455eec:	ldp	x19, x20, [sp, #16]
  455ef0:	ldr	x23, [sp, #48]
  455ef4:	str	w0, [x21]
  455ef8:	b	455ec8 <_obstack_memory_used@@Base+0xc468>
  455efc:	ldp	x19, x20, [sp, #16]
  455f00:	cbz	x21, 455f64 <_obstack_memory_used@@Base+0xc504>
  455f04:	mov	w0, #0xfffffffd            	// #-3
  455f08:	str	w0, [x21]
  455f0c:	mov	x22, #0x0                   	// #0
  455f10:	mov	x0, x22
  455f14:	ldp	x21, x22, [sp, #32]
  455f18:	ldp	x29, x30, [sp], #96
  455f1c:	ret
  455f20:	mov	x0, x19
  455f24:	bl	402910 <free@plt>
  455f28:	str	x23, [x20]
  455f2c:	cbnz	x21, 455ebc <_obstack_memory_used@@Base+0xc45c>
  455f30:	mov	x0, x22
  455f34:	ldp	x19, x20, [sp, #16]
  455f38:	ldp	x21, x22, [sp, #32]
  455f3c:	ldr	x23, [sp, #48]
  455f40:	ldp	x29, x30, [sp], #96
  455f44:	ret
  455f48:	cbz	x20, 455eb8 <_obstack_memory_used@@Base+0xc458>
  455f4c:	str	x23, [x20]
  455f50:	b	455f2c <_obstack_memory_used@@Base+0xc4cc>
  455f54:	ldr	x0, [sp, #64]
  455f58:	bl	402910 <free@plt>
  455f5c:	cbnz	x21, 455f88 <_obstack_memory_used@@Base+0xc528>
  455f60:	ldp	x19, x20, [sp, #16]
  455f64:	mov	x22, #0x0                   	// #0
  455f68:	mov	x0, x22
  455f6c:	ldp	x21, x22, [sp, #32]
  455f70:	ldp	x29, x30, [sp], #96
  455f74:	ret
  455f78:	cbz	x21, 455f9c <_obstack_memory_used@@Base+0xc53c>
  455f7c:	cmp	x23, #0x1
  455f80:	b.eq	455ee4 <_obstack_memory_used@@Base+0xc484>  // b.none
  455f84:	ldr	x23, [sp, #48]
  455f88:	mov	w0, #0xfffffffe            	// #-2
  455f8c:	mov	x22, #0x0                   	// #0
  455f90:	ldp	x19, x20, [sp, #16]
  455f94:	str	w0, [x21]
  455f98:	b	455ec8 <_obstack_memory_used@@Base+0xc468>
  455f9c:	mov	x22, #0x0                   	// #0
  455fa0:	ldp	x19, x20, [sp, #16]
  455fa4:	ldr	x23, [sp, #48]
  455fa8:	b	455f68 <_obstack_memory_used@@Base+0xc508>
  455fac:	nop
  455fb0:	cmp	x0, #0x0
  455fb4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  455fb8:	b.eq	455fdc <_obstack_memory_used@@Base+0xc57c>  // b.none
  455fbc:	stp	x29, x30, [sp, #-16]!
  455fc0:	mov	x29, sp
  455fc4:	bl	455998 <_obstack_memory_used@@Base+0xbf38>
  455fc8:	cmp	w0, #0x0
  455fcc:	ldp	x29, x30, [sp], #16
  455fd0:	mov	w0, #0xfffffffe            	// #-2
  455fd4:	csel	w0, wzr, w0, ne  // ne = any
  455fd8:	ret
  455fdc:	mov	w0, #0xfffffffd            	// #-3
  455fe0:	ret
  455fe4:	nop
  455fe8:	stp	x29, x30, [sp, #-16]!
  455fec:	mov	x29, sp
  455ff0:	bl	44be88 <_obstack_memory_used@@Base+0x2428>
  455ff4:	ldr	x0, [x0]
  455ff8:	cbz	x0, 45600c <_obstack_memory_used@@Base+0xc5ac>
  455ffc:	ldr	x1, [x0, #80]
  456000:	ldr	x0, [x0]
  456004:	tbz	w1, #0, 45600c <_obstack_memory_used@@Base+0xc5ac>
  456008:	ldur	x0, [x0, #-112]
  45600c:	ldp	x29, x30, [sp], #16
  456010:	ret
  456014:	nop
  456018:	and	w5, w0, #0xff
  45601c:	cmp	w5, #0x50
  456020:	b.eq	456138 <_obstack_memory_used@@Base+0xc6d8>  // b.none
  456024:	and	w4, w5, #0xf
  456028:	cmp	w4, #0x4
  45602c:	b.eq	456048 <_obstack_memory_used@@Base+0xc5e8>  // b.none
  456030:	b.ls	45605c <_obstack_memory_used@@Base+0xc5fc>  // b.plast
  456034:	cmp	w4, #0xb
  456038:	b.eq	45615c <_obstack_memory_used@@Base+0xc6fc>  // b.none
  45603c:	b.ls	4560b8 <_obstack_memory_used@@Base+0xc658>  // b.plast
  456040:	cmp	w4, #0xc
  456044:	b.ne	45616c <_obstack_memory_used@@Base+0xc70c>  // b.any
  456048:	mov	x0, x2
  45604c:	ldr	x4, [x0], #8
  456050:	cbnz	x4, 456118 <_obstack_memory_used@@Base+0xc6b8>
  456054:	str	x4, [x3]
  456058:	ret
  45605c:	cmp	w4, #0x2
  456060:	b.eq	45614c <_obstack_memory_used@@Base+0xc6ec>  // b.none
  456064:	b.ls	456080 <_obstack_memory_used@@Base+0xc620>  // b.plast
  456068:	cmp	w4, #0x3
  45606c:	b.ne	45616c <_obstack_memory_used@@Base+0xc70c>  // b.any
  456070:	mov	x0, x2
  456074:	ldr	w4, [x0], #4
  456078:	cbz	x4, 456054 <_obstack_memory_used@@Base+0xc5f4>
  45607c:	b	456118 <_obstack_memory_used@@Base+0xc6b8>
  456080:	cbz	w4, 456048 <_obstack_memory_used@@Base+0xc5e8>
  456084:	cmp	w4, #0x1
  456088:	b.ne	45616c <_obstack_memory_used@@Base+0xc70c>  // b.any
  45608c:	mov	x0, x2
  456090:	mov	x4, #0x0                   	// #0
  456094:	mov	w7, #0x0                   	// #0
  456098:	ldrb	w8, [x0], #1
  45609c:	and	x6, x8, #0x7f
  4560a0:	lsl	x6, x6, x7
  4560a4:	add	w7, w7, #0x7
  4560a8:	orr	x4, x4, x6
  4560ac:	tbnz	w8, #7, 456098 <_obstack_memory_used@@Base+0xc638>
  4560b0:	cbz	x4, 456054 <_obstack_memory_used@@Base+0xc5f4>
  4560b4:	b	456118 <_obstack_memory_used@@Base+0xc6b8>
  4560b8:	cmp	w4, #0x9
  4560bc:	b.eq	4560d8 <_obstack_memory_used@@Base+0xc678>  // b.none
  4560c0:	cmp	w4, #0xa
  4560c4:	b.ne	45616c <_obstack_memory_used@@Base+0xc70c>  // b.any
  4560c8:	mov	x0, x2
  4560cc:	ldrsh	x4, [x0], #2
  4560d0:	cbz	x4, 456054 <_obstack_memory_used@@Base+0xc5f4>
  4560d4:	b	456118 <_obstack_memory_used@@Base+0xc6b8>
  4560d8:	mov	x0, x2
  4560dc:	mov	x4, #0x0                   	// #0
  4560e0:	mov	w7, #0x0                   	// #0
  4560e4:	ldrb	w8, [x0], #1
  4560e8:	and	x6, x8, #0x7f
  4560ec:	lsl	x6, x6, x7
  4560f0:	add	w7, w7, #0x7
  4560f4:	orr	x4, x4, x6
  4560f8:	tbnz	w8, #7, 4560e4 <_obstack_memory_used@@Base+0xc684>
  4560fc:	cmp	w7, #0x3f
  456100:	b.hi	456050 <_obstack_memory_used@@Base+0xc5f0>  // b.pmore
  456104:	tbz	w8, #6, 456050 <_obstack_memory_used@@Base+0xc5f0>
  456108:	mov	x6, #0xffffffffffffffff    	// #-1
  45610c:	lsl	x7, x6, x7
  456110:	orr	x4, x4, x7
  456114:	nop
  456118:	and	w6, w5, #0x70
  45611c:	cmp	w6, #0x10
  456120:	csel	x1, x2, x1, eq  // eq = none
  456124:	add	x4, x4, x1
  456128:	tbz	w5, #7, 456054 <_obstack_memory_used@@Base+0xc5f4>
  45612c:	ldr	x4, [x4]
  456130:	str	x4, [x3]
  456134:	ret
  456138:	add	x0, x2, #0x7
  45613c:	and	x0, x0, #0xfffffffffffffff8
  456140:	ldr	x4, [x0], #8
  456144:	str	x4, [x3]
  456148:	ret
  45614c:	mov	x0, x2
  456150:	ldrh	w4, [x0], #2
  456154:	cbz	x4, 456054 <_obstack_memory_used@@Base+0xc5f4>
  456158:	b	456118 <_obstack_memory_used@@Base+0xc6b8>
  45615c:	mov	x0, x2
  456160:	ldrsw	x4, [x0], #4
  456164:	cbz	x4, 456054 <_obstack_memory_used@@Base+0xc5f4>
  456168:	b	456118 <_obstack_memory_used@@Base+0xc6b8>
  45616c:	stp	x29, x30, [sp, #-16]!
  456170:	mov	x29, sp
  456174:	bl	4027f0 <abort@plt>
  456178:	and	w0, w0, #0xff
  45617c:	cmp	w0, #0xff
  456180:	b.eq	4561cc <_obstack_memory_used@@Base+0xc76c>  // b.none
  456184:	and	w2, w0, #0x70
  456188:	cmp	w2, #0x30
  45618c:	b.eq	4561e4 <_obstack_memory_used@@Base+0xc784>  // b.none
  456190:	b.hi	4561a4 <_obstack_memory_used@@Base+0xc744>  // b.pmore
  456194:	cmp	w2, #0x20
  456198:	b.ne	4561b4 <_obstack_memory_used@@Base+0xc754>  // b.any
  45619c:	ldr	x0, [x1, #808]
  4561a0:	ret
  4561a4:	cmp	w2, #0x40
  4561a8:	b.ne	4561d4 <_obstack_memory_used@@Base+0xc774>  // b.any
  4561ac:	ldr	x0, [x1, #824]
  4561b0:	ret
  4561b4:	b.hi	4561c0 <_obstack_memory_used@@Base+0xc760>  // b.pmore
  4561b8:	tst	w0, #0x60
  4561bc:	b.eq	4561cc <_obstack_memory_used@@Base+0xc76c>  // b.none
  4561c0:	stp	x29, x30, [sp, #-16]!
  4561c4:	mov	x29, sp
  4561c8:	bl	4027f0 <abort@plt>
  4561cc:	mov	x0, #0x0                   	// #0
  4561d0:	ret
  4561d4:	cmp	w2, #0x50
  4561d8:	mov	x0, #0x0                   	// #0
  4561dc:	b.ne	4561c0 <_obstack_memory_used@@Base+0xc760>  // b.any
  4561e0:	ret
  4561e4:	ldr	x0, [x1, #816]
  4561e8:	ret
  4561ec:	nop
  4561f0:	str	xzr, [x3, #1568]
  4561f4:	cmp	x0, x1
  4561f8:	b.cs	456988 <_obstack_memory_used@@Base+0xcf28>  // b.hs, b.nlast
  4561fc:	stp	x29, x30, [sp, #-112]!
  456200:	mov	x29, sp
  456204:	stp	x21, x22, [sp, #32]
  456208:	mov	x21, x2
  45620c:	mov	x22, x1
  456210:	stp	x19, x20, [sp, #16]
  456214:	mov	x20, x3
  456218:	ldr	x2, [x21, #792]
  45621c:	stp	x23, x24, [sp, #48]
  456220:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x205a0>
  456224:	ldr	x5, [x21, #832]
  456228:	stp	x25, x26, [sp, #64]
  45622c:	add	x23, x23, #0x9fc
  456230:	ldr	x1, [x20, #1608]
  456234:	stp	x27, x28, [sp, #80]
  456238:	add	x5, x2, x5, lsr #63
  45623c:	add	x27, x29, #0x68
  456240:	cmp	x1, x5
  456244:	mov	x25, #0x0                   	// #0
  456248:	mov	w24, #0x1                   	// #1
  45624c:	mov	w26, #0x5                   	// #5
  456250:	b.cs	456320 <_obstack_memory_used@@Base+0xc8c0>  // b.hs, b.nlast
  456254:	nop
  456258:	mov	x19, x0
  45625c:	ldrb	w4, [x19], #1
  456260:	and	w5, w4, #0xc0
  456264:	cmp	w5, #0x40
  456268:	b.eq	45681c <_obstack_memory_used@@Base+0xcdbc>  // b.none
  45626c:	cmp	w5, #0x80
  456270:	b.eq	456840 <_obstack_memory_used@@Base+0xcde0>  // b.none
  456274:	cmp	w5, #0xc0
  456278:	b.eq	456830 <_obstack_memory_used@@Base+0xcdd0>  // b.none
  45627c:	cmp	w4, #0x2f
  456280:	b.hi	456998 <_obstack_memory_used@@Base+0xcf38>  // b.pmore
  456284:	ldrh	w2, [x23, w4, uxtw #1]
  456288:	adr	x3, 456294 <_obstack_memory_used@@Base+0xc834>
  45628c:	add	x2, x3, w2, sxth #2
  456290:	br	x2
  456294:	mov	x1, #0x0                   	// #0
  456298:	mov	w0, #0x0                   	// #0
  45629c:	ldrb	w3, [x19], #1
  4562a0:	and	x2, x3, #0x7f
  4562a4:	lsl	x2, x2, x0
  4562a8:	add	w0, w0, #0x7
  4562ac:	orr	x1, x1, x2
  4562b0:	tbnz	w3, #7, 45629c <_obstack_memory_used@@Base+0xc83c>
  4562b4:	mov	x4, #0x0                   	// #0
  4562b8:	mov	w2, #0x0                   	// #0
  4562bc:	nop
  4562c0:	ldrb	w3, [x19], #1
  4562c4:	and	x0, x3, #0x7f
  4562c8:	lsl	x0, x0, x2
  4562cc:	add	w2, w2, #0x7
  4562d0:	orr	x4, x4, x0
  4562d4:	tbnz	w3, #7, 4562c0 <_obstack_memory_used@@Base+0xc860>
  4562d8:	ldr	x0, [x20, #1624]
  4562dc:	cmp	x1, #0x61
  4562e0:	mul	x4, x4, x0
  4562e4:	b.hi	4562fc <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  4562e8:	lsl	x1, x1, #4
  4562ec:	neg	x4, x4
  4562f0:	add	x0, x20, x1
  4562f4:	str	w24, [x0, #8]
  4562f8:	str	x4, [x20, x1]
  4562fc:	cmp	x22, x19
  456300:	b.ls	456320 <_obstack_memory_used@@Base+0xc8c0>  // b.plast
  456304:	ldr	x2, [x21, #792]
  456308:	mov	x0, x19
  45630c:	ldr	x5, [x21, #832]
  456310:	ldr	x1, [x20, #1608]
  456314:	add	x5, x2, x5, lsr #63
  456318:	cmp	x1, x5
  45631c:	b.cc	456258 <_obstack_memory_used@@Base+0xc7f8>  // b.lo, b.ul, b.last
  456320:	mov	sp, x29
  456324:	ldp	x19, x20, [sp, #16]
  456328:	ldp	x21, x22, [sp, #32]
  45632c:	ldp	x23, x24, [sp, #48]
  456330:	ldp	x25, x26, [sp, #64]
  456334:	ldp	x27, x28, [sp, #80]
  456338:	ldp	x29, x30, [sp], #112
  45633c:	ret
  456340:	mov	x1, #0x0                   	// #0
  456344:	mov	w0, #0x0                   	// #0
  456348:	ldrb	w3, [x19], #1
  45634c:	and	x2, x3, #0x7f
  456350:	lsl	x2, x2, x0
  456354:	add	w0, w0, #0x7
  456358:	orr	x1, x1, x2
  45635c:	tbnz	w3, #7, 456348 <_obstack_memory_used@@Base+0xc8e8>
  456360:	str	x1, [x21, #848]
  456364:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456368:	mov	x1, #0x0                   	// #0
  45636c:	mov	w0, #0x0                   	// #0
  456370:	ldrb	w3, [x19], #1
  456374:	and	x2, x3, #0x7f
  456378:	lsl	x2, x2, x0
  45637c:	add	w0, w0, #0x7
  456380:	orr	x1, x1, x2
  456384:	tbnz	w3, #7, 456370 <_obstack_memory_used@@Base+0xc910>
  456388:	cmp	x1, #0x61
  45638c:	b.hi	4563a0 <_obstack_memory_used@@Base+0xc940>  // b.pmore
  456390:	lsl	x1, x1, #4
  456394:	add	x0, x20, x1
  456398:	str	w26, [x0, #8]
  45639c:	str	x19, [x20, x1]
  4563a0:	mov	x3, #0x0                   	// #0
  4563a4:	mov	w1, #0x0                   	// #0
  4563a8:	ldrb	w2, [x19], #1
  4563ac:	and	x0, x2, #0x7f
  4563b0:	lsl	x0, x0, x1
  4563b4:	add	w1, w1, #0x7
  4563b8:	orr	x3, x3, x0
  4563bc:	tbnz	w2, #7, 4563a8 <_obstack_memory_used@@Base+0xc948>
  4563c0:	add	x19, x19, x3
  4563c4:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4563c8:	mov	x1, #0x0                   	// #0
  4563cc:	mov	w0, #0x0                   	// #0
  4563d0:	ldrb	w3, [x19], #1
  4563d4:	and	x2, x3, #0x7f
  4563d8:	lsl	x2, x2, x0
  4563dc:	add	w0, w0, #0x7
  4563e0:	orr	x1, x1, x2
  4563e4:	tbnz	w3, #7, 4563d0 <_obstack_memory_used@@Base+0xc970>
  4563e8:	mov	x4, #0x0                   	// #0
  4563ec:	mov	w2, #0x0                   	// #0
  4563f0:	ldrb	w3, [x19], #1
  4563f4:	and	x0, x3, #0x7f
  4563f8:	lsl	x0, x0, x2
  4563fc:	add	w2, w2, #0x7
  456400:	orr	x4, x4, x0
  456404:	tbnz	w3, #7, 4563f0 <_obstack_memory_used@@Base+0xc990>
  456408:	cmp	w2, #0x3f
  45640c:	b.hi	456424 <_obstack_memory_used@@Base+0xc9c4>  // b.pmore
  456410:	mov	x0, #0xffffffffffffffff    	// #-1
  456414:	tst	x3, #0x40
  456418:	lsl	x0, x0, x2
  45641c:	orr	x0, x4, x0
  456420:	csel	x4, x0, x4, ne  // ne = any
  456424:	ldr	x0, [x20, #1624]
  456428:	cmp	x1, #0x61
  45642c:	mul	x4, x4, x0
  456430:	b.hi	4562fc <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  456434:	lsl	x1, x1, #4
  456438:	mov	w2, #0x4                   	// #4
  45643c:	add	x0, x20, x1
  456440:	str	w2, [x0, #8]
  456444:	str	x4, [x20, x1]
  456448:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  45644c:	mov	x1, #0x0                   	// #0
  456450:	mov	w0, #0x0                   	// #0
  456454:	ldrb	w3, [x19], #1
  456458:	and	x2, x3, #0x7f
  45645c:	lsl	x2, x2, x0
  456460:	add	w0, w0, #0x7
  456464:	orr	x1, x1, x2
  456468:	tbnz	w3, #7, 456454 <_obstack_memory_used@@Base+0xc9f4>
  45646c:	mov	x4, #0x0                   	// #0
  456470:	mov	w2, #0x0                   	// #0
  456474:	nop
  456478:	ldrb	w3, [x19], #1
  45647c:	and	x0, x3, #0x7f
  456480:	lsl	x0, x0, x2
  456484:	add	w2, w2, #0x7
  456488:	orr	x4, x4, x0
  45648c:	tbnz	w3, #7, 456478 <_obstack_memory_used@@Base+0xca18>
  456490:	b	456424 <_obstack_memory_used@@Base+0xc9c4>
  456494:	mov	x1, #0x0                   	// #0
  456498:	mov	w0, #0x0                   	// #0
  45649c:	ldrb	w3, [x19], #1
  4564a0:	and	x2, x3, #0x7f
  4564a4:	lsl	x2, x2, x0
  4564a8:	add	w0, w0, #0x7
  4564ac:	orr	x1, x1, x2
  4564b0:	tbnz	w3, #7, 45649c <_obstack_memory_used@@Base+0xca3c>
  4564b4:	cmp	w0, #0x3f
  4564b8:	b.hi	4564d0 <_obstack_memory_used@@Base+0xca70>  // b.pmore
  4564bc:	mov	x2, #0xffffffffffffffff    	// #-1
  4564c0:	tst	x3, #0x40
  4564c4:	lsl	x0, x2, x0
  4564c8:	orr	x0, x1, x0
  4564cc:	csel	x1, x0, x1, ne  // ne = any
  4564d0:	ldr	x0, [x20, #1624]
  4564d4:	mul	x1, x0, x1
  4564d8:	str	x1, [x20, #1576]
  4564dc:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4564e0:	mov	x1, #0x0                   	// #0
  4564e4:	mov	w0, #0x0                   	// #0
  4564e8:	ldrb	w3, [x19], #1
  4564ec:	and	x2, x3, #0x7f
  4564f0:	lsl	x2, x2, x0
  4564f4:	add	w0, w0, #0x7
  4564f8:	orr	x1, x1, x2
  4564fc:	tbnz	w3, #7, 4564e8 <_obstack_memory_used@@Base+0xca88>
  456500:	mov	x3, #0x0                   	// #0
  456504:	mov	w2, #0x0                   	// #0
  456508:	str	x1, [x20, #1584]
  45650c:	nop
  456510:	ldrb	w1, [x19], #1
  456514:	and	x0, x1, #0x7f
  456518:	lsl	x0, x0, x2
  45651c:	add	w2, w2, #0x7
  456520:	orr	x3, x3, x0
  456524:	tbnz	w1, #7, 456510 <_obstack_memory_used@@Base+0xcab0>
  456528:	cmp	w2, #0x3f
  45652c:	b.hi	456544 <_obstack_memory_used@@Base+0xcae4>  // b.pmore
  456530:	mov	x0, #0xffffffffffffffff    	// #-1
  456534:	tst	x1, #0x40
  456538:	lsl	x0, x0, x2
  45653c:	orr	x0, x3, x0
  456540:	csel	x3, x0, x3, ne  // ne = any
  456544:	ldr	x0, [x20, #1624]
  456548:	str	w24, [x20, #1600]
  45654c:	mul	x3, x0, x3
  456550:	str	x3, [x20, #1576]
  456554:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456558:	mov	x1, #0x0                   	// #0
  45655c:	mov	w0, #0x0                   	// #0
  456560:	ldrb	w3, [x19], #1
  456564:	and	x2, x3, #0x7f
  456568:	lsl	x2, x2, x0
  45656c:	add	w0, w0, #0x7
  456570:	orr	x1, x1, x2
  456574:	tbnz	w3, #7, 456560 <_obstack_memory_used@@Base+0xcb00>
  456578:	mov	x4, #0x0                   	// #0
  45657c:	mov	w2, #0x0                   	// #0
  456580:	ldrb	w3, [x19], #1
  456584:	and	x0, x3, #0x7f
  456588:	lsl	x0, x0, x2
  45658c:	add	w2, w2, #0x7
  456590:	orr	x4, x4, x0
  456594:	tbnz	w3, #7, 456580 <_obstack_memory_used@@Base+0xcb20>
  456598:	cmp	w2, #0x3f
  45659c:	b.hi	4565b4 <_obstack_memory_used@@Base+0xcb54>  // b.pmore
  4565a0:	mov	x0, #0xffffffffffffffff    	// #-1
  4565a4:	tst	x3, #0x40
  4565a8:	lsl	x0, x0, x2
  4565ac:	orr	x0, x4, x0
  4565b0:	csel	x4, x0, x4, ne  // ne = any
  4565b4:	ldr	x0, [x20, #1624]
  4565b8:	cmp	x1, #0x61
  4565bc:	mul	x4, x4, x0
  4565c0:	b.hi	4562fc <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  4565c4:	lsl	x1, x1, #4
  4565c8:	add	x0, x20, x1
  4565cc:	str	w24, [x0, #8]
  4565d0:	str	x4, [x20, x1]
  4565d4:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4565d8:	mov	x1, #0x0                   	// #0
  4565dc:	mov	w0, #0x0                   	// #0
  4565e0:	ldrb	w3, [x19], #1
  4565e4:	and	x2, x3, #0x7f
  4565e8:	lsl	x2, x2, x0
  4565ec:	add	w0, w0, #0x7
  4565f0:	orr	x1, x1, x2
  4565f4:	tbnz	w3, #7, 4565e0 <_obstack_memory_used@@Base+0xcb80>
  4565f8:	cmp	x1, #0x61
  4565fc:	b.hi	456614 <_obstack_memory_used@@Base+0xcbb4>  // b.pmore
  456600:	lsl	x1, x1, #4
  456604:	mov	w2, #0x3                   	// #3
  456608:	add	x0, x20, x1
  45660c:	str	w2, [x0, #8]
  456610:	str	x19, [x20, x1]
  456614:	mov	x3, #0x0                   	// #0
  456618:	mov	w1, #0x0                   	// #0
  45661c:	nop
  456620:	ldrb	w2, [x19], #1
  456624:	and	x0, x2, #0x7f
  456628:	lsl	x0, x0, x1
  45662c:	add	w1, w1, #0x7
  456630:	orr	x3, x3, x0
  456634:	tbnz	w2, #7, 456620 <_obstack_memory_used@@Base+0xcbc0>
  456638:	add	x19, x19, x3
  45663c:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456640:	mov	x1, #0x0                   	// #0
  456644:	mov	w0, #0x0                   	// #0
  456648:	ldrb	w3, [x19], #1
  45664c:	and	x2, x3, #0x7f
  456650:	lsl	x2, x2, x0
  456654:	add	w0, w0, #0x7
  456658:	orr	x1, x1, x2
  45665c:	tbnz	w3, #7, 456648 <_obstack_memory_used@@Base+0xcbe8>
  456660:	str	x1, [x20, #1576]
  456664:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456668:	mov	x1, #0x0                   	// #0
  45666c:	mov	w0, #0x0                   	// #0
  456670:	ldrb	w3, [x19], #1
  456674:	and	x2, x3, #0x7f
  456678:	lsl	x2, x2, x0
  45667c:	add	w0, w0, #0x7
  456680:	orr	x1, x1, x2
  456684:	tbnz	w3, #7, 456670 <_obstack_memory_used@@Base+0xcc10>
  456688:	str	x1, [x20, #1584]
  45668c:	str	w24, [x20, #1600]
  456690:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456694:	mov	x1, #0x0                   	// #0
  456698:	mov	w0, #0x0                   	// #0
  45669c:	ldrb	w3, [x19], #1
  4566a0:	and	x2, x3, #0x7f
  4566a4:	lsl	x2, x2, x0
  4566a8:	add	w0, w0, #0x7
  4566ac:	orr	x1, x1, x2
  4566b0:	tbnz	w3, #7, 45669c <_obstack_memory_used@@Base+0xcc3c>
  4566b4:	mov	x3, #0x0                   	// #0
  4566b8:	mov	w2, #0x0                   	// #0
  4566bc:	str	x1, [x20, #1584]
  4566c0:	ldrb	w1, [x19], #1
  4566c4:	and	x0, x1, #0x7f
  4566c8:	lsl	x0, x0, x2
  4566cc:	add	w2, w2, #0x7
  4566d0:	orr	x3, x3, x0
  4566d4:	tbnz	w1, #7, 4566c0 <_obstack_memory_used@@Base+0xcc60>
  4566d8:	str	x3, [x20, #1576]
  4566dc:	str	w24, [x20, #1600]
  4566e0:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4566e4:	mov	x1, #0x0                   	// #0
  4566e8:	mov	w0, #0x0                   	// #0
  4566ec:	ldrb	w3, [x19], #1
  4566f0:	and	x2, x3, #0x7f
  4566f4:	lsl	x2, x2, x0
  4566f8:	add	w0, w0, #0x7
  4566fc:	orr	x1, x1, x2
  456700:	tbnz	w3, #7, 4566ec <_obstack_memory_used@@Base+0xcc8c>
  456704:	mov	x4, #0x0                   	// #0
  456708:	mov	w2, #0x0                   	// #0
  45670c:	nop
  456710:	ldrb	w3, [x19], #1
  456714:	and	x0, x3, #0x7f
  456718:	lsl	x0, x0, x2
  45671c:	add	w2, w2, #0x7
  456720:	orr	x4, x4, x0
  456724:	tbnz	w3, #7, 456710 <_obstack_memory_used@@Base+0xccb0>
  456728:	cmp	x1, #0x61
  45672c:	b.hi	4562fc <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  456730:	lsl	x1, x1, #4
  456734:	mov	w2, #0x2                   	// #2
  456738:	add	x0, x20, x1
  45673c:	str	w2, [x0, #8]
  456740:	str	x4, [x20, x1]
  456744:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456748:	mov	x1, #0x0                   	// #0
  45674c:	mov	w0, #0x0                   	// #0
  456750:	ldrb	w3, [x19], #1
  456754:	and	x2, x3, #0x7f
  456758:	lsl	x2, x2, x0
  45675c:	add	w0, w0, #0x7
  456760:	orr	x1, x1, x2
  456764:	tbnz	w3, #7, 456750 <_obstack_memory_used@@Base+0xccf0>
  456768:	cmp	x1, #0x61
  45676c:	b.hi	4562fc <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  456770:	add	x1, x20, x1, lsl #4
  456774:	str	wzr, [x1, #8]
  456778:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  45677c:	mov	x1, #0x0                   	// #0
  456780:	mov	w0, #0x0                   	// #0
  456784:	ldrb	w3, [x19], #1
  456788:	and	x2, x3, #0x7f
  45678c:	lsl	x2, x2, x0
  456790:	add	w0, w0, #0x7
  456794:	orr	x1, x1, x2
  456798:	tbnz	w3, #7, 456784 <_obstack_memory_used@@Base+0xcd24>
  45679c:	cmp	x1, #0x61
  4567a0:	b.hi	4562fc <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  4567a4:	add	x1, x20, x1, lsl #4
  4567a8:	mov	w0, #0x6                   	// #6
  4567ac:	str	w0, [x1, #8]
  4567b0:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4567b4:	mov	x1, #0x0                   	// #0
  4567b8:	mov	w0, #0x0                   	// #0
  4567bc:	ldrb	w3, [x19], #1
  4567c0:	and	x2, x3, #0x7f
  4567c4:	lsl	x2, x2, x0
  4567c8:	add	w0, w0, #0x7
  4567cc:	orr	x1, x1, x2
  4567d0:	tbnz	w3, #7, 4567bc <_obstack_memory_used@@Base+0xcd5c>
  4567d4:	b	456768 <_obstack_memory_used@@Base+0xcd08>
  4567d8:	mov	x1, #0x0                   	// #0
  4567dc:	mov	w0, #0x0                   	// #0
  4567e0:	ldrb	w3, [x19], #1
  4567e4:	and	x2, x3, #0x7f
  4567e8:	lsl	x2, x2, x0
  4567ec:	add	w0, w0, #0x7
  4567f0:	orr	x1, x1, x2
  4567f4:	tbnz	w3, #7, 4567e0 <_obstack_memory_used@@Base+0xcd80>
  4567f8:	mov	x4, #0x0                   	// #0
  4567fc:	mov	w2, #0x0                   	// #0
  456800:	ldrb	w3, [x19], #1
  456804:	and	x0, x3, #0x7f
  456808:	lsl	x0, x0, x2
  45680c:	add	w2, w2, #0x7
  456810:	orr	x4, x4, x0
  456814:	tbnz	w3, #7, 456800 <_obstack_memory_used@@Base+0xcda0>
  456818:	b	4565b4 <_obstack_memory_used@@Base+0xcb54>
  45681c:	ldr	x0, [x20, #1632]
  456820:	and	x4, x4, #0x3f
  456824:	madd	x4, x4, x0, x1
  456828:	str	x4, [x20, #1608]
  45682c:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456830:	ubfiz	x4, x4, #4, #6
  456834:	add	x4, x20, x4
  456838:	str	wzr, [x4, #8]
  45683c:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456840:	and	w4, w4, #0x3f
  456844:	mov	x1, #0x0                   	// #0
  456848:	mov	w5, #0x0                   	// #0
  45684c:	nop
  456850:	ldrb	w6, [x19], #1
  456854:	and	x0, x6, #0x7f
  456858:	lsl	x0, x0, x5
  45685c:	add	w5, w5, #0x7
  456860:	orr	x1, x1, x0
  456864:	tbnz	w6, #7, 456850 <_obstack_memory_used@@Base+0xcdf0>
  456868:	ubfiz	x4, x4, #4, #6
  45686c:	ldr	x2, [x20, #1624]
  456870:	add	x0, x20, x4
  456874:	mul	x1, x1, x2
  456878:	str	w24, [x0, #8]
  45687c:	str	x1, [x20, x4]
  456880:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456884:	ldr	x0, [x20, #544]
  456888:	eor	x0, x0, #0x1
  45688c:	str	x0, [x20, #544]
  456890:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456894:	ldrb	w28, [x20, #1648]
  456898:	mov	x1, x21
  45689c:	mov	w0, w28
  4568a0:	bl	456178 <_obstack_memory_used@@Base+0xc718>
  4568a4:	mov	x2, x19
  4568a8:	mov	x1, x0
  4568ac:	mov	x3, x27
  4568b0:	mov	w0, w28
  4568b4:	bl	456018 <_obstack_memory_used@@Base+0xc5b8>
  4568b8:	mov	x19, x0
  4568bc:	ldr	x1, [x29, #104]
  4568c0:	str	x1, [x20, #1608]
  4568c4:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4568c8:	ldrb	w2, [x0, #1]
  4568cc:	add	x19, x0, #0x2
  4568d0:	ldr	x0, [x20, #1632]
  4568d4:	madd	x1, x2, x0, x1
  4568d8:	str	x1, [x20, #1608]
  4568dc:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4568e0:	ldurh	w2, [x0, #1]
  4568e4:	add	x19, x0, #0x3
  4568e8:	ldr	x0, [x20, #1632]
  4568ec:	madd	x1, x2, x0, x1
  4568f0:	str	x1, [x20, #1608]
  4568f4:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  4568f8:	ldur	w2, [x0, #1]
  4568fc:	add	x19, x0, #0x5
  456900:	ldr	x0, [x20, #1632]
  456904:	madd	x1, x2, x0, x1
  456908:	str	x1, [x20, #1608]
  45690c:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456910:	cbz	x25, 45698c <_obstack_memory_used@@Base+0xcf2c>
  456914:	mov	x3, x25
  456918:	ldr	x25, [x25, #1568]
  45691c:	mov	x1, x20
  456920:	mov	x0, x3
  456924:	mov	x2, #0x648                 	// #1608
  456928:	bl	402490 <memcpy@plt>
  45692c:	str	x0, [x20, #1568]
  456930:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456934:	ldr	x28, [x20, #1568]
  456938:	mov	x0, x20
  45693c:	mov	x2, #0x648                 	// #1608
  456940:	mov	x1, x28
  456944:	bl	402490 <memcpy@plt>
  456948:	str	x25, [x28, #1568]
  45694c:	mov	x25, x28
  456950:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456954:	mov	w0, #0x2                   	// #2
  456958:	mov	x3, #0x0                   	// #0
  45695c:	mov	w1, #0x0                   	// #0
  456960:	str	x19, [x20, #1592]
  456964:	str	w0, [x20, #1600]
  456968:	ldrb	w2, [x19], #1
  45696c:	and	x0, x2, #0x7f
  456970:	lsl	x0, x0, x1
  456974:	add	w1, w1, #0x7
  456978:	orr	x3, x3, x0
  45697c:	tbnz	w2, #7, 456968 <_obstack_memory_used@@Base+0xcf08>
  456980:	add	x19, x19, x3
  456984:	b	4562fc <_obstack_memory_used@@Base+0xc89c>
  456988:	ret
  45698c:	sub	sp, sp, #0x650
  456990:	mov	x3, sp
  456994:	b	45691c <_obstack_memory_used@@Base+0xcebc>
  456998:	bl	4027f0 <abort@plt>
  45699c:	nop
  4569a0:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4569a4:	add	x1, x2, #0xb08
  4569a8:	mov	w0, #0x8                   	// #8
  4569ac:	strb	w0, [x2, #2824]
  4569b0:	strb	w0, [x1, #1]
  4569b4:	strb	w0, [x1, #2]
  4569b8:	strb	w0, [x1, #3]
  4569bc:	strb	w0, [x1, #4]
  4569c0:	strb	w0, [x1, #5]
  4569c4:	strb	w0, [x1, #6]
  4569c8:	strb	w0, [x1, #7]
  4569cc:	strb	w0, [x1, #8]
  4569d0:	strb	w0, [x1, #9]
  4569d4:	strb	w0, [x1, #10]
  4569d8:	strb	w0, [x1, #11]
  4569dc:	strb	w0, [x1, #12]
  4569e0:	strb	w0, [x1, #13]
  4569e4:	strb	w0, [x1, #14]
  4569e8:	strb	w0, [x1, #15]
  4569ec:	strb	w0, [x1, #16]
  4569f0:	strb	w0, [x1, #17]
  4569f4:	strb	w0, [x1, #18]
  4569f8:	strb	w0, [x1, #19]
  4569fc:	strb	w0, [x1, #20]
  456a00:	strb	w0, [x1, #21]
  456a04:	strb	w0, [x1, #22]
  456a08:	strb	w0, [x1, #23]
  456a0c:	strb	w0, [x1, #24]
  456a10:	strb	w0, [x1, #25]
  456a14:	strb	w0, [x1, #26]
  456a18:	strb	w0, [x1, #27]
  456a1c:	strb	w0, [x1, #28]
  456a20:	strb	w0, [x1, #29]
  456a24:	strb	w0, [x1, #30]
  456a28:	strb	w0, [x1, #31]
  456a2c:	strb	w0, [x1, #64]
  456a30:	strb	w0, [x1, #46]
  456a34:	strb	w0, [x1, #65]
  456a38:	strb	w0, [x1, #66]
  456a3c:	strb	w0, [x1, #67]
  456a40:	strb	w0, [x1, #68]
  456a44:	strb	w0, [x1, #69]
  456a48:	strb	w0, [x1, #70]
  456a4c:	strb	w0, [x1, #71]
  456a50:	strb	w0, [x1, #72]
  456a54:	strb	w0, [x1, #73]
  456a58:	strb	w0, [x1, #74]
  456a5c:	strb	w0, [x1, #75]
  456a60:	strb	w0, [x1, #76]
  456a64:	strb	w0, [x1, #77]
  456a68:	strb	w0, [x1, #78]
  456a6c:	strb	w0, [x1, #79]
  456a70:	strb	w0, [x1, #80]
  456a74:	strb	w0, [x1, #81]
  456a78:	strb	w0, [x1, #82]
  456a7c:	strb	w0, [x1, #83]
  456a80:	strb	w0, [x1, #84]
  456a84:	strb	w0, [x1, #85]
  456a88:	strb	w0, [x1, #86]
  456a8c:	strb	w0, [x1, #87]
  456a90:	strb	w0, [x1, #88]
  456a94:	strb	w0, [x1, #89]
  456a98:	strb	w0, [x1, #90]
  456a9c:	strb	w0, [x1, #91]
  456aa0:	strb	w0, [x1, #92]
  456aa4:	strb	w0, [x1, #93]
  456aa8:	strb	w0, [x1, #94]
  456aac:	strb	w0, [x1, #95]
  456ab0:	strb	w0, [x1, #48]
  456ab4:	strb	w0, [x1, #49]
  456ab8:	strb	w0, [x1, #50]
  456abc:	strb	w0, [x1, #51]
  456ac0:	strb	w0, [x1, #52]
  456ac4:	strb	w0, [x1, #53]
  456ac8:	strb	w0, [x1, #54]
  456acc:	strb	w0, [x1, #55]
  456ad0:	strb	w0, [x1, #56]
  456ad4:	strb	w0, [x1, #57]
  456ad8:	strb	w0, [x1, #58]
  456adc:	strb	w0, [x1, #59]
  456ae0:	strb	w0, [x1, #60]
  456ae4:	strb	w0, [x1, #61]
  456ae8:	strb	w0, [x1, #62]
  456aec:	strb	w0, [x1, #63]
  456af0:	strb	w0, [x1, #96]
  456af4:	ret
  456af8:	stp	x29, x30, [sp, #-112]!
  456afc:	mov	x2, #0x680                 	// #1664
  456b00:	mov	x29, sp
  456b04:	stp	x19, x20, [sp, #16]
  456b08:	mov	x20, x0
  456b0c:	mov	x19, x1
  456b10:	mov	x0, x1
  456b14:	mov	w1, #0x0                   	// #0
  456b18:	bl	4026f0 <memset@plt>
  456b1c:	str	xzr, [x20, #800]
  456b20:	ldr	x2, [x20, #792]
  456b24:	str	xzr, [x20, #848]
  456b28:	cbz	x2, 456e9c <_obstack_memory_used@@Base+0xd43c>
  456b2c:	ldr	d0, [x20, #832]
  456b30:	add	x1, x20, #0x328
  456b34:	stp	x21, x22, [sp, #32]
  456b38:	cmge	d0, d0, #0
  456b3c:	fmov	x0, d0
  456b40:	add	x0, x2, x0
  456b44:	bl	45a238 <_obstack_memory_used@@Base+0x107d8>
  456b48:	mov	x22, x0
  456b4c:	cbz	x0, 456f00 <_obstack_memory_used@@Base+0xd4a0>
  456b50:	ldrsw	x1, [x0, #4]
  456b54:	stp	x23, x24, [sp, #48]
  456b58:	add	x23, x0, #0x4
  456b5c:	sub	x23, x23, x1
  456b60:	ldr	x0, [x20, #824]
  456b64:	str	x0, [x19, #1608]
  456b68:	add	x21, x23, #0x9
  456b6c:	mov	x0, x21
  456b70:	bl	4024f0 <strlen@plt>
  456b74:	ldrb	w1, [x23, #9]
  456b78:	add	x2, x0, #0x1
  456b7c:	add	x2, x21, x2
  456b80:	cmp	w1, #0x65
  456b84:	b.eq	456d70 <_obstack_memory_used@@Base+0xd310>  // b.none
  456b88:	ldrb	w6, [x23, #8]
  456b8c:	ldrb	w3, [x2]
  456b90:	cmp	w6, #0x3
  456b94:	b.hi	456fe0 <_obstack_memory_used@@Base+0xd580>  // b.pmore
  456b98:	stp	x25, x26, [sp, #64]
  456b9c:	stp	x27, x28, [sp, #80]
  456ba0:	mov	x5, #0x0                   	// #0
  456ba4:	mov	w4, #0x0                   	// #0
  456ba8:	b	456bb0 <_obstack_memory_used@@Base+0xd150>
  456bac:	ldrb	w3, [x2]
  456bb0:	and	x1, x3, #0x7f
  456bb4:	add	x2, x2, #0x1
  456bb8:	lsl	x1, x1, x4
  456bbc:	add	w4, w4, #0x7
  456bc0:	orr	x5, x5, x1
  456bc4:	tbnz	w3, #7, 456bac <_obstack_memory_used@@Base+0xd14c>
  456bc8:	mov	x0, #0x0                   	// #0
  456bcc:	mov	w3, #0x0                   	// #0
  456bd0:	str	x5, [x19, #1632]
  456bd4:	nop
  456bd8:	mov	x5, x2
  456bdc:	ldrb	w4, [x2], #1
  456be0:	and	x1, x4, #0x7f
  456be4:	lsl	x1, x1, x3
  456be8:	add	w3, w3, #0x7
  456bec:	orr	x0, x0, x1
  456bf0:	tbnz	w4, #7, 456bd8 <_obstack_memory_used@@Base+0xd178>
  456bf4:	cmp	w3, #0x3f
  456bf8:	b.hi	456c10 <_obstack_memory_used@@Base+0xd1b0>  // b.pmore
  456bfc:	mov	x1, #0xffffffffffffffff    	// #-1
  456c00:	tst	x4, #0x40
  456c04:	lsl	x3, x1, x3
  456c08:	orr	x3, x0, x3
  456c0c:	csel	x0, x3, x0, ne  // ne = any
  456c10:	str	x0, [x19, #1624]
  456c14:	cmp	w6, #0x1
  456c18:	mov	x4, #0x0                   	// #0
  456c1c:	mov	w3, #0x0                   	// #0
  456c20:	b.eq	456d8c <_obstack_memory_used@@Base+0xd32c>  // b.none
  456c24:	nop
  456c28:	ldrb	w0, [x2], #1
  456c2c:	and	x1, x0, #0x7f
  456c30:	lsl	x1, x1, x3
  456c34:	add	w3, w3, #0x7
  456c38:	orr	x4, x4, x1
  456c3c:	tbnz	w0, #7, 456c28 <_obstack_memory_used@@Base+0xd1c8>
  456c40:	mov	w0, #0xffffffff            	// #-1
  456c44:	str	x4, [x19, #1640]
  456c48:	strb	w0, [x19, #1649]
  456c4c:	ldrb	w3, [x21]
  456c50:	cmp	w3, #0x7a
  456c54:	b.eq	456dac <_obstack_memory_used@@Base+0xd34c>  // b.none
  456c58:	mov	x24, #0x0                   	// #0
  456c5c:	cbz	w3, 457044 <_obstack_memory_used@@Base+0xd5e4>
  456c60:	add	x21, x21, #0x1
  456c64:	add	x25, sp, #0x68
  456c68:	mov	w26, #0x1                   	// #1
  456c6c:	b	456c94 <_obstack_memory_used@@Base+0xd234>
  456c70:	cmp	w3, #0x52
  456c74:	b.eq	456df0 <_obstack_memory_used@@Base+0xd390>  // b.none
  456c78:	cmp	w3, #0x50
  456c7c:	b.eq	456dfc <_obstack_memory_used@@Base+0xd39c>  // b.none
  456c80:	cmp	w3, #0x53
  456c84:	b.ne	456eb0 <_obstack_memory_used@@Base+0xd450>  // b.any
  456c88:	strb	w26, [x19, #1651]
  456c8c:	ldrb	w3, [x21], #1
  456c90:	cbz	w3, 456cac <_obstack_memory_used@@Base+0xd24c>
  456c94:	cmp	w3, #0x4c
  456c98:	b.ne	456c70 <_obstack_memory_used@@Base+0xd210>  // b.any
  456c9c:	ldrb	w0, [x2], #1
  456ca0:	strb	w0, [x19, #1649]
  456ca4:	ldrb	w3, [x21], #1
  456ca8:	cbnz	w3, 456c94 <_obstack_memory_used@@Base+0xd234>
  456cac:	cbz	x24, 456eac <_obstack_memory_used@@Base+0xd44c>
  456cb0:	ldr	w1, [x23]
  456cb4:	mov	x0, x24
  456cb8:	mov	x3, x19
  456cbc:	mov	x2, x20
  456cc0:	add	x1, x1, #0x4
  456cc4:	add	x1, x23, x1
  456cc8:	bl	4561f0 <_obstack_memory_used@@Base+0xc790>
  456ccc:	ldrb	w0, [x19, #1648]
  456cd0:	cmp	w0, #0xff
  456cd4:	b.eq	456fd8 <_obstack_memory_used@@Base+0xd578>  // b.none
  456cd8:	and	w0, w0, #0x7
  456cdc:	cmp	w0, #0x2
  456ce0:	b.eq	456fd0 <_obstack_memory_used@@Base+0xd570>  // b.none
  456ce4:	b.ls	456e44 <_obstack_memory_used@@Base+0xd3e4>  // b.plast
  456ce8:	cmp	w0, #0x3
  456cec:	mov	x21, #0x10                  	// #16
  456cf0:	b.ne	456e34 <_obstack_memory_used@@Base+0xd3d4>  // b.any
  456cf4:	ldrb	w0, [x19, #1650]
  456cf8:	add	x21, x22, x21
  456cfc:	ldrb	w24, [x19, #1649]
  456d00:	cbz	w0, 456e5c <_obstack_memory_used@@Base+0xd3fc>
  456d04:	mov	x0, #0x0                   	// #0
  456d08:	mov	w2, #0x0                   	// #0
  456d0c:	nop
  456d10:	ldrb	w3, [x21], #1
  456d14:	and	x1, x3, #0x7f
  456d18:	lsl	x1, x1, x2
  456d1c:	add	w2, w2, #0x7
  456d20:	orr	x0, x0, x1
  456d24:	tbnz	w3, #7, 456d10 <_obstack_memory_used@@Base+0xd2b0>
  456d28:	add	x23, x21, x0
  456d2c:	cmp	w24, #0xff
  456d30:	b.ne	456ed4 <_obstack_memory_used@@Base+0xd474>  // b.any
  456d34:	ldr	w1, [x22]
  456d38:	mov	x0, x23
  456d3c:	mov	x3, x19
  456d40:	mov	x2, x20
  456d44:	add	x1, x1, #0x4
  456d48:	add	x1, x22, x1
  456d4c:	bl	4561f0 <_obstack_memory_used@@Base+0xc790>
  456d50:	ldp	x21, x22, [sp, #32]
  456d54:	mov	w0, #0x0                   	// #0
  456d58:	ldp	x23, x24, [sp, #48]
  456d5c:	ldp	x25, x26, [sp, #64]
  456d60:	ldp	x27, x28, [sp, #80]
  456d64:	ldp	x19, x20, [sp, #16]
  456d68:	ldp	x29, x30, [sp], #112
  456d6c:	ret
  456d70:	ldrb	w0, [x23, #10]
  456d74:	cmp	w0, #0x68
  456d78:	b.ne	456b88 <_obstack_memory_used@@Base+0xd128>  // b.any
  456d7c:	ldr	x0, [x2], #8
  456d80:	add	x21, x23, #0xb
  456d84:	str	x0, [x19, #1656]
  456d88:	b	456b88 <_obstack_memory_used@@Base+0xd128>
  456d8c:	ldrb	w0, [x2]
  456d90:	add	x2, x5, #0x2
  456d94:	str	x0, [x19, #1640]
  456d98:	mov	w0, #0xffffffff            	// #-1
  456d9c:	strb	w0, [x19, #1649]
  456da0:	ldrb	w3, [x21]
  456da4:	cmp	w3, #0x7a
  456da8:	b.ne	456c58 <_obstack_memory_used@@Base+0xd1f8>  // b.any
  456dac:	mov	x0, #0x0                   	// #0
  456db0:	mov	w3, #0x0                   	// #0
  456db4:	nop
  456db8:	ldrb	w4, [x2], #1
  456dbc:	and	x1, x4, #0x7f
  456dc0:	lsl	x1, x1, x3
  456dc4:	add	w3, w3, #0x7
  456dc8:	orr	x0, x0, x1
  456dcc:	tbnz	w4, #7, 456db8 <_obstack_memory_used@@Base+0xd358>
  456dd0:	mov	w1, #0x1                   	// #1
  456dd4:	strb	w1, [x19, #1650]
  456dd8:	add	x24, x2, x0
  456ddc:	add	x0, x21, #0x1
  456de0:	ldrb	w3, [x21, #1]
  456de4:	cbz	w3, 456cb0 <_obstack_memory_used@@Base+0xd250>
  456de8:	mov	x21, x0
  456dec:	b	456c60 <_obstack_memory_used@@Base+0xd200>
  456df0:	ldrb	w0, [x2], #1
  456df4:	strb	w0, [x19, #1648]
  456df8:	b	456c8c <_obstack_memory_used@@Base+0xd22c>
  456dfc:	mov	x27, x2
  456e00:	mov	x1, x20
  456e04:	ldrb	w28, [x27], #1
  456e08:	mov	w0, w28
  456e0c:	bl	456178 <_obstack_memory_used@@Base+0xc718>
  456e10:	mov	x2, x27
  456e14:	mov	x1, x0
  456e18:	mov	x3, x25
  456e1c:	mov	w0, w28
  456e20:	bl	456018 <_obstack_memory_used@@Base+0xc5b8>
  456e24:	mov	x2, x0
  456e28:	ldr	x1, [sp, #104]
  456e2c:	str	x1, [x19, #1616]
  456e30:	b	456c8c <_obstack_memory_used@@Base+0xd22c>
  456e34:	cmp	w0, #0x4
  456e38:	mov	x21, #0x18                  	// #24
  456e3c:	b.eq	456cf4 <_obstack_memory_used@@Base+0xd294>  // b.none
  456e40:	bl	4027f0 <abort@plt>
  456e44:	mov	x21, #0x18                  	// #24
  456e48:	cbnz	w0, 456e40 <_obstack_memory_used@@Base+0xd3e0>
  456e4c:	ldrb	w0, [x19, #1650]
  456e50:	add	x21, x22, x21
  456e54:	ldrb	w24, [x19, #1649]
  456e58:	cbnz	w0, 456d04 <_obstack_memory_used@@Base+0xd2a4>
  456e5c:	mov	x23, x21
  456e60:	cmp	w24, #0xff
  456e64:	b.eq	456d34 <_obstack_memory_used@@Base+0xd2d4>  // b.none
  456e68:	mov	x1, x20
  456e6c:	mov	w0, w24
  456e70:	bl	456178 <_obstack_memory_used@@Base+0xc718>
  456e74:	mov	x1, x0
  456e78:	mov	x2, x21
  456e7c:	mov	w0, w24
  456e80:	add	x3, sp, #0x68
  456e84:	bl	456018 <_obstack_memory_used@@Base+0xc5b8>
  456e88:	ldr	x1, [sp, #104]
  456e8c:	mov	x23, x0
  456e90:	str	x1, [x20, #800]
  456e94:	b	456d34 <_obstack_memory_used@@Base+0xd2d4>
  456e98:	ldp	x21, x22, [sp, #32]
  456e9c:	mov	w0, #0x5                   	// #5
  456ea0:	ldp	x19, x20, [sp, #16]
  456ea4:	ldp	x29, x30, [sp], #112
  456ea8:	ret
  456eac:	mov	x24, x2
  456eb0:	cbnz	x24, 456cb0 <_obstack_memory_used@@Base+0xd250>
  456eb4:	ldp	x25, x26, [sp, #64]
  456eb8:	ldp	x27, x28, [sp, #80]
  456ebc:	mov	w0, #0x3                   	// #3
  456ec0:	ldp	x19, x20, [sp, #16]
  456ec4:	ldp	x21, x22, [sp, #32]
  456ec8:	ldp	x23, x24, [sp, #48]
  456ecc:	ldp	x29, x30, [sp], #112
  456ed0:	ret
  456ed4:	mov	x1, x20
  456ed8:	mov	w0, w24
  456edc:	bl	456178 <_obstack_memory_used@@Base+0xc718>
  456ee0:	mov	x1, x0
  456ee4:	mov	x2, x21
  456ee8:	mov	w0, w24
  456eec:	add	x3, sp, #0x68
  456ef0:	bl	456018 <_obstack_memory_used@@Base+0xc5b8>
  456ef4:	ldr	x0, [sp, #104]
  456ef8:	str	x0, [x20, #800]
  456efc:	b	456d34 <_obstack_memory_used@@Base+0xd2d4>
  456f00:	ldr	x0, [x20, #792]
  456f04:	mov	w1, #0x1168                	// #4456
  456f08:	movk	w1, #0xd280, lsl #16
  456f0c:	ldr	w2, [x0]
  456f10:	cmp	w2, w1
  456f14:	b.ne	456e98 <_obstack_memory_used@@Base+0xd438>  // b.any
  456f18:	ldr	w1, [x0, #4]
  456f1c:	mov	w0, #0x1                   	// #1
  456f20:	movk	w0, #0xd400, lsl #16
  456f24:	cmp	w1, w0
  456f28:	b.ne	456e98 <_obstack_memory_used@@Base+0xd438>  // b.any
  456f2c:	ldr	x6, [x20, #784]
  456f30:	mov	w3, #0x1                   	// #1
  456f34:	mov	x1, x19
  456f38:	mov	w2, w3
  456f3c:	add	x8, x6, #0x130
  456f40:	mov	x4, #0x1f                  	// #31
  456f44:	mov	x5, #0x130                 	// #304
  456f48:	mov	x0, #0x8                   	// #8
  456f4c:	str	x5, [x19, #1576]
  456f50:	str	x4, [x19, #1584]
  456f54:	str	w3, [x19, #1600]
  456f58:	str	w2, [x1, #8]
  456f5c:	str	x0, [x1], #16
  456f60:	add	x0, x0, #0x8
  456f64:	cmp	x0, #0x100
  456f68:	b.ne	456f58 <_obstack_memory_used@@Base+0xd4f8>  // b.any
  456f6c:	ldr	w0, [x6, #592]
  456f70:	add	x5, x6, #0x250
  456f74:	cbz	w0, 457004 <_obstack_memory_used@@Base+0xd5a4>
  456f78:	mov	w7, #0x8001                	// #32769
  456f7c:	add	x4, x19, #0x600
  456f80:	add	x9, x6, x19
  456f84:	movk	w7, #0x4650, lsl #16
  456f88:	mov	w3, #0x1                   	// #1
  456f8c:	b	456fa0 <_obstack_memory_used@@Base+0xd540>
  456f90:	ldr	w0, [x5, #4]
  456f94:	add	x5, x5, x0
  456f98:	ldr	w0, [x5]
  456f9c:	cbz	w0, 457004 <_obstack_memory_used@@Base+0xd5a4>
  456fa0:	cmp	w0, w7
  456fa4:	b.ne	456f90 <_obstack_memory_used@@Base+0xd530>  // b.any
  456fa8:	sub	x2, x5, #0x520
  456fac:	add	x0, x19, #0x400
  456fb0:	sub	x2, x2, x9
  456fb4:	nop
  456fb8:	str	w3, [x0, #8]
  456fbc:	add	x1, x2, x0
  456fc0:	str	x1, [x0], #16
  456fc4:	cmp	x4, x0
  456fc8:	b.ne	456fb8 <_obstack_memory_used@@Base+0xd558>  // b.any
  456fcc:	b	456f90 <_obstack_memory_used@@Base+0xd530>
  456fd0:	mov	x21, #0xc                   	// #12
  456fd4:	b	456cf4 <_obstack_memory_used@@Base+0xd294>
  456fd8:	mov	x21, #0x8                   	// #8
  456fdc:	b	456cf4 <_obstack_memory_used@@Base+0xd294>
  456fe0:	cmp	w3, #0x8
  456fe4:	b.ne	456ebc <_obstack_memory_used@@Base+0xd45c>  // b.any
  456fe8:	ldrb	w0, [x2, #1]
  456fec:	cbnz	w0, 456ebc <_obstack_memory_used@@Base+0xd45c>
  456ff0:	stp	x25, x26, [sp, #64]
  456ff4:	add	x2, x2, #0x2
  456ff8:	stp	x27, x28, [sp, #80]
  456ffc:	ldrb	w3, [x2]
  457000:	b	456ba0 <_obstack_memory_used@@Base+0xd140>
  457004:	mov	w3, #0x1                   	// #1
  457008:	strb	w3, [x19, #1651]
  45700c:	add	x1, x6, #0x230
  457010:	mov	w5, #0x4                   	// #4
  457014:	ldr	x2, [x8, #264]
  457018:	sub	x1, x1, x8
  45701c:	mov	x4, #0x60                  	// #96
  457020:	mov	w0, #0x0                   	// #0
  457024:	sub	x8, x2, x8
  457028:	ldp	x21, x22, [sp, #32]
  45702c:	str	x1, [x19, #496]
  457030:	str	w3, [x19, #504]
  457034:	str	x8, [x19, #1536]
  457038:	str	w5, [x19, #1544]
  45703c:	str	x4, [x19, #1640]
  457040:	b	456d64 <_obstack_memory_used@@Base+0xd304>
  457044:	mov	x24, x2
  457048:	b	456cb0 <_obstack_memory_used@@Base+0xd250>
  45704c:	nop
  457050:	stp	x29, x30, [sp, #-80]!
  457054:	mov	x29, sp
  457058:	stp	x21, x22, [sp, #32]
  45705c:	mov	x21, x0
  457060:	ldr	x0, [x1, #832]
  457064:	stp	x19, x20, [sp, #16]
  457068:	mov	x20, x1
  45706c:	stp	x23, x24, [sp, #48]
  457070:	tbz	x0, #62, 45707c <_obstack_memory_used@@Base+0xd61c>
  457074:	ldrb	w1, [x1, #887]
  457078:	cbnz	w1, 457084 <_obstack_memory_used@@Base+0xd624>
  45707c:	ldr	x1, [x20, #248]
  457080:	cbz	x1, 457140 <_obstack_memory_used@@Base+0xd6e0>
  457084:	adrp	x24, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457088:	add	x23, x21, #0x358
  45708c:	add	x24, x24, #0xb08
  457090:	add	x22, x20, #0x358
  457094:	mov	x19, #0x0                   	// #0
  457098:	b	4570bc <_obstack_memory_used@@Base+0xd65c>
  45709c:	cbz	x0, 4570b0 <_obstack_memory_used@@Base+0xd650>
  4570a0:	ldrb	w2, [x19, x24]
  4570a4:	cmp	w2, #0x8
  4570a8:	b.ne	4571ac <_obstack_memory_used@@Base+0xd74c>  // b.any
  4570ac:	str	x1, [x0]
  4570b0:	add	x19, x19, #0x1
  4570b4:	cmp	x19, #0x61
  4570b8:	b.eq	4570f8 <_obstack_memory_used@@Base+0xd698>  // b.none
  4570bc:	ldrb	w2, [x23, x19]
  4570c0:	ldr	x0, [x21, x19, lsl #3]
  4570c4:	ldr	x1, [x20, x19, lsl #3]
  4570c8:	cbnz	w2, 4571ac <_obstack_memory_used@@Base+0xd74c>
  4570cc:	ldrb	w2, [x22, x19]
  4570d0:	cbnz	w2, 45709c <_obstack_memory_used@@Base+0xd63c>
  4570d4:	cmp	x1, #0x0
  4570d8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4570dc:	ccmp	x0, x1, #0x4, ne  // ne = any
  4570e0:	b.eq	4570b0 <_obstack_memory_used@@Base+0xd650>  // b.none
  4570e4:	ldrb	w2, [x24, x19]
  4570e8:	add	x19, x19, #0x1
  4570ec:	bl	402490 <memcpy@plt>
  4570f0:	cmp	x19, #0x61
  4570f4:	b.ne	4570bc <_obstack_memory_used@@Base+0xd65c>  // b.any
  4570f8:	ldr	x0, [x21, #832]
  4570fc:	tbz	x0, #62, 457108 <_obstack_memory_used@@Base+0xd6a8>
  457100:	ldrb	w0, [x21, #887]
  457104:	cbnz	w0, 457128 <_obstack_memory_used@@Base+0xd6c8>
  457108:	ldr	x1, [x21, #248]
  45710c:	mov	x0, #0x0                   	// #0
  457110:	cbz	x1, 45716c <_obstack_memory_used@@Base+0xd70c>
  457114:	ldp	x19, x20, [sp, #16]
  457118:	ldp	x21, x22, [sp, #32]
  45711c:	ldp	x23, x24, [sp, #48]
  457120:	ldp	x29, x30, [sp], #80
  457124:	ret
  457128:	mov	x0, #0x0                   	// #0
  45712c:	ldp	x19, x20, [sp, #16]
  457130:	ldp	x21, x22, [sp, #32]
  457134:	ldp	x23, x24, [sp, #48]
  457138:	ldp	x29, x30, [sp], #80
  45713c:	ret
  457140:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457144:	ldr	x2, [x20, #784]
  457148:	ldrb	w1, [x1, #2855]
  45714c:	cmp	w1, #0x8
  457150:	b.ne	4571ac <_obstack_memory_used@@Base+0xd74c>  // b.any
  457154:	str	x2, [sp, #72]
  457158:	tbz	x0, #62, 457160 <_obstack_memory_used@@Base+0xd700>
  45715c:	strb	wzr, [x20, #887]
  457160:	add	x0, sp, #0x48
  457164:	str	x0, [x20, #248]
  457168:	b	457084 <_obstack_memory_used@@Base+0xd624>
  45716c:	ldr	x1, [x20, #832]
  457170:	ldr	x0, [x20, #248]
  457174:	tbnz	x1, #62, 4571a0 <_obstack_memory_used@@Base+0xd740>
  457178:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  45717c:	ldrb	w1, [x1, #2855]
  457180:	cmp	w1, #0x8
  457184:	b.ne	4571ac <_obstack_memory_used@@Base+0xd74c>  // b.any
  457188:	ldr	x0, [x0]
  45718c:	ldr	x2, [x21, #784]
  457190:	ldr	x1, [x20, #848]
  457194:	sub	x0, x0, x2
  457198:	add	x0, x0, x1
  45719c:	b	457114 <_obstack_memory_used@@Base+0xd6b4>
  4571a0:	ldrb	w1, [x20, #887]
  4571a4:	cbz	w1, 457178 <_obstack_memory_used@@Base+0xd718>
  4571a8:	b	45718c <_obstack_memory_used@@Base+0xd72c>
  4571ac:	bl	4027f0 <abort@plt>
  4571b0:	sub	sp, sp, #0x260
  4571b4:	cmp	x0, x1
  4571b8:	stp	x29, x30, [sp]
  4571bc:	mov	x29, sp
  4571c0:	str	x3, [sp, #96]
  4571c4:	b.cs	45761c <_obstack_memory_used@@Base+0xdbbc>  // b.hs, b.nlast
  4571c8:	stp	x19, x20, [sp, #16]
  4571cc:	mov	x19, x0
  4571d0:	mov	w20, #0x1                   	// #1
  4571d4:	stp	x21, x22, [sp, #32]
  4571d8:	mov	x21, x1
  4571dc:	add	x22, sp, #0x60
  4571e0:	stp	x23, x24, [sp, #48]
  4571e4:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4571e8:	mov	x24, x2
  4571ec:	add	x23, x23, #0xa5c
  4571f0:	stp	x25, x26, [sp, #64]
  4571f4:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x205a0>
  4571f8:	add	x25, x25, #0xc3c
  4571fc:	nop
  457200:	mov	x4, x19
  457204:	ldrb	w5, [x4], #1
  457208:	sub	w0, w5, #0x3
  45720c:	cmp	w0, #0xee
  457210:	b.ls	457218 <_obstack_memory_used@@Base+0xd7b8>  // b.plast
  457214:	bl	4027f0 <abort@plt>
  457218:	ldrh	w0, [x23, w0, uxtw #1]
  45721c:	adr	x1, 457228 <_obstack_memory_used@@Base+0xd7c8>
  457220:	add	x0, x1, w0, sxth #2
  457224:	br	x0
  457228:	mov	x3, #0x0                   	// #0
  45722c:	mov	w1, #0x0                   	// #0
  457230:	ldrb	w2, [x4], #1
  457234:	and	x0, x2, #0x7f
  457238:	lsl	x0, x0, x1
  45723c:	add	w1, w1, #0x7
  457240:	orr	x3, x3, x0
  457244:	tbnz	w2, #7, 457230 <_obstack_memory_used@@Base+0xd7d0>
  457248:	cmp	w1, #0x3f
  45724c:	b.ls	4575b0 <_obstack_memory_used@@Base+0xdb50>  // b.plast
  457250:	sub	w5, w5, #0x70
  457254:	cmp	w5, #0x61
  457258:	b.gt	457214 <_obstack_memory_used@@Base+0xd7b4>
  45725c:	ldr	x2, [x24, #832]
  457260:	sxtw	x1, w5
  457264:	ldr	x0, [x24, x1, lsl #3]
  457268:	tbz	x2, #62, 457278 <_obstack_memory_used@@Base+0xd818>
  45726c:	add	x1, x24, x1
  457270:	ldrb	w1, [x1, #856]
  457274:	cbnz	w1, 457298 <_obstack_memory_used@@Base+0xd838>
  457278:	cmp	w5, #0x2e
  45727c:	b.eq	457610 <_obstack_memory_used@@Base+0xdbb0>  // b.none
  457280:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457284:	add	x1, x1, #0xb08
  457288:	ldrb	w1, [x1, w5, sxtw]
  45728c:	cmp	w1, #0x8
  457290:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  457294:	ldr	x0, [x0]
  457298:	add	x0, x3, x0
  45729c:	mov	w3, w20
  4572a0:	mov	x19, x4
  4572a4:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4572a8:	mov	w3, w20
  4572ac:	add	x19, x19, #0x9
  4572b0:	ldur	x0, [x19, #-8]
  4572b4:	nop
  4572b8:	cmp	w3, #0x3f
  4572bc:	b.gt	457214 <_obstack_memory_used@@Base+0xd7b4>
  4572c0:	add	w20, w3, #0x1
  4572c4:	str	x0, [x22, w3, sxtw #3]
  4572c8:	cmp	x21, x19
  4572cc:	b.hi	457200 <_obstack_memory_used@@Base+0xd7a0>  // b.pmore
  4572d0:	cbz	w20, 457214 <_obstack_memory_used@@Base+0xd7b4>
  4572d4:	sub	w20, w20, #0x1
  4572d8:	add	x0, sp, #0x60
  4572dc:	ldp	x29, x30, [sp]
  4572e0:	ldr	x0, [x0, w20, sxtw #3]
  4572e4:	ldp	x19, x20, [sp, #16]
  4572e8:	ldp	x21, x22, [sp, #32]
  4572ec:	ldp	x23, x24, [sp, #48]
  4572f0:	ldp	x25, x26, [sp, #64]
  4572f4:	add	sp, sp, #0x260
  4572f8:	ret
  4572fc:	sub	w5, w5, #0x50
  457300:	cmp	w5, #0x61
  457304:	b.gt	457214 <_obstack_memory_used@@Base+0xd7b4>
  457308:	ldr	x2, [x24, #832]
  45730c:	sxtw	x1, w5
  457310:	ldr	x0, [x24, x1, lsl #3]
  457314:	tbz	x2, #62, 457324 <_obstack_memory_used@@Base+0xd8c4>
  457318:	add	x1, x24, x1
  45731c:	ldrb	w1, [x1, #856]
  457320:	cbnz	w1, 45729c <_obstack_memory_used@@Base+0xd83c>
  457324:	cmp	w5, #0x2e
  457328:	b.eq	4575fc <_obstack_memory_used@@Base+0xdb9c>  // b.none
  45732c:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457330:	add	x1, x1, #0xb08
  457334:	ldrb	w1, [x1, w5, sxtw]
  457338:	cmp	w1, #0x8
  45733c:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  457340:	mov	w3, w20
  457344:	mov	x19, x4
  457348:	ldr	x0, [x0]
  45734c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457350:	sub	w0, w5, #0x30
  457354:	mov	w3, w20
  457358:	mov	x19, x4
  45735c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457360:	cmp	w20, #0x1
  457364:	b.le	457214 <_obstack_memory_used@@Base+0xd7b4>
  457368:	sub	w3, w20, #0x2
  45736c:	sub	w20, w20, #0x1
  457370:	sub	w5, w5, #0x1a
  457374:	cmp	w5, #0x14
  457378:	ldr	x1, [x22, w20, sxtw #3]
  45737c:	ldr	x0, [x22, w3, sxtw #3]
  457380:	b.hi	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.pmore
  457384:	ldrh	w2, [x25, w5, uxtw #1]
  457388:	adr	x5, 457394 <_obstack_memory_used@@Base+0xd934>
  45738c:	add	x2, x5, w2, sxth #2
  457390:	br	x2
  457394:	cbz	w20, 457214 <_obstack_memory_used@@Base+0xd7b4>
  457398:	sub	w3, w20, #0x1
  45739c:	cmp	w5, #0x20
  4573a0:	ldr	x0, [x22, w3, sxtw #3]
  4573a4:	b.eq	4578f8 <_obstack_memory_used@@Base+0xde98>  // b.none
  4573a8:	b.hi	4573c8 <_obstack_memory_used@@Base+0xd968>  // b.pmore
  4573ac:	cmp	w5, #0x19
  4573b0:	b.eq	45762c <_obstack_memory_used@@Base+0xdbcc>  // b.none
  4573b4:	cmp	w5, #0x1f
  4573b8:	b.ne	45759c <_obstack_memory_used@@Base+0xdb3c>  // b.any
  4573bc:	neg	x0, x0
  4573c0:	mov	x19, x4
  4573c4:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4573c8:	cmp	w5, #0x23
  4573cc:	b.eq	4575d0 <_obstack_memory_used@@Base+0xdb70>  // b.none
  4573d0:	cmp	w5, #0x94
  4573d4:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  4573d8:	ldrb	w1, [x19, #1]
  4573dc:	add	x19, x19, #0x2
  4573e0:	cmp	w1, #0x4
  4573e4:	b.eq	4577e8 <_obstack_memory_used@@Base+0xdd88>  // b.none
  4573e8:	b.hi	457914 <_obstack_memory_used@@Base+0xdeb4>  // b.pmore
  4573ec:	cmp	w1, #0x1
  4573f0:	b.ne	457904 <_obstack_memory_used@@Base+0xdea4>  // b.any
  4573f4:	ldrb	w0, [x0]
  4573f8:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4573fc:	cmp	w20, #0x2
  457400:	b.le	457214 <_obstack_memory_used@@Base+0xd7b4>
  457404:	sub	w1, w20, #0x2
  457408:	sub	w2, w20, #0x1
  45740c:	sub	w0, w20, #0x3
  457410:	mov	x19, x4
  457414:	sxtw	x1, w1
  457418:	sxtw	x2, w2
  45741c:	sxtw	x0, w0
  457420:	ldr	x5, [x22, x1, lsl #3]
  457424:	ldr	x3, [x22, x2, lsl #3]
  457428:	ldr	x4, [x22, x0, lsl #3]
  45742c:	str	x5, [x22, x2, lsl #3]
  457430:	str	x4, [x22, x1, lsl #3]
  457434:	str	x3, [x22, x0, lsl #3]
  457438:	b	4572c8 <_obstack_memory_used@@Base+0xd868>
  45743c:	cmp	w20, #0x1
  457440:	b.le	457214 <_obstack_memory_used@@Base+0xd7b4>
  457444:	sub	w0, w20, #0x2
  457448:	sub	w1, w20, #0x1
  45744c:	mov	x19, x4
  457450:	sxtw	x0, w0
  457454:	sxtw	x1, w1
  457458:	ldr	x3, [x22, x0, lsl #3]
  45745c:	ldr	x2, [x22, x1, lsl #3]
  457460:	str	x3, [x22, x1, lsl #3]
  457464:	str	x2, [x22, x0, lsl #3]
  457468:	b	4572c8 <_obstack_memory_used@@Base+0xd868>
  45746c:	ldrb	w3, [x19, #1]
  457470:	sub	w1, w20, #0x1
  457474:	add	x19, x19, #0x2
  457478:	sxtw	x2, w1
  45747c:	cmp	x3, w1, sxtw
  457480:	b.ge	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.tcont
  457484:	sub	x1, x2, x3
  457488:	mov	w3, w20
  45748c:	ldr	x0, [x22, x1, lsl #3]
  457490:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457494:	cmp	w20, #0x1
  457498:	b.le	457214 <_obstack_memory_used@@Base+0xd7b4>
  45749c:	sub	w0, w20, #0x2
  4574a0:	mov	x19, x4
  4574a4:	mov	w3, w20
  4574a8:	ldr	x0, [x22, w0, sxtw #3]
  4574ac:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4574b0:	cbz	w20, 457214 <_obstack_memory_used@@Base+0xd7b4>
  4574b4:	sub	w20, w20, #0x1
  4574b8:	mov	x19, x4
  4574bc:	b	4572c8 <_obstack_memory_used@@Base+0xd868>
  4574c0:	cbz	w20, 457214 <_obstack_memory_used@@Base+0xd7b4>
  4574c4:	sub	w0, w20, #0x1
  4574c8:	mov	x19, x4
  4574cc:	mov	w3, w20
  4574d0:	ldr	x0, [x22, w0, sxtw #3]
  4574d4:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4574d8:	ldursh	x1, [x19, #1]
  4574dc:	add	x19, x19, #0x3
  4574e0:	add	x19, x19, x1
  4574e4:	b	4572c8 <_obstack_memory_used@@Base+0xd868>
  4574e8:	ldrb	w0, [x19, #1]
  4574ec:	mov	w3, w20
  4574f0:	add	x19, x19, #0x2
  4574f4:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4574f8:	ldrb	w26, [x19, #1]
  4574fc:	mov	x1, x24
  457500:	mov	w0, w26
  457504:	bl	456178 <_obstack_memory_used@@Base+0xc718>
  457508:	add	x2, x19, #0x2
  45750c:	mov	x1, x0
  457510:	add	x3, sp, #0x58
  457514:	mov	w0, w26
  457518:	bl	456018 <_obstack_memory_used@@Base+0xc5b8>
  45751c:	mov	x19, x0
  457520:	mov	w3, w20
  457524:	ldr	x0, [sp, #88]
  457528:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45752c:	cbz	w20, 457214 <_obstack_memory_used@@Base+0xd7b4>
  457530:	sub	w20, w20, #0x1
  457534:	add	x1, x19, #0x3
  457538:	ldr	x0, [x22, w20, sxtw #3]
  45753c:	cbz	x0, 4575c8 <_obstack_memory_used@@Base+0xdb68>
  457540:	ldursh	x19, [x19, #1]
  457544:	add	x19, x1, x19
  457548:	b	4572c8 <_obstack_memory_used@@Base+0xd868>
  45754c:	ldursw	x0, [x19, #1]
  457550:	mov	w3, w20
  457554:	add	x19, x19, #0x5
  457558:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45755c:	ldur	w0, [x19, #1]
  457560:	mov	w3, w20
  457564:	add	x19, x19, #0x5
  457568:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45756c:	ldursh	x0, [x19, #1]
  457570:	mov	w3, w20
  457574:	add	x19, x19, #0x3
  457578:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45757c:	ldurh	w0, [x19, #1]
  457580:	mov	w3, w20
  457584:	add	x19, x19, #0x3
  457588:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45758c:	ldrsb	x0, [x19, #1]
  457590:	mov	w3, w20
  457594:	add	x19, x19, #0x2
  457598:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45759c:	cmp	w5, #0x6
  4575a0:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  4575a4:	mov	x19, x4
  4575a8:	ldr	x0, [x0]
  4575ac:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4575b0:	mov	x0, #0xffffffffffffffff    	// #-1
  4575b4:	tst	x2, #0x40
  4575b8:	lsl	x0, x0, x1
  4575bc:	orr	x0, x3, x0
  4575c0:	csel	x3, x0, x3, ne  // ne = any
  4575c4:	b	457250 <_obstack_memory_used@@Base+0xd7f0>
  4575c8:	mov	x19, x1
  4575cc:	b	4572c8 <_obstack_memory_used@@Base+0xd868>
  4575d0:	mov	x6, #0x0                   	// #0
  4575d4:	mov	w2, #0x0                   	// #0
  4575d8:	ldrb	w5, [x4], #1
  4575dc:	and	x1, x5, #0x7f
  4575e0:	lsl	x1, x1, x2
  4575e4:	add	w2, w2, #0x7
  4575e8:	orr	x6, x6, x1
  4575ec:	tbnz	w5, #7, 4575d8 <_obstack_memory_used@@Base+0xdb78>
  4575f0:	add	x0, x0, x6
  4575f4:	mov	x19, x4
  4575f8:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4575fc:	cntd	x0
  457600:	mov	w3, w20
  457604:	mov	x19, x4
  457608:	sxtw	x0, w0
  45760c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457610:	cntd	x0
  457614:	sxtw	x0, w0
  457618:	b	457298 <_obstack_memory_used@@Base+0xd838>
  45761c:	mov	x0, x3
  457620:	ldp	x29, x30, [sp]
  457624:	add	sp, sp, #0x260
  457628:	ret
  45762c:	cmp	x0, #0x0
  457630:	mov	x19, x4
  457634:	cneg	x0, x0, lt  // lt = tstop
  457638:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45763c:	mov	x19, x4
  457640:	mov	w1, #0x0                   	// #0
  457644:	mov	x4, #0x0                   	// #0
  457648:	ldrb	w2, [x19], #1
  45764c:	and	x0, x2, #0x7f
  457650:	lsl	x0, x0, x1
  457654:	add	w1, w1, #0x7
  457658:	orr	x4, x4, x0
  45765c:	tbnz	w2, #7, 457648 <_obstack_memory_used@@Base+0xdbe8>
  457660:	mov	x3, #0x0                   	// #0
  457664:	mov	w1, #0x0                   	// #0
  457668:	ldrb	w2, [x19], #1
  45766c:	and	x0, x2, #0x7f
  457670:	lsl	x0, x0, x1
  457674:	add	w1, w1, #0x7
  457678:	orr	x3, x3, x0
  45767c:	tbnz	w2, #7, 457668 <_obstack_memory_used@@Base+0xdc08>
  457680:	cmp	w1, #0x3f
  457684:	b.hi	45769c <_obstack_memory_used@@Base+0xdc3c>  // b.pmore
  457688:	mov	x0, #0xffffffffffffffff    	// #-1
  45768c:	tst	x2, #0x40
  457690:	lsl	x0, x0, x1
  457694:	orr	x0, x3, x0
  457698:	csel	x3, x0, x3, ne  // ne = any
  45769c:	cmp	w4, #0x61
  4576a0:	mov	w1, w4
  4576a4:	b.gt	457214 <_obstack_memory_used@@Base+0xd7b4>
  4576a8:	ldr	x2, [x24, #832]
  4576ac:	sxtw	x4, w4
  4576b0:	ldr	x0, [x24, x4, lsl #3]
  4576b4:	tbz	x2, #62, 4576c4 <_obstack_memory_used@@Base+0xdc64>
  4576b8:	add	x4, x24, x4
  4576bc:	ldrb	w2, [x4, #856]
  4576c0:	cbnz	w2, 4576e4 <_obstack_memory_used@@Base+0xdc84>
  4576c4:	cmp	w1, #0x2e
  4576c8:	b.eq	4578d8 <_obstack_memory_used@@Base+0xde78>  // b.none
  4576cc:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4576d0:	add	x2, x2, #0xb08
  4576d4:	ldrb	w1, [x2, w1, sxtw]
  4576d8:	cmp	w1, #0x8
  4576dc:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  4576e0:	ldr	x0, [x0]
  4576e4:	add	x0, x3, x0
  4576e8:	mov	w3, w20
  4576ec:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4576f0:	mov	x19, x4
  4576f4:	mov	x0, #0x0                   	// #0
  4576f8:	mov	w2, #0x0                   	// #0
  4576fc:	nop
  457700:	ldrb	w4, [x19], #1
  457704:	and	x1, x4, #0x7f
  457708:	lsl	x1, x1, x2
  45770c:	add	w2, w2, #0x7
  457710:	orr	x0, x0, x1
  457714:	tbnz	w4, #7, 457700 <_obstack_memory_used@@Base+0xdca0>
  457718:	mov	w3, w20
  45771c:	cmp	w2, #0x3f
  457720:	b.hi	4572b8 <_obstack_memory_used@@Base+0xd858>  // b.pmore
  457724:	tbz	w4, #6, 4572b8 <_obstack_memory_used@@Base+0xd858>
  457728:	mov	x1, #0xffffffffffffffff    	// #-1
  45772c:	lsl	x2, x1, x2
  457730:	orr	x0, x0, x2
  457734:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457738:	mov	x19, x4
  45773c:	mov	x0, #0x0                   	// #0
  457740:	mov	w2, #0x0                   	// #0
  457744:	nop
  457748:	ldrb	w3, [x19], #1
  45774c:	and	x1, x3, #0x7f
  457750:	lsl	x1, x1, x2
  457754:	add	w2, w2, #0x7
  457758:	orr	x0, x0, x1
  45775c:	tbnz	w3, #7, 457748 <_obstack_memory_used@@Base+0xdce8>
  457760:	mov	w3, w20
  457764:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457768:	mov	x19, x4
  45776c:	mov	x3, #0x0                   	// #0
  457770:	mov	w1, #0x0                   	// #0
  457774:	nop
  457778:	ldrb	w2, [x19], #1
  45777c:	and	x0, x2, #0x7f
  457780:	lsl	x0, x0, x1
  457784:	add	w1, w1, #0x7
  457788:	orr	x3, x3, x0
  45778c:	tbnz	w2, #7, 457778 <_obstack_memory_used@@Base+0xdd18>
  457790:	cmp	w3, #0x61
  457794:	mov	w1, w3
  457798:	b.gt	457214 <_obstack_memory_used@@Base+0xd7b4>
  45779c:	ldr	x2, [x24, #832]
  4577a0:	sxtw	x3, w3
  4577a4:	ldr	x0, [x24, x3, lsl #3]
  4577a8:	tbz	x2, #62, 4577b8 <_obstack_memory_used@@Base+0xdd58>
  4577ac:	add	x3, x24, x3
  4577b0:	ldrb	w2, [x3, #856]
  4577b4:	cbnz	w2, 4576e8 <_obstack_memory_used@@Base+0xdc88>
  4577b8:	cmp	w1, #0x2e
  4577bc:	b.eq	4578e8 <_obstack_memory_used@@Base+0xde88>  // b.none
  4577c0:	adrp	x2, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4577c4:	add	x2, x2, #0xb08
  4577c8:	ldrb	w1, [x2, w1, sxtw]
  4577cc:	cmp	w1, #0x8
  4577d0:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  4577d4:	mov	w3, w20
  4577d8:	ldr	x0, [x0]
  4577dc:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4577e0:	mov	x19, x4
  4577e4:	b	4572c8 <_obstack_memory_used@@Base+0xd868>
  4577e8:	ldr	w0, [x0]
  4577ec:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4577f0:	cmp	x0, x1
  4577f4:	mov	x19, x4
  4577f8:	cset	x0, ne  // ne = any
  4577fc:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457800:	cmp	x0, x1
  457804:	mov	x19, x4
  457808:	cset	x0, lt  // lt = tstop
  45780c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457810:	cmp	x0, x1
  457814:	mov	x19, x4
  457818:	cset	x0, le
  45781c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457820:	cmp	x0, x1
  457824:	mov	x19, x4
  457828:	cset	x0, gt
  45782c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457830:	cmp	x0, x1
  457834:	mov	x19, x4
  457838:	cset	x0, ge  // ge = tcont
  45783c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457840:	cmp	x0, x1
  457844:	mov	x19, x4
  457848:	cset	x0, eq  // eq = none
  45784c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457850:	eor	x0, x0, x1
  457854:	mov	x19, x4
  457858:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45785c:	mov	x19, x4
  457860:	asr	x0, x0, x1
  457864:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457868:	mov	x19, x4
  45786c:	lsr	x0, x0, x1
  457870:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457874:	mov	x19, x4
  457878:	lsl	x0, x0, x1
  45787c:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457880:	add	x0, x0, x1
  457884:	mov	x19, x4
  457888:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  45788c:	orr	x0, x0, x1
  457890:	mov	x19, x4
  457894:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457898:	mul	x0, x0, x1
  45789c:	mov	x19, x4
  4578a0:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4578a4:	udiv	x2, x0, x1
  4578a8:	mov	x19, x4
  4578ac:	msub	x0, x2, x1, x0
  4578b0:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4578b4:	sub	x0, x0, x1
  4578b8:	mov	x19, x4
  4578bc:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4578c0:	sdiv	x0, x0, x1
  4578c4:	mov	x19, x4
  4578c8:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4578cc:	and	x0, x0, x1
  4578d0:	mov	x19, x4
  4578d4:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4578d8:	cntd	x0
  4578dc:	sxtw	x0, w0
  4578e0:	add	x0, x3, x0
  4578e4:	b	4576e8 <_obstack_memory_used@@Base+0xdc88>
  4578e8:	cntd	x0
  4578ec:	mov	w3, w20
  4578f0:	sxtw	x0, w0
  4578f4:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  4578f8:	mvn	x0, x0
  4578fc:	mov	x19, x4
  457900:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457904:	cmp	w1, #0x2
  457908:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  45790c:	ldrh	w0, [x0]
  457910:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457914:	cmp	w1, #0x8
  457918:	b.ne	457214 <_obstack_memory_used@@Base+0xd7b4>  // b.any
  45791c:	ldr	x0, [x0]
  457920:	b	4572b8 <_obstack_memory_used@@Base+0xd858>
  457924:	nop
  457928:	sub	sp, sp, #0x440
  45792c:	mov	x2, #0x3c0                 	// #960
  457930:	stp	x29, x30, [sp]
  457934:	mov	x29, sp
  457938:	stp	x27, x28, [sp, #80]
  45793c:	add	x28, sp, #0x80
  457940:	mov	x27, x0
  457944:	stp	x19, x20, [sp, #16]
  457948:	stp	x21, x22, [sp, #32]
  45794c:	stp	x23, x24, [sp, #48]
  457950:	stp	x25, x26, [sp, #64]
  457954:	str	x1, [sp, #104]
  457958:	mov	x1, x0
  45795c:	mov	x0, x28
  457960:	bl	402490 <memcpy@plt>
  457964:	ldr	x1, [sp, #960]
  457968:	tbz	x1, #62, 457974 <_obstack_memory_used@@Base+0xdf14>
  45796c:	ldrb	w0, [sp, #1015]
  457970:	cbnz	w0, 45797c <_obstack_memory_used@@Base+0xdf1c>
  457974:	ldr	x0, [x28, #248]
  457978:	cbz	x0, 457c48 <_obstack_memory_used@@Base+0xe1e8>
  45797c:	ldr	x0, [x27, #832]
  457980:	tbz	x0, #62, 457988 <_obstack_memory_used@@Base+0xdf28>
  457984:	strb	wzr, [x27, #887]
  457988:	ldr	x0, [sp, #104]
  45798c:	ldr	w0, [x0, #1600]
  457990:	str	xzr, [x27, #248]
  457994:	cmp	w0, #0x1
  457998:	b.ne	4579e8 <_obstack_memory_used@@Base+0xdf88>  // b.any
  45799c:	ldr	x0, [sp, #104]
  4579a0:	ldr	x0, [x0, #1584]
  4579a4:	cmp	w0, #0x61
  4579a8:	b.gt	457bb0 <_obstack_memory_used@@Base+0xe150>
  4579ac:	sxtw	x2, w0
  4579b0:	ldr	x3, [x28, x2, lsl #3]
  4579b4:	tbnz	x1, #62, 457c28 <_obstack_memory_used@@Base+0xe1c8>
  4579b8:	cmp	w0, #0x2e
  4579bc:	b.eq	457c3c <_obstack_memory_used@@Base+0xe1dc>  // b.none
  4579c0:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4579c4:	add	x0, x0, #0xb08
  4579c8:	ldrb	w0, [x0, x2]
  4579cc:	cmp	w0, #0x8
  4579d0:	b.ne	457bb0 <_obstack_memory_used@@Base+0xe150>  // b.any
  4579d4:	ldr	x3, [x3]
  4579d8:	ldr	x0, [sp, #104]
  4579dc:	ldr	x0, [x0, #1576]
  4579e0:	add	x22, x3, x0
  4579e4:	b	457a2c <_obstack_memory_used@@Base+0xdfcc>
  4579e8:	cmp	w0, #0x2
  4579ec:	b.ne	457bb0 <_obstack_memory_used@@Base+0xe150>  // b.any
  4579f0:	ldr	x0, [sp, #104]
  4579f4:	mov	x1, #0x0                   	// #0
  4579f8:	mov	w3, #0x0                   	// #0
  4579fc:	ldr	x0, [x0, #1592]
  457a00:	ldrb	w4, [x0], #1
  457a04:	and	x2, x4, #0x7f
  457a08:	lsl	x2, x2, x3
  457a0c:	add	w3, w3, #0x7
  457a10:	orr	x1, x1, x2
  457a14:	tbnz	w4, #7, 457a00 <_obstack_memory_used@@Base+0xdfa0>
  457a18:	add	x1, x0, x1
  457a1c:	mov	x2, x28
  457a20:	mov	x3, #0x0                   	// #0
  457a24:	bl	4571b0 <_obstack_memory_used@@Base+0xd750>
  457a28:	mov	x22, x0
  457a2c:	ldr	x25, [sp, #104]
  457a30:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457a34:	add	x26, x27, #0x358
  457a38:	add	x20, x23, #0xb08
  457a3c:	add	x21, sp, #0x3d8
  457a40:	mov	x24, #0x0                   	// #0
  457a44:	mov	w19, #0x1                   	// #1
  457a48:	str	x22, [x27, #784]
  457a4c:	nop
  457a50:	ldr	w2, [x25, #8]
  457a54:	cmp	w2, #0x3
  457a58:	b.eq	457afc <_obstack_memory_used@@Base+0xe09c>  // b.none
  457a5c:	b.hi	457b40 <_obstack_memory_used@@Base+0xe0e0>  // b.pmore
  457a60:	cmp	w2, #0x1
  457a64:	b.eq	457bb4 <_obstack_memory_used@@Base+0xe154>  // b.none
  457a68:	cmp	w2, #0x2
  457a6c:	b.ne	457a94 <_obstack_memory_used@@Base+0xe034>  // b.any
  457a70:	ldr	x0, [x25]
  457a74:	ldrb	w2, [x21, w0, sxtw]
  457a78:	sxtw	x1, w0
  457a7c:	cbnz	w2, 457bcc <_obstack_memory_used@@Base+0xe16c>
  457a80:	ldr	x2, [x27, #832]
  457a84:	ldr	x0, [x28, x1, lsl #3]
  457a88:	tbnz	x2, #62, 457b38 <_obstack_memory_used@@Base+0xe0d8>
  457a8c:	nop
  457a90:	str	x0, [x27, x24, lsl #3]
  457a94:	add	x24, x24, #0x1
  457a98:	add	x25, x25, #0x10
  457a9c:	cmp	x24, #0x62
  457aa0:	add	x26, x26, #0x1
  457aa4:	b.ne	457a50 <_obstack_memory_used@@Base+0xdff0>  // b.any
  457aa8:	ldr	x3, [sp, #104]
  457aac:	ldr	x0, [x27, #832]
  457ab0:	ldrb	w2, [x3, #1651]
  457ab4:	orr	x1, x0, #0x8000000000000000
  457ab8:	and	x0, x0, #0x7fffffffffffffff
  457abc:	cmp	w2, #0x0
  457ac0:	csel	x0, x0, x1, eq  // eq = none
  457ac4:	ldp	x29, x30, [sp]
  457ac8:	orr	x1, x0, #0x2000000000000000
  457acc:	ldp	x19, x20, [sp, #16]
  457ad0:	ldp	x21, x22, [sp, #32]
  457ad4:	ldp	x23, x24, [sp, #48]
  457ad8:	ldp	x25, x26, [sp, #64]
  457adc:	str	x0, [x27, #832]
  457ae0:	ldr	x2, [x3, #544]
  457ae4:	tst	x2, #0x1
  457ae8:	csel	x0, x1, x0, ne  // ne = any
  457aec:	str	x0, [x27, #832]
  457af0:	ldp	x27, x28, [sp, #80]
  457af4:	add	sp, sp, #0x440
  457af8:	ret
  457afc:	ldr	x0, [x25]
  457b00:	mov	x1, #0x0                   	// #0
  457b04:	mov	w4, #0x0                   	// #0
  457b08:	ldrb	w5, [x0], #1
  457b0c:	and	x2, x5, #0x7f
  457b10:	lsl	x2, x2, x4
  457b14:	add	w4, w4, #0x7
  457b18:	orr	x1, x1, x2
  457b1c:	tbnz	w5, #7, 457b08 <_obstack_memory_used@@Base+0xe0a8>
  457b20:	add	x1, x0, x1
  457b24:	mov	x3, x22
  457b28:	mov	x2, x28
  457b2c:	bl	4571b0 <_obstack_memory_used@@Base+0xd750>
  457b30:	ldr	x1, [x27, #832]
  457b34:	tbz	x1, #62, 457a90 <_obstack_memory_used@@Base+0xe030>
  457b38:	strb	wzr, [x26]
  457b3c:	b	457a90 <_obstack_memory_used@@Base+0xe030>
  457b40:	cmp	w2, #0x4
  457b44:	b.eq	457b9c <_obstack_memory_used@@Base+0xe13c>  // b.none
  457b48:	cmp	w2, #0x5
  457b4c:	b.ne	457a94 <_obstack_memory_used@@Base+0xe034>  // b.any
  457b50:	ldr	x0, [x25]
  457b54:	mov	x1, #0x0                   	// #0
  457b58:	mov	w4, #0x0                   	// #0
  457b5c:	nop
  457b60:	ldrb	w5, [x0], #1
  457b64:	and	x2, x5, #0x7f
  457b68:	lsl	x2, x2, x4
  457b6c:	add	w4, w4, #0x7
  457b70:	orr	x1, x1, x2
  457b74:	tbnz	w5, #7, 457b60 <_obstack_memory_used@@Base+0xe100>
  457b78:	add	x1, x0, x1
  457b7c:	mov	x3, x22
  457b80:	mov	x2, x28
  457b84:	bl	4571b0 <_obstack_memory_used@@Base+0xd750>
  457b88:	ldrb	w1, [x24, x20]
  457b8c:	cmp	w1, #0x8
  457b90:	b.hi	457bb0 <_obstack_memory_used@@Base+0xe150>  // b.pmore
  457b94:	strb	w19, [x26]
  457b98:	b	457a90 <_obstack_memory_used@@Base+0xe030>
  457b9c:	ldr	x0, [x25]
  457ba0:	ldrb	w1, [x24, x20]
  457ba4:	add	x0, x22, x0
  457ba8:	cmp	w1, #0x8
  457bac:	b.ls	457b94 <_obstack_memory_used@@Base+0xe134>  // b.plast
  457bb0:	bl	4027f0 <abort@plt>
  457bb4:	ldr	x1, [x27, #832]
  457bb8:	ldr	x0, [x25]
  457bbc:	add	x0, x22, x0
  457bc0:	tbz	x1, #62, 457a90 <_obstack_memory_used@@Base+0xe030>
  457bc4:	strb	wzr, [x26]
  457bc8:	b	457a90 <_obstack_memory_used@@Base+0xe030>
  457bcc:	cmp	w0, #0x61
  457bd0:	b.gt	457bb0 <_obstack_memory_used@@Base+0xe150>
  457bd4:	ldr	x4, [sp, #960]
  457bd8:	ldr	x2, [x28, x1, lsl #3]
  457bdc:	tbz	x4, #62, 457c00 <_obstack_memory_used@@Base+0xe1a0>
  457be0:	mov	x0, x2
  457be4:	nop
  457be8:	add	x1, x23, #0xb08
  457bec:	ldrb	w1, [x24, x1]
  457bf0:	cmp	w1, #0x8
  457bf4:	b.hi	457bb0 <_obstack_memory_used@@Base+0xe150>  // b.pmore
  457bf8:	strb	w19, [x26]
  457bfc:	b	457a90 <_obstack_memory_used@@Base+0xe030>
  457c00:	cmp	w0, #0x2e
  457c04:	b.eq	457c1c <_obstack_memory_used@@Base+0xe1bc>  // b.none
  457c08:	ldrb	w0, [x20, x1]
  457c0c:	cmp	w0, #0x8
  457c10:	b.ne	457bb0 <_obstack_memory_used@@Base+0xe150>  // b.any
  457c14:	ldr	x0, [x2]
  457c18:	b	457be8 <_obstack_memory_used@@Base+0xe188>
  457c1c:	cntd	x0
  457c20:	sxtw	x0, w0
  457c24:	b	457be8 <_obstack_memory_used@@Base+0xe188>
  457c28:	add	x1, sp, #0x3d8
  457c2c:	ldrb	w1, [x1, x2]
  457c30:	cbnz	w1, 4579d8 <_obstack_memory_used@@Base+0xdf78>
  457c34:	cmp	w0, #0x2e
  457c38:	b.ne	4579c0 <_obstack_memory_used@@Base+0xdf60>  // b.any
  457c3c:	cntd	x0
  457c40:	sxtw	x3, w0
  457c44:	b	4579d8 <_obstack_memory_used@@Base+0xdf78>
  457c48:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457c4c:	ldr	x2, [x27, #784]
  457c50:	ldrb	w0, [x0, #2855]
  457c54:	cmp	w0, #0x8
  457c58:	b.ne	457bb0 <_obstack_memory_used@@Base+0xe150>  // b.any
  457c5c:	str	x2, [sp, #120]
  457c60:	tbz	x1, #62, 457c68 <_obstack_memory_used@@Base+0xe208>
  457c64:	strb	wzr, [sp, #1015]
  457c68:	add	x0, sp, #0x78
  457c6c:	str	x0, [x28, #248]
  457c70:	b	45797c <_obstack_memory_used@@Base+0xdf1c>
  457c74:	nop
  457c78:	sub	sp, sp, #0x6d0
  457c7c:	stp	x29, x30, [sp]
  457c80:	mov	x29, sp
  457c84:	xpaclri
  457c88:	stp	x19, x20, [sp, #16]
  457c8c:	mov	x19, x0
  457c90:	mov	x20, x30
  457c94:	stp	x21, x22, [sp, #32]
  457c98:	mov	x22, x1
  457c9c:	mov	x21, x2
  457ca0:	mov	w1, #0x0                   	// #0
  457ca4:	mov	x2, #0x3c0                 	// #960
  457ca8:	str	x23, [sp, #48]
  457cac:	bl	4026f0 <memset@plt>
  457cb0:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  457cb4:	str	x20, [x19, #792]
  457cb8:	str	x0, [x19, #832]
  457cbc:	add	x23, sp, #0x50
  457cc0:	mov	x1, x23
  457cc4:	mov	x0, x19
  457cc8:	bl	456af8 <_obstack_memory_used@@Base+0xd098>
  457ccc:	cbnz	w0, 457ec0 <_obstack_memory_used@@Base+0xe460>
  457cd0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x415a0>
  457cd4:	adrp	x20, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457cd8:	ldr	x0, [x0, #3880]
  457cdc:	cbz	x0, 457d64 <_obstack_memory_used@@Base+0xe304>
  457ce0:	add	x0, x20, #0xb08
  457ce4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xc5a0>
  457ce8:	add	x0, x0, #0x64
  457cec:	add	x1, x1, #0x9a0
  457cf0:	bl	402860 <pthread_once@plt>
  457cf4:	cbnz	w0, 457d64 <_obstack_memory_used@@Base+0xe304>
  457cf8:	add	x20, x20, #0xb08
  457cfc:	ldrb	w0, [x20, #31]
  457d00:	cmp	w0, #0x8
  457d04:	b.ne	457ec0 <_obstack_memory_used@@Base+0xe460>  // b.any
  457d08:	ldr	x0, [x19, #832]
  457d0c:	str	x22, [sp, #72]
  457d10:	tbz	x0, #62, 457d18 <_obstack_memory_used@@Base+0xe2b8>
  457d14:	strb	wzr, [x19, #887]
  457d18:	add	x0, sp, #0x48
  457d1c:	mov	x3, #0x1f                  	// #31
  457d20:	mov	w2, #0x1                   	// #1
  457d24:	str	x0, [x19, #248]
  457d28:	mov	x1, x23
  457d2c:	mov	x0, x19
  457d30:	str	xzr, [sp, #1656]
  457d34:	str	x3, [sp, #1664]
  457d38:	str	w2, [sp, #1680]
  457d3c:	bl	457928 <_obstack_memory_used@@Base+0xdec8>
  457d40:	mov	x30, x21
  457d44:	xpaclri
  457d48:	ldp	x21, x22, [sp, #32]
  457d4c:	ldr	x23, [sp, #48]
  457d50:	str	x30, [x19, #792]
  457d54:	ldp	x29, x30, [sp]
  457d58:	ldp	x19, x20, [sp, #16]
  457d5c:	add	sp, sp, #0x6d0
  457d60:	ret
  457d64:	ldrb	w0, [x20, #2824]
  457d68:	add	x3, x20, #0xb08
  457d6c:	cbnz	w0, 457cf8 <_obstack_memory_used@@Base+0xe298>
  457d70:	mov	w4, #0x8                   	// #8
  457d74:	strb	w4, [x20, #2824]
  457d78:	strb	w4, [x3, #1]
  457d7c:	strb	w4, [x3, #2]
  457d80:	strb	w4, [x3, #3]
  457d84:	strb	w4, [x3, #4]
  457d88:	strb	w4, [x3, #5]
  457d8c:	strb	w4, [x3, #6]
  457d90:	strb	w4, [x3, #7]
  457d94:	strb	w4, [x3, #8]
  457d98:	strb	w4, [x3, #9]
  457d9c:	strb	w4, [x3, #10]
  457da0:	strb	w4, [x3, #11]
  457da4:	strb	w4, [x3, #12]
  457da8:	strb	w4, [x3, #13]
  457dac:	strb	w4, [x3, #14]
  457db0:	strb	w4, [x3, #15]
  457db4:	strb	w4, [x3, #16]
  457db8:	strb	w4, [x3, #17]
  457dbc:	strb	w4, [x3, #18]
  457dc0:	strb	w4, [x3, #19]
  457dc4:	strb	w4, [x3, #20]
  457dc8:	strb	w4, [x3, #21]
  457dcc:	strb	w4, [x3, #22]
  457dd0:	strb	w4, [x3, #23]
  457dd4:	strb	w4, [x3, #24]
  457dd8:	strb	w4, [x3, #25]
  457ddc:	strb	w4, [x3, #26]
  457de0:	strb	w4, [x3, #27]
  457de4:	strb	w4, [x3, #28]
  457de8:	strb	w4, [x3, #29]
  457dec:	strb	w4, [x3, #30]
  457df0:	strb	w4, [x3, #31]
  457df4:	strb	w4, [x3, #64]
  457df8:	strb	w4, [x3, #46]
  457dfc:	strb	w4, [x3, #65]
  457e00:	strb	w4, [x3, #66]
  457e04:	strb	w4, [x3, #67]
  457e08:	strb	w4, [x3, #68]
  457e0c:	strb	w4, [x3, #69]
  457e10:	strb	w4, [x3, #70]
  457e14:	strb	w4, [x3, #71]
  457e18:	strb	w4, [x3, #72]
  457e1c:	strb	w4, [x3, #73]
  457e20:	strb	w4, [x3, #74]
  457e24:	strb	w4, [x3, #75]
  457e28:	strb	w4, [x3, #76]
  457e2c:	strb	w4, [x3, #77]
  457e30:	strb	w4, [x3, #78]
  457e34:	strb	w4, [x3, #79]
  457e38:	strb	w4, [x3, #80]
  457e3c:	strb	w4, [x3, #81]
  457e40:	strb	w4, [x3, #82]
  457e44:	strb	w4, [x3, #83]
  457e48:	strb	w4, [x3, #84]
  457e4c:	strb	w4, [x3, #85]
  457e50:	strb	w4, [x3, #86]
  457e54:	strb	w4, [x3, #87]
  457e58:	strb	w4, [x3, #88]
  457e5c:	strb	w4, [x3, #89]
  457e60:	strb	w4, [x3, #90]
  457e64:	strb	w4, [x3, #91]
  457e68:	strb	w4, [x3, #92]
  457e6c:	strb	w4, [x3, #93]
  457e70:	strb	w4, [x3, #94]
  457e74:	strb	w4, [x3, #95]
  457e78:	strb	w4, [x3, #48]
  457e7c:	strb	w4, [x3, #49]
  457e80:	strb	w4, [x3, #50]
  457e84:	strb	w4, [x3, #51]
  457e88:	strb	w4, [x3, #52]
  457e8c:	strb	w4, [x3, #53]
  457e90:	strb	w4, [x3, #54]
  457e94:	strb	w4, [x3, #55]
  457e98:	strb	w4, [x3, #56]
  457e9c:	strb	w4, [x3, #57]
  457ea0:	strb	w4, [x3, #58]
  457ea4:	strb	w4, [x3, #59]
  457ea8:	strb	w4, [x3, #60]
  457eac:	strb	w4, [x3, #61]
  457eb0:	strb	w4, [x3, #62]
  457eb4:	strb	w4, [x3, #63]
  457eb8:	strb	w4, [x3, #96]
  457ebc:	b	457cf8 <_obstack_memory_used@@Base+0xe298>
  457ec0:	bl	4027f0 <abort@plt>
  457ec4:	nop
  457ec8:	stp	x29, x30, [sp, #-32]!
  457ecc:	mov	x29, sp
  457ed0:	stp	x19, x20, [sp, #16]
  457ed4:	mov	x20, x1
  457ed8:	mov	x19, x0
  457edc:	bl	457928 <_obstack_memory_used@@Base+0xdec8>
  457ee0:	ldr	x0, [x20, #1640]
  457ee4:	add	x1, x20, x0, lsl #4
  457ee8:	ldr	w1, [x1, #8]
  457eec:	cmp	w1, #0x6
  457ef0:	b.ne	457f04 <_obstack_memory_used@@Base+0xe4a4>  // b.any
  457ef4:	str	xzr, [x19, #792]
  457ef8:	ldp	x19, x20, [sp, #16]
  457efc:	ldp	x29, x30, [sp], #32
  457f00:	ret
  457f04:	cmp	w0, #0x61
  457f08:	b.gt	457f78 <_obstack_memory_used@@Base+0xe518>
  457f0c:	ldr	x2, [x19, #832]
  457f10:	sxtw	x1, w0
  457f14:	ldr	x17, [x19, x1, lsl #3]
  457f18:	tbz	x2, #62, 457f28 <_obstack_memory_used@@Base+0xe4c8>
  457f1c:	add	x2, x19, x1
  457f20:	ldrb	w2, [x2, #856]
  457f24:	cbnz	w2, 457f48 <_obstack_memory_used@@Base+0xe4e8>
  457f28:	cmp	w0, #0x2e
  457f2c:	b.eq	457f6c <_obstack_memory_used@@Base+0xe50c>  // b.none
  457f30:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  457f34:	add	x0, x0, #0xb08
  457f38:	ldrb	w0, [x0, x1]
  457f3c:	cmp	w0, #0x8
  457f40:	b.ne	457f78 <_obstack_memory_used@@Base+0xe518>  // b.any
  457f44:	ldr	x17, [x17]
  457f48:	ldr	x0, [x20, #544]
  457f4c:	str	x17, [x19, #792]
  457f50:	tbz	w0, #0, 457f5c <_obstack_memory_used@@Base+0xe4fc>
  457f54:	ldr	x16, [x19, #784]
  457f58:	autia1716
  457f5c:	str	x17, [x19, #792]
  457f60:	ldp	x19, x20, [sp, #16]
  457f64:	ldp	x29, x30, [sp], #32
  457f68:	ret
  457f6c:	cntd	x0
  457f70:	sxtw	x17, w0
  457f74:	b	457f48 <_obstack_memory_used@@Base+0xe4e8>
  457f78:	bl	4027f0 <abort@plt>
  457f7c:	nop
  457f80:	sub	sp, sp, #0x6c0
  457f84:	stp	x29, x30, [sp]
  457f88:	mov	x29, sp
  457f8c:	stp	x19, x20, [sp, #16]
  457f90:	mov	x19, x1
  457f94:	stp	x21, x22, [sp, #32]
  457f98:	mov	x21, x0
  457f9c:	add	x22, sp, #0x40
  457fa0:	stp	x23, x24, [sp, #48]
  457fa4:	mov	x24, x2
  457fa8:	mov	x23, #0x1                   	// #1
  457fac:	nop
  457fb0:	mov	x1, x22
  457fb4:	mov	x0, x19
  457fb8:	bl	456af8 <_obstack_memory_used@@Base+0xd098>
  457fbc:	ldr	x3, [x19, #784]
  457fc0:	ldr	x1, [x19, #832]
  457fc4:	ldr	x2, [x21, #24]
  457fc8:	sub	x1, x3, x1, lsr #63
  457fcc:	cmp	x2, x1
  457fd0:	cset	w20, eq  // eq = none
  457fd4:	lsl	w20, w20, #2
  457fd8:	cbnz	w0, 458024 <_obstack_memory_used@@Base+0xe5c4>
  457fdc:	ldr	x5, [sp, #1680]
  457fe0:	cbz	x5, 45800c <_obstack_memory_used@@Base+0xe5ac>
  457fe4:	ldr	x2, [x21]
  457fe8:	mov	x4, x19
  457fec:	mov	x3, x21
  457ff0:	orr	w1, w20, #0x2
  457ff4:	mov	w0, #0x1                   	// #1
  457ff8:	blr	x5
  457ffc:	cmp	w0, #0x7
  458000:	b.eq	458040 <_obstack_memory_used@@Base+0xe5e0>  // b.none
  458004:	cmp	w0, #0x8
  458008:	b.ne	458024 <_obstack_memory_used@@Base+0xe5c4>  // b.any
  45800c:	cbnz	w20, 45805c <_obstack_memory_used@@Base+0xe5fc>
  458010:	add	x23, x23, #0x1
  458014:	mov	x1, x22
  458018:	mov	x0, x19
  45801c:	bl	457ec8 <_obstack_memory_used@@Base+0xe468>
  458020:	b	457fb0 <_obstack_memory_used@@Base+0xe550>
  458024:	mov	w0, #0x2                   	// #2
  458028:	ldp	x29, x30, [sp]
  45802c:	ldp	x19, x20, [sp, #16]
  458030:	ldp	x21, x22, [sp, #32]
  458034:	ldp	x23, x24, [sp, #48]
  458038:	add	sp, sp, #0x6c0
  45803c:	ret
  458040:	str	x23, [x24]
  458044:	ldp	x29, x30, [sp]
  458048:	ldp	x19, x20, [sp, #16]
  45804c:	ldp	x21, x22, [sp, #32]
  458050:	ldp	x23, x24, [sp, #48]
  458054:	add	sp, sp, #0x6c0
  458058:	ret
  45805c:	bl	4027f0 <abort@plt>
  458060:	sub	sp, sp, #0x6d0
  458064:	stp	x29, x30, [sp]
  458068:	mov	x29, sp
  45806c:	stp	x19, x20, [sp, #16]
  458070:	mov	x20, x0
  458074:	stp	x21, x22, [sp, #32]
  458078:	mov	x21, x1
  45807c:	add	x22, sp, #0x50
  458080:	stp	x23, x24, [sp, #48]
  458084:	mov	x23, #0x1                   	// #1
  458088:	stp	x25, x26, [sp, #64]
  45808c:	mov	x26, x2
  458090:	ldp	x25, x24, [x0, #16]
  458094:	b	4580e8 <_obstack_memory_used@@Base+0xe688>
  458098:	blr	x25
  45809c:	mov	w2, w0
  4580a0:	mov	x4, x21
  4580a4:	mov	x3, x20
  4580a8:	mov	w1, #0xa                   	// #10
  4580ac:	mov	w0, #0x1                   	// #1
  4580b0:	cbnz	w2, 458134 <_obstack_memory_used@@Base+0xe6d4>
  4580b4:	ldr	x5, [sp, #1696]
  4580b8:	cbz	x5, 4580d8 <_obstack_memory_used@@Base+0xe678>
  4580bc:	ldr	x2, [x20]
  4580c0:	blr	x5
  4580c4:	mov	w19, w0
  4580c8:	cmp	w0, #0x7
  4580cc:	b.eq	458158 <_obstack_memory_used@@Base+0xe6f8>  // b.none
  4580d0:	cmp	w0, #0x8
  4580d4:	b.ne	458134 <_obstack_memory_used@@Base+0xe6d4>  // b.any
  4580d8:	add	x23, x23, #0x1
  4580dc:	mov	x1, x22
  4580e0:	mov	x0, x21
  4580e4:	bl	457ec8 <_obstack_memory_used@@Base+0xe468>
  4580e8:	mov	x1, x22
  4580ec:	mov	x0, x21
  4580f0:	bl	456af8 <_obstack_memory_used@@Base+0xd098>
  4580f4:	cmp	w0, #0x0
  4580f8:	mov	w19, w0
  4580fc:	mov	x5, x24
  458100:	mov	x4, x21
  458104:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  458108:	b.ne	458134 <_obstack_memory_used@@Base+0xe6d4>  // b.any
  45810c:	cmp	w0, #0x5
  458110:	mov	x3, x20
  458114:	mov	w1, #0xa                   	// #10
  458118:	mov	w0, #0x1                   	// #1
  45811c:	ldr	x2, [x20]
  458120:	b.ne	458098 <_obstack_memory_used@@Base+0xe638>  // b.any
  458124:	mov	w1, #0x1a                  	// #26
  458128:	mov	w0, #0x1                   	// #1
  45812c:	blr	x25
  458130:	cbz	w0, 458158 <_obstack_memory_used@@Base+0xe6f8>
  458134:	mov	w19, #0x2                   	// #2
  458138:	mov	w0, w19
  45813c:	ldp	x29, x30, [sp]
  458140:	ldp	x19, x20, [sp, #16]
  458144:	ldp	x21, x22, [sp, #32]
  458148:	ldp	x23, x24, [sp, #48]
  45814c:	ldp	x25, x26, [sp, #64]
  458150:	add	sp, sp, #0x6d0
  458154:	ret
  458158:	str	x23, [x26]
  45815c:	mov	w0, w19
  458160:	ldp	x29, x30, [sp]
  458164:	ldp	x19, x20, [sp, #16]
  458168:	ldp	x21, x22, [sp, #32]
  45816c:	ldp	x23, x24, [sp, #48]
  458170:	ldp	x25, x26, [sp, #64]
  458174:	add	sp, sp, #0x6d0
  458178:	ret
  45817c:	nop
  458180:	cmp	w1, #0x61
  458184:	b.gt	4581dc <_obstack_memory_used@@Base+0xe77c>
  458188:	ldr	x4, [x0, #832]
  45818c:	sxtw	x3, w1
  458190:	ldr	x2, [x0, x3, lsl #3]
  458194:	tbz	x4, #62, 4581a4 <_obstack_memory_used@@Base+0xe744>
  458198:	add	x0, x0, x3
  45819c:	ldrb	w0, [x0, #856]
  4581a0:	cbnz	w0, 4581d4 <_obstack_memory_used@@Base+0xe774>
  4581a4:	cmp	w1, #0x2e
  4581a8:	b.eq	4581c8 <_obstack_memory_used@@Base+0xe768>  // b.none
  4581ac:	adrp	x0, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4581b0:	add	x0, x0, #0xb08
  4581b4:	ldrb	w0, [x0, w1, sxtw]
  4581b8:	cmp	w0, #0x8
  4581bc:	b.ne	4581dc <_obstack_memory_used@@Base+0xe77c>  // b.any
  4581c0:	ldr	x0, [x2]
  4581c4:	ret
  4581c8:	cntd	x0
  4581cc:	sxtw	x0, w0
  4581d0:	ret
  4581d4:	mov	x0, x2
  4581d8:	ret
  4581dc:	stp	x29, x30, [sp, #-16]!
  4581e0:	mov	x29, sp
  4581e4:	bl	4027f0 <abort@plt>
  4581e8:	ldr	x0, [x0, #784]
  4581ec:	ret
  4581f0:	cmp	w1, #0x61
  4581f4:	b.gt	458238 <_obstack_memory_used@@Base+0xe7d8>
  4581f8:	ldr	x5, [x0, #832]
  4581fc:	adrp	x3, 48d000 <__environ@@GLIBC_2.17+0xa68>
  458200:	add	x3, x3, #0xb08
  458204:	sxtw	x4, w1
  458208:	ldrb	w1, [x3, w1, sxtw]
  45820c:	tbz	x5, #62, 45821c <_obstack_memory_used@@Base+0xe7bc>
  458210:	add	x3, x0, x4
  458214:	ldrb	w3, [x3, #856]
  458218:	cbnz	w3, 458230 <_obstack_memory_used@@Base+0xe7d0>
  45821c:	cmp	w1, #0x8
  458220:	ldr	x0, [x0, x4, lsl #3]
  458224:	b.ne	458238 <_obstack_memory_used@@Base+0xe7d8>  // b.any
  458228:	str	x2, [x0]
  45822c:	ret
  458230:	str	x2, [x0, x4, lsl #3]
  458234:	ret
  458238:	stp	x29, x30, [sp, #-16]!
  45823c:	mov	x29, sp
  458240:	bl	4027f0 <abort@plt>
  458244:	nop
  458248:	ldr	x0, [x0, #792]
  45824c:	ret
  458250:	ldr	x2, [x0, #832]
  458254:	ldr	x0, [x0, #792]
  458258:	lsr	x2, x2, #63
  45825c:	str	w2, [x1]
  458260:	ret
  458264:	nop
  458268:	str	x1, [x0, #792]
  45826c:	ret
  458270:	ldr	x0, [x0, #800]
  458274:	ret
  458278:	ldr	x0, [x0, #824]
  45827c:	ret
  458280:	stp	x29, x30, [sp, #-48]!
  458284:	sub	x0, x0, #0x1
  458288:	mov	x29, sp
  45828c:	add	x1, sp, #0x18
  458290:	bl	45a238 <_obstack_memory_used@@Base+0x107d8>
  458294:	ldr	x1, [sp, #40]
  458298:	cmp	x0, #0x0
  45829c:	ldp	x29, x30, [sp], #48
  4582a0:	csel	x0, x1, x0, ne  // ne = any
  4582a4:	ret
  4582a8:	ldr	x0, [x0, #816]
  4582ac:	ret
  4582b0:	ldr	x0, [x0, #808]
  4582b4:	ret
  4582b8:	sub	sp, sp, #0xa70
  4582bc:	mov	x2, #0x3c0                 	// #960
  4582c0:	add	x3, sp, #0x30
  4582c4:	stp	x29, x30, [sp]
  4582c8:	mov	x29, sp
  4582cc:	stp	x19, x20, [sp, #16]
  4582d0:	mov	x20, x1
  4582d4:	mov	w1, #0x0                   	// #0
  4582d8:	str	x21, [sp, #32]
  4582dc:	mov	x21, x0
  4582e0:	mov	x0, x3
  4582e4:	bl	4026f0 <memset@plt>
  4582e8:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  4582ec:	add	x19, sp, #0x3f0
  4582f0:	add	x21, x21, #0x1
  4582f4:	mov	x1, x19
  4582f8:	str	x21, [sp, #840]
  4582fc:	str	x2, [sp, #880]
  458300:	bl	456af8 <_obstack_memory_used@@Base+0xd098>
  458304:	cbnz	w0, 4583b0 <_obstack_memory_used@@Base+0xe950>
  458308:	ldr	w0, [sp, #2608]
  45830c:	cmp	w0, #0x2
  458310:	b.eq	4583b0 <_obstack_memory_used@@Base+0xe950>  // b.none
  458314:	sub	x4, x20, x20, lsl #3
  458318:	mov	x1, #0xffffffffffffe680    	// #-6528
  45831c:	mov	x0, x19
  458320:	add	x5, x19, #0x620
  458324:	add	x4, x4, x1
  458328:	add	x2, x20, #0x334
  45832c:	b	458344 <_obstack_memory_used@@Base+0xe8e4>
  458330:	str	xzr, [x4, x2, lsl #3]
  458334:	add	x0, x0, #0x10
  458338:	add	x2, x2, #0x1
  45833c:	cmp	x0, x5
  458340:	b.eq	458374 <_obstack_memory_used@@Base+0xe914>  // b.none
  458344:	ldrb	w3, [x0, #8]
  458348:	strb	w3, [x2]
  45834c:	cmp	w3, #0x1
  458350:	b.eq	45835c <_obstack_memory_used@@Base+0xe8fc>  // b.none
  458354:	cmp	w3, #0x2
  458358:	b.ne	458330 <_obstack_memory_used@@Base+0xe8d0>  // b.any
  45835c:	ldr	x3, [x0]
  458360:	str	x3, [x4, x2, lsl #3]
  458364:	add	x0, x0, #0x10
  458368:	add	x2, x2, #0x1
  45836c:	cmp	x0, x5
  458370:	b.ne	458344 <_obstack_memory_used@@Base+0xe8e4>  // b.any
  458374:	ldr	x1, [sp, #896]
  458378:	mov	x0, x20
  45837c:	ldr	x2, [sp, #2584]
  458380:	stp	x2, x1, [x20, #16]
  458384:	ldr	x2, [sp, #2592]
  458388:	strh	w2, [x20, #816]
  45838c:	ldr	x1, [sp, #2648]
  458390:	strh	w1, [x20, #818]
  458394:	ldr	x2, [sp, #2664]
  458398:	str	x2, [x20, #8]
  45839c:	ldp	x29, x30, [sp]
  4583a0:	ldp	x19, x20, [sp, #16]
  4583a4:	ldr	x21, [sp, #32]
  4583a8:	add	sp, sp, #0xa70
  4583ac:	ret
  4583b0:	mov	x0, #0x0                   	// #0
  4583b4:	ldp	x29, x30, [sp]
  4583b8:	ldp	x19, x20, [sp, #16]
  4583bc:	ldr	x21, [sp, #32]
  4583c0:	add	sp, sp, #0xa70
  4583c4:	ret
  4583c8:	ret
  4583cc:	nop
  4583d0:	sub	sp, sp, #0xec0
  4583d4:	stp	x29, x30, [sp]
  4583d8:	mov	x29, sp
  4583dc:	stp	x21, x22, [sp, #64]
  4583e0:	add	x21, sp, #0xc0
  4583e4:	add	x22, sp, #0x840
  4583e8:	stp	x0, x1, [sp, #16]
  4583ec:	add	x1, sp, #0xec0
  4583f0:	stp	x2, x3, [sp, #32]
  4583f4:	mov	x2, x30
  4583f8:	stp	x19, x20, [sp, #48]
  4583fc:	mov	x20, x0
  458400:	add	x19, sp, #0x480
  458404:	mov	x0, x21
  458408:	stp	x23, x24, [sp, #80]
  45840c:	stp	x25, x26, [sp, #96]
  458410:	stp	x27, x28, [sp, #112]
  458414:	stp	d8, d9, [sp, #128]
  458418:	stp	d10, d11, [sp, #144]
  45841c:	stp	d12, d13, [sp, #160]
  458420:	stp	d14, d15, [sp, #176]
  458424:	bl	457c78 <_obstack_memory_used@@Base+0xe218>
  458428:	mov	x1, x21
  45842c:	mov	x0, x19
  458430:	mov	x2, #0x3c0                 	// #960
  458434:	bl	402490 <memcpy@plt>
  458438:	b	45846c <_obstack_memory_used@@Base+0xea0c>
  45843c:	cbnz	w2, 4584d8 <_obstack_memory_used@@Base+0xea78>
  458440:	ldr	x5, [sp, #3728]
  458444:	cbz	x5, 458460 <_obstack_memory_used@@Base+0xea00>
  458448:	ldr	x2, [x20]
  45844c:	blr	x5
  458450:	cmp	w0, #0x6
  458454:	b.eq	4584e0 <_obstack_memory_used@@Base+0xea80>  // b.none
  458458:	cmp	w0, #0x8
  45845c:	b.ne	4584d8 <_obstack_memory_used@@Base+0xea78>  // b.any
  458460:	mov	x1, x22
  458464:	mov	x0, x19
  458468:	bl	457ec8 <_obstack_memory_used@@Base+0xe468>
  45846c:	mov	x1, x22
  458470:	mov	x0, x19
  458474:	bl	456af8 <_obstack_memory_used@@Base+0xd098>
  458478:	mov	w2, w0
  45847c:	mov	w1, #0x1                   	// #1
  458480:	mov	x4, x19
  458484:	mov	x3, x20
  458488:	mov	w0, w1
  45848c:	cmp	w2, #0x5
  458490:	b.ne	45843c <_obstack_memory_used@@Base+0xe9dc>  // b.any
  458494:	mov	x4, #0x0                   	// #0
  458498:	mov	w0, w2
  45849c:	ldp	x29, x30, [sp]
  4584a0:	ldp	x0, x1, [sp, #16]
  4584a4:	ldp	x2, x3, [sp, #32]
  4584a8:	ldp	x19, x20, [sp, #48]
  4584ac:	ldp	x21, x22, [sp, #64]
  4584b0:	ldp	x23, x24, [sp, #80]
  4584b4:	ldp	x25, x26, [sp, #96]
  4584b8:	ldp	x27, x28, [sp, #112]
  4584bc:	ldp	d8, d9, [sp, #128]
  4584c0:	ldp	d10, d11, [sp, #144]
  4584c4:	ldp	d12, d13, [sp, #160]
  4584c8:	ldp	d14, d15, [sp, #176]
  4584cc:	add	sp, sp, #0xec0
  4584d0:	add	sp, sp, x4
  4584d4:	ret
  4584d8:	mov	w2, #0x3                   	// #3
  4584dc:	b	458494 <_obstack_memory_used@@Base+0xea34>
  4584e0:	ldr	x4, [sp, #1936]
  4584e4:	mov	x1, x21
  4584e8:	ldr	x3, [sp, #1984]
  4584ec:	mov	x2, #0x3c0                 	// #960
  4584f0:	mov	x0, x19
  4584f4:	sub	x3, x4, x3, lsr #63
  4584f8:	stp	xzr, x3, [x20, #16]
  4584fc:	bl	402490 <memcpy@plt>
  458500:	mov	x2, x22
  458504:	mov	x1, x19
  458508:	mov	x0, x20
  45850c:	bl	457f80 <_obstack_memory_used@@Base+0xe520>
  458510:	mov	w2, w0
  458514:	cmp	w0, #0x7
  458518:	b.ne	458494 <_obstack_memory_used@@Base+0xea34>  // b.any
  45851c:	mov	x1, x19
  458520:	mov	x0, x21
  458524:	bl	457050 <_obstack_memory_used@@Base+0xd5f0>
  458528:	mov	x4, x0
  45852c:	ldr	x2, [sp, #1024]
  458530:	ldr	x1, [sp, #1944]
  458534:	tbz	x2, #61, 458548 <_obstack_memory_used@@Base+0xeae8>
  458538:	mov	x17, x1
  45853c:	ldr	x16, [sp, #976]
  458540:	pacia1716
  458544:	mov	x1, x17
  458548:	ldr	x0, [sp, #1936]
  45854c:	bl	4583c8 <_obstack_memory_used@@Base+0xe968>
  458550:	str	x1, [x29, #8]
  458554:	b	458498 <_obstack_memory_used@@Base+0xea38>
  458558:	sub	sp, sp, #0x850
  45855c:	stp	x29, x30, [sp]
  458560:	mov	x29, sp
  458564:	stp	x19, x20, [sp, #48]
  458568:	mov	x19, x0
  45856c:	mov	x20, x2
  458570:	stp	x21, x22, [sp, #64]
  458574:	add	x22, sp, #0xd0
  458578:	mov	x21, x1
  45857c:	stp	x0, x1, [sp, #16]
  458580:	mov	x0, x22
  458584:	add	x1, sp, #0x850
  458588:	stp	x2, x3, [sp, #32]
  45858c:	mov	x2, x30
  458590:	stp	x23, x24, [sp, #80]
  458594:	add	x23, sp, #0x490
  458598:	stp	x25, x26, [sp, #96]
  45859c:	stp	x27, x28, [sp, #112]
  4585a0:	stp	d8, d9, [sp, #128]
  4585a4:	stp	d10, d11, [sp, #144]
  4585a8:	stp	d12, d13, [sp, #160]
  4585ac:	stp	d14, d15, [sp, #176]
  4585b0:	bl	457c78 <_obstack_memory_used@@Base+0xe218>
  4585b4:	mov	x1, x22
  4585b8:	mov	x2, #0x3c0                 	// #960
  4585bc:	mov	x0, x23
  4585c0:	bl	402490 <memcpy@plt>
  4585c4:	stp	x21, x20, [x19, #16]
  4585c8:	mov	x0, x19
  4585cc:	mov	x1, x23
  4585d0:	add	x2, sp, #0xc8
  4585d4:	bl	458060 <_obstack_memory_used@@Base+0xe600>
  4585d8:	cmp	w0, #0x7
  4585dc:	mov	x4, #0x0                   	// #0
  4585e0:	b.eq	458620 <_obstack_memory_used@@Base+0xebc0>  // b.none
  4585e4:	ldp	x29, x30, [sp]
  4585e8:	ldp	x0, x1, [sp, #16]
  4585ec:	ldp	x2, x3, [sp, #32]
  4585f0:	ldp	x19, x20, [sp, #48]
  4585f4:	ldp	x21, x22, [sp, #64]
  4585f8:	ldp	x23, x24, [sp, #80]
  4585fc:	ldp	x25, x26, [sp, #96]
  458600:	ldp	x27, x28, [sp, #112]
  458604:	ldp	d8, d9, [sp, #128]
  458608:	ldp	d10, d11, [sp, #144]
  45860c:	ldp	d12, d13, [sp, #160]
  458610:	ldp	d14, d15, [sp, #176]
  458614:	add	sp, sp, #0x850
  458618:	add	sp, sp, x4
  45861c:	ret
  458620:	mov	x1, x23
  458624:	mov	x0, x22
  458628:	bl	457050 <_obstack_memory_used@@Base+0xd5f0>
  45862c:	mov	x4, x0
  458630:	ldr	x2, [sp, #1040]
  458634:	ldr	x1, [sp, #1960]
  458638:	tbz	x2, #61, 45864c <_obstack_memory_used@@Base+0xebec>
  45863c:	mov	x17, x1
  458640:	ldr	x16, [sp, #992]
  458644:	pacia1716
  458648:	mov	x1, x17
  45864c:	ldr	x0, [sp, #1952]
  458650:	bl	4583c8 <_obstack_memory_used@@Base+0xe968>
  458654:	str	x1, [x29, #8]
  458658:	b	4585e4 <_obstack_memory_used@@Base+0xeb84>
  45865c:	nop
  458660:	sub	sp, sp, #0x850
  458664:	stp	x29, x30, [sp]
  458668:	mov	x29, sp
  45866c:	stp	x19, x20, [sp, #48]
  458670:	mov	x19, x0
  458674:	add	x20, sp, #0xd0
  458678:	stp	x0, x1, [sp, #16]
  45867c:	mov	x0, x20
  458680:	add	x1, sp, #0x850
  458684:	stp	x2, x3, [sp, #32]
  458688:	mov	x2, x30
  45868c:	stp	x21, x22, [sp, #64]
  458690:	add	x21, sp, #0x490
  458694:	stp	x23, x24, [sp, #80]
  458698:	stp	x25, x26, [sp, #96]
  45869c:	stp	x27, x28, [sp, #112]
  4586a0:	stp	d8, d9, [sp, #128]
  4586a4:	stp	d10, d11, [sp, #144]
  4586a8:	stp	d12, d13, [sp, #160]
  4586ac:	stp	d14, d15, [sp, #176]
  4586b0:	bl	457c78 <_obstack_memory_used@@Base+0xe218>
  4586b4:	mov	x1, x20
  4586b8:	mov	x0, x21
  4586bc:	mov	x2, #0x3c0                 	// #960
  4586c0:	bl	402490 <memcpy@plt>
  4586c4:	ldr	x0, [x19, #16]
  4586c8:	cbnz	x0, 458758 <_obstack_memory_used@@Base+0xecf8>
  4586cc:	mov	x0, x19
  4586d0:	add	x2, sp, #0xc8
  4586d4:	mov	x1, x21
  4586d8:	bl	457f80 <_obstack_memory_used@@Base+0xe520>
  4586dc:	cmp	w0, #0x7
  4586e0:	b.ne	45876c <_obstack_memory_used@@Base+0xed0c>  // b.any
  4586e4:	mov	x1, x21
  4586e8:	mov	x0, x20
  4586ec:	bl	457050 <_obstack_memory_used@@Base+0xd5f0>
  4586f0:	mov	x4, x0
  4586f4:	ldr	x2, [sp, #1040]
  4586f8:	ldr	x1, [sp, #1960]
  4586fc:	tbz	x2, #61, 458710 <_obstack_memory_used@@Base+0xecb0>
  458700:	mov	x17, x1
  458704:	ldr	x16, [sp, #992]
  458708:	pacia1716
  45870c:	mov	x1, x17
  458710:	ldr	x0, [sp, #1952]
  458714:	bl	4583c8 <_obstack_memory_used@@Base+0xe968>
  458718:	str	x1, [x29, #8]
  45871c:	ldp	x29, x30, [sp]
  458720:	ldp	x0, x1, [sp, #16]
  458724:	ldp	x2, x3, [sp, #32]
  458728:	ldp	x19, x20, [sp, #48]
  45872c:	ldp	x21, x22, [sp, #64]
  458730:	ldp	x23, x24, [sp, #80]
  458734:	ldp	x25, x26, [sp, #96]
  458738:	ldp	x27, x28, [sp, #112]
  45873c:	ldp	d8, d9, [sp, #128]
  458740:	ldp	d10, d11, [sp, #144]
  458744:	ldp	d12, d13, [sp, #160]
  458748:	ldp	d14, d15, [sp, #176]
  45874c:	add	sp, sp, #0x850
  458750:	add	sp, sp, x4
  458754:	ret
  458758:	mov	x0, x19
  45875c:	add	x2, sp, #0xc8
  458760:	mov	x1, x21
  458764:	bl	458060 <_obstack_memory_used@@Base+0xe600>
  458768:	b	4586dc <_obstack_memory_used@@Base+0xec7c>
  45876c:	bl	4027f0 <abort@plt>
  458770:	sub	sp, sp, #0x850
  458774:	stp	x29, x30, [sp]
  458778:	mov	x29, sp
  45877c:	stp	x0, x1, [sp, #16]
  458780:	ldr	x1, [x0, #16]
  458784:	stp	x2, x3, [sp, #32]
  458788:	stp	x19, x20, [sp, #48]
  45878c:	mov	x19, x0
  458790:	stp	x21, x22, [sp, #64]
  458794:	stp	x23, x24, [sp, #80]
  458798:	stp	x25, x26, [sp, #96]
  45879c:	stp	x27, x28, [sp, #112]
  4587a0:	stp	d8, d9, [sp, #128]
  4587a4:	stp	d10, d11, [sp, #144]
  4587a8:	stp	d12, d13, [sp, #160]
  4587ac:	stp	d14, d15, [sp, #176]
  4587b0:	cbnz	x1, 4587f8 <_obstack_memory_used@@Base+0xed98>
  4587b4:	bl	4583d0 <_obstack_memory_used@@Base+0xe970>
  4587b8:	mov	x4, #0x0                   	// #0
  4587bc:	ldp	x29, x30, [sp]
  4587c0:	ldp	x0, x1, [sp, #16]
  4587c4:	ldp	x2, x3, [sp, #32]
  4587c8:	ldp	x19, x20, [sp, #48]
  4587cc:	ldp	x21, x22, [sp, #64]
  4587d0:	ldp	x23, x24, [sp, #80]
  4587d4:	ldp	x25, x26, [sp, #96]
  4587d8:	ldp	x27, x28, [sp, #112]
  4587dc:	ldp	d8, d9, [sp, #128]
  4587e0:	ldp	d10, d11, [sp, #144]
  4587e4:	ldp	d12, d13, [sp, #160]
  4587e8:	ldp	d14, d15, [sp, #176]
  4587ec:	add	sp, sp, #0x850
  4587f0:	add	sp, sp, x4
  4587f4:	ret
  4587f8:	add	x20, sp, #0xd0
  4587fc:	mov	x2, x30
  458800:	mov	x0, x20
  458804:	add	x1, sp, #0x850
  458808:	add	x21, sp, #0x490
  45880c:	bl	457c78 <_obstack_memory_used@@Base+0xe218>
  458810:	mov	x1, x20
  458814:	mov	x2, #0x3c0                 	// #960
  458818:	mov	x0, x21
  45881c:	bl	402490 <memcpy@plt>
  458820:	mov	x0, x19
  458824:	mov	x1, x21
  458828:	add	x2, sp, #0xc8
  45882c:	bl	458060 <_obstack_memory_used@@Base+0xe600>
  458830:	cmp	w0, #0x7
  458834:	b.ne	458874 <_obstack_memory_used@@Base+0xee14>  // b.any
  458838:	mov	x1, x21
  45883c:	mov	x0, x20
  458840:	bl	457050 <_obstack_memory_used@@Base+0xd5f0>
  458844:	mov	x4, x0
  458848:	ldr	x2, [sp, #1040]
  45884c:	ldr	x1, [sp, #1960]
  458850:	tbz	x2, #61, 458864 <_obstack_memory_used@@Base+0xee04>
  458854:	mov	x17, x1
  458858:	ldr	x16, [sp, #992]
  45885c:	pacia1716
  458860:	mov	x1, x17
  458864:	ldr	x0, [sp, #1952]
  458868:	bl	4583c8 <_obstack_memory_used@@Base+0xe968>
  45886c:	str	x1, [x29, #8]
  458870:	b	4587bc <_obstack_memory_used@@Base+0xed5c>
  458874:	bl	4027f0 <abort@plt>
  458878:	ldr	x2, [x0, #8]
  45887c:	mov	x1, x0
  458880:	cbz	x2, 458890 <_obstack_memory_used@@Base+0xee30>
  458884:	mov	x16, x2
  458888:	mov	w0, #0x1                   	// #1
  45888c:	br	x16
  458890:	ret
  458894:	nop
  458898:	sub	sp, sp, #0xae0
  45889c:	mov	x2, x30
  4588a0:	stp	x29, x30, [sp]
  4588a4:	mov	x29, sp
  4588a8:	stp	x19, x20, [sp, #16]
  4588ac:	add	x20, sp, #0xa0
  4588b0:	stp	x21, x22, [sp, #32]
  4588b4:	mov	x22, x1
  4588b8:	add	x21, sp, #0x460
  4588bc:	add	x1, sp, #0xae0
  4588c0:	stp	x23, x24, [sp, #48]
  4588c4:	mov	x23, x0
  4588c8:	mov	x0, x20
  4588cc:	stp	x25, x26, [sp, #64]
  4588d0:	stp	x27, x28, [sp, #80]
  4588d4:	stp	d8, d9, [sp, #96]
  4588d8:	stp	d10, d11, [sp, #112]
  4588dc:	stp	d12, d13, [sp, #128]
  4588e0:	stp	d14, d15, [sp, #144]
  4588e4:	bl	457c78 <_obstack_memory_used@@Base+0xe218>
  4588e8:	b	458908 <_obstack_memory_used@@Base+0xeea8>
  4588ec:	blr	x23
  4588f0:	cbnz	w0, 45892c <_obstack_memory_used@@Base+0xeecc>
  4588f4:	cmp	w19, #0x5
  4588f8:	b.eq	458930 <_obstack_memory_used@@Base+0xeed0>  // b.none
  4588fc:	mov	x1, x21
  458900:	mov	x0, x20
  458904:	bl	457ec8 <_obstack_memory_used@@Base+0xe468>
  458908:	mov	x1, x21
  45890c:	mov	x0, x20
  458910:	bl	456af8 <_obstack_memory_used@@Base+0xd098>
  458914:	mov	w19, w0
  458918:	cmp	w0, #0x0
  45891c:	mov	x1, x22
  458920:	mov	x0, x20
  458924:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  458928:	b.eq	4588ec <_obstack_memory_used@@Base+0xee8c>  // b.none
  45892c:	mov	w19, #0x3                   	// #3
  458930:	mov	w0, w19
  458934:	ldp	x29, x30, [sp]
  458938:	ldp	x19, x20, [sp, #16]
  45893c:	ldp	x21, x22, [sp, #32]
  458940:	ldp	x23, x24, [sp, #48]
  458944:	ldp	x25, x26, [sp, #64]
  458948:	ldp	x27, x28, [sp, #80]
  45894c:	ldp	d8, d9, [sp, #96]
  458950:	ldp	d10, d11, [sp, #112]
  458954:	ldp	d12, d13, [sp, #128]
  458958:	ldp	d14, d15, [sp, #144]
  45895c:	add	sp, sp, #0xae0
  458960:	ret
  458964:	nop
  458968:	ldr	x3, [x1, #8]
  45896c:	mov	w4, #0x1                   	// #1
  458970:	ldr	x1, [x2, #8]
  458974:	cmp	x3, x1
  458978:	csetm	w0, cc  // cc = lo, ul, last
  45897c:	csel	w0, w0, w4, ls  // ls = plast
  458980:	ret
  458984:	nop
  458988:	stp	x29, x30, [sp, #-112]!
  45898c:	mov	x29, sp
  458990:	stp	x21, x22, [sp, #32]
  458994:	lsl	w21, w3, #1
  458998:	stp	x25, x26, [sp, #64]
  45899c:	add	w25, w21, #0x1
  4589a0:	cmp	w25, w4
  4589a4:	b.ge	458a7c <_obstack_memory_used@@Base+0xf01c>  // b.tcont
  4589a8:	mov	w22, w3
  4589ac:	stp	x19, x20, [sp, #16]
  4589b0:	mov	x20, x2
  4589b4:	stp	x23, x24, [sp, #48]
  4589b8:	mov	w23, w4
  4589bc:	mov	x24, x1
  4589c0:	stp	x27, x28, [sp, #80]
  4589c4:	mov	x27, x0
  4589c8:	b	458a20 <_obstack_memory_used@@Base+0xefc0>
  4589cc:	ldr	x2, [x20, x26]
  4589d0:	blr	x24
  4589d4:	ldr	x3, [sp, #104]
  4589d8:	tbnz	w0, #31, 458a8c <_obstack_memory_used@@Base+0xf02c>
  4589dc:	ldr	x1, [x20, x28, lsl #3]
  4589e0:	mov	w21, w25
  4589e4:	sxtw	x26, w22
  4589e8:	mov	x2, x1
  4589ec:	mov	w22, w21
  4589f0:	mov	x0, x27
  4589f4:	lsl	w21, w21, #1
  4589f8:	ldr	x1, [x20, x26, lsl #3]
  4589fc:	blr	x24
  458a00:	tbz	w0, #31, 458a70 <_obstack_memory_used@@Base+0xf010>
  458a04:	ldr	x1, [x19]
  458a08:	add	w25, w21, #0x1
  458a0c:	ldr	x0, [x20, x26, lsl #3]
  458a10:	str	x1, [x20, x26, lsl #3]
  458a14:	str	x0, [x19]
  458a18:	cmp	w23, w25
  458a1c:	b.le	458a70 <_obstack_memory_used@@Base+0xf010>
  458a20:	sbfiz	x19, x25, #3, #32
  458a24:	sxtw	x28, w25
  458a28:	add	x26, x19, #0x8
  458a2c:	add	w21, w25, #0x1
  458a30:	add	x3, x20, x26
  458a34:	str	x3, [sp, #104]
  458a38:	cmp	w21, w23
  458a3c:	add	x19, x20, x19
  458a40:	mov	x0, x27
  458a44:	ldr	x1, [x20, x28, lsl #3]
  458a48:	b.lt	4589cc <_obstack_memory_used@@Base+0xef6c>  // b.tstop
  458a4c:	sxtw	x26, w22
  458a50:	mov	x2, x1
  458a54:	mov	w21, w25
  458a58:	mov	x0, x27
  458a5c:	mov	w22, w21
  458a60:	ldr	x1, [x20, x26, lsl #3]
  458a64:	lsl	w21, w21, #1
  458a68:	blr	x24
  458a6c:	tbnz	w0, #31, 458a04 <_obstack_memory_used@@Base+0xefa4>
  458a70:	ldp	x19, x20, [sp, #16]
  458a74:	ldp	x23, x24, [sp, #48]
  458a78:	ldp	x27, x28, [sp, #80]
  458a7c:	ldp	x21, x22, [sp, #32]
  458a80:	ldp	x25, x26, [sp, #64]
  458a84:	ldp	x29, x30, [sp], #112
  458a88:	ret
  458a8c:	mov	x19, x3
  458a90:	ldr	x1, [x20, x26]
  458a94:	b	4589e4 <_obstack_memory_used@@Base+0xef84>
  458a98:	stp	x29, x30, [sp, #-80]!
  458a9c:	mov	x29, sp
  458aa0:	stp	x19, x20, [sp, #16]
  458aa4:	ldr	x19, [x2, #8]
  458aa8:	stp	x21, x22, [sp, #32]
  458aac:	mov	x22, x2
  458ab0:	stp	x23, x24, [sp, #48]
  458ab4:	add	x21, x2, #0x10
  458ab8:	lsr	x20, x19, #1
  458abc:	mov	x23, x0
  458ac0:	mov	x24, x1
  458ac4:	subs	w20, w20, #0x1
  458ac8:	b.mi	458b00 <_obstack_memory_used@@Base+0xf0a0>  // b.first
  458acc:	str	x25, [sp, #64]
  458ad0:	mov	w25, w19
  458ad4:	nop
  458ad8:	mov	w3, w20
  458adc:	mov	w4, w25
  458ae0:	mov	x2, x21
  458ae4:	sub	w20, w20, #0x1
  458ae8:	mov	x1, x24
  458aec:	mov	x0, x23
  458af0:	bl	458988 <_obstack_memory_used@@Base+0xef28>
  458af4:	cmn	w20, #0x1
  458af8:	b.ne	458ad8 <_obstack_memory_used@@Base+0xf078>  // b.any
  458afc:	ldr	x25, [sp, #64]
  458b00:	sub	w19, w19, #0x1
  458b04:	cmp	w19, #0x0
  458b08:	sxtw	x19, w19
  458b0c:	b.le	458b44 <_obstack_memory_used@@Base+0xf0e4>
  458b10:	ldr	x1, [x21, x19, lsl #3]
  458b14:	mov	w4, w19
  458b18:	ldr	x0, [x22, #16]
  458b1c:	str	x1, [x22, #16]
  458b20:	str	x0, [x21, x19, lsl #3]
  458b24:	mov	x2, x21
  458b28:	sub	x19, x19, #0x1
  458b2c:	mov	x1, x24
  458b30:	mov	x0, x23
  458b34:	mov	w3, #0x0                   	// #0
  458b38:	bl	458988 <_obstack_memory_used@@Base+0xef28>
  458b3c:	cmp	w19, #0x0
  458b40:	b.gt	458b10 <_obstack_memory_used@@Base+0xf0b0>
  458b44:	ldp	x19, x20, [sp, #16]
  458b48:	ldp	x21, x22, [sp, #32]
  458b4c:	ldp	x23, x24, [sp, #48]
  458b50:	ldp	x29, x30, [sp], #80
  458b54:	ret
  458b58:	and	w0, w0, #0xff
  458b5c:	cmp	w0, #0xff
  458b60:	b.eq	458bb0 <_obstack_memory_used@@Base+0xf150>  // b.none
  458b64:	and	w1, w0, #0x7
  458b68:	cmp	w1, #0x2
  458b6c:	b.eq	458ba8 <_obstack_memory_used@@Base+0xf148>  // b.none
  458b70:	b.ls	458b9c <_obstack_memory_used@@Base+0xf13c>  // b.plast
  458b74:	cmp	w1, #0x3
  458b78:	mov	w0, #0x4                   	// #4
  458b7c:	b.ne	458b84 <_obstack_memory_used@@Base+0xf124>  // b.any
  458b80:	ret
  458b84:	cmp	w1, w0
  458b88:	mov	w0, #0x8                   	// #8
  458b8c:	b.eq	458b80 <_obstack_memory_used@@Base+0xf120>  // b.none
  458b90:	stp	x29, x30, [sp, #-16]!
  458b94:	mov	x29, sp
  458b98:	bl	4027f0 <abort@plt>
  458b9c:	mov	w0, #0x8                   	// #8
  458ba0:	cbnz	w1, 458b90 <_obstack_memory_used@@Base+0xf130>
  458ba4:	ret
  458ba8:	mov	w0, w1
  458bac:	ret
  458bb0:	mov	w0, #0x0                   	// #0
  458bb4:	ret
  458bb8:	and	w5, w0, #0xff
  458bbc:	cmp	w5, #0x50
  458bc0:	b.eq	458cd8 <_obstack_memory_used@@Base+0xf278>  // b.none
  458bc4:	and	w4, w5, #0xf
  458bc8:	cmp	w4, #0x4
  458bcc:	b.eq	458be8 <_obstack_memory_used@@Base+0xf188>  // b.none
  458bd0:	b.ls	458bfc <_obstack_memory_used@@Base+0xf19c>  // b.plast
  458bd4:	cmp	w4, #0xb
  458bd8:	b.eq	458cfc <_obstack_memory_used@@Base+0xf29c>  // b.none
  458bdc:	b.ls	458c58 <_obstack_memory_used@@Base+0xf1f8>  // b.plast
  458be0:	cmp	w4, #0xc
  458be4:	b.ne	458d0c <_obstack_memory_used@@Base+0xf2ac>  // b.any
  458be8:	mov	x0, x2
  458bec:	ldr	x4, [x0], #8
  458bf0:	cbnz	x4, 458cb8 <_obstack_memory_used@@Base+0xf258>
  458bf4:	str	x4, [x3]
  458bf8:	ret
  458bfc:	cmp	w4, #0x2
  458c00:	b.eq	458cec <_obstack_memory_used@@Base+0xf28c>  // b.none
  458c04:	b.ls	458c20 <_obstack_memory_used@@Base+0xf1c0>  // b.plast
  458c08:	cmp	w4, #0x3
  458c0c:	b.ne	458d0c <_obstack_memory_used@@Base+0xf2ac>  // b.any
  458c10:	mov	x0, x2
  458c14:	ldr	w4, [x0], #4
  458c18:	cbz	x4, 458bf4 <_obstack_memory_used@@Base+0xf194>
  458c1c:	b	458cb8 <_obstack_memory_used@@Base+0xf258>
  458c20:	cbz	w4, 458be8 <_obstack_memory_used@@Base+0xf188>
  458c24:	cmp	w4, #0x1
  458c28:	b.ne	458d0c <_obstack_memory_used@@Base+0xf2ac>  // b.any
  458c2c:	mov	x0, x2
  458c30:	mov	x4, #0x0                   	// #0
  458c34:	mov	w7, #0x0                   	// #0
  458c38:	ldrb	w8, [x0], #1
  458c3c:	and	x6, x8, #0x7f
  458c40:	lsl	x6, x6, x7
  458c44:	add	w7, w7, #0x7
  458c48:	orr	x4, x4, x6
  458c4c:	tbnz	w8, #7, 458c38 <_obstack_memory_used@@Base+0xf1d8>
  458c50:	cbz	x4, 458bf4 <_obstack_memory_used@@Base+0xf194>
  458c54:	b	458cb8 <_obstack_memory_used@@Base+0xf258>
  458c58:	cmp	w4, #0x9
  458c5c:	b.eq	458c78 <_obstack_memory_used@@Base+0xf218>  // b.none
  458c60:	cmp	w4, #0xa
  458c64:	b.ne	458d0c <_obstack_memory_used@@Base+0xf2ac>  // b.any
  458c68:	mov	x0, x2
  458c6c:	ldrsh	x4, [x0], #2
  458c70:	cbz	x4, 458bf4 <_obstack_memory_used@@Base+0xf194>
  458c74:	b	458cb8 <_obstack_memory_used@@Base+0xf258>
  458c78:	mov	x0, x2
  458c7c:	mov	x4, #0x0                   	// #0
  458c80:	mov	w7, #0x0                   	// #0
  458c84:	ldrb	w8, [x0], #1
  458c88:	and	x6, x8, #0x7f
  458c8c:	lsl	x6, x6, x7
  458c90:	add	w7, w7, #0x7
  458c94:	orr	x4, x4, x6
  458c98:	tbnz	w8, #7, 458c84 <_obstack_memory_used@@Base+0xf224>
  458c9c:	cmp	w7, #0x3f
  458ca0:	b.hi	458bf0 <_obstack_memory_used@@Base+0xf190>  // b.pmore
  458ca4:	tbz	w8, #6, 458bf0 <_obstack_memory_used@@Base+0xf190>
  458ca8:	mov	x6, #0xffffffffffffffff    	// #-1
  458cac:	lsl	x7, x6, x7
  458cb0:	orr	x4, x4, x7
  458cb4:	nop
  458cb8:	and	w6, w5, #0x70
  458cbc:	cmp	w6, #0x10
  458cc0:	csel	x1, x2, x1, eq  // eq = none
  458cc4:	add	x4, x4, x1
  458cc8:	tbz	w5, #7, 458bf4 <_obstack_memory_used@@Base+0xf194>
  458ccc:	ldr	x4, [x4]
  458cd0:	str	x4, [x3]
  458cd4:	ret
  458cd8:	add	x0, x2, #0x7
  458cdc:	and	x0, x0, #0xfffffffffffffff8
  458ce0:	ldr	x4, [x0], #8
  458ce4:	str	x4, [x3]
  458ce8:	ret
  458cec:	mov	x0, x2
  458cf0:	ldrh	w4, [x0], #2
  458cf4:	cbz	x4, 458bf4 <_obstack_memory_used@@Base+0xf194>
  458cf8:	b	458cb8 <_obstack_memory_used@@Base+0xf258>
  458cfc:	mov	x0, x2
  458d00:	ldrsw	x4, [x0], #4
  458d04:	cbz	x4, 458bf4 <_obstack_memory_used@@Base+0xf194>
  458d08:	b	458cb8 <_obstack_memory_used@@Base+0xf258>
  458d0c:	stp	x29, x30, [sp, #-16]!
  458d10:	mov	x29, sp
  458d14:	bl	4027f0 <abort@plt>
  458d18:	stp	x29, x30, [sp, #-48]!
  458d1c:	mov	x29, sp
  458d20:	stp	x19, x20, [sp, #16]
  458d24:	mov	x20, x0
  458d28:	add	x19, x0, #0x9
  458d2c:	mov	x0, x19
  458d30:	bl	4024f0 <strlen@plt>
  458d34:	ldrb	w3, [x20, #8]
  458d38:	add	x0, x0, #0x1
  458d3c:	add	x2, x19, x0
  458d40:	cmp	w3, #0x3
  458d44:	b.hi	458e10 <_obstack_memory_used@@Base+0xf3b0>  // b.pmore
  458d48:	ldrb	w0, [x20, #9]
  458d4c:	cmp	w0, #0x7a
  458d50:	b.eq	458d64 <_obstack_memory_used@@Base+0xf304>  // b.none
  458d54:	mov	w0, #0x0                   	// #0
  458d58:	ldp	x19, x20, [sp, #16]
  458d5c:	ldp	x29, x30, [sp], #48
  458d60:	ret
  458d64:	ldrsb	w1, [x2], #1
  458d68:	tbnz	w1, #31, 458d64 <_obstack_memory_used@@Base+0xf304>
  458d6c:	nop
  458d70:	mov	x0, x2
  458d74:	ldrsb	w1, [x2], #1
  458d78:	tbnz	w1, #31, 458d70 <_obstack_memory_used@@Base+0xf310>
  458d7c:	cmp	w3, #0x1
  458d80:	b.eq	458e08 <_obstack_memory_used@@Base+0xf3a8>  // b.none
  458d84:	nop
  458d88:	ldrsb	w0, [x2], #1
  458d8c:	tbnz	w0, #31, 458d88 <_obstack_memory_used@@Base+0xf328>
  458d90:	add	x19, x20, #0xa
  458d94:	nop
  458d98:	ldrsb	w1, [x2], #1
  458d9c:	tbnz	w1, #31, 458d98 <_obstack_memory_used@@Base+0xf338>
  458da0:	ldrb	w0, [x20, #10]
  458da4:	add	x20, sp, #0x28
  458da8:	cmp	w0, #0x52
  458dac:	b.ne	458dcc <_obstack_memory_used@@Base+0xf36c>  // b.any
  458db0:	b	458df8 <_obstack_memory_used@@Base+0xf398>
  458db4:	add	x2, x2, #0x1
  458db8:	cmp	w0, #0x4c
  458dbc:	b.ne	458d54 <_obstack_memory_used@@Base+0xf2f4>  // b.any
  458dc0:	ldrb	w0, [x19, #1]!
  458dc4:	cmp	w0, #0x52
  458dc8:	b.eq	458df8 <_obstack_memory_used@@Base+0xf398>  // b.none
  458dcc:	cmp	w0, #0x50
  458dd0:	b.ne	458db4 <_obstack_memory_used@@Base+0xf354>  // b.any
  458dd4:	ldrb	w0, [x2], #1
  458dd8:	mov	x3, x20
  458ddc:	mov	x1, #0x0                   	// #0
  458de0:	and	w0, w0, #0x7f
  458de4:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  458de8:	mov	x2, x0
  458dec:	ldrb	w0, [x19, #1]!
  458df0:	cmp	w0, #0x52
  458df4:	b.ne	458dcc <_obstack_memory_used@@Base+0xf36c>  // b.any
  458df8:	ldrb	w0, [x2]
  458dfc:	ldp	x19, x20, [sp, #16]
  458e00:	ldp	x29, x30, [sp], #48
  458e04:	ret
  458e08:	add	x2, x0, #0x2
  458e0c:	b	458d90 <_obstack_memory_used@@Base+0xf330>
  458e10:	ldrb	w1, [x19, x0]
  458e14:	mov	w0, #0xff                  	// #255
  458e18:	cmp	w1, #0x8
  458e1c:	b.ne	458d58 <_obstack_memory_used@@Base+0xf2f8>  // b.any
  458e20:	ldrb	w1, [x2, #1]
  458e24:	cbnz	w1, 458d58 <_obstack_memory_used@@Base+0xf2f8>
  458e28:	add	x2, x2, #0x2
  458e2c:	b	458d48 <_obstack_memory_used@@Base+0xf2e8>
  458e30:	and	w0, w0, #0xff
  458e34:	cmp	w0, #0xff
  458e38:	b.eq	458e70 <_obstack_memory_used@@Base+0xf410>  // b.none
  458e3c:	and	w3, w0, #0x70
  458e40:	cmp	w3, #0x20
  458e44:	b.eq	458e88 <_obstack_memory_used@@Base+0xf428>  // b.none
  458e48:	b.ls	458e5c <_obstack_memory_used@@Base+0xf3fc>  // b.plast
  458e4c:	cmp	w3, #0x30
  458e50:	b.ne	458e78 <_obstack_memory_used@@Base+0xf418>  // b.any
  458e54:	ldr	x0, [x2]
  458e58:	ret
  458e5c:	tst	w0, #0x60
  458e60:	b.eq	458e70 <_obstack_memory_used@@Base+0xf410>  // b.none
  458e64:	stp	x29, x30, [sp, #-16]!
  458e68:	mov	x29, sp
  458e6c:	bl	4027f0 <abort@plt>
  458e70:	mov	x0, #0x0                   	// #0
  458e74:	ret
  458e78:	cmp	w3, #0x50
  458e7c:	mov	x0, #0x0                   	// #0
  458e80:	b.ne	458e64 <_obstack_memory_used@@Base+0xf404>  // b.any
  458e84:	ret
  458e88:	ldr	x0, [x1]
  458e8c:	ret
  458e90:	stp	x29, x30, [sp, #-64]!
  458e94:	mov	x29, sp
  458e98:	stp	x21, x22, [sp, #32]
  458e9c:	mov	x22, x2
  458ea0:	ldrh	w21, [x0, #32]
  458ea4:	add	x2, x0, #0x10
  458ea8:	stp	x19, x20, [sp, #16]
  458eac:	mov	x19, x0
  458eb0:	ubfx	x21, x21, #3, #8
  458eb4:	mov	x20, x1
  458eb8:	add	x1, x0, #0x8
  458ebc:	mov	w0, w21
  458ec0:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  458ec4:	add	x2, x20, #0x8
  458ec8:	mov	x20, x0
  458ecc:	mov	x1, x20
  458ed0:	add	x3, sp, #0x30
  458ed4:	mov	w0, w21
  458ed8:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  458edc:	ldrh	w0, [x19, #32]
  458ee0:	add	x2, x22, #0x8
  458ee4:	mov	x1, x20
  458ee8:	add	x3, sp, #0x38
  458eec:	ubfx	x0, x0, #3, #8
  458ef0:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  458ef4:	ldp	x2, x1, [sp, #48]
  458ef8:	mov	w3, #0x1                   	// #1
  458efc:	ldp	x19, x20, [sp, #16]
  458f00:	ldp	x21, x22, [sp, #32]
  458f04:	cmp	x2, x1
  458f08:	csetm	w0, cc  // cc = lo, ul, last
  458f0c:	csel	w0, w0, w3, ls  // ls = plast
  458f10:	ldp	x29, x30, [sp], #64
  458f14:	ret
  458f18:	stp	x29, x30, [sp, #-128]!
  458f1c:	mov	x29, sp
  458f20:	stp	x21, x22, [sp, #32]
  458f24:	add	x22, x0, #0x8
  458f28:	stp	x23, x24, [sp, #48]
  458f2c:	add	x23, x0, #0x10
  458f30:	stp	x25, x26, [sp, #64]
  458f34:	mov	x26, x0
  458f38:	ldrh	w0, [x0, #32]
  458f3c:	stp	x19, x20, [sp, #16]
  458f40:	mov	x19, x1
  458f44:	mov	x20, x2
  458f48:	ubfx	x24, x0, #3, #8
  458f4c:	mov	x1, x22
  458f50:	mov	x2, x23
  458f54:	mov	x0, x24
  458f58:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  458f5c:	ldr	w1, [x19]
  458f60:	cbz	w1, 458ff4 <_obstack_memory_used@@Base+0xf594>
  458f64:	stp	x27, x28, [sp, #80]
  458f68:	add	x27, sp, #0x70
  458f6c:	mov	x25, x0
  458f70:	mov	x21, #0x0                   	// #0
  458f74:	add	x0, sp, #0x78
  458f78:	str	x0, [sp, #104]
  458f7c:	nop
  458f80:	ldr	w1, [x19, #4]
  458f84:	cbz	w1, 458fdc <_obstack_memory_used@@Base+0xf57c>
  458f88:	ldrb	w0, [x26, #32]
  458f8c:	tbz	w0, #2, 458fc0 <_obstack_memory_used@@Base+0xf560>
  458f90:	add	x28, x19, #0x4
  458f94:	sub	x28, x28, w1, sxtw
  458f98:	cmp	x28, x21
  458f9c:	b.eq	458fc0 <_obstack_memory_used@@Base+0xf560>  // b.none
  458fa0:	mov	x0, x28
  458fa4:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  458fa8:	mov	x2, x23
  458fac:	mov	w24, w0
  458fb0:	mov	x1, x22
  458fb4:	mov	x21, x28
  458fb8:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  458fbc:	mov	x25, x0
  458fc0:	cbnz	w24, 459010 <_obstack_memory_used@@Base+0xf5b0>
  458fc4:	ldp	x1, x0, [x19, #8]
  458fc8:	stp	x1, x0, [sp, #112]
  458fcc:	cbz	x1, 458fdc <_obstack_memory_used@@Base+0xf57c>
  458fd0:	sub	x1, x20, x1
  458fd4:	cmp	x1, x0
  458fd8:	b.cc	459078 <_obstack_memory_used@@Base+0xf618>  // b.lo, b.ul, b.last
  458fdc:	ldr	w1, [x19]
  458fe0:	add	x1, x1, #0x4
  458fe4:	add	x19, x19, x1
  458fe8:	ldr	w1, [x19]
  458fec:	cbnz	w1, 458f80 <_obstack_memory_used@@Base+0xf520>
  458ff0:	ldp	x27, x28, [sp, #80]
  458ff4:	mov	x0, #0x0                   	// #0
  458ff8:	ldp	x19, x20, [sp, #16]
  458ffc:	ldp	x21, x22, [sp, #32]
  459000:	ldp	x23, x24, [sp, #48]
  459004:	ldp	x25, x26, [sp, #64]
  459008:	ldp	x29, x30, [sp], #128
  45900c:	ret
  459010:	and	w28, w24, #0xff
  459014:	mov	x3, x27
  459018:	add	x2, x19, #0x8
  45901c:	mov	x1, x25
  459020:	mov	w0, w28
  459024:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459028:	ldr	x3, [sp, #104]
  45902c:	mov	x2, x0
  459030:	mov	x1, #0x0                   	// #0
  459034:	and	w0, w28, #0xf
  459038:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  45903c:	mov	w0, w28
  459040:	bl	458b58 <_obstack_memory_used@@Base+0xf0f8>
  459044:	lsl	w2, w0, #3
  459048:	cmp	w0, #0x8
  45904c:	mov	x0, #0x1                   	// #1
  459050:	ldr	x1, [sp, #112]
  459054:	lsl	x2, x0, x2
  459058:	sub	x2, x2, #0x1
  45905c:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  459060:	tst	x1, x2
  459064:	b.eq	458fdc <_obstack_memory_used@@Base+0xf57c>  // b.none
  459068:	ldr	x0, [sp, #120]
  45906c:	sub	x1, x20, x1
  459070:	cmp	x1, x0
  459074:	b.cs	458fdc <_obstack_memory_used@@Base+0xf57c>  // b.hs, b.nlast
  459078:	mov	x0, x19
  45907c:	ldp	x19, x20, [sp, #16]
  459080:	ldp	x21, x22, [sp, #32]
  459084:	ldp	x23, x24, [sp, #48]
  459088:	ldp	x25, x26, [sp, #64]
  45908c:	ldp	x27, x28, [sp, #80]
  459090:	ldp	x29, x30, [sp], #128
  459094:	ret
  459098:	stp	x29, x30, [sp, #-80]!
  45909c:	add	x3, x1, #0x4
  4590a0:	mov	x29, sp
  4590a4:	stp	x21, x22, [sp, #32]
  4590a8:	mov	x21, x1
  4590ac:	ldrsw	x1, [x1, #4]
  4590b0:	stp	x19, x20, [sp, #16]
  4590b4:	mov	x20, x2
  4590b8:	add	x19, x0, #0x10
  4590bc:	str	x23, [sp, #48]
  4590c0:	add	x23, x0, #0x8
  4590c4:	sub	x0, x3, x1
  4590c8:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  4590cc:	and	w22, w0, #0xff
  4590d0:	mov	x2, x19
  4590d4:	mov	x1, x23
  4590d8:	mov	w0, w22
  4590dc:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  4590e0:	mov	x1, x0
  4590e4:	add	x3, sp, #0x40
  4590e8:	add	x2, x21, #0x8
  4590ec:	mov	w0, w22
  4590f0:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  4590f4:	add	x1, x20, #0x4
  4590f8:	ldrsw	x0, [x20, #4]
  4590fc:	sub	x0, x1, x0
  459100:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  459104:	mov	x2, x19
  459108:	and	w19, w0, #0xff
  45910c:	mov	x1, x23
  459110:	mov	w0, w19
  459114:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  459118:	mov	x1, x0
  45911c:	add	x2, x20, #0x8
  459120:	add	x3, sp, #0x48
  459124:	mov	w0, w19
  459128:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  45912c:	ldp	x2, x1, [sp, #64]
  459130:	mov	w3, #0x1                   	// #1
  459134:	ldp	x19, x20, [sp, #16]
  459138:	ldp	x21, x22, [sp, #32]
  45913c:	cmp	x2, x1
  459140:	csetm	w0, cc  // cc = lo, ul, last
  459144:	csel	w0, w0, w3, ls  // ls = plast
  459148:	ldr	x23, [sp, #48]
  45914c:	ldp	x29, x30, [sp], #80
  459150:	ret
  459154:	nop
  459158:	stp	x29, x30, [sp, #-112]!
  45915c:	mov	x29, sp
  459160:	stp	x21, x22, [sp, #32]
  459164:	mov	x21, x0
  459168:	ldr	w0, [x1]
  45916c:	cbz	w0, 4592d0 <_obstack_memory_used@@Base+0xf870>
  459170:	stp	x19, x20, [sp, #16]
  459174:	mov	x19, x1
  459178:	mov	w20, #0x0                   	// #0
  45917c:	stp	x25, x26, [sp, #64]
  459180:	add	x25, sp, #0x68
  459184:	add	x26, x21, #0x8
  459188:	stp	x27, x28, [sp, #80]
  45918c:	add	x27, x21, #0x10
  459190:	mov	x22, #0x0                   	// #0
  459194:	mov	x4, #0x0                   	// #0
  459198:	stp	x23, x24, [sp, #48]
  45919c:	mov	x23, #0x0                   	// #0
  4591a0:	ldr	w2, [x19, #4]
  4591a4:	cbz	w2, 45926c <_obstack_memory_used@@Base+0xf80c>
  4591a8:	add	x28, x19, #0x4
  4591ac:	and	w24, w20, #0xff
  4591b0:	sub	x28, x28, w2, sxtw
  4591b4:	cmp	x28, x4
  4591b8:	b.eq	459210 <_obstack_memory_used@@Base+0xf7b0>  // b.none
  4591bc:	mov	x0, x28
  4591c0:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  4591c4:	mov	w20, w0
  4591c8:	cmp	w0, #0xff
  4591cc:	b.eq	4592ac <_obstack_memory_used@@Base+0xf84c>  // b.none
  4591d0:	and	w24, w0, #0xff
  4591d4:	mov	x2, x27
  4591d8:	mov	w0, w24
  4591dc:	mov	x1, x26
  4591e0:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  4591e4:	mov	x23, x0
  4591e8:	ldrh	w2, [x21, #32]
  4591ec:	and	w0, w2, #0x7f8
  4591f0:	cmp	w0, #0x7f8
  4591f4:	b.eq	4592a0 <_obstack_memory_used@@Base+0xf840>  // b.none
  4591f8:	ubfx	x2, x2, #3, #8
  4591fc:	cmp	w2, w20
  459200:	b.eq	459210 <_obstack_memory_used@@Base+0xf7b0>  // b.none
  459204:	ldrb	w0, [x21, #32]
  459208:	orr	w0, w0, #0x4
  45920c:	strb	w0, [x21, #32]
  459210:	mov	x3, x25
  459214:	add	x2, x19, #0x8
  459218:	mov	x1, x23
  45921c:	mov	w0, w24
  459220:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459224:	mov	w0, w24
  459228:	bl	458b58 <_obstack_memory_used@@Base+0xf0f8>
  45922c:	lsl	w2, w0, #3
  459230:	cmp	w0, #0x8
  459234:	mov	x0, #0x1                   	// #1
  459238:	ldr	x3, [sp, #104]
  45923c:	lsl	x2, x0, x2
  459240:	sub	x2, x2, #0x1
  459244:	mov	x4, x28
  459248:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  45924c:	tst	x3, x2
  459250:	b.eq	45926c <_obstack_memory_used@@Base+0xf80c>  // b.none
  459254:	ldr	x0, [x21]
  459258:	add	x22, x22, #0x1
  45925c:	cmp	x0, x3
  459260:	b.ls	459268 <_obstack_memory_used@@Base+0xf808>  // b.plast
  459264:	str	x3, [x21]
  459268:	mov	x4, x28
  45926c:	ldr	w2, [x19]
  459270:	add	x2, x2, #0x4
  459274:	add	x19, x19, x2
  459278:	ldr	w0, [x19]
  45927c:	cbnz	w0, 4591a0 <_obstack_memory_used@@Base+0xf740>
  459280:	ldp	x19, x20, [sp, #16]
  459284:	ldp	x23, x24, [sp, #48]
  459288:	ldp	x25, x26, [sp, #64]
  45928c:	ldp	x27, x28, [sp, #80]
  459290:	mov	x0, x22
  459294:	ldp	x21, x22, [sp, #32]
  459298:	ldp	x29, x30, [sp], #112
  45929c:	ret
  4592a0:	bfi	w2, w24, #3, #8
  4592a4:	strh	w2, [x21, #32]
  4592a8:	b	459210 <_obstack_memory_used@@Base+0xf7b0>
  4592ac:	mov	x22, #0xffffffffffffffff    	// #-1
  4592b0:	mov	x0, x22
  4592b4:	ldp	x19, x20, [sp, #16]
  4592b8:	ldp	x21, x22, [sp, #32]
  4592bc:	ldp	x23, x24, [sp, #48]
  4592c0:	ldp	x25, x26, [sp, #64]
  4592c4:	ldp	x27, x28, [sp, #80]
  4592c8:	ldp	x29, x30, [sp], #112
  4592cc:	ret
  4592d0:	mov	x22, #0x0                   	// #0
  4592d4:	b	459290 <_obstack_memory_used@@Base+0xf830>
  4592d8:	stp	x29, x30, [sp, #-112]!
  4592dc:	mov	x29, sp
  4592e0:	stp	x21, x22, [sp, #32]
  4592e4:	add	x21, x0, #0x8
  4592e8:	add	x22, x0, #0x10
  4592ec:	stp	x27, x28, [sp, #80]
  4592f0:	mov	x28, x0
  4592f4:	ldrh	w0, [x0, #32]
  4592f8:	stp	x19, x20, [sp, #16]
  4592fc:	mov	x19, x2
  459300:	mov	x20, x1
  459304:	stp	x25, x26, [sp, #64]
  459308:	ubfx	x26, x0, #3, #8
  45930c:	mov	x2, x22
  459310:	mov	x1, x21
  459314:	mov	x0, x26
  459318:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  45931c:	ldr	w2, [x19]
  459320:	cbz	w2, 4593b8 <_obstack_memory_used@@Base+0xf958>
  459324:	add	x25, sp, #0x68
  459328:	stp	x23, x24, [sp, #48]
  45932c:	mov	x24, x0
  459330:	mov	x23, #0x0                   	// #0
  459334:	nop
  459338:	ldr	w2, [x19, #4]
  45933c:	cbz	w2, 4593a0 <_obstack_memory_used@@Base+0xf940>
  459340:	ldrb	w0, [x28, #32]
  459344:	tbz	w0, #2, 459378 <_obstack_memory_used@@Base+0xf918>
  459348:	add	x27, x19, #0x4
  45934c:	sub	x27, x27, w2, sxtw
  459350:	cmp	x27, x23
  459354:	b.eq	459378 <_obstack_memory_used@@Base+0xf918>  // b.none
  459358:	mov	x0, x27
  45935c:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  459360:	mov	x2, x22
  459364:	mov	w26, w0
  459368:	mov	x1, x21
  45936c:	mov	x23, x27
  459370:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  459374:	mov	x24, x0
  459378:	cbnz	w26, 4593d0 <_obstack_memory_used@@Base+0xf970>
  45937c:	ldr	x0, [x19, #8]
  459380:	cbz	x0, 4593a0 <_obstack_memory_used@@Base+0xf940>
  459384:	ldr	x2, [x20]
  459388:	cbz	x2, 4593a0 <_obstack_memory_used@@Base+0xf940>
  45938c:	ldr	x3, [x2, #8]
  459390:	add	x0, x3, #0x2
  459394:	add	x3, x3, #0x1
  459398:	str	x3, [x2, #8]
  45939c:	str	x19, [x2, x0, lsl #3]
  4593a0:	ldr	w2, [x19]
  4593a4:	add	x2, x2, #0x4
  4593a8:	add	x19, x19, x2
  4593ac:	ldr	w2, [x19]
  4593b0:	cbnz	w2, 459338 <_obstack_memory_used@@Base+0xf8d8>
  4593b4:	ldp	x23, x24, [sp, #48]
  4593b8:	ldp	x19, x20, [sp, #16]
  4593bc:	ldp	x21, x22, [sp, #32]
  4593c0:	ldp	x25, x26, [sp, #64]
  4593c4:	ldp	x27, x28, [sp, #80]
  4593c8:	ldp	x29, x30, [sp], #112
  4593cc:	ret
  4593d0:	mov	x3, x25
  4593d4:	add	x2, x19, #0x8
  4593d8:	mov	x1, x24
  4593dc:	and	w27, w26, #0xff
  4593e0:	mov	w0, w27
  4593e4:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  4593e8:	mov	w0, w27
  4593ec:	bl	458b58 <_obstack_memory_used@@Base+0xf0f8>
  4593f0:	lsl	w2, w0, #3
  4593f4:	cmp	w0, #0x8
  4593f8:	mov	x0, #0x1                   	// #1
  4593fc:	ldr	x3, [sp, #104]
  459400:	lsl	x2, x0, x2
  459404:	sub	x2, x2, #0x1
  459408:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  45940c:	tst	x2, x3
  459410:	b.ne	459384 <_obstack_memory_used@@Base+0xf924>  // b.any
  459414:	b	4593a0 <_obstack_memory_used@@Base+0xf940>
  459418:	stp	x29, x30, [sp, #-128]!
  45941c:	cmp	x1, #0x2f
  459420:	mov	x29, sp
  459424:	stp	x19, x20, [sp, #16]
  459428:	mov	x19, x2
  45942c:	ldr	w2, [x2, #40]
  459430:	ldr	x13, [x0]
  459434:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  459438:	ldr	x3, [x0, #16]
  45943c:	b.ne	45957c <_obstack_memory_used@@Base+0xfb1c>  // b.any
  459440:	cmp	x1, #0x19
  459444:	b.ls	459554 <_obstack_memory_used@@Base+0xfaf4>  // b.plast
  459448:	mov	x10, #0x0                   	// #0
  45944c:	mov	x15, #0x0                   	// #0
  459450:	ldrh	w4, [x0, #24]
  459454:	cbz	w4, 45956c <_obstack_memory_used@@Base+0xfb0c>
  459458:	mov	w0, #0x38                  	// #56
  45945c:	mov	w7, #0xe550                	// #58704
  459460:	mov	x11, #0x0                   	// #0
  459464:	mov	x12, #0x0                   	// #0
  459468:	umaddl	x4, w4, w0, x3
  45946c:	mov	x8, #0x0                   	// #0
  459470:	mov	x6, #0x0                   	// #0
  459474:	mov	x9, #0x0                   	// #0
  459478:	movk	w7, #0x6474, lsl #16
  45947c:	mov	x14, #0x1                   	// #1
  459480:	b	4594a0 <_obstack_memory_used@@Base+0xfa40>
  459484:	cmp	w0, w7
  459488:	b.eq	459564 <_obstack_memory_used@@Base+0xfb04>  // b.none
  45948c:	cmp	w0, #0x2
  459490:	csel	x6, x6, x3, ne  // ne = any
  459494:	add	x3, x3, #0x38
  459498:	cmp	x4, x3
  45949c:	b.eq	4594e8 <_obstack_memory_used@@Base+0xfa88>  // b.none
  4594a0:	ldr	w0, [x3]
  4594a4:	cmp	w0, #0x1
  4594a8:	b.ne	459484 <_obstack_memory_used@@Base+0xfa24>  // b.any
  4594ac:	ldr	x0, [x3, #16]
  4594b0:	ldr	x5, [x19]
  4594b4:	add	x0, x13, x0
  4594b8:	cmp	x5, x0
  4594bc:	b.cc	459494 <_obstack_memory_used@@Base+0xfa34>  // b.lo, b.ul, b.last
  4594c0:	ldr	x2, [x3, #40]
  4594c4:	add	x3, x3, #0x38
  4594c8:	add	x2, x0, x2
  4594cc:	cmp	x5, x2
  4594d0:	csel	x11, x11, x2, cs  // cs = hs, nlast
  4594d4:	csel	x12, x12, x0, cs  // cs = hs, nlast
  4594d8:	csel	x8, x8, x14, cs  // cs = hs, nlast
  4594dc:	cmp	x4, x3
  4594e0:	b.ne	4594a0 <_obstack_memory_used@@Base+0xfa40>  // b.any
  4594e4:	nop
  4594e8:	cbz	x8, 45956c <_obstack_memory_used@@Base+0xfb0c>
  4594ec:	cmp	x1, #0x2f
  4594f0:	b.ls	45952c <_obstack_memory_used@@Base+0xfacc>  // b.plast
  4594f4:	adrp	x1, 48d000 <__environ@@GLIBC_2.17+0xa68>
  4594f8:	add	x1, x1, #0xb70
  4594fc:	cmp	x10, #0x0
  459500:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  459504:	ldr	x0, [x1, #8]
  459508:	b.eq	459520 <_obstack_memory_used@@Base+0xfac0>  // b.none
  45950c:	ldr	x2, [x10, #40]
  459510:	str	x2, [x15, #40]
  459514:	str	x0, [x10, #40]
  459518:	mov	x0, x10
  45951c:	str	x10, [x1, #8]
  459520:	stp	x12, x11, [x0]
  459524:	stp	x13, x9, [x0, #16]
  459528:	str	x6, [x0, #32]
  45952c:	cbz	x9, 45956c <_obstack_memory_used@@Base+0xfb0c>
  459530:	ldr	x0, [x9, #16]
  459534:	add	x20, x13, x0
  459538:	ldrb	w0, [x13, x0]
  45953c:	cmp	w0, #0x1
  459540:	b.eq	4595dc <_obstack_memory_used@@Base+0xfb7c>  // b.none
  459544:	mov	w0, #0x1                   	// #1
  459548:	ldp	x19, x20, [sp, #16]
  45954c:	ldp	x29, x30, [sp], #128
  459550:	ret
  459554:	mov	w0, #0xffffffff            	// #-1
  459558:	ldp	x19, x20, [sp, #16]
  45955c:	ldp	x29, x30, [sp], #128
  459560:	ret
  459564:	mov	x9, x3
  459568:	b	459494 <_obstack_memory_used@@Base+0xfa34>
  45956c:	mov	w0, #0x0                   	// #0
  459570:	ldp	x19, x20, [sp, #16]
  459574:	ldp	x29, x30, [sp], #128
  459578:	ret
  45957c:	ldp	x6, x7, [x0, #32]
  459580:	adrp	x4, 48c000 <_obstack_memory_used@@Base+0x425a0>
  459584:	adrp	x5, 48d000 <__environ@@GLIBC_2.17+0xa68>
  459588:	ldr	x2, [x4, #1384]
  45958c:	cmp	x6, x2
  459590:	b.eq	4596b0 <_obstack_memory_used@@Base+0xfc50>  // b.none
  459594:	add	x2, x5, #0xb70
  459598:	str	x6, [x4, #1384]
  45959c:	add	x4, x2, #0x40
  4595a0:	add	x2, x2, #0x1c0
  4595a4:	str	x7, [x5, #2928]
  4595a8:	stp	xzr, xzr, [x4, #-48]
  4595ac:	stur	x4, [x4, #-8]
  4595b0:	add	x4, x4, #0x30
  4595b4:	cmp	x2, x4
  4595b8:	b.ne	4595a8 <_obstack_memory_used@@Base+0xfb48>  // b.any
  4595bc:	add	x5, x5, #0xb70
  4595c0:	mov	x10, #0x0                   	// #0
  4595c4:	add	x2, x5, #0x10
  4595c8:	mov	x15, #0x0                   	// #0
  4595cc:	str	xzr, [x5, #392]
  4595d0:	str	x2, [x5, #8]
  4595d4:	str	wzr, [x19, #40]
  4595d8:	b	459450 <_obstack_memory_used@@Base+0xf9f0>
  4595dc:	stp	x21, x22, [sp, #32]
  4595e0:	add	x22, x19, #0x8
  4595e4:	mov	x1, x22
  4595e8:	stp	x23, x24, [sp, #48]
  4595ec:	add	x23, x19, #0x10
  4595f0:	mov	x2, x23
  4595f4:	ldrb	w21, [x20, #1]
  4595f8:	mov	w0, w21
  4595fc:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  459600:	add	x3, sp, #0x40
  459604:	mov	x1, x0
  459608:	add	x2, x20, #0x4
  45960c:	mov	w0, w21
  459610:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459614:	ldrb	w24, [x20, #2]
  459618:	mov	x21, x0
  45961c:	cmp	w24, #0xff
  459620:	b.eq	459630 <_obstack_memory_used@@Base+0xfbd0>  // b.none
  459624:	ldrb	w0, [x20, #3]
  459628:	cmp	w0, #0x3b
  45962c:	b.eq	459710 <_obstack_memory_used@@Base+0xfcb0>  // b.none
  459630:	ldr	x2, [x19]
  459634:	mov	x3, #0x4                   	// #4
  459638:	ldp	x5, x4, [x19, #8]
  45963c:	add	x0, sp, #0x50
  459640:	ldr	x1, [sp, #64]
  459644:	stp	xzr, x5, [sp, #80]
  459648:	stp	x4, x1, [sp, #96]
  45964c:	str	x3, [sp, #112]
  459650:	bl	458f18 <_obstack_memory_used@@Base+0xf4b8>
  459654:	str	x0, [x19, #32]
  459658:	cbz	x0, 459828 <_obstack_memory_used@@Base+0xfdc8>
  45965c:	ldrsw	x1, [x0, #4]
  459660:	add	x0, x0, #0x4
  459664:	sub	x0, x0, x1
  459668:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  45966c:	and	w20, w0, #0xff
  459670:	mov	x2, x23
  459674:	mov	x1, x22
  459678:	mov	w0, w20
  45967c:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  459680:	ldr	x2, [x19, #32]
  459684:	mov	x1, x0
  459688:	add	x3, sp, #0x48
  45968c:	mov	w0, w20
  459690:	add	x2, x2, #0x8
  459694:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459698:	ldr	x1, [sp, #72]
  45969c:	mov	w0, #0x1                   	// #1
  4596a0:	ldp	x21, x22, [sp, #32]
  4596a4:	ldp	x23, x24, [sp, #48]
  4596a8:	str	x1, [x19, #24]
  4596ac:	b	459558 <_obstack_memory_used@@Base+0xfaf8>
  4596b0:	ldr	x2, [x5, #2928]
  4596b4:	add	x8, x5, #0xb70
  4596b8:	cmp	x2, x7
  4596bc:	b.ne	459594 <_obstack_memory_used@@Base+0xfb34>  // b.any
  4596c0:	ldr	x7, [x8, #8]
  4596c4:	cbz	x7, 459448 <_obstack_memory_used@@Base+0xf9e8>
  4596c8:	mov	x10, x7
  4596cc:	mov	x15, #0x0                   	// #0
  4596d0:	ldr	x6, [x19]
  4596d4:	ldp	x2, x4, [x10]
  4596d8:	cmp	x6, x2
  4596dc:	b.cc	4596e8 <_obstack_memory_used@@Base+0xfc88>  // b.lo, b.ul, b.last
  4596e0:	cmp	x6, x4
  4596e4:	b.cc	459840 <_obstack_memory_used@@Base+0xfde0>  // b.lo, b.ul, b.last
  4596e8:	orr	x2, x2, x4
  4596ec:	cbz	x2, 459450 <_obstack_memory_used@@Base+0xf9f0>
  4596f0:	ldr	x2, [x10, #40]
  4596f4:	cbz	x2, 459450 <_obstack_memory_used@@Base+0xf9f0>
  4596f8:	mov	x15, x10
  4596fc:	mov	x10, x2
  459700:	ldp	x2, x4, [x10]
  459704:	cmp	x6, x2
  459708:	b.cc	4596e8 <_obstack_memory_used@@Base+0xfc88>  // b.lo, b.ul, b.last
  45970c:	b	4596e0 <_obstack_memory_used@@Base+0xfc80>
  459710:	mov	x2, x23
  459714:	mov	x1, x22
  459718:	mov	w0, w24
  45971c:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  459720:	add	x3, sp, #0x48
  459724:	mov	x1, x0
  459728:	mov	x2, x21
  45972c:	mov	w0, w24
  459730:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459734:	ldr	x3, [sp, #72]
  459738:	cbz	x3, 459818 <_obstack_memory_used@@Base+0xfdb8>
  45973c:	ands	x5, x0, #0x3
  459740:	ldr	x2, [x19]
  459744:	b.ne	459634 <_obstack_memory_used@@Base+0xfbd4>  // b.any
  459748:	ldrsw	x1, [x0]
  45974c:	add	x1, x1, x20
  459750:	cmp	x1, x2
  459754:	b.hi	459818 <_obstack_memory_used@@Base+0xfdb8>  // b.pmore
  459758:	sub	x3, x3, #0x1
  45975c:	lsl	x1, x3, #3
  459760:	add	x21, x0, x1
  459764:	ldrsw	x1, [x0, x1]
  459768:	add	x1, x1, x20
  45976c:	cmp	x1, x2
  459770:	b.ls	4597b4 <_obstack_memory_used@@Base+0xfd54>  // b.plast
  459774:	cmp	x5, x3
  459778:	b.cs	459864 <_obstack_memory_used@@Base+0xfe04>  // b.hs, b.nlast
  45977c:	add	x1, x5, x3
  459780:	lsr	x1, x1, #1
  459784:	lsl	x4, x1, #3
  459788:	add	x21, x0, x4
  45978c:	ldrsw	x4, [x0, x4]
  459790:	add	x4, x4, x20
  459794:	cmp	x4, x2
  459798:	b.hi	459838 <_obstack_memory_used@@Base+0xfdd8>  // b.pmore
  45979c:	add	x5, x1, #0x1
  4597a0:	lsl	x1, x5, #3
  4597a4:	ldrsw	x1, [x0, x1]
  4597a8:	add	x1, x1, x20
  4597ac:	cmp	x1, x2
  4597b0:	b.ls	459774 <_obstack_memory_used@@Base+0xfd14>  // b.plast
  4597b4:	ldrsw	x22, [x21, #4]
  4597b8:	add	x22, x22, x20
  4597bc:	add	x1, x22, #0x4
  4597c0:	ldrsw	x0, [x22, #4]
  4597c4:	sub	x0, x1, x0
  4597c8:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  4597cc:	and	w23, w0, #0xff
  4597d0:	mov	w0, w23
  4597d4:	bl	458b58 <_obstack_memory_used@@Base+0xf0f8>
  4597d8:	mov	w2, w0
  4597dc:	mov	x1, #0x0                   	// #0
  4597e0:	add	x2, x2, #0x8
  4597e4:	add	x3, sp, #0x50
  4597e8:	add	x2, x22, x2
  4597ec:	and	w0, w23, #0xf
  4597f0:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  4597f4:	ldrsw	x0, [x21]
  4597f8:	ldr	x1, [sp, #80]
  4597fc:	add	x20, x0, x20
  459800:	ldr	x2, [x19]
  459804:	add	x0, x20, x1
  459808:	cmp	x2, x0
  45980c:	b.cs	459814 <_obstack_memory_used@@Base+0xfdb4>  // b.hs, b.nlast
  459810:	str	x22, [x19, #32]
  459814:	str	x20, [x19, #24]
  459818:	mov	w0, #0x1                   	// #1
  45981c:	ldp	x21, x22, [sp, #32]
  459820:	ldp	x23, x24, [sp, #48]
  459824:	b	459558 <_obstack_memory_used@@Base+0xfaf8>
  459828:	mov	w0, #0x1                   	// #1
  45982c:	ldp	x21, x22, [sp, #32]
  459830:	ldp	x23, x24, [sp, #48]
  459834:	b	459548 <_obstack_memory_used@@Base+0xfae8>
  459838:	mov	x3, x1
  45983c:	b	459774 <_obstack_memory_used@@Base+0xfd14>
  459840:	cmp	x10, x7
  459844:	ldp	x13, x9, [x10, #16]
  459848:	b.eq	45952c <_obstack_memory_used@@Base+0xfacc>  // b.none
  45984c:	add	x5, x5, #0xb70
  459850:	ldr	x0, [x10, #40]
  459854:	str	x0, [x15, #40]
  459858:	str	x10, [x5, #8]
  45985c:	str	x7, [x10, #40]
  459860:	b	45952c <_obstack_memory_used@@Base+0xfacc>
  459864:	bl	4027f0 <abort@plt>
  459868:	stp	x29, x30, [sp, #-160]!
  45986c:	mov	x29, sp
  459870:	stp	x19, x20, [sp, #16]
  459874:	mov	x19, x1
  459878:	ldrb	w1, [x0, #32]
  45987c:	stp	x23, x24, [sp, #48]
  459880:	mov	x24, x0
  459884:	tbz	w1, #0, 4598f0 <_obstack_memory_used@@Base+0xfe90>
  459888:	stp	x27, x28, [sp, #80]
  45988c:	ldr	x27, [x24, #24]
  459890:	tbnz	w1, #2, 459964 <_obstack_memory_used@@Base+0xff04>
  459894:	ldrh	w0, [x24, #32]
  459898:	tst	w0, #0x7f8
  45989c:	b.ne	459ac4 <_obstack_memory_used@@Base+0x10064>  // b.any
  4598a0:	mov	x2, #0x0                   	// #0
  4598a4:	ldr	x1, [x27, #8]
  4598a8:	b	4598cc <_obstack_memory_used@@Base+0xfe6c>
  4598ac:	add	x0, x1, x2
  4598b0:	lsr	x0, x0, #1
  4598b4:	add	x3, x0, #0x2
  4598b8:	ldr	x20, [x27, x3, lsl #3]
  4598bc:	ldr	x3, [x20, #8]
  4598c0:	cmp	x19, x3
  4598c4:	b.cs	45994c <_obstack_memory_used@@Base+0xfeec>  // b.hs, b.nlast
  4598c8:	mov	x1, x0
  4598cc:	cmp	x1, x2
  4598d0:	b.hi	4598ac <_obstack_memory_used@@Base+0xfe4c>  // b.pmore
  4598d4:	ldp	x27, x28, [sp, #80]
  4598d8:	mov	x20, #0x0                   	// #0
  4598dc:	mov	x0, x20
  4598e0:	ldp	x19, x20, [sp, #16]
  4598e4:	ldp	x23, x24, [sp, #48]
  4598e8:	ldp	x29, x30, [sp], #160
  4598ec:	ret
  4598f0:	stp	x25, x26, [sp, #64]
  4598f4:	ldr	w25, [x0, #32]
  4598f8:	stp	x21, x22, [sp, #32]
  4598fc:	tst	x25, #0xfffff800
  459900:	lsr	w25, w25, #11
  459904:	b.ne	459b6c <_obstack_memory_used@@Base+0x1010c>  // b.any
  459908:	ldr	x20, [x0, #24]
  45990c:	tbz	w1, #1, 459a1c <_obstack_memory_used@@Base+0xffbc>
  459910:	ldr	x1, [x20]
  459914:	cbnz	x1, 459928 <_obstack_memory_used@@Base+0xfec8>
  459918:	b	459a48 <_obstack_memory_used@@Base+0xffe8>
  45991c:	ldr	x1, [x20, #8]!
  459920:	add	x25, x25, x0
  459924:	cbz	x1, 459a30 <_obstack_memory_used@@Base+0xffd0>
  459928:	mov	x0, x24
  45992c:	bl	459158 <_obstack_memory_used@@Base+0xf6f8>
  459930:	cmn	x0, #0x1
  459934:	b.ne	45991c <_obstack_memory_used@@Base+0xfebc>  // b.any
  459938:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x205a0>
  45993c:	mov	x1, #0x7f8                 	// #2040
  459940:	add	x0, x0, #0xc68
  459944:	stp	x0, x1, [x24, #24]
  459948:	b	459a48 <_obstack_memory_used@@Base+0xffe8>
  45994c:	ldr	x2, [x20, #16]
  459950:	add	x3, x3, x2
  459954:	cmp	x19, x3
  459958:	b.cc	459e40 <_obstack_memory_used@@Base+0x103e0>  // b.lo, b.ul, b.last
  45995c:	add	x2, x0, #0x1
  459960:	b	4598cc <_obstack_memory_used@@Base+0xfe6c>
  459964:	ldr	x28, [x27, #8]
  459968:	cbz	x28, 4598d4 <_obstack_memory_used@@Base+0xfe74>
  45996c:	add	x0, x24, #0x8
  459970:	add	x23, sp, #0x88
  459974:	stp	x21, x22, [sp, #32]
  459978:	add	x22, sp, #0x90
  45997c:	stp	x25, x26, [sp, #64]
  459980:	add	x26, x24, #0x10
  459984:	mov	x25, #0x0                   	// #0
  459988:	str	x0, [sp, #96]
  45998c:	b	4599ac <_obstack_memory_used@@Base+0xff4c>
  459990:	ldr	x1, [sp, #144]
  459994:	add	x0, x0, x1
  459998:	cmp	x0, x19
  45999c:	b.hi	459e38 <_obstack_memory_used@@Base+0x103d8>  // b.pmore
  4599a0:	add	x25, x24, #0x1
  4599a4:	cmp	x25, x28
  4599a8:	b.cs	459ab4 <_obstack_memory_used@@Base+0x10054>  // b.hs, b.nlast
  4599ac:	add	x24, x25, x28
  4599b0:	lsr	x24, x24, #1
  4599b4:	add	x0, x24, #0x2
  4599b8:	ldr	x20, [x27, x0, lsl #3]
  4599bc:	add	x1, x20, #0x4
  4599c0:	ldrsw	x0, [x20, #4]
  4599c4:	sub	x0, x1, x0
  4599c8:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  4599cc:	ldr	x1, [sp, #96]
  4599d0:	and	w21, w0, #0xff
  4599d4:	mov	x2, x26
  4599d8:	mov	w0, w21
  4599dc:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  4599e0:	mov	x1, x0
  4599e4:	mov	x3, x23
  4599e8:	add	x2, x20, #0x8
  4599ec:	mov	w0, w21
  4599f0:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  4599f4:	mov	x3, x22
  4599f8:	mov	x2, x0
  4599fc:	mov	x1, #0x0                   	// #0
  459a00:	and	w0, w21, #0xf
  459a04:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459a08:	ldr	x0, [sp, #136]
  459a0c:	cmp	x0, x19
  459a10:	b.ls	459990 <_obstack_memory_used@@Base+0xff30>  // b.plast
  459a14:	mov	x28, x24
  459a18:	b	4599a4 <_obstack_memory_used@@Base+0xff44>
  459a1c:	mov	x1, x20
  459a20:	bl	459158 <_obstack_memory_used@@Base+0xf6f8>
  459a24:	mov	x25, x0
  459a28:	cmn	x0, #0x1
  459a2c:	b.eq	459938 <_obstack_memory_used@@Base+0xfed8>  // b.none
  459a30:	ldr	w0, [x24, #32]
  459a34:	tst	x25, #0xffffffffffe00000
  459a38:	b.eq	459e7c <_obstack_memory_used@@Base+0x1041c>  // b.none
  459a3c:	and	w0, w0, #0x7ff
  459a40:	str	w0, [x24, #32]
  459a44:	cbnz	x25, 459b6c <_obstack_memory_used@@Base+0x1010c>
  459a48:	ldr	x0, [x24]
  459a4c:	cmp	x0, x19
  459a50:	b.hi	459aa8 <_obstack_memory_used@@Base+0x10048>  // b.pmore
  459a54:	ldrb	w1, [x24, #32]
  459a58:	ldr	x21, [x24, #24]
  459a5c:	tbnz	w1, #0, 459ec0 <_obstack_memory_used@@Base+0x10460>
  459a60:	tbz	w1, #1, 459e18 <_obstack_memory_used@@Base+0x103b8>
  459a64:	ldr	x1, [x21]
  459a68:	cbnz	x1, 459a78 <_obstack_memory_used@@Base+0x10018>
  459a6c:	b	459aa8 <_obstack_memory_used@@Base+0x10048>
  459a70:	ldr	x1, [x21, #8]!
  459a74:	cbz	x1, 459aa8 <_obstack_memory_used@@Base+0x10048>
  459a78:	mov	x2, x19
  459a7c:	mov	x0, x24
  459a80:	bl	458f18 <_obstack_memory_used@@Base+0xf4b8>
  459a84:	mov	x20, x0
  459a88:	cbz	x0, 459a70 <_obstack_memory_used@@Base+0x10010>
  459a8c:	mov	x0, x20
  459a90:	ldp	x19, x20, [sp, #16]
  459a94:	ldp	x21, x22, [sp, #32]
  459a98:	ldp	x23, x24, [sp, #48]
  459a9c:	ldp	x25, x26, [sp, #64]
  459aa0:	ldp	x29, x30, [sp], #160
  459aa4:	ret
  459aa8:	ldp	x21, x22, [sp, #32]
  459aac:	ldp	x25, x26, [sp, #64]
  459ab0:	b	4598d8 <_obstack_memory_used@@Base+0xfe78>
  459ab4:	ldp	x21, x22, [sp, #32]
  459ab8:	ldp	x25, x26, [sp, #64]
  459abc:	ldp	x27, x28, [sp, #80]
  459ac0:	b	4598d8 <_obstack_memory_used@@Base+0xfe78>
  459ac4:	stp	x25, x26, [sp, #64]
  459ac8:	ubfx	x25, x0, #3, #8
  459acc:	add	x2, x24, #0x10
  459ad0:	add	x1, x24, #0x8
  459ad4:	mov	x0, x25
  459ad8:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  459adc:	mov	x24, x0
  459ae0:	ldr	x28, [x27, #8]
  459ae4:	cbz	x28, 459ab8 <_obstack_memory_used@@Base+0x10058>
  459ae8:	and	w0, w25, #0xf
  459aec:	add	x23, sp, #0x88
  459af0:	mov	x26, #0x0                   	// #0
  459af4:	stp	x21, x22, [sp, #32]
  459af8:	add	x22, sp, #0x90
  459afc:	str	w0, [sp, #96]
  459b00:	b	459b20 <_obstack_memory_used@@Base+0x100c0>
  459b04:	ldr	x1, [sp, #144]
  459b08:	add	x0, x0, x1
  459b0c:	cmp	x0, x19
  459b10:	b.hi	459e38 <_obstack_memory_used@@Base+0x103d8>  // b.pmore
  459b14:	add	x26, x21, #0x1
  459b18:	cmp	x26, x28
  459b1c:	b.cs	459ab4 <_obstack_memory_used@@Base+0x10054>  // b.hs, b.nlast
  459b20:	add	x21, x28, x26
  459b24:	mov	x3, x23
  459b28:	mov	x1, x24
  459b2c:	mov	w0, w25
  459b30:	lsr	x21, x21, #1
  459b34:	add	x2, x21, #0x2
  459b38:	ldr	x20, [x27, x2, lsl #3]
  459b3c:	add	x2, x20, #0x8
  459b40:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459b44:	mov	x2, x0
  459b48:	ldrb	w0, [sp, #96]
  459b4c:	mov	x3, x22
  459b50:	mov	x1, #0x0                   	// #0
  459b54:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  459b58:	ldr	x0, [sp, #136]
  459b5c:	cmp	x0, x19
  459b60:	b.ls	459b04 <_obstack_memory_used@@Base+0x100a4>  // b.plast
  459b64:	mov	x28, x21
  459b68:	b	459b18 <_obstack_memory_used@@Base+0x100b8>
  459b6c:	add	x20, x25, #0x2
  459b70:	lsl	x20, x20, #3
  459b74:	mov	x0, x20
  459b78:	bl	402670 <malloc@plt>
  459b7c:	str	x0, [sp, #144]
  459b80:	mov	x1, x0
  459b84:	cbz	x0, 459a48 <_obstack_memory_used@@Base+0xffe8>
  459b88:	str	xzr, [x1, #8]
  459b8c:	mov	x0, x20
  459b90:	bl	402670 <malloc@plt>
  459b94:	str	x0, [sp, #152]
  459b98:	cbz	x0, 459ba0 <_obstack_memory_used@@Base+0x10140>
  459b9c:	str	xzr, [x0, #8]
  459ba0:	ldrb	w0, [x24, #32]
  459ba4:	ldr	x20, [x24, #24]
  459ba8:	tbz	w0, #1, 459e54 <_obstack_memory_used@@Base+0x103f4>
  459bac:	ldr	x2, [x20]
  459bb0:	cbz	x2, 459eb8 <_obstack_memory_used@@Base+0x10458>
  459bb4:	add	x22, sp, #0x90
  459bb8:	mov	x1, x22
  459bbc:	mov	x0, x24
  459bc0:	bl	4592d8 <_obstack_memory_used@@Base+0xf878>
  459bc4:	ldr	x2, [x20, #8]!
  459bc8:	cbnz	x2, 459bb8 <_obstack_memory_used@@Base+0x10158>
  459bcc:	ldr	x0, [sp, #144]
  459bd0:	str	x0, [sp, #96]
  459bd4:	str	x0, [sp, #120]
  459bd8:	cbz	x0, 459be8 <_obstack_memory_used@@Base+0x10188>
  459bdc:	ldr	x0, [x0, #8]
  459be0:	cmp	x0, x25
  459be4:	b.ne	459eb8 <_obstack_memory_used@@Base+0x10458>  // b.any
  459be8:	ldrb	w0, [x24, #32]
  459bec:	tbnz	w0, #2, 459e48 <_obstack_memory_used@@Base+0x103e8>
  459bf0:	ldrh	w1, [x24, #32]
  459bf4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0xe5a0>
  459bf8:	adrp	x20, 458000 <_obstack_memory_used@@Base+0xe5a0>
  459bfc:	add	x0, x0, #0xe90
  459c00:	tst	w1, #0x7f8
  459c04:	add	x20, x20, #0x968
  459c08:	csel	x20, x20, x0, eq  // eq = none
  459c0c:	ldr	x22, [sp, #152]
  459c10:	cbz	x22, 459e68 <_obstack_memory_used@@Base+0x10408>
  459c14:	ldr	x1, [sp, #96]
  459c18:	stp	x27, x28, [sp, #80]
  459c1c:	ldr	x0, [x1, #8]
  459c20:	str	x0, [sp, #104]
  459c24:	cbz	x0, 459ea8 <_obstack_memory_used@@Base+0x10448>
  459c28:	adrp	x3, 48d000 <__environ@@GLIBC_2.17+0xa68>
  459c2c:	add	x3, x3, #0xb70
  459c30:	add	x0, x0, #0x1
  459c34:	add	x28, x1, #0x10
  459c38:	add	x27, x3, #0x190
  459c3c:	mov	x21, x28
  459c40:	mov	x23, x27
  459c44:	lsl	x0, x0, #3
  459c48:	mov	x26, #0x10                  	// #16
  459c4c:	str	x0, [sp, #112]
  459c50:	ldr	x0, [sp, #112]
  459c54:	str	x27, [x22, x26]
  459c58:	cmp	x0, x26
  459c5c:	b.eq	459cb8 <_obstack_memory_used@@Base+0x10258>  // b.none
  459c60:	cmp	x21, x23
  459c64:	mov	x27, x21
  459c68:	b.ne	459c88 <_obstack_memory_used@@Base+0x10228>  // b.any
  459c6c:	b	459ca8 <_obstack_memory_used@@Base+0x10248>
  459c70:	sub	x3, x27, x28
  459c74:	add	x0, x22, x3
  459c78:	ldr	x27, [x0, #16]
  459c7c:	str	xzr, [x0, #16]
  459c80:	cmp	x27, x23
  459c84:	b.eq	459ca8 <_obstack_memory_used@@Base+0x10248>  // b.none
  459c88:	ldr	x2, [x27]
  459c8c:	mov	x0, x24
  459c90:	ldr	x1, [x21, #8]
  459c94:	blr	x20
  459c98:	tbnz	w0, #31, 459c70 <_obstack_memory_used@@Base+0x10210>
  459c9c:	add	x21, x21, #0x8
  459ca0:	add	x26, x26, #0x8
  459ca4:	b	459c50 <_obstack_memory_used@@Base+0x101f0>
  459ca8:	mov	x27, x23
  459cac:	add	x21, x21, #0x8
  459cb0:	add	x26, x26, #0x8
  459cb4:	b	459c50 <_obstack_memory_used@@Base+0x101f0>
  459cb8:	add	x6, x22, #0x10
  459cbc:	mov	x5, #0x0                   	// #0
  459cc0:	mov	x3, #0x0                   	// #0
  459cc4:	mov	x0, #0x0                   	// #0
  459cc8:	b	459cec <_obstack_memory_used@@Base+0x1028c>
  459ccc:	ldr	x4, [sp, #96]
  459cd0:	add	x1, x3, #0x2
  459cd4:	add	x3, x3, #0x1
  459cd8:	str	x2, [x4, x1, lsl #3]
  459cdc:	ldr	x1, [sp, #104]
  459ce0:	add	x0, x0, #0x1
  459ce4:	cmp	x1, x0
  459ce8:	b.eq	459d08 <_obstack_memory_used@@Base+0x102a8>  // b.none
  459cec:	ldr	x1, [x6, x0, lsl #3]
  459cf0:	ldr	x2, [x28, x0, lsl #3]
  459cf4:	cbnz	x1, 459ccc <_obstack_memory_used@@Base+0x1026c>
  459cf8:	add	x1, x5, #0x2
  459cfc:	add	x5, x5, #0x1
  459d00:	str	x2, [x22, x1, lsl #3]
  459d04:	b	459cdc <_obstack_memory_used@@Base+0x1027c>
  459d08:	ldp	x0, x2, [sp, #144]
  459d0c:	str	x0, [sp, #96]
  459d10:	ldr	x0, [sp, #120]
  459d14:	str	x3, [x0, #8]
  459d18:	ldr	x0, [sp, #96]
  459d1c:	str	x5, [x22, #8]
  459d20:	ldr	x1, [x2, #8]
  459d24:	ldr	x0, [x0, #8]
  459d28:	add	x0, x0, x1
  459d2c:	cmp	x0, x25
  459d30:	b.ne	459ebc <_obstack_memory_used@@Base+0x1045c>  // b.any
  459d34:	mov	x1, x20
  459d38:	mov	x0, x24
  459d3c:	bl	458a98 <_obstack_memory_used@@Base+0xf038>
  459d40:	ldr	x25, [sp, #152]
  459d44:	ldr	x22, [x25, #8]
  459d48:	cbz	x22, 459dec <_obstack_memory_used@@Base+0x1038c>
  459d4c:	ldr	x0, [sp, #144]
  459d50:	str	x0, [sp, #96]
  459d54:	add	x27, x0, #0x10
  459d58:	ldr	x28, [x0, #8]
  459d5c:	nop
  459d60:	add	x0, x25, x22, lsl #3
  459d64:	sub	x23, x22, #0x1
  459d68:	ldr	x26, [x0, #8]
  459d6c:	cbz	x28, 459e88 <_obstack_memory_used@@Base+0x10428>
  459d70:	add	x22, x22, x28
  459d74:	mov	x21, x28
  459d78:	sub	x22, x22, #0x1
  459d7c:	b	459d90 <_obstack_memory_used@@Base+0x10330>
  459d80:	ldr	x0, [x27, x21, lsl #3]
  459d84:	str	x0, [x27, x22, lsl #3]
  459d88:	sub	x22, x22, #0x1
  459d8c:	cbz	x21, 459dc8 <_obstack_memory_used@@Base+0x10368>
  459d90:	mov	x28, x21
  459d94:	sub	x21, x21, #0x1
  459d98:	mov	x2, x26
  459d9c:	mov	x0, x24
  459da0:	ldr	x1, [x27, x21, lsl #3]
  459da4:	blr	x20
  459da8:	cmp	w0, #0x0
  459dac:	b.gt	459d80 <_obstack_memory_used@@Base+0x10320>
  459db0:	ldr	x0, [sp, #96]
  459db4:	add	x22, x22, #0x2
  459db8:	str	x26, [x0, x22, lsl #3]
  459dbc:	cbz	x23, 459dd4 <_obstack_memory_used@@Base+0x10374>
  459dc0:	mov	x22, x23
  459dc4:	b	459d60 <_obstack_memory_used@@Base+0x10300>
  459dc8:	mov	x22, x23
  459dcc:	mov	x28, #0x0                   	// #0
  459dd0:	b	459db0 <_obstack_memory_used@@Base+0x10350>
  459dd4:	ldr	x2, [sp, #96]
  459dd8:	ldr	x1, [x25, #8]
  459ddc:	ldr	x0, [x2, #8]
  459de0:	ldr	x25, [sp, #152]
  459de4:	add	x0, x0, x1
  459de8:	str	x0, [x2, #8]
  459dec:	mov	x0, x25
  459df0:	bl	402910 <free@plt>
  459df4:	ldp	x27, x28, [sp, #80]
  459df8:	ldr	x1, [sp, #144]
  459dfc:	ldrb	w0, [x24, #32]
  459e00:	ldr	x2, [x24, #24]
  459e04:	str	x2, [x1]
  459e08:	orr	w0, w0, #0x1
  459e0c:	str	x1, [x24, #24]
  459e10:	strb	w0, [x24, #32]
  459e14:	b	459a48 <_obstack_memory_used@@Base+0xffe8>
  459e18:	mov	x1, x21
  459e1c:	mov	x2, x19
  459e20:	mov	x0, x24
  459e24:	bl	458f18 <_obstack_memory_used@@Base+0xf4b8>
  459e28:	mov	x20, x0
  459e2c:	ldp	x21, x22, [sp, #32]
  459e30:	ldp	x25, x26, [sp, #64]
  459e34:	b	4598dc <_obstack_memory_used@@Base+0xfe7c>
  459e38:	ldp	x21, x22, [sp, #32]
  459e3c:	ldp	x25, x26, [sp, #64]
  459e40:	ldp	x27, x28, [sp, #80]
  459e44:	b	4598dc <_obstack_memory_used@@Base+0xfe7c>
  459e48:	adrp	x20, 459000 <_obstack_memory_used@@Base+0xf5a0>
  459e4c:	add	x20, x20, #0x98
  459e50:	b	459c0c <_obstack_memory_used@@Base+0x101ac>
  459e54:	mov	x2, x20
  459e58:	add	x1, sp, #0x90
  459e5c:	mov	x0, x24
  459e60:	bl	4592d8 <_obstack_memory_used@@Base+0xf878>
  459e64:	b	459bcc <_obstack_memory_used@@Base+0x1016c>
  459e68:	ldr	x2, [sp, #96]
  459e6c:	mov	x1, x20
  459e70:	mov	x0, x24
  459e74:	bl	458a98 <_obstack_memory_used@@Base+0xf038>
  459e78:	b	459df8 <_obstack_memory_used@@Base+0x10398>
  459e7c:	bfi	w0, w25, #11, #21
  459e80:	str	w0, [x24, #32]
  459e84:	b	459a44 <_obstack_memory_used@@Base+0xffe4>
  459e88:	ldr	x2, [sp, #96]
  459e8c:	add	x1, x22, #0x1
  459e90:	str	x26, [x2, x1, lsl #3]
  459e94:	cbz	x23, 459dd4 <_obstack_memory_used@@Base+0x10374>
  459e98:	sub	x23, x22, #0x2
  459e9c:	mov	x22, x23
  459ea0:	ldr	x26, [x0]
  459ea4:	b	459db0 <_obstack_memory_used@@Base+0x10350>
  459ea8:	mov	x2, x22
  459eac:	mov	x5, #0x0                   	// #0
  459eb0:	mov	x3, #0x0                   	// #0
  459eb4:	b	459d10 <_obstack_memory_used@@Base+0x102b0>
  459eb8:	stp	x27, x28, [sp, #80]
  459ebc:	bl	4027f0 <abort@plt>
  459ec0:	ldp	x21, x22, [sp, #32]
  459ec4:	ldp	x25, x26, [sp, #64]
  459ec8:	b	459888 <_obstack_memory_used@@Base+0xfe28>
  459ecc:	nop
  459ed0:	stp	x29, x30, [sp, #-48]!
  459ed4:	mov	x5, #0xffffffffffffffff    	// #-1
  459ed8:	mov	x4, #0x7f8                 	// #2040
  459edc:	mov	x29, sp
  459ee0:	stp	x19, x20, [sp, #16]
  459ee4:	adrp	x20, 48b000 <_obstack_memory_used@@Base+0x415a0>
  459ee8:	mov	x19, x1
  459eec:	ldr	x1, [x20, #3880]
  459ef0:	str	x21, [sp, #32]
  459ef4:	stp	x5, x2, [x19]
  459ef8:	adrp	x21, 48d000 <__environ@@GLIBC_2.17+0xa68>
  459efc:	stp	x3, x0, [x19, #16]
  459f00:	str	x4, [x19, #32]
  459f04:	cbz	x1, 459f14 <_obstack_memory_used@@Base+0x104b4>
  459f08:	add	x0, x21, #0xb70
  459f0c:	add	x0, x0, #0x198
  459f10:	bl	402ad0 <pthread_mutex_lock@plt>
  459f14:	add	x1, x21, #0xb70
  459f18:	ldr	w0, [x1, #464]
  459f1c:	ldr	x2, [x1, #456]
  459f20:	str	x2, [x19, #40]
  459f24:	str	x19, [x1, #456]
  459f28:	cbz	w0, 459f5c <_obstack_memory_used@@Base+0x104fc>
  459f2c:	ldr	x20, [x20, #3880]
  459f30:	cbz	x20, 459f4c <_obstack_memory_used@@Base+0x104ec>
  459f34:	add	x0, x21, #0xb70
  459f38:	ldp	x19, x20, [sp, #16]
  459f3c:	add	x0, x0, #0x198
  459f40:	ldr	x21, [sp, #32]
  459f44:	ldp	x29, x30, [sp], #48
  459f48:	b	402b00 <pthread_mutex_unlock@plt>
  459f4c:	ldp	x19, x20, [sp, #16]
  459f50:	ldr	x21, [sp, #32]
  459f54:	ldp	x29, x30, [sp], #48
  459f58:	ret
  459f5c:	add	x1, x1, #0x1d0
  459f60:	mov	w0, #0x1                   	// #1
  459f64:	str	w0, [x1]
  459f68:	b	459f2c <_obstack_memory_used@@Base+0x104cc>
  459f6c:	nop
  459f70:	cbz	x0, 459f80 <_obstack_memory_used@@Base+0x10520>
  459f74:	ldr	w4, [x0]
  459f78:	cbz	w4, 459f80 <_obstack_memory_used@@Base+0x10520>
  459f7c:	b	459ed0 <_obstack_memory_used@@Base+0x10470>
  459f80:	ret
  459f84:	nop
  459f88:	cbz	x0, 459fa0 <_obstack_memory_used@@Base+0x10540>
  459f8c:	ldr	w2, [x0]
  459f90:	cbz	w2, 459fa0 <_obstack_memory_used@@Base+0x10540>
  459f94:	mov	x3, #0x0                   	// #0
  459f98:	mov	x2, #0x0                   	// #0
  459f9c:	b	459ed0 <_obstack_memory_used@@Base+0x10470>
  459fa0:	ret
  459fa4:	nop
  459fa8:	stp	x29, x30, [sp, #-32]!
  459fac:	mov	x29, sp
  459fb0:	str	x19, [sp, #16]
  459fb4:	mov	x19, x0
  459fb8:	ldr	w0, [x0]
  459fbc:	cbnz	w0, 459fcc <_obstack_memory_used@@Base+0x1056c>
  459fc0:	ldr	x19, [sp, #16]
  459fc4:	ldp	x29, x30, [sp], #32
  459fc8:	ret
  459fcc:	mov	x0, #0x30                  	// #48
  459fd0:	bl	402670 <malloc@plt>
  459fd4:	mov	x1, x0
  459fd8:	mov	x0, x19
  459fdc:	ldr	x19, [sp, #16]
  459fe0:	mov	x3, #0x0                   	// #0
  459fe4:	ldp	x29, x30, [sp], #32
  459fe8:	mov	x2, #0x0                   	// #0
  459fec:	b	459ed0 <_obstack_memory_used@@Base+0x10470>
  459ff0:	stp	x29, x30, [sp, #-48]!
  459ff4:	mov	x5, #0xffffffffffffffff    	// #-1
  459ff8:	mov	x4, #0x7fa                 	// #2042
  459ffc:	mov	x29, sp
  45a000:	stp	x19, x20, [sp, #16]
  45a004:	adrp	x20, 48b000 <_obstack_memory_used@@Base+0x415a0>
  45a008:	mov	x19, x1
  45a00c:	ldr	x1, [x20, #3880]
  45a010:	str	x21, [sp, #32]
  45a014:	stp	x5, x2, [x19]
  45a018:	adrp	x21, 48d000 <__environ@@GLIBC_2.17+0xa68>
  45a01c:	stp	x3, x0, [x19, #16]
  45a020:	str	x4, [x19, #32]
  45a024:	cbz	x1, 45a034 <_obstack_memory_used@@Base+0x105d4>
  45a028:	add	x0, x21, #0xb70
  45a02c:	add	x0, x0, #0x198
  45a030:	bl	402ad0 <pthread_mutex_lock@plt>
  45a034:	add	x1, x21, #0xb70
  45a038:	ldr	w0, [x1, #464]
  45a03c:	ldr	x2, [x1, #456]
  45a040:	str	x2, [x19, #40]
  45a044:	str	x19, [x1, #456]
  45a048:	cbz	w0, 45a07c <_obstack_memory_used@@Base+0x1061c>
  45a04c:	ldr	x20, [x20, #3880]
  45a050:	cbz	x20, 45a06c <_obstack_memory_used@@Base+0x1060c>
  45a054:	add	x0, x21, #0xb70
  45a058:	ldp	x19, x20, [sp, #16]
  45a05c:	add	x0, x0, #0x198
  45a060:	ldr	x21, [sp, #32]
  45a064:	ldp	x29, x30, [sp], #48
  45a068:	b	402b00 <pthread_mutex_unlock@plt>
  45a06c:	ldp	x19, x20, [sp, #16]
  45a070:	ldr	x21, [sp, #32]
  45a074:	ldp	x29, x30, [sp], #48
  45a078:	ret
  45a07c:	add	x1, x1, #0x1d0
  45a080:	mov	w0, #0x1                   	// #1
  45a084:	str	w0, [x1]
  45a088:	b	45a04c <_obstack_memory_used@@Base+0x105ec>
  45a08c:	nop
  45a090:	mov	x3, #0x0                   	// #0
  45a094:	mov	x2, #0x0                   	// #0
  45a098:	b	459ff0 <_obstack_memory_used@@Base+0x10590>
  45a09c:	nop
  45a0a0:	stp	x29, x30, [sp, #-32]!
  45a0a4:	mov	x29, sp
  45a0a8:	str	x19, [sp, #16]
  45a0ac:	mov	x19, x0
  45a0b0:	mov	x0, #0x30                  	// #48
  45a0b4:	bl	402670 <malloc@plt>
  45a0b8:	mov	x1, x0
  45a0bc:	mov	x0, x19
  45a0c0:	ldr	x19, [sp, #16]
  45a0c4:	mov	x3, #0x0                   	// #0
  45a0c8:	ldp	x29, x30, [sp], #32
  45a0cc:	mov	x2, #0x0                   	// #0
  45a0d0:	b	459ff0 <_obstack_memory_used@@Base+0x10590>
  45a0d4:	nop
  45a0d8:	stp	x29, x30, [sp, #-48]!
  45a0dc:	mov	x29, sp
  45a0e0:	stp	x19, x20, [sp, #16]
  45a0e4:	cbz	x0, 45a1b0 <_obstack_memory_used@@Base+0x10750>
  45a0e8:	mov	x20, x0
  45a0ec:	ldr	w0, [x0]
  45a0f0:	cbz	w0, 45a1b0 <_obstack_memory_used@@Base+0x10750>
  45a0f4:	stp	x21, x22, [sp, #32]
  45a0f8:	adrp	x21, 48b000 <_obstack_memory_used@@Base+0x415a0>
  45a0fc:	adrp	x22, 48d000 <__environ@@GLIBC_2.17+0xa68>
  45a100:	ldr	x0, [x21, #3880]
  45a104:	cbz	x0, 45a114 <_obstack_memory_used@@Base+0x106b4>
  45a108:	add	x0, x22, #0xb70
  45a10c:	add	x0, x0, #0x198
  45a110:	bl	402ad0 <pthread_mutex_lock@plt>
  45a114:	add	x2, x22, #0xb70
  45a118:	ldr	x1, [x2, #456]
  45a11c:	cbz	x1, 45a164 <_obstack_memory_used@@Base+0x10704>
  45a120:	add	x2, x2, #0x1c8
  45a124:	b	45a130 <_obstack_memory_used@@Base+0x106d0>
  45a128:	add	x2, x19, #0x28
  45a12c:	cbz	x1, 45a164 <_obstack_memory_used@@Base+0x10704>
  45a130:	ldr	x0, [x1, #24]
  45a134:	mov	x19, x1
  45a138:	ldr	x1, [x1, #40]
  45a13c:	cmp	x20, x0
  45a140:	b.ne	45a128 <_obstack_memory_used@@Base+0x106c8>  // b.any
  45a144:	str	x1, [x2]
  45a148:	ldr	x21, [x21, #3880]
  45a14c:	cbnz	x21, 45a1c4 <_obstack_memory_used@@Base+0x10764>
  45a150:	mov	x0, x19
  45a154:	ldp	x19, x20, [sp, #16]
  45a158:	ldp	x21, x22, [sp, #32]
  45a15c:	ldp	x29, x30, [sp], #48
  45a160:	ret
  45a164:	add	x2, x22, #0xb70
  45a168:	ldr	x19, [x2, #472]
  45a16c:	cbz	x19, 45a1e4 <_obstack_memory_used@@Base+0x10784>
  45a170:	add	x2, x2, #0x1d8
  45a174:	b	45a190 <_obstack_memory_used@@Base+0x10730>
  45a178:	ldr	x1, [x0]
  45a17c:	cmp	x20, x1
  45a180:	b.eq	45a1fc <_obstack_memory_used@@Base+0x1079c>  // b.none
  45a184:	add	x2, x19, #0x28
  45a188:	ldr	x19, [x19, #40]
  45a18c:	cbz	x19, 45a1e4 <_obstack_memory_used@@Base+0x10784>
  45a190:	ldrb	w1, [x19, #32]
  45a194:	ldr	x0, [x19, #24]
  45a198:	tbnz	w1, #0, 45a178 <_obstack_memory_used@@Base+0x10718>
  45a19c:	cmp	x20, x0
  45a1a0:	b.ne	45a184 <_obstack_memory_used@@Base+0x10724>  // b.any
  45a1a4:	ldr	x0, [x19, #40]
  45a1a8:	str	x0, [x2]
  45a1ac:	b	45a148 <_obstack_memory_used@@Base+0x106e8>
  45a1b0:	mov	x19, #0x0                   	// #0
  45a1b4:	mov	x0, x19
  45a1b8:	ldp	x19, x20, [sp, #16]
  45a1bc:	ldp	x29, x30, [sp], #48
  45a1c0:	ret
  45a1c4:	add	x0, x22, #0xb70
  45a1c8:	add	x0, x0, #0x198
  45a1cc:	bl	402b00 <pthread_mutex_unlock@plt>
  45a1d0:	mov	x0, x19
  45a1d4:	ldp	x19, x20, [sp, #16]
  45a1d8:	ldp	x21, x22, [sp, #32]
  45a1dc:	ldp	x29, x30, [sp], #48
  45a1e0:	ret
  45a1e4:	ldr	x21, [x21, #3880]
  45a1e8:	cbz	x21, 45a1f8 <_obstack_memory_used@@Base+0x10798>
  45a1ec:	add	x0, x22, #0xb70
  45a1f0:	add	x0, x0, #0x198
  45a1f4:	bl	402b00 <pthread_mutex_unlock@plt>
  45a1f8:	bl	4027f0 <abort@plt>
  45a1fc:	ldr	x1, [x19, #40]
  45a200:	str	x1, [x2]
  45a204:	bl	402910 <free@plt>
  45a208:	b	45a148 <_obstack_memory_used@@Base+0x106e8>
  45a20c:	nop
  45a210:	b	45a0d8 <_obstack_memory_used@@Base+0x10678>
  45a214:	nop
  45a218:	ldr	w1, [x0]
  45a21c:	cbnz	w1, 45a224 <_obstack_memory_used@@Base+0x107c4>
  45a220:	ret
  45a224:	stp	x29, x30, [sp, #-16]!
  45a228:	mov	x29, sp
  45a22c:	bl	45a0d8 <_obstack_memory_used@@Base+0x10678>
  45a230:	ldp	x29, x30, [sp], #16
  45a234:	b	402910 <free@plt>
  45a238:	stp	x29, x30, [sp, #-128]!
  45a23c:	mov	x29, sp
  45a240:	stp	x23, x24, [sp, #48]
  45a244:	adrp	x23, 48d000 <__environ@@GLIBC_2.17+0xa68>
  45a248:	add	x2, x23, #0xb70
  45a24c:	stp	x19, x20, [sp, #16]
  45a250:	mov	x20, x0
  45a254:	add	x0, x2, #0x1d0
  45a258:	stp	x21, x22, [sp, #32]
  45a25c:	mov	x22, x1
  45a260:	ldr	w0, [x0]
  45a264:	cbnz	w0, 45a2c8 <_obstack_memory_used@@Base+0x10868>
  45a268:	mov	w2, #0x1                   	// #1
  45a26c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0xf5a0>
  45a270:	add	x1, sp, #0x50
  45a274:	add	x0, x0, #0x418
  45a278:	stp	x20, xzr, [sp, #80]
  45a27c:	stp	xzr, xzr, [sp, #96]
  45a280:	str	xzr, [sp, #112]
  45a284:	str	w2, [sp, #120]
  45a288:	bl	4028e0 <dl_iterate_phdr@plt>
  45a28c:	tbnz	w0, #31, 45a3dc <_obstack_memory_used@@Base+0x1097c>
  45a290:	ldr	x21, [sp, #112]
  45a294:	cbz	x21, 45a2b0 <_obstack_memory_used@@Base+0x10850>
  45a298:	ldr	x0, [sp, #88]
  45a29c:	str	x0, [x22]
  45a2a0:	ldr	x0, [sp, #96]
  45a2a4:	str	x0, [x22, #8]
  45a2a8:	ldr	x0, [sp, #104]
  45a2ac:	str	x0, [x22, #16]
  45a2b0:	mov	x0, x21
  45a2b4:	ldp	x19, x20, [sp, #16]
  45a2b8:	ldp	x21, x22, [sp, #32]
  45a2bc:	ldp	x23, x24, [sp, #48]
  45a2c0:	ldp	x29, x30, [sp], #128
  45a2c4:	ret
  45a2c8:	stp	x25, x26, [sp, #64]
  45a2cc:	adrp	x25, 48b000 <_obstack_memory_used@@Base+0x415a0>
  45a2d0:	ldr	x0, [x25, #3880]
  45a2d4:	cbz	x0, 45a2e0 <_obstack_memory_used@@Base+0x10880>
  45a2d8:	add	x0, x2, #0x198
  45a2dc:	bl	402ad0 <pthread_mutex_lock@plt>
  45a2e0:	add	x0, x23, #0xb70
  45a2e4:	ldr	x19, [x0, #472]
  45a2e8:	cbnz	x19, 45a2f8 <_obstack_memory_used@@Base+0x10898>
  45a2ec:	b	45a374 <_obstack_memory_used@@Base+0x10914>
  45a2f0:	ldr	x19, [x19, #40]
  45a2f4:	cbz	x19, 45a374 <_obstack_memory_used@@Base+0x10914>
  45a2f8:	ldr	x0, [x19]
  45a2fc:	cmp	x20, x0
  45a300:	b.cc	45a2f0 <_obstack_memory_used@@Base+0x10890>  // b.lo, b.ul, b.last
  45a304:	mov	x1, x20
  45a308:	mov	x0, x19
  45a30c:	bl	459868 <_obstack_memory_used@@Base+0xfe08>
  45a310:	mov	x21, x0
  45a314:	cbz	x0, 45a374 <_obstack_memory_used@@Base+0x10914>
  45a318:	ldr	x25, [x25, #3880]
  45a31c:	cbnz	x25, 45a3e4 <_obstack_memory_used@@Base+0x10984>
  45a320:	ldrb	w0, [x19, #32]
  45a324:	ldr	x1, [x19, #8]
  45a328:	str	x1, [x22]
  45a32c:	ldr	x1, [x19, #16]
  45a330:	str	x1, [x22, #8]
  45a334:	tbnz	w0, #2, 45a3f4 <_obstack_memory_used@@Base+0x10994>
  45a338:	ldrh	w20, [x19, #32]
  45a33c:	ubfx	x20, x20, #3, #8
  45a340:	add	x2, x19, #0x10
  45a344:	add	x1, x19, #0x8
  45a348:	mov	w0, w20
  45a34c:	bl	458e30 <_obstack_memory_used@@Base+0xf3d0>
  45a350:	add	x3, sp, #0x50
  45a354:	mov	x1, x0
  45a358:	add	x2, x21, #0x8
  45a35c:	mov	w0, w20
  45a360:	bl	458bb8 <_obstack_memory_used@@Base+0xf158>
  45a364:	ldr	x0, [sp, #80]
  45a368:	ldp	x25, x26, [sp, #64]
  45a36c:	str	x0, [x22, #16]
  45a370:	b	45a2b0 <_obstack_memory_used@@Base+0x10850>
  45a374:	add	x24, x23, #0xb70
  45a378:	add	x26, x24, #0x1d8
  45a37c:	nop
  45a380:	ldr	x19, [x24, #456]
  45a384:	cbz	x19, 45a40c <_obstack_memory_used@@Base+0x109ac>
  45a388:	ldr	x2, [x19, #40]
  45a38c:	mov	x1, x20
  45a390:	mov	x0, x19
  45a394:	str	x2, [x24, #456]
  45a398:	bl	459868 <_obstack_memory_used@@Base+0xfe08>
  45a39c:	mov	x21, x0
  45a3a0:	ldr	x2, [x24, #472]
  45a3a4:	cbz	x2, 45a424 <_obstack_memory_used@@Base+0x109c4>
  45a3a8:	mov	x0, x26
  45a3ac:	ldr	x3, [x19]
  45a3b0:	b	45a3c0 <_obstack_memory_used@@Base+0x10960>
  45a3b4:	add	x0, x2, #0x28
  45a3b8:	ldr	x2, [x2, #40]
  45a3bc:	cbz	x2, 45a3cc <_obstack_memory_used@@Base+0x1096c>
  45a3c0:	ldr	x1, [x2]
  45a3c4:	cmp	x1, x3
  45a3c8:	b.cs	45a3b4 <_obstack_memory_used@@Base+0x10954>  // b.hs, b.nlast
  45a3cc:	str	x2, [x19, #40]
  45a3d0:	str	x19, [x0]
  45a3d4:	cbz	x21, 45a380 <_obstack_memory_used@@Base+0x10920>
  45a3d8:	b	45a318 <_obstack_memory_used@@Base+0x108b8>
  45a3dc:	mov	x21, #0x0                   	// #0
  45a3e0:	b	45a2b0 <_obstack_memory_used@@Base+0x10850>
  45a3e4:	add	x0, x23, #0xb70
  45a3e8:	add	x0, x0, #0x198
  45a3ec:	bl	402b00 <pthread_mutex_unlock@plt>
  45a3f0:	b	45a320 <_obstack_memory_used@@Base+0x108c0>
  45a3f4:	add	x1, x21, #0x4
  45a3f8:	ldrsw	x0, [x21, #4]
  45a3fc:	sub	x0, x1, x0
  45a400:	bl	458d18 <_obstack_memory_used@@Base+0xf2b8>
  45a404:	and	w20, w0, #0xff
  45a408:	b	45a340 <_obstack_memory_used@@Base+0x108e0>
  45a40c:	ldr	x25, [x25, #3880]
  45a410:	cbz	x25, 45a42c <_obstack_memory_used@@Base+0x109cc>
  45a414:	add	x0, x24, #0x198
  45a418:	bl	402b00 <pthread_mutex_unlock@plt>
  45a41c:	ldp	x25, x26, [sp, #64]
  45a420:	b	45a268 <_obstack_memory_used@@Base+0x10808>
  45a424:	mov	x0, x26
  45a428:	b	45a3cc <_obstack_memory_used@@Base+0x1096c>
  45a42c:	ldp	x25, x26, [sp, #64]
  45a430:	b	45a268 <_obstack_memory_used@@Base+0x10808>
  45a434:	nop
  45a438:	stp	x29, x30, [sp, #-64]!
  45a43c:	mov	x29, sp
  45a440:	stp	x19, x20, [sp, #16]
  45a444:	adrp	x20, 48a000 <_obstack_memory_used@@Base+0x405a0>
  45a448:	add	x20, x20, #0xd98
  45a44c:	stp	x21, x22, [sp, #32]
  45a450:	adrp	x21, 48a000 <_obstack_memory_used@@Base+0x405a0>
  45a454:	add	x21, x21, #0xd78
  45a458:	sub	x20, x20, x21
  45a45c:	mov	w22, w0
  45a460:	stp	x23, x24, [sp, #48]
  45a464:	mov	x23, x1
  45a468:	mov	x24, x2
  45a46c:	bl	402450 <memcpy@plt-0x40>
  45a470:	cmp	xzr, x20, asr #3
  45a474:	b.eq	45a4a0 <_obstack_memory_used@@Base+0x10a40>  // b.none
  45a478:	asr	x20, x20, #3
  45a47c:	mov	x19, #0x0                   	// #0
  45a480:	ldr	x3, [x21, x19, lsl #3]
  45a484:	mov	x2, x24
  45a488:	add	x19, x19, #0x1
  45a48c:	mov	x1, x23
  45a490:	mov	w0, w22
  45a494:	blr	x3
  45a498:	cmp	x20, x19
  45a49c:	b.ne	45a480 <_obstack_memory_used@@Base+0x10a20>  // b.any
  45a4a0:	ldp	x19, x20, [sp, #16]
  45a4a4:	ldp	x21, x22, [sp, #32]
  45a4a8:	ldp	x23, x24, [sp, #48]
  45a4ac:	ldp	x29, x30, [sp], #64
  45a4b0:	ret
  45a4b4:	nop
  45a4b8:	ret

Disassembly of section .fini:

000000000045a4bc <.fini>:
  45a4bc:	stp	x29, x30, [sp, #-16]!
  45a4c0:	mov	x29, sp
  45a4c4:	ldp	x29, x30, [sp], #16
  45a4c8:	ret
