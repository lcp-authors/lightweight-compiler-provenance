
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revoutput.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <fputs@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 10000 <dl_load@@Base+0xf670>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <fputs@plt>:
 670:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <exit@plt>:
 680:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <__cxa_finalize@plt>:
 690:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <putc@plt>:
 6a0:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <__gmon_start__@plt>:
 6b0:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <dcgettext@plt>:
 6c0:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 11000 <fputs@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0x2b0>:
 6e0:	adrp	x0, 10000 <dl_load@@Base+0xf670>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	6b0 <__gmon_start__@plt>
 6f0:	ret
 6f4:	adrp	x0, 11000 <dl_load@@Base+0x10670>
 6f8:	add	x0, x0, #0x60
 6fc:	adrp	x1, 11000 <dl_load@@Base+0x10670>
 700:	add	x1, x1, #0x60
 704:	cmp	x1, x0
 708:	b.eq	720 <fprintf@plt+0x50>  // b.none
 70c:	adrp	x1, 10000 <dl_load@@Base+0xf670>
 710:	ldr	x1, [x1, #4032]
 714:	cbz	x1, 720 <fprintf@plt+0x50>
 718:	mov	x16, x1
 71c:	br	x16
 720:	ret
 724:	adrp	x0, 11000 <dl_load@@Base+0x10670>
 728:	add	x0, x0, #0x60
 72c:	adrp	x1, 11000 <dl_load@@Base+0x10670>
 730:	add	x1, x1, #0x60
 734:	sub	x1, x1, x0
 738:	mov	x2, #0x2                   	// #2
 73c:	asr	x1, x1, #3
 740:	sdiv	x1, x1, x2
 744:	cbz	x1, 75c <fprintf@plt+0x8c>
 748:	adrp	x2, 10000 <dl_load@@Base+0xf670>
 74c:	ldr	x2, [x2, #4064]
 750:	cbz	x2, 75c <fprintf@plt+0x8c>
 754:	mov	x16, x2
 758:	br	x16
 75c:	ret
 760:	adrp	x0, 11000 <dl_load@@Base+0x10670>
 764:	ldrb	w1, [x0, #96]
 768:	cbnz	w1, 7ac <fprintf@plt+0xdc>
 76c:	stp	x29, x30, [sp, #-32]!
 770:	mov	x29, sp
 774:	str	x19, [sp, #16]
 778:	mov	x19, x0
 77c:	adrp	x0, 10000 <dl_load@@Base+0xf670>
 780:	ldr	x0, [x0, #4040]
 784:	cbz	x0, 794 <fprintf@plt+0xc4>
 788:	adrp	x0, 11000 <dl_load@@Base+0x10670>
 78c:	ldr	x0, [x0, #56]
 790:	bl	690 <__cxa_finalize@plt>
 794:	bl	6f4 <fprintf@plt+0x24>
 798:	mov	w0, #0x1                   	// #1
 79c:	strb	w0, [x19, #96]
 7a0:	ldr	x19, [sp, #16]
 7a4:	ldp	x29, x30, [sp], #32
 7a8:	ret
 7ac:	ret
 7b0:	b	724 <fprintf@plt+0x54>
 7b4:	cbnz	x0, 7cc <fprintf@plt+0xfc>
 7b8:	mov	w0, #0x0                   	// #0
 7bc:	ret
 7c0:	mov	w0, #0x0                   	// #0
 7c4:	ldp	x29, x30, [sp], #48
 7c8:	ret
 7cc:	adrp	x0, 11000 <dl_load@@Base+0x10670>
 7d0:	add	x1, x0, #0x68
 7d4:	stp	x29, x30, [sp, #-48]!
 7d8:	adrp	x2, 0 <fputs@plt-0x670>
 7dc:	mov	w3, #0x1                   	// #1
 7e0:	mov	x29, sp
 7e4:	ldr	x1, [x1, #8]
 7e8:	add	x4, sp, #0x10
 7ec:	ldr	x0, [x0, #104]
 7f0:	add	x2, x2, #0xab8
 7f4:	ldr	x5, [x1, #168]
 7f8:	adrp	x1, 0 <fputs@plt-0x670>
 7fc:	add	x1, x1, #0xb16
 800:	blr	x5
 804:	cbz	w0, 7c0 <fprintf@plt+0xf0>
 808:	ldr	d0, [sp, #24]
 80c:	fcmp	d0, #0.0
 810:	cset	w0, ne  // ne = any
 814:	b	7c4 <fprintf@plt+0xf4>
 818:	mov	x1, x0
 81c:	cbz	x0, 838 <fprintf@plt+0x168>
 820:	adrp	x0, 0 <fputs@plt-0x670>
 824:	add	x0, x0, #0x92c
 828:	str	x0, [x1, #40]
 82c:	mov	w0, #0x1                   	// #1
 830:	str	w0, [x1, #24]
 834:	ret
 838:	mov	w0, #0x0                   	// #0
 83c:	b	834 <fprintf@plt+0x164>
 840:	stp	x29, x30, [sp, #-96]!
 844:	adrp	x1, 11000 <dl_load@@Base+0x10670>
 848:	add	x1, x1, #0x40
 84c:	mov	x29, sp
 850:	stp	x19, x20, [sp, #16]
 854:	adrp	x20, 11000 <dl_load@@Base+0x10670>
 858:	adrp	x19, 0 <fputs@plt-0x670>
 85c:	stp	x21, x22, [sp, #32]
 860:	add	x21, x20, #0x68
 864:	add	x19, x19, #0xb16
 868:	adrp	x22, 0 <fputs@plt-0x670>
 86c:	add	x22, x22, #0xab8
 870:	ldr	x0, [x21, #8]
 874:	ldr	x2, [x0, #64]
 878:	str	x23, [sp, #48]
 87c:	ldr	x0, [x20, #104]
 880:	add	x23, sp, #0x40
 884:	blr	x2
 888:	ldr	x0, [x21, #8]
 88c:	mov	x4, x23
 890:	mov	x2, x22
 894:	mov	x1, x19
 898:	mov	w3, #0x6                   	// #6
 89c:	ldr	x5, [x0, #168]
 8a0:	ldr	x0, [x20, #104]
 8a4:	blr	x5
 8a8:	cbz	w0, 8c8 <fprintf@plt+0x1f8>
 8ac:	mov	w19, #0x1                   	// #1
 8b0:	mov	w0, w19
 8b4:	ldp	x19, x20, [sp, #16]
 8b8:	ldp	x21, x22, [sp, #32]
 8bc:	ldr	x23, [sp, #48]
 8c0:	ldp	x29, x30, [sp], #96
 8c4:	ret
 8c8:	mov	w0, #0x1                   	// #1
 8cc:	str	w0, [sp, #64]
 8d0:	ldr	x0, [x21, #8]
 8d4:	str	xzr, [sp, #72]
 8d8:	str	wzr, [sp, #80]
 8dc:	mov	x1, x19
 8e0:	mov	x3, x23
 8e4:	mov	x2, x22
 8e8:	ldr	x4, [x0, #176]
 8ec:	ldr	x0, [x20, #104]
 8f0:	blr	x4
 8f4:	mov	w19, w0
 8f8:	cbnz	w0, 8ac <fprintf@plt+0x1dc>
 8fc:	ldr	x0, [x21, #8]
 900:	mov	w2, #0x5                   	// #5
 904:	ldr	x20, [x20, #104]
 908:	adrp	x1, 0 <fputs@plt-0x670>
 90c:	ldr	x21, [x0, #104]
 910:	add	x1, x1, #0xabf
 914:	mov	x0, #0x0                   	// #0
 918:	bl	6c0 <dcgettext@plt>
 91c:	mov	x1, x0
 920:	mov	x0, x20
 924:	blr	x21
 928:	b	8b0 <fprintf@plt+0x1e0>
 92c:	stp	x29, x30, [sp, #-64]!
 930:	mov	x29, sp
 934:	stp	x19, x20, [sp, #16]
 938:	mul	w19, w1, w2
 93c:	mov	x20, x2
 940:	stp	x21, x22, [sp, #32]
 944:	mov	x22, x0
 948:	mov	x21, x1
 94c:	sxtw	x19, w19
 950:	str	x23, [sp, #48]
 954:	mov	x23, x3
 958:	sub	x19, x19, #0x1
 95c:	add	w0, w19, #0x1
 960:	cmp	w0, #0x0
 964:	b.gt	980 <fprintf@plt+0x2b0>
 968:	mul	x0, x21, x20
 96c:	ldp	x19, x20, [sp, #16]
 970:	ldp	x21, x22, [sp, #32]
 974:	ldr	x23, [sp, #48]
 978:	ldp	x29, x30, [sp], #64
 97c:	ret
 980:	ldrb	w0, [x22, x19]
 984:	mov	x1, x23
 988:	bl	6a0 <putc@plt>
 98c:	b	958 <fprintf@plt+0x288>

0000000000000990 <dl_load@@Base>:
 990:	stp	x29, x30, [sp, #-32]!
 994:	mov	x3, x0
 998:	mov	x0, x1
 99c:	mov	x29, sp
 9a0:	stp	x19, x20, [sp, #16]
 9a4:	adrp	x19, 11000 <dl_load@@Base+0x10670>
 9a8:	add	x20, x19, #0x68
 9ac:	str	x1, [x19, #104]
 9b0:	ldr	w1, [x3]
 9b4:	str	x3, [x20, #8]
 9b8:	cmp	w1, #0x2
 9bc:	b.ne	9c8 <dl_load@@Base+0x38>  // b.any
 9c0:	ldr	w1, [x3, #4]
 9c4:	tbz	w1, #31, a2c <dl_load@@Base+0x9c>
 9c8:	adrp	x20, 10000 <dl_load@@Base+0xf670>
 9cc:	add	x19, x19, #0x68
 9d0:	adrp	x0, 0 <fputs@plt-0x670>
 9d4:	add	x0, x0, #0xaef
 9d8:	ldr	x20, [x20, #4048]
 9dc:	ldr	x1, [x20]
 9e0:	bl	670 <fputs@plt>
 9e4:	ldr	x0, [x19, #8]
 9e8:	adrp	x1, 0 <fputs@plt-0x670>
 9ec:	add	x1, x1, #0xb17
 9f0:	mov	w3, #0x0                   	// #0
 9f4:	mov	w2, #0x2                   	// #2
 9f8:	ldp	w4, w5, [x0]
 9fc:	ldr	x0, [x20]
 a00:	bl	6d0 <fprintf@plt>
 a04:	mov	w0, #0x1                   	// #1
 a08:	bl	680 <exit@plt>
 a0c:	ldp	x0, x2, [x20, #8]
 a10:	adrp	x1, 0 <fputs@plt-0x670>
 a14:	mov	w20, #0x1                   	// #1
 a18:	add	x1, x1, #0xb4a
 a1c:	ldr	x3, [x0, #104]
 a20:	ldr	x0, [x19, #104]
 a24:	blr	x3
 a28:	b	a50 <dl_load@@Base+0xc0>
 a2c:	ldr	x1, [x20, #16]
 a30:	add	x2, x20, #0x10
 a34:	cbz	x1, a4c <dl_load@@Base+0xbc>
 a38:	ldr	x3, [x3, #48]
 a3c:	adrp	x1, 0 <fputs@plt-0x670>
 a40:	add	x1, x1, #0xb16
 a44:	blr	x3
 a48:	cbz	w0, a0c <dl_load@@Base+0x7c>
 a4c:	mov	w20, #0x0                   	// #0
 a50:	bl	840 <fprintf@plt+0x170>
 a54:	cbnz	w0, a78 <dl_load@@Base+0xe8>
 a58:	add	x0, x19, #0x68
 a5c:	adrp	x1, 0 <fputs@plt-0x670>
 a60:	add	w20, w20, #0x1
 a64:	add	x1, x1, #0xb66
 a68:	ldr	x0, [x0, #8]
 a6c:	ldr	x2, [x0, #104]
 a70:	ldr	x0, [x19, #104]
 a74:	blr	x2
 a78:	add	x0, x19, #0x68
 a7c:	adrp	x1, 0 <fputs@plt-0x670>
 a80:	add	x1, x1, #0xb90
 a84:	ldr	x0, [x0, #8]
 a88:	ldr	x2, [x0, #88]
 a8c:	ldr	x0, [x19, #104]
 a90:	blr	x2
 a94:	cmp	w20, #0x0
 a98:	cset	w0, eq  // eq = none
 a9c:	ldp	x19, x20, [sp, #16]
 aa0:	ldp	x29, x30, [sp], #32
 aa4:	ret

Disassembly of section .fini:

0000000000000aa8 <.fini>:
 aa8:	stp	x29, x30, [sp, #-16]!
 aac:	mov	x29, sp
 ab0:	ldp	x29, x30, [sp], #16
 ab4:	ret
