
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_opcode.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000009b0 <.init>:
 9b0:	stp	x29, x30, [sp, #-16]!
 9b4:	mov	x29, sp
 9b8:	bl	aa0 <_PyLong_AsInt@plt+0x10>
 9bc:	ldp	x29, x30, [sp], #16
 9c0:	ret

Disassembly of section .plt:

00000000000009d0 <__cxa_finalize@plt-0x20>:
 9d0:	stp	x16, x30, [sp, #-16]!
 9d4:	adrp	x16, 11000 <PyInit__opcode@@Base+0x10278>
 9d8:	ldr	x17, [x16, #4088]
 9dc:	add	x16, x16, #0xff8
 9e0:	br	x17
 9e4:	nop
 9e8:	nop
 9ec:	nop

00000000000009f0 <__cxa_finalize@plt>:
 9f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 9f4:	ldr	x17, [x16]
 9f8:	add	x16, x16, #0x0
 9fc:	br	x17

0000000000000a00 <_PyArg_UnpackKeywords@plt>:
 a00:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a04:	ldr	x17, [x16, #8]
 a08:	add	x16, x16, #0x8
 a0c:	br	x17

0000000000000a10 <PyErr_SetString@plt>:
 a10:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a14:	ldr	x17, [x16, #16]
 a18:	add	x16, x16, #0x10
 a1c:	br	x17

0000000000000a20 <PyLong_FromLong@plt>:
 a20:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a24:	ldr	x17, [x16, #24]
 a28:	add	x16, x16, #0x18
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a34:	ldr	x17, [x16, #32]
 a38:	add	x16, x16, #0x20
 a3c:	br	x17

0000000000000a40 <PyErr_Occurred@plt>:
 a40:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a44:	ldr	x17, [x16, #40]
 a48:	add	x16, x16, #0x28
 a4c:	br	x17

0000000000000a50 <PyModule_Create2@plt>:
 a50:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a54:	ldr	x17, [x16, #48]
 a58:	add	x16, x16, #0x30
 a5c:	br	x17

0000000000000a60 <PyLong_AsLong@plt>:
 a60:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a64:	ldr	x17, [x16, #56]
 a68:	add	x16, x16, #0x38
 a6c:	br	x17

0000000000000a70 <PyCompile_OpcodeStackEffectWithJump@plt>:
 a70:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a74:	ldr	x17, [x16, #64]
 a78:	add	x16, x16, #0x40
 a7c:	br	x17

0000000000000a80 <PyType_IsSubtype@plt>:
 a80:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a84:	ldr	x17, [x16, #72]
 a88:	add	x16, x16, #0x48
 a8c:	br	x17

0000000000000a90 <_PyLong_AsInt@plt>:
 a90:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a94:	ldr	x17, [x16, #80]
 a98:	add	x16, x16, #0x50
 a9c:	br	x17

Disassembly of section .text:

0000000000000aa0 <PyInit__opcode@@Base-0x2e8>:
 aa0:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10278>
 aa4:	ldr	x0, [x0, #4040]
 aa8:	cbz	x0, ab0 <_PyLong_AsInt@plt+0x20>
 aac:	b	a30 <__gmon_start__@plt>
 ab0:	ret
 ab4:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11278>
 ab8:	add	x0, x0, #0x148
 abc:	adrp	x1, 12000 <PyInit__opcode@@Base+0x11278>
 ac0:	add	x1, x1, #0x148
 ac4:	cmp	x1, x0
 ac8:	b.eq	ae0 <_PyLong_AsInt@plt+0x50>  // b.none
 acc:	adrp	x1, 11000 <PyInit__opcode@@Base+0x10278>
 ad0:	ldr	x1, [x1, #3992]
 ad4:	cbz	x1, ae0 <_PyLong_AsInt@plt+0x50>
 ad8:	mov	x16, x1
 adc:	br	x16
 ae0:	ret
 ae4:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11278>
 ae8:	add	x0, x0, #0x148
 aec:	adrp	x1, 12000 <PyInit__opcode@@Base+0x11278>
 af0:	add	x1, x1, #0x148
 af4:	sub	x1, x1, x0
 af8:	mov	x2, #0x2                   	// #2
 afc:	asr	x1, x1, #3
 b00:	sdiv	x1, x1, x2
 b04:	cbz	x1, b1c <_PyLong_AsInt@plt+0x8c>
 b08:	adrp	x2, 11000 <PyInit__opcode@@Base+0x10278>
 b0c:	ldr	x2, [x2, #4064]
 b10:	cbz	x2, b1c <_PyLong_AsInt@plt+0x8c>
 b14:	mov	x16, x2
 b18:	br	x16
 b1c:	ret
 b20:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11278>
 b24:	ldrb	w1, [x0, #328]
 b28:	cbnz	w1, b6c <_PyLong_AsInt@plt+0xdc>
 b2c:	stp	x29, x30, [sp, #-32]!
 b30:	mov	x29, sp
 b34:	str	x19, [sp, #16]
 b38:	mov	x19, x0
 b3c:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10278>
 b40:	ldr	x0, [x0, #4008]
 b44:	cbz	x0, b54 <_PyLong_AsInt@plt+0xc4>
 b48:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11278>
 b4c:	ldr	x0, [x0, #88]
 b50:	bl	9f0 <__cxa_finalize@plt>
 b54:	bl	ab4 <_PyLong_AsInt@plt+0x24>
 b58:	mov	w0, #0x1                   	// #1
 b5c:	strb	w0, [x19, #328]
 b60:	ldr	x19, [sp, #16]
 b64:	ldp	x29, x30, [sp], #32
 b68:	ret
 b6c:	ret
 b70:	b	ae4 <_PyLong_AsInt@plt+0x54>
 b74:	sub	sp, sp, #0x70
 b78:	stp	x29, x30, [sp, #16]
 b7c:	add	x29, sp, #0x10
 b80:	stp	x19, x20, [sp, #32]
 b84:	mov	x19, x1
 b88:	stp	x21, x22, [sp, #48]
 b8c:	mov	x21, x2
 b90:	str	x23, [sp, #64]
 b94:	cbz	x3, bec <_PyLong_AsInt@plt+0x15c>
 b98:	ldr	x20, [x3, #16]
 b9c:	add	x0, sp, #0x58
 ba0:	str	x0, [sp]
 ba4:	mov	x1, x21
 ba8:	mov	x0, x19
 bac:	mov	w7, #0x0                   	// #0
 bb0:	mov	w6, #0x2                   	// #2
 bb4:	mov	w5, #0x1                   	// #1
 bb8:	adrp	x4, 12000 <PyInit__opcode@@Base+0x11278>
 bbc:	mov	x2, #0x0                   	// #0
 bc0:	add	x4, x4, #0x60
 bc4:	bl	a00 <_PyArg_UnpackKeywords@plt>
 bc8:	mov	x19, x0
 bcc:	cbnz	x0, c00 <_PyLong_AsInt@plt+0x170>
 bd0:	mov	x0, #0x0                   	// #0
 bd4:	ldp	x29, x30, [sp, #16]
 bd8:	ldp	x19, x20, [sp, #32]
 bdc:	ldp	x21, x22, [sp, #48]
 be0:	ldr	x23, [sp, #64]
 be4:	add	sp, sp, #0x70
 be8:	ret
 bec:	sub	x0, x2, #0x1
 bf0:	mov	x20, #0x0                   	// #0
 bf4:	cmp	x0, #0x1
 bf8:	b.hi	b9c <_PyLong_AsInt@plt+0x10c>  // b.pmore
 bfc:	cbz	x1, b9c <_PyLong_AsInt@plt+0x10c>
 c00:	ldr	x0, [x19]
 c04:	adrp	x1, 11000 <PyInit__opcode@@Base+0x10278>
 c08:	ldr	x1, [x1, #4000]
 c0c:	ldr	x0, [x0, #8]
 c10:	cmp	x0, x1
 c14:	b.ne	c34 <_PyLong_AsInt@plt+0x1a4>  // b.any
 c18:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10278>
 c1c:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 c20:	add	x1, x1, #0xdac
 c24:	ldr	x0, [x0, #4024]
 c28:	ldr	x0, [x0]
 c2c:	bl	a10 <PyErr_SetString@plt>
 c30:	b	bd0 <_PyLong_AsInt@plt+0x140>
 c34:	bl	a80 <PyType_IsSubtype@plt>
 c38:	mov	w22, w0
 c3c:	cbnz	w0, c18 <_PyLong_AsInt@plt+0x188>
 c40:	ldr	x0, [x19]
 c44:	bl	a90 <_PyLong_AsInt@plt>
 c48:	mov	w23, w0
 c4c:	cmn	w0, #0x1
 c50:	b.eq	ca4 <_PyLong_AsInt@plt+0x214>  // b.none
 c54:	add	x20, x21, x20
 c58:	cmp	x21, #0x1
 c5c:	adrp	x21, 11000 <PyInit__opcode@@Base+0x10278>
 c60:	b.gt	cb0 <_PyLong_AsInt@plt+0x220>
 c64:	ldr	x0, [x21, #4048]
 c68:	sub	x20, x20, #0x1
 c6c:	cbz	x20, cbc <_PyLong_AsInt@plt+0x22c>
 c70:	ldr	x19, [x19, #16]
 c74:	cmp	w23, #0x59
 c78:	b.le	cec <_PyLong_AsInt@plt+0x25c>
 c7c:	ldr	x1, [x21, #4048]
 c80:	cmp	x0, x1
 c84:	b.ne	cc4 <_PyLong_AsInt@plt+0x234>  // b.any
 c88:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 c8c:	add	x1, x1, #0xdd1
 c90:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10278>
 c94:	ldr	x0, [x0, #4016]
 c98:	ldr	x0, [x0]
 c9c:	bl	a10 <PyErr_SetString@plt>
 ca0:	b	cdc <_PyLong_AsInt@plt+0x24c>
 ca4:	bl	a40 <PyErr_Occurred@plt>
 ca8:	cbz	x0, c54 <_PyLong_AsInt@plt+0x1c4>
 cac:	b	bd0 <_PyLong_AsInt@plt+0x140>
 cb0:	sub	x20, x20, #0x2
 cb4:	ldr	x0, [x19, #8]
 cb8:	b	c6c <_PyLong_AsInt@plt+0x1dc>
 cbc:	ldr	x19, [x21, #4048]
 cc0:	b	c74 <_PyLong_AsInt@plt+0x1e4>
 cc4:	bl	a60 <PyLong_AsLong@plt>
 cc8:	mov	w20, w0
 ccc:	cmn	w0, #0x1
 cd0:	b.ne	d08 <_PyLong_AsInt@plt+0x278>  // b.any
 cd4:	bl	a40 <PyErr_Occurred@plt>
 cd8:	cbz	x0, d08 <_PyLong_AsInt@plt+0x278>
 cdc:	bl	a40 <PyErr_Occurred@plt>
 ce0:	cbnz	x0, bd0 <_PyLong_AsInt@plt+0x140>
 ce4:	mov	w0, #0xffffffff            	// #-1
 ce8:	b	d7c <_PyLong_AsInt@plt+0x2ec>
 cec:	ldr	x2, [x21, #4048]
 cf0:	mov	w20, #0x0                   	// #0
 cf4:	cmp	x0, x2
 cf8:	b.eq	d08 <_PyLong_AsInt@plt+0x278>  // b.none
 cfc:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 d00:	add	x1, x1, #0xe11
 d04:	b	c90 <_PyLong_AsInt@plt+0x200>
 d08:	ldr	x21, [x21, #4048]
 d0c:	cmp	x19, x21
 d10:	b.eq	d40 <_PyLong_AsInt@plt+0x2b0>  // b.none
 d14:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10278>
 d18:	ldr	x0, [x0, #4056]
 d1c:	cmp	x19, x0
 d20:	b.eq	d6c <_PyLong_AsInt@plt+0x2dc>  // b.none
 d24:	adrp	x0, 11000 <PyInit__opcode@@Base+0x10278>
 d28:	ldr	x0, [x0, #4032]
 d2c:	cmp	x19, x0
 d30:	b.eq	d44 <_PyLong_AsInt@plt+0x2b4>  // b.none
 d34:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 d38:	add	x1, x1, #0xe54
 d3c:	b	c90 <_PyLong_AsInt@plt+0x200>
 d40:	mov	w22, #0xffffffff            	// #-1
 d44:	mov	w1, w20
 d48:	mov	w2, w22
 d4c:	mov	w0, w23
 d50:	bl	a70 <PyCompile_OpcodeStackEffectWithJump@plt>
 d54:	mov	w1, #0x7fffffff            	// #2147483647
 d58:	cmp	w0, w1
 d5c:	b.ne	d74 <_PyLong_AsInt@plt+0x2e4>  // b.any
 d60:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 d64:	add	x1, x1, #0xe83
 d68:	b	c90 <_PyLong_AsInt@plt+0x200>
 d6c:	mov	w22, #0x1                   	// #1
 d70:	b	d44 <_PyLong_AsInt@plt+0x2b4>
 d74:	cmn	w0, #0x1
 d78:	b.eq	cdc <_PyLong_AsInt@plt+0x24c>  // b.none
 d7c:	sxtw	x0, w0
 d80:	bl	a20 <PyLong_FromLong@plt>
 d84:	b	bd4 <_PyLong_AsInt@plt+0x144>

0000000000000d88 <PyInit__opcode@@Base>:
 d88:	adrp	x0, 12000 <PyInit__opcode@@Base+0x11278>
 d8c:	add	x0, x0, #0x60
 d90:	add	x0, x0, #0x40
 d94:	mov	w1, #0x3f5                 	// #1013
 d98:	b	a50 <PyModule_Create2@plt>

Disassembly of section .fini:

0000000000000d9c <.fini>:
 d9c:	stp	x29, x30, [sp, #-16]!
 da0:	mov	x29, sp
 da4:	ldp	x29, x30, [sp], #16
 da8:	ret
