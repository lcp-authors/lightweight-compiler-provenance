
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-rc-local-generator_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210e18 <_start>:
  210e18:	mov	x29, #0x0                   	// #0
  210e1c:	mov	x30, #0x0                   	// #0
  210e20:	mov	x5, x0
  210e24:	ldr	x1, [sp]
  210e28:	add	x2, sp, #0x8
  210e2c:	mov	x6, sp
  210e30:	movz	x0, #0x0, lsl #48
  210e34:	movk	x0, #0x0, lsl #32
  210e38:	movk	x0, #0x21, lsl #16
  210e3c:	movk	x0, #0xf68
  210e40:	movz	x3, #0x0, lsl #48
  210e44:	movk	x3, #0x0, lsl #32
  210e48:	movk	x3, #0x21, lsl #16
  210e4c:	movk	x3, #0x14b8
  210e50:	movz	x4, #0x0, lsl #48
  210e54:	movk	x4, #0x0, lsl #32
  210e58:	movk	x4, #0x21, lsl #16
  210e5c:	movk	x4, #0x1538
  210e60:	bl	211580 <__libc_start_main@plt>
  210e64:	bl	211590 <abort@plt>

0000000000210e68 <call_weak_fn>:
  210e68:	adrp	x0, 221000 <symlink@plt+0xf980>
  210e6c:	ldr	x0, [x0, #2160]
  210e70:	cbz	x0, 210e78 <call_weak_fn+0x10>
  210e74:	b	2115a0 <__gmon_start__@plt>
  210e78:	ret

0000000000210e7c <deregister_tm_clones>:
  210e7c:	adrp	x0, 231000 <_DYNAMIC+0xf960>
  210e80:	add	x0, x0, #0x928
  210e84:	adrp	x1, 231000 <_DYNAMIC+0xf960>
  210e88:	add	x1, x1, #0x928
  210e8c:	cmp	x0, x1
  210e90:	b.eq	210ec4 <deregister_tm_clones+0x48>  // b.none
  210e94:	stp	x29, x30, [sp, #-32]!
  210e98:	mov	x29, sp
  210e9c:	adrp	x0, 200000 <__FRAME_END__-0xd20>
  210ea0:	ldr	x0, [x0, #2680]
  210ea4:	str	x0, [sp, #24]
  210ea8:	mov	x1, x0
  210eac:	cbz	x1, 210ebc <deregister_tm_clones+0x40>
  210eb0:	adrp	x0, 231000 <_DYNAMIC+0xf960>
  210eb4:	add	x0, x0, #0x928
  210eb8:	blr	x1
  210ebc:	ldp	x29, x30, [sp], #32
  210ec0:	ret
  210ec4:	ret

0000000000210ec8 <register_tm_clones>:
  210ec8:	adrp	x0, 231000 <_DYNAMIC+0xf960>
  210ecc:	add	x0, x0, #0x928
  210ed0:	adrp	x1, 231000 <_DYNAMIC+0xf960>
  210ed4:	add	x1, x1, #0x928
  210ed8:	sub	x0, x0, x1
  210edc:	lsr	x1, x0, #63
  210ee0:	add	x0, x1, x0, asr #3
  210ee4:	cmp	xzr, x0, asr #1
  210ee8:	b.eq	210f20 <register_tm_clones+0x58>  // b.none
  210eec:	stp	x29, x30, [sp, #-32]!
  210ef0:	mov	x29, sp
  210ef4:	asr	x1, x0, #1
  210ef8:	adrp	x0, 200000 <__FRAME_END__-0xd20>
  210efc:	ldr	x0, [x0, #2688]
  210f00:	str	x0, [sp, #24]
  210f04:	mov	x2, x0
  210f08:	cbz	x2, 210f18 <register_tm_clones+0x50>
  210f0c:	adrp	x0, 231000 <_DYNAMIC+0xf960>
  210f10:	add	x0, x0, #0x928
  210f14:	blr	x2
  210f18:	ldp	x29, x30, [sp], #32
  210f1c:	ret
  210f20:	ret

0000000000210f24 <__do_global_dtors_aux>:
  210f24:	adrp	x0, 231000 <_DYNAMIC+0xf960>
  210f28:	ldrb	w0, [x0, #2344]
  210f2c:	cbnz	w0, 210f50 <__do_global_dtors_aux+0x2c>
  210f30:	stp	x29, x30, [sp, #-16]!
  210f34:	mov	x29, sp
  210f38:	bl	210e7c <deregister_tm_clones>
  210f3c:	adrp	x0, 231000 <_DYNAMIC+0xf960>
  210f40:	mov	w1, #0x1                   	// #1
  210f44:	strb	w1, [x0, #2344]
  210f48:	ldp	x29, x30, [sp], #16
  210f4c:	ret
  210f50:	ret

0000000000210f54 <frame_dummy>:
  210f54:	stp	x29, x30, [sp, #-16]!
  210f58:	mov	x29, sp
  210f5c:	bl	210ec8 <register_tm_clones>
  210f60:	ldp	x29, x30, [sp], #16
  210f64:	ret

0000000000210f68 <main>:
  210f68:	stp	x29, x30, [sp, #-32]!
  210f6c:	stp	x20, x19, [sp, #16]
  210f70:	mov	x29, sp
  210f74:	mov	x19, x1
  210f78:	mov	w20, w0
  210f7c:	bl	211020 <save_argc_argv>
  210f80:	bl	2115b0 <log_setup_generator@plt>
  210f84:	cmp	w20, #0x2
  210f88:	b.lt	210fd4 <main+0x6c>  // b.tstop
  210f8c:	cmp	w20, #0x4
  210f90:	b.eq	210fd4 <main+0x6c>  // b.none
  210f94:	mov	w0, wzr
  210f98:	bl	2115c0 <log_get_max_level_realm@plt>
  210f9c:	cmp	w0, #0x3
  210fa0:	b.lt	211010 <main+0xa8>  // b.tstop
  210fa4:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  210fa8:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  210fac:	adrp	x5, 200000 <__FRAME_END__-0xd20>
  210fb0:	mov	w1, #0x16                  	// #22
  210fb4:	add	x2, x2, #0xc4f
  210fb8:	add	x4, x4, #0xc47
  210fbc:	add	x5, x5, #0xbfb
  210fc0:	mov	w0, #0x3                   	// #3
  210fc4:	movk	w1, #0x4000, lsl #16
  210fc8:	mov	w3, #0x47                  	// #71
  210fcc:	bl	2115d0 <log_internal_realm@plt>
  210fd0:	b	211014 <main+0xac>
  210fd4:	cmp	w20, #0x2
  210fd8:	b.lt	210fe4 <main+0x7c>  // b.tstop
  210fdc:	ldr	x0, [x19, #8]
  210fe0:	b	210fec <main+0x84>
  210fe4:	adrp	x0, 200000 <__FRAME_END__-0xd20>
  210fe8:	add	x0, x0, #0xc7f
  210fec:	bl	211034 <run>
  210ff0:	mov	w19, w0
  210ff4:	bl	2115e0 <ask_password_agent_close@plt>
  210ff8:	bl	2115f0 <polkit_agent_close@plt>
  210ffc:	bl	211600 <pager_close@plt>
  211000:	bl	211610 <mac_selinux_finish@plt>
  211004:	bl	2110c0 <static_destruct>
  211008:	lsr	w0, w19, #31
  21100c:	b	211014 <main+0xac>
  211010:	mov	w0, #0xffffffea            	// #-22
  211014:	ldp	x20, x19, [sp, #16]
  211018:	ldp	x29, x30, [sp], #32
  21101c:	ret

0000000000211020 <save_argc_argv>:
  211020:	adrp	x8, 231000 <_DYNAMIC+0xf960>
  211024:	adrp	x9, 231000 <_DYNAMIC+0xf960>
  211028:	str	w0, [x8, #2360]
  21102c:	str	x1, [x9, #2368]
  211030:	ret

0000000000211034 <run>:
  211034:	stp	x29, x30, [sp, #-16]!
  211038:	adrp	x8, 231000 <_DYNAMIC+0xf960>
  21103c:	mov	x29, sp
  211040:	str	x0, [x8, #2352]
  211044:	cbz	x0, 2110a0 <run+0x6c>
  211048:	bl	211120 <check_executable>
  21104c:	tbnz	w0, #31, 211090 <run+0x5c>
  211050:	mov	w0, wzr
  211054:	bl	2115c0 <log_get_max_level_realm@plt>
  211058:	cmp	w0, #0x7
  21105c:	b.lt	211088 <run+0x54>  // b.tstop
  211060:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  211064:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  211068:	adrp	x5, 200000 <__FRAME_END__-0xd20>
  21106c:	add	x2, x2, #0xc4f
  211070:	add	x4, x4, #0xc7b
  211074:	add	x5, x5, #0xba8
  211078:	mov	w0, #0x7                   	// #7
  21107c:	mov	w3, #0x3f                  	// #63
  211080:	mov	w1, wzr
  211084:	bl	2115d0 <log_internal_realm@plt>
  211088:	bl	211258 <add_symlink>
  21108c:	b	211094 <run+0x60>
  211090:	mov	w0, wzr
  211094:	and	w0, w0, w0, asr #31
  211098:	ldp	x29, x30, [sp], #16
  21109c:	ret
  2110a0:	adrp	x1, 200000 <__FRAME_END__-0xd20>
  2110a4:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  2110a8:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  2110ac:	add	x1, x1, #0xb1a
  2110b0:	add	x2, x2, #0xc4f
  2110b4:	add	x4, x4, #0xb55
  2110b8:	mov	w3, #0x3c                  	// #60
  2110bc:	bl	211620 <log_assert_failed_realm@plt>

00000000002110c0 <static_destruct>:
  2110c0:	stp	x29, x30, [sp, #-32]!
  2110c4:	stp	x20, x19, [sp, #16]
  2110c8:	adrp	x8, 221000 <symlink@plt+0xf980>
  2110cc:	ldr	x8, [x8, #2168]
  2110d0:	mov	x29, sp
  2110d4:	cbz	x8, 211114 <static_destruct+0x54>
  2110d8:	adrp	x0, 221000 <symlink@plt+0xf980>
  2110dc:	ldr	x0, [x0, #2168]
  2110e0:	bl	2114ac <ALIGN_TO>
  2110e4:	adrp	x20, 221000 <symlink@plt+0xf980>
  2110e8:	ldr	x20, [x20, #2176]
  2110ec:	cmp	x0, x20
  2110f0:	b.cs	211114 <static_destruct+0x54>  // b.hs, b.nlast
  2110f4:	mov	x19, x0
  2110f8:	ldp	x0, x8, [x19]
  2110fc:	blr	x8
  211100:	add	x0, x19, #0x10
  211104:	bl	2114ac <ALIGN_TO>
  211108:	mov	x19, x0
  21110c:	cmp	x0, x20
  211110:	b.cc	2110f8 <static_destruct+0x38>  // b.lo, b.ul, b.last
  211114:	ldp	x20, x19, [sp, #16]
  211118:	ldp	x29, x30, [sp], #32
  21111c:	ret

0000000000211120 <check_executable>:
  211120:	stp	x29, x30, [sp, #-32]!
  211124:	adrp	x0, 200000 <__FRAME_END__-0xd20>
  211128:	add	x0, x0, #0xae9
  21112c:	mov	w1, #0x1                   	// #1
  211130:	str	x19, [sp, #16]
  211134:	mov	x29, sp
  211138:	bl	211630 <access@plt>
  21113c:	tbnz	w0, #31, 211150 <check_executable+0x30>
  211140:	mov	w0, wzr
  211144:	ldr	x19, [sp, #16]
  211148:	ldp	x29, x30, [sp], #32
  21114c:	ret
  211150:	bl	211640 <__errno_location@plt>
  211154:	ldr	w19, [x0]
  211158:	cmp	w19, #0xd
  21115c:	b.eq	2111ac <check_executable+0x8c>  // b.none
  211160:	cmp	w19, #0x2
  211164:	b.ne	2111f0 <check_executable+0xd0>  // b.any
  211168:	mov	w0, wzr
  21116c:	bl	2115c0 <log_get_max_level_realm@plt>
  211170:	cmp	w0, #0x7
  211174:	b.lt	211234 <check_executable+0x114>  // b.tstop
  211178:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  21117c:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  211180:	adrp	x5, 200000 <__FRAME_END__-0xd20>
  211184:	adrp	x6, 200000 <__FRAME_END__-0xd20>
  211188:	add	x2, x2, #0xc4f
  21118c:	add	x4, x4, #0xaf7
  211190:	add	x5, x5, #0xc95
  211194:	add	x6, x6, #0xae9
  211198:	mov	w0, #0x7                   	// #7
  21119c:	mov	w1, #0x2                   	// #2
  2111a0:	mov	w3, #0x2f                  	// #47
  2111a4:	bl	2115d0 <log_internal_realm@plt>
  2111a8:	b	211144 <check_executable+0x24>
  2111ac:	mov	w0, wzr
  2111b0:	bl	2115c0 <log_get_max_level_realm@plt>
  2111b4:	cmp	w0, #0x6
  2111b8:	b.lt	21123c <check_executable+0x11c>  // b.tstop
  2111bc:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  2111c0:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  2111c4:	adrp	x5, 200000 <__FRAME_END__-0xd20>
  2111c8:	adrp	x6, 200000 <__FRAME_END__-0xd20>
  2111cc:	add	x2, x2, #0xc4f
  2111d0:	add	x4, x4, #0xaf7
  2111d4:	add	x5, x5, #0xcb2
  2111d8:	add	x6, x6, #0xae9
  2111dc:	mov	w0, #0x6                   	// #6
  2111e0:	mov	w1, #0xd                   	// #13
  2111e4:	mov	w3, #0x31                  	// #49
  2111e8:	bl	2115d0 <log_internal_realm@plt>
  2111ec:	b	211144 <check_executable+0x24>
  2111f0:	mov	w0, wzr
  2111f4:	bl	2115c0 <log_get_max_level_realm@plt>
  2111f8:	cmp	w0, #0x4
  2111fc:	b.lt	211244 <check_executable+0x124>  // b.tstop
  211200:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  211204:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  211208:	adrp	x5, 200000 <__FRAME_END__-0xd20>
  21120c:	adrp	x6, 200000 <__FRAME_END__-0xd20>
  211210:	add	x2, x2, #0xc4f
  211214:	add	x4, x4, #0xaf7
  211218:	add	x5, x5, #0xa88
  21121c:	add	x6, x6, #0xae9
  211220:	mov	w0, #0x4                   	// #4
  211224:	mov	w3, #0x33                  	// #51
  211228:	mov	w1, w19
  21122c:	bl	2115d0 <log_internal_realm@plt>
  211230:	b	211144 <check_executable+0x24>
  211234:	mov	w0, #0xfffffffe            	// #-2
  211238:	b	211144 <check_executable+0x24>
  21123c:	mov	w0, #0xfffffff3            	// #-13
  211240:	b	211144 <check_executable+0x24>
  211244:	cmp	w19, #0x0
  211248:	mov	w8, wzr
  21124c:	cneg	w9, w19, mi  // mi = first
  211250:	sub	w0, w8, w9, uxtb
  211254:	b	211144 <check_executable+0x24>

0000000000211258 <add_symlink>:
  211258:	stp	x29, x30, [sp, #-48]!
  21125c:	stp	x22, x21, [sp, #16]
  211260:	stp	x20, x19, [sp, #32]
  211264:	mov	x29, sp
  211268:	sub	sp, sp, #0x30
  21126c:	adrp	x8, 200000 <__FRAME_END__-0xd20>
  211270:	adrp	x20, 200000 <__FRAME_END__-0xd20>
  211274:	mov	x21, xzr
  211278:	mov	x19, xzr
  21127c:	add	x8, x8, #0xb87
  211280:	add	x20, x20, #0xc84
  211284:	sub	x22, x29, #0x28
  211288:	stp	x8, x20, [x29, #-40]
  21128c:	ldr	x0, [x22, x21]
  211290:	cbz	x0, 2112a8 <add_symlink+0x50>
  211294:	bl	211650 <strlen@plt>
  211298:	add	x21, x21, #0x8
  21129c:	cmp	x21, #0x10
  2112a0:	add	x19, x0, x19
  2112a4:	b.ne	21128c <add_symlink+0x34>  // b.any
  2112a8:	add	x19, x19, #0x1
  2112ac:	mov	x0, x19
  2112b0:	bl	2114a4 <size_multiply_overflow>
  2112b4:	tbnz	w0, #0, 211444 <add_symlink+0x1ec>
  2112b8:	cmp	x19, #0x400, lsl #12
  2112bc:	b.hi	211450 <add_symlink+0x1f8>  // b.pmore
  2112c0:	add	x9, x19, #0xf
  2112c4:	mov	x8, sp
  2112c8:	and	x9, x9, #0xfffffffffffffff0
  2112cc:	sub	x19, x8, x9
  2112d0:	mov	sp, x19
  2112d4:	mov	x21, xzr
  2112d8:	sub	x22, x29, #0x28
  2112dc:	mov	x0, x19
  2112e0:	ldr	x1, [x22, x21]
  2112e4:	cbz	x1, 2112f8 <add_symlink+0xa0>
  2112e8:	bl	211660 <stpcpy@plt>
  2112ec:	add	x21, x21, #0x8
  2112f0:	cmp	x21, #0x10
  2112f4:	b.ne	2112e0 <add_symlink+0x88>  // b.any
  2112f8:	strb	wzr, [x0]
  2112fc:	adrp	x8, 231000 <_DYNAMIC+0xf960>
  211300:	ldr	x8, [x8, #2352]
  211304:	adrp	x11, 200000 <__FRAME_END__-0xd20>
  211308:	adrp	x9, 200000 <__FRAME_END__-0xd20>
  21130c:	adrp	x10, 200000 <__FRAME_END__-0xd20>
  211310:	add	x11, x11, #0xcd9
  211314:	mov	x22, xzr
  211318:	mov	x21, xzr
  21131c:	add	x9, x9, #0xae7
  211320:	add	x10, x10, #0xb08
  211324:	stp	x11, x20, [x29, #-16]
  211328:	sub	x20, x29, #0x28
  21132c:	stp	x9, x10, [x29, #-32]
  211330:	stur	x8, [x29, #-40]
  211334:	ldr	x0, [x20, x22]
  211338:	cbz	x0, 211350 <add_symlink+0xf8>
  21133c:	bl	211650 <strlen@plt>
  211340:	add	x22, x22, #0x8
  211344:	cmp	x22, #0x28
  211348:	add	x21, x0, x21
  21134c:	b.ne	211334 <add_symlink+0xdc>  // b.any
  211350:	add	x20, x21, #0x1
  211354:	mov	x0, x20
  211358:	bl	2114a4 <size_multiply_overflow>
  21135c:	tbnz	w0, #0, 211474 <add_symlink+0x21c>
  211360:	cmp	x20, #0x400, lsl #12
  211364:	b.hi	211480 <add_symlink+0x228>  // b.pmore
  211368:	add	x9, x20, #0xf
  21136c:	mov	x8, sp
  211370:	and	x9, x9, #0xfffffffffffffff0
  211374:	sub	x20, x8, x9
  211378:	mov	sp, x20
  21137c:	mov	x21, xzr
  211380:	sub	x22, x29, #0x28
  211384:	mov	x0, x20
  211388:	ldr	x1, [x22, x21]
  21138c:	cbz	x1, 2113a0 <add_symlink+0x148>
  211390:	bl	211660 <stpcpy@plt>
  211394:	add	x21, x21, #0x8
  211398:	cmp	x21, #0x28
  21139c:	b.ne	211388 <add_symlink+0x130>  // b.any
  2113a0:	strb	wzr, [x0]
  2113a4:	mov	w1, #0x1ed                 	// #493
  2113a8:	mov	x0, x20
  2113ac:	bl	211670 <mkdir_parents_label@plt>
  2113b0:	mov	x0, x19
  2113b4:	mov	x1, x20
  2113b8:	bl	211680 <symlink@plt>
  2113bc:	tbnz	w0, #31, 2113c8 <add_symlink+0x170>
  2113c0:	mov	w0, #0x1                   	// #1
  2113c4:	b	211430 <add_symlink+0x1d8>
  2113c8:	bl	211640 <__errno_location@plt>
  2113cc:	ldr	w19, [x0]
  2113d0:	cmp	w19, #0x11
  2113d4:	b.ne	2113e0 <add_symlink+0x188>  // b.any
  2113d8:	mov	w0, wzr
  2113dc:	b	211430 <add_symlink+0x1d8>
  2113e0:	mov	w0, wzr
  2113e4:	bl	2115c0 <log_get_max_level_realm@plt>
  2113e8:	cmp	w0, #0x3
  2113ec:	b.lt	211420 <add_symlink+0x1c8>  // b.tstop
  2113f0:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  2113f4:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  2113f8:	adrp	x5, 200000 <__FRAME_END__-0xd20>
  2113fc:	add	x2, x2, #0xc4f
  211400:	add	x4, x4, #0xb9c
  211404:	add	x5, x5, #0xc27
  211408:	mov	w0, #0x3                   	// #3
  21140c:	mov	w3, #0x24                  	// #36
  211410:	mov	w1, w19
  211414:	mov	x6, x20
  211418:	bl	2115d0 <log_internal_realm@plt>
  21141c:	b	211430 <add_symlink+0x1d8>
  211420:	cmp	w19, #0x0
  211424:	mov	w8, wzr
  211428:	cneg	w9, w19, mi  // mi = first
  21142c:	sub	w0, w8, w9, uxtb
  211430:	mov	sp, x29
  211434:	ldp	x20, x19, [sp, #32]
  211438:	ldp	x22, x21, [sp, #16]
  21143c:	ldp	x29, x30, [sp], #48
  211440:	ret
  211444:	adrp	x1, 200000 <__FRAME_END__-0xd20>
  211448:	add	x1, x1, #0xb2a
  21144c:	b	211458 <add_symlink+0x200>
  211450:	adrp	x1, 200000 <__FRAME_END__-0xd20>
  211454:	add	x1, x1, #0xac8
  211458:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  21145c:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  211460:	add	x2, x2, #0xc4f
  211464:	add	x4, x4, #0xbcf
  211468:	mov	w3, #0x1b                  	// #27
  21146c:	mov	w0, wzr
  211470:	bl	211620 <log_assert_failed_realm@plt>
  211474:	adrp	x1, 200000 <__FRAME_END__-0xd20>
  211478:	add	x1, x1, #0xb2a
  21147c:	b	211488 <add_symlink+0x230>
  211480:	adrp	x1, 200000 <__FRAME_END__-0xd20>
  211484:	add	x1, x1, #0xac8
  211488:	adrp	x2, 200000 <__FRAME_END__-0xd20>
  21148c:	adrp	x4, 200000 <__FRAME_END__-0xd20>
  211490:	add	x2, x2, #0xc4f
  211494:	add	x4, x4, #0xbcf
  211498:	mov	w3, #0x1c                  	// #28
  21149c:	mov	w0, wzr
  2114a0:	bl	211620 <log_assert_failed_realm@plt>

00000000002114a4 <size_multiply_overflow>:
  2114a4:	mov	w0, wzr
  2114a8:	ret

00000000002114ac <ALIGN_TO>:
  2114ac:	add	x8, x0, #0x7
  2114b0:	and	x0, x8, #0xfffffffffffffff8
  2114b4:	ret

00000000002114b8 <__libc_csu_init>:
  2114b8:	stp	x29, x30, [sp, #-64]!
  2114bc:	mov	x29, sp
  2114c0:	stp	x19, x20, [sp, #16]
  2114c4:	adrp	x20, 221000 <symlink@plt+0xf980>
  2114c8:	add	x20, x20, #0x6a0
  2114cc:	stp	x21, x22, [sp, #32]
  2114d0:	adrp	x21, 221000 <symlink@plt+0xf980>
  2114d4:	add	x21, x21, #0x698
  2114d8:	sub	x20, x20, x21
  2114dc:	mov	w22, w0
  2114e0:	stp	x23, x24, [sp, #48]
  2114e4:	mov	x23, x1
  2114e8:	mov	x24, x2
  2114ec:	bl	21153c <_init>
  2114f0:	cmp	xzr, x20, asr #3
  2114f4:	b.eq	211520 <__libc_csu_init+0x68>  // b.none
  2114f8:	asr	x20, x20, #3
  2114fc:	mov	x19, #0x0                   	// #0
  211500:	ldr	x3, [x21, x19, lsl #3]
  211504:	mov	x2, x24
  211508:	add	x19, x19, #0x1
  21150c:	mov	x1, x23
  211510:	mov	w0, w22
  211514:	blr	x3
  211518:	cmp	x20, x19
  21151c:	b.ne	211500 <__libc_csu_init+0x48>  // b.any
  211520:	ldp	x19, x20, [sp, #16]
  211524:	ldp	x21, x22, [sp, #32]
  211528:	ldp	x23, x24, [sp, #48]
  21152c:	ldp	x29, x30, [sp], #64
  211530:	ret
  211534:	nop

0000000000211538 <__libc_csu_fini>:
  211538:	ret

Disassembly of section .init:

000000000021153c <_init>:
  21153c:	stp	x29, x30, [sp, #-16]!
  211540:	mov	x29, sp
  211544:	bl	210e68 <call_weak_fn>
  211548:	ldp	x29, x30, [sp], #16
  21154c:	ret

Disassembly of section .fini:

0000000000211550 <_fini>:
  211550:	stp	x29, x30, [sp, #-16]!
  211554:	mov	x29, sp
  211558:	ldp	x29, x30, [sp], #16
  21155c:	ret

Disassembly of section .plt:

0000000000211560 <__libc_start_main@plt-0x20>:
  211560:	stp	x16, x30, [sp, #-16]!
  211564:	adrp	x16, 221000 <symlink@plt+0xf980>
  211568:	ldr	x17, [x16, #2200]
  21156c:	add	x16, x16, #0x898
  211570:	br	x17
  211574:	nop
  211578:	nop
  21157c:	nop

0000000000211580 <__libc_start_main@plt>:
  211580:	adrp	x16, 221000 <symlink@plt+0xf980>
  211584:	ldr	x17, [x16, #2208]
  211588:	add	x16, x16, #0x8a0
  21158c:	br	x17

0000000000211590 <abort@plt>:
  211590:	adrp	x16, 221000 <symlink@plt+0xf980>
  211594:	ldr	x17, [x16, #2216]
  211598:	add	x16, x16, #0x8a8
  21159c:	br	x17

00000000002115a0 <__gmon_start__@plt>:
  2115a0:	adrp	x16, 221000 <symlink@plt+0xf980>
  2115a4:	ldr	x17, [x16, #2224]
  2115a8:	add	x16, x16, #0x8b0
  2115ac:	br	x17

00000000002115b0 <log_setup_generator@plt>:
  2115b0:	adrp	x16, 221000 <symlink@plt+0xf980>
  2115b4:	ldr	x17, [x16, #2232]
  2115b8:	add	x16, x16, #0x8b8
  2115bc:	br	x17

00000000002115c0 <log_get_max_level_realm@plt>:
  2115c0:	adrp	x16, 221000 <symlink@plt+0xf980>
  2115c4:	ldr	x17, [x16, #2240]
  2115c8:	add	x16, x16, #0x8c0
  2115cc:	br	x17

00000000002115d0 <log_internal_realm@plt>:
  2115d0:	adrp	x16, 221000 <symlink@plt+0xf980>
  2115d4:	ldr	x17, [x16, #2248]
  2115d8:	add	x16, x16, #0x8c8
  2115dc:	br	x17

00000000002115e0 <ask_password_agent_close@plt>:
  2115e0:	adrp	x16, 221000 <symlink@plt+0xf980>
  2115e4:	ldr	x17, [x16, #2256]
  2115e8:	add	x16, x16, #0x8d0
  2115ec:	br	x17

00000000002115f0 <polkit_agent_close@plt>:
  2115f0:	adrp	x16, 221000 <symlink@plt+0xf980>
  2115f4:	ldr	x17, [x16, #2264]
  2115f8:	add	x16, x16, #0x8d8
  2115fc:	br	x17

0000000000211600 <pager_close@plt>:
  211600:	adrp	x16, 221000 <symlink@plt+0xf980>
  211604:	ldr	x17, [x16, #2272]
  211608:	add	x16, x16, #0x8e0
  21160c:	br	x17

0000000000211610 <mac_selinux_finish@plt>:
  211610:	adrp	x16, 221000 <symlink@plt+0xf980>
  211614:	ldr	x17, [x16, #2280]
  211618:	add	x16, x16, #0x8e8
  21161c:	br	x17

0000000000211620 <log_assert_failed_realm@plt>:
  211620:	adrp	x16, 221000 <symlink@plt+0xf980>
  211624:	ldr	x17, [x16, #2288]
  211628:	add	x16, x16, #0x8f0
  21162c:	br	x17

0000000000211630 <access@plt>:
  211630:	adrp	x16, 221000 <symlink@plt+0xf980>
  211634:	ldr	x17, [x16, #2296]
  211638:	add	x16, x16, #0x8f8
  21163c:	br	x17

0000000000211640 <__errno_location@plt>:
  211640:	adrp	x16, 221000 <symlink@plt+0xf980>
  211644:	ldr	x17, [x16, #2304]
  211648:	add	x16, x16, #0x900
  21164c:	br	x17

0000000000211650 <strlen@plt>:
  211650:	adrp	x16, 221000 <symlink@plt+0xf980>
  211654:	ldr	x17, [x16, #2312]
  211658:	add	x16, x16, #0x908
  21165c:	br	x17

0000000000211660 <stpcpy@plt>:
  211660:	adrp	x16, 221000 <symlink@plt+0xf980>
  211664:	ldr	x17, [x16, #2320]
  211668:	add	x16, x16, #0x910
  21166c:	br	x17

0000000000211670 <mkdir_parents_label@plt>:
  211670:	adrp	x16, 221000 <symlink@plt+0xf980>
  211674:	ldr	x17, [x16, #2328]
  211678:	add	x16, x16, #0x918
  21167c:	br	x17

0000000000211680 <symlink@plt>:
  211680:	adrp	x16, 221000 <symlink@plt+0xf980>
  211684:	ldr	x17, [x16, #2336]
  211688:	add	x16, x16, #0x920
  21168c:	br	x17
