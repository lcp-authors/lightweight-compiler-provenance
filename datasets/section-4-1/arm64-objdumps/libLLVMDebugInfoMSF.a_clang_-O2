In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMDebugInfoMSF.a_clang_-O2:

MappedBlockStream.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	stp	x24, x23, [sp, #16]
       8:	stp	x22, x21, [sp, #32]
       c:	stp	x20, x19, [sp, #48]
      10:	mov	x29, sp
      14:	adrp	x8, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
      18:	ldr	x8, [x8]
      1c:	str	w1, [x0, #8]
      20:	mov	x19, x0
      24:	mov	x20, x4
      28:	add	x8, x8, #0x10
      2c:	str	x8, [x0]
      30:	ldr	w8, [x2]
      34:	mov	x21, x3
      38:	mov	x22, x2
      3c:	str	w8, [x0, #16]
      40:	ldp	x9, x8, [x2, #8]
      44:	stp	xzr, xzr, [x0, #24]
      48:	str	xzr, [x19, #40]
      4c:	subs	x0, x8, x9
      50:	asr	x24, x0, #2
      54:	b.eq	6c <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>  // b.none
      58:	lsr	x8, x24, #61
      5c:	cbnz	x8, 110 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x110>
      60:	bl	0 <_Znwm>
      64:	mov	x23, x0
      68:	b	70 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x70>
      6c:	mov	x23, xzr
      70:	add	x8, x23, x24, lsl #2
      74:	stp	x23, x23, [x19, #24]
      78:	str	x8, [x19, #40]
      7c:	ldp	x1, x8, [x22, #8]
      80:	subs	x2, x8, x1
      84:	asr	x22, x2, #2
      88:	b.eq	94 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x94>  // b.none
      8c:	mov	x0, x23
      90:	bl	0 <memmove>
      94:	add	x8, x23, x22, lsl #2
      98:	str	x8, [x19, #32]
      9c:	ldr	x8, [x21]
      a0:	str	x8, [x19, #48]
      a4:	ldr	x8, [x21, #8]
      a8:	str	x8, [x19, #56]
      ac:	cbz	x8, e0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe0>
      b0:	adrp	x9, 0 <__pthread_key_create>
      b4:	ldr	x9, [x9]
      b8:	add	x8, x8, #0x8
      bc:	cbz	x9, d4 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd4>
      c0:	ldaxr	w9, [x8]
      c4:	add	w9, w9, #0x1
      c8:	stlxr	w10, w9, [x8]
      cc:	cbnz	w10, c0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
      d0:	b	e0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe0>
      d4:	ldr	w9, [x8]
      d8:	add	w9, w9, #0x1
      dc:	str	w9, [x8]
      e0:	ldr	q0, [x21, #16]
      e4:	ldr	w8, [x21, #32]
      e8:	stp	x20, xzr, [x19, #88]
      ec:	stp	xzr, xzr, [x19, #104]
      f0:	str	q0, [x19, #64]
      f4:	str	w8, [x19, #80]
      f8:	str	wzr, [x19, #120]
      fc:	ldp	x20, x19, [sp, #48]
     100:	ldp	x22, x21, [sp, #32]
     104:	ldp	x24, x23, [sp, #16]
     108:	ldp	x29, x30, [sp], #64
     10c:	ret
     110:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000000114 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     114:	sub	sp, sp, #0x80
     118:	stp	x29, x30, [sp, #32]
     11c:	str	x27, [sp, #48]
     120:	stp	x26, x25, [sp, #64]
     124:	stp	x24, x23, [sp, #80]
     128:	stp	x22, x21, [sp, #96]
     12c:	stp	x20, x19, [sp, #112]
     130:	add	x29, sp, #0x20
     134:	mov	w24, w0
     138:	mov	w0, #0x80                  	// #128
     13c:	mov	x22, x3
     140:	mov	x25, x2
     144:	mov	x23, x1
     148:	mov	x19, x8
     14c:	bl	0 <_Znwm>
     150:	adrp	x26, 0 <__pthread_key_create>
     154:	ldp	x27, x21, [x25]
     158:	ldr	x26, [x26]
     15c:	mov	x20, x0
     160:	cbz	x21, 18c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x78>
     164:	add	x8, x21, #0x8
     168:	cbz	x26, 180 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>
     16c:	ldaxr	w9, [x8]
     170:	add	w9, w9, #0x1
     174:	stlxr	w10, w9, [x8]
     178:	cbnz	w10, 16c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x58>
     17c:	b	18c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x78>
     180:	ldr	w9, [x8]
     184:	add	w9, w9, #0x1
     188:	str	w9, [x8]
     18c:	adrp	x9, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     190:	ldr	q0, [x25, #16]
     194:	ldr	w8, [x25, #32]
     198:	ldr	x9, [x9]
     19c:	str	w24, [x20, #8]
     1a0:	str	q0, [sp]
     1a4:	str	w8, [sp, #16]
     1a8:	add	x9, x9, #0x10
     1ac:	str	x9, [x20]
     1b0:	ldr	w8, [x23]
     1b4:	str	w8, [x20, #16]
     1b8:	ldp	x1, x8, [x23, #8]
     1bc:	stp	xzr, xzr, [x20, #24]
     1c0:	str	xzr, [x20, #40]
     1c4:	subs	x0, x8, x1
     1c8:	asr	x25, x0, #2
     1cc:	b.eq	1f0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xdc>  // b.none
     1d0:	lsr	x8, x25, #61
     1d4:	cbnz	x8, 344 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x230>
     1d8:	bl	0 <_Znwm>
     1dc:	ldp	x1, x8, [x23, #8]
     1e0:	mov	x24, x0
     1e4:	sub	x2, x8, x1
     1e8:	asr	x23, x2, #2
     1ec:	b	1fc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>
     1f0:	mov	x23, xzr
     1f4:	mov	x2, xzr
     1f8:	mov	x24, xzr
     1fc:	add	x8, x24, x25, lsl #2
     200:	stp	x24, x24, [x20, #24]
     204:	str	x8, [x20, #40]
     208:	cbz	x2, 214 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x100>
     20c:	mov	x0, x24
     210:	bl	0 <memmove>
     214:	add	x8, x24, x23, lsl #2
     218:	str	x8, [x20, #32]
     21c:	stp	x27, x21, [x20, #48]
     220:	cbz	x21, 240 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x12c>
     224:	add	x8, x21, #0x8
     228:	cbz	x26, 260 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x14c>
     22c:	ldaxr	w9, [x8]
     230:	add	w9, w9, #0x1
     234:	stlxr	w10, w9, [x8]
     238:	cbnz	w10, 22c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x118>
     23c:	b	26c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x158>
     240:	ldr	q0, [sp]
     244:	ldr	w8, [sp, #16]
     248:	stp	x22, xzr, [x20, #88]
     24c:	stp	xzr, xzr, [x20, #104]
     250:	str	q0, [x20, #64]
     254:	str	w8, [x20, #80]
     258:	str	wzr, [x20, #120]
     25c:	b	2fc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>
     260:	ldr	w9, [x8]
     264:	add	w9, w9, #0x1
     268:	str	w9, [x8]
     26c:	ldr	q0, [sp]
     270:	ldr	w9, [sp, #16]
     274:	stp	x22, xzr, [x20, #88]
     278:	stp	xzr, xzr, [x20, #104]
     27c:	str	q0, [x20, #64]
     280:	str	w9, [x20, #80]
     284:	str	wzr, [x20, #120]
     288:	cbz	x26, 2a8 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x194>
     28c:	ldaxr	w9, [x8]
     290:	sub	w10, w9, #0x1
     294:	stlxr	w11, w10, [x8]
     298:	cbnz	w11, 28c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x178>
     29c:	cmp	w9, #0x1
     2a0:	b.eq	2bc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a8>  // b.none
     2a4:	b	2fc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>
     2a8:	ldr	w9, [x8]
     2ac:	sub	w10, w9, #0x1
     2b0:	str	w10, [x8]
     2b4:	cmp	w9, #0x1
     2b8:	b.ne	2fc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>  // b.any
     2bc:	mov	x22, x21
     2c0:	ldr	x8, [x22], #12
     2c4:	mov	x0, x21
     2c8:	ldr	x8, [x8, #16]
     2cc:	blr	x8
     2d0:	cbz	x26, 32c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x218>
     2d4:	ldaxr	w8, [x22]
     2d8:	sub	w9, w8, #0x1
     2dc:	stlxr	w10, w9, [x22]
     2e0:	cbnz	w10, 2d4 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c0>
     2e4:	cmp	w8, #0x1
     2e8:	b.ne	2fc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>  // b.any
     2ec:	ldr	x8, [x21]
     2f0:	mov	x0, x21
     2f4:	ldr	x8, [x8, #24]
     2f8:	blr	x8
     2fc:	adrp	x8, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     300:	add	x8, x8, #0x0
     304:	str	x8, [x20]
     308:	str	x20, [x19]
     30c:	ldp	x20, x19, [sp, #112]
     310:	ldp	x22, x21, [sp, #96]
     314:	ldp	x24, x23, [sp, #80]
     318:	ldp	x26, x25, [sp, #64]
     31c:	ldr	x27, [sp, #48]
     320:	ldp	x29, x30, [sp, #32]
     324:	add	sp, sp, #0x80
     328:	ret
     32c:	ldr	w8, [x22]
     330:	sub	w9, w8, #0x1
     334:	str	w9, [x22]
     338:	cmp	w8, #0x1
     33c:	b.eq	2ec <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d8>  // b.none
     340:	b	2fc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>
     344:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000000348 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     348:	sub	sp, sp, #0x80
     34c:	stp	x29, x30, [sp, #32]
     350:	stp	x28, x27, [sp, #48]
     354:	stp	x26, x25, [sp, #64]
     358:	stp	x24, x23, [sp, #80]
     35c:	stp	x22, x21, [sp, #96]
     360:	stp	x20, x19, [sp, #112]
     364:	add	x29, sp, #0x20
     368:	ldp	x9, x10, [x0, #64]
     36c:	mov	w26, w2
     370:	sub	x10, x10, x9
     374:	cmp	x26, x10, asr #4
     378:	b.cs	604 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x2bc>  // b.hs, b.nlast
     37c:	mov	x19, x8
     380:	add	x8, x9, x26, lsl #4
     384:	ldr	x27, [x8, #8]
     388:	lsr	x9, x27, #61
     38c:	cbnz	x9, 624 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x2dc>
     390:	mov	x22, x3
     394:	mov	x24, x1
     398:	mov	x21, x0
     39c:	cbz	x27, 3c8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
     3a0:	ldr	x23, [x8]
     3a4:	lsl	x25, x27, #2
     3a8:	mov	x0, x25
     3ac:	bl	0 <_Znwm>
     3b0:	mov	x1, x23
     3b4:	mov	x2, x25
     3b8:	mov	x20, x0
     3bc:	add	x27, x0, x27, lsl #2
     3c0:	bl	0 <memcpy>
     3c4:	b	3cc <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x84>
     3c8:	mov	x20, xzr
     3cc:	ldr	x8, [x21, #56]
     3d0:	cmp	x8, x26
     3d4:	b.ls	630 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x2e8>  // b.plast
     3d8:	ldr	x8, [x21, #48]
     3dc:	ldr	x25, [x21]
     3e0:	mov	w0, #0x80                  	// #128
     3e4:	ldr	w28, [x8, x26, lsl #2]
     3e8:	bl	0 <_Znwm>
     3ec:	ldr	w8, [x25, #32]
     3f0:	adrp	x25, 0 <__pthread_key_create>
     3f4:	ldp	x26, x23, [x24]
     3f8:	ldr	x25, [x25]
     3fc:	mov	x21, x0
     400:	cbz	x23, 42c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe4>
     404:	add	x9, x23, #0x8
     408:	cbz	x25, 420 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd8>
     40c:	ldaxr	w10, [x9]
     410:	add	w10, w10, #0x1
     414:	stlxr	w11, w10, [x9]
     418:	cbnz	w11, 40c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc4>
     41c:	b	42c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe4>
     420:	ldr	w10, [x9]
     424:	add	w10, w10, #0x1
     428:	str	w10, [x9]
     42c:	adrp	x10, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     430:	ldr	q0, [x24, #16]
     434:	ldr	w9, [x24, #32]
     438:	ldr	x10, [x10]
     43c:	subs	x24, x27, x20
     440:	str	w8, [x21, #8]
     444:	str	w28, [x21, #16]
     448:	add	x8, x10, #0x10
     44c:	asr	x28, x24, #2
     450:	stp	xzr, xzr, [x21, #32]
     454:	str	x8, [x21]
     458:	str	w9, [sp, #16]
     45c:	str	q0, [sp]
     460:	str	xzr, [x21, #24]
     464:	b.eq	49c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x154>  // b.none
     468:	lsr	x8, x28, #61
     46c:	cbnz	x8, 650 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x308>
     470:	mov	x0, x24
     474:	bl	0 <_Znwm>
     478:	mov	x27, x21
     47c:	add	x28, x0, x28, lsl #2
     480:	str	x0, [x27, #32]!
     484:	mov	x1, x20
     488:	mov	x2, x24
     48c:	stur	x0, [x27, #-8]
     490:	str	x28, [x27, #8]
     494:	bl	0 <memmove>
     498:	b	4b0 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     49c:	mov	x27, x21
     4a0:	lsl	x28, x28, #2
     4a4:	str	xzr, [x27, #32]!
     4a8:	stur	xzr, [x27, #-8]
     4ac:	str	x28, [x27, #8]
     4b0:	str	x28, [x27]
     4b4:	stp	x26, x23, [x21, #48]
     4b8:	cbz	x23, 4d8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x190>
     4bc:	add	x8, x23, #0x8
     4c0:	cbz	x25, 4f8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b0>
     4c4:	ldaxr	w9, [x8]
     4c8:	add	w9, w9, #0x1
     4cc:	stlxr	w10, w9, [x8]
     4d0:	cbnz	w10, 4c4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x17c>
     4d4:	b	504 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1bc>
     4d8:	ldr	q0, [sp]
     4dc:	ldr	w8, [sp, #16]
     4e0:	stp	x22, xzr, [x21, #88]
     4e4:	stp	xzr, xzr, [x21, #104]
     4e8:	str	q0, [x21, #64]
     4ec:	str	w8, [x21, #80]
     4f0:	str	wzr, [x21, #120]
     4f4:	b	594 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x24c>
     4f8:	ldr	w9, [x8]
     4fc:	add	w9, w9, #0x1
     500:	str	w9, [x8]
     504:	ldr	q0, [sp]
     508:	ldr	w9, [sp, #16]
     50c:	stp	x22, xzr, [x21, #88]
     510:	stp	xzr, xzr, [x21, #104]
     514:	str	q0, [x21, #64]
     518:	str	w9, [x21, #80]
     51c:	str	wzr, [x21, #120]
     520:	cbz	x25, 540 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1f8>
     524:	ldaxr	w9, [x8]
     528:	sub	w10, w9, #0x1
     52c:	stlxr	w11, w10, [x8]
     530:	cbnz	w11, 524 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1dc>
     534:	cmp	w9, #0x1
     538:	b.eq	554 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x20c>  // b.none
     53c:	b	594 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x24c>
     540:	ldr	w9, [x8]
     544:	sub	w10, w9, #0x1
     548:	str	w10, [x8]
     54c:	cmp	w9, #0x1
     550:	b.ne	594 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x24c>  // b.any
     554:	mov	x22, x23
     558:	ldr	x8, [x22], #12
     55c:	mov	x0, x23
     560:	ldr	x8, [x8, #16]
     564:	blr	x8
     568:	cbz	x25, 5ec <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x2a4>
     56c:	ldaxr	w8, [x22]
     570:	sub	w9, w8, #0x1
     574:	stlxr	w10, w9, [x22]
     578:	cbnz	w10, 56c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x224>
     57c:	cmp	w8, #0x1
     580:	b.ne	594 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x24c>  // b.any
     584:	ldr	x8, [x23]
     588:	mov	x0, x23
     58c:	ldr	x8, [x8, #24]
     590:	blr	x8
     594:	adrp	x8, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     598:	add	x8, x8, #0x0
     59c:	str	x8, [x21]
     5a0:	str	x21, [x19]
     5a4:	cbz	x20, 5cc <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x284>
     5a8:	mov	x0, x20
     5ac:	ldp	x20, x19, [sp, #112]
     5b0:	ldp	x22, x21, [sp, #96]
     5b4:	ldp	x24, x23, [sp, #80]
     5b8:	ldp	x26, x25, [sp, #64]
     5bc:	ldp	x28, x27, [sp, #48]
     5c0:	ldp	x29, x30, [sp, #32]
     5c4:	add	sp, sp, #0x80
     5c8:	b	0 <_ZdlPv>
     5cc:	ldp	x20, x19, [sp, #112]
     5d0:	ldp	x22, x21, [sp, #96]
     5d4:	ldp	x24, x23, [sp, #80]
     5d8:	ldp	x26, x25, [sp, #64]
     5dc:	ldp	x28, x27, [sp, #48]
     5e0:	ldp	x29, x30, [sp, #32]
     5e4:	add	sp, sp, #0x80
     5e8:	ret
     5ec:	ldr	w8, [x22]
     5f0:	sub	w9, w8, #0x1
     5f4:	str	w9, [x22]
     5f8:	cmp	w8, #0x1
     5fc:	b.eq	584 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x23c>  // b.none
     600:	b	594 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x24c>
     604:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     608:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     60c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     610:	add	x0, x0, #0x0
     614:	add	x1, x1, #0x0
     618:	add	x3, x3, #0x0
     61c:	mov	w2, #0x3e                  	// #62
     620:	bl	0 <__assert_fail>
     624:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     628:	add	x0, x0, #0x0
     62c:	bl	0 <_ZSt20__throw_length_errorPKc>
     630:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     634:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     638:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     63c:	add	x0, x0, #0x0
     640:	add	x1, x1, #0x0
     644:	add	x3, x3, #0x0
     648:	mov	w2, #0xfa                  	// #250
     64c:	bl	0 <__assert_fail>
     650:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000000654 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     654:	sub	sp, sp, #0xa0
     658:	stp	x29, x30, [sp, #80]
     65c:	stp	x26, x25, [sp, #96]
     660:	stp	x24, x23, [sp, #112]
     664:	stp	x22, x21, [sp, #128]
     668:	stp	x20, x19, [sp, #144]
     66c:	add	x29, sp, #0x50
     670:	stp	xzr, xzr, [x29, #-24]
     674:	stur	xzr, [x29, #-8]
     678:	ldr	x26, [x0, #40]
     67c:	lsr	x9, x26, #61
     680:	cbnz	x9, 7fc <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a8>
     684:	mov	x19, x2
     688:	mov	x22, x1
     68c:	mov	x20, x0
     690:	mov	x21, x8
     694:	cbz	x26, 6c0 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>
     698:	ldr	x24, [x20, #32]
     69c:	lsl	x25, x26, #2
     6a0:	mov	x0, x25
     6a4:	bl	0 <_Znwm>
     6a8:	mov	x1, x24
     6ac:	mov	x2, x25
     6b0:	mov	x23, x0
     6b4:	add	x26, x0, x26, lsl #2
     6b8:	bl	0 <memcpy>
     6bc:	b	6c4 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x70>
     6c0:	mov	x23, xzr
     6c4:	stp	x23, x26, [x29, #-24]
     6c8:	stur	x26, [x29, #-8]
     6cc:	ldr	x8, [x20]
     6d0:	ldp	x9, x20, [x22]
     6d4:	adrp	x23, 0 <__pthread_key_create>
     6d8:	ldr	w10, [x8, #44]
     6dc:	ldr	w0, [x8, #32]
     6e0:	stp	x9, x20, [sp, #8]
     6e4:	stur	w10, [x29, #-32]
     6e8:	ldr	x23, [x23]
     6ec:	cbz	x20, 71c <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
     6f0:	add	x8, x20, #0x8
     6f4:	cbz	x23, 710 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xbc>
     6f8:	ldaxr	w9, [x8]
     6fc:	add	w9, w9, #0x1
     700:	stlxr	w10, w9, [x8]
     704:	cbnz	w10, 6f8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa4>
     708:	ldr	x20, [sp, #16]
     70c:	b	71c <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
     710:	ldr	w9, [x8]
     714:	add	w9, w9, #0x1
     718:	str	w9, [x8]
     71c:	ldr	w8, [x22, #32]
     720:	ldr	q0, [x22, #16]
     724:	sub	x1, x29, #0x20
     728:	add	x2, sp, #0x8
     72c:	str	w8, [sp, #40]
     730:	mov	x8, x21
     734:	mov	x3, x19
     738:	stur	q0, [sp, #24]
     73c:	bl	114 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     740:	cbz	x20, 7bc <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     744:	add	x8, x20, #0x8
     748:	cbz	x23, 768 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x114>
     74c:	ldaxr	w9, [x8]
     750:	sub	w10, w9, #0x1
     754:	stlxr	w11, w10, [x8]
     758:	cbnz	w11, 74c <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf8>
     75c:	cmp	w9, #0x1
     760:	b.eq	77c <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>  // b.none
     764:	b	7bc <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     768:	ldr	w9, [x8]
     76c:	sub	w10, w9, #0x1
     770:	str	w10, [x8]
     774:	cmp	w9, #0x1
     778:	b.ne	7bc <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>  // b.any
     77c:	mov	x19, x20
     780:	ldr	x8, [x19], #12
     784:	mov	x0, x20
     788:	ldr	x8, [x8, #16]
     78c:	blr	x8
     790:	cbz	x23, 7e4 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x190>
     794:	ldaxr	w8, [x19]
     798:	sub	w9, w8, #0x1
     79c:	stlxr	w10, w9, [x19]
     7a0:	cbnz	w10, 794 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x140>
     7a4:	cmp	w8, #0x1
     7a8:	b.ne	7bc <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>  // b.any
     7ac:	ldr	x8, [x20]
     7b0:	mov	x0, x20
     7b4:	ldr	x8, [x8, #24]
     7b8:	blr	x8
     7bc:	ldur	x0, [x29, #-24]
     7c0:	cbz	x0, 7c8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x174>
     7c4:	bl	0 <_ZdlPv>
     7c8:	ldp	x20, x19, [sp, #144]
     7cc:	ldp	x22, x21, [sp, #128]
     7d0:	ldp	x24, x23, [sp, #112]
     7d4:	ldp	x26, x25, [sp, #96]
     7d8:	ldp	x29, x30, [sp, #80]
     7dc:	add	sp, sp, #0xa0
     7e0:	ret
     7e4:	ldr	w8, [x19]
     7e8:	sub	w9, w8, #0x1
     7ec:	str	w9, [x19]
     7f0:	cmp	w8, #0x1
     7f4:	b.eq	7ac <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x158>  // b.none
     7f8:	b	7bc <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     7fc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     800:	add	x0, x0, #0x0
     804:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000808 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     808:	sub	sp, sp, #0x90
     80c:	stp	x29, x30, [sp, #80]
     810:	str	x23, [sp, #96]
     814:	stp	x22, x21, [sp, #112]
     818:	stp	x20, x19, [sp, #128]
     81c:	add	x29, sp, #0x50
     820:	mov	x20, x2
     824:	mov	x22, x1
     828:	mov	x21, x8
     82c:	sub	x8, x29, #0x20
     830:	mov	w1, wzr
     834:	mov	w2, wzr
     838:	mov	x19, x0
     83c:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
     840:	ldr	x8, [x19]
     844:	ldp	x9, x19, [x22]
     848:	adrp	x23, 0 <__pthread_key_create>
     84c:	ldr	w0, [x8, #32]
     850:	stp	x9, x19, [sp, #8]
     854:	ldr	x23, [x23]
     858:	cbz	x19, 888 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
     85c:	add	x8, x19, #0x8
     860:	cbz	x23, 87c <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>
     864:	ldaxr	w9, [x8]
     868:	add	w9, w9, #0x1
     86c:	stlxr	w10, w9, [x8]
     870:	cbnz	w10, 864 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x5c>
     874:	ldr	x19, [sp, #16]
     878:	b	888 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
     87c:	ldr	w9, [x8]
     880:	add	w9, w9, #0x1
     884:	str	w9, [x8]
     888:	ldr	w8, [x22, #32]
     88c:	ldr	q0, [x22, #16]
     890:	sub	x1, x29, #0x20
     894:	add	x2, sp, #0x8
     898:	str	w8, [sp, #40]
     89c:	mov	x8, x21
     8a0:	mov	x3, x20
     8a4:	stur	q0, [sp, #24]
     8a8:	bl	114 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     8ac:	cbz	x19, 928 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x120>
     8b0:	add	x8, x19, #0x8
     8b4:	cbz	x23, 8d4 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xcc>
     8b8:	ldaxr	w9, [x8]
     8bc:	sub	w10, w9, #0x1
     8c0:	stlxr	w11, w10, [x8]
     8c4:	cbnz	w11, 8b8 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb0>
     8c8:	cmp	w9, #0x1
     8cc:	b.eq	8e8 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe0>  // b.none
     8d0:	b	928 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x120>
     8d4:	ldr	w9, [x8]
     8d8:	sub	w10, w9, #0x1
     8dc:	str	w10, [x8]
     8e0:	cmp	w9, #0x1
     8e4:	b.ne	928 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x120>  // b.any
     8e8:	mov	x20, x19
     8ec:	ldr	x8, [x20], #12
     8f0:	mov	x0, x19
     8f4:	ldr	x8, [x8, #16]
     8f8:	blr	x8
     8fc:	cbz	x23, 94c <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>
     900:	ldaxr	w8, [x20]
     904:	sub	w9, w8, #0x1
     908:	stlxr	w10, w9, [x20]
     90c:	cbnz	w10, 900 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf8>
     910:	cmp	w8, #0x1
     914:	b.ne	928 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x120>  // b.any
     918:	ldr	x8, [x19]
     91c:	mov	x0, x19
     920:	ldr	x8, [x8, #24]
     924:	blr	x8
     928:	ldur	x0, [x29, #-24]
     92c:	cbz	x0, 934 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x12c>
     930:	bl	0 <_ZdlPv>
     934:	ldp	x20, x19, [sp, #128]
     938:	ldp	x22, x21, [sp, #112]
     93c:	ldr	x23, [sp, #96]
     940:	ldp	x29, x30, [sp, #80]
     944:	add	sp, sp, #0x90
     948:	ret
     94c:	ldr	w8, [x20]
     950:	sub	w9, w8, #0x1
     954:	str	w9, [x20]
     958:	cmp	w8, #0x1
     95c:	b.eq	918 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x110>  // b.none
     960:	b	928 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x120>

0000000000000964 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
     964:	sub	sp, sp, #0xb0
     968:	stp	x29, x30, [sp, #80]
     96c:	str	x27, [sp, #96]
     970:	stp	x26, x25, [sp, #112]
     974:	stp	x24, x23, [sp, #128]
     978:	stp	x22, x21, [sp, #144]
     97c:	stp	x20, x19, [sp, #160]
     980:	add	x29, sp, #0x50
     984:	str	w2, [x29, #28]
     988:	ldr	x9, [x0]
     98c:	mov	x20, x3
     990:	mov	w23, w2
     994:	mov	w21, w1
     998:	ldr	x9, [x9, #40]
     99c:	mov	x22, x0
     9a0:	mov	x19, x8
     9a4:	blr	x9
     9a8:	cmp	w0, w21
     9ac:	b.cs	9c4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x60>  // b.hs, b.nlast
     9b0:	mov	w0, #0x30                  	// #48
     9b4:	bl	0 <_Znwm>
     9b8:	mov	x24, x0
     9bc:	mov	w1, #0x3                   	// #3
     9c0:	b	9f0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x8c>
     9c4:	ldr	x8, [x22]
     9c8:	mov	x0, x22
     9cc:	ldr	x8, [x8, #40]
     9d0:	blr	x8
     9d4:	add	w8, w23, w21
     9d8:	cmp	w0, w8
     9dc:	b.cs	9fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x98>  // b.hs, b.nlast
     9e0:	mov	w0, #0x30                  	// #48
     9e4:	bl	0 <_Znwm>
     9e8:	mov	x24, x0
     9ec:	mov	w1, #0x1                   	// #1
     9f0:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
     9f4:	orr	x8, x24, #0x1
     9f8:	b	a00 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9c>
     9fc:	mov	w8, #0x1                   	// #1
     a00:	tst	x8, #0xfffffffffffffffe
     a04:	str	x8, [x19]
     a08:	and	x9, x8, #0xfffffffffffffffe
     a0c:	cset	w8, ne  // ne = any
     a10:	orr	x8, x9, x8
     a14:	str	x8, [x19]
     a18:	cbnz	x9, d24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c0>
     a1c:	cbnz	x8, d64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x400>
     a20:	mov	x0, x22
     a24:	mov	w1, w21
     a28:	mov	w2, w23
     a2c:	mov	x3, x20
     a30:	bl	dec <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>
     a34:	tbz	w0, #0, a44 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xe0>
     a38:	mov	w8, #0x1                   	// #1
     a3c:	str	x8, [x19]
     a40:	b	d24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c0>
     a44:	ldr	w10, [x22, #120]
     a48:	ldr	x9, [x22, #104]
     a4c:	cbz	w10, aa4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x140>
     a50:	cmn	w21, #0x2
     a54:	b.cs	d6c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x408>  // b.hs, b.nlast
     a58:	mov	w8, #0x25                  	// #37
     a5c:	mul	w11, w21, w8
     a60:	sub	w8, w10, #0x1
     a64:	and	w11, w8, w11
     a68:	add	x26, x9, x11, lsl #5
     a6c:	ldr	w12, [x26]
     a70:	cmp	w12, w21
     a74:	b.eq	aa8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x144>  // b.none
     a78:	mov	w13, #0x1                   	// #1
     a7c:	cmn	w12, #0x1
     a80:	b.eq	aa4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x140>  // b.none
     a84:	add	w11, w11, w13
     a88:	and	w11, w11, w8
     a8c:	add	x26, x9, x11, lsl #5
     a90:	ldr	w12, [x26]
     a94:	add	w13, w13, #0x1
     a98:	cmp	w12, w21
     a9c:	b.eq	aa8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x144>  // b.none
     aa0:	b	a7c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x118>
     aa4:	add	x26, x9, x10, lsl #5
     aa8:	add	x24, x22, #0x60
     aac:	ldr	x27, [x24]
     ab0:	add	x8, x9, x10, lsl #5
     ab4:	cmp	x26, x8
     ab8:	b.eq	ae4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x180>  // b.none
     abc:	ldp	x11, x12, [x26, #8]
     ac0:	cmp	x11, x12
     ac4:	b.eq	ae4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x180>  // b.none
     ac8:	mov	w13, w23
     acc:	ldr	x14, [x11, #8]
     ad0:	cmp	x14, x13
     ad4:	b.cs	c58 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2f4>  // b.hs, b.nlast
     ad8:	add	x11, x11, #0x10
     adc:	cmp	x12, x11
     ae0:	b.ne	acc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x168>  // b.any
     ae4:	ldr	w12, [x24, #16]
     ae8:	cmp	w12, #0x0
     aec:	csel	x11, x8, x9, eq  // eq = none
     af0:	cbz	w12, b20 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1bc>
     af4:	cbz	w10, b20 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1bc>
     af8:	lsl	x12, x10, #5
     afc:	add	x10, x12, x9
     b00:	mov	x11, x9
     b04:	ldr	w9, [x11]
     b08:	cmn	w9, #0x2
     b0c:	b.cc	b20 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1bc>  // b.lo, b.ul, b.last
     b10:	subs	x12, x12, #0x20
     b14:	add	x11, x11, #0x20
     b18:	b.ne	b04 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1a0>  // b.any
     b1c:	mov	x11, x10
     b20:	cmp	x11, x8
     b24:	b.eq	bb4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x250>  // b.none
     b28:	add	w9, w23, w21
     b2c:	b	b3c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1d8>
     b30:	mov	x11, x10
     b34:	cmp	x11, x8
     b38:	b.eq	bb4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x250>  // b.none
     b3c:	ldr	w12, [x11]
     b40:	cmp	w12, w21
     b44:	b.eq	b80 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x21c>  // b.none
     b48:	cmp	w12, w9
     b4c:	b.cs	b80 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x21c>  // b.hs, b.nlast
     b50:	ldp	x13, x10, [x11, #8]
     b54:	cmp	x13, x10
     b58:	b.eq	b80 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x21c>  // b.none
     b5c:	ldur	x13, [x10, #-8]
     b60:	add	w14, w12, w13
     b64:	add	w15, w14, w12
     b68:	cmp	w15, w21
     b6c:	b.ls	b80 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x21c>  // b.plast
     b70:	cmp	w12, w21
     b74:	b.hi	b80 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x21c>  // b.pmore
     b78:	cmp	w9, w14
     b7c:	b.ls	cd0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x36c>  // b.plast
     b80:	add	x10, x11, #0x20
     b84:	cmp	x10, x8
     b88:	b.hi	d44 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e0>  // b.pmore
     b8c:	mov	x11, x8
     b90:	b.eq	b34 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1d0>  // b.none
     b94:	ldr	w11, [x10]
     b98:	cmn	w11, #0x2
     b9c:	b.cc	b30 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1cc>  // b.lo, b.ul, b.last
     ba0:	add	x10, x10, #0x20
     ba4:	cmp	x8, x10
     ba8:	b.ne	b94 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x230>  // b.any
     bac:	mov	x11, x8
     bb0:	b	b34 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1d0>
     bb4:	ldr	x0, [x22, #88]
     bb8:	mov	w23, w23
     bbc:	mov	w2, #0x3                   	// #3
     bc0:	mov	x1, x23
     bc4:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     bc8:	mov	x25, x0
     bcc:	stur	x0, [x29, #-8]
     bd0:	mov	x8, x19
     bd4:	mov	x0, x22
     bd8:	mov	w1, w21
     bdc:	mov	x2, x25
     be0:	mov	x3, x23
     be4:	bl	f70 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>
     be8:	ldr	x9, [x19]
     bec:	tst	x9, #0xfffffffffffffffe
     bf0:	and	x8, x9, #0xfffffffffffffffe
     bf4:	cset	w9, ne  // ne = any
     bf8:	orr	x9, x8, x9
     bfc:	str	x9, [x19]
     c00:	cbnz	x8, c08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a4>
     c04:	cbnz	x9, d64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x400>
     c08:	cbnz	x8, d24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c0>
     c0c:	ldr	x8, [x24, #8]
     c10:	ldr	w9, [x24, #24]
     c14:	cbz	x26, c24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2c0>
     c18:	ldr	x10, [x24]
     c1c:	cmp	x10, x27
     c20:	b.ne	d8c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x428>  // b.any
     c24:	add	x8, x8, x9, lsl #5
     c28:	cmp	x26, x8
     c2c:	b.eq	c6c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x308>  // b.none
     c30:	ldr	x8, [x24]
     c34:	cmp	x8, x27
     c38:	b.ne	dac <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x448>  // b.any
     c3c:	ldp	x1, x8, [x26, #16]
     c40:	cmp	x1, x8
     c44:	b.eq	d00 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x39c>  // b.none
     c48:	add	x8, x1, #0x10
     c4c:	stp	x25, x23, [x1]
     c50:	str	x8, [x26, #16]
     c54:	b	d10 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3ac>
     c58:	ldr	x8, [x11]
     c5c:	mov	w9, #0x1                   	// #1
     c60:	stp	x8, x13, [x20]
     c64:	str	x9, [x19]
     c68:	b	d24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c0>
     c6c:	mov	w0, #0x10                  	// #16
     c70:	bl	0 <_Znwm>
     c74:	mov	x22, x0
     c78:	stp	x25, x23, [x0]
     c7c:	add	x8, sp, #0x28
     c80:	mov	w0, #0x10                  	// #16
     c84:	str	w21, [sp, #40]
     c88:	add	x21, x8, #0x8
     c8c:	bl	0 <_Znwm>
     c90:	ldr	q0, [x22]
     c94:	add	x8, x0, #0x10
     c98:	stp	x8, x8, [sp, #56]
     c9c:	str	x0, [sp, #48]
     ca0:	str	q0, [x0]
     ca4:	mov	x8, sp
     ca8:	add	x1, sp, #0x28
     cac:	mov	x0, x24
     cb0:	mov	x2, x21
     cb4:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cb8:	ldr	x0, [sp, #48]
     cbc:	cbz	x0, cc4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x360>
     cc0:	bl	0 <_ZdlPv>
     cc4:	mov	x0, x22
     cc8:	bl	0 <_ZdlPv>
     ccc:	b	d10 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3ac>
     cd0:	subs	w8, w21, w12
     cd4:	csel	w8, wzr, w8, cc  // cc = lo, ul, last
     cd8:	mov	w9, w23
     cdc:	add	x11, x8, x9
     ce0:	cmp	x11, x13
     ce4:	b.hi	dcc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x468>  // b.pmore
     ce8:	ldur	x10, [x10, #-16]
     cec:	mov	w11, #0x1                   	// #1
     cf0:	add	x8, x10, x8
     cf4:	stp	x8, x9, [x20]
     cf8:	str	x11, [x19]
     cfc:	b	d24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3c0>
     d00:	add	x0, x26, #0x8
     d04:	sub	x2, x29, #0x8
     d08:	add	x3, x29, #0x1c
     d0c:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d10:	ldur	x8, [x29, #-8]
     d14:	ldr	w9, [x29, #28]
     d18:	mov	w10, #0x1                   	// #1
     d1c:	stp	x8, x9, [x20]
     d20:	str	x10, [x19]
     d24:	ldp	x20, x19, [sp, #160]
     d28:	ldp	x22, x21, [sp, #144]
     d2c:	ldp	x24, x23, [sp, #128]
     d30:	ldp	x26, x25, [sp, #112]
     d34:	ldr	x27, [sp, #96]
     d38:	ldp	x29, x30, [sp, #80]
     d3c:	add	sp, sp, #0xb0
     d40:	ret
     d44:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d48:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d4c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d50:	add	x0, x0, #0x0
     d54:	add	x1, x1, #0x0
     d58:	add	x3, x3, #0x0
     d5c:	mov	w2, #0x4e0                 	// #1248
     d60:	bl	0 <__assert_fail>
     d64:	mov	x0, x19
     d68:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     d6c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d70:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d74:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d78:	add	x0, x0, #0x0
     d7c:	add	x1, x1, #0x0
     d80:	add	x3, x3, #0x0
     d84:	mov	w2, #0x252                 	// #594
     d88:	bl	0 <__assert_fail>
     d8c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d90:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d94:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d98:	add	x0, x0, #0x0
     d9c:	add	x1, x1, #0x0
     da0:	add	x3, x3, #0x0
     da4:	mov	w2, #0x4c7                 	// #1223
     da8:	bl	0 <__assert_fail>
     dac:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     db0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     db4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     db8:	add	x0, x0, #0x0
     dbc:	add	x1, x1, #0x0
     dc0:	add	x3, x3, #0x0
     dc4:	mov	w2, #0x4b9                 	// #1209
     dc8:	bl	0 <__assert_fail>
     dcc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     dd0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     dd4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     dd8:	add	x0, x0, #0x0
     ddc:	add	x1, x1, #0x0
     de0:	add	x3, x3, #0x0
     de4:	mov	w2, #0x169                 	// #361
     de8:	bl	0 <__assert_fail>

0000000000000dec <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>:
     dec:	sub	sp, sp, #0x50
     df0:	stp	x29, x30, [sp, #32]
     df4:	str	x21, [sp, #48]
     df8:	stp	x20, x19, [sp, #64]
     dfc:	add	x29, sp, #0x20
     e00:	mov	x19, x3
     e04:	cbz	w2, ed4 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xe8>
     e08:	mov	w20, w2
     e0c:	ldr	w2, [x0, #8]
     e10:	cbz	w2, f20 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x134>
     e14:	udiv	w8, w1, w2
     e18:	msub	w21, w8, w2, w1
     e1c:	sub	w9, w2, w21
     e20:	subs	w9, w20, w9
     e24:	csel	w9, wzr, w9, cc  // cc = lo, ul, last
     e28:	add	x9, x2, x9
     e2c:	sub	x10, x9, #0x1
     e30:	ldr	x9, [x0, #24]
     e34:	udiv	x10, x10, x2
     e38:	adds	w13, w10, #0x1
     e3c:	mov	w10, w8
     e40:	b.cs	e70 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x84>  // b.hs, b.nlast
     e44:	ldr	w12, [x9, x10, lsl #2]
     e48:	mov	x11, xzr
     e4c:	mov	w13, w13
     e50:	add	w14, w8, w11
     e54:	ldr	w14, [x9, w14, uxtw #2]
     e58:	add	w15, w12, w11
     e5c:	cmp	w15, w14
     e60:	b.ne	ecc <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xe0>  // b.any
     e64:	add	x11, x11, #0x1
     e68:	cmp	x11, x13
     e6c:	b.cc	e50 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x64>  // b.lo, b.ul, b.last
     e70:	stp	xzr, xzr, [sp, #16]
     e74:	ldr	w8, [x9, x10, lsl #2]
     e78:	add	x0, x0, #0x30
     e7c:	add	x3, sp, #0x10
     e80:	mul	w1, w8, w2
     e84:	add	x8, x29, #0x18
     e88:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
     e8c:	ldr	x8, [x29, #24]
     e90:	tst	x8, #0xfffffffffffffffe
     e94:	and	x10, x8, #0xfffffffffffffffe
     e98:	cset	w9, ne  // ne = any
     e9c:	orr	x9, x10, x9
     ea0:	str	x9, [x29, #24]
     ea4:	cbz	x10, edc <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xf0>
     ea8:	orr	x8, x8, #0x1
     eac:	add	x0, sp, #0x8
     eb0:	str	x8, [sp, #8]
     eb4:	str	xzr, [x29, #24]
     eb8:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     ebc:	ldr	x8, [sp, #8]
     ec0:	cbnz	x8, f48 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x15c>
     ec4:	ldr	x8, [x29, #24]
     ec8:	cbnz	x8, f40 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x154>
     ecc:	mov	w0, wzr
     ed0:	b	f0c <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x120>
     ed4:	stp	xzr, xzr, [x19]
     ed8:	b	f08 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x11c>
     edc:	cbnz	x9, f40 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x154>
     ee0:	ldr	x9, [sp, #24]
     ee4:	mov	w8, w21
     ee8:	subs	x9, x9, x8
     eec:	b.cc	f50 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x164>  // b.lo, b.ul, b.last
     ef0:	ldr	x10, [sp, #16]
     ef4:	str	x9, [sp, #24]
     ef8:	mov	w9, w20
     efc:	add	x8, x10, x8
     f00:	str	x8, [sp, #16]
     f04:	stp	x8, x9, [x19]
     f08:	mov	w0, #0x1                   	// #1
     f0c:	ldp	x20, x19, [sp, #64]
     f10:	ldr	x21, [sp, #48]
     f14:	ldp	x29, x30, [sp, #32]
     f18:	add	sp, sp, #0x50
     f1c:	ret
     f20:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f24:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f28:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f2c:	add	x0, x0, #0x0
     f30:	add	x1, x1, #0x0
     f34:	add	x3, x3, #0x0
     f38:	mov	w2, #0x2ce                 	// #718
     f3c:	bl	0 <__assert_fail>
     f40:	add	x0, x29, #0x18
     f44:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     f48:	add	x0, sp, #0x8
     f4c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     f50:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f54:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f58:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f5c:	add	x0, x0, #0x0
     f60:	add	x1, x1, #0x0
     f64:	add	x3, x3, #0x0
     f68:	mov	w2, #0xc6                  	// #198
     f6c:	bl	0 <__assert_fail>

0000000000000f70 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>:
     f70:	sub	sp, sp, #0x70
     f74:	stp	x29, x30, [sp, #16]
     f78:	str	x27, [sp, #32]
     f7c:	stp	x26, x25, [sp, #48]
     f80:	stp	x24, x23, [sp, #64]
     f84:	stp	x22, x21, [sp, #80]
     f88:	stp	x20, x19, [sp, #96]
     f8c:	add	x29, sp, #0x10
     f90:	ldr	x9, [x0]
     f94:	ldr	w25, [x0, #8]
     f98:	mov	x19, x3
     f9c:	mov	x20, x2
     fa0:	ldr	x9, [x9, #40]
     fa4:	mov	w23, w1
     fa8:	mov	x22, x0
     fac:	mov	x21, x8
     fb0:	blr	x9
     fb4:	cmp	w0, w23
     fb8:	b.cs	fd0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x60>  // b.hs, b.nlast
     fbc:	mov	w0, #0x30                  	// #48
     fc0:	bl	0 <_Znwm>
     fc4:	mov	x24, x0
     fc8:	mov	w1, #0x3                   	// #3
     fcc:	b	ffc <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x8c>
     fd0:	ldr	x8, [x22]
     fd4:	mov	x0, x22
     fd8:	ldr	x8, [x8, #40]
     fdc:	blr	x8
     fe0:	add	w8, w19, w23
     fe4:	cmp	w0, w8
     fe8:	b.cs	1008 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x98>  // b.hs, b.nlast
     fec:	mov	w0, #0x30                  	// #48
     ff0:	bl	0 <_Znwm>
     ff4:	mov	x24, x0
     ff8:	mov	w1, #0x1                   	// #1
     ffc:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
    1000:	orr	x8, x24, #0x1
    1004:	b	100c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x9c>
    1008:	mov	w8, #0x1                   	// #1
    100c:	tst	x8, #0xfffffffffffffffe
    1010:	str	x8, [x21]
    1014:	and	x9, x8, #0xfffffffffffffffe
    1018:	cset	w8, ne  // ne = any
    101c:	orr	x8, x9, x8
    1020:	str	x8, [x21]
    1024:	cbnz	x9, 102c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xbc>
    1028:	cbnz	x8, 10ec <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x17c>
    102c:	cbnz	x9, 10cc <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x15c>
    1030:	cbz	w19, 10c4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x154>
    1034:	udiv	w27, w23, w25
    1038:	mov	w26, wzr
    103c:	msub	w25, w27, w25, w23
    1040:	add	x23, x22, #0x30
    1044:	ldr	x8, [x22, #24]
    1048:	mov	x3, sp
    104c:	mov	x0, x23
    1050:	ldr	w8, [x8, w27, uxtw #2]
    1054:	stp	xzr, xzr, [sp]
    1058:	ldr	w2, [x22, #8]
    105c:	mul	w1, w2, w8
    1060:	mov	x8, x21
    1064:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    1068:	ldr	x9, [x21]
    106c:	tst	x9, #0xfffffffffffffffe
    1070:	and	x8, x9, #0xfffffffffffffffe
    1074:	cset	w9, ne  // ne = any
    1078:	orr	x9, x8, x9
    107c:	str	x9, [x21]
    1080:	cbnz	x8, 1088 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x118>
    1084:	cbnz	x9, 10ec <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x17c>
    1088:	cbnz	x8, 10cc <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x15c>
    108c:	ldr	x8, [sp]
    1090:	ldr	w9, [x22, #8]
    1094:	add	x0, x20, w26, uxtw
    1098:	add	x1, x8, w25, uxtw
    109c:	sub	w8, w9, w25
    10a0:	cmp	w8, w19
    10a4:	csel	w24, w8, w19, cc  // cc = lo, ul, last
    10a8:	mov	x2, x24
    10ac:	bl	0 <memcpy>
    10b0:	mov	w25, wzr
    10b4:	add	w26, w24, w26
    10b8:	subs	w19, w19, w24
    10bc:	add	w27, w27, #0x1
    10c0:	b.ne	1044 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xd4>  // b.any
    10c4:	mov	w8, #0x1                   	// #1
    10c8:	str	x8, [x21]
    10cc:	ldp	x20, x19, [sp, #96]
    10d0:	ldp	x22, x21, [sp, #80]
    10d4:	ldp	x24, x23, [sp, #64]
    10d8:	ldp	x26, x25, [sp, #48]
    10dc:	ldr	x27, [sp, #32]
    10e0:	ldp	x29, x30, [sp, #16]
    10e4:	add	sp, sp, #0x70
    10e8:	ret
    10ec:	mov	x0, x21
    10f0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000010f4 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
    10f4:	sub	sp, sp, #0x60
    10f8:	stp	x29, x30, [sp, #16]
    10fc:	str	x25, [sp, #32]
    1100:	stp	x24, x23, [sp, #48]
    1104:	stp	x22, x21, [sp, #64]
    1108:	stp	x20, x19, [sp, #80]
    110c:	add	x29, sp, #0x10
    1110:	ldr	x9, [x0]
    1114:	mov	x19, x2
    1118:	mov	w21, w1
    111c:	mov	x22, x0
    1120:	ldr	x9, [x9, #40]
    1124:	mov	x20, x8
    1128:	blr	x9
    112c:	cmp	w0, w21
    1130:	b.cs	1148 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x54>  // b.hs, b.nlast
    1134:	mov	w0, #0x30                  	// #48
    1138:	bl	0 <_Znwm>
    113c:	mov	x23, x0
    1140:	mov	w1, #0x3                   	// #3
    1144:	b	1174 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x80>
    1148:	ldr	x8, [x22]
    114c:	mov	x0, x22
    1150:	ldr	x8, [x8, #40]
    1154:	blr	x8
    1158:	add	w8, w21, #0x1
    115c:	cmp	w0, w8
    1160:	b.cs	1180 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x8c>  // b.hs, b.nlast
    1164:	mov	w0, #0x30                  	// #48
    1168:	bl	0 <_Znwm>
    116c:	mov	x23, x0
    1170:	mov	w1, #0x1                   	// #1
    1174:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
    1178:	orr	x8, x23, #0x1
    117c:	b	1184 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x90>
    1180:	mov	w8, #0x1                   	// #1
    1184:	tst	x8, #0xfffffffffffffffe
    1188:	str	x8, [x20]
    118c:	and	x9, x8, #0xfffffffffffffffe
    1190:	cset	w8, ne  // ne = any
    1194:	orr	x8, x9, x8
    1198:	str	x8, [x20]
    119c:	cbnz	x9, 1268 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x174>
    11a0:	cbnz	x8, 1284 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x190>
    11a4:	ldp	x8, x9, [x22, #24]
    11a8:	ldr	w23, [x22, #8]
    11ac:	sub	x9, x9, x8
    11b0:	udiv	w24, w21, w23
    11b4:	lsr	x9, x9, #2
    11b8:	sub	w9, w9, #0x1
    11bc:	mov	x10, x24
    11c0:	mov	x25, x10
    11c4:	cmp	x10, x9
    11c8:	b.cs	11e4 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xf0>  // b.hs, b.nlast
    11cc:	add	x10, x25, #0x1
    11d0:	ldr	w11, [x8, x10, lsl #2]
    11d4:	ldr	w12, [x8, x25, lsl #2]
    11d8:	sub	w11, w11, #0x1
    11dc:	cmp	w12, w11
    11e0:	b.eq	11c0 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xcc>  // b.none
    11e4:	stp	xzr, xzr, [sp]
    11e8:	ldr	w8, [x8, w24, uxtw #2]
    11ec:	add	x0, x22, #0x30
    11f0:	mov	x3, sp
    11f4:	mov	w2, w23
    11f8:	mul	w1, w8, w23
    11fc:	mov	x8, x20
    1200:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    1204:	ldr	x9, [x20]
    1208:	tst	x9, #0xfffffffffffffffe
    120c:	and	x8, x9, #0xfffffffffffffffe
    1210:	cset	w9, ne  // ne = any
    1214:	orr	x9, x8, x9
    1218:	str	x9, [x20]
    121c:	cbnz	x8, 1224 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x130>
    1220:	cbnz	x9, 1284 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x190>
    1224:	cbnz	x8, 1268 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x174>
    1228:	ldr	x10, [sp, #8]
    122c:	msub	w9, w24, w23, w21
    1230:	mov	w8, w9
    1234:	subs	x10, x10, x8
    1238:	b.cc	128c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x198>  // b.lo, b.ul, b.last
    123c:	ldr	x12, [sp]
    1240:	sub	w11, w25, w24
    1244:	madd	w11, w11, w23, w23
    1248:	sub	w9, w11, w9
    124c:	str	x10, [sp, #8]
    1250:	mov	w10, #0x1                   	// #1
    1254:	mov	w9, w9
    1258:	add	x8, x12, x8
    125c:	str	x8, [sp]
    1260:	stp	x8, x9, [x19]
    1264:	str	x10, [x20]
    1268:	ldp	x20, x19, [sp, #80]
    126c:	ldp	x22, x21, [sp, #64]
    1270:	ldp	x24, x23, [sp, #48]
    1274:	ldr	x25, [sp, #32]
    1278:	ldp	x29, x30, [sp, #16]
    127c:	add	sp, sp, #0x60
    1280:	ret
    1284:	mov	x0, x20
    1288:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    128c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1290:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1294:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1298:	add	x0, x0, #0x0
    129c:	add	x1, x1, #0x0
    12a0:	add	x3, x3, #0x0
    12a4:	mov	w2, #0xc6                  	// #198
    12a8:	bl	0 <__assert_fail>

00000000000012ac <_ZN4llvm3msf17MappedBlockStream9getLengthEv>:
    12ac:	ldr	w0, [x0, #16]
    12b0:	ret

00000000000012b4 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv>:
    12b4:	add	x0, x0, #0x60
    12b8:	b	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>

00000000000012bc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>:
    12bc:	stp	x29, x30, [sp, #-96]!
    12c0:	stp	x28, x27, [sp, #16]
    12c4:	stp	x26, x25, [sp, #32]
    12c8:	stp	x24, x23, [sp, #48]
    12cc:	stp	x22, x21, [sp, #64]
    12d0:	stp	x20, x19, [sp, #80]
    12d4:	mov	x29, sp
    12d8:	ldr	w9, [x0, #120]
    12dc:	ldp	x22, x8, [x0, #96]
    12e0:	ldr	w10, [x0, #112]
    12e4:	mov	x19, x2
    12e8:	mov	w20, w1
    12ec:	add	x23, x8, x9, lsl #5
    12f0:	mov	x21, x0
    12f4:	mov	x24, x23
    12f8:	cbz	w10, 1328 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x6c>
    12fc:	cbz	w9, 1324 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x68>
    1300:	lsl	x9, x9, #5
    1304:	add	x24, x9, x8
    1308:	ldr	w10, [x8]
    130c:	cmn	w10, #0x2
    1310:	b.cc	13fc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x140>  // b.lo, b.ul, b.last
    1314:	subs	x9, x9, #0x20
    1318:	add	x8, x8, #0x20
    131c:	b.ne	1308 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x4c>  // b.any
    1320:	b	1328 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x6c>
    1324:	mov	x24, x8
    1328:	cmp	x24, x23
    132c:	b.eq	1408 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x14c>  // b.none
    1330:	mov	w25, w20
    1334:	add	x26, x3, x25
    1338:	b	1348 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x8c>
    133c:	mov	x24, x8
    1340:	cmp	x24, x23
    1344:	b.eq	1408 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x14c>  // b.none
    1348:	ldr	w8, [x24]
    134c:	cmp	x26, x8
    1350:	b.cc	13bc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x100>  // b.lo, b.ul, b.last
    1354:	ldp	x27, x9, [x24, #8]
    1358:	cmp	x27, x9
    135c:	b.eq	13bc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x100>  // b.none
    1360:	sub	x28, x9, #0x10
    1364:	ldr	x9, [x27, #8]
    1368:	add	x10, x9, w8, uxtw
    136c:	cmp	x10, x25
    1370:	b.cc	13a8 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xec>  // b.lo, b.ul, b.last
    1374:	cmp	w8, w20
    1378:	csel	w9, w8, w20, hi  // hi = pmore
    137c:	cmp	w10, w26
    1380:	csel	w10, w10, w26, cc  // cc = lo, ul, last
    1384:	subs	w2, w10, w9
    1388:	b.cc	1424 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x168>  // b.lo, b.ul, b.last
    138c:	ldr	x10, [x27]
    1390:	subs	w11, w8, w20
    1394:	sub	w8, w9, w8
    1398:	csel	w9, wzr, w11, cc  // cc = lo, ul, last
    139c:	add	x0, x10, x8
    13a0:	add	x1, x19, x9
    13a4:	bl	0 <memcpy>
    13a8:	cmp	x28, x27
    13ac:	b.eq	13bc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x100>  // b.none
    13b0:	ldr	w8, [x24]
    13b4:	add	x27, x27, #0x10
    13b8:	b	1364 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xa8>
    13bc:	ldr	x8, [x21, #96]
    13c0:	cmp	x8, x22
    13c4:	b.ne	1444 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x188>  // b.any
    13c8:	add	x8, x24, #0x20
    13cc:	cmp	x8, x23
    13d0:	b.hi	1464 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1a8>  // b.pmore
    13d4:	mov	x24, x23
    13d8:	b.eq	1340 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x84>  // b.none
    13dc:	ldr	w9, [x8]
    13e0:	cmn	w9, #0x2
    13e4:	b.cc	133c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x80>  // b.lo, b.ul, b.last
    13e8:	add	x8, x8, #0x20
    13ec:	cmp	x23, x8
    13f0:	b.ne	13dc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x120>  // b.any
    13f4:	mov	x24, x23
    13f8:	b	1340 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x84>
    13fc:	mov	x24, x8
    1400:	cmp	x24, x23
    1404:	b.ne	1330 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x74>  // b.any
    1408:	ldp	x20, x19, [sp, #80]
    140c:	ldp	x22, x21, [sp, #64]
    1410:	ldp	x24, x23, [sp, #48]
    1414:	ldp	x26, x25, [sp, #32]
    1418:	ldp	x28, x27, [sp, #16]
    141c:	ldp	x29, x30, [sp], #96
    1420:	ret
    1424:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1428:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    142c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1430:	add	x0, x0, #0x0
    1434:	add	x1, x1, #0x0
    1438:	add	x3, x3, #0x0
    143c:	mov	w2, #0x12a                 	// #298
    1440:	bl	0 <__assert_fail>
    1444:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1448:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    144c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1450:	add	x0, x0, #0x0
    1454:	add	x1, x1, #0x0
    1458:	add	x3, x3, #0x0
    145c:	mov	w2, #0x4cf                 	// #1231
    1460:	bl	0 <__assert_fail>
    1464:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1468:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    146c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1470:	add	x0, x0, #0x0
    1474:	add	x1, x1, #0x0
    1478:	add	x3, x3, #0x0
    147c:	mov	w2, #0x4e0                 	// #1248
    1480:	bl	0 <__assert_fail>

0000000000001484 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1484:	sub	sp, sp, #0x70
    1488:	stp	x29, x30, [sp, #48]
    148c:	stp	x24, x23, [sp, #64]
    1490:	stp	x22, x21, [sp, #80]
    1494:	stp	x20, x19, [sp, #96]
    1498:	add	x29, sp, #0x30
    149c:	adrp	x8, 48 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x48>
    14a0:	ldr	x8, [x8]
    14a4:	mov	x20, x0
    14a8:	mov	x21, x4
    14ac:	mov	x19, x3
    14b0:	add	x8, x8, #0x10
    14b4:	str	x8, [x0]
    14b8:	add	x8, sp, #0x8
    14bc:	mov	x0, x3
    14c0:	mov	x22, x2
    14c4:	mov	w23, w1
    14c8:	bl	0 <_ZNK4llvm23WritableBinaryStreamRefcvNS_15BinaryStreamRefEEv>
    14cc:	adrp	x8, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    14d0:	ldr	x8, [x8]
    14d4:	str	w23, [x20, #16]
    14d8:	add	x8, x8, #0x10
    14dc:	str	x8, [x20, #8]
    14e0:	ldr	w8, [x22]
    14e4:	str	w8, [x20, #24]
    14e8:	ldp	x9, x8, [x22, #8]
    14ec:	stp	xzr, xzr, [x20, #32]
    14f0:	str	xzr, [x20, #48]
    14f4:	subs	x0, x8, x9
    14f8:	asr	x24, x0, #2
    14fc:	b.eq	1514 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x90>  // b.none
    1500:	lsr	x8, x24, #61
    1504:	cbnz	x8, 1698 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x214>
    1508:	bl	0 <_Znwm>
    150c:	mov	x23, x0
    1510:	b	1518 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x94>
    1514:	mov	x23, xzr
    1518:	add	x8, x23, x24, lsl #2
    151c:	stp	x23, x23, [x20, #32]
    1520:	str	x8, [x20, #48]
    1524:	ldp	x1, x8, [x22, #8]
    1528:	subs	x2, x8, x1
    152c:	asr	x22, x2, #2
    1530:	b.eq	153c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb8>  // b.none
    1534:	mov	x0, x23
    1538:	bl	0 <memmove>
    153c:	add	x8, x23, x22, lsl #2
    1540:	str	x8, [x20, #40]
    1544:	ldp	x8, x22, [sp, #8]
    1548:	adrp	x23, 0 <__pthread_key_create>
    154c:	stp	x8, x22, [x20, #56]
    1550:	ldr	x23, [x23]
    1554:	cbz	x22, 1584 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x100>
    1558:	add	x8, x22, #0x8
    155c:	cbz	x23, 1578 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf4>
    1560:	ldaxr	w9, [x8]
    1564:	add	w9, w9, #0x1
    1568:	stlxr	w10, w9, [x8]
    156c:	cbnz	w10, 1560 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xdc>
    1570:	ldr	x22, [sp, #16]
    1574:	b	1584 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x100>
    1578:	ldr	w9, [x8]
    157c:	add	w9, w9, #0x1
    1580:	str	w9, [x8]
    1584:	ldur	q0, [sp, #24]
    1588:	ldr	w8, [sp, #40]
    158c:	stp	x21, xzr, [x20, #96]
    1590:	stp	xzr, xzr, [x20, #112]
    1594:	stur	q0, [x20, #72]
    1598:	str	w8, [x20, #88]
    159c:	str	wzr, [x20, #128]
    15a0:	cbz	x22, 161c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>
    15a4:	add	x8, x22, #0x8
    15a8:	cbz	x23, 15c8 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>
    15ac:	ldaxr	w9, [x8]
    15b0:	sub	w10, w9, #0x1
    15b4:	stlxr	w11, w10, [x8]
    15b8:	cbnz	w11, 15ac <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>
    15bc:	cmp	w9, #0x1
    15c0:	b.eq	15dc <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x158>  // b.none
    15c4:	b	161c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>
    15c8:	ldr	w9, [x8]
    15cc:	sub	w10, w9, #0x1
    15d0:	str	w10, [x8]
    15d4:	cmp	w9, #0x1
    15d8:	b.ne	161c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>  // b.any
    15dc:	mov	x21, x22
    15e0:	ldr	x8, [x21], #12
    15e4:	mov	x0, x22
    15e8:	ldr	x8, [x8, #16]
    15ec:	blr	x8
    15f0:	cbz	x23, 1680 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1fc>
    15f4:	ldaxr	w8, [x21]
    15f8:	sub	w9, w8, #0x1
    15fc:	stlxr	w10, w9, [x21]
    1600:	cbnz	w10, 15f4 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x170>
    1604:	cmp	w8, #0x1
    1608:	b.ne	161c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>  // b.any
    160c:	ldr	x8, [x22]
    1610:	mov	x0, x22
    1614:	ldr	x8, [x8, #24]
    1618:	blr	x8
    161c:	ldr	x8, [x19]
    1620:	str	x8, [x20, #136]
    1624:	ldr	x8, [x19, #8]
    1628:	str	x8, [x20, #144]
    162c:	cbz	x8, 1658 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d4>
    1630:	add	x8, x8, #0x8
    1634:	cbz	x23, 164c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c8>
    1638:	ldaxr	w9, [x8]
    163c:	add	w9, w9, #0x1
    1640:	stlxr	w10, w9, [x8]
    1644:	cbnz	w10, 1638 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b4>
    1648:	b	1658 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d4>
    164c:	ldr	w9, [x8]
    1650:	add	w9, w9, #0x1
    1654:	str	w9, [x8]
    1658:	ldr	w8, [x19, #32]
    165c:	ldr	q0, [x19, #16]
    1660:	str	w8, [x20, #168]
    1664:	stur	q0, [x20, #152]
    1668:	ldp	x20, x19, [sp, #96]
    166c:	ldp	x22, x21, [sp, #80]
    1670:	ldp	x24, x23, [sp, #64]
    1674:	ldp	x29, x30, [sp, #48]
    1678:	add	sp, sp, #0x70
    167c:	ret
    1680:	ldr	w8, [x21]
    1684:	sub	w9, w8, #0x1
    1688:	str	w9, [x21]
    168c:	cmp	w8, #0x1
    1690:	b.eq	160c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x188>  // b.none
    1694:	b	161c <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>
    1698:	bl	0 <_ZSt17__throw_bad_allocv>

000000000000169c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    169c:	sub	sp, sp, #0x80
    16a0:	stp	x29, x30, [sp, #48]
    16a4:	str	x25, [sp, #64]
    16a8:	stp	x24, x23, [sp, #80]
    16ac:	stp	x22, x21, [sp, #96]
    16b0:	stp	x20, x19, [sp, #112]
    16b4:	add	x29, sp, #0x30
    16b8:	mov	w23, w0
    16bc:	mov	w0, #0xb0                  	// #176
    16c0:	mov	x21, x3
    16c4:	mov	x24, x2
    16c8:	mov	x22, x1
    16cc:	mov	x19, x8
    16d0:	bl	0 <_Znwm>
    16d4:	ldr	x8, [x24]
    16d8:	adrp	x25, 0 <__pthread_key_create>
    16dc:	mov	x20, x0
    16e0:	str	x8, [sp, #8]
    16e4:	ldr	x8, [x24, #8]
    16e8:	str	x8, [sp, #16]
    16ec:	ldr	x25, [x25]
    16f0:	cbz	x8, 171c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
    16f4:	add	x8, x8, #0x8
    16f8:	cbz	x25, 1710 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>
    16fc:	ldaxr	w9, [x8]
    1700:	add	w9, w9, #0x1
    1704:	stlxr	w10, w9, [x8]
    1708:	cbnz	w10, 16fc <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x60>
    170c:	b	171c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
    1710:	ldr	w9, [x8]
    1714:	add	w9, w9, #0x1
    1718:	str	w9, [x8]
    171c:	ldr	w8, [x24, #32]
    1720:	ldr	q0, [x24, #16]
    1724:	add	x3, sp, #0x8
    1728:	mov	x0, x20
    172c:	mov	w1, w23
    1730:	mov	x2, x22
    1734:	mov	x4, x21
    1738:	str	w8, [sp, #40]
    173c:	stur	q0, [sp, #24]
    1740:	bl	1484 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1744:	ldr	x21, [sp, #16]
    1748:	cbz	x21, 17c4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>
    174c:	add	x8, x21, #0x8
    1750:	cbz	x25, 1770 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd4>
    1754:	ldaxr	w9, [x8]
    1758:	sub	w10, w9, #0x1
    175c:	stlxr	w11, w10, [x8]
    1760:	cbnz	w11, 1754 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb8>
    1764:	cmp	w9, #0x1
    1768:	b.eq	1784 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>  // b.none
    176c:	b	17c4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>
    1770:	ldr	w9, [x8]
    1774:	sub	w10, w9, #0x1
    1778:	str	w10, [x8]
    177c:	cmp	w9, #0x1
    1780:	b.ne	17c4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>  // b.any
    1784:	mov	x22, x21
    1788:	ldr	x8, [x22], #12
    178c:	mov	x0, x21
    1790:	ldr	x8, [x8, #16]
    1794:	blr	x8
    1798:	cbz	x25, 17f0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x154>
    179c:	ldaxr	w8, [x22]
    17a0:	sub	w9, w8, #0x1
    17a4:	stlxr	w10, w9, [x22]
    17a8:	cbnz	w10, 179c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x100>
    17ac:	cmp	w8, #0x1
    17b0:	b.ne	17c4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>  // b.any
    17b4:	ldr	x8, [x21]
    17b8:	mov	x0, x21
    17bc:	ldr	x8, [x8, #24]
    17c0:	blr	x8
    17c4:	adrp	x8, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    17c8:	add	x8, x8, #0x0
    17cc:	str	x8, [x20]
    17d0:	str	x20, [x19]
    17d4:	ldp	x20, x19, [sp, #112]
    17d8:	ldp	x22, x21, [sp, #96]
    17dc:	ldp	x24, x23, [sp, #80]
    17e0:	ldr	x25, [sp, #64]
    17e4:	ldp	x29, x30, [sp, #48]
    17e8:	add	sp, sp, #0x80
    17ec:	ret
    17f0:	ldr	w8, [x22]
    17f4:	sub	w9, w8, #0x1
    17f8:	str	w9, [x22]
    17fc:	cmp	w8, #0x1
    1800:	b.eq	17b4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x118>  // b.none
    1804:	b	17c4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>

0000000000001808 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1808:	sub	sp, sp, #0xb0
    180c:	stp	x29, x30, [sp, #80]
    1810:	str	x27, [sp, #96]
    1814:	stp	x26, x25, [sp, #112]
    1818:	stp	x24, x23, [sp, #128]
    181c:	stp	x22, x21, [sp, #144]
    1820:	stp	x20, x19, [sp, #160]
    1824:	add	x29, sp, #0x50
    1828:	ldp	x9, x10, [x0, #64]
    182c:	mov	w26, w2
    1830:	sub	x10, x10, x9
    1834:	cmp	x26, x10, asr #4
    1838:	b.cs	19e0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d8>  // b.hs, b.nlast
    183c:	mov	x20, x8
    1840:	stp	xzr, xzr, [x29, #-24]
    1844:	stur	xzr, [x29, #-8]
    1848:	add	x8, x9, x26, lsl #4
    184c:	ldr	x27, [x8, #8]
    1850:	lsr	x9, x27, #61
    1854:	cbnz	x9, 1a00 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1f8>
    1858:	mov	x19, x3
    185c:	mov	x21, x1
    1860:	mov	x22, x0
    1864:	cbz	x27, 1890 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x88>
    1868:	ldr	x24, [x8]
    186c:	lsl	x25, x27, #2
    1870:	mov	x0, x25
    1874:	bl	0 <_Znwm>
    1878:	mov	x1, x24
    187c:	mov	x2, x25
    1880:	mov	x23, x0
    1884:	add	x27, x0, x27, lsl #2
    1888:	bl	0 <memcpy>
    188c:	b	1894 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x8c>
    1890:	mov	x23, xzr
    1894:	stp	x23, x27, [x29, #-24]
    1898:	stur	x27, [x29, #-8]
    189c:	ldr	x8, [x22, #56]
    18a0:	cmp	x8, x26
    18a4:	b.ls	1a0c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x204>  // b.plast
    18a8:	ldr	x8, [x22, #48]
    18ac:	adrp	x23, 0 <__pthread_key_create>
    18b0:	ldr	w8, [x8, x26, lsl #2]
    18b4:	stur	w8, [x29, #-32]
    18b8:	ldr	x8, [x22]
    18bc:	ldp	x9, x22, [x21]
    18c0:	ldr	w0, [x8, #32]
    18c4:	stp	x9, x22, [sp, #8]
    18c8:	ldr	x23, [x23]
    18cc:	cbz	x22, 18fc <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf4>
    18d0:	add	x8, x22, #0x8
    18d4:	cbz	x23, 18f0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>
    18d8:	ldaxr	w9, [x8]
    18dc:	add	w9, w9, #0x1
    18e0:	stlxr	w10, w9, [x8]
    18e4:	cbnz	w10, 18d8 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd0>
    18e8:	ldr	x22, [sp, #16]
    18ec:	b	18fc <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf4>
    18f0:	ldr	w9, [x8]
    18f4:	add	w9, w9, #0x1
    18f8:	str	w9, [x8]
    18fc:	ldr	w8, [x21, #32]
    1900:	ldr	q0, [x21, #16]
    1904:	sub	x1, x29, #0x20
    1908:	add	x2, sp, #0x8
    190c:	str	w8, [sp, #40]
    1910:	mov	x8, x20
    1914:	mov	x3, x19
    1918:	stur	q0, [sp, #24]
    191c:	bl	169c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1920:	cbz	x22, 199c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x194>
    1924:	add	x8, x22, #0x8
    1928:	cbz	x23, 1948 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x140>
    192c:	ldaxr	w9, [x8]
    1930:	sub	w10, w9, #0x1
    1934:	stlxr	w11, w10, [x8]
    1938:	cbnz	w11, 192c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x124>
    193c:	cmp	w9, #0x1
    1940:	b.eq	195c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x154>  // b.none
    1944:	b	199c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x194>
    1948:	ldr	w9, [x8]
    194c:	sub	w10, w9, #0x1
    1950:	str	w10, [x8]
    1954:	cmp	w9, #0x1
    1958:	b.ne	199c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x194>  // b.any
    195c:	mov	x19, x22
    1960:	ldr	x8, [x19], #12
    1964:	mov	x0, x22
    1968:	ldr	x8, [x8, #16]
    196c:	blr	x8
    1970:	cbz	x23, 19c8 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c0>
    1974:	ldaxr	w8, [x19]
    1978:	sub	w9, w8, #0x1
    197c:	stlxr	w10, w9, [x19]
    1980:	cbnz	w10, 1974 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x16c>
    1984:	cmp	w8, #0x1
    1988:	b.ne	199c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x194>  // b.any
    198c:	ldr	x8, [x22]
    1990:	mov	x0, x22
    1994:	ldr	x8, [x8, #24]
    1998:	blr	x8
    199c:	ldur	x0, [x29, #-24]
    19a0:	cbz	x0, 19a8 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a0>
    19a4:	bl	0 <_ZdlPv>
    19a8:	ldp	x20, x19, [sp, #160]
    19ac:	ldp	x22, x21, [sp, #144]
    19b0:	ldp	x24, x23, [sp, #128]
    19b4:	ldp	x26, x25, [sp, #112]
    19b8:	ldr	x27, [sp, #96]
    19bc:	ldp	x29, x30, [sp, #80]
    19c0:	add	sp, sp, #0xb0
    19c4:	ret
    19c8:	ldr	w8, [x19]
    19cc:	sub	w9, w8, #0x1
    19d0:	str	w9, [x19]
    19d4:	cmp	w8, #0x1
    19d8:	b.eq	198c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x184>  // b.none
    19dc:	b	199c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x194>
    19e0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19e4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19e8:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19ec:	add	x0, x0, #0x0
    19f0:	add	x1, x1, #0x0
    19f4:	add	x3, x3, #0x0
    19f8:	mov	w2, #0x14a                 	// #330
    19fc:	bl	0 <__assert_fail>
    1a00:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a04:	add	x0, x0, #0x0
    1a08:	bl	0 <_ZSt20__throw_length_errorPKc>
    1a0c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a10:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a14:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a18:	add	x0, x0, #0x0
    1a1c:	add	x1, x1, #0x0
    1a20:	add	x3, x3, #0x0
    1a24:	mov	w2, #0xfa                  	// #250
    1a28:	bl	0 <__assert_fail>

0000000000001a2c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1a2c:	sub	sp, sp, #0xa0
    1a30:	stp	x29, x30, [sp, #80]
    1a34:	stp	x26, x25, [sp, #96]
    1a38:	stp	x24, x23, [sp, #112]
    1a3c:	stp	x22, x21, [sp, #128]
    1a40:	stp	x20, x19, [sp, #144]
    1a44:	add	x29, sp, #0x50
    1a48:	stp	xzr, xzr, [x29, #-24]
    1a4c:	stur	xzr, [x29, #-8]
    1a50:	ldr	x26, [x0, #40]
    1a54:	lsr	x9, x26, #61
    1a58:	cbnz	x9, 1bd4 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a8>
    1a5c:	mov	x19, x2
    1a60:	mov	x22, x1
    1a64:	mov	x20, x0
    1a68:	mov	x21, x8
    1a6c:	cbz	x26, 1a98 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>
    1a70:	ldr	x24, [x20, #32]
    1a74:	lsl	x25, x26, #2
    1a78:	mov	x0, x25
    1a7c:	bl	0 <_Znwm>
    1a80:	mov	x1, x24
    1a84:	mov	x2, x25
    1a88:	mov	x23, x0
    1a8c:	add	x26, x0, x26, lsl #2
    1a90:	bl	0 <memcpy>
    1a94:	b	1a9c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x70>
    1a98:	mov	x23, xzr
    1a9c:	stp	x23, x26, [x29, #-24]
    1aa0:	stur	x26, [x29, #-8]
    1aa4:	ldr	x8, [x20]
    1aa8:	ldp	x9, x20, [x22]
    1aac:	adrp	x23, 0 <__pthread_key_create>
    1ab0:	ldr	w10, [x8, #44]
    1ab4:	ldr	w0, [x8, #32]
    1ab8:	stp	x9, x20, [sp, #8]
    1abc:	stur	w10, [x29, #-32]
    1ac0:	ldr	x23, [x23]
    1ac4:	cbz	x20, 1af4 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    1ac8:	add	x8, x20, #0x8
    1acc:	cbz	x23, 1ae8 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xbc>
    1ad0:	ldaxr	w9, [x8]
    1ad4:	add	w9, w9, #0x1
    1ad8:	stlxr	w10, w9, [x8]
    1adc:	cbnz	w10, 1ad0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa4>
    1ae0:	ldr	x20, [sp, #16]
    1ae4:	b	1af4 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    1ae8:	ldr	w9, [x8]
    1aec:	add	w9, w9, #0x1
    1af0:	str	w9, [x8]
    1af4:	ldr	w8, [x22, #32]
    1af8:	ldr	q0, [x22, #16]
    1afc:	sub	x1, x29, #0x20
    1b00:	add	x2, sp, #0x8
    1b04:	str	w8, [sp, #40]
    1b08:	mov	x8, x21
    1b0c:	mov	x3, x19
    1b10:	stur	q0, [sp, #24]
    1b14:	bl	169c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b18:	cbz	x20, 1b94 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
    1b1c:	add	x8, x20, #0x8
    1b20:	cbz	x23, 1b40 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x114>
    1b24:	ldaxr	w9, [x8]
    1b28:	sub	w10, w9, #0x1
    1b2c:	stlxr	w11, w10, [x8]
    1b30:	cbnz	w11, 1b24 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf8>
    1b34:	cmp	w9, #0x1
    1b38:	b.eq	1b54 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>  // b.none
    1b3c:	b	1b94 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
    1b40:	ldr	w9, [x8]
    1b44:	sub	w10, w9, #0x1
    1b48:	str	w10, [x8]
    1b4c:	cmp	w9, #0x1
    1b50:	b.ne	1b94 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>  // b.any
    1b54:	mov	x19, x20
    1b58:	ldr	x8, [x19], #12
    1b5c:	mov	x0, x20
    1b60:	ldr	x8, [x8, #16]
    1b64:	blr	x8
    1b68:	cbz	x23, 1bbc <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x190>
    1b6c:	ldaxr	w8, [x19]
    1b70:	sub	w9, w8, #0x1
    1b74:	stlxr	w10, w9, [x19]
    1b78:	cbnz	w10, 1b6c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x140>
    1b7c:	cmp	w8, #0x1
    1b80:	b.ne	1b94 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>  // b.any
    1b84:	ldr	x8, [x20]
    1b88:	mov	x0, x20
    1b8c:	ldr	x8, [x8, #24]
    1b90:	blr	x8
    1b94:	ldur	x0, [x29, #-24]
    1b98:	cbz	x0, 1ba0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x174>
    1b9c:	bl	0 <_ZdlPv>
    1ba0:	ldp	x20, x19, [sp, #144]
    1ba4:	ldp	x22, x21, [sp, #128]
    1ba8:	ldp	x24, x23, [sp, #112]
    1bac:	ldp	x26, x25, [sp, #96]
    1bb0:	ldp	x29, x30, [sp, #80]
    1bb4:	add	sp, sp, #0xa0
    1bb8:	ret
    1bbc:	ldr	w8, [x19]
    1bc0:	sub	w9, w8, #0x1
    1bc4:	str	w9, [x19]
    1bc8:	cmp	w8, #0x1
    1bcc:	b.eq	1b84 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x158>  // b.none
    1bd0:	b	1b94 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
    1bd4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1bd8:	add	x0, x0, #0x0
    1bdc:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000001be0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>:
    1be0:	sub	sp, sp, #0x180
    1be4:	stp	x29, x30, [sp, #288]
    1be8:	stp	x28, x27, [sp, #304]
    1bec:	stp	x26, x25, [sp, #320]
    1bf0:	stp	x24, x23, [sp, #336]
    1bf4:	stp	x22, x21, [sp, #352]
    1bf8:	stp	x20, x19, [sp, #368]
    1bfc:	add	x29, sp, #0x120
    1c00:	and	w19, w3, #0x1
    1c04:	mov	x20, x2
    1c08:	mov	x22, x1
    1c0c:	mov	x21, x8
    1c10:	sub	x8, x29, #0x70
    1c14:	mov	w1, wzr
    1c18:	mov	w2, w19
    1c1c:	mov	x23, x0
    1c20:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
    1c24:	add	x8, sp, #0x90
    1c28:	mov	w1, #0x1                   	// #1
    1c2c:	mov	x0, x23
    1c30:	mov	w2, w19
    1c34:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
    1c38:	ldr	x8, [x23]
    1c3c:	adrp	x26, 0 <__pthread_key_create>
    1c40:	ldp	x27, x24, [x22]
    1c44:	ldr	w25, [x8, #32]
    1c48:	ldr	x26, [x26]
    1c4c:	cbz	x24, 1c78 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x98>
    1c50:	add	x8, x24, #0x8
    1c54:	cbz	x26, 1c6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x8c>
    1c58:	ldaxr	w9, [x8]
    1c5c:	add	w9, w9, #0x1
    1c60:	stlxr	w10, w9, [x8]
    1c64:	cbnz	w10, 1c58 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x78>
    1c68:	b	1c78 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x98>
    1c6c:	ldr	w9, [x8]
    1c70:	add	w9, w9, #0x1
    1c74:	str	w9, [x8]
    1c78:	ldr	w8, [x22, #32]
    1c7c:	ldr	q0, [x22, #16]
    1c80:	mov	w0, #0xb0                  	// #176
    1c84:	str	w8, [sp, #128]
    1c88:	str	q0, [sp, #112]
    1c8c:	bl	0 <_Znwm>
    1c90:	mov	x19, x0
    1c94:	stp	x27, x24, [sp, #56]
    1c98:	cbz	x24, 1cc4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xe4>
    1c9c:	add	x8, x24, #0x8
    1ca0:	cbz	x26, 1cb8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xd8>
    1ca4:	ldaxr	w9, [x8]
    1ca8:	add	w9, w9, #0x1
    1cac:	stlxr	w10, w9, [x8]
    1cb0:	cbnz	w10, 1ca4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xc4>
    1cb4:	b	1cc4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xe4>
    1cb8:	ldr	w9, [x8]
    1cbc:	add	w9, w9, #0x1
    1cc0:	str	w9, [x8]
    1cc4:	ldr	q0, [sp, #112]
    1cc8:	ldr	w8, [sp, #128]
    1ccc:	add	x2, sp, #0x90
    1cd0:	add	x3, sp, #0x38
    1cd4:	mov	x0, x19
    1cd8:	mov	w1, w25
    1cdc:	mov	x4, x20
    1ce0:	stur	q0, [sp, #72]
    1ce4:	str	w8, [sp, #88]
    1ce8:	bl	1484 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1cec:	ldr	x25, [sp, #64]
    1cf0:	cbz	x25, 1d6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x18c>
    1cf4:	add	x8, x25, #0x8
    1cf8:	cbz	x26, 1d18 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x138>
    1cfc:	ldaxr	w9, [x8]
    1d00:	sub	w10, w9, #0x1
    1d04:	stlxr	w11, w10, [x8]
    1d08:	cbnz	w11, 1cfc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x11c>
    1d0c:	cmp	w9, #0x1
    1d10:	b.eq	1d2c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x14c>  // b.none
    1d14:	b	1d6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x18c>
    1d18:	ldr	w9, [x8]
    1d1c:	sub	w10, w9, #0x1
    1d20:	str	w10, [x8]
    1d24:	cmp	w9, #0x1
    1d28:	b.ne	1d6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x18c>  // b.any
    1d2c:	mov	x27, x25
    1d30:	ldr	x8, [x27], #12
    1d34:	mov	x0, x25
    1d38:	ldr	x8, [x8, #16]
    1d3c:	blr	x8
    1d40:	cbz	x26, 207c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x49c>
    1d44:	ldaxr	w8, [x27]
    1d48:	sub	w9, w8, #0x1
    1d4c:	stlxr	w10, w9, [x27]
    1d50:	cbnz	w10, 1d44 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x164>
    1d54:	cmp	w8, #0x1
    1d58:	b.ne	1d6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x18c>  // b.any
    1d5c:	ldr	x8, [x25]
    1d60:	mov	x0, x25
    1d64:	ldr	x8, [x8, #24]
    1d68:	blr	x8
    1d6c:	adrp	x8, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d70:	add	x8, x8, #0x0
    1d74:	str	x8, [x19]
    1d78:	cbz	x24, 1df4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x214>
    1d7c:	add	x8, x24, #0x8
    1d80:	cbz	x26, 1da0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1c0>
    1d84:	ldaxr	w9, [x8]
    1d88:	sub	w10, w9, #0x1
    1d8c:	stlxr	w11, w10, [x8]
    1d90:	cbnz	w11, 1d84 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1a4>
    1d94:	cmp	w9, #0x1
    1d98:	b.eq	1db4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1d4>  // b.none
    1d9c:	b	1df4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x214>
    1da0:	ldr	w9, [x8]
    1da4:	sub	w10, w9, #0x1
    1da8:	str	w10, [x8]
    1dac:	cmp	w9, #0x1
    1db0:	b.ne	1df4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x214>  // b.any
    1db4:	mov	x25, x24
    1db8:	ldr	x8, [x25], #12
    1dbc:	mov	x0, x24
    1dc0:	ldr	x8, [x8, #16]
    1dc4:	blr	x8
    1dc8:	cbz	x26, 2094 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4b4>
    1dcc:	ldaxr	w8, [x25]
    1dd0:	sub	w9, w8, #0x1
    1dd4:	stlxr	w10, w9, [x25]
    1dd8:	cbnz	w10, 1dcc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1ec>
    1ddc:	cmp	w8, #0x1
    1de0:	b.ne	1df4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x214>  // b.any
    1de4:	ldr	x8, [x24]
    1de8:	mov	x0, x24
    1dec:	ldr	x8, [x8, #24]
    1df0:	blr	x8
    1df4:	ldr	x8, [x23]
    1df8:	ldr	w25, [x8, #32]
    1dfc:	cbz	w25, 1e1c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x23c>
    1e00:	mov	x0, x25
    1e04:	bl	0 <_Znwm>
    1e08:	mov	w1, #0xff                  	// #255
    1e0c:	mov	x2, x25
    1e10:	mov	x24, x0
    1e14:	bl	0 <memset>
    1e18:	b	1e20 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x240>
    1e1c:	mov	x24, xzr
    1e20:	add	x0, sp, #0x38
    1e24:	mov	x1, x19
    1e28:	add	x27, x22, #0x10
    1e2c:	add	x25, x24, x25
    1e30:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    1e34:	sub	x25, x25, x24
    1e38:	ldrb	w8, [sp, #96]
    1e3c:	cbz	w8, 1e48 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x268>
    1e40:	ldr	w8, [sp, #92]
    1e44:	b	1e6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x28c>
    1e48:	ldr	x0, [sp, #80]
    1e4c:	cbz	x0, 1e68 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x288>
    1e50:	ldr	x8, [x0]
    1e54:	ldr	x8, [x8, #40]
    1e58:	blr	x8
    1e5c:	ldr	w8, [sp, #88]
    1e60:	sub	w8, w0, w8
    1e64:	b	1e6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x28c>
    1e68:	mov	w8, wzr
    1e6c:	ldr	w9, [sp, #104]
    1e70:	cmp	w8, w9
    1e74:	b.eq	1eb4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2d4>  // b.none
    1e78:	add	x8, sp, #0x30
    1e7c:	add	x0, sp, #0x38
    1e80:	mov	x1, x24
    1e84:	mov	x2, x25
    1e88:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    1e8c:	ldr	x8, [sp, #48]
    1e90:	tst	x8, #0xfffffffffffffffe
    1e94:	and	x9, x8, #0xfffffffffffffffe
    1e98:	cset	w8, ne  // ne = any
    1e9c:	orr	x8, x9, x8
    1ea0:	str	x8, [sp, #48]
    1ea4:	cbnz	x9, 20dc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4fc>
    1ea8:	cbz	x8, 1e38 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x258>
    1eac:	add	x0, sp, #0x30
    1eb0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1eb4:	ldr	x8, [x23]
    1eb8:	ldr	x9, [x22]
    1ebc:	ldr	x22, [x22, #8]
    1ec0:	ldr	w0, [x8, #32]
    1ec4:	stp	x9, x22, [sp, #8]
    1ec8:	cbz	x22, 1ef8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x318>
    1ecc:	add	x8, x22, #0x8
    1ed0:	cbz	x26, 1eec <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x30c>
    1ed4:	ldaxr	w9, [x8]
    1ed8:	add	w9, w9, #0x1
    1edc:	stlxr	w10, w9, [x8]
    1ee0:	cbnz	w10, 1ed4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2f4>
    1ee4:	ldr	x22, [sp, #16]
    1ee8:	b	1ef8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x318>
    1eec:	ldr	w9, [x8]
    1ef0:	add	w9, w9, #0x1
    1ef4:	str	w9, [x8]
    1ef8:	ldr	w8, [x27, #16]
    1efc:	ldr	q0, [x27]
    1f00:	sub	x1, x29, #0x70
    1f04:	add	x2, sp, #0x8
    1f08:	str	w8, [sp, #40]
    1f0c:	mov	x8, x21
    1f10:	mov	x3, x20
    1f14:	stur	q0, [sp, #24]
    1f18:	bl	169c <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1f1c:	cbz	x22, 1f98 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3b8>
    1f20:	add	x8, x22, #0x8
    1f24:	cbz	x26, 1f44 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x364>
    1f28:	ldaxr	w9, [x8]
    1f2c:	sub	w10, w9, #0x1
    1f30:	stlxr	w11, w10, [x8]
    1f34:	cbnz	w11, 1f28 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x348>
    1f38:	cmp	w9, #0x1
    1f3c:	b.eq	1f58 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x378>  // b.none
    1f40:	b	1f98 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3b8>
    1f44:	ldr	w9, [x8]
    1f48:	sub	w10, w9, #0x1
    1f4c:	str	w10, [x8]
    1f50:	cmp	w9, #0x1
    1f54:	b.ne	1f98 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3b8>  // b.any
    1f58:	mov	x20, x22
    1f5c:	ldr	x8, [x20], #12
    1f60:	mov	x0, x22
    1f64:	ldr	x8, [x8, #16]
    1f68:	blr	x8
    1f6c:	cbz	x26, 20ac <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4cc>
    1f70:	ldaxr	w8, [x20]
    1f74:	sub	w9, w8, #0x1
    1f78:	stlxr	w10, w9, [x20]
    1f7c:	cbnz	w10, 1f70 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x390>
    1f80:	cmp	w8, #0x1
    1f84:	b.ne	1f98 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3b8>  // b.any
    1f88:	ldr	x8, [x22]
    1f8c:	mov	x0, x22
    1f90:	ldr	x8, [x8, #24]
    1f94:	blr	x8
    1f98:	adrp	x8, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1f9c:	ldr	x20, [sp, #72]
    1fa0:	ldr	x8, [x8]
    1fa4:	add	x8, x8, #0x10
    1fa8:	str	x8, [sp, #56]
    1fac:	cbz	x20, 2028 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x448>
    1fb0:	add	x8, x20, #0x8
    1fb4:	cbz	x26, 1fd4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3f4>
    1fb8:	ldaxr	w9, [x8]
    1fbc:	sub	w10, w9, #0x1
    1fc0:	stlxr	w11, w10, [x8]
    1fc4:	cbnz	w11, 1fb8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3d8>
    1fc8:	cmp	w9, #0x1
    1fcc:	b.eq	1fe8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x408>  // b.none
    1fd0:	b	2028 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x448>
    1fd4:	ldr	w9, [x8]
    1fd8:	sub	w10, w9, #0x1
    1fdc:	str	w10, [x8]
    1fe0:	cmp	w9, #0x1
    1fe4:	b.ne	2028 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x448>  // b.any
    1fe8:	mov	x21, x20
    1fec:	ldr	x8, [x21], #12
    1ff0:	mov	x0, x20
    1ff4:	ldr	x8, [x8, #16]
    1ff8:	blr	x8
    1ffc:	cbz	x26, 20c4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4e4>
    2000:	ldaxr	w8, [x21]
    2004:	sub	w9, w8, #0x1
    2008:	stlxr	w10, w9, [x21]
    200c:	cbnz	w10, 2000 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x420>
    2010:	cmp	w8, #0x1
    2014:	b.ne	2028 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x448>  // b.any
    2018:	ldr	x8, [x20]
    201c:	mov	x0, x20
    2020:	ldr	x8, [x8, #24]
    2024:	blr	x8
    2028:	cbz	x24, 2034 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x454>
    202c:	mov	x0, x24
    2030:	bl	0 <_ZdlPv>
    2034:	ldr	x8, [x19]
    2038:	mov	x0, x19
    203c:	ldr	x8, [x8, #8]
    2040:	blr	x8
    2044:	ldr	x0, [sp, #152]
    2048:	cbz	x0, 2050 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x470>
    204c:	bl	0 <_ZdlPv>
    2050:	ldur	x0, [x29, #-104]
    2054:	cbz	x0, 205c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x47c>
    2058:	bl	0 <_ZdlPv>
    205c:	ldp	x20, x19, [sp, #368]
    2060:	ldp	x22, x21, [sp, #352]
    2064:	ldp	x24, x23, [sp, #336]
    2068:	ldp	x26, x25, [sp, #320]
    206c:	ldp	x28, x27, [sp, #304]
    2070:	ldp	x29, x30, [sp, #288]
    2074:	add	sp, sp, #0x180
    2078:	ret
    207c:	ldr	w8, [x27]
    2080:	sub	w9, w8, #0x1
    2084:	str	w9, [x27]
    2088:	cmp	w8, #0x1
    208c:	b.eq	1d5c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x17c>  // b.none
    2090:	b	1d6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x18c>
    2094:	ldr	w8, [x25]
    2098:	sub	w9, w8, #0x1
    209c:	str	w9, [x25]
    20a0:	cmp	w8, #0x1
    20a4:	b.eq	1de4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x204>  // b.none
    20a8:	b	1df4 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x214>
    20ac:	ldr	w8, [x20]
    20b0:	sub	w9, w8, #0x1
    20b4:	str	w9, [x20]
    20b8:	cmp	w8, #0x1
    20bc:	b.eq	1f88 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3a8>  // b.none
    20c0:	b	1f98 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3b8>
    20c4:	ldr	w8, [x21]
    20c8:	sub	w9, w8, #0x1
    20cc:	str	w9, [x21]
    20d0:	cmp	w8, #0x1
    20d4:	b.eq	2018 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x438>  // b.none
    20d8:	b	2028 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x448>
    20dc:	sturb	wzr, [x29, #-16]
    20e0:	stp	xzr, xzr, [x29, #-64]
    20e4:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    20e8:	ldr	x10, [x10]
    20ec:	sub	x8, x29, #0x20
    20f0:	mov	w9, #0x1                   	// #1
    20f4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    20f8:	add	x11, x8, #0x10
    20fc:	stur	w9, [x29, #-48]
    2100:	add	x9, x10, #0x10
    2104:	add	x1, x1, #0x0
    2108:	sub	x0, x29, #0x50
    210c:	stp	x11, xzr, [x29, #-32]
    2110:	stp	x9, xzr, [x29, #-80]
    2114:	stur	x8, [x29, #-40]
    2118:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    211c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2120:	add	x1, x1, #0x0
    2124:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2128:	add	x1, sp, #0x30
    212c:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2130:	sub	x0, x29, #0x50
    2134:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2138:	ldr	x0, [x0]
    213c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2140:	add	x1, x1, #0x0
    2144:	mov	w2, #0x2c9                 	// #713
    2148:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000214c <_ZN4llvm3msf25WritableMappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
    214c:	add	x0, x0, #0x8
    2150:	b	964 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>

0000000000002154 <_ZN4llvm3msf25WritableMappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
    2154:	add	x0, x0, #0x8
    2158:	b	10f4 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>

000000000000215c <_ZN4llvm3msf25WritableMappedBlockStream9getLengthEv>:
    215c:	ldr	w0, [x0, #24]
    2160:	ret

0000000000002164 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE>:
    2164:	stp	x29, x30, [sp, #-96]!
    2168:	stp	x28, x27, [sp, #16]
    216c:	stp	x26, x25, [sp, #32]
    2170:	stp	x24, x23, [sp, #48]
    2174:	stp	x22, x21, [sp, #64]
    2178:	stp	x20, x19, [sp, #80]
    217c:	mov	x29, sp
    2180:	mov	x20, x3
    2184:	mov	x21, x2
    2188:	mov	w2, w20
    218c:	mov	w22, w1
    2190:	mov	x23, x0
    2194:	mov	x19, x8
    2198:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    219c:	ldr	x8, [x19]
    21a0:	tst	x8, #0xfffffffffffffffe
    21a4:	and	x9, x8, #0xfffffffffffffffe
    21a8:	cset	w8, ne  // ne = any
    21ac:	orr	x8, x9, x8
    21b0:	str	x8, [x19]
    21b4:	cbnz	x9, 2260 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xfc>
    21b8:	cbnz	x8, 227c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x118>
    21bc:	cbz	w20, 2244 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xe0>
    21c0:	ldr	w9, [x23, #16]
    21c4:	mov	w26, wzr
    21c8:	add	x24, x23, #0x88
    21cc:	mov	w28, w20
    21d0:	udiv	w27, w22, w9
    21d4:	msub	w8, w27, w9, w22
    21d8:	ldr	x10, [x23, #32]
    21dc:	sub	w11, w9, w8
    21e0:	cmp	w11, w28
    21e4:	csel	w25, w11, w28, cc  // cc = lo, ul, last
    21e8:	ldr	w10, [x10, w27, uxtw #2]
    21ec:	add	x2, x21, w26, uxtw
    21f0:	mov	x0, x24
    21f4:	mov	x3, x25
    21f8:	madd	w1, w9, w10, w8
    21fc:	mov	x8, x19
    2200:	bl	0 <_ZNK4llvm23WritableBinaryStreamRef10writeBytesEjNS_8ArrayRefIhEE>
    2204:	ldr	x9, [x19]
    2208:	tst	x9, #0xfffffffffffffffe
    220c:	and	x8, x9, #0xfffffffffffffffe
    2210:	cset	w9, ne  // ne = any
    2214:	orr	x9, x8, x9
    2218:	str	x9, [x19]
    221c:	cbnz	x8, 2224 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xc0>
    2220:	cbnz	x9, 227c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x118>
    2224:	cbnz	x8, 2260 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xfc>
    2228:	subs	w28, w28, w25
    222c:	b.eq	2244 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xe0>  // b.none
    2230:	ldr	w9, [x23, #16]
    2234:	mov	w8, wzr
    2238:	add	w27, w27, #0x1
    223c:	add	w26, w25, w26
    2240:	b	21d8 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x74>
    2244:	add	x0, x23, #0x8
    2248:	mov	w1, w22
    224c:	mov	x2, x21
    2250:	mov	x3, x20
    2254:	bl	12bc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>
    2258:	mov	w8, #0x1                   	// #1
    225c:	str	x8, [x19]
    2260:	ldp	x20, x19, [sp, #80]
    2264:	ldp	x22, x21, [sp, #64]
    2268:	ldp	x24, x23, [sp, #48]
    226c:	ldp	x26, x25, [sp, #32]
    2270:	ldp	x28, x27, [sp, #16]
    2274:	ldp	x29, x30, [sp], #96
    2278:	ret
    227c:	mov	x0, x19
    2280:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000002284 <_ZN4llvm3msf25WritableMappedBlockStream6commitEv>:
    2284:	add	x0, x0, #0x88
    2288:	b	0 <_ZN4llvm23WritableBinaryStreamRef6commitEv>

000000000000228c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev>:
    228c:	stp	x29, x30, [sp, #-48]!
    2290:	stp	x22, x21, [sp, #16]
    2294:	stp	x20, x19, [sp, #32]
    2298:	mov	x29, sp
    229c:	adrp	x9, 0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    22a0:	ldr	w8, [x0, #120]
    22a4:	ldr	x9, [x9]
    22a8:	mov	x19, x0
    22ac:	add	x9, x9, #0x10
    22b0:	str	x9, [x0]
    22b4:	cbz	w8, 22f0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x64>
    22b8:	ldr	x9, [x19, #104]
    22bc:	lsl	x20, x8, #5
    22c0:	add	x21, x9, #0x8
    22c4:	b	22d4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x48>
    22c8:	subs	x20, x20, #0x20
    22cc:	add	x21, x21, #0x20
    22d0:	b.eq	22f0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x64>  // b.none
    22d4:	ldur	w8, [x21, #-8]
    22d8:	cmn	w8, #0x3
    22dc:	b.hi	22c8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x3c>  // b.pmore
    22e0:	ldr	x0, [x21]
    22e4:	cbz	x0, 22c8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x3c>
    22e8:	bl	0 <_ZdlPv>
    22ec:	b	22c8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x3c>
    22f0:	ldr	x0, [x19, #104]
    22f4:	bl	0 <_ZdlPv>
    22f8:	ldr	x8, [x19, #96]
    22fc:	ldr	x20, [x19, #56]
    2300:	add	x8, x8, #0x1
    2304:	str	x8, [x19, #96]
    2308:	cbz	x20, 238c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x100>
    230c:	adrp	x21, 0 <__pthread_key_create>
    2310:	ldr	x21, [x21]
    2314:	add	x8, x20, #0x8
    2318:	cbz	x21, 2338 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xac>
    231c:	ldaxr	w9, [x8]
    2320:	sub	w10, w9, #0x1
    2324:	stlxr	w11, w10, [x8]
    2328:	cbnz	w11, 231c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x90>
    232c:	cmp	w9, #0x1
    2330:	b.eq	234c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xc0>  // b.none
    2334:	b	238c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x100>
    2338:	ldr	w9, [x8]
    233c:	sub	w10, w9, #0x1
    2340:	str	w10, [x8]
    2344:	cmp	w9, #0x1
    2348:	b.ne	238c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x100>  // b.any
    234c:	mov	x22, x20
    2350:	ldr	x8, [x22], #12
    2354:	mov	x0, x20
    2358:	ldr	x8, [x8, #16]
    235c:	blr	x8
    2360:	cbz	x21, 23ac <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x120>
    2364:	ldaxr	w8, [x22]
    2368:	sub	w9, w8, #0x1
    236c:	stlxr	w10, w9, [x22]
    2370:	cbnz	w10, 2364 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xd8>
    2374:	cmp	w8, #0x1
    2378:	b.ne	238c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x100>  // b.any
    237c:	ldr	x8, [x20]
    2380:	mov	x0, x20
    2384:	ldr	x8, [x8, #24]
    2388:	blr	x8
    238c:	ldr	x0, [x19, #24]
    2390:	cbz	x0, 2398 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x10c>
    2394:	bl	0 <_ZdlPv>
    2398:	mov	x0, x19
    239c:	ldp	x20, x19, [sp, #32]
    23a0:	ldp	x22, x21, [sp, #16]
    23a4:	ldp	x29, x30, [sp], #48
    23a8:	b	0 <_ZdlPv>
    23ac:	ldr	w8, [x22]
    23b0:	sub	w9, w8, #0x1
    23b4:	str	w9, [x22]
    23b8:	cmp	w8, #0x1
    23bc:	b.eq	237c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xf0>  // b.none
    23c0:	b	238c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x100>

00000000000023c4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev>:
    23c4:	stp	x29, x30, [sp, #-32]!
    23c8:	str	x19, [sp, #16]
    23cc:	mov	x29, sp
    23d0:	mov	x19, x0
    23d4:	bl	0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    23d8:	mov	x0, x19
    23dc:	ldr	x19, [sp, #16]
    23e0:	ldp	x29, x30, [sp], #32
    23e4:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm12consumeErrorENS_5ErrorE:

0000000000000000 <_ZN4llvm12consumeErrorENS_5ErrorE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #112]
   8:	add	x29, sp, #0x70
   c:	ldr	x8, [x0]
  10:	str	xzr, [x0]
  14:	add	x0, sp, #0x10
  18:	add	x1, sp, #0x8
  1c:	orr	x8, x8, #0x1
  20:	str	x8, [sp, #16]
  24:	add	x8, sp, #0x18
  28:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  2c:	ldr	x8, [sp, #24]
  30:	tst	x8, #0xfffffffffffffffe
  34:	and	x9, x8, #0xfffffffffffffffe
  38:	cset	w8, ne  // ne = any
  3c:	orr	x8, x9, x8
  40:	str	x8, [sp, #24]
  44:	cbnz	x9, 60 <_ZN4llvm12consumeErrorENS_5ErrorE+0x60>
  48:	cbnz	x8, d0 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd0>
  4c:	ldr	x8, [sp, #16]
  50:	cbnz	x8, d8 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd8>
  54:	ldp	x29, x30, [sp, #112]
  58:	add	sp, sp, #0x80
  5c:	ret
  60:	sturb	wzr, [x29, #-16]
  64:	stp	xzr, xzr, [sp, #48]
  68:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  6c:	ldr	x10, [x10]
  70:	sub	x8, x29, #0x20
  74:	mov	w9, #0x1                   	// #1
  78:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  7c:	add	x11, x8, #0x10
  80:	str	w9, [sp, #64]
  84:	add	x9, x10, #0x10
  88:	add	x1, x1, #0x0
  8c:	add	x0, sp, #0x20
  90:	stp	x11, xzr, [x29, #-32]
  94:	stp	x9, xzr, [sp, #32]
  98:	str	x8, [sp, #72]
  9c:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  ac:	add	x1, sp, #0x18
  b0:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  b4:	add	x0, sp, #0x20
  b8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  bc:	ldr	x0, [x0]
  c0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  c4:	add	x1, x1, #0x0
  c8:	mov	w2, #0x2c9                 	// #713
  cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d0:	add	x0, sp, #0x18
  d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  d8:	add	x0, sp, #0x10
  dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv:

0000000000000000 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	ldr	w20, [x0, #16]
  18:	mov	x19, x0
  1c:	cbz	w8, 58 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x58>
  20:	ldr	x9, [x19, #8]
  24:	lsl	x21, x8, #5
  28:	add	x22, x9, #0x8
  2c:	b	3c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x3c>
  30:	subs	x21, x21, #0x20
  34:	add	x22, x22, #0x20
  38:	b.eq	58 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x58>  // b.none
  3c:	ldur	w8, [x22, #-8]
  40:	cmn	w8, #0x3
  44:	b.hi	30 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x30>  // b.pmore
  48:	ldr	x0, [x22]
  4c:	cbz	x0, 30 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x30>
  50:	bl	0 <_ZdlPv>
  54:	b	30 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x30>
  58:	cbz	w20, 80 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x80>
  5c:	sub	w8, w20, #0x1
  60:	mov	w9, #0x21                  	// #33
  64:	clz	w8, w8
  68:	mov	w10, #0x1                   	// #1
  6c:	sub	w8, w9, w8
  70:	lsl	w8, w10, w8
  74:	cmp	w8, #0x40
  78:	mov	w9, #0x40                  	// #64
  7c:	csel	w20, w8, w9, gt
  80:	ldr	w8, [x19, #24]
  84:	cmp	w20, w8
  88:	b.ne	ec <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0xec>  // b.any
  8c:	sub	w8, w20, #0x1
  90:	tst	w20, w8
  94:	str	xzr, [x19, #16]
  98:	b.ne	134 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x134>  // b.any
  9c:	cbz	w20, 124 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x124>
  a0:	ldr	x8, [x19, #8]
  a4:	mov	w9, w20
  a8:	lsl	x10, x9, #5
  ac:	subs	x10, x10, #0x20
  b0:	b.eq	10c <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x10c>  // b.none
  b4:	lsr	x10, x10, #5
  b8:	add	x11, x10, #0x1
  bc:	and	x12, x11, #0xffffffffffffffe
  c0:	add	x13, x8, #0x20
  c4:	add	x10, x8, x12, lsl #5
  c8:	mov	w14, #0xffffffff            	// #-1
  cc:	mov	x15, x12
  d0:	stur	w14, [x13, #-32]
  d4:	str	w14, [x13], #64
  d8:	subs	x15, x15, #0x2
  dc:	b.ne	d0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0xd0>  // b.any
  e0:	cmp	x11, x12
  e4:	b.ne	110 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x110>  // b.any
  e8:	b	124 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x124>
  ec:	ldr	x0, [x19, #8]
  f0:	bl	0 <_ZdlPv>
  f4:	mov	x0, x19
  f8:	mov	w1, w20
  fc:	ldp	x20, x19, [sp, #32]
 100:	ldp	x22, x21, [sp, #16]
 104:	ldp	x29, x30, [sp], #48
 108:	b	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv>
 10c:	mov	x10, x8
 110:	add	x8, x8, x9, lsl #5
 114:	mov	w9, #0xffffffff            	// #-1
 118:	str	w9, [x10], #32
 11c:	cmp	x8, x10
 120:	b.ne	118 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv+0x118>  // b.any
 124:	ldp	x20, x19, [sp, #32]
 128:	ldp	x22, x21, [sp, #16]
 12c:	ldp	x29, x30, [sp], #48
 130:	ret
 134:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv>
 138:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv>
 13c:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE16shrink_and_clearEv>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x15c                 	// #348
 150:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZN4llvm18BinaryStreamWriterD2Ev>
  14:	ldr	x19, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x0]
  24:	cbz	x19, c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>
  28:	adrp	x20, 0 <__pthread_key_create>
  2c:	ldr	x20, [x20]
  30:	add	x8, x19, #0x8
  34:	cbz	x20, 54 <_ZN4llvm18BinaryStreamWriterD2Ev+0x54>
  38:	ldaxr	w9, [x8]
  3c:	sub	w10, w9, #0x1
  40:	stlxr	w11, w10, [x8]
  44:	cbnz	w11, 38 <_ZN4llvm18BinaryStreamWriterD2Ev+0x38>
  48:	cmp	w9, #0x1
  4c:	b.eq	68 <_ZN4llvm18BinaryStreamWriterD2Ev+0x68>  // b.none
  50:	b	c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>
  54:	ldr	w9, [x8]
  58:	sub	w10, w9, #0x1
  5c:	str	w10, [x8]
  60:	cmp	w9, #0x1
  64:	b.ne	c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>  // b.any
  68:	mov	x21, x19
  6c:	ldr	x8, [x21], #12
  70:	mov	x0, x19
  74:	ldr	x8, [x8, #16]
  78:	blr	x8
  7c:	cbz	x20, b4 <_ZN4llvm18BinaryStreamWriterD2Ev+0xb4>
  80:	ldaxr	w8, [x21]
  84:	sub	w9, w8, #0x1
  88:	stlxr	w10, w9, [x21]
  8c:	cbnz	w10, 80 <_ZN4llvm18BinaryStreamWriterD2Ev+0x80>
  90:	cmp	w8, #0x1
  94:	b.ne	c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>  // b.any
  98:	ldr	x8, [x19]
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	ldr	x1, [x8, #24]
  ac:	ldp	x29, x30, [sp], #48
  b0:	br	x1
  b4:	ldr	w8, [x21]
  b8:	sub	w9, w8, #0x1
  bc:	str	w9, [x21]
  c0:	cmp	w8, #0x1
  c4:	b.eq	98 <_ZN4llvm18BinaryStreamWriterD2Ev+0x98>  // b.none
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldr	x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret

Disassembly of section .text._ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj:

0000000000000000 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x9, [x0]
  18:	mov	w21, w2
  1c:	mov	w20, w1
  20:	mov	x22, x0
  24:	ldr	x9, [x9, #48]
  28:	mov	x19, x8
  2c:	blr	x9
  30:	cmp	w0, #0x4
  34:	b.cs	c8 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xc8>  // b.hs, b.nlast
  38:	ldr	x8, [x22]
  3c:	mov	w23, w0
  40:	mov	x0, x22
  44:	ldr	x8, [x8, #40]
  48:	blr	x8
  4c:	tbnz	w23, #1, 88 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0x88>
  50:	cmp	w0, w20
  54:	b.cc	90 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0x90>  // b.lo, b.ul, b.last
  58:	ldr	x8, [x22]
  5c:	mov	x0, x22
  60:	ldr	x8, [x8, #40]
  64:	blr	x8
  68:	add	w8, w21, w20
  6c:	cmp	w0, w8
  70:	b.cs	ac <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xac>  // b.hs, b.nlast
  74:	mov	w0, #0x30                  	// #48
  78:	bl	0 <_Znwm>
  7c:	mov	x20, x0
  80:	mov	w1, #0x1                   	// #1
  84:	b	a0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xa0>
  88:	cmp	w0, w20
  8c:	b.cs	ac <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xac>  // b.hs, b.nlast
  90:	mov	w0, #0x30                  	// #48
  94:	bl	0 <_Znwm>
  98:	mov	x20, x0
  9c:	mov	w1, #0x3                   	// #3
  a0:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  a4:	orr	x8, x20, #0x1
  a8:	b	b0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xb0>
  ac:	mov	w8, #0x1                   	// #1
  b0:	str	x8, [x19]
  b4:	ldp	x20, x19, [sp, #48]
  b8:	ldp	x22, x21, [sp, #32]
  bc:	ldr	x23, [sp, #16]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>
  cc:	adrp	x1, 0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>
  d0:	adrp	x3, 0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x5d                  	// #93
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm3msf17MappedBlockStreamD0Ev>
  14:	ldr	w8, [x0, #120]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	w8, 64 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x64>
  2c:	ldr	x9, [x19, #104]
  30:	lsl	x20, x8, #5
  34:	add	x21, x9, #0x8
  38:	b	48 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x48>
  3c:	subs	x20, x20, #0x20
  40:	add	x21, x21, #0x20
  44:	b.eq	64 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x64>  // b.none
  48:	ldur	w8, [x21, #-8]
  4c:	cmn	w8, #0x3
  50:	b.hi	3c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x3c>  // b.pmore
  54:	ldr	x0, [x21]
  58:	cbz	x0, 3c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x3c>
  5c:	bl	0 <_ZdlPv>
  60:	b	3c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x3c>
  64:	ldr	x0, [x19, #104]
  68:	bl	0 <_ZdlPv>
  6c:	ldr	x8, [x19, #96]
  70:	ldr	x20, [x19, #56]
  74:	add	x8, x8, #0x1
  78:	str	x8, [x19, #96]
  7c:	cbz	x20, 100 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x100>
  80:	adrp	x21, 0 <__pthread_key_create>
  84:	ldr	x21, [x21]
  88:	add	x8, x20, #0x8
  8c:	cbz	x21, ac <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xac>
  90:	ldaxr	w9, [x8]
  94:	sub	w10, w9, #0x1
  98:	stlxr	w11, w10, [x8]
  9c:	cbnz	w11, 90 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x90>
  a0:	cmp	w9, #0x1
  a4:	b.eq	c0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xc0>  // b.none
  a8:	b	100 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x100>
  ac:	ldr	w9, [x8]
  b0:	sub	w10, w9, #0x1
  b4:	str	w10, [x8]
  b8:	cmp	w9, #0x1
  bc:	b.ne	100 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x100>  // b.any
  c0:	mov	x22, x20
  c4:	ldr	x8, [x22], #12
  c8:	mov	x0, x20
  cc:	ldr	x8, [x8, #16]
  d0:	blr	x8
  d4:	cbz	x21, 120 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x120>
  d8:	ldaxr	w8, [x22]
  dc:	sub	w9, w8, #0x1
  e0:	stlxr	w10, w9, [x22]
  e4:	cbnz	w10, d8 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xd8>
  e8:	cmp	w8, #0x1
  ec:	b.ne	100 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x100>  // b.any
  f0:	ldr	x8, [x20]
  f4:	mov	x0, x20
  f8:	ldr	x8, [x8, #24]
  fc:	blr	x8
 100:	ldr	x0, [x19, #24]
 104:	cbz	x0, 10c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x10c>
 108:	bl	0 <_ZdlPv>
 10c:	mov	x0, x19
 110:	ldp	x20, x19, [sp, #32]
 114:	ldp	x22, x21, [sp, #16]
 118:	ldp	x29, x30, [sp], #48
 11c:	b	0 <_ZdlPv>
 120:	ldr	w8, [x22]
 124:	sub	w9, w8, #0x1
 128:	str	w9, [x22]
 12c:	cmp	w8, #0x1
 130:	b.eq	f0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xf0>  // b.none
 134:	b	100 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x100>

Disassembly of section .text._ZNK4llvm3msf17MappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf17MappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x21, [x0]
  20:	mov	x19, x8
  24:	tst	x21, #0xfffffffffffffffe
  28:	and	x20, x21, #0xfffffffffffffffe
  2c:	cset	w8, ne  // ne = any
  30:	orr	x8, x20, x8
  34:	str	x8, [x0]
  38:	cbz	x20, 13c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x13c>
  3c:	str	xzr, [x0]
  40:	ldr	x8, [x20]
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x20
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 144 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x144>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x23, x24, [x20, #8]
  68:	cmp	x23, x24
  6c:	b.eq	128 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x128>  // b.none
  70:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x21, [x21]
  78:	mov	w25, #0x1                   	// #1
  7c:	mov	w8, #0x1                   	// #1
  80:	str	x8, [sp, #8]
  84:	str	xzr, [x19]
  88:	ldr	x22, [x23]
  8c:	str	xzr, [x23]
  90:	mov	x1, x21
  94:	ldr	x8, [x22]
  98:	mov	x0, x22
  9c:	ldr	x8, [x8, #48]
  a0:	blr	x8
  a4:	tbz	w0, #0, dc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xdc>
  a8:	ldr	x8, [x22]
  ac:	mov	x0, x22
  b0:	mov	x1, x21
  b4:	ldr	x8, [x8, #48]
  b8:	blr	x8
  bc:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
  c0:	str	x25, [sp]
  c4:	cbz	x22, e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  c8:	ldr	x8, [x22]
  cc:	mov	x0, x22
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  dc:	orr	x8, x22, #0x1
  e0:	str	x8, [sp]
  e4:	add	x8, x29, #0x18
  e8:	add	x0, sp, #0x8
  ec:	mov	x1, sp
  f0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  f4:	ldr	x8, [x19]
  f8:	cbnz	x8, 1d0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d0>
  fc:	ldr	x8, [x29, #24]
 100:	ldr	x9, [sp]
 104:	str	xzr, [x29, #24]
 108:	orr	x8, x8, #0x1
 10c:	str	x8, [x19]
 110:	cbnz	x9, 1d8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d8>
 114:	ldr	x9, [sp, #8]
 118:	cbnz	x9, 1e0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e0>
 11c:	add	x23, x23, #0x8
 120:	cmp	x24, x23
 124:	b.ne	80 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x80>  // b.any
 128:	ldr	x8, [x20]
 12c:	mov	x0, x20
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	b	1b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b4>
 13c:	mov	w8, #0x1                   	// #1
 140:	b	1b0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b0>
 144:	ldr	x8, [x20]
 148:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 14c:	mov	x0, x20
 150:	ldr	x8, [x8, #48]
 154:	ldr	x1, [x1]
 158:	blr	x8
 15c:	tbz	w0, #0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 160:	ldr	x8, [x20]
 164:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 168:	mov	x0, x20
 16c:	ldr	x8, [x8, #48]
 170:	ldr	x1, [x1]
 174:	blr	x8
 178:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
 17c:	mov	w8, #0x1                   	// #1
 180:	str	x8, [x19]
 184:	ldr	x8, [x20]
 188:	mov	x0, x20
 18c:	ldp	x20, x19, [sp, #80]
 190:	ldp	x22, x21, [sp, #64]
 194:	ldr	x1, [x8, #8]
 198:	ldp	x24, x23, [sp, #48]
 19c:	ldr	x25, [sp, #32]
 1a0:	ldp	x29, x30, [sp, #16]
 1a4:	add	sp, sp, #0x60
 1a8:	br	x1
 1ac:	orr	x8, x21, #0x1
 1b0:	str	x8, [x19]
 1b4:	ldp	x20, x19, [sp, #80]
 1b8:	ldp	x22, x21, [sp, #64]
 1bc:	ldp	x24, x23, [sp, #48]
 1c0:	ldr	x25, [sp, #32]
 1c4:	ldp	x29, x30, [sp, #16]
 1c8:	add	sp, sp, #0x60
 1cc:	ret
 1d0:	mov	x0, x19
 1d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1d8:	mov	x0, sp
 1dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e0:	add	x0, sp, #0x8
 1e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e8:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1ec:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f0:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x329                 	// #809
 204:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x8, [x0]
  24:	mov	x21, x1
  28:	tst	x8, #0xfffffffffffffffe
  2c:	and	x9, x8, #0xfffffffffffffffe
  30:	cset	w8, ne  // ne = any
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	cbz	x9, 16c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x16c>
  40:	ldr	x8, [x21]
  44:	mov	x20, x0
  48:	tst	x8, #0xfffffffffffffffe
  4c:	and	x9, x8, #0xfffffffffffffffe
  50:	cset	w8, ne  // ne = any
  54:	orr	x8, x9, x8
  58:	str	x8, [x21]
  5c:	cbz	x9, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
  60:	ldr	x9, [x20]
  64:	ands	x0, x9, #0xfffffffffffffffe
  68:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  6c:	ldr	x8, [x0]
  70:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  74:	ldr	x8, [x8, #48]
  78:	ldr	x1, [x1]
  7c:	blr	x8
  80:	tbz	w0, #0, 110 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x110>
  84:	ldr	x8, [x21]
  88:	ldr	x9, [x20]
  8c:	ands	x0, x8, #0xfffffffffffffffe
  90:	and	x24, x9, #0xfffffffffffffffe
  94:	b.eq	1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>  // b.none
  98:	ldr	x8, [x0]
  9c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  a0:	ldr	x8, [x8, #48]
  a4:	ldr	x1, [x1]
  a8:	blr	x8
  ac:	ldr	x8, [x21]
  b0:	and	x22, x8, #0xfffffffffffffffe
  b4:	tbz	w0, #0, 1f8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f8>
  b8:	str	xzr, [x21]
  bc:	ldp	x21, x25, [x22, #8]
  c0:	cmp	x21, x25
  c4:	b.eq	224 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x224>  // b.none
  c8:	add	x23, x24, #0x8
  cc:	b	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>
  d0:	mov	x0, x23
  d4:	mov	x2, x21
  d8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  dc:	add	x21, x21, #0x8
  e0:	cmp	x25, x21
  e4:	b.eq	224 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x224>  // b.none
  e8:	ldp	x1, x8, [x24, #16]
  ec:	cmp	x1, x8
  f0:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  f4:	ldr	x8, [x21]
  f8:	str	xzr, [x21]
  fc:	str	x8, [x1]
 100:	ldr	x8, [x24, #16]
 104:	add	x8, x8, #0x8
 108:	str	x8, [x24, #16]
 10c:	b	dc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xdc>
 110:	ldr	x8, [x21]
 114:	ands	x0, x8, #0xfffffffffffffffe
 118:	b.eq	180 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x180>  // b.none
 11c:	ldr	x8, [x0]
 120:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 124:	ldr	x8, [x8, #48]
 128:	ldr	x1, [x1]
 12c:	blr	x8
 130:	tbz	w0, #0, 180 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x180>
 134:	ldr	x8, [x21]
 138:	add	x2, x29, #0x18
 13c:	and	x0, x8, #0xfffffffffffffffe
 140:	ldr	x1, [x0, #8]!
 144:	ldr	x8, [x20]
 148:	and	x8, x8, #0xfffffffffffffffe
 14c:	str	x8, [x29, #24]
 150:	str	xzr, [x20]
 154:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 158:	ldr	x0, [x29, #24]
 15c:	cbz	x0, 16c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x16c>
 160:	ldr	x8, [x0]
 164:	ldr	x8, [x8, #8]
 168:	blr	x8
 16c:	ldr	x8, [x21]
 170:	orr	x8, x8, #0x1
 174:	str	x8, [x19]
 178:	str	xzr, [x21]
 17c:	b	264 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x264>
 180:	mov	w0, #0x20                  	// #32
 184:	bl	0 <_Znwm>
 188:	ldr	x8, [x20]
 18c:	add	x1, sp, #0x8
 190:	mov	x2, sp
 194:	mov	x22, x0
 198:	and	x8, x8, #0xfffffffffffffffe
 19c:	str	x8, [sp, #8]
 1a0:	str	xzr, [x20]
 1a4:	ldr	x8, [x21]
 1a8:	and	x8, x8, #0xfffffffffffffffe
 1ac:	str	x8, [sp]
 1b0:	str	xzr, [x21]
 1b4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1b8:	ldr	x0, [sp]
 1bc:	orr	x8, x22, #0x1
 1c0:	str	x8, [x19]
 1c4:	cbz	x0, 1d4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d4>
 1c8:	ldr	x8, [x0]
 1cc:	ldr	x8, [x8, #8]
 1d0:	blr	x8
 1d4:	ldr	x0, [sp, #8]
 1d8:	str	xzr, [sp]
 1dc:	cbz	x0, 1ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1ec>
 1e0:	ldr	x8, [x0]
 1e4:	ldr	x8, [x8, #8]
 1e8:	blr	x8
 1ec:	str	xzr, [sp, #8]
 1f0:	b	264 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x264>
 1f4:	mov	x22, xzr
 1f8:	str	x22, [x29, #24]
 1fc:	str	xzr, [x21]
 200:	ldp	x1, x8, [x24, #16]
 204:	cmp	x1, x8
 208:	b.eq	234 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x234>  // b.none
 20c:	str	xzr, [x29, #24]
 210:	str	x22, [x1], #8
 214:	str	x1, [x24, #16]
 218:	ldr	x0, [x29, #24]
 21c:	cbnz	x0, 248 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x248>
 220:	b	254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 224:	cbz	x22, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 228:	ldr	x8, [x22]
 22c:	mov	x0, x22
 230:	b	24c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x24c>
 234:	add	x0, x24, #0x8
 238:	add	x2, x29, #0x18
 23c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 240:	ldr	x0, [x29, #24]
 244:	cbz	x0, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 248:	ldr	x8, [x0]
 24c:	ldr	x8, [x8, #8]
 250:	blr	x8
 254:	ldr	x8, [x20]
 258:	orr	x8, x8, #0x1
 25c:	str	x8, [x19]
 260:	str	xzr, [x20]
 264:	ldp	x20, x19, [sp, #80]
 268:	ldp	x22, x21, [sp, #64]
 26c:	ldp	x24, x23, [sp, #48]
 270:	ldr	x25, [sp, #32]
 274:	ldp	x29, x30, [sp, #16]
 278:	add	sp, sp, #0x60
 27c:	ret

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	mov	x19, x0
  20:	mov	x22, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	stp	xzr, xzr, [x0, #16]
  34:	ldr	x0, [x1]
  38:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  3c:	mov	x21, x2
  40:	ldr	x8, [x0]
  44:	ldr	x8, [x8, #48]
  48:	ldr	x1, [x1]
  4c:	blr	x8
  50:	tbnz	w0, #0, f4 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf4>
  54:	ldr	x0, [x21]
  58:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  5c:	ldr	x8, [x0]
  60:	ldr	x8, [x8, #48]
  64:	ldr	x1, [x1]
  68:	blr	x8
  6c:	tbnz	w0, #0, f4 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf4>
  70:	ldp	x1, x8, [x19, #16]
  74:	cmp	x1, x8
  78:	b.eq	98 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0x98>  // b.none
  7c:	ldr	x8, [x22]
  80:	str	xzr, [x22]
  84:	str	x8, [x1]
  88:	ldr	x8, [x19, #16]
  8c:	add	x1, x8, #0x8
  90:	str	x1, [x19, #16]
  94:	b	a8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xa8>
  98:	mov	x0, x20
  9c:	mov	x2, x22
  a0:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  a4:	ldr	x1, [x19, #16]
  a8:	ldr	x8, [x19, #24]
  ac:	cmp	x1, x8
  b0:	b.eq	dc <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xdc>  // b.none
  b4:	ldr	x8, [x21]
  b8:	str	xzr, [x21]
  bc:	str	x8, [x1]
  c0:	ldr	x8, [x19, #16]
  c4:	add	x8, x8, #0x8
  c8:	str	x8, [x19, #16]
  cc:	ldp	x20, x19, [sp, #32]
  d0:	ldp	x22, x21, [sp, #16]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret
  dc:	mov	x0, x20
  e0:	mov	x2, x21
  e4:	ldp	x20, x19, [sp, #32]
  e8:	ldp	x22, x21, [sp, #16]
  ec:	ldp	x29, x30, [sp], #48
  f0:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f4:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f8:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  fc:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x182                 	// #386
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x26, x20
  a8:	b	bc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  ac:	str	xzr, [x26], #8
  b0:	cmp	x21, x26
  b4:	add	x23, x23, #0x8
  b8:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  bc:	ldr	x8, [x26]
  c0:	str	xzr, [x26]
  c4:	str	x8, [x23]
  c8:	ldr	x0, [x26]
  cc:	cbz	x0, ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  d0:	ldr	x8, [x0]
  d4:	ldr	x8, [x8, #8]
  d8:	blr	x8
  dc:	b	ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  e0:	str	xzr, [x21], #8
  e4:	cmp	x24, x21
  e8:	add	x23, x23, #0x8
  ec:	b.eq	114 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x114>  // b.none
  f0:	ldr	x8, [x21]
  f4:	str	xzr, [x21]
  f8:	str	x8, [x23]
  fc:	ldr	x0, [x21]
 100:	cbz	x0, e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 104:	ldr	x8, [x0]
 108:	ldr	x8, [x8, #8]
 10c:	blr	x8
 110:	b	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 114:	cbz	x20, 120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #3
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	x8, x9, [x0]
  18:	ldr	x10, [x0, #16]
  1c:	mov	x20, x2
  20:	mov	x19, x0
  24:	sub	x11, x1, x8
  28:	cmp	x9, x10
  2c:	asr	x21, x11, #3
  30:	b.eq	cc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xcc>  // b.none
  34:	cmp	x9, x1
  38:	b.eq	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xe0>  // b.none
  3c:	ldur	x10, [x9, #-8]
  40:	add	x22, x8, x21, lsl #3
  44:	stp	xzr, x10, [x9, #-8]
  48:	ldr	x9, [x19, #8]
  4c:	sub	x8, x9, #0x8
  50:	add	x10, x9, #0x8
  54:	sub	x9, x8, x22
  58:	cmp	x9, #0x1
  5c:	str	x10, [x19, #8]
  60:	b.lt	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>  // b.tstop
  64:	lsr	x9, x9, #3
  68:	add	x23, x9, #0x1
  6c:	mov	x24, x8
  70:	b	84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x84>
  74:	sub	x23, x23, #0x1
  78:	cmp	x23, #0x1
  7c:	mov	x8, x24
  80:	b.le	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>
  84:	ldr	x9, [x24, #-8]!
  88:	str	xzr, [x24]
  8c:	ldr	x0, [x8]
  90:	str	x9, [x8]
  94:	cbz	x0, 74 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x74>
  98:	ldr	x8, [x0]
  9c:	ldr	x8, [x8, #8]
  a0:	blr	x8
  a4:	b	74 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x74>
  a8:	ldr	x8, [x20]
  ac:	str	xzr, [x20]
  b0:	ldr	x0, [x22]
  b4:	str	x8, [x22]
  b8:	cbz	x0, f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  bc:	ldr	x8, [x0]
  c0:	ldr	x8, [x8, #8]
  c4:	blr	x8
  c8:	b	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  cc:	add	x1, x8, x21, lsl #3
  d0:	mov	x0, x19
  d4:	mov	x2, x20
  d8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
  dc:	b	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  e0:	ldr	x8, [x20]
  e4:	str	xzr, [x20]
  e8:	str	x8, [x9]
  ec:	ldr	x8, [x19, #8]
  f0:	add	x8, x8, #0x8
  f4:	str	x8, [x19, #8]
  f8:	ldr	x8, [x19]
  fc:	ldp	x20, x19, [sp, #48]
 100:	ldp	x24, x23, [sp, #16]
 104:	add	x0, x8, x21, lsl #3
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x34>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  34:	ldp	x9, x8, [x19, #16]
  38:	sub	x9, x9, x8
  3c:	cmp	x9, #0x6
  40:	b.hi	5c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x5c>  // b.pmore
  44:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x7                   	// #7
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  58:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  5c:	mov	w9, #0x6563                	// #25955
  60:	mov	w10, #0x7573                	// #30067
  64:	movk	w9, #0x7373, lsl #16
  68:	movk	w10, #0x6363, lsl #16
  6c:	stur	w9, [x8, #3]
  70:	str	w10, [x8]
  74:	ldr	x8, [x19, #24]
  78:	add	x8, x8, #0x7
  7c:	str	x8, [x19, #24]
  80:	mov	x0, x19
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	b	30 <_ZN4llvm11raw_ostreamlsEPKc+0x30>
  2c:	mov	x21, xzr
  30:	ldp	x8, x0, [x19, #16]
  34:	sub	x8, x8, x0
  38:	cmp	x21, x8
  3c:	b.ls	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.plast
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	mov	x2, x21
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	cbz	x21, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x1, x20
  64:	mov	x2, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x8, [x19, #24]
  70:	add	x8, x8, x21
  74:	str	x8, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  14:	ldr	x20, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	mov	x19, x0
  20:	add	x8, x8, #0x10
  24:	str	x8, [x0]
  28:	cbz	x20, ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>
  2c:	adrp	x21, 0 <__pthread_key_create>
  30:	ldr	x21, [x21]
  34:	add	x8, x20, #0x8
  38:	cbz	x21, 58 <_ZN4llvm18BinaryStreamWriterD0Ev+0x58>
  3c:	ldaxr	w9, [x8]
  40:	sub	w10, w9, #0x1
  44:	stlxr	w11, w10, [x8]
  48:	cbnz	w11, 3c <_ZN4llvm18BinaryStreamWriterD0Ev+0x3c>
  4c:	cmp	w9, #0x1
  50:	b.eq	6c <_ZN4llvm18BinaryStreamWriterD0Ev+0x6c>  // b.none
  54:	b	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>
  58:	ldr	w9, [x8]
  5c:	sub	w10, w9, #0x1
  60:	str	w10, [x8]
  64:	cmp	w9, #0x1
  68:	b.ne	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>  // b.any
  6c:	mov	x22, x20
  70:	ldr	x8, [x22], #12
  74:	mov	x0, x20
  78:	ldr	x8, [x8, #16]
  7c:	blr	x8
  80:	cbz	x21, c0 <_ZN4llvm18BinaryStreamWriterD0Ev+0xc0>
  84:	ldaxr	w8, [x22]
  88:	sub	w9, w8, #0x1
  8c:	stlxr	w10, w9, [x22]
  90:	cbnz	w10, 84 <_ZN4llvm18BinaryStreamWriterD0Ev+0x84>
  94:	cmp	w8, #0x1
  98:	b.ne	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>  // b.any
  9c:	ldr	x8, [x20]
  a0:	mov	x0, x20
  a4:	ldr	x8, [x8, #24]
  a8:	blr	x8
  ac:	mov	x0, x19
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldp	x22, x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	b	0 <_ZdlPv>
  c0:	ldr	w8, [x22]
  c4:	sub	w9, w8, #0x1
  c8:	str	w9, [x22]
  cc:	cmp	w8, #0x1
  d0:	b.eq	9c <_ZN4llvm18BinaryStreamWriterD0Ev+0x9c>  // b.none
  d4:	b	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>

Disassembly of section .text._ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	cbz	w1, bc <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xbc>
  14:	mov	w9, #0xaaab                	// #43691
  18:	lsl	w8, w1, #2
  1c:	movk	w9, #0xaaaa, lsl #16
  20:	umull	x8, w8, w9
  24:	lsr	x8, x8, #33
  28:	add	w8, w8, #0x1
  2c:	orr	x8, x8, x8, lsr #1
  30:	orr	x8, x8, x8, lsr #2
  34:	orr	x8, x8, x8, lsr #4
  38:	orr	x8, x8, x8, lsr #8
  3c:	orr	x8, x8, x8, lsr #16
  40:	lsr	x9, x8, #32
  44:	orr	w8, w9, w8
  48:	adds	w8, w8, #0x1
  4c:	str	w8, [x19, #24]
  50:	b.cs	c0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xc0>  // b.hs, b.nlast
  54:	mov	w8, w8
  58:	lsl	x0, x8, #5
  5c:	bl	0 <_Znwm>
  60:	ldr	w8, [x19, #24]
  64:	stp	x0, xzr, [x19, #8]
  68:	sub	w9, w8, #0x1
  6c:	tst	w8, w9
  70:	b.ne	ec <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xec>  // b.any
  74:	cbz	w8, c4 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xc4>
  78:	lsl	x8, x8, #5
  7c:	subs	x9, x8, #0x20
  80:	b.eq	d0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xd0>  // b.none
  84:	lsr	x9, x9, #5
  88:	add	x10, x9, #0x1
  8c:	and	x11, x10, #0xffffffffffffffe
  90:	add	x12, x0, #0x20
  94:	add	x9, x0, x11, lsl #5
  98:	mov	w13, #0xffffffff            	// #-1
  9c:	mov	x14, x11
  a0:	stur	w13, [x12, #-32]
  a4:	str	w13, [x12], #64
  a8:	subs	x14, x14, #0x2
  ac:	b.ne	a0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xa0>  // b.any
  b0:	cmp	x10, x11
  b4:	b.eq	c4 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xc4>  // b.none
  b8:	b	d4 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xd4>
  bc:	str	wzr, [x19, #24]
  c0:	stp	xzr, xzr, [x19, #8]
  c4:	ldr	x19, [sp, #16]
  c8:	ldp	x29, x30, [sp], #32
  cc:	ret
  d0:	mov	x9, x0
  d4:	add	x8, x0, x8
  d8:	mov	w10, #0xffffffff            	// #-1
  dc:	str	w10, [x9], #32
  e0:	cmp	x8, x9
  e4:	b.ne	dc <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xdc>  // b.any
  e8:	b	c4 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj+0xc4>
  ec:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj>
  f0:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj>
  f4:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4initEj>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x15c                 	// #348
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm3msf17MappedBlockStreamD2Ev>
  14:	ldr	w8, [x0, #120]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	w8, 64 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x64>
  2c:	ldr	x9, [x19, #104]
  30:	lsl	x20, x8, #5
  34:	add	x21, x9, #0x8
  38:	b	48 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x48>
  3c:	subs	x20, x20, #0x20
  40:	add	x21, x21, #0x20
  44:	b.eq	64 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x64>  // b.none
  48:	ldur	w8, [x21, #-8]
  4c:	cmn	w8, #0x3
  50:	b.hi	3c <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x3c>  // b.pmore
  54:	ldr	x0, [x21]
  58:	cbz	x0, 3c <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x3c>
  5c:	bl	0 <_ZdlPv>
  60:	b	3c <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x3c>
  64:	ldr	x0, [x19, #104]
  68:	bl	0 <_ZdlPv>
  6c:	ldr	x8, [x19, #96]
  70:	ldr	x20, [x19, #56]
  74:	add	x8, x8, #0x1
  78:	str	x8, [x19, #96]
  7c:	cbz	x20, 100 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x100>
  80:	adrp	x21, 0 <__pthread_key_create>
  84:	ldr	x21, [x21]
  88:	add	x8, x20, #0x8
  8c:	cbz	x21, ac <_ZN4llvm3msf17MappedBlockStreamD2Ev+0xac>
  90:	ldaxr	w9, [x8]
  94:	sub	w10, w9, #0x1
  98:	stlxr	w11, w10, [x8]
  9c:	cbnz	w11, 90 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x90>
  a0:	cmp	w9, #0x1
  a4:	b.eq	c0 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0xc0>  // b.none
  a8:	b	100 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x100>
  ac:	ldr	w9, [x8]
  b0:	sub	w10, w9, #0x1
  b4:	str	w10, [x8]
  b8:	cmp	w9, #0x1
  bc:	b.ne	100 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x100>  // b.any
  c0:	mov	x22, x20
  c4:	ldr	x8, [x22], #12
  c8:	mov	x0, x20
  cc:	ldr	x8, [x8, #16]
  d0:	blr	x8
  d4:	cbz	x21, 128 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x128>
  d8:	ldaxr	w8, [x22]
  dc:	sub	w9, w8, #0x1
  e0:	stlxr	w10, w9, [x22]
  e4:	cbnz	w10, d8 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0xd8>
  e8:	cmp	w8, #0x1
  ec:	b.ne	100 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x100>  // b.any
  f0:	ldr	x8, [x20]
  f4:	mov	x0, x20
  f8:	ldr	x8, [x8, #24]
  fc:	blr	x8
 100:	ldr	x0, [x19, #24]
 104:	cbz	x0, 118 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x118>
 108:	ldp	x20, x19, [sp, #32]
 10c:	ldp	x22, x21, [sp, #16]
 110:	ldp	x29, x30, [sp], #48
 114:	b	0 <_ZdlPv>
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldp	x22, x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	ldr	w8, [x22]
 12c:	sub	w9, w8, #0x1
 130:	str	w9, [x22]
 134:	cmp	w8, #0x1
 138:	b.eq	f0 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0xf0>  // b.none
 13c:	b	100 <_ZN4llvm3msf17MappedBlockStreamD2Ev+0x100>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x10, [x0, #80]
  18:	ldr	x8, [x0]
  1c:	mov	w9, #0x1                   	// #1
  20:	lsl	x9, x9, x2
  24:	sub	x24, x9, #0x1
  28:	add	x12, x10, x1
  2c:	add	x10, x24, x8
  30:	neg	x23, x9
  34:	and	x10, x10, x23
  38:	sub	x10, x10, x8
  3c:	adds	x11, x10, x1
  40:	str	x12, [x0, #80]
  44:	b.cs	158 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x158>  // b.hs, b.nlast
  48:	ldr	x12, [x0, #8]
  4c:	mov	x20, x1
  50:	mov	x19, x0
  54:	sub	x12, x12, x8
  58:	cmp	x11, x12
  5c:	b.ls	f8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xf8>  // b.plast
  60:	add	x8, x20, x9
  64:	sub	x21, x8, #0x1
  68:	cmp	x21, #0x1, lsl #12
  6c:	b.ls	104 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x104>  // b.plast
  70:	mov	x0, x21
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbnz	x0, 90 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x90>
  80:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	ldp	w8, w9, [x19, #72]
  94:	cmp	w8, w9
  98:	b.cs	144 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x144>  // b.hs, b.nlast
  9c:	ldr	x9, [x19, #64]
  a0:	add	x8, x9, w8, uxtw #4
  a4:	stp	x22, x21, [x8]
  a8:	ldp	w8, w9, [x19, #72]
  ac:	cmp	w8, w9
  b0:	b.cs	198 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x198>  // b.hs, b.nlast
  b4:	add	w9, w8, #0x1
  b8:	adds	x8, x24, x22
  bc:	str	w9, [x19, #72]
  c0:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
  c4:	and	x0, x8, x23
  c8:	add	x8, x0, x20
  cc:	add	x9, x21, x22
  d0:	cmp	x8, x9
  d4:	b.ls	130 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x130>  // b.plast
  d8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  dc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0xfb                  	// #251
  f4:	bl	0 <__assert_fail>
  f8:	add	x0, x8, x10
  fc:	add	x8, x0, x20
 100:	b	12c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x12c>
 104:	mov	x0, x19
 108:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 10c:	ldr	x8, [x19]
 110:	adds	x8, x24, x8
 114:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
 118:	ldr	x9, [x19, #8]
 11c:	and	x0, x8, x23
 120:	add	x8, x0, x20
 124:	cmp	x8, x9
 128:	b.hi	1b8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1b8>  // b.pmore
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	add	x0, x19, #0x40
 148:	mov	x1, xzr
 14c:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 150:	ldr	w8, [x19, #72]
 154:	b	9c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x9c>
 158:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 15c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 160:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0xdc                  	// #220
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 17c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 180:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0xbb                  	// #187
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 19c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1bc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x106                 	// #262
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w22, [x0, #24]
  14:	mov	w8, #0x1e                  	// #30
  18:	mov	x19, x0
  1c:	lsr	x9, x22, #7
  20:	cmp	x9, #0x1e
  24:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  28:	mov	w9, #0x1000                	// #4096
  2c:	lsl	x20, x9, x8
  30:	mov	x0, x20
  34:	bl	0 <malloc>
  38:	mov	x21, x0
  3c:	cbnz	x0, 54 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x54>
  40:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  44:	add	x0, x0, #0x0
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	ldr	w22, [x19, #24]
  54:	ldr	w8, [x19, #28]
  58:	cmp	w22, w8
  5c:	b.cs	94 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x94>  // b.hs, b.nlast
  60:	ldr	x8, [x19, #16]
  64:	str	x21, [x8, w22, uxtw #3]
  68:	ldp	w8, w9, [x19, #24]
  6c:	cmp	w8, w9
  70:	b.cs	b0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0xb0>  // b.hs, b.nlast
  74:	add	w8, w8, #0x1
  78:	add	x9, x21, x20
  7c:	str	w8, [x19, #24]
  80:	stp	x21, x9, [x19]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x10
  98:	add	x1, x0, #0x10
  9c:	mov	w3, #0x8                   	// #8
  a0:	mov	x2, xzr
  a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a8:	ldr	w22, [x19, #24]
  ac:	b	60 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x60>
  b0:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b8:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x25, [x0]
  20:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  24:	sub	x8, x25, x20
  28:	cmp	x8, x9
  2c:	b.eq	11c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
  30:	asr	x9, x8, #4
  34:	cmp	x8, #0x0
  38:	csinc	x10, x9, xzr, ne  // ne = any
  3c:	adds	x9, x10, x9
  40:	lsr	x11, x9, #59
  44:	cset	w10, cs  // cs = hs, nlast
  48:	cmp	x11, #0x0
  4c:	cset	w11, ne  // ne = any
  50:	orr	w10, w10, w11
  54:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  58:	cmp	w10, #0x0
  5c:	csel	x26, x8, x9, ne  // ne = any
  60:	sub	x8, x1, x20
  64:	mov	x23, x3
  68:	mov	x24, x2
  6c:	mov	x19, x0
  70:	mov	x21, x1
  74:	asr	x27, x8, #4
  78:	cbz	x26, 8c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x8c>
  7c:	lsl	x0, x26, #4
  80:	bl	0 <_Znwm>
  84:	mov	x22, x0
  88:	b	90 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x90>
  8c:	mov	x22, xzr
  90:	ldr	x8, [x24]
  94:	ldr	w9, [x23]
  98:	add	x10, x22, x27, lsl #4
  9c:	cmp	x20, x21
  a0:	stp	x8, x9, [x10]
  a4:	mov	x8, x22
  a8:	b.eq	c8 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc8>  // b.none
  ac:	mov	x8, x22
  b0:	mov	x9, x20
  b4:	ldr	q0, [x9], #16
  b8:	cmp	x21, x9
  bc:	str	q0, [x8]
  c0:	add	x8, x8, #0x10
  c4:	b.ne	b4 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb4>  // b.any
  c8:	cmp	x25, x21
  cc:	add	x23, x8, #0x10
  d0:	b.eq	e8 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe8>  // b.none
  d4:	ldr	q0, [x21], #16
  d8:	cmp	x25, x21
  dc:	str	q0, [x23]
  e0:	add	x23, x23, #0x10
  e4:	b.ne	d4 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd4>  // b.any
  e8:	cbz	x20, f4 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf4>
  ec:	mov	x0, x20
  f0:	bl	0 <_ZdlPv>
  f4:	add	x8, x22, x26, lsl #4
  f8:	stp	x22, x23, [x19]
  fc:	str	x8, [x19, #16]
 100:	ldp	x20, x19, [sp, #80]
 104:	ldp	x22, x21, [sp, #64]
 108:	ldp	x24, x23, [sp, #48]
 10c:	ldp	x26, x25, [sp, #32]
 110:	ldr	x27, [sp, #16]
 114:	ldp	x29, x30, [sp], #96
 118:	ret
 11c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE17_M_realloc_insertIJRPhRjEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #24]
  14:	mov	x21, x2
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	mov	x20, x8
  24:	cbz	w9, 60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0x60>
  28:	ldr	w10, [x22]
  2c:	cmn	w10, #0x2
  30:	b.cs	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0x114>  // b.hs, b.nlast
  34:	ldr	x8, [x19, #8]
  38:	mov	w11, #0x25                  	// #37
  3c:	mul	w12, w10, w11
  40:	sub	w11, w9, #0x1
  44:	and	w12, w12, w11
  48:	add	x0, x8, x12, lsl #5
  4c:	ldr	w14, [x0]
  50:	cmp	w10, w14
  54:	b.ne	c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0xc8>  // b.any
  58:	mov	w10, wzr
  5c:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0xa0>
  60:	mov	x3, xzr
  64:	mov	x0, x19
  68:	mov	x1, x22
  6c:	mov	x2, x22
  70:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_>
  74:	ldr	w8, [x22]
  78:	mov	w10, #0x1                   	// #1
  7c:	str	w8, [x0]
  80:	ldr	q0, [x21]
  84:	stur	q0, [x0, #8]
  88:	ldr	x8, [x21, #16]
  8c:	str	x8, [x0, #24]
  90:	stp	xzr, xzr, [x21]
  94:	str	xzr, [x21, #16]
  98:	ldr	x8, [x19, #8]
  9c:	ldr	w9, [x19, #24]
  a0:	ldr	x11, [x19]
  a4:	mov	w9, w9
  a8:	add	x8, x8, x9, lsl #5
  ac:	stp	x0, x8, [x20, #16]
  b0:	stp	x19, x11, [x20]
  b4:	strb	w10, [x20, #32]
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	mov	x13, xzr
  cc:	mov	w16, #0x1                   	// #1
  d0:	mov	w15, #0xfffffffe            	// #-2
  d4:	cmn	w14, #0x1
  d8:	b.eq	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0x108>  // b.none
  dc:	cmp	x13, #0x0
  e0:	add	w12, w12, w16
  e4:	ccmp	w14, w15, #0x0, eq  // eq = none
  e8:	and	w12, w12, w11
  ec:	csel	x13, x13, x0, ne  // ne = any
  f0:	add	x0, x8, x12, lsl #5
  f4:	ldr	w14, [x0]
  f8:	add	w16, w16, #0x1
  fc:	cmp	w10, w14
 100:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0x58>  // b.none
 104:	b	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0xd4>
 108:	cmp	x13, #0x0
 10c:	csel	x3, x0, x13, eq  // eq = none
 110:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_+0x64>
 114:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_>
 118:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_>
 11c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIjS6_S8_SB_Lb0EEEbEOjDpOT_>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x252                 	// #594
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x110>  // b.plast
  54:	cbz	x3, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x19c>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	w8, [x3]
  68:	cmn	w8, #0x1
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x19c>
  a0:	ldr	w8, [x20]
  a4:	cmn	w8, #0x2
  a8:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x1bc>  // b.hs, b.nlast
  ac:	ldr	x9, [x19, #8]
  b0:	mov	w11, #0x25                  	// #37
  b4:	mul	w11, w8, w11
  b8:	sub	w10, w10, #0x1
  bc:	and	w11, w11, w10
  c0:	add	x3, x9, x11, lsl #5
  c4:	ldr	w13, [x3]
  c8:	cmp	w8, w13
  cc:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x54>  // b.none
  d0:	mov	x12, xzr
  d4:	mov	w15, #0x1                   	// #1
  d8:	mov	w14, #0xfffffffe            	// #-2
  dc:	cmn	w13, #0x1
  e0:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x190>  // b.none
  e4:	cmp	x12, #0x0
  e8:	add	w11, w11, w15
  ec:	ccmp	w13, w14, #0x0, eq  // eq = none
  f0:	and	w11, w11, w10
  f4:	csel	x12, x12, x3, ne  // ne = any
  f8:	add	x3, x9, x11, lsl #5
  fc:	ldr	w13, [x3]
 100:	add	w15, w15, #0x1
 104:	cmp	w8, w13
 108:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x54>  // b.none
 10c:	b	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0xdc>
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
 118:	ldr	w10, [x19, #24]
 11c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x19c>
 120:	ldr	w8, [x20]
 124:	cmn	w8, #0x2
 128:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x1bc>  // b.hs, b.nlast
 12c:	ldr	x9, [x19, #8]
 130:	mov	w11, #0x25                  	// #37
 134:	mul	w11, w8, w11
 138:	sub	w10, w10, #0x1
 13c:	and	w11, w11, w10
 140:	add	x3, x9, x11, lsl #5
 144:	ldr	w13, [x3]
 148:	cmp	w8, w13
 14c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x54>  // b.none
 150:	mov	x12, xzr
 154:	mov	w15, #0x1                   	// #1
 158:	mov	w14, #0xfffffffe            	// #-2
 15c:	cmn	w13, #0x1
 160:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x190>  // b.none
 164:	cmp	x12, #0x0
 168:	add	w11, w11, w15
 16c:	ccmp	w13, w14, #0x0, eq  // eq = none
 170:	and	w11, w11, w10
 174:	csel	x12, x12, x3, ne  // ne = any
 178:	add	x3, x9, x11, lsl #5
 17c:	ldr	w13, [x3]
 180:	add	w15, w15, #0x1
 184:	cmp	w8, w13
 188:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x54>  // b.none
 18c:	b	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x15c>
 190:	cmp	x12, #0x0
 194:	csel	x3, x3, x12, eq  // eq = none
 198:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_+0x54>
 19c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
 1a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
 1a4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0x22f                 	// #559
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
 1c0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
 1c4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E20InsertIntoBucketImplIjEEPSB_RKjRKT_SF_>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x252                 	// #594
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #5
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #5
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #5
  a0:	subs	x9, x8, #0x20
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #5
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0xffffffffffffffe
  b4:	add	x12, x0, #0x20
  b8:	add	x9, x0, x11, lsl #5
  bc:	mov	w13, #0xffffffff            	// #-1
  c0:	mov	x14, x11
  c4:	stur	w13, [x12, #-32]
  c8:	str	w13, [x12], #64
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	w10, #0xffffffff            	// #-1
  ec:	str	w10, [x9], #32
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS5_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x170>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #5
  28:	subs	x10, x10, #0x20
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x68>  // b.none
  30:	lsr	x10, x10, #5
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0xffffffffffffffe
  3c:	add	x13, x9, #0x20
  40:	add	x10, x9, x12, lsl #5
  44:	mov	w14, #0xffffffff            	// #-1
  48:	mov	x15, x12
  4c:	stur	w14, [x13, #-32]
  50:	str	w14, [x13], #64
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #5
  70:	mov	w9, #0xffffffff            	// #-1
  74:	str	w9, [x10], #32
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x148>  // b.none
  88:	mov	w8, #0x25                  	// #37
  8c:	mov	w9, #0xfffffffe            	// #-2
  90:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xd0>
  94:	cmp	x15, #0x0
  98:	csel	x11, x14, x15, eq  // eq = none
  9c:	str	w10, [x11]
  a0:	ldur	q0, [x1, #8]
  a4:	stur	q0, [x11, #8]
  a8:	ldr	x10, [x1, #24]
  ac:	str	x10, [x11, #24]
  b0:	stp	xzr, xzr, [x1, #8]
  b4:	str	xzr, [x1, #24]
  b8:	ldr	w10, [x0, #16]
  bc:	add	w10, w10, #0x1
  c0:	str	w10, [x0, #16]
  c4:	add	x1, x1, #0x20
  c8:	cmp	x1, x2
  cc:	b.eq	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x148>  // b.none
  d0:	ldr	w10, [x1]
  d4:	cmn	w10, #0x3
  d8:	b.hi	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xc4>  // b.pmore
  dc:	ldr	w12, [x0, #24]
  e0:	cbz	w12, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x140>
  e4:	ldr	x11, [x0, #8]
  e8:	mul	w13, w10, w8
  ec:	sub	w12, w12, #0x1
  f0:	and	w13, w12, w13
  f4:	add	x14, x11, x13, lsl #5
  f8:	ldr	w16, [x14]
  fc:	cmp	w10, w16
 100:	b.eq	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x150>  // b.none
 104:	mov	x15, xzr
 108:	mov	w17, #0x1                   	// #1
 10c:	cmn	w16, #0x1
 110:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x94>  // b.none
 114:	cmp	x15, #0x0
 118:	add	w13, w13, w17
 11c:	ccmp	w16, w9, #0x0, eq  // eq = none
 120:	and	w13, w13, w12
 124:	csel	x15, x15, x14, ne  // ne = any
 128:	add	x14, x11, x13, lsl #5
 12c:	ldr	w16, [x14]
 130:	add	w17, w17, #0x1
 134:	cmp	w10, w16
 138:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x10c>  // b.any
 13c:	b	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x150>
 140:	mov	x11, xzr
 144:	b	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x9c>
 148:	ldp	x29, x30, [sp], #16
 14c:	ret
 150:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 154:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 158:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 15c:	add	x0, x0, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0x17a                 	// #378
 16c:	bl	0 <__assert_fail>
 170:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 174:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 178:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt6vectorINS_15MutableArrayRefIhEESaIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEEEjS6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x15c                 	// #348
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 48 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x48>
  14:	ldr	x20, [x0, #144]
  18:	ldr	x8, [x8]
  1c:	adrp	x21, 0 <__pthread_key_create>
  20:	mov	x19, x0
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	ldr	x21, [x21]
  30:	cbz	x20, ac <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xac>
  34:	add	x8, x20, #0x8
  38:	cbz	x21, 58 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x58>
  3c:	ldaxr	w9, [x8]
  40:	sub	w10, w9, #0x1
  44:	stlxr	w11, w10, [x8]
  48:	cbnz	w11, 3c <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x3c>
  4c:	cmp	w9, #0x1
  50:	b.eq	6c <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x6c>  // b.none
  54:	b	ac <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xac>
  58:	ldr	w9, [x8]
  5c:	sub	w10, w9, #0x1
  60:	str	w10, [x8]
  64:	cmp	w9, #0x1
  68:	b.ne	ac <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xac>  // b.any
  6c:	mov	x22, x20
  70:	ldr	x8, [x22], #12
  74:	mov	x0, x20
  78:	ldr	x8, [x8, #16]
  7c:	blr	x8
  80:	cbz	x21, 1b8 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x1b8>
  84:	ldaxr	w8, [x22]
  88:	sub	w9, w8, #0x1
  8c:	stlxr	w10, w9, [x22]
  90:	cbnz	w10, 84 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x84>
  94:	cmp	w8, #0x1
  98:	b.ne	ac <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xac>  // b.any
  9c:	ldr	x8, [x20]
  a0:	mov	x0, x20
  a4:	ldr	x8, [x8, #24]
  a8:	blr	x8
  ac:	adrp	x9, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev>
  b0:	ldr	w8, [x19, #128]
  b4:	ldr	x9, [x9]
  b8:	add	x9, x9, #0x10
  bc:	str	x9, [x19, #8]
  c0:	cbz	w8, fc <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xfc>
  c4:	ldr	x9, [x19, #112]
  c8:	lsl	x20, x8, #5
  cc:	add	x22, x9, #0x8
  d0:	b	e0 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xe0>
  d4:	subs	x20, x20, #0x20
  d8:	add	x22, x22, #0x20
  dc:	b.eq	fc <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xfc>  // b.none
  e0:	ldur	w8, [x22, #-8]
  e4:	cmn	w8, #0x3
  e8:	b.hi	d4 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xd4>  // b.pmore
  ec:	ldr	x0, [x22]
  f0:	cbz	x0, d4 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xd4>
  f4:	bl	0 <_ZdlPv>
  f8:	b	d4 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xd4>
  fc:	ldr	x0, [x19, #112]
 100:	bl	0 <_ZdlPv>
 104:	ldr	x8, [x19, #104]
 108:	ldr	x20, [x19, #64]
 10c:	add	x8, x8, #0x1
 110:	str	x8, [x19, #104]
 114:	cbz	x20, 190 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x190>
 118:	add	x8, x20, #0x8
 11c:	cbz	x21, 13c <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x13c>
 120:	ldaxr	w9, [x8]
 124:	sub	w10, w9, #0x1
 128:	stlxr	w11, w10, [x8]
 12c:	cbnz	w11, 120 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x120>
 130:	cmp	w9, #0x1
 134:	b.eq	150 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x150>  // b.none
 138:	b	190 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x190>
 13c:	ldr	w9, [x8]
 140:	sub	w10, w9, #0x1
 144:	str	w10, [x8]
 148:	cmp	w9, #0x1
 14c:	b.ne	190 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x190>  // b.any
 150:	mov	x22, x20
 154:	ldr	x8, [x22], #12
 158:	mov	x0, x20
 15c:	ldr	x8, [x8, #16]
 160:	blr	x8
 164:	cbz	x21, 1d0 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x1d0>
 168:	ldaxr	w8, [x22]
 16c:	sub	w9, w8, #0x1
 170:	stlxr	w10, w9, [x22]
 174:	cbnz	w10, 168 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x168>
 178:	cmp	w8, #0x1
 17c:	b.ne	190 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x190>  // b.any
 180:	ldr	x8, [x20]
 184:	mov	x0, x20
 188:	ldr	x8, [x8, #24]
 18c:	blr	x8
 190:	ldr	x0, [x19, #32]
 194:	cbz	x0, 1a8 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x1a8>
 198:	ldp	x20, x19, [sp, #32]
 19c:	ldp	x22, x21, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #48
 1a4:	b	0 <_ZdlPv>
 1a8:	ldp	x20, x19, [sp, #32]
 1ac:	ldp	x22, x21, [sp, #16]
 1b0:	ldp	x29, x30, [sp], #48
 1b4:	ret
 1b8:	ldr	w8, [x22]
 1bc:	sub	w9, w8, #0x1
 1c0:	str	w9, [x22]
 1c4:	cmp	w8, #0x1
 1c8:	b.eq	9c <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x9c>  // b.none
 1cc:	b	ac <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0xac>
 1d0:	ldr	w8, [x22]
 1d4:	sub	w9, w8, #0x1
 1d8:	str	w9, [x22]
 1dc:	cmp	w8, #0x1
 1e0:	b.eq	180 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x180>  // b.none
 1e4:	b	190 <_ZN4llvm3msf25WritableMappedBlockStreamD2Ev+0x190>

MSFBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	adrp	x10, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
      10:	ldr	d0, [x10]
      14:	mov	w8, w2
      18:	and	w9, w3, #0x1
      1c:	mov	w11, #0x3                   	// #3
      20:	add	x20, x0, #0x20
      24:	mov	x19, x0
      28:	str	x4, [x0]
      2c:	strb	w9, [x0, #8]
      30:	stp	w1, w11, [x0, #20]
      34:	stur	d0, [x0, #12]
      38:	mov	w2, #0x1                   	// #1
      3c:	mov	x0, x20
      40:	mov	w1, w8
      44:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
      48:	ldr	w9, [x19, #48]
      4c:	movi	v0.2d, #0x0
      50:	stur	q0, [x19, #88]
      54:	stur	q0, [x19, #72]
      58:	stur	q0, [x19, #56]
      5c:	cbz	w9, e8 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>
      60:	ldr	x8, [x19, #40]
      64:	cbz	x8, 108 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x108>
      68:	ldr	x8, [x20]
      6c:	cmp	w9, #0x1
      70:	ldr	x10, [x8]
      74:	and	x11, x10, #0xfffffffffffffffe
      78:	str	x11, [x8]
      7c:	b.ls	e8 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>  // b.plast
      80:	ldr	x11, [x19, #40]
      84:	cbz	x11, 108 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x108>
      88:	and	x11, x10, #0xfffffffffffffffc
      8c:	cmp	w9, #0x2
      90:	str	x11, [x8]
      94:	b.ls	e8 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>  // b.plast
      98:	ldr	x11, [x19, #40]
      9c:	cbz	x11, 108 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x108>
      a0:	and	x10, x10, #0xfffffffffffffff8
      a4:	str	x10, [x8]
      a8:	ldr	w10, [x19, #24]
      ac:	cmp	w9, w10
      b0:	b.ls	e8 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>  // b.plast
      b4:	ldr	x11, [x19, #40]
      b8:	lsr	x9, x10, #6
      bc:	cmp	x11, x9
      c0:	b.ls	108 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x108>  // b.plast
      c4:	lsl	x9, x9, #3
      c8:	ldr	x11, [x8, x9]
      cc:	mov	w12, #0x1                   	// #1
      d0:	lsl	x10, x12, x10
      d4:	bic	x10, x11, x10
      d8:	str	x10, [x8, x9]
      dc:	ldp	x20, x19, [sp, #16]
      e0:	ldp	x29, x30, [sp], #32
      e4:	ret
      e8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
      ec:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
      f0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
      f4:	add	x0, x0, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x3, x3, #0x0
     100:	mov	w2, #0x1eb                 	// #491
     104:	bl	0 <__assert_fail>
     108:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     10c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     110:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     114:	add	x0, x0, #0x0
     118:	add	x1, x1, #0x0
     11c:	add	x3, x3, #0x0
     120:	mov	w2, #0x1ab                 	// #427
     124:	bl	0 <__assert_fail>

0000000000000128 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb>:
     128:	sub	sp, sp, #0x90
     12c:	stp	x29, x30, [sp, #112]
     130:	stp	x20, x19, [sp, #128]
     134:	add	x29, sp, #0x70
     138:	sub	w9, w1, #0x200
     13c:	ror	w9, w9, #9
     140:	cmp	w9, #0x7
     144:	mov	x19, x8
     148:	b.hi	1ec <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xc4>  // b.pmore
     14c:	mov	w8, #0x1                   	// #1
     150:	lsl	w8, w8, w9
     154:	mov	w9, #0x8b                  	// #139
     158:	tst	w8, w9
     15c:	b.eq	1ec <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xc4>  // b.none
     160:	cmp	w2, #0x4
     164:	mov	w8, #0x4                   	// #4
     168:	mov	x4, x0
     16c:	csel	w2, w2, w8, hi  // hi = pmore
     170:	and	w3, w3, #0x1
     174:	add	x0, sp, #0x8
     178:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     17c:	ldr	w8, [sp, #56]
     180:	ldur	q0, [sp, #20]
     184:	ldur	q1, [sp, #8]
     188:	ldr	x9, [sp, #80]
     18c:	str	w8, [x19, #48]
     190:	ldrb	w8, [x19, #104]
     194:	stur	q0, [x19, #12]
     198:	ldur	q0, [sp, #40]
     19c:	str	q1, [x19]
     1a0:	and	w8, w8, #0xfc
     1a4:	orr	w8, w8, #0x2
     1a8:	ldur	q1, [sp, #64]
     1ac:	str	q0, [x19, #32]
     1b0:	ldur	q0, [sp, #88]
     1b4:	strb	w8, [x19, #104]
     1b8:	ldr	x8, [sp, #104]
     1bc:	str	x9, [x19, #72]
     1c0:	stp	xzr, xzr, [sp, #40]
     1c4:	str	wzr, [sp, #56]
     1c8:	stp	xzr, xzr, [sp, #64]
     1cc:	str	xzr, [sp, #80]
     1d0:	stur	q1, [x19, #56]
     1d4:	str	q0, [x19, #80]
     1d8:	str	x8, [x19, #96]
     1dc:	ldp	x20, x19, [sp, #128]
     1e0:	ldp	x29, x30, [sp, #112]
     1e4:	add	sp, sp, #0x90
     1e8:	ret
     1ec:	mov	w0, #0x40                  	// #64
     1f0:	bl	0 <_Znwm>
     1f4:	mov	x20, x0
     1f8:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     1fc:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     200:	mov	x2, x0
     204:	add	x8, x8, #0x0
     208:	mov	w9, #0x103                 	// #259
     20c:	add	x3, sp, #0x8
     210:	mov	w1, #0x5                   	// #5
     214:	mov	x0, x20
     218:	stp	x8, xzr, [sp, #8]
     21c:	strh	w9, [sp, #24]
     220:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     224:	adrp	x9, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     228:	ldrb	w8, [x19, #104]
     22c:	ldr	x9, [x9]
     230:	add	x9, x9, #0x10
     234:	str	x9, [x20]
     238:	orr	w9, w8, #0x3
     23c:	ands	x8, x20, #0xfffffffffffffffe
     240:	strb	w9, [x19, #104]
     244:	b.eq	250 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x128>  // b.none
     248:	str	x8, [x19]
     24c:	b	1dc <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0xb4>
     250:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     254:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     258:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     25c:	add	x0, x0, #0x0
     260:	add	x1, x1, #0x0
     264:	add	x3, x3, #0x0
     268:	mov	w2, #0x1ce                 	// #462
     26c:	bl	0 <__assert_fail>

0000000000000270 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj>:
     270:	sub	sp, sp, #0x50
     274:	stp	x29, x30, [sp, #32]
     278:	str	x21, [sp, #48]
     27c:	stp	x20, x19, [sp, #64]
     280:	add	x29, sp, #0x20
     284:	ldr	w9, [x0, #24]
     288:	mov	x19, x8
     28c:	cmp	w9, w1
     290:	b.ne	2a0 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x30>  // b.any
     294:	mov	w8, #0x1                   	// #1
     298:	str	x8, [x19]
     29c:	b	3e0 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x170>
     2a0:	ldr	w11, [x0, #48]
     2a4:	mov	x20, x0
     2a8:	mov	w21, w1
     2ac:	cmp	w11, w1
     2b0:	b.hi	2d0 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x60>  // b.pmore
     2b4:	ldrb	w8, [x20, #8]
     2b8:	cbz	w8, 390 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x120>
     2bc:	add	x0, x20, #0x20
     2c0:	add	w1, w21, #0x1
     2c4:	mov	w2, #0x1                   	// #1
     2c8:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2cc:	ldr	w11, [x20, #48]
     2d0:	cmp	w11, w21
     2d4:	b.ls	414 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x1a4>  // b.plast
     2d8:	ldr	x12, [x20, #40]
     2dc:	lsr	w8, w21, #6
     2e0:	cmp	x12, x8
     2e4:	b.ls	3f4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x184>  // b.plast
     2e8:	ldr	x9, [x20, #32]
     2ec:	mov	w10, #0x1                   	// #1
     2f0:	lsl	x10, x10, x21
     2f4:	ldr	x13, [x9, x8, lsl #3]
     2f8:	tst	x13, x10
     2fc:	b.eq	35c <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xec>  // b.none
     300:	ldr	w13, [x20, #24]
     304:	cmp	w11, w13
     308:	b.ls	434 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x1c4>  // b.plast
     30c:	lsr	x11, x13, #6
     310:	cmp	x12, x11
     314:	b.ls	3f4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x184>  // b.plast
     318:	lsl	x11, x11, #3
     31c:	ldr	x12, [x9, x11]
     320:	mov	w14, #0x1                   	// #1
     324:	lsl	x13, x14, x13
     328:	orr	x12, x12, x13
     32c:	str	x12, [x9, x11]
     330:	ldr	x11, [x20, #40]
     334:	cmp	x11, x8
     338:	b.ls	3f4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x184>  // b.plast
     33c:	lsl	x8, x8, #3
     340:	ldr	x11, [x9, x8]
     344:	mov	w12, #0x1                   	// #1
     348:	bic	x10, x11, x10
     34c:	str	x10, [x9, x8]
     350:	str	w21, [x20, #24]
     354:	str	x12, [x19]
     358:	b	3e0 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x170>
     35c:	mov	w0, #0x40                  	// #64
     360:	bl	0 <_Znwm>
     364:	mov	x20, x0
     368:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     36c:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     370:	add	x8, x8, #0x0
     374:	mov	w9, #0x103                 	// #259
     378:	mov	x2, x0
     37c:	stp	x8, xzr, [sp, #8]
     380:	strh	w9, [sp, #24]
     384:	add	x3, sp, #0x8
     388:	mov	w1, #0x6                   	// #6
     38c:	b	3c0 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x150>
     390:	mov	w0, #0x40                  	// #64
     394:	bl	0 <_Znwm>
     398:	mov	x20, x0
     39c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     3a0:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     3a4:	mov	x2, x0
     3a8:	add	x8, x8, #0x0
     3ac:	mov	w9, #0x103                 	// #259
     3b0:	add	x3, sp, #0x8
     3b4:	mov	w1, #0x2                   	// #2
     3b8:	stp	x8, xzr, [sp, #8]
     3bc:	strh	w9, [sp, #24]
     3c0:	mov	x0, x20
     3c4:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     3c8:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     3cc:	ldr	x8, [x8]
     3d0:	orr	x9, x20, #0x1
     3d4:	str	x9, [x19]
     3d8:	add	x8, x8, #0x10
     3dc:	str	x8, [x20]
     3e0:	ldp	x20, x19, [sp, #64]
     3e4:	ldr	x21, [sp, #48]
     3e8:	ldp	x29, x30, [sp, #32]
     3ec:	add	sp, sp, #0x50
     3f0:	ret
     3f4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     3f8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     3fc:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     400:	add	x0, x0, #0x0
     404:	add	x1, x1, #0x0
     408:	add	x3, x3, #0x0
     40c:	mov	w2, #0x1ab                 	// #427
     410:	bl	0 <__assert_fail>
     414:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     418:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     41c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     420:	add	x0, x0, #0x0
     424:	add	x1, x1, #0x0
     428:	add	x3, x3, #0x0
     42c:	mov	w2, #0x1f0                 	// #496
     430:	bl	0 <__assert_fail>
     434:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     438:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     43c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     440:	add	x0, x0, #0x0
     444:	add	x1, x1, #0x0
     448:	add	x3, x3, #0x0
     44c:	mov	w2, #0x1eb                 	// #491
     450:	bl	0 <__assert_fail>

0000000000000454 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>:
     454:	stp	x29, x30, [sp, #-16]!
     458:	mov	x29, sp
     45c:	ldr	w8, [x0, #48]
     460:	cmp	w8, w1
     464:	b.ls	490 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj+0x3c>  // b.plast
     468:	ldr	x9, [x0, #40]
     46c:	lsr	w8, w1, #6
     470:	cmp	x9, x8
     474:	b.ls	4b0 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj+0x5c>  // b.plast
     478:	ldr	x9, [x0, #32]
     47c:	ldr	x8, [x9, x8, lsl #3]
     480:	lsr	x8, x8, x1
     484:	and	w0, w8, #0x1
     488:	ldp	x29, x30, [sp], #16
     48c:	ret
     490:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     494:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     498:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     49c:	add	x0, x0, #0x0
     4a0:	add	x1, x1, #0x0
     4a4:	add	x3, x3, #0x0
     4a8:	mov	w2, #0x1f0                 	// #496
     4ac:	bl	0 <__assert_fail>
     4b0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     4b4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     4b8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     4bc:	add	x0, x0, #0x0
     4c0:	add	x1, x1, #0x0
     4c4:	add	x3, x3, #0x0
     4c8:	mov	w2, #0x1ab                 	// #427
     4cc:	bl	0 <__assert_fail>

00000000000004d0 <_ZN4llvm3msf10MSFBuilder14setFreePageMapEj>:
     4d0:	str	w1, [x0, #12]
     4d4:	ret

00000000000004d8 <_ZN4llvm3msf10MSFBuilder11setUnknown1Ej>:
     4d8:	str	w1, [x0, #16]
     4dc:	ret

00000000000004e0 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE>:
     4e0:	sub	sp, sp, #0x60
     4e4:	stp	x29, x30, [sp, #32]
     4e8:	stp	x24, x23, [sp, #48]
     4ec:	stp	x22, x21, [sp, #64]
     4f0:	stp	x20, x19, [sp, #80]
     4f4:	add	x29, sp, #0x20
     4f8:	mov	x20, x0
     4fc:	ldr	x0, [x0, #56]
     500:	ldr	x9, [x20, #64]
     504:	mov	x22, x2
     508:	mov	x21, x1
     50c:	mov	x19, x8
     510:	cmp	x0, x9
     514:	b.eq	564 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x84>  // b.none
     518:	ldr	w8, [x20, #48]
     51c:	mov	w10, #0x1                   	// #1
     520:	mov	x11, x0
     524:	ldr	w12, [x11]
     528:	cmp	w8, w12
     52c:	b.ls	698 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1b8>  // b.plast
     530:	ldr	x14, [x20, #40]
     534:	lsr	x13, x12, #6
     538:	cmp	x14, x13
     53c:	b.ls	678 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x198>  // b.plast
     540:	ldr	x14, [x20, #32]
     544:	lsl	x13, x13, #3
     548:	lsl	x12, x10, x12
     54c:	add	x11, x11, #0x4
     550:	ldr	x15, [x14, x13]
     554:	cmp	x9, x11
     558:	orr	x12, x15, x12
     55c:	str	x12, [x14, x13]
     560:	b.ne	524 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x44>  // b.any
     564:	cbz	x22, 5f0 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x110>
     568:	ldr	w8, [x20, #48]
     56c:	lsl	x23, x22, #2
     570:	mov	w9, #0x1                   	// #1
     574:	mov	x10, x23
     578:	mov	x11, x21
     57c:	ldr	w13, [x11]
     580:	cmp	w8, w13
     584:	b.ls	6b8 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1d8>  // b.plast
     588:	ldr	x14, [x20, #40]
     58c:	lsr	x12, x13, #6
     590:	cmp	x14, x12
     594:	b.ls	678 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x198>  // b.plast
     598:	ldr	x14, [x20, #32]
     59c:	lsl	x13, x9, x13
     5a0:	ldr	x15, [x14, x12, lsl #3]
     5a4:	tst	x15, x13
     5a8:	b.eq	610 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x130>  // b.none
     5ac:	bic	x13, x15, x13
     5b0:	subs	x10, x10, #0x4
     5b4:	add	x11, x11, #0x4
     5b8:	str	x13, [x14, x12, lsl #3]
     5bc:	b.ne	57c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x9c>  // b.any
     5c0:	lsr	x8, x22, #61
     5c4:	cbnz	x8, 6d8 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1f8>
     5c8:	cbz	x22, 5f0 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x110>
     5cc:	mov	x0, x23
     5d0:	bl	0 <_Znwm>
     5d4:	mov	x1, x21
     5d8:	mov	x2, x23
     5dc:	mov	x24, x0
     5e0:	add	x22, x0, x22, lsl #2
     5e4:	bl	0 <memcpy>
     5e8:	ldr	x0, [x20, #56]
     5ec:	b	5f4 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x114>
     5f0:	mov	x24, xzr
     5f4:	stp	x24, x22, [x20, #56]
     5f8:	str	x22, [x20, #72]
     5fc:	cbz	x0, 604 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x124>
     600:	bl	0 <_ZdlPv>
     604:	mov	w8, #0x1                   	// #1
     608:	str	x8, [x19]
     60c:	b	660 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x180>
     610:	mov	w0, #0x40                  	// #64
     614:	bl	0 <_Znwm>
     618:	mov	x20, x0
     61c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     620:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     624:	mov	x2, x0
     628:	add	x8, x8, #0x0
     62c:	mov	w9, #0x103                 	// #259
     630:	add	x3, sp, #0x8
     634:	mov	w1, #0x1                   	// #1
     638:	mov	x0, x20
     63c:	stp	x8, xzr, [sp, #8]
     640:	strh	w9, [sp, #24]
     644:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     648:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     64c:	ldr	x8, [x8]
     650:	orr	x9, x20, #0x1
     654:	str	x9, [x19]
     658:	add	x8, x8, #0x10
     65c:	str	x8, [x20]
     660:	ldp	x20, x19, [sp, #80]
     664:	ldp	x22, x21, [sp, #64]
     668:	ldp	x24, x23, [sp, #48]
     66c:	ldp	x29, x30, [sp, #32]
     670:	add	sp, sp, #0x60
     674:	ret
     678:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     67c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     680:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     684:	add	x0, x0, #0x0
     688:	add	x1, x1, #0x0
     68c:	add	x3, x3, #0x0
     690:	mov	w2, #0x1ab                 	// #427
     694:	bl	0 <__assert_fail>
     698:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     69c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6a0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6a4:	add	x0, x0, #0x0
     6a8:	add	x1, x1, #0x0
     6ac:	add	x3, x3, #0x0
     6b0:	mov	w2, #0x1eb                 	// #491
     6b4:	bl	0 <__assert_fail>
     6b8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6bc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6c0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6c4:	add	x0, x0, #0x0
     6c8:	add	x1, x1, #0x0
     6cc:	add	x3, x3, #0x0
     6d0:	mov	w2, #0x1f0                 	// #496
     6d4:	bl	0 <__assert_fail>
     6d8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6dc:	add	x0, x0, #0x0
     6e0:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000006e4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>:
     6e4:	sub	sp, sp, #0x70
     6e8:	stp	x29, x30, [sp, #32]
     6ec:	stp	x26, x25, [sp, #48]
     6f0:	stp	x24, x23, [sp, #64]
     6f4:	stp	x22, x21, [sp, #80]
     6f8:	stp	x20, x19, [sp, #96]
     6fc:	add	x29, sp, #0x20
     700:	mov	x19, x8
     704:	cbz	w1, 8d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1ec>
     708:	ldr	w8, [x0, #48]
     70c:	mov	x20, x3
     710:	mov	x21, x2
     714:	mov	w22, w1
     718:	add	w12, w8, #0x3f
     71c:	mov	x23, x0
     720:	cmp	w12, #0x40
     724:	add	x24, x0, #0x20
     728:	b.cc	780 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x9c>  // b.lo, b.ul, b.last
     72c:	ldr	x11, [x23, #40]
     730:	lsr	w12, w12, #6
     734:	cmp	w12, #0x1
     738:	csinc	x13, x12, xzr, hi  // hi = pmore
     73c:	mov	x10, xzr
     740:	mov	w9, wzr
     744:	sub	x13, x13, #0x1
     748:	cmp	x11, x13
     74c:	b.ls	948 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x264>  // b.plast
     750:	ldr	x14, [x24]
     754:	ldr	d0, [x14, x10, lsl #3]
     758:	add	x10, x10, #0x1
     75c:	cmp	x10, x12
     760:	cnt	v0.8b, v0.8b
     764:	uaddlv	h0, v0.8b
     768:	fmov	w14, s0
     76c:	add	w9, w9, w14
     770:	b.cc	748 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x64>  // b.lo, b.ul, b.last
     774:	cmp	w9, w22
     778:	b.cc	78c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0xa8>  // b.lo, b.ul, b.last
     77c:	b	804 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x120>
     780:	mov	w9, wzr
     784:	cmp	w9, w22
     788:	b.cs	804 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x120>  // b.hs, b.nlast
     78c:	ldrb	w10, [x23, #8]
     790:	cbz	w10, 8f4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x210>
     794:	ldr	w10, [x23, #20]
     798:	cbz	w10, 9a8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2c4>
     79c:	sub	w9, w22, w9
     7a0:	add	x11, x8, x10
     7a4:	add	w25, w9, w8
     7a8:	sub	x8, x11, #0x1
     7ac:	udiv	x8, x8, x10
     7b0:	orr	w9, wzr, #0x1
     7b4:	mov	w2, #0x1                   	// #1
     7b8:	mov	x0, x24
     7bc:	mov	w1, w25
     7c0:	madd	w26, w8, w10, w9
     7c4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7c8:	cmp	w26, w25
     7cc:	b.cs	804 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x120>  // b.hs, b.nlast
     7d0:	add	w25, w25, #0x2
     7d4:	mov	w2, #0x1                   	// #1
     7d8:	mov	x0, x24
     7dc:	mov	w1, w25
     7e0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7e4:	add	w2, w26, #0x2
     7e8:	mov	x0, x24
     7ec:	mov	w1, w26
     7f0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7f4:	ldr	w8, [x23, #20]
     7f8:	add	w26, w8, w26
     7fc:	cmp	w26, w25
     800:	b.cc	7d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0xec>  // b.lo, b.ul, b.last
     804:	ldr	w10, [x23, #48]
     808:	cbz	w10, 860 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x17c>
     80c:	neg	w12, w10
     810:	sub	w11, w10, #0x1
     814:	ldr	x10, [x23, #40]
     818:	lsr	w11, w11, #6
     81c:	mov	x13, #0xffffffffffffffff    	// #-1
     820:	mov	w8, wzr
     824:	mov	x9, xzr
     828:	lsr	x12, x13, x12
     82c:	add	x13, x11, #0x1
     830:	cmp	x10, x9
     834:	b.eq	948 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x264>  // b.none
     838:	ldr	x14, [x24]
     83c:	cmp	x11, x9
     840:	csinv	x15, x12, xzr, eq  // eq = none
     844:	ldr	x14, [x14, x9, lsl #3]
     848:	ands	x14, x14, x15
     84c:	b.ne	868 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x184>  // b.any
     850:	add	x9, x9, #0x1
     854:	cmp	x13, x9
     858:	add	w8, w8, #0x40
     85c:	b.ne	830 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x14c>  // b.any
     860:	mov	w0, #0xffffffff            	// #-1
     864:	b	874 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x190>
     868:	rbit	x9, x14
     86c:	clz	x9, x9
     870:	orr	w0, w8, w9
     874:	mov	w25, #0x1                   	// #1
     878:	cmn	w0, #0x1
     87c:	b.eq	968 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x284>  // b.none
     880:	cbz	x20, 988 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2a4>
     884:	str	w0, [x21]
     888:	ldr	x9, [x23, #40]
     88c:	lsr	w8, w0, #6
     890:	cmp	x9, x8
     894:	b.ls	948 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x264>  // b.plast
     898:	ldr	x9, [x23, #32]
     89c:	lsl	x8, x8, #3
     8a0:	lsl	x11, x25, x0
     8a4:	add	w1, w0, #0x1
     8a8:	ldr	x10, [x9, x8]
     8ac:	mov	x0, x24
     8b0:	bic	x10, x10, x11
     8b4:	str	x10, [x9, x8]
     8b8:	ldr	w2, [x23, #48]
     8bc:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     8c0:	sub	w22, w22, #0x1
     8c4:	sub	x20, x20, #0x1
     8c8:	add	x21, x21, #0x4
     8cc:	cbnz	w22, 878 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x194>
     8d0:	mov	w8, #0x1                   	// #1
     8d4:	str	x8, [x19]
     8d8:	ldp	x20, x19, [sp, #96]
     8dc:	ldp	x22, x21, [sp, #80]
     8e0:	ldp	x24, x23, [sp, #64]
     8e4:	ldp	x26, x25, [sp, #48]
     8e8:	ldp	x29, x30, [sp, #32]
     8ec:	add	sp, sp, #0x70
     8f0:	ret
     8f4:	mov	w0, #0x40                  	// #64
     8f8:	bl	0 <_Znwm>
     8fc:	mov	x20, x0
     900:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     904:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     908:	mov	x2, x0
     90c:	add	x8, x8, #0x0
     910:	mov	w9, #0x103                 	// #259
     914:	add	x3, sp, #0x8
     918:	mov	w1, #0x2                   	// #2
     91c:	mov	x0, x20
     920:	stp	x8, xzr, [sp, #8]
     924:	strh	w9, [sp, #24]
     928:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     92c:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     930:	ldr	x8, [x8]
     934:	orr	x9, x20, #0x1
     938:	str	x9, [x19]
     93c:	add	x8, x8, #0x10
     940:	str	x8, [x20]
     944:	b	8d8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1f4>
     948:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     94c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     950:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     954:	add	x0, x0, #0x0
     958:	add	x1, x1, #0x0
     95c:	add	x3, x3, #0x0
     960:	mov	w2, #0x1ab                 	// #427
     964:	bl	0 <__assert_fail>
     968:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     96c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     970:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     974:	add	x0, x0, #0x0
     978:	add	x1, x1, #0x0
     97c:	add	x3, x3, #0x0
     980:	mov	w2, #0x86                  	// #134
     984:	bl	0 <__assert_fail>
     988:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     98c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     990:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     994:	add	x0, x0, #0x0
     998:	add	x1, x1, #0x0
     99c:	add	x3, x3, #0x0
     9a0:	mov	w2, #0x1ab                 	// #427
     9a4:	bl	0 <__assert_fail>
     9a8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9ac:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9b0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9b4:	add	x0, x0, #0x0
     9b8:	add	x1, x1, #0x0
     9bc:	add	x3, x3, #0x0
     9c0:	mov	w2, #0x2ce                 	// #718
     9c4:	bl	0 <__assert_fail>

00000000000009c8 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv>:
     9c8:	stp	x29, x30, [sp, #-16]!
     9cc:	mov	x29, sp
     9d0:	ldr	w8, [x0, #48]
     9d4:	add	w9, w8, #0x3f
     9d8:	cmp	w9, #0x40
     9dc:	b.cc	a14 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0x4c>  // b.lo, b.ul, b.last
     9e0:	ldr	x10, [x0, #40]
     9e4:	lsr	w9, w9, #6
     9e8:	cmp	w9, #0x1
     9ec:	csinc	x12, x9, xzr, hi  // hi = pmore
     9f0:	sub	x11, x12, #0x1
     9f4:	cmp	x10, x11
     9f8:	b.ls	ab4 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0xec>  // b.plast
     9fc:	ldr	x10, [x0, #32]
     a00:	cmp	x12, #0x4
     a04:	b.cs	a1c <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0x54>  // b.hs, b.nlast
     a08:	mov	x11, xzr
     a0c:	mov	w12, wzr
     a10:	b	a88 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0xc0>
     a14:	mov	w12, wzr
     a18:	b	aa8 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0xe0>
     a1c:	and	x11, x12, #0x3fffffc
     a20:	movi	v0.2d, #0x0
     a24:	add	x13, x10, #0x10
     a28:	mov	x14, x11
     a2c:	movi	v1.2d, #0x0
     a30:	ldp	q2, q3, [x13, #-16]
     a34:	subs	x14, x14, #0x4
     a38:	add	x13, x13, #0x20
     a3c:	cnt	v2.16b, v2.16b
     a40:	cnt	v3.16b, v3.16b
     a44:	uaddlp	v2.8h, v2.16b
     a48:	uaddlp	v3.8h, v3.16b
     a4c:	uaddlp	v2.4s, v2.8h
     a50:	uaddlp	v3.4s, v3.8h
     a54:	uaddlp	v2.2d, v2.4s
     a58:	uaddlp	v3.2d, v3.4s
     a5c:	xtn	v2.2s, v2.2d
     a60:	xtn	v3.2s, v3.2d
     a64:	add	v0.2s, v0.2s, v2.2s
     a68:	add	v1.2s, v1.2s, v3.2s
     a6c:	b.ne	a30 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0x68>  // b.any
     a70:	add	v0.2s, v1.2s, v0.2s
     a74:	dup	v1.2s, v0.s[1]
     a78:	add	v0.2s, v0.2s, v1.2s
     a7c:	cmp	x12, x11
     a80:	fmov	w12, s0
     a84:	b.eq	aa8 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0xe0>  // b.none
     a88:	ldr	d0, [x10, x11, lsl #3]
     a8c:	add	x11, x11, #0x1
     a90:	cmp	x11, x9
     a94:	cnt	v0.8b, v0.8b
     a98:	uaddlv	h0, v0.8b
     a9c:	fmov	w13, s0
     aa0:	add	w12, w12, w13
     aa4:	b.cc	a88 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv+0xc0>  // b.lo, b.ul, b.last
     aa8:	sub	w0, w8, w12
     aac:	ldp	x29, x30, [sp], #16
     ab0:	ret
     ab4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     ab8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     abc:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     ac0:	add	x0, x0, #0x0
     ac4:	add	x1, x1, #0x0
     ac8:	add	x3, x3, #0x0
     acc:	mov	w2, #0x1ab                 	// #427
     ad0:	bl	0 <__assert_fail>

0000000000000ad4 <_ZNK4llvm3msf10MSFBuilder18getTotalBlockCountEv>:
     ad4:	ldr	w0, [x0, #48]
     ad8:	ret

0000000000000adc <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv>:
     adc:	stp	x29, x30, [sp, #-16]!
     ae0:	mov	x29, sp
     ae4:	ldr	w8, [x0, #48]
     ae8:	add	w11, w8, #0x3f
     aec:	cmp	w11, #0x40
     af0:	b.cc	b40 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x64>  // b.lo, b.ul, b.last
     af4:	ldr	x10, [x0, #40]
     af8:	lsr	w11, w11, #6
     afc:	cmp	w11, #0x1
     b00:	csinc	x12, x11, xzr, hi  // hi = pmore
     b04:	mov	x9, xzr
     b08:	mov	w8, wzr
     b0c:	sub	x12, x12, #0x1
     b10:	cmp	x10, x12
     b14:	b.ls	b50 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x74>  // b.plast
     b18:	ldr	x13, [x0, #32]
     b1c:	ldr	d0, [x13, x9, lsl #3]
     b20:	add	x9, x9, #0x1
     b24:	cmp	x9, x11
     b28:	cnt	v0.8b, v0.8b
     b2c:	uaddlv	h0, v0.8b
     b30:	fmov	w13, s0
     b34:	add	w8, w8, w13
     b38:	b.cc	b10 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x34>  // b.lo, b.ul, b.last
     b3c:	b	b44 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x68>
     b40:	mov	w8, wzr
     b44:	mov	w0, w8
     b48:	ldp	x29, x30, [sp], #16
     b4c:	ret
     b50:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b54:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b58:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b5c:	add	x0, x0, #0x0
     b60:	add	x1, x1, #0x0
     b64:	add	x3, x3, #0x0
     b68:	mov	w2, #0x1ab                 	// #427
     b6c:	bl	0 <__assert_fail>

0000000000000b70 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE>:
     b70:	sub	sp, sp, #0x80
     b74:	stp	x29, x30, [sp, #32]
     b78:	stp	x28, x27, [sp, #48]
     b7c:	stp	x26, x25, [sp, #64]
     b80:	stp	x24, x23, [sp, #80]
     b84:	stp	x22, x21, [sp, #96]
     b88:	stp	x20, x19, [sp, #112]
     b8c:	add	x29, sp, #0x20
     b90:	ldr	w9, [x0, #20]
     b94:	cbz	w9, e24 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2b4>
     b98:	mov	x19, x8
     b9c:	add	x8, x9, w1, uxtw
     ba0:	sub	x8, x8, #0x1
     ba4:	udiv	x8, x8, x9
     ba8:	mov	x23, x3
     bac:	mov	w21, w1
     bb0:	cmp	x3, w8, uxtw
     bb4:	b.ne	cb0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x140>  // b.any
     bb8:	mov	x22, x2
     bbc:	mov	x20, x0
     bc0:	lsl	x24, x23, #2
     bc4:	cbz	x23, c74 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x104>
     bc8:	ldr	w8, [x20, #48]
     bcc:	add	x25, x20, #0x20
     bd0:	mov	x26, x24
     bd4:	mov	x27, x22
     bd8:	ldr	w28, [x27]
     bdc:	cmp	w28, w8
     be0:	b.cc	bf8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x88>  // b.lo, b.ul, b.last
     be4:	add	w1, w28, #0x1
     be8:	mov	w2, #0x1                   	// #1
     bec:	mov	x0, x25
     bf0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     bf4:	ldr	w8, [x20, #48]
     bf8:	cmp	w8, w28
     bfc:	b.ls	e04 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x294>  // b.plast
     c00:	ldr	x10, [x20, #40]
     c04:	lsr	x9, x28, #6
     c08:	cmp	x10, x9
     c0c:	b.ls	de4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x274>  // b.plast
     c10:	ldr	x10, [x25]
     c14:	ldr	x9, [x10, x9, lsl #3]
     c18:	lsr	x9, x9, x28
     c1c:	tbz	w9, #0, ce4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x174>
     c20:	subs	x26, x26, #0x4
     c24:	add	x27, x27, #0x4
     c28:	b.ne	bd8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x68>  // b.any
     c2c:	cbz	x23, c74 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x104>
     c30:	mov	w8, #0x1                   	// #1
     c34:	mov	x9, x24
     c38:	mov	x10, x22
     c3c:	ldr	w11, [x10]
     c40:	ldr	x13, [x20, #40]
     c44:	lsr	x12, x11, #6
     c48:	cmp	x13, x12
     c4c:	b.ls	de4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x274>  // b.plast
     c50:	ldr	x13, [x20, #32]
     c54:	lsl	x12, x12, #3
     c58:	lsl	x11, x8, x11
     c5c:	subs	x9, x9, #0x4
     c60:	ldr	x14, [x13, x12]
     c64:	add	x10, x10, #0x4
     c68:	bic	x11, x14, x11
     c6c:	str	x11, [x13, x12]
     c70:	b.ne	c3c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xcc>  // b.any
     c74:	lsr	x8, x23, #61
     c78:	str	w21, [sp]
     c7c:	stp	xzr, xzr, [sp, #16]
     c80:	str	xzr, [sp, #8]
     c84:	cbnz	x8, e64 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2f4>
     c88:	cbz	x23, d48 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1d8>
     c8c:	mov	x0, x24
     c90:	bl	0 <_Znwm>
     c94:	mov	x1, x22
     c98:	mov	x2, x24
     c9c:	mov	x25, x0
     ca0:	str	x0, [sp, #8]
     ca4:	add	x23, x0, x23, lsl #2
     ca8:	bl	0 <memcpy>
     cac:	b	d50 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1e0>
     cb0:	mov	w0, #0x40                  	// #64
     cb4:	bl	0 <_Znwm>
     cb8:	mov	x20, x0
     cbc:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     cc0:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cc4:	mov	x2, x0
     cc8:	add	x8, x8, #0x0
     ccc:	mov	w9, #0x103                 	// #259
     cd0:	mov	x3, sp
     cd4:	mov	w1, #0x5                   	// #5
     cd8:	stp	x8, xzr, [sp]
     cdc:	strh	w9, [sp, #16]
     ce0:	b	d14 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1a4>
     ce4:	mov	w0, #0x40                  	// #64
     ce8:	bl	0 <_Znwm>
     cec:	mov	x20, x0
     cf0:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
     cf4:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cf8:	add	x8, x8, #0x0
     cfc:	mov	w9, #0x103                 	// #259
     d00:	mov	x2, x0
     d04:	stp	x8, xzr, [sp]
     d08:	strh	w9, [sp, #16]
     d0c:	mov	x3, sp
     d10:	mov	w1, #0x1                   	// #1
     d14:	mov	x0, x20
     d18:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
     d1c:	adrp	x9, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d20:	ldrb	w8, [x19, #8]
     d24:	ldr	x9, [x9]
     d28:	add	x9, x9, #0x10
     d2c:	str	x9, [x20]
     d30:	orr	w9, w8, #0x3
     d34:	ands	x8, x20, #0xfffffffffffffffe
     d38:	strb	w9, [x19, #8]
     d3c:	b.eq	e44 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2d4>  // b.none
     d40:	str	x8, [x19]
     d44:	b	dc4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x254>
     d48:	mov	x25, xzr
     d4c:	str	xzr, [sp, #8]
     d50:	stp	x23, x23, [sp, #16]
     d54:	ldp	x1, x8, [x20, #88]
     d58:	cmp	x1, x8
     d5c:	b.eq	d88 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x218>  // b.none
     d60:	mov	x8, sp
     d64:	add	x9, x1, #0x20
     d68:	add	x8, x8, #0x8
     d6c:	str	w21, [x1]
     d70:	stp	x25, x23, [x1, #8]
     d74:	str	x23, [x1, #24]
     d78:	stp	xzr, xzr, [x8]
     d7c:	str	xzr, [x8, #16]
     d80:	str	x9, [x20, #88]
     d84:	b	da0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x230>
     d88:	add	x0, x20, #0x50
     d8c:	mov	x2, sp
     d90:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d94:	ldr	x0, [sp, #8]
     d98:	cbz	x0, da0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x230>
     d9c:	bl	0 <_ZdlPv>
     da0:	ldp	x9, x8, [x20, #80]
     da4:	ldrb	w10, [x19, #8]
     da8:	sub	x8, x8, x9
     dac:	and	w9, w10, #0xfc
     db0:	lsr	x8, x8, #5
     db4:	orr	w9, w9, #0x2
     db8:	sub	w8, w8, #0x1
     dbc:	strb	w9, [x19, #8]
     dc0:	str	w8, [x19]
     dc4:	ldp	x20, x19, [sp, #112]
     dc8:	ldp	x22, x21, [sp, #96]
     dcc:	ldp	x24, x23, [sp, #80]
     dd0:	ldp	x26, x25, [sp, #64]
     dd4:	ldp	x28, x27, [sp, #48]
     dd8:	ldp	x29, x30, [sp, #32]
     ddc:	add	sp, sp, #0x80
     de0:	ret
     de4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     de8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     dec:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     df0:	add	x0, x0, #0x0
     df4:	add	x1, x1, #0x0
     df8:	add	x3, x3, #0x0
     dfc:	mov	w2, #0x1ab                 	// #427
     e00:	bl	0 <__assert_fail>
     e04:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e08:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e0c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e10:	add	x0, x0, #0x0
     e14:	add	x1, x1, #0x0
     e18:	add	x3, x3, #0x0
     e1c:	mov	w2, #0x1f0                 	// #496
     e20:	bl	0 <__assert_fail>
     e24:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e28:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e2c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e30:	add	x0, x0, #0x0
     e34:	add	x1, x1, #0x0
     e38:	add	x3, x3, #0x0
     e3c:	mov	w2, #0x2ce                 	// #718
     e40:	bl	0 <__assert_fail>
     e44:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e48:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e4c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e50:	add	x0, x0, #0x0
     e54:	add	x1, x1, #0x0
     e58:	add	x3, x3, #0x0
     e5c:	mov	w2, #0x1ce                 	// #462
     e60:	bl	0 <__assert_fail>
     e64:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e68:	add	x0, x0, #0x0
     e6c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000e70 <_ZN4llvm3msf10MSFBuilder9addStreamEj>:
     e70:	sub	sp, sp, #0x70
     e74:	stp	x29, x30, [sp, #32]
     e78:	str	x25, [sp, #48]
     e7c:	stp	x24, x23, [sp, #64]
     e80:	stp	x22, x21, [sp, #80]
     e84:	stp	x20, x19, [sp, #96]
     e88:	add	x29, sp, #0x20
     e8c:	ldr	w9, [x0, #20]
     e90:	cbz	w9, 1028 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x1b8>
     e94:	mov	x19, x8
     e98:	add	x8, x9, w1, uxtw
     e9c:	sub	x8, x8, #0x1
     ea0:	udiv	x25, x8, x9
     ea4:	mov	w22, w1
     ea8:	mov	x21, x0
     eac:	ands	x8, x25, #0xffffffff
     eb0:	b.eq	ed8 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x68>  // b.none
     eb4:	lsl	x23, x8, #2
     eb8:	mov	x0, x23
     ebc:	bl	0 <_Znwm>
     ec0:	mov	w1, wzr
     ec4:	mov	x2, x23
     ec8:	mov	x20, x0
     ecc:	bl	0 <memset>
     ed0:	add	x8, x20, x23
     ed4:	b	edc <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x6c>
     ed8:	mov	x20, xzr
     edc:	sub	x23, x8, x20
     ee0:	asr	x24, x23, #2
     ee4:	mov	x8, sp
     ee8:	mov	x0, x21
     eec:	mov	w1, w25
     ef0:	mov	x2, x20
     ef4:	mov	x3, x24
     ef8:	bl	6e4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
     efc:	ldr	x8, [sp]
     f00:	tst	x8, #0xfffffffffffffffe
     f04:	and	x10, x8, #0xfffffffffffffffe
     f08:	cset	w9, ne  // ne = any
     f0c:	orr	x9, x10, x9
     f10:	str	x9, [sp]
     f14:	cbz	x10, f5c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xec>
     f18:	ldrb	w9, [x19, #8]
     f1c:	ands	x8, x8, #0xfffffffffffffffe
     f20:	str	xzr, [sp]
     f24:	orr	w9, w9, #0x3
     f28:	strb	w9, [x19, #8]
     f2c:	b.eq	1048 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x1d8>  // b.none
     f30:	str	x8, [x19]
     f34:	cbz	x20, f40 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xd0>
     f38:	mov	x0, x20
     f3c:	bl	0 <_ZdlPv>
     f40:	ldp	x20, x19, [sp, #96]
     f44:	ldp	x22, x21, [sp, #80]
     f48:	ldp	x24, x23, [sp, #64]
     f4c:	ldr	x25, [sp, #48]
     f50:	ldp	x29, x30, [sp, #32]
     f54:	add	sp, sp, #0x70
     f58:	ret
     f5c:	cbnz	x9, 1068 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x1f8>
     f60:	str	w22, [sp]
     f64:	stp	xzr, xzr, [sp, #16]
     f68:	str	xzr, [sp, #8]
     f6c:	cbz	x23, f88 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x118>
     f70:	lsr	x8, x24, #61
     f74:	cbnz	x8, 1070 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x200>
     f78:	mov	x0, x23
     f7c:	bl	0 <_Znwm>
     f80:	mov	x25, x0
     f84:	b	f8c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x11c>
     f88:	mov	x25, xzr
     f8c:	add	x24, x25, x24, lsl #2
     f90:	stp	x25, x25, [sp, #8]
     f94:	str	x24, [sp, #24]
     f98:	cbz	x23, fac <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x13c>
     f9c:	mov	x0, x25
     fa0:	mov	x1, x20
     fa4:	mov	x2, x23
     fa8:	bl	0 <memmove>
     fac:	str	x24, [sp, #16]
     fb0:	ldp	x1, x8, [x21, #88]
     fb4:	cmp	x1, x8
     fb8:	b.eq	fe4 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x174>  // b.none
     fbc:	mov	x8, sp
     fc0:	add	x9, x1, #0x20
     fc4:	add	x8, x8, #0x8
     fc8:	str	w22, [x1]
     fcc:	stp	x25, x24, [x1, #8]
     fd0:	str	x24, [x1, #24]
     fd4:	stp	xzr, xzr, [x8]
     fd8:	str	xzr, [x8, #16]
     fdc:	str	x9, [x21, #88]
     fe0:	b	ffc <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x18c>
     fe4:	add	x0, x21, #0x50
     fe8:	mov	x2, sp
     fec:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     ff0:	ldr	x0, [sp, #8]
     ff4:	cbz	x0, ffc <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x18c>
     ff8:	bl	0 <_ZdlPv>
     ffc:	ldp	x9, x8, [x21, #80]
    1000:	ldrb	w10, [x19, #8]
    1004:	sub	x8, x8, x9
    1008:	and	w9, w10, #0xfc
    100c:	lsr	x8, x8, #5
    1010:	orr	w9, w9, #0x2
    1014:	sub	w8, w8, #0x1
    1018:	strb	w9, [x19, #8]
    101c:	str	w8, [x19]
    1020:	cbnz	x20, f38 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xc8>
    1024:	b	f40 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xd0>
    1028:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    102c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1030:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1034:	add	x0, x0, #0x0
    1038:	add	x1, x1, #0x0
    103c:	add	x3, x3, #0x0
    1040:	mov	w2, #0x2ce                 	// #718
    1044:	bl	0 <__assert_fail>
    1048:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    104c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1050:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1054:	add	x0, x0, #0x0
    1058:	add	x1, x1, #0x0
    105c:	add	x3, x3, #0x0
    1060:	mov	w2, #0x1ce                 	// #462
    1064:	bl	0 <__assert_fail>
    1068:	mov	x0, sp
    106c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1070:	bl	0 <_ZSt17__throw_bad_allocv>

0000000000001074 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj>:
    1074:	stp	x29, x30, [sp, #-96]!
    1078:	str	x27, [sp, #16]
    107c:	stp	x26, x25, [sp, #32]
    1080:	stp	x24, x23, [sp, #48]
    1084:	stp	x22, x21, [sp, #64]
    1088:	stp	x20, x19, [sp, #80]
    108c:	mov	x29, sp
    1090:	ldr	x9, [x0, #80]
    1094:	mov	w26, w1
    1098:	lsl	x25, x26, #5
    109c:	mov	x20, x8
    10a0:	ldr	w10, [x9, x25]
    10a4:	cmp	w10, w2
    10a8:	b.eq	1274 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x200>  // b.none
    10ac:	ldr	w8, [x0, #20]
    10b0:	mov	x19, x0
    10b4:	cbz	w8, 12d8 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x264>
    10b8:	sub	x11, x8, #0x1
    10bc:	add	x12, x11, w2, uxtw
    10c0:	add	x11, x11, x10
    10c4:	udiv	x10, x12, x8
    10c8:	udiv	x11, x11, x8
    10cc:	mov	w21, w2
    10d0:	subs	w24, w10, w11
    10d4:	b.ls	1100 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x8c>  // b.plast
    10d8:	b.eq	11c8 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x154>  // b.none
    10dc:	lsl	x23, x24, #2
    10e0:	mov	x0, x23
    10e4:	bl	0 <_Znwm>
    10e8:	mov	w1, wzr
    10ec:	mov	x2, x23
    10f0:	mov	x22, x0
    10f4:	bl	0 <memset>
    10f8:	add	x23, x22, x23
    10fc:	b	11d0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x15c>
    1100:	b.cs	126c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1f8>  // b.hs, b.nlast
    1104:	add	x8, x9, x26, lsl #5
    1108:	ldr	x22, [x8, #8]!
    110c:	and	x15, x10, #0xffffffff
    1110:	ldr	x12, [x8, #8]
    1114:	sub	x12, x12, x22
    1118:	asr	x12, x12, #2
    111c:	cmp	x12, x15
    1120:	b.cc	1300 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x28c>  // b.lo, b.ul, b.last
    1124:	cmp	x15, x12
    1128:	b.eq	117c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x108>  // b.none
    112c:	ldr	w13, [x19, #48]
    1130:	add	x14, x22, x12, lsl #2
    1134:	add	x15, x22, x15, lsl #2
    1138:	mov	w16, #0x1                   	// #1
    113c:	ldr	w17, [x15]
    1140:	cmp	w13, w17
    1144:	b.ls	1298 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x224>  // b.plast
    1148:	ldr	x0, [x19, #40]
    114c:	lsr	x18, x17, #6
    1150:	cmp	x0, x18
    1154:	b.ls	12b8 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x244>  // b.plast
    1158:	ldr	x0, [x19, #32]
    115c:	lsl	x18, x18, #3
    1160:	lsl	x17, x16, x17
    1164:	add	x15, x15, #0x4
    1168:	ldr	x1, [x0, x18]
    116c:	cmp	x15, x14
    1170:	orr	x17, x1, x17
    1174:	str	x17, [x0, x18]
    1178:	b.ne	113c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xc8>  // b.any
    117c:	sub	x10, x11, x10
    1180:	and	x10, x10, #0xffffffff
    1184:	subs	x27, x12, x10
    1188:	b.cc	1320 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2ac>  // b.lo, b.ul, b.last
    118c:	lsr	x10, x27, #61
    1190:	cbnz	x10, 1340 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2cc>
    1194:	cbz	x27, 1250 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1dc>
    1198:	lsl	x24, x27, #2
    119c:	mov	x0, x24
    11a0:	bl	0 <_Znwm>
    11a4:	mov	x1, x22
    11a8:	mov	x2, x24
    11ac:	mov	x23, x0
    11b0:	add	x27, x0, x27, lsl #2
    11b4:	bl	0 <memcpy>
    11b8:	ldr	x9, [x19, #80]
    11bc:	add	x8, x9, x26, lsl #5
    11c0:	ldr	x22, [x8, #8]!
    11c4:	b	1254 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1e0>
    11c8:	mov	x23, xzr
    11cc:	mov	x22, xzr
    11d0:	sub	x8, x23, x22
    11d4:	asr	x3, x8, #2
    11d8:	mov	x8, x20
    11dc:	mov	x0, x19
    11e0:	mov	w1, w24
    11e4:	mov	x2, x22
    11e8:	bl	6e4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    11ec:	ldr	x9, [x20]
    11f0:	tst	x9, #0xfffffffffffffffe
    11f4:	and	x8, x9, #0xfffffffffffffffe
    11f8:	cset	w9, ne  // ne = any
    11fc:	orr	x9, x8, x9
    1200:	str	x9, [x20]
    1204:	cbnz	x8, 120c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x198>
    1208:	cbnz	x9, 12f8 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x284>
    120c:	cbz	x8, 1228 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1b4>
    1210:	mov	w23, #0x1                   	// #1
    1214:	cbz	x22, 1220 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1ac>
    1218:	mov	x0, x22
    121c:	bl	0 <_ZdlPv>
    1220:	cbnz	w23, 127c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x208>
    1224:	b	126c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1f8>
    1228:	ldr	x8, [x19, #80]
    122c:	mov	x2, x22
    1230:	mov	x3, x23
    1234:	add	x8, x8, x26, lsl #5
    1238:	ldr	x1, [x8, #16]
    123c:	add	x0, x8, #0x8
    1240:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1244:	mov	w23, wzr
    1248:	cbnz	x22, 1218 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1a4>
    124c:	b	1220 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1ac>
    1250:	mov	x23, xzr
    1254:	add	x9, x9, x26, lsl #5
    1258:	str	x23, [x8]
    125c:	stp	x27, x27, [x9, #16]
    1260:	cbz	x22, 126c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1f8>
    1264:	mov	x0, x22
    1268:	bl	0 <_ZdlPv>
    126c:	ldr	x8, [x19, #80]
    1270:	str	w21, [x8, x25]
    1274:	mov	w8, #0x1                   	// #1
    1278:	str	x8, [x20]
    127c:	ldp	x20, x19, [sp, #80]
    1280:	ldp	x22, x21, [sp, #64]
    1284:	ldp	x24, x23, [sp, #48]
    1288:	ldp	x26, x25, [sp, #32]
    128c:	ldr	x27, [sp, #16]
    1290:	ldp	x29, x30, [sp], #96
    1294:	ret
    1298:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    129c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12a0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12a4:	add	x0, x0, #0x0
    12a8:	add	x1, x1, #0x0
    12ac:	add	x3, x3, #0x0
    12b0:	mov	w2, #0x1eb                 	// #491
    12b4:	bl	0 <__assert_fail>
    12b8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12bc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12c0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12c4:	add	x0, x0, #0x0
    12c8:	add	x1, x1, #0x0
    12cc:	add	x3, x3, #0x0
    12d0:	mov	w2, #0x1ab                 	// #427
    12d4:	bl	0 <__assert_fail>
    12d8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12dc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12e0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    12e4:	add	x0, x0, #0x0
    12e8:	add	x1, x1, #0x0
    12ec:	add	x3, x3, #0x0
    12f0:	mov	w2, #0x2ce                 	// #718
    12f4:	bl	0 <__assert_fail>
    12f8:	mov	x0, x20
    12fc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1300:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1304:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1308:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    130c:	add	x0, x0, #0x0
    1310:	add	x1, x1, #0x0
    1314:	add	x3, x3, #0x0
    1318:	mov	w2, #0xc6                  	// #198
    131c:	bl	0 <__assert_fail>
    1320:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1324:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1328:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    132c:	add	x0, x0, #0x0
    1330:	add	x1, x1, #0x0
    1334:	add	x3, x3, #0x0
    1338:	mov	w2, #0xcc                  	// #204
    133c:	bl	0 <__assert_fail>
    1340:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1344:	add	x0, x0, #0x0
    1348:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000134c <_ZNK4llvm3msf10MSFBuilder13getStreamSizeEj>:
    134c:	ldr	x8, [x0, #80]
    1350:	mov	w9, w1
    1354:	lsl	x9, x9, #5
    1358:	ldr	w0, [x8, x9]
    135c:	ret

0000000000001360 <_ZNK4llvm3msf10MSFBuilder13getNumStreamsEv>:
    1360:	ldp	x9, x8, [x0, #80]
    1364:	sub	x8, x8, x9
    1368:	lsr	x0, x8, #5
    136c:	ret

0000000000001370 <_ZNK4llvm3msf10MSFBuilder15getStreamBlocksEj>:
    1370:	ldr	x8, [x0, #80]
    1374:	mov	w9, w1
    1378:	add	x8, x8, x9, lsl #5
    137c:	ldp	x0, x8, [x8, #8]
    1380:	sub	x8, x8, x0
    1384:	asr	x1, x8, #2
    1388:	ret

000000000000138c <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv>:
    138c:	stp	x29, x30, [sp, #-16]!
    1390:	mov	x29, sp
    1394:	ldp	x10, x9, [x0, #80]
    1398:	mov	x8, x0
    139c:	subs	x11, x9, x10
    13a0:	lsr	x11, x11, #3
    13a4:	add	w11, w11, #0x4
    13a8:	and	w0, w11, #0xfffffffc
    13ac:	b.eq	13ec <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x60>  // b.none
    13b0:	ldr	w8, [x8, #20]
    13b4:	cbz	w8, 1414 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x88>
    13b8:	sub	x11, x8, #0x1
    13bc:	ldr	w12, [x10]
    13c0:	ldp	x14, x13, [x10, #8]
    13c4:	add	x12, x11, x12
    13c8:	udiv	x12, x12, x8
    13cc:	and	x15, x12, #0xffffffff
    13d0:	sub	x13, x13, x14
    13d4:	cmp	x15, x13, asr #2
    13d8:	b.ne	13f4 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x68>  // b.any
    13dc:	add	x10, x10, #0x20
    13e0:	cmp	x10, x9
    13e4:	add	w0, w0, w12, lsl #2
    13e8:	b.ne	13bc <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x30>  // b.any
    13ec:	ldp	x29, x30, [sp], #16
    13f0:	ret
    13f4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    13f8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    13fc:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1400:	add	x0, x0, #0x0
    1404:	add	x1, x1, #0x0
    1408:	add	x3, x3, #0x0
    140c:	mov	w2, #0xf4                  	// #244
    1410:	bl	0 <__assert_fail>
    1414:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1418:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    141c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1420:	add	x0, x0, #0x0
    1424:	add	x1, x1, #0x0
    1428:	add	x3, x3, #0x0
    142c:	mov	w2, #0x2ce                 	// #718
    1430:	bl	0 <__assert_fail>

0000000000001434 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>:
    1434:	sub	sp, sp, #0xb0
    1438:	stp	x29, x30, [sp, #96]
    143c:	stp	x26, x25, [sp, #112]
    1440:	stp	x24, x23, [sp, #128]
    1444:	stp	x22, x21, [sp, #144]
    1448:	stp	x20, x19, [sp, #160]
    144c:	add	x29, sp, #0x60
    1450:	mov	x20, x0
    1454:	ldr	x0, [x0]
    1458:	mov	w1, #0x38                  	// #56
    145c:	mov	x2, xzr
    1460:	mov	x19, x8
    1464:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1468:	adrp	x8, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    146c:	movi	v0.2d, #0x0
    1470:	add	x8, x8, #0x0
    1474:	stur	q0, [sp, #40]
    1478:	stur	q0, [sp, #56]
    147c:	stur	q0, [sp, #72]
    1480:	ldp	q0, q1, [x8]
    1484:	stp	xzr, xzr, [sp, #16]
    1488:	str	wzr, [sp, #32]
    148c:	str	xzr, [sp, #88]
    1490:	str	x0, [sp, #8]
    1494:	stp	q0, q1, [x0]
    1498:	ldr	w8, [x20, #24]
    149c:	mov	x21, x0
    14a0:	str	w8, [x0, #52]
    14a4:	ldr	w8, [x20, #20]
    14a8:	str	w8, [x0, #32]
    14ac:	ldp	x11, x9, [x20, #80]
    14b0:	subs	x10, x9, x11
    14b4:	lsr	x10, x10, #3
    14b8:	add	w10, w10, #0x4
    14bc:	and	w10, w10, #0xfffffffc
    14c0:	b.eq	14fc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc8>  // b.none
    14c4:	cbz	w8, 19fc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5c8>
    14c8:	sub	x12, x8, #0x1
    14cc:	ldr	w13, [x11]
    14d0:	ldp	x15, x14, [x11, #8]
    14d4:	add	x13, x12, x13
    14d8:	udiv	x13, x13, x8
    14dc:	and	x16, x13, #0xffffffff
    14e0:	sub	x14, x14, x15
    14e4:	cmp	x16, x14, asr #2
    14e8:	b.ne	199c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x568>  // b.any
    14ec:	add	x11, x11, #0x20
    14f0:	cmp	x11, x9
    14f4:	add	w10, w10, w13, lsl #2
    14f8:	b.ne	14cc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x98>  // b.any
    14fc:	ldr	w9, [x20, #12]
    1500:	str	w9, [x21, #36]
    1504:	ldr	w9, [x20, #16]
    1508:	stp	w10, w9, [x21, #44]
    150c:	cbz	w8, 19fc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5c8>
    1510:	mov	x23, x20
    1514:	ldr	x9, [x23, #56]!
    1518:	add	x11, x8, w10, uxtw
    151c:	sub	x11, x11, #0x1
    1520:	udiv	x11, x11, x8
    1524:	ldr	x10, [x23, #8]
    1528:	and	x26, x11, #0xffffffff
    152c:	sub	x8, x10, x9
    1530:	asr	x8, x8, #2
    1534:	cmp	x26, x8
    1538:	b.ls	156c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x138>  // b.plast
    153c:	sub	x25, x11, x8
    1540:	ands	x8, x25, #0xffffffff
    1544:	b.eq	15e4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1b0>  // b.none
    1548:	lsl	x24, x8, #2
    154c:	mov	x0, x24
    1550:	bl	0 <_Znwm>
    1554:	mov	w1, wzr
    1558:	mov	x2, x24
    155c:	mov	x22, x0
    1560:	bl	0 <memset>
    1564:	add	x24, x22, x24
    1568:	b	15ec <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1b8>
    156c:	b.cs	1664 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x230>  // b.hs, b.nlast
    1570:	sub	w11, w8, w11
    1574:	subs	x11, x8, x11
    1578:	b.cc	1a3c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x608>  // b.lo, b.ul, b.last
    157c:	b.eq	15d0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x19c>  // b.none
    1580:	ldr	w8, [x20, #48]
    1584:	add	x11, x9, x11, lsl #2
    1588:	mov	w12, #0x1                   	// #1
    158c:	mov	x13, x9
    1590:	ldr	w14, [x13]
    1594:	cmp	w8, w14
    1598:	b.ls	19bc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x588>  // b.plast
    159c:	ldr	x16, [x20, #40]
    15a0:	lsr	x15, x14, #6
    15a4:	cmp	x16, x15
    15a8:	b.ls	19dc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5a8>  // b.plast
    15ac:	ldr	x16, [x20, #32]
    15b0:	lsl	x15, x15, #3
    15b4:	lsl	x14, x12, x14
    15b8:	add	x13, x13, #0x4
    15bc:	ldr	x17, [x16, x15]
    15c0:	cmp	x13, x11
    15c4:	orr	x14, x17, x14
    15c8:	str	x14, [x16, x15]
    15cc:	b.ne	1590 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x15c>  // b.any
    15d0:	add	x8, x9, x26, lsl #2
    15d4:	cmp	x8, x10
    15d8:	b.eq	1664 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x230>  // b.none
    15dc:	str	x8, [x20, #64]
    15e0:	b	1664 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x230>
    15e4:	mov	x24, xzr
    15e8:	mov	x22, xzr
    15ec:	sub	x8, x24, x22
    15f0:	asr	x3, x8, #2
    15f4:	mov	x8, sp
    15f8:	mov	x0, x20
    15fc:	mov	w1, w25
    1600:	mov	x2, x22
    1604:	bl	6e4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    1608:	ldr	x8, [sp]
    160c:	tst	x8, #0xfffffffffffffffe
    1610:	and	x10, x8, #0xfffffffffffffffe
    1614:	cset	w9, ne  // ne = any
    1618:	orr	x9, x10, x9
    161c:	str	x9, [sp]
    1620:	cbz	x10, 1934 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x500>
    1624:	ldrb	w9, [x19, #88]
    1628:	ands	x8, x8, #0xfffffffffffffffe
    162c:	str	xzr, [sp]
    1630:	orr	w9, w9, #0x3
    1634:	strb	w9, [x19, #88]
    1638:	b.eq	1a1c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5e8>  // b.none
    163c:	str	x8, [x19]
    1640:	mov	w23, #0x1                   	// #1
    1644:	cbz	x22, 1650 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x21c>
    1648:	mov	x0, x22
    164c:	bl	0 <_ZdlPv>
    1650:	cbz	w23, 1664 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x230>
    1654:	ldr	x0, [sp, #72]
    1658:	cbz	x0, 17e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3ac>
    165c:	bl	0 <_ZdlPv>
    1660:	b	17e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3ac>
    1664:	ldr	w8, [x20, #48]
    1668:	lsl	x22, x26, #2
    166c:	mov	x1, x22
    1670:	mov	x2, xzr
    1674:	str	w8, [x21, #40]
    1678:	ldr	x0, [x20]
    167c:	add	x23, sp, #0x8
    1680:	add	x21, x20, #0x20
    1684:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1688:	cmp	x22, #0x1
    168c:	b.lt	1700 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2cc>  // b.tstop
    1690:	lsr	x8, x22, #2
    1694:	cmp	x8, #0x0
    1698:	ldr	x10, [x20, #56]
    169c:	cset	w9, ne  // ne = any
    16a0:	sub	x9, x8, x9
    16a4:	add	x11, x9, #0x1
    16a8:	cmp	x11, #0x8
    16ac:	b.cc	16e4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2b0>  // b.lo, b.ul, b.last
    16b0:	cmp	x8, #0x0
    16b4:	cset	w9, ne  // ne = any
    16b8:	sub	x12, x8, x9
    16bc:	add	x12, x10, x12, lsl #2
    16c0:	add	x12, x12, #0x4
    16c4:	cmp	x0, x12
    16c8:	b.cs	1958 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x524>  // b.hs, b.nlast
    16cc:	add	x12, x22, #0x4
    16d0:	and	x12, x12, #0x7fffffffc
    16d4:	sub	x9, x12, w9, uxtw #2
    16d8:	add	x9, x0, x9
    16dc:	cmp	x9, x10
    16e0:	b.ls	1958 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x524>  // b.plast
    16e4:	mov	x9, x0
    16e8:	add	x8, x8, #0x1
    16ec:	ldr	w11, [x10], #4
    16f0:	sub	x8, x8, #0x1
    16f4:	cmp	x8, #0x1
    16f8:	str	w11, [x9], #4
    16fc:	b.gt	16ec <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2b8>
    1700:	stp	x0, x26, [sp, #40]
    1704:	ldp	x8, x9, [x20, #80]
    1708:	add	x23, x23, #0x20
    170c:	cmp	x8, x9
    1710:	b.eq	1780 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x34c>  // b.none
    1714:	ldr	x0, [x20]
    1718:	sub	x8, x9, x8
    171c:	asr	x1, x8, #3
    1720:	mov	x2, xzr
    1724:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1728:	ldp	x8, x9, [x20, #80]
    172c:	ldp	x11, x10, [sp, #72]
    1730:	mov	x22, x0
    1734:	sub	x12, x9, x8
    1738:	sub	x13, x10, x11
    173c:	asr	x12, x12, #5
    1740:	asr	x13, x13, #4
    1744:	subs	x1, x12, x13
    1748:	stp	x0, x12, [sp, #56]
    174c:	b.ls	1764 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x330>  // b.plast
    1750:	add	x8, sp, #0x8
    1754:	add	x0, x8, #0x40
    1758:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    175c:	ldp	x8, x9, [x20, #80]
    1760:	b	1778 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x344>
    1764:	b.cs	1778 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x344>  // b.hs, b.nlast
    1768:	add	x11, x11, x12, lsl #4
    176c:	cmp	x11, x10
    1770:	b.eq	1778 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x344>  // b.none
    1774:	str	x11, [sp, #80]
    1778:	cmp	x9, x8
    177c:	b.ne	1804 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3d0>  // b.any
    1780:	add	x8, sp, #0x8
    1784:	add	x0, x8, #0x8
    1788:	mov	x1, x21
    178c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1790:	ldr	x8, [sp, #8]
    1794:	ldur	q0, [sp, #16]
    1798:	ldr	w9, [sp, #32]
    179c:	ldur	q1, [sp, #72]
    17a0:	str	x8, [x19]
    17a4:	ldrb	w8, [x19, #88]
    17a8:	stp	xzr, xzr, [sp, #16]
    17ac:	str	wzr, [sp, #32]
    17b0:	stur	q0, [x19, #8]
    17b4:	str	q1, [x19, #64]
    17b8:	ldp	q1, q0, [x23]
    17bc:	str	w9, [x19, #24]
    17c0:	ldr	x9, [sp, #88]
    17c4:	and	w8, w8, #0xfc
    17c8:	orr	w8, w8, #0x2
    17cc:	stp	xzr, xzr, [sp, #72]
    17d0:	str	x9, [x19, #80]
    17d4:	stp	q1, q0, [x19, #32]
    17d8:	strb	w8, [x19, #88]
    17dc:	str	xzr, [sp, #88]
    17e0:	ldr	x0, [sp, #16]
    17e4:	bl	0 <free>
    17e8:	ldp	x20, x19, [sp, #160]
    17ec:	ldp	x22, x21, [sp, #144]
    17f0:	ldp	x24, x23, [sp, #128]
    17f4:	ldp	x26, x25, [sp, #112]
    17f8:	ldp	x29, x30, [sp, #96]
    17fc:	add	sp, sp, #0xb0
    1800:	ret
    1804:	mov	x24, xzr
    1808:	b	1830 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3fc>
    180c:	asr	x8, x9, #2
    1810:	ldr	x9, [sp, #72]
    1814:	add	x9, x9, x24, lsl #4
    1818:	stp	x0, x8, [x9]
    181c:	ldp	x8, x9, [x20, #80]
    1820:	add	w24, w24, #0x1
    1824:	sub	x9, x9, x8
    1828:	cmp	x24, x9, asr #5
    182c:	b.cs	1780 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x34c>  // b.hs, b.nlast
    1830:	lsl	x25, x24, #5
    1834:	add	x8, x8, x25
    1838:	ldr	w9, [x8]
    183c:	mov	x2, xzr
    1840:	str	w9, [x22, x24, lsl #2]
    1844:	ldp	x8, x9, [x8, #8]
    1848:	ldr	x0, [x20]
    184c:	sub	x1, x9, x8
    1850:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1854:	ldr	x8, [x20, #80]
    1858:	add	x8, x8, x25
    185c:	ldp	x10, x8, [x8, #8]
    1860:	sub	x9, x8, x10
    1864:	cmp	x9, #0x1
    1868:	b.lt	180c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3d8>  // b.tstop
    186c:	lsr	x8, x9, #2
    1870:	cmp	x8, #0x0
    1874:	cset	w11, ne  // ne = any
    1878:	sub	x11, x8, x11
    187c:	add	x11, x11, #0x1
    1880:	cmp	x11, #0x8
    1884:	b.cc	18bc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x488>  // b.lo, b.ul, b.last
    1888:	cmp	x8, #0x0
    188c:	cset	w12, ne  // ne = any
    1890:	sub	x13, x8, x12
    1894:	add	x13, x10, x13, lsl #2
    1898:	add	x13, x13, #0x4
    189c:	cmp	x0, x13
    18a0:	b.cs	18f0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4bc>  // b.hs, b.nlast
    18a4:	and	x9, x9, #0xfffffffffffffffc
    18a8:	sub	x9, x9, w12, uxtw #2
    18ac:	add	x9, x0, x9
    18b0:	add	x9, x9, #0x4
    18b4:	cmp	x9, x10
    18b8:	b.ls	18f0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4bc>  // b.plast
    18bc:	mov	x9, x0
    18c0:	add	x8, x8, #0x1
    18c4:	ldr	w11, [x10], #4
    18c8:	sub	x8, x8, #0x1
    18cc:	cmp	x8, #0x1
    18d0:	str	w11, [x9], #4
    18d4:	b.gt	18c4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x490>
    18d8:	ldr	x8, [x20, #80]
    18dc:	add	x8, x8, x24, lsl #5
    18e0:	ldp	x8, x9, [x8, #8]
    18e4:	sub	x8, x9, x8
    18e8:	asr	x8, x8, #2
    18ec:	b	1810 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3dc>
    18f0:	and	x12, x11, #0xfffffffffffffff8
    18f4:	lsl	x14, x12, #2
    18f8:	add	x13, x10, #0x10
    18fc:	sub	x8, x8, x12
    1900:	add	x9, x0, x14
    1904:	add	x10, x10, x14
    1908:	add	x14, x0, #0x10
    190c:	mov	x15, x12
    1910:	ldp	q0, q1, [x13, #-16]
    1914:	add	x13, x13, #0x20
    1918:	subs	x15, x15, #0x8
    191c:	stp	q0, q1, [x14, #-16]
    1920:	add	x14, x14, #0x20
    1924:	b.ne	1910 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4dc>  // b.any
    1928:	cmp	x11, x12
    192c:	b.eq	18d8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4a4>  // b.none
    1930:	b	18c0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x48c>
    1934:	cbnz	x9, 1a5c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x628>
    1938:	ldr	x1, [x20, #64]
    193c:	mov	x0, x23
    1940:	mov	x2, x22
    1944:	mov	x3, x24
    1948:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    194c:	mov	w23, wzr
    1950:	cbnz	x22, 1648 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x214>
    1954:	b	1650 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x21c>
    1958:	and	x12, x11, #0xfffffffffffffff8
    195c:	lsl	x14, x12, #2
    1960:	add	x13, x10, #0x10
    1964:	sub	x8, x8, x12
    1968:	add	x9, x0, x14
    196c:	add	x10, x10, x14
    1970:	add	x14, x0, #0x10
    1974:	mov	x15, x12
    1978:	ldp	q0, q1, [x13, #-16]
    197c:	add	x13, x13, #0x20
    1980:	subs	x15, x15, #0x8
    1984:	stp	q0, q1, [x14, #-16]
    1988:	add	x14, x14, #0x20
    198c:	b.ne	1978 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x544>  // b.any
    1990:	cmp	x11, x12
    1994:	b.eq	1700 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2cc>  // b.none
    1998:	b	16e8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2b4>
    199c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19a0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19a4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19a8:	add	x0, x0, #0x0
    19ac:	add	x1, x1, #0x0
    19b0:	add	x3, x3, #0x0
    19b4:	mov	w2, #0xf4                  	// #244
    19b8:	bl	0 <__assert_fail>
    19bc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19c0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19c4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19c8:	add	x0, x0, #0x0
    19cc:	add	x1, x1, #0x0
    19d0:	add	x3, x3, #0x0
    19d4:	mov	w2, #0x1eb                 	// #491
    19d8:	bl	0 <__assert_fail>
    19dc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19e0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19e4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19e8:	add	x0, x0, #0x0
    19ec:	add	x1, x1, #0x0
    19f0:	add	x3, x3, #0x0
    19f4:	mov	w2, #0x1ab                 	// #427
    19f8:	bl	0 <__assert_fail>
    19fc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a00:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a04:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a08:	add	x0, x0, #0x0
    1a0c:	add	x1, x1, #0x0
    1a10:	add	x3, x3, #0x0
    1a14:	mov	w2, #0x2ce                 	// #718
    1a18:	bl	0 <__assert_fail>
    1a1c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a20:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a24:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a28:	add	x0, x0, #0x0
    1a2c:	add	x1, x1, #0x0
    1a30:	add	x3, x3, #0x0
    1a34:	mov	w2, #0x1ce                 	// #462
    1a38:	bl	0 <__assert_fail>
    1a3c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a40:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a44:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a48:	add	x0, x0, #0x0
    1a4c:	add	x1, x1, #0x0
    1a50:	add	x3, x3, #0x0
    1a54:	mov	w2, #0xcc                  	// #204
    1a58:	bl	0 <__assert_fail>
    1a5c:	mov	x0, sp
    1a60:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000001a64 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE>:
    1a64:	stp	x29, x30, [sp, #-96]!
    1a68:	stp	x28, x27, [sp, #16]
    1a6c:	stp	x26, x25, [sp, #32]
    1a70:	stp	x24, x23, [sp, #48]
    1a74:	stp	x22, x21, [sp, #64]
    1a78:	stp	x20, x19, [sp, #80]
    1a7c:	mov	x29, sp
    1a80:	sub	sp, sp, #0x220
    1a84:	mov	x19, x8
    1a88:	add	x8, sp, #0xc0
    1a8c:	mov	x20, x3
    1a90:	mov	x22, x2
    1a94:	mov	x23, x1
    1a98:	mov	x21, x0
    1a9c:	bl	1434 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>
    1aa0:	ldrb	w10, [sp, #280]
    1aa4:	ubfiz	w9, w10, #1, #1
    1aa8:	and	w8, w10, #0xfffffffd
    1aac:	orr	w11, w9, w8
    1ab0:	strb	w11, [sp, #280]
    1ab4:	tbnz	w10, #0, 1b60 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xfc>
    1ab8:	cbnz	w9, 2704 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xca0>
    1abc:	ldr	x8, [sp, #192]
    1ac0:	mov	x25, x20
    1ac4:	add	x9, sp, #0xc0
    1ac8:	add	x24, sp, #0xc0
    1acc:	cmp	x9, x20
    1ad0:	str	x8, [x25], #8
    1ad4:	b.eq	1af8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x94>  // b.none
    1ad8:	ldr	x0, [x20, #8]
    1adc:	bl	0 <free>
    1ae0:	ldur	q0, [x24, #8]
    1ae4:	str	q0, [x25]
    1ae8:	ldr	w8, [sp, #216]
    1aec:	str	w8, [x20, #24]
    1af0:	stp	xzr, xzr, [sp, #200]
    1af4:	str	wzr, [sp, #216]
    1af8:	ldp	q1, q0, [x24, #32]
    1afc:	ldr	x0, [x20, #64]
    1b00:	stp	q1, q0, [x20, #32]
    1b04:	ldr	q0, [x24, #64]
    1b08:	str	q0, [x20, #64]
    1b0c:	ldr	x8, [sp, #272]
    1b10:	str	x8, [x20, #80]
    1b14:	stp	xzr, xzr, [sp, #256]
    1b18:	str	xzr, [sp, #272]
    1b1c:	cbz	x0, 1b24 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc0>
    1b20:	bl	0 <_ZdlPv>
    1b24:	ldr	x8, [x20]
    1b28:	mov	x0, x23
    1b2c:	mov	x1, x22
    1b30:	mov	w3, wzr
    1b34:	ldr	w9, [x8, #32]
    1b38:	ldr	w8, [x8, #40]
    1b3c:	mul	w2, w8, w9
    1b40:	add	x8, sp, #0xb0
    1b44:	bl	0 <_ZN4llvm16FileOutputBuffer6createENS_9StringRefEmj>
    1b48:	ldrb	w9, [sp, #184]
    1b4c:	and	w8, w9, #0xfffffffd
    1b50:	strb	w8, [sp, #184]
    1b54:	tbnz	w9, #0, 1b88 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x124>
    1b58:	mov	w10, #0x1                   	// #1
    1b5c:	b	1b94 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x130>
    1b60:	ldr	x9, [sp, #192]
    1b64:	ldrb	w10, [x19, #72]
    1b68:	strb	w8, [sp, #280]
    1b6c:	str	xzr, [sp, #192]
    1b70:	ands	x9, x9, #0xfffffffffffffffe
    1b74:	orr	w10, w10, #0x3
    1b78:	strb	w10, [x19, #72]
    1b7c:	b.eq	2784 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd20>  // b.none
    1b80:	str	x9, [x19]
    1b84:	b	1c00 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x19c>
    1b88:	ldr	x10, [sp, #176]
    1b8c:	str	xzr, [sp, #176]
    1b90:	orr	x10, x10, #0x1
    1b94:	tst	x10, #0xfffffffffffffffe
    1b98:	and	x12, x10, #0xfffffffffffffffe
    1b9c:	cset	w11, ne  // ne = any
    1ba0:	orr	x11, x12, x11
    1ba4:	str	x11, [sp, #104]
    1ba8:	cbz	x12, 1c58 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1f4>
    1bac:	ldrb	w9, [x19, #72]
    1bb0:	str	xzr, [sp, #104]
    1bb4:	orr	w11, w9, #0x3
    1bb8:	ands	x9, x10, #0xfffffffffffffffe
    1bbc:	strb	w11, [x19, #72]
    1bc0:	b.eq	2784 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd20>  // b.none
    1bc4:	str	x9, [x19]
    1bc8:	tbnz	w8, #1, 2388 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x924>
    1bcc:	tbnz	w8, #0, 1be4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x180>
    1bd0:	ldr	x0, [sp, #176]
    1bd4:	cbz	x0, 1bf8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x194>
    1bd8:	ldr	x8, [x0]
    1bdc:	ldr	x8, [x8, #40]
    1be0:	b	1bf4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x190>
    1be4:	ldr	x0, [sp, #176]
    1be8:	cbz	x0, 1bf8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x194>
    1bec:	ldr	x8, [x0]
    1bf0:	ldr	x8, [x8, #8]
    1bf4:	blr	x8
    1bf8:	ldrb	w8, [sp, #280]
    1bfc:	str	xzr, [sp, #176]
    1c00:	tbnz	w8, #1, 2704 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xca0>
    1c04:	tbnz	w8, #0, 1c20 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1bc>
    1c08:	ldr	x0, [sp, #256]
    1c0c:	cbz	x0, 1c14 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1b0>
    1c10:	bl	0 <_ZdlPv>
    1c14:	ldr	x0, [sp, #200]
    1c18:	bl	0 <free>
    1c1c:	b	1c38 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1d4>
    1c20:	ldr	x0, [sp, #192]
    1c24:	cbz	x0, 1c34 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1d0>
    1c28:	ldr	x8, [x0]
    1c2c:	ldr	x8, [x8, #8]
    1c30:	blr	x8
    1c34:	str	xzr, [sp, #192]
    1c38:	add	sp, sp, #0x220
    1c3c:	ldp	x20, x19, [sp, #80]
    1c40:	ldp	x22, x21, [sp, #64]
    1c44:	ldp	x24, x23, [sp, #48]
    1c48:	ldp	x26, x25, [sp, #32]
    1c4c:	ldp	x28, x27, [sp, #16]
    1c50:	ldp	x29, x30, [sp], #96
    1c54:	ret
    1c58:	cbnz	x11, 27a4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd40>
    1c5c:	tbnz	w9, #0, 27ac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd48>
    1c60:	ldr	x22, [sp, #176]
    1c64:	str	xzr, [sp, #176]
    1c68:	adrp	x24, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1c6c:	ldr	x24, [x24]
    1c70:	mov	x0, x22
    1c74:	add	x8, x24, #0x10
    1c78:	str	x8, [sp, #104]
    1c7c:	ldr	x8, [x22]
    1c80:	ldr	x8, [x8]
    1c84:	blr	x8
    1c88:	ldr	x8, [x22]
    1c8c:	mov	x23, x0
    1c90:	mov	x0, x22
    1c94:	ldr	x8, [x8, #8]
    1c98:	blr	x8
    1c9c:	adrp	x10, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ca0:	ldr	x10, [x10]
    1ca4:	adrp	x25, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ca8:	ldr	x25, [x25]
    1cac:	mov	w9, #0x1                   	// #1
    1cb0:	sub	x8, x0, x23
    1cb4:	str	w9, [sp, #144]
    1cb8:	add	x9, x10, #0x10
    1cbc:	stp	x23, x8, [sp, #152]
    1cc0:	stp	x8, x9, [sp, #128]
    1cc4:	add	x8, x25, #0x10
    1cc8:	add	x0, sp, #0x30
    1ccc:	add	x1, sp, #0x68
    1cd0:	stp	x8, x23, [sp, #112]
    1cd4:	str	x22, [sp, #168]
    1cd8:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    1cdc:	ldr	x1, [x20]
    1ce0:	sub	x8, x29, #0xf0
    1ce4:	add	x0, sp, #0x30
    1ce8:	mov	w2, #0x38                  	// #56
    1cec:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    1cf0:	ldur	x8, [x29, #-240]
    1cf4:	adrp	x26, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1cf8:	tst	x8, #0xfffffffffffffffe
    1cfc:	and	x10, x8, #0xfffffffffffffffe
    1d00:	cset	w9, ne  // ne = any
    1d04:	orr	x9, x10, x9
    1d08:	stur	x9, [x29, #-240]
    1d0c:	ldr	x26, [x26]
    1d10:	cbnz	x10, 22a4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x840>
    1d14:	cbnz	x9, 27cc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd68>
    1d18:	ldr	x22, [x21]
    1d1c:	sub	x0, x29, #0x88
    1d20:	add	x1, sp, #0x68
    1d24:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    1d28:	sub	x8, x29, #0x60
    1d2c:	sub	x1, x29, #0x88
    1d30:	mov	x0, x20
    1d34:	mov	x2, x22
    1d38:	mov	w3, wzr
    1d3c:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    1d40:	adrp	x27, 0 <__pthread_key_create>
    1d44:	ldur	x23, [x29, #-128]
    1d48:	ldr	x27, [x27]
    1d4c:	cbz	x23, 1dd0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x36c>
    1d50:	add	x8, x23, #0x8
    1d54:	cbz	x27, 1d6c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x308>
    1d58:	ldaxr	w9, [x8]
    1d5c:	sub	w10, w9, #0x1
    1d60:	stlxr	w11, w10, [x8]
    1d64:	cbnz	w11, 1d58 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2f4>
    1d68:	b	1d78 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x314>
    1d6c:	ldr	w9, [x8]
    1d70:	sub	w10, w9, #0x1
    1d74:	str	w10, [x8]
    1d78:	cmp	w9, #0x1
    1d7c:	b.ne	1dd0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x36c>  // b.any
    1d80:	mov	x26, x23
    1d84:	ldr	x8, [x26], #12
    1d88:	mov	x0, x23
    1d8c:	ldr	x8, [x8, #16]
    1d90:	blr	x8
    1d94:	cbz	x27, 1dac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x348>
    1d98:	ldaxr	w8, [x26]
    1d9c:	sub	w9, w8, #0x1
    1da0:	stlxr	w10, w9, [x26]
    1da4:	cbnz	w10, 1d98 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x334>
    1da8:	b	1db8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x354>
    1dac:	ldr	w8, [x26]
    1db0:	sub	w9, w8, #0x1
    1db4:	str	w9, [x26]
    1db8:	cmp	w8, #0x1
    1dbc:	b.ne	1dd0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x36c>  // b.any
    1dc0:	ldr	x8, [x23]
    1dc4:	mov	x0, x23
    1dc8:	ldr	x8, [x8, #24]
    1dcc:	blr	x8
    1dd0:	sub	x0, x29, #0xb8
    1dd4:	add	x1, sp, #0x68
    1dd8:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    1ddc:	sub	x8, x29, #0x90
    1de0:	sub	x1, x29, #0xb8
    1de4:	mov	w3, #0x1                   	// #1
    1de8:	mov	x0, x20
    1dec:	mov	x2, x22
    1df0:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    1df4:	ldur	x0, [x29, #-144]
    1df8:	cbz	x0, 1e08 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3a4>
    1dfc:	ldr	x8, [x0]
    1e00:	ldr	x8, [x8, #8]
    1e04:	blr	x8
    1e08:	ldur	x22, [x29, #-176]
    1e0c:	stur	xzr, [x29, #-144]
    1e10:	cbz	x22, 1e94 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x430>
    1e14:	add	x8, x22, #0x8
    1e18:	cbz	x27, 1e30 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3cc>
    1e1c:	ldaxr	w9, [x8]
    1e20:	sub	w10, w9, #0x1
    1e24:	stlxr	w11, w10, [x8]
    1e28:	cbnz	w11, 1e1c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3b8>
    1e2c:	b	1e3c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3d8>
    1e30:	ldr	w9, [x8]
    1e34:	sub	w10, w9, #0x1
    1e38:	str	w10, [x8]
    1e3c:	cmp	w9, #0x1
    1e40:	b.ne	1e94 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x430>  // b.any
    1e44:	mov	x23, x22
    1e48:	ldr	x8, [x23], #12
    1e4c:	mov	x0, x22
    1e50:	ldr	x8, [x8, #16]
    1e54:	blr	x8
    1e58:	cbz	x27, 1e70 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x40c>
    1e5c:	ldaxr	w8, [x23]
    1e60:	sub	w9, w8, #0x1
    1e64:	stlxr	w10, w9, [x23]
    1e68:	cbnz	w10, 1e5c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3f8>
    1e6c:	b	1e7c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x418>
    1e70:	ldr	w8, [x23]
    1e74:	sub	w9, w8, #0x1
    1e78:	str	w9, [x23]
    1e7c:	cmp	w8, #0x1
    1e80:	b.ne	1e94 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x430>  // b.any
    1e84:	ldr	x8, [x22]
    1e88:	mov	x0, x22
    1e8c:	ldr	x8, [x8, #24]
    1e90:	blr	x8
    1e94:	ldur	x1, [x29, #-96]
    1e98:	sub	x0, x29, #0xf0
    1e9c:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    1ea0:	ldr	x8, [x20]
    1ea4:	ldr	w8, [x8, #40]
    1ea8:	cbz	w8, 2128 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6c4>
    1eac:	mov	w22, wzr
    1eb0:	mov	w23, #0x39                  	// #57
    1eb4:	mov	w27, #0x3a                  	// #58
    1eb8:	mov	w28, #0x3b                  	// #59
    1ebc:	mov	w26, #0x3d                  	// #61
    1ec0:	sturb	wzr, [x29, #-244]
    1ec4:	ldr	w11, [x20, #24]
    1ec8:	ldp	x9, x10, [x20, #8]
    1ecc:	cmp	w22, w8
    1ed0:	b.cs	1efc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x498>  // b.hs, b.nlast
    1ed4:	cmp	w11, w22
    1ed8:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    1edc:	lsr	w12, w22, #6
    1ee0:	cmp	x10, x12
    1ee4:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    1ee8:	ldr	x12, [x9, x12, lsl #3]
    1eec:	and	w13, w22, #0x38
    1ef0:	lsr	x12, x12, x13
    1ef4:	and	w12, w12, #0x1
    1ef8:	b	1f00 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x49c>
    1efc:	mov	w12, #0x1                   	// #1
    1f00:	add	w13, w22, #0x1
    1f04:	cmp	w13, w8
    1f08:	sturb	w12, [x29, #-244]
    1f0c:	b.cs	1f34 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4d0>  // b.hs, b.nlast
    1f10:	cmp	w11, w13
    1f14:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    1f18:	lsr	w14, w22, #6
    1f1c:	cmp	x10, x14
    1f20:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    1f24:	ldr	x14, [x9, x14, lsl #3]
    1f28:	and	w13, w13, w23
    1f2c:	lsr	x13, x14, x13
    1f30:	tbz	w13, #0, 20f0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x68c>
    1f34:	mov	w13, #0x2                   	// #2
    1f38:	orr	w12, w13, w12
    1f3c:	add	w13, w22, #0x2
    1f40:	cmp	w13, w8
    1f44:	sturb	w12, [x29, #-244]
    1f48:	b.cs	1f70 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x50c>  // b.hs, b.nlast
    1f4c:	cmp	w11, w13
    1f50:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    1f54:	lsr	w14, w22, #6
    1f58:	cmp	x10, x14
    1f5c:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    1f60:	ldr	x14, [x9, x14, lsl #3]
    1f64:	and	w13, w13, w27
    1f68:	lsr	x13, x14, x13
    1f6c:	tbz	w13, #0, 20f8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x694>
    1f70:	mov	w13, #0x4                   	// #4
    1f74:	orr	w12, w13, w12
    1f78:	add	w13, w22, #0x3
    1f7c:	cmp	w13, w8
    1f80:	sturb	w12, [x29, #-244]
    1f84:	b.cs	1fac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x548>  // b.hs, b.nlast
    1f88:	cmp	w11, w13
    1f8c:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    1f90:	lsr	w14, w22, #6
    1f94:	cmp	x10, x14
    1f98:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    1f9c:	ldr	x14, [x9, x14, lsl #3]
    1fa0:	and	w13, w13, w28
    1fa4:	lsr	x13, x14, x13
    1fa8:	tbz	w13, #0, 2100 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x69c>
    1fac:	mov	w13, #0x8                   	// #8
    1fb0:	orr	w12, w13, w12
    1fb4:	add	w13, w22, #0x4
    1fb8:	cmp	w13, w8
    1fbc:	sturb	w12, [x29, #-244]
    1fc0:	b.cs	1fe8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x584>  // b.hs, b.nlast
    1fc4:	cmp	w11, w13
    1fc8:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    1fcc:	lsr	w14, w22, #6
    1fd0:	cmp	x10, x14
    1fd4:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    1fd8:	ldr	x14, [x9, x14, lsl #3]
    1fdc:	and	w13, w13, #0x3c
    1fe0:	lsr	x13, x14, x13
    1fe4:	tbz	w13, #0, 2108 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6a4>
    1fe8:	mov	w13, #0x10                  	// #16
    1fec:	orr	w12, w13, w12
    1ff0:	add	w13, w22, #0x5
    1ff4:	cmp	w13, w8
    1ff8:	sturb	w12, [x29, #-244]
    1ffc:	b.cs	2024 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5c0>  // b.hs, b.nlast
    2000:	cmp	w11, w13
    2004:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    2008:	lsr	w14, w22, #6
    200c:	cmp	x10, x14
    2010:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    2014:	ldr	x14, [x9, x14, lsl #3]
    2018:	and	w13, w13, w26
    201c:	lsr	x13, x14, x13
    2020:	tbz	w13, #0, 2110 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6ac>
    2024:	mov	w13, #0x20                  	// #32
    2028:	orr	w12, w13, w12
    202c:	add	w13, w22, #0x6
    2030:	cmp	w13, w8
    2034:	sturb	w12, [x29, #-244]
    2038:	b.cs	2060 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5fc>  // b.hs, b.nlast
    203c:	cmp	w11, w13
    2040:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    2044:	lsr	w14, w22, #6
    2048:	cmp	x10, x14
    204c:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    2050:	ldr	x14, [x9, x14, lsl #3]
    2054:	and	w13, w13, #0x3e
    2058:	lsr	x13, x14, x13
    205c:	tbz	w13, #0, 2118 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6b4>
    2060:	mov	w13, #0x40                  	// #64
    2064:	orr	w12, w13, w12
    2068:	add	w13, w22, #0x7
    206c:	cmp	w13, w8
    2070:	sturb	w12, [x29, #-244]
    2074:	b.cs	2098 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x634>  // b.hs, b.nlast
    2078:	cmp	w11, w13
    207c:	b.ls	26c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc60>  // b.plast
    2080:	lsr	w8, w22, #6
    2084:	cmp	x10, x8
    2088:	b.ls	26e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc80>  // b.plast
    208c:	ldr	x8, [x9, x8, lsl #3]
    2090:	lsr	x8, x8, x13
    2094:	tbz	w8, #0, 2120 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6bc>
    2098:	mov	w8, #0x80                  	// #128
    209c:	orr	w8, w8, w12
    20a0:	sturb	w8, [x29, #-244]
    20a4:	sub	x8, x29, #0x100
    20a8:	sub	x0, x29, #0xf0
    20ac:	sub	x1, x29, #0xf4
    20b0:	mov	w2, #0x1                   	// #1
    20b4:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    20b8:	ldur	x8, [x29, #-256]
    20bc:	tst	x8, #0xfffffffffffffffe
    20c0:	and	x9, x8, #0xfffffffffffffffe
    20c4:	cset	w8, ne  // ne = any
    20c8:	orr	x8, x9, x8
    20cc:	stur	x8, [x29, #-256]
    20d0:	cbnz	x9, 270c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xca8>
    20d4:	cbnz	x8, 277c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd18>
    20d8:	ldr	x8, [x20]
    20dc:	add	w22, w22, #0x8
    20e0:	ldr	w8, [x8, #40]
    20e4:	cmp	w22, w8
    20e8:	b.cc	1ec0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x45c>  // b.lo, b.ul, b.last
    20ec:	b	2128 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6c4>
    20f0:	mov	w13, wzr
    20f4:	b	1f38 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4d4>
    20f8:	mov	w13, wzr
    20fc:	b	1f74 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x510>
    2100:	mov	w13, wzr
    2104:	b	1fb0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x54c>
    2108:	mov	w13, wzr
    210c:	b	1fec <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x588>
    2110:	mov	w13, wzr
    2114:	b	2028 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5c4>
    2118:	mov	w13, wzr
    211c:	b	2064 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x600>
    2120:	mov	w8, wzr
    2124:	b	209c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x638>
    2128:	ldurb	w8, [x29, #-200]
    212c:	cbz	w8, 2140 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6dc>
    2130:	adrp	x26, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2134:	ldur	w8, [x29, #-204]
    2138:	ldr	x26, [x26]
    213c:	b	216c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x708>
    2140:	adrp	x26, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2144:	ldur	x0, [x29, #-216]
    2148:	ldr	x26, [x26]
    214c:	cbz	x0, 2168 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x704>
    2150:	ldr	x8, [x0]
    2154:	ldr	x8, [x8, #40]
    2158:	blr	x8
    215c:	ldur	w8, [x29, #-208]
    2160:	sub	w8, w0, w8
    2164:	b	216c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x708>
    2168:	mov	w8, wzr
    216c:	adrp	x27, 0 <__pthread_key_create>
    2170:	ldr	x27, [x27]
    2174:	ldur	w9, [x29, #-192]
    2178:	cmp	w8, w9
    217c:	b.ne	27d4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd70>  // b.any
    2180:	ldur	x22, [x29, #-224]
    2184:	add	x8, x26, #0x10
    2188:	stur	x8, [x29, #-240]
    218c:	cbz	x22, 2210 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7ac>
    2190:	add	x8, x22, #0x8
    2194:	cbz	x27, 21ac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x748>
    2198:	ldaxr	w9, [x8]
    219c:	sub	w10, w9, #0x1
    21a0:	stlxr	w11, w10, [x8]
    21a4:	cbnz	w11, 2198 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x734>
    21a8:	b	21b8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x754>
    21ac:	ldr	w9, [x8]
    21b0:	sub	w10, w9, #0x1
    21b4:	str	w10, [x8]
    21b8:	cmp	w9, #0x1
    21bc:	b.ne	2210 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7ac>  // b.any
    21c0:	mov	x23, x22
    21c4:	ldr	x8, [x23], #12
    21c8:	mov	x0, x22
    21cc:	ldr	x8, [x8, #16]
    21d0:	blr	x8
    21d4:	cbz	x27, 21ec <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x788>
    21d8:	ldaxr	w8, [x23]
    21dc:	sub	w9, w8, #0x1
    21e0:	stlxr	w10, w9, [x23]
    21e4:	cbnz	w10, 21d8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x774>
    21e8:	b	21f8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x794>
    21ec:	ldr	w8, [x23]
    21f0:	sub	w9, w8, #0x1
    21f4:	str	w9, [x23]
    21f8:	cmp	w8, #0x1
    21fc:	b.ne	2210 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7ac>  // b.any
    2200:	ldr	x8, [x22]
    2204:	mov	x0, x22
    2208:	ldr	x8, [x8, #24]
    220c:	blr	x8
    2210:	ldur	x0, [x29, #-96]
    2214:	cbz	x0, 2224 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7c0>
    2218:	ldr	x8, [x0]
    221c:	ldr	x8, [x8, #8]
    2220:	blr	x8
    2224:	ldr	x8, [x20]
    2228:	ldr	w9, [x8, #52]
    222c:	ldr	w8, [x8, #32]
    2230:	mul	w8, w8, w9
    2234:	str	w8, [sp, #96]
    2238:	ldr	x8, [x20, #40]
    223c:	cbz	x8, 2268 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x804>
    2240:	lsr	x9, x8, #30
    2244:	cbz	x9, 2274 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x810>
    2248:	mov	w0, #0x30                  	// #48
    224c:	bl	0 <_Znwm>
    2250:	mov	w1, #0x2                   	// #2
    2254:	mov	x22, x0
    2258:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
    225c:	orr	x8, x22, #0x1
    2260:	stur	x8, [x29, #-240]
    2264:	b	228c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x828>
    2268:	mov	w8, #0x1                   	// #1
    226c:	stur	x8, [x29, #-240]
    2270:	b	228c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x828>
    2274:	ldr	x1, [x20, #32]
    2278:	lsl	x2, x8, #2
    227c:	sub	x8, x29, #0xf0
    2280:	add	x0, sp, #0x30
    2284:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    2288:	ldur	x8, [x29, #-240]
    228c:	tst	x8, #0xfffffffffffffffe
    2290:	and	x10, x8, #0xfffffffffffffffe
    2294:	cset	w9, ne  // ne = any
    2298:	orr	x9, x10, x9
    229c:	stur	x9, [x29, #-240]
    22a0:	cbz	x10, 2390 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x92c>
    22a4:	ldrb	w9, [x19, #72]
    22a8:	ands	x8, x8, #0xfffffffffffffffe
    22ac:	stur	xzr, [x29, #-240]
    22b0:	orr	w9, w9, #0x3
    22b4:	strb	w9, [x19, #72]
    22b8:	b.eq	2784 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd20>  // b.none
    22bc:	str	x8, [x19]
    22c0:	ldr	x19, [sp, #64]
    22c4:	add	x8, x26, #0x10
    22c8:	str	x8, [sp, #48]
    22cc:	cbz	x19, 2360 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8fc>
    22d0:	adrp	x20, 0 <__pthread_key_create>
    22d4:	ldr	x20, [x20]
    22d8:	add	x8, x19, #0x8
    22dc:	cbz	x20, 22fc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x898>
    22e0:	ldaxr	w9, [x8]
    22e4:	sub	w10, w9, #0x1
    22e8:	stlxr	w11, w10, [x8]
    22ec:	cbnz	w11, 22e0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x87c>
    22f0:	cmp	w9, #0x1
    22f4:	b.eq	2310 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8ac>  // b.none
    22f8:	b	2360 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8fc>
    22fc:	ldr	w9, [x8]
    2300:	sub	w10, w9, #0x1
    2304:	str	w10, [x8]
    2308:	cmp	w9, #0x1
    230c:	b.ne	2360 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8fc>  // b.any
    2310:	mov	x21, x19
    2314:	ldr	x8, [x21], #12
    2318:	mov	x0, x19
    231c:	ldr	x8, [x8, #16]
    2320:	blr	x8
    2324:	cbz	x20, 233c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8d8>
    2328:	ldaxr	w8, [x21]
    232c:	sub	w9, w8, #0x1
    2330:	stlxr	w10, w9, [x21]
    2334:	cbnz	w10, 2328 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8c4>
    2338:	b	2348 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8e4>
    233c:	ldr	w8, [x21]
    2340:	sub	w9, w8, #0x1
    2344:	str	w9, [x21]
    2348:	cmp	w8, #0x1
    234c:	b.ne	2360 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8fc>  // b.any
    2350:	ldr	x8, [x19]
    2354:	mov	x0, x19
    2358:	ldr	x8, [x8, #24]
    235c:	blr	x8
    2360:	ldr	x0, [sp, #168]
    2364:	add	x8, x24, #0x10
    2368:	add	x9, x25, #0x10
    236c:	stp	x8, x9, [sp, #104]
    2370:	cbz	x0, 2380 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x91c>
    2374:	ldr	x8, [x0]
    2378:	ldr	x8, [x8, #40]
    237c:	blr	x8
    2380:	ldrb	w8, [sp, #184]
    2384:	tbz	w8, #1, 1bcc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x168>
    2388:	add	x0, sp, #0xb0
    238c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2390:	cbnz	x9, 27cc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd68>
    2394:	add	x0, sp, #0x8
    2398:	add	x1, sp, #0x68
    239c:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    23a0:	ldr	x2, [x21]
    23a4:	sub	x8, x29, #0x58
    23a8:	add	x1, sp, #0x8
    23ac:	mov	x0, x20
    23b0:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    23b4:	ldr	x21, [sp, #16]
    23b8:	cbz	x21, 243c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9d8>
    23bc:	add	x8, x21, #0x8
    23c0:	cbz	x27, 23d8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x974>
    23c4:	ldaxr	w9, [x8]
    23c8:	sub	w10, w9, #0x1
    23cc:	stlxr	w11, w10, [x8]
    23d0:	cbnz	w11, 23c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x960>
    23d4:	b	23e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x980>
    23d8:	ldr	w9, [x8]
    23dc:	sub	w10, w9, #0x1
    23e0:	str	w10, [x8]
    23e4:	cmp	w9, #0x1
    23e8:	b.ne	243c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9d8>  // b.any
    23ec:	mov	x22, x21
    23f0:	ldr	x8, [x22], #12
    23f4:	mov	x0, x21
    23f8:	ldr	x8, [x8, #16]
    23fc:	blr	x8
    2400:	cbz	x27, 2418 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9b4>
    2404:	ldaxr	w8, [x22]
    2408:	sub	w9, w8, #0x1
    240c:	stlxr	w10, w9, [x22]
    2410:	cbnz	w10, 2404 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9a0>
    2414:	b	2424 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9c0>
    2418:	ldr	w8, [x22]
    241c:	sub	w9, w8, #0x1
    2420:	str	w9, [x22]
    2424:	cmp	w8, #0x1
    2428:	b.ne	243c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9d8>  // b.any
    242c:	ldr	x8, [x21]
    2430:	mov	x0, x21
    2434:	ldr	x8, [x8, #24]
    2438:	blr	x8
    243c:	ldur	x1, [x29, #-88]
    2440:	sub	x0, x29, #0xf0
    2444:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    2448:	ldur	x0, [x29, #-216]
    244c:	ldr	w21, [x20, #56]
    2450:	ldr	x8, [x0]
    2454:	ldr	x8, [x8, #16]
    2458:	blr	x8
    245c:	sub	w8, w0, #0x1
    2460:	rev	w9, w21
    2464:	cmp	w8, #0x2
    2468:	csel	w8, w21, w9, cc  // cc = lo, ul, last
    246c:	stur	w8, [x29, #-184]
    2470:	sub	x8, x29, #0x88
    2474:	sub	x0, x29, #0xf0
    2478:	sub	x1, x29, #0xb8
    247c:	mov	w2, #0x4                   	// #4
    2480:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    2484:	ldur	x8, [x29, #-136]
    2488:	tst	x8, #0xfffffffffffffffe
    248c:	and	x10, x8, #0xfffffffffffffffe
    2490:	cset	w9, ne  // ne = any
    2494:	orr	x9, x10, x9
    2498:	stur	x9, [x29, #-136]
    249c:	cbnz	x10, 2510 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xaac>
    24a0:	cbnz	x9, 2650 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbec>
    24a4:	ldr	x8, [x20, #56]
    24a8:	cbz	x8, 24d4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa70>
    24ac:	lsr	x9, x8, #30
    24b0:	cbz	x9, 24e0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa7c>
    24b4:	mov	w0, #0x30                  	// #48
    24b8:	bl	0 <_Znwm>
    24bc:	mov	w1, #0x2                   	// #2
    24c0:	mov	x21, x0
    24c4:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
    24c8:	orr	x8, x21, #0x1
    24cc:	stur	x8, [x29, #-136]
    24d0:	b	24f8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa94>
    24d4:	mov	w8, #0x1                   	// #1
    24d8:	stur	x8, [x29, #-136]
    24dc:	b	24f8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa94>
    24e0:	ldr	x1, [x20, #48]
    24e4:	lsl	x2, x8, #2
    24e8:	sub	x8, x29, #0x88
    24ec:	sub	x0, x29, #0xf0
    24f0:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    24f4:	ldur	x8, [x29, #-136]
    24f8:	tst	x8, #0xfffffffffffffffe
    24fc:	and	x10, x8, #0xfffffffffffffffe
    2500:	cset	w9, ne  // ne = any
    2504:	orr	x9, x10, x9
    2508:	stur	x9, [x29, #-136]
    250c:	cbz	x10, 25d4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb70>
    2510:	ldrb	w9, [x19, #72]
    2514:	ands	x8, x8, #0xfffffffffffffffe
    2518:	stur	xzr, [x29, #-136]
    251c:	orr	w9, w9, #0x3
    2520:	strb	w9, [x19, #72]
    2524:	b.eq	2784 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd20>  // b.none
    2528:	str	x8, [x19]
    252c:	ldur	x19, [x29, #-224]
    2530:	add	x8, x26, #0x10
    2534:	stur	x8, [x29, #-240]
    2538:	cbz	x19, 25bc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb58>
    253c:	add	x8, x19, #0x8
    2540:	cbz	x27, 2558 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xaf4>
    2544:	ldaxr	w9, [x8]
    2548:	sub	w10, w9, #0x1
    254c:	stlxr	w11, w10, [x8]
    2550:	cbnz	w11, 2544 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xae0>
    2554:	b	2564 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb00>
    2558:	ldr	w9, [x8]
    255c:	sub	w10, w9, #0x1
    2560:	str	w10, [x8]
    2564:	cmp	w9, #0x1
    2568:	b.ne	25bc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb58>  // b.any
    256c:	mov	x20, x19
    2570:	ldr	x8, [x20], #12
    2574:	mov	x0, x19
    2578:	ldr	x8, [x8, #16]
    257c:	blr	x8
    2580:	cbz	x27, 2598 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb34>
    2584:	ldaxr	w8, [x20]
    2588:	sub	w9, w8, #0x1
    258c:	stlxr	w10, w9, [x20]
    2590:	cbnz	w10, 2584 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb20>
    2594:	b	25a4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb40>
    2598:	ldr	w8, [x20]
    259c:	sub	w9, w8, #0x1
    25a0:	str	w9, [x20]
    25a4:	cmp	w8, #0x1
    25a8:	b.ne	25bc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb58>  // b.any
    25ac:	ldr	x8, [x19]
    25b0:	mov	x0, x19
    25b4:	ldr	x8, [x8, #24]
    25b8:	blr	x8
    25bc:	ldur	x0, [x29, #-88]
    25c0:	cbz	x0, 22c0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x85c>
    25c4:	ldr	x8, [x0]
    25c8:	ldr	x8, [x8, #8]
    25cc:	blr	x8
    25d0:	b	22c0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x85c>
    25d4:	cbnz	x9, 2650 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbec>
    25d8:	ldp	x21, x22, [x20, #64]
    25dc:	b	25e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb80>
    25e0:	add	x21, x21, #0x10
    25e4:	cmp	x21, x22
    25e8:	b.eq	2658 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbf4>  // b.none
    25ec:	ldr	x8, [x21, #8]
    25f0:	cbz	x8, 25e0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb7c>
    25f4:	lsr	x9, x8, #30
    25f8:	cbz	x9, 261c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbb8>
    25fc:	mov	w0, #0x30                  	// #48
    2600:	bl	0 <_Znwm>
    2604:	mov	w1, #0x2                   	// #2
    2608:	mov	x20, x0
    260c:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
    2610:	orr	x8, x20, #0x1
    2614:	stur	x8, [x29, #-136]
    2618:	b	2634 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbd0>
    261c:	ldr	x1, [x21]
    2620:	lsl	x2, x8, #2
    2624:	sub	x8, x29, #0x88
    2628:	sub	x0, x29, #0xf0
    262c:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    2630:	ldur	x8, [x29, #-136]
    2634:	tst	x8, #0xfffffffffffffffe
    2638:	and	x9, x8, #0xfffffffffffffffe
    263c:	cset	w8, ne  // ne = any
    2640:	orr	x8, x9, x8
    2644:	stur	x8, [x29, #-136]
    2648:	cbnz	x9, 26b0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc4c>
    264c:	cbz	x8, 25e0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb7c>
    2650:	sub	x0, x29, #0x88
    2654:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2658:	add	x9, sp, #0x68
    265c:	add	x8, x9, #0x10
    2660:	adrp	x12, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2664:	ldrb	w10, [x19, #72]
    2668:	ldr	x12, [x12]
    266c:	ldr	q0, [x8]
    2670:	add	x11, x24, #0x10
    2674:	add	x8, x25, #0x10
    2678:	add	x12, x12, #0x10
    267c:	str	q0, [x19, #16]
    2680:	ldr	q0, [x9, #40]!
    2684:	str	x12, [x19, #32]
    2688:	ldr	x12, [sp, #168]
    268c:	stp	x11, x8, [x19]
    2690:	ldr	x9, [x9, #16]
    2694:	and	w8, w10, #0xfc
    2698:	orr	w8, w8, #0x2
    269c:	str	xzr, [sp, #168]
    26a0:	stur	q0, [x19, #40]
    26a4:	strb	w8, [x19, #72]
    26a8:	stp	x9, x12, [x19, #56]
    26ac:	b	252c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xac8>
    26b0:	ldrb	w8, [x19, #72]
    26b4:	str	x9, [x19]
    26b8:	orr	w8, w8, #0x3
    26bc:	strb	w8, [x19, #72]
    26c0:	b	252c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xac8>
    26c4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26c8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26cc:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26d0:	add	x0, x0, #0x0
    26d4:	add	x1, x1, #0x0
    26d8:	add	x3, x3, #0x0
    26dc:	mov	w2, #0x1f0                 	// #496
    26e0:	bl	0 <__assert_fail>
    26e4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26e8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26ec:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26f0:	add	x0, x0, #0x0
    26f4:	add	x1, x1, #0x0
    26f8:	add	x3, x3, #0x0
    26fc:	mov	w2, #0x1ab                 	// #427
    2700:	bl	0 <__assert_fail>
    2704:	add	x0, sp, #0xc0
    2708:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    270c:	sturb	wzr, [x29, #-24]
    2710:	stp	xzr, xzr, [x29, #-72]
    2714:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    2718:	ldr	x10, [x10]
    271c:	sub	x8, x29, #0x28
    2720:	mov	w9, #0x1                   	// #1
    2724:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2728:	add	x11, x8, #0x10
    272c:	stur	w9, [x29, #-56]
    2730:	add	x9, x10, #0x10
    2734:	add	x1, x1, #0x0
    2738:	sub	x0, x29, #0x58
    273c:	stp	x11, xzr, [x29, #-40]
    2740:	stp	x9, xzr, [x29, #-88]
    2744:	stur	x8, [x29, #-48]
    2748:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    274c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2750:	add	x1, x1, #0x0
    2754:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2758:	sub	x1, x29, #0x100
    275c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2760:	sub	x0, x29, #0x58
    2764:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2768:	ldr	x0, [x0]
    276c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2770:	add	x1, x1, #0x0
    2774:	mov	w2, #0x2c9                 	// #713
    2778:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    277c:	sub	x0, x29, #0x100
    2780:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2784:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2788:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    278c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2790:	add	x0, x0, #0x0
    2794:	add	x1, x1, #0x0
    2798:	add	x3, x3, #0x0
    279c:	mov	w2, #0x1ce                 	// #462
    27a0:	bl	0 <__assert_fail>
    27a4:	add	x0, sp, #0x68
    27a8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    27ac:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    27b0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    27b4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    27b8:	add	x0, x0, #0x0
    27bc:	add	x1, x1, #0x0
    27c0:	add	x3, x3, #0x0
    27c4:	mov	w2, #0x272                 	// #626
    27c8:	bl	0 <__assert_fail>
    27cc:	sub	x0, x29, #0xf0
    27d0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    27d4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    27d8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    27dc:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    27e0:	add	x0, x0, #0x0
    27e4:	add	x1, x1, #0x0
    27e8:	add	x3, x3, #0x0
    27ec:	mov	w2, #0x14f                 	// #335
    27f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVectorC2Ejb:

0000000000000000 <_ZN4llvm9BitVectorC2Ejb>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	w8, w1, #0x3f
  18:	lsr	w23, w8, #6
  1c:	lsl	x22, x23, #3
  20:	mov	x19, x0
  24:	stp	xzr, xzr, [x0]
  28:	str	w1, [x0, #16]
  2c:	mov	x0, x22
  30:	mov	w20, w2
  34:	bl	0 <malloc>
  38:	cbz	x0, 54 <_ZN4llvm9BitVectorC2Ejb+0x54>
  3c:	mov	x24, x19
  40:	mov	x21, x0
  44:	str	x0, [x19]
  48:	str	x23, [x24, #8]!
  4c:	cbnz	w23, 78 <_ZN4llvm9BitVectorC2Ejb+0x78>
  50:	b	88 <_ZN4llvm9BitVectorC2Ejb+0x88>
  54:	cbz	w23, 104 <_ZN4llvm9BitVectorC2Ejb+0x104>
  58:	adrp	x0, 0 <_ZN4llvm9BitVectorC2Ejb>
  5c:	add	x0, x0, #0x0
  60:	mov	w1, #0x1                   	// #1
  64:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  68:	mov	x24, x19
  6c:	str	xzr, [x24], #8
  70:	mov	x21, xzr
  74:	str	x23, [x24]
  78:	sbfx	w1, w20, #0, #1
  7c:	mov	x0, x21
  80:	mov	x2, x22
  84:	bl	0 <memset>
  88:	tbz	w20, #0, f0 <_ZN4llvm9BitVectorC2Ejb+0xf0>
  8c:	ldr	w8, [x19, #16]
  90:	add	w9, w8, #0x3f
  94:	lsr	w20, w9, #6
  98:	cmp	w23, w20
  9c:	b.ls	bc <_ZN4llvm9BitVectorC2Ejb+0xbc>  // b.plast
  a0:	subs	x9, x23, x20
  a4:	b.eq	bc <_ZN4llvm9BitVectorC2Ejb+0xbc>  // b.none
  a8:	add	x0, x21, x20, lsl #3
  ac:	lsl	x2, x9, #3
  b0:	mov	w1, wzr
  b4:	bl	0 <memset>
  b8:	ldr	w8, [x19, #16]
  bc:	ands	w8, w8, #0x3f
  c0:	b.eq	f0 <_ZN4llvm9BitVectorC2Ejb+0xf0>  // b.none
  c4:	ldr	x10, [x24]
  c8:	sub	w9, w20, #0x1
  cc:	cmp	x10, x9
  d0:	b.ls	138 <_ZN4llvm9BitVectorC2Ejb+0x138>  // b.plast
  d4:	ldr	x10, [x19]
  d8:	lsl	x9, x9, #3
  dc:	mov	x12, #0xffffffffffffffff    	// #-1
  e0:	lsl	x8, x12, x8
  e4:	ldr	x11, [x10, x9]
  e8:	bic	x8, x11, x8
  ec:	str	x8, [x10, x9]
  f0:	ldp	x20, x19, [sp, #48]
  f4:	ldp	x22, x21, [sp, #32]
  f8:	ldp	x24, x23, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret
 104:	mov	w0, #0x1                   	// #1
 108:	bl	0 <malloc>
 10c:	mov	x21, x0
 110:	cbnz	x0, 124 <_ZN4llvm9BitVectorC2Ejb+0x124>
 114:	adrp	x0, 0 <_ZN4llvm9BitVectorC2Ejb>
 118:	add	x0, x0, #0x0
 11c:	mov	w1, #0x1                   	// #1
 120:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 124:	mov	x24, x19
 128:	str	x21, [x19]
 12c:	str	x23, [x24, #8]!
 130:	tbnz	w20, #0, 8c <_ZN4llvm9BitVectorC2Ejb+0x8c>
 134:	b	f0 <_ZN4llvm9BitVectorC2Ejb+0xf0>
 138:	adrp	x0, 0 <_ZN4llvm9BitVectorC2Ejb>
 13c:	adrp	x1, 0 <_ZN4llvm9BitVectorC2Ejb>
 140:	adrp	x3, 0 <_ZN4llvm9BitVectorC2Ejb>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x1ab                 	// #427
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector6resizeEjb:

0000000000000000 <_ZN4llvm9BitVector6resizeEjb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x22, [x0, #8]
  14:	mov	w8, w1
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	cmp	x8, x22, lsl #6
  24:	mov	w21, w2
  28:	b.ls	60 <_ZN4llvm9BitVector6resizeEjb+0x60>  // b.plast
  2c:	mov	x0, x19
  30:	mov	w1, w20
  34:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  38:	ldr	x9, [x19, #8]
  3c:	and	x8, x22, #0xffffffff
  40:	subs	x9, x9, x8
  44:	b.cc	100 <_ZN4llvm9BitVector6resizeEjb+0x100>  // b.lo, b.ul, b.last
  48:	b.eq	60 <_ZN4llvm9BitVector6resizeEjb+0x60>  // b.none
  4c:	ldr	x10, [x19]
  50:	lsl	x2, x9, #3
  54:	sbfx	w1, w21, #0, #1
  58:	add	x0, x10, x8, lsl #3
  5c:	bl	0 <memset>
  60:	ldr	w8, [x19, #16]
  64:	cmp	w8, w20
  68:	b.cs	7c <_ZN4llvm9BitVector6resizeEjb+0x7c>  // b.hs, b.nlast
  6c:	and	w1, w21, #0x1
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  78:	ldr	w8, [x19, #16]
  7c:	cmp	w8, w20
  80:	str	w20, [x19, #16]
  84:	b.hi	8c <_ZN4llvm9BitVector6resizeEjb+0x8c>  // b.pmore
  88:	tbz	w21, #0, f0 <_ZN4llvm9BitVector6resizeEjb+0xf0>
  8c:	ldr	x8, [x19, #8]
  90:	add	w9, w20, #0x3f
  94:	lsr	w21, w9, #6
  98:	subs	x8, x8, x21
  9c:	b.ls	bc <_ZN4llvm9BitVector6resizeEjb+0xbc>  // b.plast
  a0:	b.eq	bc <_ZN4llvm9BitVector6resizeEjb+0xbc>  // b.none
  a4:	ldr	x9, [x19]
  a8:	lsl	x2, x8, #3
  ac:	mov	w1, wzr
  b0:	add	x0, x9, x21, lsl #3
  b4:	bl	0 <memset>
  b8:	ldr	w20, [x19, #16]
  bc:	ands	w8, w20, #0x3f
  c0:	b.eq	f0 <_ZN4llvm9BitVector6resizeEjb+0xf0>  // b.none
  c4:	ldr	x10, [x19, #8]
  c8:	sub	w9, w21, #0x1
  cc:	cmp	x10, x9
  d0:	b.ls	120 <_ZN4llvm9BitVector6resizeEjb+0x120>  // b.plast
  d4:	ldr	x10, [x19]
  d8:	lsl	x9, x9, #3
  dc:	mov	x12, #0xffffffffffffffff    	// #-1
  e0:	lsl	x8, x12, x8
  e4:	ldr	x11, [x10, x9]
  e8:	bic	x8, x11, x8
  ec:	str	x8, [x10, x9]
  f0:	ldp	x20, x19, [sp, #32]
  f4:	ldp	x22, x21, [sp, #16]
  f8:	ldp	x29, x30, [sp], #48
  fc:	ret
 100:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 104:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 108:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0x174                 	// #372
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 124:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 128:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 12c:	add	x0, x0, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x3, x3, #0x0
 138:	mov	w2, #0x1ab                 	// #427
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector5resetEjj:

0000000000000000 <_ZN4llvm9BitVector5resetEjj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	w1, w2
   c:	b.hi	124 <_ZN4llvm9BitVector5resetEjj+0x124>  // b.pmore
  10:	ldr	w8, [x0, #16]
  14:	cmp	w8, w2
  18:	b.cc	144 <_ZN4llvm9BitVector5resetEjj+0x144>  // b.lo, b.ul, b.last
  1c:	cmp	w1, w2
  20:	b.eq	fc <_ZN4llvm9BitVector5resetEjj+0xfc>  // b.none
  24:	ldr	x8, [x0, #8]
  28:	lsr	w9, w1, #6
  2c:	cmp	w9, w2, lsr #6
  30:	b.ne	64 <_ZN4llvm9BitVector5resetEjj+0x64>  // b.any
  34:	cmp	x8, x9
  38:	b.ls	104 <_ZN4llvm9BitVector5resetEjj+0x104>  // b.plast
  3c:	ldr	x8, [x0]
  40:	lsl	x9, x9, #3
  44:	mov	w10, #0x1                   	// #1
  48:	lsl	x11, x10, x1
  4c:	ldr	x12, [x8, x9]
  50:	lsl	x10, x10, x2
  54:	mvn	x10, x10
  58:	add	x10, x11, x10
  5c:	and	x10, x12, x10
  60:	b	f8 <_ZN4llvm9BitVector5resetEjj+0xf8>
  64:	cmp	x8, x9
  68:	b.ls	104 <_ZN4llvm9BitVector5resetEjj+0x104>  // b.plast
  6c:	ldr	x8, [x0]
  70:	lsl	x11, x9, #3
  74:	add	w9, w1, #0x3f
  78:	mov	x10, #0xffffffffffffffff    	// #-1
  7c:	ldr	x12, [x8, x11]
  80:	and	w9, w9, #0xffffffc0
  84:	lsl	x10, x10, x1
  88:	add	w13, w9, #0x40
  8c:	bic	x10, x12, x10
  90:	cmp	w13, w2
  94:	str	x10, [x8, x11]
  98:	b.ls	a4 <_ZN4llvm9BitVector5resetEjj+0xa4>  // b.plast
  9c:	mov	w10, w9
  a0:	b	cc <_ZN4llvm9BitVector5resetEjj+0xcc>
  a4:	ldr	x10, [x0, #8]
  a8:	lsr	w11, w9, #6
  ac:	cmp	x10, x11
  b0:	b.ls	104 <_ZN4llvm9BitVector5resetEjj+0x104>  // b.plast
  b4:	add	w10, w9, #0x40
  b8:	add	w9, w9, #0x80
  bc:	cmp	w9, w2
  c0:	mov	w9, w10
  c4:	str	xzr, [x8, x11, lsl #3]
  c8:	b.ls	a4 <_ZN4llvm9BitVector5resetEjj+0xa4>  // b.plast
  cc:	cmp	w10, w2
  d0:	b.cs	fc <_ZN4llvm9BitVector5resetEjj+0xfc>  // b.hs, b.nlast
  d4:	ldr	x11, [x0, #8]
  d8:	lsr	w9, w10, #6
  dc:	cmp	x11, x9
  e0:	b.ls	104 <_ZN4llvm9BitVector5resetEjj+0x104>  // b.plast
  e4:	lsl	x9, x9, #3
  e8:	ldr	x10, [x8, x9]
  ec:	mov	x11, #0xffffffffffffffff    	// #-1
  f0:	lsl	x11, x11, x2
  f4:	and	x10, x10, x11
  f8:	str	x10, [x8, x9]
  fc:	ldp	x29, x30, [sp], #16
 100:	ret
 104:	adrp	x0, 0 <_ZN4llvm9BitVector5resetEjj>
 108:	adrp	x1, 0 <_ZN4llvm9BitVector5resetEjj>
 10c:	adrp	x3, 0 <_ZN4llvm9BitVector5resetEjj>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x1ab                 	// #427
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZN4llvm9BitVector5resetEjj>
 128:	adrp	x1, 0 <_ZN4llvm9BitVector5resetEjj>
 12c:	adrp	x3, 0 <_ZN4llvm9BitVector5resetEjj>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x1c2                 	// #450
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZN4llvm9BitVector5resetEjj>
 148:	adrp	x1, 0 <_ZN4llvm9BitVector5resetEjj>
 14c:	adrp	x3, 0 <_ZN4llvm9BitVector5resetEjj>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x1c3                 	// #451
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVectoraSERKS0_:

0000000000000000 <_ZN4llvm9BitVectoraSERKS0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x0, x1
  1c:	b.eq	104 <_ZN4llvm9BitVectoraSERKS0_+0x104>  // b.none
  20:	ldr	w8, [x1, #16]
  24:	ldr	x9, [x19, #8]
  28:	mov	x20, x1
  2c:	add	w10, w8, #0x3f
  30:	cmp	x8, x9, lsl #6
  34:	lsr	w23, w10, #6
  38:	str	w8, [x19, #16]
  3c:	b.ls	88 <_ZN4llvm9BitVectoraSERKS0_+0x88>  // b.plast
  40:	cbz	w23, 11c <_ZN4llvm9BitVectoraSERKS0_+0x11c>
  44:	lsl	x22, x23, #3
  48:	mov	x0, x22
  4c:	bl	0 <malloc>
  50:	mov	x21, x0
  54:	cbnz	x0, 68 <_ZN4llvm9BitVectoraSERKS0_+0x68>
  58:	adrp	x0, 0 <_ZN4llvm9BitVectoraSERKS0_>
  5c:	add	x0, x0, #0x0
  60:	mov	w1, #0x1                   	// #1
  64:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  68:	ldr	x1, [x20]
  6c:	mov	x0, x21
  70:	mov	x2, x22
  74:	bl	0 <memcpy>
  78:	ldr	x0, [x19]
  7c:	bl	0 <free>
  80:	stp	x21, x23, [x19]
  84:	b	104 <_ZN4llvm9BitVectoraSERKS0_+0x104>
  88:	cbz	w8, a4 <_ZN4llvm9BitVectoraSERKS0_+0xa4>
  8c:	ldr	x0, [x19]
  90:	ldr	x1, [x20]
  94:	lsl	w2, w23, #3
  98:	bl	0 <memcpy>
  9c:	ldr	w8, [x19, #16]
  a0:	ldr	x9, [x19, #8]
  a4:	add	w10, w8, #0x3f
  a8:	lsr	w20, w10, #6
  ac:	subs	x9, x9, x20
  b0:	b.ls	d0 <_ZN4llvm9BitVectoraSERKS0_+0xd0>  // b.plast
  b4:	b.eq	d0 <_ZN4llvm9BitVectoraSERKS0_+0xd0>  // b.none
  b8:	ldr	x8, [x19]
  bc:	lsl	x2, x9, #3
  c0:	mov	w1, wzr
  c4:	add	x0, x8, x20, lsl #3
  c8:	bl	0 <memset>
  cc:	ldr	w8, [x19, #16]
  d0:	ands	w8, w8, #0x3f
  d4:	b.eq	104 <_ZN4llvm9BitVectoraSERKS0_+0x104>  // b.none
  d8:	ldr	x10, [x19, #8]
  dc:	sub	w9, w20, #0x1
  e0:	cmp	x10, x9
  e4:	b.ls	13c <_ZN4llvm9BitVectoraSERKS0_+0x13c>  // b.plast
  e8:	ldr	x10, [x19]
  ec:	lsl	x9, x9, #3
  f0:	mov	x12, #0xffffffffffffffff    	// #-1
  f4:	lsl	x8, x12, x8
  f8:	ldr	x11, [x10, x9]
  fc:	bic	x8, x11, x8
 100:	str	x8, [x10, x9]
 104:	mov	x0, x19
 108:	ldp	x20, x19, [sp, #48]
 10c:	ldp	x22, x21, [sp, #32]
 110:	ldr	x23, [sp, #16]
 114:	ldp	x29, x30, [sp], #64
 118:	ret
 11c:	adrp	x0, 0 <_ZN4llvm9BitVectoraSERKS0_>
 120:	adrp	x1, 0 <_ZN4llvm9BitVectoraSERKS0_>
 124:	adrp	x3, 0 <_ZN4llvm9BitVectoraSERKS0_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x2dc                 	// #732
 138:	bl	0 <__assert_fail>
 13c:	adrp	x0, 0 <_ZN4llvm9BitVectoraSERKS0_>
 140:	adrp	x1, 0 <_ZN4llvm9BitVectoraSERKS0_>
 144:	adrp	x3, 0 <_ZN4llvm9BitVectoraSERKS0_>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x1ab                 	// #427
 158:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZN4llvm18BinaryStreamWriterD2Ev>
  14:	ldr	x19, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x0]
  24:	cbz	x19, c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>
  28:	adrp	x20, 0 <__pthread_key_create>
  2c:	ldr	x20, [x20]
  30:	add	x8, x19, #0x8
  34:	cbz	x20, 54 <_ZN4llvm18BinaryStreamWriterD2Ev+0x54>
  38:	ldaxr	w9, [x8]
  3c:	sub	w10, w9, #0x1
  40:	stlxr	w11, w10, [x8]
  44:	cbnz	w11, 38 <_ZN4llvm18BinaryStreamWriterD2Ev+0x38>
  48:	cmp	w9, #0x1
  4c:	b.eq	68 <_ZN4llvm18BinaryStreamWriterD2Ev+0x68>  // b.none
  50:	b	c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>
  54:	ldr	w9, [x8]
  58:	sub	w10, w9, #0x1
  5c:	str	w10, [x8]
  60:	cmp	w9, #0x1
  64:	b.ne	c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>  // b.any
  68:	mov	x21, x19
  6c:	ldr	x8, [x21], #12
  70:	mov	x0, x19
  74:	ldr	x8, [x8, #16]
  78:	blr	x8
  7c:	cbz	x20, b4 <_ZN4llvm18BinaryStreamWriterD2Ev+0xb4>
  80:	ldaxr	w8, [x21]
  84:	sub	w9, w8, #0x1
  88:	stlxr	w10, w9, [x21]
  8c:	cbnz	w10, 80 <_ZN4llvm18BinaryStreamWriterD2Ev+0x80>
  90:	cmp	w8, #0x1
  94:	b.ne	c8 <_ZN4llvm18BinaryStreamWriterD2Ev+0xc8>  // b.any
  98:	ldr	x8, [x19]
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	ldr	x1, [x8, #24]
  ac:	ldp	x29, x30, [sp], #48
  b0:	br	x1
  b4:	ldr	w8, [x21]
  b8:	sub	w9, w8, #0x1
  bc:	str	w9, [x21]
  c0:	cmp	w8, #0x1
  c4:	b.eq	98 <_ZN4llvm18BinaryStreamWriterD2Ev+0x98>  // b.none
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldr	x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm20FileBufferByteStreamD2Ev>
  10:	adrp	x9, 0 <_ZN4llvm20FileBufferByteStreamD2Ev>
  14:	mov	x19, x0
  18:	ldr	x8, [x8]
  1c:	ldr	x0, [x0, #64]
  20:	ldr	x9, [x9]
  24:	add	x8, x8, #0x10
  28:	add	x9, x9, #0x10
  2c:	stp	x8, x9, [x19]
  30:	cbz	x0, 40 <_ZN4llvm20FileBufferByteStreamD2Ev+0x40>
  34:	ldr	x8, [x0]
  38:	ldr	x8, [x8, #40]
  3c:	blr	x8
  40:	str	xzr, [x19, #64]
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm9BitVector15set_unused_bitsEb:

0000000000000000 <_ZN4llvm9BitVector15set_unused_bitsEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #16]
  14:	ldr	x9, [x0, #8]
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	add	w10, w8, #0x3f
  24:	lsr	w21, w10, #6
  28:	subs	x9, x9, x21
  2c:	b.ls	4c <_ZN4llvm9BitVector15set_unused_bitsEb+0x4c>  // b.plast
  30:	b.eq	4c <_ZN4llvm9BitVector15set_unused_bitsEb+0x4c>  // b.none
  34:	ldr	x8, [x19]
  38:	lsl	x2, x9, #3
  3c:	sbfx	w1, w20, #0, #1
  40:	add	x0, x8, x21, lsl #3
  44:	bl	0 <memset>
  48:	ldr	w8, [x19, #16]
  4c:	ands	w8, w8, #0x3f
  50:	b.eq	9c <_ZN4llvm9BitVector15set_unused_bitsEb+0x9c>  // b.none
  54:	ldr	x10, [x19, #8]
  58:	mov	x9, #0xffffffffffffffff    	// #-1
  5c:	lsl	x8, x9, x8
  60:	sub	w9, w21, #0x1
  64:	cmp	x10, x9
  68:	tbz	w20, #0, 84 <_ZN4llvm9BitVector15set_unused_bitsEb+0x84>
  6c:	b.ls	ac <_ZN4llvm9BitVector15set_unused_bitsEb+0xac>  // b.plast
  70:	ldr	x10, [x19]
  74:	lsl	x9, x9, #3
  78:	ldr	x11, [x10, x9]
  7c:	orr	x8, x11, x8
  80:	b	98 <_ZN4llvm9BitVector15set_unused_bitsEb+0x98>
  84:	b.ls	ac <_ZN4llvm9BitVector15set_unused_bitsEb+0xac>  // b.plast
  88:	ldr	x10, [x19]
  8c:	lsl	x9, x9, #3
  90:	ldr	x11, [x10, x9]
  94:	bic	x8, x11, x8
  98:	str	x8, [x10, x9]
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret
  ac:	adrp	x0, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  b0:	adrp	x1, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  b4:	adrp	x3, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x1ab                 	// #427
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector4growEj:

0000000000000000 <_ZN4llvm9BitVector4growEj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #8]
  18:	add	w9, w1, #0x3f
  1c:	lsr	w9, w9, #6
  20:	lsl	x8, x8, #1
  24:	cmp	x8, x9
  28:	csel	x22, x8, x9, hi  // hi = pmore
  2c:	cbz	x22, f4 <_ZN4llvm9BitVector4growEj+0xf4>
  30:	mov	x19, x0
  34:	ldr	x0, [x0]
  38:	lsl	x21, x22, #3
  3c:	mov	x1, x21
  40:	bl	0 <realloc>
  44:	mov	x20, x0
  48:	cbnz	x0, 88 <_ZN4llvm9BitVector4growEj+0x88>
  4c:	cbz	x21, 68 <_ZN4llvm9BitVector4growEj+0x68>
  50:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  54:	add	x0, x0, #0x0
  58:	mov	w1, #0x1                   	// #1
  5c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  60:	mov	x20, xzr
  64:	b	88 <_ZN4llvm9BitVector4growEj+0x88>
  68:	mov	w0, #0x1                   	// #1
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, 88 <_ZN4llvm9BitVector4growEj+0x88>
  78:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  7c:	add	x0, x0, #0x0
  80:	mov	w1, #0x1                   	// #1
  84:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  88:	ldr	w23, [x19, #16]
  8c:	stp	x20, x22, [x19]
  90:	add	w8, w23, #0x3f
  94:	lsr	w21, w8, #6
  98:	subs	x8, x22, x21
  9c:	b.ls	b4 <_ZN4llvm9BitVector4growEj+0xb4>  // b.plast
  a0:	b.eq	b4 <_ZN4llvm9BitVector4growEj+0xb4>  // b.none
  a4:	add	x0, x20, x21, lsl #3
  a8:	lsl	x2, x8, #3
  ac:	mov	w1, wzr
  b0:	bl	0 <memset>
  b4:	and	x8, x23, #0x3f
  b8:	cbz	w8, e0 <_ZN4llvm9BitVector4growEj+0xe0>
  bc:	sub	w9, w21, #0x1
  c0:	cmp	x22, x9
  c4:	b.ls	114 <_ZN4llvm9BitVector4growEj+0x114>  // b.plast
  c8:	lsl	x9, x9, #3
  cc:	ldr	x10, [x20, x9]
  d0:	mov	x11, #0xffffffffffffffff    	// #-1
  d4:	lsl	x8, x11, x8
  d8:	bic	x8, x10, x8
  dc:	str	x8, [x20, x9]
  e0:	ldp	x20, x19, [sp, #48]
  e4:	ldp	x22, x21, [sp, #32]
  e8:	ldr	x23, [sp, #16]
  ec:	ldp	x29, x30, [sp], #64
  f0:	ret
  f4:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  f8:	adrp	x1, 0 <_ZN4llvm9BitVector4growEj>
  fc:	adrp	x3, 0 <_ZN4llvm9BitVector4growEj>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x376                 	// #886
 110:	bl	0 <__assert_fail>
 114:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
 118:	adrp	x1, 0 <_ZN4llvm9BitVector4growEj>
 11c:	adrp	x3, 0 <_ZN4llvm9BitVector4growEj>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x1ab                 	// #427
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BitVector13find_first_inEjj:

0000000000000000 <_ZNK4llvm9BitVector13find_first_inEjj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	w1, w2
   c:	b.hi	f4 <_ZNK4llvm9BitVector13find_first_inEjj+0xf4>  // b.pmore
  10:	ldr	w8, [x0, #16]
  14:	cmp	w8, w2
  18:	b.cc	f4 <_ZNK4llvm9BitVector13find_first_inEjj+0xf4>  // b.lo, b.ul, b.last
  1c:	cmp	w1, w2
  20:	b.eq	b4 <_ZNK4llvm9BitVector13find_first_inEjj+0xb4>  // b.none
  24:	lsr	w10, w1, #6
  28:	sub	w11, w2, #0x1
  2c:	cmp	w10, w11, lsr #6
  30:	b.hi	b4 <_ZNK4llvm9BitVector13find_first_inEjj+0xb4>  // b.pmore
  34:	ldr	x9, [x0, #8]
  38:	and	w12, w1, #0x3f
  3c:	mov	x14, #0xffffffffffffffff    	// #-1
  40:	mov	w15, w11
  44:	neg	w17, w12
  48:	tst	w1, #0x3f
  4c:	mvn	w13, w11
  50:	mov	w16, w1
  54:	lsr	x12, x15, #6
  58:	lsr	x15, x14, x17
  5c:	mov	w8, wzr
  60:	lsl	w10, w10, #6
  64:	lsr	x11, x14, x13
  68:	lsr	x13, x16, #6
  6c:	csinv	x14, x14, x15, eq  // eq = none
  70:	add	x15, x12, #0x1
  74:	cmp	x9, x13
  78:	b.ls	d4 <_ZNK4llvm9BitVector13find_first_inEjj+0xd4>  // b.plast
  7c:	ldr	x16, [x0]
  80:	cmp	w8, #0x0
  84:	csinv	x17, x14, xzr, eq  // eq = none
  88:	cmp	w12, w13
  8c:	ldr	x16, [x16, x13, lsl #3]
  90:	and	x16, x16, x17
  94:	csinv	x17, x11, xzr, eq  // eq = none
  98:	ands	x16, x16, x17
  9c:	b.ne	c0 <_ZNK4llvm9BitVector13find_first_inEjj+0xc0>  // b.any
  a0:	add	x13, x13, #0x1
  a4:	add	w10, w10, #0x40
  a8:	cmp	w15, w13
  ac:	sub	w8, w8, #0x1
  b0:	b.ne	74 <_ZNK4llvm9BitVector13find_first_inEjj+0x74>  // b.any
  b4:	mov	w0, #0xffffffff            	// #-1
  b8:	ldp	x29, x30, [sp], #16
  bc:	ret
  c0:	rbit	x8, x16
  c4:	clz	x8, x8
  c8:	orr	w0, w10, w8
  cc:	ldp	x29, x30, [sp], #16
  d0:	ret
  d4:	adrp	x0, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  d8:	adrp	x1, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  dc:	adrp	x3, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x1ab                 	// #427
  f0:	bl	0 <__assert_fail>
  f4:	adrp	x0, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  f8:	adrp	x1, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
  fc:	adrp	x3, 0 <_ZNK4llvm9BitVector13find_first_inEjj>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0xd0                  	// #208
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm20FileBufferByteStreamD0Ev>
  10:	adrp	x9, 0 <_ZN4llvm20FileBufferByteStreamD0Ev>
  14:	mov	x19, x0
  18:	ldr	x8, [x8]
  1c:	ldr	x0, [x0, #64]
  20:	ldr	x9, [x9]
  24:	add	x8, x8, #0x10
  28:	add	x9, x9, #0x10
  2c:	stp	x8, x9, [x19]
  30:	cbz	x0, 40 <_ZN4llvm20FileBufferByteStreamD0Ev+0x40>
  34:	ldr	x8, [x0]
  38:	ldr	x8, [x8, #40]
  3c:	blr	x8
  40:	mov	x0, x19
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm20FileBufferByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm20FileBufferByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #40]
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	add	x0, x0, #0x20
   4:	b	0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>

Disassembly of section .text._ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	add	x0, x0, #0x20
   4:	b	0 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>

Disassembly of section .text._ZN4llvm20FileBufferByteStream9getLengthEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #56]
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x8
  18:	cbz	x3, 70 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x70>
  1c:	mov	x20, x3
  20:	mov	x21, x2
  24:	mov	x23, x0
  28:	add	x0, x0, #0x8
  2c:	mov	x8, x19
  30:	mov	w2, w20
  34:	mov	w22, w1
  38:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
  3c:	ldr	x8, [x19]
  40:	tst	x8, #0xfffffffffffffffe
  44:	and	x9, x8, #0xfffffffffffffffe
  48:	cset	w8, ne  // ne = any
  4c:	orr	x8, x9, x8
  50:	str	x8, [x19]
  54:	cbnz	x9, 78 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x78>
  58:	cbnz	x8, 8c <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x8c>
  5c:	ldr	x8, [x23, #16]
  60:	mov	x1, x21
  64:	mov	x2, x20
  68:	add	x0, x8, w22, uxtw
  6c:	bl	0 <memcpy>
  70:	mov	w8, #0x1                   	// #1
  74:	str	x8, [x19]
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldr	x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	mov	x0, x19
  90:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm20FileBufferByteStream6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream6commitEv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	x0, [x0, #64]
  14:	mov	x19, x8
  18:	add	x8, sp, #0x8
  1c:	ldr	x9, [x0]
  20:	ldr	x9, [x9, #24]
  24:	blr	x9
  28:	ldr	x9, [sp, #8]
  2c:	tst	x9, #0xfffffffffffffffe
  30:	and	x8, x9, #0xfffffffffffffffe
  34:	cset	w9, ne  // ne = any
  38:	orr	x9, x8, x9
  3c:	str	x9, [sp, #8]
  40:	cbnz	x9, 7c <_ZN4llvm20FileBufferByteStream6commitEv+0x7c>
  44:	cbz	x8, 64 <_ZN4llvm20FileBufferByteStream6commitEv+0x64>
  48:	mov	w0, #0x30                  	// #48
  4c:	bl	0 <_Znwm>
  50:	mov	w1, #0x4                   	// #4
  54:	mov	x20, x0
  58:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  5c:	orr	x8, x20, #0x1
  60:	b	68 <_ZN4llvm20FileBufferByteStream6commitEv+0x68>
  64:	mov	w8, #0x1                   	// #1
  68:	str	x8, [x19]
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldp	x29, x30, [sp, #16]
  74:	add	sp, sp, #0x30
  78:	ret
  7c:	add	x0, sp, #0x8
  80:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm12BinaryStreamD2Ev:

0000000000000000 <_ZN4llvm12BinaryStreamD2Ev>:
   0:	ret

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm20FileBufferByteStream10StreamImplD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #56]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm20FileBufferByteStream10StreamImplD2Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #40]
  30:	blr	x8
  34:	str	xzr, [x19, #56]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #56]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #40]
  30:	blr	x8
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm23MutableBinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm23MutableBinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #32]
   4:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	add	x0, x0, #0x18
   4:	b	0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	add	x0, x0, #0x18
   4:	b	0 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #48]
   4:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x8
  18:	cbz	x3, 6c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x6c>
  1c:	mov	x20, x3
  20:	mov	x21, x2
  24:	mov	x8, x19
  28:	mov	w2, w20
  2c:	mov	w22, w1
  30:	mov	x23, x0
  34:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  38:	ldr	x8, [x19]
  3c:	tst	x8, #0xfffffffffffffffe
  40:	and	x9, x8, #0xfffffffffffffffe
  44:	cset	w8, ne  // ne = any
  48:	orr	x8, x9, x8
  4c:	str	x8, [x19]
  50:	cbnz	x9, 74 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x74>
  54:	cbnz	x8, 88 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x88>
  58:	ldr	x8, [x23, #8]
  5c:	mov	x1, x21
  60:	mov	x2, x20
  64:	add	x0, x8, w22, uxtw
  68:	bl	0 <memcpy>
  6c:	mov	w8, #0x1                   	// #1
  70:	str	x8, [x19]
  74:	ldp	x20, x19, [sp, #48]
  78:	ldp	x22, x21, [sp, #32]
  7c:	ldr	x23, [sp, #16]
  80:	ldp	x29, x30, [sp], #64
  84:	ret
  88:	mov	x0, x19
  8c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImpl6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	x0, [x0, #56]
  14:	mov	x19, x8
  18:	add	x8, sp, #0x8
  1c:	ldr	x9, [x0]
  20:	ldr	x9, [x9, #24]
  24:	blr	x9
  28:	ldr	x9, [sp, #8]
  2c:	tst	x9, #0xfffffffffffffffe
  30:	and	x8, x9, #0xfffffffffffffffe
  34:	cset	w9, ne  // ne = any
  38:	orr	x9, x8, x9
  3c:	str	x9, [sp, #8]
  40:	cbnz	x9, 7c <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv+0x7c>
  44:	cbz	x8, 64 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv+0x64>
  48:	mov	w0, #0x30                  	// #48
  4c:	bl	0 <_Znwm>
  50:	mov	w1, #0x4                   	// #4
  54:	mov	x20, x0
  58:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  5c:	orr	x8, x20, #0x1
  60:	b	68 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv+0x68>
  64:	mov	w8, #0x1                   	// #1
  68:	str	x8, [x19]
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldp	x29, x30, [sp, #16]
  74:	add	sp, sp, #0x30
  78:	ret
  7c:	add	x0, sp, #0x8
  80:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm16BinaryByteStreamD0Ev:

0000000000000000 <_ZN4llvm16BinaryByteStreamD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm16BinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm16BinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #8]
   4:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x9, [x0]
  18:	mov	x19, x3
  1c:	mov	w22, w2
  20:	mov	w23, w1
  24:	ldr	x9, [x9, #40]
  28:	mov	x21, x0
  2c:	mov	x20, x8
  30:	blr	x9
  34:	cmp	w0, w23
  38:	b.cs	50 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x50>  // b.hs, b.nlast
  3c:	mov	w0, #0x30                  	// #48
  40:	bl	0 <_Znwm>
  44:	mov	x24, x0
  48:	mov	w1, #0x3                   	// #3
  4c:	b	7c <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x7c>
  50:	ldr	x8, [x21]
  54:	mov	x0, x21
  58:	ldr	x8, [x8, #40]
  5c:	blr	x8
  60:	add	w8, w22, w23
  64:	cmp	w0, w8
  68:	b.cs	88 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x88>  // b.hs, b.nlast
  6c:	mov	w0, #0x30                  	// #48
  70:	bl	0 <_Znwm>
  74:	mov	x24, x0
  78:	mov	w1, #0x1                   	// #1
  7c:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  80:	orr	x8, x24, #0x1
  84:	b	8c <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x8c>
  88:	mov	w8, #0x1                   	// #1
  8c:	tst	x8, #0xfffffffffffffffe
  90:	str	x8, [x20]
  94:	and	x9, x8, #0xfffffffffffffffe
  98:	cset	w8, ne  // ne = any
  9c:	orr	x8, x9, x8
  a0:	str	x8, [x20]
  a4:	cbnz	x9, d8 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xd8>
  a8:	cbnz	x8, ec <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xec>
  ac:	ldr	x10, [x21, #24]
  b0:	mov	w9, w23
  b4:	mov	w8, w22
  b8:	add	x11, x8, x9
  bc:	cmp	x11, x10
  c0:	b.hi	f4 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xf4>  // b.pmore
  c4:	ldr	x10, [x21, #16]
  c8:	mov	w11, #0x1                   	// #1
  cc:	add	x9, x10, x9
  d0:	stp	x9, x8, [x19]
  d4:	str	x11, [x20]
  d8:	ldp	x20, x19, [sp, #48]
  dc:	ldp	x22, x21, [sp, #32]
  e0:	ldp	x24, x23, [sp, #16]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	mov	x0, x20
  f0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  f4:	adrp	x0, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  f8:	adrp	x1, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  fc:	adrp	x3, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0xbd                  	// #189
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x9, [x0]
  18:	mov	x19, x2
  1c:	mov	w21, w1
  20:	mov	x22, x0
  24:	ldr	x9, [x9, #40]
  28:	mov	x20, x8
  2c:	blr	x9
  30:	cmp	w0, w21
  34:	b.cs	4c <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x4c>  // b.hs, b.nlast
  38:	mov	w0, #0x30                  	// #48
  3c:	bl	0 <_Znwm>
  40:	mov	x23, x0
  44:	mov	w1, #0x3                   	// #3
  48:	b	78 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x78>
  4c:	ldr	x8, [x22]
  50:	mov	x0, x22
  54:	ldr	x8, [x8, #40]
  58:	blr	x8
  5c:	add	w8, w21, #0x1
  60:	cmp	w0, w8
  64:	b.cs	84 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x84>  // b.hs, b.nlast
  68:	mov	w0, #0x30                  	// #48
  6c:	bl	0 <_Znwm>
  70:	mov	x23, x0
  74:	mov	w1, #0x1                   	// #1
  78:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  7c:	orr	x8, x23, #0x1
  80:	b	88 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x88>
  84:	mov	w8, #0x1                   	// #1
  88:	tst	x8, #0xfffffffffffffffe
  8c:	str	x8, [x20]
  90:	and	x9, x8, #0xfffffffffffffffe
  94:	cset	w8, ne  // ne = any
  98:	orr	x8, x9, x8
  9c:	str	x8, [x20]
  a0:	cbnz	x9, c4 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xc4>
  a4:	cbnz	x8, d8 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xd8>
  a8:	ldp	x9, x8, [x22, #16]
  ac:	mov	w10, w21
  b0:	mov	w11, #0x1                   	// #1
  b4:	sub	x8, x8, x10
  b8:	add	x9, x9, x10
  bc:	stp	x9, x8, [x19]
  c0:	str	x11, [x20]
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldr	x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	mov	x0, x20
  dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm16BinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm16BinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #24]
   4:	ret

Disassembly of section .text._ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj:

0000000000000000 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x9, [x0]
  18:	mov	w21, w2
  1c:	mov	w20, w1
  20:	mov	x22, x0
  24:	ldr	x9, [x9, #48]
  28:	mov	x19, x8
  2c:	blr	x9
  30:	cmp	w0, #0x4
  34:	b.cs	c8 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xc8>  // b.hs, b.nlast
  38:	ldr	x8, [x22]
  3c:	mov	w23, w0
  40:	mov	x0, x22
  44:	ldr	x8, [x8, #40]
  48:	blr	x8
  4c:	tbnz	w23, #1, 88 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0x88>
  50:	cmp	w0, w20
  54:	b.cc	90 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0x90>  // b.lo, b.ul, b.last
  58:	ldr	x8, [x22]
  5c:	mov	x0, x22
  60:	ldr	x8, [x8, #40]
  64:	blr	x8
  68:	add	w8, w21, w20
  6c:	cmp	w0, w8
  70:	b.cs	ac <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xac>  // b.hs, b.nlast
  74:	mov	w0, #0x30                  	// #48
  78:	bl	0 <_Znwm>
  7c:	mov	x20, x0
  80:	mov	w1, #0x1                   	// #1
  84:	b	a0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xa0>
  88:	cmp	w0, w20
  8c:	b.cs	ac <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xac>  // b.hs, b.nlast
  90:	mov	w0, #0x30                  	// #48
  94:	bl	0 <_Znwm>
  98:	mov	x20, x0
  9c:	mov	w1, #0x3                   	// #3
  a0:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  a4:	orr	x8, x20, #0x1
  a8:	b	b0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj+0xb0>
  ac:	mov	w8, #0x1                   	// #1
  b0:	str	x8, [x19]
  b4:	ldp	x20, x19, [sp, #48]
  b8:	ldp	x22, x21, [sp, #32]
  bc:	ldr	x23, [sp, #16]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>
  cc:	adrp	x1, 0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>
  d0:	adrp	x3, 0 <_ZN4llvm20WritableBinaryStream19checkOffsetForWriteEjj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x5d                  	// #93
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x34>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  34:	ldp	x9, x8, [x19, #16]
  38:	sub	x9, x9, x8
  3c:	cmp	x9, #0x6
  40:	b.hi	5c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x5c>  // b.pmore
  44:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x7                   	// #7
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  58:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  5c:	mov	w9, #0x6563                	// #25955
  60:	mov	w10, #0x7573                	// #30067
  64:	movk	w9, #0x7373, lsl #16
  68:	movk	w10, #0x6363, lsl #16
  6c:	stur	w9, [x8, #3]
  70:	str	w10, [x8]
  74:	ldr	x8, [x19, #24]
  78:	add	x8, x8, #0x7
  7c:	str	x8, [x19, #24]
  80:	mov	x0, x19
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	b	30 <_ZN4llvm11raw_ostreamlsEPKc+0x30>
  2c:	mov	x21, xzr
  30:	ldp	x8, x0, [x19, #16]
  34:	sub	x8, x8, x0
  38:	cmp	x21, x8
  3c:	b.ls	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.plast
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	mov	x2, x21
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	cbz	x21, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x1, x20
  64:	mov	x2, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x8, [x19, #24]
  70:	add	x8, x8, x21
  74:	str	x8, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  14:	ldr	x20, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	mov	x19, x0
  20:	add	x8, x8, #0x10
  24:	str	x8, [x0]
  28:	cbz	x20, ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>
  2c:	adrp	x21, 0 <__pthread_key_create>
  30:	ldr	x21, [x21]
  34:	add	x8, x20, #0x8
  38:	cbz	x21, 58 <_ZN4llvm18BinaryStreamWriterD0Ev+0x58>
  3c:	ldaxr	w9, [x8]
  40:	sub	w10, w9, #0x1
  44:	stlxr	w11, w10, [x8]
  48:	cbnz	w11, 3c <_ZN4llvm18BinaryStreamWriterD0Ev+0x3c>
  4c:	cmp	w9, #0x1
  50:	b.eq	6c <_ZN4llvm18BinaryStreamWriterD0Ev+0x6c>  // b.none
  54:	b	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>
  58:	ldr	w9, [x8]
  5c:	sub	w10, w9, #0x1
  60:	str	w10, [x8]
  64:	cmp	w9, #0x1
  68:	b.ne	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>  // b.any
  6c:	mov	x22, x20
  70:	ldr	x8, [x22], #12
  74:	mov	x0, x20
  78:	ldr	x8, [x8, #16]
  7c:	blr	x8
  80:	cbz	x21, c0 <_ZN4llvm18BinaryStreamWriterD0Ev+0xc0>
  84:	ldaxr	w8, [x22]
  88:	sub	w9, w8, #0x1
  8c:	stlxr	w10, w9, [x22]
  90:	cbnz	w10, 84 <_ZN4llvm18BinaryStreamWriterD0Ev+0x84>
  94:	cmp	w8, #0x1
  98:	b.ne	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>  // b.any
  9c:	ldr	x8, [x20]
  a0:	mov	x0, x20
  a4:	ldr	x8, [x8, #24]
  a8:	blr	x8
  ac:	mov	x0, x19
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldp	x22, x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	b	0 <_ZdlPv>
  c0:	ldr	w8, [x22]
  c4:	sub	w9, w8, #0x1
  c8:	str	w9, [x22]
  cc:	cmp	w8, #0x1
  d0:	b.eq	9c <_ZN4llvm18BinaryStreamWriterD0Ev+0x9c>  // b.none
  d4:	b	ac <_ZN4llvm18BinaryStreamWriterD0Ev+0xac>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZTVN4llvm11StringErrorE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x18
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3msf8MSFErrorD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x22, x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	sturb	wzr, [x29, #-24]
  18:	stp	xzr, xzr, [sp, #24]
  1c:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
  20:	ldr	x11, [x11]
  24:	sub	x9, x29, #0x28
  28:	mov	w10, #0x1                   	// #1
  2c:	str	w10, [sp, #40]
  30:	add	x22, x9, #0x10
  34:	add	x10, x11, #0x10
  38:	stp	x22, xzr, [x29, #-40]
  3c:	stp	x10, xzr, [sp, #8]
  40:	str	x9, [sp, #48]
  44:	ldr	x9, [x0]
  48:	add	x1, sp, #0x8
  4c:	mov	x19, x8
  50:	ldr	x9, [x9, #16]
  54:	blr	x9
  58:	ldr	x8, [sp, #32]
  5c:	ldr	x9, [sp, #16]
  60:	cmp	x8, x9
  64:	b.eq	70 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x70>  // b.none
  68:	add	x0, sp, #0x8
  6c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  70:	ldr	x8, [sp, #48]
  74:	add	x0, x19, #0x10
  78:	str	x0, [x19]
  7c:	ldp	x20, x21, [x8]
  80:	cbnz	x20, 88 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x88>
  84:	cbnz	x21, 110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  88:	cmp	x21, #0x10
  8c:	stur	x21, [x29, #-8]
  90:	b.cc	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>  // b.lo, b.ul, b.last
  94:	sub	x1, x29, #0x8
  98:	mov	x0, x19
  9c:	mov	x2, xzr
  a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  a4:	ldur	x8, [x29, #-8]
  a8:	str	x0, [x19]
  ac:	str	x8, [x19, #16]
  b0:	cbz	x21, d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  b4:	cmp	x21, #0x1
  b8:	b.ne	c8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xc8>  // b.any
  bc:	ldrb	w8, [x20]
  c0:	strb	w8, [x0]
  c4:	b	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  c8:	mov	x1, x20
  cc:	mov	x2, x21
  d0:	bl	0 <memcpy>
  d4:	ldur	x8, [x29, #-8]
  d8:	ldr	x9, [x19]
  dc:	add	x0, sp, #0x8
  e0:	str	x8, [x19, #8]
  e4:	strb	wzr, [x9, x8]
  e8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  ec:	ldur	x0, [x29, #-40]
  f0:	cmp	x0, x22
  f4:	b.eq	fc <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	ldp	x20, x19, [sp, #128]
 100:	ldp	x22, x21, [sp, #112]
 104:	ldp	x29, x30, [sp, #96]
 108:	add	sp, sp, #0x90
 10c:	ret
 110:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 114:	add	x0, x0, #0x0
 118:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x8, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x8, [x8]
   8:	cmp	x1, x8
   c:	b.eq	38 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x38>  // b.none
  10:	adrp	x8, 0 <_ZN4llvm11StringError2IDE>
  14:	ldr	x8, [x8]
  18:	adrp	x9, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  1c:	ldr	x9, [x9]
  20:	cmp	x1, x8
  24:	cset	w8, eq  // eq = none
  28:	cmp	x1, x9
  2c:	cset	w9, eq  // eq = none
  30:	orr	w0, w8, w9
  34:	ret
  38:	mov	w0, #0x1                   	// #1
  3c:	ret

Disassembly of section .text._ZN4llvm11StringErrorD2Ev:

0000000000000000 <_ZN4llvm11StringErrorD2Ev>:
   0:	adrp	x9, 0 <_ZTVN4llvm11StringErrorE>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x18
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm11StringErrorD2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #5
  30:	cmp	x8, #0x0
  34:	csinc	x8, x9, xzr, ne  // ne = any
  38:	adds	x8, x8, x9
  3c:	lsr	x10, x8, #58
  40:	cset	w9, cs  // cs = hs, nlast
  44:	cmp	x10, #0x0
  48:	cset	w10, ne  // ne = any
  4c:	orr	w9, w9, w10
  50:	cmp	w9, #0x0
  54:	mov	x9, #0x3ffffffffffffff     	// #288230376151711743
  58:	csel	x25, x9, x8, ne  // ne = any
  5c:	mov	x19, x0
  60:	lsl	x0, x25, #5
  64:	mov	x23, x2
  68:	mov	x21, x1
  6c:	bl	0 <_Znwm>
  70:	ldr	w8, [x23]
  74:	subs	x9, x21, x20
  78:	add	x9, x0, x9
  7c:	mov	x22, x0
  80:	str	w8, [x9]
  84:	ldur	q0, [x23, #8]
  88:	stur	q0, [x9, #8]
  8c:	ldr	x8, [x23, #24]
  90:	str	x8, [x9, #24]
  94:	mov	x8, x0
  98:	stp	xzr, xzr, [x23, #8]
  9c:	str	xzr, [x23, #24]
  a0:	b.eq	d8 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd8>  // b.none
  a4:	mov	x9, x20
  a8:	ldr	w10, [x9]
  ac:	str	w10, [x8]
  b0:	ldur	q0, [x9, #8]
  b4:	stur	q0, [x8, #8]
  b8:	ldr	x10, [x9, #24]
  bc:	str	x10, [x8, #24]
  c0:	stp	xzr, xzr, [x9, #8]
  c4:	str	xzr, [x9, #24]
  c8:	add	x9, x9, #0x20
  cc:	cmp	x9, x21
  d0:	add	x8, x8, #0x20
  d4:	b.ne	a8 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa8>  // b.any
  d8:	cmp	x24, x21
  dc:	add	x23, x8, #0x20
  e0:	b.eq	114 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x114>  // b.none
  e4:	ldr	w8, [x21]
  e8:	str	w8, [x23]
  ec:	ldur	q0, [x21, #8]
  f0:	stur	q0, [x23, #8]
  f4:	ldr	x8, [x21, #24]
  f8:	str	x8, [x23, #24]
  fc:	stp	xzr, xzr, [x21, #8]
 100:	str	xzr, [x21, #24]
 104:	add	x21, x21, #0x20
 108:	cmp	x21, x24
 10c:	add	x23, x23, #0x20
 110:	b.ne	e4 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe4>  // b.any
 114:	cbz	x20, 120 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #5
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldr	x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	198 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x198>  // b.none
  24:	ldp	x24, x8, [x0, #8]
  28:	sub	x22, x3, x2
  2c:	asr	x26, x22, #2
  30:	mov	x21, x2
  34:	sub	x8, x8, x24
  38:	mov	x19, x1
  3c:	mov	x20, x0
  40:	cmp	x26, x8, asr #2
  44:	b.ls	a4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xa4>  // b.plast
  48:	ldr	x23, [x20]
  4c:	sub	x8, x24, x23
  50:	asr	x9, x8, #2
  54:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  58:	sub	x10, x8, x9
  5c:	cmp	x10, x26
  60:	b.cc	200 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x200>  // b.lo, b.ul, b.last
  64:	cmp	x9, x26
  68:	csel	x10, x26, x9, cc  // cc = lo, ul, last
  6c:	adds	x9, x10, x9
  70:	lsr	x11, x9, #61
  74:	cset	w10, cs  // cs = hs, nlast
  78:	cmp	x11, #0x0
  7c:	cset	w11, ne  // ne = any
  80:	orr	w10, w10, w11
  84:	cmp	w10, #0x0
  88:	csel	x27, x8, x9, ne  // ne = any
  8c:	cbz	x27, 128 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x128>
  90:	lsl	x0, x27, #2
  94:	bl	0 <_Znwm>
  98:	ldr	x23, [x20]
  9c:	mov	x24, x0
  a0:	b	12c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x12c>
  a4:	sub	x23, x24, x19
  a8:	asr	x25, x23, #2
  ac:	subs	x27, x26, x25
  b0:	b.cs	d4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xd4>  // b.hs, b.nlast
  b4:	sub	x23, x24, x26, lsl #2
  b8:	cbz	x22, 1b4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1b4>
  bc:	mov	x0, x24
  c0:	mov	x1, x23
  c4:	mov	x2, x22
  c8:	bl	0 <memmove>
  cc:	ldr	x8, [x20, #8]
  d0:	b	1b8 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1b8>
  d4:	add	x22, x21, x25, lsl #2
  d8:	subs	x2, x3, x22
  dc:	b.eq	f0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xf0>  // b.none
  e0:	mov	x0, x24
  e4:	mov	x1, x22
  e8:	bl	0 <memmove>
  ec:	ldr	x24, [x20, #8]
  f0:	add	x0, x24, x27, lsl #2
  f4:	str	x0, [x20, #8]
  f8:	cbz	x23, 10c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x10c>
  fc:	mov	x1, x19
 100:	mov	x2, x23
 104:	bl	0 <memmove>
 108:	ldr	x0, [x20, #8]
 10c:	add	x8, x0, x25, lsl #2
 110:	subs	x2, x22, x21
 114:	str	x8, [x20, #8]
 118:	b.eq	198 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x198>  // b.none
 11c:	mov	x0, x19
 120:	mov	x1, x21
 124:	b	1e4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1e4>
 128:	mov	x24, xzr
 12c:	subs	x2, x19, x23
 130:	asr	x25, x2, #2
 134:	b.eq	144 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x144>  // b.none
 138:	mov	x0, x24
 13c:	mov	x1, x23
 140:	bl	0 <memmove>
 144:	add	x25, x24, x25, lsl #2
 148:	cbz	x22, 15c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x15c>
 14c:	mov	x0, x25
 150:	mov	x1, x21
 154:	mov	x2, x22
 158:	bl	0 <memmove>
 15c:	ldr	x8, [x20, #8]
 160:	add	x21, x25, x26, lsl #2
 164:	subs	x2, x8, x19
 168:	asr	x22, x2, #2
 16c:	b.eq	17c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x17c>  // b.none
 170:	mov	x0, x21
 174:	mov	x1, x19
 178:	bl	0 <memmove>
 17c:	add	x19, x21, x22, lsl #2
 180:	cbz	x23, 18c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x18c>
 184:	mov	x0, x23
 188:	bl	0 <_ZdlPv>
 18c:	add	x8, x24, x27, lsl #2
 190:	stp	x24, x19, [x20]
 194:	str	x8, [x20, #16]
 198:	ldp	x20, x19, [sp, #80]
 19c:	ldp	x22, x21, [sp, #64]
 1a0:	ldp	x24, x23, [sp, #48]
 1a4:	ldp	x26, x25, [sp, #32]
 1a8:	ldr	x27, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #96
 1b0:	ret
 1b4:	mov	x8, x24
 1b8:	add	x8, x8, x26, lsl #2
 1bc:	subs	x2, x23, x19
 1c0:	str	x8, [x20, #8]
 1c4:	b.eq	1d4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1d4>  // b.none
 1c8:	sub	x0, x24, x2
 1cc:	mov	x1, x19
 1d0:	bl	0 <memmove>
 1d4:	cbz	x22, 198 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x198>
 1d8:	mov	x0, x19
 1dc:	mov	x1, x21
 1e0:	mov	x2, x22
 1e4:	ldp	x20, x19, [sp, #80]
 1e8:	ldp	x22, x21, [sp, #64]
 1ec:	ldp	x24, x23, [sp, #48]
 1f0:	ldp	x26, x25, [sp, #32]
 1f4:	ldr	x27, [sp, #16]
 1f8:	ldp	x29, x30, [sp], #96
 1fc:	b	0 <memmove>
 200:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
 204:	add	x0, x0, #0x0
 208:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x10, [x0, #80]
  18:	ldr	x8, [x0]
  1c:	mov	w9, #0x1                   	// #1
  20:	lsl	x9, x9, x2
  24:	sub	x24, x9, #0x1
  28:	add	x12, x10, x1
  2c:	add	x10, x24, x8
  30:	neg	x23, x9
  34:	and	x10, x10, x23
  38:	sub	x10, x10, x8
  3c:	adds	x11, x10, x1
  40:	str	x12, [x0, #80]
  44:	b.cs	158 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x158>  // b.hs, b.nlast
  48:	ldr	x12, [x0, #8]
  4c:	mov	x20, x1
  50:	mov	x19, x0
  54:	sub	x12, x12, x8
  58:	cmp	x11, x12
  5c:	b.ls	f8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xf8>  // b.plast
  60:	add	x8, x20, x9
  64:	sub	x21, x8, #0x1
  68:	cmp	x21, #0x1, lsl #12
  6c:	b.ls	104 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x104>  // b.plast
  70:	mov	x0, x21
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbnz	x0, 90 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x90>
  80:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	ldp	w8, w9, [x19, #72]
  94:	cmp	w8, w9
  98:	b.cs	144 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x144>  // b.hs, b.nlast
  9c:	ldr	x9, [x19, #64]
  a0:	add	x8, x9, w8, uxtw #4
  a4:	stp	x22, x21, [x8]
  a8:	ldp	w8, w9, [x19, #72]
  ac:	cmp	w8, w9
  b0:	b.cs	198 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x198>  // b.hs, b.nlast
  b4:	add	w9, w8, #0x1
  b8:	adds	x8, x24, x22
  bc:	str	w9, [x19, #72]
  c0:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
  c4:	and	x0, x8, x23
  c8:	add	x8, x0, x20
  cc:	add	x9, x21, x22
  d0:	cmp	x8, x9
  d4:	b.ls	130 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x130>  // b.plast
  d8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  dc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0xfb                  	// #251
  f4:	bl	0 <__assert_fail>
  f8:	add	x0, x8, x10
  fc:	add	x8, x0, x20
 100:	b	12c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x12c>
 104:	mov	x0, x19
 108:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 10c:	ldr	x8, [x19]
 110:	adds	x8, x24, x8
 114:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
 118:	ldr	x9, [x19, #8]
 11c:	and	x0, x8, x23
 120:	add	x8, x0, x20
 124:	cmp	x8, x9
 128:	b.hi	1b8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1b8>  // b.pmore
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	add	x0, x19, #0x40
 148:	mov	x1, xzr
 14c:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 150:	ldr	w8, [x19, #72]
 154:	b	9c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x9c>
 158:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 15c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 160:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0xdc                  	// #220
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 17c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 180:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0xbb                  	// #187
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 19c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1bc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x106                 	// #262
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w22, [x0, #24]
  14:	mov	w8, #0x1e                  	// #30
  18:	mov	x19, x0
  1c:	lsr	x9, x22, #7
  20:	cmp	x9, #0x1e
  24:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  28:	mov	w9, #0x1000                	// #4096
  2c:	lsl	x20, x9, x8
  30:	mov	x0, x20
  34:	bl	0 <malloc>
  38:	mov	x21, x0
  3c:	cbnz	x0, 54 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x54>
  40:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  44:	add	x0, x0, #0x0
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	ldr	w22, [x19, #24]
  54:	ldr	w8, [x19, #28]
  58:	cmp	w22, w8
  5c:	b.cs	94 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x94>  // b.hs, b.nlast
  60:	ldr	x8, [x19, #16]
  64:	str	x21, [x8, w22, uxtw #3]
  68:	ldp	w8, w9, [x19, #24]
  6c:	cmp	w8, w9
  70:	b.cs	b0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0xb0>  // b.hs, b.nlast
  74:	add	w8, w8, #0x1
  78:	add	x9, x21, x20
  7c:	str	w8, [x19, #24]
  80:	stp	x21, x9, [x19]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x10
  98:	add	x1, x0, #0x10
  9c:	mov	w3, #0x8                   	// #8
  a0:	mov	x2, xzr
  a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a8:	ldr	w22, [x19, #24]
  ac:	b	60 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x60>
  b0:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b8:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #88]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #88]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #88]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cbz	x1, 114 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x114>
  1c:	mov	x22, x0
  20:	mov	x24, x0
  24:	ldr	x21, [x22, #8]!
  28:	ldr	x26, [x0]
  2c:	ldr	x8, [x24, #16]!
  30:	mov	x19, x1
  34:	mov	x20, x0
  38:	sub	x8, x8, x21
  3c:	cmp	x1, x8, asr #4
  40:	b.ls	9c <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x9c>  // b.plast
  44:	sub	x8, x21, x26
  48:	asr	x23, x8, #4
  4c:	eor	x8, x23, #0x7ffffffffffffff
  50:	cmp	x8, x19
  54:	b.cc	12c <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x12c>  // b.lo, b.ul, b.last
  58:	cmp	x23, x19
  5c:	csel	x8, x19, x23, cc  // cc = lo, ul, last
  60:	adds	x8, x8, x23
  64:	lsr	x10, x8, #59
  68:	cset	w9, cs  // cs = hs, nlast
  6c:	cmp	x10, #0x0
  70:	cset	w10, ne  // ne = any
  74:	orr	w9, w9, w10
  78:	cmp	w9, #0x0
  7c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  80:	csel	x25, x9, x8, ne  // ne = any
  84:	cbz	x25, bc <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xbc>
  88:	lsl	x0, x25, #4
  8c:	bl	0 <_Znwm>
  90:	ldp	x26, x21, [x20]
  94:	mov	x22, x0
  98:	b	c0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xc0>
  9c:	lsl	x19, x19, #4
  a0:	mov	x0, x21
  a4:	mov	w1, wzr
  a8:	mov	x2, x19
  ac:	bl	0 <memset>
  b0:	add	x8, x21, x19
  b4:	mov	x24, x22
  b8:	b	110 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x110>
  bc:	mov	x22, xzr
  c0:	add	x23, x22, x23, lsl #4
  c4:	lsl	x2, x19, #4
  c8:	mov	x0, x23
  cc:	mov	w1, wzr
  d0:	bl	0 <memset>
  d4:	cmp	x26, x21
  d8:	b.eq	f8 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xf8>  // b.none
  dc:	mov	x8, x22
  e0:	ldr	q0, [x26], #16
  e4:	cmp	x21, x26
  e8:	str	q0, [x8]
  ec:	add	x8, x8, #0x10
  f0:	b.ne	e0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xe0>  // b.any
  f4:	ldr	x21, [x20]
  f8:	cbz	x21, 104 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x104>
  fc:	mov	x0, x21
 100:	bl	0 <_ZdlPv>
 104:	add	x8, x23, x19, lsl #4
 108:	stp	x22, x8, [x20]
 10c:	add	x8, x22, x25, lsl #4
 110:	str	x8, [x24]
 114:	ldp	x20, x19, [sp, #64]
 118:	ldp	x22, x21, [sp, #48]
 11c:	ldp	x24, x23, [sp, #32]
 120:	ldp	x26, x25, [sp, #16]
 124:	ldp	x29, x30, [sp], #80
 128:	ret
 12c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>
 130:	add	x0, x0, #0x0
 134:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

MSFCommon.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldp	x9, x11, [x0]
  14:	mov	x10, #0x694d                	// #26957
  18:	mov	x12, #0x2074                	// #8308
  1c:	movk	x10, #0x7263, lsl #16
  20:	movk	x12, #0x2f43, lsl #16
  24:	movk	x10, #0x736f, lsl #32
  28:	movk	x12, #0x2b43, lsl #32
  2c:	movk	x10, #0x666f, lsl #48
  30:	movk	x12, #0x202b, lsl #48
  34:	eor	x9, x9, x10
  38:	ldp	x10, x13, [x0, #16]
  3c:	eor	x11, x11, x12
  40:	mov	x12, #0x534d                	// #21325
  44:	movk	x12, #0x2046, lsl #16
  48:	movk	x12, #0x2e37, lsl #32
  4c:	movk	x12, #0x3030, lsl #48
  50:	eor	x10, x10, x12
  54:	mov	x12, #0xa0d                 	// #2573
  58:	movk	x12, #0x441a, lsl #16
  5c:	movk	x12, #0x53, lsl #32
  60:	eor	x12, x13, x12
  64:	orr	x9, x9, x11
  68:	orr	x10, x10, x12
  6c:	orr	x9, x9, x10
  70:	mov	x19, x8
  74:	cbz	x9, 98 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x98>
  78:	mov	w0, #0x40                  	// #64
  7c:	bl	0 <_Znwm>
  80:	mov	x20, x0
  84:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  88:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
  8c:	mov	x2, x0
  90:	add	x8, x8, #0x0
  94:	b	1d0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1d0>
  98:	ldr	w8, [x0, #32]
  9c:	sub	w9, w8, #0x200
  a0:	ror	w9, w9, #9
  a4:	cmp	w9, #0x7
  a8:	b.hi	124 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x124>  // b.pmore
  ac:	mov	w10, #0x1                   	// #1
  b0:	lsl	w9, w10, w9
  b4:	mov	w10, #0x8b                  	// #139
  b8:	tst	w9, w10
  bc:	b.eq	124 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x124>  // b.none
  c0:	ldr	w9, [x0, #44]
  c4:	tst	w9, #0x3
  c8:	b.eq	ec <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xec>  // b.none
  cc:	mov	w0, #0x40                  	// #64
  d0:	bl	0 <_Znwm>
  d4:	mov	x20, x0
  d8:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  dc:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
  e0:	mov	x2, x0
  e4:	add	x8, x8, #0x0
  e8:	b	1d0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1d0>
  ec:	cbz	w8, 214 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x214>
  f0:	add	x9, x8, x9
  f4:	sub	x9, x9, #0x1
  f8:	udiv	x9, x9, x8
  fc:	cmp	x9, x8, lsr #2
 100:	b.ls	144 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x144>  // b.plast
 104:	mov	w0, #0x40                  	// #64
 108:	bl	0 <_Znwm>
 10c:	mov	x20, x0
 110:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 114:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 118:	mov	x2, x0
 11c:	add	x8, x8, #0x0
 120:	b	1d0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1d0>
 124:	mov	w0, #0x40                  	// #64
 128:	bl	0 <_Znwm>
 12c:	mov	x20, x0
 130:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 134:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 138:	mov	x2, x0
 13c:	add	x8, x8, #0x0
 140:	b	1d0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1d0>
 144:	ldr	w8, [x0, #52]
 148:	cbz	w8, 174 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x174>
 14c:	ldr	w9, [x0, #40]
 150:	cmp	w8, w9
 154:	b.cs	194 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x194>  // b.hs, b.nlast
 158:	ldr	w8, [x0, #36]
 15c:	sub	w8, w8, #0x1
 160:	cmp	w8, #0x2
 164:	b.cs	1b4 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1b4>  // b.hs, b.nlast
 168:	mov	w8, #0x1                   	// #1
 16c:	str	x8, [x19]
 170:	b	204 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x204>
 174:	mov	w0, #0x40                  	// #64
 178:	bl	0 <_Znwm>
 17c:	mov	x20, x0
 180:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 184:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 188:	mov	x2, x0
 18c:	add	x8, x8, #0x0
 190:	b	1d0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1d0>
 194:	mov	w0, #0x40                  	// #64
 198:	bl	0 <_Znwm>
 19c:	mov	x20, x0
 1a0:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 1a4:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 1a8:	mov	x2, x0
 1ac:	add	x8, x8, #0x0
 1b0:	b	1d0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1d0>
 1b4:	mov	w0, #0x40                  	// #64
 1b8:	bl	0 <_Znwm>
 1bc:	mov	x20, x0
 1c0:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
 1c4:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 1c8:	mov	x2, x0
 1cc:	add	x8, x8, #0x0
 1d0:	mov	w9, #0x103                 	// #259
 1d4:	add	x3, sp, #0x8
 1d8:	mov	w1, #0x5                   	// #5
 1dc:	mov	x0, x20
 1e0:	stp	x8, xzr, [sp, #8]
 1e4:	strh	w9, [sp, #24]
 1e8:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
 1ec:	adrp	x8, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 1f0:	ldr	x8, [x8]
 1f4:	orr	x9, x20, #0x1
 1f8:	str	x9, [x19]
 1fc:	add	x8, x8, #0x10
 200:	str	x8, [x20]
 204:	ldp	x20, x19, [sp, #48]
 208:	ldp	x29, x30, [sp, #32]
 20c:	add	sp, sp, #0x40
 210:	ret
 214:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 218:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 21c:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 220:	add	x0, x0, #0x0
 224:	add	x1, x1, #0x0
 228:	add	x3, x3, #0x0
 22c:	mov	w2, #0x2ce                 	// #718
 230:	bl	0 <__assert_fail>

0000000000000234 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>:
 234:	sub	sp, sp, #0x80
 238:	stp	x29, x30, [sp, #32]
 23c:	stp	x28, x27, [sp, #48]
 240:	stp	x26, x25, [sp, #64]
 244:	stp	x24, x23, [sp, #80]
 248:	stp	x22, x21, [sp, #96]
 24c:	stp	x20, x19, [sp, #112]
 250:	add	x29, sp, #0x20
 254:	mov	x19, x8
 258:	str	xzr, [x8, #8]!
 25c:	stp	xzr, xzr, [x8, #8]
 260:	ldr	x9, [x0]
 264:	stur	x8, [x29, #-8]
 268:	ldp	w8, w10, [x9, #32]
 26c:	ldr	w11, [x9, #40]
 270:	sub	w12, w10, #0x1
 274:	cmp	w12, #0x2
 278:	tbz	w2, #0, 28c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x58>
 27c:	b.cs	43c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x208>  // b.hs, b.nlast
 280:	mov	w12, #0x3                   	// #3
 284:	sub	w12, w12, w10
 288:	b	294 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x60>
 28c:	mov	w12, w10
 290:	b.cs	43c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x208>  // b.hs, b.nlast
 294:	tbz	w1, #0, 2ac <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x78>
 298:	cbz	w8, 45c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x228>
 29c:	sub	w12, w11, w12
 2a0:	mov	x11, x8
 2a4:	mov	x13, x8
 2a8:	b	2b8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x84>
 2ac:	lsl	w12, w8, #3
 2b0:	cbz	w12, 45c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x228>
 2b4:	mov	x13, x12
 2b8:	add	x11, x11, x12
 2bc:	sub	x11, x11, #0x1
 2c0:	udiv	x11, x11, x13
 2c4:	cbz	w11, 3f4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1c0>
 2c8:	mov	w8, #0x3                   	// #3
 2cc:	tst	w2, #0x1
 2d0:	sub	w8, w8, w10
 2d4:	mov	x26, xzr
 2d8:	mov	x22, xzr
 2dc:	mov	w28, #0x1                   	// #1
 2e0:	csel	w20, w8, w10, ne  // ne = any
 2e4:	str	w1, [sp, #4]
 2e8:	stp	x11, x0, [sp, #8]
 2ec:	cmp	x26, x22
 2f0:	b.eq	300 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xcc>  // b.none
 2f4:	str	w20, [x26], #4
 2f8:	str	x26, [x19, #16]
 2fc:	b	3c8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x194>
 300:	ldur	x8, [x29, #-8]
 304:	mov	x9, #0x7ffffffffffffffc    	// #9223372036854775804
 308:	ldr	x23, [x8]
 30c:	sub	x8, x26, x23
 310:	cmp	x8, x9
 314:	b.eq	430 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1fc>  // b.none
 318:	asr	x9, x8, #2
 31c:	cmp	x8, #0x0
 320:	csinc	x8, x9, xzr, ne  // ne = any
 324:	adds	x8, x8, x9
 328:	lsr	x10, x8, #61
 32c:	cset	w9, cs  // cs = hs, nlast
 330:	cmp	x10, #0x0
 334:	cset	w10, ne  // ne = any
 338:	orr	w9, w9, w10
 33c:	cmp	w9, #0x0
 340:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
 344:	sub	x25, x22, x23
 348:	csel	x21, x9, x8, ne  // ne = any
 34c:	asr	x27, x25, #2
 350:	cbz	x21, 364 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x130>
 354:	lsl	x0, x21, #2
 358:	bl	0 <_Znwm>
 35c:	mov	x24, x0
 360:	b	368 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x134>
 364:	mov	x24, xzr
 368:	add	x27, x24, x27, lsl #2
 36c:	cmp	x25, #0x1
 370:	str	w20, [x27]
 374:	b.lt	388 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x154>  // b.tstop
 378:	mov	x0, x24
 37c:	mov	x1, x23
 380:	mov	x2, x25
 384:	bl	0 <memmove>
 388:	sub	x2, x26, x22
 38c:	add	x25, x27, #0x4
 390:	cmp	x2, #0x1
 394:	asr	x26, x2, #2
 398:	b.lt	3a8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x174>  // b.tstop
 39c:	mov	x0, x25
 3a0:	mov	x1, x22
 3a4:	bl	0 <memmove>
 3a8:	add	x26, x25, x26, lsl #2
 3ac:	cbz	x23, 3b8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x184>
 3b0:	mov	x0, x23
 3b4:	bl	0 <_ZdlPv>
 3b8:	ldp	x11, x0, [sp, #8]
 3bc:	add	x8, x24, x21, lsl #2
 3c0:	stp	x24, x26, [x19, #8]
 3c4:	str	x8, [x19, #24]
 3c8:	ldr	x9, [x0]
 3cc:	cmp	w28, w11
 3d0:	ldr	w8, [x9, #32]
 3d4:	b.eq	3f0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1bc>  // b.none
 3d8:	ldr	x22, [x19, #24]
 3dc:	add	w20, w8, w20
 3e0:	add	w28, w28, #0x1
 3e4:	cmp	x26, x22
 3e8:	b.ne	2f4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xc0>  // b.any
 3ec:	b	300 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xcc>
 3f0:	ldr	w1, [sp, #4]
 3f4:	tbz	w1, #0, 400 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1cc>
 3f8:	mul	w8, w8, w11
 3fc:	b	40c <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1d8>
 400:	ldr	w8, [x9, #40]
 404:	add	x8, x8, #0x7
 408:	lsr	x8, x8, #3
 40c:	str	w8, [x19]
 410:	ldp	x20, x19, [sp, #112]
 414:	ldp	x22, x21, [sp, #96]
 418:	ldp	x24, x23, [sp, #80]
 41c:	ldp	x26, x25, [sp, #64]
 420:	ldp	x28, x27, [sp, #48]
 424:	ldp	x29, x30, [sp, #32]
 428:	add	sp, sp, #0x80
 42c:	ret
 430:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 434:	add	x0, x0, #0x0
 438:	bl	0 <_ZSt20__throw_length_errorPKc>
 43c:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 440:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 444:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 448:	add	x0, x0, #0x0
 44c:	add	x1, x1, #0x0
 450:	add	x3, x3, #0x0
 454:	mov	w2, #0x37                  	// #55
 458:	bl	0 <__assert_fail>
 45c:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 460:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 464:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 468:	add	x0, x0, #0x0
 46c:	add	x1, x1, #0x0
 470:	add	x3, x3, #0x0
 474:	mov	w2, #0x2ce                 	// #718
 478:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZTVN4llvm11StringErrorE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x18
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3msf8MSFErrorD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x22, x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	sturb	wzr, [x29, #-24]
  18:	stp	xzr, xzr, [sp, #24]
  1c:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
  20:	ldr	x11, [x11]
  24:	sub	x9, x29, #0x28
  28:	mov	w10, #0x1                   	// #1
  2c:	str	w10, [sp, #40]
  30:	add	x22, x9, #0x10
  34:	add	x10, x11, #0x10
  38:	stp	x22, xzr, [x29, #-40]
  3c:	stp	x10, xzr, [sp, #8]
  40:	str	x9, [sp, #48]
  44:	ldr	x9, [x0]
  48:	add	x1, sp, #0x8
  4c:	mov	x19, x8
  50:	ldr	x9, [x9, #16]
  54:	blr	x9
  58:	ldr	x8, [sp, #32]
  5c:	ldr	x9, [sp, #16]
  60:	cmp	x8, x9
  64:	b.eq	70 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x70>  // b.none
  68:	add	x0, sp, #0x8
  6c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  70:	ldr	x8, [sp, #48]
  74:	add	x0, x19, #0x10
  78:	str	x0, [x19]
  7c:	ldp	x20, x21, [x8]
  80:	cbnz	x20, 88 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x88>
  84:	cbnz	x21, 110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  88:	cmp	x21, #0x10
  8c:	stur	x21, [x29, #-8]
  90:	b.cc	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>  // b.lo, b.ul, b.last
  94:	sub	x1, x29, #0x8
  98:	mov	x0, x19
  9c:	mov	x2, xzr
  a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  a4:	ldur	x8, [x29, #-8]
  a8:	str	x0, [x19]
  ac:	str	x8, [x19, #16]
  b0:	cbz	x21, d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  b4:	cmp	x21, #0x1
  b8:	b.ne	c8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xc8>  // b.any
  bc:	ldrb	w8, [x20]
  c0:	strb	w8, [x0]
  c4:	b	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  c8:	mov	x1, x20
  cc:	mov	x2, x21
  d0:	bl	0 <memcpy>
  d4:	ldur	x8, [x29, #-8]
  d8:	ldr	x9, [x19]
  dc:	add	x0, sp, #0x8
  e0:	str	x8, [x19, #8]
  e4:	strb	wzr, [x9, x8]
  e8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  ec:	ldur	x0, [x29, #-40]
  f0:	cmp	x0, x22
  f4:	b.eq	fc <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	ldp	x20, x19, [sp, #128]
 100:	ldp	x22, x21, [sp, #112]
 104:	ldp	x29, x30, [sp, #96]
 108:	add	sp, sp, #0x90
 10c:	ret
 110:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 114:	add	x0, x0, #0x0
 118:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x8, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x8, [x8]
   8:	cmp	x1, x8
   c:	b.eq	38 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv+0x38>  // b.none
  10:	adrp	x8, 0 <_ZN4llvm11StringError2IDE>
  14:	ldr	x8, [x8]
  18:	adrp	x9, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  1c:	ldr	x9, [x9]
  20:	cmp	x1, x8
  24:	cset	w8, eq  // eq = none
  28:	cmp	x1, x9
  2c:	cset	w9, eq  // eq = none
  30:	orr	w0, w8, w9
  34:	ret
  38:	mov	w0, #0x1                   	// #1
  3c:	ret

Disassembly of section .text._ZN4llvm11StringErrorD2Ev:

0000000000000000 <_ZN4llvm11StringErrorD2Ev>:
   0:	adrp	x9, 0 <_ZTVN4llvm11StringErrorE>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x18
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm11StringErrorD2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

MSFError.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf14MSFErrCategoryEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x8, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
   c:	add	x8, x8, #0x0
  10:	ldar	x8, [x8]
  14:	cbnz	x8, 34 <_ZN4llvm3msf14MSFErrCategoryEv+0x34>
  18:	adrp	x0, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
  1c:	adrp	x1, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	adrp	x2, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
  34:	adrp	x8, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
  38:	ldr	x0, [x8]
  3c:	ldp	x29, x30, [sp], #16
  40:	ret

0000000000000044 <_ZN4llvm14object_creatorIN12_GLOBAL__N_116MSFErrorCategoryEE4callEv>:
  44:	stp	x29, x30, [sp, #-16]!
  48:	mov	x29, sp
  4c:	mov	w0, #0x8                   	// #8
  50:	bl	0 <_Znwm>
  54:	adrp	x8, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
  58:	add	x8, x8, #0x0
  5c:	str	x8, [x0]
  60:	ldp	x29, x30, [sp], #16
  64:	ret

0000000000000068 <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv>:
  68:	cbz	x0, 78 <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv+0x10>
  6c:	ldr	x8, [x0]
  70:	ldr	x1, [x8, #8]
  74:	br	x1
  78:	ret

000000000000007c <_ZN12_GLOBAL__N_116MSFErrorCategoryD0Ev>:
  7c:	stp	x29, x30, [sp, #-32]!
  80:	str	x19, [sp, #16]
  84:	mov	x29, sp
  88:	mov	x19, x0
  8c:	bl	0 <_ZNSt3_V214error_categoryD2Ev>
  90:	mov	x0, x19
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	b	0 <_ZdlPv>

00000000000000a0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>:
  a0:	adrp	x0, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
  a4:	add	x0, x0, #0x0
  a8:	ret

00000000000000ac <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei>:
  ac:	stp	x29, x30, [sp, #-32]!
  b0:	str	x19, [sp, #16]
  b4:	mov	x29, sp
  b8:	sub	w9, w1, #0x1
  bc:	cmp	w9, #0x5
  c0:	b.hi	2a0 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei+0x1f4>  // b.pmore
  c4:	mov	x19, x8
  c8:	adrp	x8, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
  cc:	add	x8, x8, #0x0
  d0:	adr	x10, e0 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei+0x34>
  d4:	ldrb	w11, [x8, x9]
  d8:	add	x10, x10, x11, lsl #2
  dc:	br	x10
  e0:	add	x8, x19, #0x10
  e4:	mov	w9, #0x1e                  	// #30
  e8:	add	x1, x29, #0x18
  ec:	mov	x0, x19
  f0:	mov	x2, xzr
  f4:	str	x8, [x19]
  f8:	str	x9, [x29, #24]
  fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 100:	adrp	x9, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 104:	add	x9, x9, #0x0
 108:	ldr	x8, [x29, #24]
 10c:	ldur	q0, [x9, #14]
 110:	ldr	q1, [x9]
 114:	str	x0, [x19]
 118:	str	x8, [x19, #16]
 11c:	stur	q0, [x0, #14]
 120:	b	284 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei+0x1d8>
 124:	add	x8, x19, #0x10
 128:	mov	w9, #0x24                  	// #36
 12c:	add	x1, x29, #0x18
 130:	mov	x0, x19
 134:	mov	x2, xzr
 138:	str	x8, [x19]
 13c:	str	x9, [x29, #24]
 140:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 144:	adrp	x9, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 148:	add	x9, x9, #0x0
 14c:	ldr	x8, [x29, #24]
 150:	ldp	q0, q1, [x9]
 154:	mov	w9, #0x616d                	// #24941
 158:	str	x0, [x19]
 15c:	movk	w9, #0x2e74, lsl #16
 160:	b	234 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei+0x188>
 164:	add	x8, x19, #0x10
 168:	mov	w9, #0x25                  	// #37
 16c:	add	x1, x29, #0x18
 170:	mov	x0, x19
 174:	mov	x2, xzr
 178:	str	x8, [x19]
 17c:	str	x9, [x29, #24]
 180:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 184:	adrp	x9, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 188:	add	x9, x9, #0x0
 18c:	ldr	x8, [x29, #24]
 190:	ldur	x10, [x9, #29]
 194:	ldp	q0, q1, [x9]
 198:	str	x0, [x19]
 19c:	str	x8, [x19, #16]
 1a0:	stur	x10, [x0, #29]
 1a4:	b	23c <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei+0x190>
 1a8:	add	x8, x19, #0x10
 1ac:	mov	w9, #0x45                  	// #69
 1b0:	add	x1, x29, #0x18
 1b4:	mov	x0, x19
 1b8:	mov	x2, xzr
 1bc:	str	x8, [x19]
 1c0:	str	x9, [x29, #24]
 1c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1c8:	adrp	x9, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 1cc:	add	x9, x9, #0x0
 1d0:	ldr	x8, [x29, #24]
 1d4:	ldp	q0, q1, [x9]
 1d8:	ldur	x10, [x9, #61]
 1dc:	ldp	q2, q3, [x9, #32]
 1e0:	str	x0, [x19]
 1e4:	str	x8, [x19, #16]
 1e8:	stur	x10, [x0, #61]
 1ec:	stp	q2, q3, [x0, #32]
 1f0:	stp	q0, q1, [x0]
 1f4:	b	288 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei+0x1dc>
 1f8:	add	x8, x19, #0x10
 1fc:	mov	w9, #0x24                  	// #36
 200:	add	x1, x29, #0x18
 204:	mov	x0, x19
 208:	mov	x2, xzr
 20c:	str	x8, [x19]
 210:	str	x9, [x29, #24]
 214:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 218:	adrp	x9, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 21c:	add	x9, x9, #0x0
 220:	ldr	x8, [x29, #24]
 224:	ldp	q0, q1, [x9]
 228:	mov	w9, #0x7369                	// #29545
 22c:	movk	w9, #0x2e74, lsl #16
 230:	str	x0, [x19]
 234:	str	x8, [x19, #16]
 238:	str	w9, [x0, #32]
 23c:	stp	q0, q1, [x0]
 240:	b	288 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageB5cxx11Ei+0x1dc>
 244:	add	x8, x19, #0x10
 248:	mov	w9, #0x1c                  	// #28
 24c:	add	x1, x29, #0x18
 250:	mov	x0, x19
 254:	mov	x2, xzr
 258:	str	x8, [x19]
 25c:	str	x9, [x29, #24]
 260:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 264:	adrp	x9, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 268:	add	x9, x9, #0x0
 26c:	ldr	x8, [x29, #24]
 270:	ldur	q0, [x9, #12]
 274:	ldr	q1, [x9]
 278:	str	x0, [x19]
 27c:	str	x8, [x19, #16]
 280:	stur	q0, [x0, #12]
 284:	str	q1, [x0]
 288:	ldr	x9, [x19]
 28c:	str	x8, [x19, #8]
 290:	strb	wzr, [x9, x8]
 294:	ldr	x19, [sp, #16]
 298:	ldp	x29, x30, [sp], #32
 29c:	ret
 2a0:	adrp	x0, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 2a4:	adrp	x1, 0 <_ZN4llvm3msf14MSFErrCategoryEv>
 2a8:	add	x0, x0, #0x0
 2ac:	add	x1, x1, #0x0
 2b0:	mov	w2, #0x27                  	// #39
 2b4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
