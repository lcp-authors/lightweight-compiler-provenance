
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Glob.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001838 <_init>:
    1838:	stp	x29, x30, [sp, #-16]!
    183c:	mov	x29, sp
    1840:	bl	1c70 <call_weak_fn>
    1844:	ldp	x29, x30, [sp], #16
    1848:	ret

Disassembly of section .plt:

0000000000001850 <.plt>:
    1850:	stp	x16, x30, [sp, #-16]!
    1854:	adrp	x16, 17000 <__FRAME_END__+0x10204>
    1858:	ldr	x17, [x16, #4088]
    185c:	add	x16, x16, #0xff8
    1860:	br	x17
    1864:	nop
    1868:	nop
    186c:	nop

0000000000001870 <memcpy@plt>:
    1870:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16]
    1878:	add	x16, x16, #0x0
    187c:	br	x17

0000000000001880 <Perl_sv_2iv_flags@plt>:
    1880:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #8]
    1888:	add	x16, x16, #0x8
    188c:	br	x17

0000000000001890 <strlen@plt>:
    1890:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #16]
    1898:	add	x16, x16, #0x10
    189c:	br	x17

00000000000018a0 <Perl_stack_grow@plt>:
    18a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #24]
    18a8:	add	x16, x16, #0x18
    18ac:	br	x17

00000000000018b0 <Perl_sv_catpvn_flags@plt>:
    18b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #32]
    18b8:	add	x16, x16, #0x20
    18bc:	br	x17

00000000000018c0 <__xstat64@plt>:
    18c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #40]
    18c8:	add	x16, x16, #0x28
    18cc:	br	x17

00000000000018d0 <__cxa_finalize@plt>:
    18d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #48]
    18d8:	add	x16, x16, #0x30
    18dc:	br	x17

00000000000018e0 <getuid@plt>:
    18e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #56]
    18e8:	add	x16, x16, #0x38
    18ec:	br	x17

00000000000018f0 <opendir@plt>:
    18f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #64]
    18f8:	add	x16, x16, #0x40
    18fc:	br	x17

0000000000001900 <Perl_av_shift@plt>:
    1900:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #72]
    1908:	add	x16, x16, #0x48
    190c:	br	x17

0000000000001910 <qsort@plt>:
    1910:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #80]
    1918:	add	x16, x16, #0x50
    191c:	br	x17

0000000000001920 <Perl_my_cxt_init@plt>:
    1920:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #88]
    1928:	add	x16, x16, #0x58
    192c:	br	x17

0000000000001930 <Perl_newCONSTSUB@plt>:
    1930:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #96]
    1938:	add	x16, x16, #0x60
    193c:	br	x17

0000000000001940 <Perl_newSV@plt>:
    1940:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1944:	ldr	x17, [x16, #104]
    1948:	add	x16, x16, #0x68
    194c:	br	x17

0000000000001950 <Perl_sv_upgrade@plt>:
    1950:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1954:	ldr	x17, [x16, #112]
    1958:	add	x16, x16, #0x70
    195c:	br	x17

0000000000001960 <Perl_sv_setiv_mg@plt>:
    1960:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1964:	ldr	x17, [x16, #120]
    1968:	add	x16, x16, #0x78
    196c:	br	x17

0000000000001970 <Perl_ck_warner@plt>:
    1970:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1974:	ldr	x17, [x16, #128]
    1978:	add	x16, x16, #0x80
    197c:	br	x17

0000000000001980 <Perl_sv_dup_inc@plt>:
    1980:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1984:	ldr	x17, [x16, #136]
    1988:	add	x16, x16, #0x88
    198c:	br	x17

0000000000001990 <Perl_mro_method_changed_in@plt>:
    1990:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1994:	ldr	x17, [x16, #144]
    1998:	add	x16, x16, #0x90
    199c:	br	x17

00000000000019a0 <memset@plt>:
    19a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19a4:	ldr	x17, [x16, #152]
    19a8:	add	x16, x16, #0x98
    19ac:	br	x17

00000000000019b0 <Perl_sv_2pv_flags@plt>:
    19b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19b4:	ldr	x17, [x16, #160]
    19b8:	add	x16, x16, #0xa0
    19bc:	br	x17

00000000000019c0 <Perl_xs_boot_epilog@plt>:
    19c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19c4:	ldr	x17, [x16, #168]
    19c8:	add	x16, x16, #0xa8
    19cc:	br	x17

00000000000019d0 <getpwnam@plt>:
    19d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19d4:	ldr	x17, [x16, #176]
    19d8:	add	x16, x16, #0xb0
    19dc:	br	x17

00000000000019e0 <Perl_safesysmalloc@plt>:
    19e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19e4:	ldr	x17, [x16, #184]
    19e8:	add	x16, x16, #0xb8
    19ec:	br	x17

00000000000019f0 <closedir@plt>:
    19f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16, #192]
    19f8:	add	x16, x16, #0xc0
    19fc:	br	x17

0000000000001a00 <__stack_chk_fail@plt>:
    1a00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #200]
    1a08:	add	x16, x16, #0xc8
    1a0c:	br	x17

0000000000001a10 <__gmon_start__@plt>:
    1a10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #208]
    1a18:	add	x16, x16, #0xd0
    1a1c:	br	x17

0000000000001a20 <Perl_croak_xs_usage@plt>:
    1a20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #216]
    1a28:	add	x16, x16, #0xd8
    1a2c:	br	x17

0000000000001a30 <Perl_newSVpvn_flags@plt>:
    1a30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #224]
    1a38:	add	x16, x16, #0xe0
    1a3c:	br	x17

0000000000001a40 <Perl_av_push@plt>:
    1a40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #232]
    1a48:	add	x16, x16, #0xe8
    1a4c:	br	x17

0000000000001a50 <strcmp@plt>:
    1a50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #240]
    1a58:	add	x16, x16, #0xf0
    1a5c:	br	x17

0000000000001a60 <getpwuid@plt>:
    1a60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #248]
    1a68:	add	x16, x16, #0xf8
    1a6c:	br	x17

0000000000001a70 <Perl_get_sv@plt>:
    1a70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #256]
    1a78:	add	x16, x16, #0x100
    1a7c:	br	x17

0000000000001a80 <Perl_croak_nocontext@plt>:
    1a80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #264]
    1a88:	add	x16, x16, #0x108
    1a8c:	br	x17

0000000000001a90 <__lxstat64@plt>:
    1a90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #272]
    1a98:	add	x16, x16, #0x110
    1a9c:	br	x17

0000000000001aa0 <Perl_newXS_deffile@plt>:
    1aa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #280]
    1aa8:	add	x16, x16, #0x118
    1aac:	br	x17

0000000000001ab0 <readdir64@plt>:
    1ab0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #288]
    1ab8:	add	x16, x16, #0x120
    1abc:	br	x17

0000000000001ac0 <Perl_sv_2mortal@plt>:
    1ac0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #296]
    1ac8:	add	x16, x16, #0x128
    1acc:	br	x17

0000000000001ad0 <Perl_mg_get@plt>:
    1ad0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #304]
    1ad8:	add	x16, x16, #0x130
    1adc:	br	x17

0000000000001ae0 <Perl_safesysfree@plt>:
    1ae0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #312]
    1ae8:	add	x16, x16, #0x138
    1aec:	br	x17

0000000000001af0 <Perl_safesysrealloc@plt>:
    1af0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #320]
    1af8:	add	x16, x16, #0x140
    1afc:	br	x17

0000000000001b00 <Perl_croak_sv@plt>:
    1b00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #328]
    1b08:	add	x16, x16, #0x148
    1b0c:	br	x17

0000000000001b10 <Perl_xs_handshake@plt>:
    1b10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #336]
    1b18:	add	x16, x16, #0x150
    1b1c:	br	x17

0000000000001b20 <memchr@plt>:
    1b20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #344]
    1b28:	add	x16, x16, #0x158
    1b2c:	br	x17

0000000000001b30 <sysconf@plt>:
    1b30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #352]
    1b38:	add	x16, x16, #0x160
    1b3c:	br	x17

0000000000001b40 <Perl_markstack_grow@plt>:
    1b40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #360]
    1b48:	add	x16, x16, #0x168
    1b4c:	br	x17

0000000000001b50 <Perl_hv_common_key_len@plt>:
    1b50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #368]
    1b58:	add	x16, x16, #0x170
    1b5c:	br	x17

0000000000001b60 <Perl_sv_setpvn@plt>:
    1b60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #376]
    1b68:	add	x16, x16, #0x178
    1b6c:	br	x17

0000000000001b70 <Perl_newSV_type@plt>:
    1b70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #384]
    1b78:	add	x16, x16, #0x180
    1b7c:	br	x17

0000000000001b80 <Perl_block_gimme@plt>:
    1b80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #392]
    1b88:	add	x16, x16, #0x188
    1b8c:	br	x17

0000000000001b90 <Perl_my_strlcpy@plt>:
    1b90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #400]
    1b98:	add	x16, x16, #0x190
    1b9c:	br	x17

0000000000001ba0 <Perl_newSVpvf_nocontext@plt>:
    1ba0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #408]
    1ba8:	add	x16, x16, #0x198
    1bac:	br	x17

0000000000001bb0 <bsd_globfree@plt>:
    1bb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #416]
    1bb8:	add	x16, x16, #0x1a0
    1bbc:	br	x17

0000000000001bc0 <Perl_sv_magic@plt>:
    1bc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #424]
    1bc8:	add	x16, x16, #0x1a8
    1bcc:	br	x17

0000000000001bd0 <Perl_sv_free2@plt>:
    1bd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #432]
    1bd8:	add	x16, x16, #0x1b0
    1bdc:	br	x17

0000000000001be0 <Perl_newSViv@plt>:
    1be0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #440]
    1be8:	add	x16, x16, #0x1b8
    1bec:	br	x17

0000000000001bf0 <__errno_location@plt>:
    1bf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #448]
    1bf8:	add	x16, x16, #0x1c0
    1bfc:	br	x17

0000000000001c00 <tolower@plt>:
    1c00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #456]
    1c08:	add	x16, x16, #0x1c8
    1c0c:	br	x17

0000000000001c10 <bsd_glob@plt>:
    1c10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #464]
    1c18:	add	x16, x16, #0x1d0
    1c1c:	br	x17

0000000000001c20 <getenv@plt>:
    1c20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #472]
    1c28:	add	x16, x16, #0x1d8
    1c2c:	br	x17

0000000000001c30 <Perl_gv_add_by_type@plt>:
    1c30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #480]
    1c38:	add	x16, x16, #0x1e0
    1c3c:	br	x17

0000000000001c40 <Perl_newSVpvn@plt>:
    1c40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #488]
    1c48:	add	x16, x16, #0x1e8
    1c4c:	br	x17

0000000000001c50 <Perl_sv_newmortal@plt>:
    1c50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #496]
    1c58:	add	x16, x16, #0x1f0
    1c5c:	br	x17

0000000000001c60 <Perl_get_hv@plt>:
    1c60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #504]
    1c68:	add	x16, x16, #0x1f8
    1c6c:	br	x17

Disassembly of section .text:

0000000000001c70 <call_weak_fn>:
    1c70:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    1c74:	ldr	x0, [x0, #4040]
    1c78:	cbz	x0, 1c80 <call_weak_fn+0x10>
    1c7c:	b	1a10 <__gmon_start__@plt>
    1c80:	ret

0000000000001c84 <deregister_tm_clones>:
    1c84:	stp	x29, x30, [sp, #-32]!
    1c88:	mov	x29, sp
    1c8c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1c90:	add	x0, x0, #0x210
    1c94:	str	x0, [sp, #24]
    1c98:	ldr	x0, [sp, #24]
    1c9c:	str	x0, [sp, #24]
    1ca0:	ldr	x1, [sp, #24]
    1ca4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1ca8:	add	x0, x0, #0x210
    1cac:	cmp	x1, x0
    1cb0:	b.eq	1ce8 <deregister_tm_clones+0x64>  // b.none
    1cb4:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    1cb8:	ldr	x0, [x0, #4016]
    1cbc:	str	x0, [sp, #16]
    1cc0:	ldr	x0, [sp, #16]
    1cc4:	str	x0, [sp, #16]
    1cc8:	ldr	x0, [sp, #16]
    1ccc:	cmp	x0, #0x0
    1cd0:	b.eq	1cec <deregister_tm_clones+0x68>  // b.none
    1cd4:	ldr	x1, [sp, #16]
    1cd8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1cdc:	add	x0, x0, #0x210
    1ce0:	blr	x1
    1ce4:	b	1cec <deregister_tm_clones+0x68>
    1ce8:	nop
    1cec:	ldp	x29, x30, [sp], #32
    1cf0:	ret

0000000000001cf4 <register_tm_clones>:
    1cf4:	stp	x29, x30, [sp, #-48]!
    1cf8:	mov	x29, sp
    1cfc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1d00:	add	x0, x0, #0x210
    1d04:	str	x0, [sp, #40]
    1d08:	ldr	x0, [sp, #40]
    1d0c:	str	x0, [sp, #40]
    1d10:	ldr	x1, [sp, #40]
    1d14:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1d18:	add	x0, x0, #0x210
    1d1c:	sub	x0, x1, x0
    1d20:	asr	x0, x0, #3
    1d24:	lsr	x1, x0, #63
    1d28:	add	x0, x1, x0
    1d2c:	asr	x0, x0, #1
    1d30:	str	x0, [sp, #32]
    1d34:	ldr	x0, [sp, #32]
    1d38:	cmp	x0, #0x0
    1d3c:	b.eq	1d78 <register_tm_clones+0x84>  // b.none
    1d40:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    1d44:	ldr	x0, [x0, #4064]
    1d48:	str	x0, [sp, #24]
    1d4c:	ldr	x0, [sp, #24]
    1d50:	str	x0, [sp, #24]
    1d54:	ldr	x0, [sp, #24]
    1d58:	cmp	x0, #0x0
    1d5c:	b.eq	1d7c <register_tm_clones+0x88>  // b.none
    1d60:	ldr	x2, [sp, #24]
    1d64:	ldr	x1, [sp, #32]
    1d68:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1d6c:	add	x0, x0, #0x210
    1d70:	blr	x2
    1d74:	b	1d7c <register_tm_clones+0x88>
    1d78:	nop
    1d7c:	ldp	x29, x30, [sp], #48
    1d80:	ret

0000000000001d84 <__do_global_dtors_aux>:
    1d84:	stp	x29, x30, [sp, #-16]!
    1d88:	mov	x29, sp
    1d8c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1d90:	add	x0, x0, #0x20c
    1d94:	ldrb	w0, [x0]
    1d98:	and	x0, x0, #0xff
    1d9c:	cmp	x0, #0x0
    1da0:	b.ne	1ddc <__do_global_dtors_aux+0x58>  // b.any
    1da4:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    1da8:	ldr	x0, [x0, #4024]
    1dac:	cmp	x0, #0x0
    1db0:	b.eq	1dc4 <__do_global_dtors_aux+0x40>  // b.none
    1db4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1db8:	add	x0, x0, #0x200
    1dbc:	ldr	x0, [x0]
    1dc0:	bl	18d0 <__cxa_finalize@plt>
    1dc4:	bl	1c84 <deregister_tm_clones>
    1dc8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1dcc:	add	x0, x0, #0x20c
    1dd0:	mov	w1, #0x1                   	// #1
    1dd4:	strb	w1, [x0]
    1dd8:	b	1de0 <__do_global_dtors_aux+0x5c>
    1ddc:	nop
    1de0:	ldp	x29, x30, [sp], #16
    1de4:	ret

0000000000001de8 <frame_dummy>:
    1de8:	stp	x29, x30, [sp, #-16]!
    1dec:	mov	x29, sp
    1df0:	bl	1cf4 <register_tm_clones>
    1df4:	nop
    1df8:	ldp	x29, x30, [sp], #16
    1dfc:	ret

0000000000001e00 <S_croak_memory_wrap>:
    1e00:	stp	x29, x30, [sp, #-16]!
    1e04:	mov	x29, sp
    1e08:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    1e0c:	ldr	x1, [x0, #4056]
    1e10:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    1e14:	add	x0, x0, #0x3b0
    1e18:	bl	1a80 <Perl_croak_nocontext@plt>

0000000000001e1c <my_readdir>:
    1e1c:	stp	x29, x30, [sp, #-32]!
    1e20:	mov	x29, sp
    1e24:	str	x0, [sp, #24]
    1e28:	ldr	x0, [sp, #24]
    1e2c:	bl	1ab0 <readdir64@plt>
    1e30:	ldp	x29, x30, [sp], #32
    1e34:	ret

0000000000001e38 <bsd_glob>:
    1e38:	mov	x12, #0x2060                	// #8288
    1e3c:	sub	sp, sp, x12
    1e40:	stp	x29, x30, [sp]
    1e44:	mov	x29, sp
    1e48:	str	x0, [sp, #40]
    1e4c:	str	w1, [sp, #36]
    1e50:	str	x2, [sp, #24]
    1e54:	str	x3, [sp, #16]
    1e58:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    1e5c:	ldr	x0, [x0, #4048]
    1e60:	ldr	x1, [x0]
    1e64:	str	x1, [sp, #8280]
    1e68:	mov	x1, #0x0                   	// #0
    1e6c:	ldr	x0, [sp, #40]
    1e70:	str	x0, [sp, #64]
    1e74:	ldr	x0, [sp, #16]
    1e78:	str	wzr, [x0]
    1e7c:	ldr	x0, [sp, #16]
    1e80:	str	xzr, [x0, #16]
    1e84:	ldr	x0, [sp, #16]
    1e88:	str	wzr, [x0, #8]
    1e8c:	ldr	w0, [sp, #36]
    1e90:	and	w1, w0, #0xfffffeff
    1e94:	ldr	x0, [sp, #16]
    1e98:	str	w1, [x0, #12]
    1e9c:	ldr	x0, [sp, #16]
    1ea0:	ldr	x1, [sp, #24]
    1ea4:	str	x1, [x0, #24]
    1ea8:	ldr	x0, [sp, #16]
    1eac:	str	wzr, [x0, #4]
    1eb0:	add	x0, sp, #0x58
    1eb4:	str	x0, [sp, #72]
    1eb8:	ldr	x1, [sp, #72]
    1ebc:	mov	x0, #0x1ffe                	// #8190
    1ec0:	add	x0, x1, x0
    1ec4:	str	x0, [sp, #80]
    1ec8:	ldr	w0, [sp, #36]
    1ecc:	and	w0, w0, #0x400
    1ed0:	cmp	w0, #0x0
    1ed4:	b.eq	1fa8 <bsd_glob+0x170>  // b.none
    1ed8:	b	1f5c <bsd_glob+0x124>
    1edc:	ldr	w0, [sp, #60]
    1ee0:	cmp	w0, #0x5c
    1ee4:	b.ne	1f44 <bsd_glob+0x10c>  // b.any
    1ee8:	ldr	x0, [sp, #64]
    1eec:	add	x1, x0, #0x1
    1ef0:	str	x1, [sp, #64]
    1ef4:	ldrb	w0, [x0]
    1ef8:	str	w0, [sp, #60]
    1efc:	ldr	w0, [sp, #60]
    1f00:	cmp	w0, #0x0
    1f04:	b.ne	1f1c <bsd_glob+0xe4>  // b.any
    1f08:	mov	w0, #0x5c                  	// #92
    1f0c:	str	w0, [sp, #60]
    1f10:	ldr	x0, [sp, #64]
    1f14:	sub	x0, x0, #0x1
    1f18:	str	x0, [sp, #64]
    1f1c:	ldr	w0, [sp, #60]
    1f20:	sxth	w0, w0
    1f24:	orr	w0, w0, #0x4000
    1f28:	sxth	w2, w0
    1f2c:	ldr	x0, [sp, #72]
    1f30:	add	x1, x0, #0x2
    1f34:	str	x1, [sp, #72]
    1f38:	and	w1, w2, #0xffff
    1f3c:	strh	w1, [x0]
    1f40:	b	1f5c <bsd_glob+0x124>
    1f44:	ldr	x0, [sp, #72]
    1f48:	add	x1, x0, #0x2
    1f4c:	str	x1, [sp, #72]
    1f50:	ldr	w1, [sp, #60]
    1f54:	and	w1, w1, #0xffff
    1f58:	strh	w1, [x0]
    1f5c:	ldr	x1, [sp, #72]
    1f60:	ldr	x0, [sp, #80]
    1f64:	cmp	x1, x0
    1f68:	b.cs	1fd8 <bsd_glob+0x1a0>  // b.hs, b.nlast
    1f6c:	ldr	x0, [sp, #64]
    1f70:	add	x1, x0, #0x1
    1f74:	str	x1, [sp, #64]
    1f78:	ldrb	w0, [x0]
    1f7c:	str	w0, [sp, #60]
    1f80:	ldr	w0, [sp, #60]
    1f84:	cmp	w0, #0x0
    1f88:	b.ne	1edc <bsd_glob+0xa4>  // b.any
    1f8c:	b	1fd8 <bsd_glob+0x1a0>
    1f90:	ldr	x0, [sp, #72]
    1f94:	add	x1, x0, #0x2
    1f98:	str	x1, [sp, #72]
    1f9c:	ldr	w1, [sp, #60]
    1fa0:	and	w1, w1, #0xffff
    1fa4:	strh	w1, [x0]
    1fa8:	ldr	x1, [sp, #72]
    1fac:	ldr	x0, [sp, #80]
    1fb0:	cmp	x1, x0
    1fb4:	b.cs	1fd8 <bsd_glob+0x1a0>  // b.hs, b.nlast
    1fb8:	ldr	x0, [sp, #64]
    1fbc:	add	x1, x0, #0x1
    1fc0:	str	x1, [sp, #64]
    1fc4:	ldrb	w0, [x0]
    1fc8:	str	w0, [sp, #60]
    1fcc:	ldr	w0, [sp, #60]
    1fd0:	cmp	w0, #0x0
    1fd4:	b.ne	1f90 <bsd_glob+0x158>  // b.any
    1fd8:	ldr	x0, [sp, #72]
    1fdc:	strh	wzr, [x0]
    1fe0:	ldr	w0, [sp, #36]
    1fe4:	and	w0, w0, #0x80
    1fe8:	cmp	w0, #0x0
    1fec:	b.eq	2000 <bsd_glob+0x1c8>  // b.none
    1ff0:	add	x0, sp, #0x58
    1ff4:	ldr	x1, [sp, #16]
    1ff8:	bl	2044 <globexp1>
    1ffc:	b	200c <bsd_glob+0x1d4>
    2000:	add	x0, sp, #0x58
    2004:	ldr	x1, [sp, #16]
    2008:	bl	26f0 <glob0>
    200c:	mov	w1, w0
    2010:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    2014:	ldr	x0, [x0, #4048]
    2018:	ldr	x2, [sp, #8280]
    201c:	ldr	x0, [x0]
    2020:	eor	x0, x2, x0
    2024:	cmp	x0, #0x0
    2028:	b.eq	2030 <bsd_glob+0x1f8>  // b.none
    202c:	bl	1a00 <__stack_chk_fail@plt>
    2030:	mov	w0, w1
    2034:	ldp	x29, x30, [sp]
    2038:	mov	x12, #0x2060                	// #8288
    203c:	add	sp, sp, x12
    2040:	ret

0000000000002044 <globexp1>:
    2044:	stp	x29, x30, [sp, #-64]!
    2048:	mov	x29, sp
    204c:	str	x0, [sp, #24]
    2050:	str	x1, [sp, #16]
    2054:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    2058:	ldr	x0, [x0, #4048]
    205c:	ldr	x1, [x0]
    2060:	str	x1, [sp, #56]
    2064:	mov	x1, #0x0                   	// #0
    2068:	ldr	x0, [sp, #24]
    206c:	str	x0, [sp, #48]
    2070:	ldr	x0, [sp, #24]
    2074:	ldrh	w0, [x0]
    2078:	cmp	w0, #0x7b
    207c:	b.ne	20e0 <globexp1+0x9c>  // b.any
    2080:	ldr	x0, [sp, #24]
    2084:	add	x0, x0, #0x2
    2088:	ldrh	w0, [x0]
    208c:	cmp	w0, #0x7d
    2090:	b.ne	20e0 <globexp1+0x9c>  // b.any
    2094:	ldr	x0, [sp, #24]
    2098:	add	x0, x0, #0x4
    209c:	ldrh	w0, [x0]
    20a0:	cmp	w0, #0x0
    20a4:	b.ne	20e0 <globexp1+0x9c>  // b.any
    20a8:	ldr	x1, [sp, #16]
    20ac:	ldr	x0, [sp, #24]
    20b0:	bl	26f0 <glob0>
    20b4:	b	2108 <globexp1+0xc4>
    20b8:	add	x0, sp, #0x2c
    20bc:	mov	x3, x0
    20c0:	ldr	x2, [sp, #16]
    20c4:	ldr	x1, [sp, #24]
    20c8:	ldr	x0, [sp, #48]
    20cc:	bl	2138 <globexp2>
    20d0:	cmp	w0, #0x0
    20d4:	b.ne	20e0 <globexp1+0x9c>  // b.any
    20d8:	ldr	w0, [sp, #44]
    20dc:	b	2108 <globexp1+0xc4>
    20e0:	mov	w1, #0x7b                  	// #123
    20e4:	ldr	x0, [sp, #48]
    20e8:	bl	3d30 <g_strchr>
    20ec:	str	x0, [sp, #48]
    20f0:	ldr	x0, [sp, #48]
    20f4:	cmp	x0, #0x0
    20f8:	b.ne	20b8 <globexp1+0x74>  // b.any
    20fc:	ldr	x1, [sp, #16]
    2100:	ldr	x0, [sp, #24]
    2104:	bl	26f0 <glob0>
    2108:	mov	w1, w0
    210c:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    2110:	ldr	x0, [x0, #4048]
    2114:	ldr	x2, [sp, #56]
    2118:	ldr	x0, [x0]
    211c:	eor	x0, x2, x0
    2120:	cmp	x0, #0x0
    2124:	b.eq	212c <globexp1+0xe8>  // b.none
    2128:	bl	1a00 <__stack_chk_fail@plt>
    212c:	mov	w0, w1
    2130:	ldp	x29, x30, [sp], #64
    2134:	ret

0000000000002138 <globexp2>:
    2138:	mov	x12, #0x2070                	// #8304
    213c:	sub	sp, sp, x12
    2140:	stp	x29, x30, [sp]
    2144:	mov	x29, sp
    2148:	str	x0, [sp, #40]
    214c:	str	x1, [sp, #32]
    2150:	str	x2, [sp, #24]
    2154:	str	x3, [sp, #16]
    2158:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    215c:	ldr	x0, [x0, #4048]
    2160:	ldr	x1, [x0]
    2164:	str	x1, [sp, #8296]
    2168:	mov	x1, #0x0                   	// #0
    216c:	add	x0, sp, #0x68
    2170:	str	x0, [sp, #56]
    2174:	ldr	x0, [sp, #32]
    2178:	str	x0, [sp, #72]
    217c:	b	21a0 <globexp2+0x68>
    2180:	ldr	x1, [sp, #72]
    2184:	add	x0, x1, #0x2
    2188:	str	x0, [sp, #72]
    218c:	ldr	x0, [sp, #56]
    2190:	add	x2, x0, #0x2
    2194:	str	x2, [sp, #56]
    2198:	ldrh	w1, [x1]
    219c:	strh	w1, [x0]
    21a0:	ldr	x1, [sp, #72]
    21a4:	ldr	x0, [sp, #40]
    21a8:	cmp	x1, x0
    21ac:	b.ne	2180 <globexp2+0x48>  // b.any
    21b0:	ldr	x0, [sp, #56]
    21b4:	strh	wzr, [x0]
    21b8:	ldr	x0, [sp, #56]
    21bc:	str	x0, [sp, #88]
    21c0:	str	wzr, [sp, #52]
    21c4:	ldr	x0, [sp, #40]
    21c8:	add	x0, x0, #0x2
    21cc:	str	x0, [sp, #40]
    21d0:	ldr	x0, [sp, #40]
    21d4:	str	x0, [sp, #64]
    21d8:	b	229c <globexp2+0x164>
    21dc:	ldr	x0, [sp, #64]
    21e0:	ldrh	w0, [x0]
    21e4:	cmp	w0, #0x5b
    21e8:	b.ne	2248 <globexp2+0x110>  // b.any
    21ec:	ldr	x0, [sp, #64]
    21f0:	add	x1, x0, #0x2
    21f4:	str	x1, [sp, #64]
    21f8:	str	x0, [sp, #72]
    21fc:	b	220c <globexp2+0xd4>
    2200:	ldr	x0, [sp, #64]
    2204:	add	x0, x0, #0x2
    2208:	str	x0, [sp, #64]
    220c:	ldr	x0, [sp, #64]
    2210:	ldrh	w0, [x0]
    2214:	cmp	w0, #0x5d
    2218:	b.eq	222c <globexp2+0xf4>  // b.none
    221c:	ldr	x0, [sp, #64]
    2220:	ldrh	w0, [x0]
    2224:	cmp	w0, #0x0
    2228:	b.ne	2200 <globexp2+0xc8>  // b.any
    222c:	ldr	x0, [sp, #64]
    2230:	ldrh	w0, [x0]
    2234:	cmp	w0, #0x0
    2238:	b.ne	2290 <globexp2+0x158>  // b.any
    223c:	ldr	x0, [sp, #72]
    2240:	str	x0, [sp, #64]
    2244:	b	2290 <globexp2+0x158>
    2248:	ldr	x0, [sp, #64]
    224c:	ldrh	w0, [x0]
    2250:	cmp	w0, #0x7b
    2254:	b.ne	2268 <globexp2+0x130>  // b.any
    2258:	ldr	w0, [sp, #52]
    225c:	add	w0, w0, #0x1
    2260:	str	w0, [sp, #52]
    2264:	b	2290 <globexp2+0x158>
    2268:	ldr	x0, [sp, #64]
    226c:	ldrh	w0, [x0]
    2270:	cmp	w0, #0x7d
    2274:	b.ne	2290 <globexp2+0x158>  // b.any
    2278:	ldr	w0, [sp, #52]
    227c:	cmp	w0, #0x0
    2280:	b.eq	22b0 <globexp2+0x178>  // b.none
    2284:	ldr	w0, [sp, #52]
    2288:	sub	w0, w0, #0x1
    228c:	str	w0, [sp, #52]
    2290:	ldr	x0, [sp, #64]
    2294:	add	x0, x0, #0x2
    2298:	str	x0, [sp, #64]
    229c:	ldr	x0, [sp, #64]
    22a0:	ldrh	w0, [x0]
    22a4:	cmp	w0, #0x0
    22a8:	b.ne	21dc <globexp2+0xa4>  // b.any
    22ac:	b	22b4 <globexp2+0x17c>
    22b0:	nop
    22b4:	ldr	w0, [sp, #52]
    22b8:	cmp	w0, #0x0
    22bc:	b.ne	22d0 <globexp2+0x198>  // b.any
    22c0:	ldr	x0, [sp, #64]
    22c4:	ldrh	w0, [x0]
    22c8:	cmp	w0, #0x0
    22cc:	b.ne	22f0 <globexp2+0x1b8>  // b.any
    22d0:	add	x0, sp, #0x68
    22d4:	ldr	x1, [sp, #24]
    22d8:	bl	26f0 <glob0>
    22dc:	mov	w1, w0
    22e0:	ldr	x0, [sp, #16]
    22e4:	str	w1, [x0]
    22e8:	mov	w0, #0x0                   	// #0
    22ec:	b	24c0 <globexp2+0x388>
    22f0:	str	wzr, [sp, #52]
    22f4:	ldr	x0, [sp, #40]
    22f8:	str	x0, [sp, #72]
    22fc:	ldr	x0, [sp, #72]
    2300:	str	x0, [sp, #80]
    2304:	b	24a4 <globexp2+0x36c>
    2308:	ldr	x0, [sp, #72]
    230c:	ldrh	w0, [x0]
    2310:	cmp	w0, #0x7d
    2314:	b.eq	23ac <globexp2+0x274>  // b.none
    2318:	cmp	w0, #0x7d
    231c:	b.gt	2484 <globexp2+0x34c>
    2320:	cmp	w0, #0x7b
    2324:	b.eq	239c <globexp2+0x264>  // b.none
    2328:	cmp	w0, #0x7b
    232c:	b.gt	2484 <globexp2+0x34c>
    2330:	cmp	w0, #0x2c
    2334:	b.eq	23c8 <globexp2+0x290>  // b.none
    2338:	cmp	w0, #0x5b
    233c:	b.ne	2484 <globexp2+0x34c>  // b.any
    2340:	ldr	x0, [sp, #72]
    2344:	add	x1, x0, #0x2
    2348:	str	x1, [sp, #72]
    234c:	str	x0, [sp, #96]
    2350:	b	2360 <globexp2+0x228>
    2354:	ldr	x0, [sp, #72]
    2358:	add	x0, x0, #0x2
    235c:	str	x0, [sp, #72]
    2360:	ldr	x0, [sp, #72]
    2364:	ldrh	w0, [x0]
    2368:	cmp	w0, #0x5d
    236c:	b.eq	2380 <globexp2+0x248>  // b.none
    2370:	ldr	x0, [sp, #72]
    2374:	ldrh	w0, [x0]
    2378:	cmp	w0, #0x0
    237c:	b.ne	2354 <globexp2+0x21c>  // b.any
    2380:	ldr	x0, [sp, #72]
    2384:	ldrh	w0, [x0]
    2388:	cmp	w0, #0x0
    238c:	b.ne	248c <globexp2+0x354>  // b.any
    2390:	ldr	x0, [sp, #96]
    2394:	str	x0, [sp, #72]
    2398:	b	248c <globexp2+0x354>
    239c:	ldr	w0, [sp, #52]
    23a0:	add	w0, w0, #0x1
    23a4:	str	w0, [sp, #52]
    23a8:	b	2498 <globexp2+0x360>
    23ac:	ldr	w0, [sp, #52]
    23b0:	cmp	w0, #0x0
    23b4:	b.eq	23c8 <globexp2+0x290>  // b.none
    23b8:	ldr	w0, [sp, #52]
    23bc:	sub	w0, w0, #0x1
    23c0:	str	w0, [sp, #52]
    23c4:	b	2498 <globexp2+0x360>
    23c8:	ldr	w0, [sp, #52]
    23cc:	cmp	w0, #0x0
    23d0:	b.eq	23e4 <globexp2+0x2ac>  // b.none
    23d4:	ldr	x0, [sp, #72]
    23d8:	ldrh	w0, [x0]
    23dc:	cmp	w0, #0x2c
    23e0:	b.eq	2494 <globexp2+0x35c>  // b.none
    23e4:	ldr	x0, [sp, #88]
    23e8:	str	x0, [sp, #56]
    23ec:	b	2410 <globexp2+0x2d8>
    23f0:	ldr	x1, [sp, #80]
    23f4:	add	x0, x1, #0x2
    23f8:	str	x0, [sp, #80]
    23fc:	ldr	x0, [sp, #56]
    2400:	add	x2, x0, #0x2
    2404:	str	x2, [sp, #56]
    2408:	ldrh	w1, [x1]
    240c:	strh	w1, [x0]
    2410:	ldr	x1, [sp, #80]
    2414:	ldr	x0, [sp, #72]
    2418:	cmp	x1, x0
    241c:	b.cc	23f0 <globexp2+0x2b8>  // b.lo, b.ul, b.last
    2420:	ldr	x0, [sp, #64]
    2424:	add	x0, x0, #0x2
    2428:	str	x0, [sp, #80]
    242c:	nop
    2430:	ldr	x1, [sp, #80]
    2434:	add	x0, x1, #0x2
    2438:	str	x0, [sp, #80]
    243c:	ldr	x0, [sp, #56]
    2440:	add	x2, x0, #0x2
    2444:	str	x2, [sp, #56]
    2448:	ldrh	w1, [x1]
    244c:	strh	w1, [x0]
    2450:	ldrh	w0, [x0]
    2454:	cmp	w0, #0x0
    2458:	b.ne	2430 <globexp2+0x2f8>  // b.any
    245c:	add	x0, sp, #0x68
    2460:	ldr	x1, [sp, #24]
    2464:	bl	2044 <globexp1>
    2468:	mov	w1, w0
    246c:	ldr	x0, [sp, #16]
    2470:	str	w1, [x0]
    2474:	ldr	x0, [sp, #72]
    2478:	add	x0, x0, #0x2
    247c:	str	x0, [sp, #80]
    2480:	b	2498 <globexp2+0x360>
    2484:	nop
    2488:	b	2498 <globexp2+0x360>
    248c:	nop
    2490:	b	2498 <globexp2+0x360>
    2494:	nop
    2498:	ldr	x0, [sp, #72]
    249c:	add	x0, x0, #0x2
    24a0:	str	x0, [sp, #72]
    24a4:	ldr	x1, [sp, #72]
    24a8:	ldr	x0, [sp, #64]
    24ac:	cmp	x1, x0
    24b0:	b.ls	2308 <globexp2+0x1d0>  // b.plast
    24b4:	ldr	x0, [sp, #16]
    24b8:	str	wzr, [x0]
    24bc:	mov	w0, #0x0                   	// #0
    24c0:	mov	w1, w0
    24c4:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    24c8:	ldr	x0, [x0, #4048]
    24cc:	ldr	x2, [sp, #8296]
    24d0:	ldr	x0, [x0]
    24d4:	eor	x0, x2, x0
    24d8:	cmp	x0, #0x0
    24dc:	b.eq	24e4 <globexp2+0x3ac>  // b.none
    24e0:	bl	1a00 <__stack_chk_fail@plt>
    24e4:	mov	w0, w1
    24e8:	ldp	x29, x30, [sp]
    24ec:	mov	x12, #0x2070                	// #8304
    24f0:	add	sp, sp, x12
    24f4:	ret

00000000000024f8 <globtilde>:
    24f8:	stp	x29, x30, [sp, #-96]!
    24fc:	mov	x29, sp
    2500:	str	x0, [sp, #40]
    2504:	str	x1, [sp, #32]
    2508:	str	x2, [sp, #24]
    250c:	str	x3, [sp, #16]
    2510:	ldr	x0, [sp, #40]
    2514:	ldrh	w0, [x0]
    2518:	cmp	w0, #0x7e
    251c:	b.ne	2534 <globtilde+0x3c>  // b.any
    2520:	ldr	x0, [sp, #16]
    2524:	ldr	w0, [x0, #12]
    2528:	and	w0, w0, #0x800
    252c:	cmp	w0, #0x0
    2530:	b.ne	253c <globtilde+0x44>  // b.any
    2534:	ldr	x0, [sp, #40]
    2538:	b	26e8 <globtilde+0x1f0>
    253c:	ldr	x0, [sp, #24]
    2540:	lsl	x0, x0, #1
    2544:	sub	x0, x0, #0x2
    2548:	ldr	x1, [sp, #32]
    254c:	add	x0, x1, x0
    2550:	str	x0, [sp, #72]
    2554:	ldr	x0, [sp, #40]
    2558:	add	x0, x0, #0x2
    255c:	str	x0, [sp, #56]
    2560:	ldr	x0, [sp, #32]
    2564:	str	x0, [sp, #48]
    2568:	b	2590 <globtilde+0x98>
    256c:	ldr	x0, [sp, #56]
    2570:	add	x1, x0, #0x2
    2574:	str	x1, [sp, #56]
    2578:	ldrh	w2, [x0]
    257c:	ldr	x0, [sp, #48]
    2580:	add	x1, x0, #0x1
    2584:	str	x1, [sp, #48]
    2588:	and	w1, w2, #0xff
    258c:	strb	w1, [x0]
    2590:	ldr	x1, [sp, #48]
    2594:	ldr	x0, [sp, #72]
    2598:	cmp	x1, x0
    259c:	b.cs	25c0 <globtilde+0xc8>  // b.hs, b.nlast
    25a0:	ldr	x0, [sp, #56]
    25a4:	ldrh	w0, [x0]
    25a8:	cmp	w0, #0x0
    25ac:	b.eq	25c0 <globtilde+0xc8>  // b.none
    25b0:	ldr	x0, [sp, #56]
    25b4:	ldrh	w0, [x0]
    25b8:	cmp	w0, #0x2f
    25bc:	b.ne	256c <globtilde+0x74>  // b.any
    25c0:	ldr	x0, [sp, #48]
    25c4:	strb	wzr, [x0]
    25c8:	ldr	x0, [sp, #32]
    25cc:	ldrb	w0, [x0]
    25d0:	cmp	w0, #0x0
    25d4:	b.ne	2624 <globtilde+0x12c>  // b.any
    25d8:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    25dc:	add	x0, x0, #0x3b8
    25e0:	bl	1c20 <getenv@plt>
    25e4:	str	x0, [sp, #48]
    25e8:	ldr	x0, [sp, #48]
    25ec:	cmp	x0, #0x0
    25f0:	b.ne	2650 <globtilde+0x158>  // b.any
    25f4:	bl	18e0 <getuid@plt>
    25f8:	bl	1a60 <getpwuid@plt>
    25fc:	str	x0, [sp, #88]
    2600:	ldr	x0, [sp, #88]
    2604:	cmp	x0, #0x0
    2608:	b.ne	2614 <globtilde+0x11c>  // b.any
    260c:	ldr	x0, [sp, #40]
    2610:	b	26e8 <globtilde+0x1f0>
    2614:	ldr	x0, [sp, #88]
    2618:	ldr	x0, [x0, #32]
    261c:	str	x0, [sp, #48]
    2620:	b	2650 <globtilde+0x158>
    2624:	ldr	x0, [sp, #32]
    2628:	bl	19d0 <getpwnam@plt>
    262c:	str	x0, [sp, #80]
    2630:	ldr	x0, [sp, #80]
    2634:	cmp	x0, #0x0
    2638:	b.ne	2644 <globtilde+0x14c>  // b.any
    263c:	ldr	x0, [sp, #40]
    2640:	b	26e8 <globtilde+0x1f0>
    2644:	ldr	x0, [sp, #80]
    2648:	ldr	x0, [x0, #32]
    264c:	str	x0, [sp, #48]
    2650:	ldr	x0, [sp, #32]
    2654:	str	x0, [sp, #64]
    2658:	b	2680 <globtilde+0x188>
    265c:	ldr	x0, [sp, #48]
    2660:	add	x1, x0, #0x1
    2664:	str	x1, [sp, #48]
    2668:	ldrb	w2, [x0]
    266c:	ldr	x0, [sp, #64]
    2670:	add	x1, x0, #0x2
    2674:	str	x1, [sp, #64]
    2678:	and	w1, w2, #0xffff
    267c:	strh	w1, [x0]
    2680:	ldr	x1, [sp, #64]
    2684:	ldr	x0, [sp, #72]
    2688:	cmp	x1, x0
    268c:	b.cs	26a0 <globtilde+0x1a8>  // b.hs, b.nlast
    2690:	ldr	x0, [sp, #48]
    2694:	ldrb	w0, [x0]
    2698:	cmp	w0, #0x0
    269c:	b.ne	265c <globtilde+0x164>  // b.any
    26a0:	ldr	x1, [sp, #64]
    26a4:	ldr	x0, [sp, #72]
    26a8:	cmp	x1, x0
    26ac:	b.cs	26dc <globtilde+0x1e4>  // b.hs, b.nlast
    26b0:	ldr	x1, [sp, #56]
    26b4:	add	x0, x1, #0x2
    26b8:	str	x0, [sp, #56]
    26bc:	ldr	x0, [sp, #64]
    26c0:	add	x2, x0, #0x2
    26c4:	str	x2, [sp, #64]
    26c8:	ldrh	w1, [x1]
    26cc:	strh	w1, [x0]
    26d0:	ldrh	w0, [x0]
    26d4:	cmp	w0, #0x0
    26d8:	b.ne	26a0 <globtilde+0x1a8>  // b.any
    26dc:	ldr	x0, [sp, #64]
    26e0:	strh	wzr, [x0]
    26e4:	ldr	x0, [sp, #32]
    26e8:	ldp	x29, x30, [sp], #96
    26ec:	ret

00000000000026f0 <glob0>:
    26f0:	mov	x12, #0x2060                	// #8288
    26f4:	sub	sp, sp, x12
    26f8:	stp	x29, x30, [sp]
    26fc:	mov	x29, sp
    2700:	str	x0, [sp, #24]
    2704:	str	x1, [sp, #16]
    2708:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    270c:	ldr	x0, [x0, #4048]
    2710:	ldr	x1, [x0]
    2714:	str	x1, [sp, #8280]
    2718:	mov	x1, #0x0                   	// #0
    271c:	str	xzr, [sp, #56]
    2720:	add	x0, sp, #0x58
    2724:	ldr	x3, [sp, #16]
    2728:	mov	x2, #0x1000                	// #4096
    272c:	mov	x1, x0
    2730:	ldr	x0, [sp, #24]
    2734:	bl	24f8 <globtilde>
    2738:	str	x0, [sp, #80]
    273c:	ldr	x0, [sp, #80]
    2740:	str	x0, [sp, #64]
    2744:	ldr	x0, [sp, #16]
    2748:	ldr	w0, [x0, #12]
    274c:	str	w0, [sp, #44]
    2750:	ldr	x0, [sp, #16]
    2754:	ldr	w0, [x0]
    2758:	str	w0, [sp, #48]
    275c:	add	x0, sp, #0x58
    2760:	str	x0, [sp, #72]
    2764:	b	29dc <glob0+0x2ec>
    2768:	ldr	w0, [sp, #40]
    276c:	cmp	w0, #0x5b
    2770:	b.eq	279c <glob0+0xac>  // b.none
    2774:	ldr	w0, [sp, #40]
    2778:	cmp	w0, #0x5b
    277c:	b.gt	29b8 <glob0+0x2c8>
    2780:	ldr	w0, [sp, #40]
    2784:	cmp	w0, #0x2a
    2788:	b.eq	2964 <glob0+0x274>  // b.none
    278c:	ldr	w0, [sp, #40]
    2790:	cmp	w0, #0x3f
    2794:	b.eq	2938 <glob0+0x248>  // b.none
    2798:	b	29b8 <glob0+0x2c8>
    279c:	ldr	x0, [sp, #64]
    27a0:	ldrh	w0, [x0]
    27a4:	str	w0, [sp, #40]
    27a8:	ldr	w0, [sp, #40]
    27ac:	cmp	w0, #0x21
    27b0:	b.ne	27c0 <glob0+0xd0>  // b.any
    27b4:	ldr	x0, [sp, #64]
    27b8:	add	x0, x0, #0x2
    27bc:	str	x0, [sp, #64]
    27c0:	ldr	x0, [sp, #64]
    27c4:	ldrh	w0, [x0]
    27c8:	cmp	w0, #0x0
    27cc:	b.eq	27e8 <glob0+0xf8>  // b.none
    27d0:	ldr	x0, [sp, #64]
    27d4:	add	x0, x0, #0x2
    27d8:	mov	w1, #0x5d                  	// #93
    27dc:	bl	3d30 <g_strchr>
    27e0:	cmp	x0, #0x0
    27e4:	b.ne	2818 <glob0+0x128>  // b.any
    27e8:	ldr	x0, [sp, #72]
    27ec:	add	x1, x0, #0x2
    27f0:	str	x1, [sp, #72]
    27f4:	mov	w1, #0x5b                  	// #91
    27f8:	strh	w1, [x0]
    27fc:	ldr	w0, [sp, #40]
    2800:	cmp	w0, #0x21
    2804:	b.ne	29dc <glob0+0x2ec>  // b.any
    2808:	ldr	x0, [sp, #64]
    280c:	sub	x0, x0, #0x2
    2810:	str	x0, [sp, #64]
    2814:	b	29dc <glob0+0x2ec>
    2818:	ldr	x0, [sp, #72]
    281c:	add	x1, x0, #0x2
    2820:	str	x1, [sp, #72]
    2824:	mov	w1, #0xffff805b            	// #-32677
    2828:	strh	w1, [x0]
    282c:	ldr	w0, [sp, #40]
    2830:	cmp	w0, #0x21
    2834:	b.ne	284c <glob0+0x15c>  // b.any
    2838:	ldr	x0, [sp, #72]
    283c:	add	x1, x0, #0x2
    2840:	str	x1, [sp, #72]
    2844:	mov	w1, #0xffff8021            	// #-32735
    2848:	strh	w1, [x0]
    284c:	ldr	x0, [sp, #64]
    2850:	add	x1, x0, #0x2
    2854:	str	x1, [sp, #64]
    2858:	ldrh	w0, [x0]
    285c:	str	w0, [sp, #40]
    2860:	ldr	w0, [sp, #40]
    2864:	and	w1, w0, #0xffff
    2868:	ldr	x0, [sp, #72]
    286c:	add	x2, x0, #0x2
    2870:	str	x2, [sp, #72]
    2874:	and	w1, w1, #0xff
    2878:	and	w1, w1, #0xffff
    287c:	strh	w1, [x0]
    2880:	ldr	x0, [sp, #64]
    2884:	ldrh	w0, [x0]
    2888:	cmp	w0, #0x2d
    288c:	b.ne	28ec <glob0+0x1fc>  // b.any
    2890:	ldr	x0, [sp, #64]
    2894:	add	x0, x0, #0x2
    2898:	ldrh	w0, [x0]
    289c:	str	w0, [sp, #40]
    28a0:	ldr	w0, [sp, #40]
    28a4:	cmp	w0, #0x5d
    28a8:	b.eq	28ec <glob0+0x1fc>  // b.none
    28ac:	ldr	x0, [sp, #72]
    28b0:	add	x1, x0, #0x2
    28b4:	str	x1, [sp, #72]
    28b8:	mov	w1, #0xffff802d            	// #-32723
    28bc:	strh	w1, [x0]
    28c0:	ldr	w0, [sp, #40]
    28c4:	and	w1, w0, #0xffff
    28c8:	ldr	x0, [sp, #72]
    28cc:	add	x2, x0, #0x2
    28d0:	str	x2, [sp, #72]
    28d4:	and	w1, w1, #0xff
    28d8:	and	w1, w1, #0xffff
    28dc:	strh	w1, [x0]
    28e0:	ldr	x0, [sp, #64]
    28e4:	add	x0, x0, #0x4
    28e8:	str	x0, [sp, #64]
    28ec:	ldr	x0, [sp, #64]
    28f0:	add	x1, x0, #0x2
    28f4:	str	x1, [sp, #64]
    28f8:	ldrh	w0, [x0]
    28fc:	str	w0, [sp, #40]
    2900:	ldr	w0, [sp, #40]
    2904:	cmp	w0, #0x5d
    2908:	b.ne	2860 <glob0+0x170>  // b.any
    290c:	ldr	x0, [sp, #16]
    2910:	ldr	w0, [x0, #12]
    2914:	orr	w1, w0, #0x100
    2918:	ldr	x0, [sp, #16]
    291c:	str	w1, [x0, #12]
    2920:	ldr	x0, [sp, #72]
    2924:	add	x1, x0, #0x2
    2928:	str	x1, [sp, #72]
    292c:	mov	w1, #0xffff805d            	// #-32675
    2930:	strh	w1, [x0]
    2934:	b	29dc <glob0+0x2ec>
    2938:	ldr	x0, [sp, #16]
    293c:	ldr	w0, [x0, #12]
    2940:	orr	w1, w0, #0x100
    2944:	ldr	x0, [sp, #16]
    2948:	str	w1, [x0, #12]
    294c:	ldr	x0, [sp, #72]
    2950:	add	x1, x0, #0x2
    2954:	str	x1, [sp, #72]
    2958:	mov	w1, #0xffff803f            	// #-32705
    295c:	strh	w1, [x0]
    2960:	b	29dc <glob0+0x2ec>
    2964:	ldr	x0, [sp, #16]
    2968:	ldr	w0, [x0, #12]
    296c:	orr	w1, w0, #0x100
    2970:	ldr	x0, [sp, #16]
    2974:	str	w1, [x0, #12]
    2978:	add	x0, sp, #0x58
    297c:	ldr	x1, [sp, #72]
    2980:	cmp	x1, x0
    2984:	b.eq	29a0 <glob0+0x2b0>  // b.none
    2988:	ldr	x0, [sp, #72]
    298c:	sub	x0, x0, #0x2
    2990:	ldrh	w1, [x0]
    2994:	mov	w0, #0x802a                	// #32810
    2998:	cmp	w1, w0
    299c:	b.eq	29dc <glob0+0x2ec>  // b.none
    29a0:	ldr	x0, [sp, #72]
    29a4:	add	x1, x0, #0x2
    29a8:	str	x1, [sp, #72]
    29ac:	mov	w1, #0xffff802a            	// #-32726
    29b0:	strh	w1, [x0]
    29b4:	b	29dc <glob0+0x2ec>
    29b8:	ldr	w0, [sp, #40]
    29bc:	and	w1, w0, #0xffff
    29c0:	ldr	x0, [sp, #72]
    29c4:	add	x2, x0, #0x2
    29c8:	str	x2, [sp, #72]
    29cc:	and	w1, w1, #0xff
    29d0:	and	w1, w1, #0xffff
    29d4:	strh	w1, [x0]
    29d8:	nop
    29dc:	ldr	x0, [sp, #64]
    29e0:	add	x1, x0, #0x2
    29e4:	str	x1, [sp, #64]
    29e8:	ldrh	w0, [x0]
    29ec:	str	w0, [sp, #40]
    29f0:	ldr	w0, [sp, #40]
    29f4:	cmp	w0, #0x0
    29f8:	b.ne	2768 <glob0+0x78>  // b.any
    29fc:	ldr	x0, [sp, #72]
    2a00:	strh	wzr, [x0]
    2a04:	add	x0, sp, #0x58
    2a08:	mov	x1, #0x1ffe                	// #8190
    2a0c:	add	x0, x0, x1
    2a10:	add	x1, sp, #0x38
    2a14:	add	x4, sp, #0x58
    2a18:	mov	x3, x1
    2a1c:	ldr	x2, [sp, #16]
    2a20:	mov	x1, x0
    2a24:	mov	x0, x4
    2a28:	bl	2d68 <glob1>
    2a2c:	str	w0, [sp, #52]
    2a30:	ldr	w0, [sp, #52]
    2a34:	cmp	w0, #0x0
    2a38:	b.eq	2a50 <glob0+0x360>  // b.none
    2a3c:	ldr	x0, [sp, #16]
    2a40:	ldr	w1, [sp, #44]
    2a44:	str	w1, [x0, #12]
    2a48:	ldr	w0, [sp, #52]
    2a4c:	b	2b68 <glob0+0x478>
    2a50:	ldr	x0, [sp, #16]
    2a54:	ldr	w0, [x0]
    2a58:	ldr	w1, [sp, #48]
    2a5c:	cmp	w1, w0
    2a60:	b.ne	2ac4 <glob0+0x3d4>  // b.any
    2a64:	ldr	x0, [sp, #16]
    2a68:	ldr	w0, [x0, #12]
    2a6c:	and	w0, w0, #0x10
    2a70:	cmp	w0, #0x0
    2a74:	b.ne	2aa0 <glob0+0x3b0>  // b.any
    2a78:	ldr	x0, [sp, #16]
    2a7c:	ldr	w0, [x0, #12]
    2a80:	and	w0, w0, #0x200
    2a84:	cmp	w0, #0x0
    2a88:	b.eq	2ac4 <glob0+0x3d4>  // b.none
    2a8c:	ldr	x0, [sp, #16]
    2a90:	ldr	w0, [x0, #12]
    2a94:	and	w0, w0, #0x100
    2a98:	cmp	w0, #0x0
    2a9c:	b.ne	2ac4 <glob0+0x3d4>  // b.any
    2aa0:	ldr	x0, [sp, #16]
    2aa4:	ldr	w1, [sp, #44]
    2aa8:	str	w1, [x0, #12]
    2aac:	add	x0, sp, #0x38
    2ab0:	mov	x2, x0
    2ab4:	ldr	x1, [sp, #16]
    2ab8:	ldr	x0, [sp, #80]
    2abc:	bl	33d4 <globextend>
    2ac0:	b	2b68 <glob0+0x478>
    2ac4:	ldr	x0, [sp, #16]
    2ac8:	ldr	w0, [x0, #12]
    2acc:	and	w0, w0, #0x20
    2ad0:	cmp	w0, #0x0
    2ad4:	b.ne	2b58 <glob0+0x468>  // b.any
    2ad8:	ldr	x0, [sp, #16]
    2adc:	ldr	x0, [x0, #16]
    2ae0:	cmp	x0, #0x0
    2ae4:	b.eq	2b58 <glob0+0x468>  // b.none
    2ae8:	ldr	x0, [sp, #16]
    2aec:	ldr	x1, [x0, #16]
    2af0:	ldr	x0, [sp, #16]
    2af4:	ldr	w0, [x0, #8]
    2af8:	sxtw	x2, w0
    2afc:	ldrsw	x0, [sp, #48]
    2b00:	add	x0, x2, x0
    2b04:	lsl	x0, x0, #3
    2b08:	add	x4, x1, x0
    2b0c:	ldr	x0, [sp, #16]
    2b10:	ldr	w1, [x0]
    2b14:	ldr	w0, [sp, #48]
    2b18:	sub	w0, w1, w0
    2b1c:	sxtw	x1, w0
    2b20:	ldr	x0, [sp, #16]
    2b24:	ldr	w0, [x0, #12]
    2b28:	and	w0, w0, #0x3000
    2b2c:	cmp	w0, #0x0
    2b30:	b.eq	2b40 <glob0+0x450>  // b.none
    2b34:	adrp	x0, 2000 <bsd_glob+0x1c8>
    2b38:	add	x0, x0, #0xba0
    2b3c:	b	2b48 <glob0+0x458>
    2b40:	adrp	x0, 2000 <bsd_glob+0x1c8>
    2b44:	add	x0, x0, #0xd34
    2b48:	mov	x3, x0
    2b4c:	mov	x2, #0x8                   	// #8
    2b50:	mov	x0, x4
    2b54:	bl	1910 <qsort@plt>
    2b58:	ldr	x0, [sp, #16]
    2b5c:	ldr	w1, [sp, #44]
    2b60:	str	w1, [x0, #12]
    2b64:	mov	w0, #0x0                   	// #0
    2b68:	mov	w1, w0
    2b6c:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    2b70:	ldr	x0, [x0, #4048]
    2b74:	ldr	x2, [sp, #8280]
    2b78:	ldr	x0, [x0]
    2b7c:	eor	x0, x2, x0
    2b80:	cmp	x0, #0x0
    2b84:	b.eq	2b8c <glob0+0x49c>  // b.none
    2b88:	bl	1a00 <__stack_chk_fail@plt>
    2b8c:	mov	w0, w1
    2b90:	ldp	x29, x30, [sp]
    2b94:	mov	x12, #0x2060                	// #8288
    2b98:	add	sp, sp, x12
    2b9c:	ret

0000000000002ba0 <ci_compare>:
    2ba0:	stp	x29, x30, [sp, #-64]!
    2ba4:	mov	x29, sp
    2ba8:	str	x0, [sp, #24]
    2bac:	str	x1, [sp, #16]
    2bb0:	ldr	x0, [sp, #24]
    2bb4:	ldr	x0, [x0]
    2bb8:	str	x0, [sp, #48]
    2bbc:	ldr	x0, [sp, #16]
    2bc0:	ldr	x0, [x0]
    2bc4:	str	x0, [sp, #56]
    2bc8:	b	2c64 <ci_compare+0xc4>
    2bcc:	ldr	x0, [sp, #48]
    2bd0:	ldrb	w0, [x0]
    2bd4:	sub	w0, w0, #0x41
    2bd8:	cmp	w0, #0x19
    2bdc:	b.hi	2c00 <ci_compare+0x60>  // b.pmore
    2be0:	ldr	x0, [sp, #48]
    2be4:	ldrb	w0, [x0]
    2be8:	sxtb	w0, w0
    2bec:	add	w0, w0, #0x20
    2bf0:	sxtb	w0, w0
    2bf4:	and	w0, w0, #0xff
    2bf8:	mov	w1, w0
    2bfc:	b	2c0c <ci_compare+0x6c>
    2c00:	ldr	x0, [sp, #48]
    2c04:	ldrb	w0, [x0]
    2c08:	mov	w1, w0
    2c0c:	ldr	x0, [sp, #56]
    2c10:	ldrb	w0, [x0]
    2c14:	sub	w0, w0, #0x41
    2c18:	cmp	w0, #0x19
    2c1c:	b.hi	2c3c <ci_compare+0x9c>  // b.pmore
    2c20:	ldr	x0, [sp, #56]
    2c24:	ldrb	w0, [x0]
    2c28:	sxtb	w0, w0
    2c2c:	add	w0, w0, #0x20
    2c30:	sxtb	w0, w0
    2c34:	and	w0, w0, #0xff
    2c38:	b	2c44 <ci_compare+0xa4>
    2c3c:	ldr	x0, [sp, #56]
    2c40:	ldrb	w0, [x0]
    2c44:	cmp	w1, w0
    2c48:	b.ne	2c88 <ci_compare+0xe8>  // b.any
    2c4c:	ldr	x0, [sp, #48]
    2c50:	add	x0, x0, #0x1
    2c54:	str	x0, [sp, #48]
    2c58:	ldr	x0, [sp, #56]
    2c5c:	add	x0, x0, #0x1
    2c60:	str	x0, [sp, #56]
    2c64:	ldr	x0, [sp, #48]
    2c68:	ldrb	w0, [x0]
    2c6c:	cmp	w0, #0x0
    2c70:	b.eq	2c8c <ci_compare+0xec>  // b.none
    2c74:	ldr	x0, [sp, #56]
    2c78:	ldrb	w0, [x0]
    2c7c:	cmp	w0, #0x0
    2c80:	b.ne	2bcc <ci_compare+0x2c>  // b.any
    2c84:	b	2c8c <ci_compare+0xec>
    2c88:	nop
    2c8c:	ldr	x0, [sp, #48]
    2c90:	ldrb	w0, [x0]
    2c94:	sub	w0, w0, #0x41
    2c98:	cmp	w0, #0x19
    2c9c:	b.hi	2cc0 <ci_compare+0x120>  // b.pmore
    2ca0:	ldr	x0, [sp, #48]
    2ca4:	ldrb	w0, [x0]
    2ca8:	sxtb	w0, w0
    2cac:	add	w0, w0, #0x20
    2cb0:	sxtb	w0, w0
    2cb4:	and	w0, w0, #0xff
    2cb8:	mov	w1, w0
    2cbc:	b	2ccc <ci_compare+0x12c>
    2cc0:	ldr	x0, [sp, #48]
    2cc4:	ldrb	w0, [x0]
    2cc8:	mov	w1, w0
    2ccc:	ldr	x0, [sp, #56]
    2cd0:	ldrb	w0, [x0]
    2cd4:	sub	w0, w0, #0x41
    2cd8:	cmp	w0, #0x19
    2cdc:	b.hi	2cfc <ci_compare+0x15c>  // b.pmore
    2ce0:	ldr	x0, [sp, #56]
    2ce4:	ldrb	w0, [x0]
    2ce8:	sxtb	w0, w0
    2cec:	add	w0, w0, #0x20
    2cf0:	sxtb	w0, w0
    2cf4:	and	w0, w0, #0xff
    2cf8:	b	2d04 <ci_compare+0x164>
    2cfc:	ldr	x0, [sp, #56]
    2d00:	ldrb	w0, [x0]
    2d04:	sub	w0, w1, w0
    2d08:	str	w0, [sp, #44]
    2d0c:	ldr	w0, [sp, #44]
    2d10:	cmp	w0, #0x0
    2d14:	b.ne	2d28 <ci_compare+0x188>  // b.any
    2d18:	ldr	x1, [sp, #16]
    2d1c:	ldr	x0, [sp, #24]
    2d20:	bl	2d34 <compare>
    2d24:	b	2d2c <ci_compare+0x18c>
    2d28:	ldr	w0, [sp, #44]
    2d2c:	ldp	x29, x30, [sp], #64
    2d30:	ret

0000000000002d34 <compare>:
    2d34:	stp	x29, x30, [sp, #-32]!
    2d38:	mov	x29, sp
    2d3c:	str	x0, [sp, #24]
    2d40:	str	x1, [sp, #16]
    2d44:	ldr	x0, [sp, #24]
    2d48:	ldr	x2, [x0]
    2d4c:	ldr	x0, [sp, #16]
    2d50:	ldr	x0, [x0]
    2d54:	mov	x1, x0
    2d58:	mov	x0, x2
    2d5c:	bl	1a50 <strcmp@plt>
    2d60:	ldp	x29, x30, [sp], #32
    2d64:	ret

0000000000002d68 <glob1>:
    2d68:	mov	x12, #0x2040                	// #8256
    2d6c:	sub	sp, sp, x12
    2d70:	stp	x29, x30, [sp]
    2d74:	mov	x29, sp
    2d78:	str	x0, [sp, #40]
    2d7c:	str	x1, [sp, #32]
    2d80:	str	x2, [sp, #24]
    2d84:	str	x3, [sp, #16]
    2d88:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    2d8c:	ldr	x0, [x0, #4048]
    2d90:	ldr	x1, [x0]
    2d94:	str	x1, [sp, #8248]
    2d98:	mov	x1, #0x0                   	// #0
    2d9c:	ldr	x0, [sp, #40]
    2da0:	ldrh	w0, [x0]
    2da4:	cmp	w0, #0x0
    2da8:	b.ne	2db4 <glob1+0x4c>  // b.any
    2dac:	mov	w0, #0x0                   	// #0
    2db0:	b	2df4 <glob1+0x8c>
    2db4:	add	x0, sp, #0x38
    2db8:	mov	x1, #0x1ffe                	// #8190
    2dbc:	add	x0, x0, x1
    2dc0:	add	x1, sp, #0x38
    2dc4:	mov	x2, #0x1ffe                	// #8190
    2dc8:	add	x1, x1, x2
    2dcc:	add	x2, sp, #0x38
    2dd0:	add	x8, sp, #0x38
    2dd4:	ldr	x7, [sp, #16]
    2dd8:	ldr	x6, [sp, #24]
    2ddc:	ldr	x5, [sp, #32]
    2de0:	ldr	x4, [sp, #40]
    2de4:	mov	x3, x1
    2de8:	mov	x1, x0
    2dec:	mov	x0, x8
    2df0:	bl	2e2c <glob2>
    2df4:	mov	w1, w0
    2df8:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    2dfc:	ldr	x0, [x0, #4048]
    2e00:	ldr	x2, [sp, #8248]
    2e04:	ldr	x0, [x0]
    2e08:	eor	x0, x2, x0
    2e0c:	cmp	x0, #0x0
    2e10:	b.eq	2e18 <glob1+0xb0>  // b.none
    2e14:	bl	1a00 <__stack_chk_fail@plt>
    2e18:	mov	w0, w1
    2e1c:	ldp	x29, x30, [sp]
    2e20:	mov	x12, #0x2040                	// #8256
    2e24:	add	sp, sp, x12
    2e28:	ret

0000000000002e2c <glob2>:
    2e2c:	sub	sp, sp, #0x100
    2e30:	stp	x29, x30, [sp, #16]
    2e34:	add	x29, sp, #0x10
    2e38:	str	x0, [sp, #88]
    2e3c:	str	x1, [sp, #80]
    2e40:	str	x2, [sp, #72]
    2e44:	str	x3, [sp, #64]
    2e48:	str	x4, [sp, #56]
    2e4c:	str	x5, [sp, #48]
    2e50:	str	x6, [sp, #40]
    2e54:	str	x7, [sp, #32]
    2e58:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    2e5c:	ldr	x0, [x0, #4048]
    2e60:	ldr	x1, [x0]
    2e64:	str	x1, [sp, #248]
    2e68:	mov	x1, #0x0                   	// #0
    2e6c:	str	wzr, [sp, #100]
    2e70:	ldr	x0, [sp, #56]
    2e74:	ldrh	w0, [x0]
    2e78:	cmp	w0, #0x0
    2e7c:	b.ne	2f80 <glob2+0x154>  // b.any
    2e80:	ldr	x0, [sp, #72]
    2e84:	strh	wzr, [x0]
    2e88:	add	x0, sp, #0x78
    2e8c:	ldr	x2, [sp, #40]
    2e90:	mov	x1, x0
    2e94:	ldr	x0, [sp, #88]
    2e98:	bl	3ba8 <g_lstat>
    2e9c:	cmp	w0, #0x0
    2ea0:	b.eq	2eac <glob2+0x80>  // b.none
    2ea4:	mov	w0, #0x0                   	// #0
    2ea8:	b	30a8 <glob2+0x27c>
    2eac:	ldr	x0, [sp, #40]
    2eb0:	ldr	w0, [x0, #12]
    2eb4:	and	w0, w0, #0x8
    2eb8:	cmp	w0, #0x0
    2ebc:	b.eq	2f58 <glob2+0x12c>  // b.none
    2ec0:	ldr	x0, [sp, #72]
    2ec4:	sub	x0, x0, #0x2
    2ec8:	ldrh	w0, [x0]
    2ecc:	cmp	w0, #0x2f
    2ed0:	b.eq	2f58 <glob2+0x12c>  // b.none
    2ed4:	ldr	w0, [sp, #136]
    2ed8:	and	w0, w0, #0xf000
    2edc:	cmp	w0, #0x4, lsl #12
    2ee0:	b.eq	2f20 <glob2+0xf4>  // b.none
    2ee4:	ldr	w0, [sp, #136]
    2ee8:	and	w0, w0, #0xf000
    2eec:	cmp	w0, #0xa, lsl #12
    2ef0:	b.ne	2f58 <glob2+0x12c>  // b.any
    2ef4:	add	x0, sp, #0x78
    2ef8:	ldr	x2, [sp, #40]
    2efc:	mov	x1, x0
    2f00:	ldr	x0, [sp, #88]
    2f04:	bl	3c6c <g_stat>
    2f08:	cmp	w0, #0x0
    2f0c:	b.ne	2f58 <glob2+0x12c>  // b.any
    2f10:	ldr	w0, [sp, #136]
    2f14:	and	w0, w0, #0xf000
    2f18:	cmp	w0, #0x4, lsl #12
    2f1c:	b.ne	2f58 <glob2+0x12c>  // b.any
    2f20:	ldr	x0, [sp, #72]
    2f24:	add	x0, x0, #0x2
    2f28:	ldr	x1, [sp, #64]
    2f2c:	cmp	x1, x0
    2f30:	b.cs	2f3c <glob2+0x110>  // b.hs, b.nlast
    2f34:	mov	w0, #0x1                   	// #1
    2f38:	b	30a8 <glob2+0x27c>
    2f3c:	ldr	x0, [sp, #72]
    2f40:	add	x1, x0, #0x2
    2f44:	str	x1, [sp, #72]
    2f48:	mov	w1, #0x2f                  	// #47
    2f4c:	strh	w1, [x0]
    2f50:	ldr	x0, [sp, #72]
    2f54:	strh	wzr, [x0]
    2f58:	ldr	x0, [sp, #40]
    2f5c:	ldr	w0, [x0, #4]
    2f60:	add	w1, w0, #0x1
    2f64:	ldr	x0, [sp, #40]
    2f68:	str	w1, [x0, #4]
    2f6c:	ldr	x2, [sp, #32]
    2f70:	ldr	x1, [sp, #40]
    2f74:	ldr	x0, [sp, #88]
    2f78:	bl	33d4 <globextend>
    2f7c:	b	30a8 <glob2+0x27c>
    2f80:	ldr	x0, [sp, #72]
    2f84:	str	x0, [sp, #112]
    2f88:	ldr	x0, [sp, #56]
    2f8c:	str	x0, [sp, #104]
    2f90:	b	2fec <glob2+0x1c0>
    2f94:	ldr	x0, [sp, #104]
    2f98:	ldrh	w0, [x0]
    2f9c:	sxth	w0, w0
    2fa0:	cmp	w0, #0x0
    2fa4:	b.ge	2fb0 <glob2+0x184>  // b.tcont
    2fa8:	mov	w0, #0x1                   	// #1
    2fac:	str	w0, [sp, #100]
    2fb0:	ldr	x0, [sp, #112]
    2fb4:	add	x0, x0, #0x2
    2fb8:	ldr	x1, [sp, #64]
    2fbc:	cmp	x1, x0
    2fc0:	b.cs	2fcc <glob2+0x1a0>  // b.hs, b.nlast
    2fc4:	mov	w0, #0x1                   	// #1
    2fc8:	b	30a8 <glob2+0x27c>
    2fcc:	ldr	x1, [sp, #104]
    2fd0:	add	x0, x1, #0x2
    2fd4:	str	x0, [sp, #104]
    2fd8:	ldr	x0, [sp, #112]
    2fdc:	add	x2, x0, #0x2
    2fe0:	str	x2, [sp, #112]
    2fe4:	ldrh	w1, [x1]
    2fe8:	strh	w1, [x0]
    2fec:	ldr	x0, [sp, #104]
    2ff0:	ldrh	w0, [x0]
    2ff4:	cmp	w0, #0x0
    2ff8:	b.eq	300c <glob2+0x1e0>  // b.none
    2ffc:	ldr	x0, [sp, #104]
    3000:	ldrh	w0, [x0]
    3004:	cmp	w0, #0x2f
    3008:	b.ne	2f94 <glob2+0x168>  // b.any
    300c:	ldr	w0, [sp, #100]
    3010:	cmp	w0, #0x0
    3014:	b.ne	307c <glob2+0x250>  // b.any
    3018:	ldr	x0, [sp, #112]
    301c:	str	x0, [sp, #72]
    3020:	ldr	x0, [sp, #104]
    3024:	str	x0, [sp, #56]
    3028:	b	3068 <glob2+0x23c>
    302c:	ldr	x0, [sp, #72]
    3030:	add	x0, x0, #0x2
    3034:	ldr	x1, [sp, #64]
    3038:	cmp	x1, x0
    303c:	b.cs	3048 <glob2+0x21c>  // b.hs, b.nlast
    3040:	mov	w0, #0x1                   	// #1
    3044:	b	30a8 <glob2+0x27c>
    3048:	ldr	x1, [sp, #56]
    304c:	add	x0, x1, #0x2
    3050:	str	x0, [sp, #56]
    3054:	ldr	x0, [sp, #72]
    3058:	add	x2, x0, #0x2
    305c:	str	x2, [sp, #72]
    3060:	ldrh	w1, [x1]
    3064:	strh	w1, [x0]
    3068:	ldr	x0, [sp, #56]
    306c:	ldrh	w0, [x0]
    3070:	cmp	w0, #0x2f
    3074:	b.eq	302c <glob2+0x200>  // b.none
    3078:	b	2e70 <glob2+0x44>
    307c:	ldr	x0, [sp, #32]
    3080:	str	x0, [sp]
    3084:	ldr	x7, [sp, #40]
    3088:	ldr	x6, [sp, #48]
    308c:	ldr	x5, [sp, #104]
    3090:	ldr	x4, [sp, #56]
    3094:	ldr	x3, [sp, #64]
    3098:	ldr	x2, [sp, #72]
    309c:	ldr	x1, [sp, #80]
    30a0:	ldr	x0, [sp, #88]
    30a4:	bl	30dc <glob3>
    30a8:	mov	w1, w0
    30ac:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    30b0:	ldr	x0, [x0, #4048]
    30b4:	ldr	x2, [sp, #248]
    30b8:	ldr	x0, [x0]
    30bc:	eor	x0, x2, x0
    30c0:	cmp	x0, #0x0
    30c4:	b.eq	30cc <glob2+0x2a0>  // b.none
    30c8:	bl	1a00 <__stack_chk_fail@plt>
    30cc:	mov	w0, w1
    30d0:	ldp	x29, x30, [sp, #16]
    30d4:	add	sp, sp, #0x100
    30d8:	ret

00000000000030dc <glob3>:
    30dc:	mov	x12, #0x10b0                	// #4272
    30e0:	sub	sp, sp, x12
    30e4:	stp	x29, x30, [sp]
    30e8:	mov	x29, sp
    30ec:	str	x19, [sp, #16]
    30f0:	str	x0, [sp, #104]
    30f4:	str	x1, [sp, #96]
    30f8:	str	x2, [sp, #88]
    30fc:	str	x3, [sp, #80]
    3100:	str	x4, [sp, #72]
    3104:	str	x5, [sp, #64]
    3108:	str	x6, [sp, #56]
    310c:	str	x7, [sp, #48]
    3110:	ldr	x0, [sp, #4272]
    3114:	str	x0, [sp, #40]
    3118:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    311c:	ldr	x0, [x0, #4048]
    3120:	ldr	x1, [x0]
    3124:	str	x1, [sp, #4264]
    3128:	mov	x1, #0x0                   	// #0
    312c:	ldr	x1, [sp, #88]
    3130:	ldr	x0, [sp, #80]
    3134:	cmp	x1, x0
    3138:	b.ls	3144 <glob3+0x68>  // b.plast
    313c:	mov	w0, #0x1                   	// #1
    3140:	b	3398 <glob3+0x2bc>
    3144:	ldr	x0, [sp, #88]
    3148:	strh	wzr, [x0]
    314c:	bl	1bf0 <__errno_location@plt>
    3150:	str	wzr, [x0]
    3154:	ldr	x1, [sp, #48]
    3158:	ldr	x0, [sp, #104]
    315c:	bl	3ac4 <g_opendir>
    3160:	str	x0, [sp, #152]
    3164:	ldr	x0, [sp, #152]
    3168:	cmp	x0, #0x0
    316c:	b.ne	31e8 <glob3+0x10c>  // b.any
    3170:	ldr	x0, [sp, #48]
    3174:	ldr	x0, [x0, #24]
    3178:	cmp	x0, #0x0
    317c:	b.eq	31e0 <glob3+0x104>  // b.none
    3180:	add	x0, sp, #0xa8
    3184:	mov	x2, #0x1000                	// #4096
    3188:	mov	x1, x0
    318c:	ldr	x0, [sp, #104]
    3190:	bl	3d80 <g_Ctoc>
    3194:	cmp	w0, #0x0
    3198:	b.eq	31a4 <glob3+0xc8>  // b.none
    319c:	mov	w0, #0xfffffffe            	// #-2
    31a0:	b	3398 <glob3+0x2bc>
    31a4:	ldr	x0, [sp, #48]
    31a8:	ldr	x19, [x0, #24]
    31ac:	bl	1bf0 <__errno_location@plt>
    31b0:	ldr	w1, [x0]
    31b4:	add	x0, sp, #0xa8
    31b8:	blr	x19
    31bc:	cmp	w0, #0x0
    31c0:	b.ne	31d8 <glob3+0xfc>  // b.any
    31c4:	ldr	x0, [sp, #48]
    31c8:	ldr	w0, [x0, #12]
    31cc:	and	w0, w0, #0x4
    31d0:	cmp	w0, #0x0
    31d4:	b.eq	31e0 <glob3+0x104>  // b.none
    31d8:	mov	w0, #0xfffffffe            	// #-2
    31dc:	b	3398 <glob3+0x2bc>
    31e0:	mov	w0, #0x0                   	// #0
    31e4:	b	3398 <glob3+0x2bc>
    31e8:	str	wzr, [sp, #120]
    31ec:	ldr	x0, [sp, #48]
    31f0:	ldr	w0, [x0, #12]
    31f4:	and	w0, w0, #0x1000
    31f8:	cmp	w0, #0x0
    31fc:	cset	w0, ne  // ne = any
    3200:	and	w0, w0, #0xff
    3204:	str	w0, [sp, #124]
    3208:	ldr	x0, [sp, #48]
    320c:	ldr	w0, [x0, #12]
    3210:	and	w0, w0, #0x40
    3214:	cmp	w0, #0x0
    3218:	b.eq	322c <glob3+0x150>  // b.none
    321c:	ldr	x0, [sp, #48]
    3220:	ldr	x0, [x0, #40]
    3224:	str	x0, [sp, #128]
    3228:	b	3340 <glob3+0x264>
    322c:	adrp	x0, 1000 <_init-0x838>
    3230:	add	x0, x0, #0xe1c
    3234:	str	x0, [sp, #128]
    3238:	b	3340 <glob3+0x264>
    323c:	ldr	x0, [sp, #160]
    3240:	ldrb	w0, [x0, #19]
    3244:	cmp	w0, #0x2e
    3248:	b.ne	3260 <glob3+0x184>  // b.any
    324c:	ldr	x0, [sp, #72]
    3250:	ldrh	w0, [x0]
    3254:	cmp	w0, #0x2e
    3258:	b.eq	3260 <glob3+0x184>  // b.none
    325c:	b	3340 <glob3+0x264>
    3260:	ldr	x0, [sp, #88]
    3264:	str	x0, [sp, #144]
    3268:	ldr	x0, [sp, #160]
    326c:	add	x0, x0, #0x13
    3270:	str	x0, [sp, #136]
    3274:	ldr	x1, [sp, #144]
    3278:	ldr	x0, [sp, #80]
    327c:	cmp	x1, x0
    3280:	b.cs	32b4 <glob3+0x1d8>  // b.hs, b.nlast
    3284:	ldr	x0, [sp, #136]
    3288:	add	x1, x0, #0x1
    328c:	str	x1, [sp, #136]
    3290:	ldrb	w2, [x0]
    3294:	ldr	x0, [sp, #144]
    3298:	add	x1, x0, #0x2
    329c:	str	x1, [sp, #144]
    32a0:	and	w1, w2, #0xffff
    32a4:	strh	w1, [x0]
    32a8:	ldrh	w0, [x0]
    32ac:	cmp	w0, #0x0
    32b0:	b.ne	3274 <glob3+0x198>  // b.any
    32b4:	ldr	x1, [sp, #144]
    32b8:	ldr	x0, [sp, #80]
    32bc:	cmp	x1, x0
    32c0:	b.cc	32d8 <glob3+0x1fc>  // b.lo, b.ul, b.last
    32c4:	ldr	x0, [sp, #144]
    32c8:	strh	wzr, [x0]
    32cc:	mov	w0, #0x1                   	// #1
    32d0:	str	w0, [sp, #120]
    32d4:	b	3364 <glob3+0x288>
    32d8:	ldr	w3, [sp, #124]
    32dc:	ldr	x2, [sp, #64]
    32e0:	ldr	x1, [sp, #72]
    32e4:	ldr	x0, [sp, #88]
    32e8:	bl	36d0 <match>
    32ec:	cmp	w0, #0x0
    32f0:	b.ne	3300 <glob3+0x224>  // b.any
    32f4:	ldr	x0, [sp, #88]
    32f8:	strh	wzr, [x0]
    32fc:	b	3340 <glob3+0x264>
    3300:	ldr	x0, [sp, #144]
    3304:	sub	x0, x0, #0x2
    3308:	str	x0, [sp, #144]
    330c:	ldr	x7, [sp, #40]
    3310:	ldr	x6, [sp, #48]
    3314:	ldr	x5, [sp, #56]
    3318:	ldr	x4, [sp, #64]
    331c:	ldr	x3, [sp, #80]
    3320:	ldr	x2, [sp, #144]
    3324:	ldr	x1, [sp, #96]
    3328:	ldr	x0, [sp, #104]
    332c:	bl	2e2c <glob2>
    3330:	str	w0, [sp, #120]
    3334:	ldr	w0, [sp, #120]
    3338:	cmp	w0, #0x0
    333c:	b.ne	3360 <glob3+0x284>  // b.any
    3340:	ldr	x1, [sp, #128]
    3344:	ldr	x0, [sp, #152]
    3348:	blr	x1
    334c:	str	x0, [sp, #160]
    3350:	ldr	x0, [sp, #160]
    3354:	cmp	x0, #0x0
    3358:	b.ne	323c <glob3+0x160>  // b.any
    335c:	b	3364 <glob3+0x288>
    3360:	nop
    3364:	ldr	x0, [sp, #48]
    3368:	ldr	w0, [x0, #12]
    336c:	and	w0, w0, #0x40
    3370:	cmp	w0, #0x0
    3374:	b.eq	338c <glob3+0x2b0>  // b.none
    3378:	ldr	x0, [sp, #48]
    337c:	ldr	x1, [x0, #32]
    3380:	ldr	x0, [sp, #152]
    3384:	blr	x1
    3388:	b	3394 <glob3+0x2b8>
    338c:	ldr	x0, [sp, #152]
    3390:	bl	19f0 <closedir@plt>
    3394:	ldr	w0, [sp, #120]
    3398:	mov	w1, w0
    339c:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    33a0:	ldr	x0, [x0, #4048]
    33a4:	ldr	x2, [sp, #4264]
    33a8:	ldr	x0, [x0]
    33ac:	eor	x0, x2, x0
    33b0:	cmp	x0, #0x0
    33b4:	b.eq	33bc <glob3+0x2e0>  // b.none
    33b8:	bl	1a00 <__stack_chk_fail@plt>
    33bc:	mov	w0, w1
    33c0:	ldr	x19, [sp, #16]
    33c4:	ldp	x29, x30, [sp]
    33c8:	mov	x12, #0x10b0                	// #4272
    33cc:	add	sp, sp, x12
    33d0:	ret

00000000000033d4 <globextend>:
    33d4:	stp	x29, x30, [sp, #-112]!
    33d8:	mov	x29, sp
    33dc:	str	x19, [sp, #16]
    33e0:	str	x0, [sp, #56]
    33e4:	str	x1, [sp, #48]
    33e8:	str	x2, [sp, #40]
    33ec:	ldr	x0, [sp, #48]
    33f0:	ldr	w1, [x0]
    33f4:	ldr	x0, [sp, #48]
    33f8:	ldr	w0, [x0, #8]
    33fc:	add	w0, w1, w0
    3400:	add	w0, w0, #0x2
    3404:	sxtw	x0, w0
    3408:	lsl	x0, x0, #3
    340c:	str	x0, [sp, #88]
    3410:	ldr	x0, [sp, #48]
    3414:	ldr	x0, [x0, #16]
    3418:	cmp	x0, #0x0
    341c:	b.eq	347c <globextend+0xa8>  // b.none
    3420:	ldr	x1, [sp, #88]
    3424:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    3428:	cmp	x1, x0
    342c:	cset	w0, hi  // hi = pmore
    3430:	and	w0, w0, #0xff
    3434:	and	x0, x0, #0xff
    3438:	cmp	x0, #0x0
    343c:	b.eq	3444 <globextend+0x70>  // b.none
    3440:	bl	1e00 <S_croak_memory_wrap>
    3444:	ldr	x0, [sp, #48]
    3448:	ldr	x2, [x0, #16]
    344c:	ldr	x0, [sp, #88]
    3450:	lsl	x0, x0, #3
    3454:	mov	x1, x0
    3458:	mov	x0, x2
    345c:	bl	1af0 <Perl_safesysrealloc@plt>
    3460:	mov	x1, x0
    3464:	ldr	x0, [sp, #48]
    3468:	str	x1, [x0, #16]
    346c:	ldr	x0, [sp, #48]
    3470:	ldr	x0, [x0, #16]
    3474:	str	x0, [sp, #72]
    3478:	b	34b0 <globextend+0xdc>
    347c:	ldr	x1, [sp, #88]
    3480:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    3484:	cmp	x1, x0
    3488:	cset	w0, hi  // hi = pmore
    348c:	and	w0, w0, #0xff
    3490:	and	x0, x0, #0xff
    3494:	cmp	x0, #0x0
    3498:	b.eq	34a0 <globextend+0xcc>  // b.none
    349c:	bl	1e00 <S_croak_memory_wrap>
    34a0:	ldr	x0, [sp, #88]
    34a4:	lsl	x0, x0, #3
    34a8:	bl	19e0 <Perl_safesysmalloc@plt>
    34ac:	str	x0, [sp, #72]
    34b0:	ldr	x0, [sp, #72]
    34b4:	cmp	x0, #0x0
    34b8:	b.ne	34e8 <globextend+0x114>  // b.any
    34bc:	ldr	x0, [sp, #48]
    34c0:	ldr	x0, [x0, #16]
    34c4:	cmp	x0, #0x0
    34c8:	b.eq	34e0 <globextend+0x10c>  // b.none
    34cc:	ldr	x0, [sp, #48]
    34d0:	ldr	x0, [x0, #16]
    34d4:	bl	1ae0 <Perl_safesysfree@plt>
    34d8:	ldr	x0, [sp, #48]
    34dc:	str	xzr, [x0, #16]
    34e0:	mov	w0, #0xffffffff            	// #-1
    34e4:	b	36c4 <globextend+0x2f0>
    34e8:	ldr	x0, [sp, #48]
    34ec:	ldr	x0, [x0, #16]
    34f0:	cmp	x0, #0x0
    34f4:	b.ne	3560 <globextend+0x18c>  // b.any
    34f8:	ldr	x0, [sp, #48]
    34fc:	ldr	w0, [x0, #8]
    3500:	cmp	w0, #0x0
    3504:	b.le	3560 <globextend+0x18c>
    3508:	ldr	x0, [sp, #48]
    350c:	ldr	w0, [x0, #8]
    3510:	sxtw	x0, w0
    3514:	lsl	x0, x0, #3
    3518:	ldr	x1, [sp, #72]
    351c:	add	x0, x1, x0
    3520:	str	x0, [sp, #72]
    3524:	ldr	x0, [sp, #48]
    3528:	ldr	w0, [x0, #8]
    352c:	str	w0, [sp, #68]
    3530:	b	3548 <globextend+0x174>
    3534:	ldr	x0, [sp, #72]
    3538:	sub	x0, x0, #0x8
    353c:	str	x0, [sp, #72]
    3540:	ldr	x0, [sp, #72]
    3544:	str	xzr, [x0]
    3548:	ldr	w0, [sp, #68]
    354c:	sub	w0, w0, #0x1
    3550:	str	w0, [sp, #68]
    3554:	ldr	w0, [sp, #68]
    3558:	cmp	w0, #0x0
    355c:	b.ge	3534 <globextend+0x160>  // b.tcont
    3560:	ldr	x0, [sp, #48]
    3564:	ldr	x1, [sp, #72]
    3568:	str	x1, [x0, #16]
    356c:	ldr	x0, [sp, #56]
    3570:	str	x0, [sp, #80]
    3574:	nop
    3578:	ldr	x0, [sp, #80]
    357c:	add	x1, x0, #0x2
    3580:	str	x1, [sp, #80]
    3584:	ldrh	w0, [x0]
    3588:	cmp	w0, #0x0
    358c:	b.ne	3578 <globextend+0x1a4>  // b.any
    3590:	ldr	x1, [sp, #80]
    3594:	ldr	x0, [sp, #56]
    3598:	sub	x0, x1, x0
    359c:	asr	x0, x0, #1
    35a0:	str	x0, [sp, #96]
    35a4:	ldr	x0, [sp, #40]
    35a8:	ldr	x1, [x0]
    35ac:	ldr	x0, [sp, #96]
    35b0:	add	x1, x1, x0
    35b4:	ldr	x0, [sp, #40]
    35b8:	str	x1, [x0]
    35bc:	ldr	x1, [sp, #80]
    35c0:	ldr	x0, [sp, #56]
    35c4:	sub	x0, x1, x0
    35c8:	asr	x0, x0, #1
    35cc:	bl	19e0 <Perl_safesysmalloc@plt>
    35d0:	str	x0, [sp, #104]
    35d4:	ldr	x0, [sp, #104]
    35d8:	cmp	x0, #0x0
    35dc:	b.eq	3640 <globextend+0x26c>  // b.none
    35e0:	ldr	x2, [sp, #96]
    35e4:	ldr	x1, [sp, #104]
    35e8:	ldr	x0, [sp, #56]
    35ec:	bl	3d80 <g_Ctoc>
    35f0:	cmp	w0, #0x0
    35f4:	b.eq	3608 <globextend+0x234>  // b.none
    35f8:	ldr	x0, [sp, #104]
    35fc:	bl	1ae0 <Perl_safesysfree@plt>
    3600:	mov	w0, #0xffffffff            	// #-1
    3604:	b	36c4 <globextend+0x2f0>
    3608:	ldr	x0, [sp, #48]
    360c:	ldr	w1, [x0, #8]
    3610:	ldr	x0, [sp, #48]
    3614:	ldr	w0, [x0]
    3618:	add	w3, w0, #0x1
    361c:	ldr	x2, [sp, #48]
    3620:	str	w3, [x2]
    3624:	add	w0, w1, w0
    3628:	sxtw	x0, w0
    362c:	lsl	x0, x0, #3
    3630:	ldr	x1, [sp, #72]
    3634:	add	x0, x1, x0
    3638:	ldr	x1, [sp, #104]
    363c:	str	x1, [x0]
    3640:	ldr	x0, [sp, #48]
    3644:	ldr	w1, [x0, #8]
    3648:	ldr	x0, [sp, #48]
    364c:	ldr	w0, [x0]
    3650:	add	w0, w1, w0
    3654:	sxtw	x0, w0
    3658:	lsl	x0, x0, #3
    365c:	ldr	x1, [sp, #72]
    3660:	add	x0, x1, x0
    3664:	str	xzr, [x0]
    3668:	ldr	x0, [sp, #48]
    366c:	ldr	w0, [x0, #12]
    3670:	and	w0, w0, #0x4000
    3674:	cmp	w0, #0x0
    3678:	b.eq	36ac <globextend+0x2d8>  // b.none
    367c:	ldr	x0, [sp, #40]
    3680:	ldr	x1, [x0]
    3684:	ldr	x0, [sp, #88]
    3688:	add	x19, x1, x0
    368c:	mov	w0, #0x0                   	// #0
    3690:	bl	1b30 <sysconf@plt>
    3694:	cmp	x19, x0
    3698:	b.cc	36ac <globextend+0x2d8>  // b.lo, b.ul, b.last
    369c:	bl	1bf0 <__errno_location@plt>
    36a0:	str	wzr, [x0]
    36a4:	mov	w0, #0xffffffff            	// #-1
    36a8:	b	36c4 <globextend+0x2f0>
    36ac:	ldr	x0, [sp, #104]
    36b0:	cmp	x0, #0x0
    36b4:	b.ne	36c0 <globextend+0x2ec>  // b.any
    36b8:	mov	w0, #0xffffffff            	// #-1
    36bc:	b	36c4 <globextend+0x2f0>
    36c0:	mov	w0, #0x0                   	// #0
    36c4:	ldr	x19, [sp, #16]
    36c8:	ldp	x29, x30, [sp], #112
    36cc:	ret

00000000000036d0 <match>:
    36d0:	stp	x29, x30, [sp, #-96]!
    36d4:	mov	x29, sp
    36d8:	str	x19, [sp, #16]
    36dc:	str	x0, [sp, #56]
    36e0:	str	x1, [sp, #48]
    36e4:	str	x2, [sp, #40]
    36e8:	str	w3, [sp, #36]
    36ec:	str	xzr, [sp, #80]
    36f0:	str	xzr, [sp, #88]
    36f4:	b	39b0 <match+0x2e0>
    36f8:	ldr	x0, [sp, #48]
    36fc:	add	x1, x0, #0x2
    3700:	str	x1, [sp, #48]
    3704:	ldrh	w0, [x0]
    3708:	strh	w0, [sp, #68]
    370c:	ldrh	w0, [sp, #68]
    3710:	mov	w1, #0x805b                	// #32859
    3714:	cmp	w0, w1
    3718:	b.eq	37b0 <match+0xe0>  // b.none
    371c:	mov	w1, #0x805b                	// #32859
    3720:	cmp	w0, w1
    3724:	b.gt	394c <match+0x27c>
    3728:	mov	w1, #0x802a                	// #32810
    372c:	cmp	w0, w1
    3730:	b.eq	3744 <match+0x74>  // b.none
    3734:	mov	w1, #0x803f                	// #32831
    3738:	cmp	w0, w1
    373c:	b.eq	3790 <match+0xc0>  // b.none
    3740:	b	394c <match+0x27c>
    3744:	ldr	x1, [sp, #48]
    3748:	ldr	x0, [sp, #40]
    374c:	cmp	x1, x0
    3750:	b.ne	375c <match+0x8c>  // b.any
    3754:	mov	w0, #0x1                   	// #1
    3758:	b	3a10 <match+0x340>
    375c:	ldr	x0, [sp, #56]
    3760:	ldrh	w0, [x0]
    3764:	cmp	w0, #0x0
    3768:	b.ne	3774 <match+0xa4>  // b.any
    376c:	mov	w0, #0x0                   	// #0
    3770:	b	3a10 <match+0x340>
    3774:	ldr	x0, [sp, #56]
    3778:	add	x0, x0, #0x2
    377c:	str	x0, [sp, #88]
    3780:	ldr	x0, [sp, #48]
    3784:	sub	x0, x0, #0x2
    3788:	str	x0, [sp, #80]
    378c:	b	39b0 <match+0x2e0>
    3790:	ldr	x0, [sp, #56]
    3794:	add	x1, x0, #0x2
    3798:	str	x1, [sp, #56]
    379c:	ldrh	w0, [x0]
    37a0:	cmp	w0, #0x0
    37a4:	b.ne	39b0 <match+0x2e0>  // b.any
    37a8:	mov	w0, #0x0                   	// #0
    37ac:	b	3a10 <match+0x340>
    37b0:	str	wzr, [sp, #72]
    37b4:	ldr	x0, [sp, #56]
    37b8:	add	x1, x0, #0x2
    37bc:	str	x1, [sp, #56]
    37c0:	ldrh	w0, [x0]
    37c4:	strh	w0, [sp, #70]
    37c8:	ldrh	w0, [sp, #70]
    37cc:	cmp	w0, #0x0
    37d0:	b.ne	37dc <match+0x10c>  // b.any
    37d4:	mov	w0, #0x0                   	// #0
    37d8:	b	3a10 <match+0x340>
    37dc:	ldr	x0, [sp, #48]
    37e0:	ldrh	w1, [x0]
    37e4:	mov	w0, #0x8021                	// #32801
    37e8:	cmp	w1, w0
    37ec:	cset	w0, eq  // eq = none
    37f0:	and	w0, w0, #0xff
    37f4:	str	w0, [sp, #76]
    37f8:	ldr	w0, [sp, #76]
    37fc:	cmp	w0, #0x0
    3800:	b.eq	3914 <match+0x244>  // b.none
    3804:	ldr	x0, [sp, #48]
    3808:	add	x0, x0, #0x2
    380c:	str	x0, [sp, #48]
    3810:	b	3914 <match+0x244>
    3814:	ldr	x0, [sp, #48]
    3818:	ldrh	w1, [x0]
    381c:	mov	w0, #0x802d                	// #32813
    3820:	cmp	w1, w0
    3824:	b.ne	38c0 <match+0x1f0>  // b.any
    3828:	ldr	w0, [sp, #36]
    382c:	cmp	w0, #0x0
    3830:	b.eq	3880 <match+0x1b0>  // b.none
    3834:	ldrh	w0, [sp, #68]
    3838:	bl	1c00 <tolower@plt>
    383c:	mov	w19, w0
    3840:	ldrh	w0, [sp, #70]
    3844:	bl	1c00 <tolower@plt>
    3848:	cmp	w19, w0
    384c:	b.gt	38b0 <match+0x1e0>
    3850:	ldrh	w0, [sp, #70]
    3854:	bl	1c00 <tolower@plt>
    3858:	mov	w19, w0
    385c:	ldr	x0, [sp, #48]
    3860:	add	x0, x0, #0x2
    3864:	ldrh	w0, [x0]
    3868:	bl	1c00 <tolower@plt>
    386c:	cmp	w19, w0
    3870:	b.gt	38b0 <match+0x1e0>
    3874:	mov	w0, #0x1                   	// #1
    3878:	str	w0, [sp, #72]
    387c:	b	38b0 <match+0x1e0>
    3880:	ldrh	w1, [sp, #68]
    3884:	ldrh	w0, [sp, #70]
    3888:	cmp	w1, w0
    388c:	b.hi	38b0 <match+0x1e0>  // b.pmore
    3890:	ldr	x0, [sp, #48]
    3894:	add	x0, x0, #0x2
    3898:	ldrh	w0, [x0]
    389c:	ldrh	w1, [sp, #70]
    38a0:	cmp	w1, w0
    38a4:	b.hi	38b0 <match+0x1e0>  // b.pmore
    38a8:	mov	w0, #0x1                   	// #1
    38ac:	str	w0, [sp, #72]
    38b0:	ldr	x0, [sp, #48]
    38b4:	add	x0, x0, #0x4
    38b8:	str	x0, [sp, #48]
    38bc:	b	3914 <match+0x244>
    38c0:	ldr	w0, [sp, #36]
    38c4:	cmp	w0, #0x0
    38c8:	b.eq	38f0 <match+0x220>  // b.none
    38cc:	ldrh	w0, [sp, #68]
    38d0:	bl	1c00 <tolower@plt>
    38d4:	mov	w19, w0
    38d8:	ldrh	w0, [sp, #70]
    38dc:	bl	1c00 <tolower@plt>
    38e0:	cmp	w19, w0
    38e4:	cset	w0, eq  // eq = none
    38e8:	and	w0, w0, #0xff
    38ec:	b	3904 <match+0x234>
    38f0:	ldrh	w1, [sp, #68]
    38f4:	ldrh	w0, [sp, #70]
    38f8:	cmp	w1, w0
    38fc:	cset	w0, eq  // eq = none
    3900:	and	w0, w0, #0xff
    3904:	cmp	w0, #0x0
    3908:	b.eq	3914 <match+0x244>  // b.none
    390c:	mov	w0, #0x1                   	// #1
    3910:	str	w0, [sp, #72]
    3914:	ldr	x0, [sp, #48]
    3918:	add	x1, x0, #0x2
    391c:	str	x1, [sp, #48]
    3920:	ldrh	w0, [x0]
    3924:	strh	w0, [sp, #68]
    3928:	ldrh	w1, [sp, #68]
    392c:	mov	w0, #0x805d                	// #32861
    3930:	cmp	w1, w0
    3934:	b.ne	3814 <match+0x144>  // b.any
    3938:	ldr	w1, [sp, #72]
    393c:	ldr	w0, [sp, #76]
    3940:	cmp	w1, w0
    3944:	b.eq	39d8 <match+0x308>  // b.none
    3948:	b	39b0 <match+0x2e0>
    394c:	ldr	x0, [sp, #56]
    3950:	add	x1, x0, #0x2
    3954:	str	x1, [sp, #56]
    3958:	ldrh	w0, [x0]
    395c:	strh	w0, [sp, #70]
    3960:	ldr	w0, [sp, #36]
    3964:	cmp	w0, #0x0
    3968:	b.eq	3990 <match+0x2c0>  // b.none
    396c:	ldrh	w0, [sp, #70]
    3970:	bl	1c00 <tolower@plt>
    3974:	mov	w19, w0
    3978:	ldrh	w0, [sp, #68]
    397c:	bl	1c00 <tolower@plt>
    3980:	cmp	w19, w0
    3984:	cset	w0, ne  // ne = any
    3988:	and	w0, w0, #0xff
    398c:	b	39a4 <match+0x2d4>
    3990:	ldrh	w1, [sp, #70]
    3994:	ldrh	w0, [sp, #68]
    3998:	cmp	w1, w0
    399c:	cset	w0, ne  // ne = any
    39a0:	and	w0, w0, #0xff
    39a4:	cmp	w0, #0x0
    39a8:	b.ne	39e0 <match+0x310>  // b.any
    39ac:	nop
    39b0:	ldr	x1, [sp, #48]
    39b4:	ldr	x0, [sp, #40]
    39b8:	cmp	x1, x0
    39bc:	b.cc	36f8 <match+0x28>  // b.lo, b.ul, b.last
    39c0:	ldr	x0, [sp, #56]
    39c4:	ldrh	w0, [x0]
    39c8:	cmp	w0, #0x0
    39cc:	b.ne	39e8 <match+0x318>  // b.any
    39d0:	mov	w0, #0x1                   	// #1
    39d4:	b	3a10 <match+0x340>
    39d8:	nop
    39dc:	b	39ec <match+0x31c>
    39e0:	nop
    39e4:	b	39ec <match+0x31c>
    39e8:	nop
    39ec:	ldr	x0, [sp, #88]
    39f0:	cmp	x0, #0x0
    39f4:	b.eq	3a0c <match+0x33c>  // b.none
    39f8:	ldr	x0, [sp, #80]
    39fc:	str	x0, [sp, #48]
    3a00:	ldr	x0, [sp, #88]
    3a04:	str	x0, [sp, #56]
    3a08:	b	36f4 <match+0x24>
    3a0c:	mov	w0, #0x0                   	// #0
    3a10:	ldr	x19, [sp, #16]
    3a14:	ldp	x29, x30, [sp], #96
    3a18:	ret

0000000000003a1c <bsd_globfree>:
    3a1c:	stp	x29, x30, [sp, #-48]!
    3a20:	mov	x29, sp
    3a24:	str	x0, [sp, #24]
    3a28:	ldr	x0, [sp, #24]
    3a2c:	ldr	x0, [x0, #16]
    3a30:	cmp	x0, #0x0
    3a34:	b.eq	3ab8 <bsd_globfree+0x9c>  // b.none
    3a38:	ldr	x0, [sp, #24]
    3a3c:	ldr	x1, [x0, #16]
    3a40:	ldr	x0, [sp, #24]
    3a44:	ldr	w0, [x0, #8]
    3a48:	sxtw	x0, w0
    3a4c:	lsl	x0, x0, #3
    3a50:	add	x0, x1, x0
    3a54:	str	x0, [sp, #40]
    3a58:	ldr	x0, [sp, #24]
    3a5c:	ldr	w0, [x0]
    3a60:	str	w0, [sp, #36]
    3a64:	b	3a90 <bsd_globfree+0x74>
    3a68:	ldr	x0, [sp, #40]
    3a6c:	ldr	x0, [x0]
    3a70:	cmp	x0, #0x0
    3a74:	b.eq	3a84 <bsd_globfree+0x68>  // b.none
    3a78:	ldr	x0, [sp, #40]
    3a7c:	ldr	x0, [x0]
    3a80:	bl	1ae0 <Perl_safesysfree@plt>
    3a84:	ldr	x0, [sp, #40]
    3a88:	add	x0, x0, #0x8
    3a8c:	str	x0, [sp, #40]
    3a90:	ldr	w0, [sp, #36]
    3a94:	sub	w1, w0, #0x1
    3a98:	str	w1, [sp, #36]
    3a9c:	cmp	w0, #0x0
    3aa0:	b.ne	3a68 <bsd_globfree+0x4c>  // b.any
    3aa4:	ldr	x0, [sp, #24]
    3aa8:	ldr	x0, [x0, #16]
    3aac:	bl	1ae0 <Perl_safesysfree@plt>
    3ab0:	ldr	x0, [sp, #24]
    3ab4:	str	xzr, [x0, #16]
    3ab8:	nop
    3abc:	ldp	x29, x30, [sp], #48
    3ac0:	ret

0000000000003ac4 <g_opendir>:
    3ac4:	mov	x12, #0x1030                	// #4144
    3ac8:	sub	sp, sp, x12
    3acc:	stp	x29, x30, [sp]
    3ad0:	mov	x29, sp
    3ad4:	str	x0, [sp, #24]
    3ad8:	str	x1, [sp, #16]
    3adc:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    3ae0:	ldr	x0, [x0, #4048]
    3ae4:	ldr	x1, [x0]
    3ae8:	str	x1, [sp, #4136]
    3aec:	mov	x1, #0x0                   	// #0
    3af0:	ldr	x0, [sp, #24]
    3af4:	ldrh	w0, [x0]
    3af8:	cmp	w0, #0x0
    3afc:	b.ne	3b1c <g_opendir+0x58>  // b.any
    3b00:	add	x3, sp, #0x28
    3b04:	mov	x2, #0x1000                	// #4096
    3b08:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    3b0c:	add	x1, x0, #0x3c0
    3b10:	mov	x0, x3
    3b14:	bl	1b90 <Perl_my_strlcpy@plt>
    3b18:	b	3b40 <g_opendir+0x7c>
    3b1c:	add	x0, sp, #0x28
    3b20:	mov	x2, #0x1000                	// #4096
    3b24:	mov	x1, x0
    3b28:	ldr	x0, [sp, #24]
    3b2c:	bl	3d80 <g_Ctoc>
    3b30:	cmp	w0, #0x0
    3b34:	b.eq	3b40 <g_opendir+0x7c>  // b.none
    3b38:	mov	x0, #0x0                   	// #0
    3b3c:	b	3b70 <g_opendir+0xac>
    3b40:	ldr	x0, [sp, #16]
    3b44:	ldr	w0, [x0, #12]
    3b48:	and	w0, w0, #0x40
    3b4c:	cmp	w0, #0x0
    3b50:	b.eq	3b68 <g_opendir+0xa4>  // b.none
    3b54:	ldr	x0, [sp, #16]
    3b58:	ldr	x1, [x0, #48]
    3b5c:	add	x0, sp, #0x28
    3b60:	blr	x1
    3b64:	b	3b70 <g_opendir+0xac>
    3b68:	add	x0, sp, #0x28
    3b6c:	bl	18f0 <opendir@plt>
    3b70:	mov	x1, x0
    3b74:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    3b78:	ldr	x0, [x0, #4048]
    3b7c:	ldr	x2, [sp, #4136]
    3b80:	ldr	x0, [x0]
    3b84:	eor	x0, x2, x0
    3b88:	cmp	x0, #0x0
    3b8c:	b.eq	3b94 <g_opendir+0xd0>  // b.none
    3b90:	bl	1a00 <__stack_chk_fail@plt>
    3b94:	mov	x0, x1
    3b98:	ldp	x29, x30, [sp]
    3b9c:	mov	x12, #0x1030                	// #4144
    3ba0:	add	sp, sp, x12
    3ba4:	ret

0000000000003ba8 <g_lstat>:
    3ba8:	mov	x12, #0x1040                	// #4160
    3bac:	sub	sp, sp, x12
    3bb0:	stp	x29, x30, [sp]
    3bb4:	mov	x29, sp
    3bb8:	str	x0, [sp, #40]
    3bbc:	str	x1, [sp, #32]
    3bc0:	str	x2, [sp, #24]
    3bc4:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    3bc8:	ldr	x0, [x0, #4048]
    3bcc:	ldr	x1, [x0]
    3bd0:	str	x1, [sp, #4152]
    3bd4:	mov	x1, #0x0                   	// #0
    3bd8:	add	x0, sp, #0x38
    3bdc:	mov	x2, #0x1000                	// #4096
    3be0:	mov	x1, x0
    3be4:	ldr	x0, [sp, #40]
    3be8:	bl	3d80 <g_Ctoc>
    3bec:	cmp	w0, #0x0
    3bf0:	b.eq	3bfc <g_lstat+0x54>  // b.none
    3bf4:	mov	w0, #0xffffffff            	// #-1
    3bf8:	b	3c34 <g_lstat+0x8c>
    3bfc:	ldr	x0, [sp, #24]
    3c00:	ldr	w0, [x0, #12]
    3c04:	and	w0, w0, #0x40
    3c08:	cmp	w0, #0x0
    3c0c:	b.eq	3c28 <g_lstat+0x80>  // b.none
    3c10:	ldr	x0, [sp, #24]
    3c14:	ldr	x2, [x0, #56]
    3c18:	add	x0, sp, #0x38
    3c1c:	ldr	x1, [sp, #32]
    3c20:	blr	x2
    3c24:	b	3c34 <g_lstat+0x8c>
    3c28:	add	x0, sp, #0x38
    3c2c:	ldr	x1, [sp, #32]
    3c30:	bl	6390 <lstat64>
    3c34:	mov	w1, w0
    3c38:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    3c3c:	ldr	x0, [x0, #4048]
    3c40:	ldr	x2, [sp, #4152]
    3c44:	ldr	x0, [x0]
    3c48:	eor	x0, x2, x0
    3c4c:	cmp	x0, #0x0
    3c50:	b.eq	3c58 <g_lstat+0xb0>  // b.none
    3c54:	bl	1a00 <__stack_chk_fail@plt>
    3c58:	mov	w0, w1
    3c5c:	ldp	x29, x30, [sp]
    3c60:	mov	x12, #0x1040                	// #4160
    3c64:	add	sp, sp, x12
    3c68:	ret

0000000000003c6c <g_stat>:
    3c6c:	mov	x12, #0x1040                	// #4160
    3c70:	sub	sp, sp, x12
    3c74:	stp	x29, x30, [sp]
    3c78:	mov	x29, sp
    3c7c:	str	x0, [sp, #40]
    3c80:	str	x1, [sp, #32]
    3c84:	str	x2, [sp, #24]
    3c88:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    3c8c:	ldr	x0, [x0, #4048]
    3c90:	ldr	x1, [x0]
    3c94:	str	x1, [sp, #4152]
    3c98:	mov	x1, #0x0                   	// #0
    3c9c:	add	x0, sp, #0x38
    3ca0:	mov	x2, #0x1000                	// #4096
    3ca4:	mov	x1, x0
    3ca8:	ldr	x0, [sp, #40]
    3cac:	bl	3d80 <g_Ctoc>
    3cb0:	cmp	w0, #0x0
    3cb4:	b.eq	3cc0 <g_stat+0x54>  // b.none
    3cb8:	mov	w0, #0xffffffff            	// #-1
    3cbc:	b	3cf8 <g_stat+0x8c>
    3cc0:	ldr	x0, [sp, #24]
    3cc4:	ldr	w0, [x0, #12]
    3cc8:	and	w0, w0, #0x40
    3ccc:	cmp	w0, #0x0
    3cd0:	b.eq	3cec <g_stat+0x80>  // b.none
    3cd4:	ldr	x0, [sp, #24]
    3cd8:	ldr	x2, [x0, #64]
    3cdc:	add	x0, sp, #0x38
    3ce0:	ldr	x1, [sp, #32]
    3ce4:	blr	x2
    3ce8:	b	3cf8 <g_stat+0x8c>
    3cec:	add	x0, sp, #0x38
    3cf0:	ldr	x1, [sp, #32]
    3cf4:	bl	6380 <stat64>
    3cf8:	mov	w1, w0
    3cfc:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    3d00:	ldr	x0, [x0, #4048]
    3d04:	ldr	x2, [sp, #4152]
    3d08:	ldr	x0, [x0]
    3d0c:	eor	x0, x2, x0
    3d10:	cmp	x0, #0x0
    3d14:	b.eq	3d1c <g_stat+0xb0>  // b.none
    3d18:	bl	1a00 <__stack_chk_fail@plt>
    3d1c:	mov	w0, w1
    3d20:	ldp	x29, x30, [sp]
    3d24:	mov	x12, #0x1040                	// #4160
    3d28:	add	sp, sp, x12
    3d2c:	ret

0000000000003d30 <g_strchr>:
    3d30:	sub	sp, sp, #0x10
    3d34:	str	x0, [sp, #8]
    3d38:	str	w1, [sp, #4]
    3d3c:	ldr	x0, [sp, #8]
    3d40:	ldrh	w0, [x0]
    3d44:	mov	w1, w0
    3d48:	ldr	w0, [sp, #4]
    3d4c:	cmp	w0, w1
    3d50:	b.ne	3d5c <g_strchr+0x2c>  // b.any
    3d54:	ldr	x0, [sp, #8]
    3d58:	b	3d78 <g_strchr+0x48>
    3d5c:	ldr	x0, [sp, #8]
    3d60:	add	x1, x0, #0x2
    3d64:	str	x1, [sp, #8]
    3d68:	ldrh	w0, [x0]
    3d6c:	cmp	w0, #0x0
    3d70:	b.ne	3d3c <g_strchr+0xc>  // b.any
    3d74:	mov	x0, #0x0                   	// #0
    3d78:	add	sp, sp, #0x10
    3d7c:	ret

0000000000003d80 <g_Ctoc>:
    3d80:	sub	sp, sp, #0x20
    3d84:	str	x0, [sp, #24]
    3d88:	str	x1, [sp, #16]
    3d8c:	str	x2, [sp, #8]
    3d90:	b	3dcc <g_Ctoc+0x4c>
    3d94:	ldr	x0, [sp, #24]
    3d98:	add	x1, x0, #0x2
    3d9c:	str	x1, [sp, #24]
    3da0:	ldrh	w2, [x0]
    3da4:	ldr	x0, [sp, #16]
    3da8:	add	x1, x0, #0x1
    3dac:	str	x1, [sp, #16]
    3db0:	and	w1, w2, #0xff
    3db4:	strb	w1, [x0]
    3db8:	ldrb	w0, [x0]
    3dbc:	cmp	w0, #0x0
    3dc0:	b.ne	3dcc <g_Ctoc+0x4c>  // b.any
    3dc4:	mov	w0, #0x0                   	// #0
    3dc8:	b	3de4 <g_Ctoc+0x64>
    3dcc:	ldr	x0, [sp, #8]
    3dd0:	sub	x1, x0, #0x1
    3dd4:	str	x1, [sp, #8]
    3dd8:	cmp	x0, #0x0
    3ddc:	b.ne	3d94 <g_Ctoc+0x14>  // b.any
    3de0:	mov	w0, #0x1                   	// #1
    3de4:	add	sp, sp, #0x20
    3de8:	ret

0000000000003dec <S_POPMARK>:
    3dec:	sub	sp, sp, #0x10
    3df0:	str	x0, [sp, #8]
    3df4:	ldr	x0, [sp, #8]
    3df8:	ldr	x0, [x0, #120]
    3dfc:	sub	x2, x0, #0x4
    3e00:	ldr	x1, [sp, #8]
    3e04:	str	x2, [x1, #120]
    3e08:	ldr	w0, [x0]
    3e0c:	add	sp, sp, #0x10
    3e10:	ret

0000000000003e14 <S_SvREFCNT_dec>:
    3e14:	stp	x29, x30, [sp, #-48]!
    3e18:	mov	x29, sp
    3e1c:	str	x0, [sp, #24]
    3e20:	str	x1, [sp, #16]
    3e24:	ldr	x0, [sp, #16]
    3e28:	cmp	x0, #0x0
    3e2c:	cset	w0, ne  // ne = any
    3e30:	and	w0, w0, #0xff
    3e34:	and	x0, x0, #0xff
    3e38:	cmp	x0, #0x0
    3e3c:	b.eq	3e8c <S_SvREFCNT_dec+0x78>  // b.none
    3e40:	ldr	x0, [sp, #16]
    3e44:	ldr	w0, [x0, #8]
    3e48:	str	w0, [sp, #44]
    3e4c:	ldr	w0, [sp, #44]
    3e50:	cmp	w0, #0x1
    3e54:	cset	w0, hi  // hi = pmore
    3e58:	and	w0, w0, #0xff
    3e5c:	and	x0, x0, #0xff
    3e60:	cmp	x0, #0x0
    3e64:	b.eq	3e7c <S_SvREFCNT_dec+0x68>  // b.none
    3e68:	ldr	w0, [sp, #44]
    3e6c:	sub	w1, w0, #0x1
    3e70:	ldr	x0, [sp, #16]
    3e74:	str	w1, [x0, #8]
    3e78:	b	3e8c <S_SvREFCNT_dec+0x78>
    3e7c:	ldr	w2, [sp, #44]
    3e80:	ldr	x1, [sp, #16]
    3e84:	ldr	x0, [sp, #24]
    3e88:	bl	1bd0 <Perl_sv_free2@plt>
    3e8c:	nop
    3e90:	ldp	x29, x30, [sp], #48
    3e94:	ret

0000000000003e98 <S_croak_memory_wrap>:
    3e98:	stp	x29, x30, [sp, #-16]!
    3e9c:	mov	x29, sp
    3ea0:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    3ea4:	ldr	x1, [x0, #4056]
    3ea8:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    3eac:	add	x0, x0, #0x3c8
    3eb0:	bl	1a80 <Perl_croak_nocontext@plt>

0000000000003eb4 <S_is_safe_syscall>:
    3eb4:	stp	x29, x30, [sp, #-80]!
    3eb8:	mov	x29, sp
    3ebc:	str	x0, [sp, #56]
    3ec0:	str	x1, [sp, #48]
    3ec4:	str	x2, [sp, #40]
    3ec8:	str	x3, [sp, #32]
    3ecc:	str	x4, [sp, #24]
    3ed0:	ldr	x0, [sp, #40]
    3ed4:	cmp	x0, #0x1
    3ed8:	b.ls	3f58 <S_is_safe_syscall+0xa4>  // b.plast
    3edc:	ldr	x0, [sp, #40]
    3ee0:	sub	x0, x0, #0x1
    3ee4:	mov	x2, x0
    3ee8:	mov	w1, #0x0                   	// #0
    3eec:	ldr	x0, [sp, #48]
    3ef0:	bl	1b20 <memchr@plt>
    3ef4:	str	x0, [sp, #72]
    3ef8:	ldr	x0, [sp, #72]
    3efc:	cmp	x0, #0x0
    3f00:	cset	w0, ne  // ne = any
    3f04:	and	w0, w0, #0xff
    3f08:	and	x0, x0, #0xff
    3f0c:	cmp	x0, #0x0
    3f10:	b.eq	3f58 <S_is_safe_syscall+0xa4>  // b.none
    3f14:	bl	1bf0 <__errno_location@plt>
    3f18:	mov	x1, x0
    3f1c:	mov	w0, #0x2                   	// #2
    3f20:	str	w0, [x1]
    3f24:	ldr	x0, [sp, #72]
    3f28:	add	x0, x0, #0x1
    3f2c:	mov	x6, x0
    3f30:	ldr	x5, [sp, #48]
    3f34:	ldr	x4, [sp, #24]
    3f38:	ldr	x3, [sp, #32]
    3f3c:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    3f40:	add	x2, x0, #0x3d0
    3f44:	mov	w1, #0x39                  	// #57
    3f48:	ldr	x0, [sp, #56]
    3f4c:	bl	1970 <Perl_ck_warner@plt>
    3f50:	mov	w0, #0x0                   	// #0
    3f54:	b	3f5c <S_is_safe_syscall+0xa8>
    3f58:	mov	w0, #0x1                   	// #1
    3f5c:	ldp	x29, x30, [sp], #80
    3f60:	ret

0000000000003f64 <constant_add_symbol>:
    3f64:	stp	x29, x30, [sp, #-80]!
    3f68:	mov	x29, sp
    3f6c:	str	x0, [sp, #56]
    3f70:	str	x1, [sp, #48]
    3f74:	str	x2, [sp, #40]
    3f78:	str	w3, [sp, #36]
    3f7c:	str	x4, [sp, #24]
    3f80:	mov	w6, #0x0                   	// #0
    3f84:	mov	x5, #0x0                   	// #0
    3f88:	mov	w4, #0x10                  	// #16
    3f8c:	ldr	w3, [sp, #36]
    3f90:	ldr	x2, [sp, #40]
    3f94:	ldr	x1, [sp, #48]
    3f98:	ldr	x0, [sp, #56]
    3f9c:	bl	1b50 <Perl_hv_common_key_len@plt>
    3fa0:	str	x0, [sp, #64]
    3fa4:	ldr	x0, [sp, #64]
    3fa8:	cmp	x0, #0x0
    3fac:	b.ne	3fc0 <constant_add_symbol+0x5c>  // b.any
    3fb0:	ldr	x1, [sp, #40]
    3fb4:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    3fb8:	add	x0, x0, #0x400
    3fbc:	bl	1a80 <Perl_croak_nocontext@plt>
    3fc0:	ldr	x0, [sp, #64]
    3fc4:	ldr	x0, [x0, #16]
    3fc8:	str	x0, [sp, #72]
    3fcc:	ldr	x0, [sp, #72]
    3fd0:	ldr	w0, [x0, #12]
    3fd4:	and	w0, w0, #0xff00
    3fd8:	cmp	w0, #0x0
    3fdc:	b.ne	3ff4 <constant_add_symbol+0x90>  // b.any
    3fe0:	ldr	x0, [sp, #72]
    3fe4:	ldr	w0, [x0, #12]
    3fe8:	and	w0, w0, #0xff
    3fec:	cmp	w0, #0x9
    3ff0:	b.ne	400c <constant_add_symbol+0xa8>  // b.any
    3ff4:	ldr	x3, [sp, #24]
    3ff8:	ldr	x2, [sp, #40]
    3ffc:	ldr	x1, [sp, #48]
    4000:	ldr	x0, [sp, #56]
    4004:	bl	1930 <Perl_newCONSTSUB@plt>
    4008:	b	4068 <constant_add_symbol+0x104>
    400c:	ldr	x0, [sp, #72]
    4010:	ldr	w0, [x0, #12]
    4014:	and	w0, w0, #0xff
    4018:	cmp	w0, #0x0
    401c:	b.ne	4030 <constant_add_symbol+0xcc>  // b.any
    4020:	mov	w2, #0x1                   	// #1
    4024:	ldr	x1, [sp, #72]
    4028:	ldr	x0, [sp, #56]
    402c:	bl	1950 <Perl_sv_upgrade@plt>
    4030:	ldr	x0, [sp, #72]
    4034:	ldr	x1, [sp, #24]
    4038:	str	x1, [x0, #16]
    403c:	ldr	x0, [sp, #72]
    4040:	ldr	w0, [x0, #12]
    4044:	orr	w1, w0, #0x800
    4048:	ldr	x0, [sp, #72]
    404c:	str	w1, [x0, #12]
    4050:	ldr	x0, [sp, #24]
    4054:	ldr	w0, [x0, #12]
    4058:	orr	w1, w0, #0x8000000
    405c:	ldr	x0, [sp, #24]
    4060:	str	w1, [x0, #12]
    4064:	nop
    4068:	nop
    406c:	ldp	x29, x30, [sp], #80
    4070:	ret

0000000000004074 <get_missing_hash>:
    4074:	stp	x29, x30, [sp, #-64]!
    4078:	mov	x29, sp
    407c:	str	x0, [sp, #24]
    4080:	mov	w2, #0x2                   	// #2
    4084:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    4088:	add	x1, x0, #0x428
    408c:	ldr	x0, [sp, #24]
    4090:	bl	1c60 <Perl_get_hv@plt>
    4094:	str	x0, [sp, #32]
    4098:	mov	w6, #0x0                   	// #0
    409c:	mov	x5, #0x0                   	// #0
    40a0:	mov	w4, #0x30                  	// #48
    40a4:	mov	w3, #0xa                   	// #10
    40a8:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    40ac:	add	x2, x0, #0x450
    40b0:	ldr	x1, [sp, #32]
    40b4:	ldr	x0, [sp, #24]
    40b8:	bl	1b50 <Perl_hv_common_key_len@plt>
    40bc:	str	x0, [sp, #40]
    40c0:	ldr	x0, [sp, #40]
    40c4:	cmp	x0, #0x0
    40c8:	b.ne	40d4 <get_missing_hash+0x60>  // b.any
    40cc:	mov	x0, #0x0                   	// #0
    40d0:	b	4174 <get_missing_hash+0x100>
    40d4:	ldr	x0, [sp, #40]
    40d8:	ldr	x0, [x0]
    40dc:	ldr	w0, [x0, #12]
    40e0:	and	w0, w0, #0x800
    40e4:	cmp	w0, #0x0
    40e8:	b.eq	40fc <get_missing_hash+0x88>  // b.none
    40ec:	ldr	x0, [sp, #40]
    40f0:	ldr	x0, [x0]
    40f4:	ldr	x0, [x0, #16]
    40f8:	b	4174 <get_missing_hash+0x100>
    40fc:	mov	w1, #0xc                   	// #12
    4100:	ldr	x0, [sp, #24]
    4104:	bl	1b70 <Perl_newSV_type@plt>
    4108:	str	x0, [sp, #48]
    410c:	ldr	x0, [sp, #48]
    4110:	str	x0, [sp, #56]
    4114:	ldr	x0, [sp, #40]
    4118:	ldr	x0, [x0]
    411c:	ldr	w0, [x0, #12]
    4120:	and	w0, w0, #0xff
    4124:	cmp	w0, #0x0
    4128:	b.ne	4144 <get_missing_hash+0xd0>  // b.any
    412c:	ldr	x0, [sp, #40]
    4130:	ldr	x0, [x0]
    4134:	mov	w2, #0x1                   	// #1
    4138:	mov	x1, x0
    413c:	ldr	x0, [sp, #24]
    4140:	bl	1950 <Perl_sv_upgrade@plt>
    4144:	ldr	x0, [sp, #40]
    4148:	ldr	x0, [x0]
    414c:	ldr	x1, [sp, #56]
    4150:	str	x1, [x0, #16]
    4154:	ldr	x0, [sp, #40]
    4158:	ldr	x0, [x0]
    415c:	ldr	w1, [x0, #12]
    4160:	ldr	x0, [sp, #40]
    4164:	ldr	x0, [x0]
    4168:	orr	w1, w1, #0x800
    416c:	str	w1, [x0, #12]
    4170:	ldr	x0, [sp, #56]
    4174:	ldp	x29, x30, [sp], #64
    4178:	ret

000000000000417c <errfunc>:
    417c:	sub	sp, sp, #0x10
    4180:	str	x0, [sp, #8]
    4184:	str	w1, [sp, #4]
    4188:	ldr	w0, [sp, #4]
    418c:	cmp	w0, #0xd
    4190:	b.eq	41b4 <errfunc+0x38>  // b.none
    4194:	ldr	w0, [sp, #4]
    4198:	cmp	w0, #0x2
    419c:	b.eq	41b4 <errfunc+0x38>  // b.none
    41a0:	ldr	w0, [sp, #4]
    41a4:	cmp	w0, #0x14
    41a8:	b.eq	41b4 <errfunc+0x38>  // b.none
    41ac:	mov	w0, #0x1                   	// #1
    41b0:	b	41b8 <errfunc+0x3c>
    41b4:	mov	w0, #0x0                   	// #0
    41b8:	add	sp, sp, #0x10
    41bc:	ret

00000000000041c0 <doglob>:
    41c0:	stp	x29, x30, [sp, #-176]!
    41c4:	mov	x29, sp
    41c8:	str	x19, [sp, #16]
    41cc:	str	x0, [sp, #56]
    41d0:	str	x1, [sp, #48]
    41d4:	str	w2, [sp, #44]
    41d8:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    41dc:	ldr	x0, [x0, #4048]
    41e0:	ldr	x1, [x0]
    41e4:	str	x1, [sp, #168]
    41e8:	mov	x1, #0x0                   	// #0
    41ec:	ldr	x0, [sp, #56]
    41f0:	ldr	x0, [x0]
    41f4:	str	x0, [sp, #72]
    41f8:	ldr	x0, [sp, #56]
    41fc:	ldr	x1, [x0, #3032]
    4200:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4204:	add	x0, x0, #0x208
    4208:	ldr	w0, [x0]
    420c:	sxtw	x0, w0
    4210:	lsl	x0, x0, #3
    4214:	add	x0, x1, x0
    4218:	ldr	x0, [x0]
    421c:	str	x0, [sp, #80]
    4220:	add	x0, sp, #0x60
    4224:	mov	x2, #0x48                  	// #72
    4228:	mov	w1, #0x0                   	// #0
    422c:	bl	19a0 <memset@plt>
    4230:	add	x0, sp, #0x60
    4234:	mov	x3, x0
    4238:	adrp	x0, 4000 <constant_add_symbol+0x9c>
    423c:	add	x2, x0, #0x17c
    4240:	ldr	w1, [sp, #44]
    4244:	ldr	x0, [sp, #48]
    4248:	bl	1c10 <bsd_glob@plt>
    424c:	str	w0, [sp, #68]
    4250:	ldr	x0, [sp, #80]
    4254:	ldr	w1, [sp, #68]
    4258:	str	w1, [x0, #8]
    425c:	ldr	w0, [sp, #96]
    4260:	lsr	w0, w0, #31
    4264:	and	w0, w0, #0xff
    4268:	and	x0, x0, #0xff
    426c:	cmp	x0, #0x0
    4270:	b.ne	42ac <doglob+0xec>  // b.any
    4274:	ldr	x0, [sp, #56]
    4278:	ldr	x1, [x0, #32]
    427c:	ldr	x0, [sp, #72]
    4280:	sub	x0, x1, x0
    4284:	asr	x0, x0, #3
    4288:	mov	x1, x0
    428c:	ldr	w0, [sp, #96]
    4290:	sxtw	x0, w0
    4294:	cmp	x1, x0
    4298:	cset	w0, lt  // lt = tstop
    429c:	and	w0, w0, #0xff
    42a0:	and	x0, x0, #0xff
    42a4:	cmp	x0, #0x0
    42a8:	b.eq	42cc <doglob+0x10c>  // b.none
    42ac:	ldr	w0, [sp, #96]
    42b0:	sxtw	x0, w0
    42b4:	mov	x3, x0
    42b8:	ldr	x2, [sp, #72]
    42bc:	ldr	x1, [sp, #72]
    42c0:	ldr	x0, [sp, #56]
    42c4:	bl	18a0 <Perl_stack_grow@plt>
    42c8:	str	x0, [sp, #72]
    42cc:	str	wzr, [sp, #64]
    42d0:	b	4390 <doglob+0x1d0>
    42d4:	ldr	x1, [sp, #112]
    42d8:	ldrsw	x0, [sp, #64]
    42dc:	lsl	x0, x0, #3
    42e0:	add	x0, x1, x0
    42e4:	ldr	x19, [x0]
    42e8:	ldr	x1, [sp, #112]
    42ec:	ldrsw	x0, [sp, #64]
    42f0:	lsl	x0, x0, #3
    42f4:	add	x0, x1, x0
    42f8:	ldr	x0, [x0]
    42fc:	bl	1890 <strlen@plt>
    4300:	mov	w3, #0x80000               	// #524288
    4304:	mov	x2, x0
    4308:	mov	x1, x19
    430c:	ldr	x0, [sp, #56]
    4310:	bl	1a30 <Perl_newSVpvn_flags@plt>
    4314:	str	x0, [sp, #88]
    4318:	ldr	x0, [sp, #56]
    431c:	ldrb	w1, [x0, #184]
    4320:	ldr	x0, [sp, #56]
    4324:	strb	w1, [x0, #185]
    4328:	ldr	x0, [sp, #56]
    432c:	ldrb	w0, [x0, #185]
    4330:	and	x0, x0, #0xff
    4334:	cmp	x0, #0x0
    4338:	b.eq	436c <doglob+0x1ac>  // b.none
    433c:	ldr	x0, [sp, #56]
    4340:	ldrb	w0, [x0, #184]
    4344:	and	x0, x0, #0xff
    4348:	cmp	x0, #0x0
    434c:	b.eq	436c <doglob+0x1ac>  // b.none
    4350:	mov	w5, #0x0                   	// #0
    4354:	mov	x4, #0x0                   	// #0
    4358:	mov	w3, #0x74                  	// #116
    435c:	mov	x2, #0x0                   	// #0
    4360:	ldr	x1, [sp, #88]
    4364:	ldr	x0, [sp, #56]
    4368:	bl	1bc0 <Perl_sv_magic@plt>
    436c:	ldr	x0, [sp, #72]
    4370:	add	x0, x0, #0x8
    4374:	str	x0, [sp, #72]
    4378:	ldr	x0, [sp, #72]
    437c:	ldr	x1, [sp, #88]
    4380:	str	x1, [x0]
    4384:	ldr	w0, [sp, #64]
    4388:	add	w0, w0, #0x1
    438c:	str	w0, [sp, #64]
    4390:	ldr	w0, [sp, #96]
    4394:	ldr	w1, [sp, #64]
    4398:	cmp	w1, w0
    439c:	b.lt	42d4 <doglob+0x114>  // b.tstop
    43a0:	ldr	x0, [sp, #56]
    43a4:	ldr	x1, [sp, #72]
    43a8:	str	x1, [x0]
    43ac:	add	x0, sp, #0x60
    43b0:	bl	1bb0 <bsd_globfree@plt>
    43b4:	nop
    43b8:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    43bc:	ldr	x0, [x0, #4048]
    43c0:	ldr	x1, [sp, #168]
    43c4:	ldr	x0, [x0]
    43c8:	eor	x0, x1, x0
    43cc:	cmp	x0, #0x0
    43d0:	b.eq	43d8 <doglob+0x218>  // b.none
    43d4:	bl	1a00 <__stack_chk_fail@plt>
    43d8:	ldr	x19, [sp, #16]
    43dc:	ldp	x29, x30, [sp], #176
    43e0:	ret

00000000000043e4 <iterate>:
    43e4:	stp	x29, x30, [sp, #-144]!
    43e8:	mov	x29, sp
    43ec:	str	x0, [sp, #24]
    43f0:	str	x1, [sp, #16]
    43f4:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    43f8:	ldr	x0, [x0, #4048]
    43fc:	ldr	x1, [x0]
    4400:	str	x1, [sp, #136]
    4404:	mov	x1, #0x0                   	// #0
    4408:	ldr	x0, [sp, #24]
    440c:	ldr	x0, [x0]
    4410:	str	x0, [sp, #48]
    4414:	ldr	x0, [sp, #24]
    4418:	ldr	x1, [x0, #3032]
    441c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4420:	add	x0, x0, #0x208
    4424:	ldr	w0, [x0]
    4428:	sxtw	x0, w0
    442c:	lsl	x0, x0, #3
    4430:	add	x0, x1, x0
    4434:	ldr	x0, [x0]
    4438:	str	x0, [sp, #72]
    443c:	ldr	x0, [sp, #24]
    4440:	add	x0, x0, #0x8
    4444:	str	x0, [sp, #80]
    4448:	mov	x0, #0x8                   	// #8
    444c:	str	x0, [sp, #88]
    4450:	ldr	x0, [sp, #24]
    4454:	ldr	x0, [x0, #8]
    4458:	ldrb	w0, [x0, #34]
    445c:	and	w0, w0, #0x3
    4460:	cmp	w0, #0x0
    4464:	b.eq	447c <iterate+0x98>  // b.none
    4468:	ldr	x0, [sp, #24]
    446c:	ldr	x0, [x0, #8]
    4470:	ldrb	w0, [x0, #34]
    4474:	and	w0, w0, #0x3
    4478:	b	4488 <iterate+0xa4>
    447c:	ldr	x0, [sp, #24]
    4480:	bl	1b80 <Perl_block_gimme@plt>
    4484:	and	w0, w0, #0xff
    4488:	str	w0, [sp, #36]
    448c:	ldr	x0, [sp, #48]
    4490:	sub	x1, x0, #0x8
    4494:	str	x1, [sp, #48]
    4498:	ldr	x0, [x0]
    449c:	str	x0, [sp, #56]
    44a0:	strb	wzr, [sp, #34]
    44a4:	ldr	x0, [sp, #72]
    44a8:	ldr	x0, [x0, #16]
    44ac:	cmp	x0, #0x0
    44b0:	b.ne	44d0 <iterate+0xec>  // b.any
    44b4:	mov	w1, #0xc                   	// #12
    44b8:	ldr	x0, [sp, #24]
    44bc:	bl	1b70 <Perl_newSV_type@plt>
    44c0:	str	x0, [sp, #96]
    44c4:	ldr	x1, [sp, #96]
    44c8:	ldr	x0, [sp, #72]
    44cc:	str	x1, [x0, #16]
    44d0:	ldr	x0, [sp, #72]
    44d4:	ldr	x0, [x0, #16]
    44d8:	ldr	x1, [sp, #88]
    44dc:	mov	w6, #0x0                   	// #0
    44e0:	mov	x5, #0x0                   	// #0
    44e4:	mov	w4, #0x30                  	// #48
    44e8:	mov	w3, w1
    44ec:	ldr	x2, [sp, #80]
    44f0:	mov	x1, x0
    44f4:	ldr	x0, [sp, #24]
    44f8:	bl	1b50 <Perl_hv_common_key_len@plt>
    44fc:	ldr	x0, [x0]
    4500:	str	x0, [sp, #104]
    4504:	ldr	x0, [sp, #104]
    4508:	ldr	w0, [x0, #12]
    450c:	and	w0, w0, #0xff
    4510:	cmp	w0, #0xb
    4514:	b.eq	47cc <iterate+0x3e8>  // b.none
    4518:	ldr	x0, [sp, #56]
    451c:	ldr	w0, [x0, #12]
    4520:	lsr	w0, w0, #21
    4524:	mov	w0, w0
    4528:	and	x0, x0, #0x1
    452c:	cmp	x0, #0x0
    4530:	b.eq	4548 <iterate+0x164>  // b.none
    4534:	ldr	x1, [sp, #56]
    4538:	ldr	x0, [sp, #24]
    453c:	bl	1ad0 <Perl_mg_get@plt>
    4540:	cmp	w0, #0x0
    4544:	nop
    4548:	ldr	x0, [sp, #56]
    454c:	ldr	w0, [x0, #12]
    4550:	and	w0, w0, #0xff00
    4554:	cmp	w0, #0x0
    4558:	b.ne	4604 <iterate+0x220>  // b.any
    455c:	ldr	x0, [sp, #24]
    4560:	ldr	x0, [x0, #192]
    4564:	ldr	x0, [x0, #16]
    4568:	ldr	x0, [x0]
    456c:	cmp	x0, #0x0
    4570:	b.eq	4584 <iterate+0x1a0>  // b.none
    4574:	ldr	x0, [sp, #24]
    4578:	ldr	x0, [x0, #192]
    457c:	ldr	x0, [x0, #16]
    4580:	b	45a0 <iterate+0x1bc>
    4584:	ldr	x0, [sp, #24]
    4588:	ldr	x0, [x0, #192]
    458c:	mov	w2, #0x0                   	// #0
    4590:	mov	x1, x0
    4594:	ldr	x0, [sp, #24]
    4598:	bl	1c30 <Perl_gv_add_by_type@plt>
    459c:	ldr	x0, [x0, #16]
    45a0:	ldr	x0, [x0]
    45a4:	str	x0, [sp, #56]
    45a8:	ldr	x0, [sp, #56]
    45ac:	ldr	w0, [x0, #12]
    45b0:	lsr	w0, w0, #21
    45b4:	mov	w0, w0
    45b8:	and	x0, x0, #0x1
    45bc:	cmp	x0, #0x0
    45c0:	b.eq	45d8 <iterate+0x1f4>  // b.none
    45c4:	ldr	x1, [sp, #56]
    45c8:	ldr	x0, [sp, #24]
    45cc:	bl	1ad0 <Perl_mg_get@plt>
    45d0:	cmp	w0, #0x0
    45d4:	nop
    45d8:	ldr	x0, [sp, #56]
    45dc:	ldr	w0, [x0, #12]
    45e0:	and	w0, w0, #0xff00
    45e4:	cmp	w0, #0x0
    45e8:	b.ne	4604 <iterate+0x220>  // b.any
    45ec:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    45f0:	add	x0, x0, #0x470
    45f4:	str	x0, [sp, #64]
    45f8:	str	xzr, [sp, #40]
    45fc:	strb	wzr, [sp, #35]
    4600:	b	4720 <iterate+0x33c>
    4604:	ldr	x0, [sp, #56]
    4608:	ldr	w1, [x0, #12]
    460c:	mov	w0, #0x400                 	// #1024
    4610:	movk	w0, #0x20, lsl #16
    4614:	and	w0, w1, w0
    4618:	cmp	w0, #0x400
    461c:	b.ne	463c <iterate+0x258>  // b.any
    4620:	ldr	x0, [sp, #56]
    4624:	ldr	x0, [x0]
    4628:	ldr	x0, [x0, #16]
    462c:	str	x0, [sp, #40]
    4630:	ldr	x0, [sp, #56]
    4634:	ldr	x0, [x0, #16]
    4638:	b	4654 <iterate+0x270>
    463c:	add	x0, sp, #0x28
    4640:	mov	w3, #0x0                   	// #0
    4644:	mov	x2, x0
    4648:	ldr	x1, [sp, #56]
    464c:	ldr	x0, [sp, #24]
    4650:	bl	19b0 <Perl_sv_2pv_flags@plt>
    4654:	str	x0, [sp, #64]
    4658:	ldr	x0, [sp, #56]
    465c:	ldr	w0, [x0, #12]
    4660:	and	w0, w0, #0x20000000
    4664:	cmp	w0, #0x0
    4668:	cset	w0, ne  // ne = any
    466c:	strb	w0, [sp, #35]
    4670:	ldr	x0, [sp, #56]
    4674:	ldr	w0, [x0, #12]
    4678:	and	w0, w0, #0x400
    467c:	cmp	w0, #0x0
    4680:	b.eq	46b0 <iterate+0x2cc>  // b.none
    4684:	ldr	x0, [sp, #56]
    4688:	ldr	x0, [x0, #16]
    468c:	ldr	x1, [sp, #64]
    4690:	cmp	x1, x0
    4694:	b.ne	46b0 <iterate+0x2cc>  // b.any
    4698:	ldr	x0, [sp, #40]
    469c:	ldr	x1, [sp, #64]
    46a0:	add	x0, x1, x0
    46a4:	ldrb	w0, [x0]
    46a8:	cmp	w0, #0x0
    46ac:	b.eq	4720 <iterate+0x33c>  // b.none
    46b0:	ldr	x0, [sp, #40]
    46b4:	mov	w3, #0x80000               	// #524288
    46b8:	mov	x2, x0
    46bc:	ldr	x1, [sp, #64]
    46c0:	ldr	x0, [sp, #24]
    46c4:	bl	1a30 <Perl_newSVpvn_flags@plt>
    46c8:	str	x0, [sp, #112]
    46cc:	ldr	x0, [sp, #112]
    46d0:	ldr	w1, [x0, #12]
    46d4:	mov	w0, #0x400                 	// #1024
    46d8:	movk	w0, #0x20, lsl #16
    46dc:	and	w0, w1, w0
    46e0:	cmp	w0, #0x400
    46e4:	b.ne	4704 <iterate+0x320>  // b.any
    46e8:	ldr	x0, [sp, #112]
    46ec:	ldr	x0, [x0]
    46f0:	ldr	x0, [x0, #16]
    46f4:	str	x0, [sp, #40]
    46f8:	ldr	x0, [sp, #112]
    46fc:	ldr	x0, [x0, #16]
    4700:	b	471c <iterate+0x338>
    4704:	add	x0, sp, #0x28
    4708:	mov	w3, #0x0                   	// #0
    470c:	mov	x2, x0
    4710:	ldr	x1, [sp, #112]
    4714:	ldr	x0, [sp, #24]
    4718:	bl	19b0 <Perl_sv_2pv_flags@plt>
    471c:	str	x0, [sp, #64]
    4720:	ldr	x1, [sp, #40]
    4724:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    4728:	add	x4, x0, #0x478
    472c:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    4730:	add	x3, x0, #0x480
    4734:	mov	x2, x1
    4738:	ldr	x1, [sp, #64]
    473c:	ldr	x0, [sp, #24]
    4740:	bl	3eb4 <S_is_safe_syscall>
    4744:	and	w0, w0, #0xff
    4748:	eor	w0, w0, #0x1
    474c:	and	w0, w0, #0xff
    4750:	cmp	w0, #0x0
    4754:	b.eq	4790 <iterate+0x3ac>  // b.none
    4758:	ldr	w0, [sp, #36]
    475c:	cmp	w0, #0x3
    4760:	b.eq	4780 <iterate+0x39c>  // b.none
    4764:	ldr	x0, [sp, #48]
    4768:	add	x0, x0, #0x8
    476c:	str	x0, [sp, #48]
    4770:	ldr	x0, [sp, #24]
    4774:	add	x1, x0, #0x150
    4778:	ldr	x0, [sp, #48]
    477c:	str	x1, [x0]
    4780:	ldr	x0, [sp, #24]
    4784:	ldr	x1, [sp, #48]
    4788:	str	x1, [x0]
    478c:	b	49e4 <iterate+0x600>
    4790:	ldr	x0, [sp, #24]
    4794:	ldr	x1, [sp, #48]
    4798:	str	x1, [x0]
    479c:	ldr	x0, [sp, #40]
    47a0:	ldr	x5, [sp, #16]
    47a4:	ldrb	w4, [sp, #35]
    47a8:	mov	x3, x0
    47ac:	ldr	x2, [sp, #64]
    47b0:	ldr	x1, [sp, #104]
    47b4:	ldr	x0, [sp, #24]
    47b8:	blr	x5
    47bc:	strb	w0, [sp, #34]
    47c0:	ldr	x0, [sp, #24]
    47c4:	ldr	x0, [x0]
    47c8:	str	x0, [sp, #48]
    47cc:	ldr	w0, [sp, #36]
    47d0:	cmp	w0, #0x3
    47d4:	b.ne	4944 <iterate+0x560>  // b.any
    47d8:	ldrb	w0, [sp, #34]
    47dc:	eor	w0, w0, #0x1
    47e0:	and	w0, w0, #0xff
    47e4:	cmp	w0, #0x0
    47e8:	b.eq	4910 <iterate+0x52c>  // b.none
    47ec:	ldr	x0, [sp, #104]
    47f0:	ldr	x0, [x0]
    47f4:	ldr	x0, [x0, #16]
    47f8:	cmn	x0, #0x1
    47fc:	b.eq	4910 <iterate+0x52c>  // b.none
    4800:	ldr	x0, [sp, #104]
    4804:	ldr	x0, [x0]
    4808:	ldr	x0, [x0, #16]
    480c:	add	x0, x0, #0x1
    4810:	lsr	x0, x0, #63
    4814:	and	w0, w0, #0xff
    4818:	and	x0, x0, #0xff
    481c:	cmp	x0, #0x0
    4820:	b.ne	4864 <iterate+0x480>  // b.any
    4824:	ldr	x0, [sp, #24]
    4828:	ldr	x1, [x0, #32]
    482c:	ldr	x0, [sp, #48]
    4830:	sub	x0, x1, x0
    4834:	asr	x0, x0, #3
    4838:	mov	x1, x0
    483c:	ldr	x0, [sp, #104]
    4840:	ldr	x0, [x0]
    4844:	ldr	x0, [x0, #16]
    4848:	add	x0, x0, #0x1
    484c:	cmp	x1, x0
    4850:	cset	w0, lt  // lt = tstop
    4854:	and	w0, w0, #0xff
    4858:	and	x0, x0, #0xff
    485c:	cmp	x0, #0x0
    4860:	b.eq	488c <iterate+0x4a8>  // b.none
    4864:	ldr	x0, [sp, #104]
    4868:	ldr	x0, [x0]
    486c:	ldr	x0, [x0, #16]
    4870:	add	x0, x0, #0x1
    4874:	mov	x3, x0
    4878:	ldr	x2, [sp, #48]
    487c:	ldr	x1, [sp, #48]
    4880:	ldr	x0, [sp, #24]
    4884:	bl	18a0 <Perl_stack_grow@plt>
    4888:	str	x0, [sp, #48]
    488c:	ldr	x0, [sp, #104]
    4890:	ldr	x0, [x0]
    4894:	ldr	x0, [x0, #16]
    4898:	add	x0, x0, #0x1
    489c:	mov	x1, x0
    48a0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    48a4:	cmp	x1, x0
    48a8:	cset	w0, hi  // hi = pmore
    48ac:	and	w0, w0, #0xff
    48b0:	and	x0, x0, #0xff
    48b4:	cmp	x0, #0x0
    48b8:	b.eq	48c0 <iterate+0x4dc>  // b.none
    48bc:	bl	3e98 <S_croak_memory_wrap>
    48c0:	ldr	x0, [sp, #48]
    48c4:	add	x3, x0, #0x8
    48c8:	ldr	x0, [sp, #104]
    48cc:	ldr	x1, [x0, #16]
    48d0:	ldr	x0, [sp, #104]
    48d4:	ldr	x0, [x0]
    48d8:	ldr	x0, [x0, #16]
    48dc:	add	x0, x0, #0x1
    48e0:	lsl	x0, x0, #3
    48e4:	mov	x2, x0
    48e8:	mov	x0, x3
    48ec:	bl	1870 <memcpy@plt>
    48f0:	ldr	x0, [sp, #104]
    48f4:	ldr	x0, [x0]
    48f8:	ldr	x0, [x0, #16]
    48fc:	add	x0, x0, #0x1
    4900:	lsl	x0, x0, #3
    4904:	ldr	x1, [sp, #48]
    4908:	add	x0, x1, x0
    490c:	str	x0, [sp, #48]
    4910:	ldr	x0, [sp, #72]
    4914:	ldr	x0, [x0, #16]
    4918:	ldr	x1, [sp, #88]
    491c:	mov	w6, #0x0                   	// #0
    4920:	mov	x5, #0x0                   	// #0
    4924:	mov	w4, #0x40                  	// #64
    4928:	mov	w3, w1
    492c:	ldr	x2, [sp, #80]
    4930:	mov	x1, x0
    4934:	ldr	x0, [sp, #24]
    4938:	bl	1b50 <Perl_hv_common_key_len@plt>
    493c:	str	x0, [sp, #128]
    4940:	b	49d8 <iterate+0x5f4>
    4944:	ldr	x0, [sp, #104]
    4948:	ldr	x0, [x0]
    494c:	ldr	x0, [x0, #16]
    4950:	cmn	x0, #0x1
    4954:	b.eq	498c <iterate+0x5a8>  // b.none
    4958:	ldr	x1, [sp, #104]
    495c:	ldr	x0, [sp, #24]
    4960:	bl	1900 <Perl_av_shift@plt>
    4964:	mov	x1, x0
    4968:	ldr	x0, [sp, #48]
    496c:	add	x0, x0, #0x8
    4970:	str	x0, [sp, #48]
    4974:	ldr	x0, [sp, #24]
    4978:	bl	1ac0 <Perl_sv_2mortal@plt>
    497c:	mov	x1, x0
    4980:	ldr	x0, [sp, #48]
    4984:	str	x1, [x0]
    4988:	b	49d8 <iterate+0x5f4>
    498c:	ldr	x0, [sp, #72]
    4990:	ldr	x0, [x0, #16]
    4994:	ldr	x1, [sp, #88]
    4998:	mov	w6, #0x0                   	// #0
    499c:	mov	x5, #0x0                   	// #0
    49a0:	mov	w4, #0x44                  	// #68
    49a4:	mov	w3, w1
    49a8:	ldr	x2, [sp, #80]
    49ac:	mov	x1, x0
    49b0:	ldr	x0, [sp, #24]
    49b4:	bl	1b50 <Perl_hv_common_key_len@plt>
    49b8:	str	x0, [sp, #120]
    49bc:	ldr	x0, [sp, #48]
    49c0:	add	x0, x0, #0x8
    49c4:	str	x0, [sp, #48]
    49c8:	ldr	x0, [sp, #24]
    49cc:	add	x1, x0, #0x150
    49d0:	ldr	x0, [sp, #48]
    49d4:	str	x1, [x0]
    49d8:	ldr	x0, [sp, #24]
    49dc:	ldr	x1, [sp, #48]
    49e0:	str	x1, [x0]
    49e4:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    49e8:	ldr	x0, [x0, #4048]
    49ec:	ldr	x1, [sp, #136]
    49f0:	ldr	x0, [x0]
    49f4:	eor	x0, x1, x0
    49f8:	cmp	x0, #0x0
    49fc:	b.eq	4a04 <iterate+0x620>  // b.none
    4a00:	bl	1a00 <__stack_chk_fail@plt>
    4a04:	ldp	x29, x30, [sp], #144
    4a08:	ret

0000000000004a0c <csh_glob>:
    4a0c:	stp	x29, x30, [sp, #-240]!
    4a10:	mov	x29, sp
    4a14:	str	x19, [sp, #16]
    4a18:	str	x0, [sp, #72]
    4a1c:	str	x1, [sp, #64]
    4a20:	str	x2, [sp, #56]
    4a24:	str	x3, [sp, #48]
    4a28:	strb	w4, [sp, #47]
    4a2c:	ldr	x0, [sp, #72]
    4a30:	ldr	x0, [x0]
    4a34:	str	x0, [sp, #104]
    4a38:	str	xzr, [sp, #112]
    4a3c:	str	xzr, [sp, #128]
    4a40:	str	xzr, [sp, #136]
    4a44:	str	xzr, [sp, #144]
    4a48:	mov	w2, #0x1                   	// #1
    4a4c:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    4a50:	add	x1, x0, #0x488
    4a54:	ldr	x0, [sp, #72]
    4a58:	bl	1a70 <Perl_get_sv@plt>
    4a5c:	str	x0, [sp, #192]
    4a60:	ldr	x0, [sp, #192]
    4a64:	ldr	w1, [x0, #12]
    4a68:	mov	w0, #0x100                 	// #256
    4a6c:	movk	w0, #0x20, lsl #16
    4a70:	and	w0, w1, w0
    4a74:	cmp	w0, #0x100
    4a78:	b.ne	4a8c <csh_glob+0x80>  // b.any
    4a7c:	ldr	x0, [sp, #192]
    4a80:	ldr	x0, [x0]
    4a84:	ldr	x0, [x0, #32]
    4a88:	b	4a9c <csh_glob+0x90>
    4a8c:	mov	w2, #0x2                   	// #2
    4a90:	ldr	x1, [sp, #192]
    4a94:	ldr	x0, [sp, #72]
    4a98:	bl	1880 <Perl_sv_2iv_flags@plt>
    4a9c:	str	w0, [sp, #88]
    4aa0:	ldr	x0, [sp, #72]
    4aa4:	ldr	x0, [x0, #8]
    4aa8:	ldrb	w0, [x0, #34]
    4aac:	and	w0, w0, #0x3
    4ab0:	cmp	w0, #0x0
    4ab4:	b.eq	4acc <csh_glob+0xc0>  // b.none
    4ab8:	ldr	x0, [sp, #72]
    4abc:	ldr	x0, [x0, #8]
    4ac0:	ldrb	w0, [x0, #34]
    4ac4:	and	w0, w0, #0x3
    4ac8:	b	4ad8 <csh_glob+0xcc>
    4acc:	ldr	x0, [sp, #72]
    4ad0:	bl	1b80 <Perl_block_gimme@plt>
    4ad4:	and	w0, w0, #0xff
    4ad8:	str	w0, [sp, #92]
    4adc:	ldr	x1, [sp, #56]
    4ae0:	ldr	x0, [sp, #48]
    4ae4:	add	x0, x1, x0
    4ae8:	str	x0, [sp, #120]
    4aec:	mov	w2, #0xb                   	// #11
    4af0:	ldr	x1, [sp, #64]
    4af4:	ldr	x0, [sp, #72]
    4af8:	bl	1950 <Perl_sv_upgrade@plt>
    4afc:	ldr	x0, [sp, #56]
    4b00:	sub	x0, x0, #0x1
    4b04:	str	x0, [sp, #128]
    4b08:	b	4ff8 <csh_glob+0x5ec>
    4b0c:	ldr	x0, [sp, #128]
    4b10:	ldrb	w0, [x0]
    4b14:	cmp	w0, #0x5c
    4b18:	b.eq	4dfc <csh_glob+0x3f0>  // b.none
    4b1c:	cmp	w0, #0x5c
    4b20:	b.gt	4ed4 <csh_glob+0x4c8>
    4b24:	cmp	w0, #0x22
    4b28:	b.eq	4b34 <csh_glob+0x128>  // b.none
    4b2c:	cmp	w0, #0x27
    4b30:	b.ne	4ed4 <csh_glob+0x4c8>  // b.any
    4b34:	strb	wzr, [sp, #82]
    4b38:	ldr	x0, [sp, #128]
    4b3c:	ldrb	w0, [x0]
    4b40:	strb	w0, [sp, #83]
    4b44:	ldr	x0, [sp, #144]
    4b48:	cmp	x0, #0x0
    4b4c:	b.ne	4b88 <csh_glob+0x17c>  // b.any
    4b50:	mov	x2, #0x0                   	// #0
    4b54:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    4b58:	add	x1, x0, #0x470
    4b5c:	ldr	x0, [sp, #72]
    4b60:	bl	1c40 <Perl_newSVpvn@plt>
    4b64:	str	x0, [sp, #144]
    4b68:	ldrb	w0, [sp, #47]
    4b6c:	cmp	w0, #0x0
    4b70:	b.eq	4b88 <csh_glob+0x17c>  // b.none
    4b74:	ldr	x0, [sp, #144]
    4b78:	ldr	w0, [x0, #12]
    4b7c:	orr	w1, w0, #0x20000000
    4b80:	ldr	x0, [sp, #144]
    4b84:	str	w1, [x0, #12]
    4b88:	ldr	x0, [sp, #136]
    4b8c:	cmp	x0, #0x0
    4b90:	b.eq	4bb8 <csh_glob+0x1ac>  // b.none
    4b94:	ldr	x1, [sp, #128]
    4b98:	ldr	x0, [sp, #136]
    4b9c:	sub	x0, x1, x0
    4ba0:	mov	w4, #0x2                   	// #2
    4ba4:	mov	x3, x0
    4ba8:	ldr	x2, [sp, #136]
    4bac:	ldr	x1, [sp, #144]
    4bb0:	ldr	x0, [sp, #72]
    4bb4:	bl	18b0 <Perl_sv_catpvn_flags@plt>
    4bb8:	ldr	x0, [sp, #128]
    4bbc:	add	x0, x0, #0x1
    4bc0:	str	x0, [sp, #136]
    4bc4:	b	4c84 <csh_glob+0x278>
    4bc8:	ldr	x0, [sp, #128]
    4bcc:	ldrb	w0, [x0]
    4bd0:	cmp	w0, #0x5c
    4bd4:	b.ne	4c3c <csh_glob+0x230>  // b.any
    4bd8:	ldr	x0, [sp, #128]
    4bdc:	add	x0, x0, #0x1
    4be0:	str	x0, [sp, #128]
    4be4:	ldr	x1, [sp, #128]
    4be8:	ldr	x0, [sp, #120]
    4bec:	cmp	x1, x0
    4bf0:	b.cs	4c84 <csh_glob+0x278>  // b.hs, b.nlast
    4bf4:	ldr	x0, [sp, #128]
    4bf8:	ldrb	w0, [x0]
    4bfc:	ldrb	w1, [sp, #83]
    4c00:	cmp	w1, w0
    4c04:	b.ne	4c84 <csh_glob+0x278>  // b.any
    4c08:	ldr	x1, [sp, #128]
    4c0c:	ldr	x0, [sp, #136]
    4c10:	sub	x0, x1, x0
    4c14:	sub	x0, x0, #0x1
    4c18:	mov	w4, #0x2                   	// #2
    4c1c:	mov	x3, x0
    4c20:	ldr	x2, [sp, #136]
    4c24:	ldr	x1, [sp, #144]
    4c28:	ldr	x0, [sp, #72]
    4c2c:	bl	18b0 <Perl_sv_catpvn_flags@plt>
    4c30:	ldr	x0, [sp, #128]
    4c34:	str	x0, [sp, #136]
    4c38:	b	4c84 <csh_glob+0x278>
    4c3c:	ldr	x0, [sp, #128]
    4c40:	ldrb	w0, [x0]
    4c44:	ldrb	w1, [sp, #83]
    4c48:	cmp	w1, w0
    4c4c:	b.ne	4c84 <csh_glob+0x278>  // b.any
    4c50:	ldr	x1, [sp, #128]
    4c54:	ldr	x0, [sp, #136]
    4c58:	sub	x0, x1, x0
    4c5c:	mov	w4, #0x2                   	// #2
    4c60:	mov	x3, x0
    4c64:	ldr	x2, [sp, #136]
    4c68:	ldr	x1, [sp, #144]
    4c6c:	ldr	x0, [sp, #72]
    4c70:	bl	18b0 <Perl_sv_catpvn_flags@plt>
    4c74:	str	xzr, [sp, #136]
    4c78:	mov	w0, #0x1                   	// #1
    4c7c:	strb	w0, [sp, #82]
    4c80:	b	4ca0 <csh_glob+0x294>
    4c84:	ldr	x0, [sp, #128]
    4c88:	add	x0, x0, #0x1
    4c8c:	str	x0, [sp, #128]
    4c90:	ldr	x1, [sp, #128]
    4c94:	ldr	x0, [sp, #120]
    4c98:	cmp	x1, x0
    4c9c:	b.cc	4bc8 <csh_glob+0x1bc>  // b.lo, b.ul, b.last
    4ca0:	ldrb	w0, [sp, #82]
    4ca4:	eor	w0, w0, #0x1
    4ca8:	and	w0, w0, #0xff
    4cac:	cmp	w0, #0x0
    4cb0:	b.eq	4ff8 <csh_glob+0x5ec>  // b.none
    4cb4:	ldr	x0, [sp, #56]
    4cb8:	str	x0, [sp, #136]
    4cbc:	b	4ccc <csh_glob+0x2c0>
    4cc0:	ldr	x0, [sp, #56]
    4cc4:	add	x0, x0, #0x1
    4cc8:	str	x0, [sp, #56]
    4ccc:	ldr	x0, [sp, #56]
    4cd0:	ldrb	w0, [x0]
    4cd4:	mov	w1, w0
    4cd8:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    4cdc:	ldr	x0, [x0, #4032]
    4ce0:	sxtw	x1, w1
    4ce4:	ldr	w1, [x0, x1, lsl #2]
    4ce8:	mov	w0, #0x4400                	// #17408
    4cec:	and	w1, w1, w0
    4cf0:	mov	w0, #0x4400                	// #17408
    4cf4:	cmp	w1, w0
    4cf8:	b.eq	4cc0 <csh_glob+0x2b4>  // b.none
    4cfc:	b	4d0c <csh_glob+0x300>
    4d00:	ldr	x0, [sp, #120]
    4d04:	sub	x0, x0, #0x1
    4d08:	str	x0, [sp, #120]
    4d0c:	ldr	x0, [sp, #120]
    4d10:	sub	x0, x0, #0x1
    4d14:	ldrb	w0, [x0]
    4d18:	mov	w1, w0
    4d1c:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    4d20:	ldr	x0, [x0, #4032]
    4d24:	sxtw	x1, w1
    4d28:	ldr	w1, [x0, x1, lsl #2]
    4d2c:	mov	w0, #0x4400                	// #17408
    4d30:	and	w1, w1, w0
    4d34:	mov	w0, #0x4400                	// #17408
    4d38:	cmp	w1, w0
    4d3c:	b.eq	4d00 <csh_glob+0x2f4>  // b.none
    4d40:	ldr	x1, [sp, #56]
    4d44:	ldr	x0, [sp, #48]
    4d48:	add	x0, x1, x0
    4d4c:	ldr	x1, [sp, #120]
    4d50:	cmp	x1, x0
    4d54:	b.cs	4dc0 <csh_glob+0x3b4>  // b.hs, b.nlast
    4d58:	ldr	x0, [sp, #144]
    4d5c:	cmp	x0, #0x0
    4d60:	b.eq	4d88 <csh_glob+0x37c>  // b.none
    4d64:	ldr	x1, [sp, #120]
    4d68:	ldr	x0, [sp, #56]
    4d6c:	sub	x0, x1, x0
    4d70:	mov	x3, x0
    4d74:	ldr	x2, [sp, #56]
    4d78:	ldr	x1, [sp, #144]
    4d7c:	ldr	x0, [sp, #72]
    4d80:	bl	1b60 <Perl_sv_setpvn@plt>
    4d84:	b	4db8 <csh_glob+0x3ac>
    4d88:	ldr	x1, [sp, #120]
    4d8c:	ldr	x0, [sp, #56]
    4d90:	sub	x0, x1, x0
    4d94:	mov	x1, x0
    4d98:	ldrb	w0, [sp, #47]
    4d9c:	lsl	w0, w0, #29
    4da0:	mov	w3, w0
    4da4:	mov	x2, x1
    4da8:	ldr	x1, [sp, #56]
    4dac:	ldr	x0, [sp, #72]
    4db0:	bl	1a30 <Perl_newSVpvn_flags@plt>
    4db4:	str	x0, [sp, #144]
    4db8:	str	xzr, [sp, #136]
    4dbc:	b	5018 <csh_glob+0x60c>
    4dc0:	ldr	x0, [sp, #144]
    4dc4:	cmp	x0, #0x0
    4dc8:	b.eq	4de8 <csh_glob+0x3dc>  // b.none
    4dcc:	ldr	x0, [sp, #144]
    4dd0:	str	x0, [sp, #200]
    4dd4:	ldr	x0, [sp, #200]
    4dd8:	mov	x1, x0
    4ddc:	ldr	x0, [sp, #72]
    4de0:	bl	3e14 <S_SvREFCNT_dec>
    4de4:	str	xzr, [sp, #144]
    4de8:	ldr	x0, [sp, #56]
    4dec:	str	x0, [sp, #136]
    4df0:	ldr	x0, [sp, #120]
    4df4:	str	x0, [sp, #128]
    4df8:	b	5018 <csh_glob+0x60c>
    4dfc:	ldr	x0, [sp, #136]
    4e00:	cmp	x0, #0x0
    4e04:	b.ne	4e10 <csh_glob+0x404>  // b.any
    4e08:	ldr	x0, [sp, #128]
    4e0c:	str	x0, [sp, #136]
    4e10:	ldr	x0, [sp, #128]
    4e14:	add	x0, x0, #0x1
    4e18:	str	x0, [sp, #128]
    4e1c:	ldr	x1, [sp, #128]
    4e20:	ldr	x0, [sp, #120]
    4e24:	cmp	x1, x0
    4e28:	b.cs	4ff8 <csh_glob+0x5ec>  // b.hs, b.nlast
    4e2c:	ldr	x0, [sp, #128]
    4e30:	ldrb	w0, [x0]
    4e34:	cmp	w0, #0x22
    4e38:	b.eq	4e4c <csh_glob+0x440>  // b.none
    4e3c:	ldr	x0, [sp, #128]
    4e40:	ldrb	w0, [x0]
    4e44:	cmp	w0, #0x27
    4e48:	b.ne	4ff8 <csh_glob+0x5ec>  // b.any
    4e4c:	ldr	x0, [sp, #144]
    4e50:	cmp	x0, #0x0
    4e54:	b.ne	4ea0 <csh_glob+0x494>  // b.any
    4e58:	ldr	x1, [sp, #128]
    4e5c:	ldr	x0, [sp, #136]
    4e60:	sub	x0, x1, x0
    4e64:	sub	x0, x0, #0x1
    4e68:	mov	x2, x0
    4e6c:	ldr	x1, [sp, #136]
    4e70:	ldr	x0, [sp, #72]
    4e74:	bl	1c40 <Perl_newSVpvn@plt>
    4e78:	str	x0, [sp, #144]
    4e7c:	ldrb	w0, [sp, #47]
    4e80:	cmp	w0, #0x0
    4e84:	b.eq	4ec8 <csh_glob+0x4bc>  // b.none
    4e88:	ldr	x0, [sp, #144]
    4e8c:	ldr	w0, [x0, #12]
    4e90:	orr	w1, w0, #0x20000000
    4e94:	ldr	x0, [sp, #144]
    4e98:	str	w1, [x0, #12]
    4e9c:	b	4ec8 <csh_glob+0x4bc>
    4ea0:	ldr	x1, [sp, #128]
    4ea4:	ldr	x0, [sp, #136]
    4ea8:	sub	x0, x1, x0
    4eac:	sub	x0, x0, #0x1
    4eb0:	mov	w4, #0x2                   	// #2
    4eb4:	mov	x3, x0
    4eb8:	ldr	x2, [sp, #136]
    4ebc:	ldr	x1, [sp, #144]
    4ec0:	ldr	x0, [sp, #72]
    4ec4:	bl	18b0 <Perl_sv_catpvn_flags@plt>
    4ec8:	ldr	x0, [sp, #128]
    4ecc:	str	x0, [sp, #136]
    4ed0:	b	4ff8 <csh_glob+0x5ec>
    4ed4:	ldr	x0, [sp, #128]
    4ed8:	ldrb	w0, [x0]
    4edc:	mov	w1, w0
    4ee0:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    4ee4:	ldr	x0, [x0, #4032]
    4ee8:	sxtw	x1, w1
    4eec:	ldr	w1, [x0, x1, lsl #2]
    4ef0:	mov	w0, #0x4400                	// #17408
    4ef4:	and	w1, w1, w0
    4ef8:	mov	w0, #0x4400                	// #17408
    4efc:	cmp	w1, w0
    4f00:	b.ne	4fe0 <csh_glob+0x5d4>  // b.any
    4f04:	ldr	x0, [sp, #136]
    4f08:	cmp	x0, #0x0
    4f0c:	b.eq	4f84 <csh_glob+0x578>  // b.none
    4f10:	ldr	x0, [sp, #144]
    4f14:	cmp	x0, #0x0
    4f18:	b.ne	4f60 <csh_glob+0x554>  // b.any
    4f1c:	ldr	x1, [sp, #128]
    4f20:	ldr	x0, [sp, #136]
    4f24:	sub	x0, x1, x0
    4f28:	mov	x2, x0
    4f2c:	ldr	x1, [sp, #136]
    4f30:	ldr	x0, [sp, #72]
    4f34:	bl	1c40 <Perl_newSVpvn@plt>
    4f38:	str	x0, [sp, #144]
    4f3c:	ldrb	w0, [sp, #47]
    4f40:	cmp	w0, #0x0
    4f44:	b.eq	4f84 <csh_glob+0x578>  // b.none
    4f48:	ldr	x0, [sp, #144]
    4f4c:	ldr	w0, [x0, #12]
    4f50:	orr	w1, w0, #0x20000000
    4f54:	ldr	x0, [sp, #144]
    4f58:	str	w1, [x0, #12]
    4f5c:	b	4f84 <csh_glob+0x578>
    4f60:	ldr	x1, [sp, #128]
    4f64:	ldr	x0, [sp, #136]
    4f68:	sub	x0, x1, x0
    4f6c:	mov	w4, #0x2                   	// #2
    4f70:	mov	x3, x0
    4f74:	ldr	x2, [sp, #136]
    4f78:	ldr	x1, [sp, #144]
    4f7c:	ldr	x0, [sp, #72]
    4f80:	bl	18b0 <Perl_sv_catpvn_flags@plt>
    4f84:	ldr	x0, [sp, #144]
    4f88:	cmp	x0, #0x0
    4f8c:	b.ne	4f94 <csh_glob+0x588>  // b.any
    4f90:	b	4ff8 <csh_glob+0x5ec>
    4f94:	ldr	x0, [sp, #112]
    4f98:	cmp	x0, #0x0
    4f9c:	b.ne	4fc4 <csh_glob+0x5b8>  // b.any
    4fa0:	mov	w1, #0xb                   	// #11
    4fa4:	ldr	x0, [sp, #72]
    4fa8:	bl	1b70 <Perl_newSV_type@plt>
    4fac:	str	x0, [sp, #208]
    4fb0:	ldr	x0, [sp, #208]
    4fb4:	mov	x1, x0
    4fb8:	ldr	x0, [sp, #72]
    4fbc:	bl	1ac0 <Perl_sv_2mortal@plt>
    4fc0:	str	x0, [sp, #112]
    4fc4:	ldr	x2, [sp, #144]
    4fc8:	ldr	x1, [sp, #112]
    4fcc:	ldr	x0, [sp, #72]
    4fd0:	bl	1a40 <Perl_av_push@plt>
    4fd4:	str	xzr, [sp, #144]
    4fd8:	str	xzr, [sp, #136]
    4fdc:	b	4ff4 <csh_glob+0x5e8>
    4fe0:	ldr	x0, [sp, #136]
    4fe4:	cmp	x0, #0x0
    4fe8:	b.ne	4ff4 <csh_glob+0x5e8>  // b.any
    4fec:	ldr	x0, [sp, #128]
    4ff0:	str	x0, [sp, #136]
    4ff4:	nop
    4ff8:	ldr	x0, [sp, #128]
    4ffc:	add	x0, x0, #0x1
    5000:	str	x0, [sp, #128]
    5004:	ldr	x1, [sp, #128]
    5008:	ldr	x0, [sp, #120]
    500c:	cmp	x1, x0
    5010:	b.cc	4b0c <csh_glob+0x100>  // b.lo, b.ul, b.last
    5014:	nop
    5018:	ldr	x0, [sp, #112]
    501c:	cmp	x0, #0x0
    5020:	b.eq	51ac <csh_glob+0x7a0>  // b.none
    5024:	ldr	x0, [sp, #112]
    5028:	ldr	x0, [x0]
    502c:	ldr	x0, [x0, #16]
    5030:	add	w0, w0, #0x1
    5034:	str	w0, [sp, #84]
    5038:	ldr	x0, [sp, #112]
    503c:	ldr	x0, [x0, #16]
    5040:	str	x0, [sp, #152]
    5044:	b	5198 <csh_glob+0x78c>
    5048:	ldr	x0, [sp, #72]
    504c:	ldr	x0, [x0, #120]
    5050:	add	x1, x0, #0x4
    5054:	ldr	x0, [sp, #72]
    5058:	str	x1, [x0, #120]
    505c:	ldr	x0, [sp, #72]
    5060:	ldr	x0, [x0, #120]
    5064:	str	x0, [sp, #160]
    5068:	ldr	x0, [sp, #72]
    506c:	ldr	x0, [x0, #128]
    5070:	ldr	x1, [sp, #160]
    5074:	cmp	x1, x0
    5078:	cset	w0, eq  // eq = none
    507c:	and	w0, w0, #0xff
    5080:	and	x0, x0, #0xff
    5084:	cmp	x0, #0x0
    5088:	b.eq	5098 <csh_glob+0x68c>  // b.none
    508c:	ldr	x0, [sp, #72]
    5090:	bl	1b40 <Perl_markstack_grow@plt>
    5094:	str	x0, [sp, #160]
    5098:	ldr	x0, [sp, #72]
    509c:	ldr	x0, [x0, #24]
    50a0:	ldr	x1, [sp, #104]
    50a4:	sub	x0, x1, x0
    50a8:	asr	x0, x0, #3
    50ac:	mov	w1, w0
    50b0:	ldr	x0, [sp, #160]
    50b4:	str	w1, [x0]
    50b8:	ldr	x0, [sp, #72]
    50bc:	ldr	x1, [sp, #104]
    50c0:	str	x1, [x0]
    50c4:	ldr	x0, [sp, #152]
    50c8:	add	x1, x0, #0x8
    50cc:	str	x1, [sp, #152]
    50d0:	ldr	x0, [x0]
    50d4:	ldr	x0, [x0, #16]
    50d8:	ldr	w2, [sp, #88]
    50dc:	mov	x1, x0
    50e0:	ldr	x0, [sp, #72]
    50e4:	bl	41c0 <doglob>
    50e8:	ldr	x0, [sp, #72]
    50ec:	ldr	x0, [x0]
    50f0:	str	x0, [sp, #104]
    50f4:	ldr	x0, [sp, #72]
    50f8:	ldr	x19, [x0, #24]
    50fc:	ldr	x0, [sp, #72]
    5100:	bl	3dec <S_POPMARK>
    5104:	sxtw	x0, w0
    5108:	lsl	x0, x0, #3
    510c:	add	x0, x19, x0
    5110:	str	x0, [sp, #168]
    5114:	ldr	x0, [sp, #72]
    5118:	ldr	x0, [x0, #24]
    511c:	ldr	x1, [sp, #168]
    5120:	sub	x0, x1, x0
    5124:	asr	x0, x0, #3
    5128:	str	w0, [sp, #96]
    512c:	b	5164 <csh_glob+0x758>
    5130:	ldr	x0, [sp, #168]
    5134:	ldr	x0, [x0]
    5138:	ldr	w1, [x0, #8]
    513c:	add	w1, w1, #0x1
    5140:	str	w1, [x0, #8]
    5144:	ldr	x0, [sp, #168]
    5148:	ldr	x0, [x0]
    514c:	str	x0, [sp, #216]
    5150:	ldr	x0, [sp, #216]
    5154:	mov	x2, x0
    5158:	ldr	x1, [sp, #64]
    515c:	ldr	x0, [sp, #72]
    5160:	bl	1a40 <Perl_av_push@plt>
    5164:	ldr	x0, [sp, #168]
    5168:	add	x0, x0, #0x8
    516c:	str	x0, [sp, #168]
    5170:	ldr	x1, [sp, #168]
    5174:	ldr	x0, [sp, #104]
    5178:	cmp	x1, x0
    517c:	b.ls	5130 <csh_glob+0x724>  // b.plast
    5180:	ldr	x0, [sp, #72]
    5184:	ldr	x1, [x0, #24]
    5188:	ldrsw	x0, [sp, #96]
    518c:	lsl	x0, x0, #3
    5190:	add	x0, x1, x0
    5194:	str	x0, [sp, #104]
    5198:	ldr	w0, [sp, #84]
    519c:	sub	w1, w0, #0x1
    51a0:	str	w1, [sp, #84]
    51a4:	cmp	w0, #0x0
    51a8:	b.ne	5048 <csh_glob+0x63c>  // b.any
    51ac:	ldr	x0, [sp, #136]
    51b0:	cmp	x0, #0x0
    51b4:	b.ne	51c4 <csh_glob+0x7b8>  // b.any
    51b8:	ldr	x0, [sp, #144]
    51bc:	cmp	x0, #0x0
    51c0:	b.eq	5394 <csh_glob+0x988>  // b.none
    51c4:	ldr	x0, [sp, #144]
    51c8:	cmp	x0, #0x0
    51cc:	b.eq	520c <csh_glob+0x800>  // b.none
    51d0:	ldr	x0, [sp, #136]
    51d4:	cmp	x0, #0x0
    51d8:	b.eq	5200 <csh_glob+0x7f4>  // b.none
    51dc:	ldr	x1, [sp, #128]
    51e0:	ldr	x0, [sp, #136]
    51e4:	sub	x0, x1, x0
    51e8:	mov	w4, #0x2                   	// #2
    51ec:	mov	x3, x0
    51f0:	ldr	x2, [sp, #136]
    51f4:	ldr	x1, [sp, #144]
    51f8:	ldr	x0, [sp, #72]
    51fc:	bl	18b0 <Perl_sv_catpvn_flags@plt>
    5200:	ldr	x0, [sp, #144]
    5204:	ldr	x0, [x0, #16]
    5208:	str	x0, [sp, #136]
    520c:	ldr	x0, [sp, #72]
    5210:	ldr	x0, [x0, #120]
    5214:	add	x1, x0, #0x4
    5218:	ldr	x0, [sp, #72]
    521c:	str	x1, [x0, #120]
    5220:	ldr	x0, [sp, #72]
    5224:	ldr	x0, [x0, #120]
    5228:	str	x0, [sp, #176]
    522c:	ldr	x0, [sp, #72]
    5230:	ldr	x0, [x0, #128]
    5234:	ldr	x1, [sp, #176]
    5238:	cmp	x1, x0
    523c:	cset	w0, eq  // eq = none
    5240:	and	w0, w0, #0xff
    5244:	and	x0, x0, #0xff
    5248:	cmp	x0, #0x0
    524c:	b.eq	525c <csh_glob+0x850>  // b.none
    5250:	ldr	x0, [sp, #72]
    5254:	bl	1b40 <Perl_markstack_grow@plt>
    5258:	str	x0, [sp, #176]
    525c:	ldr	x0, [sp, #72]
    5260:	ldr	x0, [x0, #24]
    5264:	ldr	x1, [sp, #104]
    5268:	sub	x0, x1, x0
    526c:	asr	x0, x0, #3
    5270:	mov	w1, w0
    5274:	ldr	x0, [sp, #176]
    5278:	str	w1, [x0]
    527c:	ldr	x0, [sp, #72]
    5280:	ldr	x1, [sp, #104]
    5284:	str	x1, [x0]
    5288:	ldr	w2, [sp, #88]
    528c:	ldr	x1, [sp, #136]
    5290:	ldr	x0, [sp, #72]
    5294:	bl	41c0 <doglob>
    5298:	ldr	x0, [sp, #144]
    529c:	cmp	x0, #0x0
    52a0:	b.eq	52bc <csh_glob+0x8b0>  // b.none
    52a4:	ldr	x0, [sp, #144]
    52a8:	str	x0, [sp, #224]
    52ac:	ldr	x0, [sp, #224]
    52b0:	mov	x1, x0
    52b4:	ldr	x0, [sp, #72]
    52b8:	bl	3e14 <S_SvREFCNT_dec>
    52bc:	ldr	x0, [sp, #72]
    52c0:	ldr	x0, [x0]
    52c4:	str	x0, [sp, #104]
    52c8:	ldr	x0, [sp, #72]
    52cc:	ldr	x19, [x0, #24]
    52d0:	ldr	x0, [sp, #72]
    52d4:	bl	3dec <S_POPMARK>
    52d8:	sxtw	x0, w0
    52dc:	lsl	x0, x0, #3
    52e0:	add	x0, x19, x0
    52e4:	str	x0, [sp, #184]
    52e8:	ldr	x0, [sp, #72]
    52ec:	ldr	x0, [x0, #24]
    52f0:	ldr	x1, [sp, #184]
    52f4:	sub	x0, x1, x0
    52f8:	asr	x0, x0, #3
    52fc:	str	w0, [sp, #100]
    5300:	ldr	x0, [sp, #112]
    5304:	cmp	x0, #0x0
    5308:	b.ne	5360 <csh_glob+0x954>  // b.any
    530c:	ldr	w0, [sp, #92]
    5310:	cmp	w0, #0x3
    5314:	b.ne	5360 <csh_glob+0x954>  // b.any
    5318:	ldr	x0, [sp, #72]
    531c:	ldr	x1, [sp, #104]
    5320:	str	x1, [x0]
    5324:	mov	w0, #0x1                   	// #1
    5328:	b	53a4 <csh_glob+0x998>
    532c:	ldr	x0, [sp, #184]
    5330:	ldr	x0, [x0]
    5334:	ldr	w1, [x0, #8]
    5338:	add	w1, w1, #0x1
    533c:	str	w1, [x0, #8]
    5340:	ldr	x0, [sp, #184]
    5344:	ldr	x0, [x0]
    5348:	str	x0, [sp, #232]
    534c:	ldr	x0, [sp, #232]
    5350:	mov	x2, x0
    5354:	ldr	x1, [sp, #64]
    5358:	ldr	x0, [sp, #72]
    535c:	bl	1a40 <Perl_av_push@plt>
    5360:	ldr	x0, [sp, #184]
    5364:	add	x0, x0, #0x8
    5368:	str	x0, [sp, #184]
    536c:	ldr	x1, [sp, #184]
    5370:	ldr	x0, [sp, #104]
    5374:	cmp	x1, x0
    5378:	b.ls	532c <csh_glob+0x920>  // b.plast
    537c:	ldr	x0, [sp, #72]
    5380:	ldr	x1, [x0, #24]
    5384:	ldrsw	x0, [sp, #100]
    5388:	lsl	x0, x0, #3
    538c:	add	x0, x1, x0
    5390:	str	x0, [sp, #104]
    5394:	ldr	x0, [sp, #72]
    5398:	ldr	x1, [sp, #104]
    539c:	str	x1, [x0]
    53a0:	mov	w0, #0x0                   	// #0
    53a4:	ldr	x19, [sp, #16]
    53a8:	ldp	x29, x30, [sp], #240
    53ac:	ret

00000000000053b0 <csh_glob_iter>:
    53b0:	stp	x29, x30, [sp, #-32]!
    53b4:	mov	x29, sp
    53b8:	str	x0, [sp, #24]
    53bc:	adrp	x0, 4000 <constant_add_symbol+0x9c>
    53c0:	add	x1, x0, #0xa0c
    53c4:	ldr	x0, [sp, #24]
    53c8:	bl	43e4 <iterate>
    53cc:	nop
    53d0:	ldp	x29, x30, [sp], #32
    53d4:	ret

00000000000053d8 <doglob_iter_wrapper>:
    53d8:	stp	x29, x30, [sp, #-128]!
    53dc:	mov	x29, sp
    53e0:	str	x19, [sp, #16]
    53e4:	str	x0, [sp, #72]
    53e8:	str	x1, [sp, #64]
    53ec:	str	x2, [sp, #56]
    53f0:	str	x3, [sp, #48]
    53f4:	strb	w4, [sp, #47]
    53f8:	ldr	x0, [sp, #72]
    53fc:	ldr	x0, [x0]
    5400:	str	x0, [sp, #104]
    5404:	mov	w2, #0x1                   	// #1
    5408:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    540c:	add	x1, x0, #0x488
    5410:	ldr	x0, [sp, #72]
    5414:	bl	1a70 <Perl_get_sv@plt>
    5418:	str	x0, [sp, #112]
    541c:	ldr	x0, [sp, #112]
    5420:	ldr	w1, [x0, #12]
    5424:	mov	w0, #0x100                 	// #256
    5428:	movk	w0, #0x20, lsl #16
    542c:	and	w0, w1, w0
    5430:	cmp	w0, #0x100
    5434:	b.ne	5448 <doglob_iter_wrapper+0x70>  // b.any
    5438:	ldr	x0, [sp, #112]
    543c:	ldr	x0, [x0]
    5440:	ldr	x0, [x0, #32]
    5444:	b	5458 <doglob_iter_wrapper+0x80>
    5448:	mov	w2, #0x2                   	// #2
    544c:	ldr	x1, [sp, #112]
    5450:	ldr	x0, [sp, #72]
    5454:	bl	1880 <Perl_sv_2iv_flags@plt>
    5458:	str	w0, [sp, #80]
    545c:	ldr	x0, [sp, #72]
    5460:	ldr	x0, [x0, #120]
    5464:	add	x1, x0, #0x4
    5468:	ldr	x0, [sp, #72]
    546c:	str	x1, [x0, #120]
    5470:	ldr	x0, [sp, #72]
    5474:	ldr	x0, [x0, #120]
    5478:	str	x0, [sp, #88]
    547c:	ldr	x0, [sp, #72]
    5480:	ldr	x0, [x0, #128]
    5484:	ldr	x1, [sp, #88]
    5488:	cmp	x1, x0
    548c:	cset	w0, eq  // eq = none
    5490:	and	w0, w0, #0xff
    5494:	and	x0, x0, #0xff
    5498:	cmp	x0, #0x0
    549c:	b.eq	54ac <doglob_iter_wrapper+0xd4>  // b.none
    54a0:	ldr	x0, [sp, #72]
    54a4:	bl	1b40 <Perl_markstack_grow@plt>
    54a8:	str	x0, [sp, #88]
    54ac:	ldr	x0, [sp, #72]
    54b0:	ldr	x0, [x0, #24]
    54b4:	ldr	x1, [sp, #104]
    54b8:	sub	x0, x1, x0
    54bc:	asr	x0, x0, #3
    54c0:	mov	w1, w0
    54c4:	ldr	x0, [sp, #88]
    54c8:	str	w1, [x0]
    54cc:	ldr	x0, [sp, #72]
    54d0:	ldr	x1, [sp, #104]
    54d4:	str	x1, [x0]
    54d8:	ldr	w2, [sp, #80]
    54dc:	ldr	x1, [sp, #56]
    54e0:	ldr	x0, [sp, #72]
    54e4:	bl	41c0 <doglob>
    54e8:	ldr	x0, [sp, #72]
    54ec:	ldr	x0, [x0]
    54f0:	str	x0, [sp, #104]
    54f4:	ldr	x0, [sp, #72]
    54f8:	ldr	x19, [x0, #24]
    54fc:	ldr	x0, [sp, #72]
    5500:	bl	3dec <S_POPMARK>
    5504:	sxtw	x0, w0
    5508:	lsl	x0, x0, #3
    550c:	add	x0, x19, x0
    5510:	str	x0, [sp, #96]
    5514:	ldr	x0, [sp, #72]
    5518:	ldr	x0, [x0, #24]
    551c:	ldr	x1, [sp, #96]
    5520:	sub	x0, x1, x0
    5524:	asr	x0, x0, #3
    5528:	str	w0, [sp, #84]
    552c:	ldr	x0, [sp, #72]
    5530:	ldr	x0, [x0, #8]
    5534:	ldrb	w0, [x0, #34]
    5538:	and	w0, w0, #0x3
    553c:	cmp	w0, #0x0
    5540:	b.eq	5564 <doglob_iter_wrapper+0x18c>  // b.none
    5544:	ldr	x0, [sp, #72]
    5548:	ldr	x0, [x0, #8]
    554c:	ldrb	w0, [x0, #34]
    5550:	and	w0, w0, #0x3
    5554:	cmp	w0, #0x3
    5558:	cset	w0, eq  // eq = none
    555c:	and	w0, w0, #0xff
    5560:	b	557c <doglob_iter_wrapper+0x1a4>
    5564:	ldr	x0, [sp, #72]
    5568:	bl	1b80 <Perl_block_gimme@plt>
    556c:	and	w0, w0, #0xff
    5570:	cmp	w0, #0x3
    5574:	cset	w0, eq  // eq = none
    5578:	and	w0, w0, #0xff
    557c:	cmp	w0, #0x0
    5580:	b.eq	5598 <doglob_iter_wrapper+0x1c0>  // b.none
    5584:	ldr	x0, [sp, #72]
    5588:	ldr	x1, [sp, #104]
    558c:	str	x1, [x0]
    5590:	mov	w0, #0x1                   	// #1
    5594:	b	5618 <doglob_iter_wrapper+0x240>
    5598:	mov	w2, #0xb                   	// #11
    559c:	ldr	x1, [sp, #64]
    55a0:	ldr	x0, [sp, #72]
    55a4:	bl	1950 <Perl_sv_upgrade@plt>
    55a8:	b	55e0 <doglob_iter_wrapper+0x208>
    55ac:	ldr	x0, [sp, #96]
    55b0:	ldr	x0, [x0]
    55b4:	ldr	w1, [x0, #8]
    55b8:	add	w1, w1, #0x1
    55bc:	str	w1, [x0, #8]
    55c0:	ldr	x0, [sp, #96]
    55c4:	ldr	x0, [x0]
    55c8:	str	x0, [sp, #120]
    55cc:	ldr	x0, [sp, #120]
    55d0:	mov	x2, x0
    55d4:	ldr	x1, [sp, #64]
    55d8:	ldr	x0, [sp, #72]
    55dc:	bl	1a40 <Perl_av_push@plt>
    55e0:	ldr	x0, [sp, #96]
    55e4:	add	x0, x0, #0x8
    55e8:	str	x0, [sp, #96]
    55ec:	ldr	x1, [sp, #96]
    55f0:	ldr	x0, [sp, #104]
    55f4:	cmp	x1, x0
    55f8:	b.ls	55ac <doglob_iter_wrapper+0x1d4>  // b.plast
    55fc:	ldr	x0, [sp, #72]
    5600:	ldr	x1, [x0, #24]
    5604:	ldrsw	x0, [sp, #84]
    5608:	lsl	x0, x0, #3
    560c:	add	x0, x1, x0
    5610:	str	x0, [sp, #104]
    5614:	mov	w0, #0x0                   	// #0
    5618:	ldr	x19, [sp, #16]
    561c:	ldp	x29, x30, [sp], #128
    5620:	ret

0000000000005624 <glob_ophook>:
    5624:	stp	x29, x30, [sp, #-48]!
    5628:	mov	x29, sp
    562c:	str	x0, [sp, #24]
    5630:	str	x1, [sp, #16]
    5634:	ldr	x0, [sp, #24]
    5638:	ldr	w0, [x0, #2604]
    563c:	cmp	w0, #0x6
    5640:	b.eq	5708 <glob_ophook+0xe4>  // b.none
    5644:	ldr	x0, [sp, #24]
    5648:	ldr	x1, [x0, #3032]
    564c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    5650:	add	x0, x0, #0x208
    5654:	ldr	w0, [x0]
    5658:	sxtw	x0, w0
    565c:	lsl	x0, x0, #3
    5660:	add	x0, x1, x0
    5664:	ldr	x0, [x0]
    5668:	str	x0, [sp, #32]
    566c:	ldr	x0, [sp, #32]
    5670:	ldr	x0, [x0, #16]
    5674:	cmp	x0, #0x0
    5678:	b.eq	56dc <glob_ophook+0xb8>  // b.none
    567c:	ldr	x0, [sp, #16]
    5680:	ldrh	w0, [x0, #32]
    5684:	and	w0, w0, #0x1ff
    5688:	and	w0, w0, #0xffff
    568c:	cmp	w0, #0x18
    5690:	b.eq	56ac <glob_ophook+0x88>  // b.none
    5694:	ldr	x0, [sp, #16]
    5698:	ldrh	w0, [x0, #32]
    569c:	and	w0, w0, #0x1ff
    56a0:	and	w0, w0, #0xffff
    56a4:	cmp	w0, #0xb8
    56a8:	b.ne	56dc <glob_ophook+0xb8>  // b.any
    56ac:	ldr	x0, [sp, #32]
    56b0:	ldr	x0, [x0, #16]
    56b4:	add	x1, sp, #0x10
    56b8:	mov	w6, #0x0                   	// #0
    56bc:	mov	x5, #0x0                   	// #0
    56c0:	mov	w4, #0x44                  	// #68
    56c4:	mov	w3, #0x8                   	// #8
    56c8:	mov	x2, x1
    56cc:	mov	x1, x0
    56d0:	ldr	x0, [sp, #24]
    56d4:	bl	1b50 <Perl_hv_common_key_len@plt>
    56d8:	str	x0, [sp, #40]
    56dc:	ldr	x0, [sp, #32]
    56e0:	ldr	x0, [x0, #24]
    56e4:	cmp	x0, #0x0
    56e8:	b.eq	570c <glob_ophook+0xe8>  // b.none
    56ec:	ldr	x0, [sp, #32]
    56f0:	ldr	x2, [x0, #24]
    56f4:	ldr	x0, [sp, #16]
    56f8:	mov	x1, x0
    56fc:	ldr	x0, [sp, #24]
    5700:	blr	x2
    5704:	b	570c <glob_ophook+0xe8>
    5708:	nop
    570c:	ldp	x29, x30, [sp], #48
    5710:	ret

0000000000005714 <XS_File__Glob_GLOB_ERROR>:
    5714:	stp	x29, x30, [sp, #-96]!
    5718:	mov	x29, sp
    571c:	str	x0, [sp, #24]
    5720:	str	x1, [sp, #16]
    5724:	ldr	x0, [sp, #24]
    5728:	ldr	x0, [x0]
    572c:	str	x0, [sp, #48]
    5730:	ldr	x0, [sp, #24]
    5734:	bl	3dec <S_POPMARK>
    5738:	str	w0, [sp, #36]
    573c:	ldr	x0, [sp, #24]
    5740:	ldr	x1, [x0, #24]
    5744:	ldr	w0, [sp, #36]
    5748:	add	w2, w0, #0x1
    574c:	str	w2, [sp, #36]
    5750:	sxtw	x0, w0
    5754:	lsl	x0, x0, #3
    5758:	add	x0, x1, x0
    575c:	str	x0, [sp, #56]
    5760:	ldr	x1, [sp, #48]
    5764:	ldr	x0, [sp, #56]
    5768:	sub	x0, x1, x0
    576c:	asr	x0, x0, #3
    5770:	str	w0, [sp, #40]
    5774:	ldr	w0, [sp, #40]
    5778:	cmp	w0, #0x0
    577c:	b.eq	5790 <XS_File__Glob_GLOB_ERROR+0x7c>  // b.none
    5780:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    5784:	add	x1, x0, #0x470
    5788:	ldr	x0, [sp, #16]
    578c:	bl	1a20 <Perl_croak_xs_usage@plt>
    5790:	ldr	x0, [sp, #24]
    5794:	ldr	x1, [x0, #3032]
    5798:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    579c:	add	x0, x0, #0x208
    57a0:	ldr	w0, [x0]
    57a4:	sxtw	x0, w0
    57a8:	lsl	x0, x0, #3
    57ac:	add	x0, x1, x0
    57b0:	ldr	x0, [x0]
    57b4:	str	x0, [sp, #64]
    57b8:	ldr	x0, [sp, #24]
    57bc:	ldr	x0, [x0, #8]
    57c0:	ldrb	w0, [x0, #35]
    57c4:	and	w0, w0, #0x4
    57c8:	cmp	w0, #0x0
    57cc:	b.eq	57f4 <XS_File__Glob_GLOB_ERROR+0xe0>  // b.none
    57d0:	ldr	x0, [sp, #24]
    57d4:	ldr	x1, [x0, #16]
    57d8:	ldr	x0, [sp, #24]
    57dc:	ldr	x0, [x0, #8]
    57e0:	ldr	x0, [x0, #24]
    57e4:	lsl	x0, x0, #3
    57e8:	add	x0, x1, x0
    57ec:	ldr	x0, [x0]
    57f0:	b	57fc <XS_File__Glob_GLOB_ERROR+0xe8>
    57f4:	ldr	x0, [sp, #24]
    57f8:	bl	1c50 <Perl_sv_newmortal@plt>
    57fc:	str	x0, [sp, #72]
    5800:	ldr	x0, [sp, #64]
    5804:	ldr	w0, [x0, #8]
    5808:	str	w0, [sp, #44]
    580c:	ldr	x0, [sp, #24]
    5810:	ldr	x1, [x0, #24]
    5814:	ldrsw	x0, [sp, #36]
    5818:	lsl	x0, x0, #3
    581c:	sub	x0, x0, #0x8
    5820:	add	x0, x1, x0
    5824:	str	x0, [sp, #48]
    5828:	ldrsw	x0, [sp, #44]
    582c:	str	x0, [sp, #80]
    5830:	ldr	x0, [sp, #72]
    5834:	ldr	w1, [x0, #12]
    5838:	mov	w0, #0x8ff                 	// #2303
    583c:	movk	w0, #0x9981, lsl #16
    5840:	and	w0, w1, w0
    5844:	cmp	w0, #0x1
    5848:	cset	w0, eq  // eq = none
    584c:	and	w0, w0, #0xff
    5850:	mov	w1, w0
    5854:	ldr	x0, [sp, #24]
    5858:	ldrb	w0, [x0, #185]
    585c:	eor	w0, w0, #0x1
    5860:	and	w0, w0, #0xff
    5864:	and	w0, w1, w0
    5868:	cmp	w0, #0x0
    586c:	cset	w0, ne  // ne = any
    5870:	and	w0, w0, #0xff
    5874:	and	x0, x0, #0xff
    5878:	cmp	x0, #0x0
    587c:	b.eq	58a8 <XS_File__Glob_GLOB_ERROR+0x194>  // b.none
    5880:	ldr	x0, [sp, #72]
    5884:	ldr	w1, [x0, #12]
    5888:	mov	w0, #0x1100                	// #4352
    588c:	orr	w1, w1, w0
    5890:	ldr	x0, [sp, #72]
    5894:	str	w1, [x0, #12]
    5898:	ldr	x0, [sp, #72]
    589c:	ldr	x1, [sp, #80]
    58a0:	str	x1, [x0, #16]
    58a4:	b	58b8 <XS_File__Glob_GLOB_ERROR+0x1a4>
    58a8:	ldr	x2, [sp, #80]
    58ac:	ldr	x1, [sp, #72]
    58b0:	ldr	x0, [sp, #24]
    58b4:	bl	1960 <Perl_sv_setiv_mg@plt>
    58b8:	ldr	x0, [sp, #48]
    58bc:	add	x0, x0, #0x8
    58c0:	str	x0, [sp, #48]
    58c4:	ldr	x0, [sp, #48]
    58c8:	ldr	x1, [sp, #72]
    58cc:	str	x1, [x0]
    58d0:	mov	x0, #0x1                   	// #1
    58d4:	str	x0, [sp, #88]
    58d8:	ldr	x0, [sp, #24]
    58dc:	ldr	x1, [x0, #24]
    58e0:	ldrsw	x2, [sp, #36]
    58e4:	ldr	x0, [sp, #88]
    58e8:	add	x0, x2, x0
    58ec:	lsl	x0, x0, #3
    58f0:	sub	x0, x0, #0x8
    58f4:	add	x1, x1, x0
    58f8:	ldr	x0, [sp, #24]
    58fc:	str	x1, [x0]
    5900:	nop
    5904:	ldp	x29, x30, [sp], #96
    5908:	ret

000000000000590c <XS_File__Glob_bsd_glob>:
    590c:	stp	x29, x30, [sp, #-112]!
    5910:	mov	x29, sp
    5914:	str	x0, [sp, #24]
    5918:	str	x1, [sp, #16]
    591c:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    5920:	ldr	x0, [x0, #4048]
    5924:	ldr	x1, [x0]
    5928:	str	x1, [sp, #104]
    592c:	mov	x1, #0x0                   	// #0
    5930:	ldr	x0, [sp, #24]
    5934:	ldr	x0, [x0]
    5938:	str	x0, [sp, #56]
    593c:	ldr	x0, [sp, #24]
    5940:	bl	3dec <S_POPMARK>
    5944:	str	w0, [sp, #40]
    5948:	ldr	x0, [sp, #24]
    594c:	ldr	x1, [x0, #24]
    5950:	ldr	w0, [sp, #40]
    5954:	add	w2, w0, #0x1
    5958:	str	w2, [sp, #40]
    595c:	sxtw	x0, w0
    5960:	lsl	x0, x0, #3
    5964:	add	x0, x1, x0
    5968:	str	x0, [sp, #64]
    596c:	ldr	x1, [sp, #56]
    5970:	ldr	x0, [sp, #64]
    5974:	sub	x0, x1, x0
    5978:	asr	x0, x0, #3
    597c:	str	w0, [sp, #44]
    5980:	ldr	w0, [sp, #44]
    5984:	cmp	w0, #0x0
    5988:	b.gt	599c <XS_File__Glob_bsd_glob+0x90>
    598c:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    5990:	add	x1, x0, #0x4a8
    5994:	ldr	x0, [sp, #16]
    5998:	bl	1a20 <Perl_croak_xs_usage@plt>
    599c:	ldrsw	x0, [sp, #44]
    59a0:	lsl	x0, x0, #3
    59a4:	neg	x0, x0
    59a8:	ldr	x1, [sp, #56]
    59ac:	add	x0, x1, x0
    59b0:	str	x0, [sp, #56]
    59b4:	ldr	x0, [sp, #24]
    59b8:	ldr	x1, [x0, #24]
    59bc:	ldrsw	x0, [sp, #40]
    59c0:	lsl	x0, x0, #3
    59c4:	add	x0, x1, x0
    59c8:	ldr	x0, [x0]
    59cc:	str	x0, [sp, #72]
    59d0:	str	wzr, [sp, #36]
    59d4:	ldr	x0, [sp, #72]
    59d8:	ldr	w1, [x0, #12]
    59dc:	mov	w0, #0x400                 	// #1024
    59e0:	movk	w0, #0x20, lsl #16
    59e4:	and	w0, w1, w0
    59e8:	cmp	w0, #0x400
    59ec:	b.ne	5a0c <XS_File__Glob_bsd_glob+0x100>  // b.any
    59f0:	ldr	x0, [sp, #72]
    59f4:	ldr	x0, [x0]
    59f8:	ldr	x0, [x0, #16]
    59fc:	str	x0, [sp, #48]
    5a00:	ldr	x0, [sp, #72]
    5a04:	ldr	x0, [x0, #16]
    5a08:	b	5a24 <XS_File__Glob_bsd_glob+0x118>
    5a0c:	add	x0, sp, #0x30
    5a10:	mov	w3, #0x2                   	// #2
    5a14:	mov	x2, x0
    5a18:	ldr	x1, [sp, #72]
    5a1c:	ldr	x0, [sp, #24]
    5a20:	bl	19b0 <Perl_sv_2pv_flags@plt>
    5a24:	str	x0, [sp, #80]
    5a28:	ldr	x1, [sp, #48]
    5a2c:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    5a30:	add	x4, x0, #0x4b8
    5a34:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    5a38:	add	x3, x0, #0x480
    5a3c:	mov	x2, x1
    5a40:	ldr	x1, [sp, #80]
    5a44:	ldr	x0, [sp, #24]
    5a48:	bl	3eb4 <S_is_safe_syscall>
    5a4c:	and	w0, w0, #0xff
    5a50:	eor	w0, w0, #0x1
    5a54:	and	w0, w0, #0xff
    5a58:	cmp	w0, #0x0
    5a5c:	b.eq	5a90 <XS_File__Glob_bsd_glob+0x184>  // b.none
    5a60:	str	xzr, [sp, #96]
    5a64:	ldr	x0, [sp, #24]
    5a68:	ldr	x1, [x0, #24]
    5a6c:	ldrsw	x2, [sp, #40]
    5a70:	ldr	x0, [sp, #96]
    5a74:	add	x0, x2, x0
    5a78:	lsl	x0, x0, #3
    5a7c:	sub	x0, x0, #0x8
    5a80:	add	x1, x1, x0
    5a84:	ldr	x0, [sp, #24]
    5a88:	str	x1, [x0]
    5a8c:	b	5bcc <XS_File__Glob_bsd_glob+0x2c0>
    5a90:	ldr	w0, [sp, #44]
    5a94:	cmp	w0, #0x1
    5a98:	b.le	5b3c <XS_File__Glob_bsd_glob+0x230>
    5a9c:	ldr	x0, [sp, #24]
    5aa0:	ldr	x1, [x0, #24]
    5aa4:	ldrsw	x0, [sp, #40]
    5aa8:	add	x0, x0, #0x1
    5aac:	lsl	x0, x0, #3
    5ab0:	add	x0, x1, x0
    5ab4:	ldr	x0, [x0]
    5ab8:	ldr	w1, [x0, #12]
    5abc:	mov	w0, #0x100                 	// #256
    5ac0:	movk	w0, #0x20, lsl #16
    5ac4:	and	w0, w1, w0
    5ac8:	cmp	w0, #0x100
    5acc:	b.ne	5af8 <XS_File__Glob_bsd_glob+0x1ec>  // b.any
    5ad0:	ldr	x0, [sp, #24]
    5ad4:	ldr	x1, [x0, #24]
    5ad8:	ldrsw	x0, [sp, #40]
    5adc:	add	x0, x0, #0x1
    5ae0:	lsl	x0, x0, #3
    5ae4:	add	x0, x1, x0
    5ae8:	ldr	x0, [x0]
    5aec:	ldr	x0, [x0]
    5af0:	ldr	x0, [x0, #32]
    5af4:	b	5b24 <XS_File__Glob_bsd_glob+0x218>
    5af8:	ldr	x0, [sp, #24]
    5afc:	ldr	x1, [x0, #24]
    5b00:	ldrsw	x0, [sp, #40]
    5b04:	add	x0, x0, #0x1
    5b08:	lsl	x0, x0, #3
    5b0c:	add	x0, x1, x0
    5b10:	ldr	x0, [x0]
    5b14:	mov	w2, #0x2                   	// #2
    5b18:	mov	x1, x0
    5b1c:	ldr	x0, [sp, #24]
    5b20:	bl	1880 <Perl_sv_2iv_flags@plt>
    5b24:	str	w0, [sp, #36]
    5b28:	ldr	w1, [sp, #36]
    5b2c:	mov	w0, #0xfffffebc            	// #-324
    5b30:	and	w0, w1, w0
    5b34:	str	w0, [sp, #36]
    5b38:	b	5b94 <XS_File__Glob_bsd_glob+0x288>
    5b3c:	mov	w2, #0x1                   	// #1
    5b40:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    5b44:	add	x1, x0, #0x488
    5b48:	ldr	x0, [sp, #24]
    5b4c:	bl	1a70 <Perl_get_sv@plt>
    5b50:	str	x0, [sp, #88]
    5b54:	ldr	x0, [sp, #88]
    5b58:	ldr	w1, [x0, #12]
    5b5c:	mov	w0, #0x100                 	// #256
    5b60:	movk	w0, #0x20, lsl #16
    5b64:	and	w0, w1, w0
    5b68:	cmp	w0, #0x100
    5b6c:	b.ne	5b80 <XS_File__Glob_bsd_glob+0x274>  // b.any
    5b70:	ldr	x0, [sp, #88]
    5b74:	ldr	x0, [x0]
    5b78:	ldr	x0, [x0, #32]
    5b7c:	b	5b90 <XS_File__Glob_bsd_glob+0x284>
    5b80:	mov	w2, #0x2                   	// #2
    5b84:	ldr	x1, [sp, #88]
    5b88:	ldr	x0, [sp, #24]
    5b8c:	bl	1880 <Perl_sv_2iv_flags@plt>
    5b90:	str	w0, [sp, #36]
    5b94:	ldr	x0, [sp, #24]
    5b98:	ldr	x1, [sp, #56]
    5b9c:	str	x1, [x0]
    5ba0:	ldr	w2, [sp, #36]
    5ba4:	ldr	x1, [sp, #80]
    5ba8:	ldr	x0, [sp, #24]
    5bac:	bl	41c0 <doglob>
    5bb0:	ldr	x0, [sp, #24]
    5bb4:	ldr	x0, [x0]
    5bb8:	str	x0, [sp, #56]
    5bbc:	ldr	x0, [sp, #24]
    5bc0:	ldr	x1, [sp, #56]
    5bc4:	str	x1, [x0]
    5bc8:	nop
    5bcc:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    5bd0:	ldr	x0, [x0, #4048]
    5bd4:	ldr	x1, [sp, #104]
    5bd8:	ldr	x0, [x0]
    5bdc:	eor	x0, x1, x0
    5be0:	cmp	x0, #0x0
    5be4:	b.eq	5bec <XS_File__Glob_bsd_glob+0x2e0>  // b.none
    5be8:	bl	1a00 <__stack_chk_fail@plt>
    5bec:	ldp	x29, x30, [sp], #112
    5bf0:	ret

0000000000005bf4 <XS_File__Glob_csh_glob>:
    5bf4:	stp	x29, x30, [sp, #-64]!
    5bf8:	mov	x29, sp
    5bfc:	str	x0, [sp, #24]
    5c00:	str	x1, [sp, #16]
    5c04:	ldr	x0, [sp, #24]
    5c08:	ldr	x0, [x0]
    5c0c:	str	x0, [sp, #48]
    5c10:	ldr	x0, [sp, #24]
    5c14:	bl	3dec <S_POPMARK>
    5c18:	str	w0, [sp, #40]
    5c1c:	ldr	x0, [sp, #24]
    5c20:	ldr	x1, [x0, #24]
    5c24:	ldr	w0, [sp, #40]
    5c28:	add	w2, w0, #0x1
    5c2c:	str	w2, [sp, #40]
    5c30:	sxtw	x0, w0
    5c34:	lsl	x0, x0, #3
    5c38:	add	x0, x1, x0
    5c3c:	str	x0, [sp, #56]
    5c40:	ldr	x1, [sp, #48]
    5c44:	ldr	x0, [sp, #56]
    5c48:	sub	x0, x1, x0
    5c4c:	asr	x0, x0, #3
    5c50:	str	w0, [sp, #44]
    5c54:	ldrsw	x0, [sp, #44]
    5c58:	lsl	x0, x0, #3
    5c5c:	neg	x0, x0
    5c60:	ldr	x1, [sp, #48]
    5c64:	add	x0, x1, x0
    5c68:	str	x0, [sp, #48]
    5c6c:	ldr	w0, [sp, #44]
    5c70:	cmp	w0, #0x0
    5c74:	b.eq	5c88 <XS_File__Glob_csh_glob+0x94>  // b.none
    5c78:	ldr	x0, [sp, #48]
    5c7c:	add	x0, x0, #0x8
    5c80:	str	x0, [sp, #48]
    5c84:	b	5ce4 <XS_File__Glob_csh_glob+0xf0>
    5c88:	ldr	x0, [sp, #24]
    5c8c:	ldr	x1, [x0, #32]
    5c90:	ldr	x0, [sp, #48]
    5c94:	sub	x0, x1, x0
    5c98:	cmp	x0, #0x0
    5c9c:	cset	w0, le
    5ca0:	and	w0, w0, #0xff
    5ca4:	and	x0, x0, #0xff
    5ca8:	cmp	x0, #0x0
    5cac:	b.eq	5cc8 <XS_File__Glob_csh_glob+0xd4>  // b.none
    5cb0:	mov	x3, #0x1                   	// #1
    5cb4:	ldr	x2, [sp, #48]
    5cb8:	ldr	x1, [sp, #48]
    5cbc:	ldr	x0, [sp, #24]
    5cc0:	bl	18a0 <Perl_stack_grow@plt>
    5cc4:	str	x0, [sp, #48]
    5cc8:	ldr	x0, [sp, #48]
    5ccc:	add	x0, x0, #0x8
    5cd0:	str	x0, [sp, #48]
    5cd4:	ldr	x0, [sp, #24]
    5cd8:	add	x1, x0, #0x150
    5cdc:	ldr	x0, [sp, #48]
    5ce0:	str	x1, [x0]
    5ce4:	ldr	x0, [sp, #24]
    5ce8:	ldr	x1, [sp, #48]
    5cec:	str	x1, [x0]
    5cf0:	ldr	x0, [sp, #24]
    5cf4:	bl	53b0 <csh_glob_iter>
    5cf8:	ldr	x0, [sp, #24]
    5cfc:	ldr	x0, [x0]
    5d00:	str	x0, [sp, #48]
    5d04:	ldr	x0, [sp, #24]
    5d08:	ldr	x1, [sp, #48]
    5d0c:	str	x1, [x0]
    5d10:	nop
    5d14:	ldp	x29, x30, [sp], #64
    5d18:	ret

0000000000005d1c <XS_File__Glob_bsd_glob_override>:
    5d1c:	stp	x29, x30, [sp, #-64]!
    5d20:	mov	x29, sp
    5d24:	str	x0, [sp, #24]
    5d28:	str	x1, [sp, #16]
    5d2c:	ldr	x0, [sp, #24]
    5d30:	ldr	x0, [x0]
    5d34:	str	x0, [sp, #48]
    5d38:	ldr	x0, [sp, #24]
    5d3c:	bl	3dec <S_POPMARK>
    5d40:	str	w0, [sp, #40]
    5d44:	ldr	x0, [sp, #24]
    5d48:	ldr	x1, [x0, #24]
    5d4c:	ldr	w0, [sp, #40]
    5d50:	add	w2, w0, #0x1
    5d54:	str	w2, [sp, #40]
    5d58:	sxtw	x0, w0
    5d5c:	lsl	x0, x0, #3
    5d60:	add	x0, x1, x0
    5d64:	str	x0, [sp, #56]
    5d68:	ldr	x1, [sp, #48]
    5d6c:	ldr	x0, [sp, #56]
    5d70:	sub	x0, x1, x0
    5d74:	asr	x0, x0, #3
    5d78:	str	w0, [sp, #44]
    5d7c:	ldrsw	x0, [sp, #44]
    5d80:	lsl	x0, x0, #3
    5d84:	neg	x0, x0
    5d88:	ldr	x1, [sp, #48]
    5d8c:	add	x0, x1, x0
    5d90:	str	x0, [sp, #48]
    5d94:	ldr	w0, [sp, #44]
    5d98:	cmp	w0, #0x0
    5d9c:	b.eq	5db0 <XS_File__Glob_bsd_glob_override+0x94>  // b.none
    5da0:	ldr	x0, [sp, #48]
    5da4:	add	x0, x0, #0x8
    5da8:	str	x0, [sp, #48]
    5dac:	b	5e0c <XS_File__Glob_bsd_glob_override+0xf0>
    5db0:	ldr	x0, [sp, #24]
    5db4:	ldr	x1, [x0, #32]
    5db8:	ldr	x0, [sp, #48]
    5dbc:	sub	x0, x1, x0
    5dc0:	cmp	x0, #0x0
    5dc4:	cset	w0, le
    5dc8:	and	w0, w0, #0xff
    5dcc:	and	x0, x0, #0xff
    5dd0:	cmp	x0, #0x0
    5dd4:	b.eq	5df0 <XS_File__Glob_bsd_glob_override+0xd4>  // b.none
    5dd8:	mov	x3, #0x1                   	// #1
    5ddc:	ldr	x2, [sp, #48]
    5de0:	ldr	x1, [sp, #48]
    5de4:	ldr	x0, [sp, #24]
    5de8:	bl	18a0 <Perl_stack_grow@plt>
    5dec:	str	x0, [sp, #48]
    5df0:	ldr	x0, [sp, #48]
    5df4:	add	x0, x0, #0x8
    5df8:	str	x0, [sp, #48]
    5dfc:	ldr	x0, [sp, #24]
    5e00:	add	x1, x0, #0x150
    5e04:	ldr	x0, [sp, #48]
    5e08:	str	x1, [x0]
    5e0c:	ldr	x0, [sp, #24]
    5e10:	ldr	x1, [sp, #48]
    5e14:	str	x1, [x0]
    5e18:	adrp	x0, 5000 <csh_glob+0x5f4>
    5e1c:	add	x1, x0, #0x3d8
    5e20:	ldr	x0, [sp, #24]
    5e24:	bl	43e4 <iterate>
    5e28:	ldr	x0, [sp, #24]
    5e2c:	ldr	x0, [x0]
    5e30:	str	x0, [sp, #48]
    5e34:	ldr	x0, [sp, #24]
    5e38:	ldr	x1, [sp, #48]
    5e3c:	str	x1, [x0]
    5e40:	nop
    5e44:	ldp	x29, x30, [sp], #64
    5e48:	ret

0000000000005e4c <XS_File__Glob_CLONE>:
    5e4c:	stp	x29, x30, [sp, #-160]!
    5e50:	mov	x29, sp
    5e54:	str	x0, [sp, #24]
    5e58:	str	x1, [sp, #16]
    5e5c:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    5e60:	ldr	x0, [x0, #4048]
    5e64:	ldr	x1, [x0]
    5e68:	str	x1, [sp, #152]
    5e6c:	mov	x1, #0x0                   	// #0
    5e70:	ldr	x0, [sp, #24]
    5e74:	ldr	x0, [x0]
    5e78:	str	x0, [sp, #56]
    5e7c:	ldr	x0, [sp, #24]
    5e80:	bl	3dec <S_POPMARK>
    5e84:	str	w0, [sp, #40]
    5e88:	ldr	x0, [sp, #24]
    5e8c:	ldr	x1, [x0, #24]
    5e90:	ldr	w0, [sp, #40]
    5e94:	add	w2, w0, #0x1
    5e98:	str	w2, [sp, #40]
    5e9c:	sxtw	x0, w0
    5ea0:	lsl	x0, x0, #3
    5ea4:	add	x0, x1, x0
    5ea8:	str	x0, [sp, #64]
    5eac:	ldr	x1, [sp, #56]
    5eb0:	ldr	x0, [sp, #64]
    5eb4:	sub	x0, x1, x0
    5eb8:	asr	x0, x0, #3
    5ebc:	str	w0, [sp, #44]
    5ec0:	str	xzr, [sp, #48]
    5ec4:	ldr	x0, [sp, #24]
    5ec8:	ldr	x1, [x0, #3032]
    5ecc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    5ed0:	add	x0, x0, #0x208
    5ed4:	ldr	w0, [x0]
    5ed8:	sxtw	x0, w0
    5edc:	lsl	x0, x0, #3
    5ee0:	add	x0, x1, x0
    5ee4:	ldr	x0, [x0]
    5ee8:	str	x0, [sp, #72]
    5eec:	ldr	x0, [sp, #72]
    5ef0:	ldr	x0, [x0, #16]
    5ef4:	cmp	x0, #0x0
    5ef8:	b.eq	5f38 <XS_File__Glob_CLONE+0xec>  // b.none
    5efc:	str	xzr, [sp, #112]
    5f00:	str	xzr, [sp, #120]
    5f04:	ldr	x0, [sp, #72]
    5f08:	ldr	x0, [x0]
    5f0c:	str	x0, [sp, #128]
    5f10:	ldr	x0, [sp, #72]
    5f14:	ldr	x0, [x0, #16]
    5f18:	add	x1, sp, #0x70
    5f1c:	mov	x2, x1
    5f20:	mov	x1, x0
    5f24:	ldr	x0, [sp, #24]
    5f28:	bl	1980 <Perl_sv_dup_inc@plt>
    5f2c:	str	x0, [sp, #80]
    5f30:	ldr	x0, [sp, #80]
    5f34:	str	x0, [sp, #48]
    5f38:	mov	x1, #0x1f                  	// #31
    5f3c:	ldr	x0, [sp, #24]
    5f40:	bl	1940 <Perl_newSV@plt>
    5f44:	ldr	x0, [x0, #16]
    5f48:	str	x0, [sp, #88]
    5f4c:	ldr	x0, [sp, #24]
    5f50:	ldr	x1, [x0, #3032]
    5f54:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    5f58:	add	x0, x0, #0x208
    5f5c:	ldr	w0, [x0]
    5f60:	sxtw	x0, w0
    5f64:	lsl	x0, x0, #3
    5f68:	add	x0, x1, x0
    5f6c:	ldr	x0, [x0]
    5f70:	str	x0, [sp, #96]
    5f74:	ldr	x0, [sp, #24]
    5f78:	ldr	x1, [x0, #3032]
    5f7c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    5f80:	add	x0, x0, #0x208
    5f84:	ldr	w0, [x0]
    5f88:	sxtw	x0, w0
    5f8c:	lsl	x0, x0, #3
    5f90:	add	x0, x1, x0
    5f94:	ldr	x1, [sp, #88]
    5f98:	str	x1, [x0]
    5f9c:	mov	x2, #0x20                  	// #32
    5fa0:	ldr	x1, [sp, #96]
    5fa4:	ldr	x0, [sp, #88]
    5fa8:	bl	1870 <memcpy@plt>
    5fac:	ldr	x0, [sp, #88]
    5fb0:	ldr	x1, [sp, #48]
    5fb4:	str	x1, [x0, #16]
    5fb8:	ldr	x0, [sp, #88]
    5fbc:	ldr	x1, [sp, #24]
    5fc0:	str	x1, [x0]
    5fc4:	str	xzr, [sp, #104]
    5fc8:	ldr	x0, [sp, #24]
    5fcc:	ldr	x1, [x0, #24]
    5fd0:	ldrsw	x2, [sp, #40]
    5fd4:	ldr	x0, [sp, #104]
    5fd8:	add	x0, x2, x0
    5fdc:	lsl	x0, x0, #3
    5fe0:	sub	x0, x0, #0x8
    5fe4:	add	x1, x1, x0
    5fe8:	ldr	x0, [sp, #24]
    5fec:	str	x1, [x0]
    5ff0:	nop
    5ff4:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    5ff8:	ldr	x0, [x0, #4048]
    5ffc:	ldr	x1, [sp, #152]
    6000:	ldr	x0, [x0]
    6004:	eor	x0, x1, x0
    6008:	cmp	x0, #0x0
    600c:	b.eq	6014 <XS_File__Glob_CLONE+0x1c8>  // b.none
    6010:	bl	1a00 <__stack_chk_fail@plt>
    6014:	ldp	x29, x30, [sp], #160
    6018:	ret

000000000000601c <XS_File__Glob_AUTOLOAD>:
    601c:	stp	x29, x30, [sp, #-80]!
    6020:	mov	x29, sp
    6024:	str	x0, [sp, #24]
    6028:	str	x1, [sp, #16]
    602c:	ldr	x0, [sp, #24]
    6030:	ldr	x0, [x0]
    6034:	str	x0, [sp, #40]
    6038:	ldr	x0, [sp, #24]
    603c:	bl	3dec <S_POPMARK>
    6040:	str	w0, [sp, #32]
    6044:	ldr	x0, [sp, #24]
    6048:	ldr	x1, [x0, #24]
    604c:	ldr	w0, [sp, #32]
    6050:	add	w2, w0, #0x1
    6054:	str	w2, [sp, #32]
    6058:	sxtw	x0, w0
    605c:	lsl	x0, x0, #3
    6060:	add	x0, x1, x0
    6064:	str	x0, [sp, #48]
    6068:	ldr	x1, [sp, #40]
    606c:	ldr	x0, [sp, #48]
    6070:	sub	x0, x1, x0
    6074:	asr	x0, x0, #3
    6078:	str	w0, [sp, #36]
    607c:	ldr	w0, [sp, #36]
    6080:	cmp	w0, #0x0
    6084:	b.eq	6098 <XS_File__Glob_AUTOLOAD+0x7c>  // b.none
    6088:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    608c:	add	x1, x0, #0x470
    6090:	ldr	x0, [sp, #16]
    6094:	bl	1a20 <Perl_croak_xs_usage@plt>
    6098:	ldrsw	x0, [sp, #36]
    609c:	lsl	x0, x0, #3
    60a0:	neg	x0, x0
    60a4:	ldr	x1, [sp, #40]
    60a8:	add	x0, x1, x0
    60ac:	str	x0, [sp, #40]
    60b0:	ldr	x0, [sp, #16]
    60b4:	ldr	x1, [x0, #16]
    60b8:	ldr	x0, [sp, #16]
    60bc:	ldr	x0, [x0]
    60c0:	ldr	x2, [x0, #16]
    60c4:	ldr	x0, [sp, #16]
    60c8:	ldr	w0, [x0, #12]
    60cc:	and	w0, w0, #0x20000000
    60d0:	orr	w0, w0, #0x80000
    60d4:	mov	w3, w0
    60d8:	ldr	x0, [sp, #24]
    60dc:	bl	1a30 <Perl_newSVpvn_flags@plt>
    60e0:	str	x0, [sp, #56]
    60e4:	ldr	x0, [sp, #24]
    60e8:	ldr	x0, [x0, #224]
    60ec:	str	x0, [sp, #64]
    60f0:	str	xzr, [sp, #72]
    60f4:	ldr	x0, [sp, #64]
    60f8:	ldr	x1, [x0, #48]
    60fc:	ldr	x0, [sp, #64]
    6100:	ldr	w0, [x0, #36]
    6104:	mov	w0, w0
    6108:	mov	x3, x0
    610c:	mov	x2, x1
    6110:	ldr	x1, [sp, #56]
    6114:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    6118:	add	x0, x0, #0x4c8
    611c:	bl	1ba0 <Perl_newSVpvf_nocontext@plt>
    6120:	str	x0, [sp, #56]
    6124:	ldr	x1, [sp, #56]
    6128:	ldr	x0, [sp, #24]
    612c:	bl	1ac0 <Perl_sv_2mortal@plt>
    6130:	mov	x1, x0
    6134:	ldr	x0, [sp, #24]
    6138:	bl	1b00 <Perl_croak_sv@plt>

000000000000613c <boot_File__Glob>:
    613c:	stp	x29, x30, [sp, #-112]!
    6140:	mov	x29, sp
    6144:	stp	x19, x20, [sp, #16]
    6148:	str	x0, [sp, #40]
    614c:	str	x1, [sp, #32]
    6150:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    6154:	add	x4, x0, #0x500
    6158:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    615c:	add	x3, x0, #0x508
    6160:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    6164:	add	x2, x0, #0x510
    6168:	ldr	x1, [sp, #40]
    616c:	mov	w0, #0x4e7                 	// #1255
    6170:	movk	w0, #0xd30, lsl #16
    6174:	bl	1b10 <Perl_xs_handshake@plt>
    6178:	str	w0, [sp, #48]
    617c:	ldr	x0, [sp, #40]
    6180:	ldr	x1, [x0, #24]
    6184:	ldrsw	x0, [sp, #48]
    6188:	lsl	x0, x0, #3
    618c:	add	x0, x1, x0
    6190:	str	x0, [sp, #88]
    6194:	ldr	x0, [sp, #40]
    6198:	ldr	x0, [x0]
    619c:	str	x0, [sp, #96]
    61a0:	ldr	x1, [sp, #96]
    61a4:	ldr	x0, [sp, #88]
    61a8:	sub	x0, x1, x0
    61ac:	asr	x0, x0, #3
    61b0:	str	w0, [sp, #52]
    61b4:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    61b8:	add	x0, x0, #0x510
    61bc:	str	x0, [sp, #104]
    61c0:	adrp	x0, 5000 <csh_glob+0x5f4>
    61c4:	add	x2, x0, #0x714
    61c8:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    61cc:	add	x1, x0, #0x518
    61d0:	ldr	x0, [sp, #40]
    61d4:	bl	1aa0 <Perl_newXS_deffile@plt>
    61d8:	adrp	x0, 5000 <csh_glob+0x5f4>
    61dc:	add	x2, x0, #0x90c
    61e0:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    61e4:	add	x1, x0, #0x530
    61e8:	ldr	x0, [sp, #40]
    61ec:	bl	1aa0 <Perl_newXS_deffile@plt>
    61f0:	adrp	x0, 5000 <csh_glob+0x5f4>
    61f4:	add	x2, x0, #0xbf4
    61f8:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    61fc:	add	x1, x0, #0x548
    6200:	ldr	x0, [sp, #40]
    6204:	bl	1aa0 <Perl_newXS_deffile@plt>
    6208:	adrp	x0, 5000 <csh_glob+0x5f4>
    620c:	add	x2, x0, #0xd1c
    6210:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    6214:	add	x1, x0, #0x560
    6218:	ldr	x0, [sp, #40]
    621c:	bl	1aa0 <Perl_newXS_deffile@plt>
    6220:	adrp	x0, 5000 <csh_glob+0x5f4>
    6224:	add	x2, x0, #0xe4c
    6228:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    622c:	add	x1, x0, #0x580
    6230:	ldr	x0, [sp, #40]
    6234:	bl	1aa0 <Perl_newXS_deffile@plt>
    6238:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    623c:	add	x2, x0, #0x1c
    6240:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    6244:	add	x1, x0, #0x598
    6248:	ldr	x0, [sp, #40]
    624c:	bl	1aa0 <Perl_newXS_deffile@plt>
    6250:	ldr	x0, [sp, #40]
    6254:	adrp	x1, 5000 <csh_glob+0x5f4>
    6258:	add	x1, x1, #0x3b0
    625c:	str	x1, [x0, #3024]
    6260:	mov	x2, #0x20                  	// #32
    6264:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    6268:	add	x1, x0, #0x208
    626c:	ldr	x0, [sp, #40]
    6270:	bl	1920 <Perl_my_cxt_init@plt>
    6274:	str	x0, [sp, #80]
    6278:	ldr	x0, [sp, #40]
    627c:	ldr	x1, [x0, #3032]
    6280:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    6284:	add	x0, x0, #0x208
    6288:	ldr	w0, [x0]
    628c:	sxtw	x0, w0
    6290:	lsl	x0, x0, #3
    6294:	add	x0, x1, x0
    6298:	ldr	x0, [x0]
    629c:	str	x0, [sp, #72]
    62a0:	ldr	x0, [sp, #72]
    62a4:	str	xzr, [x0, #16]
    62a8:	ldr	x0, [sp, #40]
    62ac:	ldr	x1, [x0, #1512]
    62b0:	ldr	x0, [sp, #72]
    62b4:	str	x1, [x0, #24]
    62b8:	ldr	x0, [sp, #72]
    62bc:	ldr	x1, [sp, #40]
    62c0:	str	x1, [x0]
    62c4:	ldr	x0, [sp, #40]
    62c8:	adrp	x1, 5000 <csh_glob+0x5f4>
    62cc:	add	x1, x1, #0x624
    62d0:	str	x1, [x0, #1512]
    62d4:	mov	w2, #0x1                   	// #1
    62d8:	adrp	x0, 6000 <XS_File__Glob_CLONE+0x1b4>
    62dc:	add	x1, x0, #0x5b0
    62e0:	ldr	x0, [sp, #40]
    62e4:	bl	1c60 <Perl_get_hv@plt>
    62e8:	str	x0, [sp, #56]
    62ec:	adrp	x0, 17000 <__FRAME_END__+0x10204>
    62f0:	add	x0, x0, #0xc48
    62f4:	str	x0, [sp, #64]
    62f8:	b	6344 <boot_File__Glob+0x208>
    62fc:	ldr	x0, [sp, #64]
    6300:	ldr	x19, [x0]
    6304:	ldr	x0, [sp, #64]
    6308:	ldr	w20, [x0, #8]
    630c:	ldr	x0, [sp, #64]
    6310:	ldr	x0, [x0, #16]
    6314:	mov	x1, x0
    6318:	ldr	x0, [sp, #40]
    631c:	bl	1be0 <Perl_newSViv@plt>
    6320:	mov	x4, x0
    6324:	mov	w3, w20
    6328:	mov	x2, x19
    632c:	ldr	x1, [sp, #56]
    6330:	ldr	x0, [sp, #40]
    6334:	bl	3f64 <constant_add_symbol>
    6338:	ldr	x0, [sp, #64]
    633c:	add	x0, x0, #0x18
    6340:	str	x0, [sp, #64]
    6344:	ldr	x0, [sp, #64]
    6348:	ldr	x0, [x0]
    634c:	cmp	x0, #0x0
    6350:	b.ne	62fc <boot_File__Glob+0x1c0>  // b.any
    6354:	ldr	x1, [sp, #56]
    6358:	ldr	x0, [sp, #40]
    635c:	bl	1990 <Perl_mro_method_changed_in@plt>
    6360:	ldr	w1, [sp, #48]
    6364:	ldr	x0, [sp, #40]
    6368:	bl	19c0 <Perl_xs_boot_epilog@plt>
    636c:	nop
    6370:	ldp	x19, x20, [sp, #16]
    6374:	ldp	x29, x30, [sp], #112
    6378:	ret
    637c:	nop

0000000000006380 <stat64>:
    6380:	mov	x2, x1
    6384:	mov	x1, x0
    6388:	mov	w0, #0x0                   	// #0
    638c:	b	18c0 <__xstat64@plt>

0000000000006390 <lstat64>:
    6390:	mov	x2, x1
    6394:	mov	x1, x0
    6398:	mov	w0, #0x0                   	// #0
    639c:	b	1a90 <__lxstat64@plt>

Disassembly of section .fini:

00000000000063a0 <_fini>:
    63a0:	stp	x29, x30, [sp, #-16]!
    63a4:	mov	x29, sp
    63a8:	ldp	x29, x30, [sp], #16
    63ac:	ret
