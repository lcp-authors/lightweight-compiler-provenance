
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-tool_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402450 <.init>:
  402450:	stp	x29, x30, [sp, #-16]!
  402454:	mov	x29, sp
  402458:	bl	402c74 <nftw@plt+0xf4>
  40245c:	ldp	x29, x30, [sp], #16
  402460:	ret

Disassembly of section .plt:

0000000000402470 <memcpy@plt-0x20>:
  402470:	stp	x16, x30, [sp, #-16]!
  402474:	adrp	x16, 48c000 <_obstack_memory_used@@Base+0x419fc>
  402478:	ldr	x17, [x16, #4088]
  40247c:	add	x16, x16, #0xff8
  402480:	br	x17
  402484:	nop
  402488:	nop
  40248c:	nop

0000000000402490 <memcpy@plt>:
  402490:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402494:	ldr	x17, [x16]
  402498:	add	x16, x16, #0x0
  40249c:	br	x17

00000000004024a0 <memmove@plt>:
  4024a0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #8]
  4024a8:	add	x16, x16, #0x8
  4024ac:	br	x17

00000000004024b0 <ngettext@plt>:
  4024b0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #16]
  4024b8:	add	x16, x16, #0x10
  4024bc:	br	x17

00000000004024c0 <getcwd@plt>:
  4024c0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #24]
  4024c8:	add	x16, x16, #0x18
  4024cc:	br	x17

00000000004024d0 <fwrite_unlocked@plt>:
  4024d0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #32]
  4024d8:	add	x16, x16, #0x20
  4024dc:	br	x17

00000000004024e0 <strtoul@plt>:
  4024e0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #40]
  4024e8:	add	x16, x16, #0x28
  4024ec:	br	x17

00000000004024f0 <strlen@plt>:
  4024f0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #48]
  4024f8:	add	x16, x16, #0x30
  4024fc:	br	x17

0000000000402500 <fputs@plt>:
  402500:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402504:	ldr	x17, [x16, #56]
  402508:	add	x16, x16, #0x38
  40250c:	br	x17

0000000000402510 <mbstowcs@plt>:
  402510:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402514:	ldr	x17, [x16, #64]
  402518:	add	x16, x16, #0x40
  40251c:	br	x17

0000000000402520 <exit@plt>:
  402520:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402524:	ldr	x17, [x16, #72]
  402528:	add	x16, x16, #0x48
  40252c:	br	x17

0000000000402530 <sbrk@plt>:
  402530:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402534:	ldr	x17, [x16, #80]
  402538:	add	x16, x16, #0x50
  40253c:	br	x17

0000000000402540 <strnlen@plt>:
  402540:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402544:	ldr	x17, [x16, #88]
  402548:	add	x16, x16, #0x58
  40254c:	br	x17

0000000000402550 <strtod@plt>:
  402550:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402554:	ldr	x17, [x16, #96]
  402558:	add	x16, x16, #0x60
  40255c:	br	x17

0000000000402560 <iconv_close@plt>:
  402560:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402564:	ldr	x17, [x16, #104]
  402568:	add	x16, x16, #0x68
  40256c:	br	x17

0000000000402570 <setbuf@plt>:
  402570:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402574:	ldr	x17, [x16, #112]
  402578:	add	x16, x16, #0x70
  40257c:	br	x17

0000000000402580 <remove@plt>:
  402580:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402584:	ldr	x17, [x16, #120]
  402588:	add	x16, x16, #0x78
  40258c:	br	x17

0000000000402590 <readlink@plt>:
  402590:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402594:	ldr	x17, [x16, #128]
  402598:	add	x16, x16, #0x80
  40259c:	br	x17

00000000004025a0 <ftell@plt>:
  4025a0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #136]
  4025a8:	add	x16, x16, #0x88
  4025ac:	br	x17

00000000004025b0 <sprintf@plt>:
  4025b0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #144]
  4025b8:	add	x16, x16, #0x90
  4025bc:	br	x17

00000000004025c0 <opendir@plt>:
  4025c0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #152]
  4025c8:	add	x16, x16, #0x98
  4025cc:	br	x17

00000000004025d0 <__cxa_atexit@plt>:
  4025d0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #160]
  4025d8:	add	x16, x16, #0xa0
  4025dc:	br	x17

00000000004025e0 <fputc@plt>:
  4025e0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #168]
  4025e8:	add	x16, x16, #0xa8
  4025ec:	br	x17

00000000004025f0 <qsort@plt>:
  4025f0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #176]
  4025f8:	add	x16, x16, #0xb0
  4025fc:	br	x17

0000000000402600 <snprintf@plt>:
  402600:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402604:	ldr	x17, [x16, #184]
  402608:	add	x16, x16, #0xb8
  40260c:	br	x17

0000000000402610 <localtime@plt>:
  402610:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402614:	ldr	x17, [x16, #192]
  402618:	add	x16, x16, #0xc0
  40261c:	br	x17

0000000000402620 <fclose@plt>:
  402620:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402624:	ldr	x17, [x16, #200]
  402628:	add	x16, x16, #0xc8
  40262c:	br	x17

0000000000402630 <getpid@plt>:
  402630:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402634:	ldr	x17, [x16, #208]
  402638:	add	x16, x16, #0xd0
  40263c:	br	x17

0000000000402640 <nl_langinfo@plt>:
  402640:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402644:	ldr	x17, [x16, #216]
  402648:	add	x16, x16, #0xd8
  40264c:	br	x17

0000000000402650 <fopen@plt>:
  402650:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402654:	ldr	x17, [x16, #224]
  402658:	add	x16, x16, #0xe0
  40265c:	br	x17

0000000000402660 <time@plt>:
  402660:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402664:	ldr	x17, [x16, #232]
  402668:	add	x16, x16, #0xe8
  40266c:	br	x17

0000000000402670 <malloc@plt>:
  402670:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402674:	ldr	x17, [x16, #240]
  402678:	add	x16, x16, #0xf0
  40267c:	br	x17

0000000000402680 <open@plt>:
  402680:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402684:	ldr	x17, [x16, #248]
  402688:	add	x16, x16, #0xf8
  40268c:	br	x17

0000000000402690 <wcswidth@plt>:
  402690:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402694:	ldr	x17, [x16, #256]
  402698:	add	x16, x16, #0x100
  40269c:	br	x17

00000000004026a0 <strncmp@plt>:
  4026a0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #264]
  4026a8:	add	x16, x16, #0x108
  4026ac:	br	x17

00000000004026b0 <bindtextdomain@plt>:
  4026b0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #272]
  4026b8:	add	x16, x16, #0x110
  4026bc:	br	x17

00000000004026c0 <fileno_unlocked@plt>:
  4026c0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #280]
  4026c8:	add	x16, x16, #0x118
  4026cc:	br	x17

00000000004026d0 <__libc_start_main@plt>:
  4026d0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #288]
  4026d8:	add	x16, x16, #0x120
  4026dc:	br	x17

00000000004026e0 <strcat@plt>:
  4026e0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #296]
  4026e8:	add	x16, x16, #0x128
  4026ec:	br	x17

00000000004026f0 <memset@plt>:
  4026f0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #304]
  4026f8:	add	x16, x16, #0x130
  4026fc:	br	x17

0000000000402700 <fdopen@plt>:
  402700:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402704:	ldr	x17, [x16, #312]
  402708:	add	x16, x16, #0x138
  40270c:	br	x17

0000000000402710 <calloc@plt>:
  402710:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402714:	ldr	x17, [x16, #320]
  402718:	add	x16, x16, #0x140
  40271c:	br	x17

0000000000402720 <strcasecmp@plt>:
  402720:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402724:	ldr	x17, [x16, #328]
  402728:	add	x16, x16, #0x148
  40272c:	br	x17

0000000000402730 <gmtime@plt>:
  402730:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402734:	ldr	x17, [x16, #336]
  402738:	add	x16, x16, #0x150
  40273c:	br	x17

0000000000402740 <readdir@plt>:
  402740:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402744:	ldr	x17, [x16, #344]
  402748:	add	x16, x16, #0x158
  40274c:	br	x17

0000000000402750 <realloc@plt>:
  402750:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402754:	ldr	x17, [x16, #352]
  402758:	add	x16, x16, #0x160
  40275c:	br	x17

0000000000402760 <getpagesize@plt>:
  402760:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402764:	ldr	x17, [x16, #360]
  402768:	add	x16, x16, #0x168
  40276c:	br	x17

0000000000402770 <strdup@plt>:
  402770:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402774:	ldr	x17, [x16, #368]
  402778:	add	x16, x16, #0x170
  40277c:	br	x17

0000000000402780 <closedir@plt>:
  402780:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402784:	ldr	x17, [x16, #376]
  402788:	add	x16, x16, #0x178
  40278c:	br	x17

0000000000402790 <strerror@plt>:
  402790:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402794:	ldr	x17, [x16, #384]
  402798:	add	x16, x16, #0x180
  40279c:	br	x17

00000000004027a0 <close@plt>:
  4027a0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #392]
  4027a8:	add	x16, x16, #0x188
  4027ac:	br	x17

00000000004027b0 <strrchr@plt>:
  4027b0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #400]
  4027b8:	add	x16, x16, #0x190
  4027bc:	br	x17

00000000004027c0 <__gmon_start__@plt>:
  4027c0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #408]
  4027c8:	add	x16, x16, #0x198
  4027cc:	br	x17

00000000004027d0 <write@plt>:
  4027d0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #416]
  4027d8:	add	x16, x16, #0x1a0
  4027dc:	br	x17

00000000004027e0 <fseek@plt>:
  4027e0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #424]
  4027e8:	add	x16, x16, #0x1a8
  4027ec:	br	x17

00000000004027f0 <abort@plt>:
  4027f0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #432]
  4027f8:	add	x16, x16, #0x1b0
  4027fc:	br	x17

0000000000402800 <__overflow@plt>:
  402800:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402804:	ldr	x17, [x16, #440]
  402808:	add	x16, x16, #0x1b8
  40280c:	br	x17

0000000000402810 <access@plt>:
  402810:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402814:	ldr	x17, [x16, #448]
  402818:	add	x16, x16, #0x1c0
  40281c:	br	x17

0000000000402820 <feof@plt>:
  402820:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402824:	ldr	x17, [x16, #456]
  402828:	add	x16, x16, #0x1c8
  40282c:	br	x17

0000000000402830 <puts@plt>:
  402830:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402834:	ldr	x17, [x16, #464]
  402838:	add	x16, x16, #0x1d0
  40283c:	br	x17

0000000000402840 <fread_unlocked@plt>:
  402840:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402844:	ldr	x17, [x16, #472]
  402848:	add	x16, x16, #0x1d8
  40284c:	br	x17

0000000000402850 <memcmp@plt>:
  402850:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402854:	ldr	x17, [x16, #480]
  402858:	add	x16, x16, #0x1e0
  40285c:	br	x17

0000000000402860 <pthread_once@plt>:
  402860:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402864:	ldr	x17, [x16, #488]
  402868:	add	x16, x16, #0x1e8
  40286c:	br	x17

0000000000402870 <textdomain@plt>:
  402870:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402874:	ldr	x17, [x16, #496]
  402878:	add	x16, x16, #0x1f0
  40287c:	br	x17

0000000000402880 <getopt_long@plt>:
  402880:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402884:	ldr	x17, [x16, #504]
  402888:	add	x16, x16, #0x1f8
  40288c:	br	x17

0000000000402890 <strcmp@plt>:
  402890:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402894:	ldr	x17, [x16, #512]
  402898:	add	x16, x16, #0x200
  40289c:	br	x17

00000000004028a0 <iconv@plt>:
  4028a0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #520]
  4028a8:	add	x16, x16, #0x208
  4028ac:	br	x17

00000000004028b0 <mmap@plt>:
  4028b0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #528]
  4028b8:	add	x16, x16, #0x210
  4028bc:	br	x17

00000000004028c0 <strtol@plt>:
  4028c0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #536]
  4028c8:	add	x16, x16, #0x218
  4028cc:	br	x17

00000000004028d0 <fread@plt>:
  4028d0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #544]
  4028d8:	add	x16, x16, #0x220
  4028dc:	br	x17

00000000004028e0 <dl_iterate_phdr@plt>:
  4028e0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #552]
  4028e8:	add	x16, x16, #0x228
  4028ec:	br	x17

00000000004028f0 <chdir@plt>:
  4028f0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #560]
  4028f8:	add	x16, x16, #0x230
  4028fc:	br	x17

0000000000402900 <dgettext@plt>:
  402900:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402904:	ldr	x17, [x16, #568]
  402908:	add	x16, x16, #0x238
  40290c:	br	x17

0000000000402910 <free@plt>:
  402910:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402914:	ldr	x17, [x16, #576]
  402918:	add	x16, x16, #0x240
  40291c:	br	x17

0000000000402920 <ungetc@plt>:
  402920:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402924:	ldr	x17, [x16, #584]
  402928:	add	x16, x16, #0x248
  40292c:	br	x17

0000000000402930 <freopen@plt>:
  402930:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402934:	ldr	x17, [x16, #592]
  402938:	add	x16, x16, #0x250
  40293c:	br	x17

0000000000402940 <strchr@plt>:
  402940:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402944:	ldr	x17, [x16, #600]
  402948:	add	x16, x16, #0x258
  40294c:	br	x17

0000000000402950 <fwrite@plt>:
  402950:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402954:	ldr	x17, [x16, #608]
  402958:	add	x16, x16, #0x260
  40295c:	br	x17

0000000000402960 <fcntl@plt>:
  402960:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402964:	ldr	x17, [x16, #616]
  402968:	add	x16, x16, #0x268
  40296c:	br	x17

0000000000402970 <munmap@plt>:
  402970:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402974:	ldr	x17, [x16, #624]
  402978:	add	x16, x16, #0x270
  40297c:	br	x17

0000000000402980 <fflush@plt>:
  402980:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402984:	ldr	x17, [x16, #632]
  402988:	add	x16, x16, #0x278
  40298c:	br	x17

0000000000402990 <strcpy@plt>:
  402990:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402994:	ldr	x17, [x16, #640]
  402998:	add	x16, x16, #0x280
  40299c:	br	x17

00000000004029a0 <iconv_open@plt>:
  4029a0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #648]
  4029a8:	add	x16, x16, #0x288
  4029ac:	br	x17

00000000004029b0 <vsprintf@plt>:
  4029b0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #656]
  4029b8:	add	x16, x16, #0x290
  4029bc:	br	x17

00000000004029c0 <__lxstat@plt>:
  4029c0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #664]
  4029c8:	add	x16, x16, #0x298
  4029cc:	br	x17

00000000004029d0 <read@plt>:
  4029d0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #672]
  4029d8:	add	x16, x16, #0x2a0
  4029dc:	br	x17

00000000004029e0 <memchr@plt>:
  4029e0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #680]
  4029e8:	add	x16, x16, #0x2a8
  4029ec:	br	x17

00000000004029f0 <isatty@plt>:
  4029f0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #688]
  4029f8:	add	x16, x16, #0x2b0
  4029fc:	br	x17

0000000000402a00 <asctime@plt>:
  402a00:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #696]
  402a08:	add	x16, x16, #0x2b8
  402a0c:	br	x17

0000000000402a10 <__fxstat@plt>:
  402a10:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #704]
  402a18:	add	x16, x16, #0x2c0
  402a1c:	br	x17

0000000000402a20 <strstr@plt>:
  402a20:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #712]
  402a28:	add	x16, x16, #0x2c8
  402a2c:	br	x17

0000000000402a30 <realpath@plt>:
  402a30:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #720]
  402a38:	add	x16, x16, #0x2d0
  402a3c:	br	x17

0000000000402a40 <__isoc99_sscanf@plt>:
  402a40:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #728]
  402a48:	add	x16, x16, #0x2d8
  402a4c:	br	x17

0000000000402a50 <fputs_unlocked@plt>:
  402a50:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #736]
  402a58:	add	x16, x16, #0x2e0
  402a5c:	br	x17

0000000000402a60 <__fsetlocking@plt>:
  402a60:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #744]
  402a68:	add	x16, x16, #0x2e8
  402a6c:	br	x17

0000000000402a70 <strcspn@plt>:
  402a70:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #752]
  402a78:	add	x16, x16, #0x2f0
  402a7c:	br	x17

0000000000402a80 <vfprintf@plt>:
  402a80:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #760]
  402a88:	add	x16, x16, #0x2f8
  402a8c:	br	x17

0000000000402a90 <printf@plt>:
  402a90:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #768]
  402a98:	add	x16, x16, #0x300
  402a9c:	br	x17

0000000000402aa0 <__errno_location@plt>:
  402aa0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #776]
  402aa8:	add	x16, x16, #0x308
  402aac:	br	x17

0000000000402ab0 <getenv@plt>:
  402ab0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #784]
  402ab8:	add	x16, x16, #0x310
  402abc:	br	x17

0000000000402ac0 <__xstat@plt>:
  402ac0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #792]
  402ac8:	add	x16, x16, #0x318
  402acc:	br	x17

0000000000402ad0 <pthread_mutex_lock@plt>:
  402ad0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #800]
  402ad8:	add	x16, x16, #0x320
  402adc:	br	x17

0000000000402ae0 <ftw@plt>:
  402ae0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #808]
  402ae8:	add	x16, x16, #0x328
  402aec:	br	x17

0000000000402af0 <syscall@plt>:
  402af0:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #816]
  402af8:	add	x16, x16, #0x330
  402afc:	br	x17

0000000000402b00 <pthread_mutex_unlock@plt>:
  402b00:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #824]
  402b08:	add	x16, x16, #0x338
  402b0c:	br	x17

0000000000402b10 <gettext@plt>:
  402b10:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #832]
  402b18:	add	x16, x16, #0x340
  402b1c:	br	x17

0000000000402b20 <mkdir@plt>:
  402b20:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #840]
  402b28:	add	x16, x16, #0x348
  402b2c:	br	x17

0000000000402b30 <fprintf@plt>:
  402b30:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #848]
  402b38:	add	x16, x16, #0x350
  402b3c:	br	x17

0000000000402b40 <__uflow@plt>:
  402b40:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #856]
  402b48:	add	x16, x16, #0x358
  402b4c:	br	x17

0000000000402b50 <ioctl@plt>:
  402b50:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #864]
  402b58:	add	x16, x16, #0x360
  402b5c:	br	x17

0000000000402b60 <setlocale@plt>:
  402b60:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #872]
  402b68:	add	x16, x16, #0x368
  402b6c:	br	x17

0000000000402b70 <ferror@plt>:
  402b70:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #880]
  402b78:	add	x16, x16, #0x370
  402b7c:	br	x17

0000000000402b80 <nftw@plt>:
  402b80:	adrp	x16, 48d000 <memcpy@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #888]
  402b88:	add	x16, x16, #0x378
  402b8c:	br	x17

Disassembly of section .text:

0000000000402b90 <_obstack_begin@@Base-0x47848>:
  402b90:	stp	x29, x30, [sp, #-16]!
  402b94:	mov	x0, #0x8                   	// #8
  402b98:	mov	x29, sp
  402b9c:	bl	44b8f0 <_obstack_memory_used@@Base+0x12ec>
  402ba0:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x419fc>
  402ba4:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x419fc>
  402ba8:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  402bac:	ldr	x3, [x3, #4000]
  402bb0:	ldr	x2, [x2, #4032]
  402bb4:	add	x3, x3, #0x10
  402bb8:	ldr	x1, [x1, #3928]
  402bbc:	str	x3, [x0]
  402bc0:	bl	44c708 <_obstack_memory_used@@Base+0x2104>
  402bc4:	nop
  402bc8:	stp	x29, x30, [sp, #-32]!
  402bcc:	mov	x29, sp
  402bd0:	stp	x19, x20, [sp, #16]
  402bd4:	adrp	x19, 48e000 <__environ@@GLIBC_2.17+0xa68>
  402bd8:	add	x19, x19, #0xab0
  402bdc:	mov	x20, #0x1c00                	// #7168
  402be0:	movk	x20, #0x1, lsl #16
  402be4:	mov	x0, x20
  402be8:	stp	xzr, xzr, [x19]
  402bec:	stp	xzr, xzr, [x19, #16]
  402bf0:	stp	xzr, xzr, [x19, #32]
  402bf4:	str	x20, [x19, #64]
  402bf8:	bl	402670 <malloc@plt>
  402bfc:	str	x0, [x19, #56]
  402c00:	cbz	x0, 402c18 <nftw@plt+0x98>
  402c04:	stp	x20, xzr, [x0]
  402c08:	str	x0, [x19, #48]
  402c0c:	ldp	x19, x20, [sp, #16]
  402c10:	ldp	x29, x30, [sp], #32
  402c14:	ret
  402c18:	str	xzr, [x19, #48]
  402c1c:	str	xzr, [x19, #64]
  402c20:	b	402c0c <nftw@plt+0x8c>
  402c24:	mov	x29, #0x0                   	// #0
  402c28:	mov	x30, #0x0                   	// #0
  402c2c:	mov	x5, x0
  402c30:	ldr	x1, [sp]
  402c34:	add	x2, sp, #0x8
  402c38:	mov	x6, sp
  402c3c:	movz	x0, #0x0, lsl #48
  402c40:	movk	x0, #0x0, lsl #32
  402c44:	movk	x0, #0x40, lsl #16
  402c48:	movk	x0, #0x31a8
  402c4c:	movz	x3, #0x0, lsl #48
  402c50:	movk	x3, #0x0, lsl #32
  402c54:	movk	x3, #0x45, lsl #16
  402c58:	movk	x3, #0xafe0
  402c5c:	movz	x4, #0x0, lsl #48
  402c60:	movk	x4, #0x0, lsl #32
  402c64:	movk	x4, #0x45, lsl #16
  402c68:	movk	x4, #0xb060
  402c6c:	bl	4026d0 <__libc_start_main@plt>
  402c70:	bl	4027f0 <abort@plt>
  402c74:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x419fc>
  402c78:	ldr	x0, [x0, #3960]
  402c7c:	cbz	x0, 402c84 <nftw@plt+0x104>
  402c80:	b	4027c0 <__gmon_start__@plt>
  402c84:	ret
  402c88:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402c8c:	add	x0, x0, #0x570
  402c90:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402c94:	add	x1, x1, #0x570
  402c98:	cmp	x1, x0
  402c9c:	b.eq	402cb4 <nftw@plt+0x134>  // b.none
  402ca0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402ca4:	ldr	x1, [x1, #136]
  402ca8:	cbz	x1, 402cb4 <nftw@plt+0x134>
  402cac:	mov	x16, x1
  402cb0:	br	x16
  402cb4:	ret
  402cb8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402cbc:	add	x0, x0, #0x570
  402cc0:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402cc4:	add	x1, x1, #0x570
  402cc8:	sub	x1, x1, x0
  402ccc:	lsr	x2, x1, #63
  402cd0:	add	x1, x2, x1, asr #3
  402cd4:	cmp	xzr, x1, asr #1
  402cd8:	asr	x1, x1, #1
  402cdc:	b.eq	402cf4 <nftw@plt+0x174>  // b.none
  402ce0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402ce4:	ldr	x2, [x2, #144]
  402ce8:	cbz	x2, 402cf4 <nftw@plt+0x174>
  402cec:	mov	x16, x2
  402cf0:	br	x16
  402cf4:	ret
  402cf8:	stp	x29, x30, [sp, #-32]!
  402cfc:	mov	x29, sp
  402d00:	str	x19, [sp, #16]
  402d04:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402d08:	ldrb	w0, [x19, #1440]
  402d0c:	cbnz	w0, 402d1c <nftw@plt+0x19c>
  402d10:	bl	402c88 <nftw@plt+0x108>
  402d14:	mov	w0, #0x1                   	// #1
  402d18:	strb	w0, [x19, #1440]
  402d1c:	ldr	x19, [sp, #16]
  402d20:	ldp	x29, x30, [sp], #32
  402d24:	ret
  402d28:	b	402cb8 <nftw@plt+0x138>
  402d2c:	stp	x29, x30, [sp, #-32]!
  402d30:	mov	x29, sp
  402d34:	str	x19, [sp, #16]
  402d38:	cbz	w0, 402d90 <nftw@plt+0x210>
  402d3c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402d40:	ldr	x19, [x0, #1392]
  402d44:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402d48:	add	x1, x1, #0x98
  402d4c:	mov	x0, x19
  402d50:	bl	4079c4 <nftw@plt+0x4e44>
  402d54:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402d58:	add	x1, x1, #0xe0
  402d5c:	mov	x0, x19
  402d60:	bl	4079c4 <nftw@plt+0x4e44>
  402d64:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402d68:	add	x1, x1, #0x120
  402d6c:	mov	x0, x19
  402d70:	bl	4079c4 <nftw@plt+0x4e44>
  402d74:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402d78:	add	x1, x1, #0x158
  402d7c:	mov	x0, x19
  402d80:	bl	4079c4 <nftw@plt+0x4e44>
  402d84:	ldr	x19, [sp, #16]
  402d88:	ldp	x29, x30, [sp], #32
  402d8c:	ret
  402d90:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402d94:	ldr	x19, [x0, #1416]
  402d98:	b	402d44 <nftw@plt+0x1c4>
  402d9c:	stp	x29, x30, [sp, #-32]!
  402da0:	mov	x29, sp
  402da4:	str	x19, [sp, #16]
  402da8:	cbz	w0, 402e10 <nftw@plt+0x290>
  402dac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402db0:	ldr	x19, [x0, #1392]
  402db4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402db8:	add	x1, x1, #0x1a8
  402dbc:	mov	x0, x19
  402dc0:	bl	4079c4 <nftw@plt+0x4e44>
  402dc4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402dc8:	add	x1, x1, #0x1f0
  402dcc:	mov	x0, x19
  402dd0:	bl	4079c4 <nftw@plt+0x4e44>
  402dd4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402dd8:	add	x1, x1, #0xe0
  402ddc:	mov	x0, x19
  402de0:	bl	4079c4 <nftw@plt+0x4e44>
  402de4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402de8:	add	x1, x1, #0x230
  402dec:	mov	x0, x19
  402df0:	bl	4079c4 <nftw@plt+0x4e44>
  402df4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402df8:	add	x1, x1, #0x120
  402dfc:	mov	x0, x19
  402e00:	bl	4079c4 <nftw@plt+0x4e44>
  402e04:	ldr	x19, [sp, #16]
  402e08:	ldp	x29, x30, [sp], #32
  402e0c:	ret
  402e10:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402e14:	ldr	x19, [x0, #1416]
  402e18:	b	402db4 <nftw@plt+0x234>
  402e1c:	stp	x29, x30, [sp, #-32]!
  402e20:	mov	x29, sp
  402e24:	str	x19, [sp, #16]
  402e28:	cbz	w0, 402eb0 <nftw@plt+0x330>
  402e2c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402e30:	ldr	x19, [x0, #1392]
  402e34:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402e38:	add	x1, x1, #0x278
  402e3c:	mov	x0, x19
  402e40:	bl	4079c4 <nftw@plt+0x4e44>
  402e44:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402e48:	add	x1, x1, #0x2c8
  402e4c:	mov	x0, x19
  402e50:	bl	4079c4 <nftw@plt+0x4e44>
  402e54:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402e58:	add	x1, x1, #0x310
  402e5c:	mov	x0, x19
  402e60:	bl	4079c4 <nftw@plt+0x4e44>
  402e64:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402e68:	add	x1, x1, #0x350
  402e6c:	mov	x0, x19
  402e70:	bl	4079c4 <nftw@plt+0x4e44>
  402e74:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402e78:	add	x1, x1, #0x3a8
  402e7c:	mov	x0, x19
  402e80:	bl	4079c4 <nftw@plt+0x4e44>
  402e84:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402e88:	add	x1, x1, #0x3f0
  402e8c:	mov	x0, x19
  402e90:	bl	4079c4 <nftw@plt+0x4e44>
  402e94:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402e98:	add	x1, x1, #0x120
  402e9c:	mov	x0, x19
  402ea0:	bl	4079c4 <nftw@plt+0x4e44>
  402ea4:	ldr	x19, [sp, #16]
  402ea8:	ldp	x29, x30, [sp], #32
  402eac:	ret
  402eb0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402eb4:	ldr	x19, [x0, #1416]
  402eb8:	b	402e34 <nftw@plt+0x2b4>
  402ebc:	stp	x29, x30, [sp, #-16]!
  402ec0:	mov	x29, sp
  402ec4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402ec8:	add	x1, x1, #0x438
  402ecc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402ed0:	ldr	x0, [x0, #1392]
  402ed4:	bl	4079c4 <nftw@plt+0x4e44>
  402ed8:	mov	w0, #0x1                   	// #1
  402edc:	bl	402d2c <nftw@plt+0x1ac>
  402ee0:	mov	w0, #0x1                   	// #1
  402ee4:	bl	402520 <exit@plt>
  402ee8:	stp	x29, x30, [sp, #-16]!
  402eec:	mov	x29, sp
  402ef0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402ef4:	add	x1, x1, #0x450
  402ef8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402efc:	ldr	x0, [x0, #1392]
  402f00:	bl	4079c4 <nftw@plt+0x4e44>
  402f04:	mov	w0, #0x1                   	// #1
  402f08:	bl	402d9c <nftw@plt+0x21c>
  402f0c:	mov	w0, #0x1                   	// #1
  402f10:	bl	402520 <exit@plt>
  402f14:	stp	x29, x30, [sp, #-16]!
  402f18:	mov	x29, sp
  402f1c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402f20:	add	x1, x1, #0x470
  402f24:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402f28:	ldr	x0, [x0, #1392]
  402f2c:	bl	4079c4 <nftw@plt+0x4e44>
  402f30:	mov	w0, #0x1                   	// #1
  402f34:	bl	402e1c <nftw@plt+0x29c>
  402f38:	mov	w0, #0x1                   	// #1
  402f3c:	bl	402520 <exit@plt>
  402f40:	stp	x29, x30, [sp, #-48]!
  402f44:	mov	x29, sp
  402f48:	stp	x19, x20, [sp, #16]
  402f4c:	str	x21, [sp, #32]
  402f50:	mov	w19, w0
  402f54:	cbz	w0, 402fe4 <nftw@plt+0x464>
  402f58:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402f5c:	ldr	x20, [x0, #1392]
  402f60:	mov	w21, #0x1                   	// #1
  402f64:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  402f68:	ldr	x2, [x0, #1904]
  402f6c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402f70:	add	x1, x1, #0x490
  402f74:	mov	x0, x20
  402f78:	bl	4079c4 <nftw@plt+0x4e44>
  402f7c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402f80:	add	x1, x1, #0x4c0
  402f84:	mov	x0, x20
  402f88:	bl	4079c4 <nftw@plt+0x4e44>
  402f8c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402f90:	add	x1, x1, #0x4e8
  402f94:	mov	x0, x20
  402f98:	bl	4079c4 <nftw@plt+0x4e44>
  402f9c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402fa0:	add	x1, x1, #0x530
  402fa4:	mov	x0, x20
  402fa8:	bl	4079c4 <nftw@plt+0x4e44>
  402fac:	mov	w0, w19
  402fb0:	bl	402d2c <nftw@plt+0x1ac>
  402fb4:	mov	w0, w19
  402fb8:	bl	402d9c <nftw@plt+0x21c>
  402fbc:	mov	w0, w19
  402fc0:	bl	402e1c <nftw@plt+0x29c>
  402fc4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  402fc8:	add	x2, x2, #0xde0
  402fcc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  402fd0:	add	x1, x1, #0x580
  402fd4:	mov	x0, x20
  402fd8:	bl	4079c4 <nftw@plt+0x4e44>
  402fdc:	mov	w0, w21
  402fe0:	bl	402520 <exit@plt>
  402fe4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  402fe8:	ldr	x20, [x0, #1416]
  402fec:	mov	w21, w19
  402ff0:	b	402f64 <nftw@plt+0x3e4>
  402ff4:	stp	x29, x30, [sp, #-48]!
  402ff8:	mov	x29, sp
  402ffc:	stp	x19, x20, [sp, #16]
  403000:	stp	x21, x22, [sp, #32]
  403004:	mov	x20, x0
  403008:	mov	x21, x1
  40300c:	mov	w1, #0x0                   	// #0
  403010:	bl	402810 <access@plt>
  403014:	cmn	w0, #0x1
  403018:	b.eq	4030a0 <nftw@plt+0x520>  // b.none
  40301c:	mov	w3, #0x9                   	// #9
  403020:	mov	w2, #0x40                  	// #64
  403024:	adrp	x1, 403000 <nftw@plt+0x480>
  403028:	add	x1, x1, #0x13c
  40302c:	mov	x0, x20
  403030:	bl	402b80 <nftw@plt>
  403034:	mov	x1, #0x0                   	// #0
  403038:	mov	x0, #0x0                   	// #0
  40303c:	bl	4024c0 <getcwd@plt>
  403040:	mov	x19, x0
  403044:	cbz	x0, 4030dc <nftw@plt+0x55c>
  403048:	mov	x0, x20
  40304c:	bl	4028f0 <chdir@plt>
  403050:	cbnz	w0, 4030f0 <nftw@plt+0x570>
  403054:	mov	x0, x21
  403058:	bl	40688c <nftw@plt+0x3d0c>
  40305c:	mov	x22, x0
  403060:	mov	w1, #0x0                   	// #0
  403064:	bl	402810 <access@plt>
  403068:	cmn	w0, #0x1
  40306c:	b.ne	403108 <nftw@plt+0x588>  // b.any
  403070:	mov	w1, #0x0                   	// #0
  403074:	mov	x0, x21
  403078:	bl	405d98 <nftw@plt+0x3218>
  40307c:	mov	x0, x19
  403080:	bl	4028f0 <chdir@plt>
  403084:	cbnz	w0, 403124 <nftw@plt+0x5a4>
  403088:	mov	x0, x19
  40308c:	bl	402910 <free@plt>
  403090:	ldp	x19, x20, [sp, #16]
  403094:	ldp	x21, x22, [sp, #32]
  403098:	ldp	x29, x30, [sp], #48
  40309c:	ret
  4030a0:	mov	w1, #0x1ff                 	// #511
  4030a4:	mov	x0, x20
  4030a8:	bl	402b20 <mkdir@plt>
  4030ac:	cmn	w0, #0x1
  4030b0:	b.ne	403034 <nftw@plt+0x4b4>  // b.any
  4030b4:	bl	402aa0 <__errno_location@plt>
  4030b8:	ldr	w0, [x0]
  4030bc:	cmp	w0, #0x11
  4030c0:	b.eq	403034 <nftw@plt+0x4b4>  // b.none
  4030c4:	mov	x2, x20
  4030c8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4030cc:	add	x1, x1, #0x5b8
  4030d0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4030d4:	ldr	w0, [x0, #2320]
  4030d8:	bl	4096d8 <nftw@plt+0x6b58>
  4030dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4030e0:	add	x1, x1, #0x5d8
  4030e4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4030e8:	ldr	w0, [x0, #2320]
  4030ec:	bl	4096d8 <nftw@plt+0x6b58>
  4030f0:	mov	x2, x20
  4030f4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4030f8:	add	x1, x1, #0x600
  4030fc:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  403100:	ldr	w0, [x0, #2320]
  403104:	bl	4096d8 <nftw@plt+0x6b58>
  403108:	mov	x3, x20
  40310c:	mov	x2, x22
  403110:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403114:	add	x1, x1, #0x620
  403118:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40311c:	ldr	w0, [x0, #2320]
  403120:	bl	4096d8 <nftw@plt+0x6b58>
  403124:	mov	x2, x19
  403128:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40312c:	add	x1, x1, #0x600
  403130:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  403134:	ldr	w0, [x0, #2320]
  403138:	bl	4096d8 <nftw@plt+0x6b58>
  40313c:	stp	x29, x30, [sp, #-32]!
  403140:	mov	x29, sp
  403144:	str	x19, [sp, #16]
  403148:	mov	x19, x0
  40314c:	bl	4024f0 <strlen@plt>
  403150:	cmp	w0, #0x5
  403154:	b.le	403174 <nftw@plt+0x5f4>
  403158:	sub	w0, w0, #0x5
  40315c:	mov	x2, #0x5                   	// #5
  403160:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403164:	add	x1, x1, #0x650
  403168:	add	x0, x19, w0, sxtw
  40316c:	bl	4026a0 <strncmp@plt>
  403170:	cbz	w0, 403184 <nftw@plt+0x604>
  403174:	mov	w0, #0x0                   	// #0
  403178:	ldr	x19, [sp, #16]
  40317c:	ldp	x29, x30, [sp], #32
  403180:	ret
  403184:	mov	x0, x19
  403188:	bl	402580 <remove@plt>
  40318c:	cbz	w0, 403174 <nftw@plt+0x5f4>
  403190:	mov	x2, x19
  403194:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403198:	add	x1, x1, #0x658
  40319c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4031a0:	ldr	w0, [x0, #2320]
  4031a4:	bl	4096d8 <nftw@plt+0x6b58>
  4031a8:	stp	x29, x30, [sp, #-128]!
  4031ac:	mov	x29, sp
  4031b0:	stp	x19, x20, [sp, #16]
  4031b4:	str	w0, [sp, #108]
  4031b8:	str	x1, [sp, #96]
  4031bc:	ldr	x19, [x1]
  4031c0:	mov	x0, x19
  4031c4:	bl	4024f0 <strlen@plt>
  4031c8:	add	x0, x19, x0
  4031cc:	cmp	x19, x0
  4031d0:	b.eq	4031ec <nftw@plt+0x66c>  // b.none
  4031d4:	ldurb	w1, [x0, #-1]
  4031d8:	cmp	w1, #0x2f
  4031dc:	b.eq	4031ec <nftw@plt+0x66c>  // b.none
  4031e0:	sub	x0, x0, #0x1
  4031e4:	cmp	x19, x0
  4031e8:	b.ne	4031d4 <nftw@plt+0x654>  // b.any
  4031ec:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4031f0:	str	x0, [x1, #1904]
  4031f4:	bl	44a658 <_obstack_memory_used@@Base+0x54>
  4031f8:	bl	4490e8 <nftw@plt+0x46568>
  4031fc:	bl	411ec4 <nftw@plt+0xf344>
  403200:	mov	w1, #0x0                   	// #0
  403204:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403208:	ldr	x0, [x0, #920]
  40320c:	bl	40726c <nftw@plt+0x46ec>
  403210:	add	x1, sp, #0x60
  403214:	add	x0, sp, #0x6c
  403218:	bl	448cbc <nftw@plt+0x4613c>
  40321c:	mov	x4, #0x0                   	// #0
  403220:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403224:	add	x3, x3, #0x918
  403228:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40322c:	add	x2, x2, #0x690
  403230:	ldr	x1, [sp, #96]
  403234:	ldr	w0, [sp, #108]
  403238:	bl	402880 <getopt_long@plt>
  40323c:	cmn	w0, #0x1
  403240:	b.eq	4032ec <nftw@plt+0x76c>  // b.none
  403244:	stp	x21, x22, [sp, #32]
  403248:	stp	x23, x24, [sp, #48]
  40324c:	stp	x25, x26, [sp, #64]
  403250:	str	x27, [sp, #80]
  403254:	str	d8, [sp, #88]
  403258:	cmp	w0, #0x68
  40325c:	b.eq	4032dc <nftw@plt+0x75c>  // b.none
  403260:	cmp	w0, #0x76
  403264:	b.ne	4032e4 <nftw@plt+0x764>  // b.any
  403268:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40326c:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x129fc>
  403270:	add	x4, x4, #0xdd8
  403274:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  403278:	add	x3, x3, #0xdd0
  40327c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  403280:	ldr	x2, [x0, #1904]
  403284:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403288:	add	x1, x1, #0x698
  40328c:	ldr	x0, [x19, #1416]
  403290:	bl	4079c4 <nftw@plt+0x4e44>
  403294:	ldr	x20, [x19, #1416]
  403298:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40329c:	add	x0, x0, #0x6a8
  4032a0:	bl	402b10 <gettext@plt>
  4032a4:	mov	x2, x0
  4032a8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4032ac:	add	x1, x1, #0x6b0
  4032b0:	mov	x0, x20
  4032b4:	bl	4079c4 <nftw@plt+0x4e44>
  4032b8:	ldr	x19, [x19, #1416]
  4032bc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4032c0:	add	x0, x0, #0x6e8
  4032c4:	bl	402b10 <gettext@plt>
  4032c8:	mov	x1, x0
  4032cc:	mov	x0, x19
  4032d0:	bl	4079c4 <nftw@plt+0x4e44>
  4032d4:	mov	w0, #0x0                   	// #0
  4032d8:	bl	402520 <exit@plt>
  4032dc:	mov	w0, #0x0                   	// #0
  4032e0:	bl	402f40 <nftw@plt+0x3c0>
  4032e4:	mov	w0, #0x1                   	// #1
  4032e8:	bl	402f40 <nftw@plt+0x3c0>
  4032ec:	stp	x21, x22, [sp, #32]
  4032f0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4032f4:	ldr	w19, [x0, #1408]
  4032f8:	ldr	w22, [sp, #108]
  4032fc:	cmp	w22, w19
  403300:	b.le	40338c <nftw@plt+0x80c>
  403304:	stp	x23, x24, [sp, #48]
  403308:	stp	x25, x26, [sp, #64]
  40330c:	ldr	x0, [sp, #96]
  403310:	add	x20, x0, w19, sxtw #3
  403314:	ldr	x21, [x0, w19, sxtw #3]
  403318:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40331c:	add	x1, x1, #0x788
  403320:	mov	x0, x21
  403324:	bl	402890 <strcmp@plt>
  403328:	mov	w24, w0
  40332c:	cbz	w0, 4033a4 <nftw@plt+0x824>
  403330:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403334:	add	x1, x1, #0x7c8
  403338:	mov	x0, x21
  40333c:	bl	402890 <strcmp@plt>
  403340:	mov	w25, w0
  403344:	cbz	w0, 40351c <nftw@plt+0x99c>
  403348:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40334c:	add	x1, x1, #0x898
  403350:	mov	x0, x21
  403354:	bl	402890 <strcmp@plt>
  403358:	cbnz	w0, 4038ec <nftw@plt+0xd6c>
  40335c:	sub	w19, w22, w19
  403360:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403364:	str	wzr, [x0, #1408]
  403368:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40336c:	add	x23, x23, #0x918
  403370:	add	x23, x23, #0x180
  403374:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403378:	add	x24, x24, #0x8a0
  40337c:	adrp	x21, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403380:	add	x21, x21, #0x5a4
  403384:	mov	w22, #0x1                   	// #1
  403388:	b	4037e8 <nftw@plt+0xc68>
  40338c:	stp	x23, x24, [sp, #48]
  403390:	stp	x25, x26, [sp, #64]
  403394:	str	x27, [sp, #80]
  403398:	str	d8, [sp, #88]
  40339c:	mov	w0, #0x1                   	// #1
  4033a0:	bl	402f40 <nftw@plt+0x3c0>
  4033a4:	sub	w19, w22, w19
  4033a8:	mov	w0, #0x1                   	// #1
  4033ac:	str	w0, [sp, #120]
  4033b0:	str	w0, [sp, #124]
  4033b4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4033b8:	str	wzr, [x0, #1408]
  4033bc:	mov	x23, #0x0                   	// #0
  4033c0:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4033c4:	add	x21, x21, #0x918
  4033c8:	add	x21, x21, #0x60
  4033cc:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4033d0:	add	x22, x22, #0x790
  4033d4:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4033d8:	b	4033e0 <nftw@plt+0x860>
  4033dc:	bl	404630 <nftw@plt+0x1ab0>
  4033e0:	mov	x4, #0x0                   	// #0
  4033e4:	mov	x3, x21
  4033e8:	mov	x2, x22
  4033ec:	mov	x1, x20
  4033f0:	mov	w0, w19
  4033f4:	bl	402880 <getopt_long@plt>
  4033f8:	cmn	w0, #0x1
  4033fc:	b.eq	403474 <nftw@plt+0x8f4>  // b.none
  403400:	cmp	w0, #0x76
  403404:	b.eq	4033dc <nftw@plt+0x85c>  // b.none
  403408:	cmp	w0, #0x77
  40340c:	b.eq	403430 <nftw@plt+0x8b0>  // b.none
  403410:	cmp	w0, #0x6f
  403414:	b.eq	403424 <nftw@plt+0x8a4>  // b.none
  403418:	str	x27, [sp, #80]
  40341c:	str	d8, [sp, #88]
  403420:	bl	402ebc <nftw@plt+0x33c>
  403424:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403428:	ldr	x23, [x0, #1400]
  40342c:	b	4033e0 <nftw@plt+0x860>
  403430:	add	x3, sp, #0x7c
  403434:	add	x2, sp, #0x78
  403438:	add	x1, x25, #0x798
  40343c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403440:	ldr	x0, [x0, #1400]
  403444:	bl	402a40 <__isoc99_sscanf@plt>
  403448:	ldr	w0, [sp, #120]
  40344c:	tbnz	w0, #31, 403458 <nftw@plt+0x8d8>
  403450:	ldr	w1, [sp, #124]
  403454:	tbz	w1, #31, 4033e0 <nftw@plt+0x860>
  403458:	str	x27, [sp, #80]
  40345c:	str	d8, [sp, #88]
  403460:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403464:	add	x1, x1, #0x7a0
  403468:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40346c:	ldr	w0, [x0, #2320]
  403470:	bl	4096d8 <nftw@plt+0x6b58>
  403474:	cbz	x23, 4034f4 <nftw@plt+0x974>
  403478:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40347c:	ldr	w0, [x0, #1408]
  403480:	sub	w19, w19, w0
  403484:	cmp	w19, #0x2
  403488:	b.ne	403500 <nftw@plt+0x980>  // b.any
  40348c:	add	x1, x20, w0, sxtw #3
  403490:	ldr	x22, [x1, #8]
  403494:	ldr	w19, [sp, #120]
  403498:	ldr	w21, [sp, #124]
  40349c:	mov	w1, #0x0                   	// #0
  4034a0:	ldr	x0, [x20, w0, sxtw #3]
  4034a4:	bl	404640 <nftw@plt+0x1ac0>
  4034a8:	mov	x20, x0
  4034ac:	cbz	x0, 40350c <nftw@plt+0x98c>
  4034b0:	cbz	x22, 4034e0 <nftw@plt+0x960>
  4034b4:	mov	w1, #0x0                   	// #0
  4034b8:	mov	x0, x22
  4034bc:	bl	404640 <nftw@plt+0x1ac0>
  4034c0:	mov	x1, x0
  4034c4:	cbz	x0, 403514 <nftw@plt+0x994>
  4034c8:	mov	w3, w21
  4034cc:	mov	w2, w19
  4034d0:	mov	x0, x20
  4034d4:	bl	404778 <nftw@plt+0x1bf8>
  4034d8:	mov	w19, w0
  4034dc:	cbnz	w0, 4038a0 <nftw@plt+0xd20>
  4034e0:	mov	x1, x20
  4034e4:	mov	x0, x23
  4034e8:	bl	402ff4 <nftw@plt+0x474>
  4034ec:	mov	w19, w24
  4034f0:	b	4038a0 <nftw@plt+0xd20>
  4034f4:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4034f8:	add	x23, x23, #0x670
  4034fc:	b	403478 <nftw@plt+0x8f8>
  403500:	str	x27, [sp, #80]
  403504:	str	d8, [sp, #88]
  403508:	bl	402ebc <nftw@plt+0x33c>
  40350c:	mov	w19, #0x1                   	// #1
  403510:	b	4038a0 <nftw@plt+0xd20>
  403514:	mov	w19, #0x1                   	// #1
  403518:	b	4038a0 <nftw@plt+0xd20>
  40351c:	str	x27, [sp, #80]
  403520:	sub	w19, w22, w19
  403524:	str	wzr, [sp, #116]
  403528:	mov	w0, #0x1                   	// #1
  40352c:	str	w0, [sp, #120]
  403530:	str	w0, [sp, #124]
  403534:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403538:	str	wzr, [x0, #1408]
  40353c:	mov	w24, w25
  403540:	mov	x23, #0x0                   	// #0
  403544:	mov	x26, #0x0                   	// #0
  403548:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40354c:	add	x21, x21, #0x918
  403550:	add	x21, x21, #0xe0
  403554:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403558:	add	x22, x22, #0x7d0
  40355c:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403560:	add	x27, x27, #0x868
  403564:	b	403574 <nftw@plt+0x9f4>
  403568:	cmp	w0, #0x76
  40356c:	b.ne	4036ec <nftw@plt+0xb6c>  // b.any
  403570:	bl	404630 <nftw@plt+0x1ab0>
  403574:	mov	x4, #0x0                   	// #0
  403578:	mov	x3, x21
  40357c:	mov	x2, x22
  403580:	mov	x1, x20
  403584:	mov	w0, w19
  403588:	bl	402880 <getopt_long@plt>
  40358c:	cmn	w0, #0x1
  403590:	b.eq	4036f4 <nftw@plt+0xb74>  // b.none
  403594:	cmp	w0, #0x73
  403598:	b.eq	4035f4 <nftw@plt+0xa74>  // b.none
  40359c:	b.gt	403568 <nftw@plt+0x9e8>
  4035a0:	cmp	w0, #0x6e
  4035a4:	b.eq	4035bc <nftw@plt+0xa3c>  // b.none
  4035a8:	cmp	w0, #0x6f
  4035ac:	b.ne	4036ec <nftw@plt+0xb6c>  // b.any
  4035b0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4035b4:	ldr	x26, [x0, #1400]
  4035b8:	b	403574 <nftw@plt+0x9f4>
  4035bc:	cbnz	w24, 4035dc <nftw@plt+0xa5c>
  4035c0:	mov	w2, #0xa                   	// #10
  4035c4:	mov	x1, #0x0                   	// #0
  4035c8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4035cc:	ldr	x0, [x0, #1400]
  4035d0:	bl	4028c0 <strtol@plt>
  4035d4:	mov	x23, x0
  4035d8:	b	403574 <nftw@plt+0x9f4>
  4035dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4035e0:	add	x1, x1, #0x7d8
  4035e4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4035e8:	ldr	x0, [x0, #1392]
  4035ec:	bl	4079c4 <nftw@plt+0x4e44>
  4035f0:	b	403574 <nftw@plt+0x9f4>
  4035f4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4035f8:	ldr	x24, [x0, #1400]
  4035fc:	mov	w1, #0x2f                  	// #47
  403600:	mov	x0, x24
  403604:	bl	402940 <strchr@plt>
  403608:	cbz	x0, 40362c <nftw@plt+0xaac>
  40360c:	add	x3, sp, #0x7c
  403610:	add	x2, sp, #0x78
  403614:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403618:	add	x1, x1, #0x810
  40361c:	mov	x0, x24
  403620:	bl	402a40 <__isoc99_sscanf@plt>
  403624:	cmp	w0, #0x2
  403628:	b.eq	403668 <nftw@plt+0xae8>  // b.none
  40362c:	add	x2, sp, #0x74
  403630:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403634:	add	x1, x1, #0x840
  403638:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40363c:	ldr	x0, [x0, #1400]
  403640:	bl	402a40 <__isoc99_sscanf@plt>
  403644:	cmp	w0, #0x1
  403648:	b.ne	4036a0 <nftw@plt+0xb20>  // b.any
  40364c:	str	wzr, [sp, #124]
  403650:	ldr	s0, [sp, #116]
  403654:	fcmpe	s0, #0.0
  403658:	b.mi	4036b8 <nftw@plt+0xb38>  // b.first
  40365c:	cbnz	x23, 4036d0 <nftw@plt+0xb50>
  403660:	mov	w24, #0x1                   	// #1
  403664:	b	403574 <nftw@plt+0x9f4>
  403668:	ldr	w0, [sp, #120]
  40366c:	tbnz	w0, #31, 40367c <nftw@plt+0xafc>
  403670:	ldr	w0, [sp, #124]
  403674:	cmp	w0, #0x0
  403678:	b.gt	403650 <nftw@plt+0xad0>
  40367c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403680:	add	x1, x1, #0x818
  403684:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403688:	ldr	x0, [x0, #1392]
  40368c:	bl	4079c4 <nftw@plt+0x4e44>
  403690:	mov	w0, #0x1                   	// #1
  403694:	str	w0, [sp, #124]
  403698:	str	w0, [sp, #120]
  40369c:	b	403650 <nftw@plt+0xad0>
  4036a0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4036a4:	add	x1, x1, #0x818
  4036a8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4036ac:	ldr	x0, [x0, #1392]
  4036b0:	bl	4079c4 <nftw@plt+0x4e44>
  4036b4:	b	403650 <nftw@plt+0xad0>
  4036b8:	str	d8, [sp, #88]
  4036bc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4036c0:	add	x1, x1, #0x848
  4036c4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4036c8:	ldr	w0, [x0, #2320]
  4036cc:	bl	4096d8 <nftw@plt+0x6b58>
  4036d0:	mov	x1, x27
  4036d4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4036d8:	ldr	x0, [x0, #1392]
  4036dc:	bl	4079c4 <nftw@plt+0x4e44>
  4036e0:	mov	w24, #0x1                   	// #1
  4036e4:	mov	x23, #0x0                   	// #0
  4036e8:	b	403574 <nftw@plt+0x9f4>
  4036ec:	str	d8, [sp, #88]
  4036f0:	bl	402ee8 <nftw@plt+0x368>
  4036f4:	cbz	x26, 403758 <nftw@plt+0xbd8>
  4036f8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4036fc:	ldr	w0, [x0, #1408]
  403700:	sub	w19, w19, w0
  403704:	cmp	w19, #0x1
  403708:	b.ne	4037bc <nftw@plt+0xc3c>  // b.any
  40370c:	ldr	w21, [sp, #124]
  403710:	cmp	w21, #0x0
  403714:	b.le	403764 <nftw@plt+0xbe4>
  403718:	ldr	w22, [sp, #120]
  40371c:	mov	w1, #0x0                   	// #0
  403720:	ldr	x0, [x20, w0, sxtw #3]
  403724:	bl	404640 <nftw@plt+0x1ac0>
  403728:	mov	x20, x0
  40372c:	cbz	x0, 403904 <nftw@plt+0xd84>
  403730:	mov	w2, w21
  403734:	mov	w1, w22
  403738:	movi	v0.2s, #0x0
  40373c:	bl	404988 <nftw@plt+0x1e08>
  403740:	mov	x1, x20
  403744:	mov	x0, x26
  403748:	bl	402ff4 <nftw@plt+0x474>
  40374c:	mov	w19, w25
  403750:	ldr	x27, [sp, #80]
  403754:	b	4038a0 <nftw@plt+0xd20>
  403758:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40375c:	add	x26, x26, #0x680
  403760:	b	4036f8 <nftw@plt+0xb78>
  403764:	str	d8, [sp, #88]
  403768:	ldr	s8, [sp, #116]
  40376c:	mov	w1, #0x0                   	// #0
  403770:	ldr	x0, [x20, w0, sxtw #3]
  403774:	bl	404640 <nftw@plt+0x1ac0>
  403778:	mov	x20, x0
  40377c:	cbz	x0, 40390c <nftw@plt+0xd8c>
  403780:	cbz	x23, 4037a8 <nftw@plt+0xc28>
  403784:	mov	x1, x23
  403788:	bl	404abc <nftw@plt+0x1f3c>
  40378c:	mov	x1, x20
  403790:	mov	x0, x26
  403794:	bl	402ff4 <nftw@plt+0x474>
  403798:	mov	w19, w25
  40379c:	ldr	x27, [sp, #80]
  4037a0:	ldr	d8, [sp, #88]
  4037a4:	b	4038a0 <nftw@plt+0xd20>
  4037a8:	mov	w2, #0x0                   	// #0
  4037ac:	mov	w1, #0x0                   	// #0
  4037b0:	fmov	s0, s8
  4037b4:	bl	404988 <nftw@plt+0x1e08>
  4037b8:	b	40378c <nftw@plt+0xc0c>
  4037bc:	str	d8, [sp, #88]
  4037c0:	bl	402ee8 <nftw@plt+0x368>
  4037c4:	cmp	w0, #0x46
  4037c8:	b.ne	403858 <nftw@plt+0xcd8>  // b.any
  4037cc:	str	w22, [x21, #4]
  4037d0:	b	4037e8 <nftw@plt+0xc68>
  4037d4:	cmp	w0, #0x74
  4037d8:	b.eq	40383c <nftw@plt+0xcbc>  // b.none
  4037dc:	cmp	w0, #0x76
  4037e0:	b.ne	403858 <nftw@plt+0xcd8>  // b.any
  4037e4:	bl	404630 <nftw@plt+0x1ab0>
  4037e8:	mov	x4, #0x0                   	// #0
  4037ec:	mov	x3, x23
  4037f0:	mov	x2, x24
  4037f4:	mov	x1, x20
  4037f8:	mov	w0, w19
  4037fc:	bl	402880 <getopt_long@plt>
  403800:	cmn	w0, #0x1
  403804:	b.eq	403864 <nftw@plt+0xce4>  // b.none
  403808:	cmp	w0, #0x6f
  40380c:	b.eq	403834 <nftw@plt+0xcb4>  // b.none
  403810:	b.gt	4037d4 <nftw@plt+0xc54>
  403814:	cmp	w0, #0x66
  403818:	b.eq	40382c <nftw@plt+0xcac>  // b.none
  40381c:	cmp	w0, #0x68
  403820:	b.ne	4037c4 <nftw@plt+0xc44>  // b.any
  403824:	str	w22, [x21, #12]
  403828:	b	4037e8 <nftw@plt+0xc68>
  40382c:	str	w22, [x21]
  403830:	b	4037e8 <nftw@plt+0xc68>
  403834:	str	w22, [x21, #8]
  403838:	b	4037e8 <nftw@plt+0xc68>
  40383c:	mov	x1, #0x0                   	// #0
  403840:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403844:	ldr	x0, [x0, #1400]
  403848:	bl	402550 <strtod@plt>
  40384c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403850:	str	d0, [x0, #912]
  403854:	b	4037e8 <nftw@plt+0xc68>
  403858:	str	x27, [sp, #80]
  40385c:	str	d8, [sp, #88]
  403860:	bl	402f14 <nftw@plt+0x394>
  403864:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403868:	ldr	w0, [x0, #1408]
  40386c:	sub	w19, w19, w0
  403870:	cmp	w19, #0x2
  403874:	b.ne	4038e0 <nftw@plt+0xd60>  // b.any
  403878:	add	x1, x20, w0, sxtw #3
  40387c:	ldr	x21, [x1, #8]
  403880:	mov	w1, #0x0                   	// #0
  403884:	ldr	x0, [x20, w0, sxtw #3]
  403888:	bl	404640 <nftw@plt+0x1ac0>
  40388c:	mov	x19, x0
  403890:	cmp	x21, #0x0
  403894:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  403898:	b.ne	4038bc <nftw@plt+0xd3c>  // b.any
  40389c:	mov	w19, #0x1                   	// #1
  4038a0:	mov	w0, w19
  4038a4:	ldp	x21, x22, [sp, #32]
  4038a8:	ldp	x23, x24, [sp, #48]
  4038ac:	ldp	x25, x26, [sp, #64]
  4038b0:	ldp	x19, x20, [sp, #16]
  4038b4:	ldp	x29, x30, [sp], #128
  4038b8:	ret
  4038bc:	mov	w1, #0x0                   	// #0
  4038c0:	mov	x0, x21
  4038c4:	bl	404640 <nftw@plt+0x1ac0>
  4038c8:	mov	x1, x0
  4038cc:	cbz	x0, 4038fc <nftw@plt+0xd7c>
  4038d0:	mov	x0, x19
  4038d4:	bl	404ba0 <nftw@plt+0x2020>
  4038d8:	mov	w19, w0
  4038dc:	b	4038a0 <nftw@plt+0xd20>
  4038e0:	str	x27, [sp, #80]
  4038e4:	str	d8, [sp, #88]
  4038e8:	bl	402f14 <nftw@plt+0x394>
  4038ec:	str	x27, [sp, #80]
  4038f0:	str	d8, [sp, #88]
  4038f4:	mov	w0, #0x1                   	// #1
  4038f8:	bl	402f40 <nftw@plt+0x3c0>
  4038fc:	mov	w19, #0x1                   	// #1
  403900:	b	4038a0 <nftw@plt+0xd20>
  403904:	ldr	x27, [sp, #80]
  403908:	b	4038a0 <nftw@plt+0xd20>
  40390c:	ldr	x27, [sp, #80]
  403910:	ldr	d8, [sp, #88]
  403914:	b	4038a0 <nftw@plt+0xd20>
  403918:	cbz	w1, 40397c <nftw@plt+0xdfc>
  40391c:	stp	x29, x30, [sp, #-64]!
  403920:	mov	x29, sp
  403924:	stp	x19, x20, [sp, #16]
  403928:	stp	x21, x22, [sp, #32]
  40392c:	str	x23, [sp, #48]
  403930:	mov	x19, x0
  403934:	mov	x21, x2
  403938:	mov	x22, x3
  40393c:	mov	x23, x4
  403940:	sub	w20, w1, #0x1
  403944:	add	x20, x20, #0x1
  403948:	add	x20, x0, x20, lsl #3
  40394c:	mov	x2, x23
  403950:	mov	x1, x22
  403954:	ldr	x0, [x19]
  403958:	blr	x21
  40395c:	str	x0, [x19], #8
  403960:	cmp	x19, x20
  403964:	b.ne	40394c <nftw@plt+0xdcc>  // b.any
  403968:	ldp	x19, x20, [sp, #16]
  40396c:	ldp	x21, x22, [sp, #32]
  403970:	ldr	x23, [sp, #48]
  403974:	ldp	x29, x30, [sp], #64
  403978:	ret
  40397c:	ret
  403980:	ret
  403984:	ret
  403988:	scvtf	s0, x0
  40398c:	ldr	s1, [x1]
  403990:	fmul	s0, s0, s1
  403994:	fcvtzs	x0, s0
  403998:	ret
  40399c:	ldr	w3, [x2]
  4039a0:	add	w2, w3, w3, lsr #31
  4039a4:	asr	w2, w2, #1
  4039a8:	add	x2, x0, w2, sxtw
  4039ac:	sxtw	x3, w3
  4039b0:	sdiv	x2, x2, x3
  4039b4:	ldrsw	x0, [x1]
  4039b8:	mul	x0, x2, x0
  4039bc:	ret
  4039c0:	ldr	w7, [x0, #104]
  4039c4:	cbz	w7, 403a28 <nftw@plt+0xea8>
  4039c8:	ldr	x8, [x0, #112]
  4039cc:	mov	x3, #0x0                   	// #0
  4039d0:	b	4039e0 <nftw@plt+0xe60>
  4039d4:	add	x3, x3, #0x1
  4039d8:	cmp	w7, w3
  4039dc:	b.ls	403a20 <nftw@plt+0xea0>  // b.plast
  4039e0:	ldr	x2, [x8, x3, lsl #3]
  4039e4:	cbz	x2, 4039d4 <nftw@plt+0xe54>
  4039e8:	ldr	x4, [x2]
  4039ec:	cmp	x4, x0
  4039f0:	b.ne	4039d4 <nftw@plt+0xe54>  // b.any
  4039f4:	ldr	w5, [x2, #24]
  4039f8:	cbz	w5, 4039d4 <nftw@plt+0xe54>
  4039fc:	ldr	x6, [x2, #32]
  403a00:	mov	x2, #0x0                   	// #0
  403a04:	ldr	x4, [x6, x2, lsl #3]
  403a08:	cmp	x4, x1
  403a0c:	b.gt	403a30 <nftw@plt+0xeb0>
  403a10:	add	x2, x2, #0x1
  403a14:	cmp	w5, w2
  403a18:	b.hi	403a04 <nftw@plt+0xe84>  // b.pmore
  403a1c:	b	4039d4 <nftw@plt+0xe54>
  403a20:	mov	w0, #0x1                   	// #1
  403a24:	b	403a34 <nftw@plt+0xeb4>
  403a28:	mov	w0, #0x1                   	// #1
  403a2c:	b	403a34 <nftw@plt+0xeb4>
  403a30:	mov	w0, #0x0                   	// #0
  403a34:	ret
  403a38:	stp	x29, x30, [sp, #-16]!
  403a3c:	mov	x29, sp
  403a40:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403a44:	add	x2, x2, #0xb78
  403a48:	mov	w1, #0xc5                  	// #197
  403a4c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403a50:	add	x0, x0, #0xb88
  403a54:	bl	408d8c <nftw@plt+0x620c>
  403a58:	stp	x29, x30, [sp, #-16]!
  403a5c:	mov	x29, sp
  403a60:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403a64:	add	x2, x2, #0xbb0
  403a68:	mov	w1, #0xbc                  	// #188
  403a6c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403a70:	add	x0, x0, #0xb88
  403a74:	bl	408d8c <nftw@plt+0x620c>
  403a78:	stp	x29, x30, [sp, #-16]!
  403a7c:	mov	x29, sp
  403a80:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403a84:	add	x2, x2, #0xbc0
  403a88:	mov	w1, #0xb3                  	// #179
  403a8c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403a90:	add	x0, x0, #0xb88
  403a94:	bl	408d8c <nftw@plt+0x620c>
  403a98:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403a9c:	add	x2, x2, #0x5b8
  403aa0:	add	x1, x2, #0x28
  403aa4:	add	x6, x2, #0xb8
  403aa8:	mov	w3, #0x0                   	// #0
  403aac:	b	403ac0 <nftw@plt+0xf40>
  403ab0:	add	x2, x2, #0x4
  403ab4:	add	x1, x1, #0x10
  403ab8:	cmp	x1, x6
  403abc:	b.eq	403ae4 <nftw@plt+0xf64>  // b.none
  403ac0:	ldr	w4, [x2]
  403ac4:	cbz	w4, 403ab0 <nftw@plt+0xf30>
  403ac8:	ldr	w5, [x1]
  403acc:	add	x4, x0, w3, sxtw #4
  403ad0:	str	w5, [x4, #24]
  403ad4:	ldr	x5, [x1, #8]
  403ad8:	str	x5, [x4, #32]
  403adc:	add	w3, w3, #0x1
  403ae0:	b	403ab0 <nftw@plt+0xf30>
  403ae4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403ae8:	ldr	w0, [x0, #1648]
  403aec:	cbnz	w0, 403afc <nftw@plt+0xf7c>
  403af0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403af4:	str	w3, [x0, #1648]
  403af8:	ret
  403afc:	cmp	w0, w3
  403b00:	b.ne	403b08 <nftw@plt+0xf88>  // b.any
  403b04:	ret
  403b08:	stp	x29, x30, [sp, #-16]!
  403b0c:	mov	x29, sp
  403b10:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403b14:	add	x2, x2, #0xbd0
  403b18:	mov	w1, #0x6f                  	// #111
  403b1c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403b20:	add	x0, x0, #0xb88
  403b24:	bl	408d8c <nftw@plt+0x620c>
  403b28:	stp	x29, x30, [sp, #-112]!
  403b2c:	mov	x29, sp
  403b30:	stp	x21, x22, [sp, #32]
  403b34:	stp	x23, x24, [sp, #48]
  403b38:	mov	x22, x0
  403b3c:	mov	x24, x1
  403b40:	ldr	w0, [x0, #104]
  403b44:	ldr	w1, [x1, #104]
  403b48:	cmp	w1, w0
  403b4c:	b.ne	403b90 <nftw@plt+0x1010>  // b.any
  403b50:	stp	x27, x28, [sp, #80]
  403b54:	mov	w27, w2
  403b58:	cbz	w0, 403cd4 <nftw@plt+0x1154>
  403b5c:	stp	x19, x20, [sp, #16]
  403b60:	stp	x25, x26, [sp, #64]
  403b64:	sub	w26, w0, #0x1
  403b68:	add	x26, x26, #0x1
  403b6c:	lsl	x26, x26, #3
  403b70:	mov	x19, #0x0                   	// #0
  403b74:	mov	w28, #0x0                   	// #0
  403b78:	adrp	x25, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403b7c:	add	x25, x25, #0x5b8
  403b80:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403b84:	add	x0, x0, #0xbf0
  403b88:	str	x0, [sp, #104]
  403b8c:	b	403c58 <nftw@plt+0x10d8>
  403b90:	stp	x19, x20, [sp, #16]
  403b94:	stp	x25, x26, [sp, #64]
  403b98:	stp	x27, x28, [sp, #80]
  403b9c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403ba0:	add	x2, x2, #0xbe0
  403ba4:	mov	w1, #0x220                 	// #544
  403ba8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403bac:	add	x0, x0, #0xb88
  403bb0:	bl	408d8c <nftw@plt+0x620c>
  403bb4:	add	x20, x20, #0x18
  403bb8:	add	x21, x21, #0x18
  403bbc:	mov	x23, #0x20                  	// #32
  403bc0:	b	403c00 <nftw@plt+0x1080>
  403bc4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403bc8:	add	x2, x2, #0xbe0
  403bcc:	mov	w1, #0x23b                 	// #571
  403bd0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403bd4:	add	x0, x0, #0xb88
  403bd8:	bl	408d8c <nftw@plt+0x620c>
  403bdc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403be0:	add	x2, x2, #0xbe0
  403be4:	mov	w1, #0x23e                 	// #574
  403be8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403bec:	add	x0, x0, #0xb88
  403bf0:	bl	408d8c <nftw@plt+0x620c>
  403bf4:	add	x23, x23, #0x8
  403bf8:	cmp	x23, #0x68
  403bfc:	b.eq	403c4c <nftw@plt+0x10cc>  // b.none
  403c00:	ldr	x2, [x22, x23]
  403c04:	ldr	x0, [x24, x23]
  403c08:	cmp	x2, x0
  403c0c:	b.ne	403bc4 <nftw@plt+0x1044>  // b.any
  403c10:	cbz	x2, 403bf4 <nftw@plt+0x1074>
  403c14:	ldr	w1, [x20]
  403c18:	ldr	w0, [x21]
  403c1c:	cmp	w1, w0
  403c20:	b.ne	403bdc <nftw@plt+0x105c>  // b.any
  403c24:	ldr	x0, [x21, #8]
  403c28:	str	x0, [x25, #192]
  403c2c:	str	wzr, [x25, #200]
  403c30:	str	w1, [x25, #204]
  403c34:	str	w27, [x25, #208]
  403c38:	ldr	x0, [x20, #8]
  403c3c:	blr	x2
  403c40:	add	x20, x20, #0x10
  403c44:	add	x21, x21, #0x10
  403c48:	b	403bf4 <nftw@plt+0x1074>
  403c4c:	add	x19, x19, #0x8
  403c50:	cmp	x19, x26
  403c54:	b.eq	403cb4 <nftw@plt+0x1134>  // b.none
  403c58:	ldr	x0, [x22, #112]
  403c5c:	ldr	x20, [x0, x19]
  403c60:	ldr	x0, [x24, #112]
  403c64:	ldr	x21, [x0, x19]
  403c68:	cbz	x20, 403c4c <nftw@plt+0x10cc>
  403c6c:	ldr	x0, [x20]
  403c70:	cmp	x21, #0x0
  403c74:	ccmp	x0, x22, #0x0, ne  // ne = any
  403c78:	b.ne	403c4c <nftw@plt+0x10cc>  // b.any
  403c7c:	ldr	x0, [x21]
  403c80:	cmp	x0, x24
  403c84:	b.ne	403c4c <nftw@plt+0x10cc>  // b.any
  403c88:	ldr	w1, [x20, #16]
  403c8c:	ldr	w0, [x21, #16]
  403c90:	cmp	w1, w0
  403c94:	b.eq	403bb4 <nftw@plt+0x1034>  // b.none
  403c98:	ldr	x2, [x22, #24]
  403c9c:	ldr	x1, [sp, #104]
  403ca0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403ca4:	ldr	x0, [x0, #1392]
  403ca8:	bl	4079c4 <nftw@plt+0x4e44>
  403cac:	mov	w28, #0x1                   	// #1
  403cb0:	b	403c4c <nftw@plt+0x10cc>
  403cb4:	ldp	x19, x20, [sp, #16]
  403cb8:	ldp	x25, x26, [sp, #64]
  403cbc:	mov	w0, w28
  403cc0:	ldp	x27, x28, [sp, #80]
  403cc4:	ldp	x21, x22, [sp, #32]
  403cc8:	ldp	x23, x24, [sp, #48]
  403ccc:	ldp	x29, x30, [sp], #112
  403cd0:	ret
  403cd4:	mov	w28, #0x0                   	// #0
  403cd8:	b	403cbc <nftw@plt+0x113c>
  403cdc:	stp	x29, x30, [sp, #-96]!
  403ce0:	mov	x29, sp
  403ce4:	stp	x25, x26, [sp, #64]
  403ce8:	mov	x26, x0
  403cec:	mov	w0, #0x8e39                	// #36409
  403cf0:	movk	w0, #0x38e3, lsl #16
  403cf4:	umull	x0, w1, w0
  403cf8:	lsr	x0, x0, #33
  403cfc:	add	w0, w0, w0, lsl #3
  403d00:	cmp	w1, w0
  403d04:	b.ne	403d38 <nftw@plt+0x11b8>  // b.any
  403d08:	stp	x21, x22, [sp, #32]
  403d0c:	stp	x23, x24, [sp, #48]
  403d10:	mov	w25, w1
  403d14:	mov	x22, x2
  403d18:	mov	x23, x3
  403d1c:	mov	x24, x4
  403d20:	cbz	w1, 403dac <nftw@plt+0x122c>
  403d24:	stp	x19, x20, [sp, #16]
  403d28:	str	x27, [sp, #80]
  403d2c:	mov	w21, #0x1                   	// #1
  403d30:	add	x27, x26, #0x40
  403d34:	b	403d74 <nftw@plt+0x11f4>
  403d38:	stp	x19, x20, [sp, #16]
  403d3c:	stp	x21, x22, [sp, #32]
  403d40:	stp	x23, x24, [sp, #48]
  403d44:	str	x27, [sp, #80]
  403d48:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403d4c:	add	x2, x2, #0xc18
  403d50:	mov	w1, #0x2ef                 	// #751
  403d54:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403d58:	add	x0, x0, #0xb88
  403d5c:	bl	408d8c <nftw@plt+0x620c>
  403d60:	add	w0, w21, #0x9
  403d64:	add	w21, w21, #0x8
  403d68:	cmp	w25, w21
  403d6c:	b.ls	403da4 <nftw@plt+0x1224>  // b.plast
  403d70:	mov	w21, w0
  403d74:	ubfiz	x20, x21, #3, #32
  403d78:	add	x19, x26, x20
  403d7c:	add	x20, x27, x20
  403d80:	mov	x2, x24
  403d84:	mov	x1, x23
  403d88:	ldr	x0, [x19, #8]
  403d8c:	blr	x22
  403d90:	str	x0, [x19, #8]
  403d94:	add	x19, x19, #0x10
  403d98:	cmp	x19, x20
  403d9c:	b.ne	403d80 <nftw@plt+0x1200>  // b.any
  403da0:	b	403d60 <nftw@plt+0x11e0>
  403da4:	ldp	x19, x20, [sp, #16]
  403da8:	ldr	x27, [sp, #80]
  403dac:	ldp	x21, x22, [sp, #32]
  403db0:	ldp	x23, x24, [sp, #48]
  403db4:	ldp	x25, x26, [sp, #64]
  403db8:	ldp	x29, x30, [sp], #96
  403dbc:	ret
  403dc0:	stp	x29, x30, [sp, #-64]!
  403dc4:	mov	x29, sp
  403dc8:	stp	x19, x20, [sp, #16]
  403dcc:	stp	x21, x22, [sp, #32]
  403dd0:	stp	x23, x24, [sp, #48]
  403dd4:	mov	w20, #0xaaab                	// #43691
  403dd8:	movk	w20, #0xaaaa, lsl #16
  403ddc:	umull	x20, w1, w20
  403de0:	lsr	x20, x20, #33
  403de4:	add	w20, w20, w20, lsl #1
  403de8:	subs	w20, w1, w20
  403dec:	b.ne	403e64 <nftw@plt+0x12e4>  // b.any
  403df0:	mov	x19, x0
  403df4:	mov	x21, x2
  403df8:	mov	x22, x3
  403dfc:	mov	x23, x4
  403e00:	mov	w24, #0xaaab                	// #43691
  403e04:	movk	w24, #0xaaaa, lsl #16
  403e08:	umull	x24, w1, w24
  403e0c:	lsr	x24, x24, #33
  403e10:	cmp	w1, #0x2
  403e14:	b.ls	403e50 <nftw@plt+0x12d0>  // b.plast
  403e18:	mov	x2, x23
  403e1c:	mov	x1, x22
  403e20:	ldr	x0, [x19, #8]
  403e24:	blr	x21
  403e28:	str	x0, [x19, #8]
  403e2c:	mov	x2, x23
  403e30:	mov	x1, x22
  403e34:	ldr	x0, [x19, #16]
  403e38:	blr	x21
  403e3c:	str	x0, [x19, #16]
  403e40:	add	w20, w20, #0x1
  403e44:	add	x19, x19, #0x18
  403e48:	cmp	w24, w20
  403e4c:	b.hi	403e18 <nftw@plt+0x1298>  // b.pmore
  403e50:	ldp	x19, x20, [sp, #16]
  403e54:	ldp	x21, x22, [sp, #32]
  403e58:	ldp	x23, x24, [sp, #48]
  403e5c:	ldp	x29, x30, [sp], #64
  403e60:	ret
  403e64:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403e68:	add	x2, x2, #0xc38
  403e6c:	mov	w1, #0x2de                 	// #734
  403e70:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403e74:	add	x0, x0, #0xb88
  403e78:	bl	408d8c <nftw@plt+0x620c>
  403e7c:	stp	x29, x30, [sp, #-16]!
  403e80:	mov	x29, sp
  403e84:	mov	x1, #0x1                   	// #1
  403e88:	mov	x0, #0x10                  	// #16
  403e8c:	bl	402710 <calloc@plt>
  403e90:	bl	405c04 <nftw@plt+0x3084>
  403e94:	ldp	x29, x30, [sp], #16
  403e98:	ret
  403e9c:	stp	x29, x30, [sp, #-32]!
  403ea0:	mov	x29, sp
  403ea4:	stp	x19, x20, [sp, #16]
  403ea8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403eac:	ldr	w0, [x0, #1676]
  403eb0:	cbnz	w0, 403f38 <nftw@plt+0x13b8>
  403eb4:	mov	x1, #0x1                   	// #1
  403eb8:	mov	x0, #0xb8                  	// #184
  403ebc:	bl	402710 <calloc@plt>
  403ec0:	mov	x20, x0
  403ec4:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403ec8:	add	x2, x2, #0x5b8
  403ecc:	str	x0, [x2, #216]
  403ed0:	add	x1, x2, #0x28
  403ed4:	add	x2, x2, #0xb8
  403ed8:	str	wzr, [x1], #16
  403edc:	cmp	x1, x2
  403ee0:	b.ne	403ed8 <nftw@plt+0x1358>  // b.any
  403ee4:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403ee8:	add	x19, x19, #0x5b8
  403eec:	str	wzr, [x19, #184]
  403ef0:	ldr	x0, [x19, #312]
  403ef4:	str	x0, [x20]
  403ef8:	bl	405a94 <nftw@plt+0x2f14>
  403efc:	str	w0, [x20, #8]
  403f00:	ldr	x20, [x19, #216]
  403f04:	bl	405a94 <nftw@plt+0x2f14>
  403f08:	str	w0, [x20, #12]
  403f0c:	ldr	x20, [x19, #216]
  403f10:	bl	405a94 <nftw@plt+0x2f14>
  403f14:	str	w0, [x20, #16]
  403f18:	ldr	w0, [x19, #212]
  403f1c:	add	w0, w0, #0x1
  403f20:	str	w0, [x19, #212]
  403f24:	ldr	w0, [x19, #320]
  403f28:	cbnz	w0, 403f98 <nftw@plt+0x1418>
  403f2c:	ldp	x19, x20, [sp, #16]
  403f30:	ldp	x29, x30, [sp], #32
  403f34:	ret
  403f38:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403f3c:	add	x19, x19, #0x5b8
  403f40:	ldr	x0, [x19, #216]
  403f44:	bl	403a98 <nftw@plt+0xf18>
  403f48:	ldr	x0, [x19, #256]
  403f4c:	ldr	x1, [x19, #248]
  403f50:	add	x19, x19, #0xe0
  403f54:	sub	x0, x0, x1
  403f58:	cmp	x0, #0x7
  403f5c:	b.ls	403f88 <nftw@plt+0x1408>  // b.plast
  403f60:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403f64:	add	x0, x0, #0x5b8
  403f68:	add	x1, x0, #0xe0
  403f6c:	ldr	x2, [x0, #248]
  403f70:	ldr	x0, [x0, #216]
  403f74:	str	x0, [x2]
  403f78:	ldr	x0, [x1, #24]
  403f7c:	add	x0, x0, #0x8
  403f80:	str	x0, [x1, #24]
  403f84:	b	403eb4 <nftw@plt+0x1334>
  403f88:	mov	x1, #0x8                   	// #8
  403f8c:	mov	x0, x19
  403f90:	bl	44a42c <_obstack_newchunk@@Base>
  403f94:	b	403f60 <nftw@plt+0x13e0>
  403f98:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403f9c:	ldr	x0, [x0, #1680]
  403fa0:	ldr	w2, [x0, #8]
  403fa4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403fa8:	add	x1, x1, #0xc58
  403fac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  403fb0:	ldr	x0, [x0, #1416]
  403fb4:	bl	4079c4 <nftw@plt+0x4e44>
  403fb8:	b	403f2c <nftw@plt+0x13ac>
  403fbc:	cbnz	w2, 4044e4 <nftw@plt+0x1964>
  403fc0:	stp	x29, x30, [sp, #-128]!
  403fc4:	mov	x29, sp
  403fc8:	stp	x21, x22, [sp, #32]
  403fcc:	mov	x22, x0
  403fd0:	bl	4024f0 <strlen@plt>
  403fd4:	cmp	w0, #0x5
  403fd8:	b.le	4044d4 <nftw@plt+0x1954>
  403fdc:	sxtw	x0, w0
  403fe0:	sub	x0, x0, #0x5
  403fe4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  403fe8:	add	x1, x1, #0x650
  403fec:	add	x0, x22, x0
  403ff0:	bl	402890 <strcmp@plt>
  403ff4:	cbnz	w0, 4044d4 <nftw@plt+0x1954>
  403ff8:	stp	x19, x20, [sp, #16]
  403ffc:	stp	x23, x24, [sp, #48]
  404000:	stp	x25, x26, [sp, #64]
  404004:	stp	x27, x28, [sp, #80]
  404008:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40400c:	ldr	w0, [x0, #1784]
  404010:	cbnz	w0, 404110 <nftw@plt+0x1590>
  404014:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404018:	add	x0, x0, #0x5b8
  40401c:	add	x1, x0, #0x24
  404020:	str	wzr, [x0], #4
  404024:	cmp	x0, x1
  404028:	b.ne	404020 <nftw@plt+0x14a0>  // b.any
  40402c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404030:	str	wzr, [x0, #1648]
  404034:	mov	x0, x22
  404038:	bl	405874 <nftw@plt+0x2cf4>
  40403c:	cbz	w0, 40412c <nftw@plt+0x15ac>
  404040:	bl	405a94 <nftw@plt+0x2f14>
  404044:	mov	w1, #0x6461                	// #25697
  404048:	movk	w1, #0x6763, lsl #16
  40404c:	cmp	w0, w1
  404050:	b.ne	404158 <nftw@plt+0x15d8>  // b.any
  404054:	bl	405a94 <nftw@plt+0x2f14>
  404058:	mov	w3, w0
  40405c:	mov	w0, #0x322a                	// #12842
  404060:	movk	w0, #0x4139, lsl #16
  404064:	cmp	w3, w0
  404068:	b.ne	404188 <nftw@plt+0x1608>  // b.any
  40406c:	mov	x1, #0x1                   	// #1
  404070:	mov	x0, #0x108                 	// #264
  404074:	bl	402710 <calloc@plt>
  404078:	mov	x27, x0
  40407c:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404080:	add	x19, x19, #0x5b8
  404084:	str	x0, [x19, #312]
  404088:	mov	w0, #0x322a                	// #12842
  40408c:	movk	w0, #0x4139, lsl #16
  404090:	str	w0, [x27]
  404094:	adrp	x4, 416000 <nftw@plt+0x13480>
  404098:	add	x4, x4, #0xe54
  40409c:	adrp	x3, 416000 <nftw@plt+0x13480>
  4040a0:	add	x3, x3, #0xe10
  4040a4:	mov	x2, #0x0                   	// #0
  4040a8:	mov	x1, #0x0                   	// #0
  4040ac:	add	x0, x19, #0xe0
  4040b0:	bl	44a3d8 <_obstack_begin@@Base>
  4040b4:	str	wzr, [x19, #212]
  4040b8:	str	xzr, [x19, #216]
  4040bc:	mov	x0, x22
  4040c0:	bl	4024f0 <strlen@plt>
  4040c4:	add	x19, x0, #0x1
  4040c8:	mov	x0, x19
  4040cc:	bl	402670 <malloc@plt>
  4040d0:	mov	x20, x0
  4040d4:	mov	x2, x19
  4040d8:	mov	x1, x22
  4040dc:	bl	402490 <memcpy@plt>
  4040e0:	str	x20, [x27, #24]
  4040e4:	bl	405a94 <nftw@plt+0x2f14>
  4040e8:	str	w0, [x27, #16]
  4040ec:	mov	w26, #0x0                   	// #0
  4040f0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4040f4:	add	x0, x0, #0xd18
  4040f8:	str	x0, [sp, #104]
  4040fc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  404100:	add	x0, x0, #0xd0
  404104:	str	x0, [sp, #96]
  404108:	add	x28, sp, #0x70
  40410c:	b	4042a4 <nftw@plt+0x1724>
  404110:	mov	x2, x22
  404114:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404118:	add	x1, x1, #0xca8
  40411c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404120:	ldr	x0, [x0, #1392]
  404124:	bl	4079c4 <nftw@plt+0x4e44>
  404128:	b	404014 <nftw@plt+0x1494>
  40412c:	mov	x2, x22
  404130:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404134:	add	x1, x1, #0xcc0
  404138:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40413c:	ldr	x0, [x0, #1392]
  404140:	bl	4079c4 <nftw@plt+0x4e44>
  404144:	ldp	x19, x20, [sp, #16]
  404148:	ldp	x23, x24, [sp, #48]
  40414c:	ldp	x25, x26, [sp, #64]
  404150:	ldp	x27, x28, [sp, #80]
  404154:	b	4044d4 <nftw@plt+0x1954>
  404158:	mov	x2, x22
  40415c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404160:	add	x1, x1, #0xcd0
  404164:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404168:	ldr	x0, [x0, #1392]
  40416c:	bl	4079c4 <nftw@plt+0x4e44>
  404170:	bl	405958 <nftw@plt+0x2dd8>
  404174:	ldp	x19, x20, [sp, #16]
  404178:	ldp	x23, x24, [sp, #48]
  40417c:	ldp	x25, x26, [sp, #64]
  404180:	ldp	x27, x28, [sp, #80]
  404184:	b	4044d4 <nftw@plt+0x1954>
  404188:	mov	w4, #0x322a                	// #12842
  40418c:	movk	w4, #0x4139, lsl #16
  404190:	mov	x2, x22
  404194:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404198:	add	x1, x1, #0xcf0
  40419c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4041a0:	ldr	x0, [x0, #1392]
  4041a4:	bl	4079c4 <nftw@plt+0x4e44>
  4041a8:	bl	405958 <nftw@plt+0x2dd8>
  4041ac:	ldp	x19, x20, [sp, #16]
  4041b0:	ldp	x23, x24, [sp, #48]
  4041b4:	ldp	x25, x26, [sp, #64]
  4041b8:	ldp	x27, x28, [sp, #80]
  4041bc:	b	4044d4 <nftw@plt+0x1954>
  4041c0:	mov	w23, #0x4                   	// #4
  4041c4:	b	4042fc <nftw@plt+0x177c>
  4041c8:	mov	w23, #0x4                   	// #4
  4041cc:	b	404310 <nftw@plt+0x1790>
  4041d0:	mov	w20, #0x1                   	// #1
  4041d4:	tst	w19, #0xffff
  4041d8:	b.ne	4041f4 <nftw@plt+0x1674>  // b.any
  4041dc:	mov	w0, #0xfe5f0000            	// #-27328512
  4041e0:	add	w0, w19, w0
  4041e4:	lsr	w0, w0, #17
  4041e8:	cmp	w0, #0x9
  4041ec:	cset	w20, cc  // cc = lo, ul, last
  4041f0:	add	w20, w20, #0x1
  4041f4:	sbfiz	x0, x20, #1, #32
  4041f8:	add	x20, x0, w20, sxtw
  4041fc:	ldr	x0, [sp, #96]
  404200:	add	x20, x0, x20, lsl #3
  404204:	cmp	w26, #0x0
  404208:	ccmp	w26, w23, #0x2, ne  // ne = any
  40420c:	b.cs	404254 <nftw@plt+0x16d4>  // b.hs, b.nlast
  404210:	sub	w26, w26, #0x1
  404214:	ldr	w0, [x28, x26, lsl #2]
  404218:	sub	w1, w0, #0x1
  40421c:	eor	w1, w1, w0
  404220:	cmp	w24, w1, lsr #8
  404224:	b.ne	40423c <nftw@plt+0x16bc>  // b.any
  404228:	neg	w1, w0
  40422c:	eor	w1, w1, w0
  404230:	eor	w0, w19, w0
  404234:	tst	w1, w0
  404238:	b.eq	404254 <nftw@plt+0x16d4>  // b.none
  40423c:	mov	w3, w19
  404240:	mov	x2, x22
  404244:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404248:	add	x1, x1, #0xd30
  40424c:	mov	w0, #0x0                   	// #0
  404250:	bl	40866c <nftw@plt+0x5aec>
  404254:	sub	w0, w23, #0x1
  404258:	str	w19, [x28, x0, lsl #2]
  40425c:	ldr	x2, [x20, #16]
  404260:	cbz	x2, 40428c <nftw@plt+0x170c>
  404264:	mov	w1, w21
  404268:	mov	w0, w19
  40426c:	blr	x2
  404270:	bl	405840 <nftw@plt+0x2cc0>
  404274:	sub	w1, w0, w25
  404278:	sub	w0, w0, w25
  40427c:	mov	w3, w21
  404280:	cmp	w21, w1
  404284:	b.cc	404334 <nftw@plt+0x17b4>  // b.lo, b.ul, b.last
  404288:	b.hi	404350 <nftw@plt+0x17d0>  // b.pmore
  40428c:	mov	w1, w21
  404290:	mov	w0, w25
  404294:	bl	405c34 <nftw@plt+0x30b4>
  404298:	bl	405858 <nftw@plt+0x2cd8>
  40429c:	cbnz	w0, 40436c <nftw@plt+0x17ec>
  4042a0:	mov	w26, w23
  4042a4:	bl	405a94 <nftw@plt+0x2f14>
  4042a8:	mov	w19, w0
  4042ac:	cbz	w0, 40439c <nftw@plt+0x181c>
  4042b0:	bl	405a94 <nftw@plt+0x2f14>
  4042b4:	mov	w21, w0
  4042b8:	bl	405840 <nftw@plt+0x2cc0>
  4042bc:	mov	w25, w0
  4042c0:	sub	w24, w19, #0x1
  4042c4:	eor	w24, w24, w19
  4042c8:	lsr	w0, w24, #1
  4042cc:	cmp	wzr, w24, lsr #1
  4042d0:	b.eq	4041c8 <nftw@plt+0x1648>  // b.none
  4042d4:	and	w1, w0, #0xff
  4042d8:	cmp	w1, #0xff
  4042dc:	b.ne	4041c0 <nftw@plt+0x1640>  // b.any
  4042e0:	mov	w23, #0x4                   	// #4
  4042e4:	sub	w23, w23, #0x1
  4042e8:	lsr	w0, w0, #8
  4042ec:	cbz	w0, 404310 <nftw@plt+0x1790>
  4042f0:	and	w1, w0, #0xff
  4042f4:	cmp	w1, #0xff
  4042f8:	b.eq	4042e4 <nftw@plt+0x1764>  // b.none
  4042fc:	mov	w3, w19
  404300:	mov	x2, x22
  404304:	ldr	x1, [sp, #104]
  404308:	mov	w0, #0x0                   	// #0
  40430c:	bl	40866c <nftw@plt+0x5aec>
  404310:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  404314:	add	x20, x0, #0xd0
  404318:	add	x20, x20, #0x18
  40431c:	ldr	x0, [x20, #8]
  404320:	cbz	x0, 4041d0 <nftw@plt+0x1650>
  404324:	ldr	w0, [x20]
  404328:	cmp	w19, w0
  40432c:	b.ne	404318 <nftw@plt+0x1798>  // b.any
  404330:	b	404204 <nftw@plt+0x1684>
  404334:	sub	x3, x0, x3
  404338:	mov	x2, x22
  40433c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404340:	add	x1, x1, #0xd58
  404344:	mov	w0, #0x0                   	// #0
  404348:	bl	40866c <nftw@plt+0x5aec>
  40434c:	b	40428c <nftw@plt+0x170c>
  404350:	sub	x3, x3, x0
  404354:	mov	x2, x22
  404358:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40435c:	add	x1, x1, #0xd88
  404360:	mov	w0, #0x0                   	// #0
  404364:	bl	40866c <nftw@plt+0x5aec>
  404368:	b	40428c <nftw@plt+0x170c>
  40436c:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404370:	add	x1, x19, #0xc90
  404374:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404378:	add	x19, x19, #0xc70
  40437c:	cmp	w0, #0x0
  404380:	csel	x19, x19, x1, lt  // lt = tstop
  404384:	bl	405840 <nftw@plt+0x2cc0>
  404388:	mov	w3, w0
  40438c:	mov	x2, x22
  404390:	mov	x1, x19
  404394:	mov	w0, #0x0                   	// #0
  404398:	bl	40866c <nftw@plt+0x5aec>
  40439c:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4043a0:	add	x19, x19, #0x5b8
  4043a4:	ldr	x0, [x19, #216]
  4043a8:	bl	403a98 <nftw@plt+0xf18>
  4043ac:	ldr	x0, [x19, #256]
  4043b0:	ldr	x1, [x19, #248]
  4043b4:	add	x19, x19, #0xe0
  4043b8:	sub	x0, x0, x1
  4043bc:	cmp	x0, #0x7
  4043c0:	b.ls	404468 <nftw@plt+0x18e8>  // b.plast
  4043c4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4043c8:	add	x0, x0, #0x5b8
  4043cc:	add	x1, x0, #0xe0
  4043d0:	ldr	x2, [x0, #248]
  4043d4:	ldr	x3, [x0, #216]
  4043d8:	str	x3, [x2]
  4043dc:	ldr	x2, [x0, #248]
  4043e0:	add	x2, x2, #0x8
  4043e4:	ldr	w0, [x0, #212]
  4043e8:	str	w0, [x27, #104]
  4043ec:	ldr	x3, [x1, #16]
  4043f0:	cmp	x2, x3
  4043f4:	b.eq	404478 <nftw@plt+0x18f8>  // b.none
  4043f8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4043fc:	add	x0, x0, #0x5b8
  404400:	ldr	x1, [x0, #272]
  404404:	add	x2, x2, x1
  404408:	bic	x1, x2, x1
  40440c:	str	x1, [x0, #248]
  404410:	ldr	x2, [x0, #232]
  404414:	add	x0, x0, #0xe0
  404418:	ldr	x0, [x0, #32]
  40441c:	sub	x1, x1, x2
  404420:	sub	x2, x0, x2
  404424:	cmp	x1, x2
  404428:	b.ls	404434 <nftw@plt+0x18b4>  // b.plast
  40442c:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404430:	str	x0, [x1, #1712]
  404434:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404438:	add	x0, x0, #0x5b8
  40443c:	ldr	x1, [x0, #248]
  404440:	str	x1, [x0, #240]
  404444:	str	x3, [x27, #112]
  404448:	mov	x0, #0x0                   	// #0
  40444c:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404450:	add	x2, x2, #0x5b8
  404454:	add	x4, x27, #0x20
  404458:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40445c:	add	x3, x3, #0xd0
  404460:	add	x3, x3, #0xd8
  404464:	b	404498 <nftw@plt+0x1918>
  404468:	mov	x1, #0x8                   	// #8
  40446c:	mov	x0, x19
  404470:	bl	44a42c <_obstack_newchunk@@Base>
  404474:	b	4043c4 <nftw@plt+0x1844>
  404478:	mov	x0, x1
  40447c:	ldrb	w1, [x1, #80]
  404480:	orr	w1, w1, #0x2
  404484:	strb	w1, [x0, #80]
  404488:	b	4043f8 <nftw@plt+0x1878>
  40448c:	add	x0, x0, #0x1
  404490:	cmp	x0, #0x9
  404494:	b.eq	4044ac <nftw@plt+0x192c>  // b.none
  404498:	ldr	w1, [x2, x0, lsl #2]
  40449c:	cbz	w1, 40448c <nftw@plt+0x190c>
  4044a0:	ldr	x1, [x3, x0, lsl #3]
  4044a4:	str	x1, [x4, x0, lsl #3]
  4044a8:	b	40448c <nftw@plt+0x190c>
  4044ac:	bl	405958 <nftw@plt+0x2dd8>
  4044b0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4044b4:	add	x0, x0, #0x5b8
  4044b8:	ldr	x1, [x0, #328]
  4044bc:	str	x1, [x27, #8]
  4044c0:	str	x27, [x0, #328]
  4044c4:	ldp	x19, x20, [sp, #16]
  4044c8:	ldp	x23, x24, [sp, #48]
  4044cc:	ldp	x25, x26, [sp, #64]
  4044d0:	ldp	x27, x28, [sp, #80]
  4044d4:	mov	w0, #0x0                   	// #0
  4044d8:	ldp	x21, x22, [sp, #32]
  4044dc:	ldp	x29, x30, [sp], #128
  4044e0:	ret
  4044e4:	mov	w0, #0x0                   	// #0
  4044e8:	ret
  4044ec:	stp	x29, x30, [sp, #-64]!
  4044f0:	mov	x29, sp
  4044f4:	stp	x19, x20, [sp, #16]
  4044f8:	stp	x21, x22, [sp, #32]
  4044fc:	str	x23, [sp, #48]
  404500:	mov	w20, w1
  404504:	lsr	w22, w1, #1
  404508:	mov	w1, #0xfe5f0000            	// #-27328512
  40450c:	add	w0, w0, w1
  404510:	lsr	w0, w0, #17
  404514:	cmp	w0, #0x8
  404518:	b.hi	404598 <nftw@plt+0x1a18>  // b.pmore
  40451c:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404520:	add	x2, x1, #0x5b8
  404524:	mov	w1, w0
  404528:	mov	w3, #0x1                   	// #1
  40452c:	str	w3, [x2, x1, lsl #2]
  404530:	add	x1, x2, x1, lsl #4
  404534:	ldr	w19, [x1, #40]
  404538:	cbnz	w19, 4045b0 <nftw@plt+0x1a30>
  40453c:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404540:	add	x2, x2, #0x5b8
  404544:	add	x2, x2, #0x28
  404548:	ubfiz	x0, x0, #4, #15
  40454c:	add	x23, x2, x0
  404550:	str	w22, [x2, x0]
  404554:	ubfiz	x0, x22, #3, #31
  404558:	bl	402670 <malloc@plt>
  40455c:	mov	x21, x0
  404560:	str	x0, [x23, #8]
  404564:	cmp	w20, #0x1
  404568:	b.ls	404584 <nftw@plt+0x1a04>  // b.plast
  40456c:	mov	w20, w19
  404570:	bl	405abc <nftw@plt+0x2f3c>
  404574:	str	x0, [x21, x20, lsl #3]
  404578:	add	w19, w19, #0x1
  40457c:	cmp	w22, w19
  404580:	b.ne	40456c <nftw@plt+0x19ec>  // b.any
  404584:	ldp	x19, x20, [sp, #16]
  404588:	ldp	x21, x22, [sp, #32]
  40458c:	ldr	x23, [sp, #48]
  404590:	ldp	x29, x30, [sp], #64
  404594:	ret
  404598:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40459c:	add	x2, x2, #0xdb8
  4045a0:	mov	w1, #0xd3                  	// #211
  4045a4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4045a8:	add	x0, x0, #0xb88
  4045ac:	bl	408d8c <nftw@plt+0x620c>
  4045b0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4045b4:	add	x2, x2, #0xdb8
  4045b8:	mov	w1, #0xd5                  	// #213
  4045bc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4045c0:	add	x0, x0, #0xb88
  4045c4:	bl	408d8c <nftw@plt+0x620c>
  4045c8:	stp	x29, x30, [sp, #-48]!
  4045cc:	mov	x29, sp
  4045d0:	stp	x19, x20, [sp, #16]
  4045d4:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  4045d8:	mov	x20, x0
  4045dc:	mov	w1, #0x2f                  	// #47
  4045e0:	strb	w1, [sp, #40]
  4045e4:	strb	wzr, [sp, #41]
  4045e8:	add	x1, sp, #0x28
  4045ec:	bl	402a20 <strstr@plt>
  4045f0:	bl	4024f0 <strlen@plt>
  4045f4:	mov	x19, x0
  4045f8:	mov	x0, x20
  4045fc:	bl	4024f0 <strlen@plt>
  404600:	add	x1, x0, #0x2
  404604:	add	w19, w19, #0x1
  404608:	sub	x1, x1, w19, sxtw
  40460c:	add	x20, x20, x1
  404610:	add	x1, sp, #0x28
  404614:	mov	x0, x20
  404618:	bl	402a20 <strstr@plt>
  40461c:	cbnz	x0, 4045f0 <nftw@plt+0x1a70>
  404620:	mov	x0, x20
  404624:	ldp	x19, x20, [sp, #16]
  404628:	ldp	x29, x30, [sp], #48
  40462c:	ret
  404630:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404634:	mov	w1, #0x1                   	// #1
  404638:	str	w1, [x0, #1784]
  40463c:	ret
  404640:	stp	x29, x30, [sp, #-32]!
  404644:	mov	x29, sp
  404648:	stp	x19, x20, [sp, #16]
  40464c:	mov	x20, x0
  404650:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404654:	str	xzr, [x1, #1792]
  404658:	mov	w1, #0x4                   	// #4
  40465c:	bl	402810 <access@plt>
  404660:	cbnz	w0, 4046c0 <nftw@plt+0x1b40>
  404664:	mov	x1, #0x0                   	// #0
  404668:	mov	x0, #0x0                   	// #0
  40466c:	bl	4024c0 <getcwd@plt>
  404670:	mov	x19, x0
  404674:	cbz	x0, 4046e0 <nftw@plt+0x1b60>
  404678:	mov	x0, x20
  40467c:	bl	4028f0 <chdir@plt>
  404680:	cbnz	w0, 4046f8 <nftw@plt+0x1b78>
  404684:	mov	w2, #0x32                  	// #50
  404688:	adrp	x1, 403000 <nftw@plt+0x480>
  40468c:	add	x1, x1, #0xfbc
  404690:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  404694:	add	x0, x0, #0x860
  404698:	bl	402ae0 <ftw@plt>
  40469c:	mov	x0, x19
  4046a0:	bl	4028f0 <chdir@plt>
  4046a4:	mov	x0, x19
  4046a8:	bl	402910 <free@plt>
  4046ac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4046b0:	ldr	x0, [x0, #1792]
  4046b4:	ldp	x19, x20, [sp, #16]
  4046b8:	ldp	x29, x30, [sp], #32
  4046bc:	ret
  4046c0:	mov	x2, x20
  4046c4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4046c8:	add	x1, x1, #0xdc8
  4046cc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4046d0:	ldr	x0, [x0, #1392]
  4046d4:	bl	4079c4 <nftw@plt+0x4e44>
  4046d8:	mov	x0, #0x0                   	// #0
  4046dc:	b	4046b4 <nftw@plt+0x1b34>
  4046e0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4046e4:	add	x2, x2, #0xde8
  4046e8:	mov	w1, #0x1c6                 	// #454
  4046ec:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4046f0:	add	x0, x0, #0xb88
  4046f4:	bl	408d8c <nftw@plt+0x620c>
  4046f8:	mov	x2, x20
  4046fc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404700:	add	x1, x1, #0xe00
  404704:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404708:	ldr	x0, [x0, #1392]
  40470c:	bl	4079c4 <nftw@plt+0x4e44>
  404710:	mov	x0, #0x0                   	// #0
  404714:	b	4046b4 <nftw@plt+0x1b34>
  404718:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40471c:	add	x0, x0, #0x5b8
  404720:	ldr	w1, [x0, #200]
  404724:	ldr	w0, [x0, #204]
  404728:	cmp	w1, w0
  40472c:	b.cs	40474c <nftw@plt+0x1bcc>  // b.hs, b.nlast
  404730:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404734:	add	x0, x0, #0x5b8
  404738:	ldr	x2, [x0, #192]
  40473c:	add	w3, w1, #0x1
  404740:	str	w3, [x0, #200]
  404744:	ldr	x0, [x2, w1, uxtw #3]
  404748:	ret
  40474c:	stp	x29, x30, [sp, #-16]!
  404750:	mov	x29, sp
  404754:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404758:	add	x2, x2, #0xe18
  40475c:	mov	w1, #0x1ed                 	// #493
  404760:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404764:	add	x0, x0, #0xb88
  404768:	bl	408d8c <nftw@plt+0x620c>
  40476c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404770:	ldr	w0, [x0, #1672]
  404774:	ret
  404778:	stp	x29, x30, [sp, #-128]!
  40477c:	mov	x29, sp
  404780:	stp	x19, x20, [sp, #16]
  404784:	stp	x21, x22, [sp, #32]
  404788:	stp	x23, x24, [sp, #48]
  40478c:	stp	x25, x26, [sp, #64]
  404790:	stp	x27, x28, [sp, #80]
  404794:	mov	x19, x0
  404798:	mov	x20, x1
  40479c:	mov	w22, w2
  4047a0:	str	w3, [sp, #116]
  4047a4:	cbz	x0, 40497c <nftw@plt+0x1dfc>
  4047a8:	mov	w23, #0x0                   	// #0
  4047ac:	add	w23, w23, #0x1
  4047b0:	ldr	x0, [x0, #8]
  4047b4:	cbnz	x0, 4047ac <nftw@plt+0x1c2c>
  4047b8:	cbz	x20, 404940 <nftw@plt+0x1dc0>
  4047bc:	mov	x0, x20
  4047c0:	mov	w21, #0x0                   	// #0
  4047c4:	add	w21, w21, #0x1
  4047c8:	ldr	x0, [x0, #8]
  4047cc:	cbnz	x0, 4047c4 <nftw@plt+0x1c44>
  4047d0:	ubfiz	x0, x23, #3, #32
  4047d4:	bl	402670 <malloc@plt>
  4047d8:	mov	x24, x0
  4047dc:	ubfiz	x0, x21, #3, #32
  4047e0:	bl	402670 <malloc@plt>
  4047e4:	mov	x28, x0
  4047e8:	cbz	x19, 404800 <nftw@plt+0x1c80>
  4047ec:	mov	w1, #0x0                   	// #0
  4047f0:	str	x19, [x24, w1, uxtw #3]
  4047f4:	ldr	x19, [x19, #8]
  4047f8:	add	w1, w1, #0x1
  4047fc:	cbnz	x19, 4047f0 <nftw@plt+0x1c70>
  404800:	sub	w0, w23, #0x1
  404804:	lsl	x25, x0, #3
  404808:	ldr	x21, [x24, x0, lsl #3]
  40480c:	cmp	w22, #0x1
  404810:	b.le	40483c <nftw@plt+0x1cbc>
  404814:	mov	x19, #0x0                   	// #0
  404818:	sub	w22, w22, #0x1
  40481c:	cbz	w23, 40483c <nftw@plt+0x1cbc>
  404820:	ldr	x0, [x24, x19, lsl #3]
  404824:	mov	w2, w22
  404828:	mov	x1, x0
  40482c:	bl	403b28 <nftw@plt+0xfa8>
  404830:	add	x19, x19, #0x1
  404834:	cmp	w23, w19
  404838:	b.hi	404820 <nftw@plt+0x1ca0>  // b.pmore
  40483c:	cbz	x20, 40489c <nftw@plt+0x1d1c>
  404840:	str	x24, [sp, #104]
  404844:	add	x25, x25, #0x8
  404848:	add	x24, x24, x25
  40484c:	mov	w26, #0x0                   	// #0
  404850:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404854:	add	x0, x0, #0xe30
  404858:	str	x0, [sp, #120]
  40485c:	b	404910 <nftw@plt+0x1d90>
  404860:	cbz	w26, 40489c <nftw@plt+0x1d1c>
  404864:	mov	x19, #0x0                   	// #0
  404868:	ldr	w0, [sp, #116]
  40486c:	sub	w22, w0, #0x1
  404870:	mov	x20, x21
  404874:	ldr	x21, [x28, x19, lsl #3]
  404878:	mov	w2, w22
  40487c:	mov	x1, x21
  404880:	mov	x0, x21
  404884:	bl	403b28 <nftw@plt+0xfa8>
  404888:	str	xzr, [x21, #8]
  40488c:	str	x21, [x20, #8]
  404890:	add	x19, x19, #0x1
  404894:	cmp	w26, w19
  404898:	b.hi	404870 <nftw@plt+0x1cf0>  // b.pmore
  40489c:	mov	w0, #0x0                   	// #0
  4048a0:	ldp	x19, x20, [sp, #16]
  4048a4:	ldp	x21, x22, [sp, #32]
  4048a8:	ldp	x23, x24, [sp, #48]
  4048ac:	ldp	x25, x26, [sp, #64]
  4048b0:	ldp	x27, x28, [sp, #80]
  4048b4:	ldp	x29, x30, [sp], #128
  4048b8:	ret
  4048bc:	add	x19, x19, #0x8
  4048c0:	cmp	x24, x19
  4048c4:	b.eq	404934 <nftw@plt+0x1db4>  // b.none
  4048c8:	ldr	x22, [x19]
  4048cc:	cbz	x22, 4048bc <nftw@plt+0x1d3c>
  4048d0:	ldr	x25, [x22, #24]
  4048d4:	ldr	x1, [x20, #24]
  4048d8:	mov	x0, x25
  4048dc:	bl	402890 <strcmp@plt>
  4048e0:	cbnz	w0, 4048bc <nftw@plt+0x1d3c>
  4048e4:	str	xzr, [x19]
  4048e8:	ldr	w3, [x22, #104]
  4048ec:	ldr	w4, [x20, #104]
  4048f0:	cmp	w3, w4
  4048f4:	b.ne	404920 <nftw@plt+0x1da0>  // b.any
  4048f8:	ldr	w2, [sp, #116]
  4048fc:	mov	x1, x20
  404900:	mov	x0, x22
  404904:	bl	403b28 <nftw@plt+0xfa8>
  404908:	ldr	x20, [x20, #8]
  40490c:	cbz	x20, 404860 <nftw@plt+0x1ce0>
  404910:	cmp	w23, #0x0
  404914:	b.le	404934 <nftw@plt+0x1db4>
  404918:	ldr	x19, [sp, #104]
  40491c:	b	4048c8 <nftw@plt+0x1d48>
  404920:	mov	x2, x25
  404924:	ldr	x1, [sp, #120]
  404928:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40492c:	ldr	x0, [x0, #1392]
  404930:	bl	4079c4 <nftw@plt+0x4e44>
  404934:	str	x20, [x28, w26, uxtw #3]
  404938:	add	w26, w26, #0x1
  40493c:	b	404908 <nftw@plt+0x1d88>
  404940:	ubfiz	x0, x23, #3, #32
  404944:	bl	402670 <malloc@plt>
  404948:	mov	x24, x0
  40494c:	mov	x0, #0x0                   	// #0
  404950:	bl	402670 <malloc@plt>
  404954:	mov	x28, x0
  404958:	b	4047ec <nftw@plt+0x1c6c>
  40495c:	mov	x0, #0x0                   	// #0
  404960:	bl	402670 <malloc@plt>
  404964:	mov	x24, x0
  404968:	mov	x0, #0x0                   	// #0
  40496c:	bl	402670 <malloc@plt>
  404970:	mov	x28, x0
  404974:	mov	w23, #0x0                   	// #0
  404978:	b	404800 <nftw@plt+0x1c80>
  40497c:	cbz	x1, 40495c <nftw@plt+0x1ddc>
  404980:	mov	w23, #0x0                   	// #0
  404984:	b	4047bc <nftw@plt+0x1c3c>
  404988:	stp	x29, x30, [sp, #-80]!
  40498c:	mov	x29, sp
  404990:	stp	x21, x22, [sp, #32]
  404994:	mov	x21, x0
  404998:	str	s0, [sp, #76]
  40499c:	str	w1, [sp, #72]
  4049a0:	str	w2, [sp, #68]
  4049a4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4049a8:	ldr	w0, [x0, #1784]
  4049ac:	cbnz	w0, 4049cc <nftw@plt+0x1e4c>
  4049b0:	cbz	x21, 404aac <nftw@plt+0x1f2c>
  4049b4:	stp	x19, x20, [sp, #16]
  4049b8:	str	x23, [sp, #48]
  4049bc:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4049c0:	add	x23, x23, #0xd0
  4049c4:	add	x23, x23, #0x120
  4049c8:	b	404a94 <nftw@plt+0x1f14>
  4049cc:	mov	w3, w2
  4049d0:	mov	w2, w1
  4049d4:	fcvt	d0, s0
  4049d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4049dc:	add	x1, x1, #0xe70
  4049e0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4049e4:	ldr	x0, [x0, #1416]
  4049e8:	bl	4079c4 <nftw@plt+0x4e44>
  4049ec:	b	4049b0 <nftw@plt+0x1e30>
  4049f0:	ldr	x5, [x20, x23]
  4049f4:	add	x4, sp, #0x44
  4049f8:	add	x3, sp, #0x48
  4049fc:	adrp	x2, 403000 <nftw@plt+0x480>
  404a00:	add	x2, x2, #0x99c
  404a04:	ldr	w1, [x19]
  404a08:	ldr	x0, [x19, #8]
  404a0c:	blr	x5
  404a10:	add	x19, x19, #0x10
  404a14:	add	x20, x20, #0x8
  404a18:	cmp	x20, #0x48
  404a1c:	b.eq	404a58 <nftw@plt+0x1ed8>  // b.none
  404a20:	add	x1, x21, #0x20
  404a24:	ldr	x1, [x1, x20]
  404a28:	cbz	x1, 404a14 <nftw@plt+0x1e94>
  404a2c:	ldr	w0, [sp, #68]
  404a30:	cbnz	w0, 4049f0 <nftw@plt+0x1e70>
  404a34:	ldr	x5, [x20, x23]
  404a38:	mov	x4, #0x0                   	// #0
  404a3c:	add	x3, sp, #0x4c
  404a40:	adrp	x2, 403000 <nftw@plt+0x480>
  404a44:	add	x2, x2, #0x988
  404a48:	ldr	w1, [x19]
  404a4c:	ldr	x0, [x19, #8]
  404a50:	blr	x5
  404a54:	b	404a10 <nftw@plt+0x1e90>
  404a58:	add	w22, w22, #0x1
  404a5c:	ldr	w0, [x21, #104]
  404a60:	cmp	w0, w22
  404a64:	b.ls	404a8c <nftw@plt+0x1f0c>  // b.plast
  404a68:	ldr	x0, [x21, #112]
  404a6c:	ldr	x19, [x0, w22, uxtw #3]
  404a70:	cbz	x19, 404a58 <nftw@plt+0x1ed8>
  404a74:	ldr	x0, [x19]
  404a78:	cmp	x0, x21
  404a7c:	b.ne	404a58 <nftw@plt+0x1ed8>  // b.any
  404a80:	add	x19, x19, #0x18
  404a84:	mov	x20, #0x0                   	// #0
  404a88:	b	404a20 <nftw@plt+0x1ea0>
  404a8c:	ldr	x21, [x21, #8]
  404a90:	cbz	x21, 404aa4 <nftw@plt+0x1f24>
  404a94:	ldr	w0, [x21, #104]
  404a98:	cbz	w0, 404a8c <nftw@plt+0x1f0c>
  404a9c:	mov	w22, #0x0                   	// #0
  404aa0:	b	404a68 <nftw@plt+0x1ee8>
  404aa4:	ldp	x19, x20, [sp, #16]
  404aa8:	ldr	x23, [sp, #48]
  404aac:	mov	w0, #0x0                   	// #0
  404ab0:	ldp	x21, x22, [sp, #32]
  404ab4:	ldp	x29, x30, [sp], #80
  404ab8:	ret
  404abc:	stp	x29, x30, [sp, #-32]!
  404ac0:	mov	x29, sp
  404ac4:	str	x19, [sp, #16]
  404ac8:	str	d8, [sp, #24]
  404acc:	mov	x19, x0
  404ad0:	cbz	x0, 404b48 <nftw@plt+0x1fc8>
  404ad4:	mov	x8, x0
  404ad8:	mov	x2, #0x0                   	// #0
  404adc:	b	404b34 <nftw@plt+0x1fb4>
  404ae0:	add	x5, x5, #0x1
  404ae4:	cmp	w0, w5
  404ae8:	b.ls	404b2c <nftw@plt+0x1fac>  // b.plast
  404aec:	ldr	x3, [x9, x5, lsl #3]
  404af0:	cbz	x3, 404ae0 <nftw@plt+0x1f60>
  404af4:	ldr	x4, [x3]
  404af8:	cmp	x4, x8
  404afc:	b.ne	404ae0 <nftw@plt+0x1f60>  // b.any
  404b00:	ldr	w6, [x3, #24]
  404b04:	cbz	w6, 404ae0 <nftw@plt+0x1f60>
  404b08:	ldr	x7, [x3, #32]
  404b0c:	mov	x3, #0x0                   	// #0
  404b10:	ldr	x4, [x7, x3, lsl #3]
  404b14:	cmp	x2, x4
  404b18:	csel	x2, x2, x4, ge  // ge = tcont
  404b1c:	add	x3, x3, #0x1
  404b20:	cmp	w6, w3
  404b24:	b.hi	404b10 <nftw@plt+0x1f90>  // b.pmore
  404b28:	b	404ae0 <nftw@plt+0x1f60>
  404b2c:	ldr	x8, [x8, #8]
  404b30:	cbz	x8, 404b4c <nftw@plt+0x1fcc>
  404b34:	ldr	w0, [x8, #104]
  404b38:	cbz	w0, 404b2c <nftw@plt+0x1fac>
  404b3c:	ldr	x9, [x8, #112]
  404b40:	mov	x5, #0x0                   	// #0
  404b44:	b	404aec <nftw@plt+0x1f6c>
  404b48:	mov	x2, #0x0                   	// #0
  404b4c:	scvtf	s8, x1
  404b50:	scvtf	s0, x2
  404b54:	fdiv	s8, s8, s0
  404b58:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404b5c:	ldr	w0, [x0, #1784]
  404b60:	cbnz	w0, 404b88 <nftw@plt+0x2008>
  404b64:	mov	w2, #0x0                   	// #0
  404b68:	mov	w1, #0x0                   	// #0
  404b6c:	fmov	s0, s8
  404b70:	mov	x0, x19
  404b74:	bl	404988 <nftw@plt+0x1e08>
  404b78:	ldr	x19, [sp, #16]
  404b7c:	ldr	d8, [sp, #24]
  404b80:	ldp	x29, x30, [sp], #32
  404b84:	ret
  404b88:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404b8c:	add	x1, x1, #0xe90
  404b90:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404b94:	ldr	x0, [x0, #1416]
  404b98:	bl	4079c4 <nftw@plt+0x4e44>
  404b9c:	b	404b64 <nftw@plt+0x1fe4>
  404ba0:	stp	x29, x30, [sp, #-176]!
  404ba4:	mov	x29, sp
  404ba8:	stp	x19, x20, [sp, #16]
  404bac:	stp	x21, x22, [sp, #32]
  404bb0:	stp	x23, x24, [sp, #48]
  404bb4:	stp	x25, x26, [sp, #64]
  404bb8:	stp	x27, x28, [sp, #80]
  404bbc:	stp	d10, d11, [sp, #112]
  404bc0:	mov	x21, x0
  404bc4:	mov	x22, x1
  404bc8:	mov	w20, #0x0                   	// #0
  404bcc:	cbz	x0, 404bdc <nftw@plt+0x205c>
  404bd0:	add	w20, w20, #0x1
  404bd4:	ldr	x0, [x0, #8]
  404bd8:	cbnz	x0, 404bd0 <nftw@plt+0x2050>
  404bdc:	cbz	x22, 405368 <nftw@plt+0x27e8>
  404be0:	mov	x1, x22
  404be4:	mov	w0, #0x0                   	// #0
  404be8:	add	w0, w0, #0x1
  404bec:	ldr	x1, [x1, #8]
  404bf0:	cbnz	x1, 404be8 <nftw@plt+0x2068>
  404bf4:	add	w26, w0, w20
  404bf8:	add	w0, w0, w20
  404bfc:	add	x0, x0, x0, lsl #1
  404c00:	lsl	x0, x0, #4
  404c04:	bl	402670 <malloc@plt>
  404c08:	mov	x19, x0
  404c0c:	cbz	x21, 404cb8 <nftw@plt+0x2138>
  404c10:	mov	w0, #0x0                   	// #0
  404c14:	ubfiz	x1, x0, #1, #32
  404c18:	add	x1, x1, w0, uxtw
  404c1c:	add	x2, x19, x1, lsl #3
  404c20:	str	x21, [x19, x1, lsl #3]
  404c24:	str	xzr, [x2, #8]
  404c28:	ldr	x21, [x21, #8]
  404c2c:	add	w0, w0, #0x1
  404c30:	cbnz	x21, 404c14 <nftw@plt+0x2094>
  404c34:	cbz	x22, 404c58 <nftw@plt+0x20d8>
  404c38:	ubfiz	x1, x0, #1, #32
  404c3c:	add	x1, x1, w0, uxtw
  404c40:	add	x2, x19, x1, lsl #3
  404c44:	str	xzr, [x19, x1, lsl #3]
  404c48:	str	x22, [x2, #8]
  404c4c:	ldr	x22, [x22, #8]
  404c50:	add	w0, w0, #0x1
  404c54:	cbnz	x22, 404c38 <nftw@plt+0x20b8>
  404c58:	cmp	w20, w26
  404c5c:	b.cs	404cc0 <nftw@plt+0x2140>  // b.hs, b.nlast
  404c60:	stp	d8, d9, [sp, #96]
  404c64:	mov	w0, w20
  404c68:	add	x22, x0, w20, uxtw #1
  404c6c:	add	x22, x19, x22, lsl #3
  404c70:	add	x22, x22, #0x8
  404c74:	str	x19, [sp, #144]
  404c78:	mvn	w21, w20
  404c7c:	add	w21, w21, w26
  404c80:	add	x21, x21, x0
  404c84:	add	x21, x21, x21, lsl #1
  404c88:	add	x0, x19, #0x20
  404c8c:	add	x21, x0, x21, lsl #3
  404c90:	sub	w23, w20, #0x1
  404c94:	add	x23, x23, #0x1
  404c98:	add	x23, x23, x23, lsl #1
  404c9c:	add	x23, x19, x23, lsl #3
  404ca0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  404ca4:	add	x0, x0, #0xe30
  404ca8:	str	x0, [sp, #152]
  404cac:	b	404d6c <nftw@plt+0x21ec>
  404cb0:	mov	w26, w20
  404cb4:	b	404c58 <nftw@plt+0x20d8>
  404cb8:	mov	w0, #0x0                   	// #0
  404cbc:	b	404c38 <nftw@plt+0x20b8>
  404cc0:	cbnz	w26, 404cd0 <nftw@plt+0x2150>
  404cc4:	movi	d10, #0x0
  404cc8:	fmov	d11, d10
  404ccc:	b	40522c <nftw@plt+0x26ac>
  404cd0:	stp	d8, d9, [sp, #96]
  404cd4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404cd8:	ldr	d9, [x0, #912]
  404cdc:	mov	x22, x19
  404ce0:	mov	w25, #0x0                   	// #0
  404ce4:	mov	w27, #0x44                  	// #68
  404ce8:	mov	w28, #0x11                  	// #17
  404cec:	adrp	x20, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404cf0:	add	x20, x20, #0x5b8
  404cf4:	movi	d8, #0x0
  404cf8:	b	404e3c <nftw@plt+0x22bc>
  404cfc:	mov	x2, x27
  404d00:	ldr	x1, [sp, #152]
  404d04:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404d08:	ldr	x0, [x0, #1392]
  404d0c:	bl	4079c4 <nftw@plt+0x4e44>
  404d10:	add	x24, x24, #0x18
  404d14:	cmp	x23, x24
  404d18:	b.eq	404d60 <nftw@plt+0x21e0>  // b.none
  404d1c:	str	x24, [sp, #128]
  404d20:	ldr	x0, [x24, #8]
  404d24:	cbnz	x0, 404d10 <nftw@plt+0x2190>
  404d28:	ldr	x28, [x24]
  404d2c:	ldr	x27, [x25, #24]
  404d30:	ldr	x1, [x28, #24]
  404d34:	mov	x0, x27
  404d38:	bl	402890 <strcmp@plt>
  404d3c:	cbnz	w0, 404d10 <nftw@plt+0x2190>
  404d40:	ldr	w3, [x25, #104]
  404d44:	ldr	w4, [x28, #104]
  404d48:	cmp	w3, w4
  404d4c:	b.ne	404cfc <nftw@plt+0x217c>  // b.any
  404d50:	ldr	x0, [sp, #128]
  404d54:	str	x25, [x0, #8]
  404d58:	ldr	x0, [sp, #136]
  404d5c:	str	xzr, [x0]
  404d60:	add	x22, x22, #0x18
  404d64:	cmp	x22, x21
  404d68:	b.eq	404cd4 <nftw@plt+0x2154>  // b.none
  404d6c:	str	x22, [sp, #136]
  404d70:	ldr	x25, [x22]
  404d74:	cbz	x25, 404d60 <nftw@plt+0x21e0>
  404d78:	cbz	w20, 404d60 <nftw@plt+0x21e0>
  404d7c:	ldr	x24, [sp, #144]
  404d80:	b	404d1c <nftw@plt+0x219c>
  404d84:	ldr	x0, [x19, #8]
  404d88:	cbz	x0, 404e2c <nftw@plt+0x22ac>
  404d8c:	ldr	w0, [x20, #340]
  404d90:	add	w0, w0, #0x1
  404d94:	str	w0, [x20, #340]
  404d98:	ldr	x24, [x19, #8]
  404d9c:	mov	w21, #0x8                   	// #8
  404da0:	ldr	w0, [x20, #348]
  404da4:	add	w0, w0, #0x1
  404da8:	str	w0, [x20, #348]
  404dac:	mov	x1, #0x0                   	// #0
  404db0:	mov	x0, x24
  404db4:	bl	4039c0 <nftw@plt+0xe40>
  404db8:	and	w0, w0, #0xff
  404dbc:	cbz	w0, 404e90 <nftw@plt+0x2310>
  404dc0:	ldr	w0, [x20, #356]
  404dc4:	add	w0, w0, #0x1
  404dc8:	str	w0, [x20, #356]
  404dcc:	orr	w0, w21, #0x10
  404dd0:	b	404e14 <nftw@plt+0x2294>
  404dd4:	fmul	d0, d9, d8
  404dd8:	fcvtzs	x1, d0
  404ddc:	mov	x0, x21
  404de0:	bl	4039c0 <nftw@plt+0xe40>
  404de4:	and	w0, w0, #0xff
  404de8:	cbz	w0, 404e7c <nftw@plt+0x22fc>
  404dec:	ldr	w0, [x20, #360]
  404df0:	add	w0, w0, #0x1
  404df4:	str	w0, [x20, #360]
  404df8:	mov	w21, #0x2                   	// #2
  404dfc:	ldr	x24, [x23, #8]
  404e00:	cbnz	x24, 404da0 <nftw@plt+0x2220>
  404e04:	ldr	w0, [x20, #336]
  404e08:	add	w0, w0, #0x1
  404e0c:	str	w0, [x20, #336]
  404e10:	orr	w0, w21, #0x80
  404e14:	strb	w0, [x23, #16]
  404e18:	tst	w0, w27
  404e1c:	b.ne	404edc <nftw@plt+0x235c>  // b.any
  404e20:	and	w0, w0, w28
  404e24:	cmp	w0, #0x11
  404e28:	b.eq	404f08 <nftw@plt+0x2388>  // b.none
  404e2c:	add	w25, w25, #0x1
  404e30:	add	x19, x19, #0x18
  404e34:	cmp	w25, w26
  404e38:	b.cs	404f18 <nftw@plt+0x2398>  // b.hs, b.nlast
  404e3c:	mov	x23, x19
  404e40:	ldr	x21, [x19]
  404e44:	cbz	x21, 404d84 <nftw@plt+0x2204>
  404e48:	ldr	w0, [x20, #344]
  404e4c:	add	w0, w0, #0x1
  404e50:	str	w0, [x20, #344]
  404e54:	mov	x1, #0x0                   	// #0
  404e58:	mov	x0, x21
  404e5c:	bl	4039c0 <nftw@plt+0xe40>
  404e60:	and	w0, w0, #0xff
  404e64:	cbz	w0, 404dd4 <nftw@plt+0x2254>
  404e68:	ldr	w0, [x20, #352]
  404e6c:	add	w0, w0, #0x1
  404e70:	str	w0, [x20, #352]
  404e74:	mov	w21, #0x1                   	// #1
  404e78:	b	404dfc <nftw@plt+0x227c>
  404e7c:	ldr	w0, [x20, #368]
  404e80:	add	w0, w0, #0x1
  404e84:	str	w0, [x20, #368]
  404e88:	mov	w21, #0x4                   	// #4
  404e8c:	b	404dfc <nftw@plt+0x227c>
  404e90:	fmul	d0, d9, d8
  404e94:	fcvtzs	x1, d0
  404e98:	mov	x0, x24
  404e9c:	bl	4039c0 <nftw@plt+0xe40>
  404ea0:	and	w0, w0, #0xff
  404ea4:	cbz	w0, 404ec8 <nftw@plt+0x2348>
  404ea8:	ldr	w0, [x20, #364]
  404eac:	add	w0, w0, #0x1
  404eb0:	str	w0, [x20, #364]
  404eb4:	orr	w0, w21, #0x20
  404eb8:	strb	w0, [x23, #16]
  404ebc:	tst	w21, w27
  404ec0:	b.eq	404ee8 <nftw@plt+0x2368>  // b.none
  404ec4:	b	404edc <nftw@plt+0x235c>
  404ec8:	ldr	w0, [x20, #372]
  404ecc:	add	w0, w0, #0x1
  404ed0:	str	w0, [x20, #372]
  404ed4:	orr	w0, w21, #0x40
  404ed8:	strb	w0, [x23, #16]
  404edc:	ldr	w1, [x20, #376]
  404ee0:	add	w1, w1, #0x1
  404ee4:	str	w1, [x20, #376]
  404ee8:	mov	w1, #0x22                  	// #34
  404eec:	and	w1, w0, w1
  404ef0:	cmp	w1, #0x22
  404ef4:	b.ne	404e20 <nftw@plt+0x22a0>  // b.any
  404ef8:	ldr	w1, [x20, #380]
  404efc:	add	w1, w1, #0x1
  404f00:	str	w1, [x20, #380]
  404f04:	b	404e20 <nftw@plt+0x22a0>
  404f08:	ldr	w0, [x20, #384]
  404f0c:	add	w0, w0, #0x1
  404f10:	str	w0, [x20, #384]
  404f14:	b	404e2c <nftw@plt+0x22ac>
  404f18:	movi	d10, #0x0
  404f1c:	fmov	d11, d10
  404f20:	mov	w28, #0x0                   	// #0
  404f24:	mov	w25, #0x1                   	// #1
  404f28:	str	w25, [sp, #128]
  404f2c:	b	40507c <nftw@plt+0x24fc>
  404f30:	ldr	x19, [x22, #8]
  404f34:	cbz	x19, 40506c <nftw@plt+0x24ec>
  404f38:	ldrb	w23, [x22, #16]
  404f3c:	mov	w0, #0x11                  	// #17
  404f40:	and	w0, w23, w0
  404f44:	cmp	w0, #0x11
  404f48:	b.eq	40506c <nftw@plt+0x24ec>  // b.none
  404f4c:	ldr	x20, [x19, #24]
  404f50:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404f54:	ldr	w0, [x0, #1448]
  404f58:	cbz	w0, 404f84 <nftw@plt+0x2404>
  404f5c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  404f60:	ldr	w0, [x0, #1444]
  404f64:	cbnz	w0, 405324 <nftw@plt+0x27a4>
  404f68:	str	xzr, [sp, #160]
  404f6c:	add	x2, sp, #0xa8
  404f70:	b	404fa0 <nftw@plt+0x2420>
  404f74:	mov	x0, x20
  404f78:	bl	4045c8 <nftw@plt+0x1a48>
  404f7c:	mov	x20, x0
  404f80:	b	4050ac <nftw@plt+0x252c>
  404f84:	mov	x0, x20
  404f88:	bl	4045c8 <nftw@plt+0x1a48>
  404f8c:	mov	x20, x0
  404f90:	b	404f5c <nftw@plt+0x23dc>
  404f94:	str	xzr, [sp, #168]
  404f98:	mov	x19, x21
  404f9c:	add	x2, sp, #0xa0
  404fa0:	ldr	w3, [x19, #104]
  404fa4:	cbz	w3, 40500c <nftw@plt+0x248c>
  404fa8:	ldr	x5, [x19, #112]
  404fac:	mov	x0, #0x0                   	// #0
  404fb0:	movi	d1, #0x0
  404fb4:	fmov	d2, d1
  404fb8:	b	404fc8 <nftw@plt+0x2448>
  404fbc:	add	x0, x0, #0x1
  404fc0:	cmp	w3, w0
  404fc4:	b.ls	405010 <nftw@plt+0x2490>  // b.plast
  404fc8:	ldr	x1, [x5, x0, lsl #3]
  404fcc:	cbz	x1, 404fbc <nftw@plt+0x243c>
  404fd0:	ldr	x4, [x1]
  404fd4:	cmp	x4, x19
  404fd8:	b.ne	404fbc <nftw@plt+0x243c>  // b.any
  404fdc:	ldr	w4, [x1, #24]
  404fe0:	cbz	w4, 404fbc <nftw@plt+0x243c>
  404fe4:	ldr	x6, [x1, #32]
  404fe8:	mov	x1, #0x0                   	// #0
  404fec:	ldr	d0, [x6, x1, lsl #3]
  404ff0:	scvtf	d0, d0
  404ff4:	fdiv	d0, d0, d2
  404ff8:	fadd	d1, d1, d0
  404ffc:	add	x1, x1, #0x1
  405000:	cmp	w4, w1
  405004:	b.hi	404fec <nftw@plt+0x246c>  // b.pmore
  405008:	b	404fbc <nftw@plt+0x243c>
  40500c:	movi	d1, #0x0
  405010:	str	d1, [x2]
  405014:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405018:	ldr	w0, [x0, #1452]
  40501c:	cbz	w0, 40506c <nftw@plt+0x24ec>
  405020:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405024:	ldr	w0, [x0, #1456]
  405028:	cbz	w0, 405038 <nftw@plt+0x24b8>
  40502c:	mov	w0, #0x44                  	// #68
  405030:	tst	w23, w0
  405034:	b.eq	40506c <nftw@plt+0x24ec>  // b.none
  405038:	ldr	d9, [sp, #160]
  40503c:	ldr	d8, [sp, #168]
  405040:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405044:	ldr	d1, [x0, #200]
  405048:	fmul	d2, d8, d1
  40504c:	fmul	d1, d9, d1
  405050:	movi	d0, #0x0
  405054:	mov	x1, x20
  405058:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40505c:	add	x0, x0, #0xed8
  405060:	bl	402a90 <printf@plt>
  405064:	fadd	d11, d11, d9
  405068:	fadd	d10, d10, d8
  40506c:	add	w28, w28, #0x1
  405070:	add	x22, x22, #0x18
  405074:	cmp	w28, w26
  405078:	b.cs	405228 <nftw@plt+0x26a8>  // b.hs, b.nlast
  40507c:	mov	x24, x22
  405080:	ldr	x21, [x22]
  405084:	cbz	x21, 404f30 <nftw@plt+0x23b0>
  405088:	ldrb	w23, [x22, #16]
  40508c:	mov	w0, #0x11                  	// #17
  405090:	and	w0, w23, w0
  405094:	cmp	w0, #0x11
  405098:	b.eq	40506c <nftw@plt+0x24ec>  // b.none
  40509c:	ldr	x20, [x21, #24]
  4050a0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4050a4:	ldr	w0, [x0, #1448]
  4050a8:	cbz	w0, 404f74 <nftw@plt+0x23f4>
  4050ac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4050b0:	ldr	w0, [x0, #1444]
  4050b4:	cbnz	w0, 405348 <nftw@plt+0x27c8>
  4050b8:	ldr	x19, [x24, #8]
  4050bc:	cmp	x19, #0x0
  4050c0:	cset	w0, eq  // eq = none
  4050c4:	cbnz	w0, 404f94 <nftw@plt+0x2414>
  4050c8:	ldr	w0, [x21, #104]
  4050cc:	cbz	w0, 405214 <nftw@plt+0x2694>
  4050d0:	movi	d8, #0x0
  4050d4:	fmov	d9, d8
  4050d8:	mov	w24, #0x0                   	// #0
  4050dc:	adrp	x27, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4050e0:	add	x27, x27, #0x5a4
  4050e4:	b	405170 <nftw@plt+0x25f0>
  4050e8:	mov	w3, w25
  4050ec:	ldr	w2, [sp, #128]
  4050f0:	add	x0, x0, #0x1
  4050f4:	cmp	w4, w0
  4050f8:	b.ls	405148 <nftw@plt+0x25c8>  // b.plast
  4050fc:	ldr	d3, [x6, x0, lsl #3]
  405100:	ldr	d0, [x5, x0, lsl #3]
  405104:	orr	v6.8b, v3.8b, v0.8b
  405108:	fmov	x7, d6
  40510c:	cbz	x7, 4050f0 <nftw@plt+0x2570>
  405110:	scvtf	d3, d3
  405114:	fdiv	d3, d3, d4
  405118:	fadd	d1, d1, d3
  40511c:	scvtf	d0, d0
  405120:	fdiv	d0, d0, d4
  405124:	fadd	d2, d2, d0
  405128:	fcmpe	d3, d5
  40512c:	b.ge	4050e8 <nftw@plt+0x2568>  // b.tcont
  405130:	mov	w2, w25
  405134:	fcmpe	d0, d5
  405138:	b.lt	4050f0 <nftw@plt+0x2570>  // b.tstop
  40513c:	mov	w3, w25
  405140:	ldr	w2, [sp, #128]
  405144:	b	4050f0 <nftw@plt+0x2570>
  405148:	fadd	d9, d9, d1
  40514c:	fadd	d8, d8, d2
  405150:	ldr	w0, [x27]
  405154:	cmp	w0, #0x0
  405158:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40515c:	b.ne	4051d8 <nftw@plt+0x2658>  // b.any
  405160:	add	w24, w24, #0x1
  405164:	ldr	w0, [x21, #104]
  405168:	cmp	w0, w24
  40516c:	b.ls	40521c <nftw@plt+0x269c>  // b.plast
  405170:	mov	w0, w24
  405174:	ldr	x1, [x21, #112]
  405178:	ldr	x1, [x1, x0, lsl #3]
  40517c:	ldr	x2, [x19, #112]
  405180:	ldr	x0, [x2, x0, lsl #3]
  405184:	cbz	x1, 405160 <nftw@plt+0x25e0>
  405188:	ldr	x2, [x1]
  40518c:	cmp	x0, #0x0
  405190:	ccmp	x2, x21, #0x0, ne  // ne = any
  405194:	b.ne	405160 <nftw@plt+0x25e0>  // b.any
  405198:	ldr	x2, [x0]
  40519c:	cmp	x2, x19
  4051a0:	b.ne	405160 <nftw@plt+0x25e0>  // b.any
  4051a4:	ldr	w4, [x1, #24]
  4051a8:	cbz	w4, 405314 <nftw@plt+0x2794>
  4051ac:	ldr	x6, [x1, #32]
  4051b0:	ldr	x5, [x0, #32]
  4051b4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4051b8:	ldr	d5, [x0, #912]
  4051bc:	mov	x0, #0x0                   	// #0
  4051c0:	mov	w3, #0x0                   	// #0
  4051c4:	mov	w2, #0x0                   	// #0
  4051c8:	movi	d2, #0x0
  4051cc:	fmov	d1, d2
  4051d0:	fmov	d4, d2
  4051d4:	b	4050fc <nftw@plt+0x257c>
  4051d8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4051dc:	ldr	w0, [x0, #1456]
  4051e0:	cmp	w0, #0x0
  4051e4:	ccmp	w3, #0x0, #0x0, ne  // ne = any
  4051e8:	b.eq	405160 <nftw@plt+0x25e0>  // b.none
  4051ec:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4051f0:	ldr	d0, [x0, #200]
  4051f4:	fmul	d2, d2, d0
  4051f8:	fmul	d1, d1, d0
  4051fc:	movi	d0, #0x0
  405200:	ldr	w1, [x1, #8]
  405204:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  405208:	add	x0, x0, #0xea0
  40520c:	bl	402a90 <printf@plt>
  405210:	b	405160 <nftw@plt+0x25e0>
  405214:	movi	d8, #0x0
  405218:	fmov	d9, d8
  40521c:	str	d9, [sp, #160]
  405220:	str	d8, [sp, #168]
  405224:	b	405014 <nftw@plt+0x2494>
  405228:	ldp	d8, d9, [sp, #96]
  40522c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405230:	ldr	w0, [x0, #1452]
  405234:	cbnz	w0, 4052e8 <nftw@plt+0x2768>
  405238:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40523c:	add	x0, x0, #0xf48
  405240:	bl	402830 <puts@plt>
  405244:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405248:	add	x19, x19, #0x5b8
  40524c:	ldr	w1, [x19, #344]
  405250:	ldr	w3, [x19, #336]
  405254:	sub	w3, w1, w3
  405258:	ldr	w2, [x19, #348]
  40525c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  405260:	add	x0, x0, #0xf98
  405264:	bl	402a90 <printf@plt>
  405268:	ldr	w2, [x19, #340]
  40526c:	ldr	w1, [x19, #336]
  405270:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  405274:	add	x0, x0, #0xfc0
  405278:	bl	402a90 <printf@plt>
  40527c:	ldr	w3, [x19, #376]
  405280:	ldr	w2, [x19, #372]
  405284:	ldr	w1, [x19, #368]
  405288:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  40528c:	add	x0, x0, #0xfe0
  405290:	bl	402a90 <printf@plt>
  405294:	ldr	w3, [x19, #380]
  405298:	ldr	w2, [x19, #364]
  40529c:	ldr	w1, [x19, #360]
  4052a0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4052a4:	add	x0, x0, #0x8
  4052a8:	bl	402a90 <printf@plt>
  4052ac:	ldr	w3, [x19, #384]
  4052b0:	ldr	w2, [x19, #356]
  4052b4:	ldr	w1, [x19, #352]
  4052b8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4052bc:	add	x0, x0, #0x30
  4052c0:	bl	402a90 <printf@plt>
  4052c4:	mov	w0, #0x1                   	// #1
  4052c8:	ldp	x19, x20, [sp, #16]
  4052cc:	ldp	x21, x22, [sp, #32]
  4052d0:	ldp	x23, x24, [sp, #48]
  4052d4:	ldp	x25, x26, [sp, #64]
  4052d8:	ldp	x27, x28, [sp, #80]
  4052dc:	ldp	d10, d11, [sp, #112]
  4052e0:	ldp	x29, x30, [sp], #176
  4052e4:	ret
  4052e8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4052ec:	ldr	d1, [x0, #200]
  4052f0:	fmul	d2, d10, d1
  4052f4:	fmul	d1, d11, d1
  4052f8:	movi	d0, #0x0
  4052fc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  405300:	add	x1, x1, #0x780
  405304:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  405308:	add	x0, x0, #0xf10
  40530c:	bl	402a90 <printf@plt>
  405310:	b	405238 <nftw@plt+0x26b8>
  405314:	movi	d0, #0x0
  405318:	fadd	d9, d9, d0
  40531c:	fadd	d8, d8, d0
  405320:	b	405160 <nftw@plt+0x25e0>
  405324:	mov	x1, x20
  405328:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40532c:	add	x0, x0, #0x58
  405330:	bl	402a90 <printf@plt>
  405334:	ldr	x19, [x24, #8]
  405338:	str	xzr, [sp, #160]
  40533c:	add	x2, sp, #0xa8
  405340:	cbnz	x19, 404fa0 <nftw@plt+0x2420>
  405344:	b	4050c8 <nftw@plt+0x2548>
  405348:	mov	x1, x20
  40534c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405350:	add	x0, x0, #0x58
  405354:	bl	402a90 <printf@plt>
  405358:	ldr	x19, [x24, #8]
  40535c:	cmp	x19, #0x0
  405360:	cset	w0, eq  // eq = none
  405364:	b	4050c4 <nftw@plt+0x2544>
  405368:	ubfiz	x0, x20, #1, #32
  40536c:	add	x0, x0, w20, uxtw
  405370:	lsl	x0, x0, #4
  405374:	bl	402670 <malloc@plt>
  405378:	mov	x19, x0
  40537c:	cbz	x21, 404cb0 <nftw@plt+0x2130>
  405380:	mov	w26, w20
  405384:	b	404c10 <nftw@plt+0x2090>
  405388:	stp	x29, x30, [sp, #-32]!
  40538c:	mov	x29, sp
  405390:	str	x19, [sp, #16]
  405394:	mov	w19, w0
  405398:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40539c:	ldr	x3, [x0, #1864]
  4053a0:	mov	x2, #0x1                   	// #1
  4053a4:	lsl	w1, w19, #2
  4053a8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4053ac:	add	x0, x0, #0x768
  4053b0:	bl	402950 <fwrite@plt>
  4053b4:	cmp	x0, #0x1
  4053b8:	b.eq	4053c8 <nftw@plt+0x2848>  // b.none
  4053bc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4053c0:	mov	w1, #0x1                   	// #1
  4053c4:	str	w1, [x0, #1888]
  4053c8:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4053cc:	add	x1, x1, #0x748
  4053d0:	ldr	w0, [x1, #8]
  4053d4:	add	w0, w0, w19
  4053d8:	str	w0, [x1, #8]
  4053dc:	ldr	w0, [x1, #12]
  4053e0:	sub	w19, w0, w19
  4053e4:	str	w19, [x1, #12]
  4053e8:	ldr	x19, [sp, #16]
  4053ec:	ldp	x29, x30, [sp], #32
  4053f0:	ret
  4053f4:	stp	x29, x30, [sp, #-32]!
  4053f8:	mov	x29, sp
  4053fc:	str	x19, [sp, #16]
  405400:	mov	w19, w0
  405404:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405408:	ldr	w0, [x0, #1876]
  40540c:	cmp	w0, #0x3ff
  405410:	b.hi	405440 <nftw@plt+0x28c0>  // b.pmore
  405414:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405418:	add	x2, x2, #0x748
  40541c:	ldr	w1, [x2, #12]
  405420:	add	w19, w1, w19
  405424:	str	w19, [x2, #12]
  405428:	ubfiz	x1, x1, #2, #32
  40542c:	add	x1, x1, #0x20
  405430:	add	x0, x2, x1
  405434:	ldr	x19, [sp, #16]
  405438:	ldp	x29, x30, [sp], #32
  40543c:	ret
  405440:	mov	w0, #0x400                 	// #1024
  405444:	bl	405388 <nftw@plt+0x2808>
  405448:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40544c:	ldr	w0, [x0, #1876]
  405450:	cbz	w0, 405414 <nftw@plt+0x2894>
  405454:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405458:	add	x0, x0, #0x748
  40545c:	ldr	w1, [x0, #4128]
  405460:	str	w1, [x0, #32]
  405464:	b	405414 <nftw@plt+0x2894>
  405468:	stp	x29, x30, [sp, #-32]!
  40546c:	mov	x29, sp
  405470:	stp	x19, x20, [sp, #16]
  405474:	mov	w19, w0
  405478:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40547c:	add	x1, x1, #0x748
  405480:	ldr	w0, [x1, #12]
  405484:	ldr	w4, [x1, #16]
  405488:	sub	w4, w4, w0
  40548c:	ldr	w1, [x1, #28]
  405490:	cmp	w1, #0x0
  405494:	b.le	405558 <nftw@plt+0x29d8>
  405498:	cmp	w4, w19
  40549c:	b.cs	405510 <nftw@plt+0x2990>  // b.hs, b.nlast
  4054a0:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4054a4:	add	x1, x1, #0x748
  4054a8:	ldr	w2, [x1, #8]
  4054ac:	add	w2, w2, w0
  4054b0:	str	w2, [x1, #8]
  4054b4:	cbz	w4, 4054cc <nftw@plt+0x294c>
  4054b8:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4054bc:	add	x1, x1, #0x768
  4054c0:	ldr	w1, [x1, w0, uxtw #2]
  4054c4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4054c8:	str	w1, [x0, #1896]
  4054cc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4054d0:	add	x20, x0, #0x748
  4054d4:	str	wzr, [x20, #12]
  4054d8:	str	w4, [x20, #16]
  4054dc:	ldr	x3, [x0, #1864]
  4054e0:	mov	x2, #0x1000                	// #4096
  4054e4:	mov	x1, #0x1                   	// #1
  4054e8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4054ec:	add	x0, x0, #0x768
  4054f0:	add	x0, x0, w4, uxtw #2
  4054f4:	bl	4028d0 <fread@plt>
  4054f8:	lsr	x1, x0, #2
  4054fc:	ldr	w0, [x20, #16]
  405500:	add	w0, w0, w1
  405504:	str	w0, [x20, #16]
  405508:	cmp	w0, w19
  40550c:	b.cc	40553c <nftw@plt+0x29bc>  // b.lo, b.ul, b.last
  405510:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405514:	add	x2, x2, #0x748
  405518:	ldr	w3, [x2, #12]
  40551c:	ubfiz	x1, x3, #2, #32
  405520:	add	x1, x1, #0x20
  405524:	add	x0, x1, x2
  405528:	add	w19, w3, w19
  40552c:	str	w19, [x2, #12]
  405530:	ldp	x19, x20, [sp, #16]
  405534:	ldp	x29, x30, [sp], #32
  405538:	ret
  40553c:	ldr	w2, [x20, #20]
  405540:	add	w19, w19, w2
  405544:	sub	w0, w19, w0
  405548:	str	w0, [x20, #20]
  40554c:	str	wzr, [x20, #16]
  405550:	mov	x0, #0x0                   	// #0
  405554:	b	405530 <nftw@plt+0x29b0>
  405558:	mov	x0, #0x0                   	// #0
  40555c:	b	405530 <nftw@plt+0x29b0>
  405560:	stp	x29, x30, [sp, #-64]!
  405564:	mov	x29, sp
  405568:	stp	x21, x22, [sp, #32]
  40556c:	mov	x21, x1
  405570:	cbz	x1, 4055ec <nftw@plt+0x2a6c>
  405574:	ldr	x22, [x1]
  405578:	cbz	w2, 4055d4 <nftw@plt+0x2a54>
  40557c:	stp	x19, x20, [sp, #16]
  405580:	str	x23, [sp, #48]
  405584:	add	x19, x0, #0x20
  405588:	sub	w2, w2, #0x1
  40558c:	add	x0, x0, #0x28
  405590:	add	x20, x0, x2, lsl #3
  405594:	mov	w0, #0x0                   	// #0
  405598:	b	4055c0 <nftw@plt+0x2a40>
  40559c:	add	w23, w0, #0x1
  4055a0:	ubfiz	x0, x0, #4, #32
  4055a4:	add	x0, x21, x0
  4055a8:	ldr	x0, [x0, #48]
  4055ac:	bl	402910 <free@plt>
  4055b0:	mov	w0, w23
  4055b4:	add	x19, x19, #0x8
  4055b8:	cmp	x19, x20
  4055bc:	b.eq	4055cc <nftw@plt+0x2a4c>  // b.none
  4055c0:	ldr	x2, [x19]
  4055c4:	cbnz	x2, 40559c <nftw@plt+0x2a1c>
  4055c8:	b	4055b4 <nftw@plt+0x2a34>
  4055cc:	ldp	x19, x20, [sp, #16]
  4055d0:	ldr	x23, [sp, #48]
  4055d4:	mov	x0, x21
  4055d8:	bl	402910 <free@plt>
  4055dc:	mov	x0, x22
  4055e0:	ldp	x21, x22, [sp, #32]
  4055e4:	ldp	x29, x30, [sp], #64
  4055e8:	ret
  4055ec:	mov	x22, x1
  4055f0:	b	4055dc <nftw@plt+0x2a5c>
  4055f4:	stp	x29, x30, [sp, #-32]!
  4055f8:	mov	x29, sp
  4055fc:	str	x19, [sp, #16]
  405600:	mov	x19, x0
  405604:	ldrb	w2, [x1]
  405608:	sub	w0, w2, #0x41
  40560c:	and	w0, w0, #0xff
  405610:	cmp	w0, #0x19
  405614:	b.hi	40562c <nftw@plt+0x2aac>  // b.pmore
  405618:	ldrb	w4, [x1, #1]
  40561c:	sub	w0, w4, #0x30
  405620:	and	w0, w0, #0xff
  405624:	cmp	w0, #0x9
  405628:	b.ls	405654 <nftw@plt+0x2ad4>  // b.plast
  40562c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405630:	add	x0, x0, #0x250
  405634:	ldr	x1, [x0]
  405638:	str	x1, [x19]
  40563c:	ldrh	w0, [x0, #8]
  405640:	strh	w0, [x19, #8]
  405644:	mov	x0, x19
  405648:	ldr	x19, [sp, #16]
  40564c:	ldp	x29, x30, [sp], #32
  405650:	ret
  405654:	ldrb	w3, [x1, #2]
  405658:	sub	w0, w3, #0x30
  40565c:	and	w0, w0, #0xff
  405660:	cmp	w0, #0x9
  405664:	b.hi	40562c <nftw@plt+0x2aac>  // b.pmore
  405668:	sub	w2, w2, #0x41
  40566c:	add	w2, w2, w2, lsl #2
  405670:	sub	w0, w4, #0x30
  405674:	ldrb	w5, [x1, #3]
  405678:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40567c:	add	x1, x1, #0x240
  405680:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405684:	add	x4, x4, #0x238
  405688:	cmp	w5, #0x2a
  40568c:	csel	x4, x4, x1, eq  // eq = none
  405690:	sub	w3, w3, #0x30
  405694:	add	w2, w0, w2, lsl #1
  405698:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40569c:	add	x1, x1, #0x260
  4056a0:	mov	x0, x19
  4056a4:	bl	4025b0 <sprintf@plt>
  4056a8:	b	405644 <nftw@plt+0x2ac4>
  4056ac:	stp	x29, x30, [sp, #-288]!
  4056b0:	mov	x29, sp
  4056b4:	stp	x19, x20, [sp, #16]
  4056b8:	str	x1, [sp, #232]
  4056bc:	str	x2, [sp, #240]
  4056c0:	str	x3, [sp, #248]
  4056c4:	str	x4, [sp, #256]
  4056c8:	str	x5, [sp, #264]
  4056cc:	str	x6, [sp, #272]
  4056d0:	str	x7, [sp, #280]
  4056d4:	str	q0, [sp, #96]
  4056d8:	str	q1, [sp, #112]
  4056dc:	str	q2, [sp, #128]
  4056e0:	str	q3, [sp, #144]
  4056e4:	str	q4, [sp, #160]
  4056e8:	str	q5, [sp, #176]
  4056ec:	str	q6, [sp, #192]
  4056f0:	str	q7, [sp, #208]
  4056f4:	add	x1, sp, #0x120
  4056f8:	str	x1, [sp, #64]
  4056fc:	str	x1, [sp, #72]
  405700:	add	x1, sp, #0xe0
  405704:	str	x1, [sp, #80]
  405708:	mov	w1, #0xffffffc8            	// #-56
  40570c:	str	w1, [sp, #88]
  405710:	mov	w1, #0xffffff80            	// #-128
  405714:	str	w1, [sp, #92]
  405718:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40571c:	ldr	x20, [x1, #1392]
  405720:	ldp	x2, x3, [sp, #64]
  405724:	stp	x2, x3, [sp, #32]
  405728:	ldp	x2, x3, [sp, #80]
  40572c:	stp	x2, x3, [sp, #48]
  405730:	add	x2, sp, #0x20
  405734:	mov	x1, x0
  405738:	mov	x0, x20
  40573c:	bl	402a80 <vfprintf@plt>
  405740:	mov	w19, w0
  405744:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405748:	add	x0, x0, #0x270
  40574c:	bl	402ab0 <getenv@plt>
  405750:	cbnz	x0, 405764 <nftw@plt+0x2be4>
  405754:	mov	w0, w19
  405758:	ldp	x19, x20, [sp, #16]
  40575c:	ldp	x29, x30, [sp], #288
  405760:	ret
  405764:	mov	x3, x20
  405768:	mov	x2, #0x21                  	// #33
  40576c:	mov	x1, #0x1                   	// #1
  405770:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405774:	add	x0, x0, #0x288
  405778:	bl	402950 <fwrite@plt>
  40577c:	mov	w0, #0x1                   	// #1
  405780:	bl	402520 <exit@plt>
  405784:	stp	x29, x30, [sp, #-304]!
  405788:	mov	x29, sp
  40578c:	stp	x19, x20, [sp, #16]
  405790:	mov	x19, x2
  405794:	mov	w2, #0x322a                	// #12842
  405798:	movk	w2, #0x4139, lsl #16
  40579c:	cmp	w1, w2
  4057a0:	b.eq	405838 <nftw@plt+0x2cb8>  // b.none
  4057a4:	lsr	w2, w1, #24
  4057a8:	strb	w2, [sp, #32]
  4057ac:	lsr	w2, w1, #16
  4057b0:	strb	w2, [sp, #33]
  4057b4:	lsr	w2, w1, #8
  4057b8:	strb	w2, [sp, #34]
  4057bc:	strb	w1, [sp, #35]
  4057c0:	mov	w1, #0x41                  	// #65
  4057c4:	strb	w1, [sp, #40]
  4057c8:	mov	w1, #0x39                  	// #57
  4057cc:	strb	w1, [sp, #41]
  4057d0:	mov	w1, #0x32                  	// #50
  4057d4:	strb	w1, [sp, #42]
  4057d8:	mov	w1, #0x2a                  	// #42
  4057dc:	strb	w1, [sp, #43]
  4057e0:	cbz	x19, 405830 <nftw@plt+0x2cb0>
  4057e4:	add	x1, sp, #0x28
  4057e8:	add	x0, sp, #0xb0
  4057ec:	bl	4055f4 <nftw@plt+0x2a74>
  4057f0:	mov	x20, x0
  4057f4:	add	x1, sp, #0x20
  4057f8:	add	x0, sp, #0x30
  4057fc:	bl	4055f4 <nftw@plt+0x2a74>
  405800:	add	x5, sp, #0x20
  405804:	mov	x4, x0
  405808:	add	x3, sp, #0x28
  40580c:	mov	x2, x20
  405810:	mov	x1, x19
  405814:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405818:	add	x0, x0, #0x2b0
  40581c:	bl	4056ac <nftw@plt+0x2b2c>
  405820:	mov	w0, #0x0                   	// #0
  405824:	ldp	x19, x20, [sp, #16]
  405828:	ldp	x29, x30, [sp], #304
  40582c:	ret
  405830:	ldr	x19, [x0, #24]
  405834:	b	4057e4 <nftw@plt+0x2c64>
  405838:	mov	w0, #0x1                   	// #1
  40583c:	b	405824 <nftw@plt+0x2ca4>
  405840:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405844:	add	x1, x1, #0x748
  405848:	ldr	w2, [x1, #8]
  40584c:	ldr	w0, [x1, #12]
  405850:	add	w0, w2, w0
  405854:	ret
  405858:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40585c:	ldr	x1, [x0, #1864]
  405860:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405864:	ldr	w0, [x0, #1888]
  405868:	cmp	x1, #0x0
  40586c:	csinc	w0, w0, wzr, ne  // ne = any
  405870:	ret
  405874:	stp	x29, x30, [sp, #-64]!
  405878:	mov	x29, sp
  40587c:	stp	x19, x20, [sp, #16]
  405880:	mov	x19, x0
  405884:	strh	wzr, [sp, #34]
  405888:	str	xzr, [sp, #40]
  40588c:	str	xzr, [sp, #48]
  405890:	bl	402630 <getpid@plt>
  405894:	str	w0, [sp, #56]
  405898:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40589c:	add	x1, x1, #0x748
  4058a0:	str	wzr, [x1, #8]
  4058a4:	str	wzr, [x1, #16]
  4058a8:	str	wzr, [x1, #12]
  4058ac:	mov	w0, #0xffffffff            	// #-1
  4058b0:	str	w0, [x1, #20]
  4058b4:	str	wzr, [x1, #24]
  4058b8:	mov	w0, #0x1                   	// #1
  4058bc:	strh	w0, [sp, #32]
  4058c0:	mov	w2, #0x1b6                 	// #438
  4058c4:	mov	w1, #0x42                  	// #66
  4058c8:	mov	x0, x19
  4058cc:	bl	402680 <open@plt>
  4058d0:	tbnz	w0, #31, 405950 <nftw@plt+0x2dd0>
  4058d4:	mov	w19, w0
  4058d8:	mov	w20, #0x7                   	// #7
  4058dc:	add	x2, sp, #0x20
  4058e0:	mov	w1, w20
  4058e4:	mov	w0, w19
  4058e8:	bl	402960 <fcntl@plt>
  4058ec:	cbz	w0, 405900 <nftw@plt+0x2d80>
  4058f0:	bl	402aa0 <__errno_location@plt>
  4058f4:	ldr	w0, [x0]
  4058f8:	cmp	w0, #0x4
  4058fc:	b.eq	4058dc <nftw@plt+0x2d5c>  // b.none
  405900:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405904:	add	x1, x1, #0x300
  405908:	mov	w0, w19
  40590c:	bl	449164 <nftw@plt+0x465e4>
  405910:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405914:	str	x0, [x1, #1864]
  405918:	cbz	x0, 405940 <nftw@plt+0x2dc0>
  40591c:	mov	w19, #0x1                   	// #1
  405920:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405924:	str	w19, [x1, #1892]
  405928:	mov	x1, #0x0                   	// #0
  40592c:	bl	402570 <setbuf@plt>
  405930:	mov	w0, w19
  405934:	ldp	x19, x20, [sp, #16]
  405938:	ldp	x29, x30, [sp], #64
  40593c:	ret
  405940:	mov	w0, w19
  405944:	bl	4027a0 <close@plt>
  405948:	mov	w0, #0x0                   	// #0
  40594c:	b	405934 <nftw@plt+0x2db4>
  405950:	mov	w0, #0x0                   	// #0
  405954:	b	405934 <nftw@plt+0x2db4>
  405958:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40595c:	ldr	x0, [x0, #1864]
  405960:	cbz	x0, 4059c4 <nftw@plt+0x2e44>
  405964:	stp	x29, x30, [sp, #-32]!
  405968:	mov	x29, sp
  40596c:	stp	x19, x20, [sp, #16]
  405970:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405974:	ldr	w0, [x0, #1876]
  405978:	cbz	w0, 405988 <nftw@plt+0x2e08>
  40597c:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405980:	ldr	w1, [x1, #1892]
  405984:	tbnz	w1, #31, 4059bc <nftw@plt+0x2e3c>
  405988:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40598c:	add	x20, x19, #0x748
  405990:	ldr	x0, [x19, #1864]
  405994:	bl	402620 <fclose@plt>
  405998:	str	xzr, [x19, #1864]
  40599c:	str	wzr, [x20, #16]
  4059a0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4059a4:	add	x0, x0, #0x748
  4059a8:	str	wzr, [x0, #28]
  4059ac:	ldr	w0, [x0, #24]
  4059b0:	ldp	x19, x20, [sp, #16]
  4059b4:	ldp	x29, x30, [sp], #32
  4059b8:	ret
  4059bc:	bl	405388 <nftw@plt+0x2808>
  4059c0:	b	405988 <nftw@plt+0x2e08>
  4059c4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4059c8:	add	x0, x0, #0x748
  4059cc:	str	wzr, [x0, #28]
  4059d0:	ldr	w0, [x0, #24]
  4059d4:	ret
  4059d8:	stp	x29, x30, [sp, #-32]!
  4059dc:	mov	x29, sp
  4059e0:	str	x19, [sp, #16]
  4059e4:	mov	w19, w0
  4059e8:	mov	w0, #0x1                   	// #1
  4059ec:	bl	4053f4 <nftw@plt+0x2874>
  4059f0:	str	w19, [x0]
  4059f4:	ldr	x19, [sp, #16]
  4059f8:	ldp	x29, x30, [sp], #32
  4059fc:	ret
  405a00:	stp	x29, x30, [sp, #-32]!
  405a04:	mov	x29, sp
  405a08:	str	x19, [sp, #16]
  405a0c:	mov	x19, x0
  405a10:	mov	w0, #0x2                   	// #2
  405a14:	bl	4053f4 <nftw@plt+0x2874>
  405a18:	str	w19, [x0]
  405a1c:	asr	x19, x19, #32
  405a20:	str	w19, [x0, #4]
  405a24:	ldr	x19, [sp, #16]
  405a28:	ldp	x29, x30, [sp], #32
  405a2c:	ret
  405a30:	stp	x29, x30, [sp, #-32]!
  405a34:	mov	x29, sp
  405a38:	stp	x19, x20, [sp, #16]
  405a3c:	mov	w20, w0
  405a40:	mov	w19, w1
  405a44:	mov	w0, #0x2                   	// #2
  405a48:	bl	4053f4 <nftw@plt+0x2874>
  405a4c:	str	w20, [x0]
  405a50:	str	w19, [x0, #4]
  405a54:	ldp	x19, x20, [sp, #16]
  405a58:	ldp	x29, x30, [sp], #32
  405a5c:	ret
  405a60:	stp	x29, x30, [sp, #-32]!
  405a64:	mov	x29, sp
  405a68:	str	x19, [sp, #16]
  405a6c:	mov	x19, x1
  405a70:	mov	w1, #0x2                   	// #2
  405a74:	bl	405a30 <nftw@plt+0x2eb0>
  405a78:	ldr	w0, [x19]
  405a7c:	bl	4059d8 <nftw@plt+0x2e58>
  405a80:	ldr	w0, [x19, #8]
  405a84:	bl	4059d8 <nftw@plt+0x2e58>
  405a88:	ldr	x19, [sp, #16]
  405a8c:	ldp	x29, x30, [sp], #32
  405a90:	ret
  405a94:	stp	x29, x30, [sp, #-16]!
  405a98:	mov	x29, sp
  405a9c:	mov	w0, #0x1                   	// #1
  405aa0:	bl	405468 <nftw@plt+0x28e8>
  405aa4:	cbz	x0, 405ab4 <nftw@plt+0x2f34>
  405aa8:	ldr	w0, [x0]
  405aac:	ldp	x29, x30, [sp], #16
  405ab0:	ret
  405ab4:	mov	w0, #0x0                   	// #0
  405ab8:	b	405aac <nftw@plt+0x2f2c>
  405abc:	stp	x29, x30, [sp, #-16]!
  405ac0:	mov	x29, sp
  405ac4:	mov	w0, #0x2                   	// #2
  405ac8:	bl	405468 <nftw@plt+0x28e8>
  405acc:	cbz	x0, 405ae4 <nftw@plt+0x2f64>
  405ad0:	ldr	w1, [x0]
  405ad4:	ldr	w0, [x0, #4]
  405ad8:	orr	x0, x1, x0, lsl #32
  405adc:	ldp	x29, x30, [sp], #16
  405ae0:	ret
  405ae4:	mov	x0, #0x0                   	// #0
  405ae8:	b	405adc <nftw@plt+0x2f5c>
  405aec:	stp	x29, x30, [sp, #-96]!
  405af0:	mov	x29, sp
  405af4:	stp	x19, x20, [sp, #16]
  405af8:	stp	x21, x22, [sp, #32]
  405afc:	stp	x23, x24, [sp, #48]
  405b00:	stp	x25, x26, [sp, #64]
  405b04:	stp	x27, x28, [sp, #80]
  405b08:	mov	x21, x0
  405b0c:	bl	4024f0 <strlen@plt>
  405b10:	add	x0, x0, #0x1
  405b14:	bl	402670 <malloc@plt>
  405b18:	mov	x24, x0
  405b1c:	mov	x23, x0
  405b20:	mov	w27, #0x5e                  	// #94
  405b24:	mov	x26, #0x0                   	// #0
  405b28:	mov	x25, #0x2                   	// #2
  405b2c:	mov	w28, #0x23                  	// #35
  405b30:	b	405b5c <nftw@plt+0x2fdc>
  405b34:	mov	x20, x21
  405b38:	mov	w19, w0
  405b3c:	mov	x22, x26
  405b40:	mov	x2, x22
  405b44:	mov	x1, x21
  405b48:	mov	x0, x23
  405b4c:	bl	402490 <memcpy@plt>
  405b50:	add	x23, x23, x22
  405b54:	mov	x21, x20
  405b58:	cbnz	w19, 405bac <nftw@plt+0x302c>
  405b5c:	ldrb	w0, [x21]
  405b60:	cbz	w0, 405bb8 <nftw@plt+0x3038>
  405b64:	cmp	w0, #0x2f
  405b68:	b.eq	405b34 <nftw@plt+0x2fb4>  // b.none
  405b6c:	mov	x20, x21
  405b70:	ldrb	w19, [x20, #1]!
  405b74:	cmp	w19, #0x2f
  405b78:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  405b7c:	b.ne	405b70 <nftw@plt+0x2ff0>  // b.any
  405b80:	sub	x22, x20, x21
  405b84:	cmp	w0, #0x2e
  405b88:	ccmp	x22, #0x2, #0x0, eq  // eq = none
  405b8c:	b.ne	405b40 <nftw@plt+0x2fc0>  // b.any
  405b90:	ldrb	w0, [x21, #1]
  405b94:	mov	x22, x25
  405b98:	cmp	w0, #0x2e
  405b9c:	b.ne	405b40 <nftw@plt+0x2fc0>  // b.any
  405ba0:	strb	w27, [x23], #1
  405ba4:	mov	x21, x20
  405ba8:	b	405b58 <nftw@plt+0x2fd8>
  405bac:	strb	w28, [x23], #1
  405bb0:	add	x21, x21, #0x1
  405bb4:	b	405b5c <nftw@plt+0x2fdc>
  405bb8:	strb	wzr, [x23]
  405bbc:	mov	x0, x24
  405bc0:	ldp	x19, x20, [sp, #16]
  405bc4:	ldp	x21, x22, [sp, #32]
  405bc8:	ldp	x23, x24, [sp, #48]
  405bcc:	ldp	x25, x26, [sp, #64]
  405bd0:	ldp	x27, x28, [sp, #80]
  405bd4:	ldp	x29, x30, [sp], #96
  405bd8:	ret
  405bdc:	stp	x29, x30, [sp, #-16]!
  405be0:	mov	x29, sp
  405be4:	bl	405a94 <nftw@plt+0x2f14>
  405be8:	mov	w1, w0
  405bec:	mov	x0, #0x0                   	// #0
  405bf0:	cbz	w1, 405bfc <nftw@plt+0x307c>
  405bf4:	mov	w0, w1
  405bf8:	bl	405468 <nftw@plt+0x28e8>
  405bfc:	ldp	x29, x30, [sp], #16
  405c00:	ret
  405c04:	stp	x29, x30, [sp, #-32]!
  405c08:	mov	x29, sp
  405c0c:	str	x19, [sp, #16]
  405c10:	mov	x19, x0
  405c14:	bl	405a94 <nftw@plt+0x2f14>
  405c18:	str	w0, [x19]
  405c1c:	bl	405a94 <nftw@plt+0x2f14>
  405c20:	mov	w0, w0
  405c24:	str	x0, [x19, #8]
  405c28:	ldr	x19, [sp, #16]
  405c2c:	ldp	x29, x30, [sp], #32
  405c30:	ret
  405c34:	add	w1, w0, w1
  405c38:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405c3c:	add	x2, x2, #0x748
  405c40:	ldr	w3, [x2, #8]
  405c44:	sub	w3, w1, w3
  405c48:	ldr	w0, [x2, #16]
  405c4c:	cmp	w3, w0
  405c50:	b.hi	405c60 <nftw@plt+0x30e0>  // b.pmore
  405c54:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405c58:	str	w3, [x0, #1876]
  405c5c:	ret
  405c60:	stp	x29, x30, [sp, #-32]!
  405c64:	mov	x29, sp
  405c68:	stp	x19, x20, [sp, #16]
  405c6c:	adrp	x20, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405c70:	add	x19, x20, #0x748
  405c74:	str	wzr, [x19, #16]
  405c78:	str	wzr, [x19, #12]
  405c7c:	mov	w2, #0x0                   	// #0
  405c80:	lsl	w1, w1, #2
  405c84:	ldr	x0, [x20, #1864]
  405c88:	bl	4027e0 <fseek@plt>
  405c8c:	ldr	x0, [x20, #1864]
  405c90:	bl	4025a0 <ftell@plt>
  405c94:	asr	x0, x0, #2
  405c98:	str	w0, [x19, #8]
  405c9c:	ldp	x19, x20, [sp, #16]
  405ca0:	ldp	x29, x30, [sp], #32
  405ca4:	ret
  405ca8:	stp	x29, x30, [sp, #-48]!
  405cac:	mov	x29, sp
  405cb0:	stp	x19, x20, [sp, #16]
  405cb4:	str	x21, [sp, #32]
  405cb8:	mov	w20, w0
  405cbc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405cc0:	ldr	w0, [x0, #1876]
  405cc4:	cbnz	w0, 405d00 <nftw@plt+0x3180>
  405cc8:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  405ccc:	add	x21, x19, #0x748
  405cd0:	mov	w2, #0x0                   	// #0
  405cd4:	lsl	w1, w20, #2
  405cd8:	ldr	x0, [x19, #1864]
  405cdc:	bl	4027e0 <fseek@plt>
  405ce0:	ldr	x0, [x19, #1864]
  405ce4:	bl	4025a0 <ftell@plt>
  405ce8:	asr	x0, x0, #2
  405cec:	str	w0, [x21, #8]
  405cf0:	ldp	x19, x20, [sp, #16]
  405cf4:	ldr	x21, [sp, #32]
  405cf8:	ldp	x29, x30, [sp], #48
  405cfc:	ret
  405d00:	bl	405388 <nftw@plt+0x2808>
  405d04:	b	405cc8 <nftw@plt+0x3148>
  405d08:	cmp	w1, #0x2
  405d0c:	b.le	405d94 <nftw@plt+0x3214>
  405d10:	mov	x8, x0
  405d14:	sub	w1, w1, #0x3
  405d18:	and	w10, w1, #0xfffffffe
  405d1c:	mov	w7, #0x0                   	// #0
  405d20:	b	405d4c <nftw@plt+0x31cc>
  405d24:	sxtw	x2, w2
  405d28:	add	x2, x2, #0x2
  405d2c:	str	x9, [x0, x2, lsl #3]
  405d30:	add	x2, x0, x2, lsl #3
  405d34:	str	x5, [x2, #8]
  405d38:	add	w1, w7, #0x2
  405d3c:	add	x8, x8, #0x10
  405d40:	cmp	w7, w10
  405d44:	b.eq	405d94 <nftw@plt+0x3214>  // b.none
  405d48:	mov	w7, w1
  405d4c:	ldr	x9, [x8, #16]
  405d50:	ldr	x5, [x8, #24]
  405d54:	mov	w2, w7
  405d58:	tbnz	w7, #31, 405d24 <nftw@plt+0x31a4>
  405d5c:	orr	w6, w7, #0xfffffffe
  405d60:	mov	x1, x8
  405d64:	ldr	x3, [x1, #8]
  405d68:	cmp	x5, x3
  405d6c:	b.le	405d24 <nftw@plt+0x31a4>
  405d70:	ldr	x4, [x1]
  405d74:	str	x4, [x1, #16]
  405d78:	str	x3, [x1, #24]
  405d7c:	sub	w2, w2, #0x2
  405d80:	sub	x1, x1, #0x10
  405d84:	cmp	w2, w6
  405d88:	b.ne	405d64 <nftw@plt+0x31e4>  // b.any
  405d8c:	mov	w2, w6
  405d90:	b	405d24 <nftw@plt+0x31a4>
  405d94:	ret
  405d98:	stp	x29, x30, [sp, #-208]!
  405d9c:	mov	x29, sp
  405da0:	stp	x19, x20, [sp, #16]
  405da4:	stp	x21, x22, [sp, #32]
  405da8:	mov	x22, x0
  405dac:	str	w1, [sp, #148]
  405db0:	cbz	x0, 405e18 <nftw@plt+0x3298>
  405db4:	mov	x7, x0
  405db8:	mov	x19, #0x0                   	// #0
  405dbc:	b	405e04 <nftw@plt+0x3284>
  405dc0:	add	x4, x4, #0x1
  405dc4:	cmp	w5, w4
  405dc8:	b.eq	405dfc <nftw@plt+0x327c>  // b.none
  405dcc:	ldr	x0, [x6, x4, lsl #3]
  405dd0:	ldr	w2, [x0, #24]
  405dd4:	cbz	w2, 405dc0 <nftw@plt+0x3240>
  405dd8:	ldr	x3, [x0, #32]
  405ddc:	mov	x0, #0x0                   	// #0
  405de0:	ldr	x1, [x3, x0, lsl #3]
  405de4:	cmp	x19, x1
  405de8:	csel	x19, x19, x1, ge  // ge = tcont
  405dec:	add	x0, x0, #0x1
  405df0:	cmp	w2, w0
  405df4:	b.hi	405de0 <nftw@plt+0x3260>  // b.pmore
  405df8:	b	405dc0 <nftw@plt+0x3240>
  405dfc:	ldr	x7, [x7, #8]
  405e00:	cbz	x7, 405e1c <nftw@plt+0x329c>
  405e04:	ldr	w5, [x7, #104]
  405e08:	cbz	w5, 405dfc <nftw@plt+0x327c>
  405e0c:	ldr	x6, [x7, #112]
  405e10:	mov	x4, #0x0                   	// #0
  405e14:	b	405dcc <nftw@plt+0x324c>
  405e18:	mov	x19, #0x0                   	// #0
  405e1c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405e20:	add	x0, x0, #0x388
  405e24:	bl	402ab0 <getenv@plt>
  405e28:	cbz	x0, 40686c <nftw@plt+0x3cec>
  405e2c:	mov	w2, #0xa                   	// #10
  405e30:	mov	x1, #0x0                   	// #0
  405e34:	bl	4028c0 <strtol@plt>
  405e38:	cmp	w0, #0x0
  405e3c:	csel	w0, w0, wzr, ge  // ge = tcont
  405e40:	str	w0, [sp, #144]
  405e44:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405e48:	add	x0, x0, #0x3a0
  405e4c:	bl	402ab0 <getenv@plt>
  405e50:	mov	x20, x0
  405e54:	cbz	x0, 406808 <nftw@plt+0x3c88>
  405e58:	mov	x0, x20
  405e5c:	bl	4024f0 <strlen@plt>
  405e60:	mov	x21, x0
  405e64:	cbz	x0, 406808 <nftw@plt+0x3c88>
  405e68:	sub	x0, x0, #0x1
  405e6c:	ldrb	w1, [x20, x0]
  405e70:	cmp	w1, #0x2f
  405e74:	b.ne	40681c <nftw@plt+0x3c9c>  // b.any
  405e78:	cmp	x0, #0x0
  405e7c:	ldr	w1, [sp, #144]
  405e80:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  405e84:	b.ne	405e94 <nftw@plt+0x3314>  // b.any
  405e88:	cbz	x0, 405ea4 <nftw@plt+0x3324>
  405e8c:	mov	x21, x0
  405e90:	b	40681c <nftw@plt+0x3c9c>
  405e94:	mov	x21, #0x1                   	// #1
  405e98:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  405e9c:	add	x20, x20, #0x860
  405ea0:	b	40681c <nftw@plt+0x3c9c>
  405ea4:	str	xzr, [sp, #128]
  405ea8:	b	406838 <nftw@plt+0x3cb8>
  405eac:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405eb0:	add	x2, x2, #0x3b0
  405eb4:	mov	w1, #0x1c7                 	// #455
  405eb8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  405ebc:	add	x0, x0, #0x3d0
  405ec0:	bl	408d8c <nftw@plt+0x620c>
  405ec4:	add	x1, x1, #0x10
  405ec8:	add	x0, x0, #0x1
  405ecc:	cmp	x0, #0x9
  405ed0:	b.eq	405f34 <nftw@plt+0x33b4>  // b.none
  405ed4:	ldr	x2, [x24, x0, lsl #3]
  405ed8:	cbz	x2, 405ec8 <nftw@plt+0x3348>
  405edc:	cmp	w0, #0x8
  405ee0:	b.ne	405ec4 <nftw@plt+0x3344>  // b.any
  405ee4:	ldr	w23, [x1]
  405ee8:	mov	w0, #0x8e39                	// #36409
  405eec:	movk	w0, #0x38e3, lsl #16
  405ef0:	smull	x20, w23, w0
  405ef4:	asr	x20, x20, #33
  405ef8:	sub	w20, w20, w23, asr #31
  405efc:	add	w20, w20, w20, lsl #3
  405f00:	subs	w20, w23, w20
  405f04:	b.ne	405eac <nftw@plt+0x332c>  // b.any
  405f08:	ldr	x21, [x1, #8]
  405f0c:	cmp	w23, #0x0
  405f10:	b.le	405f34 <nftw@plt+0x33b4>
  405f14:	add	x21, x21, #0x8
  405f18:	mov	w1, w26
  405f1c:	mov	x0, x21
  405f20:	bl	405d08 <nftw@plt+0x3188>
  405f24:	add	w20, w20, #0x9
  405f28:	add	x21, x21, #0x48
  405f2c:	cmp	w23, w20
  405f30:	b.gt	405f18 <nftw@plt+0x3398>
  405f34:	add	x25, x25, #0x1
  405f38:	ldr	w0, [x22, #104]
  405f3c:	cmp	w0, w25
  405f40:	b.eq	405f58 <nftw@plt+0x33d8>  // b.none
  405f44:	ldr	x0, [x22, #112]
  405f48:	ldr	x1, [x0, x25, lsl #3]
  405f4c:	add	x1, x1, #0x18
  405f50:	mov	x0, #0x0                   	// #0
  405f54:	b	405ed4 <nftw@plt+0x3354>
  405f58:	ldr	x21, [x22, #24]
  405f5c:	ldr	w2, [sp, #144]
  405f60:	cmp	w2, #0x0
  405f64:	b.le	405f80 <nftw@plt+0x3400>
  405f68:	ldrb	w0, [x21]
  405f6c:	cmp	w0, #0x2f
  405f70:	cset	w0, eq  // eq = none
  405f74:	cinc	x1, x21, eq  // eq = none
  405f78:	ldrb	w0, [x21, w0, uxtw]
  405f7c:	cbnz	w0, 406000 <nftw@plt+0x3480>
  405f80:	ldr	x25, [sp, #128]
  405f84:	cbz	x25, 4067ec <nftw@plt+0x3c6c>
  405f88:	ldrb	w24, [x21]
  405f8c:	mov	x0, x25
  405f90:	bl	4024f0 <strlen@plt>
  405f94:	mov	x20, x0
  405f98:	mov	x0, x21
  405f9c:	bl	4024f0 <strlen@plt>
  405fa0:	add	x0, x20, x0
  405fa4:	add	x0, x0, #0x2
  405fa8:	bl	402670 <malloc@plt>
  405fac:	mov	x23, x0
  405fb0:	strb	wzr, [x0]
  405fb4:	cbnz	x20, 406014 <nftw@plt+0x3494>
  405fb8:	mov	x20, x23
  405fbc:	cmp	w24, #0x2f
  405fc0:	b.eq	405fcc <nftw@plt+0x344c>  // b.none
  405fc4:	mov	w0, #0x2f                  	// #47
  405fc8:	strb	w0, [x20], #1
  405fcc:	mov	x1, x21
  405fd0:	mov	x0, x20
  405fd4:	bl	4026e0 <strcat@plt>
  405fd8:	strb	wzr, [sp, #168]
  405fdc:	ldrb	w1, [x20]
  405fe0:	cbz	w1, 406170 <nftw@plt+0x35f0>
  405fe4:	mov	x24, x20
  405fe8:	add	x28, sp, #0xa8
  405fec:	b	4060c0 <nftw@plt+0x3540>
  405ff0:	ldrb	w0, [x1, #1]!
  405ff4:	cmp	w2, #0x0
  405ff8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  405ffc:	b.eq	405f80 <nftw@plt+0x3400>  // b.none
  406000:	cmp	w0, #0x2f
  406004:	b.ne	405ff0 <nftw@plt+0x3470>  // b.any
  406008:	sub	w2, w2, #0x1
  40600c:	mov	x21, x1
  406010:	b	405ff0 <nftw@plt+0x3470>
  406014:	mov	x1, x25
  406018:	bl	4026e0 <strcat@plt>
  40601c:	b	405fb8 <nftw@plt+0x3438>
  406020:	bl	402630 <getpid@plt>
  406024:	mov	w2, w0
  406028:	ldr	x1, [sp, #136]
  40602c:	add	x0, sp, #0xc0
  406030:	bl	4025b0 <sprintf@plt>
  406034:	add	x25, x20, #0x2
  406038:	add	x26, sp, #0xc0
  40603c:	sub	x20, x20, x24
  406040:	sub	x0, x25, x24
  406044:	sub	w21, w21, w0
  406048:	mov	x0, x26
  40604c:	bl	4024f0 <strlen@plt>
  406050:	mov	x23, x0
  406054:	add	w1, w20, #0x1
  406058:	add	w0, w21, w0
  40605c:	add	w0, w1, w0
  406060:	bl	402670 <malloc@plt>
  406064:	mov	x27, x0
  406068:	and	x20, x20, #0xffffffff
  40606c:	mov	x2, x20
  406070:	mov	x1, x24
  406074:	bl	402490 <memcpy@plt>
  406078:	and	x23, x23, #0xffffffff
  40607c:	mov	x2, x23
  406080:	mov	x1, x26
  406084:	add	x0, x0, x20
  406088:	bl	402490 <memcpy@plt>
  40608c:	mov	w2, w21
  406090:	mov	x1, x25
  406094:	add	x0, x0, x23
  406098:	bl	402490 <memcpy@plt>
  40609c:	strb	wzr, [x0, w21, uxtw]
  4060a0:	mov	x0, x24
  4060a4:	bl	402910 <free@plt>
  4060a8:	add	x23, x20, x23
  4060ac:	add	x0, x27, x23
  4060b0:	mov	x24, x27
  4060b4:	add	x20, x0, #0x1
  4060b8:	ldrb	w1, [x0, #1]
  4060bc:	cbz	w1, 4060f0 <nftw@plt+0x3570>
  4060c0:	mov	x0, x20
  4060c4:	cmp	w1, #0x25
  4060c8:	b.ne	4060b4 <nftw@plt+0x3534>  // b.any
  4060cc:	ldrb	w23, [x20, #1]
  4060d0:	cbz	w23, 4060f0 <nftw@plt+0x3570>
  4060d4:	mov	x0, x24
  4060d8:	bl	4024f0 <strlen@plt>
  4060dc:	mov	x21, x0
  4060e0:	cmp	w23, #0x70
  4060e4:	b.eq	406020 <nftw@plt+0x34a0>  // b.none
  4060e8:	cmp	w23, #0x71
  4060ec:	b.eq	406128 <nftw@plt+0x35a8>  // b.none
  4060f0:	mov	x0, x24
  4060f4:	bl	405874 <nftw@plt+0x2cf4>
  4060f8:	cbz	w0, 406178 <nftw@plt+0x35f8>
  4060fc:	bl	405a94 <nftw@plt+0x2f14>
  406100:	cbz	w0, 406258 <nftw@plt+0x36d8>
  406104:	mov	w1, #0x6461                	// #25697
  406108:	movk	w1, #0x6763, lsl #16
  40610c:	cmp	w0, w1
  406110:	b.eq	406220 <nftw@plt+0x36a0>  // b.none
  406114:	mov	x1, x24
  406118:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40611c:	add	x0, x0, #0x460
  406120:	bl	4056ac <nftw@plt+0x2b2c>
  406124:	b	406698 <nftw@plt+0x3b18>
  406128:	ldrb	w0, [x20, #2]
  40612c:	cmp	w0, #0x7b
  406130:	b.eq	406140 <nftw@plt+0x35c0>  // b.none
  406134:	add	x25, x20, #0x1
  406138:	mov	x26, #0x0                   	// #0
  40613c:	b	40603c <nftw@plt+0x34bc>
  406140:	add	x23, x20, #0x3
  406144:	mov	w1, #0x7d                  	// #125
  406148:	mov	x0, x23
  40614c:	bl	402940 <strchr@plt>
  406150:	mov	x25, x0
  406154:	cbz	x0, 4060f0 <nftw@plt+0x3570>
  406158:	strb	wzr, [x25], #1
  40615c:	mov	x0, x23
  406160:	bl	402ab0 <getenv@plt>
  406164:	cmp	x0, #0x0
  406168:	csel	x26, x28, x0, eq  // eq = none
  40616c:	b	40603c <nftw@plt+0x34bc>
  406170:	mov	x24, x20
  406174:	b	4060f0 <nftw@plt+0x3570>
  406178:	ldrb	w0, [x24]
  40617c:	cmp	w0, #0x2f
  406180:	cset	w0, eq  // eq = none
  406184:	cinc	x20, x24, eq  // eq = none
  406188:	ldrb	w0, [x24, w0, uxtw]
  40618c:	cbz	w0, 4067c4 <nftw@plt+0x3c44>
  406190:	mov	w21, #0x2f                  	// #47
  406194:	mov	w23, #0x1ed                 	// #493
  406198:	b	4061a8 <nftw@plt+0x3628>
  40619c:	strb	w21, [x20]
  4061a0:	ldrb	w0, [x20, #1]!
  4061a4:	cbz	w0, 4067c4 <nftw@plt+0x3c44>
  4061a8:	cmp	w0, #0x2f
  4061ac:	b.ne	4061a0 <nftw@plt+0x3620>  // b.any
  4061b0:	strb	wzr, [x20]
  4061b4:	mov	w1, #0x0                   	// #0
  4061b8:	mov	x0, x24
  4061bc:	bl	402810 <access@plt>
  4061c0:	cmn	w0, #0x1
  4061c4:	b.ne	40619c <nftw@plt+0x361c>  // b.any
  4061c8:	mov	w1, w23
  4061cc:	mov	x0, x24
  4061d0:	bl	402b20 <mkdir@plt>
  4061d4:	cmn	w0, #0x1
  4061d8:	b.ne	40619c <nftw@plt+0x361c>  // b.any
  4061dc:	bl	402aa0 <__errno_location@plt>
  4061e0:	ldr	w0, [x0]
  4061e4:	cmp	w0, #0x11
  4061e8:	b.eq	40619c <nftw@plt+0x361c>  // b.none
  4061ec:	mov	x1, x24
  4061f0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4061f4:	add	x0, x0, #0x400
  4061f8:	bl	4056ac <nftw@plt+0x2b2c>
  4061fc:	mov	w0, #0x2f                  	// #47
  406200:	strb	w0, [x20]
  406204:	mov	x2, x24
  406208:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40620c:	add	x1, x1, #0x428
  406210:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  406214:	ldr	x0, [x0, #1392]
  406218:	bl	402b30 <fprintf@plt>
  40621c:	b	4066ec <nftw@plt+0x3b6c>
  406220:	bl	405a94 <nftw@plt+0x2f14>
  406224:	mov	x2, x24
  406228:	mov	w1, w0
  40622c:	mov	x0, x22
  406230:	bl	405784 <nftw@plt+0x2c04>
  406234:	cbz	w0, 406698 <nftw@plt+0x3b18>
  406238:	bl	405a94 <nftw@plt+0x2f14>
  40623c:	ldr	w1, [x22, #16]
  406240:	cmp	w0, w1
  406244:	b.eq	4062dc <nftw@plt+0x375c>  // b.none
  406248:	mov	x1, x24
  40624c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406250:	add	x0, x0, #0x498
  406254:	bl	4056ac <nftw@plt+0x2b2c>
  406258:	adrp	x3, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40625c:	add	x0, x3, #0x748
  406260:	mov	w1, #0xffffffff            	// #-1
  406264:	str	w1, [x0, #28]
  406268:	str	wzr, [x0, #8]
  40626c:	str	wzr, [x0, #12]
  406270:	mov	w2, #0x0                   	// #0
  406274:	mov	x1, #0x0                   	// #0
  406278:	ldr	x0, [x3, #1864]
  40627c:	bl	4027e0 <fseek@plt>
  406280:	ldr	w0, [sp, #148]
  406284:	cbnz	w0, 4062a0 <nftw@plt+0x3720>
  406288:	ldr	w0, [sp, #176]
  40628c:	add	w0, w0, #0x1
  406290:	str	w0, [sp, #176]
  406294:	ldr	x0, [sp, #184]
  406298:	add	x0, x0, x19
  40629c:	str	x0, [sp, #184]
  4062a0:	mov	w1, #0x322a                	// #12842
  4062a4:	movk	w1, #0x4139, lsl #16
  4062a8:	mov	w0, #0x6461                	// #25697
  4062ac:	movk	w0, #0x6763, lsl #16
  4062b0:	bl	405a30 <nftw@plt+0x2eb0>
  4062b4:	ldr	w0, [x22, #16]
  4062b8:	bl	4059d8 <nftw@plt+0x2e58>
  4062bc:	add	x1, sp, #0xb0
  4062c0:	mov	w0, #0xa1000000            	// #-1593835520
  4062c4:	bl	405a60 <nftw@plt+0x2ee0>
  4062c8:	ldr	w0, [x22, #104]
  4062cc:	cbz	w0, 406690 <nftw@plt+0x3b10>
  4062d0:	mov	w26, #0x0                   	// #0
  4062d4:	adrp	x28, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4062d8:	b	406768 <nftw@plt+0x3be8>
  4062dc:	bl	405a94 <nftw@plt+0x2f14>
  4062e0:	mov	w1, #0xa1000000            	// #-1593835520
  4062e4:	cmp	w0, w1
  4062e8:	b.ne	40679c <nftw@plt+0x3c1c>  // b.any
  4062ec:	bl	405a94 <nftw@plt+0x2f14>
  4062f0:	cbz	w0, 406340 <nftw@plt+0x37c0>
  4062f4:	add	x0, sp, #0xb0
  4062f8:	bl	405c04 <nftw@plt+0x3084>
  4062fc:	bl	405a94 <nftw@plt+0x2f14>
  406300:	ldr	w1, [x22, #104]
  406304:	cbz	w1, 406860 <nftw@plt+0x3ce0>
  406308:	ldr	x1, [x22, #112]
  40630c:	ldr	x25, [x1]
  406310:	mov	w1, #0x1000000             	// #16777216
  406314:	cmp	w0, w1
  406318:	b.ne	4067bc <nftw@plt+0x3c3c>  // b.any
  40631c:	str	xzr, [sp, #104]
  406320:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  406324:	add	x0, x0, #0x740
  406328:	str	x0, [sp, #120]
  40632c:	add	x27, x22, #0x18
  406330:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406334:	add	x0, x0, #0x508
  406338:	str	x0, [sp, #152]
  40633c:	b	406424 <nftw@plt+0x38a4>
  406340:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406344:	add	x2, x2, #0x4f8
  406348:	mov	w1, #0xf8                  	// #248
  40634c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406350:	add	x0, x0, #0x3d0
  406354:	bl	408d8c <nftw@plt+0x620c>
  406358:	add	w26, w26, #0x1
  40635c:	add	x23, x23, #0x1
  406360:	cmp	x23, #0x9
  406364:	b.eq	4063dc <nftw@plt+0x385c>  // b.none
  406368:	ldr	x0, [x28, x23, lsl #3]
  40636c:	cbz	x0, 40635c <nftw@plt+0x37dc>
  406370:	bl	405a94 <nftw@plt+0x2f14>
  406374:	mov	w1, #0x1a10000             	// #27328512
  406378:	add	w1, w1, w23, lsl #17
  40637c:	cmp	w0, w1
  406380:	b.ne	4064b4 <nftw@plt+0x3934>  // b.any
  406384:	bl	405a94 <nftw@plt+0x2f14>
  406388:	str	w0, [sp, #100]
  40638c:	lsr	w21, w0, #1
  406390:	lsl	w0, w21, #3
  406394:	bl	402670 <malloc@plt>
  406398:	mov	x20, x0
  40639c:	ubfiz	x0, x26, #4, #32
  4063a0:	add	x0, x25, x0
  4063a4:	str	w21, [x0, #40]
  4063a8:	str	x20, [x0, #48]
  4063ac:	sub	w21, w21, #0x1
  4063b0:	ldr	w0, [sp, #100]
  4063b4:	cmp	w0, #0x1
  4063b8:	b.ls	406358 <nftw@plt+0x37d8>  // b.plast
  4063bc:	ubfiz	x21, x21, #3, #32
  4063c0:	add	x21, x21, #0x8
  4063c4:	add	x21, x20, x21
  4063c8:	bl	405abc <nftw@plt+0x2f3c>
  4063cc:	str	x0, [x20], #8
  4063d0:	cmp	x20, x21
  4063d4:	b.ne	4063c8 <nftw@plt+0x3848>  // b.any
  4063d8:	b	406358 <nftw@plt+0x37d8>
  4063dc:	ldr	x0, [sp, #120]
  4063e0:	str	x25, [x0]
  4063e4:	str	x25, [sp, #120]
  4063e8:	ldr	w0, [sp, #112]
  4063ec:	add	w20, w0, #0x1
  4063f0:	str	w20, [sp, #116]
  4063f4:	bl	405a94 <nftw@plt+0x2f14>
  4063f8:	ldr	w1, [x22, #104]
  4063fc:	cmp	w20, w1
  406400:	b.eq	4065d0 <nftw@plt+0x3a50>  // b.none
  406404:	ldr	x1, [sp, #104]
  406408:	add	x1, x1, #0x1
  40640c:	ldr	x2, [x22, #112]
  406410:	ldr	x25, [x2, x1, lsl #3]
  406414:	str	x1, [sp, #104]
  406418:	mov	w1, #0x1000000             	// #16777216
  40641c:	cmp	w0, w1
  406420:	b.ne	4064e8 <nftw@plt+0x3968>  // b.any
  406424:	ldr	x0, [sp, #104]
  406428:	str	w0, [sp, #112]
  40642c:	str	w0, [sp, #116]
  406430:	bl	405a94 <nftw@plt+0x2f14>
  406434:	cbz	w0, 4063e8 <nftw@plt+0x3868>
  406438:	cmp	w0, #0x3
  40643c:	b.ne	4064e8 <nftw@plt+0x3968>  // b.any
  406440:	cbz	x25, 406450 <nftw@plt+0x38d0>
  406444:	ldr	x0, [x25]
  406448:	cmp	x0, x22
  40644c:	b.eq	406510 <nftw@plt+0x3990>  // b.none
  406450:	add	x0, x22, #0x60
  406454:	mov	w1, #0x0                   	// #0
  406458:	ldr	x2, [x0], #-8
  40645c:	cmp	x2, #0x0
  406460:	cinc	w1, w1, ne  // ne = any
  406464:	cmp	x0, x27
  406468:	b.ne	406458 <nftw@plt+0x38d8>  // b.any
  40646c:	lsl	w0, w1, #4
  406470:	add	w0, w0, #0x38
  406474:	mov	w0, w0
  406478:	bl	402670 <malloc@plt>
  40647c:	mov	x25, x0
  406480:	str	xzr, [x0]
  406484:	ldr	w0, [sp, #112]
  406488:	str	w0, [x25, #8]
  40648c:	bl	405a94 <nftw@plt+0x2f14>
  406490:	str	w0, [x25, #24]
  406494:	bl	405a94 <nftw@plt+0x2f14>
  406498:	str	w0, [x25, #28]
  40649c:	bl	405a94 <nftw@plt+0x2f14>
  4064a0:	str	w0, [x25, #32]
  4064a4:	mov	x23, #0x0                   	// #0
  4064a8:	mov	w26, #0x0                   	// #0
  4064ac:	add	x28, x22, #0x20
  4064b0:	b	406368 <nftw@plt+0x37e8>
  4064b4:	mov	w4, w23
  4064b8:	ldr	x3, [sp, #152]
  4064bc:	ldr	w2, [sp, #112]
  4064c0:	mov	x1, x24
  4064c4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4064c8:	add	x0, x0, #0x520
  4064cc:	bl	4056ac <nftw@plt+0x2b2c>
  4064d0:	mov	w2, w23
  4064d4:	mov	x1, x25
  4064d8:	mov	x0, x22
  4064dc:	bl	405560 <nftw@plt+0x29e0>
  4064e0:	str	x0, [sp, #120]
  4064e4:	cbnz	x0, 4063e8 <nftw@plt+0x3868>
  4064e8:	ldr	w0, [sp, #116]
  4064ec:	tbnz	w0, #31, 4067a4 <nftw@plt+0x3c24>
  4064f0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4064f4:	add	x2, x2, #0x8b8
  4064f8:	ldr	w3, [sp, #116]
  4064fc:	mov	x1, x24
  406500:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406504:	add	x0, x0, #0x550
  406508:	bl	4056ac <nftw@plt+0x2b2c>
  40650c:	b	406698 <nftw@plt+0x3b18>
  406510:	bl	405a94 <nftw@plt+0x2f14>
  406514:	ldr	w1, [x25, #8]
  406518:	cmp	w0, w1
  40651c:	b.ne	4064e8 <nftw@plt+0x3968>  // b.any
  406520:	bl	405a94 <nftw@plt+0x2f14>
  406524:	ldr	w1, [x25, #12]
  406528:	cmp	w0, w1
  40652c:	b.ne	4064e8 <nftw@plt+0x3968>  // b.any
  406530:	bl	405a94 <nftw@plt+0x2f14>
  406534:	ldr	w1, [x25, #16]
  406538:	cmp	w0, w1
  40653c:	b.ne	4064e8 <nftw@plt+0x3968>  // b.any
  406540:	add	x25, x25, #0x18
  406544:	add	x21, x22, #0x20
  406548:	mov	w20, #0x1a10000             	// #27328512
  40654c:	mov	w26, #0x1b30000             	// #28508160
  406550:	b	406564 <nftw@plt+0x39e4>
  406554:	add	x21, x21, #0x8
  406558:	add	w20, w20, #0x20, lsl #12
  40655c:	cmp	w20, w26
  406560:	b.eq	40659c <nftw@plt+0x3a1c>  // b.none
  406564:	ldr	x23, [x21]
  406568:	cbz	x23, 406554 <nftw@plt+0x39d4>
  40656c:	bl	405a94 <nftw@plt+0x2f14>
  406570:	mov	w28, w0
  406574:	bl	405a94 <nftw@plt+0x2f14>
  406578:	cmp	w28, w20
  40657c:	b.ne	4064e8 <nftw@plt+0x3968>  // b.any
  406580:	ldr	w1, [x25]
  406584:	cmp	w0, w1, lsl #1
  406588:	b.ne	4064e8 <nftw@plt+0x3968>  // b.any
  40658c:	ldr	x0, [x25, #8]
  406590:	blr	x23
  406594:	add	x25, x25, #0x10
  406598:	b	406554 <nftw@plt+0x39d4>
  40659c:	bl	405858 <nftw@plt+0x2cd8>
  4065a0:	cbz	w0, 4063e8 <nftw@plt+0x3868>
  4065a4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4065a8:	add	x1, x1, #0x320
  4065ac:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4065b0:	add	x2, x2, #0x310
  4065b4:	cmp	w0, #0x0
  4065b8:	csel	x2, x2, x1, lt  // lt = tstop
  4065bc:	mov	x1, x24
  4065c0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4065c4:	add	x0, x0, #0x588
  4065c8:	bl	4056ac <nftw@plt+0x2b2c>
  4065cc:	b	406698 <nftw@plt+0x3b18>
  4065d0:	cbz	w0, 406258 <nftw@plt+0x36d8>
  4065d4:	b	4064e8 <nftw@plt+0x3968>
  4065d8:	add	x25, x25, #0x10
  4065dc:	mov	w0, #0x1                   	// #1
  4065e0:	str	w0, [sp, #100]
  4065e4:	mov	w1, #0x3                   	// #3
  4065e8:	mov	w0, #0x1000000             	// #16777216
  4065ec:	bl	405a30 <nftw@plt+0x2eb0>
  4065f0:	ldr	w0, [x25, #8]
  4065f4:	bl	4059d8 <nftw@plt+0x2e58>
  4065f8:	ldr	w0, [x25, #12]
  4065fc:	bl	4059d8 <nftw@plt+0x2e58>
  406600:	ldr	w0, [x25, #16]
  406604:	bl	4059d8 <nftw@plt+0x2e58>
  406608:	add	x25, x25, #0x18
  40660c:	mov	x23, #0x0                   	// #0
  406610:	add	x27, x22, #0x20
  406614:	b	406628 <nftw@plt+0x3aa8>
  406618:	add	x25, x25, #0x10
  40661c:	add	x23, x23, #0x8
  406620:	cmp	x23, #0x48
  406624:	b.eq	406670 <nftw@plt+0x3af0>  // b.none
  406628:	ldr	x0, [x27, x23]
  40662c:	cbz	x0, 40661c <nftw@plt+0x3a9c>
  406630:	ldr	w21, [x25]
  406634:	lsl	w1, w21, #1
  406638:	mov	w0, #0x1a10000             	// #27328512
  40663c:	add	w0, w0, w23, lsl #14
  406640:	bl	405a30 <nftw@plt+0x2eb0>
  406644:	ldr	x20, [x25, #8]
  406648:	sub	w0, w21, #0x1
  40664c:	cbz	w21, 406618 <nftw@plt+0x3a98>
  406650:	ubfiz	x21, x0, #3, #32
  406654:	add	x21, x21, #0x8
  406658:	add	x21, x20, x21
  40665c:	ldr	x0, [x20], #8
  406660:	bl	405a00 <nftw@plt+0x2e80>
  406664:	cmp	x21, x20
  406668:	b.ne	40665c <nftw@plt+0x3adc>  // b.any
  40666c:	b	406618 <nftw@plt+0x3a98>
  406670:	ldr	w0, [sp, #100]
  406674:	cbz	w0, 406758 <nftw@plt+0x3bd8>
  406678:	mov	w2, #0x9                   	// #9
  40667c:	ldr	x1, [x28, #1856]
  406680:	mov	x0, x22
  406684:	bl	405560 <nftw@plt+0x29e0>
  406688:	str	x0, [x28, #1856]
  40668c:	b	406758 <nftw@plt+0x3bd8>
  406690:	mov	w0, #0x0                   	// #0
  406694:	bl	4059d8 <nftw@plt+0x2e58>
  406698:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40669c:	ldr	x1, [x0, #1856]
  4066a0:	cbz	x1, 4066c4 <nftw@plt+0x3b44>
  4066a4:	mov	w21, #0x9                   	// #9
  4066a8:	mov	x20, x0
  4066ac:	mov	w2, w21
  4066b0:	mov	x0, x22
  4066b4:	bl	405560 <nftw@plt+0x29e0>
  4066b8:	mov	x1, x0
  4066bc:	str	x0, [x20, #1856]
  4066c0:	cbnz	x0, 4066ac <nftw@plt+0x3b2c>
  4066c4:	bl	405958 <nftw@plt+0x2dd8>
  4066c8:	cbz	w0, 4066ec <nftw@plt+0x3b6c>
  4066cc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4066d0:	add	x2, x2, #0x358
  4066d4:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4066d8:	add	x3, x3, #0x328
  4066dc:	cmp	w0, #0x0
  4066e0:	mov	x1, x24
  4066e4:	csel	x0, x3, x2, lt  // lt = tstop
  4066e8:	bl	4056ac <nftw@plt+0x2b2c>
  4066ec:	mov	x0, x24
  4066f0:	bl	402910 <free@plt>
  4066f4:	ldr	x22, [x22, #8]
  4066f8:	cbz	x22, 406728 <nftw@plt+0x3ba8>
  4066fc:	stp	xzr, xzr, [sp, #176]
  406700:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  406704:	str	xzr, [x0, #1856]
  406708:	ldr	x0, [x22, #96]
  40670c:	cbz	x0, 405f58 <nftw@plt+0x33d8>
  406710:	ldr	w0, [x22, #104]
  406714:	cbz	w0, 405f58 <nftw@plt+0x33d8>
  406718:	mov	x25, #0x0                   	// #0
  40671c:	add	x24, x22, #0x20
  406720:	mov	w26, #0x8                   	// #8
  406724:	b	405f44 <nftw@plt+0x33c4>
  406728:	ldp	x23, x24, [sp, #48]
  40672c:	ldp	x25, x26, [sp, #64]
  406730:	ldp	x27, x28, [sp, #80]
  406734:	ldr	x0, [sp, #128]
  406738:	bl	402910 <free@plt>
  40673c:	ldp	x19, x20, [sp, #16]
  406740:	ldp	x21, x22, [sp, #32]
  406744:	ldp	x29, x30, [sp], #208
  406748:	ret
  40674c:	mov	w1, #0x0                   	// #0
  406750:	mov	w0, #0x1000000             	// #16777216
  406754:	bl	405a30 <nftw@plt+0x2eb0>
  406758:	add	w26, w26, #0x1
  40675c:	ldr	w0, [x22, #104]
  406760:	cmp	w0, w26
  406764:	b.eq	406690 <nftw@plt+0x3b10>  // b.none
  406768:	ldr	x25, [x28, #1856]
  40676c:	cbz	x25, 40677c <nftw@plt+0x3bfc>
  406770:	ldr	w0, [x25, #8]
  406774:	cmp	w0, w26
  406778:	b.eq	4065d8 <nftw@plt+0x3a58>  // b.none
  40677c:	ldr	x0, [x22, #112]
  406780:	ldr	x25, [x0, w26, uxtw #3]
  406784:	cbz	x25, 40674c <nftw@plt+0x3bcc>
  406788:	ldr	x0, [x25]
  40678c:	cmp	x0, x22
  406790:	b.ne	40674c <nftw@plt+0x3bcc>  // b.any
  406794:	str	wzr, [sp, #100]
  406798:	b	4065e4 <nftw@plt+0x3a64>
  40679c:	mov	w0, #0xffffffff            	// #-1
  4067a0:	str	w0, [sp, #116]
  4067a4:	ldr	w0, [sp, #116]
  4067a8:	mvn	w0, w0
  4067ac:	str	w0, [sp, #116]
  4067b0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4067b4:	add	x2, x2, #0x308
  4067b8:	b	4064f8 <nftw@plt+0x3978>
  4067bc:	str	wzr, [sp, #116]
  4067c0:	b	4064f0 <nftw@plt+0x3970>
  4067c4:	mov	x0, x24
  4067c8:	bl	405874 <nftw@plt+0x2cf4>
  4067cc:	cbnz	w0, 4060fc <nftw@plt+0x357c>
  4067d0:	mov	x2, x24
  4067d4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4067d8:	add	x1, x1, #0x440
  4067dc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4067e0:	ldr	x0, [x0, #1392]
  4067e4:	bl	402b30 <fprintf@plt>
  4067e8:	b	4066ec <nftw@plt+0x3b6c>
  4067ec:	mov	x0, x21
  4067f0:	bl	4024f0 <strlen@plt>
  4067f4:	add	x0, x0, #0x2
  4067f8:	bl	402670 <malloc@plt>
  4067fc:	mov	x20, x0
  406800:	strb	wzr, [x0]
  406804:	b	405fcc <nftw@plt+0x344c>
  406808:	ldr	w0, [sp, #144]
  40680c:	cbz	w0, 406858 <nftw@plt+0x3cd8>
  406810:	mov	x21, #0x1                   	// #1
  406814:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  406818:	add	x20, x20, #0x860
  40681c:	add	x0, x21, #0x1
  406820:	bl	402670 <malloc@plt>
  406824:	str	x0, [sp, #128]
  406828:	mov	x2, x21
  40682c:	mov	x1, x20
  406830:	bl	402490 <memcpy@plt>
  406834:	strb	wzr, [x0, x21]
  406838:	cbz	x22, 406734 <nftw@plt+0x3bb4>
  40683c:	stp	x23, x24, [sp, #48]
  406840:	stp	x25, x26, [sp, #64]
  406844:	stp	x27, x28, [sp, #80]
  406848:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40684c:	add	x0, x0, #0x3f8
  406850:	str	x0, [sp, #136]
  406854:	b	4066fc <nftw@plt+0x3b7c>
  406858:	str	xzr, [sp, #128]
  40685c:	b	406838 <nftw@plt+0x3cb8>
  406860:	cbz	w0, 406258 <nftw@plt+0x36d8>
  406864:	str	wzr, [sp, #116]
  406868:	b	4064f0 <nftw@plt+0x3970>
  40686c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406870:	add	x0, x0, #0x3a0
  406874:	bl	402ab0 <getenv@plt>
  406878:	mov	x20, x0
  40687c:	str	wzr, [sp, #144]
  406880:	cbnz	x0, 405e58 <nftw@plt+0x32d8>
  406884:	str	x0, [sp, #128]
  406888:	b	406838 <nftw@plt+0x3cb8>
  40688c:	ldr	x0, [x0, #24]
  406890:	ret
  406894:	cbz	w1, 4068ec <nftw@plt+0x3d6c>
  406898:	stp	x29, x30, [sp, #-48]!
  40689c:	mov	x29, sp
  4068a0:	stp	x19, x20, [sp, #16]
  4068a4:	str	x21, [sp, #32]
  4068a8:	mov	x19, x0
  4068ac:	sub	w21, w1, #0x1
  4068b0:	add	x21, x21, #0x1
  4068b4:	add	x21, x0, x21, lsl #3
  4068b8:	bl	404718 <nftw@plt+0x1b98>
  4068bc:	mov	x20, x0
  4068c0:	bl	40476c <nftw@plt+0x1bec>
  4068c4:	mov	w1, w0
  4068c8:	ldr	x0, [x19]
  4068cc:	madd	x1, x1, x20, x0
  4068d0:	str	x1, [x19], #8
  4068d4:	cmp	x19, x21
  4068d8:	b.ne	4068b8 <nftw@plt+0x3d38>  // b.any
  4068dc:	ldp	x19, x20, [sp, #16]
  4068e0:	ldr	x21, [sp, #32]
  4068e4:	ldp	x29, x30, [sp], #48
  4068e8:	ret
  4068ec:	ret
  4068f0:	cbz	w1, 406934 <nftw@plt+0x3db4>
  4068f4:	stp	x29, x30, [sp, #-32]!
  4068f8:	mov	x29, sp
  4068fc:	stp	x19, x20, [sp, #16]
  406900:	mov	x19, x0
  406904:	sub	w20, w1, #0x1
  406908:	add	x20, x20, #0x1
  40690c:	add	x20, x0, x20, lsl #3
  406910:	bl	404718 <nftw@plt+0x1b98>
  406914:	ldr	x1, [x19]
  406918:	orr	x1, x1, x0
  40691c:	str	x1, [x19], #8
  406920:	cmp	x19, x20
  406924:	b.ne	406910 <nftw@plt+0x3d90>  // b.any
  406928:	ldp	x19, x20, [sp, #16]
  40692c:	ldp	x29, x30, [sp], #32
  406930:	ret
  406934:	ret
  406938:	cbz	w1, 406994 <nftw@plt+0x3e14>
  40693c:	stp	x29, x30, [sp, #-32]!
  406940:	mov	x29, sp
  406944:	stp	x19, x20, [sp, #16]
  406948:	mov	x19, x0
  40694c:	sub	w1, w1, #0x1
  406950:	add	x0, x0, #0x8
  406954:	add	x20, x0, x1, lsl #3
  406958:	b	40696c <nftw@plt+0x3dec>
  40695c:	str	x0, [x19]
  406960:	add	x19, x19, #0x8
  406964:	cmp	x19, x20
  406968:	b.eq	406988 <nftw@plt+0x3e08>  // b.none
  40696c:	bl	404718 <nftw@plt+0x1b98>
  406970:	cbz	x0, 406960 <nftw@plt+0x3de0>
  406974:	ldr	x1, [x19]
  406978:	cmp	x1, #0x0
  40697c:	ccmp	x1, x0, #0x0, ne  // ne = any
  406980:	b.gt	40695c <nftw@plt+0x3ddc>
  406984:	b	406960 <nftw@plt+0x3de0>
  406988:	ldp	x19, x20, [sp, #16]
  40698c:	ldp	x29, x30, [sp], #32
  406990:	ret
  406994:	ret
  406998:	stp	x29, x30, [sp, #-64]!
  40699c:	mov	x29, sp
  4069a0:	stp	x19, x20, [sp, #16]
  4069a4:	stp	x21, x22, [sp, #32]
  4069a8:	stp	x23, x24, [sp, #48]
  4069ac:	mov	w21, #0xaaab                	// #43691
  4069b0:	movk	w21, #0xaaaa, lsl #16
  4069b4:	umull	x21, w1, w21
  4069b8:	lsr	x21, x21, #33
  4069bc:	add	w21, w21, w21, lsl #1
  4069c0:	subs	w21, w1, w21
  4069c4:	b.ne	4069f8 <nftw@plt+0x3e78>  // b.any
  4069c8:	mov	x19, x0
  4069cc:	mov	w23, #0xaaab                	// #43691
  4069d0:	movk	w23, #0xaaaa, lsl #16
  4069d4:	umull	x23, w1, w23
  4069d8:	lsr	x23, x23, #33
  4069dc:	cmp	w1, #0x2
  4069e0:	b.hi	406a38 <nftw@plt+0x3eb8>  // b.pmore
  4069e4:	ldp	x19, x20, [sp, #16]
  4069e8:	ldp	x21, x22, [sp, #32]
  4069ec:	ldp	x23, x24, [sp, #48]
  4069f0:	ldp	x29, x30, [sp], #64
  4069f4:	ret
  4069f8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4069fc:	add	x2, x2, #0x5b0
  406a00:	mov	w1, #0x67                  	// #103
  406a04:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406a08:	add	x0, x0, #0x5c8
  406a0c:	bl	408d8c <nftw@plt+0x620c>
  406a10:	ldr	x0, [x19, #8]
  406a14:	add	x20, x0, x20
  406a18:	str	x20, [x19, #8]
  406a1c:	ldr	x0, [x19, #16]
  406a20:	add	x1, x0, x1
  406a24:	str	x1, [x19, #16]
  406a28:	add	w21, w21, #0x1
  406a2c:	add	x19, x19, #0x18
  406a30:	cmp	w23, w21
  406a34:	b.ls	4069e4 <nftw@plt+0x3e64>  // b.plast
  406a38:	bl	404718 <nftw@plt+0x1b98>
  406a3c:	mov	x22, x0
  406a40:	bl	404718 <nftw@plt+0x1b98>
  406a44:	mov	x24, x0
  406a48:	bl	40476c <nftw@plt+0x1bec>
  406a4c:	mov	w20, w0
  406a50:	mul	x20, x20, x24
  406a54:	bl	404718 <nftw@plt+0x1b98>
  406a58:	mov	x24, x0
  406a5c:	bl	40476c <nftw@plt+0x1bec>
  406a60:	mov	w1, w0
  406a64:	mul	x1, x1, x24
  406a68:	ldr	x0, [x19]
  406a6c:	cmp	x0, x22
  406a70:	b.eq	406a10 <nftw@plt+0x3e90>  // b.none
  406a74:	ldr	x0, [x19, #8]
  406a78:	cmp	x0, x20
  406a7c:	b.ge	406a90 <nftw@plt+0x3f10>  // b.tcont
  406a80:	str	x22, [x19]
  406a84:	sub	x20, x20, x0
  406a88:	str	x20, [x19, #8]
  406a8c:	b	406a1c <nftw@plt+0x3e9c>
  406a90:	sub	x20, x0, x20
  406a94:	str	x20, [x19, #8]
  406a98:	b	406a1c <nftw@plt+0x3e9c>
  406a9c:	stp	x29, x30, [sp, #-112]!
  406aa0:	mov	x29, sp
  406aa4:	stp	x19, x20, [sp, #16]
  406aa8:	stp	x21, x22, [sp, #32]
  406aac:	stp	x23, x24, [sp, #48]
  406ab0:	stp	x25, x26, [sp, #64]
  406ab4:	stp	x27, x28, [sp, #80]
  406ab8:	str	x0, [x29, #96]
  406abc:	str	w1, [x29, #108]
  406ac0:	mov	w27, #0x8e39                	// #36409
  406ac4:	movk	w27, #0x38e3, lsl #16
  406ac8:	umull	x27, w1, w27
  406acc:	lsr	x27, x27, #33
  406ad0:	add	w27, w27, w27, lsl #3
  406ad4:	subs	w27, w1, w27
  406ad8:	b.ne	406aec <nftw@plt+0x3f6c>  // b.any
  406adc:	ldr	w0, [x29, #108]
  406ae0:	cbz	w0, 406c10 <nftw@plt+0x4090>
  406ae4:	mov	w28, w27
  406ae8:	b	406bac <nftw@plt+0x402c>
  406aec:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406af0:	add	x2, x2, #0x5f0
  406af4:	mov	w1, #0x87                  	// #135
  406af8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406afc:	add	x0, x0, #0x5c8
  406b00:	bl	408d8c <nftw@plt+0x620c>
  406b04:	add	w0, w0, #0x1
  406b08:	ldr	x1, [x19, x0, lsl #3]
  406b0c:	add	x22, x1, x22
  406b10:	str	x22, [x19, x0, lsl #3]
  406b14:	b	406b28 <nftw@plt+0x3fa8>
  406b18:	str	x20, [x19, w21, uxtw #3]
  406b1c:	add	w0, w21, #0x1
  406b20:	str	x22, [x19, x0, lsl #3]
  406b24:	add	w21, w21, #0x2
  406b28:	subs	w23, w23, #0x1
  406b2c:	b.eq	406b70 <nftw@plt+0x3ff0>  // b.none
  406b30:	bl	404718 <nftw@plt+0x1b98>
  406b34:	mov	x20, x0
  406b38:	bl	404718 <nftw@plt+0x1b98>
  406b3c:	mov	x22, x0
  406b40:	bl	40476c <nftw@plt+0x1bec>
  406b44:	mov	w0, w0
  406b48:	mul	x22, x0, x22
  406b4c:	cbz	w21, 406b18 <nftw@plt+0x3f98>
  406b50:	mov	w0, w27
  406b54:	ldr	x1, [x19, w0, uxtw #3]
  406b58:	cmp	x1, x20
  406b5c:	b.eq	406b04 <nftw@plt+0x3f84>  // b.none
  406b60:	add	w0, w0, #0x2
  406b64:	cmp	w0, w21
  406b68:	b.cc	406b54 <nftw@plt+0x3fd4>  // b.lo, b.ul, b.last
  406b6c:	b	406b18 <nftw@plt+0x3f98>
  406b70:	mov	w1, w21
  406b74:	mov	x0, x19
  406b78:	bl	405d08 <nftw@plt+0x3188>
  406b7c:	mov	x0, #0x0                   	// #0
  406b80:	ldr	x1, [x19, x0]
  406b84:	str	x1, [x24, x0]
  406b88:	ldr	x1, [x26, x0]
  406b8c:	str	x1, [x25, x0]
  406b90:	add	x0, x0, #0x10
  406b94:	cmp	x0, #0x40
  406b98:	b.ne	406b80 <nftw@plt+0x4000>  // b.any
  406b9c:	add	w28, w28, #0x9
  406ba0:	ldr	w0, [x29, #108]
  406ba4:	cmp	w0, w28
  406ba8:	b.ls	406c10 <nftw@plt+0x4090>  // b.plast
  406bac:	add	w24, w28, #0x1
  406bb0:	ldr	x0, [x29, #96]
  406bb4:	add	x24, x0, x24, lsl #3
  406bb8:	sub	sp, sp, #0x80
  406bbc:	mov	x19, sp
  406bc0:	mov	x0, x19
  406bc4:	add	x1, x19, #0x80
  406bc8:	str	xzr, [x0], #8
  406bcc:	cmp	x0, x1
  406bd0:	b.ne	406bc8 <nftw@plt+0x4048>  // b.any
  406bd4:	mov	x0, #0x0                   	// #0
  406bd8:	add	x25, x24, #0x8
  406bdc:	add	x26, x19, #0x8
  406be0:	ldr	x1, [x24, x0]
  406be4:	str	x1, [x19, x0]
  406be8:	ldr	x1, [x25, x0]
  406bec:	str	x1, [x26, x0]
  406bf0:	add	x0, x0, #0x10
  406bf4:	cmp	x0, #0x40
  406bf8:	b.ne	406be0 <nftw@plt+0x4060>  // b.any
  406bfc:	bl	404718 <nftw@plt+0x1b98>
  406c00:	bl	40476c <nftw@plt+0x1bec>
  406c04:	mov	w23, #0x4                   	// #4
  406c08:	mov	w21, #0x8                   	// #8
  406c0c:	b	406b30 <nftw@plt+0x3fb0>
  406c10:	mov	sp, x29
  406c14:	ldp	x19, x20, [sp, #16]
  406c18:	ldp	x21, x22, [sp, #32]
  406c1c:	ldp	x23, x24, [sp, #48]
  406c20:	ldp	x25, x26, [sp, #64]
  406c24:	ldp	x27, x28, [sp, #80]
  406c28:	ldp	x29, x30, [sp], #112
  406c2c:	ret
  406c30:	stp	x29, x30, [sp, #-32]!
  406c34:	mov	x29, sp
  406c38:	stp	x19, x20, [sp, #16]
  406c3c:	mov	x19, x0
  406c40:	ldr	w0, [x0, #56]
  406c44:	cbz	w0, 406c7c <nftw@plt+0x40fc>
  406c48:	ldrb	w0, [x19, #64]
  406c4c:	cbz	w0, 406c88 <nftw@plt+0x4108>
  406c50:	ldr	x20, [x19]
  406c54:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406c58:	add	x0, x0, #0x608
  406c5c:	bl	402b10 <gettext@plt>
  406c60:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  406c64:	ldr	x2, [x1, #1904]
  406c68:	mov	x1, x0
  406c6c:	mov	x0, x20
  406c70:	bl	411790 <nftw@plt+0xec10>
  406c74:	ldr	x0, [x19]
  406c78:	bl	40fb58 <nftw@plt+0xcfd8>
  406c7c:	ldp	x19, x20, [sp, #16]
  406c80:	ldp	x29, x30, [sp], #32
  406c84:	ret
  406c88:	ldr	x20, [x19]
  406c8c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406c90:	add	x0, x0, #0x638
  406c94:	bl	402b10 <gettext@plt>
  406c98:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  406c9c:	ldr	x2, [x1, #1904]
  406ca0:	mov	x1, x0
  406ca4:	mov	x0, x20
  406ca8:	bl	411790 <nftw@plt+0xec10>
  406cac:	b	406c74 <nftw@plt+0x40f4>
  406cb0:	stp	x29, x30, [sp, #-96]!
  406cb4:	mov	x29, sp
  406cb8:	stp	x21, x22, [sp, #32]
  406cbc:	mov	x21, x0
  406cc0:	orr	x0, x2, x4
  406cc4:	cbz	x0, 406dc8 <nftw@plt+0x4248>
  406cc8:	stp	x19, x20, [sp, #16]
  406ccc:	stp	x23, x24, [sp, #48]
  406cd0:	mov	x22, x1
  406cd4:	mov	x20, x2
  406cd8:	mov	w23, w3
  406cdc:	mov	x19, x4
  406ce0:	ldr	w0, [x21]
  406ce4:	cmp	w0, #0x0
  406ce8:	ccmp	x2, #0x0, #0x4, eq  // eq = none
  406cec:	b.ne	406d3c <nftw@plt+0x41bc>  // b.any
  406cf0:	ldr	w1, [x21]
  406cf4:	mov	w0, #0x1                   	// #1
  406cf8:	cmp	w1, #0x13
  406cfc:	b.gt	406e88 <nftw@plt+0x4308>
  406d00:	stp	x25, x26, [sp, #64]
  406d04:	add	w1, w1, w0
  406d08:	str	w1, [x21]
  406d0c:	cbz	x19, 406dd8 <nftw@plt+0x4258>
  406d10:	str	x27, [sp, #80]
  406d14:	mov	w1, #0x400b                	// #16395
  406d18:	mov	x0, x19
  406d1c:	bl	4479dc <nftw@plt+0x44e5c>
  406d20:	mov	x26, x0
  406d24:	cmp	x0, #0x0
  406d28:	csel	x19, x19, x0, eq  // eq = none
  406d2c:	mov	x24, #0x0                   	// #0
  406d30:	adrp	x27, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406d34:	add	x27, x27, #0xb98
  406d38:	b	406d6c <nftw@plt+0x41ec>
  406d3c:	mov	x0, x2
  406d40:	bl	44a240 <nftw@plt+0x476c0>
  406d44:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406d48:	add	x1, x1, #0x670
  406d4c:	bl	402890 <strcmp@plt>
  406d50:	cbnz	w0, 406cf0 <nftw@plt+0x4170>
  406d54:	ldp	x19, x20, [sp, #16]
  406d58:	ldp	x23, x24, [sp, #48]
  406d5c:	b	406dcc <nftw@plt+0x424c>
  406d60:	add	x24, x24, #0x1
  406d64:	cmp	x24, #0x4
  406d68:	b.eq	406e2c <nftw@plt+0x42ac>  // b.none
  406d6c:	ldr	x25, [x27, x24, lsl #3]
  406d70:	mov	x0, x25
  406d74:	bl	4024f0 <strlen@plt>
  406d78:	mov	x21, x0
  406d7c:	mov	x2, x0
  406d80:	mov	x1, x25
  406d84:	mov	x0, x19
  406d88:	bl	4026a0 <strncmp@plt>
  406d8c:	cbnz	w0, 406d60 <nftw@plt+0x41e0>
  406d90:	ldrb	w0, [x19, x21]
  406d94:	cmp	w0, #0x28
  406d98:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  406d9c:	b.ne	406d60 <nftw@plt+0x41e0>  // b.any
  406da0:	mov	w0, #0x1                   	// #1
  406da4:	cbz	x26, 406e94 <nftw@plt+0x4314>
  406da8:	mov	x0, x26
  406dac:	bl	402910 <free@plt>
  406db0:	mov	w0, #0x1                   	// #1
  406db4:	ldp	x19, x20, [sp, #16]
  406db8:	ldp	x23, x24, [sp, #48]
  406dbc:	ldp	x25, x26, [sp, #64]
  406dc0:	ldr	x27, [sp, #80]
  406dc4:	b	406dcc <nftw@plt+0x424c>
  406dc8:	mov	w0, #0x0                   	// #0
  406dcc:	ldp	x21, x22, [sp, #32]
  406dd0:	ldp	x29, x30, [sp], #96
  406dd4:	ret
  406dd8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  406ddc:	ldr	x0, [x0, #1392]
  406de0:	cbz	x20, 406e18 <nftw@plt+0x4298>
  406de4:	mov	w5, w23
  406de8:	mov	x4, x20
  406dec:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406df0:	add	x3, x3, #0x668
  406df4:	mov	x2, x22
  406df8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406dfc:	add	x1, x1, #0x680
  406e00:	bl	402b30 <fprintf@plt>
  406e04:	mov	w0, #0x0                   	// #0
  406e08:	ldp	x19, x20, [sp, #16]
  406e0c:	ldp	x23, x24, [sp, #48]
  406e10:	ldp	x25, x26, [sp, #64]
  406e14:	b	406dcc <nftw@plt+0x424c>
  406e18:	mov	x26, x20
  406e1c:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406e20:	add	x19, x19, #0x668
  406e24:	mov	x20, x19
  406e28:	b	406e48 <nftw@plt+0x42c8>
  406e2c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  406e30:	ldr	x0, [x0, #1392]
  406e34:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406e38:	add	x1, x1, #0x668
  406e3c:	cmp	x20, #0x0
  406e40:	csel	x20, x1, x20, eq  // eq = none
  406e44:	ldr	x27, [sp, #80]
  406e48:	mov	w5, w23
  406e4c:	mov	x4, x20
  406e50:	mov	x3, x19
  406e54:	mov	x2, x22
  406e58:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406e5c:	add	x1, x1, #0x680
  406e60:	bl	402b30 <fprintf@plt>
  406e64:	mov	w0, #0x0                   	// #0
  406e68:	cbz	x26, 406ea8 <nftw@plt+0x4328>
  406e6c:	mov	x0, x26
  406e70:	bl	402910 <free@plt>
  406e74:	mov	w0, #0x0                   	// #0
  406e78:	ldp	x19, x20, [sp, #16]
  406e7c:	ldp	x23, x24, [sp, #48]
  406e80:	ldp	x25, x26, [sp, #64]
  406e84:	b	406dcc <nftw@plt+0x424c>
  406e88:	ldp	x19, x20, [sp, #16]
  406e8c:	ldp	x23, x24, [sp, #48]
  406e90:	b	406dcc <nftw@plt+0x424c>
  406e94:	ldp	x19, x20, [sp, #16]
  406e98:	ldp	x23, x24, [sp, #48]
  406e9c:	ldp	x25, x26, [sp, #64]
  406ea0:	ldr	x27, [sp, #80]
  406ea4:	b	406dcc <nftw@plt+0x424c>
  406ea8:	ldp	x19, x20, [sp, #16]
  406eac:	ldp	x23, x24, [sp, #48]
  406eb0:	ldp	x25, x26, [sp, #64]
  406eb4:	b	406dcc <nftw@plt+0x424c>
  406eb8:	tbnz	w2, #31, 406f1c <nftw@plt+0x439c>
  406ebc:	stp	x29, x30, [sp, #-32]!
  406ec0:	mov	x29, sp
  406ec4:	stp	x19, x20, [sp, #16]
  406ec8:	mov	x19, x1
  406ecc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  406ed0:	ldr	x20, [x0, #1392]
  406ed4:	cbnz	w2, 406f04 <nftw@plt+0x4384>
  406ed8:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x109fc>
  406edc:	add	x3, x3, #0x780
  406ee0:	mov	x4, x3
  406ee4:	mov	x2, x19
  406ee8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406eec:	add	x1, x1, #0x6a0
  406ef0:	mov	x0, x20
  406ef4:	bl	402b30 <fprintf@plt>
  406ef8:	ldp	x19, x20, [sp, #16]
  406efc:	ldp	x29, x30, [sp], #32
  406f00:	ret
  406f04:	mov	w0, w2
  406f08:	bl	44a870 <_obstack_memory_used@@Base+0x26c>
  406f0c:	mov	x4, x0
  406f10:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x119fc>
  406f14:	add	x3, x3, #0x698
  406f18:	b	406ee4 <nftw@plt+0x4364>
  406f1c:	ret
  406f20:	stp	x29, x30, [sp, #-32]!
  406f24:	mov	x29, sp
  406f28:	str	x19, [sp, #16]
  406f2c:	mov	x19, x0
  406f30:	ldr	w2, [x1, #56]
  406f34:	ldr	x1, [x1, #40]
  406f38:	bl	40bc48 <nftw@plt+0x90c8>
  406f3c:	ldr	x0, [x19]
  406f40:	bl	40f08c <nftw@plt+0xc50c>
  406f44:	ldr	x0, [x19]
  406f48:	bl	40f1d0 <nftw@plt+0xc650>
  406f4c:	ldr	x19, [sp, #16]
  406f50:	ldp	x29, x30, [sp], #32
  406f54:	ret
  406f58:	stp	x29, x30, [sp, #-272]!
  406f5c:	mov	x29, sp
  406f60:	str	x1, [sp, #216]
  406f64:	str	x2, [sp, #224]
  406f68:	str	x3, [sp, #232]
  406f6c:	str	x4, [sp, #240]
  406f70:	str	x5, [sp, #248]
  406f74:	str	x6, [sp, #256]
  406f78:	str	x7, [sp, #264]
  406f7c:	str	q0, [sp, #80]
  406f80:	str	q1, [sp, #96]
  406f84:	str	q2, [sp, #112]
  406f88:	str	q3, [sp, #128]
  406f8c:	str	q4, [sp, #144]
  406f90:	str	q5, [sp, #160]
  406f94:	str	q6, [sp, #176]
  406f98:	str	q7, [sp, #192]
  406f9c:	add	x1, sp, #0x110
  406fa0:	str	x1, [sp, #48]
  406fa4:	str	x1, [sp, #56]
  406fa8:	add	x1, sp, #0xd0
  406fac:	str	x1, [sp, #64]
  406fb0:	mov	w1, #0xffffffc8            	// #-56
  406fb4:	str	w1, [sp, #72]
  406fb8:	mov	w1, #0xffffff80            	// #-128
  406fbc:	str	w1, [sp, #76]
  406fc0:	ldp	x2, x3, [sp, #48]
  406fc4:	stp	x2, x3, [sp, #16]
  406fc8:	ldp	x2, x3, [sp, #64]
  406fcc:	stp	x2, x3, [sp, #32]
  406fd0:	add	x1, sp, #0x10
  406fd4:	bl	44a8f4 <_obstack_memory_used@@Base+0x2f0>
  406fd8:	ldp	x29, x30, [sp], #272
  406fdc:	ret
  406fe0:	stp	x29, x30, [sp, #-64]!
  406fe4:	mov	x29, sp
  406fe8:	stp	x19, x20, [sp, #16]
  406fec:	stp	x21, x22, [sp, #32]
  406ff0:	str	x23, [sp, #48]
  406ff4:	mov	x20, x0
  406ff8:	mov	x21, x1
  406ffc:	ldr	x19, [x1]
  407000:	ldr	x22, [x0]
  407004:	mov	x2, #0x5                   	// #5
  407008:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40700c:	add	x1, x1, #0x6b8
  407010:	ldrb	w0, [x22, #67]
  407014:	bl	409f38 <nftw@plt+0x73b8>
  407018:	mov	x23, x0
  40701c:	ldrb	w0, [x22, #67]
  407020:	bl	409fcc <nftw@plt+0x744c>
  407024:	mov	x22, x0
  407028:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40702c:	ldr	x0, [x0, #1904]
  407030:	cmp	x19, #0x0
  407034:	csel	x19, x0, x19, eq  // eq = none
  407038:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40703c:	add	x1, x1, #0x6c0
  407040:	mov	x0, x19
  407044:	bl	402890 <strcmp@plt>
  407048:	cbz	w0, 4070d4 <nftw@plt+0x4554>
  40704c:	ldr	w3, [x21, #8]
  407050:	ldrb	w0, [x20, #121]
  407054:	cbz	w0, 4070e0 <nftw@plt+0x4560>
  407058:	ldr	w4, [x21, #12]
  40705c:	cbz	w3, 4070e4 <nftw@plt+0x4564>
  407060:	cbz	w4, 4070b8 <nftw@plt+0x4538>
  407064:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407068:	add	x2, x2, #0x6a8
  40706c:	mov	x1, #0x20                  	// #32
  407070:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  407074:	add	x0, x0, #0x770
  407078:	add	x0, x0, #0x8
  40707c:	bl	402600 <snprintf@plt>
  407080:	mov	x4, x22
  407084:	adrp	x3, 48e000 <__environ@@GLIBC_2.17+0xa68>
  407088:	add	x3, x3, #0x770
  40708c:	add	x3, x3, #0x8
  407090:	mov	x2, x19
  407094:	mov	x1, x23
  407098:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40709c:	add	x0, x0, #0x6d0
  4070a0:	bl	406f58 <nftw@plt+0x43d8>
  4070a4:	ldp	x19, x20, [sp, #16]
  4070a8:	ldp	x21, x22, [sp, #32]
  4070ac:	ldr	x23, [sp, #48]
  4070b0:	ldp	x29, x30, [sp], #64
  4070b4:	ret
  4070b8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4070bc:	add	x2, x2, #0x6b0
  4070c0:	b	40706c <nftw@plt+0x44ec>
  4070c4:	mov	w4, #0x0                   	// #0
  4070c8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4070cc:	add	x2, x2, #0x6b0
  4070d0:	b	40706c <nftw@plt+0x44ec>
  4070d4:	mov	w3, w0
  4070d8:	ldrb	w0, [x20, #121]
  4070dc:	cbnz	w0, 4070e4 <nftw@plt+0x4564>
  4070e0:	cbnz	w3, 4070c4 <nftw@plt+0x4544>
  4070e4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4070e8:	strb	wzr, [x0, #1912]
  4070ec:	b	407080 <nftw@plt+0x4500>
  4070f0:	stp	x29, x30, [sp, #-64]!
  4070f4:	mov	x29, sp
  4070f8:	stp	x19, x20, [sp, #16]
  4070fc:	mov	x19, x0
  407100:	ldp	x2, x3, [x1]
  407104:	stp	x2, x3, [sp, #32]
  407108:	ldp	x2, x3, [x1, #16]
  40710c:	stp	x2, x3, [sp, #48]
  407110:	add	x1, sp, #0x20
  407114:	bl	406fe0 <nftw@plt+0x4460>
  407118:	mov	x20, x0
  40711c:	mov	x1, x0
  407120:	ldr	x0, [x19]
  407124:	bl	40f9f8 <nftw@plt+0xce78>
  407128:	mov	x0, x20
  40712c:	bl	402910 <free@plt>
  407130:	ldr	x0, [x19]
  407134:	bl	40f39c <nftw@plt+0xc81c>
  407138:	ldp	x19, x20, [sp, #16]
  40713c:	ldp	x29, x30, [sp], #64
  407140:	ret
  407144:	stp	x29, x30, [sp, #-48]!
  407148:	mov	x29, sp
  40714c:	stp	x19, x20, [sp, #16]
  407150:	str	x21, [sp, #32]
  407154:	mov	x19, x0
  407158:	mov	x21, x1
  40715c:	ldr	x0, [x0]
  407160:	mov	x2, #0x5                   	// #5
  407164:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407168:	add	x1, x1, #0x6b8
  40716c:	ldrb	w0, [x0, #67]
  407170:	bl	409f38 <nftw@plt+0x73b8>
  407174:	mov	x20, x0
  407178:	ldr	x0, [x19]
  40717c:	ldrb	w0, [x0, #67]
  407180:	bl	409fcc <nftw@plt+0x744c>
  407184:	mov	x3, x0
  407188:	mov	x2, x21
  40718c:	mov	x1, x20
  407190:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407194:	add	x0, x0, #0x6e0
  407198:	bl	406f58 <nftw@plt+0x43d8>
  40719c:	ldp	x19, x20, [sp, #16]
  4071a0:	ldr	x21, [sp, #32]
  4071a4:	ldp	x29, x30, [sp], #48
  4071a8:	ret
  4071ac:	stp	x29, x30, [sp, #-32]!
  4071b0:	mov	x29, sp
  4071b4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4071b8:	add	x0, x0, #0x6f0
  4071bc:	bl	402ab0 <getenv@plt>
  4071c0:	cbz	x0, 4071d8 <nftw@plt+0x4658>
  4071c4:	mov	w2, #0xa                   	// #10
  4071c8:	mov	x1, #0x0                   	// #0
  4071cc:	bl	4028c0 <strtol@plt>
  4071d0:	cmp	w0, #0x0
  4071d4:	b.gt	407208 <nftw@plt+0x4688>
  4071d8:	strh	wzr, [sp, #26]
  4071dc:	add	x2, sp, #0x18
  4071e0:	mov	x1, #0x5413                	// #21523
  4071e4:	mov	w0, #0x0                   	// #0
  4071e8:	bl	402b50 <ioctl@plt>
  4071ec:	mov	w1, w0
  4071f0:	mov	w0, #0x7fffffff            	// #2147483647
  4071f4:	cbnz	w1, 407208 <nftw@plt+0x4688>
  4071f8:	ldrh	w0, [sp, #26]
  4071fc:	cmp	w0, #0x0
  407200:	mov	w1, #0x7fffffff            	// #2147483647
  407204:	csel	w0, w0, w1, ne  // ne = any
  407208:	ldp	x29, x30, [sp], #32
  40720c:	ret
  407210:	stp	x29, x30, [sp, #-32]!
  407214:	mov	x29, sp
  407218:	str	x19, [sp, #16]
  40721c:	mov	x19, x0
  407220:	cbz	w1, 407244 <nftw@plt+0x46c4>
  407224:	sub	w1, w1, #0x1
  407228:	cmp	w1, #0x0
  40722c:	mov	w0, #0x7fffffff            	// #2147483647
  407230:	csel	w1, w1, w0, gt
  407234:	str	w1, [x19, #112]
  407238:	ldr	x19, [sp, #16]
  40723c:	ldp	x29, x30, [sp], #32
  407240:	ret
  407244:	ldr	x0, [x0]
  407248:	ldr	x0, [x0, #8]
  40724c:	ldr	x0, [x0, #192]
  407250:	bl	4026c0 <fileno_unlocked@plt>
  407254:	bl	4029f0 <isatty@plt>
  407258:	mov	w1, #0x7fffffff            	// #2147483647
  40725c:	cbz	w0, 407234 <nftw@plt+0x46b4>
  407260:	bl	4071ac <nftw@plt+0x462c>
  407264:	sub	w1, w0, #0x1
  407268:	b	407228 <nftw@plt+0x46a8>
  40726c:	stp	x29, x30, [sp, #-48]!
  407270:	mov	x29, sp
  407274:	stp	x19, x20, [sp, #16]
  407278:	str	x21, [sp, #32]
  40727c:	mov	x19, x0
  407280:	mov	w20, w1
  407284:	mov	x0, #0x48                  	// #72
  407288:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  40728c:	mov	x21, x19
  407290:	str	x0, [x21], #8
  407294:	mov	w1, #0x0                   	// #0
  407298:	bl	40f0b8 <nftw@plt+0xc538>
  40729c:	stp	xzr, xzr, [x19, #8]
  4072a0:	stp	xzr, xzr, [x21, #16]
  4072a4:	stp	xzr, xzr, [x21, #32]
  4072a8:	str	xzr, [x21, #48]
  4072ac:	strb	wzr, [x19, #64]
  4072b0:	str	w20, [x19, #68]
  4072b4:	sbfiz	x0, x20, #2, #32
  4072b8:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4072bc:	str	x0, [x19, #72]
  4072c0:	cmp	w20, #0x0
  4072c4:	b.le	4072ec <nftw@plt+0x476c>
  4072c8:	sub	w1, w20, #0x1
  4072cc:	add	x1, x1, #0x1
  4072d0:	lsl	x1, x1, #2
  4072d4:	mov	x0, #0x0                   	// #0
  4072d8:	ldr	x2, [x19, #72]
  4072dc:	str	wzr, [x2, x0]
  4072e0:	add	x0, x0, #0x4
  4072e4:	cmp	x1, x0
  4072e8:	b.ne	4072d8 <nftw@plt+0x4758>  // b.any
  4072ec:	strb	wzr, [x19, #108]
  4072f0:	ldr	x0, [x19]
  4072f4:	ldr	w1, [x0, #40]
  4072f8:	mov	x0, x19
  4072fc:	bl	407210 <nftw@plt+0x4690>
  407300:	mov	w0, #0x5e                  	// #94
  407304:	strb	w0, [x19, #116]
  407308:	strb	w0, [x19, #117]
  40730c:	strb	w0, [x19, #118]
  407310:	strb	wzr, [x19, #119]
  407314:	strb	wzr, [x19, #120]
  407318:	strb	wzr, [x19, #121]
  40731c:	strb	wzr, [x19, #122]
  407320:	strb	wzr, [x19, #123]
  407324:	str	wzr, [x19, #124]
  407328:	strb	wzr, [x19, #128]
  40732c:	strb	wzr, [x19, #129]
  407330:	strb	wzr, [x19, #130]
  407334:	str	wzr, [x19, #132]
  407338:	str	xzr, [x19, #160]
  40733c:	adrp	x0, 408000 <nftw@plt+0x5480>
  407340:	add	x0, x0, #0xfb8
  407344:	str	x0, [x19, #136]
  407348:	adrp	x0, 407000 <nftw@plt+0x4480>
  40734c:	add	x0, x0, #0xf0
  407350:	str	x0, [x19, #144]
  407354:	adrp	x0, 406000 <nftw@plt+0x3480>
  407358:	add	x0, x0, #0xf20
  40735c:	str	x0, [x19, #152]
  407360:	str	xzr, [x19, #168]
  407364:	str	xzr, [x19, #176]
  407368:	str	xzr, [x19, #184]
  40736c:	str	wzr, [x19, #200]
  407370:	str	xzr, [x19, #208]
  407374:	str	xzr, [x19, #192]
  407378:	str	wzr, [x19, #216]
  40737c:	strb	wzr, [x19, #220]
  407380:	strb	wzr, [x19, #221]
  407384:	strb	wzr, [x19, #222]
  407388:	strb	wzr, [x19, #223]
  40738c:	str	wzr, [x19, #224]
  407390:	strb	wzr, [x19, #228]
  407394:	strb	wzr, [x19, #229]
  407398:	str	xzr, [x19, #232]
  40739c:	str	wzr, [x19, #240]
  4073a0:	str	wzr, [x19, #244]
  4073a4:	str	xzr, [x19, #248]
  4073a8:	str	xzr, [x19, #256]
  4073ac:	adrp	x0, 406000 <nftw@plt+0x3480>
  4073b0:	add	x0, x0, #0xc30
  4073b4:	str	x0, [x19, #264]
  4073b8:	ldp	x19, x20, [sp, #16]
  4073bc:	ldr	x21, [sp, #32]
  4073c0:	ldp	x29, x30, [sp], #48
  4073c4:	ret
  4073c8:	stp	x29, x30, [sp, #-32]!
  4073cc:	mov	x29, sp
  4073d0:	str	x19, [sp, #16]
  4073d4:	cmp	w1, #0x0
  4073d8:	ldr	x19, [x0]
  4073dc:	mov	w0, #0x2                   	// #2
  4073e0:	csel	w0, w1, w0, ge  // ge = tcont
  4073e4:	bl	409fe8 <nftw@plt+0x7468>
  4073e8:	strb	w0, [x19, #67]
  4073ec:	ldr	x19, [sp, #16]
  4073f0:	ldp	x29, x30, [sp], #32
  4073f4:	ret
  4073f8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4073fc:	add	x1, x1, #0xb98
  407400:	add	x1, x1, #0x20
  407404:	ldr	x0, [x1, w0, sxtw #3]
  407408:	ret
  40740c:	stp	x29, x30, [sp, #-96]!
  407410:	mov	x29, sp
  407414:	stp	x19, x20, [sp, #16]
  407418:	mov	x19, x0
  40741c:	mov	w20, w1
  407420:	str	xzr, [sp, #88]
  407424:	ldr	x0, [x0]
  407428:	ldrb	w1, [x0, #65]
  40742c:	cbnz	w1, 407470 <nftw@plt+0x48f0>
  407430:	cmp	w20, #0x1
  407434:	b.ls	407464 <nftw@plt+0x48e4>  // b.plast
  407438:	add	x3, sp, #0x58
  40743c:	mov	w2, #0x2                   	// #2
  407440:	mov	w1, w20
  407444:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  407448:	ldr	x0, [x0, #2296]
  40744c:	bl	42c270 <nftw@plt+0x296f0>
  407450:	ldr	x0, [sp, #88]
  407454:	cbz	x0, 407464 <nftw@plt+0x48e4>
  407458:	ldr	x1, [x19, #208]
  40745c:	cmp	x0, x1
  407460:	b.ne	407480 <nftw@plt+0x4900>  // b.any
  407464:	ldp	x19, x20, [sp, #16]
  407468:	ldp	x29, x30, [sp], #96
  40746c:	ret
  407470:	bl	40f39c <nftw@plt+0xc81c>
  407474:	ldr	x0, [x19]
  407478:	strb	wzr, [x0, #65]
  40747c:	b	407430 <nftw@plt+0x48b0>
  407480:	str	x0, [x19, #208]
  407484:	ldr	w0, [x0, #20]
  407488:	cbz	w0, 407464 <nftw@plt+0x48e4>
  40748c:	stp	x21, x22, [sp, #32]
  407490:	stp	x23, x24, [sp, #48]
  407494:	str	x25, [sp, #64]
  407498:	mov	w24, #0x1                   	// #1
  40749c:	mov	w22, #0x0                   	// #0
  4074a0:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4074a4:	add	x23, x23, #0x6b0
  4074a8:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4074ac:	add	x21, x21, #0x770
  4074b0:	b	40753c <nftw@plt+0x49bc>
  4074b4:	mov	w4, w22
  4074b8:	mov	x2, x23
  4074bc:	mov	x1, #0x20                  	// #32
  4074c0:	add	x0, x21, #0x8
  4074c4:	bl	402600 <snprintf@plt>
  4074c8:	eor	w0, w24, #0x1
  4074cc:	ldr	x25, [x19]
  4074d0:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4074d4:	add	x1, x20, #0x6f8
  4074d8:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4074dc:	add	x20, x20, #0x780
  4074e0:	cmp	w24, #0x0
  4074e4:	csel	x20, x20, x1, ne  // ne = any
  4074e8:	mov	w0, w0
  4074ec:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4074f0:	add	x1, x1, #0xb98
  4074f4:	add	x0, x1, x0, lsl #3
  4074f8:	ldr	x0, [x0, #152]
  4074fc:	bl	402b10 <gettext@plt>
  407500:	add	x6, x21, #0x8
  407504:	ldr	x1, [sp, #88]
  407508:	ldr	x5, [x1, #8]
  40750c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407510:	add	x4, x4, #0x6b8
  407514:	mov	x3, x0
  407518:	mov	x2, x20
  40751c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407520:	add	x1, x1, #0x700
  407524:	mov	x0, x25
  407528:	bl	411790 <nftw@plt+0xec10>
  40752c:	mov	w24, w22
  407530:	ldr	x0, [sp, #88]
  407534:	ldr	w0, [x0, #20]
  407538:	cbz	w0, 4075a8 <nftw@plt+0x4a28>
  40753c:	ldr	x1, [sp, #88]
  407540:	ldr	w20, [x1, #20]
  407544:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  407548:	ldr	x0, [x0, #2296]
  40754c:	bl	42b36c <nftw@plt+0x287ec>
  407550:	str	x0, [sp, #88]
  407554:	ldr	w4, [x0]
  407558:	sub	w4, w20, w4
  40755c:	ldrb	w2, [x0, #6]
  407560:	lsr	w3, w4, w2
  407564:	ldr	w1, [x0, #16]
  407568:	add	w3, w3, w1
  40756c:	cbz	w24, 4075d0 <nftw@plt+0x4a50>
  407570:	ldrb	w1, [x19, #121]
  407574:	cbz	w1, 4075d0 <nftw@plt+0x4a50>
  407578:	mov	w1, #0x1                   	// #1
  40757c:	lsl	w1, w1, w2
  407580:	sub	w1, w1, #0x1
  407584:	and	w4, w1, w4
  407588:	ldrb	w0, [x0, #7]
  40758c:	lsr	w4, w4, w0
  407590:	cbz	w3, 4075d4 <nftw@plt+0x4a54>
  407594:	mov	x2, x23
  407598:	cbz	w4, 4074bc <nftw@plt+0x493c>
  40759c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4075a0:	add	x2, x2, #0x6a8
  4075a4:	b	4074bc <nftw@plt+0x493c>
  4075a8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4075ac:	add	x1, x1, #0x468
  4075b0:	ldr	x0, [x19]
  4075b4:	bl	411790 <nftw@plt+0xec10>
  4075b8:	ldr	x0, [x19]
  4075bc:	bl	40f39c <nftw@plt+0xc81c>
  4075c0:	ldp	x21, x22, [sp, #32]
  4075c4:	ldp	x23, x24, [sp, #48]
  4075c8:	ldr	x25, [sp, #64]
  4075cc:	b	407464 <nftw@plt+0x48e4>
  4075d0:	cbnz	w3, 4074b4 <nftw@plt+0x4934>
  4075d4:	strb	wzr, [x21, #8]
  4075d8:	b	4074c8 <nftw@plt+0x4948>
  4075dc:	stp	x29, x30, [sp, #-64]!
  4075e0:	mov	x29, sp
  4075e4:	stp	x23, x24, [sp, #48]
  4075e8:	mov	w23, #0x0                   	// #0
  4075ec:	tbnz	w1, #31, 407730 <nftw@plt+0x4bb0>
  4075f0:	stp	x19, x20, [sp, #16]
  4075f4:	stp	x21, x22, [sp, #32]
  4075f8:	mov	x20, x0
  4075fc:	mov	w19, w1
  407600:	mov	w21, w2
  407604:	mov	w22, w3
  407608:	ldr	w0, [x0, #68]
  40760c:	mov	w23, #0x0                   	// #0
  407610:	cmp	w0, w1
  407614:	b.le	407728 <nftw@plt+0x4ba8>
  407618:	cmp	w2, #0xd
  40761c:	b.gt	407740 <nftw@plt+0x4bc0>
  407620:	sxtw	x24, w1
  407624:	ldr	x0, [x20, #72]
  407628:	ldr	w23, [x0, x24, lsl #2]
  40762c:	cbz	w3, 407718 <nftw@plt+0x4b98>
  407630:	cbnz	w23, 407668 <nftw@plt+0x4ae8>
  407634:	ldr	x2, [x20, #168]
  407638:	ldr	x1, [x20, #176]
  40763c:	mov	w0, w19
  407640:	blr	x2
  407644:	mov	w23, #0x1                   	// #1
  407648:	cbz	w0, 407660 <nftw@plt+0x4ae0>
  40764c:	ldrb	w0, [x20, #64]
  407650:	cmp	w0, #0x0
  407654:	mov	w23, #0x4                   	// #4
  407658:	mov	w0, #0x6                   	// #6
  40765c:	csel	w23, w23, w0, ne  // ne = any
  407660:	ldr	x0, [x20, #72]
  407664:	str	w23, [x0, x24, lsl #2]
  407668:	ldr	w1, [x20, #88]
  40766c:	subs	w0, w1, #0x1
  407670:	b.mi	4076c0 <nftw@plt+0x4b40>  // b.first
  407674:	ldr	x3, [x20, #80]
  407678:	sbfiz	x2, x0, #1, #32
  40767c:	add	x0, x2, w0, sxtw
  407680:	lsl	x0, x0, #2
  407684:	add	x4, x3, x0
  407688:	add	x2, x0, #0xc
  40768c:	sub	w0, w1, #0x1
  407690:	add	x0, x0, x0, lsl #1
  407694:	sub	x2, x2, x0, lsl #2
  407698:	sub	x3, x3, #0x18
  40769c:	add	x2, x2, x3
  4076a0:	ldr	w0, [x4, #4]
  4076a4:	cmp	w0, w19
  4076a8:	b.eq	4076bc <nftw@plt+0x4b3c>  // b.none
  4076ac:	sub	x4, x4, #0xc
  4076b0:	cmp	x4, x2
  4076b4:	b.ne	4076a0 <nftw@plt+0x4b20>  // b.any
  4076b8:	b	4076c0 <nftw@plt+0x4b40>
  4076bc:	ldr	w23, [x4, #8]
  4076c0:	add	w1, w1, #0x1
  4076c4:	sbfiz	x24, x1, #1, #32
  4076c8:	add	x1, x24, w1, sxtw
  4076cc:	lsl	x24, x1, #2
  4076d0:	mov	x1, x24
  4076d4:	ldr	x0, [x20, #80]
  4076d8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4076dc:	str	x0, [x20, #80]
  4076e0:	sub	x1, x24, #0xc
  4076e4:	str	w22, [x0, x1]
  4076e8:	ldr	x0, [x20, #80]
  4076ec:	add	x0, x0, x1
  4076f0:	str	w19, [x0, #4]
  4076f4:	ldr	x0, [x20, #80]
  4076f8:	add	x1, x0, x1
  4076fc:	str	w21, [x1, #8]
  407700:	ldr	w0, [x20, #88]
  407704:	add	w0, w0, #0x1
  407708:	str	w0, [x20, #88]
  40770c:	ldp	x19, x20, [sp, #16]
  407710:	ldp	x21, x22, [sp, #32]
  407714:	b	407730 <nftw@plt+0x4bb0>
  407718:	str	w2, [x0, x24, lsl #2]
  40771c:	ldp	x19, x20, [sp, #16]
  407720:	ldp	x21, x22, [sp, #32]
  407724:	b	407730 <nftw@plt+0x4bb0>
  407728:	ldp	x19, x20, [sp, #16]
  40772c:	ldp	x21, x22, [sp, #32]
  407730:	mov	w0, w23
  407734:	ldp	x23, x24, [sp, #48]
  407738:	ldp	x29, x30, [sp], #64
  40773c:	ret
  407740:	ldp	x19, x20, [sp, #16]
  407744:	ldp	x21, x22, [sp, #32]
  407748:	b	407730 <nftw@plt+0x4bb0>
  40774c:	stp	x29, x30, [sp, #-32]!
  407750:	mov	x29, sp
  407754:	str	x19, [sp, #16]
  407758:	mov	x19, x0
  40775c:	ldr	w1, [x0, #104]
  407760:	add	w1, w1, #0x1
  407764:	sbfiz	x1, x1, #2, #32
  407768:	ldr	x0, [x0, #96]
  40776c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  407770:	str	x0, [x19, #96]
  407774:	ldr	w1, [x19, #104]
  407778:	add	w2, w1, #0x1
  40777c:	str	w2, [x19, #104]
  407780:	ldr	w2, [x19, #88]
  407784:	str	w2, [x0, w1, sxtw #2]
  407788:	ldr	x19, [sp, #16]
  40778c:	ldp	x29, x30, [sp], #32
  407790:	ret
  407794:	stp	x29, x30, [sp, #-48]!
  407798:	mov	x29, sp
  40779c:	stp	x19, x20, [sp, #16]
  4077a0:	stp	x21, x22, [sp, #32]
  4077a4:	mov	x20, x0
  4077a8:	mov	w22, w1
  4077ac:	ldr	w21, [x0, #104]
  4077b0:	cbz	w21, 4077c4 <nftw@plt+0x4c44>
  4077b4:	ldr	x0, [x0, #96]
  4077b8:	sub	w21, w21, #0x1
  4077bc:	str	w21, [x20, #104]
  4077c0:	ldr	w21, [x0, w21, sxtw #2]
  4077c4:	ldr	w2, [x20, #88]
  4077c8:	add	w2, w2, #0x1
  4077cc:	sbfiz	x19, x2, #1, #32
  4077d0:	add	x2, x19, w2, sxtw
  4077d4:	lsl	x19, x2, #2
  4077d8:	mov	x1, x19
  4077dc:	ldr	x0, [x20, #80]
  4077e0:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4077e4:	str	x0, [x20, #80]
  4077e8:	sub	x2, x19, #0xc
  4077ec:	str	w22, [x0, x2]
  4077f0:	ldr	x0, [x20, #80]
  4077f4:	add	x0, x0, x2
  4077f8:	str	w21, [x0, #4]
  4077fc:	ldr	x0, [x20, #80]
  407800:	add	x2, x0, x2
  407804:	mov	w0, #0xf                   	// #15
  407808:	str	w0, [x2, #8]
  40780c:	ldr	w0, [x20, #88]
  407810:	add	w0, w0, #0x1
  407814:	str	w0, [x20, #88]
  407818:	ldp	x19, x20, [sp, #16]
  40781c:	ldp	x21, x22, [sp, #32]
  407820:	ldp	x29, x30, [sp], #48
  407824:	ret
  407828:	mov	x4, x0
  40782c:	ldrb	w0, [x0]
  407830:	cmp	w0, #0x2e
  407834:	b.ne	4078e4 <nftw@plt+0x4d64>  // b.any
  407838:	mov	x0, x4
  40783c:	ldrb	w1, [x0, #1]
  407840:	cmp	w1, #0x2e
  407844:	b.ne	407860 <nftw@plt+0x4ce0>  // b.any
  407848:	ldrb	w1, [x0, #2]
  40784c:	cmp	w1, #0x2f
  407850:	b.ne	407860 <nftw@plt+0x4ce0>  // b.any
  407854:	ldrb	w1, [x0, #3]!
  407858:	cmp	w1, #0x2e
  40785c:	b.eq	40783c <nftw@plt+0x4cbc>  // b.none
  407860:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407864:	add	x1, x1, #0xb98
  407868:	add	x1, x1, #0xa8
  40786c:	ldrb	w2, [x1, #2]
  407870:	cmp	w2, #0x2f
  407874:	b.ne	407890 <nftw@plt+0x4d10>  // b.any
  407878:	ldrb	w2, [x1, #3]!
  40787c:	cmp	w2, #0x2e
  407880:	b.ne	407890 <nftw@plt+0x4d10>  // b.any
  407884:	ldrb	w2, [x1, #1]
  407888:	cmp	w2, #0x2e
  40788c:	b.eq	40786c <nftw@plt+0x4cec>  // b.none
  407890:	ldrb	w2, [x0]
  407894:	ldrb	w3, [x1]
  407898:	cmp	w3, #0x0
  40789c:	ccmp	w2, w3, #0x0, ne  // ne = any
  4078a0:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  4078a4:	b.eq	4078c0 <nftw@plt+0x4d40>  // b.none
  4078a8:	ldrb	w3, [x0, #1]!
  4078ac:	ldrb	w2, [x1, #1]!
  4078b0:	cmp	w3, #0x0
  4078b4:	ccmp	w3, w2, #0x0, ne  // ne = any
  4078b8:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  4078bc:	b.ne	4078a8 <nftw@plt+0x4d28>  // b.any
  4078c0:	cmp	x4, x0
  4078c4:	b.cs	4078e0 <nftw@plt+0x4d60>  // b.hs, b.nlast
  4078c8:	ldurb	w1, [x0, #-1]
  4078cc:	cmp	w1, #0x2f
  4078d0:	b.eq	4078e0 <nftw@plt+0x4d60>  // b.none
  4078d4:	sub	x0, x0, #0x1
  4078d8:	cmp	x4, x0
  4078dc:	b.ne	4078c8 <nftw@plt+0x4d48>  // b.any
  4078e0:	ret
  4078e4:	mov	x0, x4
  4078e8:	b	407860 <nftw@plt+0x4ce0>
  4078ec:	stp	x29, x30, [sp, #-304]!
  4078f0:	mov	x29, sp
  4078f4:	str	x19, [sp, #16]
  4078f8:	mov	x19, x0
  4078fc:	str	x1, [sp, #248]
  407900:	str	x2, [sp, #256]
  407904:	str	x3, [sp, #264]
  407908:	str	x4, [sp, #272]
  40790c:	str	x5, [sp, #280]
  407910:	str	x6, [sp, #288]
  407914:	str	x7, [sp, #296]
  407918:	str	q0, [sp, #112]
  40791c:	str	q1, [sp, #128]
  407920:	str	q2, [sp, #144]
  407924:	str	q3, [sp, #160]
  407928:	str	q4, [sp, #176]
  40792c:	str	q5, [sp, #192]
  407930:	str	q6, [sp, #208]
  407934:	str	q7, [sp, #224]
  407938:	add	x0, sp, #0x130
  40793c:	str	x0, [sp, #40]
  407940:	str	x0, [sp, #48]
  407944:	add	x0, sp, #0xf0
  407948:	str	x0, [sp, #56]
  40794c:	mov	w0, #0xffffffc8            	// #-56
  407950:	str	w0, [sp, #64]
  407954:	mov	w0, #0xffffff80            	// #-128
  407958:	str	w0, [sp, #68]
  40795c:	bl	402aa0 <__errno_location@plt>
  407960:	ldr	w0, [x0]
  407964:	str	w0, [sp, #88]
  407968:	add	x0, sp, #0x28
  40796c:	str	x0, [sp, #80]
  407970:	mov	x0, x19
  407974:	bl	402b10 <gettext@plt>
  407978:	str	x0, [sp, #72]
  40797c:	str	xzr, [sp, #96]
  407980:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407984:	ldr	x0, [x19, #920]
  407988:	add	x1, sp, #0x48
  40798c:	ldr	x0, [x0]
  407990:	bl	411744 <nftw@plt+0xebc4>
  407994:	ldr	x0, [x19, #920]
  407998:	ldr	x0, [x0]
  40799c:	bl	40fb58 <nftw@plt+0xcfd8>
  4079a0:	ldr	x19, [sp, #16]
  4079a4:	ldp	x29, x30, [sp], #304
  4079a8:	ret
  4079ac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4079b0:	ldr	x0, [x0, #920]
  4079b4:	ldr	x0, [x0, #24]
  4079b8:	cmp	x0, #0x0
  4079bc:	cset	w0, ne  // ne = any
  4079c0:	ret
  4079c4:	stp	x29, x30, [sp, #-272]!
  4079c8:	mov	x29, sp
  4079cc:	str	x19, [sp, #16]
  4079d0:	mov	x19, x0
  4079d4:	mov	x0, x1
  4079d8:	str	x2, [sp, #224]
  4079dc:	str	x3, [sp, #232]
  4079e0:	str	x4, [sp, #240]
  4079e4:	str	x5, [sp, #248]
  4079e8:	str	x6, [sp, #256]
  4079ec:	str	x7, [sp, #264]
  4079f0:	str	q0, [sp, #96]
  4079f4:	str	q1, [sp, #112]
  4079f8:	str	q2, [sp, #128]
  4079fc:	str	q3, [sp, #144]
  407a00:	str	q4, [sp, #160]
  407a04:	str	q5, [sp, #176]
  407a08:	str	q6, [sp, #192]
  407a0c:	str	q7, [sp, #208]
  407a10:	add	x1, sp, #0x110
  407a14:	str	x1, [sp, #64]
  407a18:	str	x1, [sp, #72]
  407a1c:	add	x1, sp, #0xe0
  407a20:	str	x1, [sp, #80]
  407a24:	mov	w1, #0xffffffd0            	// #-48
  407a28:	str	w1, [sp, #88]
  407a2c:	mov	w1, #0xffffff80            	// #-128
  407a30:	str	w1, [sp, #92]
  407a34:	bl	402b10 <gettext@plt>
  407a38:	ldp	x2, x3, [sp, #64]
  407a3c:	stp	x2, x3, [sp, #32]
  407a40:	ldp	x2, x3, [sp, #80]
  407a44:	stp	x2, x3, [sp, #48]
  407a48:	add	x2, sp, #0x20
  407a4c:	mov	x1, x0
  407a50:	mov	x0, x19
  407a54:	bl	402a80 <vfprintf@plt>
  407a58:	ldr	x19, [sp, #16]
  407a5c:	ldp	x29, x30, [sp], #272
  407a60:	ret
  407a64:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407a68:	ldr	x1, [x0, #920]
  407a6c:	ldr	w0, [x1, #240]
  407a70:	add	w0, w0, #0x1
  407a74:	str	w0, [x1, #240]
  407a78:	ret
  407a7c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407a80:	ldr	x0, [x0, #920]
  407a84:	ldr	w1, [x0, #240]
  407a88:	sub	w1, w1, #0x1
  407a8c:	str	w1, [x0, #240]
  407a90:	cbnz	w1, 407ad8 <nftw@plt+0x4f58>
  407a94:	ldr	w1, [x0, #244]
  407a98:	cmp	w1, #0x0
  407a9c:	b.le	407ac8 <nftw@plt+0x4f48>
  407aa0:	ldr	x1, [x0, #256]
  407aa4:	cbz	x1, 407ac8 <nftw@plt+0x4f48>
  407aa8:	stp	x29, x30, [sp, #-16]!
  407aac:	mov	x29, sp
  407ab0:	blr	x1
  407ab4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407ab8:	ldr	x0, [x0, #920]
  407abc:	str	wzr, [x0, #244]
  407ac0:	ldp	x29, x30, [sp], #16
  407ac4:	ret
  407ac8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407acc:	ldr	x0, [x0, #920]
  407ad0:	str	wzr, [x0, #244]
  407ad4:	ret
  407ad8:	ret
  407adc:	stp	x29, x30, [sp, #-32]!
  407ae0:	mov	x29, sp
  407ae4:	stp	x19, x20, [sp, #16]
  407ae8:	mov	x19, x0
  407aec:	ldr	x1, [x0, #264]
  407af0:	cbz	x1, 407af8 <nftw@plt+0x4f78>
  407af4:	blr	x1
  407af8:	bl	414760 <nftw@plt+0x11be0>
  407afc:	ldr	x0, [x19, #72]
  407b00:	bl	402910 <free@plt>
  407b04:	str	xzr, [x19, #72]
  407b08:	ldr	x0, [x19]
  407b0c:	ldr	x1, [x0]
  407b10:	ldr	x1, [x1]
  407b14:	blr	x1
  407b18:	ldr	x0, [x19]
  407b1c:	bl	402910 <free@plt>
  407b20:	str	xzr, [x19]
  407b24:	ldr	x20, [x19, #232]
  407b28:	cbz	x20, 407b48 <nftw@plt+0x4fc8>
  407b2c:	ldr	x1, [x20, #8]
  407b30:	add	x0, x20, #0x8
  407b34:	bl	409c3c <nftw@plt+0x70bc>
  407b38:	mov	x1, #0x28                  	// #40
  407b3c:	mov	x0, x20
  407b40:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  407b44:	str	xzr, [x19, #232]
  407b48:	ldp	x19, x20, [sp, #16]
  407b4c:	ldp	x29, x30, [sp], #32
  407b50:	ret
  407b54:	ldr	w2, [x0, #132]
  407b58:	cbz	w2, 407bc4 <nftw@plt+0x5044>
  407b5c:	stp	x29, x30, [sp, #-32]!
  407b60:	mov	x29, sp
  407b64:	stp	x19, x20, [sp, #16]
  407b68:	mov	x19, x0
  407b6c:	and	w20, w1, #0xff
  407b70:	ldr	w0, [x0, #24]
  407b74:	ldr	w1, [x19, #28]
  407b78:	add	w0, w0, w1
  407b7c:	ldr	w1, [x19, #56]
  407b80:	add	w0, w0, w1
  407b84:	cmp	w2, w0
  407b88:	b.le	407b98 <nftw@plt+0x5018>
  407b8c:	ldp	x19, x20, [sp, #16]
  407b90:	ldp	x29, x30, [sp], #32
  407b94:	ret
  407b98:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407b9c:	add	x1, x1, #0x710
  407ba0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407ba4:	ldr	x0, [x0, #1392]
  407ba8:	bl	4079c4 <nftw@plt+0x4e44>
  407bac:	cbnz	w20, 407bb8 <nftw@plt+0x5038>
  407bb0:	mov	w0, #0x1                   	// #1
  407bb4:	bl	402520 <exit@plt>
  407bb8:	mov	x0, x19
  407bbc:	bl	407adc <nftw@plt+0x4f5c>
  407bc0:	b	407bb0 <nftw@plt+0x5030>
  407bc4:	ret
  407bc8:	stp	x29, x30, [sp, #-48]!
  407bcc:	mov	x29, sp
  407bd0:	str	x19, [sp, #16]
  407bd4:	mov	x19, x0
  407bd8:	cmp	w1, #0x5
  407bdc:	b.hi	407c64 <nftw@plt+0x50e4>  // b.pmore
  407be0:	cmp	w1, #0x3
  407be4:	b.hi	407cd0 <nftw@plt+0x5150>  // b.pmore
  407be8:	cmp	w1, #0x2
  407bec:	b.ne	407c1c <nftw@plt+0x509c>  // b.any
  407bf0:	ldrb	w0, [x0, #120]
  407bf4:	cbnz	w0, 407d24 <nftw@plt+0x51a4>
  407bf8:	mov	x0, x19
  407bfc:	bl	407adc <nftw@plt+0x4f5c>
  407c00:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407c04:	add	x1, x1, #0x820
  407c08:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407c0c:	ldr	x0, [x0, #1392]
  407c10:	bl	4079c4 <nftw@plt+0x4e44>
  407c14:	mov	w0, #0x1                   	// #1
  407c18:	bl	402520 <exit@plt>
  407c1c:	cmp	w1, #0x3
  407c20:	b.ne	407d28 <nftw@plt+0x51a8>  // b.any
  407c24:	mov	x3, #0x0                   	// #0
  407c28:	adrp	x2, 406000 <nftw@plt+0x3480>
  407c2c:	add	x2, x2, #0xeb8
  407c30:	mov	w1, #0x0                   	// #0
  407c34:	mov	x0, #0x0                   	// #0
  407c38:	bl	4356a0 <nftw@plt+0x32b20>
  407c3c:	str	wzr, [sp, #44]
  407c40:	cbz	x0, 407c84 <nftw@plt+0x5104>
  407c44:	add	x4, sp, #0x2c
  407c48:	adrp	x3, 406000 <nftw@plt+0x3480>
  407c4c:	add	x3, x3, #0xeb8
  407c50:	adrp	x2, 406000 <nftw@plt+0x3480>
  407c54:	add	x2, x2, #0xcb0
  407c58:	mov	w1, #0x2                   	// #2
  407c5c:	bl	4357ac <nftw@plt+0x32c2c>
  407c60:	b	407c84 <nftw@plt+0x5104>
  407c64:	cmp	w1, #0x9
  407c68:	b.hi	407c78 <nftw@plt+0x50f8>  // b.pmore
  407c6c:	ldr	x19, [sp, #16]
  407c70:	ldp	x29, x30, [sp], #48
  407c74:	ret
  407c78:	cmp	w1, #0xd
  407c7c:	b.ne	407d28 <nftw@plt+0x51a8>  // b.any
  407c80:	str	wzr, [sp, #44]
  407c84:	ldrb	w0, [x19, #120]
  407c88:	cbnz	w0, 407d08 <nftw@plt+0x5188>
  407c8c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407c90:	add	x1, x1, #0x770
  407c94:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407c98:	ldr	x0, [x0, #1392]
  407c9c:	bl	4079c4 <nftw@plt+0x4e44>
  407ca0:	ldr	w0, [sp, #44]
  407ca4:	cmp	w0, #0x0
  407ca8:	b.gt	407d0c <nftw@plt+0x518c>
  407cac:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  407cb0:	add	x2, x2, #0xde0
  407cb4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407cb8:	add	x1, x1, #0x800
  407cbc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407cc0:	ldr	x0, [x0, #1392]
  407cc4:	bl	4079c4 <nftw@plt+0x4e44>
  407cc8:	mov	w0, #0x4                   	// #4
  407ccc:	bl	402520 <exit@plt>
  407cd0:	ldrb	w0, [x0, #120]
  407cd4:	cbnz	w0, 407d04 <nftw@plt+0x5184>
  407cd8:	ldrb	w0, [x19, #128]
  407cdc:	cbz	w0, 407c6c <nftw@plt+0x50ec>
  407ce0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407ce4:	add	x1, x1, #0x740
  407ce8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407cec:	ldr	x0, [x0, #1392]
  407cf0:	bl	4079c4 <nftw@plt+0x4e44>
  407cf4:	mov	x0, x19
  407cf8:	bl	407adc <nftw@plt+0x4f5c>
  407cfc:	mov	w0, #0x1                   	// #1
  407d00:	bl	402520 <exit@plt>
  407d04:	bl	4027f0 <abort@plt>
  407d08:	bl	4027f0 <abort@plt>
  407d0c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407d10:	add	x1, x1, #0x7c0
  407d14:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407d18:	ldr	x0, [x0, #1392]
  407d1c:	bl	4079c4 <nftw@plt+0x4e44>
  407d20:	b	407cac <nftw@plt+0x512c>
  407d24:	bl	4027f0 <abort@plt>
  407d28:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407d2c:	add	x2, x2, #0x840
  407d30:	mov	w1, #0x231                 	// #561
  407d34:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407d38:	add	x0, x0, #0x860
  407d3c:	bl	408d8c <nftw@plt+0x620c>
  407d40:	stp	x29, x30, [sp, #-144]!
  407d44:	mov	x29, sp
  407d48:	stp	x19, x20, [sp, #16]
  407d4c:	stp	x21, x22, [sp, #32]
  407d50:	mov	x19, x0
  407d54:	mov	x20, x1
  407d58:	mov	w1, #0x0                   	// #0
  407d5c:	mov	x0, x20
  407d60:	bl	40edfc <nftw@plt+0xc27c>
  407d64:	mov	w1, w0
  407d68:	ldr	w21, [x20, #56]
  407d6c:	sub	w0, w21, #0x6
  407d70:	tst	w0, #0xfffffffb
  407d74:	b.ne	407e08 <nftw@plt+0x5288>  // b.any
  407d78:	ldrb	w2, [x19, #129]
  407d7c:	mov	w0, #0x0                   	// #0
  407d80:	cbnz	w2, 407f9c <nftw@plt+0x541c>
  407d84:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  407d88:	ldr	x0, [x0, #2296]
  407d8c:	bl	42c1c8 <nftw@plt+0x29648>
  407d90:	cbz	w0, 407d9c <nftw@plt+0x521c>
  407d94:	ldrb	w0, [x19, #130]
  407d98:	cbz	w0, 407f9c <nftw@plt+0x541c>
  407d9c:	ldr	w0, [x20, #56]
  407da0:	cmp	w0, #0xa
  407da4:	b.ne	407e08 <nftw@plt+0x5288>  // b.any
  407da8:	ldrb	w0, [x19, #122]
  407dac:	cmp	w0, #0x0
  407db0:	mov	w21, #0x4                   	// #4
  407db4:	mov	w0, #0x6                   	// #6
  407db8:	csel	w21, w21, w0, ne  // ne = any
  407dbc:	str	w21, [x20, #56]
  407dc0:	ldr	w1, [x19, #216]
  407dc4:	cmp	w1, #0x0
  407dc8:	b.le	407fd4 <nftw@plt+0x5454>
  407dcc:	stp	x23, x24, [sp, #48]
  407dd0:	stp	x25, x26, [sp, #64]
  407dd4:	cmp	w1, #0x2
  407dd8:	b.gt	407de4 <nftw@plt+0x5264>
  407ddc:	ldr	x0, [x19]
  407de0:	bl	40fb58 <nftw@plt+0xcfd8>
  407de4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  407de8:	add	x1, x1, #0x878
  407dec:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  407df0:	ldr	x0, [x0, #1392]
  407df4:	bl	4079c4 <nftw@plt+0x4e44>
  407df8:	mov	w1, #0x3                   	// #3
  407dfc:	mov	x0, x19
  407e00:	bl	407bc8 <nftw@plt+0x5048>
  407e04:	bl	4027f0 <abort@plt>
  407e08:	ldr	w0, [x20, #56]
  407e0c:	cmp	w0, #0x8
  407e10:	b.ne	407fac <nftw@plt+0x542c>  // b.any
  407e14:	ldrb	w0, [x19, #220]
  407e18:	cbnz	w0, 4082e4 <nftw@plt+0x5764>
  407e1c:	ldr	w1, [x19, #216]
  407e20:	cmp	w1, #0x0
  407e24:	b.gt	407dcc <nftw@plt+0x524c>
  407e28:	ldr	w0, [x20, #60]
  407e2c:	cbz	w0, 407e7c <nftw@plt+0x52fc>
  407e30:	ldr	w1, [x19, #124]
  407e34:	cmp	w0, w1
  407e38:	b.eq	407e7c <nftw@plt+0x52fc>  // b.none
  407e3c:	ldr	x2, [x19, #168]
  407e40:	ldr	x1, [x19, #176]
  407e44:	blr	x2
  407e48:	mov	w1, w0
  407e4c:	mov	w0, #0x0                   	// #0
  407e50:	cbz	w1, 407f9c <nftw@plt+0x541c>
  407e54:	ldr	w0, [x19, #88]
  407e58:	cmp	w0, #0x0
  407e5c:	b.gt	408008 <nftw@plt+0x5488>
  407e60:	ldrsw	x1, [x20, #60]
  407e64:	ldr	x0, [x19, #72]
  407e68:	ldr	w0, [x0, x1, lsl #2]
  407e6c:	cbnz	w0, 4080ac <nftw@plt+0x552c>
  407e70:	ldr	w0, [x20, #56]
  407e74:	cmp	w0, #0x1
  407e78:	b.eq	4082ec <nftw@plt+0x576c>  // b.none
  407e7c:	ldr	w0, [x20, #56]
  407e80:	cmp	w0, #0x8
  407e84:	b.ne	407ff8 <nftw@plt+0x5478>  // b.any
  407e88:	ldr	w0, [x19, #216]
  407e8c:	add	w0, w0, #0x1
  407e90:	str	w0, [x19, #216]
  407e94:	ldr	w0, [x20, #56]
  407e98:	cmp	w0, #0xd
  407e9c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  407ea0:	b.ne	407ed0 <nftw@plt+0x5350>  // b.any
  407ea4:	ldr	w0, [x19, #24]
  407ea8:	cmp	w0, #0x0
  407eac:	b.le	4080b4 <nftw@plt+0x5534>
  407eb0:	ldrb	w0, [x19, #120]
  407eb4:	cbz	w0, 4080c4 <nftw@plt+0x5544>
  407eb8:	ldr	x3, [x19, #160]
  407ebc:	cbz	x3, 407ed0 <nftw@plt+0x5350>
  407ec0:	ldr	x2, [x20, #8]
  407ec4:	ldr	x1, [x20]
  407ec8:	mov	x0, x19
  407ecc:	blr	x3
  407ed0:	ldr	w0, [x20, #56]
  407ed4:	cmp	w0, #0x4
  407ed8:	ccmp	w21, #0x6, #0x0, eq  // eq = none
  407edc:	b.eq	408104 <nftw@plt+0x5584>  // b.none
  407ee0:	add	x0, x19, w0, sxtw #2
  407ee4:	ldr	w1, [x0, #8]
  407ee8:	add	w1, w1, #0x1
  407eec:	str	w1, [x0, #8]
  407ef0:	ldr	w0, [x19, #244]
  407ef4:	cbnz	w0, 407f08 <nftw@plt+0x5388>
  407ef8:	ldr	x1, [x19, #248]
  407efc:	cbz	x1, 407f08 <nftw@plt+0x5388>
  407f00:	mov	x0, x19
  407f04:	blr	x1
  407f08:	ldr	w0, [x19, #244]
  407f0c:	add	w0, w0, #0x1
  407f10:	str	w0, [x19, #244]
  407f14:	add	x0, x20, #0x30
  407f18:	str	x0, [x20, #24]
  407f1c:	str	xzr, [x20, #48]
  407f20:	mov	x1, x20
  407f24:	ldr	x0, [x19]
  407f28:	bl	40fc78 <nftw@plt+0xd0f8>
  407f2c:	ldr	x2, [x19, #136]
  407f30:	mov	x1, x20
  407f34:	mov	x0, x19
  407f38:	blr	x2
  407f3c:	ldr	x0, [x19]
  407f40:	bl	40fa4c <nftw@plt+0xcecc>
  407f44:	ldrb	w0, [x19, #119]
  407f48:	cbnz	w0, 408114 <nftw@plt+0x5594>
  407f4c:	ldr	x3, [x19, #152]
  407f50:	mov	w2, w21
  407f54:	mov	x1, x20
  407f58:	mov	x0, x19
  407f5c:	blr	x3
  407f60:	ldrb	w0, [x19, #229]
  407f64:	cbnz	w0, 4081c0 <nftw@plt+0x5640>
  407f68:	ldr	w1, [x20, #56]
  407f6c:	mov	x0, x19
  407f70:	bl	407bc8 <nftw@plt+0x5048>
  407f74:	str	xzr, [x20, #48]
  407f78:	ldr	x0, [x19, #232]
  407f7c:	cbz	x0, 407f8c <nftw@plt+0x540c>
  407f80:	ldr	x1, [x20, #40]
  407f84:	ldrb	w2, [x1, #161]
  407f88:	cbz	w2, 4082dc <nftw@plt+0x575c>
  407f8c:	ldr	w0, [x19, #216]
  407f90:	sub	w0, w0, #0x1
  407f94:	str	w0, [x19, #216]
  407f98:	mov	w0, #0x1                   	// #1
  407f9c:	ldp	x19, x20, [sp, #16]
  407fa0:	ldp	x21, x22, [sp, #32]
  407fa4:	ldp	x29, x30, [sp], #144
  407fa8:	ret
  407fac:	ldr	w1, [x19, #216]
  407fb0:	cmp	w1, #0x0
  407fb4:	b.le	407fd4 <nftw@plt+0x5454>
  407fb8:	cmp	w0, #0xd
  407fbc:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  407fc0:	b.ne	407dcc <nftw@plt+0x524c>  // b.any
  407fc4:	cmp	w1, #0x1
  407fc8:	b.ne	407dcc <nftw@plt+0x524c>  // b.any
  407fcc:	ldr	x0, [x19]
  407fd0:	bl	40fb58 <nftw@plt+0xcfd8>
  407fd4:	ldrb	w0, [x19, #64]
  407fd8:	cbz	w0, 407e28 <nftw@plt+0x52a8>
  407fdc:	ldr	w0, [x20, #56]
  407fe0:	cmp	w0, #0x6
  407fe4:	b.ne	407e28 <nftw@plt+0x52a8>  // b.any
  407fe8:	mov	w0, #0x4                   	// #4
  407fec:	str	w0, [x20, #56]
  407ff0:	ldr	w0, [x20, #60]
  407ff4:	cbnz	w0, 408308 <nftw@plt+0x5788>
  407ff8:	mov	w1, #0x0                   	// #0
  407ffc:	mov	x0, x19
  408000:	bl	407b54 <nftw@plt+0x4fd4>
  408004:	b	407e88 <nftw@plt+0x5308>
  408008:	stp	x23, x24, [sp, #48]
  40800c:	mov	w1, #0x0                   	// #0
  408010:	mov	x0, x20
  408014:	bl	40edfc <nftw@plt+0xc27c>
  408018:	mov	w23, w0
  40801c:	ldr	w22, [x19, #88]
  408020:	subs	w22, w22, #0x1
  408024:	b.mi	4082f4 <nftw@plt+0x5774>  // b.first
  408028:	stp	x25, x26, [sp, #64]
  40802c:	adrp	x24, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408030:	b	408040 <nftw@plt+0x54c0>
  408034:	ldr	w22, [x1, #4]
  408038:	subs	w22, w22, #0x1
  40803c:	b.mi	4080a0 <nftw@plt+0x5520>  // b.first
  408040:	sbfiz	x1, x22, #1, #32
  408044:	add	x1, x1, w22, sxtw
  408048:	lsl	x25, x1, #2
  40804c:	ldr	x0, [x19, #80]
  408050:	mov	w2, w23
  408054:	ldr	w1, [x0, x1, lsl #2]
  408058:	ldr	x0, [x24, #2296]
  40805c:	bl	42c550 <nftw@plt+0x299d0>
  408060:	tbnz	w0, #31, 408038 <nftw@plt+0x54b8>
  408064:	ldr	x1, [x19, #80]
  408068:	add	x1, x1, x25
  40806c:	ldr	w2, [x1, #8]
  408070:	cmp	w2, #0xf
  408074:	b.eq	408034 <nftw@plt+0x54b4>  // b.none
  408078:	ldr	w0, [x1, #4]
  40807c:	cbz	w0, 40808c <nftw@plt+0x550c>
  408080:	ldr	w1, [x20, #60]
  408084:	cmp	w0, w1
  408088:	b.ne	408038 <nftw@plt+0x54b8>  // b.any
  40808c:	cbz	w2, 4082fc <nftw@plt+0x577c>
  408090:	str	w2, [x20, #56]
  408094:	ldp	x23, x24, [sp, #48]
  408098:	ldp	x25, x26, [sp, #64]
  40809c:	b	407e70 <nftw@plt+0x52f0>
  4080a0:	ldp	x23, x24, [sp, #48]
  4080a4:	ldp	x25, x26, [sp, #64]
  4080a8:	b	407e60 <nftw@plt+0x52e0>
  4080ac:	str	w0, [x20, #56]
  4080b0:	b	407e70 <nftw@plt+0x52f0>
  4080b4:	ldr	w0, [x19, #28]
  4080b8:	cmp	w0, #0x0
  4080bc:	b.gt	407eb0 <nftw@plt+0x5330>
  4080c0:	b	407eb8 <nftw@plt+0x5338>
  4080c4:	stp	x23, x24, [sp, #48]
  4080c8:	stp	x25, x26, [sp, #64]
  4080cc:	mov	w1, #0x0                   	// #0
  4080d0:	mov	x0, x20
  4080d4:	bl	40edfc <nftw@plt+0xc27c>
  4080d8:	add	x8, sp, #0x70
  4080dc:	bl	414820 <nftw@plt+0x11ca0>
  4080e0:	ldr	w3, [sp, #120]
  4080e4:	ldr	x2, [sp, #112]
  4080e8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4080ec:	add	x1, x1, #0x8b8
  4080f0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4080f4:	ldr	x0, [x0, #1392]
  4080f8:	bl	4079c4 <nftw@plt+0x4e44>
  4080fc:	mov	w0, #0x4                   	// #4
  408100:	bl	402520 <exit@plt>
  408104:	ldr	w0, [x19, #56]
  408108:	add	w0, w0, #0x1
  40810c:	str	w0, [x19, #56]
  408110:	b	407ef0 <nftw@plt+0x5370>
  408114:	ldr	x4, [x19, #184]
  408118:	ldr	w3, [x20, #56]
  40811c:	mov	w2, w21
  408120:	ldr	w1, [x20, #60]
  408124:	mov	x0, x19
  408128:	blr	x4
  40812c:	mov	x22, x0
  408130:	cbz	x0, 407f4c <nftw@plt+0x53cc>
  408134:	stp	x23, x24, [sp, #48]
  408138:	ldr	x23, [x19]
  40813c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408140:	add	x1, x1, #0x8e8
  408144:	mov	x0, x23
  408148:	bl	40f9f8 <nftw@plt+0xce78>
  40814c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408150:	add	x0, x0, #0xb98
  408154:	ldrsw	x1, [x20, #56]
  408158:	add	x0, x0, #0x20
  40815c:	ldr	x24, [x0, x1, lsl #3]
  408160:	mov	x0, x24
  408164:	bl	4024f0 <strlen@plt>
  408168:	mov	x2, x0
  40816c:	mov	x1, x24
  408170:	ldrb	w0, [x23, #67]
  408174:	bl	409f38 <nftw@plt+0x73b8>
  408178:	mov	x1, x0
  40817c:	mov	x0, x23
  408180:	bl	40f9f8 <nftw@plt+0xce78>
  408184:	mov	x1, x22
  408188:	mov	x0, x23
  40818c:	bl	40f9f8 <nftw@plt+0xce78>
  408190:	ldrb	w0, [x23, #67]
  408194:	bl	409fcc <nftw@plt+0x744c>
  408198:	mov	x1, x0
  40819c:	mov	x0, x23
  4081a0:	bl	40f9f8 <nftw@plt+0xce78>
  4081a4:	mov	w1, #0x5d                  	// #93
  4081a8:	mov	x0, x23
  4081ac:	bl	40f400 <nftw@plt+0xc880>
  4081b0:	mov	x0, x22
  4081b4:	bl	402910 <free@plt>
  4081b8:	ldp	x23, x24, [sp, #48]
  4081bc:	b	407f4c <nftw@plt+0x53cc>
  4081c0:	stp	x23, x24, [sp, #48]
  4081c4:	ldr	x22, [x19]
  4081c8:	ldr	x23, [x20, #40]
  4081cc:	cbz	x22, 4081f8 <nftw@plt+0x5678>
  4081d0:	cbz	x23, 408214 <nftw@plt+0x5694>
  4081d4:	ldr	w0, [x23, #120]
  4081d8:	cbz	w0, 4082cc <nftw@plt+0x574c>
  4081dc:	stp	x25, x26, [sp, #64]
  4081e0:	mov	w21, #0x0                   	// #0
  4081e4:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4081e8:	add	x25, x25, #0x908
  4081ec:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4081f0:	add	x24, x24, #0x910
  4081f4:	b	4082ac <nftw@plt+0x572c>
  4081f8:	stp	x25, x26, [sp, #64]
  4081fc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408200:	add	x2, x2, #0x8f0
  408204:	mov	w1, #0x322                 	// #802
  408208:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40820c:	add	x0, x0, #0x860
  408210:	bl	408d8c <nftw@plt+0x620c>
  408214:	stp	x25, x26, [sp, #64]
  408218:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40821c:	add	x2, x2, #0x8f0
  408220:	mov	w1, #0x323                 	// #803
  408224:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408228:	add	x0, x0, #0x860
  40822c:	bl	408d8c <nftw@plt+0x620c>
  408230:	add	x0, x23, w21, sxtw #3
  408234:	add	x0, x0, #0x80
  408238:	ldr	x26, [x0]
  40823c:	add	x8, sp, #0x50
  408240:	ldr	w0, [x26]
  408244:	bl	414820 <nftw@plt+0x11ca0>
  408248:	mov	x1, x25
  40824c:	mov	x0, x22
  408250:	bl	40f9f8 <nftw@plt+0xce78>
  408254:	ldr	x1, [sp, #80]
  408258:	mov	x0, x22
  40825c:	bl	409140 <nftw@plt+0x65c0>
  408260:	add	x8, sp, #0x70
  408264:	ldr	w0, [x26, #4]
  408268:	bl	414820 <nftw@plt+0x11ca0>
  40826c:	ldr	w5, [sp, #124]
  408270:	ldr	w4, [sp, #120]
  408274:	ldr	w3, [sp, #92]
  408278:	ldr	w2, [sp, #88]
  40827c:	mov	x1, x24
  408280:	mov	x0, x22
  408284:	bl	411830 <nftw@plt+0xecb0>
  408288:	ldr	x1, [x26, #8]
  40828c:	mov	x0, x22
  408290:	bl	409140 <nftw@plt+0x65c0>
  408294:	mov	x0, x22
  408298:	bl	40f39c <nftw@plt+0xc81c>
  40829c:	add	w21, w21, #0x1
  4082a0:	ldr	w0, [x23, #120]
  4082a4:	cmp	w0, w21
  4082a8:	b.ls	4082c8 <nftw@plt+0x5748>  // b.plast
  4082ac:	cmp	w21, #0x1
  4082b0:	b.le	408230 <nftw@plt+0x56b0>
  4082b4:	sbfiz	x0, x21, #3, #32
  4082b8:	sub	x1, x0, #0x10
  4082bc:	ldr	x0, [x23, #152]
  4082c0:	add	x0, x0, x1
  4082c4:	b	408238 <nftw@plt+0x56b8>
  4082c8:	ldp	x25, x26, [sp, #64]
  4082cc:	ldr	x0, [x19]
  4082d0:	bl	40f1d0 <nftw@plt+0xc650>
  4082d4:	ldp	x23, x24, [sp, #48]
  4082d8:	b	407f68 <nftw@plt+0x53e8>
  4082dc:	bl	40e5c8 <nftw@plt+0xba48>
  4082e0:	b	407f8c <nftw@plt+0x540c>
  4082e4:	mov	w0, #0x0                   	// #0
  4082e8:	b	407f9c <nftw@plt+0x541c>
  4082ec:	mov	w0, #0x0                   	// #0
  4082f0:	b	407f9c <nftw@plt+0x541c>
  4082f4:	ldp	x23, x24, [sp, #48]
  4082f8:	b	407e60 <nftw@plt+0x52e0>
  4082fc:	ldp	x23, x24, [sp, #48]
  408300:	ldp	x25, x26, [sp, #64]
  408304:	b	407e60 <nftw@plt+0x52e0>
  408308:	ldr	w1, [x19, #124]
  40830c:	cmp	w1, w0
  408310:	b.ne	407e3c <nftw@plt+0x52bc>  // b.any
  408314:	b	407ff8 <nftw@plt+0x5478>
  408318:	stp	x29, x30, [sp, #-96]!
  40831c:	mov	x29, sp
  408320:	stp	x19, x20, [sp, #16]
  408324:	mov	w20, w1
  408328:	mov	x1, x2
  40832c:	mov	x2, x3
  408330:	cmp	w4, #0xb
  408334:	b.ne	40838c <nftw@plt+0x580c>  // b.any
  408338:	adrp	x3, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40833c:	ldr	x3, [x3, #920]
  408340:	ldrb	w3, [x3, #123]
  408344:	cmp	w3, #0x0
  408348:	mov	w4, #0x6                   	// #6
  40834c:	mov	w3, #0x4                   	// #4
  408350:	csel	w4, w4, w3, ne  // ne = any
  408354:	mov	x3, x0
  408358:	add	x0, sp, #0x20
  40835c:	bl	408e38 <nftw@plt+0x62b8>
  408360:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  408364:	ldr	x0, [x0, #920]
  408368:	ldr	w0, [x0, #124]
  40836c:	str	w0, [sp, #92]
  408370:	add	x1, sp, #0x20
  408374:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  408378:	ldr	x0, [x0, #920]
  40837c:	bl	407d40 <nftw@plt+0x51c0>
  408380:	ldp	x19, x20, [sp, #16]
  408384:	ldp	x29, x30, [sp], #96
  408388:	ret
  40838c:	mov	w19, w4
  408390:	mov	x3, x0
  408394:	add	x0, sp, #0x20
  408398:	bl	408e38 <nftw@plt+0x62b8>
  40839c:	sub	w19, w19, #0x6
  4083a0:	tst	w19, #0xfffffffb
  4083a4:	b.ne	408370 <nftw@plt+0x57f0>  // b.any
  4083a8:	str	w20, [sp, #92]
  4083ac:	b	408370 <nftw@plt+0x57f0>
  4083b0:	stp	x29, x30, [sp, #-416]!
  4083b4:	mov	x29, sp
  4083b8:	stp	x19, x20, [sp, #16]
  4083bc:	stp	x21, x22, [sp, #32]
  4083c0:	mov	w21, w0
  4083c4:	mov	w22, w1
  4083c8:	mov	w19, w2
  4083cc:	mov	x20, x3
  4083d0:	str	x4, [sp, #384]
  4083d4:	str	x5, [sp, #392]
  4083d8:	str	x6, [sp, #400]
  4083dc:	str	x7, [sp, #408]
  4083e0:	str	q0, [sp, #256]
  4083e4:	str	q1, [sp, #272]
  4083e8:	str	q2, [sp, #288]
  4083ec:	str	q3, [sp, #304]
  4083f0:	str	q4, [sp, #320]
  4083f4:	str	q5, [sp, #336]
  4083f8:	str	q6, [sp, #352]
  4083fc:	str	q7, [sp, #368]
  408400:	add	x0, sp, #0xf8
  408404:	bl	407a64 <nftw@plt+0x4ee4>
  408408:	add	x0, sp, #0x1a0
  40840c:	str	x0, [sp, #216]
  408410:	str	x0, [sp, #224]
  408414:	add	x0, sp, #0x180
  408418:	str	x0, [sp, #232]
  40841c:	mov	w0, #0xffffffe0            	// #-32
  408420:	str	w0, [sp, #240]
  408424:	mov	w0, #0xffffff80            	// #-128
  408428:	str	w0, [sp, #244]
  40842c:	mov	x3, #0x0                   	// #0
  408430:	mov	w2, w22
  408434:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408438:	ldr	x1, [x0, #2296]
  40843c:	add	x0, sp, #0x30
  408440:	bl	42d310 <nftw@plt+0x2a790>
  408444:	mov	w4, w21
  408448:	add	x3, sp, #0xd8
  40844c:	mov	x2, x20
  408450:	mov	w1, w19
  408454:	add	x0, sp, #0x30
  408458:	bl	408318 <nftw@plt+0x5798>
  40845c:	mov	w19, w0
  408460:	add	x0, sp, #0x30
  408464:	bl	42d0a0 <nftw@plt+0x2a520>
  408468:	add	x0, sp, #0xf8
  40846c:	bl	407a7c <nftw@plt+0x4efc>
  408470:	mov	w0, w19
  408474:	ldp	x19, x20, [sp, #16]
  408478:	ldp	x21, x22, [sp, #32]
  40847c:	ldp	x29, x30, [sp], #416
  408480:	ret
  408484:	stp	x29, x30, [sp, #-256]!
  408488:	mov	x29, sp
  40848c:	stp	x19, x20, [sp, #16]
  408490:	stp	x21, x22, [sp, #32]
  408494:	mov	w22, w0
  408498:	mov	x19, x1
  40849c:	mov	w20, w2
  4084a0:	mov	x21, x3
  4084a4:	str	x4, [sp, #224]
  4084a8:	str	x5, [sp, #232]
  4084ac:	str	x6, [sp, #240]
  4084b0:	str	x7, [sp, #248]
  4084b4:	str	q0, [sp, #96]
  4084b8:	str	q1, [sp, #112]
  4084bc:	str	q2, [sp, #128]
  4084c0:	str	q3, [sp, #144]
  4084c4:	str	q4, [sp, #160]
  4084c8:	str	q5, [sp, #176]
  4084cc:	str	q6, [sp, #192]
  4084d0:	str	q7, [sp, #208]
  4084d4:	add	x0, sp, #0x58
  4084d8:	bl	407a64 <nftw@plt+0x4ee4>
  4084dc:	add	x0, sp, #0x100
  4084e0:	str	x0, [sp, #56]
  4084e4:	str	x0, [sp, #64]
  4084e8:	add	x0, sp, #0xe0
  4084ec:	str	x0, [sp, #72]
  4084f0:	mov	w0, #0xffffffe0            	// #-32
  4084f4:	str	w0, [sp, #80]
  4084f8:	mov	w0, #0xffffff80            	// #-128
  4084fc:	str	w0, [sp, #84]
  408500:	mov	w4, w22
  408504:	add	x3, sp, #0x38
  408508:	mov	x2, x21
  40850c:	mov	w1, w20
  408510:	mov	x0, x19
  408514:	bl	408318 <nftw@plt+0x5798>
  408518:	mov	w19, w0
  40851c:	add	x0, sp, #0x58
  408520:	bl	407a7c <nftw@plt+0x4efc>
  408524:	mov	w0, w19
  408528:	ldp	x19, x20, [sp, #16]
  40852c:	ldp	x21, x22, [sp, #32]
  408530:	ldp	x29, x30, [sp], #256
  408534:	ret
  408538:	stp	x29, x30, [sp, #-224]!
  40853c:	mov	x29, sp
  408540:	stp	x19, x20, [sp, #16]
  408544:	stp	x21, x22, [sp, #32]
  408548:	mov	w22, w0
  40854c:	mov	w19, w2
  408550:	mov	x20, x3
  408554:	mov	x21, x4
  408558:	mov	x3, #0x0                   	// #0
  40855c:	mov	w2, w1
  408560:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408564:	ldr	x1, [x0, #2296]
  408568:	add	x0, sp, #0x38
  40856c:	bl	42d310 <nftw@plt+0x2a790>
  408570:	mov	w4, w22
  408574:	mov	x3, x21
  408578:	mov	x2, x20
  40857c:	mov	w1, w19
  408580:	add	x0, sp, #0x38
  408584:	bl	408318 <nftw@plt+0x5798>
  408588:	mov	w19, w0
  40858c:	add	x0, sp, #0x38
  408590:	bl	42d0a0 <nftw@plt+0x2a520>
  408594:	mov	w0, w19
  408598:	ldp	x19, x20, [sp, #16]
  40859c:	ldp	x21, x22, [sp, #32]
  4085a0:	ldp	x29, x30, [sp], #224
  4085a4:	ret
  4085a8:	stp	x29, x30, [sp, #-416]!
  4085ac:	mov	x29, sp
  4085b0:	stp	x19, x20, [sp, #16]
  4085b4:	mov	w20, w0
  4085b8:	mov	x19, x1
  4085bc:	str	x2, [sp, #368]
  4085c0:	str	x3, [sp, #376]
  4085c4:	str	x4, [sp, #384]
  4085c8:	str	x5, [sp, #392]
  4085cc:	str	x6, [sp, #400]
  4085d0:	str	x7, [sp, #408]
  4085d4:	str	q0, [sp, #240]
  4085d8:	str	q1, [sp, #256]
  4085dc:	str	q2, [sp, #272]
  4085e0:	str	q3, [sp, #288]
  4085e4:	str	q4, [sp, #304]
  4085e8:	str	q5, [sp, #320]
  4085ec:	str	q6, [sp, #336]
  4085f0:	str	q7, [sp, #352]
  4085f4:	add	x0, sp, #0xe8
  4085f8:	bl	407a64 <nftw@plt+0x4ee4>
  4085fc:	add	x0, sp, #0x1a0
  408600:	str	x0, [sp, #200]
  408604:	str	x0, [sp, #208]
  408608:	add	x0, sp, #0x170
  40860c:	str	x0, [sp, #216]
  408610:	mov	w0, #0xffffffd0            	// #-48
  408614:	str	w0, [sp, #224]
  408618:	mov	w0, #0xffffff80            	// #-128
  40861c:	str	w0, [sp, #228]
  408620:	mov	x3, #0x0                   	// #0
  408624:	mov	w2, w20
  408628:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40862c:	ldr	x1, [x0, #2296]
  408630:	add	x0, sp, #0x20
  408634:	bl	42d310 <nftw@plt+0x2a790>
  408638:	mov	w4, #0x8                   	// #8
  40863c:	add	x3, sp, #0xc8
  408640:	mov	x2, x19
  408644:	mov	w1, #0xffffffff            	// #-1
  408648:	add	x0, sp, #0x20
  40864c:	bl	408318 <nftw@plt+0x5798>
  408650:	add	x0, sp, #0x20
  408654:	bl	42d0a0 <nftw@plt+0x2a520>
  408658:	add	x0, sp, #0xe8
  40865c:	bl	407a7c <nftw@plt+0x4efc>
  408660:	ldp	x19, x20, [sp, #16]
  408664:	ldp	x29, x30, [sp], #416
  408668:	ret
  40866c:	stp	x29, x30, [sp, #-416]!
  408670:	mov	x29, sp
  408674:	stp	x19, x20, [sp, #16]
  408678:	mov	w19, w0
  40867c:	mov	x20, x1
  408680:	str	x2, [sp, #368]
  408684:	str	x3, [sp, #376]
  408688:	str	x4, [sp, #384]
  40868c:	str	x5, [sp, #392]
  408690:	str	x6, [sp, #400]
  408694:	str	x7, [sp, #408]
  408698:	str	q0, [sp, #240]
  40869c:	str	q1, [sp, #256]
  4086a0:	str	q2, [sp, #272]
  4086a4:	str	q3, [sp, #288]
  4086a8:	str	q4, [sp, #304]
  4086ac:	str	q5, [sp, #320]
  4086b0:	str	q6, [sp, #336]
  4086b4:	str	q7, [sp, #352]
  4086b8:	add	x0, sp, #0xe8
  4086bc:	bl	407a64 <nftw@plt+0x4ee4>
  4086c0:	add	x0, sp, #0x1a0
  4086c4:	str	x0, [sp, #200]
  4086c8:	str	x0, [sp, #208]
  4086cc:	add	x0, sp, #0x170
  4086d0:	str	x0, [sp, #216]
  4086d4:	mov	w0, #0xffffffd0            	// #-48
  4086d8:	str	w0, [sp, #224]
  4086dc:	mov	w0, #0xffffff80            	// #-128
  4086e0:	str	w0, [sp, #228]
  4086e4:	mov	x3, #0x0                   	// #0
  4086e8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4086ec:	ldr	w2, [x0, #2320]
  4086f0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4086f4:	ldr	x1, [x0, #2296]
  4086f8:	add	x0, sp, #0x20
  4086fc:	bl	42d310 <nftw@plt+0x2a790>
  408700:	mov	w4, #0x6                   	// #6
  408704:	add	x3, sp, #0xc8
  408708:	mov	x2, x20
  40870c:	mov	w1, w19
  408710:	add	x0, sp, #0x20
  408714:	bl	408318 <nftw@plt+0x5798>
  408718:	mov	w19, w0
  40871c:	add	x0, sp, #0x20
  408720:	bl	42d0a0 <nftw@plt+0x2a520>
  408724:	add	x0, sp, #0xe8
  408728:	bl	407a7c <nftw@plt+0x4efc>
  40872c:	mov	w0, w19
  408730:	ldp	x19, x20, [sp, #16]
  408734:	ldp	x29, x30, [sp], #416
  408738:	ret
  40873c:	stp	x29, x30, [sp, #-432]!
  408740:	mov	x29, sp
  408744:	stp	x19, x20, [sp, #16]
  408748:	str	x21, [sp, #32]
  40874c:	mov	w21, w0
  408750:	mov	w19, w1
  408754:	mov	x20, x2
  408758:	str	x3, [sp, #392]
  40875c:	str	x4, [sp, #400]
  408760:	str	x5, [sp, #408]
  408764:	str	x6, [sp, #416]
  408768:	str	x7, [sp, #424]
  40876c:	str	q0, [sp, #256]
  408770:	str	q1, [sp, #272]
  408774:	str	q2, [sp, #288]
  408778:	str	q3, [sp, #304]
  40877c:	str	q4, [sp, #320]
  408780:	str	q5, [sp, #336]
  408784:	str	q6, [sp, #352]
  408788:	str	q7, [sp, #368]
  40878c:	add	x0, sp, #0xf8
  408790:	bl	407a64 <nftw@plt+0x4ee4>
  408794:	add	x0, sp, #0x1b0
  408798:	str	x0, [sp, #216]
  40879c:	str	x0, [sp, #224]
  4087a0:	add	x0, sp, #0x180
  4087a4:	str	x0, [sp, #232]
  4087a8:	mov	w0, #0xffffffd8            	// #-40
  4087ac:	str	w0, [sp, #240]
  4087b0:	mov	w0, #0xffffff80            	// #-128
  4087b4:	str	w0, [sp, #244]
  4087b8:	mov	x3, #0x0                   	// #0
  4087bc:	mov	w2, w21
  4087c0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4087c4:	ldr	x1, [x0, #2296]
  4087c8:	add	x0, sp, #0x30
  4087cc:	bl	42d310 <nftw@plt+0x2a790>
  4087d0:	mov	w4, #0x6                   	// #6
  4087d4:	add	x3, sp, #0xd8
  4087d8:	mov	x2, x20
  4087dc:	mov	w1, w19
  4087e0:	add	x0, sp, #0x30
  4087e4:	bl	408318 <nftw@plt+0x5798>
  4087e8:	mov	w19, w0
  4087ec:	add	x0, sp, #0x30
  4087f0:	bl	42d0a0 <nftw@plt+0x2a520>
  4087f4:	add	x0, sp, #0xf8
  4087f8:	bl	407a7c <nftw@plt+0x4efc>
  4087fc:	mov	w0, w19
  408800:	ldp	x19, x20, [sp, #16]
  408804:	ldr	x21, [sp, #32]
  408808:	ldp	x29, x30, [sp], #432
  40880c:	ret
  408810:	stp	x29, x30, [sp, #-432]!
  408814:	mov	x29, sp
  408818:	stp	x19, x20, [sp, #16]
  40881c:	str	x21, [sp, #32]
  408820:	mov	w21, w0
  408824:	mov	w19, w1
  408828:	mov	x20, x2
  40882c:	str	x3, [sp, #392]
  408830:	str	x4, [sp, #400]
  408834:	str	x5, [sp, #408]
  408838:	str	x6, [sp, #416]
  40883c:	str	x7, [sp, #424]
  408840:	str	q0, [sp, #256]
  408844:	str	q1, [sp, #272]
  408848:	str	q2, [sp, #288]
  40884c:	str	q3, [sp, #304]
  408850:	str	q4, [sp, #320]
  408854:	str	q5, [sp, #336]
  408858:	str	q6, [sp, #352]
  40885c:	str	q7, [sp, #368]
  408860:	add	x0, sp, #0xf8
  408864:	bl	407a64 <nftw@plt+0x4ee4>
  408868:	add	x0, sp, #0x1b0
  40886c:	str	x0, [sp, #216]
  408870:	str	x0, [sp, #224]
  408874:	add	x0, sp, #0x180
  408878:	str	x0, [sp, #232]
  40887c:	mov	w0, #0xffffffd8            	// #-40
  408880:	str	w0, [sp, #240]
  408884:	mov	w0, #0xffffff80            	// #-128
  408888:	str	w0, [sp, #244]
  40888c:	mov	x3, #0x0                   	// #0
  408890:	mov	w2, w21
  408894:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408898:	ldr	x1, [x0, #2296]
  40889c:	add	x0, sp, #0x30
  4088a0:	bl	42d310 <nftw@plt+0x2a790>
  4088a4:	mov	w4, #0xa                   	// #10
  4088a8:	add	x3, sp, #0xd8
  4088ac:	mov	x2, x20
  4088b0:	mov	w1, w19
  4088b4:	add	x0, sp, #0x30
  4088b8:	bl	408318 <nftw@plt+0x5798>
  4088bc:	mov	w19, w0
  4088c0:	add	x0, sp, #0x30
  4088c4:	bl	42d0a0 <nftw@plt+0x2a520>
  4088c8:	add	x0, sp, #0xf8
  4088cc:	bl	407a7c <nftw@plt+0x4efc>
  4088d0:	mov	w0, w19
  4088d4:	ldp	x19, x20, [sp, #16]
  4088d8:	ldr	x21, [sp, #32]
  4088dc:	ldp	x29, x30, [sp], #432
  4088e0:	ret
  4088e4:	stp	x29, x30, [sp, #-416]!
  4088e8:	mov	x29, sp
  4088ec:	stp	x19, x20, [sp, #16]
  4088f0:	mov	w20, w0
  4088f4:	mov	x19, x1
  4088f8:	str	x2, [sp, #368]
  4088fc:	str	x3, [sp, #376]
  408900:	str	x4, [sp, #384]
  408904:	str	x5, [sp, #392]
  408908:	str	x6, [sp, #400]
  40890c:	str	x7, [sp, #408]
  408910:	str	q0, [sp, #240]
  408914:	str	q1, [sp, #256]
  408918:	str	q2, [sp, #272]
  40891c:	str	q3, [sp, #288]
  408920:	str	q4, [sp, #304]
  408924:	str	q5, [sp, #320]
  408928:	str	q6, [sp, #336]
  40892c:	str	q7, [sp, #352]
  408930:	add	x0, sp, #0xe8
  408934:	bl	407a64 <nftw@plt+0x4ee4>
  408938:	add	x0, sp, #0x1a0
  40893c:	str	x0, [sp, #200]
  408940:	str	x0, [sp, #208]
  408944:	add	x0, sp, #0x170
  408948:	str	x0, [sp, #216]
  40894c:	mov	w0, #0xffffffd0            	// #-48
  408950:	str	w0, [sp, #224]
  408954:	mov	w0, #0xffffff80            	// #-128
  408958:	str	w0, [sp, #228]
  40895c:	mov	x3, #0x0                   	// #0
  408960:	mov	w2, w20
  408964:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408968:	ldr	x1, [x0, #2296]
  40896c:	add	x0, sp, #0x20
  408970:	bl	42d310 <nftw@plt+0x2a790>
  408974:	mov	w4, #0xb                   	// #11
  408978:	add	x3, sp, #0xc8
  40897c:	mov	x2, x19
  408980:	mov	w1, #0xffffffff            	// #-1
  408984:	add	x0, sp, #0x20
  408988:	bl	408318 <nftw@plt+0x5798>
  40898c:	mov	w19, w0
  408990:	add	x0, sp, #0x20
  408994:	bl	42d0a0 <nftw@plt+0x2a520>
  408998:	add	x0, sp, #0xe8
  40899c:	bl	407a7c <nftw@plt+0x4efc>
  4089a0:	mov	w0, w19
  4089a4:	ldp	x19, x20, [sp, #16]
  4089a8:	ldp	x29, x30, [sp], #416
  4089ac:	ret
  4089b0:	stp	x29, x30, [sp, #-432]!
  4089b4:	mov	x29, sp
  4089b8:	str	x19, [sp, #16]
  4089bc:	mov	x19, x0
  4089c0:	str	x1, [sp, #376]
  4089c4:	str	x2, [sp, #384]
  4089c8:	str	x3, [sp, #392]
  4089cc:	str	x4, [sp, #400]
  4089d0:	str	x5, [sp, #408]
  4089d4:	str	x6, [sp, #416]
  4089d8:	str	x7, [sp, #424]
  4089dc:	str	q0, [sp, #240]
  4089e0:	str	q1, [sp, #256]
  4089e4:	str	q2, [sp, #272]
  4089e8:	str	q3, [sp, #288]
  4089ec:	str	q4, [sp, #304]
  4089f0:	str	q5, [sp, #320]
  4089f4:	str	q6, [sp, #336]
  4089f8:	str	q7, [sp, #352]
  4089fc:	add	x0, sp, #0xe8
  408a00:	bl	407a64 <nftw@plt+0x4ee4>
  408a04:	add	x0, sp, #0x1b0
  408a08:	str	x0, [sp, #200]
  408a0c:	str	x0, [sp, #208]
  408a10:	add	x0, sp, #0x170
  408a14:	str	x0, [sp, #216]
  408a18:	mov	w0, #0xffffffc8            	// #-56
  408a1c:	str	w0, [sp, #224]
  408a20:	mov	w0, #0xffffff80            	// #-128
  408a24:	str	w0, [sp, #228]
  408a28:	mov	x3, #0x0                   	// #0
  408a2c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408a30:	ldr	w2, [x0, #2320]
  408a34:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408a38:	ldr	x1, [x0, #2296]
  408a3c:	add	x0, sp, #0x20
  408a40:	bl	42d310 <nftw@plt+0x2a790>
  408a44:	mov	w4, #0x4                   	// #4
  408a48:	add	x3, sp, #0xc8
  408a4c:	mov	x2, x19
  408a50:	mov	w1, #0xffffffff            	// #-1
  408a54:	add	x0, sp, #0x20
  408a58:	bl	408318 <nftw@plt+0x5798>
  408a5c:	add	x0, sp, #0x20
  408a60:	bl	42d0a0 <nftw@plt+0x2a520>
  408a64:	add	x0, sp, #0xe8
  408a68:	bl	407a7c <nftw@plt+0x4efc>
  408a6c:	ldr	x19, [sp, #16]
  408a70:	ldp	x29, x30, [sp], #432
  408a74:	ret
  408a78:	stp	x29, x30, [sp, #-416]!
  408a7c:	mov	x29, sp
  408a80:	stp	x19, x20, [sp, #16]
  408a84:	mov	w20, w0
  408a88:	mov	x19, x1
  408a8c:	str	x2, [sp, #368]
  408a90:	str	x3, [sp, #376]
  408a94:	str	x4, [sp, #384]
  408a98:	str	x5, [sp, #392]
  408a9c:	str	x6, [sp, #400]
  408aa0:	str	x7, [sp, #408]
  408aa4:	str	q0, [sp, #240]
  408aa8:	str	q1, [sp, #256]
  408aac:	str	q2, [sp, #272]
  408ab0:	str	q3, [sp, #288]
  408ab4:	str	q4, [sp, #304]
  408ab8:	str	q5, [sp, #320]
  408abc:	str	q6, [sp, #336]
  408ac0:	str	q7, [sp, #352]
  408ac4:	add	x0, sp, #0xe8
  408ac8:	bl	407a64 <nftw@plt+0x4ee4>
  408acc:	add	x0, sp, #0x1a0
  408ad0:	str	x0, [sp, #200]
  408ad4:	str	x0, [sp, #208]
  408ad8:	add	x0, sp, #0x170
  408adc:	str	x0, [sp, #216]
  408ae0:	mov	w0, #0xffffffd0            	// #-48
  408ae4:	str	w0, [sp, #224]
  408ae8:	mov	w0, #0xffffff80            	// #-128
  408aec:	str	w0, [sp, #228]
  408af0:	mov	x3, #0x0                   	// #0
  408af4:	mov	w2, w20
  408af8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408afc:	ldr	x1, [x0, #2296]
  408b00:	add	x0, sp, #0x20
  408b04:	bl	42d310 <nftw@plt+0x2a790>
  408b08:	mov	w4, #0x4                   	// #4
  408b0c:	add	x3, sp, #0xc8
  408b10:	mov	x2, x19
  408b14:	mov	w1, #0xffffffff            	// #-1
  408b18:	add	x0, sp, #0x20
  408b1c:	bl	408318 <nftw@plt+0x5798>
  408b20:	add	x0, sp, #0x20
  408b24:	bl	42d0a0 <nftw@plt+0x2a520>
  408b28:	add	x0, sp, #0xe8
  408b2c:	bl	407a7c <nftw@plt+0x4efc>
  408b30:	ldp	x19, x20, [sp, #16]
  408b34:	ldp	x29, x30, [sp], #416
  408b38:	ret
  408b3c:	stp	x29, x30, [sp, #-432]!
  408b40:	mov	x29, sp
  408b44:	str	x19, [sp, #16]
  408b48:	mov	x19, x0
  408b4c:	str	x1, [sp, #376]
  408b50:	str	x2, [sp, #384]
  408b54:	str	x3, [sp, #392]
  408b58:	str	x4, [sp, #400]
  408b5c:	str	x5, [sp, #408]
  408b60:	str	x6, [sp, #416]
  408b64:	str	x7, [sp, #424]
  408b68:	str	q0, [sp, #240]
  408b6c:	str	q1, [sp, #256]
  408b70:	str	q2, [sp, #272]
  408b74:	str	q3, [sp, #288]
  408b78:	str	q4, [sp, #304]
  408b7c:	str	q5, [sp, #320]
  408b80:	str	q6, [sp, #336]
  408b84:	str	q7, [sp, #352]
  408b88:	add	x0, sp, #0xe8
  408b8c:	bl	407a64 <nftw@plt+0x4ee4>
  408b90:	add	x0, sp, #0x1b0
  408b94:	str	x0, [sp, #200]
  408b98:	str	x0, [sp, #208]
  408b9c:	add	x0, sp, #0x170
  408ba0:	str	x0, [sp, #216]
  408ba4:	mov	w0, #0xffffffc8            	// #-56
  408ba8:	str	w0, [sp, #224]
  408bac:	mov	w0, #0xffffff80            	// #-128
  408bb0:	str	w0, [sp, #228]
  408bb4:	mov	x3, #0x0                   	// #0
  408bb8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408bbc:	ldr	w2, [x0, #2320]
  408bc0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408bc4:	ldr	x1, [x0, #2296]
  408bc8:	add	x0, sp, #0x20
  408bcc:	bl	42d310 <nftw@plt+0x2a790>
  408bd0:	mov	w4, #0x5                   	// #5
  408bd4:	add	x3, sp, #0xc8
  408bd8:	mov	x2, x19
  408bdc:	mov	w1, #0xffffffff            	// #-1
  408be0:	add	x0, sp, #0x20
  408be4:	bl	408318 <nftw@plt+0x5798>
  408be8:	add	x0, sp, #0x20
  408bec:	bl	42d0a0 <nftw@plt+0x2a520>
  408bf0:	add	x0, sp, #0xe8
  408bf4:	bl	407a7c <nftw@plt+0x4efc>
  408bf8:	ldr	x19, [sp, #16]
  408bfc:	ldp	x29, x30, [sp], #432
  408c00:	ret
  408c04:	stp	x29, x30, [sp, #-416]!
  408c08:	mov	x29, sp
  408c0c:	stp	x19, x20, [sp, #16]
  408c10:	mov	w20, w0
  408c14:	mov	x19, x1
  408c18:	str	x2, [sp, #368]
  408c1c:	str	x3, [sp, #376]
  408c20:	str	x4, [sp, #384]
  408c24:	str	x5, [sp, #392]
  408c28:	str	x6, [sp, #400]
  408c2c:	str	x7, [sp, #408]
  408c30:	str	q0, [sp, #240]
  408c34:	str	q1, [sp, #256]
  408c38:	str	q2, [sp, #272]
  408c3c:	str	q3, [sp, #288]
  408c40:	str	q4, [sp, #304]
  408c44:	str	q5, [sp, #320]
  408c48:	str	q6, [sp, #336]
  408c4c:	str	q7, [sp, #352]
  408c50:	add	x0, sp, #0xe8
  408c54:	bl	407a64 <nftw@plt+0x4ee4>
  408c58:	add	x0, sp, #0x1a0
  408c5c:	str	x0, [sp, #200]
  408c60:	str	x0, [sp, #208]
  408c64:	add	x0, sp, #0x170
  408c68:	str	x0, [sp, #216]
  408c6c:	mov	w0, #0xffffffd0            	// #-48
  408c70:	str	w0, [sp, #224]
  408c74:	mov	w0, #0xffffff80            	// #-128
  408c78:	str	w0, [sp, #228]
  408c7c:	mov	x3, #0x0                   	// #0
  408c80:	mov	w2, w20
  408c84:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408c88:	ldr	x1, [x0, #2296]
  408c8c:	add	x0, sp, #0x20
  408c90:	bl	42d310 <nftw@plt+0x2a790>
  408c94:	mov	w4, #0x5                   	// #5
  408c98:	add	x3, sp, #0xc8
  408c9c:	mov	x2, x19
  408ca0:	mov	w1, #0xffffffff            	// #-1
  408ca4:	add	x0, sp, #0x20
  408ca8:	bl	408318 <nftw@plt+0x5798>
  408cac:	add	x0, sp, #0x20
  408cb0:	bl	42d0a0 <nftw@plt+0x2a520>
  408cb4:	add	x0, sp, #0xe8
  408cb8:	bl	407a7c <nftw@plt+0x4efc>
  408cbc:	ldp	x19, x20, [sp, #16]
  408cc0:	ldp	x29, x30, [sp], #416
  408cc4:	ret
  408cc8:	stp	x29, x30, [sp, #-432]!
  408ccc:	mov	x29, sp
  408cd0:	str	x19, [sp, #16]
  408cd4:	mov	x19, x0
  408cd8:	str	x1, [sp, #376]
  408cdc:	str	x2, [sp, #384]
  408ce0:	str	x3, [sp, #392]
  408ce4:	str	x4, [sp, #400]
  408ce8:	str	x5, [sp, #408]
  408cec:	str	x6, [sp, #416]
  408cf0:	str	x7, [sp, #424]
  408cf4:	str	q0, [sp, #240]
  408cf8:	str	q1, [sp, #256]
  408cfc:	str	q2, [sp, #272]
  408d00:	str	q3, [sp, #288]
  408d04:	str	q4, [sp, #304]
  408d08:	str	q5, [sp, #320]
  408d0c:	str	q6, [sp, #336]
  408d10:	str	q7, [sp, #352]
  408d14:	add	x0, sp, #0xe8
  408d18:	bl	407a64 <nftw@plt+0x4ee4>
  408d1c:	add	x0, sp, #0x1b0
  408d20:	str	x0, [sp, #200]
  408d24:	str	x0, [sp, #208]
  408d28:	add	x0, sp, #0x170
  408d2c:	str	x0, [sp, #216]
  408d30:	mov	w0, #0xffffffc8            	// #-56
  408d34:	str	w0, [sp, #224]
  408d38:	mov	w0, #0xffffff80            	// #-128
  408d3c:	str	w0, [sp, #228]
  408d40:	mov	x3, #0x0                   	// #0
  408d44:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408d48:	ldr	w2, [x0, #2320]
  408d4c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  408d50:	ldr	x1, [x0, #2296]
  408d54:	add	x0, sp, #0x20
  408d58:	bl	42d310 <nftw@plt+0x2a790>
  408d5c:	mov	w4, #0x3                   	// #3
  408d60:	add	x3, sp, #0xc8
  408d64:	mov	x2, x19
  408d68:	mov	w1, #0xffffffff            	// #-1
  408d6c:	add	x0, sp, #0x20
  408d70:	bl	408318 <nftw@plt+0x5798>
  408d74:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408d78:	add	x2, x2, #0x920
  408d7c:	mov	w1, #0x607                 	// #1543
  408d80:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408d84:	add	x0, x0, #0x860
  408d88:	bl	408d8c <nftw@plt+0x620c>
  408d8c:	stp	x29, x30, [sp, #-32]!
  408d90:	mov	x29, sp
  408d94:	stp	x19, x20, [sp, #16]
  408d98:	mov	w20, w1
  408d9c:	mov	x19, x2
  408da0:	bl	407828 <nftw@plt+0x4ca8>
  408da4:	mov	w3, w20
  408da8:	mov	x2, x0
  408dac:	mov	x1, x19
  408db0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408db4:	add	x0, x0, #0x930
  408db8:	bl	408cc8 <nftw@plt+0x6148>
  408dbc:	stp	x29, x30, [sp, #-64]!
  408dc0:	mov	x29, sp
  408dc4:	stp	x19, x20, [sp, #16]
  408dc8:	stp	x21, x22, [sp, #32]
  408dcc:	str	x23, [sp, #48]
  408dd0:	cbz	x3, 408e20 <nftw@plt+0x62a0>
  408dd4:	mov	x19, x0
  408dd8:	mov	x22, x1
  408ddc:	mov	x23, x2
  408de0:	mov	x20, x3
  408de4:	mov	w21, w4
  408de8:	bl	402aa0 <__errno_location@plt>
  408dec:	ldr	w0, [x0]
  408df0:	str	w0, [x19, #16]
  408df4:	str	x23, [x19, #8]
  408df8:	str	x22, [x19]
  408dfc:	str	x20, [x19, #32]
  408e00:	str	x20, [x19, #40]
  408e04:	str	w21, [x19, #56]
  408e08:	str	wzr, [x19, #60]
  408e0c:	ldp	x19, x20, [sp, #16]
  408e10:	ldp	x21, x22, [sp, #32]
  408e14:	ldr	x23, [sp, #48]
  408e18:	ldp	x29, x30, [sp], #64
  408e1c:	ret
  408e20:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408e24:	add	x2, x2, #0x940
  408e28:	mov	w1, #0x112                 	// #274
  408e2c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408e30:	add	x0, x0, #0x860
  408e34:	bl	408d8c <nftw@plt+0x620c>
  408e38:	stp	x29, x30, [sp, #-48]!
  408e3c:	mov	x29, sp
  408e40:	stp	x19, x20, [sp, #16]
  408e44:	stp	x21, x22, [sp, #32]
  408e48:	cbz	x3, 408e8c <nftw@plt+0x630c>
  408e4c:	mov	x20, x0
  408e50:	mov	x0, x1
  408e54:	mov	x21, x2
  408e58:	mov	x19, x3
  408e5c:	mov	w22, w4
  408e60:	bl	402b10 <gettext@plt>
  408e64:	mov	w4, w22
  408e68:	mov	x3, x19
  408e6c:	mov	x2, x21
  408e70:	mov	x1, x0
  408e74:	mov	x0, x20
  408e78:	bl	408dbc <nftw@plt+0x623c>
  408e7c:	ldp	x19, x20, [sp, #16]
  408e80:	ldp	x21, x22, [sp, #32]
  408e84:	ldp	x29, x30, [sp], #48
  408e88:	ret
  408e8c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408e90:	add	x2, x2, #0x960
  408e94:	mov	w1, #0x123                 	// #291
  408e98:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408e9c:	add	x0, x0, #0x860
  408ea0:	bl	408d8c <nftw@plt+0x620c>
  408ea4:	stp	x29, x30, [sp, #-128]!
  408ea8:	mov	x29, sp
  408eac:	stp	x19, x20, [sp, #16]
  408eb0:	stp	x21, x22, [sp, #32]
  408eb4:	stp	x23, x24, [sp, #48]
  408eb8:	mov	x21, x0
  408ebc:	ldr	w0, [x1, #56]
  408ec0:	cmp	w0, #0xd
  408ec4:	b.gt	408f90 <nftw@plt+0x6410>
  408ec8:	mov	x20, x1
  408ecc:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408ed0:	add	x19, x19, #0xb98
  408ed4:	add	x1, x19, #0xc0
  408ed8:	ldr	x0, [x1, w0, sxtw #3]
  408edc:	bl	402b10 <gettext@plt>
  408ee0:	mov	x23, x0
  408ee4:	add	x19, x19, #0x20
  408ee8:	ldrsw	x0, [x20, #56]
  408eec:	ldr	x19, [x19, x0, lsl #3]
  408ef0:	cbz	x19, 408fa8 <nftw@plt+0x6428>
  408ef4:	ldr	x22, [x21]
  408ef8:	mov	x0, x19
  408efc:	bl	4024f0 <strlen@plt>
  408f00:	mov	x2, x0
  408f04:	mov	x1, x19
  408f08:	ldrb	w0, [x22, #67]
  408f0c:	bl	409f38 <nftw@plt+0x73b8>
  408f10:	mov	x24, x0
  408f14:	ldrb	w0, [x22, #67]
  408f18:	bl	409fcc <nftw@plt+0x744c>
  408f1c:	mov	x22, x0
  408f20:	add	x8, sp, #0x60
  408f24:	mov	w1, #0x0                   	// #0
  408f28:	ldr	x0, [x20, #40]
  408f2c:	bl	42d1a4 <nftw@plt+0x2a624>
  408f30:	ldp	x0, x1, [sp, #96]
  408f34:	stp	x0, x1, [sp, #64]
  408f38:	ldp	x0, x1, [sp, #112]
  408f3c:	stp	x0, x1, [sp, #80]
  408f40:	add	x1, sp, #0x40
  408f44:	mov	x0, x21
  408f48:	bl	406fe0 <nftw@plt+0x4460>
  408f4c:	mov	x19, x0
  408f50:	mov	x4, x22
  408f54:	mov	x3, x23
  408f58:	mov	x2, x24
  408f5c:	mov	x1, x0
  408f60:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408f64:	add	x0, x0, #0x990
  408f68:	bl	406f58 <nftw@plt+0x43d8>
  408f6c:	mov	x20, x0
  408f70:	mov	x0, x19
  408f74:	bl	402910 <free@plt>
  408f78:	mov	x0, x20
  408f7c:	ldp	x19, x20, [sp, #16]
  408f80:	ldp	x21, x22, [sp, #32]
  408f84:	ldp	x23, x24, [sp, #48]
  408f88:	ldp	x29, x30, [sp], #128
  408f8c:	ret
  408f90:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408f94:	add	x2, x2, #0x978
  408f98:	mov	w1, #0x16a                 	// #362
  408f9c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  408fa0:	add	x0, x0, #0x860
  408fa4:	bl	408d8c <nftw@plt+0x620c>
  408fa8:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x109fc>
  408fac:	add	x22, x22, #0x780
  408fb0:	mov	x24, x22
  408fb4:	b	408f20 <nftw@plt+0x63a0>
  408fb8:	stp	x29, x30, [sp, #-48]!
  408fbc:	mov	x29, sp
  408fc0:	stp	x19, x20, [sp, #16]
  408fc4:	str	x21, [sp, #32]
  408fc8:	mov	x19, x0
  408fcc:	mov	x20, x1
  408fd0:	mov	w1, #0x0                   	// #0
  408fd4:	mov	x0, x20
  408fd8:	bl	40edfc <nftw@plt+0xc27c>
  408fdc:	mov	w1, w0
  408fe0:	mov	x0, x19
  408fe4:	bl	40740c <nftw@plt+0x488c>
  408fe8:	ldr	x21, [x19]
  408fec:	mov	x1, x20
  408ff0:	mov	x0, x19
  408ff4:	bl	408ea4 <nftw@plt+0x6324>
  408ff8:	mov	x1, x0
  408ffc:	mov	x0, x21
  409000:	bl	40f040 <nftw@plt+0xc4c0>
  409004:	ldp	x19, x20, [sp, #16]
  409008:	ldr	x21, [sp, #32]
  40900c:	ldp	x29, x30, [sp], #48
  409010:	ret
  409014:	stp	x29, x30, [sp, #-496]!
  409018:	mov	x29, sp
  40901c:	stp	x19, x20, [sp, #16]
  409020:	mov	x19, x0
  409024:	mov	x20, x2
  409028:	str	x3, [sp, #456]
  40902c:	str	x4, [sp, #464]
  409030:	str	x5, [sp, #472]
  409034:	str	x6, [sp, #480]
  409038:	str	x7, [sp, #488]
  40903c:	str	q0, [sp, #320]
  409040:	str	q1, [sp, #336]
  409044:	str	q2, [sp, #352]
  409048:	str	q3, [sp, #368]
  40904c:	str	q4, [sp, #384]
  409050:	str	q5, [sp, #400]
  409054:	str	q6, [sp, #416]
  409058:	str	q7, [sp, #432]
  40905c:	mov	x3, #0x0                   	// #0
  409060:	mov	w2, w1
  409064:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  409068:	ldr	x1, [x0, #2296]
  40906c:	add	x0, sp, #0x38
  409070:	bl	42d310 <nftw@plt+0x2a790>
  409074:	add	x0, sp, #0x1f0
  409078:	str	x0, [sp, #224]
  40907c:	str	x0, [sp, #232]
  409080:	add	x0, sp, #0x1c0
  409084:	str	x0, [sp, #240]
  409088:	mov	w0, #0xffffffd8            	// #-40
  40908c:	str	w0, [sp, #248]
  409090:	mov	w0, #0xffffff80            	// #-128
  409094:	str	w0, [sp, #252]
  409098:	mov	w4, #0x8                   	// #8
  40909c:	add	x3, sp, #0x38
  4090a0:	add	x2, sp, #0xe0
  4090a4:	mov	x1, x20
  4090a8:	add	x0, sp, #0x100
  4090ac:	bl	408e38 <nftw@plt+0x62b8>
  4090b0:	ldrb	w0, [x19, #220]
  4090b4:	cbnz	w0, 409134 <nftw@plt+0x65b4>
  4090b8:	str	x21, [sp, #32]
  4090bc:	ldr	x0, [x19]
  4090c0:	bl	40f07c <nftw@plt+0xc4fc>
  4090c4:	mov	x20, x0
  4090c8:	ldr	x21, [x19]
  4090cc:	add	x1, sp, #0x100
  4090d0:	mov	x0, x19
  4090d4:	bl	408ea4 <nftw@plt+0x6324>
  4090d8:	mov	x1, x0
  4090dc:	mov	x0, x21
  4090e0:	bl	40f040 <nftw@plt+0xc4c0>
  4090e4:	add	x1, sp, #0x100
  4090e8:	ldr	x0, [x19]
  4090ec:	bl	40fc78 <nftw@plt+0xd0f8>
  4090f0:	ldr	x0, [x19]
  4090f4:	bl	40fa4c <nftw@plt+0xcecc>
  4090f8:	ldr	x0, [x19]
  4090fc:	bl	40f08c <nftw@plt+0xc50c>
  409100:	mov	x1, x20
  409104:	ldr	x0, [x19]
  409108:	bl	40f040 <nftw@plt+0xc4c0>
  40910c:	mov	w2, #0x8                   	// #8
  409110:	add	x1, sp, #0x38
  409114:	mov	x0, x19
  409118:	bl	40bc48 <nftw@plt+0x90c8>
  40911c:	add	x0, sp, #0x38
  409120:	bl	42d0a0 <nftw@plt+0x2a520>
  409124:	ldr	x21, [sp, #32]
  409128:	ldp	x19, x20, [sp, #16]
  40912c:	ldp	x29, x30, [sp], #496
  409130:	ret
  409134:	add	x0, sp, #0x38
  409138:	bl	42d0a0 <nftw@plt+0x2a520>
  40913c:	b	409128 <nftw@plt+0x65a8>
  409140:	stp	x29, x30, [sp, #-64]!
  409144:	mov	x29, sp
  409148:	cbz	x0, 40918c <nftw@plt+0x660c>
  40914c:	stp	x19, x20, [sp, #16]
  409150:	mov	x20, x0
  409154:	mov	x19, x1
  409158:	cbz	x1, 4091b0 <nftw@plt+0x6630>
  40915c:	mov	w1, #0x22                  	// #34
  409160:	bl	40f400 <nftw@plt+0xc880>
  409164:	ldrb	w1, [x19]
  409168:	cbz	w1, 40927c <nftw@plt+0x66fc>
  40916c:	stp	x21, x22, [sp, #32]
  409170:	str	x23, [sp, #48]
  409174:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409178:	add	x22, x22, #0x9d0
  40917c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  409180:	add	x21, x21, #0xe68
  409184:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409188:	b	4091f0 <nftw@plt+0x6670>
  40918c:	stp	x19, x20, [sp, #16]
  409190:	stp	x21, x22, [sp, #32]
  409194:	str	x23, [sp, #48]
  409198:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40919c:	add	x2, x2, #0x9a0
  4091a0:	mov	w1, #0x2f5                 	// #757
  4091a4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4091a8:	add	x0, x0, #0x860
  4091ac:	bl	408d8c <nftw@plt+0x620c>
  4091b0:	stp	x21, x22, [sp, #32]
  4091b4:	str	x23, [sp, #48]
  4091b8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4091bc:	add	x2, x2, #0x9a0
  4091c0:	mov	w1, #0x2f6                 	// #758
  4091c4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4091c8:	add	x0, x0, #0x860
  4091cc:	bl	408d8c <nftw@plt+0x620c>
  4091d0:	cmp	w1, #0x5c
  4091d4:	b.ne	409244 <nftw@plt+0x66c4>  // b.any
  4091d8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4091dc:	add	x1, x1, #0x9b8
  4091e0:	mov	x0, x20
  4091e4:	bl	40f9f8 <nftw@plt+0xce78>
  4091e8:	ldrb	w1, [x19, #1]!
  4091ec:	cbz	w1, 409274 <nftw@plt+0x66f4>
  4091f0:	cmp	w1, #0x22
  4091f4:	b.eq	409234 <nftw@plt+0x66b4>  // b.none
  4091f8:	b.hi	4091d0 <nftw@plt+0x6650>  // b.pmore
  4091fc:	cmp	w1, #0x9
  409200:	b.eq	409220 <nftw@plt+0x66a0>  // b.none
  409204:	cmp	w1, #0xa
  409208:	b.ne	409244 <nftw@plt+0x66c4>  // b.any
  40920c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409210:	add	x1, x1, #0x9c8
  409214:	mov	x0, x20
  409218:	bl	40f9f8 <nftw@plt+0xce78>
  40921c:	b	4091e8 <nftw@plt+0x6668>
  409220:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409224:	add	x1, x1, #0x9c0
  409228:	mov	x0, x20
  40922c:	bl	40f9f8 <nftw@plt+0xce78>
  409230:	b	4091e8 <nftw@plt+0x6668>
  409234:	mov	x1, x22
  409238:	mov	x0, x20
  40923c:	bl	40f9f8 <nftw@plt+0xce78>
  409240:	b	4091e8 <nftw@plt+0x6668>
  409244:	ldrh	w0, [x21, w1, sxtw #1]
  409248:	tbz	w0, #4, 409258 <nftw@plt+0x66d8>
  40924c:	mov	x0, x20
  409250:	bl	40f400 <nftw@plt+0xc880>
  409254:	b	4091e8 <nftw@plt+0x6668>
  409258:	and	w4, w1, #0x7
  40925c:	ubfx	x3, x1, #3, #3
  409260:	lsr	w2, w1, #6
  409264:	add	x1, x23, #0x9d8
  409268:	mov	x0, x20
  40926c:	bl	411830 <nftw@plt+0xecb0>
  409270:	b	4091e8 <nftw@plt+0x6668>
  409274:	ldp	x21, x22, [sp, #32]
  409278:	ldr	x23, [sp, #48]
  40927c:	mov	w1, #0x22                  	// #34
  409280:	mov	x0, x20
  409284:	bl	40f400 <nftw@plt+0xc880>
  409288:	ldp	x19, x20, [sp, #16]
  40928c:	ldp	x29, x30, [sp], #64
  409290:	ret
  409294:	tbnz	w0, #31, 4092d0 <nftw@plt+0x6750>
  409298:	mov	w1, w0
  40929c:	mov	w0, #0x1                   	// #1
  4092a0:	cbz	w1, 4092cc <nftw@plt+0x674c>
  4092a4:	mov	w0, #0x0                   	// #0
  4092a8:	mov	w4, #0x6667                	// #26215
  4092ac:	movk	w4, #0x6666, lsl #16
  4092b0:	add	w0, w0, #0x1
  4092b4:	mov	w3, w1
  4092b8:	smull	x2, w1, w4
  4092bc:	asr	x2, x2, #34
  4092c0:	sub	w1, w2, w1, asr #31
  4092c4:	cmp	w3, #0x9
  4092c8:	b.gt	4092b0 <nftw@plt+0x6730>
  4092cc:	ret
  4092d0:	stp	x29, x30, [sp, #-16]!
  4092d4:	mov	x29, sp
  4092d8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4092dc:	add	x2, x2, #0x9e0
  4092e0:	mov	w1, #0x415                 	// #1045
  4092e4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4092e8:	add	x0, x0, #0x860
  4092ec:	bl	408d8c <nftw@plt+0x620c>
  4092f0:	stp	x29, x30, [sp, #-256]!
  4092f4:	mov	x29, sp
  4092f8:	stp	x19, x20, [sp, #16]
  4092fc:	str	x2, [sp, #208]
  409300:	str	x3, [sp, #216]
  409304:	str	x4, [sp, #224]
  409308:	str	x5, [sp, #232]
  40930c:	str	x6, [sp, #240]
  409310:	str	x7, [sp, #248]
  409314:	str	q0, [sp, #80]
  409318:	str	q1, [sp, #96]
  40931c:	str	q2, [sp, #112]
  409320:	str	q3, [sp, #128]
  409324:	str	q4, [sp, #144]
  409328:	str	q5, [sp, #160]
  40932c:	str	q6, [sp, #176]
  409330:	str	q7, [sp, #192]
  409334:	cbz	x0, 409398 <nftw@plt+0x6818>
  409338:	mov	x19, x0
  40933c:	mov	x20, x1
  409340:	add	x0, sp, #0x48
  409344:	bl	407a64 <nftw@plt+0x4ee4>
  409348:	add	x0, sp, #0x100
  40934c:	str	x0, [sp, #40]
  409350:	str	x0, [sp, #48]
  409354:	add	x0, sp, #0xd0
  409358:	str	x0, [sp, #56]
  40935c:	mov	w0, #0xffffffd0            	// #-48
  409360:	str	w0, [sp, #64]
  409364:	mov	w0, #0xffffff80            	// #-128
  409368:	str	w0, [sp, #68]
  40936c:	mov	w4, #0x8                   	// #8
  409370:	add	x3, sp, #0x28
  409374:	mov	x2, x20
  409378:	mov	w1, #0xffffffff            	// #-1
  40937c:	mov	x0, x19
  409380:	bl	408318 <nftw@plt+0x5798>
  409384:	add	x0, sp, #0x48
  409388:	bl	407a7c <nftw@plt+0x4efc>
  40938c:	ldp	x19, x20, [sp, #16]
  409390:	ldp	x29, x30, [sp], #256
  409394:	ret
  409398:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40939c:	add	x2, x2, #0x9f0
  4093a0:	mov	w1, #0x4dc                 	// #1244
  4093a4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4093a8:	add	x0, x0, #0x860
  4093ac:	bl	408d8c <nftw@plt+0x620c>
  4093b0:	stp	x29, x30, [sp, #-272]!
  4093b4:	mov	x29, sp
  4093b8:	stp	x19, x20, [sp, #16]
  4093bc:	str	x21, [sp, #32]
  4093c0:	str	x3, [sp, #232]
  4093c4:	str	x4, [sp, #240]
  4093c8:	str	x5, [sp, #248]
  4093cc:	str	x6, [sp, #256]
  4093d0:	str	x7, [sp, #264]
  4093d4:	str	q0, [sp, #96]
  4093d8:	str	q1, [sp, #112]
  4093dc:	str	q2, [sp, #128]
  4093e0:	str	q3, [sp, #144]
  4093e4:	str	q4, [sp, #160]
  4093e8:	str	q5, [sp, #176]
  4093ec:	str	q6, [sp, #192]
  4093f0:	str	q7, [sp, #208]
  4093f4:	cbz	x0, 409468 <nftw@plt+0x68e8>
  4093f8:	mov	x19, x0
  4093fc:	mov	w20, w1
  409400:	mov	x21, x2
  409404:	add	x0, sp, #0x58
  409408:	bl	407a64 <nftw@plt+0x4ee4>
  40940c:	add	x0, sp, #0x110
  409410:	str	x0, [sp, #56]
  409414:	str	x0, [sp, #64]
  409418:	add	x0, sp, #0xe0
  40941c:	str	x0, [sp, #72]
  409420:	mov	w0, #0xffffffd8            	// #-40
  409424:	str	w0, [sp, #80]
  409428:	mov	w0, #0xffffff80            	// #-128
  40942c:	str	w0, [sp, #84]
  409430:	mov	w4, #0x6                   	// #6
  409434:	add	x3, sp, #0x38
  409438:	mov	x2, x21
  40943c:	mov	w1, w20
  409440:	mov	x0, x19
  409444:	bl	408318 <nftw@plt+0x5798>
  409448:	mov	w19, w0
  40944c:	add	x0, sp, #0x58
  409450:	bl	407a7c <nftw@plt+0x4efc>
  409454:	mov	w0, w19
  409458:	ldp	x19, x20, [sp, #16]
  40945c:	ldr	x21, [sp, #32]
  409460:	ldp	x29, x30, [sp], #272
  409464:	ret
  409468:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40946c:	add	x2, x2, #0x9f8
  409470:	mov	w1, #0x518                 	// #1304
  409474:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409478:	add	x0, x0, #0x860
  40947c:	bl	408d8c <nftw@plt+0x620c>
  409480:	stp	x29, x30, [sp, #-272]!
  409484:	mov	x29, sp
  409488:	stp	x19, x20, [sp, #16]
  40948c:	str	x21, [sp, #32]
  409490:	str	x3, [sp, #232]
  409494:	str	x4, [sp, #240]
  409498:	str	x5, [sp, #248]
  40949c:	str	x6, [sp, #256]
  4094a0:	str	x7, [sp, #264]
  4094a4:	str	q0, [sp, #96]
  4094a8:	str	q1, [sp, #112]
  4094ac:	str	q2, [sp, #128]
  4094b0:	str	q3, [sp, #144]
  4094b4:	str	q4, [sp, #160]
  4094b8:	str	q5, [sp, #176]
  4094bc:	str	q6, [sp, #192]
  4094c0:	str	q7, [sp, #208]
  4094c4:	cbz	x0, 409538 <nftw@plt+0x69b8>
  4094c8:	mov	x19, x0
  4094cc:	mov	w20, w1
  4094d0:	mov	x21, x2
  4094d4:	add	x0, sp, #0x58
  4094d8:	bl	407a64 <nftw@plt+0x4ee4>
  4094dc:	add	x0, sp, #0x110
  4094e0:	str	x0, [sp, #56]
  4094e4:	str	x0, [sp, #64]
  4094e8:	add	x0, sp, #0xe0
  4094ec:	str	x0, [sp, #72]
  4094f0:	mov	w0, #0xffffffd8            	// #-40
  4094f4:	str	w0, [sp, #80]
  4094f8:	mov	w0, #0xffffff80            	// #-128
  4094fc:	str	w0, [sp, #84]
  409500:	mov	w4, #0xa                   	// #10
  409504:	add	x3, sp, #0x38
  409508:	mov	x2, x21
  40950c:	mov	w1, w20
  409510:	mov	x0, x19
  409514:	bl	408318 <nftw@plt+0x5798>
  409518:	mov	w19, w0
  40951c:	add	x0, sp, #0x58
  409520:	bl	407a7c <nftw@plt+0x4efc>
  409524:	mov	w0, w19
  409528:	ldp	x19, x20, [sp, #16]
  40952c:	ldr	x21, [sp, #32]
  409530:	ldp	x29, x30, [sp], #272
  409534:	ret
  409538:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40953c:	add	x2, x2, #0xa08
  409540:	mov	w1, #0x565                 	// #1381
  409544:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409548:	add	x0, x0, #0x860
  40954c:	bl	408d8c <nftw@plt+0x620c>
  409550:	stp	x29, x30, [sp, #-256]!
  409554:	mov	x29, sp
  409558:	stp	x19, x20, [sp, #16]
  40955c:	str	x2, [sp, #208]
  409560:	str	x3, [sp, #216]
  409564:	str	x4, [sp, #224]
  409568:	str	x5, [sp, #232]
  40956c:	str	x6, [sp, #240]
  409570:	str	x7, [sp, #248]
  409574:	str	q0, [sp, #80]
  409578:	str	q1, [sp, #96]
  40957c:	str	q2, [sp, #112]
  409580:	str	q3, [sp, #128]
  409584:	str	q4, [sp, #144]
  409588:	str	q5, [sp, #160]
  40958c:	str	q6, [sp, #176]
  409590:	str	q7, [sp, #192]
  409594:	cbz	x0, 409600 <nftw@plt+0x6a80>
  409598:	mov	x19, x0
  40959c:	mov	x20, x1
  4095a0:	add	x0, sp, #0x48
  4095a4:	bl	407a64 <nftw@plt+0x4ee4>
  4095a8:	add	x0, sp, #0x100
  4095ac:	str	x0, [sp, #40]
  4095b0:	str	x0, [sp, #48]
  4095b4:	add	x0, sp, #0xd0
  4095b8:	str	x0, [sp, #56]
  4095bc:	mov	w0, #0xffffffd0            	// #-48
  4095c0:	str	w0, [sp, #64]
  4095c4:	mov	w0, #0xffffff80            	// #-128
  4095c8:	str	w0, [sp, #68]
  4095cc:	mov	w4, #0xb                   	// #11
  4095d0:	add	x3, sp, #0x28
  4095d4:	mov	x2, x20
  4095d8:	mov	w1, #0xffffffff            	// #-1
  4095dc:	mov	x0, x19
  4095e0:	bl	408318 <nftw@plt+0x5798>
  4095e4:	mov	w19, w0
  4095e8:	add	x0, sp, #0x48
  4095ec:	bl	407a7c <nftw@plt+0x4efc>
  4095f0:	mov	w0, w19
  4095f4:	ldp	x19, x20, [sp, #16]
  4095f8:	ldp	x29, x30, [sp], #256
  4095fc:	ret
  409600:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409604:	add	x2, x2, #0xa10
  409608:	mov	w1, #0x587                 	// #1415
  40960c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409610:	add	x0, x0, #0x860
  409614:	bl	408d8c <nftw@plt+0x620c>
  409618:	stp	x29, x30, [sp, #-256]!
  40961c:	mov	x29, sp
  409620:	stp	x19, x20, [sp, #16]
  409624:	str	x2, [sp, #208]
  409628:	str	x3, [sp, #216]
  40962c:	str	x4, [sp, #224]
  409630:	str	x5, [sp, #232]
  409634:	str	x6, [sp, #240]
  409638:	str	x7, [sp, #248]
  40963c:	str	q0, [sp, #80]
  409640:	str	q1, [sp, #96]
  409644:	str	q2, [sp, #112]
  409648:	str	q3, [sp, #128]
  40964c:	str	q4, [sp, #144]
  409650:	str	q5, [sp, #160]
  409654:	str	q6, [sp, #176]
  409658:	str	q7, [sp, #192]
  40965c:	cbz	x0, 4096c0 <nftw@plt+0x6b40>
  409660:	mov	x19, x0
  409664:	mov	x20, x1
  409668:	add	x0, sp, #0x48
  40966c:	bl	407a64 <nftw@plt+0x4ee4>
  409670:	add	x0, sp, #0x100
  409674:	str	x0, [sp, #40]
  409678:	str	x0, [sp, #48]
  40967c:	add	x0, sp, #0xd0
  409680:	str	x0, [sp, #56]
  409684:	mov	w0, #0xffffffd0            	// #-48
  409688:	str	w0, [sp, #64]
  40968c:	mov	w0, #0xffffff80            	// #-128
  409690:	str	w0, [sp, #68]
  409694:	mov	w4, #0x4                   	// #4
  409698:	add	x3, sp, #0x28
  40969c:	mov	x2, x20
  4096a0:	mov	w1, #0xffffffff            	// #-1
  4096a4:	mov	x0, x19
  4096a8:	bl	408318 <nftw@plt+0x5798>
  4096ac:	add	x0, sp, #0x48
  4096b0:	bl	407a7c <nftw@plt+0x4efc>
  4096b4:	ldp	x19, x20, [sp, #16]
  4096b8:	ldp	x29, x30, [sp], #256
  4096bc:	ret
  4096c0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4096c4:	add	x2, x2, #0xa20
  4096c8:	mov	w1, #0x5be                 	// #1470
  4096cc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4096d0:	add	x0, x0, #0x860
  4096d4:	bl	408d8c <nftw@plt+0x620c>
  4096d8:	stp	x29, x30, [sp, #-416]!
  4096dc:	mov	x29, sp
  4096e0:	stp	x19, x20, [sp, #16]
  4096e4:	mov	w20, w0
  4096e8:	mov	x19, x1
  4096ec:	str	x2, [sp, #368]
  4096f0:	str	x3, [sp, #376]
  4096f4:	str	x4, [sp, #384]
  4096f8:	str	x5, [sp, #392]
  4096fc:	str	x6, [sp, #400]
  409700:	str	x7, [sp, #408]
  409704:	str	q0, [sp, #240]
  409708:	str	q1, [sp, #256]
  40970c:	str	q2, [sp, #272]
  409710:	str	q3, [sp, #288]
  409714:	str	q4, [sp, #304]
  409718:	str	q5, [sp, #320]
  40971c:	str	q6, [sp, #336]
  409720:	str	q7, [sp, #352]
  409724:	add	x0, sp, #0xe8
  409728:	bl	407a64 <nftw@plt+0x4ee4>
  40972c:	add	x0, sp, #0x1a0
  409730:	str	x0, [sp, #200]
  409734:	str	x0, [sp, #208]
  409738:	add	x0, sp, #0x170
  40973c:	str	x0, [sp, #216]
  409740:	mov	w0, #0xffffffd0            	// #-48
  409744:	str	w0, [sp, #224]
  409748:	mov	w0, #0xffffff80            	// #-128
  40974c:	str	w0, [sp, #228]
  409750:	mov	x3, #0x0                   	// #0
  409754:	mov	w2, w20
  409758:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40975c:	ldr	x1, [x0, #2296]
  409760:	add	x0, sp, #0x20
  409764:	bl	42d310 <nftw@plt+0x2a790>
  409768:	mov	w4, #0x2                   	// #2
  40976c:	add	x3, sp, #0xc8
  409770:	mov	x2, x19
  409774:	mov	w1, #0xffffffff            	// #-1
  409778:	add	x0, sp, #0x20
  40977c:	bl	408318 <nftw@plt+0x5798>
  409780:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409784:	add	x2, x2, #0xa30
  409788:	mov	w1, #0x5f6                 	// #1526
  40978c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409790:	add	x0, x0, #0x860
  409794:	bl	408d8c <nftw@plt+0x620c>
  409798:	stp	x29, x30, [sp, #-432]!
  40979c:	mov	x29, sp
  4097a0:	str	x19, [sp, #16]
  4097a4:	mov	x19, x0
  4097a8:	str	x1, [sp, #376]
  4097ac:	str	x2, [sp, #384]
  4097b0:	str	x3, [sp, #392]
  4097b4:	str	x4, [sp, #400]
  4097b8:	str	x5, [sp, #408]
  4097bc:	str	x6, [sp, #416]
  4097c0:	str	x7, [sp, #424]
  4097c4:	str	q0, [sp, #240]
  4097c8:	str	q1, [sp, #256]
  4097cc:	str	q2, [sp, #272]
  4097d0:	str	q3, [sp, #288]
  4097d4:	str	q4, [sp, #304]
  4097d8:	str	q5, [sp, #320]
  4097dc:	str	q6, [sp, #336]
  4097e0:	str	q7, [sp, #352]
  4097e4:	add	x0, sp, #0xe8
  4097e8:	bl	407a64 <nftw@plt+0x4ee4>
  4097ec:	add	x0, sp, #0x1b0
  4097f0:	str	x0, [sp, #200]
  4097f4:	str	x0, [sp, #208]
  4097f8:	add	x0, sp, #0x170
  4097fc:	str	x0, [sp, #216]
  409800:	mov	w0, #0xffffffc8            	// #-56
  409804:	str	w0, [sp, #224]
  409808:	mov	w0, #0xffffff80            	// #-128
  40980c:	str	w0, [sp, #228]
  409810:	mov	x3, #0x0                   	// #0
  409814:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  409818:	ldr	w2, [x0, #2320]
  40981c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  409820:	ldr	x1, [x0, #2296]
  409824:	add	x0, sp, #0x20
  409828:	bl	42d310 <nftw@plt+0x2a790>
  40982c:	mov	w4, #0xd                   	// #13
  409830:	add	x3, sp, #0xc8
  409834:	mov	x2, x19
  409838:	mov	w1, #0xffffffff            	// #-1
  40983c:	add	x0, sp, #0x20
  409840:	bl	408318 <nftw@plt+0x5798>
  409844:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409848:	add	x2, x2, #0xa40
  40984c:	mov	w1, #0x617                 	// #1559
  409850:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409854:	add	x0, x0, #0x860
  409858:	bl	408d8c <nftw@plt+0x620c>
  40985c:	stp	x29, x30, [sp, #-112]!
  409860:	mov	x29, sp
  409864:	stp	x19, x20, [sp, #16]
  409868:	stp	x21, x22, [sp, #32]
  40986c:	mov	x21, x0
  409870:	mov	w22, w1
  409874:	mov	x0, x3
  409878:	mov	x1, x4
  40987c:	mov	x20, x5
  409880:	mov	w19, w6
  409884:	bl	4024b0 <ngettext@plt>
  409888:	mov	w4, w19
  40988c:	mov	x3, x21
  409890:	mov	x2, x20
  409894:	mov	x1, x0
  409898:	add	x0, sp, #0x30
  40989c:	bl	408dbc <nftw@plt+0x623c>
  4098a0:	cmp	w19, #0x6
  4098a4:	b.eq	4098c8 <nftw@plt+0x6d48>  // b.none
  4098a8:	add	x1, sp, #0x30
  4098ac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4098b0:	ldr	x0, [x0, #920]
  4098b4:	bl	407d40 <nftw@plt+0x51c0>
  4098b8:	ldp	x19, x20, [sp, #16]
  4098bc:	ldp	x21, x22, [sp, #32]
  4098c0:	ldp	x29, x30, [sp], #112
  4098c4:	ret
  4098c8:	str	w22, [sp, #108]
  4098cc:	b	4098a8 <nftw@plt+0x6d28>
  4098d0:	stp	x29, x30, [sp, #-416]!
  4098d4:	mov	x29, sp
  4098d8:	stp	x19, x20, [sp, #16]
  4098dc:	stp	x21, x22, [sp, #32]
  4098e0:	mov	w22, w0
  4098e4:	mov	x19, x1
  4098e8:	mov	x20, x2
  4098ec:	mov	x21, x3
  4098f0:	str	x4, [sp, #384]
  4098f4:	str	x5, [sp, #392]
  4098f8:	str	x6, [sp, #400]
  4098fc:	str	x7, [sp, #408]
  409900:	str	q0, [sp, #256]
  409904:	str	q1, [sp, #272]
  409908:	str	q2, [sp, #288]
  40990c:	str	q3, [sp, #304]
  409910:	str	q4, [sp, #320]
  409914:	str	q5, [sp, #336]
  409918:	str	q6, [sp, #352]
  40991c:	str	q7, [sp, #368]
  409920:	add	x0, sp, #0x1a0
  409924:	str	x0, [sp, #224]
  409928:	str	x0, [sp, #232]
  40992c:	add	x0, sp, #0x180
  409930:	str	x0, [sp, #240]
  409934:	mov	w0, #0xffffffe0            	// #-32
  409938:	str	w0, [sp, #248]
  40993c:	mov	w0, #0xffffff80            	// #-128
  409940:	str	w0, [sp, #252]
  409944:	add	x0, sp, #0xd8
  409948:	bl	407a64 <nftw@plt+0x4ee4>
  40994c:	mov	x3, #0x0                   	// #0
  409950:	mov	w2, w22
  409954:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  409958:	ldr	x1, [x0, #2296]
  40995c:	add	x0, sp, #0x30
  409960:	bl	42d310 <nftw@plt+0x2a790>
  409964:	mov	w6, #0x8                   	// #8
  409968:	add	x5, sp, #0xe0
  40996c:	mov	x4, x21
  409970:	mov	x3, x20
  409974:	mov	x2, x19
  409978:	mov	w1, #0xffffffff            	// #-1
  40997c:	add	x0, sp, #0x30
  409980:	bl	40985c <nftw@plt+0x6cdc>
  409984:	add	x0, sp, #0x30
  409988:	bl	42d0a0 <nftw@plt+0x2a520>
  40998c:	add	x0, sp, #0xd8
  409990:	bl	407a7c <nftw@plt+0x4efc>
  409994:	ldp	x19, x20, [sp, #16]
  409998:	ldp	x21, x22, [sp, #32]
  40999c:	ldp	x29, x30, [sp], #416
  4099a0:	ret
  4099a4:	stp	x29, x30, [sp, #-272]!
  4099a8:	mov	x29, sp
  4099ac:	stp	x19, x20, [sp, #16]
  4099b0:	stp	x21, x22, [sp, #32]
  4099b4:	str	x23, [sp, #48]
  4099b8:	str	x5, [sp, #248]
  4099bc:	str	x6, [sp, #256]
  4099c0:	str	x7, [sp, #264]
  4099c4:	str	q0, [sp, #112]
  4099c8:	str	q1, [sp, #128]
  4099cc:	str	q2, [sp, #144]
  4099d0:	str	q3, [sp, #160]
  4099d4:	str	q4, [sp, #176]
  4099d8:	str	q5, [sp, #192]
  4099dc:	str	q6, [sp, #208]
  4099e0:	str	q7, [sp, #224]
  4099e4:	cbz	x0, 409a6c <nftw@plt+0x6eec>
  4099e8:	mov	x19, x0
  4099ec:	mov	w20, w1
  4099f0:	mov	x21, x2
  4099f4:	mov	x22, x3
  4099f8:	mov	x23, x4
  4099fc:	add	x0, sp, #0x68
  409a00:	bl	407a64 <nftw@plt+0x4ee4>
  409a04:	add	x0, sp, #0x110
  409a08:	str	x0, [sp, #72]
  409a0c:	str	x0, [sp, #80]
  409a10:	add	x0, sp, #0xf0
  409a14:	str	x0, [sp, #88]
  409a18:	mov	w0, #0xffffffe8            	// #-24
  409a1c:	str	w0, [sp, #96]
  409a20:	mov	w0, #0xffffff80            	// #-128
  409a24:	str	w0, [sp, #100]
  409a28:	mov	w6, #0x6                   	// #6
  409a2c:	add	x5, sp, #0x48
  409a30:	mov	x4, x23
  409a34:	mov	x3, x22
  409a38:	mov	x2, x21
  409a3c:	mov	w1, w20
  409a40:	mov	x0, x19
  409a44:	bl	40985c <nftw@plt+0x6cdc>
  409a48:	mov	w19, w0
  409a4c:	add	x0, sp, #0x68
  409a50:	bl	407a7c <nftw@plt+0x4efc>
  409a54:	mov	w0, w19
  409a58:	ldp	x19, x20, [sp, #16]
  409a5c:	ldp	x21, x22, [sp, #32]
  409a60:	ldr	x23, [sp, #48]
  409a64:	ldp	x29, x30, [sp], #272
  409a68:	ret
  409a6c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409a70:	add	x2, x2, #0xa60
  409a74:	mov	w1, #0x528                 	// #1320
  409a78:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409a7c:	add	x0, x0, #0x860
  409a80:	bl	408d8c <nftw@plt+0x620c>
  409a84:	stp	x29, x30, [sp, #-432]!
  409a88:	mov	x29, sp
  409a8c:	stp	x19, x20, [sp, #16]
  409a90:	stp	x21, x22, [sp, #32]
  409a94:	str	x23, [sp, #48]
  409a98:	mov	w23, w0
  409a9c:	mov	w19, w1
  409aa0:	mov	x20, x2
  409aa4:	mov	x21, x3
  409aa8:	mov	x22, x4
  409aac:	str	x5, [sp, #408]
  409ab0:	str	x6, [sp, #416]
  409ab4:	str	x7, [sp, #424]
  409ab8:	str	q0, [sp, #272]
  409abc:	str	q1, [sp, #288]
  409ac0:	str	q2, [sp, #304]
  409ac4:	str	q3, [sp, #320]
  409ac8:	str	q4, [sp, #336]
  409acc:	str	q5, [sp, #352]
  409ad0:	str	q6, [sp, #368]
  409ad4:	str	q7, [sp, #384]
  409ad8:	add	x0, sp, #0x108
  409adc:	bl	407a64 <nftw@plt+0x4ee4>
  409ae0:	add	x0, sp, #0x1b0
  409ae4:	str	x0, [sp, #232]
  409ae8:	str	x0, [sp, #240]
  409aec:	add	x0, sp, #0x190
  409af0:	str	x0, [sp, #248]
  409af4:	mov	w0, #0xffffffe8            	// #-24
  409af8:	str	w0, [sp, #256]
  409afc:	mov	w0, #0xffffff80            	// #-128
  409b00:	str	w0, [sp, #260]
  409b04:	mov	x3, #0x0                   	// #0
  409b08:	mov	w2, w23
  409b0c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  409b10:	ldr	x1, [x0, #2296]
  409b14:	add	x0, sp, #0x40
  409b18:	bl	42d310 <nftw@plt+0x2a790>
  409b1c:	mov	w6, #0x6                   	// #6
  409b20:	add	x5, sp, #0xe8
  409b24:	mov	x4, x22
  409b28:	mov	x3, x21
  409b2c:	mov	x2, x20
  409b30:	mov	w1, w19
  409b34:	add	x0, sp, #0x40
  409b38:	bl	40985c <nftw@plt+0x6cdc>
  409b3c:	mov	w19, w0
  409b40:	add	x0, sp, #0x40
  409b44:	bl	42d0a0 <nftw@plt+0x2a520>
  409b48:	add	x0, sp, #0x108
  409b4c:	bl	407a7c <nftw@plt+0x4efc>
  409b50:	mov	w0, w19
  409b54:	ldp	x19, x20, [sp, #16]
  409b58:	ldp	x21, x22, [sp, #32]
  409b5c:	ldr	x23, [sp, #48]
  409b60:	ldp	x29, x30, [sp], #432
  409b64:	ret
  409b68:	stp	x29, x30, [sp, #-416]!
  409b6c:	mov	x29, sp
  409b70:	stp	x19, x20, [sp, #16]
  409b74:	stp	x21, x22, [sp, #32]
  409b78:	mov	w22, w0
  409b7c:	mov	x19, x1
  409b80:	mov	x20, x2
  409b84:	mov	x21, x3
  409b88:	str	x4, [sp, #384]
  409b8c:	str	x5, [sp, #392]
  409b90:	str	x6, [sp, #400]
  409b94:	str	x7, [sp, #408]
  409b98:	str	q0, [sp, #256]
  409b9c:	str	q1, [sp, #272]
  409ba0:	str	q2, [sp, #288]
  409ba4:	str	q3, [sp, #304]
  409ba8:	str	q4, [sp, #320]
  409bac:	str	q5, [sp, #336]
  409bb0:	str	q6, [sp, #352]
  409bb4:	str	q7, [sp, #368]
  409bb8:	add	x0, sp, #0xf8
  409bbc:	bl	407a64 <nftw@plt+0x4ee4>
  409bc0:	add	x0, sp, #0x1a0
  409bc4:	str	x0, [sp, #216]
  409bc8:	str	x0, [sp, #224]
  409bcc:	add	x0, sp, #0x180
  409bd0:	str	x0, [sp, #232]
  409bd4:	mov	w0, #0xffffffe0            	// #-32
  409bd8:	str	w0, [sp, #240]
  409bdc:	mov	w0, #0xffffff80            	// #-128
  409be0:	str	w0, [sp, #244]
  409be4:	mov	x3, #0x0                   	// #0
  409be8:	mov	w2, w22
  409bec:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  409bf0:	ldr	x1, [x0, #2296]
  409bf4:	add	x0, sp, #0x30
  409bf8:	bl	42d310 <nftw@plt+0x2a790>
  409bfc:	mov	w6, #0x4                   	// #4
  409c00:	add	x5, sp, #0xd8
  409c04:	mov	x4, x21
  409c08:	mov	x3, x20
  409c0c:	mov	x2, x19
  409c10:	mov	w1, #0xffffffff            	// #-1
  409c14:	add	x0, sp, #0x30
  409c18:	bl	40985c <nftw@plt+0x6cdc>
  409c1c:	add	x0, sp, #0x30
  409c20:	bl	42d0a0 <nftw@plt+0x2a520>
  409c24:	add	x0, sp, #0xf8
  409c28:	bl	407a7c <nftw@plt+0x4efc>
  409c2c:	ldp	x19, x20, [sp, #16]
  409c30:	ldp	x21, x22, [sp, #32]
  409c34:	ldp	x29, x30, [sp], #416
  409c38:	ret
  409c3c:	cbz	x1, 409d40 <nftw@plt+0x71c0>
  409c40:	stp	x29, x30, [sp, #-64]!
  409c44:	mov	x29, sp
  409c48:	stp	x19, x20, [sp, #16]
  409c4c:	stp	x21, x22, [sp, #32]
  409c50:	str	x23, [sp, #48]
  409c54:	mov	x22, x0
  409c58:	mov	x19, x1
  409c5c:	ldr	x1, [x0, #16]
  409c60:	cbz	x1, 409c6c <nftw@plt+0x70ec>
  409c64:	ldr	x0, [x19]
  409c68:	blr	x1
  409c6c:	ldr	x1, [x22, #24]
  409c70:	cbz	x1, 409c7c <nftw@plt+0x70fc>
  409c74:	ldr	x0, [x19, #8]
  409c78:	blr	x1
  409c7c:	str	xzr, [x19, #32]
  409c80:	mov	x21, #0x0                   	// #0
  409c84:	mov	x23, #0x28                  	// #40
  409c88:	b	409cc4 <nftw@plt+0x7144>
  409c8c:	cbz	x21, 409d2c <nftw@plt+0x71ac>
  409c90:	mov	x0, x21
  409c94:	mov	x21, x20
  409c98:	mov	x20, x0
  409c9c:	b	409cc0 <nftw@plt+0x7140>
  409ca0:	ldr	x0, [x19, #24]
  409ca4:	str	x21, [x0, #32]
  409ca8:	ldr	x21, [x19, #24]
  409cac:	ldr	x20, [x19, #32]
  409cb0:	mov	x1, x23
  409cb4:	mov	x0, x19
  409cb8:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  409cbc:	cbz	x20, 409c8c <nftw@plt+0x710c>
  409cc0:	mov	x19, x20
  409cc4:	ldr	x0, [x19, #16]
  409cc8:	cbz	x0, 409cfc <nftw@plt+0x717c>
  409ccc:	ldr	x1, [x22, #16]
  409cd0:	cbz	x1, 409cdc <nftw@plt+0x715c>
  409cd4:	ldr	x0, [x0]
  409cd8:	blr	x1
  409cdc:	ldr	x1, [x22, #24]
  409ce0:	cbz	x1, 409cf0 <nftw@plt+0x7170>
  409ce4:	ldr	x0, [x19, #16]
  409ce8:	ldr	x0, [x0, #8]
  409cec:	blr	x1
  409cf0:	ldr	x0, [x19, #16]
  409cf4:	str	x21, [x0, #32]
  409cf8:	ldr	x21, [x19, #16]
  409cfc:	ldr	x0, [x19, #24]
  409d00:	cbz	x0, 409cac <nftw@plt+0x712c>
  409d04:	ldr	x1, [x22, #16]
  409d08:	cbz	x1, 409d14 <nftw@plt+0x7194>
  409d0c:	ldr	x0, [x0]
  409d10:	blr	x1
  409d14:	ldr	x1, [x22, #24]
  409d18:	cbz	x1, 409ca0 <nftw@plt+0x7120>
  409d1c:	ldr	x0, [x19, #24]
  409d20:	ldr	x0, [x0, #8]
  409d24:	blr	x1
  409d28:	b	409ca0 <nftw@plt+0x7120>
  409d2c:	ldp	x19, x20, [sp, #16]
  409d30:	ldp	x21, x22, [sp, #32]
  409d34:	ldr	x23, [sp, #48]
  409d38:	ldp	x29, x30, [sp], #64
  409d3c:	ret
  409d40:	ret
  409d44:	stp	x29, x30, [sp, #-96]!
  409d48:	mov	x29, sp
  409d4c:	stp	x21, x22, [sp, #32]
  409d50:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409d54:	add	x0, x0, #0xcd0
  409d58:	bl	402ab0 <getenv@plt>
  409d5c:	cbz	x0, 409ef4 <nftw@plt+0x7374>
  409d60:	stp	x23, x24, [sp, #48]
  409d64:	mov	x23, x0
  409d68:	ldrb	w0, [x0]
  409d6c:	mov	w21, #0x0                   	// #0
  409d70:	cbz	w0, 409efc <nftw@plt+0x737c>
  409d74:	stp	x19, x20, [sp, #16]
  409d78:	stp	x25, x26, [sp, #64]
  409d7c:	stp	x27, x28, [sp, #80]
  409d80:	mov	x22, x23
  409d84:	mov	x26, #0x0                   	// #0
  409d88:	mov	x20, #0x0                   	// #0
  409d8c:	mov	x24, #0x0                   	// #0
  409d90:	mov	w28, #0x5b1b                	// #23323
  409d94:	adrp	x27, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409d98:	add	x27, x27, #0xce0
  409d9c:	b	409e1c <nftw@plt+0x729c>
  409da0:	cbz	x24, 409dc0 <nftw@plt+0x7240>
  409da4:	sub	x26, x22, x24
  409da8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  409dac:	ldr	x0, [x0, #928]
  409db0:	cbz	x0, 409e74 <nftw@plt+0x72f4>
  409db4:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  409db8:	add	x19, x19, #0x3a0
  409dbc:	b	409ddc <nftw@plt+0x725c>
  409dc0:	sub	x20, x22, x23
  409dc4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  409dc8:	ldr	x0, [x0, #928]
  409dcc:	cbnz	x0, 409db4 <nftw@plt+0x7234>
  409dd0:	b	409e08 <nftw@plt+0x7288>
  409dd4:	ldr	x0, [x19, #24]!
  409dd8:	cbz	x0, 409df8 <nftw@plt+0x7278>
  409ddc:	ldrb	w1, [x19, #16]
  409de0:	cmp	x1, x20
  409de4:	b.ne	409dd4 <nftw@plt+0x7254>  // b.any
  409de8:	mov	x2, x20
  409dec:	mov	x1, x23
  409df0:	bl	402850 <memcmp@plt>
  409df4:	cbnz	w0, 409dd4 <nftw@plt+0x7254>
  409df8:	ldr	x0, [x19, #8]
  409dfc:	cmp	x24, #0x0
  409e00:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  409e04:	b.ne	409e80 <nftw@plt+0x7300>  // b.any
  409e08:	ldrb	w0, [x25]
  409e0c:	cbz	w0, 409f10 <nftw@plt+0x7390>
  409e10:	add	x23, x22, #0x1
  409e14:	mov	x24, #0x0                   	// #0
  409e18:	add	x22, x22, #0x1
  409e1c:	mov	x25, x22
  409e20:	ldrb	w0, [x22]
  409e24:	cmp	w0, #0x0
  409e28:	cset	w21, eq  // eq = none
  409e2c:	cmp	w0, #0x3a
  409e30:	csinc	w21, w21, wzr, ne  // ne = any
  409e34:	cbnz	w21, 409da0 <nftw@plt+0x7220>
  409e38:	cmp	w0, #0x3d
  409e3c:	b.eq	409ed4 <nftw@plt+0x7354>  // b.none
  409e40:	cbz	x24, 409e18 <nftw@plt+0x7298>
  409e44:	cmp	w0, #0x3b
  409e48:	b.eq	409e18 <nftw@plt+0x7298>  // b.none
  409e4c:	sub	w0, w0, #0x30
  409e50:	and	w0, w0, #0xff
  409e54:	cmp	w0, #0x9
  409e58:	b.ls	409e18 <nftw@plt+0x7298>  // b.plast
  409e5c:	mov	w21, #0x1                   	// #1
  409e60:	ldp	x19, x20, [sp, #16]
  409e64:	ldp	x23, x24, [sp, #48]
  409e68:	ldp	x25, x26, [sp, #64]
  409e6c:	ldp	x27, x28, [sp, #80]
  409e70:	b	409f00 <nftw@plt+0x7380>
  409e74:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  409e78:	add	x19, x19, #0x3a0
  409e7c:	b	409df8 <nftw@plt+0x7278>
  409e80:	ldrb	w1, [x19, #17]
  409e84:	cbnz	w1, 409ecc <nftw@plt+0x734c>
  409e88:	add	x0, x26, #0x7
  409e8c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  409e90:	mov	x23, x0
  409e94:	strh	w28, [x0], #2
  409e98:	mov	x2, x26
  409e9c:	mov	x1, x24
  409ea0:	bl	402490 <memcpy@plt>
  409ea4:	add	x0, x26, #0x2
  409ea8:	add	x1, x23, x0
  409eac:	ldr	w2, [x27]
  409eb0:	str	w2, [x23, x0]
  409eb4:	ldrb	w0, [x27, #4]
  409eb8:	strb	w0, [x1, #4]
  409ebc:	str	x23, [x19, #8]
  409ec0:	mov	w0, #0x1                   	// #1
  409ec4:	strb	w0, [x19, #17]
  409ec8:	b	409e08 <nftw@plt+0x7288>
  409ecc:	bl	402910 <free@plt>
  409ed0:	b	409e88 <nftw@plt+0x7308>
  409ed4:	cmp	x22, x23
  409ed8:	cset	w21, eq  // eq = none
  409edc:	cmp	x24, #0x0
  409ee0:	csinc	w21, w21, wzr, eq  // eq = none
  409ee4:	cbnz	w21, 409f24 <nftw@plt+0x73a4>
  409ee8:	sub	x20, x22, x23
  409eec:	add	x24, x22, #0x1
  409ef0:	b	409e18 <nftw@plt+0x7298>
  409ef4:	mov	w21, #0x1                   	// #1
  409ef8:	b	409f00 <nftw@plt+0x7380>
  409efc:	ldp	x23, x24, [sp, #48]
  409f00:	mov	w0, w21
  409f04:	ldp	x21, x22, [sp, #32]
  409f08:	ldp	x29, x30, [sp], #96
  409f0c:	ret
  409f10:	ldp	x19, x20, [sp, #16]
  409f14:	ldp	x23, x24, [sp, #48]
  409f18:	ldp	x25, x26, [sp, #64]
  409f1c:	ldp	x27, x28, [sp, #80]
  409f20:	b	409f00 <nftw@plt+0x7380>
  409f24:	ldp	x19, x20, [sp, #16]
  409f28:	ldp	x23, x24, [sp, #48]
  409f2c:	ldp	x25, x26, [sp, #64]
  409f30:	ldp	x27, x28, [sp, #80]
  409f34:	b	409f00 <nftw@plt+0x7380>
  409f38:	tst	w0, #0xff
  409f3c:	b.eq	409fb4 <nftw@plt+0x7434>  // b.none
  409f40:	stp	x29, x30, [sp, #-48]!
  409f44:	mov	x29, sp
  409f48:	stp	x19, x20, [sp, #16]
  409f4c:	str	x21, [sp, #32]
  409f50:	mov	x21, x1
  409f54:	mov	x20, x2
  409f58:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  409f5c:	ldr	x0, [x0, #928]
  409f60:	cbz	x0, 409fc0 <nftw@plt+0x7440>
  409f64:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  409f68:	add	x19, x19, #0x3a0
  409f6c:	b	409f78 <nftw@plt+0x73f8>
  409f70:	ldr	x0, [x19, #24]!
  409f74:	cbz	x0, 409fa8 <nftw@plt+0x7428>
  409f78:	ldrb	w3, [x19, #16]
  409f7c:	cmp	x3, x20
  409f80:	b.ne	409f70 <nftw@plt+0x73f0>  // b.any
  409f84:	mov	x2, x20
  409f88:	mov	x1, x21
  409f8c:	bl	402850 <memcmp@plt>
  409f90:	cbnz	w0, 409f70 <nftw@plt+0x73f0>
  409f94:	ldr	x0, [x19, #8]
  409f98:	ldp	x19, x20, [sp, #16]
  409f9c:	ldr	x21, [sp, #32]
  409fa0:	ldp	x29, x30, [sp], #48
  409fa4:	ret
  409fa8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  409fac:	add	x0, x0, #0x780
  409fb0:	b	409f98 <nftw@plt+0x7418>
  409fb4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  409fb8:	add	x0, x0, #0x780
  409fbc:	ret
  409fc0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  409fc4:	add	x0, x0, #0x780
  409fc8:	b	409f98 <nftw@plt+0x7418>
  409fcc:	ands	w2, w0, #0xff
  409fd0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  409fd4:	add	x1, x1, #0x780
  409fd8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  409fdc:	add	x0, x0, #0xce8
  409fe0:	csel	x0, x0, x1, ne  // ne = any
  409fe4:	ret
  409fe8:	stp	x29, x30, [sp, #-16]!
  409fec:	mov	x29, sp
  409ff0:	cmp	w0, #0x1
  409ff4:	b.eq	40a054 <nftw@plt+0x74d4>  // b.none
  409ff8:	cmp	w0, #0x2
  409ffc:	b.ne	40a040 <nftw@plt+0x74c0>  // b.any
  40a000:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a004:	add	x0, x0, #0xcf0
  40a008:	bl	402ab0 <getenv@plt>
  40a00c:	mov	w2, #0x0                   	// #0
  40a010:	cbz	x0, 40a048 <nftw@plt+0x74c8>
  40a014:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a018:	add	x1, x1, #0xcf8
  40a01c:	bl	402890 <strcmp@plt>
  40a020:	mov	w2, #0x0                   	// #0
  40a024:	cbz	w0, 40a048 <nftw@plt+0x74c8>
  40a028:	mov	w0, #0x2                   	// #2
  40a02c:	bl	4029f0 <isatty@plt>
  40a030:	cbz	w0, 40a078 <nftw@plt+0x74f8>
  40a034:	bl	409d44 <nftw@plt+0x71c4>
  40a038:	and	w2, w0, #0xff
  40a03c:	b	40a048 <nftw@plt+0x74c8>
  40a040:	mov	w2, #0x0                   	// #0
  40a044:	cbnz	w0, 40a060 <nftw@plt+0x74e0>
  40a048:	mov	w0, w2
  40a04c:	ldp	x29, x30, [sp], #16
  40a050:	ret
  40a054:	bl	409d44 <nftw@plt+0x71c4>
  40a058:	and	w2, w0, #0xff
  40a05c:	b	40a048 <nftw@plt+0x74c8>
  40a060:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a064:	add	x2, x2, #0xd00
  40a068:	mov	w1, #0xec                  	// #236
  40a06c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a070:	add	x0, x0, #0xd10
  40a074:	bl	408d8c <nftw@plt+0x620c>
  40a078:	mov	w2, #0x0                   	// #0
  40a07c:	b	40a048 <nftw@plt+0x74c8>
  40a080:	ldr	w2, [x0]
  40a084:	ldr	w3, [x1]
  40a088:	subs	x2, x2, x3
  40a08c:	b.ne	40a0a8 <nftw@plt+0x7528>  // b.any
  40a090:	ldr	w0, [x0, #4]
  40a094:	ldr	w1, [x1, #4]
  40a098:	subs	x1, x0, x1
  40a09c:	mov	w0, #0x0                   	// #0
  40a0a0:	b.ne	40a0b8 <nftw@plt+0x7538>  // b.any
  40a0a4:	ret
  40a0a8:	mov	w0, #0x1                   	// #1
  40a0ac:	cmp	x2, #0x1
  40a0b0:	cneg	w0, w0, lt  // lt = tstop
  40a0b4:	b	40a0a4 <nftw@plt+0x7524>
  40a0b8:	mov	w0, #0xffffffff            	// #-1
  40a0bc:	cmp	x1, #0x0
  40a0c0:	cneg	w0, w0, gt
  40a0c4:	b	40a0a4 <nftw@plt+0x7524>
  40a0c8:	ldr	x2, [x0]
  40a0cc:	ldr	x0, [x1]
  40a0d0:	ldr	w1, [x2]
  40a0d4:	ldr	w0, [x0]
  40a0d8:	sub	w0, w1, w0
  40a0dc:	ret
  40a0e0:	ldr	x4, [x0, #136]
  40a0e4:	add	x0, x4, #0x8
  40a0e8:	mov	w2, #0x0                   	// #0
  40a0ec:	mov	w5, #0x0                   	// #0
  40a0f0:	b	40a0fc <nftw@plt+0x757c>
  40a0f4:	add	w2, w2, #0x1
  40a0f8:	add	x0, x0, #0x8
  40a0fc:	mov	w3, w5
  40a100:	cbz	x4, 40a108 <nftw@plt+0x7588>
  40a104:	ldr	w3, [x4, #4]
  40a108:	cmp	w2, w3
  40a10c:	b.ge	40a130 <nftw@plt+0x75b0>  // b.tcont
  40a110:	ldr	w3, [x0]
  40a114:	cmp	w1, w3
  40a118:	b.cc	40a0f4 <nftw@plt+0x7574>  // b.lo, b.ul, b.last
  40a11c:	ldr	w3, [x0, #4]
  40a120:	cmp	w1, w3
  40a124:	b.hi	40a0f4 <nftw@plt+0x7574>  // b.pmore
  40a128:	mov	w0, #0x1                   	// #1
  40a12c:	ret
  40a130:	mov	w0, #0x0                   	// #0
  40a134:	b	40a12c <nftw@plt+0x75ac>
  40a138:	ldr	w2, [x0, #4]
  40a13c:	ldr	w3, [x1, #4]
  40a140:	subs	x2, x2, x3
  40a144:	b.ne	40a160 <nftw@plt+0x75e0>  // b.any
  40a148:	ldr	w0, [x0]
  40a14c:	ldr	w1, [x1]
  40a150:	subs	x1, x0, x1
  40a154:	mov	w0, #0x0                   	// #0
  40a158:	b.ne	40a170 <nftw@plt+0x75f0>  // b.any
  40a15c:	ret
  40a160:	mov	w0, #0x1                   	// #1
  40a164:	cmp	x2, #0x1
  40a168:	cneg	w0, w0, lt  // lt = tstop
  40a16c:	b	40a15c <nftw@plt+0x75dc>
  40a170:	mov	w0, #0xffffffff            	// #-1
  40a174:	cmp	x1, #0x0
  40a178:	cneg	w0, w0, gt
  40a17c:	b	40a15c <nftw@plt+0x75dc>
  40a180:	ldr	x7, [x0, #120]
  40a184:	cbz	x7, 40a318 <nftw@plt+0x7798>
  40a188:	add	x6, x7, #0x8
  40a18c:	ldr	w8, [x7, #4]
  40a190:	mov	w0, #0x0                   	// #0
  40a194:	mov	w11, w0
  40a198:	cmp	w0, w8
  40a19c:	b.eq	40a338 <nftw@plt+0x77b8>  // b.none
  40a1a0:	mov	x12, x6
  40a1a4:	ldr	w9, [x6, #16]
  40a1a8:	cmp	w9, #0x2
  40a1ac:	b.eq	40a32c <nftw@plt+0x77ac>  // b.none
  40a1b0:	stp	x29, x30, [sp, #-16]!
  40a1b4:	mov	x29, sp
  40a1b8:	b	40a220 <nftw@plt+0x76a0>
  40a1bc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a1c0:	add	x2, x2, #0xe48
  40a1c4:	mov	w1, #0x1d8                 	// #472
  40a1c8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a1cc:	add	x0, x0, #0xe58
  40a1d0:	bl	408d8c <nftw@plt+0x620c>
  40a1d4:	ldr	w13, [x12, #4]
  40a1d8:	cmp	w2, w13
  40a1dc:	b.lt	40a1fc <nftw@plt+0x767c>  // b.tstop
  40a1e0:	cmp	w9, w10
  40a1e4:	b.cc	40a27c <nftw@plt+0x76fc>  // b.lo, b.ul, b.last
  40a1e8:	b.ne	40a25c <nftw@plt+0x76dc>  // b.any
  40a1ec:	ldr	w9, [x12, #12]
  40a1f0:	cmp	w2, w9
  40a1f4:	cset	w9, le
  40a1f8:	cbnz	w9, 40a27c <nftw@plt+0x76fc>
  40a1fc:	add	w0, w0, #0x1
  40a200:	add	x6, x6, #0x28
  40a204:	mov	w11, w0
  40a208:	cmp	w0, w8
  40a20c:	b.eq	40a320 <nftw@plt+0x77a0>  // b.none
  40a210:	mov	x12, x6
  40a214:	ldr	w9, [x6, #16]
  40a218:	cmp	w9, #0x2
  40a21c:	b.eq	40a1fc <nftw@plt+0x767c>  // b.none
  40a220:	ldr	w9, [x6]
  40a224:	ldr	w10, [x6, #8]
  40a228:	cmp	w9, w10
  40a22c:	b.hi	40a1bc <nftw@plt+0x763c>  // b.pmore
  40a230:	cmp	w1, w9
  40a234:	b.cc	40a1fc <nftw@plt+0x767c>  // b.lo, b.ul, b.last
  40a238:	b.eq	40a1d4 <nftw@plt+0x7654>  // b.none
  40a23c:	cmp	w1, w10
  40a240:	b.hi	40a1fc <nftw@plt+0x767c>  // b.pmore
  40a244:	b.cc	40a274 <nftw@plt+0x76f4>  // b.lo, b.ul, b.last
  40a248:	b.ne	40a2d8 <nftw@plt+0x7758>  // b.any
  40a24c:	ldr	w9, [x12, #12]
  40a250:	cmp	w2, w9
  40a254:	cset	w9, le
  40a258:	b	40a1f8 <nftw@plt+0x7678>
  40a25c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a260:	add	x2, x2, #0xe48
  40a264:	mov	w1, #0x1f3                 	// #499
  40a268:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a26c:	add	x0, x0, #0xe58
  40a270:	bl	408d8c <nftw@plt+0x620c>
  40a274:	cmp	w9, w10
  40a278:	b.eq	40a2c0 <nftw@plt+0x7740>  // b.none
  40a27c:	str	w0, [x5]
  40a280:	strb	wzr, [x5, #4]
  40a284:	ubfiz	x0, x11, #2, #32
  40a288:	add	x0, x0, w11, uxtw
  40a28c:	add	x0, x7, x0, lsl #3
  40a290:	ldr	w0, [x0, #24]
  40a294:	cbnz	w0, 40a2b0 <nftw@plt+0x7730>
  40a298:	ubfiz	x0, x11, #2, #32
  40a29c:	add	x0, x0, w11, uxtw
  40a2a0:	add	x0, x7, x0, lsl #3
  40a2a4:	ldr	w0, [x0, #28]
  40a2a8:	cmp	w0, w1
  40a2ac:	b.eq	40a2f0 <nftw@plt+0x7770>  // b.none
  40a2b0:	cmp	w2, w3
  40a2b4:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  40a2b8:	cset	w0, le
  40a2bc:	b	40a324 <nftw@plt+0x77a4>
  40a2c0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a2c4:	add	x2, x2, #0xe48
  40a2c8:	mov	w1, #0x207                 	// #519
  40a2cc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a2d0:	add	x0, x0, #0xe58
  40a2d4:	bl	408d8c <nftw@plt+0x620c>
  40a2d8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a2dc:	add	x2, x2, #0xe48
  40a2e0:	mov	w1, #0x20b                 	// #523
  40a2e4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a2e8:	add	x0, x0, #0xe58
  40a2ec:	bl	408d8c <nftw@plt+0x620c>
  40a2f0:	ubfiz	x0, x11, #2, #32
  40a2f4:	add	x11, x0, w11, uxtw
  40a2f8:	add	x7, x7, x11, lsl #3
  40a2fc:	ldr	w0, [x7, #32]
  40a300:	cmp	w0, w2
  40a304:	b.ne	40a2b0 <nftw@plt+0x7730>  // b.any
  40a308:	mov	w0, #0x1                   	// #1
  40a30c:	strb	w0, [x5, #4]
  40a310:	mov	w0, #0x1                   	// #1
  40a314:	b	40a324 <nftw@plt+0x77a4>
  40a318:	mov	w0, #0x0                   	// #0
  40a31c:	ret
  40a320:	mov	w0, #0x0                   	// #0
  40a324:	ldp	x29, x30, [sp], #16
  40a328:	ret
  40a32c:	add	w0, w0, #0x1
  40a330:	add	x6, x6, #0x28
  40a334:	b	40a194 <nftw@plt+0x7614>
  40a338:	mov	w0, #0x0                   	// #0
  40a33c:	ret
  40a340:	stp	x29, x30, [sp, #-32]!
  40a344:	mov	x29, sp
  40a348:	stp	x19, x20, [sp, #16]
  40a34c:	mov	x20, x0
  40a350:	mov	x19, x1
  40a354:	mov	x0, x1
  40a358:	bl	4024f0 <strlen@plt>
  40a35c:	ldr	x1, [x20]
  40a360:	ldr	x3, [x1]
  40a364:	mov	x2, x0
  40a368:	mov	x1, x19
  40a36c:	ldrb	w0, [x3, #67]
  40a370:	bl	409f38 <nftw@plt+0x73b8>
  40a374:	ldp	x19, x20, [sp, #16]
  40a378:	ldp	x29, x30, [sp], #32
  40a37c:	ret
  40a380:	stp	x29, x30, [sp, #-48]!
  40a384:	mov	x29, sp
  40a388:	stp	x19, x20, [sp, #16]
  40a38c:	mov	x20, x0
  40a390:	ldrb	w0, [x0, #114]
  40a394:	cbz	w0, 40a410 <nftw@plt+0x7890>
  40a398:	stp	x21, x22, [sp, #32]
  40a39c:	and	w21, w1, #0xff
  40a3a0:	ldr	w0, [x20, #144]
  40a3a4:	mov	w19, #0x0                   	// #0
  40a3a8:	mov	w22, #0x20                  	// #32
  40a3ac:	cmp	w0, #0x3
  40a3b0:	b.le	40a3d4 <nftw@plt+0x7854>
  40a3b4:	mov	w1, w22
  40a3b8:	ldr	x0, [x20, #8]
  40a3bc:	bl	40f400 <nftw@plt+0xc880>
  40a3c0:	add	w19, w19, #0x1
  40a3c4:	ldr	w0, [x20, #144]
  40a3c8:	sub	w0, w0, #0x3
  40a3cc:	cmp	w0, w19
  40a3d0:	b.gt	40a3b4 <nftw@plt+0x7834>
  40a3d4:	ldr	w0, [x20, #144]
  40a3d8:	cmp	w0, w19
  40a3dc:	b.le	40a3fc <nftw@plt+0x787c>
  40a3e0:	mov	w1, w21
  40a3e4:	ldr	x0, [x20, #8]
  40a3e8:	bl	40f400 <nftw@plt+0xc880>
  40a3ec:	add	w19, w19, #0x1
  40a3f0:	ldr	w0, [x20, #144]
  40a3f4:	cmp	w0, w19
  40a3f8:	b.gt	40a3e0 <nftw@plt+0x7860>
  40a3fc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a400:	add	x1, x1, #0xe80
  40a404:	ldr	x0, [x20, #8]
  40a408:	bl	40f9f8 <nftw@plt+0xce78>
  40a40c:	ldp	x21, x22, [sp, #32]
  40a410:	ldp	x19, x20, [sp, #16]
  40a414:	ldp	x29, x30, [sp], #48
  40a418:	ret
  40a41c:	ldr	w1, [x0, #12]
  40a420:	cmn	w1, #0x1
  40a424:	b.ne	40a42c <nftw@plt+0x78ac>  // b.any
  40a428:	ret
  40a42c:	stp	x29, x30, [sp, #-16]!
  40a430:	mov	x29, sp
  40a434:	ldr	x2, [x0]
  40a438:	ldr	x1, [x0, #48]
  40a43c:	ldr	x0, [x2]
  40a440:	bl	40f9f8 <nftw@plt+0xce78>
  40a444:	ldp	x29, x30, [sp], #16
  40a448:	ret
  40a44c:	stp	x29, x30, [sp, #-64]!
  40a450:	mov	x29, sp
  40a454:	stp	x19, x20, [sp, #16]
  40a458:	stp	x21, x22, [sp, #32]
  40a45c:	mov	w21, w0
  40a460:	mov	w19, w1
  40a464:	tbnz	w0, #31, 40a4a0 <nftw@plt+0x7920>
  40a468:	tbnz	w19, #31, 40a4b8 <nftw@plt+0x7938>
  40a46c:	cmp	w21, #0x1
  40a470:	cset	w2, ls  // ls = plast
  40a474:	cmp	w19, #0x1
  40a478:	cset	w1, ls  // ls = plast
  40a47c:	orr	w22, w2, w1
  40a480:	cbz	w22, 40a4d0 <nftw@plt+0x7950>
  40a484:	cmp	w21, w19
  40a488:	cset	w22, eq  // eq = none
  40a48c:	mov	w0, w22
  40a490:	ldp	x19, x20, [sp, #16]
  40a494:	ldp	x21, x22, [sp, #32]
  40a498:	ldp	x29, x30, [sp], #64
  40a49c:	ret
  40a4a0:	mov	w1, w0
  40a4a4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40a4a8:	ldr	x0, [x0, #2296]
  40a4ac:	bl	42b2d0 <nftw@plt+0x28750>
  40a4b0:	mov	w21, w0
  40a4b4:	b	40a468 <nftw@plt+0x78e8>
  40a4b8:	mov	w1, w19
  40a4bc:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40a4c0:	ldr	x0, [x0, #2296]
  40a4c4:	bl	42b2d0 <nftw@plt+0x28750>
  40a4c8:	mov	w19, w0
  40a4cc:	b	40a46c <nftw@plt+0x78ec>
  40a4d0:	str	x23, [sp, #48]
  40a4d4:	adrp	x20, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40a4d8:	mov	w1, w21
  40a4dc:	ldr	x0, [x20, #2296]
  40a4e0:	bl	42bb70 <nftw@plt+0x28ff0>
  40a4e4:	mov	x23, x0
  40a4e8:	mov	w1, w19
  40a4ec:	ldr	x0, [x20, #2296]
  40a4f0:	bl	42bb70 <nftw@plt+0x28ff0>
  40a4f4:	mov	x20, x0
  40a4f8:	cmp	x23, x0
  40a4fc:	b.eq	40a518 <nftw@plt+0x7998>  // b.none
  40a500:	mov	x0, x23
  40a504:	bl	42bac8 <nftw@plt+0x28f48>
  40a508:	ands	w19, w0, #0xff
  40a50c:	b.eq	40a574 <nftw@plt+0x79f4>  // b.none
  40a510:	ldr	x23, [sp, #48]
  40a514:	b	40a48c <nftw@plt+0x790c>
  40a518:	mov	x0, x23
  40a51c:	bl	42bac8 <nftw@plt+0x28f48>
  40a520:	and	w0, w0, #0xff
  40a524:	mov	w22, #0x1                   	// #1
  40a528:	cbnz	w0, 40a534 <nftw@plt+0x79b4>
  40a52c:	ldr	x23, [sp, #48]
  40a530:	b	40a48c <nftw@plt+0x790c>
  40a534:	adrp	x22, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40a538:	mov	w2, w21
  40a53c:	mov	x1, x23
  40a540:	ldr	x0, [x22, #2296]
  40a544:	bl	42bae8 <nftw@plt+0x28f68>
  40a548:	mov	w20, w0
  40a54c:	mov	w2, w19
  40a550:	mov	x1, x23
  40a554:	ldr	x0, [x22, #2296]
  40a558:	bl	42bae8 <nftw@plt+0x28f68>
  40a55c:	mov	w1, w0
  40a560:	mov	w0, w20
  40a564:	bl	40a44c <nftw@plt+0x78cc>
  40a568:	and	w22, w0, #0xff
  40a56c:	ldr	x23, [sp, #48]
  40a570:	b	40a48c <nftw@plt+0x790c>
  40a574:	mov	x0, x20
  40a578:	bl	42bac8 <nftw@plt+0x28f48>
  40a57c:	and	w0, w0, #0xff
  40a580:	mov	w22, w19
  40a584:	cbnz	w0, 40a5a0 <nftw@plt+0x7a20>
  40a588:	ldr	x1, [x23, #8]
  40a58c:	ldr	x0, [x20, #8]
  40a590:	cmp	x1, x0
  40a594:	cset	w22, eq  // eq = none
  40a598:	ldr	x23, [sp, #48]
  40a59c:	b	40a48c <nftw@plt+0x790c>
  40a5a0:	ldr	x23, [sp, #48]
  40a5a4:	b	40a48c <nftw@plt+0x790c>
  40a5a8:	stp	x29, x30, [sp, #-224]!
  40a5ac:	mov	x29, sp
  40a5b0:	cbz	x1, 40a63c <nftw@plt+0x7abc>
  40a5b4:	stp	x19, x20, [sp, #16]
  40a5b8:	stp	x21, x22, [sp, #32]
  40a5bc:	stp	x23, x24, [sp, #48]
  40a5c0:	mov	x21, x0
  40a5c4:	mov	x19, x1
  40a5c8:	mov	w22, w2
  40a5cc:	and	w24, w3, #0xff
  40a5d0:	ldr	w1, [x1]
  40a5d4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  40a5d8:	ldr	x0, [x0, #2296]
  40a5dc:	bl	42bef8 <nftw@plt+0x29378>
  40a5e0:	mov	x20, x0
  40a5e4:	lsr	x23, x0, #32
  40a5e8:	add	x8, sp, #0xc0
  40a5ec:	mov	w1, #0x1                   	// #1
  40a5f0:	bl	414bf0 <nftw@plt+0x12070>
  40a5f4:	add	x8, sp, #0xa0
  40a5f8:	mov	w1, #0x2                   	// #2
  40a5fc:	mov	w0, w23
  40a600:	bl	414bf0 <nftw@plt+0x12070>
  40a604:	add	x8, sp, #0x80
  40a608:	mov	w1, #0x0                   	// #0
  40a60c:	ldr	w0, [x19]
  40a610:	bl	414bf0 <nftw@plt+0x12070>
  40a614:	ldr	x1, [x21, #24]
  40a618:	mov	w0, #0x0                   	// #0
  40a61c:	ldr	x2, [sp, #192]
  40a620:	cmp	x2, x1
  40a624:	b.eq	40a668 <nftw@plt+0x7ae8>  // b.none
  40a628:	ldp	x19, x20, [sp, #16]
  40a62c:	ldp	x21, x22, [sp, #32]
  40a630:	ldp	x23, x24, [sp, #48]
  40a634:	ldp	x29, x30, [sp], #224
  40a638:	ret
  40a63c:	stp	x19, x20, [sp, #16]
  40a640:	stp	x21, x22, [sp, #32]
  40a644:	stp	x23, x24, [sp, #48]
  40a648:	stp	x25, x26, [sp, #64]
  40a64c:	stp	x27, x28, [sp, #80]
  40a650:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a654:	add	x2, x2, #0xe88
  40a658:	mov	w1, #0x39f                 	// #927
  40a65c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40a660:	add	x0, x0, #0xe58
  40a664:	bl	408d8c <nftw@plt+0x620c>
  40a668:	ldr	x2, [sp, #160]
  40a66c:	cmp	x1, x2
  40a670:	b.ne	40a628 <nftw@plt+0x7aa8>  // b.any
  40a674:	stp	x25, x26, [sp, #64]
  40a678:	stp	x27, x28, [sp, #80]
  40a67c:	ldr	w0, [x19, #4]
  40a680:	cbnz	w0, 40a6c0 <nftw@plt+0x7b40>
  40a684:	ldr	x2, [sp, #128]
  40a688:	cmp	x1, x2
  40a68c:	b.eq	40a69c <nftw@plt+0x7b1c>  // b.none
  40a690:	ldp	x25, x26, [sp, #64]
  40a694:	ldp	x27, x28, [sp, #80]
  40a698:	b	40a628 <nftw@plt+0x7aa8>
  40a69c:	ldr	x0, [x21, #120]
  40a6a0:	cbz	x0, 40a6c0 <nftw@plt+0x7b40>
  40a6a4:	ldr	w0, [x0, #4]
  40a6a8:	cbz	w0, 40a9b4 <nftw@plt+0x7e34>
  40a6ac:	ldr	w1, [x21, #16]
  40a6b0:	ldr	w0, [x19]
  40a6b4:	bl	40a44c <nftw@plt+0x78cc>
  40a6b8:	ands	w0, w0, #0xff
  40a6bc:	b.eq	40a9e4 <nftw@plt+0x7e64>  // b.none
  40a6c0:	ldr	w0, [x19, #4]
  40a6c4:	str	w0, [sp, #120]
  40a6c8:	ldr	x0, [x19, #8]
  40a6cc:	str	x0, [sp, #112]
  40a6d0:	ldr	w27, [sp, #200]
  40a6d4:	ldr	w28, [sp, #168]
  40a6d8:	ldr	w25, [sp, #136]
  40a6dc:	ldr	w26, [sp, #140]
  40a6e0:	cmp	w27, w28
  40a6e4:	b.le	40a89c <nftw@plt+0x7d1c>
  40a6e8:	ldr	x0, [x21, #120]
  40a6ec:	cbz	x0, 40a99c <nftw@plt+0x7e1c>
  40a6f0:	ldr	w0, [x0, #4]
  40a6f4:	cbnz	w0, 40a8e8 <nftw@plt+0x7d68>
  40a6f8:	cbz	w24, 40a964 <nftw@plt+0x7de4>
  40a6fc:	str	w26, [sp, #108]
  40a700:	str	w26, [sp, #104]
  40a704:	str	w25, [sp, #124]
  40a708:	mov	w23, w25
  40a70c:	mov	w1, w27
  40a710:	mov	x0, x21
  40a714:	bl	40a0e0 <nftw@plt+0x7560>
  40a718:	ands	w0, w0, #0xff
  40a71c:	b.eq	40a9f0 <nftw@plt+0x7e70>  // b.none
  40a720:	mov	w1, w28
  40a724:	mov	x0, x21
  40a728:	bl	40a0e0 <nftw@plt+0x7560>
  40a72c:	ands	w0, w0, #0xff
  40a730:	b.eq	40a9fc <nftw@plt+0x7e7c>  // b.none
  40a734:	ldr	w0, [x19, #4]
  40a738:	cbnz	w0, 40a750 <nftw@plt+0x7bd0>
  40a73c:	mov	w1, w23
  40a740:	mov	x0, x21
  40a744:	bl	40a0e0 <nftw@plt+0x7560>
  40a748:	ands	w0, w0, #0xff
  40a74c:	b.eq	40a8f8 <nftw@plt+0x7d78>  // b.none
  40a750:	ldr	x19, [x21, #120]
  40a754:	cbz	x19, 40a928 <nftw@plt+0x7da8>
  40a758:	ldr	w0, [x19]
  40a75c:	ubfx	x0, x0, #0, #31
  40a760:	ldr	w1, [x19, #4]
  40a764:	cmp	w0, w1
  40a768:	b.ne	40a830 <nftw@plt+0x7cb0>  // b.any
  40a76c:	ldrsb	w0, [x19, #3]
  40a770:	tbnz	w0, #31, 40a914 <nftw@plt+0x7d94>
  40a774:	mov	w24, #0x0                   	// #0
  40a778:	mov	w27, #0x0                   	// #0
  40a77c:	mov	w1, #0x1                   	// #1
  40a780:	ldr	x0, [x21, #120]
  40a784:	cbz	x0, 40a938 <nftw@plt+0x7db8>
  40a788:	ldr	w2, [x0, #4]
  40a78c:	ldr	w0, [x0]
  40a790:	add	w1, w1, w2
  40a794:	and	w0, w0, #0x7fffffff
  40a798:	bl	4120a8 <nftw@plt+0xf528>
  40a79c:	mov	w20, w0
  40a7a0:	ubfiz	x1, x20, #2, #32
  40a7a4:	add	x1, x1, w0, uxtw
  40a7a8:	lsl	x1, x1, #3
  40a7ac:	add	x1, x1, #0x8
  40a7b0:	ldr	x0, [x21, #120]
  40a7b4:	cbz	x0, 40a95c <nftw@plt+0x7ddc>
  40a7b8:	ldr	w28, [x0, #4]
  40a7bc:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40a7c0:	str	x0, [x21, #120]
  40a7c4:	ldr	w1, [x0]
  40a7c8:	bfxil	w1, w20, #0, #31
  40a7cc:	str	w1, [x0]
  40a7d0:	ubfx	x1, x1, #24, #7
  40a7d4:	strb	w1, [x0, #3]
  40a7d8:	str	w28, [x0, #4]
  40a7dc:	cbz	w24, 40a830 <nftw@plt+0x7cb0>
  40a7e0:	ldr	x6, [x21, #120]
  40a7e4:	cbz	w27, 40a828 <nftw@plt+0x7ca8>
  40a7e8:	sub	w0, w27, #0x1
  40a7ec:	add	x0, x0, x0, lsl #2
  40a7f0:	lsl	x3, x0, #3
  40a7f4:	add	x3, x3, #0x30
  40a7f8:	mov	x0, #0x8                   	// #8
  40a7fc:	add	x1, x6, x0
  40a800:	add	x2, x19, x0
  40a804:	ldp	x4, x5, [x2]
  40a808:	stp	x4, x5, [x1]
  40a80c:	ldp	x4, x5, [x2, #16]
  40a810:	stp	x4, x5, [x1, #16]
  40a814:	ldr	x2, [x2, #32]
  40a818:	str	x2, [x1, #32]
  40a81c:	add	x0, x0, #0x28
  40a820:	cmp	x0, x3
  40a824:	b.ne	40a7fc <nftw@plt+0x7c7c>  // b.any
  40a828:	ldr	x0, [x21, #120]
  40a82c:	str	w27, [x0, #4]
  40a830:	ldr	x2, [x21, #120]
  40a834:	ldr	w0, [x2, #4]
  40a838:	add	w1, w0, #0x1
  40a83c:	str	w1, [x2, #4]
  40a840:	ubfiz	x1, x0, #2, #32
  40a844:	add	x0, x1, w0, uxtw
  40a848:	lsl	x0, x0, #3
  40a84c:	add	x0, x0, #0x8
  40a850:	add	x1, x2, x0
  40a854:	str	w25, [x2, x0]
  40a858:	ldr	w0, [sp, #104]
  40a85c:	str	w0, [x1, #4]
  40a860:	ldr	w0, [sp, #124]
  40a864:	str	w0, [x1, #8]
  40a868:	ldr	w0, [sp, #108]
  40a86c:	str	w0, [x1, #12]
  40a870:	ldr	w0, [sp, #120]
  40a874:	str	w0, [x1, #16]
  40a878:	str	w23, [x1, #20]
  40a87c:	str	w26, [x1, #24]
  40a880:	str	w22, [x1, #28]
  40a884:	ldr	x0, [sp, #112]
  40a888:	str	x0, [x1, #32]
  40a88c:	mov	w0, #0x1                   	// #1
  40a890:	ldp	x25, x26, [sp, #64]
  40a894:	ldp	x27, x28, [sp, #80]
  40a898:	b	40a628 <nftw@plt+0x7aa8>
  40a89c:	ldr	w0, [sp, #204]
  40a8a0:	str	w0, [sp, #104]
  40a8a4:	ldr	w0, [sp, #172]
  40a8a8:	str	w0, [sp, #108]
  40a8ac:	ldr	w1, [x21, #16]
  40a8b0:	mov	w0, w20
  40a8b4:	bl	40a44c <nftw@plt+0x78cc>
  40a8b8:	and	w0, w0, #0xff
  40a8bc:	cbz	w0, 40a6e8 <nftw@plt+0x7b68>
  40a8c0:	ldr	w1, [x21, #16]
  40a8c4:	mov	w0, w23
  40a8c8:	bl	40a44c <nftw@plt+0x78cc>
  40a8cc:	and	w0, w0, #0xff
  40a8d0:	cbz	w0, 40a6e8 <nftw@plt+0x7b68>
  40a8d4:	cbz	w24, 40a904 <nftw@plt+0x7d84>
  40a8d8:	str	w28, [sp, #124]
  40a8dc:	mov	w23, w25
  40a8e0:	mov	w25, w27
  40a8e4:	b	40a70c <nftw@plt+0x7b8c>
  40a8e8:	mov	w0, #0x0                   	// #0
  40a8ec:	ldp	x25, x26, [sp, #64]
  40a8f0:	ldp	x27, x28, [sp, #80]
  40a8f4:	b	40a628 <nftw@plt+0x7aa8>
  40a8f8:	ldp	x25, x26, [sp, #64]
  40a8fc:	ldp	x27, x28, [sp, #80]
  40a900:	b	40a628 <nftw@plt+0x7aa8>
  40a904:	str	w28, [sp, #124]
  40a908:	mov	w23, w25
  40a90c:	mov	w25, w27
  40a910:	b	40a750 <nftw@plt+0x7bd0>
  40a914:	str	xzr, [x21, #120]
  40a918:	ldr	w27, [x19, #4]
  40a91c:	add	w1, w27, #0x1
  40a920:	mov	w24, #0x1                   	// #1
  40a924:	b	40a780 <nftw@plt+0x7c00>
  40a928:	mov	w24, #0x0                   	// #0
  40a92c:	mov	w27, #0x0                   	// #0
  40a930:	mov	w1, #0x1                   	// #1
  40a934:	b	40a780 <nftw@plt+0x7c00>
  40a938:	mov	w2, #0x4                   	// #4
  40a93c:	cmp	w1, w2
  40a940:	csel	w20, w1, w2, cs  // cs = hs, nlast
  40a944:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40a948:	add	x1, x1, x1, lsl #2
  40a94c:	lsl	x1, x1, #3
  40a950:	add	x1, x1, #0x8
  40a954:	mov	w28, #0x0                   	// #0
  40a958:	b	40a7bc <nftw@plt+0x7c3c>
  40a95c:	mov	w28, #0x0                   	// #0
  40a960:	b	40a7bc <nftw@plt+0x7c3c>
  40a964:	ldr	x19, [x21, #120]
  40a968:	str	w26, [sp, #108]
  40a96c:	str	w26, [sp, #104]
  40a970:	str	w25, [sp, #124]
  40a974:	mov	w23, w25
  40a978:	b	40a758 <nftw@plt+0x7bd8>
  40a97c:	ldr	x19, [x21, #120]
  40a980:	str	w26, [sp, #108]
  40a984:	str	w26, [sp, #104]
  40a988:	str	w25, [sp, #124]
  40a98c:	mov	w23, w25
  40a990:	mov	w27, #0x0                   	// #0
  40a994:	mov	w1, #0x1                   	// #1
  40a998:	b	40a780 <nftw@plt+0x7c00>
  40a99c:	cbz	w24, 40a97c <nftw@plt+0x7dfc>
  40a9a0:	str	w26, [sp, #108]
  40a9a4:	str	w26, [sp, #104]
  40a9a8:	str	w25, [sp, #124]
  40a9ac:	mov	w23, w25
  40a9b0:	b	40a70c <nftw@plt+0x7b8c>
  40a9b4:	ldr	w0, [x19, #4]
  40a9b8:	str	w0, [sp, #120]
  40a9bc:	ldr	x0, [x19, #8]
  40a9c0:	str	x0, [sp, #112]
  40a9c4:	ldr	w27, [sp, #200]
  40a9c8:	ldr	w28, [sp, #168]
  40a9cc:	ldr	w25, [sp, #136]
  40a9d0:	ldr	w26, [sp, #140]
  40a9d4:	cmp	w27, w28
  40a9d8:	b.le	40a89c <nftw@plt+0x7d1c>
  40a9dc:	ldr	x0, [x21, #120]
  40a9e0:	b	40a6f0 <nftw@plt+0x7b70>
  40a9e4:	ldp	x25, x26, [sp, #64]
  40a9e8:	ldp	x27, x28, [sp, #80]
  40a9ec:	b	40a628 <nftw@plt+0x7aa8>
  40a9f0:	ldp	x25, x26, [sp, #64]
  40a9f4:	ldp	x27, x28, [sp, #80]
  40a9f8:	b	40a628 <nftw@plt+0x7aa8>
  40a9fc:	ldp	x25, x26, [sp, #64]
  40aa00:	ldp	x27, x28, [sp, #80]
  40aa04:	b	40a628 <nftw@plt+0x7aa8>
  40aa08:	stp	x29, x30, [sp, #-144]!
  40aa0c:	mov	x29, sp
  40aa10:	stp	x19, x20, [sp, #16]
  40aa14:	stp	x21, x22, [sp, #32]
  40aa18:	stp	x23, x24, [sp, #48]
  40aa1c:	stp	x25, x26, [sp, #64]
  40aa20:	stp	x27, x28, [sp, #80]
  40aa24:	mov	x20, x0
  40aa28:	mov	x25, x1
  40aa2c:	mov	x19, x2
  40aa30:	mov	w22, w3
  40aa34:	str	x1, [x0]
  40aa38:	ldr	x0, [x1]
  40aa3c:	str	x0, [x20, #8]
  40aa40:	mov	w1, #0x0                   	// #0
  40aa44:	mov	x0, x2
  40aa48:	bl	42d17c <nftw@plt+0x2a5fc>
  40aa4c:	ldr	w0, [x0]
  40aa50:	str	w0, [x20, #16]
  40aa54:	add	x8, x20, #0x18
  40aa58:	mov	w1, #0x0                   	// #0
  40aa5c:	mov	x0, x19
  40aa60:	bl	42d1a4 <nftw@plt+0x2a624>
  40aa64:	add	x21, x20, #0x38
  40aa68:	str	x25, [x20, #56]
  40aa6c:	str	w22, [x20, #64]
  40aa70:	mov	w0, #0xffffffff            	// #-1
  40aa74:	str	w0, [x20, #68]
  40aa78:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40aa7c:	add	x1, x1, #0xd60
  40aa80:	mov	x0, x21
  40aa84:	bl	40a340 <nftw@plt+0x77c0>
  40aa88:	str	x0, [x20, #72]
  40aa8c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40aa90:	add	x1, x1, #0xd78
  40aa94:	mov	x0, x21
  40aa98:	bl	40a340 <nftw@plt+0x77c0>
  40aa9c:	str	x0, [x20, #80]
  40aaa0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40aaa4:	add	x1, x1, #0xda8
  40aaa8:	mov	x0, x21
  40aaac:	bl	40a340 <nftw@plt+0x77c0>
  40aab0:	str	x0, [x20, #88]
  40aab4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40aab8:	add	x1, x1, #0xdb8
  40aabc:	mov	x0, x21
  40aac0:	bl	40a340 <nftw@plt+0x77c0>
  40aac4:	str	x0, [x20, #96]
  40aac8:	ldr	x0, [x25]
  40aacc:	ldrb	w0, [x0, #67]
  40aad0:	bl	409fcc <nftw@plt+0x744c>
  40aad4:	str	x0, [x20, #104]
  40aad8:	ldrb	w0, [x25, #221]
  40aadc:	strb	w0, [x20, #112]
  40aae0:	ldrb	w0, [x25, #222]
  40aae4:	strb	w0, [x20, #113]
  40aae8:	ldrb	w0, [x25, #223]
  40aaec:	strb	w0, [x20, #114]
  40aaf0:	ldr	w21, [x19, #8]
  40aaf4:	str	xzr, [x20, #120]
  40aaf8:	cbnz	w21, 40abd4 <nftw@plt+0x8054>
  40aafc:	ldr	w21, [x19, #120]
  40ab00:	str	xzr, [x20, #128]
  40ab04:	cbnz	w21, 40ac0c <nftw@plt+0x808c>
  40ab08:	ldr	w0, [x19, #8]
  40ab0c:	str	xzr, [x20, #136]
  40ab10:	adds	w21, w0, #0x1
  40ab14:	b.ne	40ac3c <nftw@plt+0x80bc>  // b.any
  40ab18:	str	wzr, [x20, #144]
  40ab1c:	str	wzr, [x20, #148]
  40ab20:	ldr	w0, [x19, #8]
  40ab24:	mov	w21, #0x0                   	// #0
  40ab28:	cbz	w0, 40ab5c <nftw@plt+0x7fdc>
  40ab2c:	mov	w1, w21
  40ab30:	mov	x0, x19
  40ab34:	bl	42d17c <nftw@plt+0x2a5fc>
  40ab38:	mov	w3, #0x0                   	// #0
  40ab3c:	mov	w2, w21
  40ab40:	mov	x1, x0
  40ab44:	mov	x0, x20
  40ab48:	bl	40a5a8 <nftw@plt+0x7a28>
  40ab4c:	add	w21, w21, #0x1
  40ab50:	ldr	w0, [x19, #8]
  40ab54:	cmp	w0, w21
  40ab58:	b.hi	40ab2c <nftw@plt+0x7fac>  // b.pmore
  40ab5c:	ldr	w0, [x19, #120]
  40ab60:	mov	w21, #0x0                   	// #0
  40ab64:	cbnz	w0, 40aca4 <nftw@plt+0x8124>
  40ab68:	ldr	x0, [x20, #128]
  40ab6c:	cbz	x0, 40ab7c <nftw@plt+0x7ffc>
  40ab70:	ldr	w1, [x0, #4]
  40ab74:	cmp	w1, #0x1
  40ab78:	b.hi	40ae00 <nftw@plt+0x8280>  // b.pmore
  40ab7c:	ldr	x0, [x20, #136]
  40ab80:	cbz	x0, 40ab8c <nftw@plt+0x800c>
  40ab84:	ldr	w0, [x0, #4]
  40ab88:	cbnz	w0, 40ae1c <nftw@plt+0x829c>
  40ab8c:	ldr	x0, [x20, #120]
  40ab90:	cbz	x0, 40b91c <nftw@plt+0x8d9c>
  40ab94:	ldr	w0, [x0, #4]
  40ab98:	adds	w21, w0, #0x1
  40ab9c:	b.ne	40ae34 <nftw@plt+0x82b4>  // b.any
  40aba0:	ldr	w22, [x20, #32]
  40aba4:	mov	x1, #0x28                  	// #40
  40aba8:	mov	x0, #0x0                   	// #0
  40abac:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40abb0:	mov	x19, x0
  40abb4:	ldr	w0, [x0]
  40abb8:	mov	w1, #0x4                   	// #4
  40abbc:	bfxil	w0, w1, #0, #31
  40abc0:	str	w0, [x19]
  40abc4:	ubfx	x0, x0, #24, #7
  40abc8:	strb	w0, [x19, #3]
  40abcc:	str	wzr, [x19, #4]
  40abd0:	b	40aebc <nftw@plt+0x833c>
  40abd4:	ubfiz	x1, x21, #2, #32
  40abd8:	add	x1, x1, w21, uxtw
  40abdc:	lsl	x1, x1, #3
  40abe0:	add	x1, x1, #0x8
  40abe4:	mov	x0, #0x0                   	// #0
  40abe8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40abec:	str	x0, [x20, #120]
  40abf0:	ldr	w1, [x0]
  40abf4:	bfxil	w1, w21, #0, #31
  40abf8:	str	w1, [x0]
  40abfc:	ubfx	x1, x1, #24, #7
  40ac00:	strb	w1, [x0, #3]
  40ac04:	str	wzr, [x0, #4]
  40ac08:	b	40aafc <nftw@plt+0x7f7c>
  40ac0c:	ubfiz	x1, x21, #3, #32
  40ac10:	add	x1, x1, #0x8
  40ac14:	mov	x0, #0x0                   	// #0
  40ac18:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40ac1c:	str	x0, [x20, #128]
  40ac20:	ldr	w1, [x0]
  40ac24:	bfxil	w1, w21, #0, #31
  40ac28:	str	w1, [x0]
  40ac2c:	ubfx	x1, x1, #24, #7
  40ac30:	strb	w1, [x0, #3]
  40ac34:	str	wzr, [x0, #4]
  40ac38:	b	40ab08 <nftw@plt+0x7f88>
  40ac3c:	ubfiz	x1, x21, #3, #32
  40ac40:	add	x1, x1, #0x8
  40ac44:	mov	x0, #0x0                   	// #0
  40ac48:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40ac4c:	str	x0, [x20, #136]
  40ac50:	ldr	w1, [x0]
  40ac54:	bfxil	w1, w21, #0, #31
  40ac58:	str	w1, [x0]
  40ac5c:	ubfx	x1, x1, #24, #7
  40ac60:	strb	w1, [x0, #3]
  40ac64:	str	wzr, [x0, #4]
  40ac68:	b	40ab18 <nftw@plt+0x7f98>
  40ac6c:	add	x0, x19, w21, sxtw #3
  40ac70:	add	x0, x0, #0x80
  40ac74:	ldr	x22, [x0]
  40ac78:	add	x8, sp, #0x70
  40ac7c:	ldr	w0, [x22]
  40ac80:	bl	414820 <nftw@plt+0x11ca0>
  40ac84:	ldr	x0, [x20, #24]
  40ac88:	ldr	x1, [sp, #112]
  40ac8c:	cmp	x1, x0
  40ac90:	b.eq	40acc0 <nftw@plt+0x8140>  // b.none
  40ac94:	add	w21, w21, #0x1
  40ac98:	ldr	w0, [x19, #120]
  40ac9c:	cmp	w21, w0
  40aca0:	b.cs	40ab68 <nftw@plt+0x7fe8>  // b.hs, b.nlast
  40aca4:	cmp	w21, #0x1
  40aca8:	b.le	40ac6c <nftw@plt+0x80ec>
  40acac:	sbfiz	x0, x21, #3, #32
  40acb0:	sub	x1, x0, #0x10
  40acb4:	ldr	x0, [x19, #152]
  40acb8:	add	x0, x0, x1
  40acbc:	b	40ac74 <nftw@plt+0x80f4>
  40acc0:	add	x8, sp, #0x70
  40acc4:	ldr	w0, [x22, #4]
  40acc8:	bl	414820 <nftw@plt+0x11ca0>
  40accc:	ldr	x0, [x20, #24]
  40acd0:	ldr	x1, [sp, #112]
  40acd4:	cmp	x1, x0
  40acd8:	b.ne	40ac94 <nftw@plt+0x8114>  // b.any
  40acdc:	ldr	x23, [x20, #128]
  40ace0:	cbz	x23, 40ad24 <nftw@plt+0x81a4>
  40ace4:	ldr	w0, [x23]
  40ace8:	ubfx	x0, x0, #0, #31
  40acec:	ldr	w1, [x23, #4]
  40acf0:	cmp	w0, w1
  40acf4:	b.ne	40adbc <nftw@plt+0x823c>  // b.any
  40acf8:	ldrsb	w0, [x23, #3]
  40acfc:	tbnz	w0, #31, 40ad10 <nftw@plt+0x8190>
  40ad00:	mov	w27, #0x0                   	// #0
  40ad04:	mov	w26, #0x0                   	// #0
  40ad08:	mov	w1, #0x1                   	// #1
  40ad0c:	b	40ad30 <nftw@plt+0x81b0>
  40ad10:	str	xzr, [x20, #128]
  40ad14:	ldr	w26, [x23, #4]
  40ad18:	add	w1, w26, #0x1
  40ad1c:	mov	w27, #0x1                   	// #1
  40ad20:	b	40ad30 <nftw@plt+0x81b0>
  40ad24:	mov	w27, #0x0                   	// #0
  40ad28:	mov	w26, #0x0                   	// #0
  40ad2c:	mov	w1, #0x1                   	// #1
  40ad30:	ldr	x0, [x20, #128]
  40ad34:	cbz	x0, 40add8 <nftw@plt+0x8258>
  40ad38:	ldr	w2, [x0, #4]
  40ad3c:	ldr	w0, [x0]
  40ad40:	add	w1, w1, w2
  40ad44:	and	w0, w0, #0x7fffffff
  40ad48:	bl	4120a8 <nftw@plt+0xf528>
  40ad4c:	mov	w24, w0
  40ad50:	ubfiz	x1, x24, #3, #32
  40ad54:	add	x1, x1, #0x8
  40ad58:	ldr	x0, [x20, #128]
  40ad5c:	cbz	x0, 40adf8 <nftw@plt+0x8278>
  40ad60:	ldr	w28, [x0, #4]
  40ad64:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40ad68:	str	x0, [x20, #128]
  40ad6c:	ldr	w1, [x0]
  40ad70:	bfxil	w1, w24, #0, #31
  40ad74:	str	w1, [x0]
  40ad78:	ubfx	x1, x1, #24, #7
  40ad7c:	strb	w1, [x0, #3]
  40ad80:	str	w28, [x0, #4]
  40ad84:	cbz	w27, 40adbc <nftw@plt+0x823c>
  40ad88:	ldr	x3, [x20, #128]
  40ad8c:	cbz	w26, 40adb4 <nftw@plt+0x8234>
  40ad90:	sub	w2, w26, #0x1
  40ad94:	add	x2, x2, #0x2
  40ad98:	lsl	x2, x2, #3
  40ad9c:	mov	x0, #0x8                   	// #8
  40ada0:	ldr	x1, [x23, x0]
  40ada4:	str	x1, [x3, x0]
  40ada8:	add	x0, x0, #0x8
  40adac:	cmp	x0, x2
  40adb0:	b.ne	40ada0 <nftw@plt+0x8220>  // b.any
  40adb4:	ldr	x0, [x20, #128]
  40adb8:	str	w26, [x0, #4]
  40adbc:	ldr	x1, [x20, #128]
  40adc0:	ldr	w0, [x1, #4]
  40adc4:	add	w2, w0, #0x1
  40adc8:	str	w2, [x1, #4]
  40adcc:	add	x0, x1, w0, uxtw #3
  40add0:	str	x22, [x0, #8]
  40add4:	b	40ac94 <nftw@plt+0x8114>
  40add8:	cmp	w1, #0x4
  40addc:	mov	w2, #0x4                   	// #4
  40ade0:	csel	w24, w1, w2, cs  // cs = hs, nlast
  40ade4:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40ade8:	add	x1, x1, #0x1
  40adec:	lsl	x1, x1, #3
  40adf0:	mov	w28, #0x0                   	// #0
  40adf4:	b	40ad64 <nftw@plt+0x81e4>
  40adf8:	mov	w28, #0x0                   	// #0
  40adfc:	b	40ad64 <nftw@plt+0x81e4>
  40ae00:	adrp	x3, 40a000 <nftw@plt+0x7480>
  40ae04:	add	x3, x3, #0xc8
  40ae08:	mov	x2, #0x8                   	// #8
  40ae0c:	mov	w1, w1
  40ae10:	add	x0, x0, x2
  40ae14:	bl	4174d4 <nftw@plt+0x14954>
  40ae18:	b	40ab7c <nftw@plt+0x7ffc>
  40ae1c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ae20:	add	x2, x2, #0xea8
  40ae24:	mov	w1, #0x49b                 	// #1179
  40ae28:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ae2c:	add	x0, x0, #0xe58
  40ae30:	bl	408d8c <nftw@plt+0x620c>
  40ae34:	ubfiz	x1, x21, #3, #32
  40ae38:	add	x1, x1, #0x8
  40ae3c:	mov	x0, #0x0                   	// #0
  40ae40:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40ae44:	mov	x19, x0
  40ae48:	ldr	w0, [x0]
  40ae4c:	bfxil	w0, w21, #0, #31
  40ae50:	str	w0, [x19]
  40ae54:	ubfx	x0, x0, #24, #7
  40ae58:	strb	w0, [x19, #3]
  40ae5c:	str	wzr, [x19, #4]
  40ae60:	ldr	w22, [x20, #32]
  40ae64:	tst	x21, #0x7fffffff
  40ae68:	b.ne	40aebc <nftw@plt+0x833c>  // b.any
  40ae6c:	sxtb	w0, w0
  40ae70:	tbnz	w0, #31, 40aba4 <nftw@plt+0x8024>
  40ae74:	ldr	w1, [x19, #4]
  40ae78:	ldr	w0, [x19]
  40ae7c:	add	w1, w1, #0x1
  40ae80:	and	w0, w0, #0x7fffffff
  40ae84:	bl	4120a8 <nftw@plt+0xf528>
  40ae88:	mov	w21, w0
  40ae8c:	ldr	w23, [x19, #4]
  40ae90:	ubfiz	x1, x21, #3, #32
  40ae94:	add	x1, x1, #0x8
  40ae98:	mov	x0, x19
  40ae9c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40aea0:	mov	x19, x0
  40aea4:	ldr	w1, [x0]
  40aea8:	bfxil	w1, w21, #0, #31
  40aeac:	str	w1, [x0]
  40aeb0:	ubfx	x1, x1, #24, #7
  40aeb4:	strb	w1, [x0, #3]
  40aeb8:	str	w23, [x0, #4]
  40aebc:	ldr	w0, [x19, #4]
  40aec0:	add	w1, w0, #0x1
  40aec4:	str	w1, [x19, #4]
  40aec8:	ubfiz	x0, x0, #3, #32
  40aecc:	add	x0, x0, #0x8
  40aed0:	add	x1, x19, x0
  40aed4:	str	w22, [x19, x0]
  40aed8:	str	w22, [x1, #4]
  40aedc:	mov	w21, #0x0                   	// #0
  40aee0:	mov	w27, #0x4                   	// #4
  40aee4:	b	40b740 <nftw@plt+0x8bc0>
  40aee8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40aeec:	add	x2, x2, #0xea8
  40aef0:	mov	w1, #0x4a4                 	// #1188
  40aef4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40aef8:	add	x0, x0, #0xe58
  40aefc:	bl	408d8c <nftw@plt+0x620c>
  40af00:	mov	w21, #0x0                   	// #0
  40af04:	mov	w26, #0x4                   	// #4
  40af08:	mov	w27, #0x1                   	// #1
  40af0c:	b	40b808 <nftw@plt+0x8c88>
  40af10:	mov	w21, #0x0                   	// #0
  40af14:	b	40af04 <nftw@plt+0x8384>
  40af18:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40af1c:	add	x2, x2, #0xea8
  40af20:	mov	w1, #0x4ad                 	// #1197
  40af24:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40af28:	add	x0, x0, #0xe58
  40af2c:	bl	408d8c <nftw@plt+0x620c>
  40af30:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40af34:	add	x2, x2, #0xec0
  40af38:	mov	w1, #0xa5                  	// #165
  40af3c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40af40:	add	x0, x0, #0xe58
  40af44:	bl	408d8c <nftw@plt+0x620c>
  40af48:	cbz	x19, 40afb0 <nftw@plt+0x8430>
  40af4c:	ldr	w1, [x19, #4]
  40af50:	cmp	w1, #0x1
  40af54:	b.hi	40af94 <nftw@plt+0x8414>  // b.pmore
  40af58:	ldr	w0, [x19, #4]
  40af5c:	cbz	w0, 40afb0 <nftw@plt+0x8430>
  40af60:	ldr	x21, [x20, #136]
  40af64:	cbz	x21, 40afdc <nftw@plt+0x845c>
  40af68:	ldr	w0, [x21]
  40af6c:	ubfx	x0, x0, #0, #31
  40af70:	ldr	w1, [x21, #4]
  40af74:	cmp	w0, w1
  40af78:	b.ne	40b074 <nftw@plt+0x84f4>  // b.any
  40af7c:	ldrsb	w0, [x21, #3]
  40af80:	tbnz	w0, #31, 40afc8 <nftw@plt+0x8448>
  40af84:	mov	w24, #0x0                   	// #0
  40af88:	mov	w22, #0x0                   	// #0
  40af8c:	mov	w1, #0x1                   	// #1
  40af90:	b	40afe8 <nftw@plt+0x8468>
  40af94:	adrp	x3, 40a000 <nftw@plt+0x7480>
  40af98:	add	x3, x3, #0x80
  40af9c:	mov	x2, #0x8                   	// #8
  40afa0:	mov	w1, w1
  40afa4:	add	x0, x19, x2
  40afa8:	bl	4174d4 <nftw@plt+0x14954>
  40afac:	b	40af58 <nftw@plt+0x83d8>
  40afb0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40afb4:	add	x2, x2, #0xea8
  40afb8:	mov	w1, #0x4b6                 	// #1206
  40afbc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40afc0:	add	x0, x0, #0xe58
  40afc4:	bl	408d8c <nftw@plt+0x620c>
  40afc8:	str	xzr, [x20, #136]
  40afcc:	ldr	w22, [x21, #4]
  40afd0:	add	w1, w22, #0x1
  40afd4:	mov	w24, #0x1                   	// #1
  40afd8:	b	40afe8 <nftw@plt+0x8468>
  40afdc:	mov	w24, #0x0                   	// #0
  40afe0:	mov	w22, #0x0                   	// #0
  40afe4:	mov	w1, #0x1                   	// #1
  40afe8:	ldr	x0, [x20, #136]
  40afec:	cbz	x0, 40b0a8 <nftw@plt+0x8528>
  40aff0:	ldr	w2, [x0, #4]
  40aff4:	ldr	w0, [x0]
  40aff8:	add	w1, w1, w2
  40affc:	and	w0, w0, #0x7fffffff
  40b000:	bl	4120a8 <nftw@plt+0xf528>
  40b004:	mov	w23, w0
  40b008:	ubfiz	x1, x23, #3, #32
  40b00c:	add	x1, x1, #0x8
  40b010:	ldr	x0, [x20, #136]
  40b014:	cbz	x0, 40b0c8 <nftw@plt+0x8548>
  40b018:	ldr	w26, [x0, #4]
  40b01c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40b020:	str	x0, [x20, #136]
  40b024:	ldr	w1, [x0]
  40b028:	bfxil	w1, w23, #0, #31
  40b02c:	str	w1, [x0]
  40b030:	ubfx	x1, x1, #24, #7
  40b034:	strb	w1, [x0, #3]
  40b038:	str	w26, [x0, #4]
  40b03c:	cbz	w24, 40b074 <nftw@plt+0x84f4>
  40b040:	ldr	x3, [x20, #136]
  40b044:	cbz	w22, 40b06c <nftw@plt+0x84ec>
  40b048:	sub	w2, w22, #0x1
  40b04c:	add	x2, x2, #0x2
  40b050:	lsl	x2, x2, #3
  40b054:	mov	x0, #0x8                   	// #8
  40b058:	ldr	x1, [x21, x0]
  40b05c:	str	x1, [x3, x0]
  40b060:	add	x0, x0, #0x8
  40b064:	cmp	x2, x0
  40b068:	b.ne	40b058 <nftw@plt+0x84d8>  // b.any
  40b06c:	ldr	x0, [x20, #136]
  40b070:	str	w22, [x0, #4]
  40b074:	ldr	x1, [x20, #136]
  40b078:	ldr	w0, [x1, #4]
  40b07c:	add	w2, w0, #0x1
  40b080:	str	w2, [x1, #4]
  40b084:	add	x0, x1, w0, uxtw #3
  40b088:	ldr	x1, [x19, #8]
  40b08c:	str	x1, [x0, #8]
  40b090:	ldr	w0, [x19, #4]
  40b094:	cmp	w0, #0x1
  40b098:	b.ls	40b264 <nftw@plt+0x86e4>  // b.plast
  40b09c:	mov	w22, #0x1                   	// #1
  40b0a0:	mov	w23, #0x0                   	// #0
  40b0a4:	b	40b1cc <nftw@plt+0x864c>
  40b0a8:	mov	w2, #0x4                   	// #4
  40b0ac:	cmp	w1, w2
  40b0b0:	csel	w23, w1, w2, cs  // cs = hs, nlast
  40b0b4:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40b0b8:	add	x1, x1, #0x1
  40b0bc:	lsl	x1, x1, #3
  40b0c0:	mov	w26, #0x0                   	// #0
  40b0c4:	b	40b01c <nftw@plt+0x849c>
  40b0c8:	mov	w26, #0x0                   	// #0
  40b0cc:	b	40b01c <nftw@plt+0x849c>
  40b0d0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b0d4:	add	x2, x2, #0xea8
  40b0d8:	mov	w1, #0x4bc                 	// #1212
  40b0dc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b0e0:	add	x0, x0, #0xe58
  40b0e4:	bl	408d8c <nftw@plt+0x620c>
  40b0e8:	ldr	w0, [x21]
  40b0ec:	ubfx	x0, x0, #0, #31
  40b0f0:	ldr	w1, [x21, #4]
  40b0f4:	cmp	w0, w1
  40b0f8:	b.ne	40b19c <nftw@plt+0x861c>  // b.any
  40b0fc:	ldrsb	w0, [x21, #3]
  40b100:	tbnz	w0, #31, 40b228 <nftw@plt+0x86a8>
  40b104:	mov	w28, w23
  40b108:	mov	w26, w23
  40b10c:	mov	w1, #0x1                   	// #1
  40b110:	ldr	x0, [x20, #136]
  40b114:	cbz	x0, 40b23c <nftw@plt+0x86bc>
  40b118:	ldr	w2, [x0, #4]
  40b11c:	ldr	w0, [x0]
  40b120:	add	w1, w1, w2
  40b124:	and	w0, w0, #0x7fffffff
  40b128:	bl	4120a8 <nftw@plt+0xf528>
  40b12c:	mov	w24, w0
  40b130:	ubfiz	x1, x24, #3, #32
  40b134:	add	x1, x1, #0x8
  40b138:	ldr	x0, [x20, #136]
  40b13c:	cbz	x0, 40b25c <nftw@plt+0x86dc>
  40b140:	ldr	w27, [x0, #4]
  40b144:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40b148:	str	x0, [x20, #136]
  40b14c:	ldr	w1, [x0]
  40b150:	bfxil	w1, w24, #0, #31
  40b154:	str	w1, [x0]
  40b158:	ubfx	x1, x1, #24, #7
  40b15c:	strb	w1, [x0, #3]
  40b160:	str	w27, [x0, #4]
  40b164:	cbz	w28, 40b19c <nftw@plt+0x861c>
  40b168:	ldr	x3, [x20, #136]
  40b16c:	cbz	w26, 40b194 <nftw@plt+0x8614>
  40b170:	sub	w2, w26, #0x1
  40b174:	add	x2, x2, #0x2
  40b178:	lsl	x2, x2, #3
  40b17c:	mov	x0, #0x8                   	// #8
  40b180:	ldr	x1, [x21, x0]
  40b184:	str	x1, [x3, x0]
  40b188:	add	x0, x0, #0x8
  40b18c:	cmp	x0, x2
  40b190:	b.ne	40b180 <nftw@plt+0x8600>  // b.any
  40b194:	ldr	x0, [x20, #136]
  40b198:	str	w26, [x0, #4]
  40b19c:	ldr	x1, [x20, #136]
  40b1a0:	ldr	w0, [x1, #4]
  40b1a4:	add	w2, w0, #0x1
  40b1a8:	str	w2, [x1, #4]
  40b1ac:	add	x0, x1, w0, uxtw #3
  40b1b0:	add	x1, x19, w22, uxtw #3
  40b1b4:	ldr	x1, [x1, #8]
  40b1b8:	str	x1, [x0, #8]
  40b1bc:	add	w22, w22, #0x1
  40b1c0:	ldr	w0, [x19, #4]
  40b1c4:	cmp	w0, w22
  40b1c8:	b.ls	40b264 <nftw@plt+0x86e4>  // b.plast
  40b1cc:	ldr	x21, [x20, #136]
  40b1d0:	mov	w0, w23
  40b1d4:	cbz	x21, 40b1dc <nftw@plt+0x865c>
  40b1d8:	ldr	w0, [x21, #4]
  40b1dc:	add	x4, x19, w22, uxtw #3
  40b1e0:	ldr	w2, [x4, #8]
  40b1e4:	sub	w0, w0, #0x1
  40b1e8:	add	x0, x21, x0, lsl #3
  40b1ec:	ldr	w1, [x0, #8]
  40b1f0:	cmp	w2, w1
  40b1f4:	b.cc	40b0d0 <nftw@plt+0x8550>  // b.lo, b.ul, b.last
  40b1f8:	ldr	w3, [x0, #12]
  40b1fc:	mov	w1, w3
  40b200:	add	x1, x1, #0x1
  40b204:	ldrb	w5, [x20, #114]
  40b208:	add	x1, x1, x5
  40b20c:	cmp	x1, w2, uxtw
  40b210:	b.lt	40b0e8 <nftw@plt+0x8568>  // b.tstop
  40b214:	ldr	w1, [x4, #12]
  40b218:	cmp	w3, w1
  40b21c:	b.cs	40b1bc <nftw@plt+0x863c>  // b.hs, b.nlast
  40b220:	str	w1, [x0, #12]
  40b224:	b	40b1bc <nftw@plt+0x863c>
  40b228:	str	xzr, [x20, #136]
  40b22c:	ldr	w26, [x21, #4]
  40b230:	add	w1, w26, #0x1
  40b234:	mov	w28, #0x1                   	// #1
  40b238:	b	40b110 <nftw@plt+0x8590>
  40b23c:	cmp	w1, #0x4
  40b240:	mov	w2, #0x4                   	// #4
  40b244:	csel	w24, w1, w2, cs  // cs = hs, nlast
  40b248:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40b24c:	add	x1, x1, #0x1
  40b250:	lsl	x1, x1, #3
  40b254:	mov	w27, w23
  40b258:	b	40b144 <nftw@plt+0x85c4>
  40b25c:	mov	w27, w23
  40b260:	b	40b144 <nftw@plt+0x85c4>
  40b264:	ldr	x5, [x20, #136]
  40b268:	cbz	x5, 40b3c8 <nftw@plt+0x8848>
  40b26c:	ldr	w1, [x5, #4]
  40b270:	cbz	w1, 40b3c8 <nftw@plt+0x8848>
  40b274:	cmp	w1, #0x1
  40b278:	b.ls	40b2cc <nftw@plt+0x874c>  // b.plast
  40b27c:	add	x0, x5, #0x8
  40b280:	sub	w1, w1, #0x2
  40b284:	add	x5, x5, #0x10
  40b288:	add	x5, x5, x1, lsl #3
  40b28c:	ldr	w3, [x0]
  40b290:	ldr	w1, [x0, #4]
  40b294:	cmp	w3, w1
  40b298:	b.hi	40b3e0 <nftw@plt+0x8860>  // b.pmore
  40b29c:	ldr	w2, [x0, #8]
  40b2a0:	ldr	w4, [x0, #12]
  40b2a4:	cmp	w2, w4
  40b2a8:	b.hi	40b3f8 <nftw@plt+0x8878>  // b.pmore
  40b2ac:	cmp	w3, w2
  40b2b0:	b.cs	40b410 <nftw@plt+0x8890>  // b.hs, b.nlast
  40b2b4:	add	w1, w1, #0x1
  40b2b8:	cmp	w2, w1
  40b2bc:	b.ls	40b428 <nftw@plt+0x88a8>  // b.plast
  40b2c0:	add	x0, x0, #0x8
  40b2c4:	cmp	x0, x5
  40b2c8:	b.ne	40b28c <nftw@plt+0x870c>  // b.any
  40b2cc:	ldrsb	w0, [x19, #3]
  40b2d0:	tbnz	w0, #31, 40b440 <nftw@plt+0x88c0>
  40b2d4:	mov	x0, x19
  40b2d8:	bl	402910 <free@plt>
  40b2dc:	ldr	x1, [x20, #136]
  40b2e0:	cbz	x1, 40b448 <nftw@plt+0x88c8>
  40b2e4:	ldr	w0, [x1, #4]
  40b2e8:	cbz	w0, 40b448 <nftw@plt+0x88c8>
  40b2ec:	sub	w0, w0, #0x1
  40b2f0:	add	x0, x1, x0, lsl #3
  40b2f4:	ldr	w0, [x0, #12]
  40b2f8:	cmp	w0, #0x0
  40b2fc:	csel	w0, w0, wzr, ge  // ge = tcont
  40b300:	bl	409294 <nftw@plt+0x6714>
  40b304:	str	w0, [x20, #144]
  40b308:	ldr	x1, [x20, #136]
  40b30c:	cbz	x1, 40b32c <nftw@plt+0x87ac>
  40b310:	ldr	w1, [x1, #4]
  40b314:	cmp	w1, #0x1
  40b318:	b.ls	40b32c <nftw@plt+0x87ac>  // b.plast
  40b31c:	cmp	w0, #0x3
  40b320:	mov	w1, #0x3                   	// #3
  40b324:	csel	w0, w0, w1, ge  // ge = tcont
  40b328:	str	w0, [x20, #144]
  40b32c:	ldr	w1, [x25, #224]
  40b330:	ldr	w0, [x20, #144]
  40b334:	sub	w2, w1, #0x1
  40b338:	cmp	w1, w0
  40b33c:	csel	w0, w2, w0, gt
  40b340:	str	w0, [x20, #144]
  40b344:	ldr	x0, [x20]
  40b348:	ldrsw	x19, [x0, #112]
  40b34c:	ldr	w1, [x20, #32]
  40b350:	ldr	x0, [x20, #24]
  40b354:	bl	4149d0 <nftw@plt+0x11e50>
  40b358:	cbz	x0, 40b3a4 <nftw@plt+0x8824>
  40b35c:	ldrsw	x0, [x20, #36]
  40b360:	cmp	x1, x0
  40b364:	b.cc	40b3a4 <nftw@plt+0x8824>  // b.lo, b.ul, b.last
  40b368:	ldrb	w2, [x20, #114]
  40b36c:	cbz	w2, 40b37c <nftw@plt+0x87fc>
  40b370:	ldr	w2, [x20, #144]
  40b374:	add	w2, w2, #0x2
  40b378:	add	x0, x0, w2, sxtw
  40b37c:	sub	x2, x1, x0
  40b380:	cmp	x2, #0xa
  40b384:	mov	x3, #0xa                   	// #10
  40b388:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  40b38c:	sub	x2, x19, x2
  40b390:	cmp	x0, x2
  40b394:	ccmp	x1, x19, #0x0, hi  // hi = pmore
  40b398:	b.cs	40b460 <nftw@plt+0x88e0>  // b.hs, b.nlast
  40b39c:	ldr	w0, [x20, #148]
  40b3a0:	tbnz	w0, #31, 40b46c <nftw@plt+0x88ec>
  40b3a4:	ldrb	w0, [x25, #228]
  40b3a8:	cbnz	w0, 40b484 <nftw@plt+0x8904>
  40b3ac:	ldp	x19, x20, [sp, #16]
  40b3b0:	ldp	x21, x22, [sp, #32]
  40b3b4:	ldp	x23, x24, [sp, #48]
  40b3b8:	ldp	x25, x26, [sp, #64]
  40b3bc:	ldp	x27, x28, [sp, #80]
  40b3c0:	ldp	x29, x30, [sp], #144
  40b3c4:	ret
  40b3c8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b3cc:	add	x2, x2, #0xea8
  40b3d0:	mov	w1, #0x4cd                 	// #1229
  40b3d4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b3d8:	add	x0, x0, #0xe58
  40b3dc:	bl	408d8c <nftw@plt+0x620c>
  40b3e0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b3e4:	add	x2, x2, #0xea8
  40b3e8:	mov	w1, #0x4d3                 	// #1235
  40b3ec:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b3f0:	add	x0, x0, #0xe58
  40b3f4:	bl	408d8c <nftw@plt+0x620c>
  40b3f8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b3fc:	add	x2, x2, #0xea8
  40b400:	mov	w1, #0x4d4                 	// #1236
  40b404:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b408:	add	x0, x0, #0xe58
  40b40c:	bl	408d8c <nftw@plt+0x620c>
  40b410:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b414:	add	x2, x2, #0xea8
  40b418:	mov	w1, #0x4d6                 	// #1238
  40b41c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b420:	add	x0, x0, #0xe58
  40b424:	bl	408d8c <nftw@plt+0x620c>
  40b428:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b42c:	add	x2, x2, #0xea8
  40b430:	mov	w1, #0x4d8                 	// #1240
  40b434:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b438:	add	x0, x0, #0xe58
  40b43c:	bl	408d8c <nftw@plt+0x620c>
  40b440:	str	wzr, [x19, #4]
  40b444:	b	40b2dc <nftw@plt+0x875c>
  40b448:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b44c:	add	x2, x2, #0xed0
  40b450:	mov	w1, #0x36a                 	// #874
  40b454:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b458:	add	x0, x0, #0xe58
  40b45c:	bl	408d8c <nftw@plt+0x620c>
  40b460:	sub	w0, w0, w2
  40b464:	str	w0, [x20, #148]
  40b468:	b	40b39c <nftw@plt+0x881c>
  40b46c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b470:	add	x2, x2, #0xed0
  40b474:	mov	w1, #0x386                 	// #902
  40b478:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40b47c:	add	x0, x0, #0xe58
  40b480:	bl	408d8c <nftw@plt+0x620c>
  40b484:	ldr	w21, [x20, #148]
  40b488:	add	w21, w21, w19
  40b48c:	cmp	w21, #0x63
  40b490:	b.gt	40b4d0 <nftw@plt+0x8950>
  40b494:	mov	w1, #0x20                  	// #32
  40b498:	mov	x0, x20
  40b49c:	bl	40a380 <nftw@plt+0x7800>
  40b4a0:	mov	w1, #0x20                  	// #32
  40b4a4:	ldr	x0, [x20, #8]
  40b4a8:	bl	40f400 <nftw@plt+0xc880>
  40b4ac:	ldr	w19, [x20, #148]
  40b4b0:	add	w19, w19, #0x1
  40b4b4:	cmp	w21, w19
  40b4b8:	b.lt	40b5e0 <nftw@plt+0x8a60>  // b.tstop
  40b4bc:	add	w23, w21, #0x1
  40b4c0:	mov	w22, #0x6667                	// #26215
  40b4c4:	movk	w22, #0x6666, lsl #16
  40b4c8:	mov	w24, #0x20                  	// #32
  40b4cc:	b	40b5b8 <nftw@plt+0x8a38>
  40b4d0:	mov	w1, #0x20                  	// #32
  40b4d4:	mov	x0, x20
  40b4d8:	bl	40a380 <nftw@plt+0x7800>
  40b4dc:	mov	w1, #0x20                  	// #32
  40b4e0:	ldr	x0, [x20, #8]
  40b4e4:	bl	40f400 <nftw@plt+0xc880>
  40b4e8:	ldr	w19, [x20, #148]
  40b4ec:	add	w19, w19, #0x1
  40b4f0:	cmp	w21, w19
  40b4f4:	b.lt	40b574 <nftw@plt+0x89f4>  // b.tstop
  40b4f8:	add	w23, w21, #0x1
  40b4fc:	mov	w22, #0x6667                	// #26215
  40b500:	movk	w22, #0x6666, lsl #16
  40b504:	mov	w25, #0x20                  	// #32
  40b508:	mov	w24, #0x851f                	// #34079
  40b50c:	movk	w24, #0x51eb, lsl #16
  40b510:	b	40b52c <nftw@plt+0x89ac>
  40b514:	mov	w1, w25
  40b518:	ldr	x0, [x20, #8]
  40b51c:	bl	40f400 <nftw@plt+0xc880>
  40b520:	add	w19, w19, #0x1
  40b524:	cmp	w23, w19
  40b528:	b.eq	40b574 <nftw@plt+0x89f4>  // b.none
  40b52c:	smull	x0, w19, w22
  40b530:	asr	x0, x0, #34
  40b534:	sub	w0, w0, w19, asr #31
  40b538:	add	w0, w0, w0, lsl #2
  40b53c:	cmp	w19, w0, lsl #1
  40b540:	b.ne	40b514 <nftw@plt+0x8994>  // b.any
  40b544:	smull	x1, w19, w24
  40b548:	asr	x1, x1, #37
  40b54c:	sub	w1, w1, w19, asr #31
  40b550:	smull	x0, w1, w22
  40b554:	asr	x0, x0, #34
  40b558:	sub	w0, w0, w1, asr #31
  40b55c:	add	w0, w0, w0, lsl #2
  40b560:	sub	w1, w1, w0, lsl #1
  40b564:	add	w1, w1, #0x30
  40b568:	ldr	x0, [x20, #8]
  40b56c:	bl	40f400 <nftw@plt+0xc880>
  40b570:	b	40b520 <nftw@plt+0x89a0>
  40b574:	ldr	x0, [x20, #8]
  40b578:	bl	40f39c <nftw@plt+0xc81c>
  40b57c:	b	40b494 <nftw@plt+0x8914>
  40b580:	smull	x1, w19, w22
  40b584:	asr	x1, x1, #34
  40b588:	sub	w0, w1, w19, asr #31
  40b58c:	smull	x1, w0, w22
  40b590:	asr	x1, x1, #34
  40b594:	sub	w1, w1, w0, asr #31
  40b598:	add	w1, w1, w1, lsl #2
  40b59c:	sub	w1, w0, w1, lsl #1
  40b5a0:	add	w1, w1, #0x30
  40b5a4:	ldr	x0, [x20, #8]
  40b5a8:	bl	40f400 <nftw@plt+0xc880>
  40b5ac:	add	w19, w19, #0x1
  40b5b0:	cmp	w19, w23
  40b5b4:	b.eq	40b5e0 <nftw@plt+0x8a60>  // b.none
  40b5b8:	smull	x0, w19, w22
  40b5bc:	asr	x0, x0, #34
  40b5c0:	sub	w0, w0, w19, asr #31
  40b5c4:	add	w0, w0, w0, lsl #2
  40b5c8:	cmp	w19, w0, lsl #1
  40b5cc:	b.eq	40b580 <nftw@plt+0x8a00>  // b.none
  40b5d0:	mov	w1, w24
  40b5d4:	ldr	x0, [x20, #8]
  40b5d8:	bl	40f400 <nftw@plt+0xc880>
  40b5dc:	b	40b5ac <nftw@plt+0x8a2c>
  40b5e0:	ldr	x0, [x20, #8]
  40b5e4:	bl	40f39c <nftw@plt+0xc81c>
  40b5e8:	mov	w1, #0x20                  	// #32
  40b5ec:	mov	x0, x20
  40b5f0:	bl	40a380 <nftw@plt+0x7800>
  40b5f4:	mov	w1, #0x20                  	// #32
  40b5f8:	ldr	x0, [x20, #8]
  40b5fc:	bl	40f400 <nftw@plt+0xc880>
  40b600:	ldr	w19, [x20, #148]
  40b604:	add	w19, w19, #0x1
  40b608:	cmp	w21, w19
  40b60c:	b.lt	40b648 <nftw@plt+0x8ac8>  // b.tstop
  40b610:	add	w21, w21, #0x1
  40b614:	mov	w22, #0x6667                	// #26215
  40b618:	movk	w22, #0x6666, lsl #16
  40b61c:	smull	x1, w19, w22
  40b620:	asr	x1, x1, #34
  40b624:	sub	w1, w1, w19, asr #31
  40b628:	add	w1, w1, w1, lsl #2
  40b62c:	sub	w1, w19, w1, lsl #1
  40b630:	add	w1, w1, #0x30
  40b634:	ldr	x0, [x20, #8]
  40b638:	bl	40f400 <nftw@plt+0xc880>
  40b63c:	add	w19, w19, #0x1
  40b640:	cmp	w21, w19
  40b644:	b.ne	40b61c <nftw@plt+0x8a9c>  // b.any
  40b648:	ldr	x0, [x20, #8]
  40b64c:	bl	40f39c <nftw@plt+0xc81c>
  40b650:	b	40b3ac <nftw@plt+0x882c>
  40b654:	mov	w26, #0x0                   	// #0
  40b658:	mov	w24, #0x0                   	// #0
  40b65c:	mov	w1, #0x1                   	// #1
  40b660:	cmp	w1, #0x4
  40b664:	csel	w28, w1, w27, cs  // cs = hs, nlast
  40b668:	csel	w1, w1, w27, cs  // cs = hs, nlast
  40b66c:	add	x1, x1, #0x1
  40b670:	lsl	x1, x1, #3
  40b674:	mov	x0, #0x0                   	// #0
  40b678:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40b67c:	ldr	w1, [x0]
  40b680:	bfxil	w1, w28, #0, #31
  40b684:	str	w1, [x0]
  40b688:	ubfx	x1, x1, #24, #7
  40b68c:	strb	w1, [x0, #3]
  40b690:	str	wzr, [x0, #4]
  40b694:	cbz	w26, 40b6cc <nftw@plt+0x8b4c>
  40b698:	cbz	w24, 40b6c0 <nftw@plt+0x8b40>
  40b69c:	sub	w2, w24, #0x1
  40b6a0:	add	x2, x2, #0x2
  40b6a4:	lsl	x2, x2, #3
  40b6a8:	mov	x1, #0x8                   	// #8
  40b6ac:	ldr	x3, [x19, x1]
  40b6b0:	str	x3, [x0, x1]
  40b6b4:	add	x1, x1, #0x8
  40b6b8:	cmp	x1, x2
  40b6bc:	b.ne	40b6ac <nftw@plt+0x8b2c>  // b.any
  40b6c0:	str	w24, [x0, #4]
  40b6c4:	mov	x19, x0
  40b6c8:	b	40b71c <nftw@plt+0x8b9c>
  40b6cc:	mov	x19, x0
  40b6d0:	b	40b71c <nftw@plt+0x8b9c>
  40b6d4:	ldr	w1, [x19, #4]
  40b6d8:	ldr	w0, [x19]
  40b6dc:	add	w1, w1, #0x1
  40b6e0:	and	w0, w0, #0x7fffffff
  40b6e4:	bl	4120a8 <nftw@plt+0xf528>
  40b6e8:	mov	w24, w0
  40b6ec:	ldr	w26, [x19, #4]
  40b6f0:	ubfiz	x1, x24, #3, #32
  40b6f4:	add	x1, x1, #0x8
  40b6f8:	mov	x0, x19
  40b6fc:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40b700:	mov	x19, x0
  40b704:	ldr	w0, [x0]
  40b708:	bfxil	w0, w24, #0, #31
  40b70c:	str	w0, [x19]
  40b710:	ubfx	x0, x0, #24, #7
  40b714:	strb	w0, [x19, #3]
  40b718:	str	w26, [x19, #4]
  40b71c:	ldr	w0, [x19, #4]
  40b720:	add	w1, w0, #0x1
  40b724:	str	w1, [x19, #4]
  40b728:	ubfiz	x0, x0, #3, #32
  40b72c:	add	x0, x0, #0x8
  40b730:	add	x1, x19, x0
  40b734:	str	w22, [x19, x0]
  40b738:	str	w23, [x1, #4]
  40b73c:	add	w21, w21, #0x1
  40b740:	ldr	x1, [x20, #120]
  40b744:	cbz	x1, 40af00 <nftw@plt+0x8380>
  40b748:	ldr	w0, [x1, #4]
  40b74c:	cmp	w0, w21
  40b750:	b.ls	40af10 <nftw@plt+0x8390>  // b.plast
  40b754:	ubfiz	x0, x21, #2, #32
  40b758:	add	x0, x0, w21, uxtw
  40b75c:	add	x0, x1, x0, lsl #3
  40b760:	ldr	w22, [x0, #8]
  40b764:	ldr	w23, [x0, #16]
  40b768:	cmp	w22, w23
  40b76c:	b.hi	40aee8 <nftw@plt+0x8368>  // b.pmore
  40b770:	cbz	x19, 40b654 <nftw@plt+0x8ad4>
  40b774:	ldr	w24, [x19, #4]
  40b778:	ldr	w0, [x19]
  40b77c:	ubfx	x0, x0, #0, #31
  40b780:	cmp	w0, w24
  40b784:	b.ne	40b71c <nftw@plt+0x8b9c>  // b.any
  40b788:	ldrsb	w0, [x19, #3]
  40b78c:	add	w1, w24, #0x1
  40b790:	mov	w26, #0x1                   	// #1
  40b794:	tbz	w0, #31, 40b6d4 <nftw@plt+0x8b54>
  40b798:	b	40b660 <nftw@plt+0x8ae0>
  40b79c:	ldr	w1, [x19, #4]
  40b7a0:	ldr	w0, [x19]
  40b7a4:	add	w1, w1, #0x1
  40b7a8:	and	w0, w0, #0x7fffffff
  40b7ac:	bl	4120a8 <nftw@plt+0xf528>
  40b7b0:	mov	w23, w0
  40b7b4:	ldr	w28, [x19, #4]
  40b7b8:	ubfiz	x1, x23, #3, #32
  40b7bc:	add	x1, x1, #0x8
  40b7c0:	mov	x0, x19
  40b7c4:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40b7c8:	mov	x19, x0
  40b7cc:	ldr	w0, [x0]
  40b7d0:	bfxil	w0, w23, #0, #31
  40b7d4:	str	w0, [x19]
  40b7d8:	ubfx	x0, x0, #24, #7
  40b7dc:	strb	w0, [x19, #3]
  40b7e0:	str	w28, [x19, #4]
  40b7e4:	ldr	w0, [x19, #4]
  40b7e8:	add	w1, w0, #0x1
  40b7ec:	str	w1, [x19, #4]
  40b7f0:	ubfiz	x0, x0, #3, #32
  40b7f4:	add	x0, x0, #0x8
  40b7f8:	add	x1, x19, x0
  40b7fc:	str	w24, [x19, x0]
  40b800:	str	w22, [x1, #4]
  40b804:	add	w21, w21, #0x1
  40b808:	ldr	x0, [x20, #128]
  40b80c:	cbz	x0, 40af48 <nftw@plt+0x83c8>
  40b810:	ldr	w1, [x0, #4]
  40b814:	cmp	w1, w21
  40b818:	b.ls	40af48 <nftw@plt+0x83c8>  // b.plast
  40b81c:	add	x0, x0, w21, uxtw #3
  40b820:	ldr	x22, [x0, #8]
  40b824:	cbz	x22, 40af18 <nftw@plt+0x8398>
  40b828:	add	x8, sp, #0x70
  40b82c:	ldr	w0, [x22]
  40b830:	bl	414820 <nftw@plt+0x11ca0>
  40b834:	ldr	w23, [sp, #120]
  40b838:	mov	x0, x22
  40b83c:	bl	42d638 <nftw@plt+0x2aab8>
  40b840:	ands	w0, w0, #0xff
  40b844:	ccmp	w23, #0x1, #0x4, ne  // ne = any
  40b848:	cset	w0, gt
  40b84c:	sub	w23, w23, w0
  40b850:	mov	w24, w23
  40b854:	add	x8, sp, #0x70
  40b858:	ldr	w0, [x22, #4]
  40b85c:	bl	414820 <nftw@plt+0x11ca0>
  40b860:	ldr	w22, [sp, #120]
  40b864:	cmp	w23, w22
  40b868:	b.hi	40af30 <nftw@plt+0x83b0>  // b.pmore
  40b86c:	cbz	x19, 40b898 <nftw@plt+0x8d18>
  40b870:	ldr	w23, [x19, #4]
  40b874:	ldr	w0, [x19]
  40b878:	ubfx	x0, x0, #0, #31
  40b87c:	cmp	w0, w23
  40b880:	b.ne	40b7e4 <nftw@plt+0x8c64>  // b.any
  40b884:	ldrsb	w0, [x19, #3]
  40b888:	tbz	w0, #31, 40b79c <nftw@plt+0x8c1c>
  40b88c:	add	w1, w23, #0x1
  40b890:	str	w27, [sp, #108]
  40b894:	b	40b8a4 <nftw@plt+0x8d24>
  40b898:	str	wzr, [sp, #108]
  40b89c:	mov	w23, #0x0                   	// #0
  40b8a0:	mov	w1, w27
  40b8a4:	cmp	w1, #0x4
  40b8a8:	csel	w28, w1, w26, cs  // cs = hs, nlast
  40b8ac:	csel	w1, w1, w26, cs  // cs = hs, nlast
  40b8b0:	add	x1, x1, #0x1
  40b8b4:	lsl	x1, x1, #3
  40b8b8:	mov	x0, #0x0                   	// #0
  40b8bc:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40b8c0:	ldr	w1, [x0]
  40b8c4:	bfxil	w1, w28, #0, #31
  40b8c8:	str	w1, [x0]
  40b8cc:	ubfx	x1, x1, #24, #7
  40b8d0:	strb	w1, [x0, #3]
  40b8d4:	str	wzr, [x0, #4]
  40b8d8:	ldr	w1, [sp, #108]
  40b8dc:	cbz	w1, 40b914 <nftw@plt+0x8d94>
  40b8e0:	cbz	w23, 40b908 <nftw@plt+0x8d88>
  40b8e4:	sub	w2, w23, #0x1
  40b8e8:	add	x2, x2, #0x2
  40b8ec:	lsl	x2, x2, #3
  40b8f0:	mov	x1, #0x8                   	// #8
  40b8f4:	ldr	x3, [x19, x1]
  40b8f8:	str	x3, [x0, x1]
  40b8fc:	add	x1, x1, #0x8
  40b900:	cmp	x2, x1
  40b904:	b.ne	40b8f4 <nftw@plt+0x8d74>  // b.any
  40b908:	str	w23, [x0, #4]
  40b90c:	mov	x19, x0
  40b910:	b	40b7e4 <nftw@plt+0x8c64>
  40b914:	mov	x19, x0
  40b918:	b	40b7e4 <nftw@plt+0x8c64>
  40b91c:	mov	x1, #0x10                  	// #16
  40b920:	mov	x0, #0x0                   	// #0
  40b924:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40b928:	mov	x19, x0
  40b92c:	ldr	w0, [x0]
  40b930:	mov	w1, #0x1                   	// #1
  40b934:	bfxil	w0, w1, #0, #31
  40b938:	str	w0, [x19]
  40b93c:	ubfx	x0, x0, #24, #7
  40b940:	strb	w0, [x19, #3]
  40b944:	str	wzr, [x19, #4]
  40b948:	ldr	w22, [x20, #32]
  40b94c:	b	40aebc <nftw@plt+0x833c>
  40b950:	stp	x29, x30, [sp, #-48]!
  40b954:	mov	x29, sp
  40b958:	stp	x19, x20, [sp, #16]
  40b95c:	mov	x20, x0
  40b960:	ldr	w0, [x0, #12]
  40b964:	cmp	w0, w1
  40b968:	b.ne	40b978 <nftw@plt+0x8df8>  // b.any
  40b96c:	ldp	x19, x20, [sp, #16]
  40b970:	ldp	x29, x30, [sp], #48
  40b974:	ret
  40b978:	mov	w19, w1
  40b97c:	cmn	w0, #0x1
  40b980:	b.ne	40b9c0 <nftw@plt+0x8e40>  // b.any
  40b984:	str	w19, [x20, #12]
  40b988:	cbz	w19, 40ba0c <nftw@plt+0x8e8c>
  40b98c:	cmp	w19, #0x0
  40b990:	b.gt	40b9d4 <nftw@plt+0x8e54>
  40b994:	cmn	w19, #0x2
  40b998:	b.eq	40b9f8 <nftw@plt+0x8e78>  // b.none
  40b99c:	cmn	w19, #0x1
  40b9a0:	b.eq	40b96c <nftw@plt+0x8dec>  // b.none
  40b9a4:	cmn	w19, #0x3
  40b9a8:	b.ne	40ba64 <nftw@plt+0x8ee4>  // b.any
  40b9ac:	ldr	x0, [x20]
  40b9b0:	ldr	x1, [x20, #40]
  40b9b4:	ldr	x0, [x0]
  40b9b8:	bl	40f9f8 <nftw@plt+0xce78>
  40b9bc:	b	40b96c <nftw@plt+0x8dec>
  40b9c0:	ldr	x0, [x20]
  40b9c4:	ldr	x1, [x20, #48]
  40b9c8:	ldr	x0, [x0]
  40b9cc:	bl	40f9f8 <nftw@plt+0xce78>
  40b9d0:	b	40b984 <nftw@plt+0x8e04>
  40b9d4:	cmp	w19, #0x1
  40b9d8:	b.eq	40ba50 <nftw@plt+0x8ed0>  // b.none
  40b9dc:	cmp	w19, #0x2
  40b9e0:	b.ne	40ba64 <nftw@plt+0x8ee4>  // b.any
  40b9e4:	ldr	x0, [x20]
  40b9e8:	ldr	x1, [x20, #24]
  40b9ec:	ldr	x0, [x0]
  40b9f0:	bl	40f9f8 <nftw@plt+0xce78>
  40b9f4:	b	40b96c <nftw@plt+0x8dec>
  40b9f8:	ldr	x0, [x20]
  40b9fc:	ldr	x1, [x20, #32]
  40ba00:	ldr	x0, [x0]
  40ba04:	bl	40f9f8 <nftw@plt+0xce78>
  40ba08:	b	40b96c <nftw@plt+0x8dec>
  40ba0c:	stp	x21, x22, [sp, #32]
  40ba10:	ldr	x0, [x20]
  40ba14:	ldr	x21, [x0]
  40ba18:	ldrb	w22, [x21, #67]
  40ba1c:	ldr	w0, [x20, #8]
  40ba20:	bl	4073f8 <nftw@plt+0x4878>
  40ba24:	mov	x19, x0
  40ba28:	bl	4024f0 <strlen@plt>
  40ba2c:	mov	x2, x0
  40ba30:	mov	x1, x19
  40ba34:	mov	w0, w22
  40ba38:	bl	409f38 <nftw@plt+0x73b8>
  40ba3c:	mov	x1, x0
  40ba40:	mov	x0, x21
  40ba44:	bl	40f9f8 <nftw@plt+0xce78>
  40ba48:	ldp	x21, x22, [sp, #32]
  40ba4c:	b	40b96c <nftw@plt+0x8dec>
  40ba50:	ldr	x0, [x20]
  40ba54:	ldr	x1, [x20, #16]
  40ba58:	ldr	x0, [x0]
  40ba5c:	bl	40f9f8 <nftw@plt+0xce78>
  40ba60:	b	40b96c <nftw@plt+0x8dec>
  40ba64:	cmp	w19, #0x2
  40ba68:	b.le	40ba84 <nftw@plt+0x8f04>
  40ba6c:	ldr	x0, [x20]
  40ba70:	ldr	x0, [x0]
  40ba74:	tbz	w19, #0, 40baa0 <nftw@plt+0x8f20>
  40ba78:	ldr	x1, [x20, #16]
  40ba7c:	bl	40f9f8 <nftw@plt+0xce78>
  40ba80:	b	40b96c <nftw@plt+0x8dec>
  40ba84:	stp	x21, x22, [sp, #32]
  40ba88:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ba8c:	add	x2, x2, #0xed8
  40ba90:	mov	w1, #0x17f                 	// #383
  40ba94:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ba98:	add	x0, x0, #0xe58
  40ba9c:	bl	408d8c <nftw@plt+0x620c>
  40baa0:	ldr	x1, [x20, #24]
  40baa4:	b	40ba7c <nftw@plt+0x8efc>
  40baa8:	stp	x29, x30, [sp, #-32]!
  40baac:	mov	x29, sp
  40bab0:	str	x19, [sp, #16]
  40bab4:	mov	x19, x0
  40bab8:	mov	w1, #0xffffffff            	// #-1
  40babc:	add	x0, x0, #0x38
  40bac0:	bl	40b950 <nftw@plt+0x8dd0>
  40bac4:	ldr	x0, [x19, #8]
  40bac8:	bl	40f39c <nftw@plt+0xc81c>
  40bacc:	ldr	x19, [sp, #16]
  40bad0:	ldp	x29, x30, [sp], #32
  40bad4:	ret
  40bad8:	stp	x29, x30, [sp, #-48]!
  40badc:	mov	x29, sp
  40bae0:	stp	x19, x20, [sp, #16]
  40bae4:	stp	x21, x22, [sp, #32]
  40bae8:	mov	x22, x0
  40baec:	mov	x19, x1
  40baf0:	mov	w20, w2
  40baf4:	ldr	w1, [x1]
  40baf8:	cmp	w1, w2
  40bafc:	b.gt	40bb40 <nftw@plt+0x8fc0>
  40bb00:	ldr	w1, [x19]
  40bb04:	cmp	w20, w1
  40bb08:	b.le	40bb30 <nftw@plt+0x8fb0>
  40bb0c:	mov	w21, #0x20                  	// #32
  40bb10:	mov	w1, w21
  40bb14:	ldr	x0, [x22, #8]
  40bb18:	bl	40f400 <nftw@plt+0xc880>
  40bb1c:	ldr	w3, [x19]
  40bb20:	add	w3, w3, #0x1
  40bb24:	str	w3, [x19]
  40bb28:	cmp	w3, w20
  40bb2c:	b.lt	40bb10 <nftw@plt+0x8f90>  // b.tstop
  40bb30:	ldp	x19, x20, [sp, #16]
  40bb34:	ldp	x21, x22, [sp, #32]
  40bb38:	ldp	x29, x30, [sp], #48
  40bb3c:	ret
  40bb40:	and	w21, w3, #0xff
  40bb44:	bl	40baa8 <nftw@plt+0x8f28>
  40bb48:	cbnz	w21, 40bb58 <nftw@plt+0x8fd8>
  40bb4c:	ldr	w0, [x22, #148]
  40bb50:	str	w0, [x19]
  40bb54:	b	40bb00 <nftw@plt+0x8f80>
  40bb58:	mov	w1, #0x20                  	// #32
  40bb5c:	mov	x0, x22
  40bb60:	bl	40a380 <nftw@plt+0x7800>
  40bb64:	b	40bb4c <nftw@plt+0x8fcc>
  40bb68:	stp	x29, x30, [sp, #-224]!
  40bb6c:	mov	x29, sp
  40bb70:	stp	x19, x20, [sp, #16]
  40bb74:	str	x21, [sp, #32]
  40bb78:	mov	x19, x0
  40bb7c:	mov	w20, w1
  40bb80:	mov	w3, #0x4                   	// #4
  40bb84:	mov	x2, x0
  40bb88:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40bb8c:	ldr	x1, [x0, #920]
  40bb90:	add	x0, sp, #0x48
  40bb94:	bl	40aa08 <nftw@plt+0x7e88>
  40bb98:	str	w20, [sp, #56]
  40bb9c:	mov	w3, #0x1                   	// #1
  40bba0:	str	w3, [sp, #60]
  40bba4:	mov	w2, #0x0                   	// #0
  40bba8:	add	x1, sp, #0x38
  40bbac:	add	x0, sp, #0x48
  40bbb0:	bl	40a5a8 <nftw@plt+0x7a28>
  40bbb4:	mov	w21, w0
  40bbb8:	tst	w0, #0xff
  40bbbc:	b.ne	40bc18 <nftw@plt+0x9098>  // b.any
  40bbc0:	ldr	x0, [sp, #208]
  40bbc4:	cbz	x0, 40bbd4 <nftw@plt+0x9054>
  40bbc8:	ldrsb	w1, [x0, #3]
  40bbcc:	tbnz	w1, #31, 40bc30 <nftw@plt+0x90b0>
  40bbd0:	bl	402910 <free@plt>
  40bbd4:	ldr	x0, [sp, #200]
  40bbd8:	cbz	x0, 40bbe8 <nftw@plt+0x9068>
  40bbdc:	ldrsb	w1, [x0, #3]
  40bbe0:	tbnz	w1, #31, 40bc38 <nftw@plt+0x90b8>
  40bbe4:	bl	402910 <free@plt>
  40bbe8:	ldr	x0, [sp, #192]
  40bbec:	cbz	x0, 40bbfc <nftw@plt+0x907c>
  40bbf0:	ldrsb	w1, [x0, #3]
  40bbf4:	tbnz	w1, #31, 40bc40 <nftw@plt+0x90c0>
  40bbf8:	bl	402910 <free@plt>
  40bbfc:	add	x0, sp, #0x80
  40bc00:	bl	40a41c <nftw@plt+0x789c>
  40bc04:	mov	w0, w21
  40bc08:	ldp	x19, x20, [sp, #16]
  40bc0c:	ldr	x21, [sp, #32]
  40bc10:	ldp	x29, x30, [sp], #224
  40bc14:	ret
  40bc18:	mov	x3, #0x0                   	// #0
  40bc1c:	mov	w2, #0x1                   	// #1
  40bc20:	mov	w1, w20
  40bc24:	mov	x0, x19
  40bc28:	bl	42d244 <nftw@plt+0x2a6c4>
  40bc2c:	b	40bbc0 <nftw@plt+0x9040>
  40bc30:	str	wzr, [x0, #4]
  40bc34:	b	40bbd4 <nftw@plt+0x9054>
  40bc38:	str	wzr, [x0, #4]
  40bc3c:	b	40bbe8 <nftw@plt+0x9068>
  40bc40:	str	wzr, [x0, #4]
  40bc44:	b	40bbfc <nftw@plt+0x907c>
  40bc48:	stp	x29, x30, [sp, #-448]!
  40bc4c:	mov	x29, sp
  40bc50:	stp	x19, x20, [sp, #16]
  40bc54:	stp	x21, x22, [sp, #32]
  40bc58:	mov	x21, x0
  40bc5c:	str	x0, [sp, #152]
  40bc60:	mov	x19, x1
  40bc64:	mov	w20, w2
  40bc68:	ldr	x0, [x0]
  40bc6c:	bl	40f39c <nftw@plt+0xc81c>
  40bc70:	mov	w1, #0x0                   	// #0
  40bc74:	mov	x0, x19
  40bc78:	bl	42d164 <nftw@plt+0x2a5e4>
  40bc7c:	ldrb	w3, [x21, #108]
  40bc80:	eor	w1, w3, #0x1
  40bc84:	cmp	w0, #0x1
  40bc88:	cset	w3, ls  // ls = plast
  40bc8c:	orr	w3, w3, w1
  40bc90:	ands	w1, w3, #0xff
  40bc94:	str	w1, [sp, #160]
  40bc98:	b.eq	40bcac <nftw@plt+0x912c>  // b.none
  40bc9c:	ldp	x19, x20, [sp, #16]
  40bca0:	ldp	x21, x22, [sp, #32]
  40bca4:	ldp	x29, x30, [sp], #448
  40bca8:	ret
  40bcac:	ldr	w1, [x21, #200]
  40bcb0:	cmp	w1, w0
  40bcb4:	b.ne	40bcc0 <nftw@plt+0x9140>  // b.any
  40bcb8:	ldr	w1, [x19, #120]
  40bcbc:	cbz	w1, 40bc9c <nftw@plt+0x911c>
  40bcc0:	stp	x23, x24, [sp, #48]
  40bcc4:	stp	x25, x26, [sp, #64]
  40bcc8:	stp	x27, x28, [sp, #80]
  40bccc:	ldr	x21, [sp, #152]
  40bcd0:	str	w0, [x21, #200]
  40bcd4:	ldr	x0, [x21]
  40bcd8:	bl	40f07c <nftw@plt+0xc4fc>
  40bcdc:	str	x0, [sp, #184]
  40bce0:	mov	x1, #0x0                   	// #0
  40bce4:	ldr	x0, [x21]
  40bce8:	bl	40f040 <nftw@plt+0xc4c0>
  40bcec:	mov	w3, w20
  40bcf0:	mov	x2, x19
  40bcf4:	mov	x1, x21
  40bcf8:	add	x0, sp, #0x128
  40bcfc:	bl	40aa08 <nftw@plt+0x7e88>
  40bd00:	str	wzr, [sp, #136]
  40bd04:	add	x21, sp, #0x160
  40bd08:	str	x21, [sp, #176]
  40bd0c:	mov	x26, x21
  40bd10:	b	40bd70 <nftw@plt+0x91f0>
  40bd14:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40bd18:	add	x2, x2, #0xee8
  40bd1c:	mov	w1, #0x408                 	// #1032
  40bd20:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40bd24:	add	x0, x0, #0xe58
  40bd28:	bl	408d8c <nftw@plt+0x620c>
  40bd2c:	ldr	w0, [sp, #136]
  40bd30:	cmp	w0, #0x0
  40bd34:	b.gt	40bde4 <nftw@plt+0x9264>
  40bd38:	ldr	w0, [x21, #12]
  40bd3c:	ldr	w1, [sp, #328]
  40bd40:	cmp	w1, w0
  40bd44:	b.gt	40bde4 <nftw@plt+0x9264>
  40bd48:	add	x0, x21, w20, uxtw #3
  40bd4c:	ldr	w1, [x0, #12]
  40bd50:	str	x1, [sp, #120]
  40bd54:	ldr	w0, [x0, #8]
  40bd58:	str	x0, [sp, #104]
  40bd5c:	cmp	x1, x0
  40bd60:	b.ge	40cdfc <nftw@plt+0xa27c>  // b.tcont
  40bd64:	ldr	w0, [sp, #136]
  40bd68:	add	w0, w0, #0x1
  40bd6c:	str	w0, [sp, #136]
  40bd70:	ldr	x21, [sp, #432]
  40bd74:	mov	w0, #0x0                   	// #0
  40bd78:	cbz	x21, 40bd80 <nftw@plt+0x9200>
  40bd7c:	ldr	w0, [x21, #4]
  40bd80:	ldr	w1, [sp, #136]
  40bd84:	cmp	w1, w0
  40bd88:	b.ge	40cc9c <nftw@plt+0xa11c>  // b.tcont
  40bd8c:	mov	w20, w1
  40bd90:	ldr	x0, [sp, #152]
  40bd94:	ldrb	w0, [x0, #223]
  40bd98:	cbz	w0, 40bd2c <nftw@plt+0x91ac>
  40bd9c:	cmp	w1, #0x0
  40bda0:	b.le	40bd48 <nftw@plt+0x91c8>
  40bda4:	ldrb	w0, [sp, #410]
  40bda8:	cbz	w0, 40bd14 <nftw@plt+0x9194>
  40bdac:	ldr	w0, [sp, #440]
  40bdb0:	tbnz	w0, #31, 40bdd8 <nftw@plt+0x9258>
  40bdb4:	mov	w19, #0x0                   	// #0
  40bdb8:	mov	w22, #0x2e                  	// #46
  40bdbc:	mov	w1, w22
  40bdc0:	ldr	x0, [sp, #304]
  40bdc4:	bl	40f400 <nftw@plt+0xc880>
  40bdc8:	add	w19, w19, #0x1
  40bdcc:	ldr	w0, [sp, #440]
  40bdd0:	cmp	w0, w19
  40bdd4:	b.ge	40bdbc <nftw@plt+0x923c>  // b.tcont
  40bdd8:	ldr	x0, [sp, #304]
  40bddc:	bl	40f39c <nftw@plt+0xc81c>
  40bde0:	b	40bd48 <nftw@plt+0x91c8>
  40bde4:	ldr	w0, [sp, #328]
  40bde8:	add	x19, x21, w20, uxtw #3
  40bdec:	ldr	w3, [x19, #8]
  40bdf0:	cmp	w0, w3
  40bdf4:	b.cc	40be18 <nftw@plt+0x9298>  // b.lo, b.ul, b.last
  40bdf8:	ldr	w1, [x19, #12]
  40bdfc:	cmp	w0, w1
  40be00:	b.hi	40be18 <nftw@plt+0x9298>  // b.pmore
  40be04:	ldp	x0, x1, [sp, #320]
  40be08:	stp	x0, x1, [sp, #232]
  40be0c:	ldp	x0, x1, [sp, #336]
  40be10:	stp	x0, x1, [sp, #248]
  40be14:	b	40bea0 <nftw@plt+0x9320>
  40be18:	ldr	x2, [sp, #416]
  40be1c:	mov	w0, #0x0                   	// #0
  40be20:	mov	w4, #0x0                   	// #0
  40be24:	b	40be2c <nftw@plt+0x92ac>
  40be28:	add	w0, w0, #0x1
  40be2c:	mov	w1, w4
  40be30:	cbz	x2, 40be38 <nftw@plt+0x92b8>
  40be34:	ldr	w1, [x2, #4]
  40be38:	cmp	w0, w1
  40be3c:	b.cs	40bec4 <nftw@plt+0x9344>  // b.hs, b.nlast
  40be40:	ubfiz	x1, x0, #2, #32
  40be44:	add	x1, x1, w0, uxtw
  40be48:	add	x1, x2, x1, lsl #3
  40be4c:	ldr	w1, [x1, #8]
  40be50:	cmp	w3, w1
  40be54:	b.hi	40be28 <nftw@plt+0x92a8>  // b.pmore
  40be58:	ldr	w5, [x19, #12]
  40be5c:	cmp	w1, w5
  40be60:	b.hi	40be28 <nftw@plt+0x92a8>  // b.pmore
  40be64:	ldp	x4, x5, [sp, #320]
  40be68:	add	x3, sp, #0x200
  40be6c:	stp	x4, x5, [x3, #-248]
  40be70:	ldp	x4, x5, [sp, #336]
  40be74:	stp	x4, x5, [x3, #-232]
  40be78:	ubfiz	x3, x0, #2, #32
  40be7c:	add	x0, x3, w0, uxtw
  40be80:	add	x0, x2, x0, lsl #3
  40be84:	ldr	w0, [x0, #12]
  40be88:	str	w1, [sp, #272]
  40be8c:	str	w0, [sp, #276]
  40be90:	add	x0, sp, #0x200
  40be94:	ldp	x0, x1, [x0, #-248]
  40be98:	stp	x0, x1, [sp, #232]
  40be9c:	stp	x4, x5, [sp, #248]
  40bea0:	ldp	x0, x1, [sp, #232]
  40bea4:	stp	x0, x1, [sp, #192]
  40bea8:	ldp	x0, x1, [sp, #248]
  40beac:	stp	x0, x1, [sp, #208]
  40beb0:	ldr	x0, [sp, #152]
  40beb4:	ldr	x2, [x0, #144]
  40beb8:	add	x1, sp, #0xc0
  40bebc:	blr	x2
  40bec0:	b	40bd48 <nftw@plt+0x91c8>
  40bec4:	mov	w22, #0x0                   	// #0
  40bec8:	b	40bed0 <nftw@plt+0x9350>
  40becc:	add	w22, w22, #0x1
  40bed0:	ldr	x0, [sp, #424]
  40bed4:	cbz	x0, 40bf30 <nftw@plt+0x93b0>
  40bed8:	ldr	w1, [x0, #4]
  40bedc:	cmp	w1, w22
  40bee0:	b.ls	40bf30 <nftw@plt+0x93b0>  // b.plast
  40bee4:	add	x0, x0, w22, uxtw #3
  40bee8:	ldr	x0, [x0, #8]
  40beec:	add	x8, sp, #0x108
  40bef0:	ldr	w0, [x0]
  40bef4:	bl	414820 <nftw@plt+0x11ca0>
  40bef8:	ldr	w0, [sp, #272]
  40befc:	ldr	w1, [x19, #8]
  40bf00:	cmp	w0, w1
  40bf04:	b.cc	40becc <nftw@plt+0x934c>  // b.lo, b.ul, b.last
  40bf08:	ldr	w1, [x19, #12]
  40bf0c:	cmp	w0, w1
  40bf10:	b.hi	40becc <nftw@plt+0x934c>  // b.pmore
  40bf14:	add	x0, sp, #0x200
  40bf18:	ldp	x0, x1, [x0, #-248]
  40bf1c:	stp	x0, x1, [sp, #232]
  40bf20:	add	x0, sp, #0x200
  40bf24:	ldp	x0, x1, [x0, #-232]
  40bf28:	stp	x0, x1, [sp, #248]
  40bf2c:	b	40bea0 <nftw@plt+0x9320>
  40bf30:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40bf34:	add	x2, x2, #0xf08
  40bf38:	mov	w1, #0x449                 	// #1097
  40bf3c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40bf40:	add	x0, x0, #0xe58
  40bf44:	bl	408d8c <nftw@plt+0x620c>
  40bf48:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40bf4c:	add	x2, x2, #0xf20
  40bf50:	mov	w1, #0x638                 	// #1592
  40bf54:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40bf58:	add	x0, x0, #0xe58
  40bf5c:	bl	408d8c <nftw@plt+0x620c>
  40bf60:	ldr	x0, [x19, #8]
  40bf64:	ldrb	w1, [x0, x23]
  40bf68:	ldr	x0, [sp, #304]
  40bf6c:	bl	40f400 <nftw@plt+0xc880>
  40bf70:	add	x23, x23, #0x1
  40bf74:	ldr	x0, [x19, #16]
  40bf78:	sub	x0, x0, #0x1
  40bf7c:	cmp	x0, x23
  40bf80:	b.hi	40bf60 <nftw@plt+0x93e0>  // b.pmore
  40bf84:	mov	w1, w24
  40bf88:	mov	x0, x26
  40bf8c:	bl	40b950 <nftw@plt+0x8dd0>
  40bf90:	ldr	x0, [sp, #304]
  40bf94:	bl	40f39c <nftw@plt+0xc81c>
  40bf98:	add	w21, w21, #0x1
  40bf9c:	ldr	x0, [sp, #424]
  40bfa0:	cbz	x0, 40c034 <nftw@plt+0x94b4>
  40bfa4:	ldr	w1, [x0, #4]
  40bfa8:	cmp	w1, w21
  40bfac:	b.ls	40c034 <nftw@plt+0x94b4>  // b.plast
  40bfb0:	add	x0, x0, w21, uxtw #3
  40bfb4:	ldr	x19, [x0, #8]
  40bfb8:	mov	x0, x19
  40bfbc:	bl	42d638 <nftw@plt+0x2aab8>
  40bfc0:	and	w0, w0, #0xff
  40bfc4:	cbz	w0, 40bf98 <nftw@plt+0x9418>
  40bfc8:	ldr	w1, [x19]
  40bfcc:	ldr	w0, [x19, #4]
  40bfd0:	cmp	w1, w0
  40bfd4:	b.ne	40bf48 <nftw@plt+0x93c8>  // b.any
  40bfd8:	ldr	w2, [sp, #96]
  40bfdc:	ldr	x1, [sp, #320]
  40bfe0:	mov	x0, x19
  40bfe4:	bl	42d51c <nftw@plt+0x2a99c>
  40bfe8:	and	w0, w0, #0xff
  40bfec:	cbz	w0, 40bf98 <nftw@plt+0x9418>
  40bff0:	mov	w1, w24
  40bff4:	mov	x0, x26
  40bff8:	bl	40b950 <nftw@plt+0x8dd0>
  40bffc:	mov	w1, w27
  40c000:	add	x0, sp, #0x128
  40c004:	bl	40a380 <nftw@plt+0x7800>
  40c008:	mov	w1, w25
  40c00c:	ldr	x0, [sp, #304]
  40c010:	bl	40f400 <nftw@plt+0xc880>
  40c014:	mov	w1, #0xfffffffe            	// #-2
  40c018:	mov	x0, x26
  40c01c:	bl	40b950 <nftw@plt+0x8dd0>
  40c020:	ldr	x0, [x19, #16]
  40c024:	cmp	x0, #0x1
  40c028:	b.eq	40bf84 <nftw@plt+0x9404>  // b.none
  40c02c:	mov	x23, #0x0                   	// #0
  40c030:	b	40bf60 <nftw@plt+0x93e0>
  40c034:	mov	w1, #0xffffffff            	// #-1
  40c038:	mov	x0, x26
  40c03c:	bl	40b950 <nftw@plt+0x8dd0>
  40c040:	cmp	w22, #0x0
  40c044:	b.le	40cf74 <nftw@plt+0xa3f4>
  40c048:	add	x1, x20, w22, sxtw
  40c04c:	mov	w21, w22
  40c050:	ldurb	w2, [x1, #-1]
  40c054:	and	w0, w2, #0xfffffffb
  40c058:	and	w0, w0, #0xff
  40c05c:	cmp	w2, #0x20
  40c060:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  40c064:	b.ne	40c124 <nftw@plt+0x95a4>  // b.any
  40c068:	sub	x1, x1, #0x1
  40c06c:	subs	w21, w21, #0x1
  40c070:	b.ne	40c050 <nftw@plt+0x94d0>  // b.any
  40c074:	cbz	w21, 40c094 <nftw@plt+0x9514>
  40c078:	add	x0, x20, w21, sxtw
  40c07c:	ldurb	w1, [x0, #-1]
  40c080:	and	w0, w1, #0xfffffffb
  40c084:	and	w0, w0, #0xff
  40c088:	cmp	w1, #0x20
  40c08c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  40c090:	b.eq	40c160 <nftw@plt+0x95e0>  // b.none
  40c094:	ldrsw	x0, [sp, #444]
  40c098:	add	x20, x20, x0
  40c09c:	ldrb	w0, [sp, #410]
  40c0a0:	cbz	w0, 40c178 <nftw@plt+0x95f8>
  40c0a4:	ldr	w0, [sp, #96]
  40c0a8:	bl	409294 <nftw@plt+0x6714>
  40c0ac:	mov	w22, w0
  40c0b0:	ldr	w0, [sp, #440]
  40c0b4:	sub	w0, w0, w22
  40c0b8:	cmp	w0, #0x0
  40c0bc:	b.le	40c0e8 <nftw@plt+0x9568>
  40c0c0:	mov	w19, #0x0                   	// #0
  40c0c4:	mov	w23, #0x20                  	// #32
  40c0c8:	mov	w1, w23
  40c0cc:	ldr	x0, [sp, #304]
  40c0d0:	bl	40f400 <nftw@plt+0xc880>
  40c0d4:	add	w19, w19, #0x1
  40c0d8:	ldr	w0, [sp, #440]
  40c0dc:	sub	w0, w0, w22
  40c0e0:	cmp	w0, w19
  40c0e4:	b.gt	40c0c8 <nftw@plt+0x9548>
  40c0e8:	ldr	w2, [sp, #100]
  40c0ec:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c0f0:	add	x1, x1, #0xf68
  40c0f4:	ldr	x0, [sp, #304]
  40c0f8:	bl	411830 <nftw@plt+0xecb0>
  40c0fc:	ldr	w19, [sp, #444]
  40c100:	add	w19, w19, #0x1
  40c104:	cmp	w19, w21
  40c108:	b.gt	40c21c <nftw@plt+0x969c>
  40c10c:	add	w21, w21, #0x1
  40c110:	mov	w23, #0x0                   	// #0
  40c114:	mov	w22, #0x7fffffff            	// #2147483647
  40c118:	mov	w24, w22
  40c11c:	mov	w25, #0xffffffff            	// #-1
  40c120:	b	40c1f0 <nftw@plt+0x9670>
  40c124:	tbnz	w21, #31, 40c148 <nftw@plt+0x95c8>
  40c128:	cmp	w22, w21
  40c12c:	b.ge	40c074 <nftw@plt+0x94f4>  // b.tcont
  40c130:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c134:	add	x2, x2, #0xf38
  40c138:	mov	w1, #0x2ba                 	// #698
  40c13c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c140:	add	x0, x0, #0xe58
  40c144:	bl	408d8c <nftw@plt+0x620c>
  40c148:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c14c:	add	x2, x2, #0xf38
  40c150:	mov	w1, #0x2b9                 	// #697
  40c154:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c158:	add	x0, x0, #0xe58
  40c15c:	bl	408d8c <nftw@plt+0x620c>
  40c160:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c164:	add	x2, x2, #0xf38
  40c168:	mov	w1, #0x2bb                 	// #699
  40c16c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c170:	add	x0, x0, #0xe58
  40c174:	bl	408d8c <nftw@plt+0x620c>
  40c178:	mov	w1, #0x20                  	// #32
  40c17c:	ldr	x0, [sp, #304]
  40c180:	bl	40f400 <nftw@plt+0xc880>
  40c184:	b	40c0fc <nftw@plt+0x957c>
  40c188:	add	x5, sp, #0x108
  40c18c:	mov	w4, w24
  40c190:	mov	w3, #0x0                   	// #0
  40c194:	mov	w2, w19
  40c198:	ldr	w1, [sp, #100]
  40c19c:	add	x0, sp, #0x128
  40c1a0:	bl	40a180 <nftw@plt+0x7600>
  40c1a4:	and	w0, w0, #0xff
  40c1a8:	cbz	w0, 40c1bc <nftw@plt+0x963c>
  40c1ac:	ldr	w1, [sp, #264]
  40c1b0:	mov	x0, x26
  40c1b4:	bl	40b950 <nftw@plt+0x8dd0>
  40c1b8:	b	40c1f8 <nftw@plt+0x9678>
  40c1bc:	mov	w1, w25
  40c1c0:	mov	x0, x26
  40c1c4:	bl	40b950 <nftw@plt+0x8dd0>
  40c1c8:	b	40c1f8 <nftw@plt+0x9678>
  40c1cc:	cmp	w22, w24
  40c1d0:	mov	w23, w19
  40c1d4:	csel	w22, w22, w19, ne  // ne = any
  40c1d8:	ldr	x0, [sp, #304]
  40c1dc:	bl	40f400 <nftw@plt+0xc880>
  40c1e0:	add	x20, x20, #0x1
  40c1e4:	add	w19, w19, #0x1
  40c1e8:	cmp	w19, w21
  40c1ec:	b.eq	40c224 <nftw@plt+0x96a4>  // b.none
  40c1f0:	ldrb	w0, [sp, #408]
  40c1f4:	cbnz	w0, 40c188 <nftw@plt+0x9608>
  40c1f8:	ldrb	w1, [x20]
  40c1fc:	and	w2, w1, #0xffffffdf
  40c200:	and	w0, w1, #0xfffffffb
  40c204:	and	w0, w0, #0xff
  40c208:	tst	w2, #0xff
  40c20c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  40c210:	b.ne	40c1cc <nftw@plt+0x964c>  // b.any
  40c214:	mov	w1, #0x20                  	// #32
  40c218:	b	40c1d8 <nftw@plt+0x9658>
  40c21c:	mov	w23, #0x0                   	// #0
  40c220:	mov	w22, #0x7fffffff            	// #2147483647
  40c224:	add	x0, sp, #0x128
  40c228:	bl	40baa8 <nftw@plt+0x8f28>
  40c22c:	ldr	x0, [sp, #416]
  40c230:	cbz	x0, 40d120 <nftw@plt+0xa5a0>
  40c234:	add	x2, x0, #0x8
  40c238:	ldr	w0, [x0, #4]
  40c23c:	add	x0, x0, x0, lsl #2
  40c240:	add	x0, x2, x0, lsl #3
  40c244:	mov	x1, x2
  40c248:	cmp	x1, x0
  40c24c:	b.eq	40d118 <nftw@plt+0xa598>  // b.none
  40c250:	ldr	w3, [x1, #16]
  40c254:	cmp	w3, #0x2
  40c258:	b.eq	40d118 <nftw@plt+0xa598>  // b.none
  40c25c:	ldr	w3, [x1]
  40c260:	ldr	w4, [x1, #8]
  40c264:	cmp	w3, w4
  40c268:	b.hi	40c2c8 <nftw@plt+0x9748>  // b.pmore
  40c26c:	add	x1, x1, #0x28
  40c270:	ldr	w5, [sp, #100]
  40c274:	cmp	w4, w5
  40c278:	ccmp	w3, w5, #0x2, cs  // cs = hs, nlast
  40c27c:	b.hi	40c248 <nftw@plt+0x96c8>  // b.pmore
  40c280:	ldr	w20, [sp, #332]
  40c284:	add	w20, w20, #0x1
  40c288:	add	w3, w23, #0x1
  40c28c:	cmp	x0, x2
  40c290:	b.eq	40c2f0 <nftw@plt+0x9770>  // b.none
  40c294:	ldr	w1, [x2]
  40c298:	ldr	w5, [sp, #100]
  40c29c:	cmp	w1, w5
  40c2a0:	b.hi	40c2c0 <nftw@plt+0x9740>  // b.pmore
  40c2a4:	ldr	w1, [x2, #8]
  40c2a8:	cmp	w1, w5
  40c2ac:	b.eq	40c2e0 <nftw@plt+0x9760>  // b.none
  40c2b0:	cmp	w23, w20
  40c2b4:	ldr	w4, [sp, #100]
  40c2b8:	ccmp	w1, w4, #0x0, ge  // ge = tcont
  40c2bc:	csel	w20, w3, w20, hi  // hi = pmore
  40c2c0:	add	x2, x2, #0x28
  40c2c4:	b	40c28c <nftw@plt+0x970c>
  40c2c8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c2cc:	add	x2, x2, #0xf70
  40c2d0:	mov	w1, #0x215                 	// #533
  40c2d4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c2d8:	add	x0, x0, #0xe58
  40c2dc:	bl	408d8c <nftw@plt+0x620c>
  40c2e0:	ldr	w1, [x2, #12]
  40c2e4:	cmp	w1, w20
  40c2e8:	csinc	w20, w20, w1, lt  // lt = tstop
  40c2ec:	b	40c2c0 <nftw@plt+0x9740>
  40c2f0:	mov	w1, #0x20                  	// #32
  40c2f4:	add	x0, sp, #0x128
  40c2f8:	bl	40a380 <nftw@plt+0x7800>
  40c2fc:	mov	w1, #0x20                  	// #32
  40c300:	ldr	x0, [sp, #304]
  40c304:	bl	40f400 <nftw@plt+0xc880>
  40c308:	ldr	w19, [sp, #444]
  40c30c:	add	w19, w19, #0x1
  40c310:	cmp	w19, w20
  40c314:	b.ge	40c3bc <nftw@plt+0x983c>  // b.tcont
  40c318:	mov	w24, #0xffffffff            	// #-1
  40c31c:	mov	w21, #0x20                  	// #32
  40c320:	ldr	w25, [sp, #100]
  40c324:	b	40c35c <nftw@plt+0x97dc>
  40c328:	mov	w1, #0x7e                  	// #126
  40c32c:	ldr	x0, [sp, #304]
  40c330:	bl	40f400 <nftw@plt+0xc880>
  40c334:	b	40c350 <nftw@plt+0x97d0>
  40c338:	mov	w1, w24
  40c33c:	mov	x0, x26
  40c340:	bl	40b950 <nftw@plt+0x8dd0>
  40c344:	mov	w1, w21
  40c348:	ldr	x0, [sp, #304]
  40c34c:	bl	40f400 <nftw@plt+0xc880>
  40c350:	add	w19, w19, #0x1
  40c354:	cmp	w19, w20
  40c358:	b.eq	40c3bc <nftw@plt+0x983c>  // b.none
  40c35c:	add	x5, sp, #0x108
  40c360:	mov	w4, w23
  40c364:	mov	w3, w22
  40c368:	mov	w2, w19
  40c36c:	mov	w1, w25
  40c370:	add	x0, sp, #0x128
  40c374:	bl	40a180 <nftw@plt+0x7600>
  40c378:	and	w0, w0, #0xff
  40c37c:	cbz	w0, 40c338 <nftw@plt+0x97b8>
  40c380:	ldr	w1, [sp, #264]
  40c384:	mov	x0, x26
  40c388:	bl	40b950 <nftw@plt+0x8dd0>
  40c38c:	ldrb	w0, [sp, #268]
  40c390:	cbz	w0, 40c328 <nftw@plt+0x97a8>
  40c394:	ldr	w0, [sp, #264]
  40c398:	mov	w1, #0x5e                  	// #94
  40c39c:	cmp	w0, #0x2
  40c3a0:	b.gt	40c3b0 <nftw@plt+0x9830>
  40c3a4:	ldr	x1, [sp, #296]
  40c3a8:	add	x0, x1, w0, sxtw
  40c3ac:	ldrb	w1, [x0, #116]
  40c3b0:	ldr	x0, [sp, #304]
  40c3b4:	bl	40f400 <nftw@plt+0xc880>
  40c3b8:	b	40c350 <nftw@plt+0x97d0>
  40c3bc:	add	x0, sp, #0x128
  40c3c0:	bl	40baa8 <nftw@plt+0x8f28>
  40c3c4:	ldrb	w0, [sp, #409]
  40c3c8:	cbz	w0, 40d120 <nftw@plt+0xa5a0>
  40c3cc:	ldr	x20, [sp, #416]
  40c3d0:	cbnz	x20, 40cf84 <nftw@plt+0xa404>
  40c3d4:	b	40d120 <nftw@plt+0xa5a0>
  40c3d8:	add	w0, w20, #0x1
  40c3dc:	str	w24, [sp, #128]
  40c3e0:	b	40ced4 <nftw@plt+0xa354>
  40c3e4:	cmp	w1, #0x1
  40c3e8:	b.hi	40c43c <nftw@plt+0x98bc>  // b.pmore
  40c3ec:	ldr	w2, [x19, #4]
  40c3f0:	sub	w0, w2, #0x1
  40c3f4:	cbz	w2, 40c478 <nftw@plt+0x98f8>
  40c3f8:	mov	w24, #0x1                   	// #1
  40c3fc:	mov	w6, #0x7fffffff            	// #2147483647
  40c400:	mov	w5, w0
  40c404:	ubfiz	x1, x0, #2, #32
  40c408:	add	x3, x1, x5
  40c40c:	add	x3, x19, x3, lsl #3
  40c410:	ldrsw	x4, [x3, #12]
  40c414:	ldr	x1, [x3, #32]
  40c418:	add	x1, x4, x1
  40c41c:	cmp	x1, w6, sxtw
  40c420:	cinc	w24, w24, cs  // cs = hs, nlast
  40c424:	str	w24, [x3, #40]
  40c428:	sub	w0, w0, #0x1
  40c42c:	cmp	w2, w0
  40c430:	b.ls	40ce9c <nftw@plt+0xa31c>  // b.plast
  40c434:	ldr	w6, [x3, #12]
  40c438:	b	40c400 <nftw@plt+0x9880>
  40c43c:	adrp	x3, 40a000 <nftw@plt+0x7480>
  40c440:	add	x3, x3, #0x138
  40c444:	mov	x2, #0x28                  	// #40
  40c448:	mov	w1, w1
  40c44c:	add	x0, x19, #0x8
  40c450:	bl	4174d4 <nftw@plt+0x14954>
  40c454:	b	40c3ec <nftw@plt+0x986c>
  40c458:	ldr	x26, [sp, #128]
  40c45c:	ldr	w0, [x19, #4]
  40c460:	cbnz	w0, 40cea0 <nftw@plt+0xa320>
  40c464:	ldrsb	w0, [x19, #3]
  40c468:	tbnz	w0, #31, 40c5f8 <nftw@plt+0x9a78>
  40c46c:	mov	x0, x19
  40c470:	bl	402910 <free@plt>
  40c474:	b	40d120 <nftw@plt+0xa5a0>
  40c478:	mov	w24, #0x1                   	// #1
  40c47c:	mov	w25, #0x0                   	// #0
  40c480:	mov	w20, #0x0                   	// #0
  40c484:	add	x0, sp, #0x108
  40c488:	str	x0, [sp, #112]
  40c48c:	str	x26, [sp, #128]
  40c490:	ldr	x26, [sp, #176]
  40c494:	b	40c514 <nftw@plt+0x9994>
  40c498:	ldr	w2, [x21, #4]
  40c49c:	ldr	w0, [sp, #264]
  40c4a0:	cmp	w2, w0
  40c4a4:	b.lt	40c5bc <nftw@plt+0x9a3c>  // b.tstop
  40c4a8:	mov	w3, w27
  40c4ac:	ldr	x1, [sp, #112]
  40c4b0:	add	x0, sp, #0x128
  40c4b4:	bl	40bad8 <nftw@plt+0x8f58>
  40c4b8:	ldr	w1, [x21]
  40c4bc:	mov	x0, x26
  40c4c0:	bl	40b950 <nftw@plt+0x8dd0>
  40c4c4:	ldr	x1, [x21, #8]
  40c4c8:	ldr	x0, [sp, #304]
  40c4cc:	bl	40f9f8 <nftw@plt+0xce78>
  40c4d0:	mov	w1, #0xffffffff            	// #-1
  40c4d4:	mov	x0, x26
  40c4d8:	bl	40b950 <nftw@plt+0x8dd0>
  40c4dc:	ldr	x1, [x21, #24]
  40c4e0:	ldr	w0, [sp, #264]
  40c4e4:	add	w0, w0, w1
  40c4e8:	str	w0, [sp, #264]
  40c4ec:	add	w22, w22, #0x1
  40c4f0:	add	x21, x21, #0x28
  40c4f4:	ldr	w0, [x19, #4]
  40c4f8:	cmp	w0, w22
  40c4fc:	b.hi	40c550 <nftw@plt+0x99d0>  // b.pmore
  40c500:	add	x0, sp, #0x128
  40c504:	bl	40baa8 <nftw@plt+0x8f28>
  40c508:	add	w20, w20, #0x1
  40c50c:	cmp	w20, w24
  40c510:	b.gt	40c458 <nftw@plt+0x98d8>
  40c514:	mov	w1, #0x20                  	// #32
  40c518:	add	x0, sp, #0x128
  40c51c:	bl	40a380 <nftw@plt+0x7800>
  40c520:	mov	w1, #0x20                  	// #32
  40c524:	ldr	x0, [sp, #304]
  40c528:	bl	40f400 <nftw@plt+0xc880>
  40c52c:	ldr	w0, [sp, #444]
  40c530:	add	w0, w0, #0x1
  40c534:	str	w0, [sp, #264]
  40c538:	ldr	w0, [x19, #4]
  40c53c:	cbz	w0, 40c500 <nftw@plt+0x9980>
  40c540:	add	x21, x19, #0x8
  40c544:	mov	w22, #0x0                   	// #0
  40c548:	mov	w27, #0x1                   	// #1
  40c54c:	mov	w28, #0x7c                  	// #124
  40c550:	ldr	w0, [x21, #32]
  40c554:	cmp	w0, w20
  40c558:	b.lt	40c500 <nftw@plt+0x9980>  // b.tstop
  40c55c:	b.eq	40c498 <nftw@plt+0x9918>  // b.none
  40c560:	ldr	w2, [x21, #4]
  40c564:	cmp	w2, w25
  40c568:	b.eq	40c4ec <nftw@plt+0x996c>  // b.none
  40c56c:	ldr	w0, [sp, #264]
  40c570:	cmp	w2, w0
  40c574:	b.lt	40c5d4 <nftw@plt+0x9a54>  // b.tstop
  40c578:	mov	w3, w27
  40c57c:	ldr	x1, [sp, #112]
  40c580:	add	x0, sp, #0x128
  40c584:	bl	40bad8 <nftw@plt+0x8f58>
  40c588:	ldr	w1, [x21]
  40c58c:	mov	x0, x26
  40c590:	bl	40b950 <nftw@plt+0x8dd0>
  40c594:	mov	w1, w28
  40c598:	ldr	x0, [sp, #304]
  40c59c:	bl	40f400 <nftw@plt+0xc880>
  40c5a0:	mov	w1, #0xffffffff            	// #-1
  40c5a4:	mov	x0, x26
  40c5a8:	bl	40b950 <nftw@plt+0x8dd0>
  40c5ac:	ldr	w25, [sp, #264]
  40c5b0:	add	w0, w25, #0x1
  40c5b4:	str	w0, [sp, #264]
  40c5b8:	b	40c4ec <nftw@plt+0x996c>
  40c5bc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c5c0:	add	x2, x2, #0xf88
  40c5c4:	mov	w1, #0x609                 	// #1545
  40c5c8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c5cc:	add	x0, x0, #0xe58
  40c5d0:	bl	408d8c <nftw@plt+0x620c>
  40c5d4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c5d8:	add	x2, x2, #0xf88
  40c5dc:	mov	w1, #0x612                 	// #1554
  40c5e0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c5e4:	add	x0, x0, #0xe58
  40c5e8:	bl	408d8c <nftw@plt+0x620c>
  40c5ec:	ldr	x0, [x20]
  40c5f0:	bl	402910 <free@plt>
  40c5f4:	b	40ceb0 <nftw@plt+0xa330>
  40c5f8:	str	wzr, [x19, #4]
  40c5fc:	b	40d120 <nftw@plt+0xa5a0>
  40c600:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c604:	add	x2, x2, #0xfa0
  40c608:	mov	w1, #0x6bc                 	// #1724
  40c60c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c610:	add	x0, x0, #0xe58
  40c614:	bl	408d8c <nftw@plt+0x620c>
  40c618:	add	x8, sp, #0x108
  40c61c:	bl	414820 <nftw@plt+0x11ca0>
  40c620:	ldr	w22, [sp, #276]
  40c624:	sub	w22, w22, #0x1
  40c628:	cmp	w27, w22
  40c62c:	csel	w22, w27, w22, ge  // ge = tcont
  40c630:	cmp	w21, w22
  40c634:	b.le	40c668 <nftw@plt+0x9ae8>
  40c638:	sub	w0, w21, #0x1
  40c63c:	cmp	w22, w0
  40c640:	b.ne	40c64c <nftw@plt+0x9acc>  // b.any
  40c644:	mov	w22, w0
  40c648:	b	40c668 <nftw@plt+0x9ae8>
  40c64c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c650:	add	x2, x2, #0xfa0
  40c654:	mov	w1, #0x6bc                 	// #1724
  40c658:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c65c:	add	x0, x0, #0xe58
  40c660:	bl	408d8c <nftw@plt+0x620c>
  40c664:	mov	w22, w27
  40c668:	cbz	x19, 40cd20 <nftw@plt+0xa1a0>
  40c66c:	ldr	w0, [x19, #4]
  40c670:	cbz	w0, 40c6e4 <nftw@plt+0x9b64>
  40c674:	sub	w0, w0, #0x1
  40c678:	add	x0, x19, x0, lsl #3
  40c67c:	ldr	x24, [x0, #8]
  40c680:	ldr	w0, [x24]
  40c684:	cmp	w0, w25
  40c688:	b.gt	40c87c <nftw@plt+0x9cfc>
  40c68c:	ldr	w0, [x24, #8]
  40c690:	cmp	w0, w21
  40c694:	b.gt	40c894 <nftw@plt+0x9d14>
  40c698:	ldr	w0, [x24, #12]
  40c69c:	cmp	w0, w21
  40c6a0:	b.lt	40c6e4 <nftw@plt+0x9b64>  // b.tstop
  40c6a4:	ldr	w0, [x24, #4]
  40c6a8:	str	w0, [sp, #140]
  40c6ac:	add	w1, w0, #0x1
  40c6b0:	str	w1, [sp, #164]
  40c6b4:	sub	w27, w21, #0x1
  40c6b8:	cmp	w0, w27
  40c6bc:	ccmp	w1, w27, #0x4, ne  // ne = any
  40c6c0:	b.gt	40c8ac <nftw@plt+0x9d2c>
  40c6c4:	ldr	w1, [sp, #96]
  40c6c8:	ldr	x0, [sp, #128]
  40c6cc:	bl	4149d0 <nftw@plt+0x11e50>
  40c6d0:	str	x0, [sp, #168]
  40c6d4:	str	x1, [sp, #144]
  40c6d8:	cmp	x0, #0x0
  40c6dc:	ccmp	w27, w1, #0x0, ne  // ne = any
  40c6e0:	b.lt	40c8c4 <nftw@plt+0x9d44>  // b.tstop
  40c6e4:	ldr	x24, [x20, #8]
  40c6e8:	ldr	x27, [x20, #16]
  40c6ec:	mov	x0, #0x28                  	// #40
  40c6f0:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40c6f4:	mov	x20, x0
  40c6f8:	str	w25, [x0]
  40c6fc:	str	w26, [x0, #4]
  40c700:	str	w21, [x0, #8]
  40c704:	str	w22, [x0, #12]
  40c708:	mov	x0, x24
  40c70c:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  40c710:	str	x0, [x20, #16]
  40c714:	str	x27, [x20, #24]
  40c718:	add	x27, x27, #0x1
  40c71c:	str	x27, [x20, #32]
  40c720:	ldr	w21, [x19, #4]
  40c724:	ldr	w0, [x19]
  40c728:	ubfx	x0, x0, #0, #31
  40c72c:	cmp	w0, w21
  40c730:	b.ne	40c78c <nftw@plt+0x9c0c>  // b.any
  40c734:	ldrsb	w0, [x19, #3]
  40c738:	add	w1, w21, #0x1
  40c73c:	mov	w24, w28
  40c740:	tbnz	w0, #31, 40cd64 <nftw@plt+0xa1e4>
  40c744:	ldr	w1, [x19, #4]
  40c748:	ldr	w0, [x19]
  40c74c:	add	w1, w1, #0x1
  40c750:	and	w0, w0, #0x7fffffff
  40c754:	bl	4120a8 <nftw@plt+0xf528>
  40c758:	mov	w21, w0
  40c75c:	ldr	w22, [x19, #4]
  40c760:	ubfiz	x1, x21, #3, #32
  40c764:	add	x1, x1, #0x8
  40c768:	mov	x0, x19
  40c76c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40c770:	mov	x19, x0
  40c774:	ldr	w1, [x0]
  40c778:	bfxil	w1, w21, #0, #31
  40c77c:	str	w1, [x0]
  40c780:	ubfx	x1, x1, #24, #7
  40c784:	strb	w1, [x0, #3]
  40c788:	str	w22, [x0, #4]
  40c78c:	ldr	w0, [x19, #4]
  40c790:	add	w1, w0, #0x1
  40c794:	str	w1, [x19, #4]
  40c798:	add	x0, x19, w0, uxtw #3
  40c79c:	str	x20, [x0, #8]
  40c7a0:	add	w23, w23, #0x1
  40c7a4:	ldr	x0, [sp, #424]
  40c7a8:	cbz	x0, 40cad0 <nftw@plt+0x9f50>
  40c7ac:	ldr	w1, [x0, #4]
  40c7b0:	cmp	w1, w23
  40c7b4:	b.ls	40cad0 <nftw@plt+0x9f50>  // b.plast
  40c7b8:	add	x0, x0, w23, uxtw #3
  40c7bc:	ldr	x20, [x0, #8]
  40c7c0:	mov	x0, x20
  40c7c4:	bl	42d638 <nftw@plt+0x2aab8>
  40c7c8:	and	w0, w0, #0xff
  40c7cc:	cbnz	w0, 40c7a0 <nftw@plt+0x9c20>
  40c7d0:	ldr	w2, [sp, #96]
  40c7d4:	ldr	x1, [sp, #320]
  40c7d8:	mov	x0, x20
  40c7dc:	bl	42d51c <nftw@plt+0x2a99c>
  40c7e0:	ands	w28, w0, #0xff
  40c7e4:	b.eq	40c7a0 <nftw@plt+0x9c20>  // b.none
  40c7e8:	add	x8, sp, #0x108
  40c7ec:	ldr	w0, [x20]
  40c7f0:	bl	414820 <nftw@plt+0x11ca0>
  40c7f4:	ldr	w25, [sp, #276]
  40c7f8:	add	x8, sp, #0x108
  40c7fc:	ldr	w0, [x20, #4]
  40c800:	bl	414820 <nftw@plt+0x11ca0>
  40c804:	ldr	w0, [sp, #276]
  40c808:	sub	w26, w0, #0x1
  40c80c:	cmp	w25, w0
  40c810:	cset	w24, ne  // ne = any
  40c814:	cmp	w25, w26
  40c818:	cset	w0, gt
  40c81c:	ands	w24, w24, w0
  40c820:	b.ne	40c600 <nftw@plt+0x9a80>  // b.any
  40c824:	add	x8, sp, #0x108
  40c828:	ldr	w0, [x20]
  40c82c:	bl	414820 <nftw@plt+0x11ca0>
  40c830:	ldr	w21, [sp, #276]
  40c834:	ldr	x0, [x20, #16]
  40c838:	sub	w27, w21, #0x1
  40c83c:	add	w27, w27, w0
  40c840:	ldr	w0, [x20, #4]
  40c844:	ldr	w1, [x20]
  40c848:	cmp	w1, w0
  40c84c:	b.ne	40c618 <nftw@plt+0x9a98>  // b.any
  40c850:	cmp	w21, w27
  40c854:	b.le	40c664 <nftw@plt+0x9ae4>
  40c858:	sub	w22, w21, #0x1
  40c85c:	cmp	w27, w22
  40c860:	b.eq	40c668 <nftw@plt+0x9ae8>  // b.none
  40c864:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c868:	add	x2, x2, #0xfa0
  40c86c:	mov	w1, #0x6bc                 	// #1724
  40c870:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c874:	add	x0, x0, #0xe58
  40c878:	bl	408d8c <nftw@plt+0x620c>
  40c87c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c880:	add	x2, x2, #0xfb0
  40c884:	mov	w1, #0x77a                 	// #1914
  40c888:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c88c:	add	x0, x0, #0xe58
  40c890:	bl	408d8c <nftw@plt+0x620c>
  40c894:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c898:	add	x2, x2, #0xfb0
  40c89c:	mov	w1, #0x77c                 	// #1916
  40c8a0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c8a4:	add	x0, x0, #0xe58
  40c8a8:	bl	408d8c <nftw@plt+0x620c>
  40c8ac:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c8b0:	add	x2, x2, #0xfa0
  40c8b4:	mov	w1, #0x6bc                 	// #1724
  40c8b8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c8bc:	add	x0, x0, #0xe58
  40c8c0:	bl	408d8c <nftw@plt+0x620c>
  40c8c4:	ldr	x22, [x24, #24]
  40c8c8:	tbnz	w22, #31, 40c9c4 <nftw@plt+0x9e44>
  40c8cc:	ldr	w0, [sp, #164]
  40c8d0:	subs	w27, w21, w0
  40c8d4:	b.mi	40c9dc <nftw@plt+0x9e5c>  // b.first
  40c8d8:	add	w28, w27, w22
  40c8dc:	ldr	x0, [x20, #16]
  40c8e0:	adds	w0, w28, w0
  40c8e4:	str	w0, [sp, #164]
  40c8e8:	b.mi	40c9f4 <nftw@plt+0x9e74>  // b.first
  40c8ec:	ldrsw	x25, [sp, #164]
  40c8f0:	add	x21, x25, #0x1
  40c8f4:	ldr	x0, [x24, #32]
  40c8f8:	cmp	x0, x21
  40c8fc:	b.cc	40ca0c <nftw@plt+0x9e8c>  // b.lo, b.ul, b.last
  40c900:	ldr	w0, [sp, #140]
  40c904:	tbnz	w0, #31, 40ca28 <nftw@plt+0x9ea8>
  40c908:	ldr	w0, [sp, #140]
  40c90c:	ldr	w1, [sp, #144]
  40c910:	cmp	w0, w1
  40c914:	b.ge	40ca40 <nftw@plt+0x9ec0>  // b.tcont
  40c918:	ldr	w0, [sp, #140]
  40c91c:	add	w0, w0, w27
  40c920:	ldr	w1, [sp, #144]
  40c924:	cmp	w1, w0
  40c928:	b.lt	40ca58 <nftw@plt+0x9ed8>  // b.tstop
  40c92c:	ldr	w0, [sp, #140]
  40c930:	ldr	x1, [sp, #168]
  40c934:	add	x1, x1, w0, sxtw
  40c938:	sxtw	x21, w27
  40c93c:	sxtw	x0, w22
  40c940:	add	x22, x21, w22, sxtw
  40c944:	ldr	x2, [x24, #32]
  40c948:	cmp	x22, x2
  40c94c:	b.cs	40ca70 <nftw@plt+0x9ef0>  // b.hs, b.nlast
  40c950:	ldr	x3, [x24, #16]
  40c954:	mov	x2, x21
  40c958:	add	x0, x3, x0
  40c95c:	bl	402490 <memcpy@plt>
  40c960:	ldr	x1, [x20, #8]
  40c964:	ldr	x2, [x20, #16]
  40c968:	tbnz	w28, #31, 40ca88 <nftw@plt+0x9f08>
  40c96c:	sxtw	x28, w28
  40c970:	add	x3, x2, x28
  40c974:	ldr	x0, [x24, #32]
  40c978:	cmp	x3, x0
  40c97c:	b.cs	40caa0 <nftw@plt+0x9f20>  // b.hs, b.nlast
  40c980:	ldr	x0, [x24, #16]
  40c984:	add	x0, x0, x28
  40c988:	bl	402490 <memcpy@plt>
  40c98c:	str	x25, [x24, #24]
  40c990:	ldr	x0, [x24, #32]
  40c994:	cmp	x25, x0
  40c998:	b.cs	40cab8 <nftw@plt+0x9f38>  // b.hs, b.nlast
  40c99c:	ldr	x0, [x24, #16]
  40c9a0:	ldr	w1, [sp, #164]
  40c9a4:	strb	wzr, [x0, w1, sxtw]
  40c9a8:	str	w26, [x24, #4]
  40c9ac:	ldr	x27, [x20, #16]
  40c9b0:	add	x21, x21, x27
  40c9b4:	ldr	w0, [x24, #12]
  40c9b8:	add	w21, w0, w21
  40c9bc:	str	w21, [x24, #12]
  40c9c0:	b	40c7a0 <nftw@plt+0x9c20>
  40c9c4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c9c8:	add	x2, x2, #0xfb0
  40c9cc:	mov	w1, #0x792                 	// #1938
  40c9d0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c9d4:	add	x0, x0, #0xe58
  40c9d8:	bl	408d8c <nftw@plt+0x620c>
  40c9dc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c9e0:	add	x2, x2, #0xfb0
  40c9e4:	mov	w1, #0x794                 	// #1940
  40c9e8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c9ec:	add	x0, x0, #0xe58
  40c9f0:	bl	408d8c <nftw@plt+0x620c>
  40c9f4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40c9f8:	add	x2, x2, #0xfb0
  40c9fc:	mov	w1, #0x796                 	// #1942
  40ca00:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca04:	add	x0, x0, #0xe58
  40ca08:	bl	408d8c <nftw@plt+0x620c>
  40ca0c:	lsl	x21, x21, #1
  40ca10:	mov	x1, x21
  40ca14:	ldr	x0, [x24, #16]
  40ca18:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40ca1c:	str	x0, [x24, #16]
  40ca20:	str	x21, [x24, #32]
  40ca24:	b	40c900 <nftw@plt+0x9d80>
  40ca28:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca2c:	add	x2, x2, #0xfc0
  40ca30:	mov	w1, #0x44                  	// #68
  40ca34:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca38:	add	x0, x0, #0xfc8
  40ca3c:	bl	408d8c <nftw@plt+0x620c>
  40ca40:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca44:	add	x2, x2, #0xfc0
  40ca48:	mov	w1, #0x45                  	// #69
  40ca4c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca50:	add	x0, x0, #0xfc8
  40ca54:	bl	408d8c <nftw@plt+0x620c>
  40ca58:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca5c:	add	x2, x2, #0xfc0
  40ca60:	mov	w1, #0x47                  	// #71
  40ca64:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca68:	add	x0, x0, #0xfc8
  40ca6c:	bl	408d8c <nftw@plt+0x620c>
  40ca70:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca74:	add	x2, x2, #0xfe0
  40ca78:	mov	w1, #0x706                 	// #1798
  40ca7c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca80:	add	x0, x0, #0xe58
  40ca84:	bl	408d8c <nftw@plt+0x620c>
  40ca88:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca8c:	add	x2, x2, #0xfe0
  40ca90:	mov	w1, #0x705                 	// #1797
  40ca94:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ca98:	add	x0, x0, #0xe58
  40ca9c:	bl	408d8c <nftw@plt+0x620c>
  40caa0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40caa4:	add	x2, x2, #0xfe0
  40caa8:	mov	w1, #0x706                 	// #1798
  40caac:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40cab0:	add	x0, x0, #0xe58
  40cab4:	bl	408d8c <nftw@plt+0x620c>
  40cab8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40cabc:	add	x2, x2, #0xff0
  40cac0:	mov	w1, #0x732                 	// #1842
  40cac4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40cac8:	add	x0, x0, #0xe58
  40cacc:	bl	408d8c <nftw@plt+0x620c>
  40cad0:	ldr	x26, [sp, #112]
  40cad4:	ldr	w0, [sp, #444]
  40cad8:	str	w0, [sp, #264]
  40cadc:	cbz	x19, 40ce84 <nftw@plt+0xa304>
  40cae0:	ldr	w0, [x19, #4]
  40cae4:	cbz	w0, 40ce34 <nftw@plt+0xa2b4>
  40cae8:	mov	w1, #0x20                  	// #32
  40caec:	add	x0, sp, #0x128
  40caf0:	bl	40a380 <nftw@plt+0x7800>
  40caf4:	mov	w21, #0x0                   	// #0
  40caf8:	mov	w25, #0x1                   	// #1
  40cafc:	mov	w27, #0xfffffffe            	// #-2
  40cb00:	b	40cc34 <nftw@plt+0xa0b4>
  40cb04:	mov	w3, w25
  40cb08:	ldr	w2, [x20, #8]
  40cb0c:	add	x1, sp, #0x108
  40cb10:	add	x0, sp, #0x128
  40cb14:	bl	40bad8 <nftw@plt+0x8f58>
  40cb18:	mov	w1, w27
  40cb1c:	mov	x0, x26
  40cb20:	bl	40b950 <nftw@plt+0x8dd0>
  40cb24:	ldr	x1, [x20, #16]
  40cb28:	ldr	x0, [sp, #304]
  40cb2c:	bl	40f9f8 <nftw@plt+0xce78>
  40cb30:	mov	w1, #0xffffffff            	// #-1
  40cb34:	mov	x0, x26
  40cb38:	bl	40b950 <nftw@plt+0x8dd0>
  40cb3c:	ldr	x1, [x20, #24]
  40cb40:	ldr	w0, [sp, #264]
  40cb44:	add	w0, w0, w1
  40cb48:	str	w0, [sp, #264]
  40cb4c:	b	40cc30 <nftw@plt+0xa0b0>
  40cb50:	ldr	w2, [x1, #4]
  40cb54:	cmp	w23, w2
  40cb58:	b.ne	40cc8c <nftw@plt+0xa10c>  // b.any
  40cb5c:	ldr	w2, [x1, #8]
  40cb60:	ldr	w4, [sp, #100]
  40cb64:	cmp	w4, w2
  40cb68:	b.ne	40cc8c <nftw@plt+0xa10c>  // b.any
  40cb6c:	ldr	w2, [x1, #12]
  40cb70:	cmp	w22, w2
  40cb74:	b.ne	40cc8c <nftw@plt+0xa10c>  // b.any
  40cb78:	ldr	x0, [x20, #24]
  40cb7c:	cbz	x0, 40cbcc <nftw@plt+0xa04c>
  40cb80:	mov	w3, w25
  40cb84:	mov	w2, w23
  40cb88:	add	x1, sp, #0x108
  40cb8c:	add	x0, sp, #0x128
  40cb90:	bl	40bad8 <nftw@plt+0x8f58>
  40cb94:	mov	w1, w27
  40cb98:	mov	x0, x26
  40cb9c:	bl	40b950 <nftw@plt+0x8dd0>
  40cba0:	ldr	x1, [x20, #16]
  40cba4:	ldr	x0, [sp, #304]
  40cba8:	bl	40f9f8 <nftw@plt+0xce78>
  40cbac:	mov	w1, #0xffffffff            	// #-1
  40cbb0:	mov	x0, x26
  40cbb4:	bl	40b950 <nftw@plt+0x8dd0>
  40cbb8:	ldr	x1, [x20, #24]
  40cbbc:	ldr	w0, [sp, #264]
  40cbc0:	add	w0, w0, w1
  40cbc4:	str	w0, [sp, #264]
  40cbc8:	b	40cc30 <nftw@plt+0xa0b0>
  40cbcc:	mov	w3, w25
  40cbd0:	mov	w2, w23
  40cbd4:	add	x1, sp, #0x108
  40cbd8:	add	x0, sp, #0x128
  40cbdc:	bl	40bad8 <nftw@plt+0x8f58>
  40cbe0:	mov	w1, #0xfffffffd            	// #-3
  40cbe4:	mov	x0, x26
  40cbe8:	bl	40b950 <nftw@plt+0x8dd0>
  40cbec:	ldr	w0, [sp, #264]
  40cbf0:	cmp	w22, w0
  40cbf4:	b.lt	40cc1c <nftw@plt+0xa09c>  // b.tstop
  40cbf8:	mov	w24, #0x2d                  	// #45
  40cbfc:	mov	w1, w24
  40cc00:	ldr	x0, [sp, #304]
  40cc04:	bl	40f400 <nftw@plt+0xc880>
  40cc08:	ldr	w0, [sp, #264]
  40cc0c:	add	w0, w0, #0x1
  40cc10:	str	w0, [sp, #264]
  40cc14:	cmp	w22, w0
  40cc18:	b.ge	40cbfc <nftw@plt+0xa07c>  // b.tcont
  40cc1c:	mov	w1, #0xffffffff            	// #-1
  40cc20:	mov	x0, x26
  40cc24:	bl	40b950 <nftw@plt+0x8dd0>
  40cc28:	ldr	x0, [x20, #24]
  40cc2c:	cbnz	x0, 40cb80 <nftw@plt+0xa000>
  40cc30:	add	w21, w21, #0x1
  40cc34:	ldr	w0, [x19, #4]
  40cc38:	cmp	w0, w21
  40cc3c:	b.ls	40ce34 <nftw@plt+0xa2b4>  // b.plast
  40cc40:	add	x0, x19, w21, uxtw #3
  40cc44:	ldr	x20, [x0, #8]
  40cc48:	ldr	w23, [x20]
  40cc4c:	ldr	w22, [x20, #4]
  40cc50:	add	w0, w22, #0x1
  40cc54:	cmp	w23, w0
  40cc58:	b.eq	40cb04 <nftw@plt+0x9f84>  // b.none
  40cc5c:	ldr	x0, [sp, #416]
  40cc60:	cbz	x0, 40cbcc <nftw@plt+0xa04c>
  40cc64:	add	x1, x0, #0x8
  40cc68:	ldr	w0, [x0, #4]
  40cc6c:	add	x0, x0, x0, lsl #2
  40cc70:	add	x0, x1, x0, lsl #3
  40cc74:	cmp	x0, x1
  40cc78:	b.eq	40cbcc <nftw@plt+0xa04c>  // b.none
  40cc7c:	ldr	w2, [x1]
  40cc80:	ldr	w4, [sp, #100]
  40cc84:	cmp	w4, w2
  40cc88:	b.eq	40cb50 <nftw@plt+0x9fd0>  // b.none
  40cc8c:	add	x1, x1, #0x28
  40cc90:	b	40cc74 <nftw@plt+0xa0f4>
  40cc94:	str	wzr, [x19, #4]
  40cc98:	b	40cde4 <nftw@plt+0xa264>
  40cc9c:	ldr	x1, [sp, #184]
  40cca0:	ldr	x0, [sp, #152]
  40cca4:	ldr	x0, [x0]
  40cca8:	bl	40f040 <nftw@plt+0xc4c0>
  40ccac:	ldr	x0, [sp, #432]
  40ccb0:	cbz	x0, 40ccc0 <nftw@plt+0xa140>
  40ccb4:	ldrsb	w1, [x0, #3]
  40ccb8:	tbnz	w1, #31, 40cd00 <nftw@plt+0xa180>
  40ccbc:	bl	402910 <free@plt>
  40ccc0:	ldr	x0, [sp, #424]
  40ccc4:	cbz	x0, 40ccd4 <nftw@plt+0xa154>
  40ccc8:	ldrsb	w1, [x0, #3]
  40cccc:	tbnz	w1, #31, 40cd08 <nftw@plt+0xa188>
  40ccd0:	bl	402910 <free@plt>
  40ccd4:	ldr	x0, [sp, #416]
  40ccd8:	cbz	x0, 40cce8 <nftw@plt+0xa168>
  40ccdc:	ldrsb	w1, [x0, #3]
  40cce0:	tbnz	w1, #31, 40cd10 <nftw@plt+0xa190>
  40cce4:	bl	402910 <free@plt>
  40cce8:	add	x0, sp, #0x160
  40ccec:	bl	40a41c <nftw@plt+0x789c>
  40ccf0:	ldp	x23, x24, [sp, #48]
  40ccf4:	ldp	x25, x26, [sp, #64]
  40ccf8:	ldp	x27, x28, [sp, #80]
  40ccfc:	b	40bc9c <nftw@plt+0x911c>
  40cd00:	str	wzr, [x0, #4]
  40cd04:	b	40ccc0 <nftw@plt+0xa140>
  40cd08:	str	wzr, [x0, #4]
  40cd0c:	b	40ccd4 <nftw@plt+0xa154>
  40cd10:	str	wzr, [x0, #4]
  40cd14:	b	40cce8 <nftw@plt+0xa168>
  40cd18:	mov	x19, x0
  40cd1c:	b	40c78c <nftw@plt+0x9c0c>
  40cd20:	ldr	x28, [x20, #8]
  40cd24:	ldr	x27, [x20, #16]
  40cd28:	mov	x0, #0x28                  	// #40
  40cd2c:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40cd30:	mov	x20, x0
  40cd34:	str	w25, [x0]
  40cd38:	str	w26, [x0, #4]
  40cd3c:	str	w21, [x0, #8]
  40cd40:	str	w22, [x0, #12]
  40cd44:	mov	x0, x28
  40cd48:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  40cd4c:	str	x0, [x20, #16]
  40cd50:	str	x27, [x20, #24]
  40cd54:	add	x27, x27, #0x1
  40cd58:	str	x27, [x20, #32]
  40cd5c:	mov	w21, #0x0                   	// #0
  40cd60:	mov	w1, #0x1                   	// #1
  40cd64:	cmp	w1, #0x4
  40cd68:	mov	w0, #0x4                   	// #4
  40cd6c:	csel	w22, w1, w0, cs  // cs = hs, nlast
  40cd70:	csel	w1, w1, w0, cs  // cs = hs, nlast
  40cd74:	add	x1, x1, #0x1
  40cd78:	lsl	x1, x1, #3
  40cd7c:	mov	x0, #0x0                   	// #0
  40cd80:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40cd84:	ldr	w1, [x0]
  40cd88:	bfxil	w1, w22, #0, #31
  40cd8c:	str	w1, [x0]
  40cd90:	ubfx	x1, x1, #24, #7
  40cd94:	strb	w1, [x0, #3]
  40cd98:	str	wzr, [x0, #4]
  40cd9c:	cbz	w24, 40cd18 <nftw@plt+0xa198>
  40cda0:	cbz	w21, 40cdc8 <nftw@plt+0xa248>
  40cda4:	sub	w2, w21, #0x1
  40cda8:	add	x2, x2, #0x2
  40cdac:	lsl	x2, x2, #3
  40cdb0:	mov	x1, #0x8                   	// #8
  40cdb4:	ldr	x3, [x19, x1]
  40cdb8:	str	x3, [x0, x1]
  40cdbc:	add	x1, x1, #0x8
  40cdc0:	cmp	x2, x1
  40cdc4:	b.ne	40cdb4 <nftw@plt+0xa234>  // b.any
  40cdc8:	str	w21, [x0, #4]
  40cdcc:	mov	x19, x0
  40cdd0:	b	40c78c <nftw@plt+0x9c0c>
  40cdd4:	ldrsb	w0, [x19, #3]
  40cdd8:	tbnz	w0, #31, 40cc94 <nftw@plt+0xa114>
  40cddc:	mov	x0, x19
  40cde0:	bl	402910 <free@plt>
  40cde4:	ldr	x0, [sp, #104]
  40cde8:	add	x0, x0, #0x1
  40cdec:	str	x0, [sp, #104]
  40cdf0:	ldr	x1, [sp, #120]
  40cdf4:	cmp	x1, x0
  40cdf8:	b.lt	40bd64 <nftw@plt+0x91e4>  // b.tstop
  40cdfc:	ldr	x0, [sp, #104]
  40ce00:	mov	w1, w0
  40ce04:	str	w0, [sp, #100]
  40ce08:	str	w0, [sp, #96]
  40ce0c:	ldr	x0, [sp, #320]
  40ce10:	bl	4149d0 <nftw@plt+0x11e50>
  40ce14:	mov	x20, x0
  40ce18:	mov	x22, x1
  40ce1c:	mov	w21, #0x0                   	// #0
  40ce20:	cbz	x0, 40cde4 <nftw@plt+0xa264>
  40ce24:	mov	w24, #0xffffffff            	// #-1
  40ce28:	mov	w27, #0x2b                  	// #43
  40ce2c:	mov	w25, #0x2b                  	// #43
  40ce30:	b	40bf9c <nftw@plt+0x941c>
  40ce34:	mov	w3, #0x0                   	// #0
  40ce38:	mov	w2, #0x0                   	// #0
  40ce3c:	add	x1, sp, #0x108
  40ce40:	add	x0, sp, #0x128
  40ce44:	bl	40bad8 <nftw@plt+0x8f58>
  40ce48:	mov	w20, #0x0                   	// #0
  40ce4c:	mov	x22, #0x28                  	// #40
  40ce50:	ldr	w0, [x19, #4]
  40ce54:	cmp	w20, w0
  40ce58:	b.cs	40cdd4 <nftw@plt+0xa254>  // b.hs, b.nlast
  40ce5c:	add	x0, x19, w20, uxtw #3
  40ce60:	ldr	x21, [x0, #8]
  40ce64:	cbz	x21, 40ce7c <nftw@plt+0xa2fc>
  40ce68:	ldr	x0, [x21, #16]
  40ce6c:	bl	402910 <free@plt>
  40ce70:	mov	x1, x22
  40ce74:	mov	x0, x21
  40ce78:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  40ce7c:	add	w20, w20, #0x1
  40ce80:	b	40ce50 <nftw@plt+0xa2d0>
  40ce84:	mov	w3, #0x0                   	// #0
  40ce88:	mov	w2, #0x0                   	// #0
  40ce8c:	add	x1, sp, #0x108
  40ce90:	add	x0, sp, #0x128
  40ce94:	bl	40bad8 <nftw@plt+0x8f58>
  40ce98:	b	40cde4 <nftw@plt+0xa264>
  40ce9c:	tbz	w24, #31, 40c47c <nftw@plt+0x98fc>
  40cea0:	add	x20, x19, #0x10
  40cea4:	mov	w21, #0x0                   	// #0
  40cea8:	ldrb	w0, [x20, #8]
  40ceac:	cbnz	w0, 40c5ec <nftw@plt+0x9a6c>
  40ceb0:	add	w21, w21, #0x1
  40ceb4:	add	x20, x20, #0x28
  40ceb8:	ldr	w0, [x19, #4]
  40cebc:	cmp	w0, w21
  40cec0:	b.hi	40cea8 <nftw@plt+0xa328>  // b.pmore
  40cec4:	b	40c464 <nftw@plt+0x98e4>
  40cec8:	str	w28, [sp, #128]
  40cecc:	mov	w20, #0x0                   	// #0
  40ced0:	mov	w0, w24
  40ced4:	cmp	w0, #0x4
  40ced8:	csel	w1, w0, w23, cs  // cs = hs, nlast
  40cedc:	str	w1, [sp, #140]
  40cee0:	csel	w0, w0, w23, cs  // cs = hs, nlast
  40cee4:	add	x0, x0, x0, lsl #2
  40cee8:	lsl	x1, x0, #3
  40ceec:	add	x1, x1, #0x8
  40cef0:	mov	x0, #0x0                   	// #0
  40cef4:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40cef8:	ldr	w1, [x0]
  40cefc:	ldr	w2, [sp, #140]
  40cf00:	bfxil	w1, w2, #0, #31
  40cf04:	str	w1, [x0]
  40cf08:	ubfx	x1, x1, #24, #7
  40cf0c:	strb	w1, [x0, #3]
  40cf10:	str	wzr, [x0, #4]
  40cf14:	ldr	w1, [sp, #128]
  40cf18:	cbz	w1, 40cf6c <nftw@plt+0xa3ec>
  40cf1c:	cbz	w20, 40cf60 <nftw@plt+0xa3e0>
  40cf20:	sub	w1, w20, #0x1
  40cf24:	add	x1, x1, x1, lsl #2
  40cf28:	lsl	x6, x1, #3
  40cf2c:	add	x6, x6, #0x30
  40cf30:	mov	x1, #0x8                   	// #8
  40cf34:	add	x2, x0, x1
  40cf38:	add	x3, x19, x1
  40cf3c:	ldp	x4, x5, [x3]
  40cf40:	stp	x4, x5, [x2]
  40cf44:	ldp	x4, x5, [x3, #16]
  40cf48:	stp	x4, x5, [x2, #16]
  40cf4c:	ldr	x3, [x3, #32]
  40cf50:	str	x3, [x2, #32]
  40cf54:	add	x1, x1, #0x28
  40cf58:	cmp	x1, x6
  40cf5c:	b.ne	40cf34 <nftw@plt+0xa3b4>  // b.any
  40cf60:	str	w20, [x0, #4]
  40cf64:	mov	x19, x0
  40cf68:	b	40d0b0 <nftw@plt+0xa530>
  40cf6c:	mov	x19, x0
  40cf70:	b	40d0b0 <nftw@plt+0xa530>
  40cf74:	tbnz	w22, #31, 40c148 <nftw@plt+0x95c8>
  40cf78:	mov	w21, w22
  40cf7c:	b	40c074 <nftw@plt+0x94f4>
  40cf80:	ldr	x20, [sp, #416]
  40cf84:	mov	x19, #0x0                   	// #0
  40cf88:	mov	w22, #0x0                   	// #0
  40cf8c:	mov	w23, #0x4                   	// #4
  40cf90:	ldr	w28, [sp, #160]
  40cf94:	mov	w24, #0x1                   	// #1
  40cf98:	mov	w27, w22
  40cf9c:	ldr	w0, [x20, #4]
  40cfa0:	cmp	w0, w22
  40cfa4:	b.ls	40d0f8 <nftw@plt+0xa578>  // b.plast
  40cfa8:	ubfiz	x0, x22, #2, #32
  40cfac:	add	x0, x0, w22, uxtw
  40cfb0:	add	x0, x20, x0, lsl #3
  40cfb4:	ldr	x0, [x0, #40]
  40cfb8:	cbz	x0, 40d0ec <nftw@plt+0xa56c>
  40cfbc:	ubfiz	x1, x27, #2, #32
  40cfc0:	add	x1, x1, w22, uxtw
  40cfc4:	add	x1, x20, x1, lsl #3
  40cfc8:	ldr	w1, [x1, #28]
  40cfcc:	ldr	w2, [sp, #100]
  40cfd0:	cmp	w1, w2
  40cfd4:	b.ne	40d0ec <nftw@plt+0xa56c>  // b.any
  40cfd8:	ubfiz	x1, x27, #2, #32
  40cfdc:	add	x1, x1, w22, uxtw
  40cfe0:	add	x1, x20, x1, lsl #3
  40cfe4:	ldr	w2, [x1, #32]
  40cfe8:	ldr	w1, [sp, #444]
  40cfec:	cmp	w2, w1
  40cff0:	b.le	40d0ec <nftw@plt+0xa56c>
  40cff4:	ubfiz	x1, x27, #2, #32
  40cff8:	add	x1, x1, w22, uxtw
  40cffc:	add	x1, x20, x1, lsl #3
  40d000:	ldr	x2, [x0]
  40d004:	ldr	x2, [x2, #16]
  40d008:	ldr	w1, [x1, #36]
  40d00c:	blr	x2
  40d010:	mov	x21, x0
  40d014:	and	w25, w1, #0xff
  40d018:	cbz	x0, 40d0ec <nftw@plt+0xa56c>
  40d01c:	ubfiz	x0, x27, #2, #32
  40d020:	add	x27, x0, w22, uxtw
  40d024:	add	x20, x20, x27, lsl #3
  40d028:	ldr	w27, [x20, #32]
  40d02c:	mov	x0, x21
  40d030:	bl	4024f0 <strlen@plt>
  40d034:	str	x0, [sp, #112]
  40d038:	cbz	x19, 40cec8 <nftw@plt+0xa348>
  40d03c:	ldr	w20, [x19, #4]
  40d040:	ldr	w0, [x19]
  40d044:	ubfx	x0, x0, #0, #31
  40d048:	cmp	w0, w20
  40d04c:	b.ne	40d0b0 <nftw@plt+0xa530>  // b.any
  40d050:	ldrsb	w0, [x19, #3]
  40d054:	tbnz	w0, #31, 40c3d8 <nftw@plt+0x9858>
  40d058:	ldr	w1, [x19, #4]
  40d05c:	ldr	w0, [x19]
  40d060:	add	w1, w1, #0x1
  40d064:	and	w0, w0, #0x7fffffff
  40d068:	bl	4120a8 <nftw@plt+0xf528>
  40d06c:	mov	w20, w0
  40d070:	ldr	w0, [x19, #4]
  40d074:	str	w0, [sp, #128]
  40d078:	ubfiz	x1, x20, #2, #32
  40d07c:	add	x1, x1, w20, uxtw
  40d080:	lsl	x1, x1, #3
  40d084:	add	x1, x1, #0x8
  40d088:	mov	x0, x19
  40d08c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40d090:	mov	x19, x0
  40d094:	ldr	w0, [x0]
  40d098:	bfxil	w0, w20, #0, #31
  40d09c:	str	w0, [x19]
  40d0a0:	ubfx	x0, x0, #24, #7
  40d0a4:	strb	w0, [x19, #3]
  40d0a8:	ldr	w0, [sp, #128]
  40d0ac:	str	w0, [x19, #4]
  40d0b0:	ldr	w0, [x19, #4]
  40d0b4:	add	w1, w0, #0x1
  40d0b8:	str	w1, [x19, #4]
  40d0bc:	ubfiz	x1, x0, #2, #32
  40d0c0:	add	x0, x1, w0, uxtw
  40d0c4:	lsl	x0, x0, #3
  40d0c8:	add	x0, x0, #0x8
  40d0cc:	add	x1, x19, x0
  40d0d0:	str	w22, [x19, x0]
  40d0d4:	str	w27, [x1, #4]
  40d0d8:	str	x21, [x1, #8]
  40d0dc:	strb	w25, [x1, #16]
  40d0e0:	ldr	x0, [sp, #112]
  40d0e4:	str	x0, [x1, #24]
  40d0e8:	str	wzr, [x1, #32]
  40d0ec:	add	w22, w22, #0x1
  40d0f0:	ldr	x20, [sp, #416]
  40d0f4:	cbnz	x20, 40cf98 <nftw@plt+0xa418>
  40d0f8:	cbz	x19, 40d120 <nftw@plt+0xa5a0>
  40d0fc:	ldr	w1, [x19, #4]
  40d100:	cbnz	w1, 40c3e4 <nftw@plt+0x9864>
  40d104:	ldrsb	w0, [x19, #3]
  40d108:	tbnz	w0, #31, 40d120 <nftw@plt+0xa5a0>
  40d10c:	mov	x0, x19
  40d110:	bl	402910 <free@plt>
  40d114:	b	40d120 <nftw@plt+0xa5a0>
  40d118:	ldrb	w0, [sp, #409]
  40d11c:	cbnz	w0, 40cf80 <nftw@plt+0xa400>
  40d120:	ldr	x0, [sp, #320]
  40d124:	str	x0, [sp, #128]
  40d128:	mov	x19, #0x0                   	// #0
  40d12c:	mov	w23, #0x0                   	// #0
  40d130:	str	x26, [sp, #112]
  40d134:	b	40c7a4 <nftw@plt+0x9c24>
  40d138:	sub	w0, w0, w1
  40d13c:	ret
  40d140:	stp	x29, x30, [sp, #-48]!
  40d144:	mov	x29, sp
  40d148:	stp	x19, x20, [sp, #16]
  40d14c:	stp	x21, x22, [sp, #32]
  40d150:	mov	x21, x0
  40d154:	mov	x20, x2
  40d158:	mov	w22, w3
  40d15c:	and	w1, w1, #0xff
  40d160:	bl	40f400 <nftw@plt+0xc880>
  40d164:	cmp	w22, #0x0
  40d168:	b.le	40d190 <nftw@plt+0xa610>
  40d16c:	mov	x19, x20
  40d170:	add	x20, x20, #0x1
  40d174:	sub	w22, w22, #0x1
  40d178:	add	x20, x20, x22
  40d17c:	ldrb	w1, [x19], #1
  40d180:	mov	x0, x21
  40d184:	bl	40f400 <nftw@plt+0xc880>
  40d188:	cmp	x19, x20
  40d18c:	b.ne	40d17c <nftw@plt+0xa5fc>  // b.any
  40d190:	mov	w1, #0xa                   	// #10
  40d194:	mov	x0, x21
  40d198:	bl	40f400 <nftw@plt+0xc880>
  40d19c:	ldp	x19, x20, [sp, #16]
  40d1a0:	ldp	x21, x22, [sp, #32]
  40d1a4:	ldp	x29, x30, [sp], #48
  40d1a8:	ret
  40d1ac:	mov	x1, x0
  40d1b0:	mov	w2, #0x1                   	// #1
  40d1b4:	strb	w2, [x1], #8
  40d1b8:	str	xzr, [x0, #8]
  40d1bc:	adrp	x0, 402000 <memcpy@plt-0x490>
  40d1c0:	add	x0, x0, #0x890
  40d1c4:	str	x0, [x1, #8]
  40d1c8:	str	xzr, [x1, #16]
  40d1cc:	adrp	x0, 40d000 <nftw@plt+0xa480>
  40d1d0:	add	x0, x0, #0xa74
  40d1d4:	str	x0, [x1, #24]
  40d1d8:	ret
  40d1dc:	ldrb	w3, [x0]
  40d1e0:	cbnz	w3, 40d1e8 <nftw@plt+0xa668>
  40d1e4:	ret
  40d1e8:	stp	x29, x30, [sp, #-48]!
  40d1ec:	mov	x29, sp
  40d1f0:	stp	x19, x20, [sp, #16]
  40d1f4:	and	w2, w2, #0xff
  40d1f8:	str	x1, [sp, #32]
  40d1fc:	strb	w2, [sp, #40]
  40d200:	ldr	x20, [x0, #8]
  40d204:	mov	x19, #0x0                   	// #0
  40d208:	b	40d234 <nftw@plt+0xa6b4>
  40d20c:	cbz	x19, 40d244 <nftw@plt+0xa6c4>
  40d210:	ldr	x20, [x19, #32]
  40d214:	add	x2, sp, #0x20
  40d218:	ldr	x1, [x19, #8]
  40d21c:	ldr	x0, [x19]
  40d220:	bl	40ec28 <nftw@plt+0xc0a8>
  40d224:	cbnz	w0, 40d244 <nftw@plt+0xa6c4>
  40d228:	ldr	x0, [x19, #24]
  40d22c:	mov	x19, x20
  40d230:	mov	x20, x0
  40d234:	cbz	x20, 40d20c <nftw@plt+0xa68c>
  40d238:	str	x19, [x20, #32]
  40d23c:	ldr	x0, [x20, #16]
  40d240:	b	40d22c <nftw@plt+0xa6ac>
  40d244:	ldp	x19, x20, [sp, #16]
  40d248:	ldp	x29, x30, [sp], #48
  40d24c:	ret
  40d250:	mov	x2, x0
  40d254:	str	x1, [x2], #8
  40d258:	str	xzr, [x0, #8]
  40d25c:	adrp	x1, 40d000 <nftw@plt+0xa480>
  40d260:	add	x1, x1, #0x138
  40d264:	str	x1, [x2, #8]
  40d268:	str	xzr, [x2, #16]
  40d26c:	adrp	x1, 40d000 <nftw@plt+0xa480>
  40d270:	add	x1, x1, #0x3b4
  40d274:	str	x1, [x2, #24]
  40d278:	mov	w1, #0xffffffff            	// #-1
  40d27c:	str	w1, [x0, #40]
  40d280:	ret
  40d284:	stp	x29, x30, [sp, #-32]!
  40d288:	mov	x29, sp
  40d28c:	stp	x19, x20, [sp, #16]
  40d290:	cbz	x1, 40d2c4 <nftw@plt+0xa744>
  40d294:	mov	x19, x0
  40d298:	mov	x20, x1
  40d29c:	ldr	w0, [x0, #40]
  40d2a0:	cmn	w0, #0x1
  40d2a4:	b.eq	40d2dc <nftw@plt+0xa75c>  // b.none
  40d2a8:	ldr	x0, [x19]
  40d2ac:	bl	41498c <nftw@plt+0x11e0c>
  40d2b0:	strb	w0, [x20]
  40d2b4:	ldr	w0, [x19, #40]
  40d2b8:	ldp	x19, x20, [sp, #16]
  40d2bc:	ldp	x29, x30, [sp], #32
  40d2c0:	ret
  40d2c4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d2c8:	add	x2, x2, #0x8
  40d2cc:	mov	w1, #0x296                 	// #662
  40d2d0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d2d4:	add	x0, x0, #0x18
  40d2d8:	bl	408d8c <nftw@plt+0x620c>
  40d2dc:	str	wzr, [x19, #40]
  40d2e0:	ldr	w1, [x19, #40]
  40d2e4:	add	w1, w1, #0x1
  40d2e8:	ldr	x0, [x19]
  40d2ec:	bl	4149d0 <nftw@plt+0x11e50>
  40d2f0:	cbz	x0, 40d2a8 <nftw@plt+0xa728>
  40d2f4:	ldr	w0, [x19, #40]
  40d2f8:	add	w0, w0, #0x1
  40d2fc:	str	w0, [x19, #40]
  40d300:	b	40d2e0 <nftw@plt+0xa760>
  40d304:	stp	x29, x30, [sp, #-48]!
  40d308:	mov	x29, sp
  40d30c:	stp	x19, x20, [sp, #16]
  40d310:	mov	x19, x0
  40d314:	ldr	x0, [x0, #8]
  40d318:	bl	402910 <free@plt>
  40d31c:	ldr	x0, [x19, #32]
  40d320:	cbz	x0, 40d394 <nftw@plt+0xa814>
  40d324:	stp	x21, x22, [sp, #32]
  40d328:	mov	w20, #0x0                   	// #0
  40d32c:	mov	x22, #0x10                  	// #16
  40d330:	ldr	w1, [x0, #4]
  40d334:	cmp	w1, w20
  40d338:	b.ls	40d384 <nftw@plt+0xa804>  // b.plast
  40d33c:	add	x1, x0, w20, uxtw #3
  40d340:	ldr	x21, [x1, #8]
  40d344:	cbz	x21, 40d35c <nftw@plt+0xa7dc>
  40d348:	ldr	x0, [x21]
  40d34c:	bl	402910 <free@plt>
  40d350:	mov	x1, x22
  40d354:	mov	x0, x21
  40d358:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  40d35c:	add	w20, w20, #0x1
  40d360:	ldr	x0, [x19, #32]
  40d364:	cbnz	x0, 40d330 <nftw@plt+0xa7b0>
  40d368:	ldp	x21, x22, [sp, #32]
  40d36c:	b	40d394 <nftw@plt+0xa814>
  40d370:	str	wzr, [x0, #4]
  40d374:	ldp	x21, x22, [sp, #32]
  40d378:	b	40d394 <nftw@plt+0xa814>
  40d37c:	str	wzr, [x0, #4]
  40d380:	b	40d3a8 <nftw@plt+0xa828>
  40d384:	ldrsb	w1, [x0, #3]
  40d388:	tbnz	w1, #31, 40d370 <nftw@plt+0xa7f0>
  40d38c:	bl	402910 <free@plt>
  40d390:	ldp	x21, x22, [sp, #32]
  40d394:	ldr	x0, [x19, #24]
  40d398:	cbz	x0, 40d3a8 <nftw@plt+0xa828>
  40d39c:	ldrsb	w1, [x0, #3]
  40d3a0:	tbnz	w1, #31, 40d37c <nftw@plt+0xa7fc>
  40d3a4:	bl	402910 <free@plt>
  40d3a8:	ldp	x19, x20, [sp, #16]
  40d3ac:	ldp	x29, x30, [sp], #48
  40d3b0:	ret
  40d3b4:	cbz	x0, 40d3e4 <nftw@plt+0xa864>
  40d3b8:	stp	x29, x30, [sp, #-32]!
  40d3bc:	mov	x29, sp
  40d3c0:	str	x19, [sp, #16]
  40d3c4:	mov	x19, x0
  40d3c8:	bl	40d304 <nftw@plt+0xa784>
  40d3cc:	mov	x1, #0x28                  	// #40
  40d3d0:	mov	x0, x19
  40d3d4:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  40d3d8:	ldr	x19, [sp, #16]
  40d3dc:	ldp	x29, x30, [sp], #32
  40d3e0:	ret
  40d3e4:	ret
  40d3e8:	ldr	x0, [x0, #24]
  40d3ec:	cbz	x0, 40d424 <nftw@plt+0xa8a4>
  40d3f0:	add	x2, x0, #0x8
  40d3f4:	ldr	w3, [x0, #4]
  40d3f8:	add	x3, x2, x3, lsl #3
  40d3fc:	mov	w0, w1
  40d400:	cmp	x2, x3
  40d404:	b.eq	40d428 <nftw@plt+0xa8a8>  // b.none
  40d408:	ldr	w1, [x2]
  40d40c:	cmp	w1, w0
  40d410:	b.gt	40d41c <nftw@plt+0xa89c>
  40d414:	ldr	w1, [x2, #4]
  40d418:	add	w0, w0, w1
  40d41c:	add	x2, x2, #0x8
  40d420:	b	40d400 <nftw@plt+0xa880>
  40d424:	mov	w0, w1
  40d428:	ret
  40d42c:	ldr	x0, [x0, #32]
  40d430:	cbz	x0, 40d440 <nftw@plt+0xa8c0>
  40d434:	ldr	w0, [x0, #4]
  40d438:	add	w0, w0, #0x1
  40d43c:	ret
  40d440:	mov	w0, #0x0                   	// #0
  40d444:	b	40d438 <nftw@plt+0xa8b8>
  40d448:	stp	x29, x30, [sp, #-48]!
  40d44c:	mov	x29, sp
  40d450:	stp	x19, x20, [sp, #16]
  40d454:	mov	x19, x0
  40d458:	mov	x20, x1
  40d45c:	ldr	x2, [x0, #32]
  40d460:	cbz	x2, 40d4ac <nftw@plt+0xa92c>
  40d464:	str	x21, [sp, #32]
  40d468:	mov	w21, #0x0                   	// #0
  40d46c:	ldr	w0, [x2, #4]
  40d470:	cmp	w0, w21
  40d474:	b.ls	40d4a8 <nftw@plt+0xa928>  // b.plast
  40d478:	add	x2, x2, w21, uxtw #3
  40d47c:	ldr	x0, [x2, #8]
  40d480:	ldr	x1, [x0]
  40d484:	mov	x0, x20
  40d488:	bl	40f9f8 <nftw@plt+0xce78>
  40d48c:	mov	x0, x20
  40d490:	bl	40f39c <nftw@plt+0xc81c>
  40d494:	add	w21, w21, #0x1
  40d498:	ldr	x2, [x19, #32]
  40d49c:	cbnz	x2, 40d46c <nftw@plt+0xa8ec>
  40d4a0:	ldr	x21, [sp, #32]
  40d4a4:	b	40d4ac <nftw@plt+0xa92c>
  40d4a8:	ldr	x21, [sp, #32]
  40d4ac:	ldr	x1, [x19, #8]
  40d4b0:	mov	x0, x20
  40d4b4:	bl	40f9f8 <nftw@plt+0xce78>
  40d4b8:	ldp	x19, x20, [sp, #16]
  40d4bc:	ldp	x29, x30, [sp], #48
  40d4c0:	ret
  40d4c4:	stp	x29, x30, [sp, #-48]!
  40d4c8:	mov	x29, sp
  40d4cc:	stp	x19, x20, [sp, #16]
  40d4d0:	mov	x19, x0
  40d4d4:	mov	x20, x1
  40d4d8:	ldr	x0, [x0, #32]
  40d4dc:	cbz	x0, 40d52c <nftw@plt+0xa9ac>
  40d4e0:	stp	x21, x22, [sp, #32]
  40d4e4:	mov	w21, #0x0                   	// #0
  40d4e8:	mov	w22, #0x2b                  	// #43
  40d4ec:	ldr	w1, [x0, #4]
  40d4f0:	cmp	w1, w21
  40d4f4:	b.ls	40d528 <nftw@plt+0xa9a8>  // b.plast
  40d4f8:	add	x0, x0, w21, uxtw #3
  40d4fc:	ldr	x0, [x0, #8]
  40d500:	ldr	w3, [x0, #8]
  40d504:	ldr	x2, [x0]
  40d508:	mov	w1, w22
  40d50c:	mov	x0, x20
  40d510:	bl	40d140 <nftw@plt+0xa5c0>
  40d514:	add	w21, w21, #0x1
  40d518:	ldr	x0, [x19, #32]
  40d51c:	cbnz	x0, 40d4ec <nftw@plt+0xa96c>
  40d520:	ldp	x21, x22, [sp, #32]
  40d524:	b	40d52c <nftw@plt+0xa9ac>
  40d528:	ldp	x21, x22, [sp, #32]
  40d52c:	ldr	x0, [x19, #24]
  40d530:	cbz	x0, 40d53c <nftw@plt+0xa9bc>
  40d534:	ldr	w0, [x0, #4]
  40d538:	cbnz	w0, 40d55c <nftw@plt+0xa9dc>
  40d53c:	ldr	w3, [x19, #16]
  40d540:	ldr	x2, [x19, #8]
  40d544:	mov	w1, #0x20                  	// #32
  40d548:	mov	x0, x20
  40d54c:	bl	40d140 <nftw@plt+0xa5c0>
  40d550:	ldp	x19, x20, [sp, #16]
  40d554:	ldp	x29, x30, [sp], #48
  40d558:	ret
  40d55c:	ldr	w3, [x19, #16]
  40d560:	ldr	x2, [x19, #8]
  40d564:	mov	w1, #0x2b                  	// #43
  40d568:	mov	x0, x20
  40d56c:	bl	40d140 <nftw@plt+0xa5c0>
  40d570:	b	40d550 <nftw@plt+0xa9d0>
  40d574:	stp	x29, x30, [sp, #-32]!
  40d578:	mov	x29, sp
  40d57c:	stp	x19, x20, [sp, #16]
  40d580:	mov	x20, x0
  40d584:	ldr	w0, [x0, #20]
  40d588:	cmp	w0, w1
  40d58c:	b.le	40d59c <nftw@plt+0xaa1c>
  40d590:	ldp	x19, x20, [sp, #16]
  40d594:	ldp	x29, x30, [sp], #32
  40d598:	ret
  40d59c:	add	w1, w1, #0x1
  40d5a0:	lsl	w19, w1, #1
  40d5a4:	sxtw	x1, w19
  40d5a8:	ldr	x0, [x20, #8]
  40d5ac:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40d5b0:	str	x0, [x20, #8]
  40d5b4:	str	w19, [x20, #20]
  40d5b8:	b	40d590 <nftw@plt+0xaa10>
  40d5bc:	ldr	w1, [x0, #16]
  40d5c0:	ldr	w2, [x0, #20]
  40d5c4:	cmp	w1, w2
  40d5c8:	b.ge	40d5d8 <nftw@plt+0xaa58>  // b.tcont
  40d5cc:	ldr	x0, [x0, #8]
  40d5d0:	strb	wzr, [x0, w1, sxtw]
  40d5d4:	ret
  40d5d8:	stp	x29, x30, [sp, #-16]!
  40d5dc:	mov	x29, sp
  40d5e0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40d5e4:	add	x2, x2, #0xff0
  40d5e8:	mov	w1, #0x36b                 	// #875
  40d5ec:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d5f0:	add	x0, x0, #0x18
  40d5f4:	bl	408d8c <nftw@plt+0x620c>
  40d5f8:	stp	x29, x30, [sp, #-32]!
  40d5fc:	mov	x29, sp
  40d600:	stp	x19, x20, [sp, #16]
  40d604:	mov	x19, x0
  40d608:	mov	x0, x1
  40d60c:	mov	w1, w2
  40d610:	str	w2, [x19]
  40d614:	str	xzr, [x19, #8]
  40d618:	str	wzr, [x19, #16]
  40d61c:	str	wzr, [x19, #20]
  40d620:	str	xzr, [x19, #24]
  40d624:	str	xzr, [x19, #32]
  40d628:	bl	4149d0 <nftw@plt+0x11e50>
  40d62c:	cbz	x0, 40d658 <nftw@plt+0xaad8>
  40d630:	mov	x20, x0
  40d634:	str	w1, [x19, #16]
  40d638:	mov	x0, x19
  40d63c:	bl	40d574 <nftw@plt+0xa9f4>
  40d640:	ldrsw	x2, [x19, #16]
  40d644:	mov	x1, x20
  40d648:	ldr	x0, [x19, #8]
  40d64c:	bl	402490 <memcpy@plt>
  40d650:	mov	x0, x19
  40d654:	bl	40d5bc <nftw@plt+0xaa3c>
  40d658:	ldp	x19, x20, [sp, #16]
  40d65c:	ldp	x29, x30, [sp], #32
  40d660:	ret
  40d664:	stp	x29, x30, [sp, #-96]!
  40d668:	mov	x29, sp
  40d66c:	stp	x19, x20, [sp, #16]
  40d670:	stp	x21, x22, [sp, #32]
  40d674:	stp	x23, x24, [sp, #48]
  40d678:	mov	x19, x0
  40d67c:	mov	w21, w2
  40d680:	mov	x23, x3
  40d684:	mov	w22, w4
  40d688:	cmp	w4, #0x1
  40d68c:	b.le	40d6a0 <nftw@plt+0xab20>
  40d690:	add	x0, x3, w4, sxtw
  40d694:	ldurb	w0, [x0, #-1]
  40d698:	cmp	w0, #0xa
  40d69c:	b.eq	40d708 <nftw@plt+0xab88>  // b.none
  40d6a0:	stp	x25, x26, [sp, #64]
  40d6a4:	mov	x0, x19
  40d6a8:	bl	40d3e8 <nftw@plt+0xa868>
  40d6ac:	mov	w20, w0
  40d6b0:	mov	w1, w21
  40d6b4:	mov	x0, x19
  40d6b8:	bl	40d3e8 <nftw@plt+0xa868>
  40d6bc:	mov	w1, w0
  40d6c0:	sub	w24, w0, #0x1
  40d6c4:	subs	w25, w20, #0x1
  40d6c8:	b.mi	40d868 <nftw@plt+0xace8>  // b.first
  40d6cc:	tbnz	w24, #31, 40d884 <nftw@plt+0xad04>
  40d6d0:	cmp	w20, w0
  40d6d4:	b.gt	40da68 <nftw@plt+0xaee8>
  40d6d8:	ldr	w2, [x19, #16]
  40d6dc:	cmp	w25, w24
  40d6e0:	csel	w3, w25, w24, ge  // ge = tcont
  40d6e4:	mov	w0, #0x0                   	// #0
  40d6e8:	cmp	w2, w3
  40d6ec:	b.ge	40d8a0 <nftw@plt+0xad20>  // b.tcont
  40d6f0:	ldp	x25, x26, [sp, #64]
  40d6f4:	ldp	x19, x20, [sp, #16]
  40d6f8:	ldp	x21, x22, [sp, #32]
  40d6fc:	ldp	x23, x24, [sp, #48]
  40d700:	ldp	x29, x30, [sp], #96
  40d704:	ret
  40d708:	mov	x0, #0x10                  	// #16
  40d70c:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40d710:	mov	x24, x0
  40d714:	sub	w22, w22, #0x1
  40d718:	sxtw	x1, w22
  40d71c:	mov	x0, x23
  40d720:	bl	44a8b8 <_obstack_memory_used@@Base+0x2b4>
  40d724:	str	x0, [x24]
  40d728:	str	w22, [x24, #8]
  40d72c:	ldr	x20, [x19, #32]
  40d730:	cbz	x20, 40d778 <nftw@plt+0xabf8>
  40d734:	ldr	w0, [x20]
  40d738:	ubfx	x0, x0, #0, #31
  40d73c:	ldr	w1, [x20, #4]
  40d740:	cmp	w0, w1
  40d744:	b.ne	40d818 <nftw@plt+0xac98>  // b.any
  40d748:	stp	x25, x26, [sp, #64]
  40d74c:	ldrsb	w0, [x20, #3]
  40d750:	tbnz	w0, #31, 40d764 <nftw@plt+0xabe4>
  40d754:	mov	w23, #0x0                   	// #0
  40d758:	mov	w21, #0x0                   	// #0
  40d75c:	mov	w1, #0x1                   	// #1
  40d760:	b	40d788 <nftw@plt+0xac08>
  40d764:	str	xzr, [x19, #32]
  40d768:	ldr	w21, [x20, #4]
  40d76c:	add	w1, w21, #0x1
  40d770:	mov	w23, #0x1                   	// #1
  40d774:	b	40d788 <nftw@plt+0xac08>
  40d778:	stp	x25, x26, [sp, #64]
  40d77c:	mov	w23, #0x0                   	// #0
  40d780:	mov	w21, #0x0                   	// #0
  40d784:	mov	w1, #0x1                   	// #1
  40d788:	ldr	x0, [x19, #32]
  40d78c:	cbz	x0, 40d838 <nftw@plt+0xacb8>
  40d790:	ldr	w2, [x0, #4]
  40d794:	ldr	w0, [x0]
  40d798:	add	w1, w1, w2
  40d79c:	and	w0, w0, #0x7fffffff
  40d7a0:	bl	4120a8 <nftw@plt+0xf528>
  40d7a4:	mov	w22, w0
  40d7a8:	ubfiz	x1, x22, #3, #32
  40d7ac:	add	x1, x1, #0x8
  40d7b0:	ldr	x0, [x19, #32]
  40d7b4:	cbz	x0, 40d858 <nftw@plt+0xacd8>
  40d7b8:	ldr	w25, [x0, #4]
  40d7bc:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40d7c0:	str	x0, [x19, #32]
  40d7c4:	ldr	w1, [x0]
  40d7c8:	bfxil	w1, w22, #0, #31
  40d7cc:	str	w1, [x0]
  40d7d0:	ubfx	x1, x1, #24, #7
  40d7d4:	strb	w1, [x0, #3]
  40d7d8:	str	w25, [x0, #4]
  40d7dc:	cbz	w23, 40d860 <nftw@plt+0xace0>
  40d7e0:	ldr	x3, [x19, #32]
  40d7e4:	cbz	w21, 40d80c <nftw@plt+0xac8c>
  40d7e8:	sub	w2, w21, #0x1
  40d7ec:	add	x2, x2, #0x2
  40d7f0:	lsl	x2, x2, #3
  40d7f4:	mov	x1, #0x8                   	// #8
  40d7f8:	ldr	x0, [x20, x1]
  40d7fc:	str	x0, [x3, x1]
  40d800:	add	x1, x1, #0x8
  40d804:	cmp	x1, x2
  40d808:	b.ne	40d7f8 <nftw@plt+0xac78>  // b.any
  40d80c:	ldr	x0, [x19, #32]
  40d810:	str	w21, [x0, #4]
  40d814:	ldp	x25, x26, [sp, #64]
  40d818:	ldr	x1, [x19, #32]
  40d81c:	ldr	w0, [x1, #4]
  40d820:	add	w2, w0, #0x1
  40d824:	str	w2, [x1, #4]
  40d828:	add	x0, x1, w0, uxtw #3
  40d82c:	str	x24, [x0, #8]
  40d830:	mov	w0, #0x1                   	// #1
  40d834:	b	40d6f4 <nftw@plt+0xab74>
  40d838:	mov	w2, #0x4                   	// #4
  40d83c:	cmp	w1, w2
  40d840:	csel	w22, w1, w2, cs  // cs = hs, nlast
  40d844:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40d848:	add	x1, x1, #0x1
  40d84c:	lsl	x1, x1, #3
  40d850:	mov	w25, #0x0                   	// #0
  40d854:	b	40d7bc <nftw@plt+0xac3c>
  40d858:	mov	w25, #0x0                   	// #0
  40d85c:	b	40d7bc <nftw@plt+0xac3c>
  40d860:	ldp	x25, x26, [sp, #64]
  40d864:	b	40d818 <nftw@plt+0xac98>
  40d868:	str	x27, [sp, #80]
  40d86c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d870:	add	x2, x2, #0x38
  40d874:	mov	w1, #0x2fa                 	// #762
  40d878:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d87c:	add	x0, x0, #0x18
  40d880:	bl	408d8c <nftw@plt+0x620c>
  40d884:	str	x27, [sp, #80]
  40d888:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d88c:	add	x2, x2, #0x38
  40d890:	mov	w1, #0x2fb                 	// #763
  40d894:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d898:	add	x0, x0, #0x18
  40d89c:	bl	408d8c <nftw@plt+0x620c>
  40d8a0:	str	x27, [sp, #80]
  40d8a4:	sub	w21, w1, w20
  40d8a8:	add	w2, w2, w22
  40d8ac:	sub	w26, w2, w21
  40d8b0:	mov	w1, w26
  40d8b4:	mov	x0, x19
  40d8b8:	bl	40d574 <nftw@plt+0xa9f4>
  40d8bc:	ldr	x0, [x19, #8]
  40d8c0:	add	x1, x0, w24, sxtw
  40d8c4:	ldr	w2, [x19, #16]
  40d8c8:	add	x3, x0, w2, sxtw
  40d8cc:	cmp	x1, x3
  40d8d0:	b.hi	40d948 <nftw@plt+0xadc8>  // b.pmore
  40d8d4:	sxtw	x25, w25
  40d8d8:	sxtw	x27, w22
  40d8dc:	sxtw	x2, w2
  40d8e0:	add	x3, x25, x27
  40d8e4:	sub	x2, x2, w24, sxtw
  40d8e8:	add	x0, x0, x3
  40d8ec:	bl	4024a0 <memmove@plt>
  40d8f0:	ldr	x0, [x19, #8]
  40d8f4:	mov	x2, x27
  40d8f8:	mov	x1, x23
  40d8fc:	add	x0, x0, x25
  40d900:	bl	402490 <memcpy@plt>
  40d904:	str	w26, [x19, #16]
  40d908:	mov	x0, x19
  40d90c:	bl	40d5bc <nftw@plt+0xaa3c>
  40d910:	sub	w21, w22, w21
  40d914:	ldr	x22, [x19, #24]
  40d918:	cbz	x22, 40d974 <nftw@plt+0xadf4>
  40d91c:	ldr	w0, [x22]
  40d920:	ubfx	x0, x0, #0, #31
  40d924:	ldr	w1, [x22, #4]
  40d928:	cmp	w0, w1
  40d92c:	b.ne	40da0c <nftw@plt+0xae8c>  // b.any
  40d930:	ldrsb	w0, [x22, #3]
  40d934:	tbnz	w0, #31, 40d960 <nftw@plt+0xade0>
  40d938:	mov	w25, #0x0                   	// #0
  40d93c:	mov	w23, #0x0                   	// #0
  40d940:	mov	w1, #0x1                   	// #1
  40d944:	b	40d980 <nftw@plt+0xae00>
  40d948:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d94c:	add	x2, x2, #0x38
  40d950:	mov	w1, #0x30b                 	// #779
  40d954:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40d958:	add	x0, x0, #0x18
  40d95c:	bl	408d8c <nftw@plt+0x620c>
  40d960:	str	xzr, [x19, #24]
  40d964:	ldr	w23, [x22, #4]
  40d968:	add	w1, w23, #0x1
  40d96c:	mov	w25, #0x1                   	// #1
  40d970:	b	40d980 <nftw@plt+0xae00>
  40d974:	mov	w25, #0x0                   	// #0
  40d978:	mov	w23, #0x0                   	// #0
  40d97c:	mov	w1, #0x1                   	// #1
  40d980:	ldr	x0, [x19, #24]
  40d984:	cbz	x0, 40da40 <nftw@plt+0xaec0>
  40d988:	ldr	w2, [x0, #4]
  40d98c:	ldr	w0, [x0]
  40d990:	add	w1, w1, w2
  40d994:	and	w0, w0, #0x7fffffff
  40d998:	bl	4120a8 <nftw@plt+0xf528>
  40d99c:	mov	w24, w0
  40d9a0:	ubfiz	x1, x24, #3, #32
  40d9a4:	add	x1, x1, #0x8
  40d9a8:	ldr	x0, [x19, #24]
  40d9ac:	cbz	x0, 40da60 <nftw@plt+0xaee0>
  40d9b0:	ldr	w26, [x0, #4]
  40d9b4:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  40d9b8:	str	x0, [x19, #24]
  40d9bc:	ldr	w1, [x0]
  40d9c0:	bfxil	w1, w24, #0, #31
  40d9c4:	str	w1, [x0]
  40d9c8:	ubfx	x1, x1, #24, #7
  40d9cc:	strb	w1, [x0, #3]
  40d9d0:	str	w26, [x0, #4]
  40d9d4:	cbz	w25, 40da0c <nftw@plt+0xae8c>
  40d9d8:	ldr	x3, [x19, #24]
  40d9dc:	cbz	w23, 40da04 <nftw@plt+0xae84>
  40d9e0:	sub	w2, w23, #0x1
  40d9e4:	add	x2, x2, #0x2
  40d9e8:	lsl	x2, x2, #3
  40d9ec:	mov	x0, #0x8                   	// #8
  40d9f0:	ldr	x1, [x22, x0]
  40d9f4:	str	x1, [x3, x0]
  40d9f8:	add	x0, x0, #0x8
  40d9fc:	cmp	x0, x2
  40da00:	b.ne	40d9f0 <nftw@plt+0xae70>  // b.any
  40da04:	ldr	x0, [x19, #24]
  40da08:	str	w23, [x0, #4]
  40da0c:	ldr	x1, [x19, #24]
  40da10:	ldr	w0, [x1, #4]
  40da14:	add	w2, w0, #0x1
  40da18:	str	w2, [x1, #4]
  40da1c:	ubfiz	x0, x0, #3, #32
  40da20:	add	x0, x0, #0x8
  40da24:	add	x2, x1, x0
  40da28:	str	w20, [x1, x0]
  40da2c:	str	w21, [x2, #4]
  40da30:	mov	w0, #0x1                   	// #1
  40da34:	ldp	x25, x26, [sp, #64]
  40da38:	ldr	x27, [sp, #80]
  40da3c:	b	40d6f4 <nftw@plt+0xab74>
  40da40:	mov	w2, #0x4                   	// #4
  40da44:	cmp	w1, w2
  40da48:	csel	w24, w1, w2, cs  // cs = hs, nlast
  40da4c:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40da50:	add	x1, x1, #0x1
  40da54:	lsl	x1, x1, #3
  40da58:	mov	w26, #0x0                   	// #0
  40da5c:	b	40d9b4 <nftw@plt+0xae34>
  40da60:	mov	w26, #0x0                   	// #0
  40da64:	b	40d9b4 <nftw@plt+0xae34>
  40da68:	mov	w0, #0x0                   	// #0
  40da6c:	ldp	x25, x26, [sp, #64]
  40da70:	b	40d6f4 <nftw@plt+0xab74>
  40da74:	cbz	x0, 40daac <nftw@plt+0xaf2c>
  40da78:	stp	x29, x30, [sp, #-32]!
  40da7c:	mov	x29, sp
  40da80:	str	x19, [sp, #16]
  40da84:	mov	x19, x0
  40da88:	ldr	x1, [x0, #8]
  40da8c:	add	x0, x0, #0x8
  40da90:	bl	40e760 <nftw@plt+0xbbe0>
  40da94:	mov	x1, #0x30                  	// #48
  40da98:	mov	x0, x19
  40da9c:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  40daa0:	ldr	x19, [sp, #16]
  40daa4:	ldp	x29, x30, [sp], #32
  40daa8:	ret
  40daac:	ret
  40dab0:	stp	x29, x30, [sp, #-32]!
  40dab4:	mov	x29, sp
  40dab8:	stp	x19, x20, [sp, #16]
  40dabc:	cbz	x1, 40db04 <nftw@plt+0xaf84>
  40dac0:	mov	x19, x0
  40dac4:	mov	x20, x1
  40dac8:	add	x0, x0, #0x8
  40dacc:	bl	40e868 <nftw@plt+0xbce8>
  40dad0:	ldr	x0, [x19, #8]
  40dad4:	cbz	x0, 40db1c <nftw@plt+0xaf9c>
  40dad8:	ldr	x2, [x19, #16]
  40dadc:	mov	x1, x20
  40dae0:	ldr	x0, [x0]
  40dae4:	blr	x2
  40dae8:	cbnz	w0, 40db1c <nftw@plt+0xaf9c>
  40daec:	ldr	x0, [x19, #8]
  40daf0:	cbz	x0, 40daf8 <nftw@plt+0xaf78>
  40daf4:	ldr	x0, [x0, #8]
  40daf8:	ldp	x19, x20, [sp, #16]
  40dafc:	ldp	x29, x30, [sp], #32
  40db00:	ret
  40db04:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40db08:	add	x2, x2, #0x48
  40db0c:	mov	w1, #0x140                 	// #320
  40db10:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40db14:	add	x0, x0, #0x18
  40db18:	bl	408d8c <nftw@plt+0x620c>
  40db1c:	mov	x0, #0x0                   	// #0
  40db20:	b	40daf8 <nftw@plt+0xaf78>
  40db24:	stp	x29, x30, [sp, #-48]!
  40db28:	mov	x29, sp
  40db2c:	stp	x19, x20, [sp, #16]
  40db30:	stp	x21, x22, [sp, #32]
  40db34:	cbz	x1, 40db60 <nftw@plt+0xafe0>
  40db38:	mov	x21, x0
  40db3c:	mov	x20, x1
  40db40:	bl	40dab0 <nftw@plt+0xaf30>
  40db44:	mov	x19, x0
  40db48:	cbz	x0, 40db78 <nftw@plt+0xaff8>
  40db4c:	mov	x0, x19
  40db50:	ldp	x19, x20, [sp, #16]
  40db54:	ldp	x21, x22, [sp, #32]
  40db58:	ldp	x29, x30, [sp], #48
  40db5c:	ret
  40db60:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40db64:	add	x2, x2, #0x58
  40db68:	mov	w1, #0x149                 	// #329
  40db6c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40db70:	add	x0, x0, #0x18
  40db74:	bl	408d8c <nftw@plt+0x620c>
  40db78:	mov	x0, #0x30                  	// #48
  40db7c:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40db80:	mov	x19, x0
  40db84:	str	x20, [x0], #8
  40db88:	str	xzr, [x19, #8]
  40db8c:	adrp	x1, 40d000 <nftw@plt+0xa480>
  40db90:	add	x1, x1, #0x138
  40db94:	str	x1, [x0, #8]
  40db98:	str	xzr, [x0, #16]
  40db9c:	adrp	x1, 40d000 <nftw@plt+0xa480>
  40dba0:	add	x1, x1, #0x3b4
  40dba4:	str	x1, [x0, #24]
  40dba8:	mov	w0, #0xffffffff            	// #-1
  40dbac:	str	w0, [x19, #40]
  40dbb0:	mov	x1, x20
  40dbb4:	add	x0, x21, #0x8
  40dbb8:	bl	40e868 <nftw@plt+0xbce8>
  40dbbc:	ldr	x0, [x21, #8]
  40dbc0:	cbz	x0, 40dc40 <nftw@plt+0xb0c0>
  40dbc4:	ldr	x2, [x21, #16]
  40dbc8:	mov	x1, x20
  40dbcc:	ldr	x0, [x0]
  40dbd0:	blr	x2
  40dbd4:	mov	w22, w0
  40dbd8:	ldr	x0, [x21, #8]
  40dbdc:	cmp	w22, #0x0
  40dbe0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40dbe4:	b.eq	40dc04 <nftw@plt+0xb084>  // b.none
  40dbe8:	ldr	x1, [x21, #32]
  40dbec:	cbz	x1, 40dbf8 <nftw@plt+0xb078>
  40dbf0:	ldr	x0, [x0, #8]
  40dbf4:	blr	x1
  40dbf8:	ldr	x0, [x21, #8]
  40dbfc:	str	x19, [x0, #8]
  40dc00:	b	40db4c <nftw@plt+0xafcc>
  40dc04:	mov	x0, #0x28                  	// #40
  40dc08:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40dc0c:	str	x20, [x0]
  40dc10:	str	x19, [x0, #8]
  40dc14:	ldr	x1, [x21, #8]
  40dc18:	cbz	x1, 40dc34 <nftw@plt+0xb0b4>
  40dc1c:	tbz	w22, #31, 40dc58 <nftw@plt+0xb0d8>
  40dc20:	str	x1, [x0, #16]
  40dc24:	ldr	x2, [x1, #24]
  40dc28:	str	x2, [x0, #24]
  40dc2c:	str	xzr, [x1, #24]
  40dc30:	b	40dc68 <nftw@plt+0xb0e8>
  40dc34:	str	xzr, [x0, #24]
  40dc38:	str	xzr, [x0, #16]
  40dc3c:	b	40dc68 <nftw@plt+0xb0e8>
  40dc40:	mov	x0, #0x28                  	// #40
  40dc44:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40dc48:	str	x20, [x0]
  40dc4c:	str	x19, [x0, #8]
  40dc50:	ldr	x1, [x21, #8]
  40dc54:	cbz	x1, 40dc34 <nftw@plt+0xb0b4>
  40dc58:	str	x1, [x0, #24]
  40dc5c:	ldr	x2, [x1, #16]
  40dc60:	str	x2, [x0, #16]
  40dc64:	str	xzr, [x1, #16]
  40dc68:	str	x0, [x21, #8]
  40dc6c:	b	40db4c <nftw@plt+0xafcc>
  40dc70:	stp	x29, x30, [sp, #-32]!
  40dc74:	mov	x29, sp
  40dc78:	stp	x19, x20, [sp, #16]
  40dc7c:	mov	x19, x0
  40dc80:	mov	w20, w1
  40dc84:	add	x0, x0, #0x8
  40dc88:	bl	40ea10 <nftw@plt+0xbe90>
  40dc8c:	ldr	x0, [x19, #8]
  40dc90:	cbz	x0, 40dcc0 <nftw@plt+0xb140>
  40dc94:	ldr	x2, [x19, #16]
  40dc98:	mov	w1, w20
  40dc9c:	ldr	w0, [x0]
  40dca0:	blr	x2
  40dca4:	cbnz	w0, 40dcc0 <nftw@plt+0xb140>
  40dca8:	ldr	x0, [x19, #8]
  40dcac:	cbz	x0, 40dcb4 <nftw@plt+0xb134>
  40dcb0:	ldr	x0, [x0, #8]
  40dcb4:	ldp	x19, x20, [sp, #16]
  40dcb8:	ldp	x29, x30, [sp], #32
  40dcbc:	ret
  40dcc0:	mov	x0, #0x0                   	// #0
  40dcc4:	b	40dcb4 <nftw@plt+0xb134>
  40dcc8:	stp	x29, x30, [sp, #-32]!
  40dccc:	mov	x29, sp
  40dcd0:	str	x19, [sp, #16]
  40dcd4:	mov	w19, w2
  40dcd8:	bl	40dc70 <nftw@plt+0xb0f0>
  40dcdc:	cbz	x0, 40dcf4 <nftw@plt+0xb174>
  40dce0:	mov	w1, w19
  40dce4:	bl	40d3e8 <nftw@plt+0xa868>
  40dce8:	ldr	x19, [sp, #16]
  40dcec:	ldp	x29, x30, [sp], #32
  40dcf0:	ret
  40dcf4:	mov	w0, w19
  40dcf8:	b	40dce8 <nftw@plt+0xb168>
  40dcfc:	stp	x29, x30, [sp, #-32]!
  40dd00:	mov	x29, sp
  40dd04:	stp	x19, x20, [sp, #16]
  40dd08:	mov	w20, w2
  40dd0c:	mov	w19, w3
  40dd10:	bl	40dab0 <nftw@plt+0xaf30>
  40dd14:	cbz	x0, 40dd30 <nftw@plt+0xb1b0>
  40dd18:	mov	w2, w19
  40dd1c:	mov	w1, w20
  40dd20:	bl	40dcc8 <nftw@plt+0xb148>
  40dd24:	ldp	x19, x20, [sp, #16]
  40dd28:	ldp	x29, x30, [sp], #32
  40dd2c:	ret
  40dd30:	mov	w0, w19
  40dd34:	b	40dd24 <nftw@plt+0xb1a4>
  40dd38:	stp	x29, x30, [sp, #-112]!
  40dd3c:	mov	x29, sp
  40dd40:	stp	x21, x22, [sp, #32]
  40dd44:	stp	x23, x24, [sp, #48]
  40dd48:	mov	x23, x0
  40dd4c:	mov	x21, x1
  40dd50:	add	x1, sp, #0x6f
  40dd54:	bl	40d284 <nftw@plt+0xa704>
  40dd58:	cmp	w0, #0x0
  40dd5c:	b.le	40de64 <nftw@plt+0xb2e4>
  40dd60:	stp	x19, x20, [sp, #16]
  40dd64:	stp	x25, x26, [sp, #64]
  40dd68:	stp	x27, x28, [sp, #80]
  40dd6c:	mov	w22, w0
  40dd70:	mov	w19, #0x1                   	// #1
  40dd74:	mov	w26, #0x0                   	// #0
  40dd78:	mov	x24, #0x80000000            	// #2147483648
  40dd7c:	mov	w25, #0xa                   	// #10
  40dd80:	b	40de34 <nftw@plt+0xb2b4>
  40dd84:	mov	w1, w19
  40dd88:	ldr	x0, [x23]
  40dd8c:	bl	4149d0 <nftw@plt+0x11e50>
  40dd90:	mov	x27, x1
  40dd94:	mov	x28, x0
  40dd98:	cbz	x0, 40ddac <nftw@plt+0xb22c>
  40dd9c:	mov	x20, #0x0                   	// #0
  40dda0:	mov	w0, w26
  40dda4:	cbnz	x1, 40ddc8 <nftw@plt+0xb248>
  40dda8:	b	40de4c <nftw@plt+0xb2cc>
  40ddac:	ldp	x19, x20, [sp, #16]
  40ddb0:	ldp	x25, x26, [sp, #64]
  40ddb4:	ldp	x27, x28, [sp, #80]
  40ddb8:	b	40de6c <nftw@plt+0xb2ec>
  40ddbc:	mov	w0, w20
  40ddc0:	cmp	x20, x24
  40ddc4:	b.eq	40ddec <nftw@plt+0xb26c>  // b.none
  40ddc8:	cmp	x27, w0, sxtw
  40ddcc:	b.ls	40de04 <nftw@plt+0xb284>  // b.plast
  40ddd0:	ldrb	w1, [x28, w0, sxtw]
  40ddd4:	mov	x0, x21
  40ddd8:	bl	40f400 <nftw@plt+0xc880>
  40dddc:	add	x20, x20, #0x1
  40dde0:	cmp	x27, x20
  40dde4:	b.ne	40ddbc <nftw@plt+0xb23c>  // b.any
  40dde8:	b	40de4c <nftw@plt+0xb2cc>
  40ddec:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40ddf0:	add	x2, x2, #0x70
  40ddf4:	mov	w1, #0x3d                  	// #61
  40ddf8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40ddfc:	add	x0, x0, #0xfc8
  40de00:	bl	408d8c <nftw@plt+0x620c>
  40de04:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40de08:	add	x2, x2, #0x70
  40de0c:	mov	w1, #0x3e                  	// #62
  40de10:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40de14:	add	x0, x0, #0xfc8
  40de18:	bl	408d8c <nftw@plt+0x620c>
  40de1c:	mov	w1, w25
  40de20:	mov	x0, x21
  40de24:	bl	40f400 <nftw@plt+0xc880>
  40de28:	add	w19, w19, #0x1
  40de2c:	cmp	w22, w19
  40de30:	b.lt	40de58 <nftw@plt+0xb2d8>  // b.tstop
  40de34:	mov	w1, w19
  40de38:	mov	x0, x23
  40de3c:	bl	40dc70 <nftw@plt+0xb0f0>
  40de40:	cbz	x0, 40dd84 <nftw@plt+0xb204>
  40de44:	mov	x1, x21
  40de48:	bl	40d448 <nftw@plt+0xa8c8>
  40de4c:	cmp	w22, w19
  40de50:	b.le	40de28 <nftw@plt+0xb2a8>
  40de54:	b	40de1c <nftw@plt+0xb29c>
  40de58:	ldp	x19, x20, [sp, #16]
  40de5c:	ldp	x25, x26, [sp, #64]
  40de60:	ldp	x27, x28, [sp, #80]
  40de64:	ldrb	w0, [sp, #111]
  40de68:	cbz	w0, 40de7c <nftw@plt+0xb2fc>
  40de6c:	ldp	x21, x22, [sp, #32]
  40de70:	ldp	x23, x24, [sp, #48]
  40de74:	ldp	x29, x30, [sp], #112
  40de78:	ret
  40de7c:	mov	w1, #0xa                   	// #10
  40de80:	mov	x0, x21
  40de84:	bl	40f400 <nftw@plt+0xc880>
  40de88:	mov	w0, #0x1                   	// #1
  40de8c:	b	40de6c <nftw@plt+0xb2ec>
  40de90:	stp	x29, x30, [sp, #-64]!
  40de94:	mov	x29, sp
  40de98:	stp	x19, x20, [sp, #16]
  40de9c:	stp	x21, x22, [sp, #32]
  40dea0:	stp	x23, x24, [sp, #48]
  40dea4:	mov	x21, x0
  40dea8:	mov	x22, x1
  40deac:	mov	w19, w2
  40deb0:	mov	w23, w3
  40deb4:	mov	x2, #0xb                   	// #11
  40deb8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40debc:	add	x1, x1, #0xe08
  40dec0:	ldrb	w0, [x22, #67]
  40dec4:	bl	409f38 <nftw@plt+0x73b8>
  40dec8:	mov	x1, x0
  40decc:	mov	x0, x22
  40ded0:	bl	40f9f8 <nftw@plt+0xce78>
  40ded4:	cmp	w19, w23
  40ded8:	b.gt	40dfe8 <nftw@plt+0xb468>
  40dedc:	mov	w20, w19
  40dee0:	mov	w24, #0x2d                  	// #45
  40dee4:	b	40df2c <nftw@plt+0xb3ac>
  40dee8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40deec:	add	x2, x2, #0x80
  40def0:	mov	w1, #0x239                 	// #569
  40def4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40def8:	add	x0, x0, #0x18
  40defc:	bl	408d8c <nftw@plt+0x620c>
  40df00:	mov	w1, w20
  40df04:	ldr	x0, [x21]
  40df08:	bl	4149d0 <nftw@plt+0x11e50>
  40df0c:	mov	w3, w1
  40df10:	mov	x2, x0
  40df14:	mov	w1, w24
  40df18:	mov	x0, x22
  40df1c:	bl	40d140 <nftw@plt+0xa5c0>
  40df20:	add	w20, w20, #0x1
  40df24:	cmp	w23, w20
  40df28:	b.lt	40df68 <nftw@plt+0xb3e8>  // b.tstop
  40df2c:	mov	w1, w20
  40df30:	mov	x0, x21
  40df34:	bl	40dc70 <nftw@plt+0xb0f0>
  40df38:	cbz	x0, 40dee8 <nftw@plt+0xb368>
  40df3c:	ldr	x2, [x0, #24]
  40df40:	cbz	x2, 40df20 <nftw@plt+0xb3a0>
  40df44:	ldr	w0, [x2, #4]
  40df48:	cbz	w0, 40df20 <nftw@plt+0xb3a0>
  40df4c:	b	40df00 <nftw@plt+0xb380>
  40df50:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40df54:	add	x2, x2, #0x80
  40df58:	mov	w1, #0x24b                 	// #587
  40df5c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40df60:	add	x0, x0, #0x18
  40df64:	bl	408d8c <nftw@plt+0x620c>
  40df68:	ldrb	w0, [x22, #67]
  40df6c:	bl	409fcc <nftw@plt+0x744c>
  40df70:	mov	x1, x0
  40df74:	mov	x0, x22
  40df78:	bl	40f9f8 <nftw@plt+0xce78>
  40df7c:	mov	x2, #0xb                   	// #11
  40df80:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40df84:	add	x1, x1, #0xe18
  40df88:	ldrb	w0, [x22, #67]
  40df8c:	bl	409f38 <nftw@plt+0x73b8>
  40df90:	mov	x1, x0
  40df94:	mov	x0, x22
  40df98:	bl	40f9f8 <nftw@plt+0xce78>
  40df9c:	mov	w1, w19
  40dfa0:	mov	x0, x21
  40dfa4:	bl	40dc70 <nftw@plt+0xb0f0>
  40dfa8:	cbz	x0, 40df50 <nftw@plt+0xb3d0>
  40dfac:	mov	x1, x22
  40dfb0:	bl	40d4c4 <nftw@plt+0xa944>
  40dfb4:	add	w19, w19, #0x1
  40dfb8:	cmp	w23, w19
  40dfbc:	b.ge	40df9c <nftw@plt+0xb41c>  // b.tcont
  40dfc0:	ldrb	w0, [x22, #67]
  40dfc4:	bl	409fcc <nftw@plt+0x744c>
  40dfc8:	mov	x1, x0
  40dfcc:	mov	x0, x22
  40dfd0:	bl	40f9f8 <nftw@plt+0xce78>
  40dfd4:	ldp	x19, x20, [sp, #16]
  40dfd8:	ldp	x21, x22, [sp, #32]
  40dfdc:	ldp	x23, x24, [sp, #48]
  40dfe0:	ldp	x29, x30, [sp], #64
  40dfe4:	ret
  40dfe8:	ldrb	w0, [x22, #67]
  40dfec:	bl	409fcc <nftw@plt+0x744c>
  40dff0:	mov	x1, x0
  40dff4:	mov	x0, x22
  40dff8:	bl	40f9f8 <nftw@plt+0xce78>
  40dffc:	mov	x2, #0xb                   	// #11
  40e000:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40e004:	add	x1, x1, #0xe18
  40e008:	ldrb	w0, [x22, #67]
  40e00c:	bl	409f38 <nftw@plt+0x73b8>
  40e010:	mov	x1, x0
  40e014:	mov	x0, x22
  40e018:	bl	40f9f8 <nftw@plt+0xce78>
  40e01c:	b	40dfc0 <nftw@plt+0xb440>
  40e020:	stp	x29, x30, [sp, #-48]!
  40e024:	mov	x29, sp
  40e028:	stp	x19, x20, [sp, #16]
  40e02c:	cmp	w1, w2
  40e030:	b.gt	40e08c <nftw@plt+0xb50c>
  40e034:	stp	x21, x22, [sp, #32]
  40e038:	mov	x22, x0
  40e03c:	mov	w19, w1
  40e040:	add	w21, w2, #0x1
  40e044:	mov	w20, #0x0                   	// #0
  40e048:	b	40e05c <nftw@plt+0xb4dc>
  40e04c:	add	w20, w20, #0x1
  40e050:	add	w19, w19, #0x1
  40e054:	cmp	w19, w21
  40e058:	b.eq	40e078 <nftw@plt+0xb4f8>  // b.none
  40e05c:	mov	w1, w19
  40e060:	mov	x0, x22
  40e064:	bl	40dc70 <nftw@plt+0xb0f0>
  40e068:	cbz	x0, 40e04c <nftw@plt+0xb4cc>
  40e06c:	bl	40d42c <nftw@plt+0xa8ac>
  40e070:	add	w20, w20, w0
  40e074:	b	40e050 <nftw@plt+0xb4d0>
  40e078:	ldp	x21, x22, [sp, #32]
  40e07c:	mov	w0, w20
  40e080:	ldp	x19, x20, [sp, #16]
  40e084:	ldp	x29, x30, [sp], #48
  40e088:	ret
  40e08c:	mov	w20, #0x0                   	// #0
  40e090:	b	40e07c <nftw@plt+0xb4fc>
  40e094:	stp	x29, x30, [sp, #-80]!
  40e098:	mov	x29, sp
  40e09c:	stp	x19, x20, [sp, #16]
  40e0a0:	stp	x21, x22, [sp, #32]
  40e0a4:	stp	x23, x24, [sp, #48]
  40e0a8:	stp	x25, x26, [sp, #64]
  40e0ac:	mov	x20, x0
  40e0b0:	mov	x22, x1
  40e0b4:	mov	w21, w2
  40e0b8:	mov	w23, w3
  40e0bc:	mov	w19, w4
  40e0c0:	sub	w24, w3, w2
  40e0c4:	add	w24, w24, #0x1
  40e0c8:	mov	w2, w3
  40e0cc:	mov	w1, w21
  40e0d0:	bl	40e020 <nftw@plt+0xb4a0>
  40e0d4:	mov	w25, w0
  40e0d8:	mov	x2, #0x9                   	// #9
  40e0dc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40e0e0:	add	x1, x1, #0xde8
  40e0e4:	ldrb	w0, [x22, #67]
  40e0e8:	bl	409f38 <nftw@plt+0x73b8>
  40e0ec:	mov	x1, x0
  40e0f0:	mov	x0, x22
  40e0f4:	bl	40f9f8 <nftw@plt+0xce78>
  40e0f8:	mov	w5, w25
  40e0fc:	mov	w4, w19
  40e100:	mov	w3, w24
  40e104:	mov	w2, w21
  40e108:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40e10c:	add	x1, x1, #0xa0
  40e110:	mov	x0, x22
  40e114:	bl	411830 <nftw@plt+0xecb0>
  40e118:	ldrb	w0, [x22, #67]
  40e11c:	bl	409fcc <nftw@plt+0x744c>
  40e120:	mov	x1, x0
  40e124:	mov	x0, x22
  40e128:	bl	40f9f8 <nftw@plt+0xce78>
  40e12c:	cmp	w23, w21
  40e130:	b.lt	40e1b0 <nftw@plt+0xb630>  // b.tstop
  40e134:	mov	w26, #0x20                  	// #32
  40e138:	b	40e15c <nftw@plt+0xb5dc>
  40e13c:	sub	w3, w19, #0x1
  40e140:	mov	w2, w21
  40e144:	mov	x1, x22
  40e148:	mov	x0, x20
  40e14c:	bl	40de90 <nftw@plt+0xb310>
  40e150:	mov	w21, w19
  40e154:	cmp	w23, w21
  40e158:	b.lt	40e1b0 <nftw@plt+0xb630>  // b.tstop
  40e15c:	mov	w1, w21
  40e160:	mov	x0, x20
  40e164:	bl	40dc70 <nftw@plt+0xb0f0>
  40e168:	cbz	x0, 40e188 <nftw@plt+0xb608>
  40e16c:	mov	w19, w21
  40e170:	mov	w1, w19
  40e174:	mov	x0, x20
  40e178:	bl	40dc70 <nftw@plt+0xb0f0>
  40e17c:	cbz	x0, 40e13c <nftw@plt+0xb5bc>
  40e180:	add	w19, w19, #0x1
  40e184:	b	40e170 <nftw@plt+0xb5f0>
  40e188:	mov	w1, w21
  40e18c:	ldr	x0, [x20]
  40e190:	bl	4149d0 <nftw@plt+0x11e50>
  40e194:	mov	w3, w1
  40e198:	mov	x2, x0
  40e19c:	mov	w1, w26
  40e1a0:	mov	x0, x22
  40e1a4:	bl	40d140 <nftw@plt+0xa5c0>
  40e1a8:	add	w21, w21, #0x1
  40e1ac:	b	40e154 <nftw@plt+0xb5d4>
  40e1b0:	sub	w0, w25, w24
  40e1b4:	ldp	x19, x20, [sp, #16]
  40e1b8:	ldp	x21, x22, [sp, #32]
  40e1bc:	ldp	x23, x24, [sp, #48]
  40e1c0:	ldp	x25, x26, [sp, #64]
  40e1c4:	ldp	x29, x30, [sp], #80
  40e1c8:	ret
  40e1cc:	stp	x29, x30, [sp, #-96]!
  40e1d0:	mov	x29, sp
  40e1d4:	stp	x21, x22, [sp, #32]
  40e1d8:	stp	x23, x24, [sp, #48]
  40e1dc:	stp	x25, x26, [sp, #64]
  40e1e0:	mov	x24, x0
  40e1e4:	mov	x25, x1
  40e1e8:	tst	w2, #0xff
  40e1ec:	b.ne	40e230 <nftw@plt+0xb6b0>  // b.any
  40e1f0:	add	x21, x24, #0x8
  40e1f4:	ldr	x0, [x24, #8]
  40e1f8:	cbz	x0, 40e350 <nftw@plt+0xb7d0>
  40e1fc:	stp	x19, x20, [sp, #16]
  40e200:	mov	x1, x0
  40e204:	ldr	x0, [x0, #16]
  40e208:	cbnz	x0, 40e200 <nftw@plt+0xb680>
  40e20c:	ldr	x19, [x1, #8]
  40e210:	add	x1, sp, #0x5f
  40e214:	mov	x0, x24
  40e218:	bl	40d284 <nftw@plt+0xa704>
  40e21c:	mov	w23, w0
  40e220:	cbz	x19, 40e378 <nftw@plt+0xb7f8>
  40e224:	mov	w22, #0x0                   	// #0
  40e228:	mov	w26, #0x1                   	// #1
  40e22c:	b	40e334 <nftw@plt+0xb7b4>
  40e230:	mov	x2, #0xd                   	// #13
  40e234:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40e238:	add	x1, x1, #0xdd8
  40e23c:	ldrb	w0, [x25, #67]
  40e240:	bl	409f38 <nftw@plt+0x73b8>
  40e244:	mov	x1, x0
  40e248:	mov	x0, x25
  40e24c:	bl	40f9f8 <nftw@plt+0xce78>
  40e250:	ldr	x2, [x24]
  40e254:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40e258:	add	x1, x1, #0xb8
  40e25c:	mov	x0, x25
  40e260:	bl	411830 <nftw@plt+0xecb0>
  40e264:	ldr	x2, [x24]
  40e268:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40e26c:	add	x1, x1, #0xc0
  40e270:	mov	x0, x25
  40e274:	bl	411830 <nftw@plt+0xecb0>
  40e278:	ldrb	w0, [x25, #67]
  40e27c:	bl	409fcc <nftw@plt+0x744c>
  40e280:	mov	x1, x0
  40e284:	mov	x0, x25
  40e288:	bl	40f9f8 <nftw@plt+0xce78>
  40e28c:	b	40e1f0 <nftw@plt+0xb670>
  40e290:	add	w2, w2, #0x2
  40e294:	ldr	w1, [x0]
  40e298:	sub	w1, w1, #0x3
  40e29c:	cmp	w1, w2
  40e2a0:	b.gt	40e2dc <nftw@plt+0xb75c>
  40e2a4:	mov	x19, x0
  40e2a8:	ldr	w1, [x19]
  40e2ac:	mov	x0, x21
  40e2b0:	bl	40ebb8 <nftw@plt+0xc038>
  40e2b4:	cbz	x0, 40e2dc <nftw@plt+0xb75c>
  40e2b8:	ldr	x0, [x0, #8]
  40e2bc:	cbz	x0, 40e2dc <nftw@plt+0xb75c>
  40e2c0:	ldr	w2, [x19]
  40e2c4:	ldr	x1, [x19, #24]
  40e2c8:	cbz	x1, 40e290 <nftw@plt+0xb710>
  40e2cc:	ldr	w1, [x1, #4]
  40e2d0:	cbz	w1, 40e290 <nftw@plt+0xb710>
  40e2d4:	add	w2, w2, #0x3
  40e2d8:	b	40e294 <nftw@plt+0xb714>
  40e2dc:	ldr	w3, [x19]
  40e2e0:	ldr	x0, [x19, #24]
  40e2e4:	cbz	x0, 40e2f8 <nftw@plt+0xb778>
  40e2e8:	ldr	w0, [x0, #4]
  40e2ec:	cbz	w0, 40e2f8 <nftw@plt+0xb778>
  40e2f0:	add	w3, w3, #0x3
  40e2f4:	b	40e2fc <nftw@plt+0xb77c>
  40e2f8:	add	w3, w3, #0x2
  40e2fc:	cmp	w3, w23
  40e300:	add	w4, w20, w22
  40e304:	csel	w3, w3, w23, le
  40e308:	mov	w2, w20
  40e30c:	mov	x1, x25
  40e310:	mov	x0, x24
  40e314:	bl	40e094 <nftw@plt+0xb514>
  40e318:	add	w22, w22, w0
  40e31c:	ldr	w1, [x19]
  40e320:	mov	x0, x21
  40e324:	bl	40ebb8 <nftw@plt+0xc038>
  40e328:	cbz	x0, 40e360 <nftw@plt+0xb7e0>
  40e32c:	ldr	x19, [x0, #8]
  40e330:	cbz	x19, 40e348 <nftw@plt+0xb7c8>
  40e334:	ldr	w20, [x19]
  40e338:	sub	w20, w20, #0x3
  40e33c:	cmp	w20, #0x0
  40e340:	csel	w20, w20, w26, gt
  40e344:	b	40e2a8 <nftw@plt+0xb728>
  40e348:	ldp	x19, x20, [sp, #16]
  40e34c:	b	40e364 <nftw@plt+0xb7e4>
  40e350:	add	x1, sp, #0x5f
  40e354:	mov	x0, x24
  40e358:	bl	40d284 <nftw@plt+0xa704>
  40e35c:	b	40e364 <nftw@plt+0xb7e4>
  40e360:	ldp	x19, x20, [sp, #16]
  40e364:	ldp	x21, x22, [sp, #32]
  40e368:	ldp	x23, x24, [sp, #48]
  40e36c:	ldp	x25, x26, [sp, #64]
  40e370:	ldp	x29, x30, [sp], #96
  40e374:	ret
  40e378:	ldp	x19, x20, [sp, #16]
  40e37c:	b	40e364 <nftw@plt+0xb7e4>
  40e380:	stp	x29, x30, [sp, #-48]!
  40e384:	mov	x29, sp
  40e388:	stp	x19, x20, [sp, #16]
  40e38c:	stp	x21, x22, [sp, #32]
  40e390:	mov	x20, x0
  40e394:	mov	w21, w1
  40e398:	bl	40dc70 <nftw@plt+0xb0f0>
  40e39c:	mov	x19, x0
  40e3a0:	cbz	x0, 40e3b8 <nftw@plt+0xb838>
  40e3a4:	mov	x0, x19
  40e3a8:	ldp	x19, x20, [sp, #16]
  40e3ac:	ldp	x21, x22, [sp, #32]
  40e3b0:	ldp	x29, x30, [sp], #48
  40e3b4:	ret
  40e3b8:	mov	x0, #0x28                  	// #40
  40e3bc:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40e3c0:	mov	x19, x0
  40e3c4:	mov	w2, w21
  40e3c8:	ldr	x1, [x20]
  40e3cc:	bl	40d5f8 <nftw@plt+0xaa78>
  40e3d0:	ldr	x22, [x19, #8]
  40e3d4:	cbz	x22, 40e42c <nftw@plt+0xb8ac>
  40e3d8:	mov	w1, w21
  40e3dc:	add	x0, x20, #0x8
  40e3e0:	bl	40ea10 <nftw@plt+0xbe90>
  40e3e4:	ldr	x0, [x20, #8]
  40e3e8:	cbz	x0, 40e484 <nftw@plt+0xb904>
  40e3ec:	ldr	x2, [x20, #16]
  40e3f0:	mov	w1, w21
  40e3f4:	ldr	w0, [x0]
  40e3f8:	blr	x2
  40e3fc:	mov	w22, w0
  40e400:	ldr	x0, [x20, #8]
  40e404:	cmp	x0, #0x0
  40e408:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  40e40c:	b.ne	40e448 <nftw@plt+0xb8c8>  // b.any
  40e410:	ldr	x1, [x20, #32]
  40e414:	cbz	x1, 40e420 <nftw@plt+0xb8a0>
  40e418:	ldr	x0, [x0, #8]
  40e41c:	blr	x1
  40e420:	ldr	x0, [x20, #8]
  40e424:	str	x19, [x0, #8]
  40e428:	b	40e3a4 <nftw@plt+0xb824>
  40e42c:	mov	x0, x19
  40e430:	bl	40d304 <nftw@plt+0xa784>
  40e434:	mov	x1, #0x28                  	// #40
  40e438:	mov	x0, x19
  40e43c:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  40e440:	mov	x19, x22
  40e444:	b	40e3a4 <nftw@plt+0xb824>
  40e448:	mov	x0, #0x28                  	// #40
  40e44c:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40e450:	str	w21, [x0]
  40e454:	str	x19, [x0, #8]
  40e458:	ldr	x1, [x20, #8]
  40e45c:	cbz	x1, 40e478 <nftw@plt+0xb8f8>
  40e460:	tbz	w22, #31, 40e49c <nftw@plt+0xb91c>
  40e464:	str	x1, [x0, #16]
  40e468:	ldr	x2, [x1, #24]
  40e46c:	str	x2, [x0, #24]
  40e470:	str	xzr, [x1, #24]
  40e474:	b	40e4ac <nftw@plt+0xb92c>
  40e478:	str	xzr, [x0, #24]
  40e47c:	str	xzr, [x0, #16]
  40e480:	b	40e4ac <nftw@plt+0xb92c>
  40e484:	mov	x0, #0x28                  	// #40
  40e488:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  40e48c:	str	w21, [x0]
  40e490:	str	x19, [x0, #8]
  40e494:	ldr	x1, [x20, #8]
  40e498:	cbz	x1, 40e478 <nftw@plt+0xb8f8>
  40e49c:	str	x1, [x0, #24]
  40e4a0:	ldr	x2, [x1, #16]
  40e4a4:	str	x2, [x0, #16]
  40e4a8:	str	xzr, [x1, #16]
  40e4ac:	str	x0, [x20, #8]
  40e4b0:	b	40e3a4 <nftw@plt+0xb824>
  40e4b4:	stp	x29, x30, [sp, #-48]!
  40e4b8:	mov	x29, sp
  40e4bc:	stp	x19, x20, [sp, #16]
  40e4c0:	stp	x21, x22, [sp, #32]
  40e4c4:	mov	w19, w2
  40e4c8:	mov	w20, w3
  40e4cc:	mov	x21, x4
  40e4d0:	mov	w22, w5
  40e4d4:	bl	40e380 <nftw@plt+0xb800>
  40e4d8:	cbz	x0, 40e504 <nftw@plt+0xb984>
  40e4dc:	mov	w4, w22
  40e4e0:	mov	x3, x21
  40e4e4:	mov	w2, w20
  40e4e8:	mov	w1, w19
  40e4ec:	bl	40d664 <nftw@plt+0xaae4>
  40e4f0:	and	w0, w0, #0xff
  40e4f4:	ldp	x19, x20, [sp, #16]
  40e4f8:	ldp	x21, x22, [sp, #32]
  40e4fc:	ldp	x29, x30, [sp], #48
  40e500:	ret
  40e504:	mov	w0, #0x0                   	// #0
  40e508:	b	40e4f4 <nftw@plt+0xb974>
  40e50c:	stp	x29, x30, [sp, #-128]!
  40e510:	mov	x29, sp
  40e514:	stp	x19, x20, [sp, #16]
  40e518:	stp	x21, x22, [sp, #32]
  40e51c:	stp	x23, x24, [sp, #48]
  40e520:	mov	x21, x0
  40e524:	mov	x19, x1
  40e528:	add	x8, sp, #0x60
  40e52c:	ldr	w0, [x1]
  40e530:	bl	414820 <nftw@plt+0x11ca0>
  40e534:	ldr	x20, [sp, #96]
  40e538:	ldr	w22, [sp, #104]
  40e53c:	ldr	w23, [sp, #108]
  40e540:	add	x8, sp, #0x40
  40e544:	ldr	w0, [x19, #4]
  40e548:	bl	414820 <nftw@plt+0x11ca0>
  40e54c:	ldr	x1, [sp, #64]
  40e550:	mov	w0, #0x0                   	// #0
  40e554:	cmp	x1, x20
  40e558:	b.eq	40e570 <nftw@plt+0xb9f0>  // b.none
  40e55c:	ldp	x19, x20, [sp, #16]
  40e560:	ldp	x21, x22, [sp, #32]
  40e564:	ldp	x23, x24, [sp, #48]
  40e568:	ldp	x29, x30, [sp], #128
  40e56c:	ret
  40e570:	ldr	w24, [sp, #76]
  40e574:	cmp	w23, #0x0
  40e578:	ldr	w0, [sp, #72]
  40e57c:	ccmp	w0, w22, #0x0, ne  // ne = any
  40e580:	mov	w0, #0x0                   	// #0
  40e584:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  40e588:	b.eq	40e55c <nftw@plt+0xb9dc>  // b.none
  40e58c:	mov	x1, x20
  40e590:	mov	x0, x21
  40e594:	bl	40db24 <nftw@plt+0xafa4>
  40e598:	mov	x6, x0
  40e59c:	ldrb	w0, [x21]
  40e5a0:	cbz	w0, 40e55c <nftw@plt+0xb9dc>
  40e5a4:	ldr	w5, [x19, #16]
  40e5a8:	ldr	x4, [x19, #8]
  40e5ac:	mov	w3, w24
  40e5b0:	mov	w2, w23
  40e5b4:	mov	w1, w22
  40e5b8:	mov	x0, x6
  40e5bc:	bl	40e4b4 <nftw@plt+0xb934>
  40e5c0:	and	w0, w0, #0xff
  40e5c4:	b	40e55c <nftw@plt+0xb9dc>
  40e5c8:	stp	x29, x30, [sp, #-48]!
  40e5cc:	mov	x29, sp
  40e5d0:	str	x21, [sp, #32]
  40e5d4:	mov	x21, x0
  40e5d8:	ldrb	w0, [x0]
  40e5dc:	cbz	w0, 40e660 <nftw@plt+0xbae0>
  40e5e0:	stp	x19, x20, [sp, #16]
  40e5e4:	mov	x20, x1
  40e5e8:	ldrb	w0, [x1, #160]
  40e5ec:	cbnz	w0, 40e600 <nftw@plt+0xba80>
  40e5f0:	ldr	w0, [x1, #120]
  40e5f4:	cbz	w0, 40e66c <nftw@plt+0xbaec>
  40e5f8:	mov	w19, #0x0                   	// #0
  40e5fc:	b	40e628 <nftw@plt+0xbaa8>
  40e600:	strb	wzr, [x21]
  40e604:	ldp	x19, x20, [sp, #16]
  40e608:	b	40e660 <nftw@plt+0xbae0>
  40e60c:	add	x2, x20, w19, sxtw #3
  40e610:	add	x2, x2, #0x80
  40e614:	b	40e640 <nftw@plt+0xbac0>
  40e618:	add	w19, w19, #0x1
  40e61c:	ldr	w0, [x20, #120]
  40e620:	cmp	w0, w19
  40e624:	b.ls	40e65c <nftw@plt+0xbadc>  // b.plast
  40e628:	cmp	w19, #0x1
  40e62c:	b.le	40e60c <nftw@plt+0xba8c>
  40e630:	sbfiz	x2, x19, #3, #32
  40e634:	sub	x0, x2, #0x10
  40e638:	ldr	x2, [x20, #152]
  40e63c:	add	x2, x2, x0
  40e640:	ldr	x1, [x2]
  40e644:	mov	x0, x21
  40e648:	bl	40e50c <nftw@plt+0xb98c>
  40e64c:	and	w2, w0, #0xff
  40e650:	cbnz	w2, 40e618 <nftw@plt+0xba98>
  40e654:	strb	wzr, [x21]
  40e658:	b	40e618 <nftw@plt+0xba98>
  40e65c:	ldp	x19, x20, [sp, #16]
  40e660:	ldr	x21, [sp, #32]
  40e664:	ldp	x29, x30, [sp], #48
  40e668:	ret
  40e66c:	ldp	x19, x20, [sp, #16]
  40e670:	b	40e660 <nftw@plt+0xbae0>
  40e674:	stp	x29, x30, [sp, #-112]!
  40e678:	mov	x29, sp
  40e67c:	stp	x19, x20, [sp, #16]
  40e680:	mov	x19, x0
  40e684:	ldrb	w0, [x0]
  40e688:	cbz	w0, 40e6d4 <nftw@plt+0xbb54>
  40e68c:	and	w20, w1, #0xff
  40e690:	mov	w1, #0x0                   	// #0
  40e694:	add	x0, sp, #0x28
  40e698:	bl	40f0b8 <nftw@plt+0xc538>
  40e69c:	mov	w2, w20
  40e6a0:	add	x1, sp, #0x28
  40e6a4:	mov	x0, x19
  40e6a8:	bl	40d1dc <nftw@plt+0xa65c>
  40e6ac:	add	x0, sp, #0x28
  40e6b0:	bl	40f144 <nftw@plt+0xc5c4>
  40e6b4:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  40e6b8:	mov	x19, x0
  40e6bc:	add	x0, sp, #0x28
  40e6c0:	bl	40ef54 <nftw@plt+0xc3d4>
  40e6c4:	mov	x0, x19
  40e6c8:	ldp	x19, x20, [sp, #16]
  40e6cc:	ldp	x29, x30, [sp], #112
  40e6d0:	ret
  40e6d4:	mov	x19, #0x0                   	// #0
  40e6d8:	b	40e6c4 <nftw@plt+0xbb44>
  40e6dc:	stp	x29, x30, [sp, #-112]!
  40e6e0:	mov	x29, sp
  40e6e4:	str	x19, [sp, #16]
  40e6e8:	mov	x19, x0
  40e6ec:	mov	w1, #0x0                   	// #0
  40e6f0:	add	x0, sp, #0x28
  40e6f4:	bl	40f0b8 <nftw@plt+0xc538>
  40e6f8:	add	x1, sp, #0x28
  40e6fc:	mov	x0, x19
  40e700:	bl	40dd38 <nftw@plt+0xb1b8>
  40e704:	and	w0, w0, #0xff
  40e708:	mov	x19, #0x0                   	// #0
  40e70c:	cbz	w0, 40e720 <nftw@plt+0xbba0>
  40e710:	add	x0, sp, #0x28
  40e714:	bl	40f144 <nftw@plt+0xc5c4>
  40e718:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  40e71c:	mov	x19, x0
  40e720:	add	x0, sp, #0x28
  40e724:	bl	40ef54 <nftw@plt+0xc3d4>
  40e728:	mov	x0, x19
  40e72c:	ldr	x19, [sp, #16]
  40e730:	ldp	x29, x30, [sp], #112
  40e734:	ret
  40e738:	ldrb	w2, [x0]
  40e73c:	cbz	w2, 40e758 <nftw@plt+0xbbd8>
  40e740:	stp	x29, x30, [sp, #-16]!
  40e744:	mov	x29, sp
  40e748:	bl	40db24 <nftw@plt+0xafa4>
  40e74c:	bl	40e6dc <nftw@plt+0xbb5c>
  40e750:	ldp	x29, x30, [sp], #16
  40e754:	ret
  40e758:	mov	x0, #0x0                   	// #0
  40e75c:	ret
  40e760:	cbz	x1, 40e864 <nftw@plt+0xbce4>
  40e764:	stp	x29, x30, [sp, #-64]!
  40e768:	mov	x29, sp
  40e76c:	stp	x19, x20, [sp, #16]
  40e770:	stp	x21, x22, [sp, #32]
  40e774:	str	x23, [sp, #48]
  40e778:	mov	x22, x0
  40e77c:	mov	x19, x1
  40e780:	ldr	x1, [x0, #16]
  40e784:	cbz	x1, 40e790 <nftw@plt+0xbc10>
  40e788:	ldr	w0, [x19]
  40e78c:	blr	x1
  40e790:	ldr	x1, [x22, #24]
  40e794:	cbz	x1, 40e7a0 <nftw@plt+0xbc20>
  40e798:	ldr	x0, [x19, #8]
  40e79c:	blr	x1
  40e7a0:	str	xzr, [x19, #32]
  40e7a4:	mov	x21, #0x0                   	// #0
  40e7a8:	mov	x23, #0x28                  	// #40
  40e7ac:	b	40e7e8 <nftw@plt+0xbc68>
  40e7b0:	cbz	x21, 40e850 <nftw@plt+0xbcd0>
  40e7b4:	mov	x0, x21
  40e7b8:	mov	x21, x20
  40e7bc:	mov	x20, x0
  40e7c0:	b	40e7e4 <nftw@plt+0xbc64>
  40e7c4:	ldr	x0, [x19, #24]
  40e7c8:	str	x21, [x0, #32]
  40e7cc:	ldr	x21, [x19, #24]
  40e7d0:	ldr	x20, [x19, #32]
  40e7d4:	mov	x1, x23
  40e7d8:	mov	x0, x19
  40e7dc:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  40e7e0:	cbz	x20, 40e7b0 <nftw@plt+0xbc30>
  40e7e4:	mov	x19, x20
  40e7e8:	ldr	x0, [x19, #16]
  40e7ec:	cbz	x0, 40e820 <nftw@plt+0xbca0>
  40e7f0:	ldr	x1, [x22, #16]
  40e7f4:	cbz	x1, 40e800 <nftw@plt+0xbc80>
  40e7f8:	ldr	w0, [x0]
  40e7fc:	blr	x1
  40e800:	ldr	x1, [x22, #24]
  40e804:	cbz	x1, 40e814 <nftw@plt+0xbc94>
  40e808:	ldr	x0, [x19, #16]
  40e80c:	ldr	x0, [x0, #8]
  40e810:	blr	x1
  40e814:	ldr	x0, [x19, #16]
  40e818:	str	x21, [x0, #32]
  40e81c:	ldr	x21, [x19, #16]
  40e820:	ldr	x0, [x19, #24]
  40e824:	cbz	x0, 40e7d0 <nftw@plt+0xbc50>
  40e828:	ldr	x1, [x22, #16]
  40e82c:	cbz	x1, 40e838 <nftw@plt+0xbcb8>
  40e830:	ldr	w0, [x0]
  40e834:	blr	x1
  40e838:	ldr	x1, [x22, #24]
  40e83c:	cbz	x1, 40e7c4 <nftw@plt+0xbc44>
  40e840:	ldr	x0, [x19, #24]
  40e844:	ldr	x0, [x0, #8]
  40e848:	blr	x1
  40e84c:	b	40e7c4 <nftw@plt+0xbc44>
  40e850:	ldp	x19, x20, [sp, #16]
  40e854:	ldp	x21, x22, [sp, #32]
  40e858:	ldr	x23, [sp, #48]
  40e85c:	ldp	x29, x30, [sp], #64
  40e860:	ret
  40e864:	ret
  40e868:	stp	x29, x30, [sp, #-64]!
  40e86c:	mov	x29, sp
  40e870:	stp	x21, x22, [sp, #32]
  40e874:	str	x23, [sp, #48]
  40e878:	mov	x22, x0
  40e87c:	mov	x23, x1
  40e880:	ldr	x0, [x0]
  40e884:	cbz	x0, 40e96c <nftw@plt+0xbdec>
  40e888:	stp	x19, x20, [sp, #16]
  40e88c:	b	40e8d8 <nftw@plt+0xbd58>
  40e890:	ldr	x19, [x21, #16]
  40e894:	b	40e8fc <nftw@plt+0xbd7c>
  40e898:	ldr	x1, [x19, #16]
  40e89c:	cbz	x1, 40e954 <nftw@plt+0xbdd4>
  40e8a0:	lsr	w2, w20, #31
  40e8a4:	lsr	w1, w0, #31
  40e8a8:	cmp	w2, #0x0
  40e8ac:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e8b0:	b.eq	40e9b8 <nftw@plt+0xbe38>  // b.none
  40e8b4:	ldr	x2, [x19, #16]
  40e8b8:	ldr	x0, [x2, #24]
  40e8bc:	str	x19, [x2, #24]
  40e8c0:	str	x0, [x19, #16]
  40e8c4:	str	x2, [x21, #16]
  40e8c8:	ldr	x0, [x2, #24]
  40e8cc:	str	x21, [x2, #24]
  40e8d0:	str	x0, [x21, #16]
  40e8d4:	str	x2, [x22]
  40e8d8:	ldr	x21, [x22]
  40e8dc:	ldr	x2, [x22, #8]
  40e8e0:	ldr	x1, [x21]
  40e8e4:	mov	x0, x23
  40e8e8:	blr	x2
  40e8ec:	mov	w20, w0
  40e8f0:	cbz	w0, 40ea00 <nftw@plt+0xbe80>
  40e8f4:	tbnz	w0, #31, 40e890 <nftw@plt+0xbd10>
  40e8f8:	ldr	x19, [x21, #24]
  40e8fc:	cbz	x19, 40ea08 <nftw@plt+0xbe88>
  40e900:	ldr	x2, [x22, #8]
  40e904:	ldr	x1, [x19]
  40e908:	mov	x0, x23
  40e90c:	blr	x2
  40e910:	cbz	w0, 40e954 <nftw@plt+0xbdd4>
  40e914:	tbnz	w0, #31, 40e898 <nftw@plt+0xbd18>
  40e918:	ldr	x2, [x19, #24]
  40e91c:	cbz	x2, 40e954 <nftw@plt+0xbdd4>
  40e920:	cmp	w20, #0x0
  40e924:	b.gt	40e994 <nftw@plt+0xbe14>
  40e928:	tbz	w20, #31, 40e8d8 <nftw@plt+0xbd58>
  40e92c:	ldr	x0, [x19, #24]
  40e930:	ldr	x1, [x0, #16]
  40e934:	str	x19, [x0, #16]
  40e938:	str	x1, [x19, #24]
  40e93c:	str	x0, [x21, #16]
  40e940:	ldr	x1, [x0, #24]
  40e944:	str	x21, [x0, #24]
  40e948:	str	x1, [x21, #16]
  40e94c:	str	x0, [x22]
  40e950:	b	40e8d8 <nftw@plt+0xbd58>
  40e954:	tbnz	w20, #31, 40e97c <nftw@plt+0xbdfc>
  40e958:	ldr	x0, [x19, #16]
  40e95c:	str	x21, [x19, #16]
  40e960:	str	x0, [x21, #24]
  40e964:	str	x19, [x22]
  40e968:	ldp	x19, x20, [sp, #16]
  40e96c:	ldp	x21, x22, [sp, #32]
  40e970:	ldr	x23, [sp, #48]
  40e974:	ldp	x29, x30, [sp], #64
  40e978:	ret
  40e97c:	ldr	x0, [x19, #24]
  40e980:	str	x21, [x19, #24]
  40e984:	str	x0, [x21, #16]
  40e988:	str	x19, [x22]
  40e98c:	ldp	x19, x20, [sp, #16]
  40e990:	b	40e96c <nftw@plt+0xbdec>
  40e994:	ldr	x0, [x2, #16]
  40e998:	str	x19, [x2, #16]
  40e99c:	str	x0, [x19, #24]
  40e9a0:	str	x2, [x21, #24]
  40e9a4:	ldr	x0, [x2, #16]
  40e9a8:	str	x21, [x2, #16]
  40e9ac:	str	x0, [x21, #24]
  40e9b0:	str	x2, [x22]
  40e9b4:	b	40e8d8 <nftw@plt+0xbd58>
  40e9b8:	cmp	w20, #0x0
  40e9bc:	cset	w3, gt
  40e9c0:	cmp	w0, #0x0
  40e9c4:	ccmp	w2, #0x0, #0x4, gt
  40e9c8:	b.ne	40e92c <nftw@plt+0xbdac>  // b.any
  40e9cc:	cmp	w3, #0x0
  40e9d0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e9d4:	b.eq	40e8d8 <nftw@plt+0xbd58>  // b.none
  40e9d8:	ldr	x0, [x19, #16]
  40e9dc:	ldr	x1, [x0, #24]
  40e9e0:	str	x19, [x0, #24]
  40e9e4:	str	x1, [x19, #16]
  40e9e8:	str	x0, [x21, #24]
  40e9ec:	ldr	x1, [x0, #16]
  40e9f0:	str	x21, [x0, #16]
  40e9f4:	str	x1, [x21, #24]
  40e9f8:	str	x0, [x22]
  40e9fc:	b	40e8d8 <nftw@plt+0xbd58>
  40ea00:	ldp	x19, x20, [sp, #16]
  40ea04:	b	40e96c <nftw@plt+0xbdec>
  40ea08:	ldp	x19, x20, [sp, #16]
  40ea0c:	b	40e96c <nftw@plt+0xbdec>
  40ea10:	stp	x29, x30, [sp, #-64]!
  40ea14:	mov	x29, sp
  40ea18:	stp	x21, x22, [sp, #32]
  40ea1c:	str	x23, [sp, #48]
  40ea20:	mov	x22, x0
  40ea24:	mov	w23, w1
  40ea28:	ldr	x0, [x0]
  40ea2c:	cbz	x0, 40eb14 <nftw@plt+0xbf94>
  40ea30:	stp	x19, x20, [sp, #16]
  40ea34:	b	40ea80 <nftw@plt+0xbf00>
  40ea38:	ldr	x19, [x21, #16]
  40ea3c:	b	40eaa4 <nftw@plt+0xbf24>
  40ea40:	ldr	x1, [x19, #16]
  40ea44:	cbz	x1, 40eafc <nftw@plt+0xbf7c>
  40ea48:	lsr	w2, w20, #31
  40ea4c:	lsr	w1, w0, #31
  40ea50:	cmp	w2, #0x0
  40ea54:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40ea58:	b.eq	40eb60 <nftw@plt+0xbfe0>  // b.none
  40ea5c:	ldr	x2, [x19, #16]
  40ea60:	ldr	x0, [x2, #24]
  40ea64:	str	x19, [x2, #24]
  40ea68:	str	x0, [x19, #16]
  40ea6c:	str	x2, [x21, #16]
  40ea70:	ldr	x0, [x2, #24]
  40ea74:	str	x21, [x2, #24]
  40ea78:	str	x0, [x21, #16]
  40ea7c:	str	x2, [x22]
  40ea80:	ldr	x21, [x22]
  40ea84:	ldr	x2, [x22, #8]
  40ea88:	ldr	w1, [x21]
  40ea8c:	mov	w0, w23
  40ea90:	blr	x2
  40ea94:	mov	w20, w0
  40ea98:	cbz	w0, 40eba8 <nftw@plt+0xc028>
  40ea9c:	tbnz	w0, #31, 40ea38 <nftw@plt+0xbeb8>
  40eaa0:	ldr	x19, [x21, #24]
  40eaa4:	cbz	x19, 40ebb0 <nftw@plt+0xc030>
  40eaa8:	ldr	x2, [x22, #8]
  40eaac:	ldr	w1, [x19]
  40eab0:	mov	w0, w23
  40eab4:	blr	x2
  40eab8:	cbz	w0, 40eafc <nftw@plt+0xbf7c>
  40eabc:	tbnz	w0, #31, 40ea40 <nftw@plt+0xbec0>
  40eac0:	ldr	x2, [x19, #24]
  40eac4:	cbz	x2, 40eafc <nftw@plt+0xbf7c>
  40eac8:	cmp	w20, #0x0
  40eacc:	b.gt	40eb3c <nftw@plt+0xbfbc>
  40ead0:	tbz	w20, #31, 40ea80 <nftw@plt+0xbf00>
  40ead4:	ldr	x0, [x19, #24]
  40ead8:	ldr	x1, [x0, #16]
  40eadc:	str	x19, [x0, #16]
  40eae0:	str	x1, [x19, #24]
  40eae4:	str	x0, [x21, #16]
  40eae8:	ldr	x1, [x0, #24]
  40eaec:	str	x21, [x0, #24]
  40eaf0:	str	x1, [x21, #16]
  40eaf4:	str	x0, [x22]
  40eaf8:	b	40ea80 <nftw@plt+0xbf00>
  40eafc:	tbnz	w20, #31, 40eb24 <nftw@plt+0xbfa4>
  40eb00:	ldr	x0, [x19, #16]
  40eb04:	str	x21, [x19, #16]
  40eb08:	str	x0, [x21, #24]
  40eb0c:	str	x19, [x22]
  40eb10:	ldp	x19, x20, [sp, #16]
  40eb14:	ldp	x21, x22, [sp, #32]
  40eb18:	ldr	x23, [sp, #48]
  40eb1c:	ldp	x29, x30, [sp], #64
  40eb20:	ret
  40eb24:	ldr	x0, [x19, #24]
  40eb28:	str	x21, [x19, #24]
  40eb2c:	str	x0, [x21, #16]
  40eb30:	str	x19, [x22]
  40eb34:	ldp	x19, x20, [sp, #16]
  40eb38:	b	40eb14 <nftw@plt+0xbf94>
  40eb3c:	ldr	x0, [x2, #16]
  40eb40:	str	x19, [x2, #16]
  40eb44:	str	x0, [x19, #24]
  40eb48:	str	x2, [x21, #24]
  40eb4c:	ldr	x0, [x2, #16]
  40eb50:	str	x21, [x2, #16]
  40eb54:	str	x0, [x21, #24]
  40eb58:	str	x2, [x22]
  40eb5c:	b	40ea80 <nftw@plt+0xbf00>
  40eb60:	cmp	w20, #0x0
  40eb64:	cset	w3, gt
  40eb68:	cmp	w0, #0x0
  40eb6c:	ccmp	w2, #0x0, #0x4, gt
  40eb70:	b.ne	40ead4 <nftw@plt+0xbf54>  // b.any
  40eb74:	cmp	w3, #0x0
  40eb78:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40eb7c:	b.eq	40ea80 <nftw@plt+0xbf00>  // b.none
  40eb80:	ldr	x0, [x19, #16]
  40eb84:	ldr	x1, [x0, #24]
  40eb88:	str	x19, [x0, #24]
  40eb8c:	str	x1, [x19, #16]
  40eb90:	str	x0, [x21, #24]
  40eb94:	ldr	x1, [x0, #16]
  40eb98:	str	x21, [x0, #16]
  40eb9c:	str	x1, [x21, #24]
  40eba0:	str	x0, [x22]
  40eba4:	b	40ea80 <nftw@plt+0xbf00>
  40eba8:	ldp	x19, x20, [sp, #16]
  40ebac:	b	40eb14 <nftw@plt+0xbf94>
  40ebb0:	ldp	x19, x20, [sp, #16]
  40ebb4:	b	40eb14 <nftw@plt+0xbf94>
  40ebb8:	stp	x29, x30, [sp, #-32]!
  40ebbc:	mov	x29, sp
  40ebc0:	stp	x19, x20, [sp, #16]
  40ebc4:	mov	x19, x0
  40ebc8:	ldr	x0, [x0]
  40ebcc:	cbz	x0, 40ec1c <nftw@plt+0xc09c>
  40ebd0:	mov	w20, w1
  40ebd4:	mov	x0, x19
  40ebd8:	bl	40ea10 <nftw@plt+0xbe90>
  40ebdc:	ldr	x0, [x19]
  40ebe0:	ldr	x2, [x19, #8]
  40ebe4:	mov	w1, w20
  40ebe8:	ldr	w0, [x0]
  40ebec:	blr	x2
  40ebf0:	cmp	w0, #0x0
  40ebf4:	b.gt	40ec18 <nftw@plt+0xc098>
  40ebf8:	ldr	x0, [x19]
  40ebfc:	ldr	x1, [x0, #24]
  40ec00:	mov	x0, x1
  40ec04:	cbz	x1, 40ec1c <nftw@plt+0xc09c>
  40ec08:	mov	x0, x1
  40ec0c:	ldr	x1, [x1, #16]
  40ec10:	cbnz	x1, 40ec08 <nftw@plt+0xc088>
  40ec14:	b	40ec1c <nftw@plt+0xc09c>
  40ec18:	ldr	x0, [x19]
  40ec1c:	ldp	x19, x20, [sp, #16]
  40ec20:	ldp	x29, x30, [sp], #32
  40ec24:	ret
  40ec28:	stp	x29, x30, [sp, #-16]!
  40ec2c:	mov	x29, sp
  40ec30:	mov	x0, x1
  40ec34:	mov	x1, x2
  40ec38:	ldrb	w2, [x2, #8]
  40ec3c:	ldr	x1, [x1]
  40ec40:	bl	40e1cc <nftw@plt+0xb64c>
  40ec44:	mov	w0, #0x0                   	// #0
  40ec48:	ldp	x29, x30, [sp], #16
  40ec4c:	ret
  40ec50:	ldrb	w7, [x0]
  40ec54:	cbz	x1, 40ec94 <nftw@plt+0xc114>
  40ec58:	mov	w4, w7
  40ec5c:	tbz	w7, #7, 40ed74 <nftw@plt+0xc1f4>
  40ec60:	mov	x3, #0x0                   	// #0
  40ec64:	mov	x6, x3
  40ec68:	add	x3, x3, #0x1
  40ec6c:	lsl	w4, w4, #1
  40ec70:	tbnz	w4, #7, 40ec64 <nftw@plt+0xc0e4>
  40ec74:	sub	x6, x6, #0x1
  40ec78:	cmp	x6, #0x4
  40ec7c:	ccmp	x1, x3, #0x0, ls  // ls = plast
  40ec80:	b.cs	40ecb4 <nftw@plt+0xc134>  // b.hs, b.nlast
  40ec84:	mov	w0, #0xffffffff            	// #-1
  40ec88:	str	w0, [x2]
  40ec8c:	mov	w0, #0x0                   	// #0
  40ec90:	ret
  40ec94:	stp	x29, x30, [sp, #-16]!
  40ec98:	mov	x29, sp
  40ec9c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40eca0:	add	x2, x2, #0xc8
  40eca4:	mov	w1, #0x71b                 	// #1819
  40eca8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40ecac:	add	x0, x0, #0xe0
  40ecb0:	bl	408d8c <nftw@plt+0x620c>
  40ecb4:	mov	w5, #0x7                   	// #7
  40ecb8:	sub	w1, w5, w3
  40ecbc:	mov	w5, #0x1                   	// #1
  40ecc0:	lsl	w5, w5, w1
  40ecc4:	sub	w5, w5, #0x1
  40ecc8:	and	w5, w5, w7
  40eccc:	mov	x1, #0x1                   	// #1
  40ecd0:	ldrb	w4, [x0, x1]
  40ecd4:	and	w6, w4, #0xc0
  40ecd8:	cmp	w6, #0x80
  40ecdc:	b.ne	40ed58 <nftw@plt+0xc1d8>  // b.any
  40ece0:	bfi	w4, w5, #6, #26
  40ece4:	mov	w5, w4
  40ece8:	add	x1, x1, #0x1
  40ecec:	cmp	x3, x1
  40ecf0:	b.hi	40ecd0 <nftw@plt+0xc150>  // b.pmore
  40ecf4:	cmp	w4, #0x7f
  40ecf8:	b.ls	40ed48 <nftw@plt+0xc1c8>  // b.plast
  40ecfc:	cmp	w4, #0x7ff
  40ed00:	ccmp	x3, #0x2, #0x0, ls  // ls = plast
  40ed04:	b.hi	40ed48 <nftw@plt+0xc1c8>  // b.pmore
  40ed08:	mov	w0, #0xffff                	// #65535
  40ed0c:	cmp	w4, w0
  40ed10:	ccmp	x3, #0x3, #0x0, ls  // ls = plast
  40ed14:	b.hi	40ed48 <nftw@plt+0xc1c8>  // b.pmore
  40ed18:	mov	w0, #0x1fffff              	// #2097151
  40ed1c:	cmp	w4, w0
  40ed20:	ccmp	x3, #0x4, #0x0, ls  // ls = plast
  40ed24:	b.hi	40ed48 <nftw@plt+0xc1c8>  // b.pmore
  40ed28:	mov	w0, #0x3ffffff             	// #67108863
  40ed2c:	cmp	w4, w0
  40ed30:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
  40ed34:	b.eq	40ed48 <nftw@plt+0xc1c8>  // b.none
  40ed38:	sub	w0, w4, #0xd, lsl #12
  40ed3c:	sub	w0, w0, #0x800
  40ed40:	cmp	w0, #0x7ff
  40ed44:	b.hi	40ed68 <nftw@plt+0xc1e8>  // b.pmore
  40ed48:	mov	w0, #0xffffffff            	// #-1
  40ed4c:	str	w0, [x2]
  40ed50:	mov	w0, #0x0                   	// #0
  40ed54:	ret
  40ed58:	mov	w0, #0xffffffff            	// #-1
  40ed5c:	str	w0, [x2]
  40ed60:	mov	w0, #0x0                   	// #0
  40ed64:	ret
  40ed68:	str	w4, [x2]
  40ed6c:	mov	w0, w3
  40ed70:	ret
  40ed74:	str	w7, [x2]
  40ed78:	mov	w0, #0x1                   	// #1
  40ed7c:	ret
  40ed80:	stp	x29, x30, [sp, #-32]!
  40ed84:	mov	x29, sp
  40ed88:	stp	x19, x20, [sp, #16]
  40ed8c:	mov	x19, x0
  40ed90:	ldr	w20, [x0, #40]
  40ed94:	cmp	w20, #0x0
  40ed98:	b.le	40eda8 <nftw@plt+0xc228>
  40ed9c:	ldr	w0, [x0, #36]
  40eda0:	cmp	w0, #0x1
  40eda4:	b.hi	40edb8 <nftw@plt+0xc238>  // b.pmore
  40eda8:	str	w20, [x19, #28]
  40edac:	ldp	x19, x20, [sp, #16]
  40edb0:	ldp	x29, x30, [sp], #32
  40edb4:	ret
  40edb8:	ldr	x0, [x19, #16]
  40edbc:	mov	w1, #0x0                   	// #0
  40edc0:	cbz	x0, 40edcc <nftw@plt+0xc24c>
  40edc4:	bl	4024f0 <strlen@plt>
  40edc8:	mov	w1, w0
  40edcc:	sub	w1, w20, w1
  40edd0:	add	w0, w20, #0x20
  40edd4:	cmp	w1, #0x20
  40edd8:	csel	w20, w0, w20, lt  // lt = tstop
  40eddc:	str	w20, [x19, #28]
  40ede0:	b	40edac <nftw@plt+0xc22c>
  40ede4:	stp	x29, x30, [sp, #-16]!
  40ede8:	mov	x29, sp
  40edec:	ldr	x0, [x0, #32]
  40edf0:	bl	42d360 <nftw@plt+0x2a7e0>
  40edf4:	ldp	x29, x30, [sp], #16
  40edf8:	ret
  40edfc:	cbz	w1, 40ee08 <nftw@plt+0xc288>
  40ee00:	mov	w0, #0x0                   	// #0
  40ee04:	ret
  40ee08:	stp	x29, x30, [sp, #-16]!
  40ee0c:	mov	x29, sp
  40ee10:	ldr	x0, [x0, #32]
  40ee14:	bl	42d164 <nftw@plt+0x2a5e4>
  40ee18:	ldp	x29, x30, [sp], #16
  40ee1c:	ret
  40ee20:	stp	x29, x30, [sp, #-48]!
  40ee24:	mov	x29, sp
  40ee28:	stp	x19, x20, [sp, #16]
  40ee2c:	str	x21, [sp, #32]
  40ee30:	mov	x19, x0
  40ee34:	str	xzr, [x0]
  40ee38:	str	xzr, [x0, #8]
  40ee3c:	str	xzr, [x0, #16]
  40ee40:	str	xzr, [x0, #24]
  40ee44:	str	xzr, [x0, #32]
  40ee48:	str	xzr, [x0, #40]
  40ee4c:	str	xzr, [x0, #48]
  40ee50:	str	xzr, [x0, #56]
  40ee54:	str	xzr, [x0, #64]
  40ee58:	str	xzr, [x0, #72]
  40ee5c:	ldrb	w0, [x0, #80]
  40ee60:	and	w0, w0, #0xfffffff8
  40ee64:	strb	w0, [x19, #80]
  40ee68:	str	xzr, [x19, #88]
  40ee6c:	str	xzr, [x19, #96]
  40ee70:	str	xzr, [x19, #104]
  40ee74:	str	xzr, [x19, #112]
  40ee78:	str	xzr, [x19, #120]
  40ee7c:	str	xzr, [x19, #128]
  40ee80:	str	xzr, [x19, #136]
  40ee84:	str	xzr, [x19, #144]
  40ee88:	str	xzr, [x19, #152]
  40ee8c:	str	xzr, [x19, #160]
  40ee90:	ldrb	w0, [x19, #168]
  40ee94:	and	w0, w0, #0xfffffff8
  40ee98:	strb	w0, [x19, #168]
  40ee9c:	str	x19, [x19, #176]
  40eea0:	str	xzr, [x19, #184]
  40eea4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40eea8:	ldr	x0, [x0, #1392]
  40eeac:	str	x0, [x19, #192]
  40eeb0:	str	wzr, [x19, #200]
  40eeb4:	add	x1, x19, #0xcc
  40eeb8:	add	x2, x19, #0x14c
  40eebc:	strb	wzr, [x1], #1
  40eec0:	cmp	x1, x2
  40eec4:	b.ne	40eebc <nftw@plt+0xc33c>  // b.any
  40eec8:	mov	w0, #0x1                   	// #1
  40eecc:	strb	w0, [x19, #332]
  40eed0:	adrp	x21, 416000 <nftw@plt+0x13480>
  40eed4:	add	x21, x21, #0xe54
  40eed8:	adrp	x20, 416000 <nftw@plt+0x13480>
  40eedc:	add	x20, x20, #0xe10
  40eee0:	mov	x4, x21
  40eee4:	mov	x3, x20
  40eee8:	mov	x2, #0x0                   	// #0
  40eeec:	mov	x1, #0x0                   	// #0
  40eef0:	mov	x0, x19
  40eef4:	bl	44a3d8 <_obstack_begin@@Base>
  40eef8:	mov	x4, x21
  40eefc:	mov	x3, x20
  40ef00:	mov	x2, #0x0                   	// #0
  40ef04:	mov	x1, #0x0                   	// #0
  40ef08:	add	x0, x19, #0x58
  40ef0c:	bl	44a3d8 <_obstack_begin@@Base>
  40ef10:	ldp	x19, x20, [sp, #16]
  40ef14:	ldr	x21, [sp, #32]
  40ef18:	ldp	x29, x30, [sp], #48
  40ef1c:	ret
  40ef20:	stp	x29, x30, [sp, #-32]!
  40ef24:	mov	x29, sp
  40ef28:	str	x19, [sp, #16]
  40ef2c:	mov	x19, x0
  40ef30:	mov	x1, #0x0                   	// #0
  40ef34:	add	x0, x0, #0x58
  40ef38:	bl	44a584 <_obstack_free@@Base>
  40ef3c:	mov	x1, #0x0                   	// #0
  40ef40:	mov	x0, x19
  40ef44:	bl	44a584 <_obstack_free@@Base>
  40ef48:	ldr	x19, [sp, #16]
  40ef4c:	ldp	x29, x30, [sp], #32
  40ef50:	ret
  40ef54:	stp	x29, x30, [sp, #-32]!
  40ef58:	mov	x29, sp
  40ef5c:	str	x19, [sp, #16]
  40ef60:	mov	x19, x0
  40ef64:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40ef68:	add	x0, x0, #0x208
  40ef6c:	str	x0, [x19]
  40ef70:	ldr	x0, [x19, #56]
  40ef74:	cbz	x0, 40ef84 <nftw@plt+0xc404>
  40ef78:	ldr	x1, [x0]
  40ef7c:	ldr	x1, [x1, #8]
  40ef80:	blr	x1
  40ef84:	ldr	x0, [x19, #8]
  40ef88:	bl	40ef20 <nftw@plt+0xc3a0>
  40ef8c:	ldr	x0, [x19, #8]
  40ef90:	bl	402910 <free@plt>
  40ef94:	ldr	x0, [x19, #16]
  40ef98:	bl	402910 <free@plt>
  40ef9c:	ldr	x19, [sp, #16]
  40efa0:	ldp	x29, x30, [sp], #32
  40efa4:	ret
  40efa8:	stp	x29, x30, [sp, #-32]!
  40efac:	mov	x29, sp
  40efb0:	str	x19, [sp, #16]
  40efb4:	mov	x19, x0
  40efb8:	bl	40ef54 <nftw@plt+0xc3d4>
  40efbc:	mov	x1, #0x48                  	// #72
  40efc0:	mov	x0, x19
  40efc4:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  40efc8:	ldr	x19, [sp, #16]
  40efcc:	ldp	x29, x30, [sp], #32
  40efd0:	ret
  40efd4:	stp	x29, x30, [sp, #-16]!
  40efd8:	mov	x29, sp
  40efdc:	str	w1, [x0, #40]
  40efe0:	bl	40ed80 <nftw@plt+0xc200>
  40efe4:	ldp	x29, x30, [sp], #16
  40efe8:	ret
  40efec:	stp	x29, x30, [sp, #-32]!
  40eff0:	mov	x29, sp
  40eff4:	str	x19, [sp, #16]
  40eff8:	mov	x19, x0
  40effc:	ldr	x0, [x0, #8]
  40f000:	ldr	x0, [x0, #176]
  40f004:	ldr	x1, [x0, #16]
  40f008:	ldr	x2, [x0, #8]
  40f00c:	cmp	x2, x1
  40f010:	b.cs	40f028 <nftw@plt+0xc4a8>  // b.hs, b.nlast
  40f014:	ldr	x2, [x0, #32]
  40f018:	cmp	x2, x1
  40f01c:	b.ls	40f028 <nftw@plt+0xc4a8>  // b.plast
  40f020:	str	x1, [x0, #24]
  40f024:	b	40f02c <nftw@plt+0xc4ac>
  40f028:	bl	44a584 <_obstack_free@@Base>
  40f02c:	ldr	x0, [x19, #8]
  40f030:	str	wzr, [x0, #200]
  40f034:	ldr	x19, [sp, #16]
  40f038:	ldp	x29, x30, [sp], #32
  40f03c:	ret
  40f040:	stp	x29, x30, [sp, #-32]!
  40f044:	mov	x29, sp
  40f048:	stp	x19, x20, [sp, #16]
  40f04c:	mov	x19, x0
  40f050:	mov	x20, x1
  40f054:	ldr	x0, [x0, #16]
  40f058:	bl	402910 <free@plt>
  40f05c:	str	x20, [x19, #16]
  40f060:	mov	x0, x19
  40f064:	bl	40ed80 <nftw@plt+0xc200>
  40f068:	strb	wzr, [x19, #64]
  40f06c:	str	wzr, [x19, #32]
  40f070:	ldp	x19, x20, [sp, #16]
  40f074:	ldp	x29, x30, [sp], #32
  40f078:	ret
  40f07c:	mov	x1, x0
  40f080:	ldr	x0, [x0, #16]
  40f084:	str	xzr, [x1, #16]
  40f088:	ret
  40f08c:	stp	x29, x30, [sp, #-32]!
  40f090:	mov	x29, sp
  40f094:	str	x19, [sp, #16]
  40f098:	mov	x19, x0
  40f09c:	ldr	x0, [x0, #16]
  40f0a0:	cbz	x0, 40f0ac <nftw@plt+0xc52c>
  40f0a4:	bl	402910 <free@plt>
  40f0a8:	str	xzr, [x19, #16]
  40f0ac:	ldr	x19, [sp, #16]
  40f0b0:	ldp	x29, x30, [sp], #32
  40f0b4:	ret
  40f0b8:	stp	x29, x30, [sp, #-48]!
  40f0bc:	mov	x29, sp
  40f0c0:	stp	x19, x20, [sp, #16]
  40f0c4:	str	x21, [sp, #32]
  40f0c8:	mov	x19, x0
  40f0cc:	mov	w20, w1
  40f0d0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40f0d4:	add	x0, x0, #0x208
  40f0d8:	str	x0, [x19]
  40f0dc:	mov	x1, #0x150                 	// #336
  40f0e0:	mov	x0, #0x1                   	// #1
  40f0e4:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  40f0e8:	mov	x21, x0
  40f0ec:	bl	40ee20 <nftw@plt+0xc2a0>
  40f0f0:	str	x21, [x19, #8]
  40f0f4:	str	xzr, [x19, #16]
  40f0f8:	str	wzr, [x19, #24]
  40f0fc:	str	wzr, [x19, #28]
  40f100:	str	wzr, [x19, #32]
  40f104:	str	wzr, [x19, #36]
  40f108:	str	xzr, [x19, #48]
  40f10c:	str	xzr, [x19, #56]
  40f110:	strb	wzr, [x19, #64]
  40f114:	strb	wzr, [x19, #65]
  40f118:	mov	w0, #0x1                   	// #1
  40f11c:	strb	w0, [x19, #66]
  40f120:	strb	wzr, [x19, #67]
  40f124:	str	w20, [x19, #40]
  40f128:	mov	x1, #0x0                   	// #0
  40f12c:	mov	x0, x19
  40f130:	bl	40f040 <nftw@plt+0xc4c0>
  40f134:	ldp	x19, x20, [sp, #16]
  40f138:	ldr	x21, [sp, #32]
  40f13c:	ldp	x29, x30, [sp], #48
  40f140:	ret
  40f144:	stp	x29, x30, [sp, #-32]!
  40f148:	mov	x29, sp
  40f14c:	stp	x19, x20, [sp, #16]
  40f150:	ldr	x20, [x0, #8]
  40f154:	ldr	x19, [x20, #176]
  40f158:	ldr	x1, [x19, #32]
  40f15c:	ldr	x0, [x19, #24]
  40f160:	cmp	x1, x0
  40f164:	b.eq	40f18c <nftw@plt+0xc60c>  // b.none
  40f168:	ldr	x0, [x19, #24]
  40f16c:	add	x1, x0, #0x1
  40f170:	str	x1, [x19, #24]
  40f174:	strb	wzr, [x0]
  40f178:	ldr	x0, [x20, #176]
  40f17c:	ldr	x0, [x0, #16]
  40f180:	ldp	x19, x20, [sp, #16]
  40f184:	ldp	x29, x30, [sp], #32
  40f188:	ret
  40f18c:	mov	x1, #0x1                   	// #1
  40f190:	mov	x0, x19
  40f194:	bl	44a42c <_obstack_newchunk@@Base>
  40f198:	b	40f168 <nftw@plt+0xc5e8>
  40f19c:	stp	x29, x30, [sp, #-32]!
  40f1a0:	mov	x29, sp
  40f1a4:	str	x19, [sp, #16]
  40f1a8:	mov	x19, x0
  40f1ac:	bl	40f144 <nftw@plt+0xc5c4>
  40f1b0:	ldr	x1, [x19, #8]
  40f1b4:	ldr	x1, [x1, #192]
  40f1b8:	bl	402500 <fputs@plt>
  40f1bc:	mov	x0, x19
  40f1c0:	bl	40efec <nftw@plt+0xc46c>
  40f1c4:	ldr	x19, [sp, #16]
  40f1c8:	ldp	x29, x30, [sp], #32
  40f1cc:	ret
  40f1d0:	stp	x29, x30, [sp, #-32]!
  40f1d4:	mov	x29, sp
  40f1d8:	str	x19, [sp, #16]
  40f1dc:	mov	x19, x0
  40f1e0:	strb	wzr, [x0, #64]
  40f1e4:	str	wzr, [x0, #32]
  40f1e8:	ldr	x0, [x0, #8]
  40f1ec:	ldrb	w0, [x0, #332]
  40f1f0:	cbnz	w0, 40f200 <nftw@plt+0xc680>
  40f1f4:	ldr	x19, [sp, #16]
  40f1f8:	ldp	x29, x30, [sp], #32
  40f1fc:	ret
  40f200:	mov	x0, x19
  40f204:	bl	40f19c <nftw@plt+0xc61c>
  40f208:	ldr	x0, [x19, #8]
  40f20c:	ldr	x0, [x0, #192]
  40f210:	bl	402980 <fflush@plt>
  40f214:	b	40f1f4 <nftw@plt+0xc674>
  40f218:	stp	x29, x30, [sp, #-32]!
  40f21c:	mov	x29, sp
  40f220:	str	x19, [sp, #16]
  40f224:	mov	x19, x0
  40f228:	strb	wzr, [x0, #64]
  40f22c:	str	wzr, [x0, #32]
  40f230:	bl	40f19c <nftw@plt+0xc61c>
  40f234:	ldr	x0, [x19, #8]
  40f238:	ldr	x0, [x0, #192]
  40f23c:	bl	402980 <fflush@plt>
  40f240:	ldr	x19, [sp, #16]
  40f244:	ldp	x29, x30, [sp], #32
  40f248:	ret
  40f24c:	stp	x29, x30, [sp, #-80]!
  40f250:	mov	x29, sp
  40f254:	stp	x19, x20, [sp, #16]
  40f258:	stp	x21, x22, [sp, #32]
  40f25c:	stp	x23, x24, [sp, #48]
  40f260:	mov	x22, x0
  40f264:	and	w24, w1, #0xff
  40f268:	bl	40f144 <nftw@plt+0xc5c4>
  40f26c:	mov	x19, x0
  40f270:	ldr	x0, [x22, #8]
  40f274:	ldr	x20, [x0, #192]
  40f278:	ldrb	w1, [x19]
  40f27c:	cbz	w1, 40f34c <nftw@plt+0xc7cc>
  40f280:	stp	x25, x26, [sp, #64]
  40f284:	mov	w21, #0x5c                  	// #92
  40f288:	adrp	x23, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40f28c:	add	x23, x23, #0x100
  40f290:	mov	x26, #0x2                   	// #2
  40f294:	mov	x25, #0x1                   	// #1
  40f298:	b	40f2d8 <nftw@plt+0xc758>
  40f29c:	cmp	w1, #0xa
  40f2a0:	b.ne	40f304 <nftw@plt+0xc784>  // b.any
  40f2a4:	mov	x3, x20
  40f2a8:	mov	x2, x26
  40f2ac:	mov	x1, x25
  40f2b0:	mov	x0, x23
  40f2b4:	bl	402950 <fwrite@plt>
  40f2b8:	mov	x1, x20
  40f2bc:	mov	w0, w21
  40f2c0:	bl	4025e0 <fputc@plt>
  40f2c4:	mov	x1, x20
  40f2c8:	ldrb	w0, [x19]
  40f2cc:	bl	4025e0 <fputc@plt>
  40f2d0:	ldrb	w1, [x19, #1]!
  40f2d4:	cbz	w1, 40f348 <nftw@plt+0xc7c8>
  40f2d8:	cmp	w1, #0x22
  40f2dc:	b.eq	40f2b8 <nftw@plt+0xc738>  // b.none
  40f2e0:	b.ls	40f29c <nftw@plt+0xc71c>  // b.plast
  40f2e4:	cmp	w1, #0x5c
  40f2e8:	b.eq	40f328 <nftw@plt+0xc7a8>  // b.none
  40f2ec:	b.ls	40f314 <nftw@plt+0xc794>  // b.plast
  40f2f0:	sub	w1, w1, #0x7b
  40f2f4:	and	w1, w1, #0xff
  40f2f8:	cmp	w1, #0x2
  40f2fc:	b.hi	40f2c4 <nftw@plt+0xc744>  // b.pmore
  40f300:	b	40f30c <nftw@plt+0xc78c>
  40f304:	cmp	w1, #0x20
  40f308:	b.ne	40f2c4 <nftw@plt+0xc744>  // b.any
  40f30c:	cbz	w24, 40f2c4 <nftw@plt+0xc744>
  40f310:	b	40f2b8 <nftw@plt+0xc738>
  40f314:	and	w1, w1, #0xfffffffd
  40f318:	and	w1, w1, #0xff
  40f31c:	cmp	w1, #0x3c
  40f320:	b.ne	40f2c4 <nftw@plt+0xc744>  // b.any
  40f324:	b	40f30c <nftw@plt+0xc78c>
  40f328:	ldrb	w0, [x19, #1]
  40f32c:	cbnz	w0, 40f2b8 <nftw@plt+0xc738>
  40f330:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40f334:	add	x2, x2, #0x108
  40f338:	mov	w1, #0x378                 	// #888
  40f33c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40f340:	add	x0, x0, #0xe0
  40f344:	bl	408d8c <nftw@plt+0x620c>
  40f348:	ldp	x25, x26, [sp, #64]
  40f34c:	mov	x0, x22
  40f350:	bl	40efec <nftw@plt+0xc46c>
  40f354:	ldp	x19, x20, [sp, #16]
  40f358:	ldp	x21, x22, [sp, #32]
  40f35c:	ldp	x23, x24, [sp, #48]
  40f360:	ldp	x29, x30, [sp], #80
  40f364:	ret
  40f368:	ldr	x0, [x0, #8]
  40f36c:	ldr	x0, [x0, #176]
  40f370:	ldr	x1, [x0, #24]
  40f374:	ldr	x2, [x0, #16]
  40f378:	sub	x0, x1, #0x1
  40f37c:	cmp	x2, x1
  40f380:	csel	x0, x0, xzr, ne  // ne = any
  40f384:	ret
  40f388:	ldr	x2, [x0, #8]
  40f38c:	ldr	w1, [x0, #28]
  40f390:	ldr	w0, [x2, #200]
  40f394:	sub	w0, w1, w0
  40f398:	ret
  40f39c:	stp	x29, x30, [sp, #-32]!
  40f3a0:	mov	x29, sp
  40f3a4:	stp	x19, x20, [sp, #16]
  40f3a8:	mov	x19, x0
  40f3ac:	ldr	x0, [x0, #8]
  40f3b0:	ldr	x20, [x0, #176]
  40f3b4:	ldr	x1, [x20, #32]
  40f3b8:	ldr	x0, [x20, #24]
  40f3bc:	cmp	x1, x0
  40f3c0:	b.eq	40f3f0 <nftw@plt+0xc870>  // b.none
  40f3c4:	ldr	x0, [x20, #24]
  40f3c8:	add	x1, x0, #0x1
  40f3cc:	str	x1, [x20, #24]
  40f3d0:	mov	w1, #0xa                   	// #10
  40f3d4:	strb	w1, [x0]
  40f3d8:	strb	wzr, [x19, #65]
  40f3dc:	ldr	x0, [x19, #8]
  40f3e0:	str	wzr, [x0, #200]
  40f3e4:	ldp	x19, x20, [sp, #16]
  40f3e8:	ldp	x29, x30, [sp], #32
  40f3ec:	ret
  40f3f0:	mov	x1, #0x1                   	// #1
  40f3f4:	mov	x0, x20
  40f3f8:	bl	44a42c <_obstack_newchunk@@Base>
  40f3fc:	b	40f3c4 <nftw@plt+0xc844>
  40f400:	stp	x29, x30, [sp, #-48]!
  40f404:	mov	x29, sp
  40f408:	stp	x19, x20, [sp, #16]
  40f40c:	str	x21, [sp, #32]
  40f410:	mov	x19, x0
  40f414:	mov	w21, w1
  40f418:	ldr	w0, [x0, #40]
  40f41c:	cmp	w0, #0x0
  40f420:	b.le	40f43c <nftw@plt+0xc8bc>
  40f424:	ldr	x1, [x19, #8]
  40f428:	ldr	w0, [x19, #28]
  40f42c:	ldr	w1, [x1, #200]
  40f430:	sub	w0, w0, w1
  40f434:	cmp	w0, #0x0
  40f438:	b.le	40f484 <nftw@plt+0xc904>
  40f43c:	ldr	x0, [x19, #8]
  40f440:	ldr	x20, [x0, #176]
  40f444:	ldr	x1, [x20, #32]
  40f448:	ldr	x0, [x20, #24]
  40f44c:	cmp	x1, x0
  40f450:	b.eq	40f4a4 <nftw@plt+0xc924>  // b.none
  40f454:	ldr	x0, [x20, #24]
  40f458:	add	x1, x0, #0x1
  40f45c:	str	x1, [x20, #24]
  40f460:	strb	w21, [x0]
  40f464:	ldr	x1, [x19, #8]
  40f468:	ldr	w0, [x1, #200]
  40f46c:	add	w0, w0, #0x1
  40f470:	str	w0, [x1, #200]
  40f474:	ldp	x19, x20, [sp, #16]
  40f478:	ldr	x21, [sp, #32]
  40f47c:	ldp	x29, x30, [sp], #48
  40f480:	ret
  40f484:	mov	x0, x19
  40f488:	bl	40f39c <nftw@plt+0xc81c>
  40f48c:	and	x1, x21, #0xff
  40f490:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  40f494:	add	x0, x0, #0xe68
  40f498:	ldrh	w0, [x0, x1, lsl #1]
  40f49c:	tbz	w0, #6, 40f43c <nftw@plt+0xc8bc>
  40f4a0:	b	40f474 <nftw@plt+0xc8f4>
  40f4a4:	mov	x1, #0x1                   	// #1
  40f4a8:	mov	x0, x20
  40f4ac:	bl	44a42c <_obstack_newchunk@@Base>
  40f4b0:	b	40f454 <nftw@plt+0xc8d4>
  40f4b4:	stp	x29, x30, [sp, #-48]!
  40f4b8:	mov	x29, sp
  40f4bc:	stp	x21, x22, [sp, #32]
  40f4c0:	ldr	w21, [x0, #32]
  40f4c4:	cmp	w21, #0x0
  40f4c8:	b.le	40f4f8 <nftw@plt+0xc978>
  40f4cc:	stp	x19, x20, [sp, #16]
  40f4d0:	mov	x20, x0
  40f4d4:	mov	w19, #0x0                   	// #0
  40f4d8:	mov	w22, #0x20                  	// #32
  40f4dc:	mov	w1, w22
  40f4e0:	mov	x0, x20
  40f4e4:	bl	40f400 <nftw@plt+0xc880>
  40f4e8:	add	w19, w19, #0x1
  40f4ec:	cmp	w21, w19
  40f4f0:	b.ne	40f4dc <nftw@plt+0xc95c>  // b.any
  40f4f4:	ldp	x19, x20, [sp, #16]
  40f4f8:	ldp	x21, x22, [sp, #32]
  40f4fc:	ldp	x29, x30, [sp], #48
  40f500:	ret
  40f504:	stp	x29, x30, [sp, #-64]!
  40f508:	mov	x29, sp
  40f50c:	stp	x19, x20, [sp, #16]
  40f510:	ldr	x20, [x0, #16]
  40f514:	cbz	x20, 40f614 <nftw@plt+0xca94>
  40f518:	mov	x19, x0
  40f51c:	ldr	w0, [x0, #36]
  40f520:	cbz	w0, 40f59c <nftw@plt+0xca1c>
  40f524:	cmp	w0, #0x2
  40f528:	b.ne	40f614 <nftw@plt+0xca94>  // b.any
  40f52c:	stp	x21, x22, [sp, #32]
  40f530:	stp	x23, x24, [sp, #48]
  40f534:	mov	x0, x20
  40f538:	bl	4024f0 <strlen@plt>
  40f53c:	mov	x21, x0
  40f540:	ldr	x22, [x19, #8]
  40f544:	ldr	x23, [x22, #176]
  40f548:	sxtw	x24, w0
  40f54c:	ldr	x0, [x23, #32]
  40f550:	ldr	x1, [x23, #24]
  40f554:	sub	x0, x0, x1
  40f558:	cmp	x0, w21, sxtw
  40f55c:	b.cc	40f5c8 <nftw@plt+0xca48>  // b.lo, b.ul, b.last
  40f560:	mov	x2, x24
  40f564:	mov	x1, x20
  40f568:	ldr	x0, [x23, #24]
  40f56c:	bl	402490 <memcpy@plt>
  40f570:	ldr	x2, [x23, #24]
  40f574:	add	x2, x2, x24
  40f578:	str	x2, [x23, #24]
  40f57c:	cmp	w21, #0x0
  40f580:	b.le	40f604 <nftw@plt+0xca84>
  40f584:	mov	x1, x20
  40f588:	add	x20, x20, #0x1
  40f58c:	sub	w21, w21, #0x1
  40f590:	add	x20, x20, x21
  40f594:	mov	w3, #0x0                   	// #0
  40f598:	b	40f5f0 <nftw@plt+0xca70>
  40f59c:	ldrb	w0, [x19, #64]
  40f5a0:	cbnz	w0, 40f5bc <nftw@plt+0xca3c>
  40f5a4:	stp	x21, x22, [sp, #32]
  40f5a8:	stp	x23, x24, [sp, #48]
  40f5ac:	ldr	w0, [x19, #32]
  40f5b0:	add	w0, w0, #0x3
  40f5b4:	str	w0, [x19, #32]
  40f5b8:	b	40f534 <nftw@plt+0xc9b4>
  40f5bc:	mov	x0, x19
  40f5c0:	bl	40f4b4 <nftw@plt+0xc934>
  40f5c4:	b	40f614 <nftw@plt+0xca94>
  40f5c8:	mov	x1, x24
  40f5cc:	mov	x0, x23
  40f5d0:	bl	44a42c <_obstack_newchunk@@Base>
  40f5d4:	b	40f560 <nftw@plt+0xc9e0>
  40f5d8:	ldr	w0, [x22, #200]
  40f5dc:	add	w0, w0, #0x1
  40f5e0:	str	w0, [x22, #200]
  40f5e4:	add	x1, x1, #0x1
  40f5e8:	cmp	x1, x20
  40f5ec:	b.eq	40f604 <nftw@plt+0xca84>  // b.none
  40f5f0:	ldrb	w2, [x1]
  40f5f4:	mov	w0, w3
  40f5f8:	cmp	w2, #0xa
  40f5fc:	b.ne	40f5d8 <nftw@plt+0xca58>  // b.any
  40f600:	b	40f5e0 <nftw@plt+0xca60>
  40f604:	mov	w0, #0x1                   	// #1
  40f608:	strb	w0, [x19, #64]
  40f60c:	ldp	x21, x22, [sp, #32]
  40f610:	ldp	x23, x24, [sp, #48]
  40f614:	ldp	x19, x20, [sp, #16]
  40f618:	ldp	x29, x30, [sp], #64
  40f61c:	ret
  40f620:	stp	x29, x30, [sp, #-64]!
  40f624:	mov	x29, sp
  40f628:	stp	x19, x20, [sp, #16]
  40f62c:	stp	x21, x22, [sp, #32]
  40f630:	stp	x23, x24, [sp, #48]
  40f634:	mov	x21, x0
  40f638:	mov	x19, x1
  40f63c:	mov	x20, x2
  40f640:	ldr	x0, [x0, #8]
  40f644:	ldr	w0, [x0, #200]
  40f648:	cbz	w0, 40f6b0 <nftw@plt+0xcb30>
  40f64c:	sub	x20, x20, x19
  40f650:	mov	w22, w20
  40f654:	ldr	x23, [x21, #8]
  40f658:	ldr	x21, [x23, #176]
  40f65c:	sxtw	x24, w20
  40f660:	ldr	x0, [x21, #32]
  40f664:	ldr	x1, [x21, #24]
  40f668:	sub	x0, x0, x1
  40f66c:	cmp	x0, w20, sxtw
  40f670:	b.cc	40f6fc <nftw@plt+0xcb7c>  // b.lo, b.ul, b.last
  40f674:	mov	x2, x24
  40f678:	mov	x1, x19
  40f67c:	ldr	x0, [x21, #24]
  40f680:	bl	402490 <memcpy@plt>
  40f684:	ldr	x20, [x21, #24]
  40f688:	add	x20, x20, x24
  40f68c:	str	x20, [x21, #24]
  40f690:	cmp	w22, #0x0
  40f694:	b.le	40f740 <nftw@plt+0xcbc0>
  40f698:	mov	x2, x19
  40f69c:	add	x19, x19, #0x1
  40f6a0:	sub	w22, w22, #0x1
  40f6a4:	add	x19, x19, x22
  40f6a8:	mov	w3, #0x0                   	// #0
  40f6ac:	b	40f724 <nftw@plt+0xcba4>
  40f6b0:	mov	x0, x21
  40f6b4:	bl	40f504 <nftw@plt+0xc984>
  40f6b8:	ldr	w0, [x21, #40]
  40f6bc:	cmp	w0, #0x0
  40f6c0:	b.le	40f64c <nftw@plt+0xcacc>
  40f6c4:	cmp	x19, x20
  40f6c8:	b.eq	40f738 <nftw@plt+0xcbb8>  // b.none
  40f6cc:	ldrb	w0, [x19]
  40f6d0:	cmp	w0, #0x20
  40f6d4:	b.ne	40f64c <nftw@plt+0xcacc>  // b.any
  40f6d8:	add	x19, x19, #0x1
  40f6dc:	cmp	x20, x19
  40f6e0:	b.ne	40f6cc <nftw@plt+0xcb4c>  // b.any
  40f6e4:	sub	x20, x20, x19
  40f6e8:	mov	w22, w20
  40f6ec:	ldr	x23, [x21, #8]
  40f6f0:	ldr	x21, [x23, #176]
  40f6f4:	sxtw	x24, w20
  40f6f8:	b	40f674 <nftw@plt+0xcaf4>
  40f6fc:	mov	x1, x24
  40f700:	mov	x0, x21
  40f704:	bl	44a42c <_obstack_newchunk@@Base>
  40f708:	b	40f674 <nftw@plt+0xcaf4>
  40f70c:	ldr	w0, [x23, #200]
  40f710:	add	w0, w0, #0x1
  40f714:	str	w0, [x23, #200]
  40f718:	add	x2, x2, #0x1
  40f71c:	cmp	x2, x19
  40f720:	b.eq	40f740 <nftw@plt+0xcbc0>  // b.none
  40f724:	ldrb	w1, [x2]
  40f728:	mov	w0, w3
  40f72c:	cmp	w1, #0xa
  40f730:	b.ne	40f70c <nftw@plt+0xcb8c>  // b.any
  40f734:	b	40f714 <nftw@plt+0xcb94>
  40f738:	mov	x19, x20
  40f73c:	b	40f6e4 <nftw@plt+0xcb64>
  40f740:	ldp	x19, x20, [sp, #16]
  40f744:	ldp	x21, x22, [sp, #32]
  40f748:	ldp	x23, x24, [sp, #48]
  40f74c:	ldp	x29, x30, [sp], #64
  40f750:	ret
  40f754:	stp	x29, x30, [sp, #-80]!
  40f758:	mov	x29, sp
  40f75c:	stp	x23, x24, [sp, #48]
  40f760:	ldr	w24, [x0, #40]
  40f764:	cmp	x1, x2
  40f768:	b.eq	40f8ac <nftw@plt+0xcd2c>  // b.none
  40f76c:	stp	x19, x20, [sp, #16]
  40f770:	stp	x21, x22, [sp, #32]
  40f774:	str	x25, [sp, #64]
  40f778:	mov	x23, x0
  40f77c:	mov	x22, x1
  40f780:	mov	x20, x2
  40f784:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  40f788:	add	x21, x21, #0xe68
  40f78c:	mov	w25, #0x20                  	// #32
  40f790:	b	40f7ec <nftw@plt+0xcc6c>
  40f794:	cmp	w24, #0x0
  40f798:	b.le	40f7b8 <nftw@plt+0xcc38>
  40f79c:	sub	x0, x19, x22
  40f7a0:	ldr	x2, [x23, #8]
  40f7a4:	ldr	w1, [x23, #28]
  40f7a8:	ldr	w2, [x2, #200]
  40f7ac:	sub	w1, w1, w2
  40f7b0:	cmp	x0, w1, sxtw
  40f7b4:	b.ge	40f840 <nftw@plt+0xccc0>  // b.tcont
  40f7b8:	mov	x2, x19
  40f7bc:	mov	x1, x22
  40f7c0:	mov	x0, x23
  40f7c4:	bl	40f620 <nftw@plt+0xcaa0>
  40f7c8:	cmp	x20, x19
  40f7cc:	b.eq	40f8a0 <nftw@plt+0xcd20>  // b.none
  40f7d0:	ldrb	w0, [x19]
  40f7d4:	ldrh	w0, [x21, x0, lsl #1]
  40f7d8:	tbnz	w0, #0, 40f84c <nftw@plt+0xcccc>
  40f7dc:	ldrb	w0, [x19]
  40f7e0:	cmp	w0, #0xa
  40f7e4:	b.eq	40f874 <nftw@plt+0xccf4>  // b.none
  40f7e8:	mov	x22, x19
  40f7ec:	cmp	x20, x22
  40f7f0:	b.eq	40f898 <nftw@plt+0xcd18>  // b.none
  40f7f4:	mov	x19, x22
  40f7f8:	ldrb	w3, [x19]
  40f7fc:	ldrh	w4, [x21, w3, sxtw #1]
  40f800:	tst	x4, #0x1
  40f804:	ccmp	w3, #0xa, #0x4, eq  // eq = none
  40f808:	b.eq	40f794 <nftw@plt+0xcc14>  // b.none
  40f80c:	add	x19, x19, #0x1
  40f810:	cmp	x20, x19
  40f814:	b.ne	40f7f8 <nftw@plt+0xcc78>  // b.any
  40f818:	cmp	w24, #0x0
  40f81c:	b.gt	40f79c <nftw@plt+0xcc1c>
  40f820:	mov	x2, x19
  40f824:	mov	x1, x22
  40f828:	mov	x0, x23
  40f82c:	bl	40f620 <nftw@plt+0xcaa0>
  40f830:	ldp	x19, x20, [sp, #16]
  40f834:	ldp	x21, x22, [sp, #32]
  40f838:	ldr	x25, [sp, #64]
  40f83c:	b	40f8ac <nftw@plt+0xcd2c>
  40f840:	mov	x0, x23
  40f844:	bl	40f39c <nftw@plt+0xc81c>
  40f848:	b	40f7b8 <nftw@plt+0xcc38>
  40f84c:	mov	w1, w25
  40f850:	mov	x0, x23
  40f854:	bl	40f400 <nftw@plt+0xc880>
  40f858:	add	x19, x19, #0x1
  40f85c:	cmp	x20, x19
  40f860:	b.ne	40f7dc <nftw@plt+0xcc5c>  // b.any
  40f864:	ldp	x19, x20, [sp, #16]
  40f868:	ldp	x21, x22, [sp, #32]
  40f86c:	ldr	x25, [sp, #64]
  40f870:	b	40f8ac <nftw@plt+0xcd2c>
  40f874:	mov	x0, x23
  40f878:	bl	40f39c <nftw@plt+0xc81c>
  40f87c:	add	x19, x19, #0x1
  40f880:	cmp	x20, x19
  40f884:	b.ne	40f7e8 <nftw@plt+0xcc68>  // b.any
  40f888:	ldp	x19, x20, [sp, #16]
  40f88c:	ldp	x21, x22, [sp, #32]
  40f890:	ldr	x25, [sp, #64]
  40f894:	b	40f8ac <nftw@plt+0xcd2c>
  40f898:	mov	x19, x22
  40f89c:	b	40f818 <nftw@plt+0xcc98>
  40f8a0:	ldp	x19, x20, [sp, #16]
  40f8a4:	ldp	x21, x22, [sp, #32]
  40f8a8:	ldr	x25, [sp, #64]
  40f8ac:	ldp	x23, x24, [sp, #48]
  40f8b0:	ldp	x29, x30, [sp], #80
  40f8b4:	ret
  40f8b8:	stp	x29, x30, [sp, #-96]!
  40f8bc:	mov	x29, sp
  40f8c0:	stp	x19, x20, [sp, #16]
  40f8c4:	stp	x21, x22, [sp, #32]
  40f8c8:	mov	x20, x0
  40f8cc:	mov	x21, x1
  40f8d0:	cmn	x2, #0x1
  40f8d4:	b.eq	40f904 <nftw@plt+0xcd84>  // b.none
  40f8d8:	cbz	x2, 40f9dc <nftw@plt+0xce5c>
  40f8dc:	stp	x23, x24, [sp, #48]
  40f8e0:	str	x25, [sp, #64]
  40f8e4:	add	x22, x21, x2
  40f8e8:	mov	x19, x21
  40f8ec:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  40f8f0:	add	x23, x23, #0xe68
  40f8f4:	adrp	x24, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40f8f8:	add	x24, x24, #0x130
  40f8fc:	add	x25, sp, #0x54
  40f900:	b	40f964 <nftw@plt+0xcde4>
  40f904:	mov	x0, x1
  40f908:	bl	4024f0 <strlen@plt>
  40f90c:	mov	x2, x0
  40f910:	b	40f8d8 <nftw@plt+0xcd58>
  40f914:	sub	x2, x19, #0x1
  40f918:	ldr	w0, [x20, #40]
  40f91c:	cmp	w0, #0x0
  40f920:	b.le	40f934 <nftw@plt+0xcdb4>
  40f924:	mov	x1, x21
  40f928:	mov	x0, x20
  40f92c:	bl	40f754 <nftw@plt+0xcbd4>
  40f930:	b	40f978 <nftw@plt+0xcdf8>
  40f934:	mov	x1, x21
  40f938:	mov	x0, x20
  40f93c:	bl	40f620 <nftw@plt+0xcaa0>
  40f940:	b	40f978 <nftw@plt+0xcdf8>
  40f944:	mov	x2, x25
  40f948:	add	x1, sp, #0x50
  40f94c:	mov	x0, x20
  40f950:	bl	40f620 <nftw@plt+0xcaa0>
  40f954:	add	x21, x19, #0x1
  40f958:	add	x19, x19, #0x1
  40f95c:	cmp	x22, x19
  40f960:	b.eq	40f9a8 <nftw@plt+0xce28>  // b.none
  40f964:	ldrb	w0, [x19]
  40f968:	ldrh	w0, [x23, x0, lsl #1]
  40f96c:	tbnz	w0, #4, 40f958 <nftw@plt+0xcdd8>
  40f970:	cmp	x21, x19
  40f974:	b.cc	40f914 <nftw@plt+0xcd94>  // b.lo, b.ul, b.last
  40f978:	ldrb	w2, [x19]
  40f97c:	mov	x1, x24
  40f980:	add	x0, sp, #0x50
  40f984:	bl	4025b0 <sprintf@plt>
  40f988:	ldr	w0, [x20, #40]
  40f98c:	cmp	w0, #0x0
  40f990:	b.le	40f944 <nftw@plt+0xcdc4>
  40f994:	mov	x2, x25
  40f998:	add	x1, sp, #0x50
  40f99c:	mov	x0, x20
  40f9a0:	bl	40f754 <nftw@plt+0xcbd4>
  40f9a4:	b	40f954 <nftw@plt+0xcdd4>
  40f9a8:	ldp	x23, x24, [sp, #48]
  40f9ac:	ldr	x25, [sp, #64]
  40f9b0:	ldr	w0, [x20, #40]
  40f9b4:	cmp	w0, #0x0
  40f9b8:	b.le	40f9e4 <nftw@plt+0xce64>
  40f9bc:	mov	x2, x22
  40f9c0:	mov	x1, x21
  40f9c4:	mov	x0, x20
  40f9c8:	bl	40f754 <nftw@plt+0xcbd4>
  40f9cc:	ldp	x19, x20, [sp, #16]
  40f9d0:	ldp	x21, x22, [sp, #32]
  40f9d4:	ldp	x29, x30, [sp], #96
  40f9d8:	ret
  40f9dc:	mov	x22, x21
  40f9e0:	b	40f9b0 <nftw@plt+0xce30>
  40f9e4:	mov	x2, x22
  40f9e8:	mov	x1, x21
  40f9ec:	mov	x0, x20
  40f9f0:	bl	40f620 <nftw@plt+0xcaa0>
  40f9f4:	b	40f9cc <nftw@plt+0xce4c>
  40f9f8:	stp	x29, x30, [sp, #-32]!
  40f9fc:	mov	x29, sp
  40fa00:	stp	x19, x20, [sp, #16]
  40fa04:	mov	x20, x0
  40fa08:	mov	x19, x1
  40fa0c:	mov	x0, x1
  40fa10:	bl	4024f0 <strlen@plt>
  40fa14:	add	x2, x19, x0
  40fa18:	ldr	w0, [x20, #40]
  40fa1c:	cmp	w0, #0x0
  40fa20:	b.le	40fa3c <nftw@plt+0xcebc>
  40fa24:	mov	x1, x19
  40fa28:	mov	x0, x20
  40fa2c:	bl	40f754 <nftw@plt+0xcbd4>
  40fa30:	ldp	x19, x20, [sp, #16]
  40fa34:	ldp	x29, x30, [sp], #32
  40fa38:	ret
  40fa3c:	mov	x1, x19
  40fa40:	mov	x0, x20
  40fa44:	bl	40f620 <nftw@plt+0xcaa0>
  40fa48:	b	40fa30 <nftw@plt+0xceb0>
  40fa4c:	stp	x29, x30, [sp, #-64]!
  40fa50:	mov	x29, sp
  40fa54:	stp	x19, x20, [sp, #16]
  40fa58:	stp	x21, x22, [sp, #32]
  40fa5c:	str	x23, [sp, #48]
  40fa60:	mov	x20, x0
  40fa64:	ldr	x21, [x0, #8]
  40fa68:	ldr	x23, [x21, #184]
  40fa6c:	ldr	x0, [x21, #176]
  40fa70:	cmp	x0, x21
  40fa74:	b.ne	40fad0 <nftw@plt+0xcf50>  // b.any
  40fa78:	add	x22, x23, #0x8
  40fa7c:	ldr	w0, [x21, #200]
  40fa80:	cbnz	w0, 40fae8 <nftw@plt+0xcf68>
  40fa84:	ldr	x1, [x23, #8]
  40fa88:	cbz	x1, 40faa4 <nftw@plt+0xcf24>
  40fa8c:	mov	w19, #0x0                   	// #0
  40fa90:	mov	x0, x20
  40fa94:	bl	40f9f8 <nftw@plt+0xce78>
  40fa98:	add	w19, w19, #0x1
  40fa9c:	ldr	x1, [x22, w19, uxtw #3]
  40faa0:	cbnz	x1, 40fa90 <nftw@plt+0xcf10>
  40faa4:	ldr	x0, [x23]
  40faa8:	str	x0, [x21, #184]
  40faac:	ldr	x0, [x21, #96]
  40fab0:	cmp	x0, x23
  40fab4:	b.cs	40fb00 <nftw@plt+0xcf80>  // b.hs, b.nlast
  40fab8:	ldr	x0, [x21, #120]
  40fabc:	cmp	x0, x23
  40fac0:	b.ls	40fb00 <nftw@plt+0xcf80>  // b.plast
  40fac4:	str	x23, [x21, #104]
  40fac8:	str	x23, [x21, #112]
  40facc:	b	40fb0c <nftw@plt+0xcf8c>
  40fad0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40fad4:	add	x2, x2, #0x138
  40fad8:	mov	w1, #0x595                 	// #1429
  40fadc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40fae0:	add	x0, x0, #0xe0
  40fae4:	bl	408d8c <nftw@plt+0x620c>
  40fae8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40faec:	add	x2, x2, #0x138
  40faf0:	mov	w1, #0x596                 	// #1430
  40faf4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40faf8:	add	x0, x0, #0xe0
  40fafc:	bl	408d8c <nftw@plt+0x620c>
  40fb00:	mov	x1, x23
  40fb04:	add	x0, x21, #0x58
  40fb08:	bl	44a584 <_obstack_free@@Base>
  40fb0c:	ldp	x19, x20, [sp, #16]
  40fb10:	ldp	x21, x22, [sp, #32]
  40fb14:	ldr	x23, [sp, #48]
  40fb18:	ldp	x29, x30, [sp], #64
  40fb1c:	ret
  40fb20:	stp	x29, x30, [sp, #-32]!
  40fb24:	mov	x29, sp
  40fb28:	str	x19, [sp, #16]
  40fb2c:	mov	x19, x0
  40fb30:	ldr	w0, [x0, #24]
  40fb34:	cbnz	w0, 40fb44 <nftw@plt+0xcfc4>
  40fb38:	ldr	x19, [sp, #16]
  40fb3c:	ldp	x29, x30, [sp], #32
  40fb40:	ret
  40fb44:	mov	w1, #0x20                  	// #32
  40fb48:	mov	x0, x19
  40fb4c:	bl	40f400 <nftw@plt+0xc880>
  40fb50:	str	wzr, [x19, #24]
  40fb54:	b	40fb38 <nftw@plt+0xcfb8>
  40fb58:	stp	x29, x30, [sp, #-32]!
  40fb5c:	mov	x29, sp
  40fb60:	str	x19, [sp, #16]
  40fb64:	mov	x19, x0
  40fb68:	bl	40f39c <nftw@plt+0xc81c>
  40fb6c:	mov	x0, x19
  40fb70:	bl	40f1d0 <nftw@plt+0xc650>
  40fb74:	strb	wzr, [x19, #65]
  40fb78:	ldr	x19, [sp, #16]
  40fb7c:	ldp	x29, x30, [sp], #32
  40fb80:	ret
  40fb84:	stp	x29, x30, [sp, #-32]!
  40fb88:	mov	x29, sp
  40fb8c:	str	x19, [sp, #16]
  40fb90:	mov	x19, x0
  40fb94:	ldr	w2, [x0, #32]
  40fb98:	add	w2, w2, w1
  40fb9c:	str	w2, [x0, #32]
  40fba0:	bl	40f39c <nftw@plt+0xc81c>
  40fba4:	mov	x0, x19
  40fba8:	bl	40f4b4 <nftw@plt+0xc934>
  40fbac:	strb	wzr, [x19, #65]
  40fbb0:	ldr	x19, [sp, #16]
  40fbb4:	ldp	x29, x30, [sp], #32
  40fbb8:	ret
  40fbbc:	stp	x29, x30, [sp, #-32]!
  40fbc0:	mov	x29, sp
  40fbc4:	str	x19, [sp, #16]
  40fbc8:	mov	x19, x0
  40fbcc:	and	w1, w1, #0xff
  40fbd0:	bl	40f400 <nftw@plt+0xc880>
  40fbd4:	mov	w1, #0x20                  	// #32
  40fbd8:	mov	x0, x19
  40fbdc:	bl	40f400 <nftw@plt+0xc880>
  40fbe0:	ldr	x19, [sp, #16]
  40fbe4:	ldp	x29, x30, [sp], #32
  40fbe8:	ret
  40fbec:	stp	x29, x30, [sp, #-32]!
  40fbf0:	mov	x29, sp
  40fbf4:	stp	x19, x20, [sp, #16]
  40fbf8:	mov	x19, x0
  40fbfc:	and	w20, w1, #0xff
  40fc00:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40fc04:	ldr	x1, [x1, #1304]
  40fc08:	bl	40f9f8 <nftw@plt+0xce78>
  40fc0c:	mov	x2, #0x5                   	// #5
  40fc10:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40fc14:	add	x1, x1, #0xda0
  40fc18:	mov	w0, w20
  40fc1c:	bl	409f38 <nftw@plt+0x73b8>
  40fc20:	mov	x1, x0
  40fc24:	mov	x0, x19
  40fc28:	bl	40f9f8 <nftw@plt+0xce78>
  40fc2c:	ldp	x19, x20, [sp, #16]
  40fc30:	ldp	x29, x30, [sp], #32
  40fc34:	ret
  40fc38:	stp	x29, x30, [sp, #-32]!
  40fc3c:	mov	x29, sp
  40fc40:	str	x19, [sp, #16]
  40fc44:	mov	x19, x0
  40fc48:	mov	w0, w1
  40fc4c:	bl	409fcc <nftw@plt+0x744c>
  40fc50:	mov	x1, x0
  40fc54:	mov	x0, x19
  40fc58:	bl	40f9f8 <nftw@plt+0xce78>
  40fc5c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40fc60:	ldr	x1, [x0, #1312]
  40fc64:	mov	x0, x19
  40fc68:	bl	40f9f8 <nftw@plt+0xce78>
  40fc6c:	ldr	x19, [sp, #16]
  40fc70:	ldp	x29, x30, [sp], #32
  40fc74:	ret
  40fc78:	sub	sp, sp, #0x1b0
  40fc7c:	stp	x29, x30, [sp, #16]
  40fc80:	add	x29, sp, #0x10
  40fc84:	stp	x19, x20, [sp, #32]
  40fc88:	stp	x21, x22, [sp, #48]
  40fc8c:	stp	x23, x24, [sp, #64]
  40fc90:	stp	x25, x26, [sp, #80]
  40fc94:	stp	x27, x28, [sp, #96]
  40fc98:	mov	x21, x0
  40fc9c:	str	x1, [sp, #120]
  40fca0:	ldr	x19, [x0, #8]
  40fca4:	add	x25, x19, #0x58
  40fca8:	ldr	x0, [x25, #32]
  40fcac:	ldr	x1, [x25, #24]
  40fcb0:	sub	x0, x0, x1
  40fcb4:	cmp	x0, #0x1e7
  40fcb8:	b.ls	40fd60 <nftw@plt+0xd1e0>  // b.plast
  40fcbc:	add	x0, x19, #0x58
  40fcc0:	ldr	x1, [x19, #112]
  40fcc4:	add	x1, x1, #0x1e8
  40fcc8:	ldr	x28, [x19, #104]
  40fccc:	cmp	x1, x28
  40fcd0:	b.eq	40fd70 <nftw@plt+0xd1f0>  // b.none
  40fcd4:	ldr	x0, [x19, #136]
  40fcd8:	add	x1, x1, x0
  40fcdc:	bic	x0, x1, x0
  40fce0:	str	x0, [x19, #112]
  40fce4:	ldr	x1, [x19, #96]
  40fce8:	ldr	x2, [x19, #120]
  40fcec:	sub	x0, x0, x1
  40fcf0:	sub	x1, x2, x1
  40fcf4:	cmp	x0, x1
  40fcf8:	b.ls	40fd00 <nftw@plt+0xd180>  // b.plast
  40fcfc:	str	x2, [x19, #112]
  40fd00:	ldr	x1, [x19, #112]
  40fd04:	str	x1, [x19, #104]
  40fd08:	ldr	x0, [x19, #184]
  40fd0c:	str	x0, [x28]
  40fd10:	str	x28, [x19, #184]
  40fd14:	add	x28, x28, #0x8
  40fd18:	mov	x2, #0xf0                  	// #240
  40fd1c:	mov	w1, #0x0                   	// #0
  40fd20:	add	x0, sp, #0xc0
  40fd24:	bl	4026f0 <memset@plt>
  40fd28:	ldr	x0, [sp, #120]
  40fd2c:	ldr	x20, [x0]
  40fd30:	ldrb	w0, [x20]
  40fd34:	cbz	w0, 411720 <nftw@plt+0xeba0>
  40fd38:	str	wzr, [sp, #160]
  40fd3c:	str	wzr, [sp, #164]
  40fd40:	mov	w26, #0x0                   	// #0
  40fd44:	mov	w27, #0x0                   	// #0
  40fd48:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  40fd4c:	add	x0, x0, #0xe68
  40fd50:	str	x0, [sp, #136]
  40fd54:	adrp	x24, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40fd58:	add	x24, x24, #0x168
  40fd5c:	b	410000 <nftw@plt+0xd480>
  40fd60:	mov	x1, #0x1e8                 	// #488
  40fd64:	mov	x0, x25
  40fd68:	bl	44a42c <_obstack_newchunk@@Base>
  40fd6c:	b	40fcbc <nftw@plt+0xd13c>
  40fd70:	mov	x2, x0
  40fd74:	ldrb	w0, [x0, #80]
  40fd78:	orr	w0, w0, #0x2
  40fd7c:	strb	w0, [x2, #80]
  40fd80:	b	40fcd4 <nftw@plt+0xd154>
  40fd84:	ldr	x0, [x19, #112]
  40fd88:	add	x2, x0, #0x1
  40fd8c:	str	x2, [x19, #112]
  40fd90:	ldrb	w1, [x20]
  40fd94:	strb	w1, [x0]
  40fd98:	ldrb	w0, [x20, #1]!
  40fd9c:	cmp	w0, #0x25
  40fda0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40fda4:	b.eq	40fdc8 <nftw@plt+0xd248>  // b.none
  40fda8:	ldr	x1, [x19, #120]
  40fdac:	ldr	x0, [x19, #112]
  40fdb0:	cmp	x1, x0
  40fdb4:	b.ne	40fd84 <nftw@plt+0xd204>  // b.any
  40fdb8:	mov	x1, x22
  40fdbc:	mov	x0, x25
  40fdc0:	bl	44a42c <_obstack_newchunk@@Base>
  40fdc4:	b	40fd84 <nftw@plt+0xd204>
  40fdc8:	cbz	w0, 4105b4 <nftw@plt+0xda34>
  40fdcc:	ldrb	w0, [x20, #1]
  40fdd0:	cmp	w0, #0x3e
  40fdd4:	b.eq	40ff6c <nftw@plt+0xd3ec>  // b.none
  40fdd8:	b.hi	40fec4 <nftw@plt+0xd344>  // b.pmore
  40fddc:	cmp	w0, #0x27
  40fde0:	b.eq	40ffb0 <nftw@plt+0xd430>  // b.none
  40fde4:	b.ls	40fe8c <nftw@plt+0xd30c>  // b.plast
  40fde8:	cmp	w0, #0x3c
  40fdec:	b.ne	4100a4 <nftw@plt+0xd524>  // b.any
  40fdf0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40fdf4:	ldr	x0, [x0, #1304]
  40fdf8:	bl	4024f0 <strlen@plt>
  40fdfc:	mov	x23, x0
  40fe00:	ldr	x0, [x19, #120]
  40fe04:	ldr	x1, [x19, #112]
  40fe08:	sub	x0, x0, x1
  40fe0c:	cmp	x23, x0
  40fe10:	b.hi	40ff4c <nftw@plt+0xd3cc>  // b.pmore
  40fe14:	mov	x2, x23
  40fe18:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40fe1c:	ldr	x1, [x0, #1304]
  40fe20:	ldr	x0, [x19, #112]
  40fe24:	bl	402490 <memcpy@plt>
  40fe28:	ldr	x0, [x19, #112]
  40fe2c:	add	x23, x0, x23
  40fe30:	str	x23, [x19, #112]
  40fe34:	mov	x2, #0x5                   	// #5
  40fe38:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  40fe3c:	add	x1, x1, #0xda0
  40fe40:	ldrb	w0, [x21, #67]
  40fe44:	bl	409f38 <nftw@plt+0x73b8>
  40fe48:	str	x0, [sp, #128]
  40fe4c:	bl	4024f0 <strlen@plt>
  40fe50:	mov	x23, x0
  40fe54:	ldr	x0, [x19, #120]
  40fe58:	ldr	x1, [x19, #112]
  40fe5c:	sub	x0, x0, x1
  40fe60:	cmp	x23, x0
  40fe64:	b.hi	40ff5c <nftw@plt+0xd3dc>  // b.pmore
  40fe68:	mov	x2, x23
  40fe6c:	ldr	x1, [sp, #128]
  40fe70:	ldr	x0, [x19, #112]
  40fe74:	bl	402490 <memcpy@plt>
  40fe78:	ldr	x0, [x19, #112]
  40fe7c:	add	x23, x0, x23
  40fe80:	str	x23, [x19, #112]
  40fe84:	add	x20, x20, #0x2
  40fe88:	b	40fff8 <nftw@plt+0xd478>
  40fe8c:	cbz	w0, 40ff24 <nftw@plt+0xd3a4>
  40fe90:	cmp	w0, #0x25
  40fe94:	b.ne	4100a4 <nftw@plt+0xd524>  // b.any
  40fe98:	ldr	x1, [x19, #120]
  40fe9c:	ldr	x0, [x19, #112]
  40fea0:	cmp	x1, x0
  40fea4:	b.eq	40ff3c <nftw@plt+0xd3bc>  // b.none
  40fea8:	ldr	x0, [x19, #112]
  40feac:	add	x2, x0, #0x1
  40feb0:	str	x2, [x19, #112]
  40feb4:	mov	w1, #0x25                  	// #37
  40feb8:	strb	w1, [x0]
  40febc:	add	x20, x20, #0x2
  40fec0:	b	40fff8 <nftw@plt+0xd478>
  40fec4:	cmp	w0, #0x52
  40fec8:	b.eq	410038 <nftw@plt+0xd4b8>  // b.none
  40fecc:	cmp	w0, #0x6d
  40fed0:	b.ne	4100a4 <nftw@plt+0xd524>  // b.any
  40fed4:	ldr	x0, [sp, #120]
  40fed8:	ldr	w0, [x0, #16]
  40fedc:	bl	44a870 <_obstack_memory_used@@Base+0x26c>
  40fee0:	str	x0, [sp, #128]
  40fee4:	bl	4024f0 <strlen@plt>
  40fee8:	mov	x23, x0
  40feec:	ldr	x0, [x19, #120]
  40fef0:	ldr	x1, [x19, #112]
  40fef4:	sub	x0, x0, x1
  40fef8:	cmp	x23, x0
  40fefc:	b.hi	410094 <nftw@plt+0xd514>  // b.pmore
  40ff00:	mov	x2, x23
  40ff04:	ldr	x1, [sp, #128]
  40ff08:	ldr	x0, [x19, #112]
  40ff0c:	bl	402490 <memcpy@plt>
  40ff10:	ldr	x0, [x19, #112]
  40ff14:	add	x23, x0, x23
  40ff18:	str	x23, [x19, #112]
  40ff1c:	add	x20, x20, #0x2
  40ff20:	b	40fff8 <nftw@plt+0xd478>
  40ff24:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40ff28:	add	x2, x2, #0x158
  40ff2c:	mov	w1, #0x41e                 	// #1054
  40ff30:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  40ff34:	add	x0, x0, #0xe0
  40ff38:	bl	408d8c <nftw@plt+0x620c>
  40ff3c:	mov	x1, #0x1                   	// #1
  40ff40:	mov	x0, x25
  40ff44:	bl	44a42c <_obstack_newchunk@@Base>
  40ff48:	b	40fea8 <nftw@plt+0xd328>
  40ff4c:	mov	x1, x23
  40ff50:	mov	x0, x25
  40ff54:	bl	44a42c <_obstack_newchunk@@Base>
  40ff58:	b	40fe14 <nftw@plt+0xd294>
  40ff5c:	mov	x1, x23
  40ff60:	mov	x0, x25
  40ff64:	bl	44a42c <_obstack_newchunk@@Base>
  40ff68:	b	40fe68 <nftw@plt+0xd2e8>
  40ff6c:	ldrb	w0, [x21, #67]
  40ff70:	bl	409fcc <nftw@plt+0x744c>
  40ff74:	str	x0, [sp, #128]
  40ff78:	bl	4024f0 <strlen@plt>
  40ff7c:	mov	x23, x0
  40ff80:	ldr	x0, [x19, #120]
  40ff84:	ldr	x1, [x19, #112]
  40ff88:	sub	x0, x0, x1
  40ff8c:	cmp	x23, x0
  40ff90:	b.hi	410018 <nftw@plt+0xd498>  // b.pmore
  40ff94:	mov	x2, x23
  40ff98:	ldr	x1, [sp, #128]
  40ff9c:	ldr	x0, [x19, #112]
  40ffa0:	bl	402490 <memcpy@plt>
  40ffa4:	ldr	x0, [x19, #112]
  40ffa8:	add	x23, x0, x23
  40ffac:	str	x23, [x19, #112]
  40ffb0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40ffb4:	ldr	x0, [x0, #1312]
  40ffb8:	bl	4024f0 <strlen@plt>
  40ffbc:	mov	x22, x0
  40ffc0:	ldr	x0, [x19, #120]
  40ffc4:	ldr	x1, [x19, #112]
  40ffc8:	sub	x0, x0, x1
  40ffcc:	cmp	x22, x0
  40ffd0:	b.hi	410028 <nftw@plt+0xd4a8>  // b.pmore
  40ffd4:	mov	x2, x22
  40ffd8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  40ffdc:	ldr	x1, [x0, #1312]
  40ffe0:	ldr	x0, [x19, #112]
  40ffe4:	bl	402490 <memcpy@plt>
  40ffe8:	ldr	x0, [x19, #112]
  40ffec:	add	x22, x0, x22
  40fff0:	str	x22, [x19, #112]
  40fff4:	add	x20, x20, #0x2
  40fff8:	ldrb	w0, [x20]
  40fffc:	cbz	w0, 4105b4 <nftw@plt+0xda34>
  410000:	ldrb	w0, [x20]
  410004:	cmp	w0, #0x25
  410008:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41000c:	b.eq	40fdc8 <nftw@plt+0xd248>  // b.none
  410010:	mov	x22, #0x1                   	// #1
  410014:	b	40fda8 <nftw@plt+0xd228>
  410018:	mov	x1, x23
  41001c:	mov	x0, x25
  410020:	bl	44a42c <_obstack_newchunk@@Base>
  410024:	b	40ff94 <nftw@plt+0xd414>
  410028:	mov	x1, x22
  41002c:	mov	x0, x25
  410030:	bl	44a42c <_obstack_newchunk@@Base>
  410034:	b	40ffd4 <nftw@plt+0xd454>
  410038:	ldrb	w0, [x21, #67]
  41003c:	bl	409fcc <nftw@plt+0x744c>
  410040:	str	x0, [sp, #128]
  410044:	bl	4024f0 <strlen@plt>
  410048:	mov	x23, x0
  41004c:	ldr	x0, [x19, #120]
  410050:	ldr	x1, [x19, #112]
  410054:	sub	x0, x0, x1
  410058:	cmp	x23, x0
  41005c:	b.hi	410084 <nftw@plt+0xd504>  // b.pmore
  410060:	mov	x2, x23
  410064:	ldr	x1, [sp, #128]
  410068:	ldr	x0, [x19, #112]
  41006c:	bl	402490 <memcpy@plt>
  410070:	ldr	x0, [x19, #112]
  410074:	add	x23, x0, x23
  410078:	str	x23, [x19, #112]
  41007c:	add	x20, x20, #0x2
  410080:	b	40fff8 <nftw@plt+0xd478>
  410084:	mov	x1, x23
  410088:	mov	x0, x25
  41008c:	bl	44a42c <_obstack_newchunk@@Base>
  410090:	b	410060 <nftw@plt+0xd4e0>
  410094:	mov	x1, x23
  410098:	mov	x0, x25
  41009c:	bl	44a42c <_obstack_newchunk@@Base>
  4100a0:	b	40ff00 <nftw@plt+0xd380>
  4100a4:	ldr	x1, [x19, #120]
  4100a8:	ldr	x0, [x19, #112]
  4100ac:	cmp	x1, x0
  4100b0:	b.eq	410184 <nftw@plt+0xd604>  // b.none
  4100b4:	ldr	x0, [x19, #112]
  4100b8:	add	x2, x0, #0x1
  4100bc:	str	x2, [x19, #112]
  4100c0:	strb	wzr, [x0]
  4100c4:	cmp	w26, #0x3b
  4100c8:	b.hi	410194 <nftw@plt+0xd614>  // b.pmore
  4100cc:	add	w0, w26, #0x1
  4100d0:	str	w0, [sp, #128]
  4100d4:	mov	w4, w26
  4100d8:	add	x0, x19, #0x58
  4100dc:	ldr	x3, [x19, #104]
  4100e0:	ldr	x1, [x19, #112]
  4100e4:	cmp	x1, x3
  4100e8:	b.eq	4101ac <nftw@plt+0xd62c>  // b.none
  4100ec:	ldr	x0, [x19, #136]
  4100f0:	add	x1, x1, x0
  4100f4:	bic	x0, x1, x0
  4100f8:	str	x0, [x19, #112]
  4100fc:	ldr	x1, [x19, #96]
  410100:	ldr	x2, [x19, #120]
  410104:	sub	x0, x0, x1
  410108:	sub	x1, x2, x1
  41010c:	cmp	x0, x1
  410110:	b.ls	410118 <nftw@plt+0xd598>  // b.plast
  410114:	str	x2, [x19, #112]
  410118:	add	x22, x20, #0x1
  41011c:	ldr	x1, [x19, #112]
  410120:	str	x1, [x19, #104]
  410124:	str	x3, [x28, x4, lsl #3]
  410128:	ldrb	w0, [x20, #1]
  41012c:	ldr	x1, [sp, #136]
  410130:	ldrh	w0, [x1, x0, lsl #1]
  410134:	tbnz	w0, #2, 4101c0 <nftw@plt+0xd640>
  410138:	add	w0, w27, #0x1
  41013c:	str	w0, [sp, #148]
  410140:	ldr	w0, [sp, #160]
  410144:	cbnz	w0, 410234 <nftw@plt+0xd6b4>
  410148:	mov	w0, #0x1                   	// #1
  41014c:	str	w0, [sp, #164]
  410150:	cmp	w27, #0x1d
  410154:	b.hi	41024c <nftw@plt+0xd6cc>  // b.pmore
  410158:	add	x0, sp, #0xc0
  41015c:	ldr	x0, [x0, w27, uxtw #3]
  410160:	cbnz	x0, 410264 <nftw@plt+0xd6e4>
  410164:	ldr	w0, [sp, #128]
  410168:	mov	w1, w0
  41016c:	str	x1, [sp, #152]
  410170:	add	x0, x28, w0, uxtw #3
  410174:	str	x0, [sp, #168]
  410178:	add	x1, sp, #0xc0
  41017c:	str	x0, [x1, w27, uxtw #3]
  410180:	b	4102ac <nftw@plt+0xd72c>
  410184:	mov	x1, #0x1                   	// #1
  410188:	mov	x0, x25
  41018c:	bl	44a42c <_obstack_newchunk@@Base>
  410190:	b	4100b4 <nftw@plt+0xd534>
  410194:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410198:	add	x2, x2, #0x158
  41019c:	mov	w1, #0x450                 	// #1104
  4101a0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4101a4:	add	x0, x0, #0xe0
  4101a8:	bl	408d8c <nftw@plt+0x620c>
  4101ac:	mov	x2, x0
  4101b0:	ldrb	w0, [x0, #80]
  4101b4:	orr	w0, w0, #0x2
  4101b8:	strb	w0, [x2, #80]
  4101bc:	b	4100ec <nftw@plt+0xd56c>
  4101c0:	mov	w2, #0xa                   	// #10
  4101c4:	add	x1, sp, #0xb8
  4101c8:	mov	x0, x22
  4101cc:	bl	4024e0 <strtoul@plt>
  4101d0:	sub	w0, w0, #0x1
  4101d4:	ldr	x22, [sp, #184]
  4101d8:	ldrb	w1, [x22]
  4101dc:	cmp	w1, #0x24
  4101e0:	b.ne	410204 <nftw@plt+0xd684>  // b.any
  4101e4:	add	x22, x22, #0x1
  4101e8:	ldr	w1, [sp, #164]
  4101ec:	cbnz	w1, 41021c <nftw@plt+0xd69c>
  4101f0:	str	w27, [sp, #148]
  4101f4:	mov	w27, w0
  4101f8:	mov	w0, #0x1                   	// #1
  4101fc:	str	w0, [sp, #160]
  410200:	b	410150 <nftw@plt+0xd5d0>
  410204:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410208:	add	x2, x2, #0x158
  41020c:	mov	w1, #0x45a                 	// #1114
  410210:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410214:	add	x0, x0, #0xe0
  410218:	bl	408d8c <nftw@plt+0x620c>
  41021c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410220:	add	x2, x2, #0x158
  410224:	mov	w1, #0x45e                 	// #1118
  410228:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41022c:	add	x0, x0, #0xe0
  410230:	bl	408d8c <nftw@plt+0x620c>
  410234:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410238:	add	x2, x2, #0x158
  41023c:	mov	w1, #0x464                 	// #1124
  410240:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410244:	add	x0, x0, #0xe0
  410248:	bl	408d8c <nftw@plt+0x620c>
  41024c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410250:	add	x2, x2, #0x158
  410254:	mov	w1, #0x466                 	// #1126
  410258:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41025c:	add	x0, x0, #0xe0
  410260:	bl	408d8c <nftw@plt+0x620c>
  410264:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410268:	add	x2, x2, #0x158
  41026c:	mov	w1, #0x467                 	// #1127
  410270:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410274:	add	x0, x0, #0xe0
  410278:	bl	408d8c <nftw@plt+0x620c>
  41027c:	ldr	x0, [x19, #112]
  410280:	add	x2, x0, #0x1
  410284:	str	x2, [x19, #112]
  410288:	ldrb	w1, [x22]
  41028c:	strb	w1, [x0]
  410290:	mov	x20, x22
  410294:	ldrb	w23, [x20], #1
  410298:	mov	w1, w23
  41029c:	mov	x0, x24
  4102a0:	bl	402940 <strchr@plt>
  4102a4:	cbz	x0, 4102cc <nftw@plt+0xd74c>
  4102a8:	mov	x22, x20
  4102ac:	ldr	x1, [x19, #120]
  4102b0:	ldr	x0, [x19, #112]
  4102b4:	cmp	x1, x0
  4102b8:	b.ne	41027c <nftw@plt+0xd6fc>  // b.any
  4102bc:	mov	x1, #0x1                   	// #1
  4102c0:	mov	x0, x25
  4102c4:	bl	44a42c <_obstack_newchunk@@Base>
  4102c8:	b	41027c <nftw@plt+0xd6fc>
  4102cc:	cmp	w23, #0x2e
  4102d0:	b.eq	410364 <nftw@plt+0xd7e4>  // b.none
  4102d4:	ldrb	w0, [x20]
  4102d8:	cbz	w0, 4105b0 <nftw@plt+0xda30>
  4102dc:	ldr	x1, [x19, #120]
  4102e0:	ldr	x0, [x19, #112]
  4102e4:	cmp	x1, x0
  4102e8:	b.eq	410574 <nftw@plt+0xd9f4>  // b.none
  4102ec:	ldr	x0, [x19, #112]
  4102f0:	add	x2, x0, #0x1
  4102f4:	str	x2, [x19, #112]
  4102f8:	strb	wzr, [x0]
  4102fc:	ldr	w0, [sp, #128]
  410300:	cmp	w0, #0x3b
  410304:	b.hi	410584 <nftw@plt+0xda04>  // b.pmore
  410308:	add	w26, w26, #0x2
  41030c:	add	x0, x19, #0x58
  410310:	ldr	x3, [x19, #104]
  410314:	ldr	x1, [x19, #112]
  410318:	cmp	x1, x3
  41031c:	b.eq	41059c <nftw@plt+0xda1c>  // b.none
  410320:	ldr	x0, [x19, #136]
  410324:	add	x1, x1, x0
  410328:	bic	x0, x1, x0
  41032c:	str	x0, [x19, #112]
  410330:	ldr	x1, [x19, #96]
  410334:	ldr	x2, [x19, #120]
  410338:	sub	x0, x0, x1
  41033c:	sub	x1, x2, x1
  410340:	cmp	x0, x1
  410344:	b.ls	41034c <nftw@plt+0xd7cc>  // b.plast
  410348:	str	x2, [x19, #112]
  41034c:	ldr	x1, [x19, #112]
  410350:	str	x1, [x19, #104]
  410354:	ldr	x0, [sp, #152]
  410358:	str	x3, [x28, x0, lsl #3]
  41035c:	ldr	w27, [sp, #148]
  410360:	b	40fff8 <nftw@plt+0xd478>
  410364:	ldrb	w0, [x20]
  410368:	ldr	x1, [sp, #136]
  41036c:	ldrh	w1, [x1, w0, sxtw #1]
  410370:	tbnz	w1, #2, 410410 <nftw@plt+0xd890>
  410374:	cmp	w0, #0x2a
  410378:	b.ne	41047c <nftw@plt+0xd8fc>  // b.any
  41037c:	ldr	x1, [x19, #120]
  410380:	ldr	x0, [x19, #112]
  410384:	cmp	x1, x0
  410388:	b.eq	410494 <nftw@plt+0xd914>  // b.none
  41038c:	ldr	x0, [x19, #112]
  410390:	add	x2, x0, #0x1
  410394:	str	x2, [x19, #112]
  410398:	mov	w1, #0x2a                  	// #42
  41039c:	strb	w1, [x0]
  4103a0:	add	x22, x22, #0x2
  4103a4:	ldrb	w0, [x20, #1]
  4103a8:	ldr	x1, [sp, #136]
  4103ac:	ldrh	w0, [x1, x0, lsl #1]
  4103b0:	tbnz	w0, #2, 4104a4 <nftw@plt+0xd924>
  4103b4:	ldr	w0, [sp, #160]
  4103b8:	cbnz	w0, 410534 <nftw@plt+0xd9b4>
  4103bc:	add	w27, w27, #0x1
  4103c0:	add	x0, sp, #0xc0
  4103c4:	ldr	x1, [sp, #168]
  4103c8:	str	x1, [x0, x27, lsl #3]
  4103cc:	ldr	w0, [sp, #148]
  4103d0:	add	w0, w0, #0x1
  4103d4:	str	w0, [sp, #148]
  4103d8:	ldrb	w0, [x22]
  4103dc:	cmp	w0, #0x73
  4103e0:	b.ne	41054c <nftw@plt+0xd9cc>  // b.any
  4103e4:	ldr	x1, [x19, #120]
  4103e8:	ldr	x0, [x19, #112]
  4103ec:	cmp	x1, x0
  4103f0:	b.eq	410564 <nftw@plt+0xd9e4>  // b.none
  4103f4:	ldr	x0, [x19, #112]
  4103f8:	add	x2, x0, #0x1
  4103fc:	str	x2, [x19, #112]
  410400:	mov	w1, #0x73                  	// #115
  410404:	strb	w1, [x0]
  410408:	add	x20, x22, #0x1
  41040c:	b	4102d4 <nftw@plt+0xd754>
  410410:	mov	x22, #0x1                   	// #1
  410414:	b	41043c <nftw@plt+0xd8bc>
  410418:	ldr	x0, [x19, #112]
  41041c:	add	x2, x0, #0x1
  410420:	str	x2, [x19, #112]
  410424:	ldrb	w1, [x20]
  410428:	strb	w1, [x0]
  41042c:	ldrb	w0, [x20], #1
  410430:	ldr	x1, [sp, #136]
  410434:	ldrh	w1, [x1, w0, sxtw #1]
  410438:	tbz	w1, #2, 41045c <nftw@plt+0xd8dc>
  41043c:	ldr	x1, [x19, #120]
  410440:	ldr	x0, [x19, #112]
  410444:	cmp	x1, x0
  410448:	b.ne	410418 <nftw@plt+0xd898>  // b.any
  41044c:	mov	x1, x22
  410450:	mov	x0, x25
  410454:	bl	44a42c <_obstack_newchunk@@Base>
  410458:	b	410418 <nftw@plt+0xd898>
  41045c:	cmp	w0, #0x73
  410460:	b.eq	4102d4 <nftw@plt+0xd754>  // b.none
  410464:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410468:	add	x2, x2, #0x158
  41046c:	mov	w1, #0x47c                 	// #1148
  410470:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410474:	add	x0, x0, #0xe0
  410478:	bl	408d8c <nftw@plt+0x620c>
  41047c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410480:	add	x2, x2, #0x158
  410484:	mov	w1, #0x480                 	// #1152
  410488:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41048c:	add	x0, x0, #0xe0
  410490:	bl	408d8c <nftw@plt+0x620c>
  410494:	mov	x1, #0x1                   	// #1
  410498:	mov	x0, x25
  41049c:	bl	44a42c <_obstack_newchunk@@Base>
  4104a0:	b	41038c <nftw@plt+0xd80c>
  4104a4:	mov	w2, #0xa                   	// #10
  4104a8:	add	x1, sp, #0xb8
  4104ac:	mov	x0, x22
  4104b0:	bl	4024e0 <strtoul@plt>
  4104b4:	sub	w1, w0, #0x1
  4104b8:	ldr	x22, [sp, #184]
  4104bc:	cmp	w0, w27
  4104c0:	b.ne	4104ec <nftw@plt+0xd96c>  // b.any
  4104c4:	ldr	w0, [sp, #164]
  4104c8:	cbnz	w0, 410504 <nftw@plt+0xd984>
  4104cc:	ldrb	w0, [x22]
  4104d0:	cmp	w0, #0x24
  4104d4:	b.ne	41051c <nftw@plt+0xd99c>  // b.any
  4104d8:	add	x22, x22, #0x1
  4104dc:	add	x0, sp, #0xc0
  4104e0:	ldr	x2, [sp, #168]
  4104e4:	str	x2, [x0, w1, uxtw #3]
  4104e8:	b	4103d8 <nftw@plt+0xd858>
  4104ec:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4104f0:	add	x2, x2, #0x158
  4104f4:	mov	w1, #0x489                 	// #1161
  4104f8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4104fc:	add	x0, x0, #0xe0
  410500:	bl	408d8c <nftw@plt+0x620c>
  410504:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410508:	add	x2, x2, #0x158
  41050c:	mov	w1, #0x48a                 	// #1162
  410510:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410514:	add	x0, x0, #0xe0
  410518:	bl	408d8c <nftw@plt+0x620c>
  41051c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410520:	add	x2, x2, #0x158
  410524:	mov	w1, #0x48b                 	// #1163
  410528:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41052c:	add	x0, x0, #0xe0
  410530:	bl	408d8c <nftw@plt+0x620c>
  410534:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410538:	add	x2, x2, #0x158
  41053c:	mov	w1, #0x492                 	// #1170
  410540:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410544:	add	x0, x0, #0xe0
  410548:	bl	408d8c <nftw@plt+0x620c>
  41054c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410550:	add	x2, x2, #0x158
  410554:	mov	w1, #0x496                 	// #1174
  410558:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41055c:	add	x0, x0, #0xe0
  410560:	bl	408d8c <nftw@plt+0x620c>
  410564:	mov	x1, #0x1                   	// #1
  410568:	mov	x0, x25
  41056c:	bl	44a42c <_obstack_newchunk@@Base>
  410570:	b	4103f4 <nftw@plt+0xd874>
  410574:	mov	x1, #0x1                   	// #1
  410578:	mov	x0, x25
  41057c:	bl	44a42c <_obstack_newchunk@@Base>
  410580:	b	4102ec <nftw@plt+0xd76c>
  410584:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410588:	add	x2, x2, #0x158
  41058c:	mov	w1, #0x49f                 	// #1183
  410590:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410594:	add	x0, x0, #0xe0
  410598:	bl	408d8c <nftw@plt+0x620c>
  41059c:	mov	x2, x0
  4105a0:	ldrb	w0, [x0, #80]
  4105a4:	orr	w0, w0, #0x2
  4105a8:	strb	w0, [x2, #80]
  4105ac:	b	410320 <nftw@plt+0xd7a0>
  4105b0:	ldr	w26, [sp, #128]
  4105b4:	ldr	x1, [x19, #120]
  4105b8:	ldr	x0, [x19, #112]
  4105bc:	cmp	x1, x0
  4105c0:	b.eq	410668 <nftw@plt+0xdae8>  // b.none
  4105c4:	ldr	x0, [x19, #112]
  4105c8:	add	x2, x0, #0x1
  4105cc:	str	x2, [x19, #112]
  4105d0:	strb	wzr, [x0]
  4105d4:	cmp	w26, #0x3b
  4105d8:	b.hi	410678 <nftw@plt+0xdaf8>  // b.pmore
  4105dc:	add	w4, w26, #0x1
  4105e0:	mov	w26, w26
  4105e4:	add	x0, x19, #0x58
  4105e8:	ldr	x3, [x19, #104]
  4105ec:	ldr	x1, [x19, #112]
  4105f0:	cmp	x1, x3
  4105f4:	b.eq	410690 <nftw@plt+0xdb10>  // b.none
  4105f8:	ldr	x0, [x19, #136]
  4105fc:	add	x1, x1, x0
  410600:	bic	x0, x1, x0
  410604:	str	x0, [x19, #112]
  410608:	ldr	x1, [x19, #96]
  41060c:	ldr	x2, [x19, #120]
  410610:	sub	x0, x0, x1
  410614:	sub	x1, x2, x1
  410618:	cmp	x0, x1
  41061c:	b.ls	410624 <nftw@plt+0xdaa4>  // b.plast
  410620:	str	x2, [x19, #112]
  410624:	ldr	x1, [x19, #112]
  410628:	str	x1, [x19, #104]
  41062c:	str	x3, [x28, x26, lsl #3]
  410630:	str	xzr, [x28, w4, uxtw #3]
  410634:	str	x25, [x19, #176]
  410638:	ldr	w0, [x21, #36]
  41063c:	str	w0, [sp, #128]
  410640:	ldr	w0, [x21, #40]
  410644:	str	w0, [sp, #136]
  410648:	str	wzr, [x21, #40]
  41064c:	mov	w0, #0x1                   	// #1
  410650:	str	w0, [x21, #36]
  410654:	ldr	x26, [sp, #192]
  410658:	cbz	x26, 4116c8 <nftw@plt+0xeb48>
  41065c:	mov	w24, #0x0                   	// #0
  410660:	b	410a98 <nftw@plt+0xdf18>
  410664:	mov	w26, #0x0                   	// #0
  410668:	mov	x1, #0x1                   	// #1
  41066c:	mov	x0, x25
  410670:	bl	44a42c <_obstack_newchunk@@Base>
  410674:	b	4105c4 <nftw@plt+0xda44>
  410678:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41067c:	add	x2, x2, #0x158
  410680:	mov	w1, #0x4a4                 	// #1188
  410684:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410688:	add	x0, x0, #0xe0
  41068c:	bl	408d8c <nftw@plt+0x620c>
  410690:	mov	x2, x0
  410694:	ldrb	w0, [x0, #80]
  410698:	orr	w0, w0, #0x2
  41069c:	strb	w0, [x2, #80]
  4106a0:	b	4105f8 <nftw@plt+0xda78>
  4106a4:	cmp	w0, #0x23
  4106a8:	b.eq	410730 <nftw@plt+0xdbb0>  // b.none
  4106ac:	cmp	w0, #0x2b
  4106b0:	b.ne	410794 <nftw@plt+0xdc14>  // b.any
  4106b4:	cbnz	w27, 410718 <nftw@plt+0xdb98>
  4106b8:	mov	w27, #0x1                   	// #1
  4106bc:	b	4106d0 <nftw@plt+0xdb50>
  4106c0:	ldrb	w0, [sp, #183]
  4106c4:	cbnz	w0, 410700 <nftw@plt+0xdb80>
  4106c8:	mov	w0, #0x1                   	// #1
  4106cc:	strb	w0, [sp, #183]
  4106d0:	add	x20, x20, #0x1
  4106d4:	ldrb	w0, [x20]
  4106d8:	cmp	w0, #0x6c
  4106dc:	b.eq	41076c <nftw@plt+0xdbec>  // b.none
  4106e0:	b.ls	4106a4 <nftw@plt+0xdb24>  // b.plast
  4106e4:	cmp	w0, #0x71
  4106e8:	b.eq	4106c0 <nftw@plt+0xdb40>  // b.none
  4106ec:	cmp	w0, #0x77
  4106f0:	b.ne	410794 <nftw@plt+0xdc14>  // b.any
  4106f4:	cbnz	w23, 410754 <nftw@plt+0xdbd4>
  4106f8:	mov	w23, #0x1                   	// #1
  4106fc:	b	4106d0 <nftw@plt+0xdb50>
  410700:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410704:	add	x2, x2, #0x158
  410708:	mov	w1, #0x4c0                 	// #1216
  41070c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410710:	add	x0, x0, #0xe0
  410714:	bl	408d8c <nftw@plt+0x620c>
  410718:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41071c:	add	x2, x2, #0x158
  410720:	mov	w1, #0x4c5                 	// #1221
  410724:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410728:	add	x0, x0, #0xe0
  41072c:	bl	408d8c <nftw@plt+0x620c>
  410730:	cbnz	w28, 41073c <nftw@plt+0xdbbc>
  410734:	mov	w28, #0x1                   	// #1
  410738:	b	4106d0 <nftw@plt+0xdb50>
  41073c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410740:	add	x2, x2, #0x158
  410744:	mov	w1, #0x4ca                 	// #1226
  410748:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41074c:	add	x0, x0, #0xe0
  410750:	bl	408d8c <nftw@plt+0x620c>
  410754:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410758:	add	x2, x2, #0x158
  41075c:	mov	w1, #0x4cf                 	// #1231
  410760:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410764:	add	x0, x0, #0xe0
  410768:	bl	408d8c <nftw@plt+0x620c>
  41076c:	cmp	w22, #0x1
  410770:	b.gt	41077c <nftw@plt+0xdbfc>
  410774:	add	w22, w22, #0x1
  410778:	b	4106d0 <nftw@plt+0xdb50>
  41077c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410780:	add	x2, x2, #0x158
  410784:	mov	w1, #0x4d5                 	// #1237
  410788:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41078c:	add	x0, x0, #0xe0
  410790:	bl	408d8c <nftw@plt+0x620c>
  410794:	cmp	w22, #0x0
  410798:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  41079c:	b.ne	410838 <nftw@plt+0xdcb8>  // b.any
  4107a0:	ldrb	w0, [sp, #183]
  4107a4:	cbnz	w0, 410850 <nftw@plt+0xdcd0>
  4107a8:	ldrb	w0, [x20]
  4107ac:	cmp	w0, #0x6f
  4107b0:	b.eq	410d08 <nftw@plt+0xe188>  // b.none
  4107b4:	b.hi	41092c <nftw@plt+0xddac>  // b.pmore
  4107b8:	cmp	w0, #0x63
  4107bc:	b.eq	410ae0 <nftw@plt+0xdf60>  // b.none
  4107c0:	b.ls	410860 <nftw@plt+0xdce0>  // b.plast
  4107c4:	cmp	w0, #0x66
  4107c8:	b.eq	411234 <nftw@plt+0xe6b4>  // b.none
  4107cc:	cmp	w0, #0x69
  4107d0:	b.ne	4108d4 <nftw@plt+0xdd54>  // b.any
  4107d4:	cbnz	w23, 410b74 <nftw@plt+0xdff4>
  4107d8:	cmp	w22, #0x1
  4107dc:	b.eq	410c18 <nftw@plt+0xe098>  // b.none
  4107e0:	cmp	w22, #0x2
  4107e4:	b.eq	410c90 <nftw@plt+0xe110>  // b.none
  4107e8:	cbnz	w22, 410a0c <nftw@plt+0xde8c>
  4107ec:	ldr	x0, [x21, #8]
  4107f0:	add	x0, x0, #0xcc
  4107f4:	ldr	x1, [sp, #120]
  4107f8:	ldr	x2, [x1, #8]
  4107fc:	ldr	w3, [x2, #24]
  410800:	ldr	x1, [x2]
  410804:	tbnz	w3, #31, 410bec <nftw@plt+0xe06c>
  410808:	add	x3, x1, #0xb
  41080c:	and	x3, x3, #0xfffffffffffffff8
  410810:	str	x3, [x2]
  410814:	ldr	w2, [x1]
  410818:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  41081c:	add	x1, x1, #0x3f8
  410820:	bl	4025b0 <sprintf@plt>
  410824:	ldr	x1, [x21, #8]
  410828:	add	x1, x1, #0xcc
  41082c:	mov	x0, x21
  410830:	bl	40f9f8 <nftw@plt+0xce78>
  410834:	b	410a0c <nftw@plt+0xde8c>
  410838:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41083c:	add	x2, x2, #0x158
  410840:	mov	w1, #0x4dc                 	// #1244
  410844:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410848:	add	x0, x0, #0xe0
  41084c:	bl	408d8c <nftw@plt+0x620c>
  410850:	ldrb	w1, [x21, #67]
  410854:	mov	x0, x21
  410858:	bl	40fbec <nftw@plt+0xd06c>
  41085c:	b	4107a8 <nftw@plt+0xdc28>
  410860:	cmp	w0, #0x2e
  410864:	b.eq	4114ec <nftw@plt+0xe96c>  // b.none
  410868:	cmp	w0, #0x5a
  41086c:	b.ne	4108dc <nftw@plt+0xdd5c>  // b.any
  410870:	ldr	x0, [sp, #120]
  410874:	ldr	x0, [x0, #8]
  410878:	ldr	w2, [x0, #24]
  41087c:	ldr	x1, [x0]
  410880:	tbnz	w2, #31, 4112ac <nftw@plt+0xe72c>
  410884:	add	x2, x1, #0xf
  410888:	and	x2, x2, #0xfffffffffffffff8
  41088c:	str	x2, [x0]
  410890:	ldr	x23, [x1]
  410894:	ldr	x0, [sp, #120]
  410898:	ldr	x0, [x0, #8]
  41089c:	ldr	w2, [x0, #24]
  4108a0:	ldr	x1, [x0]
  4108a4:	tbnz	w2, #31, 4112d8 <nftw@plt+0xe758>
  4108a8:	add	x2, x1, #0xb
  4108ac:	and	x2, x2, #0xfffffffffffffff8
  4108b0:	str	x2, [x0]
  4108b4:	ldr	w22, [x1]
  4108b8:	cbz	w22, 410a0c <nftw@plt+0xde8c>
  4108bc:	mov	x20, #0x0                   	// #0
  4108c0:	adrp	x27, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4108c4:	add	x27, x27, #0x1b0
  4108c8:	sub	w26, w22, #0x1
  4108cc:	mov	w28, #0x2c                  	// #44
  4108d0:	b	411310 <nftw@plt+0xe790>
  4108d4:	cmp	w0, #0x64
  4108d8:	b.eq	4107d4 <nftw@plt+0xdc54>  // b.none
  4108dc:	ldr	x8, [x21, #48]
  4108e0:	cbz	x8, 41167c <nftw@plt+0xeafc>
  4108e4:	str	x26, [sp]
  4108e8:	add	x7, sp, #0xb7
  4108ec:	mov	w6, w28
  4108f0:	mov	w5, w27
  4108f4:	mov	w4, w23
  4108f8:	mov	w3, w22
  4108fc:	mov	x2, x20
  410900:	ldr	x1, [sp, #120]
  410904:	mov	x0, x21
  410908:	blr	x8
  41090c:	and	w0, w0, #0xff
  410910:	cbnz	w0, 410a0c <nftw@plt+0xde8c>
  410914:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410918:	add	x2, x2, #0x158
  41091c:	mov	w1, #0x571                 	// #1393
  410920:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410924:	add	x0, x0, #0xe0
  410928:	bl	408d8c <nftw@plt+0x620c>
  41092c:	cmp	w0, #0x73
  410930:	b.eq	410f00 <nftw@plt+0xe380>  // b.none
  410934:	cmp	w0, #0x73
  410938:	b.ls	4109b0 <nftw@plt+0xde30>  // b.plast
  41093c:	cmp	w0, #0x75
  410940:	b.eq	41103c <nftw@plt+0xe4bc>  // b.none
  410944:	cmp	w0, #0x78
  410948:	b.ne	4108dc <nftw@plt+0xdd5c>  // b.any
  41094c:	cbnz	w23, 411358 <nftw@plt+0xe7d8>
  410950:	cmp	w22, #0x1
  410954:	b.eq	4113fc <nftw@plt+0xe87c>  // b.none
  410958:	cmp	w22, #0x2
  41095c:	b.eq	411474 <nftw@plt+0xe8f4>  // b.none
  410960:	cbnz	w22, 410a0c <nftw@plt+0xde8c>
  410964:	ldr	x0, [x21, #8]
  410968:	add	x0, x0, #0xcc
  41096c:	ldr	x1, [sp, #120]
  410970:	ldr	x2, [x1, #8]
  410974:	ldr	w3, [x2, #24]
  410978:	ldr	x1, [x2]
  41097c:	tbnz	w3, #31, 4113d0 <nftw@plt+0xe850>
  410980:	add	x3, x1, #0xb
  410984:	and	x3, x3, #0xfffffffffffffff8
  410988:	str	x3, [x2]
  41098c:	ldr	w2, [x1]
  410990:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410994:	add	x1, x1, #0x1c0
  410998:	bl	4025b0 <sprintf@plt>
  41099c:	ldr	x1, [x21, #8]
  4109a0:	add	x1, x1, #0xcc
  4109a4:	mov	x0, x21
  4109a8:	bl	40f9f8 <nftw@plt+0xce78>
  4109ac:	b	410a0c <nftw@plt+0xde8c>
  4109b0:	cmp	w0, #0x70
  4109b4:	b.eq	410fc4 <nftw@plt+0xe444>  // b.none
  4109b8:	cmp	w0, #0x72
  4109bc:	b.ne	4108dc <nftw@plt+0xdd5c>  // b.any
  4109c0:	ldrb	w22, [x21, #67]
  4109c4:	ldr	x0, [sp, #120]
  4109c8:	ldr	x0, [x0, #8]
  4109cc:	ldr	w2, [x0, #24]
  4109d0:	ldr	x1, [x0]
  4109d4:	tbnz	w2, #31, 410ab4 <nftw@plt+0xdf34>
  4109d8:	add	x2, x1, #0xf
  4109dc:	and	x2, x2, #0xfffffffffffffff8
  4109e0:	str	x2, [x0]
  4109e4:	ldr	x20, [x1]
  4109e8:	mov	x0, x20
  4109ec:	bl	4024f0 <strlen@plt>
  4109f0:	mov	x2, x0
  4109f4:	mov	x1, x20
  4109f8:	mov	w0, w22
  4109fc:	bl	409f38 <nftw@plt+0x73b8>
  410a00:	mov	x1, x0
  410a04:	mov	x0, x21
  410a08:	bl	40f9f8 <nftw@plt+0xce78>
  410a0c:	ldrb	w0, [sp, #183]
  410a10:	cbnz	w0, 411694 <nftw@plt+0xeb14>
  410a14:	ldr	x1, [x19, #120]
  410a18:	ldr	x0, [x19, #112]
  410a1c:	cmp	x1, x0
  410a20:	b.eq	4116a4 <nftw@plt+0xeb24>  // b.none
  410a24:	add	x0, x19, #0x58
  410a28:	ldr	x1, [x19, #112]
  410a2c:	add	x2, x1, #0x1
  410a30:	str	x2, [x19, #112]
  410a34:	strb	wzr, [x1]
  410a38:	add	x1, sp, #0xc0
  410a3c:	ldr	x4, [x1, w24, uxtw #3]
  410a40:	ldr	x3, [x19, #104]
  410a44:	ldr	x1, [x19, #112]
  410a48:	cmp	x1, x3
  410a4c:	b.eq	4116b4 <nftw@plt+0xeb34>  // b.none
  410a50:	ldr	x0, [x19, #136]
  410a54:	add	x1, x1, x0
  410a58:	bic	x0, x1, x0
  410a5c:	str	x0, [x19, #112]
  410a60:	ldr	x1, [x19, #96]
  410a64:	ldr	x2, [x19, #120]
  410a68:	sub	x0, x0, x1
  410a6c:	sub	x1, x2, x1
  410a70:	cmp	x0, x1
  410a74:	b.ls	410a7c <nftw@plt+0xdefc>  // b.plast
  410a78:	str	x2, [x19, #112]
  410a7c:	ldr	x1, [x19, #112]
  410a80:	str	x1, [x19, #104]
  410a84:	str	x3, [x4]
  410a88:	add	w24, w24, #0x1
  410a8c:	add	x0, sp, #0xc0
  410a90:	ldr	x26, [x0, w24, uxtw #3]
  410a94:	cbz	x26, 4116c8 <nftw@plt+0xeb48>
  410a98:	strb	wzr, [sp, #183]
  410a9c:	ldr	x20, [x26]
  410aa0:	mov	w28, #0x0                   	// #0
  410aa4:	mov	w27, #0x0                   	// #0
  410aa8:	mov	w23, #0x0                   	// #0
  410aac:	mov	w22, #0x0                   	// #0
  410ab0:	b	4106d4 <nftw@plt+0xdb54>
  410ab4:	add	w3, w2, #0x8
  410ab8:	str	w3, [x0, #24]
  410abc:	cmp	w3, #0x0
  410ac0:	b.le	410ad4 <nftw@plt+0xdf54>
  410ac4:	add	x2, x1, #0xf
  410ac8:	and	x2, x2, #0xfffffffffffffff8
  410acc:	str	x2, [x0]
  410ad0:	b	4109e4 <nftw@plt+0xde64>
  410ad4:	ldr	x1, [x0, #8]
  410ad8:	add	x1, x1, w2, sxtw
  410adc:	b	4109e4 <nftw@plt+0xde64>
  410ae0:	ldr	x0, [sp, #120]
  410ae4:	ldr	x0, [x0, #8]
  410ae8:	ldr	w2, [x0, #24]
  410aec:	ldr	x1, [x0]
  410af0:	tbnz	w2, #31, 410b2c <nftw@plt+0xdfac>
  410af4:	add	x2, x1, #0xb
  410af8:	and	x2, x2, #0xfffffffffffffff8
  410afc:	str	x2, [x0]
  410b00:	ldr	w1, [x1]
  410b04:	and	x2, x1, #0xff
  410b08:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  410b0c:	add	x0, x0, #0xe68
  410b10:	ldrh	w0, [x0, x2, lsl #1]
  410b14:	tbnz	w0, #4, 410b20 <nftw@plt+0xdfa0>
  410b18:	ldrb	w0, [sp, #183]
  410b1c:	cbnz	w0, 410b58 <nftw@plt+0xdfd8>
  410b20:	mov	x0, x21
  410b24:	bl	40f400 <nftw@plt+0xc880>
  410b28:	b	410a0c <nftw@plt+0xde8c>
  410b2c:	add	w3, w2, #0x8
  410b30:	str	w3, [x0, #24]
  410b34:	cmp	w3, #0x0
  410b38:	b.le	410b4c <nftw@plt+0xdfcc>
  410b3c:	add	x2, x1, #0xb
  410b40:	and	x2, x2, #0xfffffffffffffff8
  410b44:	str	x2, [x0]
  410b48:	b	410b00 <nftw@plt+0xdf80>
  410b4c:	ldr	x1, [x0, #8]
  410b50:	add	x1, x1, w2, sxtw
  410b54:	b	410b00 <nftw@plt+0xdf80>
  410b58:	strb	wzr, [sp, #185]
  410b5c:	strb	w1, [sp, #184]
  410b60:	mov	x2, #0x1                   	// #1
  410b64:	add	x1, sp, #0xb8
  410b68:	mov	x0, x21
  410b6c:	bl	40f8b8 <nftw@plt+0xcd38>
  410b70:	b	410a0c <nftw@plt+0xde8c>
  410b74:	ldr	x0, [sp, #120]
  410b78:	ldr	x0, [x0, #8]
  410b7c:	ldr	w2, [x0, #24]
  410b80:	ldr	x1, [x0]
  410b84:	tbnz	w2, #31, 410bc0 <nftw@plt+0xe040>
  410b88:	add	x2, x1, #0xf
  410b8c:	and	x2, x2, #0xfffffffffffffff8
  410b90:	str	x2, [x0]
  410b94:	ldr	x0, [x21, #8]
  410b98:	ldr	x2, [x1]
  410b9c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410ba0:	add	x1, x1, #0x1f0
  410ba4:	add	x0, x0, #0xcc
  410ba8:	bl	4025b0 <sprintf@plt>
  410bac:	ldr	x1, [x21, #8]
  410bb0:	add	x1, x1, #0xcc
  410bb4:	mov	x0, x21
  410bb8:	bl	40f9f8 <nftw@plt+0xce78>
  410bbc:	b	410a0c <nftw@plt+0xde8c>
  410bc0:	add	w3, w2, #0x8
  410bc4:	str	w3, [x0, #24]
  410bc8:	cmp	w3, #0x0
  410bcc:	b.le	410be0 <nftw@plt+0xe060>
  410bd0:	add	x2, x1, #0xf
  410bd4:	and	x2, x2, #0xfffffffffffffff8
  410bd8:	str	x2, [x0]
  410bdc:	b	410b94 <nftw@plt+0xe014>
  410be0:	ldr	x1, [x0, #8]
  410be4:	add	x1, x1, w2, sxtw
  410be8:	b	410b94 <nftw@plt+0xe014>
  410bec:	add	w4, w3, #0x8
  410bf0:	str	w4, [x2, #24]
  410bf4:	cmp	w4, #0x0
  410bf8:	b.le	410c0c <nftw@plt+0xe08c>
  410bfc:	add	x3, x1, #0xb
  410c00:	and	x3, x3, #0xfffffffffffffff8
  410c04:	str	x3, [x2]
  410c08:	b	410814 <nftw@plt+0xdc94>
  410c0c:	ldr	x1, [x2, #8]
  410c10:	add	x1, x1, w3, sxtw
  410c14:	b	410814 <nftw@plt+0xdc94>
  410c18:	ldr	x0, [x21, #8]
  410c1c:	add	x0, x0, #0xcc
  410c20:	ldr	x1, [sp, #120]
  410c24:	ldr	x2, [x1, #8]
  410c28:	ldr	w3, [x2, #24]
  410c2c:	ldr	x1, [x2]
  410c30:	tbnz	w3, #31, 410c64 <nftw@plt+0xe0e4>
  410c34:	add	x3, x1, #0xf
  410c38:	and	x3, x3, #0xfffffffffffffff8
  410c3c:	str	x3, [x2]
  410c40:	ldr	x2, [x1]
  410c44:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410c48:	add	x1, x1, #0x1f0
  410c4c:	bl	4025b0 <sprintf@plt>
  410c50:	ldr	x1, [x21, #8]
  410c54:	add	x1, x1, #0xcc
  410c58:	mov	x0, x21
  410c5c:	bl	40f9f8 <nftw@plt+0xce78>
  410c60:	b	410a0c <nftw@plt+0xde8c>
  410c64:	add	w4, w3, #0x8
  410c68:	str	w4, [x2, #24]
  410c6c:	cmp	w4, #0x0
  410c70:	b.le	410c84 <nftw@plt+0xe104>
  410c74:	add	x3, x1, #0xf
  410c78:	and	x3, x3, #0xfffffffffffffff8
  410c7c:	str	x3, [x2]
  410c80:	b	410c40 <nftw@plt+0xe0c0>
  410c84:	ldr	x1, [x2, #8]
  410c88:	add	x1, x1, w3, sxtw
  410c8c:	b	410c40 <nftw@plt+0xe0c0>
  410c90:	ldr	x0, [x21, #8]
  410c94:	add	x0, x0, #0xcc
  410c98:	ldr	x1, [sp, #120]
  410c9c:	ldr	x2, [x1, #8]
  410ca0:	ldr	w3, [x2, #24]
  410ca4:	ldr	x1, [x2]
  410ca8:	tbnz	w3, #31, 410cdc <nftw@plt+0xe15c>
  410cac:	add	x3, x1, #0xf
  410cb0:	and	x3, x3, #0xfffffffffffffff8
  410cb4:	str	x3, [x2]
  410cb8:	ldr	x2, [x1]
  410cbc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410cc0:	add	x1, x1, #0x170
  410cc4:	bl	4025b0 <sprintf@plt>
  410cc8:	ldr	x1, [x21, #8]
  410ccc:	add	x1, x1, #0xcc
  410cd0:	mov	x0, x21
  410cd4:	bl	40f9f8 <nftw@plt+0xce78>
  410cd8:	b	410a0c <nftw@plt+0xde8c>
  410cdc:	add	w4, w3, #0x8
  410ce0:	str	w4, [x2, #24]
  410ce4:	cmp	w4, #0x0
  410ce8:	b.le	410cfc <nftw@plt+0xe17c>
  410cec:	add	x3, x1, #0xf
  410cf0:	and	x3, x3, #0xfffffffffffffff8
  410cf4:	str	x3, [x2]
  410cf8:	b	410cb8 <nftw@plt+0xe138>
  410cfc:	ldr	x1, [x2, #8]
  410d00:	add	x1, x1, w3, sxtw
  410d04:	b	410cb8 <nftw@plt+0xe138>
  410d08:	cbnz	w23, 410d6c <nftw@plt+0xe1ec>
  410d0c:	cmp	w22, #0x1
  410d10:	b.eq	410e10 <nftw@plt+0xe290>  // b.none
  410d14:	cmp	w22, #0x2
  410d18:	b.eq	410e88 <nftw@plt+0xe308>  // b.none
  410d1c:	cbnz	w22, 410a0c <nftw@plt+0xde8c>
  410d20:	ldr	x0, [x21, #8]
  410d24:	add	x0, x0, #0xcc
  410d28:	ldr	x1, [sp, #120]
  410d2c:	ldr	x2, [x1, #8]
  410d30:	ldr	w3, [x2, #24]
  410d34:	ldr	x1, [x2]
  410d38:	tbnz	w3, #31, 410de4 <nftw@plt+0xe264>
  410d3c:	add	x3, x1, #0xb
  410d40:	and	x3, x3, #0xfffffffffffffff8
  410d44:	str	x3, [x2]
  410d48:	ldr	w2, [x1]
  410d4c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410d50:	add	x1, x1, #0x180
  410d54:	bl	4025b0 <sprintf@plt>
  410d58:	ldr	x1, [x21, #8]
  410d5c:	add	x1, x1, #0xcc
  410d60:	mov	x0, x21
  410d64:	bl	40f9f8 <nftw@plt+0xce78>
  410d68:	b	410a0c <nftw@plt+0xde8c>
  410d6c:	ldr	x0, [x21, #8]
  410d70:	add	x0, x0, #0xcc
  410d74:	ldr	x1, [sp, #120]
  410d78:	ldr	x2, [x1, #8]
  410d7c:	ldr	w3, [x2, #24]
  410d80:	ldr	x1, [x2]
  410d84:	tbnz	w3, #31, 410db8 <nftw@plt+0xe238>
  410d88:	add	x3, x1, #0xf
  410d8c:	and	x3, x3, #0xfffffffffffffff8
  410d90:	str	x3, [x2]
  410d94:	ldr	x2, [x1]
  410d98:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410d9c:	add	x1, x1, #0x178
  410da0:	bl	4025b0 <sprintf@plt>
  410da4:	ldr	x1, [x21, #8]
  410da8:	add	x1, x1, #0xcc
  410dac:	mov	x0, x21
  410db0:	bl	40f9f8 <nftw@plt+0xce78>
  410db4:	b	410a0c <nftw@plt+0xde8c>
  410db8:	add	w4, w3, #0x8
  410dbc:	str	w4, [x2, #24]
  410dc0:	cmp	w4, #0x0
  410dc4:	b.le	410dd8 <nftw@plt+0xe258>
  410dc8:	add	x3, x1, #0xf
  410dcc:	and	x3, x3, #0xfffffffffffffff8
  410dd0:	str	x3, [x2]
  410dd4:	b	410d94 <nftw@plt+0xe214>
  410dd8:	ldr	x1, [x2, #8]
  410ddc:	add	x1, x1, w3, sxtw
  410de0:	b	410d94 <nftw@plt+0xe214>
  410de4:	add	w4, w3, #0x8
  410de8:	str	w4, [x2, #24]
  410dec:	cmp	w4, #0x0
  410df0:	b.le	410e04 <nftw@plt+0xe284>
  410df4:	add	x3, x1, #0xb
  410df8:	and	x3, x3, #0xfffffffffffffff8
  410dfc:	str	x3, [x2]
  410e00:	b	410d48 <nftw@plt+0xe1c8>
  410e04:	ldr	x1, [x2, #8]
  410e08:	add	x1, x1, w3, sxtw
  410e0c:	b	410d48 <nftw@plt+0xe1c8>
  410e10:	ldr	x0, [x21, #8]
  410e14:	add	x0, x0, #0xcc
  410e18:	ldr	x1, [sp, #120]
  410e1c:	ldr	x2, [x1, #8]
  410e20:	ldr	w3, [x2, #24]
  410e24:	ldr	x1, [x2]
  410e28:	tbnz	w3, #31, 410e5c <nftw@plt+0xe2dc>
  410e2c:	add	x3, x1, #0xf
  410e30:	and	x3, x3, #0xfffffffffffffff8
  410e34:	str	x3, [x2]
  410e38:	ldr	x2, [x1]
  410e3c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410e40:	add	x1, x1, #0x178
  410e44:	bl	4025b0 <sprintf@plt>
  410e48:	ldr	x1, [x21, #8]
  410e4c:	add	x1, x1, #0xcc
  410e50:	mov	x0, x21
  410e54:	bl	40f9f8 <nftw@plt+0xce78>
  410e58:	b	410a0c <nftw@plt+0xde8c>
  410e5c:	add	w4, w3, #0x8
  410e60:	str	w4, [x2, #24]
  410e64:	cmp	w4, #0x0
  410e68:	b.le	410e7c <nftw@plt+0xe2fc>
  410e6c:	add	x3, x1, #0xf
  410e70:	and	x3, x3, #0xfffffffffffffff8
  410e74:	str	x3, [x2]
  410e78:	b	410e38 <nftw@plt+0xe2b8>
  410e7c:	ldr	x1, [x2, #8]
  410e80:	add	x1, x1, w3, sxtw
  410e84:	b	410e38 <nftw@plt+0xe2b8>
  410e88:	ldr	x0, [x21, #8]
  410e8c:	add	x0, x0, #0xcc
  410e90:	ldr	x1, [sp, #120]
  410e94:	ldr	x2, [x1, #8]
  410e98:	ldr	w3, [x2, #24]
  410e9c:	ldr	x1, [x2]
  410ea0:	tbnz	w3, #31, 410ed4 <nftw@plt+0xe354>
  410ea4:	add	x3, x1, #0xf
  410ea8:	and	x3, x3, #0xfffffffffffffff8
  410eac:	str	x3, [x2]
  410eb0:	ldr	x2, [x1]
  410eb4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410eb8:	add	x1, x1, #0x188
  410ebc:	bl	4025b0 <sprintf@plt>
  410ec0:	ldr	x1, [x21, #8]
  410ec4:	add	x1, x1, #0xcc
  410ec8:	mov	x0, x21
  410ecc:	bl	40f9f8 <nftw@plt+0xce78>
  410ed0:	b	410a0c <nftw@plt+0xde8c>
  410ed4:	add	w4, w3, #0x8
  410ed8:	str	w4, [x2, #24]
  410edc:	cmp	w4, #0x0
  410ee0:	b.le	410ef4 <nftw@plt+0xe374>
  410ee4:	add	x3, x1, #0xf
  410ee8:	and	x3, x3, #0xfffffffffffffff8
  410eec:	str	x3, [x2]
  410ef0:	b	410eb0 <nftw@plt+0xe330>
  410ef4:	ldr	x1, [x2, #8]
  410ef8:	add	x1, x1, w3, sxtw
  410efc:	b	410eb0 <nftw@plt+0xe330>
  410f00:	ldrb	w0, [sp, #183]
  410f04:	cbz	w0, 410f68 <nftw@plt+0xe3e8>
  410f08:	ldr	x0, [sp, #120]
  410f0c:	ldr	x0, [x0, #8]
  410f10:	ldr	w2, [x0, #24]
  410f14:	ldr	x1, [x0]
  410f18:	tbnz	w2, #31, 410f3c <nftw@plt+0xe3bc>
  410f1c:	add	x2, x1, #0xf
  410f20:	and	x2, x2, #0xfffffffffffffff8
  410f24:	str	x2, [x0]
  410f28:	mov	x2, #0xffffffffffffffff    	// #-1
  410f2c:	ldr	x1, [x1]
  410f30:	mov	x0, x21
  410f34:	bl	40f8b8 <nftw@plt+0xcd38>
  410f38:	b	410a0c <nftw@plt+0xde8c>
  410f3c:	add	w3, w2, #0x8
  410f40:	str	w3, [x0, #24]
  410f44:	cmp	w3, #0x0
  410f48:	b.le	410f5c <nftw@plt+0xe3dc>
  410f4c:	add	x2, x1, #0xf
  410f50:	and	x2, x2, #0xfffffffffffffff8
  410f54:	str	x2, [x0]
  410f58:	b	410f28 <nftw@plt+0xe3a8>
  410f5c:	ldr	x1, [x0, #8]
  410f60:	add	x1, x1, w2, sxtw
  410f64:	b	410f28 <nftw@plt+0xe3a8>
  410f68:	ldr	x0, [sp, #120]
  410f6c:	ldr	x0, [x0, #8]
  410f70:	ldr	w2, [x0, #24]
  410f74:	ldr	x1, [x0]
  410f78:	tbnz	w2, #31, 410f98 <nftw@plt+0xe418>
  410f7c:	add	x2, x1, #0xf
  410f80:	and	x2, x2, #0xfffffffffffffff8
  410f84:	str	x2, [x0]
  410f88:	ldr	x1, [x1]
  410f8c:	mov	x0, x21
  410f90:	bl	40f9f8 <nftw@plt+0xce78>
  410f94:	b	410a0c <nftw@plt+0xde8c>
  410f98:	add	w3, w2, #0x8
  410f9c:	str	w3, [x0, #24]
  410fa0:	cmp	w3, #0x0
  410fa4:	b.le	410fb8 <nftw@plt+0xe438>
  410fa8:	add	x2, x1, #0xf
  410fac:	and	x2, x2, #0xfffffffffffffff8
  410fb0:	str	x2, [x0]
  410fb4:	b	410f88 <nftw@plt+0xe408>
  410fb8:	ldr	x1, [x0, #8]
  410fbc:	add	x1, x1, w2, sxtw
  410fc0:	b	410f88 <nftw@plt+0xe408>
  410fc4:	ldr	x0, [x21, #8]
  410fc8:	add	x0, x0, #0xcc
  410fcc:	ldr	x1, [sp, #120]
  410fd0:	ldr	x1, [x1, #8]
  410fd4:	ldr	w3, [x1, #24]
  410fd8:	ldr	x2, [x1]
  410fdc:	tbnz	w3, #31, 411010 <nftw@plt+0xe490>
  410fe0:	add	x3, x2, #0xf
  410fe4:	and	x3, x3, #0xfffffffffffffff8
  410fe8:	str	x3, [x1]
  410fec:	ldr	x2, [x2]
  410ff0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  410ff4:	add	x1, x1, #0x190
  410ff8:	bl	4025b0 <sprintf@plt>
  410ffc:	ldr	x1, [x21, #8]
  411000:	add	x1, x1, #0xcc
  411004:	mov	x0, x21
  411008:	bl	40f9f8 <nftw@plt+0xce78>
  41100c:	b	410a0c <nftw@plt+0xde8c>
  411010:	add	w4, w3, #0x8
  411014:	str	w4, [x1, #24]
  411018:	cmp	w4, #0x0
  41101c:	b.le	411030 <nftw@plt+0xe4b0>
  411020:	add	x3, x2, #0xf
  411024:	and	x3, x3, #0xfffffffffffffff8
  411028:	str	x3, [x1]
  41102c:	b	410fec <nftw@plt+0xe46c>
  411030:	ldr	x2, [x1, #8]
  411034:	add	x2, x2, w3, sxtw
  411038:	b	410fec <nftw@plt+0xe46c>
  41103c:	cbnz	w23, 4110a0 <nftw@plt+0xe520>
  411040:	cmp	w22, #0x1
  411044:	b.eq	411144 <nftw@plt+0xe5c4>  // b.none
  411048:	cmp	w22, #0x2
  41104c:	b.eq	4111bc <nftw@plt+0xe63c>  // b.none
  411050:	cbnz	w22, 410a0c <nftw@plt+0xde8c>
  411054:	ldr	x0, [x21, #8]
  411058:	add	x0, x0, #0xcc
  41105c:	ldr	x1, [sp, #120]
  411060:	ldr	x2, [x1, #8]
  411064:	ldr	w3, [x2, #24]
  411068:	ldr	x1, [x2]
  41106c:	tbnz	w3, #31, 411118 <nftw@plt+0xe598>
  411070:	add	x3, x1, #0xb
  411074:	and	x3, x3, #0xfffffffffffffff8
  411078:	str	x3, [x2]
  41107c:	ldr	w2, [x1]
  411080:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411084:	add	x1, x1, #0x1a0
  411088:	bl	4025b0 <sprintf@plt>
  41108c:	ldr	x1, [x21, #8]
  411090:	add	x1, x1, #0xcc
  411094:	mov	x0, x21
  411098:	bl	40f9f8 <nftw@plt+0xce78>
  41109c:	b	410a0c <nftw@plt+0xde8c>
  4110a0:	ldr	x0, [x21, #8]
  4110a4:	add	x0, x0, #0xcc
  4110a8:	ldr	x1, [sp, #120]
  4110ac:	ldr	x2, [x1, #8]
  4110b0:	ldr	w3, [x2, #24]
  4110b4:	ldr	x1, [x2]
  4110b8:	tbnz	w3, #31, 4110ec <nftw@plt+0xe56c>
  4110bc:	add	x3, x1, #0xf
  4110c0:	and	x3, x3, #0xfffffffffffffff8
  4110c4:	str	x3, [x2]
  4110c8:	ldr	x2, [x1]
  4110cc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4110d0:	add	x1, x1, #0x198
  4110d4:	bl	4025b0 <sprintf@plt>
  4110d8:	ldr	x1, [x21, #8]
  4110dc:	add	x1, x1, #0xcc
  4110e0:	mov	x0, x21
  4110e4:	bl	40f9f8 <nftw@plt+0xce78>
  4110e8:	b	410a0c <nftw@plt+0xde8c>
  4110ec:	add	w4, w3, #0x8
  4110f0:	str	w4, [x2, #24]
  4110f4:	cmp	w4, #0x0
  4110f8:	b.le	41110c <nftw@plt+0xe58c>
  4110fc:	add	x3, x1, #0xf
  411100:	and	x3, x3, #0xfffffffffffffff8
  411104:	str	x3, [x2]
  411108:	b	4110c8 <nftw@plt+0xe548>
  41110c:	ldr	x1, [x2, #8]
  411110:	add	x1, x1, w3, sxtw
  411114:	b	4110c8 <nftw@plt+0xe548>
  411118:	add	w4, w3, #0x8
  41111c:	str	w4, [x2, #24]
  411120:	cmp	w4, #0x0
  411124:	b.le	411138 <nftw@plt+0xe5b8>
  411128:	add	x3, x1, #0xb
  41112c:	and	x3, x3, #0xfffffffffffffff8
  411130:	str	x3, [x2]
  411134:	b	41107c <nftw@plt+0xe4fc>
  411138:	ldr	x1, [x2, #8]
  41113c:	add	x1, x1, w3, sxtw
  411140:	b	41107c <nftw@plt+0xe4fc>
  411144:	ldr	x0, [x21, #8]
  411148:	add	x0, x0, #0xcc
  41114c:	ldr	x1, [sp, #120]
  411150:	ldr	x2, [x1, #8]
  411154:	ldr	w3, [x2, #24]
  411158:	ldr	x1, [x2]
  41115c:	tbnz	w3, #31, 411190 <nftw@plt+0xe610>
  411160:	add	x3, x1, #0xf
  411164:	and	x3, x3, #0xfffffffffffffff8
  411168:	str	x3, [x2]
  41116c:	ldr	x2, [x1]
  411170:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411174:	add	x1, x1, #0x198
  411178:	bl	4025b0 <sprintf@plt>
  41117c:	ldr	x1, [x21, #8]
  411180:	add	x1, x1, #0xcc
  411184:	mov	x0, x21
  411188:	bl	40f9f8 <nftw@plt+0xce78>
  41118c:	b	410a0c <nftw@plt+0xde8c>
  411190:	add	w4, w3, #0x8
  411194:	str	w4, [x2, #24]
  411198:	cmp	w4, #0x0
  41119c:	b.le	4111b0 <nftw@plt+0xe630>
  4111a0:	add	x3, x1, #0xf
  4111a4:	and	x3, x3, #0xfffffffffffffff8
  4111a8:	str	x3, [x2]
  4111ac:	b	41116c <nftw@plt+0xe5ec>
  4111b0:	ldr	x1, [x2, #8]
  4111b4:	add	x1, x1, w3, sxtw
  4111b8:	b	41116c <nftw@plt+0xe5ec>
  4111bc:	ldr	x0, [x21, #8]
  4111c0:	add	x0, x0, #0xcc
  4111c4:	ldr	x1, [sp, #120]
  4111c8:	ldr	x2, [x1, #8]
  4111cc:	ldr	w3, [x2, #24]
  4111d0:	ldr	x1, [x2]
  4111d4:	tbnz	w3, #31, 411208 <nftw@plt+0xe688>
  4111d8:	add	x3, x1, #0xf
  4111dc:	and	x3, x3, #0xfffffffffffffff8
  4111e0:	str	x3, [x2]
  4111e4:	ldr	x2, [x1]
  4111e8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4111ec:	add	x1, x1, #0x1a8
  4111f0:	bl	4025b0 <sprintf@plt>
  4111f4:	ldr	x1, [x21, #8]
  4111f8:	add	x1, x1, #0xcc
  4111fc:	mov	x0, x21
  411200:	bl	40f9f8 <nftw@plt+0xce78>
  411204:	b	410a0c <nftw@plt+0xde8c>
  411208:	add	w4, w3, #0x8
  41120c:	str	w4, [x2, #24]
  411210:	cmp	w4, #0x0
  411214:	b.le	411228 <nftw@plt+0xe6a8>
  411218:	add	x3, x1, #0xf
  41121c:	and	x3, x3, #0xfffffffffffffff8
  411220:	str	x3, [x2]
  411224:	b	4111e4 <nftw@plt+0xe664>
  411228:	ldr	x1, [x2, #8]
  41122c:	add	x1, x1, w3, sxtw
  411230:	b	4111e4 <nftw@plt+0xe664>
  411234:	ldr	x0, [x21, #8]
  411238:	add	x0, x0, #0xcc
  41123c:	ldr	x1, [sp, #120]
  411240:	ldr	x1, [x1, #8]
  411244:	ldr	w3, [x1, #28]
  411248:	ldr	x2, [x1]
  41124c:	tbnz	w3, #31, 411280 <nftw@plt+0xe700>
  411250:	add	x3, x2, #0xf
  411254:	and	x3, x3, #0xfffffffffffffff8
  411258:	str	x3, [x1]
  41125c:	ldr	d0, [x2]
  411260:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  411264:	add	x1, x1, #0x840
  411268:	bl	4025b0 <sprintf@plt>
  41126c:	ldr	x1, [x21, #8]
  411270:	add	x1, x1, #0xcc
  411274:	mov	x0, x21
  411278:	bl	40f9f8 <nftw@plt+0xce78>
  41127c:	b	410a0c <nftw@plt+0xde8c>
  411280:	add	w4, w3, #0x10
  411284:	str	w4, [x1, #28]
  411288:	cmp	w4, #0x0
  41128c:	b.le	4112a0 <nftw@plt+0xe720>
  411290:	add	x3, x2, #0xf
  411294:	and	x3, x3, #0xfffffffffffffff8
  411298:	str	x3, [x1]
  41129c:	b	41125c <nftw@plt+0xe6dc>
  4112a0:	ldr	x2, [x1, #16]
  4112a4:	add	x2, x2, w3, sxtw
  4112a8:	b	41125c <nftw@plt+0xe6dc>
  4112ac:	add	w3, w2, #0x8
  4112b0:	str	w3, [x0, #24]
  4112b4:	cmp	w3, #0x0
  4112b8:	b.le	4112cc <nftw@plt+0xe74c>
  4112bc:	add	x2, x1, #0xf
  4112c0:	and	x2, x2, #0xfffffffffffffff8
  4112c4:	str	x2, [x0]
  4112c8:	b	410890 <nftw@plt+0xdd10>
  4112cc:	ldr	x1, [x0, #8]
  4112d0:	add	x1, x1, w2, sxtw
  4112d4:	b	410890 <nftw@plt+0xdd10>
  4112d8:	add	w3, w2, #0x8
  4112dc:	str	w3, [x0, #24]
  4112e0:	cmp	w3, #0x0
  4112e4:	b.le	4112f8 <nftw@plt+0xe778>
  4112e8:	add	x2, x1, #0xb
  4112ec:	and	x2, x2, #0xfffffffffffffff8
  4112f0:	str	x2, [x0]
  4112f4:	b	4108b4 <nftw@plt+0xdd34>
  4112f8:	ldr	x1, [x0, #8]
  4112fc:	add	x1, x1, w2, sxtw
  411300:	b	4108b4 <nftw@plt+0xdd34>
  411304:	add	x20, x20, #0x1
  411308:	cmp	w22, w20
  41130c:	b.ls	410a0c <nftw@plt+0xde8c>  // b.plast
  411310:	ldr	x0, [x21, #8]
  411314:	ldr	w2, [x23, x20, lsl #2]
  411318:	mov	x1, x27
  41131c:	add	x0, x0, #0xcc
  411320:	bl	4025b0 <sprintf@plt>
  411324:	ldr	x1, [x21, #8]
  411328:	add	x1, x1, #0xcc
  41132c:	mov	x0, x21
  411330:	bl	40f9f8 <nftw@plt+0xce78>
  411334:	cmp	w26, w20
  411338:	b.ls	411304 <nftw@plt+0xe784>  // b.plast
  41133c:	mov	w1, w28
  411340:	mov	x0, x21
  411344:	bl	40f400 <nftw@plt+0xc880>
  411348:	mov	w1, #0x20                  	// #32
  41134c:	mov	x0, x21
  411350:	bl	40f400 <nftw@plt+0xc880>
  411354:	b	411304 <nftw@plt+0xe784>
  411358:	ldr	x0, [x21, #8]
  41135c:	add	x0, x0, #0xcc
  411360:	ldr	x1, [sp, #120]
  411364:	ldr	x2, [x1, #8]
  411368:	ldr	w3, [x2, #24]
  41136c:	ldr	x1, [x2]
  411370:	tbnz	w3, #31, 4113a4 <nftw@plt+0xe824>
  411374:	add	x3, x1, #0xf
  411378:	and	x3, x3, #0xfffffffffffffff8
  41137c:	str	x3, [x2]
  411380:	ldr	x2, [x1]
  411384:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411388:	add	x1, x1, #0x1b8
  41138c:	bl	4025b0 <sprintf@plt>
  411390:	ldr	x1, [x21, #8]
  411394:	add	x1, x1, #0xcc
  411398:	mov	x0, x21
  41139c:	bl	40f9f8 <nftw@plt+0xce78>
  4113a0:	b	410a0c <nftw@plt+0xde8c>
  4113a4:	add	w4, w3, #0x8
  4113a8:	str	w4, [x2, #24]
  4113ac:	cmp	w4, #0x0
  4113b0:	b.le	4113c4 <nftw@plt+0xe844>
  4113b4:	add	x3, x1, #0xf
  4113b8:	and	x3, x3, #0xfffffffffffffff8
  4113bc:	str	x3, [x2]
  4113c0:	b	411380 <nftw@plt+0xe800>
  4113c4:	ldr	x1, [x2, #8]
  4113c8:	add	x1, x1, w3, sxtw
  4113cc:	b	411380 <nftw@plt+0xe800>
  4113d0:	add	w4, w3, #0x8
  4113d4:	str	w4, [x2, #24]
  4113d8:	cmp	w4, #0x0
  4113dc:	b.le	4113f0 <nftw@plt+0xe870>
  4113e0:	add	x3, x1, #0xb
  4113e4:	and	x3, x3, #0xfffffffffffffff8
  4113e8:	str	x3, [x2]
  4113ec:	b	41098c <nftw@plt+0xde0c>
  4113f0:	ldr	x1, [x2, #8]
  4113f4:	add	x1, x1, w3, sxtw
  4113f8:	b	41098c <nftw@plt+0xde0c>
  4113fc:	ldr	x0, [x21, #8]
  411400:	add	x0, x0, #0xcc
  411404:	ldr	x1, [sp, #120]
  411408:	ldr	x2, [x1, #8]
  41140c:	ldr	w3, [x2, #24]
  411410:	ldr	x1, [x2]
  411414:	tbnz	w3, #31, 411448 <nftw@plt+0xe8c8>
  411418:	add	x3, x1, #0xf
  41141c:	and	x3, x3, #0xfffffffffffffff8
  411420:	str	x3, [x2]
  411424:	ldr	x2, [x1]
  411428:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41142c:	add	x1, x1, #0x1c8
  411430:	bl	4025b0 <sprintf@plt>
  411434:	ldr	x1, [x21, #8]
  411438:	add	x1, x1, #0xcc
  41143c:	mov	x0, x21
  411440:	bl	40f9f8 <nftw@plt+0xce78>
  411444:	b	410a0c <nftw@plt+0xde8c>
  411448:	add	w4, w3, #0x8
  41144c:	str	w4, [x2, #24]
  411450:	cmp	w4, #0x0
  411454:	b.le	411468 <nftw@plt+0xe8e8>
  411458:	add	x3, x1, #0xf
  41145c:	and	x3, x3, #0xfffffffffffffff8
  411460:	str	x3, [x2]
  411464:	b	411424 <nftw@plt+0xe8a4>
  411468:	ldr	x1, [x2, #8]
  41146c:	add	x1, x1, w3, sxtw
  411470:	b	411424 <nftw@plt+0xe8a4>
  411474:	ldr	x0, [x21, #8]
  411478:	add	x0, x0, #0xcc
  41147c:	ldr	x1, [sp, #120]
  411480:	ldr	x2, [x1, #8]
  411484:	ldr	w3, [x2, #24]
  411488:	ldr	x1, [x2]
  41148c:	tbnz	w3, #31, 4114c0 <nftw@plt+0xe940>
  411490:	add	x3, x1, #0xf
  411494:	and	x3, x3, #0xfffffffffffffff8
  411498:	str	x3, [x2]
  41149c:	ldr	x2, [x1]
  4114a0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4114a4:	add	x1, x1, #0x1d0
  4114a8:	bl	4025b0 <sprintf@plt>
  4114ac:	ldr	x1, [x21, #8]
  4114b0:	add	x1, x1, #0xcc
  4114b4:	mov	x0, x21
  4114b8:	bl	40f9f8 <nftw@plt+0xce78>
  4114bc:	b	410a0c <nftw@plt+0xde8c>
  4114c0:	add	w4, w3, #0x8
  4114c4:	str	w4, [x2, #24]
  4114c8:	cmp	w4, #0x0
  4114cc:	b.le	4114e0 <nftw@plt+0xe960>
  4114d0:	add	x3, x1, #0xf
  4114d4:	and	x3, x3, #0xfffffffffffffff8
  4114d8:	str	x3, [x2]
  4114dc:	b	41149c <nftw@plt+0xe91c>
  4114e0:	ldr	x1, [x2, #8]
  4114e4:	add	x1, x1, w3, sxtw
  4114e8:	b	41149c <nftw@plt+0xe91c>
  4114ec:	ldrb	w1, [x20, #1]
  4114f0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4114f4:	add	x0, x0, #0xe68
  4114f8:	ldrh	w0, [x0, w1, sxtw #1]
  4114fc:	tbnz	w0, #2, 411594 <nftw@plt+0xea14>
  411500:	cmp	w1, #0x2a
  411504:	b.ne	4115d0 <nftw@plt+0xea50>  // b.any
  411508:	ldrb	w0, [x20, #2]
  41150c:	cmp	w0, #0x73
  411510:	b.ne	4115e8 <nftw@plt+0xea68>  // b.any
  411514:	ldr	x0, [sp, #120]
  411518:	ldr	x0, [x0, #8]
  41151c:	ldr	w2, [x0, #24]
  411520:	ldr	x1, [x0]
  411524:	tbnz	w2, #31, 411600 <nftw@plt+0xea80>
  411528:	add	x2, x1, #0xb
  41152c:	and	x2, x2, #0xfffffffffffffff8
  411530:	str	x2, [x0]
  411534:	ldr	w1, [x1]
  411538:	add	w24, w24, #0x1
  41153c:	add	x0, sp, #0xc0
  411540:	ldr	x0, [x0, w24, uxtw #3]
  411544:	cmp	x0, x26
  411548:	b.ne	41162c <nftw@plt+0xeaac>  // b.any
  41154c:	ldr	x0, [sp, #120]
  411550:	ldr	x0, [x0, #8]
  411554:	ldr	w3, [x0, #24]
  411558:	ldr	x2, [x0]
  41155c:	tbnz	w3, #31, 411644 <nftw@plt+0xeac4>
  411560:	add	x3, x2, #0xf
  411564:	and	x3, x3, #0xfffffffffffffff8
  411568:	str	x3, [x0]
  41156c:	ldr	x20, [x2]
  411570:	tbnz	w1, #31, 411670 <nftw@plt+0xeaf0>
  411574:	sxtw	x1, w1
  411578:	mov	x0, x20
  41157c:	bl	402540 <strnlen@plt>
  411580:	add	x2, x20, x0
  411584:	mov	x1, x20
  411588:	mov	x0, x21
  41158c:	bl	40f620 <nftw@plt+0xcaa0>
  411590:	b	410a0c <nftw@plt+0xde8c>
  411594:	mov	w2, #0xa                   	// #10
  411598:	add	x1, sp, #0xb8
  41159c:	add	x0, x20, #0x1
  4115a0:	bl	4024e0 <strtoul@plt>
  4115a4:	mov	w1, w0
  4115a8:	ldr	x0, [sp, #184]
  4115ac:	ldrb	w0, [x0]
  4115b0:	cmp	w0, #0x73
  4115b4:	b.eq	41154c <nftw@plt+0xe9cc>  // b.none
  4115b8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4115bc:	add	x2, x2, #0x158
  4115c0:	mov	w1, #0x54b                 	// #1355
  4115c4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4115c8:	add	x0, x0, #0xe0
  4115cc:	bl	408d8c <nftw@plt+0x620c>
  4115d0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4115d4:	add	x2, x2, #0x158
  4115d8:	mov	w1, #0x54f                 	// #1359
  4115dc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4115e0:	add	x0, x0, #0xe0
  4115e4:	bl	408d8c <nftw@plt+0x620c>
  4115e8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4115ec:	add	x2, x2, #0x158
  4115f0:	mov	w1, #0x551                 	// #1361
  4115f4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4115f8:	add	x0, x0, #0xe0
  4115fc:	bl	408d8c <nftw@plt+0x620c>
  411600:	add	w3, w2, #0x8
  411604:	str	w3, [x0, #24]
  411608:	cmp	w3, #0x0
  41160c:	b.le	411620 <nftw@plt+0xeaa0>
  411610:	add	x2, x1, #0xb
  411614:	and	x2, x2, #0xfffffffffffffff8
  411618:	str	x2, [x0]
  41161c:	b	411534 <nftw@plt+0xe9b4>
  411620:	ldr	x1, [x0, #8]
  411624:	add	x1, x1, w2, sxtw
  411628:	b	411534 <nftw@plt+0xe9b4>
  41162c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411630:	add	x2, x2, #0x158
  411634:	mov	w1, #0x555                 	// #1365
  411638:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41163c:	add	x0, x0, #0xe0
  411640:	bl	408d8c <nftw@plt+0x620c>
  411644:	add	w4, w3, #0x8
  411648:	str	w4, [x0, #24]
  41164c:	cmp	w4, #0x0
  411650:	b.le	411664 <nftw@plt+0xeae4>
  411654:	add	x3, x2, #0xf
  411658:	and	x3, x3, #0xfffffffffffffff8
  41165c:	str	x3, [x0]
  411660:	b	41156c <nftw@plt+0xe9ec>
  411664:	ldr	x2, [x0, #8]
  411668:	add	x2, x2, w3, sxtw
  41166c:	b	41156c <nftw@plt+0xe9ec>
  411670:	mov	x0, x20
  411674:	bl	4024f0 <strlen@plt>
  411678:	b	411580 <nftw@plt+0xea00>
  41167c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411680:	add	x2, x2, #0x158
  411684:	mov	w1, #0x56d                 	// #1389
  411688:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41168c:	add	x0, x0, #0xe0
  411690:	bl	408d8c <nftw@plt+0x620c>
  411694:	ldrb	w1, [x21, #67]
  411698:	mov	x0, x21
  41169c:	bl	40fc38 <nftw@plt+0xd0b8>
  4116a0:	b	410a14 <nftw@plt+0xde94>
  4116a4:	mov	x1, #0x1                   	// #1
  4116a8:	mov	x0, x25
  4116ac:	bl	44a42c <_obstack_newchunk@@Base>
  4116b0:	b	410a24 <nftw@plt+0xdea4>
  4116b4:	mov	x2, x0
  4116b8:	ldrb	w0, [x0, #80]
  4116bc:	orr	w0, w0, #0x2
  4116c0:	strb	w0, [x2, #80]
  4116c4:	b	410a50 <nftw@plt+0xded0>
  4116c8:	ldr	x0, [x21, #56]
  4116cc:	cbz	x0, 4116e0 <nftw@plt+0xeb60>
  4116d0:	ldr	x1, [x0]
  4116d4:	ldr	x2, [x1, #16]
  4116d8:	mov	x1, x21
  4116dc:	blr	x2
  4116e0:	str	x19, [x19, #176]
  4116e4:	str	wzr, [x19, #200]
  4116e8:	ldr	w0, [sp, #128]
  4116ec:	str	w0, [x21, #36]
  4116f0:	ldr	w0, [sp, #136]
  4116f4:	str	w0, [x21, #40]
  4116f8:	strb	wzr, [x21, #64]
  4116fc:	str	wzr, [x21, #32]
  411700:	ldp	x19, x20, [sp, #32]
  411704:	ldp	x21, x22, [sp, #48]
  411708:	ldp	x23, x24, [sp, #64]
  41170c:	ldp	x25, x26, [sp, #80]
  411710:	ldp	x27, x28, [sp, #96]
  411714:	ldp	x29, x30, [sp, #16]
  411718:	add	sp, sp, #0x1b0
  41171c:	ret
  411720:	ldr	x0, [x19, #112]
  411724:	ldr	x1, [x19, #120]
  411728:	cmp	x1, x0
  41172c:	b.eq	410664 <nftw@plt+0xdae4>  // b.none
  411730:	add	x1, x0, #0x1
  411734:	str	x1, [x19, #112]
  411738:	strb	wzr, [x0]
  41173c:	mov	w26, #0x0                   	// #0
  411740:	b	4105dc <nftw@plt+0xda5c>
  411744:	stp	x29, x30, [sp, #-48]!
  411748:	mov	x29, sp
  41174c:	stp	x19, x20, [sp, #16]
  411750:	str	x21, [sp, #32]
  411754:	mov	x19, x0
  411758:	ldr	w21, [x0, #36]
  41175c:	ldr	w20, [x0, #40]
  411760:	str	wzr, [x0, #40]
  411764:	mov	w2, #0x1                   	// #1
  411768:	str	w2, [x0, #36]
  41176c:	bl	40fc78 <nftw@plt+0xd0f8>
  411770:	mov	x0, x19
  411774:	bl	40fa4c <nftw@plt+0xcecc>
  411778:	str	w21, [x19, #36]
  41177c:	str	w20, [x19, #40]
  411780:	ldp	x19, x20, [sp, #16]
  411784:	ldr	x21, [sp, #32]
  411788:	ldp	x29, x30, [sp], #48
  41178c:	ret
  411790:	stp	x29, x30, [sp, #-288]!
  411794:	mov	x29, sp
  411798:	stp	x19, x20, [sp, #16]
  41179c:	mov	x19, x0
  4117a0:	mov	x20, x1
  4117a4:	str	x2, [sp, #240]
  4117a8:	str	x3, [sp, #248]
  4117ac:	str	x4, [sp, #256]
  4117b0:	str	x5, [sp, #264]
  4117b4:	str	x6, [sp, #272]
  4117b8:	str	x7, [sp, #280]
  4117bc:	str	q0, [sp, #112]
  4117c0:	str	q1, [sp, #128]
  4117c4:	str	q2, [sp, #144]
  4117c8:	str	q3, [sp, #160]
  4117cc:	str	q4, [sp, #176]
  4117d0:	str	q5, [sp, #192]
  4117d4:	str	q6, [sp, #208]
  4117d8:	str	q7, [sp, #224]
  4117dc:	add	x0, sp, #0x120
  4117e0:	str	x0, [sp, #40]
  4117e4:	str	x0, [sp, #48]
  4117e8:	add	x0, sp, #0xf0
  4117ec:	str	x0, [sp, #56]
  4117f0:	mov	w0, #0xffffffd0            	// #-48
  4117f4:	str	w0, [sp, #64]
  4117f8:	mov	w0, #0xffffff80            	// #-128
  4117fc:	str	w0, [sp, #68]
  411800:	bl	402aa0 <__errno_location@plt>
  411804:	ldr	w0, [x0]
  411808:	str	w0, [sp, #88]
  41180c:	add	x0, sp, #0x28
  411810:	str	x0, [sp, #80]
  411814:	str	x20, [sp, #72]
  411818:	add	x1, sp, #0x48
  41181c:	mov	x0, x19
  411820:	bl	411744 <nftw@plt+0xebc4>
  411824:	ldp	x19, x20, [sp, #16]
  411828:	ldp	x29, x30, [sp], #288
  41182c:	ret
  411830:	stp	x29, x30, [sp, #-288]!
  411834:	mov	x29, sp
  411838:	stp	x19, x20, [sp, #16]
  41183c:	mov	x19, x0
  411840:	mov	x20, x1
  411844:	str	x2, [sp, #240]
  411848:	str	x3, [sp, #248]
  41184c:	str	x4, [sp, #256]
  411850:	str	x5, [sp, #264]
  411854:	str	x6, [sp, #272]
  411858:	str	x7, [sp, #280]
  41185c:	str	q0, [sp, #112]
  411860:	str	q1, [sp, #128]
  411864:	str	q2, [sp, #144]
  411868:	str	q3, [sp, #160]
  41186c:	str	q4, [sp, #176]
  411870:	str	q5, [sp, #192]
  411874:	str	q6, [sp, #208]
  411878:	str	q7, [sp, #224]
  41187c:	add	x0, sp, #0x120
  411880:	str	x0, [sp, #40]
  411884:	str	x0, [sp, #48]
  411888:	add	x0, sp, #0xf0
  41188c:	str	x0, [sp, #56]
  411890:	mov	w0, #0xffffffd0            	// #-48
  411894:	str	w0, [sp, #64]
  411898:	mov	w0, #0xffffff80            	// #-128
  41189c:	str	w0, [sp, #68]
  4118a0:	bl	402aa0 <__errno_location@plt>
  4118a4:	ldr	w0, [x0]
  4118a8:	str	w0, [sp, #88]
  4118ac:	add	x0, sp, #0x28
  4118b0:	str	x0, [sp, #80]
  4118b4:	str	x20, [sp, #72]
  4118b8:	add	x1, sp, #0x48
  4118bc:	mov	x0, x19
  4118c0:	bl	40fc78 <nftw@plt+0xd0f8>
  4118c4:	mov	x0, x19
  4118c8:	bl	40fa4c <nftw@plt+0xcecc>
  4118cc:	ldp	x19, x20, [sp, #16]
  4118d0:	ldp	x29, x30, [sp], #288
  4118d4:	ret
  4118d8:	stp	x29, x30, [sp, #-112]!
  4118dc:	mov	x29, sp
  4118e0:	stp	x21, x22, [sp, #32]
  4118e4:	stp	x23, x24, [sp, #48]
  4118e8:	mov	x22, x0
  4118ec:	bl	4024f0 <strlen@plt>
  4118f0:	cbz	x0, 411bc0 <nftw@plt+0xf040>
  4118f4:	stp	x19, x20, [sp, #16]
  4118f8:	mov	x20, x0
  4118fc:	mov	x19, #0x0                   	// #0
  411900:	mov	w21, #0x1                   	// #1
  411904:	mov	w23, #0x0                   	// #0
  411908:	add	x2, sp, #0x68
  41190c:	sub	x1, x20, x19
  411910:	add	x0, x22, x19
  411914:	bl	40ec50 <nftw@plt+0xc0d0>
  411918:	sxtw	x2, w0
  41191c:	cbz	w0, 411a1c <nftw@plt+0xee9c>
  411920:	ldr	w1, [sp, #104]
  411924:	cmp	w1, #0x1f
  411928:	b.ls	411a1c <nftw@plt+0xee9c>  // b.plast
  41192c:	sub	w1, w1, #0x7f
  411930:	cmp	w1, #0x20
  411934:	b.ls	411a1c <nftw@plt+0xee9c>  // b.plast
  411938:	cmp	x2, #0x2
  41193c:	csel	w21, w21, w23, cc  // cc = lo, ul, last
  411940:	add	x19, x19, x2
  411944:	cmp	x20, x19
  411948:	b.hi	411908 <nftw@plt+0xed88>  // b.pmore
  41194c:	mov	x23, x22
  411950:	cbnz	w21, 411a4c <nftw@plt+0xeecc>
  411954:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  411958:	ldrb	w0, [x0, #2224]
  41195c:	cbnz	w0, 411bc8 <nftw@plt+0xf048>
  411960:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  411964:	ldr	x0, [x0, #2216]
  411968:	cbz	x0, 411b2c <nftw@plt+0xefac>
  41196c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411970:	add	x1, x1, #0x1e0
  411974:	bl	4029a0 <iconv_open@plt>
  411978:	mov	x19, x0
  41197c:	cmn	x0, #0x1
  411980:	b.eq	411b60 <nftw@plt+0xefe0>  // b.none
  411984:	lsl	x21, x20, #2
  411988:	add	x21, x21, #0x1
  41198c:	adrp	x24, 48d000 <_obstack_memory_used@@Base+0x429fc>
  411990:	str	x22, [sp, #80]
  411994:	str	x20, [sp, #96]
  411998:	sub	x0, x21, #0x1
  41199c:	str	x0, [sp, #104]
  4119a0:	ldr	x1, [x24, #1288]
  4119a4:	mov	x0, x21
  4119a8:	blr	x1
  4119ac:	mov	x23, x0
  4119b0:	str	x0, [sp, #88]
  4119b4:	mov	x4, #0x0                   	// #0
  4119b8:	mov	x3, #0x0                   	// #0
  4119bc:	mov	x2, #0x0                   	// #0
  4119c0:	mov	x1, #0x0                   	// #0
  4119c4:	mov	x0, x19
  4119c8:	bl	4028a0 <iconv@plt>
  4119cc:	cmn	x0, #0x1
  4119d0:	b.eq	411a0c <nftw@plt+0xee8c>  // b.none
  4119d4:	add	x4, sp, #0x68
  4119d8:	add	x3, sp, #0x58
  4119dc:	add	x2, sp, #0x60
  4119e0:	add	x1, sp, #0x50
  4119e4:	mov	x0, x19
  4119e8:	bl	4028a0 <iconv@plt>
  4119ec:	cmn	x0, #0x1
  4119f0:	b.eq	4119fc <nftw@plt+0xee7c>  // b.none
  4119f4:	ldr	x1, [sp, #96]
  4119f8:	cbz	x1, 411ac8 <nftw@plt+0xef48>
  4119fc:	bl	402aa0 <__errno_location@plt>
  411a00:	ldr	w0, [x0]
  411a04:	cmp	w0, #0x7
  411a08:	b.eq	411ab0 <nftw@plt+0xef30>  // b.none
  411a0c:	str	x25, [sp, #64]
  411a10:	mov	x0, x19
  411a14:	bl	402560 <iconv_close@plt>
  411a18:	b	411b30 <nftw@plt+0xefb0>
  411a1c:	lsl	x0, x20, #2
  411a20:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  411a24:	ldr	x1, [x1, #1288]
  411a28:	add	x0, x0, #0x1
  411a2c:	blr	x1
  411a30:	mov	x23, x0
  411a34:	mov	x21, x22
  411a38:	add	x20, x22, x20
  411a3c:	mov	x19, x0
  411a40:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411a44:	add	x22, x22, #0x1d8
  411a48:	b	411a70 <nftw@plt+0xeef0>
  411a4c:	ldp	x19, x20, [sp, #16]
  411a50:	b	411a9c <nftw@plt+0xef1c>
  411a54:	mov	x1, x22
  411a58:	mov	x0, x19
  411a5c:	bl	4025b0 <sprintf@plt>
  411a60:	add	x19, x19, #0x4
  411a64:	add	x21, x21, #0x1
  411a68:	cmp	x20, x21
  411a6c:	b.eq	411a94 <nftw@plt+0xef14>  // b.none
  411a70:	ldrb	w2, [x21]
  411a74:	sub	w1, w2, #0x20
  411a78:	and	w1, w1, #0xff
  411a7c:	cmp	w1, #0x5e
  411a80:	b.hi	411a54 <nftw@plt+0xeed4>  // b.pmore
  411a84:	mov	x0, x19
  411a88:	strb	w2, [x0], #1
  411a8c:	mov	x19, x0
  411a90:	b	411a64 <nftw@plt+0xeee4>
  411a94:	strb	wzr, [x19]
  411a98:	ldp	x19, x20, [sp, #16]
  411a9c:	mov	x0, x23
  411aa0:	ldp	x21, x22, [sp, #32]
  411aa4:	ldp	x23, x24, [sp, #48]
  411aa8:	ldp	x29, x30, [sp], #112
  411aac:	ret
  411ab0:	lsl	x21, x21, #1
  411ab4:	add	x0, x24, #0x508
  411ab8:	ldr	x1, [x0, #8]
  411abc:	mov	x0, x23
  411ac0:	blr	x1
  411ac4:	b	411990 <nftw@plt+0xee10>
  411ac8:	cbnz	x0, 411a0c <nftw@plt+0xee8c>
  411acc:	add	x4, sp, #0x68
  411ad0:	add	x3, sp, #0x58
  411ad4:	mov	x2, #0x0                   	// #0
  411ad8:	mov	x1, #0x0                   	// #0
  411adc:	mov	x0, x19
  411ae0:	bl	4028a0 <iconv@plt>
  411ae4:	cmn	x0, #0x1
  411ae8:	b.ne	411b14 <nftw@plt+0xef94>  // b.any
  411aec:	bl	402aa0 <__errno_location@plt>
  411af0:	ldr	w0, [x0]
  411af4:	cmp	w0, #0x7
  411af8:	b.ne	411a0c <nftw@plt+0xee8c>  // b.any
  411afc:	lsl	x21, x21, #1
  411b00:	add	x0, x24, #0x508
  411b04:	ldr	x1, [x0, #8]
  411b08:	mov	x0, x23
  411b0c:	blr	x1
  411b10:	b	411990 <nftw@plt+0xee10>
  411b14:	ldr	x0, [sp, #88]
  411b18:	strb	wzr, [x0]
  411b1c:	mov	x0, x19
  411b20:	bl	402560 <iconv_close@plt>
  411b24:	ldp	x19, x20, [sp, #16]
  411b28:	b	411a9c <nftw@plt+0xef1c>
  411b2c:	str	x25, [sp, #64]
  411b30:	add	x0, x20, x20, lsl #2
  411b34:	lsl	x0, x0, #1
  411b38:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  411b3c:	ldr	x1, [x1, #1288]
  411b40:	add	x0, x0, #0x1
  411b44:	blr	x1
  411b48:	mov	x23, x0
  411b4c:	mov	x21, x0
  411b50:	mov	x19, #0x0                   	// #0
  411b54:	adrp	x25, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411b58:	add	x25, x25, #0x1e8
  411b5c:	b	411b88 <nftw@plt+0xf008>
  411b60:	str	x25, [sp, #64]
  411b64:	b	411b30 <nftw@plt+0xefb0>
  411b68:	ldr	w2, [sp, #104]
  411b6c:	mov	x1, x25
  411b70:	mov	x0, x21
  411b74:	bl	4025b0 <sprintf@plt>
  411b78:	add	x21, x21, #0xa
  411b7c:	add	x19, x19, x24
  411b80:	cmp	x20, x19
  411b84:	b.ls	411bb0 <nftw@plt+0xf030>  // b.plast
  411b88:	add	x2, sp, #0x68
  411b8c:	sub	x1, x20, x19
  411b90:	add	x0, x22, x19
  411b94:	bl	40ec50 <nftw@plt+0xc0d0>
  411b98:	sxtw	x24, w0
  411b9c:	cmp	w0, #0x1
  411ba0:	b.ne	411b68 <nftw@plt+0xefe8>  // b.any
  411ba4:	ldrb	w0, [x22, x19]
  411ba8:	strb	w0, [x21], #1
  411bac:	b	411b7c <nftw@plt+0xeffc>
  411bb0:	strb	wzr, [x21]
  411bb4:	ldp	x19, x20, [sp, #16]
  411bb8:	ldr	x25, [sp, #64]
  411bbc:	b	411a9c <nftw@plt+0xef1c>
  411bc0:	mov	x23, x22
  411bc4:	b	411a9c <nftw@plt+0xef1c>
  411bc8:	ldp	x19, x20, [sp, #16]
  411bcc:	b	411a9c <nftw@plt+0xef1c>
  411bd0:	stp	x29, x30, [sp, #-64]!
  411bd4:	mov	x29, sp
  411bd8:	stp	x19, x20, [sp, #16]
  411bdc:	mov	x19, x0
  411be0:	mov	x20, x1
  411be4:	ldr	x0, [x1, #8]
  411be8:	cbnz	x0, 411c20 <nftw@plt+0xf0a0>
  411bec:	ldr	x0, [x19, #8]
  411bf0:	ldr	x2, [x1]
  411bf4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411bf8:	add	x1, x1, #0x1f0
  411bfc:	add	x0, x0, #0xcc
  411c00:	bl	4025b0 <sprintf@plt>
  411c04:	ldr	x1, [x19, #8]
  411c08:	add	x1, x1, #0xcc
  411c0c:	mov	x0, x19
  411c10:	bl	40f9f8 <nftw@plt+0xce78>
  411c14:	ldp	x19, x20, [sp, #16]
  411c18:	ldp	x29, x30, [sp], #64
  411c1c:	ret
  411c20:	stp	x21, x22, [sp, #32]
  411c24:	str	x23, [sp, #48]
  411c28:	mov	w1, #0x5b                  	// #91
  411c2c:	mov	x0, x19
  411c30:	bl	40f400 <nftw@plt+0xc880>
  411c34:	mov	x21, #0x0                   	// #0
  411c38:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411c3c:	add	x22, x22, #0x1f0
  411c40:	mov	w23, #0x2c                  	// #44
  411c44:	b	411ca0 <nftw@plt+0xf120>
  411c48:	mov	w1, w23
  411c4c:	mov	x0, x19
  411c50:	bl	40f400 <nftw@plt+0xc880>
  411c54:	ldr	x0, [x19, #8]
  411c58:	ldr	x2, [x20, x21, lsl #3]
  411c5c:	mov	x1, x22
  411c60:	add	x0, x0, #0xcc
  411c64:	bl	4025b0 <sprintf@plt>
  411c68:	ldr	x1, [x19, #8]
  411c6c:	add	x1, x1, #0xcc
  411c70:	mov	x0, x19
  411c74:	bl	40f9f8 <nftw@plt+0xce78>
  411c78:	add	w0, w21, #0x1
  411c7c:	cmp	w0, #0x1
  411c80:	b.ls	411c9c <nftw@plt+0xf11c>  // b.plast
  411c84:	mov	w1, #0x5d                  	// #93
  411c88:	mov	x0, x19
  411c8c:	bl	40f400 <nftw@plt+0xc880>
  411c90:	ldp	x21, x22, [sp, #32]
  411c94:	ldr	x23, [sp, #48]
  411c98:	b	411c14 <nftw@plt+0xf094>
  411c9c:	add	x21, x21, #0x1
  411ca0:	cbnz	w21, 411c48 <nftw@plt+0xf0c8>
  411ca4:	ldr	x0, [x19, #8]
  411ca8:	ldr	x2, [x20, x21, lsl #3]
  411cac:	mov	x1, x22
  411cb0:	add	x0, x0, #0xcc
  411cb4:	bl	4025b0 <sprintf@plt>
  411cb8:	ldr	x1, [x19, #8]
  411cbc:	add	x1, x1, #0xcc
  411cc0:	mov	x0, x19
  411cc4:	bl	40f9f8 <nftw@plt+0xce78>
  411cc8:	b	411c9c <nftw@plt+0xf11c>
  411ccc:	stp	x29, x30, [sp, #-64]!
  411cd0:	mov	x29, sp
  411cd4:	stp	x19, x20, [sp, #16]
  411cd8:	mov	x19, x0
  411cdc:	mov	x20, x1
  411ce0:	ldrh	w0, [x1, #2]
  411ce4:	cbnz	w0, 411d1c <nftw@plt+0xf19c>
  411ce8:	ldr	x0, [x19, #8]
  411cec:	ldrh	w2, [x1]
  411cf0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411cf4:	add	x1, x1, #0x1f0
  411cf8:	add	x0, x0, #0xcc
  411cfc:	bl	4025b0 <sprintf@plt>
  411d00:	ldr	x1, [x19, #8]
  411d04:	add	x1, x1, #0xcc
  411d08:	mov	x0, x19
  411d0c:	bl	40f9f8 <nftw@plt+0xce78>
  411d10:	ldp	x19, x20, [sp, #16]
  411d14:	ldp	x29, x30, [sp], #64
  411d18:	ret
  411d1c:	stp	x21, x22, [sp, #32]
  411d20:	str	x23, [sp, #48]
  411d24:	mov	w1, #0x5b                  	// #91
  411d28:	mov	x0, x19
  411d2c:	bl	40f400 <nftw@plt+0xc880>
  411d30:	mov	x21, #0x0                   	// #0
  411d34:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411d38:	add	x22, x22, #0x1f0
  411d3c:	mov	w23, #0x2c                  	// #44
  411d40:	b	411d9c <nftw@plt+0xf21c>
  411d44:	mov	w1, w23
  411d48:	mov	x0, x19
  411d4c:	bl	40f400 <nftw@plt+0xc880>
  411d50:	ldr	x0, [x19, #8]
  411d54:	ldrh	w2, [x20, x21, lsl #1]
  411d58:	mov	x1, x22
  411d5c:	add	x0, x0, #0xcc
  411d60:	bl	4025b0 <sprintf@plt>
  411d64:	ldr	x1, [x19, #8]
  411d68:	add	x1, x1, #0xcc
  411d6c:	mov	x0, x19
  411d70:	bl	40f9f8 <nftw@plt+0xce78>
  411d74:	add	w0, w21, #0x1
  411d78:	cmp	w0, #0x1
  411d7c:	b.ls	411d98 <nftw@plt+0xf218>  // b.plast
  411d80:	mov	w1, #0x5d                  	// #93
  411d84:	mov	x0, x19
  411d88:	bl	40f400 <nftw@plt+0xc880>
  411d8c:	ldp	x21, x22, [sp, #32]
  411d90:	ldr	x23, [sp, #48]
  411d94:	b	411d10 <nftw@plt+0xf190>
  411d98:	add	x21, x21, #0x1
  411d9c:	cbnz	w21, 411d44 <nftw@plt+0xf1c4>
  411da0:	ldr	x0, [x19, #8]
  411da4:	ldrh	w2, [x20, x21, lsl #1]
  411da8:	mov	x1, x22
  411dac:	add	x0, x0, #0xcc
  411db0:	bl	4025b0 <sprintf@plt>
  411db4:	ldr	x1, [x19, #8]
  411db8:	add	x1, x1, #0xcc
  411dbc:	mov	x0, x19
  411dc0:	bl	40f9f8 <nftw@plt+0xce78>
  411dc4:	b	411d98 <nftw@plt+0xf218>
  411dc8:	stp	x29, x30, [sp, #-64]!
  411dcc:	mov	x29, sp
  411dd0:	stp	x19, x20, [sp, #16]
  411dd4:	mov	x19, x0
  411dd8:	mov	x20, x1
  411ddc:	ldr	x0, [x1, #8]
  411de0:	cbnz	x0, 411e18 <nftw@plt+0xf298>
  411de4:	ldr	x0, [x19, #8]
  411de8:	ldr	x2, [x1]
  411dec:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411df0:	add	x1, x1, #0x1f0
  411df4:	add	x0, x0, #0xcc
  411df8:	bl	4025b0 <sprintf@plt>
  411dfc:	ldr	x1, [x19, #8]
  411e00:	add	x1, x1, #0xcc
  411e04:	mov	x0, x19
  411e08:	bl	40f9f8 <nftw@plt+0xce78>
  411e0c:	ldp	x19, x20, [sp, #16]
  411e10:	ldp	x29, x30, [sp], #64
  411e14:	ret
  411e18:	stp	x21, x22, [sp, #32]
  411e1c:	str	x23, [sp, #48]
  411e20:	mov	w1, #0x5b                  	// #91
  411e24:	mov	x0, x19
  411e28:	bl	40f400 <nftw@plt+0xc880>
  411e2c:	mov	x21, #0x0                   	// #0
  411e30:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411e34:	add	x22, x22, #0x1f0
  411e38:	mov	w23, #0x2c                  	// #44
  411e3c:	b	411e98 <nftw@plt+0xf318>
  411e40:	mov	w1, w23
  411e44:	mov	x0, x19
  411e48:	bl	40f400 <nftw@plt+0xc880>
  411e4c:	ldr	x0, [x19, #8]
  411e50:	ldr	x2, [x20, x21, lsl #3]
  411e54:	mov	x1, x22
  411e58:	add	x0, x0, #0xcc
  411e5c:	bl	4025b0 <sprintf@plt>
  411e60:	ldr	x1, [x19, #8]
  411e64:	add	x1, x1, #0xcc
  411e68:	mov	x0, x19
  411e6c:	bl	40f9f8 <nftw@plt+0xce78>
  411e70:	add	w0, w21, #0x1
  411e74:	cmp	w0, #0x1
  411e78:	b.ls	411e94 <nftw@plt+0xf314>  // b.plast
  411e7c:	mov	w1, #0x5d                  	// #93
  411e80:	mov	x0, x19
  411e84:	bl	40f400 <nftw@plt+0xc880>
  411e88:	ldp	x21, x22, [sp, #32]
  411e8c:	ldr	x23, [sp, #48]
  411e90:	b	411e0c <nftw@plt+0xf28c>
  411e94:	add	x21, x21, #0x1
  411e98:	cbnz	w21, 411e40 <nftw@plt+0xf2c0>
  411e9c:	ldr	x0, [x19, #8]
  411ea0:	ldr	x2, [x20, x21, lsl #3]
  411ea4:	mov	x1, x22
  411ea8:	add	x0, x0, #0xcc
  411eac:	bl	4025b0 <sprintf@plt>
  411eb0:	ldr	x1, [x19, #8]
  411eb4:	add	x1, x1, #0xcc
  411eb8:	mov	x0, x19
  411ebc:	bl	40f9f8 <nftw@plt+0xce78>
  411ec0:	b	411e94 <nftw@plt+0xf314>
  411ec4:	stp	x29, x30, [sp, #-32]!
  411ec8:	mov	x29, sp
  411ecc:	str	x19, [sp, #16]
  411ed0:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x109fc>
  411ed4:	add	x19, x19, #0x780
  411ed8:	mov	x1, x19
  411edc:	mov	w0, #0x0                   	// #0
  411ee0:	bl	402b60 <setlocale@plt>
  411ee4:	mov	x1, x19
  411ee8:	mov	w0, #0x5                   	// #5
  411eec:	bl	402b60 <setlocale@plt>
  411ef0:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411ef4:	add	x19, x19, #0x230
  411ef8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411efc:	add	x1, x1, #0x218
  411f00:	mov	x0, x19
  411f04:	bl	4026b0 <bindtextdomain@plt>
  411f08:	mov	x0, x19
  411f0c:	bl	402870 <textdomain@plt>
  411f10:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411f14:	add	x0, x0, #0x238
  411f18:	bl	402b10 <gettext@plt>
  411f1c:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  411f20:	add	x19, x1, #0x518
  411f24:	str	x0, [x1, #1304]
  411f28:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  411f2c:	add	x0, x0, #0x8d0
  411f30:	bl	402b10 <gettext@plt>
  411f34:	str	x0, [x19, #8]
  411f38:	mov	w0, #0xe                   	// #14
  411f3c:	bl	402640 <nl_langinfo@plt>
  411f40:	mov	x19, x0
  411f44:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  411f48:	str	x19, [x0, #2216]
  411f4c:	cbz	x19, 411f84 <nftw@plt+0xf404>
  411f50:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411f54:	add	x1, x1, #0x240
  411f58:	mov	x0, x19
  411f5c:	bl	402720 <strcasecmp@plt>
  411f60:	cbz	w0, 411f78 <nftw@plt+0xf3f8>
  411f64:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411f68:	add	x1, x1, #0x248
  411f6c:	mov	x0, x19
  411f70:	bl	402720 <strcasecmp@plt>
  411f74:	cbnz	w0, 411f84 <nftw@plt+0xf404>
  411f78:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  411f7c:	mov	w1, #0x1                   	// #1
  411f80:	strb	w1, [x0, #2224]
  411f84:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411f88:	add	x1, x1, #0x238
  411f8c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  411f90:	ldr	x0, [x0, #1304]
  411f94:	bl	402890 <strcmp@plt>
  411f98:	cbnz	w0, 411fec <nftw@plt+0xf46c>
  411f9c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  411fa0:	add	x1, x1, #0x8d0
  411fa4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  411fa8:	ldr	x0, [x0, #1312]
  411fac:	bl	402890 <strcmp@plt>
  411fb0:	cbnz	w0, 411fec <nftw@plt+0xf46c>
  411fb4:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  411fb8:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  411fbc:	add	x0, x0, #0x8d0
  411fc0:	str	x0, [x1, #1304]
  411fc4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  411fc8:	ldrb	w0, [x0, #2224]
  411fcc:	cbz	w0, 411fec <nftw@plt+0xf46c>
  411fd0:	add	x2, x1, #0x518
  411fd4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411fd8:	add	x0, x0, #0x250
  411fdc:	str	x0, [x1, #1304]
  411fe0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  411fe4:	add	x0, x0, #0x258
  411fe8:	str	x0, [x2, #8]
  411fec:	ldr	x19, [sp, #16]
  411ff0:	ldp	x29, x30, [sp], #32
  411ff4:	ret
  411ff8:	stp	x29, x30, [sp, #-48]!
  411ffc:	mov	x29, sp
  412000:	stp	x19, x20, [sp, #16]
  412004:	str	x21, [sp, #32]
  412008:	mov	x20, x0
  41200c:	mov	x2, #0x0                   	// #0
  412010:	mov	x1, x0
  412014:	mov	x0, #0x0                   	// #0
  412018:	bl	402510 <mbstowcs@plt>
  41201c:	mov	x19, x0
  412020:	add	x2, x0, #0x1
  412024:	lsl	x1, x2, #2
  412028:	add	x1, x1, #0xf
  41202c:	and	x1, x1, #0xfffffffffffffff0
  412030:	sub	sp, sp, x1
  412034:	mov	x21, sp
  412038:	mov	x1, x20
  41203c:	mov	x0, x21
  412040:	bl	402510 <mbstowcs@plt>
  412044:	mov	x1, x19
  412048:	mov	x0, x21
  41204c:	bl	402690 <wcswidth@plt>
  412050:	sxtw	x0, w0
  412054:	mov	sp, x29
  412058:	ldp	x19, x20, [sp, #16]
  41205c:	ldr	x21, [sp, #32]
  412060:	ldp	x29, x30, [sp], #48
  412064:	ret
  412068:	stp	x29, x30, [sp, #-32]!
  41206c:	mov	x29, sp
  412070:	stp	x19, x20, [sp, #16]
  412074:	bl	411ff8 <nftw@plt+0xf478>
  412078:	mov	x19, x0
  41207c:	add	x0, x0, #0x1
  412080:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  412084:	mov	x20, x0
  412088:	mov	x2, x19
  41208c:	mov	w1, #0x20                  	// #32
  412090:	bl	4026f0 <memset@plt>
  412094:	strb	wzr, [x20, x19]
  412098:	mov	x0, x20
  41209c:	ldp	x19, x20, [sp, #16]
  4120a0:	ldp	x29, x30, [sp], #32
  4120a4:	ret
  4120a8:	cmp	w0, w1
  4120ac:	b.cs	4120d8 <nftw@plt+0xf558>  // b.hs, b.nlast
  4120b0:	mov	w2, #0x4                   	// #4
  4120b4:	cbz	w0, 4120cc <nftw@plt+0xf54c>
  4120b8:	lsl	w3, w0, #1
  4120bc:	add	w2, w0, w0, lsl #1
  4120c0:	lsr	w2, w2, #1
  4120c4:	cmp	w0, #0xf
  4120c8:	csel	w2, w2, w3, hi  // hi = pmore
  4120cc:	cmp	w2, w1
  4120d0:	csel	w0, w2, w1, cs  // cs = hs, nlast
  4120d4:	ret
  4120d8:	stp	x29, x30, [sp, #-16]!
  4120dc:	mov	x29, sp
  4120e0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4120e4:	add	x2, x2, #0x2b8
  4120e8:	mov	w1, #0xa2                  	// #162
  4120ec:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4120f0:	add	x0, x0, #0x2d0
  4120f4:	bl	408d8c <nftw@plt+0x620c>
  4120f8:	stp	x29, x30, [sp, #-144]!
  4120fc:	mov	x29, sp
  412100:	stp	x19, x20, [sp, #16]
  412104:	stp	x21, x22, [sp, #32]
  412108:	stp	x23, x24, [sp, #48]
  41210c:	mov	x19, x1
  412110:	mov	x20, x2
  412114:	mov	x21, x3
  412118:	and	w23, w4, #0xff
  41211c:	str	x1, [sp, #120]
  412120:	asr	x22, x1, #3
  412124:	mov	w2, w22
  412128:	add	x1, sp, #0x78
  41212c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  412130:	ldr	x0, [x0, #2280]
  412134:	bl	41306c <nftw@plt+0x104ec>
  412138:	ldr	x0, [x0]
  41213c:	cbz	x0, 41219c <nftw@plt+0xf61c>
  412140:	str	x19, [sp, #136]
  412144:	mov	w2, w22
  412148:	add	x1, sp, #0x88
  41214c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  412150:	ldr	x0, [x0, #2280]
  412154:	bl	41306c <nftw@plt+0x104ec>
  412158:	ldr	x24, [x0]
  41215c:	cbz	x24, 41217c <nftw@plt+0xf5fc>
  412160:	ldr	x24, [x0, #8]
  412164:	ldr	x2, [x24]
  412168:	cmp	x20, x2
  41216c:	b.hi	412324 <nftw@plt+0xf7a4>  // b.pmore
  412170:	sub	x2, x2, x20
  412174:	str	x2, [x24]
  412178:	cbnz	w23, 412344 <nftw@plt+0xf7c4>
  41217c:	ldr	x3, [x24, #32]
  412180:	sub	x21, x3, x21
  412184:	str	x21, [x24, #32]
  412188:	ldp	x19, x20, [sp, #16]
  41218c:	ldp	x21, x22, [sp, #32]
  412190:	ldp	x23, x24, [sp, #48]
  412194:	ldp	x29, x30, [sp], #144
  412198:	ret
  41219c:	stp	x25, x26, [sp, #64]
  4121a0:	mov	x0, #0x20                  	// #32
  4121a4:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  4121a8:	mov	x25, x0
  4121ac:	str	xzr, [x0]
  4121b0:	str	xzr, [x0, #8]
  4121b4:	str	wzr, [x0, #16]
  4121b8:	mov	w0, #0x3                   	// #3
  4121bc:	str	w0, [x25, #20]
  4121c0:	strb	wzr, [x25, #24]
  4121c4:	str	x19, [sp, #104]
  4121c8:	str	x25, [sp, #112]
  4121cc:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4121d0:	ldr	x24, [x0, #2272]
  4121d4:	str	xzr, [sp, #120]
  4121d8:	mov	w2, #0x0                   	// #0
  4121dc:	mov	x1, #0x8                   	// #8
  4121e0:	add	x0, sp, #0x78
  4121e4:	bl	449eb8 <nftw@plt+0x47338>
  4121e8:	ldr	x1, [x25, #8]
  4121ec:	str	x1, [sp, #120]
  4121f0:	mov	w2, w0
  4121f4:	mov	x1, #0x8                   	// #8
  4121f8:	add	x0, sp, #0x78
  4121fc:	bl	449eb8 <nftw@plt+0x47338>
  412200:	ldr	w1, [x25, #16]
  412204:	mov	w2, #0x79b9                	// #31161
  412208:	movk	w2, #0x9e37, lsl #16
  41220c:	sub	w2, w2, w0
  412210:	sub	w2, w2, w1
  412214:	eor	w2, w2, w0, lsr #13
  412218:	sub	w1, w1, w0
  41221c:	sub	w1, w1, w2
  412220:	eor	w1, w1, w2, lsl #8
  412224:	sub	w0, w0, w2
  412228:	sub	w0, w0, w1
  41222c:	eor	w0, w0, w1, lsr #13
  412230:	sub	w2, w2, w1
  412234:	sub	w2, w2, w0
  412238:	eor	w2, w2, w0, lsr #12
  41223c:	sub	w1, w1, w0
  412240:	sub	w1, w1, w2
  412244:	eor	w1, w1, w2, lsl #16
  412248:	sub	w0, w0, w2
  41224c:	sub	w0, w0, w1
  412250:	eor	w0, w0, w1, lsr #5
  412254:	sub	w3, w2, w1
  412258:	sub	w3, w3, w0
  41225c:	eor	w3, w3, w0, lsr #3
  412260:	sub	w2, w1, w0
  412264:	sub	w2, w2, w3
  412268:	eor	w2, w2, w3, lsl #10
  41226c:	sub	w0, w0, w3
  412270:	sub	w0, w0, w2
  412274:	eor	w2, w0, w2, lsr #15
  412278:	add	x1, sp, #0x70
  41227c:	mov	x0, x24
  412280:	bl	413168 <nftw@plt+0x105e8>
  412284:	mov	x24, x0
  412288:	ldr	x0, [x0]
  41228c:	cbz	x0, 412380 <nftw@plt+0xf800>
  412290:	ldr	x0, [sp, #112]
  412294:	cbz	x0, 4122a0 <nftw@plt+0xf720>
  412298:	mov	x1, #0x20                  	// #32
  41229c:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  4122a0:	ldr	x24, [x24, #8]
  4122a4:	ldr	x0, [x24, #24]
  4122a8:	add	x0, x0, #0x1
  4122ac:	str	x0, [x24, #24]
  4122b0:	ldr	x2, [sp, #104]
  4122b4:	ubfx	x2, x2, #3, #32
  4122b8:	add	x1, sp, #0x68
  4122bc:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4122c0:	ldr	x0, [x0, #2280]
  4122c4:	bl	41306c <nftw@plt+0x104ec>
  4122c8:	ldr	x0, [x0]
  4122cc:	cbz	x0, 4122e4 <nftw@plt+0xf764>
  4122d0:	ldp	x25, x26, [sp, #64]
  4122d4:	b	412140 <nftw@plt+0xf5c0>
  4122d8:	ldr	x1, [sp, #112]
  4122dc:	str	x1, [x0]
  4122e0:	b	41247c <nftw@plt+0xf8fc>
  4122e4:	mov	w3, #0x1                   	// #1
  4122e8:	ldr	x2, [sp, #104]
  4122ec:	ubfx	x2, x2, #3, #32
  4122f0:	add	x1, sp, #0x68
  4122f4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4122f8:	ldr	x0, [x0, #2280]
  4122fc:	bl	413940 <nftw@plt+0x10dc0>
  412300:	ldr	x1, [x0]
  412304:	cbz	x1, 412318 <nftw@plt+0xf798>
  412308:	str	x24, [x0, #8]
  41230c:	str	xzr, [x0, #16]
  412310:	ldp	x25, x26, [sp, #64]
  412314:	b	412140 <nftw@plt+0xf5c0>
  412318:	ldr	x1, [sp, #104]
  41231c:	str	x1, [x0]
  412320:	b	412308 <nftw@plt+0xf788>
  412324:	stp	x25, x26, [sp, #64]
  412328:	str	x27, [sp, #80]
  41232c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412330:	add	x2, x2, #0x2e0
  412334:	mov	w1, #0x97                  	// #151
  412338:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41233c:	add	x0, x0, #0x2f8
  412340:	bl	408d8c <nftw@plt+0x620c>
  412344:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  412348:	ldr	x20, [x0, #2280]
  41234c:	str	x19, [sp, #128]
  412350:	mov	w3, #0x0                   	// #0
  412354:	mov	w2, w22
  412358:	add	x1, sp, #0x80
  41235c:	mov	x0, x20
  412360:	bl	413940 <nftw@plt+0x10dc0>
  412364:	cbz	x0, 41217c <nftw@plt+0xf5fc>
  412368:	mov	x1, #0x1                   	// #1
  41236c:	str	x1, [x0]
  412370:	ldr	x0, [x20, #24]
  412374:	add	x0, x0, x1
  412378:	str	x0, [x20, #24]
  41237c:	b	41217c <nftw@plt+0xf5fc>
  412380:	str	x27, [sp, #80]
  412384:	mov	x0, #0x38                  	// #56
  412388:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  41238c:	mov	x24, x0
  412390:	str	xzr, [x0]
  412394:	str	xzr, [x0, #8]
  412398:	str	xzr, [x0, #16]
  41239c:	mov	x25, #0x1                   	// #1
  4123a0:	str	x25, [x0, #24]
  4123a4:	str	xzr, [x0, #32]
  4123a8:	str	xzr, [x0, #40]
  4123ac:	str	xzr, [x0, #48]
  4123b0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4123b4:	ldr	x26, [x0, #2272]
  4123b8:	ldr	x27, [sp, #112]
  4123bc:	ldr	x0, [x27]
  4123c0:	str	x0, [sp, #120]
  4123c4:	mov	w2, #0x0                   	// #0
  4123c8:	mov	x1, #0x8                   	// #8
  4123cc:	add	x0, sp, #0x78
  4123d0:	bl	449eb8 <nftw@plt+0x47338>
  4123d4:	ldr	x1, [x27, #8]
  4123d8:	str	x1, [sp, #120]
  4123dc:	mov	w2, w0
  4123e0:	mov	x1, #0x8                   	// #8
  4123e4:	add	x0, sp, #0x78
  4123e8:	bl	449eb8 <nftw@plt+0x47338>
  4123ec:	ldr	w1, [x27, #16]
  4123f0:	mov	w3, #0x79b9                	// #31161
  4123f4:	movk	w3, #0x9e37, lsl #16
  4123f8:	sub	w3, w3, w1
  4123fc:	sub	w3, w3, w0
  412400:	eor	w3, w3, w0, lsr #13
  412404:	sub	w2, w1, w0
  412408:	sub	w2, w2, w3
  41240c:	eor	w2, w2, w3, lsl #8
  412410:	sub	w1, w0, w3
  412414:	sub	w1, w1, w2
  412418:	eor	w1, w1, w2, lsr #13
  41241c:	sub	w3, w3, w2
  412420:	sub	w3, w3, w1
  412424:	eor	w3, w3, w1, lsr #12
  412428:	sub	w0, w2, w1
  41242c:	sub	w0, w0, w3
  412430:	eor	w0, w0, w3, lsl #16
  412434:	sub	w1, w1, w3
  412438:	sub	w1, w1, w0
  41243c:	eor	w1, w1, w0, lsr #5
  412440:	sub	w3, w3, w0
  412444:	sub	w3, w3, w1
  412448:	eor	w3, w3, w1, lsr #3
  41244c:	sub	w2, w0, w1
  412450:	sub	w2, w2, w3
  412454:	eor	w2, w2, w3, lsl #10
  412458:	sub	w1, w1, w3
  41245c:	sub	w1, w1, w2
  412460:	mov	w3, w25
  412464:	eor	w2, w1, w2, lsr #15
  412468:	add	x1, sp, #0x70
  41246c:	mov	x0, x26
  412470:	bl	41354c <nftw@plt+0x109cc>
  412474:	ldr	x1, [x0]
  412478:	cbz	x1, 4122d8 <nftw@plt+0xf758>
  41247c:	str	x24, [x0, #8]
  412480:	ldr	x27, [sp, #80]
  412484:	b	4122b0 <nftw@plt+0xf730>
  412488:	stp	x29, x30, [sp, #-112]!
  41248c:	mov	x29, sp
  412490:	stp	x19, x20, [sp, #16]
  412494:	stp	x21, x22, [sp, #32]
  412498:	stp	x23, x24, [sp, #48]
  41249c:	mov	x19, x1
  4124a0:	mov	x20, x2
  4124a4:	mov	x21, x3
  4124a8:	mov	x0, #0x20                  	// #32
  4124ac:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  4124b0:	mov	x23, x0
  4124b4:	str	xzr, [x0]
  4124b8:	str	xzr, [x0, #8]
  4124bc:	str	wzr, [x0, #16]
  4124c0:	mov	w0, #0x3                   	// #3
  4124c4:	str	w0, [x23, #20]
  4124c8:	strb	wzr, [x23, #24]
  4124cc:	str	x19, [sp, #88]
  4124d0:	str	x23, [sp, #96]
  4124d4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4124d8:	ldr	x22, [x0, #2272]
  4124dc:	str	xzr, [sp, #104]
  4124e0:	mov	w2, #0x0                   	// #0
  4124e4:	mov	x1, #0x8                   	// #8
  4124e8:	add	x0, sp, #0x68
  4124ec:	bl	449eb8 <nftw@plt+0x47338>
  4124f0:	ldr	x1, [x23, #8]
  4124f4:	str	x1, [sp, #104]
  4124f8:	mov	w2, w0
  4124fc:	mov	x1, #0x8                   	// #8
  412500:	add	x0, sp, #0x68
  412504:	bl	449eb8 <nftw@plt+0x47338>
  412508:	ldr	w1, [x23, #16]
  41250c:	mov	w2, #0x79b9                	// #31161
  412510:	movk	w2, #0x9e37, lsl #16
  412514:	sub	w2, w2, w0
  412518:	sub	w2, w2, w1
  41251c:	eor	w2, w2, w0, lsr #13
  412520:	sub	w1, w1, w0
  412524:	sub	w1, w1, w2
  412528:	eor	w1, w1, w2, lsl #8
  41252c:	sub	w0, w0, w2
  412530:	sub	w0, w0, w1
  412534:	eor	w0, w0, w1, lsr #13
  412538:	sub	w2, w2, w1
  41253c:	sub	w2, w2, w0
  412540:	eor	w2, w2, w0, lsr #12
  412544:	sub	w1, w1, w0
  412548:	sub	w1, w1, w2
  41254c:	eor	w1, w1, w2, lsl #16
  412550:	sub	w0, w0, w2
  412554:	sub	w0, w0, w1
  412558:	eor	w0, w0, w1, lsr #5
  41255c:	sub	w3, w2, w1
  412560:	sub	w3, w3, w0
  412564:	eor	w3, w3, w0, lsr #3
  412568:	sub	w2, w1, w0
  41256c:	sub	w2, w2, w3
  412570:	eor	w2, w2, w3, lsl #10
  412574:	sub	w0, w0, w3
  412578:	sub	w0, w0, w2
  41257c:	eor	w2, w0, w2, lsr #15
  412580:	add	x1, sp, #0x60
  412584:	mov	x0, x22
  412588:	bl	413168 <nftw@plt+0x105e8>
  41258c:	mov	x22, x0
  412590:	ldr	x0, [x0]
  412594:	cbz	x0, 4126a4 <nftw@plt+0xfb24>
  412598:	ldr	x0, [sp, #96]
  41259c:	cbz	x0, 4125a8 <nftw@plt+0xfa28>
  4125a0:	mov	x1, #0x20                  	// #32
  4125a4:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  4125a8:	ldr	x22, [x22, #8]
  4125ac:	ldr	x0, [x22, #24]
  4125b0:	add	x0, x0, #0x1
  4125b4:	str	x0, [x22, #24]
  4125b8:	ldr	x2, [sp, #88]
  4125bc:	ubfx	x2, x2, #3, #32
  4125c0:	add	x1, sp, #0x58
  4125c4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4125c8:	ldr	x0, [x0, #2280]
  4125cc:	bl	41306c <nftw@plt+0x104ec>
  4125d0:	ldr	x0, [x0]
  4125d4:	cbz	x0, 412668 <nftw@plt+0xfae8>
  4125d8:	mul	x22, x20, x21
  4125dc:	str	x19, [sp, #104]
  4125e0:	ubfx	x2, x19, #3, #32
  4125e4:	add	x1, sp, #0x68
  4125e8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4125ec:	ldr	x0, [x0, #2280]
  4125f0:	bl	41306c <nftw@plt+0x104ec>
  4125f4:	ldr	x1, [x0]
  4125f8:	cbz	x1, 412628 <nftw@plt+0xfaa8>
  4125fc:	ldr	x1, [x0, #8]
  412600:	ldr	x0, [x1]
  412604:	add	x0, x22, x0
  412608:	str	x0, [x1]
  41260c:	ldr	x2, [x1, #8]
  412610:	add	x2, x2, #0x1
  412614:	str	x2, [x1, #8]
  412618:	ldr	x2, [x1, #16]
  41261c:	cmp	x0, x2
  412620:	b.ls	412628 <nftw@plt+0xfaa8>  // b.plast
  412624:	str	x0, [x1, #16]
  412628:	str	x21, [x1, #48]
  41262c:	ldr	x2, [x1, #32]
  412630:	add	x20, x20, x2
  412634:	str	x20, [x1, #32]
  412638:	ldr	x0, [x1, #40]
  41263c:	cmp	x20, x0
  412640:	b.ls	412648 <nftw@plt+0xfac8>  // b.plast
  412644:	str	x20, [x1, #40]
  412648:	ldp	x19, x20, [sp, #16]
  41264c:	ldp	x21, x22, [sp, #32]
  412650:	ldp	x23, x24, [sp, #48]
  412654:	ldp	x29, x30, [sp], #112
  412658:	ret
  41265c:	ldr	x1, [sp, #96]
  412660:	str	x1, [x0]
  412664:	b	4127a0 <nftw@plt+0xfc20>
  412668:	mov	w3, #0x1                   	// #1
  41266c:	ldr	x2, [sp, #88]
  412670:	ubfx	x2, x2, #3, #32
  412674:	add	x1, sp, #0x58
  412678:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  41267c:	ldr	x0, [x0, #2280]
  412680:	bl	413940 <nftw@plt+0x10dc0>
  412684:	ldr	x1, [x0]
  412688:	cbz	x1, 412698 <nftw@plt+0xfb18>
  41268c:	str	x22, [x0, #8]
  412690:	str	xzr, [x0, #16]
  412694:	b	4125d8 <nftw@plt+0xfa58>
  412698:	ldr	x1, [sp, #88]
  41269c:	str	x1, [x0]
  4126a0:	b	41268c <nftw@plt+0xfb0c>
  4126a4:	str	x25, [sp, #64]
  4126a8:	mov	x0, #0x38                  	// #56
  4126ac:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  4126b0:	mov	x22, x0
  4126b4:	str	xzr, [x0]
  4126b8:	str	xzr, [x0, #8]
  4126bc:	str	xzr, [x0, #16]
  4126c0:	mov	x23, #0x1                   	// #1
  4126c4:	str	x23, [x0, #24]
  4126c8:	str	xzr, [x0, #32]
  4126cc:	str	xzr, [x0, #40]
  4126d0:	str	xzr, [x0, #48]
  4126d4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4126d8:	ldr	x24, [x0, #2272]
  4126dc:	ldr	x25, [sp, #96]
  4126e0:	ldr	x0, [x25]
  4126e4:	str	x0, [sp, #104]
  4126e8:	mov	w2, #0x0                   	// #0
  4126ec:	mov	x1, #0x8                   	// #8
  4126f0:	add	x0, sp, #0x68
  4126f4:	bl	449eb8 <nftw@plt+0x47338>
  4126f8:	ldr	x1, [x25, #8]
  4126fc:	str	x1, [sp, #104]
  412700:	mov	w2, w0
  412704:	mov	x1, #0x8                   	// #8
  412708:	add	x0, sp, #0x68
  41270c:	bl	449eb8 <nftw@plt+0x47338>
  412710:	ldr	w2, [x25, #16]
  412714:	mov	w3, #0x79b9                	// #31161
  412718:	movk	w3, #0x9e37, lsl #16
  41271c:	sub	w3, w3, w2
  412720:	sub	w3, w3, w0
  412724:	eor	w3, w3, w0, lsr #13
  412728:	sub	w2, w2, w0
  41272c:	sub	w2, w2, w3
  412730:	eor	w2, w2, w3, lsl #8
  412734:	sub	w1, w0, w3
  412738:	sub	w1, w1, w2
  41273c:	eor	w1, w1, w2, lsr #13
  412740:	sub	w3, w3, w2
  412744:	sub	w3, w3, w1
  412748:	eor	w3, w3, w1, lsr #12
  41274c:	sub	w0, w2, w1
  412750:	sub	w0, w0, w3
  412754:	eor	w0, w0, w3, lsl #16
  412758:	sub	w1, w1, w3
  41275c:	sub	w1, w1, w0
  412760:	eor	w1, w1, w0, lsr #5
  412764:	sub	w3, w3, w0
  412768:	sub	w3, w3, w1
  41276c:	eor	w3, w3, w1, lsr #3
  412770:	sub	w2, w0, w1
  412774:	sub	w2, w2, w3
  412778:	eor	w2, w2, w3, lsl #10
  41277c:	sub	w1, w1, w3
  412780:	sub	w1, w1, w2
  412784:	mov	w3, w23
  412788:	eor	w2, w1, w2, lsr #15
  41278c:	add	x1, sp, #0x60
  412790:	mov	x0, x24
  412794:	bl	41354c <nftw@plt+0x109cc>
  412798:	ldr	x1, [x0]
  41279c:	cbz	x1, 41265c <nftw@plt+0xfadc>
  4127a0:	str	x22, [x0, #8]
  4127a4:	ldr	x25, [sp, #64]
  4127a8:	b	4125b8 <nftw@plt+0xfa38>
  4127ac:	sub	sp, sp, #0x90
  4127b0:	stp	x29, x30, [sp, #16]
  4127b4:	add	x29, sp, #0x10
  4127b8:	stp	x19, x20, [sp, #32]
  4127bc:	stp	x21, x22, [sp, #48]
  4127c0:	str	x23, [sp, #64]
  4127c4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4127c8:	ldr	x1, [x0, #1392]
  4127cc:	mov	w0, #0xa                   	// #10
  4127d0:	bl	4025e0 <fputc@plt>
  4127d4:	adrp	x19, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4127d8:	add	x19, x19, #0x8b8
  4127dc:	ldr	x1, [x19, #40]
  4127e0:	ldr	x2, [x1, #16]
  4127e4:	ldr	x0, [x1, #24]
  4127e8:	mov	x1, #0x10                  	// #16
  4127ec:	sub	x0, x2, x0
  4127f0:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  4127f4:	mov	x22, x0
  4127f8:	ldr	x0, [x19, #40]
  4127fc:	ldr	x1, [x0]
  412800:	ldr	x0, [x0, #8]
  412804:	add	x0, x1, x0, lsl #4
  412808:	str	x1, [sp, #88]
  41280c:	str	x0, [sp, #96]
  412810:	add	x0, sp, #0x58
  412814:	bl	413aec <nftw@plt+0x10f6c>
  412818:	mov	w19, #0x0                   	// #0
  41281c:	b	41289c <nftw@plt+0xfd1c>
  412820:	ldr	x1, [sp, #96]
  412824:	cbnz	x1, 4128a4 <nftw@plt+0xfd24>
  412828:	adrp	x3, 412000 <nftw@plt+0xf480>
  41282c:	add	x3, x3, #0xca8
  412830:	mov	x2, #0x10                  	// #16
  412834:	mov	w1, w19
  412838:	mov	x0, x22
  41283c:	bl	4174d4 <nftw@plt+0x14954>
  412840:	adrp	x20, 48e000 <__environ@@GLIBC_2.17+0xa68>
  412844:	add	x20, x20, #0x8b8
  412848:	ldr	x1, [x20, #40]
  41284c:	ldr	x2, [x1, #16]
  412850:	ldr	x0, [x1, #24]
  412854:	mov	x1, #0x10                  	// #16
  412858:	sub	x0, x2, x0
  41285c:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  412860:	mov	x21, x0
  412864:	ldr	x0, [x20, #40]
  412868:	ldr	x1, [x0]
  41286c:	ldr	x0, [x0, #8]
  412870:	add	x0, x1, x0, lsl #4
  412874:	str	x1, [sp, #88]
  412878:	str	x0, [sp, #96]
  41287c:	add	x0, sp, #0x58
  412880:	bl	413aec <nftw@plt+0x10f6c>
  412884:	mov	w20, #0x0                   	// #0
  412888:	b	412c10 <nftw@plt+0x10090>
  41288c:	add	x0, x0, #0x10
  412890:	str	x0, [sp, #88]
  412894:	add	x0, sp, #0x58
  412898:	bl	413aec <nftw@plt+0x10f6c>
  41289c:	ldr	x0, [sp, #88]
  4128a0:	cbz	x0, 412820 <nftw@plt+0xfca0>
  4128a4:	ldr	x2, [x0]
  4128a8:	ldr	w1, [x2, #20]
  4128ac:	cmp	w1, #0x3
  4128b0:	b.ne	41288c <nftw@plt+0xfd0c>  // b.any
  4128b4:	ubfiz	x1, x19, #4, #32
  4128b8:	add	x3, x22, x1
  4128bc:	ldr	x4, [x0, #8]
  4128c0:	str	x2, [x22, x1]
  4128c4:	str	x4, [x3, #8]
  4128c8:	add	w19, w19, #0x1
  4128cc:	b	41288c <nftw@plt+0xfd0c>
  4128d0:	ldr	x1, [sp, #96]
  4128d4:	cbnz	x1, 412c18 <nftw@plt+0x10098>
  4128d8:	adrp	x3, 412000 <nftw@plt+0xf480>
  4128dc:	add	x3, x3, #0xca8
  4128e0:	mov	x2, #0x10                  	// #16
  4128e4:	mov	w1, w20
  4128e8:	mov	x0, x21
  4128ec:	bl	4174d4 <nftw@plt+0x14954>
  4128f0:	str	xzr, [sp, #88]
  4128f4:	str	xzr, [sp, #96]
  4128f8:	str	xzr, [sp, #104]
  4128fc:	mov	x0, #0x1                   	// #1
  412900:	str	x0, [sp, #112]
  412904:	str	xzr, [sp, #120]
  412908:	str	xzr, [sp, #128]
  41290c:	str	xzr, [sp, #136]
  412910:	cbz	w20, 412988 <nftw@plt+0xfe08>
  412914:	add	x5, x21, #0x8
  412918:	sub	w20, w20, #0x1
  41291c:	add	x0, x21, #0x18
  412920:	add	x20, x0, x20, lsl #4
  412924:	ldr	x0, [x5], #16
  412928:	ldr	x1, [x0, #8]
  41292c:	ldr	x4, [sp, #96]
  412930:	add	x4, x4, x1
  412934:	ldr	x1, [x0, #16]
  412938:	ldr	x3, [sp, #104]
  41293c:	add	x3, x3, x1
  412940:	ldr	x1, [x0, #32]
  412944:	ldr	x2, [sp, #120]
  412948:	add	x2, x2, x1
  41294c:	ldr	x6, [x0, #40]
  412950:	ldr	x1, [sp, #128]
  412954:	add	x1, x1, x6
  412958:	ldr	x6, [x0]
  41295c:	ldr	x0, [sp, #88]
  412960:	add	x0, x0, x6
  412964:	str	x0, [sp, #88]
  412968:	str	x4, [sp, #96]
  41296c:	str	x3, [sp, #104]
  412970:	str	xzr, [sp, #112]
  412974:	str	x2, [sp, #120]
  412978:	str	x1, [sp, #128]
  41297c:	str	xzr, [sp, #136]
  412980:	cmp	x20, x5
  412984:	b.ne	412924 <nftw@plt+0xfda4>  // b.any
  412988:	mov	x0, x21
  41298c:	bl	402910 <free@plt>
  412990:	mov	x20, #0x8c                  	// #140
  412994:	adrp	x23, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412998:	mov	w21, #0x2d                  	// #45
  41299c:	ldr	x1, [x23, #1392]
  4129a0:	mov	w0, w21
  4129a4:	bl	4025e0 <fputc@plt>
  4129a8:	subs	x20, x20, #0x1
  4129ac:	b.ne	41299c <nftw@plt+0xfe1c>  // b.any
  4129b0:	adrp	x20, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4129b4:	ldr	x1, [x20, #1392]
  4129b8:	mov	w0, #0xa                   	// #10
  4129bc:	bl	4025e0 <fputc@plt>
  4129c0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4129c4:	add	x0, x0, #0x378
  4129c8:	str	x0, [sp]
  4129cc:	adrp	x7, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4129d0:	add	x7, x7, #0x310
  4129d4:	adrp	x6, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4129d8:	add	x6, x6, #0x320
  4129dc:	adrp	x5, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4129e0:	add	x5, x5, #0x328
  4129e4:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4129e8:	add	x4, x4, #0x330
  4129ec:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4129f0:	add	x3, x3, #0x338
  4129f4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4129f8:	add	x2, x2, #0x348
  4129fc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412a00:	add	x1, x1, #0x358
  412a04:	ldr	x0, [x20, #1392]
  412a08:	bl	402b30 <fprintf@plt>
  412a0c:	mov	x20, #0x8c                  	// #140
  412a10:	adrp	x23, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412a14:	mov	w21, #0x2d                  	// #45
  412a18:	ldr	x1, [x23, #1392]
  412a1c:	mov	w0, w21
  412a20:	bl	4025e0 <fputc@plt>
  412a24:	subs	x20, x20, #0x1
  412a28:	b.ne	412a18 <nftw@plt+0xfe98>  // b.any
  412a2c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412a30:	ldr	x1, [x0, #1392]
  412a34:	mov	w0, #0xa                   	// #10
  412a38:	bl	4025e0 <fputc@plt>
  412a3c:	sub	w19, w19, #0x1
  412a40:	add	x20, x22, w19, sxtw #4
  412a44:	tbnz	w19, #31, 412a64 <nftw@plt+0xfee4>
  412a48:	add	x2, sp, #0x58
  412a4c:	ldr	x1, [x20]
  412a50:	ldr	x0, [x20, #8]
  412a54:	bl	412d24 <nftw@plt+0x101a4>
  412a58:	sub	x20, x20, #0x10
  412a5c:	subs	w19, w19, #0x1
  412a60:	b.pl	412a48 <nftw@plt+0xfec8>  // b.nfrst
  412a64:	mov	x19, #0x8c                  	// #140
  412a68:	adrp	x21, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412a6c:	mov	w20, #0x2d                  	// #45
  412a70:	ldr	x1, [x21, #1392]
  412a74:	mov	w0, w20
  412a78:	bl	4025e0 <fputc@plt>
  412a7c:	subs	x19, x19, #0x1
  412a80:	b.ne	412a70 <nftw@plt+0xfef0>  // b.any
  412a84:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412a88:	ldr	x1, [x19, #1392]
  412a8c:	mov	w0, #0xa                   	// #10
  412a90:	bl	4025e0 <fputc@plt>
  412a94:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412a98:	add	x0, x0, #0x378
  412a9c:	str	x0, [sp]
  412aa0:	adrp	x7, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412aa4:	add	x7, x7, #0x310
  412aa8:	adrp	x6, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412aac:	add	x6, x6, #0x320
  412ab0:	adrp	x5, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412ab4:	add	x5, x5, #0x328
  412ab8:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412abc:	add	x4, x4, #0x330
  412ac0:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412ac4:	add	x3, x3, #0x338
  412ac8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412acc:	add	x2, x2, #0x348
  412ad0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412ad4:	add	x1, x1, #0x358
  412ad8:	ldr	x0, [x19, #1392]
  412adc:	bl	402b30 <fprintf@plt>
  412ae0:	mov	x19, #0x8c                  	// #140
  412ae4:	adrp	x21, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412ae8:	mov	w20, #0x2d                  	// #45
  412aec:	ldr	x1, [x21, #1392]
  412af0:	mov	w0, w20
  412af4:	bl	4025e0 <fputc@plt>
  412af8:	subs	x19, x19, #0x1
  412afc:	b.ne	412aec <nftw@plt+0xff6c>  // b.any
  412b00:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412b04:	ldr	x1, [x19, #1392]
  412b08:	mov	w0, #0xa                   	// #10
  412b0c:	bl	4025e0 <fputc@plt>
  412b10:	ldr	x0, [x19, #1392]
  412b14:	ldr	x3, [sp, #88]
  412b18:	mov	w4, #0x20                  	// #32
  412b1c:	mov	x1, #0x27ff                	// #10239
  412b20:	cmp	x3, x1
  412b24:	b.ls	412b3c <nftw@plt+0xffbc>  // b.plast
  412b28:	mov	w1, #0x9fffff              	// #10485759
  412b2c:	cmp	x3, x1
  412b30:	b.hi	412c44 <nftw@plt+0x100c4>  // b.pmore
  412b34:	lsr	x3, x3, #10
  412b38:	mov	w4, #0x6b                  	// #107
  412b3c:	ldr	x5, [sp, #96]
  412b40:	mov	w6, #0x20                  	// #32
  412b44:	mov	x1, #0x27ff                	// #10239
  412b48:	cmp	x5, x1
  412b4c:	b.ls	412b64 <nftw@plt+0xffe4>  // b.plast
  412b50:	mov	w1, #0x9fffff              	// #10485759
  412b54:	cmp	x5, x1
  412b58:	b.hi	412c50 <nftw@plt+0x100d0>  // b.pmore
  412b5c:	lsr	x5, x5, #10
  412b60:	mov	w6, #0x6b                  	// #107
  412b64:	ldr	x7, [sp, #120]
  412b68:	mov	w1, #0x20                  	// #32
  412b6c:	mov	x2, #0x27ff                	// #10239
  412b70:	cmp	x7, x2
  412b74:	b.ls	412b8c <nftw@plt+0x1000c>  // b.plast
  412b78:	mov	w1, #0x9fffff              	// #10485759
  412b7c:	cmp	x7, x1
  412b80:	b.hi	412c5c <nftw@plt+0x100dc>  // b.pmore
  412b84:	lsr	x7, x7, #10
  412b88:	mov	w1, #0x6b                  	// #107
  412b8c:	str	w1, [sp]
  412b90:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412b94:	add	x2, x2, #0x388
  412b98:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412b9c:	add	x1, x1, #0x390
  412ba0:	bl	402b30 <fprintf@plt>
  412ba4:	mov	x19, #0x8c                  	// #140
  412ba8:	adrp	x21, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412bac:	mov	w20, #0x2d                  	// #45
  412bb0:	ldr	x1, [x21, #1392]
  412bb4:	mov	w0, w20
  412bb8:	bl	4025e0 <fputc@plt>
  412bbc:	subs	x19, x19, #0x1
  412bc0:	b.ne	412bb0 <nftw@plt+0x10030>  // b.any
  412bc4:	adrp	x19, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412bc8:	ldr	x1, [x19, #1392]
  412bcc:	mov	w0, #0xa                   	// #10
  412bd0:	bl	4025e0 <fputc@plt>
  412bd4:	mov	x0, x22
  412bd8:	bl	402910 <free@plt>
  412bdc:	ldr	x1, [x19, #1392]
  412be0:	mov	w0, #0xa                   	// #10
  412be4:	bl	4025e0 <fputc@plt>
  412be8:	ldp	x19, x20, [sp, #32]
  412bec:	ldp	x21, x22, [sp, #48]
  412bf0:	ldr	x23, [sp, #64]
  412bf4:	ldp	x29, x30, [sp, #16]
  412bf8:	add	sp, sp, #0x90
  412bfc:	ret
  412c00:	add	x0, x0, #0x10
  412c04:	str	x0, [sp, #88]
  412c08:	add	x0, sp, #0x58
  412c0c:	bl	413aec <nftw@plt+0x10f6c>
  412c10:	ldr	x0, [sp, #88]
  412c14:	cbz	x0, 4128d0 <nftw@plt+0xfd50>
  412c18:	ldr	x2, [x0]
  412c1c:	ldr	w1, [x2, #20]
  412c20:	cmp	w1, #0x3
  412c24:	b.ne	412c00 <nftw@plt+0x10080>  // b.any
  412c28:	ubfiz	x1, x20, #4, #32
  412c2c:	add	x3, x21, x1
  412c30:	ldr	x4, [x0, #8]
  412c34:	str	x2, [x21, x1]
  412c38:	str	x4, [x3, #8]
  412c3c:	add	w20, w20, #0x1
  412c40:	b	412c00 <nftw@plt+0x10080>
  412c44:	lsr	x3, x3, #20
  412c48:	mov	w4, #0x4d                  	// #77
  412c4c:	b	412b3c <nftw@plt+0xffbc>
  412c50:	lsr	x5, x5, #20
  412c54:	mov	w6, #0x4d                  	// #77
  412c58:	b	412b64 <nftw@plt+0xffe4>
  412c5c:	lsr	x7, x7, #20
  412c60:	mov	w1, #0x4d                  	// #77
  412c64:	b	412b8c <nftw@plt+0x1000c>
  412c68:	stp	x29, x30, [sp, #-32]!
  412c6c:	mov	x29, sp
  412c70:	str	x19, [sp, #16]
  412c74:	adrp	x19, 48e000 <__environ@@GLIBC_2.17+0xa68>
  412c78:	add	x19, x19, #0x8b8
  412c7c:	mov	x0, x19
  412c80:	bl	412ef0 <nftw@plt+0x10370>
  412c84:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412c88:	add	x2, x2, #0x388
  412c8c:	mov	x1, x19
  412c90:	adrp	x0, 413000 <nftw@plt+0x10480>
  412c94:	add	x0, x0, #0xb24
  412c98:	bl	4025d0 <__cxa_atexit@plt>
  412c9c:	ldr	x19, [sp, #16]
  412ca0:	ldp	x29, x30, [sp], #32
  412ca4:	ret
  412ca8:	ldr	x4, [x0, #8]
  412cac:	ldr	x3, [x1, #8]
  412cb0:	ldr	x0, [x4]
  412cb4:	ldr	x1, [x3]
  412cb8:	cmp	x1, x0
  412cbc:	cset	w2, hi  // hi = pmore
  412cc0:	b.eq	412cd4 <nftw@plt+0x10154>  // b.none
  412cc4:	mov	w0, #0xffffffff            	// #-1
  412cc8:	cmp	w2, #0x0
  412ccc:	cneg	w0, w0, ne  // ne = any
  412cd0:	ret
  412cd4:	ldr	x1, [x4, #16]
  412cd8:	ldr	x0, [x3, #16]
  412cdc:	cmp	x1, x0
  412ce0:	cset	w2, cc  // cc = lo, ul, last
  412ce4:	b.ne	412cc4 <nftw@plt+0x10144>  // b.any
  412ce8:	ldr	x2, [x4, #8]
  412cec:	ldr	x1, [x3, #8]
  412cf0:	mov	w0, #0x0                   	// #0
  412cf4:	cmp	x2, x1
  412cf8:	b.eq	412cd0 <nftw@plt+0x10150>  // b.none
  412cfc:	ldr	x2, [x4, #8]
  412d00:	ldr	x1, [x3, #8]
  412d04:	mov	w0, #0xffffffff            	// #-1
  412d08:	cmp	x2, x1
  412d0c:	b.eq	412cd0 <nftw@plt+0x10150>  // b.none
  412d10:	ldr	x1, [x4, #8]
  412d14:	ldr	x0, [x3, #8]
  412d18:	cmp	x1, x0
  412d1c:	cset	w2, cc  // cc = lo, ul, last
  412d20:	b	412cc4 <nftw@plt+0x10144>
  412d24:	mov	x12, #0x1070                	// #4208
  412d28:	sub	sp, sp, x12
  412d2c:	stp	x29, x30, [sp, #48]
  412d30:	add	x29, sp, #0x30
  412d34:	stp	x19, x20, [sp, #64]
  412d38:	stp	x21, x22, [sp, #80]
  412d3c:	str	x23, [sp, #96]
  412d40:	mov	x21, x0
  412d44:	mov	x22, x1
  412d48:	mov	x23, x2
  412d4c:	ldr	x19, [x1]
  412d50:	adrp	x20, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412d54:	add	x20, x20, #0x260
  412d58:	mov	x1, x20
  412d5c:	mov	x0, x19
  412d60:	bl	402a20 <strstr@plt>
  412d64:	cbz	x0, 412d70 <nftw@plt+0x101f0>
  412d68:	add	x19, x0, #0x4
  412d6c:	b	412d58 <nftw@plt+0x101d8>
  412d70:	ldr	x4, [x22, #8]
  412d74:	ldr	w3, [x22, #16]
  412d78:	mov	x2, x19
  412d7c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412d80:	add	x1, x1, #0x268
  412d84:	add	x0, sp, #0x70
  412d88:	bl	4025b0 <sprintf@plt>
  412d8c:	strb	wzr, [sp, #160]
  412d90:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  412d94:	ldr	x0, [x0, #1392]
  412d98:	ldr	x3, [x21, #48]
  412d9c:	ldr	x1, [x21]
  412da0:	mov	x2, #0x27ff                	// #10239
  412da4:	cmp	x1, x2
  412da8:	b.ls	412dd0 <nftw@plt+0x10250>  // b.plast
  412dac:	mov	w2, #0x9fffff              	// #10485759
  412db0:	cmp	x1, x2
  412db4:	b.hi	412dc4 <nftw@plt+0x10244>  // b.pmore
  412db8:	lsr	x4, x1, #10
  412dbc:	mov	w5, #0x6b                  	// #107
  412dc0:	b	412dd8 <nftw@plt+0x10258>
  412dc4:	lsr	x4, x1, #20
  412dc8:	mov	w5, #0x4d                  	// #77
  412dcc:	b	412dd8 <nftw@plt+0x10258>
  412dd0:	mov	x4, x1
  412dd4:	mov	w5, #0x20                  	// #32
  412dd8:	ucvtf	d0, x1
  412ddc:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  412de0:	fmov	d1, x1
  412de4:	fmul	d0, d0, d1
  412de8:	ldr	d1, [x23]
  412dec:	ucvtf	d1, d1
  412df0:	fdiv	d0, d0, d1
  412df4:	ldr	x6, [x21, #16]
  412df8:	mov	w7, #0x20                  	// #32
  412dfc:	mov	x1, #0x27ff                	// #10239
  412e00:	cmp	x6, x1
  412e04:	b.ls	412e1c <nftw@plt+0x1029c>  // b.plast
  412e08:	mov	w1, #0x9fffff              	// #10485759
  412e0c:	cmp	x6, x1
  412e10:	b.hi	412ecc <nftw@plt+0x1034c>  // b.pmore
  412e14:	lsr	x6, x6, #10
  412e18:	mov	w7, #0x6b                  	// #107
  412e1c:	ldr	d3, [x21, #8]
  412e20:	ucvtf	d1, d3
  412e24:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  412e28:	fmov	d2, x1
  412e2c:	fmul	d1, d1, d2
  412e30:	ldr	d2, [x23, #8]
  412e34:	ucvtf	d2, d2
  412e38:	fdiv	d1, d1, d2
  412e3c:	ldr	x1, [x21, #32]
  412e40:	mov	w8, #0x20                  	// #32
  412e44:	mov	x2, #0x27ff                	// #10239
  412e48:	cmp	x1, x2
  412e4c:	b.ls	412e64 <nftw@plt+0x102e4>  // b.plast
  412e50:	mov	w2, #0x9fffff              	// #10485759
  412e54:	cmp	x1, x2
  412e58:	b.hi	412ed8 <nftw@plt+0x10358>  // b.pmore
  412e5c:	lsr	x1, x1, #10
  412e60:	mov	w8, #0x6b                  	// #107
  412e64:	ldr	x2, [x21, #40]
  412e68:	mov	w9, #0x20                  	// #32
  412e6c:	mov	x10, #0x27ff                	// #10239
  412e70:	cmp	x2, x10
  412e74:	b.ls	412e8c <nftw@plt+0x1030c>  // b.plast
  412e78:	mov	w9, #0x9fffff              	// #10485759
  412e7c:	cmp	x2, x9
  412e80:	b.hi	412ee4 <nftw@plt+0x10364>  // b.pmore
  412e84:	lsr	x2, x2, #10
  412e88:	mov	w9, #0x6b                  	// #107
  412e8c:	str	w9, [sp, #32]
  412e90:	str	x2, [sp, #24]
  412e94:	str	w8, [sp, #16]
  412e98:	str	x1, [sp, #8]
  412e9c:	str	d3, [sp]
  412ea0:	add	x2, sp, #0x70
  412ea4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412ea8:	add	x1, x1, #0x278
  412eac:	bl	402b30 <fprintf@plt>
  412eb0:	ldp	x19, x20, [sp, #64]
  412eb4:	ldp	x21, x22, [sp, #80]
  412eb8:	ldr	x23, [sp, #96]
  412ebc:	ldp	x29, x30, [sp, #48]
  412ec0:	mov	x12, #0x1070                	// #4208
  412ec4:	add	sp, sp, x12
  412ec8:	ret
  412ecc:	lsr	x6, x6, #20
  412ed0:	mov	w7, #0x4d                  	// #77
  412ed4:	b	412e1c <nftw@plt+0x1029c>
  412ed8:	lsr	x1, x1, #20
  412edc:	mov	w8, #0x4d                  	// #77
  412ee0:	b	412e64 <nftw@plt+0x102e4>
  412ee4:	lsr	x2, x2, #20
  412ee8:	mov	w9, #0x4d                  	// #77
  412eec:	b	412e8c <nftw@plt+0x1030c>
  412ef0:	stp	x29, x30, [sp, #-48]!
  412ef4:	mov	x29, sp
  412ef8:	stp	x19, x20, [sp, #16]
  412efc:	stp	x21, x22, [sp, #32]
  412f00:	mov	x20, x0
  412f04:	mov	x0, #0x30                  	// #48
  412f08:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  412f0c:	mov	x19, x0
  412f10:	str	xzr, [x0, #16]
  412f14:	str	xzr, [x0, #24]
  412f18:	str	wzr, [x0, #32]
  412f1c:	str	wzr, [x0, #36]
  412f20:	strb	wzr, [x0, #44]
  412f24:	mov	x0, #0xd                   	// #13
  412f28:	bl	416928 <nftw@plt+0x13da8>
  412f2c:	mov	w21, w0
  412f30:	ubfiz	x1, x21, #4, #32
  412f34:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412f38:	add	x0, x0, #0xe38
  412f3c:	ldr	w22, [x0, x1]
  412f40:	mov	x1, #0x10                  	// #16
  412f44:	mov	x0, x22
  412f48:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  412f4c:	cbz	x22, 412f64 <nftw@plt+0x103e4>
  412f50:	mov	x1, x0
  412f54:	add	x2, x0, x22, lsl #4
  412f58:	str	xzr, [x1], #16
  412f5c:	cmp	x1, x2
  412f60:	b.ne	412f58 <nftw@plt+0x103d8>  // b.any
  412f64:	str	x0, [x19]
  412f68:	str	x22, [x19, #8]
  412f6c:	str	w21, [x19, #40]
  412f70:	str	x19, [x20, #40]
  412f74:	mov	x0, #0x30                  	// #48
  412f78:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  412f7c:	mov	x19, x0
  412f80:	str	xzr, [x0, #16]
  412f84:	str	xzr, [x0, #24]
  412f88:	str	wzr, [x0, #32]
  412f8c:	str	wzr, [x0, #36]
  412f90:	strb	wzr, [x0, #44]
  412f94:	mov	x0, #0xd                   	// #13
  412f98:	bl	416928 <nftw@plt+0x13da8>
  412f9c:	mov	w22, w0
  412fa0:	ubfiz	x1, x22, #4, #32
  412fa4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  412fa8:	add	x0, x0, #0xe38
  412fac:	ldr	w21, [x0, x1]
  412fb0:	mov	x1, #0x18                  	// #24
  412fb4:	mov	x0, x21
  412fb8:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  412fbc:	cbz	x21, 412fd8 <nftw@plt+0x10458>
  412fc0:	mov	x1, x0
  412fc4:	add	x2, x21, x21, lsl #1
  412fc8:	add	x2, x0, x2, lsl #3
  412fcc:	str	xzr, [x1], #24
  412fd0:	cmp	x2, x1
  412fd4:	b.ne	412fcc <nftw@plt+0x1044c>  // b.any
  412fd8:	str	x0, [x19]
  412fdc:	str	x21, [x19, #8]
  412fe0:	str	w22, [x19, #40]
  412fe4:	str	x19, [x20, #48]
  412fe8:	mov	x0, #0x30                  	// #48
  412fec:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  412ff0:	mov	x19, x0
  412ff4:	str	xzr, [x0, #16]
  412ff8:	str	xzr, [x0, #24]
  412ffc:	str	wzr, [x0, #32]
  413000:	str	wzr, [x0, #36]
  413004:	strb	wzr, [x0, #44]
  413008:	mov	x0, #0xd                   	// #13
  41300c:	bl	416928 <nftw@plt+0x13da8>
  413010:	mov	w22, w0
  413014:	ubfiz	x1, x22, #4, #32
  413018:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41301c:	add	x0, x0, #0xe38
  413020:	ldr	w21, [x0, x1]
  413024:	mov	x1, #0x18                  	// #24
  413028:	mov	x0, x21
  41302c:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  413030:	cbz	x21, 41304c <nftw@plt+0x104cc>
  413034:	mov	x1, x0
  413038:	add	x2, x21, x21, lsl #1
  41303c:	add	x2, x0, x2, lsl #3
  413040:	str	xzr, [x1], #24
  413044:	cmp	x2, x1
  413048:	b.ne	413040 <nftw@plt+0x104c0>  // b.any
  41304c:	str	x0, [x19]
  413050:	str	x21, [x19, #8]
  413054:	str	w22, [x19, #40]
  413058:	str	x19, [x20]
  41305c:	ldp	x19, x20, [sp, #16]
  413060:	ldp	x21, x22, [sp, #32]
  413064:	ldp	x29, x30, [sp], #48
  413068:	ret
  41306c:	mov	x7, x0
  413070:	ldr	w0, [x0, #32]
  413074:	add	w0, w0, #0x1
  413078:	str	w0, [x7, #32]
  41307c:	ldr	w9, [x7, #40]
  413080:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413084:	add	x0, x0, #0xe38
  413088:	ubfiz	x4, x9, #4, #32
  41308c:	add	x3, x0, x4
  413090:	ldr	w6, [x0, x4]
  413094:	ldr	w11, [x3, #12]
  413098:	mov	w4, w2
  41309c:	ldr	w3, [x3, #4]
  4130a0:	mul	x3, x3, x4
  4130a4:	lsr	x3, x3, #32
  4130a8:	sub	w5, w2, w3
  4130ac:	add	w3, w3, w5, lsr #1
  4130b0:	lsr	w3, w3, w11
  4130b4:	msub	w3, w3, w6, w2
  4130b8:	ldr	x8, [x7]
  4130bc:	ubfiz	x5, x3, #1, #32
  4130c0:	add	x5, x5, w3, uxtw
  4130c4:	lsl	x5, x5, #3
  4130c8:	add	x0, x8, x5
  4130cc:	ldr	x5, [x8, x5]
  4130d0:	cbz	x5, 413164 <nftw@plt+0x105e4>
  4130d4:	cmp	x5, #0x1
  4130d8:	b.eq	4130e8 <nftw@plt+0x10568>  // b.none
  4130dc:	ldr	x10, [x1]
  4130e0:	cmp	x5, x10
  4130e4:	b.eq	413164 <nftw@plt+0x105e4>  // b.none
  4130e8:	ldr	x5, [x7, #8]
  4130ec:	ubfiz	x9, x9, #4, #32
  4130f0:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4130f4:	add	x10, x10, #0xe38
  4130f8:	add	x9, x10, x9
  4130fc:	ldr	w0, [x9, #8]
  413100:	mul	x0, x0, x4
  413104:	lsr	x0, x0, #32
  413108:	add	w9, w2, #0x1
  41310c:	sub	w4, w2, w0
  413110:	add	w4, w0, w4, lsr #1
  413114:	lsr	w4, w4, w11
  413118:	sub	w6, w6, #0x2
  41311c:	msub	w4, w4, w6, w9
  413120:	ldr	w2, [x7, #36]
  413124:	add	w2, w2, #0x1
  413128:	str	w2, [x7, #36]
  41312c:	add	w3, w3, w4
  413130:	sub	w2, w3, w5
  413134:	cmp	x5, w3, uxtw
  413138:	csel	w3, w2, w3, ls  // ls = plast
  41313c:	ubfiz	x2, x3, #1, #32
  413140:	add	x2, x2, w3, uxtw
  413144:	add	x0, x8, x2, lsl #3
  413148:	ldr	x2, [x8, x2, lsl #3]
  41314c:	cbz	x2, 413164 <nftw@plt+0x105e4>
  413150:	cmp	x2, #0x1
  413154:	b.eq	413120 <nftw@plt+0x105a0>  // b.none
  413158:	ldr	x6, [x1]
  41315c:	cmp	x2, x6
  413160:	b.ne	413120 <nftw@plt+0x105a0>  // b.any
  413164:	ret
  413168:	mov	x9, x0
  41316c:	ldr	w0, [x0, #32]
  413170:	add	w0, w0, #0x1
  413174:	str	w0, [x9, #32]
  413178:	ldr	w7, [x9, #40]
  41317c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413180:	add	x0, x0, #0xe38
  413184:	ubfiz	x4, x7, #4, #32
  413188:	add	x3, x0, x4
  41318c:	ldr	w6, [x0, x4]
  413190:	ldr	w8, [x3, #12]
  413194:	mov	w11, w2
  413198:	ldr	w3, [x3, #4]
  41319c:	mul	x3, x3, x11
  4131a0:	lsr	x3, x3, #32
  4131a4:	sub	w5, w2, w3
  4131a8:	add	w3, w3, w5, lsr #1
  4131ac:	lsr	w3, w3, w8
  4131b0:	msub	w3, w3, w6, w2
  4131b4:	ldr	x10, [x9]
  4131b8:	ubfiz	x5, x3, #4, #32
  4131bc:	add	x0, x10, x5
  4131c0:	ldr	x5, [x10, x5]
  4131c4:	cbz	x5, 413284 <nftw@plt+0x10704>
  4131c8:	cmp	x5, #0x1
  4131cc:	b.eq	4131e4 <nftw@plt+0x10664>  // b.none
  4131d0:	ldr	x4, [x1]
  4131d4:	ldr	x13, [x5]
  4131d8:	ldr	x12, [x4]
  4131dc:	cmp	x13, x12
  4131e0:	b.eq	413288 <nftw@plt+0x10708>  // b.none
  4131e4:	ldr	x5, [x9, #8]
  4131e8:	ubfiz	x7, x7, #4, #32
  4131ec:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4131f0:	add	x0, x0, #0xe38
  4131f4:	add	x0, x0, x7
  4131f8:	ldr	w4, [x0, #8]
  4131fc:	mul	x4, x4, x11
  413200:	lsr	x4, x4, #32
  413204:	add	w0, w2, #0x1
  413208:	sub	w2, w2, w4
  41320c:	add	w4, w4, w2, lsr #1
  413210:	lsr	w4, w4, w8
  413214:	sub	w6, w6, #0x2
  413218:	msub	w4, w4, w6, w0
  41321c:	ldr	w2, [x9, #36]
  413220:	add	w2, w2, #0x1
  413224:	str	w2, [x9, #36]
  413228:	add	w3, w3, w4
  41322c:	sub	w2, w3, w5
  413230:	cmp	x5, w3, uxtw
  413234:	csel	w3, w2, w3, ls  // ls = plast
  413238:	ubfiz	x2, x3, #4, #32
  41323c:	add	x0, x10, x2
  413240:	ldr	x2, [x10, x2]
  413244:	cbz	x2, 413284 <nftw@plt+0x10704>
  413248:	cmp	x2, #0x1
  41324c:	b.eq	41321c <nftw@plt+0x1069c>  // b.none
  413250:	ldr	x6, [x1]
  413254:	ldr	x8, [x2]
  413258:	ldr	x7, [x6]
  41325c:	cmp	x8, x7
  413260:	b.ne	41321c <nftw@plt+0x1069c>  // b.any
  413264:	ldr	x8, [x2, #8]
  413268:	ldr	x7, [x6, #8]
  41326c:	cmp	x8, x7
  413270:	b.ne	41321c <nftw@plt+0x1069c>  // b.any
  413274:	ldr	w7, [x2, #16]
  413278:	ldr	w2, [x6, #16]
  41327c:	cmp	w7, w2
  413280:	b.ne	41321c <nftw@plt+0x1069c>  // b.any
  413284:	ret
  413288:	ldr	x13, [x5, #8]
  41328c:	ldr	x12, [x4, #8]
  413290:	cmp	x13, x12
  413294:	b.ne	4131e4 <nftw@plt+0x10664>  // b.any
  413298:	ldr	w5, [x5, #16]
  41329c:	ldr	w4, [x4, #16]
  4132a0:	cmp	w5, w4
  4132a4:	b.ne	4131e4 <nftw@plt+0x10664>  // b.any
  4132a8:	b	413284 <nftw@plt+0x10704>
  4132ac:	stp	x29, x30, [sp, #-96]!
  4132b0:	mov	x29, sp
  4132b4:	stp	x19, x20, [sp, #16]
  4132b8:	stp	x21, x22, [sp, #32]
  4132bc:	stp	x23, x24, [sp, #48]
  4132c0:	stp	x25, x26, [sp, #64]
  4132c4:	mov	x20, x0
  4132c8:	ldr	x25, [x0]
  4132cc:	ldr	w21, [x0, #40]
  4132d0:	ldr	x19, [x0, #8]
  4132d4:	add	x22, x25, x19, lsl #4
  4132d8:	ldr	x1, [x0, #16]
  4132dc:	ldr	x0, [x0, #24]
  4132e0:	sub	x1, x1, x0
  4132e4:	lsl	x0, x1, #1
  4132e8:	cmp	x19, x1, lsl #1
  4132ec:	b.cc	413308 <nftw@plt+0x10788>  // b.lo, b.ul, b.last
  4132f0:	lsl	w1, w1, #3
  4132f4:	cmp	x1, #0x20
  4132f8:	mov	x2, #0x20                  	// #32
  4132fc:	csel	x1, x1, x2, cs  // cs = hs, nlast
  413300:	cmp	x19, x1
  413304:	b.ls	413320 <nftw@plt+0x107a0>  // b.plast
  413308:	bl	416928 <nftw@plt+0x13da8>
  41330c:	mov	w21, w0
  413310:	ubfiz	x1, x21, #4, #32
  413314:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413318:	add	x0, x0, #0xe38
  41331c:	ldr	w19, [x0, x1]
  413320:	ldrb	w0, [x20, #44]
  413324:	cbnz	w0, 413338 <nftw@plt+0x107b8>
  413328:	mov	x1, #0x10                  	// #16
  41332c:	mov	x0, x19
  413330:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  413334:	b	413350 <nftw@plt+0x107d0>
  413338:	mov	x3, #0x0                   	// #0
  41333c:	mov	x2, #0x0                   	// #0
  413340:	mov	x1, #0x0                   	// #0
  413344:	lsl	x0, x19, #4
  413348:	bl	416d70 <nftw@plt+0x141f0>
  41334c:	cbz	x0, 4133a4 <nftw@plt+0x10824>
  413350:	cbz	x19, 413368 <nftw@plt+0x107e8>
  413354:	mov	x1, x0
  413358:	add	x2, x0, x19, lsl #4
  41335c:	str	xzr, [x1], #16
  413360:	cmp	x2, x1
  413364:	b.ne	41335c <nftw@plt+0x107dc>  // b.any
  413368:	str	x0, [x20]
  41336c:	str	x19, [x20, #8]
  413370:	str	w21, [x20, #40]
  413374:	ldr	x0, [x20, #16]
  413378:	ldr	x1, [x20, #24]
  41337c:	sub	x0, x0, x1
  413380:	str	x0, [x20, #16]
  413384:	str	xzr, [x20, #24]
  413388:	mov	x19, x25
  41338c:	mov	x23, #0x8                   	// #8
  413390:	mov	w24, #0x79b9                	// #31161
  413394:	movk	w24, #0x9e37, lsl #16
  413398:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41339c:	add	x21, x21, #0xe38
  4133a0:	b	4133d0 <nftw@plt+0x10850>
  4133a4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4133a8:	add	x2, x2, #0x3b0
  4133ac:	mov	w1, #0x2b5                 	// #693
  4133b0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4133b4:	add	x0, x0, #0x3c0
  4133b8:	bl	408d8c <nftw@plt+0x620c>
  4133bc:	ldp	x0, x1, [x19]
  4133c0:	stp	x0, x1, [x5]
  4133c4:	add	x19, x19, #0x10
  4133c8:	cmp	x22, x19
  4133cc:	b.ls	413518 <nftw@plt+0x10998>  // b.plast
  4133d0:	ldr	x26, [x19]
  4133d4:	cmp	x26, #0x1
  4133d8:	b.ls	4133c4 <nftw@plt+0x10844>  // b.plast
  4133dc:	ldr	x0, [x26]
  4133e0:	str	x0, [sp, #88]
  4133e4:	mov	w2, #0x0                   	// #0
  4133e8:	mov	x1, x23
  4133ec:	add	x0, sp, #0x58
  4133f0:	bl	449eb8 <nftw@plt+0x47338>
  4133f4:	ldr	x1, [x26, #8]
  4133f8:	str	x1, [sp, #88]
  4133fc:	mov	w2, w0
  413400:	mov	x1, x23
  413404:	add	x0, sp, #0x58
  413408:	bl	449eb8 <nftw@plt+0x47338>
  41340c:	ldr	w1, [x26, #16]
  413410:	sub	w3, w24, w1
  413414:	sub	w3, w3, w0
  413418:	eor	w3, w3, w0, lsr #13
  41341c:	sub	w1, w1, w0
  413420:	sub	w1, w1, w3
  413424:	eor	w1, w1, w3, lsl #8
  413428:	sub	w2, w0, w3
  41342c:	sub	w2, w2, w1
  413430:	eor	w2, w2, w1, lsr #13
  413434:	sub	w3, w3, w1
  413438:	sub	w3, w3, w2
  41343c:	eor	w3, w3, w2, lsr #12
  413440:	sub	w0, w1, w2
  413444:	sub	w0, w0, w3
  413448:	eor	w0, w0, w3, lsl #16
  41344c:	sub	w2, w2, w3
  413450:	sub	w2, w2, w0
  413454:	eor	w2, w2, w0, lsr #5
  413458:	sub	w3, w3, w0
  41345c:	sub	w3, w3, w2
  413460:	eor	w3, w3, w2, lsr #3
  413464:	sub	w1, w0, w2
  413468:	sub	w1, w1, w3
  41346c:	eor	w1, w1, w3, lsl #10
  413470:	sub	w2, w2, w3
  413474:	sub	w2, w2, w1
  413478:	eor	w1, w2, w1, lsr #15
  41347c:	ldr	w3, [x20, #40]
  413480:	ubfiz	x2, x3, #4, #32
  413484:	add	x0, x21, x2
  413488:	ldr	w6, [x21, x2]
  41348c:	ldr	w7, [x0, #12]
  413490:	mov	w8, w1
  413494:	ldr	w0, [x0, #4]
  413498:	mul	x0, x0, x8
  41349c:	lsr	x0, x0, #32
  4134a0:	sub	w2, w1, w0
  4134a4:	add	w0, w0, w2, lsr #1
  4134a8:	lsr	w0, w0, w7
  4134ac:	msub	w0, w0, w6, w1
  4134b0:	ldr	x2, [x20]
  4134b4:	ubfiz	x4, x0, #4, #32
  4134b8:	add	x5, x2, x4
  4134bc:	ldr	x4, [x2, x4]
  4134c0:	cbz	x4, 4133bc <nftw@plt+0x1083c>
  4134c4:	ldr	x4, [x20, #8]
  4134c8:	ubfiz	x3, x3, #4, #32
  4134cc:	add	x3, x21, x3
  4134d0:	ldr	w3, [x3, #8]
  4134d4:	mul	x3, x3, x8
  4134d8:	lsr	x3, x3, #32
  4134dc:	add	w5, w1, #0x1
  4134e0:	sub	w1, w1, w3
  4134e4:	add	w1, w3, w1, lsr #1
  4134e8:	lsr	w1, w1, w7
  4134ec:	sub	w6, w6, #0x2
  4134f0:	msub	w1, w1, w6, w5
  4134f4:	add	w0, w0, w1
  4134f8:	sub	w3, w0, w4
  4134fc:	cmp	x4, w0, uxtw
  413500:	csel	w0, w3, w0, ls  // ls = plast
  413504:	ubfiz	x3, x0, #4, #32
  413508:	add	x5, x2, x3
  41350c:	ldr	x3, [x2, x3]
  413510:	cbnz	x3, 4134f4 <nftw@plt+0x10974>
  413514:	b	4133bc <nftw@plt+0x1083c>
  413518:	ldrb	w0, [x20, #44]
  41351c:	cbnz	w0, 413540 <nftw@plt+0x109c0>
  413520:	mov	x0, x25
  413524:	bl	402910 <free@plt>
  413528:	ldp	x19, x20, [sp, #16]
  41352c:	ldp	x21, x22, [sp, #32]
  413530:	ldp	x23, x24, [sp, #48]
  413534:	ldp	x25, x26, [sp, #64]
  413538:	ldp	x29, x30, [sp], #96
  41353c:	ret
  413540:	mov	x0, x25
  413544:	bl	416db8 <nftw@plt+0x14238>
  413548:	b	413528 <nftw@plt+0x109a8>
  41354c:	stp	x29, x30, [sp, #-48]!
  413550:	mov	x29, sp
  413554:	stp	x19, x20, [sp, #16]
  413558:	stp	x21, x22, [sp, #32]
  41355c:	mov	x19, x0
  413560:	mov	x20, x1
  413564:	mov	w22, w2
  413568:	mov	w21, w3
  41356c:	cmp	w3, #0x1
  413570:	b.eq	41361c <nftw@plt+0x10a9c>  // b.none
  413574:	ldr	w0, [x19, #32]
  413578:	add	w0, w0, #0x1
  41357c:	str	w0, [x19, #32]
  413580:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413584:	add	x1, x1, #0xe38
  413588:	ldr	w0, [x19, #40]
  41358c:	lsl	x0, x0, #4
  413590:	add	x3, x1, x0
  413594:	ldr	w2, [x1, x0]
  413598:	ldr	w5, [x3, #12]
  41359c:	mov	w6, w22
  4135a0:	ldr	w1, [x3, #4]
  4135a4:	mul	x1, x1, x6
  4135a8:	lsr	x1, x1, #32
  4135ac:	sub	w4, w22, w1
  4135b0:	add	w4, w1, w4, lsr #1
  4135b4:	lsr	w4, w4, w5
  4135b8:	msub	w4, w4, w2, w22
  4135bc:	ldr	w0, [x3, #8]
  4135c0:	mul	x0, x0, x6
  4135c4:	lsr	x0, x0, #32
  4135c8:	add	w1, w22, #0x1
  4135cc:	sub	w6, w22, w0
  4135d0:	add	w6, w0, w6, lsr #1
  4135d4:	lsr	w6, w6, w5
  4135d8:	sub	w2, w2, #0x2
  4135dc:	msub	w6, w6, w2, w1
  4135e0:	ldr	x5, [x19]
  4135e4:	ubfiz	x0, x4, #4, #32
  4135e8:	add	x9, x5, x0
  4135ec:	ldr	x0, [x5, x0]
  4135f0:	cbz	x0, 413718 <nftw@plt+0x10b98>
  4135f4:	cmp	x0, #0x1
  4135f8:	b.eq	413614 <nftw@plt+0x10a94>  // b.none
  4135fc:	ldr	x1, [x20]
  413600:	ldr	x3, [x0]
  413604:	ldr	x2, [x1]
  413608:	cmp	x3, x2
  41360c:	b.eq	41363c <nftw@plt+0x10abc>  // b.none
  413610:	mov	x9, #0x0                   	// #0
  413614:	ldr	x1, [x19, #8]
  413618:	b	413678 <nftw@plt+0x10af8>
  41361c:	ldr	x0, [x0, #8]
  413620:	add	x0, x0, x0, lsl #1
  413624:	ldr	x1, [x19, #16]
  413628:	cmp	x0, x1, lsl #2
  41362c:	b.hi	413574 <nftw@plt+0x109f4>  // b.pmore
  413630:	mov	x0, x19
  413634:	bl	4132ac <nftw@plt+0x1072c>
  413638:	b	413574 <nftw@plt+0x109f4>
  41363c:	ldr	x3, [x0, #8]
  413640:	ldr	x2, [x1, #8]
  413644:	cmp	x3, x2
  413648:	b.eq	413654 <nftw@plt+0x10ad4>  // b.none
  41364c:	mov	x9, #0x0                   	// #0
  413650:	b	413614 <nftw@plt+0x10a94>
  413654:	ldr	w2, [x0, #16]
  413658:	ldr	w1, [x1, #16]
  41365c:	mov	x0, x9
  413660:	mov	x9, #0x0                   	// #0
  413664:	cmp	w2, w1
  413668:	b.ne	413614 <nftw@plt+0x10a94>  // b.any
  41366c:	b	413700 <nftw@plt+0x10b80>
  413670:	cmp	x9, #0x0
  413674:	csel	x9, x9, x0, ne  // ne = any
  413678:	ldr	w2, [x19, #36]
  41367c:	add	w2, w2, #0x1
  413680:	str	w2, [x19, #36]
  413684:	add	w4, w4, w6
  413688:	sub	w0, w4, w1
  41368c:	cmp	x1, w4, uxtw
  413690:	csel	w4, w0, w4, ls  // ls = plast
  413694:	ubfiz	x2, x4, #4, #32
  413698:	add	x0, x5, x2
  41369c:	ldr	x2, [x5, x2]
  4136a0:	cbz	x2, 4136e4 <nftw@plt+0x10b64>
  4136a4:	cmp	x2, #0x1
  4136a8:	b.eq	413670 <nftw@plt+0x10af0>  // b.none
  4136ac:	ldr	x3, [x20]
  4136b0:	ldr	x8, [x2]
  4136b4:	ldr	x7, [x3]
  4136b8:	cmp	x8, x7
  4136bc:	b.ne	413678 <nftw@plt+0x10af8>  // b.any
  4136c0:	ldr	x8, [x2, #8]
  4136c4:	ldr	x7, [x3, #8]
  4136c8:	cmp	x8, x7
  4136cc:	b.ne	413678 <nftw@plt+0x10af8>  // b.any
  4136d0:	ldr	w7, [x2, #16]
  4136d4:	ldr	w2, [x3, #16]
  4136d8:	cmp	w7, w2
  4136dc:	b.ne	413678 <nftw@plt+0x10af8>  // b.any
  4136e0:	b	413700 <nftw@plt+0x10b80>
  4136e4:	cbz	w21, 413710 <nftw@plt+0x10b90>
  4136e8:	cbz	x9, 41371c <nftw@plt+0x10b9c>
  4136ec:	ldr	x0, [x19, #24]
  4136f0:	sub	x0, x0, #0x1
  4136f4:	str	x0, [x19, #24]
  4136f8:	str	xzr, [x9]
  4136fc:	mov	x0, x9
  413700:	ldp	x19, x20, [sp, #16]
  413704:	ldp	x21, x22, [sp, #32]
  413708:	ldp	x29, x30, [sp], #48
  41370c:	ret
  413710:	mov	x0, x2
  413714:	b	413700 <nftw@plt+0x10b80>
  413718:	cbz	w21, 413700 <nftw@plt+0x10b80>
  41371c:	ldr	x0, [x19, #16]
  413720:	add	x0, x0, #0x1
  413724:	str	x0, [x19, #16]
  413728:	ubfiz	x0, x4, #4, #32
  41372c:	add	x0, x5, x0
  413730:	b	413700 <nftw@plt+0x10b80>
  413734:	stp	x29, x30, [sp, #-64]!
  413738:	mov	x29, sp
  41373c:	stp	x19, x20, [sp, #16]
  413740:	stp	x21, x22, [sp, #32]
  413744:	str	x23, [sp, #48]
  413748:	mov	x19, x0
  41374c:	ldr	x21, [x0]
  413750:	ldr	w23, [x0, #40]
  413754:	ldr	x22, [x0, #8]
  413758:	add	x20, x22, x22, lsl #1
  41375c:	add	x20, x21, x20, lsl #3
  413760:	ldr	x1, [x0, #16]
  413764:	ldr	x0, [x0, #24]
  413768:	sub	x1, x1, x0
  41376c:	lsl	x0, x1, #1
  413770:	cmp	x22, x1, lsl #1
  413774:	b.cc	413790 <nftw@plt+0x10c10>  // b.lo, b.ul, b.last
  413778:	lsl	w1, w1, #3
  41377c:	cmp	x1, #0x20
  413780:	mov	x2, #0x20                  	// #32
  413784:	csel	x1, x1, x2, cs  // cs = hs, nlast
  413788:	cmp	x22, x1
  41378c:	b.ls	4137a8 <nftw@plt+0x10c28>  // b.plast
  413790:	bl	416928 <nftw@plt+0x13da8>
  413794:	mov	w23, w0
  413798:	ubfiz	x1, x23, #4, #32
  41379c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4137a0:	add	x0, x0, #0xe38
  4137a4:	ldr	w22, [x0, x1]
  4137a8:	ldrb	w0, [x19, #44]
  4137ac:	cbnz	w0, 4137c0 <nftw@plt+0x10c40>
  4137b0:	mov	x1, #0x18                  	// #24
  4137b4:	mov	x0, x22
  4137b8:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  4137bc:	b	4137dc <nftw@plt+0x10c5c>
  4137c0:	add	x0, x22, x22, lsl #1
  4137c4:	mov	x3, #0x0                   	// #0
  4137c8:	mov	x2, #0x0                   	// #0
  4137cc:	mov	x1, #0x0                   	// #0
  4137d0:	lsl	x0, x0, #3
  4137d4:	bl	416d70 <nftw@plt+0x141f0>
  4137d8:	cbz	x0, 413828 <nftw@plt+0x10ca8>
  4137dc:	cbz	x22, 4137f8 <nftw@plt+0x10c78>
  4137e0:	mov	x1, x0
  4137e4:	add	x2, x22, x22, lsl #1
  4137e8:	add	x2, x0, x2, lsl #3
  4137ec:	str	xzr, [x1], #24
  4137f0:	cmp	x1, x2
  4137f4:	b.ne	4137ec <nftw@plt+0x10c6c>  // b.any
  4137f8:	str	x0, [x19]
  4137fc:	str	x22, [x19, #8]
  413800:	str	w23, [x19, #40]
  413804:	ldr	x0, [x19, #16]
  413808:	ldr	x1, [x19, #24]
  41380c:	sub	x0, x0, x1
  413810:	str	x0, [x19, #16]
  413814:	str	xzr, [x19, #24]
  413818:	mov	x6, x21
  41381c:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413820:	add	x9, x9, #0xe38
  413824:	b	41385c <nftw@plt+0x10cdc>
  413828:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41382c:	add	x2, x2, #0x3b0
  413830:	mov	w1, #0x2b5                 	// #693
  413834:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413838:	add	x0, x0, #0x3c0
  41383c:	bl	408d8c <nftw@plt+0x620c>
  413840:	ldp	x0, x1, [x6]
  413844:	stp	x0, x1, [x7]
  413848:	ldr	x0, [x6, #16]
  41384c:	str	x0, [x7, #16]
  413850:	add	x6, x6, #0x18
  413854:	cmp	x20, x6
  413858:	b.ls	413910 <nftw@plt+0x10d90>  // b.plast
  41385c:	ldr	x0, [x6]
  413860:	cmp	x0, #0x1
  413864:	b.ls	413850 <nftw@plt+0x10cd0>  // b.plast
  413868:	asr	x3, x0, #3
  41386c:	ldr	w8, [x19, #40]
  413870:	ubfiz	x2, x8, #4, #32
  413874:	add	x1, x9, x2
  413878:	ldr	w10, [x9, x2]
  41387c:	ldr	w11, [x1, #12]
  413880:	ubfx	x0, x0, #3, #32
  413884:	ldr	w1, [x1, #4]
  413888:	mul	x1, x1, x0
  41388c:	lsr	x1, x1, #32
  413890:	sub	w2, w3, w1
  413894:	add	w1, w1, w2, lsr #1
  413898:	lsr	w1, w1, w11
  41389c:	msub	w1, w1, w10, w3
  4138a0:	ldr	x4, [x19]
  4138a4:	ubfiz	x2, x1, #1, #32
  4138a8:	add	x2, x2, w1, uxtw
  4138ac:	add	x7, x4, x2, lsl #3
  4138b0:	ldr	x2, [x4, x2, lsl #3]
  4138b4:	cbz	x2, 413840 <nftw@plt+0x10cc0>
  4138b8:	ldr	x5, [x19, #8]
  4138bc:	ubfiz	x8, x8, #4, #32
  4138c0:	add	x8, x9, x8
  4138c4:	ldr	w2, [x8, #8]
  4138c8:	mul	x0, x2, x0
  4138cc:	lsr	x0, x0, #32
  4138d0:	add	w2, w3, #0x1
  4138d4:	sub	w3, w3, w0
  4138d8:	add	w3, w0, w3, lsr #1
  4138dc:	lsr	w3, w3, w11
  4138e0:	sub	w10, w10, #0x2
  4138e4:	msub	w3, w3, w10, w2
  4138e8:	add	w1, w1, w3
  4138ec:	sub	w0, w1, w5
  4138f0:	cmp	x5, w1, uxtw
  4138f4:	csel	w1, w0, w1, ls  // ls = plast
  4138f8:	ubfiz	x2, x1, #1, #32
  4138fc:	add	x2, x2, w1, uxtw
  413900:	add	x7, x4, x2, lsl #3
  413904:	ldr	x0, [x4, x2, lsl #3]
  413908:	cbnz	x0, 4138e8 <nftw@plt+0x10d68>
  41390c:	b	413840 <nftw@plt+0x10cc0>
  413910:	ldrb	w0, [x19, #44]
  413914:	cbnz	w0, 413934 <nftw@plt+0x10db4>
  413918:	mov	x0, x21
  41391c:	bl	402910 <free@plt>
  413920:	ldp	x19, x20, [sp, #16]
  413924:	ldp	x21, x22, [sp, #32]
  413928:	ldr	x23, [sp, #48]
  41392c:	ldp	x29, x30, [sp], #64
  413930:	ret
  413934:	mov	x0, x21
  413938:	bl	416db8 <nftw@plt+0x14238>
  41393c:	b	413920 <nftw@plt+0x10da0>
  413940:	stp	x29, x30, [sp, #-48]!
  413944:	mov	x29, sp
  413948:	stp	x19, x20, [sp, #16]
  41394c:	stp	x21, x22, [sp, #32]
  413950:	mov	x19, x0
  413954:	mov	x20, x1
  413958:	mov	w22, w2
  41395c:	mov	w21, w3
  413960:	cmp	w3, #0x1
  413964:	b.eq	413a20 <nftw@plt+0x10ea0>  // b.none
  413968:	ldr	w0, [x19, #32]
  41396c:	add	w0, w0, #0x1
  413970:	str	w0, [x19, #32]
  413974:	ldr	w2, [x19, #40]
  413978:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41397c:	add	x0, x0, #0xe38
  413980:	ubfiz	x3, x2, #4, #32
  413984:	add	x1, x0, x3
  413988:	ldr	w8, [x0, x3]
  41398c:	ldr	w9, [x1, #12]
  413990:	mov	w5, w22
  413994:	ldr	w0, [x1, #4]
  413998:	mul	x0, x0, x5
  41399c:	lsr	x0, x0, #32
  4139a0:	sub	w4, w22, w0
  4139a4:	add	w4, w0, w4, lsr #1
  4139a8:	lsr	w4, w4, w9
  4139ac:	msub	w4, w4, w8, w22
  4139b0:	ldr	x7, [x19]
  4139b4:	ubfiz	x0, x4, #1, #32
  4139b8:	add	x0, x0, w4, uxtw
  4139bc:	lsl	x0, x0, #3
  4139c0:	add	x6, x7, x0
  4139c4:	ldr	x0, [x7, x0]
  4139c8:	cbz	x0, 413acc <nftw@plt+0x10f4c>
  4139cc:	cmp	x0, #0x1
  4139d0:	b.eq	4139e4 <nftw@plt+0x10e64>  // b.none
  4139d4:	ldr	x1, [x20]
  4139d8:	cmp	x0, x1
  4139dc:	b.eq	413abc <nftw@plt+0x10f3c>  // b.none
  4139e0:	mov	x6, #0x0                   	// #0
  4139e4:	ubfiz	x3, x2, #4, #32
  4139e8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4139ec:	add	x2, x2, #0xe38
  4139f0:	add	x2, x2, x3
  4139f4:	ldr	w0, [x2, #8]
  4139f8:	mul	x0, x0, x5
  4139fc:	lsr	x0, x0, #32
  413a00:	ldr	x5, [x19, #8]
  413a04:	add	w2, w22, #0x1
  413a08:	sub	w1, w22, w0
  413a0c:	add	w1, w0, w1, lsr #1
  413a10:	lsr	w1, w1, w9
  413a14:	sub	w8, w8, #0x2
  413a18:	msub	w1, w1, w8, w2
  413a1c:	b	413a48 <nftw@plt+0x10ec8>
  413a20:	ldr	x0, [x0, #8]
  413a24:	add	x0, x0, x0, lsl #1
  413a28:	ldr	x1, [x19, #16]
  413a2c:	cmp	x0, x1, lsl #2
  413a30:	b.hi	413968 <nftw@plt+0x10de8>  // b.pmore
  413a34:	mov	x0, x19
  413a38:	bl	413734 <nftw@plt+0x10bb4>
  413a3c:	b	413968 <nftw@plt+0x10de8>
  413a40:	cmp	x6, #0x0
  413a44:	csel	x6, x6, x0, ne  // ne = any
  413a48:	ldr	w2, [x19, #36]
  413a4c:	add	w2, w2, #0x1
  413a50:	str	w2, [x19, #36]
  413a54:	add	w4, w4, w1
  413a58:	sub	w0, w4, w5
  413a5c:	cmp	x5, w4, uxtw
  413a60:	csel	w4, w0, w4, ls  // ls = plast
  413a64:	ubfiz	x2, x4, #1, #32
  413a68:	add	x2, x2, w4, uxtw
  413a6c:	add	x0, x7, x2, lsl #3
  413a70:	ldr	x2, [x7, x2, lsl #3]
  413a74:	cbz	x2, 413a9c <nftw@plt+0x10f1c>
  413a78:	cmp	x2, #0x1
  413a7c:	b.eq	413a40 <nftw@plt+0x10ec0>  // b.none
  413a80:	ldr	x3, [x20]
  413a84:	cmp	x2, x3
  413a88:	b.ne	413a48 <nftw@plt+0x10ec8>  // b.any
  413a8c:	ldp	x19, x20, [sp, #16]
  413a90:	ldp	x21, x22, [sp, #32]
  413a94:	ldp	x29, x30, [sp], #48
  413a98:	ret
  413a9c:	cbz	w21, 413ac4 <nftw@plt+0x10f44>
  413aa0:	cbz	x6, 413ad0 <nftw@plt+0x10f50>
  413aa4:	ldr	x0, [x19, #24]
  413aa8:	sub	x0, x0, #0x1
  413aac:	str	x0, [x19, #24]
  413ab0:	str	xzr, [x6]
  413ab4:	mov	x0, x6
  413ab8:	b	413a8c <nftw@plt+0x10f0c>
  413abc:	mov	x0, x6
  413ac0:	b	413a8c <nftw@plt+0x10f0c>
  413ac4:	mov	x0, x2
  413ac8:	b	413a8c <nftw@plt+0x10f0c>
  413acc:	cbz	w21, 413a8c <nftw@plt+0x10f0c>
  413ad0:	ldr	x0, [x19, #16]
  413ad4:	add	x0, x0, #0x1
  413ad8:	str	x0, [x19, #16]
  413adc:	ubfiz	x0, x4, #1, #32
  413ae0:	add	x0, x0, w4, uxtw
  413ae4:	add	x0, x7, x0, lsl #3
  413ae8:	b	413a8c <nftw@plt+0x10f0c>
  413aec:	ldr	x1, [x0]
  413af0:	ldr	x3, [x0, #8]
  413af4:	cmp	x1, x3
  413af8:	b.cs	413b18 <nftw@plt+0x10f98>  // b.hs, b.nlast
  413afc:	ldr	x2, [x1]
  413b00:	cmp	x2, #0x1
  413b04:	b.hi	413b20 <nftw@plt+0x10fa0>  // b.pmore
  413b08:	add	x1, x1, #0x10
  413b0c:	str	x1, [x0]
  413b10:	cmp	x1, x3
  413b14:	b.cc	413afc <nftw@plt+0x10f7c>  // b.lo, b.ul, b.last
  413b18:	str	xzr, [x0]
  413b1c:	str	xzr, [x0, #8]
  413b20:	ret
  413b24:	stp	x29, x30, [sp, #-64]!
  413b28:	mov	x29, sp
  413b2c:	stp	x19, x20, [sp, #16]
  413b30:	str	x21, [sp, #32]
  413b34:	mov	x19, x0
  413b38:	ldr	x0, [x0, #40]
  413b3c:	ldr	x1, [x0]
  413b40:	ldr	x0, [x0, #8]
  413b44:	add	x0, x1, x0, lsl #4
  413b48:	str	x1, [sp, #48]
  413b4c:	str	x0, [sp, #56]
  413b50:	add	x0, sp, #0x30
  413b54:	bl	413aec <nftw@plt+0x10f6c>
  413b58:	mov	x21, #0x20                  	// #32
  413b5c:	mov	x20, #0x38                  	// #56
  413b60:	b	413c68 <nftw@plt+0x110e8>
  413b64:	ldr	x0, [sp, #56]
  413b68:	cbnz	x0, 413c70 <nftw@plt+0x110f0>
  413b6c:	ldr	x20, [x19, #40]
  413b70:	cbz	x20, 413ba8 <nftw@plt+0x11028>
  413b74:	ldr	x0, [x20, #8]
  413b78:	sub	x1, x0, #0x1
  413b7c:	cbz	x0, 413b8c <nftw@plt+0x1100c>
  413b80:	sub	x1, x1, #0x1
  413b84:	cmp	x0, x1
  413b88:	b.hi	413b80 <nftw@plt+0x11000>  // b.pmore
  413b8c:	ldrb	w0, [x20, #44]
  413b90:	cbnz	w0, 413c7c <nftw@plt+0x110fc>
  413b94:	ldr	x0, [x20]
  413b98:	bl	402910 <free@plt>
  413b9c:	mov	x1, #0x30                  	// #48
  413ba0:	mov	x0, x20
  413ba4:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  413ba8:	ldr	x20, [x19, #48]
  413bac:	cbz	x20, 413be8 <nftw@plt+0x11068>
  413bb0:	ldr	x0, [x20, #8]
  413bb4:	sub	x1, x0, #0x1
  413bb8:	cbz	x0, 413bcc <nftw@plt+0x1104c>
  413bbc:	sub	x1, x1, #0x1
  413bc0:	ldr	x2, [x20, #8]
  413bc4:	cmp	x2, x1
  413bc8:	b.hi	413bbc <nftw@plt+0x1103c>  // b.pmore
  413bcc:	ldrb	w0, [x20, #44]
  413bd0:	cbnz	w0, 413c88 <nftw@plt+0x11108>
  413bd4:	ldr	x0, [x20]
  413bd8:	bl	402910 <free@plt>
  413bdc:	mov	x1, #0x30                  	// #48
  413be0:	mov	x0, x20
  413be4:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  413be8:	ldr	x19, [x19]
  413bec:	cbz	x19, 413c28 <nftw@plt+0x110a8>
  413bf0:	ldr	x1, [x19, #8]
  413bf4:	sub	x0, x1, #0x1
  413bf8:	cbz	x1, 413c0c <nftw@plt+0x1108c>
  413bfc:	sub	x0, x0, #0x1
  413c00:	ldr	x1, [x19, #8]
  413c04:	cmp	x1, x0
  413c08:	b.hi	413bfc <nftw@plt+0x1107c>  // b.pmore
  413c0c:	ldrb	w0, [x19, #44]
  413c10:	cbnz	w0, 413c94 <nftw@plt+0x11114>
  413c14:	ldr	x0, [x19]
  413c18:	bl	402910 <free@plt>
  413c1c:	mov	x1, #0x30                  	// #48
  413c20:	mov	x0, x19
  413c24:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  413c28:	ldp	x19, x20, [sp, #16]
  413c2c:	ldr	x21, [sp, #32]
  413c30:	ldp	x29, x30, [sp], #64
  413c34:	ret
  413c38:	mov	x1, x21
  413c3c:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  413c40:	ldr	x1, [sp, #48]
  413c44:	ldr	x0, [x1, #8]
  413c48:	cbz	x0, 413c54 <nftw@plt+0x110d4>
  413c4c:	mov	x1, x20
  413c50:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  413c54:	ldr	x1, [sp, #48]
  413c58:	add	x1, x1, #0x10
  413c5c:	str	x1, [sp, #48]
  413c60:	add	x0, sp, #0x30
  413c64:	bl	413aec <nftw@plt+0x10f6c>
  413c68:	ldr	x1, [sp, #48]
  413c6c:	cbz	x1, 413b64 <nftw@plt+0x10fe4>
  413c70:	ldr	x0, [x1]
  413c74:	cbnz	x0, 413c38 <nftw@plt+0x110b8>
  413c78:	b	413c40 <nftw@plt+0x110c0>
  413c7c:	ldr	x0, [x20]
  413c80:	bl	416db8 <nftw@plt+0x14238>
  413c84:	b	413b9c <nftw@plt+0x1101c>
  413c88:	ldr	x0, [x20]
  413c8c:	bl	416db8 <nftw@plt+0x14238>
  413c90:	b	413bdc <nftw@plt+0x1105c>
  413c94:	ldr	x0, [x19]
  413c98:	bl	416db8 <nftw@plt+0x14238>
  413c9c:	b	413c1c <nftw@plt+0x1109c>
  413ca0:	stp	x29, x30, [sp, #-32]!
  413ca4:	mov	x29, sp
  413ca8:	stp	x19, x20, [sp, #16]
  413cac:	mov	x19, x0
  413cb0:	ldr	x0, [x0, #16]
  413cb4:	bl	402820 <feof@plt>
  413cb8:	mov	w1, #0x0                   	// #0
  413cbc:	cbz	w0, 413cd0 <nftw@plt+0x11150>
  413cc0:	mov	w0, w1
  413cc4:	ldp	x19, x20, [sp, #16]
  413cc8:	ldp	x29, x30, [sp], #32
  413ccc:	ret
  413cd0:	ldr	x0, [x19, #16]
  413cd4:	bl	402b70 <ferror@plt>
  413cd8:	mov	w1, #0x0                   	// #0
  413cdc:	cbnz	w0, 413cc0 <nftw@plt+0x11140>
  413ce0:	ldr	x0, [x19, #32]
  413ce4:	ldr	x1, [x19, #40]
  413ce8:	cmp	x1, x0
  413cec:	b.ne	413d14 <nftw@plt+0x11194>  // b.any
  413cf0:	lsl	x20, x0, #1
  413cf4:	cmp	x0, #0x0
  413cf8:	mov	x0, #0x1000                	// #4096
  413cfc:	csel	x20, x20, x0, ne  // ne = any
  413d00:	mov	x1, x20
  413d04:	ldr	x0, [x19, #24]
  413d08:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  413d0c:	str	x0, [x19, #24]
  413d10:	str	x20, [x19, #32]
  413d14:	ldr	x0, [x19, #40]
  413d18:	ldr	x2, [x19, #32]
  413d1c:	ldr	x4, [x19, #24]
  413d20:	ldr	x3, [x19, #16]
  413d24:	sub	x2, x2, x0
  413d28:	mov	x1, #0x1                   	// #1
  413d2c:	add	x0, x4, x0
  413d30:	bl	4028d0 <fread@plt>
  413d34:	mov	x20, x0
  413d38:	ldr	x0, [x19, #16]
  413d3c:	bl	402b70 <ferror@plt>
  413d40:	mov	w1, #0x0                   	// #0
  413d44:	cbnz	w0, 413cc0 <nftw@plt+0x11140>
  413d48:	ldr	x0, [x19, #40]
  413d4c:	add	x0, x0, x20
  413d50:	str	x0, [x19, #40]
  413d54:	cmp	x20, #0x0
  413d58:	cset	w1, ne  // ne = any
  413d5c:	b	413cc0 <nftw@plt+0x11140>
  413d60:	stp	x29, x30, [sp, #-112]!
  413d64:	mov	x29, sp
  413d68:	stp	x19, x20, [sp, #16]
  413d6c:	stp	x21, x22, [sp, #32]
  413d70:	stp	x23, x24, [sp, #48]
  413d74:	mov	x21, x8
  413d78:	mov	w19, w0
  413d7c:	and	w23, w1, #0xff
  413d80:	mov	w20, w2
  413d84:	mov	x22, #0x0                   	// #0
  413d88:	tbnz	w0, #31, 413dfc <nftw@plt+0x1127c>
  413d8c:	stp	xzr, xzr, [sp, #80]
  413d90:	stp	xzr, xzr, [sp, #96]
  413d94:	cmp	w19, #0x1
  413d98:	b.ls	413ee4 <nftw@plt+0x11364>  // b.plast
  413d9c:	mov	w2, #0x0                   	// #0
  413da0:	cbz	w23, 413e24 <nftw@plt+0x112a4>
  413da4:	add	x3, sp, #0x48
  413da8:	mov	w1, w19
  413dac:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  413db0:	ldr	x0, [x0, #2296]
  413db4:	bl	42c270 <nftw@plt+0x296f0>
  413db8:	mov	w19, w0
  413dbc:	cmp	w20, #0x1
  413dc0:	b.eq	413ea8 <nftw@plt+0x11328>  // b.none
  413dc4:	cmp	w20, #0x2
  413dc8:	b.ne	413e44 <nftw@plt+0x112c4>  // b.any
  413dcc:	mov	w1, w0
  413dd0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  413dd4:	ldr	x0, [x0, #2296]
  413dd8:	bl	42bef8 <nftw@plt+0x29378>
  413ddc:	lsr	x0, x0, #32
  413de0:	cmp	w19, w0
  413de4:	b.eq	413e48 <nftw@plt+0x112c8>  // b.none
  413de8:	mov	x8, x21
  413dec:	mov	w2, #0x2                   	// #2
  413df0:	mov	w1, w23
  413df4:	bl	413d60 <nftw@plt+0x111e0>
  413df8:	b	413e7c <nftw@plt+0x112fc>
  413dfc:	adrp	x24, 48e000 <__environ@@GLIBC_2.17+0xa68>
  413e00:	mov	w1, w0
  413e04:	ldr	x0, [x24, #2296]
  413e08:	bl	42b2b4 <nftw@plt+0x28734>
  413e0c:	mov	x22, x0
  413e10:	mov	w1, w19
  413e14:	ldr	x0, [x24, #2296]
  413e18:	bl	42b2d0 <nftw@plt+0x28750>
  413e1c:	mov	w19, w0
  413e20:	b	413d8c <nftw@plt+0x1120c>
  413e24:	mov	x2, #0x0                   	// #0
  413e28:	mov	w1, w19
  413e2c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  413e30:	ldr	x0, [x0, #2296]
  413e34:	bl	42c864 <nftw@plt+0x29ce4>
  413e38:	mov	w19, w0
  413e3c:	mov	w2, #0x1                   	// #1
  413e40:	b	413da4 <nftw@plt+0x11224>
  413e44:	cbnz	w20, 413e90 <nftw@plt+0x11310>
  413e48:	add	x8, sp, #0x50
  413e4c:	mov	w2, w19
  413e50:	ldr	x1, [sp, #72]
  413e54:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  413e58:	ldr	x0, [x0, #2296]
  413e5c:	bl	42c974 <nftw@plt+0x29df4>
  413e60:	str	x22, [sp, #96]
  413e64:	cmp	w19, #0x1
  413e68:	b.ls	413ee8 <nftw@plt+0x11368>  // b.plast
  413e6c:	ldp	x0, x1, [sp, #80]
  413e70:	stp	x0, x1, [x21]
  413e74:	ldp	x0, x1, [sp, #96]
  413e78:	stp	x0, x1, [x21, #16]
  413e7c:	ldp	x19, x20, [sp, #16]
  413e80:	ldp	x21, x22, [sp, #32]
  413e84:	ldp	x23, x24, [sp, #48]
  413e88:	ldp	x29, x30, [sp], #112
  413e8c:	ret
  413e90:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413e94:	add	x2, x2, #0x3d8
  413e98:	mov	w1, #0xc7                  	// #199
  413e9c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413ea0:	add	x0, x0, #0x3f0
  413ea4:	bl	408d8c <nftw@plt+0x620c>
  413ea8:	mov	w1, w0
  413eac:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  413eb0:	ldr	x0, [x0, #2296]
  413eb4:	bl	42bef8 <nftw@plt+0x29378>
  413eb8:	cmp	w19, w0
  413ebc:	b.eq	413e48 <nftw@plt+0x112c8>  // b.none
  413ec0:	mov	x8, x21
  413ec4:	mov	w2, #0x1                   	// #1
  413ec8:	mov	w1, w23
  413ecc:	bl	413d60 <nftw@plt+0x111e0>
  413ed0:	b	413e7c <nftw@plt+0x112fc>
  413ed4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  413ed8:	add	x0, x0, #0x6c0
  413edc:	bl	402b10 <gettext@plt>
  413ee0:	b	413ef0 <nftw@plt+0x11370>
  413ee4:	str	x22, [sp, #96]
  413ee8:	mov	x0, #0x0                   	// #0
  413eec:	cbnz	w19, 413ed4 <nftw@plt+0x11354>
  413ef0:	str	x0, [sp, #80]
  413ef4:	b	413e6c <nftw@plt+0x112ec>
  413ef8:	stp	x29, x30, [sp, #-48]!
  413efc:	mov	x29, sp
  413f00:	stp	x19, x20, [sp, #16]
  413f04:	str	x21, [sp, #32]
  413f08:	mov	x19, x0
  413f0c:	mov	w20, w2
  413f10:	mov	w21, w3
  413f14:	mov	x2, x1
  413f18:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413f1c:	add	x1, x1, #0x8a8
  413f20:	bl	402b30 <fprintf@plt>
  413f24:	mov	w3, w21
  413f28:	mov	w2, w20
  413f2c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413f30:	add	x1, x1, #0x408
  413f34:	mov	x0, x19
  413f38:	bl	402b30 <fprintf@plt>
  413f3c:	mov	x1, x19
  413f40:	mov	w0, #0xa                   	// #10
  413f44:	bl	4025e0 <fputc@plt>
  413f48:	ldp	x19, x20, [sp, #16]
  413f4c:	ldr	x21, [sp, #32]
  413f50:	ldp	x29, x30, [sp], #48
  413f54:	ret
  413f58:	stp	x29, x30, [sp, #-80]!
  413f5c:	mov	x29, sp
  413f60:	stp	x19, x20, [sp, #16]
  413f64:	stp	x21, x22, [sp, #32]
  413f68:	stp	x23, x24, [sp, #48]
  413f6c:	mov	x20, x0
  413f70:	mov	x22, x2
  413f74:	mov	w23, w3
  413f78:	mov	w21, w4
  413f7c:	mov	w24, w5
  413f80:	mov	w3, #0x20                  	// #32
  413f84:	mov	w2, w1
  413f88:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  413f8c:	add	x1, x1, #0x430
  413f90:	bl	402b30 <fprintf@plt>
  413f94:	mov	x1, x20
  413f98:	mov	w0, #0x7c                  	// #124
  413f9c:	bl	4025e0 <fputc@plt>
  413fa0:	cmp	w21, #0x1
  413fa4:	b.le	413ff8 <nftw@plt+0x11478>
  413fa8:	str	x25, [sp, #64]
  413fac:	mov	w19, #0x1                   	// #1
  413fb0:	mov	w25, #0x6667                	// #26215
  413fb4:	movk	w25, #0x6666, lsl #16
  413fb8:	ldrb	w0, [x22, #7]
  413fbc:	lsl	w0, w19, w0
  413fc0:	add	w0, w0, w23
  413fc4:	udiv	w0, w0, w24
  413fc8:	smull	x1, w0, w25
  413fcc:	asr	x1, x1, #34
  413fd0:	sub	w1, w1, w0, asr #31
  413fd4:	add	w1, w1, w1, lsl #2
  413fd8:	sub	w0, w0, w1, lsl #1
  413fdc:	mov	x1, x20
  413fe0:	add	w0, w0, #0x30
  413fe4:	bl	4025e0 <fputc@plt>
  413fe8:	add	w19, w19, #0x1
  413fec:	cmp	w21, w19
  413ff0:	b.ne	413fb8 <nftw@plt+0x11438>  // b.any
  413ff4:	ldr	x25, [sp, #64]
  413ff8:	mov	x1, x20
  413ffc:	mov	w0, #0xa                   	// #10
  414000:	bl	4025e0 <fputc@plt>
  414004:	ldp	x19, x20, [sp, #16]
  414008:	ldp	x21, x22, [sp, #32]
  41400c:	ldp	x23, x24, [sp, #48]
  414010:	ldp	x29, x30, [sp], #80
  414014:	ret
  414018:	stp	x29, x30, [sp, #-112]!
  41401c:	mov	x29, sp
  414020:	stp	x19, x20, [sp, #16]
  414024:	stp	x21, x22, [sp, #32]
  414028:	stp	x23, x24, [sp, #48]
  41402c:	mov	x19, x0
  414030:	mov	x24, x1
  414034:	mov	x21, x2
  414038:	ldr	x0, [x0, #40]
  41403c:	cbz	x0, 41411c <nftw@plt+0x1159c>
  414040:	ldr	x1, [x19, #32]
  414044:	cmp	x0, x1
  414048:	b.eq	41411c <nftw@plt+0x1159c>  // b.none
  41404c:	sub	x0, x0, #0x1
  414050:	ldr	x1, [x19, #48]
  414054:	cmp	x1, x0
  414058:	b.cs	41411c <nftw@plt+0x1159c>  // b.hs, b.nlast
  41405c:	ldr	x0, [x19, #48]
  414060:	ldr	x2, [x19, #40]
  414064:	subs	x2, x2, x0
  414068:	b.eq	4144dc <nftw@plt+0x1195c>  // b.none
  41406c:	ldr	x22, [x19, #24]
  414070:	add	x22, x22, x0
  414074:	mov	w1, #0xa                   	// #10
  414078:	mov	x0, x22
  41407c:	bl	4029e0 <memchr@plt>
  414080:	mov	x20, x0
  414084:	cbz	x0, 414128 <nftw@plt+0x115a8>
  414088:	add	x23, x0, #0x1
  41408c:	strb	wzr, [x19, #72]
  414090:	ldr	x0, [x19, #16]
  414094:	bl	402b70 <ferror@plt>
  414098:	mov	w1, #0x0                   	// #0
  41409c:	cbnz	w0, 414104 <nftw@plt+0x11584>
  4140a0:	stp	x25, x26, [sp, #64]
  4140a4:	sub	x25, x20, x22
  4140a8:	ldr	x1, [x19, #48]
  4140ac:	ldr	x0, [x19, #40]
  4140b0:	cmp	x1, x0
  4140b4:	b.cs	4140bc <nftw@plt+0x1153c>  // b.hs, b.nlast
  4140b8:	str	x22, [x24]
  4140bc:	ldr	x22, [x19, #56]
  4140c0:	add	x22, x22, #0x1
  4140c4:	str	x22, [x19, #56]
  4140c8:	ldr	x0, [x19, #64]
  4140cc:	cmp	x22, x0
  4140d0:	b.hi	4140e8 <nftw@plt+0x11568>  // b.pmore
  4140d4:	ldr	x24, [x19, #80]
  4140d8:	cbz	x24, 4141e8 <nftw@plt+0x11668>
  4140dc:	ldr	w1, [x24, #4]
  4140e0:	cmp	w1, #0x63
  4140e4:	b.ls	4144f0 <nftw@plt+0x11970>  // b.plast
  4140e8:	cbz	x23, 4144d4 <nftw@plt+0x11954>
  4140ec:	ldr	x0, [x19, #24]
  4140f0:	sub	x23, x23, x0
  4140f4:	str	x23, [x19, #48]
  4140f8:	str	x25, [x21]
  4140fc:	mov	w1, #0x1                   	// #1
  414100:	ldp	x25, x26, [sp, #64]
  414104:	mov	w0, w1
  414108:	ldp	x19, x20, [sp, #16]
  41410c:	ldp	x21, x22, [sp, #32]
  414110:	ldp	x23, x24, [sp, #48]
  414114:	ldp	x29, x30, [sp], #112
  414118:	ret
  41411c:	mov	x0, x19
  414120:	bl	413ca0 <nftw@plt+0x11120>
  414124:	b	41405c <nftw@plt+0x114dc>
  414128:	mov	w23, #0xa                   	// #10
  41412c:	b	414164 <nftw@plt+0x115e4>
  414130:	mov	x0, x19
  414134:	bl	413ca0 <nftw@plt+0x11120>
  414138:	and	w0, w0, #0xff
  41413c:	cbz	w0, 414188 <nftw@plt+0x11608>
  414140:	ldr	x0, [x19, #48]
  414144:	ldr	x22, [x19, #24]
  414148:	add	x22, x22, x0
  41414c:	ldr	x2, [x19, #40]
  414150:	sub	x2, x2, x0
  414154:	mov	w1, w23
  414158:	mov	x0, x22
  41415c:	bl	4029e0 <memchr@plt>
  414160:	cbnz	x0, 4141bc <nftw@plt+0x1163c>
  414164:	ldr	x0, [x19, #40]
  414168:	cbz	x0, 414130 <nftw@plt+0x115b0>
  41416c:	ldr	x1, [x19, #32]
  414170:	cmp	x0, x1
  414174:	b.eq	414130 <nftw@plt+0x115b0>  // b.none
  414178:	sub	x0, x0, #0x1
  41417c:	ldr	x1, [x19, #48]
  414180:	cmp	x1, x0
  414184:	b.cs	414130 <nftw@plt+0x115b0>  // b.hs, b.nlast
  414188:	stp	x25, x26, [sp, #64]
  41418c:	ldr	x23, [x19, #24]
  414190:	ldr	x25, [x19, #40]
  414194:	mov	w0, #0x1                   	// #1
  414198:	strb	w0, [x19, #72]
  41419c:	ldr	x0, [x19, #16]
  4141a0:	bl	402b70 <ferror@plt>
  4141a4:	cbnz	w0, 4144e4 <nftw@plt+0x11964>
  4141a8:	adds	x0, x23, x25
  4141ac:	b.eq	4141cc <nftw@plt+0x1164c>  // b.none
  4141b0:	mov	x23, x20
  4141b4:	mov	x20, x0
  4141b8:	b	4140a4 <nftw@plt+0x11524>
  4141bc:	add	x23, x0, #0x1
  4141c0:	strb	wzr, [x19, #72]
  4141c4:	mov	x20, x0
  4141c8:	b	414090 <nftw@plt+0x11510>
  4141cc:	stp	x27, x28, [sp, #80]
  4141d0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4141d4:	add	x2, x2, #0x438
  4141d8:	mov	w1, #0x241                 	// #577
  4141dc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4141e0:	add	x0, x0, #0x3f0
  4141e4:	bl	408d8c <nftw@plt+0x620c>
  4141e8:	cmp	x0, #0x64
  4141ec:	b.hi	4142fc <nftw@plt+0x1177c>  // b.pmore
  4141f0:	cbz	x22, 4140e8 <nftw@plt+0x11568>
  4141f4:	stp	x27, x28, [sp, #80]
  4141f8:	ldr	x27, [x19, #48]
  4141fc:	ldr	x0, [x19, #24]
  414200:	sub	x20, x20, x0
  414204:	str	wzr, [sp, #104]
  414208:	mov	w28, #0x0                   	// #0
  41420c:	mov	w1, #0x1                   	// #1
  414210:	ldr	x0, [x19, #80]
  414214:	cbz	x0, 414464 <nftw@plt+0x118e4>
  414218:	ldr	w2, [x0, #4]
  41421c:	ldr	w0, [x0]
  414220:	add	w1, w1, w2
  414224:	and	w0, w0, #0x7fffffff
  414228:	bl	4120a8 <nftw@plt+0xf528>
  41422c:	mov	w26, w0
  414230:	ubfiz	x1, x26, #1, #32
  414234:	add	x1, x1, w0, uxtw
  414238:	lsl	x1, x1, #3
  41423c:	add	x1, x1, #0x8
  414240:	ldr	x0, [x19, #80]
  414244:	cbz	x0, 414488 <nftw@plt+0x11908>
  414248:	ldr	w2, [x0, #4]
  41424c:	str	w2, [sp, #108]
  414250:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  414254:	str	x0, [x19, #80]
  414258:	ldr	w1, [x0]
  41425c:	bfxil	w1, w26, #0, #31
  414260:	str	w1, [x0]
  414264:	ubfx	x1, x1, #24, #7
  414268:	strb	w1, [x0, #3]
  41426c:	ldr	w1, [sp, #108]
  414270:	str	w1, [x0, #4]
  414274:	ldr	w0, [sp, #104]
  414278:	cbz	w0, 4142c4 <nftw@plt+0x11744>
  41427c:	ldr	x6, [x19, #80]
  414280:	cbz	w28, 4142bc <nftw@plt+0x1173c>
  414284:	sub	w0, w28, #0x1
  414288:	add	x0, x0, x0, lsl #1
  41428c:	lsl	x3, x0, #3
  414290:	add	x3, x3, #0x20
  414294:	mov	x0, #0x8                   	// #8
  414298:	add	x1, x6, x0
  41429c:	add	x2, x24, x0
  4142a0:	ldp	x4, x5, [x2]
  4142a4:	stp	x4, x5, [x1]
  4142a8:	ldr	x2, [x2, #16]
  4142ac:	str	x2, [x1, #16]
  4142b0:	add	x0, x0, #0x18
  4142b4:	cmp	x0, x3
  4142b8:	b.ne	414298 <nftw@plt+0x11718>  // b.any
  4142bc:	ldr	x0, [x19, #80]
  4142c0:	str	w28, [x0, #4]
  4142c4:	ldr	x1, [x19, #80]
  4142c8:	ldr	w0, [x1, #4]
  4142cc:	add	w2, w0, #0x1
  4142d0:	str	w2, [x1, #4]
  4142d4:	ubfiz	x2, x0, #1, #32
  4142d8:	add	x0, x2, w0, uxtw
  4142dc:	lsl	x0, x0, #3
  4142e0:	add	x0, x0, #0x8
  4142e4:	add	x2, x1, x0
  4142e8:	str	x22, [x1, x0]
  4142ec:	str	x27, [x2, #8]
  4142f0:	str	x20, [x2, #16]
  4142f4:	ldp	x27, x28, [sp, #80]
  4142f8:	b	4140e8 <nftw@plt+0x11568>
  4142fc:	stp	x27, x28, [sp, #80]
  414300:	ldr	x27, [x19, #48]
  414304:	ldr	x0, [x19, #24]
  414308:	sub	x20, x20, x0
  41430c:	str	wzr, [sp, #104]
  414310:	mov	w28, #0x0                   	// #0
  414314:	mov	w1, #0x1                   	// #1
  414318:	ldr	x0, [x19, #80]
  41431c:	cbz	x0, 4144a8 <nftw@plt+0x11928>
  414320:	ldr	w2, [x0, #4]
  414324:	ldr	w0, [x0]
  414328:	add	w1, w1, w2
  41432c:	and	w0, w0, #0x7fffffff
  414330:	bl	4120a8 <nftw@plt+0xf528>
  414334:	mov	w26, w0
  414338:	ubfiz	x1, x26, #1, #32
  41433c:	add	x1, x1, w0, uxtw
  414340:	lsl	x1, x1, #3
  414344:	add	x1, x1, #0x8
  414348:	ldr	x0, [x19, #80]
  41434c:	cbz	x0, 4144cc <nftw@plt+0x1194c>
  414350:	ldr	w2, [x0, #4]
  414354:	str	w2, [sp, #108]
  414358:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41435c:	str	x0, [x19, #80]
  414360:	ldr	w1, [x0]
  414364:	bfxil	w1, w26, #0, #31
  414368:	str	w1, [x0]
  41436c:	ubfx	x1, x1, #24, #7
  414370:	strb	w1, [x0, #3]
  414374:	ldr	w1, [sp, #108]
  414378:	str	w1, [x0, #4]
  41437c:	ldr	w0, [sp, #104]
  414380:	cbz	w0, 4143cc <nftw@plt+0x1184c>
  414384:	ldr	x6, [x19, #80]
  414388:	cbz	w28, 4143c4 <nftw@plt+0x11844>
  41438c:	sub	w0, w28, #0x1
  414390:	add	x0, x0, x0, lsl #1
  414394:	lsl	x3, x0, #3
  414398:	add	x3, x3, #0x20
  41439c:	mov	x0, #0x8                   	// #8
  4143a0:	add	x1, x6, x0
  4143a4:	add	x2, x24, x0
  4143a8:	ldp	x4, x5, [x2]
  4143ac:	stp	x4, x5, [x1]
  4143b0:	ldr	x2, [x2, #16]
  4143b4:	str	x2, [x1, #16]
  4143b8:	add	x0, x0, #0x18
  4143bc:	cmp	x0, x3
  4143c0:	b.ne	4143a0 <nftw@plt+0x11820>  // b.any
  4143c4:	ldr	x0, [x19, #80]
  4143c8:	str	w28, [x0, #4]
  4143cc:	ldr	x1, [x19, #80]
  4143d0:	ldr	w0, [x1, #4]
  4143d4:	add	w2, w0, #0x1
  4143d8:	str	w2, [x1, #4]
  4143dc:	ubfiz	x2, x0, #1, #32
  4143e0:	add	x0, x2, w0, uxtw
  4143e4:	lsl	x0, x0, #3
  4143e8:	add	x0, x0, #0x8
  4143ec:	add	x2, x1, x0
  4143f0:	str	x22, [x1, x0]
  4143f4:	str	x27, [x2, #8]
  4143f8:	str	x20, [x2, #16]
  4143fc:	ldp	x27, x28, [sp, #80]
  414400:	b	4140e8 <nftw@plt+0x11568>
  414404:	ldr	w0, [x24, #4]
  414408:	cmp	x22, x0
  41440c:	b.ls	4140e8 <nftw@plt+0x11568>  // b.plast
  414410:	stp	x27, x28, [sp, #80]
  414414:	ldr	x27, [x19, #48]
  414418:	ldr	x0, [x19, #24]
  41441c:	sub	x20, x20, x0
  414420:	ldr	w0, [x24]
  414424:	ubfx	x0, x0, #0, #31
  414428:	ldr	w1, [x24, #4]
  41442c:	cmp	w0, w1
  414430:	b.ne	4142c4 <nftw@plt+0x11744>  // b.any
  414434:	ldrsb	w0, [x24, #3]
  414438:	tbnz	w0, #31, 41444c <nftw@plt+0x118cc>
  41443c:	str	wzr, [sp, #104]
  414440:	mov	w28, #0x0                   	// #0
  414444:	mov	w1, #0x1                   	// #1
  414448:	b	414210 <nftw@plt+0x11690>
  41444c:	str	xzr, [x19, #80]
  414450:	ldr	w28, [x24, #4]
  414454:	add	w1, w28, #0x1
  414458:	mov	w0, #0x1                   	// #1
  41445c:	str	w0, [sp, #104]
  414460:	b	414210 <nftw@plt+0x11690>
  414464:	mov	w2, #0x4                   	// #4
  414468:	cmp	w1, w2
  41446c:	csel	w26, w1, w2, cs  // cs = hs, nlast
  414470:	csel	w1, w1, w2, cs  // cs = hs, nlast
  414474:	add	x1, x1, x1, lsl #1
  414478:	lsl	x1, x1, #3
  41447c:	add	x1, x1, #0x8
  414480:	str	wzr, [sp, #108]
  414484:	b	414250 <nftw@plt+0x116d0>
  414488:	str	wzr, [sp, #108]
  41448c:	b	414250 <nftw@plt+0x116d0>
  414490:	str	xzr, [x19, #80]
  414494:	ldr	w28, [x24, #4]
  414498:	add	w1, w28, #0x1
  41449c:	mov	w0, #0x1                   	// #1
  4144a0:	str	w0, [sp, #104]
  4144a4:	b	414318 <nftw@plt+0x11798>
  4144a8:	mov	w2, #0x4                   	// #4
  4144ac:	cmp	w1, w2
  4144b0:	csel	w26, w1, w2, cs  // cs = hs, nlast
  4144b4:	csel	w1, w1, w2, cs  // cs = hs, nlast
  4144b8:	add	x1, x1, x1, lsl #1
  4144bc:	lsl	x1, x1, #3
  4144c0:	add	x1, x1, #0x8
  4144c4:	str	wzr, [sp, #108]
  4144c8:	b	414358 <nftw@plt+0x117d8>
  4144cc:	str	wzr, [sp, #108]
  4144d0:	b	414358 <nftw@plt+0x117d8>
  4144d4:	ldr	x23, [x19, #40]
  4144d8:	b	4140f4 <nftw@plt+0x11574>
  4144dc:	mov	w1, #0x0                   	// #0
  4144e0:	b	414104 <nftw@plt+0x11584>
  4144e4:	mov	w1, #0x0                   	// #0
  4144e8:	ldp	x25, x26, [sp, #64]
  4144ec:	b	414104 <nftw@plt+0x11584>
  4144f0:	cmp	x0, #0x64
  4144f4:	b.ls	414404 <nftw@plt+0x11884>  // b.plast
  4144f8:	ldr	w2, [x24, #4]
  4144fc:	cbz	w2, 414518 <nftw@plt+0x11998>
  414500:	add	x1, x22, x22, lsl #1
  414504:	add	x1, x22, x1, lsl #3
  414508:	lsl	x1, x1, #2
  41450c:	udiv	x0, x1, x0
  414510:	cmp	x0, w2, uxtw
  414514:	b.cc	4140e8 <nftw@plt+0x11568>  // b.lo, b.ul, b.last
  414518:	stp	x27, x28, [sp, #80]
  41451c:	ldr	x27, [x19, #48]
  414520:	ldr	x0, [x19, #24]
  414524:	sub	x20, x20, x0
  414528:	ldr	w0, [x24]
  41452c:	ubfx	x0, x0, #0, #31
  414530:	cmp	w2, w0
  414534:	b.ne	4143cc <nftw@plt+0x1184c>  // b.any
  414538:	ldrsb	w0, [x24, #3]
  41453c:	tbnz	w0, #31, 414490 <nftw@plt+0x11910>
  414540:	str	wzr, [sp, #104]
  414544:	mov	w28, #0x0                   	// #0
  414548:	mov	w1, #0x1                   	// #1
  41454c:	b	414318 <nftw@plt+0x11798>
  414550:	str	wzr, [x0]
  414554:	str	xzr, [x0, #8]
  414558:	str	xzr, [x0, #16]
  41455c:	str	xzr, [x0, #24]
  414560:	str	xzr, [x0, #32]
  414564:	str	xzr, [x0, #40]
  414568:	str	xzr, [x0, #48]
  41456c:	str	xzr, [x0, #56]
  414570:	str	xzr, [x0, #64]
  414574:	mov	w1, #0x1                   	// #1
  414578:	strb	w1, [x0, #72]
  41457c:	str	xzr, [x0, #80]
  414580:	ret
  414584:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414588:	ldr	x0, [x0, #2304]
  41458c:	cbz	x0, 414594 <nftw@plt+0x11a14>
  414590:	ret
  414594:	stp	x29, x30, [sp, #-48]!
  414598:	mov	x29, sp
  41459c:	stp	x19, x20, [sp, #16]
  4145a0:	str	x21, [sp, #32]
  4145a4:	mov	x0, #0x588                 	// #1416
  4145a8:	bl	44af68 <_obstack_memory_used@@Base+0x964>
  4145ac:	mov	x21, x0
  4145b0:	mov	x1, #0x10                  	// #16
  4145b4:	str	x1, [x21], #8
  4145b8:	mov	x19, x21
  4145bc:	add	x20, x0, #0x588
  4145c0:	mov	x0, x19
  4145c4:	bl	414550 <nftw@plt+0x119d0>
  4145c8:	add	x19, x19, #0x58
  4145cc:	cmp	x19, x20
  4145d0:	b.ne	4145c0 <nftw@plt+0x11a40>  // b.any
  4145d4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4145d8:	str	x21, [x0, #2304]
  4145dc:	ldp	x19, x20, [sp, #16]
  4145e0:	ldr	x21, [sp, #32]
  4145e4:	ldp	x29, x30, [sp], #48
  4145e8:	ret
  4145ec:	stp	x29, x30, [sp, #-64]!
  4145f0:	mov	x29, sp
  4145f4:	stp	x21, x22, [sp, #32]
  4145f8:	str	x23, [sp, #48]
  4145fc:	mov	x22, x0
  414600:	cbz	x0, 41467c <nftw@plt+0x11afc>
  414604:	stp	x19, x20, [sp, #16]
  414608:	bl	414584 <nftw@plt+0x11a04>
  41460c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414610:	ldr	x19, [x0, #2304]
  414614:	add	x21, x19, #0x580
  414618:	mov	x23, #0x0                   	// #0
  41461c:	b	41462c <nftw@plt+0x11aac>
  414620:	add	x19, x19, #0x58
  414624:	cmp	x19, x21
  414628:	b.eq	414654 <nftw@plt+0x11ad4>  // b.none
  41462c:	ldr	x0, [x19, #8]
  414630:	cbz	x0, 414620 <nftw@plt+0x11aa0>
  414634:	mov	x1, x22
  414638:	bl	402890 <strcmp@plt>
  41463c:	cbnz	w0, 414620 <nftw@plt+0x11aa0>
  414640:	ldr	w1, [x19]
  414644:	add	w1, w1, #0x1
  414648:	str	w1, [x19]
  41464c:	mov	x23, x19
  414650:	b	414620 <nftw@plt+0x11aa0>
  414654:	cbz	x23, 414684 <nftw@plt+0x11b04>
  414658:	ldr	w0, [x23]
  41465c:	add	w0, w0, #0x1
  414660:	str	w0, [x23]
  414664:	ldp	x19, x20, [sp, #16]
  414668:	mov	x0, x23
  41466c:	ldp	x21, x22, [sp, #32]
  414670:	ldr	x23, [sp, #48]
  414674:	ldp	x29, x30, [sp], #64
  414678:	ret
  41467c:	mov	x23, x0
  414680:	b	414668 <nftw@plt+0x11ae8>
  414684:	ldp	x19, x20, [sp, #16]
  414688:	b	414668 <nftw@plt+0x11ae8>
  41468c:	stp	x29, x30, [sp, #-32]!
  414690:	mov	x29, sp
  414694:	str	x19, [sp, #16]
  414698:	cbz	x0, 4146f0 <nftw@plt+0x11b70>
  41469c:	bl	4145ec <nftw@plt+0x11a6c>
  4146a0:	mov	x19, x0
  4146a4:	cbz	x0, 4146e4 <nftw@plt+0x11b64>
  4146a8:	str	xzr, [x0, #8]
  4146ac:	ldr	x0, [x0, #16]
  4146b0:	cbz	x0, 4146b8 <nftw@plt+0x11b38>
  4146b4:	bl	402620 <fclose@plt>
  4146b8:	str	xzr, [x19, #16]
  4146bc:	str	xzr, [x19, #40]
  4146c0:	str	xzr, [x19, #48]
  4146c4:	str	xzr, [x19, #56]
  4146c8:	ldr	x0, [x19, #80]
  4146cc:	cbz	x0, 4146d4 <nftw@plt+0x11b54>
  4146d0:	str	wzr, [x0, #4]
  4146d4:	str	wzr, [x19]
  4146d8:	str	xzr, [x19, #64]
  4146dc:	mov	w0, #0x1                   	// #1
  4146e0:	strb	w0, [x19, #72]
  4146e4:	ldr	x19, [sp, #16]
  4146e8:	ldp	x29, x30, [sp], #32
  4146ec:	ret
  4146f0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4146f4:	add	x2, x2, #0x448
  4146f8:	mov	w1, #0x133                 	// #307
  4146fc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414700:	add	x0, x0, #0x3f0
  414704:	bl	408d8c <nftw@plt+0x620c>
  414708:	stp	x29, x30, [sp, #-32]!
  41470c:	mov	x29, sp
  414710:	str	x19, [sp, #16]
  414714:	mov	x19, x0
  414718:	ldr	x0, [x0, #16]
  41471c:	cbz	x0, 414728 <nftw@plt+0x11ba8>
  414720:	bl	402620 <fclose@plt>
  414724:	str	xzr, [x19, #16]
  414728:	ldr	x0, [x19, #24]
  41472c:	cbz	x0, 414738 <nftw@plt+0x11bb8>
  414730:	bl	402910 <free@plt>
  414734:	str	xzr, [x19, #24]
  414738:	ldr	x0, [x19, #80]
  41473c:	cbz	x0, 41474c <nftw@plt+0x11bcc>
  414740:	ldrsb	w1, [x0, #3]
  414744:	tbnz	w1, #31, 414758 <nftw@plt+0x11bd8>
  414748:	bl	402910 <free@plt>
  41474c:	ldr	x19, [sp, #16]
  414750:	ldp	x29, x30, [sp], #32
  414754:	ret
  414758:	str	wzr, [x0, #4]
  41475c:	b	41474c <nftw@plt+0x11bcc>
  414760:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414764:	ldr	x0, [x0, #2304]
  414768:	cbz	x0, 4147e8 <nftw@plt+0x11c68>
  41476c:	stp	x29, x30, [sp, #-32]!
  414770:	mov	x29, sp
  414774:	stp	x19, x20, [sp, #16]
  414778:	ldur	x1, [x0, #-8]
  41477c:	add	x19, x1, x1, lsl #1
  414780:	lsl	x19, x19, #2
  414784:	sub	x19, x19, x1
  414788:	add	x19, x0, x19, lsl #3
  41478c:	cmp	x0, x19
  414790:	b.eq	4147b4 <nftw@plt+0x11c34>  // b.none
  414794:	adrp	x20, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414798:	add	x20, x20, #0x8f8
  41479c:	sub	x19, x19, #0x58
  4147a0:	mov	x0, x19
  4147a4:	bl	414708 <nftw@plt+0x11b88>
  4147a8:	ldr	x0, [x20, #8]
  4147ac:	cmp	x0, x19
  4147b0:	b.ne	41479c <nftw@plt+0x11c1c>  // b.any
  4147b4:	mov	x0, x19
  4147b8:	ldr	x2, [x0, #-8]!
  4147bc:	add	x1, x2, x2, lsl #1
  4147c0:	lsl	x1, x1, #2
  4147c4:	sub	x1, x1, x2
  4147c8:	lsl	x1, x1, #3
  4147cc:	add	x1, x1, #0x8
  4147d0:	bl	44acc8 <_obstack_memory_used@@Base+0x6c4>
  4147d4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4147d8:	str	xzr, [x0, #2304]
  4147dc:	ldp	x19, x20, [sp, #16]
  4147e0:	ldp	x29, x30, [sp], #32
  4147e4:	ret
  4147e8:	ret
  4147ec:	stp	x29, x30, [sp, #-32]!
  4147f0:	mov	x29, sp
  4147f4:	str	xzr, [sp, #24]
  4147f8:	add	x3, sp, #0x18
  4147fc:	mov	w2, #0x1                   	// #1
  414800:	mov	w1, w0
  414804:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414808:	ldr	x0, [x0, #2296]
  41480c:	bl	42c270 <nftw@plt+0x296f0>
  414810:	cmp	w0, #0x1
  414814:	cset	w0, eq  // eq = none
  414818:	ldp	x29, x30, [sp], #32
  41481c:	ret
  414820:	stp	x29, x30, [sp, #-16]!
  414824:	mov	x29, sp
  414828:	mov	w2, #0x0                   	// #0
  41482c:	mov	w1, #0x1                   	// #1
  414830:	bl	413d60 <nftw@plt+0x111e0>
  414834:	ldp	x29, x30, [sp], #16
  414838:	ret
  41483c:	stp	x29, x30, [sp, #-96]!
  414840:	mov	x29, sp
  414844:	stp	x19, x20, [sp, #16]
  414848:	stp	x21, x22, [sp, #32]
  41484c:	mov	x22, x0
  414850:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  414854:	add	x1, x1, #0x140
  414858:	bl	402650 <fopen@plt>
  41485c:	mov	x21, x0
  414860:	cbz	x0, 414984 <nftw@plt+0x11e04>
  414864:	bl	414584 <nftw@plt+0x11a04>
  414868:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  41486c:	ldr	x19, [x0, #2304]
  414870:	mov	x1, x19
  414874:	ldr	w20, [x1], #88
  414878:	add	x4, x19, #0x580
  41487c:	b	41489c <nftw@plt+0x11d1c>
  414880:	mov	x19, x1
  414884:	cmp	w20, w2
  414888:	csel	w20, w20, w2, cs  // cs = hs, nlast
  41488c:	cbz	x3, 414940 <nftw@plt+0x11dc0>
  414890:	add	x1, x1, #0x58
  414894:	cmp	x1, x4
  414898:	b.eq	4148d0 <nftw@plt+0x11d50>  // b.none
  41489c:	mov	x5, x1
  4148a0:	ldr	x3, [x1, #8]
  4148a4:	ldr	w2, [x1]
  4148a8:	ldr	w0, [x19]
  4148ac:	cmp	w2, w0
  4148b0:	b.cc	414880 <nftw@plt+0x11d00>  // b.lo, b.ul, b.last
  4148b4:	ldr	x0, [x19, #8]
  4148b8:	cmp	x0, #0x0
  4148bc:	ccmp	x3, #0x0, #0x0, ne  // ne = any
  4148c0:	b.ne	414884 <nftw@plt+0x11d04>  // b.any
  4148c4:	cmp	w20, w2
  4148c8:	csel	w20, w20, w2, cs  // cs = hs, nlast
  4148cc:	mov	x19, x5
  4148d0:	str	x22, [x19, #8]
  4148d4:	ldr	x0, [x19, #16]
  4148d8:	cbz	x0, 4148e0 <nftw@plt+0x11d60>
  4148dc:	bl	402620 <fclose@plt>
  4148e0:	str	x21, [x19, #16]
  4148e4:	str	xzr, [x19, #40]
  4148e8:	str	xzr, [x19, #48]
  4148ec:	str	xzr, [x19, #56]
  4148f0:	ldr	x1, [x19, #80]
  4148f4:	cbz	x1, 4148fc <nftw@plt+0x11d7c>
  4148f8:	str	wzr, [x1, #4]
  4148fc:	add	w20, w20, #0x1
  414900:	str	w20, [x19]
  414904:	str	wzr, [sp, #60]
  414908:	add	x2, sp, #0x3c
  41490c:	mov	x1, x22
  414910:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414914:	ldr	x0, [x0, #2296]
  414918:	bl	42cd58 <nftw@plt+0x2a1d8>
  41491c:	and	w0, w0, #0xff
  414920:	cbz	w0, 414960 <nftw@plt+0x11de0>
  414924:	ldr	w0, [sp, #60]
  414928:	cmp	w0, #0x1
  41492c:	b.ls	414948 <nftw@plt+0x11dc8>  // b.plast
  414930:	add	x8, sp, #0x40
  414934:	bl	414820 <nftw@plt+0x11ca0>
  414938:	ldrsw	x0, [sp, #72]
  41493c:	b	414964 <nftw@plt+0x11de4>
  414940:	mov	x5, x19
  414944:	b	4148cc <nftw@plt+0x11d4c>
  414948:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41494c:	add	x2, x2, #0x478
  414950:	mov	w1, #0x107                 	// #263
  414954:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414958:	add	x0, x0, #0x3f0
  41495c:	bl	408d8c <nftw@plt+0x620c>
  414960:	mov	x0, #0x0                   	// #0
  414964:	str	x0, [x19, #64]
  414968:	mov	w0, #0x1                   	// #1
  41496c:	strb	w0, [x19, #72]
  414970:	mov	x0, x19
  414974:	ldp	x19, x20, [sp, #16]
  414978:	ldp	x21, x22, [sp, #32]
  41497c:	ldp	x29, x30, [sp], #96
  414980:	ret
  414984:	mov	x19, x0
  414988:	b	414970 <nftw@plt+0x11df0>
  41498c:	stp	x29, x30, [sp, #-32]!
  414990:	mov	x29, sp
  414994:	str	x19, [sp, #16]
  414998:	mov	x19, x0
  41499c:	bl	4145ec <nftw@plt+0x11a6c>
  4149a0:	mov	x1, x0
  4149a4:	cbz	x0, 4149b8 <nftw@plt+0x11e38>
  4149a8:	ldrb	w0, [x1, #72]
  4149ac:	ldr	x19, [sp, #16]
  4149b0:	ldp	x29, x30, [sp], #32
  4149b4:	ret
  4149b8:	mov	x0, x19
  4149bc:	bl	41483c <nftw@plt+0x11cbc>
  4149c0:	mov	x1, x0
  4149c4:	mov	w0, #0x0                   	// #0
  4149c8:	cbz	x1, 4149ac <nftw@plt+0x11e2c>
  4149cc:	b	4149a8 <nftw@plt+0x11e28>
  4149d0:	stp	x29, x30, [sp, #-80]!
  4149d4:	mov	x29, sp
  4149d8:	str	xzr, [sp, #72]
  4149dc:	cbnz	w1, 4149f0 <nftw@plt+0x11e70>
  4149e0:	mov	x0, #0x0                   	// #0
  4149e4:	mov	x1, #0x0                   	// #0
  4149e8:	ldp	x29, x30, [sp], #80
  4149ec:	ret
  4149f0:	stp	x19, x20, [sp, #16]
  4149f4:	str	x21, [sp, #32]
  4149f8:	mov	x21, x0
  4149fc:	mov	w20, w1
  414a00:	bl	4145ec <nftw@plt+0x11a6c>
  414a04:	mov	x19, x0
  414a08:	cbz	x0, 414a98 <nftw@plt+0x11f18>
  414a0c:	sxtw	x1, w20
  414a10:	ldr	x0, [x19, #56]
  414a14:	cmp	x0, w20, sxtw
  414a18:	b.cc	414ac4 <nftw@plt+0x11f44>  // b.lo, b.ul, b.last
  414a1c:	ldr	x2, [x19, #80]
  414a20:	cbz	x2, 414abc <nftw@plt+0x11f3c>
  414a24:	ldr	w3, [x2, #4]
  414a28:	cbz	w3, 414abc <nftw@plt+0x11f3c>
  414a2c:	ldr	x0, [x19, #64]
  414a30:	cmp	x0, #0x64
  414a34:	b.ls	414b00 <nftw@plt+0x11f80>  // b.plast
  414a38:	cmp	x1, x0
  414a3c:	b.hi	414b74 <nftw@plt+0x11ff4>  // b.pmore
  414a40:	add	x4, x1, x1, lsl #1
  414a44:	add	x4, x1, x4, lsl #3
  414a48:	lsl	x4, x4, #2
  414a4c:	udiv	x4, x4, x0
  414a50:	cmp	x4, w3, uxtw
  414a54:	b.cs	414bc8 <nftw@plt+0x12048>  // b.hs, b.nlast
  414a58:	ubfiz	x0, x4, #1, #32
  414a5c:	add	x0, x0, w4, uxtw
  414a60:	add	x0, x2, x0, lsl #3
  414a64:	add	x0, x0, #0x8
  414a68:	ubfiz	x3, x4, #1, #32
  414a6c:	add	x4, x3, w4, uxtw
  414a70:	add	x2, x2, x4, lsl #3
  414a74:	ldr	x2, [x2, #8]
  414a78:	cmp	x1, x2
  414a7c:	b.cs	414b24 <nftw@plt+0x11fa4>  // b.hs, b.nlast
  414a80:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414a84:	add	x2, x2, #0x488
  414a88:	mov	w1, #0x2c1                 	// #705
  414a8c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414a90:	add	x0, x0, #0x3f0
  414a94:	bl	408d8c <nftw@plt+0x620c>
  414a98:	mov	x0, x21
  414a9c:	bl	41483c <nftw@plt+0x11cbc>
  414aa0:	mov	x19, x0
  414aa4:	cbnz	x0, 414a0c <nftw@plt+0x11e8c>
  414aa8:	mov	x0, #0x0                   	// #0
  414aac:	mov	x1, #0x0                   	// #0
  414ab0:	ldp	x19, x20, [sp, #16]
  414ab4:	ldr	x21, [sp, #32]
  414ab8:	b	4149e8 <nftw@plt+0x11e68>
  414abc:	str	xzr, [x19, #48]
  414ac0:	str	xzr, [x19, #56]
  414ac4:	sub	x20, x1, #0x1
  414ac8:	ldr	x0, [x19, #56]
  414acc:	cmp	x0, x20
  414ad0:	b.cs	414b9c <nftw@plt+0x1201c>  // b.hs, b.nlast
  414ad4:	add	x2, sp, #0x38
  414ad8:	add	x1, sp, #0x30
  414adc:	mov	x0, x19
  414ae0:	bl	414018 <nftw@plt+0x11498>
  414ae4:	and	w0, w0, #0xff
  414ae8:	cbnz	w0, 414ac8 <nftw@plt+0x11f48>
  414aec:	mov	x0, #0x0                   	// #0
  414af0:	mov	x1, #0x0                   	// #0
  414af4:	ldp	x19, x20, [sp, #16]
  414af8:	ldr	x21, [sp, #32]
  414afc:	b	4149e8 <nftw@plt+0x11e68>
  414b00:	cmp	x1, x0
  414b04:	b.hi	414b48 <nftw@plt+0x11fc8>  // b.pmore
  414b08:	sub	w20, w20, #0x1
  414b0c:	add	x20, x20, x20, lsl #1
  414b10:	add	x0, x2, x20, lsl #3
  414b14:	add	x0, x0, #0x8
  414b18:	ldr	x2, [x0]
  414b1c:	cmp	x1, x2
  414b20:	b.cc	414b5c <nftw@plt+0x11fdc>  // b.lo, b.ul, b.last
  414b24:	ldr	x2, [x0]
  414b28:	cmp	x1, x2
  414b2c:	b.eq	414b7c <nftw@plt+0x11ffc>  // b.none
  414b30:	ldr	x2, [x0, #8]
  414b34:	str	x2, [x19, #48]
  414b38:	ldr	x0, [x0]
  414b3c:	sub	x0, x0, #0x1
  414b40:	str	x0, [x19, #56]
  414b44:	b	414ac4 <nftw@plt+0x11f44>
  414b48:	sub	w0, w0, #0x1
  414b4c:	add	x0, x0, x0, lsl #1
  414b50:	add	x0, x2, x0, lsl #3
  414b54:	add	x0, x0, #0x8
  414b58:	b	414b18 <nftw@plt+0x11f98>
  414b5c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414b60:	add	x2, x2, #0x488
  414b64:	mov	w1, #0x2b2                 	// #690
  414b68:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414b6c:	add	x0, x0, #0x3f0
  414b70:	bl	408d8c <nftw@plt+0x620c>
  414b74:	sub	w4, w3, #0x1
  414b78:	b	414a50 <nftw@plt+0x11ed0>
  414b7c:	ldr	x2, [x0, #8]
  414b80:	ldr	x1, [x19, #24]
  414b84:	add	x1, x1, x2
  414b88:	str	x1, [sp, #72]
  414b8c:	ldr	x0, [x0, #16]
  414b90:	sub	x0, x0, x2
  414b94:	str	x0, [sp, #64]
  414b98:	b	414bb4 <nftw@plt+0x12034>
  414b9c:	add	x2, sp, #0x40
  414ba0:	add	x1, sp, #0x48
  414ba4:	mov	x0, x19
  414ba8:	bl	414018 <nftw@plt+0x11498>
  414bac:	and	w0, w0, #0xff
  414bb0:	cbz	w0, 414aec <nftw@plt+0x11f6c>
  414bb4:	ldr	x0, [sp, #72]
  414bb8:	ldr	x1, [sp, #64]
  414bbc:	ldp	x19, x20, [sp, #16]
  414bc0:	ldr	x21, [sp, #32]
  414bc4:	b	4149e8 <nftw@plt+0x11e68>
  414bc8:	str	xzr, [x19, #48]
  414bcc:	str	xzr, [x19, #56]
  414bd0:	b	414ac4 <nftw@plt+0x11f44>
  414bd4:	stp	x29, x30, [sp, #-16]!
  414bd8:	mov	x29, sp
  414bdc:	mov	w2, w1
  414be0:	mov	w1, #0x0                   	// #0
  414be4:	bl	413d60 <nftw@plt+0x111e0>
  414be8:	ldp	x29, x30, [sp], #16
  414bec:	ret
  414bf0:	stp	x29, x30, [sp, #-16]!
  414bf4:	mov	x29, sp
  414bf8:	mov	w2, w1
  414bfc:	mov	w1, #0x0                   	// #0
  414c00:	bl	413d60 <nftw@plt+0x111e0>
  414c04:	ldp	x29, x30, [sp], #16
  414c08:	ret
  414c0c:	stp	x29, x30, [sp, #-32]!
  414c10:	mov	x29, sp
  414c14:	str	x19, [sp, #16]
  414c18:	mov	w19, w0
  414c1c:	mov	w1, w0
  414c20:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414c24:	ldr	x0, [x0, #2296]
  414c28:	bl	42c1c8 <nftw@plt+0x29648>
  414c2c:	cbnz	w0, 414c40 <nftw@plt+0x120c0>
  414c30:	mov	w0, w19
  414c34:	ldr	x19, [sp, #16]
  414c38:	ldp	x29, x30, [sp], #32
  414c3c:	ret
  414c40:	mov	x3, #0x0                   	// #0
  414c44:	mov	w2, #0x0                   	// #0
  414c48:	mov	w1, w19
  414c4c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414c50:	ldr	x0, [x0, #2296]
  414c54:	bl	42c270 <nftw@plt+0x296f0>
  414c58:	mov	w19, w0
  414c5c:	b	414c30 <nftw@plt+0x120b0>
  414c60:	stp	x29, x30, [sp, #-16]!
  414c64:	mov	x29, sp
  414c68:	mov	x3, #0x0                   	// #0
  414c6c:	mov	w2, #0x0                   	// #0
  414c70:	mov	w1, w0
  414c74:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414c78:	ldr	x0, [x0, #2296]
  414c7c:	bl	42c270 <nftw@plt+0x296f0>
  414c80:	ldp	x29, x30, [sp], #16
  414c84:	ret
  414c88:	stp	x29, x30, [sp, #-48]!
  414c8c:	mov	x29, sp
  414c90:	stp	x19, x20, [sp, #16]
  414c94:	stp	x21, x22, [sp, #32]
  414c98:	mov	w21, w1
  414c9c:	mov	w22, w2
  414ca0:	adrp	x19, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414ca4:	mov	w1, w0
  414ca8:	ldr	x0, [x19, #2296]
  414cac:	bl	42c008 <nftw@plt+0x29488>
  414cb0:	mov	w20, w0
  414cb4:	mov	w1, w21
  414cb8:	ldr	x0, [x19, #2296]
  414cbc:	bl	42bef8 <nftw@plt+0x29378>
  414cc0:	mov	x21, x0
  414cc4:	mov	w1, w22
  414cc8:	ldr	x0, [x19, #2296]
  414ccc:	bl	42bef8 <nftw@plt+0x29378>
  414cd0:	mov	x3, #0x0                   	// #0
  414cd4:	bfxil	x0, x21, #0, #32
  414cd8:	mov	x2, x0
  414cdc:	mov	w1, w20
  414ce0:	ldr	x0, [x19, #2296]
  414ce4:	bl	42bc94 <nftw@plt+0x29114>
  414ce8:	ldp	x19, x20, [sp, #16]
  414cec:	ldp	x21, x22, [sp, #32]
  414cf0:	ldp	x29, x30, [sp], #48
  414cf4:	ret
  414cf8:	stp	x29, x30, [sp, #-32]!
  414cfc:	mov	x29, sp
  414d00:	stp	x19, x20, [sp, #16]
  414d04:	mov	x19, x1
  414d08:	adrp	x20, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414d0c:	mov	w1, w0
  414d10:	ldr	x0, [x20, #2296]
  414d14:	bl	42c008 <nftw@plt+0x29488>
  414d18:	mov	x3, #0x0                   	// #0
  414d1c:	mov	x2, x19
  414d20:	mov	w1, w0
  414d24:	ldr	x0, [x20, #2296]
  414d28:	bl	42bc94 <nftw@plt+0x29114>
  414d2c:	ldp	x19, x20, [sp, #16]
  414d30:	ldp	x29, x30, [sp], #32
  414d34:	ret
  414d38:	stp	x29, x30, [sp, #-160]!
  414d3c:	mov	x29, sp
  414d40:	stp	x19, x20, [sp, #16]
  414d44:	stp	x21, x22, [sp, #32]
  414d48:	stp	xzr, xzr, [sp, #56]
  414d4c:	stp	xzr, xzr, [sp, #72]
  414d50:	stp	xzr, xzr, [sp, #88]
  414d54:	stp	xzr, xzr, [sp, #104]
  414d58:	stp	xzr, xzr, [sp, #120]
  414d5c:	stp	xzr, xzr, [sp, #136]
  414d60:	str	xzr, [sp, #152]
  414d64:	add	x1, sp, #0x38
  414d68:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  414d6c:	ldr	x0, [x0, #2296]
  414d70:	bl	42ce34 <nftw@plt+0x2a2b4>
  414d74:	ldr	x0, [sp, #120]
  414d78:	ldr	x19, [sp, #128]
  414d7c:	add	x21, x0, x19
  414d80:	ldr	x20, [sp, #72]
  414d84:	ldr	x2, [sp, #112]
  414d88:	add	x20, x20, x2
  414d8c:	add	x20, x20, x19
  414d90:	ldr	x2, [sp, #80]
  414d94:	add	x0, x0, x2
  414d98:	add	x19, x0, x19
  414d9c:	ldr	x2, [sp, #88]
  414da0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414da4:	add	x1, x1, #0x498
  414da8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414dac:	ldr	x0, [x0, #1392]
  414db0:	bl	402b30 <fprintf@plt>
  414db4:	ldr	x0, [sp, #88]
  414db8:	cbnz	x0, 415004 <nftw@plt+0x12484>
  414dbc:	adrp	x22, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414dc0:	ldr	x3, [x22, #1392]
  414dc4:	mov	x2, #0x37                  	// #55
  414dc8:	mov	x1, #0x1                   	// #1
  414dcc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414dd0:	add	x0, x0, #0x508
  414dd4:	bl	402950 <fwrite@plt>
  414dd8:	ldr	x0, [x22, #1392]
  414ddc:	ldr	x2, [sp, #64]
  414de0:	mov	x1, #0x27ff                	// #10239
  414de4:	mov	w3, #0x20                  	// #32
  414de8:	cmp	x2, x1
  414dec:	b.le	414e10 <nftw@plt+0x12290>
  414df0:	mov	w1, #0x9fffff              	// #10485759
  414df4:	cmp	x2, x1
  414df8:	b.gt	415024 <nftw@plt+0x124a4>
  414dfc:	add	x1, x2, #0x3ff
  414e00:	cmp	x2, #0x0
  414e04:	csel	x2, x1, x2, lt  // lt = tstop
  414e08:	asr	x2, x2, #10
  414e0c:	mov	w3, #0x6b                  	// #107
  414e10:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414e14:	add	x1, x1, #0x540
  414e18:	bl	402b30 <fprintf@plt>
  414e1c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414e20:	ldr	x0, [x0, #1392]
  414e24:	ldr	x2, [sp, #80]
  414e28:	mov	x1, #0x27ff                	// #10239
  414e2c:	mov	w3, #0x20                  	// #32
  414e30:	cmp	x2, x1
  414e34:	b.le	414e58 <nftw@plt+0x122d8>
  414e38:	mov	w1, #0x9fffff              	// #10485759
  414e3c:	cmp	x2, x1
  414e40:	b.gt	415040 <nftw@plt+0x124c0>
  414e44:	add	x1, x2, #0x3ff
  414e48:	cmp	x2, #0x0
  414e4c:	csel	x2, x1, x2, lt  // lt = tstop
  414e50:	asr	x2, x2, #10
  414e54:	mov	w3, #0x6b                  	// #107
  414e58:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414e5c:	add	x1, x1, #0x570
  414e60:	bl	402b30 <fprintf@plt>
  414e64:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414e68:	ldr	x0, [x0, #1392]
  414e6c:	ldr	x2, [sp, #56]
  414e70:	mov	x1, #0x27ff                	// #10239
  414e74:	mov	w3, #0x20                  	// #32
  414e78:	cmp	x2, x1
  414e7c:	b.le	414ea0 <nftw@plt+0x12320>
  414e80:	mov	w1, #0x9fffff              	// #10485759
  414e84:	cmp	x2, x1
  414e88:	b.gt	41505c <nftw@plt+0x124dc>
  414e8c:	add	x1, x2, #0x3ff
  414e90:	cmp	x2, #0x0
  414e94:	csel	x2, x1, x2, lt  // lt = tstop
  414e98:	asr	x2, x2, #10
  414e9c:	mov	w3, #0x6b                  	// #107
  414ea0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414ea4:	add	x1, x1, #0x5a0
  414ea8:	bl	402b30 <fprintf@plt>
  414eac:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414eb0:	ldr	x0, [x0, #1392]
  414eb4:	ldr	x2, [sp, #72]
  414eb8:	mov	x1, #0x27ff                	// #10239
  414ebc:	mov	w3, #0x20                  	// #32
  414ec0:	cmp	x2, x1
  414ec4:	b.le	414ee8 <nftw@plt+0x12368>
  414ec8:	mov	w1, #0x9fffff              	// #10485759
  414ecc:	cmp	x2, x1
  414ed0:	b.gt	415078 <nftw@plt+0x124f8>
  414ed4:	add	x1, x2, #0x3ff
  414ed8:	cmp	x2, #0x0
  414edc:	csel	x2, x1, x2, lt  // lt = tstop
  414ee0:	asr	x2, x2, #10
  414ee4:	mov	w3, #0x6b                  	// #107
  414ee8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414eec:	add	x1, x1, #0x5d0
  414ef0:	bl	402b30 <fprintf@plt>
  414ef4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414ef8:	ldr	x0, [x0, #1392]
  414efc:	ldr	x2, [sp, #104]
  414f00:	mov	x1, #0x27ff                	// #10239
  414f04:	mov	w3, #0x20                  	// #32
  414f08:	cmp	x2, x1
  414f0c:	b.le	414f30 <nftw@plt+0x123b0>
  414f10:	mov	w1, #0x9fffff              	// #10485759
  414f14:	cmp	x2, x1
  414f18:	b.gt	415094 <nftw@plt+0x12514>
  414f1c:	add	x1, x2, #0x3ff
  414f20:	cmp	x2, #0x0
  414f24:	csel	x2, x1, x2, lt  // lt = tstop
  414f28:	asr	x2, x2, #10
  414f2c:	mov	w3, #0x6b                  	// #107
  414f30:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414f34:	add	x1, x1, #0x600
  414f38:	bl	402b30 <fprintf@plt>
  414f3c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414f40:	ldr	x0, [x0, #1392]
  414f44:	ldr	x2, [sp, #120]
  414f48:	mov	x1, #0x27ff                	// #10239
  414f4c:	mov	w3, #0x20                  	// #32
  414f50:	cmp	x2, x1
  414f54:	b.le	414f78 <nftw@plt+0x123f8>
  414f58:	mov	w1, #0x9fffff              	// #10485759
  414f5c:	cmp	x2, x1
  414f60:	b.gt	4150b0 <nftw@plt+0x12530>
  414f64:	add	x1, x2, #0x3ff
  414f68:	cmp	x2, #0x0
  414f6c:	csel	x2, x1, x2, lt  // lt = tstop
  414f70:	asr	x2, x2, #10
  414f74:	mov	w3, #0x6b                  	// #107
  414f78:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414f7c:	add	x1, x1, #0x630
  414f80:	bl	402b30 <fprintf@plt>
  414f84:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414f88:	ldr	x0, [x0, #1392]
  414f8c:	ldr	x2, [sp, #128]
  414f90:	mov	x1, #0x27ff                	// #10239
  414f94:	mov	w3, #0x20                  	// #32
  414f98:	cmp	x2, x1
  414f9c:	b.le	414fc0 <nftw@plt+0x12440>
  414fa0:	mov	w1, #0x9fffff              	// #10485759
  414fa4:	cmp	x2, x1
  414fa8:	b.gt	4150cc <nftw@plt+0x1254c>
  414fac:	add	x1, x2, #0x3ff
  414fb0:	cmp	x2, #0x0
  414fb4:	csel	x2, x1, x2, lt  // lt = tstop
  414fb8:	asr	x2, x2, #10
  414fbc:	mov	w3, #0x6b                  	// #107
  414fc0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  414fc4:	add	x1, x1, #0x660
  414fc8:	bl	402b30 <fprintf@plt>
  414fcc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  414fd0:	ldr	x0, [x0, #1392]
  414fd4:	mov	x1, #0x27ff                	// #10239
  414fd8:	cmp	x21, x1
  414fdc:	b.le	415104 <nftw@plt+0x12584>
  414fe0:	mov	w1, #0x9fffff              	// #10485759
  414fe4:	cmp	x21, x1
  414fe8:	b.gt	4150e8 <nftw@plt+0x12568>
  414fec:	add	x2, x21, #0x3ff
  414ff0:	cmp	x21, #0x0
  414ff4:	csel	x21, x2, x21, lt  // lt = tstop
  414ff8:	asr	x2, x21, #10
  414ffc:	mov	w3, #0x6b                  	// #107
  415000:	b	41510c <nftw@plt+0x1258c>
  415004:	ldr	x2, [sp, #96]
  415008:	sdiv	x2, x2, x0
  41500c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415010:	add	x1, x1, #0x4d0
  415014:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  415018:	ldr	x0, [x0, #1392]
  41501c:	bl	402b30 <fprintf@plt>
  415020:	b	414dbc <nftw@plt+0x1223c>
  415024:	add	x1, x2, #0xff, lsl #12
  415028:	add	x1, x1, #0xfff
  41502c:	cmp	x2, #0x0
  415030:	csel	x2, x1, x2, lt  // lt = tstop
  415034:	asr	x2, x2, #20
  415038:	mov	w3, #0x4d                  	// #77
  41503c:	b	414e10 <nftw@plt+0x12290>
  415040:	add	x1, x2, #0xff, lsl #12
  415044:	add	x1, x1, #0xfff
  415048:	cmp	x2, #0x0
  41504c:	csel	x2, x1, x2, lt  // lt = tstop
  415050:	asr	x2, x2, #20
  415054:	mov	w3, #0x4d                  	// #77
  415058:	b	414e58 <nftw@plt+0x122d8>
  41505c:	add	x1, x2, #0xff, lsl #12
  415060:	add	x1, x1, #0xfff
  415064:	cmp	x2, #0x0
  415068:	csel	x2, x1, x2, lt  // lt = tstop
  41506c:	asr	x2, x2, #20
  415070:	mov	w3, #0x4d                  	// #77
  415074:	b	414ea0 <nftw@plt+0x12320>
  415078:	add	x1, x2, #0xff, lsl #12
  41507c:	add	x1, x1, #0xfff
  415080:	cmp	x2, #0x0
  415084:	csel	x2, x1, x2, lt  // lt = tstop
  415088:	asr	x2, x2, #20
  41508c:	mov	w3, #0x4d                  	// #77
  415090:	b	414ee8 <nftw@plt+0x12368>
  415094:	add	x1, x2, #0xff, lsl #12
  415098:	add	x1, x1, #0xfff
  41509c:	cmp	x2, #0x0
  4150a0:	csel	x2, x1, x2, lt  // lt = tstop
  4150a4:	asr	x2, x2, #20
  4150a8:	mov	w3, #0x4d                  	// #77
  4150ac:	b	414f30 <nftw@plt+0x123b0>
  4150b0:	add	x1, x2, #0xff, lsl #12
  4150b4:	add	x1, x1, #0xfff
  4150b8:	cmp	x2, #0x0
  4150bc:	csel	x2, x1, x2, lt  // lt = tstop
  4150c0:	asr	x2, x2, #20
  4150c4:	mov	w3, #0x4d                  	// #77
  4150c8:	b	414f78 <nftw@plt+0x123f8>
  4150cc:	add	x1, x2, #0xff, lsl #12
  4150d0:	add	x1, x1, #0xfff
  4150d4:	cmp	x2, #0x0
  4150d8:	csel	x2, x1, x2, lt  // lt = tstop
  4150dc:	asr	x2, x2, #20
  4150e0:	mov	w3, #0x4d                  	// #77
  4150e4:	b	414fc0 <nftw@plt+0x12440>
  4150e8:	add	x2, x21, #0xff, lsl #12
  4150ec:	add	x2, x2, #0xfff
  4150f0:	cmp	x21, #0x0
  4150f4:	csel	x21, x2, x21, lt  // lt = tstop
  4150f8:	asr	x2, x21, #20
  4150fc:	mov	w3, #0x4d                  	// #77
  415100:	b	41510c <nftw@plt+0x1258c>
  415104:	mov	x2, x21
  415108:	mov	w3, #0x20                  	// #32
  41510c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415110:	add	x1, x1, #0x690
  415114:	bl	402b30 <fprintf@plt>
  415118:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  41511c:	ldr	x0, [x0, #1392]
  415120:	ldr	x2, [sp, #136]
  415124:	mov	x1, #0x27ff                	// #10239
  415128:	mov	w3, #0x20                  	// #32
  41512c:	cmp	x2, x1
  415130:	b.le	415154 <nftw@plt+0x125d4>
  415134:	mov	w1, #0x9fffff              	// #10485759
  415138:	cmp	x2, x1
  41513c:	b.gt	415198 <nftw@plt+0x12618>
  415140:	add	x1, x2, #0x3ff
  415144:	cmp	x2, #0x0
  415148:	csel	x2, x1, x2, lt  // lt = tstop
  41514c:	asr	x2, x2, #10
  415150:	mov	w3, #0x6b                  	// #107
  415154:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415158:	add	x1, x1, #0x6c0
  41515c:	bl	402b30 <fprintf@plt>
  415160:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  415164:	ldr	x0, [x0, #1392]
  415168:	mov	x1, #0x27ff                	// #10239
  41516c:	cmp	x20, x1
  415170:	b.le	4151d0 <nftw@plt+0x12650>
  415174:	mov	w1, #0x9fffff              	// #10485759
  415178:	cmp	x20, x1
  41517c:	b.gt	4151b4 <nftw@plt+0x12634>
  415180:	add	x2, x20, #0x3ff
  415184:	cmp	x20, #0x0
  415188:	csel	x20, x2, x20, lt  // lt = tstop
  41518c:	asr	x2, x20, #10
  415190:	mov	w3, #0x6b                  	// #107
  415194:	b	4151d8 <nftw@plt+0x12658>
  415198:	add	x1, x2, #0xff, lsl #12
  41519c:	add	x1, x1, #0xfff
  4151a0:	cmp	x2, #0x0
  4151a4:	csel	x2, x1, x2, lt  // lt = tstop
  4151a8:	asr	x2, x2, #20
  4151ac:	mov	w3, #0x4d                  	// #77
  4151b0:	b	415154 <nftw@plt+0x125d4>
  4151b4:	add	x2, x20, #0xff, lsl #12
  4151b8:	add	x2, x2, #0xfff
  4151bc:	cmp	x20, #0x0
  4151c0:	csel	x20, x2, x20, lt  // lt = tstop
  4151c4:	asr	x2, x20, #20
  4151c8:	mov	w3, #0x4d                  	// #77
  4151cc:	b	4151d8 <nftw@plt+0x12658>
  4151d0:	mov	x2, x20
  4151d4:	mov	w3, #0x20                  	// #32
  4151d8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4151dc:	add	x1, x1, #0x6f0
  4151e0:	bl	402b30 <fprintf@plt>
  4151e4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4151e8:	ldr	x0, [x0, #1392]
  4151ec:	mov	x1, #0x27ff                	// #10239
  4151f0:	cmp	x19, x1
  4151f4:	b.le	415238 <nftw@plt+0x126b8>
  4151f8:	mov	w1, #0x9fffff              	// #10485759
  4151fc:	cmp	x19, x1
  415200:	b.gt	41521c <nftw@plt+0x1269c>
  415204:	add	x2, x19, #0x3ff
  415208:	cmp	x19, #0x0
  41520c:	csel	x19, x2, x19, lt  // lt = tstop
  415210:	asr	x2, x19, #10
  415214:	mov	w3, #0x6b                  	// #107
  415218:	b	415240 <nftw@plt+0x126c0>
  41521c:	add	x2, x19, #0xff, lsl #12
  415220:	add	x2, x2, #0xfff
  415224:	cmp	x19, #0x0
  415228:	csel	x19, x2, x19, lt  // lt = tstop
  41522c:	asr	x2, x19, #20
  415230:	mov	w3, #0x4d                  	// #77
  415234:	b	415240 <nftw@plt+0x126c0>
  415238:	mov	x2, x19
  41523c:	mov	w3, #0x20                  	// #32
  415240:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415244:	add	x1, x1, #0x720
  415248:	bl	402b30 <fprintf@plt>
  41524c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  415250:	ldr	x0, [x0, #1392]
  415254:	ldr	x2, [sp, #144]
  415258:	mov	x1, #0x27ff                	// #10239
  41525c:	mov	w3, #0x20                  	// #32
  415260:	cmp	x2, x1
  415264:	b.le	415288 <nftw@plt+0x12708>
  415268:	mov	w1, #0x9fffff              	// #10485759
  41526c:	cmp	x2, x1
  415270:	b.gt	415364 <nftw@plt+0x127e4>
  415274:	add	x1, x2, #0x3ff
  415278:	cmp	x2, #0x0
  41527c:	csel	x2, x1, x2, lt  // lt = tstop
  415280:	asr	x2, x2, #10
  415284:	mov	w3, #0x6b                  	// #107
  415288:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41528c:	add	x1, x1, #0x750
  415290:	bl	402b30 <fprintf@plt>
  415294:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  415298:	ldr	x0, [x0, #1392]
  41529c:	ldr	x2, [sp, #152]
  4152a0:	mov	x1, #0x27ff                	// #10239
  4152a4:	mov	w3, #0x20                  	// #32
  4152a8:	cmp	x2, x1
  4152ac:	b.le	4152d0 <nftw@plt+0x12750>
  4152b0:	mov	w1, #0x9fffff              	// #10485759
  4152b4:	cmp	x2, x1
  4152b8:	b.gt	415380 <nftw@plt+0x12800>
  4152bc:	add	x1, x2, #0x3ff
  4152c0:	cmp	x2, #0x0
  4152c4:	csel	x2, x1, x2, lt  // lt = tstop
  4152c8:	asr	x2, x2, #10
  4152cc:	mov	w3, #0x6b                  	// #107
  4152d0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4152d4:	add	x1, x1, #0x780
  4152d8:	bl	402b30 <fprintf@plt>
  4152dc:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4152e0:	ldr	x0, [x0, #1392]
  4152e4:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4152e8:	ldr	x1, [x1, #2296]
  4152ec:	ldr	w2, [x1, #124]
  4152f0:	mov	w1, #0x27ff                	// #10239
  4152f4:	cmp	w2, w1
  4152f8:	b.hi	41539c <nftw@plt+0x1281c>  // b.pmore
  4152fc:	mov	w2, w2
  415300:	mov	w3, #0x20                  	// #32
  415304:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415308:	add	x1, x1, #0x7b0
  41530c:	bl	402b30 <fprintf@plt>
  415310:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  415314:	ldr	x0, [x0, #1392]
  415318:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  41531c:	ldr	x1, [x1, #2296]
  415320:	ldr	w2, [x1, #128]
  415324:	mov	w1, #0x27ff                	// #10239
  415328:	cmp	w2, w1
  41532c:	b.hi	4153c0 <nftw@plt+0x12840>  // b.pmore
  415330:	mov	w2, w2
  415334:	mov	w3, #0x20                  	// #32
  415338:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41533c:	add	x1, x1, #0x7e0
  415340:	bl	402b30 <fprintf@plt>
  415344:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  415348:	ldr	x1, [x0, #1392]
  41534c:	mov	w0, #0xa                   	// #10
  415350:	bl	4025e0 <fputc@plt>
  415354:	ldp	x19, x20, [sp, #16]
  415358:	ldp	x21, x22, [sp, #32]
  41535c:	ldp	x29, x30, [sp], #160
  415360:	ret
  415364:	add	x1, x2, #0xff, lsl #12
  415368:	add	x1, x1, #0xfff
  41536c:	cmp	x2, #0x0
  415370:	csel	x2, x1, x2, lt  // lt = tstop
  415374:	asr	x2, x2, #20
  415378:	mov	w3, #0x4d                  	// #77
  41537c:	b	415288 <nftw@plt+0x12708>
  415380:	add	x1, x2, #0xff, lsl #12
  415384:	add	x1, x1, #0xfff
  415388:	cmp	x2, #0x0
  41538c:	csel	x2, x1, x2, lt  // lt = tstop
  415390:	asr	x2, x2, #20
  415394:	mov	w3, #0x4d                  	// #77
  415398:	b	4152d0 <nftw@plt+0x12750>
  41539c:	mov	w1, #0x9fffff              	// #10485759
  4153a0:	cmp	w2, w1
  4153a4:	b.hi	4153b4 <nftw@plt+0x12834>  // b.pmore
  4153a8:	lsr	w2, w2, #10
  4153ac:	mov	w3, #0x6b                  	// #107
  4153b0:	b	415304 <nftw@plt+0x12784>
  4153b4:	lsr	w2, w2, #20
  4153b8:	mov	w3, #0x4d                  	// #77
  4153bc:	b	415304 <nftw@plt+0x12784>
  4153c0:	mov	w1, #0x9fffff              	// #10485759
  4153c4:	cmp	w2, w1
  4153c8:	b.hi	4153d8 <nftw@plt+0x12858>  // b.pmore
  4153cc:	lsr	w2, w2, #10
  4153d0:	mov	w3, #0x6b                  	// #107
  4153d4:	b	415338 <nftw@plt+0x127b8>
  4153d8:	lsr	w2, w2, #20
  4153dc:	mov	w3, #0x4d                  	// #77
  4153e0:	b	415338 <nftw@plt+0x127b8>
  4153e4:	stp	x29, x30, [sp, #-144]!
  4153e8:	mov	x29, sp
  4153ec:	stp	x19, x20, [sp, #16]
  4153f0:	stp	x21, x22, [sp, #32]
  4153f4:	stp	x23, x24, [sp, #48]
  4153f8:	stp	x25, x26, [sp, #64]
  4153fc:	stp	x27, x28, [sp, #80]
  415400:	mov	x23, x0
  415404:	mov	w3, #0x2                   	// #2
  415408:	mov	w2, #0x0                   	// #0
  41540c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415410:	add	x1, x1, #0x870
  415414:	bl	413ef8 <nftw@plt+0x11378>
  415418:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  41541c:	ldr	x1, [x0, #2296]
  415420:	ldr	w0, [x1, #12]
  415424:	cbz	w0, 4157bc <nftw@plt+0x12c3c>
  415428:	str	wzr, [sp, #96]
  41542c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415430:	add	x2, x2, #0x980
  415434:	str	x2, [sp, #104]
  415438:	b	4156b8 <nftw@plt+0x12b38>
  41543c:	ldr	w26, [x1, #56]
  415440:	b	4156e4 <nftw@plt+0x12b64>
  415444:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415448:	add	x0, x3, #0x838
  41544c:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415450:	add	x3, x3, #0x818
  415454:	cmp	w2, #0x0
  415458:	csel	x3, x3, x0, ne  // ne = any
  41545c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415460:	add	x1, x1, #0x918
  415464:	mov	x0, x23
  415468:	bl	402b30 <fprintf@plt>
  41546c:	mov	x1, x22
  415470:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  415474:	ldr	x0, [x0, #2296]
  415478:	bl	42b36c <nftw@plt+0x287ec>
  41547c:	mov	x21, x0
  415480:	ldr	w2, [x22, #20]
  415484:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415488:	add	x1, x1, #0x930
  41548c:	mov	x0, x23
  415490:	bl	402b30 <fprintf@plt>
  415494:	cbz	x21, 4154c8 <nftw@plt+0x12948>
  415498:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  41549c:	ldr	x0, [x0, #2296]
  4154a0:	ldr	x2, [x0]
  4154a4:	sub	x21, x21, x2
  4154a8:	asr	x21, x21, #3
  4154ac:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4154b0:	movk	x2, #0xaaab
  4154b4:	mul	w2, w21, w2
  4154b8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4154bc:	add	x1, x1, #0x950
  4154c0:	mov	x0, x23
  4154c4:	bl	402b30 <fprintf@plt>
  4154c8:	mov	x1, x23
  4154cc:	mov	w0, #0xa                   	// #10
  4154d0:	bl	4025e0 <fputc@plt>
  4154d4:	ldr	w19, [x20, x19]
  4154d8:	cmp	w19, w26
  4154dc:	b.cs	41568c <nftw@plt+0x12b0c>  // b.hs, b.nlast
  4154e0:	adrp	x25, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4154e4:	mov	w27, #0x1                   	// #1
  4154e8:	b	4155b0 <nftw@plt+0x12a30>
  4154ec:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4154f0:	add	x3, x3, #0x828
  4154f4:	b	41545c <nftw@plt+0x128dc>
  4154f8:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4154fc:	add	x3, x3, #0x848
  415500:	b	41545c <nftw@plt+0x128dc>
  415504:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415508:	add	x3, x3, #0x810
  41550c:	b	41545c <nftw@plt+0x128dc>
  415510:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415514:	add	x2, x2, #0x968
  415518:	mov	w1, #0x454                 	// #1108
  41551c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415520:	add	x0, x0, #0x3f0
  415524:	bl	408d8c <nftw@plt+0x620c>
  415528:	mov	w5, #0x3e8                 	// #1000
  41552c:	mov	w4, w21
  415530:	mov	w3, w19
  415534:	mov	x2, x22
  415538:	mov	w1, w20
  41553c:	mov	x0, x23
  415540:	bl	413f58 <nftw@plt+0x113d8>
  415544:	b	415680 <nftw@plt+0x12b00>
  415548:	mov	w5, #0x64                  	// #100
  41554c:	mov	w4, w21
  415550:	mov	w3, w19
  415554:	mov	x2, x22
  415558:	mov	w1, w20
  41555c:	mov	x0, x23
  415560:	bl	413f58 <nftw@plt+0x113d8>
  415564:	mov	w5, #0xa                   	// #10
  415568:	mov	w4, w21
  41556c:	mov	w3, w19
  415570:	mov	x2, x22
  415574:	mov	w1, w20
  415578:	mov	x0, x23
  41557c:	bl	413f58 <nftw@plt+0x113d8>
  415580:	mov	w5, w27
  415584:	mov	w4, w21
  415588:	mov	w3, w19
  41558c:	mov	x2, x22
  415590:	mov	w1, w20
  415594:	mov	x0, x23
  415598:	bl	413f58 <nftw@plt+0x113d8>
  41559c:	ldrb	w0, [x22, #7]
  4155a0:	lsl	w0, w27, w0
  4155a4:	add	w19, w19, w0
  4155a8:	cmp	w19, w26
  4155ac:	b.cs	41568c <nftw@plt+0x12b0c>  // b.hs, b.nlast
  4155b0:	mov	w1, w19
  4155b4:	ldr	x0, [x25, #2296]
  4155b8:	bl	42bfbc <nftw@plt+0x2943c>
  4155bc:	and	w0, w0, #0xff
  4155c0:	cbz	w0, 415510 <nftw@plt+0x12990>
  4155c4:	add	x8, sp, #0x70
  4155c8:	mov	w2, w19
  4155cc:	mov	x1, x22
  4155d0:	ldr	x0, [x25, #2296]
  4155d4:	bl	42c974 <nftw@plt+0x29df4>
  4155d8:	ldr	w0, [sp, #124]
  4155dc:	cbnz	w0, 41559c <nftw@plt+0x12a1c>
  4155e0:	ldr	x28, [sp, #112]
  4155e4:	ldr	w24, [sp, #120]
  4155e8:	mov	w1, w24
  4155ec:	mov	x0, x28
  4155f0:	bl	4149d0 <nftw@plt+0x11e50>
  4155f4:	mov	x6, x0
  4155f8:	mov	x20, x1
  4155fc:	cbz	x0, 41568c <nftw@plt+0x12b0c>
  415600:	mov	w5, w1
  415604:	mov	w4, w19
  415608:	mov	w3, w24
  41560c:	mov	x2, x28
  415610:	ldr	x1, [sp, #104]
  415614:	mov	x0, x23
  415618:	bl	402b30 <fprintf@plt>
  41561c:	ldrb	w21, [x22, #6]
  415620:	lsl	w21, w27, w21
  415624:	sub	w21, w21, #0x1
  415628:	sxtw	x21, w21
  41562c:	cmp	x20, x21
  415630:	csinc	x21, x21, x20, cs  // cs = hs, nlast
  415634:	mov	w0, w24
  415638:	bl	409294 <nftw@plt+0x6714>
  41563c:	mov	w20, w0
  415640:	mov	w0, w19
  415644:	bl	409294 <nftw@plt+0x6714>
  415648:	mov	w24, w0
  41564c:	mov	x0, x28
  415650:	bl	4024f0 <strlen@plt>
  415654:	cmp	w20, #0x3
  415658:	mov	w1, #0x3                   	// #3
  41565c:	csel	w20, w20, w1, ge  // ge = tcont
  415660:	cmp	w24, #0x5
  415664:	mov	w1, #0x5                   	// #5
  415668:	csel	w24, w24, w1, ge  // ge = tcont
  41566c:	add	w20, w20, w24
  415670:	add	w0, w0, #0x6
  415674:	add	w20, w20, w0
  415678:	cmp	w26, #0x3e7
  41567c:	b.hi	415528 <nftw@plt+0x129a8>  // b.pmore
  415680:	cmp	w26, #0x63
  415684:	b.ls	415564 <nftw@plt+0x129e4>  // b.plast
  415688:	b	415548 <nftw@plt+0x129c8>
  41568c:	mov	x1, x23
  415690:	mov	w0, #0xa                   	// #10
  415694:	bl	4025e0 <fputc@plt>
  415698:	ldr	w0, [sp, #96]
  41569c:	add	w2, w0, #0x1
  4156a0:	str	w2, [sp, #96]
  4156a4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4156a8:	ldr	x1, [x0, #2296]
  4156ac:	ldr	w0, [x1, #12]
  4156b0:	cmp	w0, w2
  4156b4:	b.ls	4157bc <nftw@plt+0x12c3c>  // b.plast
  4156b8:	sub	w0, w0, #0x1
  4156bc:	ldr	w2, [sp, #96]
  4156c0:	cmp	w0, w2
  4156c4:	b.eq	41543c <nftw@plt+0x128bc>  // b.none
  4156c8:	ldr	w0, [sp, #96]
  4156cc:	add	w0, w0, #0x1
  4156d0:	ldr	x2, [x1]
  4156d4:	sbfiz	x3, x0, #1, #32
  4156d8:	add	x0, x3, w0, sxtw
  4156dc:	lsl	x0, x0, #3
  4156e0:	ldr	w26, [x2, x0]
  4156e4:	ldr	w2, [sp, #96]
  4156e8:	sbfiz	x19, x2, #1, #32
  4156ec:	add	x19, x19, w2, sxtw
  4156f0:	lsl	x19, x19, #3
  4156f4:	ldr	x20, [x1]
  4156f8:	add	x22, x20, x19
  4156fc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415700:	add	x1, x1, #0x888
  415704:	mov	x0, x23
  415708:	bl	402b30 <fprintf@plt>
  41570c:	mov	w3, w26
  415710:	ldr	w2, [x20, x19]
  415714:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415718:	add	x1, x1, #0x408
  41571c:	mov	x0, x23
  415720:	bl	402b30 <fprintf@plt>
  415724:	ldr	x2, [x22, #8]
  415728:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41572c:	add	x1, x1, #0x8a0
  415730:	mov	x0, x23
  415734:	bl	402b30 <fprintf@plt>
  415738:	ldr	w2, [x22, #16]
  41573c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415740:	add	x1, x1, #0x8b0
  415744:	mov	x0, x23
  415748:	bl	402b30 <fprintf@plt>
  41574c:	ldrb	w2, [x22, #6]
  415750:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415754:	add	x1, x1, #0x8c8
  415758:	mov	x0, x23
  41575c:	bl	402b30 <fprintf@plt>
  415760:	ldrb	w2, [x22, #6]
  415764:	ldrb	w0, [x22, #7]
  415768:	sub	w2, w2, w0
  41576c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415770:	add	x1, x1, #0x8e8
  415774:	mov	x0, x23
  415778:	bl	402b30 <fprintf@plt>
  41577c:	ldrb	w2, [x22, #7]
  415780:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415784:	add	x1, x1, #0x900
  415788:	mov	x0, x23
  41578c:	bl	402b30 <fprintf@plt>
  415790:	ldrb	w2, [x22, #4]
  415794:	cmp	w2, #0x2
  415798:	b.eq	4154ec <nftw@plt+0x1296c>  // b.none
  41579c:	b.ls	415444 <nftw@plt+0x128c4>  // b.plast
  4157a0:	cmp	w2, #0x3
  4157a4:	b.eq	4154f8 <nftw@plt+0x12978>  // b.none
  4157a8:	cmp	w2, #0x4
  4157ac:	b.ne	415504 <nftw@plt+0x12984>  // b.any
  4157b0:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4157b4:	add	x3, x3, #0x860
  4157b8:	b	41545c <nftw@plt+0x128dc>
  4157bc:	ldr	w2, [x1, #56]
  4157c0:	ldr	w0, [x1, #36]
  4157c4:	mov	w3, #0x80000000            	// #-2147483648
  4157c8:	cbz	w0, 4157dc <nftw@plt+0x12c5c>
  4157cc:	sub	w0, w0, #0x1
  4157d0:	ldr	x1, [x1, #24]
  4157d4:	sbfiz	x0, x0, #5, #32
  4157d8:	ldr	w3, [x1, x0]
  4157dc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4157e0:	add	x1, x1, #0x998
  4157e4:	mov	x0, x23
  4157e8:	bl	413ef8 <nftw@plt+0x11378>
  4157ec:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4157f0:	ldr	x1, [x0, #2296]
  4157f4:	ldr	w0, [x1, #36]
  4157f8:	cbz	w0, 4159a8 <nftw@plt+0x12e28>
  4157fc:	mov	w28, #0x0                   	// #0
  415800:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415804:	add	x2, x2, #0x9b0
  415808:	str	x2, [sp, #96]
  41580c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415810:	add	x2, x2, #0x408
  415814:	str	x2, [sp, #104]
  415818:	adrp	x27, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41581c:	add	x27, x27, #0xaa0
  415820:	b	4158f8 <nftw@plt+0x12d78>
  415824:	sub	w3, w19, w3
  415828:	mov	w2, w19
  41582c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415830:	add	x1, x1, #0xa68
  415834:	mov	x0, x23
  415838:	bl	402b30 <fprintf@plt>
  41583c:	b	415868 <nftw@plt+0x12ce8>
  415840:	mov	w3, w19
  415844:	mov	w2, w20
  415848:	mov	x1, x27
  41584c:	mov	w0, w19
  415850:	bl	4085a8 <nftw@plt+0x5a28>
  415854:	mov	w3, w22
  415858:	mov	w2, w20
  41585c:	mov	x1, x26
  415860:	mov	w0, w19
  415864:	bl	4085a8 <nftw@plt+0x5a28>
  415868:	add	w20, w20, #0x1
  41586c:	add	w21, w21, #0x2
  415870:	ldr	w0, [x24, #4]
  415874:	cmp	w20, w0
  415878:	b.cs	4158d4 <nftw@plt+0x12d54>  // b.hs, b.nlast
  41587c:	ldr	x0, [x24, #16]
  415880:	ldr	w19, [x0, w21, uxtw #2]
  415884:	add	w1, w21, #0x1
  415888:	ldr	w22, [x0, x1, lsl #2]
  41588c:	mov	w4, w22
  415890:	mov	w3, w19
  415894:	mov	w2, w20
  415898:	mov	x1, x25
  41589c:	mov	x0, x23
  4158a0:	bl	402b30 <fprintf@plt>
  4158a4:	cmp	w19, w22
  4158a8:	b.ne	415840 <nftw@plt+0x12cc0>  // b.any
  4158ac:	ldr	w3, [x24]
  4158b0:	cmp	w19, w3
  4158b4:	b.cs	415824 <nftw@plt+0x12ca4>  // b.hs, b.nlast
  4158b8:	mov	w3, w19
  4158bc:	mov	w2, w20
  4158c0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4158c4:	add	x1, x1, #0xa38
  4158c8:	mov	w0, w19
  4158cc:	bl	4085a8 <nftw@plt+0x5a28>
  4158d0:	b	415868 <nftw@plt+0x12ce8>
  4158d4:	mov	x1, x23
  4158d8:	mov	w0, #0xa                   	// #10
  4158dc:	bl	4025e0 <fputc@plt>
  4158e0:	add	w28, w28, #0x1
  4158e4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4158e8:	ldr	x1, [x0, #2296]
  4158ec:	ldr	w0, [x1, #36]
  4158f0:	cmp	w0, w28
  4158f4:	b.ls	4159a8 <nftw@plt+0x12e28>  // b.plast
  4158f8:	sub	w0, w0, #0x1
  4158fc:	sub	w19, w0, w28
  415900:	sbfiz	x20, x19, #5, #32
  415904:	ldr	x21, [x1, #24]
  415908:	add	x24, x21, x20
  41590c:	mov	x0, x24
  415910:	bl	42bb2c <nftw@plt+0x28fac>
  415914:	ldr	w4, [x24, #4]
  415918:	mov	x3, x0
  41591c:	mov	w2, w19
  415920:	ldr	x1, [sp, #96]
  415924:	mov	x0, x23
  415928:	bl	402b30 <fprintf@plt>
  41592c:	ldr	w2, [x21, x20]
  415930:	ldr	w3, [x24, #4]
  415934:	add	w3, w2, w3
  415938:	ldr	x1, [sp, #104]
  41593c:	mov	x0, x23
  415940:	bl	402b30 <fprintf@plt>
  415944:	ldr	w0, [x24, #24]
  415948:	mov	w2, w0
  41594c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415950:	add	x1, x1, #0x9d0
  415954:	bl	4085a8 <nftw@plt+0x5a28>
  415958:	ldr	w2, [x21, x20]
  41595c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415960:	add	x1, x1, #0x9f0
  415964:	mov	x0, x23
  415968:	bl	402b30 <fprintf@plt>
  41596c:	mov	x3, x23
  415970:	mov	x2, #0x13                  	// #19
  415974:	mov	x1, #0x1                   	// #1
  415978:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41597c:	add	x0, x0, #0xa10
  415980:	bl	402950 <fwrite@plt>
  415984:	ldr	w0, [x24, #4]
  415988:	cbz	w0, 4158d4 <nftw@plt+0x12d54>
  41598c:	mov	w21, #0x0                   	// #0
  415990:	mov	w20, #0x0                   	// #0
  415994:	adrp	x25, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415998:	add	x25, x25, #0xa28
  41599c:	adrp	x26, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4159a0:	add	x26, x26, #0xac0
  4159a4:	b	41587c <nftw@plt+0x12cfc>
  4159a8:	mov	w3, #0x80000000            	// #-2147483648
  4159ac:	mov	w2, #0x7fffffff            	// #2147483647
  4159b0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4159b4:	add	x1, x1, #0xae0
  4159b8:	mov	x0, x23
  4159bc:	bl	413ef8 <nftw@plt+0x11378>
  4159c0:	mov	w3, #0xffffffff            	// #-1
  4159c4:	mov	w2, #0x80000000            	// #-2147483648
  4159c8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4159cc:	add	x1, x1, #0xaf0
  4159d0:	mov	x0, x23
  4159d4:	bl	413ef8 <nftw@plt+0x11378>
  4159d8:	ldp	x19, x20, [sp, #16]
  4159dc:	ldp	x21, x22, [sp, #32]
  4159e0:	ldp	x23, x24, [sp, #48]
  4159e4:	ldp	x25, x26, [sp, #64]
  4159e8:	ldp	x27, x28, [sp, #80]
  4159ec:	ldp	x29, x30, [sp], #144
  4159f0:	ret
  4159f4:	stp	x29, x30, [sp, #-48]!
  4159f8:	mov	x29, sp
  4159fc:	stp	x19, x20, [sp, #16]
  415a00:	str	x21, [sp, #32]
  415a04:	mov	x21, x0
  415a08:	mov	w19, w1
  415a0c:	mov	x20, x2
  415a10:	str	w1, [x0]
  415a14:	mov	x3, #0x0                   	// #0
  415a18:	mov	x2, #0x0                   	// #0
  415a1c:	mov	x1, #0x0                   	// #0
  415a20:	sbfiz	x0, x19, #2, #32
  415a24:	bl	416d40 <nftw@plt+0x141c0>
  415a28:	str	x0, [x21, #8]
  415a2c:	cmp	w19, #0x0
  415a30:	b.le	415a4c <nftw@plt+0x12ecc>
  415a34:	mov	x3, #0x0                   	// #0
  415a38:	ldr	w4, [x20, x3, lsl #2]
  415a3c:	str	w4, [x0, x3, lsl #2]
  415a40:	add	x3, x3, #0x1
  415a44:	cmp	w19, w3
  415a48:	b.gt	415a38 <nftw@plt+0x12eb8>
  415a4c:	ldp	x19, x20, [sp, #16]
  415a50:	ldr	x21, [sp, #32]
  415a54:	ldp	x29, x30, [sp], #48
  415a58:	ret
  415a5c:	stp	x29, x30, [sp, #-64]!
  415a60:	mov	x29, sp
  415a64:	stp	x19, x20, [sp, #16]
  415a68:	stp	x21, x22, [sp, #32]
  415a6c:	str	x23, [sp, #48]
  415a70:	mov	x22, x0
  415a74:	mov	x3, #0x1                   	// #1
  415a78:	mov	x2, #0x0                   	// #0
  415a7c:	adrp	x1, 416000 <nftw@plt+0x13480>
  415a80:	add	x1, x1, #0x6fc
  415a84:	mov	x0, #0x30                  	// #48
  415a88:	bl	416d40 <nftw@plt+0x141c0>
  415a8c:	mov	x19, x0
  415a90:	str	xzr, [x0, #16]
  415a94:	str	xzr, [x0, #24]
  415a98:	str	wzr, [x0, #32]
  415a9c:	str	wzr, [x0, #36]
  415aa0:	mov	w0, #0x1                   	// #1
  415aa4:	strb	w0, [x19, #44]
  415aa8:	mov	x0, #0x40                  	// #64
  415aac:	bl	416928 <nftw@plt+0x13da8>
  415ab0:	mov	w20, w0
  415ab4:	ubfiz	x1, x20, #4, #32
  415ab8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415abc:	add	x0, x0, #0xe38
  415ac0:	ldr	w23, [x0, x1]
  415ac4:	lsl	x21, x23, #4
  415ac8:	mov	x3, #0x0                   	// #0
  415acc:	mov	x2, #0x0                   	// #0
  415ad0:	mov	x1, #0x0                   	// #0
  415ad4:	mov	x0, x21
  415ad8:	bl	416d70 <nftw@plt+0x141f0>
  415adc:	cbz	x0, 415b1c <nftw@plt+0x12f9c>
  415ae0:	mov	x1, x0
  415ae4:	cbz	x23, 415af8 <nftw@plt+0x12f78>
  415ae8:	add	x21, x21, x0
  415aec:	str	wzr, [x0], #16
  415af0:	cmp	x0, x21
  415af4:	b.ne	415aec <nftw@plt+0x12f6c>  // b.any
  415af8:	str	x1, [x19]
  415afc:	str	x23, [x19, #8]
  415b00:	str	w20, [x19, #40]
  415b04:	str	x19, [x22]
  415b08:	ldp	x19, x20, [sp, #16]
  415b0c:	ldp	x21, x22, [sp, #32]
  415b10:	ldr	x23, [sp, #48]
  415b14:	ldp	x29, x30, [sp], #64
  415b18:	ret
  415b1c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415b20:	add	x2, x2, #0x3b0
  415b24:	mov	w1, #0x2b5                 	// #693
  415b28:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415b2c:	add	x0, x0, #0x3c0
  415b30:	bl	408d8c <nftw@plt+0x620c>
  415b34:	stp	x29, x30, [sp, #-32]!
  415b38:	mov	x29, sp
  415b3c:	str	x19, [sp, #16]
  415b40:	adrp	x19, 48e000 <__environ@@GLIBC_2.17+0xa68>
  415b44:	mov	x3, #0x0                   	// #0
  415b48:	mov	w2, #0x1                   	// #1
  415b4c:	mov	w1, w0
  415b50:	ldr	x0, [x19, #2296]
  415b54:	bl	42c270 <nftw@plt+0x296f0>
  415b58:	mov	w1, w0
  415b5c:	ldr	x0, [x19, #2296]
  415b60:	bl	42bef8 <nftw@plt+0x29378>
  415b64:	ldr	x19, [sp, #16]
  415b68:	ldp	x29, x30, [sp], #32
  415b6c:	ret
  415b70:	stp	x29, x30, [sp, #-48]!
  415b74:	mov	x29, sp
  415b78:	stp	x19, x20, [sp, #16]
  415b7c:	str	x21, [sp, #32]
  415b80:	cbz	x2, 415c3c <nftw@plt+0x130bc>
  415b84:	mov	x21, x0
  415b88:	mov	w0, w1
  415b8c:	mov	x20, x2
  415b90:	mov	x19, x3
  415b94:	cbz	x3, 415c54 <nftw@plt+0x130d4>
  415b98:	bl	415b34 <nftw@plt+0x12fb4>
  415b9c:	ldr	x2, [x21]
  415ba0:	ldr	w1, [x2, #32]
  415ba4:	add	w1, w1, #0x1
  415ba8:	str	w1, [x2, #32]
  415bac:	ldr	w7, [x2, #40]
  415bb0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415bb4:	add	x1, x1, #0xe38
  415bb8:	ubfiz	x4, x7, #4, #32
  415bbc:	add	x3, x1, x4
  415bc0:	ldr	w6, [x1, x4]
  415bc4:	ldr	w9, [x3, #12]
  415bc8:	mov	w5, w0
  415bcc:	ldr	w1, [x3, #4]
  415bd0:	mul	x1, x1, x5
  415bd4:	lsr	x1, x1, #32
  415bd8:	sub	w4, w0, w1
  415bdc:	add	w1, w1, w4, lsr #1
  415be0:	lsr	w1, w1, w9
  415be4:	msub	w1, w1, w6, w0
  415be8:	ldr	x3, [x2]
  415bec:	ubfiz	x8, x1, #4, #32
  415bf0:	add	x4, x3, x8
  415bf4:	ldr	w8, [x3, x8]
  415bf8:	cmp	w8, #0x0
  415bfc:	ccmp	w0, w8, #0x4, ne  // ne = any
  415c00:	b.ne	415c6c <nftw@plt+0x130ec>  // b.any
  415c04:	ldr	w1, [x4]
  415c08:	mov	w0, #0x0                   	// #0
  415c0c:	cbz	w1, 415c2c <nftw@plt+0x130ac>
  415c10:	ldr	x0, [x4, #8]
  415c14:	ldr	w0, [x0]
  415c18:	str	w0, [x20]
  415c1c:	ldr	x0, [x4, #8]
  415c20:	ldr	x0, [x0, #8]
  415c24:	str	x0, [x19]
  415c28:	mov	w0, #0x1                   	// #1
  415c2c:	ldp	x19, x20, [sp, #16]
  415c30:	ldr	x21, [sp, #32]
  415c34:	ldp	x29, x30, [sp], #48
  415c38:	ret
  415c3c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415c40:	add	x2, x2, #0xb08
  415c44:	mov	w1, #0x50d                 	// #1293
  415c48:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415c4c:	add	x0, x0, #0x3f0
  415c50:	bl	408d8c <nftw@plt+0x620c>
  415c54:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415c58:	add	x2, x2, #0xb08
  415c5c:	mov	w1, #0x50e                 	// #1294
  415c60:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415c64:	add	x0, x0, #0x3f0
  415c68:	bl	408d8c <nftw@plt+0x620c>
  415c6c:	ldr	x10, [x2, #8]
  415c70:	ubfiz	x7, x7, #4, #32
  415c74:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415c78:	add	x8, x8, #0xe38
  415c7c:	add	x7, x8, x7
  415c80:	ldr	w4, [x7, #8]
  415c84:	mul	x4, x4, x5
  415c88:	lsr	x7, x4, #32
  415c8c:	add	w5, w0, #0x1
  415c90:	sub	w4, w0, w7
  415c94:	add	w4, w7, w4, lsr #1
  415c98:	lsr	w4, w4, w9
  415c9c:	sub	w6, w6, #0x2
  415ca0:	msub	w5, w4, w6, w5
  415ca4:	ldr	w4, [x2, #36]
  415ca8:	add	w4, w4, #0x1
  415cac:	str	w4, [x2, #36]
  415cb0:	add	w1, w1, w5
  415cb4:	sub	w4, w1, w10
  415cb8:	cmp	x10, w1, uxtw
  415cbc:	csel	w1, w4, w1, ls  // ls = plast
  415cc0:	ubfiz	x6, x1, #4, #32
  415cc4:	add	x4, x3, x6
  415cc8:	ldr	w6, [x3, x6]
  415ccc:	cmp	w6, #0x0
  415cd0:	ccmp	w0, w6, #0x4, ne  // ne = any
  415cd4:	b.ne	415ca4 <nftw@plt+0x13124>  // b.any
  415cd8:	b	415c04 <nftw@plt+0x13084>
  415cdc:	stp	x29, x30, [sp, #-288]!
  415ce0:	mov	x29, sp
  415ce4:	str	x0, [sp, #104]
  415ce8:	str	w3, [sp, #144]
  415cec:	str	w4, [sp, #116]
  415cf0:	str	w5, [sp, #128]
  415cf4:	str	w6, [sp, #132]
  415cf8:	str	x7, [sp, #136]
  415cfc:	cbz	x7, 415d4c <nftw@plt+0x131cc>
  415d00:	stp	x19, x20, [sp, #16]
  415d04:	mov	x20, x1
  415d08:	mov	w19, w2
  415d0c:	add	x0, sp, #0x110
  415d10:	bl	418a10 <nftw@plt+0x15e90>
  415d14:	str	w19, [sp, #160]
  415d18:	ldr	x0, [sp, #104]
  415d1c:	cbz	x0, 415d78 <nftw@plt+0x131f8>
  415d20:	stp	x21, x22, [sp, #32]
  415d24:	cbnz	w19, 415da0 <nftw@plt+0x13220>
  415d28:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415d2c:	add	x21, x21, #0xd20
  415d30:	add	x0, sp, #0x110
  415d34:	bl	418a48 <nftw@plt+0x15ec8>
  415d38:	mov	x0, x21
  415d3c:	ldp	x19, x20, [sp, #16]
  415d40:	ldp	x21, x22, [sp, #32]
  415d44:	ldp	x29, x30, [sp], #288
  415d48:	ret
  415d4c:	stp	x19, x20, [sp, #16]
  415d50:	stp	x21, x22, [sp, #32]
  415d54:	stp	x23, x24, [sp, #48]
  415d58:	stp	x25, x26, [sp, #64]
  415d5c:	stp	x27, x28, [sp, #80]
  415d60:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415d64:	add	x2, x2, #0xd70
  415d68:	mov	w1, #0x5fa                 	// #1530
  415d6c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415d70:	add	x0, x0, #0x3f0
  415d74:	bl	408d8c <nftw@plt+0x620c>
  415d78:	stp	x21, x22, [sp, #32]
  415d7c:	stp	x23, x24, [sp, #48]
  415d80:	stp	x25, x26, [sp, #64]
  415d84:	stp	x27, x28, [sp, #80]
  415d88:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415d8c:	add	x2, x2, #0xd90
  415d90:	mov	w1, #0x551                 	// #1361
  415d94:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415d98:	add	x0, x0, #0x3f0
  415d9c:	bl	408d8c <nftw@plt+0x620c>
  415da0:	ldr	x0, [sp, #104]
  415da4:	bl	41eb14 <nftw@plt+0x1bf94>
  415da8:	ldrb	w0, [x0, #45]
  415dac:	cmp	w0, #0x2
  415db0:	b.ne	416114 <nftw@plt+0x13594>  // b.any
  415db4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  415db8:	ldr	x0, [x0, #2296]
  415dbc:	ldrb	w0, [x0, #116]
  415dc0:	str	w0, [sp, #148]
  415dc4:	cbnz	w0, 416120 <nftw@plt+0x135a0>
  415dc8:	mov	w0, #0x1                   	// #1
  415dcc:	str	w0, [sp, #164]
  415dd0:	add	x0, sp, #0xa0
  415dd4:	str	x0, [sp, #168]
  415dd8:	cbz	x20, 415e24 <nftw@plt+0x132a4>
  415ddc:	add	x3, sp, #0xa8
  415de0:	add	x2, sp, #0xa4
  415de4:	ldr	w1, [sp, #160]
  415de8:	mov	x0, x20
  415dec:	bl	415b70 <nftw@plt+0x12ff0>
  415df0:	ldrsw	x0, [sp, #164]
  415df4:	mov	w20, w0
  415df8:	cbnz	w0, 415e28 <nftw@plt+0x132a8>
  415dfc:	ldr	w3, [sp, #164]
  415e00:	cmp	w3, #0x0
  415e04:	b.le	4160a4 <nftw@plt+0x13524>
  415e08:	stp	x23, x24, [sp, #48]
  415e0c:	stp	x25, x26, [sp, #64]
  415e10:	stp	x27, x28, [sp, #80]
  415e14:	mov	x20, #0x0                   	// #0
  415e18:	mov	x19, #0x0                   	// #0
  415e1c:	mov	x27, #0x0                   	// #0
  415e20:	b	4161e8 <nftw@plt+0x13668>
  415e24:	mov	w20, #0x1                   	// #1
  415e28:	ubfiz	x1, x20, #4, #32
  415e2c:	add	x1, x1, #0x8
  415e30:	mov	x0, #0x0                   	// #0
  415e34:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  415e38:	mov	x19, x0
  415e3c:	ldr	w0, [x0]
  415e40:	bfxil	w0, w20, #0, #31
  415e44:	str	w0, [x19]
  415e48:	ubfx	x0, x0, #24, #7
  415e4c:	strb	w0, [x19, #3]
  415e50:	str	wzr, [x19, #4]
  415e54:	ldrsw	x21, [sp, #164]
  415e58:	cbz	w21, 416538 <nftw@plt+0x139b8>
  415e5c:	ubfiz	x1, x21, #4, #32
  415e60:	add	x1, x1, #0x8
  415e64:	mov	x0, #0x0                   	// #0
  415e68:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  415e6c:	mov	x20, x0
  415e70:	ldr	w0, [x0]
  415e74:	bfxil	w0, w21, #0, #31
  415e78:	str	w0, [x20]
  415e7c:	ubfx	x0, x0, #24, #7
  415e80:	strb	w0, [x20, #3]
  415e84:	str	wzr, [x20, #4]
  415e88:	ldr	w3, [sp, #164]
  415e8c:	cmp	w3, #0x0
  415e90:	b.le	415f34 <nftw@plt+0x133b4>
  415e94:	stp	x23, x24, [sp, #48]
  415e98:	stp	x25, x26, [sp, #64]
  415e9c:	stp	x27, x28, [sp, #80]
  415ea0:	b	415e1c <nftw@plt+0x1329c>
  415ea4:	mov	w0, #0x5fffffff            	// #1610612735
  415ea8:	cmp	w22, w0
  415eac:	b.hi	415fb4 <nftw@plt+0x13434>  // b.pmore
  415eb0:	cmp	w24, w0
  415eb4:	b.ls	416234 <nftw@plt+0x136b4>  // b.plast
  415eb8:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415ebc:	add	x21, x21, #0xbc8
  415ec0:	ldp	x23, x24, [sp, #48]
  415ec4:	ldp	x25, x26, [sp, #64]
  415ec8:	ldp	x27, x28, [sp, #80]
  415ecc:	b	415f5c <nftw@plt+0x133dc>
  415ed0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  415ed4:	add	x2, x2, #0xfc0
  415ed8:	mov	w1, #0x44                  	// #68
  415edc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  415ee0:	add	x0, x0, #0xfc8
  415ee4:	bl	408d8c <nftw@plt+0x620c>
  415ee8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  415eec:	add	x2, x2, #0xfc0
  415ef0:	mov	w1, #0x45                  	// #69
  415ef4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  415ef8:	add	x0, x0, #0xfc8
  415efc:	bl	408d8c <nftw@plt+0x620c>
  415f00:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  415f04:	add	x2, x2, #0xfc0
  415f08:	mov	w1, #0x47                  	// #71
  415f0c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  415f10:	add	x0, x0, #0xfc8
  415f14:	bl	408d8c <nftw@plt+0x620c>
  415f18:	add	w1, w28, #0x1
  415f1c:	mov	w0, #0x1                   	// #1
  415f20:	str	w0, [sp, #152]
  415f24:	b	4164b4 <nftw@plt+0x13934>
  415f28:	ldp	x23, x24, [sp, #48]
  415f2c:	ldp	x25, x26, [sp, #64]
  415f30:	ldp	x27, x28, [sp, #80]
  415f34:	add	x1, x19, #0x8
  415f38:	add	x2, x20, #0x8
  415f3c:	cmp	x20, #0x0
  415f40:	ldr	w5, [sp, #144]
  415f44:	add	x4, sp, #0x110
  415f48:	sxtw	x3, w3
  415f4c:	csel	x2, x2, x20, ne  // ne = any
  415f50:	ldr	x0, [sp, #104]
  415f54:	bl	41bc3c <nftw@plt+0x190bc>
  415f58:	mov	x21, x0
  415f5c:	cbz	x20, 415f70 <nftw@plt+0x133f0>
  415f60:	ldrsb	w0, [x20, #3]
  415f64:	tbnz	w0, #31, 4160b4 <nftw@plt+0x13534>
  415f68:	mov	x0, x20
  415f6c:	bl	402910 <free@plt>
  415f70:	cbz	x19, 41613c <nftw@plt+0x135bc>
  415f74:	mov	x20, #0x0                   	// #0
  415f78:	add	x22, x19, #0x10
  415f7c:	ldr	w0, [x19, #4]
  415f80:	cmp	w0, w20
  415f84:	b.ls	41612c <nftw@plt+0x135ac>  // b.plast
  415f88:	lsl	x0, x20, #4
  415f8c:	ldr	x0, [x22, x0]
  415f90:	bl	402910 <free@plt>
  415f94:	add	x20, x20, #0x1
  415f98:	b	415f7c <nftw@plt+0x133fc>
  415f9c:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415fa0:	add	x21, x21, #0xb80
  415fa4:	ldp	x23, x24, [sp, #48]
  415fa8:	ldp	x25, x26, [sp, #64]
  415fac:	ldp	x27, x28, [sp, #80]
  415fb0:	b	415f5c <nftw@plt+0x133dc>
  415fb4:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415fb8:	add	x21, x21, #0xb90
  415fbc:	ldp	x23, x24, [sp, #48]
  415fc0:	ldp	x25, x26, [sp, #64]
  415fc4:	ldp	x27, x28, [sp, #80]
  415fc8:	b	415f5c <nftw@plt+0x133dc>
  415fcc:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415fd0:	add	x21, x21, #0xc00
  415fd4:	ldp	x23, x24, [sp, #48]
  415fd8:	ldp	x25, x26, [sp, #64]
  415fdc:	ldp	x27, x28, [sp, #80]
  415fe0:	b	415f5c <nftw@plt+0x133dc>
  415fe4:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  415fe8:	add	x21, x21, #0xc28
  415fec:	ldp	x23, x24, [sp, #48]
  415ff0:	ldp	x25, x26, [sp, #64]
  415ff4:	ldp	x27, x28, [sp, #80]
  415ff8:	b	415f5c <nftw@plt+0x133dc>
  415ffc:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416000:	add	x21, x21, #0xc50
  416004:	ldp	x23, x24, [sp, #48]
  416008:	ldp	x25, x26, [sp, #64]
  41600c:	ldp	x27, x28, [sp, #80]
  416010:	b	415f5c <nftw@plt+0x133dc>
  416014:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416018:	add	x21, x21, #0xc70
  41601c:	ldp	x23, x24, [sp, #48]
  416020:	ldp	x25, x26, [sp, #64]
  416024:	ldp	x27, x28, [sp, #80]
  416028:	b	415f5c <nftw@plt+0x133dc>
  41602c:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416030:	add	x21, x21, #0xc90
  416034:	ldp	x23, x24, [sp, #48]
  416038:	ldp	x25, x26, [sp, #64]
  41603c:	ldp	x27, x28, [sp, #80]
  416040:	b	415f5c <nftw@plt+0x133dc>
  416044:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416048:	add	x21, x21, #0xb28
  41604c:	ldp	x23, x24, [sp, #48]
  416050:	ldp	x25, x26, [sp, #64]
  416054:	ldp	x27, x28, [sp, #80]
  416058:	b	415f5c <nftw@plt+0x133dc>
  41605c:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416060:	add	x21, x21, #0xb28
  416064:	ldp	x23, x24, [sp, #48]
  416068:	ldp	x25, x26, [sp, #64]
  41606c:	ldp	x27, x28, [sp, #80]
  416070:	b	415f5c <nftw@plt+0x133dc>
  416074:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416078:	add	x21, x21, #0xb48
  41607c:	ldp	x23, x24, [sp, #48]
  416080:	ldp	x25, x26, [sp, #64]
  416084:	ldp	x27, x28, [sp, #80]
  416088:	b	415f5c <nftw@plt+0x133dc>
  41608c:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416090:	add	x21, x21, #0xca8
  416094:	ldp	x23, x24, [sp, #48]
  416098:	ldp	x25, x26, [sp, #64]
  41609c:	ldp	x27, x28, [sp, #80]
  4160a0:	b	415f5c <nftw@plt+0x133dc>
  4160a4:	mov	x20, #0x0                   	// #0
  4160a8:	mov	x19, #0x0                   	// #0
  4160ac:	mov	x1, #0x0                   	// #0
  4160b0:	b	415f38 <nftw@plt+0x133b8>
  4160b4:	str	wzr, [x20, #4]
  4160b8:	b	415f70 <nftw@plt+0x133f0>
  4160bc:	str	wzr, [x19, #4]
  4160c0:	b	41613c <nftw@plt+0x135bc>
  4160c4:	ldr	x0, [sp, #272]
  4160c8:	ldr	w1, [sp, #132]
  4160cc:	add	x6, x0, w1, sxtw #3
  4160d0:	ldr	w1, [sp, #128]
  4160d4:	sbfiz	x5, x1, #3, #32
  4160d8:	ldr	w1, [sp, #116]
  4160dc:	sbfiz	x4, x1, #3, #32
  4160e0:	ldr	w2, [x6, #4]
  4160e4:	ldr	w1, [x0, x5]
  4160e8:	ldr	w0, [x0, x4]
  4160ec:	bl	414c88 <nftw@plt+0x12108>
  4160f0:	ldr	x1, [sp, #136]
  4160f4:	str	w0, [x1]
  4160f8:	b	415d30 <nftw@plt+0x131b0>
  4160fc:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416100:	add	x21, x21, #0xcf0
  416104:	b	415d30 <nftw@plt+0x131b0>
  416108:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41610c:	add	x21, x21, #0xcd8
  416110:	b	415d30 <nftw@plt+0x131b0>
  416114:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416118:	add	x21, x21, #0xd38
  41611c:	b	415d30 <nftw@plt+0x131b0>
  416120:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416124:	add	x21, x21, #0xd58
  416128:	b	415d30 <nftw@plt+0x131b0>
  41612c:	ldrsb	w0, [x19, #3]
  416130:	tbnz	w0, #31, 4160bc <nftw@plt+0x1353c>
  416134:	mov	x0, x19
  416138:	bl	402910 <free@plt>
  41613c:	cbnz	x21, 415d30 <nftw@plt+0x131b0>
  416140:	ldr	w0, [sp, #280]
  416144:	ldr	w1, [sp, #116]
  416148:	cmp	w1, w0
  41614c:	b.ge	4160fc <nftw@plt+0x1357c>  // b.tcont
  416150:	ldr	w1, [sp, #128]
  416154:	cmp	w1, w0
  416158:	b.ge	416108 <nftw@plt+0x13588>  // b.tcont
  41615c:	ldr	w1, [sp, #132]
  416160:	cmp	w0, w1
  416164:	b.gt	4160c4 <nftw@plt+0x13544>
  416168:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41616c:	add	x21, x21, #0xd08
  416170:	b	415d30 <nftw@plt+0x131b0>
  416174:	ldr	w1, [x20, #4]
  416178:	ldr	w0, [x20]
  41617c:	add	w1, w1, #0x1
  416180:	and	w0, w0, #0x7fffffff
  416184:	bl	4120a8 <nftw@plt+0xf528>
  416188:	mov	w21, w0
  41618c:	ldr	w22, [x20, #4]
  416190:	ubfiz	x1, x21, #4, #32
  416194:	add	x1, x1, #0x8
  416198:	mov	x0, x20
  41619c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4161a0:	mov	x20, x0
  4161a4:	ldr	w0, [x0]
  4161a8:	bfxil	w0, w21, #0, #31
  4161ac:	str	w0, [x20]
  4161b0:	ubfx	x0, x0, #24, #7
  4161b4:	strb	w0, [x20, #3]
  4161b8:	str	w22, [x20, #4]
  4161bc:	ldr	w0, [x20, #4]
  4161c0:	add	w1, w0, #0x1
  4161c4:	str	w1, [x20, #4]
  4161c8:	ubfiz	x0, x0, #4, #32
  4161cc:	add	x0, x20, x0
  4161d0:	ldp	x2, x3, [sp, #192]
  4161d4:	stp	x2, x3, [x0, #8]
  4161d8:	ldr	w3, [sp, #164]
  4161dc:	add	x27, x27, #0x1
  4161e0:	cmp	w3, w27
  4161e4:	b.le	415f28 <nftw@plt+0x133a8>
  4161e8:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4161ec:	ldr	x0, [sp, #168]
  4161f0:	ldr	w1, [x0, x27, lsl #2]
  4161f4:	ldr	x0, [x21, #2296]
  4161f8:	bl	42bef8 <nftw@plt+0x29378>
  4161fc:	mov	x22, x0
  416200:	lsr	x24, x0, #32
  416204:	ldr	x2, [x21, #2296]
  416208:	ldr	w0, [x2, #36]
  41620c:	mov	w1, #0x80000000            	// #-2147483648
  416210:	cbz	w0, 416224 <nftw@plt+0x136a4>
  416214:	sub	w0, w0, #0x1
  416218:	ldr	x1, [x2, #24]
  41621c:	sbfiz	x0, x0, #5, #32
  416220:	ldr	w1, [x1, x0]
  416224:	cmp	w22, w1
  416228:	b.cc	415ea4 <nftw@plt+0x13324>  // b.lo, b.ul, b.last
  41622c:	cmp	w22, w24
  416230:	b.ne	415f9c <nftw@plt+0x1341c>  // b.any
  416234:	add	x8, sp, #0xd0
  416238:	mov	w1, #0x1                   	// #1
  41623c:	mov	w0, w22
  416240:	bl	414bd4 <nftw@plt+0x12054>
  416244:	ldr	x25, [sp, #208]
  416248:	ldr	w26, [sp, #216]
  41624c:	ldr	w23, [sp, #220]
  416250:	add	x8, sp, #0xf0
  416254:	mov	w1, #0x2                   	// #2
  416258:	mov	w0, w24
  41625c:	bl	414bd4 <nftw@plt+0x12054>
  416260:	ldr	w21, [sp, #252]
  416264:	ldr	x0, [sp, #240]
  416268:	cmp	x25, x0
  41626c:	b.ne	415fcc <nftw@plt+0x1344c>  // b.any
  416270:	ldr	w0, [sp, #248]
  416274:	cmp	w26, w0
  416278:	b.ne	415fe4 <nftw@plt+0x13464>  // b.any
  41627c:	cmp	w23, w21
  416280:	b.gt	415ffc <nftw@plt+0x1347c>
  416284:	mov	w1, w26
  416288:	mov	x0, x25
  41628c:	bl	4149d0 <nftw@plt+0x11e50>
  416290:	mov	x3, x1
  416294:	cbz	x0, 416014 <nftw@plt+0x13494>
  416298:	sub	w21, w21, w23
  41629c:	add	w21, w21, #0x1
  4162a0:	sxtw	x1, w21
  4162a4:	sub	w2, w23, #0x1
  4162a8:	sxtw	x4, w2
  4162ac:	add	x5, x1, x4
  4162b0:	cmp	x3, x5
  4162b4:	b.cc	41602c <nftw@plt+0x134ac>  // b.lo, b.ul, b.last
  4162b8:	tbnz	w2, #31, 415ed0 <nftw@plt+0x13350>
  4162bc:	cmp	w2, w3
  4162c0:	b.ge	415ee8 <nftw@plt+0x13368>  // b.tcont
  4162c4:	add	w2, w21, w2
  4162c8:	cmp	w3, w2
  4162cc:	b.lt	415f00 <nftw@plt+0x13380>  // b.tstop
  4162d0:	add	x0, x0, x4
  4162d4:	bl	44a8b8 <_obstack_memory_used@@Base+0x2b4>
  4162d8:	str	x0, [sp, #120]
  4162dc:	cbz	x19, 4164a4 <nftw@plt+0x13924>
  4162e0:	ldr	w28, [x19, #4]
  4162e4:	ldr	w0, [x19]
  4162e8:	ubfx	x0, x0, #0, #31
  4162ec:	cmp	w0, w28
  4162f0:	b.ne	41634c <nftw@plt+0x137cc>  // b.any
  4162f4:	ldrsb	w0, [x19, #3]
  4162f8:	tbnz	w0, #31, 415f18 <nftw@plt+0x13398>
  4162fc:	ldr	w1, [x19, #4]
  416300:	ldr	w0, [x19]
  416304:	add	w1, w1, #0x1
  416308:	and	w0, w0, #0x7fffffff
  41630c:	bl	4120a8 <nftw@plt+0xf528>
  416310:	mov	w28, w0
  416314:	ldr	w0, [x19, #4]
  416318:	str	w0, [sp, #152]
  41631c:	ubfiz	x1, x28, #4, #32
  416320:	add	x1, x1, #0x8
  416324:	mov	x0, x19
  416328:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41632c:	mov	x19, x0
  416330:	ldr	w0, [x0]
  416334:	bfxil	w0, w28, #0, #31
  416338:	str	w0, [x19]
  41633c:	ubfx	x0, x0, #24, #7
  416340:	strb	w0, [x19, #3]
  416344:	ldr	w0, [sp, #152]
  416348:	str	w0, [x19, #4]
  41634c:	ldr	w0, [x19, #4]
  416350:	add	w1, w0, #0x1
  416354:	str	w1, [x19, #4]
  416358:	ubfiz	x0, x0, #4, #32
  41635c:	add	x0, x0, #0x8
  416360:	add	x1, x19, x0
  416364:	str	w21, [x19, x0]
  416368:	ldr	x0, [sp, #120]
  41636c:	str	x0, [x1, #8]
  416370:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416374:	add	x3, sp, #0xb0
  416378:	mov	w2, #0x1                   	// #1
  41637c:	mov	w1, w22
  416380:	ldr	x0, [x21, #2296]
  416384:	bl	42c270 <nftw@plt+0x296f0>
  416388:	add	x3, sp, #0xb8
  41638c:	mov	w2, #0x1                   	// #1
  416390:	mov	w1, w24
  416394:	ldr	x0, [x21, #2296]
  416398:	bl	42c270 <nftw@plt+0x296f0>
  41639c:	ldr	x0, [sp, #176]
  4163a0:	cbz	x0, 416044 <nftw@plt+0x134c4>
  4163a4:	ldr	x1, [sp, #184]
  4163a8:	cbz	x1, 41605c <nftw@plt+0x134dc>
  4163ac:	cmp	x0, x1
  4163b0:	b.eq	4163c4 <nftw@plt+0x13844>  // b.none
  4163b4:	ldr	x3, [x0, #8]
  4163b8:	ldr	x2, [x1, #8]
  4163bc:	cmp	x3, x2
  4163c0:	b.ne	416074 <nftw@plt+0x134f4>  // b.any
  4163c4:	ldr	x0, [x0, #8]
  4163c8:	cmp	x25, x0
  4163cc:	b.ne	41608c <nftw@plt+0x1350c>  // b.any
  4163d0:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4163d4:	mov	w3, w23
  4163d8:	mov	w2, w26
  4163dc:	ldr	x0, [x21, #2296]
  4163e0:	bl	42ba48 <nftw@plt+0x28ec8>
  4163e4:	ldr	x2, [x21, #2296]
  4163e8:	mov	w1, w0
  4163ec:	add	x0, sp, #0xc0
  4163f0:	bl	418e8c <nftw@plt+0x1630c>
  4163f4:	cbz	x20, 416420 <nftw@plt+0x138a0>
  4163f8:	ldr	w21, [x20, #4]
  4163fc:	ldr	w0, [x20]
  416400:	ubfx	x0, x0, #0, #31
  416404:	cmp	w0, w21
  416408:	b.ne	4161bc <nftw@plt+0x1363c>  // b.any
  41640c:	ldrsb	w0, [x20, #3]
  416410:	add	w1, w21, #0x1
  416414:	mov	w23, #0x1                   	// #1
  416418:	tbz	w0, #31, 416174 <nftw@plt+0x135f4>
  41641c:	b	41642c <nftw@plt+0x138ac>
  416420:	ldr	w23, [sp, #148]
  416424:	mov	w21, #0x0                   	// #0
  416428:	mov	w1, #0x1                   	// #1
  41642c:	mov	w0, #0x4                   	// #4
  416430:	cmp	w1, w0
  416434:	csel	w22, w1, w0, cs  // cs = hs, nlast
  416438:	csel	w1, w1, w0, cs  // cs = hs, nlast
  41643c:	lsl	x1, x1, #4
  416440:	add	x1, x1, #0x8
  416444:	mov	x0, #0x0                   	// #0
  416448:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41644c:	ldr	w1, [x0]
  416450:	bfxil	w1, w22, #0, #31
  416454:	str	w1, [x0]
  416458:	ubfx	x1, x1, #24, #7
  41645c:	strb	w1, [x0, #3]
  416460:	str	wzr, [x0, #4]
  416464:	cbz	w23, 41649c <nftw@plt+0x1391c>
  416468:	add	x2, x0, #0x8
  41646c:	add	x1, x20, #0x8
  416470:	cbz	w21, 416490 <nftw@plt+0x13910>
  416474:	sub	w3, w21, #0x1
  416478:	add	x20, x20, x3, lsl #4
  41647c:	add	x20, x20, #0x18
  416480:	ldp	x4, x5, [x1], #16
  416484:	stp	x4, x5, [x2], #16
  416488:	cmp	x20, x1
  41648c:	b.ne	416480 <nftw@plt+0x13900>  // b.any
  416490:	str	w21, [x0, #4]
  416494:	mov	x20, x0
  416498:	b	4161bc <nftw@plt+0x1363c>
  41649c:	mov	x20, x0
  4164a0:	b	4161bc <nftw@plt+0x1363c>
  4164a4:	ldr	w0, [sp, #148]
  4164a8:	str	w0, [sp, #152]
  4164ac:	mov	w28, #0x0                   	// #0
  4164b0:	mov	w1, #0x1                   	// #1
  4164b4:	mov	w0, #0x4                   	// #4
  4164b8:	cmp	w1, w0
  4164bc:	csel	w2, w1, w0, cs  // cs = hs, nlast
  4164c0:	str	w2, [sp, #156]
  4164c4:	csel	w1, w1, w0, cs  // cs = hs, nlast
  4164c8:	lsl	x1, x1, #4
  4164cc:	add	x1, x1, #0x8
  4164d0:	mov	x0, #0x0                   	// #0
  4164d4:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4164d8:	ldr	w1, [x0]
  4164dc:	ldr	w2, [sp, #156]
  4164e0:	bfxil	w1, w2, #0, #31
  4164e4:	str	w1, [x0]
  4164e8:	ubfx	x1, x1, #24, #7
  4164ec:	strb	w1, [x0, #3]
  4164f0:	str	wzr, [x0, #4]
  4164f4:	ldr	w1, [sp, #152]
  4164f8:	cbz	w1, 416530 <nftw@plt+0x139b0>
  4164fc:	add	x2, x0, #0x8
  416500:	add	x1, x19, #0x8
  416504:	cbz	w28, 416524 <nftw@plt+0x139a4>
  416508:	sub	w3, w28, #0x1
  41650c:	add	x19, x19, x3, lsl #4
  416510:	add	x19, x19, #0x18
  416514:	ldp	x4, x5, [x1], #16
  416518:	stp	x4, x5, [x2], #16
  41651c:	cmp	x19, x1
  416520:	b.ne	416514 <nftw@plt+0x13994>  // b.any
  416524:	str	w28, [x0, #4]
  416528:	mov	x19, x0
  41652c:	b	41634c <nftw@plt+0x137cc>
  416530:	mov	x19, x0
  416534:	b	41634c <nftw@plt+0x137cc>
  416538:	mov	x20, #0x0                   	// #0
  41653c:	b	415e88 <nftw@plt+0x13308>
  416540:	stp	x29, x30, [sp, #-64]!
  416544:	mov	x29, sp
  416548:	stp	x19, x20, [sp, #16]
  41654c:	stp	x21, x22, [sp, #32]
  416550:	str	x23, [sp, #48]
  416554:	cmp	w1, #0x1
  416558:	b.le	416688 <nftw@plt+0x13b08>
  41655c:	mov	x23, x0
  416560:	mov	w22, w1
  416564:	mov	x21, x2
  416568:	cbz	x2, 4166a0 <nftw@plt+0x13b20>
  41656c:	ldr	w0, [x2]
  416570:	bl	415b34 <nftw@plt+0x12fb4>
  416574:	mov	w19, w0
  416578:	mov	x3, #0x1                   	// #1
  41657c:	mov	x2, #0x0                   	// #0
  416580:	mov	x1, #0x0                   	// #0
  416584:	mov	x0, #0x10                  	// #16
  416588:	bl	416d40 <nftw@plt+0x141c0>
  41658c:	mov	x20, x0
  416590:	mov	x2, x21
  416594:	mov	w1, w22
  416598:	bl	4159f4 <nftw@plt+0x12e74>
  41659c:	ldr	x21, [x23]
  4165a0:	ldr	x0, [x21, #8]
  4165a4:	add	x0, x0, x0, lsl #1
  4165a8:	ldr	x1, [x21, #16]
  4165ac:	cmp	x0, x1, lsl #2
  4165b0:	b.ls	4166b8 <nftw@plt+0x13b38>  // b.plast
  4165b4:	ldr	w0, [x21, #32]
  4165b8:	add	w0, w0, #0x1
  4165bc:	str	w0, [x21, #32]
  4165c0:	ldr	w7, [x21, #40]
  4165c4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4165c8:	add	x0, x0, #0xe38
  4165cc:	ubfiz	x2, x7, #4, #32
  4165d0:	add	x1, x0, x2
  4165d4:	ldr	w6, [x0, x2]
  4165d8:	ldr	w9, [x1, #12]
  4165dc:	mov	w4, w19
  4165e0:	ldr	w1, [x1, #4]
  4165e4:	mul	x1, x1, x4
  4165e8:	lsr	x1, x1, #32
  4165ec:	sub	w2, w19, w1
  4165f0:	add	w1, w1, w2, lsr #1
  4165f4:	lsr	w1, w1, w9
  4165f8:	msub	w1, w1, w6, w19
  4165fc:	ldr	x0, [x21]
  416600:	ubfiz	x8, x1, #4, #32
  416604:	add	x5, x0, x8
  416608:	ldr	w8, [x0, x8]
  41660c:	cbz	w8, 4166c4 <nftw@plt+0x13b44>
  416610:	cmp	w19, w8
  416614:	b.eq	4166e4 <nftw@plt+0x13b64>  // b.none
  416618:	ubfiz	x7, x7, #4, #32
  41661c:	adrp	x5, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416620:	add	x5, x5, #0xe38
  416624:	add	x7, x5, x7
  416628:	ldr	w3, [x7, #8]
  41662c:	mul	x3, x3, x4
  416630:	lsr	x4, x3, #32
  416634:	ldr	x7, [x21, #8]
  416638:	add	w2, w19, #0x1
  41663c:	sub	w3, w19, w4
  416640:	add	w3, w4, w3, lsr #1
  416644:	lsr	w3, w3, w9
  416648:	sub	w6, w6, #0x2
  41664c:	msub	w2, w3, w6, w2
  416650:	ldr	w3, [x21, #36]
  416654:	add	w3, w3, #0x1
  416658:	str	w3, [x21, #36]
  41665c:	add	w1, w1, w2
  416660:	sub	w3, w1, w7
  416664:	cmp	x7, w1, uxtw
  416668:	csel	w1, w3, w1, ls  // ls = plast
  41666c:	ubfiz	x3, x1, #4, #32
  416670:	add	x5, x0, x3
  416674:	ldr	w3, [x0, x3]
  416678:	cbz	w3, 4166c4 <nftw@plt+0x13b44>
  41667c:	cmp	w19, w3
  416680:	b.ne	416650 <nftw@plt+0x13ad0>  // b.any
  416684:	b	4166e4 <nftw@plt+0x13b64>
  416688:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41668c:	add	x2, x2, #0xdb0
  416690:	mov	w1, #0x4f6                 	// #1270
  416694:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416698:	add	x0, x0, #0x3f0
  41669c:	bl	408d8c <nftw@plt+0x620c>
  4166a0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4166a4:	add	x2, x2, #0xdb0
  4166a8:	mov	w1, #0x4f7                 	// #1271
  4166ac:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4166b0:	add	x0, x0, #0x3f0
  4166b4:	bl	408d8c <nftw@plt+0x620c>
  4166b8:	mov	x0, x21
  4166bc:	bl	416740 <nftw@plt+0x13bc0>
  4166c0:	b	4165b4 <nftw@plt+0x13a34>
  4166c4:	ldr	x2, [x21, #16]
  4166c8:	add	x2, x2, #0x1
  4166cc:	str	x2, [x21, #16]
  4166d0:	ubfiz	x1, x1, #4, #32
  4166d4:	add	x5, x0, x1
  4166d8:	ldr	w2, [x0, x1]
  4166dc:	cbnz	w2, 4166e4 <nftw@plt+0x13b64>
  4166e0:	str	w19, [x0, x1]
  4166e4:	str	x20, [x5, #8]
  4166e8:	ldp	x19, x20, [sp, #16]
  4166ec:	ldp	x21, x22, [sp, #32]
  4166f0:	ldr	x23, [sp, #48]
  4166f4:	ldp	x29, x30, [sp], #64
  4166f8:	ret
  4166fc:	stp	x29, x30, [sp, #-16]!
  416700:	mov	x29, sp
  416704:	ldr	x1, [x0, #8]
  416708:	sub	x2, x1, #0x1
  41670c:	cbz	x1, 41671c <nftw@plt+0x13b9c>
  416710:	sub	x2, x2, #0x1
  416714:	cmp	x1, x2
  416718:	b.hi	416710 <nftw@plt+0x13b90>  // b.pmore
  41671c:	ldrb	w1, [x0, #44]
  416720:	cbnz	w1, 416734 <nftw@plt+0x13bb4>
  416724:	ldr	x0, [x0]
  416728:	bl	402910 <free@plt>
  41672c:	ldp	x29, x30, [sp], #16
  416730:	ret
  416734:	ldr	x0, [x0]
  416738:	bl	416db8 <nftw@plt+0x14238>
  41673c:	b	41672c <nftw@plt+0x13bac>
  416740:	stp	x29, x30, [sp, #-64]!
  416744:	mov	x29, sp
  416748:	stp	x19, x20, [sp, #16]
  41674c:	stp	x21, x22, [sp, #32]
  416750:	str	x23, [sp, #48]
  416754:	mov	x19, x0
  416758:	ldr	x21, [x0]
  41675c:	ldr	w23, [x0, #40]
  416760:	ldr	x22, [x0, #8]
  416764:	add	x20, x21, x22, lsl #4
  416768:	ldr	x1, [x0, #16]
  41676c:	ldr	x0, [x0, #24]
  416770:	sub	x1, x1, x0
  416774:	lsl	x0, x1, #1
  416778:	cmp	x22, x1, lsl #1
  41677c:	b.cc	416798 <nftw@plt+0x13c18>  // b.lo, b.ul, b.last
  416780:	lsl	w1, w1, #3
  416784:	cmp	x1, #0x20
  416788:	mov	x2, #0x20                  	// #32
  41678c:	csel	x1, x1, x2, cs  // cs = hs, nlast
  416790:	cmp	x22, x1
  416794:	b.ls	4167b0 <nftw@plt+0x13c30>  // b.plast
  416798:	bl	416928 <nftw@plt+0x13da8>
  41679c:	mov	w23, w0
  4167a0:	ubfiz	x1, x23, #4, #32
  4167a4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4167a8:	add	x0, x0, #0xe38
  4167ac:	ldr	w22, [x0, x1]
  4167b0:	ldrb	w0, [x19, #44]
  4167b4:	cbnz	w0, 4167c8 <nftw@plt+0x13c48>
  4167b8:	mov	x1, #0x10                  	// #16
  4167bc:	mov	x0, x22
  4167c0:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  4167c4:	b	4167e0 <nftw@plt+0x13c60>
  4167c8:	mov	x3, #0x0                   	// #0
  4167cc:	mov	x2, #0x0                   	// #0
  4167d0:	mov	x1, #0x0                   	// #0
  4167d4:	lsl	x0, x22, #4
  4167d8:	bl	416d70 <nftw@plt+0x141f0>
  4167dc:	cbz	x0, 416828 <nftw@plt+0x13ca8>
  4167e0:	cbz	x22, 4167f8 <nftw@plt+0x13c78>
  4167e4:	mov	x1, x0
  4167e8:	add	x2, x0, x22, lsl #4
  4167ec:	str	wzr, [x1], #16
  4167f0:	cmp	x1, x2
  4167f4:	b.ne	4167ec <nftw@plt+0x13c6c>  // b.any
  4167f8:	str	x0, [x19]
  4167fc:	str	x22, [x19, #8]
  416800:	str	w23, [x19, #40]
  416804:	ldr	x0, [x19, #16]
  416808:	ldr	x1, [x19, #24]
  41680c:	sub	x0, x0, x1
  416810:	str	x0, [x19, #16]
  416814:	str	xzr, [x19, #24]
  416818:	mov	x0, x21
  41681c:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416820:	add	x8, x8, #0xe38
  416824:	b	416854 <nftw@plt+0x13cd4>
  416828:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41682c:	add	x2, x2, #0x3b0
  416830:	mov	w1, #0x2b5                 	// #693
  416834:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416838:	add	x0, x0, #0x3c0
  41683c:	bl	408d8c <nftw@plt+0x620c>
  416840:	ldp	x2, x3, [x0]
  416844:	stp	x2, x3, [x6]
  416848:	add	x0, x0, #0x10
  41684c:	cmp	x20, x0
  416850:	b.ls	4168f8 <nftw@plt+0x13d78>  // b.plast
  416854:	ldr	w2, [x0]
  416858:	cbz	w2, 416848 <nftw@plt+0x13cc8>
  41685c:	ldr	w7, [x19, #40]
  416860:	ubfiz	x3, x7, #4, #32
  416864:	add	x1, x8, x3
  416868:	ldr	w9, [x8, x3]
  41686c:	ldr	w10, [x1, #12]
  416870:	mov	w11, w2
  416874:	ldr	w1, [x1, #4]
  416878:	mul	x1, x1, x11
  41687c:	lsr	x3, x1, #32
  416880:	sub	w1, w2, w3
  416884:	add	w1, w3, w1, lsr #1
  416888:	lsr	w1, w1, w10
  41688c:	msub	w1, w1, w9, w2
  416890:	ldr	x4, [x19]
  416894:	ubfiz	x5, x1, #4, #32
  416898:	add	x6, x4, x5
  41689c:	ldr	w3, [x4, x5]
  4168a0:	cbz	w3, 416840 <nftw@plt+0x13cc0>
  4168a4:	ldr	x5, [x19, #8]
  4168a8:	ubfiz	x7, x7, #4, #32
  4168ac:	add	x7, x8, x7
  4168b0:	ldr	w3, [x7, #8]
  4168b4:	mul	x3, x3, x11
  4168b8:	lsr	x3, x3, #32
  4168bc:	add	w6, w2, #0x1
  4168c0:	sub	w2, w2, w3
  4168c4:	add	w2, w3, w2, lsr #1
  4168c8:	lsr	w2, w2, w10
  4168cc:	sub	w9, w9, #0x2
  4168d0:	msub	w2, w2, w9, w6
  4168d4:	add	w1, w1, w2
  4168d8:	sub	w3, w1, w5
  4168dc:	cmp	x5, w1, uxtw
  4168e0:	csel	w1, w3, w1, ls  // ls = plast
  4168e4:	ubfiz	x3, x1, #4, #32
  4168e8:	add	x6, x4, x3
  4168ec:	ldr	w3, [x4, x3]
  4168f0:	cbnz	w3, 4168d4 <nftw@plt+0x13d54>
  4168f4:	b	416840 <nftw@plt+0x13cc0>
  4168f8:	ldrb	w0, [x19, #44]
  4168fc:	cbnz	w0, 41691c <nftw@plt+0x13d9c>
  416900:	mov	x0, x21
  416904:	bl	402910 <free@plt>
  416908:	ldp	x19, x20, [sp, #16]
  41690c:	ldp	x21, x22, [sp, #32]
  416910:	ldr	x23, [sp, #48]
  416914:	ldp	x29, x30, [sp], #64
  416918:	ret
  41691c:	mov	x0, x21
  416920:	bl	416db8 <nftw@plt+0x14238>
  416924:	b	416908 <nftw@plt+0x13d88>
  416928:	mov	x4, x0
  41692c:	mov	w2, #0x1e                  	// #30
  416930:	mov	w0, #0x0                   	// #0
  416934:	adrp	x5, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416938:	add	x5, x5, #0xe38
  41693c:	b	416944 <nftw@plt+0x13dc4>
  416940:	mov	w2, w1
  416944:	cmp	w2, w0
  416948:	b.eq	41696c <nftw@plt+0x13dec>  // b.none
  41694c:	sub	w1, w2, w0
  416950:	add	w1, w0, w1, lsr #1
  416954:	ubfiz	x3, x1, #4, #32
  416958:	ldr	w3, [x5, x3]
  41695c:	cmp	x3, x4
  416960:	b.cs	416940 <nftw@plt+0x13dc0>  // b.hs, b.nlast
  416964:	add	w0, w1, #0x1
  416968:	b	416944 <nftw@plt+0x13dc4>
  41696c:	ubfiz	x1, x0, #4, #32
  416970:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416974:	add	x2, x2, #0xe38
  416978:	ldr	w1, [x2, x1]
  41697c:	cmp	x1, x4
  416980:	b.cc	416988 <nftw@plt+0x13e08>  // b.lo, b.ul, b.last
  416984:	ret
  416988:	stp	x29, x30, [sp, #-16]!
  41698c:	mov	x29, sp
  416990:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416994:	add	x2, x2, #0xe00
  416998:	mov	w1, #0x60                  	// #96
  41699c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4169a0:	add	x0, x0, #0xe20
  4169a4:	bl	408d8c <nftw@plt+0x620c>
  4169a8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4169ac:	add	x0, x0, #0x918
  4169b0:	ldarb	w0, [x0]
  4169b4:	tbz	w0, #0, 4169c8 <nftw@plt+0x13e48>
  4169b8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4169bc:	add	x0, x0, #0x918
  4169c0:	add	x0, x0, #0x8
  4169c4:	ret
  4169c8:	stp	x29, x30, [sp, #-48]!
  4169cc:	mov	x29, sp
  4169d0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4169d4:	add	x0, x0, #0x918
  4169d8:	bl	44acd0 <_obstack_memory_used@@Base+0x6cc>
  4169dc:	cbnz	w0, 4169f4 <nftw@plt+0x13e74>
  4169e0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4169e4:	add	x0, x0, #0x918
  4169e8:	add	x0, x0, #0x8
  4169ec:	ldp	x29, x30, [sp], #48
  4169f0:	ret
  4169f4:	stp	x19, x20, [sp, #16]
  4169f8:	str	x21, [sp, #32]
  4169fc:	mov	x0, #0x30                  	// #48
  416a00:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  416a04:	mov	x19, x0
  416a08:	str	xzr, [x0, #16]
  416a0c:	str	xzr, [x0, #24]
  416a10:	str	wzr, [x0, #32]
  416a14:	str	wzr, [x0, #36]
  416a18:	strb	wzr, [x0, #44]
  416a1c:	mov	x0, #0xd                   	// #13
  416a20:	bl	416928 <nftw@plt+0x13da8>
  416a24:	mov	w20, w0
  416a28:	ubfiz	x1, x20, #4, #32
  416a2c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416a30:	add	x0, x0, #0xe38
  416a34:	ldr	w21, [x0, x1]
  416a38:	mov	x1, #0x10                  	// #16
  416a3c:	mov	x0, x21
  416a40:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  416a44:	cbz	x21, 416a5c <nftw@plt+0x13edc>
  416a48:	mov	x1, x0
  416a4c:	add	x2, x0, x21, lsl #4
  416a50:	str	xzr, [x1], #16
  416a54:	cmp	x1, x2
  416a58:	b.ne	416a50 <nftw@plt+0x13ed0>  // b.any
  416a5c:	str	x0, [x19]
  416a60:	str	x21, [x19, #8]
  416a64:	str	w20, [x19, #40]
  416a68:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416a6c:	str	x19, [x0, #2376]
  416a70:	mov	x0, #0x30                  	// #48
  416a74:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  416a78:	mov	x19, x0
  416a7c:	str	xzr, [x0, #16]
  416a80:	str	xzr, [x0, #24]
  416a84:	str	wzr, [x0, #32]
  416a88:	str	wzr, [x0, #36]
  416a8c:	strb	wzr, [x0, #44]
  416a90:	mov	x0, #0xd                   	// #13
  416a94:	bl	416928 <nftw@plt+0x13da8>
  416a98:	mov	w21, w0
  416a9c:	ubfiz	x1, x21, #4, #32
  416aa0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416aa4:	add	x0, x0, #0xe38
  416aa8:	ldr	w20, [x0, x1]
  416aac:	mov	x1, #0x18                  	// #24
  416ab0:	mov	x0, x20
  416ab4:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  416ab8:	cbz	x20, 416ad4 <nftw@plt+0x13f54>
  416abc:	mov	x1, x0
  416ac0:	add	x2, x20, x20, lsl #1
  416ac4:	add	x2, x0, x2, lsl #3
  416ac8:	str	xzr, [x1], #24
  416acc:	cmp	x2, x1
  416ad0:	b.ne	416ac8 <nftw@plt+0x13f48>  // b.any
  416ad4:	str	x0, [x19]
  416ad8:	str	x20, [x19, #8]
  416adc:	str	w21, [x19, #40]
  416ae0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416ae4:	str	x19, [x0, #2384]
  416ae8:	mov	x0, #0x30                  	// #48
  416aec:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  416af0:	mov	x19, x0
  416af4:	str	xzr, [x0, #16]
  416af8:	str	xzr, [x0, #24]
  416afc:	str	wzr, [x0, #32]
  416b00:	str	wzr, [x0, #36]
  416b04:	strb	wzr, [x0, #44]
  416b08:	mov	x0, #0xd                   	// #13
  416b0c:	bl	416928 <nftw@plt+0x13da8>
  416b10:	mov	w21, w0
  416b14:	ubfiz	x1, x21, #4, #32
  416b18:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  416b1c:	add	x0, x0, #0xe38
  416b20:	ldr	w20, [x0, x1]
  416b24:	mov	x1, #0x18                  	// #24
  416b28:	mov	x0, x20
  416b2c:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  416b30:	cbz	x20, 416b4c <nftw@plt+0x13fcc>
  416b34:	mov	x1, x0
  416b38:	add	x2, x20, x20, lsl #1
  416b3c:	add	x2, x0, x2, lsl #3
  416b40:	str	xzr, [x1], #24
  416b44:	cmp	x2, x1
  416b48:	b.ne	416b40 <nftw@plt+0x13fc0>  // b.any
  416b4c:	str	x0, [x19]
  416b50:	str	x20, [x19, #8]
  416b54:	str	w21, [x19, #40]
  416b58:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416b5c:	add	x0, x0, #0x918
  416b60:	add	x20, x0, #0x8
  416b64:	str	x19, [x0, #8]
  416b68:	bl	44ae60 <_obstack_memory_used@@Base+0x85c>
  416b6c:	adrp	x2, 48d000 <_obstack_memory_used@@Base+0x429fc>
  416b70:	add	x2, x2, #0x388
  416b74:	mov	x1, x20
  416b78:	adrp	x0, 416000 <nftw@plt+0x13480>
  416b7c:	add	x0, x0, #0xbcc
  416b80:	bl	4025d0 <__cxa_atexit@plt>
  416b84:	ldp	x19, x20, [sp, #16]
  416b88:	ldr	x21, [sp, #32]
  416b8c:	b	4169e0 <nftw@plt+0x13e60>
  416b90:	ret
  416b94:	ldr	x1, [x0]
  416b98:	ldr	x3, [x0, #8]
  416b9c:	cmp	x1, x3
  416ba0:	b.cs	416bc0 <nftw@plt+0x14040>  // b.hs, b.nlast
  416ba4:	ldr	x2, [x1]
  416ba8:	cmp	x2, #0x1
  416bac:	b.hi	416bc8 <nftw@plt+0x14048>  // b.pmore
  416bb0:	add	x1, x1, #0x10
  416bb4:	str	x1, [x0]
  416bb8:	cmp	x1, x3
  416bbc:	b.cc	416ba4 <nftw@plt+0x14024>  // b.lo, b.ul, b.last
  416bc0:	str	xzr, [x0]
  416bc4:	str	xzr, [x0, #8]
  416bc8:	ret
  416bcc:	stp	x29, x30, [sp, #-48]!
  416bd0:	mov	x29, sp
  416bd4:	stp	x19, x20, [sp, #16]
  416bd8:	mov	x20, x0
  416bdc:	ldr	x0, [x0, #40]
  416be0:	ldr	x1, [x0]
  416be4:	ldr	x0, [x0, #8]
  416be8:	add	x0, x1, x0, lsl #4
  416bec:	str	x1, [sp, #32]
  416bf0:	str	x0, [sp, #40]
  416bf4:	add	x0, sp, #0x20
  416bf8:	bl	416b94 <nftw@plt+0x14014>
  416bfc:	mov	x19, #0x20                  	// #32
  416c00:	b	416d04 <nftw@plt+0x14184>
  416c04:	ldr	x0, [sp, #40]
  416c08:	cbnz	x0, 416d0c <nftw@plt+0x1418c>
  416c0c:	ldr	x19, [x20, #40]
  416c10:	cbz	x19, 416c48 <nftw@plt+0x140c8>
  416c14:	ldr	x0, [x19, #8]
  416c18:	sub	x1, x0, #0x1
  416c1c:	cbz	x0, 416c2c <nftw@plt+0x140ac>
  416c20:	sub	x1, x1, #0x1
  416c24:	cmp	x0, x1
  416c28:	b.hi	416c20 <nftw@plt+0x140a0>  // b.pmore
  416c2c:	ldrb	w0, [x19, #44]
  416c30:	cbnz	w0, 416d18 <nftw@plt+0x14198>
  416c34:	ldr	x0, [x19]
  416c38:	bl	402910 <free@plt>
  416c3c:	mov	x1, #0x30                  	// #48
  416c40:	mov	x0, x19
  416c44:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  416c48:	ldr	x19, [x20, #48]
  416c4c:	cbz	x19, 416c88 <nftw@plt+0x14108>
  416c50:	ldr	x0, [x19, #8]
  416c54:	sub	x1, x0, #0x1
  416c58:	cbz	x0, 416c6c <nftw@plt+0x140ec>
  416c5c:	sub	x1, x1, #0x1
  416c60:	ldr	x0, [x19, #8]
  416c64:	cmp	x0, x1
  416c68:	b.hi	416c5c <nftw@plt+0x140dc>  // b.pmore
  416c6c:	ldrb	w0, [x19, #44]
  416c70:	cbnz	w0, 416d24 <nftw@plt+0x141a4>
  416c74:	ldr	x0, [x19]
  416c78:	bl	402910 <free@plt>
  416c7c:	mov	x1, #0x30                  	// #48
  416c80:	mov	x0, x19
  416c84:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  416c88:	ldr	x19, [x20]
  416c8c:	cbz	x19, 416cc8 <nftw@plt+0x14148>
  416c90:	ldr	x1, [x19, #8]
  416c94:	sub	x0, x1, #0x1
  416c98:	cbz	x1, 416cac <nftw@plt+0x1412c>
  416c9c:	sub	x0, x0, #0x1
  416ca0:	ldr	x1, [x19, #8]
  416ca4:	cmp	x1, x0
  416ca8:	b.hi	416c9c <nftw@plt+0x1411c>  // b.pmore
  416cac:	ldrb	w0, [x19, #44]
  416cb0:	cbnz	w0, 416d30 <nftw@plt+0x141b0>
  416cb4:	ldr	x0, [x19]
  416cb8:	bl	402910 <free@plt>
  416cbc:	mov	x1, #0x30                  	// #48
  416cc0:	mov	x0, x19
  416cc4:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  416cc8:	ldp	x19, x20, [sp, #16]
  416ccc:	ldp	x29, x30, [sp], #48
  416cd0:	ret
  416cd4:	mov	x1, x19
  416cd8:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  416cdc:	ldr	x1, [sp, #32]
  416ce0:	ldr	x0, [x1, #8]
  416ce4:	cbz	x0, 416cf0 <nftw@plt+0x14170>
  416ce8:	mov	x1, x19
  416cec:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  416cf0:	ldr	x1, [sp, #32]
  416cf4:	add	x1, x1, #0x10
  416cf8:	str	x1, [sp, #32]
  416cfc:	add	x0, sp, #0x20
  416d00:	bl	416b94 <nftw@plt+0x14014>
  416d04:	ldr	x1, [sp, #32]
  416d08:	cbz	x1, 416c04 <nftw@plt+0x14084>
  416d0c:	ldr	x0, [x1]
  416d10:	cbnz	x0, 416cd4 <nftw@plt+0x14154>
  416d14:	b	416cdc <nftw@plt+0x1415c>
  416d18:	ldr	x0, [x19]
  416d1c:	bl	416db8 <nftw@plt+0x14238>
  416d20:	b	416c3c <nftw@plt+0x140bc>
  416d24:	ldr	x0, [x19]
  416d28:	bl	416db8 <nftw@plt+0x14238>
  416d2c:	b	416c7c <nftw@plt+0x140fc>
  416d30:	ldr	x0, [x19]
  416d34:	bl	416db8 <nftw@plt+0x14238>
  416d38:	b	416cbc <nftw@plt+0x1413c>
  416d3c:	ret
  416d40:	stp	x29, x30, [sp, #-16]!
  416d44:	mov	x29, sp
  416d48:	cbnz	x1, 416d58 <nftw@plt+0x141d8>
  416d4c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  416d50:	ldp	x29, x30, [sp], #16
  416d54:	ret
  416d58:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  416d5c:	add	x2, x2, #0x18
  416d60:	mov	w1, #0x2f                  	// #47
  416d64:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  416d68:	add	x0, x0, #0x30
  416d6c:	bl	408d8c <nftw@plt+0x620c>
  416d70:	stp	x29, x30, [sp, #-16]!
  416d74:	mov	x29, sp
  416d78:	cbnz	x1, 416d8c <nftw@plt+0x1420c>
  416d7c:	mov	x1, #0x1                   	// #1
  416d80:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  416d84:	ldp	x29, x30, [sp], #16
  416d88:	ret
  416d8c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  416d90:	add	x2, x2, #0x48
  416d94:	mov	w1, #0x37                  	// #55
  416d98:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  416d9c:	add	x0, x0, #0x30
  416da0:	bl	408d8c <nftw@plt+0x620c>
  416da4:	stp	x29, x30, [sp, #-16]!
  416da8:	mov	x29, sp
  416dac:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  416db0:	ldp	x29, x30, [sp], #16
  416db4:	ret
  416db8:	stp	x29, x30, [sp, #-16]!
  416dbc:	mov	x29, sp
  416dc0:	bl	402910 <free@plt>
  416dc4:	ldp	x29, x30, [sp], #16
  416dc8:	ret
  416dcc:	ret
  416dd0:	str	xzr, [x0]
  416dd4:	ret
  416dd8:	stp	x29, x30, [sp, #-32]!
  416ddc:	mov	x29, sp
  416de0:	stp	x19, x20, [sp, #16]
  416de4:	mov	x20, x0
  416de8:	ldr	x19, [x0]
  416dec:	cbz	x19, 416e04 <nftw@plt+0x14284>
  416df0:	mov	x0, x19
  416df4:	ldr	x19, [x19]
  416df8:	bl	402910 <free@plt>
  416dfc:	str	x19, [x20]
  416e00:	cbnz	x19, 416df0 <nftw@plt+0x14270>
  416e04:	ldp	x19, x20, [sp, #16]
  416e08:	ldp	x29, x30, [sp], #32
  416e0c:	ret
  416e10:	stp	x29, x30, [sp, #-16]!
  416e14:	mov	x29, sp
  416e18:	cmp	x0, #0x10, lsl #12
  416e1c:	b.ne	416e48 <nftw@plt+0x142c8>  // b.any
  416e20:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416e24:	ldr	x0, [x0, #2392]
  416e28:	cbz	x0, 416e3c <nftw@plt+0x142bc>
  416e2c:	ldr	x2, [x0]
  416e30:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416e34:	str	x2, [x1, #2392]
  416e38:	b	416e4c <nftw@plt+0x142cc>
  416e3c:	mov	x0, #0x10000               	// #65536
  416e40:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  416e44:	b	416e4c <nftw@plt+0x142cc>
  416e48:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  416e4c:	ldp	x29, x30, [sp], #16
  416e50:	ret
  416e54:	ldr	x1, [x0]
  416e58:	sub	x1, x1, x0
  416e5c:	cmp	x1, #0x10, lsl #12
  416e60:	b.ne	416e78 <nftw@plt+0x142f8>  // b.any
  416e64:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416e68:	ldr	x2, [x1, #2392]
  416e6c:	str	x2, [x0]
  416e70:	str	x0, [x1, #2392]
  416e74:	ret
  416e78:	stp	x29, x30, [sp, #-16]!
  416e7c:	mov	x29, sp
  416e80:	bl	402910 <free@plt>
  416e84:	ldp	x29, x30, [sp], #16
  416e88:	ret
  416e8c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  416e90:	str	xzr, [x0, #2392]
  416e94:	ret
  416e98:	stp	x29, x30, [sp, #-32]!
  416e9c:	mov	x29, sp
  416ea0:	str	x19, [sp, #16]
  416ea4:	eor	x19, x1, x0
  416ea8:	blr	x2
  416eac:	asr	w0, w0, #31
  416eb0:	sxtw	x0, w0
  416eb4:	and	x0, x0, x19
  416eb8:	ldr	x19, [sp, #16]
  416ebc:	ldp	x29, x30, [sp], #32
  416ec0:	ret
  416ec4:	stp	x29, x30, [sp, #-96]!
  416ec8:	mov	x29, sp
  416ecc:	stp	x19, x20, [sp, #16]
  416ed0:	stp	x21, x22, [sp, #32]
  416ed4:	stp	x23, x24, [sp, #48]
  416ed8:	stp	x25, x26, [sp, #64]
  416edc:	mov	x23, x0
  416ee0:	mov	x19, x1
  416ee4:	mov	x21, x2
  416ee8:	mov	x20, x3
  416eec:	ldr	x0, [x1, #32]
  416ef0:	cmp	x0, x2
  416ef4:	b.cc	417324 <nftw@plt+0x147a4>  // b.lo, b.ul, b.last
  416ef8:	str	x3, [x19, #8]
  416efc:	str	x2, [x19, #16]
  416f00:	ldr	x20, [x1, #24]
  416f04:	add	x22, x23, x20
  416f08:	add	x20, x22, x20
  416f0c:	ldr	x2, [x1]
  416f10:	mov	x1, x23
  416f14:	mov	x0, x22
  416f18:	bl	416e98 <nftw@plt+0x14318>
  416f1c:	eor	x23, x23, x0
  416f20:	mov	x25, x23
  416f24:	eor	x22, x22, x0
  416f28:	mov	x21, x22
  416f2c:	ldr	x0, [x19, #16]
  416f30:	cmp	x0, #0x3
  416f34:	b.ne	416f68 <nftw@plt+0x143e8>  // b.any
  416f38:	ldr	x2, [x19]
  416f3c:	mov	x1, x22
  416f40:	mov	x0, x20
  416f44:	bl	416e98 <nftw@plt+0x14318>
  416f48:	eor	x22, x22, x0
  416f4c:	eor	x20, x20, x0
  416f50:	ldr	x2, [x19]
  416f54:	mov	x1, x23
  416f58:	mov	x0, x22
  416f5c:	bl	416e98 <nftw@plt+0x14318>
  416f60:	eor	x25, x23, x0
  416f64:	eor	x21, x22, x0
  416f68:	ldr	x1, [x19, #16]
  416f6c:	cmp	x1, #0x3
  416f70:	b.ls	4170b4 <nftw@plt+0x14534>  // b.plast
  416f74:	ldr	x22, [x19, #24]
  416f78:	add	x24, x20, x22
  416f7c:	add	x22, x24, x22
  416f80:	cmp	x1, #0x5
  416f84:	b.ne	416fb8 <nftw@plt+0x14438>  // b.any
  416f88:	ldr	x2, [x19]
  416f8c:	mov	x1, x24
  416f90:	mov	x0, x22
  416f94:	bl	416e98 <nftw@plt+0x14318>
  416f98:	eor	x24, x24, x0
  416f9c:	eor	x22, x22, x0
  416fa0:	ldr	x2, [x19]
  416fa4:	mov	x1, x20
  416fa8:	mov	x0, x22
  416fac:	bl	416e98 <nftw@plt+0x14318>
  416fb0:	eor	x20, x20, x0
  416fb4:	eor	x22, x22, x0
  416fb8:	ldr	x2, [x19]
  416fbc:	mov	x1, x20
  416fc0:	mov	x0, x24
  416fc4:	bl	416e98 <nftw@plt+0x14318>
  416fc8:	eor	x26, x20, x0
  416fcc:	eor	x23, x24, x0
  416fd0:	mov	x24, x23
  416fd4:	ldr	x0, [x19, #16]
  416fd8:	cmp	x0, #0x5
  416fdc:	b.ne	417010 <nftw@plt+0x14490>  // b.any
  416fe0:	ldr	x2, [x19]
  416fe4:	mov	x1, x25
  416fe8:	mov	x0, x23
  416fec:	bl	416e98 <nftw@plt+0x14318>
  416ff0:	eor	x25, x25, x0
  416ff4:	eor	x24, x23, x0
  416ff8:	ldr	x2, [x19]
  416ffc:	mov	x1, x21
  417000:	mov	x0, x22
  417004:	bl	416e98 <nftw@plt+0x14318>
  417008:	eor	x21, x21, x0
  41700c:	eor	x22, x22, x0
  417010:	ldr	x2, [x19]
  417014:	mov	x1, x25
  417018:	mov	x0, x26
  41701c:	bl	416e98 <nftw@plt+0x14318>
  417020:	eor	x25, x25, x0
  417024:	eor	x26, x26, x0
  417028:	ldr	x2, [x19]
  41702c:	mov	x1, x21
  417030:	mov	x0, x24
  417034:	bl	416e98 <nftw@plt+0x14318>
  417038:	eor	x21, x21, x0
  41703c:	eor	x24, x24, x0
  417040:	ldr	x2, [x19]
  417044:	mov	x1, x21
  417048:	mov	x0, x26
  41704c:	bl	416e98 <nftw@plt+0x14318>
  417050:	eor	x21, x21, x0
  417054:	eor	x0, x26, x0
  417058:	ldr	x1, [x19, #24]
  41705c:	cmp	x1, #0x8
  417060:	b.ne	4171d8 <nftw@plt+0x14658>  // b.any
  417064:	ldr	x4, [x25]
  417068:	ldr	x3, [x21]
  41706c:	ldr	x2, [x0]
  417070:	ldr	x1, [x24]
  417074:	ldr	x0, [x19, #8]
  417078:	ldr	x5, [x19, #16]
  41707c:	cmp	x5, #0x5
  417080:	b.ne	41708c <nftw@plt+0x1450c>  // b.any
  417084:	ldr	x5, [x22]
  417088:	str	x5, [x0, #32]
  41708c:	str	x4, [x0]
  417090:	str	x3, [x0, #8]
  417094:	str	x2, [x0, #16]
  417098:	str	x1, [x0, #24]
  41709c:	ldp	x19, x20, [sp, #16]
  4170a0:	ldp	x21, x22, [sp, #32]
  4170a4:	ldp	x23, x24, [sp, #48]
  4170a8:	ldp	x25, x26, [sp, #64]
  4170ac:	ldp	x29, x30, [sp], #96
  4170b0:	ret
  4170b4:	ldr	x0, [x19, #24]
  4170b8:	cmp	x0, #0x8
  4170bc:	b.ne	4170e8 <nftw@plt+0x14568>  // b.any
  4170c0:	ldr	x3, [x25]
  4170c4:	ldr	x2, [x21]
  4170c8:	ldr	x0, [x19, #8]
  4170cc:	cmp	x1, #0x3
  4170d0:	b.ne	4170dc <nftw@plt+0x1455c>  // b.any
  4170d4:	ldr	x1, [x20]
  4170d8:	str	x1, [x0, #16]
  4170dc:	str	x3, [x0]
  4170e0:	str	x2, [x0, #8]
  4170e4:	b	41709c <nftw@plt+0x1451c>
  4170e8:	cmp	x0, #0x4
  4170ec:	b.ne	417118 <nftw@plt+0x14598>  // b.any
  4170f0:	ldr	w3, [x25]
  4170f4:	ldr	w2, [x21]
  4170f8:	ldr	x0, [x19, #8]
  4170fc:	cmp	x1, #0x3
  417100:	b.ne	41710c <nftw@plt+0x1458c>  // b.any
  417104:	ldr	w1, [x20]
  417108:	str	w1, [x0, #8]
  41710c:	str	w3, [x0]
  417110:	str	w2, [x0, #4]
  417114:	b	41709c <nftw@plt+0x1451c>
  417118:	mov	x1, #0x8                   	// #8
  41711c:	cmp	x0, #0x7
  417120:	b.ls	417180 <nftw@plt+0x14600>  // b.plast
  417124:	sub	x9, x25, #0x8
  417128:	sub	x8, x21, #0x8
  41712c:	sub	x10, x20, #0x8
  417130:	ldr	x6, [x9, x1]
  417134:	ldr	x5, [x8, x1]
  417138:	sub	x2, x1, #0x8
  41713c:	ldr	x3, [x19, #8]
  417140:	add	x4, x3, x2
  417144:	ldr	x7, [x19, #16]
  417148:	cmp	x7, #0x3
  41714c:	b.ne	41715c <nftw@plt+0x145dc>  // b.any
  417150:	ldr	x7, [x10, x1]
  417154:	lsl	x0, x0, #1
  417158:	str	x7, [x4, x0]
  41715c:	str	x6, [x3, x2]
  417160:	ldr	x0, [x19, #24]
  417164:	str	x5, [x4, x0]
  417168:	add	x2, x1, #0x8
  41716c:	ldr	x0, [x19, #24]
  417170:	cmp	x2, x0
  417174:	b.hi	417184 <nftw@plt+0x14604>  // b.pmore
  417178:	mov	x1, x2
  41717c:	b	417130 <nftw@plt+0x145b0>
  417180:	mov	x1, #0x0                   	// #0
  417184:	ldr	x2, [x19, #24]
  417188:	cmp	x2, x1
  41718c:	b.ls	41709c <nftw@plt+0x1451c>  // b.plast
  417190:	ldrb	w4, [x25, x1]
  417194:	ldrb	w3, [x21, x1]
  417198:	ldr	x0, [x19, #8]
  41719c:	add	x0, x0, x1
  4171a0:	ldr	x5, [x19, #16]
  4171a4:	cmp	x5, #0x3
  4171a8:	b.ne	4171b8 <nftw@plt+0x14638>  // b.any
  4171ac:	ldrb	w5, [x20, x1]
  4171b0:	lsl	x2, x2, #1
  4171b4:	strb	w5, [x0, x2]
  4171b8:	strb	w4, [x0]
  4171bc:	ldr	x2, [x19, #24]
  4171c0:	strb	w3, [x0, x2]
  4171c4:	add	x1, x1, #0x1
  4171c8:	ldr	x2, [x19, #24]
  4171cc:	cmp	x2, x1
  4171d0:	b.hi	417190 <nftw@plt+0x14610>  // b.pmore
  4171d4:	b	41709c <nftw@plt+0x1451c>
  4171d8:	cmp	x1, #0x4
  4171dc:	b.ne	41721c <nftw@plt+0x1469c>  // b.any
  4171e0:	ldr	w4, [x25]
  4171e4:	ldr	w3, [x21]
  4171e8:	ldr	w2, [x0]
  4171ec:	ldr	w1, [x24]
  4171f0:	ldr	x0, [x19, #8]
  4171f4:	ldr	x5, [x19, #16]
  4171f8:	cmp	x5, #0x5
  4171fc:	b.ne	417208 <nftw@plt+0x14688>  // b.any
  417200:	ldr	w5, [x22]
  417204:	str	w5, [x0, #16]
  417208:	str	w4, [x0]
  41720c:	str	w3, [x0, #4]
  417210:	str	w2, [x0, #8]
  417214:	str	w1, [x0, #12]
  417218:	b	41709c <nftw@plt+0x1451c>
  41721c:	mov	x2, #0x8                   	// #8
  417220:	sub	x11, x22, #0x8
  417224:	cmp	x1, #0x7
  417228:	b.ls	4172ac <nftw@plt+0x1472c>  // b.plast
  41722c:	add	x3, x25, x2
  417230:	ldur	x9, [x3, #-8]
  417234:	add	x3, x21, x2
  417238:	ldur	x8, [x3, #-8]
  41723c:	add	x3, x0, x2
  417240:	ldur	x7, [x3, #-8]
  417244:	add	x3, x24, x2
  417248:	ldur	x6, [x3, #-8]
  41724c:	sub	x4, x2, #0x8
  417250:	ldr	x5, [x19, #8]
  417254:	add	x3, x5, x4
  417258:	ldr	x10, [x19, #16]
  41725c:	cmp	x10, #0x5
  417260:	b.ne	417270 <nftw@plt+0x146f0>  // b.any
  417264:	ldr	x10, [x11, x2]
  417268:	lsl	x1, x1, #2
  41726c:	str	x10, [x3, x1]
  417270:	str	x9, [x5, x4]
  417274:	ldr	x1, [x19, #24]
  417278:	add	x4, x3, x1
  41727c:	str	x8, [x3, x1]
  417280:	ldr	x1, [x19, #24]
  417284:	add	x3, x4, x1
  417288:	str	x7, [x4, x1]
  41728c:	ldr	x1, [x19, #24]
  417290:	str	x6, [x3, x1]
  417294:	ldr	x1, [x19, #24]
  417298:	add	x3, x2, #0x8
  41729c:	cmp	x1, x3
  4172a0:	b.cc	4172b0 <nftw@plt+0x14730>  // b.lo, b.ul, b.last
  4172a4:	mov	x2, x3
  4172a8:	b	41722c <nftw@plt+0x146ac>
  4172ac:	mov	x2, #0x0                   	// #0
  4172b0:	ldr	x3, [x19, #24]
  4172b4:	cmp	x3, x2
  4172b8:	b.ls	41709c <nftw@plt+0x1451c>  // b.plast
  4172bc:	ldrb	w4, [x25, x2]
  4172c0:	ldrb	w7, [x21, x2]
  4172c4:	ldrb	w6, [x0, x2]
  4172c8:	ldrb	w5, [x24, x2]
  4172cc:	ldr	x1, [x19, #8]
  4172d0:	add	x1, x1, x2
  4172d4:	ldr	x8, [x19, #16]
  4172d8:	cmp	x8, #0x5
  4172dc:	b.ne	4172ec <nftw@plt+0x1476c>  // b.any
  4172e0:	ldrb	w8, [x22, x2]
  4172e4:	lsl	x3, x3, #2
  4172e8:	strb	w8, [x1, x3]
  4172ec:	strb	w4, [x1]
  4172f0:	ldr	x4, [x19, #24]
  4172f4:	add	x3, x1, x4
  4172f8:	strb	w7, [x1, x4]
  4172fc:	ldr	x1, [x19, #24]
  417300:	add	x4, x3, x1
  417304:	strb	w6, [x3, x1]
  417308:	ldr	x1, [x19, #24]
  41730c:	strb	w5, [x4, x1]
  417310:	add	x2, x2, #0x1
  417314:	ldr	x3, [x19, #24]
  417318:	cmp	x3, x2
  41731c:	b.hi	4172bc <nftw@plt+0x1473c>  // b.pmore
  417320:	b	41709c <nftw@plt+0x1451c>
  417324:	str	x27, [sp, #80]
  417328:	lsr	x26, x2, #1
  41732c:	ldr	x25, [x1, #24]
  417330:	mul	x25, x26, x25
  417334:	add	x27, x23, x25
  417338:	add	x22, x3, x25
  41733c:	cmp	x23, x3
  417340:	csel	x24, x4, x23, eq  // eq = none
  417344:	mov	x3, x22
  417348:	sub	x2, x2, x26
  41734c:	mov	x0, x27
  417350:	bl	416ec4 <nftw@plt+0x14344>
  417354:	mov	x4, x27
  417358:	mov	x3, x24
  41735c:	mov	x2, x26
  417360:	mov	x1, x19
  417364:	mov	x0, x23
  417368:	bl	416ec4 <nftw@plt+0x14344>
  41736c:	ldr	x1, [x19, #24]
  417370:	sub	x1, x25, x1
  417374:	ldr	x2, [x19]
  417378:	add	x1, x24, x1
  41737c:	mov	x0, x22
  417380:	blr	x2
  417384:	tbz	w0, #31, 4173e8 <nftw@plt+0x14868>
  417388:	ldr	x0, [x19, #24]
  41738c:	madd	x21, x0, x21, x20
  417390:	cmp	x0, #0x8
  417394:	b.ne	417400 <nftw@plt+0x14880>  // b.any
  417398:	ldr	x2, [x19]
  41739c:	mov	x1, x24
  4173a0:	mov	x0, x22
  4173a4:	blr	x2
  4173a8:	asr	w0, w0, #31
  4173ac:	sxtw	x1, w0
  4173b0:	eor	x2, x22, x24
  4173b4:	and	x2, x2, x1
  4173b8:	eor	x2, x24, x2
  4173bc:	ldr	x2, [x2]
  4173c0:	str	x2, [x20], #8
  4173c4:	and	w0, w0, #0x8
  4173c8:	add	x22, x22, w0, sxtw
  4173cc:	cmp	x20, x22
  4173d0:	b.eq	4174bc <nftw@plt+0x1493c>  // b.none
  4173d4:	mvn	x1, x1
  4173d8:	and	x1, x1, #0x8
  4173dc:	add	x24, x24, x1
  4173e0:	cmp	x21, x22
  4173e4:	b.ne	417398 <nftw@plt+0x14818>  // b.any
  4173e8:	sub	x2, x22, x20
  4173ec:	mov	x1, x24
  4173f0:	mov	x0, x20
  4173f4:	bl	402490 <memcpy@plt>
  4173f8:	ldr	x27, [sp, #80]
  4173fc:	b	41709c <nftw@plt+0x1451c>
  417400:	cmp	x0, #0x4
  417404:	b.ne	41745c <nftw@plt+0x148dc>  // b.any
  417408:	ldr	x2, [x19]
  41740c:	mov	x1, x24
  417410:	mov	x0, x22
  417414:	blr	x2
  417418:	asr	w0, w0, #31
  41741c:	sxtw	x1, w0
  417420:	eor	x2, x22, x24
  417424:	and	x2, x2, x1
  417428:	eor	x2, x24, x2
  41742c:	ldr	w2, [x2]
  417430:	str	w2, [x20], #4
  417434:	and	w0, w0, #0x4
  417438:	add	x22, x22, w0, sxtw
  41743c:	cmp	x20, x22
  417440:	b.eq	4174c4 <nftw@plt+0x14944>  // b.none
  417444:	mvn	x1, x1
  417448:	and	x1, x1, #0x4
  41744c:	add	x24, x24, x1
  417450:	cmp	x21, x22
  417454:	b.ne	417408 <nftw@plt+0x14888>  // b.any
  417458:	b	4173e8 <nftw@plt+0x14868>
  41745c:	ldr	x2, [x19]
  417460:	mov	x1, x24
  417464:	mov	x0, x22
  417468:	blr	x2
  41746c:	asr	w23, w0, #31
  417470:	sxtw	x23, w23
  417474:	eor	x1, x22, x24
  417478:	and	x1, x1, x23
  41747c:	ldr	x2, [x19, #24]
  417480:	eor	x1, x24, x1
  417484:	mov	x0, x20
  417488:	bl	402490 <memcpy@plt>
  41748c:	ldr	x1, [x19, #24]
  417490:	add	x20, x0, x1
  417494:	and	x0, x23, x1
  417498:	add	x22, x22, x0
  41749c:	cmp	x20, x22
  4174a0:	b.eq	4174cc <nftw@plt+0x1494c>  // b.none
  4174a4:	mvn	x0, x23
  4174a8:	and	x0, x0, x1
  4174ac:	add	x24, x24, x0
  4174b0:	cmp	x21, x22
  4174b4:	b.ne	41745c <nftw@plt+0x148dc>  // b.any
  4174b8:	b	4173e8 <nftw@plt+0x14868>
  4174bc:	ldr	x27, [sp, #80]
  4174c0:	b	41709c <nftw@plt+0x1451c>
  4174c4:	ldr	x27, [sp, #80]
  4174c8:	b	41709c <nftw@plt+0x1451c>
  4174cc:	ldr	x27, [sp, #80]
  4174d0:	b	41709c <nftw@plt+0x1451c>
  4174d4:	cmp	x1, #0x1
  4174d8:	b.ls	417580 <nftw@plt+0x14a00>  // b.plast
  4174dc:	stp	x29, x30, [sp, #-352]!
  4174e0:	mov	x29, sp
  4174e4:	stp	x19, x20, [sp, #16]
  4174e8:	mov	x20, x0
  4174ec:	mov	x19, x1
  4174f0:	mov	x0, #0x5                   	// #5
  4174f4:	tbnz	x2, #63, 417538 <nftw@plt+0x149b8>
  4174f8:	str	x3, [sp, #312]
  4174fc:	str	x20, [sp, #320]
  417500:	str	x19, [sp, #328]
  417504:	str	x2, [sp, #336]
  417508:	str	x0, [sp, #344]
  41750c:	lsr	x1, x19, #1
  417510:	mul	x0, x1, x2
  417514:	cmp	x0, #0x100
  417518:	b.hi	417544 <nftw@plt+0x149c4>  // b.pmore
  41751c:	add	x4, sp, #0x38
  417520:	mov	x3, x20
  417524:	mov	x2, x19
  417528:	add	x1, sp, #0x138
  41752c:	mov	x0, x20
  417530:	bl	416ec4 <nftw@plt+0x14344>
  417534:	b	417574 <nftw@plt+0x149f4>
  417538:	mvn	x2, x2
  41753c:	mov	x0, #0x3                   	// #3
  417540:	b	4174f8 <nftw@plt+0x14978>
  417544:	str	x21, [sp, #32]
  417548:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41754c:	mov	x21, x0
  417550:	mov	x4, x0
  417554:	mov	x3, x20
  417558:	mov	x2, x19
  41755c:	add	x1, sp, #0x138
  417560:	mov	x0, x20
  417564:	bl	416ec4 <nftw@plt+0x14344>
  417568:	mov	x0, x21
  41756c:	bl	402910 <free@plt>
  417570:	ldr	x21, [sp, #32]
  417574:	ldp	x19, x20, [sp, #16]
  417578:	ldp	x29, x30, [sp], #352
  41757c:	ret
  417580:	ret
  417584:	stp	x29, x30, [sp, #-16]!
  417588:	mov	x29, sp
  41758c:	mvn	x2, x2
  417590:	bl	4174d4 <nftw@plt+0x14954>
  417594:	ldp	x29, x30, [sp], #16
  417598:	ret
  41759c:	mov	x9, x0
  4175a0:	ldr	x5, [x4]
  4175a4:	mov	w0, #0x7                   	// #7
  4175a8:	cmp	x5, #0x3
  4175ac:	b.ls	417668 <nftw@plt+0x14ae8>  // b.plast
  4175b0:	ldr	x11, [x2]
  4175b4:	mov	w0, #0x16                  	// #22
  4175b8:	cbz	x11, 417668 <nftw@plt+0x14ae8>
  4175bc:	ldr	x12, [x1]
  4175c0:	ldrb	w13, [x12]
  4175c4:	mov	w6, w13
  4175c8:	mov	x5, #0x2                   	// #2
  4175cc:	cmp	w13, #0x7f
  4175d0:	b.ls	417610 <nftw@plt+0x14a90>  // b.plast
  4175d4:	adrp	x7, 460000 <_obstack_memory_used@@Base+0x159fc>
  4175d8:	add	x7, x7, #0x798
  4175dc:	add	x14, x7, #0x8
  4175e0:	add	x0, x7, x5
  4175e4:	ldurb	w8, [x0, #-1]
  4175e8:	bic	w10, w6, w8
  4175ec:	add	x0, x14, x5
  4175f0:	ldurb	w0, [x0, #-1]
  4175f4:	cmp	w10, w0
  4175f8:	b.eq	41766c <nftw@plt+0x14aec>  // b.none
  4175fc:	add	x5, x5, #0x1
  417600:	cmp	x5, #0x7
  417604:	b.ne	4175e0 <nftw@plt+0x14a60>  // b.any
  417608:	mov	w0, #0x54                  	// #84
  41760c:	b	417668 <nftw@plt+0x14ae8>
  417610:	sub	x11, x11, #0x1
  417614:	str	x11, [x2]
  417618:	ldr	x0, [x1]
  41761c:	add	x0, x0, #0x1
  417620:	str	x0, [x1]
  417624:	ldr	x1, [x3]
  417628:	cbz	x9, 417738 <nftw@plt+0x14bb8>
  41762c:	strb	w6, [x1, #3]
  417630:	lsr	w0, w6, #8
  417634:	strb	w0, [x1, #2]
  417638:	lsr	w0, w6, #16
  41763c:	strb	w0, [x1, #1]
  417640:	lsr	w6, w6, #24
  417644:	mov	x0, #0x0                   	// #0
  417648:	strb	w6, [x1, x0]
  41764c:	ldr	x0, [x3]
  417650:	add	x0, x0, #0x4
  417654:	str	x0, [x3]
  417658:	ldr	x0, [x4]
  41765c:	sub	x0, x0, #0x4
  417660:	str	x0, [x4]
  417664:	mov	w0, #0x0                   	// #0
  417668:	ret
  41766c:	mov	w0, #0x16                  	// #22
  417670:	cmp	x5, x11
  417674:	b.hi	417668 <nftw@plt+0x14ae8>  // b.pmore
  417678:	and	w6, w13, w8
  41767c:	add	x0, x12, #0x1
  417680:	cmp	x5, #0x1
  417684:	b.ls	417730 <nftw@plt+0x14bb0>  // b.plast
  417688:	add	x12, x12, x5
  41768c:	ldrb	w7, [x0], #1
  417690:	and	w8, w7, #0xc0
  417694:	cmp	w8, #0x80
  417698:	b.ne	417758 <nftw@plt+0x14bd8>  // b.any
  41769c:	and	w7, w7, #0x3f
  4176a0:	add	w6, w7, w6, lsl #6
  4176a4:	cmp	x0, x12
  4176a8:	b.ne	41768c <nftw@plt+0x14b0c>  // b.any
  4176ac:	mov	w0, #0x54                  	// #84
  4176b0:	cmp	w6, #0x7f
  4176b4:	b.ls	417668 <nftw@plt+0x14ae8>  // b.plast
  4176b8:	cmp	w6, #0x7ff
  4176bc:	mov	w0, #0x54                  	// #84
  4176c0:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  4176c4:	b.hi	417668 <nftw@plt+0x14ae8>  // b.pmore
  4176c8:	mov	w0, #0xffff                	// #65535
  4176cc:	cmp	w6, w0
  4176d0:	mov	w0, #0x54                  	// #84
  4176d4:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  4176d8:	b.hi	417668 <nftw@plt+0x14ae8>  // b.pmore
  4176dc:	mov	w0, #0x1fffff              	// #2097151
  4176e0:	cmp	w6, w0
  4176e4:	mov	w0, #0x54                  	// #84
  4176e8:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  4176ec:	b.hi	417668 <nftw@plt+0x14ae8>  // b.pmore
  4176f0:	mov	w0, #0x3ffffff             	// #67108863
  4176f4:	cmp	w6, w0
  4176f8:	mov	w0, #0x54                  	// #84
  4176fc:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  417700:	b.hi	417668 <nftw@plt+0x14ae8>  // b.pmore
  417704:	sub	w0, w6, #0xd, lsl #12
  417708:	sub	w0, w0, #0x800
  41770c:	cmp	w0, #0x7ff
  417710:	mov	w0, #0x54                  	// #84
  417714:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
  417718:	b.lt	417668 <nftw@plt+0x14ae8>  // b.tstop
  41771c:	str	x12, [x1]
  417720:	ldr	x0, [x2]
  417724:	sub	x5, x0, x5
  417728:	str	x5, [x2]
  41772c:	b	417624 <nftw@plt+0x14aa4>
  417730:	mov	x12, x0
  417734:	b	4176b8 <nftw@plt+0x14b38>
  417738:	strb	w6, [x1]
  41773c:	lsr	w0, w6, #8
  417740:	strb	w0, [x1, #1]
  417744:	lsr	w0, w6, #16
  417748:	strb	w0, [x1, #2]
  41774c:	lsr	w6, w6, #24
  417750:	mov	x0, #0x3                   	// #3
  417754:	b	417648 <nftw@plt+0x14ac8>
  417758:	mov	w0, #0x54                  	// #84
  41775c:	b	417668 <nftw@plt+0x14ae8>
  417760:	ldr	x7, [x1]
  417764:	ldr	x8, [x2]
  417768:	cmp	x8, #0x1
  41776c:	b.ls	417930 <nftw@plt+0x14db0>  // b.plast
  417770:	mov	x6, x0
  417774:	cmp	x0, #0x0
  417778:	cset	w0, eq  // eq = none
  41777c:	ldrb	w5, [x7, w0, uxtw]
  417780:	cset	w0, ne  // ne = any
  417784:	ldrb	w0, [x7, w0, uxtw]
  417788:	add	w5, w0, w5, lsl #8
  41778c:	sub	w9, w5, #0xd, lsl #12
  417790:	sub	w9, w9, #0xc00
  417794:	mov	w0, #0x54                  	// #84
  417798:	cmp	w9, #0x3ff
  41779c:	b.ls	417950 <nftw@plt+0x14dd0>  // b.plast
  4177a0:	sub	sp, sp, #0x10
  4177a4:	sub	w9, w5, #0xd, lsl #12
  4177a8:	sub	w9, w9, #0x800
  4177ac:	cmp	w9, #0x3ff
  4177b0:	b.hi	417880 <nftw@plt+0x14d00>  // b.pmore
  4177b4:	mov	w0, #0x16                  	// #22
  4177b8:	cmp	x8, #0x3
  4177bc:	b.ls	417908 <nftw@plt+0x14d88>  // b.plast
  4177c0:	cbz	x6, 417940 <nftw@plt+0x14dc0>
  4177c4:	ldrb	w5, [x7, #2]
  4177c8:	lsl	w0, w5, #8
  4177cc:	mov	x5, #0x3                   	// #3
  4177d0:	ldrb	w5, [x7, x5]
  4177d4:	add	w5, w5, w0
  4177d8:	sub	w6, w5, #0xd, lsl #12
  4177dc:	sub	w6, w6, #0xc00
  4177e0:	mov	w0, #0x54                  	// #84
  4177e4:	cmp	w6, #0x3ff
  4177e8:	b.hi	417908 <nftw@plt+0x14d88>  // b.pmore
  4177ec:	add	w5, w5, w9, lsl #10
  4177f0:	add	w5, w5, #0x2, lsl #12
  4177f4:	add	w5, w5, #0x400
  4177f8:	ldr	x9, [x3]
  4177fc:	mov	w0, w5
  417800:	add	x8, sp, #0xe
  417804:	mov	x6, #0x1                   	// #1
  417808:	adrp	x10, 460000 <_obstack_memory_used@@Base+0x159fc>
  41780c:	add	x10, x10, #0x798
  417810:	add	x10, x10, #0x10
  417814:	mov	x11, x8
  417818:	and	w7, w0, #0x3f
  41781c:	orr	w7, w7, #0xffffff80
  417820:	strb	w7, [x8, #-1]!
  417824:	lsr	w0, w0, #6
  417828:	mov	x12, x6
  41782c:	add	x6, x6, #0x1
  417830:	cmp	w0, #0x3e
  417834:	b.hi	417814 <nftw@plt+0x14c94>  // b.pmore
  417838:	add	x7, x10, x6
  41783c:	ldurb	w7, [x7, #-1]
  417840:	tst	w7, w0
  417844:	b.ne	417814 <nftw@plt+0x14c94>  // b.any
  417848:	sub	x7, x11, #0x2
  41784c:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x159fc>
  417850:	add	x8, x8, #0x798
  417854:	add	x8, x8, #0x18
  417858:	ldrb	w8, [x8, x12]
  41785c:	orr	w0, w0, w8
  417860:	sturb	w0, [x11, #-2]
  417864:	ldr	x0, [x4]
  417868:	cmp	x6, x0
  41786c:	b.hi	417938 <nftw@plt+0x14db8>  // b.pmore
  417870:	add	x0, sp, #0xe
  417874:	cmp	x7, x0
  417878:	b.cc	4178a0 <nftw@plt+0x14d20>  // b.lo, b.ul, b.last
  41787c:	b	4178d0 <nftw@plt+0x14d50>
  417880:	ldr	x9, [x3]
  417884:	cmp	w5, #0x7f
  417888:	b.hi	4177fc <nftw@plt+0x14c7c>  // b.pmore
  41788c:	strb	w5, [sp, #13]
  417890:	ldr	x0, [x4]
  417894:	cbz	x0, 417938 <nftw@plt+0x14db8>
  417898:	add	x7, sp, #0xd
  41789c:	mov	x6, #0x1                   	// #1
  4178a0:	mov	x11, x7
  4178a4:	add	x8, sp, #0xe
  4178a8:	sub	x8, x8, x7
  4178ac:	mov	x0, #0x0                   	// #0
  4178b0:	ldrb	w10, [x7, x0]
  4178b4:	strb	w10, [x9, x0]
  4178b8:	add	x0, x0, #0x1
  4178bc:	cmp	x8, x0
  4178c0:	b.ne	4178b0 <nftw@plt+0x14d30>  // b.any
  4178c4:	add	x0, sp, #0xe
  4178c8:	sub	x0, x0, x11
  4178cc:	add	x9, x9, x0
  4178d0:	ldr	x0, [x4]
  4178d4:	sub	x6, x0, x6
  4178d8:	str	x6, [x4]
  4178dc:	str	x9, [x3]
  4178e0:	mov	w0, #0xffff                	// #65535
  4178e4:	cmp	w5, w0
  4178e8:	b.hi	417910 <nftw@plt+0x14d90>  // b.pmore
  4178ec:	ldr	x0, [x1]
  4178f0:	add	x0, x0, #0x2
  4178f4:	str	x0, [x1]
  4178f8:	ldr	x0, [x2]
  4178fc:	sub	x0, x0, #0x2
  417900:	str	x0, [x2]
  417904:	mov	w0, #0x0                   	// #0
  417908:	add	sp, sp, #0x10
  41790c:	ret
  417910:	ldr	x0, [x1]
  417914:	add	x0, x0, #0x4
  417918:	str	x0, [x1]
  41791c:	ldr	x0, [x2]
  417920:	sub	x0, x0, #0x4
  417924:	str	x0, [x2]
  417928:	mov	w0, #0x0                   	// #0
  41792c:	b	417908 <nftw@plt+0x14d88>
  417930:	mov	w0, #0x16                  	// #22
  417934:	ret
  417938:	mov	w0, #0x7                   	// #7
  41793c:	b	417908 <nftw@plt+0x14d88>
  417940:	ldrb	w5, [x7, #3]
  417944:	lsl	w0, w5, #8
  417948:	mov	x5, #0x2                   	// #2
  41794c:	b	4177d0 <nftw@plt+0x14c50>
  417950:	ret
  417954:	cmp	w1, #0x3f
  417958:	b.eq	4179fc <nftw@plt+0x14e7c>  // b.none
  41795c:	b.hi	4179b4 <nftw@plt+0x14e34>  // b.pmore
  417960:	cmp	w1, #0x3b
  417964:	b.eq	4179e4 <nftw@plt+0x14e64>  // b.none
  417968:	b.ls	41798c <nftw@plt+0x14e0c>  // b.plast
  41796c:	cmp	w1, #0x3c
  417970:	b.ne	4179cc <nftw@plt+0x14e4c>  // b.any
  417974:	add	x0, x0, #0x220
  417978:	ldp	x2, x3, [x0]
  41797c:	stp	x2, x3, [x8]
  417980:	ldr	x0, [x0, #16]
  417984:	str	x0, [x8, #16]
  417988:	b	4179e0 <nftw@plt+0x14e60>
  41798c:	cmp	w1, #0x39
  417990:	b.eq	4179fc <nftw@plt+0x14e7c>  // b.none
  417994:	cmp	w1, #0x3a
  417998:	b.ne	4179cc <nftw@plt+0x14e4c>  // b.any
  41799c:	add	x0, x0, #0x238
  4179a0:	ldp	x2, x3, [x0]
  4179a4:	stp	x2, x3, [x8]
  4179a8:	ldr	x0, [x0, #16]
  4179ac:	str	x0, [x8, #16]
  4179b0:	b	4179e0 <nftw@plt+0x14e60>
  4179b4:	cmp	w1, #0x41
  4179b8:	b.eq	4179e4 <nftw@plt+0x14e64>  // b.none
  4179bc:	cmp	w1, #0x42
  4179c0:	b.eq	417974 <nftw@plt+0x14df4>  // b.none
  4179c4:	cmp	w1, #0x40
  4179c8:	b.eq	41799c <nftw@plt+0x14e1c>  // b.none
  4179cc:	add	x0, x0, #0x208
  4179d0:	ldp	x2, x3, [x0]
  4179d4:	stp	x2, x3, [x8]
  4179d8:	ldr	x0, [x0, #16]
  4179dc:	str	x0, [x8, #16]
  4179e0:	ret
  4179e4:	add	x0, x0, #0x250
  4179e8:	ldp	x2, x3, [x0]
  4179ec:	stp	x2, x3, [x8]
  4179f0:	ldr	x0, [x0, #16]
  4179f4:	str	x0, [x8, #16]
  4179f8:	b	4179e0 <nftw@plt+0x14e60>
  4179fc:	add	x0, x0, #0x268
  417a00:	ldp	x2, x3, [x0]
  417a04:	stp	x2, x3, [x8]
  417a08:	ldr	x0, [x0, #16]
  417a0c:	str	x0, [x8, #16]
  417a10:	b	4179e0 <nftw@plt+0x14e60>
  417a14:	mov	w0, #0x1                   	// #1
  417a18:	ret
  417a1c:	stp	x29, x30, [sp, #-80]!
  417a20:	mov	x29, sp
  417a24:	stp	x19, x20, [sp, #16]
  417a28:	stp	x21, x22, [sp, #32]
  417a2c:	stp	x23, x24, [sp, #48]
  417a30:	str	x25, [sp, #64]
  417a34:	mov	x20, x8
  417a38:	mov	x25, x0
  417a3c:	mov	x23, x1
  417a40:	mov	x22, x2
  417a44:	mov	x1, x2
  417a48:	mov	x0, x23
  417a4c:	bl	402720 <strcasecmp@plt>
  417a50:	cbnz	w0, 417a88 <nftw@plt+0x14f08>
  417a54:	adrp	x0, 417000 <nftw@plt+0x14480>
  417a58:	add	x0, x0, #0xf60
  417a5c:	str	x0, [x20]
  417a60:	mov	x0, #0xffffffffffffffff    	// #-1
  417a64:	str	x0, [x20, #8]
  417a68:	str	w0, [x20, #16]
  417a6c:	mov	sp, x29
  417a70:	ldp	x19, x20, [sp, #16]
  417a74:	ldp	x21, x22, [sp, #32]
  417a78:	ldp	x23, x24, [sp, #48]
  417a7c:	ldr	x25, [sp, #64]
  417a80:	ldp	x29, x30, [sp], #80
  417a84:	ret
  417a88:	mov	x0, x23
  417a8c:	bl	4024f0 <strlen@plt>
  417a90:	mov	x19, x0
  417a94:	mov	x0, x22
  417a98:	bl	4024f0 <strlen@plt>
  417a9c:	add	x19, x19, x0
  417aa0:	add	x19, x19, #0x11
  417aa4:	and	x19, x19, #0xfffffffffffffff0
  417aa8:	sub	sp, sp, x19
  417aac:	mov	x24, sp
  417ab0:	mov	x1, x22
  417ab4:	mov	x0, x24
  417ab8:	bl	402990 <strcpy@plt>
  417abc:	mov	x0, x24
  417ac0:	bl	4024f0 <strlen@plt>
  417ac4:	mov	w1, #0x2f                  	// #47
  417ac8:	strh	w1, [x24, x0]
  417acc:	mov	x1, x23
  417ad0:	mov	x0, x24
  417ad4:	bl	4026e0 <strcat@plt>
  417ad8:	adrp	x19, 460000 <_obstack_memory_used@@Base+0x159fc>
  417adc:	add	x19, x19, #0x798
  417ae0:	add	x19, x19, #0x20
  417ae4:	mov	x21, #0x0                   	// #0
  417ae8:	ldr	x1, [x19]
  417aec:	mov	x0, x24
  417af0:	bl	402720 <strcasecmp@plt>
  417af4:	cbz	w0, 417b68 <nftw@plt+0x14fe8>
  417af8:	add	x21, x21, #0x1
  417afc:	add	x19, x19, #0x18
  417b00:	cmp	x21, #0x8
  417b04:	b.ne	417ae8 <nftw@plt+0x14f68>  // b.any
  417b08:	adrp	x0, 417000 <nftw@plt+0x14480>
  417b0c:	add	x0, x0, #0xbc4
  417b10:	str	x0, [x20]
  417b14:	mov	x1, x22
  417b18:	mov	x0, x23
  417b1c:	bl	4029a0 <iconv_open@plt>
  417b20:	str	x0, [x20, #8]
  417b24:	mov	w1, #0xffffffff            	// #-1
  417b28:	str	w1, [x20, #16]
  417b2c:	cmn	x0, #0x1
  417b30:	b.ne	417a6c <nftw@plt+0x14eec>  // b.any
  417b34:	bl	402aa0 <__errno_location@plt>
  417b38:	ldr	w0, [x0]
  417b3c:	cmp	w0, #0x16
  417b40:	b.eq	417ba4 <nftw@plt+0x15024>  // b.none
  417b44:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  417b48:	add	x2, x2, #0x98
  417b4c:	mov	w1, #0x3                   	// #3
  417b50:	mov	x0, x25
  417b54:	bl	41fe9c <nftw@plt+0x1d31c>
  417b58:	adrp	x0, 417000 <nftw@plt+0x14480>
  417b5c:	add	x0, x0, #0xf60
  417b60:	str	x0, [x20]
  417b64:	b	417a6c <nftw@plt+0x14eec>
  417b68:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x159fc>
  417b6c:	add	x0, x0, #0x798
  417b70:	add	x1, x0, #0x20
  417b74:	lsl	x0, x21, #1
  417b78:	add	x2, x0, x21
  417b7c:	add	x2, x1, x2, lsl #3
  417b80:	ldr	x2, [x2, #8]
  417b84:	str	x2, [x20]
  417b88:	add	x0, x0, x21
  417b8c:	add	x0, x1, x0, lsl #3
  417b90:	ldr	x0, [x0, #16]
  417b94:	str	x0, [x20, #8]
  417b98:	mov	w0, #0xffffffff            	// #-1
  417b9c:	str	w0, [x20, #16]
  417ba0:	b	417a6c <nftw@plt+0x14eec>
  417ba4:	mov	x4, x23
  417ba8:	mov	x3, x22
  417bac:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  417bb0:	add	x2, x2, #0x68
  417bb4:	mov	w1, #0x3                   	// #3
  417bb8:	mov	x0, x25
  417bbc:	bl	41f990 <nftw@plt+0x1ce10>
  417bc0:	b	417b58 <nftw@plt+0x14fd8>
  417bc4:	stp	x29, x30, [sp, #-80]!
  417bc8:	mov	x29, sp
  417bcc:	stp	x19, x20, [sp, #16]
  417bd0:	stp	x21, x22, [sp, #32]
  417bd4:	mov	x20, x0
  417bd8:	mov	x22, x1
  417bdc:	mov	x21, x2
  417be0:	mov	x19, x3
  417be4:	mov	x4, #0x0                   	// #0
  417be8:	mov	x3, #0x0                   	// #0
  417bec:	mov	x2, #0x0                   	// #0
  417bf0:	mov	x1, #0x0                   	// #0
  417bf4:	bl	4028a0 <iconv@plt>
  417bf8:	cmn	x0, #0x1
  417bfc:	b.eq	417d48 <nftw@plt+0x151c8>  // b.none
  417c00:	str	x22, [sp, #72]
  417c04:	str	x21, [sp, #56]
  417c08:	ldr	x2, [x19, #16]
  417c0c:	ldr	x1, [x19]
  417c10:	add	x1, x1, x2
  417c14:	str	x1, [sp, #64]
  417c18:	ldr	x0, [x19, #8]
  417c1c:	sub	x0, x0, x2
  417c20:	str	x0, [sp, #48]
  417c24:	add	x4, sp, #0x30
  417c28:	add	x3, sp, #0x40
  417c2c:	add	x2, sp, #0x38
  417c30:	add	x1, sp, #0x48
  417c34:	mov	x0, x20
  417c38:	bl	4028a0 <iconv@plt>
  417c3c:	ldr	x0, [sp, #56]
  417c40:	cbnz	x0, 417cfc <nftw@plt+0x1517c>
  417c44:	add	x4, sp, #0x30
  417c48:	add	x3, sp, #0x40
  417c4c:	mov	x2, #0x0                   	// #0
  417c50:	mov	x1, #0x0                   	// #0
  417c54:	mov	x0, x20
  417c58:	bl	4028a0 <iconv@plt>
  417c5c:	cmn	x0, #0x1
  417c60:	b.ne	417cd8 <nftw@plt+0x15158>  // b.any
  417c64:	bl	402aa0 <__errno_location@plt>
  417c68:	ldr	w1, [x0]
  417c6c:	mov	w0, #0x0                   	// #0
  417c70:	cmp	w1, #0x7
  417c74:	b.ne	417cec <nftw@plt+0x1516c>  // b.any
  417c78:	ldr	x0, [sp, #48]
  417c7c:	add	x0, x0, #0x100
  417c80:	str	x0, [sp, #48]
  417c84:	ldr	x1, [x19, #8]
  417c88:	add	x1, x1, #0x100
  417c8c:	str	x1, [x19, #8]
  417c90:	ldr	x0, [x19]
  417c94:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  417c98:	str	x0, [x19]
  417c9c:	ldr	x1, [x19, #8]
  417ca0:	ldr	x2, [sp, #48]
  417ca4:	sub	x1, x1, x2
  417ca8:	add	x0, x0, x1
  417cac:	str	x0, [sp, #64]
  417cb0:	add	x4, sp, #0x30
  417cb4:	add	x3, sp, #0x40
  417cb8:	mov	x2, #0x0                   	// #0
  417cbc:	mov	x1, #0x0                   	// #0
  417cc0:	mov	x0, x20
  417cc4:	bl	4028a0 <iconv@plt>
  417cc8:	mov	x1, x0
  417ccc:	mov	w0, #0x0                   	// #0
  417cd0:	cmn	x1, #0x1
  417cd4:	b.eq	417cec <nftw@plt+0x1516c>  // b.none
  417cd8:	ldr	x0, [x19, #8]
  417cdc:	ldr	x1, [sp, #48]
  417ce0:	sub	x0, x0, x1
  417ce4:	str	x0, [x19, #16]
  417ce8:	mov	w0, #0x1                   	// #1
  417cec:	ldp	x19, x20, [sp, #16]
  417cf0:	ldp	x21, x22, [sp, #32]
  417cf4:	ldp	x29, x30, [sp], #80
  417cf8:	ret
  417cfc:	bl	402aa0 <__errno_location@plt>
  417d00:	ldr	w0, [x0]
  417d04:	cmp	w0, #0x7
  417d08:	b.ne	417d50 <nftw@plt+0x151d0>  // b.any
  417d0c:	ldr	x0, [sp, #48]
  417d10:	add	x0, x0, #0x100
  417d14:	str	x0, [sp, #48]
  417d18:	ldr	x1, [x19, #8]
  417d1c:	add	x1, x1, #0x100
  417d20:	str	x1, [x19, #8]
  417d24:	ldr	x0, [x19]
  417d28:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  417d2c:	str	x0, [x19]
  417d30:	ldr	x1, [x19, #8]
  417d34:	ldr	x2, [sp, #48]
  417d38:	sub	x1, x1, x2
  417d3c:	add	x0, x0, x1
  417d40:	str	x0, [sp, #64]
  417d44:	b	417c24 <nftw@plt+0x150a4>
  417d48:	mov	w0, #0x0                   	// #0
  417d4c:	b	417cec <nftw@plt+0x1516c>
  417d50:	mov	w0, #0x0                   	// #0
  417d54:	b	417cec <nftw@plt+0x1516c>
  417d58:	stp	x29, x30, [sp, #-80]!
  417d5c:	mov	x29, sp
  417d60:	stp	x19, x20, [sp, #16]
  417d64:	str	x21, [sp, #32]
  417d68:	mov	x21, x0
  417d6c:	mov	x19, x3
  417d70:	str	x1, [sp, #48]
  417d74:	str	x2, [sp, #64]
  417d78:	ldr	x0, [x3, #16]
  417d7c:	ldr	x2, [x3]
  417d80:	add	x2, x2, x0
  417d84:	str	x2, [sp, #56]
  417d88:	ldr	x1, [x3, #8]
  417d8c:	sub	x1, x1, x0
  417d90:	str	x1, [sp, #72]
  417d94:	add	x4, sp, #0x48
  417d98:	add	x3, sp, #0x38
  417d9c:	add	x2, sp, #0x40
  417da0:	add	x1, sp, #0x30
  417da4:	mov	x0, x21
  417da8:	bl	418428 <nftw@plt+0x158a8>
  417dac:	mov	w20, w0
  417db0:	ldr	x2, [sp, #64]
  417db4:	cmp	w0, #0x0
  417db8:	cset	w1, ne  // ne = any
  417dbc:	cmp	x2, #0x0
  417dc0:	csinc	w0, w1, wzr, ne  // ne = any
  417dc4:	cbz	w0, 417d94 <nftw@plt+0x15214>
  417dc8:	cbnz	x2, 417dec <nftw@plt+0x1526c>
  417dcc:	ldr	x1, [x19, #8]
  417dd0:	ldr	x2, [sp, #72]
  417dd4:	sub	x1, x1, x2
  417dd8:	str	x1, [x19, #16]
  417ddc:	ldp	x19, x20, [sp, #16]
  417de0:	ldr	x21, [sp, #32]
  417de4:	ldp	x29, x30, [sp], #80
  417de8:	ret
  417dec:	cmp	w20, #0x7
  417df0:	b.ne	417e30 <nftw@plt+0x152b0>  // b.any
  417df4:	ldr	x0, [sp, #72]
  417df8:	add	x0, x0, #0x100
  417dfc:	str	x0, [sp, #72]
  417e00:	ldr	x1, [x19, #8]
  417e04:	add	x1, x1, #0x100
  417e08:	str	x1, [x19, #8]
  417e0c:	ldr	x0, [x19]
  417e10:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  417e14:	str	x0, [x19]
  417e18:	ldr	x1, [x19, #8]
  417e1c:	ldr	x2, [sp, #72]
  417e20:	sub	x1, x1, x2
  417e24:	add	x0, x0, x1
  417e28:	str	x0, [sp, #56]
  417e2c:	b	417d94 <nftw@plt+0x15214>
  417e30:	bl	402aa0 <__errno_location@plt>
  417e34:	str	w20, [x0]
  417e38:	mov	w0, #0x0                   	// #0
  417e3c:	b	417ddc <nftw@plt+0x1525c>
  417e40:	stp	x29, x30, [sp, #-80]!
  417e44:	mov	x29, sp
  417e48:	stp	x19, x20, [sp, #16]
  417e4c:	stp	x21, x22, [sp, #32]
  417e50:	stp	x25, x26, [sp, #64]
  417e54:	mov	w19, w1
  417e58:	mov	x20, x2
  417e5c:	ldrsw	x26, [x3, #16]
  417e60:	ldr	x21, [x0, #1216]
  417e64:	cmp	x21, x26
  417e68:	b.eq	417f1c <nftw@plt+0x1539c>  // b.none
  417e6c:	stp	x23, x24, [sp, #48]
  417e70:	ldrb	w25, [x0, #1242]
  417e74:	cmp	x21, #0x20
  417e78:	mov	x22, #0x20                  	// #32
  417e7c:	csel	x0, x21, x22, ls  // ls = plast
  417e80:	mov	x22, #0x1                   	// #1
  417e84:	lsl	x22, x22, x0
  417e88:	sub	x22, x22, #0x1
  417e8c:	udiv	x23, x26, x21
  417e90:	ldr	x24, [x2, #16]
  417e94:	ldr	x1, [x2, #8]
  417e98:	add	x0, x23, x24
  417e9c:	cmp	x0, x1
  417ea0:	b.hi	417f04 <nftw@plt+0x15384>  // b.pmore
  417ea4:	cmp	x21, x26
  417ea8:	b.hi	417ee0 <nftw@plt+0x15360>  // b.pmore
  417eac:	mov	x0, #0x0                   	// #0
  417eb0:	sub	x4, x23, #0x1
  417eb4:	and	w2, w19, w22
  417eb8:	lsr	w19, w19, w21
  417ebc:	ldr	x3, [x20]
  417ec0:	sub	x1, x4, x0
  417ec4:	cmp	w25, #0x0
  417ec8:	csel	x1, x1, x0, ne  // ne = any
  417ecc:	add	x3, x3, x1
  417ed0:	strb	w2, [x3, x24]
  417ed4:	add	x0, x0, #0x1
  417ed8:	cmp	x23, x0
  417edc:	b.hi	417eb4 <nftw@plt+0x15334>  // b.pmore
  417ee0:	ldr	x0, [x20, #16]
  417ee4:	add	x23, x0, x23
  417ee8:	str	x23, [x20, #16]
  417eec:	ldp	x23, x24, [sp, #48]
  417ef0:	ldp	x19, x20, [sp, #16]
  417ef4:	ldp	x21, x22, [sp, #32]
  417ef8:	ldp	x25, x26, [sp, #64]
  417efc:	ldp	x29, x30, [sp], #80
  417f00:	ret
  417f04:	add	x1, x1, #0x100
  417f08:	str	x1, [x2, #8]
  417f0c:	ldr	x0, [x2]
  417f10:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  417f14:	str	x0, [x20]
  417f18:	b	417ea4 <nftw@plt+0x15324>
  417f1c:	ldr	x1, [x2, #8]
  417f20:	ldr	x0, [x2, #16]
  417f24:	add	x0, x0, #0x1
  417f28:	cmp	x0, x1
  417f2c:	b.hi	417f48 <nftw@plt+0x153c8>  // b.pmore
  417f30:	ldr	x1, [x20]
  417f34:	ldr	x0, [x20, #16]
  417f38:	add	x2, x0, #0x1
  417f3c:	str	x2, [x20, #16]
  417f40:	strb	w19, [x1, x0]
  417f44:	b	417ef0 <nftw@plt+0x15370>
  417f48:	add	x1, x1, #0x100
  417f4c:	str	x1, [x2, #8]
  417f50:	ldr	x0, [x2]
  417f54:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  417f58:	str	x0, [x20]
  417f5c:	b	417f30 <nftw@plt+0x153b0>
  417f60:	stp	x29, x30, [sp, #-48]!
  417f64:	mov	x29, sp
  417f68:	stp	x19, x20, [sp, #16]
  417f6c:	str	x21, [sp, #32]
  417f70:	mov	x21, x1
  417f74:	mov	x20, x2
  417f78:	mov	x19, x3
  417f7c:	ldr	x0, [x3, #16]
  417f80:	add	x0, x2, x0
  417f84:	ldr	x1, [x3, #8]
  417f88:	cmp	x0, x1
  417f8c:	b.hi	417fc8 <nftw@plt+0x15448>  // b.pmore
  417f90:	ldr	x3, [x19]
  417f94:	ldr	x0, [x19, #16]
  417f98:	mov	x2, x20
  417f9c:	mov	x1, x21
  417fa0:	add	x0, x3, x0
  417fa4:	bl	402490 <memcpy@plt>
  417fa8:	ldr	x2, [x19, #16]
  417fac:	add	x20, x2, x20
  417fb0:	str	x20, [x19, #16]
  417fb4:	mov	w0, #0x1                   	// #1
  417fb8:	ldp	x19, x20, [sp, #16]
  417fbc:	ldr	x21, [sp, #32]
  417fc0:	ldp	x29, x30, [sp], #48
  417fc4:	ret
  417fc8:	add	x1, x0, x0, lsr #2
  417fcc:	str	x1, [x3, #8]
  417fd0:	ldr	x0, [x3]
  417fd4:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  417fd8:	str	x0, [x19]
  417fdc:	b	417f90 <nftw@plt+0x15410>
  417fe0:	stp	x29, x30, [sp, #-80]!
  417fe4:	mov	x29, sp
  417fe8:	stp	x19, x20, [sp, #16]
  417fec:	str	x21, [sp, #32]
  417ff0:	mov	x21, x0
  417ff4:	mov	x19, x3
  417ff8:	str	x1, [sp, #48]
  417ffc:	str	x2, [sp, #64]
  418000:	ldr	x0, [x3, #16]
  418004:	ldr	x2, [x3]
  418008:	add	x2, x2, x0
  41800c:	str	x2, [sp, #56]
  418010:	ldr	x1, [x3, #8]
  418014:	sub	x1, x1, x0
  418018:	str	x1, [sp, #72]
  41801c:	add	x4, sp, #0x48
  418020:	add	x3, sp, #0x38
  418024:	add	x2, sp, #0x40
  418028:	add	x1, sp, #0x30
  41802c:	mov	x0, x21
  418030:	bl	418298 <nftw@plt+0x15718>
  418034:	mov	w20, w0
  418038:	ldr	x2, [sp, #64]
  41803c:	cmp	w0, #0x0
  418040:	cset	w1, ne  // ne = any
  418044:	cmp	x2, #0x0
  418048:	csinc	w0, w1, wzr, ne  // ne = any
  41804c:	cbz	w0, 41801c <nftw@plt+0x1549c>
  418050:	cbnz	x2, 418074 <nftw@plt+0x154f4>
  418054:	ldr	x1, [x19, #8]
  418058:	ldr	x2, [sp, #72]
  41805c:	sub	x1, x1, x2
  418060:	str	x1, [x19, #16]
  418064:	ldp	x19, x20, [sp, #16]
  418068:	ldr	x21, [sp, #32]
  41806c:	ldp	x29, x30, [sp], #80
  418070:	ret
  418074:	cmp	w20, #0x7
  418078:	b.ne	4180b8 <nftw@plt+0x15538>  // b.any
  41807c:	ldr	x0, [sp, #72]
  418080:	add	x0, x0, #0x100
  418084:	str	x0, [sp, #72]
  418088:	ldr	x1, [x19, #8]
  41808c:	add	x1, x1, #0x100
  418090:	str	x1, [x19, #8]
  418094:	ldr	x0, [x19]
  418098:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41809c:	str	x0, [x19]
  4180a0:	ldr	x1, [x19, #8]
  4180a4:	ldr	x2, [sp, #72]
  4180a8:	sub	x1, x1, x2
  4180ac:	add	x0, x0, x1
  4180b0:	str	x0, [sp, #56]
  4180b4:	b	41801c <nftw@plt+0x1549c>
  4180b8:	bl	402aa0 <__errno_location@plt>
  4180bc:	str	w20, [x0]
  4180c0:	mov	w0, #0x0                   	// #0
  4180c4:	b	418064 <nftw@plt+0x154e4>
  4180c8:	stp	x29, x30, [sp, #-80]!
  4180cc:	mov	x29, sp
  4180d0:	stp	x19, x20, [sp, #16]
  4180d4:	str	x21, [sp, #32]
  4180d8:	mov	x21, x0
  4180dc:	mov	x19, x3
  4180e0:	str	x1, [sp, #48]
  4180e4:	str	x2, [sp, #64]
  4180e8:	ldr	x0, [x3, #16]
  4180ec:	ldr	x2, [x3]
  4180f0:	add	x2, x2, x0
  4180f4:	str	x2, [sp, #56]
  4180f8:	ldr	x1, [x3, #8]
  4180fc:	sub	x1, x1, x0
  418100:	str	x1, [sp, #72]
  418104:	add	x4, sp, #0x48
  418108:	add	x3, sp, #0x38
  41810c:	add	x2, sp, #0x40
  418110:	add	x1, sp, #0x30
  418114:	mov	x0, x21
  418118:	bl	41759c <nftw@plt+0x14a1c>
  41811c:	mov	w20, w0
  418120:	ldr	x2, [sp, #64]
  418124:	cmp	w0, #0x0
  418128:	cset	w1, ne  // ne = any
  41812c:	cmp	x2, #0x0
  418130:	csinc	w0, w1, wzr, ne  // ne = any
  418134:	cbz	w0, 418104 <nftw@plt+0x15584>
  418138:	cbnz	x2, 41815c <nftw@plt+0x155dc>
  41813c:	ldr	x1, [x19, #8]
  418140:	ldr	x2, [sp, #72]
  418144:	sub	x1, x1, x2
  418148:	str	x1, [x19, #16]
  41814c:	ldp	x19, x20, [sp, #16]
  418150:	ldr	x21, [sp, #32]
  418154:	ldp	x29, x30, [sp], #80
  418158:	ret
  41815c:	cmp	w20, #0x7
  418160:	b.ne	4181a0 <nftw@plt+0x15620>  // b.any
  418164:	ldr	x0, [sp, #72]
  418168:	add	x0, x0, #0x100
  41816c:	str	x0, [sp, #72]
  418170:	ldr	x1, [x19, #8]
  418174:	add	x1, x1, #0x100
  418178:	str	x1, [x19, #8]
  41817c:	ldr	x0, [x19]
  418180:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  418184:	str	x0, [x19]
  418188:	ldr	x1, [x19, #8]
  41818c:	ldr	x2, [sp, #72]
  418190:	sub	x1, x1, x2
  418194:	add	x0, x0, x1
  418198:	str	x0, [sp, #56]
  41819c:	b	418104 <nftw@plt+0x15584>
  4181a0:	bl	402aa0 <__errno_location@plt>
  4181a4:	str	w20, [x0]
  4181a8:	mov	w0, #0x0                   	// #0
  4181ac:	b	41814c <nftw@plt+0x155cc>
  4181b0:	stp	x29, x30, [sp, #-80]!
  4181b4:	mov	x29, sp
  4181b8:	stp	x19, x20, [sp, #16]
  4181bc:	str	x21, [sp, #32]
  4181c0:	mov	x21, x0
  4181c4:	mov	x19, x3
  4181c8:	str	x1, [sp, #48]
  4181cc:	str	x2, [sp, #64]
  4181d0:	ldr	x0, [x3, #16]
  4181d4:	ldr	x2, [x3]
  4181d8:	add	x2, x2, x0
  4181dc:	str	x2, [sp, #56]
  4181e0:	ldr	x1, [x3, #8]
  4181e4:	sub	x1, x1, x0
  4181e8:	str	x1, [sp, #72]
  4181ec:	add	x4, sp, #0x48
  4181f0:	add	x3, sp, #0x38
  4181f4:	add	x2, sp, #0x40
  4181f8:	add	x1, sp, #0x30
  4181fc:	mov	x0, x21
  418200:	bl	417760 <nftw@plt+0x14be0>
  418204:	mov	w20, w0
  418208:	ldr	x2, [sp, #64]
  41820c:	cmp	w0, #0x0
  418210:	cset	w1, ne  // ne = any
  418214:	cmp	x2, #0x0
  418218:	csinc	w0, w1, wzr, ne  // ne = any
  41821c:	cbz	w0, 4181ec <nftw@plt+0x1566c>
  418220:	cbnz	x2, 418244 <nftw@plt+0x156c4>
  418224:	ldr	x1, [x19, #8]
  418228:	ldr	x2, [sp, #72]
  41822c:	sub	x1, x1, x2
  418230:	str	x1, [x19, #16]
  418234:	ldp	x19, x20, [sp, #16]
  418238:	ldr	x21, [sp, #32]
  41823c:	ldp	x29, x30, [sp], #80
  418240:	ret
  418244:	cmp	w20, #0x7
  418248:	b.ne	418288 <nftw@plt+0x15708>  // b.any
  41824c:	ldr	x0, [sp, #72]
  418250:	add	x0, x0, #0x100
  418254:	str	x0, [sp, #72]
  418258:	ldr	x1, [x19, #8]
  41825c:	add	x1, x1, #0x100
  418260:	str	x1, [x19, #8]
  418264:	ldr	x0, [x19]
  418268:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41826c:	str	x0, [x19]
  418270:	ldr	x1, [x19, #8]
  418274:	ldr	x2, [sp, #72]
  418278:	sub	x1, x1, x2
  41827c:	add	x0, x0, x1
  418280:	str	x0, [sp, #56]
  418284:	b	4181ec <nftw@plt+0x1566c>
  418288:	bl	402aa0 <__errno_location@plt>
  41828c:	str	w20, [x0]
  418290:	mov	w0, #0x0                   	// #0
  418294:	b	418234 <nftw@plt+0x156b4>
  418298:	ldr	x5, [x2]
  41829c:	cmp	x5, #0x3
  4182a0:	b.ls	4183f4 <nftw@plt+0x15874>  // b.plast
  4182a4:	ldr	x6, [x1]
  4182a8:	cbz	x0, 418404 <nftw@plt+0x15884>
  4182ac:	ldrb	w0, [x6]
  4182b0:	ldrb	w5, [x6, #1]
  4182b4:	lsl	w5, w5, #16
  4182b8:	add	w0, w5, w0, lsl #24
  4182bc:	ldrb	w5, [x6, #2]
  4182c0:	add	w0, w0, w5, lsl #8
  4182c4:	mov	x5, #0x3                   	// #3
  4182c8:	ldrb	w5, [x6, x5]
  4182cc:	add	w5, w5, w0
  4182d0:	sub	w0, w5, #0xd, lsl #12
  4182d4:	sub	w0, w0, #0x800
  4182d8:	cmp	w0, #0x7ff
  4182dc:	mov	w0, #0x54                  	// #84
  4182e0:	mov	w6, #0x7ffffffe            	// #2147483646
  4182e4:	ccmp	w5, w6, #0x2, hi  // hi = pmore
  4182e8:	b.hi	418424 <nftw@plt+0x158a4>  // b.pmore
  4182ec:	sub	sp, sp, #0x10
  4182f0:	ldr	x8, [x3]
  4182f4:	cmp	w5, #0x7f
  4182f8:	b.hi	418374 <nftw@plt+0x157f4>  // b.pmore
  4182fc:	strb	w5, [sp, #13]
  418300:	ldr	x0, [x4]
  418304:	cbz	x0, 4183fc <nftw@plt+0x1587c>
  418308:	add	x7, sp, #0xd
  41830c:	mov	x6, #0x1                   	// #1
  418310:	mov	x10, x7
  418314:	add	x5, sp, #0xe
  418318:	sub	x5, x5, x7
  41831c:	mov	x0, #0x0                   	// #0
  418320:	ldrb	w9, [x7, x0]
  418324:	strb	w9, [x8, x0]
  418328:	add	x0, x0, #0x1
  41832c:	cmp	x5, x0
  418330:	b.ne	418320 <nftw@plt+0x157a0>  // b.any
  418334:	add	x0, sp, #0xe
  418338:	sub	x0, x0, x10
  41833c:	add	x8, x8, x0
  418340:	ldr	x0, [x4]
  418344:	sub	x6, x0, x6
  418348:	str	x6, [x4]
  41834c:	str	x8, [x3]
  418350:	ldr	x0, [x1]
  418354:	add	x0, x0, #0x4
  418358:	str	x0, [x1]
  41835c:	ldr	x0, [x2]
  418360:	sub	x0, x0, #0x4
  418364:	str	x0, [x2]
  418368:	mov	w0, #0x0                   	// #0
  41836c:	add	sp, sp, #0x10
  418370:	ret
  418374:	add	x7, sp, #0xe
  418378:	mov	x6, #0x1                   	// #1
  41837c:	adrp	x9, 460000 <_obstack_memory_used@@Base+0x159fc>
  418380:	add	x9, x9, #0x798
  418384:	add	x9, x9, #0x10
  418388:	mov	x10, x7
  41838c:	and	w0, w5, #0x3f
  418390:	orr	w0, w0, #0xffffff80
  418394:	strb	w0, [x7, #-1]!
  418398:	lsr	w5, w5, #6
  41839c:	mov	x11, x6
  4183a0:	add	x6, x6, #0x1
  4183a4:	cmp	w5, #0x3e
  4183a8:	b.hi	418388 <nftw@plt+0x15808>  // b.pmore
  4183ac:	add	x0, x9, x6
  4183b0:	ldurb	w0, [x0, #-1]
  4183b4:	tst	w0, w5
  4183b8:	b.ne	418388 <nftw@plt+0x15808>  // b.any
  4183bc:	sub	x7, x10, #0x2
  4183c0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x159fc>
  4183c4:	add	x0, x0, #0x798
  4183c8:	add	x0, x0, #0x18
  4183cc:	ldrb	w0, [x0, x11]
  4183d0:	orr	w5, w5, w0
  4183d4:	sturb	w5, [x10, #-2]
  4183d8:	ldr	x0, [x4]
  4183dc:	cmp	x6, x0
  4183e0:	b.hi	4183fc <nftw@plt+0x1587c>  // b.pmore
  4183e4:	add	x0, sp, #0xe
  4183e8:	cmp	x7, x0
  4183ec:	b.cc	418310 <nftw@plt+0x15790>  // b.lo, b.ul, b.last
  4183f0:	b	418340 <nftw@plt+0x157c0>
  4183f4:	mov	w0, #0x16                  	// #22
  4183f8:	ret
  4183fc:	mov	w0, #0x7                   	// #7
  418400:	b	41836c <nftw@plt+0x157ec>
  418404:	ldrb	w0, [x6, #3]
  418408:	ldrb	w5, [x6, #2]
  41840c:	lsl	w5, w5, #16
  418410:	add	w0, w5, w0, lsl #24
  418414:	ldrb	w5, [x6, #1]
  418418:	add	w0, w0, w5, lsl #8
  41841c:	mov	x5, #0x0                   	// #0
  418420:	b	4182c8 <nftw@plt+0x15748>
  418424:	ret
  418428:	mov	x12, x0
  41842c:	ldr	x8, [x2]
  418430:	mov	w0, #0x16                  	// #22
  418434:	cbz	x8, 41848c <nftw@plt+0x1590c>
  418438:	ldr	x11, [x1]
  41843c:	ldr	x14, [x3]
  418440:	ldrb	w9, [x11]
  418444:	mov	w6, w9
  418448:	mov	x5, #0x2                   	// #2
  41844c:	cmp	w9, #0x7f
  418450:	b.ls	418490 <nftw@plt+0x15910>  // b.plast
  418454:	adrp	x7, 460000 <_obstack_memory_used@@Base+0x159fc>
  418458:	add	x7, x7, #0x798
  41845c:	add	x15, x7, #0x8
  418460:	add	x0, x7, x5
  418464:	ldurb	w10, [x0, #-1]
  418468:	bic	w13, w6, w10
  41846c:	add	x0, x15, x5
  418470:	ldurb	w0, [x0, #-1]
  418474:	cmp	w13, w0
  418478:	b.eq	4184e8 <nftw@plt+0x15968>  // b.none
  41847c:	add	x5, x5, #0x1
  418480:	cmp	x5, #0x7
  418484:	b.ne	418460 <nftw@plt+0x158e0>  // b.any
  418488:	mov	w0, #0x54                  	// #84
  41848c:	ret
  418490:	sub	x0, x8, #0x1
  418494:	str	x0, [x2]
  418498:	ldr	x0, [x1]
  41849c:	add	x0, x0, #0x1
  4184a0:	str	x0, [x1]
  4184a4:	ldr	x0, [x4]
  4184a8:	cmp	x0, #0x1
  4184ac:	b.ls	418648 <nftw@plt+0x15ac8>  // b.plast
  4184b0:	cmp	x12, #0x0
  4184b4:	cset	w0, ne  // ne = any
  4184b8:	strb	w6, [x14, w0, uxtw]
  4184bc:	cset	w0, eq  // eq = none
  4184c0:	lsr	w6, w6, #8
  4184c4:	strb	w6, [x14, w0, uxtw]
  4184c8:	ldr	x0, [x3]
  4184cc:	add	x0, x0, #0x2
  4184d0:	str	x0, [x3]
  4184d4:	ldr	x0, [x4]
  4184d8:	sub	x0, x0, #0x2
  4184dc:	str	x0, [x4]
  4184e0:	mov	w0, #0x0                   	// #0
  4184e4:	b	41848c <nftw@plt+0x1590c>
  4184e8:	mov	w0, #0x16                  	// #22
  4184ec:	cmp	x8, x5
  4184f0:	b.cc	41848c <nftw@plt+0x1590c>  // b.lo, b.ul, b.last
  4184f4:	and	w6, w9, w10
  4184f8:	add	x9, x11, #0x1
  4184fc:	cmp	x5, #0x1
  418500:	b.ls	418630 <nftw@plt+0x15ab0>  // b.plast
  418504:	add	x10, x11, x5
  418508:	ldrb	w7, [x9], #1
  41850c:	and	w0, w7, #0xc0
  418510:	cmp	w0, #0x80
  418514:	b.ne	418678 <nftw@plt+0x15af8>  // b.any
  418518:	and	w7, w7, #0x3f
  41851c:	add	w6, w7, w6, lsl #6
  418520:	cmp	x9, x10
  418524:	b.ne	418508 <nftw@plt+0x15988>  // b.any
  418528:	mov	w0, #0x54                  	// #84
  41852c:	cmp	w6, #0x7f
  418530:	b.ls	41848c <nftw@plt+0x1590c>  // b.plast
  418534:	cmp	w6, #0x7ff
  418538:	mov	w0, #0x54                  	// #84
  41853c:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  418540:	b.hi	41848c <nftw@plt+0x1590c>  // b.pmore
  418544:	mov	w0, #0xffff                	// #65535
  418548:	cmp	w6, w0
  41854c:	mov	w0, #0x54                  	// #84
  418550:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  418554:	b.hi	41848c <nftw@plt+0x1590c>  // b.pmore
  418558:	mov	w0, #0x1fffff              	// #2097151
  41855c:	cmp	w6, w0
  418560:	mov	w0, #0x54                  	// #84
  418564:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  418568:	b.hi	41848c <nftw@plt+0x1590c>  // b.pmore
  41856c:	mov	w0, #0x3ffffff             	// #67108863
  418570:	cmp	w6, w0
  418574:	mov	w0, #0x54                  	// #84
  418578:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  41857c:	b.hi	41848c <nftw@plt+0x1590c>  // b.pmore
  418580:	sub	w0, w6, #0xd, lsl #12
  418584:	sub	w0, w0, #0x800
  418588:	cmp	w0, #0x7ff
  41858c:	mov	w0, #0x54                  	// #84
  418590:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
  418594:	b.lt	41848c <nftw@plt+0x1590c>  // b.tstop
  418598:	str	x10, [x1]
  41859c:	ldr	x0, [x2]
  4185a0:	sub	x5, x0, x5
  4185a4:	str	x5, [x2]
  4185a8:	mov	w0, #0x10ffff              	// #1114111
  4185ac:	cmp	w6, w0
  4185b0:	b.hi	418638 <nftw@plt+0x15ab8>  // b.pmore
  4185b4:	mov	w0, #0xffff                	// #65535
  4185b8:	cmp	w6, w0
  4185bc:	b.ls	4184a4 <nftw@plt+0x15924>  // b.plast
  4185c0:	ldr	x0, [x4]
  4185c4:	cmp	x0, #0x3
  4185c8:	b.ls	418658 <nftw@plt+0x15ad8>  // b.plast
  4185cc:	sub	w0, w6, #0x10, lsl #12
  4185d0:	mov	w1, #0xd800                	// #55296
  4185d4:	add	w0, w1, w0, lsr #10
  4185d8:	and	w6, w6, #0x3ff
  4185dc:	add	w6, w6, #0xd, lsl #12
  4185e0:	add	w6, w6, #0xc00
  4185e4:	cmp	x12, #0x0
  4185e8:	cset	w1, ne  // ne = any
  4185ec:	strb	w0, [x14, w1, uxtw]
  4185f0:	cset	w1, eq  // eq = none
  4185f4:	lsr	w0, w0, #8
  4185f8:	strb	w0, [x14, w1, uxtw]
  4185fc:	cbz	x12, 418668 <nftw@plt+0x15ae8>
  418600:	strb	w6, [x14, #3]
  418604:	lsr	w6, w6, #8
  418608:	mov	x0, #0x2                   	// #2
  41860c:	strb	w6, [x14, x0]
  418610:	ldr	x0, [x3]
  418614:	add	x0, x0, #0x4
  418618:	str	x0, [x3]
  41861c:	ldr	x0, [x4]
  418620:	sub	x0, x0, #0x4
  418624:	str	x0, [x4]
  418628:	mov	w0, #0x0                   	// #0
  41862c:	b	41848c <nftw@plt+0x1590c>
  418630:	mov	x10, x9
  418634:	b	418534 <nftw@plt+0x159b4>
  418638:	str	x11, [x1]
  41863c:	str	x8, [x2]
  418640:	mov	w0, #0x54                  	// #84
  418644:	b	41848c <nftw@plt+0x1590c>
  418648:	str	x11, [x1]
  41864c:	str	x8, [x2]
  418650:	mov	w0, #0x7                   	// #7
  418654:	b	41848c <nftw@plt+0x1590c>
  418658:	str	x11, [x1]
  41865c:	str	x8, [x2]
  418660:	mov	w0, #0x7                   	// #7
  418664:	b	41848c <nftw@plt+0x1590c>
  418668:	strb	w6, [x14, #2]
  41866c:	lsr	w6, w6, #8
  418670:	mov	x0, #0x3                   	// #3
  418674:	b	41860c <nftw@plt+0x15a8c>
  418678:	mov	w0, #0x54                  	// #84
  41867c:	b	41848c <nftw@plt+0x1590c>
  418680:	stp	x29, x30, [sp, #-96]!
  418684:	mov	x29, sp
  418688:	stp	x19, x20, [sp, #16]
  41868c:	stp	x21, x22, [sp, #32]
  418690:	str	x23, [sp, #48]
  418694:	mov	x19, x0
  418698:	ldr	x1, [x0, #1168]
  41869c:	ldr	x21, [x0, #1176]
  4186a0:	ldrb	w22, [x0, #1242]
  4186a4:	ldr	x0, [x0, #1232]
  4186a8:	cmp	x0, #0x1f
  4186ac:	b.ls	4187f8 <nftw@plt+0x15c78>  // b.plast
  4186b0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4186b4:	add	x2, x0, #0xc8
  4186b8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4186bc:	add	x0, x0, #0xb8
  4186c0:	cmp	w22, #0x0
  4186c4:	csel	x0, x0, x2, ne  // ne = any
  4186c8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4186cc:	add	x2, x2, #0x1e0
  4186d0:	cmp	x1, #0x0
  4186d4:	csel	x1, x2, x1, eq  // eq = none
  4186d8:	cmp	x21, #0x0
  4186dc:	csel	x21, x21, x0, ne  // ne = any
  4186e0:	add	x23, x19, #0x208
  4186e4:	mov	x20, x2
  4186e8:	add	x8, sp, #0x40
  4186ec:	mov	x0, x19
  4186f0:	bl	417a1c <nftw@plt+0x14e9c>
  4186f4:	ldp	x2, x3, [sp, #64]
  4186f8:	stp	x2, x3, [x23]
  4186fc:	ldr	x1, [sp, #80]
  418700:	str	x1, [x23, #16]
  418704:	ldr	x0, [x19, #1216]
  418708:	str	w0, [x19, #536]
  41870c:	add	x23, x19, #0x220
  418710:	add	x8, sp, #0x40
  418714:	mov	x2, x20
  418718:	mov	x1, x20
  41871c:	mov	x0, x19
  418720:	bl	417a1c <nftw@plt+0x14e9c>
  418724:	ldp	x2, x3, [sp, #64]
  418728:	stp	x2, x3, [x23]
  41872c:	ldr	x1, [sp, #80]
  418730:	str	x1, [x23, #16]
  418734:	ldr	x0, [x19, #1216]
  418738:	str	w0, [x19, #560]
  41873c:	cbnz	w22, 418828 <nftw@plt+0x15ca8>
  418740:	add	x20, x19, #0x238
  418744:	add	x8, sp, #0x40
  418748:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  41874c:	add	x2, x2, #0x1e0
  418750:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  418754:	add	x1, x1, #0xd8
  418758:	mov	x0, x19
  41875c:	bl	417a1c <nftw@plt+0x14e9c>
  418760:	ldp	x2, x3, [sp, #64]
  418764:	stp	x2, x3, [x20]
  418768:	ldr	x1, [sp, #80]
  41876c:	str	x1, [x20, #16]
  418770:	mov	w0, #0x10                  	// #16
  418774:	str	w0, [x19, #584]
  418778:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41877c:	add	x1, x1, #0xc8
  418780:	add	x22, x19, #0x250
  418784:	adrp	x20, 45d000 <_obstack_memory_used@@Base+0x129fc>
  418788:	add	x20, x20, #0x1e0
  41878c:	add	x8, sp, #0x40
  418790:	mov	x2, x20
  418794:	mov	x0, x19
  418798:	bl	417a1c <nftw@plt+0x14e9c>
  41879c:	ldp	x0, x1, [sp, #64]
  4187a0:	stp	x0, x1, [x22]
  4187a4:	ldr	x0, [sp, #80]
  4187a8:	str	x0, [x19, #608]
  4187ac:	mov	w0, #0x20                  	// #32
  4187b0:	str	w0, [x19, #608]
  4187b4:	add	x22, x19, #0x268
  4187b8:	add	x8, sp, #0x40
  4187bc:	mov	x2, x20
  4187c0:	mov	x1, x21
  4187c4:	mov	x0, x19
  4187c8:	bl	417a1c <nftw@plt+0x14e9c>
  4187cc:	ldp	x0, x1, [sp, #64]
  4187d0:	stp	x0, x1, [x22]
  4187d4:	ldr	x0, [sp, #80]
  4187d8:	str	x0, [x19, #632]
  4187dc:	ldr	x0, [x19, #1232]
  4187e0:	str	w0, [x19, #632]
  4187e4:	ldp	x19, x20, [sp, #16]
  4187e8:	ldp	x21, x22, [sp, #32]
  4187ec:	ldr	x23, [sp, #48]
  4187f0:	ldp	x29, x30, [sp], #96
  4187f4:	ret
  4187f8:	cmp	x0, #0xf
  4187fc:	b.ls	41881c <nftw@plt+0x15c9c>  // b.plast
  418800:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  418804:	add	x2, x0, #0xd8
  418808:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41880c:	add	x0, x0, #0xa8
  418810:	cmp	w22, #0x0
  418814:	csel	x0, x0, x2, ne  // ne = any
  418818:	b	4186c8 <nftw@plt+0x15b48>
  41881c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  418820:	add	x0, x0, #0x1e0
  418824:	b	4186c8 <nftw@plt+0x15b48>
  418828:	add	x20, x19, #0x238
  41882c:	add	x8, sp, #0x40
  418830:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x129fc>
  418834:	add	x2, x2, #0x1e0
  418838:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41883c:	add	x1, x1, #0xa8
  418840:	mov	x0, x19
  418844:	bl	417a1c <nftw@plt+0x14e9c>
  418848:	ldp	x2, x3, [sp, #64]
  41884c:	stp	x2, x3, [x20]
  418850:	ldr	x1, [sp, #80]
  418854:	str	x1, [x20, #16]
  418858:	mov	w0, #0x10                  	// #16
  41885c:	str	w0, [x19, #584]
  418860:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  418864:	add	x1, x1, #0xb8
  418868:	b	418780 <nftw@plt+0x15c00>
  41886c:	stp	x29, x30, [sp, #-32]!
  418870:	mov	x29, sp
  418874:	str	x19, [sp, #16]
  418878:	mov	x19, x0
  41887c:	ldr	x1, [x0, #520]
  418880:	adrp	x0, 417000 <nftw@plt+0x14480>
  418884:	add	x0, x0, #0xbc4
  418888:	cmp	x1, x0
  41888c:	b.eq	4188ec <nftw@plt+0x15d6c>  // b.none
  418890:	ldr	x1, [x19, #544]
  418894:	adrp	x0, 417000 <nftw@plt+0x14480>
  418898:	add	x0, x0, #0xbc4
  41889c:	cmp	x1, x0
  4188a0:	b.eq	4188f8 <nftw@plt+0x15d78>  // b.none
  4188a4:	ldr	x1, [x19, #568]
  4188a8:	adrp	x0, 417000 <nftw@plt+0x14480>
  4188ac:	add	x0, x0, #0xbc4
  4188b0:	cmp	x1, x0
  4188b4:	b.eq	418904 <nftw@plt+0x15d84>  // b.none
  4188b8:	ldr	x1, [x19, #592]
  4188bc:	adrp	x0, 417000 <nftw@plt+0x14480>
  4188c0:	add	x0, x0, #0xbc4
  4188c4:	cmp	x1, x0
  4188c8:	b.eq	418910 <nftw@plt+0x15d90>  // b.none
  4188cc:	ldr	x1, [x19, #616]
  4188d0:	adrp	x0, 417000 <nftw@plt+0x14480>
  4188d4:	add	x0, x0, #0xbc4
  4188d8:	cmp	x1, x0
  4188dc:	b.eq	41891c <nftw@plt+0x15d9c>  // b.none
  4188e0:	ldr	x19, [sp, #16]
  4188e4:	ldp	x29, x30, [sp], #32
  4188e8:	ret
  4188ec:	ldr	x0, [x19, #528]
  4188f0:	bl	402560 <iconv_close@plt>
  4188f4:	b	418890 <nftw@plt+0x15d10>
  4188f8:	ldr	x0, [x19, #552]
  4188fc:	bl	402560 <iconv_close@plt>
  418900:	b	4188a4 <nftw@plt+0x15d24>
  418904:	ldr	x0, [x19, #576]
  418908:	bl	402560 <iconv_close@plt>
  41890c:	b	4188b8 <nftw@plt+0x15d38>
  418910:	ldr	x0, [x19, #600]
  418914:	bl	402560 <iconv_close@plt>
  418918:	b	4188cc <nftw@plt+0x15d4c>
  41891c:	ldr	x0, [x19, #624]
  418920:	bl	402560 <iconv_close@plt>
  418924:	b	4188e0 <nftw@plt+0x15d60>
  418928:	stp	x29, x30, [sp, #-80]!
  41892c:	mov	x29, sp
  418930:	stp	x19, x20, [sp, #16]
  418934:	mov	x20, x0
  418938:	mov	w19, w1
  41893c:	cmp	w1, #0x7e
  418940:	b.hi	4189b4 <nftw@plt+0x15e34>  // b.pmore
  418944:	str	x21, [sp, #32]
  418948:	strb	w1, [sp, #72]
  41894c:	mov	x21, #0x1                   	// #1
  418950:	str	x21, [sp, #56]
  418954:	mov	x0, x21
  418958:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41895c:	str	x0, [sp, #48]
  418960:	str	xzr, [sp, #64]
  418964:	ldr	x4, [x20, #520]
  418968:	add	x3, sp, #0x30
  41896c:	mov	x2, x21
  418970:	add	x1, sp, #0x48
  418974:	ldr	x0, [x20, #528]
  418978:	blr	x4
  41897c:	and	w0, w0, #0xff
  418980:	cbz	w0, 4189dc <nftw@plt+0x15e5c>
  418984:	ldr	x0, [sp, #64]
  418988:	cmp	x0, #0x1
  41898c:	b.eq	4189fc <nftw@plt+0x15e7c>  // b.none
  418990:	mov	w3, w19
  418994:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  418998:	add	x2, x2, #0x150
  41899c:	mov	w1, #0x4                   	// #4
  4189a0:	mov	x0, x20
  4189a4:	bl	41f990 <nftw@plt+0x1ce10>
  4189a8:	mov	w19, #0x0                   	// #0
  4189ac:	ldr	x21, [sp, #32]
  4189b0:	b	4189cc <nftw@plt+0x15e4c>
  4189b4:	mov	w3, w1
  4189b8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4189bc:	add	x2, x2, #0xe8
  4189c0:	mov	w1, #0x4                   	// #4
  4189c4:	bl	41f990 <nftw@plt+0x1ce10>
  4189c8:	mov	w19, #0x0                   	// #0
  4189cc:	mov	w0, w19
  4189d0:	ldp	x19, x20, [sp, #16]
  4189d4:	ldp	x29, x30, [sp], #80
  4189d8:	ret
  4189dc:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4189e0:	add	x2, x2, #0x128
  4189e4:	mov	w1, #0x4                   	// #4
  4189e8:	mov	x0, x20
  4189ec:	bl	41fe9c <nftw@plt+0x1d31c>
  4189f0:	mov	w19, #0x0                   	// #0
  4189f4:	ldr	x21, [sp, #32]
  4189f8:	b	4189cc <nftw@plt+0x15e4c>
  4189fc:	ldr	x0, [sp, #48]
  418a00:	ldrb	w19, [x0]
  418a04:	bl	402910 <free@plt>
  418a08:	ldr	x21, [sp, #32]
  418a0c:	b	4189cc <nftw@plt+0x15e4c>
  418a10:	stp	x29, x30, [sp, #-32]!
  418a14:	mov	x29, sp
  418a18:	str	x19, [sp, #16]
  418a1c:	mov	x19, x0
  418a20:	str	xzr, [x0]
  418a24:	str	wzr, [x0, #8]
  418a28:	mov	w0, #0x8                   	// #8
  418a2c:	str	w0, [x19, #12]
  418a30:	mov	x0, #0x40                  	// #64
  418a34:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  418a38:	str	x0, [x19]
  418a3c:	ldr	x19, [sp, #16]
  418a40:	ldp	x29, x30, [sp], #32
  418a44:	ret
  418a48:	stp	x29, x30, [sp, #-16]!
  418a4c:	mov	x29, sp
  418a50:	ldr	x0, [x0]
  418a54:	bl	402910 <free@plt>
  418a58:	ldp	x29, x30, [sp], #16
  418a5c:	ret
  418a60:	stp	x29, x30, [sp, #-32]!
  418a64:	mov	x29, sp
  418a68:	stp	x19, x20, [sp, #16]
  418a6c:	mov	x19, x0
  418a70:	mov	x20, x1
  418a74:	ldr	w1, [x0, #12]
  418a78:	ldr	w0, [x0, #8]
  418a7c:	cmp	w0, w1
  418a80:	b.ge	418aa4 <nftw@plt+0x15f24>  // b.tcont
  418a84:	ldr	x1, [x19]
  418a88:	ldr	w0, [x19, #8]
  418a8c:	add	w2, w0, #0x1
  418a90:	str	w2, [x19, #8]
  418a94:	str	x20, [x1, w0, sxtw #3]
  418a98:	ldp	x19, x20, [sp, #16]
  418a9c:	ldp	x29, x30, [sp], #32
  418aa0:	ret
  418aa4:	lsl	w1, w1, #1
  418aa8:	str	w1, [x19, #12]
  418aac:	sbfiz	x1, x1, #3, #32
  418ab0:	ldr	x0, [x19]
  418ab4:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  418ab8:	str	x0, [x19]
  418abc:	b	418a84 <nftw@plt+0x15f04>
  418ac0:	stp	x29, x30, [sp, #-64]!
  418ac4:	mov	x29, sp
  418ac8:	stp	x19, x20, [sp, #16]
  418acc:	str	x21, [sp, #32]
  418ad0:	mov	x21, x0
  418ad4:	add	x0, x2, #0x10
  418ad8:	and	x0, x0, #0xfffffffffffffff0
  418adc:	sub	sp, sp, x0
  418ae0:	mov	x20, sp
  418ae4:	cbz	x2, 418c70 <nftw@plt+0x160f0>
  418ae8:	mov	x19, x20
  418aec:	mov	x3, #0x0                   	// #0
  418af0:	mov	w13, #0x4                   	// #4
  418af4:	mov	w12, #0x8                   	// #8
  418af8:	add	x0, x29, #0x38
  418afc:	add	x11, x29, #0x3e
  418b00:	add	x15, x0, #0x5
  418b04:	adrp	x7, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  418b08:	add	x7, x7, #0xe68
  418b0c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  418b10:	add	x8, x8, #0xb50
  418b14:	adrp	x9, 460000 <_obstack_memory_used@@Base+0x159fc>
  418b18:	add	x9, x9, #0x798
  418b1c:	add	x10, x9, #0x10
  418b20:	add	x9, x9, #0x18
  418b24:	mov	w14, #0x24                  	// #36
  418b28:	b	418c54 <nftw@plt+0x160d4>
  418b2c:	add	x4, x3, #0x1
  418b30:	ldrb	w0, [x1, x4]
  418b34:	cmp	w0, #0x75
  418b38:	csel	w6, w13, w12, eq  // eq = none
  418b3c:	add	x0, x3, #0x2
  418b40:	cmp	x2, x0
  418b44:	b.ls	418c04 <nftw@plt+0x16084>  // b.plast
  418b48:	mov	x3, x0
  418b4c:	mov	w4, #0x0                   	// #0
  418b50:	add	w6, w6, w0
  418b54:	ldrb	w5, [x1, x3]
  418b58:	ldrh	w0, [x7, w5, sxtw #1]
  418b5c:	tbz	w0, #8, 418b78 <nftw@plt+0x15ff8>
  418b60:	ldrb	w0, [x8, w5, sxtw]
  418b64:	add	w4, w0, w4, lsl #4
  418b68:	add	x3, x3, #0x1
  418b6c:	cmp	w6, w3
  418b70:	ccmp	x2, x3, #0x0, ne  // ne = any
  418b74:	b.hi	418b54 <nftw@plt+0x15fd4>  // b.pmore
  418b78:	sub	x3, x3, #0x1
  418b7c:	cmp	w4, #0x24
  418b80:	b.eq	418bf4 <nftw@plt+0x16074>  // b.none
  418b84:	add	x6, x29, #0x3e
  418b88:	mov	x5, #0x1                   	// #1
  418b8c:	cmp	w4, #0x7f
  418b90:	b.ls	418c0c <nftw@plt+0x1608c>  // b.plast
  418b94:	mov	x16, x6
  418b98:	and	w0, w4, #0x3f
  418b9c:	orr	w0, w0, #0xffffff80
  418ba0:	strb	w0, [x6, #-1]!
  418ba4:	lsr	w4, w4, #6
  418ba8:	mov	x0, x5
  418bac:	add	x5, x5, #0x1
  418bb0:	cmp	w4, #0x3e
  418bb4:	b.hi	418b94 <nftw@plt+0x16014>  // b.pmore
  418bb8:	add	x17, x10, x5
  418bbc:	ldurb	w17, [x17, #-1]
  418bc0:	tst	w17, w4
  418bc4:	b.ne	418b94 <nftw@plt+0x16014>  // b.any
  418bc8:	sub	x6, x16, #0x2
  418bcc:	ldrb	w0, [x9, x0]
  418bd0:	orr	w4, w4, w0
  418bd4:	sturb	w4, [x16, #-2]
  418bd8:	sub	x0, x19, x20
  418bdc:	sub	x0, x2, x0
  418be0:	cmp	x0, x5
  418be4:	b.cc	418c78 <nftw@plt+0x160f8>  // b.lo, b.ul, b.last
  418be8:	cmp	x6, x11
  418bec:	b.cc	418c20 <nftw@plt+0x160a0>  // b.lo, b.ul, b.last
  418bf0:	b	418c48 <nftw@plt+0x160c8>
  418bf4:	mov	x4, x19
  418bf8:	strb	w14, [x4], #1
  418bfc:	mov	x19, x4
  418c00:	b	418c48 <nftw@plt+0x160c8>
  418c04:	mov	x3, x4
  418c08:	mov	w4, #0x0                   	// #0
  418c0c:	strb	w4, [x29, #61]
  418c10:	sub	x0, x19, x20
  418c14:	cmp	x2, x0
  418c18:	b.eq	418c78 <nftw@plt+0x160f8>  // b.none
  418c1c:	mov	x6, x15
  418c20:	mov	x16, x6
  418c24:	sub	x5, x11, x6
  418c28:	mov	x4, #0x0                   	// #0
  418c2c:	ldrb	w0, [x6, x4]
  418c30:	strb	w0, [x19, x4]
  418c34:	add	x4, x4, #0x1
  418c38:	cmp	x4, x5
  418c3c:	b.ne	418c2c <nftw@plt+0x160ac>  // b.any
  418c40:	sub	x0, x11, x16
  418c44:	add	x19, x19, x0
  418c48:	add	x3, x3, #0x1
  418c4c:	cmp	x2, x3
  418c50:	b.ls	418c98 <nftw@plt+0x16118>  // b.plast
  418c54:	ldrb	w0, [x1, x3]
  418c58:	cmp	w0, #0x5c
  418c5c:	b.eq	418b2c <nftw@plt+0x15fac>  // b.none
  418c60:	mov	x4, x19
  418c64:	strb	w0, [x4], #1
  418c68:	mov	x19, x4
  418c6c:	b	418c48 <nftw@plt+0x160c8>
  418c70:	mov	x19, x20
  418c74:	b	418c98 <nftw@plt+0x16118>
  418c78:	bl	402aa0 <__errno_location@plt>
  418c7c:	mov	w1, #0x7                   	// #7
  418c80:	str	w1, [x0]
  418c84:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  418c88:	add	x2, x2, #0x190
  418c8c:	mov	w1, #0x3                   	// #3
  418c90:	mov	x0, x21
  418c94:	bl	41fe9c <nftw@plt+0x1d31c>
  418c98:	mov	w3, #0x1                   	// #1
  418c9c:	sub	x2, x19, x20
  418ca0:	mov	x1, x20
  418ca4:	ldr	x0, [x21, #1088]
  418ca8:	bl	432d4c <nftw@plt+0x301cc>
  418cac:	mov	sp, x29
  418cb0:	ldp	x19, x20, [sp, #16]
  418cb4:	ldr	x21, [sp, #32]
  418cb8:	ldp	x29, x30, [sp], #64
  418cbc:	ret
  418cc0:	stp	x29, x30, [sp, #-128]!
  418cc4:	mov	x29, sp
  418cc8:	stp	x19, x20, [sp, #16]
  418ccc:	stp	x21, x22, [sp, #32]
  418cd0:	stp	x23, x24, [sp, #48]
  418cd4:	str	x25, [sp, #64]
  418cd8:	mov	x24, x0
  418cdc:	mov	x20, x2
  418ce0:	mov	x23, x3
  418ce4:	mov	x19, x4
  418ce8:	mov	x22, x5
  418cec:	mov	x21, x6
  418cf0:	add	x8, sp, #0x68
  418cf4:	mov	x2, x1
  418cf8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  418cfc:	add	x1, x1, #0x1e0
  418d00:	bl	417a1c <nftw@plt+0x14e9c>
  418d04:	ldr	x25, [sp, #104]
  418d08:	adrp	x1, 417000 <nftw@plt+0x14480>
  418d0c:	add	x1, x1, #0xf60
  418d10:	cmp	x25, x1
  418d14:	b.eq	418d78 <nftw@plt+0x161f8>  // b.none
  418d18:	ldr	x23, [sp, #112]
  418d1c:	cmp	x19, #0x10, lsl #12
  418d20:	mov	x0, #0x10000               	// #65536
  418d24:	csel	x0, x19, x0, cs  // cs = hs, nlast
  418d28:	str	x0, [sp, #88]
  418d2c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  418d30:	str	x0, [sp, #80]
  418d34:	str	xzr, [sp, #96]
  418d38:	add	x3, sp, #0x50
  418d3c:	mov	x2, x19
  418d40:	mov	x1, x20
  418d44:	mov	x0, x23
  418d48:	blr	x25
  418d4c:	and	w0, w0, #0xff
  418d50:	cbz	w0, 418e2c <nftw@plt+0x162ac>
  418d54:	mov	x0, x20
  418d58:	bl	402910 <free@plt>
  418d5c:	adrp	x0, 417000 <nftw@plt+0x14480>
  418d60:	add	x0, x0, #0xbc4
  418d64:	cmp	x25, x0
  418d68:	b.ne	418d84 <nftw@plt+0x16204>  // b.any
  418d6c:	mov	x0, x23
  418d70:	bl	402560 <iconv_close@plt>
  418d74:	b	418d84 <nftw@plt+0x16204>
  418d78:	str	x20, [sp, #80]
  418d7c:	str	x23, [sp, #88]
  418d80:	str	x19, [sp, #96]
  418d84:	ldr	x1, [sp, #96]
  418d88:	ldr	x0, [sp, #88]
  418d8c:	add	x2, x1, #0x1, lsl #12
  418d90:	cmp	x2, x0
  418d94:	b.cc	418da4 <nftw@plt+0x16224>  // b.lo, b.ul, b.last
  418d98:	add	x2, x1, #0x10
  418d9c:	cmp	x0, x2
  418da0:	b.cs	418db4 <nftw@plt+0x16234>  // b.hs, b.nlast
  418da4:	add	x1, x1, #0x10
  418da8:	ldr	x0, [sp, #80]
  418dac:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  418db0:	str	x0, [sp, #80]
  418db4:	ldr	x0, [sp, #80]
  418db8:	ldr	x1, [sp, #96]
  418dbc:	add	x0, x0, x1
  418dc0:	stp	xzr, xzr, [x0]
  418dc4:	ldr	x0, [sp, #96]
  418dc8:	cbz	x0, 418de0 <nftw@plt+0x16260>
  418dcc:	ldr	x1, [sp, #80]
  418dd0:	add	x2, x1, x0
  418dd4:	ldurb	w2, [x2, #-1]
  418dd8:	cmp	w2, #0xd
  418ddc:	b.eq	418e50 <nftw@plt+0x162d0>  // b.none
  418de0:	ldr	x1, [sp, #80]
  418de4:	mov	w2, #0xa                   	// #10
  418de8:	strb	w2, [x1, x0]
  418dec:	ldr	x1, [sp, #80]
  418df0:	ldr	x2, [sp, #96]
  418df4:	str	x2, [x21]
  418df8:	mov	x0, x1
  418dfc:	cmp	x2, #0x2
  418e00:	b.ls	418e10 <nftw@plt+0x16290>  // b.plast
  418e04:	ldrb	w3, [x1]
  418e08:	cmp	w3, #0xef
  418e0c:	b.eq	418e58 <nftw@plt+0x162d8>  // b.none
  418e10:	str	x1, [x22]
  418e14:	ldp	x19, x20, [sp, #16]
  418e18:	ldp	x21, x22, [sp, #32]
  418e1c:	ldp	x23, x24, [sp, #48]
  418e20:	ldr	x25, [sp, #64]
  418e24:	ldp	x29, x30, [sp], #128
  418e28:	ret
  418e2c:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x129fc>
  418e30:	add	x4, x4, #0x1e0
  418e34:	ldr	x3, [x24, #1184]
  418e38:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  418e3c:	add	x2, x2, #0x1b8
  418e40:	mov	w1, #0x3                   	// #3
  418e44:	mov	x0, x24
  418e48:	bl	41f990 <nftw@plt+0x1ce10>
  418e4c:	b	418d54 <nftw@plt+0x161d4>
  418e50:	strb	w2, [x1, x0]
  418e54:	b	418dec <nftw@plt+0x1626c>
  418e58:	ldrb	w3, [x1, #1]
  418e5c:	cmp	w3, #0xbb
  418e60:	b.ne	418e10 <nftw@plt+0x16290>  // b.any
  418e64:	ldrb	w3, [x1, #2]
  418e68:	cmp	w3, #0xbf
  418e6c:	b.ne	418e10 <nftw@plt+0x16290>  // b.any
  418e70:	sub	x2, x2, #0x3
  418e74:	str	x2, [x21]
  418e78:	add	x0, x1, #0x3
  418e7c:	b	418e10 <nftw@plt+0x16290>
  418e80:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x129fc>
  418e84:	add	x0, x0, #0x1e0
  418e88:	ret
  418e8c:	stp	x29, x30, [sp, #-32]!
  418e90:	mov	x29, sp
  418e94:	stp	x19, x20, [sp, #16]
  418e98:	mov	x20, x0
  418e9c:	mov	x19, x2
  418ea0:	str	x2, [x0, #8]
  418ea4:	mov	x0, x2
  418ea8:	bl	42bef8 <nftw@plt+0x29378>
  418eac:	mov	x3, #0x0                   	// #0
  418eb0:	mov	w2, #0x1                   	// #1
  418eb4:	mov	w1, w0
  418eb8:	mov	x0, x19
  418ebc:	bl	42c270 <nftw@plt+0x296f0>
  418ec0:	mov	w1, w0
  418ec4:	str	w0, [x20]
  418ec8:	mov	x0, x19
  418ecc:	bl	42bb70 <nftw@plt+0x28ff0>
  418ed0:	ldrb	w1, [x0, #7]
  418ed4:	mov	w0, #0x1                   	// #1
  418ed8:	lsl	w0, w0, w1
  418edc:	str	w0, [x20, #4]
  418ee0:	ldp	x19, x20, [sp, #16]
  418ee4:	ldp	x29, x30, [sp], #32
  418ee8:	ret
  418eec:	mov	x1, x0
  418ef0:	ldr	w0, [x0]
  418ef4:	mov	w2, #0x60000000            	// #1610612736
  418ef8:	cmp	w0, w2
  418efc:	b.hi	418f0c <nftw@plt+0x1638c>  // b.pmore
  418f00:	ldr	w2, [x1, #4]
  418f04:	add	w2, w2, w0
  418f08:	str	w2, [x1]
  418f0c:	bfi	x0, x0, #32, #32
  418f10:	ret
  418f14:	cmp	w1, #0x0
  418f18:	b.le	418f6c <nftw@plt+0x163ec>
  418f1c:	stp	x29, x30, [sp, #-48]!
  418f20:	mov	x29, sp
  418f24:	stp	x19, x20, [sp, #16]
  418f28:	stp	x21, x22, [sp, #32]
  418f2c:	mov	x21, x0
  418f30:	mov	w20, w1
  418f34:	mov	x22, x2
  418f38:	mov	w19, #0x0                   	// #0
  418f3c:	mov	x0, x22
  418f40:	bl	418eec <nftw@plt+0x1636c>
  418f44:	mov	x1, x0
  418f48:	mov	x0, x21
  418f4c:	bl	418a60 <nftw@plt+0x15ee0>
  418f50:	add	w19, w19, #0x1
  418f54:	cmp	w20, w19
  418f58:	b.ne	418f3c <nftw@plt+0x163bc>  // b.any
  418f5c:	ldp	x19, x20, [sp, #16]
  418f60:	ldp	x21, x22, [sp, #32]
  418f64:	ldp	x29, x30, [sp], #48
  418f68:	ret
  418f6c:	ret
  418f70:	stp	x29, x30, [sp, #-144]!
  418f74:	mov	x29, sp
  418f78:	stp	x19, x20, [sp, #16]
  418f7c:	stp	x21, x22, [sp, #32]
  418f80:	stp	x23, x24, [sp, #48]
  418f84:	stp	x25, x26, [sp, #64]
  418f88:	stp	x27, x28, [sp, #80]
  418f8c:	mov	x28, x0
  418f90:	str	x1, [sp, #128]
  418f94:	mov	x27, x2
  418f98:	str	w3, [sp, #116]
  418f9c:	str	x4, [sp, #136]
  418fa0:	str	x5, [sp, #120]
  418fa4:	mov	x24, x6
  418fa8:	mov	x23, x7
  418fac:	ldr	x0, [x1]
  418fb0:	str	x0, [sp, #104]
  418fb4:	ldrb	w0, [x28, #1120]
  418fb8:	cbnz	w0, 418fd0 <nftw@plt+0x16450>
  418fbc:	ldrb	w0, [x28, #1152]
  418fc0:	cbz	w0, 419020 <nftw@plt+0x164a0>
  418fc4:	ldrsb	w0, [x28, #1198]
  418fc8:	cmp	w0, #0x0
  418fcc:	b.gt	419038 <nftw@plt+0x164b8>
  418fd0:	ldrb	w0, [x28, #1138]
  418fd4:	cmp	w0, #0x0
  418fd8:	ldr	w0, [sp, #116]
  418fdc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  418fe0:	b.eq	419050 <nftw@plt+0x164d0>  // b.none
  418fe4:	ldr	x0, [sp, #104]
  418fe8:	ldurb	w0, [x0, #-1]
  418fec:	mov	w21, #0x4                   	// #4
  418ff0:	cmp	w0, #0x75
  418ff4:	b.eq	419004 <nftw@plt+0x16484>  // b.none
  418ff8:	mov	w21, #0x8                   	// #8
  418ffc:	cmp	w0, #0x55
  419000:	b.ne	419070 <nftw@plt+0x164f0>  // b.any
  419004:	ldr	x19, [sp, #104]
  419008:	mov	w20, #0x0                   	// #0
  41900c:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  419010:	add	x25, x25, #0xe68
  419014:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  419018:	add	x26, x26, #0xb50
  41901c:	b	4190b8 <nftw@plt+0x16538>
  419020:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  419024:	add	x2, x2, #0x1d8
  419028:	mov	w1, #0x0                   	// #0
  41902c:	mov	x0, x28
  419030:	bl	41f990 <nftw@plt+0x1ce10>
  419034:	b	418fe4 <nftw@plt+0x16464>
  419038:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41903c:	add	x2, x2, #0x210
  419040:	mov	w1, #0x0                   	// #0
  419044:	mov	x0, x28
  419048:	bl	41f990 <nftw@plt+0x1ce10>
  41904c:	b	418fe4 <nftw@plt+0x16464>
  419050:	ldr	x0, [sp, #104]
  419054:	ldurb	w3, [x0, #-1]
  419058:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41905c:	add	x2, x2, #0x250
  419060:	mov	w1, #0x6                   	// #6
  419064:	mov	x0, x28
  419068:	bl	41fa08 <nftw@plt+0x1ce88>
  41906c:	b	418fe4 <nftw@plt+0x16464>
  419070:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  419074:	add	x2, x2, #0x288
  419078:	mov	w1, #0x4                   	// #4
  41907c:	mov	x0, x28
  419080:	bl	41f990 <nftw@plt+0x1ce10>
  419084:	mov	w21, #0x4                   	// #4
  419088:	b	419004 <nftw@plt+0x16484>
  41908c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  419090:	add	x2, x2, #0x2a8
  419094:	mov	w1, #0x434                 	// #1076
  419098:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41909c:	add	x0, x0, #0x2b8
  4190a0:	bl	408d8c <nftw@plt+0x620c>
  4190a4:	ldrb	w0, [x26, w22, sxtw]
  4190a8:	add	w20, w0, w20, lsl #4
  4190ac:	subs	w21, w21, #0x1
  4190b0:	ccmp	x19, x27, #0x2, ne  // ne = any
  4190b4:	b.cs	4190e8 <nftw@plt+0x16568>  // b.hs, b.nlast
  4190b8:	ldrb	w22, [x19]
  4190bc:	mov	w0, w22
  4190c0:	ldrh	w0, [x25, x0, lsl #1]
  4190c4:	tbz	w0, #8, 4190e8 <nftw@plt+0x16568>
  4190c8:	add	x19, x19, #0x1
  4190cc:	cbz	x23, 4190a4 <nftw@plt+0x16524>
  4190d0:	cbz	x24, 41908c <nftw@plt+0x1650c>
  4190d4:	mov	x0, x23
  4190d8:	bl	418eec <nftw@plt+0x1636c>
  4190dc:	lsr	x0, x0, #32
  4190e0:	str	w0, [x24, #4]
  4190e4:	b	4190a4 <nftw@plt+0x16524>
  4190e8:	ldr	w0, [sp, #116]
  4190ec:	cmp	w0, #0x0
  4190f0:	cset	w0, ne  // ne = any
  4190f4:	cmp	w21, #0x0
  4190f8:	csel	w2, w0, wzr, ne  // ne = any
  4190fc:	cbnz	w2, 419178 <nftw@plt+0x165f8>
  419100:	ldr	x1, [sp, #104]
  419104:	sub	x22, x1, #0x2
  419108:	ldr	x1, [sp, #128]
  41910c:	str	x19, [x1]
  419110:	cbnz	w21, 419188 <nftw@plt+0x16608>
  419114:	cmp	w20, #0x9f
  419118:	b.hi	4191ac <nftw@plt+0x1662c>  // b.pmore
  41911c:	ldrb	w1, [x28, #1120]
  419120:	cbnz	w1, 419138 <nftw@plt+0x165b8>
  419124:	and	w1, w20, #0xffffffdf
  419128:	cmp	w1, #0x40
  41912c:	mov	w1, #0x24                  	// #36
  419130:	ccmp	w20, w1, #0x4, ne  // ne = any
  419134:	b.ne	4191b0 <nftw@plt+0x16630>  // b.any
  419138:	cmp	w20, #0x24
  41913c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  419140:	b.ne	4191f8 <nftw@plt+0x16678>  // b.any
  419144:	ldr	w0, [sp, #116]
  419148:	cbz	w0, 4191d0 <nftw@plt+0x16650>
  41914c:	mov	w0, #0x10ffff              	// #1114111
  419150:	cmp	w20, w0
  419154:	b.ls	419240 <nftw@plt+0x166c0>  // b.plast
  419158:	mov	x4, x22
  41915c:	sub	w3, w19, w22
  419160:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  419164:	add	x2, x2, #0x3b0
  419168:	mov	w1, #0x3                   	// #3
  41916c:	mov	x0, x28
  419170:	bl	41f990 <nftw@plt+0x1ce10>
  419174:	b	4191d0 <nftw@plt+0x16650>
  419178:	ldr	x0, [sp, #120]
  41917c:	str	wzr, [x0]
  419180:	mov	w0, #0x0                   	// #0
  419184:	b	4191dc <nftw@plt+0x1665c>
  419188:	mov	x4, x22
  41918c:	sub	w3, w19, w22
  419190:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  419194:	add	x2, x2, #0x2d0
  419198:	mov	w1, #0x3                   	// #3
  41919c:	mov	x0, x28
  4191a0:	bl	41f990 <nftw@plt+0x1ce10>
  4191a4:	mov	w20, #0x1                   	// #1
  4191a8:	b	4191d0 <nftw@plt+0x16650>
  4191ac:	tbz	w20, #31, 41ac44 <nftw@plt+0x180c4>
  4191b0:	mov	x4, x22
  4191b4:	sub	w3, w19, w22
  4191b8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4191bc:	add	x2, x2, #0x300
  4191c0:	mov	w1, #0x3                   	// #3
  4191c4:	mov	x0, x28
  4191c8:	bl	41f990 <nftw@plt+0x1ce10>
  4191cc:	mov	w20, #0x1                   	// #1
  4191d0:	ldr	x0, [sp, #120]
  4191d4:	str	w20, [x0]
  4191d8:	mov	w0, #0x1                   	// #1
  4191dc:	ldp	x19, x20, [sp, #16]
  4191e0:	ldp	x21, x22, [sp, #32]
  4191e4:	ldp	x23, x24, [sp, #48]
  4191e8:	ldp	x25, x26, [sp, #64]
  4191ec:	ldp	x27, x28, [sp, #80]
  4191f0:	ldp	x29, x30, [sp], #144
  4191f4:	ret
  4191f8:	ldrb	w0, [x28, #1146]
  4191fc:	cbz	w0, 41924c <nftw@plt+0x166cc>
  419200:	ldrb	w0, [x28, #1148]
  419204:	cbz	w0, 419210 <nftw@plt+0x16690>
  419208:	ldrb	w0, [x28, #18]
  41920c:	cbz	w0, 419224 <nftw@plt+0x166a4>
  419210:	mov	w20, #0x24                  	// #36
  419214:	ldr	x0, [sp, #136]
  419218:	str	w20, [x0]
  41921c:	strb	wzr, [x0, #4]
  419220:	b	4191d0 <nftw@plt+0x16650>
  419224:	strb	wzr, [x28, #1148]
  419228:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41922c:	add	x2, x2, #0x328
  419230:	mov	w1, #0x2                   	// #2
  419234:	mov	x0, x28
  419238:	bl	41f990 <nftw@plt+0x1ce10>
  41923c:	b	419210 <nftw@plt+0x16690>
  419240:	mov	w1, #0x73c                 	// #1852
  419244:	mov	w3, #0x0                   	// #0
  419248:	b	419254 <nftw@plt+0x166d4>
  41924c:	mov	w1, #0x73c                 	// #1852
  419250:	mov	w3, #0x0                   	// #0
  419254:	adrp	x5, 460000 <_obstack_memory_used@@Base+0x159fc>
  419258:	add	x5, x5, #0x878
  41925c:	b	419264 <nftw@plt+0x166e4>
  419260:	mov	w1, w0
  419264:	cmp	w1, w3
  419268:	b.eq	419290 <nftw@plt+0x16710>  // b.none
  41926c:	add	w0, w1, w3
  419270:	add	w0, w0, w0, lsr #31
  419274:	asr	w0, w0, #1
  419278:	add	x4, x5, w0, sxtw #3
  41927c:	ldr	w4, [x4, #4]
  419280:	cmp	w20, w4
  419284:	b.ls	419260 <nftw@plt+0x166e0>  // b.plast
  419288:	add	w3, w0, #0x1
  41928c:	b	419264 <nftw@plt+0x166e4>
  419290:	ldrb	w0, [x28, #1154]
  419294:	cbz	w0, 4192dc <nftw@plt+0x1675c>
  419298:	ldrb	w0, [x28, #1164]
  41929c:	cbnz	w0, 41ac28 <nftw@plt+0x180a8>
  4192a0:	ldrb	w1, [x28, #1152]
  4192a4:	mov	w0, #0x1                   	// #1
  4192a8:	cbnz	w1, 4192c0 <nftw@plt+0x16740>
  4192ac:	ldrb	w0, [x28, #1120]
  4192b0:	cmp	w0, #0x0
  4192b4:	mov	w0, #0xd                   	// #13
  4192b8:	mov	w1, #0x4                   	// #4
  4192bc:	csel	w0, w0, w1, eq  // eq = none
  4192c0:	sbfiz	x1, x3, #3, #32
  4192c4:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x159fc>
  4192c8:	add	x4, x4, #0x878
  4192cc:	ldrh	w21, [x4, x1]
  4192d0:	tst	w0, w21
  4192d4:	b.ne	419304 <nftw@plt+0x16784>  // b.any
  4192d8:	b	419158 <nftw@plt+0x165d8>
  4192dc:	sbfiz	x0, x3, #3, #32
  4192e0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x159fc>
  4192e4:	add	x1, x1, #0x878
  4192e8:	ldrh	w21, [x1, x0]
  4192ec:	mov	w0, #0xd                   	// #13
  4192f0:	tst	w21, w0
  4192f4:	b.eq	419158 <nftw@plt+0x165d8>  // b.none
  4192f8:	ldrb	w0, [x28, #1164]
  4192fc:	mov	w23, #0x10                  	// #16
  419300:	cbnz	w0, 419314 <nftw@plt+0x16794>
  419304:	ldrb	w0, [x28, #1152]
  419308:	cmp	w0, #0x0
  41930c:	cset	w23, ne  // ne = any
  419310:	lsl	w23, w23, #1
  419314:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x159fc>
  419318:	add	x0, x0, #0x878
  41931c:	add	x3, x0, w3, sxtw #3
  419320:	ldrb	w24, [x3, #2]
  419324:	cbz	w24, 419344 <nftw@plt+0x167c4>
  419328:	ldr	x1, [sp, #136]
  41932c:	ldrb	w0, [x1, #4]
  419330:	cmp	w0, w24
  419334:	b.ls	419344 <nftw@plt+0x167c4>  // b.plast
  419338:	mov	w0, #0x3                   	// #3
  41933c:	str	w0, [x1, #8]
  419340:	b	419380 <nftw@plt+0x16800>
  419344:	tbz	w21, #8, 41abd8 <nftw@plt+0x18058>
  419348:	ldr	x0, [sp, #136]
  41934c:	ldr	w0, [x0]
  419350:	sub	w1, w20, #0x1, lsl #12
  419354:	sub	w1, w1, #0x161
  419358:	cmp	w1, #0x14
  41935c:	b.hi	4193bc <nftw@plt+0x1683c>  // b.pmore
  419360:	sub	w0, w0, #0x1, lsl #12
  419364:	sub	w0, w0, #0x100
  419368:	cmp	w0, #0x12
  41936c:	cset	w0, hi  // hi = pmore
  419370:	cbz	w0, 41abbc <nftw@plt+0x1803c>
  419374:	cbnz	w24, 419380 <nftw@plt+0x16800>
  419378:	ldr	x0, [sp, #136]
  41937c:	str	w20, [x0]
  419380:	ldr	x0, [sp, #136]
  419384:	strb	w24, [x0, #4]
  419388:	tst	w23, w21
  41938c:	b.eq	4191d0 <nftw@plt+0x16650>  // b.none
  419390:	ldr	w0, [sp, #116]
  419394:	cmp	w0, #0x1
  419398:	b.ne	4191d0 <nftw@plt+0x16650>  // b.any
  41939c:	mov	x4, x22
  4193a0:	sub	w3, w19, w22
  4193a4:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4193a8:	add	x2, x2, #0x368
  4193ac:	mov	w1, #0x3                   	// #3
  4193b0:	mov	x0, x28
  4193b4:	bl	41f990 <nftw@plt+0x1ce10>
  4193b8:	b	4191d0 <nftw@plt+0x16650>
  4193bc:	sub	w1, w20, #0x1, lsl #12
  4193c0:	sub	w1, w1, #0x1a8
  4193c4:	cmp	w1, #0x1a
  4193c8:	b.hi	4193f8 <nftw@plt+0x16878>  // b.pmore
  4193cc:	sub	w1, w0, #0xa, lsl #12
  4193d0:	sub	w1, w1, #0xc00
  4193d4:	mov	w0, #0x2ba3                	// #11171
  4193d8:	cmp	w1, w0
  4193dc:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4193e0:	mov	w2, #0x1c                  	// #28
  4193e4:	udiv	w0, w1, w2
  4193e8:	msub	w0, w0, w2, w1
  4193ec:	cmp	w0, #0x0
  4193f0:	cset	w0, ne  // ne = any
  4193f4:	b	419370 <nftw@plt+0x167f0>
  4193f8:	cmp	w20, #0x345
  4193fc:	b.hi	41942c <nftw@plt+0x168ac>  // b.pmore
  419400:	cmp	w20, #0x2ff
  419404:	b.ls	41ab94 <nftw@plt+0x18014>  // b.plast
  419408:	sub	w3, w20, #0x300
  41940c:	cmp	w3, #0x45
  419410:	b.hi	41ab94 <nftw@plt+0x18014>  // b.pmore
  419414:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  419418:	add	x1, x1, #0x750
  41941c:	ldrh	w1, [x1, w3, uxtw #1]
  419420:	adr	x3, 41942c <nftw@plt+0x168ac>
  419424:	add	x1, x3, w1, sxth #2
  419428:	br	x1
  41942c:	cmp	w20, #0xcd5
  419430:	b.eq	41aa78 <nftw@plt+0x17ef8>  // b.none
  419434:	b.ls	419488 <nftw@plt+0x16908>  // b.plast
  419438:	mov	w1, #0x102e                	// #4142
  41943c:	cmp	w20, w1
  419440:	b.eq	41aad0 <nftw@plt+0x17f50>  // b.none
  419444:	b.ls	419560 <nftw@plt+0x169e0>  // b.plast
  419448:	mov	w1, #0x309a                	// #12442
  41944c:	cmp	w20, w1
  419450:	b.eq	41ab0c <nftw@plt+0x17f8c>  // b.none
  419454:	b.ls	4195bc <nftw@plt+0x16a3c>  // b.plast
  419458:	mov	w1, #0x10ba                	// #4282
  41945c:	movk	w1, #0x1, lsl #16
  419460:	cmp	w20, w1
  419464:	b.eq	41ab6c <nftw@plt+0x17fec>  // b.none
  419468:	add	w1, w1, #0x6d
  41946c:	cmp	w20, w1
  419470:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  419474:	sub	w0, w0, #0x11, lsl #12
  419478:	sub	w0, w0, #0x131
  41947c:	cmp	w0, #0x1
  419480:	cset	w0, hi  // hi = pmore
  419484:	b	419518 <nftw@plt+0x16998>
  419488:	cmp	w20, #0xb3e
  41948c:	b.eq	41aa40 <nftw@plt+0x17ec0>  // b.none
  419490:	b.ls	4194bc <nftw@plt+0x1693c>  // b.plast
  419494:	cmp	w20, #0xbd7
  419498:	b.eq	41aa58 <nftw@plt+0x17ed8>  // b.none
  41949c:	b.ls	41952c <nftw@plt+0x169ac>  // b.plast
  4194a0:	cmp	w20, #0xc56
  4194a4:	b.eq	41aa6c <nftw@plt+0x17eec>  // b.none
  4194a8:	cmp	w20, #0xcc2
  4194ac:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  4194b0:	cmp	w0, #0xcc6
  4194b4:	cset	w0, ne  // ne = any
  4194b8:	b	419518 <nftw@plt+0x16998>
  4194bc:	cmp	w20, #0x93c
  4194c0:	b.eq	41aa0c <nftw@plt+0x17e8c>  // b.none
  4194c4:	b.ls	4194e4 <nftw@plt+0x16964>  // b.plast
  4194c8:	cmp	w20, #0x9be
  4194cc:	b.eq	41aa34 <nftw@plt+0x17eb4>  // b.none
  4194d0:	cmp	w20, #0x9d7
  4194d4:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  4194d8:	cmp	w0, #0x9c7
  4194dc:	cset	w0, ne  // ne = any
  4194e0:	b	419518 <nftw@plt+0x16998>
  4194e4:	cmp	w20, #0x654
  4194e8:	b.eq	41a9a8 <nftw@plt+0x17e28>  // b.none
  4194ec:	cmp	w20, #0x655
  4194f0:	b.ne	419508 <nftw@plt+0x16988>  // b.any
  4194f4:	cmp	w0, #0x623
  4194f8:	b.hi	41aa00 <nftw@plt+0x17e80>  // b.pmore
  4194fc:	cmp	w0, #0x621
  419500:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419504:	b	41951c <nftw@plt+0x1699c>
  419508:	cmp	w20, #0x653
  41950c:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  419510:	cmp	w0, #0x627
  419514:	cset	w0, ne  // ne = any
  419518:	cbnz	w0, 419374 <nftw@plt+0x167f4>
  41951c:	mov	w0, #0x3                   	// #3
  419520:	ldr	x1, [sp, #136]
  419524:	str	w0, [x1, #8]
  419528:	b	419374 <nftw@plt+0x167f4>
  41952c:	cmp	w20, #0xb57
  419530:	b.eq	41aa4c <nftw@plt+0x17ecc>  // b.none
  419534:	cmp	w20, #0xbbe
  419538:	b.ne	41954c <nftw@plt+0x169cc>  // b.any
  41953c:	sub	w0, w0, #0xbc6
  419540:	cmp	w0, #0x1
  419544:	cset	w0, hi  // hi = pmore
  419548:	b	419518 <nftw@plt+0x16998>
  41954c:	cmp	w20, #0xb56
  419550:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  419554:	cmp	w0, #0xb47
  419558:	cset	w0, ne  // ne = any
  41955c:	b	419518 <nftw@plt+0x16998>
  419560:	cmp	w20, #0xdca
  419564:	b.eq	41aaac <nftw@plt+0x17f2c>  // b.none
  419568:	b.ls	41958c <nftw@plt+0x16a0c>  // b.plast
  41956c:	cmp	w20, #0xdcf
  419570:	b.eq	41aac0 <nftw@plt+0x17f40>  // b.none
  419574:	cmp	w20, #0xddf
  419578:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  41957c:	sub	w0, w0, #0xdd9
  419580:	cmp	w0, #0x1
  419584:	cset	w0, hi  // hi = pmore
  419588:	b	419518 <nftw@plt+0x16998>
  41958c:	cmp	w20, #0xd3e
  419590:	b.eq	41aa9c <nftw@plt+0x17f1c>  // b.none
  419594:	cmp	w20, #0xd57
  419598:	b.ne	4195a8 <nftw@plt+0x16a28>  // b.any
  41959c:	cmp	w0, #0xd46
  4195a0:	cset	w0, ne  // ne = any
  4195a4:	b	419518 <nftw@plt+0x16998>
  4195a8:	cmp	w20, #0xcd6
  4195ac:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  4195b0:	cmp	w0, #0xcc6
  4195b4:	cset	w0, ne  // ne = any
  4195b8:	b	419518 <nftw@plt+0x16998>
  4195bc:	mov	w1, #0x1b35                	// #6965
  4195c0:	cmp	w20, w1
  4195c4:	b.eq	41aae0 <nftw@plt+0x17f60>  // b.none
  4195c8:	mov	w1, #0x3099                	// #12441
  4195cc:	cmp	w20, w1
  4195d0:	b.ne	41ab94 <nftw@plt+0x18014>  // b.any
  4195d4:	sub	w0, w0, #0x3, lsl #12
  4195d8:	sub	w0, w0, #0x46
  4195dc:	cmp	w0, #0xb7
  4195e0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4195e4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4195e8:	add	x1, x1, #0x7dc
  4195ec:	ldrh	w0, [x1, w0, uxtw #1]
  4195f0:	adr	x1, 4195fc <nftw@plt+0x16a7c>
  4195f4:	add	x0, x1, w0, sxth #2
  4195f8:	br	x0
  4195fc:	cmp	w0, #0x3cb
  419600:	b.hi	419698 <nftw@plt+0x16b18>  // b.pmore
  419604:	cmp	w0, #0x390
  419608:	b.hi	419640 <nftw@plt+0x16ac0>  // b.pmore
  41960c:	cmp	w0, #0x113
  419610:	b.hi	419668 <nftw@plt+0x16ae8>  // b.pmore
  419614:	cmp	w0, #0x40
  419618:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41961c:	sub	w0, w0, #0x41
  419620:	cmp	w0, #0xd2
  419624:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419628:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41962c:	add	x1, x1, #0x94c
  419630:	ldrh	w0, [x1, w0, uxtw #1]
  419634:	adr	x1, 419640 <nftw@plt+0x16ac0>
  419638:	add	x0, x1, w0, sxth #2
  41963c:	br	x0
  419640:	sub	w1, w0, #0x391
  419644:	mov	x0, #0x1                   	// #1
  419648:	lsl	x0, x0, x1
  41964c:	mov	x1, #0x4151                	// #16721
  419650:	movk	x1, #0x110, lsl #16
  419654:	movk	x1, #0x4151, lsl #32
  419658:	movk	x1, #0x710, lsl #48
  41965c:	tst	x0, x1
  419660:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419664:	b	41951c <nftw@plt+0x1699c>
  419668:	cmp	w0, #0x1a1
  41966c:	b.hi	419688 <nftw@plt+0x16b08>  // b.pmore
  419670:	cmp	w0, #0x19f
  419674:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  419678:	sub	w0, w0, #0x14c
  41967c:	cmp	w0, #0x1
  419680:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419684:	b	41951c <nftw@plt+0x1699c>
  419688:	sub	w0, w0, #0x1af
  41968c:	cmp	w0, #0x1
  419690:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419694:	b	41951c <nftw@plt+0x1699c>
  419698:	cmp	w0, #0x438
  41969c:	b.ls	4196d8 <nftw@plt+0x16b58>  // b.plast
  4196a0:	sub	w1, w0, #0x1, lsl #12
  4196a4:	sub	w1, w1, #0xf00
  4196a8:	cmp	w1, #0xfe
  4196ac:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4196b0:	sub	w0, w0, #0x1, lsl #12
  4196b4:	sub	w0, w0, #0xf00
  4196b8:	cmp	w0, #0xfe
  4196bc:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4196c0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4196c4:	add	x1, x1, #0xaf4
  4196c8:	ldrh	w0, [x1, w0, uxtw #1]
  4196cc:	adr	x1, 4196d8 <nftw@plt+0x16b58>
  4196d0:	add	x0, x1, w0, sxth #2
  4196d4:	br	x0
  4196d8:	cmp	w0, #0x414
  4196dc:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  4196e0:	sub	w1, w0, #0x415
  4196e4:	mov	x0, #0x1                   	// #1
  4196e8:	lsl	x0, x0, x1
  4196ec:	mov	x1, #0x9                   	// #9
  4196f0:	movk	x1, #0x9, lsl #32
  4196f4:	tst	x0, x1
  4196f8:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  4196fc:	b	41951c <nftw@plt+0x1699c>
  419700:	cmp	w0, #0x41a
  419704:	b.hi	419764 <nftw@plt+0x16be4>  // b.pmore
  419708:	cmp	w0, #0x390
  41970c:	b.hi	419740 <nftw@plt+0x16bc0>  // b.pmore
  419710:	sub	w1, w0, #0x41
  419714:	cmp	w1, #0x16f
  419718:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41971c:	sub	w0, w0, #0x41
  419720:	cmp	w0, #0x16f
  419724:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419728:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41972c:	add	x1, x1, #0xcf4
  419730:	ldrh	w0, [x1, w0, uxtw #1]
  419734:	adr	x1, 419740 <nftw@plt+0x16bc0>
  419738:	add	x0, x1, w0, sxth #2
  41973c:	br	x0
  419740:	sub	w0, w0, #0x391
  419744:	cmp	w0, #0x89
  419748:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41974c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  419750:	add	x1, x1, #0xfd4
  419754:	ldrh	w0, [x1, w0, uxtw #1]
  419758:	adr	x1, 419764 <nftw@plt+0x16be4>
  41975c:	add	x0, x1, w0, sxth #2
  419760:	br	x0
  419764:	mov	w1, #0x1ffe                	// #8190
  419768:	cmp	w0, w1
  41976c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419770:	mov	w1, #0x1eff                	// #7935
  419774:	cmp	w0, w1
  419778:	b.ls	4197a4 <nftw@plt+0x16c24>  // b.plast
  41977c:	sub	w0, w0, #0x1, lsl #12
  419780:	sub	w0, w0, #0xf00
  419784:	cmp	w0, #0xfe
  419788:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41978c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  419790:	add	x1, x1, #0xe8
  419794:	ldrh	w0, [x1, w0, uxtw #1]
  419798:	adr	x1, 4197a4 <nftw@plt+0x16c24>
  41979c:	add	x0, x1, w0, sxth #2
  4197a0:	br	x0
  4197a4:	cmp	w0, #0x433
  4197a8:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  4197ac:	cmp	w0, #0x43a
  4197b0:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  4197b4:	b	41951c <nftw@plt+0x1699c>
  4197b8:	cmp	w0, #0x7a
  4197bc:	b.hi	4197ec <nftw@plt+0x16c6c>  // b.pmore
  4197c0:	cmp	w0, #0x40
  4197c4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  4197c8:	sub	w0, w0, #0x41
  4197cc:	cmp	w0, #0x39
  4197d0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4197d4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  4197d8:	add	x1, x1, #0x2e8
  4197dc:	ldrh	w0, [x1, w0, uxtw #1]
  4197e0:	adr	x1, 4197ec <nftw@plt+0x16c6c>
  4197e4:	add	x0, x1, w0, sxth #2
  4197e8:	br	x0
  4197ec:	sub	w1, w0, #0x1, lsl #12
  4197f0:	sub	w1, w1, #0xea0
  4197f4:	cmp	w1, #0x2d
  4197f8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4197fc:	mov	x0, #0x1                   	// #1
  419800:	lsl	x0, x0, x1
  419804:	mov	x1, #0x3                   	// #3
  419808:	movk	x1, #0x300, lsl #16
  41980c:	movk	x1, #0x3000, lsl #32
  419810:	tst	x0, x1
  419814:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419818:	b	41951c <nftw@plt+0x1699c>
  41981c:	cmp	w0, #0x79
  419820:	b.hi	41987c <nftw@plt+0x16cfc>  // b.pmore
  419824:	cmp	w0, #0x40
  419828:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41982c:	sub	w1, w0, #0x41
  419830:	mov	x0, #0x1                   	// #1
  419834:	lsl	x0, x0, x1
  419838:	mov	x1, #0x6111                	// #24849
  41983c:	movk	x1, #0x130, lsl #16
  419840:	movk	x1, #0x6111, lsl #32
  419844:	movk	x1, #0x130, lsl #48
  419848:	tst	x0, x1
  41984c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419850:	b	41951c <nftw@plt+0x1699c>
  419854:	sub	w1, w0, #0xca
  419858:	mov	x0, #0x1                   	// #1
  41985c:	lsl	x0, x0, x1
  419860:	mov	x1, #0x401                 	// #1025
  419864:	movk	x1, #0x100, lsl #16
  419868:	movk	x1, #0x401, lsl #32
  41986c:	movk	x1, #0x300, lsl #48
  419870:	tst	x0, x1
  419874:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419878:	b	41951c <nftw@plt+0x1699c>
  41987c:	cmp	w0, #0x103
  419880:	b.hi	419898 <nftw@plt+0x16d18>  // b.pmore
  419884:	cmp	w0, #0xc9
  419888:	b.hi	419854 <nftw@plt+0x16cd4>  // b.pmore
  41988c:	cmp	w0, #0xc2
  419890:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419894:	b	41951c <nftw@plt+0x1699c>
  419898:	cmp	w0, #0x1a1
  41989c:	b.hi	4198ac <nftw@plt+0x16d2c>  // b.pmore
  4198a0:	cmp	w0, #0x19f
  4198a4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  4198a8:	b	41951c <nftw@plt+0x1699c>
  4198ac:	sub	w0, w0, #0x1af
  4198b0:	cmp	w0, #0x1
  4198b4:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4198b8:	b	41951c <nftw@plt+0x1699c>
  4198bc:	cmp	w0, #0xfc
  4198c0:	b.hi	419918 <nftw@plt+0x16d98>  // b.pmore
  4198c4:	cmp	w0, #0x40
  4198c8:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  4198cc:	sub	w0, w0, #0x41
  4198d0:	cmp	w0, #0xbb
  4198d4:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4198d8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  4198dc:	add	x1, x1, #0x35c
  4198e0:	ldrh	w0, [x1, w0, uxtw #1]
  4198e4:	adr	x1, 4198f0 <nftw@plt+0x16d70>
  4198e8:	add	x0, x1, w0, sxth #2
  4198ec:	br	x0
  4198f0:	sub	w1, w0, #0x391
  4198f4:	mov	x0, #0x1                   	// #1
  4198f8:	lsl	x0, x0, x1
  4198fc:	mov	x1, #0x101                 	// #257
  419900:	movk	x1, #0x10, lsl #16
  419904:	movk	x1, #0x101, lsl #32
  419908:	movk	x1, #0x10, lsl #48
  41990c:	tst	x0, x1
  419910:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419914:	b	41951c <nftw@plt+0x1699c>
  419918:	cmp	w0, #0x3c5
  41991c:	b.hi	419958 <nftw@plt+0x16dd8>  // b.pmore
  419920:	cmp	w0, #0x390
  419924:	b.hi	4198f0 <nftw@plt+0x16d70>  // b.pmore
  419928:	cmp	w0, #0x227
  41992c:	b.hi	419948 <nftw@plt+0x16dc8>  // b.pmore
  419930:	cmp	w0, #0x225
  419934:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  419938:	sub	w0, w0, #0x1ea
  41993c:	cmp	w0, #0x1
  419940:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419944:	b	41951c <nftw@plt+0x1699c>
  419948:	sub	w0, w0, #0x22e
  41994c:	cmp	w0, #0x1
  419950:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419954:	b	41951c <nftw@plt+0x1699c>
  419958:	mov	w1, #0x1e37                	// #7735
  41995c:	cmp	w0, w1
  419960:	b.hi	419998 <nftw@plt+0x16e18>  // b.pmore
  419964:	mov	w1, #0x1e35                	// #7733
  419968:	cmp	w0, w1
  41996c:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  419970:	sub	w1, w0, #0x418
  419974:	cmp	w1, #0x2b
  419978:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41997c:	mov	x0, #0x1                   	// #1
  419980:	lsl	x0, x0, x1
  419984:	mov	x1, #0x801                 	// #2049
  419988:	movk	x1, #0x801, lsl #32
  41998c:	tst	x0, x1
  419990:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419994:	b	41951c <nftw@plt+0x1699c>
  419998:	mov	w1, #0x1fb3                	// #8115
  41999c:	cmp	w0, w1
  4199a0:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  4199a4:	b.ls	4199b8 <nftw@plt+0x16e38>  // b.plast
  4199a8:	mov	w1, #0x1fbc                	// #8124
  4199ac:	cmp	w0, w1
  4199b0:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  4199b4:	b	41951c <nftw@plt+0x1699c>
  4199b8:	sub	w0, w0, #0x1, lsl #12
  4199bc:	sub	w0, w0, #0xe5a
  4199c0:	cmp	w0, #0x1
  4199c4:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  4199c8:	b	41951c <nftw@plt+0x1699c>
  4199cc:	cmp	w0, #0x3c5
  4199d0:	b.hi	419a4c <nftw@plt+0x16ecc>  // b.pmore
  4199d4:	cmp	w0, #0x390
  4199d8:	b.hi	419a14 <nftw@plt+0x16e94>  // b.pmore
  4199dc:	cmp	w0, #0x75
  4199e0:	b.hi	419a3c <nftw@plt+0x16ebc>  // b.pmore
  4199e4:	cmp	w0, #0x40
  4199e8:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  4199ec:	sub	w1, w0, #0x41
  4199f0:	mov	x0, #0x1                   	// #1
  4199f4:	lsl	x0, x0, x1
  4199f8:	mov	x1, #0x4151                	// #16721
  4199fc:	movk	x1, #0x10, lsl #16
  419a00:	movk	x1, #0x4151, lsl #32
  419a04:	movk	x1, #0x10, lsl #48
  419a08:	tst	x0, x1
  419a0c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419a10:	b	41951c <nftw@plt+0x1699c>
  419a14:	sub	w1, w0, #0x391
  419a18:	mov	x0, #0x1                   	// #1
  419a1c:	lsl	x0, x0, x1
  419a20:	mov	x1, #0x101                 	// #257
  419a24:	movk	x1, #0x10, lsl #16
  419a28:	movk	x1, #0x101, lsl #32
  419a2c:	movk	x1, #0x10, lsl #48
  419a30:	tst	x0, x1
  419a34:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419a38:	b	41951c <nftw@plt+0x1699c>
  419a3c:	sub	w0, w0, #0x228
  419a40:	cmp	w0, #0x1
  419a44:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419a48:	b	41951c <nftw@plt+0x1699c>
  419a4c:	cmp	w0, #0x443
  419a50:	b.hi	419a84 <nftw@plt+0x16f04>  // b.pmore
  419a54:	cmp	w0, #0x40f
  419a58:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419a5c:	sub	w1, w0, #0x410
  419a60:	mov	x0, #0x1                   	// #1
  419a64:	lsl	x0, x0, x1
  419a68:	mov	x1, #0x161                 	// #353
  419a6c:	movk	x1, #0x8, lsl #16
  419a70:	movk	x1, #0x161, lsl #32
  419a74:	movk	x1, #0x8, lsl #48
  419a78:	tst	x0, x1
  419a7c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419a80:	b	41951c <nftw@plt+0x1699c>
  419a84:	mov	w1, #0x1fb3                	// #8115
  419a88:	cmp	w0, w1
  419a8c:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  419a90:	b.ls	419aa4 <nftw@plt+0x16f24>  // b.plast
  419a94:	mov	w1, #0x1fbc                	// #8124
  419a98:	cmp	w0, w1
  419a9c:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419aa0:	b	41951c <nftw@plt+0x1699c>
  419aa4:	sub	w0, w0, #0x1, lsl #12
  419aa8:	sub	w0, w0, #0xea0
  419aac:	cmp	w0, #0x1
  419ab0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419ab4:	b	41951c <nftw@plt+0x1699c>
  419ab8:	cmp	w0, #0x7a
  419abc:	b.hi	419af0 <nftw@plt+0x16f70>  // b.pmore
  419ac0:	cmp	w0, #0x40
  419ac4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419ac8:	sub	w1, w0, #0x41
  419acc:	mov	x0, #0x1                   	// #1
  419ad0:	lsl	x0, x0, x1
  419ad4:	mov	x1, #0xf1ff                	// #61951
  419ad8:	movk	x1, #0x3ce, lsl #16
  419adc:	movk	x1, #0xf0ff, lsl #32
  419ae0:	movk	x1, #0x3ce, lsl #48
  419ae4:	tst	x0, x1
  419ae8:	b.ne	41951c <nftw@plt+0x1699c>  // b.any
  419aec:	b	419374 <nftw@plt+0x167f4>
  419af0:	cmp	w0, #0x17f
  419af4:	b.hi	419b20 <nftw@plt+0x16fa0>  // b.pmore
  419af8:	cmp	w0, #0x159
  419afc:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419b00:	sub	w1, w0, #0x15a
  419b04:	mov	x0, #0x1                   	// #1
  419b08:	lsl	x0, x0, x1
  419b0c:	mov	x1, #0xc3                  	// #195
  419b10:	movk	x1, #0x20, lsl #32
  419b14:	tst	x0, x1
  419b18:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419b1c:	b	41951c <nftw@plt+0x1699c>
  419b20:	sub	w0, w0, #0x1, lsl #12
  419b24:	sub	w0, w0, #0xe62
  419b28:	cmp	w0, #0x1
  419b2c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419b30:	b	41951c <nftw@plt+0x1699c>
  419b34:	cmp	w0, #0x456
  419b38:	b.hi	419bd4 <nftw@plt+0x17054>  // b.pmore
  419b3c:	cmp	w0, #0x3b8
  419b40:	b.hi	419b7c <nftw@plt+0x16ffc>  // b.pmore
  419b44:	cmp	w0, #0x79
  419b48:	b.hi	419ba0 <nftw@plt+0x17020>  // b.pmore
  419b4c:	cmp	w0, #0x40
  419b50:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419b54:	sub	w1, w0, #0x41
  419b58:	mov	x0, #0x1                   	// #1
  419b5c:	lsl	x0, x0, x1
  419b60:	mov	x1, #0x4191                	// #16785
  419b64:	movk	x1, #0x1d0, lsl #16
  419b68:	movk	x1, #0x4191, lsl #32
  419b6c:	movk	x1, #0x1d8, lsl #48
  419b70:	tst	x0, x1
  419b74:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419b78:	b	41951c <nftw@plt+0x1699c>
  419b7c:	sub	w0, w0, #0x3b9
  419b80:	cmp	w0, #0x9d
  419b84:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419b88:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  419b8c:	add	x1, x1, #0x4d4
  419b90:	ldrh	w0, [x1, w0, uxtw #1]
  419b94:	adr	x1, 419ba0 <nftw@plt+0x17020>
  419b98:	add	x0, x1, w0, sxth #2
  419b9c:	br	x0
  419ba0:	cmp	w0, #0x16b
  419ba4:	b.hi	419bc0 <nftw@plt+0x17040>  // b.pmore
  419ba8:	cmp	w0, #0x169
  419bac:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  419bb0:	and	w0, w0, #0xffffffdf
  419bb4:	cmp	w0, #0xd5
  419bb8:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419bbc:	b	41951c <nftw@plt+0x1699c>
  419bc0:	cmp	w0, #0x399
  419bc4:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  419bc8:	cmp	w0, #0x3a5
  419bcc:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419bd0:	b	41951c <nftw@plt+0x1699c>
  419bd4:	cmp	w0, #0x4d9
  419bd8:	b.hi	419be8 <nftw@plt+0x17068>  // b.pmore
  419bdc:	cmp	w0, #0x4d7
  419be0:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419be4:	b	41951c <nftw@plt+0x1699c>
  419be8:	sub	w0, w0, #0x4e8
  419bec:	cmp	w0, #0x1
  419bf0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419bf4:	b	41951c <nftw@plt+0x1699c>
  419bf8:	cmp	w0, #0x79
  419bfc:	b.hi	419c58 <nftw@plt+0x170d8>  // b.pmore
  419c00:	cmp	w0, #0x40
  419c04:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419c08:	sub	w1, w0, #0x41
  419c0c:	mov	x0, #0x1                   	// #1
  419c10:	lsl	x0, x0, x1
  419c14:	mov	x1, #0x4111                	// #16657
  419c18:	movk	x1, #0x110, lsl #16
  419c1c:	movk	x1, #0x4111, lsl #32
  419c20:	movk	x1, #0x110, lsl #48
  419c24:	tst	x0, x1
  419c28:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419c2c:	b	41951c <nftw@plt+0x1699c>
  419c30:	sub	w1, w0, #0xca
  419c34:	mov	x0, #0x1                   	// #1
  419c38:	lsl	x0, x0, x1
  419c3c:	mov	x1, #0x401                 	// #1025
  419c40:	movk	x1, #0x100, lsl #16
  419c44:	movk	x1, #0x401, lsl #32
  419c48:	movk	x1, #0x300, lsl #48
  419c4c:	tst	x0, x1
  419c50:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419c54:	b	41951c <nftw@plt+0x1699c>
  419c58:	cmp	w0, #0x103
  419c5c:	b.hi	419c74 <nftw@plt+0x170f4>  // b.pmore
  419c60:	cmp	w0, #0xc9
  419c64:	b.hi	419c30 <nftw@plt+0x170b0>  // b.pmore
  419c68:	cmp	w0, #0xc2
  419c6c:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419c70:	b	41951c <nftw@plt+0x1699c>
  419c74:	cmp	w0, #0x1a1
  419c78:	b.hi	419c88 <nftw@plt+0x17108>  // b.pmore
  419c7c:	cmp	w0, #0x19f
  419c80:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419c84:	b	41951c <nftw@plt+0x1699c>
  419c88:	sub	w0, w0, #0x1af
  419c8c:	cmp	w0, #0x1
  419c90:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419c94:	b	41951c <nftw@plt+0x1699c>
  419c98:	sub	w1, w0, #0x41
  419c9c:	cmp	w1, #0x38
  419ca0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419ca4:	mov	x0, #0x1                   	// #1
  419ca8:	lsl	x0, x0, x1
  419cac:	mov	x1, #0x1                   	// #1
  419cb0:	movk	x1, #0x10, lsl #16
  419cb4:	movk	x1, #0x1, lsl #32
  419cb8:	movk	x1, #0x150, lsl #48
  419cbc:	tst	x0, x1
  419cc0:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419cc4:	b	41951c <nftw@plt+0x1699c>
  419cc8:	cmp	w0, #0x75
  419ccc:	b.hi	419cf8 <nftw@plt+0x17178>  // b.pmore
  419cd0:	cmp	w0, #0x4e
  419cd4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419cd8:	sub	w1, w0, #0x4f
  419cdc:	mov	x0, #0x1                   	// #1
  419ce0:	lsl	x0, x0, x1
  419ce4:	mov	x1, #0x41                  	// #65
  419ce8:	movk	x1, #0x41, lsl #32
  419cec:	tst	x0, x1
  419cf0:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419cf4:	b	41951c <nftw@plt+0x1699c>
  419cf8:	sub	w0, w0, #0x423
  419cfc:	tst	w0, #0xffffffdf
  419d00:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419d04:	b	41951c <nftw@plt+0x1699c>
  419d08:	cmp	w0, #0x7a
  419d0c:	b.hi	419d40 <nftw@plt+0x171c0>  // b.pmore
  419d10:	cmp	w0, #0x40
  419d14:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419d18:	sub	w1, w0, #0x41
  419d1c:	mov	x0, #0x1                   	// #1
  419d20:	lsl	x0, x0, x1
  419d24:	mov	x1, #0x6ddd                	// #28125
  419d28:	movk	x1, #0x21e, lsl #16
  419d2c:	movk	x1, #0x6fdd, lsl #32
  419d30:	movk	x1, #0x21e, lsl #48
  419d34:	tst	x0, x1
  419d38:	b.ne	41951c <nftw@plt+0x1699c>  // b.any
  419d3c:	b	419374 <nftw@plt+0x167f4>
  419d40:	cmp	w0, #0x1b7
  419d44:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  419d48:	b.ls	419d58 <nftw@plt+0x171d8>  // b.plast
  419d4c:	cmp	w0, #0x292
  419d50:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419d54:	b	41951c <nftw@plt+0x1699c>
  419d58:	and	w0, w0, #0xffffffdf
  419d5c:	cmp	w0, #0xdc
  419d60:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419d64:	b	41951c <nftw@plt+0x1699c>
  419d68:	cmp	w0, #0x75
  419d6c:	b.hi	419da0 <nftw@plt+0x17220>  // b.pmore
  419d70:	cmp	w0, #0x40
  419d74:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419d78:	sub	w1, w0, #0x41
  419d7c:	mov	x0, #0x1                   	// #1
  419d80:	lsl	x0, x0, x1
  419d84:	mov	x1, #0x4111                	// #16657
  419d88:	movk	x1, #0x12, lsl #16
  419d8c:	movk	x1, #0x4111, lsl #32
  419d90:	movk	x1, #0x12, lsl #48
  419d94:	tst	x0, x1
  419d98:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419d9c:	b	41951c <nftw@plt+0x1699c>
  419da0:	sub	w0, w0, #0x474
  419da4:	cmp	w0, #0x1
  419da8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419dac:	b	41951c <nftw@plt+0x1699c>
  419db0:	sub	w1, w0, #0x41
  419db4:	cmp	w1, #0x34
  419db8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419dbc:	mov	x0, #0x1                   	// #1
  419dc0:	lsl	x0, x0, x1
  419dc4:	mov	x1, #0x4111                	// #16657
  419dc8:	movk	x1, #0x12, lsl #16
  419dcc:	movk	x1, #0x4111, lsl #32
  419dd0:	movk	x1, #0x12, lsl #48
  419dd4:	tst	x0, x1
  419dd8:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419ddc:	b	41951c <nftw@plt+0x1699c>
  419de0:	cmp	w0, #0x3c9
  419de4:	b.hi	419e3c <nftw@plt+0x172bc>  // b.pmore
  419de8:	cmp	w0, #0x390
  419dec:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419df0:	sub	w1, w0, #0x391
  419df4:	mov	x0, #0x1                   	// #1
  419df8:	lsl	x0, x0, x1
  419dfc:	mov	x1, #0x4151                	// #16721
  419e00:	movk	x1, #0x100, lsl #16
  419e04:	movk	x1, #0x4151, lsl #32
  419e08:	movk	x1, #0x111, lsl #48
  419e0c:	tst	x0, x1
  419e10:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419e14:	b	41951c <nftw@plt+0x1699c>
  419e18:	sub	w1, w0, #0x1, lsl #12
  419e1c:	sub	w1, w1, #0xfc3
  419e20:	mov	x0, #0x1                   	// #1
  419e24:	lsl	x0, x0, x1
  419e28:	mov	x1, #0x201                 	// #513
  419e2c:	movk	x1, #0x201, lsl #48
  419e30:	tst	x0, x1
  419e34:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419e38:	b	41951c <nftw@plt+0x1699c>
  419e3c:	mov	w1, #0x1ffc                	// #8188
  419e40:	cmp	w0, w1
  419e44:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419e48:	mov	w1, #0x1fc2                	// #8130
  419e4c:	cmp	w0, w1
  419e50:	b.hi	419e18 <nftw@plt+0x17298>  // b.pmore
  419e54:	mov	w1, #0x1fb3                	// #8115
  419e58:	cmp	w0, w1
  419e5c:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  419e60:	mov	w1, #0x1fbc                	// #8124
  419e64:	cmp	w0, w1
  419e68:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419e6c:	b	41951c <nftw@plt+0x1699c>
  419e70:	cmp	w0, #0x3c9
  419e74:	b.hi	419ecc <nftw@plt+0x1734c>  // b.pmore
  419e78:	cmp	w0, #0x390
  419e7c:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419e80:	sub	w1, w0, #0x391
  419e84:	mov	x0, #0x1                   	// #1
  419e88:	lsl	x0, x0, x1
  419e8c:	mov	x1, #0x4151                	// #16721
  419e90:	movk	x1, #0x111, lsl #16
  419e94:	movk	x1, #0x4151, lsl #32
  419e98:	movk	x1, #0x111, lsl #48
  419e9c:	tst	x0, x1
  419ea0:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419ea4:	b	41951c <nftw@plt+0x1699c>
  419ea8:	sub	w1, w0, #0x1, lsl #12
  419eac:	sub	w1, w1, #0xfc3
  419eb0:	mov	x0, #0x1                   	// #1
  419eb4:	lsl	x0, x0, x1
  419eb8:	mov	x1, #0x201                 	// #513
  419ebc:	movk	x1, #0x201, lsl #48
  419ec0:	tst	x0, x1
  419ec4:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419ec8:	b	41951c <nftw@plt+0x1699c>
  419ecc:	mov	w1, #0x1ffc                	// #8188
  419ed0:	cmp	w0, w1
  419ed4:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419ed8:	mov	w1, #0x1fc2                	// #8130
  419edc:	cmp	w0, w1
  419ee0:	b.hi	419ea8 <nftw@plt+0x17328>  // b.pmore
  419ee4:	mov	w1, #0x1fb3                	// #8115
  419ee8:	cmp	w0, w1
  419eec:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  419ef0:	mov	w1, #0x1fbc                	// #8124
  419ef4:	cmp	w0, w1
  419ef8:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  419efc:	b	41951c <nftw@plt+0x1699c>
  419f00:	cmp	w0, #0x171
  419f04:	b.hi	419f78 <nftw@plt+0x173f8>  // b.pmore
  419f08:	cmp	w0, #0x167
  419f0c:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  419f10:	cmp	w0, #0xfc
  419f14:	b.hi	419f68 <nftw@plt+0x173e8>  // b.pmore
  419f18:	cmp	w0, #0xd1
  419f1c:	b.hi	419f48 <nftw@plt+0x173c8>  // b.pmore
  419f20:	sub	w1, w0, #0x4f
  419f24:	cmp	w1, #0x26
  419f28:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419f2c:	mov	x0, #0x1                   	// #1
  419f30:	lsl	x0, x0, x1
  419f34:	mov	x1, #0x41                  	// #65
  419f38:	movk	x1, #0x41, lsl #32
  419f3c:	tst	x0, x1
  419f40:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419f44:	b	41951c <nftw@plt+0x1699c>
  419f48:	sub	w1, w0, #0xd2
  419f4c:	mov	x0, #0x1                   	// #1
  419f50:	lsl	x0, x0, x1
  419f54:	mov	x1, #0x79f                 	// #1951
  419f58:	movk	x1, #0x79f, lsl #32
  419f5c:	tst	x0, x1
  419f60:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419f64:	b	41951c <nftw@plt+0x1699c>
  419f68:	sub	w0, w0, #0x14c
  419f6c:	cmp	w0, #0x5
  419f70:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419f74:	b	41951c <nftw@plt+0x1699c>
  419f78:	mov	w1, #0x1e53                	// #7763
  419f7c:	cmp	w0, w1
  419f80:	b.hi	419fcc <nftw@plt+0x1744c>  // b.pmore
  419f84:	mov	w1, #0x1e4b                	// #7755
  419f88:	cmp	w0, w1
  419f8c:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  419f90:	cmp	w0, #0x1dc
  419f94:	b.ls	419fc0 <nftw@plt+0x17440>  // b.plast
  419f98:	sub	w1, w0, #0x20c
  419f9c:	cmp	w1, #0x25
  419fa0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419fa4:	mov	x0, #0x1                   	// #1
  419fa8:	lsl	x0, x0, x1
  419fac:	mov	x1, #0x3fc0000000          	// #273804165120
  419fb0:	movk	x1, #0xf0f
  419fb4:	tst	x0, x1
  419fb8:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  419fbc:	b	41951c <nftw@plt+0x1699c>
  419fc0:	cmp	w0, #0x1d0
  419fc4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  419fc8:	b	41951c <nftw@plt+0x1699c>
  419fcc:	mov	w1, #0x1ed9                	// #7897
  419fd0:	cmp	w0, w1
  419fd4:	b.hi	419ff8 <nftw@plt+0x17478>  // b.pmore
  419fd8:	mov	w1, #0x1ecb                	// #7883
  419fdc:	cmp	w0, w1
  419fe0:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  419fe4:	sub	w0, w0, #0x1, lsl #12
  419fe8:	sub	w0, w0, #0xe72
  419fec:	cmp	w0, #0x9
  419ff0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  419ff4:	b	41951c <nftw@plt+0x1699c>
  419ff8:	sub	w0, w0, #0x1, lsl #12
  419ffc:	sub	w0, w0, #0xee4
  41a000:	cmp	w0, #0x3
  41a004:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a008:	b	41951c <nftw@plt+0x1699c>
  41a00c:	cmp	w0, #0x233
  41a010:	b.hi	41a040 <nftw@plt+0x174c0>  // b.pmore
  41a014:	cmp	w0, #0x40
  41a018:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a01c:	sub	w0, w0, #0x41
  41a020:	cmp	w0, #0x1f2
  41a024:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a028:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  41a02c:	add	x1, x1, #0x610
  41a030:	ldrh	w0, [x1, w0, uxtw #1]
  41a034:	adr	x1, 41a040 <nftw@plt+0x174c0>
  41a038:	add	x0, x1, w0, sxth #2
  41a03c:	br	x0
  41a040:	sub	w1, w0, #0x1, lsl #12
  41a044:	sub	w1, w1, #0xe02
  41a048:	cmp	w1, #0xf7
  41a04c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a050:	sub	w0, w0, #0x1, lsl #12
  41a054:	sub	w0, w0, #0xe02
  41a058:	cmp	w0, #0xf7
  41a05c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a060:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  41a064:	add	x1, x1, #0x9f8
  41a068:	ldrh	w0, [x1, w0, uxtw #1]
  41a06c:	adr	x1, 41a078 <nftw@plt+0x174f8>
  41a070:	add	x0, x1, w0, sxth #2
  41a074:	br	x0
  41a078:	cmp	w0, #0x171
  41a07c:	b.hi	41a0b8 <nftw@plt+0x17538>  // b.pmore
  41a080:	cmp	w0, #0x167
  41a084:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a088:	cmp	w0, #0xdc
  41a08c:	b.hi	41a0a8 <nftw@plt+0x17528>  // b.pmore
  41a090:	cmp	w0, #0xd8
  41a094:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a098:	and	w0, w0, #0xffffffdf
  41a09c:	cmp	w0, #0x55
  41a0a0:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41a0a4:	b	41951c <nftw@plt+0x1699c>
  41a0a8:	sub	w0, w0, #0xf9
  41a0ac:	cmp	w0, #0x3
  41a0b0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a0b4:	b	41951c <nftw@plt+0x1699c>
  41a0b8:	mov	w1, #0x1e7b                	// #7803
  41a0bc:	cmp	w0, w1
  41a0c0:	b.hi	41a0f4 <nftw@plt+0x17574>  // b.pmore
  41a0c4:	mov	w1, #0x1e77                	// #7799
  41a0c8:	cmp	w0, w1
  41a0cc:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a0d0:	cmp	w0, #0x1dc
  41a0d4:	b.hi	41a0e4 <nftw@plt+0x17564>  // b.pmore
  41a0d8:	cmp	w0, #0x1d2
  41a0dc:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a0e0:	b	41951c <nftw@plt+0x1699c>
  41a0e4:	sub	w0, w0, #0x214
  41a0e8:	cmp	w0, #0x3
  41a0ec:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a0f0:	b	41951c <nftw@plt+0x1699c>
  41a0f4:	sub	w0, w0, #0x1, lsl #12
  41a0f8:	sub	w0, w0, #0xee6
  41a0fc:	cmp	w0, #0x1
  41a100:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a104:	b	41951c <nftw@plt+0x1699c>
  41a108:	cmp	w0, #0x1e1
  41a10c:	b.hi	41a174 <nftw@plt+0x175f4>  // b.pmore
  41a110:	cmp	w0, #0x1dd
  41a114:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a118:	cmp	w0, #0xe5
  41a11c:	b.hi	41a150 <nftw@plt+0x175d0>  // b.pmore
  41a120:	cmp	w0, #0xdf
  41a124:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a128:	cmp	w0, #0x61
  41a12c:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41a130:	b.ls	41a144 <nftw@plt+0x175c4>  // b.plast
  41a134:	sub	w0, w0, #0xc0
  41a138:	cmp	w0, #0x5
  41a13c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a140:	b	41951c <nftw@plt+0x1699c>
  41a144:	cmp	w0, #0x41
  41a148:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41a14c:	b	41951c <nftw@plt+0x1699c>
  41a150:	cmp	w0, #0x103
  41a154:	b.hi	41a164 <nftw@plt+0x175e4>  // b.pmore
  41a158:	cmp	w0, #0xff
  41a15c:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a160:	b	41951c <nftw@plt+0x1699c>
  41a164:	sub	w0, w0, #0x1cd
  41a168:	cmp	w0, #0x1
  41a16c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a170:	b	41951c <nftw@plt+0x1699c>
  41a174:	cmp	w0, #0x227
  41a178:	b.hi	41a1a4 <nftw@plt+0x17624>  // b.pmore
  41a17c:	cmp	w0, #0x1f9
  41a180:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a184:	sub	w1, w0, #0x1fa
  41a188:	mov	x0, #0x1                   	// #1
  41a18c:	lsl	x0, x0, x1
  41a190:	mov	x1, #0x3c3                 	// #963
  41a194:	movk	x1, #0x3000, lsl #32
  41a198:	tst	x0, x1
  41a19c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a1a0:	b	41951c <nftw@plt+0x1699c>
  41a1a4:	mov	w1, #0x1eab                	// #7851
  41a1a8:	cmp	w0, w1
  41a1ac:	b.hi	41a1c0 <nftw@plt+0x17640>  // b.pmore
  41a1b0:	mov	w1, #0x1ea1                	// #7841
  41a1b4:	cmp	w0, w1
  41a1b8:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a1bc:	b	41951c <nftw@plt+0x1699c>
  41a1c0:	sub	w0, w0, #0x1, lsl #12
  41a1c4:	sub	w0, w0, #0xeae
  41a1c8:	cmp	w0, #0x7
  41a1cc:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a1d0:	b	41951c <nftw@plt+0x1699c>
  41a1d4:	cmp	w0, #0x165
  41a1d8:	b.hi	41a224 <nftw@plt+0x176a4>  // b.pmore
  41a1dc:	cmp	w0, #0x159
  41a1e0:	b.hi	41a1f8 <nftw@plt+0x17678>  // b.pmore
  41a1e4:	cmp	w0, #0x54
  41a1e8:	b.hi	41a214 <nftw@plt+0x17694>  // b.pmore
  41a1ec:	cmp	w0, #0x52
  41a1f0:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a1f4:	b	41951c <nftw@plt+0x1699c>
  41a1f8:	sub	w1, w0, #0x15a
  41a1fc:	mov	x0, #0x1                   	// #1
  41a200:	lsl	x0, x0, x1
  41a204:	mov	x1, #0xccf                 	// #3279
  41a208:	tst	x0, x1
  41a20c:	b.ne	41951c <nftw@plt+0x1699c>  // b.any
  41a210:	b	419374 <nftw@plt+0x167f4>
  41a214:	sub	w0, w0, #0x73
  41a218:	cmp	w0, #0x1
  41a21c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a220:	b	41951c <nftw@plt+0x1699c>
  41a224:	sub	w1, w0, #0x1, lsl #12
  41a228:	sub	w1, w1, #0xe60
  41a22c:	cmp	w1, #0x37
  41a230:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a234:	mov	x0, #0x1                   	// #1
  41a238:	lsl	x0, x0, x1
  41a23c:	mov	x1, #0xcf3                 	// #3315
  41a240:	movk	x1, #0x80, lsl #48
  41a244:	tst	x0, x1
  41a248:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a24c:	b	41951c <nftw@plt+0x1699c>
  41a250:	cmp	w0, #0x21f
  41a254:	b.hi	41a284 <nftw@plt+0x17704>  // b.pmore
  41a258:	cmp	w0, #0x42
  41a25c:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a260:	sub	w0, w0, #0x43
  41a264:	cmp	w0, #0x1dc
  41a268:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a26c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  41a270:	add	x1, x1, #0xbe8
  41a274:	ldrh	w0, [x1, w0, uxtw #1]
  41a278:	adr	x1, 41a284 <nftw@plt+0x17704>
  41a27c:	add	x0, x1, w0, sxth #2
  41a280:	br	x0
  41a284:	mov	w1, #0x1e3d                	// #7741
  41a288:	cmp	w0, w1
  41a28c:	b.hi	41a2c8 <nftw@plt+0x17748>  // b.pmore
  41a290:	mov	w1, #0x1e09                	// #7689
  41a294:	cmp	w0, w1
  41a298:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a29c:	sub	w1, w0, #0x1, lsl #12
  41a2a0:	sub	w1, w1, #0xe0a
  41a2a4:	mov	x0, #0x1                   	// #1
  41a2a8:	lsl	x0, x0, x1
  41a2ac:	mov	x1, #0xff3f                	// #65343
  41a2b0:	movk	x1, #0x3fc3, lsl #16
  41a2b4:	movk	x1, #0xffc3, lsl #32
  41a2b8:	movk	x1, #0xf, lsl #48
  41a2bc:	tst	x0, x1
  41a2c0:	b.ne	41951c <nftw@plt+0x1699c>  // b.any
  41a2c4:	b	419374 <nftw@plt+0x167f4>
  41a2c8:	mov	w1, #0x1e97                	// #7831
  41a2cc:	cmp	w0, w1
  41a2d0:	b.hi	41a310 <nftw@plt+0x17790>  // b.pmore
  41a2d4:	mov	w1, #0x1e95                	// #7829
  41a2d8:	cmp	w0, w1
  41a2dc:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a2e0:	mov	w1, #0x1e4b                	// #7755
  41a2e4:	cmp	w0, w1
  41a2e8:	b.hi	41a2fc <nftw@plt+0x1777c>  // b.pmore
  41a2ec:	mov	w1, #0x1e43                	// #7747
  41a2f0:	cmp	w0, w1
  41a2f4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a2f8:	b	41951c <nftw@plt+0x1699c>
  41a2fc:	sub	w0, w0, #0x1, lsl #12
  41a300:	sub	w0, w0, #0xe58
  41a304:	cmp	w0, #0x19
  41a308:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a30c:	b	41951c <nftw@plt+0x1699c>
  41a310:	sub	w0, w0, #0x1, lsl #12
  41a314:	sub	w0, w0, #0xeb8
  41a318:	cmp	w0, #0xf
  41a31c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a320:	b	41951c <nftw@plt+0x1699c>
  41a324:	cmp	w0, #0x231
  41a328:	b.hi	41a388 <nftw@plt+0x17808>  // b.pmore
  41a32c:	cmp	w0, #0xbf
  41a330:	b.hi	41a364 <nftw@plt+0x177e4>  // b.pmore
  41a334:	sub	w1, w0, #0x41
  41a338:	cmp	w1, #0x34
  41a33c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a340:	mov	x0, #0x1                   	// #1
  41a344:	lsl	x0, x0, x1
  41a348:	mov	x1, #0x4111                	// #16657
  41a34c:	movk	x1, #0x10, lsl #16
  41a350:	movk	x1, #0x4111, lsl #32
  41a354:	movk	x1, #0x10, lsl #48
  41a358:	tst	x0, x1
  41a35c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a360:	b	41951c <nftw@plt+0x1699c>
  41a364:	sub	w0, w0, #0xc0
  41a368:	cmp	w0, #0x171
  41a36c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a370:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x149fc>
  41a374:	add	x1, x1, #0xfa4
  41a378:	ldrh	w0, [x1, w0, uxtw #1]
  41a37c:	adr	x1, 41a388 <nftw@plt+0x17808>
  41a380:	add	x0, x1, w0, sxth #2
  41a384:	br	x0
  41a388:	mov	w1, #0x1e53                	// #7763
  41a38c:	cmp	w0, w1
  41a390:	b.hi	41a3d0 <nftw@plt+0x17850>  // b.pmore
  41a394:	mov	w1, #0x1e4b                	// #7755
  41a398:	cmp	w0, w1
  41a39c:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a3a0:	sub	w1, w0, #0x1, lsl #12
  41a3a4:	sub	w1, w1, #0xe00
  41a3a8:	cmp	w1, #0x2f
  41a3ac:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a3b0:	mov	x0, #0x1                   	// #1
  41a3b4:	lsl	x0, x0, x1
  41a3b8:	mov	x1, #0x3                   	// #3
  41a3bc:	movk	x1, #0xff0, lsl #16
  41a3c0:	movk	x1, #0xf000, lsl #32
  41a3c4:	tst	x0, x1
  41a3c8:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a3cc:	b	41951c <nftw@plt+0x1699c>
  41a3d0:	mov	w1, #0x1e7b                	// #7803
  41a3d4:	cmp	w0, w1
  41a3d8:	b.hi	41a3ec <nftw@plt+0x1786c>  // b.pmore
  41a3dc:	mov	w1, #0x1e71                	// #7793
  41a3e0:	cmp	w0, w1
  41a3e4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a3e8:	b	41951c <nftw@plt+0x1699c>
  41a3ec:	sub	w0, w0, #0x1, lsl #12
  41a3f0:	sub	w0, w0, #0xea0
  41a3f4:	cmp	w0, #0x51
  41a3f8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a3fc:	b	41951c <nftw@plt+0x1699c>
  41a400:	cmp	w0, #0x171
  41a404:	b.hi	41a458 <nftw@plt+0x178d8>  // b.pmore
  41a408:	cmp	w0, #0x43
  41a40c:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a410:	sub	w0, w0, #0x44
  41a414:	cmp	w0, #0x12d
  41a418:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a41c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x159fc>
  41a420:	add	x1, x1, #0x288
  41a424:	ldrh	w0, [x1, w0, uxtw #1]
  41a428:	adr	x1, 41a434 <nftw@plt+0x178b4>
  41a42c:	add	x0, x1, w0, sxth #2
  41a430:	br	x0
  41a434:	sub	w1, w0, #0x1, lsl #12
  41a438:	sub	w1, w1, #0xe0a
  41a43c:	mov	x0, #0x1                   	// #1
  41a440:	lsl	x0, x0, x1
  41a444:	mov	x1, #0x3c03                	// #15363
  41a448:	movk	x1, #0xc00, lsl #48
  41a44c:	tst	x0, x1
  41a450:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a454:	b	41951c <nftw@plt+0x1699c>
  41a458:	mov	w1, #0x1e45                	// #7749
  41a45c:	cmp	w0, w1
  41a460:	b.hi	41a4ac <nftw@plt+0x1792c>  // b.pmore
  41a464:	mov	w1, #0x1e09                	// #7689
  41a468:	cmp	w0, w1
  41a46c:	b.hi	41a434 <nftw@plt+0x178b4>  // b.pmore
  41a470:	cmp	w0, #0x1dc
  41a474:	b.ls	41a4a0 <nftw@plt+0x17920>  // b.plast
  41a478:	sub	w1, w0, #0x1f8
  41a47c:	cmp	w1, #0x1f
  41a480:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a484:	mov	x0, #0x1                   	// #1
  41a488:	lsl	x0, x0, x1
  41a48c:	mov	x1, #0xf003                	// #61443
  41a490:	movk	x1, #0xf000, lsl #16
  41a494:	tst	x0, x1
  41a498:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a49c:	b	41951c <nftw@plt+0x1699c>
  41a4a0:	cmp	w0, #0x1d2
  41a4a4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a4a8:	b	41951c <nftw@plt+0x1699c>
  41a4ac:	mov	w1, #0x1e97                	// #7831
  41a4b0:	cmp	w0, w1
  41a4b4:	b.hi	41a4ec <nftw@plt+0x1796c>  // b.pmore
  41a4b8:	mov	w1, #0x1e69                	// #7785
  41a4bc:	cmp	w0, w1
  41a4c0:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a4c4:	sub	w1, w0, #0x1, lsl #12
  41a4c8:	sub	w1, w1, #0xe6a
  41a4cc:	mov	x0, #0x1                   	// #1
  41a4d0:	lsl	x0, x0, x1
  41a4d4:	mov	x1, #0xc003                	// #49155
  41a4d8:	movk	x1, #0x3, lsl #16
  41a4dc:	movk	x1, #0x2000, lsl #32
  41a4e0:	tst	x0, x1
  41a4e4:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a4e8:	b	41951c <nftw@plt+0x1699c>
  41a4ec:	mov	w1, #0x1ec5                	// #7877
  41a4f0:	cmp	w0, w1
  41a4f4:	b.hi	41a508 <nftw@plt+0x17988>  // b.pmore
  41a4f8:	mov	w1, #0x1eb9                	// #7865
  41a4fc:	cmp	w0, w1
  41a500:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a504:	b	41951c <nftw@plt+0x1699c>
  41a508:	sub	w0, w0, #0x1, lsl #12
  41a50c:	sub	w0, w0, #0xee6
  41a510:	cmp	w0, #0x1
  41a514:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a518:	b	41951c <nftw@plt+0x1699c>
  41a51c:	cmp	w0, #0x21f
  41a520:	b.hi	41a554 <nftw@plt+0x179d4>  // b.pmore
  41a524:	cmp	w0, #0x21d
  41a528:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a52c:	cmp	w0, #0x68
  41a530:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41a534:	b.ls	41a548 <nftw@plt+0x179c8>  // b.plast
  41a538:	sub	w0, w0, #0x124
  41a53c:	cmp	w0, #0x1
  41a540:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a544:	b	41951c <nftw@plt+0x1699c>
  41a548:	cmp	w0, #0x48
  41a54c:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41a550:	b	41951c <nftw@plt+0x1699c>
  41a554:	mov	w1, #0x1e23                	// #7715
  41a558:	cmp	w0, w1
  41a55c:	b.hi	41a570 <nftw@plt+0x179f0>  // b.pmore
  41a560:	mov	w1, #0x1e21                	// #7713
  41a564:	cmp	w0, w1
  41a568:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a56c:	b	41951c <nftw@plt+0x1699c>
  41a570:	sub	w0, w0, #0x1, lsl #12
  41a574:	sub	w0, w0, #0xe26
  41a578:	cmp	w0, #0x1
  41a57c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a580:	b	41951c <nftw@plt+0x1699c>
  41a584:	cmp	w0, #0x130
  41a588:	b.hi	41a640 <nftw@plt+0x17ac0>  // b.pmore
  41a58c:	cmp	w0, #0xf8
  41a590:	b.hi	41a5f0 <nftw@plt+0x17a70>  // b.pmore
  41a594:	cmp	w0, #0x75
  41a598:	b.hi	41a618 <nftw@plt+0x17a98>  // b.pmore
  41a59c:	cmp	w0, #0x44
  41a5a0:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a5a4:	sub	w1, w0, #0x45
  41a5a8:	mov	x0, #0x1                   	// #1
  41a5ac:	lsl	x0, x0, x1
  41a5b0:	mov	x1, #0x11                  	// #17
  41a5b4:	movk	x1, #0x1, lsl #16
  41a5b8:	movk	x1, #0x11, lsl #32
  41a5bc:	movk	x1, #0x1, lsl #48
  41a5c0:	tst	x0, x1
  41a5c4:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a5c8:	b	41951c <nftw@plt+0x1699c>
  41a5cc:	sub	w1, w0, #0x1, lsl #12
  41a5d0:	sub	w1, w1, #0xeba
  41a5d4:	mov	x0, #0x1                   	// #1
  41a5d8:	lsl	x0, x0, x1
  41a5dc:	mov	x1, #0xcfff                	// #53247
  41a5e0:	movk	x1, #0x3000, lsl #32
  41a5e4:	tst	x0, x1
  41a5e8:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a5ec:	b	41951c <nftw@plt+0x1699c>
  41a5f0:	sub	w1, w0, #0xf9
  41a5f4:	mov	x0, #0x1                   	// #1
  41a5f8:	lsl	x0, x0, x1
  41a5fc:	mov	x1, #0xf                   	// #15
  41a600:	movk	x1, #0x7e00, lsl #16
  41a604:	movk	x1, #0x8006, lsl #32
  41a608:	movk	x1, #0x9f, lsl #48
  41a60c:	tst	x0, x1
  41a610:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a614:	b	41951c <nftw@plt+0x1699c>
  41a618:	sub	w1, w0, #0xc8
  41a61c:	cmp	w1, #0x27
  41a620:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a624:	mov	x0, #0x1                   	// #1
  41a628:	lsl	x0, x0, x1
  41a62c:	mov	x1, #0xff000000ff          	// #1095216660735
  41a630:	movk	x1, #0x1e, lsl #16
  41a634:	tst	x0, x1
  41a638:	b.ne	41951c <nftw@plt+0x1699c>  // b.any
  41a63c:	b	419374 <nftw@plt+0x167f4>
  41a640:	mov	w1, #0x1e17                	// #7703
  41a644:	cmp	w0, w1
  41a648:	b.hi	41a6b0 <nftw@plt+0x17b30>  // b.pmore
  41a64c:	mov	w1, #0x1e13                	// #7699
  41a650:	cmp	w0, w1
  41a654:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a658:	cmp	w0, #0x1dc
  41a65c:	b.hi	41a68c <nftw@plt+0x17b0c>  // b.pmore
  41a660:	cmp	w0, #0x1d2
  41a664:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a668:	cmp	w0, #0x171
  41a66c:	b.hi	41a67c <nftw@plt+0x17afc>  // b.pmore
  41a670:	cmp	w0, #0x167
  41a674:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a678:	b	41951c <nftw@plt+0x1699c>
  41a67c:	sub	w0, w0, #0x1cf
  41a680:	cmp	w0, #0x1
  41a684:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a688:	b	41951c <nftw@plt+0x1699c>
  41a68c:	cmp	w0, #0x20b
  41a690:	b.hi	41a6a0 <nftw@plt+0x17b20>  // b.pmore
  41a694:	cmp	w0, #0x203
  41a698:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a69c:	b	41951c <nftw@plt+0x1699c>
  41a6a0:	sub	w0, w0, #0x214
  41a6a4:	cmp	w0, #0x3
  41a6a8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a6ac:	b	41951c <nftw@plt+0x1699c>
  41a6b0:	mov	w1, #0x1ee7                	// #7911
  41a6b4:	cmp	w0, w1
  41a6b8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a6bc:	mov	w1, #0x1eb9                	// #7865
  41a6c0:	cmp	w0, w1
  41a6c4:	b.hi	41a5cc <nftw@plt+0x17a4c>  // b.pmore
  41a6c8:	mov	w1, #0x1e2f                	// #7727
  41a6cc:	cmp	w0, w1
  41a6d0:	b.hi	41a6e4 <nftw@plt+0x17b64>  // b.pmore
  41a6d4:	mov	w1, #0x1e2d                	// #7725
  41a6d8:	cmp	w0, w1
  41a6dc:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a6e0:	b	41951c <nftw@plt+0x1699c>
  41a6e4:	sub	w0, w0, #0x1, lsl #12
  41a6e8:	sub	w0, w0, #0xe78
  41a6ec:	cmp	w0, #0x3
  41a6f0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a6f4:	b	41951c <nftw@plt+0x1699c>
  41a6f8:	cmp	w0, #0x13e
  41a6fc:	b.hi	41a7a0 <nftw@plt+0x17c20>  // b.pmore
  41a700:	cmp	w0, #0x10d
  41a704:	b.hi	41a768 <nftw@plt+0x17be8>  // b.pmore
  41a708:	cmp	w0, #0x7a
  41a70c:	b.hi	41a790 <nftw@plt+0x17c10>  // b.pmore
  41a710:	cmp	w0, #0x41
  41a714:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a718:	sub	w1, w0, #0x42
  41a71c:	mov	x0, #0x1                   	// #1
  41a720:	lsl	x0, x0, x1
  41a724:	mov	x1, #0x1605                	// #5637
  41a728:	movk	x1, #0x105, lsl #16
  41a72c:	movk	x1, #0x1645, lsl #32
  41a730:	movk	x1, #0x105, lsl #48
  41a734:	tst	x0, x1
  41a738:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a73c:	b	41951c <nftw@plt+0x1699c>
  41a740:	sub	w1, w0, #0x1, lsl #12
  41a744:	sub	w1, w1, #0xe23
  41a748:	mov	x0, #0x1                   	// #1
  41a74c:	lsl	x0, x0, x1
  41a750:	mov	x1, #0x6011                	// #24593
  41a754:	movk	x1, #0x6, lsl #32
  41a758:	movk	x1, #0x60, lsl #48
  41a75c:	tst	x0, x1
  41a760:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a764:	b	41951c <nftw@plt+0x1699c>
  41a768:	sub	w1, w0, #0x10e
  41a76c:	mov	x0, #0x1                   	// #1
  41a770:	lsl	x0, x0, x1
  41a774:	mov	x1, #0x3                   	// #3
  41a778:	movk	x1, #0x80, lsl #16
  41a77c:	movk	x1, #0x9800, lsl #32
  41a780:	movk	x1, #0x1, lsl #48
  41a784:	tst	x0, x1
  41a788:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a78c:	b	41951c <nftw@plt+0x1699c>
  41a790:	and	w0, w0, #0xffffffdf
  41a794:	cmp	w0, #0xd1
  41a798:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41a79c:	b	41951c <nftw@plt+0x1699c>
  41a7a0:	mov	w1, #0x1e03                	// #7683
  41a7a4:	cmp	w0, w1
  41a7a8:	b.hi	41a820 <nftw@plt+0x17ca0>  // b.pmore
  41a7ac:	mov	w1, #0x1e01                	// #7681
  41a7b0:	cmp	w0, w1
  41a7b4:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a7b8:	cmp	w0, #0x17e
  41a7bc:	b.hi	41a7f0 <nftw@plt+0x17c70>  // b.pmore
  41a7c0:	cmp	w0, #0x142
  41a7c4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a7c8:	sub	w1, w0, #0x143
  41a7cc:	mov	x0, #0x1                   	// #1
  41a7d0:	lsl	x0, x0, x1
  41a7d4:	mov	x1, #0x33                  	// #51
  41a7d8:	movk	x1, #0x66, lsl #16
  41a7dc:	movk	x1, #0x6, lsl #32
  41a7e0:	movk	x1, #0xfc0, lsl #48
  41a7e4:	tst	x0, x1
  41a7e8:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a7ec:	b	41951c <nftw@plt+0x1699c>
  41a7f0:	sub	w1, w0, #0x1e8
  41a7f4:	cmp	w1, #0x37
  41a7f8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a7fc:	mov	x0, #0x1                   	// #1
  41a800:	lsl	x0, x0, x1
  41a804:	mov	x1, #0x3                   	// #3
  41a808:	movk	x1, #0x3, lsl #16
  41a80c:	movk	x1, #0xf00, lsl #32
  41a810:	movk	x1, #0x80, lsl #48
  41a814:	tst	x0, x1
  41a818:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a81c:	b	41951c <nftw@plt+0x1699c>
  41a820:	mov	w1, #0x1e59                	// #7769
  41a824:	cmp	w0, w1
  41a828:	b.hi	41a84c <nftw@plt+0x17ccc>  // b.pmore
  41a82c:	mov	w1, #0x1e22                	// #7714
  41a830:	cmp	w0, w1
  41a834:	b.hi	41a740 <nftw@plt+0x17bc0>  // b.pmore
  41a838:	sub	w0, w0, #0x1, lsl #12
  41a83c:	sub	w0, w0, #0xe0a
  41a840:	cmp	w0, #0x1
  41a844:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a848:	b	41951c <nftw@plt+0x1699c>
  41a84c:	sub	w1, w0, #0x1, lsl #12
  41a850:	sub	w1, w1, #0xe6a
  41a854:	cmp	w1, #0x2d
  41a858:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a85c:	mov	x0, #0x1                   	// #1
  41a860:	lsl	x0, x0, x1
  41a864:	mov	x1, #0x3                   	// #3
  41a868:	movk	x1, #0x20c0, lsl #32
  41a86c:	tst	x0, x1
  41a870:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a874:	b	41951c <nftw@plt+0x1699c>
  41a878:	mov	w1, #0x1ffe                	// #8190
  41a87c:	cmp	w0, w1
  41a880:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a884:	mov	w1, #0x1eff                	// #7935
  41a888:	cmp	w0, w1
  41a88c:	b.ls	41a8b8 <nftw@plt+0x17d38>  // b.plast
  41a890:	sub	w0, w0, #0x1, lsl #12
  41a894:	sub	w0, w0, #0xf00
  41a898:	cmp	w0, #0xfe
  41a89c:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a8a0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x159fc>
  41a8a4:	add	x1, x1, #0x4e4
  41a8a8:	ldrh	w0, [x1, w0, uxtw #1]
  41a8ac:	adr	x1, 41a8b8 <nftw@plt+0x17d38>
  41a8b0:	add	x0, x1, w0, sxth #2
  41a8b4:	br	x0
  41a8b8:	cmp	w0, #0xa8
  41a8bc:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41a8c0:	sub	w1, w0, #0x3b1
  41a8c4:	cmp	w1, #0x1a
  41a8c8:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a8cc:	mov	x0, #0x1                   	// #1
  41a8d0:	lsl	x0, x0, x1
  41a8d4:	mov	x1, #0x141                 	// #321
  41a8d8:	movk	x1, #0x710, lsl #16
  41a8dc:	tst	x0, x1
  41a8e0:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a8e4:	b	41951c <nftw@plt+0x1699c>
  41a8e8:	cmp	w0, #0x3ce
  41a8ec:	b.hi	41a920 <nftw@plt+0x17da0>  // b.pmore
  41a8f0:	cmp	w0, #0x390
  41a8f4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a8f8:	sub	w1, w0, #0x391
  41a8fc:	mov	x0, #0x1                   	// #1
  41a900:	lsl	x0, x0, x1
  41a904:	mov	x1, #0x41                  	// #65
  41a908:	movk	x1, #0x2900, lsl #16
  41a90c:	movk	x1, #0x41, lsl #32
  41a910:	movk	x1, #0x2100, lsl #48
  41a914:	tst	x0, x1
  41a918:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a91c:	b	41951c <nftw@plt+0x1699c>
  41a920:	mov	w1, #0x1f7c                	// #8060
  41a924:	cmp	w0, w1
  41a928:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41a92c:	b.ls	41a950 <nftw@plt+0x17dd0>  // b.plast
  41a930:	mov	w1, #0x1fc6                	// #8134
  41a934:	cmp	w0, w1
  41a938:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41a93c:	and	w0, w0, #0xffffffbf
  41a940:	mov	w1, #0x1fb6                	// #8118
  41a944:	cmp	w0, w1
  41a948:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41a94c:	b	41951c <nftw@plt+0x1699c>
  41a950:	mov	w1, #0x1f70                	// #8048
  41a954:	cmp	w0, w1
  41a958:	b.hi	41a998 <nftw@plt+0x17e18>  // b.pmore
  41a95c:	mov	w1, #0x1f5f                	// #8031
  41a960:	cmp	w0, w1
  41a964:	b.hi	41951c <nftw@plt+0x1699c>  // b.pmore
  41a968:	mov	w1, #0x1f0f                	// #7951
  41a96c:	cmp	w0, w1
  41a970:	b.hi	41a984 <nftw@plt+0x17e04>  // b.pmore
  41a974:	mov	w1, #0x1eff                	// #7935
  41a978:	cmp	w0, w1
  41a97c:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a980:	b	41951c <nftw@plt+0x1699c>
  41a984:	sub	w0, w0, #0x1, lsl #12
  41a988:	sub	w0, w0, #0xf20
  41a98c:	cmp	w0, #0xf
  41a990:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a994:	b	41951c <nftw@plt+0x1699c>
  41a998:	mov	w1, #0x1f74                	// #8052
  41a99c:	cmp	w0, w1
  41a9a0:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41a9a4:	b	41951c <nftw@plt+0x1699c>
  41a9a8:	cmp	w0, #0x64a
  41a9ac:	b.hi	41a9d8 <nftw@plt+0x17e58>  // b.pmore
  41a9b0:	cmp	w0, #0x626
  41a9b4:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41a9b8:	sub	w1, w0, #0x627
  41a9bc:	mov	x0, #0x1                   	// #1
  41a9c0:	lsl	x0, x0, x1
  41a9c4:	mov	x1, #0x1                   	// #1
  41a9c8:	movk	x1, #0xa, lsl #32
  41a9cc:	tst	x0, x1
  41a9d0:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a9d4:	b	41951c <nftw@plt+0x1699c>
  41a9d8:	sub	w1, w0, #0x6c1
  41a9dc:	cmp	w1, #0x14
  41a9e0:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41a9e4:	mov	x0, #0x1                   	// #1
  41a9e8:	lsl	x0, x0, x1
  41a9ec:	mov	x1, #0x1                   	// #1
  41a9f0:	movk	x1, #0x12, lsl #16
  41a9f4:	tst	x0, x1
  41a9f8:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41a9fc:	b	41951c <nftw@plt+0x1699c>
  41aa00:	cmp	w0, #0x627
  41aa04:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41aa08:	b	419374 <nftw@plt+0x167f4>
  41aa0c:	sub	w1, w0, #0x915
  41aa10:	cmp	w1, #0x1e
  41aa14:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41aa18:	mov	x0, #0x1                   	// #1
  41aa1c:	lsl	x0, x0, x1
  41aa20:	mov	x1, #0x3087                	// #12423
  41aa24:	movk	x1, #0x4c48, lsl #16
  41aa28:	tst	x0, x1
  41aa2c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41aa30:	b	41951c <nftw@plt+0x1699c>
  41aa34:	cmp	w0, #0x9c7
  41aa38:	cset	w0, ne  // ne = any
  41aa3c:	b	419518 <nftw@plt+0x16998>
  41aa40:	cmp	w0, #0xb47
  41aa44:	cset	w0, ne  // ne = any
  41aa48:	b	419518 <nftw@plt+0x16998>
  41aa4c:	cmp	w0, #0xb47
  41aa50:	cset	w0, ne  // ne = any
  41aa54:	b	419518 <nftw@plt+0x16998>
  41aa58:	cmp	w0, #0xb92
  41aa5c:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41aa60:	cmp	w0, #0xbc6
  41aa64:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41aa68:	b	41951c <nftw@plt+0x1699c>
  41aa6c:	cmp	w0, #0xc46
  41aa70:	cset	w0, ne  // ne = any
  41aa74:	b	419518 <nftw@plt+0x16998>
  41aa78:	sub	w1, w0, #0xcbf
  41aa7c:	cmp	w1, #0xb
  41aa80:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41aa84:	mov	x0, #0x1                   	// #1
  41aa88:	lsl	x0, x0, x1
  41aa8c:	mov	x1, #0x881                 	// #2177
  41aa90:	tst	x0, x1
  41aa94:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41aa98:	b	41951c <nftw@plt+0x1699c>
  41aa9c:	sub	w0, w0, #0xd46
  41aaa0:	cmp	w0, #0x1
  41aaa4:	cset	w0, hi  // hi = pmore
  41aaa8:	b	419518 <nftw@plt+0x16998>
  41aaac:	cmp	w0, #0xdd9
  41aab0:	b.eq	41951c <nftw@plt+0x1699c>  // b.none
  41aab4:	cmp	w0, #0xddc
  41aab8:	b.ne	419374 <nftw@plt+0x167f4>  // b.any
  41aabc:	b	41951c <nftw@plt+0x1699c>
  41aac0:	sub	w0, w0, #0xdd9
  41aac4:	cmp	w0, #0x1
  41aac8:	cset	w0, hi  // hi = pmore
  41aacc:	b	419518 <nftw@plt+0x16998>
  41aad0:	mov	w1, #0x1025                	// #4133
  41aad4:	cmp	w0, w1
  41aad8:	cset	w0, ne  // ne = any
  41aadc:	b	419518 <nftw@plt+0x16998>
  41aae0:	sub	w1, w0, #0x1, lsl #12
  41aae4:	sub	w1, w1, #0xb05
  41aae8:	cmp	w1, #0x3d
  41aaec:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41aaf0:	mov	x0, #0x1                   	// #1
  41aaf4:	lsl	x0, x0, x1
  41aaf8:	mov	x1, #0x1155                	// #4437
  41aafc:	movk	x1, #0x26a0, lsl #48
  41ab00:	tst	x0, x1
  41ab04:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41ab08:	b	41951c <nftw@plt+0x1699c>
  41ab0c:	mov	w1, #0x307b                	// #12411
  41ab10:	cmp	w0, w1
  41ab14:	b.hi	41ab44 <nftw@plt+0x17fc4>  // b.pmore
  41ab18:	mov	w1, #0x306e                	// #12398
  41ab1c:	cmp	w0, w1
  41ab20:	b.ls	419374 <nftw@plt+0x167f4>  // b.plast
  41ab24:	sub	w1, w0, #0x3, lsl #12
  41ab28:	sub	w1, w1, #0x6f
  41ab2c:	mov	x0, #0x1                   	// #1
  41ab30:	lsl	x0, x0, x1
  41ab34:	mov	x1, #0x1249                	// #4681
  41ab38:	tst	x0, x1
  41ab3c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41ab40:	b	41951c <nftw@plt+0x1699c>
  41ab44:	sub	w1, w0, #0x3, lsl #12
  41ab48:	sub	w1, w1, #0xcf
  41ab4c:	cmp	w1, #0xc
  41ab50:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41ab54:	mov	x0, #0x1                   	// #1
  41ab58:	lsl	x0, x0, x1
  41ab5c:	mov	x1, #0x1249                	// #4681
  41ab60:	tst	x0, x1
  41ab64:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41ab68:	b	41951c <nftw@plt+0x1699c>
  41ab6c:	sub	w1, w0, #0x11, lsl #12
  41ab70:	sub	w1, w1, #0x99
  41ab74:	cmp	w1, #0xc
  41ab78:	b.hi	419374 <nftw@plt+0x167f4>  // b.pmore
  41ab7c:	mov	x0, #0x1                   	// #1
  41ab80:	lsl	x0, x0, x1
  41ab84:	mov	x1, #0x1005                	// #4101
  41ab88:	tst	x0, x1
  41ab8c:	b.eq	419374 <nftw@plt+0x167f4>  // b.none
  41ab90:	b	41951c <nftw@plt+0x1699c>
  41ab94:	mov	w3, w20
  41ab98:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41ab9c:	add	x2, x2, #0x348
  41aba0:	mov	w1, #0x4                   	// #4
  41aba4:	mov	x0, x28
  41aba8:	bl	41f990 <nftw@plt+0x1ce10>
  41abac:	b	419374 <nftw@plt+0x167f4>
  41abb0:	mov	w2, #0x1                   	// #1
  41abb4:	cbz	w2, 41951c <nftw@plt+0x1699c>
  41abb8:	b	419374 <nftw@plt+0x167f4>
  41abbc:	ldr	x2, [sp, #136]
  41abc0:	ldr	w0, [x2, #8]
  41abc4:	cmp	w0, #0x2
  41abc8:	mov	w1, #0x2                   	// #2
  41abcc:	csel	w0, w0, w1, ge  // ge = tcont
  41abd0:	str	w0, [x2, #8]
  41abd4:	b	419374 <nftw@plt+0x167f4>
  41abd8:	tbnz	w21, #7, 419374 <nftw@plt+0x167f4>
  41abdc:	tbz	w21, #6, 41abf8 <nftw@plt+0x18078>
  41abe0:	ldr	x1, [sp, #136]
  41abe4:	ldr	w0, [x1, #8]
  41abe8:	cmp	w0, #0x0
  41abec:	csinc	w0, w0, wzr, gt
  41abf0:	str	w0, [x1, #8]
  41abf4:	b	419374 <nftw@plt+0x167f4>
  41abf8:	tbz	w21, #5, 41ac18 <nftw@plt+0x18098>
  41abfc:	ldr	x2, [sp, #136]
  41ac00:	ldr	w0, [x2, #8]
  41ac04:	cmp	w0, #0x2
  41ac08:	mov	w1, #0x2                   	// #2
  41ac0c:	csel	w0, w0, w1, ge  // ge = tcont
  41ac10:	str	w0, [x2, #8]
  41ac14:	b	419374 <nftw@plt+0x167f4>
  41ac18:	mov	w0, #0x3                   	// #3
  41ac1c:	ldr	x1, [sp, #136]
  41ac20:	str	w0, [x1, #8]
  41ac24:	b	419374 <nftw@plt+0x167f4>
  41ac28:	sbfiz	x0, x3, #3, #32
  41ac2c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x159fc>
  41ac30:	add	x1, x1, #0x878
  41ac34:	ldrh	w21, [x1, x0]
  41ac38:	mov	w23, #0x10                  	// #16
  41ac3c:	tbnz	w21, #3, 419314 <nftw@plt+0x16794>
  41ac40:	b	419158 <nftw@plt+0x165d8>
  41ac44:	sub	w0, w20, #0xd, lsl #12
  41ac48:	sub	w0, w0, #0x800
  41ac4c:	cmp	w0, #0x7ff
  41ac50:	b.ls	4191b0 <nftw@plt+0x16630>  // b.plast
  41ac54:	b	419144 <nftw@plt+0x165c4>
  41ac58:	stp	x29, x30, [sp, #-384]!
  41ac5c:	mov	x29, sp
  41ac60:	stp	x19, x20, [sp, #16]
  41ac64:	stp	x21, x22, [sp, #32]
  41ac68:	stp	x23, x24, [sp, #48]
  41ac6c:	str	x0, [sp, #112]
  41ac70:	mov	x19, x1
  41ac74:	str	x2, [sp, #184]
  41ac78:	str	x3, [sp, #136]
  41ac7c:	mov	w1, w4
  41ac80:	mov	x21, x5
  41ac84:	str	x5, [sp, #192]
  41ac88:	mov	x20, x6
  41ac8c:	str	x6, [sp, #104]
  41ac90:	add	x8, sp, #0x150
  41ac94:	bl	417954 <nftw@plt+0x14dd4>
  41ac98:	ldr	x23, [sp, #336]
  41ac9c:	ldr	x24, [sp, #344]
  41aca0:	cmp	x20, #0x0
  41aca4:	cset	w1, ne  // ne = any
  41aca8:	str	w1, [sp, #176]
  41acac:	cmp	x21, #0x0
  41acb0:	cset	w0, ne  // ne = any
  41acb4:	cmp	w0, w1
  41acb8:	b.ne	41ad2c <nftw@plt+0x181ac>  // b.any
  41acbc:	ldr	x0, [sp, #136]
  41acc0:	cbz	x0, 41b848 <nftw@plt+0x18cc8>
  41acc4:	ldr	w0, [x19]
  41acc8:	cmp	w0, #0x100
  41accc:	mov	w1, #0x100                 	// #256
  41acd0:	csel	w0, w0, w1, cs  // cs = hs, nlast
  41acd4:	str	x0, [sp, #368]
  41acd8:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41acdc:	str	x0, [sp, #360]
  41ace0:	str	xzr, [sp, #376]
  41ace4:	ldr	x0, [sp, #184]
  41ace8:	cbz	x0, 41b750 <nftw@plt+0x18bd0>
  41acec:	stp	x25, x26, [sp, #64]
  41acf0:	stp	x27, x28, [sp, #80]
  41acf4:	ldr	x0, [sp, #136]
  41acf8:	cmp	x0, #0x0
  41acfc:	add	x27, sp, #0x168
  41ad00:	csel	x27, x27, xzr, ne  // ne = any
  41ad04:	add	x0, x19, #0x8
  41ad08:	str	x0, [sp, #152]
  41ad0c:	mov	x21, #0x0                   	// #0
  41ad10:	str	xzr, [sp, #160]
  41ad14:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x159fc>
  41ad18:	add	x0, x0, #0x798
  41ad1c:	str	x0, [sp, #200]
  41ad20:	add	x0, x0, #0x10
  41ad24:	str	x0, [sp, #144]
  41ad28:	b	41ae88 <nftw@plt+0x18308>
  41ad2c:	stp	x25, x26, [sp, #64]
  41ad30:	stp	x27, x28, [sp, #80]
  41ad34:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41ad38:	add	x2, x2, #0x3e8
  41ad3c:	mov	w1, #0x5fc                 	// #1532
  41ad40:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41ad44:	add	x0, x0, #0x2b8
  41ad48:	bl	408d8c <nftw@plt+0x620c>
  41ad4c:	add	x19, x20, #0x1
  41ad50:	cbz	x21, 41ad7c <nftw@plt+0x181fc>
  41ad54:	mov	x0, x21
  41ad58:	bl	418eec <nftw@plt+0x1636c>
  41ad5c:	ldrb	w0, [x20, #1]
  41ad60:	cmp	w0, #0x38
  41ad64:	b.eq	41b7c8 <nftw@plt+0x18c48>  // b.none
  41ad68:	ldrb	w0, [x20, #1]
  41ad6c:	cmp	w0, #0x52
  41ad70:	b.eq	41b820 <nftw@plt+0x18ca0>  // b.none
  41ad74:	mov	x20, x19
  41ad78:	b	41aed0 <nftw@plt+0x18350>
  41ad7c:	ldrb	w0, [x20, #1]
  41ad80:	cmp	w0, #0x38
  41ad84:	b.eq	41ad9c <nftw@plt+0x1821c>  // b.none
  41ad88:	ldrb	w0, [x20, #1]
  41ad8c:	cmp	w0, #0x52
  41ad90:	b.eq	41b814 <nftw@plt+0x18c94>  // b.none
  41ad94:	mov	x20, x19
  41ad98:	b	41aed0 <nftw@plt+0x18350>
  41ad9c:	add	x20, x20, #0x2
  41ada0:	b	41aec4 <nftw@plt+0x18344>
  41ada4:	add	x26, x20, #0x2
  41ada8:	cbnz	x21, 41b824 <nftw@plt+0x18ca4>
  41adac:	ldrb	w0, [x20, #2]
  41adb0:	cmp	w0, #0x28
  41adb4:	b.ne	41b840 <nftw@plt+0x18cc0>  // b.any
  41adb8:	add	x20, x20, #0x3
  41adbc:	b	41adf4 <nftw@plt+0x18274>
  41adc0:	ldrb	w0, [x19]
  41adc4:	cmp	w0, #0x28
  41adc8:	b.eq	41ade4 <nftw@plt+0x18264>  // b.none
  41adcc:	mov	x20, x19
  41add0:	add	x19, x19, #0x1
  41add4:	cbz	x21, 41adc0 <nftw@plt+0x18240>
  41add8:	mov	x0, x21
  41addc:	bl	418eec <nftw@plt+0x1636c>
  41ade0:	b	41adc0 <nftw@plt+0x18240>
  41ade4:	add	x20, x20, #0x2
  41ade8:	cbz	x21, 41adf4 <nftw@plt+0x18274>
  41adec:	mov	x0, x21
  41adf0:	bl	418eec <nftw@plt+0x1636c>
  41adf4:	ldur	w19, [x25, #-8]
  41adf8:	ldr	x0, [x25]
  41adfc:	add	x19, x0, x19
  41ae00:	sub	x26, x20, x26
  41ae04:	add	x1, x26, #0x1
  41ae08:	add	x1, x20, x1
  41ae0c:	mvn	x26, x26
  41ae10:	add	x0, x19, x26
  41ae14:	cmp	x19, x1
  41ae18:	csel	x19, x0, x19, cs  // cs = hs, nlast
  41ae1c:	ldr	x0, [sp, #136]
  41ae20:	cbz	x0, 41ae40 <nftw@plt+0x182c0>
  41ae24:	add	x3, sp, #0x168
  41ae28:	sub	x2, x19, x20
  41ae2c:	mov	x1, x20
  41ae30:	mov	x0, x24
  41ae34:	blr	x23
  41ae38:	and	w0, w0, #0xff
  41ae3c:	cbz	w0, 41b758 <nftw@plt+0x18bd8>
  41ae40:	cbz	x21, 41ae64 <nftw@plt+0x182e4>
  41ae44:	adrp	x0, 417000 <nftw@plt+0x14480>
  41ae48:	add	x0, x0, #0xf60
  41ae4c:	cmp	x23, x0
  41ae50:	b.ne	41af04 <nftw@plt+0x18384>  // b.any
  41ae54:	mov	x2, x21
  41ae58:	sub	w1, w19, w20
  41ae5c:	ldr	x0, [sp, #104]
  41ae60:	bl	418f14 <nftw@plt+0x16394>
  41ae64:	ldr	x0, [sp, #160]
  41ae68:	add	x0, x0, #0x1
  41ae6c:	str	x0, [sp, #160]
  41ae70:	ldr	x1, [sp, #152]
  41ae74:	add	x1, x1, #0x10
  41ae78:	str	x1, [sp, #152]
  41ae7c:	ldr	x1, [sp, #184]
  41ae80:	cmp	x1, x0
  41ae84:	b.eq	41b6c4 <nftw@plt+0x18b44>  // b.none
  41ae88:	ldr	x0, [sp, #160]
  41ae8c:	ldr	x1, [sp, #192]
  41ae90:	add	x0, x1, x0, lsl #4
  41ae94:	cmp	x1, #0x0
  41ae98:	csel	x21, x0, x21, ne  // ne = any
  41ae9c:	ldr	x0, [sp, #152]
  41aea0:	mov	x25, x0
  41aea4:	ldr	x20, [x0]
  41aea8:	ldrb	w0, [x20]
  41aeac:	cmp	w0, #0x75
  41aeb0:	b.eq	41ad4c <nftw@plt+0x181cc>  // b.none
  41aeb4:	cmp	w0, #0x4c
  41aeb8:	mov	w1, #0x55                  	// #85
  41aebc:	ccmp	w0, w1, #0x4, ne  // ne = any
  41aec0:	cinc	x20, x20, eq  // eq = none
  41aec4:	ldrb	w0, [x20]
  41aec8:	cmp	w0, #0x52
  41aecc:	b.eq	41ada4 <nftw@plt+0x18224>  // b.none
  41aed0:	cmp	w0, #0x27
  41aed4:	mov	w1, #0x22                  	// #34
  41aed8:	ccmp	w0, w1, #0x4, ne  // ne = any
  41aedc:	b.ne	41af1c <nftw@plt+0x1839c>  // b.any
  41aee0:	add	x20, x20, #0x1
  41aee4:	cbz	x21, 41aef0 <nftw@plt+0x18370>
  41aee8:	mov	x0, x21
  41aeec:	bl	418eec <nftw@plt+0x1636c>
  41aef0:	ldur	w0, [x25, #-8]
  41aef4:	sub	x0, x0, #0x1
  41aef8:	ldr	x19, [x25]
  41aefc:	add	x19, x19, x0
  41af00:	b	41b508 <nftw@plt+0x18988>
  41af04:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41af08:	add	x2, x2, #0x3e8
  41af0c:	mov	w1, #0x641                 	// #1601
  41af10:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41af14:	add	x0, x0, #0x2b8
  41af18:	bl	408d8c <nftw@plt+0x620c>
  41af1c:	ldr	x0, [sp, #104]
  41af20:	cbz	x0, 41af5c <nftw@plt+0x183dc>
  41af24:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41af28:	add	x2, x2, #0x400
  41af2c:	mov	w1, #0x3                   	// #3
  41af30:	ldr	x0, [sp, #112]
  41af34:	bl	41f990 <nftw@plt+0x1ce10>
  41af38:	mov	w0, #0x0                   	// #0
  41af3c:	ldr	x1, [sp, #136]
  41af40:	cbz	x1, 41b858 <nftw@plt+0x18cd8>
  41af44:	ldr	x0, [sp, #360]
  41af48:	bl	402910 <free@plt>
  41af4c:	mov	w0, #0x0                   	// #0
  41af50:	ldp	x25, x26, [sp, #64]
  41af54:	ldp	x27, x28, [sp, #80]
  41af58:	b	41b780 <nftw@plt+0x18c00>
  41af5c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41af60:	add	x2, x2, #0x3e8
  41af64:	mov	w1, #0x64d                 	// #1613
  41af68:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41af6c:	add	x0, x0, #0x2b8
  41af70:	bl	408d8c <nftw@plt+0x620c>
  41af74:	cmp	x20, x25
  41af78:	b.cc	41b530 <nftw@plt+0x189b0>  // b.lo, b.ul, b.last
  41af7c:	cmp	x19, x25
  41af80:	b.ls	41ae64 <nftw@plt+0x182e4>  // b.plast
  41af84:	add	x26, x25, #0x1
  41af88:	str	x23, [sp, #336]
  41af8c:	str	x24, [sp, #344]
  41af90:	ldp	x0, x1, [sp, #336]
  41af94:	add	x2, sp, #0x200
  41af98:	stp	x0, x1, [x2, #-232]
  41af9c:	ldr	x0, [sp, #352]
  41afa0:	str	x0, [sp, #296]
  41afa4:	cbz	x21, 41b5b4 <nftw@plt+0x18a34>
  41afa8:	b	41b5a0 <nftw@plt+0x18a20>
  41afac:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41afb0:	add	x2, x2, #0x3e8
  41afb4:	mov	w1, #0x66c                 	// #1644
  41afb8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41afbc:	add	x0, x0, #0x2b8
  41afc0:	bl	408d8c <nftw@plt+0x620c>
  41afc4:	str	x26, [sp, #264]
  41afc8:	ldr	x0, [sp, #120]
  41afcc:	bfi	x22, x0, #32, #32
  41afd0:	str	x22, [sp, #272]
  41afd4:	str	wzr, [sp, #304]
  41afd8:	strb	wzr, [sp, #308]
  41afdc:	str	wzr, [sp, #312]
  41afe0:	cmp	x21, #0x0
  41afe4:	cset	w0, ne  // ne = any
  41afe8:	ldr	w1, [sp, #176]
  41afec:	cmp	w0, w1
  41aff0:	b.ne	41b0b4 <nftw@plt+0x18534>  // b.any
  41aff4:	add	x25, x25, #0x2
  41aff8:	str	x25, [sp, #264]
  41affc:	cbz	x21, 41b010 <nftw@plt+0x18490>
  41b000:	mov	x0, x21
  41b004:	bl	418eec <nftw@plt+0x1636c>
  41b008:	lsr	x0, x0, #32
  41b00c:	str	w0, [sp, #276]
  41b010:	mov	x7, x21
  41b014:	add	x6, sp, #0x110
  41b018:	add	x5, sp, #0xf4
  41b01c:	add	x4, sp, #0x130
  41b020:	mov	w3, #0x0                   	// #0
  41b024:	mov	x2, x19
  41b028:	add	x1, sp, #0x108
  41b02c:	ldr	x0, [sp, #112]
  41b030:	bl	418f70 <nftw@plt+0x163f0>
  41b034:	ldr	w0, [sp, #244]
  41b038:	cmp	w0, #0x7f
  41b03c:	b.hi	41b0cc <nftw@plt+0x1854c>  // b.pmore
  41b040:	strb	w0, [sp, #261]
  41b044:	add	x0, sp, #0x105
  41b048:	mov	x20, #0x1                   	// #1
  41b04c:	add	x1, sp, #0xf8
  41b050:	add	x3, sp, #0x106
  41b054:	ldrb	w2, [x0], #1
  41b058:	strb	w2, [x1], #1
  41b05c:	cmp	x0, x3
  41b060:	b.ne	41b054 <nftw@plt+0x184d4>  // b.any
  41b064:	cbz	x27, 41b084 <nftw@plt+0x18504>
  41b068:	mov	x3, x27
  41b06c:	mov	x2, x20
  41b070:	add	x1, sp, #0xf8
  41b074:	mov	x0, x24
  41b078:	blr	x23
  41b07c:	and	w0, w0, #0xff
  41b080:	cbz	w0, 41b13c <nftw@plt+0x185bc>
  41b084:	cbz	x21, 41b0ac <nftw@plt+0x1852c>
  41b088:	cmp	w20, #0x0
  41b08c:	b.le	41b0ac <nftw@plt+0x1852c>
  41b090:	mov	w25, #0x0                   	// #0
  41b094:	ldr	x1, [sp, #272]
  41b098:	ldr	x0, [sp, #104]
  41b09c:	bl	418a60 <nftw@plt+0x15ee0>
  41b0a0:	add	w25, w25, #0x1
  41b0a4:	cmp	w20, w25
  41b0a8:	b.ne	41b094 <nftw@plt+0x18514>  // b.any
  41b0ac:	ldr	x20, [sp, #264]
  41b0b0:	b	41b508 <nftw@plt+0x18988>
  41b0b4:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b0b8:	add	x2, x2, #0x418
  41b0bc:	mov	w1, #0x48d                 	// #1165
  41b0c0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b0c4:	add	x0, x0, #0x2b8
  41b0c8:	bl	408d8c <nftw@plt+0x620c>
  41b0cc:	add	x3, sp, #0x106
  41b0d0:	mov	x20, #0x1                   	// #1
  41b0d4:	mov	x1, x3
  41b0d8:	and	w2, w0, #0x3f
  41b0dc:	orr	w2, w2, #0xffffff80
  41b0e0:	strb	w2, [x3, #-1]!
  41b0e4:	lsr	w0, w0, #6
  41b0e8:	mov	x2, x20
  41b0ec:	add	x20, x20, #0x1
  41b0f0:	cmp	w0, #0x3e
  41b0f4:	b.hi	41b0d4 <nftw@plt+0x18554>  // b.pmore
  41b0f8:	ldr	x4, [sp, #144]
  41b0fc:	add	x4, x4, x20
  41b100:	ldurb	w4, [x4, #-1]
  41b104:	tst	w4, w0
  41b108:	b.ne	41b0d4 <nftw@plt+0x18554>  // b.any
  41b10c:	ldr	x3, [sp, #200]
  41b110:	add	x3, x3, #0x18
  41b114:	ldrb	w2, [x3, x2]
  41b118:	orr	w0, w0, w2
  41b11c:	sturb	w0, [x1, #-2]
  41b120:	cmp	x20, #0x6
  41b124:	b.hi	41b79c <nftw@plt+0x18c1c>  // b.pmore
  41b128:	sub	x0, x1, #0x2
  41b12c:	add	x1, sp, #0x106
  41b130:	cmp	x0, x1
  41b134:	b.cc	41b04c <nftw@plt+0x184cc>  // b.lo, b.ul, b.last
  41b138:	b	41b064 <nftw@plt+0x184e4>
  41b13c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b140:	add	x2, x2, #0x428
  41b144:	mov	w1, #0x3                   	// #3
  41b148:	ldr	x0, [sp, #112]
  41b14c:	bl	41fe9c <nftw@plt+0x1d31c>
  41b150:	b	41b084 <nftw@plt+0x18504>
  41b154:	str	x23, [sp, #280]
  41b158:	str	x24, [sp, #288]
  41b15c:	add	x0, sp, #0x200
  41b160:	ldp	x0, x1, [x0, #-232]
  41b164:	stp	x0, x1, [sp, #304]
  41b168:	ldr	x0, [sp, #296]
  41b16c:	str	x0, [sp, #320]
  41b170:	ldr	w0, [sp, #296]
  41b174:	str	w0, [sp, #180]
  41b178:	ldr	x1, [sp, #120]
  41b17c:	bfi	x22, x1, #32, #32
  41b180:	mov	x28, x22
  41b184:	sxtw	x0, w0
  41b188:	cmp	x0, #0x20
  41b18c:	mov	x1, #0x20                  	// #32
  41b190:	csel	x0, x0, x1, ls  // ls = plast
  41b194:	mov	x1, #0x1                   	// #1
  41b198:	lsl	x0, x1, x0
  41b19c:	sub	x0, x0, #0x1
  41b1a0:	str	x0, [sp, #168]
  41b1a4:	cmp	x21, #0x0
  41b1a8:	cset	w0, ne  // ne = any
  41b1ac:	ldr	w1, [sp, #176]
  41b1b0:	cmp	w0, w1
  41b1b4:	b.ne	41b200 <nftw@plt+0x18680>  // b.any
  41b1b8:	ldr	x0, [sp, #112]
  41b1bc:	ldrb	w0, [x0, #1138]
  41b1c0:	cbnz	w0, 41b218 <nftw@plt+0x18698>
  41b1c4:	add	x20, x25, #0x2
  41b1c8:	cbz	x21, 41b1dc <nftw@plt+0x1865c>
  41b1cc:	mov	x0, x21
  41b1d0:	bl	418eec <nftw@plt+0x1636c>
  41b1d4:	lsr	x0, x0, #32
  41b1d8:	bfi	x28, x0, #32, #32
  41b1dc:	cmp	x19, x20
  41b1e0:	b.ls	41b284 <nftw@plt+0x18704>  // b.plast
  41b1e4:	mov	w1, #0x0                   	// #0
  41b1e8:	str	wzr, [sp, #96]
  41b1ec:	mov	w25, #0x0                   	// #0
  41b1f0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  41b1f4:	add	x0, x0, #0xb50
  41b1f8:	str	x0, [sp, #128]
  41b1fc:	b	41b250 <nftw@plt+0x186d0>
  41b200:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b204:	add	x2, x2, #0x458
  41b208:	mov	w1, #0x4f9                 	// #1273
  41b20c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b210:	add	x0, x0, #0x2b8
  41b214:	bl	408d8c <nftw@plt+0x620c>
  41b218:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b21c:	add	x2, x2, #0x468
  41b220:	mov	w1, #0x6                   	// #6
  41b224:	ldr	x0, [sp, #112]
  41b228:	bl	41fa08 <nftw@plt+0x1ce88>
  41b22c:	b	41b1c4 <nftw@plt+0x18644>
  41b230:	and	w0, w25, #0xf0000000
  41b234:	ldr	w1, [sp, #96]
  41b238:	orr	w0, w1, w0
  41b23c:	str	w0, [sp, #96]
  41b240:	add	w25, w26, w25, lsl #4
  41b244:	mov	w1, #0x1                   	// #1
  41b248:	cmp	x19, x20
  41b24c:	b.eq	41b29c <nftw@plt+0x1871c>  // b.none
  41b250:	ldrb	w0, [x20]
  41b254:	ldr	x2, [sp, #128]
  41b258:	ldrb	w26, [x2, w0, sxtw]
  41b25c:	cmp	w26, #0x63
  41b260:	b.eq	41b280 <nftw@plt+0x18700>  // b.none
  41b264:	add	x20, x20, #0x1
  41b268:	cbz	x21, 41b230 <nftw@plt+0x186b0>
  41b26c:	mov	x0, x21
  41b270:	bl	418eec <nftw@plt+0x1636c>
  41b274:	lsr	x0, x0, #32
  41b278:	bfi	x28, x0, #32, #32
  41b27c:	b	41b230 <nftw@plt+0x186b0>
  41b280:	cbnz	w1, 41b2a0 <nftw@plt+0x18720>
  41b284:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b288:	add	x2, x2, #0x4a0
  41b28c:	mov	w1, #0x3                   	// #3
  41b290:	ldr	x0, [sp, #112]
  41b294:	bl	41f990 <nftw@plt+0x1ce10>
  41b298:	b	41b508 <nftw@plt+0x18988>
  41b29c:	mov	x20, x19
  41b2a0:	ldr	w0, [sp, #168]
  41b2a4:	and	w0, w25, w0
  41b2a8:	cmp	x0, w25, uxtw
  41b2ac:	cset	w0, ne  // ne = any
  41b2b0:	ldr	w1, [sp, #96]
  41b2b4:	orr	w0, w0, w1
  41b2b8:	cbnz	w0, 41b300 <nftw@plt+0x18780>
  41b2bc:	cbz	x27, 41b2ec <nftw@plt+0x1876c>
  41b2c0:	ldr	w0, [sp, #180]
  41b2c4:	str	w0, [sp, #320]
  41b2c8:	ldp	x0, x1, [sp, #304]
  41b2cc:	stp	x0, x1, [sp, #208]
  41b2d0:	ldr	x0, [sp, #320]
  41b2d4:	str	x0, [sp, #224]
  41b2d8:	add	x3, sp, #0xd0
  41b2dc:	mov	x2, x27
  41b2e0:	mov	w1, w25
  41b2e4:	ldr	x0, [sp, #112]
  41b2e8:	bl	417e40 <nftw@plt+0x152c0>
  41b2ec:	ldr	x0, [sp, #104]
  41b2f0:	cbz	x0, 41b508 <nftw@plt+0x18988>
  41b2f4:	mov	x1, x28
  41b2f8:	bl	418a60 <nftw@plt+0x15ee0>
  41b2fc:	b	41b508 <nftw@plt+0x18988>
  41b300:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b304:	add	x2, x2, #0x4c8
  41b308:	mov	w1, #0x2                   	// #2
  41b30c:	ldr	x0, [sp, #112]
  41b310:	bl	41f990 <nftw@plt+0x1ce10>
  41b314:	ldr	w0, [sp, #168]
  41b318:	and	w25, w25, w0
  41b31c:	b	41b2bc <nftw@plt+0x1873c>
  41b320:	str	x23, [sp, #280]
  41b324:	str	x24, [sp, #288]
  41b328:	add	x0, sp, #0x200
  41b32c:	ldp	x0, x1, [x0, #-232]
  41b330:	stp	x0, x1, [sp, #304]
  41b334:	ldr	x0, [sp, #296]
  41b338:	str	x0, [sp, #320]
  41b33c:	ldr	w0, [sp, #296]
  41b340:	str	w0, [sp, #168]
  41b344:	ldr	x1, [sp, #120]
  41b348:	bfi	x22, x1, #32, #32
  41b34c:	str	x22, [sp, #96]
  41b350:	sxtw	x0, w0
  41b354:	cmp	x0, #0x20
  41b358:	mov	x1, #0x20                  	// #32
  41b35c:	csel	x0, x0, x1, ls  // ls = plast
  41b360:	mov	x1, #0x1                   	// #1
  41b364:	lsl	x0, x1, x0
  41b368:	sub	x0, x0, #0x1
  41b36c:	str	x0, [sp, #128]
  41b370:	cmp	x21, #0x0
  41b374:	cset	w0, ne  // ne = any
  41b378:	ldr	w1, [sp, #176]
  41b37c:	cmp	w0, w1
  41b380:	b.ne	41b398 <nftw@plt+0x18818>  // b.any
  41b384:	cmp	x19, x26
  41b388:	b.ls	41b474 <nftw@plt+0x188f4>  // b.plast
  41b38c:	add	x20, x25, #0x4
  41b390:	mov	w25, #0x0                   	// #0
  41b394:	b	41b3c8 <nftw@plt+0x18848>
  41b398:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b39c:	add	x2, x2, #0x4f0
  41b3a0:	mov	w1, #0x540                 	// #1344
  41b3a4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b3a8:	add	x0, x0, #0x2b8
  41b3ac:	bl	408d8c <nftw@plt+0x620c>
  41b3b0:	add	w25, w28, w25, lsl #3
  41b3b4:	sub	w25, w25, #0x30
  41b3b8:	cmp	x19, x26
  41b3bc:	b.eq	41b3fc <nftw@plt+0x1887c>  // b.none
  41b3c0:	cmp	x20, x26
  41b3c4:	b.eq	41b408 <nftw@plt+0x18888>  // b.none
  41b3c8:	ldrb	w28, [x26]
  41b3cc:	sub	w0, w28, #0x30
  41b3d0:	cmp	w0, #0x7
  41b3d4:	b.hi	41b404 <nftw@plt+0x18884>  // b.pmore
  41b3d8:	add	x26, x26, #0x1
  41b3dc:	cbz	x21, 41b3b0 <nftw@plt+0x18830>
  41b3e0:	mov	x0, x21
  41b3e4:	bl	418eec <nftw@plt+0x1636c>
  41b3e8:	lsr	x0, x0, #32
  41b3ec:	ldr	x1, [sp, #96]
  41b3f0:	bfi	x1, x0, #32, #32
  41b3f4:	str	x1, [sp, #96]
  41b3f8:	b	41b3b0 <nftw@plt+0x18830>
  41b3fc:	mov	x20, x19
  41b400:	b	41b408 <nftw@plt+0x18888>
  41b404:	mov	x20, x26
  41b408:	ldr	x26, [sp, #128]
  41b40c:	and	w0, w25, w26
  41b410:	cmp	x0, w25, uxtw
  41b414:	b.eq	41b430 <nftw@plt+0x188b0>  // b.none
  41b418:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b41c:	add	x2, x2, #0x500
  41b420:	mov	w1, #0x2                   	// #2
  41b424:	ldr	x0, [sp, #112]
  41b428:	bl	41f990 <nftw@plt+0x1ce10>
  41b42c:	and	w25, w25, w26
  41b430:	cbz	x27, 41b460 <nftw@plt+0x188e0>
  41b434:	ldr	w0, [sp, #168]
  41b438:	str	w0, [sp, #320]
  41b43c:	ldp	x0, x1, [sp, #304]
  41b440:	stp	x0, x1, [sp, #208]
  41b444:	ldr	x0, [sp, #320]
  41b448:	str	x0, [sp, #224]
  41b44c:	add	x3, sp, #0xd0
  41b450:	mov	x2, x27
  41b454:	mov	w1, w25
  41b458:	ldr	x0, [sp, #112]
  41b45c:	bl	417e40 <nftw@plt+0x152c0>
  41b460:	ldr	x0, [sp, #104]
  41b464:	cbz	x0, 41b508 <nftw@plt+0x18988>
  41b468:	ldr	x1, [sp, #96]
  41b46c:	bl	418a60 <nftw@plt+0x15ee0>
  41b470:	b	41b508 <nftw@plt+0x18988>
  41b474:	mov	x20, x26
  41b478:	mov	w25, #0x0                   	// #0
  41b47c:	b	41b430 <nftw@plt+0x188b0>
  41b480:	ldr	x0, [sp, #112]
  41b484:	ldrb	w0, [x0, #1154]
  41b488:	cbz	w0, 41b4c4 <nftw@plt+0x18944>
  41b48c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  41b490:	add	x0, x0, #0xe68
  41b494:	ldrh	w0, [x0, w3, sxtw #1]
  41b498:	mov	w1, #0xac                  	// #172
  41b49c:	tst	w1, w0
  41b4a0:	b.eq	41b67c <nftw@plt+0x18afc>  // b.none
  41b4a4:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b4a8:	add	x2, x2, #0x588
  41b4ac:	mov	w1, #0x2                   	// #2
  41b4b0:	ldr	x0, [sp, #112]
  41b4b4:	bl	41f990 <nftw@plt+0x1ce10>
  41b4b8:	b	41b4c4 <nftw@plt+0x18944>
  41b4bc:	mov	w0, #0x8                   	// #8
  41b4c0:	strb	w0, [sp, #243]
  41b4c4:	cbz	x27, 41b4e4 <nftw@plt+0x18964>
  41b4c8:	mov	x3, x27
  41b4cc:	mov	x2, #0x1                   	// #1
  41b4d0:	add	x1, sp, #0xf3
  41b4d4:	mov	x0, x24
  41b4d8:	blr	x23
  41b4dc:	and	w0, w0, #0xff
  41b4e0:	cbz	w0, 41b6ac <nftw@plt+0x18b2c>
  41b4e4:	cbz	x21, 41b504 <nftw@plt+0x18984>
  41b4e8:	mov	x0, x21
  41b4ec:	bl	418eec <nftw@plt+0x1636c>
  41b4f0:	lsr	x0, x0, #32
  41b4f4:	bfi	x22, x0, #32, #32
  41b4f8:	mov	x1, x22
  41b4fc:	ldr	x0, [sp, #104]
  41b500:	bl	418a60 <nftw@plt+0x15ee0>
  41b504:	add	x20, x25, #0x2
  41b508:	cmp	x20, x19
  41b50c:	b.cs	41ae64 <nftw@plt+0x182e4>  // b.hs, b.nlast
  41b510:	mov	x25, x20
  41b514:	ldrb	w0, [x25]
  41b518:	cmp	w0, #0x5c
  41b51c:	b.eq	41af74 <nftw@plt+0x183f4>  // b.none
  41b520:	add	x25, x25, #0x1
  41b524:	cmp	x19, x25
  41b528:	b.ne	41b514 <nftw@plt+0x18994>  // b.any
  41b52c:	mov	x25, x19
  41b530:	ldr	x0, [sp, #136]
  41b534:	cbz	x0, 41b554 <nftw@plt+0x189d4>
  41b538:	add	x3, sp, #0x168
  41b53c:	sub	x2, x25, x20
  41b540:	mov	x1, x20
  41b544:	mov	x0, x24
  41b548:	blr	x23
  41b54c:	and	w0, w0, #0xff
  41b550:	cbz	w0, 41b758 <nftw@plt+0x18bd8>
  41b554:	cbz	x21, 41b7e8 <nftw@plt+0x18c68>
  41b558:	adrp	x0, 417000 <nftw@plt+0x14480>
  41b55c:	add	x0, x0, #0xf60
  41b560:	cmp	x23, x0
  41b564:	b.ne	41afac <nftw@plt+0x1842c>  // b.any
  41b568:	mov	x2, x21
  41b56c:	sub	w1, w25, w20
  41b570:	ldr	x0, [sp, #104]
  41b574:	bl	418f14 <nftw@plt+0x16394>
  41b578:	cmp	x19, x25
  41b57c:	b.ls	41ae64 <nftw@plt+0x182e4>  // b.plast
  41b580:	add	x26, x25, #0x1
  41b584:	str	x23, [sp, #336]
  41b588:	str	x24, [sp, #344]
  41b58c:	ldp	x0, x1, [sp, #336]
  41b590:	add	x2, sp, #0x200
  41b594:	stp	x0, x1, [x2, #-232]
  41b598:	ldr	x0, [sp, #352]
  41b59c:	str	x0, [sp, #296]
  41b5a0:	mov	x0, x21
  41b5a4:	bl	418eec <nftw@plt+0x1636c>
  41b5a8:	mov	x22, x0
  41b5ac:	lsr	x0, x0, #32
  41b5b0:	str	x0, [sp, #120]
  41b5b4:	ldrb	w3, [x25, #1]
  41b5b8:	strb	w3, [sp, #243]
  41b5bc:	sub	w0, w3, #0x22
  41b5c0:	cmp	w0, #0x59
  41b5c4:	b.hi	41b48c <nftw@plt+0x1890c>  // b.pmore
  41b5c8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x159fc>
  41b5cc:	add	x1, x1, #0x6e4
  41b5d0:	ldrh	w0, [x1, w0, uxtw #1]
  41b5d4:	adr	x1, 41b5e0 <nftw@plt+0x18a60>
  41b5d8:	add	x0, x1, w0, sxth #2
  41b5dc:	br	x0
  41b5e0:	mov	w0, #0xc                   	// #12
  41b5e4:	strb	w0, [sp, #243]
  41b5e8:	b	41b4c4 <nftw@plt+0x18944>
  41b5ec:	mov	w0, #0xa                   	// #10
  41b5f0:	strb	w0, [sp, #243]
  41b5f4:	b	41b4c4 <nftw@plt+0x18944>
  41b5f8:	mov	w0, #0xd                   	// #13
  41b5fc:	strb	w0, [sp, #243]
  41b600:	b	41b4c4 <nftw@plt+0x18944>
  41b604:	mov	w0, #0x9                   	// #9
  41b608:	strb	w0, [sp, #243]
  41b60c:	b	41b4c4 <nftw@plt+0x18944>
  41b610:	mov	w0, #0xb                   	// #11
  41b614:	strb	w0, [sp, #243]
  41b618:	b	41b4c4 <nftw@plt+0x18944>
  41b61c:	ldr	x0, [sp, #112]
  41b620:	ldrb	w0, [x0, #1138]
  41b624:	cbnz	w0, 41b634 <nftw@plt+0x18ab4>
  41b628:	mov	w0, #0x7                   	// #7
  41b62c:	strb	w0, [sp, #243]
  41b630:	b	41b4c4 <nftw@plt+0x18944>
  41b634:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b638:	add	x2, x2, #0x528
  41b63c:	mov	w1, #0x6                   	// #6
  41b640:	ldr	x0, [sp, #112]
  41b644:	bl	41fa08 <nftw@plt+0x1ce88>
  41b648:	b	41b628 <nftw@plt+0x18aa8>
  41b64c:	ldr	x0, [sp, #112]
  41b650:	ldrb	w0, [x0, #1154]
  41b654:	cbnz	w0, 41b664 <nftw@plt+0x18ae4>
  41b658:	mov	w0, #0x1b                  	// #27
  41b65c:	strb	w0, [sp, #243]
  41b660:	b	41b4c4 <nftw@plt+0x18944>
  41b664:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b668:	add	x2, x2, #0x560
  41b66c:	mov	w1, #0x2                   	// #2
  41b670:	ldr	x0, [sp, #112]
  41b674:	bl	41f990 <nftw@plt+0x1ce10>
  41b678:	b	41b658 <nftw@plt+0x18ad8>
  41b67c:	mov	w2, w3
  41b680:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b684:	add	x1, x1, #0x5a8
  41b688:	add	x0, sp, #0x130
  41b68c:	bl	4025b0 <sprintf@plt>
  41b690:	add	x3, sp, #0x130
  41b694:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b698:	add	x2, x2, #0x5b0
  41b69c:	mov	w1, #0x2                   	// #2
  41b6a0:	ldr	x0, [sp, #112]
  41b6a4:	bl	41f990 <nftw@plt+0x1ce10>
  41b6a8:	b	41b4c4 <nftw@plt+0x18944>
  41b6ac:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b6b0:	add	x2, x2, #0x5d0
  41b6b4:	mov	w1, #0x3                   	// #3
  41b6b8:	ldr	x0, [sp, #112]
  41b6bc:	bl	41fe9c <nftw@plt+0x1d31c>
  41b6c0:	b	41b4e4 <nftw@plt+0x18964>
  41b6c4:	ldr	x0, [sp, #136]
  41b6c8:	cbz	x0, 41b744 <nftw@plt+0x18bc4>
  41b6cc:	ldp	x25, x26, [sp, #64]
  41b6d0:	ldp	x27, x28, [sp, #80]
  41b6d4:	str	x23, [sp, #336]
  41b6d8:	str	x24, [sp, #344]
  41b6dc:	ldp	x0, x1, [sp, #336]
  41b6e0:	stp	x0, x1, [sp, #208]
  41b6e4:	ldr	x0, [sp, #352]
  41b6e8:	str	x0, [sp, #224]
  41b6ec:	add	x3, sp, #0xd0
  41b6f0:	add	x2, sp, #0x168
  41b6f4:	mov	w1, #0x0                   	// #0
  41b6f8:	ldr	x0, [sp, #112]
  41b6fc:	bl	417e40 <nftw@plt+0x152c0>
  41b700:	ldr	x1, [sp, #376]
  41b704:	ldr	x0, [sp, #360]
  41b708:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41b70c:	str	x0, [sp, #360]
  41b710:	ldr	x1, [sp, #136]
  41b714:	str	x0, [x1, #8]
  41b718:	ldr	x0, [sp, #376]
  41b71c:	str	w0, [x1]
  41b720:	mov	w0, #0x1                   	// #1
  41b724:	cbz	x21, 41b780 <nftw@plt+0x18c00>
  41b728:	mov	x0, x21
  41b72c:	bl	418eec <nftw@plt+0x1636c>
  41b730:	mov	x1, x0
  41b734:	ldr	x0, [sp, #104]
  41b738:	bl	418a60 <nftw@plt+0x15ee0>
  41b73c:	mov	w0, #0x1                   	// #1
  41b740:	b	41b780 <nftw@plt+0x18c00>
  41b744:	ldp	x25, x26, [sp, #64]
  41b748:	ldp	x27, x28, [sp, #80]
  41b74c:	b	41b720 <nftw@plt+0x18ba0>
  41b750:	mov	x21, #0x0                   	// #0
  41b754:	b	41b6d4 <nftw@plt+0x18b54>
  41b758:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b75c:	add	x2, x2, #0x128
  41b760:	mov	w1, #0x3                   	// #3
  41b764:	ldr	x0, [sp, #112]
  41b768:	bl	41fe9c <nftw@plt+0x1d31c>
  41b76c:	ldr	x0, [sp, #360]
  41b770:	bl	402910 <free@plt>
  41b774:	mov	w0, #0x0                   	// #0
  41b778:	ldp	x25, x26, [sp, #64]
  41b77c:	ldp	x27, x28, [sp, #80]
  41b780:	ldp	x19, x20, [sp, #16]
  41b784:	ldp	x21, x22, [sp, #32]
  41b788:	ldp	x23, x24, [sp, #48]
  41b78c:	ldp	x29, x30, [sp], #384
  41b790:	ret
  41b794:	add	x20, x26, #0x1
  41b798:	b	41adec <nftw@plt+0x1826c>
  41b79c:	bl	402aa0 <__errno_location@plt>
  41b7a0:	mov	w1, #0x7                   	// #7
  41b7a4:	str	w1, [x0]
  41b7a8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b7ac:	add	x2, x2, #0x190
  41b7b0:	mov	w1, #0x3                   	// #3
  41b7b4:	ldr	x0, [sp, #112]
  41b7b8:	bl	41fe9c <nftw@plt+0x1d31c>
  41b7bc:	b	41b0ac <nftw@plt+0x1852c>
  41b7c0:	add	x26, x20, #0x4
  41b7c4:	b	41b824 <nftw@plt+0x18ca4>
  41b7c8:	add	x19, x20, #0x2
  41b7cc:	mov	x0, x21
  41b7d0:	bl	418eec <nftw@plt+0x1636c>
  41b7d4:	ldrb	w0, [x20, #2]
  41b7d8:	cmp	w0, #0x52
  41b7dc:	b.eq	41b7c0 <nftw@plt+0x18c40>  // b.none
  41b7e0:	mov	x20, x19
  41b7e4:	b	41aed0 <nftw@plt+0x18350>
  41b7e8:	cmp	x19, x25
  41b7ec:	b.ls	41ae64 <nftw@plt+0x182e4>  // b.plast
  41b7f0:	add	x26, x25, #0x1
  41b7f4:	str	x23, [sp, #336]
  41b7f8:	str	x24, [sp, #344]
  41b7fc:	ldp	x0, x1, [sp, #336]
  41b800:	add	x2, sp, #0x200
  41b804:	stp	x0, x1, [x2, #-232]
  41b808:	ldr	x0, [sp, #352]
  41b80c:	str	x0, [sp, #296]
  41b810:	b	41b5b4 <nftw@plt+0x18a34>
  41b814:	add	x26, x20, #0x3
  41b818:	mov	x20, x19
  41b81c:	b	41adac <nftw@plt+0x1822c>
  41b820:	add	x26, x20, #0x3
  41b824:	mov	x0, x21
  41b828:	bl	418eec <nftw@plt+0x1636c>
  41b82c:	mov	x0, x21
  41b830:	bl	418eec <nftw@plt+0x1636c>
  41b834:	ldrb	w0, [x26]
  41b838:	cmp	w0, #0x28
  41b83c:	b.eq	41b794 <nftw@plt+0x18c14>  // b.none
  41b840:	mov	x19, x26
  41b844:	b	41adcc <nftw@plt+0x1824c>
  41b848:	ldr	x0, [sp, #184]
  41b84c:	cbnz	x0, 41acec <nftw@plt+0x1816c>
  41b850:	mov	w0, #0x1                   	// #1
  41b854:	b	41b780 <nftw@plt+0x18c00>
  41b858:	ldp	x25, x26, [sp, #64]
  41b85c:	ldp	x27, x28, [sp, #80]
  41b860:	b	41b780 <nftw@plt+0x18c00>
  41b864:	stp	x29, x30, [sp, #-16]!
  41b868:	mov	x29, sp
  41b86c:	mov	x6, #0x0                   	// #0
  41b870:	mov	x5, #0x0                   	// #0
  41b874:	bl	41ac58 <nftw@plt+0x180d8>
  41b878:	ldp	x29, x30, [sp], #16
  41b87c:	ret
  41b880:	stp	x29, x30, [sp, #-64]!
  41b884:	mov	x29, sp
  41b888:	str	x19, [sp, #16]
  41b88c:	add	x19, x0, #0x208
  41b890:	ldp	x6, x7, [x19]
  41b894:	stp	x6, x7, [sp, #40]
  41b898:	ldr	x5, [x0, #536]
  41b89c:	str	x5, [sp, #56]
  41b8a0:	adrp	x5, 417000 <nftw@plt+0x14480>
  41b8a4:	add	x5, x5, #0xf60
  41b8a8:	str	x5, [x0, #520]
  41b8ac:	mov	x5, #0xffffffffffffffff    	// #-1
  41b8b0:	str	x5, [x0, #528]
  41b8b4:	ldr	x5, [x0, #1216]
  41b8b8:	str	w5, [x0, #536]
  41b8bc:	mov	w4, #0x3e                  	// #62
  41b8c0:	bl	41b864 <nftw@plt+0x18ce4>
  41b8c4:	ldp	x2, x3, [sp, #40]
  41b8c8:	stp	x2, x3, [x19]
  41b8cc:	ldr	x1, [sp, #56]
  41b8d0:	str	x1, [x19, #16]
  41b8d4:	ldr	x19, [sp, #16]
  41b8d8:	ldp	x29, x30, [sp], #64
  41b8dc:	ret
  41b8e0:	stp	x29, x30, [sp, #-144]!
  41b8e4:	mov	x29, sp
  41b8e8:	stp	x19, x20, [sp, #16]
  41b8ec:	stp	x21, x22, [sp, #32]
  41b8f0:	stp	x23, x24, [sp, #48]
  41b8f4:	mov	x21, x0
  41b8f8:	mov	x20, x1
  41b8fc:	mov	x22, x2
  41b900:	mov	x23, x3
  41b904:	str	wzr, [sp, #104]
  41b908:	str	xzr, [sp, #112]
  41b90c:	ldrb	w4, [x1, #4]
  41b910:	and	w19, w4, #0xfffffffb
  41b914:	and	w19, w19, #0xff
  41b918:	cmp	w19, #0x38
  41b91c:	cset	w1, ne  // ne = any
  41b920:	cmp	w4, #0x3c
  41b924:	cset	w0, eq  // eq = none
  41b928:	ldr	w2, [x20, #8]
  41b92c:	add	w1, w1, #0x2
  41b930:	add	w0, w1, w0, lsl #1
  41b934:	cmp	x2, w0, sxtw
  41b938:	b.eq	41b9dc <nftw@plt+0x18e5c>  // b.none
  41b93c:	add	x3, sp, #0x68
  41b940:	mov	x2, #0x1                   	// #1
  41b944:	add	x1, x20, #0x8
  41b948:	mov	x0, x21
  41b94c:	bl	41b864 <nftw@plt+0x18ce4>
  41b950:	and	w0, w0, #0xff
  41b954:	cbz	w0, 41ba00 <nftw@plt+0x18e80>
  41b958:	stp	x25, x26, [sp, #64]
  41b95c:	cmp	w19, #0x38
  41b960:	b.eq	41bb0c <nftw@plt+0x18f8c>  // b.none
  41b964:	str	x27, [sp, #80]
  41b968:	ldrb	w25, [x20, #4]
  41b96c:	ldr	w19, [sp, #104]
  41b970:	ldr	x27, [sp, #112]
  41b974:	ldrb	w26, [x21, #1242]
  41b978:	add	x8, sp, #0x78
  41b97c:	mov	w1, w25
  41b980:	mov	x0, x21
  41b984:	bl	417954 <nftw@plt+0x14dd4>
  41b988:	ldrsw	x24, [sp, #136]
  41b98c:	ldr	x2, [x21, #1216]
  41b990:	cmp	x2, #0x20
  41b994:	mov	x3, #0x20                  	// #32
  41b998:	csel	x0, x2, x3, ls  // ls = plast
  41b99c:	mov	x3, #0x1                   	// #1
  41b9a0:	lsl	x3, x3, x0
  41b9a4:	sub	x3, x3, #0x1
  41b9a8:	udiv	x5, x24, x2
  41b9ac:	mov	w6, w19
  41b9b0:	lsl	x7, x5, #1
  41b9b4:	sub	x1, x6, x7
  41b9b8:	cmp	x24, x2
  41b9bc:	b.cc	41ba3c <nftw@plt+0x18ebc>  // b.lo, b.ul, b.last
  41b9c0:	mov	w19, #0x0                   	// #0
  41b9c4:	mov	x0, #0x0                   	// #0
  41b9c8:	add	x4, x5, x1
  41b9cc:	sub	x4, x4, #0x1
  41b9d0:	add	x4, x27, x4
  41b9d4:	add	x27, x27, x1
  41b9d8:	b	41ba30 <nftw@plt+0x18eb0>
  41b9dc:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41b9e0:	add	x2, x2, #0x608
  41b9e4:	mov	w1, #0x3                   	// #3
  41b9e8:	mov	x0, x21
  41b9ec:	bl	41f990 <nftw@plt+0x1ce10>
  41b9f0:	str	wzr, [x22]
  41b9f4:	str	wzr, [x23]
  41b9f8:	mov	w19, #0x0                   	// #0
  41b9fc:	b	41bad0 <nftw@plt+0x18f50>
  41ba00:	str	wzr, [x22]
  41ba04:	str	wzr, [x23]
  41ba08:	mov	w19, #0x0                   	// #0
  41ba0c:	b	41bad0 <nftw@plt+0x18f50>
  41ba10:	neg	x1, x0
  41ba14:	ldrb	w1, [x4, x1]
  41ba18:	lsl	w19, w19, w2
  41ba1c:	and	w1, w1, w3
  41ba20:	orr	w19, w1, w19
  41ba24:	add	x0, x0, #0x1
  41ba28:	cmp	x5, x0
  41ba2c:	b.ls	41ba40 <nftw@plt+0x18ec0>  // b.plast
  41ba30:	cbz	w26, 41ba10 <nftw@plt+0x18e90>
  41ba34:	ldrb	w1, [x27, x0]
  41ba38:	b	41ba18 <nftw@plt+0x18e98>
  41ba3c:	mov	w19, #0x0                   	// #0
  41ba40:	cmp	x6, x7
  41ba44:	b.hi	41bae8 <nftw@plt+0x18f68>  // b.pmore
  41ba48:	cmp	x24, #0x1f
  41ba4c:	b.hi	41ba94 <nftw@plt+0x18f14>  // b.pmore
  41ba50:	cmp	x24, #0x20
  41ba54:	mov	x0, #0x20                  	// #32
  41ba58:	csel	x1, x24, x0, ls  // ls = plast
  41ba5c:	mov	x0, #0x1                   	// #1
  41ba60:	lsl	x0, x0, x1
  41ba64:	sub	w1, w25, #0x3a
  41ba68:	cmp	w1, #0x1
  41ba6c:	b.ls	41ba8c <nftw@plt+0x18f0c>  // b.plast
  41ba70:	ldrb	w1, [x21, #1241]
  41ba74:	cbnz	w1, 41ba8c <nftw@plt+0x18f0c>
  41ba78:	sub	w24, w24, #0x1
  41ba7c:	mov	w1, #0x1                   	// #1
  41ba80:	lsl	w24, w1, w24
  41ba84:	tst	w24, w19
  41ba88:	b.ne	41bb00 <nftw@plt+0x18f80>  // b.any
  41ba8c:	sub	x0, x0, #0x1
  41ba90:	and	w19, w19, w0
  41ba94:	sub	w25, w25, #0x3a
  41ba98:	mov	w0, #0x1                   	// #1
  41ba9c:	cmp	w25, w0
  41baa0:	b.ls	41baa8 <nftw@plt+0x18f28>  // b.plast
  41baa4:	ldrb	w0, [x21, #1241]
  41baa8:	str	w0, [x23]
  41baac:	mov	w0, #0x1                   	// #1
  41bab0:	str	w0, [x22]
  41bab4:	ldr	x27, [sp, #80]
  41bab8:	ldr	x0, [sp, #112]
  41babc:	ldr	x1, [x20, #16]
  41bac0:	cmp	x0, x1
  41bac4:	b.eq	41bc34 <nftw@plt+0x190b4>  // b.none
  41bac8:	bl	402910 <free@plt>
  41bacc:	ldp	x25, x26, [sp, #64]
  41bad0:	mov	w0, w19
  41bad4:	ldp	x19, x20, [sp, #16]
  41bad8:	ldp	x21, x22, [sp, #32]
  41badc:	ldp	x23, x24, [sp, #48]
  41bae0:	ldp	x29, x30, [sp], #144
  41bae4:	ret
  41bae8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41baec:	add	x2, x2, #0x628
  41baf0:	mov	w1, #0x0                   	// #0
  41baf4:	mov	x0, x21
  41baf8:	bl	41f990 <nftw@plt+0x1ce10>
  41bafc:	b	41ba48 <nftw@plt+0x18ec8>
  41bb00:	neg	x0, x0
  41bb04:	orr	w19, w19, w0
  41bb08:	b	41baa4 <nftw@plt+0x18f24>
  41bb0c:	ldr	x3, [sp, #112]
  41bb10:	ldr	x24, [x21, #1216]
  41bb14:	ldr	x26, [x21, #1224]
  41bb18:	udiv	x26, x26, x24
  41bb1c:	cmp	x24, #0x20
  41bb20:	mov	x2, #0x20                  	// #32
  41bb24:	csel	x0, x24, x2, ls  // ls = plast
  41bb28:	mov	x2, #0x1                   	// #1
  41bb2c:	lsl	x2, x2, x0
  41bb30:	sub	x2, x2, #0x1
  41bb34:	ldr	w25, [sp, #104]
  41bb38:	sub	w25, w25, #0x1
  41bb3c:	cbz	x25, 41bc2c <nftw@plt+0x190ac>
  41bb40:	mov	w19, #0x0                   	// #0
  41bb44:	mov	x1, #0x0                   	// #0
  41bb48:	ldrb	w0, [x3, x1]
  41bb4c:	and	w0, w0, w2
  41bb50:	lsl	w19, w19, w24
  41bb54:	orr	w19, w0, w19
  41bb58:	cmp	x24, #0x20
  41bb5c:	csel	w19, w19, w0, cc  // cc = lo, ul, last
  41bb60:	add	x1, x1, #0x1
  41bb64:	cmp	x1, x25
  41bb68:	b.ne	41bb48 <nftw@plt+0x18fc8>  // b.any
  41bb6c:	cmp	x26, x25
  41bb70:	b.cc	41bbc4 <nftw@plt+0x19044>  // b.lo, b.ul, b.last
  41bb74:	cmp	x25, #0x1
  41bb78:	b.ls	41bbe4 <nftw@plt+0x19064>  // b.plast
  41bb7c:	ldrb	w0, [x21, #1137]
  41bb80:	cbnz	w0, 41bc14 <nftw@plt+0x19094>
  41bb84:	ldr	x0, [x21, #1224]
  41bb88:	mov	w1, #0x0                   	// #0
  41bb8c:	cmp	x0, #0x1f
  41bb90:	b.hi	41bc08 <nftw@plt+0x19088>  // b.pmore
  41bb94:	mov	w2, w0
  41bb98:	mov	w24, #0x1                   	// #1
  41bb9c:	lsl	w24, w24, w0
  41bba0:	mov	w1, #0x0                   	// #0
  41bba4:	sub	w2, w2, #0x1
  41bba8:	mov	w0, #0x1                   	// #1
  41bbac:	lsl	w2, w0, w2
  41bbb0:	tst	w2, w19
  41bbb4:	b.eq	41bc00 <nftw@plt+0x19080>  // b.none
  41bbb8:	neg	w24, w24
  41bbbc:	orr	w19, w19, w24
  41bbc0:	b	41bc08 <nftw@plt+0x19088>
  41bbc4:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41bbc8:	add	x2, x2, #0x628
  41bbcc:	mov	w1, #0x0                   	// #0
  41bbd0:	mov	x0, x21
  41bbd4:	bl	41f990 <nftw@plt+0x1ce10>
  41bbd8:	mov	x25, x26
  41bbdc:	cmp	x26, #0x1
  41bbe0:	b.hi	41bb84 <nftw@plt+0x19004>  // b.pmore
  41bbe4:	ldrb	w1, [x21, #1240]
  41bbe8:	cmp	x24, #0x1f
  41bbec:	b.hi	41bc08 <nftw@plt+0x19088>  // b.pmore
  41bbf0:	mov	w2, w24
  41bbf4:	mov	w0, #0x1                   	// #1
  41bbf8:	lsl	w24, w0, w24
  41bbfc:	cbz	w1, 41bba4 <nftw@plt+0x19024>
  41bc00:	sub	w24, w24, #0x1
  41bc04:	and	w19, w19, w24
  41bc08:	str	w25, [x22]
  41bc0c:	str	w1, [x23]
  41bc10:	b	41bab8 <nftw@plt+0x18f38>
  41bc14:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41bc18:	add	x2, x2, #0x658
  41bc1c:	mov	w1, #0x5                   	// #5
  41bc20:	mov	x0, x21
  41bc24:	bl	41fa08 <nftw@plt+0x1ce88>
  41bc28:	b	41bb84 <nftw@plt+0x19004>
  41bc2c:	mov	w19, #0x0                   	// #0
  41bc30:	b	41bbe4 <nftw@plt+0x19064>
  41bc34:	ldp	x25, x26, [sp, #64]
  41bc38:	b	41bad0 <nftw@plt+0x18f50>
  41bc3c:	stp	x29, x30, [sp, #-112]!
  41bc40:	mov	x29, sp
  41bc44:	stp	x19, x20, [sp, #16]
  41bc48:	stp	x21, x22, [sp, #32]
  41bc4c:	stp	x23, x24, [sp, #48]
  41bc50:	mov	x20, x0
  41bc54:	mov	x21, x1
  41bc58:	mov	x23, x2
  41bc5c:	mov	x22, x3
  41bc60:	mov	x24, x4
  41bc64:	mov	w19, w5
  41bc68:	add	x8, sp, #0x58
  41bc6c:	mov	w1, w5
  41bc70:	bl	417954 <nftw@plt+0x14dd4>
  41bc74:	adrp	x5, 417000 <nftw@plt+0x14480>
  41bc78:	add	x5, x5, #0xf60
  41bc7c:	ldr	x6, [sp, #88]
  41bc80:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41bc84:	add	x0, x0, #0x680
  41bc88:	cmp	x6, x5
  41bc8c:	b.eq	41bca4 <nftw@plt+0x19124>  // b.none
  41bc90:	ldp	x19, x20, [sp, #16]
  41bc94:	ldp	x21, x22, [sp, #32]
  41bc98:	ldp	x23, x24, [sp, #48]
  41bc9c:	ldp	x29, x30, [sp], #112
  41bca0:	ret
  41bca4:	str	x25, [sp, #64]
  41bca8:	ldr	x25, [x20, #1000]
  41bcac:	adrp	x0, 417000 <nftw@plt+0x14480>
  41bcb0:	add	x0, x0, #0xa14
  41bcb4:	str	x0, [x20, #1000]
  41bcb8:	mov	x6, x24
  41bcbc:	mov	x5, x23
  41bcc0:	mov	w4, w19
  41bcc4:	mov	x3, #0x0                   	// #0
  41bcc8:	mov	x2, x22
  41bccc:	mov	x1, x21
  41bcd0:	mov	x0, x20
  41bcd4:	bl	41ac58 <nftw@plt+0x180d8>
  41bcd8:	ands	w1, w0, #0xff
  41bcdc:	str	x25, [x20, #1000]
  41bce0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x139fc>
  41bce4:	add	x0, x0, #0x6b0
  41bce8:	csel	x0, x0, xzr, eq  // eq = none
  41bcec:	ldr	x25, [sp, #64]
  41bcf0:	b	41bc90 <nftw@plt+0x19110>
  41bcf4:	ldrb	w0, [x1, #18]
  41bcf8:	and	w0, w0, #0xfffffffc
  41bcfc:	strb	w0, [x1, #18]
  41bd00:	str	xzr, [x1, #24]
  41bd04:	ldrh	w0, [x1, #18]
  41bd08:	ubfx	x2, x0, #2, #8
  41bd0c:	mov	w3, #0xffffffcd            	// #-51
  41bd10:	and	w2, w2, w3
  41bd14:	bfi	w0, w2, #2, #8
  41bd18:	strh	w0, [x1, #18]
  41bd1c:	mov	w0, #0x1                   	// #1
  41bd20:	ret
  41bd24:	stp	x29, x30, [sp, #-32]!
  41bd28:	mov	x29, sp
  41bd2c:	stp	x19, x20, [sp, #16]
  41bd30:	mov	w20, #0x0                   	// #0
  41bd34:	cbz	x0, 41bd68 <nftw@plt+0x191e8>
  41bd38:	mov	x19, x0
  41bd3c:	mov	w20, #0x0                   	// #0
  41bd40:	b	41bd5c <nftw@plt+0x191dc>
  41bd44:	ldr	x0, [x19, #24]
  41bd48:	bl	41bd24 <nftw@plt+0x191a4>
  41bd4c:	add	w20, w20, w0
  41bd50:	add	w20, w20, #0x1
  41bd54:	ldr	x19, [x19]
  41bd58:	cbz	x19, 41bd68 <nftw@plt+0x191e8>
  41bd5c:	ldrb	w0, [x19, #16]
  41bd60:	cbz	w0, 41bd50 <nftw@plt+0x191d0>
  41bd64:	b	41bd44 <nftw@plt+0x191c4>
  41bd68:	mov	w0, w20
  41bd6c:	ldp	x19, x20, [sp, #16]
  41bd70:	ldp	x29, x30, [sp], #32
  41bd74:	ret
  41bd78:	stp	x29, x30, [sp, #-32]!
  41bd7c:	mov	x29, sp
  41bd80:	stp	x19, x20, [sp, #16]
  41bd84:	mov	x19, x0
  41bd88:	and	w20, w1, #0xff
  41bd8c:	bl	42ab60 <nftw@plt+0x27fe0>
  41bd90:	ldrb	w1, [x0, #4]
  41bd94:	cmp	w1, #0x35
  41bd98:	b.eq	41bdd0 <nftw@plt+0x19250>  // b.none
  41bd9c:	ldrh	w2, [x0, #6]
  41bda0:	tbnz	w2, #4, 41be44 <nftw@plt+0x192c4>
  41bda4:	cmp	w1, #0x16
  41bda8:	b.eq	41be68 <nftw@plt+0x192e8>  // b.none
  41bdac:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41bdb0:	add	x2, x2, #0x330
  41bdb4:	mov	w1, #0x3                   	// #3
  41bdb8:	mov	x0, x19
  41bdbc:	bl	41f990 <nftw@plt+0x1ce10>
  41bdc0:	mov	x0, #0x0                   	// #0
  41bdc4:	ldp	x19, x20, [sp, #16]
  41bdc8:	ldp	x29, x30, [sp], #32
  41bdcc:	ret
  41bdd0:	ldr	x0, [x0, #8]
  41bdd4:	cbz	w20, 41bdfc <nftw@plt+0x1927c>
  41bdd8:	ldr	x1, [x19, #1248]
  41bddc:	cmp	x1, x0
  41bde0:	b.eq	41be0c <nftw@plt+0x1928c>  // b.none
  41bde4:	ldr	x1, [x19, #1288]
  41bde8:	cmp	x1, x0
  41bdec:	b.eq	41be28 <nftw@plt+0x192a8>  // b.none
  41bdf0:	ldr	x1, [x19, #1296]
  41bdf4:	cmp	x1, x0
  41bdf8:	b.eq	41be28 <nftw@plt+0x192a8>  // b.none
  41bdfc:	ldrh	w1, [x0, #18]
  41be00:	tst	x1, #0x8
  41be04:	csel	x0, x0, xzr, eq  // eq = none
  41be08:	b	41bdc4 <nftw@plt+0x19244>
  41be0c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41be10:	add	x2, x2, #0x260
  41be14:	mov	w1, #0x3                   	// #3
  41be18:	mov	x0, x19
  41be1c:	bl	41f990 <nftw@plt+0x1ce10>
  41be20:	mov	x0, #0x0                   	// #0
  41be24:	b	41bdc4 <nftw@plt+0x19244>
  41be28:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41be2c:	add	x2, x2, #0x290
  41be30:	mov	w1, #0x3                   	// #3
  41be34:	mov	x0, x19
  41be38:	bl	41f990 <nftw@plt+0x1ce10>
  41be3c:	mov	x0, #0x0                   	// #0
  41be40:	b	41bdc4 <nftw@plt+0x19244>
  41be44:	ldr	x0, [x0, #8]
  41be48:	ldr	x3, [x0]
  41be4c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41be50:	add	x2, x2, #0x2c8
  41be54:	mov	w1, #0x3                   	// #3
  41be58:	mov	x0, x19
  41be5c:	bl	41f990 <nftw@plt+0x1ce10>
  41be60:	mov	x0, #0x0                   	// #0
  41be64:	b	41bdc4 <nftw@plt+0x19244>
  41be68:	ldr	x0, [x19, #144]
  41be6c:	ldr	x3, [x0, #8]
  41be70:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41be74:	add	x2, x2, #0x308
  41be78:	mov	w1, #0x3                   	// #3
  41be7c:	mov	x0, x19
  41be80:	bl	41f990 <nftw@plt+0x1ce10>
  41be84:	mov	x0, #0x0                   	// #0
  41be88:	b	41bdc4 <nftw@plt+0x19244>
  41be8c:	stp	x29, x30, [sp, #-32]!
  41be90:	mov	x29, sp
  41be94:	stp	x19, x20, [sp, #16]
  41be98:	mov	x20, x0
  41be9c:	mov	w19, w1
  41bea0:	bl	42ab60 <nftw@plt+0x27fe0>
  41bea4:	mov	x1, x0
  41bea8:	ldrb	w2, [x0, #4]
  41beac:	cmp	w2, #0x37
  41beb0:	b.eq	41becc <nftw@plt+0x1934c>  // b.none
  41beb4:	mov	w0, #0x0                   	// #0
  41beb8:	cmp	w2, #0x16
  41bebc:	b.ne	41bed8 <nftw@plt+0x19358>  // b.any
  41bec0:	ldp	x19, x20, [sp, #16]
  41bec4:	ldp	x29, x30, [sp], #32
  41bec8:	ret
  41becc:	ldr	w0, [x0, #8]
  41bed0:	cmp	w0, #0x1
  41bed4:	b.eq	41bf00 <nftw@plt+0x19380>  // b.none
  41bed8:	mov	x0, x20
  41bedc:	bl	42add4 <nftw@plt+0x28254>
  41bee0:	mov	x3, x0
  41bee4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41bee8:	add	x2, x2, #0x350
  41beec:	mov	w1, #0x3                   	// #3
  41bef0:	mov	x0, x20
  41bef4:	bl	41f990 <nftw@plt+0x1ce10>
  41bef8:	mov	w0, #0x0                   	// #0
  41befc:	b	41bec0 <nftw@plt+0x19340>
  41bf00:	ldr	x0, [x1, #16]
  41bf04:	ldrb	w2, [x0]
  41bf08:	sub	w0, w2, #0x30
  41bf0c:	cmp	w0, w19
  41bf10:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  41bf14:	b.hi	41bed8 <nftw@plt+0x19358>  // b.pmore
  41bf18:	cmp	w0, #0x4
  41bf1c:	ccmp	w19, #0x3, #0x4, eq  // eq = none
  41bf20:	b.ne	41bed8 <nftw@plt+0x19358>  // b.any
  41bf24:	cmp	w19, #0x0
  41bf28:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  41bf2c:	b.eq	41bed8 <nftw@plt+0x19358>  // b.none
  41bf30:	b	41bec0 <nftw@plt+0x19340>
  41bf34:	stp	x29, x30, [sp, #-32]!
  41bf38:	mov	x29, sp
  41bf3c:	str	x19, [sp, #16]
  41bf40:	mov	x19, x0
  41bf44:	mov	x0, x19
  41bf48:	bl	431a1c <nftw@plt+0x2ee9c>
  41bf4c:	ldrb	w1, [x0, #4]
  41bf50:	cmp	w1, #0x53
  41bf54:	b.eq	41bf44 <nftw@plt+0x193c4>  // b.none
  41bf58:	ldr	x19, [sp, #16]
  41bf5c:	ldp	x29, x30, [sp], #32
  41bf60:	ret
  41bf64:	stp	x29, x30, [sp, #-48]!
  41bf68:	mov	x29, sp
  41bf6c:	stp	x19, x20, [sp, #16]
  41bf70:	mov	x20, x0
  41bf74:	bl	41bf34 <nftw@plt+0x193b4>
  41bf78:	mov	x19, x0
  41bf7c:	ldrb	w0, [x0, #4]
  41bf80:	cmp	w0, #0x16
  41bf84:	b.eq	41c000 <nftw@plt+0x19480>  // b.none
  41bf88:	ldrb	w0, [x19, #4]
  41bf8c:	mov	x19, #0x0                   	// #0
  41bf90:	cmp	w0, #0x14
  41bf94:	b.ne	41bff0 <nftw@plt+0x19470>  // b.any
  41bf98:	mov	x0, x20
  41bf9c:	bl	41bf34 <nftw@plt+0x193b4>
  41bfa0:	mov	x19, x0
  41bfa4:	ldrb	w0, [x0, #4]
  41bfa8:	cmp	w0, #0x16
  41bfac:	b.eq	41c010 <nftw@plt+0x19490>  // b.none
  41bfb0:	ldrb	w0, [x19, #4]
  41bfb4:	sub	w0, w0, #0x3e
  41bfb8:	and	w0, w0, #0xff
  41bfbc:	cmp	w0, #0x4
  41bfc0:	b.hi	41c030 <nftw@plt+0x194b0>  // b.pmore
  41bfc4:	str	x21, [sp, #32]
  41bfc8:	mov	x0, x20
  41bfcc:	bl	41bf34 <nftw@plt+0x193b4>
  41bfd0:	mov	x21, x0
  41bfd4:	ldrb	w0, [x0, #4]
  41bfd8:	cmp	w0, #0x16
  41bfdc:	b.eq	41c020 <nftw@plt+0x194a0>  // b.none
  41bfe0:	ldrb	w0, [x21, #4]
  41bfe4:	cmp	w0, #0x15
  41bfe8:	csel	x19, x19, xzr, eq  // eq = none
  41bfec:	ldr	x21, [sp, #32]
  41bff0:	mov	x0, x19
  41bff4:	ldp	x19, x20, [sp, #16]
  41bff8:	ldp	x29, x30, [sp], #48
  41bffc:	ret
  41c000:	mov	w1, #0x1                   	// #1
  41c004:	mov	x0, x20
  41c008:	bl	42e8f0 <nftw@plt+0x2bd70>
  41c00c:	b	41bf88 <nftw@plt+0x19408>
  41c010:	mov	w1, #0x1                   	// #1
  41c014:	mov	x0, x20
  41c018:	bl	42e8f0 <nftw@plt+0x2bd70>
  41c01c:	b	41bfb0 <nftw@plt+0x19430>
  41c020:	mov	w1, #0x1                   	// #1
  41c024:	mov	x0, x20
  41c028:	bl	42e8f0 <nftw@plt+0x2bd70>
  41c02c:	b	41bfe0 <nftw@plt+0x19460>
  41c030:	mov	x19, #0x0                   	// #0
  41c034:	b	41bff0 <nftw@plt+0x19470>
  41c038:	stp	x29, x30, [sp, #-32]!
  41c03c:	mov	x29, sp
  41c040:	stp	x19, x20, [sp, #16]
  41c044:	mov	x19, x0
  41c048:	ldr	x0, [x0, #448]
  41c04c:	ldurb	w0, [x0, #-20]
  41c050:	cmp	w0, #0x16
  41c054:	b.eq	41c078 <nftw@plt+0x194f8>  // b.none
  41c058:	and	w1, w1, #0xff
  41c05c:	mov	w20, w2
  41c060:	cbz	w1, 41c084 <nftw@plt+0x19504>
  41c064:	mov	x0, x19
  41c068:	bl	431a1c <nftw@plt+0x2ee9c>
  41c06c:	ldrb	w0, [x0, #4]
  41c070:	cmp	w0, #0x16
  41c074:	b.ne	41c090 <nftw@plt+0x19510>  // b.any
  41c078:	ldp	x19, x20, [sp, #16]
  41c07c:	ldp	x29, x30, [sp], #32
  41c080:	ret
  41c084:	mov	x0, x19
  41c088:	bl	42ab60 <nftw@plt+0x27fe0>
  41c08c:	b	41c06c <nftw@plt+0x194ec>
  41c090:	ldr	x0, [x19, #144]
  41c094:	ldr	x3, [x0, #8]
  41c098:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c09c:	add	x2, x2, #0x378
  41c0a0:	mov	w1, w20
  41c0a4:	mov	x0, x19
  41c0a8:	bl	41fa84 <nftw@plt+0x1cf04>
  41c0ac:	b	41c078 <nftw@plt+0x194f8>
  41c0b0:	stp	x29, x30, [sp, #-16]!
  41c0b4:	mov	x29, sp
  41c0b8:	mov	w2, #0x0                   	// #0
  41c0bc:	bl	41c038 <nftw@plt+0x194b8>
  41c0c0:	ldp	x29, x30, [sp], #16
  41c0c4:	ret
  41c0c8:	stp	x29, x30, [sp, #-32]!
  41c0cc:	mov	x29, sp
  41c0d0:	str	x19, [sp, #16]
  41c0d4:	mov	x19, x0
  41c0d8:	bl	431a1c <nftw@plt+0x2ee9c>
  41c0dc:	ldrb	w1, [x0, #4]
  41c0e0:	cmp	w1, #0x3e
  41c0e4:	b.ne	41c104 <nftw@plt+0x19584>  // b.any
  41c0e8:	ldr	x3, [x19, #952]
  41c0ec:	cbz	x3, 41c120 <nftw@plt+0x195a0>
  41c0f0:	add	x2, x0, #0x8
  41c0f4:	ldr	w1, [x19, #48]
  41c0f8:	mov	x0, x19
  41c0fc:	blr	x3
  41c100:	b	41c120 <nftw@plt+0x195a0>
  41c104:	ldr	x0, [x19, #144]
  41c108:	ldr	x3, [x0, #8]
  41c10c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c110:	add	x2, x2, #0x3a0
  41c114:	mov	w1, #0x3                   	// #3
  41c118:	mov	x0, x19
  41c11c:	bl	41f990 <nftw@plt+0x1ce10>
  41c120:	mov	w1, #0x0                   	// #0
  41c124:	mov	x0, x19
  41c128:	bl	41c0b0 <nftw@plt+0x19530>
  41c12c:	ldr	x19, [sp, #16]
  41c130:	ldp	x29, x30, [sp], #32
  41c134:	ret
  41c138:	stp	x29, x30, [sp, #-32]!
  41c13c:	mov	x29, sp
  41c140:	str	x19, [sp, #16]
  41c144:	mov	x19, x0
  41c148:	ldr	x0, [x0, #136]
  41c14c:	ldr	x0, [x0, #8]
  41c150:	cbz	x0, 41c168 <nftw@plt+0x195e8>
  41c154:	mov	x0, x19
  41c158:	bl	42e76c <nftw@plt+0x2bbec>
  41c15c:	ldr	x0, [x19, #136]
  41c160:	ldr	x0, [x0, #8]
  41c164:	cbnz	x0, 41c154 <nftw@plt+0x195d4>
  41c168:	ldr	x0, [x19, #448]
  41c16c:	ldurb	w0, [x0, #-20]
  41c170:	cmp	w0, #0x16
  41c174:	b.eq	41c18c <nftw@plt+0x1960c>  // b.none
  41c178:	mov	x0, x19
  41c17c:	bl	42ab60 <nftw@plt+0x27fe0>
  41c180:	ldrb	w0, [x0, #4]
  41c184:	cmp	w0, #0x16
  41c188:	b.ne	41c178 <nftw@plt+0x195f8>  // b.any
  41c18c:	ldr	x19, [sp, #16]
  41c190:	ldp	x29, x30, [sp], #32
  41c194:	ret
  41c198:	stp	x29, x30, [sp, #-48]!
  41c19c:	mov	x29, sp
  41c1a0:	stp	x19, x20, [sp, #16]
  41c1a4:	str	x21, [sp, #32]
  41c1a8:	mov	x20, x0
  41c1ac:	mov	w0, #0x1                   	// #1
  41c1b0:	strb	w0, [x20, #23]
  41c1b4:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c1b8:	add	x21, x21, #0x3e0
  41c1bc:	b	41c210 <nftw@plt+0x19690>
  41c1c0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c1c4:	add	x2, x2, #0x3b8
  41c1c8:	mov	w1, #0x3                   	// #3
  41c1cc:	mov	x0, x20
  41c1d0:	bl	41f990 <nftw@plt+0x1ce10>
  41c1d4:	strb	wzr, [x20, #23]
  41c1d8:	ldp	x19, x20, [sp, #16]
  41c1dc:	ldr	x21, [sp, #32]
  41c1e0:	ldp	x29, x30, [sp], #48
  41c1e4:	ret
  41c1e8:	ldr	x3, [x19]
  41c1ec:	mov	x2, x21
  41c1f0:	mov	w1, #0x0                   	// #0
  41c1f4:	mov	x0, x20
  41c1f8:	bl	41f990 <nftw@plt+0x1ce10>
  41c1fc:	mov	x0, x19
  41c200:	bl	42eb80 <nftw@plt+0x2c000>
  41c204:	ldrh	w1, [x19, #18]
  41c208:	orr	w1, w1, #0x18
  41c20c:	strh	w1, [x19, #18]
  41c210:	mov	x0, x20
  41c214:	bl	42ab60 <nftw@plt+0x27fe0>
  41c218:	ldrb	w1, [x0, #4]
  41c21c:	cmp	w1, #0x16
  41c220:	b.eq	41c1d4 <nftw@plt+0x19654>  // b.none
  41c224:	cmp	w1, #0x35
  41c228:	b.ne	41c1c0 <nftw@plt+0x19640>  // b.any
  41c22c:	ldr	x19, [x0, #8]
  41c230:	ldrh	w1, [x19, #18]
  41c234:	tbnz	w1, #3, 41c210 <nftw@plt+0x19690>
  41c238:	ldrb	w0, [x19, #18]
  41c23c:	tbz	w0, #1, 41c1fc <nftw@plt+0x1967c>
  41c240:	b	41c1e8 <nftw@plt+0x19668>
  41c244:	stp	x29, x30, [sp, #-32]!
  41c248:	mov	x29, sp
  41c24c:	stp	x19, x20, [sp, #16]
  41c250:	mov	x20, x0
  41c254:	ldr	x0, [x0]
  41c258:	ldr	x19, [x0, #96]
  41c25c:	cbz	x19, 41c2a4 <nftw@plt+0x19724>
  41c260:	ldr	w0, [x19, #28]
  41c264:	cmp	w0, #0x5
  41c268:	b.eq	41c2bc <nftw@plt+0x1973c>  // b.none
  41c26c:	mov	w0, #0x5                   	// #5
  41c270:	str	w0, [x19, #28]
  41c274:	ldrb	w0, [x19, #24]
  41c278:	strb	w0, [x20, #18]
  41c27c:	mov	w0, #0x1                   	// #1
  41c280:	strb	w0, [x19, #24]
  41c284:	str	xzr, [x19, #16]
  41c288:	ldrb	w0, [x19, #25]
  41c28c:	cbnz	w0, 41c298 <nftw@plt+0x19718>
  41c290:	ldrb	w0, [x20, #1140]
  41c294:	cbnz	w0, 41c2f0 <nftw@plt+0x19770>
  41c298:	ldp	x19, x20, [sp, #16]
  41c29c:	ldp	x29, x30, [sp], #32
  41c2a0:	ret
  41c2a4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c2a8:	add	x2, x2, #0x400
  41c2ac:	mov	w1, #0x3                   	// #3
  41c2b0:	mov	x0, x20
  41c2b4:	bl	41f990 <nftw@plt+0x1ce10>
  41c2b8:	b	41c298 <nftw@plt+0x19718>
  41c2bc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c2c0:	add	x2, x2, #0x418
  41c2c4:	mov	w1, #0x3                   	// #3
  41c2c8:	mov	x0, x20
  41c2cc:	bl	41f990 <nftw@plt+0x1ce10>
  41c2d0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c2d4:	add	x4, x4, #0x430
  41c2d8:	mov	w3, #0x0                   	// #0
  41c2dc:	ldr	w2, [x19, #8]
  41c2e0:	mov	w1, #0x3                   	// #3
  41c2e4:	mov	x0, x20
  41c2e8:	bl	41fb7c <nftw@plt+0x1cffc>
  41c2ec:	b	41c26c <nftw@plt+0x196ec>
  41c2f0:	mov	w2, #0x8                   	// #8
  41c2f4:	mov	w1, #0x0                   	// #0
  41c2f8:	mov	x0, x20
  41c2fc:	bl	41c038 <nftw@plt+0x194b8>
  41c300:	b	41c298 <nftw@plt+0x19718>
  41c304:	stp	x29, x30, [sp, #-80]!
  41c308:	mov	x29, sp
  41c30c:	stp	x19, x20, [sp, #16]
  41c310:	stp	x21, x22, [sp, #32]
  41c314:	stp	x23, x24, [sp, #48]
  41c318:	stp	x25, x26, [sp, #64]
  41c31c:	mov	x19, x0
  41c320:	mov	w20, w1
  41c324:	mov	x23, x2
  41c328:	ldrb	w2, [x0, #24]
  41c32c:	add	w2, w2, #0x1
  41c330:	strb	w2, [x0, #24]
  41c334:	str	xzr, [x23]
  41c338:	bl	431a1c <nftw@plt+0x2ee9c>
  41c33c:	mov	x22, x0
  41c340:	ldrb	w0, [x0, #4]
  41c344:	cmp	w0, #0x16
  41c348:	b.eq	41c3a4 <nftw@plt+0x19824>  // b.none
  41c34c:	cmp	w0, #0x35
  41c350:	b.ne	41c3c0 <nftw@plt+0x19840>  // b.any
  41c354:	ldr	w21, [x22]
  41c358:	mov	x0, x19
  41c35c:	bl	431a1c <nftw@plt+0x2ee9c>
  41c360:	ldrb	w0, [x0, #4]
  41c364:	cmp	w0, #0x14
  41c368:	b.eq	41c418 <nftw@plt+0x19898>  // b.none
  41c36c:	cmp	w20, #0x4
  41c370:	b.eq	41c408 <nftw@plt+0x19888>  // b.none
  41c374:	cmp	w20, #0x11
  41c378:	ccmp	w0, #0x16, #0x0, eq  // eq = none
  41c37c:	b.eq	41c524 <nftw@plt+0x199a4>  // b.none
  41c380:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c384:	add	x4, x4, #0x490
  41c388:	mov	w3, #0x0                   	// #0
  41c38c:	mov	w2, w21
  41c390:	mov	w1, #0x3                   	// #3
  41c394:	mov	x0, x19
  41c398:	bl	41fb7c <nftw@plt+0x1cffc>
  41c39c:	mov	x0, #0x0                   	// #0
  41c3a0:	b	41c3e0 <nftw@plt+0x19860>
  41c3a4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c3a8:	add	x2, x2, #0x450
  41c3ac:	mov	w1, #0x3                   	// #3
  41c3b0:	mov	x0, x19
  41c3b4:	bl	41f990 <nftw@plt+0x1ce10>
  41c3b8:	mov	x0, #0x0                   	// #0
  41c3bc:	b	41c3e0 <nftw@plt+0x19860>
  41c3c0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c3c4:	add	x4, x4, #0x470
  41c3c8:	mov	w3, #0x0                   	// #0
  41c3cc:	ldr	w2, [x22]
  41c3d0:	mov	w1, #0x3                   	// #3
  41c3d4:	mov	x0, x19
  41c3d8:	bl	41fb7c <nftw@plt+0x1cffc>
  41c3dc:	mov	x0, #0x0                   	// #0
  41c3e0:	ldrb	w1, [x19, #24]
  41c3e4:	sub	w1, w1, #0x1
  41c3e8:	strb	w1, [x19, #24]
  41c3ec:	mov	sp, x29
  41c3f0:	ldp	x19, x20, [sp, #16]
  41c3f4:	ldp	x21, x22, [sp, #32]
  41c3f8:	ldp	x23, x24, [sp, #48]
  41c3fc:	ldp	x25, x26, [sp, #64]
  41c400:	ldp	x29, x30, [sp], #80
  41c404:	ret
  41c408:	mov	w1, #0x1                   	// #1
  41c40c:	mov	x0, x19
  41c410:	bl	42e8f0 <nftw@plt+0x2bd70>
  41c414:	b	41c524 <nftw@plt+0x199a4>
  41c418:	ldr	x1, [x19, #56]
  41c41c:	ldr	x0, [x1, #24]
  41c420:	ldr	x1, [x1, #16]
  41c424:	sub	x0, x0, x1
  41c428:	cmp	x0, #0x2f
  41c42c:	b.ls	41c45c <nftw@plt+0x198dc>  // b.plast
  41c430:	ldr	x0, [x19, #56]
  41c434:	ldr	x2, [x0, #16]
  41c438:	mov	w1, #0x1                   	// #1
  41c43c:	mov	x0, x19
  41c440:	bl	42ed0c <nftw@plt+0x2c18c>
  41c444:	mov	x26, x0
  41c448:	str	xzr, [x0]
  41c44c:	mov	w20, #0x0                   	// #0
  41c450:	add	x25, x19, #0x38
  41c454:	mov	x24, #0x18                  	// #24
  41c458:	b	41c4c0 <nftw@plt+0x19940>
  41c45c:	mov	x2, #0x30                  	// #48
  41c460:	add	x1, x19, #0x38
  41c464:	mov	x0, x19
  41c468:	bl	428330 <nftw@plt+0x257b0>
  41c46c:	b	41c430 <nftw@plt+0x198b0>
  41c470:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c474:	add	x2, x2, #0x4b0
  41c478:	mov	w1, #0x3                   	// #3
  41c47c:	mov	x0, x19
  41c480:	bl	41f990 <nftw@plt+0x1ce10>
  41c484:	b	41c39c <nftw@plt+0x1981c>
  41c488:	mov	x2, x24
  41c48c:	mov	x1, x25
  41c490:	mov	x0, x19
  41c494:	bl	428330 <nftw@plt+0x257b0>
  41c498:	ldr	x0, [x19, #56]
  41c49c:	ldr	x26, [x0, #16]
  41c4a0:	ubfiz	x1, x20, #1, #32
  41c4a4:	add	x1, x1, w20, uxtw
  41c4a8:	add	x1, x26, x1, lsl #3
  41c4ac:	ldp	x2, x3, [x21]
  41c4b0:	stp	x2, x3, [x1, #24]
  41c4b4:	ldr	x0, [x21, #16]
  41c4b8:	str	x0, [x1, #40]
  41c4bc:	add	w20, w20, #0x1
  41c4c0:	mov	x0, x19
  41c4c4:	bl	431a1c <nftw@plt+0x2ee9c>
  41c4c8:	mov	x21, x0
  41c4cc:	ldrb	w0, [x0, #4]
  41c4d0:	cmp	w0, #0x15
  41c4d4:	b.eq	41c50c <nftw@plt+0x1998c>  // b.none
  41c4d8:	cmp	w0, #0x16
  41c4dc:	b.eq	41c470 <nftw@plt+0x198f0>  // b.none
  41c4e0:	ldr	x1, [x19, #56]
  41c4e4:	ldr	x0, [x1, #24]
  41c4e8:	ldr	x1, [x1, #16]
  41c4ec:	sub	x0, x0, x1
  41c4f0:	ubfiz	x1, x20, #1, #32
  41c4f4:	add	x1, x1, w20, uxtw
  41c4f8:	lsl	x1, x1, #3
  41c4fc:	add	x1, x1, #0x48
  41c500:	cmp	x0, x1
  41c504:	b.cs	41c498 <nftw@plt+0x19918>  // b.hs, b.nlast
  41c508:	b	41c488 <nftw@plt+0x19908>
  41c50c:	cbz	w20, 41c574 <nftw@plt+0x199f4>
  41c510:	ldrh	w0, [x26, #30]
  41c514:	and	w0, w0, #0xfffffffe
  41c518:	strh	w0, [x26, #30]
  41c51c:	str	w20, [x26, #12]
  41c520:	str	x26, [x23]
  41c524:	ldr	x0, [x22, #8]
  41c528:	ldr	w2, [x0, #8]
  41c52c:	add	w21, w2, #0x1
  41c530:	add	w0, w2, #0x1
  41c534:	add	x0, x0, #0xf
  41c538:	and	x0, x0, #0x1fffffff0
  41c53c:	sub	sp, sp, x0
  41c540:	mov	x20, sp
  41c544:	mov	x0, x20
  41c548:	mov	w1, #0x23                  	// #35
  41c54c:	strb	w1, [x0], #1
  41c550:	ldr	x1, [x22, #8]
  41c554:	mov	w2, w2
  41c558:	ldr	x1, [x1]
  41c55c:	bl	402490 <memcpy@plt>
  41c560:	mov	w2, w21
  41c564:	mov	x1, x20
  41c568:	mov	x0, x19
  41c56c:	bl	426234 <nftw@plt+0x236b4>
  41c570:	b	41c3e0 <nftw@plt+0x19860>
  41c574:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c578:	add	x2, x2, #0x4d0
  41c57c:	mov	w1, #0x3                   	// #3
  41c580:	mov	x0, x19
  41c584:	bl	41f990 <nftw@plt+0x1ce10>
  41c588:	b	41c39c <nftw@plt+0x1981c>
  41c58c:	stp	x29, x30, [sp, #-48]!
  41c590:	mov	x29, sp
  41c594:	stp	x19, x20, [sp, #16]
  41c598:	stp	x21, x22, [sp, #32]
  41c59c:	mov	x22, x1
  41c5a0:	add	x21, x0, #0x18
  41c5a4:	ldr	x19, [x0, #24]
  41c5a8:	cbnz	x19, 41c5d8 <nftw@plt+0x19a58>
  41c5ac:	mov	x0, x21
  41c5b0:	ldp	x19, x20, [sp, #16]
  41c5b4:	ldp	x21, x22, [sp, #32]
  41c5b8:	ldp	x29, x30, [sp], #48
  41c5bc:	ret
  41c5c0:	ldr	w0, [x19, #12]
  41c5c4:	cmp	w0, w20
  41c5c8:	b.eq	41c5ac <nftw@plt+0x19a2c>  // b.none
  41c5cc:	ldr	x21, [x21]
  41c5d0:	ldr	x19, [x21]
  41c5d4:	cbz	x19, 41c5ac <nftw@plt+0x19a2c>
  41c5d8:	ldr	w0, [x19, #12]
  41c5dc:	ldr	w1, [x22, #12]
  41c5e0:	cmp	w0, w1
  41c5e4:	b.ne	41c5cc <nftw@plt+0x19a4c>  // b.any
  41c5e8:	cbz	w0, 41c5ac <nftw@plt+0x19a2c>
  41c5ec:	mov	w20, #0x0                   	// #0
  41c5f0:	mov	w0, w20
  41c5f4:	add	x0, x0, #0x1
  41c5f8:	add	x0, x0, x0, lsl #1
  41c5fc:	lsl	x0, x0, #3
  41c600:	add	x1, x22, x0
  41c604:	add	x0, x19, x0
  41c608:	bl	427acc <nftw@plt+0x24f4c>
  41c60c:	cbz	w0, 41c5c0 <nftw@plt+0x19a40>
  41c610:	add	w20, w20, #0x1
  41c614:	ldr	w0, [x19, #12]
  41c618:	cmp	w0, w20
  41c61c:	b.hi	41c5f0 <nftw@plt+0x19a70>  // b.pmore
  41c620:	b	41c5c0 <nftw@plt+0x19a40>
  41c624:	stp	x29, x30, [sp, #-48]!
  41c628:	mov	x29, sp
  41c62c:	str	x19, [sp, #16]
  41c630:	mov	x19, x0
  41c634:	add	x2, sp, #0x28
  41c638:	mov	w1, #0x11                  	// #17
  41c63c:	bl	41c304 <nftw@plt+0x19784>
  41c640:	cbz	x0, 41c66c <nftw@plt+0x19aec>
  41c644:	ldr	x1, [sp, #40]
  41c648:	cbz	x1, 41c678 <nftw@plt+0x19af8>
  41c64c:	bl	41c58c <nftw@plt+0x19a0c>
  41c650:	ldr	x1, [x0]
  41c654:	cbz	x1, 41c660 <nftw@plt+0x19ae0>
  41c658:	ldr	x1, [x1]
  41c65c:	str	x1, [x0]
  41c660:	mov	w1, #0x0                   	// #0
  41c664:	mov	x0, x19
  41c668:	bl	41c0b0 <nftw@plt+0x19530>
  41c66c:	ldr	x19, [sp, #16]
  41c670:	ldp	x29, x30, [sp], #48
  41c674:	ret
  41c678:	bl	42eb80 <nftw@plt+0x2c000>
  41c67c:	b	41c66c <nftw@plt+0x19aec>
  41c680:	stp	x29, x30, [sp, #-48]!
  41c684:	mov	x29, sp
  41c688:	stp	x19, x20, [sp, #16]
  41c68c:	mov	x20, x0
  41c690:	add	x2, sp, #0x28
  41c694:	mov	w1, #0x10                  	// #16
  41c698:	bl	41c304 <nftw@plt+0x19784>
  41c69c:	cbz	x0, 41c6d0 <nftw@plt+0x19b50>
  41c6a0:	mov	x19, x0
  41c6a4:	ldr	x1, [sp, #40]
  41c6a8:	bl	41c58c <nftw@plt+0x19a0c>
  41c6ac:	ldr	x0, [x0]
  41c6b0:	cbz	x0, 41c6dc <nftw@plt+0x19b5c>
  41c6b4:	ldr	x3, [x19]
  41c6b8:	add	x3, x3, #0x1
  41c6bc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c6c0:	add	x2, x2, #0x4f0
  41c6c4:	mov	w1, #0x0                   	// #0
  41c6c8:	mov	x0, x20
  41c6cc:	bl	41f990 <nftw@plt+0x1ce10>
  41c6d0:	ldp	x19, x20, [sp, #16]
  41c6d4:	ldp	x29, x30, [sp], #48
  41c6d8:	ret
  41c6dc:	ldr	x0, [sp, #40]
  41c6e0:	ldr	w1, [x0, #12]
  41c6e4:	add	x1, x1, #0x1
  41c6e8:	add	x1, x1, x1, lsl #1
  41c6ec:	lsl	x1, x1, #3
  41c6f0:	mov	x0, x20
  41c6f4:	bl	42ae94 <nftw@plt+0x28314>
  41c6f8:	str	x0, [sp, #40]
  41c6fc:	ldr	x1, [x19, #24]
  41c700:	str	x1, [x0]
  41c704:	ldr	x0, [sp, #40]
  41c708:	str	x0, [x19, #24]
  41c70c:	mov	w1, #0x0                   	// #0
  41c710:	mov	x0, x20
  41c714:	bl	41c0b0 <nftw@plt+0x19530>
  41c718:	b	41c6d0 <nftw@plt+0x19b50>
  41c71c:	stp	x29, x30, [sp, #-48]!
  41c720:	mov	x29, sp
  41c724:	stp	x19, x20, [sp, #16]
  41c728:	mov	x19, x0
  41c72c:	and	w20, w1, #0xff
  41c730:	bl	42ab60 <nftw@plt+0x27fe0>
  41c734:	ldrb	w1, [x0, #4]
  41c738:	cmp	w1, #0x3e
  41c73c:	b.eq	41c778 <nftw@plt+0x19bf8>  // b.none
  41c740:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x119fc>
  41c744:	add	x0, x0, #0xb88
  41c748:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x209fc>
  41c74c:	add	x3, x3, #0x1c8
  41c750:	cmp	w20, #0x0
  41c754:	csel	x3, x3, x0, ne  // ne = any
  41c758:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c75c:	add	x2, x2, #0x508
  41c760:	mov	w1, #0x3                   	// #3
  41c764:	mov	x0, x19
  41c768:	bl	41f990 <nftw@plt+0x1ce10>
  41c76c:	ldp	x19, x20, [sp, #16]
  41c770:	ldp	x29, x30, [sp], #48
  41c774:	ret
  41c778:	mov	w4, #0x3e                  	// #62
  41c77c:	add	x3, sp, #0x20
  41c780:	mov	x2, #0x1                   	// #1
  41c784:	add	x1, x0, #0x8
  41c788:	mov	x0, x19
  41c78c:	bl	41b880 <nftw@plt+0x18d00>
  41c790:	and	w0, w0, #0xff
  41c794:	cbz	w0, 41c740 <nftw@plt+0x19bc0>
  41c798:	ldr	w0, [sp, #32]
  41c79c:	cbz	w0, 41c740 <nftw@plt+0x19bc0>
  41c7a0:	cmp	w20, #0x0
  41c7a4:	ldr	x3, [sp, #40]
  41c7a8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c7ac:	add	x2, x2, #0x648
  41c7b0:	mov	w1, #0x3                   	// #3
  41c7b4:	csel	w1, w1, wzr, ne  // ne = any
  41c7b8:	mov	x0, x19
  41c7bc:	bl	41f990 <nftw@plt+0x1ce10>
  41c7c0:	ldr	x0, [sp, #40]
  41c7c4:	bl	402910 <free@plt>
  41c7c8:	b	41c76c <nftw@plt+0x19bec>
  41c7cc:	stp	x29, x30, [sp, #-16]!
  41c7d0:	mov	x29, sp
  41c7d4:	mov	w1, #0x1                   	// #1
  41c7d8:	bl	41c71c <nftw@plt+0x19b9c>
  41c7dc:	ldp	x29, x30, [sp], #16
  41c7e0:	ret
  41c7e4:	stp	x29, x30, [sp, #-16]!
  41c7e8:	mov	x29, sp
  41c7ec:	mov	w1, #0x0                   	// #0
  41c7f0:	bl	41c71c <nftw@plt+0x19b9c>
  41c7f4:	ldp	x29, x30, [sp], #16
  41c7f8:	ret
  41c7fc:	stp	x29, x30, [sp, #-80]!
  41c800:	mov	x29, sp
  41c804:	stp	x19, x20, [sp, #16]
  41c808:	stp	x21, x22, [sp, #32]
  41c80c:	stp	x23, x24, [sp, #48]
  41c810:	str	x25, [sp, #64]
  41c814:	mov	x22, x0
  41c818:	mov	x0, #0x400                 	// #1024
  41c81c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41c820:	mov	x21, x0
  41c824:	mov	x25, #0x400                 	// #1024
  41c828:	mov	x20, #0x0                   	// #0
  41c82c:	mov	w24, #0x20                  	// #32
  41c830:	mov	w23, #0x1                   	// #1
  41c834:	b	41c8a0 <nftw@plt+0x19d20>
  41c838:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c83c:	add	x2, x2, #0x530
  41c840:	mov	w1, #0x3                   	// #3
  41c844:	mov	x0, x22
  41c848:	bl	41f990 <nftw@plt+0x1ce10>
  41c84c:	strb	wzr, [x21, x20]
  41c850:	mov	x0, x21
  41c854:	ldp	x19, x20, [sp, #16]
  41c858:	ldp	x21, x22, [sp, #32]
  41c85c:	ldp	x23, x24, [sp, #48]
  41c860:	ldr	x25, [sp, #64]
  41c864:	ldp	x29, x30, [sp], #80
  41c868:	ret
  41c86c:	add	x1, x25, x1
  41c870:	lsl	x25, x1, #1
  41c874:	mov	x1, x25
  41c878:	mov	x0, x21
  41c87c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41c880:	mov	x21, x0
  41c884:	b	41c8d4 <nftw@plt+0x19d54>
  41c888:	mov	w3, w23
  41c88c:	add	x2, x21, x20
  41c890:	mov	x1, x19
  41c894:	mov	x0, x22
  41c898:	bl	427708 <nftw@plt+0x24b88>
  41c89c:	sub	x20, x0, x21
  41c8a0:	mov	x0, x22
  41c8a4:	bl	41bf34 <nftw@plt+0x193b4>
  41c8a8:	mov	x19, x0
  41c8ac:	ldrb	w1, [x0, #4]
  41c8b0:	cmp	w1, #0x2
  41c8b4:	b.eq	41c84c <nftw@plt+0x19ccc>  // b.none
  41c8b8:	cmp	w1, #0x16
  41c8bc:	b.eq	41c838 <nftw@plt+0x19cb8>  // b.none
  41c8c0:	bl	42763c <nftw@plt+0x24abc>
  41c8c4:	add	w1, w0, #0x2
  41c8c8:	add	x0, x20, x1
  41c8cc:	cmp	x0, x25
  41c8d0:	b.hi	41c86c <nftw@plt+0x19cec>  // b.pmore
  41c8d4:	ldrh	w0, [x19, #6]
  41c8d8:	tbz	w0, #0, 41c888 <nftw@plt+0x19d08>
  41c8dc:	strb	w24, [x21, x20]
  41c8e0:	add	x20, x20, #0x1
  41c8e4:	b	41c888 <nftw@plt+0x19d08>
  41c8e8:	stp	x29, x30, [sp, #-112]!
  41c8ec:	mov	x29, sp
  41c8f0:	stp	x19, x20, [sp, #16]
  41c8f4:	stp	x21, x22, [sp, #32]
  41c8f8:	stp	x23, x24, [sp, #48]
  41c8fc:	mov	x19, x0
  41c900:	mov	x23, x1
  41c904:	mov	x22, x2
  41c908:	mov	x20, x3
  41c90c:	bl	41bf34 <nftw@plt+0x193b4>
  41c910:	mov	x21, x0
  41c914:	ldr	w0, [x0]
  41c918:	str	w0, [x20]
  41c91c:	ldrb	w0, [x21, #4]
  41c920:	cmp	w0, #0x3e
  41c924:	b.eq	41c950 <nftw@plt+0x19dd0>  // b.none
  41c928:	cmp	w0, #0x44
  41c92c:	b.eq	41c960 <nftw@plt+0x19de0>  // b.none
  41c930:	cmp	w0, #0x3
  41c934:	b.ne	41c9e8 <nftw@plt+0x19e68>  // b.any
  41c938:	mov	x0, x19
  41c93c:	bl	41c7fc <nftw@plt+0x19c7c>
  41c940:	mov	x20, x0
  41c944:	mov	w0, #0x1                   	// #1
  41c948:	str	w0, [x23]
  41c94c:	b	41c9a0 <nftw@plt+0x19e20>
  41c950:	ldr	x0, [x21, #16]
  41c954:	ldrb	w0, [x0]
  41c958:	cmp	w0, #0x52
  41c95c:	b.eq	41c9e8 <nftw@plt+0x19e68>  // b.none
  41c960:	ldr	w0, [x21, #8]
  41c964:	sub	w0, w0, #0x1
  41c968:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41c96c:	mov	x20, x0
  41c970:	ldr	w2, [x21, #8]
  41c974:	ldr	x1, [x21, #16]
  41c978:	sub	w2, w2, #0x2
  41c97c:	add	x1, x1, #0x1
  41c980:	bl	402490 <memcpy@plt>
  41c984:	ldr	w0, [x21, #8]
  41c988:	sub	w0, w0, #0x2
  41c98c:	strb	wzr, [x20, w0, uxtw]
  41c990:	ldrb	w0, [x21, #4]
  41c994:	cmp	w0, #0x44
  41c998:	cset	w0, eq  // eq = none
  41c99c:	str	w0, [x23]
  41c9a0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c9a4:	add	x0, x0, #0xc88
  41c9a8:	ldr	x1, [x19, #144]
  41c9ac:	add	x0, x0, #0x108
  41c9b0:	cmp	x1, x0
  41c9b4:	b.eq	41c9d0 <nftw@plt+0x19e50>  // b.none
  41c9b8:	cbz	x22, 41c9c4 <nftw@plt+0x19e44>
  41c9bc:	ldrb	w0, [x19, #1123]
  41c9c0:	cbz	w0, 41ca2c <nftw@plt+0x19eac>
  41c9c4:	mov	w1, #0x1                   	// #1
  41c9c8:	mov	x0, x19
  41c9cc:	bl	41c0b0 <nftw@plt+0x19530>
  41c9d0:	mov	x0, x20
  41c9d4:	ldp	x19, x20, [sp, #16]
  41c9d8:	ldp	x21, x22, [sp, #32]
  41c9dc:	ldp	x23, x24, [sp, #48]
  41c9e0:	ldp	x29, x30, [sp], #112
  41c9e4:	ret
  41c9e8:	ldr	x1, [x19, #144]
  41c9ec:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41c9f0:	add	x0, x0, #0xc88
  41c9f4:	add	x0, x0, #0x108
  41c9f8:	cmp	x1, x0
  41c9fc:	b.eq	41ca20 <nftw@plt+0x19ea0>  // b.none
  41ca00:	ldr	x3, [x1, #8]
  41ca04:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ca08:	add	x2, x2, #0x568
  41ca0c:	mov	w1, #0x3                   	// #3
  41ca10:	mov	x0, x19
  41ca14:	bl	41f990 <nftw@plt+0x1ce10>
  41ca18:	mov	x20, #0x0                   	// #0
  41ca1c:	b	41c9d0 <nftw@plt+0x19e50>
  41ca20:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ca24:	add	x3, x3, #0x550
  41ca28:	b	41ca04 <nftw@plt+0x19e84>
  41ca2c:	stp	x25, x26, [sp, #64]
  41ca30:	mov	x0, #0x40                  	// #64
  41ca34:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41ca38:	mov	x23, x0
  41ca3c:	ldr	x0, [x19, #448]
  41ca40:	ldurb	w0, [x0, #-20]
  41ca44:	mov	x26, #0x8                   	// #8
  41ca48:	mov	x24, #0x0                   	// #0
  41ca4c:	cmp	w0, #0x16
  41ca50:	b.eq	41ca68 <nftw@plt+0x19ee8>  // b.none
  41ca54:	stp	x27, x28, [sp, #80]
  41ca58:	adrp	x27, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ca5c:	add	x27, x27, #0x378
  41ca60:	mov	w28, #0x2                   	// #2
  41ca64:	b	41ca94 <nftw@plt+0x19f14>
  41ca68:	mov	x24, #0x0                   	// #0
  41ca6c:	b	41cae4 <nftw@plt+0x19f64>
  41ca70:	ldr	x0, [x19, #144]
  41ca74:	ldr	x3, [x0, #8]
  41ca78:	mov	x2, x27
  41ca7c:	mov	w1, w28
  41ca80:	mov	x0, x19
  41ca84:	bl	41f990 <nftw@plt+0x1ce10>
  41ca88:	b	41ca94 <nftw@plt+0x19f14>
  41ca8c:	str	x21, [x23, x24, lsl #3]
  41ca90:	mov	x24, x25
  41ca94:	mov	x0, x19
  41ca98:	bl	42ab60 <nftw@plt+0x27fe0>
  41ca9c:	mov	x21, x0
  41caa0:	ldrb	w0, [x0, #4]
  41caa4:	cmp	w0, #0x16
  41caa8:	b.eq	41cae0 <nftw@plt+0x19f60>  // b.none
  41caac:	cmp	w0, #0x4f
  41cab0:	b.ne	41ca70 <nftw@plt+0x19ef0>  // b.any
  41cab4:	add	x25, x24, #0x1
  41cab8:	cmp	x25, x26
  41cabc:	b.cc	41ca8c <nftw@plt+0x19f0c>  // b.lo, b.ul, b.last
  41cac0:	lsl	x0, x26, #1
  41cac4:	str	x0, [sp, #104]
  41cac8:	lsl	x1, x26, #4
  41cacc:	mov	x0, x23
  41cad0:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41cad4:	mov	x23, x0
  41cad8:	ldr	x26, [sp, #104]
  41cadc:	b	41ca8c <nftw@plt+0x19f0c>
  41cae0:	ldp	x27, x28, [sp, #80]
  41cae4:	str	xzr, [x23, x24, lsl #3]
  41cae8:	str	x23, [x22]
  41caec:	ldp	x25, x26, [sp, #64]
  41caf0:	b	41c9d0 <nftw@plt+0x19e50>
  41caf4:	stp	x29, x30, [sp, #-80]!
  41caf8:	mov	x29, sp
  41cafc:	stp	x19, x20, [sp, #16]
  41cb00:	str	x21, [sp, #32]
  41cb04:	mov	x19, x0
  41cb08:	mov	w21, w1
  41cb0c:	str	xzr, [sp, #64]
  41cb10:	ldrb	w2, [x0, #1123]
  41cb14:	cmp	w2, #0x0
  41cb18:	cset	w2, eq  // eq = none
  41cb1c:	strb	w2, [x0, #21]
  41cb20:	add	x3, sp, #0x3c
  41cb24:	add	x2, sp, #0x40
  41cb28:	add	x1, sp, #0x4c
  41cb2c:	bl	41c8e8 <nftw@plt+0x19d68>
  41cb30:	mov	x20, x0
  41cb34:	cbz	x0, 41cb64 <nftw@plt+0x19fe4>
  41cb38:	ldrb	w0, [x0]
  41cb3c:	cbz	w0, 41cb88 <nftw@plt+0x1a008>
  41cb40:	ldr	x0, [x19, #40]
  41cb44:	ldr	w0, [x0, #48]
  41cb48:	cmp	w0, #0xc7
  41cb4c:	b.ls	41cbb0 <nftw@plt+0x1a030>  // b.plast
  41cb50:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cb54:	add	x2, x2, #0x5a8
  41cb58:	mov	w1, #0x3                   	// #3
  41cb5c:	mov	x0, x19
  41cb60:	bl	41f990 <nftw@plt+0x1ce10>
  41cb64:	mov	x0, x20
  41cb68:	bl	402910 <free@plt>
  41cb6c:	ldr	x0, [sp, #64]
  41cb70:	cbz	x0, 41cb78 <nftw@plt+0x19ff8>
  41cb74:	bl	402910 <free@plt>
  41cb78:	ldp	x19, x20, [sp, #16]
  41cb7c:	ldr	x21, [sp, #32]
  41cb80:	ldp	x29, x30, [sp], #80
  41cb84:	ret
  41cb88:	ldr	x0, [x19, #144]
  41cb8c:	ldr	x5, [x0, #8]
  41cb90:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cb94:	add	x4, x4, #0x590
  41cb98:	mov	w3, #0x0                   	// #0
  41cb9c:	ldr	w2, [sp, #60]
  41cba0:	mov	w1, #0x3                   	// #3
  41cba4:	mov	x0, x19
  41cba8:	bl	41fb7c <nftw@plt+0x1cffc>
  41cbac:	b	41cb64 <nftw@plt+0x19fe4>
  41cbb0:	mov	x0, x19
  41cbb4:	bl	41c138 <nftw@plt+0x195b8>
  41cbb8:	ldr	x6, [x19, #928]
  41cbbc:	cbz	x6, 41cbe0 <nftw@plt+0x1a060>
  41cbc0:	ldr	x0, [x19, #144]
  41cbc4:	ldr	x5, [sp, #64]
  41cbc8:	ldr	w4, [sp, #76]
  41cbcc:	mov	x3, x20
  41cbd0:	ldr	x2, [x0, #8]
  41cbd4:	ldr	w1, [x19, #48]
  41cbd8:	mov	x0, x19
  41cbdc:	blr	x6
  41cbe0:	ldr	w4, [sp, #60]
  41cbe4:	mov	w3, w21
  41cbe8:	ldr	w2, [sp, #76]
  41cbec:	mov	x1, x20
  41cbf0:	mov	x0, x19
  41cbf4:	bl	425734 <nftw@plt+0x22bb4>
  41cbf8:	b	41cb64 <nftw@plt+0x19fe4>
  41cbfc:	stp	x29, x30, [sp, #-16]!
  41cc00:	mov	x29, sp
  41cc04:	mov	w1, #0x2                   	// #2
  41cc08:	bl	41caf4 <nftw@plt+0x19f74>
  41cc0c:	ldp	x29, x30, [sp], #16
  41cc10:	ret
  41cc14:	stp	x29, x30, [sp, #-32]!
  41cc18:	mov	x29, sp
  41cc1c:	str	x19, [sp, #16]
  41cc20:	mov	x19, x0
  41cc24:	ldr	x0, [x0, #40]
  41cc28:	ldr	w0, [x0, #48]
  41cc2c:	mov	w1, #0x1                   	// #1
  41cc30:	cmp	w0, w1
  41cc34:	b.eq	41cc4c <nftw@plt+0x1a0cc>  // b.none
  41cc38:	mov	x0, x19
  41cc3c:	bl	41caf4 <nftw@plt+0x19f74>
  41cc40:	ldr	x19, [sp, #16]
  41cc44:	ldp	x29, x30, [sp], #32
  41cc48:	ret
  41cc4c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cc50:	add	x2, x2, #0x5c8
  41cc54:	mov	w1, #0x0                   	// #0
  41cc58:	mov	x0, x19
  41cc5c:	bl	41f990 <nftw@plt+0x1ce10>
  41cc60:	mov	w1, #0x0                   	// #0
  41cc64:	b	41cc38 <nftw@plt+0x1a0b8>
  41cc68:	stp	x29, x30, [sp, #-16]!
  41cc6c:	mov	x29, sp
  41cc70:	mov	w1, #0x0                   	// #0
  41cc74:	bl	41caf4 <nftw@plt+0x19f74>
  41cc78:	ldp	x29, x30, [sp], #16
  41cc7c:	ret
  41cc80:	stp	x29, x30, [sp, #-64]!
  41cc84:	mov	x29, sp
  41cc88:	stp	x19, x20, [sp, #16]
  41cc8c:	stp	x21, x22, [sp, #32]
  41cc90:	str	x23, [sp, #48]
  41cc94:	mov	x19, x0
  41cc98:	mov	w20, w1
  41cc9c:	mov	w22, w2
  41cca0:	ldr	x0, [x0, #448]
  41cca4:	ldur	w23, [x0, #-24]
  41cca8:	mov	x1, #0x0                   	// #0
  41ccac:	cbz	w3, 41ccb8 <nftw@plt+0x1a138>
  41ccb0:	ldr	x0, [x19, #144]
  41ccb4:	ldr	x1, [x0, #8]
  41ccb8:	ldrb	w0, [x19, #24]
  41ccbc:	add	w0, w0, #0x1
  41ccc0:	strb	w0, [x19, #24]
  41ccc4:	mov	x0, x19
  41ccc8:	bl	42801c <nftw@plt+0x2549c>
  41cccc:	mov	x21, x0
  41ccd0:	ldrb	w0, [x19, #24]
  41ccd4:	sub	w0, w0, #0x1
  41ccd8:	strb	w0, [x19, #24]
  41ccdc:	cmp	w22, #0x0
  41cce0:	cset	w0, ne  // ne = any
  41cce4:	cmp	w0, #0x0
  41cce8:	ccmp	w20, #0x1, #0x0, ne  // ne = any
  41ccec:	b.eq	41cd38 <nftw@plt+0x1a1b8>  // b.none
  41ccf0:	cmp	w20, #0x0
  41ccf4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41ccf8:	b.eq	41cd5c <nftw@plt+0x1a1dc>  // b.none
  41ccfc:	mov	x5, x21
  41cd00:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cd04:	add	x4, x4, #0x648
  41cd08:	mov	w3, #0x0                   	// #0
  41cd0c:	mov	w2, w23
  41cd10:	mov	w1, w22
  41cd14:	mov	x0, x19
  41cd18:	bl	41fbf4 <nftw@plt+0x1d074>
  41cd1c:	mov	x0, x21
  41cd20:	bl	402910 <free@plt>
  41cd24:	ldp	x19, x20, [sp, #16]
  41cd28:	ldp	x21, x22, [sp, #32]
  41cd2c:	ldr	x23, [sp, #48]
  41cd30:	ldp	x29, x30, [sp], #64
  41cd34:	ret
  41cd38:	mov	x5, x21
  41cd3c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cd40:	add	x4, x4, #0x648
  41cd44:	mov	w3, #0x0                   	// #0
  41cd48:	mov	w2, w23
  41cd4c:	mov	w1, w22
  41cd50:	mov	x0, x19
  41cd54:	bl	41fcec <nftw@plt+0x1d16c>
  41cd58:	b	41cd1c <nftw@plt+0x1a19c>
  41cd5c:	mov	x5, x21
  41cd60:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cd64:	add	x4, x4, #0x648
  41cd68:	mov	w3, #0x0                   	// #0
  41cd6c:	mov	w2, w23
  41cd70:	mov	w1, w20
  41cd74:	mov	x0, x19
  41cd78:	bl	41fb7c <nftw@plt+0x1cffc>
  41cd7c:	b	41cd1c <nftw@plt+0x1a19c>
  41cd80:	stp	x29, x30, [sp, #-16]!
  41cd84:	mov	x29, sp
  41cd88:	mov	w3, #0x1                   	// #1
  41cd8c:	mov	w2, #0x12                  	// #18
  41cd90:	mov	w1, w3
  41cd94:	bl	41cc80 <nftw@plt+0x1a100>
  41cd98:	ldp	x29, x30, [sp], #16
  41cd9c:	ret
  41cda0:	stp	x29, x30, [sp, #-16]!
  41cda4:	mov	x29, sp
  41cda8:	mov	w3, #0x1                   	// #1
  41cdac:	mov	w2, #0x0                   	// #0
  41cdb0:	mov	w1, #0x3                   	// #3
  41cdb4:	bl	41cc80 <nftw@plt+0x1a100>
  41cdb8:	ldp	x29, x30, [sp], #16
  41cdbc:	ret
  41cdc0:	stp	x29, x30, [sp, #-32]!
  41cdc4:	mov	x29, sp
  41cdc8:	stp	x19, x20, [sp, #16]
  41cdcc:	mov	x20, x0
  41cdd0:	ldr	x0, [x0]
  41cdd4:	ldr	x19, [x0, #96]
  41cdd8:	cbz	x19, 41ce10 <nftw@plt+0x1a290>
  41cddc:	ldr	w0, [x19, #28]
  41cde0:	cmp	w0, #0x5
  41cde4:	b.eq	41ce28 <nftw@plt+0x1a2a8>  // b.none
  41cde8:	mov	w0, #0x9                   	// #9
  41cdec:	str	w0, [x19, #28]
  41cdf0:	ldrb	w0, [x19, #24]
  41cdf4:	cbz	w0, 41ce5c <nftw@plt+0x1a2dc>
  41cdf8:	mov	w0, #0x1                   	// #1
  41cdfc:	strb	w0, [x20, #18]
  41ce00:	str	xzr, [x19, #16]
  41ce04:	ldp	x19, x20, [sp, #16]
  41ce08:	ldp	x29, x30, [sp], #32
  41ce0c:	ret
  41ce10:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ce14:	add	x2, x2, #0x5f0
  41ce18:	mov	w1, #0x3                   	// #3
  41ce1c:	mov	x0, x20
  41ce20:	bl	41f990 <nftw@plt+0x1ce10>
  41ce24:	b	41ce04 <nftw@plt+0x1a284>
  41ce28:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ce2c:	add	x2, x2, #0x608
  41ce30:	mov	w1, #0x3                   	// #3
  41ce34:	mov	x0, x20
  41ce38:	bl	41f990 <nftw@plt+0x1ce10>
  41ce3c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ce40:	add	x4, x4, #0x430
  41ce44:	mov	w3, #0x0                   	// #0
  41ce48:	ldr	w2, [x19, #8]
  41ce4c:	mov	w1, #0x3                   	// #3
  41ce50:	mov	x0, x20
  41ce54:	bl	41fb7c <nftw@plt+0x1cffc>
  41ce58:	b	41cde8 <nftw@plt+0x1a268>
  41ce5c:	mov	w1, #0x0                   	// #0
  41ce60:	mov	x0, x20
  41ce64:	bl	422178 <nftw@plt+0x1f5f8>
  41ce68:	eor	w1, w0, #0x1
  41ce6c:	strb	w1, [x20, #18]
  41ce70:	strb	w0, [x19, #24]
  41ce74:	b	41ce00 <nftw@plt+0x1a280>
  41ce78:	stp	x29, x30, [sp, #-32]!
  41ce7c:	mov	x29, sp
  41ce80:	stp	x19, x20, [sp, #16]
  41ce84:	mov	x19, x0
  41ce88:	mov	w1, #0x1                   	// #1
  41ce8c:	bl	41bd78 <nftw@plt+0x191f8>
  41ce90:	cbz	x0, 41cef0 <nftw@plt+0x1a370>
  41ce94:	mov	x20, x0
  41ce98:	ldr	x1, [x19, #1024]
  41ce9c:	cbz	x1, 41cea8 <nftw@plt+0x1a328>
  41cea0:	mov	x0, x19
  41cea4:	blr	x1
  41cea8:	ldr	x3, [x19, #944]
  41ceac:	cbz	x3, 41cec0 <nftw@plt+0x1a340>
  41ceb0:	mov	x2, x20
  41ceb4:	ldr	w1, [x19, #48]
  41ceb8:	mov	x0, x19
  41cebc:	blr	x3
  41cec0:	ldrb	w0, [x20, #18]
  41cec4:	tbz	w0, #1, 41cef0 <nftw@plt+0x1a370>
  41cec8:	ldrh	w0, [x20, #18]
  41cecc:	tbnz	w0, #5, 41cf08 <nftw@plt+0x1a388>
  41ced0:	ldrb	w0, [x20, #18]
  41ced4:	and	w0, w0, #0x3
  41ced8:	cmp	w0, #0x3
  41cedc:	b.eq	41cf24 <nftw@plt+0x1a3a4>  // b.none
  41cee0:	ldrb	w0, [x19, #1151]
  41cee4:	cbnz	w0, 41cf50 <nftw@plt+0x1a3d0>
  41cee8:	mov	x0, x20
  41ceec:	bl	42eb80 <nftw@plt+0x2c000>
  41cef0:	mov	w1, #0x0                   	// #0
  41cef4:	mov	x0, x19
  41cef8:	bl	41c0b0 <nftw@plt+0x19530>
  41cefc:	ldp	x19, x20, [sp, #16]
  41cf00:	ldp	x29, x30, [sp], #32
  41cf04:	ret
  41cf08:	ldr	x3, [x20]
  41cf0c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cf10:	add	x2, x2, #0x620
  41cf14:	mov	w1, #0x0                   	// #0
  41cf18:	mov	x0, x19
  41cf1c:	bl	41f990 <nftw@plt+0x1ce10>
  41cf20:	b	41cee0 <nftw@plt+0x1a360>
  41cf24:	ldrb	w0, [x19, #1143]
  41cf28:	cbz	w0, 41cee0 <nftw@plt+0x1a360>
  41cf2c:	ldr	x5, [x20]
  41cf30:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41cf34:	add	x4, x4, #0x620
  41cf38:	mov	w3, #0x0                   	// #0
  41cf3c:	ldr	w2, [x19, #48]
  41cf40:	mov	w1, #0xb                   	// #11
  41cf44:	mov	x0, x19
  41cf48:	bl	41fbf4 <nftw@plt+0x1d074>
  41cf4c:	b	41cee0 <nftw@plt+0x1a360>
  41cf50:	mov	x2, #0x0                   	// #0
  41cf54:	mov	x1, x20
  41cf58:	mov	x0, x19
  41cf5c:	bl	42ded4 <nftw@plt+0x2b354>
  41cf60:	b	41cee8 <nftw@plt+0x1a368>
  41cf64:	stp	x29, x30, [sp, #-64]!
  41cf68:	mov	x29, sp
  41cf6c:	stp	x19, x20, [sp, #16]
  41cf70:	stp	x21, x22, [sp, #32]
  41cf74:	str	x23, [sp, #48]
  41cf78:	mov	x19, x0
  41cf7c:	mov	w21, w1
  41cf80:	mov	w22, w2
  41cf84:	mov	x20, x3
  41cf88:	ldr	x23, [x0]
  41cf8c:	ldr	x0, [x0, #840]
  41cf90:	ldr	x1, [x19, #832]
  41cf94:	sub	x0, x0, x1
  41cf98:	cmp	x0, #0x1f
  41cf9c:	b.ls	41d054 <nftw@plt+0x1a4d4>  // b.plast
  41cfa0:	ldr	x5, [x19, #832]
  41cfa4:	add	x5, x5, #0x20
  41cfa8:	ldr	x0, [x19, #824]
  41cfac:	cmp	x5, x0
  41cfb0:	b.eq	41d064 <nftw@plt+0x1a4e4>  // b.none
  41cfb4:	ldr	x4, [x19, #856]
  41cfb8:	add	x5, x5, x4
  41cfbc:	bic	x4, x5, x4
  41cfc0:	str	x4, [x19, #832]
  41cfc4:	ldr	x1, [x19, #816]
  41cfc8:	ldr	x2, [x19, #840]
  41cfcc:	sub	x4, x4, x1
  41cfd0:	sub	x1, x2, x1
  41cfd4:	cmp	x4, x1
  41cfd8:	b.ls	41cfe0 <nftw@plt+0x1a460>  // b.plast
  41cfdc:	str	x2, [x19, #832]
  41cfe0:	ldr	x2, [x19, #832]
  41cfe4:	str	x2, [x19, #824]
  41cfe8:	ldr	w1, [x19, #48]
  41cfec:	str	w1, [x0, #8]
  41cff0:	ldr	x1, [x23, #96]
  41cff4:	str	x1, [x0]
  41cff8:	ldrb	w1, [x19, #18]
  41cffc:	cmp	w1, #0x0
  41d000:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  41d004:	cset	w1, eq  // eq = none
  41d008:	strb	w1, [x0, #24]
  41d00c:	ldrb	w1, [x19, #18]
  41d010:	cmp	w1, #0x0
  41d014:	cset	w1, ne  // ne = any
  41d018:	strb	w1, [x0, #25]
  41d01c:	str	w22, [x0, #28]
  41d020:	ldrb	w1, [x19, #440]
  41d024:	cbz	w1, 41d074 <nftw@plt+0x1a4f4>
  41d028:	ldr	x1, [x19, #424]
  41d02c:	cmp	x1, #0x0
  41d030:	csel	x20, x20, xzr, eq  // eq = none
  41d034:	str	x20, [x0, #16]
  41d038:	strb	w21, [x19, #18]
  41d03c:	str	x0, [x23, #96]
  41d040:	ldp	x19, x20, [sp, #16]
  41d044:	ldp	x21, x22, [sp, #32]
  41d048:	ldr	x23, [sp, #48]
  41d04c:	ldp	x29, x30, [sp], #64
  41d050:	ret
  41d054:	mov	x1, #0x20                  	// #32
  41d058:	add	x0, x19, #0x328
  41d05c:	bl	44a42c <_obstack_newchunk@@Base>
  41d060:	b	41cfa0 <nftw@plt+0x1a420>
  41d064:	ldrb	w1, [x19, #888]
  41d068:	orr	w1, w1, #0x2
  41d06c:	strb	w1, [x19, #888]
  41d070:	b	41cfb4 <nftw@plt+0x1a434>
  41d074:	mov	x20, #0x0                   	// #0
  41d078:	b	41d034 <nftw@plt+0x1a4b4>
  41d07c:	stp	x29, x30, [sp, #-32]!
  41d080:	mov	x29, sp
  41d084:	str	x19, [sp, #16]
  41d088:	mov	x19, x0
  41d08c:	ldrb	w0, [x0, #18]
  41d090:	mov	w1, #0x1                   	// #1
  41d094:	cbz	w0, 41d0b4 <nftw@plt+0x1a534>
  41d098:	ldr	x3, [x19, #432]
  41d09c:	mov	w2, #0x4                   	// #4
  41d0a0:	mov	x0, x19
  41d0a4:	bl	41cf64 <nftw@plt+0x1a3e4>
  41d0a8:	ldr	x19, [sp, #16]
  41d0ac:	ldp	x29, x30, [sp], #32
  41d0b0:	ret
  41d0b4:	mov	x0, x19
  41d0b8:	bl	422178 <nftw@plt+0x1f5f8>
  41d0bc:	and	w1, w0, #0xff
  41d0c0:	eor	w1, w1, #0x1
  41d0c4:	b	41d098 <nftw@plt+0x1a518>
  41d0c8:	stp	x29, x30, [sp, #-48]!
  41d0cc:	mov	x29, sp
  41d0d0:	stp	x19, x20, [sp, #16]
  41d0d4:	str	x21, [sp, #32]
  41d0d8:	mov	x19, x0
  41d0dc:	ldrb	w0, [x0, #18]
  41d0e0:	mov	x20, #0x0                   	// #0
  41d0e4:	mov	w21, #0x1                   	// #1
  41d0e8:	cbz	w0, 41d110 <nftw@plt+0x1a590>
  41d0ec:	mov	x3, x20
  41d0f0:	mov	w2, #0x6                   	// #6
  41d0f4:	mov	w1, w21
  41d0f8:	mov	x0, x19
  41d0fc:	bl	41cf64 <nftw@plt+0x1a3e4>
  41d100:	ldp	x19, x20, [sp, #16]
  41d104:	ldr	x21, [sp, #32]
  41d108:	ldp	x29, x30, [sp], #48
  41d10c:	ret
  41d110:	mov	w1, #0x0                   	// #0
  41d114:	mov	x0, x19
  41d118:	bl	41bd78 <nftw@plt+0x191f8>
  41d11c:	mov	x20, x0
  41d120:	cbz	x0, 41d0ec <nftw@plt+0x1a56c>
  41d124:	ldrb	w0, [x0, #18]
  41d128:	mov	w21, #0x0                   	// #0
  41d12c:	tbz	w0, #1, 41d140 <nftw@plt+0x1a5c0>
  41d130:	ldrh	w21, [x20, #18]
  41d134:	ubfx	x21, x21, #8, #2
  41d138:	eor	w21, w21, #0x1
  41d13c:	and	w21, w21, #0x1
  41d140:	ldrb	w0, [x20, #18]
  41d144:	and	w0, w0, #0x3
  41d148:	cmp	w0, #0x2
  41d14c:	b.eq	41d180 <nftw@plt+0x1a600>  // b.none
  41d150:	ldrh	w0, [x20, #18]
  41d154:	tbz	w0, #7, 41d194 <nftw@plt+0x1a614>
  41d158:	ldr	x3, [x19, #1032]
  41d15c:	cbz	x3, 41d170 <nftw@plt+0x1a5f0>
  41d160:	mov	x2, x20
  41d164:	ldr	w1, [x19, #48]
  41d168:	mov	x0, x19
  41d16c:	blr	x3
  41d170:	mov	w1, #0x0                   	// #0
  41d174:	mov	x0, x19
  41d178:	bl	41c0b0 <nftw@plt+0x19530>
  41d17c:	b	41d0ec <nftw@plt+0x1a56c>
  41d180:	ldr	x1, [x20, #24]
  41d184:	ldrb	w0, [x1, #19]
  41d188:	orr	w0, w0, #0x20
  41d18c:	strb	w0, [x1, #19]
  41d190:	b	41d150 <nftw@plt+0x1a5d0>
  41d194:	mov	x1, x20
  41d198:	mov	x0, x19
  41d19c:	bl	42fc48 <nftw@plt+0x2d0c8>
  41d1a0:	b	41d158 <nftw@plt+0x1a5d8>
  41d1a4:	stp	x29, x30, [sp, #-48]!
  41d1a8:	mov	x29, sp
  41d1ac:	stp	x19, x20, [sp, #16]
  41d1b0:	mov	x19, x0
  41d1b4:	ldrb	w0, [x0, #18]
  41d1b8:	mov	w20, #0x1                   	// #1
  41d1bc:	cbz	w0, 41d1e0 <nftw@plt+0x1a660>
  41d1c0:	mov	x3, #0x0                   	// #0
  41d1c4:	mov	w2, #0x3                   	// #3
  41d1c8:	mov	w1, w20
  41d1cc:	mov	x0, x19
  41d1d0:	bl	41cf64 <nftw@plt+0x1a3e4>
  41d1d4:	ldp	x19, x20, [sp, #16]
  41d1d8:	ldp	x29, x30, [sp], #48
  41d1dc:	ret
  41d1e0:	str	x21, [sp, #32]
  41d1e4:	mov	w1, #0x0                   	// #0
  41d1e8:	mov	x0, x19
  41d1ec:	bl	41bd78 <nftw@plt+0x191f8>
  41d1f0:	mov	x21, x0
  41d1f4:	cbz	x0, 41d270 <nftw@plt+0x1a6f0>
  41d1f8:	ldrb	w0, [x0, #18]
  41d1fc:	tbz	w0, #1, 41d208 <nftw@plt+0x1a688>
  41d200:	ldrh	w20, [x21, #18]
  41d204:	ubfx	x20, x20, #8, #1
  41d208:	ldrb	w1, [x21, #18]
  41d20c:	and	w1, w1, #0x3
  41d210:	cmp	w1, #0x2
  41d214:	b.eq	41d24c <nftw@plt+0x1a6cc>  // b.none
  41d218:	ldrh	w0, [x21, #18]
  41d21c:	tbz	w0, #7, 41d260 <nftw@plt+0x1a6e0>
  41d220:	ldr	x3, [x19, #1032]
  41d224:	cbz	x3, 41d238 <nftw@plt+0x1a6b8>
  41d228:	mov	x2, x21
  41d22c:	ldr	w1, [x19, #48]
  41d230:	mov	x0, x19
  41d234:	blr	x3
  41d238:	mov	w1, #0x0                   	// #0
  41d23c:	mov	x0, x19
  41d240:	bl	41c0b0 <nftw@plt+0x19530>
  41d244:	ldr	x21, [sp, #32]
  41d248:	b	41d1c0 <nftw@plt+0x1a640>
  41d24c:	ldr	x1, [x21, #24]
  41d250:	ldrb	w0, [x1, #19]
  41d254:	orr	w0, w0, #0x20
  41d258:	strb	w0, [x1, #19]
  41d25c:	b	41d218 <nftw@plt+0x1a698>
  41d260:	mov	x1, x21
  41d264:	mov	x0, x19
  41d268:	bl	42fc48 <nftw@plt+0x2d0c8>
  41d26c:	b	41d220 <nftw@plt+0x1a6a0>
  41d270:	ldr	x21, [sp, #32]
  41d274:	b	41d1c0 <nftw@plt+0x1a640>
  41d278:	stp	x29, x30, [sp, #-32]!
  41d27c:	mov	x29, sp
  41d280:	stp	x19, x20, [sp, #16]
  41d284:	mov	x19, x0
  41d288:	mov	w1, #0x1                   	// #1
  41d28c:	bl	41bd78 <nftw@plt+0x191f8>
  41d290:	cbz	x0, 41d2f8 <nftw@plt+0x1a778>
  41d294:	mov	x20, x0
  41d298:	ldrb	w0, [x19, #1124]
  41d29c:	cmp	w0, #0x0
  41d2a0:	cset	w0, eq  // eq = none
  41d2a4:	strb	w0, [x19, #21]
  41d2a8:	ldr	x1, [x19, #1024]
  41d2ac:	cbz	x1, 41d2b8 <nftw@plt+0x1a738>
  41d2b0:	mov	x0, x19
  41d2b4:	blr	x1
  41d2b8:	mov	x1, x20
  41d2bc:	mov	x0, x19
  41d2c0:	bl	42ed80 <nftw@plt+0x2c200>
  41d2c4:	and	w0, w0, #0xff
  41d2c8:	cbz	w0, 41d2e4 <nftw@plt+0x1a764>
  41d2cc:	ldr	x3, [x19, #936]
  41d2d0:	cbz	x3, 41d2e4 <nftw@plt+0x1a764>
  41d2d4:	mov	x2, x20
  41d2d8:	ldr	w1, [x19, #48]
  41d2dc:	mov	x0, x19
  41d2e0:	blr	x3
  41d2e4:	ldrh	w0, [x20, #18]
  41d2e8:	ubfx	x1, x0, #2, #8
  41d2ec:	and	w1, w1, #0xffffffdf
  41d2f0:	bfi	w0, w1, #2, #8
  41d2f4:	strh	w0, [x20, #18]
  41d2f8:	ldp	x19, x20, [sp, #16]
  41d2fc:	ldp	x29, x30, [sp], #32
  41d300:	ret
  41d304:	stp	x29, x30, [sp, #-32]!
  41d308:	mov	x29, sp
  41d30c:	stp	x19, x20, [sp, #16]
  41d310:	mov	x19, x0
  41d314:	ldr	x0, [x0, #144]
  41d318:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d31c:	add	x1, x1, #0xc88
  41d320:	cmp	x0, x1
  41d324:	b.eq	41d430 <nftw@plt+0x1a8b0>  // b.none
  41d328:	cbz	x0, 41d380 <nftw@plt+0x1a800>
  41d32c:	ldrb	w1, [x0, #19]
  41d330:	tbz	w1, #4, 41d3b4 <nftw@plt+0x1a834>
  41d334:	ldrb	w1, [x19, #18]
  41d338:	cmp	w1, #0x0
  41d33c:	cset	w20, ne  // ne = any
  41d340:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d344:	add	x1, x1, #0xc88
  41d348:	add	x2, x1, #0xd8
  41d34c:	cmp	x0, x2
  41d350:	cset	w2, eq  // eq = none
  41d354:	add	x1, x1, #0x60
  41d358:	cmp	x0, x1
  41d35c:	csinc	w1, w2, wzr, ne  // ne = any
  41d360:	strb	w1, [x19, #20]
  41d364:	mov	w0, #0x0                   	// #0
  41d368:	cbnz	w1, 41d3e8 <nftw@plt+0x1a868>
  41d36c:	mov	w2, #0x0                   	// #0
  41d370:	mov	x1, #0x0                   	// #0
  41d374:	mov	x0, x19
  41d378:	bl	4338bc <nftw@plt+0x30d3c>
  41d37c:	b	41d418 <nftw@plt+0x1a898>
  41d380:	ldrb	w1, [x19, #18]
  41d384:	cmp	w1, #0x0
  41d388:	cset	w20, ne  // ne = any
  41d38c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d390:	add	x1, x1, #0xc88
  41d394:	add	x2, x1, #0xd8
  41d398:	add	x1, x1, #0x60
  41d39c:	cmp	x0, x2
  41d3a0:	ccmp	x0, x1, #0x4, ne  // ne = any
  41d3a4:	cset	w0, eq  // eq = none
  41d3a8:	strb	w0, [x19, #20]
  41d3ac:	mov	w0, #0x0                   	// #0
  41d3b0:	b	41d3ec <nftw@plt+0x1a86c>
  41d3b4:	ldrb	w1, [x19, #18]
  41d3b8:	cmp	w1, #0x0
  41d3bc:	cset	w20, ne  // ne = any
  41d3c0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d3c4:	add	x2, x2, #0xc88
  41d3c8:	add	x1, x2, #0xd8
  41d3cc:	cmp	x0, x1
  41d3d0:	cset	w1, eq  // eq = none
  41d3d4:	add	x2, x2, #0x60
  41d3d8:	cmp	x0, x2
  41d3dc:	csinc	w0, w1, wzr, ne  // ne = any
  41d3e0:	strb	w0, [x19, #20]
  41d3e4:	cbz	w0, 41d3f0 <nftw@plt+0x1a870>
  41d3e8:	strb	wzr, [x19, #18]
  41d3ec:	cbz	w0, 41d36c <nftw@plt+0x1a7ec>
  41d3f0:	ldrb	w0, [x19, #24]
  41d3f4:	add	w0, w0, #0x1
  41d3f8:	strb	w0, [x19, #24]
  41d3fc:	mov	w2, #0x0                   	// #0
  41d400:	mov	x1, #0x0                   	// #0
  41d404:	mov	x0, x19
  41d408:	bl	4338bc <nftw@plt+0x30d3c>
  41d40c:	ldrb	w0, [x19, #24]
  41d410:	sub	w0, w0, #0x1
  41d414:	strb	w0, [x19, #24]
  41d418:	strb	w20, [x19, #18]
  41d41c:	ldr	x1, [x19, #1312]
  41d420:	ldr	x2, [x19, #1328]
  41d424:	sub	x2, x2, x1
  41d428:	mov	x0, x19
  41d42c:	bl	433858 <nftw@plt+0x30cd8>
  41d430:	ldrb	w0, [x19, #24]
  41d434:	add	w0, w0, #0x1
  41d438:	strb	w0, [x19, #24]
  41d43c:	ldp	x19, x20, [sp, #16]
  41d440:	ldp	x29, x30, [sp], #32
  41d444:	ret
  41d448:	stp	x29, x30, [sp, #-32]!
  41d44c:	mov	x29, sp
  41d450:	str	x19, [sp, #16]
  41d454:	mov	x19, x0
  41d458:	ldrb	w0, [x0, #1160]
  41d45c:	cbz	w0, 41d494 <nftw@plt+0x1a914>
  41d460:	ldrb	w0, [x19, #32]
  41d464:	cbnz	w0, 41d474 <nftw@plt+0x1a8f4>
  41d468:	ldrb	w0, [x19, #24]
  41d46c:	sub	w0, w0, #0x1
  41d470:	strb	w0, [x19, #24]
  41d474:	ldr	x1, [x19, #144]
  41d478:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d47c:	add	x0, x0, #0xc88
  41d480:	cmp	x1, x0
  41d484:	b.eq	41d4a4 <nftw@plt+0x1a924>  // b.none
  41d488:	mov	x0, x19
  41d48c:	bl	433890 <nftw@plt+0x30d10>
  41d490:	b	41d4a4 <nftw@plt+0x1a924>
  41d494:	ldrb	w0, [x19, #32]
  41d498:	cmp	w0, #0x0
  41d49c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  41d4a0:	b.ne	41d4d0 <nftw@plt+0x1a950>  // b.any
  41d4a4:	ldrb	w0, [x19, #1123]
  41d4a8:	cmp	w0, #0x0
  41d4ac:	cset	w0, eq  // eq = none
  41d4b0:	strb	w0, [x19, #21]
  41d4b4:	strb	wzr, [x19, #16]
  41d4b8:	strb	wzr, [x19, #20]
  41d4bc:	strb	wzr, [x19, #19]
  41d4c0:	str	xzr, [x19, #144]
  41d4c4:	ldr	x19, [sp, #16]
  41d4c8:	ldp	x29, x30, [sp], #32
  41d4cc:	ret
  41d4d0:	mov	x0, x19
  41d4d4:	bl	41c138 <nftw@plt+0x195b8>
  41d4d8:	ldr	w0, [x19, #500]
  41d4dc:	cbnz	w0, 41d4a4 <nftw@plt+0x1a924>
  41d4e0:	add	x0, x19, #0x1c8
  41d4e4:	str	x0, [x19, #488]
  41d4e8:	ldr	x0, [x19, #472]
  41d4ec:	str	x0, [x19, #448]
  41d4f0:	b	41d4a4 <nftw@plt+0x1a924>
  41d4f4:	stp	x29, x30, [sp, #-48]!
  41d4f8:	mov	x29, sp
  41d4fc:	stp	x19, x20, [sp, #16]
  41d500:	stp	x21, x22, [sp, #32]
  41d504:	mov	x22, x0
  41d508:	mov	x19, x1
  41d50c:	mov	x20, x2
  41d510:	cbnz	x1, 41d56c <nftw@plt+0x1a9ec>
  41d514:	mov	x0, x20
  41d518:	ldp	x19, x20, [sp, #16]
  41d51c:	ldp	x21, x22, [sp, #32]
  41d520:	ldp	x29, x30, [sp], #48
  41d524:	ret
  41d528:	mov	x2, x20
  41d52c:	ldr	x1, [x19, #24]
  41d530:	mov	x0, x22
  41d534:	bl	41d4f4 <nftw@plt+0x1a974>
  41d538:	mov	x20, x0
  41d53c:	ldr	x21, [x20]
  41d540:	mov	x0, x21
  41d544:	bl	4024f0 <strlen@plt>
  41d548:	mov	w2, w0
  41d54c:	mov	x1, x21
  41d550:	mov	x0, x22
  41d554:	bl	426234 <nftw@plt+0x236b4>
  41d558:	str	x0, [x19, #8]
  41d55c:	ldr	x0, [x20], #8
  41d560:	bl	402910 <free@plt>
  41d564:	ldr	x19, [x19]
  41d568:	cbz	x19, 41d514 <nftw@plt+0x1a994>
  41d56c:	ldrb	w0, [x19, #16]
  41d570:	cbz	w0, 41d53c <nftw@plt+0x1a9bc>
  41d574:	b	41d528 <nftw@plt+0x1a9a8>
  41d578:	stp	x29, x30, [sp, #-48]!
  41d57c:	mov	x29, sp
  41d580:	stp	x19, x20, [sp, #16]
  41d584:	mov	x20, x0
  41d588:	add	x3, sp, #0x28
  41d58c:	mov	x2, #0x0                   	// #0
  41d590:	add	x1, sp, #0x2c
  41d594:	bl	41c8e8 <nftw@plt+0x19d68>
  41d598:	cbz	x0, 41d5c4 <nftw@plt+0x1aa44>
  41d59c:	mov	x19, x0
  41d5a0:	ldr	w2, [sp, #44]
  41d5a4:	mov	x1, x0
  41d5a8:	mov	x0, x20
  41d5ac:	bl	425cf8 <nftw@plt+0x23178>
  41d5b0:	tbnz	w0, #31, 41d5d0 <nftw@plt+0x1aa50>
  41d5b4:	cmp	w0, #0x0
  41d5b8:	b.gt	41d5ec <nftw@plt+0x1aa6c>
  41d5bc:	mov	x0, x19
  41d5c0:	bl	402910 <free@plt>
  41d5c4:	ldp	x19, x20, [sp, #16]
  41d5c8:	ldp	x29, x30, [sp], #48
  41d5cc:	ret
  41d5d0:	mov	x3, x19
  41d5d4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d5d8:	add	x2, x2, #0x630
  41d5dc:	mov	w1, #0x0                   	// #0
  41d5e0:	mov	x0, x20
  41d5e4:	bl	41f990 <nftw@plt+0x1ce10>
  41d5e8:	b	41d5bc <nftw@plt+0x1aa3c>
  41d5ec:	mov	x3, x19
  41d5f0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d5f4:	add	x2, x2, #0x650
  41d5f8:	mov	w1, #0x0                   	// #0
  41d5fc:	mov	x0, x20
  41d600:	bl	41f990 <nftw@plt+0x1ce10>
  41d604:	mov	x0, x20
  41d608:	bl	431a1c <nftw@plt+0x2ee9c>
  41d60c:	ldrb	w0, [x0, #4]
  41d610:	cmp	w0, #0x16
  41d614:	b.eq	41d5bc <nftw@plt+0x1aa3c>  // b.none
  41d618:	mov	w1, #0x1                   	// #1
  41d61c:	mov	x0, x20
  41d620:	bl	42e8f0 <nftw@plt+0x2bd70>
  41d624:	mov	w3, #0x0                   	// #0
  41d628:	mov	w2, #0x0                   	// #0
  41d62c:	mov	w1, #0x0                   	// #0
  41d630:	mov	x0, x20
  41d634:	bl	41cc80 <nftw@plt+0x1a100>
  41d638:	b	41d5bc <nftw@plt+0x1aa3c>
  41d63c:	stp	x29, x30, [sp, #-32]!
  41d640:	mov	x29, sp
  41d644:	str	x19, [sp, #16]
  41d648:	mov	x19, x0
  41d64c:	ldr	x0, [x0, #40]
  41d650:	ldr	w0, [x0, #48]
  41d654:	cmp	w0, #0x1
  41d658:	b.eq	41d68c <nftw@plt+0x1ab0c>  // b.none
  41d65c:	mov	w1, #0x0                   	// #0
  41d660:	mov	x0, x19
  41d664:	bl	41c0b0 <nftw@plt+0x19530>
  41d668:	mov	x0, x19
  41d66c:	bl	41c138 <nftw@plt+0x195b8>
  41d670:	mov	w2, #0x0                   	// #0
  41d674:	mov	w1, #0x1                   	// #1
  41d678:	mov	x0, x19
  41d67c:	bl	425b74 <nftw@plt+0x22ff4>
  41d680:	ldr	x19, [sp, #16]
  41d684:	ldp	x29, x30, [sp], #32
  41d688:	ret
  41d68c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d690:	add	x2, x2, #0x670
  41d694:	mov	w1, #0x0                   	// #0
  41d698:	mov	x0, x19
  41d69c:	bl	41f990 <nftw@plt+0x1ce10>
  41d6a0:	b	41d680 <nftw@plt+0x1ab00>
  41d6a4:	stp	x29, x30, [sp, #-64]!
  41d6a8:	mov	x29, sp
  41d6ac:	stp	x19, x20, [sp, #16]
  41d6b0:	stp	x21, x22, [sp, #32]
  41d6b4:	str	x23, [sp, #48]
  41d6b8:	mov	x19, x0
  41d6bc:	bl	41bf64 <nftw@plt+0x193e4>
  41d6c0:	cbz	x0, 41d714 <nftw@plt+0x1ab94>
  41d6c4:	ldr	w2, [x0, #8]
  41d6c8:	add	w1, w2, #0x2
  41d6cc:	add	x1, x1, #0xf
  41d6d0:	and	x1, x1, #0x1fffffff0
  41d6d4:	sub	sp, sp, x1
  41d6d8:	mov	x20, sp
  41d6dc:	ldr	x5, [x0, #16]
  41d6e0:	ldrb	w0, [x5]
  41d6e4:	cmp	w0, #0x4c
  41d6e8:	cset	x1, eq  // eq = none
  41d6ec:	add	x1, x1, #0x1
  41d6f0:	add	x1, x5, x1
  41d6f4:	mov	w2, w2
  41d6f8:	sub	x2, x2, #0x1
  41d6fc:	add	x5, x5, x2
  41d700:	cmp	x1, x5
  41d704:	b.cs	41d784 <nftw@plt+0x1ac04>  // b.hs, b.nlast
  41d708:	mov	x3, x20
  41d70c:	mov	w6, #0x5c                  	// #92
  41d710:	b	41d760 <nftw@plt+0x1abe0>
  41d714:	ldr	x0, [x19, #448]
  41d718:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d71c:	add	x4, x4, #0x6a8
  41d720:	mov	w3, #0x0                   	// #0
  41d724:	ldur	w2, [x0, #-24]
  41d728:	mov	w1, #0x3                   	// #3
  41d72c:	mov	x0, x19
  41d730:	bl	41fb7c <nftw@plt+0x1cffc>
  41d734:	mov	w1, #0x0                   	// #0
  41d738:	mov	x0, x19
  41d73c:	bl	41c0b0 <nftw@plt+0x19530>
  41d740:	mov	x0, x19
  41d744:	bl	41c138 <nftw@plt+0x195b8>
  41d748:	b	41d808 <nftw@plt+0x1ac88>
  41d74c:	mov	x1, x2
  41d750:	ldrb	w2, [x1], #1
  41d754:	strb	w2, [x3], #1
  41d758:	cmp	x5, x1
  41d75c:	b.ls	41d788 <nftw@plt+0x1ac08>  // b.plast
  41d760:	ldrb	w4, [x1]
  41d764:	mov	x2, x1
  41d768:	cmp	w4, #0x5c
  41d76c:	b.ne	41d74c <nftw@plt+0x1abcc>  // b.any
  41d770:	ldrb	w0, [x1, #1]
  41d774:	cmp	w0, #0x22
  41d778:	ccmp	w0, w6, #0x4, ne  // ne = any
  41d77c:	cinc	x2, x1, eq  // eq = none
  41d780:	b	41d74c <nftw@plt+0x1abcc>
  41d784:	mov	x3, x20
  41d788:	strb	wzr, [x3]
  41d78c:	mov	w1, #0x0                   	// #0
  41d790:	mov	x0, x19
  41d794:	bl	41c0b0 <nftw@plt+0x19530>
  41d798:	mov	x0, x19
  41d79c:	bl	41c138 <nftw@plt+0x195b8>
  41d7a0:	mov	x0, #0x20                  	// #32
  41d7a4:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41d7a8:	mov	x21, x0
  41d7ac:	stp	xzr, xzr, [x0]
  41d7b0:	stp	xzr, xzr, [x0, #16]
  41d7b4:	mov	x0, x20
  41d7b8:	bl	4024f0 <strlen@plt>
  41d7bc:	add	x0, x0, #0x1
  41d7c0:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41d7c4:	mov	x22, x0
  41d7c8:	str	x0, [x21, #8]
  41d7cc:	mov	x1, x20
  41d7d0:	bl	402990 <strcpy@plt>
  41d7d4:	ldr	x0, [x19, #1400]
  41d7d8:	str	x0, [x21]
  41d7dc:	mov	x1, x22
  41d7e0:	mov	x0, x19
  41d7e4:	bl	427230 <nftw@plt+0x246b0>
  41d7e8:	mov	x20, x0
  41d7ec:	ldrb	w0, [x0, #18]
  41d7f0:	tst	x0, #0x3
  41d7f4:	b.ne	41d820 <nftw@plt+0x1aca0>  // b.any
  41d7f8:	ldrb	w0, [x21, #28]
  41d7fc:	orr	w0, w0, #0x4
  41d800:	strb	w0, [x21, #28]
  41d804:	str	x21, [x19, #1400]
  41d808:	mov	sp, x29
  41d80c:	ldp	x19, x20, [sp, #16]
  41d810:	ldp	x21, x22, [sp, #32]
  41d814:	ldr	x23, [sp, #48]
  41d818:	ldp	x29, x30, [sp], #64
  41d81c:	ret
  41d820:	mov	x1, x20
  41d824:	mov	x0, x19
  41d828:	bl	431ad4 <nftw@plt+0x2ef54>
  41d82c:	mov	x23, x0
  41d830:	bl	4024f0 <strlen@plt>
  41d834:	mov	x22, x0
  41d838:	add	x0, x0, #0x2
  41d83c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41d840:	str	x0, [x21, #16]
  41d844:	mov	w2, #0xa                   	// #10
  41d848:	strb	w2, [x0, x22]
  41d84c:	add	x1, x0, x22
  41d850:	strb	wzr, [x1, #1]
  41d854:	ldr	x1, [x20, #24]
  41d858:	ldr	w1, [x1, #8]
  41d85c:	str	w1, [x21, #24]
  41d860:	ldr	x1, [x20, #24]
  41d864:	ldrb	w2, [x1, #19]
  41d868:	ubfx	x2, x2, #4, #1
  41d86c:	ldrb	w1, [x21, #28]
  41d870:	bfxil	w1, w2, #0, #1
  41d874:	strb	w1, [x21, #28]
  41d878:	ldr	x2, [x20, #24]
  41d87c:	ldrb	w2, [x2, #19]
  41d880:	ubfx	x2, x2, #5, #1
  41d884:	bfi	w1, w2, #1, #1
  41d888:	strb	w1, [x21, #28]
  41d88c:	mov	x2, x22
  41d890:	mov	x1, x23
  41d894:	bl	402490 <memcpy@plt>
  41d898:	b	41d804 <nftw@plt+0x1ac84>
  41d89c:	stp	x29, x30, [sp, #-32]!
  41d8a0:	mov	x29, sp
  41d8a4:	str	x19, [sp, #16]
  41d8a8:	mov	x19, x0
  41d8ac:	ldr	x0, [x0, #40]
  41d8b0:	ldr	w0, [x0, #48]
  41d8b4:	cmp	w0, #0x1
  41d8b8:	b.eq	41d8e4 <nftw@plt+0x1ad64>  // b.none
  41d8bc:	mov	w1, #0x0                   	// #0
  41d8c0:	mov	x0, x19
  41d8c4:	bl	41c0b0 <nftw@plt+0x19530>
  41d8c8:	ldr	x0, [x19]
  41d8cc:	ldr	x1, [x0, #80]
  41d8d0:	mov	x0, x19
  41d8d4:	bl	425724 <nftw@plt+0x22ba4>
  41d8d8:	ldr	x19, [sp, #16]
  41d8dc:	ldp	x29, x30, [sp], #32
  41d8e0:	ret
  41d8e4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41d8e8:	add	x2, x2, #0x6d0
  41d8ec:	mov	w1, #0x0                   	// #0
  41d8f0:	mov	x0, x19
  41d8f4:	bl	41f990 <nftw@plt+0x1ce10>
  41d8f8:	b	41d8bc <nftw@plt+0x1ad3c>
  41d8fc:	stp	x29, x30, [sp, #-32]!
  41d900:	mov	x29, sp
  41d904:	stp	x19, x20, [sp, #16]
  41d908:	mov	x19, x0
  41d90c:	mov	x20, x1
  41d910:	cbnz	x0, 41d958 <nftw@plt+0x1add8>
  41d914:	mov	x0, x20
  41d918:	ldp	x19, x20, [sp, #16]
  41d91c:	ldp	x29, x30, [sp], #32
  41d920:	ret
  41d924:	mov	x1, x20
  41d928:	ldr	x0, [x19, #24]
  41d92c:	bl	41d8fc <nftw@plt+0x1ad7c>
  41d930:	ldr	x3, [x19, #8]
  41d934:	ldr	w1, [x3, #8]
  41d938:	mov	x20, x0
  41d93c:	add	w2, w1, #0x1
  41d940:	mov	w1, w1
  41d944:	ldr	x0, [x3]
  41d948:	bl	44a7d4 <_obstack_memory_used@@Base+0x1d0>
  41d94c:	str	x0, [x20], #8
  41d950:	ldr	x19, [x19]
  41d954:	cbz	x19, 41d914 <nftw@plt+0x1ad94>
  41d958:	ldrb	w1, [x19, #16]
  41d95c:	mov	x0, x20
  41d960:	cbz	w1, 41d930 <nftw@plt+0x1adb0>
  41d964:	b	41d924 <nftw@plt+0x1ada4>
  41d968:	stp	x29, x30, [sp, #-64]!
  41d96c:	mov	x29, sp
  41d970:	stp	x19, x20, [sp, #16]
  41d974:	stp	x21, x22, [sp, #32]
  41d978:	stp	x23, x24, [sp, #48]
  41d97c:	mov	x22, x0
  41d980:	mov	x20, x1
  41d984:	mov	x21, x2
  41d988:	and	w24, w3, #0xff
  41d98c:	cbz	x1, 41da20 <nftw@plt+0x1aea0>
  41d990:	mov	x0, x1
  41d994:	bl	4024f0 <strlen@plt>
  41d998:	mov	w2, w0
  41d99c:	mov	x1, x20
  41d9a0:	mov	x0, x22
  41d9a4:	bl	426234 <nftw@plt+0x236b4>
  41d9a8:	mov	x23, x0
  41d9ac:	ldr	x3, [x22, #896]
  41d9b0:	cbz	x3, 41d9c8 <nftw@plt+0x1ae48>
  41d9b4:	ldr	x0, [x3, #8]
  41d9b8:	cmp	x23, x0
  41d9bc:	b.eq	41db24 <nftw@plt+0x1afa4>  // b.none
  41d9c0:	ldr	x3, [x3]
  41d9c4:	cbnz	x3, 41d9b4 <nftw@plt+0x1ae34>
  41d9c8:	mov	x1, #0x20                  	// #32
  41d9cc:	mov	x0, x22
  41d9d0:	bl	42ae30 <nftw@plt+0x282b0>
  41d9d4:	mov	x3, x0
  41d9d8:	stp	xzr, xzr, [x0]
  41d9dc:	stp	xzr, xzr, [x0, #16]
  41d9e0:	ldr	x0, [x22, #896]
  41d9e4:	str	x0, [x3]
  41d9e8:	str	x3, [x22, #896]
  41d9ec:	str	x23, [x3, #8]
  41d9f0:	mov	w0, #0x1                   	// #1
  41d9f4:	strb	w0, [x3, #16]
  41d9f8:	strb	w24, [x3, #19]
  41d9fc:	b	41db38 <nftw@plt+0x1afb8>
  41da00:	mov	x3, x20
  41da04:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41da08:	add	x2, x2, #0x6f0
  41da0c:	mov	w1, #0x4                   	// #4
  41da10:	mov	x0, x22
  41da14:	bl	41f990 <nftw@plt+0x1ce10>
  41da18:	mov	x0, #0x0                   	// #0
  41da1c:	b	41db10 <nftw@plt+0x1af90>
  41da20:	add	x19, x0, #0x380
  41da24:	cbnz	w24, 41da88 <nftw@plt+0x1af08>
  41da28:	mov	x0, x21
  41da2c:	bl	4024f0 <strlen@plt>
  41da30:	mov	w2, w0
  41da34:	mov	x1, x21
  41da38:	mov	x0, x22
  41da3c:	bl	426234 <nftw@plt+0x236b4>
  41da40:	mov	x23, x0
  41da44:	ldr	x1, [x19]
  41da48:	cbz	x1, 41da60 <nftw@plt+0x1aee0>
  41da4c:	ldr	x0, [x1, #8]
  41da50:	cmp	x23, x0
  41da54:	b.eq	41dae4 <nftw@plt+0x1af64>  // b.none
  41da58:	ldr	x1, [x1]
  41da5c:	cbnz	x1, 41da4c <nftw@plt+0x1aecc>
  41da60:	mov	x1, #0x20                  	// #32
  41da64:	mov	x0, x22
  41da68:	bl	42ae30 <nftw@plt+0x282b0>
  41da6c:	stp	xzr, xzr, [x0]
  41da70:	stp	xzr, xzr, [x0, #16]
  41da74:	ldr	x1, [x19]
  41da78:	str	x1, [x0]
  41da7c:	str	x0, [x19]
  41da80:	str	x23, [x0, #8]
  41da84:	b	41db10 <nftw@plt+0x1af90>
  41da88:	mov	x3, x2
  41da8c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41da90:	add	x2, x2, #0x738
  41da94:	mov	w1, #0x4                   	// #4
  41da98:	bl	41f990 <nftw@plt+0x1ce10>
  41da9c:	mov	x0, x20
  41daa0:	b	41db10 <nftw@plt+0x1af90>
  41daa4:	ldr	x3, [x23]
  41daa8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41daac:	add	x2, x2, #0x778
  41dab0:	mov	w1, #0x4                   	// #4
  41dab4:	mov	x0, x22
  41dab8:	bl	41f990 <nftw@plt+0x1ce10>
  41dabc:	mov	x0, #0x0                   	// #0
  41dac0:	b	41db10 <nftw@plt+0x1af90>
  41dac4:	mov	x3, x21
  41dac8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41dacc:	add	x2, x2, #0x7e0
  41dad0:	mov	w1, #0x4                   	// #4
  41dad4:	mov	x0, x22
  41dad8:	bl	41f990 <nftw@plt+0x1ce10>
  41dadc:	mov	x0, x20
  41dae0:	b	41db10 <nftw@plt+0x1af90>
  41dae4:	ldrb	w0, [x1, #16]
  41dae8:	cbnz	w0, 41daa4 <nftw@plt+0x1af24>
  41daec:	cbz	x20, 41dac4 <nftw@plt+0x1af44>
  41daf0:	mov	x4, x21
  41daf4:	mov	x3, x20
  41daf8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41dafc:	add	x2, x2, #0x7b8
  41db00:	mov	w1, #0x4                   	// #4
  41db04:	mov	x0, x22
  41db08:	bl	41f990 <nftw@plt+0x1ce10>
  41db0c:	mov	x0, #0x0                   	// #0
  41db10:	ldp	x19, x20, [sp, #16]
  41db14:	ldp	x21, x22, [sp, #32]
  41db18:	ldp	x23, x24, [sp, #48]
  41db1c:	ldp	x29, x30, [sp], #64
  41db20:	ret
  41db24:	ldrb	w0, [x3, #16]
  41db28:	cbz	w0, 41daa4 <nftw@plt+0x1af24>
  41db2c:	ldrb	w0, [x3, #19]
  41db30:	cmp	w0, w24
  41db34:	b.ne	41da00 <nftw@plt+0x1ae80>  // b.any
  41db38:	add	x19, x3, #0x18
  41db3c:	b	41da28 <nftw@plt+0x1aea8>
  41db40:	stp	x29, x30, [sp, #-32]!
  41db44:	mov	x29, sp
  41db48:	str	x19, [sp, #16]
  41db4c:	mov	x19, x3
  41db50:	mov	w3, #0x0                   	// #0
  41db54:	bl	41d968 <nftw@plt+0x1ade8>
  41db58:	mov	w1, #0x1                   	// #1
  41db5c:	strb	w1, [x0, #17]
  41db60:	str	x19, [x0, #24]
  41db64:	ldr	x19, [sp, #16]
  41db68:	ldp	x29, x30, [sp], #32
  41db6c:	ret
  41db70:	stp	x29, x30, [sp, #-96]!
  41db74:	mov	x29, sp
  41db78:	stp	x19, x20, [sp, #16]
  41db7c:	stp	x21, x22, [sp, #32]
  41db80:	mov	x19, x0
  41db84:	str	wzr, [sp, #92]
  41db88:	ldrb	w1, [x0, #24]
  41db8c:	add	w1, w1, #0x1
  41db90:	strb	w1, [x0, #24]
  41db94:	add	x1, sp, #0x5c
  41db98:	bl	431ac0 <nftw@plt+0x2ef40>
  41db9c:	mov	x21, x0
  41dba0:	ldp	x0, x1, [x0]
  41dba4:	stp	x0, x1, [sp, #64]
  41dba8:	ldr	x0, [x21, #16]
  41dbac:	str	x0, [sp, #80]
  41dbb0:	ldrb	w0, [x21, #4]
  41dbb4:	cmp	w0, #0x35
  41dbb8:	b.eq	41dbe0 <nftw@plt+0x1b060>  // b.none
  41dbbc:	ldr	x0, [x19, #960]
  41dbc0:	cbnz	x0, 41dd64 <nftw@plt+0x1b1e4>
  41dbc4:	ldrb	w0, [x19, #24]
  41dbc8:	sub	w0, w0, #0x1
  41dbcc:	strb	w0, [x19, #24]
  41dbd0:	ldp	x19, x20, [sp, #16]
  41dbd4:	ldp	x21, x22, [sp, #32]
  41dbd8:	ldp	x29, x30, [sp], #96
  41dbdc:	ret
  41dbe0:	ldr	x20, [x19, #896]
  41dbe4:	ldr	x1, [x21, #8]
  41dbe8:	cbz	x20, 41dbbc <nftw@plt+0x1b03c>
  41dbec:	str	x23, [sp, #48]
  41dbf0:	ldr	x0, [x20, #8]
  41dbf4:	cmp	x1, x0
  41dbf8:	b.eq	41dd90 <nftw@plt+0x1b210>  // b.none
  41dbfc:	ldr	x20, [x20]
  41dc00:	cbnz	x20, 41dbf0 <nftw@plt+0x1b070>
  41dc04:	ldr	x23, [sp, #48]
  41dc08:	b	41dbbc <nftw@plt+0x1b03c>
  41dc0c:	ldrb	w23, [x20, #19]
  41dc10:	cbz	w23, 41dc20 <nftw@plt+0x1b0a0>
  41dc14:	ldrb	w0, [x19, #24]
  41dc18:	sub	w0, w0, #0x1
  41dc1c:	strb	w0, [x19, #24]
  41dc20:	mov	x0, x19
  41dc24:	bl	431a1c <nftw@plt+0x2ee9c>
  41dc28:	mov	x22, x0
  41dc2c:	ldrb	w0, [x0, #4]
  41dc30:	cmp	w0, #0x35
  41dc34:	b.eq	41dc58 <nftw@plt+0x1b0d8>  // b.none
  41dc38:	cbz	w23, 41dc48 <nftw@plt+0x1b0c8>
  41dc3c:	ldrb	w0, [x19, #24]
  41dc40:	add	w0, w0, #0x1
  41dc44:	strb	w0, [x19, #24]
  41dc48:	ldr	x0, [x19, #960]
  41dc4c:	cbnz	x0, 41dcd0 <nftw@plt+0x1b150>
  41dc50:	ldr	x23, [sp, #48]
  41dc54:	b	41dbc4 <nftw@plt+0x1b044>
  41dc58:	ldr	x20, [x20, #24]
  41dc5c:	ldr	x1, [x22, #8]
  41dc60:	cbz	x20, 41dc38 <nftw@plt+0x1b0b8>
  41dc64:	ldr	x0, [x20, #8]
  41dc68:	cmp	x1, x0
  41dc6c:	b.eq	41dd7c <nftw@plt+0x1b1fc>  // b.none
  41dc70:	ldr	x20, [x20]
  41dc74:	cbnz	x20, 41dc64 <nftw@plt+0x1b0e4>
  41dc78:	b	41dc38 <nftw@plt+0x1b0b8>
  41dc7c:	ldr	x3, [x19, #904]
  41dc80:	cbz	x3, 41dc94 <nftw@plt+0x1b114>
  41dc84:	mov	w2, #0x0                   	// #0
  41dc88:	mov	x1, x21
  41dc8c:	mov	x0, x19
  41dc90:	blr	x3
  41dc94:	ldrb	w0, [x20, #19]
  41dc98:	cbz	w0, 41dca8 <nftw@plt+0x1b128>
  41dc9c:	ldrb	w0, [x19, #24]
  41dca0:	sub	w0, w0, #0x1
  41dca4:	strb	w0, [x19, #24]
  41dca8:	ldr	x1, [x20, #24]
  41dcac:	mov	x0, x19
  41dcb0:	blr	x1
  41dcb4:	ldrb	w0, [x20, #19]
  41dcb8:	cbz	w0, 41dd74 <nftw@plt+0x1b1f4>
  41dcbc:	ldrb	w0, [x19, #24]
  41dcc0:	add	w0, w0, #0x1
  41dcc4:	strb	w0, [x19, #24]
  41dcc8:	ldr	x23, [sp, #48]
  41dccc:	b	41dbc4 <nftw@plt+0x1b044>
  41dcd0:	ldr	x0, [x19, #136]
  41dcd4:	ldr	x0, [x0, #8]
  41dcd8:	cbz	x0, 41dd40 <nftw@plt+0x1b1c0>
  41dcdc:	mov	x0, #0x30                  	// #48
  41dce0:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41dce4:	mov	x2, x0
  41dce8:	ldr	x1, [sp, #64]
  41dcec:	str	x1, [x0]
  41dcf0:	ldr	x0, [sp, #72]
  41dcf4:	str	x0, [x2, #8]
  41dcf8:	ldr	x0, [sp, #80]
  41dcfc:	str	x0, [x2, #16]
  41dd00:	lsr	x1, x1, #48
  41dd04:	orr	w1, w1, #0x400
  41dd08:	strh	w1, [x2, #6]
  41dd0c:	ldp	x4, x5, [x22]
  41dd10:	stp	x4, x5, [x2, #24]
  41dd14:	ldr	x1, [x22, #16]
  41dd18:	str	x1, [x2, #40]
  41dd1c:	ldrh	w1, [x2, #30]
  41dd20:	orr	w1, w1, #0x400
  41dd24:	strh	w1, [x2, #30]
  41dd28:	mov	w3, #0x2                   	// #2
  41dd2c:	mov	x1, #0x0                   	// #0
  41dd30:	mov	x0, x19
  41dd34:	bl	42e500 <nftw@plt+0x2b980>
  41dd38:	ldr	x23, [sp, #48]
  41dd3c:	b	41dd50 <nftw@plt+0x1b1d0>
  41dd40:	mov	w1, #0x2                   	// #2
  41dd44:	ldr	x23, [sp, #48]
  41dd48:	mov	x0, x19
  41dd4c:	bl	42e8f0 <nftw@plt+0x2bd70>
  41dd50:	ldr	x2, [x19, #960]
  41dd54:	ldr	w1, [x19, #48]
  41dd58:	mov	x0, x19
  41dd5c:	blr	x2
  41dd60:	b	41dbc4 <nftw@plt+0x1b044>
  41dd64:	mov	w1, #0x1                   	// #1
  41dd68:	b	41dd48 <nftw@plt+0x1b1c8>
  41dd6c:	ldr	x23, [sp, #48]
  41dd70:	b	41dbc4 <nftw@plt+0x1b044>
  41dd74:	ldr	x23, [sp, #48]
  41dd78:	b	41dbc4 <nftw@plt+0x1b044>
  41dd7c:	cbz	w23, 41dd98 <nftw@plt+0x1b218>
  41dd80:	ldrb	w0, [x19, #24]
  41dd84:	add	w0, w0, #0x1
  41dd88:	strb	w0, [x19, #24]
  41dd8c:	b	41dd98 <nftw@plt+0x1b218>
  41dd90:	ldrb	w0, [x20, #16]
  41dd94:	cbnz	w0, 41dc0c <nftw@plt+0x1b08c>
  41dd98:	ldrb	w0, [x20, #18]
  41dd9c:	cbz	w0, 41dc7c <nftw@plt+0x1b0fc>
  41dda0:	ldr	w0, [sp, #92]
  41dda4:	str	w0, [x19, #152]
  41dda8:	mov	w0, #0x51                  	// #81
  41ddac:	strb	w0, [x19, #156]
  41ddb0:	ldrh	w0, [x21, #6]
  41ddb4:	strh	w0, [x19, #158]
  41ddb8:	ldr	w0, [x20, #24]
  41ddbc:	str	w0, [x19, #160]
  41ddc0:	mov	w0, #0x1                   	// #1
  41ddc4:	strb	w0, [x19, #32]
  41ddc8:	ldrb	w0, [x20, #19]
  41ddcc:	strb	w0, [x19, #33]
  41ddd0:	ldrb	w0, [x20, #19]
  41ddd4:	cbnz	w0, 41dd6c <nftw@plt+0x1b1ec>
  41ddd8:	ldrb	w0, [x19, #24]
  41dddc:	add	w0, w0, #0x1
  41dde0:	strb	w0, [x19, #24]
  41dde4:	ldr	x23, [sp, #48]
  41dde8:	b	41dbc4 <nftw@plt+0x1b044>
  41ddec:	stp	x29, x30, [sp, #-48]!
  41ddf0:	mov	x29, sp
  41ddf4:	stp	x19, x20, [sp, #16]
  41ddf8:	str	x21, [sp, #32]
  41ddfc:	mov	x19, x0
  41de00:	ldr	x20, [x0]
  41de04:	ldr	x21, [x20, #96]
  41de08:	cbz	x21, 41de58 <nftw@plt+0x1b2d8>
  41de0c:	ldrb	w0, [x21, #25]
  41de10:	cbnz	w0, 41de1c <nftw@plt+0x1b29c>
  41de14:	ldrb	w0, [x19, #1140]
  41de18:	cbnz	w0, 41de6c <nftw@plt+0x1b2ec>
  41de1c:	ldr	x0, [x21]
  41de20:	cbz	x0, 41de80 <nftw@plt+0x1b300>
  41de24:	ldr	x0, [x21]
  41de28:	str	x0, [x20, #96]
  41de2c:	ldrb	w0, [x21, #25]
  41de30:	strb	w0, [x19, #18]
  41de34:	ldr	x0, [x19, #816]
  41de38:	cmp	x0, x21
  41de3c:	b.cs	41de9c <nftw@plt+0x1b31c>  // b.hs, b.nlast
  41de40:	ldr	x0, [x19, #840]
  41de44:	cmp	x0, x21
  41de48:	b.ls	41de9c <nftw@plt+0x1b31c>  // b.plast
  41de4c:	str	x21, [x19, #824]
  41de50:	str	x21, [x19, #832]
  41de54:	b	41dea8 <nftw@plt+0x1b328>
  41de58:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41de5c:	add	x2, x2, #0x808
  41de60:	mov	w1, #0x3                   	// #3
  41de64:	bl	41f990 <nftw@plt+0x1ce10>
  41de68:	b	41dea8 <nftw@plt+0x1b328>
  41de6c:	mov	w2, #0x8                   	// #8
  41de70:	mov	w1, #0x0                   	// #0
  41de74:	mov	x0, x19
  41de78:	bl	41c038 <nftw@plt+0x194b8>
  41de7c:	b	41de1c <nftw@plt+0x1b29c>
  41de80:	ldr	x0, [x21, #16]
  41de84:	cbz	x0, 41de24 <nftw@plt+0x1b2a4>
  41de88:	mov	w0, #0x1                   	// #1
  41de8c:	strb	w0, [x19, #440]
  41de90:	ldr	x0, [x21, #16]
  41de94:	str	x0, [x19, #424]
  41de98:	b	41de24 <nftw@plt+0x1b2a4>
  41de9c:	mov	x1, x21
  41dea0:	add	x0, x19, #0x328
  41dea4:	bl	44a584 <_obstack_free@@Base>
  41dea8:	ldp	x19, x20, [sp, #16]
  41deac:	ldr	x21, [sp, #32]
  41deb0:	ldp	x29, x30, [sp], #48
  41deb4:	ret
  41deb8:	stp	x29, x30, [sp, #-240]!
  41debc:	mov	x29, sp
  41dec0:	stp	x19, x20, [sp, #16]
  41dec4:	stp	x21, x22, [sp, #32]
  41dec8:	stp	x23, x24, [sp, #48]
  41decc:	mov	x19, x0
  41ded0:	mov	w21, w1
  41ded4:	ldrb	w22, [x0, #25]
  41ded8:	ldrb	w23, [x0, #27]
  41dedc:	cbz	w23, 41dee4 <nftw@plt+0x1b364>
  41dee0:	strb	wzr, [x0, #24]
  41dee4:	cbz	w22, 41def8 <nftw@plt+0x1b378>
  41dee8:	ldrb	w0, [x19, #1154]
  41deec:	cbnz	w0, 41df74 <nftw@plt+0x1b3f4>
  41def0:	strb	wzr, [x19, #25]
  41def4:	strb	wzr, [x19, #24]
  41def8:	mov	w0, #0x1                   	// #1
  41defc:	strb	w0, [x19, #16]
  41df00:	strb	wzr, [x19, #21]
  41df04:	mov	w0, #0x53                  	// #83
  41df08:	strb	w0, [x19, #156]
  41df0c:	ldr	x0, [x19, #40]
  41df10:	ldr	w0, [x0, #60]
  41df14:	str	w0, [x19, #48]
  41df18:	mov	x0, x19
  41df1c:	bl	42ab60 <nftw@plt+0x27fe0>
  41df20:	mov	x20, x0
  41df24:	ldrb	w0, [x0, #4]
  41df28:	cmp	w0, #0x35
  41df2c:	b.eq	41df8c <nftw@plt+0x1b40c>  // b.none
  41df30:	cmp	w0, #0x37
  41df34:	b.eq	41e064 <nftw@plt+0x1b4e4>  // b.none
  41df38:	cmp	w0, #0x16
  41df3c:	b.eq	41df54 <nftw@plt+0x1b3d4>  // b.none
  41df40:	ldr	w0, [x19, #1116]
  41df44:	cmp	w0, #0x15
  41df48:	b.eq	41e290 <nftw@plt+0x1b710>  // b.none
  41df4c:	ldrb	w0, [x19, #18]
  41df50:	cbz	w0, 41e1e0 <nftw@plt+0x1b660>
  41df54:	str	xzr, [x19, #144]
  41df58:	ldrb	w0, [x19, #1160]
  41df5c:	mov	w20, #0x1                   	// #1
  41df60:	cbz	w0, 41e018 <nftw@plt+0x1b498>
  41df64:	mov	x0, x19
  41df68:	bl	41d304 <nftw@plt+0x1a784>
  41df6c:	mov	w20, #0x1                   	// #1
  41df70:	b	41e018 <nftw@plt+0x1b498>
  41df74:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41df78:	add	x2, x2, #0x820
  41df7c:	mov	w1, #0x2                   	// #2
  41df80:	mov	x0, x19
  41df84:	bl	41f990 <nftw@plt+0x1ce10>
  41df88:	b	41def0 <nftw@plt+0x1b370>
  41df8c:	ldr	x0, [x20, #8]
  41df90:	ldrb	w1, [x0, #16]
  41df94:	tbz	w1, #0, 41df40 <nftw@plt+0x1b3c0>
  41df98:	ldrb	w0, [x0, #16]
  41df9c:	ubfx	x1, x0, #1, #7
  41dfa0:	and	x20, x0, #0xfe
  41dfa4:	add	x20, x20, x1
  41dfa8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41dfac:	add	x0, x0, #0xc88
  41dfb0:	add	x20, x0, x20, lsl #3
  41dfb4:	ldrb	w0, [x20, #19]
  41dfb8:	tbz	w0, #1, 41e094 <nftw@plt+0x1b514>
  41dfbc:	ldrb	w0, [x19, #1155]
  41dfc0:	cbz	w0, 41e2c4 <nftw@plt+0x1b744>
  41dfc4:	ldrb	w0, [x19, #1244]
  41dfc8:	cbnz	w0, 41dfd8 <nftw@plt+0x1b458>
  41dfcc:	cbnz	w21, 41e290 <nftw@plt+0x1b710>
  41dfd0:	ldrb	w0, [x20, #19]
  41dfd4:	tbz	w0, #3, 41e290 <nftw@plt+0x1b710>
  41dfd8:	ldrb	w0, [x20, #19]
  41dfdc:	and	w0, w0, #0x4
  41dfe0:	strb	w0, [x19, #19]
  41dfe4:	ldrb	w0, [x20, #19]
  41dfe8:	and	w0, w0, #0x4
  41dfec:	strb	w0, [x19, #17]
  41dff0:	ldrb	w0, [x19, #18]
  41dff4:	cbnz	w0, 41e2ec <nftw@plt+0x1b76c>
  41dff8:	str	x20, [x19, #144]
  41dffc:	ldrb	w0, [x19, #1160]
  41e000:	cbnz	w0, 41e2f8 <nftw@plt+0x1b778>
  41e004:	ldr	x0, [x19, #144]
  41e008:	ldr	x1, [x0]
  41e00c:	mov	x0, x19
  41e010:	blr	x1
  41e014:	mov	w20, #0x1                   	// #1
  41e018:	mov	w1, w20
  41e01c:	mov	x0, x19
  41e020:	bl	41d448 <nftw@plt+0x1a8c8>
  41e024:	cbz	w22, 41e040 <nftw@plt+0x1b4c0>
  41e028:	ldrb	w0, [x19, #32]
  41e02c:	cbnz	w0, 41e040 <nftw@plt+0x1b4c0>
  41e030:	mov	w0, #0x2                   	// #2
  41e034:	strb	w0, [x19, #25]
  41e038:	mov	w0, #0x1                   	// #1
  41e03c:	strb	w0, [x19, #24]
  41e040:	cbz	w23, 41e04c <nftw@plt+0x1b4cc>
  41e044:	mov	w0, #0x1                   	// #1
  41e048:	strb	w0, [x19, #24]
  41e04c:	mov	w0, w20
  41e050:	ldp	x19, x20, [sp, #16]
  41e054:	ldp	x21, x22, [sp, #32]
  41e058:	ldp	x23, x24, [sp, #48]
  41e05c:	ldp	x29, x30, [sp], #240
  41e060:	ret
  41e064:	ldr	w0, [x19, #1116]
  41e068:	cmp	w0, #0x15
  41e06c:	b.eq	41e290 <nftw@plt+0x1b710>  // b.none
  41e070:	ldrb	w0, [x19, #1154]
  41e074:	cbz	w0, 41e088 <nftw@plt+0x1b508>
  41e078:	ldrb	w0, [x19, #1155]
  41e07c:	cbnz	w0, 41e088 <nftw@plt+0x1b508>
  41e080:	ldrb	w0, [x19, #18]
  41e084:	cbz	w0, 41e09c <nftw@plt+0x1b51c>
  41e088:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e08c:	add	x20, x20, #0xc88
  41e090:	add	x20, x20, #0x1c8
  41e094:	strb	wzr, [x19, #440]
  41e098:	b	41dfbc <nftw@plt+0x1b43c>
  41e09c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e0a0:	add	x2, x2, #0x860
  41e0a4:	mov	w1, #0x2                   	// #2
  41e0a8:	mov	x0, x19
  41e0ac:	bl	41f990 <nftw@plt+0x1ce10>
  41e0b0:	b	41e088 <nftw@plt+0x1b508>
  41e0b4:	ldrb	w0, [x20, #18]
  41e0b8:	cmp	w0, #0x2
  41e0bc:	b.eq	41e114 <nftw@plt+0x1b594>  // b.none
  41e0c0:	ldrb	w0, [x20, #19]
  41e0c4:	tbz	w0, #5, 41e160 <nftw@plt+0x1b5e0>
  41e0c8:	ldrb	w0, [x19, #1132]
  41e0cc:	cbnz	w0, 41e180 <nftw@plt+0x1b600>
  41e0d0:	ldrb	w0, [x19, #1138]
  41e0d4:	cbz	w0, 41dff8 <nftw@plt+0x1b478>
  41e0d8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e0dc:	add	x0, x0, #0xc88
  41e0e0:	add	x0, x0, #0xd8
  41e0e4:	cmp	x20, x0
  41e0e8:	b.eq	41e1a4 <nftw@plt+0x1b624>  // b.none
  41e0ec:	cbz	w21, 41e1bc <nftw@plt+0x1b63c>
  41e0f0:	ldrb	w0, [x20, #18]
  41e0f4:	cbnz	w0, 41dff0 <nftw@plt+0x1b470>
  41e0f8:	ldr	x3, [x20, #8]
  41e0fc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e100:	add	x2, x2, #0x900
  41e104:	mov	w1, #0x6                   	// #6
  41e108:	mov	x0, x19
  41e10c:	bl	41fa08 <nftw@plt+0x1ce88>
  41e110:	b	41dff0 <nftw@plt+0x1b470>
  41e114:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e118:	add	x0, x0, #0xc88
  41e11c:	add	x0, x0, #0x168
  41e120:	cmp	x20, x0
  41e124:	b.eq	41e14c <nftw@plt+0x1b5cc>  // b.none
  41e128:	ldrb	w0, [x19, #1154]
  41e12c:	cbz	w0, 41e0c0 <nftw@plt+0x1b540>
  41e130:	ldr	x3, [x20, #8]
  41e134:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e138:	add	x2, x2, #0x890
  41e13c:	mov	w1, #0x2                   	// #2
  41e140:	mov	x0, x19
  41e144:	bl	41f990 <nftw@plt+0x1ce10>
  41e148:	b	41e198 <nftw@plt+0x1b618>
  41e14c:	ldrb	w0, [x19, #1122]
  41e150:	cbz	w0, 41e2b8 <nftw@plt+0x1b738>
  41e154:	ldrb	w0, [x19, #1138]
  41e158:	cbnz	w0, 41e0ec <nftw@plt+0x1b56c>
  41e15c:	b	41dff8 <nftw@plt+0x1b478>
  41e160:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e164:	add	x0, x0, #0xc88
  41e168:	add	x0, x0, #0x168
  41e16c:	cmp	x20, x0
  41e170:	b.ne	41e0d0 <nftw@plt+0x1b550>  // b.any
  41e174:	ldrb	w0, [x19, #1122]
  41e178:	cbz	w0, 41e0c8 <nftw@plt+0x1b548>
  41e17c:	b	41e154 <nftw@plt+0x1b5d4>
  41e180:	ldr	x3, [x20, #8]
  41e184:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e188:	add	x2, x2, #0x8a8
  41e18c:	mov	w1, #0x1                   	// #1
  41e190:	mov	x0, x19
  41e194:	bl	41fa08 <nftw@plt+0x1ce88>
  41e198:	ldrb	w0, [x19, #1138]
  41e19c:	cbz	w0, 41dff0 <nftw@plt+0x1b470>
  41e1a0:	b	41e0d8 <nftw@plt+0x1b558>
  41e1a4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e1a8:	add	x2, x2, #0x8d0
  41e1ac:	mov	w1, #0x6                   	// #6
  41e1b0:	mov	x0, x19
  41e1b4:	bl	41fa08 <nftw@plt+0x1ce88>
  41e1b8:	b	41dff0 <nftw@plt+0x1b470>
  41e1bc:	ldrb	w0, [x20, #18]
  41e1c0:	cbz	w0, 41dff0 <nftw@plt+0x1b470>
  41e1c4:	ldr	x3, [x20, #8]
  41e1c8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e1cc:	add	x2, x2, #0x930
  41e1d0:	mov	w1, #0x6                   	// #6
  41e1d4:	mov	x0, x19
  41e1d8:	bl	41fa08 <nftw@plt+0x1ce88>
  41e1dc:	b	41dff0 <nftw@plt+0x1b470>
  41e1e0:	mov	x1, x20
  41e1e4:	mov	x0, x19
  41e1e8:	bl	42add4 <nftw@plt+0x28254>
  41e1ec:	mov	x21, x0
  41e1f0:	ldr	x3, [x19, #1064]
  41e1f4:	cbz	x3, 41e274 <nftw@plt+0x1b6f4>
  41e1f8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e1fc:	add	x2, x2, #0xc88
  41e200:	add	x2, x2, #0x1e0
  41e204:	mov	x1, x0
  41e208:	mov	x0, x19
  41e20c:	blr	x3
  41e210:	mov	x24, x0
  41e214:	cbz	x0, 41e274 <nftw@plt+0x1b6f4>
  41e218:	mov	x3, #0x0                   	// #0
  41e21c:	ldr	w2, [x20]
  41e220:	ldr	x1, [x19, #40]
  41e224:	add	x0, sp, #0x48
  41e228:	bl	42d310 <nftw@plt+0x2a790>
  41e22c:	ldr	w1, [x20]
  41e230:	ldr	x0, [x19, #40]
  41e234:	bl	42bef8 <nftw@plt+0x29378>
  41e238:	mov	x2, x24
  41e23c:	mov	x1, x0
  41e240:	add	x0, sp, #0x48
  41e244:	bl	42d97c <nftw@plt+0x2adfc>
  41e248:	mov	x5, x24
  41e24c:	mov	x4, x21
  41e250:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e254:	add	x3, x3, #0x970
  41e258:	add	x2, sp, #0x48
  41e25c:	mov	w1, #0x3                   	// #3
  41e260:	mov	x0, x19
  41e264:	bl	41fe24 <nftw@plt+0x1d2a4>
  41e268:	add	x0, sp, #0x48
  41e26c:	bl	42d0a0 <nftw@plt+0x2a520>
  41e270:	b	41df54 <nftw@plt+0x1b3d4>
  41e274:	mov	x3, x21
  41e278:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e27c:	add	x2, x2, #0x9a8
  41e280:	mov	w1, #0x3                   	// #3
  41e284:	mov	x0, x19
  41e288:	bl	41f990 <nftw@plt+0x1ce10>
  41e28c:	b	41df54 <nftw@plt+0x1b3d4>
  41e290:	str	xzr, [x19, #144]
  41e294:	ldrb	w0, [x19, #1160]
  41e298:	cbz	w0, 41e2a4 <nftw@plt+0x1b724>
  41e29c:	mov	x0, x19
  41e2a0:	bl	41d304 <nftw@plt+0x1a784>
  41e2a4:	mov	w1, #0x1                   	// #1
  41e2a8:	mov	x0, x19
  41e2ac:	bl	42e8f0 <nftw@plt+0x2bd70>
  41e2b0:	mov	w20, #0x0                   	// #0
  41e2b4:	b	41e018 <nftw@plt+0x1b498>
  41e2b8:	ldrb	w0, [x19, #1154]
  41e2bc:	cbz	w0, 41e0c8 <nftw@plt+0x1b548>
  41e2c0:	b	41e130 <nftw@plt+0x1b5b0>
  41e2c4:	ldrb	w0, [x20, #19]
  41e2c8:	and	w0, w0, #0x4
  41e2cc:	strb	w0, [x19, #19]
  41e2d0:	ldrb	w0, [x20, #19]
  41e2d4:	and	w0, w0, #0x4
  41e2d8:	strb	w0, [x19, #17]
  41e2dc:	ldrb	w0, [x19, #18]
  41e2e0:	cbz	w0, 41e0b4 <nftw@plt+0x1b534>
  41e2e4:	ldrb	w0, [x19, #1138]
  41e2e8:	cbnz	w0, 41e0d8 <nftw@plt+0x1b558>
  41e2ec:	ldrb	w0, [x20, #19]
  41e2f0:	tbz	w0, #0, 41df54 <nftw@plt+0x1b3d4>
  41e2f4:	b	41dff8 <nftw@plt+0x1b478>
  41e2f8:	mov	x0, x19
  41e2fc:	bl	41d304 <nftw@plt+0x1a784>
  41e300:	b	41e004 <nftw@plt+0x1b484>
  41e304:	stp	x29, x30, [sp, #-16]!
  41e308:	mov	x29, sp
  41e30c:	mov	x2, #0x0                   	// #0
  41e310:	adrp	x1, 41b000 <nftw@plt+0x18480>
  41e314:	add	x1, x1, #0xcf4
  41e318:	bl	4263c8 <nftw@plt+0x23848>
  41e31c:	ldp	x29, x30, [sp], #16
  41e320:	ret
  41e324:	stp	x29, x30, [sp, #-32]!
  41e328:	mov	x29, sp
  41e32c:	stp	x19, x20, [sp, #16]
  41e330:	mov	x19, x0
  41e334:	mov	w0, w4
  41e338:	mov	w4, w3
  41e33c:	mov	x3, x2
  41e340:	mov	w2, w0
  41e344:	ldr	x0, [x19, #40]
  41e348:	bl	42b3fc <nftw@plt+0x2887c>
  41e34c:	mov	x20, x0
  41e350:	cbz	x0, 41e364 <nftw@plt+0x1b7e4>
  41e354:	mov	w2, #0x7f                  	// #127
  41e358:	ldr	w1, [x0, #16]
  41e35c:	ldr	x0, [x19, #40]
  41e360:	bl	42b748 <nftw@plt+0x28bc8>
  41e364:	ldr	x2, [x19, #912]
  41e368:	cbz	x2, 41e378 <nftw@plt+0x1b7f8>
  41e36c:	mov	x1, x20
  41e370:	mov	x0, x19
  41e374:	blr	x2
  41e378:	ldp	x19, x20, [sp, #16]
  41e37c:	ldp	x29, x30, [sp], #32
  41e380:	ret
  41e384:	stp	x29, x30, [sp, #-80]!
  41e388:	mov	x29, sp
  41e38c:	stp	x19, x20, [sp, #16]
  41e390:	stp	x21, x22, [sp, #32]
  41e394:	stp	x23, x24, [sp, #48]
  41e398:	mov	x20, x0
  41e39c:	ldr	x21, [x0, #40]
  41e3a0:	ldr	w1, [x21, #12]
  41e3a4:	sub	w1, w1, #0x1
  41e3a8:	sbfiz	x2, x1, #1, #32
  41e3ac:	add	x1, x2, w1, sxtw
  41e3b0:	ldr	x2, [x21]
  41e3b4:	add	x1, x2, x1, lsl #3
  41e3b8:	ldr	x22, [x1, #8]
  41e3bc:	ldrb	w23, [x1, #5]
  41e3c0:	mov	w1, #0x1                   	// #1
  41e3c4:	bl	42e8f0 <nftw@plt+0x2bd70>
  41e3c8:	mov	x0, x20
  41e3cc:	bl	431a1c <nftw@plt+0x2ee9c>
  41e3d0:	mov	x1, x0
  41e3d4:	ldrb	w0, [x0, #4]
  41e3d8:	cmp	w0, #0x37
  41e3dc:	b.ne	41e480 <nftw@plt+0x1b900>  // b.any
  41e3e0:	ldr	x3, [x1, #16]
  41e3e4:	ldr	w2, [x1, #8]
  41e3e8:	cbz	x2, 41e630 <nftw@plt+0x1bab0>
  41e3ec:	mov	x0, x3
  41e3f0:	mov	w19, #0x0                   	// #0
  41e3f4:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  41e3f8:	add	x4, x4, #0xe68
  41e3fc:	add	x3, x3, x2
  41e400:	ldrb	w2, [x0], #1
  41e404:	ldrh	w5, [x4, w2, sxtw #1]
  41e408:	tbz	w5, #2, 41e480 <nftw@plt+0x1b900>
  41e40c:	add	w19, w19, w19, lsl #2
  41e410:	add	w19, w2, w19, lsl #1
  41e414:	sub	w19, w19, #0x30
  41e418:	cmp	x0, x3
  41e41c:	b.ne	41e400 <nftw@plt+0x1b880>  // b.any
  41e420:	mov	x0, x20
  41e424:	bl	431a1c <nftw@plt+0x2ee9c>
  41e428:	mov	x1, x0
  41e42c:	ldrb	w0, [x0, #4]
  41e430:	cmp	w0, #0x3e
  41e434:	b.eq	41e4b4 <nftw@plt+0x1b934>  // b.none
  41e438:	cmp	w0, #0x16
  41e43c:	b.ne	41e604 <nftw@plt+0x1ba84>  // b.any
  41e440:	mov	x0, x20
  41e444:	bl	41c138 <nftw@plt+0x195b8>
  41e448:	mov	w24, #0x3                   	// #3
  41e44c:	ldr	x1, [x20, #40]
  41e450:	ldr	w0, [x1, #56]
  41e454:	sub	w0, w0, #0x1
  41e458:	str	w0, [x1, #56]
  41e45c:	mov	w4, w23
  41e460:	mov	w3, w19
  41e464:	mov	x2, x22
  41e468:	mov	w1, w24
  41e46c:	mov	x0, x20
  41e470:	bl	41e324 <nftw@plt+0x1b7a4>
  41e474:	mov	w0, #0x1                   	// #1
  41e478:	strb	w0, [x21, #116]
  41e47c:	b	41e4a0 <nftw@plt+0x1b920>
  41e480:	mov	x0, x20
  41e484:	bl	42add4 <nftw@plt+0x28254>
  41e488:	mov	x3, x0
  41e48c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e490:	add	x2, x2, #0x9d0
  41e494:	mov	w1, #0x3                   	// #3
  41e498:	mov	x0, x20
  41e49c:	bl	41f990 <nftw@plt+0x1ce10>
  41e4a0:	ldp	x19, x20, [sp, #16]
  41e4a4:	ldp	x21, x22, [sp, #32]
  41e4a8:	ldp	x23, x24, [sp, #48]
  41e4ac:	ldp	x29, x30, [sp], #80
  41e4b0:	ret
  41e4b4:	str	wzr, [sp, #64]
  41e4b8:	str	xzr, [sp, #72]
  41e4bc:	mov	w4, #0x3e                  	// #62
  41e4c0:	add	x3, sp, #0x40
  41e4c4:	mov	x2, #0x1                   	// #1
  41e4c8:	add	x1, x1, #0x8
  41e4cc:	mov	x0, x20
  41e4d0:	bl	41b880 <nftw@plt+0x18d00>
  41e4d4:	ands	w0, w0, #0xff
  41e4d8:	ldr	x0, [sp, #72]
  41e4dc:	csel	x22, x0, x22, ne  // ne = any
  41e4e0:	mov	w1, #0x0                   	// #0
  41e4e4:	mov	x0, x20
  41e4e8:	bl	41be8c <nftw@plt+0x1930c>
  41e4ec:	cmp	w0, #0x1
  41e4f0:	b.eq	41e5a4 <nftw@plt+0x1ba24>  // b.none
  41e4f4:	mov	w24, #0x3                   	// #3
  41e4f8:	cmp	w0, #0x2
  41e4fc:	b.eq	41e5c4 <nftw@plt+0x1ba44>  // b.none
  41e500:	cmp	w0, #0x3
  41e504:	b.ne	41e638 <nftw@plt+0x1bab8>  // b.any
  41e508:	mov	w1, #0x3                   	// #3
  41e50c:	mov	x0, x20
  41e510:	bl	41be8c <nftw@plt+0x1930c>
  41e514:	cmp	w0, #0x4
  41e518:	cset	w23, eq  // eq = none
  41e51c:	add	w23, w23, #0x1
  41e520:	ldr	x0, [x20]
  41e524:	strb	w23, [x0, #106]
  41e528:	mov	w1, #0x0                   	// #0
  41e52c:	mov	x0, x20
  41e530:	bl	41c0b0 <nftw@plt+0x19530>
  41e534:	mov	x0, x20
  41e538:	bl	41c138 <nftw@plt+0x195b8>
  41e53c:	cmp	w24, #0x1
  41e540:	b.ne	41e44c <nftw@plt+0x1b8cc>  // b.any
  41e544:	ldr	w24, [x21, #12]
  41e548:	sub	w24, w24, #0x1
  41e54c:	sbfiz	x0, x24, #1, #32
  41e550:	add	x24, x0, w24, sxtw
  41e554:	ldr	x0, [x21]
  41e558:	add	x24, x0, x24, lsl #3
  41e55c:	mov	x1, x24
  41e560:	mov	x0, x21
  41e564:	bl	42b36c <nftw@plt+0x287ec>
  41e568:	ldr	w1, [x24, #20]
  41e56c:	cbz	w1, 41e588 <nftw@plt+0x1ba08>
  41e570:	cbz	x0, 41e628 <nftw@plt+0x1baa8>
  41e574:	mov	x1, x22
  41e578:	ldr	x0, [x0, #8]
  41e57c:	bl	448fdc <nftw@plt+0x4645c>
  41e580:	mov	w24, #0x1                   	// #1
  41e584:	cbz	w0, 41e44c <nftw@plt+0x1b8cc>
  41e588:	mov	x3, x22
  41e58c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e590:	add	x2, x2, #0xa18
  41e594:	mov	w1, #0x0                   	// #0
  41e598:	mov	x0, x20
  41e59c:	bl	41fa08 <nftw@plt+0x1ce88>
  41e5a0:	b	41e4a0 <nftw@plt+0x1b920>
  41e5a4:	mov	x1, x22
  41e5a8:	mov	x0, x20
  41e5ac:	bl	425b44 <nftw@plt+0x22fc4>
  41e5b0:	mov	w1, #0x1                   	// #1
  41e5b4:	mov	x0, x20
  41e5b8:	bl	41be8c <nftw@plt+0x1930c>
  41e5bc:	mov	w24, #0x0                   	// #0
  41e5c0:	b	41e500 <nftw@plt+0x1b980>
  41e5c4:	mov	w1, #0x2                   	// #2
  41e5c8:	mov	x0, x20
  41e5cc:	bl	41be8c <nftw@plt+0x1930c>
  41e5d0:	cmp	w0, w24
  41e5d4:	b.eq	41e5fc <nftw@plt+0x1ba7c>  // b.none
  41e5d8:	ldr	x0, [x20]
  41e5dc:	strb	wzr, [x0, #106]
  41e5e0:	mov	w1, #0x0                   	// #0
  41e5e4:	mov	x0, x20
  41e5e8:	bl	41c0b0 <nftw@plt+0x19530>
  41e5ec:	mov	x0, x20
  41e5f0:	bl	41c138 <nftw@plt+0x195b8>
  41e5f4:	mov	w23, #0x0                   	// #0
  41e5f8:	b	41e544 <nftw@plt+0x1b9c4>
  41e5fc:	mov	w24, #0x1                   	// #1
  41e600:	b	41e508 <nftw@plt+0x1b988>
  41e604:	mov	x0, x20
  41e608:	bl	42add4 <nftw@plt+0x28254>
  41e60c:	mov	x3, x0
  41e610:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e614:	add	x2, x2, #0x9f8
  41e618:	mov	w1, #0x3                   	// #3
  41e61c:	mov	x0, x20
  41e620:	bl	41f990 <nftw@plt+0x1ce10>
  41e624:	b	41e4a0 <nftw@plt+0x1b920>
  41e628:	mov	w24, #0x1                   	// #1
  41e62c:	b	41e44c <nftw@plt+0x1b8cc>
  41e630:	mov	w19, #0x0                   	// #0
  41e634:	b	41e420 <nftw@plt+0x1b8a0>
  41e638:	ldr	x0, [x20]
  41e63c:	strb	wzr, [x0, #106]
  41e640:	mov	w1, #0x0                   	// #0
  41e644:	mov	x0, x20
  41e648:	bl	41c0b0 <nftw@plt+0x19530>
  41e64c:	mov	x0, x20
  41e650:	bl	41c138 <nftw@plt+0x195b8>
  41e654:	mov	w23, #0x0                   	// #0
  41e658:	b	41e44c <nftw@plt+0x1b8cc>
  41e65c:	stp	x29, x30, [sp, #-80]!
  41e660:	mov	x29, sp
  41e664:	stp	x19, x20, [sp, #16]
  41e668:	stp	x21, x22, [sp, #32]
  41e66c:	stp	x23, x24, [sp, #48]
  41e670:	mov	x19, x0
  41e674:	ldr	x21, [x0, #40]
  41e678:	ldr	w1, [x21, #12]
  41e67c:	sub	w1, w1, #0x1
  41e680:	sbfiz	x0, x1, #1, #32
  41e684:	add	x1, x0, w1, sxtw
  41e688:	ldr	x0, [x21]
  41e68c:	add	x1, x0, x1, lsl #3
  41e690:	ldrb	w23, [x1, #5]
  41e694:	ldr	x24, [x1, #8]
  41e698:	ldrb	w0, [x19, #1152]
  41e69c:	cmp	w0, #0x0
  41e6a0:	mov	w22, #0x7fffffff            	// #2147483647
  41e6a4:	mov	w0, #0x7fff                	// #32767
  41e6a8:	csel	w22, w22, w0, ne  // ne = any
  41e6ac:	mov	x0, x19
  41e6b0:	bl	431a1c <nftw@plt+0x2ee9c>
  41e6b4:	mov	x1, x0
  41e6b8:	ldrb	w0, [x0, #4]
  41e6bc:	cmp	w0, #0x37
  41e6c0:	b.eq	41e700 <nftw@plt+0x1bb80>  // b.none
  41e6c4:	cmp	w0, #0x16
  41e6c8:	b.eq	41e77c <nftw@plt+0x1bbfc>  // b.none
  41e6cc:	mov	x0, x19
  41e6d0:	bl	42add4 <nftw@plt+0x28254>
  41e6d4:	mov	x3, x0
  41e6d8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e6dc:	add	x2, x2, #0xa78
  41e6e0:	mov	w1, #0x3                   	// #3
  41e6e4:	mov	x0, x19
  41e6e8:	bl	41f990 <nftw@plt+0x1ce10>
  41e6ec:	ldp	x19, x20, [sp, #16]
  41e6f0:	ldp	x21, x22, [sp, #32]
  41e6f4:	ldp	x23, x24, [sp, #48]
  41e6f8:	ldp	x29, x30, [sp], #80
  41e6fc:	ret
  41e700:	ldr	x5, [x1, #16]
  41e704:	ldr	w0, [x1, #8]
  41e708:	mov	x3, x5
  41e70c:	mov	w4, #0x0                   	// #0
  41e710:	mov	w2, #0x0                   	// #0
  41e714:	cbz	x0, 41e86c <nftw@plt+0x1bcec>
  41e718:	adrp	x7, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  41e71c:	add	x7, x7, #0xe68
  41e720:	mov	w8, #0x1                   	// #1
  41e724:	add	x5, x5, x0
  41e728:	b	41e730 <nftw@plt+0x1bbb0>
  41e72c:	mov	w2, w20
  41e730:	ldrb	w0, [x3], #1
  41e734:	ldrh	w6, [x7, w0, sxtw #1]
  41e738:	tbz	w6, #2, 41e6cc <nftw@plt+0x1bb4c>
  41e73c:	add	w20, w2, w2, lsl #2
  41e740:	sub	w0, w0, #0x30
  41e744:	add	w20, w0, w20, lsl #1
  41e748:	cmp	w2, w20
  41e74c:	csel	w4, w4, w8, ls  // ls = plast
  41e750:	cmp	x3, x5
  41e754:	b.ne	41e72c <nftw@plt+0x1bbac>  // b.any
  41e758:	ldrb	w0, [x19, #1154]
  41e75c:	cbnz	w0, 41e794 <nftw@plt+0x1bc14>
  41e760:	cbz	w4, 41e7b8 <nftw@plt+0x1bc38>
  41e764:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e768:	add	x2, x2, #0xaa8
  41e76c:	mov	w1, #0x0                   	// #0
  41e770:	mov	x0, x19
  41e774:	bl	41f990 <nftw@plt+0x1ce10>
  41e778:	b	41e7b8 <nftw@plt+0x1bc38>
  41e77c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e780:	add	x2, x2, #0xa50
  41e784:	mov	w1, #0x3                   	// #3
  41e788:	mov	x0, x19
  41e78c:	bl	41f990 <nftw@plt+0x1ce10>
  41e790:	b	41e6ec <nftw@plt+0x1bb6c>
  41e794:	cmp	w20, #0x0
  41e798:	ccmp	w22, w20, #0x0, ne  // ne = any
  41e79c:	ccmp	w4, #0x0, #0x0, cs  // cs = hs, nlast
  41e7a0:	b.eq	41e7b8 <nftw@plt+0x1bc38>  // b.none
  41e7a4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e7a8:	add	x2, x2, #0xaa8
  41e7ac:	mov	w1, #0x2                   	// #2
  41e7b0:	mov	x0, x19
  41e7b4:	bl	41f990 <nftw@plt+0x1ce10>
  41e7b8:	mov	x0, x19
  41e7bc:	bl	431a1c <nftw@plt+0x2ee9c>
  41e7c0:	mov	x1, x0
  41e7c4:	ldrb	w0, [x0, #4]
  41e7c8:	cmp	w0, #0x3e
  41e7cc:	b.eq	41e80c <nftw@plt+0x1bc8c>  // b.none
  41e7d0:	cmp	w0, #0x16
  41e7d4:	b.ne	41e848 <nftw@plt+0x1bcc8>  // b.any
  41e7d8:	mov	x0, x19
  41e7dc:	bl	41c138 <nftw@plt+0x195b8>
  41e7e0:	mov	w4, w23
  41e7e4:	mov	w3, w20
  41e7e8:	mov	x2, x24
  41e7ec:	mov	w1, #0x3                   	// #3
  41e7f0:	mov	x0, x19
  41e7f4:	bl	41e324 <nftw@plt+0x1b7a4>
  41e7f8:	mov	w0, #0x1                   	// #1
  41e7fc:	strb	w0, [x21, #116]
  41e800:	b	41e6ec <nftw@plt+0x1bb6c>
  41e804:	mov	w20, #0x0                   	// #0
  41e808:	b	41e7a4 <nftw@plt+0x1bc24>
  41e80c:	str	wzr, [sp, #64]
  41e810:	str	xzr, [sp, #72]
  41e814:	mov	w4, #0x3e                  	// #62
  41e818:	add	x3, sp, #0x40
  41e81c:	mov	x2, #0x1                   	// #1
  41e820:	add	x1, x1, #0x8
  41e824:	mov	x0, x19
  41e828:	bl	41b880 <nftw@plt+0x18d00>
  41e82c:	ands	w0, w0, #0xff
  41e830:	ldr	x0, [sp, #72]
  41e834:	csel	x24, x0, x24, ne  // ne = any
  41e838:	mov	w1, #0x1                   	// #1
  41e83c:	mov	x0, x19
  41e840:	bl	41c0b0 <nftw@plt+0x19530>
  41e844:	b	41e7d8 <nftw@plt+0x1bc58>
  41e848:	mov	x0, x19
  41e84c:	bl	42add4 <nftw@plt+0x28254>
  41e850:	mov	x3, x0
  41e854:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e858:	add	x2, x2, #0x9f8
  41e85c:	mov	w1, #0x3                   	// #3
  41e860:	mov	x0, x19
  41e864:	bl	41f990 <nftw@plt+0x1ce10>
  41e868:	b	41e6ec <nftw@plt+0x1bb6c>
  41e86c:	ldrb	w0, [x19, #1154]
  41e870:	cbnz	w0, 41e804 <nftw@plt+0x1bc84>
  41e874:	mov	w4, #0x0                   	// #0
  41e878:	mov	w20, #0x0                   	// #0
  41e87c:	b	41e760 <nftw@plt+0x1bbe0>
  41e880:	stp	x29, x30, [sp, #-32]!
  41e884:	mov	x29, sp
  41e888:	cbz	x3, 41e8b8 <nftw@plt+0x1bd38>
  41e88c:	stp	x19, x20, [sp, #16]
  41e890:	mov	x19, x3
  41e894:	and	w20, w4, #0xff
  41e898:	mov	w3, #0x0                   	// #0
  41e89c:	bl	41d968 <nftw@plt+0x1ade8>
  41e8a0:	cbz	x0, 41e8cc <nftw@plt+0x1bd4c>
  41e8a4:	strb	w20, [x0, #19]
  41e8a8:	str	x19, [x0, #24]
  41e8ac:	ldp	x19, x20, [sp, #16]
  41e8b0:	ldp	x29, x30, [sp], #32
  41e8b4:	ret
  41e8b8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e8bc:	add	x2, x2, #0xac8
  41e8c0:	mov	w1, #0x4                   	// #4
  41e8c4:	bl	41f990 <nftw@plt+0x1ce10>
  41e8c8:	b	41e8b0 <nftw@plt+0x1bd30>
  41e8cc:	ldp	x19, x20, [sp, #16]
  41e8d0:	b	41e8b0 <nftw@plt+0x1bd30>
  41e8d4:	stp	x29, x30, [sp, #-32]!
  41e8d8:	mov	x29, sp
  41e8dc:	stp	x19, x20, [sp, #16]
  41e8e0:	mov	w19, w3
  41e8e4:	and	w20, w4, #0xff
  41e8e8:	mov	w3, w5
  41e8ec:	bl	41d968 <nftw@plt+0x1ade8>
  41e8f0:	cbz	x0, 41e904 <nftw@plt+0x1bd84>
  41e8f4:	mov	w1, #0x1                   	// #1
  41e8f8:	strb	w1, [x0, #18]
  41e8fc:	strb	w20, [x0, #19]
  41e900:	str	w19, [x0, #24]
  41e904:	ldp	x19, x20, [sp, #16]
  41e908:	ldp	x29, x30, [sp], #32
  41e90c:	ret
  41e910:	stp	x29, x30, [sp, #-32]!
  41e914:	mov	x29, sp
  41e918:	stp	x19, x20, [sp, #16]
  41e91c:	mov	x19, x0
  41e920:	adrp	x3, 41d000 <nftw@plt+0x1a480>
  41e924:	add	x3, x3, #0x89c
  41e928:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e92c:	add	x2, x2, #0xaf0
  41e930:	mov	x1, #0x0                   	// #0
  41e934:	bl	41db40 <nftw@plt+0x1afc0>
  41e938:	adrp	x3, 41d000 <nftw@plt+0x1a480>
  41e93c:	add	x3, x3, #0x6a4
  41e940:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e944:	add	x2, x2, #0xaf8
  41e948:	mov	x1, #0x0                   	// #0
  41e94c:	mov	x0, x19
  41e950:	bl	41db40 <nftw@plt+0x1afc0>
  41e954:	adrp	x3, 41e000 <nftw@plt+0x1b480>
  41e958:	add	x3, x3, #0xd8c
  41e95c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e960:	add	x2, x2, #0xb08
  41e964:	mov	x1, #0x0                   	// #0
  41e968:	mov	x0, x19
  41e96c:	bl	41db40 <nftw@plt+0x1afc0>
  41e970:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e974:	add	x20, x20, #0xb20
  41e978:	adrp	x3, 41c000 <nftw@plt+0x19480>
  41e97c:	add	x3, x3, #0x198
  41e980:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e984:	add	x2, x2, #0xb18
  41e988:	mov	x1, x20
  41e98c:	mov	x0, x19
  41e990:	bl	41db40 <nftw@plt+0x1afc0>
  41e994:	adrp	x3, 41d000 <nftw@plt+0x1a480>
  41e998:	add	x3, x3, #0x63c
  41e99c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e9a0:	add	x2, x2, #0xb28
  41e9a4:	mov	x1, x20
  41e9a8:	mov	x0, x19
  41e9ac:	bl	41db40 <nftw@plt+0x1afc0>
  41e9b0:	adrp	x3, 41d000 <nftw@plt+0x1a480>
  41e9b4:	add	x3, x3, #0x578
  41e9b8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41e9bc:	add	x2, x2, #0xb38
  41e9c0:	mov	x1, x20
  41e9c4:	mov	x0, x19
  41e9c8:	bl	41db40 <nftw@plt+0x1afc0>
  41e9cc:	adrp	x3, 41c000 <nftw@plt+0x19480>
  41e9d0:	add	x3, x3, #0x7e4
  41e9d4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x119fc>
  41e9d8:	add	x2, x2, #0xb88
  41e9dc:	mov	x1, x20
  41e9e0:	mov	x0, x19
  41e9e4:	bl	41db40 <nftw@plt+0x1afc0>
  41e9e8:	adrp	x3, 41c000 <nftw@plt+0x19480>
  41e9ec:	add	x3, x3, #0x7cc
  41e9f0:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x209fc>
  41e9f4:	add	x2, x2, #0x1c8
  41e9f8:	mov	x1, x20
  41e9fc:	mov	x0, x19
  41ea00:	bl	41db40 <nftw@plt+0x1afc0>
  41ea04:	ldp	x19, x20, [sp, #16]
  41ea08:	ldp	x29, x30, [sp], #32
  41ea0c:	ret
  41ea10:	stp	x29, x30, [sp, #-32]!
  41ea14:	mov	x29, sp
  41ea18:	stp	x19, x20, [sp, #16]
  41ea1c:	mov	x20, x0
  41ea20:	ldr	x0, [x0, #896]
  41ea24:	bl	41bd24 <nftw@plt+0x191a4>
  41ea28:	sbfiz	x0, x0, #3, #32
  41ea2c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41ea30:	mov	x19, x0
  41ea34:	mov	x1, x0
  41ea38:	ldr	x0, [x20, #896]
  41ea3c:	bl	41d8fc <nftw@plt+0x1ad7c>
  41ea40:	mov	x0, x19
  41ea44:	ldp	x19, x20, [sp, #16]
  41ea48:	ldp	x29, x30, [sp], #32
  41ea4c:	ret
  41ea50:	stp	x29, x30, [sp, #-32]!
  41ea54:	mov	x29, sp
  41ea58:	str	x19, [sp, #16]
  41ea5c:	mov	x19, x1
  41ea60:	mov	x2, x1
  41ea64:	ldr	x1, [x0, #896]
  41ea68:	bl	41d4f4 <nftw@plt+0x1a974>
  41ea6c:	mov	x0, x19
  41ea70:	bl	402910 <free@plt>
  41ea74:	ldr	x19, [sp, #16]
  41ea78:	ldp	x29, x30, [sp], #32
  41ea7c:	ret
  41ea80:	stp	x29, x30, [sp, #-64]!
  41ea84:	mov	x29, sp
  41ea88:	stp	x19, x20, [sp, #16]
  41ea8c:	str	x21, [sp, #32]
  41ea90:	mov	x21, x0
  41ea94:	mov	x20, x1
  41ea98:	add	x2, sp, #0x38
  41ea9c:	mov	w1, #0x4                   	// #4
  41eaa0:	bl	41c304 <nftw@plt+0x19784>
  41eaa4:	mov	x19, x0
  41eaa8:	str	wzr, [x20]
  41eaac:	cbz	x0, 41eaf4 <nftw@plt+0x1bf74>
  41eab0:	ldr	x0, [x0, #24]
  41eab4:	cbz	x0, 41eadc <nftw@plt+0x1bf5c>
  41eab8:	ldr	x1, [sp, #56]
  41eabc:	mov	w0, #0x1                   	// #1
  41eac0:	cbz	x1, 41ead8 <nftw@plt+0x1bf58>
  41eac4:	mov	x0, x19
  41eac8:	bl	41c58c <nftw@plt+0x19a0c>
  41eacc:	ldr	x0, [x0]
  41ead0:	cmp	x0, #0x0
  41ead4:	cset	w0, ne  // ne = any
  41ead8:	str	w0, [x20]
  41eadc:	cmp	x19, #0x0
  41eae0:	cset	w0, eq  // eq = none
  41eae4:	ldp	x19, x20, [sp, #16]
  41eae8:	ldr	x21, [sp, #32]
  41eaec:	ldp	x29, x30, [sp], #64
  41eaf0:	ret
  41eaf4:	ldr	x0, [x21, #448]
  41eaf8:	ldurb	w0, [x0, #-20]
  41eafc:	cmp	w0, #0x16
  41eb00:	b.ne	41eadc <nftw@plt+0x1bf5c>  // b.any
  41eb04:	mov	w1, #0x1                   	// #1
  41eb08:	mov	x0, x21
  41eb0c:	bl	42e8f0 <nftw@plt+0x2bd70>
  41eb10:	b	41eadc <nftw@plt+0x1bf5c>
  41eb14:	add	x0, x0, #0x458
  41eb18:	ret
  41eb1c:	add	x0, x0, #0x388
  41eb20:	ret
  41eb24:	stp	x29, x30, [sp, #-16]!
  41eb28:	mov	x29, sp
  41eb2c:	mov	x2, #0xb8                  	// #184
  41eb30:	add	x0, x0, #0x388
  41eb34:	bl	402490 <memcpy@plt>
  41eb38:	ldp	x29, x30, [sp], #16
  41eb3c:	ret
  41eb40:	stp	x29, x30, [sp, #-32]!
  41eb44:	mov	x29, sp
  41eb48:	str	x19, [sp, #16]
  41eb4c:	mov	x19, x0
  41eb50:	ldr	x0, [x0, #712]
  41eb54:	cbz	x0, 41eb68 <nftw@plt+0x1bfe8>
  41eb58:	ldr	x0, [x19, #712]
  41eb5c:	ldr	x19, [sp, #16]
  41eb60:	ldp	x29, x30, [sp], #32
  41eb64:	ret
  41eb68:	bl	43206c <nftw@plt+0x2f4ec>
  41eb6c:	str	x0, [x19, #712]
  41eb70:	b	41eb58 <nftw@plt+0x1bfd8>
  41eb74:	stp	x29, x30, [sp, #-48]!
  41eb78:	mov	x29, sp
  41eb7c:	stp	x19, x20, [sp, #16]
  41eb80:	stp	x21, x22, [sp, #32]
  41eb84:	mov	x19, x0
  41eb88:	mov	x20, x1
  41eb8c:	mov	x22, x2
  41eb90:	mov	w21, w3
  41eb94:	ldr	x0, [x0, #840]
  41eb98:	ldr	x1, [x19, #832]
  41eb9c:	sub	x0, x0, x1
  41eba0:	cmp	x0, #0xc7
  41eba4:	b.ls	41ec60 <nftw@plt+0x1c0e0>  // b.plast
  41eba8:	ldr	x5, [x19, #832]
  41ebac:	add	x5, x5, #0xc8
  41ebb0:	ldr	x0, [x19, #824]
  41ebb4:	cmp	x5, x0
  41ebb8:	b.eq	41ec70 <nftw@plt+0x1c0f0>  // b.none
  41ebbc:	ldr	x4, [x19, #856]
  41ebc0:	add	x5, x5, x4
  41ebc4:	bic	x4, x5, x4
  41ebc8:	str	x4, [x19, #832]
  41ebcc:	ldr	x1, [x19, #816]
  41ebd0:	ldr	x2, [x19, #840]
  41ebd4:	sub	x4, x4, x1
  41ebd8:	sub	x1, x2, x1
  41ebdc:	cmp	x4, x1
  41ebe0:	b.ls	41ebe8 <nftw@plt+0x1c068>  // b.plast
  41ebe4:	str	x2, [x19, #832]
  41ebe8:	ldr	x2, [x19, #832]
  41ebec:	str	x2, [x19, #824]
  41ebf0:	stp	xzr, xzr, [x0]
  41ebf4:	stp	xzr, xzr, [x0, #32]
  41ebf8:	stp	xzr, xzr, [x0, #48]
  41ebfc:	stp	xzr, xzr, [x0, #64]
  41ec00:	stp	xzr, xzr, [x0, #80]
  41ec04:	stp	xzr, xzr, [x0, #96]
  41ec08:	stp	xzr, xzr, [x0, #112]
  41ec0c:	stp	xzr, xzr, [x0, #128]
  41ec10:	stp	xzr, xzr, [x0, #144]
  41ec14:	stp	xzr, xzr, [x0, #160]
  41ec18:	stp	xzr, xzr, [x0, #176]
  41ec1c:	str	xzr, [x0, #192]
  41ec20:	str	x20, [x0, #24]
  41ec24:	str	x20, [x0, #16]
  41ec28:	add	x20, x20, x22
  41ec2c:	str	x20, [x0, #32]
  41ec30:	ldrb	w1, [x0, #105]
  41ec34:	bfi	w1, w21, #1, #1
  41ec38:	strb	w1, [x0, #105]
  41ec3c:	ldr	x1, [x19]
  41ec40:	str	x1, [x0, #72]
  41ec44:	mov	w1, #0x1                   	// #1
  41ec48:	strb	w1, [x0, #104]
  41ec4c:	str	x0, [x19]
  41ec50:	ldp	x19, x20, [sp, #16]
  41ec54:	ldp	x21, x22, [sp, #32]
  41ec58:	ldp	x29, x30, [sp], #48
  41ec5c:	ret
  41ec60:	mov	x1, #0xc8                  	// #200
  41ec64:	add	x0, x19, #0x328
  41ec68:	bl	44a42c <_obstack_newchunk@@Base>
  41ec6c:	b	41eba8 <nftw@plt+0x1c028>
  41ec70:	ldrb	w1, [x19, #888]
  41ec74:	orr	w1, w1, #0x2
  41ec78:	strb	w1, [x19, #888]
  41ec7c:	b	41ebbc <nftw@plt+0x1c03c>
  41ec80:	stp	x29, x30, [sp, #-80]!
  41ec84:	mov	x29, sp
  41ec88:	stp	x19, x20, [sp, #16]
  41ec8c:	stp	x23, x24, [sp, #48]
  41ec90:	mov	x20, x0
  41ec94:	ldr	x23, [x0]
  41ec98:	ldr	x24, [x23, #80]
  41ec9c:	ldr	x19, [x23, #96]
  41eca0:	cbz	x19, 41ecf8 <nftw@plt+0x1c178>
  41eca4:	stp	x21, x22, [sp, #32]
  41eca8:	str	x25, [sp, #64]
  41ecac:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ecb0:	add	x22, x22, #0xc88
  41ecb4:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ecb8:	add	x21, x21, #0xb48
  41ecbc:	mov	w25, #0x3                   	// #3
  41ecc0:	ldrsw	x1, [x19, #28]
  41ecc4:	add	x1, x1, x1, lsl #1
  41ecc8:	add	x1, x22, x1, lsl #3
  41eccc:	ldr	x5, [x1, #8]
  41ecd0:	mov	x4, x21
  41ecd4:	mov	w3, #0x0                   	// #0
  41ecd8:	ldr	w2, [x19, #8]
  41ecdc:	mov	w1, w25
  41ece0:	mov	x0, x20
  41ece4:	bl	41fb7c <nftw@plt+0x1cffc>
  41ece8:	ldr	x19, [x19]
  41ecec:	cbnz	x19, 41ecc0 <nftw@plt+0x1c140>
  41ecf0:	ldp	x21, x22, [sp, #32]
  41ecf4:	ldr	x25, [sp, #64]
  41ecf8:	strb	wzr, [x20, #18]
  41ecfc:	ldr	x0, [x23, #72]
  41ed00:	str	x0, [x20]
  41ed04:	ldr	x19, [x23, #40]
  41ed08:	ldr	x0, [x23, #48]
  41ed0c:	bl	402910 <free@plt>
  41ed10:	ldr	x0, [x20, #816]
  41ed14:	cmp	x0, x23
  41ed18:	b.cs	41ed34 <nftw@plt+0x1c1b4>  // b.hs, b.nlast
  41ed1c:	ldr	x0, [x20, #840]
  41ed20:	cmp	x0, x23
  41ed24:	b.ls	41ed34 <nftw@plt+0x1c1b4>  // b.plast
  41ed28:	str	x23, [x20, #824]
  41ed2c:	str	x23, [x20, #832]
  41ed30:	b	41ed40 <nftw@plt+0x1c1c0>
  41ed34:	mov	x1, x23
  41ed38:	add	x0, x20, #0x328
  41ed3c:	bl	44a584 <_obstack_free@@Base>
  41ed40:	cbz	x24, 41ed7c <nftw@plt+0x1c1fc>
  41ed44:	mov	x2, x19
  41ed48:	mov	x1, x24
  41ed4c:	mov	x0, x20
  41ed50:	bl	425ddc <nftw@plt+0x2325c>
  41ed54:	mov	w4, #0x0                   	// #0
  41ed58:	mov	w3, #0x0                   	// #0
  41ed5c:	mov	x2, #0x0                   	// #0
  41ed60:	mov	w1, #0x1                   	// #1
  41ed64:	mov	x0, x20
  41ed68:	bl	41e324 <nftw@plt+0x1b7a4>
  41ed6c:	ldp	x19, x20, [sp, #16]
  41ed70:	ldp	x23, x24, [sp, #48]
  41ed74:	ldp	x29, x30, [sp], #80
  41ed78:	ret
  41ed7c:	cbz	x19, 41ed6c <nftw@plt+0x1c1ec>
  41ed80:	mov	x0, x19
  41ed84:	bl	402910 <free@plt>
  41ed88:	b	41ed6c <nftw@plt+0x1c1ec>
  41ed8c:	stp	x29, x30, [sp, #-64]!
  41ed90:	mov	x29, sp
  41ed94:	stp	x19, x20, [sp, #16]
  41ed98:	stp	x21, x22, [sp, #32]
  41ed9c:	str	x23, [sp, #48]
  41eda0:	mov	x21, x0
  41eda4:	ldr	x19, [x0, #1400]
  41eda8:	bl	41bf64 <nftw@plt+0x193e4>
  41edac:	cbz	x0, 41ee00 <nftw@plt+0x1c280>
  41edb0:	ldr	w2, [x0, #8]
  41edb4:	add	w1, w2, #0x2
  41edb8:	add	x1, x1, #0xf
  41edbc:	and	x1, x1, #0x1fffffff0
  41edc0:	sub	sp, sp, x1
  41edc4:	mov	x20, sp
  41edc8:	ldr	x4, [x0, #16]
  41edcc:	ldrb	w0, [x4]
  41edd0:	cmp	w0, #0x4c
  41edd4:	cset	x1, eq  // eq = none
  41edd8:	add	x1, x1, #0x1
  41eddc:	add	x1, x4, x1
  41ede0:	mov	w2, w2
  41ede4:	sub	x2, x2, #0x1
  41ede8:	add	x4, x4, x2
  41edec:	cmp	x1, x4
  41edf0:	b.cs	41ee70 <nftw@plt+0x1c2f0>  // b.hs, b.nlast
  41edf4:	mov	x3, x20
  41edf8:	mov	w5, #0x5c                  	// #92
  41edfc:	b	41ee4c <nftw@plt+0x1c2cc>
  41ee00:	ldr	x0, [x21, #448]
  41ee04:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ee08:	add	x4, x4, #0xb60
  41ee0c:	mov	w3, #0x0                   	// #0
  41ee10:	ldur	w2, [x0, #-24]
  41ee14:	mov	w1, #0x3                   	// #3
  41ee18:	mov	x0, x21
  41ee1c:	bl	41fb7c <nftw@plt+0x1cffc>
  41ee20:	mov	w1, #0x0                   	// #0
  41ee24:	mov	x0, x21
  41ee28:	bl	41c0b0 <nftw@plt+0x19530>
  41ee2c:	mov	x0, x21
  41ee30:	bl	41c138 <nftw@plt+0x195b8>
  41ee34:	b	41ef3c <nftw@plt+0x1c3bc>
  41ee38:	mov	x1, x2
  41ee3c:	ldrb	w2, [x1], #1
  41ee40:	strb	w2, [x3], #1
  41ee44:	cmp	x4, x1
  41ee48:	b.ls	41ee74 <nftw@plt+0x1c2f4>  // b.plast
  41ee4c:	ldrb	w0, [x1]
  41ee50:	mov	x2, x1
  41ee54:	cmp	w0, #0x5c
  41ee58:	b.ne	41ee38 <nftw@plt+0x1c2b8>  // b.any
  41ee5c:	ldrb	w0, [x1, #1]
  41ee60:	cmp	w0, #0x22
  41ee64:	ccmp	w0, w5, #0x4, ne  // ne = any
  41ee68:	cinc	x2, x1, eq  // eq = none
  41ee6c:	b	41ee38 <nftw@plt+0x1c2b8>
  41ee70:	mov	x3, x20
  41ee74:	strb	wzr, [x3]
  41ee78:	mov	w1, #0x0                   	// #0
  41ee7c:	mov	x0, x21
  41ee80:	bl	41c0b0 <nftw@plt+0x19530>
  41ee84:	mov	x0, x21
  41ee88:	bl	41c138 <nftw@plt+0x195b8>
  41ee8c:	cbz	x19, 41ef3c <nftw@plt+0x1c3bc>
  41ee90:	mov	x22, #0x0                   	// #0
  41ee94:	b	41ee9c <nftw@plt+0x1c31c>
  41ee98:	mov	x19, x1
  41ee9c:	mov	x1, x20
  41eea0:	ldr	x0, [x19, #8]
  41eea4:	bl	402890 <strcmp@plt>
  41eea8:	cbz	w0, 41eebc <nftw@plt+0x1c33c>
  41eeac:	ldr	x1, [x19]
  41eeb0:	mov	x22, x19
  41eeb4:	cbnz	x1, 41ee98 <nftw@plt+0x1c318>
  41eeb8:	b	41ef3c <nftw@plt+0x1c3bc>
  41eebc:	cbz	x22, 41ef54 <nftw@plt+0x1c3d4>
  41eec0:	ldr	x0, [x19]
  41eec4:	str	x0, [x22]
  41eec8:	ldr	x1, [x19, #8]
  41eecc:	mov	x0, x21
  41eed0:	bl	427230 <nftw@plt+0x246b0>
  41eed4:	mov	x20, x0
  41eed8:	cbz	x0, 41ef24 <nftw@plt+0x1c3a4>
  41eedc:	ldr	x1, [x21, #1024]
  41eee0:	cbz	x1, 41eeec <nftw@plt+0x1c36c>
  41eee4:	mov	x0, x21
  41eee8:	blr	x1
  41eeec:	ldrb	w0, [x20, #18]
  41eef0:	tbz	w0, #1, 41ef1c <nftw@plt+0x1c39c>
  41eef4:	ldr	x3, [x21, #944]
  41eef8:	cbz	x3, 41ef0c <nftw@plt+0x1c38c>
  41eefc:	mov	x2, x20
  41ef00:	ldr	w1, [x21, #48]
  41ef04:	mov	x0, x21
  41ef08:	blr	x3
  41ef0c:	ldrb	w0, [x21, #1151]
  41ef10:	cbnz	w0, 41ef60 <nftw@plt+0x1c3e0>
  41ef14:	mov	x0, x20
  41ef18:	bl	42eb80 <nftw@plt+0x2c000>
  41ef1c:	ldrb	w0, [x19, #28]
  41ef20:	tbz	w0, #2, 41ef74 <nftw@plt+0x1c3f4>
  41ef24:	ldr	x0, [x19, #16]
  41ef28:	bl	402910 <free@plt>
  41ef2c:	ldr	x0, [x19, #8]
  41ef30:	bl	402910 <free@plt>
  41ef34:	mov	x0, x19
  41ef38:	bl	402910 <free@plt>
  41ef3c:	mov	sp, x29
  41ef40:	ldp	x19, x20, [sp, #16]
  41ef44:	ldp	x21, x22, [sp, #32]
  41ef48:	ldr	x23, [sp, #48]
  41ef4c:	ldp	x29, x30, [sp], #64
  41ef50:	ret
  41ef54:	ldr	x0, [x19]
  41ef58:	str	x0, [x21, #1400]
  41ef5c:	b	41eec8 <nftw@plt+0x1c348>
  41ef60:	mov	x2, #0x0                   	// #0
  41ef64:	mov	x1, x20
  41ef68:	mov	x0, x21
  41ef6c:	bl	42ded4 <nftw@plt+0x2b354>
  41ef70:	b	41ef14 <nftw@plt+0x1c394>
  41ef74:	ldr	x20, [x19, #16]
  41ef78:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ef7c:	add	x1, x1, #0xb88
  41ef80:	mov	x0, x20
  41ef84:	bl	402a70 <strcspn@plt>
  41ef88:	sxtw	x23, w0
  41ef8c:	mov	w2, w23
  41ef90:	mov	x1, x20
  41ef94:	mov	x0, x21
  41ef98:	bl	426234 <nftw@plt+0x236b4>
  41ef9c:	mov	x20, x0
  41efa0:	ldr	x22, [x19, #16]
  41efa4:	add	x22, x22, x23
  41efa8:	mov	w1, #0xa                   	// #10
  41efac:	mov	x0, x22
  41efb0:	bl	402940 <strchr@plt>
  41efb4:	mov	w3, #0x1                   	// #1
  41efb8:	sub	x2, x0, x22
  41efbc:	mov	x1, x22
  41efc0:	mov	x0, x21
  41efc4:	bl	41eb74 <nftw@plt+0x1bff4>
  41efc8:	mov	x22, x0
  41efcc:	cbz	x0, 41f050 <nftw@plt+0x1c4d0>
  41efd0:	mov	x0, x21
  41efd4:	bl	4269b4 <nftw@plt+0x23e34>
  41efd8:	mov	w0, #0x1                   	// #1
  41efdc:	strb	w0, [x22, #106]
  41efe0:	mov	x1, x20
  41efe4:	mov	x0, x21
  41efe8:	bl	42ed80 <nftw@plt+0x2c200>
  41efec:	and	w0, w0, #0xff
  41eff0:	cbz	w0, 41f038 <nftw@plt+0x1c4b8>
  41eff4:	mov	x0, x21
  41eff8:	bl	41ec80 <nftw@plt+0x1c100>
  41effc:	ldr	x0, [x20, #24]
  41f000:	ldr	w1, [x19, #24]
  41f004:	str	w1, [x0, #8]
  41f008:	ldr	x0, [x20, #24]
  41f00c:	ldrb	w2, [x19, #28]
  41f010:	ldrb	w1, [x0, #19]
  41f014:	bfi	w1, w2, #4, #1
  41f018:	strb	w1, [x0, #19]
  41f01c:	ldr	x1, [x20, #24]
  41f020:	ldrb	w0, [x19, #28]
  41f024:	ubfx	x0, x0, #1, #1
  41f028:	ldrb	w2, [x1, #19]
  41f02c:	bfi	w2, w0, #5, #1
  41f030:	strb	w2, [x1, #19]
  41f034:	b	41ef24 <nftw@plt+0x1c3a4>
  41f038:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f03c:	add	x2, x2, #0xb90
  41f040:	mov	w1, #0x9a8                 	// #2472
  41f044:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f048:	add	x0, x0, #0xba8
  41f04c:	bl	408d8c <nftw@plt+0x620c>
  41f050:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f054:	add	x2, x2, #0xb90
  41f058:	mov	w1, #0x9ac                 	// #2476
  41f05c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f060:	add	x0, x0, #0xba8
  41f064:	bl	408d8c <nftw@plt+0x620c>
  41f068:	stp	x29, x30, [sp, #-96]!
  41f06c:	mov	x29, sp
  41f070:	stp	x19, x20, [sp, #16]
  41f074:	stp	x21, x22, [sp, #32]
  41f078:	stp	x23, x24, [sp, #48]
  41f07c:	stp	x25, x26, [sp, #64]
  41f080:	str	x27, [sp, #80]
  41f084:	mov	x19, x0
  41f088:	mov	w21, w2
  41f08c:	ldr	w0, [x1]
  41f090:	sub	w2, w0, #0x1
  41f094:	add	x2, x2, #0xf
  41f098:	and	x2, x2, #0x1fffffff0
  41f09c:	sub	sp, sp, x2
  41f0a0:	mov	x22, sp
  41f0a4:	ldr	x2, [x1, #8]
  41f0a8:	ldrb	w1, [x2]
  41f0ac:	cmp	w1, #0x4c
  41f0b0:	cset	x1, eq  // eq = none
  41f0b4:	add	x1, x1, #0x1
  41f0b8:	add	x1, x2, x1
  41f0bc:	mov	w0, w0
  41f0c0:	sub	x0, x0, #0x1
  41f0c4:	add	x2, x2, x0
  41f0c8:	cmp	x1, x2
  41f0cc:	b.cs	41f114 <nftw@plt+0x1c594>  // b.hs, b.nlast
  41f0d0:	mov	x20, x22
  41f0d4:	mov	w4, #0x5c                  	// #92
  41f0d8:	b	41f0f0 <nftw@plt+0x1c570>
  41f0dc:	mov	x1, x0
  41f0e0:	ldrb	w0, [x1], #1
  41f0e4:	strb	w0, [x20], #1
  41f0e8:	cmp	x2, x1
  41f0ec:	b.ls	41f118 <nftw@plt+0x1c598>  // b.plast
  41f0f0:	ldrb	w3, [x1]
  41f0f4:	mov	x0, x1
  41f0f8:	cmp	w3, #0x5c
  41f0fc:	b.ne	41f0dc <nftw@plt+0x1c55c>  // b.any
  41f100:	ldrb	w0, [x1, #1]
  41f104:	cmp	w0, #0x22
  41f108:	ccmp	w0, w4, #0x4, ne  // ne = any
  41f10c:	cinc	x0, x1, eq  // eq = none
  41f110:	b	41f0dc <nftw@plt+0x1c55c>
  41f114:	mov	x20, x22
  41f118:	mov	w0, #0xa                   	// #10
  41f11c:	strb	w0, [x20]
  41f120:	ldr	x25, [x19, #136]
  41f124:	ldr	x24, [x19, #448]
  41f128:	ldr	x23, [x19, #488]
  41f12c:	mov	x1, #0x38                  	// #56
  41f130:	mov	x0, #0x1                   	// #1
  41f134:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  41f138:	str	x0, [x19, #136]
  41f13c:	mov	w3, #0x1                   	// #1
  41f140:	sub	x2, x20, x22
  41f144:	mov	x1, x22
  41f148:	mov	x0, x19
  41f14c:	bl	41eb74 <nftw@plt+0x1bff4>
  41f150:	ldr	x0, [x19]
  41f154:	ldr	x1, [x0, #72]
  41f158:	cbz	x1, 41f164 <nftw@plt+0x1c5e4>
  41f15c:	ldr	x1, [x1, #80]
  41f160:	str	x1, [x0, #80]
  41f164:	mov	w0, #0x1                   	// #1
  41f168:	strb	w0, [x19, #16]
  41f16c:	strb	wzr, [x19, #21]
  41f170:	mov	w0, #0x53                  	// #83
  41f174:	strb	w0, [x19, #156]
  41f178:	ldr	x0, [x19, #40]
  41f17c:	ldr	w0, [x0, #60]
  41f180:	str	w0, [x19, #48]
  41f184:	mov	x0, x19
  41f188:	bl	4269b4 <nftw@plt+0x23e34>
  41f18c:	ldr	x20, [x19, #144]
  41f190:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f194:	add	x0, x0, #0xc88
  41f198:	add	x0, x0, #0x108
  41f19c:	str	x0, [x19, #144]
  41f1a0:	mov	x0, x19
  41f1a4:	bl	41db70 <nftw@plt+0x1aff0>
  41f1a8:	mov	w1, #0x1                   	// #1
  41f1ac:	mov	x0, x19
  41f1b0:	bl	41d448 <nftw@plt+0x1a8c8>
  41f1b4:	str	x20, [x19, #144]
  41f1b8:	ldrb	w0, [x19, #156]
  41f1bc:	cmp	w0, #0x51
  41f1c0:	b.eq	41f254 <nftw@plt+0x1c6d4>  // b.none
  41f1c4:	mov	x0, #0x18                  	// #24
  41f1c8:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41f1cc:	mov	x20, x0
  41f1d0:	ldp	x0, x1, [x19, #152]
  41f1d4:	stp	x0, x1, [x20]
  41f1d8:	ldr	x0, [x19, #168]
  41f1dc:	str	x0, [x20, #16]
  41f1e0:	ldr	x3, [x19, #904]
  41f1e4:	mov	w26, #0x1                   	// #1
  41f1e8:	cbz	x3, 41f1fc <nftw@plt+0x1c67c>
  41f1ec:	mov	w2, #0x0                   	// #0
  41f1f0:	ldr	x1, [x19, #448]
  41f1f4:	mov	x0, x19
  41f1f8:	blr	x3
  41f1fc:	ldr	x0, [x19]
  41f200:	str	xzr, [x0, #80]
  41f204:	mov	x0, x19
  41f208:	bl	41ec80 <nftw@plt+0x1c100>
  41f20c:	ldr	x0, [x19, #136]
  41f210:	bl	402910 <free@plt>
  41f214:	str	x25, [x19, #136]
  41f218:	str	x24, [x19, #448]
  41f21c:	str	x23, [x19, #488]
  41f220:	mov	w3, w26
  41f224:	mov	x2, x20
  41f228:	mov	x1, #0x0                   	// #0
  41f22c:	mov	x0, x19
  41f230:	bl	42e500 <nftw@plt+0x2b980>
  41f234:	mov	sp, x29
  41f238:	ldp	x19, x20, [sp, #16]
  41f23c:	ldp	x21, x22, [sp, #32]
  41f240:	ldp	x23, x24, [sp, #48]
  41f244:	ldp	x25, x26, [sp, #64]
  41f248:	ldr	x27, [sp, #80]
  41f24c:	ldp	x29, x30, [sp], #96
  41f250:	ret
  41f254:	mov	x0, #0x4b0                 	// #1200
  41f258:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  41f25c:	mov	x20, x0
  41f260:	ldp	x0, x1, [x19, #152]
  41f264:	stp	x0, x1, [x20]
  41f268:	ldr	x0, [x19, #168]
  41f26c:	str	x0, [x20, #16]
  41f270:	mov	x22, #0x18                  	// #24
  41f274:	mov	w26, #0x1                   	// #1
  41f278:	mov	w27, #0x32                  	// #50
  41f27c:	b	41f2a8 <nftw@plt+0x1c728>
  41f280:	add	w27, w27, w27, lsl #1
  41f284:	add	w27, w27, w27, lsr #31
  41f288:	asr	w27, w27, #1
  41f28c:	sbfiz	x1, x27, #1, #32
  41f290:	add	x1, x1, w27, sxtw
  41f294:	lsl	x1, x1, #3
  41f298:	mov	x0, x20
  41f29c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  41f2a0:	mov	x20, x0
  41f2a4:	add	x22, x22, #0x18
  41f2a8:	mov	x0, x19
  41f2ac:	bl	431a1c <nftw@plt+0x2ee9c>
  41f2b0:	add	x1, x20, x22
  41f2b4:	ldp	x2, x3, [x0]
  41f2b8:	stp	x2, x3, [x1]
  41f2bc:	ldr	x0, [x0, #16]
  41f2c0:	str	x0, [x1, #16]
  41f2c4:	str	w21, [x20, x22]
  41f2c8:	add	w26, w26, #0x1
  41f2cc:	ldrh	w0, [x1, #6]
  41f2d0:	orr	w0, w0, #0x400
  41f2d4:	strh	w0, [x1, #6]
  41f2d8:	ldrb	w0, [x1, #4]
  41f2dc:	cmp	w0, #0x52
  41f2e0:	b.eq	41f1fc <nftw@plt+0x1c67c>  // b.none
  41f2e4:	cmp	w27, w26
  41f2e8:	b.ne	41f2a4 <nftw@plt+0x1c724>  // b.any
  41f2ec:	b	41f280 <nftw@plt+0x1c700>
  41f2f0:	stp	x29, x30, [sp, #-32]!
  41f2f4:	mov	x29, sp
  41f2f8:	stp	x19, x20, [sp, #16]
  41f2fc:	mov	x19, x0
  41f300:	mov	w20, w1
  41f304:	bl	41bf64 <nftw@plt+0x193e4>
  41f308:	mov	w1, #0x53                  	// #83
  41f30c:	strb	w1, [x19, #156]
  41f310:	cbz	x0, 41f334 <nftw@plt+0x1c7b4>
  41f314:	mov	w2, w20
  41f318:	add	x1, x0, #0x8
  41f31c:	mov	x0, x19
  41f320:	bl	41f068 <nftw@plt+0x1c4e8>
  41f324:	mov	w0, #0x1                   	// #1
  41f328:	ldp	x19, x20, [sp, #16]
  41f32c:	ldp	x29, x30, [sp], #32
  41f330:	ret
  41f334:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f338:	add	x2, x2, #0xbc8
  41f33c:	mov	w1, #0x3                   	// #3
  41f340:	mov	x0, x19
  41f344:	bl	41f990 <nftw@plt+0x1ce10>
  41f348:	mov	w0, #0x0                   	// #0
  41f34c:	b	41f328 <nftw@plt+0x1c7a8>
  41f350:	stp	x29, x30, [sp, #-32]!
  41f354:	mov	x29, sp
  41f358:	stp	x19, x20, [sp, #16]
  41f35c:	mov	x19, x0
  41f360:	mov	w20, w1
  41f364:	mov	x1, x2
  41f368:	mov	x2, x3
  41f36c:	mov	w3, #0x1                   	// #1
  41f370:	bl	41eb74 <nftw@plt+0x1bff4>
  41f374:	mov	w0, #0x1                   	// #1
  41f378:	strb	w0, [x19, #16]
  41f37c:	strb	wzr, [x19, #21]
  41f380:	mov	w0, #0x53                  	// #83
  41f384:	strb	w0, [x19, #156]
  41f388:	ldr	x0, [x19, #40]
  41f38c:	ldr	w0, [x0, #60]
  41f390:	str	w0, [x19, #48]
  41f394:	mov	x0, x19
  41f398:	bl	4269b4 <nftw@plt+0x23e34>
  41f39c:	sbfiz	x1, x20, #1, #32
  41f3a0:	add	x20, x1, w20, sxtw
  41f3a4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f3a8:	add	x1, x1, #0xc88
  41f3ac:	add	x20, x1, x20, lsl #3
  41f3b0:	str	x20, [x19, #144]
  41f3b4:	ldrb	w0, [x19, #1160]
  41f3b8:	cbnz	w0, 41f3ec <nftw@plt+0x1c86c>
  41f3bc:	ldr	x0, [x19, #144]
  41f3c0:	ldr	x1, [x0]
  41f3c4:	mov	x0, x19
  41f3c8:	blr	x1
  41f3cc:	mov	w1, #0x1                   	// #1
  41f3d0:	mov	x0, x19
  41f3d4:	bl	41d448 <nftw@plt+0x1a8c8>
  41f3d8:	mov	x0, x19
  41f3dc:	bl	41ec80 <nftw@plt+0x1c100>
  41f3e0:	ldp	x19, x20, [sp, #16]
  41f3e4:	ldp	x29, x30, [sp], #32
  41f3e8:	ret
  41f3ec:	mov	x0, x19
  41f3f0:	bl	41d304 <nftw@plt+0x1a784>
  41f3f4:	b	41f3bc <nftw@plt+0x1c83c>
  41f3f8:	stp	x29, x30, [sp, #-48]!
  41f3fc:	mov	x29, sp
  41f400:	stp	x19, x20, [sp, #16]
  41f404:	stp	x21, x22, [sp, #32]
  41f408:	mov	x22, x0
  41f40c:	mov	x20, x1
  41f410:	mov	x0, x1
  41f414:	bl	4024f0 <strlen@plt>
  41f418:	mov	x19, x0
  41f41c:	add	x0, x0, #0x12
  41f420:	and	x0, x0, #0xfffffffffffffff0
  41f424:	sub	sp, sp, x0
  41f428:	mov	x21, sp
  41f42c:	mov	x2, x19
  41f430:	mov	x1, x20
  41f434:	mov	x0, x21
  41f438:	bl	402490 <memcpy@plt>
  41f43c:	mov	w1, #0x3d                  	// #61
  41f440:	mov	x0, x20
  41f444:	bl	402940 <strchr@plt>
  41f448:	cbz	x0, 41f488 <nftw@plt+0x1c908>
  41f44c:	sub	x20, x0, x20
  41f450:	mov	w0, #0x20                  	// #32
  41f454:	strb	w0, [x21, x20]
  41f458:	mov	w0, #0xa                   	// #10
  41f45c:	strb	w0, [x21, x19]
  41f460:	mov	x3, x19
  41f464:	mov	x2, x21
  41f468:	mov	w1, #0x0                   	// #0
  41f46c:	mov	x0, x22
  41f470:	bl	41f350 <nftw@plt+0x1c7d0>
  41f474:	mov	sp, x29
  41f478:	ldp	x19, x20, [sp, #16]
  41f47c:	ldp	x21, x22, [sp, #32]
  41f480:	ldp	x29, x30, [sp], #48
  41f484:	ret
  41f488:	add	x0, x19, #0x1
  41f48c:	mov	w1, #0x20                  	// #32
  41f490:	strb	w1, [x21, x19]
  41f494:	mov	w1, #0x31                  	// #49
  41f498:	strb	w1, [x21, x0]
  41f49c:	add	x19, x19, #0x2
  41f4a0:	b	41f458 <nftw@plt+0x1c8d8>
  41f4a4:	stp	x29, x30, [sp, #-272]!
  41f4a8:	mov	x29, sp
  41f4ac:	stp	x19, x20, [sp, #16]
  41f4b0:	mov	x20, x0
  41f4b4:	mov	x0, x1
  41f4b8:	str	x2, [sp, #224]
  41f4bc:	str	x3, [sp, #232]
  41f4c0:	str	x4, [sp, #240]
  41f4c4:	str	x5, [sp, #248]
  41f4c8:	str	x6, [sp, #256]
  41f4cc:	str	x7, [sp, #264]
  41f4d0:	str	q0, [sp, #96]
  41f4d4:	str	q1, [sp, #112]
  41f4d8:	str	q2, [sp, #128]
  41f4dc:	str	q3, [sp, #144]
  41f4e0:	str	q4, [sp, #160]
  41f4e4:	str	q5, [sp, #176]
  41f4e8:	str	q6, [sp, #192]
  41f4ec:	str	q7, [sp, #208]
  41f4f0:	add	x1, sp, #0x110
  41f4f4:	str	x1, [sp, #64]
  41f4f8:	str	x1, [sp, #72]
  41f4fc:	add	x1, sp, #0xe0
  41f500:	str	x1, [sp, #80]
  41f504:	mov	w1, #0xffffffd0            	// #-48
  41f508:	str	w1, [sp, #88]
  41f50c:	mov	w1, #0xffffff80            	// #-128
  41f510:	str	w1, [sp, #92]
  41f514:	ldp	x2, x3, [sp, #64]
  41f518:	stp	x2, x3, [sp, #32]
  41f51c:	ldp	x2, x3, [sp, #80]
  41f520:	stp	x2, x3, [sp, #48]
  41f524:	add	x1, sp, #0x20
  41f528:	bl	44a8f4 <_obstack_memory_used@@Base+0x2f0>
  41f52c:	mov	x19, x0
  41f530:	mov	x1, x0
  41f534:	mov	x0, x20
  41f538:	bl	41f3f8 <nftw@plt+0x1c878>
  41f53c:	mov	x0, x19
  41f540:	bl	402910 <free@plt>
  41f544:	ldp	x19, x20, [sp, #16]
  41f548:	ldp	x29, x30, [sp], #272
  41f54c:	ret
  41f550:	stp	x29, x30, [sp, #-48]!
  41f554:	mov	x29, sp
  41f558:	stp	x19, x20, [sp, #16]
  41f55c:	stp	x21, x22, [sp, #32]
  41f560:	mov	x21, x0
  41f564:	mov	x20, x1
  41f568:	mov	x0, x1
  41f56c:	bl	4024f0 <strlen@plt>
  41f570:	mov	x19, x0
  41f574:	add	x0, x0, #0x10
  41f578:	and	x0, x0, #0xfffffffffffffff0
  41f57c:	sub	sp, sp, x0
  41f580:	mov	x22, sp
  41f584:	mov	x2, x19
  41f588:	mov	x1, x20
  41f58c:	mov	x0, x22
  41f590:	bl	402490 <memcpy@plt>
  41f594:	mov	w0, #0xa                   	// #10
  41f598:	strb	w0, [x22, x19]
  41f59c:	mov	x3, x19
  41f5a0:	mov	x2, x22
  41f5a4:	mov	w1, #0x0                   	// #0
  41f5a8:	mov	x0, x21
  41f5ac:	bl	41f350 <nftw@plt+0x1c7d0>
  41f5b0:	mov	sp, x29
  41f5b4:	ldp	x19, x20, [sp, #16]
  41f5b8:	ldp	x21, x22, [sp, #32]
  41f5bc:	ldp	x29, x30, [sp], #48
  41f5c0:	ret
  41f5c4:	stp	x29, x30, [sp, #-48]!
  41f5c8:	mov	x29, sp
  41f5cc:	stp	x19, x20, [sp, #16]
  41f5d0:	stp	x21, x22, [sp, #32]
  41f5d4:	mov	x21, x0
  41f5d8:	mov	x20, x1
  41f5dc:	mov	x0, x1
  41f5e0:	bl	4024f0 <strlen@plt>
  41f5e4:	mov	x19, x0
  41f5e8:	add	x0, x0, #0x10
  41f5ec:	and	x0, x0, #0xfffffffffffffff0
  41f5f0:	sub	sp, sp, x0
  41f5f4:	mov	x22, sp
  41f5f8:	mov	x2, x19
  41f5fc:	mov	x1, x20
  41f600:	mov	x0, x22
  41f604:	bl	402490 <memcpy@plt>
  41f608:	mov	w0, #0xa                   	// #10
  41f60c:	strb	w0, [x22, x19]
  41f610:	mov	x3, x19
  41f614:	mov	x2, x22
  41f618:	mov	w1, #0x7                   	// #7
  41f61c:	mov	x0, x21
  41f620:	bl	41f350 <nftw@plt+0x1c7d0>
  41f624:	mov	sp, x29
  41f628:	ldp	x19, x20, [sp, #16]
  41f62c:	ldp	x21, x22, [sp, #32]
  41f630:	ldp	x29, x30, [sp], #48
  41f634:	ret
  41f638:	stp	x29, x30, [sp, #-64]!
  41f63c:	mov	x29, sp
  41f640:	stp	x19, x20, [sp, #16]
  41f644:	stp	x21, x22, [sp, #32]
  41f648:	stp	x23, x24, [sp, #48]
  41f64c:	mov	x23, x0
  41f650:	mov	x20, x1
  41f654:	mov	w24, w2
  41f658:	mov	x0, x1
  41f65c:	bl	4024f0 <strlen@plt>
  41f660:	mov	x19, x0
  41f664:	mov	w1, #0x3d                  	// #61
  41f668:	mov	x0, x20
  41f66c:	bl	402940 <strchr@plt>
  41f670:	mov	x21, x0
  41f674:	add	x0, x19, #0x11
  41f678:	and	x0, x0, #0xfffffffffffffff0
  41f67c:	sub	sp, sp, x0
  41f680:	mov	x22, sp
  41f684:	mov	x2, x19
  41f688:	mov	x1, x20
  41f68c:	mov	x0, x22
  41f690:	bl	402490 <memcpy@plt>
  41f694:	mov	x3, x19
  41f698:	cbz	x21, 41f6b4 <nftw@plt+0x1cb34>
  41f69c:	sub	x20, x21, x20
  41f6a0:	mov	w0, #0x28                  	// #40
  41f6a4:	strb	w0, [x22, x20]
  41f6a8:	add	x3, x19, #0x1
  41f6ac:	mov	w0, #0x29                  	// #41
  41f6b0:	strb	w0, [x22, x19]
  41f6b4:	mov	w0, #0xa                   	// #10
  41f6b8:	strb	w0, [x22, x3]
  41f6bc:	mov	x2, x22
  41f6c0:	mov	w1, w24
  41f6c4:	mov	x0, x23
  41f6c8:	bl	41f350 <nftw@plt+0x1c7d0>
  41f6cc:	mov	sp, x29
  41f6d0:	ldp	x19, x20, [sp, #16]
  41f6d4:	ldp	x21, x22, [sp, #32]
  41f6d8:	ldp	x23, x24, [sp, #48]
  41f6dc:	ldp	x29, x30, [sp], #64
  41f6e0:	ret
  41f6e4:	stp	x29, x30, [sp, #-16]!
  41f6e8:	mov	x29, sp
  41f6ec:	mov	w2, #0x10                  	// #16
  41f6f0:	bl	41f638 <nftw@plt+0x1cab8>
  41f6f4:	ldp	x29, x30, [sp], #16
  41f6f8:	ret
  41f6fc:	stp	x29, x30, [sp, #-16]!
  41f700:	mov	x29, sp
  41f704:	mov	w2, #0x11                  	// #17
  41f708:	bl	41f638 <nftw@plt+0x1cab8>
  41f70c:	ldp	x29, x30, [sp], #16
  41f710:	ret
  41f714:	stp	x29, x30, [sp, #-48]!
  41f718:	mov	x29, sp
  41f71c:	stp	x19, x20, [sp, #16]
  41f720:	str	x21, [sp, #32]
  41f724:	mov	x21, x0
  41f728:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f72c:	add	x20, x20, #0xc88
  41f730:	add	x20, x20, #0x8
  41f734:	mov	w19, #0x0                   	// #0
  41f738:	ldrh	w2, [x20, #8]
  41f73c:	ldr	x1, [x20], #24
  41f740:	mov	x0, x21
  41f744:	bl	426234 <nftw@plt+0x236b4>
  41f748:	ldrb	w1, [x0, #16]
  41f74c:	orr	w1, w1, #0x1
  41f750:	bfi	w1, w19, #1, #7
  41f754:	strb	w1, [x0, #16]
  41f758:	add	w19, w19, #0x1
  41f75c:	cmp	w19, #0x13
  41f760:	b.ne	41f738 <nftw@plt+0x1cbb8>  // b.any
  41f764:	ldp	x19, x20, [sp, #16]
  41f768:	ldr	x21, [sp, #32]
  41f76c:	ldp	x29, x30, [sp], #48
  41f770:	ret
  41f774:	stp	x29, x30, [sp, #-16]!
  41f778:	mov	x29, sp
  41f77c:	bl	41c7fc <nftw@plt+0x19c7c>
  41f780:	ldp	x29, x30, [sp], #16
  41f784:	ret
  41f788:	stp	x29, x30, [sp, #-64]!
  41f78c:	mov	x29, sp
  41f790:	stp	x19, x20, [sp, #16]
  41f794:	stp	x21, x22, [sp, #32]
  41f798:	stp	x23, x24, [sp, #48]
  41f79c:	ldr	x22, [x0, #1000]
  41f7a0:	cbz	x22, 41f7f8 <nftw@plt+0x1cc78>
  41f7a4:	mov	x19, x0
  41f7a8:	mov	w20, w1
  41f7ac:	mov	w24, w2
  41f7b0:	mov	x23, x3
  41f7b4:	mov	x1, x4
  41f7b8:	mov	x21, x5
  41f7bc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f7c0:	add	x0, x0, #0xf38
  41f7c4:	bl	402900 <dgettext@plt>
  41f7c8:	mov	x5, x21
  41f7cc:	mov	x4, x0
  41f7d0:	mov	x3, x23
  41f7d4:	mov	w2, w24
  41f7d8:	mov	w1, w20
  41f7dc:	mov	x0, x19
  41f7e0:	blr	x22
  41f7e4:	ldp	x19, x20, [sp, #16]
  41f7e8:	ldp	x21, x22, [sp, #32]
  41f7ec:	ldp	x23, x24, [sp, #48]
  41f7f0:	ldp	x29, x30, [sp], #64
  41f7f4:	ret
  41f7f8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f7fc:	add	x2, x2, #0xf08
  41f800:	mov	w1, #0x29                  	// #41
  41f804:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f808:	add	x0, x0, #0xf20
  41f80c:	bl	408d8c <nftw@plt+0x620c>
  41f810:	stp	x29, x30, [sp, #-240]!
  41f814:	mov	x29, sp
  41f818:	stp	x19, x20, [sp, #16]
  41f81c:	stp	x21, x22, [sp, #32]
  41f820:	str	x23, [sp, #48]
  41f824:	mov	x19, x0
  41f828:	mov	w20, w1
  41f82c:	mov	w21, w2
  41f830:	mov	x22, x3
  41f834:	mov	x23, x4
  41f838:	ldrb	w0, [x0, #1160]
  41f83c:	cbz	w0, 41f85c <nftw@plt+0x1ccdc>
  41f840:	ldrb	w0, [x19, #16]
  41f844:	cbz	w0, 41f850 <nftw@plt+0x1ccd0>
  41f848:	ldr	w2, [x19, #48]
  41f84c:	b	41f878 <nftw@plt+0x1ccf8>
  41f850:	ldr	x0, [x19, #40]
  41f854:	ldr	w2, [x0, #60]
  41f858:	b	41f878 <nftw@plt+0x1ccf8>
  41f85c:	ldr	x0, [x19, #448]
  41f860:	ldr	x1, [x19, #488]
  41f864:	ldr	x1, [x1, #16]
  41f868:	mov	w2, #0x0                   	// #0
  41f86c:	cmp	x0, x1
  41f870:	b.eq	41f878 <nftw@plt+0x1ccf8>  // b.none
  41f874:	ldur	w2, [x0, #-24]
  41f878:	mov	x3, #0x0                   	// #0
  41f87c:	ldr	x1, [x19, #40]
  41f880:	add	x0, sp, #0x48
  41f884:	bl	42d310 <nftw@plt+0x2a790>
  41f888:	mov	x5, x23
  41f88c:	mov	x4, x22
  41f890:	add	x3, sp, #0x48
  41f894:	mov	w2, w21
  41f898:	mov	w1, w20
  41f89c:	mov	x0, x19
  41f8a0:	bl	41f788 <nftw@plt+0x1cc08>
  41f8a4:	mov	w19, w0
  41f8a8:	add	x0, sp, #0x48
  41f8ac:	bl	42d0a0 <nftw@plt+0x2a520>
  41f8b0:	mov	w0, w19
  41f8b4:	ldp	x19, x20, [sp, #16]
  41f8b8:	ldp	x21, x22, [sp, #32]
  41f8bc:	ldr	x23, [sp, #48]
  41f8c0:	ldp	x29, x30, [sp], #240
  41f8c4:	ret
  41f8c8:	stp	x29, x30, [sp, #-240]!
  41f8cc:	mov	x29, sp
  41f8d0:	stp	x19, x20, [sp, #16]
  41f8d4:	stp	x21, x22, [sp, #32]
  41f8d8:	stp	x23, x24, [sp, #48]
  41f8dc:	mov	x19, x0
  41f8e0:	ldr	x0, [x0, #1000]
  41f8e4:	cbz	x0, 41f968 <nftw@plt+0x1cde8>
  41f8e8:	mov	w21, w1
  41f8ec:	mov	w22, w2
  41f8f0:	mov	w2, w3
  41f8f4:	mov	w20, w4
  41f8f8:	mov	x23, x5
  41f8fc:	mov	x24, x6
  41f900:	mov	x3, #0x0                   	// #0
  41f904:	ldr	x1, [x19, #40]
  41f908:	add	x0, sp, #0x48
  41f90c:	bl	42d310 <nftw@plt+0x2a790>
  41f910:	cbnz	w20, 41f980 <nftw@plt+0x1ce00>
  41f914:	ldr	x20, [x19, #1000]
  41f918:	mov	x1, x23
  41f91c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f920:	add	x0, x0, #0xf38
  41f924:	bl	402900 <dgettext@plt>
  41f928:	mov	x5, x24
  41f92c:	mov	x4, x0
  41f930:	add	x3, sp, #0x48
  41f934:	mov	w2, w22
  41f938:	mov	w1, w21
  41f93c:	mov	x0, x19
  41f940:	blr	x20
  41f944:	mov	w19, w0
  41f948:	add	x0, sp, #0x48
  41f94c:	bl	42d0a0 <nftw@plt+0x2a520>
  41f950:	mov	w0, w19
  41f954:	ldp	x19, x20, [sp, #16]
  41f958:	ldp	x21, x22, [sp, #32]
  41f95c:	ldp	x23, x24, [sp, #48]
  41f960:	ldp	x29, x30, [sp], #240
  41f964:	ret
  41f968:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f96c:	add	x2, x2, #0xf40
  41f970:	mov	w1, #0x9f                  	// #159
  41f974:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41f978:	add	x0, x0, #0xf20
  41f97c:	bl	408d8c <nftw@plt+0x620c>
  41f980:	mov	w1, w20
  41f984:	add	x0, sp, #0x48
  41f988:	bl	42d238 <nftw@plt+0x2a6b8>
  41f98c:	b	41f914 <nftw@plt+0x1cd94>
  41f990:	stp	x29, x30, [sp, #-224]!
  41f994:	mov	x29, sp
  41f998:	str	x3, [sp, #184]
  41f99c:	str	x4, [sp, #192]
  41f9a0:	str	x5, [sp, #200]
  41f9a4:	str	x6, [sp, #208]
  41f9a8:	str	x7, [sp, #216]
  41f9ac:	str	q0, [sp, #48]
  41f9b0:	str	q1, [sp, #64]
  41f9b4:	str	q2, [sp, #80]
  41f9b8:	str	q3, [sp, #96]
  41f9bc:	str	q4, [sp, #112]
  41f9c0:	str	q5, [sp, #128]
  41f9c4:	str	q6, [sp, #144]
  41f9c8:	str	q7, [sp, #160]
  41f9cc:	add	x3, sp, #0xe0
  41f9d0:	str	x3, [sp, #16]
  41f9d4:	str	x3, [sp, #24]
  41f9d8:	add	x3, sp, #0xb0
  41f9dc:	str	x3, [sp, #32]
  41f9e0:	mov	w3, #0xffffffd8            	// #-40
  41f9e4:	str	w3, [sp, #40]
  41f9e8:	mov	w3, #0xffffff80            	// #-128
  41f9ec:	str	w3, [sp, #44]
  41f9f0:	add	x4, sp, #0x10
  41f9f4:	mov	x3, x2
  41f9f8:	mov	w2, #0x0                   	// #0
  41f9fc:	bl	41f810 <nftw@plt+0x1cc90>
  41fa00:	ldp	x29, x30, [sp], #224
  41fa04:	ret
  41fa08:	stp	x29, x30, [sp, #-224]!
  41fa0c:	mov	x29, sp
  41fa10:	str	x3, [sp, #184]
  41fa14:	str	x4, [sp, #192]
  41fa18:	str	x5, [sp, #200]
  41fa1c:	str	x6, [sp, #208]
  41fa20:	str	x7, [sp, #216]
  41fa24:	str	q0, [sp, #48]
  41fa28:	str	q1, [sp, #64]
  41fa2c:	str	q2, [sp, #80]
  41fa30:	str	q3, [sp, #96]
  41fa34:	str	q4, [sp, #112]
  41fa38:	str	q5, [sp, #128]
  41fa3c:	str	q6, [sp, #144]
  41fa40:	str	q7, [sp, #160]
  41fa44:	add	x3, sp, #0xe0
  41fa48:	str	x3, [sp, #16]
  41fa4c:	str	x3, [sp, #24]
  41fa50:	add	x3, sp, #0xb0
  41fa54:	str	x3, [sp, #32]
  41fa58:	mov	w3, #0xffffffd8            	// #-40
  41fa5c:	str	w3, [sp, #40]
  41fa60:	mov	w3, #0xffffff80            	// #-128
  41fa64:	str	w3, [sp, #44]
  41fa68:	add	x4, sp, #0x10
  41fa6c:	mov	x3, x2
  41fa70:	mov	w2, w1
  41fa74:	mov	w1, #0x0                   	// #0
  41fa78:	bl	41f810 <nftw@plt+0x1cc90>
  41fa7c:	ldp	x29, x30, [sp], #224
  41fa80:	ret
  41fa84:	stp	x29, x30, [sp, #-224]!
  41fa88:	mov	x29, sp
  41fa8c:	str	x3, [sp, #184]
  41fa90:	str	x4, [sp, #192]
  41fa94:	str	x5, [sp, #200]
  41fa98:	str	x6, [sp, #208]
  41fa9c:	str	x7, [sp, #216]
  41faa0:	str	q0, [sp, #48]
  41faa4:	str	q1, [sp, #64]
  41faa8:	str	q2, [sp, #80]
  41faac:	str	q3, [sp, #96]
  41fab0:	str	q4, [sp, #112]
  41fab4:	str	q5, [sp, #128]
  41fab8:	str	q6, [sp, #144]
  41fabc:	str	q7, [sp, #160]
  41fac0:	add	x3, sp, #0xe0
  41fac4:	str	x3, [sp, #16]
  41fac8:	str	x3, [sp, #24]
  41facc:	add	x3, sp, #0xb0
  41fad0:	str	x3, [sp, #32]
  41fad4:	mov	w3, #0xffffffd8            	// #-40
  41fad8:	str	w3, [sp, #40]
  41fadc:	mov	w3, #0xffffff80            	// #-128
  41fae0:	str	w3, [sp, #44]
  41fae4:	add	x4, sp, #0x10
  41fae8:	mov	x3, x2
  41faec:	mov	w2, w1
  41faf0:	mov	w1, #0x2                   	// #2
  41faf4:	bl	41f810 <nftw@plt+0x1cc90>
  41faf8:	ldp	x29, x30, [sp], #224
  41fafc:	ret
  41fb00:	stp	x29, x30, [sp, #-224]!
  41fb04:	mov	x29, sp
  41fb08:	str	x3, [sp, #184]
  41fb0c:	str	x4, [sp, #192]
  41fb10:	str	x5, [sp, #200]
  41fb14:	str	x6, [sp, #208]
  41fb18:	str	x7, [sp, #216]
  41fb1c:	str	q0, [sp, #48]
  41fb20:	str	q1, [sp, #64]
  41fb24:	str	q2, [sp, #80]
  41fb28:	str	q3, [sp, #96]
  41fb2c:	str	q4, [sp, #112]
  41fb30:	str	q5, [sp, #128]
  41fb34:	str	q6, [sp, #144]
  41fb38:	str	q7, [sp, #160]
  41fb3c:	add	x3, sp, #0xe0
  41fb40:	str	x3, [sp, #16]
  41fb44:	str	x3, [sp, #24]
  41fb48:	add	x3, sp, #0xb0
  41fb4c:	str	x3, [sp, #32]
  41fb50:	mov	w3, #0xffffffd8            	// #-40
  41fb54:	str	w3, [sp, #40]
  41fb58:	mov	w3, #0xffffff80            	// #-128
  41fb5c:	str	w3, [sp, #44]
  41fb60:	add	x4, sp, #0x10
  41fb64:	mov	x3, x2
  41fb68:	mov	w2, w1
  41fb6c:	mov	w1, #0x1                   	// #1
  41fb70:	bl	41f810 <nftw@plt+0x1cc90>
  41fb74:	ldp	x29, x30, [sp], #224
  41fb78:	ret
  41fb7c:	stp	x29, x30, [sp, #-208]!
  41fb80:	mov	x29, sp
  41fb84:	str	x5, [sp, #184]
  41fb88:	str	x6, [sp, #192]
  41fb8c:	str	x7, [sp, #200]
  41fb90:	str	q0, [sp, #48]
  41fb94:	str	q1, [sp, #64]
  41fb98:	str	q2, [sp, #80]
  41fb9c:	str	q3, [sp, #96]
  41fba0:	str	q4, [sp, #112]
  41fba4:	str	q5, [sp, #128]
  41fba8:	str	q6, [sp, #144]
  41fbac:	str	q7, [sp, #160]
  41fbb0:	add	x5, sp, #0xd0
  41fbb4:	str	x5, [sp, #16]
  41fbb8:	str	x5, [sp, #24]
  41fbbc:	add	x5, sp, #0xb0
  41fbc0:	str	x5, [sp, #32]
  41fbc4:	mov	w5, #0xffffffe8            	// #-24
  41fbc8:	str	w5, [sp, #40]
  41fbcc:	mov	w5, #0xffffff80            	// #-128
  41fbd0:	str	w5, [sp, #44]
  41fbd4:	add	x6, sp, #0x10
  41fbd8:	mov	x5, x4
  41fbdc:	mov	w4, w3
  41fbe0:	mov	w3, w2
  41fbe4:	mov	w2, #0x0                   	// #0
  41fbe8:	bl	41f8c8 <nftw@plt+0x1cd48>
  41fbec:	ldp	x29, x30, [sp], #208
  41fbf0:	ret
  41fbf4:	stp	x29, x30, [sp, #-208]!
  41fbf8:	mov	x29, sp
  41fbfc:	str	x5, [sp, #184]
  41fc00:	str	x6, [sp, #192]
  41fc04:	str	x7, [sp, #200]
  41fc08:	str	q0, [sp, #48]
  41fc0c:	str	q1, [sp, #64]
  41fc10:	str	q2, [sp, #80]
  41fc14:	str	q3, [sp, #96]
  41fc18:	str	q4, [sp, #112]
  41fc1c:	str	q5, [sp, #128]
  41fc20:	str	q6, [sp, #144]
  41fc24:	str	q7, [sp, #160]
  41fc28:	add	x5, sp, #0xd0
  41fc2c:	str	x5, [sp, #16]
  41fc30:	str	x5, [sp, #24]
  41fc34:	add	x5, sp, #0xb0
  41fc38:	str	x5, [sp, #32]
  41fc3c:	mov	w5, #0xffffffe8            	// #-24
  41fc40:	str	w5, [sp, #40]
  41fc44:	mov	w5, #0xffffff80            	// #-128
  41fc48:	str	w5, [sp, #44]
  41fc4c:	add	x6, sp, #0x10
  41fc50:	mov	x5, x4
  41fc54:	mov	w4, w3
  41fc58:	mov	w3, w2
  41fc5c:	mov	w2, w1
  41fc60:	mov	w1, #0x0                   	// #0
  41fc64:	bl	41f8c8 <nftw@plt+0x1cd48>
  41fc68:	ldp	x29, x30, [sp], #208
  41fc6c:	ret
  41fc70:	stp	x29, x30, [sp, #-208]!
  41fc74:	mov	x29, sp
  41fc78:	str	x5, [sp, #184]
  41fc7c:	str	x6, [sp, #192]
  41fc80:	str	x7, [sp, #200]
  41fc84:	str	q0, [sp, #48]
  41fc88:	str	q1, [sp, #64]
  41fc8c:	str	q2, [sp, #80]
  41fc90:	str	q3, [sp, #96]
  41fc94:	str	q4, [sp, #112]
  41fc98:	str	q5, [sp, #128]
  41fc9c:	str	q6, [sp, #144]
  41fca0:	str	q7, [sp, #160]
  41fca4:	add	x5, sp, #0xd0
  41fca8:	str	x5, [sp, #16]
  41fcac:	str	x5, [sp, #24]
  41fcb0:	add	x5, sp, #0xb0
  41fcb4:	str	x5, [sp, #32]
  41fcb8:	mov	w5, #0xffffffe8            	// #-24
  41fcbc:	str	w5, [sp, #40]
  41fcc0:	mov	w5, #0xffffff80            	// #-128
  41fcc4:	str	w5, [sp, #44]
  41fcc8:	add	x6, sp, #0x10
  41fccc:	mov	x5, x4
  41fcd0:	mov	w4, w3
  41fcd4:	mov	w3, w2
  41fcd8:	mov	w2, w1
  41fcdc:	mov	w1, #0x2                   	// #2
  41fce0:	bl	41f8c8 <nftw@plt+0x1cd48>
  41fce4:	ldp	x29, x30, [sp], #208
  41fce8:	ret
  41fcec:	stp	x29, x30, [sp, #-208]!
  41fcf0:	mov	x29, sp
  41fcf4:	str	x5, [sp, #184]
  41fcf8:	str	x6, [sp, #192]
  41fcfc:	str	x7, [sp, #200]
  41fd00:	str	q0, [sp, #48]
  41fd04:	str	q1, [sp, #64]
  41fd08:	str	q2, [sp, #80]
  41fd0c:	str	q3, [sp, #96]
  41fd10:	str	q4, [sp, #112]
  41fd14:	str	q5, [sp, #128]
  41fd18:	str	q6, [sp, #144]
  41fd1c:	str	q7, [sp, #160]
  41fd20:	add	x5, sp, #0xd0
  41fd24:	str	x5, [sp, #16]
  41fd28:	str	x5, [sp, #24]
  41fd2c:	add	x5, sp, #0xb0
  41fd30:	str	x5, [sp, #32]
  41fd34:	mov	w5, #0xffffffe8            	// #-24
  41fd38:	str	w5, [sp, #40]
  41fd3c:	mov	w5, #0xffffff80            	// #-128
  41fd40:	str	w5, [sp, #44]
  41fd44:	add	x6, sp, #0x10
  41fd48:	mov	x5, x4
  41fd4c:	mov	w4, w3
  41fd50:	mov	w3, w2
  41fd54:	mov	w2, w1
  41fd58:	mov	w1, #0x1                   	// #1
  41fd5c:	bl	41f8c8 <nftw@plt+0x1cd48>
  41fd60:	ldp	x29, x30, [sp], #208
  41fd64:	ret
  41fd68:	stp	x29, x30, [sp, #-416]!
  41fd6c:	mov	x29, sp
  41fd70:	stp	x19, x20, [sp, #16]
  41fd74:	str	x21, [sp, #32]
  41fd78:	mov	x19, x0
  41fd7c:	mov	w20, w1
  41fd80:	mov	x21, x3
  41fd84:	str	x4, [sp, #384]
  41fd88:	str	x5, [sp, #392]
  41fd8c:	str	x6, [sp, #400]
  41fd90:	str	x7, [sp, #408]
  41fd94:	str	q0, [sp, #256]
  41fd98:	str	q1, [sp, #272]
  41fd9c:	str	q2, [sp, #288]
  41fda0:	str	q3, [sp, #304]
  41fda4:	str	q4, [sp, #320]
  41fda8:	str	q5, [sp, #336]
  41fdac:	str	q6, [sp, #352]
  41fdb0:	str	q7, [sp, #368]
  41fdb4:	add	x0, sp, #0x1a0
  41fdb8:	str	x0, [sp, #224]
  41fdbc:	str	x0, [sp, #232]
  41fdc0:	add	x0, sp, #0x180
  41fdc4:	str	x0, [sp, #240]
  41fdc8:	mov	w0, #0xffffffe0            	// #-32
  41fdcc:	str	w0, [sp, #248]
  41fdd0:	mov	w0, #0xffffff80            	// #-128
  41fdd4:	str	w0, [sp, #252]
  41fdd8:	mov	x3, #0x0                   	// #0
  41fddc:	ldr	x1, [x19, #40]
  41fde0:	add	x0, sp, #0x38
  41fde4:	bl	42d310 <nftw@plt+0x2a790>
  41fde8:	add	x5, sp, #0xe0
  41fdec:	mov	x4, x21
  41fdf0:	add	x3, sp, #0x38
  41fdf4:	mov	w2, #0x0                   	// #0
  41fdf8:	mov	w1, w20
  41fdfc:	mov	x0, x19
  41fe00:	bl	41f788 <nftw@plt+0x1cc08>
  41fe04:	mov	w19, w0
  41fe08:	add	x0, sp, #0x38
  41fe0c:	bl	42d0a0 <nftw@plt+0x2a520>
  41fe10:	mov	w0, w19
  41fe14:	ldp	x19, x20, [sp, #16]
  41fe18:	ldr	x21, [sp, #32]
  41fe1c:	ldp	x29, x30, [sp], #416
  41fe20:	ret
  41fe24:	stp	x29, x30, [sp, #-208]!
  41fe28:	mov	x29, sp
  41fe2c:	str	x4, [sp, #176]
  41fe30:	str	x5, [sp, #184]
  41fe34:	str	x6, [sp, #192]
  41fe38:	str	x7, [sp, #200]
  41fe3c:	str	q0, [sp, #48]
  41fe40:	str	q1, [sp, #64]
  41fe44:	str	q2, [sp, #80]
  41fe48:	str	q3, [sp, #96]
  41fe4c:	str	q4, [sp, #112]
  41fe50:	str	q5, [sp, #128]
  41fe54:	str	q6, [sp, #144]
  41fe58:	str	q7, [sp, #160]
  41fe5c:	add	x4, sp, #0xd0
  41fe60:	str	x4, [sp, #16]
  41fe64:	str	x4, [sp, #24]
  41fe68:	add	x4, sp, #0xb0
  41fe6c:	str	x4, [sp, #32]
  41fe70:	mov	w4, #0xffffffe0            	// #-32
  41fe74:	str	w4, [sp, #40]
  41fe78:	mov	w4, #0xffffff80            	// #-128
  41fe7c:	str	w4, [sp, #44]
  41fe80:	add	x5, sp, #0x10
  41fe84:	mov	x4, x3
  41fe88:	mov	x3, x2
  41fe8c:	mov	w2, #0x0                   	// #0
  41fe90:	bl	41f788 <nftw@plt+0x1cc08>
  41fe94:	ldp	x29, x30, [sp], #208
  41fe98:	ret
  41fe9c:	stp	x29, x30, [sp, #-48]!
  41fea0:	mov	x29, sp
  41fea4:	stp	x19, x20, [sp, #16]
  41fea8:	str	x21, [sp, #32]
  41feac:	mov	x19, x0
  41feb0:	mov	w20, w1
  41feb4:	mov	x1, x2
  41feb8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41febc:	add	x0, x0, #0xf38
  41fec0:	bl	402900 <dgettext@plt>
  41fec4:	mov	x21, x0
  41fec8:	bl	402aa0 <__errno_location@plt>
  41fecc:	ldr	w0, [x0]
  41fed0:	bl	44a870 <_obstack_memory_used@@Base+0x26c>
  41fed4:	mov	x4, x0
  41fed8:	mov	x3, x21
  41fedc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  41fee0:	add	x2, x2, #0xf60
  41fee4:	mov	w1, w20
  41fee8:	mov	x0, x19
  41feec:	bl	41f990 <nftw@plt+0x1ce10>
  41fef0:	ldp	x19, x20, [sp, #16]
  41fef4:	ldr	x21, [sp, #32]
  41fef8:	ldp	x29, x30, [sp], #48
  41fefc:	ret
  41ff00:	stp	x29, x30, [sp, #-48]!
  41ff04:	mov	x29, sp
  41ff08:	stp	x19, x20, [sp, #16]
  41ff0c:	stp	x21, x22, [sp, #32]
  41ff10:	mov	x20, x0
  41ff14:	mov	w21, w1
  41ff18:	mov	x19, x2
  41ff1c:	mov	w22, w3
  41ff20:	ldrb	w0, [x2]
  41ff24:	cbz	w0, 41ff64 <nftw@plt+0x1d3e4>
  41ff28:	bl	402aa0 <__errno_location@plt>
  41ff2c:	ldr	w0, [x0]
  41ff30:	bl	44a870 <_obstack_memory_used@@Base+0x26c>
  41ff34:	mov	x5, x0
  41ff38:	mov	x4, x19
  41ff3c:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ff40:	add	x3, x3, #0xf60
  41ff44:	mov	w2, w22
  41ff48:	mov	w1, w21
  41ff4c:	mov	x0, x20
  41ff50:	bl	41fd68 <nftw@plt+0x1d1e8>
  41ff54:	ldp	x19, x20, [sp, #16]
  41ff58:	ldp	x21, x22, [sp, #32]
  41ff5c:	ldp	x29, x30, [sp], #48
  41ff60:	ret
  41ff64:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ff68:	add	x1, x1, #0xf68
  41ff6c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  41ff70:	add	x0, x0, #0xf38
  41ff74:	bl	402900 <dgettext@plt>
  41ff78:	mov	x19, x0
  41ff7c:	b	41ff28 <nftw@plt+0x1d3a8>
  41ff80:	mov	x6, x0
  41ff84:	cmp	x2, #0x2
  41ff88:	b.eq	41ffe4 <nftw@plt+0x1d464>  // b.none
  41ff8c:	ldrb	w12, [x6, #1163]
  41ff90:	cmp	x2, #0x0
  41ff94:	cset	w3, ne  // ne = any
  41ff98:	cmp	w12, #0x0
  41ff9c:	csel	w3, w3, wzr, ne  // ne = any
  41ffa0:	cbnz	w3, 420090 <nftw@plt+0x1d510>
  41ffa4:	sub	x5, x2, #0x1
  41ffa8:	cbz	x2, 4204fc <nftw@plt+0x1d97c>
  41ffac:	stp	x29, x30, [sp, #-16]!
  41ffb0:	mov	x29, sp
  41ffb4:	mov	x4, x1
  41ffb8:	mov	x13, #0x0                   	// #0
  41ffbc:	mov	x16, #0x0                   	// #0
  41ffc0:	mov	x15, #0x0                   	// #0
  41ffc4:	mov	x7, #0x0                   	// #0
  41ffc8:	mov	x9, #0x0                   	// #0
  41ffcc:	mov	x8, #0x0                   	// #0
  41ffd0:	mov	x11, #0x0                   	// #0
  41ffd4:	mov	x10, #0x0                   	// #0
  41ffd8:	mov	x0, #0x0                   	// #0
  41ffdc:	mov	x18, #0x0                   	// #0
  41ffe0:	b	4201e8 <nftw@plt+0x1d668>
  41ffe4:	ldrb	w3, [x1]
  41ffe8:	and	w0, w3, #0xffffffdf
  41ffec:	and	w0, w0, #0xff
  41fff0:	cmp	w0, #0x44
  41fff4:	b.ne	4204d8 <nftw@plt+0x1d958>  // b.any
  41fff8:	ldrb	w0, [x1, #1]
  41fffc:	cmp	w0, #0x64
  420000:	b.eq	420080 <nftw@plt+0x1d500>  // b.none
  420004:	b.hi	420040 <nftw@plt+0x1d4c0>  // b.pmore
  420008:	cmp	w0, #0x46
  42000c:	b.eq	420070 <nftw@plt+0x1d4f0>  // b.none
  420010:	cmp	w0, #0x4c
  420014:	b.ne	420028 <nftw@plt+0x1d4a8>  // b.any
  420018:	cmp	w3, #0x44
  42001c:	mov	w0, #0x4040                	// #16448
  420020:	csel	w0, w0, wzr, eq  // eq = none
  420024:	ret
  420028:	cmp	w0, #0x44
  42002c:	b.ne	41ff8c <nftw@plt+0x1d40c>  // b.any
  420030:	cmp	w3, #0x44
  420034:	mov	w0, #0x4020                	// #16416
  420038:	csel	w0, w0, wzr, eq  // eq = none
  42003c:	ret
  420040:	cmp	w0, #0x66
  420044:	b.eq	420060 <nftw@plt+0x1d4e0>  // b.none
  420048:	cmp	w0, #0x6c
  42004c:	b.ne	41ff8c <nftw@plt+0x1d40c>  // b.any
  420050:	cmp	w3, #0x44
  420054:	mov	w0, #0x4040                	// #16448
  420058:	csel	w0, w0, wzr, ne  // ne = any
  42005c:	ret
  420060:	cmp	w3, #0x44
  420064:	mov	w0, #0x4010                	// #16400
  420068:	csel	w0, w0, wzr, ne  // ne = any
  42006c:	ret
  420070:	cmp	w3, #0x44
  420074:	mov	w0, #0x4010                	// #16400
  420078:	csel	w0, w0, wzr, eq  // eq = none
  42007c:	ret
  420080:	cmp	w3, #0x44
  420084:	mov	w0, #0x4020                	// #16416
  420088:	csel	w0, w0, wzr, ne  // ne = any
  42008c:	ret
  420090:	sub	x4, x2, #0x1
  420094:	ldrb	w0, [x1, x4]
  420098:	cmp	w0, #0x6b
  42009c:	b.eq	420144 <nftw@plt+0x1d5c4>  // b.none
  4200a0:	cmp	w0, #0x6b
  4200a4:	b.hi	420134 <nftw@plt+0x1d5b4>  // b.pmore
  4200a8:	cmp	w0, #0x4b
  4200ac:	b.eq	42014c <nftw@plt+0x1d5cc>  // b.none
  4200b0:	mov	x3, #0x100000              	// #1048576
  4200b4:	cmp	w0, #0x52
  4200b8:	b.ne	42013c <nftw@plt+0x1d5bc>  // b.any
  4200bc:	cmp	x2, #0x1
  4200c0:	b.eq	42015c <nftw@plt+0x1d5dc>  // b.none
  4200c4:	ldrb	w0, [x1]
  4200c8:	and	w0, w0, #0xffffffdf
  4200cc:	and	w0, w0, #0xff
  4200d0:	cmp	w0, #0x55
  4200d4:	b.ne	4200ec <nftw@plt+0x1d56c>  // b.any
  4200d8:	orr	x3, x3, #0x1000
  4200dc:	cmp	x4, #0x1
  4200e0:	b.eq	420164 <nftw@plt+0x1d5e4>  // b.none
  4200e4:	sub	x4, x2, #0x2
  4200e8:	add	x1, x1, #0x1
  4200ec:	ldrb	w0, [x1]
  4200f0:	cmp	w0, #0x68
  4200f4:	b.eq	4201ac <nftw@plt+0x1d62c>  // b.none
  4200f8:	b.hi	420174 <nftw@plt+0x1d5f4>  // b.pmore
  4200fc:	cmp	w0, #0x48
  420100:	b.eq	4201ac <nftw@plt+0x1d62c>  // b.none
  420104:	cmp	w0, #0x4c
  420108:	b.ne	42016c <nftw@plt+0x1d5ec>  // b.any
  42010c:	cmp	x4, #0x1
  420110:	b.eq	4201c4 <nftw@plt+0x1d644>  // b.none
  420114:	mov	w0, #0x0                   	// #0
  420118:	cmp	x4, #0x2
  42011c:	b.ne	420538 <nftw@plt+0x1d9b8>  // b.any
  420120:	ldrb	w1, [x1, #1]
  420124:	orr	x0, x3, #0x40
  420128:	cmp	w1, #0x4c
  42012c:	csel	w0, w0, wzr, eq  // eq = none
  420130:	ret
  420134:	cmp	w0, #0x72
  420138:	b.eq	420154 <nftw@plt+0x1d5d4>  // b.none
  42013c:	sub	x5, x2, #0x1
  420140:	b	41ffac <nftw@plt+0x1d42c>
  420144:	mov	x3, #0x200000              	// #2097152
  420148:	b	4200bc <nftw@plt+0x1d53c>
  42014c:	mov	x3, #0x200000              	// #2097152
  420150:	b	4200bc <nftw@plt+0x1d53c>
  420154:	mov	x3, #0x100000              	// #1048576
  420158:	b	4200bc <nftw@plt+0x1d53c>
  42015c:	mov	w0, w3
  420160:	ret
  420164:	mov	w0, w3
  420168:	ret
  42016c:	mov	w0, #0x0                   	// #0
  420170:	ret
  420174:	cmp	w0, #0x6c
  420178:	b.ne	4201a4 <nftw@plt+0x1d624>  // b.any
  42017c:	cmp	x4, #0x1
  420180:	b.eq	4201bc <nftw@plt+0x1d63c>  // b.none
  420184:	mov	w0, #0x0                   	// #0
  420188:	cmp	x4, #0x2
  42018c:	b.ne	420538 <nftw@plt+0x1d9b8>  // b.any
  420190:	ldrb	w1, [x1, #1]
  420194:	orr	x0, x3, #0x40
  420198:	cmp	w1, #0x6c
  42019c:	csel	w0, w0, wzr, eq  // eq = none
  4201a0:	ret
  4201a4:	mov	w0, #0x0                   	// #0
  4201a8:	ret
  4201ac:	orr	x0, x3, #0x10
  4201b0:	cmp	x4, #0x1
  4201b4:	csel	w0, w0, wzr, eq  // eq = none
  4201b8:	ret
  4201bc:	orr	w0, w3, #0x20
  4201c0:	ret
  4201c4:	orr	w0, w3, #0x20
  4201c8:	ret
  4201cc:	cmp	w3, #0x44
  4201d0:	b.ne	42022c <nftw@plt+0x1d6ac>  // b.any
  4201d4:	add	x10, x10, #0x1
  4201d8:	mov	x3, x5
  4201dc:	add	x4, x4, #0x1
  4201e0:	sub	x5, x3, #0x1
  4201e4:	cbz	x3, 420354 <nftw@plt+0x1d7d4>
  4201e8:	ldrb	w3, [x4]
  4201ec:	cmp	w3, #0x64
  4201f0:	b.eq	4201d4 <nftw@plt+0x1d654>  // b.none
  4201f4:	b.hi	420258 <nftw@plt+0x1d6d8>  // b.pmore
  4201f8:	cmp	w3, #0x4c
  4201fc:	b.eq	42033c <nftw@plt+0x1d7bc>  // b.none
  420200:	b.hi	420234 <nftw@plt+0x1d6b4>  // b.pmore
  420204:	cmp	w3, #0x46
  420208:	b.eq	4202a0 <nftw@plt+0x1d720>  // b.none
  42020c:	b.ls	4201cc <nftw@plt+0x1d64c>  // b.plast
  420210:	sub	w3, w3, #0x49
  420214:	and	w3, w3, #0xff
  420218:	cmp	w3, #0x1
  42021c:	b.hi	420478 <nftw@plt+0x1d8f8>  // b.pmore
  420220:	add	x7, x7, #0x1
  420224:	mov	x3, x5
  420228:	b	4201dc <nftw@plt+0x1d65c>
  42022c:	mov	w0, #0x0                   	// #0
  420230:	b	420298 <nftw@plt+0x1d718>
  420234:	cmp	w3, #0x51
  420238:	b.eq	420348 <nftw@plt+0x1d7c8>  // b.none
  42023c:	cmp	w3, #0x57
  420240:	b.ne	420250 <nftw@plt+0x1d6d0>  // b.any
  420244:	add	x8, x8, #0x1
  420248:	mov	x3, x5
  42024c:	b	4201dc <nftw@plt+0x1d65c>
  420250:	mov	w0, #0x0                   	// #0
  420254:	b	420298 <nftw@plt+0x1d718>
  420258:	cmp	w3, #0x6c
  42025c:	b.eq	42033c <nftw@plt+0x1d7bc>  // b.none
  420260:	b.ls	42027c <nftw@plt+0x1d6fc>  // b.plast
  420264:	cmp	w3, #0x71
  420268:	b.eq	420348 <nftw@plt+0x1d7c8>  // b.none
  42026c:	cmp	w3, #0x77
  420270:	b.eq	420244 <nftw@plt+0x1d6c4>  // b.none
  420274:	mov	w0, #0x0                   	// #0
  420278:	b	420298 <nftw@plt+0x1d718>
  42027c:	cmp	w3, #0x66
  420280:	b.eq	4202a0 <nftw@plt+0x1d720>  // b.none
  420284:	sub	w3, w3, #0x69
  420288:	and	w3, w3, #0xff
  42028c:	cmp	w3, #0x1
  420290:	b.ls	420220 <nftw@plt+0x1d6a0>  // b.plast
  420294:	mov	w0, #0x0                   	// #0
  420298:	ldp	x29, x30, [sp], #16
  42029c:	ret
  4202a0:	add	x14, x0, #0x1
  4202a4:	cbz	x5, 420358 <nftw@plt+0x1d7d8>
  4202a8:	ldrb	w3, [x6, #1120]
  4202ac:	cbnz	w3, 4202c8 <nftw@plt+0x1d748>
  4202b0:	ldrb	w17, [x4, #1]
  4202b4:	sub	w3, w17, #0x31
  4202b8:	and	w3, w3, #0xff
  4202bc:	cmp	x13, #0x0
  4202c0:	ccmp	w3, #0x8, #0x2, eq  // eq = none
  4202c4:	b.ls	4202d8 <nftw@plt+0x1d758>  // b.plast
  4202c8:	add	x4, x4, #0x1
  4202cc:	sub	x5, x5, #0x1
  4202d0:	mov	x0, x14
  4202d4:	b	4201e8 <nftw@plt+0x1d668>
  4202d8:	mov	x13, x18
  4202dc:	add	x13, x13, x13, lsl #2
  4202e0:	sub	w3, w17, #0x30
  4202e4:	sxtw	x3, w3
  4202e8:	add	x13, x3, x13, lsl #1
  4202ec:	mov	x3, x5
  4202f0:	mov	x30, x4
  4202f4:	add	x4, x4, #0x1
  4202f8:	subs	x5, x5, #0x1
  4202fc:	b.eq	420320 <nftw@plt+0x1d7a0>  // b.none
  420300:	ldrb	w17, [x4, #1]
  420304:	sub	w14, w17, #0x30
  420308:	and	w14, w14, #0xff
  42030c:	cmp	x13, #0xef
  420310:	ccmp	w14, #0x9, #0x2, ls  // ls = plast
  420314:	b.ls	4202dc <nftw@plt+0x1d75c>  // b.plast
  420318:	cmp	w17, #0x78
  42031c:	b.eq	42032c <nftw@plt+0x1d7ac>  // b.none
  420320:	add	x15, x15, #0x1
  420324:	mov	x3, x5
  420328:	b	4201dc <nftw@plt+0x1d65c>
  42032c:	add	x16, x16, #0x1
  420330:	sub	x3, x3, #0x2
  420334:	add	x4, x30, #0x2
  420338:	b	4201dc <nftw@plt+0x1d65c>
  42033c:	add	x11, x11, #0x1
  420340:	mov	x3, x5
  420344:	b	4201dc <nftw@plt+0x1d65c>
  420348:	add	x9, x9, #0x1
  42034c:	mov	x3, x5
  420350:	b	4201dc <nftw@plt+0x1d65c>
  420354:	mov	x14, x0
  420358:	add	x3, x11, x8
  42035c:	add	x0, x14, x10
  420360:	add	x3, x3, x0
  420364:	add	x0, x9, x15
  420368:	add	x3, x3, x0
  42036c:	add	x3, x3, x16
  420370:	cmp	x13, #0xf0
  420374:	ccmp	x7, #0x1, #0x2, ls  // ls = plast
  420378:	mov	w0, #0x0                   	// #0
  42037c:	ccmp	x3, #0x1, #0x2, ls  // ls = plast
  420380:	b.hi	420298 <nftw@plt+0x1d718>  // b.pmore
  420384:	cmp	x16, #0x0
  420388:	cset	w3, ne  // ne = any
  42038c:	sub	x0, x13, #0x20
  420390:	tst	x0, #0xffffffffffffffdf
  420394:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  420398:	b.eq	420404 <nftw@plt+0x1d884>  // b.none
  42039c:	mov	w0, #0x0                   	// #0
  4203a0:	cmp	x15, #0x0
  4203a4:	cset	w4, ne  // ne = any
  4203a8:	cmp	x13, #0x80
  4203ac:	b.ne	420298 <nftw@plt+0x1d718>  // b.any
  4203b0:	cmp	x13, #0x60
  4203b4:	mov	w0, #0x0                   	// #0
  4203b8:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  4203bc:	b.ne	420298 <nftw@plt+0x1d718>  // b.any
  4203c0:	cbz	x7, 420490 <nftw@plt+0x1d910>
  4203c4:	cbz	w12, 420298 <nftw@plt+0x1d718>
  4203c8:	ldrb	w0, [x6, #1120]
  4203cc:	cbz	w0, 420444 <nftw@plt+0x1d8c4>
  4203d0:	ldr	w0, [x6, #1116]
  4203d4:	cmp	w0, #0xe
  4203d8:	b.le	42044c <nftw@plt+0x1d8cc>
  4203dc:	ldrb	w5, [x1]
  4203e0:	mov	w0, #0x2000                	// #8192
  4203e4:	cmp	w5, #0x69
  4203e8:	b.ne	4204a4 <nftw@plt+0x1d924>  // b.any
  4203ec:	cmp	x2, #0x1
  4203f0:	b.eq	420480 <nftw@plt+0x1d900>  // b.none
  4203f4:	cmp	x2, #0x2
  4203f8:	b.eq	420428 <nftw@plt+0x1d8a8>  // b.none
  4203fc:	mov	w0, #0x2000                	// #8192
  420400:	b	4204a4 <nftw@plt+0x1d924>
  420404:	cmp	x15, #0x0
  420408:	cset	w4, ne  // ne = any
  42040c:	cmp	w4, #0x0
  420410:	ccmp	x13, #0x10, #0x4, ne  // ne = any
  420414:	b.eq	4203b0 <nftw@plt+0x1d830>  // b.none
  420418:	mov	w0, #0x0                   	// #0
  42041c:	tst	x13, #0x1f
  420420:	b.ne	420298 <nftw@plt+0x1d718>  // b.any
  420424:	b	4203b0 <nftw@plt+0x1d830>
  420428:	ldrb	w0, [x1, #1]
  42042c:	cmp	w0, #0x6c
  420430:	mov	w1, #0x66                  	// #102
  420434:	ccmp	w0, w1, #0x4, ne  // ne = any
  420438:	b.eq	420488 <nftw@plt+0x1d908>  // b.none
  42043c:	mov	w0, #0x2000                	// #8192
  420440:	b	4204a4 <nftw@plt+0x1d924>
  420444:	mov	w0, #0x2000                	// #8192
  420448:	b	4204a4 <nftw@plt+0x1d924>
  42044c:	mov	w0, #0x2000                	// #8192
  420450:	b	4204a4 <nftw@plt+0x1d924>
  420454:	lsl	w1, w13, #24
  420458:	orr	w1, w1, #0x800000
  42045c:	cmp	w3, #0x0
  420460:	mov	w2, #0x8000                	// #32768
  420464:	csel	w1, w1, w2, ne  // ne = any
  420468:	b	420470 <nftw@plt+0x1d8f0>
  42046c:	mov	w1, #0x20000               	// #131072
  420470:	orr	w0, w0, w1
  420474:	b	420298 <nftw@plt+0x1d718>
  420478:	mov	w0, #0x0                   	// #0
  42047c:	b	420298 <nftw@plt+0x1d718>
  420480:	mov	w0, #0x0                   	// #0
  420484:	b	420298 <nftw@plt+0x1d718>
  420488:	mov	w0, #0x0                   	// #0
  42048c:	b	420298 <nftw@plt+0x1d718>
  420490:	orr	x0, x9, x8
  420494:	cmp	x0, #0x0
  420498:	mov	w0, #0x0                   	// #0
  42049c:	ccmp	w12, #0x0, #0x0, ne  // ne = any
  4204a0:	b.eq	420298 <nftw@plt+0x1d718>  // b.none
  4204a4:	mov	w1, #0x10                  	// #16
  4204a8:	cbnz	x14, 420470 <nftw@plt+0x1d8f0>
  4204ac:	mov	w1, #0x20                  	// #32
  4204b0:	cbnz	x10, 420470 <nftw@plt+0x1d8f0>
  4204b4:	mov	w1, #0x40                  	// #64
  4204b8:	cbnz	x11, 420470 <nftw@plt+0x1d8f0>
  4204bc:	mov	w1, #0x10000               	// #65536
  4204c0:	cbnz	x8, 420470 <nftw@plt+0x1d8f0>
  4204c4:	cbnz	x9, 42046c <nftw@plt+0x1d8ec>
  4204c8:	cbz	w4, 420454 <nftw@plt+0x1d8d4>
  4204cc:	lsl	w1, w13, #24
  4204d0:	orr	w1, w1, #0x400000
  4204d4:	b	420470 <nftw@plt+0x1d8f0>
  4204d8:	ldrb	w12, [x6, #1163]
  4204dc:	mov	x5, #0x1                   	// #1
  4204e0:	cbz	w12, 41ffac <nftw@plt+0x1d42c>
  4204e4:	sub	x4, x2, #0x1
  4204e8:	ldrb	w0, [x1, x4]
  4204ec:	cmp	w0, #0x6b
  4204f0:	b.ne	4200a0 <nftw@plt+0x1d520>  // b.any
  4204f4:	mov	x3, #0x200000              	// #2097152
  4204f8:	b	4200c4 <nftw@plt+0x1d544>
  4204fc:	mov	x13, x2
  420500:	mov	x7, x2
  420504:	mov	x9, x2
  420508:	mov	x8, x2
  42050c:	mov	x11, x2
  420510:	mov	x10, x2
  420514:	mov	x14, x2
  420518:	cmp	x2, #0x0
  42051c:	cset	w4, ne  // ne = any
  420520:	cmp	w4, #0x0
  420524:	ccmp	x2, #0x10, #0x4, ne  // ne = any
  420528:	b.eq	42053c <nftw@plt+0x1d9bc>  // b.none
  42052c:	mov	w0, #0x0                   	// #0
  420530:	tst	x2, #0x1f
  420534:	b.eq	42053c <nftw@plt+0x1d9bc>  // b.none
  420538:	ret
  42053c:	cmp	x13, #0x60
  420540:	mov	w0, #0x0                   	// #0
  420544:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  420548:	b.ne	420538 <nftw@plt+0x1d9b8>  // b.any
  42054c:	cbz	x7, 4205f0 <nftw@plt+0x1da70>
  420550:	cbz	w12, 420538 <nftw@plt+0x1d9b8>
  420554:	ldrb	w0, [x6, #1120]
  420558:	cbz	w0, 4205ac <nftw@plt+0x1da2c>
  42055c:	ldr	w0, [x6, #1116]
  420560:	cmp	w0, #0xe
  420564:	b.le	4205b4 <nftw@plt+0x1da34>
  420568:	ldrb	w5, [x1]
  42056c:	mov	w0, #0x2000                	// #8192
  420570:	cmp	w5, #0x69
  420574:	b.ne	420604 <nftw@plt+0x1da84>  // b.any
  420578:	cmp	x2, #0x1
  42057c:	b.eq	4205e0 <nftw@plt+0x1da60>  // b.none
  420580:	cmp	x2, #0x2
  420584:	b.eq	420590 <nftw@plt+0x1da10>  // b.none
  420588:	mov	w0, #0x2000                	// #8192
  42058c:	b	420604 <nftw@plt+0x1da84>
  420590:	ldrb	w0, [x1, #1]
  420594:	cmp	w0, #0x6c
  420598:	mov	w1, #0x66                  	// #102
  42059c:	ccmp	w0, w1, #0x4, ne  // ne = any
  4205a0:	b.eq	4205e8 <nftw@plt+0x1da68>  // b.none
  4205a4:	mov	w0, #0x2000                	// #8192
  4205a8:	b	420604 <nftw@plt+0x1da84>
  4205ac:	mov	w0, #0x2000                	// #8192
  4205b0:	b	420604 <nftw@plt+0x1da84>
  4205b4:	mov	w0, #0x2000                	// #8192
  4205b8:	b	420604 <nftw@plt+0x1da84>
  4205bc:	lsl	w1, w13, #24
  4205c0:	orr	w1, w1, #0x800000
  4205c4:	cmp	w3, #0x0
  4205c8:	mov	w2, #0x8000                	// #32768
  4205cc:	csel	w1, w1, w2, ne  // ne = any
  4205d0:	b	4205d8 <nftw@plt+0x1da58>
  4205d4:	mov	w1, #0x20000               	// #131072
  4205d8:	orr	w0, w0, w1
  4205dc:	ret
  4205e0:	mov	w0, #0x0                   	// #0
  4205e4:	ret
  4205e8:	mov	w0, #0x0                   	// #0
  4205ec:	ret
  4205f0:	orr	x0, x9, x8
  4205f4:	cmp	x0, #0x0
  4205f8:	mov	w0, #0x0                   	// #0
  4205fc:	ccmp	w12, #0x0, #0x0, ne  // ne = any
  420600:	b.eq	420538 <nftw@plt+0x1d9b8>  // b.none
  420604:	mov	w1, #0x10                  	// #16
  420608:	cbnz	x14, 4205d8 <nftw@plt+0x1da58>
  42060c:	mov	w1, #0x20                  	// #32
  420610:	cbnz	x10, 4205d8 <nftw@plt+0x1da58>
  420614:	mov	w1, #0x40                  	// #64
  420618:	cbnz	x11, 4205d8 <nftw@plt+0x1da58>
  42061c:	mov	w1, #0x10000               	// #65536
  420620:	cbnz	x8, 4205d8 <nftw@plt+0x1da58>
  420624:	cbnz	x9, 4205d4 <nftw@plt+0x1da54>
  420628:	cbz	w4, 4205bc <nftw@plt+0x1da3c>
  42062c:	lsl	w1, w13, #24
  420630:	orr	w1, w1, #0x400000
  420634:	b	4205d8 <nftw@plt+0x1da58>
  420638:	mov	x10, x0
  42063c:	cbz	x2, 420760 <nftw@plt+0x1dbe0>
  420640:	add	x4, x1, x2
  420644:	mov	x9, x1
  420648:	mov	x11, #0x0                   	// #0
  42064c:	mov	x8, #0x0                   	// #0
  420650:	mov	x12, #0x0                   	// #0
  420654:	mov	x6, #0x1                   	// #1
  420658:	b	42066c <nftw@plt+0x1daec>
  42065c:	add	x12, x12, #0x1
  420660:	sub	x4, x4, #0x1
  420664:	cmp	x9, x4
  420668:	b.eq	4206cc <nftw@plt+0x1db4c>  // b.none
  42066c:	ldurb	w5, [x4, #-1]
  420670:	sub	w3, w5, #0x49
  420674:	and	w3, w3, #0xff
  420678:	cmp	w3, #0x2c
  42067c:	b.hi	42078c <nftw@plt+0x1dc0c>  // b.pmore
  420680:	lsl	x3, x6, x3
  420684:	tst	x3, #0x300000003
  420688:	b.ne	4206a4 <nftw@plt+0x1db24>  // b.any
  42068c:	tst	x3, #0x800000008
  420690:	b.ne	4206ac <nftw@plt+0x1db2c>  // b.any
  420694:	tst	x3, #0x100000001000
  420698:	b.ne	42065c <nftw@plt+0x1dadc>  // b.any
  42069c:	mov	w0, #0x0                   	// #0
  4206a0:	b	420790 <nftw@plt+0x1dc10>
  4206a4:	add	x11, x11, #0x1
  4206a8:	b	420660 <nftw@plt+0x1dae0>
  4206ac:	add	x8, x8, #0x1
  4206b0:	cmp	x8, #0x2
  4206b4:	b.ne	420660 <nftw@plt+0x1dae0>  // b.any
  4206b8:	ldrb	w0, [x4]
  4206bc:	cmp	w0, w5
  4206c0:	b.eq	420660 <nftw@plt+0x1dae0>  // b.none
  4206c4:	mov	w0, #0x0                   	// #0
  4206c8:	b	420790 <nftw@plt+0x1dc10>
  4206cc:	cmp	x8, #0x2
  4206d0:	ccmp	x12, #0x1, #0x2, ls  // ls = plast
  4206d4:	mov	w0, #0x0                   	// #0
  4206d8:	ccmp	x11, #0x1, #0x2, ls  // ls = plast
  4206dc:	b.hi	420790 <nftw@plt+0x1dc10>  // b.pmore
  4206e0:	cbz	x11, 420738 <nftw@plt+0x1dbb8>
  4206e4:	ldrb	w3, [x10, #1163]
  4206e8:	cbz	w3, 420790 <nftw@plt+0x1dc10>
  4206ec:	ldrb	w0, [x10, #1120]
  4206f0:	cbz	w0, 420750 <nftw@plt+0x1dbd0>
  4206f4:	ldr	w0, [x10, #1116]
  4206f8:	cmp	w0, #0xe
  4206fc:	b.le	420758 <nftw@plt+0x1dbd8>
  420700:	ldrb	w0, [x1]
  420704:	mov	w3, #0x2000                	// #8192
  420708:	cmp	w0, #0x69
  42070c:	b.ne	42073c <nftw@plt+0x1dbbc>  // b.any
  420710:	mov	w0, #0x0                   	// #0
  420714:	cmp	x2, #0x1
  420718:	b.eq	420790 <nftw@plt+0x1dc10>  // b.none
  42071c:	cmp	x2, #0x2
  420720:	b.ne	42073c <nftw@plt+0x1dbbc>  // b.any
  420724:	ldrb	w0, [x1, #1]
  420728:	cmp	w0, #0x6c
  42072c:	b.ne	42073c <nftw@plt+0x1dbbc>  // b.any
  420730:	mov	w0, #0x0                   	// #0
  420734:	b	420790 <nftw@plt+0x1dc10>
  420738:	mov	w3, #0x0                   	// #0
  42073c:	mov	x2, x8
  420740:	cmp	x12, #0x0
  420744:	mov	w0, #0x1000                	// #4096
  420748:	csel	w0, w0, wzr, ne  // ne = any
  42074c:	b	420768 <nftw@plt+0x1dbe8>
  420750:	mov	w3, #0x2000                	// #8192
  420754:	b	42073c <nftw@plt+0x1dbbc>
  420758:	mov	w3, #0x2000                	// #8192
  42075c:	b	42073c <nftw@plt+0x1dbbc>
  420760:	mov	w3, #0x0                   	// #0
  420764:	mov	w0, #0x0                   	// #0
  420768:	orr	w0, w0, w3
  42076c:	mov	w1, #0x10                  	// #16
  420770:	cbz	x2, 420784 <nftw@plt+0x1dc04>
  420774:	cmp	x2, #0x1
  420778:	mov	w1, #0x20                  	// #32
  42077c:	mov	w2, #0x40                  	// #64
  420780:	csel	w1, w1, w2, eq  // eq = none
  420784:	orr	w0, w0, w1
  420788:	b	420790 <nftw@plt+0x1dc10>
  42078c:	mov	w0, #0x0                   	// #0
  420790:	ret
  420794:	ldr	x2, [x0]
  420798:	ldr	x4, [x0, #8]
  42079c:	cmp	x1, #0x40
  4207a0:	b.ls	4207d8 <nftw@plt+0x1dc58>  // b.plast
  4207a4:	sub	x1, x1, #0x40
  4207a8:	mov	x3, #0xffffffffffffffff    	// #-1
  4207ac:	lsl	x3, x3, x1
  4207b0:	bic	x3, x2, x3
  4207b4:	cmp	x1, #0x40
  4207b8:	csel	x2, x3, x2, cc  // cc = lo, ul, last
  4207bc:	str	x2, [x0]
  4207c0:	str	x4, [x0, #8]
  4207c4:	ldp	x2, x3, [x0]
  4207c8:	stp	x2, x3, [x8]
  4207cc:	ldr	x0, [x0, #16]
  4207d0:	str	x0, [x8, #16]
  4207d4:	ret
  4207d8:	mov	x2, #0x0                   	// #0
  4207dc:	cmp	x1, #0x3f
  4207e0:	b.hi	4207bc <nftw@plt+0x1dc3c>  // b.pmore
  4207e4:	mov	x2, #0xffffffffffffffff    	// #-1
  4207e8:	lsl	x1, x2, x1
  4207ec:	bic	x4, x4, x1
  4207f0:	mov	x2, #0x0                   	// #0
  4207f4:	b	4207bc <nftw@plt+0x1dc3c>
  4207f8:	cmp	x1, #0x40
  4207fc:	b.hi	420818 <nftw@plt+0x1dc98>  // b.pmore
  420800:	sub	w1, w1, #0x1
  420804:	ldr	x0, [x0, #8]
  420808:	lsr	x0, x0, x1
  42080c:	eor	x0, x0, #0x1
  420810:	and	w0, w0, #0x1
  420814:	ret
  420818:	sub	w1, w1, #0x41
  42081c:	ldr	x0, [x0]
  420820:	lsr	x0, x0, x1
  420824:	eor	x0, x0, #0x1
  420828:	and	w0, w0, #0x1
  42082c:	b	420814 <nftw@plt+0x1dc94>
  420830:	stp	x29, x30, [sp, #-112]!
  420834:	mov	x29, sp
  420838:	stp	x19, x20, [sp, #16]
  42083c:	stp	x21, x22, [sp, #32]
  420840:	mov	x20, x8
  420844:	mov	x19, x0
  420848:	ldr	x21, [x0]
  42084c:	ldr	x22, [x0, #8]
  420850:	neg	x0, x21
  420854:	negs	x2, x22
  420858:	csinv	x0, x0, x21, eq  // eq = none
  42085c:	str	x0, [x19]
  420860:	str	x2, [x19, #8]
  420864:	ldp	x2, x3, [x19]
  420868:	stp	x2, x3, [sp, #48]
  42086c:	ldr	x0, [x19, #16]
  420870:	str	x0, [sp, #64]
  420874:	add	x8, sp, #0x50
  420878:	add	x0, sp, #0x30
  42087c:	bl	420794 <nftw@plt+0x1dc14>
  420880:	ldr	x1, [sp, #80]
  420884:	str	x1, [x19]
  420888:	ldr	x0, [sp, #88]
  42088c:	str	x0, [x19, #8]
  420890:	ldr	x0, [sp, #96]
  420894:	str	x0, [x19, #16]
  420898:	ldr	x3, [x19, #8]
  42089c:	cmp	x22, x3
  4208a0:	ccmp	x21, x1, #0x0, eq  // eq = none
  4208a4:	cset	w2, eq  // eq = none
  4208a8:	eor	w0, w0, #0x1
  4208ac:	ands	w0, w2, w0
  4208b0:	b.ne	4208d8 <nftw@plt+0x1dd58>  // b.any
  4208b4:	strb	w0, [x19, #17]
  4208b8:	ldp	x0, x1, [x19]
  4208bc:	stp	x0, x1, [x20]
  4208c0:	ldr	x0, [x19, #16]
  4208c4:	str	x0, [x20, #16]
  4208c8:	ldp	x19, x20, [sp, #16]
  4208cc:	ldp	x21, x22, [sp, #32]
  4208d0:	ldp	x29, x30, [sp], #112
  4208d4:	ret
  4208d8:	orr	x1, x1, x3
  4208dc:	cmp	x1, #0x0
  4208e0:	cset	w0, ne  // ne = any
  4208e4:	b	4208b4 <nftw@plt+0x1dd34>
  4208e8:	stp	x29, x30, [sp, #-128]!
  4208ec:	mov	x29, sp
  4208f0:	stp	x19, x20, [sp, #16]
  4208f4:	stp	x21, x22, [sp, #32]
  4208f8:	stp	x23, x24, [sp, #48]
  4208fc:	mov	x22, x8
  420900:	mov	x19, x0
  420904:	mov	x21, x1
  420908:	mov	x20, x2
  42090c:	ldr	x24, [x0]
  420910:	ldr	x23, [x0, #8]
  420914:	ldp	x2, x3, [x0]
  420918:	stp	x2, x3, [sp, #96]
  42091c:	ldr	x0, [x0, #16]
  420920:	str	x0, [sp, #112]
  420924:	add	x0, sp, #0x60
  420928:	bl	4207f8 <nftw@plt+0x1dc78>
  42092c:	and	w0, w0, #0xff
  420930:	ldrb	w1, [x19, #16]
  420934:	orr	w0, w0, w1
  420938:	eor	w0, w0, #0x1
  42093c:	and	x0, x0, #0xff
  420940:	neg	x0, x0
  420944:	cmp	x21, x20
  420948:	b.ls	4209b4 <nftw@plt+0x1de34>  // b.plast
  42094c:	cmp	x21, #0x3f
  420950:	b.hi	42099c <nftw@plt+0x1de1c>  // b.pmore
  420954:	lsl	x1, x0, x21
  420958:	orr	x23, x23, x1
  42095c:	mov	x24, x0
  420960:	cmp	x20, #0x3f
  420964:	b.ls	420974 <nftw@plt+0x1ddf4>  // b.plast
  420968:	sub	x20, x20, #0x40
  42096c:	mov	x23, x24
  420970:	mov	x24, x0
  420974:	cbz	x20, 420a14 <nftw@plt+0x1de94>
  420978:	mov	w1, #0x40                  	// #64
  42097c:	sub	w1, w1, w20
  420980:	lsr	x23, x23, x20
  420984:	lsl	x2, x24, x1
  420988:	orr	x23, x23, x2
  42098c:	lsr	x20, x24, x20
  420990:	lsl	x0, x0, x1
  420994:	orr	x0, x20, x0
  420998:	b	4209b8 <nftw@plt+0x1de38>
  42099c:	sub	w1, w21, #0x40
  4209a0:	lsl	x1, x0, x1
  4209a4:	orr	x1, x24, x1
  4209a8:	cmp	x21, #0x80
  4209ac:	csel	x24, x1, x24, cc  // cc = lo, ul, last
  4209b0:	b	420960 <nftw@plt+0x1dde0>
  4209b4:	mov	x23, x0
  4209b8:	str	x0, [x19]
  4209bc:	str	x23, [x19, #8]
  4209c0:	ldp	x0, x1, [x19]
  4209c4:	stp	x0, x1, [sp, #64]
  4209c8:	ldr	x0, [x19, #16]
  4209cc:	str	x0, [sp, #80]
  4209d0:	add	x8, sp, #0x60
  4209d4:	mov	x1, x21
  4209d8:	add	x0, sp, #0x40
  4209dc:	bl	420794 <nftw@plt+0x1dc14>
  4209e0:	ldp	x0, x1, [sp, #96]
  4209e4:	stp	x0, x1, [x19]
  4209e8:	ldr	x2, [sp, #112]
  4209ec:	str	x2, [x19, #16]
  4209f0:	strb	wzr, [x19, #17]
  4209f4:	stp	x0, x1, [x22]
  4209f8:	ldr	x0, [x19, #16]
  4209fc:	str	x0, [x22, #16]
  420a00:	ldp	x19, x20, [sp, #16]
  420a04:	ldp	x21, x22, [sp, #32]
  420a08:	ldp	x23, x24, [sp, #48]
  420a0c:	ldp	x29, x30, [sp], #128
  420a10:	ret
  420a14:	mov	x0, x24
  420a18:	b	4209b8 <nftw@plt+0x1de38>
  420a1c:	stp	x29, x30, [sp, #-192]!
  420a20:	mov	x29, sp
  420a24:	stp	x19, x20, [sp, #16]
  420a28:	stp	x21, x22, [sp, #32]
  420a2c:	stp	x23, x24, [sp, #48]
  420a30:	stp	x25, x26, [sp, #64]
  420a34:	str	x27, [sp, #80]
  420a38:	mov	x21, x8
  420a3c:	mov	x19, x0
  420a40:	ldr	x25, [x0]
  420a44:	ldr	x26, [x0, #8]
  420a48:	cmp	x2, x1
  420a4c:	b.cc	420aac <nftw@plt+0x1df2c>  // b.lo, b.ul, b.last
  420a50:	ldrb	w23, [x0, #16]
  420a54:	mov	w0, #0x0                   	// #0
  420a58:	cbnz	w23, 420a68 <nftw@plt+0x1dee8>
  420a5c:	orr	x25, x25, x26
  420a60:	cmp	x25, #0x0
  420a64:	cset	w0, ne  // ne = any
  420a68:	mov	x27, #0x0                   	// #0
  420a6c:	mov	x24, #0x0                   	// #0
  420a70:	str	x24, [x19]
  420a74:	str	x27, [x19, #8]
  420a78:	strb	w23, [x19, #16]
  420a7c:	strb	w0, [x19, #17]
  420a80:	ldp	x0, x1, [x19]
  420a84:	stp	x0, x1, [x21]
  420a88:	ldr	x0, [x19, #16]
  420a8c:	str	x0, [x21, #16]
  420a90:	ldp	x19, x20, [sp, #16]
  420a94:	ldp	x21, x22, [sp, #32]
  420a98:	ldp	x23, x24, [sp, #48]
  420a9c:	ldp	x25, x26, [sp, #64]
  420aa0:	ldr	x27, [sp, #80]
  420aa4:	ldp	x29, x30, [sp], #192
  420aa8:	ret
  420aac:	mov	x22, x1
  420ab0:	mov	x20, x2
  420ab4:	cmp	x2, #0x3f
  420ab8:	b.ls	420acc <nftw@plt+0x1df4c>  // b.plast
  420abc:	sub	x2, x2, #0x40
  420ac0:	mov	x0, x26
  420ac4:	mov	x1, #0x0                   	// #0
  420ac8:	b	420ad4 <nftw@plt+0x1df54>
  420acc:	mov	x1, x26
  420ad0:	mov	x0, x25
  420ad4:	cbz	x2, 420aec <nftw@plt+0x1df6c>
  420ad8:	neg	w3, w2
  420adc:	lsr	x3, x1, x3
  420ae0:	lsl	x0, x0, x2
  420ae4:	orr	x0, x3, x0
  420ae8:	lsl	x1, x1, x2
  420aec:	str	x0, [x19]
  420af0:	str	x1, [x19, #8]
  420af4:	ldp	x0, x1, [x19]
  420af8:	stp	x0, x1, [sp, #96]
  420afc:	ldr	x0, [x19, #16]
  420b00:	str	x0, [sp, #112]
  420b04:	add	x8, sp, #0x80
  420b08:	mov	x1, x22
  420b0c:	add	x0, sp, #0x60
  420b10:	bl	420794 <nftw@plt+0x1dc14>
  420b14:	ldr	x24, [sp, #128]
  420b18:	str	x24, [x19]
  420b1c:	ldr	x0, [sp, #136]
  420b20:	str	x0, [x19, #8]
  420b24:	ldr	x23, [sp, #144]
  420b28:	str	x23, [x19, #16]
  420b2c:	mov	x27, x0
  420b30:	mov	w0, #0x0                   	// #0
  420b34:	ands	w23, w23, #0xff
  420b38:	b.ne	420a70 <nftw@plt+0x1def0>  // b.any
  420b3c:	ldp	x0, x1, [x19]
  420b40:	stp	x0, x1, [sp, #96]
  420b44:	ldr	x0, [x19, #16]
  420b48:	str	x0, [sp, #112]
  420b4c:	add	x8, sp, #0xa8
  420b50:	mov	x2, x20
  420b54:	mov	x1, x22
  420b58:	add	x0, sp, #0x60
  420b5c:	bl	4208e8 <nftw@plt+0x1dd68>
  420b60:	mov	w0, #0x1                   	// #1
  420b64:	ldr	x1, [sp, #176]
  420b68:	cmp	x1, x26
  420b6c:	b.ne	420a70 <nftw@plt+0x1def0>  // b.any
  420b70:	ldr	x0, [sp, #168]
  420b74:	cmp	x0, x25
  420b78:	cset	w0, ne  // ne = any
  420b7c:	b	420a70 <nftw@plt+0x1def0>
  420b80:	and	x2, x0, #0xffffffff
  420b84:	and	x3, x1, #0xffffffff
  420b88:	mul	x5, x2, x3
  420b8c:	lsr	x0, x0, #32
  420b90:	lsr	x1, x1, #32
  420b94:	mul	x4, x0, x1
  420b98:	mul	x1, x2, x1
  420b9c:	mul	x0, x3, x0
  420ba0:	add	x2, x5, x1, lsl #32
  420ba4:	cmp	x5, x2
  420ba8:	cinc	x3, x4, hi  // hi = pmore
  420bac:	str	x3, [x8]
  420bb0:	add	x3, x2, x0, lsl #32
  420bb4:	str	x3, [x8, #8]
  420bb8:	cmp	x2, x3
  420bbc:	b.ls	420bcc <nftw@plt+0x1e04c>  // b.plast
  420bc0:	ldr	x2, [x8]
  420bc4:	add	x2, x2, #0x1
  420bc8:	str	x2, [x8]
  420bcc:	lsr	x0, x0, #32
  420bd0:	add	x1, x0, x1, lsr #32
  420bd4:	ldr	x0, [x8]
  420bd8:	add	x1, x0, x1
  420bdc:	str	x1, [x8]
  420be0:	mov	w0, #0x1                   	// #1
  420be4:	strb	w0, [x8, #16]
  420be8:	strb	wzr, [x8, #17]
  420bec:	ret
  420bf0:	stp	x29, x30, [sp, #-176]!
  420bf4:	mov	x29, sp
  420bf8:	stp	x19, x20, [sp, #16]
  420bfc:	stp	x21, x22, [sp, #32]
  420c00:	stp	x23, x24, [sp, #48]
  420c04:	stp	x25, x26, [sp, #64]
  420c08:	mov	x22, x8
  420c0c:	mov	x19, x1
  420c10:	mov	x20, x2
  420c14:	mov	w21, w3
  420c18:	ldr	x1, [x1]
  420c1c:	ldr	x2, [x19, #8]
  420c20:	ldrb	w3, [x19, #16]
  420c24:	ldr	x25, [x20]
  420c28:	ldr	x24, [x20, #8]
  420c2c:	ldrb	w23, [x20, #16]
  420c30:	ldr	x26, [x0, #1208]
  420c34:	cmp	w21, #0x5
  420c38:	b.eq	420e20 <nftw@plt+0x1e2a0>  // b.none
  420c3c:	b.hi	420d04 <nftw@plt+0x1e184>  // b.pmore
  420c40:	cmp	w21, #0x4
  420c44:	b.ne	420f34 <nftw@plt+0x1e3b4>  // b.any
  420c48:	adds	x24, x2, x24
  420c4c:	adc	x25, x25, x1
  420c50:	cmp	w3, #0x0
  420c54:	csinc	w23, w23, wzr, eq  // eq = none
  420c58:	str	x25, [sp, #152]
  420c5c:	str	x24, [sp, #160]
  420c60:	strb	w23, [sp, #168]
  420c64:	strb	wzr, [sp, #169]
  420c68:	ldp	x0, x1, [sp, #152]
  420c6c:	stp	x0, x1, [sp, #112]
  420c70:	ldr	x0, [sp, #168]
  420c74:	str	x0, [sp, #128]
  420c78:	add	x8, sp, #0x50
  420c7c:	mov	x1, x26
  420c80:	add	x0, sp, #0x70
  420c84:	bl	420794 <nftw@plt+0x1dc14>
  420c88:	ldp	x0, x1, [sp, #80]
  420c8c:	stp	x0, x1, [sp, #152]
  420c90:	ldr	x0, [sp, #96]
  420c94:	str	x0, [sp, #168]
  420c98:	ubfx	w1, w0, #8, #8
  420c9c:	ands	w21, w0, #0xff
  420ca0:	b.ne	420cec <nftw@plt+0x1e16c>  // b.any
  420ca4:	ldp	x0, x1, [x19]
  420ca8:	stp	x0, x1, [sp, #80]
  420cac:	ldr	x0, [x19, #16]
  420cb0:	str	x0, [sp, #96]
  420cb4:	mov	x1, x26
  420cb8:	add	x0, sp, #0x50
  420cbc:	bl	4207f8 <nftw@plt+0x1dc78>
  420cc0:	and	w19, w0, #0xff
  420cc4:	ldp	x0, x1, [x20]
  420cc8:	stp	x0, x1, [sp, #80]
  420ccc:	ldr	x0, [x20, #16]
  420cd0:	str	x0, [sp, #96]
  420cd4:	mov	x1, x26
  420cd8:	add	x0, sp, #0x50
  420cdc:	bl	4207f8 <nftw@plt+0x1dc78>
  420ce0:	cmp	w19, w0, uxtb
  420ce4:	b.eq	420f0c <nftw@plt+0x1e38c>  // b.none
  420ce8:	mov	w1, w21
  420cec:	strb	w1, [sp, #169]
  420cf0:	ldp	x0, x1, [sp, #152]
  420cf4:	stp	x0, x1, [x22]
  420cf8:	ldr	x0, [sp, #168]
  420cfc:	str	x0, [x22, #16]
  420d00:	b	420f88 <nftw@plt+0x1e408>
  420d04:	sub	w1, w21, #0xc
  420d08:	cmp	w1, #0x1
  420d0c:	b.hi	420f34 <nftw@plt+0x1e3b4>  // b.pmore
  420d10:	cbnz	w23, 420d80 <nftw@plt+0x1e200>
  420d14:	ldp	x0, x1, [x20]
  420d18:	stp	x0, x1, [sp, #112]
  420d1c:	ldr	x0, [x20, #16]
  420d20:	str	x0, [sp, #128]
  420d24:	mov	x1, x26
  420d28:	add	x0, sp, #0x70
  420d2c:	bl	4207f8 <nftw@plt+0x1dc78>
  420d30:	and	w0, w0, #0xff
  420d34:	cbnz	w0, 420d80 <nftw@plt+0x1e200>
  420d38:	cmp	w21, #0xd
  420d3c:	cset	w21, ne  // ne = any
  420d40:	add	w21, w21, #0xc
  420d44:	ldp	x0, x1, [x20]
  420d48:	stp	x0, x1, [sp, #80]
  420d4c:	ldr	x0, [x20, #16]
  420d50:	str	x0, [sp, #96]
  420d54:	add	x8, sp, #0x70
  420d58:	mov	x1, x26
  420d5c:	add	x0, sp, #0x50
  420d60:	bl	420830 <nftw@plt+0x1dcb0>
  420d64:	ldr	x25, [sp, #112]
  420d68:	str	x25, [x20]
  420d6c:	ldr	x0, [sp, #120]
  420d70:	str	x0, [x20, #8]
  420d74:	ldr	x0, [sp, #128]
  420d78:	str	x0, [x20, #16]
  420d7c:	ldr	x24, [x20, #8]
  420d80:	cmp	x25, #0x0
  420d84:	csinv	x24, x24, xzr, eq  // eq = none
  420d88:	cmp	w21, #0xd
  420d8c:	b.eq	420dd8 <nftw@plt+0x1e258>  // b.none
  420d90:	ldp	x0, x1, [x19]
  420d94:	stp	x0, x1, [sp, #112]
  420d98:	ldr	x0, [x19, #16]
  420d9c:	str	x0, [sp, #128]
  420da0:	add	x8, sp, #0x50
  420da4:	mov	x2, x24
  420da8:	mov	x1, x26
  420dac:	add	x0, sp, #0x70
  420db0:	bl	4208e8 <nftw@plt+0x1dd68>
  420db4:	ldr	x25, [sp, #80]
  420db8:	str	x25, [x19]
  420dbc:	ldr	x0, [sp, #88]
  420dc0:	str	x0, [x19, #8]
  420dc4:	ldr	x23, [sp, #96]
  420dc8:	str	x23, [x19, #16]
  420dcc:	mov	x24, x0
  420dd0:	and	w23, w23, #0xff
  420dd4:	b	420f6c <nftw@plt+0x1e3ec>
  420dd8:	ldp	x0, x1, [x19]
  420ddc:	stp	x0, x1, [sp, #112]
  420de0:	ldr	x0, [x19, #16]
  420de4:	str	x0, [sp, #128]
  420de8:	add	x8, sp, #0x50
  420dec:	mov	x2, x24
  420df0:	mov	x1, x26
  420df4:	add	x0, sp, #0x70
  420df8:	bl	420a1c <nftw@plt+0x1de9c>
  420dfc:	ldr	x25, [sp, #80]
  420e00:	str	x25, [x19]
  420e04:	ldr	x0, [sp, #88]
  420e08:	str	x0, [x19, #8]
  420e0c:	ldr	x23, [sp, #96]
  420e10:	str	x23, [x19, #16]
  420e14:	mov	x24, x0
  420e18:	and	w23, w23, #0xff
  420e1c:	b	420f6c <nftw@plt+0x1e3ec>
  420e20:	sub	x24, x2, x24
  420e24:	sub	x25, x1, x25
  420e28:	cmp	x24, x2
  420e2c:	cset	x0, hi  // hi = pmore
  420e30:	sub	x25, x25, x0
  420e34:	cmp	w3, #0x0
  420e38:	csinc	w23, w23, wzr, eq  // eq = none
  420e3c:	str	x25, [sp, #152]
  420e40:	str	x24, [sp, #160]
  420e44:	strb	w23, [sp, #168]
  420e48:	strb	wzr, [sp, #169]
  420e4c:	ldp	x0, x1, [sp, #152]
  420e50:	stp	x0, x1, [sp, #112]
  420e54:	ldr	x0, [sp, #168]
  420e58:	str	x0, [sp, #128]
  420e5c:	add	x8, sp, #0x50
  420e60:	mov	x1, x26
  420e64:	add	x0, sp, #0x70
  420e68:	bl	420794 <nftw@plt+0x1dc14>
  420e6c:	ldp	x0, x1, [sp, #80]
  420e70:	stp	x0, x1, [sp, #152]
  420e74:	ldr	x0, [sp, #96]
  420e78:	str	x0, [sp, #168]
  420e7c:	ubfx	w1, w0, #8, #8
  420e80:	ands	w21, w0, #0xff
  420e84:	b.ne	420ef4 <nftw@plt+0x1e374>  // b.any
  420e88:	ldp	x0, x1, [x19]
  420e8c:	stp	x0, x1, [sp, #80]
  420e90:	ldr	x0, [x19, #16]
  420e94:	str	x0, [sp, #96]
  420e98:	mov	x1, x26
  420e9c:	add	x0, sp, #0x50
  420ea0:	bl	4207f8 <nftw@plt+0x1dc78>
  420ea4:	and	w19, w0, #0xff
  420ea8:	ldp	x0, x1, [x20]
  420eac:	stp	x0, x1, [sp, #80]
  420eb0:	ldr	x0, [x20, #16]
  420eb4:	str	x0, [sp, #96]
  420eb8:	mov	x1, x26
  420ebc:	add	x0, sp, #0x50
  420ec0:	bl	4207f8 <nftw@plt+0x1dc78>
  420ec4:	cmp	w19, w0, uxtb
  420ec8:	b.eq	420ef0 <nftw@plt+0x1e370>  // b.none
  420ecc:	ldp	x0, x1, [sp, #152]
  420ed0:	stp	x0, x1, [sp, #80]
  420ed4:	ldr	x0, [sp, #168]
  420ed8:	str	x0, [sp, #96]
  420edc:	mov	x1, x26
  420ee0:	add	x0, sp, #0x50
  420ee4:	bl	4207f8 <nftw@plt+0x1dc78>
  420ee8:	cmp	w19, w0, uxtb
  420eec:	cset	w21, ne  // ne = any
  420ef0:	mov	w1, w21
  420ef4:	strb	w1, [sp, #169]
  420ef8:	ldp	x0, x1, [sp, #152]
  420efc:	stp	x0, x1, [x22]
  420f00:	ldr	x0, [sp, #168]
  420f04:	str	x0, [x22, #16]
  420f08:	b	420f88 <nftw@plt+0x1e408>
  420f0c:	ldp	x0, x1, [sp, #152]
  420f10:	stp	x0, x1, [sp, #80]
  420f14:	ldr	x0, [sp, #168]
  420f18:	str	x0, [sp, #96]
  420f1c:	mov	x1, x26
  420f20:	add	x0, sp, #0x50
  420f24:	bl	4207f8 <nftw@plt+0x1dc78>
  420f28:	cmp	w19, w0, uxtb
  420f2c:	cset	w21, ne  // ne = any
  420f30:	b	420ce8 <nftw@plt+0x1e168>
  420f34:	ldrb	w1, [x0, #1154]
  420f38:	cbz	w1, 420f5c <nftw@plt+0x1e3dc>
  420f3c:	ldrb	w1, [x0, #1152]
  420f40:	cbz	w1, 420f4c <nftw@plt+0x1e3cc>
  420f44:	ldr	w1, [x0, #28]
  420f48:	cbnz	w1, 420f5c <nftw@plt+0x1e3dc>
  420f4c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  420f50:	add	x2, x2, #0xf70
  420f54:	mov	w1, #0x15                  	// #21
  420f58:	bl	41fa84 <nftw@plt+0x1cf04>
  420f5c:	ldp	x0, x1, [x20]
  420f60:	stp	x0, x1, [x19]
  420f64:	ldr	x0, [x20, #16]
  420f68:	str	x0, [x19, #16]
  420f6c:	str	x25, [x19]
  420f70:	str	x24, [x19, #8]
  420f74:	strb	w23, [x19, #16]
  420f78:	ldp	x0, x1, [x19]
  420f7c:	stp	x0, x1, [x22]
  420f80:	ldr	x0, [x19, #16]
  420f84:	str	x0, [x22, #16]
  420f88:	ldp	x19, x20, [sp, #16]
  420f8c:	ldp	x21, x22, [sp, #32]
  420f90:	ldp	x23, x24, [sp, #48]
  420f94:	ldp	x25, x26, [sp, #64]
  420f98:	ldp	x29, x30, [sp], #176
  420f9c:	ret
  420fa0:	stp	x29, x30, [sp, #-80]!
  420fa4:	mov	x29, sp
  420fa8:	stp	x19, x20, [sp, #16]
  420fac:	stp	x21, x22, [sp, #32]
  420fb0:	stp	x23, x24, [sp, #48]
  420fb4:	str	x25, [sp, #64]
  420fb8:	mov	x21, x8
  420fbc:	mov	x19, x0
  420fc0:	mov	w23, w1
  420fc4:	strb	wzr, [x8, #16]
  420fc8:	str	xzr, [x8]
  420fcc:	strb	wzr, [x8, #17]
  420fd0:	str	xzr, [x8, #8]
  420fd4:	ldrb	w2, [x0, #26]
  420fd8:	add	w2, w2, #0x1
  420fdc:	strb	w2, [x0, #26]
  420fe0:	bl	431a1c <nftw@plt+0x2ee9c>
  420fe4:	mov	x20, x0
  420fe8:	ldrb	w0, [x0, #4]
  420fec:	mov	w25, #0x0                   	// #0
  420ff0:	cmp	w0, #0x14
  420ff4:	b.eq	4210b0 <nftw@plt+0x1e530>  // b.none
  420ff8:	ldrb	w0, [x20, #4]
  420ffc:	cmp	w0, #0x44
  421000:	cset	w24, eq  // eq = none
  421004:	cmp	w0, #0x3e
  421008:	ccmp	w24, #0x0, #0x0, ne  // ne = any
  42100c:	b.eq	4210c4 <nftw@plt+0x1e544>  // b.none
  421010:	ldr	w0, [x20, #8]
  421014:	sub	w0, w0, #0x1
  421018:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42101c:	mov	x22, x0
  421020:	ldr	w2, [x20, #8]
  421024:	ldr	x1, [x20, #16]
  421028:	sub	w2, w2, #0x2
  42102c:	add	x1, x1, #0x1
  421030:	bl	402490 <memcpy@plt>
  421034:	ldr	w0, [x20, #8]
  421038:	sub	w0, w0, #0x2
  42103c:	strb	wzr, [x22, w0, uxtw]
  421040:	ldr	x20, [x20, #8]
  421044:	mov	w3, w23
  421048:	mov	w2, w24
  42104c:	mov	x1, x22
  421050:	mov	x0, x19
  421054:	bl	4260fc <nftw@plt+0x2357c>
  421058:	and	w0, w0, #0xff
  42105c:	cbz	w0, 421068 <nftw@plt+0x1e4e8>
  421060:	mov	x0, #0x1                   	// #1
  421064:	str	x0, [x21, #8]
  421068:	mov	x0, x22
  42106c:	bl	402910 <free@plt>
  421070:	cbz	w25, 421084 <nftw@plt+0x1e504>
  421074:	ldr	x0, [x19, #448]
  421078:	ldurb	w0, [x0, #-20]
  42107c:	cmp	w0, #0x16
  421080:	b.ne	421108 <nftw@plt+0x1e588>  // b.any
  421084:	cbz	x20, 42108c <nftw@plt+0x1e50c>
  421088:	str	x20, [x19, #432]
  42108c:	ldrb	w0, [x19, #26]
  421090:	sub	w0, w0, #0x1
  421094:	strb	w0, [x19, #26]
  421098:	ldp	x19, x20, [sp, #16]
  42109c:	ldp	x21, x22, [sp, #32]
  4210a0:	ldp	x23, x24, [sp, #48]
  4210a4:	ldr	x25, [sp, #64]
  4210a8:	ldp	x29, x30, [sp], #80
  4210ac:	ret
  4210b0:	mov	x0, x19
  4210b4:	bl	431a1c <nftw@plt+0x2ee9c>
  4210b8:	mov	x20, x0
  4210bc:	mov	w25, #0x1                   	// #1
  4210c0:	b	420ff8 <nftw@plt+0x1e478>
  4210c4:	cmp	w0, #0x3
  4210c8:	b.eq	4210ec <nftw@plt+0x1e56c>  // b.none
  4210cc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  4210d0:	add	x2, x2, #0xf98
  4210d4:	mov	w1, #0x3                   	// #3
  4210d8:	mov	x0, x19
  4210dc:	bl	41f990 <nftw@plt+0x1ce10>
  4210e0:	cbz	w25, 42108c <nftw@plt+0x1e50c>
  4210e4:	mov	x20, #0x0                   	// #0
  4210e8:	b	421074 <nftw@plt+0x1e4f4>
  4210ec:	mov	x0, x19
  4210f0:	bl	41f774 <nftw@plt+0x1cbf4>
  4210f4:	mov	x22, x0
  4210f8:	mov	w24, #0x1                   	// #1
  4210fc:	mov	x20, #0x0                   	// #0
  421100:	cbnz	x0, 421044 <nftw@plt+0x1e4c4>
  421104:	b	4210e0 <nftw@plt+0x1e560>
  421108:	mov	x0, x19
  42110c:	bl	431a1c <nftw@plt+0x2ee9c>
  421110:	ldrb	w0, [x0, #4]
  421114:	cmp	w0, #0x15
  421118:	b.eq	421084 <nftw@plt+0x1e504>  // b.none
  42111c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x199fc>
  421120:	add	x2, x2, #0xfd0
  421124:	mov	w1, #0x3                   	// #3
  421128:	mov	x0, x19
  42112c:	bl	41f990 <nftw@plt+0x1ce10>
  421130:	b	421084 <nftw@plt+0x1e504>
  421134:	stp	x29, x30, [sp, #-16]!
  421138:	mov	x29, sp
  42113c:	bl	41ff80 <nftw@plt+0x1d400>
  421140:	ldp	x29, x30, [sp], #16
  421144:	ret
  421148:	stp	x29, x30, [sp, #-16]!
  42114c:	mov	x29, sp
  421150:	bl	420638 <nftw@plt+0x1dab8>
  421154:	ldp	x29, x30, [sp], #16
  421158:	ret
  42115c:	cmp	w0, #0x4a
  421160:	b.eq	42118c <nftw@plt+0x1e60c>  // b.none
  421164:	cmp	w0, #0x4b
  421168:	b.eq	421194 <nftw@plt+0x1e614>  // b.none
  42116c:	cmp	w0, #0x4c
  421170:	b.eq	42119c <nftw@plt+0x1e61c>  // b.none
  421174:	cmp	w0, #0x4d
  421178:	b.eq	4211a4 <nftw@plt+0x1e624>  // b.none
  42117c:	cmp	w0, #0x4e
  421180:	mov	w1, #0x42                  	// #66
  421184:	csel	w0, w0, w1, ne  // ne = any
  421188:	ret
  42118c:	mov	w0, #0x3e                  	// #62
  421190:	b	421188 <nftw@plt+0x1e608>
  421194:	mov	w0, #0x3f                  	// #63
  421198:	b	421188 <nftw@plt+0x1e608>
  42119c:	mov	w0, #0x40                  	// #64
  4211a0:	b	421188 <nftw@plt+0x1e608>
  4211a4:	mov	w0, #0x41                  	// #65
  4211a8:	b	421188 <nftw@plt+0x1e608>
  4211ac:	cmp	w0, #0x3e
  4211b0:	b.eq	4211dc <nftw@plt+0x1e65c>  // b.none
  4211b4:	cmp	w0, #0x3f
  4211b8:	b.eq	4211e4 <nftw@plt+0x1e664>  // b.none
  4211bc:	cmp	w0, #0x40
  4211c0:	b.eq	4211ec <nftw@plt+0x1e66c>  // b.none
  4211c4:	cmp	w0, #0x41
  4211c8:	b.eq	4211f4 <nftw@plt+0x1e674>  // b.none
  4211cc:	cmp	w0, #0x42
  4211d0:	mov	w1, #0x4e                  	// #78
  4211d4:	csel	w0, w0, w1, ne  // ne = any
  4211d8:	ret
  4211dc:	mov	w0, #0x4a                  	// #74
  4211e0:	b	4211d8 <nftw@plt+0x1e658>
  4211e4:	mov	w0, #0x4b                  	// #75
  4211e8:	b	4211d8 <nftw@plt+0x1e658>
  4211ec:	mov	w0, #0x4c                  	// #76
  4211f0:	b	4211d8 <nftw@plt+0x1e658>
  4211f4:	mov	w0, #0x4d                  	// #77
  4211f8:	b	4211d8 <nftw@plt+0x1e658>
  4211fc:	cmp	w0, #0x45
  421200:	b.eq	42122c <nftw@plt+0x1e6ac>  // b.none
  421204:	cmp	w0, #0x46
  421208:	b.eq	421234 <nftw@plt+0x1e6b4>  // b.none
  42120c:	cmp	w0, #0x47
  421210:	b.eq	42123c <nftw@plt+0x1e6bc>  // b.none
  421214:	cmp	w0, #0x48
  421218:	b.eq	421244 <nftw@plt+0x1e6c4>  // b.none
  42121c:	cmp	w0, #0x49
  421220:	mov	w1, #0x3c                  	// #60
  421224:	csel	w0, w0, w1, ne  // ne = any
  421228:	ret
  42122c:	mov	w0, #0x38                  	// #56
  421230:	b	421228 <nftw@plt+0x1e6a8>
  421234:	mov	w0, #0x39                  	// #57
  421238:	b	421228 <nftw@plt+0x1e6a8>
  42123c:	mov	w0, #0x3a                  	// #58
  421240:	b	421228 <nftw@plt+0x1e6a8>
  421244:	mov	w0, #0x3b                  	// #59
  421248:	b	421228 <nftw@plt+0x1e6a8>
  42124c:	cmp	w0, #0x38
  421250:	b.eq	42127c <nftw@plt+0x1e6fc>  // b.none
  421254:	cmp	w0, #0x39
  421258:	b.eq	421284 <nftw@plt+0x1e704>  // b.none
  42125c:	cmp	w0, #0x3a
  421260:	b.eq	42128c <nftw@plt+0x1e70c>  // b.none
  421264:	cmp	w0, #0x3b
  421268:	b.eq	421294 <nftw@plt+0x1e714>  // b.none
  42126c:	cmp	w0, #0x3c
  421270:	mov	w1, #0x49                  	// #73
  421274:	csel	w0, w0, w1, ne  // ne = any
  421278:	ret
  42127c:	mov	w0, #0x45                  	// #69
  421280:	b	421278 <nftw@plt+0x1e6f8>
  421284:	mov	w0, #0x46                  	// #70
  421288:	b	421278 <nftw@plt+0x1e6f8>
  42128c:	mov	w0, #0x47                  	// #71
  421290:	b	421278 <nftw@plt+0x1e6f8>
  421294:	mov	w0, #0x48                  	// #72
  421298:	b	421278 <nftw@plt+0x1e6f8>
  42129c:	sub	w0, w0, #0x4a
  4212a0:	cmp	w0, #0x4
  4212a4:	cset	w0, ls  // ls = plast
  4212a8:	ret
  4212ac:	sub	w0, w0, #0x45
  4212b0:	cmp	w0, #0x4
  4212b4:	cset	w0, ls  // ls = plast
  4212b8:	ret
  4212bc:	ldr	w2, [x0, #8]
  4212c0:	ldr	x0, [x0, #16]
  4212c4:	cbz	w2, 421320 <nftw@plt+0x1e7a0>
  4212c8:	mov	x1, #0x0                   	// #0
  4212cc:	mov	w5, #0x27                  	// #39
  4212d0:	mov	w4, w1
  4212d4:	ldrb	w3, [x0, x1]
  4212d8:	cmp	w3, #0x22
  4212dc:	ccmp	w3, w5, #0x4, ne  // ne = any
  4212e0:	b.eq	4212f4 <nftw@plt+0x1e774>  // b.none
  4212e4:	add	w4, w1, #0x1
  4212e8:	add	x1, x1, #0x1
  4212ec:	cmp	w2, w1
  4212f0:	b.hi	4212d0 <nftw@plt+0x1e750>  // b.pmore
  4212f4:	cmp	w2, w4
  4212f8:	b.eq	421324 <nftw@plt+0x1e7a4>  // b.none
  4212fc:	ldrb	w3, [x0, w4, uxtw]
  421300:	mov	w4, w2
  421304:	sub	w2, w2, #0x1
  421308:	ldrb	w1, [x0, w2, uxtw]
  42130c:	cmp	w1, w3
  421310:	b.eq	42132c <nftw@plt+0x1e7ac>  // b.none
  421314:	cbnz	w2, 421300 <nftw@plt+0x1e780>
  421318:	add	x0, x0, w2, uxtw
  42131c:	ret
  421320:	mov	w4, w2
  421324:	add	x0, x0, w4, uxtw
  421328:	b	42131c <nftw@plt+0x1e79c>
  42132c:	mov	w2, w4
  421330:	b	421318 <nftw@plt+0x1e798>
  421334:	stp	x29, x30, [sp, #-96]!
  421338:	mov	x29, sp
  42133c:	stp	x21, x22, [sp, #32]
  421340:	stp	x25, x26, [sp, #64]
  421344:	stp	x27, x28, [sp, #80]
  421348:	mov	x25, x0
  42134c:	mov	x26, x2
  421350:	mov	w27, w3
  421354:	ldr	x8, [x1, #16]
  421358:	cbz	x2, 421360 <nftw@plt+0x1e7e0>
  42135c:	str	xzr, [x2]
  421360:	ldr	w28, [x1, #8]
  421364:	cmp	w28, #0x1
  421368:	b.eq	421d08 <nftw@plt+0x1f188>  // b.none
  42136c:	stp	x19, x20, [sp, #16]
  421370:	stp	x23, x24, [sp, #48]
  421374:	ldrb	w0, [x8]
  421378:	mov	x20, x8
  42137c:	mov	w24, #0xa                   	// #10
  421380:	cmp	w0, #0x30
  421384:	b.eq	4213b4 <nftw@plt+0x1e834>  // b.none
  421388:	mov	w22, #0x0                   	// #0
  42138c:	mov	w6, #0x0                   	// #0
  421390:	mov	w23, #0x0                   	// #0
  421394:	mov	w21, #0x0                   	// #0
  421398:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  42139c:	add	x3, x3, #0xe68
  4213a0:	adrp	x5, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4213a4:	add	x5, x5, #0xb50
  4213a8:	mov	w7, #0x0                   	// #0
  4213ac:	mov	w4, #0x1                   	// #1
  4213b0:	b	4214bc <nftw@plt+0x1e93c>
  4213b4:	add	x20, x8, #0x1
  4213b8:	ldrb	w0, [x8, #1]
  4213bc:	and	w0, w0, #0xffffffdf
  4213c0:	and	w0, w0, #0xff
  4213c4:	cmp	w0, #0x58
  4213c8:	b.ne	42143c <nftw@plt+0x1e8bc>  // b.any
  4213cc:	ldrb	w0, [x8, #2]
  4213d0:	cmp	w0, #0x2e
  4213d4:	b.eq	4213e8 <nftw@plt+0x1e868>  // b.none
  4213d8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4213dc:	add	x1, x1, #0xe68
  4213e0:	ldrh	w1, [x1, w0, sxtw #1]
  4213e4:	tbz	w1, #8, 4213fc <nftw@plt+0x1e87c>
  4213e8:	add	x20, x8, #0x2
  4213ec:	mov	w24, #0x10                  	// #16
  4213f0:	b	421388 <nftw@plt+0x1e808>
  4213f4:	mov	w24, #0x8                   	// #8
  4213f8:	b	421388 <nftw@plt+0x1e808>
  4213fc:	mov	w24, #0x8                   	// #8
  421400:	cmp	w0, #0x27
  421404:	b.ne	421388 <nftw@plt+0x1e808>  // b.any
  421408:	ldrb	w0, [x25, #1166]
  42140c:	cbz	w0, 421388 <nftw@plt+0x1e808>
  421410:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421414:	add	x4, x4, #0xa8
  421418:	mov	w3, #0x0                   	// #0
  42141c:	mov	w2, w27
  421420:	mov	w1, #0x3                   	// #3
  421424:	mov	x0, x25
  421428:	bl	41fb7c <nftw@plt+0x1cffc>
  42142c:	mov	w21, #0x0                   	// #0
  421430:	ldp	x19, x20, [sp, #16]
  421434:	ldp	x23, x24, [sp, #48]
  421438:	b	421578 <nftw@plt+0x1e9f8>
  42143c:	cmp	w0, #0x42
  421440:	b.ne	4213f4 <nftw@plt+0x1e874>  // b.any
  421444:	ldrb	w1, [x8, #2]
  421448:	sub	w0, w1, #0x30
  42144c:	and	w0, w0, #0xff
  421450:	cmp	w0, #0x1
  421454:	b.ls	421498 <nftw@plt+0x1e918>  // b.plast
  421458:	mov	w24, #0x8                   	// #8
  42145c:	cmp	w1, #0x27
  421460:	b.ne	421388 <nftw@plt+0x1e808>  // b.any
  421464:	ldrb	w0, [x25, #1166]
  421468:	cbz	w0, 421388 <nftw@plt+0x1e808>
  42146c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421470:	add	x4, x4, #0xa8
  421474:	mov	w3, #0x0                   	// #0
  421478:	mov	w2, w27
  42147c:	mov	w1, #0x3                   	// #3
  421480:	mov	x0, x25
  421484:	bl	41fb7c <nftw@plt+0x1cffc>
  421488:	mov	w21, #0x0                   	// #0
  42148c:	ldp	x19, x20, [sp, #16]
  421490:	ldp	x23, x24, [sp, #48]
  421494:	b	421578 <nftw@plt+0x1e9f8>
  421498:	add	x20, x8, #0x2
  42149c:	mov	w24, #0x2                   	// #2
  4214a0:	b	421388 <nftw@plt+0x1e808>
  4214a4:	ldrb	w0, [x5, w0, sxtw]
  4214a8:	cmp	w21, w0
  4214ac:	csel	w21, w21, w0, cs  // cs = hs, nlast
  4214b0:	mov	w22, w7
  4214b4:	mov	w6, w4
  4214b8:	mov	x20, x19
  4214bc:	mov	x19, x20
  4214c0:	ldrb	w0, [x19], #1
  4214c4:	mov	w1, w0
  4214c8:	ldrh	w1, [x3, x1, lsl #1]
  4214cc:	tbnz	w1, #2, 4214a4 <nftw@plt+0x1e924>
  4214d0:	tst	x1, #0x100
  4214d4:	ccmp	w24, #0x10, #0x0, ne  // ne = any
  4214d8:	b.eq	4214a4 <nftw@plt+0x1e924>  // b.none
  4214dc:	cmp	w0, #0x27
  4214e0:	b.eq	421508 <nftw@plt+0x1e988>  // b.none
  4214e4:	cmp	w0, #0x2e
  4214e8:	b.ne	4215bc <nftw@plt+0x1ea3c>  // b.any
  4214ec:	cbnz	w22, 421550 <nftw@plt+0x1e9d0>
  4214f0:	ldrb	w0, [x19]
  4214f4:	cmp	w0, #0x27
  4214f8:	b.eq	421548 <nftw@plt+0x1e9c8>  // b.none
  4214fc:	cbnz	w23, 421590 <nftw@plt+0x1ea10>
  421500:	mov	w23, w4
  421504:	b	4214b8 <nftw@plt+0x1e938>
  421508:	ldrb	w0, [x25, #1166]
  42150c:	cbz	w0, 421d48 <nftw@plt+0x1f1c8>
  421510:	cbnz	w22, 42151c <nftw@plt+0x1e99c>
  421514:	mov	w22, w4
  421518:	b	4214b8 <nftw@plt+0x1e938>
  42151c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421520:	add	x4, x4, #0xd0
  421524:	mov	w3, #0x0                   	// #0
  421528:	mov	w2, w27
  42152c:	mov	w1, #0x3                   	// #3
  421530:	mov	x0, x25
  421534:	bl	41fb7c <nftw@plt+0x1cffc>
  421538:	mov	w21, #0x0                   	// #0
  42153c:	ldp	x19, x20, [sp, #16]
  421540:	ldp	x23, x24, [sp, #48]
  421544:	b	421578 <nftw@plt+0x1e9f8>
  421548:	ldrb	w0, [x25, #1166]
  42154c:	cbz	w0, 4214fc <nftw@plt+0x1e97c>
  421550:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421554:	add	x4, x4, #0xf0
  421558:	mov	w3, #0x0                   	// #0
  42155c:	mov	w2, w27
  421560:	mov	w1, #0x3                   	// #3
  421564:	mov	x0, x25
  421568:	bl	41fb7c <nftw@plt+0x1cffc>
  42156c:	mov	w21, #0x0                   	// #0
  421570:	ldp	x19, x20, [sp, #16]
  421574:	ldp	x23, x24, [sp, #48]
  421578:	mov	w0, w21
  42157c:	ldp	x21, x22, [sp, #32]
  421580:	ldp	x25, x26, [sp, #64]
  421584:	ldp	x27, x28, [sp, #80]
  421588:	ldp	x29, x30, [sp], #96
  42158c:	ret
  421590:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421594:	add	x4, x4, #0x120
  421598:	mov	w3, #0x0                   	// #0
  42159c:	mov	w2, w27
  4215a0:	mov	w1, #0x3                   	// #3
  4215a4:	mov	x0, x25
  4215a8:	bl	41fb7c <nftw@plt+0x1cffc>
  4215ac:	mov	w21, #0x0                   	// #0
  4215b0:	ldp	x19, x20, [sp, #16]
  4215b4:	ldp	x23, x24, [sp, #48]
  4215b8:	b	421578 <nftw@plt+0x1e9f8>
  4215bc:	add	x28, x8, w28, uxtw
  4215c0:	cmp	w24, #0xa
  4215c4:	b.hi	421d50 <nftw@plt+0x1f1d0>  // b.pmore
  4215c8:	and	w1, w0, #0xffffffdf
  4215cc:	and	w1, w1, #0xff
  4215d0:	cmp	w1, #0x45
  4215d4:	b.ne	421d50 <nftw@plt+0x1f1d0>  // b.any
  4215d8:	cbnz	w22, 4216a0 <nftw@plt+0x1eb20>
  4215dc:	ldrb	w0, [x19]
  4215e0:	mov	w23, #0x2                   	// #2
  4215e4:	cmp	w0, #0x27
  4215e8:	b.eq	421698 <nftw@plt+0x1eb18>  // b.none
  4215ec:	cmp	w23, #0x0
  4215f0:	cset	w0, ne  // ne = any
  4215f4:	cmp	w0, #0x0
  4215f8:	ccmp	w24, #0x8, #0x0, ne  // ne = any
  4215fc:	b.ne	421734 <nftw@plt+0x1ebb4>  // b.any
  421600:	mov	w24, #0xa                   	// #10
  421604:	cmp	w21, #0x9
  421608:	b.ls	4217f8 <nftw@plt+0x1ec78>  // b.plast
  42160c:	add	w5, w21, #0x30
  421610:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421614:	add	x4, x4, #0x1f0
  421618:	mov	w3, #0x0                   	// #0
  42161c:	mov	w2, w27
  421620:	mov	w1, #0x3                   	// #3
  421624:	mov	x0, x25
  421628:	bl	41fb7c <nftw@plt+0x1cffc>
  42162c:	mov	w21, #0x0                   	// #0
  421630:	ldp	x19, x20, [sp, #16]
  421634:	ldp	x23, x24, [sp, #48]
  421638:	b	421578 <nftw@plt+0x1e9f8>
  42163c:	and	w0, w0, #0xffffffdf
  421640:	and	w0, w0, #0xff
  421644:	cmp	w0, #0x50
  421648:	b.eq	4215d8 <nftw@plt+0x1ea58>  // b.none
  42164c:	cmp	w23, #0x0
  421650:	cset	w0, ne  // ne = any
  421654:	cbnz	w22, 4216cc <nftw@plt+0x1eb4c>
  421658:	cmp	w21, w24
  42165c:	b.cc	42173c <nftw@plt+0x1ebbc>  // b.lo, b.ul, b.last
  421660:	cmp	w24, #0x2
  421664:	b.ne	42160c <nftw@plt+0x1ea8c>  // b.any
  421668:	add	w5, w21, #0x30
  42166c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421670:	add	x4, x4, #0x1c8
  421674:	mov	w3, #0x0                   	// #0
  421678:	mov	w2, w27
  42167c:	mov	w1, #0x3                   	// #3
  421680:	mov	x0, x25
  421684:	bl	41fb7c <nftw@plt+0x1cffc>
  421688:	mov	w21, #0x0                   	// #0
  42168c:	ldp	x19, x20, [sp, #16]
  421690:	ldp	x23, x24, [sp, #48]
  421694:	b	421578 <nftw@plt+0x1e9f8>
  421698:	ldrb	w0, [x25, #1166]
  42169c:	cbz	w0, 4215ec <nftw@plt+0x1ea6c>
  4216a0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4216a4:	add	x4, x4, #0x148
  4216a8:	mov	w3, #0x0                   	// #0
  4216ac:	mov	w2, w27
  4216b0:	mov	w1, #0x3                   	// #3
  4216b4:	mov	x0, x25
  4216b8:	bl	41fb7c <nftw@plt+0x1cffc>
  4216bc:	mov	w21, #0x0                   	// #0
  4216c0:	ldp	x19, x20, [sp, #16]
  4216c4:	ldp	x23, x24, [sp, #48]
  4216c8:	b	421578 <nftw@plt+0x1e9f8>
  4216cc:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4216d0:	add	x4, x4, #0x170
  4216d4:	mov	w3, #0x0                   	// #0
  4216d8:	mov	w2, w27
  4216dc:	mov	w1, #0x3                   	// #3
  4216e0:	mov	x0, x25
  4216e4:	bl	41fb7c <nftw@plt+0x1cffc>
  4216e8:	mov	w21, #0x0                   	// #0
  4216ec:	ldp	x19, x20, [sp, #16]
  4216f0:	ldp	x23, x24, [sp, #48]
  4216f4:	b	421578 <nftw@plt+0x1e9f8>
  4216f8:	orr	w19, w0, #0x2
  4216fc:	cmp	w24, #0x8
  421700:	b.eq	421d10 <nftw@plt+0x1f190>  // b.none
  421704:	ldrb	w0, [x25, #1154]
  421708:	cbz	w0, 421bec <nftw@plt+0x1f06c>
  42170c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421710:	add	x4, x4, #0x198
  421714:	mov	w3, #0x0                   	// #0
  421718:	mov	w2, w27
  42171c:	mov	w1, #0x2                   	// #2
  421720:	mov	x0, x25
  421724:	bl	41fb7c <nftw@plt+0x1cffc>
  421728:	b	421be0 <nftw@plt+0x1f060>
  42172c:	mov	x19, x20
  421730:	b	4215ec <nftw@plt+0x1ea6c>
  421734:	mov	x20, x19
  421738:	b	421658 <nftw@plt+0x1ead8>
  42173c:	cbnz	w0, 4217c0 <nftw@plt+0x1ec40>
  421740:	sub	x28, x28, x20
  421744:	mov	x2, x28
  421748:	mov	x1, x20
  42174c:	mov	x0, x25
  421750:	bl	420638 <nftw@plt+0x1dab8>
  421754:	mov	w21, w0
  421758:	cbnz	w0, 421bc8 <nftw@plt+0x1f048>
  42175c:	ldrb	w0, [x25, #1161]
  421760:	cbz	w0, 421b98 <nftw@plt+0x1f018>
  421764:	cbz	x26, 42176c <nftw@plt+0x1ebec>
  421768:	str	x20, [x26]
  42176c:	ldrb	w0, [x25, #1138]
  421770:	cbnz	w0, 421d30 <nftw@plt+0x1f1b0>
  421774:	mov	w21, #0x1040                	// #4160
  421778:	movk	w21, #0x100, lsl #16
  42177c:	ldrb	w0, [x25, #1139]
  421780:	cbz	w0, 421bdc <nftw@plt+0x1f05c>
  421784:	ldrb	w1, [x25, #1120]
  421788:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42178c:	add	x0, x0, #0x20
  421790:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x199fc>
  421794:	add	x4, x4, #0xff8
  421798:	cmp	w1, #0x0
  42179c:	csel	x4, x4, x0, ne  // ne = any
  4217a0:	ldrb	w0, [x25, #1152]
  4217a4:	cbz	w0, 421c80 <nftw@plt+0x1f100>
  4217a8:	mov	w3, #0x0                   	// #0
  4217ac:	mov	w2, w27
  4217b0:	mov	w1, #0x7                   	// #7
  4217b4:	mov	x0, x25
  4217b8:	bl	41fbf4 <nftw@plt+0x1d074>
  4217bc:	b	421bdc <nftw@plt+0x1f05c>
  4217c0:	cmp	w24, #0x2
  4217c4:	b.ne	4217f4 <nftw@plt+0x1ec74>  // b.any
  4217c8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4217cc:	add	x4, x4, #0x218
  4217d0:	mov	w3, #0x0                   	// #0
  4217d4:	mov	w2, w27
  4217d8:	mov	w1, #0x3                   	// #3
  4217dc:	mov	x0, x25
  4217e0:	bl	41fb7c <nftw@plt+0x1cffc>
  4217e4:	mov	w21, #0x0                   	// #0
  4217e8:	ldp	x19, x20, [sp, #16]
  4217ec:	ldp	x23, x24, [sp, #48]
  4217f0:	b	421578 <nftw@plt+0x1e9f8>
  4217f4:	mov	x19, x20
  4217f8:	cmp	w24, #0x10
  4217fc:	eor	w6, w6, #0x1
  421800:	csel	w20, w6, wzr, eq  // eq = none
  421804:	cbnz	w20, 4218b4 <nftw@plt+0x1ed34>
  421808:	b.eq	4218e0 <nftw@plt+0x1ed60>  // b.none
  42180c:	cmp	w23, #0x2
  421810:	b.eq	42191c <nftw@plt+0x1ed9c>  // b.none
  421814:	cbnz	w22, 421a40 <nftw@plt+0x1eec0>
  421818:	sub	x20, x28, x19
  42181c:	mov	x2, x20
  421820:	mov	x1, x19
  421824:	mov	x0, x25
  421828:	bl	41ff80 <nftw@plt+0x1d400>
  42182c:	mov	w21, w0
  421830:	cbnz	w0, 421a9c <nftw@plt+0x1ef1c>
  421834:	ldrb	w0, [x25, #1161]
  421838:	cbz	w0, 421a6c <nftw@plt+0x1eeec>
  42183c:	cbz	x26, 421844 <nftw@plt+0x1ecc4>
  421840:	str	x19, [x26]
  421844:	mov	w21, #0x40                  	// #64
  421848:	movk	w21, #0x100, lsl #16
  42184c:	cmp	x19, x28
  421850:	b.eq	421874 <nftw@plt+0x1ecf4>  // b.none
  421854:	ldrb	w0, [x25, #1138]
  421858:	cbnz	w0, 421ae8 <nftw@plt+0x1ef68>
  42185c:	mov	w21, #0x40                  	// #64
  421860:	movk	w21, #0x100, lsl #16
  421864:	ubfx	x22, x21, #14, #1
  421868:	cmp	w22, #0x0
  42186c:	ccmp	w24, #0xa, #0x4, ne  // ne = any
  421870:	b.ne	421b44 <nftw@plt+0x1efc4>  // b.any
  421874:	tst	w21, #0x300000
  421878:	b.eq	421abc <nftw@plt+0x1ef3c>  // b.none
  42187c:	ldrb	w0, [x25, #1154]
  421880:	cbnz	w0, 421b78 <nftw@plt+0x1eff8>
  421884:	orr	w19, w21, #0x2
  421888:	tbz	w21, #13, 421bf4 <nftw@plt+0x1f074>
  42188c:	ldrb	w0, [x25, #1154]
  421890:	cbz	w0, 421bf4 <nftw@plt+0x1f074>
  421894:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421898:	add	x4, x4, #0x450
  42189c:	mov	w3, #0x0                   	// #0
  4218a0:	mov	w2, w27
  4218a4:	mov	w1, #0x2                   	// #2
  4218a8:	mov	x0, x25
  4218ac:	bl	41fb7c <nftw@plt+0x1cffc>
  4218b0:	b	421bec <nftw@plt+0x1f06c>
  4218b4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4218b8:	add	x4, x4, #0x248
  4218bc:	mov	w3, #0x0                   	// #0
  4218c0:	mov	w2, w27
  4218c4:	mov	w1, #0x3                   	// #3
  4218c8:	mov	x0, x25
  4218cc:	bl	41fb7c <nftw@plt+0x1cffc>
  4218d0:	mov	w21, #0x0                   	// #0
  4218d4:	ldp	x19, x20, [sp, #16]
  4218d8:	ldp	x23, x24, [sp, #48]
  4218dc:	b	421578 <nftw@plt+0x1e9f8>
  4218e0:	ldrb	w0, [x25, #1154]
  4218e4:	cbz	w0, 421914 <nftw@plt+0x1ed94>
  4218e8:	ldrb	w0, [x25, #1127]
  4218ec:	cbnz	w0, 421914 <nftw@plt+0x1ed94>
  4218f0:	ldrb	w0, [x25, #1120]
  4218f4:	cbz	w0, 42197c <nftw@plt+0x1edfc>
  4218f8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4218fc:	add	x4, x4, #0x278
  421900:	mov	w3, #0x0                   	// #0
  421904:	mov	w2, w27
  421908:	mov	w1, #0x2                   	// #2
  42190c:	mov	x0, x25
  421910:	bl	41fb7c <nftw@plt+0x1cffc>
  421914:	cmp	w23, #0x2
  421918:	b.ne	421a14 <nftw@plt+0x1ee94>  // b.any
  42191c:	ldrb	w0, [x19]
  421920:	sub	w0, w0, #0x2b
  421924:	and	w0, w0, #0xfffffffd
  421928:	tst	w0, #0xff
  42192c:	cinc	x19, x19, eq  // eq = none
  421930:	ldrb	w1, [x19]
  421934:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  421938:	add	x0, x0, #0xe68
  42193c:	ldrh	w0, [x0, w1, sxtw #1]
  421940:	tbz	w0, #2, 42199c <nftw@plt+0x1ee1c>
  421944:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  421948:	add	x0, x0, #0xe68
  42194c:	ldrb	w1, [x19]
  421950:	mov	w22, w20
  421954:	cmp	w1, #0x27
  421958:	b.eq	421a04 <nftw@plt+0x1ee84>  // b.none
  42195c:	ldrb	w1, [x19, #1]!
  421960:	ldrh	w2, [x0, w1, sxtw #1]
  421964:	tbnz	w2, #2, 42194c <nftw@plt+0x1edcc>
  421968:	cmp	w1, #0x27
  42196c:	b.ne	421814 <nftw@plt+0x1ec94>  // b.any
  421970:	ldrb	w1, [x25, #1166]
  421974:	cbnz	w1, 42194c <nftw@plt+0x1edcc>
  421978:	b	421814 <nftw@plt+0x1ec94>
  42197c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421980:	add	x4, x4, #0x2a8
  421984:	mov	w3, #0x0                   	// #0
  421988:	mov	w2, w27
  42198c:	mov	w1, #0x2                   	// #2
  421990:	mov	x0, x25
  421994:	bl	41fb7c <nftw@plt+0x1cffc>
  421998:	b	421914 <nftw@plt+0x1ed94>
  42199c:	cmp	w1, #0x27
  4219a0:	b.ne	4219ac <nftw@plt+0x1ee2c>  // b.any
  4219a4:	ldrb	w0, [x25, #1166]
  4219a8:	cbnz	w0, 4219d8 <nftw@plt+0x1ee58>
  4219ac:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4219b0:	add	x4, x4, #0x2d8
  4219b4:	mov	w3, #0x0                   	// #0
  4219b8:	mov	w2, w27
  4219bc:	mov	w1, #0x3                   	// #3
  4219c0:	mov	x0, x25
  4219c4:	bl	41fb7c <nftw@plt+0x1cffc>
  4219c8:	mov	w21, #0x0                   	// #0
  4219cc:	ldp	x19, x20, [sp, #16]
  4219d0:	ldp	x23, x24, [sp, #48]
  4219d4:	b	421578 <nftw@plt+0x1e9f8>
  4219d8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4219dc:	add	x4, x4, #0x148
  4219e0:	mov	w3, #0x0                   	// #0
  4219e4:	mov	w2, w27
  4219e8:	mov	w1, #0x3                   	// #3
  4219ec:	mov	x0, x25
  4219f0:	bl	41fb7c <nftw@plt+0x1cffc>
  4219f4:	mov	w21, #0x0                   	// #0
  4219f8:	ldp	x19, x20, [sp, #16]
  4219fc:	ldp	x23, x24, [sp, #48]
  421a00:	b	421578 <nftw@plt+0x1e9f8>
  421a04:	ldrb	w1, [x25, #1166]
  421a08:	cmp	w1, #0x0
  421a0c:	cset	w22, ne  // ne = any
  421a10:	b	42195c <nftw@plt+0x1eddc>
  421a14:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421a18:	add	x4, x4, #0x2f0
  421a1c:	mov	w3, #0x0                   	// #0
  421a20:	mov	w2, w27
  421a24:	mov	w1, #0x3                   	// #3
  421a28:	mov	x0, x25
  421a2c:	bl	41fb7c <nftw@plt+0x1cffc>
  421a30:	mov	w21, #0x0                   	// #0
  421a34:	ldp	x19, x20, [sp, #16]
  421a38:	ldp	x23, x24, [sp, #48]
  421a3c:	b	421578 <nftw@plt+0x1e9f8>
  421a40:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421a44:	add	x4, x4, #0x170
  421a48:	mov	w3, #0x0                   	// #0
  421a4c:	mov	w2, w27
  421a50:	mov	w1, #0x3                   	// #3
  421a54:	mov	x0, x25
  421a58:	bl	41fb7c <nftw@plt+0x1cffc>
  421a5c:	mov	w21, #0x0                   	// #0
  421a60:	ldp	x19, x20, [sp, #16]
  421a64:	ldp	x23, x24, [sp, #48]
  421a68:	b	421578 <nftw@plt+0x1e9f8>
  421a6c:	mov	x6, x19
  421a70:	mov	w5, w20
  421a74:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421a78:	add	x4, x4, #0x328
  421a7c:	mov	w3, #0x0                   	// #0
  421a80:	mov	w2, w27
  421a84:	mov	w1, #0x3                   	// #3
  421a88:	mov	x0, x25
  421a8c:	bl	41fb7c <nftw@plt+0x1cffc>
  421a90:	ldp	x19, x20, [sp, #16]
  421a94:	ldp	x23, x24, [sp, #48]
  421a98:	b	421578 <nftw@plt+0x1e9f8>
  421a9c:	cmp	x19, x28
  421aa0:	b.eq	421aac <nftw@plt+0x1ef2c>  // b.none
  421aa4:	ldrb	w0, [x25, #1138]
  421aa8:	cbnz	w0, 421af0 <nftw@plt+0x1ef70>
  421aac:	cmp	w21, #0x20
  421ab0:	b.ne	421864 <nftw@plt+0x1ece4>  // b.any
  421ab4:	ldrb	w0, [x25, #1154]
  421ab8:	cbnz	w0, 421b24 <nftw@plt+0x1efa4>
  421abc:	cbz	w22, 421884 <nftw@plt+0x1ed04>
  421ac0:	ldrb	w0, [x25, #1154]
  421ac4:	cbz	w0, 421884 <nftw@plt+0x1ed04>
  421ac8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421acc:	add	x4, x4, #0x3f0
  421ad0:	mov	w3, #0x0                   	// #0
  421ad4:	mov	w2, w27
  421ad8:	mov	w1, #0x2                   	// #2
  421adc:	mov	x0, x25
  421ae0:	bl	41fb7c <nftw@plt+0x1cffc>
  421ae4:	b	421884 <nftw@plt+0x1ed04>
  421ae8:	mov	w21, #0x40                  	// #64
  421aec:	movk	w21, #0x100, lsl #16
  421af0:	mov	x0, x25
  421af4:	bl	42e85c <nftw@plt+0x2bcdc>
  421af8:	cbnz	w0, 421aac <nftw@plt+0x1ef2c>
  421afc:	mov	x6, x19
  421b00:	mov	w5, w20
  421b04:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421b08:	add	x4, x4, #0x358
  421b0c:	mov	w3, #0x0                   	// #0
  421b10:	mov	w2, w27
  421b14:	mov	w1, #0x6                   	// #6
  421b18:	mov	x0, x25
  421b1c:	bl	41fbf4 <nftw@plt+0x1d074>
  421b20:	b	421aac <nftw@plt+0x1ef2c>
  421b24:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421b28:	add	x4, x4, #0x380
  421b2c:	mov	w3, #0x0                   	// #0
  421b30:	mov	w2, w27
  421b34:	mov	w1, #0x2                   	// #2
  421b38:	mov	x0, x25
  421b3c:	bl	41fb7c <nftw@plt+0x1cffc>
  421b40:	b	421abc <nftw@plt+0x1ef3c>
  421b44:	mov	x6, x19
  421b48:	mov	w5, w20
  421b4c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421b50:	add	x4, x4, #0x3b0
  421b54:	mov	w3, #0x0                   	// #0
  421b58:	mov	w2, w27
  421b5c:	mov	w1, #0x3                   	// #3
  421b60:	mov	x0, x25
  421b64:	bl	41fb7c <nftw@plt+0x1cffc>
  421b68:	mov	w21, #0x0                   	// #0
  421b6c:	ldp	x19, x20, [sp, #16]
  421b70:	ldp	x23, x24, [sp, #48]
  421b74:	b	421578 <nftw@plt+0x1e9f8>
  421b78:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421b7c:	add	x4, x4, #0x198
  421b80:	mov	w3, #0x0                   	// #0
  421b84:	mov	w2, w27
  421b88:	mov	w1, #0x2                   	// #2
  421b8c:	mov	x0, x25
  421b90:	bl	41fb7c <nftw@plt+0x1cffc>
  421b94:	b	421abc <nftw@plt+0x1ef3c>
  421b98:	mov	x6, x20
  421b9c:	mov	w5, w28
  421ba0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421ba4:	add	x4, x4, #0x420
  421ba8:	mov	w3, #0x0                   	// #0
  421bac:	mov	w2, w27
  421bb0:	mov	w1, #0x3                   	// #3
  421bb4:	mov	x0, x25
  421bb8:	bl	41fb7c <nftw@plt+0x1cffc>
  421bbc:	ldp	x19, x20, [sp, #16]
  421bc0:	ldp	x23, x24, [sp, #48]
  421bc4:	b	421578 <nftw@plt+0x1e9f8>
  421bc8:	ldrb	w0, [x25, #1138]
  421bcc:	cbnz	w0, 421c1c <nftw@plt+0x1f09c>
  421bd0:	and	w0, w21, #0xf0
  421bd4:	cmp	w0, #0x40
  421bd8:	b.eq	42177c <nftw@plt+0x1ebfc>  // b.none
  421bdc:	orr	w19, w21, #0x1
  421be0:	tbz	w19, #13, 421bec <nftw@plt+0x1f06c>
  421be4:	ldrb	w0, [x25, #1154]
  421be8:	cbnz	w0, 421894 <nftw@plt+0x1ed14>
  421bec:	cmp	w24, #0x2
  421bf0:	b.eq	421c98 <nftw@plt+0x1f118>  // b.none
  421bf4:	cmp	w24, #0xa
  421bf8:	b.eq	421ce8 <nftw@plt+0x1f168>  // b.none
  421bfc:	cmp	w24, #0x10
  421c00:	b.eq	421cf8 <nftw@plt+0x1f178>  // b.none
  421c04:	orr	w21, w19, #0x400
  421c08:	cmp	w24, #0x2
  421c0c:	b.eq	421cd8 <nftw@plt+0x1f158>  // b.none
  421c10:	ldp	x19, x20, [sp, #16]
  421c14:	ldp	x23, x24, [sp, #48]
  421c18:	b	421578 <nftw@plt+0x1e9f8>
  421c1c:	mov	x0, x25
  421c20:	bl	42e85c <nftw@plt+0x2bcdc>
  421c24:	cbnz	w0, 421bd0 <nftw@plt+0x1f050>
  421c28:	and	w0, w21, #0x3000
  421c2c:	and	w1, w21, #0xf0
  421c30:	cmp	w1, #0x40
  421c34:	b.eq	421c70 <nftw@plt+0x1f0f0>  // b.none
  421c38:	cbz	w0, 421bdc <nftw@plt+0x1f05c>
  421c3c:	mov	w1, #0x6                   	// #6
  421c40:	mov	x6, x20
  421c44:	mov	w5, w28
  421c48:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421c4c:	add	x4, x4, #0x358
  421c50:	mov	w3, #0x0                   	// #0
  421c54:	mov	w2, w27
  421c58:	mov	x0, x25
  421c5c:	bl	41fbf4 <nftw@plt+0x1d074>
  421c60:	b	421bd0 <nftw@plt+0x1f050>
  421c64:	mov	w21, #0x1040                	// #4160
  421c68:	movk	w21, #0x100, lsl #16
  421c6c:	mov	w0, #0x1000                	// #4096
  421c70:	ldrb	w1, [x25, #1139]
  421c74:	cbz	w1, 421d24 <nftw@plt+0x1f1a4>
  421c78:	mov	w1, #0x7                   	// #7
  421c7c:	b	421c40 <nftw@plt+0x1f0c0>
  421c80:	mov	w3, #0x0                   	// #0
  421c84:	mov	w2, w27
  421c88:	mov	w1, #0x7                   	// #7
  421c8c:	mov	x0, x25
  421c90:	bl	41fc70 <nftw@plt+0x1d0f0>
  421c94:	b	421bdc <nftw@plt+0x1f05c>
  421c98:	ldrb	w0, [x25, #1165]
  421c9c:	cbnz	w0, 421cd8 <nftw@plt+0x1f158>
  421ca0:	ldrb	w0, [x25, #1154]
  421ca4:	cbz	w0, 421cd8 <nftw@plt+0x1f158>
  421ca8:	ldrb	w1, [x25, #1120]
  421cac:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421cb0:	add	x0, x0, #0x80
  421cb4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  421cb8:	add	x4, x4, #0x48
  421cbc:	cmp	w1, #0x0
  421cc0:	csel	x4, x4, x0, ne  // ne = any
  421cc4:	mov	w3, #0x0                   	// #0
  421cc8:	mov	w2, w27
  421ccc:	mov	w1, #0x2                   	// #2
  421cd0:	mov	x0, x25
  421cd4:	bl	41fb7c <nftw@plt+0x1cffc>
  421cd8:	orr	w21, w19, #0x800
  421cdc:	ldp	x19, x20, [sp, #16]
  421ce0:	ldp	x23, x24, [sp, #48]
  421ce4:	b	421578 <nftw@plt+0x1e9f8>
  421ce8:	orr	w21, w19, #0x100
  421cec:	ldp	x19, x20, [sp, #16]
  421cf0:	ldp	x23, x24, [sp, #48]
  421cf4:	b	421578 <nftw@plt+0x1e9f8>
  421cf8:	orr	w21, w19, #0x200
  421cfc:	ldp	x19, x20, [sp, #16]
  421d00:	ldp	x23, x24, [sp, #48]
  421d04:	b	421578 <nftw@plt+0x1e9f8>
  421d08:	mov	w21, #0x111                 	// #273
  421d0c:	b	421578 <nftw@plt+0x1e9f8>
  421d10:	ldrb	w0, [x25, #1154]
  421d14:	mov	w24, #0xa                   	// #10
  421d18:	cbz	w0, 421bf4 <nftw@plt+0x1f074>
  421d1c:	mov	w24, #0xa                   	// #10
  421d20:	b	42170c <nftw@plt+0x1eb8c>
  421d24:	cbz	w0, 42177c <nftw@plt+0x1ebfc>
  421d28:	mov	w1, #0x6                   	// #6
  421d2c:	b	421c40 <nftw@plt+0x1f0c0>
  421d30:	mov	x0, x25
  421d34:	bl	42e85c <nftw@plt+0x2bcdc>
  421d38:	cbz	w0, 421c64 <nftw@plt+0x1f0e4>
  421d3c:	mov	w21, #0x1040                	// #4160
  421d40:	movk	w21, #0x100, lsl #16
  421d44:	b	421bd0 <nftw@plt+0x1f050>
  421d48:	add	x28, x8, w28, uxtw
  421d4c:	mov	w0, #0x27                  	// #39
  421d50:	cmp	w24, #0x10
  421d54:	b.eq	42163c <nftw@plt+0x1eabc>  // b.none
  421d58:	cbnz	w22, 4216cc <nftw@plt+0x1eb4c>
  421d5c:	cmp	w23, #0x0
  421d60:	ccmp	w24, #0x10, #0x4, eq  // eq = none
  421d64:	b.eq	42172c <nftw@plt+0x1ebac>  // b.none
  421d68:	sub	x2, x28, x20
  421d6c:	mov	x1, x20
  421d70:	mov	x0, x25
  421d74:	bl	41ff80 <nftw@plt+0x1d400>
  421d78:	tst	w0, #0x300000
  421d7c:	b.ne	4216f8 <nftw@plt+0x1eb78>  // b.any
  421d80:	cmp	w21, w24
  421d84:	b.cs	421660 <nftw@plt+0x1eae0>  // b.hs, b.nlast
  421d88:	b	421740 <nftw@plt+0x1ebc0>
  421d8c:	stp	x29, x30, [sp, #-224]!
  421d90:	mov	x29, sp
  421d94:	stp	x19, x20, [sp, #16]
  421d98:	stp	x21, x22, [sp, #32]
  421d9c:	stp	x23, x24, [sp, #48]
  421da0:	mov	x19, x8
  421da4:	mov	x22, x0
  421da8:	mov	w23, w2
  421dac:	str	xzr, [x8, #8]
  421db0:	str	xzr, [x8]
  421db4:	ubfx	x0, x23, #12, #1
  421db8:	strb	w0, [x8, #16]
  421dbc:	strb	wzr, [x8, #17]
  421dc0:	ldr	x2, [x1, #16]
  421dc4:	ldr	w21, [x1, #8]
  421dc8:	cmp	w21, #0x1
  421dcc:	b.eq	421e5c <nftw@plt+0x1f2dc>  // b.none
  421dd0:	stp	x25, x26, [sp, #64]
  421dd4:	stp	x27, x28, [sp, #80]
  421dd8:	ldr	x28, [x22, #1208]
  421ddc:	and	w0, w23, #0xf00
  421de0:	add	x20, x2, #0x1
  421de4:	mov	w25, #0x8                   	// #8
  421de8:	cmp	w0, #0x400
  421dec:	b.eq	421e10 <nftw@plt+0x1f290>  // b.none
  421df0:	add	x20, x2, #0x2
  421df4:	mov	w25, #0x10                  	// #16
  421df8:	cmp	w0, #0x200
  421dfc:	b.eq	421e10 <nftw@plt+0x1f290>  // b.none
  421e00:	mov	x20, x2
  421e04:	mov	w25, #0xa                   	// #10
  421e08:	cmp	w0, #0x800
  421e0c:	b.eq	421e80 <nftw@plt+0x1f300>  // b.none
  421e10:	neg	w0, w28
  421e14:	mov	x1, #0xffffffffffffffff    	// #-1
  421e18:	lsr	x0, x1, x0
  421e1c:	cmp	x28, #0x40
  421e20:	csel	x0, x0, x1, cc  // cc = lo, ul, last
  421e24:	add	x21, x2, w21, uxtw
  421e28:	mov	w27, w25
  421e2c:	sub	x0, x0, x27
  421e30:	add	x0, x0, #0x1
  421e34:	udiv	x0, x0, x27
  421e38:	add	x0, x0, #0x1
  421e3c:	cmp	x20, x21
  421e40:	b.cs	421f2c <nftw@plt+0x1f3ac>  // b.hs, b.nlast
  421e44:	str	wzr, [sp, #108]
  421e48:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  421e4c:	add	x24, x24, #0xe68
  421e50:	adrp	x26, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  421e54:	add	x26, x26, #0xb50
  421e58:	b	421ef8 <nftw@plt+0x1f378>
  421e5c:	ldrb	w0, [x2]
  421e60:	sub	w0, w0, #0x30
  421e64:	sxtw	x0, w0
  421e68:	str	x0, [x8, #8]
  421e6c:	ldp	x19, x20, [sp, #16]
  421e70:	ldp	x21, x22, [sp, #32]
  421e74:	ldp	x23, x24, [sp, #48]
  421e78:	ldp	x29, x30, [sp], #224
  421e7c:	ret
  421e80:	add	x20, x2, #0x2
  421e84:	mov	w25, #0x2                   	// #2
  421e88:	b	421e10 <nftw@plt+0x1f290>
  421e8c:	tbz	w2, #8, 421f10 <nftw@plt+0x1f390>
  421e90:	ldrb	w2, [x26, w1, sxtw]
  421e94:	ldr	x1, [x19, #8]
  421e98:	cmp	x0, x1
  421e9c:	b.hi	421ee0 <nftw@plt+0x1f360>  // b.pmore
  421ea0:	ldr	x3, [x19]
  421ea4:	ldrb	w7, [x19, #16]
  421ea8:	cmp	xzr, x3, lsr #60
  421eac:	cset	w6, ne  // ne = any
  421eb0:	lsl	x5, x1, #4
  421eb4:	extr	x4, x3, x1, #60
  421eb8:	add	x0, x5, w2, uxtb
  421ebc:	str	x0, [sp, #112]
  421ec0:	cmp	x5, x0
  421ec4:	b.hi	422080 <nftw@plt+0x1f500>  // b.pmore
  421ec8:	str	x4, [sp, #120]
  421ecc:	b	421fec <nftw@plt+0x1f46c>
  421ed0:	ldrb	w2, [x26, w1, sxtw]
  421ed4:	ldr	x1, [x19, #8]
  421ed8:	cmp	x1, x0
  421edc:	b.cs	421f84 <nftw@plt+0x1f404>  // b.hs, b.nlast
  421ee0:	and	x2, x2, #0xff
  421ee4:	madd	x1, x27, x1, x2
  421ee8:	str	x1, [x19, #8]
  421eec:	add	x20, x20, #0x1
  421ef0:	cmp	x21, x20
  421ef4:	b.eq	421f20 <nftw@plt+0x1f3a0>  // b.none
  421ef8:	ldrb	w1, [x20]
  421efc:	mov	w2, w1
  421f00:	ldrh	w2, [x24, x2, lsl #1]
  421f04:	tbnz	w2, #2, 421ed0 <nftw@plt+0x1f350>
  421f08:	cmp	w25, #0x10
  421f0c:	b.eq	421e8c <nftw@plt+0x1f30c>  // b.none
  421f10:	cmp	w1, #0x27
  421f14:	b.ne	421f20 <nftw@plt+0x1f3a0>  // b.any
  421f18:	ldrb	w1, [x22, #1166]
  421f1c:	cbnz	w1, 421eec <nftw@plt+0x1f36c>
  421f20:	ldr	w0, [sp, #108]
  421f24:	cbz	w0, 421f2c <nftw@plt+0x1f3ac>
  421f28:	tbz	w23, #24, 422098 <nftw@plt+0x1f518>
  421f2c:	ldrb	w0, [x19, #16]
  421f30:	cbnz	w0, 4220f0 <nftw@plt+0x1f570>
  421f34:	ldrb	w0, [x22, #1160]
  421f38:	cbz	w0, 421f44 <nftw@plt+0x1f3c4>
  421f3c:	ldrb	w0, [x22, #16]
  421f40:	cbnz	w0, 4220fc <nftw@plt+0x1f57c>
  421f44:	ldp	x0, x1, [x19]
  421f48:	stp	x0, x1, [sp, #128]
  421f4c:	ldr	x0, [x19, #16]
  421f50:	str	x0, [sp, #144]
  421f54:	mov	x1, x28
  421f58:	add	x0, sp, #0x80
  421f5c:	bl	4207f8 <nftw@plt+0x1dc78>
  421f60:	and	w0, w0, #0xff
  421f64:	cbnz	w0, 422108 <nftw@plt+0x1f588>
  421f68:	cmp	w25, #0xa
  421f6c:	b.eq	4220b8 <nftw@plt+0x1f538>  // b.none
  421f70:	mov	w0, #0x1                   	// #1
  421f74:	strb	w0, [x19, #16]
  421f78:	ldp	x25, x26, [sp, #64]
  421f7c:	ldp	x27, x28, [sp, #80]
  421f80:	b	421e6c <nftw@plt+0x1f2ec>
  421f84:	ldr	x3, [x19]
  421f88:	ldrb	w7, [x19, #16]
  421f8c:	cmp	w25, #0x2
  421f90:	b.eq	4220dc <nftw@plt+0x1f55c>  // b.none
  421f94:	cmp	w25, #0x10
  421f98:	b.eq	421ea8 <nftw@plt+0x1f328>  // b.none
  421f9c:	cmp	xzr, x3, lsr #61
  421fa0:	cset	w6, ne  // ne = any
  421fa4:	lsl	x5, x1, #3
  421fa8:	extr	x4, x3, x1, #61
  421fac:	cmp	w25, #0xa
  421fb0:	b.ne	421eb8 <nftw@plt+0x1f338>  // b.any
  421fb4:	lsl	x8, x1, #1
  421fb8:	lsr	x0, x1, #63
  421fbc:	add	x1, x0, x3, lsl #1
  421fc0:	add	x2, x8, w2, uxtb
  421fc4:	cmp	x8, x2
  421fc8:	b.ls	421fd0 <nftw@plt+0x1f450>  // b.plast
  421fcc:	add	x1, x1, #0x1
  421fd0:	adds	x0, x5, x2
  421fd4:	str	x0, [sp, #112]
  421fd8:	b.cc	421fe0 <nftw@plt+0x1f460>  // b.lo, b.ul, b.last
  421fdc:	add	x1, x1, #0x1
  421fe0:	adds	x0, x1, x4
  421fe4:	str	x0, [sp, #120]
  421fe8:	csinc	w6, w6, wzr, cc  // cc = lo, ul, last
  421fec:	ldr	x0, [sp, #120]
  421ff0:	str	x0, [sp, #200]
  421ff4:	ldr	x0, [sp, #112]
  421ff8:	str	x0, [sp, #208]
  421ffc:	strb	w7, [sp, #216]
  422000:	strb	w6, [sp, #217]
  422004:	ldp	x0, x1, [sp, #200]
  422008:	stp	x0, x1, [sp, #128]
  42200c:	ldr	x0, [sp, #216]
  422010:	str	x0, [sp, #144]
  422014:	add	x8, sp, #0xa0
  422018:	mov	x1, x28
  42201c:	add	x0, sp, #0x80
  422020:	bl	420794 <nftw@plt+0x1dc14>
  422024:	ldr	x1, [sp, #160]
  422028:	ldr	x0, [sp, #168]
  42202c:	str	x1, [sp, #200]
  422030:	str	x0, [sp, #208]
  422034:	ldr	x0, [sp, #176]
  422038:	str	x0, [sp, #216]
  42203c:	ubfx	w0, w0, #8, #8
  422040:	ldr	x2, [sp, #208]
  422044:	ldr	x3, [sp, #112]
  422048:	cmp	x3, x2
  42204c:	b.eq	422088 <nftw@plt+0x1f508>  // b.none
  422050:	mov	w0, #0x1                   	// #1
  422054:	strb	w0, [sp, #217]
  422058:	ldp	x0, x1, [sp, #200]
  42205c:	stp	x0, x1, [x19]
  422060:	ldr	x0, [sp, #216]
  422064:	str	x0, [x19, #16]
  422068:	ubfx	w0, w0, #8, #8
  42206c:	ldr	w1, [sp, #108]
  422070:	orr	w0, w0, w1
  422074:	str	w0, [sp, #108]
  422078:	mov	x0, #0x0                   	// #0
  42207c:	b	421eec <nftw@plt+0x1f36c>
  422080:	mov	x1, #0x0                   	// #0
  422084:	b	421fdc <nftw@plt+0x1f45c>
  422088:	ldr	x2, [sp, #120]
  42208c:	cmp	x2, x1
  422090:	csinc	w0, w0, wzr, eq  // eq = none
  422094:	b	422054 <nftw@plt+0x1f4d4>
  422098:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42209c:	add	x2, x2, #0x478
  4220a0:	mov	w1, #0x2                   	// #2
  4220a4:	mov	x0, x22
  4220a8:	bl	41f990 <nftw@plt+0x1ce10>
  4220ac:	ldp	x25, x26, [sp, #64]
  4220b0:	ldp	x27, x28, [sp, #80]
  4220b4:	b	421e6c <nftw@plt+0x1f2ec>
  4220b8:	ldrb	w0, [x22, #1152]
  4220bc:	cmp	w0, #0x0
  4220c0:	cset	w1, ne  // ne = any
  4220c4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4220c8:	add	x2, x2, #0x4a8
  4220cc:	lsl	w1, w1, #1
  4220d0:	mov	x0, x22
  4220d4:	bl	41f990 <nftw@plt+0x1ce10>
  4220d8:	b	421f70 <nftw@plt+0x1f3f0>
  4220dc:	cmp	x3, #0x0
  4220e0:	cset	w6, lt  // lt = tstop
  4220e4:	lsl	x5, x1, #1
  4220e8:	extr	x4, x3, x1, #63
  4220ec:	b	421eb8 <nftw@plt+0x1f338>
  4220f0:	ldp	x25, x26, [sp, #64]
  4220f4:	ldp	x27, x28, [sp, #80]
  4220f8:	b	421e6c <nftw@plt+0x1f2ec>
  4220fc:	ldp	x25, x26, [sp, #64]
  422100:	ldp	x27, x28, [sp, #80]
  422104:	b	421e6c <nftw@plt+0x1f2ec>
  422108:	ldp	x25, x26, [sp, #64]
  42210c:	ldp	x27, x28, [sp, #80]
  422110:	b	421e6c <nftw@plt+0x1f2ec>
  422114:	stp	x29, x30, [sp, #-48]!
  422118:	mov	x29, sp
  42211c:	stp	x19, x20, [sp, #16]
  422120:	str	x21, [sp, #32]
  422124:	mov	x20, x0
  422128:	ldr	x0, [x0, #1096]
  42212c:	ldr	x21, [x20, #1104]
  422130:	sub	x21, x21, x0
  422134:	asr	x19, x21, #3
  422138:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  42213c:	movk	x1, #0xcccd
  422140:	mul	x19, x19, x1
  422144:	add	x19, x19, #0xa
  422148:	add	x19, x19, x19, lsl #2
  42214c:	lsl	x19, x19, #4
  422150:	mov	x1, x19
  422154:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  422158:	str	x0, [x20, #1096]
  42215c:	add	x19, x0, x19
  422160:	str	x19, [x20, #1104]
  422164:	add	x0, x0, x21
  422168:	ldp	x19, x20, [sp, #16]
  42216c:	ldr	x21, [sp, #32]
  422170:	ldp	x29, x30, [sp], #48
  422174:	ret
  422178:	sub	sp, sp, #0x270
  42217c:	stp	x29, x30, [sp]
  422180:	mov	x29, sp
  422184:	stp	x19, x20, [sp, #16]
  422188:	stp	x21, x22, [sp, #32]
  42218c:	stp	x23, x24, [sp, #48]
  422190:	stp	x25, x26, [sp, #64]
  422194:	stp	x27, x28, [sp, #80]
  422198:	mov	x26, x0
  42219c:	and	w0, w1, #0xff
  4221a0:	str	w0, [sp, #212]
  4221a4:	ldr	x28, [x26, #1096]
  4221a8:	str	wzr, [sp, #452]
  4221ac:	str	wzr, [x26, #28]
  4221b0:	str	xzr, [x26, #432]
  4221b4:	mov	w0, #0x16                  	// #22
  4221b8:	str	w0, [x28, #36]
  4221bc:	mov	w0, #0x1                   	// #1
  4221c0:	str	w0, [sp, #128]
  4221c4:	str	wzr, [sp, #196]
  4221c8:	str	wzr, [sp, #116]
  4221cc:	add	x0, sp, #0x120
  4221d0:	str	x0, [sp, #216]
  4221d4:	add	x1, sp, #0x100
  4221d8:	str	x1, [sp, #136]
  4221dc:	str	x0, [sp, #176]
  4221e0:	mov	x27, x26
  4221e4:	b	423790 <nftw@plt+0x20c10>
  4221e8:	cmp	w0, #0x35
  4221ec:	b.eq	423cd4 <nftw@plt+0x21154>  // b.none
  4221f0:	cmp	w0, #0x35
  4221f4:	b.ls	422218 <nftw@plt+0x1f698>  // b.plast
  4221f8:	sub	w1, w0, #0x37
  4221fc:	and	w1, w1, #0xff
  422200:	cmp	w1, #0x5
  422204:	b.hi	422764 <nftw@plt+0x1fbe4>  // b.pmore
  422208:	ldr	w1, [sp, #128]
  42220c:	cbnz	w1, 42227c <nftw@plt+0x1f6fc>
  422210:	mov	x26, x27
  422214:	b	42222c <nftw@plt+0x1f6ac>
  422218:	cmp	w0, #0x25
  42221c:	b.ne	422754 <nftw@plt+0x1fbd4>  // b.any
  422220:	ldr	w0, [sp, #128]
  422224:	cbnz	w0, 423ce4 <nftw@plt+0x21164>
  422228:	mov	x26, x27
  42222c:	ldr	x1, [sp, #120]
  422230:	mov	x0, x26
  422234:	bl	42add4 <nftw@plt+0x28254>
  422238:	mov	x5, x0
  42223c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422240:	add	x4, x4, #0x4f0
  422244:	mov	w3, #0x0                   	// #0
  422248:	ldr	w2, [sp, #132]
  42224c:	mov	w1, #0x3                   	// #3
  422250:	mov	x0, x26
  422254:	bl	41fb7c <nftw@plt+0x1cffc>
  422258:	mov	w0, #0x0                   	// #0
  42225c:	ldp	x19, x20, [sp, #16]
  422260:	ldp	x21, x22, [sp, #32]
  422264:	ldp	x23, x24, [sp, #48]
  422268:	ldp	x25, x26, [sp, #64]
  42226c:	ldp	x27, x28, [sp, #80]
  422270:	ldp	x29, x30, [sp]
  422274:	add	sp, sp, #0x270
  422278:	ret
  42227c:	str	wzr, [sp, #400]
  422280:	cmp	w0, #0x37
  422284:	b.eq	4223a0 <nftw@plt+0x1f820>  // b.none
  422288:	b.ls	422324 <nftw@plt+0x1f7a4>  // b.plast
  42228c:	sub	w0, w0, #0x38
  422290:	and	w0, w0, #0xff
  422294:	cmp	w0, #0x4
  422298:	b.hi	422674 <nftw@plt+0x1faf4>  // b.pmore
  42229c:	add	x3, sp, #0x190
  4222a0:	add	x2, sp, #0x178
  4222a4:	ldr	x1, [sp, #120]
  4222a8:	mov	x0, x27
  4222ac:	bl	41b8e0 <nftw@plt+0x18d60>
  4222b0:	mov	w1, w0
  4222b4:	ldr	w2, [sp, #400]
  4222b8:	cbnz	w2, 42269c <nftw@plt+0x1fb1c>
  4222bc:	mov	x3, #0x0                   	// #0
  4222c0:	tbz	w0, #31, 423d18 <nftw@plt+0x21198>
  4222c4:	mov	x0, #0xffffffffffffffff    	// #-1
  4222c8:	str	x0, [sp, #424]
  4222cc:	orr	x1, x1, #0xffffffff00000000
  4222d0:	str	x1, [sp, #432]
  4222d4:	strb	wzr, [sp, #440]
  4222d8:	strb	wzr, [sp, #441]
  4222dc:	add	x0, sp, #0x280
  4222e0:	ldp	x0, x1, [x0, #-216]
  4222e4:	stp	x0, x1, [sp, #256]
  4222e8:	ldr	x0, [sp, #440]
  4222ec:	str	x0, [sp, #272]
  4222f0:	ldr	x8, [sp, #216]
  4222f4:	ldr	x1, [x27, #1208]
  4222f8:	ldr	x0, [sp, #136]
  4222fc:	bl	420794 <nftw@plt+0x1dc14>
  422300:	ldr	x3, [sp, #288]
  422304:	ldr	x0, [sp, #296]
  422308:	str	x3, [sp, #424]
  42230c:	str	x0, [sp, #432]
  422310:	ldr	x2, [sp, #304]
  422314:	str	x2, [sp, #440]
  422318:	mov	x1, x0
  42231c:	ubfx	w2, w2, #8, #8
  422320:	b	423d18 <nftw@plt+0x21198>
  422324:	cmp	w0, #0x25
  422328:	b.eq	423ce8 <nftw@plt+0x21168>  // b.none
  42232c:	cmp	w0, #0x35
  422330:	b.ne	422674 <nftw@plt+0x1faf4>  // b.any
  422334:	ldr	x0, [sp, #120]
  422338:	ldr	x0, [x0, #8]
  42233c:	ldr	x1, [x27, #1248]
  422340:	cmp	x0, x1
  422344:	b.eq	42246c <nftw@plt+0x1f8ec>  // b.none
  422348:	ldr	x1, [x27, #1288]
  42234c:	cmp	x0, x1
  422350:	b.eq	4225a8 <nftw@plt+0x1fa28>  // b.none
  422354:	ldr	x1, [x27, #1296]
  422358:	cmp	x0, x1
  42235c:	b.eq	4225cc <nftw@plt+0x1fa4c>  // b.none
  422360:	ldrb	w1, [x27, #1120]
  422364:	cbz	w1, 422380 <nftw@plt+0x1f800>
  422368:	ldr	x1, [x27, #1256]
  42236c:	cmp	x0, x1
  422370:	b.eq	4225f0 <nftw@plt+0x1fa70>  // b.none
  422374:	ldr	x2, [x27, #1264]
  422378:	cmp	x0, x2
  42237c:	b.eq	4225f0 <nftw@plt+0x1fa70>  // b.none
  422380:	ldrb	w2, [x27, #1149]
  422384:	cbz	w2, 4226a8 <nftw@plt+0x1fb28>
  422388:	ldr	w1, [x27, #28]
  42238c:	cbz	w1, 422604 <nftw@plt+0x1fa84>
  422390:	mov	w2, #0x0                   	// #0
  422394:	mov	x1, #0x0                   	// #0
  422398:	mov	x3, #0x0                   	// #0
  42239c:	b	423d18 <nftw@plt+0x21198>
  4223a0:	ldr	w3, [sp, #132]
  4223a4:	mov	x2, #0x0                   	// #0
  4223a8:	ldr	x1, [sp, #120]
  4223ac:	mov	x0, x27
  4223b0:	bl	421334 <nftw@plt+0x1e7b4>
  4223b4:	str	w0, [sp, #376]
  4223b8:	tbnz	w0, #24, 422400 <nftw@plt+0x1f880>
  4223bc:	ldr	w2, [sp, #376]
  4223c0:	and	w0, w2, #0xf
  4223c4:	cmp	w0, #0x1
  4223c8:	b.eq	422418 <nftw@plt+0x1f898>  // b.none
  4223cc:	cmp	w0, #0x2
  4223d0:	b.ne	42268c <nftw@plt+0x1fb0c>  // b.any
  4223d4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4223d8:	add	x4, x4, #0x550
  4223dc:	mov	w3, #0x0                   	// #0
  4223e0:	ldr	w2, [sp, #132]
  4223e4:	mov	w1, #0x3                   	// #3
  4223e8:	mov	x0, x27
  4223ec:	bl	41fb7c <nftw@plt+0x1cffc>
  4223f0:	mov	w2, #0x0                   	// #0
  4223f4:	mov	x1, #0x0                   	// #0
  4223f8:	mov	x3, #0x0                   	// #0
  4223fc:	b	423d18 <nftw@plt+0x21198>
  422400:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422404:	add	x2, x2, #0x520
  422408:	mov	w1, #0x3                   	// #3
  42240c:	mov	x0, x27
  422410:	bl	41f990 <nftw@plt+0x1ce10>
  422414:	b	4223bc <nftw@plt+0x1f83c>
  422418:	tbnz	w2, #13, 422440 <nftw@plt+0x1f8c0>
  42241c:	add	x8, sp, #0x1c8
  422420:	ldr	x1, [sp, #120]
  422424:	mov	x0, x27
  422428:	bl	421d8c <nftw@plt+0x1f20c>
  42242c:	ldr	x3, [sp, #456]
  422430:	ldr	x1, [sp, #464]
  422434:	ldrb	w0, [sp, #472]
  422438:	ldrb	w2, [sp, #473]
  42243c:	b	423d3c <nftw@plt+0x211bc>
  422440:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422444:	add	x4, x4, #0x580
  422448:	mov	w3, #0x0                   	// #0
  42244c:	ldr	w2, [sp, #132]
  422450:	mov	w1, #0x3                   	// #3
  422454:	mov	x0, x27
  422458:	bl	41fb7c <nftw@plt+0x1cffc>
  42245c:	mov	w2, #0x0                   	// #0
  422460:	mov	x1, #0x0                   	// #0
  422464:	mov	x3, #0x0                   	// #0
  422468:	b	423d18 <nftw@plt+0x21198>
  42246c:	ldr	x20, [x27, #136]
  422470:	ldrb	w0, [x27, #24]
  422474:	add	w0, w0, #0x1
  422478:	strb	w0, [x27, #24]
  42247c:	mov	x0, x27
  422480:	bl	431a1c <nftw@plt+0x2ee9c>
  422484:	mov	x19, x0
  422488:	ldrb	w0, [x0, #4]
  42248c:	cmp	w0, #0x14
  422490:	b.eq	4224cc <nftw@plt+0x1f94c>  // b.none
  422494:	cmp	w0, #0x35
  422498:	b.eq	423c58 <nftw@plt+0x210d8>  // b.none
  42249c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4224a0:	add	x2, x2, #0x5d0
  4224a4:	mov	w1, #0x3                   	// #3
  4224a8:	mov	x0, x27
  4224ac:	bl	41f990 <nftw@plt+0x1ce10>
  4224b0:	ldrh	w0, [x19, #6]
  4224b4:	tbnz	w0, #4, 422514 <nftw@plt+0x1f994>
  4224b8:	ldrb	w0, [x27, #24]
  4224bc:	sub	w0, w0, #0x1
  4224c0:	strb	w0, [x27, #24]
  4224c4:	mov	w1, #0x0                   	// #0
  4224c8:	b	423cb8 <nftw@plt+0x21138>
  4224cc:	mov	x0, x27
  4224d0:	bl	431a1c <nftw@plt+0x2ee9c>
  4224d4:	mov	x19, x0
  4224d8:	ldrb	w0, [x0, #4]
  4224dc:	cmp	w0, #0x35
  4224e0:	b.ne	42249c <nftw@plt+0x1f91c>  // b.any
  4224e4:	ldr	x19, [x19, #8]
  4224e8:	mov	x0, x27
  4224ec:	bl	431a1c <nftw@plt+0x2ee9c>
  4224f0:	ldrb	w0, [x0, #4]
  4224f4:	cmp	w0, #0x15
  4224f8:	b.eq	423c5c <nftw@plt+0x210dc>  // b.none
  4224fc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422500:	add	x2, x2, #0x5b0
  422504:	mov	w1, #0x3                   	// #3
  422508:	mov	x0, x27
  42250c:	bl	41f990 <nftw@plt+0x1ce10>
  422510:	b	4224b8 <nftw@plt+0x1f938>
  422514:	strh	wzr, [sp, #430]
  422518:	ldrb	w0, [x19, #4]
  42251c:	strb	w0, [sp, #428]
  422520:	mov	x1, x19
  422524:	mov	x0, x27
  422528:	bl	42add4 <nftw@plt+0x28254>
  42252c:	mov	x19, x0
  422530:	add	x1, sp, #0x1a8
  422534:	mov	x0, x27
  422538:	bl	42add4 <nftw@plt+0x28254>
  42253c:	mov	x4, x0
  422540:	mov	x3, x19
  422544:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422548:	add	x2, x2, #0x600
  42254c:	mov	w1, #0x3                   	// #3
  422550:	mov	x0, x27
  422554:	bl	41f990 <nftw@plt+0x1ce10>
  422558:	b	4224b8 <nftw@plt+0x1f938>
  42255c:	add	x0, x27, #0x50
  422560:	cmp	x20, x0
  422564:	b.ne	423c6c <nftw@plt+0x210ec>  // b.any
  422568:	b	423c74 <nftw@plt+0x210f4>
  42256c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422570:	add	x2, x2, #0x630
  422574:	mov	w1, #0x18                  	// #24
  422578:	mov	x0, x27
  42257c:	bl	41fa84 <nftw@plt+0x1cf04>
  422580:	b	423c74 <nftw@plt+0x210f4>
  422584:	ldr	x1, [x19, #24]
  422588:	ldrb	w0, [x1, #19]
  42258c:	orr	w0, w0, #0x20
  422590:	strb	w0, [x1, #19]
  422594:	b	423c84 <nftw@plt+0x21104>
  422598:	mov	x1, x19
  42259c:	mov	x0, x27
  4225a0:	bl	42fc48 <nftw@plt+0x2d0c8>
  4225a4:	b	423c8c <nftw@plt+0x2110c>
  4225a8:	add	x8, sp, #0x1c8
  4225ac:	mov	w1, #0x0                   	// #0
  4225b0:	mov	x0, x27
  4225b4:	bl	420fa0 <nftw@plt+0x1e420>
  4225b8:	ldr	x3, [sp, #456]
  4225bc:	ldr	x1, [sp, #464]
  4225c0:	ldrb	w0, [sp, #472]
  4225c4:	ldrb	w2, [sp, #473]
  4225c8:	b	423d3c <nftw@plt+0x211bc>
  4225cc:	add	x8, sp, #0x1c8
  4225d0:	mov	w1, #0x1                   	// #1
  4225d4:	mov	x0, x27
  4225d8:	bl	420fa0 <nftw@plt+0x1e420>
  4225dc:	ldr	x3, [sp, #456]
  4225e0:	ldr	x1, [sp, #464]
  4225e4:	ldrb	w0, [sp, #472]
  4225e8:	ldrb	w2, [sp, #473]
  4225ec:	b	423d3c <nftw@plt+0x211bc>
  4225f0:	cmp	x0, x1
  4225f4:	cset	x1, eq  // eq = none
  4225f8:	mov	w2, #0x0                   	// #0
  4225fc:	mov	x3, #0x0                   	// #0
  422600:	b	423d18 <nftw@plt+0x21198>
  422604:	ldr	x5, [x0]
  422608:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42260c:	add	x4, x4, #0x660
  422610:	mov	w3, #0x0                   	// #0
  422614:	ldr	w2, [sp, #132]
  422618:	mov	w1, #0xd                   	// #13
  42261c:	mov	x0, x27
  422620:	bl	41fbf4 <nftw@plt+0x1d074>
  422624:	mov	w2, #0x0                   	// #0
  422628:	mov	x1, #0x0                   	// #0
  42262c:	mov	x3, #0x0                   	// #0
  422630:	b	423d18 <nftw@plt+0x21198>
  422634:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422638:	add	x4, x4, #0x688
  42263c:	mov	w3, #0x0                   	// #0
  422640:	ldr	w2, [sp, #132]
  422644:	mov	w1, #0x2                   	// #2
  422648:	mov	x0, x27
  42264c:	bl	41fb7c <nftw@plt+0x1cffc>
  422650:	b	423d00 <nftw@plt+0x21180>
  422654:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422658:	add	x4, x4, #0x6a8
  42265c:	mov	w3, #0x0                   	// #0
  422660:	ldr	w2, [sp, #132]
  422664:	mov	w1, #0x1                   	// #1
  422668:	mov	x0, x27
  42266c:	bl	41fbf4 <nftw@plt+0x1d074>
  422670:	b	423d00 <nftw@plt+0x21180>
  422674:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422678:	add	x2, x2, #0x6d0
  42267c:	mov	w1, #0x4ad                 	// #1197
  422680:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422684:	add	x0, x0, #0x6e0
  422688:	bl	408d8c <nftw@plt+0x620c>
  42268c:	mov	w2, #0x0                   	// #0
  422690:	mov	x1, #0x0                   	// #0
  422694:	mov	x3, #0x0                   	// #0
  422698:	b	423d18 <nftw@plt+0x21198>
  42269c:	mov	w2, #0x0                   	// #0
  4226a0:	mov	x3, #0x0                   	// #0
  4226a4:	b	423d18 <nftw@plt+0x21198>
  4226a8:	mov	x1, #0x0                   	// #0
  4226ac:	mov	x3, #0x0                   	// #0
  4226b0:	b	423d18 <nftw@plt+0x21198>
  4226b4:	ldr	w0, [sp, #116]
  4226b8:	cmp	w0, #0x1
  4226bc:	cset	w0, eq  // eq = none
  4226c0:	str	w0, [sp, #196]
  4226c4:	mov	w26, #0x1                   	// #1
  4226c8:	mov	w3, w26
  4226cc:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4226d0:	add	x0, x0, #0x998
  4226d4:	add	x0, x0, w26, sxtw #1
  4226d8:	ldrb	w0, [x0, #1]
  4226dc:	tbz	w0, #0, 4227a0 <nftw@plt+0x1fc20>
  4226e0:	ldr	w1, [sp, #128]
  4226e4:	cbz	w1, 422798 <nftw@plt+0x1fc18>
  4226e8:	ldr	w1, [x28, #36]
  4226ec:	sub	w2, w1, #0x1
  4226f0:	cmp	w2, #0x1b
  4226f4:	b.hi	422898 <nftw@plt+0x1fd18>  // b.pmore
  4226f8:	cmp	w26, #0x14
  4226fc:	b.eq	423764 <nftw@plt+0x20be4>  // b.none
  422700:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422704:	add	x2, x2, #0x998
  422708:	sbfiz	x3, x3, #1, #32
  42270c:	ldrb	w3, [x2, x3]
  422710:	ubfx	x0, x0, #1, #1
  422714:	sub	w3, w3, w0
  422718:	str	w3, [sp, #152]
  42271c:	mov	w0, w1
  422720:	sbfiz	x1, x1, #1, #32
  422724:	ldrb	w1, [x2, x1]
  422728:	cmp	w3, w1
  42272c:	b.cs	423854 <nftw@plt+0x20cd4>  // b.hs, b.nlast
  422730:	str	x2, [sp, #104]
  422734:	str	w26, [sp, #156]
  422738:	mov	x26, x27
  42273c:	b	4233d8 <nftw@plt+0x20858>
  422740:	ldr	w0, [sp, #128]
  422744:	mov	w26, #0x5                   	// #5
  422748:	cbz	w0, 423bb0 <nftw@plt+0x21030>
  42274c:	mov	w26, #0x1c                  	// #28
  422750:	b	4237e8 <nftw@plt+0x20c68>
  422754:	mov	w26, w0
  422758:	sub	w0, w0, #0x1
  42275c:	cmp	w0, #0x19
  422760:	b.ls	4226c8 <nftw@plt+0x1fb48>  // b.plast
  422764:	ldr	x1, [sp, #120]
  422768:	mov	x0, x27
  42276c:	bl	42add4 <nftw@plt+0x28254>
  422770:	mov	x5, x0
  422774:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422778:	add	x4, x4, #0x6f8
  42277c:	mov	w3, #0x0                   	// #0
  422780:	ldr	w2, [sp, #132]
  422784:	mov	w1, #0x3                   	// #3
  422788:	mov	x0, x27
  42278c:	bl	41fb7c <nftw@plt+0x1cffc>
  422790:	mov	w0, #0x0                   	// #0
  422794:	b	42225c <nftw@plt+0x1f6dc>
  422798:	mov	x26, x27
  42279c:	b	423c24 <nftw@plt+0x210a4>
  4227a0:	ldr	w1, [sp, #128]
  4227a4:	cbz	w1, 4226e8 <nftw@plt+0x1fb68>
  4227a8:	cmp	w26, #0x15
  4227ac:	b.ne	422828 <nftw@plt+0x1fca8>  // b.any
  4227b0:	ldr	w1, [x28, #36]
  4227b4:	cmp	w1, #0x14
  4227b8:	b.eq	422804 <nftw@plt+0x1fc84>  // b.none
  4227bc:	ldr	w1, [x28, #36]
  4227c0:	and	w1, w1, #0xfffffffd
  4227c4:	cmp	w1, #0x14
  4227c8:	b.eq	4226e8 <nftw@plt+0x1fb68>  // b.none
  4227cc:	mov	x26, x27
  4227d0:	ldr	x1, [x28]
  4227d4:	mov	x0, x26
  4227d8:	bl	42add4 <nftw@plt+0x28254>
  4227dc:	mov	x5, x0
  4227e0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4227e4:	add	x4, x4, #0x770
  4227e8:	mov	w3, #0x0                   	// #0
  4227ec:	ldr	w2, [sp, #132]
  4227f0:	mov	w1, #0x3                   	// #3
  4227f4:	mov	x0, x26
  4227f8:	bl	41fb7c <nftw@plt+0x1cffc>
  4227fc:	mov	w0, #0x0                   	// #0
  422800:	b	42225c <nftw@plt+0x1f6dc>
  422804:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422808:	add	x4, x4, #0x730
  42280c:	mov	w3, #0x0                   	// #0
  422810:	ldr	w2, [sp, #132]
  422814:	mov	w1, #0x3                   	// #3
  422818:	mov	x0, x27
  42281c:	bl	41fb7c <nftw@plt+0x1cffc>
  422820:	mov	w0, #0x0                   	// #0
  422824:	b	42225c <nftw@plt+0x1f6dc>
  422828:	cmp	w26, #0x16
  42282c:	b.ne	423bd0 <nftw@plt+0x21050>  // b.any
  422830:	ldr	w1, [x28, #36]
  422834:	cmp	w1, #0x16
  422838:	b.eq	422850 <nftw@plt+0x1fcd0>  // b.none
  42283c:	and	w1, w1, #0xfffffffd
  422840:	cmp	w1, #0x14
  422844:	b.eq	423800 <nftw@plt+0x20c80>  // b.none
  422848:	mov	x26, x27
  42284c:	b	4227d0 <nftw@plt+0x1fc50>
  422850:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422854:	add	x0, x0, #0x4e8
  422858:	adrp	x5, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42285c:	add	x5, x5, #0x4e0
  422860:	ldr	w1, [sp, #212]
  422864:	cmp	w1, #0x0
  422868:	csel	x5, x5, x0, ne  // ne = any
  42286c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422870:	add	x4, x4, #0x758
  422874:	mov	w3, #0x0                   	// #0
  422878:	ldr	w2, [sp, #132]
  42287c:	mov	w1, #0x3                   	// #3
  422880:	mov	x0, x27
  422884:	bl	41fb7c <nftw@plt+0x1cffc>
  422888:	mov	w0, #0x0                   	// #0
  42288c:	b	42225c <nftw@plt+0x1f6dc>
  422890:	mov	x26, x27
  422894:	b	4227d0 <nftw@plt+0x1fc50>
  422898:	mov	x26, x27
  42289c:	ldr	w3, [x28, #36]
  4228a0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4228a4:	add	x2, x2, #0x7c0
  4228a8:	mov	w1, #0x4                   	// #4
  4228ac:	mov	x0, x26
  4228b0:	bl	41f990 <nftw@plt+0x1ce10>
  4228b4:	mov	w0, #0x0                   	// #0
  4228b8:	b	42225c <nftw@plt+0x1f6dc>
  4228bc:	ldrb	w0, [x28, #24]
  4228c0:	ldurb	w1, [x28, #-16]
  4228c4:	cmp	w1, w0
  4228c8:	b.eq	4233f0 <nftw@plt+0x20870>  // b.none
  4228cc:	cbz	w0, 422928 <nftw@plt+0x1fda8>
  4228d0:	ldp	x0, x1, [x28, #-32]
  4228d4:	stp	x0, x1, [sp, #256]
  4228d8:	ldur	x0, [x28, #-16]
  4228dc:	str	x0, [sp, #272]
  4228e0:	ldr	x1, [x26, #1208]
  4228e4:	ldr	x0, [sp, #136]
  4228e8:	bl	4207f8 <nftw@plt+0x1dc78>
  4228ec:	and	w0, w0, #0xff
  4228f0:	cbnz	w0, 4233f0 <nftw@plt+0x20870>
  4228f4:	ldur	w19, [x28, #-8]
  4228f8:	ldr	x1, [x28]
  4228fc:	mov	x0, x26
  422900:	bl	42add4 <nftw@plt+0x28254>
  422904:	mov	x5, x0
  422908:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42290c:	add	x4, x4, #0x7e0
  422910:	mov	w3, #0x0                   	// #0
  422914:	mov	w2, w19
  422918:	mov	w1, #0x0                   	// #0
  42291c:	mov	x0, x26
  422920:	bl	41fb7c <nftw@plt+0x1cffc>
  422924:	b	4233f0 <nftw@plt+0x20870>
  422928:	ldp	x0, x1, [x28, #8]
  42292c:	stp	x0, x1, [sp, #256]
  422930:	ldr	x0, [x28, #24]
  422934:	str	x0, [sp, #272]
  422938:	ldr	x1, [x26, #1208]
  42293c:	ldr	x0, [sp, #136]
  422940:	bl	4207f8 <nftw@plt+0x1dc78>
  422944:	and	w0, w0, #0xff
  422948:	cbnz	w0, 4233f0 <nftw@plt+0x20870>
  42294c:	ldr	w19, [x28, #32]
  422950:	ldr	x1, [x28]
  422954:	mov	x0, x26
  422958:	bl	42add4 <nftw@plt+0x28254>
  42295c:	mov	x5, x0
  422960:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  422964:	add	x4, x4, #0x818
  422968:	mov	w3, #0x0                   	// #0
  42296c:	mov	w2, w19
  422970:	mov	w1, #0x0                   	// #0
  422974:	mov	x0, x26
  422978:	bl	41fb7c <nftw@plt+0x1cffc>
  42297c:	b	4233f0 <nftw@plt+0x20870>
  422980:	ldp	x0, x1, [x28, #8]
  422984:	add	x2, sp, #0x280
  422988:	stp	x0, x1, [x2, #-216]
  42298c:	ldr	x0, [x28, #24]
  422990:	str	x0, [sp, #440]
  422994:	ldr	x19, [x28, #8]
  422998:	ldr	x20, [x28, #16]
  42299c:	ldrb	w22, [x28, #24]
  4229a0:	ldrb	w0, [x28, #25]
  4229a4:	cmp	w21, #0x1b
  4229a8:	b.eq	4229d8 <nftw@plt+0x1fe58>  // b.none
  4229ac:	cmp	w21, #0x1c
  4229b0:	b.eq	422a08 <nftw@plt+0x1fe88>  // b.none
  4229b4:	cmp	w21, #0xe
  4229b8:	b.eq	422aa4 <nftw@plt+0x1ff24>  // b.none
  4229bc:	orr	x19, x19, x20
  4229c0:	cmp	x19, #0x0
  4229c4:	cset	x20, eq  // eq = none
  4229c8:	mov	w0, #0x0                   	// #0
  4229cc:	mov	w22, #0x0                   	// #0
  4229d0:	mov	x19, #0x0                   	// #0
  4229d4:	b	422a60 <nftw@plt+0x1fee0>
  4229d8:	ldrb	w0, [x26, #1138]
  4229dc:	cbz	w0, 422a60 <nftw@plt+0x1fee0>
  4229e0:	ldr	w1, [x26, #28]
  4229e4:	mov	w0, #0x0                   	// #0
  4229e8:	cbnz	w1, 422a60 <nftw@plt+0x1fee0>
  4229ec:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4229f0:	add	x2, x2, #0x850
  4229f4:	mov	w1, #0x6                   	// #6
  4229f8:	mov	x0, x26
  4229fc:	bl	41fa08 <nftw@plt+0x1ce88>
  422a00:	mov	w0, #0x0                   	// #0
  422a04:	b	422a60 <nftw@plt+0x1fee0>
  422a08:	str	x19, [sp, #424]
  422a0c:	str	x20, [sp, #432]
  422a10:	strb	w22, [sp, #440]
  422a14:	strb	w0, [sp, #441]
  422a18:	add	x0, sp, #0x280
  422a1c:	ldp	x0, x1, [x0, #-216]
  422a20:	stp	x0, x1, [sp, #288]
  422a24:	ldr	x0, [sp, #440]
  422a28:	str	x0, [sp, #304]
  422a2c:	ldr	x8, [sp, #136]
  422a30:	ldr	x1, [x26, #1208]
  422a34:	ldr	x0, [sp, #176]
  422a38:	bl	420830 <nftw@plt+0x1dcb0>
  422a3c:	ldr	x19, [sp, #256]
  422a40:	ldr	x0, [sp, #264]
  422a44:	str	x19, [sp, #424]
  422a48:	str	x0, [sp, #432]
  422a4c:	ldr	x0, [sp, #272]
  422a50:	str	x0, [sp, #440]
  422a54:	ldr	x20, [sp, #432]
  422a58:	and	w22, w0, #0xff
  422a5c:	ubfx	w0, w0, #8, #8
  422a60:	str	x19, [sp, #424]
  422a64:	str	x20, [sp, #432]
  422a68:	strb	w22, [sp, #440]
  422a6c:	strb	w0, [sp, #441]
  422a70:	ldr	x1, [sp, #440]
  422a74:	str	x1, [sp, #496]
  422a78:	str	x19, [sp, #480]
  422a7c:	str	x20, [sp, #488]
  422a80:	strb	w22, [sp, #496]
  422a84:	strb	w0, [sp, #497]
  422a88:	ldp	x0, x1, [sp, #480]
  422a8c:	stp	x0, x1, [x28, #-32]
  422a90:	ldr	x0, [sp, #496]
  422a94:	stur	x0, [x28, #-16]
  422a98:	ldr	w0, [x28, #32]
  422a9c:	stur	w0, [x28, #-8]
  422aa0:	b	4233a4 <nftw@plt+0x20824>
  422aa4:	mvn	x19, x19
  422aa8:	str	x19, [sp, #424]
  422aac:	mvn	x20, x20
  422ab0:	str	x20, [sp, #432]
  422ab4:	strb	w22, [sp, #440]
  422ab8:	strb	w0, [sp, #441]
  422abc:	add	x0, sp, #0x280
  422ac0:	ldp	x0, x1, [x0, #-216]
  422ac4:	stp	x0, x1, [sp, #288]
  422ac8:	ldr	x0, [sp, #440]
  422acc:	str	x0, [sp, #304]
  422ad0:	ldr	x8, [sp, #136]
  422ad4:	ldr	x1, [x26, #1208]
  422ad8:	ldr	x0, [sp, #176]
  422adc:	bl	420794 <nftw@plt+0x1dc14>
  422ae0:	ldr	x19, [sp, #256]
  422ae4:	ldr	x0, [sp, #264]
  422ae8:	str	x19, [sp, #424]
  422aec:	str	x0, [sp, #432]
  422af0:	ldr	x22, [sp, #272]
  422af4:	str	x22, [sp, #440]
  422af8:	mov	x20, x0
  422afc:	and	w22, w22, #0xff
  422b00:	mov	w0, #0x0                   	// #0
  422b04:	b	422a60 <nftw@plt+0x1fee0>
  422b08:	ldp	x0, x1, [x28, #-32]
  422b0c:	stp	x0, x1, [sp, #288]
  422b10:	ldur	x0, [x28, #-16]
  422b14:	str	x0, [sp, #304]
  422b18:	ldp	x0, x1, [x28, #8]
  422b1c:	stp	x0, x1, [sp, #224]
  422b20:	ldr	x0, [x28, #24]
  422b24:	str	x0, [sp, #240]
  422b28:	ldr	x8, [sp, #136]
  422b2c:	mov	w3, w21
  422b30:	add	x2, sp, #0xe0
  422b34:	ldr	x1, [sp, #176]
  422b38:	mov	x0, x26
  422b3c:	bl	420bf0 <nftw@plt+0x1e070>
  422b40:	ldp	x0, x1, [sp, #256]
  422b44:	stp	x0, x1, [x28, #-32]
  422b48:	ldr	x0, [sp, #272]
  422b4c:	stur	x0, [x28, #-16]
  422b50:	ldr	w0, [x28, #32]
  422b54:	stur	w0, [x28, #-8]
  422b58:	b	4233a4 <nftw@plt+0x20824>
  422b5c:	ldur	x0, [x28, #-16]
  422b60:	str	x0, [sp, #368]
  422b64:	ldur	x22, [x28, #-32]
  422b68:	ldur	x24, [x28, #-24]
  422b6c:	ldurb	w0, [x28, #-16]
  422b70:	ldurb	w2, [x28, #-15]
  422b74:	ldp	x4, x5, [x28, #8]
  422b78:	add	x1, sp, #0x200
  422b7c:	stp	x4, x5, [x1, #-136]
  422b80:	ldr	x1, [x28, #24]
  422b84:	str	x1, [sp, #392]
  422b88:	ldr	x20, [x28, #8]
  422b8c:	ldr	x23, [x28, #16]
  422b90:	ldr	x25, [x26, #1208]
  422b94:	str	x22, [sp, #352]
  422b98:	str	x24, [sp, #360]
  422b9c:	strb	w0, [sp, #368]
  422ba0:	strb	w2, [sp, #369]
  422ba4:	ldp	x2, x3, [sp, #352]
  422ba8:	stp	x2, x3, [sp, #400]
  422bac:	ldr	x2, [sp, #368]
  422bb0:	str	x2, [sp, #416]
  422bb4:	str	x20, [sp, #376]
  422bb8:	str	x23, [sp, #384]
  422bbc:	add	x2, sp, #0x200
  422bc0:	ldp	x2, x3, [x2, #-136]
  422bc4:	add	x4, sp, #0x280
  422bc8:	stp	x2, x3, [x4, #-216]
  422bcc:	str	x1, [sp, #440]
  422bd0:	cbnz	w0, 422c2c <nftw@plt+0x200ac>
  422bd4:	ldrb	w27, [sp, #392]
  422bd8:	cbnz	w27, 422c2c <nftw@plt+0x200ac>
  422bdc:	strb	w0, [sp, #416]
  422be0:	ldp	x0, x1, [sp, #400]
  422be4:	stp	x0, x1, [sp, #224]
  422be8:	ldr	x0, [sp, #416]
  422bec:	str	x0, [sp, #240]
  422bf0:	mov	x1, x25
  422bf4:	add	x0, sp, #0xe0
  422bf8:	bl	4207f8 <nftw@plt+0x1dc78>
  422bfc:	and	w19, w0, #0xff
  422c00:	strb	w27, [sp, #440]
  422c04:	add	x0, sp, #0x280
  422c08:	ldp	x0, x1, [x0, #-216]
  422c0c:	stp	x0, x1, [sp, #224]
  422c10:	ldr	x0, [sp, #440]
  422c14:	str	x0, [sp, #240]
  422c18:	mov	x1, x25
  422c1c:	add	x0, sp, #0xe0
  422c20:	bl	4207f8 <nftw@plt+0x1dc78>
  422c24:	cmp	w19, w0, uxtb
  422c28:	b.ne	422c48 <nftw@plt+0x200c8>  // b.any
  422c2c:	mov	w19, #0x1                   	// #1
  422c30:	cmp	x22, x20
  422c34:	b.hi	422c48 <nftw@plt+0x200c8>  // b.pmore
  422c38:	cset	w19, eq  // eq = none
  422c3c:	cmp	x24, x23
  422c40:	cset	w0, cs  // cs = hs, nlast
  422c44:	and	w19, w19, w0
  422c48:	cmp	w21, #0x19
  422c4c:	b.eq	422c80 <nftw@plt+0x20100>  // b.none
  422c50:	cmp	w21, #0x3
  422c54:	b.eq	422ccc <nftw@plt+0x2014c>  // b.none
  422c58:	cmp	w21, #0x2
  422c5c:	b.eq	422cd8 <nftw@plt+0x20158>  // b.none
  422c60:	mov	w0, #0x1                   	// #1
  422c64:	cbz	w19, 422c78 <nftw@plt+0x200f8>
  422c68:	cmp	x24, x23
  422c6c:	cset	w0, eq  // eq = none
  422c70:	cmp	x22, x20
  422c74:	csel	w0, w0, wzr, eq  // eq = none
  422c78:	and	x19, x0, #0xff
  422c7c:	b	422c84 <nftw@plt+0x20104>
  422c80:	and	x19, x19, #0xff
  422c84:	str	xzr, [sp, #352]
  422c88:	str	x19, [sp, #360]
  422c8c:	strb	wzr, [sp, #368]
  422c90:	strb	wzr, [sp, #369]
  422c94:	ldr	x0, [sp, #368]
  422c98:	str	x0, [sp, #520]
  422c9c:	str	xzr, [sp, #504]
  422ca0:	str	x19, [sp, #512]
  422ca4:	strb	wzr, [sp, #520]
  422ca8:	strb	wzr, [sp, #521]
  422cac:	add	x0, sp, #0x280
  422cb0:	ldp	x0, x1, [x0, #-136]
  422cb4:	stp	x0, x1, [x28, #-32]
  422cb8:	ldr	x0, [sp, #520]
  422cbc:	stur	x0, [x28, #-16]
  422cc0:	ldr	w0, [x28, #32]
  422cc4:	stur	w0, [x28, #-8]
  422cc8:	b	4233a4 <nftw@plt+0x20824>
  422ccc:	eor	w19, w19, #0x1
  422cd0:	and	x19, x19, #0xff
  422cd4:	b	422c84 <nftw@plt+0x20104>
  422cd8:	cbz	w19, 422cec <nftw@plt+0x2016c>
  422cdc:	cmp	x22, x20
  422ce0:	cset	w19, ne  // ne = any
  422ce4:	cmp	x24, x23
  422ce8:	csinc	w19, w19, wzr, eq  // eq = none
  422cec:	and	x19, x19, #0xff
  422cf0:	b	422c84 <nftw@plt+0x20104>
  422cf4:	ldp	x0, x1, [x28, #-32]
  422cf8:	add	x2, sp, #0x280
  422cfc:	stp	x0, x1, [x2, #-216]
  422d00:	ldur	x0, [x28, #-16]
  422d04:	str	x0, [sp, #440]
  422d08:	ldur	x4, [x28, #-32]
  422d0c:	ldr	x3, [x28, #8]
  422d10:	ldur	x2, [x28, #-24]
  422d14:	ldr	x1, [x28, #16]
  422d18:	mov	w0, #0x0                   	// #0
  422d1c:	cmp	x2, x1
  422d20:	b.eq	422d80 <nftw@plt+0x20200>  // b.none
  422d24:	eor	w1, w0, #0x1
  422d28:	and	w1, w1, #0xff
  422d2c:	cmp	w21, #0x18
  422d30:	csel	w0, w1, w0, eq  // eq = none
  422d34:	and	x0, x0, #0xff
  422d38:	str	xzr, [sp, #424]
  422d3c:	str	x0, [sp, #432]
  422d40:	strb	wzr, [sp, #440]
  422d44:	strb	wzr, [sp, #441]
  422d48:	ldr	x1, [sp, #440]
  422d4c:	str	x1, [sp, #544]
  422d50:	str	xzr, [sp, #528]
  422d54:	str	x0, [sp, #536]
  422d58:	strb	wzr, [sp, #544]
  422d5c:	strb	wzr, [sp, #545]
  422d60:	add	x0, sp, #0x200
  422d64:	ldp	x0, x1, [x0, #16]
  422d68:	stp	x0, x1, [x28, #-32]
  422d6c:	ldr	x0, [sp, #544]
  422d70:	stur	x0, [x28, #-16]
  422d74:	ldr	w0, [x28, #32]
  422d78:	stur	w0, [x28, #-8]
  422d7c:	b	4233a4 <nftw@plt+0x20824>
  422d80:	cmp	x4, x3
  422d84:	cset	w0, eq  // eq = none
  422d88:	b	422d24 <nftw@plt+0x201a4>
  422d8c:	ldp	x0, x1, [x28, #-32]
  422d90:	add	x2, sp, #0x280
  422d94:	stp	x0, x1, [x2, #-216]
  422d98:	ldur	x0, [x28, #-16]
  422d9c:	str	x0, [sp, #440]
  422da0:	ldur	x4, [x28, #-32]
  422da4:	ldur	x6, [x28, #-24]
  422da8:	ldr	x3, [x28, #8]
  422dac:	ldr	x5, [x28, #16]
  422db0:	ldrb	w0, [x28, #24]
  422db4:	ldurb	w1, [x28, #-16]
  422db8:	cmp	w1, #0x0
  422dbc:	csinc	w0, w0, wzr, eq  // eq = none
  422dc0:	and	x1, x6, x5
  422dc4:	and	x2, x4, x3
  422dc8:	cmp	w21, #0x9
  422dcc:	b.eq	422de0 <nftw@plt+0x20260>  // b.none
  422dd0:	eor	x1, x6, x5
  422dd4:	eor	x2, x4, x3
  422dd8:	cmp	w21, #0xa
  422ddc:	b.eq	422e28 <nftw@plt+0x202a8>  // b.none
  422de0:	str	x2, [sp, #424]
  422de4:	str	x1, [sp, #432]
  422de8:	strb	w0, [sp, #440]
  422dec:	strb	wzr, [sp, #441]
  422df0:	ldr	x3, [sp, #440]
  422df4:	str	x3, [sp, #568]
  422df8:	str	x2, [sp, #552]
  422dfc:	str	x1, [sp, #560]
  422e00:	strb	w0, [sp, #568]
  422e04:	strb	wzr, [sp, #569]
  422e08:	add	x0, sp, #0x280
  422e0c:	ldp	x0, x1, [x0, #-88]
  422e10:	stp	x0, x1, [x28, #-32]
  422e14:	ldr	x0, [sp, #568]
  422e18:	stur	x0, [x28, #-16]
  422e1c:	ldr	w0, [x28, #32]
  422e20:	stur	w0, [x28, #-8]
  422e24:	b	4233a4 <nftw@plt+0x20824>
  422e28:	orr	x1, x6, x5
  422e2c:	orr	x2, x4, x3
  422e30:	b	422de0 <nftw@plt+0x20260>
  422e34:	ldp	x0, x1, [x28, #-32]
  422e38:	add	x2, sp, #0x200
  422e3c:	stp	x0, x1, [x2, #-136]
  422e40:	ldur	x0, [x28, #-16]
  422e44:	str	x0, [sp, #392]
  422e48:	ldur	x24, [x28, #-32]
  422e4c:	ldur	x23, [x28, #-24]
  422e50:	ldurb	w0, [x28, #-16]
  422e54:	ldp	x2, x3, [x28, #8]
  422e58:	stp	x2, x3, [sp, #400]
  422e5c:	ldr	x1, [x28, #24]
  422e60:	str	x1, [sp, #416]
  422e64:	ldr	x25, [x28, #8]
  422e68:	ldr	x19, [x28, #16]
  422e6c:	mov	w20, w0
  422e70:	cbnz	w0, 4239a4 <nftw@plt+0x20e24>
  422e74:	ldrb	w21, [x28, #24]
  422e78:	mov	w27, w21
  422e7c:	ldr	x22, [x26, #1208]
  422e80:	cbnz	w21, 4239b0 <nftw@plt+0x20e30>
  422e84:	str	x24, [sp, #376]
  422e88:	str	x23, [sp, #384]
  422e8c:	strb	w0, [sp, #392]
  422e90:	add	x0, sp, #0x200
  422e94:	ldp	x0, x1, [x0, #-136]
  422e98:	stp	x0, x1, [sp, #224]
  422e9c:	ldr	x0, [sp, #392]
  422ea0:	str	x0, [sp, #240]
  422ea4:	mov	x1, x22
  422ea8:	add	x0, sp, #0xe0
  422eac:	bl	4207f8 <nftw@plt+0x1dc78>
  422eb0:	and	w0, w0, #0xff
  422eb4:	mov	w20, w21
  422eb8:	cbz	w0, 422f34 <nftw@plt+0x203b4>
  422ebc:	str	x25, [sp, #400]
  422ec0:	str	x19, [sp, #408]
  422ec4:	strb	w21, [sp, #416]
  422ec8:	ldp	x0, x1, [sp, #400]
  422ecc:	stp	x0, x1, [sp, #224]
  422ed0:	ldr	x0, [sp, #416]
  422ed4:	str	x0, [sp, #240]
  422ed8:	mov	x1, x22
  422edc:	add	x0, sp, #0xe0
  422ee0:	bl	4207f8 <nftw@plt+0x1dc78>
  422ee4:	ands	w21, w0, #0xff
  422ee8:	b.ne	4239b0 <nftw@plt+0x20e30>  // b.any
  422eec:	eor	w20, w20, #0x1
  422ef0:	ldp	x0, x1, [sp, #400]
  422ef4:	stp	x0, x1, [sp, #256]
  422ef8:	ldr	x0, [sp, #416]
  422efc:	str	x0, [sp, #272]
  422f00:	add	x8, sp, #0xe0
  422f04:	mov	x1, x22
  422f08:	ldr	x0, [sp, #136]
  422f0c:	bl	420830 <nftw@plt+0x1dcb0>
  422f10:	ldr	x25, [sp, #224]
  422f14:	str	x25, [sp, #400]
  422f18:	ldr	x0, [sp, #232]
  422f1c:	str	x0, [sp, #408]
  422f20:	ldr	x0, [sp, #240]
  422f24:	str	x0, [sp, #416]
  422f28:	ldr	x19, [sp, #408]
  422f2c:	mov	w27, w21
  422f30:	b	4239b0 <nftw@plt+0x20e30>
  422f34:	add	x0, sp, #0x200
  422f38:	ldp	x0, x1, [x0, #-136]
  422f3c:	stp	x0, x1, [sp, #256]
  422f40:	ldr	x0, [sp, #392]
  422f44:	str	x0, [sp, #272]
  422f48:	add	x8, sp, #0xe0
  422f4c:	mov	x1, x22
  422f50:	ldr	x0, [sp, #136]
  422f54:	bl	420830 <nftw@plt+0x1dcb0>
  422f58:	ldr	x24, [sp, #224]
  422f5c:	str	x24, [sp, #376]
  422f60:	ldr	x0, [sp, #232]
  422f64:	str	x0, [sp, #384]
  422f68:	ldr	x0, [sp, #240]
  422f6c:	str	x0, [sp, #392]
  422f70:	ldr	x23, [sp, #384]
  422f74:	mov	w20, #0x1                   	// #1
  422f78:	b	422ebc <nftw@plt+0x2033c>
  422f7c:	cmp	x21, x23
  422f80:	csinc	w19, w19, wzr, eq  // eq = none
  422f84:	b	423a78 <nftw@plt+0x20ef8>
  422f88:	add	x0, sp, #0x200
  422f8c:	ldp	x0, x1, [x0, #64]
  422f90:	stp	x0, x1, [sp, #256]
  422f94:	ldr	x0, [sp, #592]
  422f98:	str	x0, [sp, #272]
  422f9c:	add	x8, sp, #0xe0
  422fa0:	mov	x1, x22
  422fa4:	ldr	x0, [sp, #136]
  422fa8:	bl	420830 <nftw@plt+0x1dcb0>
  422fac:	ldr	x23, [sp, #224]
  422fb0:	str	x23, [sp, #576]
  422fb4:	ldr	x0, [sp, #232]
  422fb8:	str	x0, [sp, #584]
  422fbc:	ldr	x0, [sp, #240]
  422fc0:	str	x0, [sp, #592]
  422fc4:	ldr	x24, [sp, #584]
  422fc8:	and	w2, w0, #0xff
  422fcc:	ubfx	w0, w0, #8, #8
  422fd0:	b	423a84 <nftw@plt+0x20f04>
  422fd4:	ldr	w25, [x28, #32]
  422fd8:	ldp	x0, x1, [x28, #-32]
  422fdc:	add	x2, sp, #0x200
  422fe0:	stp	x0, x1, [x2, #-184]
  422fe4:	ldur	x0, [x28, #-16]
  422fe8:	str	x0, [sp, #344]
  422fec:	ldurb	w20, [x28, #-16]
  422ff0:	ldurb	w24, [x28, #-15]
  422ff4:	ldp	x0, x1, [x28, #8]
  422ff8:	stp	x0, x1, [sp, #352]
  422ffc:	ldr	x0, [x28, #24]
  423000:	str	x0, [sp, #368]
  423004:	ldr	x19, [x28, #8]
  423008:	ldr	x22, [x28, #16]
  42300c:	str	w20, [sp, #184]
  423010:	cbnz	w20, 423b0c <nftw@plt+0x20f8c>
  423014:	ldrb	w23, [x28, #24]
  423018:	str	w23, [sp, #192]
  42301c:	ldr	x2, [x26, #1208]
  423020:	str	x2, [sp, #144]
  423024:	cbnz	w23, 423134 <nftw@plt+0x205b4>
  423028:	strb	w20, [sp, #344]
  42302c:	strb	w24, [sp, #345]
  423030:	add	x0, sp, #0x200
  423034:	ldp	x0, x1, [x0, #-184]
  423038:	stp	x0, x1, [sp, #224]
  42303c:	ldr	x0, [sp, #344]
  423040:	str	x0, [sp, #240]
  423044:	mov	x1, x2
  423048:	add	x0, sp, #0xe0
  42304c:	bl	4207f8 <nftw@plt+0x1dc78>
  423050:	and	w0, w0, #0xff
  423054:	str	w23, [sp, #188]
  423058:	cbz	w0, 4230e8 <nftw@plt+0x20568>
  42305c:	str	x19, [sp, #352]
  423060:	str	x22, [sp, #360]
  423064:	strb	w23, [sp, #368]
  423068:	ldp	x0, x1, [sp, #352]
  42306c:	stp	x0, x1, [sp, #224]
  423070:	ldr	x0, [sp, #368]
  423074:	str	x0, [sp, #240]
  423078:	ldr	x1, [sp, #144]
  42307c:	add	x0, sp, #0xe0
  423080:	bl	4207f8 <nftw@plt+0x1dc78>
  423084:	ldr	w1, [sp, #188]
  423088:	str	w1, [sp, #184]
  42308c:	ands	w23, w0, #0xff
  423090:	b.ne	423b20 <nftw@plt+0x20fa0>  // b.any
  423094:	ldr	w0, [sp, #188]
  423098:	eor	w0, w0, #0x1
  42309c:	and	w0, w0, #0xff
  4230a0:	str	w0, [sp, #184]
  4230a4:	ldp	x0, x1, [sp, #352]
  4230a8:	stp	x0, x1, [sp, #256]
  4230ac:	ldr	x0, [sp, #368]
  4230b0:	str	x0, [sp, #272]
  4230b4:	add	x8, sp, #0xe0
  4230b8:	ldr	x1, [sp, #144]
  4230bc:	ldr	x0, [sp, #136]
  4230c0:	bl	420830 <nftw@plt+0x1dcb0>
  4230c4:	ldr	x19, [sp, #224]
  4230c8:	str	x19, [sp, #352]
  4230cc:	ldr	x0, [sp, #232]
  4230d0:	str	x0, [sp, #360]
  4230d4:	ldr	x0, [sp, #240]
  4230d8:	str	x0, [sp, #368]
  4230dc:	ldr	x22, [sp, #360]
  4230e0:	str	w23, [sp, #192]
  4230e4:	b	423b20 <nftw@plt+0x20fa0>
  4230e8:	add	x0, sp, #0x200
  4230ec:	ldp	x0, x1, [x0, #-184]
  4230f0:	stp	x0, x1, [sp, #256]
  4230f4:	ldr	x0, [sp, #344]
  4230f8:	str	x0, [sp, #272]
  4230fc:	add	x8, sp, #0xe0
  423100:	ldr	x1, [sp, #144]
  423104:	ldr	x0, [sp, #136]
  423108:	bl	420830 <nftw@plt+0x1dcb0>
  42310c:	ldp	x0, x1, [sp, #224]
  423110:	add	x2, sp, #0x200
  423114:	stp	x0, x1, [x2, #-184]
  423118:	ldr	x0, [sp, #240]
  42311c:	str	x0, [sp, #344]
  423120:	and	w20, w0, #0xff
  423124:	ubfx	w24, w0, #8, #8
  423128:	mov	w0, #0x1                   	// #1
  42312c:	str	w0, [sp, #188]
  423130:	b	42305c <nftw@plt+0x204dc>
  423134:	ldr	w0, [sp, #184]
  423138:	str	w0, [sp, #188]
  42313c:	b	423b20 <nftw@plt+0x20fa0>
  423140:	cbz	x22, 42317c <nftw@plt+0x205fc>
  423144:	ldr	x1, [sp, #144]
  423148:	sub	x20, x1, #0x41
  42314c:	sub	x0, x1, #0x1
  423150:	cmp	x1, #0x41
  423154:	csel	x0, x0, x20, cc  // cc = lo, ul, last
  423158:	mov	x1, #0x1                   	// #1
  42315c:	lsl	x1, x1, x0
  423160:	tst	x22, x1
  423164:	b.ne	423b50 <nftw@plt+0x20fd0>  // b.any
  423168:	sub	x0, x0, #0x1
  42316c:	lsr	x1, x1, #1
  423170:	tst	x22, x1
  423174:	b.eq	423168 <nftw@plt+0x205e8>  // b.none
  423178:	b	423b50 <nftw@plt+0x20fd0>
  42317c:	ldr	w0, [x26, #28]
  423180:	cbz	w0, 4231a8 <nftw@plt+0x20628>
  423184:	strb	w20, [sp, #344]
  423188:	strb	w24, [sp, #345]
  42318c:	ldr	x0, [sp, #344]
  423190:	str	x0, [sp, #616]
  423194:	ldr	x0, [sp, #328]
  423198:	str	x0, [sp, #160]
  42319c:	ldr	x0, [sp, #336]
  4231a0:	str	x0, [sp, #168]
  4231a4:	b	423370 <nftw@plt+0x207f0>
  4231a8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4231ac:	add	x4, x4, #0x880
  4231b0:	mov	w3, #0x0                   	// #0
  4231b4:	mov	w2, w25
  4231b8:	mov	w1, #0x3                   	// #3
  4231bc:	mov	x0, x26
  4231c0:	bl	41fb7c <nftw@plt+0x1cffc>
  4231c4:	b	423184 <nftw@plt+0x20604>
  4231c8:	cbnz	w23, 423298 <nftw@plt+0x20718>
  4231cc:	cbz	x20, 423330 <nftw@plt+0x207b0>
  4231d0:	extr	x22, x19, x22, #1
  4231d4:	lsr	x19, x19, #1
  4231d8:	sub	x20, x20, #0x1
  4231dc:	strb	w27, [sp, #344]
  4231e0:	strb	w24, [sp, #345]
  4231e4:	add	x0, sp, #0x200
  4231e8:	ldp	x0, x1, [x0, #-184]
  4231ec:	stp	x0, x1, [sp, #400]
  4231f0:	ldr	x0, [sp, #344]
  4231f4:	str	x0, [sp, #416]
  4231f8:	ldr	x21, [sp, #328]
  4231fc:	ldr	x25, [sp, #336]
  423200:	str	x19, [sp, #376]
  423204:	str	x22, [sp, #384]
  423208:	add	x0, sp, #0x200
  42320c:	ldp	x0, x1, [x0, #-136]
  423210:	add	x2, sp, #0x280
  423214:	stp	x0, x1, [x2, #-216]
  423218:	ldr	x0, [sp, #392]
  42321c:	str	x0, [sp, #440]
  423220:	cbnz	w27, 423284 <nftw@plt+0x20704>
  423224:	ldrb	w28, [sp, #392]
  423228:	cbnz	w28, 423284 <nftw@plt+0x20704>
  42322c:	str	x21, [sp, #400]
  423230:	str	x25, [sp, #408]
  423234:	strb	w27, [sp, #416]
  423238:	ldp	x0, x1, [sp, #400]
  42323c:	stp	x0, x1, [sp, #224]
  423240:	ldr	x0, [sp, #416]
  423244:	str	x0, [sp, #240]
  423248:	ldr	x1, [sp, #144]
  42324c:	add	x0, sp, #0xe0
  423250:	bl	4207f8 <nftw@plt+0x1dc78>
  423254:	and	w23, w0, #0xff
  423258:	strb	w28, [sp, #440]
  42325c:	add	x0, sp, #0x280
  423260:	ldp	x0, x1, [x0, #-216]
  423264:	stp	x0, x1, [sp, #224]
  423268:	ldr	x0, [sp, #440]
  42326c:	str	x0, [sp, #240]
  423270:	ldr	x1, [sp, #144]
  423274:	add	x0, sp, #0xe0
  423278:	bl	4207f8 <nftw@plt+0x1dc78>
  42327c:	cmp	w23, w0, uxtb
  423280:	b.ne	4231c8 <nftw@plt+0x20648>  // b.any
  423284:	cmp	x19, x21
  423288:	b.cc	423298 <nftw@plt+0x20718>  // b.lo, b.ul, b.last
  42328c:	b.ne	4231cc <nftw@plt+0x2064c>  // b.any
  423290:	cmp	x22, x25
  423294:	b.hi	4231cc <nftw@plt+0x2064c>  // b.pmore
  423298:	add	x0, sp, #0x200
  42329c:	ldp	x0, x1, [x0, #-184]
  4232a0:	stp	x0, x1, [sp, #256]
  4232a4:	ldr	x0, [sp, #344]
  4232a8:	str	x0, [sp, #272]
  4232ac:	add	x0, sp, #0x200
  4232b0:	ldp	x0, x1, [x0, #-136]
  4232b4:	stp	x0, x1, [sp, #288]
  4232b8:	ldr	x0, [sp, #392]
  4232bc:	str	x0, [sp, #304]
  4232c0:	add	x8, sp, #0xe0
  4232c4:	mov	w3, #0x5                   	// #5
  4232c8:	ldr	x2, [sp, #176]
  4232cc:	ldr	x1, [sp, #136]
  4232d0:	mov	x0, x26
  4232d4:	bl	420bf0 <nftw@plt+0x1e070>
  4232d8:	ldp	x0, x1, [sp, #224]
  4232dc:	add	x2, sp, #0x200
  4232e0:	stp	x0, x1, [x2, #-184]
  4232e4:	ldr	x24, [sp, #240]
  4232e8:	str	x24, [sp, #344]
  4232ec:	and	w27, w24, #0xff
  4232f0:	ubfx	w24, w24, #8, #8
  4232f4:	cmp	x20, #0x3f
  4232f8:	b.ls	423318 <nftw@plt+0x20798>  // b.plast
  4232fc:	sub	w0, w20, #0x40
  423300:	mov	x1, #0x1                   	// #1
  423304:	lsl	x0, x1, x0
  423308:	ldr	x1, [sp, #160]
  42330c:	orr	x0, x1, x0
  423310:	str	x0, [sp, #160]
  423314:	b	4231d0 <nftw@plt+0x20650>
  423318:	mov	x0, #0x1                   	// #1
  42331c:	lsl	x0, x0, x20
  423320:	ldr	x1, [sp, #168]
  423324:	orr	x0, x1, x0
  423328:	str	x0, [sp, #168]
  42332c:	b	4231cc <nftw@plt+0x2064c>
  423330:	ldr	x28, [sp, #200]
  423334:	ldr	w21, [sp, #208]
  423338:	cmp	w21, #0x7
  42333c:	b.eq	423418 <nftw@plt+0x20898>  // b.none
  423340:	ldr	w20, [sp, #192]
  423344:	mov	w24, #0x0                   	// #0
  423348:	ldr	w0, [sp, #188]
  42334c:	cbnz	w0, 423528 <nftw@plt+0x209a8>
  423350:	strb	w20, [sp, #344]
  423354:	strb	w24, [sp, #345]
  423358:	ldr	x0, [sp, #344]
  42335c:	str	x0, [sp, #616]
  423360:	ldr	x0, [sp, #328]
  423364:	str	x0, [sp, #160]
  423368:	ldr	x0, [sp, #336]
  42336c:	str	x0, [sp, #168]
  423370:	ldr	x0, [sp, #160]
  423374:	str	x0, [sp, #600]
  423378:	ldr	x0, [sp, #168]
  42337c:	str	x0, [sp, #608]
  423380:	strb	w20, [sp, #616]
  423384:	strb	w24, [sp, #617]
  423388:	add	x0, sp, #0x280
  42338c:	ldp	x0, x1, [x0, #-40]
  423390:	stp	x0, x1, [x28, #-32]
  423394:	ldr	x0, [sp, #616]
  423398:	stur	x0, [x28, #-16]
  42339c:	ldr	w0, [x28, #32]
  4233a0:	stur	w0, [x28, #-8]
  4233a4:	sub	x19, x28, #0x28
  4233a8:	ldurb	w0, [x28, #-15]
  4233ac:	cbz	w0, 4233b8 <nftw@plt+0x20838>
  4233b0:	ldr	w0, [x26, #28]
  4233b4:	cbz	w0, 423830 <nftw@plt+0x20cb0>
  4233b8:	ldr	w0, [x19, #36]
  4233bc:	sbfiz	x1, x0, #1, #32
  4233c0:	ldr	x2, [sp, #104]
  4233c4:	ldrb	w1, [x2, x1]
  4233c8:	ldr	w2, [sp, #152]
  4233cc:	cmp	w2, w1
  4233d0:	b.cs	423848 <nftw@plt+0x20cc8>  // b.hs, b.nlast
  4233d4:	mov	x28, x19
  4233d8:	ldrb	w1, [x26, #1141]
  4233dc:	cbz	w1, 4233f0 <nftw@plt+0x20870>
  4233e0:	ldr	x1, [sp, #104]
  4233e4:	add	x0, x1, w0, sxtw #1
  4233e8:	ldrb	w0, [x0, #1]
  4233ec:	tbnz	w0, #2, 4228bc <nftw@plt+0x1fd3c>
  4233f0:	ldr	w21, [x28, #36]
  4233f4:	sub	w1, w21, #0x1
  4233f8:	cmp	w1, #0x1b
  4233fc:	b.hi	42289c <nftw@plt+0x1fd1c>  // b.pmore
  423400:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423404:	add	x0, x0, #0x960
  423408:	ldrh	w0, [x0, w1, uxtw #1]
  42340c:	adr	x1, 423418 <nftw@plt+0x20898>
  423410:	add	x0, x1, w0, sxth #2
  423414:	br	x0
  423418:	ldr	w0, [sp, #192]
  42341c:	cbnz	w0, 42351c <nftw@plt+0x2099c>
  423420:	mov	w20, #0x0                   	// #0
  423424:	ldr	w1, [sp, #184]
  423428:	cbnz	w1, 4234b0 <nftw@plt+0x20930>
  42342c:	ldr	x19, [sp, #160]
  423430:	str	x19, [sp, #424]
  423434:	ldr	x21, [sp, #168]
  423438:	str	x21, [sp, #432]
  42343c:	strb	w20, [sp, #440]
  423440:	strb	w0, [sp, #441]
  423444:	add	x0, sp, #0x280
  423448:	ldp	x0, x1, [x0, #-216]
  42344c:	stp	x0, x1, [sp, #224]
  423450:	ldr	x0, [sp, #440]
  423454:	str	x0, [sp, #240]
  423458:	ldr	x1, [sp, #144]
  42345c:	add	x0, sp, #0xe0
  423460:	bl	4207f8 <nftw@plt+0x1dc78>
  423464:	ldr	w1, [sp, #184]
  423468:	eor	w1, w1, #0x1
  42346c:	and	w1, w1, #0xff
  423470:	cmp	w1, w0, uxtb
  423474:	b.eq	423488 <nftw@plt+0x20908>  // b.none
  423478:	orr	x0, x19, x21
  42347c:	cmp	x0, #0x0
  423480:	cset	w0, ne  // ne = any
  423484:	str	w0, [sp, #192]
  423488:	ldr	w24, [sp, #192]
  42348c:	ldr	x0, [sp, #160]
  423490:	str	x0, [sp, #424]
  423494:	ldr	x0, [sp, #168]
  423498:	str	x0, [sp, #432]
  42349c:	strb	w20, [sp, #440]
  4234a0:	strb	w24, [sp, #441]
  4234a4:	ldr	x0, [sp, #440]
  4234a8:	str	x0, [sp, #616]
  4234ac:	b	423370 <nftw@plt+0x207f0>
  4234b0:	ldr	x0, [sp, #160]
  4234b4:	str	x0, [sp, #424]
  4234b8:	ldr	x0, [sp, #168]
  4234bc:	str	x0, [sp, #432]
  4234c0:	strb	wzr, [sp, #440]
  4234c4:	strb	wzr, [sp, #441]
  4234c8:	add	x0, sp, #0x280
  4234cc:	ldp	x0, x1, [x0, #-216]
  4234d0:	stp	x0, x1, [sp, #256]
  4234d4:	ldr	x0, [sp, #440]
  4234d8:	str	x0, [sp, #272]
  4234dc:	add	x8, sp, #0xe0
  4234e0:	ldr	x1, [sp, #144]
  4234e4:	ldr	x0, [sp, #136]
  4234e8:	bl	420830 <nftw@plt+0x1dcb0>
  4234ec:	ldr	x1, [sp, #224]
  4234f0:	str	x1, [sp, #424]
  4234f4:	ldr	x0, [sp, #232]
  4234f8:	str	x0, [sp, #432]
  4234fc:	ldr	x0, [sp, #240]
  423500:	str	x0, [sp, #440]
  423504:	str	x1, [sp, #160]
  423508:	ldr	x1, [sp, #432]
  42350c:	str	x1, [sp, #168]
  423510:	and	w20, w0, #0xff
  423514:	ubfx	w0, w0, #8, #8
  423518:	b	42342c <nftw@plt+0x208ac>
  42351c:	mov	w24, #0x0                   	// #0
  423520:	mov	w20, #0x1                   	// #1
  423524:	b	42348c <nftw@plt+0x2090c>
  423528:	ldrb	w0, [sp, #192]
  42352c:	strb	w0, [sp, #344]
  423530:	strb	wzr, [sp, #345]
  423534:	add	x0, sp, #0x200
  423538:	ldp	x0, x1, [x0, #-184]
  42353c:	stp	x0, x1, [sp, #256]
  423540:	ldr	x0, [sp, #344]
  423544:	str	x0, [sp, #272]
  423548:	add	x8, sp, #0xe0
  42354c:	ldr	x1, [sp, #144]
  423550:	ldr	x0, [sp, #136]
  423554:	bl	420830 <nftw@plt+0x1dcb0>
  423558:	ldp	x0, x1, [sp, #224]
  42355c:	add	x2, sp, #0x200
  423560:	stp	x0, x1, [x2, #-184]
  423564:	ldr	x0, [sp, #240]
  423568:	str	x0, [sp, #344]
  42356c:	and	w20, w0, #0xff
  423570:	ubfx	w24, w0, #8, #8
  423574:	b	423350 <nftw@plt+0x207d0>
  423578:	sub	x19, x28, #0x28
  42357c:	ldur	x0, [x28, #-24]
  423580:	ldur	x1, [x28, #-32]
  423584:	orr	x0, x0, x1
  423588:	cbz	x0, 4235cc <nftw@plt+0x20a4c>
  42358c:	ldr	w0, [x26, #28]
  423590:	sub	w0, w0, #0x1
  423594:	str	w0, [x26, #28]
  423598:	ldur	x1, [x28, #-24]
  42359c:	ldur	x0, [x28, #-32]
  4235a0:	orr	x1, x1, x0
  4235a4:	mov	w0, #0x1                   	// #1
  4235a8:	cbz	x1, 4235cc <nftw@plt+0x20a4c>
  4235ac:	and	x0, x0, #0xff
  4235b0:	stur	x0, [x28, #-24]
  4235b4:	stur	xzr, [x28, #-32]
  4235b8:	sturb	wzr, [x28, #-16]
  4235bc:	sturb	wzr, [x28, #-15]
  4235c0:	ldr	w0, [x28, #32]
  4235c4:	stur	w0, [x28, #-8]
  4235c8:	b	4233b8 <nftw@plt+0x20838>
  4235cc:	ldr	x0, [x28, #16]
  4235d0:	ldr	x1, [x28, #8]
  4235d4:	orr	x0, x0, x1
  4235d8:	cmp	x0, #0x0
  4235dc:	cset	w0, ne  // ne = any
  4235e0:	b	4235ac <nftw@plt+0x20a2c>
  4235e4:	sub	x19, x28, #0x28
  4235e8:	ldur	x0, [x28, #-24]
  4235ec:	ldur	x1, [x28, #-32]
  4235f0:	orr	x0, x0, x1
  4235f4:	cbnz	x0, 423638 <nftw@plt+0x20ab8>
  4235f8:	ldr	w0, [x26, #28]
  4235fc:	sub	w0, w0, #0x1
  423600:	str	w0, [x26, #28]
  423604:	ldur	x0, [x28, #-24]
  423608:	ldur	x1, [x28, #-32]
  42360c:	orr	x0, x0, x1
  423610:	cbnz	x0, 423638 <nftw@plt+0x20ab8>
  423614:	mov	w0, #0x0                   	// #0
  423618:	and	x0, x0, #0xff
  42361c:	stur	x0, [x28, #-24]
  423620:	stur	xzr, [x28, #-32]
  423624:	sturb	wzr, [x28, #-16]
  423628:	sturb	wzr, [x28, #-15]
  42362c:	ldr	w0, [x28, #32]
  423630:	stur	w0, [x28, #-8]
  423634:	b	4233b8 <nftw@plt+0x20838>
  423638:	ldr	x1, [x28, #16]
  42363c:	ldr	x0, [x28, #8]
  423640:	orr	x1, x1, x0
  423644:	mov	w0, #0x1                   	// #1
  423648:	cbnz	x1, 423618 <nftw@plt+0x20a98>
  42364c:	b	423614 <nftw@plt+0x20a94>
  423650:	mov	x27, x26
  423654:	ldr	w26, [sp, #156]
  423658:	cmp	w26, #0x15
  42365c:	b.ne	423684 <nftw@plt+0x20b04>  // b.any
  423660:	sub	x0, x28, #0x28
  423664:	ldp	x2, x3, [x28, #8]
  423668:	stp	x2, x3, [x28, #-32]
  42366c:	ldr	x1, [x28, #24]
  423670:	stur	x1, [x28, #-16]
  423674:	ldr	w1, [x28, #32]
  423678:	stur	w1, [x28, #-8]
  42367c:	mov	x28, x0
  423680:	b	423790 <nftw@plt+0x20c10>
  423684:	ldr	x0, [x28]
  423688:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42368c:	add	x4, x4, #0x898
  423690:	mov	w3, #0x0                   	// #0
  423694:	ldr	w2, [x0]
  423698:	mov	w1, #0x3                   	// #3
  42369c:	mov	x0, x27
  4236a0:	bl	41fb7c <nftw@plt+0x1cffc>
  4236a4:	b	4228b4 <nftw@plt+0x1fd34>
  4236a8:	sub	x19, x28, #0x50
  4236ac:	ldur	x0, [x28, #-64]
  4236b0:	ldur	x1, [x28, #-72]
  4236b4:	orr	x0, x0, x1
  4236b8:	cbz	x0, 4236f4 <nftw@plt+0x20b74>
  4236bc:	ldr	w0, [x26, #28]
  4236c0:	sub	w0, w0, #0x1
  4236c4:	str	w0, [x26, #28]
  4236c8:	ldp	x0, x1, [x28, #-32]
  4236cc:	stp	x0, x1, [x28, #-72]
  4236d0:	ldur	x0, [x28, #-16]
  4236d4:	stur	x0, [x28, #-56]
  4236d8:	ldur	w0, [x28, #-8]
  4236dc:	stur	w0, [x28, #-48]
  4236e0:	ldurb	w0, [x28, #-16]
  4236e4:	cbnz	w0, 4236ec <nftw@plt+0x20b6c>
  4236e8:	ldrb	w0, [x28, #24]
  4236ec:	sturb	w0, [x28, #-56]
  4236f0:	b	4233b8 <nftw@plt+0x20838>
  4236f4:	ldp	x0, x1, [x28, #8]
  4236f8:	stp	x0, x1, [x28, #-72]
  4236fc:	ldr	x0, [x28, #24]
  423700:	stur	x0, [x28, #-56]
  423704:	ldr	w0, [x28, #32]
  423708:	stur	w0, [x28, #-48]
  42370c:	b	4236e0 <nftw@plt+0x20b60>
  423710:	mov	x27, x26
  423714:	ldr	w26, [sp, #156]
  423718:	sub	w0, w26, #0x12
  42371c:	cmp	w0, #0x1
  423720:	b.hi	423818 <nftw@plt+0x20c98>  // b.pmore
  423724:	cmp	w26, #0x16
  423728:	b.eq	423918 <nftw@plt+0x20d98>  // b.none
  42372c:	cmp	w26, #0x11
  423730:	b.eq	4238b4 <nftw@plt+0x20d34>  // b.none
  423734:	b.hi	423874 <nftw@plt+0x20cf4>  // b.pmore
  423738:	cmp	w26, #0xf
  42373c:	b.eq	4238b4 <nftw@plt+0x20d34>  // b.none
  423740:	cmp	w26, #0x10
  423744:	b.ne	423764 <nftw@plt+0x20be4>  // b.any
  423748:	ldr	x0, [x28, #16]
  42374c:	ldr	x1, [x28, #8]
  423750:	orr	x0, x0, x1
  423754:	cbz	x0, 423764 <nftw@plt+0x20be4>
  423758:	ldr	w0, [x27, #28]
  42375c:	add	w0, w0, #0x1
  423760:	str	w0, [x27, #28]
  423764:	add	x28, x28, #0x28
  423768:	ldr	x0, [x27, #1104]
  42376c:	cmp	x0, x28
  423770:	b.eq	423908 <nftw@plt+0x20d88>  // b.none
  423774:	str	w26, [x28, #36]
  423778:	ldr	x0, [sp, #120]
  42377c:	str	x0, [x28]
  423780:	ldr	w0, [sp, #132]
  423784:	str	w0, [x28, #32]
  423788:	mov	w0, #0x1                   	// #1
  42378c:	str	w0, [sp, #128]
  423790:	ldr	w0, [sp, #116]
  423794:	add	w0, w0, #0x1
  423798:	str	w0, [sp, #116]
  42379c:	add	x1, sp, #0x1c4
  4237a0:	mov	x0, x27
  4237a4:	bl	431ac0 <nftw@plt+0x2ef40>
  4237a8:	str	x0, [sp, #120]
  4237ac:	ldrb	w0, [x0, #4]
  4237b0:	ldr	w1, [sp, #452]
  4237b4:	str	w1, [sp, #132]
  4237b8:	cmp	w0, #0x5
  4237bc:	b.eq	422740 <nftw@plt+0x1fbc0>  // b.none
  4237c0:	cmp	w0, #0x5
  4237c4:	b.hi	4221e8 <nftw@plt+0x1f668>  // b.pmore
  4237c8:	cmp	w0, #0x1
  4237cc:	b.eq	4226b4 <nftw@plt+0x1fb34>  // b.none
  4237d0:	cmp	w0, #0x4
  4237d4:	b.ne	422754 <nftw@plt+0x1fbd4>  // b.any
  4237d8:	ldr	w0, [sp, #128]
  4237dc:	mov	w26, #0x4                   	// #4
  4237e0:	cbz	w0, 423bb0 <nftw@plt+0x21030>
  4237e4:	mov	w26, #0x1b                  	// #27
  4237e8:	mov	w3, w26
  4237ec:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4237f0:	add	x0, x0, #0x998
  4237f4:	add	x0, x0, w26, sxtw #1
  4237f8:	ldrb	w0, [x0, #1]
  4237fc:	tbz	w0, #0, 423bc8 <nftw@plt+0x21048>
  423800:	ldr	w1, [x28, #36]
  423804:	sub	w2, w1, #0x1
  423808:	cmp	w2, #0x1b
  42380c:	b.ls	422700 <nftw@plt+0x1fb80>  // b.plast
  423810:	mov	x26, x27
  423814:	b	42289c <nftw@plt+0x1fd1c>
  423818:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42381c:	add	x2, x2, #0x8b8
  423820:	mov	w1, #0x3                   	// #3
  423824:	mov	x0, x27
  423828:	bl	41f990 <nftw@plt+0x1ce10>
  42382c:	b	4228b4 <nftw@plt+0x1fd34>
  423830:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423834:	add	x2, x2, #0x8d8
  423838:	mov	w1, #0x2                   	// #2
  42383c:	mov	x0, x26
  423840:	bl	41f990 <nftw@plt+0x1ce10>
  423844:	b	4233b8 <nftw@plt+0x20838>
  423848:	mov	x27, x26
  42384c:	ldr	w26, [sp, #156]
  423850:	mov	x28, x19
  423854:	cmp	w26, #0x15
  423858:	b.ne	423724 <nftw@plt+0x20ba4>  // b.any
  42385c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423860:	add	x2, x2, #0x908
  423864:	mov	w1, #0x3                   	// #3
  423868:	mov	x0, x27
  42386c:	bl	41f990 <nftw@plt+0x1ce10>
  423870:	b	4228b4 <nftw@plt+0x1fd34>
  423874:	cmp	w26, #0x12
  423878:	b.ne	4238a8 <nftw@plt+0x20d28>  // b.any
  42387c:	ldr	w0, [x28, #36]
  423880:	cmp	w0, #0x11
  423884:	b.ne	4238d4 <nftw@plt+0x20d54>  // b.any
  423888:	ldur	x0, [x28, #-24]
  42388c:	ldur	x1, [x28, #-32]
  423890:	orr	x0, x0, x1
  423894:	cbz	x0, 4238f8 <nftw@plt+0x20d78>
  423898:	ldr	w0, [x27, #28]
  42389c:	add	w0, w0, #0x1
  4238a0:	str	w0, [x27, #28]
  4238a4:	b	423764 <nftw@plt+0x20be4>
  4238a8:	cmp	w26, #0x15
  4238ac:	b.eq	423790 <nftw@plt+0x20c10>  // b.none
  4238b0:	b	423764 <nftw@plt+0x20be4>
  4238b4:	ldr	x0, [x28, #16]
  4238b8:	ldr	x1, [x28, #8]
  4238bc:	orr	x0, x0, x1
  4238c0:	cbnz	x0, 423764 <nftw@plt+0x20be4>
  4238c4:	ldr	w0, [x27, #28]
  4238c8:	add	w0, w0, #0x1
  4238cc:	str	w0, [x27, #28]
  4238d0:	b	423764 <nftw@plt+0x20be4>
  4238d4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4238d8:	add	x4, x4, #0x928
  4238dc:	mov	w3, #0x0                   	// #0
  4238e0:	ldr	w2, [sp, #132]
  4238e4:	mov	w1, #0x3                   	// #3
  4238e8:	mov	x0, x27
  4238ec:	bl	41fb7c <nftw@plt+0x1cffc>
  4238f0:	mov	w0, #0x0                   	// #0
  4238f4:	b	42225c <nftw@plt+0x1f6dc>
  4238f8:	ldr	w0, [x27, #28]
  4238fc:	sub	w0, w0, #0x1
  423900:	str	w0, [x27, #28]
  423904:	b	423764 <nftw@plt+0x20be4>
  423908:	mov	x0, x27
  42390c:	bl	422114 <nftw@plt+0x1f594>
  423910:	mov	x28, x0
  423914:	b	423774 <nftw@plt+0x20bf4>
  423918:	mov	x26, x27
  42391c:	ldr	x0, [x27, #432]
  423920:	cbz	x0, 423940 <nftw@plt+0x20dc0>
  423924:	ldr	w0, [sp, #196]
  423928:	eor	w0, w0, #0x1
  42392c:	ldr	w1, [sp, #116]
  423930:	cmp	w1, #0x3
  423934:	csinc	w0, w0, wzr, eq  // eq = none
  423938:	cbz	w0, 423940 <nftw@plt+0x20dc0>
  42393c:	str	xzr, [x27, #432]
  423940:	ldr	x0, [x26, #1096]
  423944:	cmp	x0, x28
  423948:	b.eq	42398c <nftw@plt+0x20e0c>  // b.none
  42394c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423950:	add	x0, x0, #0x4e8
  423954:	adrp	x5, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423958:	add	x5, x5, #0x4e0
  42395c:	ldr	w1, [sp, #212]
  423960:	cmp	w1, #0x0
  423964:	csel	x5, x5, x0, ne  // ne = any
  423968:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42396c:	add	x4, x4, #0x948
  423970:	mov	w3, #0x0                   	// #0
  423974:	ldr	w2, [x28, #32]
  423978:	mov	w1, #0x4                   	// #4
  42397c:	mov	x0, x26
  423980:	bl	41fb7c <nftw@plt+0x1cffc>
  423984:	mov	w0, #0x0                   	// #0
  423988:	b	42225c <nftw@plt+0x1f6dc>
  42398c:	ldr	x0, [x28, #16]
  423990:	ldr	x1, [x28, #8]
  423994:	orr	x0, x0, x1
  423998:	cmp	x0, #0x0
  42399c:	cset	w0, ne  // ne = any
  4239a0:	b	42225c <nftw@plt+0x1f6dc>
  4239a4:	ldr	x22, [x26, #1208]
  4239a8:	mov	w27, w0
  4239ac:	mov	w20, #0x0                   	// #0
  4239b0:	add	x8, sp, #0x240
  4239b4:	mov	x1, x19
  4239b8:	mov	x0, x23
  4239bc:	bl	420b80 <nftw@plt+0x1e000>
  4239c0:	ldr	x21, [sp, #576]
  4239c4:	ldr	x0, [sp, #584]
  4239c8:	str	x0, [sp, #144]
  4239cc:	add	x8, sp, #0x1a8
  4239d0:	mov	x1, x19
  4239d4:	mov	x0, x24
  4239d8:	bl	420b80 <nftw@plt+0x1e000>
  4239dc:	ldr	x0, [sp, #432]
  4239e0:	add	x21, x21, x0
  4239e4:	ldr	x0, [sp, #424]
  4239e8:	mov	w19, #0x1                   	// #1
  4239ec:	cbnz	x0, 423a00 <nftw@plt+0x20e80>
  4239f0:	cmp	x25, #0x0
  4239f4:	cset	w19, ne  // ne = any
  4239f8:	cmp	x24, #0x0
  4239fc:	csel	w19, w19, wzr, ne  // ne = any
  423a00:	add	x8, sp, #0x1a8
  423a04:	mov	x1, x25
  423a08:	mov	x0, x23
  423a0c:	bl	420b80 <nftw@plt+0x1e000>
  423a10:	ldr	x0, [sp, #432]
  423a14:	add	x21, x21, x0
  423a18:	ldr	x0, [sp, #424]
  423a1c:	cmp	x0, #0x0
  423a20:	csinc	w19, w19, wzr, eq  // eq = none
  423a24:	str	x21, [sp, #576]
  423a28:	add	x0, sp, #0x200
  423a2c:	ldp	x0, x1, [x0, #64]
  423a30:	stp	x0, x1, [sp, #256]
  423a34:	ldr	x0, [sp, #592]
  423a38:	str	x0, [sp, #272]
  423a3c:	add	x8, sp, #0xe0
  423a40:	mov	x1, x22
  423a44:	ldr	x0, [sp, #136]
  423a48:	bl	420794 <nftw@plt+0x1dc14>
  423a4c:	ldr	x23, [sp, #224]
  423a50:	str	x23, [sp, #576]
  423a54:	ldr	x0, [sp, #232]
  423a58:	str	x0, [sp, #584]
  423a5c:	ldr	x0, [sp, #240]
  423a60:	str	x0, [sp, #592]
  423a64:	ldr	x24, [sp, #584]
  423a68:	ldr	x0, [sp, #144]
  423a6c:	cmp	x0, x24
  423a70:	b.eq	422f7c <nftw@plt+0x203fc>  // b.none
  423a74:	mov	w19, #0x1                   	// #1
  423a78:	cbnz	w20, 422f88 <nftw@plt+0x20408>
  423a7c:	ldrb	w2, [sp, #592]
  423a80:	ldrb	w0, [sp, #593]
  423a84:	mov	w1, #0x0                   	// #0
  423a88:	cbnz	w27, 423adc <nftw@plt+0x20f5c>
  423a8c:	cbnz	w19, 423ad8 <nftw@plt+0x20f58>
  423a90:	str	x23, [sp, #576]
  423a94:	str	x24, [sp, #584]
  423a98:	strb	w2, [sp, #592]
  423a9c:	strb	w0, [sp, #593]
  423aa0:	add	x0, sp, #0x200
  423aa4:	ldp	x0, x1, [x0, #64]
  423aa8:	stp	x0, x1, [sp, #224]
  423aac:	ldr	x0, [sp, #592]
  423ab0:	str	x0, [sp, #240]
  423ab4:	mov	x1, x22
  423ab8:	add	x0, sp, #0xe0
  423abc:	bl	4207f8 <nftw@plt+0x1dc78>
  423ac0:	eor	w20, w20, #0x1
  423ac4:	cmp	w20, w0, uxtb
  423ac8:	b.eq	423ad8 <nftw@plt+0x20f58>  // b.none
  423acc:	orr	x0, x23, x24
  423ad0:	cmp	x0, #0x0
  423ad4:	cset	w19, ne  // ne = any
  423ad8:	mov	w1, w19
  423adc:	str	x23, [sp, #576]
  423ae0:	str	x24, [sp, #584]
  423ae4:	strb	w27, [sp, #592]
  423ae8:	strb	w1, [sp, #593]
  423aec:	add	x0, sp, #0x200
  423af0:	ldp	x0, x1, [x0, #64]
  423af4:	stp	x0, x1, [x28, #-32]
  423af8:	ldr	x0, [sp, #592]
  423afc:	stur	x0, [x28, #-16]
  423b00:	ldr	w0, [x28, #32]
  423b04:	stur	w0, [x28, #-8]
  423b08:	b	4233a4 <nftw@plt+0x20824>
  423b0c:	ldr	x0, [x26, #1208]
  423b10:	str	x0, [sp, #144]
  423b14:	str	w20, [sp, #192]
  423b18:	str	wzr, [sp, #188]
  423b1c:	str	wzr, [sp, #184]
  423b20:	cbz	x19, 423140 <nftw@plt+0x205c0>
  423b24:	ldr	x1, [sp, #144]
  423b28:	sub	x0, x1, #0x1
  423b2c:	sub	w2, w1, #0x41
  423b30:	mov	x1, #0x1                   	// #1
  423b34:	lsl	x1, x1, x2
  423b38:	tst	x19, x1
  423b3c:	b.ne	423b50 <nftw@plt+0x20fd0>  // b.any
  423b40:	sub	x0, x0, #0x1
  423b44:	lsr	x1, x1, #1
  423b48:	tst	x19, x1
  423b4c:	b.eq	423b40 <nftw@plt+0x20fc0>  // b.none
  423b50:	ldr	x3, [sp, #144]
  423b54:	sub	x20, x3, #0x1
  423b58:	sub	x20, x20, x0
  423b5c:	str	x19, [sp, #352]
  423b60:	str	x22, [sp, #360]
  423b64:	mov	w0, #0x1                   	// #1
  423b68:	strb	w0, [sp, #368]
  423b6c:	ldp	x0, x1, [sp, #352]
  423b70:	stp	x0, x1, [sp, #224]
  423b74:	ldr	x0, [sp, #368]
  423b78:	str	x0, [sp, #240]
  423b7c:	add	x8, sp, #0x178
  423b80:	mov	x2, x20
  423b84:	mov	x1, x3
  423b88:	add	x0, sp, #0xe0
  423b8c:	bl	420a1c <nftw@plt+0x1de9c>
  423b90:	ldr	x19, [sp, #376]
  423b94:	ldr	x22, [sp, #384]
  423b98:	str	xzr, [sp, #168]
  423b9c:	str	xzr, [sp, #160]
  423ba0:	mov	w27, #0x1                   	// #1
  423ba4:	str	x28, [sp, #200]
  423ba8:	str	w21, [sp, #208]
  423bac:	b	4231dc <nftw@plt+0x2065c>
  423bb0:	mov	w3, w26
  423bb4:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423bb8:	add	x0, x0, #0x998
  423bbc:	add	x0, x0, w26, sxtw #1
  423bc0:	ldrb	w0, [x0, #1]
  423bc4:	tbnz	w0, #0, 423c20 <nftw@plt+0x210a0>
  423bc8:	ldr	w1, [sp, #128]
  423bcc:	cbz	w1, 4226e8 <nftw@plt+0x1fb68>
  423bd0:	ldr	w1, [x28, #36]
  423bd4:	and	w1, w1, #0xfffffffd
  423bd8:	cmp	w1, #0x14
  423bdc:	b.ne	422890 <nftw@plt+0x1fd10>  // b.any
  423be0:	sub	w1, w26, #0x15
  423be4:	cmp	w1, #0x1
  423be8:	b.ls	4226e8 <nftw@plt+0x1fb68>  // b.plast
  423bec:	ldr	x1, [sp, #120]
  423bf0:	mov	x0, x27
  423bf4:	bl	42add4 <nftw@plt+0x28254>
  423bf8:	mov	x5, x0
  423bfc:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423c00:	add	x4, x4, #0x798
  423c04:	mov	w3, #0x0                   	// #0
  423c08:	ldr	w2, [sp, #132]
  423c0c:	mov	w1, #0x3                   	// #3
  423c10:	mov	x0, x27
  423c14:	bl	41fb7c <nftw@plt+0x1cffc>
  423c18:	mov	w0, #0x0                   	// #0
  423c1c:	b	42225c <nftw@plt+0x1f6dc>
  423c20:	mov	x26, x27
  423c24:	ldr	x1, [sp, #120]
  423c28:	mov	x0, x26
  423c2c:	bl	42add4 <nftw@plt+0x28254>
  423c30:	mov	x5, x0
  423c34:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  423c38:	add	x4, x4, #0x4f0
  423c3c:	mov	w3, #0x0                   	// #0
  423c40:	ldr	w2, [sp, #132]
  423c44:	mov	w1, #0x3                   	// #3
  423c48:	mov	x0, x26
  423c4c:	bl	41fb7c <nftw@plt+0x1cffc>
  423c50:	mov	w0, #0x0                   	// #0
  423c54:	b	42225c <nftw@plt+0x1f6dc>
  423c58:	ldr	x19, [x19, #8]
  423c5c:	cbz	x19, 4224b8 <nftw@plt+0x1f938>
  423c60:	ldr	x0, [x27, #136]
  423c64:	cmp	x20, x0
  423c68:	b.eq	42255c <nftw@plt+0x1f9dc>  // b.none
  423c6c:	ldrb	w0, [x27, #1150]
  423c70:	cbnz	w0, 42256c <nftw@plt+0x1f9ec>
  423c74:	ldrb	w0, [x19, #18]
  423c78:	and	w0, w0, #0x3
  423c7c:	cmp	w0, #0x2
  423c80:	b.eq	422584 <nftw@plt+0x1fa04>  // b.none
  423c84:	ldrh	w0, [x19, #18]
  423c88:	tbz	w0, #7, 422598 <nftw@plt+0x1fa18>
  423c8c:	str	x19, [x27, #432]
  423c90:	ldrb	w0, [x27, #24]
  423c94:	sub	w0, w0, #0x1
  423c98:	strb	w0, [x27, #24]
  423c9c:	ldrb	w0, [x19, #18]
  423ca0:	mov	w1, #0x0                   	// #0
  423ca4:	tbz	w0, #1, 423cb8 <nftw@plt+0x21138>
  423ca8:	ldrh	w1, [x19, #18]
  423cac:	ubfx	x1, x1, #8, #2
  423cb0:	eor	w1, w1, #0x1
  423cb4:	and	w1, w1, #0x1
  423cb8:	and	x1, x1, #0xff
  423cbc:	mov	w2, #0x0                   	// #0
  423cc0:	mov	w0, #0x0                   	// #0
  423cc4:	mov	x3, #0x0                   	// #0
  423cc8:	b	423d3c <nftw@plt+0x211bc>
  423ccc:	str	wzr, [sp, #400]
  423cd0:	b	422334 <nftw@plt+0x1f7b4>
  423cd4:	ldr	w0, [sp, #128]
  423cd8:	cbnz	w0, 423ccc <nftw@plt+0x2114c>
  423cdc:	mov	x26, x27
  423ce0:	b	42222c <nftw@plt+0x1f6ac>
  423ce4:	str	wzr, [sp, #400]
  423ce8:	ldrb	w0, [x27, #18]
  423cec:	cbnz	w0, 423d00 <nftw@plt+0x21180>
  423cf0:	ldrb	w0, [x27, #1154]
  423cf4:	cbnz	w0, 422634 <nftw@plt+0x1fab4>
  423cf8:	ldrb	w0, [x27, #1132]
  423cfc:	cbnz	w0, 422654 <nftw@plt+0x1fad4>
  423d00:	add	x1, sp, #0x178
  423d04:	mov	x0, x27
  423d08:	bl	41ea80 <nftw@plt+0x1bf00>
  423d0c:	ldr	w1, [sp, #376]
  423d10:	mov	w2, #0x0                   	// #0
  423d14:	mov	x3, #0x0                   	// #0
  423d18:	ldr	w0, [sp, #400]
  423d1c:	cmp	w0, #0x0
  423d20:	cset	w0, ne  // ne = any
  423d24:	str	x3, [sp, #424]
  423d28:	str	x1, [sp, #432]
  423d2c:	strb	w0, [sp, #440]
  423d30:	strb	w2, [sp, #441]
  423d34:	ldr	x4, [sp, #440]
  423d38:	str	x4, [sp, #472]
  423d3c:	str	x3, [sp, #456]
  423d40:	str	x1, [sp, #464]
  423d44:	strb	w0, [sp, #472]
  423d48:	strb	w2, [sp, #473]
  423d4c:	add	x0, sp, #0x280
  423d50:	ldp	x0, x1, [x0, #-184]
  423d54:	stp	x0, x1, [x28, #8]
  423d58:	ldr	x0, [sp, #472]
  423d5c:	str	x0, [x28, #24]
  423d60:	str	wzr, [sp, #128]
  423d64:	b	423790 <nftw@plt+0x20c10>
  423d68:	ldr	x2, [x0]
  423d6c:	ldr	x3, [x0, #8]
  423d70:	ldrb	w4, [x0, #16]
  423d74:	cbnz	w4, 423da8 <nftw@plt+0x21228>
  423d78:	cmp	x1, #0x40
  423d7c:	b.ls	423dc4 <nftw@plt+0x21244>  // b.plast
  423d80:	sub	x1, x1, #0x40
  423d84:	cmp	x1, #0x3f
  423d88:	b.hi	423da8 <nftw@plt+0x21228>  // b.pmore
  423d8c:	sub	w4, w1, #0x1
  423d90:	lsr	x4, x2, x4
  423d94:	tbz	w4, #0, 423da8 <nftw@plt+0x21228>
  423d98:	neg	w1, w1
  423d9c:	mov	x4, #0xffffffffffffffff    	// #-1
  423da0:	lsr	x1, x4, x1
  423da4:	orn	x2, x2, x1
  423da8:	str	x2, [x0]
  423dac:	str	x3, [x0, #8]
  423db0:	ldp	x2, x3, [x0]
  423db4:	stp	x2, x3, [x8]
  423db8:	ldr	x0, [x0, #16]
  423dbc:	str	x0, [x8, #16]
  423dc0:	ret
  423dc4:	sub	w4, w1, #0x1
  423dc8:	lsr	x4, x3, x4
  423dcc:	tbz	w4, #0, 423da8 <nftw@plt+0x21228>
  423dd0:	mov	x2, #0xffffffffffffffff    	// #-1
  423dd4:	cmp	x1, #0x3f
  423dd8:	b.hi	423da8 <nftw@plt+0x21228>  // b.pmore
  423ddc:	neg	w1, w1
  423de0:	lsr	x1, x2, x1
  423de4:	orn	x3, x3, x1
  423de8:	b	423da8 <nftw@plt+0x21228>
  423dec:	stp	x29, x30, [sp, #-16]!
  423df0:	mov	x29, sp
  423df4:	ldr	x1, [x0, #8]
  423df8:	cbz	x1, 423e10 <nftw@plt+0x21290>
  423dfc:	ldr	x0, [x0, #24]
  423e00:	ldr	x0, [x0]
  423e04:	bl	449e88 <nftw@plt+0x47308>
  423e08:	ldp	x29, x30, [sp], #16
  423e0c:	ret
  423e10:	ldr	x0, [x0, #24]
  423e14:	ldr	x0, [x0, #8]
  423e18:	b	423e04 <nftw@plt+0x21284>
  423e1c:	stp	x29, x30, [sp, #-32]!
  423e20:	mov	x29, sp
  423e24:	str	x19, [sp, #16]
  423e28:	mov	x19, x0
  423e2c:	ldr	x0, [x0, #48]
  423e30:	bl	402910 <free@plt>
  423e34:	ldr	x0, [x19]
  423e38:	bl	402910 <free@plt>
  423e3c:	ldr	x0, [x19, #8]
  423e40:	bl	402910 <free@plt>
  423e44:	mov	x0, x19
  423e48:	bl	402910 <free@plt>
  423e4c:	ldr	x19, [sp, #16]
  423e50:	ldp	x29, x30, [sp], #32
  423e54:	ret
  423e58:	ldr	x0, [x0]
  423e5c:	ldr	x2, [x0, #8]
  423e60:	cbz	x2, 423ee8 <nftw@plt+0x21368>
  423e64:	stp	x29, x30, [sp, #-32]!
  423e68:	mov	x29, sp
  423e6c:	stp	x19, x20, [sp, #16]
  423e70:	mov	x19, x1
  423e74:	ldr	x20, [x0, #24]
  423e78:	ldrb	w0, [x20, #210]
  423e7c:	cbnz	w0, 423e88 <nftw@plt+0x21308>
  423e80:	ldr	x0, [x20, #56]
  423e84:	cbz	x0, 423e98 <nftw@plt+0x21318>
  423e88:	mov	w0, #0x1                   	// #1
  423e8c:	ldp	x19, x20, [sp, #16]
  423e90:	ldp	x29, x30, [sp], #32
  423e94:	ret
  423e98:	ldrh	w0, [x20, #208]
  423e9c:	cmp	w0, #0x1
  423ea0:	b.ne	423e88 <nftw@plt+0x21308>  // b.any
  423ea4:	ldrb	w0, [x20, #212]
  423ea8:	cbnz	w0, 423e88 <nftw@plt+0x21308>
  423eac:	ldr	x0, [x1]
  423eb0:	cbz	x0, 423ed0 <nftw@plt+0x21350>
  423eb4:	ldr	x1, [x19]
  423eb8:	ldr	x0, [x19, #8]
  423ebc:	add	x2, x0, #0x1
  423ec0:	str	x2, [x19, #8]
  423ec4:	ldr	x2, [x20, #8]
  423ec8:	str	x2, [x1, x0, lsl #3]
  423ecc:	b	423e88 <nftw@plt+0x21308>
  423ed0:	mov	x1, #0x8                   	// #8
  423ed4:	ldr	x0, [x19, #8]
  423ed8:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  423edc:	str	x0, [x19]
  423ee0:	str	xzr, [x19, #8]
  423ee4:	b	423eb4 <nftw@plt+0x21334>
  423ee8:	mov	w0, #0x1                   	// #1
  423eec:	ret
  423ef0:	stp	x29, x30, [sp, #-16]!
  423ef4:	mov	x29, sp
  423ef8:	bl	448fdc <nftw@plt+0x4645c>
  423efc:	cmp	w0, #0x0
  423f00:	cset	w0, eq  // eq = none
  423f04:	ldp	x29, x30, [sp], #16
  423f08:	ret
  423f0c:	stp	x29, x30, [sp, #-16]!
  423f10:	mov	x29, sp
  423f14:	ldr	x2, [x0, #8]
  423f18:	cbz	x2, 423f38 <nftw@plt+0x213b8>
  423f1c:	ldr	x0, [x0, #24]
  423f20:	ldr	x0, [x0]
  423f24:	bl	448fdc <nftw@plt+0x4645c>
  423f28:	cmp	w0, #0x0
  423f2c:	cset	w0, eq  // eq = none
  423f30:	ldp	x29, x30, [sp], #16
  423f34:	ret
  423f38:	ldr	x0, [x0, #24]
  423f3c:	ldr	x0, [x0, #8]
  423f40:	b	423f24 <nftw@plt+0x213a4>
  423f44:	stp	x29, x30, [sp, #-64]!
  423f48:	mov	x29, sp
  423f4c:	stp	x19, x20, [sp, #16]
  423f50:	stp	x21, x22, [sp, #32]
  423f54:	str	x23, [sp, #48]
  423f58:	mov	x23, x0
  423f5c:	mov	x22, x1
  423f60:	ldr	w19, [x1, #16]
  423f64:	bl	4024f0 <strlen@plt>
  423f68:	mov	x21, x0
  423f6c:	add	x0, x19, #0x2
  423f70:	add	x0, x0, x21
  423f74:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  423f78:	mov	x20, x0
  423f7c:	mov	x2, x19
  423f80:	ldr	x1, [x22, #8]
  423f84:	bl	402490 <memcpy@plt>
  423f88:	cbz	x19, 423fa8 <nftw@plt+0x21428>
  423f8c:	add	x0, x20, x19
  423f90:	ldurb	w0, [x0, #-1]
  423f94:	cmp	w0, #0x2f
  423f98:	b.eq	423fa8 <nftw@plt+0x21428>  // b.none
  423f9c:	mov	w0, #0x2f                  	// #47
  423fa0:	strb	w0, [x20, x19]
  423fa4:	add	x19, x19, #0x1
  423fa8:	add	x2, x21, #0x1
  423fac:	mov	x1, x23
  423fb0:	add	x0, x20, x19
  423fb4:	bl	402490 <memcpy@plt>
  423fb8:	mov	x0, x20
  423fbc:	ldp	x19, x20, [sp, #16]
  423fc0:	ldp	x21, x22, [sp, #32]
  423fc4:	ldr	x23, [sp, #48]
  423fc8:	ldp	x29, x30, [sp], #64
  423fcc:	ret
  423fd0:	stp	x29, x30, [sp, #-32]!
  423fd4:	mov	x29, sp
  423fd8:	str	x19, [sp, #16]
  423fdc:	mov	x19, x0
  423fe0:	ldr	x0, [x0, #312]
  423fe4:	ldr	w0, [x0]
  423fe8:	cmp	w0, #0x7f
  423fec:	b.eq	42401c <nftw@plt+0x2149c>  // b.none
  423ff0:	ldr	x0, [x19, #312]
  423ff4:	ldr	w1, [x0]
  423ff8:	add	w2, w1, #0x1
  423ffc:	str	w2, [x0]
  424000:	ubfiz	x1, x1, #5, #32
  424004:	add	x1, x1, #0x10
  424008:	ldr	x0, [x19, #312]
  42400c:	add	x0, x0, x1
  424010:	ldr	x19, [sp, #16]
  424014:	ldp	x29, x30, [sp], #32
  424018:	ret
  42401c:	mov	x0, #0xff0                 	// #4080
  424020:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  424024:	str	wzr, [x0]
  424028:	ldr	x1, [x19, #312]
  42402c:	str	x1, [x0, #8]
  424030:	str	x0, [x19, #312]
  424034:	b	423ff0 <nftw@plt+0x21470>
  424038:	stp	x29, x30, [sp, #-64]!
  42403c:	mov	x29, sp
  424040:	stp	x19, x20, [sp, #16]
  424044:	stp	x21, x22, [sp, #32]
  424048:	str	x23, [sp, #48]
  42404c:	mov	x21, x0
  424050:	mov	x20, x1
  424054:	mov	w23, w2
  424058:	ldr	x19, [x0, #304]
  42405c:	mov	x0, x1
  424060:	bl	449e88 <nftw@plt+0x47308>
  424064:	mov	w3, #0x1                   	// #1
  424068:	mov	w2, w0
  42406c:	mov	x1, x20
  424070:	mov	x0, x19
  424074:	bl	449a48 <nftw@plt+0x46ec8>
  424078:	mov	x22, x0
  42407c:	ldr	x3, [x0]
  424080:	cbz	x3, 424094 <nftw@plt+0x21514>
  424084:	ldr	x4, [x3, #8]
  424088:	cbz	x4, 424104 <nftw@plt+0x21584>
  42408c:	ldr	x3, [x3]
  424090:	cbnz	x3, 424084 <nftw@plt+0x21504>
  424094:	mov	x1, #0x40                  	// #64
  424098:	mov	x0, #0x1                   	// #1
  42409c:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  4240a0:	mov	x19, x0
  4240a4:	ldr	x0, [x21, #200]
  4240a8:	str	x0, [x19]
  4240ac:	str	x20, [x19, #8]
  4240b0:	mov	x0, x20
  4240b4:	bl	4024f0 <strlen@plt>
  4240b8:	str	w0, [x19, #16]
  4240bc:	strb	w23, [x19, #20]
  4240c0:	str	xzr, [x19, #40]
  4240c4:	mov	x0, x21
  4240c8:	bl	423fd0 <nftw@plt+0x21450>
  4240cc:	ldr	x1, [x22]
  4240d0:	str	x1, [x0]
  4240d4:	str	xzr, [x0, #8]
  4240d8:	ldr	x1, [x21, #40]
  4240dc:	ldr	w1, [x1, #56]
  4240e0:	str	w1, [x0, #16]
  4240e4:	str	x19, [x0, #24]
  4240e8:	str	x0, [x22]
  4240ec:	mov	x0, x19
  4240f0:	ldp	x19, x20, [sp, #16]
  4240f4:	ldp	x21, x22, [sp, #32]
  4240f8:	ldr	x23, [sp, #48]
  4240fc:	ldp	x29, x30, [sp], #64
  424100:	ret
  424104:	ldr	x19, [x3, #24]
  424108:	b	4240ec <nftw@plt+0x2156c>
  42410c:	stp	x29, x30, [sp, #-80]!
  424110:	mov	x29, sp
  424114:	stp	x19, x20, [sp, #16]
  424118:	stp	x21, x22, [sp, #32]
  42411c:	mov	w20, w0
  424120:	mov	x21, x1
  424124:	mov	x0, #0x15                  	// #21
  424128:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42412c:	mov	x22, x0
  424130:	and	x1, x20, #0xff
  424134:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  424138:	add	x0, x0, #0xe68
  42413c:	ldrh	w0, [x0, x1, lsl #1]
  424140:	mov	x19, x22
  424144:	tst	w0, #0xc00
  424148:	b.ne	424184 <nftw@plt+0x21604>  // b.any
  42414c:	stp	x23, x24, [sp, #48]
  424150:	str	x25, [sp, #64]
  424154:	strb	w20, [x19], #1
  424158:	mov	w23, #0x14                  	// #20
  42415c:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  424160:	add	x24, x24, #0xe68
  424164:	b	4241cc <nftw@plt+0x2164c>
  424168:	mov	x0, x21
  42416c:	bl	402b40 <__uflow@plt>
  424170:	mov	w20, w0
  424174:	cmn	w0, #0x1
  424178:	b.ne	4241e8 <nftw@plt+0x21668>  // b.any
  42417c:	ldp	x23, x24, [sp, #48]
  424180:	ldr	x25, [sp, #64]
  424184:	strb	wzr, [x19]
  424188:	mov	x1, x21
  42418c:	mov	w0, w20
  424190:	bl	402920 <ungetc@plt>
  424194:	mov	x0, x22
  424198:	ldp	x19, x20, [sp, #16]
  42419c:	ldp	x21, x22, [sp, #32]
  4241a0:	ldp	x29, x30, [sp], #80
  4241a4:	ret
  4241a8:	lsl	w25, w23, #1
  4241ac:	add	w1, w25, #0x1
  4241b0:	sxtw	x1, w1
  4241b4:	mov	x0, x22
  4241b8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4241bc:	mov	x22, x0
  4241c0:	add	x19, x0, w23, sxtw
  4241c4:	mov	w23, w25
  4241c8:	strb	w20, [x19], #1
  4241cc:	ldr	x2, [x21, #8]
  4241d0:	ldr	x0, [x21, #16]
  4241d4:	cmp	x2, x0
  4241d8:	b.cs	424168 <nftw@plt+0x215e8>  // b.hs, b.nlast
  4241dc:	add	x0, x2, #0x1
  4241e0:	str	x0, [x21, #8]
  4241e4:	ldrb	w20, [x2]
  4241e8:	and	x0, x20, #0xff
  4241ec:	ldrh	w0, [x24, x0, lsl #1]
  4241f0:	tst	w0, #0xc00
  4241f4:	b.ne	424208 <nftw@plt+0x21688>  // b.any
  4241f8:	sub	x0, x19, x22
  4241fc:	cmp	x0, w23, sxtw
  424200:	b.ne	4241c8 <nftw@plt+0x21648>  // b.any
  424204:	b	4241a8 <nftw@plt+0x21628>
  424208:	ldp	x23, x24, [sp, #48]
  42420c:	ldr	x25, [sp, #64]
  424210:	b	424184 <nftw@plt+0x21604>
  424214:	stp	x29, x30, [sp, #-96]!
  424218:	mov	x29, sp
  42421c:	stp	x19, x20, [sp, #16]
  424220:	stp	x21, x22, [sp, #32]
  424224:	stp	x23, x24, [sp, #48]
  424228:	stp	x25, x26, [sp, #64]
  42422c:	str	x27, [sp, #80]
  424230:	mov	x21, x0
  424234:	ldr	w19, [x0, #16]
  424238:	add	x0, x19, #0x1b
  42423c:	and	x0, x0, #0x1fffffff0
  424240:	sub	sp, sp, x0
  424244:	mov	x20, sp
  424248:	mov	x2, x19
  42424c:	ldr	x1, [x21, #8]
  424250:	mov	x0, x20
  424254:	bl	402490 <memcpy@plt>
  424258:	cbz	x19, 424278 <nftw@plt+0x216f8>
  42425c:	add	x0, x20, x19
  424260:	ldurb	w0, [x0, #-1]
  424264:	cmp	w0, #0x2f
  424268:	b.eq	424278 <nftw@plt+0x216f8>  // b.none
  42426c:	mov	w0, #0x2f                  	// #47
  424270:	strb	w0, [x20, x19]
  424274:	add	x19, x19, #0x1
  424278:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42427c:	add	x0, x0, #0x9d8
  424280:	add	x1, x20, x19
  424284:	ldr	x2, [x0]
  424288:	str	x2, [x20, x19]
  42428c:	ldur	w0, [x0, #7]
  424290:	stur	w0, [x1, #7]
  424294:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424298:	add	x1, x1, #0x140
  42429c:	mov	x0, x20
  4242a0:	bl	449134 <nftw@plt+0x465b4>
  4242a4:	mov	x19, x0
  4242a8:	mov	x0, #0x48                  	// #72
  4242ac:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4242b0:	str	x0, [x21, #32]
  4242b4:	mov	x23, #0x0                   	// #0
  4242b8:	cbz	x19, 4242ec <nftw@plt+0x2176c>
  4242bc:	mov	x22, #0x0                   	// #0
  4242c0:	mov	x24, #0x9                   	// #9
  4242c4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4242c8:	add	x20, x20, #0xe68
  4242cc:	b	42438c <nftw@plt+0x2180c>
  4242d0:	mov	x0, x19
  4242d4:	bl	402b40 <__uflow@plt>
  4242d8:	mov	w25, w0
  4242dc:	cmn	w0, #0x1
  4242e0:	b.ne	4243a8 <nftw@plt+0x21828>  // b.any
  4242e4:	mov	x0, x19
  4242e8:	bl	402620 <fclose@plt>
  4242ec:	ldr	x0, [x21, #32]
  4242f0:	str	xzr, [x0, x23, lsl #3]
  4242f4:	mov	sp, x29
  4242f8:	ldp	x19, x20, [sp, #16]
  4242fc:	ldp	x21, x22, [sp, #32]
  424300:	ldp	x23, x24, [sp, #48]
  424304:	ldp	x25, x26, [sp, #64]
  424308:	ldr	x27, [sp, #80]
  42430c:	ldp	x29, x30, [sp], #96
  424310:	ret
  424314:	add	x24, x24, #0x8
  424318:	lsl	x1, x24, #3
  42431c:	ldr	x0, [x21, #32]
  424320:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  424324:	str	x0, [x21, #32]
  424328:	b	4243c4 <nftw@plt+0x21844>
  42432c:	mov	x0, x19
  424330:	bl	402b40 <__uflow@plt>
  424334:	cmn	w0, #0x1
  424338:	b.ne	4243f4 <nftw@plt+0x21874>  // b.any
  42433c:	mov	x1, x19
  424340:	bl	42410c <nftw@plt+0x2158c>
  424344:	mov	x25, x0
  424348:	ldrb	w0, [x0]
  42434c:	cmp	w0, #0x2f
  424350:	b.ne	424404 <nftw@plt+0x21884>  // b.any
  424354:	ldr	x0, [x21, #32]
  424358:	add	x0, x0, x22
  42435c:	str	x25, [x0, #8]
  424360:	ldr	x1, [x19, #8]
  424364:	ldr	x0, [x19, #16]
  424368:	cmp	x1, x0
  42436c:	b.cs	424428 <nftw@plt+0x218a8>  // b.hs, b.nlast
  424370:	add	x0, x1, #0x1
  424374:	str	x0, [x19, #8]
  424378:	ldrb	w0, [x1]
  42437c:	cmp	w0, #0xa
  424380:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  424384:	b.ne	424360 <nftw@plt+0x217e0>  // b.any
  424388:	add	x22, x22, #0x10
  42438c:	ldr	x0, [x19, #8]
  424390:	ldr	x1, [x19, #16]
  424394:	cmp	x0, x1
  424398:	b.cs	4242d0 <nftw@plt+0x21750>  // b.hs, b.nlast
  42439c:	add	x1, x0, #0x1
  4243a0:	str	x1, [x19, #8]
  4243a4:	ldrb	w25, [x0]
  4243a8:	and	x0, x25, #0xff
  4243ac:	ldrh	w0, [x20, x0, lsl #1]
  4243b0:	tst	w0, #0xc00
  4243b4:	b.ne	42438c <nftw@plt+0x2180c>  // b.any
  4243b8:	add	x23, x23, #0x2
  4243bc:	cmp	x23, x24
  4243c0:	b.hi	424314 <nftw@plt+0x21794>  // b.pmore
  4243c4:	ldr	x26, [x21, #32]
  4243c8:	mov	x1, x19
  4243cc:	mov	w0, w25
  4243d0:	bl	42410c <nftw@plt+0x2158c>
  4243d4:	str	x0, [x26, x22]
  4243d8:	ldr	x1, [x19, #8]
  4243dc:	ldr	x0, [x19, #16]
  4243e0:	cmp	x1, x0
  4243e4:	b.cs	42432c <nftw@plt+0x217ac>  // b.hs, b.nlast
  4243e8:	add	x0, x1, #0x1
  4243ec:	str	x0, [x19, #8]
  4243f0:	ldrb	w0, [x1]
  4243f4:	and	x1, x0, #0xff
  4243f8:	ldrh	w1, [x20, x1, lsl #1]
  4243fc:	tbnz	w1, #0, 4243d8 <nftw@plt+0x21858>
  424400:	b	42433c <nftw@plt+0x217bc>
  424404:	add	x26, x22, #0x8
  424408:	ldr	x27, [x21, #32]
  42440c:	mov	x1, x21
  424410:	mov	x0, x25
  424414:	bl	423f44 <nftw@plt+0x213c4>
  424418:	str	x0, [x27, x26]
  42441c:	mov	x0, x25
  424420:	bl	402910 <free@plt>
  424424:	b	424360 <nftw@plt+0x217e0>
  424428:	mov	x0, x19
  42442c:	bl	402b40 <__uflow@plt>
  424430:	b	42437c <nftw@plt+0x217fc>
  424434:	stp	x29, x30, [sp, #-16]!
  424438:	mov	x29, sp
  42443c:	ldr	x1, [x1]
  424440:	ldr	x0, [x0]
  424444:	bl	402890 <strcmp@plt>
  424448:	ldp	x29, x30, [sp], #16
  42444c:	ret
  424450:	stp	x29, x30, [sp, #-32]!
  424454:	mov	x29, sp
  424458:	str	x19, [sp, #16]
  42445c:	mov	x19, x0
  424460:	ldr	x0, [x0, #8]
  424464:	ldrb	w1, [x0]
  424468:	cbnz	w1, 42449c <nftw@plt+0x2191c>
  42446c:	str	wzr, [x19, #200]
  424470:	add	x2, x19, #0x48
  424474:	mov	w0, #0x0                   	// #0
  424478:	bl	402a10 <__fxstat@plt>
  42447c:	cbnz	w0, 4244f0 <nftw@plt+0x21970>
  424480:	ldr	w0, [x19, #88]
  424484:	and	w0, w0, #0xf000
  424488:	cmp	w0, #0x4, lsl #12
  42448c:	b.eq	4244e4 <nftw@plt+0x21964>  // b.none
  424490:	str	wzr, [x19, #204]
  424494:	mov	w0, #0x1                   	// #1
  424498:	b	4244d8 <nftw@plt+0x21958>
  42449c:	mov	w2, #0x1b6                 	// #438
  4244a0:	mov	w1, #0x100                 	// #256
  4244a4:	bl	402680 <open@plt>
  4244a8:	mov	w1, w0
  4244ac:	str	w0, [x19, #200]
  4244b0:	cmn	w0, #0x1
  4244b4:	b.ne	424470 <nftw@plt+0x218f0>  // b.any
  4244b8:	bl	402aa0 <__errno_location@plt>
  4244bc:	ldr	w1, [x0]
  4244c0:	cmp	w1, #0x14
  4244c4:	b.eq	424504 <nftw@plt+0x21984>  // b.none
  4244c8:	bl	402aa0 <__errno_location@plt>
  4244cc:	ldr	w0, [x0]
  4244d0:	str	w0, [x19, #204]
  4244d4:	mov	w0, #0x0                   	// #0
  4244d8:	ldr	x19, [sp, #16]
  4244dc:	ldp	x29, x30, [sp], #32
  4244e0:	ret
  4244e4:	bl	402aa0 <__errno_location@plt>
  4244e8:	mov	w1, #0x2                   	// #2
  4244ec:	str	w1, [x0]
  4244f0:	ldr	w0, [x19, #200]
  4244f4:	bl	4027a0 <close@plt>
  4244f8:	mov	w0, #0xffffffff            	// #-1
  4244fc:	str	w0, [x19, #200]
  424500:	b	4244c8 <nftw@plt+0x21948>
  424504:	mov	w1, #0x2                   	// #2
  424508:	str	w1, [x0]
  42450c:	b	4244c8 <nftw@plt+0x21948>
  424510:	stp	x29, x30, [sp, #-96]!
  424514:	mov	x29, sp
  424518:	stp	x19, x20, [sp, #16]
  42451c:	stp	x21, x22, [sp, #32]
  424520:	stp	x23, x24, [sp, #48]
  424524:	stp	x25, x26, [sp, #64]
  424528:	mov	x20, x0
  42452c:	mov	x19, x1
  424530:	mov	x23, x2
  424534:	ldr	x26, [x1, #8]
  424538:	str	x2, [x1, #8]
  42453c:	mov	x0, x1
  424540:	bl	424450 <nftw@plt+0x218d0>
  424544:	ands	w22, w0, #0xff
  424548:	b.eq	4245f8 <nftw@plt+0x21a78>  // b.none
  42454c:	stp	x27, x28, [sp, #80]
  424550:	ldr	x3, [x20, #968]
  424554:	ldr	w2, [x19, #200]
  424558:	mov	x1, x23
  42455c:	mov	x0, x20
  424560:	blr	x3
  424564:	and	w22, w0, #0x1
  424568:	mov	w27, w22
  42456c:	tbz	w0, #0, 424618 <nftw@plt+0x21a98>
  424570:	ldrb	w0, [x20, #1131]
  424574:	cbz	w0, 424638 <nftw@plt+0x21ab8>
  424578:	ldr	x0, [x20, #40]
  42457c:	ldr	w0, [x0, #48]
  424580:	cmp	w0, #0x1
  424584:	b.ls	4245cc <nftw@plt+0x21a4c>  // b.plast
  424588:	mov	w21, #0x1                   	// #1
  42458c:	adrp	x24, 48d000 <_obstack_memory_used@@Base+0x429fc>
  424590:	mov	w25, #0x2e                  	// #46
  424594:	mov	w28, #0x2e                  	// #46
  424598:	ldr	x0, [x24, #1392]
  42459c:	ldr	x1, [x0, #40]
  4245a0:	ldr	x2, [x0, #48]
  4245a4:	cmp	x1, x2
  4245a8:	b.cs	42462c <nftw@plt+0x21aac>  // b.hs, b.nlast
  4245ac:	add	x2, x1, #0x1
  4245b0:	str	x2, [x0, #40]
  4245b4:	strb	w25, [x1]
  4245b8:	add	w21, w21, #0x1
  4245bc:	ldr	x0, [x20, #40]
  4245c0:	ldr	w0, [x0, #48]
  4245c4:	cmp	w0, w21
  4245c8:	b.hi	424598 <nftw@plt+0x21a18>  // b.pmore
  4245cc:	cmp	w27, #0x0
  4245d0:	mov	x3, x23
  4245d4:	mov	w2, #0x21                  	// #33
  4245d8:	mov	w0, #0x78                  	// #120
  4245dc:	csel	w2, w2, w0, ne  // ne = any
  4245e0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4245e4:	add	x1, x1, #0x9e8
  4245e8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4245ec:	ldr	x0, [x0, #1392]
  4245f0:	bl	402b30 <fprintf@plt>
  4245f4:	ldp	x27, x28, [sp, #80]
  4245f8:	str	x26, [x19, #8]
  4245fc:	mov	w0, w22
  424600:	ldp	x19, x20, [sp, #16]
  424604:	ldp	x21, x22, [sp, #32]
  424608:	ldp	x23, x24, [sp, #48]
  42460c:	ldp	x25, x26, [sp, #64]
  424610:	ldp	x29, x30, [sp], #96
  424614:	ret
  424618:	ldr	w0, [x19, #200]
  42461c:	bl	4027a0 <close@plt>
  424620:	mov	w0, #0xffffffff            	// #-1
  424624:	str	w0, [x19, #200]
  424628:	b	424570 <nftw@plt+0x219f0>
  42462c:	mov	w1, w28
  424630:	bl	402800 <__overflow@plt>
  424634:	b	4245b8 <nftw@plt+0x21a38>
  424638:	ldp	x27, x28, [sp, #80]
  42463c:	b	4245f8 <nftw@plt+0x21a78>
  424640:	stp	x29, x30, [sp, #-64]!
  424644:	mov	x29, sp
  424648:	stp	x19, x20, [sp, #16]
  42464c:	stp	x21, x22, [sp, #32]
  424650:	stp	x23, x24, [sp, #48]
  424654:	mov	x19, x0
  424658:	mov	x20, x1
  42465c:	mov	w22, w2
  424660:	mov	w23, w3
  424664:	ldr	x0, [x0, #40]
  424668:	ldr	w0, [x0, #60]
  42466c:	mov	w21, #0x0                   	// #0
  424670:	cmp	w0, #0x1
  424674:	b.ls	424684 <nftw@plt+0x21b04>  // b.plast
  424678:	ldr	x0, [x19]
  42467c:	cbz	x0, 424684 <nftw@plt+0x21b04>
  424680:	ldrb	w21, [x0, #106]
  424684:	ldrb	w0, [x19, #26]
  424688:	cbnz	w0, 4246dc <nftw@plt+0x21b5c>
  42468c:	ldr	w24, [x19, #1200]
  424690:	bl	402aa0 <__errno_location@plt>
  424694:	ldr	w1, [x20, #204]
  424698:	str	w1, [x0]
  42469c:	orr	w21, w21, w22
  4246a0:	cmp	w21, #0x0
  4246a4:	cset	w0, ne  // ne = any
  4246a8:	cmp	w24, w0
  4246ac:	b.le	424728 <nftw@plt+0x21ba8>
  4246b0:	cmp	w1, #0x2
  4246b4:	cset	w1, eq  // eq = none
  4246b8:	ldrb	w0, [x19, #1204]
  4246bc:	tst	w1, w0
  4246c0:	b.ne	4246f0 <nftw@plt+0x21b70>  // b.any
  4246c4:	ldr	x2, [x20, #8]
  4246c8:	cbz	x2, 424754 <nftw@plt+0x21bd4>
  4246cc:	mov	w3, w23
  4246d0:	mov	w1, #0x6                   	// #6
  4246d4:	mov	x0, x19
  4246d8:	bl	41ff00 <nftw@plt+0x1d380>
  4246dc:	ldp	x19, x20, [sp, #16]
  4246e0:	ldp	x21, x22, [sp, #32]
  4246e4:	ldp	x23, x24, [sp, #48]
  4246e8:	ldp	x29, x30, [sp], #64
  4246ec:	ret
  4246f0:	ldr	x1, [x20]
  4246f4:	ldr	x0, [x19, #712]
  4246f8:	bl	4322b0 <nftw@plt+0x2f730>
  4246fc:	ldrb	w0, [x19, #1207]
  424700:	cbz	w0, 4246dc <nftw@plt+0x21b5c>
  424704:	ldr	x2, [x20, #8]
  424708:	cbz	x2, 424720 <nftw@plt+0x21ba0>
  42470c:	mov	w3, w23
  424710:	mov	w1, #0x6                   	// #6
  424714:	mov	x0, x19
  424718:	bl	41ff00 <nftw@plt+0x1d380>
  42471c:	b	4246dc <nftw@plt+0x21b5c>
  424720:	ldr	x2, [x20]
  424724:	b	42470c <nftw@plt+0x21b8c>
  424728:	ldr	w0, [x19, #1200]
  42472c:	cbz	w0, 4246c4 <nftw@plt+0x21b44>
  424730:	ldrb	w0, [x19, #1207]
  424734:	cbnz	w0, 4246c4 <nftw@plt+0x21b44>
  424738:	ldr	x2, [x20, #8]
  42473c:	cbz	x2, 42475c <nftw@plt+0x21bdc>
  424740:	mov	w3, w23
  424744:	mov	w1, #0x0                   	// #0
  424748:	mov	x0, x19
  42474c:	bl	41ff00 <nftw@plt+0x1d380>
  424750:	b	4246dc <nftw@plt+0x21b5c>
  424754:	ldr	x2, [x20]
  424758:	b	4246cc <nftw@plt+0x21b4c>
  42475c:	ldr	x2, [x20]
  424760:	b	424740 <nftw@plt+0x21bc0>
  424764:	stp	x29, x30, [sp, #-16]!
  424768:	mov	x29, sp
  42476c:	mov	x2, #0x20                  	// #32
  424770:	bl	402850 <memcmp@plt>
  424774:	ldp	x29, x30, [sp], #16
  424778:	ret
  42477c:	stp	x29, x30, [sp, #-96]!
  424780:	mov	x29, sp
  424784:	stp	x19, x20, [sp, #16]
  424788:	ldrb	w20, [x1, #213]
  42478c:	cbnz	w20, 424908 <nftw@plt+0x21d88>
  424790:	stp	x23, x24, [sp, #48]
  424794:	stp	x25, x26, [sp, #64]
  424798:	mov	x23, x0
  42479c:	mov	x19, x1
  4247a0:	mov	w24, w2
  4247a4:	ldrb	w25, [x1, #211]
  4247a8:	cbnz	w25, 424968 <nftw@plt+0x21de8>
  4247ac:	ldr	w0, [x1, #204]
  4247b0:	mov	w20, w25
  4247b4:	cbnz	w0, 424974 <nftw@plt+0x21df4>
  4247b8:	ldr	w0, [x1, #200]
  4247bc:	cmn	w0, #0x1
  4247c0:	b.eq	424840 <nftw@plt+0x21cc0>  // b.none
  4247c4:	ldr	w26, [x19, #88]
  4247c8:	and	w26, w26, #0xf000
  4247cc:	cmp	w26, #0x6, lsl #12
  4247d0:	b.eq	424870 <nftw@plt+0x21cf0>  // b.none
  4247d4:	stp	x21, x22, [sp, #32]
  4247d8:	str	x27, [sp, #80]
  4247dc:	cmp	w26, #0x8, lsl #12
  4247e0:	cset	w27, eq  // eq = none
  4247e4:	mov	x20, #0x2000                	// #8192
  4247e8:	b.eq	424890 <nftw@plt+0x21d10>  // b.none
  4247ec:	add	x0, x20, #0x10
  4247f0:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4247f4:	mov	x21, x0
  4247f8:	mov	x22, #0x0                   	// #0
  4247fc:	sub	x2, x20, x22
  424800:	add	x1, x21, x22
  424804:	ldr	w0, [x19, #200]
  424808:	bl	4029d0 <read@plt>
  42480c:	cmp	x0, #0x0
  424810:	b.le	424898 <nftw@plt+0x21d18>
  424814:	add	x22, x22, x0
  424818:	cmp	x20, x22
  42481c:	b.ne	4247fc <nftw@plt+0x21c7c>  // b.any
  424820:	cmp	w26, #0x8, lsl #12
  424824:	b.eq	424960 <nftw@plt+0x21de0>  // b.none
  424828:	lsl	x20, x20, #1
  42482c:	add	x1, x20, #0x10
  424830:	mov	x0, x21
  424834:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  424838:	mov	x21, x0
  42483c:	b	4247fc <nftw@plt+0x21c7c>
  424840:	mov	x0, x1
  424844:	bl	424450 <nftw@plt+0x218d0>
  424848:	ands	w20, w0, #0xff
  42484c:	b.ne	4247c4 <nftw@plt+0x21c44>  // b.any
  424850:	mov	w3, w24
  424854:	mov	w2, #0x0                   	// #0
  424858:	mov	x1, x19
  42485c:	mov	x0, x23
  424860:	bl	424640 <nftw@plt+0x21ac0>
  424864:	ldp	x23, x24, [sp, #48]
  424868:	ldp	x25, x26, [sp, #64]
  42486c:	b	424908 <nftw@plt+0x21d88>
  424870:	ldr	x4, [x19, #8]
  424874:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424878:	add	x3, x3, #0x9f0
  42487c:	mov	w2, w24
  424880:	mov	w1, #0x3                   	// #3
  424884:	mov	x0, x23
  424888:	bl	41fd68 <nftw@plt+0x1d1e8>
  42488c:	b	4248e0 <nftw@plt+0x21d60>
  424890:	ldr	x20, [x19, #120]
  424894:	b	4247ec <nftw@plt+0x21c6c>
  424898:	tbnz	x0, #63, 424918 <nftw@plt+0x21d98>
  42489c:	cmp	w27, #0x0
  4248a0:	ccmp	x22, x20, #0x4, ne  // ne = any
  4248a4:	b.ne	424940 <nftw@plt+0x21dc0>  // b.any
  4248a8:	add	x6, x19, #0x78
  4248ac:	add	x5, x19, #0x30
  4248b0:	mov	x4, x22
  4248b4:	add	x3, x20, #0x10
  4248b8:	mov	x2, x21
  4248bc:	ldr	x1, [x23, #1184]
  4248c0:	mov	x0, x23
  4248c4:	bl	418cc0 <nftw@plt+0x16140>
  4248c8:	str	x0, [x19, #40]
  4248cc:	mov	w0, #0x1                   	// #1
  4248d0:	strb	w0, [x19, #213]
  4248d4:	mov	w25, #0x1                   	// #1
  4248d8:	ldp	x21, x22, [sp, #32]
  4248dc:	ldr	x27, [sp, #80]
  4248e0:	eor	w25, w25, #0x1
  4248e4:	strb	w25, [x19, #211]
  4248e8:	ldr	w0, [x19, #200]
  4248ec:	bl	4027a0 <close@plt>
  4248f0:	mov	w0, #0xffffffff            	// #-1
  4248f4:	str	w0, [x19, #200]
  4248f8:	ldrb	w20, [x19, #211]
  4248fc:	eor	w20, w20, #0x1
  424900:	ldp	x23, x24, [sp, #48]
  424904:	ldp	x25, x26, [sp, #64]
  424908:	mov	w0, w20
  42490c:	ldp	x19, x20, [sp, #16]
  424910:	ldp	x29, x30, [sp], #96
  424914:	ret
  424918:	mov	w3, w24
  42491c:	ldr	x2, [x19, #8]
  424920:	mov	w1, #0x3                   	// #3
  424924:	mov	x0, x23
  424928:	bl	41ff00 <nftw@plt+0x1d380>
  42492c:	mov	x0, x21
  424930:	bl	402910 <free@plt>
  424934:	ldp	x21, x22, [sp, #32]
  424938:	ldr	x27, [sp, #80]
  42493c:	b	4248e0 <nftw@plt+0x21d60>
  424940:	ldr	x4, [x19, #8]
  424944:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424948:	add	x3, x3, #0xa08
  42494c:	mov	w2, w24
  424950:	mov	w1, #0x0                   	// #0
  424954:	mov	x0, x23
  424958:	bl	41fd68 <nftw@plt+0x1d1e8>
  42495c:	b	4248a8 <nftw@plt+0x21d28>
  424960:	mov	x20, x22
  424964:	b	4248a8 <nftw@plt+0x21d28>
  424968:	ldp	x23, x24, [sp, #48]
  42496c:	ldp	x25, x26, [sp, #64]
  424970:	b	424908 <nftw@plt+0x21d88>
  424974:	ldp	x23, x24, [sp, #48]
  424978:	ldp	x25, x26, [sp, #64]
  42497c:	b	424908 <nftw@plt+0x21d88>
  424980:	stp	x29, x30, [sp, #-48]!
  424984:	mov	x29, sp
  424988:	stp	x19, x20, [sp, #16]
  42498c:	mov	x19, x0
  424990:	ldrb	w0, [x1]
  424994:	add	x20, x19, #0xd8
  424998:	cmp	w0, #0x2f
  42499c:	b.eq	4249c0 <nftw@plt+0x21e40>  // b.none
  4249a0:	ldr	x0, [x19]
  4249a4:	cbz	x0, 4249d0 <nftw@plt+0x21e50>
  4249a8:	ldr	x20, [x0, #80]
  4249ac:	cmp	w3, #0x1
  4249b0:	b.eq	4249d8 <nftw@plt+0x21e58>  // b.none
  4249b4:	cbz	w2, 4249f4 <nftw@plt+0x21e74>
  4249b8:	ldr	x20, [x19, #208]
  4249bc:	cbz	x20, 424a90 <nftw@plt+0x21f10>
  4249c0:	mov	x0, x20
  4249c4:	ldp	x19, x20, [sp, #16]
  4249c8:	ldp	x29, x30, [sp], #48
  4249cc:	ret
  4249d0:	ldr	x20, [x19, #288]
  4249d4:	b	4249ac <nftw@plt+0x21e2c>
  4249d8:	ldr	x0, [x20, #64]
  4249dc:	cbz	x0, 424aac <nftw@plt+0x21f2c>
  4249e0:	add	x3, x19, #0xd8
  4249e4:	cmp	x0, x3
  4249e8:	b.eq	424aac <nftw@plt+0x21f2c>  // b.none
  4249ec:	ldr	x20, [x0]
  4249f0:	b	4249bc <nftw@plt+0x21e3c>
  4249f4:	cmp	w3, #0x3
  4249f8:	b.eq	424a0c <nftw@plt+0x21e8c>  // b.none
  4249fc:	ldrb	w0, [x19, #416]
  424a00:	cbz	w0, 424a28 <nftw@plt+0x21ea8>
  424a04:	ldr	x20, [x19, #200]
  424a08:	b	4249bc <nftw@plt+0x21e3c>
  424a0c:	mov	w2, #0x0                   	// #0
  424a10:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424a14:	add	x1, x1, #0xa28
  424a18:	mov	x0, x19
  424a1c:	bl	424038 <nftw@plt+0x214b8>
  424a20:	mov	x20, x0
  424a24:	b	4249c0 <nftw@plt+0x21e40>
  424a28:	ldr	x0, [x20, #24]
  424a2c:	cbz	x0, 424a54 <nftw@plt+0x21ed4>
  424a30:	ldr	x1, [x20, #24]
  424a34:	ldr	x0, [x19]
  424a38:	mov	w2, #0x0                   	// #0
  424a3c:	cbz	x0, 424a44 <nftw@plt+0x21ec4>
  424a40:	ldrb	w2, [x0, #106]
  424a44:	mov	x0, x19
  424a48:	bl	424038 <nftw@plt+0x214b8>
  424a4c:	mov	x20, x0
  424a50:	b	4249c0 <nftw@plt+0x21e40>
  424a54:	stp	x21, x22, [sp, #32]
  424a58:	ldr	x0, [x20, #8]
  424a5c:	bl	44a240 <nftw@plt+0x476c0>
  424a60:	ldr	x21, [x20, #8]
  424a64:	sub	x21, x0, x21
  424a68:	add	x0, x21, #0x1
  424a6c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  424a70:	mov	x22, x0
  424a74:	mov	x2, x21
  424a78:	ldr	x1, [x20, #8]
  424a7c:	bl	402490 <memcpy@plt>
  424a80:	strb	wzr, [x22, x21]
  424a84:	str	x22, [x20, #24]
  424a88:	ldp	x21, x22, [sp, #32]
  424a8c:	b	424a30 <nftw@plt+0x21eb0>
  424a90:	mov	x3, x1
  424a94:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424a98:	add	x2, x2, #0xa30
  424a9c:	mov	w1, #0x3                   	// #3
  424aa0:	mov	x0, x19
  424aa4:	bl	41f990 <nftw@plt+0x1ce10>
  424aa8:	b	4249c0 <nftw@plt+0x21e40>
  424aac:	cbnz	w2, 4249b8 <nftw@plt+0x21e38>
  424ab0:	b	4249fc <nftw@plt+0x21e7c>
  424ab4:	ldr	w0, [x0, #204]
  424ab8:	cmp	w0, #0x0
  424abc:	cset	w0, ne  // ne = any
  424ac0:	ret
  424ac4:	stp	x29, x30, [sp, #-304]!
  424ac8:	mov	x29, sp
  424acc:	stp	x19, x20, [sp, #16]
  424ad0:	stp	x21, x22, [sp, #32]
  424ad4:	stp	x23, x24, [sp, #48]
  424ad8:	stp	x25, x26, [sp, #64]
  424adc:	mov	x20, x0
  424ae0:	str	x1, [sp, #112]
  424ae4:	mov	x23, x2
  424ae8:	and	w0, w3, #0xff
  424aec:	str	w0, [sp, #136]
  424af0:	str	w4, [sp, #144]
  424af4:	and	w0, w5, #0xff
  424af8:	str	w0, [sp, #132]
  424afc:	str	w6, [sp, #140]
  424b00:	cbz	x2, 424bd8 <nftw@plt+0x22058>
  424b04:	ldr	x19, [x20, #296]
  424b08:	ldr	x21, [sp, #112]
  424b0c:	mov	x0, x21
  424b10:	bl	449e88 <nftw@plt+0x47308>
  424b14:	mov	w3, #0x1                   	// #1
  424b18:	mov	w2, w0
  424b1c:	mov	x1, x21
  424b20:	mov	x0, x19
  424b24:	bl	449a48 <nftw@plt+0x46ec8>
  424b28:	mov	x25, x0
  424b2c:	ldr	x0, [x0]
  424b30:	cbz	x0, 424b48 <nftw@plt+0x21fc8>
  424b34:	ldr	x1, [x0, #8]
  424b38:	cmp	x23, x1
  424b3c:	b.eq	4252fc <nftw@plt+0x2277c>  // b.none
  424b40:	ldr	x0, [x0]
  424b44:	cbnz	x0, 424b34 <nftw@plt+0x21fb4>
  424b48:	mov	x1, #0xd8                  	// #216
  424b4c:	mov	x0, #0x1                   	// #1
  424b50:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  424b54:	mov	x19, x0
  424b58:	ldr	x0, [x20]
  424b5c:	cmp	x0, #0x0
  424b60:	cset	w0, eq  // eq = none
  424b64:	strb	w0, [x19, #212]
  424b68:	mov	w0, #0xffffffff            	// #-1
  424b6c:	str	w0, [x19, #200]
  424b70:	str	x23, [x19, #64]
  424b74:	ldr	x0, [sp, #112]
  424b78:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  424b7c:	str	x0, [x19]
  424b80:	ldr	w1, [sp, #132]
  424b84:	mov	w0, w1
  424b88:	cbnz	w1, 424ba0 <nftw@plt+0x22020>
  424b8c:	ldr	x1, [x20]
  424b90:	ldr	w0, [sp, #132]
  424b94:	cbz	x1, 424ba0 <nftw@plt+0x22020>
  424b98:	ldr	x0, [x1, #80]
  424b9c:	ldrb	w0, [x0, #214]
  424ba0:	strb	w0, [x19, #214]
  424ba4:	ldr	w0, [sp, #136]
  424ba8:	cbnz	w0, 4251c0 <nftw@plt+0x22640>
  424bac:	stp	x27, x28, [sp, #80]
  424bb0:	str	w0, [sp, #168]
  424bb4:	str	w0, [sp, #128]
  424bb8:	str	w0, [sp, #148]
  424bbc:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424bc0:	add	x0, x0, #0xae8
  424bc4:	str	x0, [sp, #160]
  424bc8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  424bcc:	add	x0, x0, #0x860
  424bd0:	str	x0, [sp, #152]
  424bd4:	b	424d80 <nftw@plt+0x22200>
  424bd8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424bdc:	add	x3, x3, #0xa60
  424be0:	mov	w2, w6
  424be4:	mov	w1, #0x4                   	// #4
  424be8:	mov	x0, x20
  424bec:	bl	41fd68 <nftw@plt+0x1d1e8>
  424bf0:	b	424b04 <nftw@plt+0x21f84>
  424bf4:	ldr	x21, [x19, #64]
  424bf8:	ldr	x22, [x19]
  424bfc:	ldr	x0, [x21, #32]
  424c00:	cbz	x0, 424cf4 <nftw@plt+0x22174>
  424c04:	ldr	x0, [x21, #32]
  424c08:	ldr	x0, [x0]
  424c0c:	cbz	x0, 424c30 <nftw@plt+0x220b0>
  424c10:	mov	x24, #0x0                   	// #0
  424c14:	mov	x1, x22
  424c18:	bl	448fdc <nftw@plt+0x4645c>
  424c1c:	cbz	w0, 424d00 <nftw@plt+0x22180>
  424c20:	add	x24, x24, #0x2
  424c24:	ldr	x0, [x21, #32]
  424c28:	ldr	x0, [x0, x24, lsl #3]
  424c2c:	cbnz	x0, 424c14 <nftw@plt+0x22094>
  424c30:	ldrb	w0, [x22]
  424c34:	cmp	w0, #0x2f
  424c38:	b.eq	424d88 <nftw@plt+0x22208>  // b.none
  424c3c:	mov	w1, #0x2f                  	// #47
  424c40:	mov	x0, x22
  424c44:	bl	402940 <strchr@plt>
  424c48:	mov	x24, x0
  424c4c:	cmp	x0, #0x0
  424c50:	ccmp	x22, x0, #0x4, ne  // ne = any
  424c54:	b.eq	424d88 <nftw@plt+0x22208>  // b.none
  424c58:	sub	x28, x0, x22
  424c5c:	add	x0, x28, #0x1
  424c60:	str	x0, [sp, #120]
  424c64:	ldr	w27, [x21, #16]
  424c68:	add	x27, x27, x0
  424c6c:	add	x0, x27, #0x2
  424c70:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  424c74:	mov	x26, x0
  424c78:	ldr	w28, [x21, #16]
  424c7c:	add	x1, x0, x28
  424c80:	str	x1, [sp, #104]
  424c84:	mov	x2, x28
  424c88:	ldr	x1, [x21, #8]
  424c8c:	bl	402490 <memcpy@plt>
  424c90:	ldr	w0, [x21, #16]
  424c94:	cbz	w0, 424cc4 <nftw@plt+0x22144>
  424c98:	sub	w0, w0, #0x1
  424c9c:	ldr	x1, [x21, #8]
  424ca0:	ldrb	w0, [x1, w0, uxtw]
  424ca4:	cmp	w0, #0x2f
  424ca8:	b.eq	424cc4 <nftw@plt+0x22144>  // b.none
  424cac:	mov	w0, #0x2f                  	// #47
  424cb0:	strb	w0, [x26, x28]
  424cb4:	add	x27, x27, #0x1
  424cb8:	ldr	x1, [sp, #104]
  424cbc:	add	x0, x1, #0x1
  424cc0:	str	x0, [sp, #104]
  424cc4:	ldr	x2, [sp, #120]
  424cc8:	mov	x1, x22
  424ccc:	ldr	x0, [sp, #104]
  424cd0:	bl	402490 <memcpy@plt>
  424cd4:	strb	wzr, [x26, x27]
  424cd8:	ldrb	w2, [x21, #20]
  424cdc:	mov	x1, x26
  424ce0:	mov	x0, x20
  424ce4:	bl	424038 <nftw@plt+0x214b8>
  424ce8:	mov	x21, x0
  424cec:	add	x22, x24, #0x1
  424cf0:	b	424bfc <nftw@plt+0x2207c>
  424cf4:	mov	x0, x21
  424cf8:	bl	424214 <nftw@plt+0x21694>
  424cfc:	b	424c04 <nftw@plt+0x22084>
  424d00:	add	x24, x24, #0x1
  424d04:	ldr	x0, [x21, #32]
  424d08:	ldr	x0, [x0, x24, lsl #3]
  424d0c:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  424d10:	mov	x21, x0
  424d14:	b	424da4 <nftw@plt+0x22224>
  424d18:	ldr	x0, [x19]
  424d1c:	bl	423f44 <nftw@plt+0x213c4>
  424d20:	mov	x21, x0
  424d24:	b	424da0 <nftw@plt+0x22220>
  424d28:	mov	x0, x24
  424d2c:	bl	402910 <free@plt>
  424d30:	mov	x0, x21
  424d34:	bl	449e88 <nftw@plt+0x47308>
  424d38:	mov	w22, w0
  424d3c:	mov	w2, w0
  424d40:	mov	x1, x21
  424d44:	ldr	x0, [x20, #320]
  424d48:	bl	4498d4 <nftw@plt+0x46d54>
  424d4c:	cbz	x0, 424df0 <nftw@plt+0x22270>
  424d50:	mov	w0, #0x2                   	// #2
  424d54:	str	w0, [x19, #204]
  424d58:	ldr	x0, [x19, #64]
  424d5c:	ldr	x21, [x0]
  424d60:	str	x21, [x19, #64]
  424d64:	cbz	x21, 424fd0 <nftw@plt+0x22450>
  424d68:	ldr	x0, [x20, #208]
  424d6c:	cmp	x21, x0
  424d70:	b.eq	425114 <nftw@plt+0x22594>  // b.none
  424d74:	ldr	x0, [x20, #200]
  424d78:	cmp	x21, x0
  424d7c:	b.eq	4250ec <nftw@plt+0x2256c>  // b.none
  424d80:	ldrb	w0, [x20, #1145]
  424d84:	cbnz	w0, 424bf4 <nftw@plt+0x22074>
  424d88:	ldr	x1, [x19, #64]
  424d8c:	ldr	x2, [x1, #40]
  424d90:	cbz	x2, 424d18 <nftw@plt+0x22198>
  424d94:	ldr	x0, [x19]
  424d98:	blr	x2
  424d9c:	mov	x21, x0
  424da0:	cbz	x21, 424fc0 <nftw@plt+0x22440>
  424da4:	ldrb	w0, [x20, #1245]
  424da8:	cbz	w0, 424d30 <nftw@plt+0x221b0>
  424dac:	ldr	x0, [x19, #64]
  424db0:	ldrb	w0, [x0, #20]
  424db4:	cbz	w0, 424d30 <nftw@plt+0x221b0>
  424db8:	mov	x0, x21
  424dbc:	bl	44a254 <nftw@plt+0x476d4>
  424dc0:	mov	x24, x0
  424dc4:	cbz	x0, 424d28 <nftw@plt+0x221a8>
  424dc8:	bl	4024f0 <strlen@plt>
  424dcc:	mov	x22, x0
  424dd0:	mov	x0, x21
  424dd4:	bl	4024f0 <strlen@plt>
  424dd8:	cmp	x22, x0
  424ddc:	b.cs	424d28 <nftw@plt+0x221a8>  // b.hs, b.nlast
  424de0:	mov	x0, x21
  424de4:	bl	402910 <free@plt>
  424de8:	mov	x21, x24
  424dec:	b	424d30 <nftw@plt+0x221b0>
  424df0:	str	x21, [x19, #8]
  424df4:	ldr	x0, [x19]
  424df8:	ldrb	w0, [x0]
  424dfc:	cbz	w0, 425224 <nftw@plt+0x226a4>
  424e00:	ldr	x0, [x20, #968]
  424e04:	cbz	x0, 425224 <nftw@plt+0x226a4>
  424e08:	ldr	x0, [x20, #280]
  424e0c:	cbz	x0, 424e20 <nftw@plt+0x222a0>
  424e10:	ldrb	w1, [x0, #214]
  424e14:	cbnz	w1, 424ea8 <nftw@plt+0x22328>
  424e18:	ldrb	w0, [x0, #212]
  424e1c:	cbz	w0, 425224 <nftw@plt+0x226a4>
  424e20:	mov	x0, x21
  424e24:	bl	4024f0 <strlen@plt>
  424e28:	mov	x26, x0
  424e2c:	add	x27, x0, #0x5
  424e30:	mov	x0, x27
  424e34:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  424e38:	mov	x24, x0
  424e3c:	mov	x2, x26
  424e40:	mov	x1, x21
  424e44:	bl	402490 <memcpy@plt>
  424e48:	add	x0, x24, x26
  424e4c:	ldr	x2, [sp, #160]
  424e50:	ldr	w1, [x2]
  424e54:	str	w1, [x24, x26]
  424e58:	ldrb	w1, [x2, #4]
  424e5c:	strb	w1, [x0, #4]
  424e60:	add	x2, sp, #0xb0
  424e64:	mov	x1, x24
  424e68:	mov	w0, #0x0                   	// #0
  424e6c:	bl	402ac0 <__xstat@plt>
  424e70:	cbnz	w0, 42521c <nftw@plt+0x2269c>
  424e74:	ldr	w0, [sp, #192]
  424e78:	and	w0, w0, #0xf000
  424e7c:	cmp	w0, #0x4, lsl #12
  424e80:	b.eq	424eb4 <nftw@plt+0x22334>  // b.none
  424e84:	mov	x2, x24
  424e88:	mov	x1, x19
  424e8c:	mov	x0, x20
  424e90:	bl	424510 <nftw@plt+0x21990>
  424e94:	and	w26, w0, #0xff
  424e98:	cbz	w26, 425214 <nftw@plt+0x22694>
  424e9c:	str	x24, [x19, #16]
  424ea0:	ldp	x27, x28, [sp, #80]
  424ea4:	b	425200 <nftw@plt+0x22680>
  424ea8:	ldr	x0, [x0, #32]
  424eac:	cbnz	x0, 424e10 <nftw@plt+0x22290>
  424eb0:	b	424e20 <nftw@plt+0x222a0>
  424eb4:	mov	x0, x24
  424eb8:	bl	4025c0 <opendir@plt>
  424ebc:	str	x0, [sp, #104]
  424ec0:	cbz	x0, 425214 <nftw@plt+0x22694>
  424ec4:	add	x26, x24, x26
  424ec8:	mov	w0, #0x2f                  	// #47
  424ecc:	strb	w0, [x26, #4]
  424ed0:	str	x27, [sp, #120]
  424ed4:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  424ed8:	add	x0, x0, #0xa80
  424edc:	str	x0, [sp, #168]
  424ee0:	b	424f28 <nftw@plt+0x223a8>
  424ee4:	add	x0, x1, #0x40
  424ee8:	add	x0, x28, x0
  424eec:	str	x0, [sp, #120]
  424ef0:	mov	x1, x0
  424ef4:	mov	x0, x24
  424ef8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  424efc:	mov	x24, x0
  424f00:	mov	x2, x28
  424f04:	mov	x1, x26
  424f08:	add	x0, x24, x27
  424f0c:	bl	402490 <memcpy@plt>
  424f10:	mov	x2, x24
  424f14:	mov	x1, x19
  424f18:	mov	x0, x20
  424f1c:	bl	424510 <nftw@plt+0x21990>
  424f20:	ands	w26, w0, #0xff
  424f24:	b.ne	424f7c <nftw@plt+0x223fc>  // b.any
  424f28:	ldr	x0, [sp, #104]
  424f2c:	bl	402740 <readdir@plt>
  424f30:	cbz	x0, 424f78 <nftw@plt+0x223f8>
  424f34:	add	x26, x0, #0x13
  424f38:	ldr	x1, [sp, #152]
  424f3c:	mov	x0, x26
  424f40:	bl	402890 <strcmp@plt>
  424f44:	cbz	w0, 424f28 <nftw@plt+0x223a8>
  424f48:	ldr	x1, [sp, #168]
  424f4c:	mov	x0, x26
  424f50:	bl	402890 <strcmp@plt>
  424f54:	cbz	w0, 424f28 <nftw@plt+0x223a8>
  424f58:	mov	x0, x26
  424f5c:	bl	4024f0 <strlen@plt>
  424f60:	add	x28, x0, #0x1
  424f64:	add	x0, x27, x28
  424f68:	ldr	x1, [sp, #120]
  424f6c:	cmp	x0, x1
  424f70:	b.ls	424f00 <nftw@plt+0x22380>  // b.plast
  424f74:	b	424ee4 <nftw@plt+0x22364>
  424f78:	ldr	w26, [sp, #136]
  424f7c:	ldr	x0, [sp, #104]
  424f80:	bl	402780 <closedir@plt>
  424f84:	b	424e98 <nftw@plt+0x22318>
  424f88:	ldr	w3, [sp, #140]
  424f8c:	mov	w2, #0x0                   	// #0
  424f90:	mov	x1, x19
  424f94:	mov	x0, x20
  424f98:	bl	424640 <nftw@plt+0x21ac0>
  424f9c:	ldp	x27, x28, [sp, #80]
  424fa0:	b	425200 <nftw@plt+0x22680>
  424fa4:	add	x0, x20, #0x148
  424fa8:	bl	44a42c <_obstack_newchunk@@Base>
  424fac:	b	425264 <nftw@plt+0x226e4>
  424fb0:	ldrb	w0, [x24, #80]
  424fb4:	orr	w0, w0, #0x2
  424fb8:	strb	w0, [x24, #80]
  424fbc:	b	42529c <nftw@plt+0x2271c>
  424fc0:	mov	w0, #0x2                   	// #2
  424fc4:	str	w0, [x19, #204]
  424fc8:	str	xzr, [x19, #8]
  424fcc:	b	424d58 <nftw@plt+0x221d8>
  424fd0:	ldr	x3, [x20, #984]
  424fd4:	cbz	x3, 42502c <nftw@plt+0x224ac>
  424fd8:	add	x2, x19, #0x40
  424fdc:	ldr	x1, [sp, #112]
  424fe0:	mov	x0, x20
  424fe4:	blr	x3
  424fe8:	str	x0, [x19, #8]
  424fec:	cbz	x0, 425024 <nftw@plt+0x224a4>
  424ff0:	mov	x0, x19
  424ff4:	bl	424450 <nftw@plt+0x218d0>
  424ff8:	and	w0, w0, #0xff
  424ffc:	cbz	w0, 42501c <nftw@plt+0x2249c>
  425000:	ldr	x0, [x20, #280]
  425004:	str	x0, [x19, #32]
  425008:	str	x19, [x20, #280]
  42500c:	ldr	x0, [x25]
  425010:	cbz	x0, 425058 <nftw@plt+0x224d8>
  425014:	ldp	x27, x28, [sp, #80]
  425018:	b	425300 <nftw@plt+0x22780>
  42501c:	ldr	x0, [x19, #8]
  425020:	bl	402910 <free@plt>
  425024:	ldr	x0, [x19]
  425028:	str	x0, [x19, #8]
  42502c:	ldr	w0, [sp, #168]
  425030:	cbnz	w0, 425070 <nftw@plt+0x224f0>
  425034:	ldr	w0, [sp, #132]
  425038:	cbnz	w0, 4250ac <nftw@plt+0x2252c>
  42503c:	ldr	w3, [sp, #140]
  425040:	ldr	w2, [sp, #144]
  425044:	mov	x1, x19
  425048:	mov	x0, x20
  42504c:	bl	424640 <nftw@plt+0x21ac0>
  425050:	ldp	x27, x28, [sp, #80]
  425054:	b	425200 <nftw@plt+0x22680>
  425058:	str	x19, [x25]
  42505c:	mov	x1, x25
  425060:	ldr	x0, [x20, #296]
  425064:	bl	449d2c <nftw@plt+0x471ac>
  425068:	ldp	x27, x28, [sp, #80]
  42506c:	b	425300 <nftw@plt+0x22780>
  425070:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  425074:	add	x2, x2, #0xa88
  425078:	mov	w1, #0x3                   	// #3
  42507c:	mov	x0, x20
  425080:	bl	41f990 <nftw@plt+0x1ce10>
  425084:	mov	x0, x20
  425088:	bl	41eb14 <nftw@plt+0x1bf94>
  42508c:	ldrb	w0, [x0, #84]
  425090:	cbnz	w0, 425034 <nftw@plt+0x224b4>
  425094:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  425098:	add	x2, x2, #0xac0
  42509c:	mov	w1, #0x3                   	// #3
  4250a0:	mov	x0, x20
  4250a4:	bl	41f990 <nftw@plt+0x1ce10>
  4250a8:	b	425034 <nftw@plt+0x224b4>
  4250ac:	ldr	x0, [x19]
  4250b0:	bl	402910 <free@plt>
  4250b4:	mov	x0, x19
  4250b8:	bl	402910 <free@plt>
  4250bc:	ldr	x22, [x25]
  4250c0:	cbz	x22, 4250d0 <nftw@plt+0x22550>
  4250c4:	mov	x19, x21
  4250c8:	ldp	x27, x28, [sp, #80]
  4250cc:	b	425300 <nftw@plt+0x22780>
  4250d0:	str	x19, [x25]
  4250d4:	mov	x1, x25
  4250d8:	ldr	x0, [x20, #296]
  4250dc:	bl	449d2c <nftw@plt+0x471ac>
  4250e0:	mov	x19, x22
  4250e4:	ldp	x27, x28, [sp, #80]
  4250e8:	b	425300 <nftw@plt+0x22780>
  4250ec:	mov	w0, #0x1                   	// #1
  4250f0:	str	w0, [sp, #128]
  4250f4:	ldr	x22, [x25]
  4250f8:	cbz	x22, 424d80 <nftw@plt+0x22200>
  4250fc:	ldr	x24, [x22, #8]
  425100:	cmp	x21, x24
  425104:	b.eq	425120 <nftw@plt+0x225a0>  // b.none
  425108:	ldr	x22, [x22]
  42510c:	cbnz	x22, 4250fc <nftw@plt+0x2257c>
  425110:	b	424d80 <nftw@plt+0x22200>
  425114:	mov	w0, #0x1                   	// #1
  425118:	str	w0, [sp, #148]
  42511c:	b	4250f4 <nftw@plt+0x22574>
  425120:	ldr	x0, [x19]
  425124:	bl	402910 <free@plt>
  425128:	mov	x0, x19
  42512c:	bl	402910 <free@plt>
  425130:	ldr	x19, [x22, #24]
  425134:	ldp	x27, x28, [sp, #80]
  425138:	mov	x0, x20
  42513c:	bl	423fd0 <nftw@plt+0x21450>
  425140:	ldr	x1, [x25]
  425144:	str	x1, [x0]
  425148:	str	x23, [x0, #8]
  42514c:	ldr	x1, [x20, #40]
  425150:	ldr	w1, [x1, #56]
  425154:	str	w1, [x0, #16]
  425158:	str	x19, [x0, #24]
  42515c:	str	x0, [x25]
  425160:	ldr	w0, [sp, #148]
  425164:	cbz	w0, 425178 <nftw@plt+0x225f8>
  425168:	ldr	x0, [x20, #208]
  42516c:	cmp	x0, x24
  425170:	ccmp	x0, x23, #0x4, ne  // ne = any
  425174:	b.ne	4251cc <nftw@plt+0x2264c>  // b.any
  425178:	ldr	w0, [sp, #128]
  42517c:	cbz	w0, 425300 <nftw@plt+0x22780>
  425180:	ldr	x0, [x20, #200]
  425184:	cmp	x0, x23
  425188:	ccmp	x0, x24, #0x4, ne  // ne = any
  42518c:	b.eq	425300 <nftw@plt+0x22780>  // b.none
  425190:	mov	x0, x20
  425194:	bl	423fd0 <nftw@plt+0x21450>
  425198:	ldr	x1, [x25]
  42519c:	str	x1, [x0]
  4251a0:	ldr	x1, [x20, #200]
  4251a4:	str	x1, [x0, #8]
  4251a8:	ldr	x1, [x20, #40]
  4251ac:	ldr	w1, [x1, #56]
  4251b0:	str	w1, [x0, #16]
  4251b4:	str	x19, [x0, #24]
  4251b8:	str	x0, [x25]
  4251bc:	b	425300 <nftw@plt+0x22780>
  4251c0:	str	wzr, [sp, #128]
  4251c4:	str	wzr, [sp, #148]
  4251c8:	b	425200 <nftw@plt+0x22680>
  4251cc:	mov	x0, x20
  4251d0:	bl	423fd0 <nftw@plt+0x21450>
  4251d4:	ldr	x1, [x25]
  4251d8:	str	x1, [x0]
  4251dc:	ldr	x1, [x20, #208]
  4251e0:	str	x1, [x0, #8]
  4251e4:	ldr	x1, [x20, #40]
  4251e8:	ldr	w1, [x1, #56]
  4251ec:	str	w1, [x0, #16]
  4251f0:	str	x19, [x0, #24]
  4251f4:	str	x0, [x25]
  4251f8:	b	425178 <nftw@plt+0x225f8>
  4251fc:	ldp	x27, x28, [sp, #80]
  425200:	ldr	x0, [x20, #280]
  425204:	str	x0, [x19, #32]
  425208:	str	x19, [x20, #280]
  42520c:	mov	x24, #0x0                   	// #0
  425210:	b	425138 <nftw@plt+0x225b8>
  425214:	mov	w0, #0x1                   	// #1
  425218:	str	w0, [sp, #168]
  42521c:	mov	x0, x24
  425220:	bl	402910 <free@plt>
  425224:	mov	x0, x19
  425228:	bl	424450 <nftw@plt+0x218d0>
  42522c:	and	w0, w0, #0xff
  425230:	cbnz	w0, 4251fc <nftw@plt+0x2267c>
  425234:	ldr	w0, [x19, #204]
  425238:	cmp	w0, #0x2
  42523c:	b.ne	424f88 <nftw@plt+0x22408>  // b.any
  425240:	mov	x0, x21
  425244:	bl	4024f0 <strlen@plt>
  425248:	mov	x26, x0
  42524c:	add	x1, x0, #0x1
  425250:	ldr	x0, [x20, #360]
  425254:	ldr	x2, [x20, #352]
  425258:	sub	x0, x0, x2
  42525c:	cmp	x0, x1
  425260:	b.cc	424fa4 <nftw@plt+0x22424>  // b.lo, b.ul, b.last
  425264:	add	x24, x20, #0x148
  425268:	mov	x2, x26
  42526c:	mov	x1, x21
  425270:	ldr	x0, [x20, #352]
  425274:	bl	402490 <memcpy@plt>
  425278:	ldr	x1, [x20, #352]
  42527c:	add	x0, x1, x26
  425280:	add	x0, x0, #0x1
  425284:	str	x0, [x20, #352]
  425288:	strb	wzr, [x1, x26]
  42528c:	ldr	x26, [x20, #344]
  425290:	ldr	x1, [x20, #352]
  425294:	cmp	x26, x1
  425298:	b.eq	424fb0 <nftw@plt+0x22430>  // b.none
  42529c:	ldr	x0, [x20, #376]
  4252a0:	add	x1, x1, x0
  4252a4:	bic	x0, x1, x0
  4252a8:	str	x0, [x20, #352]
  4252ac:	ldr	x1, [x20, #336]
  4252b0:	ldr	x2, [x20, #360]
  4252b4:	sub	x0, x0, x1
  4252b8:	sub	x1, x2, x1
  4252bc:	cmp	x0, x1
  4252c0:	b.ls	4252c8 <nftw@plt+0x22748>  // b.plast
  4252c4:	str	x2, [x20, #352]
  4252c8:	ldr	x1, [x20, #352]
  4252cc:	str	x1, [x20, #344]
  4252d0:	mov	x0, x21
  4252d4:	bl	402910 <free@plt>
  4252d8:	mov	w3, #0x1                   	// #1
  4252dc:	mov	w2, w22
  4252e0:	mov	x1, x26
  4252e4:	ldr	x0, [x20, #320]
  4252e8:	bl	449a48 <nftw@plt+0x46ec8>
  4252ec:	str	x26, [x0]
  4252f0:	ldr	x0, [x19]
  4252f4:	str	x0, [x19, #8]
  4252f8:	b	424d58 <nftw@plt+0x221d8>
  4252fc:	ldr	x19, [x0, #24]
  425300:	mov	x0, x19
  425304:	ldp	x19, x20, [sp, #16]
  425308:	ldp	x21, x22, [sp, #32]
  42530c:	ldp	x23, x24, [sp, #48]
  425310:	ldp	x25, x26, [sp, #64]
  425314:	ldp	x29, x30, [sp], #304
  425318:	ret
  42531c:	stp	x29, x30, [sp, #-160]!
  425320:	mov	x29, sp
  425324:	stp	x21, x22, [sp, #32]
  425328:	stp	x23, x24, [sp, #48]
  42532c:	str	w3, [sp, #100]
  425330:	ldrb	w21, [x1, #210]
  425334:	cbnz	w21, 425390 <nftw@plt+0x22810>
  425338:	stp	x19, x20, [sp, #16]
  42533c:	mov	x20, x0
  425340:	mov	x19, x1
  425344:	and	w23, w2, #0xff
  425348:	cbnz	w23, 425398 <nftw@plt+0x22818>
  42534c:	ldr	x0, [x19, #56]
  425350:	cbz	x0, 42535c <nftw@plt+0x227dc>
  425354:	ldrb	w0, [x0, #18]
  425358:	tbnz	w0, #1, 425648 <nftw@plt+0x22ac8>
  42535c:	ldr	x1, [x19, #16]
  425360:	cbz	x1, 4253b4 <nftw@plt+0x22834>
  425364:	ldr	x4, [x20, #976]
  425368:	ldr	x3, [x19, #8]
  42536c:	ldr	w2, [x19, #200]
  425370:	mov	x0, x20
  425374:	blr	x4
  425378:	mov	w0, #0xffffffff            	// #-1
  42537c:	str	w0, [x19, #200]
  425380:	ldr	x0, [x19, #16]
  425384:	bl	402910 <free@plt>
  425388:	str	xzr, [x19, #16]
  42538c:	ldp	x19, x20, [sp, #16]
  425390:	mov	w24, #0x0                   	// #0
  425394:	b	425634 <nftw@plt+0x22ab4>
  425398:	mov	w0, #0x1                   	// #1
  42539c:	strb	w0, [x20, #417]
  4253a0:	strb	w0, [x1, #210]
  4253a4:	ldrh	w0, [x1, #208]
  4253a8:	cbz	w0, 42534c <nftw@plt+0x227cc>
  4253ac:	ldp	x19, x20, [sp, #16]
  4253b0:	b	425390 <nftw@plt+0x22810>
  4253b4:	ldr	w2, [sp, #100]
  4253b8:	mov	x1, x19
  4253bc:	mov	x0, x20
  4253c0:	bl	42477c <nftw@plt+0x21bfc>
  4253c4:	ands	w24, w0, #0xff
  4253c8:	b.ne	4253d4 <nftw@plt+0x22854>  // b.any
  4253cc:	ldp	x19, x20, [sp, #16]
  4253d0:	b	425390 <nftw@plt+0x22810>
  4253d4:	stp	x27, x28, [sp, #80]
  4253d8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4253dc:	ldr	x28, [x0, #2400]
  4253e0:	cbz	x28, 4254e0 <nftw@plt+0x22960>
  4253e4:	cbnz	w23, 4253f0 <nftw@plt+0x22870>
  4253e8:	ldrb	w0, [x28, #8]
  4253ec:	cbz	w0, 4254e0 <nftw@plt+0x22960>
  4253f0:	ldr	x0, [x19, #120]
  4253f4:	str	x0, [sp, #120]
  4253f8:	strb	wzr, [sp, #144]
  4253fc:	str	x19, [sp, #152]
  425400:	strb	w23, [sp, #145]
  425404:	ldr	x27, [x28], #16
  425408:	cbz	x27, 4254e0 <nftw@plt+0x22960>
  42540c:	stp	x25, x26, [sp, #64]
  425410:	mov	x26, #0x0                   	// #0
  425414:	add	x0, sp, #0x80
  425418:	str	x0, [sp, #104]
  42541c:	b	42545c <nftw@plt+0x228dc>
  425420:	ldr	x0, [sp, #152]
  425424:	ldr	x2, [sp, #104]
  425428:	ldr	x1, [x0, #120]
  42542c:	ldr	x0, [x0, #40]
  425430:	bl	4487a4 <nftw@plt+0x45c24>
  425434:	mov	w0, #0x1                   	// #1
  425438:	strb	w0, [sp, #144]
  42543c:	b	425484 <nftw@plt+0x22904>
  425440:	ldrb	w0, [x25, #24]
  425444:	eor	w0, w0, #0x1
  425448:	cmp	w0, #0x0
  42544c:	b.le	4254a0 <nftw@plt+0x22920>
  425450:	add	x26, x22, #0x1
  425454:	cmp	x26, x27
  425458:	b.cs	4254dc <nftw@plt+0x2295c>  // b.hs, b.nlast
  42545c:	add	x22, x27, x26
  425460:	lsr	x22, x22, #1
  425464:	add	x25, x28, x22, lsl #5
  425468:	mov	x2, #0x8                   	// #8
  42546c:	mov	x1, x25
  425470:	add	x0, sp, #0x78
  425474:	bl	402850 <memcmp@plt>
  425478:	cbnz	w0, 4254b4 <nftw@plt+0x22934>
  42547c:	ldrb	w0, [sp, #144]
  425480:	cbz	w0, 425420 <nftw@plt+0x228a0>
  425484:	mov	x2, #0x10                  	// #16
  425488:	add	x1, x25, #0x8
  42548c:	ldr	x0, [sp, #104]
  425490:	bl	402850 <memcmp@plt>
  425494:	cbnz	w0, 4254b4 <nftw@plt+0x22934>
  425498:	ldrb	w0, [sp, #145]
  42549c:	cbz	w0, 425440 <nftw@plt+0x228c0>
  4254a0:	cbz	w23, 4254c0 <nftw@plt+0x22940>
  4254a4:	ldp	x19, x20, [sp, #16]
  4254a8:	ldp	x25, x26, [sp, #64]
  4254ac:	ldp	x27, x28, [sp, #80]
  4254b0:	b	425390 <nftw@plt+0x22810>
  4254b4:	tbz	w0, #31, 425448 <nftw@plt+0x228c8>
  4254b8:	mov	x27, x22
  4254bc:	b	425454 <nftw@plt+0x228d4>
  4254c0:	mov	w0, #0x1                   	// #1
  4254c4:	strb	w0, [x20, #417]
  4254c8:	strb	w0, [x19, #210]
  4254cc:	ldp	x19, x20, [sp, #16]
  4254d0:	ldp	x25, x26, [sp, #64]
  4254d4:	ldp	x27, x28, [sp, #80]
  4254d8:	b	425390 <nftw@plt+0x22810>
  4254dc:	ldp	x25, x26, [sp, #64]
  4254e0:	ldrb	w0, [x20, #417]
  4254e4:	cbz	w0, 425560 <nftw@plt+0x229e0>
  4254e8:	ldr	x22, [x20, #280]
  4254ec:	cbz	x22, 425560 <nftw@plt+0x229e0>
  4254f0:	mov	x28, #0xd8                  	// #216
  4254f4:	mov	w27, #0xffffffff            	// #-1
  4254f8:	b	42566c <nftw@plt+0x22aec>
  4254fc:	ldr	x25, [x22, #64]
  425500:	ldr	x0, [x22]
  425504:	str	x0, [sp, #104]
  425508:	mov	x1, x28
  42550c:	mov	x0, #0x1                   	// #1
  425510:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  425514:	mov	x26, x0
  425518:	ldr	x0, [x20]
  42551c:	cmp	x0, #0x0
  425520:	cset	w0, eq  // eq = none
  425524:	strb	w0, [x26, #212]
  425528:	str	w27, [x26, #200]
  42552c:	str	x25, [x26, #64]
  425530:	ldr	x0, [sp, #104]
  425534:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  425538:	str	x0, [x26]
  42553c:	ldr	x0, [x22, #8]
  425540:	str	x0, [x26, #8]
  425544:	b	4256c0 <nftw@plt+0x22b40>
  425548:	str	xzr, [x26, #8]
  42554c:	mov	x0, x26
  425550:	bl	423e1c <nftw@plt+0x2129c>
  425554:	cbnz	w25, 425708 <nftw@plt+0x22b88>
  425558:	ldp	x25, x26, [sp, #64]
  42555c:	b	425664 <nftw@plt+0x22ae4>
  425560:	ldr	x0, [x20]
  425564:	mov	w22, #0x0                   	// #0
  425568:	cbz	x0, 42558c <nftw@plt+0x22a0c>
  42556c:	ldr	x1, [x19, #64]
  425570:	cbz	x1, 42558c <nftw@plt+0x22a0c>
  425574:	ldrb	w0, [x0, #106]
  425578:	ldrb	w2, [x1, #20]
  42557c:	ldrb	w22, [x1, #20]
  425580:	cmp	w2, w0, uxtb
  425584:	csel	w22, w22, w0, cs  // cs = hs, nlast
  425588:	and	w22, w22, #0xff
  42558c:	cmp	w22, #0x0
  425590:	cset	w0, ne  // ne = any
  425594:	ldr	w1, [x20, #1200]
  425598:	cmp	w1, w0
  42559c:	b.le	4255c4 <nftw@plt+0x22a44>
  4255a0:	ldrh	w0, [x19, #208]
  4255a4:	cbnz	w0, 4255c4 <nftw@plt+0x22a44>
  4255a8:	ldrb	w0, [x19, #212]
  4255ac:	cbz	w0, 4255b8 <nftw@plt+0x22a38>
  4255b0:	ldrb	w0, [x20, #1206]
  4255b4:	cbnz	w0, 4255c4 <nftw@plt+0x22a44>
  4255b8:	ldr	x1, [x19, #8]
  4255bc:	ldr	x0, [x20, #712]
  4255c0:	bl	4322b0 <nftw@plt+0x2f730>
  4255c4:	strb	wzr, [x19, #213]
  4255c8:	ldrh	w0, [x19, #208]
  4255cc:	add	w0, w0, #0x1
  4255d0:	strh	w0, [x19, #208]
  4255d4:	ldr	x1, [x19, #40]
  4255d8:	ldr	x2, [x19, #120]
  4255dc:	ldrb	w0, [x20, #1155]
  4255e0:	cbz	w0, 4255ec <nftw@plt+0x22a6c>
  4255e4:	ldrb	w21, [x20, #1244]
  4255e8:	eor	w21, w21, #0x1
  4255ec:	mov	w3, w21
  4255f0:	mov	x0, x20
  4255f4:	bl	41eb74 <nftw@plt+0x1bff4>
  4255f8:	str	x19, [x0, #80]
  4255fc:	strb	w22, [x0, #106]
  425600:	ldr	x1, [x19, #48]
  425604:	str	x1, [x0, #40]
  425608:	mov	w0, #0x1                   	// #1
  42560c:	strb	w0, [x20, #440]
  425610:	str	xzr, [x20, #424]
  425614:	mov	w4, w22
  425618:	mov	w3, #0x1                   	// #1
  42561c:	ldr	x2, [x19, #8]
  425620:	mov	w1, #0x0                   	// #0
  425624:	mov	x0, x20
  425628:	bl	41e324 <nftw@plt+0x1b7a4>
  42562c:	ldp	x19, x20, [sp, #16]
  425630:	ldp	x27, x28, [sp, #80]
  425634:	mov	w0, w24
  425638:	ldp	x21, x22, [sp, #32]
  42563c:	ldp	x23, x24, [sp, #48]
  425640:	ldp	x29, x30, [sp], #160
  425644:	ret
  425648:	ldp	x19, x20, [sp, #16]
  42564c:	b	425390 <nftw@plt+0x22810>
  425650:	ldr	x0, [x22, #40]
  425654:	cbz	x0, 42571c <nftw@plt+0x22b9c>
  425658:	ldrb	w25, [x22, #213]
  42565c:	cbz	w25, 425548 <nftw@plt+0x229c8>
  425660:	ldp	x25, x26, [sp, #64]
  425664:	ldr	x22, [x22, #32]
  425668:	cbz	x22, 425560 <nftw@plt+0x229e0>
  42566c:	cmp	x19, x22
  425670:	b.eq	425664 <nftw@plt+0x22ae4>  // b.none
  425674:	cbnz	w23, 425680 <nftw@plt+0x22b00>
  425678:	ldrb	w0, [x22, #210]
  42567c:	cbz	w0, 425664 <nftw@plt+0x22ae4>
  425680:	ldr	w0, [x22, #204]
  425684:	cbnz	w0, 425664 <nftw@plt+0x22ae4>
  425688:	ldr	x1, [x22, #160]
  42568c:	ldr	x0, [x19, #160]
  425690:	cmp	x1, x0
  425694:	b.ne	425664 <nftw@plt+0x22ae4>  // b.any
  425698:	ldr	x1, [x22, #120]
  42569c:	ldr	x0, [x19, #120]
  4256a0:	cmp	x1, x0
  4256a4:	b.ne	425664 <nftw@plt+0x22ae4>  // b.any
  4256a8:	stp	x25, x26, [sp, #64]
  4256ac:	ldr	x0, [x22, #40]
  4256b0:	mov	x26, x22
  4256b4:	cbz	x0, 4256c0 <nftw@plt+0x22b40>
  4256b8:	ldrb	w0, [x22, #213]
  4256bc:	cbz	w0, 4254fc <nftw@plt+0x2297c>
  4256c0:	ldr	w2, [sp, #100]
  4256c4:	mov	x1, x26
  4256c8:	mov	x0, x20
  4256cc:	bl	42477c <nftw@plt+0x21bfc>
  4256d0:	ands	w25, w0, #0xff
  4256d4:	b.eq	425650 <nftw@plt+0x22ad0>  // b.none
  4256d8:	ldr	x2, [x19, #120]
  4256dc:	ldr	x0, [x26, #120]
  4256e0:	cmp	x0, x2
  4256e4:	b.ne	425650 <nftw@plt+0x22ad0>  // b.any
  4256e8:	ldr	x1, [x19, #40]
  4256ec:	ldr	x0, [x26, #40]
  4256f0:	bl	402850 <memcmp@plt>
  4256f4:	cbnz	w0, 425650 <nftw@plt+0x22ad0>
  4256f8:	ldr	x0, [x22, #40]
  4256fc:	cbz	x0, 425708 <nftw@plt+0x22b88>
  425700:	ldrb	w0, [x22, #213]
  425704:	cbz	w0, 425548 <nftw@plt+0x229c8>
  425708:	mov	w24, w21
  42570c:	ldp	x19, x20, [sp, #16]
  425710:	ldp	x25, x26, [sp, #64]
  425714:	ldp	x27, x28, [sp, #80]
  425718:	b	425634 <nftw@plt+0x22ab4>
  42571c:	ldp	x25, x26, [sp, #64]
  425720:	b	425664 <nftw@plt+0x22ae4>
  425724:	mov	w2, #0x1                   	// #1
  425728:	strb	w2, [x0, #417]
  42572c:	strb	w2, [x1, #210]
  425730:	ret
  425734:	stp	x29, x30, [sp, #-64]!
  425738:	mov	x29, sp
  42573c:	stp	x19, x20, [sp, #16]
  425740:	stp	x21, x22, [sp, #32]
  425744:	stp	x23, x24, [sp, #48]
  425748:	mov	x19, x0
  42574c:	mov	x22, x1
  425750:	mov	w23, w2
  425754:	mov	w20, w3
  425758:	mov	w21, w4
  42575c:	cmp	w3, #0x3
  425760:	b.eq	4257c0 <nftw@plt+0x22c40>  // b.none
  425764:	bl	424980 <nftw@plt+0x21e00>
  425768:	mov	x2, x0
  42576c:	mov	w0, #0x0                   	// #0
  425770:	cbz	x2, 4257ac <nftw@plt+0x22c2c>
  425774:	cmp	w20, #0x4
  425778:	cset	w24, eq  // eq = none
  42577c:	mov	w6, w21
  425780:	mov	w5, w24
  425784:	mov	w4, w23
  425788:	mov	w3, #0x0                   	// #0
  42578c:	mov	x1, x22
  425790:	mov	x0, x19
  425794:	bl	424ac4 <nftw@plt+0x21f44>
  425798:	mov	x22, x0
  42579c:	cmp	x0, #0x0
  4257a0:	mov	w0, #0x0                   	// #0
  4257a4:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  4257a8:	b.eq	425818 <nftw@plt+0x22c98>  // b.none
  4257ac:	ldp	x19, x20, [sp, #16]
  4257b0:	ldp	x21, x22, [sp, #32]
  4257b4:	ldp	x23, x24, [sp, #48]
  4257b8:	ldp	x29, x30, [sp], #64
  4257bc:	ret
  4257c0:	ldr	x0, [x0, #448]
  4257c4:	ldr	x1, [x19, #488]
  4257c8:	ldr	x1, [x1, #16]
  4257cc:	cmp	x0, x1
  4257d0:	b.eq	4257d8 <nftw@plt+0x22c58>  // b.none
  4257d4:	stur	wzr, [x0, #-24]
  4257d8:	mov	w3, #0x3                   	// #3
  4257dc:	mov	w2, w23
  4257e0:	mov	x1, x22
  4257e4:	mov	x0, x19
  4257e8:	bl	424980 <nftw@plt+0x21e00>
  4257ec:	mov	x2, x0
  4257f0:	mov	w0, #0x0                   	// #0
  4257f4:	cbz	x2, 4257ac <nftw@plt+0x22c2c>
  4257f8:	mov	w6, w21
  4257fc:	mov	w5, #0x0                   	// #0
  425800:	mov	w4, w23
  425804:	mov	w3, #0x0                   	// #0
  425808:	mov	x1, x22
  42580c:	mov	x0, x19
  425810:	bl	424ac4 <nftw@plt+0x21f44>
  425814:	mov	x22, x0
  425818:	ldr	x0, [x22, #16]
  42581c:	cbz	x0, 425840 <nftw@plt+0x22cc0>
  425820:	cmp	w20, #0x2
  425824:	mov	w3, w21
  425828:	cset	w2, eq  // eq = none
  42582c:	mov	x1, x22
  425830:	mov	x0, x19
  425834:	bl	42531c <nftw@plt+0x2279c>
  425838:	and	w0, w0, #0xff
  42583c:	b	4257ac <nftw@plt+0x22c2c>
  425840:	ldr	w0, [x22, #204]
  425844:	cbnz	w0, 425820 <nftw@plt+0x22ca0>
  425848:	sub	w0, w20, #0x3
  42584c:	cmp	w0, #0x1
  425850:	b.ls	425820 <nftw@plt+0x22ca0>  // b.plast
  425854:	ldr	x0, [x19, #40]
  425858:	ldr	w1, [x0, #56]
  42585c:	bl	42c108 <nftw@plt+0x29588>
  425860:	mov	w23, w0
  425864:	mov	w1, w21
  425868:	ldr	x0, [x19, #40]
  42586c:	bl	42c108 <nftw@plt+0x29588>
  425870:	cmp	w23, w0
  425874:	b.le	425820 <nftw@plt+0x22ca0>
  425878:	ldr	x1, [x19, #40]
  42587c:	ldr	w0, [x1, #56]
  425880:	sub	w0, w0, #0x1
  425884:	str	w0, [x1, #56]
  425888:	cmp	w20, #0x2
  42588c:	mov	w3, w21
  425890:	cset	w2, eq  // eq = none
  425894:	mov	x1, x22
  425898:	mov	x0, x19
  42589c:	bl	42531c <nftw@plt+0x2279c>
  4258a0:	ands	w0, w0, #0xff
  4258a4:	b.ne	4257ac <nftw@plt+0x22c2c>  // b.any
  4258a8:	ldr	x2, [x19, #40]
  4258ac:	ldr	w1, [x2, #56]
  4258b0:	add	w1, w1, #0x1
  4258b4:	str	w1, [x2, #56]
  4258b8:	b	4257ac <nftw@plt+0x22c2c>
  4258bc:	stp	x29, x30, [sp, #-32]!
  4258c0:	mov	x29, sp
  4258c4:	stp	x19, x20, [sp, #16]
  4258c8:	mov	x19, x1
  4258cc:	ldr	x20, [x0, #296]
  4258d0:	mov	x0, x1
  4258d4:	bl	449e88 <nftw@plt+0x47308>
  4258d8:	mov	w2, w0
  4258dc:	mov	x1, x19
  4258e0:	mov	x0, x20
  4258e4:	bl	4498d4 <nftw@plt+0x46d54>
  4258e8:	cbnz	x0, 4258f8 <nftw@plt+0x22d78>
  4258ec:	b	42590c <nftw@plt+0x22d8c>
  4258f0:	ldr	x0, [x0]
  4258f4:	cbz	x0, 42590c <nftw@plt+0x22d8c>
  4258f8:	ldr	x1, [x0, #8]
  4258fc:	cbz	x1, 4258f0 <nftw@plt+0x22d70>
  425900:	ldr	x1, [x0, #24]
  425904:	ldr	w1, [x1, #204]
  425908:	cbnz	w1, 4258f0 <nftw@plt+0x22d70>
  42590c:	cmp	x0, #0x0
  425910:	cset	w0, ne  // ne = any
  425914:	ldp	x19, x20, [sp, #16]
  425918:	ldp	x29, x30, [sp], #32
  42591c:	ret
  425920:	stp	x29, x30, [sp, #-48]!
  425924:	mov	x29, sp
  425928:	stp	x19, x20, [sp, #16]
  42592c:	stp	x21, x22, [sp, #32]
  425930:	mov	x21, x0
  425934:	mov	x19, x1
  425938:	mov	w20, w2
  42593c:	ldr	x22, [x0, #296]
  425940:	mov	x0, x1
  425944:	bl	449e88 <nftw@plt+0x47308>
  425948:	mov	w2, w0
  42594c:	mov	x1, x19
  425950:	mov	x0, x22
  425954:	bl	4498d4 <nftw@plt+0x46d54>
  425958:	mov	x19, x0
  42595c:	tbnz	w20, #31, 425968 <nftw@plt+0x22de8>
  425960:	cbnz	x19, 425984 <nftw@plt+0x22e04>
  425964:	b	4259a4 <nftw@plt+0x22e24>
  425968:	mov	w1, w20
  42596c:	ldr	x0, [x21, #40]
  425970:	bl	42b2d0 <nftw@plt+0x28750>
  425974:	mov	w20, w0
  425978:	b	425960 <nftw@plt+0x22de0>
  42597c:	ldr	x19, [x19]
  425980:	cbz	x19, 4259a4 <nftw@plt+0x22e24>
  425984:	ldr	x1, [x19, #8]
  425988:	cbz	x1, 42597c <nftw@plt+0x22dfc>
  42598c:	ldr	x1, [x19, #24]
  425990:	ldr	w1, [x1, #204]
  425994:	cbnz	w1, 42597c <nftw@plt+0x22dfc>
  425998:	ldr	w0, [x19, #16]
  42599c:	cmp	w0, w20
  4259a0:	b.hi	42597c <nftw@plt+0x22dfc>  // b.pmore
  4259a4:	cmp	x19, #0x0
  4259a8:	cset	w0, ne  // ne = any
  4259ac:	ldp	x19, x20, [sp, #16]
  4259b0:	ldp	x21, x22, [sp, #32]
  4259b4:	ldp	x29, x30, [sp], #48
  4259b8:	ret
  4259bc:	stp	x29, x30, [sp, #-64]!
  4259c0:	mov	x29, sp
  4259c4:	stp	x19, x20, [sp, #16]
  4259c8:	stp	x21, x22, [sp, #32]
  4259cc:	str	x23, [sp, #48]
  4259d0:	mov	x19, x0
  4259d4:	adrp	x20, 402000 <memcpy@plt-0x490>
  4259d8:	add	x20, x20, #0x910
  4259dc:	adrp	x21, 44a000 <nftw@plt+0x47480>
  4259e0:	add	x21, x21, #0x744
  4259e4:	adrp	x23, 423000 <nftw@plt+0x20480>
  4259e8:	add	x23, x23, #0xf0c
  4259ec:	adrp	x22, 423000 <nftw@plt+0x20480>
  4259f0:	add	x22, x22, #0xdec
  4259f4:	mov	x5, x20
  4259f8:	mov	x4, x21
  4259fc:	mov	x3, #0x0                   	// #0
  425a00:	mov	x2, x23
  425a04:	mov	x1, x22
  425a08:	mov	x0, #0x7f                  	// #127
  425a0c:	bl	4496a0 <nftw@plt+0x46b20>
  425a10:	str	x0, [x19, #296]
  425a14:	mov	x5, x20
  425a18:	mov	x4, x21
  425a1c:	mov	x3, #0x0                   	// #0
  425a20:	mov	x2, x23
  425a24:	mov	x1, x22
  425a28:	mov	x0, #0x7f                  	// #127
  425a2c:	bl	4496a0 <nftw@plt+0x46b20>
  425a30:	str	x0, [x19, #304]
  425a34:	mov	x0, #0xff0                 	// #4080
  425a38:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  425a3c:	str	wzr, [x0]
  425a40:	ldr	x1, [x19, #312]
  425a44:	str	x1, [x0, #8]
  425a48:	str	x0, [x19, #312]
  425a4c:	mov	x5, x20
  425a50:	mov	x4, x21
  425a54:	mov	x3, #0x0                   	// #0
  425a58:	adrp	x2, 423000 <nftw@plt+0x20480>
  425a5c:	add	x2, x2, #0xef0
  425a60:	adrp	x1, 449000 <nftw@plt+0x46480>
  425a64:	add	x1, x1, #0xe88
  425a68:	mov	x0, #0x7f                  	// #127
  425a6c:	bl	4496a0 <nftw@plt+0x46b20>
  425a70:	str	x0, [x19, #320]
  425a74:	mov	x4, x20
  425a78:	adrp	x3, 44a000 <nftw@plt+0x47480>
  425a7c:	add	x3, x3, #0x710
  425a80:	mov	x2, #0x0                   	// #0
  425a84:	mov	x1, #0x0                   	// #0
  425a88:	add	x0, x19, #0x148
  425a8c:	bl	44a3d8 <_obstack_begin@@Base>
  425a90:	ldp	x19, x20, [sp, #16]
  425a94:	ldp	x21, x22, [sp, #32]
  425a98:	ldr	x23, [sp, #48]
  425a9c:	ldp	x29, x30, [sp], #64
  425aa0:	ret
  425aa4:	stp	x29, x30, [sp, #-32]!
  425aa8:	mov	x29, sp
  425aac:	stp	x19, x20, [sp, #16]
  425ab0:	mov	x19, x0
  425ab4:	ldr	x0, [x0, #296]
  425ab8:	bl	449720 <nftw@plt+0x46ba0>
  425abc:	ldr	x0, [x19, #304]
  425ac0:	bl	449720 <nftw@plt+0x46ba0>
  425ac4:	ldr	x0, [x19, #320]
  425ac8:	bl	449720 <nftw@plt+0x46ba0>
  425acc:	mov	x1, #0x0                   	// #0
  425ad0:	add	x0, x19, #0x148
  425ad4:	bl	44a584 <_obstack_free@@Base>
  425ad8:	ldr	x20, [x19, #312]
  425adc:	cbz	x20, 425af0 <nftw@plt+0x22f70>
  425ae0:	mov	x0, x20
  425ae4:	ldr	x20, [x20, #8]
  425ae8:	bl	402910 <free@plt>
  425aec:	cbnz	x20, 425ae0 <nftw@plt+0x22f60>
  425af0:	ldr	x19, [x19, #280]
  425af4:	cbz	x19, 425b08 <nftw@plt+0x22f88>
  425af8:	mov	x0, x19
  425afc:	ldr	x19, [x19, #32]
  425b00:	bl	423e1c <nftw@plt+0x2129c>
  425b04:	cbnz	x19, 425af8 <nftw@plt+0x22f78>
  425b08:	ldp	x19, x20, [sp, #16]
  425b0c:	ldp	x29, x30, [sp], #32
  425b10:	ret
  425b14:	stp	x29, x30, [sp, #-32]!
  425b18:	mov	x29, sp
  425b1c:	str	x19, [sp, #16]
  425b20:	mov	x19, x0
  425b24:	bl	425aa4 <nftw@plt+0x22f24>
  425b28:	str	xzr, [x19, #312]
  425b2c:	str	xzr, [x19, #280]
  425b30:	mov	x0, x19
  425b34:	bl	4259bc <nftw@plt+0x22e3c>
  425b38:	ldr	x19, [sp, #16]
  425b3c:	ldp	x29, x30, [sp], #32
  425b40:	ret
  425b44:	stp	x29, x30, [sp, #-16]!
  425b48:	mov	x29, sp
  425b4c:	ldr	x2, [x0]
  425b50:	ldr	x2, [x2, #80]
  425b54:	mov	w6, #0x0                   	// #0
  425b58:	mov	w5, #0x0                   	// #0
  425b5c:	mov	w4, #0x0                   	// #0
  425b60:	mov	w3, #0x1                   	// #1
  425b64:	ldr	x2, [x2, #64]
  425b68:	bl	424ac4 <nftw@plt+0x21f44>
  425b6c:	ldp	x29, x30, [sp], #16
  425b70:	ret
  425b74:	stp	x29, x30, [sp, #-16]!
  425b78:	mov	x29, sp
  425b7c:	mov	w4, w1
  425b80:	ldr	x1, [x0, #40]
  425b84:	ldr	w5, [x1, #12]
  425b88:	sub	w5, w5, #0x1
  425b8c:	sbfiz	x3, x5, #1, #32
  425b90:	add	x5, x3, w5, sxtw
  425b94:	lsl	x5, x5, #3
  425b98:	ldr	x3, [x1]
  425b9c:	add	x6, x3, x5
  425ba0:	cbz	w4, 425bb0 <nftw@plt+0x23030>
  425ba4:	cmp	w2, #0x0
  425ba8:	cset	w4, ne  // ne = any
  425bac:	add	w4, w4, #0x1
  425bb0:	ldr	x1, [x0]
  425bb4:	strb	w4, [x1, #106]
  425bb8:	ldr	x1, [x0, #40]
  425bbc:	ldr	w1, [x1, #60]
  425bc0:	ldr	w3, [x3, x5]
  425bc4:	sub	w1, w1, w3
  425bc8:	ldrb	w3, [x6, #6]
  425bcc:	lsr	w1, w1, w3
  425bd0:	ldr	w3, [x6, #16]
  425bd4:	add	w3, w1, w3
  425bd8:	ldr	x2, [x6, #8]
  425bdc:	mov	w1, #0x2                   	// #2
  425be0:	bl	41e324 <nftw@plt+0x1b7a4>
  425be4:	ldp	x29, x30, [sp], #16
  425be8:	ret
  425bec:	stp	x29, x30, [sp, #-16]!
  425bf0:	mov	x29, sp
  425bf4:	mov	w4, #0x0                   	// #0
  425bf8:	mov	w3, #0x1                   	// #1
  425bfc:	bl	41e324 <nftw@plt+0x1b7a4>
  425c00:	ldp	x29, x30, [sp], #16
  425c04:	ret
  425c08:	stp	x29, x30, [sp, #-64]!
  425c0c:	mov	x29, sp
  425c10:	stp	x19, x20, [sp, #16]
  425c14:	mov	x19, x0
  425c18:	str	xzr, [sp, #48]
  425c1c:	ldr	x0, [x0, #296]
  425c20:	bl	4494e0 <nftw@plt+0x46960>
  425c24:	str	x0, [sp, #56]
  425c28:	add	x2, sp, #0x30
  425c2c:	adrp	x1, 423000 <nftw@plt+0x20480>
  425c30:	add	x1, x1, #0xe58
  425c34:	ldr	x0, [x19, #296]
  425c38:	bl	449df8 <nftw@plt+0x47278>
  425c3c:	ldr	x0, [sp, #48]
  425c40:	cbz	x0, 425ce0 <nftw@plt+0x23160>
  425c44:	adrp	x3, 424000 <nftw@plt+0x21480>
  425c48:	add	x3, x3, #0x434
  425c4c:	mov	x2, #0x8                   	// #8
  425c50:	ldr	x1, [sp, #56]
  425c54:	bl	4025f0 <qsort@plt>
  425c58:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  425c5c:	add	x1, x1, #0xaf0
  425c60:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  425c64:	add	x0, x0, #0xf38
  425c68:	bl	402900 <dgettext@plt>
  425c6c:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  425c70:	ldr	x1, [x1, #1392]
  425c74:	bl	402a50 <fputs_unlocked@plt>
  425c78:	ldr	x0, [sp, #56]
  425c7c:	cbz	x0, 425cd8 <nftw@plt+0x23158>
  425c80:	stp	x21, x22, [sp, #32]
  425c84:	mov	x19, #0x0                   	// #0
  425c88:	adrp	x20, 48d000 <_obstack_memory_used@@Base+0x429fc>
  425c8c:	mov	w21, #0xa                   	// #10
  425c90:	mov	w22, #0xa                   	// #10
  425c94:	ldr	x1, [x20, #1392]
  425c98:	ldr	x0, [sp, #48]
  425c9c:	ldr	x0, [x0, x19, lsl #3]
  425ca0:	bl	402a50 <fputs_unlocked@plt>
  425ca4:	ldr	x0, [x20, #1392]
  425ca8:	ldr	x1, [x0, #40]
  425cac:	ldr	x2, [x0, #48]
  425cb0:	cmp	x1, x2
  425cb4:	b.cs	425cec <nftw@plt+0x2316c>  // b.hs, b.nlast
  425cb8:	add	x2, x1, #0x1
  425cbc:	str	x2, [x0, #40]
  425cc0:	strb	w21, [x1]
  425cc4:	add	x19, x19, #0x1
  425cc8:	ldr	x0, [sp, #56]
  425ccc:	cmp	x0, x19
  425cd0:	b.hi	425c94 <nftw@plt+0x23114>  // b.pmore
  425cd4:	ldp	x21, x22, [sp, #32]
  425cd8:	ldr	x0, [sp, #48]
  425cdc:	bl	402910 <free@plt>
  425ce0:	ldp	x19, x20, [sp, #16]
  425ce4:	ldp	x29, x30, [sp], #64
  425ce8:	ret
  425cec:	mov	w1, w22
  425cf0:	bl	402800 <__overflow@plt>
  425cf4:	b	425cc4 <nftw@plt+0x23144>
  425cf8:	stp	x29, x30, [sp, #-48]!
  425cfc:	mov	x29, sp
  425d00:	stp	x19, x20, [sp, #16]
  425d04:	str	x21, [sp, #32]
  425d08:	mov	x19, x0
  425d0c:	mov	x20, x1
  425d10:	mov	w21, w2
  425d14:	mov	w3, #0x0                   	// #0
  425d18:	bl	424980 <nftw@plt+0x21e00>
  425d1c:	cbz	x0, 425d94 <nftw@plt+0x23214>
  425d20:	mov	x2, x0
  425d24:	mov	w6, #0x0                   	// #0
  425d28:	mov	w5, #0x0                   	// #0
  425d2c:	mov	w4, w21
  425d30:	mov	w3, #0x0                   	// #0
  425d34:	mov	x1, x20
  425d38:	mov	x0, x19
  425d3c:	bl	424ac4 <nftw@plt+0x21f44>
  425d40:	mov	x20, x0
  425d44:	ldr	w1, [x0, #204]
  425d48:	mov	w0, #0xffffffff            	// #-1
  425d4c:	cbnz	w1, 425d74 <nftw@plt+0x231f4>
  425d50:	ldr	w0, [x20, #200]
  425d54:	cmn	w0, #0x1
  425d58:	b.ne	425d84 <nftw@plt+0x23204>  // b.any
  425d5c:	ldr	x0, [x19]
  425d60:	ldr	x0, [x0, #80]
  425d64:	ldr	x1, [x20, #160]
  425d68:	ldr	x0, [x0, #160]
  425d6c:	cmp	x1, x0
  425d70:	cset	w0, gt
  425d74:	ldp	x19, x20, [sp, #16]
  425d78:	ldr	x21, [sp, #32]
  425d7c:	ldp	x29, x30, [sp], #48
  425d80:	ret
  425d84:	bl	4027a0 <close@plt>
  425d88:	mov	w0, #0xffffffff            	// #-1
  425d8c:	str	w0, [x20, #200]
  425d90:	b	425d5c <nftw@plt+0x231dc>
  425d94:	mov	w0, #0xffffffff            	// #-1
  425d98:	b	425d74 <nftw@plt+0x231f4>
  425d9c:	stp	x29, x30, [sp, #-16]!
  425da0:	mov	x29, sp
  425da4:	mov	w4, #0x0                   	// #0
  425da8:	mov	w3, #0x3                   	// #3
  425dac:	mov	w2, #0x0                   	// #0
  425db0:	bl	425734 <nftw@plt+0x22bb4>
  425db4:	ldp	x29, x30, [sp], #16
  425db8:	ret
  425dbc:	stp	x29, x30, [sp, #-16]!
  425dc0:	mov	x29, sp
  425dc4:	mov	w4, #0x0                   	// #0
  425dc8:	mov	w3, #0x4                   	// #4
  425dcc:	mov	w2, #0x1                   	// #1
  425dd0:	bl	425734 <nftw@plt+0x22bb4>
  425dd4:	ldp	x29, x30, [sp], #16
  425dd8:	ret
  425ddc:	mov	x3, x0
  425de0:	mov	x0, x2
  425de4:	ldrb	w2, [x3, #440]
  425de8:	cbz	w2, 425df4 <nftw@plt+0x23274>
  425dec:	ldr	x2, [x1, #56]
  425df0:	cbz	x2, 425e1c <nftw@plt+0x2329c>
  425df4:	strb	wzr, [x3, #440]
  425df8:	cbz	x0, 425e38 <nftw@plt+0x232b8>
  425dfc:	stp	x29, x30, [sp, #-16]!
  425e00:	mov	x29, sp
  425e04:	ldr	x2, [x1, #48]
  425e08:	cmp	x2, x0
  425e0c:	b.eq	425e28 <nftw@plt+0x232a8>  // b.none
  425e10:	bl	402910 <free@plt>
  425e14:	ldp	x29, x30, [sp], #16
  425e18:	ret
  425e1c:	ldr	x2, [x3, #424]
  425e20:	str	x2, [x1, #56]
  425e24:	b	425df4 <nftw@plt+0x23274>
  425e28:	str	xzr, [x1, #48]
  425e2c:	str	xzr, [x1, #40]
  425e30:	strb	wzr, [x1, #213]
  425e34:	b	425e10 <nftw@plt+0x23290>
  425e38:	ret
  425e3c:	ldr	x0, [x0]
  425e40:	ret
  425e44:	add	x0, x0, #0x48
  425e48:	ret
  425e4c:	stp	x29, x30, [sp, #-48]!
  425e50:	mov	x29, sp
  425e54:	stp	x19, x20, [sp, #16]
  425e58:	str	x21, [sp, #32]
  425e5c:	mov	x21, x0
  425e60:	mov	x19, x1
  425e64:	mov	x20, x2
  425e68:	str	x1, [x0, #200]
  425e6c:	str	x1, [x0, #208]
  425e70:	cmp	w3, #0x0
  425e74:	cset	w0, ne  // ne = any
  425e78:	strb	w0, [x21, #416]
  425e7c:	cbnz	x1, 425e9c <nftw@plt+0x2331c>
  425e80:	ldp	x19, x20, [sp, #16]
  425e84:	ldr	x21, [sp, #32]
  425e88:	ldp	x29, x30, [sp], #48
  425e8c:	ret
  425e90:	str	x20, [x21, #208]
  425e94:	ldr	x19, [x19]
  425e98:	cbz	x19, 425e80 <nftw@plt+0x23300>
  425e9c:	str	xzr, [x19, #32]
  425ea0:	ldr	x0, [x19, #8]
  425ea4:	bl	4024f0 <strlen@plt>
  425ea8:	str	w0, [x19, #16]
  425eac:	cmp	x20, x19
  425eb0:	b.ne	425e94 <nftw@plt+0x23314>  // b.any
  425eb4:	b	425e90 <nftw@plt+0x23310>
  425eb8:	ldr	x0, [x0, #8]
  425ebc:	ret
  425ec0:	ldr	x0, [x0, #64]
  425ec4:	ret
  425ec8:	ldr	x0, [x0]
  425ecc:	ret
  425ed0:	ldr	x0, [x0, #80]
  425ed4:	ret
  425ed8:	ldr	x0, [x0, #72]
  425edc:	ret
  425ee0:	stp	x29, x30, [sp, #-80]!
  425ee4:	mov	x29, sp
  425ee8:	stp	x19, x20, [sp, #16]
  425eec:	stp	x21, x22, [sp, #32]
  425ef0:	stp	x23, x24, [sp, #48]
  425ef4:	stp	x25, x26, [sp, #64]
  425ef8:	mov	x22, x0
  425efc:	mov	x23, x1
  425f00:	ldr	x2, [x0, #280]
  425f04:	cbz	x2, 425f48 <nftw@plt+0x233c8>
  425f08:	mov	x1, #0x0                   	// #0
  425f0c:	add	x1, x1, #0x1
  425f10:	ldr	x2, [x2, #32]
  425f14:	cbnz	x2, 425f0c <nftw@plt+0x2338c>
  425f18:	lsl	x1, x1, #5
  425f1c:	add	x1, x1, #0x10
  425f20:	mov	x0, #0x1                   	// #1
  425f24:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  425f28:	mov	x20, x0
  425f2c:	str	xzr, [x0]
  425f30:	strb	wzr, [x0, #8]
  425f34:	ldr	x19, [x22, #280]
  425f38:	cbz	x19, 42601c <nftw@plt+0x2349c>
  425f3c:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  425f40:	add	x24, x24, #0xb20
  425f44:	b	425fa0 <nftw@plt+0x23420>
  425f48:	mov	x1, #0x0                   	// #0
  425f4c:	b	425f18 <nftw@plt+0x23398>
  425f50:	ldr	w26, [x19, #200]
  425f54:	mov	x0, x19
  425f58:	bl	424450 <nftw@plt+0x218d0>
  425f5c:	ands	w25, w0, #0xff
  425f60:	b.eq	425ffc <nftw@plt+0x2347c>  // b.none
  425f64:	mov	x1, x24
  425f68:	ldr	w0, [x19, #200]
  425f6c:	bl	449164 <nftw@plt+0x465e4>
  425f70:	mov	x25, x0
  425f74:	add	x1, x20, x21, lsl #5
  425f78:	add	x1, x1, #0x18
  425f7c:	bl	4487f4 <nftw@plt+0x45c74>
  425f80:	mov	x0, x25
  425f84:	bl	402620 <fclose@plt>
  425f88:	str	w26, [x19, #200]
  425f8c:	ldr	x0, [x19, #120]
  425f90:	add	x21, x20, x21, lsl #5
  425f94:	str	x0, [x21, #16]
  425f98:	ldr	x19, [x19, #32]
  425f9c:	cbz	x19, 42601c <nftw@plt+0x2349c>
  425fa0:	ldrb	w2, [x19, #211]
  425fa4:	cbnz	w2, 425f98 <nftw@plt+0x23418>
  425fa8:	ldr	w0, [x19, #204]
  425fac:	cbnz	w0, 425f98 <nftw@plt+0x23418>
  425fb0:	ldrh	w0, [x19, #208]
  425fb4:	cbz	w0, 425f98 <nftw@plt+0x23418>
  425fb8:	ldr	x21, [x20]
  425fbc:	add	x0, x21, #0x1
  425fc0:	str	x0, [x20]
  425fc4:	ldrb	w2, [x19, #210]
  425fc8:	add	x0, x20, x0, lsl #5
  425fcc:	strb	w2, [x0, #8]
  425fd0:	ldrb	w0, [x20, #8]
  425fd4:	orr	w2, w2, w0
  425fd8:	strb	w2, [x20, #8]
  425fdc:	ldrb	w0, [x19, #213]
  425fe0:	cbz	w0, 425f50 <nftw@plt+0x233d0>
  425fe4:	add	x2, x20, x21, lsl #5
  425fe8:	add	x2, x2, #0x18
  425fec:	ldr	x1, [x19, #120]
  425ff0:	ldr	x0, [x19, #40]
  425ff4:	bl	4487a4 <nftw@plt+0x45c24>
  425ff8:	b	425f8c <nftw@plt+0x2340c>
  425ffc:	mov	w3, #0x0                   	// #0
  426000:	mov	w2, #0x0                   	// #0
  426004:	mov	x1, x19
  426008:	mov	x0, x22
  42600c:	bl	424640 <nftw@plt+0x21ac0>
  426010:	mov	x0, x20
  426014:	bl	402910 <free@plt>
  426018:	b	426060 <nftw@plt+0x234e0>
  42601c:	mov	x0, x20
  426020:	ldr	x19, [x0], #16
  426024:	adrp	x3, 424000 <nftw@plt+0x21480>
  426028:	add	x3, x3, #0x764
  42602c:	mov	x2, #0x20                  	// #32
  426030:	mov	x1, x19
  426034:	bl	4025f0 <qsort@plt>
  426038:	lsl	x1, x19, #5
  42603c:	mov	x3, x23
  426040:	mov	x2, #0x1                   	// #1
  426044:	add	x1, x1, #0x10
  426048:	mov	x0, x20
  42604c:	bl	4024d0 <fwrite_unlocked@plt>
  426050:	cmp	x0, #0x1
  426054:	cset	w25, eq  // eq = none
  426058:	mov	x0, x20
  42605c:	bl	402910 <free@plt>
  426060:	mov	w0, w25
  426064:	ldp	x19, x20, [sp, #16]
  426068:	ldp	x21, x22, [sp, #32]
  42606c:	ldp	x23, x24, [sp, #48]
  426070:	ldp	x25, x26, [sp, #64]
  426074:	ldp	x29, x30, [sp], #80
  426078:	ret
  42607c:	stp	x29, x30, [sp, #-80]!
  426080:	mov	x29, sp
  426084:	str	x19, [sp, #16]
  426088:	mov	x19, x1
  42608c:	mov	x3, x1
  426090:	mov	x2, #0x1                   	// #1
  426094:	mov	x1, #0x10                  	// #16
  426098:	add	x0, sp, #0x20
  42609c:	bl	402840 <fread_unlocked@plt>
  4260a0:	mov	w1, #0x0                   	// #0
  4260a4:	cmp	x0, #0x1
  4260a8:	b.eq	4260bc <nftw@plt+0x2353c>  // b.none
  4260ac:	mov	w0, w1
  4260b0:	ldr	x19, [sp, #16]
  4260b4:	ldp	x29, x30, [sp], #80
  4260b8:	ret
  4260bc:	ldr	x0, [sp, #32]
  4260c0:	lsl	x0, x0, #5
  4260c4:	add	x0, x0, #0x10
  4260c8:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4260cc:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4260d0:	str	x0, [x1, #2400]
  4260d4:	ldp	x2, x3, [sp, #32]
  4260d8:	stp	x2, x3, [x0], #16
  4260dc:	mov	x3, x19
  4260e0:	ldr	x2, [sp, #32]
  4260e4:	mov	x1, #0x20                  	// #32
  4260e8:	bl	402840 <fread_unlocked@plt>
  4260ec:	ldr	x1, [sp, #32]
  4260f0:	cmp	x1, x0
  4260f4:	cset	w1, eq  // eq = none
  4260f8:	b	4260ac <nftw@plt+0x2352c>
  4260fc:	stp	x29, x30, [sp, #-48]!
  426100:	mov	x29, sp
  426104:	stp	x19, x20, [sp, #16]
  426108:	str	x21, [sp, #32]
  42610c:	mov	x19, x0
  426110:	mov	x20, x1
  426114:	mov	w21, w2
  426118:	bl	424980 <nftw@plt+0x21e00>
  42611c:	mov	w6, #0x0                   	// #0
  426120:	mov	w5, #0x0                   	// #0
  426124:	mov	w4, w21
  426128:	mov	w3, #0x0                   	// #0
  42612c:	mov	x2, x0
  426130:	mov	x1, x20
  426134:	mov	x0, x19
  426138:	bl	424ac4 <nftw@plt+0x21f44>
  42613c:	ldr	w0, [x0, #204]
  426140:	cmp	w0, #0x2
  426144:	cset	w0, ne  // ne = any
  426148:	ldp	x19, x20, [sp, #16]
  42614c:	ldr	x21, [sp, #32]
  426150:	ldp	x29, x30, [sp], #48
  426154:	ret
  426158:	stp	x29, x30, [sp, #-32]!
  42615c:	mov	x29, sp
  426160:	str	x19, [sp, #16]
  426164:	ldr	x19, [x0, #120]
  426168:	ldr	x0, [x19, #752]
  42616c:	ldr	x1, [x19, #744]
  426170:	sub	x0, x0, x1
  426174:	cmp	x0, #0x1f
  426178:	b.ls	4261d8 <nftw@plt+0x23658>  // b.plast
  42617c:	ldr	x2, [x19, #744]
  426180:	add	x2, x2, #0x20
  426184:	ldr	x0, [x19, #736]
  426188:	cmp	x2, x0
  42618c:	b.eq	4261e8 <nftw@plt+0x23668>  // b.none
  426190:	ldr	x1, [x19, #768]
  426194:	add	x2, x2, x1
  426198:	bic	x1, x2, x1
  42619c:	str	x1, [x19, #744]
  4261a0:	ldr	x2, [x19, #728]
  4261a4:	ldr	x3, [x19, #752]
  4261a8:	sub	x1, x1, x2
  4261ac:	sub	x2, x3, x2
  4261b0:	cmp	x1, x2
  4261b4:	b.ls	4261bc <nftw@plt+0x2363c>  // b.plast
  4261b8:	str	x3, [x19, #744]
  4261bc:	ldr	x1, [x19, #744]
  4261c0:	str	x1, [x19, #736]
  4261c4:	stp	xzr, xzr, [x0]
  4261c8:	stp	xzr, xzr, [x0, #16]
  4261cc:	ldr	x19, [sp, #16]
  4261d0:	ldp	x29, x30, [sp], #32
  4261d4:	ret
  4261d8:	mov	x1, #0x20                  	// #32
  4261dc:	add	x0, x19, #0x2d0
  4261e0:	bl	44a42c <_obstack_newchunk@@Base>
  4261e4:	b	42617c <nftw@plt+0x235fc>
  4261e8:	ldrb	w1, [x19, #800]
  4261ec:	orr	w1, w1, #0x2
  4261f0:	strb	w1, [x19, #800]
  4261f4:	b	426190 <nftw@plt+0x23610>
  4261f8:	stp	x29, x30, [sp, #-32]!
  4261fc:	mov	x29, sp
  426200:	str	x19, [sp, #16]
  426204:	mov	x19, x0
  426208:	ldrb	w0, [x0, #1304]
  42620c:	cbnz	w0, 42621c <nftw@plt+0x2369c>
  426210:	ldr	x19, [sp, #16]
  426214:	ldp	x29, x30, [sp], #32
  426218:	ret
  42621c:	ldr	x0, [x19, #1088]
  426220:	bl	4329fc <nftw@plt+0x2fe7c>
  426224:	mov	x1, #0x0                   	// #0
  426228:	add	x0, x19, #0x2d0
  42622c:	bl	44a584 <_obstack_free@@Base>
  426230:	b	426210 <nftw@plt+0x23690>
  426234:	stp	x29, x30, [sp, #-16]!
  426238:	mov	x29, sp
  42623c:	mov	w3, #0x1                   	// #1
  426240:	mov	w2, w2
  426244:	ldr	x0, [x0, #1088]
  426248:	bl	432d4c <nftw@plt+0x301cc>
  42624c:	ldp	x29, x30, [sp], #16
  426250:	ret
  426254:	stp	x29, x30, [sp, #-32]!
  426258:	mov	x29, sp
  42625c:	stp	x19, x20, [sp, #16]
  426260:	mov	x19, x0
  426264:	mov	x20, x1
  426268:	cbz	x1, 426350 <nftw@plt+0x237d0>
  42626c:	str	x19, [x20, #120]
  426270:	str	x20, [x19, #1088]
  426274:	mov	x0, x19
  426278:	bl	41f714 <nftw@plt+0x1cb94>
  42627c:	mov	x0, x19
  426280:	bl	41e910 <nftw@plt+0x1bd90>
  426284:	mov	w2, #0x7                   	// #7
  426288:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42628c:	add	x1, x1, #0xb28
  426290:	mov	x0, x19
  426294:	bl	426234 <nftw@plt+0x236b4>
  426298:	str	x0, [x19, #1248]
  42629c:	mov	w2, #0x4                   	// #4
  4262a0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4262a4:	add	x1, x1, #0xb30
  4262a8:	mov	x0, x19
  4262ac:	bl	426234 <nftw@plt+0x236b4>
  4262b0:	str	x0, [x19, #1256]
  4262b4:	mov	w2, #0x5                   	// #5
  4262b8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4262bc:	add	x1, x1, #0xb38
  4262c0:	mov	x0, x19
  4262c4:	bl	426234 <nftw@plt+0x236b4>
  4262c8:	str	x0, [x19, #1264]
  4262cc:	mov	w2, #0xb                   	// #11
  4262d0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4262d4:	add	x1, x1, #0xb40
  4262d8:	mov	x0, x19
  4262dc:	bl	426234 <nftw@plt+0x236b4>
  4262e0:	str	x0, [x19, #1272]
  4262e4:	ldrh	w1, [x0, #18]
  4262e8:	orr	w1, w1, #0x10
  4262ec:	strh	w1, [x0, #18]
  4262f0:	mov	w2, #0xa                   	// #10
  4262f4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4262f8:	add	x1, x1, #0xb50
  4262fc:	mov	x0, x19
  426300:	bl	426234 <nftw@plt+0x236b4>
  426304:	str	x0, [x19, #1280]
  426308:	ldrh	w1, [x0, #18]
  42630c:	orr	w1, w1, #0x10
  426310:	strh	w1, [x0, #18]
  426314:	mov	w2, #0xf                   	// #15
  426318:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42631c:	add	x1, x1, #0xb60
  426320:	mov	x0, x19
  426324:	bl	426234 <nftw@plt+0x236b4>
  426328:	str	x0, [x19, #1288]
  42632c:	mov	w2, #0x14                  	// #20
  426330:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426334:	add	x1, x1, #0xb70
  426338:	mov	x0, x19
  42633c:	bl	426234 <nftw@plt+0x236b4>
  426340:	str	x0, [x19, #1296]
  426344:	ldp	x19, x20, [sp, #16]
  426348:	ldp	x29, x30, [sp], #32
  42634c:	ret
  426350:	mov	w0, #0x1                   	// #1
  426354:	strb	w0, [x19, #1304]
  426358:	mov	w0, #0xd                   	// #13
  42635c:	bl	432988 <nftw@plt+0x2fe08>
  426360:	mov	x20, x0
  426364:	adrp	x0, 426000 <nftw@plt+0x23480>
  426368:	add	x0, x0, #0x158
  42636c:	str	x0, [x20, #96]
  426370:	adrp	x4, 402000 <memcpy@plt-0x490>
  426374:	add	x4, x4, #0x910
  426378:	adrp	x3, 44a000 <nftw@plt+0x47480>
  42637c:	add	x3, x3, #0x710
  426380:	mov	x2, #0x0                   	// #0
  426384:	mov	x1, #0x0                   	// #0
  426388:	add	x0, x19, #0x2d0
  42638c:	bl	44a3d8 <_obstack_begin@@Base>
  426390:	b	42626c <nftw@plt+0x236ec>
  426394:	stp	x29, x30, [sp, #-16]!
  426398:	mov	x29, sp
  42639c:	mov	w3, #0x0                   	// #0
  4263a0:	sxtw	x2, w2
  4263a4:	ldr	x0, [x0, #1088]
  4263a8:	bl	432d4c <nftw@plt+0x301cc>
  4263ac:	cbz	x0, 4263c0 <nftw@plt+0x23840>
  4263b0:	ldrb	w0, [x0, #18]
  4263b4:	ubfx	x0, x0, #1, #1
  4263b8:	ldp	x29, x30, [sp], #16
  4263bc:	ret
  4263c0:	mov	w0, #0x0                   	// #0
  4263c4:	b	4263b8 <nftw@plt+0x23838>
  4263c8:	stp	x29, x30, [sp, #-16]!
  4263cc:	mov	x29, sp
  4263d0:	ldr	x0, [x0, #1088]
  4263d4:	bl	432d9c <nftw@plt+0x3021c>
  4263d8:	ldp	x29, x30, [sp], #16
  4263dc:	ret
  4263e0:	stp	x29, x30, [sp, #-48]!
  4263e4:	mov	x29, sp
  4263e8:	stp	x19, x20, [sp, #16]
  4263ec:	str	x21, [sp, #32]
  4263f0:	mov	x19, x0
  4263f4:	mov	x21, x1
  4263f8:	mov	w20, w2
  4263fc:	ldr	w0, [x0, #64]
  426400:	ldr	w1, [x19, #60]
  426404:	cmp	w1, w0
  426408:	b.eq	426448 <nftw@plt+0x238c8>  // b.none
  42640c:	ldr	w0, [x19, #60]
  426410:	ldr	x1, [x19, #48]
  426414:	lsl	x0, x0, #4
  426418:	str	x21, [x1, x0]
  42641c:	ldr	w0, [x19, #60]
  426420:	ldr	x1, [x19, #48]
  426424:	add	x0, x1, x0, lsl #4
  426428:	str	w20, [x0, #8]
  42642c:	ldr	w0, [x19, #60]
  426430:	add	w0, w0, #0x1
  426434:	str	w0, [x19, #60]
  426438:	ldp	x19, x20, [sp, #16]
  42643c:	ldr	x21, [sp, #32]
  426440:	ldp	x29, x30, [sp], #48
  426444:	ret
  426448:	add	w0, w0, #0x64
  42644c:	lsl	w0, w0, #1
  426450:	str	w0, [x19, #64]
  426454:	mov	w0, w0
  426458:	lsl	x1, x0, #4
  42645c:	ldr	x0, [x19, #48]
  426460:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  426464:	str	x0, [x19, #48]
  426468:	b	42640c <nftw@plt+0x2388c>
  42646c:	ldrb	w6, [x1]
  426470:	tbz	w6, #7, 426538 <nftw@plt+0x239b8>
  426474:	mov	w2, w6
  426478:	mov	w4, #0x0                   	// #0
  42647c:	mov	w5, w4
  426480:	add	w4, w4, #0x1
  426484:	lsl	w2, w2, #1
  426488:	tbnz	w2, #7, 42647c <nftw@plt+0x238fc>
  42648c:	mov	w3, #0x7f                  	// #127
  426490:	asr	w3, w3, w4
  426494:	and	w3, w3, w6
  426498:	sxtw	x3, w3
  42649c:	cmp	w4, #0x1
  4264a0:	b.le	4264d4 <nftw@plt+0x23954>
  4264a4:	mov	x2, #0x0                   	// #0
  4264a8:	add	x6, x1, #0x1
  4264ac:	ldrb	w1, [x6, x2]
  4264b0:	mov	x7, x1
  4264b4:	bfi	x7, x3, #6, #58
  4264b8:	mov	x3, x7
  4264bc:	and	w1, w1, #0xffffffc0
  4264c0:	cmp	w1, #0x80
  4264c4:	b.ne	426518 <nftw@plt+0x23998>  // b.any
  4264c8:	add	x2, x2, #0x1
  4264cc:	cmp	w5, w2
  4264d0:	b.gt	4264ac <nftw@plt+0x2392c>
  4264d4:	mov	w1, #0x5c                  	// #92
  4264d8:	strb	w1, [x0]
  4264dc:	mov	w1, #0x55                  	// #85
  4264e0:	strb	w1, [x0, #1]
  4264e4:	add	x0, x0, #0x2
  4264e8:	mov	w1, #0x1c                  	// #28
  4264ec:	adrp	x5, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4264f0:	add	x5, x5, #0xbb0
  4264f4:	lsr	x2, x3, x1
  4264f8:	and	x2, x2, #0xf
  4264fc:	ldrb	w2, [x5, x2]
  426500:	strb	w2, [x0], #1
  426504:	sub	w1, w1, #0x4
  426508:	cmn	w1, #0x4
  42650c:	b.ne	4264f4 <nftw@plt+0x23974>  // b.any
  426510:	sxtw	x0, w4
  426514:	ret
  426518:	stp	x29, x30, [sp, #-16]!
  42651c:	mov	x29, sp
  426520:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426524:	add	x2, x2, #0xb88
  426528:	mov	w1, #0xc89                 	// #3209
  42652c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426530:	add	x0, x0, #0xb98
  426534:	bl	408d8c <nftw@plt+0x620c>
  426538:	and	x3, x6, #0x7f
  42653c:	mov	w4, #0x0                   	// #0
  426540:	b	4264d4 <nftw@plt+0x23954>
  426544:	ldrb	w3, [x1]
  426548:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  42654c:	add	x2, x2, #0xe68
  426550:	ldrh	w2, [x2, w3, sxtw #1]
  426554:	tbz	w2, #9, 4265dc <nftw@plt+0x23a5c>
  426558:	stp	x29, x30, [sp, #-16]!
  42655c:	mov	x29, sp
  426560:	sub	w3, w3, #0x71
  426564:	add	x2, x1, #0x1
  426568:	ldrb	w4, [x1, #1]
  42656c:	adrp	x5, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  426570:	add	x5, x5, #0xe68
  426574:	ldrh	w5, [x5, w4, sxtw #1]
  426578:	mov	w6, #0x204                 	// #516
  42657c:	tst	w6, w5
  426580:	b.eq	4265ac <nftw@plt+0x23a2c>  // b.none
  426584:	mov	w8, #0x43                  	// #67
  426588:	adrp	x6, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  42658c:	add	x6, x6, #0xe68
  426590:	mov	w7, #0x204                 	// #516
  426594:	madd	w3, w3, w8, w4
  426598:	sub	w3, w3, #0x71
  42659c:	ldrb	w4, [x2, #1]!
  4265a0:	ldrh	w5, [x6, w4, sxtw #1]
  4265a4:	tst	w7, w5
  4265a8:	b.ne	426594 <nftw@plt+0x23a14>  // b.any
  4265ac:	sub	x2, x2, x1
  4265b0:	mov	w4, #0x0                   	// #0
  4265b4:	add	w3, w3, w2
  4265b8:	ldr	x0, [x0, #1088]
  4265bc:	bl	432a3c <nftw@plt+0x2febc>
  4265c0:	mov	x1, x0
  4265c4:	mov	w0, #0x0                   	// #0
  4265c8:	cbz	x1, 4265d4 <nftw@plt+0x23a54>
  4265cc:	ldrb	w0, [x1, #18]
  4265d0:	ubfx	x0, x0, #1, #1
  4265d4:	ldp	x29, x30, [sp], #16
  4265d8:	ret
  4265dc:	mov	w0, #0x0                   	// #0
  4265e0:	ret
  4265e4:	stp	x29, x30, [sp, #-16]!
  4265e8:	mov	x29, sp
  4265ec:	ldrb	w1, [x0, #1154]
  4265f0:	cbz	w1, 426620 <nftw@plt+0x23aa0>
  4265f4:	ldrb	w1, [x0, #1167]
  4265f8:	cbnz	w1, 426620 <nftw@plt+0x23aa0>
  4265fc:	ldr	x1, [x0]
  426600:	cbz	x1, 42660c <nftw@plt+0x23a8c>
  426604:	ldrb	w1, [x1, #106]
  426608:	cbnz	w1, 426628 <nftw@plt+0x23aa8>
  42660c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426610:	add	x2, x2, #0xbc8
  426614:	mov	w1, #0x2                   	// #2
  426618:	bl	41f990 <nftw@plt+0x1ce10>
  42661c:	b	426628 <nftw@plt+0x23aa8>
  426620:	ldrb	w1, [x0, #22]
  426624:	cbz	w1, 426630 <nftw@plt+0x23ab0>
  426628:	ldp	x29, x30, [sp], #16
  42662c:	ret
  426630:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426634:	add	x2, x2, #0xbf0
  426638:	mov	w1, #0x2                   	// #2
  42663c:	bl	41f990 <nftw@plt+0x1ce10>
  426640:	b	426628 <nftw@plt+0x23aa8>
  426644:	stp	x29, x30, [sp, #-48]!
  426648:	mov	x29, sp
  42664c:	str	x19, [sp, #16]
  426650:	mov	x8, x0
  426654:	ldr	x19, [x0]
  426658:	ldr	x3, [x19]
  42665c:	ldrb	w4, [x3]
  426660:	cmp	w4, #0x24
  426664:	b.eq	42668c <nftw@plt+0x23b0c>  // b.none
  426668:	ldrb	w0, [x0, #1147]
  42666c:	cmp	w0, #0x0
  426670:	cset	w0, ne  // ne = any
  426674:	cmp	w4, #0x5c
  426678:	csel	w0, w0, wzr, eq  // eq = none
  42667c:	cbnz	w0, 4266d4 <nftw@plt+0x23b54>
  426680:	ldr	x19, [sp, #16]
  426684:	ldp	x29, x30, [sp], #48
  426688:	ret
  42668c:	ldrb	w1, [x0, #1146]
  426690:	mov	w0, #0x0                   	// #0
  426694:	cbz	w1, 426680 <nftw@plt+0x23b00>
  426698:	add	x3, x3, #0x1
  42669c:	str	x3, [x19]
  4266a0:	ldrb	w1, [x8, #1148]
  4266a4:	mov	w0, #0x1                   	// #1
  4266a8:	cbz	w1, 426680 <nftw@plt+0x23b00>
  4266ac:	ldrb	w1, [x8, #18]
  4266b0:	cbnz	w1, 426680 <nftw@plt+0x23b00>
  4266b4:	strb	wzr, [x8, #1148]
  4266b8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x139fc>
  4266bc:	add	x2, x2, #0x328
  4266c0:	mov	w1, #0x2                   	// #2
  4266c4:	mov	x0, x8
  4266c8:	bl	41f990 <nftw@plt+0x1ce10>
  4266cc:	mov	w0, #0x1                   	// #1
  4266d0:	b	426680 <nftw@plt+0x23b00>
  4266d4:	ldrb	w4, [x3, #1]
  4266d8:	and	w4, w4, #0xffffffdf
  4266dc:	and	w4, w4, #0xff
  4266e0:	mov	w0, #0x0                   	// #0
  4266e4:	cmp	w4, #0x55
  4266e8:	b.ne	426680 <nftw@plt+0x23b00>  // b.any
  4266ec:	add	x3, x3, #0x2
  4266f0:	str	x3, [x19]
  4266f4:	cmp	w1, #0x0
  4266f8:	cset	w3, eq  // eq = none
  4266fc:	mov	x7, #0x0                   	// #0
  426700:	mov	x6, #0x0                   	// #0
  426704:	add	x5, sp, #0x2c
  426708:	mov	x4, x2
  42670c:	add	w3, w3, #0x1
  426710:	ldr	x2, [x19, #32]
  426714:	mov	x1, x19
  426718:	mov	x0, x8
  42671c:	bl	418f70 <nftw@plt+0x163f0>
  426720:	ands	w0, w0, #0xff
  426724:	b.ne	426680 <nftw@plt+0x23b00>  // b.any
  426728:	ldr	x1, [x19]
  42672c:	sub	x1, x1, #0x2
  426730:	str	x1, [x19]
  426734:	b	426680 <nftw@plt+0x23b00>
  426738:	stp	x29, x30, [sp, #-64]!
  42673c:	mov	x29, sp
  426740:	stp	x19, x20, [sp, #16]
  426744:	stp	x21, x22, [sp, #32]
  426748:	stp	x23, x24, [sp, #48]
  42674c:	mov	x19, x0
  426750:	mov	x23, x1
  426754:	mov	x20, x3
  426758:	mov	x24, x4
  42675c:	ldr	x0, [x0]
  426760:	ldr	x21, [x0]
  426764:	tst	w2, #0xff
  426768:	b.ne	4267e4 <nftw@plt+0x23c64>  // b.any
  42676c:	ldrb	w0, [x1]
  426770:	sub	w22, w0, #0x71
  426774:	ldrb	w0, [x21]
  426778:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  42677c:	add	x1, x1, #0xe68
  426780:	ldrh	w1, [x1, w0, sxtw #1]
  426784:	mov	w2, #0x204                 	// #516
  426788:	tst	w2, w1
  42678c:	b.eq	4267b8 <nftw@plt+0x23c38>  // b.none
  426790:	mov	w4, #0x43                  	// #67
  426794:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  426798:	add	x2, x2, #0xe68
  42679c:	mov	w3, #0x204                 	// #516
  4267a0:	madd	w0, w22, w4, w0
  4267a4:	sub	w22, w0, #0x71
  4267a8:	ldrb	w0, [x21, #1]!
  4267ac:	ldrh	w1, [x2, w0, sxtw #1]
  4267b0:	tst	w3, w1
  4267b4:	b.ne	4267a0 <nftw@plt+0x23c20>  // b.any
  4267b8:	ldurb	w0, [x21, #-1]
  4267bc:	str	w0, [x20]
  4267c0:	strb	wzr, [x20, #4]
  4267c4:	ldr	x0, [x19]
  4267c8:	str	x21, [x0]
  4267cc:	mov	x2, x20
  4267d0:	mov	w1, #0x0                   	// #0
  4267d4:	mov	x0, x19
  4267d8:	bl	426644 <nftw@plt+0x23ac4>
  4267dc:	and	w0, w0, #0xff
  4267e0:	cbz	w0, 4267f4 <nftw@plt+0x23c74>
  4267e4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4267e8:	add	x21, x21, #0xe68
  4267ec:	mov	w22, #0x204                 	// #516
  4267f0:	b	426834 <nftw@plt+0x23cb4>
  4267f4:	sub	x3, x21, x23
  4267f8:	mov	w4, #0x1                   	// #1
  4267fc:	add	w3, w22, w3
  426800:	sub	w2, w21, w23
  426804:	mov	x1, x23
  426808:	ldr	x0, [x19, #1088]
  42680c:	bl	432a3c <nftw@plt+0x2febc>
  426810:	mov	x20, x0
  426814:	str	x0, [x24]
  426818:	b	42689c <nftw@plt+0x23d1c>
  42681c:	str	w0, [x20]
  426820:	strb	wzr, [x20, #4]
  426824:	ldr	x1, [x19]
  426828:	ldr	x0, [x1]
  42682c:	add	x0, x0, #0x1
  426830:	str	x0, [x1]
  426834:	ldr	x0, [x19]
  426838:	ldr	x0, [x0]
  42683c:	ldrb	w0, [x0]
  426840:	ldrh	w1, [x21, w0, sxtw #1]
  426844:	tst	w22, w1
  426848:	b.ne	42681c <nftw@plt+0x23c9c>  // b.any
  42684c:	mov	x2, x20
  426850:	mov	w1, #0x0                   	// #0
  426854:	mov	x0, x19
  426858:	bl	426644 <nftw@plt+0x23ac4>
  42685c:	and	w0, w0, #0xff
  426860:	cbnz	w0, 426834 <nftw@plt+0x23cb4>
  426864:	ldr	x0, [x19]
  426868:	ldr	x2, [x0]
  42686c:	sub	x2, x2, x23
  426870:	mov	x1, x23
  426874:	mov	x0, x19
  426878:	bl	418ac0 <nftw@plt+0x15f40>
  42687c:	mov	x20, x0
  426880:	ldr	x0, [x19]
  426884:	ldr	x2, [x0]
  426888:	sub	w2, w2, w23
  42688c:	mov	x1, x23
  426890:	mov	x0, x19
  426894:	bl	426234 <nftw@plt+0x236b4>
  426898:	str	x0, [x24]
  42689c:	ldrh	w0, [x20, #18]
  4268a0:	ubfx	x1, x0, #2, #8
  4268a4:	tbnz	w0, #4, 4268c0 <nftw@plt+0x23d40>
  4268a8:	mov	x0, x20
  4268ac:	ldp	x19, x20, [sp, #16]
  4268b0:	ldp	x21, x22, [sp, #32]
  4268b4:	ldp	x23, x24, [sp, #48]
  4268b8:	ldp	x29, x30, [sp], #64
  4268bc:	ret
  4268c0:	ldrb	w0, [x19, #18]
  4268c4:	cbnz	w0, 4268a8 <nftw@plt+0x23d28>
  4268c8:	tbz	w1, #1, 4268d4 <nftw@plt+0x23d54>
  4268cc:	ldrb	w0, [x19, #23]
  4268d0:	cbz	w0, 426910 <nftw@plt+0x23d90>
  4268d4:	ldr	x0, [x19, #1272]
  4268d8:	cmp	x0, x20
  4268dc:	b.eq	42692c <nftw@plt+0x23dac>  // b.none
  4268e0:	ldr	x0, [x19, #1280]
  4268e4:	cmp	x0, x20
  4268e8:	b.eq	42696c <nftw@plt+0x23dec>  // b.none
  4268ec:	ldrh	w0, [x20, #18]
  4268f0:	tbz	w0, #9, 4268a8 <nftw@plt+0x23d28>
  4268f4:	ldr	x3, [x20]
  4268f8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4268fc:	add	x2, x2, #0xce8
  426900:	mov	w1, #0xf                   	// #15
  426904:	mov	x0, x19
  426908:	bl	41fa08 <nftw@plt+0x1ce88>
  42690c:	b	4268a8 <nftw@plt+0x23d28>
  426910:	ldr	x3, [x20]
  426914:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426918:	add	x2, x2, #0xc38
  42691c:	mov	w1, #0x3                   	// #3
  426920:	mov	x0, x19
  426924:	bl	41f990 <nftw@plt+0x1ce10>
  426928:	b	4268d4 <nftw@plt+0x23d54>
  42692c:	ldrb	w0, [x19, #22]
  426930:	cbnz	w0, 4268e0 <nftw@plt+0x23d60>
  426934:	ldrb	w0, [x19, #1120]
  426938:	cbz	w0, 426954 <nftw@plt+0x23dd4>
  42693c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426940:	add	x2, x2, #0xc58
  426944:	mov	w1, #0x2                   	// #2
  426948:	mov	x0, x19
  42694c:	bl	41f990 <nftw@plt+0x1ce10>
  426950:	b	4268e0 <nftw@plt+0x23d60>
  426954:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426958:	add	x2, x2, #0xca0
  42695c:	mov	w1, #0x2                   	// #2
  426960:	mov	x0, x19
  426964:	bl	41f990 <nftw@plt+0x1ce10>
  426968:	b	4268e0 <nftw@plt+0x23d60>
  42696c:	mov	x0, x19
  426970:	bl	4265e4 <nftw@plt+0x23a64>
  426974:	b	4268ec <nftw@plt+0x23d6c>
  426978:	ldrb	w2, [x0, #4]
  42697c:	cmp	w2, #0x35
  426980:	b.ne	4269a8 <nftw@plt+0x23e28>  // b.any
  426984:	stp	x29, x30, [sp, #-16]!
  426988:	mov	x29, sp
  42698c:	ldr	x0, [x0, #8]
  426990:	ldr	x0, [x0]
  426994:	bl	402890 <strcmp@plt>
  426998:	cmp	w0, #0x0
  42699c:	cset	w0, eq  // eq = none
  4269a0:	ldp	x29, x30, [sp], #16
  4269a4:	ret
  4269a8:	mov	w0, #0x0                   	// #0
  4269ac:	ret
  4269b0:	ret
  4269b4:	stp	x29, x30, [sp, #-96]!
  4269b8:	mov	x29, sp
  4269bc:	stp	x19, x20, [sp, #16]
  4269c0:	stp	x21, x22, [sp, #32]
  4269c4:	stp	x23, x24, [sp, #48]
  4269c8:	mov	x23, x0
  4269cc:	ldr	x20, [x0]
  4269d0:	str	wzr, [x20, #60]
  4269d4:	str	wzr, [x20, #56]
  4269d8:	ldr	x19, [x20, #16]
  4269dc:	str	x19, [x20, #8]
  4269e0:	str	x19, [x20]
  4269e4:	strb	wzr, [x20, #104]
  4269e8:	ldrb	w0, [x20, #105]
  4269ec:	tbnz	w0, #1, 426dbc <nftw@plt+0x2423c>
  4269f0:	mov	x24, #0x0                   	// #0
  4269f4:	mov	x22, #0x1000                	// #4096
  4269f8:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4269fc:	add	x21, x21, #0x978
  426a00:	mov	x3, x19
  426a04:	and	x1, x19, #0xfffffffffffffff0
  426a08:	and	x0, x19, #0xfff
  426a0c:	sub	x0, x22, x0
  426a10:	cmp	x0, #0xf
  426a14:	b.ls	426b2c <nftw@plt+0x23fac>  // b.plast
  426a18:	ldr	q1, [x19]
  426a1c:	movi	v0.16b, #0xa
  426a20:	cmeq	v0.16b, v1.16b, v0.16b
  426a24:	movi	v2.16b, #0xd
  426a28:	cmeq	v2.16b, v1.16b, v2.16b
  426a2c:	orr	v0.16b, v0.16b, v2.16b
  426a30:	movi	v2.16b, #0x5c
  426a34:	cmeq	v2.16b, v1.16b, v2.16b
  426a38:	orr	v0.16b, v0.16b, v2.16b
  426a3c:	movi	v2.16b, #0x3f
  426a40:	cmeq	v1.16b, v1.16b, v2.16b
  426a44:	orr	v0.16b, v0.16b, v1.16b
  426a48:	addp	d1, v0.2d
  426a4c:	fmov	x0, d1
  426a50:	cbnz	x0, 426a90 <nftw@plt+0x23f10>
  426a54:	movi	v6.16b, #0xa
  426a58:	movi	v5.16b, #0xd
  426a5c:	movi	v4.16b, #0x5c
  426a60:	movi	v3.16b, #0x3f
  426a64:	ldr	q1, [x1, #16]!
  426a68:	cmeq	v0.16b, v1.16b, v6.16b
  426a6c:	cmeq	v2.16b, v1.16b, v5.16b
  426a70:	orr	v0.16b, v0.16b, v2.16b
  426a74:	cmeq	v2.16b, v1.16b, v4.16b
  426a78:	orr	v0.16b, v0.16b, v2.16b
  426a7c:	cmeq	v1.16b, v1.16b, v3.16b
  426a80:	orr	v0.16b, v0.16b, v1.16b
  426a84:	addp	d1, v0.2d
  426a88:	fmov	x2, d1
  426a8c:	cbz	x2, 426a64 <nftw@plt+0x23ee4>
  426a90:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  426a94:	ldr	q1, [x0, #3024]
  426a98:	and	v0.16b, v0.16b, v1.16b
  426a9c:	uaddlp	v0.8h, v0.16b
  426aa0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  426aa4:	ldr	q1, [x0, #3040]
  426aa8:	ushl	v0.8h, v0.8h, v1.8h
  426aac:	addv	h0, v0.8h
  426ab0:	umov	w2, v0.h[0]
  426ab4:	cmp	x1, x3
  426ab8:	csel	x19, x19, x1, cc  // cc = lo, ul, last
  426abc:	rbit	w2, w2
  426ac0:	clz	w2, w2
  426ac4:	add	x19, x19, w2, sxtw
  426ac8:	ldrb	w0, [x19]
  426acc:	cmp	w0, #0x5c
  426ad0:	b.eq	426ba4 <nftw@plt+0x24024>  // b.none
  426ad4:	cmp	w0, #0x3f
  426ad8:	b.eq	426bb0 <nftw@plt+0x24030>  // b.none
  426adc:	ldr	x1, [x20, #32]
  426ae0:	cmp	x1, x19
  426ae4:	b.eq	426e04 <nftw@plt+0x24284>  // b.none
  426ae8:	mov	x22, x19
  426aec:	cmp	w0, #0xd
  426af0:	b.eq	426c0c <nftw@plt+0x2408c>  // b.none
  426af4:	cbnz	x24, 426c28 <nftw@plt+0x240a8>
  426af8:	mov	x1, x19
  426afc:	mov	w0, #0xa                   	// #10
  426b00:	strb	w0, [x1], #1
  426b04:	mov	w2, #0xa                   	// #10
  426b08:	mov	x0, x20
  426b0c:	bl	4263e0 <nftw@plt+0x23860>
  426b10:	add	x22, x22, #0x1
  426b14:	str	x22, [x20, #16]
  426b18:	ldp	x19, x20, [sp, #16]
  426b1c:	ldp	x21, x22, [sp, #32]
  426b20:	ldp	x23, x24, [sp, #48]
  426b24:	ldp	x29, x30, [sp], #96
  426b28:	ret
  426b2c:	ldr	q1, [x1]
  426b30:	movi	v0.16b, #0xa
  426b34:	cmeq	v0.16b, v1.16b, v0.16b
  426b38:	movi	v2.16b, #0xd
  426b3c:	cmeq	v2.16b, v1.16b, v2.16b
  426b40:	orr	v0.16b, v0.16b, v2.16b
  426b44:	movi	v2.16b, #0x5c
  426b48:	cmeq	v2.16b, v1.16b, v2.16b
  426b4c:	orr	v0.16b, v0.16b, v2.16b
  426b50:	movi	v2.16b, #0x3f
  426b54:	cmeq	v1.16b, v1.16b, v2.16b
  426b58:	orr	v0.16b, v0.16b, v1.16b
  426b5c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  426b60:	ldr	q1, [x0, #3024]
  426b64:	and	v0.16b, v0.16b, v1.16b
  426b68:	uaddlp	v0.8h, v0.16b
  426b6c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  426b70:	ldr	q1, [x0, #3040]
  426b74:	ushl	v0.8h, v0.8h, v1.8h
  426b78:	addv	h0, v0.8h
  426b7c:	and	w0, w19, #0xf
  426b80:	mov	w2, #0xffffffff            	// #-1
  426b84:	lsl	w2, w2, w0
  426b88:	umov	w0, v0.h[0]
  426b8c:	ands	w0, w2, w0
  426b90:	b.eq	426a54 <nftw@plt+0x23ed4>  // b.none
  426b94:	rbit	w0, w0
  426b98:	clz	w0, w0
  426b9c:	add	x19, x1, w0, sxtw
  426ba0:	b	426ac8 <nftw@plt+0x23f48>
  426ba4:	mov	x24, x19
  426ba8:	add	x19, x19, #0x1
  426bac:	b	426a00 <nftw@plt+0x23e80>
  426bb0:	ldrb	w0, [x19, #1]
  426bb4:	cmp	w0, #0x3f
  426bb8:	b.eq	426bc4 <nftw@plt+0x24044>  // b.none
  426bbc:	add	x19, x19, #0x1
  426bc0:	b	426a00 <nftw@plt+0x23e80>
  426bc4:	ldrb	w2, [x19, #2]
  426bc8:	ldrb	w0, [x21, w2, sxtw]
  426bcc:	cbz	w0, 426bbc <nftw@plt+0x2403c>
  426bd0:	mov	x1, x19
  426bd4:	mov	x0, x20
  426bd8:	bl	4263e0 <nftw@plt+0x23860>
  426bdc:	ldrb	w0, [x23, #1125]
  426be0:	cbz	w0, 426bbc <nftw@plt+0x2403c>
  426be4:	stp	x25, x26, [sp, #64]
  426be8:	str	x27, [sp, #80]
  426bec:	ldrb	w1, [x19, #2]
  426bf0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  426bf4:	add	x0, x0, #0x978
  426bf8:	ldrb	w0, [x0, x1]
  426bfc:	mov	x27, x19
  426c00:	strb	w0, [x27], #2
  426c04:	mov	x21, x19
  426c08:	b	426c98 <nftw@plt+0x24118>
  426c0c:	ldrb	w0, [x19, #1]
  426c10:	cmp	w0, #0xa
  426c14:	b.ne	426af4 <nftw@plt+0x23f74>  // b.any
  426c18:	add	x22, x19, #0x1
  426c1c:	cmp	x1, x22
  426c20:	b.ne	426af4 <nftw@plt+0x23f74>  // b.any
  426c24:	b	426af8 <nftw@plt+0x23f78>
  426c28:	ldurb	w1, [x19, #-1]
  426c2c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  426c30:	add	x0, x0, #0xe68
  426c34:	ldrh	w0, [x0, x1, lsl #1]
  426c38:	tbz	w0, #11, 426e50 <nftw@plt+0x242d0>
  426c3c:	mov	x21, x19
  426c40:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  426c44:	add	x2, x2, #0xe68
  426c48:	mov	x1, x21
  426c4c:	sub	x21, x21, #0x1
  426c50:	ldurb	w0, [x21, #-1]
  426c54:	ldrh	w0, [x2, x0, lsl #1]
  426c58:	tbnz	w0, #11, 426c48 <nftw@plt+0x240c8>
  426c5c:	sub	x1, x1, #0x2
  426c60:	cmp	x24, x1
  426c64:	b.ne	426af8 <nftw@plt+0x23f78>  // b.any
  426c68:	stp	x25, x26, [sp, #64]
  426c6c:	str	x27, [sp, #80]
  426c70:	cmp	x21, x19
  426c74:	mov	w2, #0x20                  	// #32
  426c78:	mov	w0, #0x5c                  	// #92
  426c7c:	csel	w2, w2, w0, ne  // ne = any
  426c80:	mov	x1, x24
  426c84:	mov	x0, x20
  426c88:	bl	4263e0 <nftw@plt+0x23860>
  426c8c:	sub	x21, x21, #0x2
  426c90:	str	x24, [x20, #16]
  426c94:	mov	x27, x22
  426c98:	adrp	x26, 48e000 <__environ@@GLIBC_2.17+0xa68>
  426c9c:	add	x26, x26, #0x978
  426ca0:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  426ca4:	add	x24, x24, #0xe68
  426ca8:	mov	w25, #0x20                  	// #32
  426cac:	b	426d10 <nftw@plt+0x24190>
  426cb0:	ldr	x0, [x20, #32]
  426cb4:	cmp	x0, x22
  426cb8:	b.eq	426e14 <nftw@plt+0x24294>  // b.none
  426cbc:	ldrb	w0, [x27, #2]
  426cc0:	cmp	w0, #0xa
  426cc4:	b.ne	426d40 <nftw@plt+0x241c0>  // b.any
  426cc8:	add	x22, x27, #0x2
  426ccc:	b	426d34 <nftw@plt+0x241b4>
  426cd0:	cmp	x1, x21
  426cd4:	b.eq	426e38 <nftw@plt+0x242b8>  // b.none
  426cd8:	ldurb	w0, [x21, #-1]
  426cdc:	cmp	w0, #0x5c
  426ce0:	b.ne	426e44 <nftw@plt+0x242c4>  // b.any
  426ce4:	sub	x27, x21, #0x1
  426ce8:	cmp	x19, x21
  426cec:	mov	w2, #0x5c                  	// #92
  426cf0:	csel	w2, w25, w2, ne  // ne = any
  426cf4:	mov	x1, x27
  426cf8:	mov	x0, x20
  426cfc:	bl	4263e0 <nftw@plt+0x23860>
  426d00:	sub	x19, x21, #0x2
  426d04:	str	x27, [x20, #16]
  426d08:	mov	x21, x19
  426d0c:	mov	x27, x22
  426d10:	add	x22, x27, #0x1
  426d14:	ldrb	w0, [x27, #1]
  426d18:	add	x19, x21, #0x1
  426d1c:	strb	w0, [x21, #1]
  426d20:	cmp	w0, #0xa
  426d24:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  426d28:	b.ne	426d74 <nftw@plt+0x241f4>  // b.any
  426d2c:	cmp	w0, #0xd
  426d30:	b.eq	426cb0 <nftw@plt+0x24130>  // b.none
  426d34:	ldr	x0, [x20, #32]
  426d38:	cmp	x0, x22
  426d3c:	b.eq	426e20 <nftw@plt+0x242a0>  // b.none
  426d40:	ldr	x1, [x20, #16]
  426d44:	cmp	x1, x19
  426d48:	b.eq	426e2c <nftw@plt+0x242ac>  // b.none
  426d4c:	mov	x21, x19
  426d50:	ldurb	w0, [x21, #-1]
  426d54:	ldrh	w0, [x24, x0, lsl #1]
  426d58:	tbz	w0, #11, 426cd0 <nftw@plt+0x24150>
  426d5c:	sub	x21, x21, #0x1
  426d60:	cmp	x1, x21
  426d64:	b.ne	426d50 <nftw@plt+0x241d0>  // b.any
  426d68:	ldp	x25, x26, [sp, #64]
  426d6c:	ldr	x27, [sp, #80]
  426d70:	b	426af8 <nftw@plt+0x23f78>
  426d74:	cmp	w0, #0x3f
  426d78:	b.ne	426d08 <nftw@plt+0x24188>  // b.any
  426d7c:	ldrb	w0, [x27, #2]
  426d80:	cmp	w0, #0x3f
  426d84:	b.ne	426d08 <nftw@plt+0x24188>  // b.any
  426d88:	ldrb	w2, [x27, #3]
  426d8c:	ldrb	w0, [x26, w2, sxtw]
  426d90:	cbz	w0, 426d08 <nftw@plt+0x24188>
  426d94:	mov	x1, x19
  426d98:	mov	x0, x20
  426d9c:	bl	4263e0 <nftw@plt+0x23860>
  426da0:	ldrb	w0, [x23, #1125]
  426da4:	cbz	w0, 426d08 <nftw@plt+0x24188>
  426da8:	mov	x22, x27
  426dac:	ldrb	w0, [x22, #3]!
  426db0:	ldrb	w0, [x26, w0, sxtw]
  426db4:	strb	w0, [x21, #1]
  426db8:	b	426d08 <nftw@plt+0x24188>
  426dbc:	ldrb	w0, [x19]
  426dc0:	cmp	w0, #0xa
  426dc4:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  426dc8:	b.eq	426ddc <nftw@plt+0x2425c>  // b.none
  426dcc:	ldrb	w0, [x19, #1]!
  426dd0:	cmp	w0, #0xa
  426dd4:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  426dd8:	b.ne	426dcc <nftw@plt+0x2424c>  // b.any
  426ddc:	mov	x22, x19
  426de0:	cmp	w0, #0xd
  426de4:	b.ne	426af8 <nftw@plt+0x23f78>  // b.any
  426de8:	ldr	x22, [x20, #32]
  426dec:	cmp	x19, x22
  426df0:	b.eq	426e0c <nftw@plt+0x2428c>  // b.none
  426df4:	ldrb	w0, [x19, #1]
  426df8:	cmp	w0, #0xa
  426dfc:	cinc	x22, x19, eq  // eq = none
  426e00:	b	426af8 <nftw@plt+0x23f78>
  426e04:	mov	x22, x19
  426e08:	b	426af8 <nftw@plt+0x23f78>
  426e0c:	mov	x19, x22
  426e10:	b	426af8 <nftw@plt+0x23f78>
  426e14:	ldp	x25, x26, [sp, #64]
  426e18:	ldr	x27, [sp, #80]
  426e1c:	b	426af8 <nftw@plt+0x23f78>
  426e20:	ldp	x25, x26, [sp, #64]
  426e24:	ldr	x27, [sp, #80]
  426e28:	b	426af8 <nftw@plt+0x23f78>
  426e2c:	ldp	x25, x26, [sp, #64]
  426e30:	ldr	x27, [sp, #80]
  426e34:	b	426af8 <nftw@plt+0x23f78>
  426e38:	ldp	x25, x26, [sp, #64]
  426e3c:	ldr	x27, [sp, #80]
  426e40:	b	426af8 <nftw@plt+0x23f78>
  426e44:	ldp	x25, x26, [sp, #64]
  426e48:	ldr	x27, [sp, #80]
  426e4c:	b	426af8 <nftw@plt+0x23f78>
  426e50:	sub	x0, x19, #0x1
  426e54:	cmp	x24, x0
  426e58:	b.ne	426af8 <nftw@plt+0x23f78>  // b.any
  426e5c:	stp	x25, x26, [sp, #64]
  426e60:	str	x27, [sp, #80]
  426e64:	mov	x21, x19
  426e68:	mov	w2, #0x5c                  	// #92
  426e6c:	b	426c80 <nftw@plt+0x24100>
  426e70:	stp	x29, x30, [sp, #-80]!
  426e74:	mov	x29, sp
  426e78:	stp	x19, x20, [sp, #16]
  426e7c:	stp	x21, x22, [sp, #32]
  426e80:	stp	x25, x26, [sp, #64]
  426e84:	mov	x20, x0
  426e88:	mov	w21, w1
  426e8c:	ldr	x19, [x0]
  426e90:	ldr	w0, [x19, #56]
  426e94:	ubfiz	x1, x0, #4, #32
  426e98:	ldr	x2, [x19, #48]
  426e9c:	add	x25, x2, x1
  426ea0:	ldr	x2, [x2, x1]
  426ea4:	ldr	x1, [x19]
  426ea8:	cmp	x2, x1
  426eac:	b.hi	4270b8 <nftw@plt+0x24538>  // b.pmore
  426eb0:	stp	x23, x24, [sp, #48]
  426eb4:	adrp	x22, 48e000 <__environ@@GLIBC_2.17+0xa68>
  426eb8:	add	x22, x22, #0x978
  426ebc:	adrp	x23, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426ec0:	add	x23, x23, #0xd98
  426ec4:	mov	w24, #0x4                   	// #4
  426ec8:	b	426f88 <nftw@plt+0x24408>
  426ecc:	ldr	x0, [x20, #40]
  426ed0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426ed4:	add	x4, x4, #0xd20
  426ed8:	mov	w3, w26
  426edc:	ldr	w2, [x0, #60]
  426ee0:	mov	w1, #0x0                   	// #0
  426ee4:	mov	x0, x20
  426ee8:	bl	41fb7c <nftw@plt+0x1cffc>
  426eec:	b	426fc4 <nftw@plt+0x24444>
  426ef0:	ldr	x0, [x20, #40]
  426ef4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  426ef8:	add	x4, x4, #0xd50
  426efc:	mov	w3, w26
  426f00:	ldr	w2, [x0, #60]
  426f04:	mov	w1, #0x2                   	// #2
  426f08:	mov	x0, x20
  426f0c:	bl	41fb7c <nftw@plt+0x1cffc>
  426f10:	ldr	x0, [x19, #32]
  426f14:	str	x0, [x19, #16]
  426f18:	ldr	x0, [x25]
  426f1c:	str	x0, [x19, #8]
  426f20:	ldr	x0, [x20, #40]
  426f24:	ldr	w2, [x0, #12]
  426f28:	sub	w2, w2, #0x1
  426f2c:	sbfiz	x1, x2, #1, #32
  426f30:	add	x2, x1, w2, sxtw
  426f34:	lsl	x2, x2, #3
  426f38:	ldr	x1, [x0]
  426f3c:	add	x4, x1, x2
  426f40:	ldr	w3, [x0, #60]
  426f44:	ldr	w1, [x1, x2]
  426f48:	sub	w3, w3, w1
  426f4c:	ldrb	w1, [x4, #6]
  426f50:	lsr	w3, w3, w1
  426f54:	ldr	w1, [x4, #16]
  426f58:	add	w1, w1, #0x1
  426f5c:	mov	w2, #0x0                   	// #0
  426f60:	add	w1, w3, w1
  426f64:	bl	42b748 <nftw@plt+0x28bc8>
  426f68:	ldr	w0, [x19, #56]
  426f6c:	ubfiz	x1, x0, #4, #32
  426f70:	ldr	x2, [x19, #48]
  426f74:	add	x25, x2, x1
  426f78:	ldr	x2, [x2, x1]
  426f7c:	ldr	x1, [x19]
  426f80:	cmp	x2, x1
  426f84:	b.hi	4270b4 <nftw@plt+0x24534>  // b.pmore
  426f88:	add	w0, w0, #0x1
  426f8c:	str	w0, [x19, #56]
  426f90:	ldr	x1, [x25]
  426f94:	add	x26, x1, #0x1
  426f98:	ldr	x0, [x19, #8]
  426f9c:	sub	x26, x26, x0
  426fa0:	ldr	w5, [x25, #8]
  426fa4:	cmp	w5, #0x20
  426fa8:	cset	w0, eq  // eq = none
  426fac:	cmp	w5, #0x5c
  426fb0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  426fb4:	b.eq	426fd8 <nftw@plt+0x24458>  // b.none
  426fb8:	cmp	w21, #0x0
  426fbc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  426fc0:	b.ne	426ecc <nftw@plt+0x2434c>  // b.any
  426fc4:	ldr	x1, [x19, #16]
  426fc8:	ldr	x0, [x19, #32]
  426fcc:	cmp	x1, x0
  426fd0:	b.ls	426f18 <nftw@plt+0x24398>  // b.plast
  426fd4:	b	426ef0 <nftw@plt+0x24370>
  426fd8:	ldrb	w6, [x22, w5, uxtw]
  426fdc:	cbz	w6, 427098 <nftw@plt+0x24518>
  426fe0:	ldrb	w0, [x20, #1136]
  426fe4:	cbz	w0, 426f68 <nftw@plt+0x243e8>
  426fe8:	cbnz	w21, 427014 <nftw@plt+0x24494>
  426fec:	ldrb	w0, [x20, #1125]
  426ff0:	cbnz	w0, 427074 <nftw@plt+0x244f4>
  426ff4:	ldr	x0, [x20, #40]
  426ff8:	mov	x4, x23
  426ffc:	mov	w3, w26
  427000:	ldr	w2, [x0, #60]
  427004:	mov	w1, w24
  427008:	mov	x0, x20
  42700c:	bl	41fbf4 <nftw@plt+0x1d074>
  427010:	b	426f68 <nftw@plt+0x243e8>
  427014:	cmp	w5, #0x2f
  427018:	b.ne	426f68 <nftw@plt+0x243e8>  // b.any
  42701c:	ldrb	w0, [x20, #1125]
  427020:	cbnz	w0, 427068 <nftw@plt+0x244e8>
  427024:	add	x2, x1, #0x3
  427028:	ldrb	w0, [x1, #3]
  42702c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  427030:	add	x1, x1, #0xe68
  427034:	ldrh	w1, [x1, w0, sxtw #1]
  427038:	tbz	w1, #11, 427050 <nftw@plt+0x244d0>
  42703c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  427040:	add	x3, x3, #0xe68
  427044:	ldrb	w0, [x2, #1]!
  427048:	ldrh	w1, [x3, w0, sxtw #1]
  42704c:	tbnz	w1, #11, 427044 <nftw@plt+0x244c4>
  427050:	cmp	w0, #0xa
  427054:	b.ne	426f68 <nftw@plt+0x243e8>  // b.any
  427058:	ldr	x0, [x25, #16]
  42705c:	cmp	x0, x2
  427060:	b.hi	426ff4 <nftw@plt+0x24474>  // b.pmore
  427064:	b	426f68 <nftw@plt+0x243e8>
  427068:	ldr	x0, [x25, #16]
  42706c:	cmp	x1, x0
  427070:	b.ne	426f68 <nftw@plt+0x243e8>  // b.any
  427074:	ldr	x0, [x20, #40]
  427078:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42707c:	add	x4, x4, #0xd78
  427080:	mov	w3, w26
  427084:	ldr	w2, [x0, #60]
  427088:	mov	w1, w24
  42708c:	mov	x0, x20
  427090:	bl	41fbf4 <nftw@plt+0x1d074>
  427094:	b	426f68 <nftw@plt+0x243e8>
  427098:	cbz	w5, 426f68 <nftw@plt+0x243e8>
  42709c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4270a0:	add	x2, x2, #0xdc8
  4270a4:	mov	w1, #0x48b                 	// #1163
  4270a8:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4270ac:	add	x0, x0, #0xb98
  4270b0:	bl	408d8c <nftw@plt+0x620c>
  4270b4:	ldp	x23, x24, [sp, #48]
  4270b8:	ldp	x19, x20, [sp, #16]
  4270bc:	ldp	x21, x22, [sp, #32]
  4270c0:	ldp	x25, x26, [sp, #64]
  4270c4:	ldp	x29, x30, [sp], #80
  4270c8:	ret
  4270cc:	stp	x29, x30, [sp, #-64]!
  4270d0:	mov	x29, sp
  4270d4:	stp	x19, x20, [sp, #16]
  4270d8:	stp	x21, x22, [sp, #32]
  4270dc:	stp	x23, x24, [sp, #48]
  4270e0:	mov	x21, x0
  4270e4:	ldr	x20, [x0]
  4270e8:	ldr	x1, [x20]
  4270ec:	ldrb	w0, [x1, #1]
  4270f0:	cmp	w0, #0x2f
  4270f4:	cinc	x1, x1, eq  // eq = none
  4270f8:	add	x1, x1, #0x1
  4270fc:	mov	w22, #0x1                   	// #1
  427100:	adrp	x23, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  427104:	add	x23, x23, #0xde0
  427108:	mov	w24, #0x2                   	// #2
  42710c:	b	427134 <nftw@plt+0x245b4>
  427110:	ldurb	w0, [x1, #-1]
  427114:	cmp	w0, #0x2a
  427118:	b.eq	427200 <nftw@plt+0x24680>  // b.none
  42711c:	ldrb	w0, [x21, #1133]
  427120:	cbz	w0, 427130 <nftw@plt+0x245b0>
  427124:	ldrb	w0, [x1, #1]
  427128:	cmp	w0, #0x2a
  42712c:	b.eq	4271cc <nftw@plt+0x2464c>  // b.none
  427130:	mov	x1, x19
  427134:	mov	x19, x1
  427138:	ldrb	w2, [x19], #1
  42713c:	cmp	w2, #0x2f
  427140:	b.eq	427110 <nftw@plt+0x24590>  // b.none
  427144:	cmp	w2, #0xa
  427148:	b.ne	427130 <nftw@plt+0x245b0>  // b.any
  42714c:	str	x1, [x20]
  427150:	mov	w1, w22
  427154:	mov	x0, x21
  427158:	bl	426e70 <nftw@plt+0x242f0>
  42715c:	ldr	x1, [x20, #16]
  427160:	ldr	x0, [x20, #32]
  427164:	cmp	x1, x0
  427168:	b.cs	427228 <nftw@plt+0x246a8>  // b.hs, b.nlast
  42716c:	mov	x0, x21
  427170:	bl	4269b4 <nftw@plt+0x23e34>
  427174:	ldr	x0, [x21, #40]
  427178:	ldr	w1, [x0, #12]
  42717c:	sub	w1, w1, #0x1
  427180:	sbfiz	x2, x1, #1, #32
  427184:	add	x1, x2, w1, sxtw
  427188:	lsl	x1, x1, #3
  42718c:	ldr	x5, [x0]
  427190:	add	x4, x5, x1
  427194:	ldr	x6, [x20, #16]
  427198:	ldr	x2, [x20, #8]
  42719c:	ldr	w3, [x0, #60]
  4271a0:	ldr	w1, [x5, x1]
  4271a4:	sub	w1, w3, w1
  4271a8:	ldrb	w3, [x4, #6]
  4271ac:	lsr	w1, w1, w3
  4271b0:	ldr	w3, [x4, #16]
  4271b4:	add	w3, w3, #0x1
  4271b8:	sub	w2, w6, w2
  4271bc:	add	w1, w1, w3
  4271c0:	bl	42b748 <nftw@plt+0x28bc8>
  4271c4:	ldr	x19, [x20]
  4271c8:	b	427130 <nftw@plt+0x245b0>
  4271cc:	ldrb	w0, [x1, #2]
  4271d0:	cmp	w0, #0x2f
  4271d4:	b.eq	427130 <nftw@plt+0x245b0>  // b.none
  4271d8:	str	x19, [x20]
  4271dc:	ldr	x3, [x20, #8]
  4271e0:	ldr	x0, [x21, #40]
  4271e4:	mov	x4, x23
  4271e8:	sub	w3, w19, w3
  4271ec:	ldr	w2, [x0, #60]
  4271f0:	mov	w1, w24
  4271f4:	mov	x0, x21
  4271f8:	bl	41fbf4 <nftw@plt+0x1d074>
  4271fc:	b	427130 <nftw@plt+0x245b0>
  427200:	str	x19, [x20]
  427204:	mov	w1, #0x1                   	// #1
  427208:	mov	x0, x21
  42720c:	bl	426e70 <nftw@plt+0x242f0>
  427210:	mov	w0, #0x0                   	// #0
  427214:	ldp	x19, x20, [sp, #16]
  427218:	ldp	x21, x22, [sp, #32]
  42721c:	ldp	x23, x24, [sp, #48]
  427220:	ldp	x29, x30, [sp], #64
  427224:	ret
  427228:	mov	w0, #0x1                   	// #1
  42722c:	b	427214 <nftw@plt+0x24694>
  427230:	stp	x29, x30, [sp, #-32]!
  427234:	mov	x29, sp
  427238:	stp	x19, x20, [sp, #16]
  42723c:	mov	x20, x0
  427240:	mov	x2, x1
  427244:	ldrb	w5, [x2], #1
  427248:	sub	w5, w5, #0x71
  42724c:	ldrb	w3, [x1, #1]
  427250:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  427254:	add	x0, x0, #0xe68
  427258:	ldrh	w0, [x0, w3, sxtw #1]
  42725c:	mov	w4, #0x204                 	// #516
  427260:	tst	w4, w0
  427264:	b.eq	427290 <nftw@plt+0x24710>  // b.none
  427268:	mov	w7, #0x43                  	// #67
  42726c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  427270:	add	x0, x0, #0xe68
  427274:	mov	w6, w4
  427278:	madd	w5, w5, w7, w3
  42727c:	sub	w5, w5, #0x71
  427280:	ldrb	w3, [x2, #1]!
  427284:	ldrh	w4, [x0, w3, sxtw #1]
  427288:	tst	w6, w4
  42728c:	b.ne	427278 <nftw@plt+0x246f8>  // b.any
  427290:	sub	x3, x2, x1
  427294:	mov	w4, #0x1                   	// #1
  427298:	add	w3, w5, w3
  42729c:	sub	w2, w2, w1
  4272a0:	ldr	x0, [x20, #1088]
  4272a4:	bl	432a3c <nftw@plt+0x2febc>
  4272a8:	mov	x19, x0
  4272ac:	ldrh	w0, [x0, #18]
  4272b0:	ubfx	x1, x0, #2, #8
  4272b4:	tbnz	w0, #4, 4272c8 <nftw@plt+0x24748>
  4272b8:	mov	x0, x19
  4272bc:	ldp	x19, x20, [sp, #16]
  4272c0:	ldp	x29, x30, [sp], #32
  4272c4:	ret
  4272c8:	ldrb	w0, [x20, #18]
  4272cc:	cbnz	w0, 4272b8 <nftw@plt+0x24738>
  4272d0:	tbz	w1, #1, 4272dc <nftw@plt+0x2475c>
  4272d4:	ldrb	w0, [x20, #23]
  4272d8:	cbz	w0, 427318 <nftw@plt+0x24798>
  4272dc:	ldr	x0, [x20, #1272]
  4272e0:	cmp	x19, x0
  4272e4:	b.eq	427334 <nftw@plt+0x247b4>  // b.none
  4272e8:	ldr	x0, [x20, #1280]
  4272ec:	cmp	x19, x0
  4272f0:	b.eq	427374 <nftw@plt+0x247f4>  // b.none
  4272f4:	ldrh	w0, [x19, #18]
  4272f8:	tbz	w0, #9, 4272b8 <nftw@plt+0x24738>
  4272fc:	ldr	x3, [x19]
  427300:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  427304:	add	x2, x2, #0xce8
  427308:	mov	w1, #0xf                   	// #15
  42730c:	mov	x0, x20
  427310:	bl	41fa08 <nftw@plt+0x1ce88>
  427314:	b	4272b8 <nftw@plt+0x24738>
  427318:	ldr	x3, [x19]
  42731c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  427320:	add	x2, x2, #0xc38
  427324:	mov	w1, #0x3                   	// #3
  427328:	mov	x0, x20
  42732c:	bl	41f990 <nftw@plt+0x1ce10>
  427330:	b	4272dc <nftw@plt+0x2475c>
  427334:	ldrb	w0, [x20, #22]
  427338:	cbnz	w0, 4272e8 <nftw@plt+0x24768>
  42733c:	ldrb	w0, [x20, #1120]
  427340:	cbz	w0, 42735c <nftw@plt+0x247dc>
  427344:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  427348:	add	x2, x2, #0xc58
  42734c:	mov	w1, #0x2                   	// #2
  427350:	mov	x0, x20
  427354:	bl	41f990 <nftw@plt+0x1ce10>
  427358:	b	4272e8 <nftw@plt+0x24768>
  42735c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  427360:	add	x2, x2, #0xca0
  427364:	mov	w1, #0x2                   	// #2
  427368:	mov	x0, x20
  42736c:	bl	41f990 <nftw@plt+0x1ce10>
  427370:	b	4272e8 <nftw@plt+0x24768>
  427374:	mov	x0, x20
  427378:	bl	4265e4 <nftw@plt+0x23a64>
  42737c:	b	4272f4 <nftw@plt+0x24774>
  427380:	add	x0, x0, #0x568
  427384:	ret
  427388:	stp	x29, x30, [sp, #-32]!
  42738c:	mov	x29, sp
  427390:	stp	x19, x20, [sp, #16]
  427394:	mov	x20, x0
  427398:	ubfiz	x19, x1, #1, #32
  42739c:	add	x1, x19, w1, uxtw
  4273a0:	lsl	x19, x1, #3
  4273a4:	mov	x0, x19
  4273a8:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4273ac:	str	x0, [x20, #16]
  4273b0:	add	x19, x0, x19
  4273b4:	str	x19, [x20, #24]
  4273b8:	str	xzr, [x20]
  4273bc:	ldp	x19, x20, [sp, #16]
  4273c0:	ldp	x29, x30, [sp], #32
  4273c4:	ret
  4273c8:	stp	x29, x30, [sp, #-32]!
  4273cc:	mov	x29, sp
  4273d0:	str	x19, [sp, #16]
  4273d4:	mov	x19, x0
  4273d8:	ldr	x0, [x0]
  4273dc:	cbz	x0, 4273f0 <nftw@plt+0x24870>
  4273e0:	ldr	x0, [x19]
  4273e4:	ldr	x19, [sp, #16]
  4273e8:	ldp	x29, x30, [sp], #32
  4273ec:	ret
  4273f0:	mov	x0, #0x20                  	// #32
  4273f4:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4273f8:	str	x0, [x19]
  4273fc:	str	x19, [x0, #8]
  427400:	mov	w1, #0xfa                  	// #250
  427404:	bl	427388 <nftw@plt+0x24808>
  427408:	b	4273e0 <nftw@plt+0x24860>
  42740c:	ldr	w1, [x0, #48]
  427410:	cmp	w1, #0x1
  427414:	b.eq	427434 <nftw@plt+0x248b4>  // b.none
  427418:	tst	w1, #0xfffffffd
  42741c:	b.ne	427454 <nftw@plt+0x248d4>  // b.any
  427420:	ldr	x1, [x0, #24]
  427424:	ldr	x0, [x0, #16]
  427428:	sub	x0, x1, x0
  42742c:	ubfx	x0, x0, #3, #32
  427430:	ret
  427434:	ldr	x1, [x0, #24]
  427438:	ldr	x0, [x0, #16]
  42743c:	sub	x0, x1, x0
  427440:	asr	x0, x0, #3
  427444:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  427448:	movk	x1, #0xaaab
  42744c:	mul	w0, w0, w1
  427450:	ret
  427454:	stp	x29, x30, [sp, #-16]!
  427458:	mov	x29, sp
  42745c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  427460:	add	x2, x2, #0xdf8
  427464:	mov	w1, #0x99f                 	// #2463
  427468:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42746c:	add	x0, x0, #0xb98
  427470:	bl	408d8c <nftw@plt+0x620c>
  427474:	stp	x29, x30, [sp, #-64]!
  427478:	mov	x29, sp
  42747c:	stp	x19, x20, [sp, #16]
  427480:	stp	x21, x22, [sp, #32]
  427484:	stp	x23, x24, [sp, #48]
  427488:	mov	x19, x0
  42748c:	ldr	x0, [x0, #488]
  427490:	ldr	x22, [x19, #448]
  427494:	ldr	x20, [x0, #24]
  427498:	sub	x20, x20, x22
  42749c:	ldr	w23, [x19, #496]
  4274a0:	cbz	x23, 4274c4 <nftw@plt+0x24944>
  4274a4:	asr	x21, x20, #3
  4274a8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4274ac:	movk	x1, #0xaaab
  4274b0:	mul	x21, x21, x1
  4274b4:	cmp	x21, x23
  4274b8:	b.le	427504 <nftw@plt+0x24984>
  4274bc:	cmp	x20, #0x18
  4274c0:	b.gt	427550 <nftw@plt+0x249d0>
  4274c4:	cbnz	x20, 4274dc <nftw@plt+0x2495c>
  4274c8:	ldr	x0, [x19, #488]
  4274cc:	ldr	x2, [x19, #448]
  4274d0:	ldr	x1, [x0, #24]
  4274d4:	cmp	x2, x1
  4274d8:	b.eq	427574 <nftw@plt+0x249f4>  // b.none
  4274dc:	ldr	x0, [x19, #448]
  4274e0:	add	x1, x0, #0x18
  4274e4:	str	x1, [x19, #448]
  4274e8:	ldur	w1, [x22, #-24]
  4274ec:	str	w1, [x0]
  4274f0:	ldp	x19, x20, [sp, #16]
  4274f4:	ldp	x21, x22, [sp, #32]
  4274f8:	ldp	x23, x24, [sp, #48]
  4274fc:	ldp	x29, x30, [sp], #64
  427500:	ret
  427504:	bl	4273c8 <nftw@plt+0x24848>
  427508:	mov	x24, x0
  42750c:	cmp	x21, x23
  427510:	b.lt	427534 <nftw@plt+0x249b4>  // b.tstop
  427514:	ldr	x0, [x19, #488]
  427518:	ldr	x1, [x0, #24]
  42751c:	ldr	x0, [x24, #16]
  427520:	ldp	x2, x3, [x1, #-24]
  427524:	stp	x2, x3, [x0]
  427528:	ldur	x1, [x1, #-8]
  42752c:	str	x1, [x0, #16]
  427530:	b	4274bc <nftw@plt+0x2493c>
  427534:	ldr	x1, [x0, #16]
  427538:	sub	x2, x23, x21
  42753c:	add	x2, x2, x2, lsl #1
  427540:	lsl	x2, x2, #3
  427544:	add	x0, x1, #0x18
  427548:	bl	4024a0 <memmove@plt>
  42754c:	b	427514 <nftw@plt+0x24994>
  427550:	ldr	x1, [x19, #448]
  427554:	sub	x2, x21, #0x1
  427558:	cmp	x2, x23
  42755c:	csel	x2, x2, x23, le
  427560:	add	x2, x2, x2, lsl #1
  427564:	lsl	x2, x2, #3
  427568:	add	x0, x1, #0x18
  42756c:	bl	4024a0 <memmove@plt>
  427570:	b	4274dc <nftw@plt+0x2495c>
  427574:	bl	4273c8 <nftw@plt+0x24848>
  427578:	str	x0, [x19, #488]
  42757c:	ldr	x0, [x0, #16]
  427580:	str	x0, [x19, #448]
  427584:	b	4274dc <nftw@plt+0x2495c>
  427588:	stp	x29, x30, [sp, #-32]!
  42758c:	mov	x29, sp
  427590:	stp	x19, x20, [sp, #16]
  427594:	mov	x20, x0
  427598:	ldrb	w0, [x0, #16]
  42759c:	mov	w19, #0x0                   	// #0
  4275a0:	cbz	w0, 4275e0 <nftw@plt+0x24a60>
  4275a4:	mov	w0, w19
  4275a8:	ldp	x19, x20, [sp, #16]
  4275ac:	ldp	x29, x30, [sp], #32
  4275b0:	ret
  4275b4:	mov	x0, x20
  4275b8:	bl	4269b4 <nftw@plt+0x23e34>
  4275bc:	b	4275a4 <nftw@plt+0x24a24>
  4275c0:	ldrb	w19, [x1, #105]
  4275c4:	ubfx	x19, x19, #2, #1
  4275c8:	mov	x0, x20
  4275cc:	bl	41ec80 <nftw@plt+0x1c100>
  4275d0:	ldr	x0, [x20]
  4275d4:	cmp	x0, #0x0
  4275d8:	csinc	w19, w19, wzr, ne  // ne = any
  4275dc:	cbnz	w19, 427624 <nftw@plt+0x24aa4>
  4275e0:	ldr	x1, [x20]
  4275e4:	ldrb	w19, [x1, #104]
  4275e8:	cbz	w19, 42762c <nftw@plt+0x24aac>
  4275ec:	ldr	x2, [x1, #16]
  4275f0:	ldr	x0, [x1, #32]
  4275f4:	cmp	x2, x0
  4275f8:	b.cc	4275b4 <nftw@plt+0x24a34>  // b.lo, b.ul, b.last
  4275fc:	ldrb	w3, [x20, #25]
  427600:	cbnz	w3, 427634 <nftw@plt+0x24ab4>
  427604:	ldr	x3, [x1, #24]
  427608:	cmp	x3, x0
  42760c:	ccmp	x2, x0, #0x0, ne  // ne = any
  427610:	b.ls	4275c0 <nftw@plt+0x24a40>  // b.plast
  427614:	ldrb	w2, [x1, #105]
  427618:	tbnz	w2, #1, 4275c0 <nftw@plt+0x24a40>
  42761c:	str	x0, [x1, #16]
  427620:	b	4275c0 <nftw@plt+0x24a40>
  427624:	mov	w19, #0x0                   	// #0
  427628:	b	4275a4 <nftw@plt+0x24a24>
  42762c:	mov	w19, #0x1                   	// #1
  427630:	b	4275a4 <nftw@plt+0x24a24>
  427634:	mov	w19, #0x0                   	// #0
  427638:	b	4275a4 <nftw@plt+0x24a24>
  42763c:	mov	x1, x0
  427640:	ldrb	w0, [x0, #4]
  427644:	lsl	x0, x0, #4
  427648:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42764c:	add	x2, x2, #0x660
  427650:	ldr	w2, [x2, x0]
  427654:	cmp	w2, #0x1
  427658:	b.eq	427670 <nftw@plt+0x24af0>  // b.none
  42765c:	mov	w0, #0x6                   	// #6
  427660:	cmp	w2, #0x2
  427664:	b.ne	42766c <nftw@plt+0x24aec>  // b.any
  427668:	ldr	w0, [x1, #8]
  42766c:	ret
  427670:	ldr	x0, [x1, #8]
  427674:	ldr	w0, [x0, #8]
  427678:	add	w0, w0, w0, lsl #2
  42767c:	lsl	w0, w0, #1
  427680:	b	42766c <nftw@plt+0x24aec>
  427684:	stp	x29, x30, [sp, #-48]!
  427688:	mov	x29, sp
  42768c:	stp	x19, x20, [sp, #16]
  427690:	stp	x21, x22, [sp, #32]
  427694:	mov	x20, x0
  427698:	ldr	x21, [x1]
  42769c:	ldr	w0, [x1, #8]
  4276a0:	cbz	w0, 4276f4 <nftw@plt+0x24b74>
  4276a4:	mov	x22, x1
  4276a8:	mov	x19, #0x0                   	// #0
  4276ac:	b	4276d4 <nftw@plt+0x24b54>
  4276b0:	mov	x0, x20
  4276b4:	bl	42646c <nftw@plt+0x238ec>
  4276b8:	sub	x19, x19, #0x1
  4276bc:	add	x19, x0, x19
  4276c0:	add	x20, x20, #0xa
  4276c4:	add	x19, x19, #0x1
  4276c8:	ldr	w0, [x22, #8]
  4276cc:	cmp	x0, x19
  4276d0:	b.ls	4276f4 <nftw@plt+0x24b74>  // b.plast
  4276d4:	add	x1, x21, x19
  4276d8:	ldrb	w2, [x21, x19]
  4276dc:	tst	w2, #0xffffff80
  4276e0:	b.ne	4276b0 <nftw@plt+0x24b30>  // b.any
  4276e4:	mov	x0, x20
  4276e8:	strb	w2, [x0], #1
  4276ec:	mov	x20, x0
  4276f0:	b	4276c4 <nftw@plt+0x24b44>
  4276f4:	mov	x0, x20
  4276f8:	ldp	x19, x20, [sp, #16]
  4276fc:	ldp	x21, x22, [sp, #32]
  427700:	ldp	x29, x30, [sp], #48
  427704:	ret
  427708:	stp	x29, x30, [sp, #-32]!
  42770c:	mov	x29, sp
  427710:	stp	x19, x20, [sp, #16]
  427714:	mov	x20, x1
  427718:	mov	x19, x2
  42771c:	ldrb	w2, [x1, #4]
  427720:	sbfiz	x4, x2, #4, #32
  427724:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  427728:	add	x1, x1, #0x660
  42772c:	ldr	w1, [x1, x4]
  427730:	cmp	w1, #0x2
  427734:	b.eq	427814 <nftw@plt+0x24c94>  // b.none
  427738:	and	w3, w3, #0xff
  42773c:	b.hi	42776c <nftw@plt+0x24bec>  // b.pmore
  427740:	cbz	w1, 4277ac <nftw@plt+0x24c2c>
  427744:	cbz	w3, 427804 <nftw@plt+0x24c84>
  427748:	ldr	x0, [x20, #16]
  42774c:	ldr	w2, [x0, #8]
  427750:	ldr	x1, [x0]
  427754:	mov	x0, x19
  427758:	bl	402490 <memcpy@plt>
  42775c:	ldr	x0, [x20, #16]
  427760:	ldr	w0, [x0, #8]
  427764:	add	x0, x19, x0
  427768:	b	4277a0 <nftw@plt+0x24c20>
  42776c:	cmp	w1, #0x3
  427770:	b.ne	42779c <nftw@plt+0x24c1c>  // b.any
  427774:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  427778:	add	x1, x1, #0x660
  42777c:	add	x2, x1, w2, sxtw #4
  427780:	ldr	x3, [x2, #8]
  427784:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  427788:	add	x2, x2, #0xe20
  42778c:	mov	w1, #0x4                   	// #4
  427790:	bl	41f990 <nftw@plt+0x1ce10>
  427794:	mov	x0, x19
  427798:	b	4277a0 <nftw@plt+0x24c20>
  42779c:	mov	x0, x19
  4277a0:	ldp	x19, x20, [sp, #16]
  4277a4:	ldp	x29, x30, [sp], #32
  4277a8:	ret
  4277ac:	ldrh	w0, [x20, #6]
  4277b0:	tbz	w0, #1, 4277ec <nftw@plt+0x24c6c>
  4277b4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4277b8:	add	x0, x0, #0x660
  4277bc:	add	x0, x0, #0x540
  4277c0:	sub	w2, w2, #0x25
  4277c4:	ldr	x1, [x0, w2, sxtw #3]
  4277c8:	ldrb	w0, [x1], #1
  4277cc:	cbz	w0, 4277e4 <nftw@plt+0x24c64>
  4277d0:	strb	w0, [x19], #1
  4277d4:	ldrb	w0, [x1], #1
  4277d8:	cbnz	w0, 4277d0 <nftw@plt+0x24c50>
  4277dc:	mov	x0, x19
  4277e0:	b	4277a0 <nftw@plt+0x24c20>
  4277e4:	mov	x0, x19
  4277e8:	b	4277a0 <nftw@plt+0x24c20>
  4277ec:	tbnz	w0, #4, 427744 <nftw@plt+0x24bc4>
  4277f0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4277f4:	add	x0, x0, #0x660
  4277f8:	add	x2, x0, w2, sxtw #4
  4277fc:	ldr	x1, [x2, #8]
  427800:	b	4277c8 <nftw@plt+0x24c48>
  427804:	ldr	x1, [x20, #8]
  427808:	mov	x0, x19
  42780c:	bl	427684 <nftw@plt+0x24b04>
  427810:	b	4277a0 <nftw@plt+0x24c20>
  427814:	ldr	w2, [x20, #8]
  427818:	ldr	x1, [x20, #16]
  42781c:	mov	x0, x19
  427820:	bl	402490 <memcpy@plt>
  427824:	ldr	w0, [x20, #8]
  427828:	add	x0, x19, x0
  42782c:	b	4277a0 <nftw@plt+0x24c20>
  427830:	stp	x29, x30, [sp, #-48]!
  427834:	mov	x29, sp
  427838:	stp	x19, x20, [sp, #16]
  42783c:	mov	x19, x0
  427840:	mov	x20, x2
  427844:	ldr	w2, [x0, #1192]
  427848:	ldr	w0, [x20, #8]
  42784c:	cmp	w2, w0
  427850:	b.ge	427868 <nftw@plt+0x24ce8>  // b.tcont
  427854:	stp	x21, x22, [sp, #32]
  427858:	mov	x21, x1
  42785c:	ldrb	w0, [x19, #18]
  427860:	cbz	w0, 427874 <nftw@plt+0x24cf4>
  427864:	ldp	x21, x22, [sp, #32]
  427868:	ldp	x19, x20, [sp, #16]
  42786c:	ldp	x29, x30, [sp], #48
  427870:	ret
  427874:	mov	x0, x1
  427878:	bl	42763c <nftw@plt+0x24abc>
  42787c:	mov	w0, w0
  427880:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  427884:	mov	x22, x0
  427888:	mov	w3, #0x0                   	// #0
  42788c:	mov	x2, x0
  427890:	mov	x1, x21
  427894:	mov	x0, x19
  427898:	bl	427708 <nftw@plt+0x24b88>
  42789c:	sub	x5, x0, x22
  4278a0:	ldr	w0, [x20, #8]
  4278a4:	cmp	w0, #0x1
  4278a8:	b.eq	4278dc <nftw@plt+0x24d5c>  // b.none
  4278ac:	mov	x6, x22
  4278b0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4278b4:	add	x4, x4, #0xe50
  4278b8:	mov	w3, #0x0                   	// #0
  4278bc:	ldr	w2, [x21]
  4278c0:	mov	w1, #0x10                  	// #16
  4278c4:	mov	x0, x19
  4278c8:	bl	41fbf4 <nftw@plt+0x1d074>
  4278cc:	mov	x0, x22
  4278d0:	bl	402910 <free@plt>
  4278d4:	ldp	x21, x22, [sp, #32]
  4278d8:	b	427868 <nftw@plt+0x24ce8>
  4278dc:	mov	x6, x22
  4278e0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4278e4:	add	x4, x4, #0xe38
  4278e8:	mov	w3, #0x0                   	// #0
  4278ec:	ldr	w2, [x21]
  4278f0:	mov	w1, #0x10                  	// #16
  4278f4:	mov	x0, x19
  4278f8:	bl	41fbf4 <nftw@plt+0x1d074>
  4278fc:	b	4278cc <nftw@plt+0x24d4c>
  427900:	tst	w1, #0x2
  427904:	b.eq	427920 <nftw@plt+0x24da0>  // b.none
  427908:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42790c:	add	x1, x1, #0x660
  427910:	add	x1, x1, #0x540
  427914:	sub	w0, w0, #0x25
  427918:	ldr	x0, [x1, w0, sxtw #3]
  42791c:	ret
  427920:	and	w2, w1, #0xff
  427924:	tbnz	w2, #4, 42793c <nftw@plt+0x24dbc>
  427928:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42792c:	add	x1, x1, #0x660
  427930:	add	x0, x1, w0, sxtw #4
  427934:	ldr	x0, [x0, #8]
  427938:	ret
  42793c:	stp	x29, x30, [sp, #-16]!
  427940:	mov	x29, sp
  427944:	bl	435058 <nftw@plt+0x324d8>
  427948:	ldp	x29, x30, [sp], #16
  42794c:	ret
  427950:	stp	x29, x30, [sp, #-80]!
  427954:	mov	x29, sp
  427958:	stp	x19, x20, [sp, #16]
  42795c:	stp	x21, x22, [sp, #32]
  427960:	mov	x21, x0
  427964:	mov	x20, x1
  427968:	ldrb	w1, [x0, #4]
  42796c:	sbfiz	x2, x1, #4, #32
  427970:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  427974:	add	x0, x0, #0x660
  427978:	ldr	w0, [x0, x2]
  42797c:	cmp	w0, #0x1
  427980:	b.eq	427a0c <nftw@plt+0x24e8c>  // b.none
  427984:	cmp	w0, #0x2
  427988:	b.eq	427ab4 <nftw@plt+0x24f34>  // b.none
  42798c:	cbz	w0, 4279a0 <nftw@plt+0x24e20>
  427990:	ldp	x19, x20, [sp, #16]
  427994:	ldp	x21, x22, [sp, #32]
  427998:	ldp	x29, x30, [sp], #80
  42799c:	ret
  4279a0:	ldrh	w0, [x21, #6]
  4279a4:	tbz	w0, #1, 4279e8 <nftw@plt+0x24e68>
  4279a8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4279ac:	add	x0, x0, #0x660
  4279b0:	add	x0, x0, #0x540
  4279b4:	sub	w1, w1, #0x25
  4279b8:	ldr	x19, [x0, w1, sxtw #3]
  4279bc:	ldrb	w1, [x19]
  4279c0:	ldr	x0, [x20, #40]
  4279c4:	ldr	x2, [x20, #48]
  4279c8:	cmp	x0, x2
  4279cc:	b.cs	427a00 <nftw@plt+0x24e80>  // b.hs, b.nlast
  4279d0:	add	x2, x0, #0x1
  4279d4:	str	x2, [x20, #40]
  4279d8:	strb	w1, [x0]
  4279dc:	ldrb	w1, [x19, #1]!
  4279e0:	cbnz	w1, 4279c0 <nftw@plt+0x24e40>
  4279e4:	b	427990 <nftw@plt+0x24e10>
  4279e8:	tbnz	w0, #4, 427a0c <nftw@plt+0x24e8c>
  4279ec:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4279f0:	add	x0, x0, #0x660
  4279f4:	add	x1, x0, w1, sxtw #4
  4279f8:	ldr	x19, [x1, #8]
  4279fc:	b	4279bc <nftw@plt+0x24e3c>
  427a00:	mov	x0, x20
  427a04:	bl	402800 <__overflow@plt>
  427a08:	b	4279dc <nftw@plt+0x24e5c>
  427a0c:	ldr	x0, [x21, #8]
  427a10:	ldr	x22, [x0]
  427a14:	ldr	w1, [x0, #8]
  427a18:	cbz	w1, 427990 <nftw@plt+0x24e10>
  427a1c:	stp	x23, x24, [sp, #48]
  427a20:	mov	x19, #0x0                   	// #0
  427a24:	mov	x24, #0xa                   	// #10
  427a28:	mov	x23, #0x1                   	// #1
  427a2c:	b	427a78 <nftw@plt+0x24ef8>
  427a30:	add	x0, sp, #0x40
  427a34:	bl	42646c <nftw@plt+0x238ec>
  427a38:	sub	x19, x19, #0x1
  427a3c:	add	x19, x0, x19
  427a40:	mov	x3, x20
  427a44:	mov	x2, x24
  427a48:	mov	x1, x23
  427a4c:	add	x0, sp, #0x40
  427a50:	bl	4024d0 <fwrite_unlocked@plt>
  427a54:	b	427a64 <nftw@plt+0x24ee4>
  427a58:	add	x2, x0, #0x1
  427a5c:	str	x2, [x20, #40]
  427a60:	strb	w1, [x0]
  427a64:	add	x19, x19, #0x1
  427a68:	ldr	x0, [x21, #8]
  427a6c:	ldr	w1, [x0, #8]
  427a70:	cmp	x1, x19
  427a74:	b.ls	427aac <nftw@plt+0x24f2c>  // b.plast
  427a78:	add	x1, x22, x19
  427a7c:	ldrb	w2, [x22, x19]
  427a80:	tst	w2, #0xffffff80
  427a84:	b.ne	427a30 <nftw@plt+0x24eb0>  // b.any
  427a88:	ldr	x0, [x0]
  427a8c:	ldrb	w1, [x0, x19]
  427a90:	ldr	x0, [x20, #40]
  427a94:	ldr	x2, [x20, #48]
  427a98:	cmp	x0, x2
  427a9c:	b.cc	427a58 <nftw@plt+0x24ed8>  // b.lo, b.ul, b.last
  427aa0:	mov	x0, x20
  427aa4:	bl	402800 <__overflow@plt>
  427aa8:	b	427a64 <nftw@plt+0x24ee4>
  427aac:	ldp	x23, x24, [sp, #48]
  427ab0:	b	427990 <nftw@plt+0x24e10>
  427ab4:	mov	x3, x20
  427ab8:	ldr	w2, [x21, #8]
  427abc:	mov	x1, #0x1                   	// #1
  427ac0:	ldr	x0, [x21, #16]
  427ac4:	bl	4024d0 <fwrite_unlocked@plt>
  427ac8:	b	427990 <nftw@plt+0x24e10>
  427acc:	ldr	w3, [x0, #4]
  427ad0:	and	w3, w3, #0xffff00ff
  427ad4:	ldr	w2, [x1, #4]
  427ad8:	and	w2, w2, #0xffff00ff
  427adc:	cmp	w3, w2
  427ae0:	b.eq	427aec <nftw@plt+0x24f6c>  // b.none
  427ae4:	mov	w0, #0x0                   	// #0
  427ae8:	ret
  427aec:	ldrb	w3, [x0, #4]
  427af0:	sbfiz	x4, x3, #4, #32
  427af4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  427af8:	add	x2, x2, #0x660
  427afc:	ldr	w2, [x2, x4]
  427b00:	cmp	w2, #0x2
  427b04:	b.eq	427bac <nftw@plt+0x2502c>  // b.none
  427b08:	cmp	w2, #0x3
  427b0c:	b.eq	427b40 <nftw@plt+0x24fc0>  // b.none
  427b10:	cmp	w2, #0x1
  427b14:	b.eq	427b7c <nftw@plt+0x24ffc>  // b.none
  427b18:	mov	w2, #0x1                   	// #1
  427b1c:	cmp	w3, #0x26
  427b20:	b.eq	427b2c <nftw@plt+0x24fac>  // b.none
  427b24:	mov	w0, w2
  427b28:	ret
  427b2c:	ldr	w2, [x0, #8]
  427b30:	ldr	w0, [x1, #8]
  427b34:	cmp	w2, w0
  427b38:	cset	w2, eq  // eq = none
  427b3c:	b	427b24 <nftw@plt+0x24fa4>
  427b40:	mov	w2, #0x1                   	// #1
  427b44:	cmp	w3, #0x50
  427b48:	b.eq	427b54 <nftw@plt+0x24fd4>  // b.none
  427b4c:	mov	w0, w2
  427b50:	ret
  427b54:	ldr	w4, [x0, #8]
  427b58:	ldr	w3, [x1, #8]
  427b5c:	mov	w2, #0x0                   	// #0
  427b60:	cmp	w4, w3
  427b64:	b.ne	427b4c <nftw@plt+0x24fcc>  // b.any
  427b68:	ldr	x2, [x0, #16]
  427b6c:	ldr	x0, [x1, #16]
  427b70:	cmp	x2, x0
  427b74:	cset	w2, eq  // eq = none
  427b78:	b	427b4c <nftw@plt+0x24fcc>
  427b7c:	ldr	x4, [x0, #8]
  427b80:	ldr	x3, [x1, #8]
  427b84:	mov	w2, #0x0                   	// #0
  427b88:	cmp	x4, x3
  427b8c:	b.eq	427b98 <nftw@plt+0x25018>  // b.none
  427b90:	mov	w0, w2
  427b94:	ret
  427b98:	ldr	x2, [x0, #16]
  427b9c:	ldr	x0, [x1, #16]
  427ba0:	cmp	x2, x0
  427ba4:	cset	w2, eq  // eq = none
  427ba8:	b	427b90 <nftw@plt+0x25010>
  427bac:	ldr	w2, [x0, #8]
  427bb0:	ldr	w4, [x1, #8]
  427bb4:	mov	w3, #0x0                   	// #0
  427bb8:	cmp	w2, w4
  427bbc:	b.eq	427bc8 <nftw@plt+0x25048>  // b.none
  427bc0:	mov	w0, w3
  427bc4:	ret
  427bc8:	stp	x29, x30, [sp, #-16]!
  427bcc:	mov	x29, sp
  427bd0:	mov	w2, w2
  427bd4:	ldr	x1, [x1, #16]
  427bd8:	ldr	x0, [x0, #16]
  427bdc:	bl	402850 <memcmp@plt>
  427be0:	cmp	w0, #0x0
  427be4:	cset	w3, eq  // eq = none
  427be8:	mov	w0, w3
  427bec:	ldp	x29, x30, [sp], #16
  427bf0:	ret
  427bf4:	mov	x8, x0
  427bf8:	ldrb	w3, [x1, #4]
  427bfc:	ldrb	w6, [x2, #4]
  427c00:	ldrh	w4, [x1, #6]
  427c04:	tst	x4, #0x10
  427c08:	mov	w4, #0x35                  	// #53
  427c0c:	csel	w3, w3, w4, eq  // eq = none
  427c10:	ldrh	w5, [x2, #6]
  427c14:	tst	x5, #0x10
  427c18:	csel	w4, w6, w4, eq  // eq = none
  427c1c:	tbz	w5, #1, 427c80 <nftw@plt+0x25100>
  427c20:	adrp	x5, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  427c24:	add	x5, x5, #0x660
  427c28:	add	x5, x5, #0x540
  427c2c:	sub	w0, w4, #0x25
  427c30:	ldr	x0, [x5, w0, sxtw #3]
  427c34:	ldrb	w5, [x0]
  427c38:	cmp	w5, #0x3d
  427c3c:	mov	w0, #0x1                   	// #1
  427c40:	ccmp	w3, #0xd, #0x0, eq  // eq = none
  427c44:	b.le	427f40 <nftw@plt+0x253c0>
  427c48:	mov	w7, w4
  427c4c:	cmp	w3, #0x12
  427c50:	b.eq	427e4c <nftw@plt+0x252cc>  // b.none
  427c54:	b.hi	427d20 <nftw@plt+0x251a0>  // b.pmore
  427c58:	cmp	w3, #0x7
  427c5c:	b.eq	427e2c <nftw@plt+0x252ac>  // b.none
  427c60:	b.ls	427cac <nftw@plt+0x2512c>  // b.plast
  427c64:	cmp	w3, #0x9
  427c68:	b.eq	427e40 <nftw@plt+0x252c0>  // b.none
  427c6c:	cmp	w3, #0xa
  427c70:	b.ne	427d04 <nftw@plt+0x25184>  // b.any
  427c74:	cmp	w5, #0x7c
  427c78:	cset	w0, eq  // eq = none
  427c7c:	b	427f40 <nftw@plt+0x253c0>
  427c80:	sbfiz	x5, x4, #4, #32
  427c84:	adrp	x7, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  427c88:	add	x7, x7, #0x660
  427c8c:	ldr	w0, [x7, x5]
  427c90:	cbnz	w0, 427ca4 <nftw@plt+0x25124>
  427c94:	add	x0, x7, w4, sxtw #4
  427c98:	ldr	x0, [x0, #8]
  427c9c:	ldrb	w5, [x0]
  427ca0:	b	427c38 <nftw@plt+0x250b8>
  427ca4:	mov	w5, #0xffffffff            	// #-1
  427ca8:	b	427c48 <nftw@plt+0x250c8>
  427cac:	cmp	w3, #0x4
  427cb0:	b.eq	427e20 <nftw@plt+0x252a0>  // b.none
  427cb4:	b.ls	427cd8 <nftw@plt+0x25158>  // b.plast
  427cb8:	mov	w0, #0x0                   	// #0
  427cbc:	cmp	w3, #0x5
  427cc0:	b.ne	427f40 <nftw@plt+0x253c0>  // b.any
  427cc4:	cmp	w5, #0x2d
  427cc8:	mov	w0, #0x3e                  	// #62
  427ccc:	ccmp	w5, w0, #0x4, ne  // ne = any
  427cd0:	cset	w0, eq  // eq = none
  427cd4:	b	427f40 <nftw@plt+0x253c0>
  427cd8:	cmp	w3, #0x2
  427cdc:	b.eq	427e14 <nftw@plt+0x25294>  // b.none
  427ce0:	mov	w0, #0x0                   	// #0
  427ce4:	cmp	w3, #0x3
  427ce8:	b.ne	427f40 <nftw@plt+0x253c0>  // b.any
  427cec:	sub	w0, w5, #0x3a
  427cf0:	and	w0, w0, #0xfffffffd
  427cf4:	cmp	w5, #0x25
  427cf8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  427cfc:	cset	w0, eq  // eq = none
  427d00:	b	427f40 <nftw@plt+0x253c0>
  427d04:	mov	w0, #0x0                   	// #0
  427d08:	cmp	w3, #0x8
  427d0c:	b.ne	427f40 <nftw@plt+0x253c0>  // b.any
  427d10:	and	w5, w5, #0xfffffffb
  427d14:	cmp	w5, #0x3a
  427d18:	cset	w0, eq  // eq = none
  427d1c:	b	427f40 <nftw@plt+0x253c0>
  427d20:	cmp	w3, #0x35
  427d24:	b.eq	427e68 <nftw@plt+0x252e8>  // b.none
  427d28:	b.ls	427d94 <nftw@plt+0x25214>  // b.plast
  427d2c:	cmp	w3, #0x3d
  427d30:	b.eq	427ef4 <nftw@plt+0x25374>  // b.none
  427d34:	b.ls	427ddc <nftw@plt+0x2525c>  // b.plast
  427d38:	sub	w3, w3, #0x3e
  427d3c:	cmp	w3, #0x4
  427d40:	b.hi	427f3c <nftw@plt+0x253bc>  // b.pmore
  427d44:	ldrb	w1, [x8, #1161]
  427d48:	mov	w0, #0x0                   	// #0
  427d4c:	cbz	w1, 427f40 <nftw@plt+0x253c0>
  427d50:	mov	w0, #0x1                   	// #1
  427d54:	cmp	w4, #0x35
  427d58:	b.eq	427f40 <nftw@plt+0x253c0>  // b.none
  427d5c:	sbfiz	x6, x6, #4, #32
  427d60:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  427d64:	add	x0, x0, #0x660
  427d68:	ldr	w1, [x0, x6]
  427d6c:	mov	w0, #0x0                   	// #0
  427d70:	cmp	w1, #0x2
  427d74:	b.ne	427f40 <nftw@plt+0x253c0>  // b.any
  427d78:	ldr	x0, [x2, #16]
  427d7c:	ldrb	w1, [x0]
  427d80:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  427d84:	add	x0, x0, #0xe68
  427d88:	ldrh	w0, [x0, x1, lsl #1]
  427d8c:	ubfx	x0, x0, #9, #1
  427d90:	b	427f40 <nftw@plt+0x253c0>
  427d94:	cmp	w3, #0x2f
  427d98:	b.eq	427e5c <nftw@plt+0x252dc>  // b.none
  427d9c:	cmp	w3, #0x30
  427da0:	b.ne	427dc0 <nftw@plt+0x25240>  // b.any
  427da4:	cmp	w5, #0x2e
  427da8:	mov	w0, #0x25                  	// #37
  427dac:	ccmp	w5, w0, #0x4, ne  // ne = any
  427db0:	mov	w0, #0x37                  	// #55
  427db4:	ccmp	w4, w0, #0x4, ne  // ne = any
  427db8:	cset	w0, eq  // eq = none
  427dbc:	b	427f40 <nftw@plt+0x253c0>
  427dc0:	mov	w0, #0x0                   	// #0
  427dc4:	cmp	w3, #0x25
  427dc8:	b.ne	427f40 <nftw@plt+0x253c0>  // b.any
  427dcc:	sub	w5, w5, #0x23
  427dd0:	tst	w5, #0xfffffffd
  427dd4:	cset	w0, eq  // eq = none
  427dd8:	b	427f40 <nftw@plt+0x253c0>
  427ddc:	mov	w0, #0x0                   	// #0
  427de0:	cmp	w3, #0x37
  427de4:	b.ne	427f40 <nftw@plt+0x253c0>  // b.any
  427de8:	and	w4, w4, #0xfffffffd
  427dec:	and	w4, w4, #0xff
  427df0:	mov	w0, #0x1                   	// #1
  427df4:	cmp	w4, #0x35
  427df8:	b.eq	427f40 <nftw@plt+0x253c0>  // b.none
  427dfc:	sub	w0, w5, #0x2d
  427e00:	cmp	w0, #0x1
  427e04:	cset	w0, ls  // ls = plast
  427e08:	cmp	w5, #0x2b
  427e0c:	csinc	w0, w0, wzr, ne  // ne = any
  427e10:	b	427f40 <nftw@plt+0x253c0>
  427e14:	cmp	w5, #0x3e
  427e18:	cset	w0, eq  // eq = none
  427e1c:	b	427f40 <nftw@plt+0x253c0>
  427e20:	cmp	w5, #0x2b
  427e24:	cset	w0, eq  // eq = none
  427e28:	b	427f40 <nftw@plt+0x253c0>
  427e2c:	cmp	w5, #0x2f
  427e30:	mov	w0, #0x2a                  	// #42
  427e34:	ccmp	w5, w0, #0x4, ne  // ne = any
  427e38:	cset	w0, eq  // eq = none
  427e3c:	b	427f40 <nftw@plt+0x253c0>
  427e40:	cmp	w5, #0x26
  427e44:	cset	w0, eq  // eq = none
  427e48:	b	427f40 <nftw@plt+0x253c0>
  427e4c:	and	w5, w5, #0xfffffffb
  427e50:	cmp	w5, #0x3a
  427e54:	cset	w0, eq  // eq = none
  427e58:	b	427f40 <nftw@plt+0x253c0>
  427e5c:	cmp	w5, #0x2a
  427e60:	cset	w0, eq  // eq = none
  427e64:	b	427f40 <nftw@plt+0x253c0>
  427e68:	cmp	w4, #0x37
  427e6c:	b.eq	427e8c <nftw@plt+0x2530c>  // b.none
  427e70:	cmp	w7, #0x35
  427e74:	mov	w0, #0x38                  	// #56
  427e78:	ccmp	w7, w0, #0x4, ne  // ne = any
  427e7c:	cset	w0, eq  // eq = none
  427e80:	cmp	w7, #0x3e
  427e84:	csinc	w0, w0, wzr, ne  // ne = any
  427e88:	b	427f40 <nftw@plt+0x253c0>
  427e8c:	ldr	w1, [x2, #8]
  427e90:	cbz	w1, 427ee4 <nftw@plt+0x25364>
  427e94:	ldr	x0, [x2, #16]
  427e98:	sub	w1, w1, #0x1
  427e9c:	add	x3, x0, #0x1
  427ea0:	add	x3, x1, x3
  427ea4:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  427ea8:	add	x4, x4, #0xe68
  427eac:	mov	w5, #0x204                 	// #516
  427eb0:	b	427ec0 <nftw@plt+0x25340>
  427eb4:	add	x0, x0, #0x1
  427eb8:	cmp	x3, x0
  427ebc:	b.eq	427eec <nftw@plt+0x2536c>  // b.none
  427ec0:	ldrb	w1, [x0]
  427ec4:	ldrh	w2, [x4, w1, sxtw #1]
  427ec8:	tst	w5, w2
  427ecc:	b.ne	427eb4 <nftw@plt+0x25334>  // b.any
  427ed0:	cmp	w1, #0x24
  427ed4:	b.ne	427e70 <nftw@plt+0x252f0>  // b.any
  427ed8:	ldrb	w1, [x8, #1146]
  427edc:	cbnz	w1, 427eb4 <nftw@plt+0x25334>
  427ee0:	b	427e70 <nftw@plt+0x252f0>
  427ee4:	mov	w0, #0x1                   	// #1
  427ee8:	b	427f40 <nftw@plt+0x253c0>
  427eec:	mov	w0, #0x1                   	// #1
  427ef0:	b	427f40 <nftw@plt+0x253c0>
  427ef4:	ldr	x0, [x1, #16]
  427ef8:	ldrb	w2, [x0]
  427efc:	cmp	w4, #0x35
  427f00:	cset	w3, eq  // eq = none
  427f04:	cmp	w2, #0x5c
  427f08:	csel	w1, w3, wzr, eq  // eq = none
  427f0c:	cbnz	w1, 427f28 <nftw@plt+0x253a8>
  427f10:	ldrb	w0, [x8, #1122]
  427f14:	cmp	w0, #0x0
  427f18:	cset	w0, ne  // ne = any
  427f1c:	cmp	w2, #0x40
  427f20:	csel	w1, w0, wzr, eq  // eq = none
  427f24:	cbnz	w1, 427f30 <nftw@plt+0x253b0>
  427f28:	mov	w0, w1
  427f2c:	b	427f40 <nftw@plt+0x253c0>
  427f30:	cmp	w4, #0x3e
  427f34:	csinc	w1, w3, wzr, ne  // ne = any
  427f38:	b	427f28 <nftw@plt+0x253a8>
  427f3c:	mov	w0, #0x0                   	// #0
  427f40:	ret
  427f44:	stp	x29, x30, [sp, #-64]!
  427f48:	mov	x29, sp
  427f4c:	stp	x19, x20, [sp, #16]
  427f50:	stp	x21, x22, [sp, #32]
  427f54:	mov	x21, x0
  427f58:	mov	x20, x1
  427f5c:	bl	431a1c <nftw@plt+0x2ee9c>
  427f60:	mov	x19, x0
  427f64:	ldrb	w0, [x0, #4]
  427f68:	cmp	w0, #0x16
  427f6c:	b.eq	427fdc <nftw@plt+0x2545c>  // b.none
  427f70:	str	x23, [sp, #48]
  427f74:	mov	w22, #0x20                  	// #32
  427f78:	mov	w23, #0x20                  	// #32
  427f7c:	b	427f98 <nftw@plt+0x25418>
  427f80:	add	x0, x1, #0x1
  427f84:	str	x0, [x20, #40]
  427f88:	strb	w22, [x1]
  427f8c:	ldrb	w1, [x19, #4]
  427f90:	cmp	w1, #0x16
  427f94:	b.eq	427fd8 <nftw@plt+0x25458>  // b.none
  427f98:	mov	x1, x20
  427f9c:	mov	x0, x19
  427fa0:	bl	427950 <nftw@plt+0x24dd0>
  427fa4:	mov	x0, x21
  427fa8:	bl	431a1c <nftw@plt+0x2ee9c>
  427fac:	mov	x19, x0
  427fb0:	ldrh	w2, [x0, #6]
  427fb4:	tbz	w2, #0, 427f8c <nftw@plt+0x2540c>
  427fb8:	ldr	x1, [x20, #40]
  427fbc:	ldr	x0, [x20, #48]
  427fc0:	cmp	x1, x0
  427fc4:	b.cc	427f80 <nftw@plt+0x25400>  // b.lo, b.ul, b.last
  427fc8:	mov	w1, w23
  427fcc:	mov	x0, x20
  427fd0:	bl	402800 <__overflow@plt>
  427fd4:	b	427f8c <nftw@plt+0x2540c>
  427fd8:	ldr	x23, [sp, #48]
  427fdc:	ldr	x0, [x20, #40]
  427fe0:	ldr	x1, [x20, #48]
  427fe4:	cmp	x0, x1
  427fe8:	b.cs	42800c <nftw@plt+0x2548c>  // b.hs, b.nlast
  427fec:	add	x1, x0, #0x1
  427ff0:	str	x1, [x20, #40]
  427ff4:	mov	w1, #0xa                   	// #10
  427ff8:	strb	w1, [x0]
  427ffc:	ldp	x19, x20, [sp, #16]
  428000:	ldp	x21, x22, [sp, #32]
  428004:	ldp	x29, x30, [sp], #64
  428008:	ret
  42800c:	mov	w1, #0xa                   	// #10
  428010:	mov	x0, x20
  428014:	bl	402800 <__overflow@plt>
  428018:	b	427ffc <nftw@plt+0x2547c>
  42801c:	stp	x29, x30, [sp, #-80]!
  428020:	mov	x29, sp
  428024:	stp	x19, x20, [sp, #16]
  428028:	stp	x21, x22, [sp, #32]
  42802c:	stp	x23, x24, [sp, #48]
  428030:	str	x25, [sp, #64]
  428034:	mov	x22, x0
  428038:	cbz	x1, 428110 <nftw@plt+0x25590>
  42803c:	mov	x19, x1
  428040:	mov	x0, x1
  428044:	bl	4024f0 <strlen@plt>
  428048:	mov	x25, x0
  42804c:	add	w23, w0, #0x78
  428050:	add	w0, w0, #0x78
  428054:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  428058:	mov	x21, x0
  42805c:	mov	x2, x19
  428060:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428064:	add	x1, x1, #0xe68
  428068:	bl	4025b0 <sprintf@plt>
  42806c:	add	w25, w25, #0x2
  428070:	mov	x0, x22
  428074:	bl	431a1c <nftw@plt+0x2ee9c>
  428078:	mov	x19, x0
  42807c:	ldrb	w0, [x0, #4]
  428080:	cmp	w0, #0x16
  428084:	b.eq	428128 <nftw@plt+0x255a8>  // b.none
  428088:	mov	w24, #0x20                  	// #32
  42808c:	b	42809c <nftw@plt+0x2551c>
  428090:	ldrb	w0, [x19, #4]
  428094:	cmp	w0, #0x16
  428098:	b.eq	428128 <nftw@plt+0x255a8>  // b.none
  42809c:	mov	x0, x19
  4280a0:	bl	42763c <nftw@plt+0x24abc>
  4280a4:	add	w1, w0, w25
  4280a8:	add	w1, w1, #0x2
  4280ac:	cmp	w1, w23
  4280b0:	b.hi	4280f0 <nftw@plt+0x25570>  // b.pmore
  4280b4:	mov	w3, #0x0                   	// #0
  4280b8:	add	x2, x21, w25, uxtw
  4280bc:	mov	x1, x19
  4280c0:	mov	x0, x22
  4280c4:	bl	427708 <nftw@plt+0x24b88>
  4280c8:	sub	x20, x0, x21
  4280cc:	mov	w25, w20
  4280d0:	mov	x0, x22
  4280d4:	bl	431a1c <nftw@plt+0x2ee9c>
  4280d8:	mov	x19, x0
  4280dc:	ldrh	w0, [x0, #6]
  4280e0:	tbz	w0, #0, 428090 <nftw@plt+0x25510>
  4280e4:	add	w25, w20, #0x1
  4280e8:	strb	w24, [x21, w20, uxtw]
  4280ec:	b	428090 <nftw@plt+0x25510>
  4280f0:	lsl	w0, w23, #1
  4280f4:	cmp	w1, w0
  4280f8:	csel	w23, w1, w0, cs  // cs = hs, nlast
  4280fc:	csel	w1, w1, w0, cs  // cs = hs, nlast
  428100:	mov	x0, x21
  428104:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  428108:	mov	x21, x0
  42810c:	b	4280b4 <nftw@plt+0x25534>
  428110:	mov	x0, #0x78                  	// #120
  428114:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  428118:	mov	x21, x0
  42811c:	mov	w23, #0x78                  	// #120
  428120:	mov	w25, #0x0                   	// #0
  428124:	b	428070 <nftw@plt+0x254f0>
  428128:	strb	wzr, [x21, w25, uxtw]
  42812c:	mov	x0, x21
  428130:	ldp	x19, x20, [sp, #16]
  428134:	ldp	x21, x22, [sp, #32]
  428138:	ldp	x23, x24, [sp, #48]
  42813c:	ldr	x25, [sp, #64]
  428140:	ldp	x29, x30, [sp], #80
  428144:	ret
  428148:	mov	x2, x1
  42814c:	mov	x3, x2
  428150:	ldr	x2, [x2]
  428154:	cbnz	x2, 42814c <nftw@plt+0x255cc>
  428158:	ldr	x2, [x0, #72]
  42815c:	str	x2, [x3]
  428160:	str	x1, [x0, #72]
  428164:	ret
  428168:	add	x4, x0, #0x48
  42816c:	ldr	x0, [x0, #72]
  428170:	cbz	x0, 428184 <nftw@plt+0x25604>
  428174:	add	x5, x1, x1, lsl #1
  428178:	mov	x2, #0x1f40                	// #8000
  42817c:	add	x5, x2, x5, lsr #1
  428180:	b	4281dc <nftw@plt+0x2565c>
  428184:	stp	x29, x30, [sp, #-32]!
  428188:	mov	x29, sp
  42818c:	str	x19, [sp, #16]
  428190:	mov	x19, #0x1f40                	// #8000
  428194:	cmp	x1, x19
  428198:	csel	x19, x1, x19, cs  // cs = hs, nlast
  42819c:	add	x19, x19, #0x7
  4281a0:	and	x19, x19, #0xfffffffffffffff8
  4281a4:	add	x0, x19, #0x20
  4281a8:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4281ac:	mov	x1, x0
  4281b0:	add	x0, x0, x19
  4281b4:	str	x1, [x0, #8]
  4281b8:	str	x1, [x0, #16]
  4281bc:	str	x0, [x0, #24]
  4281c0:	str	xzr, [x1, x19]
  4281c4:	ldr	x19, [sp, #16]
  4281c8:	ldp	x29, x30, [sp], #32
  4281cc:	ret
  4281d0:	mov	x4, x0
  4281d4:	ldr	x0, [x0]
  4281d8:	cbz	x0, 428184 <nftw@plt+0x25604>
  4281dc:	ldr	x2, [x0, #24]
  4281e0:	ldr	x3, [x0, #8]
  4281e4:	sub	x2, x2, x3
  4281e8:	cmp	x2, x1
  4281ec:	b.cc	4281d0 <nftw@plt+0x25650>  // b.lo, b.ul, b.last
  4281f0:	cmp	x5, x2
  4281f4:	b.cc	4281d0 <nftw@plt+0x25650>  // b.lo, b.ul, b.last
  4281f8:	ldr	x1, [x0]
  4281fc:	str	x1, [x4]
  428200:	str	xzr, [x0]
  428204:	ldr	x1, [x0, #8]
  428208:	str	x1, [x0, #16]
  42820c:	ret
  428210:	stp	x29, x30, [sp, #-32]!
  428214:	mov	x29, sp
  428218:	stp	x19, x20, [sp, #16]
  42821c:	mov	x19, x1
  428220:	ldr	x3, [x1, #24]
  428224:	ldr	x1, [x1, #16]
  428228:	sub	x1, x3, x1
  42822c:	add	x1, x2, x1, lsl #1
  428230:	bl	428168 <nftw@plt+0x255e8>
  428234:	mov	x20, x0
  428238:	str	x0, [x19]
  42823c:	ldr	x1, [x19, #16]
  428240:	ldr	x2, [x19, #24]
  428244:	sub	x2, x2, x1
  428248:	ldr	x0, [x0, #8]
  42824c:	bl	402490 <memcpy@plt>
  428250:	mov	x0, x20
  428254:	ldp	x19, x20, [sp, #16]
  428258:	ldp	x29, x30, [sp], #32
  42825c:	ret
  428260:	stp	x29, x30, [sp, #-80]!
  428264:	mov	x29, sp
  428268:	stp	x19, x20, [sp, #16]
  42826c:	stp	x21, x22, [sp, #32]
  428270:	stp	x23, x24, [sp, #48]
  428274:	stp	x25, x26, [sp, #64]
  428278:	mov	x26, x0
  42827c:	mov	x24, x1
  428280:	mov	x20, x2
  428284:	mov	x23, x3
  428288:	mov	x21, x4
  42828c:	ldr	x25, [x3]
  428290:	ldr	x19, [x4]
  428294:	cbz	x25, 4282e8 <nftw@plt+0x25768>
  428298:	ldr	x0, [x19, #16]
  42829c:	ldr	x22, [x19, #24]
  4282a0:	sub	x22, x22, x0
  4282a4:	cmp	x22, x2
  4282a8:	b.cc	4282fc <nftw@plt+0x2577c>  // b.lo, b.ul, b.last
  4282ac:	mov	x2, x20
  4282b0:	mov	x1, x24
  4282b4:	ldr	x0, [x19, #16]
  4282b8:	bl	402490 <memcpy@plt>
  4282bc:	ldr	x2, [x19, #16]
  4282c0:	add	x20, x2, x20
  4282c4:	str	x20, [x19, #16]
  4282c8:	str	x25, [x23]
  4282cc:	str	x19, [x21]
  4282d0:	ldp	x19, x20, [sp, #16]
  4282d4:	ldp	x21, x22, [sp, #32]
  4282d8:	ldp	x23, x24, [sp, #48]
  4282dc:	ldp	x25, x26, [sp, #64]
  4282e0:	ldp	x29, x30, [sp], #80
  4282e4:	ret
  4282e8:	mov	x1, x2
  4282ec:	bl	428168 <nftw@plt+0x255e8>
  4282f0:	mov	x25, x0
  4282f4:	mov	x19, x0
  4282f8:	b	4282ac <nftw@plt+0x2572c>
  4282fc:	mov	x2, x22
  428300:	bl	402490 <memcpy@plt>
  428304:	ldr	x0, [x19, #16]
  428308:	add	x0, x0, x22
  42830c:	str	x0, [x19, #16]
  428310:	add	x24, x24, x22
  428314:	sub	x20, x20, x22
  428318:	mov	x2, x20
  42831c:	mov	x1, x19
  428320:	mov	x0, x26
  428324:	bl	428210 <nftw@plt+0x25690>
  428328:	mov	x19, x0
  42832c:	b	4282ac <nftw@plt+0x2572c>
  428330:	stp	x29, x30, [sp, #-48]!
  428334:	mov	x29, sp
  428338:	stp	x19, x20, [sp, #16]
  42833c:	str	x21, [sp, #32]
  428340:	mov	x21, x1
  428344:	ldr	x20, [x1]
  428348:	ldr	x3, [x20, #24]
  42834c:	ldr	x1, [x20, #16]
  428350:	sub	x1, x3, x1
  428354:	add	x1, x2, x1, lsl #1
  428358:	bl	428168 <nftw@plt+0x255e8>
  42835c:	mov	x19, x0
  428360:	ldr	x1, [x20, #16]
  428364:	ldr	x2, [x20, #24]
  428368:	sub	x2, x2, x1
  42836c:	ldr	x0, [x0, #8]
  428370:	bl	402490 <memcpy@plt>
  428374:	str	x20, [x19]
  428378:	str	x19, [x21]
  42837c:	ldp	x19, x20, [sp, #16]
  428380:	ldr	x21, [sp, #32]
  428384:	ldp	x29, x30, [sp], #48
  428388:	ret
  42838c:	stp	x29, x30, [sp, #-32]!
  428390:	mov	x29, sp
  428394:	str	x19, [sp, #16]
  428398:	mov	x19, x0
  42839c:	cbz	x0, 4283b4 <nftw@plt+0x25834>
  4283a0:	mov	x0, x19
  4283a4:	ldr	x19, [x19]
  4283a8:	ldr	x0, [x0, #8]
  4283ac:	bl	402910 <free@plt>
  4283b0:	cbnz	x19, 4283a0 <nftw@plt+0x25820>
  4283b4:	ldr	x19, [sp, #16]
  4283b8:	ldp	x29, x30, [sp], #32
  4283bc:	ret
  4283c0:	stp	x29, x30, [sp, #-32]!
  4283c4:	mov	x29, sp
  4283c8:	stp	x19, x20, [sp, #16]
  4283cc:	mov	x20, x0
  4283d0:	mov	x19, x1
  4283d4:	ldr	x1, [x0, #64]
  4283d8:	ldr	x0, [x1, #16]
  4283dc:	ldr	x2, [x1, #24]
  4283e0:	sub	x2, x2, x0
  4283e4:	cmp	x2, x19
  4283e8:	b.cc	428400 <nftw@plt+0x25880>  // b.lo, b.ul, b.last
  4283ec:	add	x19, x0, x19
  4283f0:	str	x19, [x1, #16]
  4283f4:	ldp	x19, x20, [sp, #16]
  4283f8:	ldp	x29, x30, [sp], #32
  4283fc:	ret
  428400:	mov	x1, x19
  428404:	mov	x0, x20
  428408:	bl	428168 <nftw@plt+0x255e8>
  42840c:	mov	x1, x0
  428410:	ldr	x0, [x20, #64]
  428414:	str	x0, [x1]
  428418:	str	x1, [x20, #64]
  42841c:	ldr	x0, [x1, #16]
  428420:	b	4283ec <nftw@plt+0x2586c>
  428424:	stp	x29, x30, [sp, #-80]!
  428428:	mov	x29, sp
  42842c:	stp	x19, x20, [sp, #16]
  428430:	stp	x21, x22, [sp, #32]
  428434:	stp	x23, x24, [sp, #48]
  428438:	str	x25, [sp, #64]
  42843c:	mov	x22, x0
  428440:	mov	x23, x1
  428444:	mov	x20, x2
  428448:	ldr	x0, [x0]
  42844c:	ldr	x24, [x0]
  428450:	sub	x24, x24, #0x1
  428454:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  428458:	add	x21, x21, #0xe68
  42845c:	mov	w25, #0x204                 	// #516
  428460:	b	428524 <nftw@plt+0x259a4>
  428464:	ldrb	w1, [x22, #1166]
  428468:	cbz	w1, 4284d4 <nftw@plt+0x25954>
  42846c:	str	w0, [x20]
  428470:	strb	wzr, [x20, #4]
  428474:	add	x19, x19, #0x1
  428478:	ldrb	w0, [x19]
  42847c:	ldrh	w1, [x21, w0, sxtw #1]
  428480:	and	w1, w25, w1
  428484:	cmp	w0, #0x2e
  428488:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  42848c:	b.ne	42846c <nftw@plt+0x258ec>  // b.any
  428490:	cmp	w0, #0x27
  428494:	b.eq	428464 <nftw@plt+0x258e4>  // b.none
  428498:	sub	w1, w0, #0x2b
  42849c:	and	w1, w1, #0xfffffffd
  4284a0:	tst	w1, #0xff
  4284a4:	b.ne	4284d4 <nftw@plt+0x25954>  // b.any
  4284a8:	ldurb	w1, [x19, #-1]
  4284ac:	and	w1, w1, #0xffffffdf
  4284b0:	and	w1, w1, #0xff
  4284b4:	cmp	w1, #0x45
  4284b8:	b.eq	42846c <nftw@plt+0x258ec>  // b.none
  4284bc:	cmp	w1, #0x50
  4284c0:	b.ne	4284d4 <nftw@plt+0x25954>  // b.any
  4284c4:	ldrb	w1, [x22, #1127]
  4284c8:	cbnz	w1, 42846c <nftw@plt+0x258ec>
  4284cc:	ldr	x2, [x22]
  4284d0:	b	428508 <nftw@plt+0x25988>
  4284d4:	ldr	x2, [x22]
  4284d8:	ldr	x1, [x2]
  4284dc:	cmp	x19, x1
  4284e0:	b.ls	428508 <nftw@plt+0x25988>  // b.plast
  4284e4:	ldurb	w0, [x19, #-1]
  4284e8:	cmp	w0, #0x27
  4284ec:	b.ne	428508 <nftw@plt+0x25988>  // b.any
  4284f0:	ldrb	w0, [x22, #1166]
  4284f4:	cbz	w0, 428508 <nftw@plt+0x25988>
  4284f8:	sub	x19, x19, #0x1
  4284fc:	cmp	x19, x1
  428500:	b.ne	4284e4 <nftw@plt+0x25964>  // b.any
  428504:	mov	x19, x1
  428508:	str	x19, [x2]
  42850c:	mov	x2, x20
  428510:	mov	w1, #0x0                   	// #0
  428514:	mov	x0, x22
  428518:	bl	426644 <nftw@plt+0x23ac4>
  42851c:	and	w0, w0, #0xff
  428520:	cbz	w0, 428530 <nftw@plt+0x259b0>
  428524:	ldr	x0, [x22]
  428528:	ldr	x19, [x0]
  42852c:	b	428478 <nftw@plt+0x258f8>
  428530:	sub	x1, x19, x24
  428534:	str	w1, [x23]
  428538:	add	w1, w1, #0x1
  42853c:	mov	x0, x22
  428540:	bl	4283c0 <nftw@plt+0x25840>
  428544:	mov	x19, x0
  428548:	ldr	w2, [x23]
  42854c:	mov	x1, x24
  428550:	bl	402490 <memcpy@plt>
  428554:	ldr	w0, [x23]
  428558:	strb	wzr, [x19, x0]
  42855c:	str	x19, [x23, #8]
  428560:	ldp	x19, x20, [sp, #16]
  428564:	ldp	x21, x22, [sp, #32]
  428568:	ldp	x23, x24, [sp, #48]
  42856c:	ldr	x25, [sp, #64]
  428570:	ldp	x29, x30, [sp], #80
  428574:	ret
  428578:	stp	x29, x30, [sp, #-64]!
  42857c:	mov	x29, sp
  428580:	stp	x19, x20, [sp, #16]
  428584:	stp	x21, x22, [sp, #32]
  428588:	str	x23, [sp, #48]
  42858c:	mov	x20, x1
  428590:	mov	x23, x2
  428594:	mov	w19, w3
  428598:	mov	w22, w4
  42859c:	add	w1, w3, #0x1
  4285a0:	bl	4283c0 <nftw@plt+0x25840>
  4285a4:	mov	x21, x0
  4285a8:	mov	w2, w19
  4285ac:	mov	x1, x23
  4285b0:	bl	402490 <memcpy@plt>
  4285b4:	strb	wzr, [x21, w19, uxtw]
  4285b8:	strb	w22, [x20, #4]
  4285bc:	str	w19, [x20, #8]
  4285c0:	str	x21, [x20, #16]
  4285c4:	ldp	x19, x20, [sp, #16]
  4285c8:	ldp	x21, x22, [sp, #32]
  4285cc:	ldr	x23, [sp, #48]
  4285d0:	ldp	x29, x30, [sp], #64
  4285d4:	ret
  4285d8:	stp	x29, x30, [sp, #-224]!
  4285dc:	mov	x29, sp
  4285e0:	stp	x19, x20, [sp, #16]
  4285e4:	stp	x21, x22, [sp, #32]
  4285e8:	stp	x23, x24, [sp, #48]
  4285ec:	mov	x22, x0
  4285f0:	str	x1, [sp, #112]
  4285f4:	str	x2, [sp, #104]
  4285f8:	ldrb	w0, [x2]
  4285fc:	cmp	w0, #0x4c
  428600:	mov	w1, #0x55                  	// #85
  428604:	ccmp	w0, w1, #0x4, ne  // ne = any
  428608:	b.ne	428640 <nftw@plt+0x25ac0>  // b.any
  42860c:	add	x19, x2, #0x2
  428610:	ldrb	w21, [x2, #1]
  428614:	cmp	w21, #0x52
  428618:	b.eq	4286d8 <nftw@plt+0x25b58>  // b.none
  42861c:	cmp	w21, #0x22
  428620:	b.eq	429008 <nftw@plt+0x26488>  // b.none
  428624:	cmp	w21, #0x27
  428628:	b.eq	429030 <nftw@plt+0x264b0>  // b.none
  42862c:	mov	w23, #0x44                  	// #68
  428630:	mov	w21, #0x3e                  	// #62
  428634:	mov	w2, #0x0                   	// #0
  428638:	mov	w0, #0x1                   	// #1
  42863c:	b	42908c <nftw@plt+0x2650c>
  428640:	mov	w21, w0
  428644:	cmp	w0, #0x75
  428648:	b.eq	428688 <nftw@plt+0x25b08>  // b.none
  42864c:	ldr	x1, [sp, #104]
  428650:	add	x19, x1, #0x1
  428654:	cmp	w0, #0x52
  428658:	b.ne	42861c <nftw@plt+0x25a9c>  // b.any
  42865c:	stp	x25, x26, [sp, #64]
  428660:	stp	x27, x28, [sp, #80]
  428664:	str	xzr, [sp, #160]
  428668:	str	xzr, [sp, #168]
  42866c:	ldr	x0, [x22]
  428670:	ldr	w20, [x0, #56]
  428674:	ldr	x0, [x0, #48]
  428678:	add	x20, x0, x20, lsl #4
  42867c:	mov	w0, #0x3e                  	// #62
  428680:	str	w0, [sp, #140]
  428684:	b	428708 <nftw@plt+0x25b88>
  428688:	ldr	x1, [sp, #104]
  42868c:	ldrb	w21, [x1, #1]
  428690:	add	x19, x1, #0x2
  428694:	cmp	w21, #0x38
  428698:	b.eq	4286cc <nftw@plt+0x25b4c>  // b.none
  42869c:	cmp	w21, #0x52
  4286a0:	b.eq	429294 <nftw@plt+0x26714>  // b.none
  4286a4:	cmp	w21, #0x22
  4286a8:	b.ne	428624 <nftw@plt+0x25aa4>  // b.any
  4286ac:	ldr	x0, [sp, #104]
  4286b0:	ldrb	w0, [x0, #1]
  4286b4:	cmp	w0, #0x38
  4286b8:	mov	w23, #0x42                  	// #66
  4286bc:	mov	w0, #0x40                  	// #64
  4286c0:	csel	w23, w23, w0, eq  // eq = none
  4286c4:	mov	w21, #0x22                  	// #34
  4286c8:	b	428634 <nftw@plt+0x25ab4>
  4286cc:	add	x19, x1, #0x3
  4286d0:	ldrb	w21, [x1, #2]
  4286d4:	b	42869c <nftw@plt+0x25b1c>
  4286d8:	stp	x25, x26, [sp, #64]
  4286dc:	stp	x27, x28, [sp, #80]
  4286e0:	str	xzr, [sp, #160]
  4286e4:	str	xzr, [sp, #168]
  4286e8:	ldr	x1, [x22]
  4286ec:	ldr	w20, [x1, #56]
  4286f0:	ldr	x1, [x1, #48]
  4286f4:	add	x20, x1, x20, lsl #4
  4286f8:	mov	w1, #0x3f                  	// #63
  4286fc:	str	w1, [sp, #140]
  428700:	cmp	w0, #0x4c
  428704:	b.ne	428740 <nftw@plt+0x25bc0>  // b.any
  428708:	add	x19, x19, #0x1
  42870c:	ldr	x23, [sp, #104]
  428710:	sub	x0, x19, x23
  428714:	str	x0, [sp, #128]
  428718:	mov	x24, #0x0                   	// #0
  42871c:	mov	x21, #0x0                   	// #0
  428720:	str	wzr, [sp, #120]
  428724:	str	wzr, [sp, #124]
  428728:	str	wzr, [sp, #136]
  42872c:	mov	x27, #0xffffffff77ffffff    	// #-2281701377
  428730:	movk	x27, #0x3fff, lsl #48
  428734:	mov	x26, #0xfcee00000000        	// #278099132416000
  428738:	movk	x26, #0xffff, lsl #48
  42873c:	b	428a8c <nftw@plt+0x25f0c>
  428740:	mov	w1, #0x41                  	// #65
  428744:	str	w1, [sp, #140]
  428748:	cmp	w0, #0x55
  42874c:	b.eq	428708 <nftw@plt+0x25b88>  // b.none
  428750:	mov	w1, #0x3e                  	// #62
  428754:	str	w1, [sp, #140]
  428758:	cmp	w0, #0x75
  42875c:	b.ne	428708 <nftw@plt+0x25b88>  // b.any
  428760:	b	4292b4 <nftw@plt+0x26734>
  428764:	mov	x20, x1
  428768:	mov	x19, x25
  42876c:	b	428a8c <nftw@plt+0x25f0c>
  428770:	mov	x20, x1
  428774:	mov	x24, x0
  428778:	mov	x19, x25
  42877c:	b	428a8c <nftw@plt+0x25f0c>
  428780:	mov	x20, x1
  428784:	mov	x19, x25
  428788:	mov	x24, #0x0                   	// #0
  42878c:	mov	w0, #0x2                   	// #2
  428790:	str	w0, [sp, #120]
  428794:	str	wzr, [sp, #124]
  428798:	b	428a8c <nftw@plt+0x25f0c>
  42879c:	b.ne	428a48 <nftw@plt+0x25ec8>  // b.any
  4287a0:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4287a4:	add	x25, x25, #0xf40
  4287a8:	b	428848 <nftw@plt+0x25cc8>
  4287ac:	sub	x28, x19, x23
  4287b0:	add	x4, sp, #0xa8
  4287b4:	add	x3, sp, #0xa0
  4287b8:	mov	x2, x28
  4287bc:	mov	x1, x23
  4287c0:	mov	x0, x22
  4287c4:	bl	428260 <nftw@plt+0x256e0>
  4287c8:	add	x21, x21, #0x1
  4287cc:	adrp	x23, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4287d0:	add	x23, x23, #0xe70
  4287d4:	add	x4, sp, #0xa8
  4287d8:	add	x3, sp, #0xa0
  4287dc:	mov	x2, #0x1                   	// #1
  4287e0:	mov	x1, x23
  4287e4:	mov	x0, x22
  4287e8:	bl	428260 <nftw@plt+0x256e0>
  4287ec:	add	x21, x28, x21
  4287f0:	cmp	x24, #0x10
  4287f4:	ccmp	x19, x23, #0x4, ls  // ls = plast
  4287f8:	b.ne	428930 <nftw@plt+0x25db0>  // b.any
  4287fc:	ldr	w0, [x20, #8]
  428800:	cmp	w0, #0x20
  428804:	b.eq	428944 <nftw@plt+0x25dc4>  // b.none
  428808:	add	x4, sp, #0xa8
  42880c:	add	x3, sp, #0xa0
  428810:	mov	x2, #0x1                   	// #1
  428814:	mov	x1, x25
  428818:	mov	x0, x22
  42881c:	bl	428260 <nftw@plt+0x256e0>
  428820:	add	x21, x21, #0x1
  428824:	cmp	x19, x25
  428828:	mov	x23, x19
  42882c:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  428830:	b.ls	428988 <nftw@plt+0x25e08>  // b.plast
  428834:	add	x1, x20, #0x10
  428838:	ldr	x0, [x20, #16]
  42883c:	cmp	x19, x0
  428840:	b.ne	428a4c <nftw@plt+0x25ecc>  // b.any
  428844:	mov	x20, x1
  428848:	ldr	w0, [x20, #8]
  42884c:	cmp	w0, #0x20
  428850:	b.eq	4287ac <nftw@plt+0x25c2c>  // b.none
  428854:	cmp	w0, #0x5c
  428858:	b.eq	4287ac <nftw@plt+0x25c2c>  // b.none
  42885c:	cbz	w0, 428834 <nftw@plt+0x25cb4>
  428860:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  428864:	add	x1, x1, #0x978
  428868:	ldrb	w1, [x1, w0, uxtw]
  42886c:	cbz	w1, 428a30 <nftw@plt+0x25eb0>
  428870:	strb	w0, [sp, #159]
  428874:	str	wzr, [x20, #8]
  428878:	ldrb	w0, [x22, #1125]
  42887c:	cbz	w0, 428834 <nftw@plt+0x25cb4>
  428880:	sub	x28, x19, x23
  428884:	add	x4, sp, #0xa8
  428888:	add	x3, sp, #0xa0
  42888c:	mov	x2, x28
  428890:	mov	x1, x23
  428894:	mov	x0, x22
  428898:	bl	428260 <nftw@plt+0x256e0>
  42889c:	add	x21, x28, x21
  4288a0:	adrp	x23, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4288a4:	add	x23, x23, #0xe78
  4288a8:	add	x4, sp, #0xa8
  4288ac:	add	x3, sp, #0xa0
  4288b0:	mov	x2, #0x2                   	// #2
  4288b4:	mov	x1, x23
  4288b8:	mov	x0, x22
  4288bc:	bl	428260 <nftw@plt+0x256e0>
  4288c0:	cmp	x24, #0x10
  4288c4:	ccmp	x19, x23, #0x4, ls  // ls = plast
  4288c8:	b.ne	42899c <nftw@plt+0x25e1c>  // b.any
  4288cc:	ldrb	w0, [sp, #159]
  4288d0:	cmp	w0, #0x2f
  4288d4:	b.ne	4289dc <nftw@plt+0x25e5c>  // b.any
  4288d8:	ldr	x0, [x20, #16]
  4288dc:	cmp	x19, x0
  4288e0:	b.ne	4289dc <nftw@plt+0x25e5c>  // b.any
  4288e4:	ldr	w0, [x20, #24]
  4288e8:	cmp	w0, #0x20
  4288ec:	mov	w1, #0x5c                  	// #92
  4288f0:	ccmp	w0, w1, #0x4, ne  // ne = any
  4288f4:	b.ne	4289b0 <nftw@plt+0x25e30>  // b.any
  4288f8:	adrp	x23, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4288fc:	add	x23, x23, #0x370
  428900:	add	x4, sp, #0xa8
  428904:	add	x3, sp, #0xa0
  428908:	mov	x2, #0x1                   	// #1
  42890c:	mov	x1, x23
  428910:	mov	x0, x22
  428914:	bl	428260 <nftw@plt+0x256e0>
  428918:	add	x21, x21, #0x3
  42891c:	cmp	x19, x23
  428920:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  428924:	b.ls	4289c8 <nftw@plt+0x25e48>  // b.plast
  428928:	add	x20, x20, #0x10
  42892c:	b	4287fc <nftw@plt+0x25c7c>
  428930:	mov	w0, #0x5c                  	// #92
  428934:	add	x1, sp, #0xc8
  428938:	strb	w0, [x1, x24]
  42893c:	add	x24, x24, #0x1
  428940:	b	4287fc <nftw@plt+0x25c7c>
  428944:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x119fc>
  428948:	add	x23, x23, #0xb30
  42894c:	add	x4, sp, #0xa8
  428950:	add	x3, sp, #0xa0
  428954:	mov	x2, #0x1                   	// #1
  428958:	mov	x1, x23
  42895c:	mov	x0, x22
  428960:	bl	428260 <nftw@plt+0x256e0>
  428964:	add	x21, x21, #0x1
  428968:	cmp	x19, x23
  42896c:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  428970:	b.hi	428808 <nftw@plt+0x25c88>  // b.pmore
  428974:	mov	w0, #0x20                  	// #32
  428978:	add	x1, sp, #0xc8
  42897c:	strb	w0, [x1, x24]
  428980:	add	x24, x24, #0x1
  428984:	b	428808 <nftw@plt+0x25c88>
  428988:	mov	w0, #0xa                   	// #10
  42898c:	add	x1, sp, #0xc8
  428990:	strb	w0, [x1, x24]
  428994:	add	x24, x24, #0x1
  428998:	b	428834 <nftw@plt+0x25cb4>
  42899c:	mov	w0, #0x3f3f                	// #16191
  4289a0:	add	x1, sp, #0xc8
  4289a4:	strh	w0, [x1, x24]
  4289a8:	add	x24, x24, #0x2
  4289ac:	b	4288cc <nftw@plt+0x25d4c>
  4289b0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4289b4:	add	x2, x2, #0xe80
  4289b8:	mov	w1, #0x6e1                 	// #1761
  4289bc:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4289c0:	add	x0, x0, #0xb98
  4289c4:	bl	408d8c <nftw@plt+0x620c>
  4289c8:	mov	w0, #0x2f                  	// #47
  4289cc:	add	x1, sp, #0xc8
  4289d0:	strb	w0, [x1, x24]
  4289d4:	add	x24, x24, #0x1
  4289d8:	b	428928 <nftw@plt+0x25da8>
  4289dc:	add	x23, x19, #0x1
  4289e0:	add	x19, sp, #0x9f
  4289e4:	add	x4, sp, #0xa8
  4289e8:	add	x3, sp, #0xa0
  4289ec:	mov	x2, #0x1                   	// #1
  4289f0:	mov	x1, x19
  4289f4:	mov	x0, x22
  4289f8:	bl	428260 <nftw@plt+0x256e0>
  4289fc:	add	x21, x21, #0x3
  428a00:	cmp	x24, #0x10
  428a04:	ccmp	x19, x23, #0x4, ls  // ls = plast
  428a08:	b.ne	428a1c <nftw@plt+0x25e9c>  // b.any
  428a0c:	ldrb	w2, [sp, #159]
  428a10:	mov	x1, x20
  428a14:	mov	x25, x23
  428a18:	b	428a60 <nftw@plt+0x25ee0>
  428a1c:	add	x0, sp, #0xc8
  428a20:	ldrb	w1, [sp, #159]
  428a24:	strb	w1, [x0, x24]
  428a28:	add	x24, x24, #0x1
  428a2c:	b	428a0c <nftw@plt+0x25e8c>
  428a30:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428a34:	add	x2, x2, #0xe80
  428a38:	mov	w1, #0x6f0                 	// #1776
  428a3c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428a40:	add	x0, x0, #0xb98
  428a44:	bl	408d8c <nftw@plt+0x620c>
  428a48:	mov	x1, x20
  428a4c:	mov	x25, x19
  428a50:	ldrb	w0, [x25], #1
  428a54:	mov	w2, w0
  428a58:	cmp	x24, #0x10
  428a5c:	b.ls	428aa0 <nftw@plt+0x25f20>  // b.plast
  428a60:	ldr	w0, [sp, #120]
  428a64:	cbz	w0, 428ab0 <nftw@plt+0x25f30>
  428a68:	ldr	w0, [sp, #120]
  428a6c:	cmp	w0, #0x2
  428a70:	b.eq	428c48 <nftw@plt+0x260c8>  // b.none
  428a74:	cmp	w2, #0x29
  428a78:	b.eq	428780 <nftw@plt+0x25c00>  // b.none
  428a7c:	mov	x20, x1
  428a80:	mov	x19, x25
  428a84:	cmp	w2, #0xa
  428a88:	b.eq	428cec <nftw@plt+0x2616c>  // b.none
  428a8c:	ldr	x0, [x20]
  428a90:	cmp	x0, x19
  428a94:	b.cs	42879c <nftw@plt+0x25c1c>  // b.hs, b.nlast
  428a98:	add	x20, x20, #0x10
  428a9c:	b	428a8c <nftw@plt+0x25f0c>
  428aa0:	add	x3, sp, #0xc8
  428aa4:	strb	w0, [x3, x24]
  428aa8:	add	x24, x24, #0x1
  428aac:	b	428a60 <nftw@plt+0x25ee0>
  428ab0:	ldr	w0, [sp, #136]
  428ab4:	mov	w6, w0
  428ab8:	cmp	x24, w0, uxtw
  428abc:	b.ls	428764 <nftw@plt+0x25be4>  // b.plast
  428ac0:	mov	w4, w0
  428ac4:	mov	x3, #0x0                   	// #0
  428ac8:	add	x2, sp, #0xc8
  428acc:	add	x7, x2, x6
  428ad0:	add	x2, sp, #0xb0
  428ad4:	add	x6, x2, x6
  428ad8:	mov	x2, #0x1                   	// #1
  428adc:	add	w0, w0, #0x1
  428ae0:	sub	x8, x0, #0x1
  428ae4:	ldrb	w5, [x7, x3]
  428ae8:	strb	w5, [x6, x3]
  428aec:	cmp	w5, #0x3f
  428af0:	b.ls	428ba4 <nftw@plt+0x26024>  // b.plast
  428af4:	sub	w0, w5, #0x41
  428af8:	and	w0, w0, #0xff
  428afc:	cmp	w0, #0x3d
  428b00:	b.hi	428b18 <nftw@plt+0x25f98>  // b.pmore
  428b04:	lsl	x0, x2, x0
  428b08:	tst	x0, x27
  428b0c:	b.eq	428b18 <nftw@plt+0x25f98>  // b.none
  428b10:	cmp	w4, #0xf
  428b14:	b.ls	428bbc <nftw@plt+0x2603c>  // b.plast
  428b18:	cmp	w5, #0x28
  428b1c:	b.eq	428c20 <nftw@plt+0x260a0>  // b.none
  428b20:	ldr	x0, [x22]
  428b24:	ldr	x0, [x0, #8]
  428b28:	sub	x25, x25, x0
  428b2c:	add	w3, w25, #0x1
  428b30:	cmp	w4, #0x10
  428b34:	b.eq	428be0 <nftw@plt+0x26060>  // b.none
  428b38:	cmp	w5, #0xa
  428b3c:	b.eq	428c00 <nftw@plt+0x26080>  // b.none
  428b40:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428b44:	add	x4, x4, #0xef0
  428b48:	ldr	x0, [sp, #112]
  428b4c:	ldr	w2, [x0]
  428b50:	mov	w1, #0x3                   	// #3
  428b54:	mov	x0, x22
  428b58:	bl	41fb7c <nftw@plt+0x1cffc>
  428b5c:	ldr	x1, [x22]
  428b60:	ldr	x3, [sp, #128]
  428b64:	sub	x0, x3, #0x1
  428b68:	ldr	x2, [sp, #104]
  428b6c:	add	x0, x2, x0
  428b70:	str	x0, [x1]
  428b74:	mov	w4, #0x3d                  	// #61
  428b78:	sub	w3, w3, #0x1
  428b7c:	ldr	x1, [sp, #112]
  428b80:	mov	x0, x22
  428b84:	bl	428578 <nftw@plt+0x259f8>
  428b88:	ldr	x1, [sp, #160]
  428b8c:	cbz	x1, 4292fc <nftw@plt+0x2677c>
  428b90:	mov	x0, x22
  428b94:	bl	428148 <nftw@plt+0x255c8>
  428b98:	ldp	x25, x26, [sp, #64]
  428b9c:	ldp	x27, x28, [sp, #80]
  428ba0:	b	429128 <nftw@plt+0x265a8>
  428ba4:	cmp	w5, #0x20
  428ba8:	b.ls	428b18 <nftw@plt+0x25f98>  // b.plast
  428bac:	lsl	x0, x2, x5
  428bb0:	tst	x0, x26
  428bb4:	b.ne	428b10 <nftw@plt+0x25f90>  // b.any
  428bb8:	b	428b18 <nftw@plt+0x25f98>
  428bbc:	add	w4, w4, #0x1
  428bc0:	add	x3, x3, #0x1
  428bc4:	add	x0, x8, x3
  428bc8:	cmp	x24, x0
  428bcc:	b.hi	428ae4 <nftw@plt+0x25f64>  // b.pmore
  428bd0:	mov	x20, x1
  428bd4:	str	w4, [sp, #136]
  428bd8:	mov	x19, x25
  428bdc:	b	428a8c <nftw@plt+0x25f0c>
  428be0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428be4:	add	x4, x4, #0xe90
  428be8:	ldr	x0, [sp, #112]
  428bec:	ldr	w2, [x0]
  428bf0:	mov	w1, #0x3                   	// #3
  428bf4:	mov	x0, x22
  428bf8:	bl	41fb7c <nftw@plt+0x1cffc>
  428bfc:	b	428b5c <nftw@plt+0x25fdc>
  428c00:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428c04:	add	x4, x4, #0xec0
  428c08:	ldr	x0, [sp, #112]
  428c0c:	ldr	w2, [x0]
  428c10:	mov	w1, #0x3                   	// #3
  428c14:	mov	x0, x22
  428c18:	bl	41fb7c <nftw@plt+0x1cffc>
  428c1c:	b	428b5c <nftw@plt+0x25fdc>
  428c20:	add	x0, sp, #0xb0
  428c24:	mov	w2, #0x22                  	// #34
  428c28:	strb	w2, [x0, w4, uxtw]
  428c2c:	mov	x20, x1
  428c30:	str	w4, [sp, #136]
  428c34:	mov	x19, x25
  428c38:	mov	x24, #0x11                  	// #17
  428c3c:	mov	w0, #0x1                   	// #1
  428c40:	str	w0, [sp, #120]
  428c44:	b	428a8c <nftw@plt+0x25f0c>
  428c48:	ldr	w3, [sp, #136]
  428c4c:	ldr	w0, [sp, #124]
  428c50:	cmp	w3, w0
  428c54:	b.cc	428dc0 <nftw@plt+0x26240>  // b.lo, b.ul, b.last
  428c58:	mov	w5, w0
  428c5c:	cmp	x24, w0, uxtw
  428c60:	b.ls	429288 <nftw@plt+0x26708>  // b.plast
  428c64:	add	w3, w0, #0x1
  428c68:	mov	x0, x3
  428c6c:	sub	x5, x5, x3
  428c70:	add	x3, sp, #0xc8
  428c74:	add	x6, x3, x5
  428c78:	add	x3, sp, #0xb0
  428c7c:	add	x5, x3, x5
  428c80:	mov	w7, w0
  428c84:	sub	w3, w0, #0x1
  428c88:	str	w3, [sp, #124]
  428c8c:	ldrb	w4, [x6, x0]
  428c90:	ldrb	w3, [x5, x0]
  428c94:	cmp	w4, w3
  428c98:	b.ne	428cbc <nftw@plt+0x2613c>  // b.any
  428c9c:	ldr	w3, [sp, #136]
  428ca0:	cmp	w3, w0
  428ca4:	b.cc	428dc0 <nftw@plt+0x26240>  // b.lo, b.ul, b.last
  428ca8:	add	x3, x0, #0x1
  428cac:	cmp	x24, x0
  428cb0:	b.ls	42928c <nftw@plt+0x2670c>  // b.plast
  428cb4:	mov	x0, x3
  428cb8:	b	428c80 <nftw@plt+0x26100>
  428cbc:	ldr	w0, [sp, #136]
  428cc0:	ldr	w3, [sp, #124]
  428cc4:	cmp	w0, w3
  428cc8:	b.cc	428dc0 <nftw@plt+0x26240>  // b.lo, b.ul, b.last
  428ccc:	ldr	w3, [sp, #124]
  428cd0:	mov	w0, w3
  428cd4:	cmp	x24, w3, uxtw
  428cd8:	b.eq	428770 <nftw@plt+0x25bf0>  // b.none
  428cdc:	mov	x24, #0x11                  	// #17
  428ce0:	mov	w0, #0x1                   	// #1
  428ce4:	str	w0, [sp, #120]
  428ce8:	b	428a74 <nftw@plt+0x25ef4>
  428cec:	ldrb	w0, [x22, #16]
  428cf0:	cbnz	w0, 428d94 <nftw@plt+0x26214>
  428cf4:	ldrb	w0, [x22, #25]
  428cf8:	cbz	w0, 428d10 <nftw@plt+0x26190>
  428cfc:	ldr	x0, [x22]
  428d00:	ldr	x1, [x0, #16]
  428d04:	ldr	x0, [x0, #32]
  428d08:	cmp	x1, x0
  428d0c:	b.cs	428d94 <nftw@plt+0x26214>  // b.hs, b.nlast
  428d10:	sub	x19, x25, x23
  428d14:	add	x4, sp, #0xa8
  428d18:	add	x3, sp, #0xa0
  428d1c:	mov	x2, x19
  428d20:	mov	x1, x23
  428d24:	mov	x0, x22
  428d28:	bl	428260 <nftw@plt+0x256e0>
  428d2c:	add	x21, x21, x19
  428d30:	ldr	x0, [x22]
  428d34:	ldr	x1, [x0]
  428d38:	ldr	x0, [x0, #32]
  428d3c:	cmp	x1, x0
  428d40:	b.cc	428e74 <nftw@plt+0x262f4>  // b.lo, b.ul, b.last
  428d44:	ldr	x0, [x22]
  428d48:	mov	w1, #0x1                   	// #1
  428d4c:	strb	w1, [x0, #104]
  428d50:	ldr	x0, [x22]
  428d54:	sub	x25, x25, #0x1
  428d58:	str	x25, [x0]
  428d5c:	mov	w1, #0x0                   	// #0
  428d60:	mov	x0, x22
  428d64:	bl	426e70 <nftw@plt+0x242f0>
  428d68:	mov	x0, x22
  428d6c:	bl	427588 <nftw@plt+0x24a08>
  428d70:	and	w0, w0, #0xff
  428d74:	cbz	w0, 428ec0 <nftw@plt+0x26340>
  428d78:	ldr	x0, [x22]
  428d7c:	ldr	x23, [x0]
  428d80:	ldr	w20, [x0, #56]
  428d84:	ldr	x0, [x0, #48]
  428d88:	add	x20, x0, x20, lsl #4
  428d8c:	mov	x19, x23
  428d90:	b	428a8c <nftw@plt+0x25f0c>
  428d94:	sub	x25, x25, #0x1
  428d98:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428d9c:	add	x4, x4, #0xf20
  428da0:	mov	w3, #0x0                   	// #0
  428da4:	ldr	x0, [sp, #112]
  428da8:	ldr	w2, [x0]
  428dac:	mov	w1, #0x3                   	// #3
  428db0:	mov	x0, x22
  428db4:	bl	41fb7c <nftw@plt+0x1cffc>
  428db8:	mov	w0, #0x3d                  	// #61
  428dbc:	str	w0, [sp, #140]
  428dc0:	ldrb	w0, [x22, #1161]
  428dc4:	cbnz	w0, 428f1c <nftw@plt+0x2639c>
  428dc8:	ldr	x0, [x22]
  428dcc:	str	x25, [x0]
  428dd0:	ldr	x0, [sp, #160]
  428dd4:	cbz	x0, 428fe4 <nftw@plt+0x26464>
  428dd8:	sub	x25, x25, x23
  428ddc:	add	x1, x21, #0x1
  428de0:	add	x1, x1, x25
  428de4:	mov	x0, x22
  428de8:	bl	4283c0 <nftw@plt+0x25840>
  428dec:	mov	x19, x0
  428df0:	ldr	x0, [sp, #112]
  428df4:	ldrb	w1, [sp, #140]
  428df8:	strb	w1, [x0, #4]
  428dfc:	add	w21, w25, w21
  428e00:	str	w21, [x0, #8]
  428e04:	str	x19, [x0, #16]
  428e08:	ldr	x0, [sp, #160]
  428e0c:	str	x0, [sp, #168]
  428e10:	cbz	x0, 428e48 <nftw@plt+0x262c8>
  428e14:	ldr	x1, [x0, #8]
  428e18:	ldr	x2, [x0, #16]
  428e1c:	sub	x2, x2, x1
  428e20:	mov	x0, x19
  428e24:	bl	402490 <memcpy@plt>
  428e28:	ldr	x0, [sp, #168]
  428e2c:	ldr	x1, [x0, #16]
  428e30:	ldr	x2, [x0, #8]
  428e34:	sub	x1, x1, x2
  428e38:	add	x19, x19, x1
  428e3c:	ldr	x0, [x0]
  428e40:	str	x0, [sp, #168]
  428e44:	cbnz	x0, 428e14 <nftw@plt+0x26294>
  428e48:	ldr	x1, [sp, #160]
  428e4c:	mov	x0, x22
  428e50:	bl	428148 <nftw@plt+0x255c8>
  428e54:	mov	x2, x25
  428e58:	mov	x1, x23
  428e5c:	mov	x0, x19
  428e60:	bl	402490 <memcpy@plt>
  428e64:	strb	wzr, [x19, x25]
  428e68:	ldp	x25, x26, [sp, #64]
  428e6c:	ldp	x27, x28, [sp, #80]
  428e70:	b	429128 <nftw@plt+0x265a8>
  428e74:	ldr	x0, [x22, #40]
  428e78:	ldr	w1, [x0, #12]
  428e7c:	sub	w1, w1, #0x1
  428e80:	sbfiz	x2, x1, #1, #32
  428e84:	add	x1, x2, w1, sxtw
  428e88:	lsl	x1, x1, #3
  428e8c:	ldr	x4, [x0]
  428e90:	add	x3, x4, x1
  428e94:	ldr	w2, [x0, #60]
  428e98:	ldr	w1, [x4, x1]
  428e9c:	sub	w1, w2, w1
  428ea0:	ldrb	w2, [x3, #6]
  428ea4:	lsr	w1, w1, w2
  428ea8:	ldr	w3, [x3, #16]
  428eac:	add	w3, w3, #0x1
  428eb0:	mov	w2, #0x0                   	// #0
  428eb4:	add	w1, w1, w3
  428eb8:	bl	42b748 <nftw@plt+0x28bc8>
  428ebc:	b	428d44 <nftw@plt+0x261c4>
  428ec0:	ldr	x1, [sp, #112]
  428ec4:	ldr	w19, [x1]
  428ec8:	mov	w0, #0x16                  	// #22
  428ecc:	strb	w0, [x1, #4]
  428ed0:	ldr	x0, [x22, #40]
  428ed4:	ldr	w0, [x0, #60]
  428ed8:	str	w0, [x1]
  428edc:	mov	w0, #0x40                  	// #64
  428ee0:	strh	w0, [x1, #6]
  428ee4:	ldr	x1, [sp, #160]
  428ee8:	cbz	x1, 428ef4 <nftw@plt+0x26374>
  428eec:	mov	x0, x22
  428ef0:	bl	428148 <nftw@plt+0x255c8>
  428ef4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428ef8:	add	x4, x4, #0xf20
  428efc:	mov	w3, #0x0                   	// #0
  428f00:	mov	w2, w19
  428f04:	mov	w1, #0x3                   	// #3
  428f08:	mov	x0, x22
  428f0c:	bl	41fb7c <nftw@plt+0x1cffc>
  428f10:	ldp	x25, x26, [sp, #64]
  428f14:	ldp	x27, x28, [sp, #80]
  428f18:	b	429128 <nftw@plt+0x265a8>
  428f1c:	ldrb	w0, [x25]
  428f20:	cmp	w0, #0x5f
  428f24:	b.ne	428f34 <nftw@plt+0x263b4>  // b.any
  428f28:	ldrb	w0, [x25, #1]
  428f2c:	cmp	w0, #0x5f
  428f30:	b.ne	428f7c <nftw@plt+0x263fc>  // b.any
  428f34:	mov	x1, x25
  428f38:	mov	x0, x22
  428f3c:	bl	426544 <nftw@plt+0x239c4>
  428f40:	and	w0, w0, #0xff
  428f44:	cbz	w0, 428f7c <nftw@plt+0x263fc>
  428f48:	ldrb	w0, [x22, #1162]
  428f4c:	cbz	w0, 428dc8 <nftw@plt+0x26248>
  428f50:	ldrb	w0, [x22, #18]
  428f54:	cbnz	w0, 428dc8 <nftw@plt+0x26248>
  428f58:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  428f5c:	add	x4, x4, #0xf38
  428f60:	mov	w3, #0x0                   	// #0
  428f64:	ldr	x0, [sp, #112]
  428f68:	ldr	w2, [x0]
  428f6c:	mov	w1, #0x13                  	// #19
  428f70:	mov	x0, x22
  428f74:	bl	41fbf4 <nftw@plt+0x1d074>
  428f78:	b	428dc8 <nftw@plt+0x26248>
  428f7c:	ldrb	w1, [x25]
  428f80:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  428f84:	add	x0, x0, #0xe68
  428f88:	ldrh	w0, [x0, x1, lsl #1]
  428f8c:	tbz	w0, #9, 428dc8 <nftw@plt+0x26248>
  428f90:	ldr	w0, [sp, #140]
  428f94:	bl	4211ac <nftw@plt+0x1e62c>
  428f98:	str	w0, [sp, #140]
  428f9c:	add	x0, x25, #0x1
  428fa0:	ldrb	w2, [x25, #1]
  428fa4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  428fa8:	add	x1, x1, #0xe68
  428fac:	ldrh	w1, [x1, x2, lsl #1]
  428fb0:	mov	w2, #0x204                 	// #516
  428fb4:	tst	w2, w1
  428fb8:	b.eq	428fdc <nftw@plt+0x2645c>  // b.none
  428fbc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  428fc0:	add	x1, x1, #0xe68
  428fc4:	ldrb	w3, [x0, #1]!
  428fc8:	ldrh	w3, [x1, x3, lsl #1]
  428fcc:	tst	w2, w3
  428fd0:	b.ne	428fc4 <nftw@plt+0x26444>  // b.any
  428fd4:	mov	x25, x0
  428fd8:	b	428dc8 <nftw@plt+0x26248>
  428fdc:	mov	x25, x0
  428fe0:	b	428dc8 <nftw@plt+0x26248>
  428fe4:	ldr	w4, [sp, #140]
  428fe8:	sub	w3, w25, w23
  428fec:	mov	x2, x23
  428ff0:	ldr	x1, [sp, #112]
  428ff4:	mov	x0, x22
  428ff8:	bl	428578 <nftw@plt+0x259f8>
  428ffc:	ldp	x25, x26, [sp, #64]
  429000:	ldp	x27, x28, [sp, #80]
  429004:	b	429128 <nftw@plt+0x265a8>
  429008:	mov	w23, #0x3f                  	// #63
  42900c:	cmp	w0, #0x4c
  429010:	b.eq	428634 <nftw@plt+0x25ab4>  // b.none
  429014:	mov	w23, #0x41                  	// #65
  429018:	cmp	w0, #0x55
  42901c:	b.eq	428634 <nftw@plt+0x25ab4>  // b.none
  429020:	mov	w23, #0x3e                  	// #62
  429024:	cmp	w0, #0x75
  429028:	b.ne	428634 <nftw@plt+0x25ab4>  // b.any
  42902c:	b	4286ac <nftw@plt+0x25b2c>
  429030:	mov	w23, #0x39                  	// #57
  429034:	cmp	w0, #0x4c
  429038:	b.eq	428634 <nftw@plt+0x25ab4>  // b.none
  42903c:	mov	w23, #0x3b                  	// #59
  429040:	cmp	w0, #0x55
  429044:	b.eq	428634 <nftw@plt+0x25ab4>  // b.none
  429048:	mov	w23, #0x38                  	// #56
  42904c:	cmp	w0, #0x75
  429050:	b.ne	428634 <nftw@plt+0x25ab4>  // b.any
  429054:	ldr	x0, [sp, #104]
  429058:	ldrb	w0, [x0, #1]
  42905c:	cmp	w0, w23
  429060:	mov	w23, #0x3c                  	// #60
  429064:	mov	w0, #0x3a                  	// #58
  429068:	csel	w23, w23, w0, eq  // eq = none
  42906c:	b	428634 <nftw@plt+0x25ab4>
  429070:	ldrb	w1, [x22, #19]
  429074:	cbnz	w1, 429088 <nftw@plt+0x26508>
  429078:	ldrb	w1, [x19, #1]
  42907c:	add	x19, x19, #0x2
  429080:	cmp	w1, #0xa
  429084:	csel	x20, x19, x20, ne  // ne = any
  429088:	mov	x19, x20
  42908c:	mov	x20, x19
  429090:	ldrb	w1, [x20], #1
  429094:	cmp	w1, #0x5c
  429098:	b.eq	429070 <nftw@plt+0x264f0>  // b.none
  42909c:	cmp	w1, w21
  4290a0:	b.eq	4290ec <nftw@plt+0x2656c>  // b.none
  4290a4:	cmp	w1, #0xa
  4290a8:	b.eq	4290b8 <nftw@plt+0x26538>  // b.none
  4290ac:	cmp	w1, #0x0
  4290b0:	csel	w2, w2, w0, ne  // ne = any
  4290b4:	b	429088 <nftw@plt+0x26508>
  4290b8:	cmp	w21, #0x3e
  4290bc:	b.eq	4290dc <nftw@plt+0x2655c>  // b.none
  4290c0:	cbnz	w2, 4292d4 <nftw@plt+0x26754>
  4290c4:	ldr	w0, [x22, #1116]
  4290c8:	cmp	w0, #0x15
  4290cc:	b.ne	429154 <nftw@plt+0x265d4>  // b.any
  4290d0:	mov	x20, x19
  4290d4:	mov	w23, #0x3d                  	// #61
  4290d8:	b	4290f8 <nftw@plt+0x26578>
  4290dc:	mov	w0, #0x3                   	// #3
  4290e0:	ldr	x1, [sp, #112]
  4290e4:	strb	w0, [x1, #4]
  4290e8:	b	429128 <nftw@plt+0x265a8>
  4290ec:	cbnz	w2, 42913c <nftw@plt+0x265bc>
  4290f0:	cmp	w23, #0x3d
  4290f4:	b.eq	42914c <nftw@plt+0x265cc>  // b.none
  4290f8:	ldrb	w0, [x22, #1161]
  4290fc:	cbnz	w0, 429178 <nftw@plt+0x265f8>
  429100:	ldrb	w0, [x22, #1199]
  429104:	cbnz	w0, 429240 <nftw@plt+0x266c0>
  429108:	ldr	x0, [x22]
  42910c:	str	x20, [x0]
  429110:	mov	w4, w23
  429114:	ldr	x2, [sp, #104]
  429118:	sub	w3, w20, w2
  42911c:	ldr	x1, [sp, #112]
  429120:	mov	x0, x22
  429124:	bl	428578 <nftw@plt+0x259f8>
  429128:	ldp	x19, x20, [sp, #16]
  42912c:	ldp	x21, x22, [sp, #32]
  429130:	ldp	x23, x24, [sp, #48]
  429134:	ldp	x29, x30, [sp], #224
  429138:	ret
  42913c:	ldrb	w0, [x22, #18]
  429140:	mov	x19, x20
  429144:	cbnz	w0, 4290f0 <nftw@plt+0x26570>
  429148:	b	4292e0 <nftw@plt+0x26760>
  42914c:	mov	x19, x20
  429150:	b	4290c4 <nftw@plt+0x26544>
  429154:	mov	w3, w21
  429158:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42915c:	add	x2, x2, #0xfb8
  429160:	mov	w1, #0x2                   	// #2
  429164:	mov	x0, x22
  429168:	bl	41f990 <nftw@plt+0x1ce10>
  42916c:	mov	x20, x19
  429170:	mov	w23, #0x3d                  	// #61
  429174:	b	4290f8 <nftw@plt+0x26578>
  429178:	ldrb	w0, [x20]
  42917c:	cmp	w0, #0x5f
  429180:	b.ne	429190 <nftw@plt+0x26610>  // b.any
  429184:	ldrb	w0, [x20, #1]
  429188:	cmp	w0, #0x5f
  42918c:	b.ne	4291d8 <nftw@plt+0x26658>  // b.any
  429190:	mov	x1, x20
  429194:	mov	x0, x22
  429198:	bl	426544 <nftw@plt+0x239c4>
  42919c:	and	w0, w0, #0xff
  4291a0:	cbz	w0, 4291d8 <nftw@plt+0x26658>
  4291a4:	ldrb	w0, [x22, #1162]
  4291a8:	cbz	w0, 429108 <nftw@plt+0x26588>
  4291ac:	ldrb	w0, [x22, #18]
  4291b0:	cbnz	w0, 429108 <nftw@plt+0x26588>
  4291b4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4291b8:	add	x4, x4, #0xf38
  4291bc:	mov	w3, #0x0                   	// #0
  4291c0:	ldr	x0, [sp, #112]
  4291c4:	ldr	w2, [x0]
  4291c8:	mov	w1, #0x13                  	// #19
  4291cc:	mov	x0, x22
  4291d0:	bl	41fbf4 <nftw@plt+0x1d074>
  4291d4:	b	429108 <nftw@plt+0x26588>
  4291d8:	ldrb	w1, [x20]
  4291dc:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4291e0:	add	x0, x0, #0xe68
  4291e4:	ldrh	w0, [x0, x1, lsl #1]
  4291e8:	tbz	w0, #9, 429108 <nftw@plt+0x26588>
  4291ec:	mov	w0, w23
  4291f0:	bl	42124c <nftw@plt+0x1e6cc>
  4291f4:	bl	4211ac <nftw@plt+0x1e62c>
  4291f8:	mov	w23, w0
  4291fc:	add	x0, x20, #0x1
  429200:	ldrb	w2, [x20, #1]
  429204:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  429208:	add	x1, x1, #0xe68
  42920c:	ldrh	w1, [x1, x2, lsl #1]
  429210:	mov	w2, #0x204                 	// #516
  429214:	tst	w2, w1
  429218:	b.eq	429280 <nftw@plt+0x26700>  // b.none
  42921c:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  429220:	add	x2, x2, #0xe68
  429224:	mov	w3, #0x204                 	// #516
  429228:	ldrb	w1, [x0, #1]!
  42922c:	ldrh	w1, [x2, x1, lsl #1]
  429230:	tst	w3, w1
  429234:	b.ne	429228 <nftw@plt+0x266a8>  // b.any
  429238:	mov	x20, x0
  42923c:	b	429108 <nftw@plt+0x26588>
  429240:	mov	x1, x20
  429244:	mov	x0, x22
  429248:	bl	426544 <nftw@plt+0x239c4>
  42924c:	and	w0, w0, #0xff
  429250:	cbz	w0, 429108 <nftw@plt+0x26588>
  429254:	ldrb	w0, [x22, #18]
  429258:	cbnz	w0, 429108 <nftw@plt+0x26588>
  42925c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  429260:	add	x4, x4, #0xfe0
  429264:	mov	w3, #0x0                   	// #0
  429268:	ldr	x0, [sp, #112]
  42926c:	ldr	w2, [x0]
  429270:	mov	w1, #0x17                  	// #23
  429274:	mov	x0, x22
  429278:	bl	41fbf4 <nftw@plt+0x1d074>
  42927c:	b	429108 <nftw@plt+0x26588>
  429280:	mov	x20, x0
  429284:	b	429108 <nftw@plt+0x26588>
  429288:	ldr	w7, [sp, #124]
  42928c:	str	w7, [sp, #124]
  429290:	b	428ccc <nftw@plt+0x2614c>
  429294:	stp	x25, x26, [sp, #64]
  429298:	stp	x27, x28, [sp, #80]
  42929c:	str	xzr, [sp, #160]
  4292a0:	str	xzr, [sp, #168]
  4292a4:	ldr	x0, [x22]
  4292a8:	ldr	w20, [x0, #56]
  4292ac:	ldr	x0, [x0, #48]
  4292b0:	add	x20, x0, x20, lsl #4
  4292b4:	ldr	x0, [sp, #104]
  4292b8:	ldrb	w0, [x0, #1]
  4292bc:	cmp	w0, #0x38
  4292c0:	mov	w1, #0x42                  	// #66
  4292c4:	mov	w0, #0x40                  	// #64
  4292c8:	csel	w0, w1, w0, eq  // eq = none
  4292cc:	str	w0, [sp, #140]
  4292d0:	b	428708 <nftw@plt+0x25b88>
  4292d4:	ldrb	w0, [x22, #18]
  4292d8:	cbnz	w0, 4290c4 <nftw@plt+0x26544>
  4292dc:	mov	w23, #0x3d                  	// #61
  4292e0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  4292e4:	add	x2, x2, #0xf90
  4292e8:	mov	w1, #0x0                   	// #0
  4292ec:	mov	x0, x22
  4292f0:	bl	41f990 <nftw@plt+0x1ce10>
  4292f4:	mov	x20, x19
  4292f8:	b	4290f0 <nftw@plt+0x26570>
  4292fc:	ldp	x25, x26, [sp, #64]
  429300:	ldp	x27, x28, [sp, #80]
  429304:	b	429128 <nftw@plt+0x265a8>
  429308:	stp	x29, x30, [sp, #-144]!
  42930c:	mov	x29, sp
  429310:	stp	x19, x20, [sp, #16]
  429314:	stp	x21, x22, [sp, #32]
  429318:	stp	x23, x24, [sp, #48]
  42931c:	stp	x25, x26, [sp, #64]
  429320:	mov	x19, x0
  429324:	ldr	x20, [x0, #448]
  429328:	add	x0, x20, #0x18
  42932c:	str	x0, [x19, #448]
  429330:	mov	w25, #0x0                   	// #0
  429334:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429338:	add	x23, x23, #0x28
  42933c:	strh	wzr, [x20, #6]
  429340:	ldr	x21, [x19]
  429344:	ldrb	w0, [x21, #104]
  429348:	cbz	w0, 4293a8 <nftw@plt+0x26828>
  42934c:	ldrb	w0, [x19, #32]
  429350:	cbnz	w0, 42941c <nftw@plt+0x2689c>
  429354:	mov	x0, x19
  429358:	bl	427588 <nftw@plt+0x24a08>
  42935c:	and	w0, w0, #0xff
  429360:	cbz	w0, 429440 <nftw@plt+0x268c0>
  429364:	ldr	x0, [x19]
  429368:	cmp	x0, x21
  42936c:	csel	w25, w25, wzr, eq  // eq = none
  429370:	ldr	w0, [x19, #500]
  429374:	cbnz	w0, 42938c <nftw@plt+0x2680c>
  429378:	add	x0, x19, #0x1c8
  42937c:	str	x0, [x19, #488]
  429380:	ldr	x20, [x19, #472]
  429384:	add	x0, x20, #0x18
  429388:	str	x0, [x19, #448]
  42938c:	mov	w1, #0x40                  	// #64
  429390:	strh	w1, [x20, #6]
  429394:	ldrb	w0, [x19, #25]
  429398:	cmp	w0, #0x2
  42939c:	mov	w0, #0x41                  	// #65
  4293a0:	csel	w0, w0, w1, eq  // eq = none
  4293a4:	strh	w0, [x20, #6]
  4293a8:	ldr	x21, [x19]
  4293ac:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4293b0:	add	x22, x22, #0x560
  4293b4:	ldr	x0, [x19, #40]
  4293b8:	ldr	w0, [x0, #60]
  4293bc:	str	w0, [x20]
  4293c0:	ldr	w0, [x21, #56]
  4293c4:	ldr	x2, [x21, #48]
  4293c8:	lsl	x0, x0, #4
  4293cc:	ldr	x1, [x21]
  4293d0:	ldr	x0, [x2, x0]
  4293d4:	cmp	x1, x0
  4293d8:	b.cc	4293e4 <nftw@plt+0x26864>  // b.lo, b.ul, b.last
  4293dc:	ldr	x0, [x19, #8]
  4293e0:	cbz	x0, 429468 <nftw@plt+0x268e8>
  4293e4:	ldr	x0, [x21]
  4293e8:	add	x1, x0, #0x1
  4293ec:	str	x1, [x21]
  4293f0:	ldrb	w26, [x0]
  4293f4:	mov	w24, w26
  4293f8:	ldr	w0, [x19, #1408]
  4293fc:	cbz	w0, 429484 <nftw@plt+0x26904>
  429400:	str	w0, [x20]
  429404:	cmp	w26, #0x7e
  429408:	b.hi	42aa14 <nftw@plt+0x27e94>  // b.pmore
  42940c:	ldrh	w0, [x22, w26, uxtw #1]
  429410:	adr	x1, 42941c <nftw@plt+0x2689c>
  429414:	add	x0, x1, w0, sxth #2
  429418:	br	x0
  42941c:	mov	w0, #0x52                  	// #82
  429420:	strb	w0, [x20, #4]
  429424:	strb	wzr, [x19, #32]
  429428:	ldrb	w0, [x19, #33]
  42942c:	cbnz	w0, 42a944 <nftw@plt+0x27dc4>
  429430:	ldrb	w0, [x19, #24]
  429434:	sub	w0, w0, #0x1
  429438:	strb	w0, [x19, #24]
  42943c:	b	42a944 <nftw@plt+0x27dc4>
  429440:	mov	w0, #0x16                  	// #22
  429444:	strb	w0, [x20, #4]
  429448:	ldrb	w0, [x19, #16]
  42944c:	cbnz	w0, 42a944 <nftw@plt+0x27dc4>
  429450:	ldr	x0, [x19, #40]
  429454:	ldr	w0, [x0, #60]
  429458:	str	w0, [x20]
  42945c:	mov	w0, #0x40                  	// #64
  429460:	strh	w0, [x20, #6]
  429464:	b	42a944 <nftw@plt+0x27dc4>
  429468:	mov	w1, #0x0                   	// #0
  42946c:	mov	x0, x19
  429470:	bl	426e70 <nftw@plt+0x242f0>
  429474:	ldr	x0, [x19, #40]
  429478:	ldr	w0, [x0, #60]
  42947c:	str	w0, [x20]
  429480:	b	4293e4 <nftw@plt+0x26864>
  429484:	ldr	x0, [x21, #8]
  429488:	sub	w1, w1, w0
  42948c:	ldr	x0, [x19, #40]
  429490:	bl	42b974 <nftw@plt+0x28df4>
  429494:	str	w0, [x20]
  429498:	b	429404 <nftw@plt+0x26884>
  42949c:	stp	x27, x28, [sp, #80]
  4294a0:	ldrh	w0, [x20, #6]
  4294a4:	orr	w0, w0, #0x1
  4294a8:	strh	w0, [x20, #6]
  4294ac:	ldr	x26, [x19]
  4294b0:	mov	w28, #0x0                   	// #0
  4294b4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4294b8:	add	x0, x0, #0x18
  4294bc:	str	x0, [sp, #104]
  4294c0:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4294c4:	add	x27, x27, #0xe68
  4294c8:	b	4294ec <nftw@plt+0x2696c>
  4294cc:	mov	w28, #0x1                   	// #1
  4294d0:	ldr	x0, [x26]
  4294d4:	add	x1, x0, #0x1
  4294d8:	str	x1, [x26]
  4294dc:	ldrb	w24, [x0]
  4294e0:	mov	w0, w24
  4294e4:	ldrh	w0, [x27, x0, lsl #1]
  4294e8:	tbz	w0, #11, 429544 <nftw@plt+0x269c4>
  4294ec:	cmp	w24, #0x20
  4294f0:	ccmp	w24, #0x9, #0x4, ne  // ne = any
  4294f4:	b.eq	4294d0 <nftw@plt+0x26950>  // b.none
  4294f8:	cbz	w24, 4294cc <nftw@plt+0x2694c>
  4294fc:	ldrb	w0, [x19, #16]
  429500:	cbz	w0, 4294d0 <nftw@plt+0x26950>
  429504:	ldrb	w0, [x19, #1154]
  429508:	cbz	w0, 4294d0 <nftw@plt+0x26950>
  42950c:	ldr	x0, [x19, #40]
  429510:	ldr	x3, [x26]
  429514:	ldr	x1, [x26, #8]
  429518:	cmp	w24, #0xc
  42951c:	ldr	x2, [sp, #104]
  429520:	csel	x5, x2, x23, eq  // eq = none
  429524:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429528:	add	x4, x4, #0x58
  42952c:	sub	w3, w3, w1
  429530:	ldr	w2, [x0, #60]
  429534:	mov	w1, #0x2                   	// #2
  429538:	mov	x0, x19
  42953c:	bl	41fb7c <nftw@plt+0x1cffc>
  429540:	b	4294d0 <nftw@plt+0x26950>
  429544:	cbnz	w28, 42955c <nftw@plt+0x269dc>
  429548:	ldr	x0, [x26]
  42954c:	sub	x0, x0, #0x1
  429550:	str	x0, [x26]
  429554:	ldp	x27, x28, [sp, #80]
  429558:	b	4293c0 <nftw@plt+0x26840>
  42955c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429560:	add	x2, x2, #0x78
  429564:	mov	w1, #0x0                   	// #0
  429568:	mov	x0, x19
  42956c:	bl	41f990 <nftw@plt+0x1ce10>
  429570:	b	429548 <nftw@plt+0x269c8>
  429574:	ldr	x1, [x21]
  429578:	ldr	x0, [x21, #32]
  42957c:	cmp	x1, x0
  429580:	b.cc	429590 <nftw@plt+0x26a10>  // b.lo, b.ul, b.last
  429584:	mov	w0, #0x1                   	// #1
  429588:	strb	w0, [x21, #104]
  42958c:	b	42933c <nftw@plt+0x267bc>
  429590:	ldr	x0, [x19, #40]
  429594:	ldr	w1, [x0, #12]
  429598:	sub	w1, w1, #0x1
  42959c:	sbfiz	x2, x1, #1, #32
  4295a0:	add	x1, x2, w1, sxtw
  4295a4:	lsl	x1, x1, #3
  4295a8:	ldr	x4, [x0]
  4295ac:	add	x3, x4, x1
  4295b0:	ldr	w2, [x0, #60]
  4295b4:	ldr	w1, [x4, x1]
  4295b8:	sub	w1, w2, w1
  4295bc:	ldrb	w2, [x3, #6]
  4295c0:	lsr	w1, w1, w2
  4295c4:	ldr	w3, [x3, #16]
  4295c8:	add	w3, w3, #0x1
  4295cc:	mov	w2, #0x0                   	// #0
  4295d0:	add	w1, w1, w3
  4295d4:	bl	42b748 <nftw@plt+0x28bc8>
  4295d8:	b	429584 <nftw@plt+0x26a04>
  4295dc:	str	wzr, [sp, #128]
  4295e0:	strb	wzr, [sp, #132]
  4295e4:	str	wzr, [sp, #136]
  4295e8:	mov	w0, #0x37                  	// #55
  4295ec:	strb	w0, [x20, #4]
  4295f0:	add	x2, sp, #0x80
  4295f4:	add	x1, x20, #0x8
  4295f8:	mov	x0, x19
  4295fc:	bl	428424 <nftw@plt+0x258a4>
  429600:	add	x2, sp, #0x80
  429604:	mov	x1, x20
  429608:	mov	x0, x19
  42960c:	bl	427830 <nftw@plt+0x24cb0>
  429610:	b	42aa30 <nftw@plt+0x27eb0>
  429614:	cmp	w24, #0x4c
  429618:	b.eq	429634 <nftw@plt+0x26ab4>  // b.none
  42961c:	ldrb	w0, [x19, #1130]
  429620:	cbnz	w0, 429634 <nftw@plt+0x26ab4>
  429624:	cmp	w24, #0x52
  429628:	b.eq	429674 <nftw@plt+0x26af4>  // b.none
  42962c:	ldrb	w0, [x19, #1128]
  429630:	cbz	w0, 429674 <nftw@plt+0x26af4>
  429634:	ldr	x2, [x21]
  429638:	ldrb	w0, [x2]
  42963c:	cmp	w24, #0x52
  429640:	cset	w1, ne  // ne = any
  429644:	cmp	w0, #0x27
  429648:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  42964c:	b.ne	429704 <nftw@plt+0x26b84>  // b.any
  429650:	cmp	w0, #0x22
  429654:	b.eq	429704 <nftw@plt+0x26b84>  // b.none
  429658:	cmp	w0, #0x52
  42965c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  429660:	b.ne	4296f0 <nftw@plt+0x26b70>  // b.any
  429664:	cmp	w24, #0x75
  429668:	mov	w1, #0x38                  	// #56
  42966c:	ccmp	w0, w1, #0x0, eq  // eq = none
  429670:	b.eq	429718 <nftw@plt+0x26b98>  // b.none
  429674:	mov	w0, #0x35                  	// #53
  429678:	strb	w0, [x20, #4]
  42967c:	str	wzr, [sp, #128]
  429680:	strb	wzr, [sp, #132]
  429684:	str	wzr, [sp, #136]
  429688:	ldr	x1, [x21]
  42968c:	add	x4, x20, #0x10
  429690:	add	x3, sp, #0x80
  429694:	mov	w2, #0x0                   	// #0
  429698:	sub	x1, x1, #0x1
  42969c:	mov	x0, x19
  4296a0:	bl	426738 <nftw@plt+0x23bb8>
  4296a4:	str	x0, [x20, #8]
  4296a8:	add	x2, sp, #0x80
  4296ac:	mov	x1, x20
  4296b0:	mov	x0, x19
  4296b4:	bl	427830 <nftw@plt+0x24cb0>
  4296b8:	ldr	x0, [x20, #8]
  4296bc:	ldrh	w1, [x0, #18]
  4296c0:	tbz	w1, #2, 4296dc <nftw@plt+0x26b5c>
  4296c4:	ldrh	w1, [x20, #6]
  4296c8:	orr	w1, w1, #0x10
  4296cc:	strh	w1, [x20, #6]
  4296d0:	ldrb	w0, [x0, #16]
  4296d4:	ubfx	x0, x0, #1, #7
  4296d8:	strb	w0, [x20, #4]
  4296dc:	cbz	w25, 42aa30 <nftw@plt+0x27eb0>
  4296e0:	ldrh	w0, [x20, #6]
  4296e4:	orr	w0, w0, #0x20
  4296e8:	strh	w0, [x20, #6]
  4296ec:	b	42aa30 <nftw@plt+0x27eb0>
  4296f0:	ldrb	w0, [x2, #1]
  4296f4:	cmp	w0, #0x22
  4296f8:	b.ne	429674 <nftw@plt+0x26af4>  // b.any
  4296fc:	ldrb	w0, [x19, #1130]
  429700:	cbz	w0, 429674 <nftw@plt+0x26af4>
  429704:	sub	x2, x2, #0x1
  429708:	mov	x1, x20
  42970c:	mov	x0, x19
  429710:	bl	4285d8 <nftw@plt+0x25a58>
  429714:	b	42aa30 <nftw@plt+0x27eb0>
  429718:	ldrb	w0, [x2, #1]
  42971c:	cmp	w0, #0x22
  429720:	b.eq	429704 <nftw@plt+0x26b84>  // b.none
  429724:	cmp	w0, #0x27
  429728:	b.eq	42974c <nftw@plt+0x26bcc>  // b.none
  42972c:	cmp	w0, #0x52
  429730:	b.ne	429674 <nftw@plt+0x26af4>  // b.any
  429734:	ldrb	w0, [x2, #2]
  429738:	cmp	w0, #0x22
  42973c:	b.ne	429674 <nftw@plt+0x26af4>  // b.any
  429740:	ldrb	w0, [x19, #1130]
  429744:	cbz	w0, 429674 <nftw@plt+0x26af4>
  429748:	b	429704 <nftw@plt+0x26b84>
  42974c:	ldrb	w0, [x19, #1129]
  429750:	cbnz	w0, 429704 <nftw@plt+0x26b84>
  429754:	b	429674 <nftw@plt+0x26af4>
  429758:	ldr	x2, [x21]
  42975c:	sub	x2, x2, #0x1
  429760:	mov	x1, x20
  429764:	mov	x0, x19
  429768:	bl	4285d8 <nftw@plt+0x25a58>
  42976c:	b	42aa30 <nftw@plt+0x27eb0>
  429770:	stp	x27, x28, [sp, #80]
  429774:	ldr	x27, [x21]
  429778:	ldrb	w28, [x27]
  42977c:	cmp	w28, #0x2a
  429780:	b.eq	4297d4 <nftw@plt+0x26c54>  // b.none
  429784:	cmp	w28, #0x2f
  429788:	b.ne	4299ec <nftw@plt+0x26e6c>  // b.any
  42978c:	ldrb	w0, [x19, #1160]
  429790:	cbnz	w0, 429a0c <nftw@plt+0x26e8c>
  429794:	ldr	x0, [x19]
  429798:	cbz	x0, 4297a4 <nftw@plt+0x26c24>
  42979c:	ldrb	w0, [x0, #106]
  4297a0:	cbnz	w0, 429888 <nftw@plt+0x26d08>
  4297a4:	ldr	w0, [x19, #1116]
  4297a8:	cbnz	w0, 429840 <nftw@plt+0x26cc0>
  4297ac:	ldrb	w1, [x19, #1154]
  4297b0:	cbz	w1, 4297bc <nftw@plt+0x26c3c>
  4297b4:	ldrb	w1, [x21, #105]
  4297b8:	tbz	w1, #0, 4297fc <nftw@plt+0x26c7c>
  4297bc:	ldrsb	w1, [x19, #1198]
  4297c0:	cmp	w1, #0x0
  4297c4:	b.le	429888 <nftw@plt+0x26d08>
  4297c8:	ldrb	w1, [x19, #1120]
  4297cc:	cbnz	w1, 429888 <nftw@plt+0x26d08>
  4297d0:	b	429854 <nftw@plt+0x26cd4>
  4297d4:	mov	x0, x19
  4297d8:	bl	4270cc <nftw@plt+0x2454c>
  4297dc:	and	w0, w0, #0xff
  4297e0:	cbz	w0, 4298dc <nftw@plt+0x26d5c>
  4297e4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4297e8:	add	x2, x2, #0x98
  4297ec:	mov	w1, #0x3                   	// #3
  4297f0:	mov	x0, x19
  4297f4:	bl	41f990 <nftw@plt+0x1ce10>
  4297f8:	b	4298dc <nftw@plt+0x26d5c>
  4297fc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429800:	add	x2, x2, #0xb0
  429804:	mov	w1, #0x2                   	// #2
  429808:	mov	x0, x19
  42980c:	bl	41f990 <nftw@plt+0x1ce10>
  429810:	and	w0, w0, #0xff
  429814:	cbnz	w0, 429828 <nftw@plt+0x26ca8>
  429818:	ldrb	w0, [x21, #105]
  42981c:	orr	w0, w0, #0x1
  429820:	strb	w0, [x21, #105]
  429824:	b	429888 <nftw@plt+0x26d08>
  429828:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42982c:	add	x2, x2, #0xe0
  429830:	mov	w1, #0x5                   	// #5
  429834:	mov	x0, x19
  429838:	bl	41f990 <nftw@plt+0x1ce10>
  42983c:	b	429818 <nftw@plt+0x26c98>
  429840:	ldrsb	w1, [x19, #1198]
  429844:	cmp	w1, #0x0
  429848:	b.le	42985c <nftw@plt+0x26cdc>
  42984c:	ldrb	w1, [x19, #1120]
  429850:	cbnz	w1, 42985c <nftw@plt+0x26cdc>
  429854:	ldrb	w1, [x21, #105]
  429858:	tbz	w1, #0, 42993c <nftw@plt+0x26dbc>
  42985c:	sub	w0, w0, #0x5
  429860:	cmp	w0, #0x1
  429864:	b.hi	429888 <nftw@plt+0x26d08>  // b.pmore
  429868:	ldrb	w0, [x27, #1]
  42986c:	cmp	w0, #0x2a
  429870:	b.eq	429980 <nftw@plt+0x26e00>  // b.none
  429874:	ldr	w0, [x19, #16]
  429878:	tst	w0, #0xff00ff
  42987c:	b.ne	429980 <nftw@plt+0x26e00>  // b.any
  429880:	ldrb	w0, [x21, #105]
  429884:	tbz	w0, #0, 429990 <nftw@plt+0x26e10>
  429888:	ldr	x2, [x19]
  42988c:	ldr	x0, [x19, #40]
  429890:	ldr	w24, [x0, #60]
  429894:	ldr	x0, [x2]
  429898:	ldrb	w1, [x0]
  42989c:	cmp	w1, #0xa
  4298a0:	b.eq	4298b8 <nftw@plt+0x26d38>  // b.none
  4298a4:	add	x0, x0, #0x1
  4298a8:	str	x0, [x2]
  4298ac:	ldrb	w1, [x0], #1
  4298b0:	cmp	w1, #0xa
  4298b4:	b.ne	4298a8 <nftw@plt+0x26d28>  // b.any
  4298b8:	mov	w1, #0x1                   	// #1
  4298bc:	mov	x0, x19
  4298c0:	bl	426e70 <nftw@plt+0x242f0>
  4298c4:	ldr	x0, [x19, #40]
  4298c8:	ldr	w0, [x0, #60]
  4298cc:	cmp	w24, w0
  4298d0:	b.eq	4298dc <nftw@plt+0x26d5c>  // b.none
  4298d4:	ldrb	w0, [x19, #1133]
  4298d8:	cbnz	w0, 4299d4 <nftw@plt+0x26e54>
  4298dc:	add	x24, x27, #0x1
  4298e0:	ldrb	w0, [x19, #1144]
  4298e4:	cmp	w0, #0x2
  4298e8:	b.eq	429a1c <nftw@plt+0x26e9c>  // b.none
  4298ec:	b.hi	42aad4 <nftw@plt+0x27f54>  // b.pmore
  4298f0:	cmp	w0, #0x1
  4298f4:	csinc	w25, w25, wzr, ne  // ne = any
  4298f8:	ldr	x4, [x19, #1072]
  4298fc:	cbz	x4, 429920 <nftw@plt+0x26da0>
  429900:	ldr	x0, [x19]
  429904:	ldr	x3, [x0]
  429908:	sub	x3, x3, x27
  42990c:	add	x3, x3, #0x1
  429910:	sub	x2, x27, #0x1
  429914:	ldr	w1, [x20]
  429918:	mov	x0, x19
  42991c:	blr	x4
  429920:	ldrb	w0, [x19, #21]
  429924:	cbnz	w0, 42a0d0 <nftw@plt+0x27550>
  429928:	ldrh	w0, [x20, #6]
  42992c:	orr	w0, w0, #0x1
  429930:	strh	w0, [x20, #6]
  429934:	ldp	x27, x28, [sp, #80]
  429938:	b	4293b4 <nftw@plt+0x26834>
  42993c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429940:	add	x2, x2, #0x118
  429944:	mov	w1, #0x0                   	// #0
  429948:	mov	x0, x19
  42994c:	bl	41f990 <nftw@plt+0x1ce10>
  429950:	and	w0, w0, #0xff
  429954:	cbnz	w0, 429968 <nftw@plt+0x26de8>
  429958:	ldrb	w0, [x21, #105]
  42995c:	orr	w0, w0, #0x1
  429960:	strb	w0, [x21, #105]
  429964:	b	429888 <nftw@plt+0x26d08>
  429968:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42996c:	add	x2, x2, #0xe0
  429970:	mov	w1, #0x5                   	// #5
  429974:	mov	x0, x19
  429978:	bl	41f990 <nftw@plt+0x1ce10>
  42997c:	b	429958 <nftw@plt+0x26dd8>
  429980:	mov	w0, #0x7                   	// #7
  429984:	strb	w0, [x20, #4]
  429988:	ldp	x27, x28, [sp, #80]
  42998c:	b	42a8dc <nftw@plt+0x27d5c>
  429990:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429994:	add	x2, x2, #0xb0
  429998:	mov	w1, #0x3                   	// #3
  42999c:	mov	x0, x19
  4299a0:	bl	41f990 <nftw@plt+0x1ce10>
  4299a4:	and	w0, w0, #0xff
  4299a8:	cbnz	w0, 4299bc <nftw@plt+0x26e3c>
  4299ac:	ldrb	w0, [x21, #105]
  4299b0:	orr	w0, w0, #0x1
  4299b4:	strb	w0, [x21, #105]
  4299b8:	b	429888 <nftw@plt+0x26d08>
  4299bc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4299c0:	add	x2, x2, #0xe0
  4299c4:	mov	w1, #0x5                   	// #5
  4299c8:	mov	x0, x19
  4299cc:	bl	41f990 <nftw@plt+0x1ce10>
  4299d0:	b	4299ac <nftw@plt+0x26e2c>
  4299d4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4299d8:	add	x2, x2, #0x148
  4299dc:	mov	w1, #0x2                   	// #2
  4299e0:	mov	x0, x19
  4299e4:	bl	41fa08 <nftw@plt+0x1ce88>
  4299e8:	b	4298dc <nftw@plt+0x26d5c>
  4299ec:	cmp	w28, #0x3d
  4299f0:	b.ne	429a0c <nftw@plt+0x26e8c>  // b.any
  4299f4:	add	x27, x27, #0x1
  4299f8:	str	x27, [x21]
  4299fc:	mov	w0, #0x1e                  	// #30
  429a00:	strb	w0, [x20, #4]
  429a04:	ldp	x27, x28, [sp, #80]
  429a08:	b	42a8dc <nftw@plt+0x27d5c>
  429a0c:	mov	w0, #0x7                   	// #7
  429a10:	strb	w0, [x20, #4]
  429a14:	ldp	x27, x28, [sp, #80]
  429a18:	b	42a8dc <nftw@plt+0x27d5c>
  429a1c:	ldr	x0, [x19]
  429a20:	ldr	x2, [x0]
  429a24:	sub	x0, x2, x24
  429a28:	cmp	x0, #0x7
  429a2c:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429a30:	mov	w1, #0x2d                  	// #45
  429a34:	b	429a48 <nftw@plt+0x26ec8>
  429a38:	add	x24, x24, #0x1
  429a3c:	sub	x0, x2, x24
  429a40:	cmp	x0, #0x7
  429a44:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429a48:	ldrb	w0, [x24]
  429a4c:	and	w0, w0, #0xffffffdf
  429a50:	and	w0, w0, #0xff
  429a54:	cmp	w0, #0x46
  429a58:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429a5c:	ldrb	w0, [x24, #1]
  429a60:	and	w0, w0, #0xffffffdf
  429a64:	and	w0, w0, #0xff
  429a68:	cmp	w0, #0x41
  429a6c:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429a70:	ldrb	w0, [x24, #2]
  429a74:	and	w0, w0, #0xffffffdf
  429a78:	and	w0, w0, #0xff
  429a7c:	cmp	w0, #0x4c
  429a80:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429a84:	ldrb	w0, [x24, #3]
  429a88:	and	w0, w0, #0xffffffdf
  429a8c:	and	w0, w0, #0xff
  429a90:	cmp	w0, #0x4c
  429a94:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429a98:	ldrb	w0, [x24, #4]
  429a9c:	and	w0, w0, #0xffffffdf
  429aa0:	and	w0, w0, #0xff
  429aa4:	cmp	w0, #0x53
  429aa8:	cinc	x24, x24, eq  // eq = none
  429aac:	ldrb	w0, [x24, #4]!
  429ab0:	cmp	w0, #0x20
  429ab4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429ab8:	ccmp	w0, w1, #0x4, ne  // ne = any
  429abc:	b.ne	429ad4 <nftw@plt+0x26f54>  // b.any
  429ac0:	ldrb	w0, [x24, #1]!
  429ac4:	cmp	w0, #0x20
  429ac8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429acc:	ccmp	w0, w1, #0x4, ne  // ne = any
  429ad0:	b.eq	429ac0 <nftw@plt+0x26f40>  // b.none
  429ad4:	and	w0, w0, #0xffffffdf
  429ad8:	and	w0, w0, #0xff
  429adc:	cmp	w0, #0x54
  429ae0:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429ae4:	ldrb	w0, [x24, #1]
  429ae8:	and	w0, w0, #0xffffffdf
  429aec:	and	w0, w0, #0xff
  429af0:	cmp	w0, #0x48
  429af4:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429af8:	ldrb	w0, [x24, #2]
  429afc:	and	w0, w0, #0xffffffdf
  429b00:	and	w0, w0, #0xff
  429b04:	cmp	w0, #0x52
  429b08:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429b0c:	ldrb	w0, [x24, #3]
  429b10:	and	w0, w0, #0xffffffdf
  429b14:	and	w0, w0, #0xff
  429b18:	cmp	w0, #0x55
  429b1c:	b.eq	42a0c8 <nftw@plt+0x27548>  // b.none
  429b20:	cmp	w0, #0x4f
  429b24:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429b28:	ldrb	w0, [x24, #4]
  429b2c:	and	w0, w0, #0xffffffdf
  429b30:	and	w0, w0, #0xff
  429b34:	cmp	w0, #0x55
  429b38:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429b3c:	ldrb	w0, [x24, #5]
  429b40:	and	w0, w0, #0xffffffdf
  429b44:	and	w0, w0, #0xff
  429b48:	cmp	w0, #0x47
  429b4c:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429b50:	ldrb	w0, [x24, #6]
  429b54:	and	w0, w0, #0xffffffdf
  429b58:	and	w0, w0, #0xff
  429b5c:	cmp	w0, #0x48
  429b60:	b.ne	429a38 <nftw@plt+0x26eb8>  // b.any
  429b64:	mov	w25, #0x1                   	// #1
  429b68:	b	4298f8 <nftw@plt+0x26d78>
  429b6c:	ldrb	w0, [x27, #13]
  429b70:	cmp	w0, #0x40
  429b74:	b.ne	4298f8 <nftw@plt+0x26d78>  // b.any
  429b78:	mov	x0, #0xc                   	// #12
  429b7c:	b	42ab3c <nftw@plt+0x27fbc>
  429b80:	cmp	w26, #0x6c
  429b84:	b.eq	429d74 <nftw@plt+0x271f4>  // b.none
  429b88:	cmp	w0, #0x4
  429b8c:	b.eq	429dcc <nftw@plt+0x2724c>  // b.none
  429b90:	sub	w0, w26, #0x20
  429b94:	and	w0, w0, #0xff
  429b98:	cmp	w26, #0x2e
  429b9c:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  429ba0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  429ba4:	b.hi	429bc4 <nftw@plt+0x27044>  // b.pmore
  429ba8:	ldrb	w26, [x24, #1]!
  429bac:	sub	w0, w26, #0x20
  429bb0:	and	w0, w0, #0xff
  429bb4:	cmp	w26, #0x2e
  429bb8:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  429bbc:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  429bc0:	b.ls	429ba8 <nftw@plt+0x27028>  // b.plast
  429bc4:	and	w0, w26, #0xffffffdf
  429bc8:	and	w0, w0, #0xff
  429bcc:	cmp	w0, #0x45
  429bd0:	b.ne	429ea8 <nftw@plt+0x27328>  // b.any
  429bd4:	ldr	x0, [x19]
  429bd8:	ldr	x0, [x0]
  429bdc:	sub	x0, x0, x24
  429be0:	cmp	x0, #0xc
  429be4:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429be8:	cmp	w26, #0x45
  429bec:	b.eq	429e74 <nftw@plt+0x272f4>  // b.none
  429bf0:	mov	x2, #0x3                   	// #3
  429bf4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429bf8:	add	x1, x1, #0x1a0
  429bfc:	add	x0, x24, #0x1
  429c00:	bl	402850 <memcmp@plt>
  429c04:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429c08:	mov	x1, x24
  429c0c:	ldrb	w2, [x1, #4]!
  429c10:	add	x0, x24, #0x5
  429c14:	cmp	w2, #0x2c
  429c18:	csel	x0, x0, x1, eq  // eq = none
  429c1c:	ldrb	w1, [x0]
  429c20:	cmp	w1, #0x20
  429c24:	b.ne	4298f8 <nftw@plt+0x26d78>  // b.any
  429c28:	add	x24, x0, #0x1
  429c2c:	ldr	w1, [sp, #104]
  429c30:	cbz	w1, 429c40 <nftw@plt+0x270c0>
  429c34:	ldrb	w1, [x0, #1]
  429c38:	cmp	w1, #0x66
  429c3c:	b.eq	4298f8 <nftw@plt+0x26d78>  // b.none
  429c40:	cmp	w26, #0x65
  429c44:	b.eq	429e98 <nftw@plt+0x27318>  // b.none
  429c48:	ldrb	w26, [x0, #1]
  429c4c:	and	w0, w26, #0xffffffdf
  429c50:	and	w0, w0, #0xff
  429c54:	cmp	w0, #0x46
  429c58:	b.ne	4298f8 <nftw@plt+0x26d78>  // b.any
  429c5c:	ldr	x0, [x19]
  429c60:	ldr	x0, [x0]
  429c64:	str	x0, [sp, #120]
  429c68:	sub	x0, x0, x24
  429c6c:	cmp	x0, #0x7
  429c70:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429c74:	cmp	w26, #0x46
  429c78:	b.eq	429f60 <nftw@plt+0x273e0>  // b.none
  429c7c:	ldr	w0, [sp, #104]
  429c80:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429c84:	mov	x2, #0x3                   	// #3
  429c88:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429c8c:	add	x1, x1, #0x1d0
  429c90:	add	x0, x24, #0x1
  429c94:	bl	402850 <memcmp@plt>
  429c98:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429c9c:	add	x0, x24, #0x4
  429ca0:	str	x0, [sp, #112]
  429ca4:	ldrb	w0, [x24, #4]
  429ca8:	mov	w1, w0
  429cac:	mov	w2, #0x73                  	// #115
  429cb0:	cmp	w2, w1
  429cb4:	b.eq	429f98 <nftw@plt+0x27418>  // b.none
  429cb8:	cmp	w0, #0x2d
  429cbc:	mov	w2, #0x20                  	// #32
  429cc0:	ccmp	w0, w2, #0x4, ne  // ne = any
  429cc4:	b.ne	429fb0 <nftw@plt+0x27430>  // b.any
  429cc8:	add	x0, x24, #0x5
  429ccc:	str	x0, [sp, #112]
  429cd0:	cmp	w26, #0x66
  429cd4:	b.eq	429ce8 <nftw@plt+0x27168>  // b.none
  429cd8:	ldr	x0, [sp, #112]
  429cdc:	ldrb	w0, [x0]
  429ce0:	cmp	w0, #0x54
  429ce4:	b.eq	429fd0 <nftw@plt+0x27450>  // b.none
  429ce8:	ldr	w0, [sp, #104]
  429cec:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429cf0:	ldr	x0, [sp, #112]
  429cf4:	ldrb	w0, [x0]
  429cf8:	cmp	w0, #0x74
  429cfc:	b.ne	4298f8 <nftw@plt+0x26d78>  // b.any
  429d00:	ldr	x0, [sp, #120]
  429d04:	ldr	x1, [sp, #112]
  429d08:	sub	x24, x0, x1
  429d0c:	cmp	x24, #0x3
  429d10:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429d14:	ldr	x0, [sp, #112]
  429d18:	add	x26, x0, #0x1
  429d1c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429d20:	add	x1, x1, #0x38
  429d24:	mov	x2, #0x3                   	// #3
  429d28:	mov	x0, x26
  429d2c:	bl	402850 <memcmp@plt>
  429d30:	cbz	w0, 42a008 <nftw@plt+0x27488>
  429d34:	cmp	x24, #0x6
  429d38:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429d3c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429d40:	add	x0, x0, #0x50
  429d44:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429d48:	add	x1, x1, #0x48
  429d4c:	ldr	w2, [sp, #104]
  429d50:	cmp	w2, #0x0
  429d54:	mov	x2, #0x6                   	// #6
  429d58:	csel	x1, x1, x0, ne  // ne = any
  429d5c:	mov	x0, x26
  429d60:	bl	402850 <memcmp@plt>
  429d64:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429d68:	ldr	x0, [sp, #112]
  429d6c:	add	x24, x0, #0x7
  429d70:	b	42a010 <nftw@plt+0x27490>
  429d74:	ldr	x0, [x19]
  429d78:	ldr	x0, [x0]
  429d7c:	sub	x0, x0, x24
  429d80:	sub	x0, x0, #0x1
  429d84:	cmp	x0, #0xf
  429d88:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429d8c:	mov	x2, #0x10                  	// #16
  429d90:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429d94:	add	x1, x1, #0x170
  429d98:	add	x0, x27, #0x2
  429d9c:	bl	402850 <memcmp@plt>
  429da0:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429da4:	add	x24, x27, #0x12
  429da8:	ldrb	w0, [x27, #18]
  429dac:	cmp	w0, #0x20
  429db0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429db4:	b.ne	42ab44 <nftw@plt+0x27fc4>  // b.any
  429db8:	ldrb	w0, [x24, #1]!
  429dbc:	cmp	w0, #0x20
  429dc0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429dc4:	b.eq	429db8 <nftw@plt+0x27238>  // b.none
  429dc8:	b	42ab44 <nftw@plt+0x27fc4>
  429dcc:	cmp	w26, #0x20
  429dd0:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  429dd4:	b.ne	429de8 <nftw@plt+0x27268>  // b.any
  429dd8:	ldrb	w0, [x24, #1]!
  429ddc:	cmp	w0, #0x20
  429de0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429de4:	b.eq	429dd8 <nftw@plt+0x27258>  // b.none
  429de8:	ldr	x0, [x19]
  429dec:	ldr	x26, [x0]
  429df0:	sub	x0, x26, x24
  429df4:	cmp	x0, #0x7
  429df8:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429dfc:	mov	x2, #0x7                   	// #7
  429e00:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429e04:	add	x1, x1, #0x188
  429e08:	mov	x0, x24
  429e0c:	bl	402850 <memcmp@plt>
  429e10:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429e14:	ldrb	w0, [x24, #7]
  429e18:	cmp	w0, #0x55
  429e1c:	b.eq	429e4c <nftw@plt+0x272cc>  // b.none
  429e20:	add	x0, x24, #0x7
  429e24:	sub	x1, x26, x0
  429e28:	cmp	x1, #0x3
  429e2c:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429e30:	mov	x2, #0x4                   	// #4
  429e34:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429e38:	add	x1, x1, #0x190
  429e3c:	bl	402850 <memcmp@plt>
  429e40:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429e44:	add	x24, x24, #0xb
  429e48:	b	429e50 <nftw@plt+0x272d0>
  429e4c:	add	x24, x24, #0x8
  429e50:	ldrb	w0, [x24]
  429e54:	cmp	w0, #0x20
  429e58:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429e5c:	b.ne	42ab44 <nftw@plt+0x27fc4>  // b.any
  429e60:	ldrb	w0, [x24, #1]!
  429e64:	cmp	w0, #0x20
  429e68:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  429e6c:	b.eq	429e60 <nftw@plt+0x272e0>  // b.none
  429e70:	b	42ab44 <nftw@plt+0x27fc4>
  429e74:	mov	x2, #0x3                   	// #3
  429e78:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429e7c:	add	x1, x1, #0x198
  429e80:	add	x0, x24, #0x1
  429e84:	bl	402850 <memcmp@plt>
  429e88:	cbnz	w0, 429bf0 <nftw@plt+0x27070>
  429e8c:	mov	w0, #0x1                   	// #1
  429e90:	str	w0, [sp, #104]
  429e94:	b	429c08 <nftw@plt+0x27088>
  429e98:	ldrb	w1, [x0, #1]
  429e9c:	cmp	w1, #0x46
  429ea0:	b.ne	429c48 <nftw@plt+0x270c8>  // b.any
  429ea4:	b	4298f8 <nftw@plt+0x26d78>
  429ea8:	cmp	w0, #0x49
  429eac:	b.ne	429c4c <nftw@plt+0x270cc>  // b.any
  429eb0:	ldr	x0, [x19]
  429eb4:	ldr	x0, [x0]
  429eb8:	sub	x0, x0, x24
  429ebc:	cmp	x0, #0x13
  429ec0:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429ec4:	cmp	w26, #0x49
  429ec8:	b.eq	429f10 <nftw@plt+0x27390>  // b.none
  429ecc:	mov	x2, #0xa                   	// #10
  429ed0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429ed4:	add	x1, x1, #0x1b8
  429ed8:	add	x0, x24, #0x1
  429edc:	bl	402850 <memcmp@plt>
  429ee0:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429ee4:	add	x0, x24, #0xb
  429ee8:	ldrb	w1, [x24, #11]
  429eec:	cmp	w1, #0x20
  429ef0:	b.eq	42aa94 <nftw@plt+0x27f14>  // b.none
  429ef4:	mov	x2, #0x3                   	// #3
  429ef8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429efc:	add	x1, x1, #0x1e0
  429f00:	bl	402850 <memcmp@plt>
  429f04:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  429f08:	add	x0, x24, #0xe
  429f0c:	b	42aac0 <nftw@plt+0x27f40>
  429f10:	mov	x2, #0xa                   	// #10
  429f14:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429f18:	add	x1, x1, #0x1a8
  429f1c:	add	x0, x24, #0x1
  429f20:	bl	402850 <memcmp@plt>
  429f24:	cbnz	w0, 429ecc <nftw@plt+0x2734c>
  429f28:	ldrb	w0, [x24, #11]
  429f2c:	cmp	w0, #0x20
  429f30:	b.ne	42aa9c <nftw@plt+0x27f1c>  // b.any
  429f34:	add	x0, x24, #0xc
  429f38:	ldrb	w1, [x24, #12]
  429f3c:	cmp	w1, #0x66
  429f40:	b.eq	4298f8 <nftw@plt+0x26d78>  // b.none
  429f44:	mov	w1, #0x1                   	// #1
  429f48:	str	w1, [sp, #104]
  429f4c:	b	42aac8 <nftw@plt+0x27f48>
  429f50:	ldrb	w1, [x0]
  429f54:	cmp	w1, #0x46
  429f58:	b.ne	42aac8 <nftw@plt+0x27f48>  // b.any
  429f5c:	b	4298f8 <nftw@plt+0x26d78>
  429f60:	mov	x2, #0x3                   	// #3
  429f64:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429f68:	add	x1, x1, #0x1c8
  429f6c:	add	x0, x24, #0x1
  429f70:	bl	402850 <memcmp@plt>
  429f74:	cbnz	w0, 429c7c <nftw@plt+0x270fc>
  429f78:	add	x0, x24, #0x4
  429f7c:	str	x0, [sp, #112]
  429f80:	ldrb	w0, [x24, #4]
  429f84:	mov	w1, w0
  429f88:	mov	w2, #0x1                   	// #1
  429f8c:	str	w2, [sp, #104]
  429f90:	mov	w2, #0x53                  	// #83
  429f94:	b	429cb0 <nftw@plt+0x27130>
  429f98:	ldrb	w2, [x24, #5]
  429f9c:	cmp	w2, #0x20
  429fa0:	b.ne	429cb8 <nftw@plt+0x27138>  // b.any
  429fa4:	add	x0, x24, #0x6
  429fa8:	str	x0, [sp, #112]
  429fac:	b	429cd0 <nftw@plt+0x27150>
  429fb0:	ldr	w0, [sp, #104]
  429fb4:	cmp	w0, #0x0
  429fb8:	mov	w0, #0x54                  	// #84
  429fbc:	mov	w2, #0x74                  	// #116
  429fc0:	csel	w0, w0, w2, ne  // ne = any
  429fc4:	cmp	w0, w1
  429fc8:	b.ne	4298f8 <nftw@plt+0x26d78>  // b.any
  429fcc:	b	429cd0 <nftw@plt+0x27150>
  429fd0:	ldr	x1, [sp, #120]
  429fd4:	ldr	x0, [sp, #112]
  429fd8:	sub	x24, x1, x0
  429fdc:	cmp	x24, #0x3
  429fe0:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  429fe4:	add	x26, x0, #0x1
  429fe8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429fec:	add	x0, x0, #0x38
  429ff0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  429ff4:	add	x1, x1, #0x40
  429ff8:	ldr	w2, [sp, #104]
  429ffc:	cmp	w2, #0x0
  42a000:	csel	x1, x1, x0, ne  // ne = any
  42a004:	b	429d24 <nftw@plt+0x271a4>
  42a008:	ldr	x0, [sp, #112]
  42a00c:	add	x24, x0, #0x4
  42a010:	ldrb	w0, [x24]
  42a014:	sub	w1, w0, #0x20
  42a018:	and	w1, w1, #0xff
  42a01c:	cmp	w0, #0x2e
  42a020:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  42a024:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  42a028:	b.hi	42a034 <nftw@plt+0x274b4>  // b.pmore
  42a02c:	add	x24, x24, #0x1
  42a030:	b	42a010 <nftw@plt+0x27490>
  42a034:	cmp	w0, #0x2d
  42a038:	b.ne	42ab44 <nftw@plt+0x27fc4>  // b.any
  42a03c:	add	x0, x24, #0x1
  42a040:	ldrb	w1, [x27]
  42a044:	cmp	w1, #0x2a
  42a048:	b.ne	42a0ac <nftw@plt+0x2752c>  // b.any
  42a04c:	add	x0, x24, #0x2
  42a050:	b	42a058 <nftw@plt+0x274d8>
  42a054:	add	x0, x0, #0x1
  42a058:	sub	x24, x0, #0x1
  42a05c:	ldurb	w1, [x0, #-1]
  42a060:	and	w2, w1, #0xffffffdf
  42a064:	and	w2, w2, #0xff
  42a068:	cmp	w1, #0x0
  42a06c:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  42a070:	ccmp	w2, #0xa, #0x4, ne  // ne = any
  42a074:	b.ne	42a054 <nftw@plt+0x274d4>  // b.any
  42a078:	cmp	w1, #0x2a
  42a07c:	b.ne	42a08c <nftw@plt+0x2750c>  // b.any
  42a080:	ldrb	w1, [x0]
  42a084:	cmp	w1, #0x2f
  42a088:	b.ne	42a054 <nftw@plt+0x274d4>  // b.any
  42a08c:	ldrb	w0, [x24]
  42a090:	cmp	w0, #0x2a
  42a094:	b.ne	4298f8 <nftw@plt+0x26d78>  // b.any
  42a098:	ldrb	w0, [x24, #1]
  42a09c:	cmp	w0, #0x2f
  42a0a0:	csinc	w25, w25, wzr, ne  // ne = any
  42a0a4:	b	4298f8 <nftw@plt+0x26d78>
  42a0a8:	add	x0, x0, #0x1
  42a0ac:	ldrb	w1, [x0]
  42a0b0:	cmp	w1, #0x0
  42a0b4:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  42a0b8:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  42a0bc:	b.ne	42a0a8 <nftw@plt+0x27528>  // b.any
  42a0c0:	mov	x24, x0
  42a0c4:	b	42ab50 <nftw@plt+0x27fd0>
  42a0c8:	mov	w25, #0x1                   	// #1
  42a0cc:	b	4298f8 <nftw@plt+0x26d78>
  42a0d0:	cbz	w25, 42a0e0 <nftw@plt+0x27560>
  42a0d4:	ldrh	w0, [x20, #6]
  42a0d8:	orr	w0, w0, #0x20
  42a0dc:	strh	w0, [x20, #6]
  42a0e0:	ldr	x0, [x19]
  42a0e4:	ldr	x0, [x0]
  42a0e8:	ldurb	w2, [x0, #-1]
  42a0ec:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  42a0f0:	add	x1, x1, #0xe68
  42a0f4:	ldrh	w1, [x1, x2, lsl #1]
  42a0f8:	tst	x1, #0x400
  42a0fc:	sub	w0, w0, w27
  42a100:	cinc	w23, w0, eq  // eq = none
  42a104:	ldrb	w0, [x19, #16]
  42a108:	cbnz	w0, 42a114 <nftw@plt+0x27594>
  42a10c:	ldrb	w0, [x19, #25]
  42a110:	cbz	w0, 42a250 <nftw@plt+0x276d0>
  42a114:	cmp	w28, #0x2f
  42a118:	b.eq	42a200 <nftw@plt+0x27680>  // b.none
  42a11c:	mov	w1, w23
  42a120:	mov	x0, x19
  42a124:	bl	4283c0 <nftw@plt+0x25840>
  42a128:	mov	x22, x0
  42a12c:	mov	w0, #0x4f                  	// #79
  42a130:	strb	w0, [x20, #4]
  42a134:	str	w23, [x20, #8]
  42a138:	str	x22, [x20, #16]
  42a13c:	mov	x0, x22
  42a140:	mov	w1, #0x2f                  	// #47
  42a144:	strb	w1, [x0], #1
  42a148:	sub	w2, w23, #0x1
  42a14c:	mov	x1, x27
  42a150:	bl	402490 <memcpy@plt>
  42a154:	ldrb	w0, [x19, #16]
  42a158:	cbnz	w0, 42a16c <nftw@plt+0x275ec>
  42a15c:	ldrb	w0, [x19, #25]
  42a160:	cbz	w0, 42a16c <nftw@plt+0x275ec>
  42a164:	cmp	w28, #0x2f
  42a168:	b.eq	42a294 <nftw@plt+0x27714>  // b.none
  42a16c:	ldr	w0, [x19, #1396]
  42a170:	cbz	w0, 42a310 <nftw@plt+0x27790>
  42a174:	ldr	w1, [x19, #1396]
  42a178:	ldr	w0, [x19, #1392]
  42a17c:	cmp	w0, w1
  42a180:	b.eq	42a328 <nftw@plt+0x277a8>  // b.none
  42a184:	ldr	w22, [x20, #8]
  42a188:	ldrsw	x23, [x19, #1392]
  42a18c:	lsl	x23, x23, #4
  42a190:	ldr	x24, [x19, #1384]
  42a194:	add	w0, w22, #0x1
  42a198:	sxtw	x0, w0
  42a19c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42a1a0:	str	x0, [x24, x23]
  42a1a4:	sxtw	x22, w22
  42a1a8:	ldrsw	x0, [x19, #1392]
  42a1ac:	ldr	x3, [x19, #1384]
  42a1b0:	lsl	x0, x0, #4
  42a1b4:	mov	x2, x22
  42a1b8:	ldr	x1, [x20, #16]
  42a1bc:	ldr	x0, [x3, x0]
  42a1c0:	bl	402490 <memcpy@plt>
  42a1c4:	ldrsw	x0, [x19, #1392]
  42a1c8:	ldr	x1, [x19, #1384]
  42a1cc:	lsl	x0, x0, #4
  42a1d0:	ldr	x0, [x1, x0]
  42a1d4:	strb	wzr, [x0, x22]
  42a1d8:	ldr	w1, [x20]
  42a1dc:	ldrsw	x0, [x19, #1392]
  42a1e0:	ldr	x2, [x19, #1384]
  42a1e4:	add	x0, x2, x0, lsl #4
  42a1e8:	str	w1, [x0, #8]
  42a1ec:	ldr	w0, [x19, #1392]
  42a1f0:	add	w0, w0, #0x1
  42a1f4:	str	w0, [x19, #1392]
  42a1f8:	ldp	x27, x28, [sp, #80]
  42a1fc:	b	42aa30 <nftw@plt+0x27eb0>
  42a200:	add	w24, w23, #0x2
  42a204:	add	w1, w23, #0x2
  42a208:	mov	x0, x19
  42a20c:	bl	4283c0 <nftw@plt+0x25840>
  42a210:	mov	x22, x0
  42a214:	mov	w0, #0x4f                  	// #79
  42a218:	strb	w0, [x20, #4]
  42a21c:	str	w24, [x20, #8]
  42a220:	str	x22, [x20, #16]
  42a224:	mov	x0, x22
  42a228:	mov	w1, #0x2f                  	// #47
  42a22c:	strb	w1, [x0], #1
  42a230:	sub	w2, w23, #0x1
  42a234:	mov	x1, x27
  42a238:	bl	402490 <memcpy@plt>
  42a23c:	ldrb	w0, [x19, #16]
  42a240:	cbnz	w0, 42a298 <nftw@plt+0x27718>
  42a244:	ldrb	w0, [x19, #25]
  42a248:	cbz	w0, 42a16c <nftw@plt+0x275ec>
  42a24c:	b	42a298 <nftw@plt+0x27718>
  42a250:	mov	w1, w23
  42a254:	mov	x0, x19
  42a258:	bl	4283c0 <nftw@plt+0x25840>
  42a25c:	mov	x22, x0
  42a260:	mov	w0, #0x4f                  	// #79
  42a264:	strb	w0, [x20, #4]
  42a268:	str	w23, [x20, #8]
  42a26c:	str	x22, [x20, #16]
  42a270:	mov	x0, x22
  42a274:	mov	w1, #0x2f                  	// #47
  42a278:	strb	w1, [x0], #1
  42a27c:	sub	w2, w23, #0x1
  42a280:	mov	x1, x27
  42a284:	bl	402490 <memcpy@plt>
  42a288:	ldrb	w0, [x19, #16]
  42a28c:	cbnz	w0, 42a164 <nftw@plt+0x275e4>
  42a290:	b	42a15c <nftw@plt+0x275dc>
  42a294:	mov	w24, w23
  42a298:	mov	w0, #0x2a                  	// #42
  42a29c:	strb	w0, [x22, #1]
  42a2a0:	sub	w1, w24, #0x2
  42a2a4:	strb	w0, [x22, w1, uxtw]
  42a2a8:	sub	w0, w24, #0x1
  42a2ac:	mov	w2, #0x2f                  	// #47
  42a2b0:	strb	w2, [x22, x0]
  42a2b4:	cmp	w1, #0x2
  42a2b8:	b.ls	42a16c <nftw@plt+0x275ec>  // b.plast
  42a2bc:	add	x0, x22, #0x1
  42a2c0:	add	x1, x22, #0x2
  42a2c4:	sub	w24, w24, #0x5
  42a2c8:	add	x1, x1, x24
  42a2cc:	mov	w3, #0x7c                  	// #124
  42a2d0:	b	42a2e4 <nftw@plt+0x27764>
  42a2d4:	strb	w3, [x2, #1]
  42a2d8:	add	x0, x0, #0x1
  42a2dc:	cmp	x0, x1
  42a2e0:	b.eq	42a16c <nftw@plt+0x275ec>  // b.none
  42a2e4:	mov	x2, x0
  42a2e8:	ldrb	w4, [x0, #1]
  42a2ec:	cmp	w4, #0x2f
  42a2f0:	b.ne	42a2d8 <nftw@plt+0x27758>  // b.any
  42a2f4:	ldrb	w4, [x0]
  42a2f8:	cmp	w4, #0x2a
  42a2fc:	b.eq	42a2d4 <nftw@plt+0x27754>  // b.none
  42a300:	ldrb	w4, [x0, #2]
  42a304:	cmp	w4, #0x2a
  42a308:	b.ne	42a2d8 <nftw@plt+0x27758>  // b.any
  42a30c:	b	42a2d4 <nftw@plt+0x27754>
  42a310:	mov	w0, #0x100                 	// #256
  42a314:	str	w0, [x19, #1396]
  42a318:	mov	x0, #0x1000                	// #4096
  42a31c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42a320:	str	x0, [x19, #1384]
  42a324:	b	42a174 <nftw@plt+0x275f4>
  42a328:	lsl	w1, w1, #1
  42a32c:	str	w1, [x19, #1396]
  42a330:	sbfiz	x1, x1, #4, #32
  42a334:	ldr	x0, [x19, #1384]
  42a338:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  42a33c:	str	x0, [x19, #1384]
  42a340:	b	42a184 <nftw@plt+0x27604>
  42a344:	ldrb	w0, [x19, #19]
  42a348:	cbnz	w0, 42a3a4 <nftw@plt+0x27824>
  42a34c:	mov	w0, #0x3                   	// #3
  42a350:	strb	w0, [x20, #4]
  42a354:	ldr	x0, [x21]
  42a358:	ldrb	w1, [x0]
  42a35c:	cmp	w1, #0x3d
  42a360:	b.eq	42a3c8 <nftw@plt+0x27848>  // b.none
  42a364:	cmp	w1, #0x3c
  42a368:	b.eq	42a3dc <nftw@plt+0x2785c>  // b.none
  42a36c:	ldrb	w2, [x19, #1126]
  42a370:	cbz	w2, 42a8dc <nftw@plt+0x27d5c>
  42a374:	cmp	w1, #0x3a
  42a378:	b.eq	42a410 <nftw@plt+0x27890>  // b.none
  42a37c:	cmp	w1, #0x25
  42a380:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a384:	add	x0, x0, #0x1
  42a388:	str	x0, [x21]
  42a38c:	ldrh	w0, [x20, #6]
  42a390:	orr	w0, w0, #0x2
  42a394:	strh	w0, [x20, #6]
  42a398:	mov	w0, #0x29                  	// #41
  42a39c:	strb	w0, [x20, #4]
  42a3a0:	b	42a8dc <nftw@plt+0x27d5c>
  42a3a4:	ldr	x2, [x21]
  42a3a8:	sub	x2, x2, #0x1
  42a3ac:	mov	x1, x20
  42a3b0:	mov	x0, x19
  42a3b4:	bl	4285d8 <nftw@plt+0x25a58>
  42a3b8:	ldrb	w0, [x20, #4]
  42a3bc:	cmp	w0, #0x3
  42a3c0:	b.ne	42aa30 <nftw@plt+0x27eb0>  // b.any
  42a3c4:	b	42a34c <nftw@plt+0x277cc>
  42a3c8:	add	x0, x0, #0x1
  42a3cc:	str	x0, [x21]
  42a3d0:	mov	w0, #0x1a                  	// #26
  42a3d4:	strb	w0, [x20, #4]
  42a3d8:	b	42a8dc <nftw@plt+0x27d5c>
  42a3dc:	add	x0, x0, #0x1
  42a3e0:	str	x0, [x21]
  42a3e4:	mov	w0, #0xd                   	// #13
  42a3e8:	strb	w0, [x20, #4]
  42a3ec:	ldr	x0, [x21]
  42a3f0:	ldrb	w1, [x0]
  42a3f4:	cmp	w1, #0x3d
  42a3f8:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a3fc:	add	x0, x0, #0x1
  42a400:	str	x0, [x21]
  42a404:	mov	w0, #0x24                  	// #36
  42a408:	strb	w0, [x20, #4]
  42a40c:	b	42a8dc <nftw@plt+0x27d5c>
  42a410:	ldrb	w1, [x19, #1120]
  42a414:	cbz	w1, 42a428 <nftw@plt+0x278a8>
  42a418:	ldr	w1, [x19, #1116]
  42a41c:	sub	w1, w1, #0xb
  42a420:	cmp	w1, #0x1
  42a424:	b.hi	42a448 <nftw@plt+0x278c8>  // b.pmore
  42a428:	add	x0, x0, #0x1
  42a42c:	str	x0, [x21]
  42a430:	ldrh	w0, [x20, #6]
  42a434:	orr	w0, w0, #0x2
  42a438:	strh	w0, [x20, #6]
  42a43c:	mov	w0, #0x27                  	// #39
  42a440:	strb	w0, [x20, #4]
  42a444:	b	42a8dc <nftw@plt+0x27d5c>
  42a448:	ldrb	w1, [x0, #1]
  42a44c:	cmp	w1, #0x3a
  42a450:	b.ne	42a428 <nftw@plt+0x278a8>  // b.any
  42a454:	ldrb	w1, [x0, #2]
  42a458:	and	w1, w1, #0xfffffffb
  42a45c:	and	w1, w1, #0xff
  42a460:	cmp	w1, #0x3a
  42a464:	b.eq	42a428 <nftw@plt+0x278a8>  // b.none
  42a468:	b	42a8dc <nftw@plt+0x27d5c>
  42a46c:	mov	w0, #0x2                   	// #2
  42a470:	strb	w0, [x20, #4]
  42a474:	ldr	x0, [x21]
  42a478:	ldrb	w1, [x0]
  42a47c:	cmp	w1, #0x3d
  42a480:	b.eq	42a4c0 <nftw@plt+0x27940>  // b.none
  42a484:	cmp	w1, #0x3e
  42a488:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a48c:	add	x0, x0, #0x1
  42a490:	str	x0, [x21]
  42a494:	mov	w0, #0xc                   	// #12
  42a498:	strb	w0, [x20, #4]
  42a49c:	ldr	x0, [x21]
  42a4a0:	ldrb	w1, [x0]
  42a4a4:	cmp	w1, #0x3d
  42a4a8:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a4ac:	add	x0, x0, #0x1
  42a4b0:	str	x0, [x21]
  42a4b4:	mov	w0, #0x23                  	// #35
  42a4b8:	strb	w0, [x20, #4]
  42a4bc:	b	42a8dc <nftw@plt+0x27d5c>
  42a4c0:	add	x0, x0, #0x1
  42a4c4:	str	x0, [x21]
  42a4c8:	mov	w0, #0x19                  	// #25
  42a4cc:	strb	w0, [x20, #4]
  42a4d0:	b	42a8dc <nftw@plt+0x27d5c>
  42a4d4:	mov	w0, #0x8                   	// #8
  42a4d8:	strb	w0, [x20, #4]
  42a4dc:	ldr	x0, [x21]
  42a4e0:	ldrb	w1, [x0]
  42a4e4:	cmp	w1, #0x3d
  42a4e8:	b.eq	42a524 <nftw@plt+0x279a4>  // b.none
  42a4ec:	ldrb	w2, [x19, #1126]
  42a4f0:	cbz	w2, 42a8dc <nftw@plt+0x27d5c>
  42a4f4:	cmp	w1, #0x3a
  42a4f8:	b.eq	42a538 <nftw@plt+0x279b8>  // b.none
  42a4fc:	cmp	w1, #0x3e
  42a500:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a504:	add	x0, x0, #0x1
  42a508:	str	x0, [x21]
  42a50c:	ldrh	w0, [x20, #6]
  42a510:	orr	w0, w0, #0x2
  42a514:	strh	w0, [x20, #6]
  42a518:	mov	w0, #0x2a                  	// #42
  42a51c:	strb	w0, [x20, #4]
  42a520:	b	42a8dc <nftw@plt+0x27d5c>
  42a524:	add	x0, x0, #0x1
  42a528:	str	x0, [x21]
  42a52c:	mov	w0, #0x1f                  	// #31
  42a530:	strb	w0, [x20, #4]
  42a534:	b	42a8dc <nftw@plt+0x27d5c>
  42a538:	add	x0, x0, #0x1
  42a53c:	str	x0, [x21]
  42a540:	ldrh	w0, [x20, #6]
  42a544:	orr	w0, w0, #0x2
  42a548:	strh	w0, [x20, #6]
  42a54c:	mov	w0, #0x25                  	// #37
  42a550:	strb	w0, [x20, #4]
  42a554:	ldr	x0, [x21]
  42a558:	ldrb	w1, [x0]
  42a55c:	cmp	w1, #0x25
  42a560:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a564:	ldrb	w1, [x0, #1]
  42a568:	cmp	w1, #0x3a
  42a56c:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a570:	add	x0, x0, #0x2
  42a574:	str	x0, [x21]
  42a578:	mov	w0, #0x26                  	// #38
  42a57c:	strb	w0, [x20, #4]
  42a580:	str	wzr, [x20, #8]
  42a584:	b	42a8dc <nftw@plt+0x27d5c>
  42a588:	mov	w0, #0x30                  	// #48
  42a58c:	strb	w0, [x20, #4]
  42a590:	ldr	x2, [x21]
  42a594:	ldrb	w1, [x2]
  42a598:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  42a59c:	add	x0, x0, #0xe68
  42a5a0:	ldrh	w0, [x0, w1, sxtw #1]
  42a5a4:	tbnz	w0, #2, 42a5d4 <nftw@plt+0x27a54>
  42a5a8:	cmp	w1, #0x2e
  42a5ac:	b.eq	42a60c <nftw@plt+0x27a8c>  // b.none
  42a5b0:	cmp	w1, #0x2a
  42a5b4:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a5b8:	ldrb	w0, [x19, #1120]
  42a5bc:	cbz	w0, 42a8dc <nftw@plt+0x27d5c>
  42a5c0:	add	x2, x2, #0x1
  42a5c4:	str	x2, [x21]
  42a5c8:	mov	w0, #0x33                  	// #51
  42a5cc:	strb	w0, [x20, #4]
  42a5d0:	b	42a8dc <nftw@plt+0x27d5c>
  42a5d4:	str	wzr, [sp, #128]
  42a5d8:	strb	wzr, [sp, #132]
  42a5dc:	str	wzr, [sp, #136]
  42a5e0:	mov	w0, #0x37                  	// #55
  42a5e4:	strb	w0, [x20, #4]
  42a5e8:	add	x2, sp, #0x80
  42a5ec:	add	x1, x20, #0x8
  42a5f0:	mov	x0, x19
  42a5f4:	bl	428424 <nftw@plt+0x258a4>
  42a5f8:	add	x2, sp, #0x80
  42a5fc:	mov	x1, x20
  42a600:	mov	x0, x19
  42a604:	bl	427830 <nftw@plt+0x24cb0>
  42a608:	b	42aa30 <nftw@plt+0x27eb0>
  42a60c:	ldrb	w0, [x2, #1]
  42a610:	cmp	w0, #0x2e
  42a614:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a618:	add	x2, x2, #0x2
  42a61c:	str	x2, [x21]
  42a620:	mov	w0, #0x2c                  	// #44
  42a624:	strb	w0, [x20, #4]
  42a628:	b	42a8dc <nftw@plt+0x27d5c>
  42a62c:	mov	w0, #0x4                   	// #4
  42a630:	strb	w0, [x20, #4]
  42a634:	ldr	x0, [x21]
  42a638:	ldrb	w1, [x0]
  42a63c:	cmp	w1, #0x2b
  42a640:	b.eq	42a660 <nftw@plt+0x27ae0>  // b.none
  42a644:	cmp	w1, #0x3d
  42a648:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a64c:	add	x0, x0, #0x1
  42a650:	str	x0, [x21]
  42a654:	mov	w0, #0x1b                  	// #27
  42a658:	strb	w0, [x20, #4]
  42a65c:	b	42a8dc <nftw@plt+0x27d5c>
  42a660:	add	x0, x0, #0x1
  42a664:	str	x0, [x21]
  42a668:	mov	w0, #0x2d                  	// #45
  42a66c:	strb	w0, [x20, #4]
  42a670:	b	42a8dc <nftw@plt+0x27d5c>
  42a674:	mov	w0, #0x5                   	// #5
  42a678:	strb	w0, [x20, #4]
  42a67c:	ldr	x0, [x21]
  42a680:	ldrb	w1, [x0]
  42a684:	cmp	w1, #0x3e
  42a688:	b.eq	42a6b0 <nftw@plt+0x27b30>  // b.none
  42a68c:	cmp	w1, #0x2d
  42a690:	b.eq	42a6ec <nftw@plt+0x27b6c>  // b.none
  42a694:	cmp	w1, #0x3d
  42a698:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a69c:	add	x0, x0, #0x1
  42a6a0:	str	x0, [x21]
  42a6a4:	mov	w0, #0x1c                  	// #28
  42a6a8:	strb	w0, [x20, #4]
  42a6ac:	b	42a8dc <nftw@plt+0x27d5c>
  42a6b0:	add	x0, x0, #0x1
  42a6b4:	str	x0, [x21]
  42a6b8:	mov	w0, #0x2f                  	// #47
  42a6bc:	strb	w0, [x20, #4]
  42a6c0:	ldr	x0, [x21]
  42a6c4:	ldrb	w1, [x0]
  42a6c8:	cmp	w1, #0x2a
  42a6cc:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a6d0:	ldrb	w1, [x19, #1120]
  42a6d4:	cbz	w1, 42a8dc <nftw@plt+0x27d5c>
  42a6d8:	add	x0, x0, #0x1
  42a6dc:	str	x0, [x21]
  42a6e0:	mov	w0, #0x32                  	// #50
  42a6e4:	strb	w0, [x20, #4]
  42a6e8:	b	42a8dc <nftw@plt+0x27d5c>
  42a6ec:	add	x0, x0, #0x1
  42a6f0:	str	x0, [x21]
  42a6f4:	mov	w0, #0x2e                  	// #46
  42a6f8:	strb	w0, [x20, #4]
  42a6fc:	b	42a8dc <nftw@plt+0x27d5c>
  42a700:	mov	w0, #0x9                   	// #9
  42a704:	strb	w0, [x20, #4]
  42a708:	ldr	x0, [x21]
  42a70c:	ldrb	w1, [x0]
  42a710:	cmp	w1, #0x26
  42a714:	b.eq	42a734 <nftw@plt+0x27bb4>  // b.none
  42a718:	cmp	w1, #0x3d
  42a71c:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a720:	add	x0, x0, #0x1
  42a724:	str	x0, [x21]
  42a728:	mov	w0, #0x20                  	// #32
  42a72c:	strb	w0, [x20, #4]
  42a730:	b	42a8dc <nftw@plt+0x27d5c>
  42a734:	add	x0, x0, #0x1
  42a738:	str	x0, [x21]
  42a73c:	mov	w0, #0xf                   	// #15
  42a740:	strb	w0, [x20, #4]
  42a744:	b	42a8dc <nftw@plt+0x27d5c>
  42a748:	mov	w0, #0xa                   	// #10
  42a74c:	strb	w0, [x20, #4]
  42a750:	ldr	x0, [x21]
  42a754:	ldrb	w1, [x0]
  42a758:	cmp	w1, #0x7c
  42a75c:	b.eq	42a77c <nftw@plt+0x27bfc>  // b.none
  42a760:	cmp	w1, #0x3d
  42a764:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a768:	add	x0, x0, #0x1
  42a76c:	str	x0, [x21]
  42a770:	mov	w0, #0x21                  	// #33
  42a774:	strb	w0, [x20, #4]
  42a778:	b	42a8dc <nftw@plt+0x27d5c>
  42a77c:	add	x0, x0, #0x1
  42a780:	str	x0, [x21]
  42a784:	mov	w0, #0x10                  	// #16
  42a788:	strb	w0, [x20, #4]
  42a78c:	b	42a8dc <nftw@plt+0x27d5c>
  42a790:	mov	w0, #0x12                  	// #18
  42a794:	strb	w0, [x20, #4]
  42a798:	ldr	x0, [x21]
  42a79c:	ldrb	w1, [x0]
  42a7a0:	cmp	w1, #0x3a
  42a7a4:	b.eq	42a7d8 <nftw@plt+0x27c58>  // b.none
  42a7a8:	cmp	w1, #0x3e
  42a7ac:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a7b0:	ldrb	w1, [x19, #1126]
  42a7b4:	cbz	w1, 42a8dc <nftw@plt+0x27d5c>
  42a7b8:	add	x0, x0, #0x1
  42a7bc:	str	x0, [x21]
  42a7c0:	ldrh	w0, [x20, #6]
  42a7c4:	orr	w0, w0, #0x2
  42a7c8:	strh	w0, [x20, #6]
  42a7cc:	mov	w0, #0x28                  	// #40
  42a7d0:	strb	w0, [x20, #4]
  42a7d4:	b	42a8dc <nftw@plt+0x27d5c>
  42a7d8:	ldrb	w1, [x19, #1120]
  42a7dc:	cbz	w1, 42a8dc <nftw@plt+0x27d5c>
  42a7e0:	add	x0, x0, #0x1
  42a7e4:	str	x0, [x21]
  42a7e8:	mov	w0, #0x31                  	// #49
  42a7ec:	strb	w0, [x20, #4]
  42a7f0:	b	42a8dc <nftw@plt+0x27d5c>
  42a7f4:	mov	w0, #0x6                   	// #6
  42a7f8:	strb	w0, [x20, #4]
  42a7fc:	ldr	x0, [x21]
  42a800:	ldrb	w1, [x0]
  42a804:	cmp	w1, #0x3d
  42a808:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a80c:	add	x0, x0, #0x1
  42a810:	str	x0, [x21]
  42a814:	mov	w0, #0x1d                  	// #29
  42a818:	strb	w0, [x20, #4]
  42a81c:	b	42a8dc <nftw@plt+0x27d5c>
  42a820:	strb	wzr, [x20, #4]
  42a824:	ldr	x0, [x21]
  42a828:	ldrb	w1, [x0]
  42a82c:	cmp	w1, #0x3d
  42a830:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a834:	add	x0, x0, #0x1
  42a838:	str	x0, [x21]
  42a83c:	mov	w0, #0x17                  	// #23
  42a840:	strb	w0, [x20, #4]
  42a844:	b	42a8dc <nftw@plt+0x27d5c>
  42a848:	mov	w0, #0x1                   	// #1
  42a84c:	strb	w0, [x20, #4]
  42a850:	ldr	x0, [x21]
  42a854:	ldrb	w1, [x0]
  42a858:	cmp	w1, #0x3d
  42a85c:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a860:	add	x0, x0, #0x1
  42a864:	str	x0, [x21]
  42a868:	mov	w0, #0x18                  	// #24
  42a86c:	strb	w0, [x20, #4]
  42a870:	b	42a8dc <nftw@plt+0x27d5c>
  42a874:	mov	w0, #0xb                   	// #11
  42a878:	strb	w0, [x20, #4]
  42a87c:	ldr	x0, [x21]
  42a880:	ldrb	w1, [x0]
  42a884:	cmp	w1, #0x3d
  42a888:	b.ne	42a8dc <nftw@plt+0x27d5c>  // b.any
  42a88c:	add	x0, x0, #0x1
  42a890:	str	x0, [x21]
  42a894:	mov	w0, #0x22                  	// #34
  42a898:	strb	w0, [x20, #4]
  42a89c:	b	42a8dc <nftw@plt+0x27d5c>
  42a8a0:	mov	w0, #0x25                  	// #37
  42a8a4:	strb	w0, [x20, #4]
  42a8a8:	ldr	x0, [x21]
  42a8ac:	ldrb	w1, [x0]
  42a8b0:	cmp	w1, #0x23
  42a8b4:	b.eq	42a8c0 <nftw@plt+0x27d40>  // b.none
  42a8b8:	str	wzr, [x20, #8]
  42a8bc:	b	42aa30 <nftw@plt+0x27eb0>
  42a8c0:	add	x0, x0, #0x1
  42a8c4:	str	x0, [x21]
  42a8c8:	mov	w0, #0x26                  	// #38
  42a8cc:	strb	w0, [x20, #4]
  42a8d0:	b	42a8b8 <nftw@plt+0x27d38>
  42a8d4:	mov	w0, #0x11                  	// #17
  42a8d8:	strb	w0, [x20, #4]
  42a8dc:	ldr	w0, [x20]
  42a8e0:	cmp	w0, #0x1
  42a8e4:	b.ls	42a944 <nftw@plt+0x27dc4>  // b.plast
  42a8e8:	ldr	w0, [x21, #56]
  42a8ec:	ldr	x2, [x21, #48]
  42a8f0:	lsl	x0, x0, #4
  42a8f4:	ldr	x1, [x21]
  42a8f8:	ldr	x0, [x2, x0]
  42a8fc:	cmp	x1, x0
  42a900:	b.cc	42a90c <nftw@plt+0x27d8c>  // b.lo, b.ul, b.last
  42a904:	ldr	x0, [x19, #8]
  42a908:	cbz	x0, 42aa84 <nftw@plt+0x27f04>
  42a90c:	ldr	w22, [x20]
  42a910:	ldr	x1, [x21]
  42a914:	ldr	x0, [x21, #8]
  42a918:	sub	w1, w1, w0
  42a91c:	ldr	x0, [x19, #40]
  42a920:	bl	42b974 <nftw@plt+0x28df4>
  42a924:	mov	x2, #0x0                   	// #0
  42a928:	bfxil	x2, x22, #0, #32
  42a92c:	bfi	x2, x0, #32, #32
  42a930:	mov	x3, #0x0                   	// #0
  42a934:	ldr	w1, [x20]
  42a938:	ldr	x0, [x19, #40]
  42a93c:	bl	42bc94 <nftw@plt+0x29114>
  42a940:	str	w0, [x20]
  42a944:	mov	x0, x20
  42a948:	ldp	x19, x20, [sp, #16]
  42a94c:	ldp	x21, x22, [sp, #32]
  42a950:	ldp	x23, x24, [sp, #48]
  42a954:	ldp	x25, x26, [sp, #64]
  42a958:	ldp	x29, x30, [sp], #144
  42a95c:	ret
  42a960:	mov	w0, #0xe                   	// #14
  42a964:	strb	w0, [x20, #4]
  42a968:	b	42a8dc <nftw@plt+0x27d5c>
  42a96c:	mov	w0, #0x13                  	// #19
  42a970:	strb	w0, [x20, #4]
  42a974:	b	42a8dc <nftw@plt+0x27d5c>
  42a978:	mov	w0, #0x14                  	// #20
  42a97c:	strb	w0, [x20, #4]
  42a980:	b	42a8dc <nftw@plt+0x27d5c>
  42a984:	mov	w0, #0x15                  	// #21
  42a988:	strb	w0, [x20, #4]
  42a98c:	b	42a8dc <nftw@plt+0x27d5c>
  42a990:	mov	w0, #0x27                  	// #39
  42a994:	strb	w0, [x20, #4]
  42a998:	b	42a8dc <nftw@plt+0x27d5c>
  42a99c:	mov	w0, #0x28                  	// #40
  42a9a0:	strb	w0, [x20, #4]
  42a9a4:	b	42a8dc <nftw@plt+0x27d5c>
  42a9a8:	mov	w0, #0x29                  	// #41
  42a9ac:	strb	w0, [x20, #4]
  42a9b0:	b	42a8dc <nftw@plt+0x27d5c>
  42a9b4:	mov	w0, #0x2a                  	// #42
  42a9b8:	strb	w0, [x20, #4]
  42a9bc:	b	42a8dc <nftw@plt+0x27d5c>
  42a9c0:	mov	w0, #0x2b                  	// #43
  42a9c4:	strb	w0, [x20, #4]
  42a9c8:	b	42a8dc <nftw@plt+0x27d5c>
  42a9cc:	mov	w0, #0x34                  	// #52
  42a9d0:	strb	w0, [x20, #4]
  42a9d4:	b	42a8dc <nftw@plt+0x27d5c>
  42a9d8:	ldr	x22, [x21]
  42a9dc:	sub	x22, x22, #0x1
  42a9e0:	str	x22, [x21]
  42a9e4:	str	wzr, [sp, #128]
  42a9e8:	strb	wzr, [sp, #132]
  42a9ec:	str	wzr, [sp, #136]
  42a9f0:	add	x2, sp, #0x80
  42a9f4:	mov	w1, #0x1                   	// #1
  42a9f8:	mov	x0, x19
  42a9fc:	bl	426644 <nftw@plt+0x23ac4>
  42aa00:	and	w0, w0, #0xff
  42aa04:	cbnz	w0, 42aa4c <nftw@plt+0x27ecc>
  42aa08:	ldr	x0, [x21]
  42aa0c:	add	x0, x0, #0x1
  42aa10:	str	x0, [x21]
  42aa14:	ldr	x2, [x21]
  42aa18:	mov	w4, #0x3d                  	// #61
  42aa1c:	mov	w3, #0x1                   	// #1
  42aa20:	sub	x2, x2, #0x1
  42aa24:	mov	x1, x20
  42aa28:	mov	x0, x19
  42aa2c:	bl	428578 <nftw@plt+0x259f8>
  42aa30:	ldr	w0, [x20]
  42aa34:	cmp	w0, #0x1
  42aa38:	b.ls	42a944 <nftw@plt+0x27dc4>  // b.plast
  42aa3c:	ldrb	w0, [x20, #4]
  42aa40:	cmp	w0, #0x16
  42aa44:	b.eq	42a944 <nftw@plt+0x27dc4>  // b.none
  42aa48:	b	42a8e8 <nftw@plt+0x27d68>
  42aa4c:	mov	w0, #0x35                  	// #53
  42aa50:	strb	w0, [x20, #4]
  42aa54:	add	x4, x20, #0x10
  42aa58:	add	x3, sp, #0x80
  42aa5c:	mov	w2, #0x1                   	// #1
  42aa60:	mov	x1, x22
  42aa64:	mov	x0, x19
  42aa68:	bl	426738 <nftw@plt+0x23bb8>
  42aa6c:	str	x0, [x20, #8]
  42aa70:	add	x2, sp, #0x80
  42aa74:	mov	x1, x20
  42aa78:	mov	x0, x19
  42aa7c:	bl	427830 <nftw@plt+0x24cb0>
  42aa80:	b	42aa30 <nftw@plt+0x27eb0>
  42aa84:	mov	w1, #0x0                   	// #0
  42aa88:	mov	x0, x19
  42aa8c:	bl	426e70 <nftw@plt+0x242f0>
  42aa90:	b	42a90c <nftw@plt+0x27d8c>
  42aa94:	add	x0, x24, #0xc
  42aa98:	b	42aac0 <nftw@plt+0x27f40>
  42aa9c:	mov	x2, #0x4                   	// #4
  42aaa0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42aaa4:	add	x1, x1, #0x1d8
  42aaa8:	add	x0, x24, #0xb
  42aaac:	bl	402850 <memcmp@plt>
  42aab0:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  42aab4:	add	x0, x24, #0xe
  42aab8:	mov	w1, #0x1                   	// #1
  42aabc:	str	w1, [sp, #104]
  42aac0:	cmp	w26, #0x69
  42aac4:	b.eq	429f50 <nftw@plt+0x273d0>  // b.none
  42aac8:	ldrb	w26, [x0]
  42aacc:	mov	x24, x0
  42aad0:	b	429c4c <nftw@plt+0x270cc>
  42aad4:	sub	w1, w0, #0x3
  42aad8:	and	w1, w1, #0xff
  42aadc:	cmp	w1, #0x1
  42aae0:	b.hi	4298f8 <nftw@plt+0x26d78>  // b.pmore
  42aae4:	ldrb	w26, [x27, #1]
  42aae8:	cmp	w26, #0x40
  42aaec:	cset	w1, eq  // eq = none
  42aaf0:	cmp	w26, #0x2d
  42aaf4:	csinc	w1, w1, wzr, ne  // ne = any
  42aaf8:	str	w1, [sp, #104]
  42aafc:	cbz	w1, 429b80 <nftw@plt+0x27000>
  42ab00:	ldr	x0, [x19]
  42ab04:	ldr	x0, [x0]
  42ab08:	sub	x0, x0, x24
  42ab0c:	sub	x0, x0, #0x1
  42ab10:	cmp	x0, #0xa
  42ab14:	b.ls	4298f8 <nftw@plt+0x26d78>  // b.plast
  42ab18:	mov	x2, #0xb                   	// #11
  42ab1c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ab20:	add	x1, x1, #0x160
  42ab24:	add	x0, x27, #0x2
  42ab28:	bl	402850 <memcmp@plt>
  42ab2c:	cbnz	w0, 4298f8 <nftw@plt+0x26d78>
  42ab30:	mov	x0, #0xb                   	// #11
  42ab34:	cmp	w26, #0x40
  42ab38:	b.eq	429b6c <nftw@plt+0x26fec>  // b.none
  42ab3c:	add	x0, x0, #0x1
  42ab40:	add	x24, x24, x0
  42ab44:	ldrb	w0, [x27]
  42ab48:	cmp	w0, #0x2a
  42ab4c:	b.eq	42a08c <nftw@plt+0x2750c>  // b.none
  42ab50:	ldrb	w0, [x24]
  42ab54:	cmp	w0, #0xa
  42ab58:	csinc	w25, w25, wzr, ne  // ne = any
  42ab5c:	b	4298f8 <nftw@plt+0x26d78>
  42ab60:	stp	x29, x30, [sp, #-48]!
  42ab64:	mov	x29, sp
  42ab68:	stp	x19, x20, [sp, #16]
  42ab6c:	str	x21, [sp, #32]
  42ab70:	mov	x19, x0
  42ab74:	add	x21, x0, #0x98
  42ab78:	b	42ac10 <nftw@plt+0x28090>
  42ab7c:	bl	4273c8 <nftw@plt+0x24848>
  42ab80:	str	x0, [x19, #488]
  42ab84:	ldr	x0, [x0, #16]
  42ab88:	str	x0, [x19, #448]
  42ab8c:	b	42ac24 <nftw@plt+0x280a4>
  42ab90:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ab94:	add	x2, x2, #0x1e8
  42ab98:	mov	w1, #0xa1d                 	// #2589
  42ab9c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42aba0:	add	x0, x0, #0xb98
  42aba4:	bl	408d8c <nftw@plt+0x620c>
  42aba8:	mov	x0, x19
  42abac:	bl	429308 <nftw@plt+0x26788>
  42abb0:	mov	x20, x0
  42abb4:	b	42ac5c <nftw@plt+0x280dc>
  42abb8:	ldrb	w0, [x19, #25]
  42abbc:	cmp	w0, #0x1
  42abc0:	b.eq	42ac70 <nftw@plt+0x280f0>  // b.none
  42abc4:	and	w1, w1, #0x1
  42abc8:	mov	x0, x19
  42abcc:	bl	41deb8 <nftw@plt+0x1b338>
  42abd0:	cbz	w0, 42ac7c <nftw@plt+0x280fc>
  42abd4:	ldrb	w0, [x19, #156]
  42abd8:	cmp	w0, #0x53
  42abdc:	b.eq	42ac10 <nftw@plt+0x28090>  // b.none
  42abe0:	mov	x20, x21
  42abe4:	b	42ac7c <nftw@plt+0x280fc>
  42abe8:	ldrb	w0, [x19, #16]
  42abec:	cbnz	w0, 42aca0 <nftw@plt+0x28120>
  42abf0:	ldrb	w0, [x19, #32]
  42abf4:	cbnz	w0, 42aca0 <nftw@plt+0x28120>
  42abf8:	strb	wzr, [x19, #440]
  42abfc:	ldrb	w0, [x19, #18]
  42ac00:	cbz	w0, 42aca0 <nftw@plt+0x28120>
  42ac04:	ldrb	w0, [x20, #4]
  42ac08:	cmp	w0, #0x16
  42ac0c:	b.eq	42aca0 <nftw@plt+0x28120>  // b.none
  42ac10:	ldr	x0, [x19, #488]
  42ac14:	ldr	x2, [x19, #448]
  42ac18:	ldr	x1, [x0, #24]
  42ac1c:	cmp	x2, x1
  42ac20:	b.eq	42ab7c <nftw@plt+0x27ffc>  // b.none
  42ac24:	ldr	x20, [x19, #448]
  42ac28:	ldr	x0, [x19, #488]
  42ac2c:	ldr	x1, [x0, #16]
  42ac30:	cmp	x20, x1
  42ac34:	b.cc	42ab90 <nftw@plt+0x28010>  // b.lo, b.ul, b.last
  42ac38:	ldr	x0, [x0, #24]
  42ac3c:	cmp	x20, x0
  42ac40:	b.cs	42ab90 <nftw@plt+0x28010>  // b.hs, b.nlast
  42ac44:	ldr	w0, [x19, #496]
  42ac48:	cbz	w0, 42aba8 <nftw@plt+0x28028>
  42ac4c:	sub	w0, w0, #0x1
  42ac50:	str	w0, [x19, #496]
  42ac54:	add	x0, x20, #0x18
  42ac58:	str	x0, [x19, #448]
  42ac5c:	ldrh	w1, [x20, #6]
  42ac60:	tbz	w1, #6, 42abe8 <nftw@plt+0x28068>
  42ac64:	ldrb	w0, [x20, #4]
  42ac68:	cmp	w0, #0x25
  42ac6c:	b.eq	42abb8 <nftw@plt+0x28038>  // b.none
  42ac70:	ldrb	w0, [x19, #32]
  42ac74:	cmp	w0, #0x0
  42ac78:	csel	x20, x21, x20, ne  // ne = any
  42ac7c:	ldr	x3, [x19, #904]
  42ac80:	cbz	x3, 42abe8 <nftw@plt+0x28068>
  42ac84:	ldrb	w0, [x19, #18]
  42ac88:	cbnz	w0, 42abe8 <nftw@plt+0x28068>
  42ac8c:	ldrb	w2, [x19, #25]
  42ac90:	mov	x1, x20
  42ac94:	mov	x0, x19
  42ac98:	blr	x3
  42ac9c:	b	42abe8 <nftw@plt+0x28068>
  42aca0:	mov	x0, x20
  42aca4:	ldp	x19, x20, [sp, #16]
  42aca8:	ldr	x21, [sp, #32]
  42acac:	ldp	x29, x30, [sp], #48
  42acb0:	ret
  42acb4:	stp	x29, x30, [sp, #-64]!
  42acb8:	mov	x29, sp
  42acbc:	stp	x19, x20, [sp, #16]
  42acc0:	stp	x21, x22, [sp, #32]
  42acc4:	mov	x22, x0
  42acc8:	mov	w19, w1
  42accc:	ldr	x21, [x0, #136]
  42acd0:	ldr	x20, [x21, #8]
  42acd4:	cbnz	x20, 42ace4 <nftw@plt+0x28164>
  42acd8:	str	x23, [sp, #48]
  42acdc:	b	42ad08 <nftw@plt+0x28188>
  42ace0:	mov	x20, x1
  42ace4:	mov	x0, x21
  42ace8:	bl	42740c <nftw@plt+0x2488c>
  42acec:	cmp	w0, w19
  42acf0:	b.gt	42ad24 <nftw@plt+0x281a4>
  42acf4:	sub	w19, w19, w0
  42acf8:	ldr	x1, [x20, #8]
  42acfc:	mov	x21, x20
  42ad00:	cbnz	x1, 42ace0 <nftw@plt+0x28160>
  42ad04:	str	x23, [sp, #48]
  42ad08:	ldr	w0, [x22, #500]
  42ad0c:	add	w0, w0, #0x1
  42ad10:	str	w0, [x22, #500]
  42ad14:	ldr	x23, [x22, #904]
  42ad18:	str	xzr, [x22, #904]
  42ad1c:	mov	w21, w19
  42ad20:	b	42ad78 <nftw@plt+0x281f8>
  42ad24:	ldr	w0, [x21, #48]
  42ad28:	cmp	w0, #0x1
  42ad2c:	b.eq	42ad44 <nftw@plt+0x281c4>  // b.none
  42ad30:	tst	w0, #0xfffffffd
  42ad34:	b.ne	42ad58 <nftw@plt+0x281d8>  // b.any
  42ad38:	ldr	x0, [x21, #16]
  42ad3c:	ldr	x20, [x0, w19, sxtw #3]
  42ad40:	b	42adc0 <nftw@plt+0x28240>
  42ad44:	sbfiz	x20, x19, #1, #32
  42ad48:	add	x19, x20, w19, sxtw
  42ad4c:	ldr	x20, [x21, #16]
  42ad50:	add	x20, x20, x19, lsl #3
  42ad54:	b	42adc0 <nftw@plt+0x28240>
  42ad58:	str	x23, [sp, #48]
  42ad5c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ad60:	add	x2, x2, #0x1f8
  42ad64:	mov	w1, #0x9ad                 	// #2477
  42ad68:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  42ad6c:	add	x0, x0, #0xb98
  42ad70:	bl	408d8c <nftw@plt+0x620c>
  42ad74:	mov	w21, w1
  42ad78:	mov	x0, x22
  42ad7c:	bl	42ab60 <nftw@plt+0x27fe0>
  42ad80:	mov	x20, x0
  42ad84:	ldrb	w0, [x0, #4]
  42ad88:	cmp	w0, #0x16
  42ad8c:	b.eq	42ad9c <nftw@plt+0x2821c>  // b.none
  42ad90:	sub	w1, w21, #0x1
  42ad94:	cbnz	w21, 42ad74 <nftw@plt+0x281f4>
  42ad98:	b	42ada0 <nftw@plt+0x28220>
  42ad9c:	sub	w1, w21, #0x1
  42ada0:	sub	w1, w19, w1
  42ada4:	mov	x0, x22
  42ada8:	bl	42e898 <nftw@plt+0x2bd18>
  42adac:	ldr	w0, [x22, #500]
  42adb0:	sub	w0, w0, #0x1
  42adb4:	str	w0, [x22, #500]
  42adb8:	str	x23, [x22, #904]
  42adbc:	ldr	x23, [sp, #48]
  42adc0:	mov	x0, x20
  42adc4:	ldp	x19, x20, [sp, #16]
  42adc8:	ldp	x21, x22, [sp, #32]
  42adcc:	ldp	x29, x30, [sp], #64
  42add0:	ret
  42add4:	stp	x29, x30, [sp, #-48]!
  42add8:	mov	x29, sp
  42addc:	stp	x19, x20, [sp, #16]
  42ade0:	str	x21, [sp, #32]
  42ade4:	mov	x20, x0
  42ade8:	mov	x21, x1
  42adec:	mov	x0, x1
  42adf0:	bl	42763c <nftw@plt+0x24abc>
  42adf4:	add	w1, w0, #0x1
  42adf8:	mov	x0, x20
  42adfc:	bl	4283c0 <nftw@plt+0x25840>
  42ae00:	mov	x19, x0
  42ae04:	mov	w3, #0x0                   	// #0
  42ae08:	mov	x2, x0
  42ae0c:	mov	x1, x21
  42ae10:	mov	x0, x20
  42ae14:	bl	427708 <nftw@plt+0x24b88>
  42ae18:	strb	wzr, [x0]
  42ae1c:	mov	x0, x19
  42ae20:	ldp	x19, x20, [sp, #16]
  42ae24:	ldr	x21, [sp, #32]
  42ae28:	ldp	x29, x30, [sp], #48
  42ae2c:	ret
  42ae30:	stp	x29, x30, [sp, #-32]!
  42ae34:	mov	x29, sp
  42ae38:	stp	x19, x20, [sp, #16]
  42ae3c:	mov	x20, x0
  42ae40:	mov	x19, x1
  42ae44:	ldr	x1, [x0, #56]
  42ae48:	ldr	x0, [x1, #16]
  42ae4c:	ldr	x2, [x1, #24]
  42ae50:	sub	x2, x2, x0
  42ae54:	cmp	x2, x19
  42ae58:	b.cc	42ae70 <nftw@plt+0x282f0>  // b.lo, b.ul, b.last
  42ae5c:	add	x19, x0, x19
  42ae60:	str	x19, [x1, #16]
  42ae64:	ldp	x19, x20, [sp, #16]
  42ae68:	ldp	x29, x30, [sp], #32
  42ae6c:	ret
  42ae70:	mov	x1, x19
  42ae74:	mov	x0, x20
  42ae78:	bl	428168 <nftw@plt+0x255e8>
  42ae7c:	mov	x1, x0
  42ae80:	ldr	x0, [x20, #56]
  42ae84:	str	x0, [x1]
  42ae88:	str	x1, [x20, #56]
  42ae8c:	ldr	x0, [x1, #16]
  42ae90:	b	42ae5c <nftw@plt+0x282dc>
  42ae94:	stp	x29, x30, [sp, #-48]!
  42ae98:	mov	x29, sp
  42ae9c:	stp	x19, x20, [sp, #16]
  42aea0:	str	x21, [sp, #32]
  42aea4:	mov	x19, x1
  42aea8:	ldr	x2, [x0, #56]
  42aeac:	ldr	x21, [x2, #16]
  42aeb0:	ldr	x0, [x0, #1088]
  42aeb4:	ldr	x1, [x0, #104]
  42aeb8:	cbz	x1, 42aee8 <nftw@plt+0x28368>
  42aebc:	mov	x0, x19
  42aec0:	blr	x1
  42aec4:	mov	x20, x0
  42aec8:	mov	x2, x19
  42aecc:	mov	x1, x21
  42aed0:	bl	402490 <memcpy@plt>
  42aed4:	mov	x0, x20
  42aed8:	ldp	x19, x20, [sp, #16]
  42aedc:	ldr	x21, [sp, #32]
  42aee0:	ldp	x29, x30, [sp], #48
  42aee4:	ret
  42aee8:	add	x19, x21, x19
  42aeec:	str	x19, [x2, #16]
  42aef0:	mov	x20, x21
  42aef4:	b	42aed4 <nftw@plt+0x28354>
  42aef8:	ldrb	w1, [x0, #4]
  42aefc:	sbfiz	x2, x1, #4, #32
  42af00:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42af04:	add	x0, x0, #0x660
  42af08:	ldr	w0, [x0, x2]
  42af0c:	cmp	w0, #0x2
  42af10:	b.eq	42af20 <nftw@plt+0x283a0>  // b.none
  42af14:	b.hi	42af24 <nftw@plt+0x283a4>  // b.pmore
  42af18:	cbz	w0, 42af58 <nftw@plt+0x283d8>
  42af1c:	mov	w0, #0x0                   	// #0
  42af20:	ret
  42af24:	cmp	w0, #0x3
  42af28:	b.ne	42af50 <nftw@plt+0x283d0>  // b.any
  42af2c:	cmp	w1, #0x50
  42af30:	b.eq	42af20 <nftw@plt+0x283a0>  // b.none
  42af34:	mov	w0, #0x1                   	// #1
  42af38:	cmp	w1, #0x53
  42af3c:	b.eq	42af20 <nftw@plt+0x283a0>  // b.none
  42af40:	cmp	w1, #0x51
  42af44:	cset	w0, ne  // ne = any
  42af48:	add	w0, w0, #0x5
  42af4c:	b	42af20 <nftw@plt+0x283a0>
  42af50:	mov	w0, #0x6                   	// #6
  42af54:	b	42af20 <nftw@plt+0x283a0>
  42af58:	cmp	w1, #0x26
  42af5c:	mov	w0, #0x4                   	// #4
  42af60:	mov	w1, #0x6                   	// #6
  42af64:	csel	w0, w0, w1, eq  // eq = none
  42af68:	b	42af20 <nftw@plt+0x283a0>
  42af6c:	str	w1, [x0, #1408]
  42af70:	ret
  42af74:	str	wzr, [x0, #1408]
  42af78:	ret
  42af7c:	ldr	w2, [x0]
  42af80:	ldr	w1, [x0, #4]
  42af84:	add	w2, w2, w1
  42af88:	ldr	x3, [x0, #16]
  42af8c:	ldr	w1, [x0, #8]
  42af90:	add	w0, w1, w3
  42af94:	add	w0, w2, w0
  42af98:	ret
  42af9c:	mov	x2, x0
  42afa0:	ldr	x3, [x0]
  42afa4:	ldr	x0, [x1]
  42afa8:	cmp	x3, x0
  42afac:	b.eq	42afb8 <nftw@plt+0x28438>  // b.none
  42afb0:	mov	w0, #0x0                   	// #0
  42afb4:	ret
  42afb8:	ldr	w4, [x2, #8]
  42afbc:	ldr	w3, [x1, #8]
  42afc0:	mov	w0, #0x0                   	// #0
  42afc4:	cmp	w4, w3
  42afc8:	b.ne	42afb4 <nftw@plt+0x28434>  // b.any
  42afcc:	ldr	x2, [x2, #16]
  42afd0:	ldr	x0, [x1, #16]
  42afd4:	cmp	x2, x0
  42afd8:	cset	w0, eq  // eq = none
  42afdc:	b	42afb4 <nftw@plt+0x28434>
  42afe0:	ldr	x2, [x0]
  42afe4:	ldr	x1, [x1]
  42afe8:	add	x2, x2, x1
  42afec:	str	x2, [x0]
  42aff0:	mov	w0, #0x1                   	// #1
  42aff4:	ret
  42aff8:	mov	x8, x0
  42affc:	tbnz	w1, #31, 42b05c <nftw@plt+0x284dc>
  42b000:	cmp	x8, #0x0
  42b004:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  42b008:	b.ls	42b0c0 <nftw@plt+0x28540>  // b.plast
  42b00c:	ldr	w4, [x8, #16]
  42b010:	ldr	x7, [x8]
  42b014:	sbfiz	x2, x4, #1, #32
  42b018:	add	x2, x2, w4, sxtw
  42b01c:	lsl	x2, x2, #3
  42b020:	add	x0, x7, x2
  42b024:	ldr	w2, [x7, x2]
  42b028:	mov	w3, #0x0                   	// #0
  42b02c:	cmp	w1, w2
  42b030:	b.cc	42b0a0 <nftw@plt+0x28520>  // b.lo, b.ul, b.last
  42b034:	ldr	w2, [x8, #12]
  42b038:	add	w3, w4, #0x1
  42b03c:	cmp	w3, w2
  42b040:	b.eq	42b0bc <nftw@plt+0x2853c>  // b.none
  42b044:	ldr	w3, [x0, #24]
  42b048:	cmp	w1, w3
  42b04c:	b.cc	42b0bc <nftw@plt+0x2853c>  // b.lo, b.ul, b.last
  42b050:	mov	w3, w4
  42b054:	mov	w4, w2
  42b058:	b	42b0a0 <nftw@plt+0x28520>
  42b05c:	and	x0, x1, #0x7fffffff
  42b060:	lsl	w1, w1, #1
  42b064:	add	x1, x1, x0
  42b068:	lsl	x1, x1, #3
  42b06c:	ldr	x0, [x8, #104]
  42b070:	ldr	w1, [x0, x1]
  42b074:	b	42b000 <nftw@plt+0x28480>
  42b078:	add	w2, w3, w4
  42b07c:	lsr	w5, w2, #1
  42b080:	lsr	w6, w2, #1
  42b084:	and	x2, x2, #0xfffffffe
  42b088:	add	x2, x2, x6
  42b08c:	lsl	x2, x2, #3
  42b090:	ldr	w2, [x7, x2]
  42b094:	cmp	w1, w2
  42b098:	csel	w3, w3, w5, cc  // cc = lo, ul, last
  42b09c:	csel	w4, w5, w4, cc  // cc = lo, ul, last
  42b0a0:	sub	w2, w4, w3
  42b0a4:	cmp	w2, #0x1
  42b0a8:	b.hi	42b078 <nftw@plt+0x284f8>  // b.pmore
  42b0ac:	str	w3, [x8, #16]
  42b0b0:	sbfiz	x0, x3, #1, #32
  42b0b4:	add	x0, x0, w3, sxtw
  42b0b8:	add	x0, x7, x0, lsl #3
  42b0bc:	ret
  42b0c0:	mov	x0, #0x0                   	// #0
  42b0c4:	b	42b0bc <nftw@plt+0x2853c>
  42b0c8:	stp	x29, x30, [sp, #-80]!
  42b0cc:	mov	x29, sp
  42b0d0:	stp	x19, x20, [sp, #16]
  42b0d4:	stp	x21, x22, [sp, #32]
  42b0d8:	stp	x25, x26, [sp, #64]
  42b0dc:	mov	x20, x0
  42b0e0:	mov	w21, w1
  42b0e4:	mov	w0, #0x6fffffff            	// #1879048191
  42b0e8:	cmp	w1, w0
  42b0ec:	b.ls	42b1b8 <nftw@plt+0x28638>  // b.plast
  42b0f0:	ldr	w0, [x20, #32]
  42b0f4:	add	x22, x20, #0x24
  42b0f8:	ldr	w19, [x20, #36]
  42b0fc:	cmp	w0, w19
  42b100:	b.eq	42b134 <nftw@plt+0x285b4>  // b.none
  42b104:	ubfiz	x19, x19, #5, #32
  42b108:	ldr	x0, [x20, #24]
  42b10c:	add	x0, x0, x19
  42b110:	ldr	w1, [x22]
  42b114:	add	w1, w1, #0x1
  42b118:	str	w1, [x22]
  42b11c:	str	w21, [x0]
  42b120:	ldp	x19, x20, [sp, #16]
  42b124:	ldp	x21, x22, [sp, #32]
  42b128:	ldp	x25, x26, [sp, #64]
  42b12c:	ldp	x29, x30, [sp], #80
  42b130:	ret
  42b134:	stp	x23, x24, [sp, #48]
  42b138:	add	x25, x20, #0x20
  42b13c:	cbz	w0, 42b1fc <nftw@plt+0x2867c>
  42b140:	lsl	w0, w0, #1
  42b144:	mov	w1, #0x6fffffff            	// #1879048191
  42b148:	cmp	w21, w1
  42b14c:	b.ls	42b1f0 <nftw@plt+0x28670>  // b.plast
  42b150:	ldr	x26, [x20, #24]
  42b154:	mov	x24, #0x20                  	// #32
  42b158:	mov	w0, w0
  42b15c:	ldr	x1, [x20, #80]
  42b160:	mul	x0, x0, x24
  42b164:	blr	x1
  42b168:	udiv	x23, x0, x24
  42b16c:	and	x1, x23, #0xffffffff
  42b170:	ldr	x2, [x20, #72]
  42b174:	mul	x1, x1, x24
  42b178:	mov	x0, x26
  42b17c:	blr	x2
  42b180:	mov	x26, x0
  42b184:	sub	w2, w23, w19
  42b188:	mov	w0, w19
  42b18c:	mul	x2, x2, x24
  42b190:	mov	w1, #0x0                   	// #0
  42b194:	madd	x0, x0, x24, x26
  42b198:	bl	4026f0 <memset@plt>
  42b19c:	mov	w0, #0x6fffffff            	// #1879048191
  42b1a0:	cmp	w21, w0
  42b1a4:	b.ls	42b204 <nftw@plt+0x28684>  // b.plast
  42b1a8:	str	x26, [x20, #24]
  42b1ac:	str	w23, [x25]
  42b1b0:	ldp	x23, x24, [sp, #48]
  42b1b4:	b	42b104 <nftw@plt+0x28584>
  42b1b8:	ldr	w0, [x20, #8]
  42b1bc:	add	x22, x20, #0xc
  42b1c0:	ldr	w19, [x20, #12]
  42b1c4:	cmp	w0, w19
  42b1c8:	b.eq	42b1e0 <nftw@plt+0x28660>  // b.none
  42b1cc:	ubfiz	x0, x19, #1, #32
  42b1d0:	add	x19, x0, w19, uxtw
  42b1d4:	ldr	x0, [x20]
  42b1d8:	add	x0, x0, x19, lsl #3
  42b1dc:	b	42b110 <nftw@plt+0x28590>
  42b1e0:	stp	x23, x24, [sp, #48]
  42b1e4:	add	x25, x20, #0x8
  42b1e8:	cbnz	w0, 42b140 <nftw@plt+0x285c0>
  42b1ec:	mov	w0, #0x100                 	// #256
  42b1f0:	ldr	x26, [x20]
  42b1f4:	mov	x24, #0x18                  	// #24
  42b1f8:	b	42b158 <nftw@plt+0x285d8>
  42b1fc:	mov	w0, #0x100                 	// #256
  42b200:	b	42b150 <nftw@plt+0x285d0>
  42b204:	str	x26, [x20]
  42b208:	str	w23, [x25]
  42b20c:	ldp	x23, x24, [sp, #48]
  42b210:	b	42b1cc <nftw@plt+0x2864c>
  42b214:	ldr	x0, [x0, #88]
  42b218:	cbz	x0, 42b230 <nftw@plt+0x286b0>
  42b21c:	stp	x29, x30, [sp, #-16]!
  42b220:	mov	x29, sp
  42b224:	bl	449720 <nftw@plt+0x46ba0>
  42b228:	ldp	x29, x30, [sp], #16
  42b22c:	ret
  42b230:	ret
  42b234:	stp	x29, x30, [sp, #-48]!
  42b238:	mov	x29, sp
  42b23c:	stp	x19, x20, [sp, #16]
  42b240:	mov	x20, x0
  42b244:	mov	x3, #0x0                   	// #0
  42b248:	adrp	x2, 42a000 <nftw@plt+0x27480>
  42b24c:	add	x2, x2, #0xf9c
  42b250:	adrp	x1, 42a000 <nftw@plt+0x27480>
  42b254:	add	x1, x1, #0xf7c
  42b258:	mov	x0, #0x64                  	// #100
  42b25c:	bl	4496d8 <nftw@plt+0x46b58>
  42b260:	str	x0, [x20, #88]
  42b264:	ldr	w0, [x20, #96]
  42b268:	cbz	w0, 42b2a8 <nftw@plt+0x28728>
  42b26c:	str	x21, [sp, #32]
  42b270:	mov	w19, #0x0                   	// #0
  42b274:	mov	w21, #0x1                   	// #1
  42b278:	ubfiz	x1, x19, #1, #32
  42b27c:	add	x1, x1, w19, uxtw
  42b280:	ldr	x0, [x20, #104]
  42b284:	mov	w2, w21
  42b288:	add	x1, x0, x1, lsl #3
  42b28c:	ldr	x0, [x20, #88]
  42b290:	bl	449c54 <nftw@plt+0x470d4>
  42b294:	add	w19, w19, #0x1
  42b298:	ldr	w0, [x20, #96]
  42b29c:	cmp	w0, w19
  42b2a0:	b.hi	42b278 <nftw@plt+0x286f8>  // b.pmore
  42b2a4:	ldr	x21, [sp, #32]
  42b2a8:	ldp	x19, x20, [sp, #16]
  42b2ac:	ldp	x29, x30, [sp], #48
  42b2b0:	ret
  42b2b4:	and	x2, x1, #0x7fffffff
  42b2b8:	ldr	x0, [x0, #104]
  42b2bc:	lsl	w1, w1, #1
  42b2c0:	add	x1, x1, x2
  42b2c4:	add	x1, x0, x1, lsl #3
  42b2c8:	ldr	x0, [x1, #16]
  42b2cc:	ret
  42b2d0:	and	x2, x1, #0x7fffffff
  42b2d4:	ldr	x0, [x0, #104]
  42b2d8:	lsl	w1, w1, #1
  42b2dc:	add	x1, x1, x2
  42b2e0:	lsl	x1, x1, #3
  42b2e4:	ldr	w0, [x0, x1]
  42b2e8:	ret
  42b2ec:	stp	x29, x30, [sp, #-32]!
  42b2f0:	mov	x29, sp
  42b2f4:	stp	x19, x20, [sp, #16]
  42b2f8:	mov	x19, x0
  42b2fc:	mov	w20, w1
  42b300:	stp	xzr, xzr, [x0]
  42b304:	stp	xzr, xzr, [x0, #16]
  42b308:	stp	xzr, xzr, [x0, #32]
  42b30c:	stp	xzr, xzr, [x0, #48]
  42b310:	stp	xzr, xzr, [x0, #64]
  42b314:	stp	xzr, xzr, [x0, #80]
  42b318:	stp	xzr, xzr, [x0, #96]
  42b31c:	stp	xzr, xzr, [x0, #112]
  42b320:	str	xzr, [x0, #128]
  42b324:	adrp	x0, 44a000 <nftw@plt+0x47480>
  42b328:	add	x0, x0, #0x790
  42b32c:	str	x0, [x19, #72]
  42b330:	mov	w0, #0x1                   	// #1
  42b334:	str	w0, [x19, #56]
  42b338:	str	w0, [x19, #60]
  42b33c:	mov	x3, #0x0                   	// #0
  42b340:	adrp	x2, 42a000 <nftw@plt+0x27480>
  42b344:	add	x2, x2, #0xf9c
  42b348:	adrp	x1, 42a000 <nftw@plt+0x27480>
  42b34c:	add	x1, x1, #0xf7c
  42b350:	mov	x0, #0x64                  	// #100
  42b354:	bl	4496d8 <nftw@plt+0x46b58>
  42b358:	str	x0, [x19, #88]
  42b35c:	str	w20, [x19, #112]
  42b360:	ldp	x19, x20, [sp, #16]
  42b364:	ldp	x29, x30, [sp], #32
  42b368:	ret
  42b36c:	stp	x29, x30, [sp, #-16]!
  42b370:	mov	x29, sp
  42b374:	ldr	w1, [x1, #20]
  42b378:	bl	42aff8 <nftw@plt+0x28478>
  42b37c:	ldp	x29, x30, [sp], #16
  42b380:	ret
  42b384:	stp	x29, x30, [sp, #-48]!
  42b388:	mov	x29, sp
  42b38c:	stp	x19, x20, [sp, #16]
  42b390:	mov	x20, x0
  42b394:	ldr	w19, [x0, #12]
  42b398:	sub	w19, w19, #0x1
  42b39c:	sbfiz	x0, x19, #1, #32
  42b3a0:	add	x19, x0, w19, sxtw
  42b3a4:	ldr	x0, [x20]
  42b3a8:	add	x19, x0, x19, lsl #3
  42b3ac:	ldr	w0, [x19, #20]
  42b3b0:	cbz	w0, 42b3f0 <nftw@plt+0x28870>
  42b3b4:	stp	x21, x22, [sp, #32]
  42b3b8:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42b3bc:	add	x21, x21, #0xc00
  42b3c0:	adrp	x22, 48d000 <_obstack_memory_used@@Base+0x429fc>
  42b3c4:	ldr	x2, [x19, #8]
  42b3c8:	mov	x1, x21
  42b3cc:	ldr	x0, [x22, #1392]
  42b3d0:	bl	402b30 <fprintf@plt>
  42b3d4:	mov	x1, x19
  42b3d8:	mov	x0, x20
  42b3dc:	bl	42b36c <nftw@plt+0x287ec>
  42b3e0:	mov	x19, x0
  42b3e4:	ldr	w1, [x0, #20]
  42b3e8:	cbnz	w1, 42b3c4 <nftw@plt+0x28844>
  42b3ec:	ldp	x21, x22, [sp, #32]
  42b3f0:	ldp	x19, x20, [sp, #16]
  42b3f4:	ldp	x29, x30, [sp], #48
  42b3f8:	ret
  42b3fc:	stp	x29, x30, [sp, #-80]!
  42b400:	mov	x29, sp
  42b404:	stp	x19, x20, [sp, #16]
  42b408:	stp	x21, x22, [sp, #32]
  42b40c:	stp	x23, x24, [sp, #48]
  42b410:	str	x25, [sp, #64]
  42b414:	mov	x19, x0
  42b418:	mov	w21, w1
  42b41c:	mov	w25, w2
  42b420:	mov	x23, x3
  42b424:	mov	w24, w4
  42b428:	ldr	w1, [x0, #56]
  42b42c:	add	w22, w1, #0x1
  42b430:	mov	w0, #0x5fffffff            	// #1610612735
  42b434:	cmp	w1, w0
  42b438:	b.hi	42b45c <nftw@plt+0x288dc>  // b.pmore
  42b43c:	ldr	w2, [x19, #120]
  42b440:	mov	w0, #0x1                   	// #1
  42b444:	lsl	w0, w0, w2
  42b448:	add	w22, w0, w1
  42b44c:	neg	w0, w0
  42b450:	and	w0, w22, w0
  42b454:	cmp	w2, #0x0
  42b458:	csel	w22, w0, w22, ne  // ne = any
  42b45c:	cmp	w21, #0x1
  42b460:	b.eq	42b53c <nftw@plt+0x289bc>  // b.none
  42b464:	mov	w0, #0x6fffffff            	// #1879048191
  42b468:	cmp	w22, w0
  42b46c:	csel	w22, w22, wzr, ls  // ls = plast
  42b470:	mov	w1, w22
  42b474:	mov	x0, x19
  42b478:	bl	42b0c8 <nftw@plt+0x28548>
  42b47c:	mov	x20, x0
  42b480:	strb	w21, [x0, #4]
  42b484:	cbz	x23, 42b498 <nftw@plt+0x28918>
  42b488:	ldrb	w0, [x23]
  42b48c:	cmp	w0, #0x0
  42b490:	ccmp	w21, #0x3, #0x4, eq  // eq = none
  42b494:	b.ne	42b578 <nftw@plt+0x289f8>  // b.any
  42b498:	cmp	w21, #0x3
  42b49c:	b.eq	42b5bc <nftw@plt+0x28a3c>  // b.none
  42b4a0:	mov	x0, #0x0                   	// #0
  42b4a4:	cmp	w21, #0x1
  42b4a8:	b.eq	42b584 <nftw@plt+0x28a04>  // b.none
  42b4ac:	strb	w25, [x20, #5]
  42b4b0:	str	x23, [x20, #8]
  42b4b4:	str	w24, [x20, #16]
  42b4b8:	ldr	w1, [x19, #12]
  42b4bc:	sub	w1, w1, #0x1
  42b4c0:	str	w1, [x19, #16]
  42b4c4:	strb	wzr, [x20, #6]
  42b4c8:	strb	wzr, [x20, #7]
  42b4cc:	str	w22, [x19, #56]
  42b4d0:	str	w22, [x19, #60]
  42b4d4:	str	wzr, [x19, #64]
  42b4d8:	cbnz	w21, 42b628 <nftw@plt+0x28aa8>
  42b4dc:	ldr	w0, [x19, #48]
  42b4e0:	cbz	w0, 42b508 <nftw@plt+0x28988>
  42b4e4:	ldur	w2, [x20, #-24]
  42b4e8:	ldr	w0, [x20]
  42b4ec:	sub	w0, w0, #0x1
  42b4f0:	sub	w0, w0, w2
  42b4f4:	ldurb	w3, [x20, #-18]
  42b4f8:	mov	w1, #0xffffffff            	// #-1
  42b4fc:	lsl	w1, w1, w3
  42b500:	and	w0, w0, w1
  42b504:	add	w0, w0, w2
  42b508:	str	w0, [x20, #20]
  42b50c:	ldr	w21, [x19, #48]
  42b510:	add	w0, w21, #0x1
  42b514:	str	w0, [x19, #48]
  42b518:	ldrb	w0, [x19, #52]
  42b51c:	cbnz	w0, 42b5c8 <nftw@plt+0x28a48>
  42b520:	mov	x0, x20
  42b524:	ldp	x19, x20, [sp, #16]
  42b528:	ldp	x21, x22, [sp, #32]
  42b52c:	ldp	x23, x24, [sp, #48]
  42b530:	ldr	x25, [sp, #64]
  42b534:	ldp	x29, x30, [sp], #80
  42b538:	ret
  42b53c:	ldr	w0, [x19, #12]
  42b540:	sub	w0, w0, #0x1
  42b544:	ldr	x1, [x19]
  42b548:	sbfiz	x2, x0, #1, #32
  42b54c:	add	x0, x2, w0, sxtw
  42b550:	add	x0, x1, x0, lsl #3
  42b554:	ldr	w0, [x0, #20]
  42b558:	cmp	w0, #0x0
  42b55c:	ccmp	x23, #0x0, #0x0, eq  // eq = none
  42b560:	b.ne	42b464 <nftw@plt+0x288e4>  // b.any
  42b564:	ldr	w0, [x19, #48]
  42b568:	sub	w0, w0, #0x1
  42b56c:	str	w0, [x19, #48]
  42b570:	mov	x20, #0x0                   	// #0
  42b574:	b	42b520 <nftw@plt+0x289a0>
  42b578:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42b57c:	add	x23, x23, #0xc30
  42b580:	b	42b4a0 <nftw@plt+0x28920>
  42b584:	sub	x1, x20, #0x18
  42b588:	mov	x0, x19
  42b58c:	bl	42b36c <nftw@plt+0x287ec>
  42b590:	cbnz	x23, 42b4ac <nftw@plt+0x2892c>
  42b594:	ldr	x23, [x0, #8]
  42b598:	ldr	w24, [x0, #24]
  42b59c:	ldr	w1, [x0]
  42b5a0:	sub	w24, w24, w1
  42b5a4:	ldrb	w1, [x0, #6]
  42b5a8:	lsr	w24, w24, w1
  42b5ac:	ldr	w4, [x0, #16]
  42b5b0:	add	w24, w24, w4
  42b5b4:	ldrb	w25, [x0, #5]
  42b5b8:	b	42b4ac <nftw@plt+0x2892c>
  42b5bc:	mov	w21, #0x2                   	// #2
  42b5c0:	mov	x0, #0x0                   	// #0
  42b5c4:	b	42b4ac <nftw@plt+0x2892c>
  42b5c8:	adrp	x22, 48d000 <_obstack_memory_used@@Base+0x429fc>
  42b5cc:	mov	w19, #0x2e                  	// #46
  42b5d0:	mov	w23, #0x2e                  	// #46
  42b5d4:	cbz	w21, 42b600 <nftw@plt+0x28a80>
  42b5d8:	ldr	x0, [x22, #1392]
  42b5dc:	ldr	x1, [x0, #40]
  42b5e0:	ldr	x2, [x0, #48]
  42b5e4:	cmp	x1, x2
  42b5e8:	b.cs	42b61c <nftw@plt+0x28a9c>  // b.hs, b.nlast
  42b5ec:	add	x2, x1, #0x1
  42b5f0:	str	x2, [x0, #40]
  42b5f4:	strb	w19, [x1]
  42b5f8:	subs	w21, w21, #0x1
  42b5fc:	b.ne	42b5d8 <nftw@plt+0x28a58>  // b.any
  42b600:	ldr	x2, [x20, #8]
  42b604:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42b608:	add	x1, x1, #0xc38
  42b60c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  42b610:	ldr	x0, [x0, #1392]
  42b614:	bl	402b30 <fprintf@plt>
  42b618:	b	42b520 <nftw@plt+0x289a0>
  42b61c:	mov	w1, w23
  42b620:	bl	402800 <__overflow@plt>
  42b624:	b	42b5f8 <nftw@plt+0x28a78>
  42b628:	cmp	w21, #0x2
  42b62c:	b.eq	42b650 <nftw@plt+0x28ad0>  // b.none
  42b630:	cmp	w21, #0x1
  42b634:	b.ne	42b520 <nftw@plt+0x289a0>  // b.any
  42b638:	ldr	w1, [x19, #48]
  42b63c:	sub	w1, w1, #0x1
  42b640:	str	w1, [x19, #48]
  42b644:	ldr	w0, [x0, #20]
  42b648:	str	w0, [x20, #20]
  42b64c:	b	42b520 <nftw@plt+0x289a0>
  42b650:	ldur	w0, [x20, #-4]
  42b654:	str	w0, [x20, #20]
  42b658:	b	42b520 <nftw@plt+0x289a0>
  42b65c:	ldr	x0, [x0, #24]
  42b660:	cmp	x0, #0x0
  42b664:	cset	w0, ne  // ne = any
  42b668:	ret
  42b66c:	stp	x29, x30, [sp, #-64]!
  42b670:	mov	x29, sp
  42b674:	stp	x19, x20, [sp, #16]
  42b678:	stp	x21, x22, [sp, #32]
  42b67c:	str	x23, [sp, #48]
  42b680:	mov	x21, x0
  42b684:	mov	x23, x1
  42b688:	mov	w22, w2
  42b68c:	mov	w19, w3
  42b690:	ldr	w3, [x0, #36]
  42b694:	mov	w0, #0x80000000            	// #-2147483648
  42b698:	cbz	w3, 42b6ac <nftw@plt+0x28b2c>
  42b69c:	sub	w3, w3, #0x1
  42b6a0:	ldr	x0, [x21, #24]
  42b6a4:	sbfiz	x3, x3, #5, #32
  42b6a8:	ldr	w0, [x0, x3]
  42b6ac:	sub	w1, w0, w19
  42b6b0:	mov	x20, #0x0                   	// #0
  42b6b4:	mov	w0, #0x6fffffff            	// #1879048191
  42b6b8:	cmp	w1, w0
  42b6bc:	b.ls	42b708 <nftw@plt+0x28b88>  // b.plast
  42b6c0:	mov	x0, x21
  42b6c4:	bl	42b0c8 <nftw@plt+0x28548>
  42b6c8:	mov	x20, x0
  42b6cc:	str	x23, [x0, #8]
  42b6d0:	str	w19, [x0, #4]
  42b6d4:	ubfiz	x19, x19, #3, #31
  42b6d8:	ldr	x2, [x21, #72]
  42b6dc:	mov	x1, x19
  42b6e0:	mov	x0, #0x0                   	// #0
  42b6e4:	blr	x2
  42b6e8:	str	x0, [x20, #16]
  42b6ec:	str	w22, [x20, #24]
  42b6f0:	mov	x2, x19
  42b6f4:	mov	w1, #0x0                   	// #0
  42b6f8:	bl	4026f0 <memset@plt>
  42b6fc:	ldr	w0, [x21, #36]
  42b700:	sub	w0, w0, #0x1
  42b704:	str	w0, [x21, #40]
  42b708:	mov	x0, x20
  42b70c:	ldp	x19, x20, [sp, #16]
  42b710:	ldp	x21, x22, [sp, #32]
  42b714:	ldr	x23, [sp, #48]
  42b718:	ldp	x29, x30, [sp], #64
  42b71c:	ret
  42b720:	lsl	w4, w1, #1
  42b724:	lsl	w6, w1, #1
  42b728:	ldr	x5, [x0, #16]
  42b72c:	str	w2, [x5, x6, lsl #2]
  42b730:	add	w4, w4, #0x1
  42b734:	ldr	x2, [x0, #16]
  42b738:	str	w3, [x2, x4, lsl #2]
  42b73c:	ldr	w0, [x0]
  42b740:	add	w0, w1, w0
  42b744:	ret
  42b748:	stp	x29, x30, [sp, #-64]!
  42b74c:	mov	x29, sp
  42b750:	stp	x19, x20, [sp, #16]
  42b754:	stp	x21, x22, [sp, #32]
  42b758:	str	x23, [sp, #48]
  42b75c:	mov	x20, x0
  42b760:	mov	w22, w1
  42b764:	ldr	w4, [x0, #12]
  42b768:	sub	w4, w4, #0x1
  42b76c:	sbfiz	x0, x4, #1, #32
  42b770:	add	x4, x0, w4, sxtw
  42b774:	lsl	x4, x4, #3
  42b778:	ldr	x0, [x20]
  42b77c:	add	x5, x0, x4
  42b780:	ldr	w9, [x20, #56]
  42b784:	ldr	w3, [x20, #60]
  42b788:	ldr	w7, [x0, x4]
  42b78c:	ldrb	w4, [x5, #6]
  42b790:	ldr	w8, [x5, #16]
  42b794:	sub	w1, w3, w7
  42b798:	lsr	w1, w1, w4
  42b79c:	add	w1, w1, w8
  42b7a0:	ldrb	w10, [x5, #7]
  42b7a4:	subs	w6, w22, w1
  42b7a8:	b.mi	42b840 <nftw@plt+0x28cc0>  // b.first
  42b7ac:	cmp	w6, #0xa
  42b7b0:	b.le	42b7c0 <nftw@plt+0x28c40>
  42b7b4:	mul	w0, w6, w4
  42b7b8:	cmp	w0, #0x3e8
  42b7bc:	b.gt	42b840 <nftw@plt+0x28cc0>
  42b7c0:	sub	w11, w4, w10
  42b7c4:	mov	w0, #0x1                   	// #1
  42b7c8:	lsl	w0, w0, w11
  42b7cc:	cmp	w0, w2
  42b7d0:	b.ls	42b840 <nftw@plt+0x28cc0>  // b.plast
  42b7d4:	cmp	w2, #0x50
  42b7d8:	ccmp	w11, #0x9, #0x4, ls  // ls = plast
  42b7dc:	b.gt	42b840 <nftw@plt+0x28cc0>
  42b7e0:	cmp	w10, #0x0
  42b7e4:	mov	w0, #0x50000000            	// #1342177280
  42b7e8:	ccmp	w9, w0, #0x0, ne  // ne = any
  42b7ec:	b.hi	42b95c <nftw@plt+0x28ddc>  // b.pmore
  42b7f0:	mov	w0, #0x60000000            	// #1610612736
  42b7f4:	cmp	w9, w0
  42b7f8:	b.ls	42b830 <nftw@plt+0x28cb0>  // b.plast
  42b7fc:	ldr	w0, [x20, #64]
  42b800:	cmp	w0, #0x0
  42b804:	mov	w0, #0x6fffffff            	// #1879048191
  42b808:	ccmp	w9, w0, #0x2, eq  // eq = none
  42b80c:	b.ls	42b830 <nftw@plt+0x28cb0>  // b.plast
  42b810:	mov	w0, #0x0                   	// #0
  42b814:	mov	w2, #0x6fffffff            	// #1879048191
  42b818:	cmp	w9, w2
  42b81c:	b.hi	42b8f0 <nftw@plt+0x28d70>  // b.pmore
  42b820:	mov	w23, #0x0                   	// #0
  42b824:	mov	w19, #0x0                   	// #0
  42b828:	mov	w21, #0x0                   	// #0
  42b82c:	b	42b888 <nftw@plt+0x28d08>
  42b830:	ldr	w21, [x20, #64]
  42b834:	lsl	w0, w6, w4
  42b838:	add	w0, w0, w3
  42b83c:	b	42b8cc <nftw@plt+0x28d4c>
  42b840:	cmp	w2, #0x1, lsl #12
  42b844:	mov	w0, #0x60000000            	// #1610612736
  42b848:	ccmp	w9, w0, #0x2, ls  // ls = plast
  42b84c:	b.hi	42b810 <nftw@plt+0x28c90>  // b.pmore
  42b850:	mov	w23, #0x0                   	// #0
  42b854:	mov	w0, #0x50000000            	// #1342177280
  42b858:	cmp	w9, w0
  42b85c:	b.hi	42b864 <nftw@plt+0x28ce4>  // b.pmore
  42b860:	ldr	w23, [x20, #120]
  42b864:	cmp	w2, #0x7f
  42b868:	b.ls	42b904 <nftw@plt+0x28d84>  // b.plast
  42b86c:	mov	w3, #0x7                   	// #7
  42b870:	mov	w0, #0x1                   	// #1
  42b874:	add	w3, w3, #0x1
  42b878:	lsl	w21, w0, w3
  42b87c:	cmp	w21, w2
  42b880:	b.ls	42b874 <nftw@plt+0x28cf4>  // b.plast
  42b884:	add	w19, w23, w3
  42b888:	cmp	w6, #0x0
  42b88c:	ccmp	w1, w8, #0x0, ge  // ge = tcont
  42b890:	b.eq	42b910 <nftw@plt+0x28d90>  // b.none
  42b894:	mov	w4, w22
  42b898:	ldr	x3, [x5, #8]
  42b89c:	ldrb	w2, [x5, #5]
  42b8a0:	mov	w1, #0x2                   	// #2
  42b8a4:	mov	x0, x20
  42b8a8:	bl	42b3fc <nftw@plt+0x2887c>
  42b8ac:	mov	x5, x0
  42b8b0:	strb	w19, [x5, #6]
  42b8b4:	strb	w23, [x5, #7]
  42b8b8:	ldr	w3, [x5, #16]
  42b8bc:	sub	w3, w22, w3
  42b8c0:	lsl	w3, w3, w19
  42b8c4:	ldr	w0, [x5]
  42b8c8:	add	w0, w3, w0
  42b8cc:	mov	w1, #0x6fffffff            	// #1879048191
  42b8d0:	cmp	w0, w1
  42b8d4:	b.hi	42b954 <nftw@plt+0x28dd4>  // b.pmore
  42b8d8:	str	w0, [x20, #60]
  42b8dc:	ldr	w1, [x20, #56]
  42b8e0:	cmp	w1, w0
  42b8e4:	b.cs	42b8ec <nftw@plt+0x28d6c>  // b.hs, b.nlast
  42b8e8:	str	w0, [x20, #56]
  42b8ec:	str	w21, [x20, #64]
  42b8f0:	ldp	x19, x20, [sp, #16]
  42b8f4:	ldp	x21, x22, [sp, #32]
  42b8f8:	ldr	x23, [sp, #48]
  42b8fc:	ldp	x29, x30, [sp], #64
  42b900:	ret
  42b904:	mov	w3, #0x7                   	// #7
  42b908:	mov	w21, #0x80                  	// #128
  42b90c:	b	42b884 <nftw@plt+0x28d04>
  42b910:	mov	w0, #0x1                   	// #1
  42b914:	lsl	w0, w0, w4
  42b918:	sub	w0, w0, #0x1
  42b91c:	sub	w7, w9, w7
  42b920:	and	w0, w0, w7
  42b924:	lsr	w0, w0, w10
  42b928:	sub	w1, w19, w23
  42b92c:	lsr	w0, w0, w1
  42b930:	cbnz	w0, 42b894 <nftw@plt+0x28d14>
  42b934:	sub	w0, w22, w8
  42b938:	mov	w1, #0x20                  	// #32
  42b93c:	sub	w1, w1, w19
  42b940:	lsr	x0, x0, x1
  42b944:	cmp	x0, #0x0
  42b948:	ccmp	w10, w23, #0x0, eq  // eq = none
  42b94c:	b.gt	42b894 <nftw@plt+0x28d14>
  42b950:	b	42b8b0 <nftw@plt+0x28d30>
  42b954:	mov	w0, #0x0                   	// #0
  42b958:	b	42b8f0 <nftw@plt+0x28d70>
  42b95c:	cmp	w2, #0x1, lsl #12
  42b960:	mov	w0, #0x60000000            	// #1610612736
  42b964:	ccmp	w9, w0, #0x2, ls  // ls = plast
  42b968:	mov	w23, #0x0                   	// #0
  42b96c:	b.ls	42b864 <nftw@plt+0x28ce4>  // b.plast
  42b970:	b	42b810 <nftw@plt+0x28c90>
  42b974:	stp	x29, x30, [sp, #-32]!
  42b978:	mov	x29, sp
  42b97c:	stp	x19, x20, [sp, #16]
  42b980:	mov	x19, x0
  42b984:	mov	w20, w1
  42b988:	ldr	w0, [x0, #60]
  42b98c:	ldr	w1, [x19, #64]
  42b990:	cmp	w1, w20
  42b994:	b.hi	42ba08 <nftw@plt+0x28e88>  // b.pmore
  42b998:	cmp	w20, #0x1, lsl #12
  42b99c:	mov	w1, #0x60000000            	// #1610612736
  42b9a0:	ccmp	w0, w1, #0x2, ls  // ls = plast
  42b9a4:	b.hi	42ba3c <nftw@plt+0x28ebc>  // b.pmore
  42b9a8:	ldr	w1, [x19, #12]
  42b9ac:	sub	w1, w1, #0x1
  42b9b0:	sbfiz	x2, x1, #1, #32
  42b9b4:	add	x1, x2, w1, sxtw
  42b9b8:	lsl	x1, x1, #3
  42b9bc:	ldr	x3, [x19]
  42b9c0:	add	x2, x3, x1
  42b9c4:	ldr	w1, [x3, x1]
  42b9c8:	sub	w0, w0, w1
  42b9cc:	ldrb	w1, [x2, #6]
  42b9d0:	lsr	w0, w0, w1
  42b9d4:	ldr	w1, [x2, #16]
  42b9d8:	add	w2, w20, #0x32
  42b9dc:	add	w1, w0, w1
  42b9e0:	mov	x0, x19
  42b9e4:	bl	42b748 <nftw@plt+0x28bc8>
  42b9e8:	ldr	w1, [x19, #12]
  42b9ec:	sub	w1, w1, #0x1
  42b9f0:	ldr	x2, [x19]
  42b9f4:	sbfiz	x3, x1, #1, #32
  42b9f8:	add	x1, x3, w1, sxtw
  42b9fc:	add	x1, x2, x1, lsl #3
  42ba00:	ldrb	w1, [x1, #6]
  42ba04:	cbz	w1, 42ba3c <nftw@plt+0x28ebc>
  42ba08:	ldr	w1, [x19, #12]
  42ba0c:	sub	w1, w1, #0x1
  42ba10:	ldr	x2, [x19]
  42ba14:	sbfiz	x3, x1, #1, #32
  42ba18:	add	x1, x3, w1, sxtw
  42ba1c:	add	x1, x2, x1, lsl #3
  42ba20:	ldrb	w1, [x1, #7]
  42ba24:	lsl	w20, w20, w1
  42ba28:	add	w0, w0, w20
  42ba2c:	ldr	w1, [x19, #56]
  42ba30:	cmp	w1, w0
  42ba34:	b.hi	42ba3c <nftw@plt+0x28ebc>  // b.pmore
  42ba38:	str	w0, [x19, #56]
  42ba3c:	ldp	x19, x20, [sp, #16]
  42ba40:	ldp	x29, x30, [sp], #32
  42ba44:	ret
  42ba48:	mov	x4, x0
  42ba4c:	ldrb	w5, [x1, #6]
  42ba50:	ldr	w0, [x1, #16]
  42ba54:	sub	w2, w2, w0
  42ba58:	lsl	w2, w2, w5
  42ba5c:	ldr	w0, [x1]
  42ba60:	add	w0, w2, w0
  42ba64:	mov	w2, #0x60000000            	// #1610612736
  42ba68:	cmp	w0, w2
  42ba6c:	b.hi	42ba8c <nftw@plt+0x28f0c>  // b.pmore
  42ba70:	mov	w2, #0x1                   	// #1
  42ba74:	lsl	w2, w2, w5
  42ba78:	sub	w2, w2, #0x1
  42ba7c:	and	w3, w2, w3
  42ba80:	ldrb	w1, [x1, #7]
  42ba84:	lsl	w1, w3, w1
  42ba88:	add	w0, w0, w1
  42ba8c:	ldr	w1, [x4, #36]
  42ba90:	mov	w2, #0x80000000            	// #-2147483648
  42ba94:	cbz	w1, 42baa8 <nftw@plt+0x28f28>
  42ba98:	sub	w1, w1, #0x1
  42ba9c:	ldr	x2, [x4, #24]
  42baa0:	sbfiz	x1, x1, #5, #32
  42baa4:	ldr	w2, [x2, x1]
  42baa8:	sub	w1, w2, #0x1
  42baac:	cmp	w0, w2
  42bab0:	csel	w0, w1, w0, cs  // cs = hs, nlast
  42bab4:	ldr	w1, [x4, #56]
  42bab8:	cmp	w1, w0
  42babc:	b.cs	42bac4 <nftw@plt+0x28f44>  // b.hs, b.nlast
  42bac0:	str	w0, [x4, #56]
  42bac4:	ret
  42bac8:	cbz	x0, 42bae0 <nftw@plt+0x28f60>
  42bacc:	ldr	w1, [x0]
  42bad0:	mov	w0, #0x6fffffff            	// #1879048191
  42bad4:	cmp	w1, w0
  42bad8:	cset	w0, hi  // hi = pmore
  42badc:	ret
  42bae0:	mov	w0, #0x0                   	// #0
  42bae4:	b	42badc <nftw@plt+0x28f5c>
  42bae8:	stp	x29, x30, [sp, #-32]!
  42baec:	mov	x29, sp
  42baf0:	str	x19, [sp, #16]
  42baf4:	mov	x19, x1
  42baf8:	tbnz	w2, #31, 42bb1c <nftw@plt+0x28f9c>
  42bafc:	ldr	w0, [x19]
  42bb00:	sub	w2, w2, w0
  42bb04:	lsl	w2, w2, #1
  42bb08:	ldr	x0, [x19, #16]
  42bb0c:	ldr	w0, [x0, x2, lsl #2]
  42bb10:	ldr	x19, [sp, #16]
  42bb14:	ldp	x29, x30, [sp], #32
  42bb18:	ret
  42bb1c:	mov	w1, w2
  42bb20:	bl	42b2d0 <nftw@plt+0x28750>
  42bb24:	mov	w2, w0
  42bb28:	b	42bafc <nftw@plt+0x28f7c>
  42bb2c:	ldr	x0, [x0, #8]
  42bb30:	ldr	x0, [x0]
  42bb34:	ret
  42bb38:	tbnz	w1, #31, 42bb54 <nftw@plt+0x28fd4>
  42bb3c:	mov	w0, #0x90000000            	// #-1879048192
  42bb40:	add	w1, w1, w0
  42bb44:	mov	w0, #0xfffffff             	// #268435455
  42bb48:	cmp	w1, w0
  42bb4c:	cset	w0, ls  // ls = plast
  42bb50:	ret
  42bb54:	and	x2, x1, #0x7fffffff
  42bb58:	lsl	w1, w1, #1
  42bb5c:	add	x1, x1, x2
  42bb60:	lsl	x1, x1, #3
  42bb64:	ldr	x0, [x0, #104]
  42bb68:	ldr	w1, [x0, x1]
  42bb6c:	b	42bb3c <nftw@plt+0x28fbc>
  42bb70:	stp	x29, x30, [sp, #-48]!
  42bb74:	mov	x29, sp
  42bb78:	stp	x19, x20, [sp, #16]
  42bb7c:	mov	x20, x0
  42bb80:	mov	w19, w1
  42bb84:	tbnz	w1, #31, 42bbac <nftw@plt+0x2902c>
  42bb88:	bl	42bb38 <nftw@plt+0x28fb8>
  42bb8c:	and	w0, w0, #0xff
  42bb90:	cbnz	w0, 42bbfc <nftw@plt+0x2907c>
  42bb94:	mov	w1, w19
  42bb98:	mov	x0, x20
  42bb9c:	bl	42aff8 <nftw@plt+0x28478>
  42bba0:	ldp	x19, x20, [sp, #16]
  42bba4:	ldp	x29, x30, [sp], #48
  42bba8:	ret
  42bbac:	str	x21, [sp, #32]
  42bbb0:	ldr	x21, [x0, #104]
  42bbb4:	and	x0, x19, #0x7fffffff
  42bbb8:	lsl	w19, w1, #1
  42bbbc:	add	x19, x19, x0
  42bbc0:	lsl	x19, x19, #3
  42bbc4:	ldr	w19, [x21, x19]
  42bbc8:	mov	w1, w19
  42bbcc:	mov	x0, x20
  42bbd0:	bl	42bb38 <nftw@plt+0x28fb8>
  42bbd4:	and	w0, w0, #0xff
  42bbd8:	cbz	w0, 42bc84 <nftw@plt+0x29104>
  42bbdc:	tbz	w19, #31, 42bc3c <nftw@plt+0x290bc>
  42bbe0:	and	x0, x19, #0x7fffffff
  42bbe4:	lsl	w19, w19, #1
  42bbe8:	add	x19, x19, x0
  42bbec:	lsl	x19, x19, #3
  42bbf0:	ldr	w19, [x21, x19]
  42bbf4:	ldr	x21, [sp, #32]
  42bbf8:	b	42bc00 <nftw@plt+0x29080>
  42bbfc:	cbz	x20, 42bc8c <nftw@plt+0x2910c>
  42bc00:	ldr	w3, [x20, #40]
  42bc04:	ldr	w2, [x20, #36]
  42bc08:	ldr	x4, [x20, #24]
  42bc0c:	sbfiz	x1, x3, #5, #32
  42bc10:	add	x0, x4, x1
  42bc14:	ldr	w1, [x4, x1]
  42bc18:	cmp	w1, w19
  42bc1c:	b.hi	42bc48 <nftw@plt+0x290c8>  // b.pmore
  42bc20:	cbz	w3, 42bba0 <nftw@plt+0x29020>
  42bc24:	ldur	w1, [x0, #-32]
  42bc28:	cmp	w1, w19
  42bc2c:	b.hi	42bba0 <nftw@plt+0x29020>  // b.pmore
  42bc30:	sub	w2, w3, #0x1
  42bc34:	mov	w3, #0x0                   	// #0
  42bc38:	b	42bc48 <nftw@plt+0x290c8>
  42bc3c:	ldr	x21, [sp, #32]
  42bc40:	b	42bc00 <nftw@plt+0x29080>
  42bc44:	mov	w2, w0
  42bc48:	cmp	w2, w3
  42bc4c:	b.ls	42bc74 <nftw@plt+0x290f4>  // b.plast
  42bc50:	add	w1, w2, w3
  42bc54:	lsr	w0, w1, #1
  42bc58:	lsr	w1, w1, #1
  42bc5c:	lsl	x1, x1, #5
  42bc60:	ldr	w1, [x4, x1]
  42bc64:	cmp	w1, w19
  42bc68:	b.ls	42bc44 <nftw@plt+0x290c4>  // b.plast
  42bc6c:	add	w3, w0, #0x1
  42bc70:	b	42bc48 <nftw@plt+0x290c8>
  42bc74:	str	w2, [x20, #40]
  42bc78:	sbfiz	x0, x2, #5, #32
  42bc7c:	add	x0, x4, x0
  42bc80:	b	42bba0 <nftw@plt+0x29020>
  42bc84:	ldr	x21, [sp, #32]
  42bc88:	b	42bb94 <nftw@plt+0x29014>
  42bc8c:	mov	x0, x20
  42bc90:	b	42bba0 <nftw@plt+0x29020>
  42bc94:	stp	x29, x30, [sp, #-96]!
  42bc98:	mov	x29, sp
  42bc9c:	stp	x19, x20, [sp, #16]
  42bca0:	stp	x21, x22, [sp, #32]
  42bca4:	stp	x23, x24, [sp, #48]
  42bca8:	mov	x21, x0
  42bcac:	mov	w19, w1
  42bcb0:	mov	x20, x2
  42bcb4:	mov	x22, x3
  42bcb8:	tbnz	w1, #31, 42bd78 <nftw@plt+0x291f8>
  42bcbc:	cmp	x22, #0x0
  42bcc0:	cset	w23, eq  // eq = none
  42bcc4:	cmp	w19, #0x0
  42bcc8:	mov	w0, #0x0                   	// #0
  42bccc:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  42bcd0:	b.ne	42bd64 <nftw@plt+0x291e4>  // b.any
  42bcd4:	lsr	x24, x20, #32
  42bcd8:	cmp	w24, w20
  42bcdc:	ccmp	w20, #0x1, #0x0, cs  // cs = hs, nlast
  42bce0:	cset	w0, ls  // ls = plast
  42bce4:	cmp	w19, w20
  42bce8:	mov	w1, #0x4fffffff            	// #1342177279
  42bcec:	ccmp	w19, w1, #0x2, eq  // eq = none
  42bcf0:	cset	w1, hi  // hi = pmore
  42bcf4:	orr	w0, w0, w1
  42bcf8:	cmp	x22, #0x0
  42bcfc:	csinc	w0, w0, wzr, eq  // eq = none
  42bd00:	cbz	w0, 42bd94 <nftw@plt+0x29214>
  42bd04:	cmp	w19, w24
  42bd08:	ccmp	w19, w20, #0x0, eq  // eq = none
  42bd0c:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  42bd10:	b.ne	42bee8 <nftw@plt+0x29368>  // b.any
  42bd14:	cbz	x22, 42be00 <nftw@plt+0x29280>
  42bd18:	str	w19, [sp, #72]
  42bd1c:	str	w20, [sp, #76]
  42bd20:	str	w24, [sp, #80]
  42bd24:	str	x22, [sp, #88]
  42bd28:	mov	w2, #0x1                   	// #1
  42bd2c:	add	x1, sp, #0x48
  42bd30:	ldr	x0, [x21, #88]
  42bd34:	bl	449c54 <nftw@plt+0x470d4>
  42bd38:	mov	x19, x0
  42bd3c:	ldr	x0, [x0]
  42bd40:	cbz	x0, 42be24 <nftw@plt+0x292a4>
  42bd44:	ldr	x1, [x19]
  42bd48:	ldr	x0, [x21, #104]
  42bd4c:	sub	x0, x1, x0
  42bd50:	asr	x0, x0, #3
  42bd54:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42bd58:	movk	x1, #0xaaab
  42bd5c:	mul	x0, x0, x1
  42bd60:	orr	w0, w0, #0x80000000
  42bd64:	ldp	x19, x20, [sp, #16]
  42bd68:	ldp	x21, x22, [sp, #32]
  42bd6c:	ldp	x23, x24, [sp, #48]
  42bd70:	ldp	x29, x30, [sp], #96
  42bd74:	ret
  42bd78:	and	x0, x19, #0x7fffffff
  42bd7c:	lsl	w19, w1, #1
  42bd80:	add	x19, x19, x0
  42bd84:	lsl	x19, x19, #3
  42bd88:	ldr	x0, [x21, #104]
  42bd8c:	ldr	w19, [x0, x19]
  42bd90:	b	42bcbc <nftw@plt+0x2913c>
  42bd94:	ldr	w0, [x21, #36]
  42bd98:	mov	w1, #0x80000000            	// #-2147483648
  42bd9c:	cbz	w0, 42bdb0 <nftw@plt+0x29230>
  42bda0:	sub	w0, w0, #0x1
  42bda4:	ldr	x1, [x21, #24]
  42bda8:	sbfiz	x0, x0, #5, #32
  42bdac:	ldr	w1, [x1, x0]
  42bdb0:	cmp	w24, w20
  42bdb4:	csel	w0, w24, w20, cs  // cs = hs, nlast
  42bdb8:	cmp	w0, w19
  42bdbc:	csel	w0, w0, w19, cs  // cs = hs, nlast
  42bdc0:	cmp	w0, w1
  42bdc4:	b.cs	42bdf0 <nftw@plt+0x29270>  // b.hs, b.nlast
  42bdc8:	mov	w1, w19
  42bdcc:	mov	x0, x21
  42bdd0:	bl	42bb70 <nftw@plt+0x28ff0>
  42bdd4:	ldrb	w2, [x0, #7]
  42bdd8:	sub	w1, w24, w20
  42bddc:	lsr	w1, w1, w2
  42bde0:	mov	w0, #0x1                   	// #1
  42bde4:	lsl	w0, w0, w2
  42bde8:	cmp	w0, w1
  42bdec:	b.hi	42be10 <nftw@plt+0x29290>  // b.pmore
  42bdf0:	cmp	w19, w20
  42bdf4:	ccmp	w19, w24, #0x0, eq  // eq = none
  42bdf8:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  42bdfc:	b.ne	42bef0 <nftw@plt+0x29370>  // b.any
  42be00:	ldr	w0, [x21, #128]
  42be04:	add	w0, w0, #0x1
  42be08:	str	w0, [x21, #128]
  42be0c:	b	42bd18 <nftw@plt+0x29198>
  42be10:	orr	w0, w19, w1
  42be14:	ldr	w1, [x21, #124]
  42be18:	add	w1, w1, #0x1
  42be1c:	str	w1, [x21, #124]
  42be20:	b	42bd64 <nftw@plt+0x291e4>
  42be24:	ldr	w0, [x21, #100]
  42be28:	ldr	w1, [x21, #96]
  42be2c:	cmp	w1, w0
  42be30:	b.cc	42be8c <nftw@plt+0x2930c>  // b.lo, b.ul, b.last
  42be34:	ldr	x20, [x21, #104]
  42be38:	ldr	x2, [x21, #72]
  42be3c:	adrp	x1, 44a000 <nftw@plt+0x47480>
  42be40:	add	x1, x1, #0x790
  42be44:	cmp	x2, #0x0
  42be48:	csel	x2, x1, x2, eq  // eq = none
  42be4c:	lsl	w1, w0, #1
  42be50:	cmp	w0, #0x0
  42be54:	mov	w0, #0x80                  	// #128
  42be58:	csel	w1, w1, w0, ne  // ne = any
  42be5c:	str	w1, [x21, #100]
  42be60:	mov	w1, w1
  42be64:	add	x1, x1, x1, lsl #1
  42be68:	lsl	x1, x1, #3
  42be6c:	mov	x0, x20
  42be70:	blr	x2
  42be74:	str	x0, [x21, #104]
  42be78:	sub	x0, x0, x20
  42be7c:	str	x0, [sp, #64]
  42be80:	ldr	w0, [x21, #100]
  42be84:	cmp	w0, #0x80
  42be88:	b.hi	42bed0 <nftw@plt+0x29350>  // b.pmore
  42be8c:	ldr	w0, [x21, #96]
  42be90:	add	x0, x0, x0, lsl #1
  42be94:	ldr	x1, [x21, #104]
  42be98:	add	x0, x1, x0, lsl #3
  42be9c:	str	x0, [x19]
  42bea0:	ldr	x1, [x21, #104]
  42bea4:	ldr	w0, [x21, #96]
  42bea8:	add	w2, w0, #0x1
  42beac:	str	w2, [x21, #96]
  42beb0:	ubfiz	x2, x0, #1, #32
  42beb4:	add	x0, x2, w0, uxtw
  42beb8:	add	x0, x1, x0, lsl #3
  42bebc:	ldp	x2, x3, [sp, #72]
  42bec0:	stp	x2, x3, [x0]
  42bec4:	ldr	x1, [sp, #88]
  42bec8:	str	x1, [x0, #16]
  42becc:	b	42bd44 <nftw@plt+0x291c4>
  42bed0:	add	x2, sp, #0x40
  42bed4:	adrp	x1, 42a000 <nftw@plt+0x27480>
  42bed8:	add	x1, x1, #0xfe0
  42bedc:	ldr	x0, [x21, #88]
  42bee0:	bl	449df8 <nftw@plt+0x47278>
  42bee4:	b	42be8c <nftw@plt+0x2930c>
  42bee8:	mov	w0, w19
  42beec:	b	42bd64 <nftw@plt+0x291e4>
  42bef0:	mov	w0, w19
  42bef4:	b	42bd64 <nftw@plt+0x291e4>
  42bef8:	stp	x29, x30, [sp, #-32]!
  42befc:	mov	x29, sp
  42bf00:	str	x19, [sp, #16]
  42bf04:	mov	w19, w1
  42bf08:	tbnz	w1, #31, 42bf58 <nftw@plt+0x293d8>
  42bf0c:	cmp	w1, #0x1
  42bf10:	b.ls	42bf40 <nftw@plt+0x293c0>  // b.plast
  42bf14:	ldr	w1, [x0, #36]
  42bf18:	mov	w2, #0x80000000            	// #-2147483648
  42bf1c:	cbz	w1, 42bf30 <nftw@plt+0x293b0>
  42bf20:	sub	w1, w1, #0x1
  42bf24:	ldr	x2, [x0, #24]
  42bf28:	sbfiz	x1, x1, #5, #32
  42bf2c:	ldr	w2, [x2, x1]
  42bf30:	mov	w1, #0x50000000            	// #1342177280
  42bf34:	cmp	w19, w1
  42bf38:	ccmp	w19, w2, #0x2, ls  // ls = plast
  42bf3c:	b.cc	42bf84 <nftw@plt+0x29404>  // b.lo, b.ul, b.last
  42bf40:	mov	x0, #0x0                   	// #0
  42bf44:	bfxil	x0, x19, #0, #32
  42bf48:	bfi	x0, x19, #32, #32
  42bf4c:	ldr	x19, [sp, #16]
  42bf50:	ldp	x29, x30, [sp], #32
  42bf54:	ret
  42bf58:	and	x1, x19, #0x7fffffff
  42bf5c:	lsl	w19, w19, #1
  42bf60:	add	x19, x19, x1
  42bf64:	ldr	x0, [x0, #104]
  42bf68:	add	x19, x0, x19, lsl #3
  42bf6c:	ldr	w1, [x19, #4]
  42bf70:	mov	x0, #0x0                   	// #0
  42bf74:	bfxil	x0, x1, #0, #32
  42bf78:	ldr	w1, [x19, #8]
  42bf7c:	bfi	x0, x1, #32, #32
  42bf80:	b	42bf4c <nftw@plt+0x293cc>
  42bf84:	mov	w1, w19
  42bf88:	bl	42bb70 <nftw@plt+0x28ff0>
  42bf8c:	ldrb	w2, [x0, #7]
  42bf90:	mov	w0, #0x1                   	// #1
  42bf94:	lsl	w0, w0, w2
  42bf98:	sub	w0, w0, #0x1
  42bf9c:	and	w1, w0, w19
  42bfa0:	bic	w19, w19, w0
  42bfa4:	mov	x0, #0x0                   	// #0
  42bfa8:	bfxil	x0, x19, #0, #32
  42bfac:	lsl	w1, w1, w2
  42bfb0:	add	w19, w1, w19
  42bfb4:	bfi	x0, x19, #32, #32
  42bfb8:	b	42bf4c <nftw@plt+0x293cc>
  42bfbc:	tbnz	w1, #31, 42bff8 <nftw@plt+0x29478>
  42bfc0:	stp	x29, x30, [sp, #-32]!
  42bfc4:	mov	x29, sp
  42bfc8:	str	x19, [sp, #16]
  42bfcc:	mov	w19, w1
  42bfd0:	bl	42bb70 <nftw@plt+0x28ff0>
  42bfd4:	cbz	x0, 42c000 <nftw@plt+0x29480>
  42bfd8:	ldrb	w1, [x0, #7]
  42bfdc:	mov	w0, #0xffffffff            	// #-1
  42bfe0:	lsl	w0, w0, w1
  42bfe4:	bics	wzr, w19, w0
  42bfe8:	cset	w0, eq  // eq = none
  42bfec:	ldr	x19, [sp, #16]
  42bff0:	ldp	x29, x30, [sp], #32
  42bff4:	ret
  42bff8:	mov	w0, #0x0                   	// #0
  42bffc:	ret
  42c000:	mov	w0, #0x1                   	// #1
  42c004:	b	42bfec <nftw@plt+0x2946c>
  42c008:	stp	x29, x30, [sp, #-32]!
  42c00c:	mov	x29, sp
  42c010:	str	x19, [sp, #16]
  42c014:	mov	w19, w1
  42c018:	tbnz	w1, #31, 42c054 <nftw@plt+0x294d4>
  42c01c:	ldr	w1, [x0, #36]
  42c020:	mov	w2, #0x80000000            	// #-2147483648
  42c024:	cbz	w1, 42c038 <nftw@plt+0x294b8>
  42c028:	sub	w1, w1, #0x1
  42c02c:	ldr	x2, [x0, #24]
  42c030:	sbfiz	x1, x1, #5, #32
  42c034:	ldr	w2, [x2, x1]
  42c038:	cmp	w19, #0x1
  42c03c:	ccmp	w19, w2, #0x2, hi  // hi = pmore
  42c040:	b.cc	42c070 <nftw@plt+0x294f0>  // b.lo, b.ul, b.last
  42c044:	mov	w0, w19
  42c048:	ldr	x19, [sp, #16]
  42c04c:	ldp	x29, x30, [sp], #32
  42c050:	ret
  42c054:	and	x1, x19, #0x7fffffff
  42c058:	lsl	w19, w19, #1
  42c05c:	add	x19, x19, x1
  42c060:	lsl	x19, x19, #3
  42c064:	ldr	x1, [x0, #104]
  42c068:	ldr	w19, [x1, x19]
  42c06c:	b	42c01c <nftw@plt+0x2949c>
  42c070:	mov	w1, w19
  42c074:	bl	42bb70 <nftw@plt+0x28ff0>
  42c078:	ldrb	w1, [x0, #7]
  42c07c:	mov	w0, #0xffffffff            	// #-1
  42c080:	lsl	w0, w0, w1
  42c084:	and	w19, w19, w0
  42c088:	b	42c044 <nftw@plt+0x294c4>
  42c08c:	stp	x29, x30, [sp, #-48]!
  42c090:	mov	x29, sp
  42c094:	stp	x19, x20, [sp, #16]
  42c098:	stp	x21, x22, [sp, #32]
  42c09c:	mov	x21, x0
  42c0a0:	mov	w20, w1
  42c0a4:	mov	x22, x2
  42c0a8:	tbnz	w1, #31, 42c0d0 <nftw@plt+0x29550>
  42c0ac:	mov	w1, w20
  42c0b0:	mov	x0, x21
  42c0b4:	bl	42bb70 <nftw@plt+0x28ff0>
  42c0b8:	mov	x19, x0
  42c0bc:	bl	42bac8 <nftw@plt+0x28f48>
  42c0c0:	and	w3, w0, #0xff
  42c0c4:	cbz	w3, 42c0ec <nftw@plt+0x2956c>
  42c0c8:	ldr	w20, [x19, #24]
  42c0cc:	b	42c0ac <nftw@plt+0x2952c>
  42c0d0:	and	x0, x20, #0x7fffffff
  42c0d4:	lsl	w1, w1, #1
  42c0d8:	add	x1, x1, x0
  42c0dc:	lsl	x1, x1, #3
  42c0e0:	ldr	x0, [x21, #104]
  42c0e4:	ldr	w20, [x0, x1]
  42c0e8:	b	42c0ac <nftw@plt+0x2952c>
  42c0ec:	cbz	x22, 42c0f4 <nftw@plt+0x29574>
  42c0f0:	str	x19, [x22]
  42c0f4:	mov	w0, w20
  42c0f8:	ldp	x19, x20, [sp, #16]
  42c0fc:	ldp	x21, x22, [sp, #32]
  42c100:	ldp	x29, x30, [sp], #48
  42c104:	ret
  42c108:	stp	x29, x30, [sp, #-32]!
  42c10c:	mov	x29, sp
  42c110:	mov	x3, x0
  42c114:	str	xzr, [sp, #24]
  42c118:	tbnz	w1, #31, 42c158 <nftw@plt+0x295d8>
  42c11c:	mov	w0, #0x0                   	// #0
  42c120:	cmp	w1, #0x1
  42c124:	b.ls	42c150 <nftw@plt+0x295d0>  // b.plast
  42c128:	add	x2, sp, #0x18
  42c12c:	mov	x0, x3
  42c130:	bl	42c08c <nftw@plt+0x2950c>
  42c134:	ldr	x1, [sp, #24]
  42c138:	ldr	w2, [x1]
  42c13c:	sub	w0, w0, w2
  42c140:	ldrb	w2, [x1, #6]
  42c144:	lsr	w0, w0, w2
  42c148:	ldr	w1, [x1, #16]
  42c14c:	add	w0, w0, w1
  42c150:	ldp	x29, x30, [sp], #32
  42c154:	ret
  42c158:	and	x0, x1, #0x7fffffff
  42c15c:	lsl	w1, w1, #1
  42c160:	add	x1, x1, x0
  42c164:	lsl	x1, x1, #3
  42c168:	ldr	x0, [x3, #104]
  42c16c:	ldr	w1, [x0, x1]
  42c170:	b	42c11c <nftw@plt+0x2959c>
  42c174:	stp	x29, x30, [sp, #-32]!
  42c178:	mov	x29, sp
  42c17c:	str	xzr, [sp, #24]
  42c180:	tbnz	w1, #31, 42c1ac <nftw@plt+0x2962c>
  42c184:	mov	x2, #0x0                   	// #0
  42c188:	cmp	w1, #0x1
  42c18c:	b.ls	42c1a0 <nftw@plt+0x29620>  // b.plast
  42c190:	add	x2, sp, #0x18
  42c194:	bl	42c08c <nftw@plt+0x2950c>
  42c198:	ldr	x0, [sp, #24]
  42c19c:	ldr	x2, [x0, #8]
  42c1a0:	mov	x0, x2
  42c1a4:	ldp	x29, x30, [sp], #32
  42c1a8:	ret
  42c1ac:	and	x2, x1, #0x7fffffff
  42c1b0:	lsl	w1, w1, #1
  42c1b4:	add	x1, x1, x2
  42c1b8:	lsl	x1, x1, #3
  42c1bc:	ldr	x2, [x0, #104]
  42c1c0:	ldr	w1, [x2, x1]
  42c1c4:	b	42c184 <nftw@plt+0x29604>
  42c1c8:	stp	x29, x30, [sp, #-48]!
  42c1cc:	mov	x29, sp
  42c1d0:	stp	x19, x20, [sp, #16]
  42c1d4:	str	x21, [sp, #32]
  42c1d8:	mov	x21, x0
  42c1dc:	mov	w19, w1
  42c1e0:	tbnz	w1, #31, 42c1f4 <nftw@plt+0x29674>
  42c1e4:	mov	w0, #0x0                   	// #0
  42c1e8:	cmp	w19, #0x1
  42c1ec:	b.hi	42c21c <nftw@plt+0x2969c>  // b.pmore
  42c1f0:	b	42c260 <nftw@plt+0x296e0>
  42c1f4:	and	x0, x19, #0x7fffffff
  42c1f8:	lsl	w1, w1, #1
  42c1fc:	add	x1, x1, x0
  42c200:	lsl	x1, x1, #3
  42c204:	ldr	x0, [x21, #104]
  42c208:	ldr	w19, [x0, x1]
  42c20c:	b	42c1e4 <nftw@plt+0x29664>
  42c210:	ldrb	w0, [x20, #5]
  42c214:	b	42c260 <nftw@plt+0x296e0>
  42c218:	ldr	w19, [x20, #24]
  42c21c:	mov	w1, w19
  42c220:	mov	x0, x21
  42c224:	bl	42bb70 <nftw@plt+0x28ff0>
  42c228:	mov	x20, x0
  42c22c:	cbz	x0, 42c25c <nftw@plt+0x296dc>
  42c230:	bl	42bac8 <nftw@plt+0x28f48>
  42c234:	and	w0, w0, #0xff
  42c238:	cbz	w0, 42c210 <nftw@plt+0x29690>
  42c23c:	mov	w2, w19
  42c240:	mov	x1, x20
  42c244:	mov	x0, x21
  42c248:	bl	42bae8 <nftw@plt+0x28f68>
  42c24c:	mov	w19, w0
  42c250:	cmp	w0, #0x1
  42c254:	b.hi	42c21c <nftw@plt+0x2969c>  // b.pmore
  42c258:	b	42c218 <nftw@plt+0x29698>
  42c25c:	mov	w0, #0x0                   	// #0
  42c260:	ldp	x19, x20, [sp, #16]
  42c264:	ldr	x21, [sp, #32]
  42c268:	ldp	x29, x30, [sp], #48
  42c26c:	ret
  42c270:	stp	x29, x30, [sp, #-64]!
  42c274:	mov	x29, sp
  42c278:	stp	x19, x20, [sp, #16]
  42c27c:	stp	x21, x22, [sp, #32]
  42c280:	mov	x21, x0
  42c284:	mov	w19, w1
  42c288:	mov	x22, x3
  42c28c:	mov	w0, w1
  42c290:	tbnz	w1, #31, 42c2d0 <nftw@plt+0x29750>
  42c294:	cmp	w0, #0x1
  42c298:	b.ls	42c2ec <nftw@plt+0x2976c>  // b.plast
  42c29c:	mov	w20, #0x6fffffff            	// #1879048191
  42c2a0:	cmp	w2, #0x1
  42c2a4:	b.eq	42c328 <nftw@plt+0x297a8>  // b.none
  42c2a8:	cmp	w2, #0x2
  42c2ac:	b.eq	42c2fc <nftw@plt+0x2977c>  // b.none
  42c2b0:	cbz	w2, 42c308 <nftw@plt+0x29788>
  42c2b4:	str	x23, [sp, #48]
  42c2b8:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42c2bc:	add	x2, x2, #0xc40
  42c2c0:	mov	w1, #0x621                 	// #1569
  42c2c4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42c2c8:	add	x0, x0, #0xc60
  42c2cc:	bl	408d8c <nftw@plt+0x620c>
  42c2d0:	and	x3, x19, #0x7fffffff
  42c2d4:	ldr	x1, [x21, #104]
  42c2d8:	lsl	w0, w19, #1
  42c2dc:	add	x0, x0, x3
  42c2e0:	lsl	x0, x0, #3
  42c2e4:	ldr	w0, [x1, x0]
  42c2e8:	b	42c294 <nftw@plt+0x29714>
  42c2ec:	mov	w0, w19
  42c2f0:	cbz	x22, 42c318 <nftw@plt+0x29798>
  42c2f4:	str	xzr, [x22]
  42c2f8:	b	42c318 <nftw@plt+0x29798>
  42c2fc:	str	x23, [sp, #48]
  42c300:	mov	w23, #0x6fffffff            	// #1879048191
  42c304:	b	42c3ac <nftw@plt+0x2982c>
  42c308:	mov	x2, x22
  42c30c:	mov	w1, w19
  42c310:	mov	x0, x21
  42c314:	bl	42c08c <nftw@plt+0x2950c>
  42c318:	ldp	x19, x20, [sp, #16]
  42c31c:	ldp	x21, x22, [sp, #32]
  42c320:	ldp	x29, x30, [sp], #64
  42c324:	ret
  42c328:	mov	w1, w19
  42c32c:	mov	x0, x21
  42c330:	bl	42bb70 <nftw@plt+0x28ff0>
  42c334:	mov	x1, x0
  42c338:	cbz	x0, 42c35c <nftw@plt+0x297dc>
  42c33c:	ldr	w0, [x0]
  42c340:	cmp	w0, w20
  42c344:	b.ls	42c35c <nftw@plt+0x297dc>  // b.plast
  42c348:	mov	w2, w19
  42c34c:	mov	x0, x21
  42c350:	bl	42bae8 <nftw@plt+0x28f68>
  42c354:	mov	w19, w0
  42c358:	b	42c328 <nftw@plt+0x297a8>
  42c35c:	mov	w0, w19
  42c360:	cbz	x22, 42c318 <nftw@plt+0x29798>
  42c364:	str	x1, [x22]
  42c368:	b	42c318 <nftw@plt+0x29798>
  42c36c:	mov	w1, w19
  42c370:	mov	x0, x21
  42c374:	bl	42b2d0 <nftw@plt+0x28750>
  42c378:	mov	w20, w0
  42c37c:	mov	w1, w20
  42c380:	mov	x0, x21
  42c384:	bl	42bb70 <nftw@plt+0x28ff0>
  42c388:	cbz	x0, 42c3b8 <nftw@plt+0x29838>
  42c38c:	ldr	w1, [x0]
  42c390:	cmp	w1, w23
  42c394:	b.ls	42c3b8 <nftw@plt+0x29838>  // b.plast
  42c398:	sub	w20, w20, w1
  42c39c:	lsl	w20, w20, #1
  42c3a0:	add	w20, w20, #0x1
  42c3a4:	ldr	x0, [x0, #16]
  42c3a8:	ldr	w19, [x0, x20, lsl #2]
  42c3ac:	mov	w20, w19
  42c3b0:	tbz	w19, #31, 42c37c <nftw@plt+0x297fc>
  42c3b4:	b	42c36c <nftw@plt+0x297ec>
  42c3b8:	cbz	x22, 42c3cc <nftw@plt+0x2984c>
  42c3bc:	str	x0, [x22]
  42c3c0:	mov	w0, w19
  42c3c4:	ldr	x23, [sp, #48]
  42c3c8:	b	42c318 <nftw@plt+0x29798>
  42c3cc:	mov	w0, w19
  42c3d0:	ldr	x23, [sp, #48]
  42c3d4:	b	42c318 <nftw@plt+0x29798>
  42c3d8:	stp	x29, x30, [sp, #-64]!
  42c3dc:	mov	x29, sp
  42c3e0:	stp	x19, x20, [sp, #16]
  42c3e4:	str	x21, [sp, #32]
  42c3e8:	mov	x21, x0
  42c3ec:	mov	w19, w1
  42c3f0:	mov	w20, w2
  42c3f4:	str	xzr, [sp, #56]
  42c3f8:	tbnz	w1, #31, 42c430 <nftw@plt+0x298b0>
  42c3fc:	mov	w1, w19
  42c400:	mov	x0, x21
  42c404:	bl	42bb38 <nftw@plt+0x28fb8>
  42c408:	and	w0, w0, #0xff
  42c40c:	cbnz	w0, 42c41c <nftw@plt+0x2989c>
  42c410:	cmp	w20, #0x0
  42c414:	ccmp	w19, #0x1, #0x0, ne  // ne = any
  42c418:	b.hi	42c44c <nftw@plt+0x298cc>  // b.pmore
  42c41c:	mov	w0, w19
  42c420:	ldp	x19, x20, [sp, #16]
  42c424:	ldr	x21, [sp, #32]
  42c428:	ldp	x29, x30, [sp], #64
  42c42c:	ret
  42c430:	and	x0, x19, #0x7fffffff
  42c434:	lsl	w19, w1, #1
  42c438:	add	x19, x19, x0
  42c43c:	lsl	x19, x19, #3
  42c440:	ldr	x0, [x21, #104]
  42c444:	ldr	w19, [x0, x19]
  42c448:	b	42c3fc <nftw@plt+0x2987c>
  42c44c:	add	x3, sp, #0x38
  42c450:	mov	w2, #0x1                   	// #1
  42c454:	mov	w1, w19
  42c458:	mov	x0, x21
  42c45c:	bl	42c270 <nftw@plt+0x296f0>
  42c460:	mov	w19, w0
  42c464:	ldr	x0, [sp, #56]
  42c468:	ldr	w3, [x0]
  42c46c:	ldrb	w7, [x0, #7]
  42c470:	lsl	w1, w20, w7
  42c474:	add	w1, w1, w19
  42c478:	cmp	w1, w3
  42c47c:	b.ls	42c41c <nftw@plt+0x2989c>  // b.plast
  42c480:	sub	w6, w19, w3
  42c484:	ldrb	w5, [x0, #6]
  42c488:	lsr	w1, w6, w5
  42c48c:	ldr	w2, [x0, #16]
  42c490:	add	w2, w1, w2
  42c494:	ldr	w1, [x21, #12]
  42c498:	sub	w1, w1, #0x1
  42c49c:	sbfiz	x0, x1, #1, #32
  42c4a0:	add	x1, x0, w1, sxtw
  42c4a4:	ldr	x0, [x21]
  42c4a8:	add	x1, x0, x1, lsl #3
  42c4ac:	ldr	x3, [sp, #56]
  42c4b0:	cmp	x3, x1
  42c4b4:	b.eq	42c4ec <nftw@plt+0x2996c>  // b.none
  42c4b8:	ldrb	w4, [x3, #7]
  42c4bc:	lsl	w4, w20, w4
  42c4c0:	add	w4, w4, w19
  42c4c4:	ldr	w0, [x3, #24]
  42c4c8:	cmp	w4, w0
  42c4cc:	b.cc	42c4e8 <nftw@plt+0x29968>  // b.lo, b.ul, b.last
  42c4d0:	add	x3, x3, #0x18
  42c4d4:	str	x3, [sp, #56]
  42c4d8:	ldr	w0, [x3, #16]
  42c4dc:	cmp	w2, w0
  42c4e0:	b.cs	42c4ac <nftw@plt+0x2992c>  // b.hs, b.nlast
  42c4e4:	b	42c41c <nftw@plt+0x2989c>
  42c4e8:	mov	x1, x3
  42c4ec:	mov	w0, #0x1                   	// #1
  42c4f0:	lsl	w3, w0, w5
  42c4f4:	sub	w3, w3, #0x1
  42c4f8:	and	w3, w3, w6
  42c4fc:	lsr	w3, w3, w7
  42c500:	add	w3, w3, w20
  42c504:	ldrb	w4, [x1, #6]
  42c508:	ldrb	w5, [x1, #7]
  42c50c:	sub	w4, w4, w5
  42c510:	lsl	w0, w0, w4
  42c514:	cmp	w0, w3
  42c518:	b.ls	42c41c <nftw@plt+0x2989c>  // b.plast
  42c51c:	mov	x0, x21
  42c520:	bl	42ba48 <nftw@plt+0x28ec8>
  42c524:	mov	w20, w0
  42c528:	ldr	w0, [x21, #56]
  42c52c:	cmp	w0, w20
  42c530:	b.cc	42c41c <nftw@plt+0x2989c>  // b.lo, b.ul, b.last
  42c534:	mov	w1, w20
  42c538:	mov	x0, x21
  42c53c:	bl	42bb70 <nftw@plt+0x28ff0>
  42c540:	ldr	x1, [sp, #56]
  42c544:	cmp	x1, x0
  42c548:	csel	w19, w19, w20, ne  // ne = any
  42c54c:	b	42c41c <nftw@plt+0x2989c>
  42c550:	stp	x29, x30, [sp, #-64]!
  42c554:	mov	x29, sp
  42c558:	stp	x19, x20, [sp, #16]
  42c55c:	stp	x21, x22, [sp, #32]
  42c560:	stp	x23, x24, [sp, #48]
  42c564:	mov	x20, x0
  42c568:	mov	w21, w1
  42c56c:	mov	w22, w2
  42c570:	mov	w24, w1
  42c574:	tbnz	w1, #31, 42c5d0 <nftw@plt+0x29a50>
  42c578:	mov	w19, w22
  42c57c:	tbnz	w22, #31, 42c5dc <nftw@plt+0x29a5c>
  42c580:	cmp	w24, w19
  42c584:	b.eq	42c710 <nftw@plt+0x29b90>  // b.none
  42c588:	mov	w1, w24
  42c58c:	mov	x0, x20
  42c590:	bl	42bb38 <nftw@plt+0x28fb8>
  42c594:	ands	w23, w0, #0xff
  42c598:	b.ne	42c5f0 <nftw@plt+0x29a70>  // b.any
  42c59c:	mov	w1, w19
  42c5a0:	mov	x0, x20
  42c5a4:	bl	42bb38 <nftw@plt+0x28fb8>
  42c5a8:	and	w1, w0, #0xff
  42c5ac:	cbnz	w1, 42c60c <nftw@plt+0x29a8c>
  42c5b0:	tbnz	w24, #31, 42c6e8 <nftw@plt+0x29b68>
  42c5b4:	tbnz	w19, #31, 42c6fc <nftw@plt+0x29b7c>
  42c5b8:	sub	w0, w19, w24
  42c5bc:	ldp	x19, x20, [sp, #16]
  42c5c0:	ldp	x21, x22, [sp, #32]
  42c5c4:	ldp	x23, x24, [sp, #48]
  42c5c8:	ldp	x29, x30, [sp], #64
  42c5cc:	ret
  42c5d0:	bl	42b2d0 <nftw@plt+0x28750>
  42c5d4:	mov	w24, w0
  42c5d8:	b	42c578 <nftw@plt+0x299f8>
  42c5dc:	mov	w1, w22
  42c5e0:	mov	x0, x20
  42c5e4:	bl	42b2d0 <nftw@plt+0x28750>
  42c5e8:	mov	w19, w0
  42c5ec:	b	42c580 <nftw@plt+0x29a00>
  42c5f0:	mov	x3, #0x0                   	// #0
  42c5f4:	mov	w2, #0x0                   	// #0
  42c5f8:	mov	w1, w24
  42c5fc:	mov	x0, x20
  42c600:	bl	42c270 <nftw@plt+0x296f0>
  42c604:	mov	w24, w0
  42c608:	b	42c59c <nftw@plt+0x29a1c>
  42c60c:	mov	x3, #0x0                   	// #0
  42c610:	mov	w2, #0x0                   	// #0
  42c614:	mov	w1, w19
  42c618:	mov	x0, x20
  42c61c:	bl	42c270 <nftw@plt+0x296f0>
  42c620:	mov	w19, w0
  42c624:	cmp	w0, w24
  42c628:	b.ne	42c5b0 <nftw@plt+0x29a30>  // b.any
  42c62c:	cbz	w23, 42c6e0 <nftw@plt+0x29b60>
  42c630:	mov	w1, w21
  42c634:	mov	x0, x20
  42c638:	bl	42bb70 <nftw@plt+0x28ff0>
  42c63c:	mov	x19, x0
  42c640:	mov	w1, w22
  42c644:	mov	x0, x20
  42c648:	bl	42bb70 <nftw@plt+0x28ff0>
  42c64c:	mov	x23, x0
  42c650:	b	42c688 <nftw@plt+0x29b08>
  42c654:	cmp	x19, x23
  42c658:	b.eq	42c6d4 <nftw@plt+0x29b54>  // b.none
  42c65c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42c660:	add	x2, x2, #0xc78
  42c664:	mov	w1, #0x549                 	// #1353
  42c668:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42c66c:	add	x0, x0, #0xc60
  42c670:	bl	408d8c <nftw@plt+0x620c>
  42c674:	ldr	w21, [x19, #24]
  42c678:	mov	w1, w21
  42c67c:	mov	x0, x20
  42c680:	bl	42bb70 <nftw@plt+0x28ff0>
  42c684:	mov	x19, x0
  42c688:	mov	x0, x19
  42c68c:	bl	42bac8 <nftw@plt+0x28f48>
  42c690:	and	w0, w0, #0xff
  42c694:	cbz	w0, 42c654 <nftw@plt+0x29ad4>
  42c698:	mov	x0, x23
  42c69c:	bl	42bac8 <nftw@plt+0x28f48>
  42c6a0:	ands	w0, w0, #0xff
  42c6a4:	ccmp	x19, x23, #0x4, ne  // ne = any
  42c6a8:	b.eq	42c654 <nftw@plt+0x29ad4>  // b.none
  42c6ac:	ldr	w1, [x19]
  42c6b0:	ldr	w0, [x23]
  42c6b4:	cmp	w1, w0
  42c6b8:	b.cc	42c674 <nftw@plt+0x29af4>  // b.lo, b.ul, b.last
  42c6bc:	ldr	w22, [x23, #24]
  42c6c0:	mov	w1, w22
  42c6c4:	mov	x0, x20
  42c6c8:	bl	42bb70 <nftw@plt+0x28ff0>
  42c6cc:	mov	x23, x0
  42c6d0:	b	42c688 <nftw@plt+0x29b08>
  42c6d4:	sub	w0, w22, w21
  42c6d8:	cbnz	x19, 42c5bc <nftw@plt+0x29a3c>
  42c6dc:	b	42c65c <nftw@plt+0x29adc>
  42c6e0:	mov	w19, w24
  42c6e4:	b	42c5b0 <nftw@plt+0x29a30>
  42c6e8:	mov	w1, w24
  42c6ec:	mov	x0, x20
  42c6f0:	bl	42b2d0 <nftw@plt+0x28750>
  42c6f4:	mov	w24, w0
  42c6f8:	b	42c5b4 <nftw@plt+0x29a34>
  42c6fc:	mov	w1, w19
  42c700:	mov	x0, x20
  42c704:	bl	42b2d0 <nftw@plt+0x28750>
  42c708:	mov	w19, w0
  42c70c:	b	42c5b8 <nftw@plt+0x29a38>
  42c710:	mov	w0, #0x0                   	// #0
  42c714:	b	42c5bc <nftw@plt+0x29a3c>
  42c718:	stp	x29, x30, [sp, #-48]!
  42c71c:	mov	x29, sp
  42c720:	stp	x19, x20, [sp, #16]
  42c724:	stp	x21, x22, [sp, #32]
  42c728:	mov	x21, x0
  42c72c:	mov	w19, w1
  42c730:	tbnz	w1, #31, 42c7b4 <nftw@plt+0x29c34>
  42c734:	mov	w1, w19
  42c738:	mov	x0, x21
  42c73c:	bl	42bb38 <nftw@plt+0x28fb8>
  42c740:	ands	w0, w0, #0xff
  42c744:	b.eq	42c7a4 <nftw@plt+0x29c24>  // b.none
  42c748:	mov	w1, w19
  42c74c:	mov	x0, x21
  42c750:	bl	42bb70 <nftw@plt+0x28ff0>
  42c754:	mov	x20, x0
  42c758:	mov	w22, w19
  42c75c:	mov	w2, w19
  42c760:	mov	x1, x0
  42c764:	mov	x0, x21
  42c768:	bl	42bae8 <nftw@plt+0x28f68>
  42c76c:	mov	w19, w0
  42c770:	mov	w1, w0
  42c774:	mov	x0, x21
  42c778:	bl	42bb38 <nftw@plt+0x28fb8>
  42c77c:	and	w0, w0, #0xff
  42c780:	cbnz	w0, 42c748 <nftw@plt+0x29bc8>
  42c784:	ldr	w0, [x20]
  42c788:	sub	w0, w22, w0
  42c78c:	lsl	w0, w0, #1
  42c790:	add	w0, w0, #0x1
  42c794:	ldr	x1, [x20, #16]
  42c798:	ldr	w0, [x1, x0, lsl #2]
  42c79c:	cmp	w0, w19
  42c7a0:	cset	w0, eq  // eq = none
  42c7a4:	ldp	x19, x20, [sp, #16]
  42c7a8:	ldp	x21, x22, [sp, #32]
  42c7ac:	ldp	x29, x30, [sp], #48
  42c7b0:	ret
  42c7b4:	bl	42b2d0 <nftw@plt+0x28750>
  42c7b8:	mov	w19, w0
  42c7bc:	b	42c734 <nftw@plt+0x29bb4>
  42c7c0:	stp	x29, x30, [sp, #-64]!
  42c7c4:	mov	x29, sp
  42c7c8:	stp	x19, x20, [sp, #16]
  42c7cc:	stp	x21, x22, [sp, #32]
  42c7d0:	str	x23, [sp, #48]
  42c7d4:	mov	x19, x0
  42c7d8:	mov	x21, x2
  42c7dc:	ldr	x23, [x2]
  42c7e0:	tbnz	w1, #31, 42c830 <nftw@plt+0x29cb0>
  42c7e4:	mov	w2, w1
  42c7e8:	mov	x1, x23
  42c7ec:	mov	x0, x19
  42c7f0:	bl	42bae8 <nftw@plt+0x28f68>
  42c7f4:	mov	w20, w0
  42c7f8:	mov	w1, w0
  42c7fc:	mov	x0, x19
  42c800:	bl	42bb70 <nftw@plt+0x28ff0>
  42c804:	mov	x22, x0
  42c808:	bl	42bac8 <nftw@plt+0x28f48>
  42c80c:	and	w0, w0, #0xff
  42c810:	cbz	w0, 42c84c <nftw@plt+0x29ccc>
  42c814:	str	x22, [x21]
  42c818:	mov	w0, w20
  42c81c:	ldp	x19, x20, [sp, #16]
  42c820:	ldp	x21, x22, [sp, #32]
  42c824:	ldr	x23, [sp, #48]
  42c828:	ldp	x29, x30, [sp], #64
  42c82c:	ret
  42c830:	and	x0, x1, #0x7fffffff
  42c834:	lsl	w1, w1, #1
  42c838:	add	x1, x1, x0
  42c83c:	lsl	x1, x1, #3
  42c840:	ldr	x0, [x19, #104]
  42c844:	ldr	w1, [x0, x1]
  42c848:	b	42c7e4 <nftw@plt+0x29c64>
  42c84c:	ldr	w20, [x23, #24]
  42c850:	mov	w1, w20
  42c854:	mov	x0, x19
  42c858:	bl	42bb70 <nftw@plt+0x28ff0>
  42c85c:	mov	x22, x0
  42c860:	b	42c814 <nftw@plt+0x29c94>
  42c864:	stp	x29, x30, [sp, #-80]!
  42c868:	mov	x29, sp
  42c86c:	stp	x19, x20, [sp, #16]
  42c870:	stp	x21, x22, [sp, #32]
  42c874:	stp	x23, x24, [sp, #48]
  42c878:	mov	x22, x0
  42c87c:	mov	w19, w1
  42c880:	mov	x23, x2
  42c884:	str	xzr, [sp, #72]
  42c888:	str	xzr, [sp, #64]
  42c88c:	tbnz	w1, #31, 42c8c4 <nftw@plt+0x29d44>
  42c890:	mov	w1, w19
  42c894:	mov	x0, x22
  42c898:	bl	42bb70 <nftw@plt+0x28ff0>
  42c89c:	str	x0, [sp, #72]
  42c8a0:	bl	42bac8 <nftw@plt+0x28f48>
  42c8a4:	and	w0, w0, #0xff
  42c8a8:	cbnz	w0, 42c8e0 <nftw@plt+0x29d60>
  42c8ac:	mov	w0, w19
  42c8b0:	ldp	x19, x20, [sp, #16]
  42c8b4:	ldp	x21, x22, [sp, #32]
  42c8b8:	ldp	x23, x24, [sp, #48]
  42c8bc:	ldp	x29, x30, [sp], #80
  42c8c0:	ret
  42c8c4:	and	x1, x19, #0x7fffffff
  42c8c8:	lsl	w0, w19, #1
  42c8cc:	add	x0, x0, x1
  42c8d0:	lsl	x0, x0, #3
  42c8d4:	ldr	x1, [x22, #104]
  42c8d8:	ldr	w19, [x1, x0]
  42c8dc:	b	42c890 <nftw@plt+0x29d10>
  42c8e0:	add	x3, sp, #0x40
  42c8e4:	mov	w2, #0x1                   	// #1
  42c8e8:	mov	w1, w19
  42c8ec:	mov	x0, x22
  42c8f0:	bl	42c270 <nftw@plt+0x296f0>
  42c8f4:	mov	w20, w0
  42c8f8:	cmp	w0, #0x1
  42c8fc:	b.ls	42c90c <nftw@plt+0x29d8c>  // b.plast
  42c900:	ldr	x0, [sp, #64]
  42c904:	ldrb	w0, [x0, #5]
  42c908:	cbz	w0, 42c8ac <nftw@plt+0x29d2c>
  42c90c:	mov	w24, #0x1                   	// #1
  42c910:	b	42c940 <nftw@plt+0x29dc0>
  42c914:	add	x2, sp, #0x48
  42c918:	mov	w1, w19
  42c91c:	mov	x0, x22
  42c920:	bl	42c7c0 <nftw@plt+0x29c40>
  42c924:	mov	w19, w0
  42c928:	add	x3, sp, #0x40
  42c92c:	mov	w2, w24
  42c930:	mov	w1, w0
  42c934:	mov	x0, x22
  42c938:	bl	42c270 <nftw@plt+0x296f0>
  42c93c:	mov	w20, w0
  42c940:	ldr	x21, [sp, #72]
  42c944:	mov	x0, x21
  42c948:	bl	42bac8 <nftw@plt+0x28f48>
  42c94c:	and	w0, w0, #0xff
  42c950:	cbz	w0, 42c968 <nftw@plt+0x29de8>
  42c954:	cmp	w20, #0x1
  42c958:	b.ls	42c914 <nftw@plt+0x29d94>  // b.plast
  42c95c:	ldr	x0, [sp, #64]
  42c960:	ldrb	w0, [x0, #5]
  42c964:	cbnz	w0, 42c914 <nftw@plt+0x29d94>
  42c968:	cbz	x23, 42c8ac <nftw@plt+0x29d2c>
  42c96c:	str	x21, [x23]
  42c970:	b	42c8ac <nftw@plt+0x29d2c>
  42c974:	stp	x29, x30, [sp, #-48]!
  42c978:	mov	x29, sp
  42c97c:	stp	x19, x20, [sp, #16]
  42c980:	str	x21, [sp, #32]
  42c984:	mov	x20, x8
  42c988:	mov	x21, x1
  42c98c:	mov	w19, w2
  42c990:	stp	xzr, xzr, [x8]
  42c994:	stp	xzr, xzr, [x8, #16]
  42c998:	tbnz	w2, #31, 42ca18 <nftw@plt+0x29e98>
  42c99c:	cmp	w19, #0x1
  42c9a0:	b.ls	42ca08 <nftw@plt+0x29e88>  // b.plast
  42c9a4:	cbz	x21, 42ca40 <nftw@plt+0x29ec0>
  42c9a8:	mov	w1, w19
  42c9ac:	bl	42bb38 <nftw@plt+0x28fb8>
  42c9b0:	and	w0, w0, #0xff
  42c9b4:	cbnz	w0, 42ca58 <nftw@plt+0x29ed8>
  42c9b8:	ldr	x0, [x21, #8]
  42c9bc:	str	x0, [x20]
  42c9c0:	ldr	w2, [x21]
  42c9c4:	sub	w19, w19, w2
  42c9c8:	ldrb	w1, [x21, #6]
  42c9cc:	lsr	w0, w19, w1
  42c9d0:	ldr	w2, [x21, #16]
  42c9d4:	add	w0, w0, w2
  42c9d8:	str	w0, [x20, #8]
  42c9dc:	mov	w2, #0x1                   	// #1
  42c9e0:	lsl	w2, w2, w1
  42c9e4:	sub	w2, w2, #0x1
  42c9e8:	and	w19, w2, w19
  42c9ec:	ldrb	w0, [x21, #7]
  42c9f0:	lsr	w19, w19, w0
  42c9f4:	str	w19, [x20, #12]
  42c9f8:	ldrb	w0, [x21, #5]
  42c9fc:	cmp	w0, #0x0
  42ca00:	cset	w0, ne  // ne = any
  42ca04:	strb	w0, [x20, #24]
  42ca08:	ldp	x19, x20, [sp, #16]
  42ca0c:	ldr	x21, [sp, #32]
  42ca10:	ldp	x29, x30, [sp], #48
  42ca14:	ret
  42ca18:	and	x1, x19, #0x7fffffff
  42ca1c:	lsl	w19, w2, #1
  42ca20:	add	x19, x19, x1
  42ca24:	lsl	x19, x19, #3
  42ca28:	ldr	x1, [x0, #104]
  42ca2c:	add	x2, x1, x19
  42ca30:	ldr	x2, [x2, #16]
  42ca34:	str	x2, [x8, #16]
  42ca38:	ldr	w19, [x1, x19]
  42ca3c:	b	42c99c <nftw@plt+0x29e1c>
  42ca40:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ca44:	add	x2, x2, #0xc98
  42ca48:	mov	w1, #0x6bd                 	// #1725
  42ca4c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ca50:	add	x0, x0, #0xc60
  42ca54:	bl	408d8c <nftw@plt+0x620c>
  42ca58:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ca5c:	add	x2, x2, #0xc98
  42ca60:	mov	w1, #0x6c5                 	// #1733
  42ca64:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ca68:	add	x0, x0, #0xc60
  42ca6c:	bl	408d8c <nftw@plt+0x620c>
  42ca70:	stp	x29, x30, [sp, #-96]!
  42ca74:	mov	x29, sp
  42ca78:	stp	x19, x20, [sp, #16]
  42ca7c:	stp	x21, x22, [sp, #32]
  42ca80:	mov	x19, x0
  42ca84:	mov	x21, x1
  42ca88:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ca8c:	add	x0, x0, #0xe30
  42ca90:	ldp	x4, x5, [x0]
  42ca94:	stp	x4, x5, [sp, #56]
  42ca98:	ldp	x4, x5, [x0, #16]
  42ca9c:	stp	x4, x5, [sp, #72]
  42caa0:	ldr	x0, [x0, #32]
  42caa4:	str	x0, [sp, #88]
  42caa8:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  42caac:	ldr	x0, [x0, #1392]
  42cab0:	cmp	x19, #0x0
  42cab4:	csel	x19, x0, x19, eq  // eq = none
  42cab8:	ands	w3, w3, #0xff
  42cabc:	b.ne	42cb90 <nftw@plt+0x2a010>  // b.any
  42cac0:	sbfiz	x0, x2, #1, #32
  42cac4:	add	x0, x0, w2, sxtw
  42cac8:	lsl	x0, x0, #3
  42cacc:	ldr	x4, [x1]
  42cad0:	add	x20, x4, x0
  42cad4:	ldrb	w1, [x20, #4]
  42cad8:	ldr	w4, [x4, x0]
  42cadc:	cmp	w1, #0x4
  42cae0:	b.ls	42cba4 <nftw@plt+0x2a024>  // b.plast
  42cae4:	adrp	x5, 45c000 <_obstack_memory_used@@Base+0x119fc>
  42cae8:	add	x5, x5, #0x668
  42caec:	ldrb	w1, [x20, #5]
  42caf0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42caf4:	add	x0, x0, #0xcc0
  42caf8:	adrp	x6, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cafc:	add	x6, x6, #0xcb8
  42cb00:	cmp	w1, #0x0
  42cb04:	csel	x6, x6, x0, ne  // ne = any
  42cb08:	mov	x3, x20
  42cb0c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cb10:	add	x1, x1, #0xce0
  42cb14:	mov	x0, x19
  42cb18:	bl	402b30 <fprintf@plt>
  42cb1c:	mov	x1, x20
  42cb20:	mov	x0, x21
  42cb24:	bl	42b36c <nftw@plt+0x287ec>
  42cb28:	mov	x22, x0
  42cb2c:	ldr	w3, [x20, #16]
  42cb30:	ldr	x2, [x20, #8]
  42cb34:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cb38:	add	x1, x1, #0xd28
  42cb3c:	mov	x0, x19
  42cb40:	bl	402b30 <fprintf@plt>
  42cb44:	cbz	x22, 42cbf0 <nftw@plt+0x2a070>
  42cb48:	ldr	x2, [x21]
  42cb4c:	sub	x2, x22, x2
  42cb50:	asr	x2, x2, #3
  42cb54:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42cb58:	movk	x0, #0xaaab
  42cb5c:	mul	w2, w2, w0
  42cb60:	ldr	x3, [x22, #8]
  42cb64:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cb68:	add	x1, x1, #0xcc8
  42cb6c:	mov	x0, x19
  42cb70:	bl	402b30 <fprintf@plt>
  42cb74:	mov	x1, x19
  42cb78:	mov	w0, #0xa                   	// #10
  42cb7c:	bl	4025e0 <fputc@plt>
  42cb80:	ldp	x19, x20, [sp, #16]
  42cb84:	ldp	x21, x22, [sp, #32]
  42cb88:	ldp	x29, x30, [sp], #96
  42cb8c:	ret
  42cb90:	sbfiz	x0, x2, #5, #32
  42cb94:	ldr	x1, [x1, #24]
  42cb98:	add	x20, x1, x0
  42cb9c:	ldr	w4, [x1, x0]
  42cba0:	mov	w1, #0x4                   	// #4
  42cba4:	add	x0, sp, #0x60
  42cba8:	add	x1, x0, w1, uxtb #3
  42cbac:	ldur	x5, [x1, #-40]
  42cbb0:	cbz	w3, 42caec <nftw@plt+0x29f6c>
  42cbb4:	adrp	x6, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cbb8:	add	x6, x6, #0xcc0
  42cbbc:	mov	x3, x20
  42cbc0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cbc4:	add	x1, x1, #0xce0
  42cbc8:	mov	x0, x19
  42cbcc:	bl	402b30 <fprintf@plt>
  42cbd0:	ldr	x0, [x20, #8]
  42cbd4:	ldr	w3, [x20, #4]
  42cbd8:	ldr	x2, [x0]
  42cbdc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cbe0:	add	x1, x1, #0xd10
  42cbe4:	mov	x0, x19
  42cbe8:	bl	402b30 <fprintf@plt>
  42cbec:	b	42cb74 <nftw@plt+0x29ff4>
  42cbf0:	mov	w2, #0xffffffff            	// #-1
  42cbf4:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cbf8:	add	x3, x3, #0xcb0
  42cbfc:	b	42cb64 <nftw@plt+0x29fe4>
  42cc00:	sub	sp, sp, #0x80
  42cc04:	stp	x29, x30, [sp, #32]
  42cc08:	add	x29, sp, #0x20
  42cc0c:	stp	x19, x20, [sp, #48]
  42cc10:	stp	x21, x22, [sp, #64]
  42cc14:	mov	x20, x0
  42cc18:	mov	w19, w1
  42cc1c:	mov	x22, x2
  42cc20:	tbnz	w1, #31, 42cc3c <nftw@plt+0x2a0bc>
  42cc24:	cbnz	w19, 42cc58 <nftw@plt+0x2a0d8>
  42cc28:	ldp	x19, x20, [sp, #48]
  42cc2c:	ldp	x21, x22, [sp, #64]
  42cc30:	ldp	x29, x30, [sp, #32]
  42cc34:	add	sp, sp, #0x80
  42cc38:	ret
  42cc3c:	and	x0, x19, #0x7fffffff
  42cc40:	lsl	w19, w1, #1
  42cc44:	add	x19, x19, x0
  42cc48:	lsl	x19, x19, #3
  42cc4c:	ldr	x0, [x20, #104]
  42cc50:	ldr	w19, [x0, x19]
  42cc54:	b	42cc24 <nftw@plt+0x2a0a4>
  42cc58:	stp	x23, x24, [sp, #80]
  42cc5c:	stp	x25, x26, [sp, #96]
  42cc60:	add	x3, sp, #0x78
  42cc64:	mov	w2, #0x2                   	// #2
  42cc68:	mov	w1, w19
  42cc6c:	mov	x0, x20
  42cc70:	bl	42c270 <nftw@plt+0x296f0>
  42cc74:	mov	w23, w0
  42cc78:	ldr	x1, [sp, #120]
  42cc7c:	cbz	x1, 42cd28 <nftw@plt+0x2a1a8>
  42cc80:	ldr	x25, [x1, #8]
  42cc84:	ldr	w21, [x1]
  42cc88:	sub	w0, w0, w21
  42cc8c:	ldrb	w2, [x1, #6]
  42cc90:	lsr	w24, w0, w2
  42cc94:	ldr	w3, [x1, #16]
  42cc98:	add	w24, w24, w3
  42cc9c:	mov	w21, #0x1                   	// #1
  42cca0:	lsl	w21, w21, w2
  42cca4:	sub	w21, w21, #0x1
  42cca8:	and	w21, w21, w0
  42ccac:	ldrb	w0, [x1, #7]
  42ccb0:	lsr	w21, w21, w0
  42ccb4:	ldrb	w0, [x1, #5]
  42ccb8:	cmp	w0, #0x0
  42ccbc:	cset	w26, ne  // ne = any
  42ccc0:	cmp	w19, w23
  42ccc4:	cset	w0, ne  // ne = any
  42ccc8:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cccc:	add	x3, x3, #0xd38
  42ccd0:	b.eq	42cd10 <nftw@plt+0x2a190>  // b.none
  42ccd4:	str	w23, [sp, #16]
  42ccd8:	str	w19, [sp, #8]
  42ccdc:	str	w0, [sp]
  42cce0:	ldr	x7, [sp, #120]
  42cce4:	mov	w6, w26
  42cce8:	mov	w5, w21
  42ccec:	mov	w4, w24
  42ccf0:	mov	x2, x25
  42ccf4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42ccf8:	add	x1, x1, #0xd48
  42ccfc:	mov	x0, x22
  42cd00:	bl	402b30 <fprintf@plt>
  42cd04:	ldp	x23, x24, [sp, #80]
  42cd08:	ldp	x25, x26, [sp, #96]
  42cd0c:	b	42cc28 <nftw@plt+0x2a0a8>
  42cd10:	mov	x0, x20
  42cd14:	bl	42b36c <nftw@plt+0x287ec>
  42cd18:	cbz	x0, 42cd48 <nftw@plt+0x2a1c8>
  42cd1c:	ldr	x3, [x0, #8]
  42cd20:	mov	w0, #0x0                   	// #0
  42cd24:	b	42ccd4 <nftw@plt+0x2a154>
  42cd28:	mov	w0, #0xffffffff            	// #-1
  42cd2c:	mov	w26, w0
  42cd30:	mov	w21, w0
  42cd34:	mov	w24, w0
  42cd38:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x109fc>
  42cd3c:	add	x3, x3, #0x780
  42cd40:	mov	x25, x3
  42cd44:	b	42ccd4 <nftw@plt+0x2a154>
  42cd48:	mov	w0, #0x0                   	// #0
  42cd4c:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cd50:	add	x3, x3, #0xd40
  42cd54:	b	42ccd4 <nftw@plt+0x2a154>
  42cd58:	cbz	x0, 42ce1c <nftw@plt+0x2a29c>
  42cd5c:	stp	x29, x30, [sp, #-64]!
  42cd60:	mov	x29, sp
  42cd64:	stp	x19, x20, [sp, #16]
  42cd68:	stp	x21, x22, [sp, #32]
  42cd6c:	str	x23, [sp, #48]
  42cd70:	mov	x22, x0
  42cd74:	mov	x23, x1
  42cd78:	mov	x21, x2
  42cd7c:	ldr	w19, [x0, #12]
  42cd80:	mov	w0, #0x0                   	// #0
  42cd84:	cbz	w19, 42ce00 <nftw@plt+0x2a280>
  42cd88:	subs	w19, w19, #0x1
  42cd8c:	b.mi	42ce2c <nftw@plt+0x2a2ac>  // b.first
  42cd90:	sbfiz	x20, x19, #1, #32
  42cd94:	add	x20, x20, w19, sxtw
  42cd98:	lsl	x20, x20, #3
  42cd9c:	b	42cdac <nftw@plt+0x2a22c>
  42cda0:	sub	x20, x20, #0x18
  42cda4:	subs	w19, w19, #0x1
  42cda8:	b.mi	42ce2c <nftw@plt+0x2a2ac>  // b.first
  42cdac:	ldr	x3, [x22]
  42cdb0:	add	x3, x3, x20
  42cdb4:	ldr	x0, [x3, #8]
  42cdb8:	cbz	x0, 42cda0 <nftw@plt+0x2a220>
  42cdbc:	mov	x1, x23
  42cdc0:	bl	448fdc <nftw@plt+0x4645c>
  42cdc4:	cbnz	w0, 42cda0 <nftw@plt+0x2a220>
  42cdc8:	tbnz	w19, #31, 42ce24 <nftw@plt+0x2a2a4>
  42cdcc:	ldr	w0, [x22, #12]
  42cdd0:	sub	w0, w0, #0x1
  42cdd4:	cmp	w0, w19
  42cdd8:	b.eq	42ce14 <nftw@plt+0x2a294>  // b.none
  42cddc:	sxtw	x19, w19
  42cde0:	add	x19, x19, #0x1
  42cde4:	ldr	x0, [x22]
  42cde8:	add	x19, x19, x19, lsl #1
  42cdec:	lsl	x19, x19, #3
  42cdf0:	ldr	w0, [x0, x19]
  42cdf4:	sub	w0, w0, #0x1
  42cdf8:	str	w0, [x21]
  42cdfc:	mov	w0, #0x1                   	// #1
  42ce00:	ldp	x19, x20, [sp, #16]
  42ce04:	ldp	x21, x22, [sp, #32]
  42ce08:	ldr	x23, [sp, #48]
  42ce0c:	ldp	x29, x30, [sp], #64
  42ce10:	ret
  42ce14:	ldr	w0, [x22, #56]
  42ce18:	b	42cdf8 <nftw@plt+0x2a278>
  42ce1c:	mov	w0, #0x0                   	// #0
  42ce20:	ret
  42ce24:	mov	w0, #0x0                   	// #0
  42ce28:	b	42ce00 <nftw@plt+0x2a280>
  42ce2c:	mov	w0, #0x0                   	// #0
  42ce30:	b	42ce00 <nftw@plt+0x2a280>
  42ce34:	ldr	w14, [x0, #8]
  42ce38:	ubfiz	x13, x14, #1, #32
  42ce3c:	add	x13, x13, w14, uxtw
  42ce40:	lsl	x13, x13, #3
  42ce44:	ldr	w2, [x0, #12]
  42ce48:	add	x2, x2, x2, lsl #1
  42ce4c:	lsl	x12, x2, #3
  42ce50:	ldr	w15, [x0, #32]
  42ce54:	lsl	x15, x15, #5
  42ce58:	ldr	x9, [x0, #24]
  42ce5c:	cbz	x9, 42ce7c <nftw@plt+0x2a2fc>
  42ce60:	ldr	w11, [x0, #36]
  42ce64:	sub	w11, w11, #0x1
  42ce68:	sbfiz	x11, x11, #5, #32
  42ce6c:	add	x11, x9, x11
  42ce70:	mov	x3, #0x0                   	// #0
  42ce74:	mov	x10, #0x0                   	// #0
  42ce78:	b	42cef4 <nftw@plt+0x2a374>
  42ce7c:	mov	x3, #0x0                   	// #0
  42ce80:	mov	x10, #0x0                   	// #0
  42ce84:	ldr	w2, [x0, #36]
  42ce88:	lsl	x2, x2, #5
  42ce8c:	mov	w14, w14
  42ce90:	str	x14, [x1]
  42ce94:	ldr	w4, [x0, #12]
  42ce98:	str	x4, [x1, #8]
  42ce9c:	str	x13, [x1, #16]
  42cea0:	str	x12, [x1, #24]
  42cea4:	adrp	x4, 48e000 <__environ@@GLIBC_2.17+0xa68>
  42cea8:	ldr	w4, [x4, #2412]
  42ceac:	str	x4, [x1, #32]
  42ceb0:	adrp	x4, 48e000 <__environ@@GLIBC_2.17+0xa68>
  42ceb4:	ldr	w4, [x4, #2408]
  42ceb8:	str	x4, [x1, #40]
  42cebc:	ldr	w4, [x0, #36]
  42cec0:	str	x4, [x1, #48]
  42cec4:	str	x15, [x1, #56]
  42cec8:	str	x10, [x1, #72]
  42cecc:	str	x2, [x1, #64]
  42ced0:	str	x3, [x1, #80]
  42ced4:	ldr	w2, [x0, #100]
  42ced8:	add	x2, x2, x2, lsl #1
  42cedc:	lsl	x2, x2, #3
  42cee0:	str	x2, [x1, #88]
  42cee4:	ldr	w0, [x0, #96]
  42cee8:	str	x0, [x1, #96]
  42ceec:	ret
  42cef0:	add	x9, x9, #0x20
  42cef4:	cmp	x11, x9
  42cef8:	b.cc	42ce84 <nftw@plt+0x2a304>  // b.lo, b.ul, b.last
  42cefc:	ldr	w2, [x9, #4]
  42cf00:	lsl	w8, w2, #1
  42cf04:	ubfiz	x4, x2, #3, #31
  42cf08:	add	x10, x4, x10
  42cf0c:	cmp	wzr, w2, lsl #1
  42cf10:	b.eq	42cef0 <nftw@plt+0x2a370>  // b.none
  42cf14:	ldr	x4, [x9, #16]
  42cf18:	mov	w2, #0x0                   	// #0
  42cf1c:	add	w5, w2, #0x1
  42cf20:	ldr	w7, [x4, w2, uxtw #2]
  42cf24:	ldr	w6, [x4, x5, lsl #2]
  42cf28:	add	x5, x3, #0x4
  42cf2c:	cmp	w7, w6
  42cf30:	csel	x3, x5, x3, eq  // eq = none
  42cf34:	add	w2, w2, #0x2
  42cf38:	cmp	w8, w2
  42cf3c:	b.hi	42cf1c <nftw@plt+0x2a39c>  // b.pmore
  42cf40:	b	42cef0 <nftw@plt+0x2a370>
  42cf44:	cbz	x1, 42d09c <nftw@plt+0x2a51c>
  42cf48:	stp	x29, x30, [sp, #-64]!
  42cf4c:	mov	x29, sp
  42cf50:	stp	x19, x20, [sp, #16]
  42cf54:	stp	x21, x22, [sp, #32]
  42cf58:	str	x23, [sp, #48]
  42cf5c:	mov	x20, x0
  42cf60:	mov	x19, x1
  42cf64:	mov	w23, w2
  42cf68:	mov	w22, w3
  42cf6c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  42cf70:	ldr	x0, [x0, #1392]
  42cf74:	cmp	x20, #0x0
  42cf78:	csel	x20, x0, x20, eq  // eq = none
  42cf7c:	ldr	w2, [x1, #12]
  42cf80:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cf84:	add	x1, x1, #0xd80
  42cf88:	mov	x0, x20
  42cf8c:	bl	402b30 <fprintf@plt>
  42cf90:	ldr	w2, [x19, #36]
  42cf94:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cf98:	add	x1, x1, #0xda0
  42cf9c:	mov	x0, x20
  42cfa0:	bl	402b30 <fprintf@plt>
  42cfa4:	ldr	w2, [x19, #48]
  42cfa8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cfac:	add	x1, x1, #0xdc0
  42cfb0:	mov	x0, x20
  42cfb4:	bl	402b30 <fprintf@plt>
  42cfb8:	ldr	w2, [x19, #56]
  42cfbc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cfc0:	add	x1, x1, #0xde0
  42cfc4:	mov	x0, x20
  42cfc8:	bl	402b30 <fprintf@plt>
  42cfcc:	cbnz	w23, 42cfe8 <nftw@plt+0x2a468>
  42cfd0:	cbnz	w22, 42d040 <nftw@plt+0x2a4c0>
  42cfd4:	ldp	x19, x20, [sp, #16]
  42cfd8:	ldp	x21, x22, [sp, #32]
  42cfdc:	ldr	x23, [sp, #48]
  42cfe0:	ldp	x29, x30, [sp], #64
  42cfe4:	ret
  42cfe8:	mov	x3, x20
  42cfec:	mov	x2, #0x14                  	// #20
  42cff0:	mov	x1, #0x1                   	// #1
  42cff4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42cff8:	add	x0, x0, #0xe00
  42cffc:	bl	402950 <fwrite@plt>
  42d000:	mov	w21, #0x0                   	// #0
  42d004:	ldr	w0, [x19, #12]
  42d008:	cmp	w0, w21
  42d00c:	b.ls	42d030 <nftw@plt+0x2a4b0>  // b.plast
  42d010:	mov	w3, #0x0                   	// #0
  42d014:	mov	w2, w21
  42d018:	mov	x1, x19
  42d01c:	mov	x0, x20
  42d020:	bl	42ca70 <nftw@plt+0x29ef0>
  42d024:	add	w21, w21, #0x1
  42d028:	cmp	w23, w21
  42d02c:	b.ne	42d004 <nftw@plt+0x2a484>  // b.any
  42d030:	mov	x1, x20
  42d034:	mov	w0, #0xa                   	// #10
  42d038:	bl	4025e0 <fputc@plt>
  42d03c:	b	42cfd0 <nftw@plt+0x2a450>
  42d040:	mov	x3, x20
  42d044:	mov	x2, #0x11                  	// #17
  42d048:	mov	x1, #0x1                   	// #1
  42d04c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42d050:	add	x0, x0, #0xe18
  42d054:	bl	402950 <fwrite@plt>
  42d058:	mov	w21, #0x0                   	// #0
  42d05c:	mov	w23, #0x1                   	// #1
  42d060:	ldr	w0, [x19, #36]
  42d064:	cmp	w0, w21
  42d068:	b.ls	42d08c <nftw@plt+0x2a50c>  // b.plast
  42d06c:	mov	w3, w23
  42d070:	mov	w2, w21
  42d074:	mov	x1, x19
  42d078:	mov	x0, x20
  42d07c:	bl	42ca70 <nftw@plt+0x29ef0>
  42d080:	add	w21, w21, #0x1
  42d084:	cmp	w22, w21
  42d088:	b.ne	42d060 <nftw@plt+0x2a4e0>  // b.any
  42d08c:	mov	x1, x20
  42d090:	mov	w0, #0xa                   	// #10
  42d094:	bl	4025e0 <fputc@plt>
  42d098:	b	42cfd4 <nftw@plt+0x2a454>
  42d09c:	ret
  42d0a0:	stp	x29, x30, [sp, #-48]!
  42d0a4:	mov	x29, sp
  42d0a8:	stp	x21, x22, [sp, #32]
  42d0ac:	mov	x21, x0
  42d0b0:	ldr	w0, [x0, #120]
  42d0b4:	cbz	w0, 42d120 <nftw@plt+0x2a5a0>
  42d0b8:	stp	x19, x20, [sp, #16]
  42d0bc:	mov	w19, #0x0                   	// #0
  42d0c0:	mov	x22, #0x18                  	// #24
  42d0c4:	b	42d0f8 <nftw@plt+0x2a578>
  42d0c8:	add	x1, x21, w19, sxtw #3
  42d0cc:	add	x1, x1, #0x80
  42d0d0:	b	42d110 <nftw@plt+0x2a590>
  42d0d4:	ldr	x0, [x20, #8]
  42d0d8:	bl	402910 <free@plt>
  42d0dc:	mov	x1, x22
  42d0e0:	mov	x0, x20
  42d0e4:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  42d0e8:	add	w19, w19, #0x1
  42d0ec:	ldr	w0, [x21, #120]
  42d0f0:	cmp	w0, w19
  42d0f4:	b.ls	42d11c <nftw@plt+0x2a59c>  // b.plast
  42d0f8:	cmp	w19, #0x1
  42d0fc:	b.le	42d0c8 <nftw@plt+0x2a548>
  42d100:	sbfiz	x1, x19, #3, #32
  42d104:	sub	x0, x1, #0x10
  42d108:	ldr	x1, [x21, #152]
  42d10c:	add	x1, x1, x0
  42d110:	ldr	x20, [x1]
  42d114:	cbnz	x20, 42d0d4 <nftw@plt+0x2a554>
  42d118:	b	42d0e8 <nftw@plt+0x2a568>
  42d11c:	ldp	x19, x20, [sp, #16]
  42d120:	ldr	x0, [x21, #152]
  42d124:	bl	402910 <free@plt>
  42d128:	ldr	x0, [x21, #72]
  42d12c:	bl	402910 <free@plt>
  42d130:	ldp	x21, x22, [sp, #32]
  42d134:	ldp	x29, x30, [sp], #48
  42d138:	ret
  42d13c:	cmp	w1, #0x2
  42d140:	b.gt	42d150 <nftw@plt+0x2a5d0>
  42d144:	add	x1, x0, w1, sxtw #4
  42d148:	add	x0, x1, #0x10
  42d14c:	ret
  42d150:	sbfiz	x1, x1, #4, #32
  42d154:	sub	x1, x1, #0x30
  42d158:	ldr	x0, [x0, #72]
  42d15c:	add	x0, x0, x1
  42d160:	b	42d14c <nftw@plt+0x2a5cc>
  42d164:	stp	x29, x30, [sp, #-16]!
  42d168:	mov	x29, sp
  42d16c:	bl	42d13c <nftw@plt+0x2a5bc>
  42d170:	ldr	w0, [x0]
  42d174:	ldp	x29, x30, [sp], #16
  42d178:	ret
  42d17c:	cmp	w1, #0x2
  42d180:	b.gt	42d190 <nftw@plt+0x2a610>
  42d184:	add	x1, x0, w1, sxtw #4
  42d188:	add	x0, x1, #0x10
  42d18c:	ret
  42d190:	sbfiz	x1, x1, #4, #32
  42d194:	sub	x1, x1, #0x30
  42d198:	ldr	x0, [x0, #72]
  42d19c:	add	x0, x0, x1
  42d1a0:	b	42d18c <nftw@plt+0x2a60c>
  42d1a4:	stp	x29, x30, [sp, #-80]!
  42d1a8:	mov	x29, sp
  42d1ac:	stp	x19, x20, [sp, #16]
  42d1b0:	mov	x20, x8
  42d1b4:	mov	x19, x0
  42d1b8:	cbnz	w1, 42d224 <nftw@plt+0x2a6a4>
  42d1bc:	ldrb	w0, [x0, #84]
  42d1c0:	cbz	w0, 42d1e0 <nftw@plt+0x2a660>
  42d1c4:	ldp	x0, x1, [x19, #88]
  42d1c8:	stp	x0, x1, [x20]
  42d1cc:	ldp	x0, x1, [x19, #104]
  42d1d0:	stp	x0, x1, [x20, #16]
  42d1d4:	ldp	x19, x20, [sp, #16]
  42d1d8:	ldp	x29, x30, [sp], #80
  42d1dc:	ret
  42d1e0:	str	x21, [sp, #32]
  42d1e4:	mov	x0, x19
  42d1e8:	bl	42d164 <nftw@plt+0x2a5e4>
  42d1ec:	add	x8, sp, #0x30
  42d1f0:	mov	w1, #0x0                   	// #0
  42d1f4:	bl	414bf0 <nftw@plt+0x12070>
  42d1f8:	ldp	x0, x1, [sp, #48]
  42d1fc:	stp	x0, x1, [x19, #88]
  42d200:	ldp	x0, x1, [sp, #64]
  42d204:	stp	x0, x1, [x19, #104]
  42d208:	ldr	w0, [x19, #80]
  42d20c:	cbz	w0, 42d214 <nftw@plt+0x2a694>
  42d210:	str	w0, [x19, #100]
  42d214:	mov	w0, #0x1                   	// #1
  42d218:	strb	w0, [x19, #84]
  42d21c:	ldr	x21, [sp, #32]
  42d220:	b	42d1c4 <nftw@plt+0x2a644>
  42d224:	bl	42d164 <nftw@plt+0x2a5e4>
  42d228:	mov	x8, x20
  42d22c:	mov	w1, #0x0                   	// #0
  42d230:	bl	414bf0 <nftw@plt+0x12070>
  42d234:	b	42d1d4 <nftw@plt+0x2a654>
  42d238:	str	w1, [x0, #80]
  42d23c:	strb	wzr, [x0, #84]
  42d240:	ret
  42d244:	stp	x29, x30, [sp, #-64]!
  42d248:	mov	x29, sp
  42d24c:	stp	x19, x20, [sp, #16]
  42d250:	stp	x21, x22, [sp, #32]
  42d254:	stp	x23, x24, [sp, #48]
  42d258:	mov	x20, x0
  42d25c:	mov	w23, w1
  42d260:	mov	w22, w2
  42d264:	mov	x21, x3
  42d268:	ldr	w4, [x0, #8]
  42d26c:	add	w0, w4, #0x1
  42d270:	str	w0, [x20, #8]
  42d274:	cmp	w4, #0x2
  42d278:	b.gt	42d2ac <nftw@plt+0x2a72c>
  42d27c:	add	x20, x20, #0x8
  42d280:	sbfiz	x4, x4, #4, #32
  42d284:	add	x4, x4, #0x8
  42d288:	add	x1, x20, x4
  42d28c:	str	w23, [x20, x4]
  42d290:	str	w2, [x1, #4]
  42d294:	str	x3, [x1, #8]
  42d298:	ldp	x19, x20, [sp, #16]
  42d29c:	ldp	x21, x22, [sp, #32]
  42d2a0:	ldp	x23, x24, [sp, #48]
  42d2a4:	ldp	x29, x30, [sp], #64
  42d2a8:	ret
  42d2ac:	sub	w19, w4, #0x3
  42d2b0:	ldr	x0, [x20, #72]
  42d2b4:	cbz	x0, 42d2e0 <nftw@plt+0x2a760>
  42d2b8:	ldr	w1, [x20, #64]
  42d2bc:	cmp	w19, w1
  42d2c0:	b.ge	42d2f8 <nftw@plt+0x2a778>  // b.tcont
  42d2c4:	sbfiz	x4, x19, #4, #32
  42d2c8:	ldr	x1, [x20, #72]
  42d2cc:	add	x0, x1, x4
  42d2d0:	str	w23, [x1, x4]
  42d2d4:	str	w22, [x0, #4]
  42d2d8:	str	x21, [x0, #8]
  42d2dc:	b	42d298 <nftw@plt+0x2a718>
  42d2e0:	mov	w0, #0x10                  	// #16
  42d2e4:	str	w0, [x20, #64]
  42d2e8:	mov	x0, #0x100                 	// #256
  42d2ec:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42d2f0:	str	x0, [x20, #72]
  42d2f4:	b	42d2c4 <nftw@plt+0x2a744>
  42d2f8:	lsl	w1, w1, #1
  42d2fc:	str	w1, [x20, #64]
  42d300:	sbfiz	x1, x1, #4, #32
  42d304:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  42d308:	str	x0, [x20, #72]
  42d30c:	b	42d2c4 <nftw@plt+0x2a744>
  42d310:	stp	x29, x30, [sp, #-16]!
  42d314:	mov	x29, sp
  42d318:	mov	x5, x1
  42d31c:	mov	w1, w2
  42d320:	mov	x2, x0
  42d324:	str	x5, [x2], #8
  42d328:	str	wzr, [x0, #8]
  42d32c:	str	wzr, [x2, #56]
  42d330:	str	xzr, [x2, #64]
  42d334:	str	wzr, [x0, #80]
  42d338:	strb	wzr, [x0, #84]
  42d33c:	str	wzr, [x0, #120]
  42d340:	str	wzr, [x0, #144]
  42d344:	str	xzr, [x0, #152]
  42d348:	strb	wzr, [x0, #160]
  42d34c:	strb	wzr, [x0, #161]
  42d350:	mov	w2, #0x0                   	// #0
  42d354:	bl	42d244 <nftw@plt+0x2a6c4>
  42d358:	ldp	x29, x30, [sp], #16
  42d35c:	ret
  42d360:	stp	x29, x30, [sp, #-48]!
  42d364:	mov	x29, sp
  42d368:	stp	x19, x20, [sp, #16]
  42d36c:	stp	x21, x22, [sp, #32]
  42d370:	mov	x20, x0
  42d374:	mov	w19, w1
  42d378:	mov	w22, w2
  42d37c:	mov	w21, w3
  42d380:	ldr	w0, [x0, #8]
  42d384:	cmp	w0, w1
  42d388:	b.eq	42d3b4 <nftw@plt+0x2a834>  // b.none
  42d38c:	mov	x0, x20
  42d390:	bl	42d17c <nftw@plt+0x2a5fc>
  42d394:	str	w22, [x0]
  42d398:	str	w21, [x0, #4]
  42d39c:	cbnz	w19, 42d3a4 <nftw@plt+0x2a824>
  42d3a0:	strb	wzr, [x20, #84]
  42d3a4:	ldp	x19, x20, [sp, #16]
  42d3a8:	ldp	x21, x22, [sp, #32]
  42d3ac:	ldp	x29, x30, [sp], #48
  42d3b0:	ret
  42d3b4:	mov	x3, #0x0                   	// #0
  42d3b8:	mov	w2, w21
  42d3bc:	mov	w1, w22
  42d3c0:	mov	x0, x20
  42d3c4:	bl	42d244 <nftw@plt+0x2a6c4>
  42d3c8:	b	42d39c <nftw@plt+0x2a81c>
  42d3cc:	ldr	w1, [x0, #120]
  42d3d0:	cbz	w1, 42d404 <nftw@plt+0x2a884>
  42d3d4:	sub	w1, w1, #0x1
  42d3d8:	cmp	w1, #0x1
  42d3dc:	b.le	42d3f8 <nftw@plt+0x2a878>
  42d3e0:	sbfiz	x1, x1, #3, #32
  42d3e4:	sub	x1, x1, #0x10
  42d3e8:	ldr	x0, [x0, #152]
  42d3ec:	add	x1, x0, x1
  42d3f0:	ldr	x0, [x1]
  42d3f4:	ret
  42d3f8:	add	x1, x0, w1, sxtw #3
  42d3fc:	add	x1, x1, #0x80
  42d400:	b	42d3f0 <nftw@plt+0x2a870>
  42d404:	mov	x0, #0x0                   	// #0
  42d408:	b	42d3f4 <nftw@plt+0x2a874>
  42d40c:	stp	x29, x30, [sp, #-48]!
  42d410:	mov	x29, sp
  42d414:	stp	x21, x22, [sp, #32]
  42d418:	mov	x21, x0
  42d41c:	mov	w0, #0x1                   	// #1
  42d420:	strb	w0, [x21, #160]
  42d424:	ldr	w0, [x21, #120]
  42d428:	cbz	w0, 42d494 <nftw@plt+0x2a914>
  42d42c:	stp	x19, x20, [sp, #16]
  42d430:	mov	w19, #0x0                   	// #0
  42d434:	mov	x22, #0x18                  	// #24
  42d438:	b	42d46c <nftw@plt+0x2a8ec>
  42d43c:	add	x1, x21, w19, sxtw #3
  42d440:	add	x1, x1, #0x80
  42d444:	b	42d484 <nftw@plt+0x2a904>
  42d448:	ldr	x0, [x20, #8]
  42d44c:	bl	402910 <free@plt>
  42d450:	mov	x1, x22
  42d454:	mov	x0, x20
  42d458:	bl	44acc0 <_obstack_memory_used@@Base+0x6bc>
  42d45c:	add	w19, w19, #0x1
  42d460:	ldr	w0, [x21, #120]
  42d464:	cmp	w0, w19
  42d468:	b.ls	42d490 <nftw@plt+0x2a910>  // b.plast
  42d46c:	cmp	w19, #0x1
  42d470:	b.le	42d43c <nftw@plt+0x2a8bc>
  42d474:	sbfiz	x1, x19, #3, #32
  42d478:	sub	x0, x1, #0x10
  42d47c:	ldr	x1, [x21, #152]
  42d480:	add	x1, x1, x0
  42d484:	ldr	x20, [x1]
  42d488:	cbnz	x20, 42d448 <nftw@plt+0x2a8c8>
  42d48c:	b	42d45c <nftw@plt+0x2a8dc>
  42d490:	ldp	x19, x20, [sp, #16]
  42d494:	str	wzr, [x21, #120]
  42d498:	ldp	x21, x22, [sp, #32]
  42d49c:	ldp	x29, x30, [sp], #48
  42d4a0:	ret
  42d4a4:	ldrb	w2, [x0, #160]
  42d4a8:	cbnz	w2, 42d4b8 <nftw@plt+0x2a938>
  42d4ac:	mov	w3, #0x60000000            	// #1610612736
  42d4b0:	cmp	w1, w3
  42d4b4:	b.hi	42d4c0 <nftw@plt+0x2a940>  // b.pmore
  42d4b8:	mov	w0, w2
  42d4bc:	ret
  42d4c0:	stp	x29, x30, [sp, #-16]!
  42d4c4:	mov	x29, sp
  42d4c8:	bl	42d40c <nftw@plt+0x2a88c>
  42d4cc:	mov	w2, #0x1                   	// #1
  42d4d0:	mov	w0, w2
  42d4d4:	ldp	x29, x30, [sp], #16
  42d4d8:	ret
  42d4dc:	stp	x29, x30, [sp, #-32]!
  42d4e0:	mov	x29, sp
  42d4e4:	stp	x19, x20, [sp, #16]
  42d4e8:	mov	x19, x0
  42d4ec:	mov	x20, x3
  42d4f0:	str	w1, [x0]
  42d4f4:	str	w2, [x0, #4]
  42d4f8:	mov	x0, x3
  42d4fc:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  42d500:	str	x0, [x19, #8]
  42d504:	mov	x0, x20
  42d508:	bl	4024f0 <strlen@plt>
  42d50c:	str	x0, [x19, #16]
  42d510:	ldp	x19, x20, [sp, #16]
  42d514:	ldp	x29, x30, [sp], #32
  42d518:	ret
  42d51c:	stp	x29, x30, [sp, #-112]!
  42d520:	mov	x29, sp
  42d524:	stp	x19, x20, [sp, #16]
  42d528:	str	x21, [sp, #32]
  42d52c:	mov	x20, x0
  42d530:	mov	x19, x1
  42d534:	mov	w21, w2
  42d538:	add	x8, sp, #0x50
  42d53c:	mov	w1, #0x1                   	// #1
  42d540:	ldr	w0, [x0]
  42d544:	bl	414bf0 <nftw@plt+0x12070>
  42d548:	ldr	x0, [sp, #80]
  42d54c:	cmp	x0, x19
  42d550:	b.eq	42d568 <nftw@plt+0x2a9e8>  // b.none
  42d554:	mov	w0, #0x0                   	// #0
  42d558:	ldp	x19, x20, [sp, #16]
  42d55c:	ldr	x21, [sp, #32]
  42d560:	ldp	x29, x30, [sp], #112
  42d564:	ret
  42d568:	mov	w0, #0x0                   	// #0
  42d56c:	ldr	w1, [sp, #88]
  42d570:	cmp	w1, w21
  42d574:	b.gt	42d558 <nftw@plt+0x2a9d8>
  42d578:	add	x8, sp, #0x30
  42d57c:	mov	w1, #0x1                   	// #1
  42d580:	ldr	w0, [x20, #4]
  42d584:	bl	414bf0 <nftw@plt+0x12070>
  42d588:	mov	w0, #0x0                   	// #0
  42d58c:	ldr	x1, [sp, #48]
  42d590:	cmp	x1, x19
  42d594:	b.ne	42d558 <nftw@plt+0x2a9d8>  // b.any
  42d598:	ldr	w0, [sp, #56]
  42d59c:	cmp	w0, w21
  42d5a0:	cset	w0, ge  // ge = tcont
  42d5a4:	b	42d558 <nftw@plt+0x2a9d8>
  42d5a8:	stp	x29, x30, [sp, #-48]!
  42d5ac:	mov	x29, sp
  42d5b0:	stp	x19, x20, [sp, #16]
  42d5b4:	mov	x19, x0
  42d5b8:	ldr	w0, [x0, #4]
  42d5bc:	cmp	w0, w1
  42d5c0:	b.eq	42d5d4 <nftw@plt+0x2aa54>  // b.none
  42d5c4:	mov	w0, #0x0                   	// #0
  42d5c8:	ldp	x19, x20, [sp, #16]
  42d5cc:	ldp	x29, x30, [sp], #48
  42d5d0:	ret
  42d5d4:	str	x21, [sp, #32]
  42d5d8:	mov	x21, x3
  42d5dc:	str	w2, [x19, #4]
  42d5e0:	mov	x0, x3
  42d5e4:	bl	4024f0 <strlen@plt>
  42d5e8:	mov	x20, x0
  42d5ec:	ldr	x1, [x19, #16]
  42d5f0:	add	x1, x1, #0x1
  42d5f4:	add	x1, x1, x0
  42d5f8:	ldr	x0, [x19, #8]
  42d5fc:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  42d600:	str	x0, [x19, #8]
  42d604:	ldr	x3, [x19, #16]
  42d608:	mov	x2, x20
  42d60c:	mov	x1, x21
  42d610:	add	x0, x0, x3
  42d614:	bl	402490 <memcpy@plt>
  42d618:	ldr	x0, [x19, #16]
  42d61c:	add	x20, x20, x0
  42d620:	str	x20, [x19, #16]
  42d624:	ldr	x0, [x19, #8]
  42d628:	strb	wzr, [x0, x20]
  42d62c:	mov	w0, #0x1                   	// #1
  42d630:	ldr	x21, [sp, #32]
  42d634:	b	42d5c8 <nftw@plt+0x2aa48>
  42d638:	ldr	x1, [x0, #16]
  42d63c:	cbz	x1, 42d658 <nftw@plt+0x2aad8>
  42d640:	ldr	x0, [x0, #8]
  42d644:	add	x1, x0, x1
  42d648:	ldurb	w0, [x1, #-1]
  42d64c:	cmp	w0, #0xa
  42d650:	cset	w0, eq  // eq = none
  42d654:	ret
  42d658:	mov	w0, #0x0                   	// #0
  42d65c:	b	42d654 <nftw@plt+0x2aad4>
  42d660:	stp	x29, x30, [sp, #-128]!
  42d664:	mov	x29, sp
  42d668:	stp	x19, x20, [sp, #16]
  42d66c:	stp	x21, x22, [sp, #32]
  42d670:	mov	x22, x0
  42d674:	mov	w21, w1
  42d678:	mov	w20, w2
  42d67c:	mov	x19, x3
  42d680:	bl	42d4a4 <nftw@plt+0x2a924>
  42d684:	and	w4, w0, #0xff
  42d688:	cbz	w4, 42d69c <nftw@plt+0x2ab1c>
  42d68c:	ldp	x19, x20, [sp, #16]
  42d690:	ldp	x21, x22, [sp, #32]
  42d694:	ldp	x29, x30, [sp], #128
  42d698:	ret
  42d69c:	mov	w1, w20
  42d6a0:	mov	x0, x22
  42d6a4:	bl	42d4a4 <nftw@plt+0x2a924>
  42d6a8:	and	w0, w0, #0xff
  42d6ac:	cbnz	w0, 42d68c <nftw@plt+0x2ab0c>
  42d6b0:	str	x23, [sp, #48]
  42d6b4:	add	x8, sp, #0x60
  42d6b8:	mov	w1, #0x1                   	// #1
  42d6bc:	mov	w0, w21
  42d6c0:	bl	414bf0 <nftw@plt+0x12070>
  42d6c4:	ldr	w23, [sp, #108]
  42d6c8:	add	x8, sp, #0x40
  42d6cc:	mov	w1, #0x1                   	// #1
  42d6d0:	mov	w0, w20
  42d6d4:	bl	414bf0 <nftw@plt+0x12070>
  42d6d8:	ldr	x1, [sp, #96]
  42d6dc:	ldr	x0, [sp, #64]
  42d6e0:	cmp	x1, x0
  42d6e4:	b.ne	42d7a0 <nftw@plt+0x2ac20>  // b.any
  42d6e8:	ldr	w1, [sp, #104]
  42d6ec:	ldr	w0, [sp, #72]
  42d6f0:	cmp	w1, w0
  42d6f4:	b.ne	42d7b0 <nftw@plt+0x2ac30>  // b.any
  42d6f8:	ldr	w0, [sp, #76]
  42d6fc:	cmp	w0, w23
  42d700:	b.lt	42d7c0 <nftw@plt+0x2ac40>  // b.tstop
  42d704:	mov	w1, #0xa                   	// #10
  42d708:	mov	x0, x19
  42d70c:	bl	402940 <strchr@plt>
  42d710:	cbz	x0, 42d72c <nftw@plt+0x2abac>
  42d714:	cmp	w21, w20
  42d718:	b.ne	42d7d0 <nftw@plt+0x2ac50>  // b.any
  42d71c:	cmp	w23, #0x1
  42d720:	b.ne	42d7e0 <nftw@plt+0x2ac60>  // b.any
  42d724:	ldrb	w0, [x0, #1]
  42d728:	cbnz	w0, 42d7f0 <nftw@plt+0x2ac70>
  42d72c:	mov	x0, x22
  42d730:	bl	42d3cc <nftw@plt+0x2a84c>
  42d734:	mov	x23, x0
  42d738:	cbz	x0, 42d748 <nftw@plt+0x2abc8>
  42d73c:	bl	42d638 <nftw@plt+0x2aab8>
  42d740:	and	w0, w0, #0xff
  42d744:	cbz	w0, 42d800 <nftw@plt+0x2ac80>
  42d748:	mov	x0, #0x18                  	// #24
  42d74c:	bl	44af00 <_obstack_memory_used@@Base+0x8fc>
  42d750:	mov	x23, x0
  42d754:	mov	x3, x19
  42d758:	mov	w2, w20
  42d75c:	mov	w1, w21
  42d760:	bl	42d4dc <nftw@plt+0x2a95c>
  42d764:	ldr	w1, [x22, #120]
  42d768:	add	w2, w1, #0x1
  42d76c:	str	w2, [x22, #120]
  42d770:	cmp	w1, #0x1
  42d774:	b.le	42d824 <nftw@plt+0x2aca4>
  42d778:	sub	w19, w1, #0x2
  42d77c:	ldr	x0, [x22, #152]
  42d780:	cbz	x0, 42d834 <nftw@plt+0x2acb4>
  42d784:	ldr	w1, [x22, #144]
  42d788:	cmp	w19, w1
  42d78c:	b.ge	42d84c <nftw@plt+0x2accc>  // b.tcont
  42d790:	ldr	x0, [x22, #152]
  42d794:	str	x23, [x0, w19, sxtw #3]
  42d798:	ldr	x23, [sp, #48]
  42d79c:	b	42d68c <nftw@plt+0x2ab0c>
  42d7a0:	mov	x0, x22
  42d7a4:	bl	42d40c <nftw@plt+0x2a88c>
  42d7a8:	ldr	x23, [sp, #48]
  42d7ac:	b	42d68c <nftw@plt+0x2ab0c>
  42d7b0:	mov	x0, x22
  42d7b4:	bl	42d40c <nftw@plt+0x2a88c>
  42d7b8:	ldr	x23, [sp, #48]
  42d7bc:	b	42d68c <nftw@plt+0x2ab0c>
  42d7c0:	mov	x0, x22
  42d7c4:	bl	42d40c <nftw@plt+0x2a88c>
  42d7c8:	ldr	x23, [sp, #48]
  42d7cc:	b	42d68c <nftw@plt+0x2ab0c>
  42d7d0:	mov	x0, x22
  42d7d4:	bl	42d40c <nftw@plt+0x2a88c>
  42d7d8:	ldr	x23, [sp, #48]
  42d7dc:	b	42d68c <nftw@plt+0x2ab0c>
  42d7e0:	mov	x0, x22
  42d7e4:	bl	42d40c <nftw@plt+0x2a88c>
  42d7e8:	ldr	x23, [sp, #48]
  42d7ec:	b	42d68c <nftw@plt+0x2ab0c>
  42d7f0:	mov	x0, x22
  42d7f4:	bl	42d40c <nftw@plt+0x2a88c>
  42d7f8:	ldr	x23, [sp, #48]
  42d7fc:	b	42d68c <nftw@plt+0x2ab0c>
  42d800:	mov	x3, x19
  42d804:	mov	w2, w20
  42d808:	mov	w1, w21
  42d80c:	mov	x0, x23
  42d810:	bl	42d5a8 <nftw@plt+0x2aa28>
  42d814:	and	w0, w0, #0xff
  42d818:	cbz	w0, 42d748 <nftw@plt+0x2abc8>
  42d81c:	ldr	x23, [sp, #48]
  42d820:	b	42d68c <nftw@plt+0x2ab0c>
  42d824:	add	x1, x22, w1, sxtw #3
  42d828:	str	x23, [x1, #128]
  42d82c:	ldr	x23, [sp, #48]
  42d830:	b	42d68c <nftw@plt+0x2ab0c>
  42d834:	mov	w0, #0x10                  	// #16
  42d838:	str	w0, [x22, #144]
  42d83c:	mov	x0, #0x80                  	// #128
  42d840:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42d844:	str	x0, [x22, #152]
  42d848:	b	42d790 <nftw@plt+0x2ac10>
  42d84c:	lsl	w1, w1, #1
  42d850:	str	w1, [x22, #144]
  42d854:	sbfiz	x1, x1, #3, #32
  42d858:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  42d85c:	str	x0, [x22, #152]
  42d860:	b	42d790 <nftw@plt+0x2ac10>
  42d864:	stp	x29, x30, [sp, #-32]!
  42d868:	mov	x29, sp
  42d86c:	stp	x19, x20, [sp, #16]
  42d870:	mov	x19, x0
  42d874:	mov	x20, x2
  42d878:	ldr	x0, [x0]
  42d87c:	bl	42bef8 <nftw@plt+0x29378>
  42d880:	mov	x1, x0
  42d884:	mov	x3, x20
  42d888:	mov	w2, w0
  42d88c:	mov	x0, x19
  42d890:	bl	42d660 <nftw@plt+0x2aae0>
  42d894:	ldp	x19, x20, [sp, #16]
  42d898:	ldp	x29, x30, [sp], #32
  42d89c:	ret
  42d8a0:	stp	x29, x30, [sp, #-32]!
  42d8a4:	mov	x29, sp
  42d8a8:	stp	x19, x20, [sp, #16]
  42d8ac:	mov	x19, x0
  42d8b0:	mov	x20, x1
  42d8b4:	mov	w1, #0x0                   	// #0
  42d8b8:	bl	42d164 <nftw@plt+0x2a5e4>
  42d8bc:	mov	x2, x20
  42d8c0:	mov	w1, w0
  42d8c4:	mov	x0, x19
  42d8c8:	bl	42d864 <nftw@plt+0x2ace4>
  42d8cc:	ldp	x19, x20, [sp, #16]
  42d8d0:	ldp	x29, x30, [sp], #32
  42d8d4:	ret
  42d8d8:	stp	x29, x30, [sp, #-48]!
  42d8dc:	mov	x29, sp
  42d8e0:	stp	x19, x20, [sp, #16]
  42d8e4:	str	x21, [sp, #32]
  42d8e8:	mov	x19, x0
  42d8ec:	mov	x21, x2
  42d8f0:	ldr	x0, [x0]
  42d8f4:	bl	42bef8 <nftw@plt+0x29378>
  42d8f8:	lsr	x20, x0, #32
  42d8fc:	mov	w2, #0x1                   	// #1
  42d900:	mov	w1, w20
  42d904:	ldr	x0, [x19]
  42d908:	bl	42c3d8 <nftw@plt+0x29858>
  42d90c:	cmp	w20, w0
  42d910:	b.eq	42d938 <nftw@plt+0x2adb8>  // b.none
  42d914:	mov	w1, w0
  42d918:	mov	x3, x21
  42d91c:	mov	w2, w0
  42d920:	mov	x0, x19
  42d924:	bl	42d660 <nftw@plt+0x2aae0>
  42d928:	ldp	x19, x20, [sp, #16]
  42d92c:	ldr	x21, [sp, #32]
  42d930:	ldp	x29, x30, [sp], #48
  42d934:	ret
  42d938:	mov	x0, x19
  42d93c:	bl	42d40c <nftw@plt+0x2a88c>
  42d940:	b	42d928 <nftw@plt+0x2ada8>
  42d944:	stp	x29, x30, [sp, #-32]!
  42d948:	mov	x29, sp
  42d94c:	stp	x19, x20, [sp, #16]
  42d950:	mov	x19, x0
  42d954:	mov	x20, x1
  42d958:	mov	w1, #0x0                   	// #0
  42d95c:	bl	42d164 <nftw@plt+0x2a5e4>
  42d960:	mov	x2, x20
  42d964:	mov	w1, w0
  42d968:	mov	x0, x19
  42d96c:	bl	42d8d8 <nftw@plt+0x2ad58>
  42d970:	ldp	x19, x20, [sp, #16]
  42d974:	ldp	x29, x30, [sp], #32
  42d978:	ret
  42d97c:	stp	x29, x30, [sp, #-48]!
  42d980:	mov	x29, sp
  42d984:	stp	x19, x20, [sp, #16]
  42d988:	stp	x21, x22, [sp, #32]
  42d98c:	mov	x19, x0
  42d990:	mov	x20, x1
  42d994:	mov	x22, x2
  42d998:	ldr	x0, [x0]
  42d99c:	bl	42c008 <nftw@plt+0x29488>
  42d9a0:	mov	w21, w0
  42d9a4:	lsr	x1, x20, #32
  42d9a8:	ldr	x0, [x19]
  42d9ac:	bl	42c008 <nftw@plt+0x29488>
  42d9b0:	mov	w20, w0
  42d9b4:	mov	w2, #0x1                   	// #1
  42d9b8:	mov	w1, w0
  42d9bc:	ldr	x0, [x19]
  42d9c0:	bl	42c3d8 <nftw@plt+0x29858>
  42d9c4:	cmp	w20, w0
  42d9c8:	b.eq	42d9f0 <nftw@plt+0x2ae70>  // b.none
  42d9cc:	mov	w2, w0
  42d9d0:	mov	x3, x22
  42d9d4:	mov	w1, w21
  42d9d8:	mov	x0, x19
  42d9dc:	bl	42d660 <nftw@plt+0x2aae0>
  42d9e0:	ldp	x19, x20, [sp, #16]
  42d9e4:	ldp	x21, x22, [sp, #32]
  42d9e8:	ldp	x29, x30, [sp], #48
  42d9ec:	ret
  42d9f0:	mov	x0, x19
  42d9f4:	bl	42d40c <nftw@plt+0x2a88c>
  42d9f8:	b	42d9e0 <nftw@plt+0x2ae60>
  42d9fc:	stp	x29, x30, [sp, #-16]!
  42da00:	mov	x29, sp
  42da04:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x109fc>
  42da08:	add	x2, x2, #0x780
  42da0c:	bl	42d97c <nftw@plt+0x2adfc>
  42da10:	ldp	x29, x30, [sp], #16
  42da14:	ret
  42da18:	stp	x29, x30, [sp, #-32]!
  42da1c:	mov	x29, sp
  42da20:	str	x19, [sp, #16]
  42da24:	mov	x19, x0
  42da28:	ldr	x0, [x0]
  42da2c:	bl	42bef8 <nftw@plt+0x29378>
  42da30:	mov	x1, x0
  42da34:	mov	x0, x19
  42da38:	bl	42d9fc <nftw@plt+0x2ae7c>
  42da3c:	ldr	x19, [sp, #16]
  42da40:	ldp	x29, x30, [sp], #32
  42da44:	ret
  42da48:	stp	x29, x30, [sp, #-32]!
  42da4c:	mov	x29, sp
  42da50:	str	x19, [sp, #16]
  42da54:	mov	x19, x0
  42da58:	mov	w1, #0x0                   	// #0
  42da5c:	bl	42d164 <nftw@plt+0x2a5e4>
  42da60:	mov	w1, w0
  42da64:	mov	x0, x19
  42da68:	bl	42da18 <nftw@plt+0x2ae98>
  42da6c:	ldr	x19, [sp, #16]
  42da70:	ldp	x29, x30, [sp], #32
  42da74:	ret
  42da78:	stp	x29, x30, [sp, #-32]!
  42da7c:	mov	x29, sp
  42da80:	stp	x19, x20, [sp, #16]
  42da84:	mov	x19, x0
  42da88:	mov	x20, x2
  42da8c:	ldr	x0, [x0]
  42da90:	bl	42bef8 <nftw@plt+0x29378>
  42da94:	mov	x2, x20
  42da98:	mov	x1, x0
  42da9c:	mov	x0, x19
  42daa0:	bl	42d97c <nftw@plt+0x2adfc>
  42daa4:	ldp	x19, x20, [sp, #16]
  42daa8:	ldp	x29, x30, [sp], #32
  42daac:	ret
  42dab0:	stp	x29, x30, [sp, #-32]!
  42dab4:	mov	x29, sp
  42dab8:	stp	x19, x20, [sp, #16]
  42dabc:	mov	x19, x0
  42dac0:	mov	x20, x1
  42dac4:	mov	w1, #0x0                   	// #0
  42dac8:	bl	42d164 <nftw@plt+0x2a5e4>
  42dacc:	mov	x2, x20
  42dad0:	mov	w1, w0
  42dad4:	mov	x0, x19
  42dad8:	bl	42da78 <nftw@plt+0x2aef8>
  42dadc:	ldp	x19, x20, [sp, #16]
  42dae0:	ldp	x29, x30, [sp], #32
  42dae4:	ret
  42dae8:	mov	x4, x0
  42daec:	cmp	w2, #0x1
  42daf0:	b.eq	42db2c <nftw@plt+0x2afac>  // b.none
  42daf4:	cmp	w2, #0x2
  42daf8:	b.eq	42db40 <nftw@plt+0x2afc0>  // b.none
  42dafc:	mov	x0, #0x0                   	// #0
  42db00:	cbz	w2, 42db08 <nftw@plt+0x2af88>
  42db04:	ret
  42db08:	ldr	x0, [x4]
  42db0c:	cbz	x0, 42db04 <nftw@plt+0x2af84>
  42db10:	cbz	x3, 42db24 <nftw@plt+0x2afa4>
  42db14:	cbnz	w2, 42db48 <nftw@plt+0x2afc8>
  42db18:	ldr	x2, [x4, #32]
  42db1c:	add	x2, x2, x1, lsl #2
  42db20:	str	x2, [x3]
  42db24:	add	x0, x0, x1, lsl #3
  42db28:	b	42db04 <nftw@plt+0x2af84>
  42db2c:	add	x0, x0, #0x10
  42db30:	cbz	x3, 42db24 <nftw@plt+0x2afa4>
  42db34:	ldr	x2, [x0, x1, lsl #3]
  42db38:	str	x2, [x3]
  42db3c:	b	42db24 <nftw@plt+0x2afa4>
  42db40:	ldr	x0, [x0, #8]
  42db44:	b	42db0c <nftw@plt+0x2af8c>
  42db48:	cmp	w2, #0x2
  42db4c:	b.eq	42db5c <nftw@plt+0x2afdc>  // b.none
  42db50:	cmp	w2, #0x1
  42db54:	b.ne	42db24 <nftw@plt+0x2afa4>  // b.any
  42db58:	b	42db34 <nftw@plt+0x2afb4>
  42db5c:	ldr	x2, [x4, #40]
  42db60:	add	x2, x2, x1, lsl #2
  42db64:	str	x2, [x3]
  42db68:	b	42db24 <nftw@plt+0x2afa4>
  42db6c:	stp	x29, x30, [sp, #-48]!
  42db70:	mov	x29, sp
  42db74:	stp	x19, x20, [sp, #16]
  42db78:	mov	x19, x1
  42db7c:	mov	w20, w2
  42db80:	mov	x1, x3
  42db84:	mov	w2, w4
  42db88:	str	xzr, [sp, #40]
  42db8c:	tst	w5, #0xff
  42db90:	add	x3, sp, #0x28
  42db94:	csel	x3, x3, xzr, ne  // ne = any
  42db98:	bl	42dae8 <nftw@plt+0x2af68>
  42db9c:	str	x19, [x0]
  42dba0:	ldr	x0, [sp, #40]
  42dba4:	cbz	x0, 42dbac <nftw@plt+0x2b02c>
  42dba8:	str	w20, [x0]
  42dbac:	ldp	x19, x20, [sp, #16]
  42dbb0:	ldp	x29, x30, [sp], #48
  42dbb4:	ret
  42dbb8:	stp	x29, x30, [sp, #-32]!
  42dbbc:	mov	x29, sp
  42dbc0:	str	xzr, [sp, #24]
  42dbc4:	add	x3, sp, #0x18
  42dbc8:	mov	w2, w1
  42dbcc:	mov	x1, #0x0                   	// #0
  42dbd0:	bl	42dae8 <nftw@plt+0x2af68>
  42dbd4:	cmp	x0, #0x0
  42dbd8:	ldr	x1, [sp, #24]
  42dbdc:	csel	x0, x1, x0, ne  // ne = any
  42dbe0:	ldp	x29, x30, [sp], #32
  42dbe4:	ret
  42dbe8:	ldr	w1, [x0, #4]
  42dbec:	tst	w1, #0xfffffffd
  42dbf0:	b.eq	42dbf8 <nftw@plt+0x2b078>  // b.none
  42dbf4:	ret
  42dbf8:	ldr	x1, [x0, #8]
  42dbfc:	add	x1, x1, #0x8
  42dc00:	str	x1, [x0, #8]
  42dc04:	ldrb	w1, [x0]
  42dc08:	cbz	w1, 42dbf4 <nftw@plt+0x2b074>
  42dc0c:	ldr	x1, [x0, #16]
  42dc10:	add	x1, x1, #0x4
  42dc14:	str	x1, [x0, #16]
  42dc18:	b	42dbf4 <nftw@plt+0x2b074>
  42dc1c:	cbz	x1, 42dc40 <nftw@plt+0x2b0c0>
  42dc20:	ldr	x2, [x0, #16]
  42dc24:	ldr	x3, [x0, #8]
  42dc28:	sub	x0, x2, #0x8
  42dc2c:	cmp	x2, x3
  42dc30:	csel	x0, x0, xzr, ne  // ne = any
  42dc34:	cmp	x1, x0
  42dc38:	cset	w0, eq  // eq = none
  42dc3c:	ret
  42dc40:	mov	w0, #0x0                   	// #0
  42dc44:	b	42dc3c <nftw@plt+0x2b0bc>
  42dc48:	cbz	x0, 42dc5c <nftw@plt+0x2b0dc>
  42dc4c:	ldr	w1, [x0, #48]
  42dc50:	cmp	w1, #0x2
  42dc54:	b.eq	42dc60 <nftw@plt+0x2b0e0>  // b.none
  42dc58:	ldr	x0, [x0, #40]
  42dc5c:	ret
  42dc60:	ldr	x0, [x0, #40]
  42dc64:	ldr	x0, [x0]
  42dc68:	b	42dc5c <nftw@plt+0x2b0dc>
  42dc6c:	stp	x29, x30, [sp, #-32]!
  42dc70:	mov	x29, sp
  42dc74:	str	x19, [sp, #16]
  42dc78:	mov	x19, x0
  42dc7c:	ldr	x0, [x0, #136]
  42dc80:	ldr	x0, [x0]
  42dc84:	cbz	x0, 42dc98 <nftw@plt+0x2b118>
  42dc88:	str	x0, [x19, #136]
  42dc8c:	ldr	x19, [sp, #16]
  42dc90:	ldp	x29, x30, [sp], #32
  42dc94:	ret
  42dc98:	mov	x0, #0x38                  	// #56
  42dc9c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42dca0:	stp	xzr, xzr, [x0]
  42dca4:	stp	xzr, xzr, [x0, #16]
  42dca8:	stp	xzr, xzr, [x0, #32]
  42dcac:	str	xzr, [x0, #48]
  42dcb0:	ldr	x1, [x19, #136]
  42dcb4:	str	x1, [x0, #8]
  42dcb8:	str	x0, [x1]
  42dcbc:	b	42dc88 <nftw@plt+0x2b108>
  42dcc0:	stp	x29, x30, [sp, #-64]!
  42dcc4:	mov	x29, sp
  42dcc8:	stp	x19, x20, [sp, #16]
  42dccc:	stp	x21, x22, [sp, #32]
  42dcd0:	stp	x23, x24, [sp, #48]
  42dcd4:	mov	x19, x0
  42dcd8:	mov	x21, x1
  42dcdc:	mov	x24, x2
  42dce0:	mov	x23, x3
  42dce4:	mov	x22, x4
  42dce8:	mov	w20, w5
  42dcec:	cbz	x1, 42dd40 <nftw@plt+0x2b1c0>
  42dcf0:	mov	x0, x19
  42dcf4:	bl	42dc6c <nftw@plt+0x2b0ec>
  42dcf8:	mov	x19, x0
  42dcfc:	mov	w0, #0x2                   	// #2
  42dd00:	str	w0, [x19, #48]
  42dd04:	str	x24, [x19, #32]
  42dd08:	mov	x0, #0x18                  	// #24
  42dd0c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42dd10:	str	x21, [x0]
  42dd14:	str	x23, [x0, #8]
  42dd18:	str	x23, [x0, #16]
  42dd1c:	str	x0, [x19, #40]
  42dd20:	str	x22, [x19, #16]
  42dd24:	add	x20, x22, w20, uxtw #3
  42dd28:	str	x20, [x19, #24]
  42dd2c:	ldp	x19, x20, [sp, #16]
  42dd30:	ldp	x21, x22, [sp, #32]
  42dd34:	ldp	x23, x24, [sp, #48]
  42dd38:	ldp	x29, x30, [sp], #64
  42dd3c:	ret
  42dd40:	ldr	x0, [x0, #136]
  42dd44:	bl	42dc48 <nftw@plt+0x2b0c8>
  42dd48:	mov	x21, x0
  42dd4c:	b	42dcf0 <nftw@plt+0x2b170>
  42dd50:	stp	x29, x30, [sp, #-32]!
  42dd54:	mov	x29, sp
  42dd58:	stp	x19, x20, [sp, #16]
  42dd5c:	mov	x19, x1
  42dd60:	mov	x20, x2
  42dd64:	bl	427474 <nftw@plt+0x248f4>
  42dd68:	ldr	x1, [x19]
  42dd6c:	ldrb	w1, [x1, #4]
  42dd70:	strb	w1, [x0, #4]
  42dd74:	ldr	x1, [x19]
  42dd78:	ldp	x2, x3, [x1, #8]
  42dd7c:	stp	x2, x3, [x0, #8]
  42dd80:	ldrh	w1, [x20, #6]
  42dd84:	tbz	w1, #3, 42dda8 <nftw@plt+0x2b228>
  42dd88:	ldr	x1, [x19]
  42dd8c:	ldrh	w1, [x1, #6]
  42dd90:	orr	w1, w1, #0x8
  42dd94:	strh	w1, [x0, #6]
  42dd98:	str	x0, [x19]
  42dd9c:	ldp	x19, x20, [sp, #16]
  42dda0:	ldp	x29, x30, [sp], #32
  42dda4:	ret
  42dda8:	ldr	x1, [x19]
  42ddac:	ldrh	w1, [x1, #6]
  42ddb0:	and	w1, w1, #0xfffffff7
  42ddb4:	and	w1, w1, #0xffff
  42ddb8:	b	42dd94 <nftw@plt+0x2b214>
  42ddbc:	stp	x29, x30, [sp, #-32]!
  42ddc0:	mov	x29, sp
  42ddc4:	str	x19, [sp, #16]
  42ddc8:	mov	x19, x1
  42ddcc:	bl	427474 <nftw@plt+0x248f4>
  42ddd0:	mov	w1, #0x53                  	// #83
  42ddd4:	strb	w1, [x0, #4]
  42ddd8:	str	x19, [x0, #8]
  42dddc:	strh	wzr, [x0, #6]
  42dde0:	ldr	x19, [sp, #16]
  42dde4:	ldp	x29, x30, [sp], #32
  42dde8:	ret
  42ddec:	stp	x29, x30, [sp, #-48]!
  42ddf0:	mov	x29, sp
  42ddf4:	stp	x19, x20, [sp, #16]
  42ddf8:	str	x21, [sp, #32]
  42ddfc:	mov	x20, x0
  42de00:	lsl	x21, x1, #3
  42de04:	cbz	x2, 42de18 <nftw@plt+0x2b298>
  42de08:	mov	x19, x2
  42de0c:	lsl	x0, x1, #4
  42de10:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42de14:	str	x0, [x19]
  42de18:	mov	x1, x21
  42de1c:	mov	x0, x20
  42de20:	bl	428168 <nftw@plt+0x255e8>
  42de24:	ldp	x19, x20, [sp, #16]
  42de28:	ldr	x21, [sp, #32]
  42de2c:	ldp	x29, x30, [sp], #48
  42de30:	ret
  42de34:	stp	x29, x30, [sp, #-64]!
  42de38:	mov	x29, sp
  42de3c:	stp	x19, x20, [sp, #16]
  42de40:	mov	x20, x0
  42de44:	ldr	x19, [x0, #16]
  42de48:	ldr	x0, [x0, #24]
  42de4c:	cmp	x19, x0
  42de50:	b.hi	42deb4 <nftw@plt+0x2b334>  // b.pmore
  42de54:	stp	x21, x22, [sp, #32]
  42de58:	mov	x21, x1
  42de5c:	mov	x22, x2
  42de60:	mov	w2, w3
  42de64:	cbz	x1, 42de98 <nftw@plt+0x2b318>
  42de68:	str	x23, [sp, #48]
  42de6c:	ldr	x23, [x20, #8]
  42de70:	cbz	x5, 42de88 <nftw@plt+0x2b308>
  42de74:	mov	w3, w4
  42de78:	mov	w1, w6
  42de7c:	mov	x0, x5
  42de80:	bl	42b720 <nftw@plt+0x28ba0>
  42de84:	mov	w2, w0
  42de88:	sub	x23, x19, x23
  42de8c:	ubfx	x23, x23, #3, #32
  42de90:	str	w2, [x21, x23, lsl #2]
  42de94:	ldr	x23, [sp, #48]
  42de98:	mov	x0, x19
  42de9c:	str	x22, [x0], #8
  42dea0:	str	x0, [x20, #16]
  42dea4:	ldp	x21, x22, [sp, #32]
  42dea8:	ldp	x19, x20, [sp, #16]
  42deac:	ldp	x29, x30, [sp], #64
  42deb0:	ret
  42deb4:	stp	x21, x22, [sp, #32]
  42deb8:	str	x23, [sp, #48]
  42debc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42dec0:	add	x2, x2, #0xf10
  42dec4:	mov	w1, #0x953                 	// #2387
  42dec8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42decc:	add	x0, x0, #0xf28
  42ded0:	bl	408d8c <nftw@plt+0x620c>
  42ded4:	stp	x29, x30, [sp, #-48]!
  42ded8:	mov	x29, sp
  42dedc:	stp	x19, x20, [sp, #16]
  42dee0:	mov	x19, x1
  42dee4:	ldrb	w1, [x1, #18]
  42dee8:	and	w1, w1, #0x3
  42deec:	cmp	w1, #0x2
  42def0:	b.eq	42df04 <nftw@plt+0x2b384>  // b.none
  42def4:	mov	w0, #0x1                   	// #1
  42def8:	ldp	x19, x20, [sp, #16]
  42defc:	ldp	x29, x30, [sp], #48
  42df00:	ret
  42df04:	str	x21, [sp, #32]
  42df08:	mov	x20, x0
  42df0c:	ldr	x21, [x19, #24]
  42df10:	ldrb	w0, [x21, #19]
  42df14:	tbz	w0, #5, 42df20 <nftw@plt+0x2b3a0>
  42df18:	ldr	x21, [sp, #32]
  42df1c:	b	42def4 <nftw@plt+0x2b374>
  42df20:	ldr	w1, [x21, #8]
  42df24:	ldr	x0, [x20, #40]
  42df28:	bl	42bb70 <nftw@plt+0x28ff0>
  42df2c:	ldr	w0, [x0, #20]
  42df30:	cbz	w0, 42df3c <nftw@plt+0x2b3bc>
  42df34:	ldr	x21, [sp, #32]
  42df38:	b	42def4 <nftw@plt+0x2b374>
  42df3c:	ldr	x5, [x19]
  42df40:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42df44:	add	x4, x4, #0xf40
  42df48:	mov	w3, #0x0                   	// #0
  42df4c:	ldr	w2, [x21, #8]
  42df50:	mov	w1, #0xe                   	// #14
  42df54:	mov	x0, x20
  42df58:	bl	41fbf4 <nftw@plt+0x1d074>
  42df5c:	ldr	x21, [sp, #32]
  42df60:	b	42def4 <nftw@plt+0x2b374>
  42df64:	sub	w3, w2, #0x1
  42df68:	cbz	w2, 42dfc4 <nftw@plt+0x2b444>
  42df6c:	mov	w4, w3
  42df70:	add	x4, x4, #0x1
  42df74:	add	x4, x1, x4
  42df78:	mov	w5, #0x5c                  	// #92
  42df7c:	mov	w6, #0x6e                  	// #110
  42df80:	b	42df9c <nftw@plt+0x2b41c>
  42df84:	mov	x3, x0
  42df88:	strb	w5, [x3], #1
  42df8c:	mov	x0, x3
  42df90:	strb	w2, [x0], #1
  42df94:	cmp	x4, x1
  42df98:	b.eq	42dfc4 <nftw@plt+0x2b444>  // b.none
  42df9c:	ldrb	w2, [x1], #1
  42dfa0:	cmp	w2, #0x22
  42dfa4:	b.eq	42df84 <nftw@plt+0x2b404>  // b.none
  42dfa8:	cmp	w2, #0x5c
  42dfac:	b.eq	42df84 <nftw@plt+0x2b404>  // b.none
  42dfb0:	mov	x3, x0
  42dfb4:	cmp	w2, #0xa
  42dfb8:	b.ne	42df8c <nftw@plt+0x2b40c>  // b.any
  42dfbc:	mov	w2, w6
  42dfc0:	b	42df84 <nftw@plt+0x2b404>
  42dfc4:	ret
  42dfc8:	stp	x29, x30, [sp, #-80]!
  42dfcc:	mov	x29, sp
  42dfd0:	stp	x19, x20, [sp, #16]
  42dfd4:	stp	x21, x22, [sp, #32]
  42dfd8:	mov	x19, x0
  42dfdc:	mov	x20, x1
  42dfe0:	ldr	w3, [x1, #24]
  42dfe4:	cmp	w3, #0x5
  42dfe8:	b.eq	42e25c <nftw@plt+0x2b6dc>  // b.none
  42dfec:	mov	w1, w2
  42dff0:	b.ls	42e018 <nftw@plt+0x2b498>  // b.plast
  42dff4:	cmp	w3, #0x9
  42dff8:	b.eq	42e3ac <nftw@plt+0x2b82c>  // b.none
  42dffc:	b.ls	42e04c <nftw@plt+0x2b4cc>  // b.plast
  42e000:	cmp	w3, #0xa
  42e004:	b.ne	42e088 <nftw@plt+0x2b508>  // b.any
  42e008:	ldr	x1, [x0, #1040]
  42e00c:	blr	x1
  42e010:	mov	w21, w0
  42e014:	b	42e0a4 <nftw@plt+0x2b524>
  42e018:	cmp	w3, #0x3
  42e01c:	b.hi	42e218 <nftw@plt+0x2b698>  // b.pmore
  42e020:	cmp	w3, #0x1
  42e024:	b.hi	42e17c <nftw@plt+0x2b5fc>  // b.pmore
  42e028:	cbnz	w3, 42e25c <nftw@plt+0x2b6dc>
  42e02c:	ldrb	w0, [x0, #1160]
  42e030:	cbz	w0, 42e228 <nftw@plt+0x2b6a8>
  42e034:	ldr	x0, [x19, #40]
  42e038:	ldr	w1, [x0, #60]
  42e03c:	ldr	x0, [x19, #40]
  42e040:	bl	42c108 <nftw@plt+0x29588>
  42e044:	mov	w21, w0
  42e048:	b	42e0a4 <nftw@plt+0x2b524>
  42e04c:	cmp	w3, #0x6
  42e050:	b.eq	42e240 <nftw@plt+0x2b6c0>  // b.none
  42e054:	cmp	w3, #0x8
  42e058:	b.ne	42e088 <nftw@plt+0x2b508>  // b.any
  42e05c:	ldrb	w0, [x0, #1134]
  42e060:	cbnz	w0, 42e0d8 <nftw@plt+0x2b558>
  42e064:	mov	x0, x19
  42e068:	bl	425ec8 <nftw@plt+0x23348>
  42e06c:	mov	x20, x0
  42e070:	ldr	x0, [x0, #88]
  42e074:	cbz	x0, 42e0f4 <nftw@plt+0x2b574>
  42e078:	ldr	x20, [x20, #88]
  42e07c:	cbnz	x20, 42e0c4 <nftw@plt+0x2b544>
  42e080:	mov	w21, #0x1                   	// #1
  42e084:	b	42e0a4 <nftw@plt+0x2b524>
  42e088:	ldr	x3, [x20]
  42e08c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e090:	add	x2, x2, #0xf58
  42e094:	mov	w1, #0x4                   	// #4
  42e098:	mov	x0, x19
  42e09c:	bl	41f990 <nftw@plt+0x1ce10>
  42e0a0:	mov	w21, #0x1                   	// #1
  42e0a4:	mov	x1, #0x15                  	// #21
  42e0a8:	mov	x0, x19
  42e0ac:	bl	4283c0 <nftw@plt+0x25840>
  42e0b0:	mov	x20, x0
  42e0b4:	mov	w2, w21
  42e0b8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  42e0bc:	add	x1, x1, #0x1a0
  42e0c0:	bl	4025b0 <sprintf@plt>
  42e0c4:	mov	x0, x20
  42e0c8:	ldp	x19, x20, [sp, #16]
  42e0cc:	ldp	x21, x22, [sp, #32]
  42e0d0:	ldp	x29, x30, [sp], #80
  42e0d4:	ret
  42e0d8:	ldr	x3, [x20]
  42e0dc:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e0e0:	add	x2, x2, #0xf78
  42e0e4:	mov	w1, #0x14                  	// #20
  42e0e8:	mov	x0, x19
  42e0ec:	bl	41fa08 <nftw@plt+0x1ce88>
  42e0f0:	b	42e064 <nftw@plt+0x2b4e4>
  42e0f4:	mov	x0, x20
  42e0f8:	bl	425ed0 <nftw@plt+0x23350>
  42e0fc:	cbz	x0, 42e078 <nftw@plt+0x2b4f8>
  42e100:	bl	425e44 <nftw@plt+0x232c4>
  42e104:	cbz	x0, 42e158 <nftw@plt+0x2b5d8>
  42e108:	add	x0, x0, #0x58
  42e10c:	bl	402610 <localtime@plt>
  42e110:	cbz	x0, 42e158 <nftw@plt+0x2b5d8>
  42e114:	stp	x23, x24, [sp, #48]
  42e118:	bl	402a00 <asctime@plt>
  42e11c:	mov	x23, x0
  42e120:	bl	4024f0 <strlen@plt>
  42e124:	mov	x22, x0
  42e128:	add	x1, x0, #0x2
  42e12c:	mov	x0, x19
  42e130:	bl	4283c0 <nftw@plt+0x25840>
  42e134:	mov	x21, x0
  42e138:	mov	w24, #0x22                  	// #34
  42e13c:	strb	w24, [x0], #1
  42e140:	mov	x1, x23
  42e144:	bl	402990 <strcpy@plt>
  42e148:	strb	w24, [x21, x22]
  42e14c:	str	x21, [x20, #88]
  42e150:	ldp	x23, x24, [sp, #48]
  42e154:	b	42e078 <nftw@plt+0x2b4f8>
  42e158:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e15c:	add	x2, x2, #0xfa8
  42e160:	mov	w1, #0x0                   	// #0
  42e164:	mov	x0, x19
  42e168:	bl	41fe9c <nftw@plt+0x1d31c>
  42e16c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e170:	add	x0, x0, #0xfd0
  42e174:	str	x0, [x20, #88]
  42e178:	b	42e078 <nftw@plt+0x2b4f8>
  42e17c:	cmp	w3, #0x2
  42e180:	b.eq	42e1e8 <nftw@plt+0x2b668>  // b.none
  42e184:	ldr	x0, [x0, #288]
  42e188:	bl	425e3c <nftw@plt+0x232bc>
  42e18c:	mov	x21, x0
  42e190:	cbz	x0, 42e1fc <nftw@plt+0x2b67c>
  42e194:	ldr	x1, [x19, #1080]
  42e198:	cbz	x1, 42e1a8 <nftw@plt+0x2b628>
  42e19c:	mov	x0, x21
  42e1a0:	blr	x1
  42e1a4:	mov	x21, x0
  42e1a8:	mov	x0, x21
  42e1ac:	bl	4024f0 <strlen@plt>
  42e1b0:	mov	x22, x0
  42e1b4:	lsl	w1, w0, #1
  42e1b8:	add	w1, w1, #0x3
  42e1bc:	mov	x0, x19
  42e1c0:	bl	4283c0 <nftw@plt+0x25840>
  42e1c4:	mov	x20, x0
  42e1c8:	mov	w19, #0x22                  	// #34
  42e1cc:	strb	w19, [x0], #1
  42e1d0:	mov	w2, w22
  42e1d4:	mov	x1, x21
  42e1d8:	bl	42df64 <nftw@plt+0x2b3e4>
  42e1dc:	strb	w19, [x0]
  42e1e0:	strb	wzr, [x0, #1]
  42e1e4:	b	42e0c4 <nftw@plt+0x2b544>
  42e1e8:	ldr	x0, [x0, #40]
  42e1ec:	ldr	w1, [x0, #60]
  42e1f0:	bl	42c174 <nftw@plt+0x295f4>
  42e1f4:	mov	x21, x0
  42e1f8:	b	42e194 <nftw@plt+0x2b614>
  42e1fc:	stp	x23, x24, [sp, #48]
  42e200:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e204:	add	x2, x2, #0xff0
  42e208:	mov	w1, #0x1c5                 	// #453
  42e20c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e210:	add	x0, x0, #0xf28
  42e214:	bl	408d8c <nftw@plt+0x620c>
  42e218:	ldr	x0, [x0, #40]
  42e21c:	ldr	w21, [x0, #48]
  42e220:	sub	w21, w21, #0x1
  42e224:	b	42e0a4 <nftw@plt+0x2b524>
  42e228:	mov	x3, #0x0                   	// #0
  42e22c:	mov	w2, #0x0                   	// #0
  42e230:	ldr	x0, [x19, #40]
  42e234:	bl	42c270 <nftw@plt+0x296f0>
  42e238:	mov	w1, w0
  42e23c:	b	42e03c <nftw@plt+0x2b4bc>
  42e240:	ldr	x0, [x0]
  42e244:	mov	w21, #0x1                   	// #1
  42e248:	cbz	x0, 42e0a4 <nftw@plt+0x2b524>
  42e24c:	ldrb	w0, [x0, #106]
  42e250:	cmp	w0, #0x0
  42e254:	cset	w21, eq  // eq = none
  42e258:	b	42e0a4 <nftw@plt+0x2b524>
  42e25c:	ldrb	w0, [x19, #1134]
  42e260:	cbnz	w0, 42e280 <nftw@plt+0x2b700>
  42e264:	ldr	x0, [x19, #640]
  42e268:	cbz	x0, 42e29c <nftw@plt+0x2b71c>
  42e26c:	ldr	w0, [x20, #24]
  42e270:	cmp	w0, #0x1
  42e274:	b.eq	42e3a4 <nftw@plt+0x2b824>  // b.none
  42e278:	ldr	x20, [x19, #648]
  42e27c:	b	42e07c <nftw@plt+0x2b4fc>
  42e280:	ldr	x3, [x20]
  42e284:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e288:	add	x2, x2, #0xf78
  42e28c:	mov	w1, #0x14                  	// #20
  42e290:	mov	x0, x19
  42e294:	bl	41fa08 <nftw@plt+0x1ce88>
  42e298:	b	42e264 <nftw@plt+0x2b6e4>
  42e29c:	ldr	x0, [x19, #656]
  42e2a0:	cmn	x0, #0x2
  42e2a4:	b.eq	42e324 <nftw@plt+0x2b7a4>  // b.none
  42e2a8:	ldr	x0, [x19, #656]
  42e2ac:	tbnz	x0, #63, 42e33c <nftw@plt+0x2b7bc>
  42e2b0:	add	x0, x19, #0x290
  42e2b4:	bl	402730 <gmtime@plt>
  42e2b8:	mov	x21, x0
  42e2bc:	cbz	x21, 42e374 <nftw@plt+0x2b7f4>
  42e2c0:	mov	x1, #0xe                   	// #14
  42e2c4:	mov	x0, x19
  42e2c8:	bl	4283c0 <nftw@plt+0x25840>
  42e2cc:	str	x0, [x19, #640]
  42e2d0:	ldr	w4, [x21, #20]
  42e2d4:	ldrsw	x2, [x21, #16]
  42e2d8:	add	w4, w4, #0x76c
  42e2dc:	ldr	w3, [x21, #12]
  42e2e0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e2e4:	add	x1, x1, #0x7f0
  42e2e8:	ldr	x2, [x1, x2, lsl #3]
  42e2ec:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e2f0:	add	x1, x1, #0x8
  42e2f4:	bl	4025b0 <sprintf@plt>
  42e2f8:	mov	x1, #0xb                   	// #11
  42e2fc:	mov	x0, x19
  42e300:	bl	4283c0 <nftw@plt+0x25840>
  42e304:	str	x0, [x19, #648]
  42e308:	ldr	w4, [x21]
  42e30c:	ldr	w3, [x21, #4]
  42e310:	ldr	w2, [x21, #8]
  42e314:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e318:	add	x1, x1, #0x18
  42e31c:	bl	4025b0 <sprintf@plt>
  42e320:	b	42e26c <nftw@plt+0x2b6ec>
  42e324:	ldr	x1, [x19, #1056]
  42e328:	cbz	x1, 42e33c <nftw@plt+0x2b7bc>
  42e32c:	mov	x0, x19
  42e330:	blr	x1
  42e334:	str	x0, [x19, #656]
  42e338:	b	42e2a8 <nftw@plt+0x2b728>
  42e33c:	bl	402aa0 <__errno_location@plt>
  42e340:	mov	x21, x0
  42e344:	str	wzr, [x0]
  42e348:	mov	x0, #0x0                   	// #0
  42e34c:	bl	402660 <time@plt>
  42e350:	str	x0, [sp, #72]
  42e354:	cmn	x0, #0x1
  42e358:	b.ne	42e364 <nftw@plt+0x2b7e4>  // b.any
  42e35c:	ldr	w0, [x21]
  42e360:	cbnz	w0, 42e374 <nftw@plt+0x2b7f4>
  42e364:	add	x0, sp, #0x48
  42e368:	bl	402610 <localtime@plt>
  42e36c:	mov	x21, x0
  42e370:	b	42e2bc <nftw@plt+0x2b73c>
  42e374:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e378:	add	x2, x2, #0x30
  42e37c:	mov	w1, #0x0                   	// #0
  42e380:	mov	x0, x19
  42e384:	bl	41fe9c <nftw@plt+0x1d31c>
  42e388:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e38c:	add	x0, x0, #0x58
  42e390:	str	x0, [x19, #640]
  42e394:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e398:	add	x0, x0, #0x68
  42e39c:	str	x0, [x19, #648]
  42e3a0:	b	42e26c <nftw@plt+0x2b6ec>
  42e3a4:	ldr	x20, [x19, #640]
  42e3a8:	b	42e07c <nftw@plt+0x2b4fc>
  42e3ac:	ldrb	w0, [x0, #1244]
  42e3b0:	cbz	w0, 42e3bc <nftw@plt+0x2b83c>
  42e3b4:	ldrb	w0, [x19, #16]
  42e3b8:	cbnz	w0, 42e3cc <nftw@plt+0x2b84c>
  42e3bc:	ldr	w21, [x19, #1376]
  42e3c0:	add	w0, w21, #0x1
  42e3c4:	str	w0, [x19, #1376]
  42e3c8:	b	42e0a4 <nftw@plt+0x2b524>
  42e3cc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e3d0:	add	x2, x2, #0x78
  42e3d4:	mov	w1, #0x3                   	// #3
  42e3d8:	mov	x0, x19
  42e3dc:	bl	41f990 <nftw@plt+0x1ce10>
  42e3e0:	b	42e3bc <nftw@plt+0x2b83c>
  42e3e4:	ldrh	w4, [x1, #16]
  42e3e8:	cmp	w4, w3
  42e3ec:	b.eq	42e4f8 <nftw@plt+0x2b978>  // b.none
  42e3f0:	stp	x29, x30, [sp, #-48]!
  42e3f4:	mov	x29, sp
  42e3f8:	stp	x19, x20, [sp, #16]
  42e3fc:	str	x21, [sp, #32]
  42e400:	mov	x20, x0
  42e404:	mov	x19, x1
  42e408:	mov	x21, x2
  42e40c:	b.ls	42e4b8 <nftw@plt+0x2b938>  // b.plast
  42e410:	add	w0, w3, #0x1
  42e414:	cmp	w4, w0
  42e418:	b.ne	42e424 <nftw@plt+0x2b8a4>  // b.any
  42e41c:	ldrb	w1, [x1, #19]
  42e420:	tbnz	w1, #3, 42e460 <nftw@plt+0x2b8e0>
  42e424:	mov	w5, w3
  42e428:	ldr	x3, [x21]
  42e42c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e430:	add	x2, x2, #0x158
  42e434:	mov	w1, #0x3                   	// #3
  42e438:	mov	x0, x20
  42e43c:	bl	41f990 <nftw@plt+0x1ce10>
  42e440:	ldr	w2, [x19, #8]
  42e444:	mov	w0, #0x0                   	// #0
  42e448:	cmp	w2, #0x2
  42e44c:	b.hi	42e4d8 <nftw@plt+0x2b958>  // b.pmore
  42e450:	ldp	x19, x20, [sp, #16]
  42e454:	ldr	x21, [sp, #32]
  42e458:	ldp	x29, x30, [sp], #48
  42e45c:	ret
  42e460:	ldrb	w2, [x20, #1154]
  42e464:	mov	w0, #0x1                   	// #1
  42e468:	cbz	w2, 42e450 <nftw@plt+0x2b8d0>
  42e46c:	tbnz	w1, #4, 42e450 <nftw@plt+0x2b8d0>
  42e470:	ldrb	w1, [x20, #1167]
  42e474:	cbnz	w1, 42e450 <nftw@plt+0x2b8d0>
  42e478:	ldrb	w0, [x20, #1120]
  42e47c:	cbz	w0, 42e49c <nftw@plt+0x2b91c>
  42e480:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e484:	add	x2, x2, #0xb8
  42e488:	mov	w1, #0x2                   	// #2
  42e48c:	mov	x0, x20
  42e490:	bl	41f990 <nftw@plt+0x1ce10>
  42e494:	mov	w0, #0x1                   	// #1
  42e498:	b	42e450 <nftw@plt+0x2b8d0>
  42e49c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e4a0:	add	x2, x2, #0x108
  42e4a4:	mov	w1, #0x2                   	// #2
  42e4a8:	mov	x0, x20
  42e4ac:	bl	41f990 <nftw@plt+0x1ce10>
  42e4b0:	mov	w0, #0x1                   	// #1
  42e4b4:	b	42e450 <nftw@plt+0x2b8d0>
  42e4b8:	mov	w5, w4
  42e4bc:	mov	w4, w3
  42e4c0:	ldr	x3, [x2]
  42e4c4:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e4c8:	add	x2, x2, #0x190
  42e4cc:	mov	w1, #0x3                   	// #3
  42e4d0:	bl	41f990 <nftw@plt+0x1ce10>
  42e4d4:	b	42e440 <nftw@plt+0x2b8c0>
  42e4d8:	ldr	x4, [x21]
  42e4dc:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e4e0:	add	x3, x3, #0x1c8
  42e4e4:	mov	w1, #0x5                   	// #5
  42e4e8:	mov	x0, x20
  42e4ec:	bl	41fd68 <nftw@plt+0x1d1e8>
  42e4f0:	mov	w0, #0x0                   	// #0
  42e4f4:	b	42e450 <nftw@plt+0x2b8d0>
  42e4f8:	mov	w0, #0x1                   	// #1
  42e4fc:	ret
  42e500:	stp	x29, x30, [sp, #-48]!
  42e504:	mov	x29, sp
  42e508:	stp	x19, x20, [sp, #16]
  42e50c:	stp	x21, x22, [sp, #32]
  42e510:	mov	x22, x0
  42e514:	mov	x20, x1
  42e518:	mov	x21, x2
  42e51c:	mov	w19, w3
  42e520:	cbz	x1, 42e560 <nftw@plt+0x2b9e0>
  42e524:	mov	x0, x22
  42e528:	bl	42dc6c <nftw@plt+0x2b0ec>
  42e52c:	mov	w1, #0x1                   	// #1
  42e530:	str	w1, [x0, #48]
  42e534:	str	x20, [x0, #40]
  42e538:	str	xzr, [x0, #32]
  42e53c:	str	x21, [x0, #16]
  42e540:	ubfiz	x3, x19, #1, #32
  42e544:	add	x19, x3, w19, uxtw
  42e548:	add	x19, x21, x19, lsl #3
  42e54c:	str	x19, [x0, #24]
  42e550:	ldp	x19, x20, [sp, #16]
  42e554:	ldp	x21, x22, [sp, #32]
  42e558:	ldp	x29, x30, [sp], #48
  42e55c:	ret
  42e560:	ldr	x0, [x0, #136]
  42e564:	bl	42dc48 <nftw@plt+0x2b0c8>
  42e568:	mov	x20, x0
  42e56c:	b	42e524 <nftw@plt+0x2b9a4>
  42e570:	stp	x29, x30, [sp, #-80]!
  42e574:	mov	x29, sp
  42e578:	stp	x19, x20, [sp, #16]
  42e57c:	stp	x21, x22, [sp, #32]
  42e580:	stp	x23, x24, [sp, #48]
  42e584:	mov	x19, x0
  42e588:	mov	w22, w2
  42e58c:	ldr	w0, [x1, #24]
  42e590:	cmp	w0, #0x7
  42e594:	b.ne	42e5b4 <nftw@plt+0x2ba34>  // b.any
  42e598:	ldrb	w1, [x19, #16]
  42e59c:	mov	w0, #0x0                   	// #0
  42e5a0:	cbnz	w1, 42e68c <nftw@plt+0x2bb0c>
  42e5a4:	mov	w1, w2
  42e5a8:	mov	x0, x19
  42e5ac:	bl	41f2f0 <nftw@plt+0x1c770>
  42e5b0:	b	42e68c <nftw@plt+0x2bb0c>
  42e5b4:	mov	x20, x1
  42e5b8:	mov	w2, w3
  42e5bc:	mov	x0, x19
  42e5c0:	bl	42dfc8 <nftw@plt+0x2b448>
  42e5c4:	mov	x24, x0
  42e5c8:	bl	4024f0 <strlen@plt>
  42e5cc:	mov	x21, x0
  42e5d0:	add	x0, x0, #0x10
  42e5d4:	and	x0, x0, #0xfffffffffffffff0
  42e5d8:	sub	sp, sp, x0
  42e5dc:	mov	x23, sp
  42e5e0:	mov	x2, x21
  42e5e4:	mov	x1, x24
  42e5e8:	mov	x0, x23
  42e5ec:	bl	402490 <memcpy@plt>
  42e5f0:	mov	w0, #0xa                   	// #10
  42e5f4:	strb	w0, [x23, x21]
  42e5f8:	mov	w3, #0x1                   	// #1
  42e5fc:	mov	x2, x21
  42e600:	mov	x1, x23
  42e604:	mov	x0, x19
  42e608:	bl	41eb74 <nftw@plt+0x1bff4>
  42e60c:	mov	x0, x19
  42e610:	bl	4269b4 <nftw@plt+0x23e34>
  42e614:	mov	x0, x19
  42e618:	bl	427474 <nftw@plt+0x248f4>
  42e61c:	str	x0, [x19, #448]
  42e620:	mov	x0, x19
  42e624:	bl	429308 <nftw@plt+0x26788>
  42e628:	mov	x21, x0
  42e62c:	str	w22, [x0]
  42e630:	ldr	x0, [x19, #136]
  42e634:	ldr	w0, [x0, #48]
  42e638:	cmp	w0, #0x2
  42e63c:	b.eq	42e6a4 <nftw@plt+0x2bb24>  // b.none
  42e640:	mov	w3, #0x1                   	// #1
  42e644:	mov	x2, x21
  42e648:	mov	x1, #0x0                   	// #0
  42e64c:	mov	x0, x19
  42e650:	bl	42e500 <nftw@plt+0x2b980>
  42e654:	ldr	x0, [x19]
  42e658:	ldr	x1, [x0]
  42e65c:	ldr	x0, [x0, #32]
  42e660:	cmp	x1, x0
  42e664:	b.eq	42e680 <nftw@plt+0x2bb00>  // b.none
  42e668:	ldr	x3, [x20]
  42e66c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e670:	add	x2, x2, #0xf58
  42e674:	mov	w1, #0x4                   	// #4
  42e678:	mov	x0, x19
  42e67c:	bl	41f990 <nftw@plt+0x1ce10>
  42e680:	mov	x0, x19
  42e684:	bl	41ec80 <nftw@plt+0x1c100>
  42e688:	mov	w0, #0x1                   	// #1
  42e68c:	mov	sp, x29
  42e690:	ldp	x19, x20, [sp, #16]
  42e694:	ldp	x21, x22, [sp, #32]
  42e698:	ldp	x23, x24, [sp, #48]
  42e69c:	ldp	x29, x30, [sp], #80
  42e6a0:	ret
  42e6a4:	str	xzr, [x29, #72]
  42e6a8:	add	x2, x29, #0x48
  42e6ac:	mov	x1, #0x1                   	// #1
  42e6b0:	mov	x0, x19
  42e6b4:	bl	42ddec <nftw@plt+0x2b26c>
  42e6b8:	mov	x23, x0
  42e6bc:	mov	w3, #0x1                   	// #1
  42e6c0:	mov	w2, w22
  42e6c4:	mov	x1, x20
  42e6c8:	ldr	x0, [x19, #40]
  42e6cc:	bl	42b66c <nftw@plt+0x28aec>
  42e6d0:	ldr	x1, [x19, #40]
  42e6d4:	ldr	w3, [x1, #112]
  42e6d8:	mov	w6, #0x0                   	// #0
  42e6dc:	mov	x5, x0
  42e6e0:	mov	w4, w3
  42e6e4:	mov	x2, x21
  42e6e8:	ldr	x1, [x29, #72]
  42e6ec:	mov	x0, x23
  42e6f0:	bl	42de34 <nftw@plt+0x2b2b4>
  42e6f4:	mov	w5, #0x1                   	// #1
  42e6f8:	ldr	x4, [x23, #8]
  42e6fc:	ldr	x3, [x29, #72]
  42e700:	mov	x2, x23
  42e704:	mov	x1, x20
  42e708:	mov	x0, x19
  42e70c:	bl	42dcc0 <nftw@plt+0x2b140>
  42e710:	b	42e654 <nftw@plt+0x2bad4>
  42e714:	stp	x29, x30, [sp, #-48]!
  42e718:	mov	x29, sp
  42e71c:	stp	x19, x20, [sp, #16]
  42e720:	str	x21, [sp, #32]
  42e724:	mov	x20, x1
  42e728:	mov	x19, x2
  42e72c:	mov	x21, x3
  42e730:	bl	42dc6c <nftw@plt+0x2b0ec>
  42e734:	mov	w1, #0x1                   	// #1
  42e738:	str	w1, [x0, #48]
  42e73c:	str	x20, [x0, #40]
  42e740:	str	xzr, [x0, #32]
  42e744:	str	x19, [x0, #16]
  42e748:	add	x19, x19, x21
  42e74c:	str	x19, [x0, #24]
  42e750:	ldrh	w0, [x20, #18]
  42e754:	orr	w0, w0, #0x40
  42e758:	strh	w0, [x20, #18]
  42e75c:	ldp	x19, x20, [sp, #16]
  42e760:	ldr	x21, [sp, #32]
  42e764:	ldp	x29, x30, [sp], #48
  42e768:	ret
  42e76c:	stp	x29, x30, [sp, #-48]!
  42e770:	mov	x29, sp
  42e774:	stp	x19, x20, [sp, #16]
  42e778:	stp	x21, x22, [sp, #32]
  42e77c:	mov	x20, x0
  42e780:	ldr	x19, [x0, #136]
  42e784:	add	x0, x0, #0x50
  42e788:	cmp	x19, x0
  42e78c:	b.eq	42e804 <nftw@plt+0x2bc84>  // b.none
  42e790:	ldr	x21, [x19, #40]
  42e794:	cbz	x21, 42e7d4 <nftw@plt+0x2bc54>
  42e798:	ldr	w0, [x19, #48]
  42e79c:	cmp	w0, #0x2
  42e7a0:	b.eq	42e81c <nftw@plt+0x2bc9c>  // b.none
  42e7a4:	ldr	x0, [x19, #8]
  42e7a8:	bl	42dc48 <nftw@plt+0x2b0c8>
  42e7ac:	cmp	x21, x0
  42e7b0:	b.eq	42e7c8 <nftw@plt+0x2bc48>  // b.none
  42e7b4:	ldrh	w0, [x21, #18]
  42e7b8:	ubfx	x1, x0, #2, #8
  42e7bc:	and	w1, w1, #0xffffffef
  42e7c0:	bfi	w0, w1, #2, #8
  42e7c4:	strh	w0, [x21, #18]
  42e7c8:	ldr	x0, [x20, #184]
  42e7cc:	cmp	x0, x21
  42e7d0:	b.eq	42e84c <nftw@plt+0x2bccc>  // b.none
  42e7d4:	ldr	x0, [x19, #32]
  42e7d8:	cbz	x0, 42e7e0 <nftw@plt+0x2bc60>
  42e7dc:	bl	42838c <nftw@plt+0x2580c>
  42e7e0:	ldr	x0, [x19, #8]
  42e7e4:	str	x0, [x20, #136]
  42e7e8:	str	xzr, [x0]
  42e7ec:	mov	x0, x19
  42e7f0:	bl	402910 <free@plt>
  42e7f4:	ldp	x19, x20, [sp, #16]
  42e7f8:	ldp	x21, x22, [sp, #32]
  42e7fc:	ldp	x29, x30, [sp], #48
  42e800:	ret
  42e804:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e808:	add	x2, x2, #0x1e0
  42e80c:	mov	w1, #0x9eb                 	// #2539
  42e810:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e814:	add	x0, x0, #0xf28
  42e818:	bl	408d8c <nftw@plt+0x620c>
  42e81c:	ldr	x22, [x21]
  42e820:	ldr	x0, [x19, #32]
  42e824:	cbz	x0, 42e834 <nftw@plt+0x2bcb4>
  42e828:	ldr	x0, [x21, #8]
  42e82c:	cbz	x0, 42e834 <nftw@plt+0x2bcb4>
  42e830:	bl	402910 <free@plt>
  42e834:	mov	x0, x21
  42e838:	bl	402910 <free@plt>
  42e83c:	str	xzr, [x19, #40]
  42e840:	mov	x21, x22
  42e844:	cbz	x22, 42e7c8 <nftw@plt+0x2bc48>
  42e848:	b	42e7a4 <nftw@plt+0x2bc24>
  42e84c:	ldr	x0, [x19, #8]
  42e850:	cbnz	x0, 42e7d4 <nftw@plt+0x2bc54>
  42e854:	str	xzr, [x20, #184]
  42e858:	b	42e7d4 <nftw@plt+0x2bc54>
  42e85c:	ldr	x0, [x0, #136]
  42e860:	ldr	w1, [x0, #48]
  42e864:	cmp	w1, #0x2
  42e868:	b.eq	42e88c <nftw@plt+0x2bd0c>  // b.none
  42e86c:	ldr	x1, [x0, #40]
  42e870:	mov	w0, #0x0                   	// #0
  42e874:	cbz	x1, 42e888 <nftw@plt+0x2bd08>
  42e878:	ldr	x1, [x1, #24]
  42e87c:	cbz	x1, 42e888 <nftw@plt+0x2bd08>
  42e880:	ldrb	w0, [x1, #19]
  42e884:	ubfx	x0, x0, #4, #1
  42e888:	ret
  42e88c:	ldr	x0, [x0, #40]
  42e890:	ldr	x1, [x0]
  42e894:	b	42e870 <nftw@plt+0x2bcf0>
  42e898:	ldr	w2, [x0, #496]
  42e89c:	add	w2, w2, w1
  42e8a0:	str	w2, [x0, #496]
  42e8a4:	sub	w2, w1, #0x1
  42e8a8:	cbnz	w1, 42e8bc <nftw@plt+0x2bd3c>
  42e8ac:	ret
  42e8b0:	sub	w2, w2, #0x1
  42e8b4:	cmn	w2, #0x1
  42e8b8:	b.eq	42e8ac <nftw@plt+0x2bd2c>  // b.none
  42e8bc:	ldr	x1, [x0, #448]
  42e8c0:	sub	x1, x1, #0x18
  42e8c4:	str	x1, [x0, #448]
  42e8c8:	ldr	x3, [x0, #488]
  42e8cc:	ldr	x4, [x3, #16]
  42e8d0:	cmp	x1, x4
  42e8d4:	b.ne	42e8b0 <nftw@plt+0x2bd30>  // b.any
  42e8d8:	ldr	x1, [x3, #8]
  42e8dc:	cbz	x1, 42e8b0 <nftw@plt+0x2bd30>
  42e8e0:	str	x1, [x0, #488]
  42e8e4:	ldr	x1, [x1, #24]
  42e8e8:	str	x1, [x0, #448]
  42e8ec:	b	42e8b0 <nftw@plt+0x2bd30>
  42e8f0:	stp	x29, x30, [sp, #-16]!
  42e8f4:	mov	x29, sp
  42e8f8:	ldr	x2, [x0, #136]
  42e8fc:	ldr	x3, [x2, #8]
  42e900:	cbz	x3, 42e92c <nftw@plt+0x2bdac>
  42e904:	cmp	w1, #0x1
  42e908:	b.ne	42e934 <nftw@plt+0x2bdb4>  // b.any
  42e90c:	ldr	w1, [x2, #48]
  42e910:	cmp	w1, #0x1
  42e914:	b.eq	42e94c <nftw@plt+0x2bdcc>  // b.none
  42e918:	cbnz	w1, 42e960 <nftw@plt+0x2bde0>
  42e91c:	ldr	x0, [x2, #16]
  42e920:	sub	x0, x0, #0x8
  42e924:	str	x0, [x2, #16]
  42e928:	b	42e958 <nftw@plt+0x2bdd8>
  42e92c:	bl	42e898 <nftw@plt+0x2bd18>
  42e930:	b	42e958 <nftw@plt+0x2bdd8>
  42e934:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e938:	add	x2, x2, #0x1f8
  42e93c:	mov	w1, #0xb8f                 	// #2959
  42e940:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e944:	add	x0, x0, #0xf28
  42e948:	bl	408d8c <nftw@plt+0x620c>
  42e94c:	ldr	x0, [x2, #16]
  42e950:	sub	x0, x0, #0x18
  42e954:	str	x0, [x2, #16]
  42e958:	ldp	x29, x30, [sp], #16
  42e95c:	ret
  42e960:	cmp	w1, #0x2
  42e964:	b.ne	42e9a8 <nftw@plt+0x2be28>  // b.any
  42e968:	ldr	x1, [x2, #16]
  42e96c:	sub	x1, x1, #0x8
  42e970:	str	x1, [x2, #16]
  42e974:	ldr	x0, [x0, #136]
  42e978:	ldr	x0, [x0, #40]
  42e97c:	cbz	x0, 42e990 <nftw@plt+0x2be10>
  42e980:	ldr	x1, [x0, #16]
  42e984:	sub	x1, x1, #0x4
  42e988:	str	x1, [x0, #16]
  42e98c:	b	42e958 <nftw@plt+0x2bdd8>
  42e990:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e994:	add	x2, x2, #0x1f8
  42e998:	mov	w1, #0xb9e                 	// #2974
  42e99c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e9a0:	add	x0, x0, #0xf28
  42e9a4:	bl	408d8c <nftw@plt+0x620c>
  42e9a8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42e9ac:	add	x2, x2, #0x1f8
  42e9b0:	mov	w1, #0xba1                 	// #2977
  42e9b4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42e9b8:	add	x0, x0, #0xf28
  42e9bc:	bl	408d8c <nftw@plt+0x620c>
  42e9c0:	stp	x29, x30, [sp, #-80]!
  42e9c4:	mov	x29, sp
  42e9c8:	stp	x19, x20, [sp, #16]
  42e9cc:	stp	x21, x22, [sp, #32]
  42e9d0:	stp	x23, x24, [sp, #48]
  42e9d4:	stp	x25, x26, [sp, #64]
  42e9d8:	mov	x19, x0
  42e9dc:	mov	w23, w1
  42e9e0:	mov	x21, x2
  42e9e4:	mov	x22, x3
  42e9e8:	ldr	x0, [x2]
  42e9ec:	bl	42763c <nftw@plt+0x24abc>
  42e9f0:	mov	w20, w0
  42e9f4:	mov	x0, x22
  42e9f8:	bl	42763c <nftw@plt+0x24abc>
  42e9fc:	add	w20, w20, w0
  42ea00:	add	w20, w20, #0x1
  42ea04:	add	x20, x20, #0xf
  42ea08:	and	x20, x20, #0x1fffffff0
  42ea0c:	sub	sp, sp, x20
  42ea10:	mov	x25, sp
  42ea14:	mov	w3, #0x1                   	// #1
  42ea18:	mov	x2, x25
  42ea1c:	ldr	x1, [x21]
  42ea20:	mov	x0, x19
  42ea24:	bl	427708 <nftw@plt+0x24b88>
  42ea28:	mov	x24, x0
  42ea2c:	ldr	x0, [x21]
  42ea30:	ldrb	w0, [x0, #4]
  42ea34:	mov	x2, x24
  42ea38:	cmp	w0, #0x7
  42ea3c:	b.eq	42eb28 <nftw@plt+0x2bfa8>  // b.none
  42ea40:	ldrb	w0, [x22, #4]
  42ea44:	cmp	w0, #0x53
  42ea48:	b.ne	42eb3c <nftw@plt+0x2bfbc>  // b.any
  42ea4c:	mov	w0, #0xa                   	// #10
  42ea50:	strb	w0, [x2]
  42ea54:	mov	w3, #0x1                   	// #1
  42ea58:	sub	x2, x2, x25
  42ea5c:	mov	x1, x25
  42ea60:	mov	x0, x19
  42ea64:	bl	41eb74 <nftw@plt+0x1bff4>
  42ea68:	mov	x0, x19
  42ea6c:	bl	4269b4 <nftw@plt+0x23e34>
  42ea70:	mov	x0, x19
  42ea74:	bl	427474 <nftw@plt+0x248f4>
  42ea78:	str	x0, [x19, #448]
  42ea7c:	mov	x0, x19
  42ea80:	bl	429308 <nftw@plt+0x26788>
  42ea84:	mov	x20, x0
  42ea88:	ldr	x0, [x19]
  42ea8c:	ldr	x1, [x0]
  42ea90:	ldr	x0, [x0, #32]
  42ea94:	cmp	x1, x0
  42ea98:	b.eq	42eb54 <nftw@plt+0x2bfd4>  // b.none
  42ea9c:	ldr	w26, [x20]
  42eaa0:	mov	x0, x19
  42eaa4:	bl	41ec80 <nftw@plt+0x1c100>
  42eaa8:	mov	w1, #0x1                   	// #1
  42eaac:	mov	x0, x19
  42eab0:	bl	42e8f0 <nftw@plt+0x2bd70>
  42eab4:	strb	wzr, [x24]
  42eab8:	ldr	x0, [x21]
  42eabc:	ldp	x2, x3, [x0]
  42eac0:	stp	x2, x3, [x20]
  42eac4:	ldr	x0, [x0, #16]
  42eac8:	str	x0, [x20, #16]
  42eacc:	str	x20, [x21]
  42ead0:	str	w26, [x20]
  42ead4:	ldrh	w0, [x20, #6]
  42ead8:	and	w0, w0, #0xfffffff7
  42eadc:	strh	w0, [x20, #6]
  42eae0:	ldr	w1, [x19, #1116]
  42eae4:	mov	w0, #0x0                   	// #0
  42eae8:	cmp	w1, #0x15
  42eaec:	b.eq	42eb64 <nftw@plt+0x2bfe4>  // b.none
  42eaf0:	mov	x1, x22
  42eaf4:	mov	x0, x19
  42eaf8:	bl	42add4 <nftw@plt+0x28254>
  42eafc:	mov	x6, x0
  42eb00:	mov	x5, x25
  42eb04:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42eb08:	add	x4, x4, #0x210
  42eb0c:	mov	w3, #0x0                   	// #0
  42eb10:	mov	w2, w23
  42eb14:	mov	w1, #0x3                   	// #3
  42eb18:	mov	x0, x19
  42eb1c:	bl	41fb7c <nftw@plt+0x1cffc>
  42eb20:	mov	w0, #0x0                   	// #0
  42eb24:	b	42eb64 <nftw@plt+0x2bfe4>
  42eb28:	ldrb	w0, [x22, #4]
  42eb2c:	cbz	w0, 42eb3c <nftw@plt+0x2bfbc>
  42eb30:	mov	w0, #0x20                  	// #32
  42eb34:	strb	w0, [x2], #1
  42eb38:	b	42ea40 <nftw@plt+0x2bec0>
  42eb3c:	mov	w3, #0x1                   	// #1
  42eb40:	mov	x1, x22
  42eb44:	mov	x0, x19
  42eb48:	bl	427708 <nftw@plt+0x24b88>
  42eb4c:	mov	x2, x0
  42eb50:	b	42ea4c <nftw@plt+0x2becc>
  42eb54:	str	x20, [x21]
  42eb58:	mov	x0, x19
  42eb5c:	bl	41ec80 <nftw@plt+0x1c100>
  42eb60:	mov	w0, #0x1                   	// #1
  42eb64:	mov	sp, x29
  42eb68:	ldp	x19, x20, [sp, #16]
  42eb6c:	ldp	x21, x22, [sp, #32]
  42eb70:	ldp	x23, x24, [sp, #48]
  42eb74:	ldp	x25, x26, [sp, #64]
  42eb78:	ldp	x29, x30, [sp], #80
  42eb7c:	ret
  42eb80:	ldrb	w1, [x0, #18]
  42eb84:	and	w1, w1, #0xfffffffc
  42eb88:	strb	w1, [x0, #18]
  42eb8c:	str	xzr, [x0, #24]
  42eb90:	ldrh	w1, [x0, #18]
  42eb94:	ubfx	x2, x1, #2, #8
  42eb98:	and	w2, w2, #0xffffffcf
  42eb9c:	bfi	w1, w2, #2, #8
  42eba0:	strh	w1, [x0, #18]
  42eba4:	ret
  42eba8:	stp	x29, x30, [sp, #-64]!
  42ebac:	mov	x29, sp
  42ebb0:	stp	x19, x20, [sp, #16]
  42ebb4:	stp	x21, x22, [sp, #32]
  42ebb8:	mov	x21, x0
  42ebbc:	mov	x19, x2
  42ebc0:	ldrb	w0, [x2, #18]
  42ebc4:	and	w0, w0, #0x3
  42ebc8:	cmp	w0, #0x1
  42ebcc:	b.eq	42ec78 <nftw@plt+0x2c0f8>  // b.none
  42ebd0:	str	x23, [sp, #48]
  42ebd4:	mov	w20, w1
  42ebd8:	mov	x22, x3
  42ebdc:	add	w0, w1, #0x1
  42ebe0:	add	w0, w0, w0, lsl #1
  42ebe4:	lsl	w23, w0, #3
  42ebe8:	ldr	w1, [x21, #512]
  42ebec:	cmp	w1, w0, lsl #3
  42ebf0:	b.cc	42ec98 <nftw@plt+0x2c118>  // b.lo, b.ul, b.last
  42ebf4:	mov	w23, w20
  42ebf8:	add	x0, x23, w20, uxtw #1
  42ebfc:	lsl	x0, x0, #3
  42ec00:	ldr	x2, [x21, #504]
  42ec04:	add	x1, x2, x0
  42ec08:	str	x19, [x2, x0]
  42ec0c:	ldr	x0, [x19, #24]
  42ec10:	str	x0, [x1, #8]
  42ec14:	ldrb	w0, [x19, #18]
  42ec18:	and	w0, w0, #0x3
  42ec1c:	str	w0, [x1, #16]
  42ec20:	lsl	x0, x23, #3
  42ec24:	ldr	x2, [x21, #56]
  42ec28:	ldr	x1, [x2, #24]
  42ec2c:	ldr	x2, [x2, #16]
  42ec30:	sub	x1, x1, x2
  42ec34:	add	x0, x0, #0x8
  42ec38:	cmp	x1, x0
  42ec3c:	b.cc	42ecb0 <nftw@plt+0x2c130>  // b.lo, b.ul, b.last
  42ec40:	ldr	x0, [x21, #56]
  42ec44:	ldr	x0, [x0, #16]
  42ec48:	str	x22, [x0, x23, lsl #3]
  42ec4c:	ldrb	w1, [x19, #18]
  42ec50:	mov	w0, #0x1                   	// #1
  42ec54:	bfxil	w1, w0, #0, #2
  42ec58:	strb	w1, [x19, #18]
  42ec5c:	add	w20, w20, w0
  42ec60:	strh	w20, [x19, #24]
  42ec64:	ldr	x23, [sp, #48]
  42ec68:	ldp	x19, x20, [sp, #16]
  42ec6c:	ldp	x21, x22, [sp, #32]
  42ec70:	ldp	x29, x30, [sp], #64
  42ec74:	ret
  42ec78:	ldr	x3, [x2]
  42ec7c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42ec80:	add	x2, x2, #0x250
  42ec84:	mov	w1, #0x3                   	// #3
  42ec88:	mov	x0, x21
  42ec8c:	bl	41f990 <nftw@plt+0x1ce10>
  42ec90:	mov	w0, #0x0                   	// #0
  42ec94:	b	42ec68 <nftw@plt+0x2c0e8>
  42ec98:	mov	w1, w23
  42ec9c:	ldr	x0, [x21, #504]
  42eca0:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  42eca4:	str	x0, [x21, #504]
  42eca8:	str	w23, [x21, #512]
  42ecac:	b	42ebf4 <nftw@plt+0x2c074>
  42ecb0:	mov	x2, #0x8                   	// #8
  42ecb4:	add	x1, x21, #0x38
  42ecb8:	mov	x0, x21
  42ecbc:	bl	428330 <nftw@plt+0x257b0>
  42ecc0:	b	42ec40 <nftw@plt+0x2c0c0>
  42ecc4:	sub	w2, w1, #0x1
  42ecc8:	cbz	w1, 42ed08 <nftw@plt+0x2c188>
  42eccc:	ubfiz	x1, x2, #1, #32
  42ecd0:	add	x1, x1, w2, uxtw
  42ecd4:	lsl	x1, x1, #3
  42ecd8:	ldr	x2, [x0, #504]
  42ecdc:	add	x3, x2, x1
  42ece0:	ldr	x2, [x2, x1]
  42ece4:	ldrb	w4, [x2, #18]
  42ece8:	ldr	w5, [x3, #16]
  42ecec:	bfxil	w4, w5, #0, #2
  42ecf0:	strb	w4, [x2, #18]
  42ecf4:	ldr	x3, [x3, #8]
  42ecf8:	str	x3, [x2, #24]
  42ecfc:	sub	x1, x1, #0x18
  42ed00:	cmn	x1, #0x18
  42ed04:	b.ne	42ecd8 <nftw@plt+0x2c158>  // b.any
  42ed08:	ret
  42ed0c:	mov	x3, x0
  42ed10:	mov	x0, x2
  42ed14:	ldr	w2, [x3, #48]
  42ed18:	str	w2, [x0, #8]
  42ed1c:	str	xzr, [x0]
  42ed20:	strb	wzr, [x0, #18]
  42ed24:	strh	wzr, [x0, #16]
  42ed28:	ldrb	w2, [x0, #19]
  42ed2c:	and	w2, w2, #0xfffffff7
  42ed30:	strb	w2, [x0, #19]
  42ed34:	ldrb	w4, [x3, #1151]
  42ed38:	cmp	w4, #0x0
  42ed3c:	cset	w4, eq  // eq = none
  42ed40:	bfi	w2, w4, #5, #1
  42ed44:	str	wzr, [x0, #12]
  42ed48:	and	w2, w2, #0xfffffffb
  42ed4c:	and	w2, w2, #0xffffffbf
  42ed50:	strb	w2, [x0, #19]
  42ed54:	ldr	x2, [x3]
  42ed58:	mov	w3, #0x0                   	// #0
  42ed5c:	cbz	x2, 42ed6c <nftw@plt+0x2c1ec>
  42ed60:	ldrb	w2, [x2, #106]
  42ed64:	cmp	w2, #0x0
  42ed68:	cset	w3, ne  // ne = any
  42ed6c:	ldrb	w2, [x0, #19]
  42ed70:	bfi	w2, w3, #4, #1
  42ed74:	bfxil	w2, w1, #0, #2
  42ed78:	strb	w2, [x0, #19]
  42ed7c:	ret
  42ed80:	stp	x29, x30, [sp, #-240]!
  42ed84:	mov	x29, sp
  42ed88:	stp	x19, x20, [sp, #16]
  42ed8c:	stp	x23, x24, [sp, #48]
  42ed90:	mov	x19, x0
  42ed94:	mov	x23, x1
  42ed98:	ldrb	w0, [x0, #1160]
  42ed9c:	str	w0, [sp, #104]
  42eda0:	cbz	w0, 42ee64 <nftw@plt+0x2c2e4>
  42eda4:	mov	x0, x19
  42eda8:	bl	4346ac <nftw@plt+0x31b2c>
  42edac:	mov	x20, x0
  42edb0:	cbz	x20, 42fa54 <nftw@plt+0x2ced4>
  42edb4:	ldrb	w0, [x23, #18]
  42edb8:	tbz	w0, #1, 42f964 <nftw@plt+0x2cde4>
  42edbc:	ldrb	w0, [x19, #1151]
  42edc0:	cbnz	w0, 42f874 <nftw@plt+0x2ccf4>
  42edc4:	ldrh	w0, [x23, #18]
  42edc8:	ubfx	x1, x0, #2, #8
  42edcc:	tbnz	w0, #5, 42f914 <nftw@plt+0x2cd94>
  42edd0:	ldrb	w0, [x23, #18]
  42edd4:	and	w0, w0, #0x3
  42edd8:	cmp	w0, #0x3
  42eddc:	b.eq	42f888 <nftw@plt+0x2cd08>  // b.none
  42ede0:	tbnz	w1, #6, 42f95c <nftw@plt+0x2cddc>
  42ede4:	stp	x21, x22, [sp, #32]
  42ede8:	ldr	x21, [x23, #24]
  42edec:	ldrb	w2, [x21, #18]
  42edf0:	cbz	w2, 42ee0c <nftw@plt+0x2c28c>
  42edf4:	ldr	x3, [x19, #1048]
  42edf8:	sub	w2, w2, #0x1
  42edfc:	mov	x1, x21
  42ee00:	mov	x0, x19
  42ee04:	blr	x3
  42ee08:	strb	wzr, [x21, #18]
  42ee0c:	ldrh	w1, [x21, #16]
  42ee10:	ldrh	w0, [x20, #16]
  42ee14:	cmp	w0, w1
  42ee18:	b.ne	42f910 <nftw@plt+0x2cd90>  // b.any
  42ee1c:	ldrb	w4, [x21, #19]
  42ee20:	ldrb	w0, [x20, #19]
  42ee24:	eor	w0, w4, w0
  42ee28:	tst	w0, #0xc
  42ee2c:	b.ne	42fa04 <nftw@plt+0x2ce84>  // b.any
  42ee30:	sub	w1, w1, #0x1
  42ee34:	cmn	w1, #0x1
  42ee38:	b.eq	42f898 <nftw@plt+0x2cd18>  // b.none
  42ee3c:	mov	w0, w1
  42ee40:	ldr	x2, [x21]
  42ee44:	ldr	x3, [x20]
  42ee48:	ldr	x2, [x2, x0, lsl #3]
  42ee4c:	sub	w1, w1, #0x1
  42ee50:	ldr	x0, [x3, x0, lsl #3]
  42ee54:	cmp	x2, x0
  42ee58:	b.eq	42ee34 <nftw@plt+0x2c2b4>  // b.none
  42ee5c:	ldp	x21, x22, [sp, #32]
  42ee60:	b	42f914 <nftw@plt+0x2cd94>
  42ee64:	stp	x21, x22, [sp, #32]
  42ee68:	stp	x25, x26, [sp, #64]
  42ee6c:	ldr	x20, [x19, #448]
  42ee70:	add	x0, sp, #0xb0
  42ee74:	str	x0, [x19, #448]
  42ee78:	mov	x0, x19
  42ee7c:	bl	429308 <nftw@plt+0x26788>
  42ee80:	mov	x21, x0
  42ee84:	str	x20, [x19, #448]
  42ee88:	ldrh	w0, [x0, #6]
  42ee8c:	tbnz	w0, #0, 42fac8 <nftw@plt+0x2cf48>
  42ee90:	ldrb	w0, [x21, #4]
  42ee94:	cmp	w0, #0x14
  42ee98:	b.eq	42eeec <nftw@plt+0x2c36c>  // b.none
  42ee9c:	stp	x27, x28, [sp, #80]
  42eea0:	cmp	w0, #0x16
  42eea4:	b.eq	42facc <nftw@plt+0x2cf4c>  // b.none
  42eea8:	cmp	w0, #0x4f
  42eeac:	b.eq	42f190 <nftw@plt+0x2c610>  // b.none
  42eeb0:	ldrb	w1, [x19, #1152]
  42eeb4:	cbnz	w1, 42f1a4 <nftw@plt+0x2c624>
  42eeb8:	cmp	w0, #0x3d
  42eebc:	b.eq	42f1e0 <nftw@plt+0x2c660>  // b.none
  42eec0:	b.hi	42f1d0 <nftw@plt+0x2c650>  // b.pmore
  42eec4:	and	w0, w0, #0xfffffffd
  42eec8:	and	w0, w0, #0xff
  42eecc:	cmp	w0, #0x34
  42eed0:	cset	w1, eq  // eq = none
  42eed4:	lsl	w1, w1, #1
  42eed8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42eedc:	add	x2, x2, #0x3d0
  42eee0:	mov	x0, x19
  42eee4:	bl	41f990 <nftw@plt+0x1ce10>
  42eee8:	b	42facc <nftw@plt+0x2cf4c>
  42eeec:	mov	w21, #0x0                   	// #0
  42eef0:	mov	w20, #0x0                   	// #0
  42eef4:	str	wzr, [sp, #160]
  42eef8:	adrp	x24, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42eefc:	add	x24, x24, #0x310
  42ef00:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42ef04:	add	x22, x22, #0x2e0
  42ef08:	mov	w25, #0xa                   	// #10
  42ef0c:	b	42f01c <nftw@plt+0x2c49c>
  42ef10:	cmp	w2, #0x13
  42ef14:	b.eq	42f004 <nftw@plt+0x2c484>  // b.none
  42ef18:	cmp	w2, #0x15
  42ef1c:	b.ne	42ef6c <nftw@plt+0x2c3ec>  // b.any
  42ef20:	cmp	w20, #0x0
  42ef24:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  42ef28:	ldr	w1, [sp, #160]
  42ef2c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  42ef30:	b.eq	42fb50 <nftw@plt+0x2cfd0>  // b.none
  42ef34:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42ef38:	add	x1, x1, #0x7f0
  42ef3c:	ldp	x4, x5, [x1, #96]
  42ef40:	stp	x4, x5, [sp, #200]
  42ef44:	ldp	x4, x5, [x1, #112]
  42ef48:	stp	x4, x5, [sp, #216]
  42ef4c:	ldr	x1, [x1, #128]
  42ef50:	str	x1, [sp, #232]
  42ef54:	mov	w21, w20
  42ef58:	cmp	w2, #0x16
  42ef5c:	b.ne	42f078 <nftw@plt+0x2c4f8>  // b.any
  42ef60:	add	w21, w20, #0x2
  42ef64:	mov	x3, #0x0                   	// #0
  42ef68:	b	42ef98 <nftw@plt+0x2c418>
  42ef6c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42ef70:	add	x1, x1, #0x7f0
  42ef74:	ldp	x4, x5, [x1, #96]
  42ef78:	stp	x4, x5, [sp, #200]
  42ef7c:	ldp	x4, x5, [x1, #112]
  42ef80:	stp	x4, x5, [sp, #216]
  42ef84:	ldr	x1, [x1, #128]
  42ef88:	str	x1, [sp, #232]
  42ef8c:	cbz	w21, 42ef54 <nftw@plt+0x2c3d4>
  42ef90:	mov	x3, #0x0                   	// #0
  42ef94:	mov	w21, #0x4                   	// #4
  42ef98:	add	x0, sp, #0xc8
  42ef9c:	ldr	x2, [x0, w21, uxtw #3]
  42efa0:	mov	w1, #0x3                   	// #3
  42efa4:	mov	x0, x19
  42efa8:	bl	41f990 <nftw@plt+0x1ce10>
  42efac:	b	42f738 <nftw@plt+0x2cbb8>
  42efb0:	mov	x3, #0x0                   	// #0
  42efb4:	mov	w21, #0x4                   	// #4
  42efb8:	b	42ef98 <nftw@plt+0x2c418>
  42efbc:	mov	x3, #0x0                   	// #0
  42efc0:	mov	w21, #0x4                   	// #4
  42efc4:	b	42ef98 <nftw@plt+0x2c418>
  42efc8:	orr	w26, w20, w21
  42efcc:	ands	w26, w26, #0xff
  42efd0:	b.ne	42f050 <nftw@plt+0x2c4d0>  // b.any
  42efd4:	ldr	x3, [x0, #16]
  42efd8:	ldr	x2, [x0, #8]
  42efdc:	ldr	w21, [sp, #160]
  42efe0:	mov	w1, w21
  42efe4:	mov	x0, x19
  42efe8:	bl	42eba8 <nftw@plt+0x2c028>
  42efec:	ands	w20, w0, #0xff
  42eff0:	b.eq	42f738 <nftw@plt+0x2cbb8>  // b.none
  42eff4:	add	w0, w21, #0x1
  42eff8:	str	w0, [sp, #160]
  42effc:	mov	w21, w26
  42f000:	b	42f01c <nftw@plt+0x2c49c>
  42f004:	eor	w1, w20, #0x1
  42f008:	orr	w1, w21, w1
  42f00c:	ands	w1, w1, #0xff
  42f010:	b.ne	42f08c <nftw@plt+0x2c50c>  // b.any
  42f014:	mov	w21, w1
  42f018:	mov	w20, w1
  42f01c:	mov	x0, x19
  42f020:	bl	42ab60 <nftw@plt+0x27fe0>
  42f024:	ldrb	w2, [x0, #4]
  42f028:	cmp	w2, #0x2c
  42f02c:	b.eq	42f0b8 <nftw@plt+0x2c538>  // b.none
  42f030:	cmp	w2, #0x2c
  42f034:	b.ls	42ef10 <nftw@plt+0x2c390>  // b.plast
  42f038:	cmp	w2, #0x35
  42f03c:	b.eq	42efc8 <nftw@plt+0x2c448>  // b.none
  42f040:	cmp	w2, #0x4f
  42f044:	b.ne	42ef6c <nftw@plt+0x2c3ec>  // b.any
  42f048:	ldrb	w1, [x19, #1124]
  42f04c:	cbz	w1, 42f01c <nftw@plt+0x2c49c>
  42f050:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f054:	add	x1, x1, #0x7f0
  42f058:	ldp	x4, x5, [x1, #96]
  42f05c:	stp	x4, x5, [sp, #200]
  42f060:	ldp	x4, x5, [x1, #112]
  42f064:	stp	x4, x5, [sp, #216]
  42f068:	ldr	x1, [x1, #128]
  42f06c:	str	x1, [sp, #232]
  42f070:	cbnz	w21, 42efbc <nftw@plt+0x2c43c>
  42f074:	mov	w21, w20
  42f078:	mov	x1, x0
  42f07c:	mov	x0, x19
  42f080:	bl	42add4 <nftw@plt+0x28254>
  42f084:	mov	x3, x0
  42f088:	b	42ef98 <nftw@plt+0x2c418>
  42f08c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f090:	add	x1, x1, #0x7f0
  42f094:	ldp	x4, x5, [x1, #96]
  42f098:	stp	x4, x5, [sp, #200]
  42f09c:	ldp	x4, x5, [x1, #112]
  42f0a0:	stp	x4, x5, [sp, #216]
  42f0a4:	ldr	x1, [x1, #128]
  42f0a8:	str	x1, [sp, #232]
  42f0ac:	cbnz	w21, 42efb0 <nftw@plt+0x2c430>
  42f0b0:	mov	w21, w20
  42f0b4:	b	42f078 <nftw@plt+0x2c4f8>
  42f0b8:	cbnz	w21, 42fbb4 <nftw@plt+0x2d034>
  42f0bc:	cbz	w20, 42f0f0 <nftw@plt+0x2c570>
  42f0c0:	ldrb	w0, [x19, #1154]
  42f0c4:	mov	w21, w20
  42f0c8:	cbz	w0, 42f01c <nftw@plt+0x2c49c>
  42f0cc:	ldrb	w0, [x19, #1142]
  42f0d0:	cbz	w0, 42f01c <nftw@plt+0x2c49c>
  42f0d4:	ldrb	w0, [x19, #1120]
  42f0d8:	cmp	w0, #0x0
  42f0dc:	csel	x2, x22, x24, ne  // ne = any
  42f0e0:	mov	w1, w25
  42f0e4:	mov	x0, x19
  42f0e8:	bl	41fa84 <nftw@plt+0x1cf04>
  42f0ec:	b	42f01c <nftw@plt+0x2c49c>
  42f0f0:	ldr	x2, [x19, #1272]
  42f0f4:	mov	x3, x2
  42f0f8:	ldr	w21, [sp, #160]
  42f0fc:	mov	w1, w21
  42f100:	mov	x0, x19
  42f104:	bl	42eba8 <nftw@plt+0x2c028>
  42f108:	add	w0, w21, #0x1
  42f10c:	str	w0, [sp, #160]
  42f110:	mov	w0, #0x1                   	// #1
  42f114:	strb	w0, [x19, #22]
  42f118:	ldrb	w0, [x19, #1152]
  42f11c:	cbnz	w0, 42f160 <nftw@plt+0x2c5e0>
  42f120:	ldrb	w0, [x19, #1154]
  42f124:	cbz	w0, 42f160 <nftw@plt+0x2c5e0>
  42f128:	ldrb	w0, [x19, #1142]
  42f12c:	cbz	w0, 42f160 <nftw@plt+0x2c5e0>
  42f130:	ldrb	w1, [x19, #1120]
  42f134:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f138:	add	x0, x0, #0x2a8
  42f13c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f140:	add	x2, x2, #0x270
  42f144:	cmp	w1, #0x0
  42f148:	csel	x2, x2, x0, ne  // ne = any
  42f14c:	mov	w1, w25
  42f150:	mov	x0, x19
  42f154:	bl	41fa84 <nftw@plt+0x1cf04>
  42f158:	mov	w21, #0x1                   	// #1
  42f15c:	b	42f01c <nftw@plt+0x2c49c>
  42f160:	ldrsb	w0, [x19, #1198]
  42f164:	mov	w21, #0x1                   	// #1
  42f168:	cmp	w0, #0x0
  42f16c:	b.le	42f01c <nftw@plt+0x2c49c>
  42f170:	ldrb	w0, [x19, #1120]
  42f174:	cbnz	w0, 42f01c <nftw@plt+0x2c49c>
  42f178:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f17c:	add	x2, x2, #0x2a8
  42f180:	mov	w1, #0x0                   	// #0
  42f184:	mov	x0, x19
  42f188:	bl	41f990 <nftw@plt+0x1ce10>
  42f18c:	b	42f01c <nftw@plt+0x2c49c>
  42f190:	ldrb	w0, [x19, #1124]
  42f194:	cbz	w0, 42facc <nftw@plt+0x2cf4c>
  42f198:	ldrb	w0, [x19, #1152]
  42f19c:	mov	w1, #0x0                   	// #0
  42f1a0:	cbz	w0, 42eed8 <nftw@plt+0x2c358>
  42f1a4:	ldrb	w1, [x19, #1120]
  42f1a8:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f1ac:	add	x0, x0, #0x378
  42f1b0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f1b4:	add	x2, x2, #0x340
  42f1b8:	cmp	w1, #0x0
  42f1bc:	csel	x2, x2, x0, ne  // ne = any
  42f1c0:	mov	w1, #0x2                   	// #2
  42f1c4:	mov	x0, x19
  42f1c8:	bl	41f990 <nftw@plt+0x1ce10>
  42f1cc:	b	42facc <nftw@plt+0x2cf4c>
  42f1d0:	cmp	w0, #0x43
  42f1d4:	cset	w1, eq  // eq = none
  42f1d8:	lsl	w1, w1, #1
  42f1dc:	b	42eed8 <nftw@plt+0x2c358>
  42f1e0:	ldr	x0, [x21, #16]
  42f1e4:	ldrb	w1, [x0]
  42f1e8:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f1ec:	add	x0, x0, #0x3b0
  42f1f0:	bl	402940 <strchr@plt>
  42f1f4:	cmp	x0, #0x0
  42f1f8:	cset	w1, eq  // eq = none
  42f1fc:	lsl	w1, w1, #1
  42f200:	b	42eed8 <nftw@plt+0x2c358>
  42f204:	ldr	x0, [x19, #56]
  42f208:	ldr	x1, [x0, #24]
  42f20c:	ldr	x0, [x0, #16]
  42f210:	sub	x1, x1, x0
  42f214:	ldr	w0, [x20, #12]
  42f218:	add	x0, x0, #0x2
  42f21c:	add	x0, x0, x0, lsl #1
  42f220:	cmp	x1, x0, lsl #3
  42f224:	b.cc	42f2a0 <nftw@plt+0x2c720>  // b.lo, b.ul, b.last
  42f228:	ldr	x0, [x19, #56]
  42f22c:	ldr	x20, [x0, #16]
  42f230:	ldr	x21, [x19, #448]
  42f234:	ldr	w0, [x20, #12]
  42f238:	add	x0, x0, #0x1
  42f23c:	add	x0, x0, x0, lsl #1
  42f240:	add	x0, x20, x0, lsl #3
  42f244:	str	x0, [x19, #448]
  42f248:	mov	x0, x19
  42f24c:	bl	429308 <nftw@plt+0x26788>
  42f250:	str	x21, [x19, #448]
  42f254:	ldrb	w1, [x0, #4]
  42f258:	cmp	w1, #0x35
  42f25c:	b.eq	42f2b4 <nftw@plt+0x2c734>  // b.none
  42f260:	ldrb	w2, [x19, #1138]
  42f264:	cbz	w2, 42f280 <nftw@plt+0x2c700>
  42f268:	ldrh	w2, [x20, #16]
  42f26c:	cbz	w2, 42f280 <nftw@plt+0x2c700>
  42f270:	cmp	w1, #0x38
  42f274:	mov	w2, #0x3e                  	// #62
  42f278:	ccmp	w1, w2, #0x4, ne  // ne = any
  42f27c:	b.eq	42f2dc <nftw@plt+0x2c75c>  // b.none
  42f280:	ldr	w0, [x20, #12]
  42f284:	add	w1, w0, #0x1
  42f288:	str	w1, [x20, #12]
  42f28c:	mov	w0, w0
  42f290:	add	x0, x0, #0x1
  42f294:	add	x0, x0, x0, lsl #1
  42f298:	add	x0, x20, x0, lsl #3
  42f29c:	b	42f6c0 <nftw@plt+0x2cb40>
  42f2a0:	mov	x2, #0x18                  	// #24
  42f2a4:	add	x1, x19, #0x38
  42f2a8:	mov	x0, x19
  42f2ac:	bl	428330 <nftw@plt+0x257b0>
  42f2b0:	b	42f228 <nftw@plt+0x2c6a8>
  42f2b4:	ldr	x3, [x0, #8]
  42f2b8:	ldrb	w2, [x3, #18]
  42f2bc:	and	w2, w2, #0x3
  42f2c0:	cmp	w2, #0x1
  42f2c4:	b.ne	42f260 <nftw@plt+0x2c6e0>  // b.any
  42f2c8:	mov	w1, #0x50                  	// #80
  42f2cc:	strb	w1, [x0, #4]
  42f2d0:	ldrh	w1, [x3, #24]
  42f2d4:	str	w1, [x0, #8]
  42f2d8:	b	42f280 <nftw@plt+0x2c700>
  42f2dc:	ldr	x21, [x0, #16]
  42f2e0:	ldr	w24, [x0, #8]
  42f2e4:	sub	x24, x24, #0x1
  42f2e8:	add	x24, x21, x24
  42f2ec:	add	x21, x21, #0x1
  42f2f0:	cmp	x24, x21
  42f2f4:	b.hi	42f3ec <nftw@plt+0x2c86c>  // b.pmore
  42f2f8:	b	42f280 <nftw@plt+0x2c700>
  42f2fc:	mov	x21, x0
  42f300:	b	42f3e4 <nftw@plt+0x2c864>
  42f304:	add	x21, x21, #0x1
  42f308:	cmp	x24, x21
  42f30c:	b.eq	42fabc <nftw@plt+0x2cf3c>  // b.none
  42f310:	ldrb	w0, [x21]
  42f314:	ldr	x1, [sp, #120]
  42f318:	ldrh	w1, [x1, w0, sxtw #1]
  42f31c:	tbnz	w1, #9, 42f330 <nftw@plt+0x2c7b0>
  42f320:	cmp	w0, #0x24
  42f324:	b.ne	42f304 <nftw@plt+0x2c784>  // b.any
  42f328:	ldrb	w0, [x19, #1146]
  42f32c:	cbz	w0, 42f304 <nftw@plt+0x2c784>
  42f330:	cmp	x24, x21
  42f334:	b.ls	42fa80 <nftw@plt+0x2cf00>  // b.plast
  42f338:	mov	x0, x21
  42f33c:	mov	w3, #0x204                 	// #516
  42f340:	b	42f350 <nftw@plt+0x2c7d0>
  42f344:	add	x0, x0, #0x1
  42f348:	cmp	x24, x0
  42f34c:	b.eq	42fa88 <nftw@plt+0x2cf08>  // b.none
  42f350:	ldrb	w1, [x0]
  42f354:	ldr	x2, [sp, #120]
  42f358:	ldrh	w2, [x2, w1, sxtw #1]
  42f35c:	tst	w3, w2
  42f360:	b.ne	42f344 <nftw@plt+0x2c7c4>  // b.any
  42f364:	cmp	w1, #0x24
  42f368:	b.ne	42f374 <nftw@plt+0x2c7f4>  // b.any
  42f36c:	ldrb	w1, [x19, #1146]
  42f370:	cbnz	w1, 42f344 <nftw@plt+0x2c7c4>
  42f374:	sub	x1, x0, x21
  42f378:	str	w1, [sp, #144]
  42f37c:	ldrh	w28, [x20, #16]
  42f380:	cbz	w28, 42f2fc <nftw@plt+0x2c77c>
  42f384:	str	x21, [sp, #112]
  42f388:	mov	x21, x0
  42f38c:	b	42faa4 <nftw@plt+0x2cf24>
  42f390:	add	x25, x25, #0x1
  42f394:	cmp	w28, w25
  42f398:	b.ls	42f3e4 <nftw@plt+0x2c864>  // b.plast
  42f39c:	ldr	x0, [sp, #128]
  42f3a0:	ldr	x0, [x0, x25, lsl #3]
  42f3a4:	ldr	w1, [x0, #8]
  42f3a8:	ldr	w2, [sp, #144]
  42f3ac:	cmp	w1, w2
  42f3b0:	b.ne	42f390 <nftw@plt+0x2c810>  // b.any
  42f3b4:	ldr	x0, [x0]
  42f3b8:	str	x0, [sp, #152]
  42f3bc:	ldr	x2, [sp, #136]
  42f3c0:	mov	x1, x0
  42f3c4:	ldr	x0, [sp, #112]
  42f3c8:	bl	402850 <memcmp@plt>
  42f3cc:	cbnz	w0, 42f390 <nftw@plt+0x2c810>
  42f3d0:	ldr	x3, [sp, #152]
  42f3d4:	ldr	x2, [sp, #168]
  42f3d8:	mov	w1, #0x6                   	// #6
  42f3dc:	mov	x0, x19
  42f3e0:	bl	41fa08 <nftw@plt+0x1ce88>
  42f3e4:	cmp	x24, x21
  42f3e8:	b.ls	42f280 <nftw@plt+0x2c700>  // b.plast
  42f3ec:	cmp	x21, x24
  42f3f0:	b.cc	42f310 <nftw@plt+0x2c790>  // b.lo, b.ul, b.last
  42f3f4:	b	42fac0 <nftw@plt+0x2cf40>
  42f3f8:	ldrb	w1, [x20, #19]
  42f3fc:	tbz	w1, #2, 42f6d8 <nftw@plt+0x2cb58>
  42f400:	ldrb	w1, [x0, #4]
  42f404:	cmp	w1, #0x50
  42f408:	b.eq	42f434 <nftw@plt+0x2c8b4>  // b.none
  42f40c:	ldr	w1, [x19, #1116]
  42f410:	cmp	w1, #0x15
  42f414:	b.eq	42f6d8 <nftw@plt+0x2cb58>  // b.none
  42f418:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f41c:	add	x2, x2, #0x438
  42f420:	mov	w1, #0x3                   	// #3
  42f424:	mov	x0, x19
  42f428:	bl	41f990 <nftw@plt+0x1ce10>
  42f42c:	ldp	x27, x28, [sp, #80]
  42f430:	b	42f738 <nftw@plt+0x2cbb8>
  42f434:	ldrh	w1, [x0, #6]
  42f438:	tbz	w1, #0, 42f444 <nftw@plt+0x2c8c4>
  42f43c:	orr	w1, w1, #0x200
  42f440:	strh	w1, [x0, #6]
  42f444:	ldurh	w2, [x0, #-18]
  42f448:	tbz	w2, #1, 42f458 <nftw@plt+0x2c8d8>
  42f44c:	ldrh	w1, [x0, #6]
  42f450:	orr	w1, w1, #0x100
  42f454:	strh	w1, [x0, #6]
  42f458:	ldrh	w1, [x0, #6]
  42f45c:	and	w1, w1, #0xfffffffe
  42f460:	orr	w1, w1, #0x4
  42f464:	and	w2, w2, #0x1
  42f468:	orr	w1, w1, w2
  42f46c:	strh	w1, [x0, #6]
  42f470:	ldp	x2, x3, [x0]
  42f474:	stp	x2, x3, [x0, #-24]
  42f478:	ldr	x1, [x0, #16]
  42f47c:	stur	x1, [x0, #-8]
  42f480:	ldr	w1, [x20, #12]
  42f484:	sub	w1, w1, #0x1
  42f488:	str	w1, [x20, #12]
  42f48c:	b	42f6d8 <nftw@plt+0x2cb58>
  42f490:	cbnz	w26, 42f528 <nftw@plt+0x2c9a8>
  42f494:	cbz	w27, 42f564 <nftw@plt+0x2c9e4>
  42f498:	cbnz	w22, 42f544 <nftw@plt+0x2c9c4>
  42f49c:	ldr	w1, [x20, #12]
  42f4a0:	sub	w1, w1, #0x1
  42f4a4:	str	w1, [x20, #12]
  42f4a8:	mov	w1, w1
  42f4ac:	add	x1, x1, #0x1
  42f4b0:	add	x1, x1, x1, lsl #1
  42f4b4:	lsl	x1, x1, #3
  42f4b8:	mov	x0, x19
  42f4bc:	bl	42ae94 <nftw@plt+0x28314>
  42f4c0:	mov	x20, x0
  42f4c4:	ldr	w0, [x0, #12]
  42f4c8:	cbz	w0, 42f4d8 <nftw@plt+0x2c958>
  42f4cc:	ldrh	w0, [x20, #30]
  42f4d0:	and	w0, w0, #0xfffffffe
  42f4d4:	strh	w0, [x20, #30]
  42f4d8:	ldr	w1, [sp, #108]
  42f4dc:	cbz	w1, 42f854 <nftw@plt+0x2ccd4>
  42f4e0:	ubfiz	x0, x1, #1, #32
  42f4e4:	add	x0, x0, w1, uxtw
  42f4e8:	lsl	x21, x0, #3
  42f4ec:	ldr	x2, [x19, #56]
  42f4f0:	ldr	x1, [x2, #24]
  42f4f4:	ldr	x2, [x2, #16]
  42f4f8:	sub	x1, x1, x2
  42f4fc:	cmp	x1, x0, lsl #3
  42f500:	b.cc	42f7b4 <nftw@plt+0x2cc34>  // b.lo, b.ul, b.last
  42f504:	ldr	x0, [x19, #56]
  42f508:	ldr	x1, [x0, #16]
  42f50c:	add	x0, x20, #0x18
  42f510:	ldr	w5, [x20, #12]
  42f514:	cbz	w5, 42f834 <nftw@plt+0x2ccb4>
  42f518:	mov	w5, #0x0                   	// #0
  42f51c:	mov	w8, #0x0                   	// #0
  42f520:	mov	w3, #0x0                   	// #0
  42f524:	b	42f7f8 <nftw@plt+0x2cc78>
  42f528:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f52c:	add	x2, x2, #0x468
  42f530:	mov	w1, #0x3                   	// #3
  42f534:	mov	x0, x19
  42f538:	bl	41f990 <nftw@plt+0x1ce10>
  42f53c:	ldp	x27, x28, [sp, #80]
  42f540:	b	42f738 <nftw@plt+0x2cbb8>
  42f544:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f548:	add	x3, x3, #0x4a0
  42f54c:	ldr	w2, [sp, #148]
  42f550:	mov	w1, #0x3                   	// #3
  42f554:	mov	x0, x19
  42f558:	bl	41fd68 <nftw@plt+0x1d1e8>
  42f55c:	ldp	x27, x28, [sp, #80]
  42f560:	b	42f738 <nftw@plt+0x2cbb8>
  42f564:	cbz	w22, 42f49c <nftw@plt+0x2c91c>
  42f568:	ldp	x27, x28, [sp, #80]
  42f56c:	b	42f738 <nftw@plt+0x2cbb8>
  42f570:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f574:	add	x2, x2, #0x468
  42f578:	mov	w1, #0x3                   	// #3
  42f57c:	mov	x0, x19
  42f580:	bl	41f990 <nftw@plt+0x1ce10>
  42f584:	ldp	x27, x28, [sp, #80]
  42f588:	b	42f738 <nftw@plt+0x2cbb8>
  42f58c:	sub	w1, w1, #0x1
  42f590:	str	w1, [x20, #12]
  42f594:	ldurh	w1, [x0, #-18]
  42f598:	orr	w2, w1, #0x8
  42f59c:	sturh	w2, [x0, #-18]
  42f5a0:	ldrh	w2, [x0, #6]
  42f5a4:	tbz	w2, #1, 42f5b4 <nftw@plt+0x2ca34>
  42f5a8:	mov	w3, #0x108                 	// #264
  42f5ac:	orr	w1, w1, w3
  42f5b0:	sturh	w1, [x0, #-18]
  42f5b4:	mov	w26, #0x1                   	// #1
  42f5b8:	tbz	w2, #0, 42f5d0 <nftw@plt+0x2ca50>
  42f5bc:	ldurh	w1, [x0, #-18]
  42f5c0:	orr	w1, w1, #0x200
  42f5c4:	sturh	w1, [x0, #-18]
  42f5c8:	b	42f5d0 <nftw@plt+0x2ca50>
  42f5cc:	mov	w26, #0x0                   	// #0
  42f5d0:	cbz	w27, 42f6b8 <nftw@plt+0x2cb38>
  42f5d4:	ldrb	w1, [x0, #4]
  42f5d8:	cmp	w1, #0x35
  42f5dc:	b.eq	42f644 <nftw@plt+0x2cac4>  // b.none
  42f5e0:	cmp	w22, #0x1
  42f5e4:	b.eq	42f6ac <nftw@plt+0x2cb2c>  // b.none
  42f5e8:	b.le	42f6b8 <nftw@plt+0x2cb38>
  42f5ec:	cmp	w1, #0x26
  42f5f0:	cset	w3, eq  // eq = none
  42f5f4:	cmp	w22, #0x2
  42f5f8:	cset	w2, eq  // eq = none
  42f5fc:	cmp	w2, #0x0
  42f600:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  42f604:	b.ne	42f758 <nftw@plt+0x2cbd8>  // b.any
  42f608:	cbnz	w2, 42f778 <nftw@plt+0x2cbf8>
  42f60c:	cbnz	w3, 42fa5c <nftw@plt+0x2cedc>
  42f610:	ldr	w2, [sp, #100]
  42f614:	cmp	w1, #0x14
  42f618:	b.eq	42f784 <nftw@plt+0x2cc04>  // b.none
  42f61c:	cmp	w1, #0x15
  42f620:	b.ne	42fa68 <nftw@plt+0x2cee8>  // b.any
  42f624:	sub	w22, w22, #0x1
  42f628:	cmp	w22, #0x2
  42f62c:	b.ne	42fa74 <nftw@plt+0x2cef4>  // b.any
  42f630:	cbnz	w2, 42f794 <nftw@plt+0x2cc14>
  42f634:	ldr	w0, [sp, #104]
  42f638:	str	w0, [sp, #100]
  42f63c:	mov	w22, #0x0                   	// #0
  42f640:	b	42f6b8 <nftw@plt+0x2cb38>
  42f644:	ldr	x3, [x0, #8]
  42f648:	ldr	x2, [x19, #1280]
  42f64c:	cmp	x3, x2
  42f650:	b.eq	42f674 <nftw@plt+0x2caf4>  // b.none
  42f654:	cmp	w22, #0x1
  42f658:	b.eq	42f71c <nftw@plt+0x2cb9c>  // b.none
  42f65c:	b.le	42f6b8 <nftw@plt+0x2cb38>
  42f660:	cmp	w1, #0x26
  42f664:	cset	w3, eq  // eq = none
  42f668:	cmp	w22, #0x2
  42f66c:	cset	w2, eq  // eq = none
  42f670:	b	42f608 <nftw@plt+0x2ca88>
  42f674:	cmp	w22, #0x0
  42f678:	b.le	42f69c <nftw@plt+0x2cb1c>
  42f67c:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f680:	add	x3, x3, #0x4b8
  42f684:	ldr	w2, [x0]
  42f688:	mov	w1, #0x3                   	// #3
  42f68c:	mov	x0, x19
  42f690:	bl	41fd68 <nftw@plt+0x1d1e8>
  42f694:	ldp	x27, x28, [sp, #80]
  42f698:	b	42f738 <nftw@plt+0x2cbb8>
  42f69c:	add	w22, w22, #0x1
  42f6a0:	ldr	w0, [x0]
  42f6a4:	str	w0, [sp, #148]
  42f6a8:	b	42f6b8 <nftw@plt+0x2cb38>
  42f6ac:	cmp	w1, #0x14
  42f6b0:	b.ne	42f71c <nftw@plt+0x2cb9c>  // b.any
  42f6b4:	mov	w22, #0x2                   	// #2
  42f6b8:	mov	x0, #0x0                   	// #0
  42f6bc:	cbz	x0, 42f204 <nftw@plt+0x2c684>
  42f6c0:	ldr	w1, [x20, #12]
  42f6c4:	cmp	w1, #0x1
  42f6c8:	b.ls	42f6d8 <nftw@plt+0x2cb58>  // b.plast
  42f6cc:	ldurb	w1, [x0, #-20]
  42f6d0:	cmp	w1, #0x25
  42f6d4:	b.eq	42f3f8 <nftw@plt+0x2c878>  // b.none
  42f6d8:	ldrb	w1, [x0, #4]
  42f6dc:	cmp	w1, #0x16
  42f6e0:	b.eq	42f490 <nftw@plt+0x2c910>  // b.none
  42f6e4:	cmp	w1, #0x26
  42f6e8:	b.ne	42f5cc <nftw@plt+0x2ca4c>  // b.any
  42f6ec:	ldr	w1, [x20, #12]
  42f6f0:	cmp	w1, #0x1
  42f6f4:	b.eq	42f570 <nftw@plt+0x2c9f0>  // b.none
  42f6f8:	cbz	w26, 42f58c <nftw@plt+0x2ca0c>
  42f6fc:	ldr	w2, [sp, #108]
  42f700:	add	w2, w2, #0x1
  42f704:	str	w2, [sp, #108]
  42f708:	sub	w1, w1, #0x1
  42f70c:	str	w1, [x0, #8]
  42f710:	cbz	w27, 42f6b8 <nftw@plt+0x2cb38>
  42f714:	ldrb	w1, [x0, #4]
  42f718:	b	42f5e0 <nftw@plt+0x2ca60>
  42f71c:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f720:	add	x3, x3, #0x4e8
  42f724:	ldr	w2, [sp, #148]
  42f728:	mov	w1, #0x3                   	// #3
  42f72c:	mov	x0, x19
  42f730:	bl	41fd68 <nftw@plt+0x1d1e8>
  42f734:	ldp	x27, x28, [sp, #80]
  42f738:	strb	wzr, [x19, #22]
  42f73c:	ldr	w1, [sp, #160]
  42f740:	mov	x0, x19
  42f744:	bl	42ecc4 <nftw@plt+0x2c144>
  42f748:	mov	x20, #0x0                   	// #0
  42f74c:	ldp	x21, x22, [sp, #32]
  42f750:	ldp	x25, x26, [sp, #64]
  42f754:	b	42edb0 <nftw@plt+0x2c230>
  42f758:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f75c:	add	x3, x3, #0x520
  42f760:	ldr	w2, [x0]
  42f764:	mov	w1, #0x3                   	// #3
  42f768:	mov	x0, x19
  42f76c:	bl	41fd68 <nftw@plt+0x1d1e8>
  42f770:	ldp	x27, x28, [sp, #80]
  42f774:	b	42f738 <nftw@plt+0x2cbb8>
  42f778:	ldr	w2, [sp, #100]
  42f77c:	mov	w22, #0x3                   	// #3
  42f780:	b	42f614 <nftw@plt+0x2ca94>
  42f784:	add	w22, w22, #0x1
  42f788:	ldr	w0, [sp, #104]
  42f78c:	str	w0, [sp, #100]
  42f790:	b	42f6b8 <nftw@plt+0x2cb38>
  42f794:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f798:	add	x3, x3, #0x520
  42f79c:	ldr	w2, [x0]
  42f7a0:	mov	w1, #0x3                   	// #3
  42f7a4:	mov	x0, x19
  42f7a8:	bl	41fd68 <nftw@plt+0x1d1e8>
  42f7ac:	ldp	x27, x28, [sp, #80]
  42f7b0:	b	42f738 <nftw@plt+0x2cbb8>
  42f7b4:	mov	x2, x21
  42f7b8:	add	x1, x19, #0x38
  42f7bc:	mov	x0, x19
  42f7c0:	bl	428330 <nftw@plt+0x257b0>
  42f7c4:	b	42f504 <nftw@plt+0x2c984>
  42f7c8:	ubfiz	x4, x8, #1, #32
  42f7cc:	add	x4, x4, w8, uxtw
  42f7d0:	add	x4, x1, x4, lsl #3
  42f7d4:	ldp	x6, x7, [x2]
  42f7d8:	stp	x6, x7, [x4]
  42f7dc:	ldr	x2, [x2, #16]
  42f7e0:	str	x2, [x4, #16]
  42f7e4:	add	w8, w8, #0x1
  42f7e8:	add	w3, w3, #0x1
  42f7ec:	ldr	w2, [x20, #12]
  42f7f0:	cmp	w2, w3
  42f7f4:	b.eq	42f834 <nftw@plt+0x2ccb4>  // b.none
  42f7f8:	ubfiz	x2, x3, #1, #32
  42f7fc:	add	x2, x2, w3, uxtw
  42f800:	add	x2, x0, x2, lsl #3
  42f804:	ldrb	w4, [x2, #4]
  42f808:	cmp	w4, #0x26
  42f80c:	b.eq	42f7c8 <nftw@plt+0x2cc48>  // b.none
  42f810:	ubfiz	x4, x5, #1, #32
  42f814:	add	x4, x4, w5, uxtw
  42f818:	add	x4, x0, x4, lsl #3
  42f81c:	ldp	x6, x7, [x2]
  42f820:	stp	x6, x7, [x4]
  42f824:	ldr	x2, [x2, #16]
  42f828:	str	x2, [x4, #16]
  42f82c:	add	w5, w5, #0x1
  42f830:	b	42f7e8 <nftw@plt+0x2cc68>
  42f834:	ubfiz	x2, x5, #1, #32
  42f838:	add	x5, x2, w5, uxtw
  42f83c:	mov	x2, x21
  42f840:	add	x0, x0, x5, lsl #3
  42f844:	bl	402490 <memcpy@plt>
  42f848:	ldrb	w0, [x20, #19]
  42f84c:	orr	w0, w0, #0x40
  42f850:	strb	w0, [x20, #19]
  42f854:	strb	wzr, [x19, #22]
  42f858:	ldr	w1, [sp, #160]
  42f85c:	mov	x0, x19
  42f860:	bl	42ecc4 <nftw@plt+0x2c144>
  42f864:	ldp	x21, x22, [sp, #32]
  42f868:	ldp	x25, x26, [sp, #64]
  42f86c:	ldp	x27, x28, [sp, #80]
  42f870:	b	42edb0 <nftw@plt+0x2c230>
  42f874:	mov	x2, #0x0                   	// #0
  42f878:	mov	x1, x23
  42f87c:	mov	x0, x19
  42f880:	bl	42ded4 <nftw@plt+0x2b354>
  42f884:	b	42edc4 <nftw@plt+0x2c244>
  42f888:	ldrb	w0, [x19, #1143]
  42f88c:	cbz	w0, 42f95c <nftw@plt+0x2cddc>
  42f890:	mov	w1, #0xb                   	// #11
  42f894:	b	42f928 <nftw@plt+0x2cda8>
  42f898:	and	w4, w4, #0x3
  42f89c:	cmp	w4, #0x2
  42f8a0:	b.eq	42f8ec <nftw@plt+0x2cd6c>  // b.none
  42f8a4:	ldr	w22, [x21, #12]
  42f8a8:	ldr	w0, [x20, #12]
  42f8ac:	cmp	w22, w0
  42f8b0:	b.ne	42fa0c <nftw@plt+0x2ce8c>  // b.any
  42f8b4:	sub	w22, w22, #0x1
  42f8b8:	cmn	w22, #0x1
  42f8bc:	b.eq	42fa4c <nftw@plt+0x2cecc>  // b.none
  42f8c0:	mov	w0, w22
  42f8c4:	add	x0, x0, #0x1
  42f8c8:	add	x0, x0, x0, lsl #1
  42f8cc:	lsl	x0, x0, #3
  42f8d0:	add	x1, x20, x0
  42f8d4:	add	x0, x21, x0
  42f8d8:	bl	427acc <nftw@plt+0x24f4c>
  42f8dc:	sub	w22, w22, #0x1
  42f8e0:	cbnz	w0, 42f8b8 <nftw@plt+0x2cd38>
  42f8e4:	ldp	x21, x22, [sp, #32]
  42f8e8:	b	42f914 <nftw@plt+0x2cd94>
  42f8ec:	mov	x1, x20
  42f8f0:	mov	x0, x21
  42f8f4:	bl	434958 <nftw@plt+0x31dd8>
  42f8f8:	and	w0, w0, #0xff
  42f8fc:	cbnz	w0, 42f908 <nftw@plt+0x2cd88>
  42f900:	ldp	x21, x22, [sp, #32]
  42f904:	b	42f95c <nftw@plt+0x2cddc>
  42f908:	ldp	x21, x22, [sp, #32]
  42f90c:	b	42f914 <nftw@plt+0x2cd94>
  42f910:	ldp	x21, x22, [sp, #32]
  42f914:	ldrb	w0, [x23, #18]
  42f918:	and	w0, w0, #0x3
  42f91c:	mov	w1, #0x0                   	// #0
  42f920:	cmp	w0, #0x3
  42f924:	b.eq	42fa14 <nftw@plt+0x2ce94>  // b.none
  42f928:	ldr	x5, [x23]
  42f92c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f930:	add	x4, x4, #0x550
  42f934:	mov	w3, #0x0                   	// #0
  42f938:	ldr	w2, [x19, #48]
  42f93c:	mov	x0, x19
  42f940:	bl	41fc70 <nftw@plt+0x1d0f0>
  42f944:	and	w0, w0, #0xff
  42f948:	cbz	w0, 42f95c <nftw@plt+0x2cddc>
  42f94c:	ldrb	w0, [x23, #18]
  42f950:	and	w0, w0, #0x3
  42f954:	cmp	w0, #0x2
  42f958:	b.eq	42fa28 <nftw@plt+0x2cea8>  // b.none
  42f95c:	mov	x0, x23
  42f960:	bl	42eb80 <nftw@plt+0x2c000>
  42f964:	ldrb	w0, [x23, #18]
  42f968:	mov	w1, #0x2                   	// #2
  42f96c:	bfxil	w0, w1, #0, #2
  42f970:	strb	w0, [x23, #18]
  42f974:	str	x20, [x23, #24]
  42f978:	ldr	x19, [x23]
  42f97c:	mov	x2, #0x7                   	// #7
  42f980:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f984:	add	x1, x1, #0x590
  42f988:	mov	x0, x19
  42f98c:	bl	4026a0 <strncmp@plt>
  42f990:	cbnz	w0, 42f9dc <nftw@plt+0x2ce5c>
  42f994:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f998:	add	x1, x1, #0x598
  42f99c:	mov	x0, x19
  42f9a0:	bl	402890 <strcmp@plt>
  42f9a4:	cbz	w0, 42f9dc <nftw@plt+0x2ce5c>
  42f9a8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f9ac:	add	x1, x1, #0x5b0
  42f9b0:	mov	x0, x19
  42f9b4:	bl	402890 <strcmp@plt>
  42f9b8:	cbz	w0, 42f9dc <nftw@plt+0x2ce5c>
  42f9bc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42f9c0:	add	x1, x1, #0x5c8
  42f9c4:	mov	x0, x19
  42f9c8:	bl	402890 <strcmp@plt>
  42f9cc:	cbz	w0, 42f9dc <nftw@plt+0x2ce5c>
  42f9d0:	ldrh	w0, [x23, #18]
  42f9d4:	orr	w0, w0, #0x20
  42f9d8:	strh	w0, [x23, #18]
  42f9dc:	ldrh	w0, [x23, #18]
  42f9e0:	ubfx	x1, x0, #2, #8
  42f9e4:	and	w1, w1, #0xffffffbf
  42f9e8:	bfi	w0, w1, #2, #8
  42f9ec:	strh	w0, [x23, #18]
  42f9f0:	mov	w0, #0x1                   	// #1
  42f9f4:	ldp	x19, x20, [sp, #16]
  42f9f8:	ldp	x23, x24, [sp, #48]
  42f9fc:	ldp	x29, x30, [sp], #240
  42fa00:	ret
  42fa04:	ldp	x21, x22, [sp, #32]
  42fa08:	b	42f914 <nftw@plt+0x2cd94>
  42fa0c:	ldp	x21, x22, [sp, #32]
  42fa10:	b	42f914 <nftw@plt+0x2cd94>
  42fa14:	ldrh	w0, [x23, #18]
  42fa18:	tst	x0, #0x20
  42fa1c:	mov	w1, #0xb                   	// #11
  42fa20:	csel	w1, w1, wzr, eq  // eq = none
  42fa24:	b	42f928 <nftw@plt+0x2cda8>
  42fa28:	ldr	x0, [x23, #24]
  42fa2c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42fa30:	add	x4, x4, #0x560
  42fa34:	mov	w3, #0x0                   	// #0
  42fa38:	ldr	w2, [x0, #8]
  42fa3c:	mov	w1, #0x5                   	// #5
  42fa40:	mov	x0, x19
  42fa44:	bl	41fb7c <nftw@plt+0x1cffc>
  42fa48:	b	42f95c <nftw@plt+0x2cddc>
  42fa4c:	ldp	x21, x22, [sp, #32]
  42fa50:	b	42f95c <nftw@plt+0x2cddc>
  42fa54:	mov	w0, #0x0                   	// #0
  42fa58:	b	42f9f4 <nftw@plt+0x2ce74>
  42fa5c:	mov	w0, #0x1                   	// #1
  42fa60:	str	w0, [sp, #100]
  42fa64:	b	42f6b8 <nftw@plt+0x2cb38>
  42fa68:	ldr	w0, [sp, #104]
  42fa6c:	str	w0, [sp, #100]
  42fa70:	b	42f6b8 <nftw@plt+0x2cb38>
  42fa74:	ldr	w0, [sp, #104]
  42fa78:	str	w0, [sp, #100]
  42fa7c:	b	42f6b8 <nftw@plt+0x2cb38>
  42fa80:	str	x21, [sp, #112]
  42fa84:	b	42fa90 <nftw@plt+0x2cf10>
  42fa88:	str	x21, [sp, #112]
  42fa8c:	mov	x21, x24
  42fa90:	ldr	x0, [sp, #112]
  42fa94:	sub	x1, x21, x0
  42fa98:	str	w1, [sp, #144]
  42fa9c:	ldrh	w28, [x20, #16]
  42faa0:	cbz	w28, 42f280 <nftw@plt+0x2c700>
  42faa4:	ldr	x0, [x20]
  42faa8:	str	x0, [sp, #128]
  42faac:	mov	x25, #0x0                   	// #0
  42fab0:	and	x0, x1, #0xffffffff
  42fab4:	str	x0, [sp, #136]
  42fab8:	b	42f39c <nftw@plt+0x2c81c>
  42fabc:	mov	x21, x24
  42fac0:	str	x21, [sp, #112]
  42fac4:	b	42fa90 <nftw@plt+0x2cf10>
  42fac8:	stp	x27, x28, [sp, #80]
  42facc:	ldr	x0, [x19, #56]
  42fad0:	ldr	x2, [x0, #16]
  42fad4:	ldr	x0, [x0, #24]
  42fad8:	sub	x0, x0, x2
  42fadc:	cmp	x0, #0x2f
  42fae0:	b.ls	42fc0c <nftw@plt+0x2d08c>  // b.plast
  42fae4:	mov	w1, #0x0                   	// #0
  42fae8:	mov	x0, x19
  42faec:	bl	42ed0c <nftw@plt+0x2c18c>
  42faf0:	mov	x20, x0
  42faf4:	add	x0, x20, #0x18
  42faf8:	ldp	x2, x3, [x21]
  42fafc:	stp	x2, x3, [x20, #24]
  42fb00:	ldr	x1, [x21, #16]
  42fb04:	str	x1, [x0, #16]
  42fb08:	mov	w1, #0x1                   	// #1
  42fb0c:	str	w1, [x20, #12]
  42fb10:	str	wzr, [sp, #160]
  42fb14:	ldrb	w27, [x20, #19]
  42fb18:	and	w27, w27, #0x8
  42fb1c:	ldr	w1, [sp, #104]
  42fb20:	str	w1, [sp, #100]
  42fb24:	str	wzr, [sp, #148]
  42fb28:	mov	w22, #0x0                   	// #0
  42fb2c:	str	wzr, [sp, #108]
  42fb30:	mov	w26, #0x0                   	// #0
  42fb34:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  42fb38:	add	x1, x1, #0xe68
  42fb3c:	str	x1, [sp, #120]
  42fb40:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42fb44:	add	x1, x1, #0x3f8
  42fb48:	str	x1, [sp, #168]
  42fb4c:	b	42f6bc <nftw@plt+0x2cb3c>
  42fb50:	stp	x27, x28, [sp, #80]
  42fb54:	ldr	x0, [sp, #160]
  42fb58:	ubfiz	x1, x0, #3, #32
  42fb5c:	mov	x0, x19
  42fb60:	bl	42ae94 <nftw@plt+0x28314>
  42fb64:	mov	x22, x0
  42fb68:	ldr	x0, [x19, #56]
  42fb6c:	ldr	x2, [x0, #16]
  42fb70:	ldr	x0, [x0, #24]
  42fb74:	sub	x0, x0, x2
  42fb78:	cmp	x0, #0x2f
  42fb7c:	b.ls	42fbe0 <nftw@plt+0x2d060>  // b.plast
  42fb80:	mov	w1, #0x0                   	// #0
  42fb84:	mov	x0, x19
  42fb88:	bl	42ed0c <nftw@plt+0x2c18c>
  42fb8c:	mov	x20, x0
  42fb90:	ldrb	w1, [x20, #19]
  42fb94:	bfi	w1, w21, #3, #1
  42fb98:	ldrh	w0, [sp, #160]
  42fb9c:	strh	w0, [x20, #16]
  42fba0:	str	x22, [x20]
  42fba4:	orr	w1, w1, #0x4
  42fba8:	strb	w1, [x20, #19]
  42fbac:	mov	x0, #0x0                   	// #0
  42fbb0:	b	42fb14 <nftw@plt+0x2cf94>
  42fbb4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42fbb8:	add	x0, x0, #0x7f0
  42fbbc:	ldp	x2, x3, [x0, #96]
  42fbc0:	stp	x2, x3, [sp, #200]
  42fbc4:	ldp	x2, x3, [x0, #112]
  42fbc8:	stp	x2, x3, [sp, #216]
  42fbcc:	ldr	x0, [x0, #128]
  42fbd0:	str	x0, [sp, #232]
  42fbd4:	mov	x3, #0x0                   	// #0
  42fbd8:	mov	w21, #0x4                   	// #4
  42fbdc:	b	42ef98 <nftw@plt+0x2c418>
  42fbe0:	mov	x2, #0x30                  	// #48
  42fbe4:	add	x1, x19, #0x38
  42fbe8:	mov	x0, x19
  42fbec:	bl	428330 <nftw@plt+0x257b0>
  42fbf0:	ldr	x0, [x19, #56]
  42fbf4:	ldr	x2, [x0, #16]
  42fbf8:	mov	w1, #0x0                   	// #0
  42fbfc:	mov	x0, x19
  42fc00:	bl	42ed0c <nftw@plt+0x2c18c>
  42fc04:	mov	x20, x0
  42fc08:	b	42fb90 <nftw@plt+0x2d010>
  42fc0c:	mov	x2, #0x30                  	// #48
  42fc10:	add	x1, x19, #0x38
  42fc14:	mov	x0, x19
  42fc18:	bl	428330 <nftw@plt+0x257b0>
  42fc1c:	ldr	x0, [x19, #56]
  42fc20:	ldr	x2, [x0, #16]
  42fc24:	mov	w1, #0x0                   	// #0
  42fc28:	mov	x0, x19
  42fc2c:	bl	42ed0c <nftw@plt+0x2c18c>
  42fc30:	mov	x20, x0
  42fc34:	b	42faf4 <nftw@plt+0x2cf74>
  42fc38:	ldr	x0, [x1, #24]
  42fc3c:	add	w2, w2, #0x1
  42fc40:	strb	w2, [x0, #18]
  42fc44:	ret
  42fc48:	stp	x29, x30, [sp, #-48]!
  42fc4c:	mov	x29, sp
  42fc50:	stp	x19, x20, [sp, #16]
  42fc54:	mov	x20, x0
  42fc58:	mov	x19, x1
  42fc5c:	ldrh	w2, [x1, #18]
  42fc60:	orr	w2, w2, #0x80
  42fc64:	strh	w2, [x1, #18]
  42fc68:	and	w2, w2, #0x3
  42fc6c:	cmp	w2, #0x2
  42fc70:	b.eq	42fc9c <nftw@plt+0x2d11c>  // b.none
  42fc74:	cmp	w2, #0x3
  42fc78:	b.eq	42fcc4 <nftw@plt+0x2d144>  // b.none
  42fc7c:	cbz	w2, 42fcf0 <nftw@plt+0x2d170>
  42fc80:	str	x21, [sp, #32]
  42fc84:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42fc88:	add	x2, x2, #0x5e0
  42fc8c:	mov	w1, #0xe0b                 	// #3595
  42fc90:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  42fc94:	add	x0, x0, #0xf28
  42fc98:	bl	408d8c <nftw@plt+0x620c>
  42fc9c:	str	x21, [sp, #32]
  42fca0:	ldr	x21, [x1, #24]
  42fca4:	ldrb	w2, [x21, #18]
  42fca8:	cbz	w2, 42fce8 <nftw@plt+0x2d168>
  42fcac:	ldr	x3, [x0, #1048]
  42fcb0:	sub	w2, w2, #0x1
  42fcb4:	mov	x1, x21
  42fcb8:	blr	x3
  42fcbc:	strb	wzr, [x21, #18]
  42fcc0:	ldr	x21, [sp, #32]
  42fcc4:	ldr	x3, [x20, #1008]
  42fcc8:	cbz	x3, 42fcdc <nftw@plt+0x2d15c>
  42fccc:	mov	x2, x19
  42fcd0:	ldr	w1, [x20, #48]
  42fcd4:	mov	x0, x20
  42fcd8:	blr	x3
  42fcdc:	ldp	x19, x20, [sp, #16]
  42fce0:	ldp	x29, x30, [sp], #48
  42fce4:	ret
  42fce8:	ldr	x21, [sp, #32]
  42fcec:	b	42fcc4 <nftw@plt+0x2d144>
  42fcf0:	ldr	x3, [x0, #1016]
  42fcf4:	cbz	x3, 42fcdc <nftw@plt+0x2d15c>
  42fcf8:	mov	x2, x1
  42fcfc:	ldr	w1, [x0, #48]
  42fd00:	blr	x3
  42fd04:	b	42fcdc <nftw@plt+0x2d15c>
  42fd08:	stp	x29, x30, [sp, #-288]!
  42fd0c:	mov	x29, sp
  42fd10:	stp	x25, x26, [sp, #64]
  42fd14:	stp	x27, x28, [sp, #80]
  42fd18:	mov	x26, x0
  42fd1c:	mov	x28, x1
  42fd20:	str	x2, [sp, #104]
  42fd24:	str	w3, [sp, #100]
  42fd28:	strb	wzr, [x0, #440]
  42fd2c:	strb	wzr, [x0, #19]
  42fd30:	mov	w0, #0x1                   	// #1
  42fd34:	strb	w0, [x26, #192]
  42fd38:	ldrb	w0, [x1, #18]
  42fd3c:	and	w0, w0, #0x3
  42fd40:	cmp	w0, #0x2
  42fd44:	b.eq	42fd84 <nftw@plt+0x2d204>  // b.none
  42fd48:	strb	wzr, [x26, #192]
  42fd4c:	ldr	x1, [x26, #184]
  42fd50:	ldrb	w0, [x1, #18]
  42fd54:	and	w0, w0, #0x3
  42fd58:	cmp	w0, #0x2
  42fd5c:	b.eq	431104 <nftw@plt+0x2e584>  // b.none
  42fd60:	ldr	w3, [x26, #176]
  42fd64:	ldr	w2, [sp, #100]
  42fd68:	mov	x1, x28
  42fd6c:	mov	x0, x26
  42fd70:	bl	42e570 <nftw@plt+0x2b9f0>
  42fd74:	ldp	x25, x26, [sp, #64]
  42fd78:	ldp	x27, x28, [sp, #80]
  42fd7c:	ldp	x29, x30, [sp], #288
  42fd80:	ret
  42fd84:	stp	x19, x20, [sp, #16]
  42fd88:	stp	x21, x22, [sp, #32]
  42fd8c:	ldr	x0, [x1, #24]
  42fd90:	str	x0, [sp, #112]
  42fd94:	ldrb	w0, [x0, #19]
  42fd98:	mov	x27, #0x0                   	// #0
  42fd9c:	tbnz	w0, #2, 42fe18 <nftw@plt+0x2d298>
  42fda0:	ldrh	w0, [x28, #18]
  42fda4:	ubfx	x1, x0, #2, #8
  42fda8:	orr	w2, w1, #0x10
  42fdac:	bfi	w0, w2, #2, #8
  42fdb0:	strh	w0, [x28, #18]
  42fdb4:	tbz	w1, #5, 430f18 <nftw@plt+0x2e398>
  42fdb8:	ldr	x3, [x26, #1032]
  42fdbc:	cbz	x3, 42fdd0 <nftw@plt+0x2d250>
  42fdc0:	mov	x2, x28
  42fdc4:	ldr	w1, [sp, #100]
  42fdc8:	mov	x0, x26
  42fdcc:	blr	x3
  42fdd0:	ldr	x1, [sp, #112]
  42fdd4:	ldrb	w0, [x1, #19]
  42fdd8:	orr	w0, w0, #0x20
  42fddc:	strb	w0, [x1, #19]
  42fde0:	ldrh	w0, [x1, #16]
  42fde4:	cbnz	w0, 431040 <nftw@plt+0x2e4c0>
  42fde8:	ldrb	w0, [x1, #19]
  42fdec:	tbnz	w0, #6, 430f28 <nftw@plt+0x2e3a8>
  42fdf0:	ldr	w21, [x1, #12]
  42fdf4:	ldrb	w0, [x26, #1157]
  42fdf8:	cbnz	w0, 430f9c <nftw@plt+0x2e41c>
  42fdfc:	mov	w3, w21
  42fe00:	ldr	x0, [sp, #112]
  42fe04:	add	x2, x0, #0x18
  42fe08:	mov	x1, x28
  42fe0c:	mov	x0, x26
  42fe10:	bl	42e500 <nftw@plt+0x2b980>
  42fe14:	b	431030 <nftw@plt+0x2e4b0>
  42fe18:	ldrb	w0, [x26, #24]
  42fe1c:	add	w0, w0, #0x1
  42fe20:	strb	w0, [x26, #24]
  42fe24:	ldr	w0, [x26, #500]
  42fe28:	add	w0, w0, #0x1
  42fe2c:	str	w0, [x26, #500]
  42fe30:	mov	w0, #0x1                   	// #1
  42fe34:	strb	w0, [x26, #25]
  42fe38:	mov	x19, #0x0                   	// #0
  42fe3c:	b	42fe54 <nftw@plt+0x2d2d4>
  42fe40:	mov	x19, x0
  42fe44:	b	42fe54 <nftw@plt+0x2d2d4>
  42fe48:	ldr	x1, [x0, #8]
  42fe4c:	cmp	x1, #0x0
  42fe50:	csel	x19, x19, x0, ne  // ne = any
  42fe54:	mov	x0, x26
  42fe58:	bl	431a1c <nftw@plt+0x2ee9c>
  42fe5c:	ldrb	w1, [x0, #4]
  42fe60:	cmp	w1, #0x53
  42fe64:	b.ne	42fe78 <nftw@plt+0x2d2f8>  // b.any
  42fe68:	cbz	x19, 42fe40 <nftw@plt+0x2d2c0>
  42fe6c:	ldrh	w1, [x19, #6]
  42fe70:	tbnz	w1, #0, 42fe54 <nftw@plt+0x2d2d4>
  42fe74:	b	42fe48 <nftw@plt+0x2d2c8>
  42fe78:	cmp	w1, #0x14
  42fe7c:	b.eq	42ff08 <nftw@plt+0x2d388>  // b.none
  42fe80:	cmp	w1, #0x16
  42fe84:	b.ne	42fe94 <nftw@plt+0x2d314>  // b.any
  42fe88:	add	x1, x26, #0x2b0
  42fe8c:	cmp	x0, x1
  42fe90:	b.ne	42feb8 <nftw@plt+0x2d338>  // b.any
  42fe94:	mov	w1, #0x1                   	// #1
  42fe98:	mov	x0, x26
  42fe9c:	bl	42e8f0 <nftw@plt+0x2bd70>
  42fea0:	cbz	x19, 42feb8 <nftw@plt+0x2d338>
  42fea4:	mov	w3, #0x1                   	// #1
  42fea8:	mov	x2, x19
  42feac:	mov	x1, #0x0                   	// #0
  42feb0:	mov	x0, x26
  42feb4:	bl	42e500 <nftw@plt+0x2b980>
  42feb8:	strb	wzr, [x26, #25]
  42febc:	ldr	w0, [x26, #500]
  42fec0:	sub	w0, w0, #0x1
  42fec4:	str	w0, [x26, #500]
  42fec8:	ldrb	w0, [x26, #24]
  42fecc:	sub	w0, w0, #0x1
  42fed0:	strb	w0, [x26, #24]
  42fed4:	ldrb	w0, [x26, #1138]
  42fed8:	mov	x27, #0x0                   	// #0
  42fedc:	cbz	w0, 430390 <nftw@plt+0x2d810>
  42fee0:	ldr	x0, [x28, #24]
  42fee4:	ldrb	w0, [x0, #19]
  42fee8:	tbnz	w0, #4, 430380 <nftw@plt+0x2d800>
  42feec:	ldr	x3, [x28]
  42fef0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  42fef4:	add	x2, x2, #0x628
  42fef8:	mov	w1, #0x6                   	// #6
  42fefc:	mov	x0, x26
  42ff00:	bl	41fa08 <nftw@plt+0x1ce88>
  42ff04:	b	430380 <nftw@plt+0x2d800>
  42ff08:	stp	x23, x24, [sp, #48]
  42ff0c:	mov	w0, #0x2                   	// #2
  42ff10:	strb	w0, [x26, #25]
  42ff14:	ldrb	w25, [x26, #1157]
  42ff18:	ldr	x0, [x28, #24]
  42ff1c:	str	x0, [sp, #120]
  42ff20:	ldrh	w1, [x0, #16]
  42ff24:	ldrh	w0, [x0, #16]
  42ff28:	cmp	w1, #0x0
  42ff2c:	csinc	w0, w0, wzr, ne  // ne = any
  42ff30:	and	x19, x0, #0xffff
  42ff34:	ubfiz	x0, x0, #3, #16
  42ff38:	sub	x1, x0, x19
  42ff3c:	lsl	x1, x1, #6
  42ff40:	mov	x0, x26
  42ff44:	bl	428168 <nftw@plt+0x255e8>
  42ff48:	mov	x20, x0
  42ff4c:	str	x0, [sp, #136]
  42ff50:	ldr	x21, [x0, #8]
  42ff54:	str	x21, [sp, #152]
  42ff58:	add	x19, x19, x19, lsl #1
  42ff5c:	lsl	x19, x19, #4
  42ff60:	mov	x2, x19
  42ff64:	mov	w1, #0x0                   	// #0
  42ff68:	mov	x0, x21
  42ff6c:	bl	4026f0 <memset@plt>
  42ff70:	add	x19, x21, x19
  42ff74:	str	x19, [x20, #16]
  42ff78:	mov	x22, x20
  42ff7c:	mov	x27, #0x0                   	// #0
  42ff80:	str	wzr, [sp, #128]
  42ff84:	str	x28, [sp, #144]
  42ff88:	b	430214 <nftw@plt+0x2d694>
  42ff8c:	mov	x0, #0xc8                  	// #200
  42ff90:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  42ff94:	str	x0, [x21, #32]
  42ff98:	b	430230 <nftw@plt+0x2d6b0>
  42ff9c:	mov	x2, x28
  42ffa0:	mov	x1, x22
  42ffa4:	mov	x0, x26
  42ffa8:	bl	428210 <nftw@plt+0x25690>
  42ffac:	mov	x22, x0
  42ffb0:	ldr	x0, [x0, #16]
  42ffb4:	str	x0, [x21]
  42ffb8:	b	43001c <nftw@plt+0x2d49c>
  42ffbc:	add	w24, w24, #0x3e8
  42ffc0:	ubfiz	x1, x24, #2, #32
  42ffc4:	ldr	x0, [x21, #32]
  42ffc8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  42ffcc:	str	x0, [x21, #32]
  42ffd0:	b	430028 <nftw@plt+0x2d4a8>
  42ffd4:	cbz	w20, 430000 <nftw@plt+0x2d480>
  42ffd8:	ldrb	w0, [x26, #1157]
  42ffdc:	cmp	w0, #0x0
  42ffe0:	cset	w5, ne  // ne = any
  42ffe4:	mov	w4, #0x0                   	// #0
  42ffe8:	mov	w3, w20
  42ffec:	ldr	w2, [sp, #264]
  42fff0:	mov	x1, x19
  42fff4:	mov	x0, x21
  42fff8:	bl	42db6c <nftw@plt+0x2afec>
  42fffc:	add	w20, w20, #0x1
  430000:	add	w19, w20, #0x2
  430004:	add	w0, w20, #0x2
  430008:	ldr	x1, [x21]
  43000c:	add	x0, x1, x0, lsl #3
  430010:	ldr	x1, [x22, #24]
  430014:	cmp	x1, x0
  430018:	b.cc	42ff9c <nftw@plt+0x2d41c>  // b.lo, b.ul, b.last
  43001c:	cmp	w25, #0x0
  430020:	ccmp	w19, w24, #0x0, ne  // ne = any
  430024:	b.hi	42ffbc <nftw@plt+0x2d43c>  // b.pmore
  430028:	add	x1, sp, #0x108
  43002c:	mov	x0, x26
  430030:	bl	431548 <nftw@plt+0x2e9c8>
  430034:	mov	x19, x0
  430038:	ldrb	w0, [x0, #4]
  43003c:	cmp	w0, #0x53
  430040:	b.eq	42ffd4 <nftw@plt+0x2d454>  // b.none
  430044:	cmp	w0, #0x14
  430048:	b.eq	430094 <nftw@plt+0x2d514>  // b.none
  43004c:	cmp	w0, #0x15
  430050:	b.eq	43009c <nftw@plt+0x2d51c>  // b.none
  430054:	cmp	w0, #0x13
  430058:	b.eq	4300ac <nftw@plt+0x2d52c>  // b.none
  43005c:	cmp	w0, #0x16
  430060:	b.eq	430188 <nftw@plt+0x2d608>  // b.none
  430064:	cmp	w0, #0x25
  430068:	b.eq	4300d0 <nftw@plt+0x2d550>  // b.none
  43006c:	cmp	w0, #0x51
  430070:	b.ne	42ffd8 <nftw@plt+0x2d458>  // b.any
  430074:	mov	x0, x26
  430078:	bl	427474 <nftw@plt+0x248f4>
  43007c:	ldp	x2, x3, [x19]
  430080:	stp	x2, x3, [x0]
  430084:	ldr	x1, [x19, #16]
  430088:	str	x1, [x0, #16]
  43008c:	mov	x19, x0
  430090:	b	430148 <nftw@plt+0x2d5c8>
  430094:	add	w23, w23, #0x1
  430098:	b	42ffd8 <nftw@plt+0x2d458>
  43009c:	sub	w0, w23, #0x1
  4300a0:	cbz	w23, 430188 <nftw@plt+0x2d608>
  4300a4:	mov	w23, w0
  4300a8:	b	42ffd8 <nftw@plt+0x2d458>
  4300ac:	cbnz	w23, 42ffd8 <nftw@plt+0x2d458>
  4300b0:	ldr	x1, [sp, #120]
  4300b4:	ldrb	w0, [x1, #19]
  4300b8:	tbz	w0, #3, 430188 <nftw@plt+0x2d608>
  4300bc:	ldrh	w0, [x1, #16]
  4300c0:	ldr	w1, [sp, #128]
  4300c4:	cmp	w1, w0
  4300c8:	b.eq	42ffd8 <nftw@plt+0x2d458>  // b.none
  4300cc:	b	430188 <nftw@plt+0x2d608>
  4300d0:	ldrh	w0, [x19, #6]
  4300d4:	tbz	w0, #6, 42ffd8 <nftw@plt+0x2d458>
  4300d8:	b	430188 <nftw@plt+0x2d608>
  4300dc:	mov	x1, #0x100                 	// #256
  4300e0:	mov	x0, x26
  4300e4:	bl	428168 <nftw@plt+0x255e8>
  4300e8:	mov	x27, x0
  4300ec:	b	43010c <nftw@plt+0x2d58c>
  4300f0:	ldr	x0, [x27, #8]
  4300f4:	sub	x1, x1, x0
  4300f8:	lsl	x1, x1, #1
  4300fc:	mov	x0, x26
  430100:	bl	428168 <nftw@plt+0x255e8>
  430104:	str	x27, [x0]
  430108:	mov	x27, x0
  43010c:	ldr	x0, [x27, #16]
  430110:	str	x19, [x0]
  430114:	ldr	x0, [x27, #16]
  430118:	add	x0, x0, #0x8
  43011c:	str	x0, [x27, #16]
  430120:	ldrb	w0, [x19, #4]
  430124:	cmp	w0, #0x52
  430128:	b.eq	430164 <nftw@plt+0x2d5e4>  // b.none
  43012c:	add	x1, sp, #0x108
  430130:	mov	x0, x26
  430134:	bl	431548 <nftw@plt+0x2e9c8>
  430138:	mov	x19, x0
  43013c:	ldrb	w0, [x0, #4]
  430140:	cmp	w0, #0x16
  430144:	b.eq	430164 <nftw@plt+0x2d5e4>  // b.none
  430148:	cbz	x27, 4300dc <nftw@plt+0x2d55c>
  43014c:	ldr	x1, [x27, #16]
  430150:	ldr	x0, [x27, #24]
  430154:	sub	x0, x0, x1
  430158:	cmp	x0, #0x7
  43015c:	b.ls	4300f0 <nftw@plt+0x2d570>  // b.plast
  430160:	b	43010c <nftw@plt+0x2d58c>
  430164:	mov	w0, #0x2                   	// #2
  430168:	strb	w0, [x26, #25]
  43016c:	mov	w0, #0x1                   	// #1
  430170:	strb	w0, [x26, #24]
  430174:	ldrb	w0, [x19, #4]
  430178:	cmp	w0, #0x16
  43017c:	b.eq	430188 <nftw@plt+0x2d608>  // b.none
  430180:	b	430000 <nftw@plt+0x2d480>
  430184:	mov	w20, w0
  430188:	cbz	w20, 4301a4 <nftw@plt+0x2d624>
  43018c:	sub	w0, w20, #0x1
  430190:	ldr	x1, [x21]
  430194:	ldr	x1, [x1, w0, uxtw #3]
  430198:	ldrb	w1, [x1, #4]
  43019c:	cmp	w1, #0x53
  4301a0:	b.eq	430184 <nftw@plt+0x2d604>  // b.none
  4301a4:	str	w20, [x21, #24]
  4301a8:	ldrb	w0, [x26, #1157]
  4301ac:	cmp	w0, #0x0
  4301b0:	cset	w5, ne  // ne = any
  4301b4:	mov	w4, #0x0                   	// #0
  4301b8:	mov	w3, w20
  4301bc:	ldr	w2, [x26, #688]
  4301c0:	add	x1, x26, #0x2b0
  4301c4:	mov	x0, x21
  4301c8:	bl	42db6c <nftw@plt+0x2afec>
  4301cc:	ldr	x1, [sp, #120]
  4301d0:	ldrh	w0, [x1, #16]
  4301d4:	ldr	w2, [sp, #128]
  4301d8:	cmp	w2, w0
  4301dc:	b.hi	430200 <nftw@plt+0x2d680>  // b.pmore
  4301e0:	add	w20, w20, #0x1
  4301e4:	ldr	x0, [x21]
  4301e8:	add	x20, x0, x20, lsl #3
  4301ec:	str	x20, [x22, #16]
  4301f0:	ldrh	w1, [x1, #16]
  4301f4:	add	x0, x21, #0x30
  4301f8:	cmp	w2, w1
  4301fc:	csel	x21, x0, x21, ne  // ne = any
  430200:	ldrb	w1, [x19, #4]
  430204:	sub	w0, w1, #0x15
  430208:	and	w0, w0, #0xff
  43020c:	cmp	w0, #0x1
  430210:	b.ls	430244 <nftw@plt+0x2d6c4>  // b.plast
  430214:	ldr	w0, [sp, #128]
  430218:	str	w0, [sp, #132]
  43021c:	add	w0, w0, #0x1
  430220:	str	w0, [sp, #128]
  430224:	ldr	x0, [x22, #16]
  430228:	str	x0, [x21]
  43022c:	cbnz	w25, 42ff8c <nftw@plt+0x2d40c>
  430230:	mov	w24, #0x32                  	// #50
  430234:	mov	w20, #0x0                   	// #0
  430238:	mov	w23, #0x0                   	// #0
  43023c:	mov	x28, #0x1f40                	// #8000
  430240:	b	430000 <nftw@plt+0x2d480>
  430244:	ldr	x28, [sp, #144]
  430248:	cmp	w1, #0x16
  43024c:	b.eq	43031c <nftw@plt+0x2d79c>  // b.none
  430250:	ldr	w0, [sp, #128]
  430254:	mov	w19, w0
  430258:	cmp	w0, #0x1
  43025c:	b.eq	4303b0 <nftw@plt+0x2d830>  // b.none
  430260:	mov	w3, w19
  430264:	mov	x2, x28
  430268:	ldr	x20, [sp, #120]
  43026c:	mov	x1, x20
  430270:	mov	x0, x26
  430274:	bl	42e3e4 <nftw@plt+0x2b864>
  430278:	ands	w0, w0, #0xff
  43027c:	str	w0, [sp, #200]
  430280:	b.eq	43034c <nftw@plt+0x2d7cc>  // b.none
  430284:	ldrb	w0, [x20, #19]
  430288:	tbz	w0, #3, 4302c8 <nftw@plt+0x2d748>
  43028c:	ldrh	w0, [x20, #16]
  430290:	cmp	w19, w0
  430294:	b.cc	4302b4 <nftw@plt+0x2d734>  // b.lo, b.ul, b.last
  430298:	cmp	w19, #0x1
  43029c:	b.ne	4302c8 <nftw@plt+0x2d748>  // b.any
  4302a0:	ldr	x1, [sp, #152]
  4302a4:	ldr	w1, [x1, #24]
  4302a8:	cbnz	w1, 4302c8 <nftw@plt+0x2d748>
  4302ac:	ldrb	w1, [x26, #1153]
  4302b0:	cbnz	w1, 4302c8 <nftw@plt+0x2d748>
  4302b4:	ubfiz	x1, x0, #1, #16
  4302b8:	add	x0, x1, w0, uxth
  4302bc:	ldr	x1, [sp, #152]
  4302c0:	add	x0, x1, x0, lsl #4
  4302c4:	stur	xzr, [x0, #-48]
  4302c8:	strb	wzr, [x26, #25]
  4302cc:	ldr	w0, [x26, #500]
  4302d0:	sub	w0, w0, #0x1
  4302d4:	str	w0, [x26, #500]
  4302d8:	ldrb	w0, [x26, #24]
  4302dc:	sub	w0, w0, #0x1
  4302e0:	strb	w0, [x26, #24]
  4302e4:	ldr	x0, [sp, #112]
  4302e8:	ldrh	w0, [x0, #16]
  4302ec:	cbnz	w0, 4303dc <nftw@plt+0x2d85c>
  4302f0:	ldr	x0, [sp, #136]
  4302f4:	ldr	x0, [x0, #8]
  4302f8:	ldr	w1, [sp, #128]
  4302fc:	cbz	w1, 430f08 <nftw@plt+0x2e388>
  430300:	add	x19, x0, #0x8
  430304:	ldr	w1, [sp, #132]
  430308:	ubfiz	x21, x1, #1, #32
  43030c:	add	x21, x21, w1, uxtw
  430310:	add	x0, x0, #0x38
  430314:	add	x21, x0, x21, lsl #4
  430318:	b	430ed0 <nftw@plt+0x2e350>
  43031c:	ldr	x0, [x26, #136]
  430320:	ldr	x0, [x0, #8]
  430324:	cbz	x0, 4303a4 <nftw@plt+0x2d824>
  430328:	mov	w1, #0x1                   	// #1
  43032c:	mov	x0, x26
  430330:	bl	42e8f0 <nftw@plt+0x2bd70>
  430334:	ldr	x3, [x28]
  430338:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43033c:	add	x2, x2, #0x5f8
  430340:	mov	w1, #0x3                   	// #3
  430344:	mov	x0, x26
  430348:	bl	41f990 <nftw@plt+0x1ce10>
  43034c:	ldr	x1, [sp, #136]
  430350:	mov	x0, x26
  430354:	bl	428148 <nftw@plt+0x255c8>
  430358:	strb	wzr, [x26, #25]
  43035c:	ldr	w0, [x26, #500]
  430360:	sub	w0, w0, #0x1
  430364:	str	w0, [x26, #500]
  430368:	ldrb	w0, [x26, #24]
  43036c:	sub	w0, w0, #0x1
  430370:	strb	w0, [x26, #24]
  430374:	ldrb	w0, [x26, #1138]
  430378:	cbnz	w0, 4303d4 <nftw@plt+0x2d854>
  43037c:	ldp	x23, x24, [sp, #48]
  430380:	cbz	x27, 430390 <nftw@plt+0x2d810>
  430384:	mov	x1, x27
  430388:	mov	x0, x26
  43038c:	bl	428148 <nftw@plt+0x255c8>
  430390:	strb	wzr, [x26, #192]
  430394:	mov	w0, #0x0                   	// #0
  430398:	ldp	x19, x20, [sp, #16]
  43039c:	ldp	x21, x22, [sp, #32]
  4303a0:	b	42fd74 <nftw@plt+0x2d1f4>
  4303a4:	ldrb	w0, [x26, #16]
  4303a8:	cbz	w0, 430334 <nftw@plt+0x2d7b4>
  4303ac:	b	430328 <nftw@plt+0x2d7a8>
  4303b0:	ldr	x0, [sp, #120]
  4303b4:	ldrh	w0, [x0, #16]
  4303b8:	ldr	w19, [sp, #128]
  4303bc:	cbnz	w0, 430260 <nftw@plt+0x2d6e0>
  4303c0:	ldr	x0, [sp, #152]
  4303c4:	ldr	w0, [x0, #24]
  4303c8:	cmp	w0, #0x0
  4303cc:	cset	w19, ne  // ne = any
  4303d0:	b	430260 <nftw@plt+0x2d6e0>
  4303d4:	ldp	x23, x24, [sp, #48]
  4303d8:	b	42fee0 <nftw@plt+0x2d360>
  4303dc:	ldr	x0, [sp, #136]
  4303e0:	ldr	x0, [x0, #8]
  4303e4:	str	x0, [sp, #144]
  4303e8:	str	xzr, [sp, #256]
  4303ec:	ldr	x1, [sp, #112]
  4303f0:	ldrb	w0, [x1, #19]
  4303f4:	tbnz	w0, #6, 430438 <nftw@plt+0x2d8b8>
  4303f8:	ldr	w19, [x1, #12]
  4303fc:	ldr	x0, [sp, #112]
  430400:	add	x25, x0, #0x18
  430404:	str	x25, [sp, #120]
  430408:	ubfiz	x0, x19, #1, #32
  43040c:	add	x0, x0, w19, uxtw
  430410:	add	x24, x25, x0, lsl #3
  430414:	cmp	x25, x24
  430418:	b.cs	430944 <nftw@plt+0x2ddc4>  // b.hs, b.nlast
  43041c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  430420:	add	x0, x0, #0x670
  430424:	str	x0, [sp, #192]
  430428:	str	x27, [sp, #168]
  43042c:	str	x28, [sp, #176]
  430430:	mov	w28, w19
  430434:	b	4306d0 <nftw@plt+0x2db50>
  430438:	ldr	x2, [sp, #112]
  43043c:	ldr	w1, [x2, #12]
  430440:	mov	w19, w1
  430444:	sub	w1, w1, #0x1
  430448:	cbz	w19, 431498 <nftw@plt+0x2e918>
  43044c:	ubfiz	x0, x1, #1, #32
  430450:	add	x0, x0, w1, uxtw
  430454:	add	x0, x2, x0, lsl #3
  430458:	ldrb	w0, [x0, #28]
  43045c:	cmp	w0, #0x26
  430460:	b.eq	430440 <nftw@plt+0x2d8c0>  // b.none
  430464:	b	4303fc <nftw@plt+0x2d87c>
  430468:	mov	x2, #0x3                   	// #3
  43046c:	add	x1, x26, #0x40
  430470:	mov	x0, x26
  430474:	bl	428330 <nftw@plt+0x257b0>
  430478:	b	430730 <nftw@plt+0x2dbb0>
  43047c:	cbz	x27, 430490 <nftw@plt+0x2d910>
  430480:	ldrh	w0, [x27, #6]
  430484:	tbnz	w0, #0, 430564 <nftw@plt+0x2d9e4>
  430488:	ldr	x0, [x22, #8]
  43048c:	cbnz	x0, 430564 <nftw@plt+0x2d9e4>
  430490:	ldr	x27, [x22, #8]
  430494:	b	430564 <nftw@plt+0x2d9e4>
  430498:	bl	42129c <nftw@plt+0x1e71c>
  43049c:	and	w0, w0, #0xff
  4304a0:	cbnz	w0, 4305a4 <nftw@plt+0x2da24>
  4304a4:	ldrb	w0, [x22, #4]
  4304a8:	bl	4212ac <nftw@plt+0x1e72c>
  4304ac:	and	w24, w0, #0xff
  4304b0:	mov	x0, x22
  4304b4:	bl	42763c <nftw@plt+0x24abc>
  4304b8:	mov	w20, w0
  4304bc:	cbnz	w24, 4305b0 <nftw@plt+0x2da30>
  4304c0:	add	x20, x20, #0x3
  4304c4:	ldr	x1, [x26, #64]
  4304c8:	ldr	x0, [x1, #24]
  4304cc:	sub	x0, x0, x19
  4304d0:	cmp	x20, x0
  4304d4:	b.hi	4305bc <nftw@plt+0x2da3c>  // b.pmore
  4304d8:	sub	x0, x19, #0x1
  4304dc:	ldr	x1, [x26, #64]
  4304e0:	ldr	x1, [x1, #16]
  4304e4:	cmp	x1, x0
  4304e8:	b.eq	430504 <nftw@plt+0x2d984>  // b.none
  4304ec:	cmp	x27, #0x0
  4304f0:	csel	x27, x27, x22, ne  // ne = any
  4304f4:	ldrh	w0, [x27, #6]
  4304f8:	tbz	w0, #0, 430504 <nftw@plt+0x2d984>
  4304fc:	mov	w0, #0x20                  	// #32
  430500:	strb	w0, [x19], #1
  430504:	cbz	w24, 4305e4 <nftw@plt+0x2da64>
  430508:	mov	x1, x20
  43050c:	mov	x0, x26
  430510:	bl	428168 <nftw@plt+0x255e8>
  430514:	mov	x20, x0
  430518:	ldr	x24, [x0, #16]
  43051c:	mov	w3, #0x1                   	// #1
  430520:	mov	x2, x24
  430524:	mov	x1, x22
  430528:	mov	x0, x26
  43052c:	bl	427708 <nftw@plt+0x24b88>
  430530:	sub	w2, w0, w24
  430534:	mov	x1, x24
  430538:	mov	x0, x19
  43053c:	bl	42df64 <nftw@plt+0x2b3e4>
  430540:	mov	x19, x0
  430544:	mov	x1, x20
  430548:	mov	x0, x26
  43054c:	bl	428148 <nftw@plt+0x255c8>
  430550:	ldrb	w0, [x22, #4]
  430554:	cmp	w0, #0x3d
  430558:	b.eq	430600 <nftw@plt+0x2da80>  // b.none
  43055c:	ldr	x27, [sp, #152]
  430560:	str	wzr, [sp, #160]
  430564:	add	w23, w23, #0x1
  430568:	ldr	w0, [x21, #24]
  43056c:	cmp	w0, w23
  430570:	b.ls	430630 <nftw@plt+0x2dab0>  // b.plast
  430574:	ldr	x0, [x21]
  430578:	ldr	x22, [x0, w23, uxtw #3]
  43057c:	ldrb	w0, [x22, #4]
  430580:	cmp	w0, #0x53
  430584:	b.eq	43047c <nftw@plt+0x2d8fc>  // b.none
  430588:	sub	w2, w0, #0x38
  43058c:	and	w2, w2, #0xff
  430590:	sub	w1, w0, #0x3e
  430594:	and	w1, w1, #0xff
  430598:	cmp	w2, #0x4
  43059c:	ccmp	w1, #0x4, #0x0, hi  // hi = pmore
  4305a0:	b.hi	430498 <nftw@plt+0x2d918>  // b.pmore
  4305a4:	mov	x0, x22
  4305a8:	bl	42763c <nftw@plt+0x24abc>
  4305ac:	mov	w20, w0
  4305b0:	lsl	x20, x20, #2
  4305b4:	ldr	w24, [sp, #188]
  4305b8:	b	4304c0 <nftw@plt+0x2d940>
  4305bc:	ldr	x0, [x1, #16]
  4305c0:	sub	x19, x19, x0
  4305c4:	mov	x2, x20
  4305c8:	ldr	x1, [sp, #208]
  4305cc:	mov	x0, x26
  4305d0:	bl	428330 <nftw@plt+0x257b0>
  4305d4:	ldr	x0, [x26, #64]
  4305d8:	ldr	x0, [x0, #16]
  4305dc:	add	x19, x0, x19
  4305e0:	b	4304d8 <nftw@plt+0x2d958>
  4305e4:	mov	w3, #0x1                   	// #1
  4305e8:	mov	x2, x19
  4305ec:	mov	x1, x22
  4305f0:	mov	x0, x26
  4305f4:	bl	427708 <nftw@plt+0x24b88>
  4305f8:	mov	x19, x0
  4305fc:	b	430550 <nftw@plt+0x2d9d0>
  430600:	ldr	x0, [x22, #16]
  430604:	ldrb	w0, [x0]
  430608:	cmp	w0, #0x5c
  43060c:	b.eq	43061c <nftw@plt+0x2da9c>  // b.none
  430610:	ldr	x27, [sp, #152]
  430614:	str	wzr, [sp, #160]
  430618:	b	430564 <nftw@plt+0x2d9e4>
  43061c:	ldr	w0, [sp, #160]
  430620:	add	w0, w0, #0x1
  430624:	str	w0, [sp, #160]
  430628:	ldr	x27, [sp, #152]
  43062c:	b	430564 <nftw@plt+0x2d9e4>
  430630:	ldr	x24, [sp, #216]
  430634:	ldr	x0, [sp, #160]
  430638:	tbnz	w0, #0, 430688 <nftw@plt+0x2db08>
  43063c:	add	x20, x19, #0x1
  430640:	mov	x0, x19
  430644:	mov	w1, #0x22                  	// #34
  430648:	strb	w1, [x0], #2
  43064c:	ldr	x1, [x26, #64]
  430650:	ldr	x19, [x1, #16]
  430654:	sub	x20, x20, x19
  430658:	str	x0, [x1, #16]
  43065c:	mov	x0, x26
  430660:	bl	427474 <nftw@plt+0x248f4>
  430664:	strb	wzr, [x19, w20, uxtw]
  430668:	mov	w1, #0x3e                  	// #62
  43066c:	strb	w1, [x0, #4]
  430670:	str	w20, [x0, #8]
  430674:	str	x19, [x0, #16]
  430678:	strh	wzr, [x0, #6]
  43067c:	str	x0, [x21, #16]
  430680:	ldr	w19, [sp, #184]
  430684:	b	4306c4 <nftw@plt+0x2db44>
  430688:	ldr	x2, [sp, #192]
  43068c:	mov	w1, #0x0                   	// #0
  430690:	mov	x0, x26
  430694:	bl	41f990 <nftw@plt+0x1ce10>
  430698:	sub	x19, x19, #0x1
  43069c:	b	43063c <nftw@plt+0x2dabc>
  4306a0:	tbnz	w0, #3, 4306b8 <nftw@plt+0x2db38>
  4306a4:	ldr	x0, [sp, #120]
  4306a8:	cmp	x0, x25
  4306ac:	b.eq	43076c <nftw@plt+0x2dbec>  // b.none
  4306b0:	ldurh	w0, [x25, #-18]
  4306b4:	tbz	w0, #3, 43076c <nftw@plt+0x2dbec>
  4306b8:	add	w19, w19, #0x1
  4306bc:	ldr	w0, [x21, #24]
  4306c0:	add	w19, w19, w0
  4306c4:	add	x25, x25, #0x18
  4306c8:	cmp	x24, x25
  4306cc:	b.ls	4308d4 <nftw@plt+0x2dd54>  // b.plast
  4306d0:	ldrb	w0, [x25, #4]
  4306d4:	cmp	w0, #0x50
  4306d8:	b.ne	4306c4 <nftw@plt+0x2db44>  // b.any
  4306dc:	add	w1, w19, #0x2
  4306e0:	str	w1, [sp, #184]
  4306e4:	add	w28, w28, #0x2
  4306e8:	ldr	w20, [x25, #8]
  4306ec:	sub	w20, w20, #0x1
  4306f0:	add	x20, x20, x20, lsl #1
  4306f4:	lsl	x20, x20, #4
  4306f8:	ldr	x0, [sp, #144]
  4306fc:	add	x21, x0, x20
  430700:	ldrh	w0, [x25, #6]
  430704:	tbz	w0, #2, 4306a0 <nftw@plt+0x2db20>
  430708:	ldr	x0, [x21, #16]
  43070c:	str	x0, [sp, #152]
  430710:	mov	w19, w1
  430714:	cbnz	x0, 4306c4 <nftw@plt+0x2db44>
  430718:	ldr	x1, [x26, #64]
  43071c:	ldr	x0, [x1, #24]
  430720:	ldr	x1, [x1, #16]
  430724:	sub	x0, x0, x1
  430728:	cmp	x0, #0x2
  43072c:	b.ls	430468 <nftw@plt+0x2d8e8>  // b.plast
  430730:	ldr	x0, [x26, #64]
  430734:	ldr	x19, [x0, #16]
  430738:	mov	w0, #0x22                  	// #34
  43073c:	strb	w0, [x19], #1
  430740:	ldr	w0, [x21, #24]
  430744:	cbz	w0, 43063c <nftw@plt+0x2dabc>
  430748:	ldr	x27, [sp, #152]
  43074c:	str	wzr, [sp, #160]
  430750:	mov	w23, #0x0                   	// #0
  430754:	add	x0, x26, #0x40
  430758:	str	x0, [sp, #208]
  43075c:	ldr	w0, [sp, #200]
  430760:	str	w0, [sp, #188]
  430764:	str	x24, [sp, #216]
  430768:	b	430574 <nftw@plt+0x2d9f4>
  43076c:	ldr	x0, [x21, #8]
  430770:	cbz	x0, 430784 <nftw@plt+0x2dc04>
  430774:	add	w19, w19, #0x1
  430778:	ldr	w0, [x21, #28]
  43077c:	add	w19, w19, w0
  430780:	b	4306c4 <nftw@plt+0x2db44>
  430784:	ldr	w0, [x21, #24]
  430788:	cbz	w0, 430774 <nftw@plt+0x2dbf4>
  43078c:	ldrb	w22, [x26, #1157]
  430790:	ldrb	w0, [x26, #1138]
  430794:	cmp	w0, #0x0
  430798:	cset	w23, ne  // ne = any
  43079c:	strb	wzr, [x26, #1138]
  4307a0:	mov	x0, #0x800                 	// #2048
  4307a4:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4307a8:	str	x0, [x21, #8]
  4307ac:	ldrb	w0, [x26, #1157]
  4307b0:	cbnz	w0, 4307e8 <nftw@plt+0x2dc68>
  4307b4:	cbz	w22, 4307f8 <nftw@plt+0x2dc78>
  4307b8:	ldr	w5, [x21, #24]
  4307bc:	add	w5, w5, #0x1
  4307c0:	ldr	x0, [sp, #144]
  4307c4:	ldr	x4, [x0, x20]
  4307c8:	ldr	x3, [x21, #32]
  4307cc:	mov	x2, #0x0                   	// #0
  4307d0:	mov	x1, #0x0                   	// #0
  4307d4:	mov	x0, x26
  4307d8:	bl	42dcc0 <nftw@plt+0x2b140>
  4307dc:	mov	x22, #0x100                 	// #256
  4307e0:	mov	w27, #0x2                   	// #2
  4307e4:	b	430880 <nftw@plt+0x2dd00>
  4307e8:	mov	x0, #0x400                 	// #1024
  4307ec:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4307f0:	str	x0, [x21, #40]
  4307f4:	b	4307b4 <nftw@plt+0x2dc34>
  4307f8:	ldr	x0, [sp, #144]
  4307fc:	ldr	x22, [x0, x20]
  430800:	ldr	w20, [x21, #24]
  430804:	add	w20, w20, #0x1
  430808:	mov	x0, x26
  43080c:	bl	42dc6c <nftw@plt+0x2b0ec>
  430810:	str	wzr, [x0, #48]
  430814:	str	xzr, [x0, #40]
  430818:	str	xzr, [x0, #32]
  43081c:	str	x22, [x0, #16]
  430820:	add	x20, x22, w20, uxtw #3
  430824:	str	x20, [x0, #24]
  430828:	b	4307dc <nftw@plt+0x2dc5c>
  43082c:	lsl	x0, x20, #3
  430830:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  430834:	str	x0, [x21, #40]
  430838:	add	x1, sp, #0x108
  43083c:	mov	x0, x26
  430840:	bl	431548 <nftw@plt+0x2e9c8>
  430844:	mov	x1, x0
  430848:	ldrb	w0, [x0, #4]
  43084c:	cmp	w0, #0x16
  430850:	b.eq	4308c4 <nftw@plt+0x2dd44>  // b.none
  430854:	ldrb	w0, [x26, #1157]
  430858:	cmp	w0, #0x0
  43085c:	cset	w5, ne  // ne = any
  430860:	mov	w4, w27
  430864:	ldr	w3, [x21, #28]
  430868:	ldr	w2, [sp, #264]
  43086c:	mov	x0, x21
  430870:	bl	42db6c <nftw@plt+0x2afec>
  430874:	ldr	w0, [x21, #28]
  430878:	add	w0, w0, #0x1
  43087c:	str	w0, [x21, #28]
  430880:	ldr	w20, [x21, #28]
  430884:	add	w20, w20, #0x1
  430888:	cmp	x20, x22
  43088c:	b.ls	430838 <nftw@plt+0x2dcb8>  // b.plast
  430890:	lsl	x22, x20, #1
  430894:	lsl	x1, x20, #4
  430898:	ldr	x0, [x21, #8]
  43089c:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4308a0:	str	x0, [x21, #8]
  4308a4:	ldrb	w0, [x26, #1157]
  4308a8:	cbz	w0, 430838 <nftw@plt+0x2dcb8>
  4308ac:	ldr	x0, [x21, #40]
  4308b0:	cbz	x0, 43082c <nftw@plt+0x2dcac>
  4308b4:	lsl	x1, x20, #3
  4308b8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4308bc:	str	x0, [x21, #40]
  4308c0:	b	430838 <nftw@plt+0x2dcb8>
  4308c4:	mov	x0, x26
  4308c8:	bl	42e76c <nftw@plt+0x2bbec>
  4308cc:	strb	w23, [x26, #1138]
  4308d0:	b	430774 <nftw@plt+0x2dbf4>
  4308d4:	mov	w20, w28
  4308d8:	ldr	x27, [sp, #168]
  4308dc:	ldr	x28, [sp, #176]
  4308e0:	ldrb	w0, [x26, #1157]
  4308e4:	str	w0, [sp, #192]
  4308e8:	mov	w1, w19
  4308ec:	cbnz	w0, 4313ec <nftw@plt+0x2e86c>
  4308f0:	mov	x2, #0x0                   	// #0
  4308f4:	mov	x0, x26
  4308f8:	bl	42ddec <nftw@plt+0x2b26c>
  4308fc:	mov	x25, x0
  430900:	ldr	x0, [x0, #8]
  430904:	str	x0, [sp, #208]
  430908:	ldr	x1, [sp, #112]
  43090c:	ldrb	w0, [x1, #19]
  430910:	and	w0, w0, #0x8
  430914:	mov	w2, w0
  430918:	ldrh	w0, [x1, #16]
  43091c:	add	x0, x0, x0, lsl #1
  430920:	ldr	x1, [sp, #144]
  430924:	add	x0, x1, x0, lsl #4
  430928:	ldur	w0, [x0, #-24]
  43092c:	str	w0, [sp, #188]
  430930:	ldr	x0, [sp, #120]
  430934:	cmp	x0, x24
  430938:	b.cs	430e8c <nftw@plt+0x2e30c>  // b.hs, b.nlast
  43093c:	str	xzr, [sp, #168]
  430940:	b	431458 <nftw@plt+0x2e8d8>
  430944:	mov	w20, w19
  430948:	b	4308e0 <nftw@plt+0x2dd60>
  43094c:	ldr	x2, [x19, #8]
  430950:	ldr	x1, [x26, #1280]
  430954:	cmp	x2, x1
  430958:	b.eq	43097c <nftw@plt+0x2ddfc>  // b.none
  43095c:	cmp	w22, #0x1
  430960:	b.eq	4309e8 <nftw@plt+0x2de68>  // b.none
  430964:	b.le	4311c8 <nftw@plt+0x2e648>
  430968:	cmp	w0, #0x26
  43096c:	cset	w2, eq  // eq = none
  430970:	cmp	w22, #0x2
  430974:	cset	w1, eq  // eq = none
  430978:	b	431378 <nftw@plt+0x2e7f8>
  43097c:	cmp	w22, #0x0
  430980:	b.le	4309a0 <nftw@plt+0x2de20>
  430984:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  430988:	add	x3, x3, #0x4b8
  43098c:	ldr	w2, [x19]
  430990:	mov	w1, #0x3                   	// #3
  430994:	mov	x0, x26
  430998:	bl	41fd68 <nftw@plt+0x1d1e8>
  43099c:	b	431334 <nftw@plt+0x2e7b4>
  4309a0:	add	w22, w22, #0x1
  4309a4:	ldr	w0, [x19]
  4309a8:	str	w0, [sp, #176]
  4309ac:	ldr	x0, [sp, #120]
  4309b0:	cmp	x19, x0
  4309b4:	b.eq	4309c0 <nftw@plt+0x2de40>  // b.none
  4309b8:	ldurh	w0, [x19, #-18]
  4309bc:	tbz	w0, #3, 430a74 <nftw@plt+0x2def4>
  4309c0:	ldr	x0, [x25, #16]
  4309c4:	ldr	x2, [x25, #8]
  4309c8:	sub	x1, x0, #0x8
  4309cc:	cmp	x0, x2
  4309d0:	csel	x0, x1, xzr, ne  // ne = any
  4309d4:	str	x0, [sp, #160]
  4309d8:	b	431334 <nftw@plt+0x2e7b4>
  4309dc:	mov	w22, #0x2                   	// #2
  4309e0:	cmp	w0, #0x14
  4309e4:	b.eq	431334 <nftw@plt+0x2e7b4>  // b.none
  4309e8:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4309ec:	add	x3, x3, #0x4e8
  4309f0:	ldr	w2, [sp, #176]
  4309f4:	mov	w1, #0x3                   	// #3
  4309f8:	mov	x0, x26
  4309fc:	bl	41fd68 <nftw@plt+0x1d1e8>
  430a00:	mov	w22, #0x1                   	// #1
  430a04:	b	431334 <nftw@plt+0x2e7b4>
  430a08:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  430a0c:	add	x3, x3, #0x520
  430a10:	ldr	w2, [x19]
  430a14:	mov	w1, #0x3                   	// #3
  430a18:	mov	x0, x26
  430a1c:	bl	41fd68 <nftw@plt+0x1d1e8>
  430a20:	mov	w22, #0x2                   	// #2
  430a24:	b	431334 <nftw@plt+0x2e7b4>
  430a28:	ldr	w1, [sp, #184]
  430a2c:	mov	w22, #0x3                   	// #3
  430a30:	b	431384 <nftw@plt+0x2e804>
  430a34:	add	w22, w22, #0x1
  430a38:	str	wzr, [sp, #184]
  430a3c:	b	4314b8 <nftw@plt+0x2e938>
  430a40:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  430a44:	add	x3, x3, #0x520
  430a48:	ldr	w2, [x19]
  430a4c:	mov	w1, #0x3                   	// #3
  430a50:	mov	x0, x26
  430a54:	bl	41fd68 <nftw@plt+0x1d1e8>
  430a58:	mov	w22, #0x0                   	// #0
  430a5c:	str	wzr, [sp, #184]
  430a60:	b	431334 <nftw@plt+0x2e7b4>
  430a64:	ldr	w0, [sp, #188]
  430a68:	cbnz	w0, 4311c4 <nftw@plt+0x2e644>
  430a6c:	str	wzr, [sp, #184]
  430a70:	b	431334 <nftw@plt+0x2e7b4>
  430a74:	mov	x1, x19
  430a78:	mov	x0, x26
  430a7c:	bl	42ddbc <nftw@plt+0x2b23c>
  430a80:	mov	x2, x0
  430a84:	ldrb	w0, [x26, #1157]
  430a88:	ldr	x1, [sp, #120]
  430a8c:	sub	x6, x19, x1
  430a90:	asr	x6, x6, #3
  430a94:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  430a98:	movk	x1, #0xaaab
  430a9c:	mul	x6, x6, x1
  430aa0:	cmp	w0, #0x2
  430aa4:	ldr	w3, [x2]
  430aa8:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  430aac:	ldr	x5, [sp, #168]
  430ab0:	mov	w4, w3
  430ab4:	ldr	x1, [sp, #256]
  430ab8:	mov	x0, x25
  430abc:	bl	42de34 <nftw@plt+0x2b2b4>
  430ac0:	b	4309c0 <nftw@plt+0x2de40>
  430ac4:	ldr	x1, [x25, #16]
  430ac8:	cmp	x2, x1
  430acc:	b.eq	431510 <nftw@plt+0x2e990>  // b.none
  430ad0:	sub	x1, x1, #0x8
  430ad4:	cmp	x3, x1
  430ad8:	b.eq	4313c4 <nftw@plt+0x2e844>  // b.none
  430adc:	ldr	x0, [x1]
  430ae0:	ldrb	w0, [x0, #4]
  430ae4:	cmp	w0, #0x53
  430ae8:	b.ne	431158 <nftw@plt+0x2e5d8>  // b.any
  430aec:	ldr	x0, [x25, #16]
  430af0:	cmp	x0, x2
  430af4:	b.ls	430ac4 <nftw@plt+0x2df44>  // b.plast
  430af8:	sub	x0, x0, #0x8
  430afc:	str	x0, [x25, #16]
  430b00:	b	430ac4 <nftw@plt+0x2df44>
  430b04:	ldrb	w1, [x26, #1157]
  430b08:	cmp	w1, #0x0
  430b0c:	cset	w2, ne  // ne = any
  430b10:	strb	w2, [sp, #264]
  430b14:	mov	w2, #0x1                   	// #1
  430b18:	str	w2, [sp, #268]
  430b1c:	add	x2, x0, #0x10
  430b20:	str	x2, [sp, #272]
  430b24:	str	xzr, [sp, #280]
  430b28:	mov	w21, #0x1                   	// #1
  430b2c:	cbz	w1, 43124c <nftw@plt+0x2e6cc>
  430b30:	mov	w1, w21
  430b34:	bl	42dbb8 <nftw@plt+0x2b038>
  430b38:	str	x0, [sp, #280]
  430b3c:	b	43124c <nftw@plt+0x2e6cc>
  430b40:	ldr	w21, [x0, #24]
  430b44:	ldrb	w2, [x26, #1157]
  430b48:	ldr	x3, [sp, #144]
  430b4c:	ldr	x1, [x3, x1]
  430b50:	cmp	w2, #0x0
  430b54:	cset	w3, ne  // ne = any
  430b58:	strb	w3, [sp, #264]
  430b5c:	str	wzr, [sp, #268]
  430b60:	str	x1, [sp, #272]
  430b64:	str	xzr, [sp, #280]
  430b68:	cbz	w2, 43124c <nftw@plt+0x2e6cc>
  430b6c:	mov	w1, #0x0                   	// #0
  430b70:	bl	42dbb8 <nftw@plt+0x2b038>
  430b74:	str	x0, [sp, #280]
  430b78:	b	43124c <nftw@plt+0x2e6cc>
  430b7c:	ldr	w21, [x0, #24]
  430b80:	ldrb	w2, [x26, #1157]
  430b84:	ldr	x3, [sp, #144]
  430b88:	ldr	x1, [x3, x1]
  430b8c:	cmp	w2, #0x0
  430b90:	cset	w3, ne  // ne = any
  430b94:	strb	w3, [sp, #264]
  430b98:	str	wzr, [sp, #268]
  430b9c:	str	x1, [sp, #272]
  430ba0:	str	xzr, [sp, #280]
  430ba4:	cbnz	w2, 430c0c <nftw@plt+0x2e08c>
  430ba8:	ldr	x0, [x25, #16]
  430bac:	ldr	x1, [x25, #8]
  430bb0:	sub	x2, x0, x1
  430bb4:	str	xzr, [sp, #152]
  430bb8:	tst	x2, #0x7fffffff8
  430bbc:	b.eq	430bf8 <nftw@plt+0x2e078>  // b.none
  430bc0:	sub	x2, x0, #0x8
  430bc4:	cmp	x0, x1
  430bc8:	csel	x2, x2, xzr, ne  // ne = any
  430bcc:	str	x2, [sp, #152]
  430bd0:	ldr	x2, [x2]
  430bd4:	ldrb	w2, [x2, #4]
  430bd8:	cmp	w2, #0x13
  430bdc:	b.eq	430c1c <nftw@plt+0x2e09c>  // b.none
  430be0:	cmp	w21, #0x0
  430be4:	ldr	x1, [sp, #160]
  430be8:	ldr	x0, [sp, #152]
  430bec:	ccmp	x1, x0, #0x4, eq  // eq = none
  430bf0:	csel	x0, x0, xzr, ne  // ne = any
  430bf4:	str	x0, [sp, #152]
  430bf8:	ldrb	w0, [x26, #16]
  430bfc:	cbz	w0, 431270 <nftw@plt+0x2e6f0>
  430c00:	ldrb	w0, [x26, #17]
  430c04:	cbnz	w0, 431270 <nftw@plt+0x2e6f0>
  430c08:	b	43128c <nftw@plt+0x2e70c>
  430c0c:	mov	w1, #0x0                   	// #0
  430c10:	bl	42dbb8 <nftw@plt+0x2b038>
  430c14:	str	x0, [sp, #280]
  430c18:	b	430ba8 <nftw@plt+0x2e028>
  430c1c:	ldr	x3, [sp, #112]
  430c20:	ldrb	w2, [x3, #19]
  430c24:	tbz	w2, #3, 430be0 <nftw@plt+0x2e060>
  430c28:	ldrh	w2, [x3, #16]
  430c2c:	ldr	w3, [x19, #8]
  430c30:	cmp	w3, w2
  430c34:	b.ne	430be0 <nftw@plt+0x2e060>  // b.any
  430c38:	ldr	x2, [sp, #272]
  430c3c:	cbz	x2, 430c48 <nftw@plt+0x2e0c8>
  430c40:	ldr	x2, [x2]
  430c44:	cbnz	x2, 430bf8 <nftw@plt+0x2e078>
  430c48:	cmp	x0, x1
  430c4c:	b.ls	4311bc <nftw@plt+0x2e63c>  // b.plast
  430c50:	sub	x0, x0, #0x8
  430c54:	str	x0, [x25, #16]
  430c58:	str	xzr, [sp, #152]
  430c5c:	b	430bf8 <nftw@plt+0x2e078>
  430c60:	mov	w1, w3
  430c64:	bl	42dbb8 <nftw@plt+0x2b038>
  430c68:	str	x0, [sp, #280]
  430c6c:	b	431238 <nftw@plt+0x2e6b8>
  430c70:	cbz	w21, 43124c <nftw@plt+0x2e6cc>
  430c74:	ldr	x0, [sp, #272]
  430c78:	cbz	x0, 430c80 <nftw@plt+0x2e100>
  430c7c:	ldr	x0, [x0]
  430c80:	ldrb	w0, [x0, #4]
  430c84:	cmp	w0, #0x53
  430c88:	b.ne	43124c <nftw@plt+0x2e6cc>  // b.any
  430c8c:	add	x0, sp, #0x108
  430c90:	bl	42dbe8 <nftw@plt+0x2b068>
  430c94:	subs	w21, w21, #0x1
  430c98:	b.ne	430c74 <nftw@plt+0x2e0f4>  // b.any
  430c9c:	b	43124c <nftw@plt+0x2e6cc>
  430ca0:	mov	x1, x19
  430ca4:	mov	x0, x26
  430ca8:	bl	42ddbc <nftw@plt+0x2b23c>
  430cac:	mov	x2, x0
  430cb0:	ldrb	w0, [x26, #1157]
  430cb4:	ldr	x1, [sp, #120]
  430cb8:	sub	x6, x19, x1
  430cbc:	asr	x6, x6, #3
  430cc0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  430cc4:	movk	x1, #0xaaab
  430cc8:	mul	x6, x6, x1
  430ccc:	cmp	w0, #0x2
  430cd0:	ldr	w3, [x2]
  430cd4:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  430cd8:	ldr	x5, [sp, #168]
  430cdc:	mov	w4, w3
  430ce0:	ldr	x1, [sp, #256]
  430ce4:	mov	x0, x25
  430ce8:	bl	42de34 <nftw@plt+0x2b2b4>
  430cec:	b	43128c <nftw@plt+0x2e70c>
  430cf0:	ldr	x0, [sp, #120]
  430cf4:	sub	x27, x19, x0
  430cf8:	asr	x27, x27, #3
  430cfc:	mov	w0, #0xaaab                	// #43691
  430d00:	movk	w0, #0xaaaa, lsl #16
  430d04:	mul	w27, w27, w0
  430d08:	add	w0, w23, w21
  430d0c:	mov	w20, w23
  430d10:	str	x24, [sp, #232]
  430d14:	ldr	w24, [sp, #192]
  430d18:	str	w22, [sp, #240]
  430d1c:	mov	w22, w0
  430d20:	str	w21, [sp, #244]
  430d24:	ldr	x21, [sp, #168]
  430d28:	b	430d60 <nftw@plt+0x2e1e0>
  430d2c:	mov	x2, x0
  430d30:	b	430d84 <nftw@plt+0x2e204>
  430d34:	ldr	x0, [x0]
  430d38:	ldr	w3, [x0]
  430d3c:	mov	x5, x21
  430d40:	ldr	w4, [x19]
  430d44:	mov	x0, x25
  430d48:	bl	42de34 <nftw@plt+0x2b2b4>
  430d4c:	add	x0, sp, #0x108
  430d50:	bl	42dbe8 <nftw@plt+0x2b068>
  430d54:	add	w20, w20, #0x1
  430d58:	cmp	w20, w22
  430d5c:	b.eq	430d98 <nftw@plt+0x2e218>  // b.none
  430d60:	cmp	w24, #0x1
  430d64:	csel	w6, w20, w23, gt
  430d68:	ldrb	w0, [x26, #1157]
  430d6c:	cmp	w0, #0x1
  430d70:	csel	w6, w6, w27, hi  // hi = pmore
  430d74:	ldr	x1, [sp, #256]
  430d78:	ldr	x0, [sp, #272]
  430d7c:	cbz	x0, 430d2c <nftw@plt+0x2e1ac>
  430d80:	ldr	x2, [x0]
  430d84:	ldrb	w3, [sp, #264]
  430d88:	cbz	w3, 430d34 <nftw@plt+0x2e1b4>
  430d8c:	ldr	x0, [sp, #280]
  430d90:	ldr	w3, [x0]
  430d94:	b	430d3c <nftw@plt+0x2e1bc>
  430d98:	ldr	x24, [sp, #232]
  430d9c:	ldr	w22, [sp, #240]
  430da0:	ldr	w21, [sp, #244]
  430da4:	ldrh	w0, [x19, #6]
  430da8:	tbz	w0, #3, 43117c <nftw@plt+0x2e5fc>
  430dac:	ldr	x0, [x25, #16]
  430db0:	ldr	x1, [x25, #8]
  430db4:	cmp	x0, x1
  430db8:	b.eq	431330 <nftw@plt+0x2e7b0>  // b.none
  430dbc:	sub	x0, x0, #0x8
  430dc0:	str	x0, [sp, #152]
  430dc4:	b	431320 <nftw@plt+0x2e7a0>
  430dc8:	ldrb	w0, [x26, #1120]
  430dcc:	cbnz	w0, 430e00 <nftw@plt+0x2e280>
  430dd0:	ldrsb	w0, [x26, #1198]
  430dd4:	cbz	w0, 431308 <nftw@plt+0x2e788>
  430dd8:	cmp	w0, #0x0
  430ddc:	cset	w1, gt
  430de0:	ldr	w4, [x19, #8]
  430de4:	ldr	x0, [sp, #200]
  430de8:	ldr	x3, [x0]
  430dec:	ldr	x2, [sp, #224]
  430df0:	add	w1, w1, #0x15
  430df4:	mov	x0, x26
  430df8:	bl	41fa84 <nftw@plt+0x1cf04>
  430dfc:	b	431308 <nftw@plt+0x2e788>
  430e00:	ldr	w4, [x19, #8]
  430e04:	ldr	x0, [sp, #200]
  430e08:	ldr	x3, [x0]
  430e0c:	ldr	x2, [sp, #248]
  430e10:	mov	w1, #0x15                  	// #21
  430e14:	mov	x0, x26
  430e18:	bl	41fa84 <nftw@plt+0x1cf04>
  430e1c:	b	431308 <nftw@plt+0x2e788>
  430e20:	mov	w22, #0x0                   	// #0
  430e24:	str	wzr, [sp, #184]
  430e28:	str	xzr, [sp, #160]
  430e2c:	b	431334 <nftw@plt+0x2e7b4>
  430e30:	ldr	x27, [sp, #216]
  430e34:	ldr	x28, [sp, #200]
  430e38:	ldr	w0, [sp, #192]
  430e3c:	cbz	w0, 430e8c <nftw@plt+0x2e30c>
  430e40:	ldr	x5, [x25, #16]
  430e44:	ldr	x0, [x25, #8]
  430e48:	sub	x5, x5, x0
  430e4c:	ubfx	x5, x5, #3, #32
  430e50:	ldr	x4, [sp, #208]
  430e54:	ldr	x3, [sp, #256]
  430e58:	mov	x2, x25
  430e5c:	mov	x1, x28
  430e60:	mov	x0, x26
  430e64:	bl	42dcc0 <nftw@plt+0x2b140>
  430e68:	adrp	x2, 48e000 <__environ@@GLIBC_2.17+0xa68>
  430e6c:	ldr	x0, [x25, #16]
  430e70:	ldr	x1, [x25, #8]
  430e74:	sub	x0, x0, x1
  430e78:	lsr	x0, x0, #3
  430e7c:	ldr	w1, [x2, #2408]
  430e80:	add	w0, w1, w0
  430e84:	str	w0, [x2, #2408]
  430e88:	b	4302f0 <nftw@plt+0x2d770>
  430e8c:	ldr	x19, [x25, #16]
  430e90:	ldr	x0, [x25, #8]
  430e94:	sub	x19, x19, x0
  430e98:	lsr	x19, x19, #3
  430e9c:	mov	x0, x26
  430ea0:	bl	42dc6c <nftw@plt+0x2b0ec>
  430ea4:	str	wzr, [x0, #48]
  430ea8:	str	x28, [x0, #40]
  430eac:	str	x25, [x0, #32]
  430eb0:	ldr	x1, [sp, #208]
  430eb4:	str	x1, [x0, #16]
  430eb8:	add	x19, x1, w19, uxtw #3
  430ebc:	str	x19, [x0, #24]
  430ec0:	b	430e68 <nftw@plt+0x2e2e8>
  430ec4:	add	x19, x19, #0x30
  430ec8:	cmp	x21, x19
  430ecc:	b.eq	430f08 <nftw@plt+0x2e388>  // b.none
  430ed0:	mov	x20, x19
  430ed4:	ldr	x0, [x19]
  430ed8:	cbz	x0, 430ee4 <nftw@plt+0x2e364>
  430edc:	bl	402910 <free@plt>
  430ee0:	str	xzr, [x19]
  430ee4:	ldr	x0, [x20, #24]
  430ee8:	cbz	x0, 430ef4 <nftw@plt+0x2e374>
  430eec:	bl	402910 <free@plt>
  430ef0:	str	xzr, [x20, #24]
  430ef4:	ldr	x0, [x20, #32]
  430ef8:	cbz	x0, 430ec4 <nftw@plt+0x2e344>
  430efc:	bl	402910 <free@plt>
  430f00:	str	xzr, [x20, #32]
  430f04:	b	430ec4 <nftw@plt+0x2e344>
  430f08:	ldr	x0, [sp, #136]
  430f0c:	bl	42838c <nftw@plt+0x2580c>
  430f10:	ldp	x23, x24, [sp, #48]
  430f14:	b	42fda0 <nftw@plt+0x2d220>
  430f18:	mov	x1, x28
  430f1c:	mov	x0, x26
  430f20:	bl	42fc48 <nftw@plt+0x2d0c8>
  430f24:	b	42fdb8 <nftw@plt+0x2d238>
  430f28:	ldr	x2, [sp, #112]
  430f2c:	ldr	w1, [x2, #12]
  430f30:	mov	w21, w1
  430f34:	sub	w1, w1, #0x1
  430f38:	cbz	w21, 431120 <nftw@plt+0x2e5a0>
  430f3c:	ubfiz	x0, x1, #1, #32
  430f40:	add	x0, x0, w1, uxtw
  430f44:	add	x0, x2, x0, lsl #3
  430f48:	ldrb	w0, [x0, #28]
  430f4c:	cmp	w0, #0x26
  430f50:	b.eq	430f30 <nftw@plt+0x2e3b0>  // b.none
  430f54:	ldrb	w0, [x26, #1157]
  430f58:	cbz	w0, 42fdfc <nftw@plt+0x2d27c>
  430f5c:	stp	x23, x24, [sp, #48]
  430f60:	ldr	x0, [sp, #112]
  430f64:	add	x19, x0, #0x18
  430f68:	str	xzr, [sp, #264]
  430f6c:	add	x2, sp, #0x108
  430f70:	mov	w1, w21
  430f74:	mov	x0, x26
  430f78:	bl	42ddec <nftw@plt+0x2b26c>
  430f7c:	mov	x22, x0
  430f80:	mov	w3, w21
  430f84:	ldr	w2, [sp, #100]
  430f88:	mov	x1, x28
  430f8c:	ldr	x0, [x26, #40]
  430f90:	bl	42b66c <nftw@plt+0x28aec>
  430f94:	mov	x23, x0
  430f98:	b	430fdc <nftw@plt+0x2e45c>
  430f9c:	stp	x23, x24, [sp, #48]
  430fa0:	ldr	x0, [sp, #112]
  430fa4:	add	x19, x0, #0x18
  430fa8:	str	xzr, [sp, #264]
  430fac:	add	x2, sp, #0x108
  430fb0:	mov	w1, w21
  430fb4:	mov	x0, x26
  430fb8:	bl	42ddec <nftw@plt+0x2b26c>
  430fbc:	mov	x22, x0
  430fc0:	mov	w3, w21
  430fc4:	ldr	w2, [sp, #100]
  430fc8:	mov	x1, x28
  430fcc:	ldr	x0, [x26, #40]
  430fd0:	bl	42b66c <nftw@plt+0x28aec>
  430fd4:	mov	x23, x0
  430fd8:	cbz	w21, 431058 <nftw@plt+0x2e4d8>
  430fdc:	mov	w20, #0x0                   	// #0
  430fe0:	ldr	w3, [x19]
  430fe4:	mov	w6, w20
  430fe8:	mov	x5, x23
  430fec:	mov	w4, w3
  430ff0:	mov	x2, x19
  430ff4:	ldr	x1, [sp, #264]
  430ff8:	mov	x0, x22
  430ffc:	bl	42de34 <nftw@plt+0x2b2b4>
  431000:	add	x19, x19, #0x18
  431004:	add	w20, w20, #0x1
  431008:	cmp	w20, w21
  43100c:	b.cc	430fe0 <nftw@plt+0x2e460>  // b.lo, b.ul, b.last
  431010:	ldp	x23, x24, [sp, #48]
  431014:	mov	w5, w21
  431018:	ldr	x4, [x22, #8]
  43101c:	ldr	x3, [sp, #264]
  431020:	mov	x2, x22
  431024:	mov	x1, x28
  431028:	mov	x0, x26
  43102c:	bl	42dcc0 <nftw@plt+0x2b140>
  431030:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  431034:	ldr	w0, [x1, #2408]
  431038:	add	w21, w0, w21
  43103c:	str	w21, [x1, #2408]
  431040:	cbz	x27, 4310f0 <nftw@plt+0x2e570>
  431044:	ldrb	w0, [x26, #16]
  431048:	cbz	w0, 431060 <nftw@plt+0x2e4e0>
  43104c:	adrp	x22, 48e000 <__environ@@GLIBC_2.17+0xa68>
  431050:	add	x22, x22, #0x968
  431054:	b	431094 <nftw@plt+0x2e514>
  431058:	ldp	x23, x24, [sp, #48]
  43105c:	b	431014 <nftw@plt+0x2e494>
  431060:	ldr	x1, [sp, #104]
  431064:	mov	x0, x26
  431068:	bl	42ddbc <nftw@plt+0x2b23c>
  43106c:	mov	w3, #0x1                   	// #1
  431070:	mov	x2, x0
  431074:	mov	x1, #0x0                   	// #0
  431078:	mov	x0, x26
  43107c:	bl	42e500 <nftw@plt+0x2b980>
  431080:	b	43104c <nftw@plt+0x2e4cc>
  431084:	ldr	w0, [x22]
  431088:	add	w19, w0, w19
  43108c:	str	w19, [x22]
  431090:	cbz	x27, 4310dc <nftw@plt+0x2e55c>
  431094:	mov	x21, x27
  431098:	ldr	x27, [x27]
  43109c:	str	xzr, [x21]
  4310a0:	ldr	x20, [x21, #8]
  4310a4:	ldr	x19, [x21, #16]
  4310a8:	sub	x19, x19, x20
  4310ac:	asr	x19, x19, #3
  4310b0:	mov	x0, x26
  4310b4:	bl	42dc6c <nftw@plt+0x2b0ec>
  4310b8:	str	wzr, [x0, #48]
  4310bc:	str	xzr, [x0, #40]
  4310c0:	str	x21, [x0, #32]
  4310c4:	str	x20, [x0, #16]
  4310c8:	add	x20, x20, w19, uxtw #3
  4310cc:	str	x20, [x0, #24]
  4310d0:	ldrb	w0, [x26, #1157]
  4310d4:	cbnz	w0, 431090 <nftw@plt+0x2e510>
  4310d8:	b	431084 <nftw@plt+0x2e504>
  4310dc:	strb	wzr, [x26, #192]
  4310e0:	mov	w0, #0x2                   	// #2
  4310e4:	ldp	x19, x20, [sp, #16]
  4310e8:	ldp	x21, x22, [sp, #32]
  4310ec:	b	42fd74 <nftw@plt+0x2d1f4>
  4310f0:	strb	wzr, [x26, #192]
  4310f4:	mov	w0, #0x1                   	// #1
  4310f8:	ldp	x19, x20, [sp, #16]
  4310fc:	ldp	x21, x22, [sp, #32]
  431100:	b	42fd74 <nftw@plt+0x2d1f4>
  431104:	ldr	x0, [x1, #24]
  431108:	ldrb	w0, [x0, #19]
  43110c:	tbz	w0, #2, 42fd60 <nftw@plt+0x2d1e0>
  431110:	ldrb	w0, [x26, #1157]
  431114:	ldr	w3, [sp, #100]
  431118:	cbnz	w0, 42fd64 <nftw@plt+0x2d1e4>
  43111c:	b	42fd60 <nftw@plt+0x2d1e0>
  431120:	ldrb	w0, [x26, #1157]
  431124:	cbz	w0, 42fdfc <nftw@plt+0x2d27c>
  431128:	str	xzr, [sp, #264]
  43112c:	add	x2, sp, #0x108
  431130:	mov	x1, #0x0                   	// #0
  431134:	mov	x0, x26
  431138:	bl	42ddec <nftw@plt+0x2b26c>
  43113c:	mov	x22, x0
  431140:	mov	w3, #0x0                   	// #0
  431144:	ldr	w2, [sp, #100]
  431148:	mov	x1, x28
  43114c:	ldr	x0, [x26, #40]
  431150:	bl	42b66c <nftw@plt+0x28aec>
  431154:	b	431014 <nftw@plt+0x2e494>
  431158:	ldrh	w0, [x19, #6]
  43115c:	tbz	w0, #3, 431518 <nftw@plt+0x2e998>
  431160:	mov	x2, x19
  431164:	mov	x0, x26
  431168:	bl	42dd50 <nftw@plt+0x2b1d0>
  43116c:	mov	w22, #0x0                   	// #0
  431170:	str	wzr, [sp, #184]
  431174:	str	xzr, [sp, #160]
  431178:	b	431334 <nftw@plt+0x2e7b4>
  43117c:	ldrb	w0, [x26, #16]
  431180:	cbnz	w0, 431318 <nftw@plt+0x2e798>
  431184:	ldr	x1, [sp, #160]
  431188:	mov	x0, x25
  43118c:	bl	42dc1c <nftw@plt+0x2b09c>
  431190:	and	w0, w0, #0xff
  431194:	cbnz	w0, 431318 <nftw@plt+0x2e798>
  431198:	ldr	w3, [x26, #664]
  43119c:	mov	w6, #0x0                   	// #0
  4311a0:	mov	x5, #0x0                   	// #0
  4311a4:	mov	w4, w3
  4311a8:	add	x2, x26, #0x298
  4311ac:	ldr	x1, [sp, #256]
  4311b0:	mov	x0, x25
  4311b4:	bl	42de34 <nftw@plt+0x2b2b4>
  4311b8:	b	431318 <nftw@plt+0x2e798>
  4311bc:	str	xzr, [sp, #152]
  4311c0:	b	430bf8 <nftw@plt+0x2e078>
  4311c4:	str	wzr, [sp, #184]
  4311c8:	ldrb	w0, [x19, #4]
  4311cc:	cmp	w0, #0x50
  4311d0:	b.ne	4314c0 <nftw@plt+0x2e940>  // b.any
  4311d4:	ldr	w0, [x19, #8]
  4311d8:	sub	w0, w0, #0x1
  4311dc:	add	x0, x0, x0, lsl #1
  4311e0:	lsl	x1, x0, #4
  4311e4:	ldr	x0, [sp, #144]
  4311e8:	add	x0, x0, x1
  4311ec:	ldrh	w2, [x19, #6]
  4311f0:	tbnz	w2, #2, 430b04 <nftw@plt+0x2df84>
  4311f4:	tbnz	w2, #3, 430b40 <nftw@plt+0x2dfc0>
  4311f8:	ldr	x2, [sp, #120]
  4311fc:	cmp	x19, x2
  431200:	b.eq	43120c <nftw@plt+0x2e68c>  // b.none
  431204:	ldurh	w2, [x19, #-18]
  431208:	tbnz	w2, #3, 430b7c <nftw@plt+0x2dffc>
  43120c:	ldr	w21, [x0, #28]
  431210:	ldrb	w1, [x26, #1157]
  431214:	ldr	x2, [x0, #8]
  431218:	cmp	w1, #0x0
  43121c:	cset	w3, ne  // ne = any
  431220:	strb	w3, [sp, #264]
  431224:	mov	w3, #0x2                   	// #2
  431228:	str	w3, [sp, #268]
  43122c:	str	x2, [sp, #272]
  431230:	str	xzr, [sp, #280]
  431234:	cbnz	w1, 430c60 <nftw@plt+0x2e0e0>
  431238:	ldr	x1, [sp, #160]
  43123c:	mov	x0, x25
  431240:	bl	42dc1c <nftw@plt+0x2b09c>
  431244:	and	w0, w0, #0xff
  431248:	cbnz	w0, 430c70 <nftw@plt+0x2e0f0>
  43124c:	ldrb	w0, [x26, #16]
  431250:	cbz	w0, 431260 <nftw@plt+0x2e6e0>
  431254:	ldrb	w0, [x26, #17]
  431258:	str	xzr, [sp, #152]
  43125c:	cbz	w0, 43128c <nftw@plt+0x2e70c>
  431260:	str	xzr, [sp, #152]
  431264:	ldr	x0, [sp, #120]
  431268:	cmp	x19, x0
  43126c:	b.eq	43128c <nftw@plt+0x2e70c>  // b.none
  431270:	ldurh	w0, [x19, #-18]
  431274:	tbnz	w0, #3, 43128c <nftw@plt+0x2e70c>
  431278:	ldr	x1, [sp, #160]
  43127c:	mov	x0, x25
  431280:	bl	42dc1c <nftw@plt+0x2b09c>
  431284:	and	w0, w0, #0xff
  431288:	cbz	w0, 430ca0 <nftw@plt+0x2e120>
  43128c:	cbnz	w21, 430cf0 <nftw@plt+0x2e170>
  431290:	ldrb	w0, [x26, #1154]
  431294:	cbz	w0, 4312bc <nftw@plt+0x2e73c>
  431298:	ldrb	w0, [x26, #1152]
  43129c:	cbnz	w0, 4312bc <nftw@plt+0x2e73c>
  4312a0:	ldr	x0, [sp, #112]
  4312a4:	ldrb	w0, [x0, #19]
  4312a8:	tbnz	w0, #4, 4312bc <nftw@plt+0x2e73c>
  4312ac:	ldr	x0, [x26]
  4312b0:	cbz	x0, 430dc8 <nftw@plt+0x2e248>
  4312b4:	ldrb	w0, [x0, #106]
  4312b8:	cbz	w0, 430dc8 <nftw@plt+0x2e248>
  4312bc:	ldrsb	w0, [x26, #1198]
  4312c0:	cmp	w0, #0x0
  4312c4:	b.le	431308 <nftw@plt+0x2e788>
  4312c8:	ldrb	w0, [x26, #1120]
  4312cc:	cbnz	w0, 431308 <nftw@plt+0x2e788>
  4312d0:	ldr	x0, [sp, #112]
  4312d4:	ldrb	w0, [x0, #19]
  4312d8:	tbnz	w0, #4, 431308 <nftw@plt+0x2e788>
  4312dc:	ldr	x0, [x26]
  4312e0:	cbz	x0, 4312ec <nftw@plt+0x2e76c>
  4312e4:	ldrb	w0, [x0, #106]
  4312e8:	cbnz	w0, 431308 <nftw@plt+0x2e788>
  4312ec:	ldr	w4, [x19, #8]
  4312f0:	ldr	x0, [sp, #200]
  4312f4:	ldr	x3, [x0]
  4312f8:	ldr	x2, [sp, #224]
  4312fc:	mov	w1, #0x16                  	// #22
  431300:	mov	x0, x26
  431304:	bl	41fa08 <nftw@plt+0x1ce88>
  431308:	ldrb	w0, [x26, #16]
  43130c:	cbnz	w0, 431318 <nftw@plt+0x2e798>
  431310:	ldrh	w0, [x19, #6]
  431314:	tbz	w0, #3, 431184 <nftw@plt+0x2e604>
  431318:	ldr	x0, [sp, #152]
  43131c:	cbz	x0, 431330 <nftw@plt+0x2e7b0>
  431320:	mov	x2, x19
  431324:	ldr	x1, [sp, #152]
  431328:	mov	x0, x26
  43132c:	bl	42dd50 <nftw@plt+0x2b1d0>
  431330:	add	w23, w23, w21
  431334:	add	x19, x19, #0x18
  431338:	cmp	x19, x24
  43133c:	b.cs	430e30 <nftw@plt+0x2e2b0>  // b.hs, b.nlast
  431340:	cbz	w28, 4311c8 <nftw@plt+0x2e648>
  431344:	ldrb	w0, [x19, #4]
  431348:	cmp	w0, #0x35
  43134c:	b.eq	43094c <nftw@plt+0x2ddcc>  // b.none
  431350:	cmp	w22, #0x1
  431354:	b.eq	4309dc <nftw@plt+0x2de5c>  // b.none
  431358:	b.le	4311c8 <nftw@plt+0x2e648>
  43135c:	cmp	w0, #0x26
  431360:	cset	w2, eq  // eq = none
  431364:	cmp	w22, #0x2
  431368:	cset	w1, eq  // eq = none
  43136c:	cmp	w1, #0x0
  431370:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  431374:	b.ne	430a08 <nftw@plt+0x2de88>  // b.any
  431378:	cbnz	w1, 430a28 <nftw@plt+0x2dea8>
  43137c:	cbnz	w2, 4314b0 <nftw@plt+0x2e930>
  431380:	ldr	w1, [sp, #184]
  431384:	cmp	w0, #0x14
  431388:	b.eq	430a34 <nftw@plt+0x2deb4>  // b.none
  43138c:	cmp	w0, #0x15
  431390:	b.ne	430a64 <nftw@plt+0x2dee4>  // b.any
  431394:	sub	w22, w22, #0x1
  431398:	cmp	w22, #0x2
  43139c:	b.ne	431508 <nftw@plt+0x2e988>  // b.any
  4313a0:	cbnz	w1, 430a40 <nftw@plt+0x2dec0>
  4313a4:	ldr	x1, [x25, #16]
  4313a8:	ldr	x2, [x25, #8]
  4313ac:	cmp	x1, x2
  4313b0:	b.eq	431510 <nftw@plt+0x2e990>  // b.none
  4313b4:	sub	x1, x1, #0x8
  4313b8:	ldr	x3, [sp, #160]
  4313bc:	cmp	x3, x1
  4313c0:	b.ne	430adc <nftw@plt+0x2df5c>  // b.any
  4313c4:	ldrh	w0, [x19, #6]
  4313c8:	tbz	w0, #3, 431518 <nftw@plt+0x2e998>
  4313cc:	ldr	x0, [x1]
  4313d0:	ldrb	w0, [x0, #4]
  4313d4:	cmp	w0, #0x53
  4313d8:	b.ne	431160 <nftw@plt+0x2e5e0>  // b.any
  4313dc:	mov	w22, #0x0                   	// #0
  4313e0:	str	wzr, [sp, #184]
  4313e4:	str	xzr, [sp, #160]
  4313e8:	b	431334 <nftw@plt+0x2e7b4>
  4313ec:	add	x2, sp, #0x100
  4313f0:	mov	x0, x26
  4313f4:	bl	42ddec <nftw@plt+0x2b26c>
  4313f8:	mov	x25, x0
  4313fc:	ldr	x0, [x0, #8]
  431400:	str	x0, [sp, #208]
  431404:	ldr	w0, [sp, #192]
  431408:	cmp	w0, #0x1
  43140c:	csel	w3, w19, w20, gt
  431410:	ldr	w2, [sp, #100]
  431414:	mov	x1, x28
  431418:	ldr	x0, [x26, #40]
  43141c:	bl	42b66c <nftw@plt+0x28aec>
  431420:	str	x0, [sp, #168]
  431424:	ldr	x1, [sp, #112]
  431428:	ldrb	w0, [x1, #19]
  43142c:	and	w0, w0, #0x8
  431430:	mov	w2, w0
  431434:	ldrh	w0, [x1, #16]
  431438:	add	x0, x0, x0, lsl #1
  43143c:	ldr	x1, [sp, #144]
  431440:	add	x0, x1, x0, lsl #4
  431444:	ldur	w0, [x0, #-24]
  431448:	str	w0, [sp, #188]
  43144c:	ldr	x0, [sp, #120]
  431450:	cmp	x0, x24
  431454:	b.cs	430e40 <nftw@plt+0x2e2c0>  // b.hs, b.nlast
  431458:	ldr	x19, [sp, #120]
  43145c:	str	wzr, [sp, #176]
  431460:	mov	w22, #0x0                   	// #0
  431464:	str	wzr, [sp, #184]
  431468:	mov	w23, #0x0                   	// #0
  43146c:	str	xzr, [sp, #160]
  431470:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  431474:	add	x0, x0, #0x6f0
  431478:	str	x0, [sp, #224]
  43147c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  431480:	add	x0, x0, #0x6a0
  431484:	str	x0, [sp, #248]
  431488:	str	x27, [sp, #216]
  43148c:	str	x28, [sp, #200]
  431490:	mov	w28, w2
  431494:	b	431340 <nftw@plt+0x2e7c0>
  431498:	ldr	x0, [sp, #112]
  43149c:	add	x0, x0, #0x18
  4314a0:	str	x0, [sp, #120]
  4314a4:	mov	x24, x0
  4314a8:	mov	w20, w19
  4314ac:	b	4308e0 <nftw@plt+0x2dd60>
  4314b0:	mov	w0, #0x1                   	// #1
  4314b4:	str	w0, [sp, #184]
  4314b8:	ldr	w0, [sp, #188]
  4314bc:	cbz	w0, 431334 <nftw@plt+0x2e7b4>
  4314c0:	ldrb	w0, [x26, #1157]
  4314c4:	ldr	x1, [sp, #120]
  4314c8:	sub	x6, x19, x1
  4314cc:	asr	x6, x6, #3
  4314d0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4314d4:	movk	x1, #0xaaab
  4314d8:	mul	x6, x6, x1
  4314dc:	cmp	w0, #0x2
  4314e0:	ldr	w3, [x19]
  4314e4:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  4314e8:	ldr	x5, [sp, #168]
  4314ec:	mov	w4, w3
  4314f0:	mov	x2, x19
  4314f4:	ldr	x1, [sp, #256]
  4314f8:	mov	x0, x25
  4314fc:	bl	42de34 <nftw@plt+0x2b2b4>
  431500:	add	w23, w23, #0x1
  431504:	b	431334 <nftw@plt+0x2e7b4>
  431508:	str	wzr, [sp, #184]
  43150c:	b	4314b8 <nftw@plt+0x2e938>
  431510:	ldrh	w0, [x19, #6]
  431514:	tbnz	w0, #3, 430e20 <nftw@plt+0x2e2a0>
  431518:	ldr	w3, [x26, #664]
  43151c:	mov	w6, #0x0                   	// #0
  431520:	mov	x5, #0x0                   	// #0
  431524:	mov	w4, w3
  431528:	add	x2, x26, #0x298
  43152c:	ldr	x1, [sp, #256]
  431530:	mov	x0, x25
  431534:	bl	42de34 <nftw@plt+0x2b2b4>
  431538:	mov	w22, #0x0                   	// #0
  43153c:	str	wzr, [sp, #184]
  431540:	str	xzr, [sp, #160]
  431544:	b	431334 <nftw@plt+0x2e7b4>
  431548:	stp	x29, x30, [sp, #-112]!
  43154c:	mov	x29, sp
  431550:	stp	x19, x20, [sp, #16]
  431554:	stp	x21, x22, [sp, #32]
  431558:	stp	x23, x24, [sp, #48]
  43155c:	stp	x25, x26, [sp, #64]
  431560:	mov	x19, x0
  431564:	mov	x23, x1
  431568:	ldrb	w26, [x0, #192]
  43156c:	mov	w24, #0x0                   	// #0
  431570:	adrp	x25, 48e000 <__environ@@GLIBC_2.17+0xa68>
  431574:	add	x25, x25, #0x968
  431578:	ldr	x0, [x19, #136]
  43157c:	ldr	x1, [x0, #8]
  431580:	cbz	x1, 431634 <nftw@plt+0x2eab4>
  431584:	ldr	w1, [x0, #48]
  431588:	cmp	w1, #0x1
  43158c:	b.eq	431730 <nftw@plt+0x2ebb0>  // b.none
  431590:	tst	w1, #0xfffffffd
  431594:	b.ne	43178c <nftw@plt+0x2ec0c>  // b.any
  431598:	ldr	x2, [x0, #16]
  43159c:	ldr	x3, [x0, #24]
  4315a0:	cmp	x2, x3
  4315a4:	b.ne	4317a8 <nftw@plt+0x2ec28>  // b.any
  4315a8:	ldr	x0, [x0, #40]
  4315ac:	cbz	x0, 4315bc <nftw@plt+0x2ea3c>
  4315b0:	ldr	w0, [x25, #4]
  4315b4:	add	w0, w0, #0x1
  4315b8:	str	w0, [x25, #4]
  4315bc:	mov	x0, x19
  4315c0:	bl	42e76c <nftw@plt+0x2bbec>
  4315c4:	ldrb	w0, [x19, #16]
  4315c8:	cbnz	w0, 431578 <nftw@plt+0x2e9f8>
  4315cc:	add	x20, x19, #0x298
  4315d0:	cbz	x23, 431614 <nftw@plt+0x2ea94>
  4315d4:	cbnz	w24, 4315dc <nftw@plt+0x2ea5c>
  4315d8:	ldr	w24, [x20]
  4315dc:	str	w24, [x23]
  4315e0:	ldrb	w0, [x19, #1157]
  4315e4:	cbnz	w0, 4315fc <nftw@plt+0x2ea7c>
  4315e8:	ldr	x0, [x19, #136]
  4315ec:	bl	42dc48 <nftw@plt+0x2b0c8>
  4315f0:	cbz	x0, 4315fc <nftw@plt+0x2ea7c>
  4315f4:	ldr	w0, [x19, #176]
  4315f8:	str	w0, [x23]
  4315fc:	ldr	w0, [x23]
  431600:	ldrb	w1, [x19, #1160]
  431604:	cbz	w1, 431610 <nftw@plt+0x2ea90>
  431608:	ldrb	w1, [x19, #16]
  43160c:	cbnz	w1, 431a14 <nftw@plt+0x2ee94>
  431610:	str	w0, [x23]
  431614:	strb	w26, [x19, #192]
  431618:	mov	x0, x20
  43161c:	ldp	x19, x20, [sp, #16]
  431620:	ldp	x21, x22, [sp, #32]
  431624:	ldp	x23, x24, [sp, #48]
  431628:	ldp	x25, x26, [sp, #64]
  43162c:	ldp	x29, x30, [sp], #112
  431630:	ret
  431634:	mov	x0, x19
  431638:	bl	42ab60 <nftw@plt+0x27fe0>
  43163c:	mov	x20, x0
  431640:	ldr	w24, [x0]
  431644:	ldrb	w0, [x19, #16]
  431648:	cbz	w0, 431658 <nftw@plt+0x2ead8>
  43164c:	ldrb	w0, [x20, #4]
  431650:	cmp	w0, #0x4f
  431654:	b.eq	431578 <nftw@plt+0x2e9f8>  // b.none
  431658:	ldrb	w0, [x20, #4]
  43165c:	cmp	w0, #0x35
  431660:	b.ne	4315d0 <nftw@plt+0x2ea50>  // b.any
  431664:	ldr	x21, [x20, #8]
  431668:	ldrb	w0, [x21, #18]
  43166c:	tst	x0, #0x3
  431670:	b.eq	4315d0 <nftw@plt+0x2ea50>  // b.none
  431674:	ldrh	w0, [x20, #6]
  431678:	tbnz	w0, #10, 4315d0 <nftw@plt+0x2ea50>
  43167c:	ldrh	w0, [x21, #18]
  431680:	tbnz	w0, #6, 4319e8 <nftw@plt+0x2ee68>
  431684:	ldrb	w0, [x19, #192]
  431688:	cbnz	w0, 4316a4 <nftw@plt+0x2eb24>
  43168c:	ldr	x0, [x19, #136]
  431690:	bl	42dc48 <nftw@plt+0x2b0c8>
  431694:	cbnz	x0, 4316a4 <nftw@plt+0x2eb24>
  431698:	ldr	w0, [x20]
  43169c:	str	w0, [x19, #176]
  4316a0:	str	x21, [x19, #184]
  4316a4:	ldrb	w0, [x19, #24]
  4316a8:	cbnz	w0, 4315d0 <nftw@plt+0x2ea50>
  4316ac:	ldrh	w0, [x21, #18]
  4316b0:	tbz	w0, #8, 4319d0 <nftw@plt+0x2ee50>
  4316b4:	ldr	x0, [x19, #992]
  4316b8:	cbz	x0, 4315d0 <nftw@plt+0x2ea50>
  4316bc:	mov	w1, #0x0                   	// #0
  4316c0:	mov	x0, x19
  4316c4:	bl	42acb4 <nftw@plt+0x28134>
  4316c8:	ldrb	w1, [x0, #4]
  4316cc:	mov	w21, #0x1                   	// #1
  4316d0:	cmp	w1, #0x53
  4316d4:	b.eq	4316e0 <nftw@plt+0x2eb60>  // b.none
  4316d8:	ldrb	w21, [x0, #6]
  4316dc:	and	w21, w21, #0x1
  4316e0:	ldr	x2, [x19, #992]
  4316e4:	mov	x1, x20
  4316e8:	mov	x0, x19
  4316ec:	blr	x2
  4316f0:	mov	x1, x0
  4316f4:	cbz	x0, 431988 <nftw@plt+0x2ee08>
  4316f8:	mov	w3, w24
  4316fc:	mov	x2, x20
  431700:	mov	x0, x19
  431704:	bl	42fd08 <nftw@plt+0x2d188>
  431708:	cbz	w0, 4315d0 <nftw@plt+0x2ea50>
  43170c:	ldrb	w1, [x19, #16]
  431710:	cmp	w1, #0x0
  431714:	ccmp	w0, #0x2, #0x4, eq  // eq = none
  431718:	b.eq	431578 <nftw@plt+0x2e9f8>  // b.none
  43171c:	mov	x1, x20
  431720:	mov	x0, x19
  431724:	bl	42ddbc <nftw@plt+0x2b23c>
  431728:	mov	x20, x0
  43172c:	b	4315d0 <nftw@plt+0x2ea50>
  431730:	ldr	x20, [x0, #16]
  431734:	ldr	x1, [x0, #24]
  431738:	cmp	x20, x1
  43173c:	b.eq	4315a8 <nftw@plt+0x2ea28>  // b.none
  431740:	mov	x1, x20
  431744:	ldr	w24, [x1], #24
  431748:	str	x1, [x0, #16]
  43174c:	ldrh	w0, [x20, #6]
  431750:	tbz	w0, #3, 431644 <nftw@plt+0x2eac4>
  431754:	str	x27, [sp, #80]
  431758:	str	x20, [sp, #96]
  43175c:	ldr	x22, [x19, #136]
  431760:	mov	x0, x22
  431764:	bl	42dc48 <nftw@plt+0x2b0c8>
  431768:	cbz	x0, 431814 <nftw@plt+0x2ec94>
  43176c:	ldrh	w0, [x20, #6]
  431770:	tbz	w0, #3, 431814 <nftw@plt+0x2ec94>
  431774:	ldr	w0, [x22, #48]
  431778:	cmp	w0, #0x2
  43177c:	b.eq	43182c <nftw@plt+0x2ecac>  // b.none
  431780:	ldr	w27, [x19, #176]
  431784:	mov	x21, #0x0                   	// #0
  431788:	b	431880 <nftw@plt+0x2ed00>
  43178c:	str	x27, [sp, #80]
  431790:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  431794:	add	x2, x2, #0x740
  431798:	mov	w1, #0xa2f                 	// #2607
  43179c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4317a0:	add	x0, x0, #0xf28
  4317a4:	bl	408d8c <nftw@plt+0x620c>
  4317a8:	cbnz	w1, 4317bc <nftw@plt+0x2ec3c>
  4317ac:	ldr	x20, [x2], #8
  4317b0:	ldr	w24, [x20]
  4317b4:	str	x2, [x0, #16]
  4317b8:	b	43174c <nftw@plt+0x2ebcc>
  4317bc:	cmp	w1, #0x2
  4317c0:	b.ne	4317f8 <nftw@plt+0x2ec78>  // b.any
  4317c4:	ldr	x1, [x0, #40]
  4317c8:	ldr	x20, [x2]
  4317cc:	ldr	x2, [x1, #8]
  4317d0:	cbz	x2, 4317f0 <nftw@plt+0x2ec70>
  4317d4:	ldr	x2, [x1, #16]
  4317d8:	ldr	w24, [x2], #4
  4317dc:	str	x2, [x1, #16]
  4317e0:	ldr	x1, [x0, #16]
  4317e4:	add	x1, x1, #0x8
  4317e8:	str	x1, [x0, #16]
  4317ec:	b	43174c <nftw@plt+0x2ebcc>
  4317f0:	ldr	w24, [x20]
  4317f4:	b	4317e0 <nftw@plt+0x2ec60>
  4317f8:	str	x27, [sp, #80]
  4317fc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  431800:	add	x2, x2, #0x758
  431804:	mov	w1, #0xa59                 	// #2649
  431808:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  43180c:	add	x0, x0, #0xf28
  431810:	bl	408d8c <nftw@plt+0x620c>
  431814:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  431818:	add	x2, x2, #0x778
  43181c:	mov	w1, #0x352                 	// #850
  431820:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  431824:	add	x0, x0, #0xf28
  431828:	bl	408d8c <nftw@plt+0x620c>
  43182c:	ldr	x0, [x22, #40]
  431830:	ldr	x0, [x0, #16]
  431834:	ldur	w27, [x0, #-4]
  431838:	b	431784 <nftw@plt+0x2ec04>
  43183c:	ldr	x21, [x22, #16]
  431840:	add	x0, x21, #0x18
  431844:	str	x0, [x22, #16]
  431848:	ldrb	w0, [x21, #4]
  43184c:	cmp	w0, #0x53
  431850:	b.ne	43185c <nftw@plt+0x2ecdc>  // b.any
  431854:	ldrh	w0, [x21, #6]
  431858:	tbnz	w0, #3, 4318d0 <nftw@plt+0x2ed50>
  43185c:	mov	x3, x21
  431860:	add	x2, sp, #0x60
  431864:	mov	w1, w27
  431868:	mov	x0, x19
  43186c:	bl	42e9c0 <nftw@plt+0x2be40>
  431870:	and	w0, w0, #0xff
  431874:	cbz	w0, 4318e8 <nftw@plt+0x2ed68>
  431878:	ldrh	w0, [x21, #6]
  43187c:	tbz	w0, #3, 4318e8 <nftw@plt+0x2ed68>
  431880:	ldr	w0, [x22, #48]
  431884:	cmp	w0, #0x1
  431888:	b.eq	43183c <nftw@plt+0x2ecbc>  // b.none
  43188c:	cbnz	w0, 4318a4 <nftw@plt+0x2ed24>
  431890:	ldr	x0, [x22, #16]
  431894:	add	x1, x0, #0x8
  431898:	str	x1, [x22, #16]
  43189c:	ldr	x21, [x0]
  4318a0:	b	431848 <nftw@plt+0x2ecc8>
  4318a4:	cmp	w0, #0x2
  4318a8:	b.ne	431848 <nftw@plt+0x2ecc8>  // b.any
  4318ac:	ldr	x0, [x22, #16]
  4318b0:	add	x1, x0, #0x8
  4318b4:	str	x1, [x22, #16]
  4318b8:	ldr	x21, [x0]
  4318bc:	ldr	x1, [x22, #40]
  4318c0:	ldr	x0, [x1, #16]
  4318c4:	add	x0, x0, #0x4
  4318c8:	str	x0, [x1, #16]
  4318cc:	b	431848 <nftw@plt+0x2ecc8>
  4318d0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4318d4:	add	x2, x2, #0x778
  4318d8:	mov	w1, #0x380                 	// #896
  4318dc:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4318e0:	add	x0, x0, #0xf28
  4318e4:	bl	408d8c <nftw@plt+0x620c>
  4318e8:	ldr	w0, [x22, #48]
  4318ec:	cmp	w0, #0x2
  4318f0:	b.eq	431918 <nftw@plt+0x2ed98>  // b.none
  4318f4:	mov	w3, #0x1                   	// #1
  4318f8:	ldr	x2, [sp, #96]
  4318fc:	mov	x1, #0x0                   	// #0
  431900:	mov	x0, x19
  431904:	bl	42e500 <nftw@plt+0x2b980>
  431908:	ldrb	w0, [x19, #16]
  43190c:	cbz	w0, 431970 <nftw@plt+0x2edf0>
  431910:	ldr	x27, [sp, #80]
  431914:	b	431578 <nftw@plt+0x2e9f8>
  431918:	str	xzr, [sp, #104]
  43191c:	add	x2, sp, #0x68
  431920:	mov	x1, #0x1                   	// #1
  431924:	mov	x0, x19
  431928:	bl	42ddec <nftw@plt+0x2b26c>
  43192c:	mov	x21, x0
  431930:	mov	w6, #0x0                   	// #0
  431934:	mov	x5, #0x0                   	// #0
  431938:	mov	w4, #0x0                   	// #0
  43193c:	mov	w3, w27
  431940:	ldr	x2, [sp, #96]
  431944:	ldr	x1, [sp, #104]
  431948:	bl	42de34 <nftw@plt+0x2b2b4>
  43194c:	ldr	x0, [x22, #40]
  431950:	mov	w5, #0x1                   	// #1
  431954:	ldr	x4, [x21, #8]
  431958:	ldr	x3, [sp, #104]
  43195c:	mov	x2, x21
  431960:	ldr	x1, [x0]
  431964:	mov	x0, x19
  431968:	bl	42dcc0 <nftw@plt+0x2b140>
  43196c:	b	431908 <nftw@plt+0x2ed88>
  431970:	mov	x1, x20
  431974:	mov	x0, x19
  431978:	bl	42ddbc <nftw@plt+0x2b23c>
  43197c:	mov	x20, x0
  431980:	ldr	x27, [sp, #80]
  431984:	b	4315d0 <nftw@plt+0x2ea50>
  431988:	cbz	w21, 4315d0 <nftw@plt+0x2ea50>
  43198c:	mov	w1, #0x0                   	// #0
  431990:	mov	x0, x19
  431994:	bl	42acb4 <nftw@plt+0x28134>
  431998:	mov	x1, x0
  43199c:	ldrb	w0, [x0, #4]
  4319a0:	cmp	w0, #0x53
  4319a4:	b.eq	4315d0 <nftw@plt+0x2ea50>  // b.none
  4319a8:	ldrh	w0, [x1, #6]
  4319ac:	tbnz	w0, #0, 4315d0 <nftw@plt+0x2ea50>
  4319b0:	mov	x0, x19
  4319b4:	bl	42ddbc <nftw@plt+0x2b23c>
  4319b8:	mov	w3, #0x1                   	// #1
  4319bc:	mov	x2, x0
  4319c0:	mov	x1, #0x0                   	// #0
  4319c4:	mov	x0, x19
  4319c8:	bl	42e500 <nftw@plt+0x2b980>
  4319cc:	b	4315d0 <nftw@plt+0x2ea50>
  4319d0:	mov	w3, w24
  4319d4:	mov	x2, x20
  4319d8:	mov	x1, x21
  4319dc:	mov	x0, x19
  4319e0:	bl	42fd08 <nftw@plt+0x2d188>
  4319e4:	b	431708 <nftw@plt+0x2eb88>
  4319e8:	mov	x0, x19
  4319ec:	bl	427474 <nftw@plt+0x248f4>
  4319f0:	ldrb	w1, [x20, #4]
  4319f4:	strb	w1, [x0, #4]
  4319f8:	ldrh	w1, [x20, #6]
  4319fc:	orr	w1, w1, #0x400
  431a00:	strh	w1, [x0, #6]
  431a04:	ldp	x2, x3, [x20, #8]
  431a08:	stp	x2, x3, [x0, #8]
  431a0c:	mov	x20, x0
  431a10:	b	4315d0 <nftw@plt+0x2ea50>
  431a14:	ldr	w0, [x19, #48]
  431a18:	b	431610 <nftw@plt+0x2ea90>
  431a1c:	stp	x29, x30, [sp, #-16]!
  431a20:	mov	x29, sp
  431a24:	mov	x1, #0x0                   	// #0
  431a28:	bl	431548 <nftw@plt+0x2e9c8>
  431a2c:	ldp	x29, x30, [sp], #16
  431a30:	ret
  431a34:	stp	x29, x30, [sp, #-32]!
  431a38:	mov	x29, sp
  431a3c:	str	x19, [sp, #16]
  431a40:	mov	x19, x0
  431a44:	ldr	x1, [x0]
  431a48:	ldrb	w0, [x1, #105]
  431a4c:	orr	w0, w0, #0x4
  431a50:	strb	w0, [x1, #105]
  431a54:	ldrb	w0, [x19, #27]
  431a58:	add	w0, w0, #0x1
  431a5c:	strb	w0, [x19, #27]
  431a60:	ldrb	w0, [x19, #24]
  431a64:	add	w0, w0, #0x1
  431a68:	strb	w0, [x19, #24]
  431a6c:	ldrb	w0, [x19, #1160]
  431a70:	cbz	w0, 431aa8 <nftw@plt+0x2ef28>
  431a74:	mov	x0, x19
  431a78:	bl	434530 <nftw@plt+0x319b0>
  431a7c:	and	w0, w0, #0xff
  431a80:	cbnz	w0, 431a74 <nftw@plt+0x2eef4>
  431a84:	ldrb	w0, [x19, #27]
  431a88:	sub	w0, w0, #0x1
  431a8c:	strb	w0, [x19, #27]
  431a90:	ldrb	w0, [x19, #24]
  431a94:	sub	w0, w0, #0x1
  431a98:	strb	w0, [x19, #24]
  431a9c:	ldr	x19, [sp, #16]
  431aa0:	ldp	x29, x30, [sp], #32
  431aa4:	ret
  431aa8:	mov	x0, x19
  431aac:	bl	431a1c <nftw@plt+0x2ee9c>
  431ab0:	ldrb	w0, [x0, #4]
  431ab4:	cmp	w0, #0x16
  431ab8:	b.ne	431aa8 <nftw@plt+0x2ef28>  // b.any
  431abc:	b	431a84 <nftw@plt+0x2ef04>
  431ac0:	stp	x29, x30, [sp, #-16]!
  431ac4:	mov	x29, sp
  431ac8:	bl	431548 <nftw@plt+0x2e9c8>
  431acc:	ldp	x29, x30, [sp], #16
  431ad0:	ret
  431ad4:	stp	x29, x30, [sp, #-96]!
  431ad8:	mov	x29, sp
  431adc:	stp	x19, x20, [sp, #16]
  431ae0:	stp	x21, x22, [sp, #32]
  431ae4:	stp	x23, x24, [sp, #48]
  431ae8:	stp	x25, x26, [sp, #64]
  431aec:	mov	x23, x0
  431af0:	mov	x25, x1
  431af4:	ldr	x20, [x1, #24]
  431af8:	ldr	w0, [x1, #8]
  431afc:	add	w0, w0, w0, lsl #2
  431b00:	lsl	w0, w0, #1
  431b04:	ldrb	w4, [x20, #19]
  431b08:	add	w19, w0, #0x2
  431b0c:	tbz	w4, #2, 431b40 <nftw@plt+0x2efc0>
  431b10:	add	w19, w0, #0x6
  431b14:	ldrh	w2, [x20, #16]
  431b18:	cbz	w2, 431b40 <nftw@plt+0x2efc0>
  431b1c:	ldr	x3, [x20]
  431b20:	mov	x0, #0x0                   	// #0
  431b24:	ldr	x1, [x3, x0, lsl #3]
  431b28:	ldr	w1, [x1, #8]
  431b2c:	add	w1, w1, #0x1
  431b30:	add	w19, w19, w1
  431b34:	add	x0, x0, #0x1
  431b38:	cmp	w2, w0
  431b3c:	b.hi	431b24 <nftw@plt+0x2efa4>  // b.pmore
  431b40:	ldrb	w0, [x23, #1160]
  431b44:	cbnz	w0, 431b60 <nftw@plt+0x2efe0>
  431b48:	tbnz	w4, #6, 431bb0 <nftw@plt+0x2f030>
  431b4c:	ldr	w24, [x20, #12]
  431b50:	cbz	w24, 431b6c <nftw@plt+0x2efec>
  431b54:	add	x22, x20, #0x18
  431b58:	mov	w21, #0x0                   	// #0
  431b5c:	b	431c18 <nftw@plt+0x2f098>
  431b60:	mov	x0, x20
  431b64:	bl	434594 <nftw@plt+0x31a14>
  431b68:	add	w19, w19, w0
  431b6c:	ldr	w0, [x23, #512]
  431b70:	cmp	w0, w19
  431b74:	b.cc	431c40 <nftw@plt+0x2f0c0>  // b.lo, b.ul, b.last
  431b78:	mov	x1, x25
  431b7c:	ldr	x0, [x23, #504]
  431b80:	bl	427684 <nftw@plt+0x24b04>
  431b84:	mov	x19, x0
  431b88:	ldrb	w0, [x20, #19]
  431b8c:	tbz	w0, #2, 431cc8 <nftw@plt+0x2f148>
  431b90:	mov	w0, #0x28                  	// #40
  431b94:	strb	w0, [x19], #1
  431b98:	ldrh	w0, [x20, #16]
  431b9c:	cbz	w0, 431cc0 <nftw@plt+0x2f140>
  431ba0:	mov	w22, #0x0                   	// #0
  431ba4:	mov	w24, #0x2e                  	// #46
  431ba8:	mov	w25, #0x2c                  	// #44
  431bac:	b	431c7c <nftw@plt+0x2f0fc>
  431bb0:	ldr	w1, [x20, #12]
  431bb4:	mov	w24, w1
  431bb8:	sub	w1, w1, #0x1
  431bbc:	cbz	w24, 431b6c <nftw@plt+0x2efec>
  431bc0:	ubfiz	x0, x1, #1, #32
  431bc4:	add	x0, x0, w1, uxtw
  431bc8:	add	x0, x20, x0, lsl #3
  431bcc:	ldrb	w0, [x0, #28]
  431bd0:	cmp	w0, #0x26
  431bd4:	b.eq	431bb4 <nftw@plt+0x2f034>  // b.none
  431bd8:	b	431b54 <nftw@plt+0x2efd4>
  431bdc:	mov	x0, x22
  431be0:	bl	42763c <nftw@plt+0x24abc>
  431be4:	add	w19, w19, w0
  431be8:	ldrh	w2, [x22, #6]
  431bec:	ubfx	x0, x2, #2, #1
  431bf0:	add	w19, w19, w0
  431bf4:	add	w0, w19, #0x3
  431bf8:	tst	x2, #0x8
  431bfc:	csel	w19, w0, w19, ne  // ne = any
  431c00:	and	w2, w2, #0x1
  431c04:	add	w19, w19, w2
  431c08:	add	w21, w21, #0x1
  431c0c:	add	x22, x22, #0x18
  431c10:	cmp	w21, w24
  431c14:	b.cs	431b6c <nftw@plt+0x2efec>  // b.hs, b.nlast
  431c18:	ubfiz	x2, x21, #1, #32
  431c1c:	add	x2, x2, w21, uxtw
  431c20:	add	x2, x20, x2, lsl #3
  431c24:	ldrb	w0, [x2, #28]
  431c28:	cmp	w0, #0x50
  431c2c:	b.ne	431bdc <nftw@plt+0x2f05c>  // b.any
  431c30:	ldr	x0, [x22, #16]
  431c34:	ldr	w0, [x0, #8]
  431c38:	add	w19, w19, w0
  431c3c:	b	431be8 <nftw@plt+0x2f068>
  431c40:	mov	w1, w19
  431c44:	ldr	x0, [x23, #504]
  431c48:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  431c4c:	str	x0, [x23, #504]
  431c50:	str	w19, [x23, #512]
  431c54:	b	431b78 <nftw@plt+0x2eff8>
  431c58:	ldrb	w0, [x20, #19]
  431c5c:	tbz	w0, #3, 431cc0 <nftw@plt+0x2f140>
  431c60:	strb	w24, [x19]
  431c64:	strb	w24, [x19, #1]
  431c68:	strb	w24, [x19, #2]
  431c6c:	add	x19, x19, #0x3
  431c70:	ldrh	w0, [x20, #16]
  431c74:	cmp	w0, w22
  431c78:	b.ls	431cc0 <nftw@plt+0x2f140>  // b.plast
  431c7c:	ldr	x0, [x20]
  431c80:	ldr	x21, [x0, w22, uxtw #3]
  431c84:	ldr	x0, [x23, #1272]
  431c88:	cmp	x0, x21
  431c8c:	b.eq	431ca8 <nftw@plt+0x2f128>  // b.none
  431c90:	ldr	w2, [x21, #8]
  431c94:	ldr	x1, [x21]
  431c98:	mov	x0, x19
  431c9c:	bl	402490 <memcpy@plt>
  431ca0:	ldr	w0, [x21, #8]
  431ca4:	add	x19, x19, x0
  431ca8:	add	w22, w22, #0x1
  431cac:	ldrh	w0, [x20, #16]
  431cb0:	cmp	w22, w0
  431cb4:	b.cs	431c58 <nftw@plt+0x2f0d8>  // b.hs, b.nlast
  431cb8:	strb	w25, [x19], #1
  431cbc:	b	431c70 <nftw@plt+0x2f0f0>
  431cc0:	mov	w0, #0x29                  	// #41
  431cc4:	strb	w0, [x19], #1
  431cc8:	mov	w0, #0x20                  	// #32
  431ccc:	strb	w0, [x19], #1
  431cd0:	ldrb	w0, [x23, #1160]
  431cd4:	cbnz	w0, 431d04 <nftw@plt+0x2f184>
  431cd8:	ldr	w25, [x20, #12]
  431cdc:	cbz	w25, 431d14 <nftw@plt+0x2f194>
  431ce0:	ldrb	w0, [x20, #19]
  431ce4:	tbnz	w0, #6, 431de0 <nftw@plt+0x2f260>
  431ce8:	stp	x27, x28, [sp, #80]
  431cec:	add	x24, x20, #0x18
  431cf0:	mov	w21, #0x0                   	// #0
  431cf4:	mov	w27, #0x20                  	// #32
  431cf8:	mov	w26, #0x23                  	// #35
  431cfc:	mov	w28, #0x1                   	// #1
  431d00:	b	431d70 <nftw@plt+0x2f1f0>
  431d04:	mov	x1, x19
  431d08:	mov	x0, x20
  431d0c:	bl	4345fc <nftw@plt+0x31a7c>
  431d10:	mov	x19, x0
  431d14:	strb	wzr, [x19]
  431d18:	ldr	x0, [x23, #504]
  431d1c:	ldp	x19, x20, [sp, #16]
  431d20:	ldp	x21, x22, [sp, #32]
  431d24:	ldp	x23, x24, [sp, #48]
  431d28:	ldp	x25, x26, [sp, #64]
  431d2c:	ldp	x29, x30, [sp], #96
  431d30:	ret
  431d34:	stp	x27, x28, [sp, #80]
  431d38:	b	431cec <nftw@plt+0x2f16c>
  431d3c:	ldr	x0, [x22, #16]
  431d40:	ldr	w2, [x0, #8]
  431d44:	ldr	x1, [x0]
  431d48:	mov	x0, x19
  431d4c:	bl	402490 <memcpy@plt>
  431d50:	ldr	x0, [x22, #16]
  431d54:	ldr	w0, [x0, #8]
  431d58:	add	x19, x19, x0
  431d5c:	b	431dbc <nftw@plt+0x2f23c>
  431d60:	add	w21, w21, #0x1
  431d64:	add	x24, x24, #0x18
  431d68:	cmp	w25, w21
  431d6c:	b.ls	431dd8 <nftw@plt+0x2f258>  // b.plast
  431d70:	mov	x22, x24
  431d74:	ldrh	w0, [x24, #6]
  431d78:	tbz	w0, #0, 431d80 <nftw@plt+0x2f200>
  431d7c:	strb	w27, [x19], #1
  431d80:	ldrh	w0, [x22, #6]
  431d84:	tbz	w0, #2, 431d8c <nftw@plt+0x2f20c>
  431d88:	strb	w26, [x19], #1
  431d8c:	ubfiz	x0, x21, #1, #32
  431d90:	add	x0, x0, w21, uxtw
  431d94:	add	x0, x20, x0, lsl #3
  431d98:	ldrb	w0, [x0, #28]
  431d9c:	cmp	w0, #0x50
  431da0:	b.eq	431d3c <nftw@plt+0x2f1bc>  // b.none
  431da4:	mov	w3, w28
  431da8:	mov	x2, x19
  431dac:	mov	x1, x22
  431db0:	mov	x0, x23
  431db4:	bl	427708 <nftw@plt+0x24b88>
  431db8:	mov	x19, x0
  431dbc:	ldrh	w0, [x22, #6]
  431dc0:	tbz	w0, #3, 431d60 <nftw@plt+0x2f1e0>
  431dc4:	strb	w27, [x19]
  431dc8:	strb	w26, [x19, #1]
  431dcc:	strb	w26, [x19, #2]
  431dd0:	add	x19, x19, #0x3
  431dd4:	b	431d60 <nftw@plt+0x2f1e0>
  431dd8:	ldp	x27, x28, [sp, #80]
  431ddc:	b	431d14 <nftw@plt+0x2f194>
  431de0:	sub	w1, w25, #0x1
  431de4:	add	w25, w1, #0x1
  431de8:	ubfiz	x0, x1, #1, #32
  431dec:	add	x0, x0, w1, uxtw
  431df0:	add	x0, x20, x0, lsl #3
  431df4:	ldrb	w0, [x0, #28]
  431df8:	cmp	w0, #0x26
  431dfc:	b.ne	431d34 <nftw@plt+0x2f1b4>  // b.any
  431e00:	sub	w1, w1, #0x1
  431e04:	cmn	w1, #0x1
  431e08:	b.ne	431de4 <nftw@plt+0x2f264>  // b.any
  431e0c:	b	431d14 <nftw@plt+0x2f194>
  431e10:	stp	x29, x30, [sp, #-48]!
  431e14:	mov	x29, sp
  431e18:	stp	x19, x20, [sp, #16]
  431e1c:	stp	x21, x22, [sp, #32]
  431e20:	mov	x21, x0
  431e24:	mov	x19, x1
  431e28:	ldr	x0, [x0, #32]
  431e2c:	cbz	x0, 431eb4 <nftw@plt+0x2f334>
  431e30:	ldr	w0, [x21, #48]
  431e34:	cbz	w0, 431eb4 <nftw@plt+0x2f334>
  431e38:	mov	w20, #0x0                   	// #0
  431e3c:	b	431e50 <nftw@plt+0x2f2d0>
  431e40:	add	w20, w20, #0x1
  431e44:	ldr	w0, [x21, #48]
  431e48:	cmp	w0, w20
  431e4c:	b.ls	431eb4 <nftw@plt+0x2f334>  // b.plast
  431e50:	mov	w22, w20
  431e54:	ldr	x1, [x21, #40]
  431e58:	ldr	x0, [x21, #32]
  431e5c:	ldr	x2, [x1, x22, lsl #3]
  431e60:	mov	x1, x19
  431e64:	ldr	x0, [x0, x22, lsl #3]
  431e68:	bl	448ff0 <nftw@plt+0x46470>
  431e6c:	cbnz	w0, 431e40 <nftw@plt+0x2f2c0>
  431e70:	ldr	x0, [x21, #40]
  431e74:	ldr	x0, [x0, x22, lsl #3]
  431e78:	add	x1, x19, x0
  431e7c:	ldrb	w2, [x19, x0]
  431e80:	cmp	w2, #0x2f
  431e84:	b.ne	431e40 <nftw@plt+0x2f2c0>  // b.any
  431e88:	ldrb	w2, [x1, #1]
  431e8c:	cmp	w2, #0x2e
  431e90:	b.ne	431eac <nftw@plt+0x2f32c>  // b.any
  431e94:	ldrb	w2, [x1, #2]
  431e98:	cmp	w2, #0x2e
  431e9c:	b.ne	431eac <nftw@plt+0x2f32c>  // b.any
  431ea0:	ldrb	w1, [x1, #3]
  431ea4:	cmp	w1, #0x2f
  431ea8:	b.eq	431e40 <nftw@plt+0x2f2c0>  // b.none
  431eac:	add	x0, x0, #0x1
  431eb0:	add	x19, x19, x0
  431eb4:	ldrb	w0, [x19]
  431eb8:	cmp	w0, #0x2e
  431ebc:	b.eq	431ed4 <nftw@plt+0x2f354>  // b.none
  431ec0:	mov	x0, x19
  431ec4:	b	431f08 <nftw@plt+0x2f388>
  431ec8:	ldrb	w0, [x19]
  431ecc:	cmp	w0, #0x2e
  431ed0:	b.ne	431f18 <nftw@plt+0x2f398>  // b.any
  431ed4:	ldrb	w0, [x19, #1]
  431ed8:	cmp	w0, #0x2f
  431edc:	b.ne	431f04 <nftw@plt+0x2f384>  // b.any
  431ee0:	add	x0, x19, #0x2
  431ee4:	ldrb	w1, [x19, #2]
  431ee8:	mov	x19, x0
  431eec:	cmp	w1, #0x2f
  431ef0:	b.ne	431ec8 <nftw@plt+0x2f348>  // b.any
  431ef4:	ldrb	w0, [x19, #1]!
  431ef8:	cmp	w0, #0x2f
  431efc:	b.eq	431ef4 <nftw@plt+0x2f374>  // b.none
  431f00:	b	431ec8 <nftw@plt+0x2f348>
  431f04:	mov	x0, x19
  431f08:	ldp	x19, x20, [sp, #16]
  431f0c:	ldp	x21, x22, [sp, #32]
  431f10:	ldp	x29, x30, [sp], #48
  431f14:	ret
  431f18:	mov	x0, x19
  431f1c:	b	431f08 <nftw@plt+0x2f388>
  431f20:	stp	x29, x30, [sp, #-32]!
  431f24:	mov	x29, sp
  431f28:	str	x19, [sp, #16]
  431f2c:	mov	x19, x0
  431f30:	ldrb	w0, [x0]
  431f34:	cbz	w0, 431fb4 <nftw@plt+0x2f434>
  431f38:	sub	x4, x19, #0x1
  431f3c:	mov	x3, x4
  431f40:	mov	w1, #0x0                   	// #0
  431f44:	b	431f60 <nftw@plt+0x2f3e0>
  431f48:	cmp	w0, #0x24
  431f4c:	cinc	w1, w1, eq  // eq = none
  431f50:	add	w1, w1, #0x1
  431f54:	add	x3, x3, #0x1
  431f58:	ldrb	w0, [x3, #1]
  431f5c:	cbz	w0, 431fb8 <nftw@plt+0x2f438>
  431f60:	cmp	w0, #0x23
  431f64:	b.eq	431fac <nftw@plt+0x2f42c>  // b.none
  431f68:	b.hi	431f48 <nftw@plt+0x2f3c8>  // b.pmore
  431f6c:	cmp	w0, #0x9
  431f70:	b.eq	431f7c <nftw@plt+0x2f3fc>  // b.none
  431f74:	cmp	w0, #0x20
  431f78:	b.ne	431f50 <nftw@plt+0x2f3d0>  // b.any
  431f7c:	mov	x2, x3
  431f80:	cmp	x19, x3
  431f84:	b.hi	431fa4 <nftw@plt+0x2f424>  // b.pmore
  431f88:	ldrb	w0, [x2]
  431f8c:	cmp	w0, #0x5c
  431f90:	b.ne	431fa4 <nftw@plt+0x2f424>  // b.any
  431f94:	add	w1, w1, #0x1
  431f98:	sub	x2, x2, #0x1
  431f9c:	cmp	x2, x4
  431fa0:	b.ne	431f88 <nftw@plt+0x2f408>  // b.any
  431fa4:	add	w1, w1, #0x1
  431fa8:	b	431f50 <nftw@plt+0x2f3d0>
  431fac:	add	w1, w1, #0x1
  431fb0:	b	431f50 <nftw@plt+0x2f3d0>
  431fb4:	mov	w1, #0x0                   	// #0
  431fb8:	add	w1, w1, #0x1
  431fbc:	sxtw	x0, w1
  431fc0:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  431fc4:	ldrb	w3, [x19]
  431fc8:	cbz	w3, 432058 <nftw@plt+0x2f4d8>
  431fcc:	sub	x7, x19, #0x1
  431fd0:	mov	x5, x7
  431fd4:	mov	x1, x0
  431fd8:	mov	w6, #0x5c                  	// #92
  431fdc:	mov	w8, #0x24                  	// #36
  431fe0:	b	432008 <nftw@plt+0x2f488>
  431fe4:	cmp	w3, #0x24
  431fe8:	b.ne	431ff8 <nftw@plt+0x2f478>  // b.any
  431fec:	strb	w8, [x1], #1
  431ff0:	b	431ff8 <nftw@plt+0x2f478>
  431ff4:	strb	w6, [x1], #1
  431ff8:	strb	w3, [x1], #1
  431ffc:	add	x5, x5, #0x1
  432000:	ldrb	w3, [x5, #1]
  432004:	cbz	w3, 43205c <nftw@plt+0x2f4dc>
  432008:	cmp	w3, #0x23
  43200c:	b.eq	432050 <nftw@plt+0x2f4d0>  // b.none
  432010:	b.hi	431fe4 <nftw@plt+0x2f464>  // b.pmore
  432014:	cmp	w3, #0x9
  432018:	b.eq	432024 <nftw@plt+0x2f4a4>  // b.none
  43201c:	cmp	w3, #0x20
  432020:	b.ne	431ff8 <nftw@plt+0x2f478>  // b.any
  432024:	mov	x2, x5
  432028:	cmp	x19, x5
  43202c:	b.hi	431ff4 <nftw@plt+0x2f474>  // b.pmore
  432030:	ldrb	w4, [x2]
  432034:	cmp	w4, #0x5c
  432038:	b.ne	431ff4 <nftw@plt+0x2f474>  // b.any
  43203c:	strb	w6, [x1], #1
  432040:	sub	x2, x2, #0x1
  432044:	cmp	x2, x7
  432048:	b.ne	432030 <nftw@plt+0x2f4b0>  // b.any
  43204c:	b	431ff4 <nftw@plt+0x2f474>
  432050:	strb	w6, [x1], #1
  432054:	b	431ff8 <nftw@plt+0x2f478>
  432058:	mov	x1, x0
  43205c:	strb	wzr, [x1]
  432060:	ldr	x19, [sp, #16]
  432064:	ldp	x29, x30, [sp], #32
  432068:	ret
  43206c:	stp	x29, x30, [sp, #-16]!
  432070:	mov	x29, sp
  432074:	mov	x1, #0x38                  	// #56
  432078:	mov	x0, #0x1                   	// #1
  43207c:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  432080:	ldp	x29, x30, [sp], #16
  432084:	ret
  432088:	stp	x29, x30, [sp, #-32]!
  43208c:	mov	x29, sp
  432090:	stp	x19, x20, [sp, #16]
  432094:	mov	x19, x0
  432098:	ldr	x0, [x0]
  43209c:	cbz	x0, 4320d0 <nftw@plt+0x2f550>
  4320a0:	ldr	w0, [x19, #8]
  4320a4:	cbz	w0, 4320c8 <nftw@plt+0x2f548>
  4320a8:	mov	w20, #0x0                   	// #0
  4320ac:	ldr	x0, [x19]
  4320b0:	ldr	x0, [x0, w20, uxtw #3]
  4320b4:	bl	402910 <free@plt>
  4320b8:	add	w20, w20, #0x1
  4320bc:	ldr	w0, [x19, #8]
  4320c0:	cmp	w0, w20
  4320c4:	b.hi	4320ac <nftw@plt+0x2f52c>  // b.pmore
  4320c8:	ldr	x0, [x19]
  4320cc:	bl	402910 <free@plt>
  4320d0:	ldr	x0, [x19, #16]
  4320d4:	cbz	x0, 432108 <nftw@plt+0x2f588>
  4320d8:	ldr	w0, [x19, #24]
  4320dc:	cbz	w0, 432100 <nftw@plt+0x2f580>
  4320e0:	mov	w20, #0x0                   	// #0
  4320e4:	ldr	x0, [x19, #16]
  4320e8:	ldr	x0, [x0, w20, uxtw #3]
  4320ec:	bl	402910 <free@plt>
  4320f0:	add	w20, w20, #0x1
  4320f4:	ldr	w0, [x19, #24]
  4320f8:	cmp	w0, w20
  4320fc:	b.hi	4320e4 <nftw@plt+0x2f564>  // b.pmore
  432100:	ldr	x0, [x19, #16]
  432104:	bl	402910 <free@plt>
  432108:	ldr	x0, [x19, #32]
  43210c:	cbz	x0, 432148 <nftw@plt+0x2f5c8>
  432110:	ldr	w0, [x19, #48]
  432114:	cbz	w0, 432138 <nftw@plt+0x2f5b8>
  432118:	mov	w20, #0x0                   	// #0
  43211c:	ldr	x0, [x19, #32]
  432120:	ldr	x0, [x0, w20, uxtw #3]
  432124:	bl	402910 <free@plt>
  432128:	add	w20, w20, #0x1
  43212c:	ldr	w0, [x19, #48]
  432130:	cmp	w0, w20
  432134:	b.hi	43211c <nftw@plt+0x2f59c>  // b.pmore
  432138:	ldr	x0, [x19, #32]
  43213c:	bl	402910 <free@plt>
  432140:	ldr	x0, [x19, #40]
  432144:	bl	402910 <free@plt>
  432148:	mov	x0, x19
  43214c:	bl	402910 <free@plt>
  432150:	ldp	x19, x20, [sp, #16]
  432154:	ldp	x29, x30, [sp], #32
  432158:	ret
  43215c:	stp	x29, x30, [sp, #-48]!
  432160:	mov	x29, sp
  432164:	stp	x19, x20, [sp, #16]
  432168:	str	x21, [sp, #32]
  43216c:	mov	x19, x0
  432170:	mov	x21, x1
  432174:	mov	w20, w2
  432178:	ldr	w0, [x0, #12]
  43217c:	ldr	w1, [x19, #8]
  432180:	cmp	w1, w0
  432184:	b.eq	4321c0 <nftw@plt+0x2f640>  // b.none
  432188:	mov	x1, x21
  43218c:	mov	x0, x19
  432190:	bl	431e10 <nftw@plt+0x2f290>
  432194:	cbz	w20, 4321e4 <nftw@plt+0x2f664>
  432198:	bl	431f20 <nftw@plt+0x2f3a0>
  43219c:	ldr	x2, [x19]
  4321a0:	ldr	w1, [x19, #8]
  4321a4:	add	w3, w1, #0x1
  4321a8:	str	w3, [x19, #8]
  4321ac:	str	x0, [x2, w1, uxtw #3]
  4321b0:	ldp	x19, x20, [sp, #16]
  4321b4:	ldr	x21, [sp, #32]
  4321b8:	ldp	x29, x30, [sp], #48
  4321bc:	ret
  4321c0:	add	w0, w0, #0x2
  4321c4:	lsl	w0, w0, #1
  4321c8:	str	w0, [x19, #12]
  4321cc:	mov	w0, w0
  4321d0:	lsl	x1, x0, #3
  4321d4:	ldr	x0, [x19]
  4321d8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4321dc:	str	x0, [x19]
  4321e0:	b	432188 <nftw@plt+0x2f608>
  4321e4:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  4321e8:	b	43219c <nftw@plt+0x2f61c>
  4321ec:	stp	x29, x30, [sp, #-48]!
  4321f0:	mov	x29, sp
  4321f4:	stp	x19, x20, [sp, #16]
  4321f8:	str	x21, [sp, #32]
  4321fc:	mov	x19, x0
  432200:	ldr	w0, [x0, #8]
  432204:	cbnz	w0, 432224 <nftw@plt+0x2f6a4>
  432208:	ldrb	w0, [x1]
  43220c:	cbnz	w0, 432238 <nftw@plt+0x2f6b8>
  432210:	mov	w2, #0x1                   	// #1
  432214:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  432218:	add	x1, x1, #0x230
  43221c:	mov	x0, x19
  432220:	bl	43215c <nftw@plt+0x2f5dc>
  432224:	mov	sp, x29
  432228:	ldp	x19, x20, [sp, #16]
  43222c:	ldr	x21, [sp, #32]
  432230:	ldp	x29, x30, [sp], #48
  432234:	ret
  432238:	mov	x0, x1
  43223c:	bl	44a240 <nftw@plt+0x476c0>
  432240:	mov	x21, x0
  432244:	bl	4024f0 <strlen@plt>
  432248:	add	x1, x0, #0x12
  43224c:	and	x1, x1, #0xfffffffffffffff0
  432250:	sub	sp, sp, x1
  432254:	mov	x20, sp
  432258:	mov	x1, x21
  43225c:	mov	x0, x20
  432260:	bl	402990 <strcpy@plt>
  432264:	mov	w1, #0x2e                  	// #46
  432268:	mov	x0, x20
  43226c:	bl	4027b0 <strrchr@plt>
  432270:	cbz	x0, 4322a0 <nftw@plt+0x2f720>
  432274:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432278:	add	x1, x1, #0x878
  43227c:	ldrh	w2, [x1]
  432280:	strh	w2, [x0]
  432284:	ldrb	w1, [x1, #2]
  432288:	strb	w1, [x0, #2]
  43228c:	mov	w2, #0x1                   	// #1
  432290:	mov	x1, x20
  432294:	mov	x0, x19
  432298:	bl	43215c <nftw@plt+0x2f5dc>
  43229c:	b	432224 <nftw@plt+0x2f6a4>
  4322a0:	mov	x0, x20
  4322a4:	bl	4024f0 <strlen@plt>
  4322a8:	add	x0, x20, x0
  4322ac:	b	432274 <nftw@plt+0x2f6f4>
  4322b0:	stp	x29, x30, [sp, #-32]!
  4322b4:	mov	x29, sp
  4322b8:	stp	x19, x20, [sp, #16]
  4322bc:	mov	x19, x0
  4322c0:	bl	431e10 <nftw@plt+0x2f290>
  4322c4:	bl	431f20 <nftw@plt+0x2f3a0>
  4322c8:	mov	x20, x0
  4322cc:	ldr	w0, [x19, #28]
  4322d0:	ldr	w1, [x19, #24]
  4322d4:	cmp	w1, w0
  4322d8:	b.eq	4322fc <nftw@plt+0x2f77c>  // b.none
  4322dc:	ldr	x1, [x19, #16]
  4322e0:	ldr	w0, [x19, #24]
  4322e4:	add	w2, w0, #0x1
  4322e8:	str	w2, [x19, #24]
  4322ec:	str	x20, [x1, w0, uxtw #3]
  4322f0:	ldp	x19, x20, [sp, #16]
  4322f4:	ldp	x29, x30, [sp], #32
  4322f8:	ret
  4322fc:	add	w0, w0, #0x4
  432300:	lsl	w0, w0, #1
  432304:	str	w0, [x19, #28]
  432308:	mov	w0, w0
  43230c:	lsl	x1, x0, #3
  432310:	ldr	x0, [x19, #16]
  432314:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  432318:	str	x0, [x19, #16]
  43231c:	b	4322dc <nftw@plt+0x2f75c>
  432320:	stp	x29, x30, [sp, #-64]!
  432324:	mov	x29, sp
  432328:	stp	x19, x20, [sp, #16]
  43232c:	stp	x21, x22, [sp, #32]
  432330:	mov	x20, x0
  432334:	mov	x21, x1
  432338:	ldrb	w0, [x1]
  43233c:	cbz	w0, 432418 <nftw@plt+0x2f898>
  432340:	str	x23, [sp, #48]
  432344:	b	43237c <nftw@plt+0x2f7fc>
  432348:	mov	x19, x21
  43234c:	b	4323a0 <nftw@plt+0x2f820>
  432350:	ldr	w1, [x20, #48]
  432354:	ldr	x0, [x20, #32]
  432358:	str	x23, [x0, x1, lsl #3]
  43235c:	ldr	w1, [x20, #48]
  432360:	ldr	x0, [x20, #40]
  432364:	str	x22, [x0, x1, lsl #3]
  432368:	ldr	w0, [x20, #48]
  43236c:	add	w0, w0, #0x1
  432370:	str	w0, [x20, #48]
  432374:	ldrb	w0, [x21]
  432378:	cbz	w0, 432414 <nftw@plt+0x2f894>
  43237c:	ldrb	w0, [x21]
  432380:	cmp	w0, #0x3a
  432384:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  432388:	b.eq	432348 <nftw@plt+0x2f7c8>  // b.none
  43238c:	mov	x19, x21
  432390:	ldrb	w2, [x19, #1]!
  432394:	cmp	w2, #0x3a
  432398:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  43239c:	b.ne	432390 <nftw@plt+0x2f810>  // b.any
  4323a0:	sub	x22, x19, x21
  4323a4:	add	x0, x22, #0x1
  4323a8:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4323ac:	mov	x23, x0
  4323b0:	mov	x2, x22
  4323b4:	mov	x1, x21
  4323b8:	bl	402490 <memcpy@plt>
  4323bc:	strb	wzr, [x23, x22]
  4323c0:	ldrb	w0, [x19]
  4323c4:	cmp	w0, #0x3a
  4323c8:	cinc	x21, x19, eq  // eq = none
  4323cc:	ldr	w0, [x20, #52]
  4323d0:	ldr	w1, [x20, #48]
  4323d4:	cmp	w1, w0
  4323d8:	b.ne	432350 <nftw@plt+0x2f7d0>  // b.any
  4323dc:	add	w0, w0, #0x4
  4323e0:	lsl	w0, w0, #1
  4323e4:	str	w0, [x20, #52]
  4323e8:	mov	w0, w0
  4323ec:	lsl	x1, x0, #3
  4323f0:	ldr	x0, [x20, #32]
  4323f4:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4323f8:	str	x0, [x20, #32]
  4323fc:	ldr	w1, [x20, #52]
  432400:	lsl	x1, x1, #3
  432404:	ldr	x0, [x20, #40]
  432408:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  43240c:	str	x0, [x20, #40]
  432410:	b	432350 <nftw@plt+0x2f7d0>
  432414:	ldr	x23, [sp, #48]
  432418:	ldp	x19, x20, [sp, #16]
  43241c:	ldp	x21, x22, [sp, #32]
  432420:	ldp	x29, x30, [sp], #64
  432424:	ret
  432428:	stp	x29, x30, [sp, #-96]!
  43242c:	mov	x29, sp
  432430:	stp	x19, x20, [sp, #16]
  432434:	stp	x21, x22, [sp, #32]
  432438:	stp	x23, x24, [sp, #48]
  43243c:	stp	x25, x26, [sp, #64]
  432440:	stp	x27, x28, [sp, #80]
  432444:	mov	x20, x0
  432448:	mov	x21, x1
  43244c:	sub	w0, w2, #0x1
  432450:	cmp	w0, #0x20
  432454:	mov	w24, #0x22                  	// #34
  432458:	csel	w24, w2, w24, hi  // hi = pmore
  43245c:	ldr	w19, [x20, #8]
  432460:	cbz	w19, 432524 <nftw@plt+0x2f9a4>
  432464:	ldr	x0, [x20]
  432468:	ldr	x0, [x0]
  43246c:	bl	4024f0 <strlen@plt>
  432470:	mov	w19, w0
  432474:	mov	w22, #0x0                   	// #0
  432478:	mov	x25, #0x0                   	// #0
  43247c:	mov	w27, #0x20                  	// #32
  432480:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432484:	add	x26, x26, #0x880
  432488:	mov	x28, #0x4                   	// #4
  43248c:	b	4324bc <nftw@plt+0x2f93c>
  432490:	mov	x3, x21
  432494:	mov	x2, x28
  432498:	mov	x1, #0x1                   	// #1
  43249c:	mov	x0, x26
  4324a0:	bl	4024d0 <fwrite_unlocked@plt>
  4324a4:	add	w19, w23, #0x1
  4324a8:	b	4324bc <nftw@plt+0x2f93c>
  4324ac:	mov	w1, #0x20                  	// #32
  4324b0:	mov	x0, x21
  4324b4:	bl	402800 <__overflow@plt>
  4324b8:	add	w19, w19, #0x1
  4324bc:	ldr	x0, [x20]
  4324c0:	mov	x1, x21
  4324c4:	ldr	x0, [x0, x25]
  4324c8:	bl	402a50 <fputs_unlocked@plt>
  4324cc:	add	w22, w22, #0x1
  4324d0:	ldr	w0, [x20, #8]
  4324d4:	cmp	w0, w22
  4324d8:	b.ls	432524 <nftw@plt+0x2f9a4>  // b.plast
  4324dc:	ubfiz	x25, x22, #3, #32
  4324e0:	ldr	x0, [x20]
  4324e4:	ldr	x0, [x0, w22, uxtw #3]
  4324e8:	bl	4024f0 <strlen@plt>
  4324ec:	mov	x23, x0
  4324f0:	add	w19, w19, w0
  4324f4:	cbz	w22, 4324bc <nftw@plt+0x2f93c>
  4324f8:	cmp	w24, #0x0
  4324fc:	ccmp	w24, w19, #0x2, ne  // ne = any
  432500:	b.cc	432490 <nftw@plt+0x2f910>  // b.lo, b.ul, b.last
  432504:	ldr	x0, [x21, #40]
  432508:	ldr	x1, [x21, #48]
  43250c:	cmp	x0, x1
  432510:	b.cs	4324ac <nftw@plt+0x2f92c>  // b.hs, b.nlast
  432514:	add	x1, x0, #0x1
  432518:	str	x1, [x21, #40]
  43251c:	strb	w27, [x0]
  432520:	b	4324b8 <nftw@plt+0x2f938>
  432524:	ldr	x0, [x21, #40]
  432528:	ldr	x1, [x21, #48]
  43252c:	cmp	x0, x1
  432530:	b.cs	432568 <nftw@plt+0x2f9e8>  // b.hs, b.nlast
  432534:	add	x1, x0, #0x1
  432538:	str	x1, [x21, #40]
  43253c:	mov	w1, #0x3a                  	// #58
  432540:	strb	w1, [x0]
  432544:	add	w19, w19, #0x1
  432548:	ldr	w0, [x20, #24]
  43254c:	cbz	w0, 432608 <nftw@plt+0x2fa88>
  432550:	mov	w23, #0x0                   	// #0
  432554:	mov	w26, #0x20                  	// #32
  432558:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43255c:	add	x27, x27, #0x880
  432560:	mov	x28, #0x4                   	// #4
  432564:	b	4325c4 <nftw@plt+0x2fa44>
  432568:	mov	w1, #0x3a                  	// #58
  43256c:	mov	x0, x21
  432570:	bl	402800 <__overflow@plt>
  432574:	b	432544 <nftw@plt+0x2f9c4>
  432578:	mov	x3, x21
  43257c:	mov	x2, x28
  432580:	mov	x1, #0x1                   	// #1
  432584:	mov	x0, x27
  432588:	bl	4024d0 <fwrite_unlocked@plt>
  43258c:	add	w19, w22, #0x1
  432590:	b	4325a4 <nftw@plt+0x2fa24>
  432594:	add	x1, x0, #0x1
  432598:	str	x1, [x21, #40]
  43259c:	strb	w26, [x0]
  4325a0:	add	w19, w19, #0x1
  4325a4:	ldr	x0, [x20, #16]
  4325a8:	mov	x1, x21
  4325ac:	ldr	x0, [x0, x25, lsl #3]
  4325b0:	bl	402a50 <fputs_unlocked@plt>
  4325b4:	add	w23, w23, #0x1
  4325b8:	ldr	w0, [x20, #24]
  4325bc:	cmp	w0, w23
  4325c0:	b.ls	432608 <nftw@plt+0x2fa88>  // b.plast
  4325c4:	mov	w25, w23
  4325c8:	ldr	x0, [x20, #16]
  4325cc:	ldr	x0, [x0, x25, lsl #3]
  4325d0:	bl	4024f0 <strlen@plt>
  4325d4:	mov	x22, x0
  4325d8:	add	w19, w19, w0
  4325dc:	cmp	w24, #0x0
  4325e0:	ccmp	w24, w19, #0x2, ne  // ne = any
  4325e4:	b.cc	432578 <nftw@plt+0x2f9f8>  // b.lo, b.ul, b.last
  4325e8:	ldr	x0, [x21, #40]
  4325ec:	ldr	x1, [x21, #48]
  4325f0:	cmp	x0, x1
  4325f4:	b.cc	432594 <nftw@plt+0x2fa14>  // b.lo, b.ul, b.last
  4325f8:	mov	w1, #0x20                  	// #32
  4325fc:	mov	x0, x21
  432600:	bl	402800 <__overflow@plt>
  432604:	b	4325a0 <nftw@plt+0x2fa20>
  432608:	ldr	x0, [x21, #40]
  43260c:	ldr	x1, [x21, #48]
  432610:	cmp	x0, x1
  432614:	b.cs	432644 <nftw@plt+0x2fac4>  // b.hs, b.nlast
  432618:	add	x1, x0, #0x1
  43261c:	str	x1, [x21, #40]
  432620:	mov	w1, #0xa                   	// #10
  432624:	strb	w1, [x0]
  432628:	ldp	x19, x20, [sp, #16]
  43262c:	ldp	x21, x22, [sp, #32]
  432630:	ldp	x23, x24, [sp, #48]
  432634:	ldp	x25, x26, [sp, #64]
  432638:	ldp	x27, x28, [sp, #80]
  43263c:	ldp	x29, x30, [sp], #96
  432640:	ret
  432644:	mov	w1, #0xa                   	// #10
  432648:	mov	x0, x21
  43264c:	bl	402800 <__overflow@plt>
  432650:	b	432628 <nftw@plt+0x2faa8>
  432654:	stp	x29, x30, [sp, #-80]!
  432658:	mov	x29, sp
  43265c:	stp	x21, x22, [sp, #32]
  432660:	mov	x21, x0
  432664:	ldr	w0, [x0, #24]
  432668:	cmp	w0, #0x1
  43266c:	b.ls	432714 <nftw@plt+0x2fb94>  // b.plast
  432670:	stp	x19, x20, [sp, #16]
  432674:	stp	x23, x24, [sp, #48]
  432678:	str	x25, [sp, #64]
  43267c:	mov	x19, x1
  432680:	mov	w20, #0x1                   	// #1
  432684:	mov	w22, #0xa                   	// #10
  432688:	mov	w24, #0xa                   	// #10
  43268c:	mov	w23, #0x3a                  	// #58
  432690:	mov	w25, #0x3a                  	// #58
  432694:	ldr	x1, [x19, #40]
  432698:	ldr	x0, [x19, #48]
  43269c:	cmp	x1, x0
  4326a0:	b.cs	432720 <nftw@plt+0x2fba0>  // b.hs, b.nlast
  4326a4:	add	x0, x1, #0x1
  4326a8:	str	x0, [x19, #40]
  4326ac:	strb	w22, [x1]
  4326b0:	ldr	x0, [x21, #16]
  4326b4:	mov	x1, x19
  4326b8:	ldr	x0, [x0, w20, uxtw #3]
  4326bc:	bl	402a50 <fputs_unlocked@plt>
  4326c0:	ldr	x1, [x19, #40]
  4326c4:	ldr	x0, [x19, #48]
  4326c8:	cmp	x1, x0
  4326cc:	b.cs	432730 <nftw@plt+0x2fbb0>  // b.hs, b.nlast
  4326d0:	add	x0, x1, #0x1
  4326d4:	str	x0, [x19, #40]
  4326d8:	strb	w23, [x1]
  4326dc:	ldr	x1, [x19, #40]
  4326e0:	ldr	x0, [x19, #48]
  4326e4:	cmp	x1, x0
  4326e8:	b.cs	432740 <nftw@plt+0x2fbc0>  // b.hs, b.nlast
  4326ec:	add	x0, x1, #0x1
  4326f0:	str	x0, [x19, #40]
  4326f4:	strb	w22, [x1]
  4326f8:	add	w20, w20, #0x1
  4326fc:	ldr	w0, [x21, #24]
  432700:	cmp	w0, w20
  432704:	b.hi	432694 <nftw@plt+0x2fb14>  // b.pmore
  432708:	ldp	x19, x20, [sp, #16]
  43270c:	ldp	x23, x24, [sp, #48]
  432710:	ldr	x25, [sp, #64]
  432714:	ldp	x21, x22, [sp, #32]
  432718:	ldp	x29, x30, [sp], #80
  43271c:	ret
  432720:	mov	w1, w24
  432724:	mov	x0, x19
  432728:	bl	402800 <__overflow@plt>
  43272c:	b	4326b0 <nftw@plt+0x2fb30>
  432730:	mov	w1, w25
  432734:	mov	x0, x19
  432738:	bl	402800 <__overflow@plt>
  43273c:	b	4326dc <nftw@plt+0x2fb5c>
  432740:	mov	w1, w24
  432744:	mov	x0, x19
  432748:	bl	402800 <__overflow@plt>
  43274c:	b	4326f8 <nftw@plt+0x2fb78>
  432750:	stp	x29, x30, [sp, #-80]!
  432754:	mov	x29, sp
  432758:	stp	x19, x20, [sp, #16]
  43275c:	stp	x21, x22, [sp, #32]
  432760:	mov	x20, x0
  432764:	mov	x22, x1
  432768:	mov	x3, x1
  43276c:	mov	x2, #0x1                   	// #1
  432770:	mov	x1, #0x4                   	// #4
  432774:	add	x0, x0, #0x18
  432778:	bl	4024d0 <fwrite_unlocked@plt>
  43277c:	cmp	x0, #0x1
  432780:	b.ne	432820 <nftw@plt+0x2fca0>  // b.any
  432784:	ldr	w0, [x20, #24]
  432788:	cbz	w0, 432828 <nftw@plt+0x2fca8>
  43278c:	stp	x23, x24, [sp, #48]
  432790:	mov	w19, #0x0                   	// #0
  432794:	mov	x23, #0x1                   	// #1
  432798:	mov	x24, #0x8                   	// #8
  43279c:	mov	w21, w19
  4327a0:	ldr	x0, [x20, #16]
  4327a4:	ldr	x0, [x0, x21, lsl #3]
  4327a8:	bl	4024f0 <strlen@plt>
  4327ac:	str	x0, [sp, #72]
  4327b0:	mov	x3, x22
  4327b4:	mov	x2, x23
  4327b8:	mov	x1, x24
  4327bc:	add	x0, sp, #0x48
  4327c0:	bl	4024d0 <fwrite_unlocked@plt>
  4327c4:	cmp	x0, #0x1
  4327c8:	b.ne	432808 <nftw@plt+0x2fc88>  // b.any
  4327cc:	ldr	x0, [x20, #16]
  4327d0:	mov	x3, x22
  4327d4:	mov	x2, x23
  4327d8:	ldr	x1, [sp, #72]
  4327dc:	ldr	x0, [x0, x21, lsl #3]
  4327e0:	bl	4024d0 <fwrite_unlocked@plt>
  4327e4:	cmp	x0, #0x1
  4327e8:	b.ne	432808 <nftw@plt+0x2fc88>  // b.any
  4327ec:	add	w19, w19, #0x1
  4327f0:	ldr	w0, [x20, #24]
  4327f4:	cmp	w0, w19
  4327f8:	b.hi	43279c <nftw@plt+0x2fc1c>  // b.pmore
  4327fc:	mov	w0, #0x0                   	// #0
  432800:	ldp	x23, x24, [sp, #48]
  432804:	b	432810 <nftw@plt+0x2fc90>
  432808:	mov	w0, #0xffffffff            	// #-1
  43280c:	ldp	x23, x24, [sp, #48]
  432810:	ldp	x19, x20, [sp, #16]
  432814:	ldp	x21, x22, [sp, #32]
  432818:	ldp	x29, x30, [sp], #80
  43281c:	ret
  432820:	mov	w0, #0xffffffff            	// #-1
  432824:	b	432810 <nftw@plt+0x2fc90>
  432828:	mov	w0, #0x0                   	// #0
  43282c:	b	432810 <nftw@plt+0x2fc90>
  432830:	stp	x29, x30, [sp, #-96]!
  432834:	mov	x29, sp
  432838:	stp	x21, x22, [sp, #32]
  43283c:	stp	x23, x24, [sp, #48]
  432840:	stp	x25, x26, [sp, #64]
  432844:	mov	x26, x0
  432848:	mov	x21, x1
  43284c:	mov	x23, x2
  432850:	mov	x3, x1
  432854:	mov	x2, #0x4                   	// #4
  432858:	mov	x1, #0x1                   	// #1
  43285c:	add	x0, sp, #0x5c
  432860:	bl	402840 <fread_unlocked@plt>
  432864:	cmp	x0, #0x4
  432868:	b.ne	432980 <nftw@plt+0x2fe00>  // b.any
  43286c:	stp	x19, x20, [sp, #16]
  432870:	mov	x0, #0x200                 	// #512
  432874:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  432878:	mov	x19, x0
  43287c:	ldr	w0, [sp, #92]
  432880:	cbz	w0, 43295c <nftw@plt+0x2fddc>
  432884:	mov	x24, #0x200                 	// #512
  432888:	mov	w20, #0x0                   	// #0
  43288c:	mov	x25, #0x8                   	// #8
  432890:	mov	x22, #0x1                   	// #1
  432894:	b	4328f4 <nftw@plt+0x2fd74>
  432898:	mov	x0, x19
  43289c:	bl	402910 <free@plt>
  4328a0:	mov	w0, #0xffffffff            	// #-1
  4328a4:	ldp	x19, x20, [sp, #16]
  4328a8:	b	43296c <nftw@plt+0x2fdec>
  4328ac:	add	x24, x1, #0x80
  4328b0:	mov	x1, x24
  4328b4:	mov	x0, x19
  4328b8:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  4328bc:	mov	x19, x0
  4328c0:	b	432920 <nftw@plt+0x2fda0>
  4328c4:	mov	x0, x19
  4328c8:	bl	402910 <free@plt>
  4328cc:	mov	w0, #0xffffffff            	// #-1
  4328d0:	ldp	x19, x20, [sp, #16]
  4328d4:	b	43296c <nftw@plt+0x2fdec>
  4328d8:	mov	x1, x19
  4328dc:	mov	x0, x26
  4328e0:	bl	4322b0 <nftw@plt+0x2f730>
  4328e4:	add	w20, w20, #0x1
  4328e8:	ldr	w0, [sp, #92]
  4328ec:	cmp	w0, w20
  4328f0:	b.ls	43295c <nftw@plt+0x2fddc>  // b.plast
  4328f4:	mov	x3, x21
  4328f8:	mov	x2, x25
  4328fc:	mov	x1, x22
  432900:	add	x0, sp, #0x50
  432904:	bl	402840 <fread_unlocked@plt>
  432908:	cmp	x0, #0x8
  43290c:	b.ne	432898 <nftw@plt+0x2fd18>  // b.any
  432910:	ldr	x1, [sp, #80]
  432914:	add	x0, x1, #0x1
  432918:	cmp	x0, x24
  43291c:	b.hi	4328ac <nftw@plt+0x2fd2c>  // b.pmore
  432920:	mov	x3, x21
  432924:	ldr	x2, [sp, #80]
  432928:	mov	x1, x22
  43292c:	mov	x0, x19
  432930:	bl	402840 <fread_unlocked@plt>
  432934:	ldr	x3, [sp, #80]
  432938:	cmp	x0, x3
  43293c:	b.ne	4328c4 <nftw@plt+0x2fd44>  // b.any
  432940:	strb	wzr, [x19, x3]
  432944:	cbz	x23, 4328e4 <nftw@plt+0x2fd64>
  432948:	mov	x1, x23
  43294c:	mov	x0, x19
  432950:	bl	448fdc <nftw@plt+0x4645c>
  432954:	cbz	w0, 4328e4 <nftw@plt+0x2fd64>
  432958:	b	4328d8 <nftw@plt+0x2fd58>
  43295c:	mov	x0, x19
  432960:	bl	402910 <free@plt>
  432964:	mov	w0, #0x0                   	// #0
  432968:	ldp	x19, x20, [sp, #16]
  43296c:	ldp	x21, x22, [sp, #32]
  432970:	ldp	x23, x24, [sp, #48]
  432974:	ldp	x25, x26, [sp, #64]
  432978:	ldp	x29, x30, [sp], #96
  43297c:	ret
  432980:	mov	w0, #0xffffffff            	// #-1
  432984:	b	43296c <nftw@plt+0x2fdec>
  432988:	stp	x29, x30, [sp, #-48]!
  43298c:	mov	x29, sp
  432990:	stp	x19, x20, [sp, #16]
  432994:	str	x21, [sp, #32]
  432998:	mov	w21, #0x1                   	// #1
  43299c:	lsl	w20, w21, w0
  4329a0:	mov	x1, #0x90                  	// #144
  4329a4:	mov	x0, #0x1                   	// #1
  4329a8:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  4329ac:	mov	x19, x0
  4329b0:	adrp	x4, 402000 <memcpy@plt-0x490>
  4329b4:	add	x4, x4, #0x910
  4329b8:	adrp	x3, 44a000 <nftw@plt+0x47480>
  4329bc:	add	x3, x3, #0x710
  4329c0:	mov	x2, #0x0                   	// #0
  4329c4:	mov	x1, #0x0                   	// #0
  4329c8:	bl	44a3d8 <_obstack_begin@@Base>
  4329cc:	str	xzr, [x19, #48]
  4329d0:	mov	x1, #0x8                   	// #8
  4329d4:	mov	w0, w20
  4329d8:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  4329dc:	str	x0, [x19, #88]
  4329e0:	strb	w21, [x19, #136]
  4329e4:	str	w20, [x19, #112]
  4329e8:	mov	x0, x19
  4329ec:	ldp	x19, x20, [sp, #16]
  4329f0:	ldr	x21, [sp, #32]
  4329f4:	ldp	x29, x30, [sp], #48
  4329f8:	ret
  4329fc:	stp	x29, x30, [sp, #-32]!
  432a00:	mov	x29, sp
  432a04:	str	x19, [sp, #16]
  432a08:	mov	x19, x0
  432a0c:	mov	x1, #0x0                   	// #0
  432a10:	bl	44a584 <_obstack_free@@Base>
  432a14:	ldrb	w0, [x19, #136]
  432a18:	cbnz	w0, 432a30 <nftw@plt+0x2feb0>
  432a1c:	mov	x0, x19
  432a20:	bl	402910 <free@plt>
  432a24:	ldr	x19, [sp, #16]
  432a28:	ldp	x29, x30, [sp], #32
  432a2c:	ret
  432a30:	ldr	x0, [x19, #88]
  432a34:	bl	402910 <free@plt>
  432a38:	b	432a1c <nftw@plt+0x2fe9c>
  432a3c:	stp	x29, x30, [sp, #-112]!
  432a40:	mov	x29, sp
  432a44:	stp	x19, x20, [sp, #16]
  432a48:	stp	x21, x22, [sp, #32]
  432a4c:	stp	x23, x24, [sp, #48]
  432a50:	stp	x25, x26, [sp, #64]
  432a54:	stp	x27, x28, [sp, #80]
  432a58:	mov	x20, x0
  432a5c:	str	x1, [sp, #96]
  432a60:	mov	x27, x2
  432a64:	mov	w23, w3
  432a68:	str	w4, [sp, #108]
  432a6c:	ldr	w28, [x0, #112]
  432a70:	sub	w21, w28, #0x1
  432a74:	and	w22, w21, w3
  432a78:	ldr	w0, [x0, #128]
  432a7c:	add	w0, w0, #0x1
  432a80:	str	w0, [x20, #128]
  432a84:	ldr	x25, [x20, #88]
  432a88:	and	w0, w21, w3
  432a8c:	ldr	x19, [x25, x0, lsl #3]
  432a90:	cbz	x19, 432d3c <nftw@plt+0x301bc>
  432a94:	cmn	x19, #0x1
  432a98:	b.eq	432b88 <nftw@plt+0x30008>  // b.none
  432a9c:	ldr	w0, [x19, #12]
  432aa0:	mov	w26, w28
  432aa4:	cmp	w0, w3
  432aa8:	b.eq	432b6c <nftw@plt+0x2ffec>  // b.none
  432aac:	add	w24, w23, w23, lsl #4
  432ab0:	and	w24, w24, w21
  432ab4:	orr	w24, w24, #0x1
  432ab8:	ldr	w0, [x20, #132]
  432abc:	add	w0, w0, #0x1
  432ac0:	str	w0, [x20, #132]
  432ac4:	add	w0, w22, w24
  432ac8:	and	w22, w21, w0
  432acc:	and	w0, w21, w0
  432ad0:	ldr	x19, [x25, x0, lsl #3]
  432ad4:	cbnz	x19, 432bb8 <nftw@plt+0x30038>
  432ad8:	ldr	w0, [sp, #108]
  432adc:	cbz	w0, 432d34 <nftw@plt+0x301b4>
  432ae0:	cmp	w26, w28
  432ae4:	csel	w26, w26, w22, ne  // ne = any
  432ae8:	ldr	x1, [x20, #96]
  432aec:	mov	x0, x20
  432af0:	blr	x1
  432af4:	mov	x19, x0
  432af8:	ldr	x0, [x20, #88]
  432afc:	str	x19, [x0, w26, uxtw #3]
  432b00:	str	w27, [x19, #8]
  432b04:	str	w23, [x19, #12]
  432b08:	ldr	x1, [x20, #104]
  432b0c:	cbz	x1, 432bf0 <nftw@plt+0x30070>
  432b10:	add	x0, x27, #0x1
  432b14:	blr	x1
  432b18:	mov	x21, x0
  432b1c:	mov	x2, x27
  432b20:	ldr	x1, [sp, #96]
  432b24:	bl	402490 <memcpy@plt>
  432b28:	strb	wzr, [x21, x27]
  432b2c:	str	x21, [x19]
  432b30:	ldr	w1, [x20, #116]
  432b34:	add	w1, w1, #0x1
  432b38:	str	w1, [x20, #116]
  432b3c:	ldr	w0, [x20, #112]
  432b40:	add	w2, w0, w0, lsl #1
  432b44:	cmp	w2, w1, lsl #2
  432b48:	b.ls	432c8c <nftw@plt+0x3010c>  // b.plast
  432b4c:	mov	x0, x19
  432b50:	ldp	x19, x20, [sp, #16]
  432b54:	ldp	x21, x22, [sp, #32]
  432b58:	ldp	x23, x24, [sp, #48]
  432b5c:	ldp	x25, x26, [sp, #64]
  432b60:	ldp	x27, x28, [sp, #80]
  432b64:	ldp	x29, x30, [sp], #112
  432b68:	ret
  432b6c:	ldr	w0, [x19, #8]
  432b70:	cmp	w0, w2
  432b74:	b.ne	432aac <nftw@plt+0x2ff2c>  // b.any
  432b78:	ldr	x0, [x19]
  432b7c:	bl	402850 <memcmp@plt>
  432b80:	cbnz	w0, 432aac <nftw@plt+0x2ff2c>
  432b84:	b	432b4c <nftw@plt+0x2ffcc>
  432b88:	mov	w26, w22
  432b8c:	b	432aac <nftw@plt+0x2ff2c>
  432b90:	cmp	w28, w26
  432b94:	csel	w26, w26, w22, eq  // eq = none
  432b98:	ldr	w0, [x20, #132]
  432b9c:	add	w0, w0, #0x1
  432ba0:	str	w0, [x20, #132]
  432ba4:	add	w0, w24, w22
  432ba8:	and	w22, w21, w0
  432bac:	and	w0, w21, w0
  432bb0:	ldr	x19, [x25, x0, lsl #3]
  432bb4:	cbz	x19, 432ad8 <nftw@plt+0x2ff58>
  432bb8:	cmn	x19, #0x1
  432bbc:	b.eq	432b90 <nftw@plt+0x30010>  // b.none
  432bc0:	ldr	w0, [x19, #12]
  432bc4:	cmp	w0, w23
  432bc8:	b.ne	432b98 <nftw@plt+0x30018>  // b.any
  432bcc:	ldr	w0, [x19, #8]
  432bd0:	cmp	w0, w27
  432bd4:	b.ne	432b98 <nftw@plt+0x30018>  // b.any
  432bd8:	mov	x2, x27
  432bdc:	ldr	x1, [sp, #96]
  432be0:	ldr	x0, [x19]
  432be4:	bl	402850 <memcmp@plt>
  432be8:	cbnz	w0, 432b98 <nftw@plt+0x30018>
  432bec:	b	432b4c <nftw@plt+0x2ffcc>
  432bf0:	add	x1, x27, #0x1
  432bf4:	ldr	x0, [x20, #32]
  432bf8:	ldr	x2, [x20, #24]
  432bfc:	sub	x0, x0, x2
  432c00:	cmp	x1, x0
  432c04:	b.hi	432c70 <nftw@plt+0x300f0>  // b.pmore
  432c08:	mov	x2, x27
  432c0c:	ldr	x1, [sp, #96]
  432c10:	ldr	x0, [x20, #24]
  432c14:	bl	402490 <memcpy@plt>
  432c18:	ldr	x1, [x20, #24]
  432c1c:	add	x0, x1, x27
  432c20:	add	x0, x0, #0x1
  432c24:	str	x0, [x20, #24]
  432c28:	strb	wzr, [x1, x27]
  432c2c:	ldr	x2, [x20, #16]
  432c30:	ldr	x1, [x20, #24]
  432c34:	cmp	x1, x2
  432c38:	b.eq	432c7c <nftw@plt+0x300fc>  // b.none
  432c3c:	ldr	x0, [x20, #48]
  432c40:	add	x1, x1, x0
  432c44:	bic	x0, x1, x0
  432c48:	ldr	x1, [x20, #8]
  432c4c:	ldr	x3, [x20, #32]
  432c50:	sub	x4, x0, x1
  432c54:	sub	x1, x3, x1
  432c58:	cmp	x4, x1
  432c5c:	csel	x0, x0, x3, ls  // ls = plast
  432c60:	str	x0, [x20, #24]
  432c64:	str	x0, [x20, #16]
  432c68:	str	x2, [x19]
  432c6c:	b	432b30 <nftw@plt+0x2ffb0>
  432c70:	mov	x0, x20
  432c74:	bl	44a42c <_obstack_newchunk@@Base>
  432c78:	b	432c08 <nftw@plt+0x30088>
  432c7c:	ldrb	w0, [x20, #80]
  432c80:	orr	w0, w0, #0x2
  432c84:	strb	w0, [x20, #80]
  432c88:	b	432c3c <nftw@plt+0x300bc>
  432c8c:	lsl	w22, w0, #1
  432c90:	mov	x1, #0x8                   	// #8
  432c94:	lsl	w0, w0, #1
  432c98:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  432c9c:	mov	x21, x0
  432ca0:	sub	w2, w22, #0x1
  432ca4:	ldr	x0, [x20, #88]
  432ca8:	ldr	w7, [x20, #112]
  432cac:	add	x7, x0, x7, lsl #3
  432cb0:	mov	x5, x0
  432cb4:	b	432cc8 <nftw@plt+0x30148>
  432cb8:	str	x6, [x21, w3, uxtw #3]
  432cbc:	add	x5, x5, #0x8
  432cc0:	cmp	x7, x5
  432cc4:	b.ls	432d10 <nftw@plt+0x30190>  // b.plast
  432cc8:	ldr	x6, [x5]
  432ccc:	sub	x1, x6, #0x1
  432cd0:	cmn	x1, #0x3
  432cd4:	b.hi	432cbc <nftw@plt+0x3013c>  // b.pmore
  432cd8:	ldr	w1, [x6, #12]
  432cdc:	and	w3, w2, w1
  432ce0:	and	w4, w2, w1
  432ce4:	ldr	x4, [x21, x4, lsl #3]
  432ce8:	cbz	x4, 432cb8 <nftw@plt+0x30138>
  432cec:	add	w1, w1, w1, lsl #4
  432cf0:	and	w4, w1, w2
  432cf4:	orr	w4, w4, #0x1
  432cf8:	add	w1, w4, w3
  432cfc:	and	w3, w2, w1
  432d00:	and	w1, w2, w1
  432d04:	ldr	x1, [x21, x1, lsl #3]
  432d08:	cbnz	x1, 432cf8 <nftw@plt+0x30178>
  432d0c:	b	432cb8 <nftw@plt+0x30138>
  432d10:	ldrb	w1, [x20, #136]
  432d14:	cbnz	w1, 432d2c <nftw@plt+0x301ac>
  432d18:	mov	w0, #0x1                   	// #1
  432d1c:	strb	w0, [x20, #136]
  432d20:	str	x21, [x20, #88]
  432d24:	str	w22, [x20, #112]
  432d28:	b	432b4c <nftw@plt+0x2ffcc>
  432d2c:	bl	402910 <free@plt>
  432d30:	b	432d18 <nftw@plt+0x30198>
  432d34:	mov	x19, #0x0                   	// #0
  432d38:	b	432b4c <nftw@plt+0x2ffcc>
  432d3c:	ldr	w0, [sp, #108]
  432d40:	cbz	w0, 432b4c <nftw@plt+0x2ffcc>
  432d44:	mov	w26, w22
  432d48:	b	432ae8 <nftw@plt+0x2ff68>
  432d4c:	stp	x29, x30, [sp, #-16]!
  432d50:	mov	x29, sp
  432d54:	mov	w4, w3
  432d58:	cbz	x2, 432d94 <nftw@plt+0x30214>
  432d5c:	add	x8, x1, x2
  432d60:	mov	x6, x1
  432d64:	mov	w5, #0x0                   	// #0
  432d68:	mov	w7, #0x43                  	// #67
  432d6c:	mul	w5, w5, w7
  432d70:	sub	w5, w5, #0x71
  432d74:	ldrb	w3, [x6], #1
  432d78:	add	w5, w3, w5
  432d7c:	cmp	x8, x6
  432d80:	b.ne	432d6c <nftw@plt+0x301ec>  // b.any
  432d84:	add	w3, w5, w2
  432d88:	bl	432a3c <nftw@plt+0x2febc>
  432d8c:	ldp	x29, x30, [sp], #16
  432d90:	ret
  432d94:	mov	w5, #0x0                   	// #0
  432d98:	b	432d84 <nftw@plt+0x30204>
  432d9c:	stp	x29, x30, [sp, #-64]!
  432da0:	mov	x29, sp
  432da4:	stp	x19, x20, [sp, #16]
  432da8:	stp	x21, x22, [sp, #32]
  432dac:	str	x23, [sp, #48]
  432db0:	mov	x21, x0
  432db4:	mov	x23, x1
  432db8:	mov	x22, x2
  432dbc:	ldr	x19, [x0, #88]
  432dc0:	ldr	w20, [x0, #112]
  432dc4:	add	x20, x19, x20, lsl #3
  432dc8:	b	432dd8 <nftw@plt+0x30258>
  432dcc:	add	x19, x19, #0x8
  432dd0:	cmp	x20, x19
  432dd4:	b.ls	432df8 <nftw@plt+0x30278>  // b.plast
  432dd8:	ldr	x1, [x19]
  432ddc:	sub	x3, x1, #0x1
  432de0:	cmn	x3, #0x3
  432de4:	b.hi	432dcc <nftw@plt+0x3024c>  // b.pmore
  432de8:	mov	x2, x22
  432dec:	ldr	x0, [x21, #120]
  432df0:	blr	x23
  432df4:	cbnz	w0, 432dcc <nftw@plt+0x3024c>
  432df8:	ldp	x19, x20, [sp, #16]
  432dfc:	ldp	x21, x22, [sp, #32]
  432e00:	ldr	x23, [sp, #48]
  432e04:	ldp	x29, x30, [sp], #64
  432e08:	ret
  432e0c:	stp	x29, x30, [sp, #-64]!
  432e10:	mov	x29, sp
  432e14:	stp	x19, x20, [sp, #16]
  432e18:	stp	x21, x22, [sp, #32]
  432e1c:	stp	x23, x24, [sp, #48]
  432e20:	mov	x21, x0
  432e24:	mov	x23, x1
  432e28:	mov	x22, x2
  432e2c:	ldr	x19, [x0, #88]
  432e30:	ldr	w20, [x0, #112]
  432e34:	add	x20, x19, x20, lsl #3
  432e38:	mov	x24, #0xffffffffffffffff    	// #-1
  432e3c:	b	432e4c <nftw@plt+0x302cc>
  432e40:	add	x19, x19, #0x8
  432e44:	cmp	x20, x19
  432e48:	b.ls	432e74 <nftw@plt+0x302f4>  // b.plast
  432e4c:	ldr	x1, [x19]
  432e50:	sub	x3, x1, #0x1
  432e54:	cmn	x3, #0x3
  432e58:	b.hi	432e40 <nftw@plt+0x302c0>  // b.pmore
  432e5c:	mov	x2, x22
  432e60:	ldr	x0, [x21, #120]
  432e64:	blr	x23
  432e68:	cbz	w0, 432e40 <nftw@plt+0x302c0>
  432e6c:	str	x24, [x19]
  432e70:	b	432e40 <nftw@plt+0x302c0>
  432e74:	ldp	x19, x20, [sp, #16]
  432e78:	ldp	x21, x22, [sp, #32]
  432e7c:	ldp	x23, x24, [sp, #48]
  432e80:	ldp	x29, x30, [sp], #64
  432e84:	ret
  432e88:	stp	x29, x30, [sp, #-64]!
  432e8c:	mov	x29, sp
  432e90:	stp	x19, x20, [sp, #16]
  432e94:	stp	x21, x22, [sp, #32]
  432e98:	str	x23, [sp, #48]
  432e9c:	mov	x19, x0
  432ea0:	mov	x22, x1
  432ea4:	mov	w21, w2
  432ea8:	mov	w20, w3
  432eac:	and	w23, w4, #0xff
  432eb0:	ldrb	w0, [x0, #136]
  432eb4:	cbnz	w0, 432edc <nftw@plt+0x3035c>
  432eb8:	str	x22, [x19, #88]
  432ebc:	str	w21, [x19, #112]
  432ec0:	str	w20, [x19, #116]
  432ec4:	strb	w23, [x19, #136]
  432ec8:	ldp	x19, x20, [sp, #16]
  432ecc:	ldp	x21, x22, [sp, #32]
  432ed0:	ldr	x23, [sp, #48]
  432ed4:	ldp	x29, x30, [sp], #64
  432ed8:	ret
  432edc:	ldr	x0, [x19, #88]
  432ee0:	bl	402910 <free@plt>
  432ee4:	b	432eb8 <nftw@plt+0x30338>
  432ee8:	stp	x29, x30, [sp, #-112]!
  432eec:	mov	x29, sp
  432ef0:	stp	x19, x20, [sp, #16]
  432ef4:	stp	x21, x22, [sp, #32]
  432ef8:	stp	x23, x24, [sp, #48]
  432efc:	stp	x25, x26, [sp, #64]
  432f00:	stp	d8, d9, [sp, #80]
  432f04:	str	d10, [sp, #96]
  432f08:	mov	x22, x0
  432f0c:	ldr	x1, [x0, #88]
  432f10:	ldr	w23, [x0, #112]
  432f14:	lsl	x23, x23, #3
  432f18:	add	x0, x1, x23
  432f1c:	movi	d8, #0x0
  432f20:	mov	x24, #0x0                   	// #0
  432f24:	mov	x20, #0x0                   	// #0
  432f28:	mov	x19, #0x0                   	// #0
  432f2c:	mov	x21, #0x0                   	// #0
  432f30:	b	432f44 <nftw@plt+0x303c4>
  432f34:	add	x24, x24, #0x1
  432f38:	add	x1, x1, #0x8
  432f3c:	cmp	x0, x1
  432f40:	b.ls	432f7c <nftw@plt+0x303fc>  // b.plast
  432f44:	ldr	x2, [x1]
  432f48:	cmn	x2, #0x1
  432f4c:	b.eq	432f34 <nftw@plt+0x303b4>  // b.none
  432f50:	cbz	x2, 432f38 <nftw@plt+0x303b8>
  432f54:	ldr	w2, [x2, #8]
  432f58:	mov	w3, w2
  432f5c:	add	x19, x19, x3
  432f60:	ucvtf	d0, w2
  432f64:	fmul	d0, d0, d0
  432f68:	fadd	d8, d8, d0
  432f6c:	cmp	x20, x3
  432f70:	csel	x20, x20, x3, cs  // cs = hs, nlast
  432f74:	add	x21, x21, #0x1
  432f78:	b	432f38 <nftw@plt+0x303b8>
  432f7c:	ldr	w26, [x22, #116]
  432f80:	adrp	x25, 48d000 <_obstack_memory_used@@Base+0x429fc>
  432f84:	mov	w3, w26
  432f88:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432f8c:	add	x2, x2, #0x888
  432f90:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432f94:	add	x1, x1, #0x898
  432f98:	ldr	x0, [x25, #1392]
  432f9c:	bl	402b30 <fprintf@plt>
  432fa0:	ucvtf	d10, w26
  432fa4:	ucvtf	d0, x21
  432fa8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  432fac:	fmov	d1, x0
  432fb0:	fmul	d0, d0, d1
  432fb4:	fdiv	d0, d0, d10
  432fb8:	mov	x3, x21
  432fbc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432fc0:	add	x2, x2, #0x8b0
  432fc4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432fc8:	add	x1, x1, #0x8c0
  432fcc:	ldr	x0, [x25, #1392]
  432fd0:	bl	402b30 <fprintf@plt>
  432fd4:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432fd8:	add	x21, x21, #0x8e0
  432fdc:	ldr	w3, [x22, #112]
  432fe0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432fe4:	add	x2, x2, #0x8d8
  432fe8:	mov	x1, x21
  432fec:	ldr	x0, [x25, #1392]
  432ff0:	bl	402b30 <fprintf@plt>
  432ff4:	mov	x3, x24
  432ff8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  432ffc:	add	x2, x2, #0x8f0
  433000:	mov	x1, x21
  433004:	ldr	x0, [x25, #1392]
  433008:	bl	402b30 <fprintf@plt>
  43300c:	ldr	x0, [x22, #104]
  433010:	cbz	x0, 4331a8 <nftw@plt+0x30628>
  433014:	ldr	x0, [x25, #1392]
  433018:	mov	x1, #0x27ff                	// #10239
  43301c:	cmp	x19, x1
  433020:	b.ls	433048 <nftw@plt+0x304c8>  // b.plast
  433024:	mov	w1, #0x9fffff              	// #10485759
  433028:	cmp	x19, x1
  43302c:	b.hi	43303c <nftw@plt+0x304bc>  // b.pmore
  433030:	lsr	x3, x19, #10
  433034:	mov	w4, #0x6b                  	// #107
  433038:	b	433050 <nftw@plt+0x304d0>
  43303c:	lsr	x3, x19, #20
  433040:	mov	w4, #0x4d                  	// #77
  433044:	b	433050 <nftw@plt+0x304d0>
  433048:	mov	x3, x19
  43304c:	mov	w4, #0x20                  	// #32
  433050:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433054:	add	x2, x2, #0x900
  433058:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43305c:	add	x1, x1, #0x910
  433060:	bl	402b30 <fprintf@plt>
  433064:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  433068:	ldr	x0, [x0, #1392]
  43306c:	mov	w4, #0x20                  	// #32
  433070:	mov	x1, #0x27ff                	// #10239
  433074:	cmp	x23, x1
  433078:	b.ls	433090 <nftw@plt+0x30510>  // b.plast
  43307c:	mov	w1, #0x9fffff              	// #10485759
  433080:	cmp	x23, x1
  433084:	b.hi	43323c <nftw@plt+0x306bc>  // b.pmore
  433088:	lsr	x23, x23, #10
  43308c:	mov	w4, #0x6b                  	// #107
  433090:	mov	x3, x23
  433094:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433098:	add	x2, x2, #0x950
  43309c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4330a0:	add	x1, x1, #0x910
  4330a4:	bl	402b30 <fprintf@plt>
  4330a8:	ucvtf	d9, x19
  4330ac:	fdiv	d9, d9, d10
  4330b0:	ldr	w0, [x22, #132]
  4330b4:	ucvtf	d1, w0
  4330b8:	ldr	w0, [x22, #128]
  4330bc:	ucvtf	d0, w0
  4330c0:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4330c4:	add	x19, x19, #0x970
  4330c8:	adrp	x21, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4330cc:	fdiv	d0, d1, d0
  4330d0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4330d4:	add	x2, x2, #0x960
  4330d8:	mov	x1, x19
  4330dc:	ldr	x0, [x21, #1392]
  4330e0:	bl	402b30 <fprintf@plt>
  4330e4:	ldr	w0, [x22, #128]
  4330e8:	ucvtf	d0, w0
  4330ec:	fdiv	d0, d10, d0
  4330f0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4330f4:	add	x2, x2, #0x980
  4330f8:	mov	x1, x19
  4330fc:	ldr	x0, [x21, #1392]
  433100:	bl	402b30 <fprintf@plt>
  433104:	ldr	x0, [x21, #1392]
  433108:	fdiv	d8, d8, d10
  43310c:	fmul	d0, d9, d9
  433110:	fsub	d8, d8, d0
  433114:	fcmpe	d8, #0.0
  433118:	b.mi	433248 <nftw@plt+0x306c8>  // b.first
  43311c:	movi	d1, #0x0
  433120:	fcmp	d8, d1
  433124:	b.eq	433150 <nftw@plt+0x305d0>  // b.none
  433128:	fmov	d1, d8
  43312c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433130:	ldr	d3, [x1, #2552]
  433134:	fmul	d0, d1, d1
  433138:	fsub	d0, d0, d8
  43313c:	fadd	d2, d1, d1
  433140:	fdiv	d0, d0, d2
  433144:	fsub	d1, d1, d0
  433148:	fcmpe	d0, d3
  43314c:	b.gt	433134 <nftw@plt+0x305b4>
  433150:	fmov	d0, d9
  433154:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433158:	add	x2, x2, #0x9b8
  43315c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433160:	add	x1, x1, #0x9c8
  433164:	bl	402b30 <fprintf@plt>
  433168:	mov	x3, x20
  43316c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433170:	add	x2, x2, #0x9e8
  433174:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433178:	add	x1, x1, #0x8e0
  43317c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  433180:	ldr	x0, [x0, #1392]
  433184:	bl	402b30 <fprintf@plt>
  433188:	ldp	x19, x20, [sp, #16]
  43318c:	ldp	x21, x22, [sp, #32]
  433190:	ldp	x23, x24, [sp, #48]
  433194:	ldp	x25, x26, [sp, #64]
  433198:	ldp	d8, d9, [sp, #80]
  43319c:	ldr	d10, [sp, #96]
  4331a0:	ldp	x29, x30, [sp], #112
  4331a4:	ret
  4331a8:	mov	x0, x22
  4331ac:	bl	44a604 <_obstack_memory_used@@Base>
  4331b0:	sub	x5, x0, x19
  4331b4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4331b8:	ldr	x0, [x0, #1392]
  4331bc:	mov	x1, #0x27ff                	// #10239
  4331c0:	cmp	x19, x1
  4331c4:	b.ls	4331ec <nftw@plt+0x3066c>  // b.plast
  4331c8:	mov	w1, #0x9fffff              	// #10485759
  4331cc:	cmp	x19, x1
  4331d0:	b.hi	4331e0 <nftw@plt+0x30660>  // b.pmore
  4331d4:	lsr	x3, x19, #10
  4331d8:	mov	w4, #0x6b                  	// #107
  4331dc:	b	4331f4 <nftw@plt+0x30674>
  4331e0:	lsr	x3, x19, #20
  4331e4:	mov	w4, #0x4d                  	// #77
  4331e8:	b	4331f4 <nftw@plt+0x30674>
  4331ec:	mov	x3, x19
  4331f0:	mov	w4, #0x20                  	// #32
  4331f4:	mov	w6, #0x20                  	// #32
  4331f8:	mov	x1, #0x27ff                	// #10239
  4331fc:	cmp	x5, x1
  433200:	b.ls	433218 <nftw@plt+0x30698>  // b.plast
  433204:	mov	w1, #0x9fffff              	// #10485759
  433208:	cmp	x5, x1
  43320c:	b.hi	433230 <nftw@plt+0x306b0>  // b.pmore
  433210:	lsr	x5, x5, #10
  433214:	mov	w6, #0x6b                  	// #107
  433218:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43321c:	add	x2, x2, #0x920
  433220:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433224:	add	x1, x1, #0x930
  433228:	bl	402b30 <fprintf@plt>
  43322c:	b	433064 <nftw@plt+0x304e4>
  433230:	lsr	x5, x5, #20
  433234:	mov	w6, #0x4d                  	// #77
  433238:	b	433218 <nftw@plt+0x30698>
  43323c:	lsr	x23, x23, #20
  433240:	mov	w4, #0x4d                  	// #77
  433244:	b	433090 <nftw@plt+0x30510>
  433248:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43324c:	add	x2, x2, #0x990
  433250:	mov	w1, #0x165                 	// #357
  433254:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433258:	add	x0, x0, #0x9a0
  43325c:	bl	408d8c <nftw@plt+0x620c>
  433260:	ldr	w2, [x0, #40]
  433264:	add	w2, w2, #0x1
  433268:	str	w2, [x0, #40]
  43326c:	ldr	w3, [x0, #36]
  433270:	cmp	w2, w3
  433274:	b.hi	433280 <nftw@plt+0x30700>  // b.pmore
  433278:	ldr	x0, [x0, #8]
  43327c:	str	x1, [x0, w2, uxtw #3]
  433280:	ret
  433284:	ldrb	w6, [x3]
  433288:	cbz	x2, 433320 <nftw@plt+0x307a0>
  43328c:	add	x5, x0, #0x1
  433290:	adrp	x7, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  433294:	add	x7, x7, #0xe68
  433298:	mov	w11, #0x20                  	// #32
  43329c:	mov	w9, #0x27                  	// #39
  4332a0:	mov	w10, #0x0                   	// #0
  4332a4:	b	4332f0 <nftw@plt+0x30770>
  4332a8:	add	x1, x1, #0x1
  4332ac:	subs	x2, x2, #0x1
  4332b0:	b.eq	4332c4 <nftw@plt+0x30744>  // b.none
  4332b4:	ldrb	w4, [x1]
  4332b8:	ldrh	w4, [x7, x4, lsl #1]
  4332bc:	tst	w4, #0xc00
  4332c0:	b.ne	4332a8 <nftw@plt+0x30728>  // b.any
  4332c4:	mov	x8, x5
  4332c8:	sturb	w11, [x5, #-1]
  4332cc:	mov	w6, #0x0                   	// #0
  4332d0:	b	4332e8 <nftw@plt+0x30768>
  4332d4:	mov	w6, w4
  4332d8:	add	x1, x1, #0x1
  4332dc:	mov	x8, x5
  4332e0:	sturb	w4, [x5, #-1]
  4332e4:	sub	x2, x2, #0x1
  4332e8:	add	x5, x5, #0x1
  4332ec:	cbz	x2, 433324 <nftw@plt+0x307a4>
  4332f0:	ldrb	w4, [x1]
  4332f4:	ldrh	w8, [x7, w4, sxtw #1]
  4332f8:	tst	w8, #0xc00
  4332fc:	ccmp	w6, #0x0, #0x0, ne  // ne = any
  433300:	b.eq	4332a8 <nftw@plt+0x30728>  // b.none
  433304:	cmp	w4, #0x22
  433308:	ccmp	w4, w9, #0x4, ne  // ne = any
  43330c:	b.ne	4332d8 <nftw@plt+0x30758>  // b.any
  433310:	cbz	w6, 4332d4 <nftw@plt+0x30754>
  433314:	cmp	w4, w6
  433318:	csel	w6, w6, w10, ne  // ne = any
  43331c:	b	4332d8 <nftw@plt+0x30758>
  433320:	mov	x8, x0
  433324:	strb	w6, [x3]
  433328:	sub	x0, x8, x0
  43332c:	ret
  433330:	stp	x29, x30, [sp, #-64]!
  433334:	mov	x29, sp
  433338:	stp	x19, x20, [sp, #16]
  43333c:	stp	x21, x22, [sp, #32]
  433340:	stp	x23, x24, [sp, #48]
  433344:	mov	x19, x0
  433348:	mov	x20, x1
  43334c:	mov	w21, w2
  433350:	ldr	x0, [x0, #40]
  433354:	ldr	w23, [x0, #60]
  433358:	ldr	x22, [x19]
  43335c:	str	x1, [x22]
  433360:	ldr	x0, [x19, #136]
  433364:	ldr	x0, [x0, #8]
  433368:	cbz	x0, 4333e0 <nftw@plt+0x30860>
  43336c:	ldr	x2, [x19]
  433370:	ldr	x0, [x2]
  433374:	ldrb	w1, [x0, #1]
  433378:	cmp	w1, #0x2f
  43337c:	cinc	x0, x0, eq  // eq = none
  433380:	add	x0, x0, #0x1
  433384:	b	433394 <nftw@plt+0x30814>
  433388:	ldurb	w1, [x0, #-2]
  43338c:	cmp	w1, #0x2a
  433390:	b.eq	4333d4 <nftw@plt+0x30854>  // b.none
  433394:	mov	x3, x0
  433398:	ldrb	w1, [x0], #1
  43339c:	cmp	w1, #0x2f
  4333a0:	b.eq	433388 <nftw@plt+0x30808>  // b.none
  4333a4:	cmp	w1, #0xa
  4333a8:	b.ne	433394 <nftw@plt+0x30814>  // b.any
  4333ac:	str	x3, [x2]
  4333b0:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4333b4:	add	x4, x4, #0x98
  4333b8:	mov	w3, #0x0                   	// #0
  4333bc:	mov	w2, w23
  4333c0:	mov	w1, #0x3                   	// #3
  4333c4:	mov	x0, x19
  4333c8:	bl	41fb7c <nftw@plt+0x1cffc>
  4333cc:	mov	w24, #0x1                   	// #1
  4333d0:	b	4333f0 <nftw@plt+0x30870>
  4333d4:	str	x0, [x2]
  4333d8:	mov	w24, #0x0                   	// #0
  4333dc:	b	4333f0 <nftw@plt+0x30870>
  4333e0:	mov	x0, x19
  4333e4:	bl	4270cc <nftw@plt+0x2454c>
  4333e8:	ands	w24, w0, #0xff
  4333ec:	b.ne	4333b0 <nftw@plt+0x30830>  // b.any
  4333f0:	ldrb	w1, [x19, #16]
  4333f4:	cbz	w1, 433438 <nftw@plt+0x308b8>
  4333f8:	cbz	w21, 433414 <nftw@plt+0x30894>
  4333fc:	ldrb	w0, [x19, #1124]
  433400:	cbz	w0, 433450 <nftw@plt+0x308d0>
  433404:	ldr	x0, [x19, #1328]
  433408:	sub	x0, x0, #0x1
  43340c:	str	x0, [x19, #1328]
  433410:	b	433420 <nftw@plt+0x308a0>
  433414:	ldr	x0, [x19, #1328]
  433418:	mov	w1, #0x20                  	// #32
  43341c:	sturb	w1, [x0, #-1]
  433420:	ldr	x0, [x22]
  433424:	ldp	x19, x20, [sp, #16]
  433428:	ldp	x21, x22, [sp, #32]
  43342c:	ldp	x23, x24, [sp, #48]
  433430:	ldp	x29, x30, [sp], #64
  433434:	ret
  433438:	ldrb	w0, [x19, #1123]
  43343c:	cbz	w0, 433450 <nftw@plt+0x308d0>
  433440:	ldr	x0, [x19, #1328]
  433444:	sub	x0, x0, #0x1
  433448:	str	x0, [x19, #1328]
  43344c:	b	433420 <nftw@plt+0x308a0>
  433450:	ldr	x21, [x22]
  433454:	sub	x21, x21, x20
  433458:	mov	x2, x21
  43345c:	mov	x1, x20
  433460:	ldr	x0, [x19, #1328]
  433464:	bl	402490 <memcpy@plt>
  433468:	ldr	x1, [x19, #1328]
  43346c:	add	x0, x1, x21
  433470:	cbnz	w24, 43347c <nftw@plt+0x308fc>
  433474:	str	x0, [x19, #1328]
  433478:	b	433420 <nftw@plt+0x308a0>
  43347c:	add	x0, x0, #0x1
  433480:	str	x0, [x19, #1328]
  433484:	mov	w0, #0x2a                  	// #42
  433488:	strb	w0, [x1, x21]
  43348c:	ldr	x0, [x19, #1328]
  433490:	add	x1, x0, #0x1
  433494:	str	x1, [x19, #1328]
  433498:	mov	w1, #0x2f                  	// #47
  43349c:	strb	w1, [x0]
  4334a0:	b	433420 <nftw@plt+0x308a0>
  4334a4:	stp	x29, x30, [sp, #-48]!
  4334a8:	mov	x29, sp
  4334ac:	stp	x19, x20, [sp, #16]
  4334b0:	str	x21, [sp, #32]
  4334b4:	mov	x19, x0
  4334b8:	mov	x0, x1
  4334bc:	mov	w21, w2
  4334c0:	ldr	x5, [x19, #1328]
  4334c4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4334c8:	add	x20, x20, #0xe68
  4334cc:	mov	x1, x0
  4334d0:	ldrb	w3, [x1], #1
  4334d4:	mov	x4, x5
  4334d8:	strb	w3, [x4], #1
  4334dc:	mov	w2, w3
  4334e0:	ldrh	w2, [x20, x2, lsl #1]
  4334e4:	tbnz	w2, #11, 433514 <nftw@plt+0x30994>
  4334e8:	cmp	w3, #0x2f
  4334ec:	b.ne	433500 <nftw@plt+0x30980>  // b.any
  4334f0:	ldrb	w2, [x0, #1]
  4334f4:	cmp	w2, #0x2a
  4334f8:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  4334fc:	b.ne	433520 <nftw@plt+0x309a0>  // b.any
  433500:	str	x5, [x19, #1328]
  433504:	ldp	x19, x20, [sp, #16]
  433508:	ldr	x21, [sp, #32]
  43350c:	ldp	x29, x30, [sp], #48
  433510:	ret
  433514:	mov	x5, x4
  433518:	mov	x0, x1
  43351c:	b	4334cc <nftw@plt+0x3094c>
  433520:	str	x4, [x19, #1328]
  433524:	mov	w2, #0x0                   	// #0
  433528:	mov	x0, x19
  43352c:	bl	433330 <nftw@plt+0x307b0>
  433530:	ldr	x5, [x19, #1328]
  433534:	b	4334cc <nftw@plt+0x3094c>
  433538:	stp	x29, x30, [sp, #-64]!
  43353c:	mov	x29, sp
  433540:	stp	x19, x20, [sp, #16]
  433544:	stp	x21, x22, [sp, #32]
  433548:	mov	x19, x0
  43354c:	mov	x20, x1
  433550:	ldr	x21, [x0, #1328]
  433554:	ldr	x0, [x0, #1312]
  433558:	sub	x21, x21, x0
  43355c:	ldrh	w0, [x1, #16]
  433560:	cbz	w0, 4335f0 <nftw@plt+0x30a70>
  433564:	str	x23, [sp, #48]
  433568:	mov	w22, w2
  43356c:	add	x0, x21, #0xd
  433570:	and	x23, x0, #0xfffffffffffffff8
  433574:	ldr	w2, [x1, #12]
  433578:	add	x2, x2, x23
  43357c:	ldr	x1, [x19, #56]
  433580:	ldr	x0, [x1, #24]
  433584:	ldr	x1, [x1, #16]
  433588:	sub	x0, x0, x1
  43358c:	cmp	x2, x0
  433590:	b.hi	433620 <nftw@plt+0x30aa0>  // b.pmore
  433594:	ldr	x0, [x19, #56]
  433598:	ldr	x1, [x0, #16]
  43359c:	ldr	w2, [x20, #12]
  4335a0:	add	x0, x1, x2
  4335a4:	str	x1, [x20, #24]
  4335a8:	str	w21, [x1, x2]
  4335ac:	strh	w22, [x0, #4]
  4335b0:	mov	x2, x21
  4335b4:	ldr	x1, [x19, #1312]
  4335b8:	add	x0, x0, #0x6
  4335bc:	bl	402490 <memcpy@plt>
  4335c0:	ldr	x0, [x19, #1312]
  4335c4:	str	x0, [x19, #1328]
  4335c8:	ldr	w0, [x20, #12]
  4335cc:	add	w0, w0, w23
  4335d0:	str	w0, [x20, #12]
  4335d4:	cbnz	w22, 433630 <nftw@plt+0x30ab0>
  4335d8:	ldr	x1, [x19, #56]
  4335dc:	ldr	x2, [x1, #16]
  4335e0:	add	x0, x2, w0, uxtw
  4335e4:	str	x0, [x1, #16]
  4335e8:	ldr	x23, [sp, #48]
  4335ec:	b	433634 <nftw@plt+0x30ab4>
  4335f0:	add	x1, x21, #0x1
  4335f4:	mov	x0, x19
  4335f8:	bl	4283c0 <nftw@plt+0x25840>
  4335fc:	mov	x22, x0
  433600:	mov	x2, x21
  433604:	ldr	x1, [x19, #1312]
  433608:	bl	402490 <memcpy@plt>
  43360c:	mov	w0, #0xa                   	// #10
  433610:	strb	w0, [x22, x21]
  433614:	str	x22, [x20, #24]
  433618:	str	w21, [x20, #12]
  43361c:	b	433634 <nftw@plt+0x30ab4>
  433620:	add	x1, x19, #0x38
  433624:	mov	x0, x19
  433628:	bl	428330 <nftw@plt+0x257b0>
  43362c:	b	433594 <nftw@plt+0x30a14>
  433630:	ldr	x23, [sp, #48]
  433634:	ldp	x19, x20, [sp, #16]
  433638:	ldp	x21, x22, [sp, #32]
  43363c:	ldp	x29, x30, [sp], #64
  433640:	ret
  433644:	ldrh	w2, [x1, #18]
  433648:	tbz	w2, #6, 4336c8 <nftw@plt+0x30b48>
  43364c:	ldrb	w2, [x1, #18]
  433650:	and	w2, w2, #0x3
  433654:	cmp	w2, #0x3
  433658:	b.eq	4336b8 <nftw@plt+0x30b38>  // b.none
  43365c:	ldr	x2, [x1, #24]
  433660:	ldrb	w2, [x2, #19]
  433664:	ubfx	x2, x2, #2, #1
  433668:	cbz	w2, 433690 <nftw@plt+0x30b10>
  43366c:	ldr	x2, [x0, #136]
  433670:	mov	x3, #0x1                   	// #1
  433674:	ldr	x2, [x2, #8]
  433678:	cbz	x2, 4336d0 <nftw@plt+0x30b50>
  43367c:	add	x3, x3, #0x1
  433680:	ldr	x4, [x2, #40]
  433684:	cmp	x4, x1
  433688:	ccmp	x3, #0x14, #0x0, eq  // eq = none
  43368c:	b.ls	433674 <nftw@plt+0x30af4>  // b.plast
  433690:	stp	x29, x30, [sp, #-16]!
  433694:	mov	x29, sp
  433698:	ldr	x3, [x1]
  43369c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4336a0:	add	x2, x2, #0xa00
  4336a4:	mov	w1, #0x3                   	// #3
  4336a8:	bl	41f990 <nftw@plt+0x1ce10>
  4336ac:	mov	w0, #0x1                   	// #1
  4336b0:	ldp	x29, x30, [sp], #16
  4336b4:	ret
  4336b8:	ldr	w2, [x1, #24]
  4336bc:	cmp	w2, #0xa
  4336c0:	cset	w2, eq  // eq = none
  4336c4:	b	433668 <nftw@plt+0x30ae8>
  4336c8:	mov	w0, #0x0                   	// #0
  4336cc:	ret
  4336d0:	mov	w0, #0x0                   	// #0
  4336d4:	ret
  4336d8:	stp	x29, x30, [sp, #-48]!
  4336dc:	mov	x29, sp
  4336e0:	stp	x19, x20, [sp, #16]
  4336e4:	mov	x20, x0
  4336e8:	add	x1, x1, #0x3
  4336ec:	ldr	x2, [x0, #1328]
  4336f0:	ldr	x0, [x0, #1320]
  4336f4:	sub	x0, x0, x2
  4336f8:	cmp	x0, x1
  4336fc:	b.cc	43370c <nftw@plt+0x30b8c>  // b.lo, b.ul, b.last
  433700:	ldp	x19, x20, [sp, #16]
  433704:	ldp	x29, x30, [sp], #48
  433708:	ret
  43370c:	str	x21, [sp, #32]
  433710:	ldr	x0, [x20, #1312]
  433714:	sub	x21, x2, x0
  433718:	add	x1, x1, x21
  43371c:	add	x1, x1, x1, lsl #1
  433720:	lsr	x19, x1, #1
  433724:	mov	x1, x19
  433728:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  43372c:	str	x0, [x20, #1312]
  433730:	add	x19, x0, x19
  433734:	str	x19, [x20, #1320]
  433738:	add	x0, x0, x21
  43373c:	str	x0, [x20, #1328]
  433740:	ldr	x21, [sp, #32]
  433744:	b	433700 <nftw@plt+0x30b80>
  433748:	stp	x29, x30, [sp, #-64]!
  43374c:	mov	x29, sp
  433750:	stp	x19, x20, [sp, #16]
  433754:	stp	x21, x22, [sp, #32]
  433758:	mov	x20, x0
  43375c:	mov	x19, x1
  433760:	ldrb	w0, [x1, #18]
  433764:	and	w0, w0, #0x3
  433768:	cmp	w0, #0x3
  43376c:	b.eq	4337ac <nftw@plt+0x30c2c>  // b.none
  433770:	ldr	x1, [x1, #24]
  433774:	ldrb	w0, [x1, #19]
  433778:	orr	w0, w0, #0x20
  43377c:	strb	w0, [x1, #19]
  433780:	ldr	x22, [x1, #24]
  433784:	ldr	w21, [x1, #12]
  433788:	mov	x3, x21
  43378c:	mov	x2, x22
  433790:	mov	x1, x19
  433794:	mov	x0, x20
  433798:	bl	42e714 <nftw@plt+0x2bb94>
  43379c:	ldp	x19, x20, [sp, #16]
  4337a0:	ldp	x21, x22, [sp, #32]
  4337a4:	ldp	x29, x30, [sp], #64
  4337a8:	ret
  4337ac:	str	x23, [sp, #48]
  4337b0:	mov	w2, #0x0                   	// #0
  4337b4:	mov	x0, x20
  4337b8:	bl	42dfc8 <nftw@plt+0x2b448>
  4337bc:	mov	x23, x0
  4337c0:	bl	4024f0 <strlen@plt>
  4337c4:	mov	x21, x0
  4337c8:	add	x1, x0, #0x1
  4337cc:	mov	x0, x20
  4337d0:	bl	4283c0 <nftw@plt+0x25840>
  4337d4:	mov	x22, x0
  4337d8:	mov	x2, x21
  4337dc:	mov	x1, x23
  4337e0:	bl	402490 <memcpy@plt>
  4337e4:	mov	w0, #0xa                   	// #10
  4337e8:	strb	w0, [x22, x21]
  4337ec:	ldr	x23, [sp, #48]
  4337f0:	b	433788 <nftw@plt+0x30c08>
  4337f4:	stp	x29, x30, [sp, #-32]!
  4337f8:	mov	x29, sp
  4337fc:	stp	x19, x20, [sp, #16]
  433800:	mov	x20, x0
  433804:	ldr	x19, [x0, #1328]
  433808:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43380c:	add	x3, x3, #0xe68
  433810:	mov	w4, #0x204                 	// #516
  433814:	ldrb	w2, [x1], #1
  433818:	strb	w2, [x19], #1
  43381c:	ldrb	w2, [x1]
  433820:	ldrh	w2, [x3, x2, lsl #1]
  433824:	tst	w4, w2
  433828:	b.ne	433814 <nftw@plt+0x30c94>  // b.any
  43382c:	ldr	x0, [x20, #136]
  433830:	str	x1, [x0, #16]
  433834:	ldr	x1, [x20, #1328]
  433838:	mov	w3, #0x1                   	// #1
  43383c:	sub	x2, x19, x1
  433840:	ldr	x0, [x20, #1088]
  433844:	bl	432d4c <nftw@plt+0x301cc>
  433848:	str	x19, [x20, #1328]
  43384c:	ldp	x19, x20, [sp, #16]
  433850:	ldp	x29, x30, [sp], #32
  433854:	ret
  433858:	ldr	x3, [x0]
  43385c:	str	x3, [x0, #8]
  433860:	ldr	x4, [x3]
  433864:	str	x4, [x0, #1344]
  433868:	ldr	x4, [x3, #32]
  43386c:	str	x4, [x0, #1352]
  433870:	ldr	x4, [x3, #16]
  433874:	str	x4, [x0, #1360]
  433878:	strb	wzr, [x3, #104]
  43387c:	str	x1, [x3]
  433880:	str	x1, [x3, #8]
  433884:	add	x1, x1, x2
  433888:	str	x1, [x3, #32]
  43388c:	ret
  433890:	ldr	x1, [x0, #8]
  433894:	ldr	x2, [x0, #1344]
  433898:	str	x2, [x1]
  43389c:	ldr	x2, [x0, #1352]
  4338a0:	str	x2, [x1, #32]
  4338a4:	ldr	x2, [x0, #1360]
  4338a8:	str	x2, [x1, #8]
  4338ac:	mov	w2, #0x1                   	// #1
  4338b0:	strb	w2, [x1, #104]
  4338b4:	str	xzr, [x0, #8]
  4338b8:	ret
  4338bc:	stp	x29, x30, [sp, #-272]!
  4338c0:	mov	x29, sp
  4338c4:	stp	x19, x20, [sp, #16]
  4338c8:	stp	x21, x22, [sp, #32]
  4338cc:	stp	x23, x24, [sp, #48]
  4338d0:	stp	x25, x26, [sp, #64]
  4338d4:	stp	x27, x28, [sp, #80]
  4338d8:	mov	x21, x0
  4338dc:	str	x1, [sp, #128]
  4338e0:	str	xzr, [sp, #224]
  4338e4:	str	xzr, [sp, #232]
  4338e8:	str	xzr, [sp, #240]
  4338ec:	str	xzr, [sp, #248]
  4338f0:	str	wzr, [sp, #256]
  4338f4:	str	wzr, [sp, #260]
  4338f8:	str	wzr, [sp, #264]
  4338fc:	ldrb	w0, [x0, #19]
  433900:	cmp	w0, #0x0
  433904:	cset	w25, ne  // ne = any
  433908:	ldr	x0, [x21, #136]
  43390c:	ldr	x1, [x21]
  433910:	ldr	x1, [x1]
  433914:	str	x1, [x0, #16]
  433918:	ldr	x0, [x21, #136]
  43391c:	ldr	x1, [x21]
  433920:	ldr	x1, [x1, #32]
  433924:	str	x1, [x0, #24]
  433928:	ands	w27, w2, #0xff
  43392c:	b.ne	433944 <nftw@plt+0x30dc4>  // b.any
  433930:	ldr	x0, [x21, #1312]
  433934:	str	x0, [x21, #1328]
  433938:	ldr	x0, [x21, #40]
  43393c:	ldr	w0, [x0, #60]
  433940:	str	w0, [x21, #1336]
  433944:	ldr	x0, [x21]
  433948:	ldr	x0, [x0]
  43394c:	str	x0, [sp, #120]
  433950:	mov	w22, #0x0                   	// #0
  433954:	mov	w28, #0x0                   	// #0
  433958:	str	wzr, [sp, #112]
  43395c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  433960:	add	x0, x0, #0xa58
  433964:	str	x0, [sp, #104]
  433968:	ldr	x26, [x21, #136]
  43396c:	ldr	x23, [x26, #16]
  433970:	ldr	x1, [x26, #24]
  433974:	sub	x1, x1, x23
  433978:	mov	x0, x21
  43397c:	bl	4336d8 <nftw@plt+0x30b58>
  433980:	ldr	x24, [x21, #1328]
  433984:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  433988:	add	x0, x0, #0xe68
  43398c:	str	x0, [sp, #136]
  433990:	b	4339d8 <nftw@plt+0x30e58>
  433994:	mov	x24, x20
  433998:	mov	x23, x19
  43399c:	b	4339d8 <nftw@plt+0x30e58>
  4339a0:	mov	x24, x20
  4339a4:	mov	x23, x19
  4339a8:	mov	w22, #0x6                   	// #6
  4339ac:	b	4339d8 <nftw@plt+0x30e58>
  4339b0:	mov	x24, x20
  4339b4:	mov	x23, x19
  4339b8:	mov	w22, #0x3                   	// #3
  4339bc:	b	4339d8 <nftw@plt+0x30e58>
  4339c0:	mov	x24, x20
  4339c4:	mov	x23, x19
  4339c8:	mov	w22, #0x8                   	// #8
  4339cc:	b	4339d8 <nftw@plt+0x30e58>
  4339d0:	mov	w25, #0x0                   	// #0
  4339d4:	mov	w22, #0x0                   	// #0
  4339d8:	ldr	x0, [x26, #8]
  4339dc:	cmp	x0, #0x0
  4339e0:	ccmp	w27, #0x0, #0x0, eq  // eq = none
  4339e4:	b.eq	433a24 <nftw@plt+0x30ea4>  // b.none
  4339e8:	mov	x19, x23
  4339ec:	ldrb	w0, [x19], #1
  4339f0:	mov	x20, x24
  4339f4:	strb	w0, [x20], #1
  4339f8:	cmp	w0, #0x7a
  4339fc:	b.hi	433b70 <nftw@plt+0x30ff0>  // b.pmore
  433a00:	ldr	x1, [sp, #104]
  433a04:	ldrh	w1, [x1, w0, uxtw #1]
  433a08:	adr	x2, 433a14 <nftw@plt+0x30e94>
  433a0c:	add	x1, x2, w1, sxth #2
  433a10:	br	x1
  433a14:	mov	x24, x20
  433a18:	mov	x23, x19
  433a1c:	mov	w22, #0x5                   	// #5
  433a20:	b	4339d8 <nftw@plt+0x30e58>
  433a24:	ldr	x1, [x21]
  433a28:	ldr	w0, [x1, #56]
  433a2c:	ldr	x2, [x1, #48]
  433a30:	lsl	x0, x0, #4
  433a34:	ldr	x0, [x2, x0]
  433a38:	cmp	x0, x23
  433a3c:	b.hi	4339e8 <nftw@plt+0x30e68>  // b.pmore
  433a40:	str	x23, [x1]
  433a44:	mov	w1, #0x0                   	// #0
  433a48:	mov	x0, x21
  433a4c:	bl	426e70 <nftw@plt+0x242f0>
  433a50:	b	4339e8 <nftw@plt+0x30e68>
  433a54:	ldr	x0, [x26, #8]
  433a58:	cbnz	x0, 433b20 <nftw@plt+0x30fa0>
  433a5c:	str	x24, [x21, #1328]
  433a60:	ldr	x0, [x21]
  433a64:	str	x19, [x0]
  433a68:	cbnz	w27, 433ae8 <nftw@plt+0x30f68>
  433a6c:	ldr	x0, [x21]
  433a70:	mov	w1, #0x1                   	// #1
  433a74:	strb	w1, [x0, #104]
  433a78:	ldr	x0, [x21, #40]
  433a7c:	ldr	w1, [x0, #12]
  433a80:	sub	w1, w1, #0x1
  433a84:	sbfiz	x2, x1, #1, #32
  433a88:	add	x1, x2, w1, sxtw
  433a8c:	lsl	x1, x1, #3
  433a90:	ldr	x4, [x0]
  433a94:	add	x3, x4, x1
  433a98:	ldr	w2, [x0, #60]
  433a9c:	ldr	w1, [x4, x1]
  433aa0:	sub	w1, w2, w1
  433aa4:	ldrb	w2, [x3, #6]
  433aa8:	lsr	w1, w1, w2
  433aac:	ldr	w3, [x3, #16]
  433ab0:	add	w3, w3, #0x1
  433ab4:	mov	w2, #0x0                   	// #0
  433ab8:	add	w1, w1, w3
  433abc:	bl	42b748 <nftw@plt+0x28bc8>
  433ac0:	sub	w0, w22, #0x1
  433ac4:	cmp	w0, #0x1
  433ac8:	b.hi	433b30 <nftw@plt+0x30fb0>  // b.pmore
  433acc:	ldrb	w0, [x21, #16]
  433ad0:	cbnz	w0, 4344d8 <nftw@plt+0x31958>
  433ad4:	mov	x0, x21
  433ad8:	bl	427588 <nftw@plt+0x24a08>
  433adc:	and	w0, w0, #0xff
  433ae0:	cbnz	w0, 433b40 <nftw@plt+0x30fc0>
  433ae4:	mov	w27, #0x1                   	// #1
  433ae8:	ldr	x1, [sp, #224]
  433aec:	cbz	x1, 433af8 <nftw@plt+0x30f78>
  433af0:	mov	x0, x21
  433af4:	bl	428148 <nftw@plt+0x255c8>
  433af8:	cmp	w22, #0x2
  433afc:	b.eq	4344e0 <nftw@plt+0x31960>  // b.none
  433b00:	mov	w0, w27
  433b04:	ldp	x19, x20, [sp, #16]
  433b08:	ldp	x21, x22, [sp, #32]
  433b0c:	ldp	x23, x24, [sp, #48]
  433b10:	ldp	x25, x26, [sp, #64]
  433b14:	ldp	x27, x28, [sp, #80]
  433b18:	ldp	x29, x30, [sp], #272
  433b1c:	ret
  433b20:	str	x24, [x21, #1328]
  433b24:	mov	x0, x21
  433b28:	bl	42e76c <nftw@plt+0x2bbec>
  433b2c:	b	433968 <nftw@plt+0x30de8>
  433b30:	ldr	x1, [sp, #224]
  433b34:	mov	w27, #0x1                   	// #1
  433b38:	cbnz	x1, 433af0 <nftw@plt+0x30f70>
  433b3c:	b	433b00 <nftw@plt+0x30f80>
  433b40:	cmp	w22, #0x2
  433b44:	b.eq	433b58 <nftw@plt+0x30fd8>  // b.none
  433b48:	ldr	x0, [x21]
  433b4c:	ldr	x23, [x0]
  433b50:	mov	x24, x20
  433b54:	b	4339d8 <nftw@plt+0x30e58>
  433b58:	mov	w0, #0x20                  	// #32
  433b5c:	strb	w0, [x24]
  433b60:	b	433b48 <nftw@plt+0x30fc8>
  433b64:	cmp	w25, #0x0
  433b68:	mov	w0, #0x3e                  	// #62
  433b6c:	csel	w28, w28, w0, eq  // eq = none
  433b70:	ldrb	w0, [x21, #16]
  433b74:	cbnz	w0, 4344cc <nftw@plt+0x3194c>
  433b78:	strb	wzr, [x21, #440]
  433b7c:	mov	x24, x20
  433b80:	mov	x23, x19
  433b84:	cmp	w22, #0x1
  433b88:	b.ls	4339d0 <nftw@plt+0x30e50>  // b.plast
  433b8c:	cmp	w22, #0x3
  433b90:	ccmp	w22, #0x8, #0x4, ne  // ne = any
  433b94:	cset	w25, eq  // eq = none
  433b98:	sub	w0, w22, #0x5
  433b9c:	cmp	w0, #0x1
  433ba0:	cset	w0, ls  // ls = plast
  433ba4:	orr	w25, w25, w0
  433ba8:	cbz	w25, 4339d8 <nftw@plt+0x30e58>
  433bac:	mov	w25, #0x0                   	// #0
  433bb0:	mov	w22, #0x0                   	// #0
  433bb4:	b	4339d8 <nftw@plt+0x30e58>
  433bb8:	cmp	w28, #0x3e
  433bbc:	csel	w28, w28, wzr, ne  // ne = any
  433bc0:	b	433b70 <nftw@plt+0x30ff0>
  433bc4:	cmp	w28, w0
  433bc8:	b.eq	4344b8 <nftw@plt+0x31938>  // b.none
  433bcc:	cmp	w28, #0x0
  433bd0:	csel	w28, w28, w0, ne  // ne = any
  433bd4:	b	433b70 <nftw@plt+0x30ff0>
  433bd8:	ldrb	w0, [x23, #1]
  433bdc:	cmp	w0, #0x22
  433be0:	mov	w1, #0x5c                  	// #92
  433be4:	ccmp	w0, w1, #0x4, ne  // ne = any
  433be8:	mov	w1, #0x27                  	// #39
  433bec:	ccmp	w0, w1, #0x4, ne  // ne = any
  433bf0:	b.ne	433b70 <nftw@plt+0x30ff0>  // b.any
  433bf4:	add	x19, x23, #0x2
  433bf8:	add	x20, x24, #0x2
  433bfc:	strb	w0, [x24, #1]
  433c00:	b	433b70 <nftw@plt+0x30ff0>
  433c04:	cbnz	w28, 433b70 <nftw@plt+0x30ff0>
  433c08:	ldrb	w0, [x23, #1]
  433c0c:	cmp	w0, #0x2a
  433c10:	b.ne	433b70 <nftw@plt+0x30ff0>  // b.any
  433c14:	str	x20, [x21, #1328]
  433c18:	ldr	x0, [sp, #128]
  433c1c:	cmp	x0, #0x0
  433c20:	cset	w2, ne  // ne = any
  433c24:	mov	x1, x19
  433c28:	mov	x0, x21
  433c2c:	bl	433330 <nftw@plt+0x307b0>
  433c30:	mov	x23, x0
  433c34:	ldr	x24, [x21, #1328]
  433c38:	b	4339d8 <nftw@plt+0x30e58>
  433c3c:	ldrb	w0, [x21, #18]
  433c40:	cbnz	w0, 433b70 <nftw@plt+0x30ff0>
  433c44:	cmp	w28, #0x0
  433c48:	ldr	x0, [sp, #128]
  433c4c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  433c50:	b.eq	433b70 <nftw@plt+0x30ff0>  // b.none
  433c54:	str	x24, [x21, #1328]
  433c58:	mov	x1, x23
  433c5c:	mov	x0, x21
  433c60:	bl	4337f4 <nftw@plt+0x30c74>
  433c64:	mov	x23, x0
  433c68:	ldr	x20, [x21, #1328]
  433c6c:	ldr	x19, [x26, #16]
  433c70:	ldrb	w0, [x0, #18]
  433c74:	tst	x0, #0x2
  433c78:	ccmp	w22, #0x1, #0x2, ne  // ne = any
  433c7c:	b.ls	433cdc <nftw@plt+0x3115c>  // b.plast
  433c80:	ldr	x0, [sp, #128]
  433c84:	cbz	x0, 433c98 <nftw@plt+0x31118>
  433c88:	ldrb	w0, [x23, #18]
  433c8c:	and	w0, w0, #0x3
  433c90:	cmp	w0, #0x1
  433c94:	b.eq	433cfc <nftw@plt+0x3117c>  // b.none
  433c98:	cmp	w22, #0x5
  433c9c:	b.eq	4339a0 <nftw@plt+0x30e20>  // b.none
  433ca0:	ldrb	w0, [x21, #20]
  433ca4:	cbz	w0, 433b70 <nftw@plt+0x30ff0>
  433ca8:	ldr	x0, [x21, #1248]
  433cac:	cmp	x0, x23
  433cb0:	b.eq	4339b0 <nftw@plt+0x30e30>  // b.none
  433cb4:	ldr	x0, [x21, #1288]
  433cb8:	cmp	x0, x23
  433cbc:	b.eq	4339c0 <nftw@plt+0x30e40>  // b.none
  433cc0:	ldr	x0, [x21, #1296]
  433cc4:	cmp	x0, x23
  433cc8:	b.ne	433b70 <nftw@plt+0x30ff0>  // b.any
  433ccc:	mov	x24, x20
  433cd0:	mov	x23, x19
  433cd4:	mov	w22, #0x8                   	// #8
  433cd8:	b	4339d8 <nftw@plt+0x30e58>
  433cdc:	ldrb	w0, [x21, #24]
  433ce0:	cbz	w0, 433d18 <nftw@plt+0x31198>
  433ce4:	ldr	x0, [sp, #128]
  433ce8:	cbz	x0, 433ca0 <nftw@plt+0x31120>
  433cec:	ldrb	w0, [x23, #18]
  433cf0:	and	w0, w0, #0x3
  433cf4:	cmp	w0, #0x1
  433cf8:	b.ne	433ca0 <nftw@plt+0x31120>  // b.any
  433cfc:	str	x24, [x21, #1328]
  433d00:	ldrh	w2, [x23, #24]
  433d04:	ldr	x1, [sp, #128]
  433d08:	mov	x0, x21
  433d0c:	bl	433538 <nftw@plt+0x309b8>
  433d10:	ldr	x20, [x21, #1312]
  433d14:	b	433b70 <nftw@plt+0x30ff0>
  433d18:	strb	wzr, [x21, #440]
  433d1c:	ldrb	w0, [x23, #18]
  433d20:	and	w0, w0, #0x3
  433d24:	cmp	w0, #0x3
  433d28:	b.eq	433d64 <nftw@plt+0x311e4>  // b.none
  433d2c:	ldr	x0, [x23, #24]
  433d30:	ldrb	w1, [x0, #19]
  433d34:	tbnz	w1, #2, 433d78 <nftw@plt+0x311f8>
  433d38:	mov	x1, x23
  433d3c:	mov	x0, x21
  433d40:	bl	433644 <nftw@plt+0x30ac4>
  433d44:	and	w0, w0, #0xff
  433d48:	cbnz	w0, 433b70 <nftw@plt+0x30ff0>
  433d4c:	str	x24, [x21, #1328]
  433d50:	mov	x1, x23
  433d54:	mov	x0, x21
  433d58:	bl	433748 <nftw@plt+0x30bc8>
  433d5c:	mov	w22, #0x0                   	// #0
  433d60:	b	433968 <nftw@plt+0x30de8>
  433d64:	ldr	w0, [x23, #24]
  433d68:	cmp	w0, #0xa
  433d6c:	b.ne	433d38 <nftw@plt+0x311b8>  // b.any
  433d70:	mov	w22, #0x1                   	// #1
  433d74:	b	433d7c <nftw@plt+0x311fc>
  433d78:	ldrh	w22, [x0, #16]
  433d7c:	ldr	x1, [sp, #224]
  433d80:	cbz	x1, 433d8c <nftw@plt+0x3120c>
  433d84:	mov	x0, x21
  433d88:	bl	428148 <nftw@plt+0x255c8>
  433d8c:	add	w1, w22, #0x1
  433d90:	ubfiz	x1, x1, #3, #17
  433d94:	mov	x0, x21
  433d98:	bl	428168 <nftw@plt+0x255e8>
  433d9c:	str	x0, [sp, #224]
  433da0:	ldr	x0, [x0, #16]
  433da4:	str	x0, [sp, #232]
  433da8:	str	x23, [sp, #240]
  433dac:	ldr	x0, [x21, #1312]
  433db0:	sub	x24, x24, x0
  433db4:	str	x24, [sp, #248]
  433db8:	str	w22, [sp, #260]
  433dbc:	str	wzr, [sp, #264]
  433dc0:	ldr	x0, [x21, #40]
  433dc4:	ldr	w0, [x0, #60]
  433dc8:	str	w0, [sp, #256]
  433dcc:	mov	x24, x20
  433dd0:	mov	x23, x19
  433dd4:	mov	w22, #0x1                   	// #1
  433dd8:	b	4339d8 <nftw@plt+0x30e58>
  433ddc:	cbnz	w28, 433b70 <nftw@plt+0x30ff0>
  433de0:	ldr	w0, [sp, #112]
  433de4:	add	w0, w0, #0x1
  433de8:	str	w0, [sp, #112]
  433dec:	cmp	w22, #0x1
  433df0:	b.eq	433e14 <nftw@plt+0x31294>  // b.none
  433df4:	cmp	w22, #0x6
  433df8:	b.eq	434508 <nftw@plt+0x31988>  // b.none
  433dfc:	cmp	w22, #0x3
  433e00:	b.eq	434528 <nftw@plt+0x319a8>  // b.none
  433e04:	cmp	w22, #0x8
  433e08:	b.ne	433b70 <nftw@plt+0x30ff0>  // b.any
  433e0c:	mov	w22, #0x9                   	// #9
  433e10:	b	43450c <nftw@plt+0x3198c>
  433e14:	ldr	x1, [sp, #240]
  433e18:	mov	x0, x21
  433e1c:	bl	433644 <nftw@plt+0x30ac4>
  433e20:	and	w0, w0, #0xff
  433e24:	cbnz	w0, 43435c <nftw@plt+0x317dc>
  433e28:	ldr	x0, [sp, #248]
  433e2c:	ldr	x20, [x21, #1312]
  433e30:	add	x20, x20, x0
  433e34:	ldr	x1, [sp, #232]
  433e38:	str	x0, [x1]
  433e3c:	str	w22, [sp, #112]
  433e40:	mov	w22, #0x2                   	// #2
  433e44:	b	43450c <nftw@plt+0x3198c>
  433e48:	cmp	w28, #0x0
  433e4c:	ccmp	w22, #0x2, #0x0, eq  // eq = none
  433e50:	ldr	w0, [sp, #112]
  433e54:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  433e58:	b.ne	433b70 <nftw@plt+0x30ff0>  // b.any
  433e5c:	ldr	x1, [x21, #1312]
  433e60:	sub	x1, x20, x1
  433e64:	add	x0, sp, #0xe0
  433e68:	bl	433260 <nftw@plt+0x306e0>
  433e6c:	mov	w22, #0x2                   	// #2
  433e70:	mov	w0, #0x1                   	// #1
  433e74:	str	w0, [sp, #112]
  433e78:	b	43450c <nftw@plt+0x3198c>
  433e7c:	cbnz	w28, 433b70 <nftw@plt+0x30ff0>
  433e80:	ldr	w0, [sp, #112]
  433e84:	subs	w0, w0, #0x1
  433e88:	str	w0, [sp, #112]
  433e8c:	ccmp	w22, #0x2, #0x0, eq  // eq = none
  433e90:	b.ne	43434c <nftw@plt+0x317cc>  // b.any
  433e94:	ldr	x1, [sp, #240]
  433e98:	ldrb	w0, [x1, #18]
  433e9c:	and	w0, w0, #0x3
  433ea0:	cmp	w0, #0x3
  433ea4:	b.eq	433ef8 <nftw@plt+0x31378>  // b.none
  433ea8:	ldr	x22, [x1, #24]
  433eac:	ldrb	w0, [x22, #19]
  433eb0:	orr	w0, w0, #0x20
  433eb4:	strb	w0, [x22, #19]
  433eb8:	ldr	x1, [x21, #1312]
  433ebc:	sub	x1, x20, x1
  433ec0:	add	x0, sp, #0xe0
  433ec4:	bl	433260 <nftw@plt+0x306e0>
  433ec8:	ldr	w0, [sp, #264]
  433ecc:	cmp	w0, #0x1
  433ed0:	b.eq	434144 <nftw@plt+0x315c4>  // b.none
  433ed4:	ldr	w3, [sp, #264]
  433ed8:	ldr	x2, [sp, #240]
  433edc:	mov	x1, x22
  433ee0:	mov	x0, x21
  433ee4:	bl	42e3e4 <nftw@plt+0x2b864>
  433ee8:	and	w0, w0, #0xff
  433eec:	cbnz	w0, 43416c <nftw@plt+0x315ec>
  433ef0:	str	w28, [sp, #112]
  433ef4:	b	43435c <nftw@plt+0x317dc>
  433ef8:	ldr	x1, [x21, #1312]
  433efc:	sub	x1, x20, x1
  433f00:	add	x0, sp, #0xe0
  433f04:	bl	433260 <nftw@plt+0x306e0>
  433f08:	stp	xzr, xzr, [sp, #176]
  433f0c:	stp	xzr, xzr, [sp, #192]
  433f10:	stp	xzr, xzr, [sp, #208]
  433f14:	ldr	w0, [sp, #260]
  433f18:	strh	w0, [sp, #192]
  433f1c:	ldr	w3, [sp, #264]
  433f20:	ldr	x2, [sp, #240]
  433f24:	add	x1, sp, #0xb0
  433f28:	mov	x0, x21
  433f2c:	bl	42e3e4 <nftw@plt+0x2b864>
  433f30:	and	w0, w0, #0xff
  433f34:	cbnz	w0, 433f40 <nftw@plt+0x313c0>
  433f38:	str	w28, [sp, #112]
  433f3c:	b	43435c <nftw@plt+0x317dc>
  433f40:	ldr	x0, [sp, #232]
  433f44:	ldr	x1, [x0, #8]
  433f48:	ldr	x22, [x0]
  433f4c:	sub	x22, x1, x22
  433f50:	ldr	x0, [x21, #1312]
  433f54:	ldr	x1, [sp, #248]
  433f58:	add	x0, x0, x1
  433f5c:	str	x0, [x21, #1328]
  433f60:	str	x19, [x26, #16]
  433f64:	add	x1, x22, #0x2
  433f68:	mov	x0, x21
  433f6c:	bl	4283c0 <nftw@plt+0x25840>
  433f70:	mov	x20, x0
  433f74:	mov	w1, #0x28                  	// #40
  433f78:	strb	w1, [x0], #1
  433f7c:	ldr	x3, [x21, #1312]
  433f80:	ldr	x1, [sp, #232]
  433f84:	ldr	x1, [x1]
  433f88:	mov	x2, x22
  433f8c:	add	x1, x3, x1
  433f90:	bl	402490 <memcpy@plt>
  433f94:	add	x0, x22, #0x1
  433f98:	add	x1, x20, x0
  433f9c:	mov	w22, #0xa                   	// #10
  433fa0:	strb	w22, [x20, x0]
  433fa4:	ldr	x0, [x26, #24]
  433fa8:	str	x0, [sp, #112]
  433fac:	ldr	x0, [x21]
  433fb0:	ldr	x24, [x0]
  433fb4:	ldr	x3, [x0, #32]
  433fb8:	str	x3, [sp, #136]
  433fbc:	ldr	x4, [x0, #8]
  433fc0:	str	x4, [sp, #144]
  433fc4:	ldrb	w5, [x0, #104]
  433fc8:	str	w5, [sp, #156]
  433fcc:	ldr	x6, [x21, #8]
  433fd0:	str	x6, [sp, #160]
  433fd4:	str	x20, [x0]
  433fd8:	ldr	x0, [x21]
  433fdc:	str	x20, [x0, #8]
  433fe0:	ldr	x0, [x21]
  433fe4:	str	x1, [x0, #32]
  433fe8:	ldr	x0, [x21]
  433fec:	strb	wzr, [x0, #104]
  433ff0:	ldr	x0, [x21]
  433ff4:	str	x0, [x21, #8]
  433ff8:	ldrb	w0, [x21, #16]
  433ffc:	cmp	w0, #0x0
  434000:	cset	w20, ne  // ne = any
  434004:	mov	w2, #0x1                   	// #1
  434008:	strb	w2, [x21, #16]
  43400c:	ldr	x23, [x26, #8]
  434010:	str	xzr, [x26, #8]
  434014:	mov	x1, #0x0                   	// #0
  434018:	mov	x0, x21
  43401c:	bl	4338bc <nftw@plt+0x30d3c>
  434020:	strb	w20, [x21, #16]
  434024:	mov	x1, #0x1                   	// #1
  434028:	mov	x0, x21
  43402c:	bl	4336d8 <nftw@plt+0x30b58>
  434030:	ldr	x0, [x21, #1328]
  434034:	strb	w22, [x0]
  434038:	ldr	x1, [x21]
  43403c:	ldr	x0, [x21, #1312]
  434040:	ldr	x2, [sp, #248]
  434044:	add	x0, x0, x2
  434048:	str	x0, [x1]
  43404c:	ldr	x0, [x21]
  434050:	ldr	x1, [x0]
  434054:	str	x1, [x0, #8]
  434058:	ldr	x0, [x21]
  43405c:	ldr	x1, [x21, #1328]
  434060:	str	x1, [x0, #32]
  434064:	ldr	x0, [x21]
  434068:	ldr	x0, [x0]
  43406c:	str	x0, [x26, #16]
  434070:	ldr	x0, [x21]
  434074:	ldr	x0, [x0, #32]
  434078:	str	x0, [x26, #24]
  43407c:	ldrb	w0, [x21, #24]
  434080:	add	w0, w0, #0x1
  434084:	strb	w0, [x21, #24]
  434088:	mov	w2, #0x0                   	// #0
  43408c:	ldr	x1, [sp, #240]
  434090:	mov	x0, x21
  434094:	bl	42dfc8 <nftw@plt+0x2b448>
  434098:	str	x0, [sp, #168]
  43409c:	ldrb	w1, [x21, #24]
  4340a0:	sub	w1, w1, #0x1
  4340a4:	strb	w1, [x21, #24]
  4340a8:	str	x23, [x26, #8]
  4340ac:	ldr	x1, [x21]
  4340b0:	str	x24, [x1]
  4340b4:	ldr	x1, [x21]
  4340b8:	ldr	x3, [sp, #136]
  4340bc:	str	x3, [x1, #32]
  4340c0:	ldr	x1, [x21]
  4340c4:	ldr	x4, [sp, #144]
  4340c8:	str	x4, [x1, #8]
  4340cc:	ldr	x1, [x21]
  4340d0:	ldrb	w3, [sp, #156]
  4340d4:	strb	w3, [x1, #104]
  4340d8:	ldr	x6, [sp, #160]
  4340dc:	str	x6, [x21, #8]
  4340e0:	ldr	x1, [x21, #1312]
  4340e4:	ldr	x2, [sp, #248]
  4340e8:	add	x1, x1, x2
  4340ec:	str	x1, [x21, #1328]
  4340f0:	str	x19, [x26, #16]
  4340f4:	ldr	x2, [sp, #112]
  4340f8:	str	x2, [x26, #24]
  4340fc:	bl	4024f0 <strlen@plt>
  434100:	mov	x19, x0
  434104:	add	x1, x0, #0x1
  434108:	mov	x0, x21
  43410c:	bl	4283c0 <nftw@plt+0x25840>
  434110:	mov	x20, x0
  434114:	mov	x2, x19
  434118:	ldr	x1, [sp, #168]
  43411c:	bl	402490 <memcpy@plt>
  434120:	strb	w22, [x20, x19]
  434124:	mov	x3, x19
  434128:	mov	x2, x20
  43412c:	ldr	x1, [sp, #240]
  434130:	mov	x0, x21
  434134:	bl	42e714 <nftw@plt+0x2bb94>
  434138:	mov	w22, w28
  43413c:	str	w28, [sp, #112]
  434140:	b	433968 <nftw@plt+0x30de8>
  434144:	ldrh	w0, [x22, #16]
  434148:	cbnz	w0, 433ed4 <nftw@plt+0x31354>
  43414c:	ldr	x0, [sp, #248]
  434150:	add	x1, x0, #0x1
  434154:	ldr	x0, [x21, #1312]
  434158:	add	x0, x0, x1
  43415c:	cmp	x20, x0
  434160:	b.ne	433ed4 <nftw@plt+0x31354>  // b.any
  434164:	str	wzr, [sp, #264]
  434168:	b	433ed4 <nftw@plt+0x31354>
  43416c:	ldr	x0, [x21, #1312]
  434170:	ldr	x1, [sp, #248]
  434174:	add	x0, x0, x1
  434178:	str	x0, [x21, #1328]
  43417c:	str	x19, [x26, #16]
  434180:	ldr	x1, [sp, #240]
  434184:	ldr	x20, [x1, #24]
  434188:	ldrh	w0, [x20, #16]
  43418c:	cbz	w0, 43420c <nftw@plt+0x3168c>
  434190:	ldr	x4, [x20, #24]
  434194:	ldr	w0, [x4]
  434198:	ldrh	w2, [x4, #4]
  43419c:	cbz	w2, 434220 <nftw@plt+0x316a0>
  4341a0:	ldr	x5, [sp, #232]
  4341a4:	mov	x1, x0
  4341a8:	and	x3, x2, #0xffff
  4341ac:	add	x0, x0, #0xd
  4341b0:	and	x0, x0, #0xfffffffffffffff8
  4341b4:	add	x4, x4, x0
  4341b8:	ldr	w0, [x4]
  4341bc:	ldr	x3, [x5, x3, lsl #3]
  4341c0:	sub	x3, x3, #0x1
  4341c4:	add	x2, x5, w2, uxth #3
  4341c8:	ldur	x2, [x2, #-8]
  4341cc:	sub	x2, x3, x2
  4341d0:	add	x2, x0, x2, lsl #1
  4341d4:	add	x1, x1, x2
  4341d8:	ldrh	w2, [x4, #4]
  4341dc:	cbnz	w2, 4341a8 <nftw@plt+0x31628>
  4341e0:	add	x1, x1, #0x1
  4341e4:	mov	x0, x21
  4341e8:	bl	428168 <nftw@plt+0x255e8>
  4341ec:	mov	x19, x0
  4341f0:	ldr	x5, [x0, #16]
  4341f4:	ldr	x8, [x20, #24]
  4341f8:	mov	w0, #0x0                   	// #0
  4341fc:	mov	x3, #0x0                   	// #0
  434200:	mov	w10, #0x0                   	// #0
  434204:	mov	w9, #0x5c                  	// #92
  434208:	b	4342a4 <nftw@plt+0x31724>
  43420c:	mov	x0, x21
  434210:	bl	433748 <nftw@plt+0x30bc8>
  434214:	mov	w22, w28
  434218:	str	w28, [sp, #112]
  43421c:	b	433968 <nftw@plt+0x30de8>
  434220:	mov	x1, x0
  434224:	b	4341e0 <nftw@plt+0x31660>
  434228:	cmp	x11, x1
  43422c:	b.cs	434244 <nftw@plt+0x316c4>  // b.hs, b.nlast
  434230:	ldurb	w2, [x1, #-1]
  434234:	cmp	w2, #0x5c
  434238:	mov	w6, w7
  43423c:	eor	w7, w7, #0x1
  434240:	csel	w7, w7, w6, ne  // ne = any
  434244:	mov	x2, x5
  434248:	strb	w9, [x2], #1
  43424c:	add	x3, x3, #0x1
  434250:	mov	x5, x2
  434254:	ldrb	w2, [x1], #1
  434258:	strb	w2, [x5], #1
  43425c:	add	x3, x3, #0x1
  434260:	cmp	x1, x4
  434264:	b.eq	434294 <nftw@plt+0x31714>  // b.none
  434268:	mov	x2, x5
  43426c:	cbz	w0, 434250 <nftw@plt+0x316d0>
  434270:	ldrb	w6, [x1]
  434274:	cmp	w6, #0x22
  434278:	b.eq	434228 <nftw@plt+0x316a8>  // b.none
  43427c:	cbz	w7, 434250 <nftw@plt+0x316d0>
  434280:	cmp	w6, #0x5c
  434284:	b.ne	434250 <nftw@plt+0x316d0>  // b.any
  434288:	strb	w9, [x2], #1
  43428c:	add	x3, x3, #0x1
  434290:	b	434250 <nftw@plt+0x316d0>
  434294:	ldr	w1, [x8]
  434298:	add	x1, x1, #0xd
  43429c:	and	x1, x1, #0xfffffffffffffff8
  4342a0:	add	x8, x8, x1
  4342a4:	ldr	w6, [x8]
  4342a8:	add	x3, x3, x6
  4342ac:	cbz	x6, 4342e0 <nftw@plt+0x31760>
  4342b0:	mov	x1, #0x0                   	// #0
  4342b4:	add	x7, x8, #0x6
  4342b8:	ldrb	w2, [x7, x1]
  4342bc:	cmp	w2, #0x22
  4342c0:	mov	w4, w0
  4342c4:	eor	w0, w0, #0x1
  4342c8:	csel	w0, w0, w4, eq  // eq = none
  4342cc:	strb	w2, [x5, x1]
  4342d0:	add	x1, x1, #0x1
  4342d4:	cmp	x6, x1
  4342d8:	b.ne	4342b8 <nftw@plt+0x31738>  // b.any
  4342dc:	add	x5, x5, x1
  4342e0:	ldrh	w1, [x8, #4]
  4342e4:	cbz	w1, 434320 <nftw@plt+0x317a0>
  4342e8:	ldr	x4, [sp, #232]
  4342ec:	and	x6, x1, #0xffff
  4342f0:	add	x1, x4, w1, uxth #3
  4342f4:	ldur	x2, [x1, #-8]
  4342f8:	ldr	x1, [x4, x6, lsl #3]
  4342fc:	sub	x1, x1, #0x1
  434300:	ldr	x4, [x21, #1312]
  434304:	add	x11, x4, x2
  434308:	cmp	x1, x2
  43430c:	b.eq	434294 <nftw@plt+0x31714>  // b.none
  434310:	add	x4, x4, x1
  434314:	mov	x1, x11
  434318:	mov	w7, w10
  43431c:	b	434268 <nftw@plt+0x316e8>
  434320:	mov	w0, #0xa                   	// #10
  434324:	strb	w0, [x5]
  434328:	ldr	x2, [x19, #16]
  43432c:	ldr	x1, [sp, #240]
  434330:	mov	x0, x21
  434334:	bl	42e714 <nftw@plt+0x2bb94>
  434338:	ldr	x0, [x21, #136]
  43433c:	str	x19, [x0, #32]
  434340:	mov	w22, w28
  434344:	str	w28, [sp, #112]
  434348:	b	433968 <nftw@plt+0x30de8>
  43434c:	sub	w0, w22, #0x7
  434350:	tst	w0, #0xfffffffd
  434354:	ccmp	w22, #0x4, #0x4, ne  // ne = any
  434358:	b.ne	433b70 <nftw@plt+0x30ff0>  // b.any
  43435c:	ldrb	w0, [x21, #16]
  434360:	cbz	w0, 4344c0 <nftw@plt+0x31940>
  434364:	mov	x24, x20
  434368:	mov	x23, x19
  43436c:	mov	w25, #0x0                   	// #0
  434370:	mov	w22, #0x0                   	// #0
  434374:	mov	w28, #0x0                   	// #0
  434378:	b	4339d8 <nftw@plt+0x30e58>
  43437c:	ldr	x0, [sp, #120]
  434380:	cmp	x23, x0
  434384:	b.eq	4343a0 <nftw@plt+0x31820>  // b.none
  434388:	ldrb	w0, [x21, #20]
  43438c:	cbz	w0, 433b70 <nftw@plt+0x30ff0>
  434390:	mov	x24, x20
  434394:	mov	x23, x19
  434398:	mov	w22, #0x5                   	// #5
  43439c:	b	4339d8 <nftw@plt+0x30e58>
  4343a0:	ldr	x0, [x21, #136]
  4343a4:	ldr	x0, [x0, #8]
  4343a8:	cbnz	x0, 434388 <nftw@plt+0x31808>
  4343ac:	ldrb	w0, [x21, #16]
  4343b0:	cbz	w0, 4343c8 <nftw@plt+0x31848>
  4343b4:	ldrb	w0, [x21, #20]
  4343b8:	cbnz	w0, 433a14 <nftw@plt+0x30e94>
  4343bc:	mov	x24, x20
  4343c0:	mov	x23, x19
  4343c4:	b	433b84 <nftw@plt+0x31004>
  4343c8:	str	x20, [x21, #1328]
  4343cc:	mov	w2, #0x1                   	// #1
  4343d0:	mov	x1, x19
  4343d4:	mov	x0, x21
  4343d8:	bl	4334a4 <nftw@plt+0x30924>
  4343dc:	mov	x19, x0
  4343e0:	ldr	x20, [x21, #1328]
  4343e4:	ldrb	w0, [x0]
  4343e8:	cmp	w0, #0xa
  4343ec:	b.eq	43443c <nftw@plt+0x318bc>  // b.none
  4343f0:	ldr	x1, [sp, #136]
  4343f4:	ldrh	w1, [x1, w0, sxtw #1]
  4343f8:	tbz	w1, #2, 434408 <nftw@plt+0x31888>
  4343fc:	ldr	w2, [x21, #1116]
  434400:	cmp	w2, #0x15
  434404:	b.ne	434420 <nftw@plt+0x318a0>  // b.any
  434408:	tbnz	w1, #9, 4344a0 <nftw@plt+0x31920>
  43440c:	cmp	w0, #0x24
  434410:	b.eq	434498 <nftw@plt+0x31918>  // b.none
  434414:	ldr	w0, [x21, #1116]
  434418:	cmp	w0, #0x15
  43441c:	b.eq	434388 <nftw@plt+0x31808>  // b.none
  434420:	ldr	x0, [x21]
  434424:	str	x19, [x0]
  434428:	mov	w1, #0x0                   	// #0
  43442c:	mov	x0, x21
  434430:	bl	41deb8 <nftw@plt+0x1b338>
  434434:	mov	w27, #0x0                   	// #0
  434438:	b	433ae8 <nftw@plt+0x30f68>
  43443c:	ldr	x0, [x21]
  434440:	mov	w1, #0x1                   	// #1
  434444:	strb	w1, [x0, #104]
  434448:	ldr	x0, [x21, #40]
  43444c:	ldr	w1, [x0, #12]
  434450:	sub	w1, w1, #0x1
  434454:	sbfiz	x2, x1, #1, #32
  434458:	add	x1, x2, w1, sxtw
  43445c:	lsl	x1, x1, #3
  434460:	ldr	x4, [x0]
  434464:	add	x3, x4, x1
  434468:	ldr	w2, [x0, #60]
  43446c:	ldr	w1, [x4, x1]
  434470:	sub	w1, w2, w1
  434474:	ldrb	w2, [x3, #6]
  434478:	lsr	w1, w1, w2
  43447c:	ldr	w3, [x3, #16]
  434480:	add	w3, w3, #0x1
  434484:	mov	w2, #0x0                   	// #0
  434488:	add	w1, w1, w3
  43448c:	bl	42b748 <nftw@plt+0x28bc8>
  434490:	mov	w27, #0x0                   	// #0
  434494:	b	433ae8 <nftw@plt+0x30f68>
  434498:	ldrb	w0, [x21, #1146]
  43449c:	cbz	w0, 434414 <nftw@plt+0x31894>
  4344a0:	mov	x1, x19
  4344a4:	mov	x0, x21
  4344a8:	bl	4337f4 <nftw@plt+0x30c74>
  4344ac:	ldrb	w0, [x0, #16]
  4344b0:	tbz	w0, #0, 434414 <nftw@plt+0x31894>
  4344b4:	b	434420 <nftw@plt+0x318a0>
  4344b8:	mov	w28, #0x0                   	// #0
  4344bc:	b	433b70 <nftw@plt+0x30ff0>
  4344c0:	mov	w22, #0x0                   	// #0
  4344c4:	mov	w28, #0x0                   	// #0
  4344c8:	b	433b78 <nftw@plt+0x30ff8>
  4344cc:	mov	x24, x20
  4344d0:	mov	x23, x19
  4344d4:	b	433b84 <nftw@plt+0x31004>
  4344d8:	mov	w27, #0x1                   	// #1
  4344dc:	b	433ae8 <nftw@plt+0x30f68>
  4344e0:	ldr	x0, [sp, #240]
  4344e4:	ldr	x5, [x0]
  4344e8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4344ec:	add	x4, x4, #0x5f8
  4344f0:	mov	w3, #0x0                   	// #0
  4344f4:	ldr	w2, [sp, #256]
  4344f8:	mov	w1, #0x3                   	// #3
  4344fc:	mov	x0, x21
  434500:	bl	41fb7c <nftw@plt+0x1cffc>
  434504:	b	433b00 <nftw@plt+0x30f80>
  434508:	mov	w22, #0x7                   	// #7
  43450c:	ldrb	w0, [x21, #16]
  434510:	mov	w28, #0x0                   	// #0
  434514:	cbz	w0, 433b78 <nftw@plt+0x30ff8>
  434518:	mov	x24, x20
  43451c:	mov	x23, x19
  434520:	mov	w25, #0x0                   	// #0
  434524:	b	4339d8 <nftw@plt+0x30e58>
  434528:	mov	w22, #0x4                   	// #4
  43452c:	b	43450c <nftw@plt+0x3198c>
  434530:	stp	x29, x30, [sp, #-32]!
  434534:	mov	x29, sp
  434538:	str	x19, [sp, #16]
  43453c:	mov	x19, x0
  434540:	ldr	x0, [x19]
  434544:	ldrb	w0, [x0, #104]
  434548:	cbz	w0, 43455c <nftw@plt+0x319dc>
  43454c:	mov	x0, x19
  434550:	bl	427588 <nftw@plt+0x24a08>
  434554:	ands	w0, w0, #0xff
  434558:	b.eq	434588 <nftw@plt+0x31a08>  // b.none
  43455c:	mov	w2, #0x0                   	// #0
  434560:	mov	x1, #0x0                   	// #0
  434564:	mov	x0, x19
  434568:	bl	4338bc <nftw@plt+0x30d3c>
  43456c:	and	w0, w0, #0xff
  434570:	cbz	w0, 434540 <nftw@plt+0x319c0>
  434574:	ldrb	w0, [x19, #18]
  434578:	cbnz	w0, 434540 <nftw@plt+0x319c0>
  43457c:	ldr	x0, [x19]
  434580:	cmp	x0, #0x0
  434584:	cset	w0, ne  // ne = any
  434588:	ldr	x19, [sp, #16]
  43458c:	ldp	x29, x30, [sp], #32
  434590:	ret
  434594:	ldrb	w1, [x0, #19]
  434598:	tbz	w1, #2, 4345ec <nftw@plt+0x31a6c>
  43459c:	ldrh	w1, [x0, #16]
  4345a0:	cbz	w1, 4345ec <nftw@plt+0x31a6c>
  4345a4:	ldr	x3, [x0, #24]
  4345a8:	ldr	w1, [x3]
  4345ac:	ldrh	w2, [x3, #4]
  4345b0:	cbz	w2, 4345f4 <nftw@plt+0x31a74>
  4345b4:	ldr	x4, [x0]
  4345b8:	mov	x0, x1
  4345bc:	add	x1, x1, #0xd
  4345c0:	and	x1, x1, #0xfffffffffffffff8
  4345c4:	add	x3, x3, x1
  4345c8:	ldr	w1, [x3]
  4345cc:	add	x2, x4, w2, uxth #3
  4345d0:	ldur	x2, [x2, #-8]
  4345d4:	ldr	w2, [x2, #8]
  4345d8:	add	x2, x2, x1
  4345dc:	add	x0, x0, x2
  4345e0:	ldrh	w2, [x3, #4]
  4345e4:	cbnz	w2, 4345bc <nftw@plt+0x31a3c>
  4345e8:	b	4345f0 <nftw@plt+0x31a70>
  4345ec:	ldr	w0, [x0, #12]
  4345f0:	ret
  4345f4:	mov	x0, x1
  4345f8:	b	4345f0 <nftw@plt+0x31a70>
  4345fc:	stp	x29, x30, [sp, #-48]!
  434600:	mov	x29, sp
  434604:	stp	x19, x20, [sp, #16]
  434608:	stp	x21, x22, [sp, #32]
  43460c:	mov	x21, x0
  434610:	mov	x19, x1
  434614:	ldrb	w0, [x0, #19]
  434618:	tbz	w0, #2, 434680 <nftw@plt+0x31b00>
  43461c:	ldrh	w0, [x21, #16]
  434620:	cbz	w0, 434680 <nftw@plt+0x31b00>
  434624:	ldr	x20, [x21, #24]
  434628:	mov	x1, x20
  43462c:	ldr	w2, [x1], #6
  434630:	mov	x0, x19
  434634:	bl	402490 <memcpy@plt>
  434638:	ldr	w1, [x20]
  43463c:	add	x19, x19, x1
  434640:	ldrh	w1, [x20, #4]
  434644:	cbz	w1, 434698 <nftw@plt+0x31b18>
  434648:	ldr	x0, [x21]
  43464c:	add	x1, x0, w1, uxth #3
  434650:	ldur	x22, [x1, #-8]
  434654:	ldr	w2, [x22, #8]
  434658:	ldr	x1, [x22]
  43465c:	mov	x0, x19
  434660:	bl	402490 <memcpy@plt>
  434664:	ldr	w1, [x22, #8]
  434668:	add	x19, x19, x1
  43466c:	ldr	w1, [x20]
  434670:	add	x1, x1, #0xd
  434674:	and	x1, x1, #0xfffffffffffffff8
  434678:	add	x20, x20, x1
  43467c:	b	434628 <nftw@plt+0x31aa8>
  434680:	ldr	w2, [x21, #12]
  434684:	ldr	x1, [x21, #24]
  434688:	mov	x0, x19
  43468c:	bl	402490 <memcpy@plt>
  434690:	ldr	w1, [x21, #12]
  434694:	add	x19, x19, x1
  434698:	mov	x0, x19
  43469c:	ldp	x19, x20, [sp, #16]
  4346a0:	ldp	x21, x22, [sp, #32]
  4346a4:	ldp	x29, x30, [sp], #48
  4346a8:	ret
  4346ac:	stp	x29, x30, [sp, #-64]!
  4346b0:	mov	x29, sp
  4346b4:	stp	x19, x20, [sp, #16]
  4346b8:	stp	x21, x22, [sp, #32]
  4346bc:	stp	x23, x24, [sp, #48]
  4346c0:	mov	x19, x0
  4346c4:	ldr	x21, [x0, #136]
  4346c8:	ldr	x1, [x0, #1312]
  4346cc:	str	x1, [x0, #1328]
  4346d0:	ldr	x1, [x0]
  4346d4:	ldr	x1, [x1]
  4346d8:	str	x1, [x21, #16]
  4346dc:	ldr	x2, [x0]
  4346e0:	ldr	x2, [x2, #32]
  4346e4:	str	x2, [x21, #24]
  4346e8:	sub	x1, x2, x1
  4346ec:	bl	4336d8 <nftw@plt+0x30b58>
  4346f0:	ldr	x0, [x21, #16]
  4346f4:	ldrb	w0, [x0]
  4346f8:	cmp	w0, #0x28
  4346fc:	b.eq	4347f0 <nftw@plt+0x31c70>  // b.none
  434700:	mov	w22, #0x0                   	// #0
  434704:	mov	x23, #0x0                   	// #0
  434708:	mov	w24, #0x0                   	// #0
  43470c:	mov	x1, #0x30                  	// #48
  434710:	mov	x0, x19
  434714:	bl	42ae30 <nftw@plt+0x282b0>
  434718:	mov	x2, x0
  43471c:	mov	w1, #0x2                   	// #2
  434720:	mov	x0, x19
  434724:	bl	42ed0c <nftw@plt+0x2c18c>
  434728:	mov	x20, x0
  43472c:	str	x23, [x0]
  434730:	strh	w22, [x0, #16]
  434734:	ldrb	w0, [x0, #19]
  434738:	bfi	w0, w24, #2, #1
  43473c:	strb	w0, [x20, #19]
  434740:	ldr	x23, [x19]
  434744:	ldrb	w2, [x19, #1124]
  434748:	ldr	x1, [x21, #16]
  43474c:	mov	x0, x19
  434750:	bl	4334a4 <nftw@plt+0x30924>
  434754:	str	x0, [x23]
  434758:	ldrb	w0, [x19, #24]
  43475c:	add	w0, w0, #0x1
  434760:	strb	w0, [x19, #24]
  434764:	mov	w2, #0x0                   	// #0
  434768:	mov	x1, x20
  43476c:	mov	x0, x19
  434770:	bl	4338bc <nftw@plt+0x30d3c>
  434774:	ldrb	w0, [x19, #24]
  434778:	sub	w0, w0, #0x1
  43477c:	strb	w0, [x19, #24]
  434780:	mov	w1, w22
  434784:	mov	x0, x19
  434788:	bl	42ecc4 <nftw@plt+0x2c144>
  43478c:	ldr	x3, [x19, #1312]
  434790:	ldr	x1, [x19, #1328]
  434794:	cmp	x3, x1
  434798:	b.cs	4347c4 <nftw@plt+0x31c44>  // b.hs, b.nlast
  43479c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4347a0:	add	x0, x0, #0xe68
  4347a4:	ldurb	w2, [x1, #-1]
  4347a8:	ldrh	w2, [x0, x2, lsl #1]
  4347ac:	tst	w2, #0xc00
  4347b0:	b.eq	4347c4 <nftw@plt+0x31c44>  // b.none
  4347b4:	sub	x1, x1, #0x1
  4347b8:	cmp	x3, x1
  4347bc:	b.ne	4347a4 <nftw@plt+0x31c24>  // b.any
  4347c0:	mov	x1, x3
  4347c4:	str	x1, [x19, #1328]
  4347c8:	mov	w2, #0x0                   	// #0
  4347cc:	mov	x1, x20
  4347d0:	mov	x0, x19
  4347d4:	bl	433538 <nftw@plt+0x309b8>
  4347d8:	mov	x0, x20
  4347dc:	ldp	x19, x20, [sp, #16]
  4347e0:	ldp	x21, x22, [sp, #32]
  4347e4:	ldp	x23, x24, [sp, #48]
  4347e8:	ldp	x29, x30, [sp], #64
  4347ec:	ret
  4347f0:	ldr	x0, [x19, #136]
  4347f4:	ldr	x1, [x0, #16]
  4347f8:	add	x1, x1, #0x1
  4347fc:	mov	w22, #0x0                   	// #0
  434800:	mov	w24, #0x1                   	// #1
  434804:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  434808:	add	x23, x23, #0xe68
  43480c:	mov	w2, w24
  434810:	mov	x0, x19
  434814:	bl	4334a4 <nftw@plt+0x30924>
  434818:	mov	x20, x0
  43481c:	ldrb	w0, [x0]
  434820:	ldrh	w1, [x23, w0, sxtw #1]
  434824:	tbnz	w1, #9, 434838 <nftw@plt+0x31cb8>
  434828:	cmp	w0, #0x24
  43482c:	b.ne	4348c8 <nftw@plt+0x31d48>  // b.any
  434830:	ldrb	w1, [x19, #1146]
  434834:	cbz	w1, 4348c8 <nftw@plt+0x31d48>
  434838:	mov	x1, x20
  43483c:	mov	x0, x19
  434840:	bl	4337f4 <nftw@plt+0x30c74>
  434844:	mov	x2, x0
  434848:	mov	x3, x0
  43484c:	mov	w1, w22
  434850:	mov	x0, x19
  434854:	bl	42eba8 <nftw@plt+0x2c028>
  434858:	and	w0, w0, #0xff
  43485c:	cbz	w0, 4348dc <nftw@plt+0x31d5c>
  434860:	add	w22, w22, #0x1
  434864:	ldr	x0, [x19, #136]
  434868:	mov	w2, w24
  43486c:	ldr	x1, [x0, #16]
  434870:	mov	x0, x19
  434874:	bl	4334a4 <nftw@plt+0x30924>
  434878:	mov	x20, x0
  43487c:	ldrb	w0, [x0]
  434880:	cmp	w0, #0x2c
  434884:	b.eq	4348c0 <nftw@plt+0x31d40>  // b.none
  434888:	cmp	w0, #0x29
  43488c:	cset	w0, eq  // eq = none
  434890:	cbz	w0, 4348dc <nftw@plt+0x31d5c>
  434894:	ldr	x0, [x19, #136]
  434898:	ldrb	w1, [x20]
  43489c:	cmp	w1, #0x29
  4348a0:	cinc	x20, x20, eq  // eq = none
  4348a4:	str	x20, [x0, #16]
  4348a8:	ubfiz	x1, x22, #3, #32
  4348ac:	mov	x0, x19
  4348b0:	bl	42ae94 <nftw@plt+0x28314>
  4348b4:	mov	x23, x0
  4348b8:	mov	w24, #0x1                   	// #1
  4348bc:	b	43470c <nftw@plt+0x31b8c>
  4348c0:	add	x1, x20, #0x1
  4348c4:	b	43480c <nftw@plt+0x31c8c>
  4348c8:	cmp	w0, #0x29
  4348cc:	cset	w0, eq  // eq = none
  4348d0:	cmp	w22, #0x0
  4348d4:	csel	w0, w0, wzr, eq  // eq = none
  4348d8:	b	434890 <nftw@plt+0x31d10>
  4348dc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4348e0:	add	x2, x2, #0xa30
  4348e4:	mov	w1, #0x3                   	// #3
  4348e8:	mov	x0, x19
  4348ec:	bl	41f990 <nftw@plt+0x1ce10>
  4348f0:	ldr	x0, [x19, #136]
  4348f4:	ldrb	w1, [x20]
  4348f8:	cmp	w1, #0x29
  4348fc:	cinc	x20, x20, eq  // eq = none
  434900:	str	x20, [x0, #16]
  434904:	ldr	x20, [x19]
  434908:	ldrb	w2, [x19, #1124]
  43490c:	ldr	x1, [x21, #16]
  434910:	mov	x0, x19
  434914:	bl	4334a4 <nftw@plt+0x30924>
  434918:	str	x0, [x20]
  43491c:	ldrb	w0, [x19, #24]
  434920:	add	w0, w0, #0x1
  434924:	strb	w0, [x19, #24]
  434928:	mov	w2, #0x0                   	// #0
  43492c:	mov	x1, #0x0                   	// #0
  434930:	mov	x0, x19
  434934:	bl	4338bc <nftw@plt+0x30d3c>
  434938:	ldrb	w0, [x19, #24]
  43493c:	sub	w0, w0, #0x1
  434940:	strb	w0, [x19, #24]
  434944:	mov	w1, w22
  434948:	mov	x0, x19
  43494c:	bl	42ecc4 <nftw@plt+0x2c144>
  434950:	mov	x20, #0x0                   	// #0
  434954:	b	4347d8 <nftw@plt+0x31c58>
  434958:	stp	x29, x30, [sp, #-80]!
  43495c:	mov	x29, sp
  434960:	stp	x19, x20, [sp, #16]
  434964:	stp	x21, x22, [sp, #32]
  434968:	mov	x19, x0
  43496c:	mov	x20, x1
  434970:	ldr	w1, [x0, #12]
  434974:	ldr	w0, [x20, #12]
  434978:	add	w0, w1, w0
  43497c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  434980:	mov	x21, x0
  434984:	ldr	w2, [x19, #12]
  434988:	add	x22, x0, x2
  43498c:	strb	wzr, [sp, #79]
  434990:	strb	wzr, [sp, #78]
  434994:	ldrh	w0, [x19, #16]
  434998:	cbz	w0, 434a44 <nftw@plt+0x31ec4>
  43499c:	ldr	x19, [x19, #24]
  4349a0:	ldr	x20, [x20, #24]
  4349a4:	ldrh	w1, [x19, #4]
  4349a8:	ldrh	w0, [x20, #4]
  4349ac:	cmp	w1, w0
  4349b0:	b.ne	434abc <nftw@plt+0x31f3c>  // b.any
  4349b4:	str	x23, [sp, #48]
  4349b8:	mov	x1, x19
  4349bc:	add	x3, sp, #0x4f
  4349c0:	ldr	w2, [x1], #6
  4349c4:	mov	x0, x21
  4349c8:	bl	433284 <nftw@plt+0x30704>
  4349cc:	mov	x23, x0
  4349d0:	mov	x1, x20
  4349d4:	add	x3, sp, #0x4e
  4349d8:	ldr	w2, [x1], #6
  4349dc:	mov	x0, x22
  4349e0:	bl	433284 <nftw@plt+0x30704>
  4349e4:	cmp	x23, x0
  4349e8:	b.ne	434ac4 <nftw@plt+0x31f44>  // b.any
  4349ec:	mov	x2, x23
  4349f0:	mov	x1, x22
  4349f4:	mov	x0, x21
  4349f8:	bl	402850 <memcmp@plt>
  4349fc:	cbnz	w0, 434ad0 <nftw@plt+0x31f50>
  434a00:	ldrh	w0, [x19, #4]
  434a04:	cbz	w0, 434adc <nftw@plt+0x31f5c>
  434a08:	ldr	w1, [x19]
  434a0c:	add	x1, x1, #0xd
  434a10:	and	x1, x1, #0xfffffffffffffff8
  434a14:	add	x19, x19, x1
  434a18:	ldr	w1, [x20]
  434a1c:	add	x1, x1, #0xd
  434a20:	and	x1, x1, #0xfffffffffffffff8
  434a24:	add	x20, x20, x1
  434a28:	ldrh	w1, [x19, #4]
  434a2c:	ldrh	w0, [x20, #4]
  434a30:	cmp	w1, w0
  434a34:	b.eq	4349b8 <nftw@plt+0x31e38>  // b.none
  434a38:	mov	w19, #0x1                   	// #1
  434a3c:	ldr	x23, [sp, #48]
  434a40:	b	434a80 <nftw@plt+0x31f00>
  434a44:	str	x23, [sp, #48]
  434a48:	add	x3, sp, #0x4f
  434a4c:	ldr	x1, [x19, #24]
  434a50:	mov	x0, x21
  434a54:	bl	433284 <nftw@plt+0x30704>
  434a58:	mov	x23, x0
  434a5c:	add	x3, sp, #0x4e
  434a60:	ldr	w2, [x20, #12]
  434a64:	ldr	x1, [x20, #24]
  434a68:	mov	x0, x22
  434a6c:	bl	433284 <nftw@plt+0x30704>
  434a70:	mov	w19, #0x1                   	// #1
  434a74:	cmp	x23, x0
  434a78:	b.eq	434a9c <nftw@plt+0x31f1c>  // b.none
  434a7c:	ldr	x23, [sp, #48]
  434a80:	mov	x0, x21
  434a84:	bl	402910 <free@plt>
  434a88:	mov	w0, w19
  434a8c:	ldp	x19, x20, [sp, #16]
  434a90:	ldp	x21, x22, [sp, #32]
  434a94:	ldp	x29, x30, [sp], #80
  434a98:	ret
  434a9c:	mov	x2, x23
  434aa0:	mov	x1, x22
  434aa4:	mov	x0, x21
  434aa8:	bl	402850 <memcmp@plt>
  434aac:	cmp	w0, #0x0
  434ab0:	cset	w19, ne  // ne = any
  434ab4:	ldr	x23, [sp, #48]
  434ab8:	b	434a80 <nftw@plt+0x31f00>
  434abc:	mov	w19, #0x1                   	// #1
  434ac0:	b	434a80 <nftw@plt+0x31f00>
  434ac4:	mov	w19, #0x1                   	// #1
  434ac8:	ldr	x23, [sp, #48]
  434acc:	b	434a80 <nftw@plt+0x31f00>
  434ad0:	mov	w19, #0x1                   	// #1
  434ad4:	ldr	x23, [sp, #48]
  434ad8:	b	434a80 <nftw@plt+0x31f00>
  434adc:	mov	w19, #0x0                   	// #0
  434ae0:	ldr	x23, [sp, #48]
  434ae4:	b	434a80 <nftw@plt+0x31f00>
  434ae8:	stp	x29, x30, [sp, #-48]!
  434aec:	mov	x29, sp
  434af0:	stp	x19, x20, [sp, #16]
  434af4:	stp	x21, x22, [sp, #32]
  434af8:	mov	x19, x0
  434afc:	bl	429308 <nftw@plt+0x26788>
  434b00:	ldrb	w0, [x0, #4]
  434b04:	cmp	w0, #0x25
  434b08:	b.eq	434b2c <nftw@plt+0x31fac>  // b.none
  434b0c:	mov	w1, #0x1                   	// #1
  434b10:	mov	x0, x19
  434b14:	bl	42e8f0 <nftw@plt+0x2bd70>
  434b18:	mov	sp, x29
  434b1c:	ldp	x19, x20, [sp, #16]
  434b20:	ldp	x21, x22, [sp, #32]
  434b24:	ldp	x29, x30, [sp], #48
  434b28:	ret
  434b2c:	mov	x0, x19
  434b30:	bl	429308 <nftw@plt+0x26788>
  434b34:	ldrb	w0, [x0, #4]
  434b38:	cmp	w0, #0x37
  434b3c:	b.eq	434b50 <nftw@plt+0x31fd0>  // b.none
  434b40:	mov	w1, #0x2                   	// #2
  434b44:	mov	x0, x19
  434b48:	bl	42e8f0 <nftw@plt+0x2bd70>
  434b4c:	b	434b18 <nftw@plt+0x31f98>
  434b50:	mov	x0, x19
  434b54:	bl	429308 <nftw@plt+0x26788>
  434b58:	mov	x20, x0
  434b5c:	ldrb	w0, [x0, #4]
  434b60:	cmp	w0, #0x3e
  434b64:	b.ne	434b9c <nftw@plt+0x3201c>  // b.any
  434b68:	ldr	w2, [x20, #8]
  434b6c:	cmp	w2, #0x4
  434b70:	b.ls	434b9c <nftw@plt+0x3201c>  // b.plast
  434b74:	ldr	x1, [x20, #16]
  434b78:	sub	w0, w2, #0x2
  434b7c:	ldrb	w0, [x1, w0, uxtw]
  434b80:	cmp	w0, #0x2f
  434b84:	b.ne	434b9c <nftw@plt+0x3201c>  // b.any
  434b88:	sub	w0, w2, #0x3
  434b8c:	mov	w3, w0
  434b90:	ldrb	w0, [x1, w0, uxtw]
  434b94:	cmp	w0, #0x2f
  434b98:	b.eq	434bac <nftw@plt+0x3202c>  // b.none
  434b9c:	mov	w1, #0x3                   	// #3
  434ba0:	mov	x0, x19
  434ba4:	bl	42e8f0 <nftw@plt+0x2bd70>
  434ba8:	b	434b18 <nftw@plt+0x31f98>
  434bac:	ldr	x21, [x19, #920]
  434bb0:	cbz	x21, 434b18 <nftw@plt+0x31f98>
  434bb4:	add	x0, x3, #0xf
  434bb8:	and	x0, x0, #0x1fffffff0
  434bbc:	sub	sp, sp, x0
  434bc0:	mov	x22, sp
  434bc4:	sub	w2, w2, #0x4
  434bc8:	add	x1, x1, #0x1
  434bcc:	mov	x0, x22
  434bd0:	bl	402490 <memcpy@plt>
  434bd4:	ldr	w0, [x20, #8]
  434bd8:	sub	w0, w0, #0x4
  434bdc:	strb	wzr, [x22, w0, uxtw]
  434be0:	mov	x1, x22
  434be4:	mov	x0, x19
  434be8:	blr	x21
  434bec:	b	434b18 <nftw@plt+0x31f98>
  434bf0:	str	w1, [x0, #1116]
  434bf4:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  434bf8:	add	x3, x3, #0xe18
  434bfc:	sbfiz	x2, x1, #4, #32
  434c00:	sub	x1, x2, w1, sxtw
  434c04:	add	x2, x3, x1
  434c08:	ldrb	w1, [x3, x1]
  434c0c:	strb	w1, [x0, #1152]
  434c10:	ldrb	w1, [x2, #1]
  434c14:	strb	w1, [x0, #1120]
  434c18:	ldrb	w1, [x2, #2]
  434c1c:	strb	w1, [x0, #1127]
  434c20:	ldrb	w1, [x2, #3]
  434c24:	strb	w1, [x0, #1147]
  434c28:	ldrb	w1, [x2, #4]
  434c2c:	strb	w1, [x0, #1164]
  434c30:	ldrb	w1, [x2, #5]
  434c34:	strb	w1, [x0, #1153]
  434c38:	ldrb	w1, [x2, #6]
  434c3c:	strb	w1, [x0, #1126]
  434c40:	ldrb	w1, [x2, #7]
  434c44:	strb	w1, [x0, #1128]
  434c48:	ldrb	w1, [x2, #8]
  434c4c:	strb	w1, [x0, #1130]
  434c50:	ldrb	w1, [x2, #9]
  434c54:	strb	w1, [x0, #1161]
  434c58:	ldrb	w1, [x2, #10]
  434c5c:	strb	w1, [x0, #1165]
  434c60:	ldrb	w1, [x2, #11]
  434c64:	strb	w1, [x0, #1166]
  434c68:	ldrb	w1, [x2, #12]
  434c6c:	strb	w1, [x0, #1125]
  434c70:	ldrb	w1, [x2, #13]
  434c74:	strb	w1, [x0, #1129]
  434c78:	ldrb	w1, [x2, #14]
  434c7c:	strb	w1, [x0, #1167]
  434c80:	ret
  434c84:	stp	x29, x30, [sp, #-64]!
  434c88:	mov	x29, sp
  434c8c:	stp	x19, x20, [sp, #16]
  434c90:	stp	x21, x22, [sp, #32]
  434c94:	str	x23, [sp, #48]
  434c98:	mov	w23, w0
  434c9c:	mov	x21, x1
  434ca0:	mov	x22, x2
  434ca4:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  434ca8:	ldr	w0, [x0, #2416]
  434cac:	cbz	w0, 434e6c <nftw@plt+0x322ec>
  434cb0:	mov	x1, #0x588                 	// #1416
  434cb4:	mov	x0, #0x1                   	// #1
  434cb8:	bl	44a744 <_obstack_memory_used@@Base+0x140>
  434cbc:	mov	x19, x0
  434cc0:	add	x20, x0, #0x50
  434cc4:	stp	xzr, xzr, [x0, #80]
  434cc8:	stp	xzr, xzr, [x0, #96]
  434ccc:	stp	xzr, xzr, [x0, #112]
  434cd0:	str	xzr, [x0, #128]
  434cd4:	mov	w1, w23
  434cd8:	bl	434bf0 <nftw@plt+0x32070>
  434cdc:	mov	w0, #0x1                   	// #1
  434ce0:	strb	w0, [x19, #1137]
  434ce4:	strb	w0, [x19, #1123]
  434ce8:	strb	w0, [x19, #1124]
  434cec:	mov	w1, #0x8                   	// #8
  434cf0:	str	w1, [x19, #1112]
  434cf4:	strb	w0, [x19, #1158]
  434cf8:	mov	w1, #0x2                   	// #2
  434cfc:	strb	w1, [x19, #1136]
  434d00:	strb	w0, [x19, #1140]
  434d04:	mov	w2, #0xffffffff            	// #-1
  434d08:	strb	w2, [x19, #1198]
  434d0c:	strb	wzr, [x19, #1199]
  434d10:	strb	w0, [x19, #1132]
  434d14:	strb	wzr, [x19, #1139]
  434d18:	strb	w0, [x19, #1146]
  434d1c:	strb	w0, [x19, #1148]
  434d20:	strb	w0, [x19, #1142]
  434d24:	strb	w0, [x19, #1143]
  434d28:	strb	wzr, [x19, #1144]
  434d2c:	strb	w1, [x19, #1157]
  434d30:	mov	w1, #0x1                   	// #1
  434d34:	str	w1, [x19, #1192]
  434d38:	strb	w0, [x19, #1162]
  434d3c:	strb	w0, [x19, #1245]
  434d40:	strb	w0, [x19, #1163]
  434d44:	strb	wzr, [x19, #1134]
  434d48:	mov	x1, #0x40                  	// #64
  434d4c:	str	x1, [x19, #1208]
  434d50:	mov	x1, #0x8                   	// #8
  434d54:	str	x1, [x19, #1216]
  434d58:	mov	x1, #0x20                  	// #32
  434d5c:	str	x1, [x19, #1232]
  434d60:	str	x1, [x19, #1224]
  434d64:	strb	wzr, [x19, #1240]
  434d68:	strb	w0, [x19, #1241]
  434d6c:	strb	w0, [x19, #1242]
  434d70:	bl	418e80 <nftw@plt+0x16300>
  434d74:	str	x0, [x19, #1168]
  434d78:	str	xzr, [x19, #1176]
  434d7c:	bl	418e80 <nftw@plt+0x16300>
  434d80:	str	x0, [x19, #1184]
  434d84:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  434d88:	add	x0, x0, #0x780
  434d8c:	str	x0, [x19, #224]
  434d90:	str	x22, [x19, #40]
  434d94:	ldrb	w0, [x19, #1123]
  434d98:	cmp	w0, #0x0
  434d9c:	cset	w0, eq  // eq = none
  434da0:	strb	w0, [x19, #21]
  434da4:	mov	w0, #0x53                  	// #83
  434da8:	strb	w0, [x19, #668]
  434dac:	str	xzr, [x19, #672]
  434db0:	mov	w0, #0x16                  	// #22
  434db4:	strb	w0, [x19, #692]
  434db8:	strh	wzr, [x19, #694]
  434dbc:	add	x22, x19, #0x1c8
  434dc0:	mov	w1, #0xfa                  	// #250
  434dc4:	mov	x0, x22
  434dc8:	bl	427388 <nftw@plt+0x24808>
  434dcc:	str	x22, [x19, #488]
  434dd0:	ldr	x0, [x19, #472]
  434dd4:	str	x0, [x19, #448]
  434dd8:	str	x20, [x19, #136]
  434ddc:	str	xzr, [x19, #120]
  434de0:	str	xzr, [x19, #80]
  434de4:	str	xzr, [x19, #88]
  434de8:	mov	x1, #0x0                   	// #0
  434dec:	mov	x0, x19
  434df0:	bl	428168 <nftw@plt+0x255e8>
  434df4:	str	x0, [x19, #56]
  434df8:	mov	x1, #0x0                   	// #0
  434dfc:	mov	x0, x19
  434e00:	bl	428168 <nftw@plt+0x255e8>
  434e04:	str	x0, [x19, #64]
  434e08:	str	xzr, [x19, #1400]
  434e0c:	str	wzr, [x19, #1408]
  434e10:	mov	x0, #0xfffffffffffffffe    	// #-2
  434e14:	str	x0, [x19, #656]
  434e18:	mov	x0, x19
  434e1c:	bl	422114 <nftw@plt+0x1f594>
  434e20:	adrp	x4, 402000 <memcpy@plt-0x490>
  434e24:	add	x4, x4, #0x910
  434e28:	adrp	x3, 44a000 <nftw@plt+0x47480>
  434e2c:	add	x3, x3, #0x710
  434e30:	mov	x2, #0x0                   	// #0
  434e34:	mov	x1, #0x0                   	// #0
  434e38:	add	x0, x19, #0x328
  434e3c:	bl	44a3d8 <_obstack_begin@@Base>
  434e40:	mov	x0, x19
  434e44:	bl	4259bc <nftw@plt+0x22e3c>
  434e48:	mov	x1, x21
  434e4c:	mov	x0, x19
  434e50:	bl	426254 <nftw@plt+0x236d4>
  434e54:	mov	x0, x19
  434e58:	ldp	x19, x20, [sp, #16]
  434e5c:	ldp	x21, x22, [sp, #32]
  434e60:	ldr	x23, [sp, #48]
  434e64:	ldp	x29, x30, [sp], #64
  434e68:	ret
  434e6c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  434e70:	add	x19, x0, #0x970
  434e74:	mov	w1, #0x1                   	// #1
  434e78:	str	w1, [x0, #2416]
  434e7c:	bl	4269b0 <nftw@plt+0x23e30>
  434e80:	mov	w1, #0x23                  	// #35
  434e84:	strb	w1, [x19, #69]
  434e88:	mov	w1, #0x5d                  	// #93
  434e8c:	strb	w1, [x19, #49]
  434e90:	mov	w1, #0x7c                  	// #124
  434e94:	strb	w1, [x19, #41]
  434e98:	mov	w1, #0x5b                  	// #91
  434e9c:	strb	w1, [x19, #48]
  434ea0:	mov	w1, #0x5e                  	// #94
  434ea4:	strb	w1, [x19, #47]
  434ea8:	mov	w1, #0x7d                  	// #125
  434eac:	strb	w1, [x19, #70]
  434eb0:	mov	w1, #0x5c                  	// #92
  434eb4:	strb	w1, [x19, #55]
  434eb8:	mov	w1, #0x7b                  	// #123
  434ebc:	strb	w1, [x19, #68]
  434ec0:	mov	w1, #0x7e                  	// #126
  434ec4:	strb	w1, [x19, #53]
  434ec8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  434ecc:	add	x1, x1, #0x218
  434ed0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x199fc>
  434ed4:	add	x0, x0, #0xf38
  434ed8:	bl	4026b0 <bindtextdomain@plt>
  434edc:	b	434cb0 <nftw@plt+0x32130>
  434ee0:	str	x1, [x0, #40]
  434ee4:	ret
  434ee8:	stp	x29, x30, [sp, #-48]!
  434eec:	mov	x29, sp
  434ef0:	stp	x19, x20, [sp, #16]
  434ef4:	stp	x21, x22, [sp, #32]
  434ef8:	mov	x19, x0
  434efc:	ldr	x0, [x0, #1096]
  434f00:	bl	402910 <free@plt>
  434f04:	ldr	x0, [x19]
  434f08:	cbz	x0, 434f1c <nftw@plt+0x3239c>
  434f0c:	mov	x0, x19
  434f10:	bl	41ec80 <nftw@plt+0x1c100>
  434f14:	ldr	x0, [x19]
  434f18:	cbnz	x0, 434f0c <nftw@plt+0x3238c>
  434f1c:	ldr	x0, [x19, #1312]
  434f20:	bl	402910 <free@plt>
  434f24:	ldr	x0, [x19, #504]
  434f28:	cbz	x0, 434f38 <nftw@plt+0x323b8>
  434f2c:	bl	402910 <free@plt>
  434f30:	str	xzr, [x19, #504]
  434f34:	str	wzr, [x19, #512]
  434f38:	ldr	x0, [x19, #712]
  434f3c:	cbz	x0, 434f44 <nftw@plt+0x323c4>
  434f40:	bl	432088 <nftw@plt+0x2f508>
  434f44:	mov	x1, #0x0                   	// #0
  434f48:	add	x0, x19, #0x328
  434f4c:	bl	44a584 <_obstack_free@@Base>
  434f50:	mov	x0, x19
  434f54:	bl	4261f8 <nftw@plt+0x23678>
  434f58:	mov	x0, x19
  434f5c:	bl	425aa4 <nftw@plt+0x22f24>
  434f60:	mov	x0, x19
  434f64:	bl	41886c <nftw@plt+0x15cec>
  434f68:	ldr	x0, [x19, #56]
  434f6c:	bl	42838c <nftw@plt+0x2580c>
  434f70:	ldr	x0, [x19, #64]
  434f74:	bl	42838c <nftw@plt+0x2580c>
  434f78:	ldr	x0, [x19, #72]
  434f7c:	bl	42838c <nftw@plt+0x2580c>
  434f80:	add	x22, x19, #0x1c8
  434f84:	ldr	x20, [x19, #456]
  434f88:	ldr	x0, [x22, #16]
  434f8c:	bl	402910 <free@plt>
  434f90:	b	434fa0 <nftw@plt+0x32420>
  434f94:	mov	x0, x20
  434f98:	bl	402910 <free@plt>
  434f9c:	mov	x20, x21
  434fa0:	cbz	x20, 434fbc <nftw@plt+0x3243c>
  434fa4:	ldr	x21, [x20]
  434fa8:	ldr	x0, [x20, #16]
  434fac:	bl	402910 <free@plt>
  434fb0:	cmp	x20, x22
  434fb4:	b.ne	434f94 <nftw@plt+0x32414>  // b.any
  434fb8:	b	434f9c <nftw@plt+0x3241c>
  434fbc:	ldr	x20, [x19, #80]
  434fc0:	cbz	x20, 434fd4 <nftw@plt+0x32454>
  434fc4:	mov	x0, x20
  434fc8:	ldr	x20, [x20]
  434fcc:	bl	402910 <free@plt>
  434fd0:	cbnz	x20, 434fc4 <nftw@plt+0x32444>
  434fd4:	ldr	x0, [x19, #1384]
  434fd8:	cbz	x0, 435014 <nftw@plt+0x32494>
  434fdc:	ldr	w0, [x19, #1392]
  434fe0:	cmp	w0, #0x0
  434fe4:	b.le	43500c <nftw@plt+0x3248c>
  434fe8:	mov	x20, #0x0                   	// #0
  434fec:	ldr	x1, [x19, #1384]
  434ff0:	lsl	x0, x20, #4
  434ff4:	ldr	x0, [x1, x0]
  434ff8:	bl	402910 <free@plt>
  434ffc:	add	x20, x20, #0x1
  435000:	ldr	w0, [x19, #1392]
  435004:	cmp	w0, w20
  435008:	b.gt	434fec <nftw@plt+0x3246c>
  43500c:	ldr	x0, [x19, #1384]
  435010:	bl	402910 <free@plt>
  435014:	ldr	x0, [x19, #1400]
  435018:	cbz	x0, 435040 <nftw@plt+0x324c0>
  43501c:	ldr	x20, [x19, #1400]
  435020:	ldr	x0, [x20]
  435024:	str	x0, [x19, #1400]
  435028:	ldr	x0, [x20, #8]
  43502c:	bl	402910 <free@plt>
  435030:	mov	x0, x20
  435034:	bl	402910 <free@plt>
  435038:	ldr	x0, [x19, #1400]
  43503c:	cbnz	x0, 43501c <nftw@plt+0x3249c>
  435040:	mov	x0, x19
  435044:	bl	402910 <free@plt>
  435048:	ldp	x19, x20, [sp, #16]
  43504c:	ldp	x21, x22, [sp, #32]
  435050:	ldp	x29, x30, [sp], #48
  435054:	ret
  435058:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43505c:	add	x1, x1, #0xe18
  435060:	add	x1, x1, #0x150
  435064:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435068:	add	x3, x3, #0xe18
  43506c:	add	x3, x3, #0x200
  435070:	ldrh	w2, [x1, #10]
  435074:	cmp	w2, w0
  435078:	b.eq	435090 <nftw@plt+0x32510>  // b.none
  43507c:	add	x1, x1, #0x10
  435080:	cmp	x1, x3
  435084:	b.ne	435070 <nftw@plt+0x324f0>  // b.any
  435088:	mov	x0, #0x0                   	// #0
  43508c:	ret
  435090:	ldr	x0, [x1]
  435094:	b	43508c <nftw@plt+0x3250c>
  435098:	stp	x29, x30, [sp, #-48]!
  43509c:	mov	x29, sp
  4350a0:	stp	x19, x20, [sp, #16]
  4350a4:	str	x21, [sp, #32]
  4350a8:	mov	x20, x0
  4350ac:	ldrb	w0, [x0, #1160]
  4350b0:	mov	x21, #0xa                   	// #10
  4350b4:	cbnz	w0, 4350d4 <nftw@plt+0x32554>
  4350b8:	ldrb	w0, [x20, #1243]
  4350bc:	mov	x21, #0xb                   	// #11
  4350c0:	cbz	w0, 4350d4 <nftw@plt+0x32554>
  4350c4:	ldrb	w0, [x20, #1153]
  4350c8:	cmp	w0, #0x0
  4350cc:	cset	x21, eq  // eq = none
  4350d0:	add	x21, x21, #0xb
  4350d4:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4350d8:	add	x19, x19, #0xe18
  4350dc:	add	x19, x19, #0x200
  4350e0:	add	x21, x19, x21, lsl #4
  4350e4:	b	43512c <nftw@plt+0x325ac>
  4350e8:	ldrh	w2, [x19, #8]
  4350ec:	ldr	x1, [x19]
  4350f0:	mov	x0, x20
  4350f4:	bl	426234 <nftw@plt+0x236b4>
  4350f8:	ldrb	w1, [x0, #18]
  4350fc:	orr	w1, w1, #0x3
  435100:	strb	w1, [x0, #18]
  435104:	ldrb	w1, [x19, #12]
  435108:	cbz	w1, 435118 <nftw@plt+0x32598>
  43510c:	ldrh	w1, [x0, #18]
  435110:	orr	w1, w1, #0x20
  435114:	strh	w1, [x0, #18]
  435118:	ldrh	w1, [x19, #10]
  43511c:	str	w1, [x0, #24]
  435120:	add	x19, x19, #0x10
  435124:	cmp	x19, x21
  435128:	b.cs	435150 <nftw@plt+0x325d0>  // b.hs, b.nlast
  43512c:	ldrh	w0, [x19, #10]
  435130:	cmp	w0, #0xa
  435134:	b.ne	4350e8 <nftw@plt+0x32568>  // b.any
  435138:	ldr	w0, [x20, #1116]
  43513c:	cmp	w0, #0x15
  435140:	b.eq	435120 <nftw@plt+0x325a0>  // b.none
  435144:	ldr	x0, [x20, #1040]
  435148:	cbnz	x0, 4350e8 <nftw@plt+0x32568>
  43514c:	b	435120 <nftw@plt+0x325a0>
  435150:	ldp	x19, x20, [sp, #16]
  435154:	ldr	x21, [sp, #32]
  435158:	ldp	x29, x30, [sp], #48
  43515c:	ret
  435160:	stp	x29, x30, [sp, #-32]!
  435164:	mov	x29, sp
  435168:	stp	x19, x20, [sp, #16]
  43516c:	mov	x19, x0
  435170:	mov	w20, w1
  435174:	bl	435098 <nftw@plt+0x32518>
  435178:	ldrb	w0, [x19, #1160]
  43517c:	cbnz	w0, 4351a0 <nftw@plt+0x32620>
  435180:	ldrb	w0, [x19, #1243]
  435184:	cbz	w0, 435190 <nftw@plt+0x32610>
  435188:	ldrb	w0, [x19, #1153]
  43518c:	cbz	w0, 4351a0 <nftw@plt+0x32620>
  435190:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435194:	add	x1, x1, #0xb50
  435198:	mov	x0, x19
  43519c:	bl	41f550 <nftw@plt+0x1c9d0>
  4351a0:	ldrb	w0, [x19, #1120]
  4351a4:	cbz	w0, 435240 <nftw@plt+0x326c0>
  4351a8:	ldr	w0, [x19, #1116]
  4351ac:	sub	w1, w0, #0x13
  4351b0:	cmp	w1, #0x1
  4351b4:	b.ls	4351f0 <nftw@plt+0x32670>  // b.plast
  4351b8:	sub	w1, w0, #0x11
  4351bc:	cmp	w1, #0x1
  4351c0:	b.ls	435204 <nftw@plt+0x32684>  // b.plast
  4351c4:	sub	w1, w0, #0xf
  4351c8:	cmp	w1, #0x1
  4351cc:	b.ls	435218 <nftw@plt+0x32698>  // b.plast
  4351d0:	sub	w0, w0, #0xd
  4351d4:	cmp	w0, #0x1
  4351d8:	b.ls	43522c <nftw@plt+0x326ac>  // b.plast
  4351dc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4351e0:	add	x1, x1, #0xbc0
  4351e4:	mov	x0, x19
  4351e8:	bl	41f550 <nftw@plt+0x1c9d0>
  4351ec:	b	4352c4 <nftw@plt+0x32744>
  4351f0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4351f4:	add	x1, x1, #0xb60
  4351f8:	mov	x0, x19
  4351fc:	bl	41f550 <nftw@plt+0x1c9d0>
  435200:	b	4352c4 <nftw@plt+0x32744>
  435204:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435208:	add	x1, x1, #0xb78
  43520c:	mov	x0, x19
  435210:	bl	41f550 <nftw@plt+0x1c9d0>
  435214:	b	4352c4 <nftw@plt+0x32744>
  435218:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43521c:	add	x1, x1, #0xb90
  435220:	mov	x0, x19
  435224:	bl	41f550 <nftw@plt+0x1c9d0>
  435228:	b	4352c4 <nftw@plt+0x32744>
  43522c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435230:	add	x1, x1, #0xba8
  435234:	mov	x0, x19
  435238:	bl	41f550 <nftw@plt+0x1c9d0>
  43523c:	b	4352c4 <nftw@plt+0x32744>
  435240:	ldr	w0, [x19, #1116]
  435244:	cmp	w0, #0x15
  435248:	b.eq	43528c <nftw@plt+0x3270c>  // b.none
  43524c:	cmp	w0, #0x6
  435250:	b.eq	4352a0 <nftw@plt+0x32720>  // b.none
  435254:	cmp	w0, #0x4
  435258:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  43525c:	b.eq	4352b4 <nftw@plt+0x32734>  // b.none
  435260:	cmp	w0, #0x3
  435264:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  435268:	b.eq	43532c <nftw@plt+0x327ac>  // b.none
  43526c:	cmp	w0, #0x2
  435270:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  435274:	b.eq	435340 <nftw@plt+0x327c0>  // b.none
  435278:	ldrb	w0, [x19, #1152]
  43527c:	cbnz	w0, 435354 <nftw@plt+0x327d4>
  435280:	ldrb	w0, [x19, #1128]
  435284:	cbnz	w0, 4352e4 <nftw@plt+0x32764>
  435288:	b	435304 <nftw@plt+0x32784>
  43528c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435290:	add	x1, x1, #0xbd8
  435294:	mov	x0, x19
  435298:	bl	41f550 <nftw@plt+0x1c9d0>
  43529c:	b	4352c4 <nftw@plt+0x32744>
  4352a0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4352a4:	add	x1, x1, #0xbe8
  4352a8:	mov	x0, x19
  4352ac:	bl	41f550 <nftw@plt+0x1c9d0>
  4352b0:	b	4352c4 <nftw@plt+0x32744>
  4352b4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4352b8:	add	x1, x1, #0xc08
  4352bc:	mov	x0, x19
  4352c0:	bl	41f550 <nftw@plt+0x1c9d0>
  4352c4:	ldrb	w0, [x19, #1128]
  4352c8:	cbz	w0, 435304 <nftw@plt+0x32784>
  4352cc:	ldrb	w0, [x19, #1120]
  4352d0:	cbz	w0, 4352e4 <nftw@plt+0x32764>
  4352d4:	ldr	w0, [x19, #1116]
  4352d8:	sub	w0, w0, #0xb
  4352dc:	cmp	w0, #0x1
  4352e0:	b.ls	435304 <nftw@plt+0x32784>  // b.plast
  4352e4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4352e8:	add	x1, x1, #0xc88
  4352ec:	mov	x0, x19
  4352f0:	bl	41f550 <nftw@plt+0x1c9d0>
  4352f4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  4352f8:	add	x1, x1, #0xca0
  4352fc:	mov	x0, x19
  435300:	bl	41f550 <nftw@plt+0x1c9d0>
  435304:	cbz	w20, 435368 <nftw@plt+0x327e8>
  435308:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43530c:	add	x1, x1, #0xcb8
  435310:	mov	x0, x19
  435314:	bl	41f550 <nftw@plt+0x1c9d0>
  435318:	ldrb	w0, [x19, #1122]
  43531c:	cbnz	w0, 43537c <nftw@plt+0x327fc>
  435320:	ldp	x19, x20, [sp, #16]
  435324:	ldp	x29, x30, [sp], #32
  435328:	ret
  43532c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435330:	add	x1, x1, #0xc28
  435334:	mov	x0, x19
  435338:	bl	41f550 <nftw@plt+0x1c9d0>
  43533c:	b	4352c4 <nftw@plt+0x32744>
  435340:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435344:	add	x1, x1, #0xc48
  435348:	mov	x0, x19
  43534c:	bl	41f550 <nftw@plt+0x1c9d0>
  435350:	b	4352c4 <nftw@plt+0x32744>
  435354:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435358:	add	x1, x1, #0xc68
  43535c:	mov	x0, x19
  435360:	bl	41f550 <nftw@plt+0x1c9d0>
  435364:	b	4352c4 <nftw@plt+0x32744>
  435368:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43536c:	add	x1, x1, #0xcd0
  435370:	mov	x0, x19
  435374:	bl	41f550 <nftw@plt+0x1c9d0>
  435378:	b	435318 <nftw@plt+0x32798>
  43537c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435380:	add	x1, x1, #0xce8
  435384:	mov	x0, x19
  435388:	bl	41f550 <nftw@plt+0x1c9d0>
  43538c:	b	435320 <nftw@plt+0x327a0>
  435390:	stp	x29, x30, [sp, #-48]!
  435394:	mov	x29, sp
  435398:	stp	x19, x20, [sp, #16]
  43539c:	stp	x21, x22, [sp, #32]
  4353a0:	mov	x19, x0
  4353a4:	ldrb	w0, [x0, #1120]
  4353a8:	cbz	w0, 4353b0 <nftw@plt+0x32830>
  4353ac:	strb	wzr, [x19, #1138]
  4353b0:	ldrb	w1, [x19, #1155]
  4353b4:	cbz	w1, 4353dc <nftw@plt+0x3285c>
  4353b8:	ldrb	w1, [x19, #1244]
  4353bc:	cbnz	w1, 4353c8 <nftw@plt+0x32848>
  4353c0:	mov	w1, #0x1                   	// #1
  4353c4:	strb	w1, [x19, #24]
  4353c8:	strb	wzr, [x19, #1160]
  4353cc:	ldrb	w1, [x19, #1136]
  4353d0:	cmp	w1, #0x2
  4353d4:	b.ne	435408 <nftw@plt+0x32888>  // b.any
  4353d8:	b	4353e8 <nftw@plt+0x32868>
  4353dc:	ldrb	w1, [x19, #1136]
  4353e0:	cmp	w1, #0x2
  4353e4:	b.ne	4353f8 <nftw@plt+0x32878>  // b.any
  4353e8:	ldrb	w1, [x19, #1125]
  4353ec:	cmp	w1, #0x0
  4353f0:	cset	w1, eq  // eq = none
  4353f4:	strb	w1, [x19, #1136]
  4353f8:	ldrb	w1, [x19, #1160]
  4353fc:	cbz	w1, 435408 <nftw@plt+0x32888>
  435400:	strb	wzr, [x19, #1125]
  435404:	strb	wzr, [x19, #1136]
  435408:	cbz	w0, 4354a0 <nftw@plt+0x32920>
  43540c:	ldrb	w0, [x19, #1158]
  435410:	cmp	w0, #0x0
  435414:	cset	w21, ne  // ne = any
  435418:	ldrb	w1, [x19, #1159]
  43541c:	cbz	w1, 43548c <nftw@plt+0x3290c>
  435420:	mov	w0, #0x84                  	// #132
  435424:	orr	w21, w21, w0
  435428:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  43542c:	add	x20, x20, #0xe18
  435430:	add	x20, x20, #0x150
  435434:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x1c9fc>
  435438:	add	x22, x22, #0xe18
  43543c:	add	x22, x22, #0x200
  435440:	ldrh	w2, [x20, #8]
  435444:	ldr	x1, [x20]
  435448:	mov	x0, x19
  43544c:	bl	426234 <nftw@plt+0x236b4>
  435450:	ldrh	w1, [x0, #18]
  435454:	ubfx	x2, x1, #2, #8
  435458:	orr	w2, w21, w2
  43545c:	bfi	w1, w2, #2, #8
  435460:	strh	w1, [x0, #18]
  435464:	ldrb	w1, [x0, #16]
  435468:	and	w1, w1, #0xfffffffe
  43546c:	strb	w1, [x0, #16]
  435470:	ldrh	w2, [x20, #10]
  435474:	bfi	w1, w2, #1, #7
  435478:	strb	w1, [x0, #16]
  43547c:	add	x20, x20, #0x10
  435480:	cmp	x20, x22
  435484:	b.ne	435440 <nftw@plt+0x328c0>  // b.any
  435488:	b	435490 <nftw@plt+0x32910>
  43548c:	cbnz	w0, 435428 <nftw@plt+0x328a8>
  435490:	ldp	x19, x20, [sp, #16]
  435494:	ldp	x21, x22, [sp, #32]
  435498:	ldp	x29, x30, [sp], #48
  43549c:	ret
  4354a0:	ldrb	w0, [x19, #1159]
  4354a4:	cbz	w0, 435490 <nftw@plt+0x32910>
  4354a8:	mov	w21, #0x0                   	// #0
  4354ac:	b	435420 <nftw@plt+0x328a0>
  4354b0:	stp	x29, x30, [sp, #-48]!
  4354b4:	mov	x29, sp
  4354b8:	stp	x19, x20, [sp, #16]
  4354bc:	mov	x19, x0
  4354c0:	mov	x20, x1
  4354c4:	ldr	w0, [x0, #1200]
  4354c8:	cbz	w0, 4354e0 <nftw@plt+0x32960>
  4354cc:	ldr	x0, [x19, #712]
  4354d0:	cbz	x0, 435540 <nftw@plt+0x329c0>
  4354d4:	mov	x1, x20
  4354d8:	ldr	x0, [x19, #712]
  4354dc:	bl	4321ec <nftw@plt+0x2f66c>
  4354e0:	mov	w6, #0x0                   	// #0
  4354e4:	mov	w5, #0x0                   	// #0
  4354e8:	mov	w4, #0x0                   	// #0
  4354ec:	mov	w3, #0x0                   	// #0
  4354f0:	add	x2, x19, #0xd8
  4354f4:	mov	x1, x20
  4354f8:	mov	x0, x19
  4354fc:	bl	424ac4 <nftw@plt+0x21f44>
  435500:	str	x0, [x19, #288]
  435504:	bl	424ab4 <nftw@plt+0x21f34>
  435508:	and	w1, w0, #0xff
  43550c:	mov	x0, #0x0                   	// #0
  435510:	cbnz	w1, 435534 <nftw@plt+0x329b4>
  435514:	mov	w3, #0x0                   	// #0
  435518:	mov	w2, #0x0                   	// #0
  43551c:	ldr	x1, [x19, #288]
  435520:	mov	x0, x19
  435524:	bl	42531c <nftw@plt+0x2279c>
  435528:	ldrb	w1, [x19, #1155]
  43552c:	mov	x0, x20
  435530:	cbnz	w1, 43554c <nftw@plt+0x329cc>
  435534:	ldp	x19, x20, [sp, #16]
  435538:	ldp	x29, x30, [sp], #48
  43553c:	ret
  435540:	bl	43206c <nftw@plt+0x2f4ec>
  435544:	str	x0, [x19, #712]
  435548:	b	4354d4 <nftw@plt+0x32954>
  43554c:	mov	x0, x19
  435550:	bl	429308 <nftw@plt+0x26788>
  435554:	mov	x20, x0
  435558:	ldrb	w0, [x0, #4]
  43555c:	cmp	w0, #0x25
  435560:	b.eq	435594 <nftw@plt+0x32a14>  // b.none
  435564:	mov	w1, #0x1                   	// #1
  435568:	mov	x0, x19
  43556c:	bl	42e8f0 <nftw@plt+0x2bd70>
  435570:	ldr	x1, [x19, #40]
  435574:	ldr	w0, [x1, #12]
  435578:	sub	w0, w0, #0x1
  43557c:	ldr	x1, [x1]
  435580:	sbfiz	x2, x0, #1, #32
  435584:	add	x0, x2, w0, sxtw
  435588:	add	x0, x1, x0, lsl #3
  43558c:	ldr	x0, [x0, #8]
  435590:	b	435534 <nftw@plt+0x329b4>
  435594:	str	x21, [sp, #32]
  435598:	mov	w0, #0x1                   	// #1
  43559c:	strb	w0, [x19, #16]
  4355a0:	mov	x0, x19
  4355a4:	bl	429308 <nftw@plt+0x26788>
  4355a8:	mov	x21, x0
  4355ac:	mov	w1, #0x1                   	// #1
  4355b0:	mov	x0, x19
  4355b4:	bl	42e8f0 <nftw@plt+0x2bd70>
  4355b8:	strb	wzr, [x19, #16]
  4355bc:	ldrb	w0, [x21, #4]
  4355c0:	cmp	w0, #0x37
  4355c4:	b.eq	4355d0 <nftw@plt+0x32a50>  // b.none
  4355c8:	ldr	x21, [sp, #32]
  4355cc:	b	435564 <nftw@plt+0x329e4>
  4355d0:	ldrh	w1, [x20, #6]
  4355d4:	and	w1, w1, #0x1
  4355d8:	mov	x0, x19
  4355dc:	bl	41deb8 <nftw@plt+0x1b338>
  4355e0:	cbnz	w0, 4355ec <nftw@plt+0x32a6c>
  4355e4:	ldr	x21, [sp, #32]
  4355e8:	b	435564 <nftw@plt+0x329e4>
  4355ec:	mov	x0, x19
  4355f0:	bl	434ae8 <nftw@plt+0x31f68>
  4355f4:	ldr	x21, [sp, #32]
  4355f8:	b	435570 <nftw@plt+0x329f0>
  4355fc:	stp	x29, x30, [sp, #-32]!
  435600:	mov	x29, sp
  435604:	stp	x19, x20, [sp, #16]
  435608:	mov	x19, x0
  43560c:	mov	x20, x1
  435610:	ldrb	w0, [x0, #1151]
  435614:	cbnz	w0, 435654 <nftw@plt+0x32ad4>
  435618:	ldr	x0, [x19]
  43561c:	cbz	x0, 435630 <nftw@plt+0x32ab0>
  435620:	mov	x0, x19
  435624:	bl	41ec80 <nftw@plt+0x1c100>
  435628:	ldr	x0, [x19]
  43562c:	cbnz	x0, 435620 <nftw@plt+0x32aa0>
  435630:	ldr	w0, [x19, #1200]
  435634:	cmp	w0, #0x0
  435638:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  43563c:	b.ne	43566c <nftw@plt+0x32aec>  // b.any
  435640:	ldrb	w0, [x19, #1131]
  435644:	cbnz	w0, 435694 <nftw@plt+0x32b14>
  435648:	ldp	x19, x20, [sp, #16]
  43564c:	ldp	x29, x30, [sp], #32
  435650:	ret
  435654:	mov	x2, #0x0                   	// #0
  435658:	adrp	x1, 42d000 <nftw@plt+0x2a480>
  43565c:	add	x1, x1, #0xed4
  435660:	mov	x0, x19
  435664:	bl	4263c8 <nftw@plt+0x23848>
  435668:	b	435618 <nftw@plt+0x32a98>
  43566c:	mov	w2, #0x48                  	// #72
  435670:	mov	x1, x20
  435674:	ldr	x0, [x19, #712]
  435678:	bl	432428 <nftw@plt+0x2f8a8>
  43567c:	ldrb	w0, [x19, #1205]
  435680:	cbz	w0, 435640 <nftw@plt+0x32ac0>
  435684:	mov	x1, x20
  435688:	ldr	x0, [x19, #712]
  43568c:	bl	432654 <nftw@plt+0x2fad4>
  435690:	b	435640 <nftw@plt+0x32ac0>
  435694:	mov	x0, x19
  435698:	bl	425c08 <nftw@plt+0x23088>
  43569c:	b	435648 <nftw@plt+0x32ac8>
  4356a0:	stp	x29, x30, [sp, #-96]!
  4356a4:	mov	x29, sp
  4356a8:	mov	x5, x0
  4356ac:	add	x0, sp, #0x18
  4356b0:	stp	xzr, xzr, [sp, #32]
  4356b4:	stp	xzr, xzr, [x0, #24]
  4356b8:	stp	xzr, xzr, [x0, #40]
  4356bc:	stp	xzr, xzr, [x0, #56]
  4356c0:	str	x5, [sp, #24]
  4356c4:	str	w1, [sp, #32]
  4356c8:	mov	x1, #0x48                  	// #72
  4356cc:	bl	435960 <nftw@plt+0x32de0>
  4356d0:	cbz	x0, 4356fc <nftw@plt+0x32b7c>
  4356d4:	ldp	x2, x3, [sp, #24]
  4356d8:	stp	x2, x3, [x0]
  4356dc:	ldp	x2, x3, [sp, #40]
  4356e0:	stp	x2, x3, [x0, #16]
  4356e4:	ldp	x2, x3, [sp, #56]
  4356e8:	stp	x2, x3, [x0, #32]
  4356ec:	ldp	x2, x3, [sp, #72]
  4356f0:	stp	x2, x3, [x0, #48]
  4356f4:	ldr	x1, [sp, #88]
  4356f8:	str	x1, [x0, #64]
  4356fc:	ldp	x29, x30, [sp], #96
  435700:	ret
  435704:	stp	x29, x30, [sp, #-48]!
  435708:	mov	x29, sp
  43570c:	str	x19, [sp, #16]
  435710:	mov	x19, x1
  435714:	str	wzr, [sp, #44]
  435718:	add	x1, sp, #0x2c
  43571c:	bl	458df8 <_obstack_memory_used@@Base+0xe7f4>
  435720:	mov	x1, x0
  435724:	ldr	w0, [x19]
  435728:	cmp	w0, #0x0
  43572c:	b.gt	435780 <nftw@plt+0x32c00>
  435730:	ldr	w0, [sp, #44]
  435734:	cmp	w0, #0x0
  435738:	cset	x0, eq  // eq = none
  43573c:	sub	x1, x1, x0
  435740:	ldr	w0, [x19, #44]
  435744:	cbnz	w0, 435790 <nftw@plt+0x32c10>
  435748:	ldr	x5, [x19, #16]
  43574c:	mov	x4, #0x0                   	// #0
  435750:	mov	w3, #0x0                   	// #0
  435754:	mov	x2, #0x0                   	// #0
  435758:	ldr	x0, [x19, #32]
  43575c:	blr	x5
  435760:	str	w0, [x19, #40]
  435764:	ldr	w0, [x19, #40]
  435768:	cmp	w0, #0x0
  43576c:	mov	w0, #0x5                   	// #5
  435770:	csel	w0, w0, wzr, ne  // ne = any
  435774:	ldr	x19, [sp, #16]
  435778:	ldp	x29, x30, [sp], #48
  43577c:	ret
  435780:	sub	w0, w0, #0x1
  435784:	str	w0, [x19]
  435788:	mov	w0, #0x0                   	// #0
  43578c:	b	435774 <nftw@plt+0x32bf4>
  435790:	ldr	x4, [x19, #32]
  435794:	ldr	x3, [x19, #24]
  435798:	ldr	x2, [x19, #16]
  43579c:	ldr	x0, [x19, #8]
  4357a0:	bl	435e74 <nftw@plt+0x332f4>
  4357a4:	str	w0, [x19, #40]
  4357a8:	b	435764 <nftw@plt+0x32be4>
  4357ac:	stp	x29, x30, [sp, #-80]!
  4357b0:	mov	x29, sp
  4357b4:	str	x19, [sp, #16]
  4357b8:	mov	x19, x0
  4357bc:	add	w1, w1, #0x1
  4357c0:	str	w1, [sp, #32]
  4357c4:	str	x0, [sp, #40]
  4357c8:	str	x2, [sp, #48]
  4357cc:	str	x3, [sp, #56]
  4357d0:	str	x4, [sp, #64]
  4357d4:	str	wzr, [sp, #72]
  4357d8:	mov	x3, #0x0                   	// #0
  4357dc:	mov	x2, #0x0                   	// #0
  4357e0:	mov	x1, #0x1000                	// #4096
  4357e4:	bl	435960 <nftw@plt+0x32de0>
  4357e8:	cbz	x0, 43582c <nftw@plt+0x32cac>
  4357ec:	mov	x1, x0
  4357f0:	mov	x4, #0x0                   	// #0
  4357f4:	mov	x3, #0x0                   	// #0
  4357f8:	mov	x2, #0x1000                	// #4096
  4357fc:	mov	x0, x19
  435800:	bl	4358b4 <nftw@plt+0x32d34>
  435804:	mov	w0, #0x1                   	// #1
  435808:	str	w0, [sp, #76]
  43580c:	add	x1, sp, #0x20
  435810:	adrp	x0, 435000 <nftw@plt+0x32480>
  435814:	add	x0, x0, #0x704
  435818:	bl	459440 <_obstack_memory_used@@Base+0xee3c>
  43581c:	ldr	w0, [sp, #72]
  435820:	ldr	x19, [sp, #16]
  435824:	ldp	x29, x30, [sp], #80
  435828:	ret
  43582c:	str	wzr, [sp, #76]
  435830:	b	43580c <nftw@plt+0x32c8c>
  435834:	cmp	x2, #0xf
  435838:	b.ls	4358b0 <nftw@plt+0x32d30>  // b.plast
  43583c:	add	x4, x0, #0x40
  435840:	ldr	x3, [x0, #64]
  435844:	mov	x5, #0x0                   	// #0
  435848:	cbnz	x3, 435854 <nftw@plt+0x32cd4>
  43584c:	b	4358a0 <nftw@plt+0x32d20>
  435850:	mov	x4, x6
  435854:	add	x5, x5, #0x1
  435858:	mov	x6, x3
  43585c:	ldr	x3, [x3]
  435860:	cbz	x3, 435880 <nftw@plt+0x32d00>
  435864:	cbz	x4, 435850 <nftw@plt+0x32cd0>
  435868:	ldr	x7, [x4]
  43586c:	ldr	x8, [x3, #8]
  435870:	ldr	x7, [x7, #8]
  435874:	cmp	x8, x7
  435878:	csel	x4, x4, x6, cs  // cs = hs, nlast
  43587c:	b	435854 <nftw@plt+0x32cd4>
  435880:	cmp	x5, #0xf
  435884:	b.ls	4358a0 <nftw@plt+0x32d20>  // b.plast
  435888:	ldr	x3, [x4]
  43588c:	ldr	x5, [x3, #8]
  435890:	cmp	x5, x2
  435894:	b.cs	4358b0 <nftw@plt+0x32d30>  // b.hs, b.nlast
  435898:	ldr	x3, [x3]
  43589c:	str	x3, [x4]
  4358a0:	ldr	x3, [x0, #64]
  4358a4:	str	x3, [x1]
  4358a8:	str	x2, [x1, #8]
  4358ac:	str	x1, [x0, #64]
  4358b0:	ret
  4358b4:	stp	x29, x30, [sp, #-48]!
  4358b8:	mov	x29, sp
  4358bc:	stp	x19, x20, [sp, #16]
  4358c0:	str	x21, [sp, #32]
  4358c4:	mov	x19, x0
  4358c8:	mov	x21, x1
  4358cc:	mov	x20, x2
  4358d0:	mov	x0, #0xffff                	// #65535
  4358d4:	cmp	x2, x0
  4358d8:	b.ls	4358f4 <nftw@plt+0x32d74>  // b.plast
  4358dc:	bl	402760 <getpagesize@plt>
  4358e0:	sxtw	x0, w0
  4358e4:	sub	x0, x0, #0x1
  4358e8:	orr	x1, x21, x20
  4358ec:	tst	x0, x1
  4358f0:	b.eq	435940 <nftw@plt+0x32dc0>  // b.none
  4358f4:	ldr	w0, [x19, #8]
  4358f8:	cbz	w0, 435918 <nftw@plt+0x32d98>
  4358fc:	add	x0, x19, #0x3c
  435900:	mov	w2, #0x1                   	// #1
  435904:	ldxr	w1, [x0]
  435908:	stxr	w3, w2, [x0]
  43590c:	cbnz	w3, 435904 <nftw@plt+0x32d84>
  435910:	dmb	ish
  435914:	cbnz	w1, 435930 <nftw@plt+0x32db0>
  435918:	mov	x2, x20
  43591c:	mov	x1, x21
  435920:	mov	x0, x19
  435924:	bl	435834 <nftw@plt+0x32cb4>
  435928:	ldr	w0, [x19, #8]
  43592c:	cbnz	w0, 435954 <nftw@plt+0x32dd4>
  435930:	ldp	x19, x20, [sp, #16]
  435934:	ldr	x21, [sp, #32]
  435938:	ldp	x29, x30, [sp], #48
  43593c:	ret
  435940:	mov	x1, x20
  435944:	mov	x0, x21
  435948:	bl	402970 <munmap@plt>
  43594c:	cbnz	w0, 4358f4 <nftw@plt+0x32d74>
  435950:	b	435930 <nftw@plt+0x32db0>
  435954:	add	x19, x19, #0x3c
  435958:	stlr	wzr, [x19]
  43595c:	b	435930 <nftw@plt+0x32db0>
  435960:	stp	x29, x30, [sp, #-64]!
  435964:	mov	x29, sp
  435968:	stp	x19, x20, [sp, #16]
  43596c:	stp	x21, x22, [sp, #32]
  435970:	stp	x23, x24, [sp, #48]
  435974:	mov	x21, x0
  435978:	mov	x20, x1
  43597c:	mov	x22, x2
  435980:	mov	x23, x3
  435984:	ldr	w0, [x0, #8]
  435988:	cbnz	w0, 4359c4 <nftw@plt+0x32e44>
  43598c:	add	x1, x21, #0x40
  435990:	ldr	x19, [x21, #64]
  435994:	cbz	x19, 4359b0 <nftw@plt+0x32e30>
  435998:	ldr	x4, [x19, #8]
  43599c:	cmp	x4, x20
  4359a0:	b.cs	435a4c <nftw@plt+0x32ecc>  // b.hs, b.nlast
  4359a4:	mov	x1, x19
  4359a8:	ldr	x19, [x19]
  4359ac:	cbnz	x19, 435998 <nftw@plt+0x32e18>
  4359b0:	ldr	w0, [x21, #8]
  4359b4:	cbz	w0, 4359e0 <nftw@plt+0x32e60>
  4359b8:	add	x0, x21, #0x3c
  4359bc:	stlr	wzr, [x0]
  4359c0:	b	4359e0 <nftw@plt+0x32e60>
  4359c4:	add	x0, x21, #0x3c
  4359c8:	mov	w2, #0x1                   	// #1
  4359cc:	ldxr	w1, [x0]
  4359d0:	stxr	w3, w2, [x0]
  4359d4:	cbnz	w3, 4359cc <nftw@plt+0x32e4c>
  4359d8:	dmb	ish
  4359dc:	cbz	w1, 43598c <nftw@plt+0x32e0c>
  4359e0:	bl	402760 <getpagesize@plt>
  4359e4:	sxtw	x0, w0
  4359e8:	sub	x24, x20, #0x1
  4359ec:	add	x24, x24, x0
  4359f0:	neg	x0, x0
  4359f4:	and	x24, x24, x0
  4359f8:	mov	x5, #0x0                   	// #0
  4359fc:	mov	w4, #0xffffffff            	// #-1
  435a00:	mov	w3, #0x22                  	// #34
  435a04:	mov	w2, #0x3                   	// #3
  435a08:	mov	x1, x24
  435a0c:	mov	x0, #0x0                   	// #0
  435a10:	bl	4028b0 <mmap@plt>
  435a14:	mov	x19, x0
  435a18:	cmn	x0, #0x1
  435a1c:	b.eq	435a9c <nftw@plt+0x32f1c>  // b.none
  435a20:	add	x1, x20, #0x7
  435a24:	and	x1, x1, #0xfffffffffffffff8
  435a28:	cmp	x24, x1
  435a2c:	b.ls	435a70 <nftw@plt+0x32ef0>  // b.plast
  435a30:	mov	x4, x23
  435a34:	mov	x3, x22
  435a38:	sub	x2, x24, x1
  435a3c:	add	x1, x0, x1
  435a40:	mov	x0, x21
  435a44:	bl	4358b4 <nftw@plt+0x32d34>
  435a48:	b	435a70 <nftw@plt+0x32ef0>
  435a4c:	ldr	x0, [x19]
  435a50:	str	x0, [x1]
  435a54:	add	x1, x20, #0x7
  435a58:	and	x1, x1, #0xfffffffffffffff8
  435a5c:	ldr	x2, [x19, #8]
  435a60:	cmp	x2, x1
  435a64:	b.hi	435a88 <nftw@plt+0x32f08>  // b.pmore
  435a68:	ldr	w0, [x21, #8]
  435a6c:	cbnz	w0, 435ac0 <nftw@plt+0x32f40>
  435a70:	mov	x0, x19
  435a74:	ldp	x19, x20, [sp, #16]
  435a78:	ldp	x21, x22, [sp, #32]
  435a7c:	ldp	x23, x24, [sp, #48]
  435a80:	ldp	x29, x30, [sp], #64
  435a84:	ret
  435a88:	sub	x2, x2, x1
  435a8c:	add	x1, x19, x1
  435a90:	mov	x0, x21
  435a94:	bl	435834 <nftw@plt+0x32cb4>
  435a98:	b	435a68 <nftw@plt+0x32ee8>
  435a9c:	mov	x19, #0x0                   	// #0
  435aa0:	cbz	x22, 435a70 <nftw@plt+0x32ef0>
  435aa4:	bl	402aa0 <__errno_location@plt>
  435aa8:	ldr	w2, [x0]
  435aac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  435ab0:	add	x1, x1, #0xd8
  435ab4:	mov	x0, x23
  435ab8:	blr	x22
  435abc:	b	435a70 <nftw@plt+0x32ef0>
  435ac0:	add	x21, x21, #0x3c
  435ac4:	stlr	wzr, [x21]
  435ac8:	b	435a70 <nftw@plt+0x32ef0>
  435acc:	stp	x29, x30, [sp, #-96]!
  435ad0:	mov	x29, sp
  435ad4:	stp	x19, x20, [sp, #16]
  435ad8:	stp	x21, x22, [sp, #32]
  435adc:	stp	x23, x24, [sp, #48]
  435ae0:	mov	x23, x0
  435ae4:	mov	x21, x1
  435ae8:	mov	x19, x4
  435aec:	ldr	x0, [x4, #16]
  435af0:	cmp	x0, x1
  435af4:	b.cs	435b80 <nftw@plt+0x33000>  // b.hs, b.nlast
  435af8:	stp	x25, x26, [sp, #64]
  435afc:	mov	x24, x2
  435b00:	mov	x25, x3
  435b04:	ldr	x0, [x4, #8]
  435b08:	add	x22, x0, x1
  435b0c:	cbnz	x0, 435bb8 <nftw@plt+0x33038>
  435b10:	lsl	x22, x22, #4
  435b14:	mov	x3, x25
  435b18:	mov	x2, x24
  435b1c:	mov	x1, x22
  435b20:	mov	x0, x23
  435b24:	bl	435960 <nftw@plt+0x32de0>
  435b28:	mov	x20, x0
  435b2c:	cbz	x0, 435bec <nftw@plt+0x3306c>
  435b30:	ldr	x26, [x19]
  435b34:	cbz	x26, 435b6c <nftw@plt+0x32fec>
  435b38:	str	x27, [sp, #80]
  435b3c:	ldr	x27, [x19, #8]
  435b40:	mov	x2, x27
  435b44:	mov	x1, x26
  435b48:	bl	402490 <memcpy@plt>
  435b4c:	ldr	x2, [x19, #16]
  435b50:	mov	x4, x25
  435b54:	mov	x3, x24
  435b58:	add	x2, x27, x2
  435b5c:	mov	x1, x26
  435b60:	mov	x0, x23
  435b64:	bl	4358b4 <nftw@plt+0x32d34>
  435b68:	ldr	x27, [sp, #80]
  435b6c:	str	x20, [x19]
  435b70:	ldr	x0, [x19, #8]
  435b74:	sub	x22, x22, x0
  435b78:	str	x22, [x19, #16]
  435b7c:	ldp	x25, x26, [sp, #64]
  435b80:	ldr	x1, [x19, #8]
  435b84:	ldr	x20, [x19]
  435b88:	add	x20, x20, x1
  435b8c:	add	x1, x1, x21
  435b90:	str	x1, [x19, #8]
  435b94:	ldr	x1, [x19, #16]
  435b98:	sub	x21, x1, x21
  435b9c:	str	x21, [x19, #16]
  435ba0:	mov	x0, x20
  435ba4:	ldp	x19, x20, [sp, #16]
  435ba8:	ldp	x21, x22, [sp, #32]
  435bac:	ldp	x23, x24, [sp, #48]
  435bb0:	ldp	x29, x30, [sp], #96
  435bb4:	ret
  435bb8:	bl	402760 <getpagesize@plt>
  435bbc:	sxtw	x1, w0
  435bc0:	cmp	x22, w0, sxtw
  435bc4:	b.cs	435bd8 <nftw@plt+0x33058>  // b.hs, b.nlast
  435bc8:	lsl	x22, x22, #1
  435bcc:	cmp	x22, x1
  435bd0:	csel	x22, x22, x1, ls  // ls = plast
  435bd4:	b	435b14 <nftw@plt+0x32f94>
  435bd8:	add	x22, x1, x22, lsl #1
  435bdc:	sub	x22, x22, #0x1
  435be0:	neg	x1, x1
  435be4:	and	x22, x1, x22
  435be8:	b	435b14 <nftw@plt+0x32f94>
  435bec:	ldp	x25, x26, [sp, #64]
  435bf0:	b	435ba0 <nftw@plt+0x33020>
  435bf4:	ldr	x0, [x1]
  435bf8:	ldr	x2, [x1, #8]
  435bfc:	add	x2, x0, x2
  435c00:	str	x2, [x1]
  435c04:	str	xzr, [x1, #8]
  435c08:	ret
  435c0c:	stp	x29, x30, [sp, #-32]!
  435c10:	mov	x29, sp
  435c14:	str	x19, [sp, #16]
  435c18:	mov	x19, x1
  435c1c:	ldr	x5, [x1, #8]
  435c20:	add	x1, x5, #0x7
  435c24:	and	x1, x1, #0xfffffffffffffff8
  435c28:	ldr	x4, [x19, #16]
  435c2c:	add	x5, x5, x4
  435c30:	ldr	x6, [x19]
  435c34:	mov	x4, x3
  435c38:	mov	x3, x2
  435c3c:	sub	x2, x5, x1
  435c40:	add	x1, x6, x1
  435c44:	bl	4358b4 <nftw@plt+0x32d34>
  435c48:	str	xzr, [x19, #16]
  435c4c:	ldr	x0, [x19, #8]
  435c50:	cbnz	x0, 435c58 <nftw@plt+0x330d8>
  435c54:	str	xzr, [x19]
  435c58:	mov	w0, #0x1                   	// #1
  435c5c:	ldr	x19, [sp, #16]
  435c60:	ldp	x29, x30, [sp], #32
  435c64:	ret
  435c68:	stp	x29, x30, [sp, #-160]!
  435c6c:	mov	x29, sp
  435c70:	stp	x19, x20, [sp, #16]
  435c74:	stp	x21, x22, [sp, #32]
  435c78:	stp	x23, x24, [sp, #48]
  435c7c:	mov	x20, x0
  435c80:	mov	x22, x1
  435c84:	mov	x23, x2
  435c88:	ldr	w0, [x0, #8]
  435c8c:	cbnz	w0, 435cc0 <nftw@plt+0x33140>
  435c90:	ldr	w0, [x20, #56]
  435c94:	cbnz	w0, 435ce4 <nftw@plt+0x33164>
  435c98:	ldr	x0, [x20, #24]
  435c9c:	str	x0, [sp, #152]
  435ca0:	ldr	x1, [sp, #152]
  435ca4:	mov	w0, #0x1                   	// #1
  435ca8:	cbz	x1, 435d00 <nftw@plt+0x33180>
  435cac:	ldp	x19, x20, [sp, #16]
  435cb0:	ldp	x21, x22, [sp, #32]
  435cb4:	ldp	x23, x24, [sp, #48]
  435cb8:	ldp	x29, x30, [sp], #160
  435cbc:	ret
  435cc0:	add	x0, x20, #0x38
  435cc4:	ldar	w0, [x0]
  435cc8:	cbnz	w0, 435ce4 <nftw@plt+0x33164>
  435ccc:	ldr	w0, [x20, #8]
  435cd0:	cbz	w0, 435c98 <nftw@plt+0x33118>
  435cd4:	add	x0, x20, #0x18
  435cd8:	ldar	x0, [x0]
  435cdc:	str	x0, [sp, #152]
  435ce0:	b	435ca0 <nftw@plt+0x33120>
  435ce4:	mov	w2, #0xffffffff            	// #-1
  435ce8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  435cec:	add	x1, x1, #0x108
  435cf0:	mov	x0, x23
  435cf4:	blr	x22
  435cf8:	mov	w0, #0x0                   	// #0
  435cfc:	b	435cac <nftw@plt+0x3312c>
  435d00:	stp	x25, x26, [sp, #64]
  435d04:	mov	w0, #0xffffffff            	// #-1
  435d08:	mov	w19, #0x0                   	// #0
  435d0c:	add	x26, sp, #0x54
  435d10:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  435d14:	add	x25, x25, #0xe0
  435d18:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  435d1c:	add	x24, x24, #0xf0
  435d20:	b	435d40 <nftw@plt+0x331c0>
  435d24:	cbz	w19, 435d80 <nftw@plt+0x33200>
  435d28:	cmp	w19, #0x1
  435d2c:	b.ne	435d8c <nftw@plt+0x3320c>  // b.any
  435d30:	mov	x21, #0x0                   	// #0
  435d34:	add	w19, w19, #0x1
  435d38:	cmp	w19, #0x5
  435d3c:	b.eq	435dec <nftw@plt+0x3326c>  // b.none
  435d40:	cmp	w19, #0x2
  435d44:	b.eq	435d90 <nftw@plt+0x33210>  // b.none
  435d48:	b.le	435d24 <nftw@plt+0x331a4>
  435d4c:	cmp	w19, #0x3
  435d50:	b.eq	435e1c <nftw@plt+0x3329c>  // b.none
  435d54:	cmp	w19, #0x4
  435d58:	b.ne	435d8c <nftw@plt+0x3320c>  // b.any
  435d5c:	bl	402630 <getpid@plt>
  435d60:	add	x21, sp, #0x58
  435d64:	sxtw	x3, w0
  435d68:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  435d6c:	add	x2, x2, #0x130
  435d70:	mov	x1, #0x40                  	// #64
  435d74:	mov	x0, x21
  435d78:	bl	402600 <snprintf@plt>
  435d7c:	b	435e20 <nftw@plt+0x332a0>
  435d80:	ldr	x21, [x20]
  435d84:	cbz	x21, 435d30 <nftw@plt+0x331b0>
  435d88:	b	435e20 <nftw@plt+0x332a0>
  435d8c:	bl	4027f0 <abort@plt>
  435d90:	mov	x21, x25
  435d94:	b	435e20 <nftw@plt+0x332a0>
  435d98:	ldr	w1, [sp, #84]
  435d9c:	cbnz	w1, 435d34 <nftw@plt+0x331b4>
  435da0:	b	435e04 <nftw@plt+0x33284>
  435da4:	mov	w2, #0x0                   	// #0
  435da8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  435dac:	add	x1, x1, #0x148
  435db0:	mov	x0, x23
  435db4:	blr	x22
  435db8:	b	435e04 <nftw@plt+0x33284>
  435dbc:	add	x20, x20, #0x38
  435dc0:	mov	w0, #0x1                   	// #1
  435dc4:	stlr	w0, [x20]
  435dc8:	mov	w0, #0x0                   	// #0
  435dcc:	ldp	x25, x26, [sp, #64]
  435dd0:	b	435cac <nftw@plt+0x3312c>
  435dd4:	add	x20, x20, #0x18
  435dd8:	ldr	x0, [sp, #152]
  435ddc:	stlr	x0, [x20]
  435de0:	mov	w0, #0x1                   	// #1
  435de4:	ldp	x25, x26, [sp, #64]
  435de8:	b	435cac <nftw@plt+0x3312c>
  435dec:	tbz	w0, #31, 435e38 <nftw@plt+0x332b8>
  435df0:	ldr	x1, [x20]
  435df4:	cbz	x1, 435da4 <nftw@plt+0x33224>
  435df8:	mov	w2, #0x2                   	// #2
  435dfc:	mov	x0, x23
  435e00:	blr	x22
  435e04:	ldr	w0, [x20, #8]
  435e08:	cbnz	w0, 435dbc <nftw@plt+0x3323c>
  435e0c:	mov	w1, #0x1                   	// #1
  435e10:	str	w1, [x20, #56]
  435e14:	ldp	x25, x26, [sp, #64]
  435e18:	b	435cac <nftw@plt+0x3312c>
  435e1c:	mov	x21, x24
  435e20:	mov	x3, x26
  435e24:	mov	x2, x23
  435e28:	mov	x1, x22
  435e2c:	mov	x0, x21
  435e30:	bl	435f60 <nftw@plt+0x333e0>
  435e34:	tbnz	w0, #31, 435d98 <nftw@plt+0x33218>
  435e38:	add	x5, sp, #0x98
  435e3c:	mov	x4, x23
  435e40:	mov	x3, x22
  435e44:	mov	w2, w0
  435e48:	mov	x1, x21
  435e4c:	mov	x0, x20
  435e50:	bl	439188 <nftw@plt+0x36608>
  435e54:	cbz	w0, 435e04 <nftw@plt+0x33284>
  435e58:	ldr	w0, [x20, #8]
  435e5c:	cbnz	w0, 435dd4 <nftw@plt+0x33254>
  435e60:	ldr	x0, [sp, #152]
  435e64:	str	x0, [x20, #24]
  435e68:	mov	w0, #0x1                   	// #1
  435e6c:	ldp	x25, x26, [sp, #64]
  435e70:	b	435cac <nftw@plt+0x3312c>
  435e74:	stp	x29, x30, [sp, #-64]!
  435e78:	mov	x29, sp
  435e7c:	stp	x19, x20, [sp, #16]
  435e80:	stp	x21, x22, [sp, #32]
  435e84:	str	x23, [sp, #48]
  435e88:	mov	x19, x0
  435e8c:	mov	x23, x1
  435e90:	mov	x22, x2
  435e94:	mov	x20, x3
  435e98:	mov	x21, x4
  435e9c:	mov	x2, x4
  435ea0:	mov	x1, x3
  435ea4:	bl	435c68 <nftw@plt+0x330e8>
  435ea8:	cbz	w0, 435ed4 <nftw@plt+0x33354>
  435eac:	ldr	w1, [x19, #56]
  435eb0:	mov	w0, #0x0                   	// #0
  435eb4:	cbnz	w1, 435ed4 <nftw@plt+0x33354>
  435eb8:	ldr	x5, [x19, #24]
  435ebc:	mov	x4, x21
  435ec0:	mov	x3, x20
  435ec4:	mov	x2, x22
  435ec8:	mov	x1, x23
  435ecc:	mov	x0, x19
  435ed0:	blr	x5
  435ed4:	ldp	x19, x20, [sp, #16]
  435ed8:	ldp	x21, x22, [sp, #32]
  435edc:	ldr	x23, [sp, #48]
  435ee0:	ldp	x29, x30, [sp], #64
  435ee4:	ret
  435ee8:	stp	x29, x30, [sp, #-64]!
  435eec:	mov	x29, sp
  435ef0:	stp	x19, x20, [sp, #16]
  435ef4:	stp	x21, x22, [sp, #32]
  435ef8:	str	x23, [sp, #48]
  435efc:	mov	x19, x0
  435f00:	mov	x23, x1
  435f04:	mov	x22, x2
  435f08:	mov	x20, x3
  435f0c:	mov	x21, x4
  435f10:	mov	x2, x4
  435f14:	mov	x1, x3
  435f18:	bl	435c68 <nftw@plt+0x330e8>
  435f1c:	cbz	w0, 435f4c <nftw@plt+0x333cc>
  435f20:	ldr	w1, [x19, #56]
  435f24:	mov	w0, #0x0                   	// #0
  435f28:	cbnz	w1, 435f4c <nftw@plt+0x333cc>
  435f2c:	ldr	x5, [x19, #40]
  435f30:	mov	x4, x21
  435f34:	mov	x3, x20
  435f38:	mov	x2, x22
  435f3c:	mov	x1, x23
  435f40:	mov	x0, x19
  435f44:	blr	x5
  435f48:	mov	w0, #0x1                   	// #1
  435f4c:	ldp	x19, x20, [sp, #16]
  435f50:	ldp	x21, x22, [sp, #32]
  435f54:	ldr	x23, [sp, #48]
  435f58:	ldp	x29, x30, [sp], #64
  435f5c:	ret
  435f60:	stp	x29, x30, [sp, #-64]!
  435f64:	mov	x29, sp
  435f68:	stp	x19, x20, [sp, #16]
  435f6c:	stp	x21, x22, [sp, #32]
  435f70:	str	x23, [sp, #48]
  435f74:	mov	x21, x0
  435f78:	mov	x23, x1
  435f7c:	mov	x22, x2
  435f80:	cbz	x3, 436000 <nftw@plt+0x33480>
  435f84:	mov	x20, x3
  435f88:	str	wzr, [x3]
  435f8c:	mov	w1, #0x80000               	// #524288
  435f90:	bl	402680 <open@plt>
  435f94:	mov	w19, w0
  435f98:	tbnz	w0, #31, 435fc4 <nftw@plt+0x33444>
  435f9c:	mov	w2, #0x1                   	// #1
  435fa0:	mov	w1, #0x2                   	// #2
  435fa4:	mov	w0, w19
  435fa8:	bl	402960 <fcntl@plt>
  435fac:	mov	w0, w19
  435fb0:	ldp	x19, x20, [sp, #16]
  435fb4:	ldp	x21, x22, [sp, #32]
  435fb8:	ldr	x23, [sp, #48]
  435fbc:	ldp	x29, x30, [sp], #64
  435fc0:	ret
  435fc4:	bl	402aa0 <__errno_location@plt>
  435fc8:	ldr	w0, [x0]
  435fcc:	cmp	w0, #0x2
  435fd0:	b.eq	435ff0 <nftw@plt+0x33470>  // b.none
  435fd4:	bl	402aa0 <__errno_location@plt>
  435fd8:	ldr	w2, [x0]
  435fdc:	mov	x1, x21
  435fe0:	mov	x0, x22
  435fe4:	blr	x23
  435fe8:	mov	w19, #0xffffffff            	// #-1
  435fec:	b	435fac <nftw@plt+0x3342c>
  435ff0:	mov	w0, #0x1                   	// #1
  435ff4:	str	w0, [x20]
  435ff8:	mov	w19, #0xffffffff            	// #-1
  435ffc:	b	435fac <nftw@plt+0x3342c>
  436000:	mov	w1, #0x80000               	// #524288
  436004:	bl	402680 <open@plt>
  436008:	mov	w19, w0
  43600c:	tbz	w0, #31, 435f9c <nftw@plt+0x3341c>
  436010:	b	435fd4 <nftw@plt+0x33454>
  436014:	stp	x29, x30, [sp, #-32]!
  436018:	mov	x29, sp
  43601c:	stp	x19, x20, [sp, #16]
  436020:	mov	x19, x1
  436024:	mov	x20, x2
  436028:	bl	4027a0 <close@plt>
  43602c:	tbnz	w0, #31, 436040 <nftw@plt+0x334c0>
  436030:	mov	w0, #0x1                   	// #1
  436034:	ldp	x19, x20, [sp, #16]
  436038:	ldp	x29, x30, [sp], #32
  43603c:	ret
  436040:	bl	402aa0 <__errno_location@plt>
  436044:	ldr	w2, [x0]
  436048:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43604c:	add	x1, x1, #0x178
  436050:	mov	x0, x20
  436054:	blr	x19
  436058:	mov	w0, #0x0                   	// #0
  43605c:	b	436034 <nftw@plt+0x334b4>
  436060:	stp	x29, x30, [sp, #-16]!
  436064:	mov	x29, sp
  436068:	mov	x0, x4
  43606c:	mov	w2, #0xffffffff            	// #-1
  436070:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  436074:	add	x1, x1, #0x180
  436078:	blr	x3
  43607c:	mov	w0, #0x0                   	// #0
  436080:	ldp	x29, x30, [sp], #16
  436084:	ret
  436088:	stp	x29, x30, [sp, #-16]!
  43608c:	mov	x29, sp
  436090:	mov	x0, x4
  436094:	mov	w2, #0xffffffff            	// #-1
  436098:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43609c:	add	x1, x1, #0x1a0
  4360a0:	blr	x3
  4360a4:	ldp	x29, x30, [sp], #16
  4360a8:	ret
  4360ac:	ldr	x2, [x0, #8]
  4360b0:	ldr	x0, [x1, #8]
  4360b4:	cmp	x2, x0
  4360b8:	b.cc	4360c4 <nftw@plt+0x33544>  // b.lo, b.ul, b.last
  4360bc:	cset	w0, hi  // hi = pmore
  4360c0:	ret
  4360c4:	mov	w0, #0xffffffff            	// #-1
  4360c8:	b	4360c0 <nftw@plt+0x33540>
  4360cc:	stp	x29, x30, [sp, #-192]!
  4360d0:	mov	x29, sp
  4360d4:	stp	x19, x20, [sp, #16]
  4360d8:	mov	x19, x3
  4360dc:	add	x20, x2, #0x1, lsl #12
  4360e0:	stp	xzr, xzr, [sp, #160]
  4360e4:	stp	xzr, xzr, [sp, #176]
  4360e8:	cbz	x1, 43615c <nftw@plt+0x335dc>
  4360ec:	mov	x4, #0x0                   	// #0
  4360f0:	add	x7, sp, #0xa0
  4360f4:	add	x3, sp, #0x60
  4360f8:	add	x8, sp, #0x80
  4360fc:	b	436134 <nftw@plt+0x335b4>
  436100:	and	w2, w4, #0xffff
  436104:	ldrh	w5, [x3, w5, sxtw #1]
  436108:	strh	w2, [x20, x5, lsl #1]
  43610c:	ldrb	w5, [x0, x4]
  436110:	strh	w2, [x3, x5, lsl #1]
  436114:	ldrb	w5, [x0, x4]
  436118:	lsl	x5, x5, #1
  43611c:	ldrh	w6, [x7, x5]
  436120:	add	w6, w6, #0x1
  436124:	strh	w6, [x7, x5]
  436128:	add	x4, x4, #0x1
  43612c:	cmp	x1, x4
  436130:	b.eq	43615c <nftw@plt+0x335dc>  // b.none
  436134:	ldrb	w5, [x0, x4]
  436138:	cmp	w5, #0xf
  43613c:	b.hi	436470 <nftw@plt+0x338f0>  // b.pmore
  436140:	ldrh	w2, [x7, w5, sxtw #1]
  436144:	cbnz	w2, 436100 <nftw@plt+0x33580>
  436148:	and	w2, w4, #0xffff
  43614c:	sbfiz	x5, x5, #1, #32
  436150:	strh	w2, [x8, x5]
  436154:	strh	w2, [x3, x5]
  436158:	b	436114 <nftw@plt+0x33594>
  43615c:	mov	x2, #0x800                 	// #2048
  436160:	mov	w1, #0x0                   	// #0
  436164:	mov	x0, x19
  436168:	bl	4026f0 <memset@plt>
  43616c:	mov	x4, #0x0                   	// #0
  436170:	mov	w1, #0x0                   	// #0
  436174:	add	x9, sp, #0xa0
  436178:	mov	w8, #0x1                   	// #1
  43617c:	add	x12, sp, #0x80
  436180:	add	x0, x9, x4, lsl #1
  436184:	ldrh	w0, [x0, #2]
  436188:	cbnz	w0, 4361b8 <nftw@plt+0x33638>
  43618c:	add	x4, x4, #0x1
  436190:	cmp	x4, #0x8
  436194:	b.ne	436180 <nftw@plt+0x33600>  // b.any
  436198:	stp	x21, x22, [sp, #32]
  43619c:	stp	x23, x24, [sp, #48]
  4361a0:	stp	x25, x26, [sp, #64]
  4361a4:	add	x7, sp, #0xa0
  4361a8:	mov	x6, #0x9                   	// #9
  4361ac:	add	x9, sp, #0x50
  4361b0:	mov	w8, #0x1                   	// #1
  4361b4:	b	4362e4 <nftw@plt+0x33764>
  4361b8:	add	w3, w4, #0x1
  4361bc:	lsl	w5, w8, w3
  4361c0:	cmp	w5, w0
  4361c4:	b.cc	436480 <nftw@plt+0x33900>  // b.lo, b.ul, b.last
  4361c8:	add	x5, x12, x4, lsl #1
  4361cc:	ldrh	w7, [x5, #2]
  4361d0:	and	x5, x0, #0xffff
  4361d4:	tst	w7, #0xfffffe00
  4361d8:	b.ne	436488 <nftw@plt+0x33908>  // b.any
  4361dc:	ubfiz	w13, w4, #9, #7
  4361e0:	lsl	w3, w8, w3
  4361e4:	sxtw	x3, w3
  4361e8:	lsl	w10, w8, w4
  4361ec:	mov	x11, #0x0                   	// #0
  4361f0:	orr	w6, w13, w7
  4361f4:	mov	w0, w1
  4361f8:	cmp	w1, #0xff
  4361fc:	b.hi	436218 <nftw@plt+0x33698>  // b.pmore
  436200:	ldrh	w2, [x19, x0, lsl #1]
  436204:	cbnz	w2, 436490 <nftw@plt+0x33910>
  436208:	strh	w6, [x19, x0, lsl #1]
  43620c:	add	x0, x0, x3
  436210:	cmp	x0, #0xff
  436214:	b.ls	436200 <nftw@plt+0x33680>  // b.plast
  436218:	add	x11, x11, #0x1
  43621c:	cmp	x11, x5
  436220:	b.cs	43622c <nftw@plt+0x336ac>  // b.hs, b.nlast
  436224:	mov	w7, w7
  436228:	ldrh	w7, [x20, x7, lsl #1]
  43622c:	tst	w10, w1
  436230:	b.eq	436270 <nftw@plt+0x336f0>  // b.none
  436234:	mov	w0, w10
  436238:	lsr	w0, w0, #1
  43623c:	tst	w0, w1
  436240:	b.ne	436238 <nftw@plt+0x336b8>  // b.any
  436244:	sub	w2, w0, #0x1
  436248:	and	w1, w2, w1
  43624c:	add	w1, w1, w0
  436250:	cmp	w0, #0x0
  436254:	csel	w1, w1, w0, ne  // ne = any
  436258:	cmp	x11, x5
  43625c:	b.eq	43618c <nftw@plt+0x3360c>  // b.none
  436260:	tst	w7, #0xfffffe00
  436264:	b.eq	4361f0 <nftw@plt+0x33670>  // b.none
  436268:	mov	w0, #0x0                   	// #0
  43626c:	b	436474 <nftw@plt+0x338f4>
  436270:	mov	w0, w10
  436274:	b	436244 <nftw@plt+0x336c4>
  436278:	add	w1, w1, w0
  43627c:	lsl	w4, w8, w4
  436280:	bic	w5, w5, w4
  436284:	subs	x3, x3, #0x1
  436288:	b.eq	4362d0 <nftw@plt+0x33750>  // b.none
  43628c:	sub	w4, w6, w3
  436290:	lsr	w0, w5, w4
  436294:	tbz	w0, #0, 436284 <nftw@plt+0x33704>
  436298:	sub	w0, w3, #0x1
  43629c:	lsl	w0, w8, w0
  4362a0:	cbz	x3, 43627c <nftw@plt+0x336fc>
  4362a4:	tst	w0, w1
  4362a8:	b.eq	436278 <nftw@plt+0x336f8>  // b.none
  4362ac:	mov	w2, #0x0                   	// #0
  4362b0:	bic	w1, w1, w0
  4362b4:	add	w2, w2, #0x1
  4362b8:	lsr	w0, w0, #1
  4362bc:	cmp	x3, w2, uxtw
  4362c0:	b.ls	43627c <nftw@plt+0x336fc>  // b.plast
  4362c4:	tst	w1, w0
  4362c8:	b.ne	4362b0 <nftw@plt+0x33730>  // b.any
  4362cc:	b	436278 <nftw@plt+0x336f8>
  4362d0:	cbnz	w5, 4364ac <nftw@plt+0x3392c>
  4362d4:	add	x6, x6, #0x1
  4362d8:	add	x7, x7, #0x2
  4362dc:	cmp	x6, #0x10
  4362e0:	b.eq	436300 <nftw@plt+0x33780>  // b.none
  4362e4:	ldrh	w5, [x7, #18]
  4362e8:	cbz	w5, 4362d4 <nftw@plt+0x33754>
  4362ec:	add	x0, x9, x6, lsl #1
  4362f0:	sturh	w1, [x0, #-18]
  4362f4:	cbz	x6, 436498 <nftw@plt+0x33918>
  4362f8:	mov	x3, x6
  4362fc:	b	43628c <nftw@plt+0x3370c>
  436300:	mov	x3, #0x7                   	// #7
  436304:	mov	x16, #0x0                   	// #0
  436308:	add	x12, sp, #0xa0
  43630c:	add	x22, sp, #0x80
  436310:	add	x21, sp, #0x50
  436314:	mov	w10, #0x1                   	// #1
  436318:	mov	x17, #0x0                   	// #0
  43631c:	mov	x30, #0x100                 	// #256
  436320:	add	x0, x12, x3, lsl #1
  436324:	ldrh	w0, [x0, #16]
  436328:	cbnz	w0, 436348 <nftw@plt+0x337c8>
  43632c:	subs	x3, x3, #0x1
  436330:	b.ne	436320 <nftw@plt+0x337a0>  // b.any
  436334:	mov	w0, #0x1                   	// #1
  436338:	ldp	x21, x22, [sp, #32]
  43633c:	ldp	x23, x24, [sp, #48]
  436340:	ldp	x25, x26, [sp, #64]
  436344:	b	436474 <nftw@plt+0x338f4>
  436348:	lsl	x1, x3, #1
  43634c:	add	x2, x1, x22
  436350:	ldrh	w23, [x2, #16]
  436354:	add	x1, x1, x21
  436358:	ldurh	w5, [x1, #-2]
  43635c:	and	x9, x0, #0xffff
  436360:	lsl	w4, w10, w3
  436364:	sxtw	x26, w4
  436368:	ubfiz	w15, w3, #9, #7
  43636c:	add	w14, w15, #0x1, lsl #12
  436370:	and	w14, w14, #0xffff
  436374:	mov	w4, w4
  436378:	add	w11, w3, #0x7
  43637c:	lsl	w11, w10, w11
  436380:	mov	x8, x17
  436384:	mov	x18, x17
  436388:	mov	x13, x30
  43638c:	mov	x24, #0x0                   	// #0
  436390:	mov	x25, x3
  436394:	and	x0, x5, #0xff
  436398:	cmp	x13, w5, uxtb
  43639c:	b.eq	4363cc <nftw@plt+0x3384c>  // b.none
  4363a0:	lsl	x1, x0, #1
  4363a4:	ldrh	w8, [x19, x1]
  4363a8:	cbnz	w8, 43644c <nftw@plt+0x338cc>
  4363ac:	tst	x16, #0xfffffffffffffe00
  4363b0:	b.ne	4364c0 <nftw@plt+0x33940>  // b.any
  4363b4:	add	w2, w14, w16
  4363b8:	strh	w2, [x19, x1]
  4363bc:	mov	x8, x25
  4363c0:	mov	x18, x16
  4363c4:	mov	x13, x0
  4363c8:	add	x16, x26, x16
  4363cc:	orr	w7, w15, w23
  4363d0:	lsr	w0, w5, #8
  4363d4:	lsl	w6, w10, w8
  4363d8:	cmp	x6, x0
  4363dc:	b.ls	436400 <nftw@plt+0x33880>  // b.plast
  4363e0:	add	x1, x19, x18, lsl #1
  4363e4:	add	x1, x1, #0x200
  4363e8:	ldrh	w2, [x1, x0, lsl #1]
  4363ec:	cbnz	w2, 4364fc <nftw@plt+0x3397c>
  4363f0:	strh	w7, [x1, x0, lsl #1]
  4363f4:	add	x0, x0, x4
  4363f8:	cmp	x6, x0
  4363fc:	b.hi	4363e8 <nftw@plt+0x33868>  // b.pmore
  436400:	add	x24, x24, #0x1
  436404:	cmp	x9, x24
  436408:	b.ls	436414 <nftw@plt+0x33894>  // b.plast
  43640c:	mov	w23, w23
  436410:	ldrh	w23, [x20, x23, lsl #1]
  436414:	tst	w11, w5
  436418:	b.eq	436468 <nftw@plt+0x338e8>  // b.none
  43641c:	mov	w0, w11
  436420:	lsr	w0, w0, #1
  436424:	tst	w0, w5
  436428:	b.ne	436420 <nftw@plt+0x338a0>  // b.any
  43642c:	sub	w1, w0, #0x1
  436430:	and	w5, w1, w5
  436434:	add	w5, w5, w0
  436438:	cmp	w0, #0x0
  43643c:	csel	w5, w5, w0, ne  // ne = any
  436440:	cmp	x9, x24
  436444:	b.ne	436394 <nftw@plt+0x33814>  // b.any
  436448:	b	43632c <nftw@plt+0x337ac>
  43644c:	tbz	w8, #12, 4364d4 <nftw@plt+0x33954>
  436450:	and	x18, x8, #0x1ff
  436454:	ubfx	x8, x8, #9, #3
  436458:	cmp	x8, x3
  43645c:	b.cc	4364e8 <nftw@plt+0x33968>  // b.lo, b.ul, b.last
  436460:	mov	x13, x0
  436464:	b	4363cc <nftw@plt+0x3384c>
  436468:	mov	w0, w11
  43646c:	b	43642c <nftw@plt+0x338ac>
  436470:	mov	w0, #0x0                   	// #0
  436474:	ldp	x19, x20, [sp, #16]
  436478:	ldp	x29, x30, [sp], #192
  43647c:	ret
  436480:	mov	w0, #0x0                   	// #0
  436484:	b	436474 <nftw@plt+0x338f4>
  436488:	mov	w0, #0x0                   	// #0
  43648c:	b	436474 <nftw@plt+0x338f4>
  436490:	mov	w0, #0x0                   	// #0
  436494:	b	436474 <nftw@plt+0x338f4>
  436498:	mov	w0, #0x0                   	// #0
  43649c:	ldp	x21, x22, [sp, #32]
  4364a0:	ldp	x23, x24, [sp, #48]
  4364a4:	ldp	x25, x26, [sp, #64]
  4364a8:	b	436474 <nftw@plt+0x338f4>
  4364ac:	mov	w0, #0x0                   	// #0
  4364b0:	ldp	x21, x22, [sp, #32]
  4364b4:	ldp	x23, x24, [sp, #48]
  4364b8:	ldp	x25, x26, [sp, #64]
  4364bc:	b	436474 <nftw@plt+0x338f4>
  4364c0:	mov	w0, #0x0                   	// #0
  4364c4:	ldp	x21, x22, [sp, #32]
  4364c8:	ldp	x23, x24, [sp, #48]
  4364cc:	ldp	x25, x26, [sp, #64]
  4364d0:	b	436474 <nftw@plt+0x338f4>
  4364d4:	mov	w0, #0x0                   	// #0
  4364d8:	ldp	x21, x22, [sp, #32]
  4364dc:	ldp	x23, x24, [sp, #48]
  4364e0:	ldp	x25, x26, [sp, #64]
  4364e4:	b	436474 <nftw@plt+0x338f4>
  4364e8:	mov	w0, #0x0                   	// #0
  4364ec:	ldp	x21, x22, [sp, #32]
  4364f0:	ldp	x23, x24, [sp, #48]
  4364f4:	ldp	x25, x26, [sp, #64]
  4364f8:	b	436474 <nftw@plt+0x338f4>
  4364fc:	mov	w0, #0x0                   	// #0
  436500:	ldp	x21, x22, [sp, #32]
  436504:	ldp	x23, x24, [sp, #48]
  436508:	ldp	x25, x26, [sp, #64]
  43650c:	b	436474 <nftw@plt+0x338f4>
  436510:	ldr	w5, [x3]
  436514:	cmp	w5, #0xe
  436518:	b.hi	43655c <nftw@plt+0x339dc>  // b.pmore
  43651c:	ldr	x4, [x0]
  436520:	ldr	x6, [x2]
  436524:	sub	x1, x1, x4
  436528:	cmp	x1, #0x3
  43652c:	b.le	436564 <nftw@plt+0x339e4>
  436530:	mov	x1, x4
  436534:	ldr	w4, [x1], #4
  436538:	lsl	x4, x4, x5
  43653c:	orr	x4, x4, x6
  436540:	prfm	pldl1strm, [x1]
  436544:	str	x1, [x0]
  436548:	str	x4, [x2]
  43654c:	add	w5, w5, #0x20
  436550:	str	w5, [x3]
  436554:	mov	w0, #0x1                   	// #1
  436558:	ret
  43655c:	mov	w0, #0x1                   	// #1
  436560:	b	436558 <nftw@plt+0x339d8>
  436564:	mov	w0, #0x0                   	// #0
  436568:	b	436558 <nftw@plt+0x339d8>
  43656c:	stp	x29, x30, [sp, #-240]!
  436570:	mov	x29, sp
  436574:	stp	x19, x20, [sp, #16]
  436578:	stp	x21, x22, [sp, #32]
  43657c:	stp	x23, x24, [sp, #48]
  436580:	stp	x25, x26, [sp, #64]
  436584:	mov	x21, x0
  436588:	str	x1, [sp, #120]
  43658c:	str	x2, [sp, #112]
  436590:	mov	x19, x3
  436594:	mov	x20, x4
  436598:	str	x0, [sp, #200]
  43659c:	add	x23, x0, x1
  4365a0:	add	x0, x3, x4
  4365a4:	str	x0, [sp, #104]
  4365a8:	cmp	x1, #0x4
  4365ac:	b.le	437198 <nftw@plt+0x34618>
  4365b0:	mov	x22, x3
  4365b4:	mov	x0, x21
  4365b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4365bc:	add	x1, x1, #0x420
  4365c0:	str	x1, [sp, #144]
  4365c4:	add	x1, x1, #0x200
  4365c8:	str	x1, [sp, #152]
  4365cc:	ldrb	w1, [x0]
  4365d0:	and	w2, w1, #0xf
  4365d4:	cmp	w2, #0x8
  4365d8:	b.ne	4370ec <nftw@plt+0x3456c>  // b.any
  4365dc:	cmp	w1, #0x7f
  4365e0:	b.hi	4370ec <nftw@plt+0x3456c>  // b.pmore
  4365e4:	ldrb	w2, [x0, #1]
  4365e8:	tbnz	w2, #5, 4370ec <nftw@plt+0x3456c>
  4365ec:	orr	w1, w2, w1, lsl #8
  4365f0:	sxtw	x1, w1
  4365f4:	mov	x2, #0x4211                	// #16913
  4365f8:	movk	x2, #0x2108, lsl #16
  4365fc:	movk	x2, #0x1084, lsl #32
  436600:	movk	x2, #0x842, lsl #48
  436604:	umulh	x3, x1, x2
  436608:	sub	x2, x1, x3
  43660c:	add	x2, x3, x2, lsr #1
  436610:	lsr	x2, x2, #4
  436614:	lsl	x3, x2, #5
  436618:	sub	x2, x3, x2
  43661c:	cmp	x1, x2
  436620:	b.ne	4370ec <nftw@plt+0x3456c>  // b.any
  436624:	stp	x27, x28, [sp, #80]
  436628:	add	x0, x0, #0x2
  43662c:	str	x0, [sp, #200]
  436630:	str	xzr, [sp, #208]
  436634:	str	wzr, [sp, #196]
  436638:	tst	x0, #0x3
  43663c:	b.eq	43666c <nftw@plt+0x33aec>  // b.none
  436640:	ldr	w1, [sp, #196]
  436644:	ldrb	w2, [x0], #1
  436648:	lsl	x3, x2, x1
  43664c:	ldr	x2, [sp, #208]
  436650:	orr	x2, x2, x3
  436654:	str	x2, [sp, #208]
  436658:	add	w1, w1, #0x8
  43665c:	str	w1, [sp, #196]
  436660:	str	x0, [sp, #200]
  436664:	tst	x0, #0x3
  436668:	b.ne	436640 <nftw@plt+0x33ac0>  // b.any
  43666c:	add	x25, sp, #0xc4
  436670:	add	x24, sp, #0xd0
  436674:	mov	x3, x25
  436678:	mov	x2, x24
  43667c:	mov	x1, x23
  436680:	add	x0, sp, #0xc8
  436684:	bl	436510 <nftw@plt+0x33990>
  436688:	cbz	w0, 437078 <nftw@plt+0x344f8>
  43668c:	ldr	x0, [sp, #208]
  436690:	str	x0, [sp, #160]
  436694:	ubfx	w1, w0, #1, #2
  436698:	lsr	x0, x0, #3
  43669c:	str	x0, [sp, #208]
  4366a0:	ldr	w2, [sp, #196]
  4366a4:	sub	w0, w2, #0x3
  4366a8:	str	w0, [sp, #196]
  4366ac:	cmp	w1, #0x3
  4366b0:	b.eq	437080 <nftw@plt+0x34500>  // b.none
  4366b4:	cbz	w1, 436a08 <nftw@plt+0x33e88>
  4366b8:	cmp	w1, #0x1
  4366bc:	b.eq	436d34 <nftw@plt+0x341b4>  // b.none
  4366c0:	mov	x3, x25
  4366c4:	mov	x2, x24
  4366c8:	mov	x1, x23
  4366cc:	add	x0, sp, #0xc8
  4366d0:	bl	436510 <nftw@plt+0x33990>
  4366d4:	cbz	w0, 4370a8 <nftw@plt+0x34528>
  4366d8:	ldr	x0, [sp, #208]
  4366dc:	and	w27, w0, #0x1f
  4366e0:	add	w27, w27, #0x101
  4366e4:	ubfx	w28, w0, #5, #5
  4366e8:	add	w28, w28, #0x1
  4366ec:	ubfx	w26, w0, #10, #4
  4366f0:	add	w26, w26, #0x4
  4366f4:	lsr	x0, x0, #14
  4366f8:	str	x0, [sp, #208]
  4366fc:	ldr	w0, [sp, #196]
  436700:	sub	w0, w0, #0xe
  436704:	str	w0, [sp, #196]
  436708:	cmp	w27, #0x11e
  43670c:	ccmp	w28, #0x1e, #0x2, ls  // ls = plast
  436710:	b.hi	4370b0 <nftw@plt+0x34530>  // b.pmore
  436714:	stp	xzr, xzr, [sp, #216]
  436718:	strh	wzr, [sp, #232]
  43671c:	strb	wzr, [sp, #234]
  436720:	mov	x3, x25
  436724:	mov	x2, x24
  436728:	mov	x1, x23
  43672c:	add	x0, sp, #0xc8
  436730:	bl	436510 <nftw@plt+0x33990>
  436734:	cbz	w0, 4370b8 <nftw@plt+0x34538>
  436738:	ldr	x0, [sp, #208]
  43673c:	and	w1, w0, #0x7
  436740:	strb	w1, [sp, #232]
  436744:	ubfx	w1, w0, #3, #3
  436748:	strb	w1, [sp, #233]
  43674c:	ubfx	w1, w0, #6, #3
  436750:	strb	w1, [sp, #234]
  436754:	ubfx	w1, w0, #9, #3
  436758:	strb	w1, [sp, #216]
  43675c:	lsr	x2, x0, #12
  436760:	str	x2, [sp, #208]
  436764:	ldr	w1, [sp, #196]
  436768:	sub	w3, w1, #0xc
  43676c:	str	w3, [sp, #196]
  436770:	cmp	w26, #0x4
  436774:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436778:	and	w2, w2, #0x7
  43677c:	strb	w2, [sp, #224]
  436780:	lsr	x0, x0, #15
  436784:	str	x0, [sp, #208]
  436788:	sub	w1, w1, #0xf
  43678c:	str	w1, [sp, #196]
  436790:	cmp	w26, #0x5
  436794:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436798:	mov	x3, x25
  43679c:	mov	x2, x24
  4367a0:	mov	x1, x23
  4367a4:	add	x0, sp, #0xc8
  4367a8:	bl	436510 <nftw@plt+0x33990>
  4367ac:	cbz	w0, 4370c0 <nftw@plt+0x34540>
  4367b0:	ldr	x0, [sp, #208]
  4367b4:	and	w1, w0, #0x7
  4367b8:	strb	w1, [sp, #223]
  4367bc:	lsr	x2, x0, #3
  4367c0:	str	x2, [sp, #208]
  4367c4:	ldr	w1, [sp, #196]
  4367c8:	sub	w3, w1, #0x3
  4367cc:	str	w3, [sp, #196]
  4367d0:	cmp	w26, #0x6
  4367d4:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  4367d8:	and	w2, w2, #0x7
  4367dc:	strb	w2, [sp, #225]
  4367e0:	lsr	x2, x0, #6
  4367e4:	str	x2, [sp, #208]
  4367e8:	sub	w3, w1, #0x6
  4367ec:	str	w3, [sp, #196]
  4367f0:	cmp	w26, #0x7
  4367f4:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  4367f8:	and	w2, w2, #0x7
  4367fc:	strb	w2, [sp, #222]
  436800:	lsr	x2, x0, #9
  436804:	str	x2, [sp, #208]
  436808:	sub	w3, w1, #0x9
  43680c:	str	w3, [sp, #196]
  436810:	cmp	w26, #0x8
  436814:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436818:	and	w2, w2, #0x7
  43681c:	strb	w2, [sp, #226]
  436820:	lsr	x2, x0, #12
  436824:	str	x2, [sp, #208]
  436828:	sub	w3, w1, #0xc
  43682c:	str	w3, [sp, #196]
  436830:	cmp	w26, #0x9
  436834:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436838:	and	w2, w2, #0x7
  43683c:	strb	w2, [sp, #221]
  436840:	lsr	x0, x0, #15
  436844:	str	x0, [sp, #208]
  436848:	sub	w1, w1, #0xf
  43684c:	str	w1, [sp, #196]
  436850:	cmp	w26, #0xa
  436854:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436858:	mov	x3, x25
  43685c:	mov	x2, x24
  436860:	mov	x1, x23
  436864:	add	x0, sp, #0xc8
  436868:	bl	436510 <nftw@plt+0x33990>
  43686c:	cbz	w0, 4370c8 <nftw@plt+0x34548>
  436870:	ldr	x0, [sp, #208]
  436874:	and	w1, w0, #0x7
  436878:	strb	w1, [sp, #227]
  43687c:	lsr	x2, x0, #3
  436880:	str	x2, [sp, #208]
  436884:	ldr	w1, [sp, #196]
  436888:	sub	w3, w1, #0x3
  43688c:	str	w3, [sp, #196]
  436890:	cmp	w26, #0xb
  436894:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436898:	and	w2, w2, #0x7
  43689c:	strb	w2, [sp, #220]
  4368a0:	lsr	x2, x0, #6
  4368a4:	str	x2, [sp, #208]
  4368a8:	sub	w3, w1, #0x6
  4368ac:	str	w3, [sp, #196]
  4368b0:	cmp	w26, #0xc
  4368b4:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  4368b8:	and	w2, w2, #0x7
  4368bc:	strb	w2, [sp, #228]
  4368c0:	lsr	x2, x0, #9
  4368c4:	str	x2, [sp, #208]
  4368c8:	sub	w3, w1, #0x9
  4368cc:	str	w3, [sp, #196]
  4368d0:	cmp	w26, #0xd
  4368d4:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  4368d8:	and	w2, w2, #0x7
  4368dc:	strb	w2, [sp, #219]
  4368e0:	lsr	x2, x0, #12
  4368e4:	str	x2, [sp, #208]
  4368e8:	sub	w3, w1, #0xc
  4368ec:	str	w3, [sp, #196]
  4368f0:	cmp	w26, #0xe
  4368f4:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  4368f8:	and	w2, w2, #0x7
  4368fc:	strb	w2, [sp, #229]
  436900:	lsr	x0, x0, #15
  436904:	str	x0, [sp, #208]
  436908:	sub	w1, w1, #0xf
  43690c:	str	w1, [sp, #196]
  436910:	cmp	w26, #0xf
  436914:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436918:	mov	x3, x25
  43691c:	mov	x2, x24
  436920:	mov	x1, x23
  436924:	add	x0, sp, #0xc8
  436928:	bl	436510 <nftw@plt+0x33990>
  43692c:	cbz	w0, 4370d0 <nftw@plt+0x34550>
  436930:	ldr	x0, [sp, #208]
  436934:	and	w1, w0, #0x7
  436938:	strb	w1, [sp, #218]
  43693c:	lsr	x2, x0, #3
  436940:	str	x2, [sp, #208]
  436944:	ldr	w1, [sp, #196]
  436948:	sub	w3, w1, #0x3
  43694c:	str	w3, [sp, #196]
  436950:	cmp	w26, #0x10
  436954:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436958:	and	w2, w2, #0x7
  43695c:	strb	w2, [sp, #230]
  436960:	lsr	x2, x0, #6
  436964:	str	x2, [sp, #208]
  436968:	sub	w3, w1, #0x6
  43696c:	str	w3, [sp, #196]
  436970:	cmp	w26, #0x11
  436974:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436978:	and	w2, w2, #0x7
  43697c:	strb	w2, [sp, #217]
  436980:	lsr	x2, x0, #9
  436984:	str	x2, [sp, #208]
  436988:	sub	w3, w1, #0x9
  43698c:	str	w3, [sp, #196]
  436990:	cmp	w26, #0x12
  436994:	b.eq	4369b0 <nftw@plt+0x33e30>  // b.none
  436998:	and	w2, w2, #0x7
  43699c:	strb	w2, [sp, #231]
  4369a0:	lsr	x0, x0, #12
  4369a4:	str	x0, [sp, #208]
  4369a8:	sub	w1, w1, #0xc
  4369ac:	str	w1, [sp, #196]
  4369b0:	ldr	x26, [sp, #112]
  4369b4:	mov	x3, x26
  4369b8:	mov	x2, x26
  4369bc:	mov	x1, #0x13                  	// #19
  4369c0:	add	x0, sp, #0xd8
  4369c4:	bl	4360cc <nftw@plt+0x3354c>
  4369c8:	cbz	w0, 4370d8 <nftw@plt+0x34558>
  4369cc:	add	x0, x26, #0x1, lsl #12
  4369d0:	add	x0, x0, #0x278
  4369d4:	str	x0, [sp, #136]
  4369d8:	mov	w1, w27
  4369dc:	str	x1, [sp, #168]
  4369e0:	mov	w2, w28
  4369e4:	str	x2, [sp, #184]
  4369e8:	add	x28, x1, x2
  4369ec:	add	x28, x0, x28
  4369f0:	cmp	x0, x28
  4369f4:	b.cs	436cdc <nftw@plt+0x3415c>  // b.hs, b.nlast
  4369f8:	mov	x26, x0
  4369fc:	add	x0, sp, #0xc8
  436a00:	str	x0, [sp, #128]
  436a04:	b	436b64 <nftw@plt+0x33fe4>
  436a08:	cmp	w0, #0x8
  436a0c:	b.ls	436a34 <nftw@plt+0x33eb4>  // b.plast
  436a10:	ldr	x1, [sp, #200]
  436a14:	sub	w0, w0, #0x8
  436a18:	cmp	w0, #0x8
  436a1c:	b.hi	436a14 <nftw@plt+0x33e94>  // b.pmore
  436a20:	sub	w2, w2, #0xc
  436a24:	lsr	w2, w2, #3
  436a28:	mvn	x2, x2
  436a2c:	add	x2, x1, x2
  436a30:	str	x2, [sp, #200]
  436a34:	str	xzr, [sp, #208]
  436a38:	str	wzr, [sp, #196]
  436a3c:	ldr	x27, [sp, #200]
  436a40:	sub	x0, x23, x27
  436a44:	cmp	x0, #0x3
  436a48:	b.le	437088 <nftw@plt+0x34508>
  436a4c:	ldrb	w0, [x27, #1]
  436a50:	ldrb	w26, [x27]
  436a54:	bfi	w26, w0, #8, #24
  436a58:	ldrb	w1, [x27, #3]
  436a5c:	ldrb	w0, [x27, #2]
  436a60:	bfi	w0, w1, #8, #24
  436a64:	add	x27, x27, #0x4
  436a68:	str	x27, [sp, #200]
  436a6c:	mvn	w0, w0
  436a70:	cmp	w26, w0, uxth
  436a74:	b.ne	437090 <nftw@plt+0x34510>  // b.any
  436a78:	sub	x0, x23, x27
  436a7c:	cmp	w26, w0
  436a80:	b.hi	437098 <nftw@plt+0x34518>  // b.pmore
  436a84:	ldr	x0, [sp, #104]
  436a88:	sub	x0, x0, x22
  436a8c:	cmp	w26, w0
  436a90:	b.hi	4370a0 <nftw@plt+0x34520>  // b.pmore
  436a94:	and	x26, x26, #0xffff
  436a98:	mov	x2, x26
  436a9c:	mov	x1, x27
  436aa0:	mov	x0, x22
  436aa4:	bl	402490 <memcpy@plt>
  436aa8:	add	x22, x22, x26
  436aac:	add	x26, x27, x26
  436ab0:	str	x26, [sp, #200]
  436ab4:	tst	x26, #0x3
  436ab8:	b.eq	436ae8 <nftw@plt+0x33f68>  // b.none
  436abc:	ldr	w0, [sp, #196]
  436ac0:	ldrb	w1, [x26], #1
  436ac4:	lsl	x2, x1, x0
  436ac8:	ldr	x1, [sp, #208]
  436acc:	orr	x1, x1, x2
  436ad0:	str	x1, [sp, #208]
  436ad4:	add	w0, w0, #0x8
  436ad8:	str	w0, [sp, #196]
  436adc:	str	x26, [sp, #200]
  436ae0:	tst	x26, #0x3
  436ae4:	b.ne	436abc <nftw@plt+0x33f3c>  // b.any
  436ae8:	ldr	x0, [sp, #160]
  436aec:	tbz	w0, #0, 436674 <nftw@plt+0x33af4>
  436af0:	ldr	x0, [sp, #200]
  436af4:	sub	x1, x23, x0
  436af8:	cmp	x1, #0x4
  436afc:	b.le	437070 <nftw@plt+0x344f0>
  436b00:	ldp	x27, x28, [sp, #80]
  436b04:	b	4365cc <nftw@plt+0x33a4c>
  436b08:	cmp	w3, #0x10
  436b0c:	b.eq	436bc4 <nftw@plt+0x34044>  // b.none
  436b10:	cmp	w3, #0x11
  436b14:	b.eq	436c34 <nftw@plt+0x340b4>  // b.none
  436b18:	cmp	w3, #0x12
  436b1c:	b.ne	437120 <nftw@plt+0x345a0>  // b.any
  436b20:	and	w27, w0, #0x7f
  436b24:	add	w27, w27, #0xb
  436b28:	lsr	x0, x0, #7
  436b2c:	str	x0, [sp, #208]
  436b30:	sub	w1, w1, #0x8
  436b34:	str	w1, [sp, #196]
  436b38:	sub	x0, x28, x26
  436b3c:	cmp	w27, w0
  436b40:	b.hi	437128 <nftw@plt+0x345a8>  // b.pmore
  436b44:	mov	w27, w27
  436b48:	mov	x2, x27
  436b4c:	mov	w1, #0x0                   	// #0
  436b50:	mov	x0, x26
  436b54:	bl	4026f0 <memset@plt>
  436b58:	add	x26, x26, x27
  436b5c:	cmp	x26, x28
  436b60:	b.cs	436cdc <nftw@plt+0x3415c>  // b.hs, b.nlast
  436b64:	mov	x3, x25
  436b68:	mov	x2, x24
  436b6c:	mov	x1, x23
  436b70:	ldr	x0, [sp, #128]
  436b74:	bl	436510 <nftw@plt+0x33990>
  436b78:	cbz	w0, 4370e0 <nftw@plt+0x34560>
  436b7c:	ldr	x0, [sp, #208]
  436b80:	and	x1, x0, #0xff
  436b84:	ldr	x2, [sp, #112]
  436b88:	ldrh	w2, [x2, x1, lsl #1]
  436b8c:	tbnz	w2, #12, 4370e8 <nftw@plt+0x34568>
  436b90:	ubfx	x3, x2, #9, #3
  436b94:	add	w1, w3, #0x1
  436b98:	lsr	x0, x0, x1
  436b9c:	str	x0, [sp, #208]
  436ba0:	ldr	w1, [sp, #196]
  436ba4:	sub	w1, w1, w3
  436ba8:	sub	w3, w1, #0x1
  436bac:	str	w3, [sp, #196]
  436bb0:	and	w3, w2, #0x1ff
  436bb4:	tst	w2, #0x1f0
  436bb8:	b.ne	436b08 <nftw@plt+0x33f88>  // b.any
  436bbc:	strb	w3, [x26], #1
  436bc0:	b	436b5c <nftw@plt+0x33fdc>
  436bc4:	ldr	x2, [sp, #136]
  436bc8:	cmp	x26, x2
  436bcc:	b.eq	437108 <nftw@plt+0x34588>  // b.none
  436bd0:	and	w2, w0, #0x3
  436bd4:	add	w2, w2, #0x3
  436bd8:	lsr	x0, x0, #2
  436bdc:	str	x0, [sp, #208]
  436be0:	sub	w1, w1, #0x3
  436be4:	str	w1, [sp, #196]
  436be8:	sub	x0, x28, x26
  436bec:	cmp	w2, w0
  436bf0:	b.hi	437110 <nftw@plt+0x34590>  // b.pmore
  436bf4:	ldurb	w0, [x26, #-1]
  436bf8:	cmp	w2, #0x5
  436bfc:	b.eq	436c18 <nftw@plt+0x34098>  // b.none
  436c00:	cmp	w2, #0x6
  436c04:	b.eq	436c14 <nftw@plt+0x34094>  // b.none
  436c08:	cmp	w2, #0x4
  436c0c:	b.ne	436c20 <nftw@plt+0x340a0>  // b.any
  436c10:	b	436c1c <nftw@plt+0x3409c>
  436c14:	strb	w0, [x26], #1
  436c18:	strb	w0, [x26], #1
  436c1c:	strb	w0, [x26], #1
  436c20:	strb	w0, [x26]
  436c24:	strb	w0, [x26, #1]
  436c28:	strb	w0, [x26, #2]
  436c2c:	add	x26, x26, #0x3
  436c30:	b	436b5c <nftw@plt+0x33fdc>
  436c34:	and	w2, w0, #0x7
  436c38:	add	w2, w2, #0x3
  436c3c:	lsr	x0, x0, #3
  436c40:	str	x0, [sp, #208]
  436c44:	sub	w1, w1, #0x4
  436c48:	str	w1, [sp, #196]
  436c4c:	sub	x0, x28, x26
  436c50:	cmp	w2, w0
  436c54:	b.hi	437118 <nftw@plt+0x34598>  // b.pmore
  436c58:	cmp	w2, #0x7
  436c5c:	b.eq	436cd4 <nftw@plt+0x34154>  // b.none
  436c60:	b.hi	436ca8 <nftw@plt+0x34128>  // b.pmore
  436c64:	cmp	w2, #0x5
  436c68:	b.eq	436c78 <nftw@plt+0x340f8>  // b.none
  436c6c:	cmp	w2, #0x6
  436c70:	b.ne	436c80 <nftw@plt+0x34100>  // b.any
  436c74:	strb	wzr, [x26], #1
  436c78:	strb	wzr, [x26], #1
  436c7c:	b	436c8c <nftw@plt+0x3410c>
  436c80:	mov	x0, x26
  436c84:	cmp	w2, #0x4
  436c88:	b.ne	436c94 <nftw@plt+0x34114>  // b.any
  436c8c:	mov	x0, x26
  436c90:	strb	wzr, [x0], #1
  436c94:	strb	wzr, [x0]
  436c98:	strb	wzr, [x0, #1]
  436c9c:	add	x26, x0, #0x3
  436ca0:	strb	wzr, [x0, #2]
  436ca4:	b	436b5c <nftw@plt+0x33fdc>
  436ca8:	cmp	w2, #0x9
  436cac:	b.eq	436cbc <nftw@plt+0x3413c>  // b.none
  436cb0:	cmp	w2, #0xa
  436cb4:	b.ne	436cc4 <nftw@plt+0x34144>  // b.any
  436cb8:	strb	wzr, [x26], #1
  436cbc:	strb	wzr, [x26], #1
  436cc0:	b	436cd0 <nftw@plt+0x34150>
  436cc4:	mov	x0, x26
  436cc8:	cmp	w2, #0x8
  436ccc:	b.ne	436c94 <nftw@plt+0x34114>  // b.any
  436cd0:	strb	wzr, [x26], #1
  436cd4:	strb	wzr, [x26], #1
  436cd8:	b	436c74 <nftw@plt+0x340f4>
  436cdc:	ldr	x26, [sp, #112]
  436ce0:	add	x0, x26, #0x1, lsl #12
  436ce4:	ldrb	w0, [x0, #888]
  436ce8:	cbz	w0, 437130 <nftw@plt+0x345b0>
  436cec:	mov	x3, x26
  436cf0:	mov	x2, x26
  436cf4:	ldr	x28, [sp, #168]
  436cf8:	mov	x1, x28
  436cfc:	ldr	x27, [sp, #136]
  436d00:	mov	x0, x27
  436d04:	bl	4360cc <nftw@plt+0x3354c>
  436d08:	cbz	w0, 437138 <nftw@plt+0x345b8>
  436d0c:	add	x2, x26, #0x800
  436d10:	str	x2, [sp, #176]
  436d14:	mov	x3, x2
  436d18:	mov	x2, x26
  436d1c:	ldr	x1, [sp, #184]
  436d20:	add	x0, x27, x28
  436d24:	bl	4360cc <nftw@plt+0x3354c>
  436d28:	cbz	w0, 437140 <nftw@plt+0x345c0>
  436d2c:	str	x26, [sp, #136]
  436d30:	b	436d44 <nftw@plt+0x341c4>
  436d34:	ldr	x0, [sp, #144]
  436d38:	str	x0, [sp, #176]
  436d3c:	ldr	x0, [sp, #152]
  436d40:	str	x0, [sp, #136]
  436d44:	add	x0, sp, #0xc8
  436d48:	str	x0, [sp, #128]
  436d4c:	b	436da0 <nftw@plt+0x34220>
  436d50:	mov	w2, #0x1                   	// #1
  436d54:	lsl	w1, w2, w1
  436d58:	sub	w1, w1, #0x1
  436d5c:	and	x1, x1, x0, lsr #8
  436d60:	add	w26, w26, #0x100
  436d64:	add	x1, x1, w26, sxtw
  436d68:	ldr	x2, [sp, #136]
  436d6c:	ldrh	w26, [x2, x1, lsl #1]
  436d70:	ubfx	x1, x26, #9, #3
  436d74:	and	w26, w26, #0x1ff
  436d78:	add	w2, w1, #0x8
  436d7c:	lsr	x0, x0, x2
  436d80:	str	x0, [sp, #208]
  436d84:	ldr	w0, [sp, #196]
  436d88:	sub	w0, w0, #0x8
  436d8c:	sub	w0, w0, w1
  436d90:	str	w0, [sp, #196]
  436d94:	b	436df0 <nftw@plt+0x34270>
  436d98:	strb	w26, [x22], #1
  436d9c:	prfm	pstl1keep, [x22]
  436da0:	mov	x3, x25
  436da4:	mov	x2, x24
  436da8:	mov	x1, x23
  436dac:	ldr	x0, [sp, #128]
  436db0:	bl	436510 <nftw@plt+0x33990>
  436db4:	cbz	w0, 437148 <nftw@plt+0x345c8>
  436db8:	ldr	x0, [sp, #208]
  436dbc:	and	x1, x0, #0xff
  436dc0:	ldr	x2, [sp, #136]
  436dc4:	ldrh	w2, [x2, x1, lsl #1]
  436dc8:	ubfx	x1, x2, #9, #3
  436dcc:	and	w26, w2, #0x1ff
  436dd0:	tbnz	w2, #12, 436d50 <nftw@plt+0x341d0>
  436dd4:	add	w2, w1, #0x1
  436dd8:	lsr	x0, x0, x2
  436ddc:	str	x0, [sp, #208]
  436de0:	ldr	w0, [sp, #196]
  436de4:	sub	w0, w0, #0x1
  436de8:	sub	w1, w0, w1
  436dec:	str	w1, [sp, #196]
  436df0:	cmp	w26, #0xff
  436df4:	b.hi	436e0c <nftw@plt+0x3428c>  // b.pmore
  436df8:	ldr	x0, [sp, #104]
  436dfc:	cmp	x0, x22
  436e00:	b.ne	436d98 <nftw@plt+0x34218>  // b.any
  436e04:	ldp	x27, x28, [sp, #80]
  436e08:	b	4370ec <nftw@plt+0x3456c>
  436e0c:	cmp	w26, #0x100
  436e10:	b.eq	436ae8 <nftw@plt+0x33f68>  // b.none
  436e14:	cmp	w26, #0x108
  436e18:	b.hi	436ea8 <nftw@plt+0x34328>  // b.pmore
  436e1c:	sub	w28, w26, #0xfe
  436e20:	mov	x3, x25
  436e24:	mov	x2, x24
  436e28:	mov	x1, x23
  436e2c:	ldr	x0, [sp, #128]
  436e30:	bl	436510 <nftw@plt+0x33990>
  436e34:	cbz	w0, 437160 <nftw@plt+0x345e0>
  436e38:	ldr	x0, [sp, #208]
  436e3c:	and	x1, x0, #0xff
  436e40:	ldr	x2, [sp, #176]
  436e44:	ldrh	w2, [x2, x1, lsl #1]
  436e48:	ubfx	x1, x2, #9, #3
  436e4c:	and	w26, w2, #0x1ff
  436e50:	tbnz	w2, #12, 436f28 <nftw@plt+0x343a8>
  436e54:	add	w2, w1, #0x1
  436e58:	lsr	x0, x0, x2
  436e5c:	str	x0, [sp, #208]
  436e60:	ldr	w0, [sp, #196]
  436e64:	sub	w0, w0, #0x1
  436e68:	sub	w1, w0, w1
  436e6c:	str	w1, [sp, #196]
  436e70:	cbnz	w26, 436f70 <nftw@plt+0x343f0>
  436e74:	cmp	x19, x22
  436e78:	b.eq	437168 <nftw@plt+0x345e8>  // b.none
  436e7c:	ldr	x0, [sp, #104]
  436e80:	sub	x0, x0, x22
  436e84:	cmp	w28, w0
  436e88:	b.hi	437170 <nftw@plt+0x345f0>  // b.pmore
  436e8c:	mov	w28, w28
  436e90:	mov	x2, x28
  436e94:	ldurb	w1, [x22, #-1]
  436e98:	mov	x0, x22
  436e9c:	bl	4026f0 <memset@plt>
  436ea0:	add	x22, x22, x28
  436ea4:	b	436da0 <nftw@plt+0x34220>
  436ea8:	cmp	w26, #0x11d
  436eac:	b.eq	436f20 <nftw@plt+0x343a0>  // b.none
  436eb0:	b.hi	437150 <nftw@plt+0x345d0>  // b.pmore
  436eb4:	mov	x3, x25
  436eb8:	mov	x2, x24
  436ebc:	mov	x1, x23
  436ec0:	ldr	x0, [sp, #128]
  436ec4:	bl	436510 <nftw@plt+0x33990>
  436ec8:	cbz	w0, 437158 <nftw@plt+0x345d8>
  436ecc:	sub	w26, w26, #0x109
  436ed0:	lsr	w1, w26, #2
  436ed4:	add	w2, w1, #0x1
  436ed8:	and	w26, w26, #0x3
  436edc:	lsl	w0, w26, w2
  436ee0:	add	w0, w0, #0xb
  436ee4:	ldr	x3, [sp, #208]
  436ee8:	mov	w4, #0x1                   	// #1
  436eec:	lsl	w1, w4, w1
  436ef0:	sub	w1, w1, #0x1
  436ef4:	mov	w4, #0xffffffff            	// #-1
  436ef8:	lsl	w4, w4, w2
  436efc:	bic	w4, w3, w4
  436f00:	add	w1, w4, w1, lsl #3
  436f04:	add	w28, w1, w0
  436f08:	lsr	x3, x3, x2
  436f0c:	str	x3, [sp, #208]
  436f10:	ldr	w0, [sp, #196]
  436f14:	sub	w2, w0, w2
  436f18:	str	w2, [sp, #196]
  436f1c:	b	436e20 <nftw@plt+0x342a0>
  436f20:	mov	w28, #0x102                 	// #258
  436f24:	b	436e20 <nftw@plt+0x342a0>
  436f28:	mov	w2, #0x1                   	// #1
  436f2c:	lsl	w1, w2, w1
  436f30:	sub	w1, w1, #0x1
  436f34:	and	x1, x1, x0, lsr #8
  436f38:	add	w26, w26, #0x100
  436f3c:	add	x1, x1, w26, sxtw
  436f40:	ldr	x2, [sp, #176]
  436f44:	ldrh	w26, [x2, x1, lsl #1]
  436f48:	ubfx	x1, x26, #9, #3
  436f4c:	and	w26, w26, #0x1ff
  436f50:	add	w2, w1, #0x8
  436f54:	lsr	x0, x0, x2
  436f58:	str	x0, [sp, #208]
  436f5c:	ldr	w0, [sp, #196]
  436f60:	sub	w0, w0, #0x8
  436f64:	sub	w0, w0, w1
  436f68:	str	w0, [sp, #196]
  436f6c:	b	436e70 <nftw@plt+0x342f0>
  436f70:	cmp	w26, #0x1d
  436f74:	b.hi	437178 <nftw@plt+0x345f8>  // b.pmore
  436f78:	cmp	w26, #0x3
  436f7c:	b.hi	436fc4 <nftw@plt+0x34444>  // b.pmore
  436f80:	add	w26, w26, #0x1
  436f84:	sub	x0, x22, x19
  436f88:	cmp	w26, w0
  436f8c:	b.hi	437188 <nftw@plt+0x34608>  // b.pmore
  436f90:	ldr	x0, [sp, #104]
  436f94:	sub	x0, x0, x22
  436f98:	cmp	w28, w0
  436f9c:	b.hi	437190 <nftw@plt+0x34610>  // b.pmore
  436fa0:	cmp	w28, w26
  436fa4:	b.hi	437030 <nftw@plt+0x344b0>  // b.pmore
  436fa8:	mov	w27, w28
  436fac:	mov	x2, x27
  436fb0:	sub	x1, x22, w26, uxtw
  436fb4:	mov	x0, x22
  436fb8:	bl	402490 <memcpy@plt>
  436fbc:	add	x22, x22, x27
  436fc0:	b	436da0 <nftw@plt+0x34220>
  436fc4:	mov	x3, x25
  436fc8:	mov	x2, x24
  436fcc:	mov	x1, x23
  436fd0:	ldr	x0, [sp, #128]
  436fd4:	bl	436510 <nftw@plt+0x33990>
  436fd8:	cbz	w0, 437180 <nftw@plt+0x34600>
  436fdc:	sub	w26, w26, #0x4
  436fe0:	lsr	w1, w26, #1
  436fe4:	add	w2, w1, #0x1
  436fe8:	and	w26, w26, #0x1
  436fec:	lsl	w0, w26, w2
  436ff0:	add	w0, w0, #0x5
  436ff4:	ldr	x3, [sp, #208]
  436ff8:	mov	w4, #0x1                   	// #1
  436ffc:	lsl	w1, w4, w1
  437000:	sub	w1, w1, #0x1
  437004:	mov	w4, #0xffffffff            	// #-1
  437008:	lsl	w4, w4, w2
  43700c:	bic	w4, w3, w4
  437010:	add	w1, w4, w1, lsl #2
  437014:	add	w26, w1, w0
  437018:	lsr	x3, x3, x2
  43701c:	str	x3, [sp, #208]
  437020:	ldr	w0, [sp, #196]
  437024:	sub	w2, w0, w2
  437028:	str	w2, [sp, #196]
  43702c:	b	436f84 <nftw@plt+0x34404>
  437030:	mov	w0, w26
  437034:	str	x0, [sp, #184]
  437038:	cmp	w28, w26
  43703c:	csel	w0, w28, w26, ls  // ls = plast
  437040:	str	w0, [sp, #168]
  437044:	csel	w27, w28, w26, ls  // ls = plast
  437048:	mov	x2, x27
  43704c:	ldr	x1, [sp, #184]
  437050:	sub	x1, x22, x1
  437054:	mov	x0, x22
  437058:	bl	402490 <memcpy@plt>
  43705c:	add	x22, x22, x27
  437060:	ldr	w0, [sp, #168]
  437064:	subs	w28, w28, w0
  437068:	b.ne	437038 <nftw@plt+0x344b8>  // b.any
  43706c:	b	436da0 <nftw@plt+0x34220>
  437070:	ldp	x27, x28, [sp, #80]
  437074:	b	43719c <nftw@plt+0x3461c>
  437078:	ldp	x27, x28, [sp, #80]
  43707c:	b	4370ec <nftw@plt+0x3456c>
  437080:	ldp	x27, x28, [sp, #80]
  437084:	b	4370ec <nftw@plt+0x3456c>
  437088:	ldp	x27, x28, [sp, #80]
  43708c:	b	4370ec <nftw@plt+0x3456c>
  437090:	ldp	x27, x28, [sp, #80]
  437094:	b	4370ec <nftw@plt+0x3456c>
  437098:	ldp	x27, x28, [sp, #80]
  43709c:	b	4370ec <nftw@plt+0x3456c>
  4370a0:	ldp	x27, x28, [sp, #80]
  4370a4:	b	4370ec <nftw@plt+0x3456c>
  4370a8:	ldp	x27, x28, [sp, #80]
  4370ac:	b	4370ec <nftw@plt+0x3456c>
  4370b0:	ldp	x27, x28, [sp, #80]
  4370b4:	b	4370ec <nftw@plt+0x3456c>
  4370b8:	ldp	x27, x28, [sp, #80]
  4370bc:	b	4370ec <nftw@plt+0x3456c>
  4370c0:	ldp	x27, x28, [sp, #80]
  4370c4:	b	4370ec <nftw@plt+0x3456c>
  4370c8:	ldp	x27, x28, [sp, #80]
  4370cc:	b	4370ec <nftw@plt+0x3456c>
  4370d0:	ldp	x27, x28, [sp, #80]
  4370d4:	b	4370ec <nftw@plt+0x3456c>
  4370d8:	ldp	x27, x28, [sp, #80]
  4370dc:	b	4370ec <nftw@plt+0x3456c>
  4370e0:	ldp	x27, x28, [sp, #80]
  4370e4:	b	4370ec <nftw@plt+0x3456c>
  4370e8:	ldp	x27, x28, [sp, #80]
  4370ec:	mov	w0, #0x0                   	// #0
  4370f0:	ldp	x19, x20, [sp, #16]
  4370f4:	ldp	x21, x22, [sp, #32]
  4370f8:	ldp	x23, x24, [sp, #48]
  4370fc:	ldp	x25, x26, [sp, #64]
  437100:	ldp	x29, x30, [sp], #240
  437104:	ret
  437108:	ldp	x27, x28, [sp, #80]
  43710c:	b	4370ec <nftw@plt+0x3456c>
  437110:	ldp	x27, x28, [sp, #80]
  437114:	b	4370ec <nftw@plt+0x3456c>
  437118:	ldp	x27, x28, [sp, #80]
  43711c:	b	4370ec <nftw@plt+0x3456c>
  437120:	ldp	x27, x28, [sp, #80]
  437124:	b	4370ec <nftw@plt+0x3456c>
  437128:	ldp	x27, x28, [sp, #80]
  43712c:	b	4370ec <nftw@plt+0x3456c>
  437130:	ldp	x27, x28, [sp, #80]
  437134:	b	4370ec <nftw@plt+0x3456c>
  437138:	ldp	x27, x28, [sp, #80]
  43713c:	b	4370ec <nftw@plt+0x3456c>
  437140:	ldp	x27, x28, [sp, #80]
  437144:	b	4370ec <nftw@plt+0x3456c>
  437148:	ldp	x27, x28, [sp, #80]
  43714c:	b	4370ec <nftw@plt+0x3456c>
  437150:	ldp	x27, x28, [sp, #80]
  437154:	b	4370ec <nftw@plt+0x3456c>
  437158:	ldp	x27, x28, [sp, #80]
  43715c:	b	4370ec <nftw@plt+0x3456c>
  437160:	ldp	x27, x28, [sp, #80]
  437164:	b	4370ec <nftw@plt+0x3456c>
  437168:	ldp	x27, x28, [sp, #80]
  43716c:	b	4370ec <nftw@plt+0x3456c>
  437170:	ldp	x27, x28, [sp, #80]
  437174:	b	4370ec <nftw@plt+0x3456c>
  437178:	ldp	x27, x28, [sp, #80]
  43717c:	b	4370ec <nftw@plt+0x3456c>
  437180:	ldp	x27, x28, [sp, #80]
  437184:	b	4370ec <nftw@plt+0x3456c>
  437188:	ldp	x27, x28, [sp, #80]
  43718c:	b	4370ec <nftw@plt+0x3456c>
  437190:	ldp	x27, x28, [sp, #80]
  437194:	b	4370ec <nftw@plt+0x3456c>
  437198:	mov	x22, x3
  43719c:	ldr	x0, [sp, #104]
  4371a0:	cmp	x0, x22
  4371a4:	b.ne	437434 <nftw@plt+0x348b4>  // b.any
  4371a8:	ldr	x1, [sp, #120]
  4371ac:	sub	x0, x1, #0x4
  4371b0:	add	x0, x21, x0
  4371b4:	add	x21, x21, x1
  4371b8:	mov	w9, #0x0                   	// #0
  4371bc:	ldrb	w1, [x0], #1
  4371c0:	orr	w9, w1, w9, lsl #8
  4371c4:	cmp	x21, x0
  4371c8:	b.ne	4371bc <nftw@plt+0x3463c>  // b.any
  4371cc:	mov	w5, #0x0                   	// #0
  4371d0:	mov	w3, #0x1                   	// #1
  4371d4:	mov	x0, #0x15af                	// #5551
  4371d8:	cmp	x20, x0
  4371dc:	b.ls	437428 <nftw@plt+0x348a8>  // b.plast
  4371e0:	mov	x13, #0x15b0                	// #5552
  4371e4:	mov	w15, #0x8071                	// #32881
  4371e8:	movk	w15, #0x8007, lsl #16
  4371ec:	mov	w14, #0xfff1                	// #65521
  4371f0:	mov	x17, x0
  4371f4:	mov	x2, x19
  4371f8:	add	x16, x19, x13
  4371fc:	ldrb	w0, [x2]
  437200:	add	w0, w0, w3
  437204:	ldrb	w1, [x2, #1]
  437208:	add	w1, w1, w0
  43720c:	ldrb	w6, [x2, #2]
  437210:	add	w6, w6, w1
  437214:	ldrb	w25, [x2, #3]
  437218:	add	w25, w25, w6
  43721c:	ldrb	w4, [x2, #4]
  437220:	add	w4, w4, w25
  437224:	ldrb	w24, [x2, #5]
  437228:	add	w24, w24, w4
  43722c:	ldrb	w12, [x2, #6]
  437230:	add	w12, w12, w24
  437234:	ldrb	w23, [x2, #7]
  437238:	add	w23, w23, w12
  43723c:	ldrb	w11, [x2, #8]
  437240:	add	w11, w11, w23
  437244:	ldrb	w22, [x2, #9]
  437248:	add	w22, w22, w11
  43724c:	ldrb	w10, [x2, #10]
  437250:	add	w10, w10, w22
  437254:	ldrb	w21, [x2, #11]
  437258:	add	w21, w21, w10
  43725c:	ldrb	w8, [x2, #12]
  437260:	add	w8, w8, w21
  437264:	ldrb	w18, [x2, #13]
  437268:	add	w18, w18, w8
  43726c:	ldrb	w7, [x2, #14]
  437270:	add	w7, w7, w18
  437274:	add	x2, x2, #0x10
  437278:	ldurb	w3, [x2, #-1]
  43727c:	add	w3, w3, w7
  437280:	add	w1, w0, w1
  437284:	add	w6, w6, w25
  437288:	add	w1, w1, w6
  43728c:	add	w4, w4, w24
  437290:	add	w1, w1, w4
  437294:	add	w12, w12, w23
  437298:	add	w1, w1, w12
  43729c:	add	w0, w11, w22
  4372a0:	add	w0, w1, w0
  4372a4:	add	w10, w10, w21
  4372a8:	add	w0, w0, w10
  4372ac:	add	w8, w8, w18
  4372b0:	add	w0, w0, w8
  4372b4:	add	w7, w7, w3
  4372b8:	add	w0, w0, w7
  4372bc:	add	w5, w5, w0
  4372c0:	cmp	x2, x16
  4372c4:	b.ne	4371fc <nftw@plt+0x3467c>  // b.any
  4372c8:	add	x19, x19, x13
  4372cc:	sub	x20, x20, x13
  4372d0:	umull	x0, w3, w15
  4372d4:	lsr	x0, x0, #47
  4372d8:	msub	w3, w0, w14, w3
  4372dc:	umull	x0, w5, w15
  4372e0:	lsr	x0, x0, #47
  4372e4:	msub	w5, w0, w14, w5
  4372e8:	cmp	x20, x17
  4372ec:	b.hi	4371f4 <nftw@plt+0x34674>  // b.pmore
  4372f0:	cmp	x20, #0xf
  4372f4:	b.ls	4373d8 <nftw@plt+0x34858>  // b.plast
  4372f8:	sub	x12, x20, #0x10
  4372fc:	and	x12, x12, #0xfffffffffffffff0
  437300:	add	x12, x12, #0x10
  437304:	add	x12, x19, x12
  437308:	ldrb	w0, [x19]
  43730c:	add	w0, w0, w3
  437310:	ldrb	w1, [x19, #1]
  437314:	add	w1, w1, w0
  437318:	ldrb	w11, [x19, #2]
  43731c:	add	w11, w11, w1
  437320:	ldrb	w18, [x19, #3]
  437324:	add	w18, w18, w11
  437328:	ldrb	w10, [x19, #4]
  43732c:	add	w10, w10, w18
  437330:	ldrb	w17, [x19, #5]
  437334:	add	w17, w17, w10
  437338:	ldrb	w8, [x19, #6]
  43733c:	add	w8, w8, w17
  437340:	ldrb	w16, [x19, #7]
  437344:	add	w16, w16, w8
  437348:	ldrb	w7, [x19, #8]
  43734c:	add	w7, w7, w16
  437350:	ldrb	w15, [x19, #9]
  437354:	add	w15, w15, w7
  437358:	ldrb	w6, [x19, #10]
  43735c:	add	w6, w6, w15
  437360:	ldrb	w14, [x19, #11]
  437364:	add	w14, w14, w6
  437368:	ldrb	w4, [x19, #12]
  43736c:	add	w4, w4, w14
  437370:	ldrb	w13, [x19, #13]
  437374:	add	w13, w13, w4
  437378:	ldrb	w2, [x19, #14]
  43737c:	add	w2, w2, w13
  437380:	add	x19, x19, #0x10
  437384:	ldurb	w3, [x19, #-1]
  437388:	add	w3, w3, w2
  43738c:	add	w1, w0, w1
  437390:	add	w11, w11, w18
  437394:	add	w1, w1, w11
  437398:	add	w10, w10, w17
  43739c:	add	w1, w1, w10
  4373a0:	add	w8, w8, w16
  4373a4:	add	w1, w1, w8
  4373a8:	add	w0, w7, w15
  4373ac:	add	w0, w1, w0
  4373b0:	add	w6, w6, w14
  4373b4:	add	w0, w0, w6
  4373b8:	add	w4, w4, w13
  4373bc:	add	w0, w0, w4
  4373c0:	add	w2, w2, w3
  4373c4:	add	w0, w0, w2
  4373c8:	add	w5, w5, w0
  4373cc:	cmp	x12, x19
  4373d0:	b.ne	437308 <nftw@plt+0x34788>  // b.any
  4373d4:	and	x20, x20, #0xf
  4373d8:	cbz	x20, 4373f4 <nftw@plt+0x34874>
  4373dc:	add	x20, x19, x20
  4373e0:	ldrb	w0, [x19], #1
  4373e4:	add	w3, w3, w0
  4373e8:	add	w5, w5, w3
  4373ec:	cmp	x19, x20
  4373f0:	b.ne	4373e0 <nftw@plt+0x34860>  // b.any
  4373f4:	mov	w0, #0x8071                	// #32881
  4373f8:	movk	w0, #0x8007, lsl #16
  4373fc:	umull	x1, w5, w0
  437400:	lsr	x1, x1, #47
  437404:	mov	w2, #0xfff1                	// #65521
  437408:	msub	w5, w1, w2, w5
  43740c:	umull	x0, w3, w0
  437410:	lsr	x0, x0, #47
  437414:	msub	w3, w0, w2, w3
  437418:	add	w3, w3, w5, lsl #16
  43741c:	cmp	w3, w9
  437420:	cset	w0, eq  // eq = none
  437424:	b	4370f0 <nftw@plt+0x34570>
  437428:	mov	w5, #0x0                   	// #0
  43742c:	mov	w3, #0x1                   	// #1
  437430:	b	4372f0 <nftw@plt+0x34770>
  437434:	mov	w0, #0x0                   	// #0
  437438:	b	4370f0 <nftw@plt+0x34570>
  43743c:	stp	x29, x30, [sp, #-112]!
  437440:	mov	x29, sp
  437444:	stp	x21, x22, [sp, #32]
  437448:	str	x5, [sp, #104]
  43744c:	str	xzr, [x6]
  437450:	str	xzr, [x7]
  437454:	mov	w21, #0x1                   	// #1
  437458:	cmp	x2, #0xb
  43745c:	b.ls	437528 <nftw@plt+0x349a8>  // b.plast
  437460:	stp	x19, x20, [sp, #16]
  437464:	stp	x23, x24, [sp, #48]
  437468:	stp	x25, x26, [sp, #64]
  43746c:	stp	x27, x28, [sp, #80]
  437470:	mov	x26, x0
  437474:	mov	x20, x1
  437478:	mov	x23, x2
  43747c:	mov	x25, x3
  437480:	mov	x27, x4
  437484:	mov	x22, x6
  437488:	mov	x24, x7
  43748c:	mov	x2, #0x4                   	// #4
  437490:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437494:	add	x1, x1, #0x1c8
  437498:	mov	x0, x20
  43749c:	bl	402850 <memcmp@plt>
  4374a0:	mov	w21, w0
  4374a4:	cbnz	w0, 437538 <nftw@plt+0x349b8>
  4374a8:	add	x0, x20, #0x4
  4374ac:	add	x2, x20, #0xc
  4374b0:	mov	x19, #0x0                   	// #0
  4374b4:	ldrb	w1, [x0], #1
  4374b8:	orr	x19, x1, x19, lsl #8
  4374bc:	cmp	x0, x2
  4374c0:	b.ne	4374b4 <nftw@plt+0x34934>  // b.any
  4374c4:	ldr	x28, [x22]
  4374c8:	cmp	x19, #0x0
  4374cc:	ccmp	x28, #0x0, #0x4, eq  // eq = none
  4374d0:	b.ne	4374f0 <nftw@plt+0x34970>  // b.any
  4374d4:	ldr	x3, [sp, #104]
  4374d8:	mov	x2, x27
  4374dc:	mov	x1, x19
  4374e0:	mov	x0, x26
  4374e4:	bl	435960 <nftw@plt+0x32de0>
  4374e8:	mov	x28, x0
  4374ec:	cbz	x0, 437550 <nftw@plt+0x349d0>
  4374f0:	mov	x4, x19
  4374f4:	mov	x3, x28
  4374f8:	mov	x2, x25
  4374fc:	sub	x1, x23, #0xc
  437500:	add	x0, x20, #0xc
  437504:	bl	43656c <nftw@plt+0x339ec>
  437508:	mov	w21, #0x1                   	// #1
  43750c:	cbz	w0, 437564 <nftw@plt+0x349e4>
  437510:	str	x28, [x22]
  437514:	str	x19, [x24]
  437518:	ldp	x19, x20, [sp, #16]
  43751c:	ldp	x23, x24, [sp, #48]
  437520:	ldp	x25, x26, [sp, #64]
  437524:	ldp	x27, x28, [sp, #80]
  437528:	mov	w0, w21
  43752c:	ldp	x21, x22, [sp, #32]
  437530:	ldp	x29, x30, [sp], #112
  437534:	ret
  437538:	mov	w21, #0x1                   	// #1
  43753c:	ldp	x19, x20, [sp, #16]
  437540:	ldp	x23, x24, [sp, #48]
  437544:	ldp	x25, x26, [sp, #64]
  437548:	ldp	x27, x28, [sp, #80]
  43754c:	b	437528 <nftw@plt+0x349a8>
  437550:	ldp	x19, x20, [sp, #16]
  437554:	ldp	x23, x24, [sp, #48]
  437558:	ldp	x25, x26, [sp, #64]
  43755c:	ldp	x27, x28, [sp, #80]
  437560:	b	437528 <nftw@plt+0x349a8>
  437564:	ldp	x19, x20, [sp, #16]
  437568:	ldp	x23, x24, [sp, #48]
  43756c:	ldp	x25, x26, [sp, #64]
  437570:	ldp	x27, x28, [sp, #80]
  437574:	b	437528 <nftw@plt+0x349a8>
  437578:	stp	x29, x30, [sp, #-144]!
  43757c:	mov	x29, sp
  437580:	stp	x19, x20, [sp, #16]
  437584:	stp	x21, x22, [sp, #32]
  437588:	stp	x23, x24, [sp, #48]
  43758c:	stp	x25, x26, [sp, #64]
  437590:	stp	x27, x28, [sp, #80]
  437594:	mov	x23, x0
  437598:	str	x1, [sp, #104]
  43759c:	mov	x22, x2
  4375a0:	str	x3, [sp, #112]
  4375a4:	mov	x25, x4
  4375a8:	mov	x20, x6
  4375ac:	mov	x21, x7
  4375b0:	str	x5, [sp, #120]
  4375b4:	mov	x0, x5
  4375b8:	bl	4024f0 <strlen@plt>
  4375bc:	mov	x24, x0
  4375c0:	add	x28, x22, x25
  4375c4:	add	x27, x28, x0
  4375c8:	add	x26, x27, #0x1
  4375cc:	mov	x3, x21
  4375d0:	mov	x2, x20
  4375d4:	mov	x1, x26
  4375d8:	mov	x0, x23
  4375dc:	bl	435960 <nftw@plt+0x32de0>
  4375e0:	cbz	x0, 437668 <nftw@plt+0x34ae8>
  4375e4:	mov	x19, x0
  4375e8:	mov	x2, x22
  4375ec:	ldr	x1, [sp, #104]
  4375f0:	bl	402490 <memcpy@plt>
  4375f4:	mov	x2, x25
  4375f8:	ldr	x1, [sp, #112]
  4375fc:	add	x0, x19, x22
  437600:	bl	402490 <memcpy@plt>
  437604:	mov	x2, x24
  437608:	ldr	x1, [sp, #120]
  43760c:	add	x0, x19, x28
  437610:	bl	402490 <memcpy@plt>
  437614:	strb	wzr, [x19, x27]
  437618:	add	x3, sp, #0x8c
  43761c:	mov	x2, x21
  437620:	mov	x1, x20
  437624:	mov	x0, x19
  437628:	bl	435f60 <nftw@plt+0x333e0>
  43762c:	mov	w22, w0
  437630:	mov	x4, x21
  437634:	mov	x3, x20
  437638:	mov	x2, x26
  43763c:	mov	x1, x19
  437640:	mov	x0, x23
  437644:	bl	4358b4 <nftw@plt+0x32d34>
  437648:	mov	w0, w22
  43764c:	ldp	x19, x20, [sp, #16]
  437650:	ldp	x21, x22, [sp, #32]
  437654:	ldp	x23, x24, [sp, #48]
  437658:	ldp	x25, x26, [sp, #64]
  43765c:	ldp	x27, x28, [sp, #80]
  437660:	ldp	x29, x30, [sp], #144
  437664:	ret
  437668:	mov	w22, #0xffffffff            	// #-1
  43766c:	b	437648 <nftw@plt+0x34ac8>
  437670:	stp	x29, x30, [sp, #-288]!
  437674:	mov	x29, sp
  437678:	stp	x19, x20, [sp, #16]
  43767c:	stp	x21, x22, [sp, #32]
  437680:	stp	x23, x24, [sp, #48]
  437684:	stp	x25, x26, [sp, #64]
  437688:	stp	x27, x28, [sp, #80]
  43768c:	mov	x24, x0
  437690:	mov	x21, x1
  437694:	str	x2, [sp, #96]
  437698:	str	w3, [sp, #108]
  43769c:	mov	x22, x4
  4376a0:	mov	x23, x5
  4376a4:	mov	x28, #0x0                   	// #0
  4376a8:	mov	x27, #0x0                   	// #0
  4376ac:	add	x0, sp, #0xa0
  4376b0:	str	x0, [sp, #120]
  4376b4:	b	437878 <nftw@plt+0x34cf8>
  4376b8:	mov	x4, x23
  4376bc:	mov	x3, x22
  4376c0:	mov	x2, x25
  4376c4:	mov	x1, x19
  4376c8:	mov	x0, x24
  4376cc:	bl	4358b4 <nftw@plt+0x32d34>
  4376d0:	mov	w1, #0x2f                  	// #47
  4376d4:	mov	x0, x21
  4376d8:	bl	4027b0 <strrchr@plt>
  4376dc:	cbz	x0, 4378a4 <nftw@plt+0x34d24>
  4376e0:	add	x0, x0, #0x1
  4376e4:	sub	x19, x0, x21
  4376e8:	mov	x7, x23
  4376ec:	mov	x6, x22
  4376f0:	ldr	x5, [sp, #96]
  4376f4:	mov	x4, #0x0                   	// #0
  4376f8:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4376fc:	add	x3, x3, #0x780
  437700:	mov	x2, x19
  437704:	mov	x1, x21
  437708:	mov	x0, x24
  43770c:	bl	437578 <nftw@plt+0x349f8>
  437710:	mov	w20, w0
  437714:	tbnz	w0, #31, 4378b4 <nftw@plt+0x34d34>
  437718:	cmp	x28, #0x0
  43771c:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  437720:	b.ne	437920 <nftw@plt+0x34da0>  // b.any
  437724:	ldr	w0, [sp, #108]
  437728:	cbnz	w0, 437944 <nftw@plt+0x34dc4>
  43772c:	mov	w0, w20
  437730:	ldp	x19, x20, [sp, #16]
  437734:	ldp	x21, x22, [sp, #32]
  437738:	ldp	x23, x24, [sp, #48]
  43773c:	ldp	x25, x26, [sp, #64]
  437740:	ldp	x27, x28, [sp, #80]
  437744:	ldp	x29, x30, [sp], #288
  437748:	ret
  43774c:	mov	x4, x23
  437750:	mov	x3, x22
  437754:	mov	x2, x25
  437758:	mov	x1, x19
  43775c:	mov	x0, x24
  437760:	bl	4358b4 <nftw@plt+0x32d34>
  437764:	lsl	x25, x25, #1
  437768:	mov	x3, x23
  43776c:	mov	x2, x22
  437770:	mov	x1, x25
  437774:	mov	x0, x24
  437778:	bl	435960 <nftw@plt+0x32de0>
  43777c:	mov	x19, x0
  437780:	cbz	x0, 4376d0 <nftw@plt+0x34b50>
  437784:	mov	x2, x25
  437788:	mov	x1, x0
  43778c:	mov	x0, x21
  437790:	bl	402590 <readlink@plt>
  437794:	tbnz	x0, #63, 4376b8 <nftw@plt+0x34b38>
  437798:	sub	x2, x25, #0x1
  43779c:	cmp	x2, x0
  4377a0:	b.ls	43774c <nftw@plt+0x34bcc>  // b.plast
  4377a4:	strb	wzr, [x19, x0]
  4377a8:	ldrb	w0, [x19]
  4377ac:	cmp	w0, #0x2f
  4377b0:	b.eq	437850 <nftw@plt+0x34cd0>  // b.none
  4377b4:	mov	w1, #0x2f                  	// #47
  4377b8:	mov	x0, x21
  4377bc:	bl	4027b0 <strrchr@plt>
  4377c0:	cbz	x0, 437850 <nftw@plt+0x34cd0>
  4377c4:	add	x0, x0, #0x1
  4377c8:	sub	x20, x0, x21
  4377cc:	mov	x0, x19
  4377d0:	bl	4024f0 <strlen@plt>
  4377d4:	add	x1, x20, #0x1
  4377d8:	add	x0, x1, x0
  4377dc:	mov	x3, x23
  4377e0:	mov	x2, x22
  4377e4:	str	x0, [sp, #112]
  4377e8:	mov	x1, x0
  4377ec:	mov	x0, x24
  4377f0:	bl	435960 <nftw@plt+0x32de0>
  4377f4:	mov	x26, x0
  4377f8:	cbz	x0, 437a14 <nftw@plt+0x34e94>
  4377fc:	mov	x2, x20
  437800:	mov	x1, x21
  437804:	bl	402490 <memcpy@plt>
  437808:	mov	x0, x19
  43780c:	bl	4024f0 <strlen@plt>
  437810:	add	x20, x26, x20
  437814:	mov	x2, x0
  437818:	mov	x1, x19
  43781c:	mov	x0, x20
  437820:	bl	402490 <memcpy@plt>
  437824:	mov	x0, x19
  437828:	bl	4024f0 <strlen@plt>
  43782c:	strb	wzr, [x20, x0]
  437830:	mov	x4, x23
  437834:	mov	x3, x22
  437838:	mov	x2, x25
  43783c:	mov	x1, x19
  437840:	mov	x0, x24
  437844:	bl	4358b4 <nftw@plt+0x32d34>
  437848:	ldr	x25, [sp, #112]
  43784c:	mov	x19, x26
  437850:	cbz	x27, 43786c <nftw@plt+0x34cec>
  437854:	mov	x4, x23
  437858:	mov	x3, x22
  43785c:	mov	x2, x28
  437860:	mov	x1, x27
  437864:	mov	x0, x24
  437868:	bl	4358b4 <nftw@plt+0x32d34>
  43786c:	mov	x28, x25
  437870:	mov	x27, x19
  437874:	mov	x21, x19
  437878:	ldr	x2, [sp, #120]
  43787c:	mov	x1, x21
  437880:	mov	w0, #0x0                   	// #0
  437884:	bl	4029c0 <__lxstat@plt>
  437888:	tbnz	w0, #31, 4376d0 <nftw@plt+0x34b50>
  43788c:	ldr	w0, [sp, #176]
  437890:	and	w0, w0, #0xf000
  437894:	cmp	w0, #0xa, lsl #12
  437898:	b.ne	4376d0 <nftw@plt+0x34b50>  // b.any
  43789c:	mov	x25, #0x80                  	// #128
  4378a0:	b	437768 <nftw@plt+0x34be8>
  4378a4:	mov	x19, #0x0                   	// #0
  4378a8:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4378ac:	add	x21, x21, #0x780
  4378b0:	b	4376e8 <nftw@plt+0x34b68>
  4378b4:	mov	x7, x23
  4378b8:	mov	x6, x22
  4378bc:	ldr	x5, [sp, #96]
  4378c0:	mov	x4, #0x7                   	// #7
  4378c4:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4378c8:	add	x3, x3, #0x1d0
  4378cc:	mov	x2, x19
  4378d0:	mov	x1, x21
  4378d4:	mov	x0, x24
  4378d8:	bl	437578 <nftw@plt+0x349f8>
  4378dc:	mov	w20, w0
  4378e0:	tbz	w0, #31, 437718 <nftw@plt+0x34b98>
  4378e4:	mov	x7, x23
  4378e8:	mov	x6, x22
  4378ec:	ldr	x5, [sp, #96]
  4378f0:	mov	x4, x19
  4378f4:	mov	x3, x21
  4378f8:	mov	x2, #0xf                   	// #15
  4378fc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437900:	add	x1, x1, #0x1d8
  437904:	mov	x0, x24
  437908:	bl	437578 <nftw@plt+0x349f8>
  43790c:	cmp	w0, #0x0
  437910:	csinv	w20, w0, wzr, ge  // ge = tcont
  437914:	cmp	x27, #0x0
  437918:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  43791c:	b.eq	437938 <nftw@plt+0x34db8>  // b.none
  437920:	mov	x4, x23
  437924:	mov	x3, x22
  437928:	mov	x2, x28
  43792c:	mov	x1, x27
  437930:	mov	x0, x24
  437934:	bl	4358b4 <nftw@plt+0x32d34>
  437938:	tbz	w20, #31, 437724 <nftw@plt+0x34ba4>
  43793c:	mov	w20, #0xffffffff            	// #-1
  437940:	b	43772c <nftw@plt+0x34bac>
  437944:	add	x2, sp, #0xa0
  437948:	mov	w1, w20
  43794c:	mov	w0, #0x0                   	// #0
  437950:	bl	402a10 <__fxstat@plt>
  437954:	tbnz	w0, #31, 4379e4 <nftw@plt+0x34e64>
  437958:	add	x6, sp, #0x88
  43795c:	mov	x5, x23
  437960:	mov	x4, x22
  437964:	ldr	x3, [sp, #208]
  437968:	mov	x2, #0x0                   	// #0
  43796c:	mov	w1, w20
  437970:	mov	x0, x24
  437974:	bl	439314 <nftw@plt+0x36794>
  437978:	cbz	w0, 4379fc <nftw@plt+0x34e7c>
  43797c:	ldr	x1, [sp, #136]
  437980:	ldr	x3, [sp, #208]
  437984:	add	x3, x1, x3
  437988:	cmp	x1, x3
  43798c:	b.cs	437a2c <nftw@plt+0x34eac>  // b.hs, b.nlast
  437990:	mov	w19, #0xffffffff            	// #-1
  437994:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437998:	add	x2, x2, #0x420
  43799c:	add	x2, x2, #0x4e0
  4379a0:	ldrb	w0, [x1], #1
  4379a4:	eor	w0, w0, w19
  4379a8:	and	x0, x0, #0xff
  4379ac:	ldr	w0, [x2, x0, lsl #2]
  4379b0:	eor	w19, w0, w19, lsr #8
  4379b4:	cmp	x3, x1
  4379b8:	b.ne	4379a0 <nftw@plt+0x34e20>  // b.any
  4379bc:	mov	x3, x23
  4379c0:	mov	x2, x22
  4379c4:	add	x1, sp, #0x88
  4379c8:	mov	x0, x24
  4379cc:	bl	4393d8 <nftw@plt+0x36858>
  4379d0:	mvn	w19, w19
  4379d4:	ldr	w0, [sp, #108]
  4379d8:	cmp	w0, w19
  4379dc:	b.eq	43772c <nftw@plt+0x34bac>  // b.none
  4379e0:	b	4379fc <nftw@plt+0x34e7c>
  4379e4:	bl	402aa0 <__errno_location@plt>
  4379e8:	ldr	w2, [x0]
  4379ec:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4379f0:	add	x1, x1, #0x1e8
  4379f4:	mov	x0, x23
  4379f8:	blr	x22
  4379fc:	mov	x2, x23
  437a00:	mov	x1, x22
  437a04:	mov	w0, w20
  437a08:	bl	436014 <nftw@plt+0x33494>
  437a0c:	mov	w20, #0xffffffff            	// #-1
  437a10:	b	43772c <nftw@plt+0x34bac>
  437a14:	cmp	x28, #0x0
  437a18:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  437a1c:	mov	w20, #0xffffffff            	// #-1
  437a20:	b.eq	43772c <nftw@plt+0x34bac>  // b.none
  437a24:	mov	w20, #0xffffffff            	// #-1
  437a28:	b	437920 <nftw@plt+0x34da0>
  437a2c:	mov	x3, x23
  437a30:	mov	x2, x22
  437a34:	add	x1, sp, #0x88
  437a38:	mov	x0, x24
  437a3c:	bl	4393d8 <nftw@plt+0x36858>
  437a40:	b	4379fc <nftw@plt+0x34e7c>
  437a44:	sub	sp, sp, #0x430
  437a48:	stp	x29, x30, [sp, #80]
  437a4c:	add	x29, sp, #0x50
  437a50:	stp	x19, x20, [sp, #96]
  437a54:	stp	x21, x22, [sp, #112]
  437a58:	stp	x23, x24, [sp, #128]
  437a5c:	stp	x25, x26, [sp, #144]
  437a60:	stp	x27, x28, [sp, #160]
  437a64:	mov	x21, x0
  437a68:	str	x1, [sp, #208]
  437a6c:	mov	w23, w2
  437a70:	str	x3, [sp, #184]
  437a74:	mov	x19, x4
  437a78:	mov	x20, x5
  437a7c:	str	x6, [sp, #192]
  437a80:	str	x7, [sp, #200]
  437a84:	ldr	w0, [sp, #1096]
  437a88:	cbnz	w0, 437a98 <nftw@plt+0x34f18>
  437a8c:	str	wzr, [x7]
  437a90:	ldr	x0, [sp, #1072]
  437a94:	str	wzr, [x0]
  437a98:	add	x6, sp, #0x418
  437a9c:	mov	x5, x20
  437aa0:	mov	x4, x19
  437aa4:	mov	x3, #0x40                  	// #64
  437aa8:	mov	x2, #0x0                   	// #0
  437aac:	mov	w1, w23
  437ab0:	mov	x0, x21
  437ab4:	bl	439314 <nftw@plt+0x36794>
  437ab8:	mov	w22, w0
  437abc:	mov	w26, w0
  437ac0:	cbnz	w0, 437b3c <nftw@plt+0x34fbc>
  437ac4:	mov	x24, #0x0                   	// #0
  437ac8:	mov	w27, #0x0                   	// #0
  437acc:	mov	w25, #0x0                   	// #0
  437ad0:	str	wzr, [sp, #180]
  437ad4:	mov	w28, #0x0                   	// #0
  437ad8:	cbnz	w28, 438bb0 <nftw@plt+0x36030>
  437adc:	cbnz	w22, 438bc8 <nftw@plt+0x36048>
  437ae0:	cbnz	w25, 438be0 <nftw@plt+0x36060>
  437ae4:	cbnz	w27, 438bf8 <nftw@plt+0x36078>
  437ae8:	ldr	w0, [sp, #180]
  437aec:	cbnz	w0, 438c10 <nftw@plt+0x36090>
  437af0:	cbnz	w26, 438c28 <nftw@plt+0x360a8>
  437af4:	cbz	x24, 437b0c <nftw@plt+0x34f8c>
  437af8:	mov	x3, x20
  437afc:	mov	x2, x19
  437b00:	add	x1, x24, #0x18
  437b04:	mov	x0, x21
  437b08:	bl	4393d8 <nftw@plt+0x36858>
  437b0c:	mov	w25, #0x0                   	// #0
  437b10:	cmn	w23, #0x1
  437b14:	b.ne	438c40 <nftw@plt+0x360c0>  // b.any
  437b18:	mov	w0, w25
  437b1c:	ldp	x19, x20, [sp, #96]
  437b20:	ldp	x21, x22, [sp, #112]
  437b24:	ldp	x23, x24, [sp, #128]
  437b28:	ldp	x25, x26, [sp, #144]
  437b2c:	ldp	x27, x28, [sp, #160]
  437b30:	ldp	x29, x30, [sp, #80]
  437b34:	add	sp, sp, #0x430
  437b38:	ret
  437b3c:	ldr	x0, [sp, #1048]
  437b40:	ldp	x2, x3, [x0]
  437b44:	add	x1, sp, #0x4d0
  437b48:	stp	x2, x3, [x1, #-248]
  437b4c:	ldp	x2, x3, [x0, #16]
  437b50:	stp	x2, x3, [x1, #-232]
  437b54:	ldp	x2, x3, [x0, #32]
  437b58:	stp	x2, x3, [x1, #-216]
  437b5c:	ldp	x2, x3, [x0, #48]
  437b60:	stp	x2, x3, [x1, #-200]
  437b64:	ldrb	w24, [x0, #4]
  437b68:	ldrb	w1, [x0, #5]
  437b6c:	str	w1, [sp, #272]
  437b70:	ldrb	w22, [x0, #6]
  437b74:	ldrh	w28, [x0, #16]
  437b78:	ldrh	w1, [x0, #18]
  437b7c:	str	w1, [sp, #216]
  437b80:	ldr	x25, [x0, #40]
  437b84:	ldr	w1, [x0, #48]
  437b88:	str	w1, [sp, #224]
  437b8c:	ldrh	w26, [x0, #60]
  437b90:	ldrh	w27, [x0, #62]
  437b94:	mov	x3, x20
  437b98:	mov	x2, x19
  437b9c:	add	x1, sp, #0x418
  437ba0:	mov	x0, x21
  437ba4:	bl	4393d8 <nftw@plt+0x36858>
  437ba8:	mov	w0, #0x457f                	// #17791
  437bac:	movk	w0, #0x464c, lsl #16
  437bb0:	ldr	w1, [sp, #984]
  437bb4:	cmp	w1, w0
  437bb8:	b.eq	437bdc <nftw@plt+0x3505c>  // b.none
  437bbc:	mov	w2, #0x0                   	// #0
  437bc0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437bc4:	add	x1, x1, #0x1f0
  437bc8:	mov	x0, x20
  437bcc:	blr	x19
  437bd0:	mov	w26, #0x0                   	// #0
  437bd4:	mov	w22, #0x0                   	// #0
  437bd8:	b	437ac4 <nftw@plt+0x34f44>
  437bdc:	cmp	w22, #0x1
  437be0:	b.eq	437c04 <nftw@plt+0x35084>  // b.none
  437be4:	mov	w2, #0x0                   	// #0
  437be8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437bec:	add	x1, x1, #0x210
  437bf0:	mov	x0, x20
  437bf4:	blr	x19
  437bf8:	mov	w26, #0x0                   	// #0
  437bfc:	mov	w22, #0x0                   	// #0
  437c00:	b	437ac4 <nftw@plt+0x34f44>
  437c04:	cmp	w24, #0x2
  437c08:	b.eq	437c2c <nftw@plt+0x350ac>  // b.none
  437c0c:	mov	w2, #0x0                   	// #0
  437c10:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437c14:	add	x1, x1, #0x240
  437c18:	mov	x0, x20
  437c1c:	blr	x19
  437c20:	mov	w26, #0x0                   	// #0
  437c24:	mov	w22, #0x0                   	// #0
  437c28:	b	437ac4 <nftw@plt+0x34f44>
  437c2c:	ldr	w0, [sp, #272]
  437c30:	sub	w0, w0, #0x1
  437c34:	and	w0, w0, #0xff
  437c38:	cmp	w0, #0x1
  437c3c:	b.hi	437d2c <nftw@plt+0x351ac>  // b.pmore
  437c40:	ldr	w0, [sp, #1088]
  437c44:	cmp	w0, #0x0
  437c48:	ccmp	w28, #0x3, #0x0, ne  // ne = any
  437c4c:	b.eq	438c54 <nftw@plt+0x360d4>  // b.none
  437c50:	str	w26, [sp, #232]
  437c54:	mov	w24, w27
  437c58:	cmp	w26, #0x0
  437c5c:	mov	w0, #0xffff                	// #65535
  437c60:	ccmp	w27, w0, #0x4, ne  // ne = any
  437c64:	ccmp	x25, #0x0, #0x4, eq  // eq = none
  437c68:	b.ne	437d4c <nftw@plt+0x351cc>  // b.any
  437c6c:	ldr	w27, [sp, #232]
  437c70:	sub	w3, w27, #0x1
  437c74:	add	x6, sp, #0x3c0
  437c78:	mov	x5, x20
  437c7c:	mov	x4, x19
  437c80:	lsl	x3, x3, #6
  437c84:	add	x2, x25, #0x40
  437c88:	mov	w1, w23
  437c8c:	mov	x0, x21
  437c90:	bl	439314 <nftw@plt+0x36794>
  437c94:	mov	w22, w0
  437c98:	mov	w26, w0
  437c9c:	cbz	w0, 437ac4 <nftw@plt+0x34f44>
  437ca0:	ldr	x22, [sp, #960]
  437ca4:	str	x22, [sp, #344]
  437ca8:	sub	w0, w24, #0x1
  437cac:	add	x0, x22, x0, lsl #6
  437cb0:	ldr	x1, [x0, #32]
  437cb4:	str	x1, [sp, #248]
  437cb8:	add	x6, sp, #0x3a8
  437cbc:	mov	x5, x20
  437cc0:	mov	x4, x19
  437cc4:	mov	x3, x1
  437cc8:	ldr	x2, [x0, #24]
  437ccc:	mov	w1, w23
  437cd0:	mov	x0, x21
  437cd4:	bl	439314 <nftw@plt+0x36794>
  437cd8:	mov	w26, w0
  437cdc:	cbnz	w0, 437dd0 <nftw@plt+0x35250>
  437ce0:	mov	w27, w0
  437ce4:	mov	w25, w0
  437ce8:	str	w0, [sp, #180]
  437cec:	mov	w22, w0
  437cf0:	mov	w28, w0
  437cf4:	mov	x24, #0x0                   	// #0
  437cf8:	mov	x3, x20
  437cfc:	mov	x2, x19
  437d00:	add	x1, sp, #0x3c0
  437d04:	mov	x0, x21
  437d08:	bl	4393d8 <nftw@plt+0x36858>
  437d0c:	cbz	w26, 437ad8 <nftw@plt+0x34f58>
  437d10:	mov	x3, x20
  437d14:	mov	x2, x19
  437d18:	add	x1, sp, #0x3a8
  437d1c:	mov	x0, x21
  437d20:	bl	4393d8 <nftw@plt+0x36858>
  437d24:	mov	w26, #0x0                   	// #0
  437d28:	b	437ad8 <nftw@plt+0x34f58>
  437d2c:	mov	w2, #0x0                   	// #0
  437d30:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437d34:	add	x1, x1, #0x268
  437d38:	mov	x0, x20
  437d3c:	blr	x19
  437d40:	mov	w26, #0x0                   	// #0
  437d44:	mov	w22, #0x0                   	// #0
  437d48:	b	437ac4 <nftw@plt+0x34f44>
  437d4c:	add	x6, sp, #0x188
  437d50:	mov	x5, x20
  437d54:	mov	x4, x19
  437d58:	mov	x3, #0x8                   	// #8
  437d5c:	mov	x2, x25
  437d60:	mov	w1, w23
  437d64:	mov	x0, x21
  437d68:	bl	439314 <nftw@plt+0x36794>
  437d6c:	mov	w22, w0
  437d70:	cbz	w0, 437da8 <nftw@plt+0x35228>
  437d74:	ldr	x0, [sp, #392]
  437d78:	cbnz	w26, 437db0 <nftw@plt+0x35230>
  437d7c:	ldr	w1, [x0, #32]
  437d80:	str	w1, [sp, #232]
  437d84:	mov	w1, #0xffff                	// #65535
  437d88:	cmp	w27, w1
  437d8c:	b.eq	437db0 <nftw@plt+0x35230>  // b.none
  437d90:	mov	x3, x20
  437d94:	mov	x2, x19
  437d98:	add	x1, sp, #0x188
  437d9c:	mov	x0, x21
  437da0:	bl	4393d8 <nftw@plt+0x36858>
  437da4:	b	437c6c <nftw@plt+0x350ec>
  437da8:	mov	w26, w0
  437dac:	b	437ac4 <nftw@plt+0x34f44>
  437db0:	ldr	w24, [x0, #40]
  437db4:	ldr	w0, [sp, #232]
  437db8:	cmp	w24, w0
  437dbc:	sub	w0, w24, #0x100
  437dc0:	mov	w1, #0xffff                	// #65535
  437dc4:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
  437dc8:	csel	w24, w0, w24, hi  // hi = pmore
  437dcc:	b	437d90 <nftw@plt+0x35210>
  437dd0:	ldr	x0, [sp, #936]
  437dd4:	str	x0, [sp, #256]
  437dd8:	mov	x2, #0x140                 	// #320
  437ddc:	mov	w1, #0x0                   	// #0
  437de0:	add	x0, sp, #0x268
  437de4:	bl	4026f0 <memset@plt>
  437de8:	cmp	w27, #0x1
  437dec:	b.ls	4384a8 <nftw@plt+0x35928>  // b.plast
  437df0:	mov	x26, x22
  437df4:	mov	x24, #0x0                   	// #0
  437df8:	str	wzr, [sp, #360]
  437dfc:	str	xzr, [sp, #328]
  437e00:	str	xzr, [sp, #304]
  437e04:	mov	w27, #0x0                   	// #0
  437e08:	str	wzr, [sp, #324]
  437e0c:	str	xzr, [sp, #312]
  437e10:	mov	w25, #0x0                   	// #0
  437e14:	str	wzr, [sp, #364]
  437e18:	str	xzr, [sp, #352]
  437e1c:	str	wzr, [sp, #180]
  437e20:	mov	w22, #0x1                   	// #1
  437e24:	str	wzr, [sp, #240]
  437e28:	str	wzr, [sp, #320]
  437e2c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x409fc>
  437e30:	add	x1, x0, #0xda0
  437e34:	add	x0, sp, #0x268
  437e38:	str	x0, [sp, #296]
  437e3c:	add	x0, sp, #0x1a8
  437e40:	str	x0, [sp, #368]
  437e44:	add	x0, sp, #0x1c0
  437e48:	str	x0, [sp, #376]
  437e4c:	str	x24, [sp, #336]
  437e50:	str	x21, [sp, #264]
  437e54:	str	w23, [sp, #276]
  437e58:	str	x19, [sp, #280]
  437e5c:	str	x20, [sp, #288]
  437e60:	ldr	w28, [sp, #1096]
  437e64:	mov	x23, x1
  437e68:	b	438034 <nftw@plt+0x354b4>
  437e6c:	str	w22, [sp, #320]
  437e70:	b	438054 <nftw@plt+0x354d4>
  437e74:	ldr	x24, [sp, #336]
  437e78:	ldr	x21, [sp, #264]
  437e7c:	ldr	w23, [sp, #276]
  437e80:	ldr	x19, [sp, #280]
  437e84:	ldr	x20, [sp, #288]
  437e88:	mov	w2, #0x0                   	// #0
  437e8c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437e90:	add	x1, x1, #0x290
  437e94:	mov	x0, x20
  437e98:	blr	x19
  437e9c:	mov	w22, #0x0                   	// #0
  437ea0:	mov	w28, #0x0                   	// #0
  437ea4:	mov	w26, #0x1                   	// #1
  437ea8:	b	437cf8 <nftw@plt+0x35178>
  437eac:	sbfiz	x21, x19, #5, #32
  437eb0:	ldr	x0, [x24, #24]
  437eb4:	ldr	x1, [sp, #296]
  437eb8:	str	x0, [x1, x21]
  437ebc:	ldr	x1, [x24, #32]
  437ec0:	add	x0, sp, #0x270
  437ec4:	str	x1, [x0, x21]
  437ec8:	ldr	x0, [x24, #8]
  437ecc:	ubfx	w0, w0, #11, #1
  437ed0:	add	x1, sp, #0x280
  437ed4:	str	w0, [x1, x21]
  437ed8:	b	43808c <nftw@plt+0x3550c>
  437edc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437ee0:	add	x1, x1, #0x2b0
  437ee4:	mov	x0, x20
  437ee8:	bl	402890 <strcmp@plt>
  437eec:	mov	w19, w0
  437ef0:	str	wzr, [sp, #180]
  437ef4:	cbnz	w0, 4380a4 <nftw@plt+0x35524>
  437ef8:	add	x6, sp, #0x220
  437efc:	ldr	x5, [sp, #288]
  437f00:	ldr	x4, [sp, #280]
  437f04:	ldr	x3, [x24, #32]
  437f08:	ldr	x2, [x24, #24]
  437f0c:	ldr	w1, [sp, #276]
  437f10:	ldr	x0, [sp, #264]
  437f14:	bl	439314 <nftw@plt+0x36794>
  437f18:	cbz	w0, 438c7c <nftw@plt+0x360fc>
  437f1c:	ldr	x21, [sp, #544]
  437f20:	ldr	w0, [x21, #8]
  437f24:	cmp	w0, #0x3
  437f28:	b.eq	437f64 <nftw@plt+0x353e4>  // b.none
  437f2c:	ldr	w0, [sp, #1112]
  437f30:	cbz	w0, 437fa8 <nftw@plt+0x35428>
  437f34:	ldr	w0, [sp, #364]
  437f38:	ldr	w1, [sp, #1112]
  437f3c:	cmp	w0, w1
  437f40:	b.ne	438ca4 <nftw@plt+0x36124>  // b.any
  437f44:	mov	w2, w0
  437f48:	ldr	x1, [sp, #1104]
  437f4c:	ldr	x0, [sp, #352]
  437f50:	bl	402850 <memcmp@plt>
  437f54:	cbnz	w0, 438cd0 <nftw@plt+0x36150>
  437f58:	mov	w0, #0x1                   	// #1
  437f5c:	str	w0, [sp, #180]
  437f60:	b	4380a4 <nftw@plt+0x35524>
  437f64:	ldr	w0, [x21]
  437f68:	cmp	w0, #0x4
  437f6c:	b.ne	437f2c <nftw@plt+0x353ac>  // b.any
  437f70:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  437f74:	add	x1, x1, #0x2c8
  437f78:	add	x0, x21, #0xc
  437f7c:	bl	402890 <strcmp@plt>
  437f80:	cbnz	w0, 437f2c <nftw@plt+0x353ac>
  437f84:	ldr	w0, [x21, #4]
  437f88:	add	w1, w0, #0x10
  437f8c:	ldr	x2, [x24, #32]
  437f90:	cmp	x2, x1
  437f94:	b.hi	437f2c <nftw@plt+0x353ac>  // b.pmore
  437f98:	add	x1, x21, #0x10
  437f9c:	str	x1, [sp, #352]
  437fa0:	str	w0, [sp, #364]
  437fa4:	b	437f2c <nftw@plt+0x353ac>
  437fa8:	mov	w0, #0x1                   	// #1
  437fac:	str	w0, [sp, #180]
  437fb0:	b	4380a4 <nftw@plt+0x35524>
  437fb4:	add	x6, sp, #0x208
  437fb8:	ldr	x5, [sp, #288]
  437fbc:	ldr	x4, [sp, #280]
  437fc0:	ldr	x3, [x24, #32]
  437fc4:	ldr	x2, [x24, #24]
  437fc8:	ldr	w1, [sp, #276]
  437fcc:	ldr	x0, [sp, #264]
  437fd0:	bl	439314 <nftw@plt+0x36794>
  437fd4:	cbz	w0, 438cfc <nftw@plt+0x3617c>
  437fd8:	ldr	x19, [sp, #520]
  437fdc:	ldr	x21, [x24, #32]
  437fe0:	mov	x1, x21
  437fe4:	mov	x0, x19
  437fe8:	bl	402540 <strnlen@plt>
  437fec:	add	x0, x0, #0x3
  437ff0:	and	x0, x0, #0xfffffffffffffffc
  437ff4:	add	x1, x0, #0x4
  437ff8:	mov	w25, #0x1                   	// #1
  437ffc:	cmp	x21, x1
  438000:	b.cc	4380c4 <nftw@plt+0x35544>  // b.lo, b.ul, b.last
  438004:	ldr	w0, [x19, x0]
  438008:	str	w0, [sp, #324]
  43800c:	str	x19, [sp, #312]
  438010:	b	4380c4 <nftw@plt+0x35544>
  438014:	ldr	w0, [sp, #216]
  438018:	cmp	w0, #0x15
  43801c:	b.eq	43813c <nftw@plt+0x355bc>  // b.none
  438020:	add	w22, w22, #0x1
  438024:	add	x26, x26, #0x40
  438028:	ldr	w0, [sp, #232]
  43802c:	cmp	w0, w22
  438030:	b.eq	4381ac <nftw@plt+0x3562c>  // b.none
  438034:	mov	x24, x26
  438038:	ldr	w0, [x26, #4]
  43803c:	cmp	w0, #0x2
  438040:	b.eq	437e6c <nftw@plt+0x352ec>  // b.none
  438044:	cmp	w0, #0xb
  438048:	ldr	w0, [sp, #240]
  43804c:	csel	w0, w0, w22, ne  // ne = any
  438050:	str	w0, [sp, #240]
  438054:	ldr	w20, [x24]
  438058:	ldr	x0, [sp, #248]
  43805c:	cmp	x20, x0
  438060:	b.cs	437e74 <nftw@plt+0x352f4>  // b.hs, b.nlast
  438064:	ldr	x0, [sp, #256]
  438068:	add	x20, x0, x20
  43806c:	mov	x19, #0x0                   	// #0
  438070:	ldr	x1, [x23, x19, lsl #3]
  438074:	mov	x0, x20
  438078:	bl	402890 <strcmp@plt>
  43807c:	cbz	w0, 437eac <nftw@plt+0x3532c>
  438080:	add	x19, x19, #0x1
  438084:	cmp	x19, #0xa
  438088:	b.ne	438070 <nftw@plt+0x354f0>  // b.any
  43808c:	cmp	w28, #0x0
  438090:	ldr	x0, [sp, #1104]
  438094:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  438098:	ldr	w0, [sp, #180]
  43809c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4380a0:	b.eq	437edc <nftw@plt+0x3535c>  // b.none
  4380a4:	orr	w19, w28, w25
  4380a8:	cbnz	w19, 4380c4 <nftw@plt+0x35544>
  4380ac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4380b0:	add	x1, x1, #0x2d0
  4380b4:	mov	x0, x20
  4380b8:	bl	402890 <strcmp@plt>
  4380bc:	mov	w25, w19
  4380c0:	cbz	w0, 437fb4 <nftw@plt+0x35434>
  4380c4:	cbnz	w27, 438014 <nftw@plt+0x35494>
  4380c8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4380cc:	add	x1, x1, #0x2e0
  4380d0:	mov	x0, x20
  4380d4:	bl	402890 <strcmp@plt>
  4380d8:	cbnz	w0, 438014 <nftw@plt+0x35494>
  4380dc:	add	x6, sp, #0x1f0
  4380e0:	ldr	x5, [sp, #288]
  4380e4:	ldr	x4, [sp, #280]
  4380e8:	ldr	x3, [x24, #32]
  4380ec:	ldr	x2, [x24, #24]
  4380f0:	ldr	w1, [sp, #276]
  4380f4:	ldr	x0, [sp, #264]
  4380f8:	bl	439314 <nftw@plt+0x36794>
  4380fc:	cbz	w0, 438d24 <nftw@plt+0x361a4>
  438100:	ldr	x21, [sp, #496]
  438104:	str	x21, [sp, #304]
  438108:	ldr	x19, [x24, #32]
  43810c:	mov	x1, x19
  438110:	mov	x0, x21
  438114:	bl	402540 <strnlen@plt>
  438118:	mov	w27, #0x1                   	// #1
  43811c:	cmp	x19, x0
  438120:	b.ls	438014 <nftw@plt+0x35494>  // b.plast
  438124:	add	x0, x0, #0x1
  438128:	add	x1, x21, x0
  43812c:	str	x1, [sp, #328]
  438130:	sub	w0, w19, w0
  438134:	str	w0, [sp, #360]
  438138:	b	438014 <nftw@plt+0x35494>
  43813c:	ldr	x0, [sp, #224]
  438140:	tbnz	w0, #1, 438020 <nftw@plt+0x354a0>
  438144:	ldr	w0, [x24, #4]
  438148:	cmp	w0, #0x1
  43814c:	b.ne	438020 <nftw@plt+0x354a0>  // b.any
  438150:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  438154:	add	x1, x1, #0x2f8
  438158:	mov	x0, x20
  43815c:	bl	402890 <strcmp@plt>
  438160:	cbnz	w0, 438020 <nftw@plt+0x354a0>
  438164:	ldr	x6, [sp, #376]
  438168:	ldr	x5, [sp, #288]
  43816c:	ldr	x4, [sp, #280]
  438170:	ldr	x3, [x24, #32]
  438174:	ldr	x2, [x24, #24]
  438178:	ldr	w1, [sp, #276]
  43817c:	ldr	x0, [sp, #264]
  438180:	bl	439314 <nftw@plt+0x36794>
  438184:	cbz	w0, 438d4c <nftw@plt+0x361cc>
  438188:	ldr	x0, [x24, #16]
  43818c:	str	x0, [sp, #424]
  438190:	ldr	x0, [sp, #448]
  438194:	str	x0, [sp, #432]
  438198:	ldr	x0, [x24, #32]
  43819c:	str	x0, [sp, #440]
  4381a0:	ldr	x0, [sp, #368]
  4381a4:	str	x0, [sp, #336]
  4381a8:	b	438020 <nftw@plt+0x354a0>
  4381ac:	ldr	x24, [sp, #336]
  4381b0:	ldr	x21, [sp, #264]
  4381b4:	ldr	w23, [sp, #276]
  4381b8:	ldr	x19, [sp, #280]
  4381bc:	ldr	x20, [sp, #288]
  4381c0:	ldr	w0, [sp, #320]
  4381c4:	cmp	w0, #0x0
  4381c8:	ldr	w1, [sp, #240]
  4381cc:	csel	w0, w0, w1, ne  // ne = any
  4381d0:	cmp	w0, #0x0
  4381d4:	ldr	w1, [sp, #1096]
  4381d8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  4381dc:	b.ne	4384dc <nftw@plt+0x3595c>  // b.any
  4381e0:	sub	w26, w0, #0x1
  4381e4:	ldr	x0, [sp, #344]
  4381e8:	add	x26, x0, x26, lsl #6
  4381ec:	ldr	w22, [x26, #40]
  4381f0:	ldr	w0, [sp, #232]
  4381f4:	cmp	w0, w22
  4381f8:	b.hi	438220 <nftw@plt+0x356a0>  // b.pmore
  4381fc:	mov	w2, #0x0                   	// #0
  438200:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  438204:	add	x1, x1, #0x300
  438208:	mov	x0, x20
  43820c:	blr	x19
  438210:	mov	w22, #0x0                   	// #0
  438214:	mov	w28, #0x0                   	// #0
  438218:	mov	w26, #0x1                   	// #1
  43821c:	b	437cf8 <nftw@plt+0x35178>
  438220:	add	x6, sp, #0x250
  438224:	mov	x5, x20
  438228:	mov	x4, x19
  43822c:	ldr	x3, [x26, #32]
  438230:	ldr	x2, [x26, #24]
  438234:	mov	w1, w23
  438238:	mov	x0, x21
  43823c:	bl	439314 <nftw@plt+0x36794>
  438240:	mov	w28, w0
  438244:	cbnz	w0, 438254 <nftw@plt+0x356d4>
  438248:	mov	w22, w0
  43824c:	mov	w26, #0x1                   	// #1
  438250:	b	437cf8 <nftw@plt+0x35178>
  438254:	sub	w22, w22, #0x1
  438258:	ldr	x0, [sp, #344]
  43825c:	add	x0, x0, x22, lsl #6
  438260:	add	x6, sp, #0x238
  438264:	mov	x5, x20
  438268:	mov	x4, x19
  43826c:	ldr	x3, [x0, #32]
  438270:	str	x0, [sp, #216]
  438274:	ldr	x2, [x0, #24]
  438278:	mov	w1, w23
  43827c:	mov	x0, x21
  438280:	bl	439314 <nftw@plt+0x36794>
  438284:	mov	w22, w0
  438288:	cbnz	w0, 438298 <nftw@plt+0x35718>
  43828c:	mov	w28, #0x1                   	// #1
  438290:	mov	w26, w28
  438294:	b	437cf8 <nftw@plt+0x35178>
  438298:	mov	x3, x20
  43829c:	mov	x2, x19
  4382a0:	mov	x1, #0x18                  	// #24
  4382a4:	mov	x0, x21
  4382a8:	bl	435960 <nftw@plt+0x32de0>
  4382ac:	mov	x28, x0
  4382b0:	cbz	x0, 438d70 <nftw@plt+0x361f0>
  4382b4:	ldr	x22, [sp, #592]
  4382b8:	ldr	x0, [x26, #32]
  4382bc:	ldr	x2, [sp, #568]
  4382c0:	str	x2, [sp, #232]
  4382c4:	ldr	x1, [sp, #216]
  4382c8:	ldr	x1, [x1, #32]
  4382cc:	str	x1, [sp, #240]
  4382d0:	mov	x1, #0x18                  	// #24
  4382d4:	udiv	x1, x0, x1
  4382d8:	str	x1, [sp, #216]
  4382dc:	cmp	x0, #0x17
  4382e0:	b.ls	438e34 <nftw@plt+0x362b4>  // b.plast
  4382e4:	mov	x1, x22
  4382e8:	mov	x2, #0x0                   	// #0
  4382ec:	mov	x3, #0x0                   	// #0
  4382f0:	b	438308 <nftw@plt+0x35788>
  4382f4:	add	x2, x2, #0x1
  4382f8:	add	x1, x1, #0x18
  4382fc:	ldr	x0, [sp, #216]
  438300:	cmp	x0, x2
  438304:	b.ls	43832c <nftw@plt+0x357ac>  // b.plast
  438308:	ldrb	w0, [x1, #4]
  43830c:	and	w0, w0, #0xf
  438310:	sub	w0, w0, #0x1
  438314:	cmp	w0, #0x1
  438318:	b.hi	4382f4 <nftw@plt+0x35774>  // b.pmore
  43831c:	ldrh	w0, [x1, #6]
  438320:	cbz	w0, 4382f4 <nftw@plt+0x35774>
  438324:	add	x3, x3, #0x1
  438328:	b	4382f4 <nftw@plt+0x35774>
  43832c:	str	x3, [sp, #224]
  438330:	mov	x0, #0x18                  	// #24
  438334:	mul	x0, x3, x0
  438338:	str	x0, [sp, #248]
  43833c:	mov	x3, x20
  438340:	mov	x2, x19
  438344:	mov	x1, x0
  438348:	mov	x0, x21
  43834c:	bl	435960 <nftw@plt+0x32de0>
  438350:	mov	x26, x0
  438354:	cbz	x0, 438394 <nftw@plt+0x35814>
  438358:	mov	x1, #0x0                   	// #0
  43835c:	mov	w2, #0x0                   	// #0
  438360:	ldr	x6, [sp, #216]
  438364:	b	4383e8 <nftw@plt+0x35868>
  438368:	mov	w2, #0x0                   	// #0
  43836c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  438370:	add	x1, x1, #0x330
  438374:	mov	x0, x20
  438378:	blr	x19
  43837c:	mov	x4, x20
  438380:	mov	x3, x19
  438384:	ldr	x2, [sp, #248]
  438388:	mov	x1, x26
  43838c:	mov	x0, x21
  438390:	bl	4358b4 <nftw@plt+0x32d34>
  438394:	mov	x4, x20
  438398:	mov	x3, x19
  43839c:	mov	x2, #0x18                  	// #24
  4383a0:	mov	x1, x28
  4383a4:	mov	x0, x21
  4383a8:	bl	4358b4 <nftw@plt+0x32d34>
  4383ac:	mov	w22, #0x1                   	// #1
  4383b0:	mov	w28, w22
  4383b4:	mov	w26, w22
  4383b8:	b	437cf8 <nftw@plt+0x35178>
  4383bc:	ldr	x0, [x22, #8]
  4383c0:	ldr	x3, [sp, #184]
  4383c4:	add	x0, x3, x0
  4383c8:	str	x0, [x5, #8]
  4383cc:	ldr	x0, [x22, #16]
  4383d0:	str	x0, [x5, #16]
  4383d4:	add	w2, w2, #0x1
  4383d8:	add	x1, x1, #0x1
  4383dc:	add	x22, x22, #0x18
  4383e0:	cmp	x6, x1
  4383e4:	b.ls	438e54 <nftw@plt+0x362d4>  // b.plast
  4383e8:	ldrb	w0, [x22, #4]
  4383ec:	and	w0, w0, #0xf
  4383f0:	sub	w0, w0, #0x1
  4383f4:	cmp	w0, #0x1
  4383f8:	b.hi	4383d8 <nftw@plt+0x35858>  // b.pmore
  4383fc:	ldrh	w0, [x22, #6]
  438400:	cbz	w0, 4383d8 <nftw@plt+0x35858>
  438404:	ldr	w3, [x22]
  438408:	ldr	x0, [sp, #240]
  43840c:	cmp	x0, x3
  438410:	b.ls	438368 <nftw@plt+0x357e8>  // b.plast
  438414:	ubfiz	x0, x2, #1, #32
  438418:	add	x0, x0, w2, uxtw
  43841c:	add	x5, x26, x0, lsl #3
  438420:	ldr	x4, [sp, #232]
  438424:	add	x3, x4, x3
  438428:	str	x3, [x26, x0, lsl #3]
  43842c:	cbz	x24, 4383bc <nftw@plt+0x3583c>
  438430:	ldr	x0, [x22, #8]
  438434:	ldr	x3, [x24]
  438438:	cmp	x0, x3
  43843c:	b.cc	4383bc <nftw@plt+0x3583c>  // b.lo, b.ul, b.last
  438440:	ldr	x4, [x24, #16]
  438444:	add	x4, x3, x4
  438448:	cmp	x0, x4
  43844c:	b.cs	4383bc <nftw@plt+0x3583c>  // b.hs, b.nlast
  438450:	sub	x0, x0, x3
  438454:	ldr	x3, [x24, #8]
  438458:	ldr	x0, [x3, x0]
  43845c:	b	4383c0 <nftw@plt+0x35840>
  438460:	add	x1, x21, #0x30
  438464:	ldr	x0, [x21, #48]
  438468:	b	438474 <nftw@plt+0x358f4>
  43846c:	mov	x1, x0
  438470:	ldr	x0, [x0]
  438474:	cbnz	x0, 43846c <nftw@plt+0x358ec>
  438478:	str	x28, [x1]
  43847c:	mov	w22, #0x1                   	// #1
  438480:	b	4384e0 <nftw@plt+0x35960>
  438484:	ldxr	x1, [x0]
  438488:	cbnz	x1, 438494 <nftw@plt+0x35914>
  43848c:	stlxr	w3, x28, [x0]
  438490:	cbnz	w3, 438484 <nftw@plt+0x35904>
  438494:	cmp	x1, #0x0
  438498:	dmb	ish
  43849c:	b.ne	438ea8 <nftw@plt+0x36328>  // b.any
  4384a0:	mov	w22, #0x1                   	// #1
  4384a4:	b	4384e0 <nftw@plt+0x35960>
  4384a8:	mov	x24, #0x0                   	// #0
  4384ac:	str	wzr, [sp, #360]
  4384b0:	str	xzr, [sp, #328]
  4384b4:	str	xzr, [sp, #304]
  4384b8:	mov	w27, #0x0                   	// #0
  4384bc:	str	wzr, [sp, #324]
  4384c0:	str	xzr, [sp, #312]
  4384c4:	mov	w25, #0x0                   	// #0
  4384c8:	str	wzr, [sp, #364]
  4384cc:	str	xzr, [sp, #352]
  4384d0:	str	wzr, [sp, #180]
  4384d4:	mov	w22, #0x0                   	// #0
  4384d8:	b	4384e0 <nftw@plt+0x35960>
  4384dc:	mov	w22, #0x0                   	// #0
  4384e0:	mov	x3, x20
  4384e4:	mov	x2, x19
  4384e8:	add	x1, sp, #0x3c0
  4384ec:	mov	x0, x21
  4384f0:	bl	4393d8 <nftw@plt+0x36858>
  4384f4:	mov	x3, x20
  4384f8:	mov	x2, x19
  4384fc:	add	x1, sp, #0x3a8
  438500:	mov	x0, x21
  438504:	bl	4393d8 <nftw@plt+0x36858>
  438508:	ldr	x0, [sp, #352]
  43850c:	cbz	x0, 438618 <nftw@plt+0x35a98>
  438510:	ldr	w1, [sp, #364]
  438514:	mov	w28, w1
  438518:	ubfiz	x0, x1, #1, #32
  43851c:	add	x1, x0, #0x21
  438520:	str	x1, [sp, #216]
  438524:	mov	x3, x20
  438528:	mov	x2, x19
  43852c:	mov	x0, x21
  438530:	bl	435960 <nftw@plt+0x32de0>
  438534:	mov	x26, x0
  438538:	cbz	x0, 438618 <nftw@plt+0x35a98>
  43853c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  438540:	add	x0, x0, #0x358
  438544:	ldp	x2, x3, [x0]
  438548:	stp	x2, x3, [x26]
  43854c:	ldr	x1, [x0, #16]
  438550:	str	x1, [x26, #16]
  438554:	ldrb	w0, [x0, #24]
  438558:	strb	w0, [x26, #24]
  43855c:	add	x1, x26, #0x19
  438560:	cbz	x28, 4385c8 <nftw@plt+0x35a48>
  438564:	mov	x2, #0x0                   	// #0
  438568:	mov	w6, #0x2f                  	// #47
  43856c:	ldr	x7, [sp, #352]
  438570:	b	438588 <nftw@plt+0x35a08>
  438574:	strb	w6, [x1, #2]
  438578:	add	x1, x1, #0x3
  43857c:	add	x2, x2, #0x1
  438580:	cmp	x28, x2
  438584:	b.eq	4385c8 <nftw@plt+0x35a48>  // b.none
  438588:	ldrb	w0, [x7, x2]
  43858c:	lsr	w4, w0, #4
  438590:	add	w5, w4, #0x30
  438594:	add	w3, w4, #0x57
  438598:	cmp	w4, #0x9
  43859c:	csel	w3, w3, w5, hi  // hi = pmore
  4385a0:	strb	w3, [x1]
  4385a4:	and	w0, w0, #0xf
  4385a8:	add	w4, w0, #0x30
  4385ac:	add	w3, w0, #0x57
  4385b0:	cmp	w0, #0x9
  4385b4:	csel	w0, w3, w4, hi  // hi = pmore
  4385b8:	strb	w0, [x1, #1]
  4385bc:	cbz	x2, 438574 <nftw@plt+0x359f4>
  4385c0:	add	x1, x1, #0x2
  4385c4:	b	43857c <nftw@plt+0x359fc>
  4385c8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4385cc:	add	x0, x0, #0x378
  4385d0:	ldr	w2, [x0]
  4385d4:	str	w2, [x1]
  4385d8:	ldrh	w0, [x0, #4]
  4385dc:	strh	w0, [x1, #4]
  4385e0:	strb	wzr, [x1, #6]
  4385e4:	add	x3, sp, #0x188
  4385e8:	mov	x2, x20
  4385ec:	mov	x1, x19
  4385f0:	mov	x0, x26
  4385f4:	bl	435f60 <nftw@plt+0x333e0>
  4385f8:	mov	w28, w0
  4385fc:	mov	x4, x20
  438600:	mov	x3, x19
  438604:	ldr	x2, [sp, #216]
  438608:	mov	x1, x26
  43860c:	mov	x0, x21
  438610:	bl	4358b4 <nftw@plt+0x32d34>
  438614:	tbz	w28, #31, 4386b8 <nftw@plt+0x35b38>
  438618:	ldr	w0, [sp, #180]
  43861c:	cbnz	w0, 43877c <nftw@plt+0x35bfc>
  438620:	cbz	x24, 438638 <nftw@plt+0x35ab8>
  438624:	mov	x3, x20
  438628:	mov	x2, x19
  43862c:	add	x1, x24, #0x18
  438630:	mov	x0, x21
  438634:	bl	4393d8 <nftw@plt+0x36858>
  438638:	ldr	x0, [sp, #312]
  43863c:	cbz	x0, 438664 <nftw@plt+0x35ae4>
  438640:	mov	x5, x20
  438644:	mov	x4, x19
  438648:	ldr	w3, [sp, #324]
  43864c:	mov	x2, x0
  438650:	ldr	x1, [sp, #208]
  438654:	mov	x0, x21
  438658:	bl	437670 <nftw@plt+0x34af0>
  43865c:	mov	w24, w0
  438660:	tbz	w0, #31, 438794 <nftw@plt+0x35c14>
  438664:	cbnz	w25, 43883c <nftw@plt+0x35cbc>
  438668:	str	xzr, [sp, #416]
  43866c:	ldr	x0, [sp, #304]
  438670:	cbz	x0, 43869c <nftw@plt+0x35b1c>
  438674:	mov	x5, x20
  438678:	mov	x4, x19
  43867c:	mov	w3, #0x0                   	// #0
  438680:	mov	x2, x0
  438684:	ldr	x25, [sp, #208]
  438688:	mov	x1, x25
  43868c:	mov	x0, x21
  438690:	bl	437670 <nftw@plt+0x34af0>
  438694:	mov	w24, w0
  438698:	tbz	w0, #31, 438854 <nftw@plt+0x35cd4>
  43869c:	cbnz	w27, 4388d4 <nftw@plt+0x35d54>
  4386a0:	add	x24, sp, #0x268
  4386a4:	add	x4, x24, #0x140
  4386a8:	mov	x0, x24
  4386ac:	mov	x3, #0x0                   	// #0
  4386b0:	mov	x27, #0x0                   	// #0
  4386b4:	b	43890c <nftw@plt+0x35d8c>
  4386b8:	mov	x3, x20
  4386bc:	mov	x2, x19
  4386c0:	add	x1, sp, #0x220
  4386c4:	mov	x0, x21
  4386c8:	bl	4393d8 <nftw@plt+0x36858>
  4386cc:	cbnz	w25, 438738 <nftw@plt+0x35bb8>
  4386d0:	cbnz	w27, 438750 <nftw@plt+0x35bd0>
  4386d4:	str	wzr, [sp, #40]
  4386d8:	str	xzr, [sp, #32]
  4386dc:	mov	w0, #0x1                   	// #1
  4386e0:	str	w0, [sp, #24]
  4386e4:	str	wzr, [sp, #16]
  4386e8:	str	xzr, [sp, #8]
  4386ec:	ldr	x0, [sp, #1072]
  4386f0:	str	x0, [sp]
  4386f4:	ldr	x7, [sp, #200]
  4386f8:	ldr	x6, [sp, #192]
  4386fc:	mov	x5, x20
  438700:	mov	x4, x19
  438704:	ldr	x3, [sp, #184]
  438708:	mov	w2, w28
  43870c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  438710:	add	x1, x1, #0x780
  438714:	mov	x0, x21
  438718:	bl	437a44 <nftw@plt+0x34ec4>
  43871c:	mov	w25, w0
  438720:	tbnz	w0, #31, 438768 <nftw@plt+0x35be8>
  438724:	mov	x2, x20
  438728:	mov	x1, x19
  43872c:	mov	w0, w23
  438730:	bl	436014 <nftw@plt+0x33494>
  438734:	b	437b18 <nftw@plt+0x34f98>
  438738:	mov	x3, x20
  43873c:	mov	x2, x19
  438740:	add	x1, sp, #0x208
  438744:	mov	x0, x21
  438748:	bl	4393d8 <nftw@plt+0x36858>
  43874c:	b	4386d0 <nftw@plt+0x35b50>
  438750:	mov	x3, x20
  438754:	mov	x2, x19
  438758:	add	x1, sp, #0x1f0
  43875c:	mov	x0, x21
  438760:	bl	4393d8 <nftw@plt+0x36858>
  438764:	b	4386d4 <nftw@plt+0x35b54>
  438768:	mov	x2, x20
  43876c:	mov	x1, x19
  438770:	mov	w0, w28
  438774:	bl	436014 <nftw@plt+0x33494>
  438778:	b	437b18 <nftw@plt+0x34f98>
  43877c:	mov	x3, x20
  438780:	mov	x2, x19
  438784:	add	x1, sp, #0x220
  438788:	mov	x0, x21
  43878c:	bl	4393d8 <nftw@plt+0x36858>
  438790:	b	438620 <nftw@plt+0x35aa0>
  438794:	mov	x3, x20
  438798:	mov	x2, x19
  43879c:	add	x1, sp, #0x208
  4387a0:	mov	x0, x21
  4387a4:	bl	4393d8 <nftw@plt+0x36858>
  4387a8:	cbnz	w27, 438810 <nftw@plt+0x35c90>
  4387ac:	str	wzr, [sp, #40]
  4387b0:	str	xzr, [sp, #32]
  4387b4:	mov	w0, #0x1                   	// #1
  4387b8:	str	w0, [sp, #24]
  4387bc:	str	wzr, [sp, #16]
  4387c0:	str	xzr, [sp, #8]
  4387c4:	ldr	x0, [sp, #1072]
  4387c8:	str	x0, [sp]
  4387cc:	ldr	x7, [sp, #200]
  4387d0:	ldr	x6, [sp, #192]
  4387d4:	mov	x5, x20
  4387d8:	mov	x4, x19
  4387dc:	ldr	x3, [sp, #184]
  4387e0:	mov	w2, w24
  4387e4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  4387e8:	add	x1, x1, #0x780
  4387ec:	mov	x0, x21
  4387f0:	bl	437a44 <nftw@plt+0x34ec4>
  4387f4:	mov	w25, w0
  4387f8:	tbnz	w0, #31, 438828 <nftw@plt+0x35ca8>
  4387fc:	mov	x2, x20
  438800:	mov	x1, x19
  438804:	mov	w0, w23
  438808:	bl	436014 <nftw@plt+0x33494>
  43880c:	b	437b18 <nftw@plt+0x34f98>
  438810:	mov	x3, x20
  438814:	mov	x2, x19
  438818:	add	x1, sp, #0x1f0
  43881c:	mov	x0, x21
  438820:	bl	4393d8 <nftw@plt+0x36858>
  438824:	b	4387ac <nftw@plt+0x35c2c>
  438828:	mov	x2, x20
  43882c:	mov	x1, x19
  438830:	mov	w0, w24
  438834:	bl	436014 <nftw@plt+0x33494>
  438838:	b	437b18 <nftw@plt+0x34f98>
  43883c:	mov	x3, x20
  438840:	mov	x2, x19
  438844:	add	x1, sp, #0x208
  438848:	mov	x0, x21
  43884c:	bl	4393d8 <nftw@plt+0x36858>
  438850:	b	438668 <nftw@plt+0x35ae8>
  438854:	ldr	w0, [sp, #360]
  438858:	str	w0, [sp, #40]
  43885c:	ldr	x0, [sp, #328]
  438860:	str	x0, [sp, #32]
  438864:	mov	w0, #0x1                   	// #1
  438868:	str	w0, [sp, #24]
  43886c:	str	wzr, [sp, #16]
  438870:	add	x0, sp, #0x1a0
  438874:	str	x0, [sp, #8]
  438878:	ldr	x0, [sp, #1072]
  43887c:	str	x0, [sp]
  438880:	ldr	x7, [sp, #200]
  438884:	ldr	x6, [sp, #192]
  438888:	mov	x5, x20
  43888c:	mov	x4, x19
  438890:	ldr	x3, [sp, #184]
  438894:	mov	w2, w24
  438898:	mov	x1, x25
  43889c:	mov	x0, x21
  4388a0:	bl	437a44 <nftw@plt+0x34ec4>
  4388a4:	mov	w25, w0
  4388a8:	mov	x3, x20
  4388ac:	mov	x2, x19
  4388b0:	add	x1, sp, #0x1f0
  4388b4:	mov	x0, x21
  4388b8:	bl	4393d8 <nftw@plt+0x36858>
  4388bc:	tbz	w25, #31, 4386a0 <nftw@plt+0x35b20>
  4388c0:	mov	x2, x20
  4388c4:	mov	x1, x19
  4388c8:	mov	w0, w24
  4388cc:	bl	436014 <nftw@plt+0x33494>
  4388d0:	b	437b18 <nftw@plt+0x34f98>
  4388d4:	mov	x3, x20
  4388d8:	mov	x2, x19
  4388dc:	add	x1, sp, #0x1f0
  4388e0:	mov	x0, x21
  4388e4:	bl	4393d8 <nftw@plt+0x36858>
  4388e8:	b	4386a0 <nftw@plt+0x35b20>
  4388ec:	ldr	x27, [x2]
  4388f0:	ldr	x2, [x2]
  4388f4:	add	x1, x1, x2
  4388f8:	cmp	x3, x1
  4388fc:	csel	x3, x3, x1, ge  // ge = tcont
  438900:	add	x0, x0, #0x20
  438904:	cmp	x4, x0
  438908:	b.eq	43892c <nftw@plt+0x35dac>  // b.none
  43890c:	mov	x2, x0
  438910:	ldr	x1, [x0, #8]
  438914:	cbz	x1, 438900 <nftw@plt+0x35d80>
  438918:	cbz	x27, 4388ec <nftw@plt+0x35d6c>
  43891c:	ldr	x5, [x0]
  438920:	cmp	x5, x27
  438924:	b.ge	4388f0 <nftw@plt+0x35d70>  // b.tcont
  438928:	b	4388ec <nftw@plt+0x35d6c>
  43892c:	cmp	x27, #0x0
  438930:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  438934:	b.ne	438958 <nftw@plt+0x35dd8>  // b.any
  438938:	mov	x2, x20
  43893c:	mov	x1, x19
  438940:	mov	w0, w23
  438944:	bl	436014 <nftw@plt+0x33494>
  438948:	mov	w26, w0
  43894c:	cbz	w0, 437ac4 <nftw@plt+0x34f44>
  438950:	mov	w25, #0x1                   	// #1
  438954:	b	437b18 <nftw@plt+0x34f98>
  438958:	add	x6, sp, #0x1d8
  43895c:	mov	x5, x20
  438960:	mov	x4, x19
  438964:	sub	x3, x3, x27
  438968:	mov	x2, x27
  43896c:	mov	w1, w23
  438970:	mov	x0, x21
  438974:	bl	439314 <nftw@plt+0x36794>
  438978:	mov	w26, w0
  43897c:	cbz	w0, 437ac4 <nftw@plt+0x34f44>
  438980:	mov	x2, x20
  438984:	mov	x1, x19
  438988:	mov	w0, w23
  43898c:	bl	436014 <nftw@plt+0x33494>
  438990:	cbz	w0, 438c5c <nftw@plt+0x360dc>
  438994:	ldr	x3, [sp, #472]
  438998:	mov	x0, x24
  43899c:	mov	w2, #0x1                   	// #1
  4389a0:	mov	w25, #0x0                   	// #0
  4389a4:	b	4389dc <nftw@plt+0x35e5c>
  4389a8:	ldr	x1, [x0]
  4389ac:	sub	x1, x1, x27
  4389b0:	add	x1, x3, x1
  4389b4:	str	x1, [x0, #16]
  4389b8:	sub	w1, w2, #0x1
  4389bc:	cmp	w1, #0x4
  4389c0:	b.hi	4389cc <nftw@plt+0x35e4c>  // b.pmore
  4389c4:	add	w25, w25, #0x1
  4389c8:	b	4389d4 <nftw@plt+0x35e54>
  4389cc:	cmp	w2, #0x9
  4389d0:	b.hi	4389ec <nftw@plt+0x35e6c>  // b.pmore
  4389d4:	add	x0, x0, #0x20
  4389d8:	add	w2, w2, #0x1
  4389dc:	ldr	x1, [x0, #8]
  4389e0:	cbnz	x1, 4389a8 <nftw@plt+0x35e28>
  4389e4:	str	xzr, [x0, #16]
  4389e8:	b	4389cc <nftw@plt+0x35e4c>
  4389ec:	mov	x26, x24
  4389f0:	mov	w28, #0x5                   	// #5
  4389f4:	mov	x23, #0x0                   	// #0
  4389f8:	add	x0, sp, #0x188
  4389fc:	str	x0, [sp, #200]
  438a00:	add	x0, sp, #0x180
  438a04:	str	x0, [sp, #208]
  438a08:	str	w22, [sp, #180]
  438a0c:	b	438a60 <nftw@plt+0x35ee0>
  438a10:	str	xzr, [sp, #384]
  438a14:	str	xzr, [sp, #392]
  438a18:	ldr	x7, [sp, #200]
  438a1c:	ldr	x6, [sp, #208]
  438a20:	mov	x5, x20
  438a24:	mov	x4, x19
  438a28:	mov	x3, x23
  438a2c:	mov	x2, x22
  438a30:	ldr	x1, [x27, #176]
  438a34:	mov	x0, x21
  438a38:	bl	43743c <nftw@plt+0x348bc>
  438a3c:	cbz	w0, 438a94 <nftw@plt+0x35f14>
  438a40:	ldr	x0, [sp, #384]
  438a44:	str	x0, [x27, #16]
  438a48:	ldr	x0, [sp, #392]
  438a4c:	str	x0, [x27, #8]
  438a50:	str	wzr, [x27, #24]
  438a54:	add	x26, x26, #0x20
  438a58:	subs	w28, w28, #0x1
  438a5c:	b.eq	438aa4 <nftw@plt+0x35f24>  // b.none
  438a60:	mov	x27, x26
  438a64:	ldr	x0, [x26, #8]
  438a68:	cbnz	x0, 438a54 <nftw@plt+0x35ed4>
  438a6c:	ldr	x22, [x26, #168]
  438a70:	cbz	x22, 438a54 <nftw@plt+0x35ed4>
  438a74:	cbnz	x23, 438a10 <nftw@plt+0x35e90>
  438a78:	mov	x3, x20
  438a7c:	mov	x2, x19
  438a80:	mov	x1, #0x13b4                	// #5044
  438a84:	mov	x0, x21
  438a88:	bl	435960 <nftw@plt+0x32de0>
  438a8c:	mov	x23, x0
  438a90:	cbnz	x0, 438a10 <nftw@plt+0x35e90>
  438a94:	ldr	w22, [sp, #180]
  438a98:	mov	w26, #0x1                   	// #1
  438a9c:	mov	w23, #0xffffffff            	// #-1
  438aa0:	b	437ac4 <nftw@plt+0x34f44>
  438aa4:	ldr	w22, [sp, #180]
  438aa8:	mov	w0, #0x5                   	// #5
  438aac:	str	w0, [sp, #200]
  438ab0:	str	w22, [sp, #180]
  438ab4:	b	438dac <nftw@plt+0x3622c>
  438ab8:	mov	x3, x20
  438abc:	mov	x2, x19
  438ac0:	mov	x1, #0x13b4                	// #5044
  438ac4:	mov	x0, x21
  438ac8:	bl	435960 <nftw@plt+0x32de0>
  438acc:	mov	x23, x0
  438ad0:	cbnz	x0, 438dc4 <nftw@plt+0x36244>
  438ad4:	ldr	w22, [sp, #180]
  438ad8:	mov	w26, #0x1                   	// #1
  438adc:	mov	w23, #0xffffffff            	// #-1
  438ae0:	b	437ac4 <nftw@plt+0x34f44>
  438ae4:	ldr	w22, [sp, #180]
  438ae8:	cbz	x23, 438b04 <nftw@plt+0x35f84>
  438aec:	mov	x4, x20
  438af0:	mov	x3, x19
  438af4:	mov	x2, #0x13b4                	// #5044
  438af8:	mov	x1, x23
  438afc:	mov	x0, x21
  438b00:	bl	4358b4 <nftw@plt+0x32d34>
  438b04:	cbz	w25, 438b94 <nftw@plt+0x36014>
  438b08:	mov	w26, #0x1                   	// #1
  438b0c:	ldr	x0, [sp, #1080]
  438b10:	str	x0, [sp, #72]
  438b14:	ldr	x0, [sp, #192]
  438b18:	str	x0, [sp, #64]
  438b1c:	str	x20, [sp, #56]
  438b20:	str	x19, [sp, #48]
  438b24:	ldr	x0, [sp, #416]
  438b28:	str	x0, [sp, #40]
  438b2c:	ldr	w0, [sp, #272]
  438b30:	cmp	w0, #0x2
  438b34:	cset	w0, eq  // eq = none
  438b38:	str	w0, [sp, #32]
  438b3c:	ldr	x0, [sp, #752]
  438b40:	str	x0, [sp, #24]
  438b44:	ldr	x0, [sp, #760]
  438b48:	str	x0, [sp, #16]
  438b4c:	ldr	x0, [sp, #720]
  438b50:	str	x0, [sp, #8]
  438b54:	ldr	x0, [sp, #728]
  438b58:	str	x0, [sp]
  438b5c:	ldr	x7, [sp, #688]
  438b60:	ldr	x6, [sp, #696]
  438b64:	ldr	x5, [sp, #656]
  438b68:	ldr	x4, [sp, #664]
  438b6c:	ldr	x3, [sp, #624]
  438b70:	ldr	x2, [sp, #632]
  438b74:	ldr	x1, [sp, #184]
  438b78:	mov	x0, x21
  438b7c:	bl	43c780 <nftw@plt+0x39c00>
  438b80:	cbz	w0, 438c74 <nftw@plt+0x360f4>
  438b84:	mov	w25, #0x1                   	// #1
  438b88:	ldr	x0, [sp, #1072]
  438b8c:	str	w25, [x0]
  438b90:	b	437b18 <nftw@plt+0x34f98>
  438b94:	mov	x3, x20
  438b98:	mov	x2, x19
  438b9c:	add	x1, sp, #0x1d8
  438ba0:	mov	x0, x21
  438ba4:	bl	4393d8 <nftw@plt+0x36858>
  438ba8:	mov	w26, #0x0                   	// #0
  438bac:	b	438b0c <nftw@plt+0x35f8c>
  438bb0:	mov	x3, x20
  438bb4:	mov	x2, x19
  438bb8:	add	x1, sp, #0x250
  438bbc:	mov	x0, x21
  438bc0:	bl	4393d8 <nftw@plt+0x36858>
  438bc4:	b	437adc <nftw@plt+0x34f5c>
  438bc8:	mov	x3, x20
  438bcc:	mov	x2, x19
  438bd0:	add	x1, sp, #0x238
  438bd4:	mov	x0, x21
  438bd8:	bl	4393d8 <nftw@plt+0x36858>
  438bdc:	b	437ae0 <nftw@plt+0x34f60>
  438be0:	mov	x3, x20
  438be4:	mov	x2, x19
  438be8:	add	x1, sp, #0x208
  438bec:	mov	x0, x21
  438bf0:	bl	4393d8 <nftw@plt+0x36858>
  438bf4:	b	437ae4 <nftw@plt+0x34f64>
  438bf8:	mov	x3, x20
  438bfc:	mov	x2, x19
  438c00:	add	x1, sp, #0x1f0
  438c04:	mov	x0, x21
  438c08:	bl	4393d8 <nftw@plt+0x36858>
  438c0c:	b	437ae8 <nftw@plt+0x34f68>
  438c10:	mov	x3, x20
  438c14:	mov	x2, x19
  438c18:	add	x1, sp, #0x220
  438c1c:	mov	x0, x21
  438c20:	bl	4393d8 <nftw@plt+0x36858>
  438c24:	b	437af0 <nftw@plt+0x34f70>
  438c28:	mov	x3, x20
  438c2c:	mov	x2, x19
  438c30:	add	x1, sp, #0x1d8
  438c34:	mov	x0, x21
  438c38:	bl	4393d8 <nftw@plt+0x36858>
  438c3c:	b	437af4 <nftw@plt+0x34f74>
  438c40:	mov	x2, x20
  438c44:	mov	x1, x19
  438c48:	mov	w0, w23
  438c4c:	bl	436014 <nftw@plt+0x33494>
  438c50:	b	437b18 <nftw@plt+0x34f98>
  438c54:	mov	w25, #0xffffffff            	// #-1
  438c58:	b	437b18 <nftw@plt+0x34f98>
  438c5c:	mov	w26, #0x1                   	// #1
  438c60:	b	437ac4 <nftw@plt+0x34f44>
  438c64:	ldr	w22, [sp, #180]
  438c68:	mov	w26, #0x1                   	// #1
  438c6c:	mov	w23, #0xffffffff            	// #-1
  438c70:	b	437ac4 <nftw@plt+0x34f44>
  438c74:	mov	w23, #0xffffffff            	// #-1
  438c78:	b	437ac4 <nftw@plt+0x34f44>
  438c7c:	mov	w22, w0
  438c80:	ldr	x24, [sp, #336]
  438c84:	ldr	x21, [sp, #264]
  438c88:	ldr	w23, [sp, #276]
  438c8c:	ldr	x19, [sp, #280]
  438c90:	ldr	x20, [sp, #288]
  438c94:	str	w0, [sp, #180]
  438c98:	mov	w28, w0
  438c9c:	mov	w26, #0x1                   	// #1
  438ca0:	b	437cf8 <nftw@plt+0x35178>
  438ca4:	ldr	x24, [sp, #336]
  438ca8:	mov	w28, w19
  438cac:	ldr	x21, [sp, #264]
  438cb0:	ldr	w23, [sp, #276]
  438cb4:	ldr	x19, [sp, #280]
  438cb8:	ldr	x20, [sp, #288]
  438cbc:	mov	w22, w28
  438cc0:	mov	w0, #0x1                   	// #1
  438cc4:	str	w0, [sp, #180]
  438cc8:	mov	w26, w0
  438ccc:	b	437cf8 <nftw@plt+0x35178>
  438cd0:	ldr	x24, [sp, #336]
  438cd4:	mov	w28, w19
  438cd8:	ldr	x21, [sp, #264]
  438cdc:	ldr	w23, [sp, #276]
  438ce0:	ldr	x19, [sp, #280]
  438ce4:	ldr	x20, [sp, #288]
  438ce8:	mov	w22, w28
  438cec:	mov	w0, #0x1                   	// #1
  438cf0:	str	w0, [sp, #180]
  438cf4:	mov	w26, w0
  438cf8:	b	437cf8 <nftw@plt+0x35178>
  438cfc:	ldr	x24, [sp, #336]
  438d00:	mov	w28, w0
  438d04:	ldr	x21, [sp, #264]
  438d08:	ldr	w23, [sp, #276]
  438d0c:	ldr	x19, [sp, #280]
  438d10:	ldr	x20, [sp, #288]
  438d14:	mov	w25, w0
  438d18:	mov	w22, w0
  438d1c:	mov	w26, #0x1                   	// #1
  438d20:	b	437cf8 <nftw@plt+0x35178>
  438d24:	ldr	x24, [sp, #336]
  438d28:	mov	w28, w0
  438d2c:	ldr	x21, [sp, #264]
  438d30:	ldr	w23, [sp, #276]
  438d34:	ldr	x19, [sp, #280]
  438d38:	ldr	x20, [sp, #288]
  438d3c:	mov	w27, w0
  438d40:	mov	w22, w0
  438d44:	mov	w26, #0x1                   	// #1
  438d48:	b	437cf8 <nftw@plt+0x35178>
  438d4c:	ldr	x24, [sp, #336]
  438d50:	mov	w28, w0
  438d54:	ldr	x21, [sp, #264]
  438d58:	ldr	w23, [sp, #276]
  438d5c:	ldr	x19, [sp, #280]
  438d60:	ldr	x20, [sp, #288]
  438d64:	mov	w22, w0
  438d68:	mov	w26, #0x1                   	// #1
  438d6c:	b	437cf8 <nftw@plt+0x35178>
  438d70:	mov	w22, #0x1                   	// #1
  438d74:	mov	w28, w22
  438d78:	mov	w26, w22
  438d7c:	b	437cf8 <nftw@plt+0x35178>
  438d80:	mov	x0, #0x0                   	// #0
  438d84:	mov	x22, #0x0                   	// #0
  438d88:	str	x22, [x27, #16]
  438d8c:	str	x0, [x27, #8]
  438d90:	str	wzr, [x27, #24]
  438d94:	sub	w25, w25, #0x1
  438d98:	add	x24, x24, #0x20
  438d9c:	ldr	w0, [sp, #200]
  438da0:	subs	w0, w0, #0x1
  438da4:	str	w0, [sp, #200]
  438da8:	b.eq	438ae4 <nftw@plt+0x35f64>  // b.none
  438dac:	mov	x27, x24
  438db0:	ldr	x28, [x24, #8]
  438db4:	cbz	x28, 438d98 <nftw@plt+0x36218>
  438db8:	ldr	w0, [x24, #24]
  438dbc:	cbz	w0, 438d98 <nftw@plt+0x36218>
  438dc0:	cbz	x23, 438ab8 <nftw@plt+0x35f38>
  438dc4:	cmp	x28, #0x17
  438dc8:	b.ls	438d80 <nftw@plt+0x36200>  // b.plast
  438dcc:	ldr	x26, [x27, #16]
  438dd0:	ldr	w0, [x26]
  438dd4:	cmp	w0, #0x1
  438dd8:	b.ne	438e1c <nftw@plt+0x3629c>  // b.any
  438ddc:	mov	x3, x20
  438de0:	mov	x2, x19
  438de4:	ldr	x1, [x26, #8]
  438de8:	mov	x0, x21
  438dec:	bl	435960 <nftw@plt+0x32de0>
  438df0:	mov	x22, x0
  438df4:	cbz	x0, 438c64 <nftw@plt+0x360e4>
  438df8:	ldr	x4, [x26, #8]
  438dfc:	mov	x3, x0
  438e00:	mov	x2, x23
  438e04:	sub	x1, x28, #0x18
  438e08:	add	x0, x26, #0x18
  438e0c:	bl	43656c <nftw@plt+0x339ec>
  438e10:	cbz	w0, 438e28 <nftw@plt+0x362a8>
  438e14:	ldr	x0, [x26, #8]
  438e18:	b	438d88 <nftw@plt+0x36208>
  438e1c:	mov	x0, #0x0                   	// #0
  438e20:	mov	x22, #0x0                   	// #0
  438e24:	b	438d88 <nftw@plt+0x36208>
  438e28:	mov	x0, #0x0                   	// #0
  438e2c:	mov	x22, #0x0                   	// #0
  438e30:	b	438d88 <nftw@plt+0x36208>
  438e34:	mov	x3, x20
  438e38:	mov	x2, x19
  438e3c:	mov	x1, #0x0                   	// #0
  438e40:	mov	x0, x21
  438e44:	bl	435960 <nftw@plt+0x32de0>
  438e48:	mov	x26, x0
  438e4c:	cbz	x0, 438394 <nftw@plt+0x35814>
  438e50:	str	xzr, [sp, #224]
  438e54:	adrp	x3, 436000 <nftw@plt+0x33480>
  438e58:	add	x3, x3, #0xac
  438e5c:	mov	x2, #0x18                  	// #24
  438e60:	ldr	x22, [sp, #224]
  438e64:	mov	x1, x22
  438e68:	mov	x0, x26
  438e6c:	bl	43d00c <nftw@plt+0x3a48c>
  438e70:	str	xzr, [x28]
  438e74:	str	x26, [x28, #8]
  438e78:	str	x22, [x28, #16]
  438e7c:	mov	x3, x20
  438e80:	mov	x2, x19
  438e84:	add	x1, sp, #0x250
  438e88:	mov	x0, x21
  438e8c:	bl	4393d8 <nftw@plt+0x36858>
  438e90:	mov	w0, #0x1                   	// #1
  438e94:	ldr	x1, [sp, #200]
  438e98:	str	w0, [x1]
  438e9c:	ldr	w0, [x21, #8]
  438ea0:	cbz	w0, 438460 <nftw@plt+0x358e0>
  438ea4:	add	x2, x21, #0x30
  438ea8:	mov	x0, x2
  438eac:	ldar	x1, [x0]
  438eb0:	cbz	x1, 438484 <nftw@plt+0x35904>
  438eb4:	mov	x0, x1
  438eb8:	b	438eac <nftw@plt+0x3632c>
  438ebc:	sub	sp, sp, #0x80
  438ec0:	stp	x29, x30, [sp, #48]
  438ec4:	add	x29, sp, #0x30
  438ec8:	stp	x19, x20, [sp, #64]
  438ecc:	str	x21, [sp, #80]
  438ed0:	mov	x20, x0
  438ed4:	mov	x19, x2
  438ed8:	ldr	x1, [x0, #8]
  438edc:	cbz	x1, 438ee8 <nftw@plt+0x36368>
  438ee0:	ldrb	w0, [x1]
  438ee4:	cbnz	w0, 438f78 <nftw@plt+0x363f8>
  438ee8:	ldr	w2, [x19, #56]
  438eec:	cmn	w2, #0x1
  438ef0:	b.eq	438f60 <nftw@plt+0x363e0>  // b.none
  438ef4:	ldr	x21, [x19, #48]
  438ef8:	mov	w0, #0xffffffff            	// #-1
  438efc:	str	w0, [x19, #56]
  438f00:	str	wzr, [sp, #40]
  438f04:	str	xzr, [sp, #32]
  438f08:	str	wzr, [sp, #24]
  438f0c:	str	wzr, [sp, #16]
  438f10:	str	xzr, [sp, #8]
  438f14:	add	x0, sp, #0x6c
  438f18:	str	x0, [sp]
  438f1c:	ldr	x7, [x19, #32]
  438f20:	add	x6, sp, #0x70
  438f24:	ldr	x5, [x19, #16]
  438f28:	ldr	x4, [x19, #8]
  438f2c:	ldr	x3, [x20]
  438f30:	mov	x1, x21
  438f34:	ldr	x0, [x19]
  438f38:	bl	437a44 <nftw@plt+0x34ec4>
  438f3c:	cbz	w0, 438f60 <nftw@plt+0x363e0>
  438f40:	ldr	w0, [sp, #108]
  438f44:	cbz	w0, 438f60 <nftw@plt+0x363e0>
  438f48:	ldr	x0, [x19, #40]
  438f4c:	mov	w1, #0x1                   	// #1
  438f50:	str	w1, [x0]
  438f54:	ldr	x0, [x19, #24]
  438f58:	ldr	x1, [sp, #112]
  438f5c:	str	x1, [x0]
  438f60:	mov	w0, #0x0                   	// #0
  438f64:	ldp	x19, x20, [sp, #64]
  438f68:	ldr	x21, [sp, #80]
  438f6c:	ldp	x29, x30, [sp, #48]
  438f70:	add	sp, sp, #0x80
  438f74:	ret
  438f78:	ldr	w0, [x2, #56]
  438f7c:	cmn	w0, #0x1
  438f80:	b.ne	438fa8 <nftw@plt+0x36428>  // b.any
  438f84:	ldr	x21, [x20, #8]
  438f88:	add	x3, sp, #0x7c
  438f8c:	ldr	x2, [x19, #16]
  438f90:	ldr	x1, [x19, #8]
  438f94:	mov	x0, x21
  438f98:	bl	435f60 <nftw@plt+0x333e0>
  438f9c:	mov	w2, w0
  438fa0:	tbz	w0, #31, 438f00 <nftw@plt+0x36380>
  438fa4:	b	438f60 <nftw@plt+0x363e0>
  438fa8:	ldr	x2, [x2, #16]
  438fac:	ldr	x1, [x19, #8]
  438fb0:	bl	436014 <nftw@plt+0x33494>
  438fb4:	mov	w0, #0xffffffff            	// #-1
  438fb8:	str	w0, [x19, #56]
  438fbc:	b	438f84 <nftw@plt+0x36404>
  438fc0:	stp	x29, x30, [sp, #-16]!
  438fc4:	mov	x29, sp
  438fc8:	mov	x3, x0
  438fcc:	mov	x10, x2
  438fd0:	mov	x0, x4
  438fd4:	ldr	w2, [x3, #8]
  438fd8:	cbnz	w2, 439030 <nftw@plt+0x364b0>
  438fdc:	ldr	x4, [x3, #48]
  438fe0:	cbz	x4, 439094 <nftw@plt+0x36514>
  438fe4:	mov	x9, #0x0                   	// #0
  438fe8:	b	4390c8 <nftw@plt+0x36548>
  438fec:	mov	x8, x6
  438ff0:	cmp	x8, x7
  438ff4:	b.ls	4390c0 <nftw@plt+0x36540>  // b.plast
  438ff8:	add	x5, x8, x7
  438ffc:	lsr	x6, x5, #1
  439000:	and	x5, x5, #0xfffffffffffffffe
  439004:	add	x5, x5, x6
  439008:	add	x5, x2, x5, lsl #3
  43900c:	ldr	x3, [x5, #8]
  439010:	cmp	x3, x1
  439014:	b.hi	438fec <nftw@plt+0x3646c>  // b.pmore
  439018:	ldr	x7, [x5, #16]
  43901c:	add	x3, x3, x7
  439020:	cmp	x3, x1
  439024:	b.hi	4390a8 <nftw@plt+0x36528>  // b.pmore
  439028:	add	x7, x6, #0x1
  43902c:	b	438ff0 <nftw@plt+0x36470>
  439030:	add	x2, x3, #0x30
  439034:	mov	x4, #0x0                   	// #0
  439038:	ldar	x2, [x2]
  43903c:	cbz	x2, 439094 <nftw@plt+0x36514>
  439040:	ldr	x9, [x2, #8]
  439044:	ldr	x8, [x2, #16]
  439048:	mov	x7, x4
  43904c:	b	439054 <nftw@plt+0x364d4>
  439050:	mov	x8, x6
  439054:	cmp	x8, x7
  439058:	b.ls	439038 <nftw@plt+0x364b8>  // b.plast
  43905c:	add	x5, x8, x7
  439060:	lsr	x6, x5, #1
  439064:	and	x5, x5, #0xfffffffffffffffe
  439068:	add	x5, x5, x6
  43906c:	add	x5, x9, x5, lsl #3
  439070:	ldr	x3, [x5, #8]
  439074:	cmp	x3, x1
  439078:	b.hi	439050 <nftw@plt+0x364d0>  // b.pmore
  43907c:	ldr	x7, [x5, #16]
  439080:	add	x3, x3, x7
  439084:	cmp	x3, x1
  439088:	b.hi	4390a8 <nftw@plt+0x36528>  // b.pmore
  43908c:	add	x7, x6, #0x1
  439090:	b	439054 <nftw@plt+0x364d4>
  439094:	mov	x4, #0x0                   	// #0
  439098:	mov	x3, #0x0                   	// #0
  43909c:	mov	x2, #0x0                   	// #0
  4390a0:	blr	x10
  4390a4:	b	4390b8 <nftw@plt+0x36538>
  4390a8:	ldr	x4, [x5, #16]
  4390ac:	ldr	x3, [x5, #8]
  4390b0:	ldr	x2, [x5]
  4390b4:	blr	x10
  4390b8:	ldp	x29, x30, [sp], #16
  4390bc:	ret
  4390c0:	ldr	x4, [x4]
  4390c4:	cbz	x4, 439094 <nftw@plt+0x36514>
  4390c8:	ldr	x2, [x4, #8]
  4390cc:	ldr	x8, [x4, #16]
  4390d0:	mov	x7, x9
  4390d4:	b	438ff0 <nftw@plt+0x36470>
  4390d8:	stp	x29, x30, [sp, #-80]!
  4390dc:	mov	x29, sp
  4390e0:	stp	x19, x20, [sp, #16]
  4390e4:	stp	x21, x22, [sp, #32]
  4390e8:	stp	x23, x24, [sp, #48]
  4390ec:	stp	x25, x26, [sp, #64]
  4390f0:	mov	x22, x0
  4390f4:	mov	x23, x1
  4390f8:	mov	x24, x2
  4390fc:	mov	x20, x3
  439100:	mov	x21, x4
  439104:	mov	x25, x5
  439108:	mov	x26, x6
  43910c:	mov	x3, x4
  439110:	mov	x2, x20
  439114:	mov	x1, #0x13b4                	// #5044
  439118:	bl	435960 <nftw@plt+0x32de0>
  43911c:	cbz	x0, 439180 <nftw@plt+0x36600>
  439120:	mov	x19, x0
  439124:	mov	x7, x26
  439128:	mov	x6, x25
  43912c:	mov	x5, x21
  439130:	mov	x4, x20
  439134:	mov	x3, x0
  439138:	mov	x2, x24
  43913c:	mov	x1, x23
  439140:	mov	x0, x22
  439144:	bl	43743c <nftw@plt+0x348bc>
  439148:	mov	w23, w0
  43914c:	mov	x4, x21
  439150:	mov	x3, x20
  439154:	mov	x2, #0x13b4                	// #5044
  439158:	mov	x1, x19
  43915c:	mov	x0, x22
  439160:	bl	4358b4 <nftw@plt+0x32d34>
  439164:	mov	w0, w23
  439168:	ldp	x19, x20, [sp, #16]
  43916c:	ldp	x21, x22, [sp, #32]
  439170:	ldp	x23, x24, [sp, #48]
  439174:	ldp	x25, x26, [sp, #64]
  439178:	ldp	x29, x30, [sp], #80
  43917c:	ret
  439180:	mov	w23, #0x0                   	// #0
  439184:	b	439164 <nftw@plt+0x365e4>
  439188:	sub	sp, sp, #0xc0
  43918c:	stp	x29, x30, [sp, #48]
  439190:	add	x29, sp, #0x30
  439194:	stp	x19, x20, [sp, #64]
  439198:	stp	x21, x22, [sp, #80]
  43919c:	stp	x23, x24, [sp, #96]
  4391a0:	mov	x19, x0
  4391a4:	mov	x24, x1
  4391a8:	mov	w20, w2
  4391ac:	mov	x22, x3
  4391b0:	mov	x21, x4
  4391b4:	mov	x23, x5
  4391b8:	adrp	x3, 436000 <nftw@plt+0x33480>
  4391bc:	add	x3, x3, #0x60
  4391c0:	str	x3, [sp, #176]
  4391c4:	str	wzr, [sp, #40]
  4391c8:	str	xzr, [sp, #32]
  4391cc:	str	wzr, [sp, #24]
  4391d0:	mov	w3, #0x1                   	// #1
  4391d4:	str	w3, [sp, #16]
  4391d8:	str	xzr, [sp, #8]
  4391dc:	add	x3, sp, #0xb8
  4391e0:	str	x3, [sp]
  4391e4:	add	x7, sp, #0xbc
  4391e8:	add	x6, sp, #0xb0
  4391ec:	mov	x5, x4
  4391f0:	mov	x4, x22
  4391f4:	mov	x3, #0x0                   	// #0
  4391f8:	bl	437a44 <nftw@plt+0x34ec4>
  4391fc:	cbz	w0, 439290 <nftw@plt+0x36710>
  439200:	str	x19, [sp, #112]
  439204:	str	x22, [sp, #120]
  439208:	str	x21, [sp, #128]
  43920c:	add	x1, sp, #0xb0
  439210:	str	x1, [sp, #136]
  439214:	add	x1, sp, #0xbc
  439218:	str	x1, [sp, #144]
  43921c:	add	x1, sp, #0xb8
  439220:	str	x1, [sp, #152]
  439224:	str	x24, [sp, #160]
  439228:	cmp	w0, #0x0
  43922c:	csinv	w20, w20, wzr, lt  // lt = tstop
  439230:	str	w20, [sp, #168]
  439234:	add	x1, sp, #0x70
  439238:	adrp	x0, 438000 <nftw@plt+0x35480>
  43923c:	add	x0, x0, #0xebc
  439240:	bl	4028e0 <dl_iterate_phdr@plt>
  439244:	ldr	w0, [x19, #8]
  439248:	cbnz	w0, 4392c0 <nftw@plt+0x36740>
  43924c:	ldr	w0, [sp, #188]
  439250:	cbz	w0, 4392a8 <nftw@plt+0x36728>
  439254:	adrp	x0, 438000 <nftw@plt+0x35480>
  439258:	add	x0, x0, #0xfc0
  43925c:	str	x0, [x19, #40]
  439260:	ldr	x0, [x19, #24]
  439264:	str	x0, [x23]
  439268:	ldr	x2, [x23]
  43926c:	cmp	x2, #0x0
  439270:	mov	w0, #0x1                   	// #1
  439274:	adrp	x1, 436000 <nftw@plt+0x33480>
  439278:	add	x1, x1, #0x60
  43927c:	ccmp	x2, x1, #0x4, ne  // ne = any
  439280:	b.ne	439290 <nftw@plt+0x36710>  // b.any
  439284:	ldr	x0, [sp, #176]
  439288:	str	x0, [x23]
  43928c:	mov	w0, #0x1                   	// #1
  439290:	ldp	x19, x20, [sp, #64]
  439294:	ldp	x21, x22, [sp, #80]
  439298:	ldp	x23, x24, [sp, #96]
  43929c:	ldp	x29, x30, [sp, #48]
  4392a0:	add	sp, sp, #0xc0
  4392a4:	ret
  4392a8:	ldr	x0, [x19, #40]
  4392ac:	cbnz	x0, 439260 <nftw@plt+0x366e0>
  4392b0:	adrp	x0, 436000 <nftw@plt+0x33480>
  4392b4:	add	x0, x0, #0x88
  4392b8:	str	x0, [x19, #40]
  4392bc:	b	439260 <nftw@plt+0x366e0>
  4392c0:	ldr	w0, [sp, #188]
  4392c4:	cbz	w0, 4392f0 <nftw@plt+0x36770>
  4392c8:	add	x0, x19, #0x28
  4392cc:	adrp	x1, 438000 <nftw@plt+0x35480>
  4392d0:	add	x1, x1, #0xfc0
  4392d4:	stlr	x1, [x0]
  4392d8:	ldr	w0, [x19, #8]
  4392dc:	cbz	w0, 439260 <nftw@plt+0x366e0>
  4392e0:	add	x19, x19, #0x18
  4392e4:	ldar	x0, [x19]
  4392e8:	str	x0, [x23]
  4392ec:	b	439268 <nftw@plt+0x366e8>
  4392f0:	add	x0, x19, #0x28
  4392f4:	adrp	x1, 436000 <nftw@plt+0x33480>
  4392f8:	add	x1, x1, #0x88
  4392fc:	ldxr	x2, [x0]
  439300:	cbnz	x2, 43930c <nftw@plt+0x3678c>
  439304:	stlxr	w3, x1, [x0]
  439308:	cbnz	w3, 4392fc <nftw@plt+0x3677c>
  43930c:	dmb	ish
  439310:	b	4392d8 <nftw@plt+0x36758>
  439314:	stp	x29, x30, [sp, #-80]!
  439318:	mov	x29, sp
  43931c:	stp	x19, x20, [sp, #16]
  439320:	stp	x21, x22, [sp, #32]
  439324:	stp	x23, x24, [sp, #48]
  439328:	str	x25, [sp, #64]
  43932c:	mov	w22, w1
  439330:	mov	x20, x2
  439334:	mov	x19, x3
  439338:	mov	x23, x4
  43933c:	mov	x24, x5
  439340:	mov	x21, x6
  439344:	bl	402760 <getpagesize@plt>
  439348:	sxtw	x0, w0
  43934c:	udiv	x25, x20, x0
  439350:	msub	w25, w25, w0, w20
  439354:	sub	x19, x19, #0x1
  439358:	add	x3, x0, x25
  43935c:	add	x19, x19, x3
  439360:	neg	x0, x0
  439364:	and	x19, x0, x19
  439368:	sub	x5, x20, x25
  43936c:	mov	w4, w22
  439370:	mov	w3, #0x2                   	// #2
  439374:	mov	w2, #0x1                   	// #1
  439378:	mov	x1, x19
  43937c:	mov	x0, #0x0                   	// #0
  439380:	bl	4028b0 <mmap@plt>
  439384:	cmn	x0, #0x1
  439388:	b.eq	4393b8 <nftw@plt+0x36838>  // b.none
  43938c:	add	x25, x0, x25
  439390:	str	x25, [x21]
  439394:	str	x0, [x21, #8]
  439398:	str	x19, [x21, #16]
  43939c:	mov	w0, #0x1                   	// #1
  4393a0:	ldp	x19, x20, [sp, #16]
  4393a4:	ldp	x21, x22, [sp, #32]
  4393a8:	ldp	x23, x24, [sp, #48]
  4393ac:	ldr	x25, [sp, #64]
  4393b0:	ldp	x29, x30, [sp], #80
  4393b4:	ret
  4393b8:	bl	402aa0 <__errno_location@plt>
  4393bc:	ldr	w2, [x0]
  4393c0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4393c4:	add	x1, x1, #0xd8
  4393c8:	mov	x0, x24
  4393cc:	blr	x23
  4393d0:	mov	w0, #0x0                   	// #0
  4393d4:	b	4393a0 <nftw@plt+0x36820>
  4393d8:	stp	x29, x30, [sp, #-32]!
  4393dc:	mov	x29, sp
  4393e0:	stp	x19, x20, [sp, #16]
  4393e4:	mov	x4, x1
  4393e8:	mov	x19, x2
  4393ec:	mov	x20, x3
  4393f0:	ldr	x1, [x1, #16]
  4393f4:	ldr	x0, [x4, #8]
  4393f8:	bl	402970 <munmap@plt>
  4393fc:	tbnz	w0, #31, 43940c <nftw@plt+0x3688c>
  439400:	ldp	x19, x20, [sp, #16]
  439404:	ldp	x29, x30, [sp], #32
  439408:	ret
  43940c:	bl	402aa0 <__errno_location@plt>
  439410:	ldr	w2, [x0]
  439414:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  439418:	add	x1, x1, #0xd00
  43941c:	mov	x0, x20
  439420:	blr	x19
  439424:	b	439400 <nftw@plt+0x36880>
  439428:	cmp	w1, #0x4
  43942c:	b.eq	439484 <nftw@plt+0x36904>  // b.none
  439430:	b.gt	43945c <nftw@plt+0x368dc>
  439434:	cmp	w1, #0x1
  439438:	b.eq	439478 <nftw@plt+0x368f8>  // b.none
  43943c:	cmp	w1, #0x2
  439440:	b.ne	439454 <nftw@plt+0x368d4>  // b.any
  439444:	mov	x1, #0xffff                	// #65535
  439448:	cmp	x0, x1
  43944c:	cset	w0, eq  // eq = none
  439450:	b	439474 <nftw@plt+0x368f4>
  439454:	mov	w0, #0x0                   	// #0
  439458:	b	439474 <nftw@plt+0x368f4>
  43945c:	cmp	w1, #0x8
  439460:	b.ne	439470 <nftw@plt+0x368f0>  // b.any
  439464:	cmn	x0, #0x1
  439468:	cset	w0, eq  // eq = none
  43946c:	b	439474 <nftw@plt+0x368f4>
  439470:	mov	w0, #0x0                   	// #0
  439474:	ret
  439478:	cmp	x0, #0xff
  43947c:	cset	w0, eq  // eq = none
  439480:	b	439474 <nftw@plt+0x368f4>
  439484:	mov	x1, #0xffffffff            	// #4294967295
  439488:	cmp	x0, x1
  43948c:	cset	w0, eq  // eq = none
  439490:	b	439474 <nftw@plt+0x368f4>
  439494:	mov	x4, #0x0                   	// #0
  439498:	b	4394a0 <nftw@plt+0x36920>
  43949c:	mov	x1, x3
  4394a0:	cmp	x1, x4
  4394a4:	b.ls	4394d8 <nftw@plt+0x36958>  // b.plast
  4394a8:	add	x3, x1, x4
  4394ac:	lsr	x3, x3, #1
  4394b0:	add	x7, x0, x3, lsl #3
  4394b4:	ldr	x5, [x0, x3, lsl #3]
  4394b8:	ldr	x6, [x5, #24]
  4394bc:	cmp	x6, x2
  4394c0:	b.hi	43949c <nftw@plt+0x3691c>  // b.pmore
  4394c4:	ldr	x4, [x5, #32]
  4394c8:	cmp	x4, x2
  4394cc:	b.hi	4394e0 <nftw@plt+0x36960>  // b.pmore
  4394d0:	add	x4, x3, #0x1
  4394d4:	b	4394a0 <nftw@plt+0x36920>
  4394d8:	mov	x0, #0x0                   	// #0
  4394dc:	b	4394e4 <nftw@plt+0x36964>
  4394e0:	ldr	x0, [x7]
  4394e4:	ret
  4394e8:	mov	x2, x0
  4394ec:	ldr	x4, [x0]
  4394f0:	ldr	x3, [x1]
  4394f4:	mov	w0, #0xffffffff            	// #-1
  4394f8:	cmp	x4, x3
  4394fc:	b.cc	439540 <nftw@plt+0x369c0>  // b.lo, b.ul, b.last
  439500:	mov	w0, #0x1                   	// #1
  439504:	b.hi	439540 <nftw@plt+0x369c0>  // b.pmore
  439508:	ldr	x4, [x2, #8]
  43950c:	ldr	x3, [x1, #8]
  439510:	cmp	x4, x3
  439514:	b.cc	439540 <nftw@plt+0x369c0>  // b.lo, b.ul, b.last
  439518:	mov	w0, #0xffffffff            	// #-1
  43951c:	b.hi	439540 <nftw@plt+0x369c0>  // b.pmore
  439520:	ldr	x0, [x2, #16]
  439524:	ldr	x2, [x0, #56]
  439528:	ldr	x0, [x1, #16]
  43952c:	ldr	x1, [x0, #56]
  439530:	mov	w0, #0xffffffff            	// #-1
  439534:	cmp	x2, x1
  439538:	b.lt	439540 <nftw@plt+0x369c0>  // b.tstop
  43953c:	cset	w0, gt
  439540:	ret
  439544:	mov	x2, x0
  439548:	ldr	x4, [x0]
  43954c:	ldr	x3, [x1]
  439550:	mov	w0, #0xffffffff            	// #-1
  439554:	cmp	x4, x3
  439558:	b.cc	43957c <nftw@plt+0x369fc>  // b.lo, b.ul, b.last
  43955c:	mov	w0, #0x1                   	// #1
  439560:	b.hi	43957c <nftw@plt+0x369fc>  // b.pmore
  439564:	ldr	w2, [x2, #20]
  439568:	ldr	w1, [x1, #20]
  43956c:	mov	w0, #0xffffffff            	// #-1
  439570:	cmp	w2, w1
  439574:	b.lt	43957c <nftw@plt+0x369fc>  // b.tstop
  439578:	cset	w0, gt
  43957c:	ret
  439580:	ldr	x2, [x0]
  439584:	ldr	x0, [x1]
  439588:	cmp	x2, x0
  43958c:	b.cc	439598 <nftw@plt+0x36a18>  // b.lo, b.ul, b.last
  439590:	cset	w0, hi  // hi = pmore
  439594:	ret
  439598:	mov	w0, #0xffffffff            	// #-1
  43959c:	b	439594 <nftw@plt+0x36a14>
  4395a0:	ldr	x7, [x1, #32]
  4395a4:	cbz	x7, 439640 <nftw@plt+0x36ac0>
  4395a8:	stp	x29, x30, [sp, #-64]!
  4395ac:	mov	x29, sp
  4395b0:	stp	x19, x20, [sp, #16]
  4395b4:	stp	x21, x22, [sp, #32]
  4395b8:	stp	x23, x24, [sp, #48]
  4395bc:	mov	x19, x0
  4395c0:	mov	x22, x2
  4395c4:	mov	x23, x3
  4395c8:	mov	x20, x4
  4395cc:	mov	x21, x5
  4395d0:	ldr	x2, [x1, #24]
  4395d4:	mov	x4, x7
  4395d8:	mov	x3, #0x0                   	// #0
  4395dc:	b	4395e4 <nftw@plt+0x36a64>
  4395e0:	mov	x4, x0
  4395e4:	cmp	x4, x3
  4395e8:	b.ls	439628 <nftw@plt+0x36aa8>  // b.plast
  4395ec:	add	x1, x4, x3
  4395f0:	lsr	x0, x1, #1
  4395f4:	and	x1, x1, #0xfffffffffffffffe
  4395f8:	add	x1, x1, x0
  4395fc:	lsl	x6, x1, #3
  439600:	mov	x5, x6
  439604:	add	x6, x2, x6
  439608:	ldr	x1, [x2, x1, lsl #3]
  43960c:	cmp	x1, x19
  439610:	b.hi	4395e0 <nftw@plt+0x36a60>  // b.pmore
  439614:	ldr	x1, [x6, #8]
  439618:	cmp	x1, x19
  43961c:	b.hi	439648 <nftw@plt+0x36ac8>  // b.pmore
  439620:	add	x3, x0, #0x1
  439624:	b	4395e4 <nftw@plt+0x36a64>
  439628:	mov	w0, #0x0                   	// #0
  43962c:	ldp	x19, x20, [sp, #16]
  439630:	ldp	x21, x22, [sp, #32]
  439634:	ldp	x23, x24, [sp, #48]
  439638:	ldp	x29, x30, [sp], #64
  43963c:	ret
  439640:	mov	w0, #0x0                   	// #0
  439644:	ret
  439648:	asr	x0, x5, #3
  43964c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  439650:	movk	x5, #0xaaab
  439654:	mul	x0, x0, x5
  439658:	add	x0, x0, #0x1
  43965c:	mov	x1, x5
  439660:	cmp	x7, x0
  439664:	b.ls	43969c <nftw@plt+0x36b1c>  // b.plast
  439668:	ldr	x0, [x6, #24]
  43966c:	cmp	x0, x19
  439670:	b.hi	43969c <nftw@plt+0x36b1c>  // b.pmore
  439674:	ldr	x0, [x6, #32]
  439678:	cmp	x0, x19
  43967c:	b.ls	43969c <nftw@plt+0x36b1c>  // b.plast
  439680:	add	x6, x6, #0x18
  439684:	sub	x0, x6, x2
  439688:	asr	x0, x0, #3
  43968c:	mul	x0, x0, x1
  439690:	add	x0, x0, #0x1
  439694:	cmp	x7, x0
  439698:	b.hi	439668 <nftw@plt+0x36ae8>  // b.pmore
  43969c:	ldr	x24, [x6, #16]
  4396a0:	mov	x5, x21
  4396a4:	mov	x4, x20
  4396a8:	mov	x3, x23
  4396ac:	mov	x2, x22
  4396b0:	mov	x1, x24
  4396b4:	mov	x0, x19
  4396b8:	bl	4395a0 <nftw@plt+0x36a20>
  4396bc:	cbnz	w0, 43962c <nftw@plt+0x36aac>
  4396c0:	ldr	x4, [x24]
  4396c4:	ldr	w3, [x21]
  4396c8:	ldr	x2, [x20]
  4396cc:	mov	x1, x19
  4396d0:	mov	x0, x23
  4396d4:	blr	x22
  4396d8:	cbnz	w0, 43962c <nftw@plt+0x36aac>
  4396dc:	ldr	x1, [x24, #8]
  4396e0:	str	x1, [x20]
  4396e4:	ldr	w1, [x24, #16]
  4396e8:	str	w1, [x21]
  4396ec:	b	43962c <nftw@plt+0x36aac>
  4396f0:	stp	x29, x30, [sp, #-112]!
  4396f4:	mov	x29, sp
  4396f8:	stp	x21, x22, [sp, #32]
  4396fc:	stp	x23, x24, [sp, #48]
  439700:	stp	x25, x26, [sp, #64]
  439704:	mov	x24, x2
  439708:	mov	x25, x3
  43970c:	ldr	x21, [x0]
  439710:	sub	x2, x1, #0x1
  439714:	cmp	x2, x21
  439718:	b.cs	439738 <nftw@plt+0x36bb8>  // b.hs, b.nlast
  43971c:	lsl	x2, x1, #5
  439720:	sub	x2, x2, #0x20
  439724:	ldr	x3, [x0, #8]
  439728:	add	x26, x3, x2
  43972c:	ldr	x2, [x3, x2]
  439730:	cmp	x2, x1
  439734:	b.eq	439798 <nftw@plt+0x36c18>  // b.none
  439738:	stp	x19, x20, [sp, #16]
  43973c:	stp	xzr, xzr, [sp, #88]
  439740:	str	xzr, [sp, #104]
  439744:	str	x1, [sp, #80]
  439748:	ldr	x23, [x0, #8]
  43974c:	mov	x20, #0x0                   	// #0
  439750:	add	x22, sp, #0x50
  439754:	b	43975c <nftw@plt+0x36bdc>
  439758:	mov	x21, x19
  43975c:	cmp	x21, x20
  439760:	b.ls	4397b0 <nftw@plt+0x36c30>  // b.plast
  439764:	add	x19, x21, x20
  439768:	lsr	x19, x19, #1
  43976c:	add	x26, x23, x19, lsl #5
  439770:	mov	x1, x26
  439774:	mov	x0, x22
  439778:	bl	439580 <nftw@plt+0x36a00>
  43977c:	tbnz	w0, #31, 439758 <nftw@plt+0x36bd8>
  439780:	cmp	w0, #0x0
  439784:	b.le	439790 <nftw@plt+0x36c10>
  439788:	add	x20, x19, #0x1
  43978c:	b	43975c <nftw@plt+0x36bdc>
  439790:	cbz	x26, 4397b0 <nftw@plt+0x36c30>
  439794:	ldp	x19, x20, [sp, #16]
  439798:	mov	x0, x26
  43979c:	ldp	x21, x22, [sp, #32]
  4397a0:	ldp	x23, x24, [sp, #48]
  4397a4:	ldp	x25, x26, [sp, #64]
  4397a8:	ldp	x29, x30, [sp], #112
  4397ac:	ret
  4397b0:	mov	w2, #0x0                   	// #0
  4397b4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  4397b8:	add	x1, x1, #0xd08
  4397bc:	mov	x0, x25
  4397c0:	blr	x24
  4397c4:	mov	x26, #0x0                   	// #0
  4397c8:	ldp	x19, x20, [sp, #16]
  4397cc:	b	439798 <nftw@plt+0x36c18>
  4397d0:	stp	x29, x30, [sp, #-64]!
  4397d4:	mov	x29, sp
  4397d8:	stp	x19, x20, [sp, #16]
  4397dc:	stp	x21, x22, [sp, #32]
  4397e0:	str	x23, [sp, #48]
  4397e4:	mov	x23, x1
  4397e8:	mov	x20, x2
  4397ec:	mov	x21, x3
  4397f0:	mov	w22, w4
  4397f4:	mov	x2, x5
  4397f8:	mov	x3, x6
  4397fc:	mov	x19, x7
  439800:	ldr	x7, [x7, #24]
  439804:	cbz	x7, 439828 <nftw@plt+0x36ca8>
  439808:	add	x7, x7, x7, lsl #1
  43980c:	lsl	x7, x7, #3
  439810:	sub	x7, x7, #0x18
  439814:	ldr	x1, [x19]
  439818:	add	x4, x1, x7
  43981c:	ldr	x1, [x1, x7]
  439820:	cmp	x1, x20
  439824:	b.eq	43987c <nftw@plt+0x36cfc>  // b.none
  439828:	mov	x4, x19
  43982c:	mov	x1, #0x18                  	// #24
  439830:	bl	435acc <nftw@plt+0x32f4c>
  439834:	cbz	x0, 43989c <nftw@plt+0x36d1c>
  439838:	ldr	x2, [x23, #16]
  43983c:	add	x20, x2, x20
  439840:	str	x20, [x0]
  439844:	str	x21, [x0, #8]
  439848:	str	w22, [x0, #16]
  43984c:	ldr	x1, [x19, #24]
  439850:	str	w1, [x0, #20]
  439854:	ldr	x0, [x19, #24]
  439858:	add	x0, x0, #0x1
  43985c:	str	x0, [x19, #24]
  439860:	mov	w1, #0x1                   	// #1
  439864:	mov	w0, w1
  439868:	ldp	x19, x20, [sp, #16]
  43986c:	ldp	x21, x22, [sp, #32]
  439870:	ldr	x23, [sp, #48]
  439874:	ldp	x29, x30, [sp], #64
  439878:	ret
  43987c:	ldr	x1, [x4, #8]
  439880:	cmp	x1, x21
  439884:	b.ne	439828 <nftw@plt+0x36ca8>  // b.any
  439888:	ldr	w4, [x4, #16]
  43988c:	mov	w1, #0x1                   	// #1
  439890:	cmp	w4, w22
  439894:	b.ne	439828 <nftw@plt+0x36ca8>  // b.any
  439898:	b	439864 <nftw@plt+0x36ce4>
  43989c:	mov	w1, #0x0                   	// #0
  4398a0:	b	439864 <nftw@plt+0x36ce4>
  4398a4:	stp	x29, x30, [sp, #-48]!
  4398a8:	mov	x29, sp
  4398ac:	stp	x19, x20, [sp, #16]
  4398b0:	stp	x21, x22, [sp, #32]
  4398b4:	mov	x22, x2
  4398b8:	mov	x2, x5
  4398bc:	mov	x19, x7
  4398c0:	ldr	x21, [x1, #16]
  4398c4:	add	x20, x21, x3
  4398c8:	add	x21, x21, x4
  4398cc:	ldr	x1, [x7, #24]
  4398d0:	cbz	x1, 43990c <nftw@plt+0x36d8c>
  4398d4:	add	x1, x1, x1, lsl #1
  4398d8:	lsl	x1, x1, #3
  4398dc:	sub	x1, x1, #0x18
  4398e0:	ldr	x3, [x7]
  4398e4:	add	x1, x3, x1
  4398e8:	ldr	x3, [x1, #8]
  4398ec:	cmp	x3, x20
  4398f0:	b.eq	439900 <nftw@plt+0x36d80>  // b.none
  4398f4:	add	x4, x3, #0x1
  4398f8:	cmp	x4, x20
  4398fc:	b.ne	43990c <nftw@plt+0x36d8c>  // b.any
  439900:	ldr	x4, [x1, #16]
  439904:	cmp	x4, x22
  439908:	b.eq	43994c <nftw@plt+0x36dcc>  // b.none
  43990c:	mov	x4, x19
  439910:	mov	x3, x6
  439914:	mov	x1, #0x18                  	// #24
  439918:	bl	435acc <nftw@plt+0x32f4c>
  43991c:	cbz	x0, 439960 <nftw@plt+0x36de0>
  439920:	str	x20, [x0]
  439924:	str	x21, [x0, #8]
  439928:	str	x22, [x0, #16]
  43992c:	ldr	x0, [x19, #24]
  439930:	add	x0, x0, #0x1
  439934:	str	x0, [x19, #24]
  439938:	mov	w0, #0x1                   	// #1
  43993c:	ldp	x19, x20, [sp, #16]
  439940:	ldp	x21, x22, [sp, #32]
  439944:	ldp	x29, x30, [sp], #48
  439948:	ret
  43994c:	mov	w0, #0x1                   	// #1
  439950:	cmp	x3, x21
  439954:	b.cs	43993c <nftw@plt+0x36dbc>  // b.hs, b.nlast
  439958:	str	x21, [x1, #8]
  43995c:	b	43993c <nftw@plt+0x36dbc>
  439960:	mov	w0, #0x0                   	// #0
  439964:	b	43993c <nftw@plt+0x36dbc>
  439968:	stp	x29, x30, [sp, #-48]!
  43996c:	mov	x29, sp
  439970:	stp	x19, x20, [sp, #16]
  439974:	stp	x21, x22, [sp, #32]
  439978:	mov	x19, x2
  43997c:	mov	x2, x3
  439980:	mov	x3, x4
  439984:	mov	x20, x5
  439988:	ldr	x21, [x19]
  43998c:	add	x21, x1, x21
  439990:	ldr	x22, [x19, #8]
  439994:	add	x22, x1, x22
  439998:	ldr	x1, [x5, #24]
  43999c:	cbz	x1, 4399dc <nftw@plt+0x36e5c>
  4399a0:	add	x1, x1, x1, lsl #1
  4399a4:	lsl	x1, x1, #3
  4399a8:	sub	x1, x1, #0x18
  4399ac:	ldr	x4, [x5]
  4399b0:	add	x1, x4, x1
  4399b4:	ldr	x4, [x1, #8]
  4399b8:	cmp	x21, x4
  4399bc:	b.eq	4399cc <nftw@plt+0x36e4c>  // b.none
  4399c0:	add	x5, x4, #0x1
  4399c4:	cmp	x21, x5
  4399c8:	b.ne	4399dc <nftw@plt+0x36e5c>  // b.any
  4399cc:	ldr	x6, [x19, #16]
  4399d0:	ldr	x5, [x1, #16]
  4399d4:	cmp	x6, x5
  4399d8:	b.eq	439a24 <nftw@plt+0x36ea4>  // b.none
  4399dc:	mov	x4, x20
  4399e0:	mov	x1, #0x18                  	// #24
  4399e4:	bl	435acc <nftw@plt+0x32f4c>
  4399e8:	cbz	x0, 439a38 <nftw@plt+0x36eb8>
  4399ec:	str	x21, [x19]
  4399f0:	str	x22, [x19, #8]
  4399f4:	ldp	x2, x3, [x19]
  4399f8:	stp	x2, x3, [x0]
  4399fc:	ldr	x1, [x19, #16]
  439a00:	str	x1, [x0, #16]
  439a04:	ldr	x0, [x20, #24]
  439a08:	add	x0, x0, #0x1
  439a0c:	str	x0, [x20, #24]
  439a10:	mov	w0, #0x1                   	// #1
  439a14:	ldp	x19, x20, [sp, #16]
  439a18:	ldp	x21, x22, [sp, #32]
  439a1c:	ldp	x29, x30, [sp], #48
  439a20:	ret
  439a24:	mov	w0, #0x1                   	// #1
  439a28:	cmp	x22, x4
  439a2c:	b.ls	439a14 <nftw@plt+0x36e94>  // b.plast
  439a30:	str	x22, [x1, #8]
  439a34:	b	439a14 <nftw@plt+0x36e94>
  439a38:	mov	w0, #0x0                   	// #0
  439a3c:	b	439a14 <nftw@plt+0x36e94>
  439a40:	stp	x29, x30, [sp, #-240]!
  439a44:	mov	x29, sp
  439a48:	stp	x19, x20, [sp, #16]
  439a4c:	mov	x19, x0
  439a50:	ldr	x5, [x0, #16]
  439a54:	ldr	x0, [x0, #8]
  439a58:	add	x20, sp, #0x28
  439a5c:	sub	w5, w5, w0
  439a60:	ldr	x4, [x19]
  439a64:	mov	x3, x1
  439a68:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  439a6c:	add	x2, x2, #0xd28
  439a70:	mov	x1, #0xc8                  	// #200
  439a74:	mov	x0, x20
  439a78:	bl	402600 <snprintf@plt>
  439a7c:	ldr	x3, [x19, #40]
  439a80:	mov	w2, #0x0                   	// #0
  439a84:	mov	x1, x20
  439a88:	ldr	x0, [x19, #48]
  439a8c:	blr	x3
  439a90:	ldp	x19, x20, [sp, #16]
  439a94:	ldp	x29, x30, [sp], #240
  439a98:	ret
  439a9c:	stp	x29, x30, [sp, #-32]!
  439aa0:	mov	x29, sp
  439aa4:	str	x19, [sp, #16]
  439aa8:	mov	x19, x0
  439aac:	ldr	x0, [x0, #24]
  439ab0:	cmp	x1, x0
  439ab4:	b.ls	439ae4 <nftw@plt+0x36f64>  // b.plast
  439ab8:	ldr	w0, [x19, #56]
  439abc:	cbz	w0, 439ac8 <nftw@plt+0x36f48>
  439ac0:	mov	w0, #0x0                   	// #0
  439ac4:	b	439afc <nftw@plt+0x36f7c>
  439ac8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  439acc:	add	x1, x1, #0xd38
  439ad0:	mov	x0, x19
  439ad4:	bl	439a40 <nftw@plt+0x36ec0>
  439ad8:	mov	w0, #0x1                   	// #1
  439adc:	str	w0, [x19, #56]
  439ae0:	b	439ac0 <nftw@plt+0x36f40>
  439ae4:	ldr	x2, [x19, #16]
  439ae8:	add	x2, x2, x1
  439aec:	str	x2, [x19, #16]
  439af0:	sub	x1, x0, x1
  439af4:	str	x1, [x19, #24]
  439af8:	mov	w0, #0x1                   	// #1
  439afc:	ldr	x19, [sp, #16]
  439b00:	ldp	x29, x30, [sp], #32
  439b04:	ret
  439b08:	stp	x29, x30, [sp, #-32]!
  439b0c:	mov	x29, sp
  439b10:	stp	x19, x20, [sp, #16]
  439b14:	mov	x19, x0
  439b18:	ldr	x20, [x0, #16]
  439b1c:	mov	x1, #0x4                   	// #4
  439b20:	bl	439a9c <nftw@plt+0x36f1c>
  439b24:	cbz	w0, 439b78 <nftw@plt+0x36ff8>
  439b28:	ldr	w0, [x19, #32]
  439b2c:	cbz	w0, 439b54 <nftw@plt+0x36fd4>
  439b30:	ldrb	w0, [x20]
  439b34:	ldrb	w1, [x20, #1]
  439b38:	lsl	w1, w1, #16
  439b3c:	orr	w0, w1, w0, lsl #24
  439b40:	ldrb	w1, [x20, #2]
  439b44:	ldrb	w2, [x20, #3]
  439b48:	orr	w1, w2, w1, lsl #8
  439b4c:	orr	w0, w0, w1
  439b50:	b	439b7c <nftw@plt+0x36ffc>
  439b54:	ldrb	w0, [x20, #3]
  439b58:	ldrb	w1, [x20, #2]
  439b5c:	lsl	w1, w1, #16
  439b60:	orr	w0, w1, w0, lsl #24
  439b64:	ldrb	w1, [x20, #1]
  439b68:	ldrb	w2, [x20]
  439b6c:	orr	w1, w2, w1, lsl #8
  439b70:	orr	w0, w0, w1
  439b74:	b	439b7c <nftw@plt+0x36ffc>
  439b78:	mov	w0, #0x0                   	// #0
  439b7c:	ldp	x19, x20, [sp, #16]
  439b80:	ldp	x29, x30, [sp], #32
  439b84:	ret
  439b88:	stp	x29, x30, [sp, #-32]!
  439b8c:	mov	x29, sp
  439b90:	stp	x19, x20, [sp, #16]
  439b94:	mov	x20, x0
  439b98:	ldr	x19, [x0, #16]
  439b9c:	mov	x1, #0x8                   	// #8
  439ba0:	bl	439a9c <nftw@plt+0x36f1c>
  439ba4:	cbz	w0, 439c48 <nftw@plt+0x370c8>
  439ba8:	ldr	w0, [x20, #32]
  439bac:	cbz	w0, 439bfc <nftw@plt+0x3707c>
  439bb0:	ldrb	w0, [x19]
  439bb4:	ldrb	w1, [x19, #1]
  439bb8:	lsl	x1, x1, #48
  439bbc:	orr	x0, x1, x0, lsl #56
  439bc0:	ldrb	w1, [x19, #2]
  439bc4:	ldrb	w2, [x19, #3]
  439bc8:	lsl	x2, x2, #32
  439bcc:	orr	x1, x2, x1, lsl #40
  439bd0:	orr	x0, x0, x1
  439bd4:	ldrb	w1, [x19, #4]
  439bd8:	ldrb	w2, [x19, #5]
  439bdc:	lsl	x2, x2, #16
  439be0:	orr	x1, x2, x1, lsl #24
  439be4:	orr	x0, x0, x1
  439be8:	ldrb	w1, [x19, #6]
  439bec:	ldrb	w2, [x19, #7]
  439bf0:	orr	x1, x2, x1, lsl #8
  439bf4:	orr	x0, x0, x1
  439bf8:	b	439c4c <nftw@plt+0x370cc>
  439bfc:	ldrb	w0, [x19, #7]
  439c00:	ldrb	w1, [x19, #6]
  439c04:	lsl	x1, x1, #48
  439c08:	orr	x0, x1, x0, lsl #56
  439c0c:	ldrb	w1, [x19, #5]
  439c10:	ldrb	w2, [x19, #4]
  439c14:	lsl	x2, x2, #32
  439c18:	orr	x1, x2, x1, lsl #40
  439c1c:	orr	x0, x0, x1
  439c20:	ldrb	w1, [x19, #3]
  439c24:	ldrb	w2, [x19, #2]
  439c28:	lsl	x2, x2, #16
  439c2c:	orr	x1, x2, x1, lsl #24
  439c30:	orr	x0, x0, x1
  439c34:	ldrb	w1, [x19, #1]
  439c38:	ldrb	w2, [x19]
  439c3c:	orr	x1, x2, x1, lsl #8
  439c40:	orr	x0, x0, x1
  439c44:	b	439c4c <nftw@plt+0x370cc>
  439c48:	mov	x0, #0x0                   	// #0
  439c4c:	ldp	x19, x20, [sp, #16]
  439c50:	ldp	x29, x30, [sp], #32
  439c54:	ret
  439c58:	stp	x29, x30, [sp, #-16]!
  439c5c:	mov	x29, sp
  439c60:	cbz	w1, 439c70 <nftw@plt+0x370f0>
  439c64:	bl	439b88 <nftw@plt+0x37008>
  439c68:	ldp	x29, x30, [sp], #16
  439c6c:	ret
  439c70:	bl	439b08 <nftw@plt+0x36f88>
  439c74:	mov	w0, w0
  439c78:	b	439c68 <nftw@plt+0x370e8>
  439c7c:	stp	x29, x30, [sp, #-32]!
  439c80:	mov	x29, sp
  439c84:	stp	x19, x20, [sp, #16]
  439c88:	mov	x19, x0
  439c8c:	ldr	x20, [x0, #16]
  439c90:	mov	x1, #0x2                   	// #2
  439c94:	bl	439a9c <nftw@plt+0x36f1c>
  439c98:	cbz	w0, 439cc4 <nftw@plt+0x37144>
  439c9c:	ldr	w0, [x19, #32]
  439ca0:	cbz	w0, 439cb4 <nftw@plt+0x37134>
  439ca4:	ldrb	w1, [x20]
  439ca8:	ldrb	w0, [x20, #1]
  439cac:	bfi	w0, w1, #8, #24
  439cb0:	b	439cc8 <nftw@plt+0x37148>
  439cb4:	ldrb	w1, [x20, #1]
  439cb8:	ldrb	w0, [x20]
  439cbc:	bfi	w0, w1, #8, #24
  439cc0:	b	439cc8 <nftw@plt+0x37148>
  439cc4:	mov	w0, #0x0                   	// #0
  439cc8:	ldp	x19, x20, [sp, #16]
  439ccc:	ldp	x29, x30, [sp], #32
  439cd0:	ret
  439cd4:	stp	x29, x30, [sp, #-32]!
  439cd8:	mov	x29, sp
  439cdc:	str	x19, [sp, #16]
  439ce0:	ldr	x19, [x0, #16]
  439ce4:	mov	x1, #0x1                   	// #1
  439ce8:	bl	439a9c <nftw@plt+0x36f1c>
  439cec:	cbz	w0, 439d00 <nftw@plt+0x37180>
  439cf0:	ldrb	w0, [x19]
  439cf4:	ldr	x19, [sp, #16]
  439cf8:	ldp	x29, x30, [sp], #32
  439cfc:	ret
  439d00:	mov	w0, #0x0                   	// #0
  439d04:	b	439cf4 <nftw@plt+0x37174>
  439d08:	stp	x29, x30, [sp, #-80]!
  439d0c:	mov	x29, sp
  439d10:	stp	x19, x20, [sp, #16]
  439d14:	stp	x21, x22, [sp, #32]
  439d18:	stp	x23, x24, [sp, #48]
  439d1c:	stp	x25, x26, [sp, #64]
  439d20:	mov	x20, x0
  439d24:	mov	w24, #0x0                   	// #0
  439d28:	mov	w19, #0x0                   	// #0
  439d2c:	mov	x22, #0x0                   	// #0
  439d30:	mov	x23, #0x1                   	// #1
  439d34:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  439d38:	add	x25, x25, #0xd48
  439d3c:	mov	w26, #0x1                   	// #1
  439d40:	b	439d50 <nftw@plt+0x371d0>
  439d44:	cbz	w24, 439d80 <nftw@plt+0x37200>
  439d48:	add	w19, w19, #0x7
  439d4c:	tbz	w21, #7, 439d98 <nftw@plt+0x37218>
  439d50:	ldr	x21, [x20, #16]
  439d54:	mov	x1, x23
  439d58:	mov	x0, x20
  439d5c:	bl	439a9c <nftw@plt+0x36f1c>
  439d60:	cbz	w0, 439d94 <nftw@plt+0x37214>
  439d64:	ldrb	w21, [x21]
  439d68:	cmp	w19, #0x3f
  439d6c:	b.hi	439d44 <nftw@plt+0x371c4>  // b.pmore
  439d70:	and	x0, x21, #0x7f
  439d74:	lsl	x0, x0, x19
  439d78:	orr	x22, x22, x0
  439d7c:	b	439d48 <nftw@plt+0x371c8>
  439d80:	mov	x1, x25
  439d84:	mov	x0, x20
  439d88:	bl	439a40 <nftw@plt+0x36ec0>
  439d8c:	mov	w24, w26
  439d90:	b	439d48 <nftw@plt+0x371c8>
  439d94:	mov	x22, #0x0                   	// #0
  439d98:	mov	x0, x22
  439d9c:	ldp	x19, x20, [sp, #16]
  439da0:	ldp	x21, x22, [sp, #32]
  439da4:	ldp	x23, x24, [sp, #48]
  439da8:	ldp	x25, x26, [sp, #64]
  439dac:	ldp	x29, x30, [sp], #80
  439db0:	ret
  439db4:	stp	x29, x30, [sp, #-16]!
  439db8:	mov	x29, sp
  439dbc:	cmp	w1, #0x4
  439dc0:	b.eq	439e04 <nftw@plt+0x37284>  // b.none
  439dc4:	b.gt	439de4 <nftw@plt+0x37264>
  439dc8:	cmp	w1, #0x1
  439dcc:	b.eq	439df4 <nftw@plt+0x37274>  // b.none
  439dd0:	cmp	w1, #0x2
  439dd4:	b.ne	439e10 <nftw@plt+0x37290>  // b.any
  439dd8:	bl	439c7c <nftw@plt+0x370fc>
  439ddc:	and	x0, x0, #0xffff
  439de0:	b	439dfc <nftw@plt+0x3727c>
  439de4:	cmp	w1, #0x8
  439de8:	b.ne	439e10 <nftw@plt+0x37290>  // b.any
  439dec:	bl	439b88 <nftw@plt+0x37008>
  439df0:	b	439dfc <nftw@plt+0x3727c>
  439df4:	bl	439cd4 <nftw@plt+0x37154>
  439df8:	and	x0, x0, #0xff
  439dfc:	ldp	x29, x30, [sp], #16
  439e00:	ret
  439e04:	bl	439b08 <nftw@plt+0x36f88>
  439e08:	mov	w0, w0
  439e0c:	b	439dfc <nftw@plt+0x3727c>
  439e10:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  439e14:	add	x1, x1, #0xd68
  439e18:	bl	439a40 <nftw@plt+0x36ec0>
  439e1c:	mov	x0, #0x0                   	// #0
  439e20:	b	439dfc <nftw@plt+0x3727c>
  439e24:	stp	x29, x30, [sp, #-80]!
  439e28:	mov	x29, sp
  439e2c:	stp	x19, x20, [sp, #16]
  439e30:	stp	x21, x22, [sp, #32]
  439e34:	stp	x23, x24, [sp, #48]
  439e38:	stp	x25, x26, [sp, #64]
  439e3c:	mov	x21, x0
  439e40:	mov	w24, #0x0                   	// #0
  439e44:	mov	w19, #0x0                   	// #0
  439e48:	mov	x22, #0x0                   	// #0
  439e4c:	mov	x23, #0x1                   	// #1
  439e50:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  439e54:	add	x25, x25, #0xd88
  439e58:	mov	w26, #0x1                   	// #1
  439e5c:	b	439e6c <nftw@plt+0x372ec>
  439e60:	cbz	w24, 439e9c <nftw@plt+0x3731c>
  439e64:	add	w19, w19, #0x7
  439e68:	tbz	w20, #7, 439eb0 <nftw@plt+0x37330>
  439e6c:	ldr	x20, [x21, #16]
  439e70:	mov	x1, x23
  439e74:	mov	x0, x21
  439e78:	bl	439a9c <nftw@plt+0x36f1c>
  439e7c:	cbz	w0, 439ed0 <nftw@plt+0x37350>
  439e80:	ldrb	w20, [x20]
  439e84:	cmp	w19, #0x3f
  439e88:	b.hi	439e60 <nftw@plt+0x372e0>  // b.pmore
  439e8c:	and	x0, x20, #0x7f
  439e90:	lsl	x0, x0, x19
  439e94:	orr	x22, x22, x0
  439e98:	b	439e64 <nftw@plt+0x372e4>
  439e9c:	mov	x1, x25
  439ea0:	mov	x0, x21
  439ea4:	bl	439a40 <nftw@plt+0x36ec0>
  439ea8:	mov	w24, w26
  439eac:	b	439e64 <nftw@plt+0x372e4>
  439eb0:	and	w20, w20, #0x40
  439eb4:	cmp	w19, #0x3f
  439eb8:	mov	x0, #0xffffffffffffffff    	// #-1
  439ebc:	lsl	x0, x0, x19
  439ec0:	orr	x0, x22, x0
  439ec4:	ccmp	w20, #0x0, #0x4, ls  // ls = plast
  439ec8:	csel	x0, x0, x22, ne  // ne = any
  439ecc:	b	439ed4 <nftw@plt+0x37354>
  439ed0:	mov	x0, #0x0                   	// #0
  439ed4:	ldp	x19, x20, [sp, #16]
  439ed8:	ldp	x21, x22, [sp, #32]
  439edc:	ldp	x23, x24, [sp, #48]
  439ee0:	ldp	x25, x26, [sp, #64]
  439ee4:	ldp	x29, x30, [sp], #80
  439ee8:	ret
  439eec:	stp	x29, x30, [sp, #-32]!
  439ef0:	mov	x29, sp
  439ef4:	stp	x19, x20, [sp, #16]
  439ef8:	mov	x19, x0
  439efc:	ldr	x20, [x0, #16]
  439f00:	ldr	x1, [x0, #24]
  439f04:	mov	x0, x20
  439f08:	bl	402540 <strnlen@plt>
  439f0c:	add	x1, x0, #0x1
  439f10:	mov	x0, x19
  439f14:	bl	439a9c <nftw@plt+0x36f1c>
  439f18:	cmp	w0, #0x0
  439f1c:	csel	x0, x20, xzr, ne  // ne = any
  439f20:	ldp	x19, x20, [sp, #16]
  439f24:	ldp	x29, x30, [sp], #32
  439f28:	ret
  439f2c:	sub	sp, sp, #0x60
  439f30:	stp	x29, x30, [sp, #16]
  439f34:	add	x29, sp, #0x10
  439f38:	stp	x19, x20, [sp, #32]
  439f3c:	stp	x21, x22, [sp, #48]
  439f40:	mov	x19, x1
  439f44:	mov	w21, w2
  439f48:	mov	x22, x7
  439f4c:	ldr	x20, [sp, #96]
  439f50:	stp	xzr, xzr, [x20]
  439f54:	cmp	w0, #0x20
  439f58:	b.hi	439f9c <nftw@plt+0x3741c>  // b.pmore
  439f5c:	stp	x23, x24, [sp, #64]
  439f60:	stp	x25, x26, [sp, #80]
  439f64:	mov	w24, w3
  439f68:	mov	w23, w4
  439f6c:	mov	x26, x5
  439f70:	mov	x25, x6
  439f74:	cbz	w0, 43a4cc <nftw@plt+0x3794c>
  439f78:	sub	w0, w0, #0x1
  439f7c:	cmp	w0, #0x1f
  439f80:	b.hi	43a4ec <nftw@plt+0x3796c>  // b.pmore
  439f84:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  439f88:	add	x1, x1, #0x4
  439f8c:	ldrh	w0, [x1, w0, uxtw #1]
  439f90:	adr	x1, 439f9c <nftw@plt+0x3741c>
  439f94:	add	x0, x1, w0, sxth #2
  439f98:	br	x0
  439f9c:	mov	w1, #0x1f20                	// #7968
  439fa0:	cmp	w0, w1
  439fa4:	b.eq	43a478 <nftw@plt+0x378f8>  // b.none
  439fa8:	b.ls	439ff0 <nftw@plt+0x37470>  // b.plast
  439fac:	mov	w1, #0x1f21                	// #7969
  439fb0:	cmp	w0, w1
  439fb4:	b.ne	43a4d4 <nftw@plt+0x37954>  // b.any
  439fb8:	mov	w1, w2
  439fbc:	mov	x0, x19
  439fc0:	bl	439c58 <nftw@plt+0x370d8>
  439fc4:	cbz	x22, 43a4a8 <nftw@plt+0x37928>
  439fc8:	ldr	x1, [x22, #112]
  439fcc:	cmp	x1, x0
  439fd0:	b.ls	43a4b4 <nftw@plt+0x37934>  // b.plast
  439fd4:	mov	w1, #0x4                   	// #4
  439fd8:	str	w1, [x20]
  439fdc:	ldr	x1, [x22, #104]
  439fe0:	add	x0, x1, x0
  439fe4:	str	x0, [x20, #8]
  439fe8:	mov	w0, #0x1                   	// #1
  439fec:	b	43a048 <nftw@plt+0x374c8>
  439ff0:	mov	w1, #0x1f01                	// #7937
  439ff4:	cmp	w0, w1
  439ff8:	b.eq	43a45c <nftw@plt+0x378dc>  // b.none
  439ffc:	mov	w1, #0x1f02                	// #7938
  43a000:	cmp	w0, w1
  43a004:	b.ne	43a4d4 <nftw@plt+0x37954>  // b.any
  43a008:	mov	w0, #0x8                   	// #8
  43a00c:	str	w0, [x20]
  43a010:	mov	x0, x19
  43a014:	bl	439d08 <nftw@plt+0x37188>
  43a018:	str	x0, [x20, #8]
  43a01c:	mov	w0, #0x1                   	// #1
  43a020:	b	43a048 <nftw@plt+0x374c8>
  43a024:	mov	w21, #0x1                   	// #1
  43a028:	str	w21, [x20]
  43a02c:	mov	w1, w4
  43a030:	mov	x0, x19
  43a034:	bl	439db4 <nftw@plt+0x37234>
  43a038:	str	x0, [x20, #8]
  43a03c:	mov	w0, w21
  43a040:	ldp	x23, x24, [sp, #64]
  43a044:	ldp	x25, x26, [sp, #80]
  43a048:	ldp	x19, x20, [sp, #32]
  43a04c:	ldp	x21, x22, [sp, #48]
  43a050:	ldp	x29, x30, [sp, #16]
  43a054:	add	sp, sp, #0x60
  43a058:	ret
  43a05c:	mov	w0, #0xa                   	// #10
  43a060:	str	w0, [x20]
  43a064:	mov	x0, x19
  43a068:	bl	439c7c <nftw@plt+0x370fc>
  43a06c:	and	x1, x0, #0xffff
  43a070:	mov	x0, x19
  43a074:	bl	439a9c <nftw@plt+0x36f1c>
  43a078:	ldp	x23, x24, [sp, #64]
  43a07c:	ldp	x25, x26, [sp, #80]
  43a080:	b	43a048 <nftw@plt+0x374c8>
  43a084:	mov	w0, #0xa                   	// #10
  43a088:	str	w0, [x20]
  43a08c:	mov	x0, x19
  43a090:	bl	439b08 <nftw@plt+0x36f88>
  43a094:	mov	w1, w0
  43a098:	mov	x0, x19
  43a09c:	bl	439a9c <nftw@plt+0x36f1c>
  43a0a0:	ldp	x23, x24, [sp, #64]
  43a0a4:	ldp	x25, x26, [sp, #80]
  43a0a8:	b	43a048 <nftw@plt+0x374c8>
  43a0ac:	mov	w0, #0x2                   	// #2
  43a0b0:	str	w0, [x20]
  43a0b4:	mov	x0, x19
  43a0b8:	bl	439c7c <nftw@plt+0x370fc>
  43a0bc:	and	x0, x0, #0xffff
  43a0c0:	str	x0, [x20, #8]
  43a0c4:	mov	w0, #0x1                   	// #1
  43a0c8:	ldp	x23, x24, [sp, #64]
  43a0cc:	ldp	x25, x26, [sp, #80]
  43a0d0:	b	43a048 <nftw@plt+0x374c8>
  43a0d4:	mov	w0, #0x2                   	// #2
  43a0d8:	str	w0, [x20]
  43a0dc:	mov	x0, x19
  43a0e0:	bl	439b08 <nftw@plt+0x36f88>
  43a0e4:	mov	w0, w0
  43a0e8:	str	x0, [x20, #8]
  43a0ec:	mov	w0, #0x1                   	// #1
  43a0f0:	ldp	x23, x24, [sp, #64]
  43a0f4:	ldp	x25, x26, [sp, #80]
  43a0f8:	b	43a048 <nftw@plt+0x374c8>
  43a0fc:	mov	w0, #0x2                   	// #2
  43a100:	str	w0, [x20]
  43a104:	mov	x0, x19
  43a108:	bl	439b88 <nftw@plt+0x37008>
  43a10c:	str	x0, [x20, #8]
  43a110:	mov	w0, #0x1                   	// #1
  43a114:	ldp	x23, x24, [sp, #64]
  43a118:	ldp	x25, x26, [sp, #80]
  43a11c:	b	43a048 <nftw@plt+0x374c8>
  43a120:	mov	w0, #0x4                   	// #4
  43a124:	str	w0, [x20]
  43a128:	mov	x0, x19
  43a12c:	bl	439eec <nftw@plt+0x3736c>
  43a130:	str	x0, [x20, #8]
  43a134:	cmp	x0, #0x0
  43a138:	cset	w0, ne  // ne = any
  43a13c:	ldp	x23, x24, [sp, #64]
  43a140:	ldp	x25, x26, [sp, #80]
  43a144:	b	43a048 <nftw@plt+0x374c8>
  43a148:	mov	w0, #0xa                   	// #10
  43a14c:	str	w0, [x20]
  43a150:	mov	x0, x19
  43a154:	bl	439d08 <nftw@plt+0x37188>
  43a158:	mov	x1, x0
  43a15c:	mov	x0, x19
  43a160:	bl	439a9c <nftw@plt+0x36f1c>
  43a164:	ldp	x23, x24, [sp, #64]
  43a168:	ldp	x25, x26, [sp, #80]
  43a16c:	b	43a048 <nftw@plt+0x374c8>
  43a170:	mov	w0, #0xa                   	// #10
  43a174:	str	w0, [x20]
  43a178:	mov	x0, x19
  43a17c:	bl	439cd4 <nftw@plt+0x37154>
  43a180:	and	x1, x0, #0xff
  43a184:	mov	x0, x19
  43a188:	bl	439a9c <nftw@plt+0x36f1c>
  43a18c:	ldp	x23, x24, [sp, #64]
  43a190:	ldp	x25, x26, [sp, #80]
  43a194:	b	43a048 <nftw@plt+0x374c8>
  43a198:	mov	w0, #0x2                   	// #2
  43a19c:	str	w0, [x20]
  43a1a0:	mov	x0, x19
  43a1a4:	bl	439cd4 <nftw@plt+0x37154>
  43a1a8:	and	x0, x0, #0xff
  43a1ac:	str	x0, [x20, #8]
  43a1b0:	mov	w0, #0x1                   	// #1
  43a1b4:	ldp	x23, x24, [sp, #64]
  43a1b8:	ldp	x25, x26, [sp, #80]
  43a1bc:	b	43a048 <nftw@plt+0x374c8>
  43a1c0:	mov	w0, #0x2                   	// #2
  43a1c4:	str	w0, [x20]
  43a1c8:	mov	x0, x19
  43a1cc:	bl	439cd4 <nftw@plt+0x37154>
  43a1d0:	and	x0, x0, #0xff
  43a1d4:	str	x0, [x20, #8]
  43a1d8:	mov	w0, #0x1                   	// #1
  43a1dc:	ldp	x23, x24, [sp, #64]
  43a1e0:	ldp	x25, x26, [sp, #80]
  43a1e4:	b	43a048 <nftw@plt+0x374c8>
  43a1e8:	mov	w0, #0x3                   	// #3
  43a1ec:	str	w0, [x20]
  43a1f0:	mov	x0, x19
  43a1f4:	bl	439e24 <nftw@plt+0x372a4>
  43a1f8:	str	x0, [x20, #8]
  43a1fc:	mov	w0, #0x1                   	// #1
  43a200:	ldp	x23, x24, [sp, #64]
  43a204:	ldp	x25, x26, [sp, #80]
  43a208:	b	43a048 <nftw@plt+0x374c8>
  43a20c:	mov	w1, w2
  43a210:	mov	x0, x19
  43a214:	bl	439c58 <nftw@plt+0x370d8>
  43a218:	cmp	x25, x0
  43a21c:	b.ls	43a240 <nftw@plt+0x376c0>  // b.plast
  43a220:	mov	w1, #0x4                   	// #4
  43a224:	str	w1, [x20]
  43a228:	add	x0, x26, x0
  43a22c:	str	x0, [x20, #8]
  43a230:	mov	w0, #0x1                   	// #1
  43a234:	ldp	x23, x24, [sp, #64]
  43a238:	ldp	x25, x26, [sp, #80]
  43a23c:	b	43a048 <nftw@plt+0x374c8>
  43a240:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43a244:	add	x1, x1, #0xdb0
  43a248:	mov	x0, x19
  43a24c:	bl	439a40 <nftw@plt+0x36ec0>
  43a250:	mov	w0, #0x0                   	// #0
  43a254:	ldp	x23, x24, [sp, #64]
  43a258:	ldp	x25, x26, [sp, #80]
  43a25c:	b	43a048 <nftw@plt+0x374c8>
  43a260:	mov	w0, #0x2                   	// #2
  43a264:	str	w0, [x20]
  43a268:	mov	x0, x19
  43a26c:	bl	439d08 <nftw@plt+0x37188>
  43a270:	str	x0, [x20, #8]
  43a274:	mov	w0, #0x1                   	// #1
  43a278:	ldp	x23, x24, [sp, #64]
  43a27c:	ldp	x25, x26, [sp, #80]
  43a280:	b	43a048 <nftw@plt+0x374c8>
  43a284:	mov	w0, #0x6                   	// #6
  43a288:	str	w0, [x20]
  43a28c:	cmp	w3, #0x2
  43a290:	b.eq	43a2b4 <nftw@plt+0x37734>  // b.none
  43a294:	mov	w1, w2
  43a298:	mov	x0, x19
  43a29c:	bl	439c58 <nftw@plt+0x370d8>
  43a2a0:	str	x0, [x20, #8]
  43a2a4:	mov	w0, #0x1                   	// #1
  43a2a8:	ldp	x23, x24, [sp, #64]
  43a2ac:	ldp	x25, x26, [sp, #80]
  43a2b0:	b	43a048 <nftw@plt+0x374c8>
  43a2b4:	mov	w1, w4
  43a2b8:	mov	x0, x19
  43a2bc:	bl	439db4 <nftw@plt+0x37234>
  43a2c0:	str	x0, [x20, #8]
  43a2c4:	mov	w0, #0x1                   	// #1
  43a2c8:	ldp	x23, x24, [sp, #64]
  43a2cc:	ldp	x25, x26, [sp, #80]
  43a2d0:	b	43a048 <nftw@plt+0x374c8>
  43a2d4:	mov	w0, #0x5                   	// #5
  43a2d8:	str	w0, [x20]
  43a2dc:	mov	x0, x19
  43a2e0:	bl	439cd4 <nftw@plt+0x37154>
  43a2e4:	and	x0, x0, #0xff
  43a2e8:	str	x0, [x20, #8]
  43a2ec:	mov	w0, #0x1                   	// #1
  43a2f0:	ldp	x23, x24, [sp, #64]
  43a2f4:	ldp	x25, x26, [sp, #80]
  43a2f8:	b	43a048 <nftw@plt+0x374c8>
  43a2fc:	mov	w0, #0x5                   	// #5
  43a300:	str	w0, [x20]
  43a304:	mov	x0, x19
  43a308:	bl	439c7c <nftw@plt+0x370fc>
  43a30c:	and	x0, x0, #0xffff
  43a310:	str	x0, [x20, #8]
  43a314:	mov	w0, #0x1                   	// #1
  43a318:	ldp	x23, x24, [sp, #64]
  43a31c:	ldp	x25, x26, [sp, #80]
  43a320:	b	43a048 <nftw@plt+0x374c8>
  43a324:	mov	w0, #0x5                   	// #5
  43a328:	str	w0, [x20]
  43a32c:	mov	x0, x19
  43a330:	bl	439b08 <nftw@plt+0x36f88>
  43a334:	mov	w0, w0
  43a338:	str	x0, [x20, #8]
  43a33c:	mov	w0, #0x1                   	// #1
  43a340:	ldp	x23, x24, [sp, #64]
  43a344:	ldp	x25, x26, [sp, #80]
  43a348:	b	43a048 <nftw@plt+0x374c8>
  43a34c:	mov	w0, #0x5                   	// #5
  43a350:	str	w0, [x20]
  43a354:	mov	x0, x19
  43a358:	bl	439b88 <nftw@plt+0x37008>
  43a35c:	str	x0, [x20, #8]
  43a360:	mov	w0, #0x1                   	// #1
  43a364:	ldp	x23, x24, [sp, #64]
  43a368:	ldp	x25, x26, [sp, #80]
  43a36c:	b	43a048 <nftw@plt+0x374c8>
  43a370:	mov	w0, #0x5                   	// #5
  43a374:	str	w0, [x20]
  43a378:	mov	x0, x19
  43a37c:	bl	439d08 <nftw@plt+0x37188>
  43a380:	str	x0, [x20, #8]
  43a384:	mov	w0, #0x1                   	// #1
  43a388:	ldp	x23, x24, [sp, #64]
  43a38c:	ldp	x25, x26, [sp, #80]
  43a390:	b	43a048 <nftw@plt+0x374c8>
  43a394:	mov	x0, x19
  43a398:	bl	439d08 <nftw@plt+0x37188>
  43a39c:	str	x20, [sp]
  43a3a0:	mov	x7, x22
  43a3a4:	mov	x6, x25
  43a3a8:	mov	x5, x26
  43a3ac:	mov	w4, w23
  43a3b0:	mov	w3, w24
  43a3b4:	mov	w2, w21
  43a3b8:	mov	x1, x19
  43a3bc:	bl	439f2c <nftw@plt+0x373ac>
  43a3c0:	ldp	x23, x24, [sp, #64]
  43a3c4:	ldp	x25, x26, [sp, #80]
  43a3c8:	b	43a048 <nftw@plt+0x374c8>
  43a3cc:	mov	w0, #0x8                   	// #8
  43a3d0:	str	w0, [x20]
  43a3d4:	mov	w1, w2
  43a3d8:	mov	x0, x19
  43a3dc:	bl	439c58 <nftw@plt+0x370d8>
  43a3e0:	str	x0, [x20, #8]
  43a3e4:	mov	w0, #0x1                   	// #1
  43a3e8:	ldp	x23, x24, [sp, #64]
  43a3ec:	ldp	x25, x26, [sp, #80]
  43a3f0:	b	43a048 <nftw@plt+0x374c8>
  43a3f4:	mov	w0, #0xb                   	// #11
  43a3f8:	str	w0, [x20]
  43a3fc:	mov	x0, x19
  43a400:	bl	439d08 <nftw@plt+0x37188>
  43a404:	mov	x1, x0
  43a408:	mov	x0, x19
  43a40c:	bl	439a9c <nftw@plt+0x36f1c>
  43a410:	ldp	x23, x24, [sp, #64]
  43a414:	ldp	x25, x26, [sp, #80]
  43a418:	b	43a048 <nftw@plt+0x374c8>
  43a41c:	mov	w0, #0x2                   	// #2
  43a420:	str	w0, [x20]
  43a424:	mov	x0, #0x1                   	// #1
  43a428:	str	x0, [x20, #8]
  43a42c:	ldp	x23, x24, [sp, #64]
  43a430:	ldp	x25, x26, [sp, #80]
  43a434:	b	43a048 <nftw@plt+0x374c8>
  43a438:	mov	w0, #0x9                   	// #9
  43a43c:	str	w0, [x20]
  43a440:	mov	x0, x19
  43a444:	bl	439b88 <nftw@plt+0x37008>
  43a448:	str	x0, [x20, #8]
  43a44c:	mov	w0, #0x1                   	// #1
  43a450:	ldp	x23, x24, [sp, #64]
  43a454:	ldp	x25, x26, [sp, #80]
  43a458:	b	43a048 <nftw@plt+0x374c8>
  43a45c:	mov	w0, #0x8                   	// #8
  43a460:	str	w0, [x20]
  43a464:	mov	x0, x19
  43a468:	bl	439d08 <nftw@plt+0x37188>
  43a46c:	str	x0, [x20, #8]
  43a470:	mov	w0, #0x1                   	// #1
  43a474:	b	43a048 <nftw@plt+0x374c8>
  43a478:	mov	w1, w2
  43a47c:	mov	x0, x19
  43a480:	bl	439c58 <nftw@plt+0x370d8>
  43a484:	str	x0, [x20, #8]
  43a488:	cbz	x22, 43a49c <nftw@plt+0x3791c>
  43a48c:	mov	w0, #0x7                   	// #7
  43a490:	str	w0, [x20]
  43a494:	mov	w0, #0x1                   	// #1
  43a498:	b	43a048 <nftw@plt+0x374c8>
  43a49c:	str	wzr, [x20]
  43a4a0:	mov	w0, #0x1                   	// #1
  43a4a4:	b	43a048 <nftw@plt+0x374c8>
  43a4a8:	str	wzr, [x20]
  43a4ac:	mov	w0, #0x1                   	// #1
  43a4b0:	b	43a048 <nftw@plt+0x374c8>
  43a4b4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43a4b8:	add	x1, x1, #0xdd0
  43a4bc:	mov	x0, x19
  43a4c0:	bl	439a40 <nftw@plt+0x36ec0>
  43a4c4:	mov	w0, #0x0                   	// #0
  43a4c8:	b	43a048 <nftw@plt+0x374c8>
  43a4cc:	ldp	x23, x24, [sp, #64]
  43a4d0:	ldp	x25, x26, [sp, #80]
  43a4d4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43a4d8:	add	x1, x1, #0xdf8
  43a4dc:	mov	x0, x19
  43a4e0:	bl	439a40 <nftw@plt+0x36ec0>
  43a4e4:	mov	w0, #0x0                   	// #0
  43a4e8:	b	43a048 <nftw@plt+0x374c8>
  43a4ec:	ldp	x23, x24, [sp, #64]
  43a4f0:	ldp	x25, x26, [sp, #80]
  43a4f4:	b	43a4d4 <nftw@plt+0x37954>
  43a4f8:	ldp	x23, x24, [sp, #64]
  43a4fc:	ldp	x25, x26, [sp, #80]
  43a500:	b	43a4d4 <nftw@plt+0x37954>
  43a504:	sub	sp, sp, #0xd0
  43a508:	stp	x29, x30, [sp, #16]
  43a50c:	add	x29, sp, #0x10
  43a510:	stp	x19, x20, [sp, #32]
  43a514:	stp	x25, x26, [sp, #80]
  43a518:	mov	x20, x0
  43a51c:	mov	x26, x3
  43a520:	str	x4, [sp, #120]
  43a524:	ldr	x0, [x1, #16]
  43a528:	cmp	x0, x2
  43a52c:	b.hi	43a5dc <nftw@plt+0x37a5c>  // b.pmore
  43a530:	mov	x19, x1
  43a534:	sub	x5, x2, x0
  43a538:	ldr	x4, [x1, #8]
  43a53c:	cmp	x5, x4
  43a540:	b.cs	43a5dc <nftw@plt+0x37a5c>  // b.hs, b.nlast
  43a544:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43a548:	add	x3, x3, #0x380
  43a54c:	str	x3, [sp, #144]
  43a550:	ldr	x1, [x20, #56]
  43a554:	str	x1, [sp, #152]
  43a558:	ldr	x1, [x19]
  43a55c:	add	x1, x1, x5
  43a560:	str	x1, [sp, #160]
  43a564:	add	x0, x0, x4
  43a568:	sub	x0, x0, x2
  43a56c:	str	x0, [sp, #168]
  43a570:	ldr	w0, [x20, #120]
  43a574:	str	w0, [sp, #176]
  43a578:	str	x26, [sp, #184]
  43a57c:	ldr	x0, [sp, #120]
  43a580:	str	x0, [sp, #192]
  43a584:	str	wzr, [sp, #200]
  43a588:	add	x0, sp, #0x90
  43a58c:	bl	439d08 <nftw@plt+0x37188>
  43a590:	mov	x1, x0
  43a594:	cbz	x0, 43a60c <nftw@plt+0x37a8c>
  43a598:	stp	x23, x24, [sp, #64]
  43a59c:	ldr	x3, [sp, #120]
  43a5a0:	mov	x2, x26
  43a5a4:	add	x0, x19, #0x58
  43a5a8:	bl	4396f0 <nftw@plt+0x36b70>
  43a5ac:	mov	x23, x0
  43a5b0:	cbz	x0, 43a728 <nftw@plt+0x37ba8>
  43a5b4:	stp	x21, x22, [sp, #48]
  43a5b8:	ldr	x0, [x0, #16]
  43a5bc:	mov	x21, #0x0                   	// #0
  43a5c0:	mov	x25, #0x0                   	// #0
  43a5c4:	cbz	x0, 43a718 <nftw@plt+0x37b98>
  43a5c8:	stp	x27, x28, [sp, #96]
  43a5cc:	add	x27, sp, #0x90
  43a5d0:	add	x24, sp, #0x80
  43a5d4:	mov	w28, #0x2007                	// #8199
  43a5d8:	b	43a684 <nftw@plt+0x37b04>
  43a5dc:	mov	w2, #0x0                   	// #0
  43a5e0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43a5e4:	add	x1, x1, #0xe10
  43a5e8:	ldr	x0, [sp, #120]
  43a5ec:	blr	x26
  43a5f0:	mov	x25, #0x0                   	// #0
  43a5f4:	mov	x0, x25
  43a5f8:	ldp	x19, x20, [sp, #32]
  43a5fc:	ldp	x25, x26, [sp, #80]
  43a600:	ldp	x29, x30, [sp, #16]
  43a604:	add	sp, sp, #0xd0
  43a608:	ret
  43a60c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43a610:	add	x1, x1, #0xe40
  43a614:	add	x0, sp, #0x90
  43a618:	bl	439a40 <nftw@plt+0x36ec0>
  43a61c:	mov	x25, #0x0                   	// #0
  43a620:	b	43a5f4 <nftw@plt+0x37a74>
  43a624:	cmp	w0, #0x6e
  43a628:	b.eq	43a634 <nftw@plt+0x37ab4>  // b.none
  43a62c:	cmp	w0, w28
  43a630:	b.ne	43a674 <nftw@plt+0x37af4>  // b.any
  43a634:	ldr	w0, [sp, #128]
  43a638:	cmp	w0, #0x4
  43a63c:	b.ne	43a674 <nftw@plt+0x37af4>  // b.any
  43a640:	ldr	x25, [sp, #136]
  43a644:	ldp	x21, x22, [sp, #48]
  43a648:	ldp	x23, x24, [sp, #64]
  43a64c:	ldp	x27, x28, [sp, #96]
  43a650:	b	43a5f4 <nftw@plt+0x37a74>
  43a654:	ldr	x5, [sp, #120]
  43a658:	mov	x4, x26
  43a65c:	mov	x3, x24
  43a660:	mov	x1, x19
  43a664:	mov	x0, x20
  43a668:	bl	43a734 <nftw@plt+0x37bb4>
  43a66c:	cmp	x0, #0x0
  43a670:	csel	x25, x25, x0, eq  // eq = none
  43a674:	add	x21, x21, #0x1
  43a678:	ldr	x0, [x23, #16]
  43a67c:	cmp	x0, x21
  43a680:	b.ls	43a6f4 <nftw@plt+0x37b74>  // b.plast
  43a684:	lsl	x22, x21, #3
  43a688:	ldr	x0, [x23, #24]
  43a68c:	add	x0, x0, x22
  43a690:	ldr	w0, [x0, #4]
  43a694:	str	x24, [sp]
  43a698:	ldr	x7, [x20, #8]
  43a69c:	ldr	x6, [x20, #112]
  43a6a0:	ldr	x5, [x20, #104]
  43a6a4:	ldr	w4, [x19, #48]
  43a6a8:	ldr	w3, [x19, #40]
  43a6ac:	ldr	w2, [x19, #44]
  43a6b0:	mov	x1, x27
  43a6b4:	bl	439f2c <nftw@plt+0x373ac>
  43a6b8:	cbz	w0, 43a704 <nftw@plt+0x37b84>
  43a6bc:	ldr	x0, [x23, #24]
  43a6c0:	add	x2, x0, x22
  43a6c4:	ldr	w0, [x0, x22]
  43a6c8:	cmp	w0, #0x47
  43a6cc:	b.eq	43a654 <nftw@plt+0x37ad4>  // b.none
  43a6d0:	b.hi	43a624 <nftw@plt+0x37aa4>  // b.pmore
  43a6d4:	cmp	w0, #0x3
  43a6d8:	b.ne	43a674 <nftw@plt+0x37af4>  // b.any
  43a6dc:	cbnz	x25, 43a674 <nftw@plt+0x37af4>
  43a6e0:	ldr	w0, [sp, #128]
  43a6e4:	cmp	w0, #0x4
  43a6e8:	ldr	x0, [sp, #136]
  43a6ec:	csel	x25, x0, x25, eq  // eq = none
  43a6f0:	b	43a674 <nftw@plt+0x37af4>
  43a6f4:	ldp	x21, x22, [sp, #48]
  43a6f8:	ldp	x23, x24, [sp, #64]
  43a6fc:	ldp	x27, x28, [sp, #96]
  43a700:	b	43a5f4 <nftw@plt+0x37a74>
  43a704:	mov	x25, #0x0                   	// #0
  43a708:	ldp	x21, x22, [sp, #48]
  43a70c:	ldp	x23, x24, [sp, #64]
  43a710:	ldp	x27, x28, [sp, #96]
  43a714:	b	43a5f4 <nftw@plt+0x37a74>
  43a718:	mov	x25, #0x0                   	// #0
  43a71c:	ldp	x21, x22, [sp, #48]
  43a720:	ldp	x23, x24, [sp, #64]
  43a724:	b	43a5f4 <nftw@plt+0x37a74>
  43a728:	mov	x25, x0
  43a72c:	ldp	x23, x24, [sp, #64]
  43a730:	b	43a5f4 <nftw@plt+0x37a74>
  43a734:	stp	x29, x30, [sp, #-48]!
  43a738:	mov	x29, sp
  43a73c:	stp	x19, x20, [sp, #16]
  43a740:	stp	x21, x22, [sp, #32]
  43a744:	mov	x19, x0
  43a748:	mov	x6, x3
  43a74c:	mov	x20, x4
  43a750:	mov	x21, x5
  43a754:	ldr	w3, [x2]
  43a758:	cmp	w3, #0x31
  43a75c:	b.eq	43a76c <nftw@plt+0x37bec>  // b.none
  43a760:	mov	x0, #0x0                   	// #0
  43a764:	cmp	w3, #0x47
  43a768:	b.ne	43a79c <nftw@plt+0x37c1c>  // b.any
  43a76c:	ldr	w0, [x2, #4]
  43a770:	cmp	w0, #0x20
  43a774:	b.eq	43a838 <nftw@plt+0x37cb8>  // b.none
  43a778:	ldr	w2, [x6]
  43a77c:	cmp	w2, #0x6
  43a780:	b.eq	43a7ac <nftw@plt+0x37c2c>  // b.none
  43a784:	cmp	w2, #0x2
  43a788:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  43a78c:	b.eq	43a7e4 <nftw@plt+0x37c64>  // b.none
  43a790:	mov	x0, #0x0                   	// #0
  43a794:	cmp	w2, #0x7
  43a798:	b.eq	43a7fc <nftw@plt+0x37c7c>  // b.none
  43a79c:	ldp	x19, x20, [sp, #16]
  43a7a0:	ldp	x21, x22, [sp, #32]
  43a7a4:	ldp	x29, x30, [sp], #48
  43a7a8:	ret
  43a7ac:	ldr	x22, [x6, #8]
  43a7b0:	mov	x2, x22
  43a7b4:	ldr	x1, [x19, #48]
  43a7b8:	ldr	x0, [x19, #40]
  43a7bc:	bl	439494 <nftw@plt+0x36914>
  43a7c0:	cbz	x0, 43a79c <nftw@plt+0x37c1c>
  43a7c4:	ldr	x2, [x0, #24]
  43a7c8:	mov	x4, x21
  43a7cc:	mov	x3, x20
  43a7d0:	sub	x2, x22, x2
  43a7d4:	mov	x1, x0
  43a7d8:	mov	x0, x19
  43a7dc:	bl	43a504 <nftw@plt+0x37984>
  43a7e0:	b	43a79c <nftw@plt+0x37c1c>
  43a7e4:	mov	x4, x21
  43a7e8:	mov	x3, x20
  43a7ec:	ldr	x2, [x6, #8]
  43a7f0:	mov	x0, x19
  43a7f4:	bl	43a504 <nftw@plt+0x37984>
  43a7f8:	b	43a79c <nftw@plt+0x37c1c>
  43a7fc:	ldr	x19, [x19, #8]
  43a800:	ldr	x22, [x6, #8]
  43a804:	mov	x2, x22
  43a808:	ldr	x1, [x19, #48]
  43a80c:	ldr	x0, [x19, #40]
  43a810:	bl	439494 <nftw@plt+0x36914>
  43a814:	cbz	x0, 43a79c <nftw@plt+0x37c1c>
  43a818:	ldr	x2, [x0, #24]
  43a81c:	mov	x4, x21
  43a820:	mov	x3, x20
  43a824:	sub	x2, x22, x2
  43a828:	mov	x1, x0
  43a82c:	mov	x0, x19
  43a830:	bl	43a504 <nftw@plt+0x37984>
  43a834:	b	43a79c <nftw@plt+0x37c1c>
  43a838:	mov	x0, #0x0                   	// #0
  43a83c:	b	43a79c <nftw@plt+0x37c1c>
  43a840:	sub	sp, sp, #0x170
  43a844:	stp	x29, x30, [sp, #48]
  43a848:	add	x29, sp, #0x30
  43a84c:	stp	x19, x20, [sp, #64]
  43a850:	stp	x21, x22, [sp, #80]
  43a854:	stp	x23, x24, [sp, #96]
  43a858:	stp	x25, x26, [sp, #112]
  43a85c:	stp	x27, x28, [sp, #128]
  43a860:	str	x0, [sp, #192]
  43a864:	str	x1, [sp, #200]
  43a868:	mov	x24, x2
  43a86c:	str	x5, [sp, #224]
  43a870:	str	x6, [sp, #184]
  43a874:	str	w7, [sp, #236]
  43a878:	ldr	x22, [sp, #392]
  43a87c:	add	x0, sp, #0x130
  43a880:	str	x0, [sp, #216]
  43a884:	mov	x25, x0
  43a888:	add	x0, sp, #0xf0
  43a88c:	str	x0, [sp, #208]
  43a890:	str	x25, [sp, #176]
  43a894:	mov	x28, x4
  43a898:	mov	x26, x3
  43a89c:	ldr	x27, [sp, #368]
  43a8a0:	ldr	x0, [x24, #24]
  43a8a4:	cbz	x0, 43ac9c <nftw@plt+0x3811c>
  43a8a8:	mov	x0, x24
  43a8ac:	bl	439d08 <nftw@plt+0x37188>
  43a8b0:	mov	x1, x0
  43a8b4:	cbz	x0, 43aca4 <nftw@plt+0x38124>
  43a8b8:	ldr	x3, [sp, #384]
  43a8bc:	ldr	x2, [sp, #376]
  43a8c0:	add	x0, x22, #0x58
  43a8c4:	bl	4396f0 <nftw@plt+0x36b70>
  43a8c8:	mov	x20, x0
  43a8cc:	cbz	x0, 43acac <nftw@plt+0x3812c>
  43a8d0:	ldr	x0, [sp, #408]
  43a8d4:	cbz	x0, 43a8e4 <nftw@plt+0x37d64>
  43a8d8:	ldr	w0, [x20, #8]
  43a8dc:	ldr	x1, [sp, #408]
  43a8e0:	str	w0, [x1]
  43a8e4:	ldr	x0, [x20, #16]
  43a8e8:	cbz	x0, 43ab14 <nftw@plt+0x37f94>
  43a8ec:	mov	x21, #0x0                   	// #0
  43a8f0:	str	wzr, [sp, #168]
  43a8f4:	str	xzr, [sp, #160]
  43a8f8:	str	wzr, [sp, #232]
  43a8fc:	mov	w23, #0x0                   	// #0
  43a900:	str	xzr, [sp, #152]
  43a904:	str	wzr, [sp, #172]
  43a908:	str	xzr, [sp, #144]
  43a90c:	b	43a9cc <nftw@plt+0x37e4c>
  43a910:	cmp	w0, #0x3
  43a914:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43a918:	ldr	w0, [x20, #8]
  43a91c:	cmp	w0, #0x11
  43a920:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43a924:	ldr	w0, [sp, #304]
  43a928:	cmp	w0, #0x4
  43a92c:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43a930:	ldr	x0, [sp, #312]
  43a934:	str	x0, [x22, #64]
  43a938:	b	43a9bc <nftw@plt+0x37e3c>
  43a93c:	cmp	w0, #0x1b
  43a940:	b.eq	43aa64 <nftw@plt+0x37ee4>  // b.none
  43a944:	cmp	w0, #0x55
  43a948:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43a94c:	ldr	w0, [sp, #304]
  43a950:	cmp	w0, #0x2
  43a954:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43a958:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43a95c:	ldr	x0, [sp, #312]
  43a960:	str	x0, [sp, #160]
  43a964:	mov	w0, #0x1                   	// #1
  43a968:	str	w0, [sp, #168]
  43a96c:	b	43a9bc <nftw@plt+0x37e3c>
  43a970:	ldr	w0, [sp, #304]
  43a974:	cmp	w0, #0x1
  43a978:	b.eq	43a99c <nftw@plt+0x37e1c>  // b.none
  43a97c:	cmp	w0, #0x2
  43a980:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43a984:	ldr	x0, [sp, #312]
  43a988:	str	x0, [sp, #152]
  43a98c:	mov	w0, #0x1                   	// #1
  43a990:	str	w0, [sp, #232]
  43a994:	mov	w23, w0
  43a998:	b	43a9bc <nftw@plt+0x37e3c>
  43a99c:	ldr	x0, [sp, #312]
  43a9a0:	str	x0, [sp, #152]
  43a9a4:	mov	w0, #0x1                   	// #1
  43a9a8:	mov	w23, w0
  43a9ac:	b	43a9bc <nftw@plt+0x37e3c>
  43a9b0:	ldr	w0, [x20, #8]
  43a9b4:	cmp	w0, #0x11
  43a9b8:	b.eq	43aa48 <nftw@plt+0x37ec8>  // b.none
  43a9bc:	add	x21, x21, #0x1
  43a9c0:	ldr	x0, [x20, #16]
  43a9c4:	cmp	x0, x21
  43a9c8:	b.ls	43aa88 <nftw@plt+0x37f08>  // b.plast
  43a9cc:	lsl	x19, x21, #3
  43a9d0:	ldr	x0, [x20, #24]
  43a9d4:	add	x0, x0, x19
  43a9d8:	ldr	w0, [x0, #4]
  43a9dc:	str	x25, [sp]
  43a9e0:	mov	x7, x27
  43a9e4:	mov	x6, x28
  43a9e8:	mov	x5, x26
  43a9ec:	ldr	w4, [x22, #48]
  43a9f0:	ldr	w3, [x22, #40]
  43a9f4:	ldr	w2, [x22, #44]
  43a9f8:	mov	x1, x24
  43a9fc:	bl	439f2c <nftw@plt+0x373ac>
  43aa00:	cbz	w0, 43acbc <nftw@plt+0x3813c>
  43aa04:	ldr	x0, [x20, #24]
  43aa08:	ldr	w0, [x0, x19]
  43aa0c:	cmp	w0, #0x12
  43aa10:	b.eq	43a970 <nftw@plt+0x37df0>  // b.none
  43aa14:	b.hi	43a93c <nftw@plt+0x37dbc>  // b.pmore
  43aa18:	cmp	w0, #0x10
  43aa1c:	b.eq	43a9b0 <nftw@plt+0x37e30>  // b.none
  43aa20:	cmp	w0, #0x11
  43aa24:	b.ne	43a910 <nftw@plt+0x37d90>  // b.any
  43aa28:	ldr	w0, [sp, #304]
  43aa2c:	cmp	w0, #0x1
  43aa30:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43aa34:	ldr	x0, [sp, #312]
  43aa38:	str	x0, [sp, #144]
  43aa3c:	mov	w0, #0x1                   	// #1
  43aa40:	str	w0, [sp, #172]
  43aa44:	b	43a9bc <nftw@plt+0x37e3c>
  43aa48:	ldr	w0, [sp, #304]
  43aa4c:	cmp	w0, #0x2
  43aa50:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43aa54:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43aa58:	ldr	x0, [sp, #312]
  43aa5c:	str	x0, [x22, #56]
  43aa60:	b	43a9bc <nftw@plt+0x37e3c>
  43aa64:	ldr	w0, [x20, #8]
  43aa68:	cmp	w0, #0x11
  43aa6c:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43aa70:	ldr	w0, [sp, #304]
  43aa74:	cmp	w0, #0x4
  43aa78:	b.ne	43a9bc <nftw@plt+0x37e3c>  // b.any
  43aa7c:	ldr	x0, [sp, #312]
  43aa80:	str	x0, [x22, #72]
  43aa84:	b	43a9bc <nftw@plt+0x37e3c>
  43aa88:	ldr	w0, [x20, #8]
  43aa8c:	cmp	w0, #0x2e
  43aa90:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  43aa94:	b.ne	43ab14 <nftw@plt+0x37f94>  // b.any
  43aa98:	ldr	w0, [sp, #168]
  43aa9c:	cbnz	w0, 43ab70 <nftw@plt+0x37ff0>
  43aaa0:	ldr	w0, [sp, #172]
  43aaa4:	cmp	w0, #0x0
  43aaa8:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  43aaac:	b.eq	43ab14 <nftw@plt+0x37f94>  // b.none
  43aab0:	ldr	x1, [sp, #152]
  43aab4:	ldr	x2, [sp, #144]
  43aab8:	add	x0, x1, x2
  43aabc:	ldr	w3, [sp, #232]
  43aac0:	cmp	w3, #0x0
  43aac4:	csel	x0, x0, x1, ne  // ne = any
  43aac8:	str	x2, [sp, #304]
  43aacc:	str	x0, [sp, #312]
  43aad0:	str	x22, [sp, #320]
  43aad4:	ldr	x0, [sp, #216]
  43aad8:	ldp	x0, x1, [x0]
  43aadc:	ldr	x2, [sp, #208]
  43aae0:	stp	x0, x1, [x2]
  43aae4:	str	x22, [x2, #16]
  43aae8:	ldr	x5, [sp, #400]
  43aaec:	ldr	x4, [sp, #384]
  43aaf0:	ldr	x3, [sp, #376]
  43aaf4:	ldr	x1, [sp, #200]
  43aaf8:	ldr	x0, [sp, #192]
  43aafc:	bl	439968 <nftw@plt+0x36de8>
  43ab00:	mov	w19, w0
  43ab04:	cbz	w0, 43acc0 <nftw@plt+0x38140>
  43ab08:	ldr	w0, [x20, #8]
  43ab0c:	cmp	w0, #0x11
  43ab10:	b.eq	43acb4 <nftw@plt+0x38134>  // b.none
  43ab14:	ldr	w0, [x20, #12]
  43ab18:	cbz	w0, 43a8a0 <nftw@plt+0x37d20>
  43ab1c:	str	xzr, [sp, #40]
  43ab20:	ldr	x0, [sp, #400]
  43ab24:	str	x0, [sp, #32]
  43ab28:	str	x22, [sp, #24]
  43ab2c:	ldr	x0, [sp, #384]
  43ab30:	str	x0, [sp, #16]
  43ab34:	ldr	x0, [sp, #376]
  43ab38:	str	x0, [sp, #8]
  43ab3c:	str	x27, [sp]
  43ab40:	ldr	w7, [sp, #236]
  43ab44:	ldr	x6, [sp, #184]
  43ab48:	ldr	x5, [sp, #224]
  43ab4c:	mov	x4, x28
  43ab50:	mov	x3, x26
  43ab54:	mov	x2, x24
  43ab58:	ldr	x1, [sp, #200]
  43ab5c:	ldr	x0, [sp, #192]
  43ab60:	bl	43a840 <nftw@plt+0x37cc0>
  43ab64:	mov	w19, w0
  43ab68:	cbnz	w0, 43a8a0 <nftw@plt+0x37d20>
  43ab6c:	b	43acc0 <nftw@plt+0x38140>
  43ab70:	ldr	x0, [sp, #160]
  43ab74:	ldr	x1, [sp, #184]
  43ab78:	cmp	x0, x1
  43ab7c:	b.cs	43abcc <nftw@plt+0x3804c>  // b.hs, b.nlast
  43ab80:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43ab84:	add	x0, x0, #0x3b0
  43ab88:	str	x0, [sp, #304]
  43ab8c:	ldr	x0, [sp, #224]
  43ab90:	str	x0, [sp, #312]
  43ab94:	ldr	x1, [sp, #160]
  43ab98:	add	x0, x0, x1
  43ab9c:	str	x0, [sp, #320]
  43aba0:	ldr	x0, [sp, #184]
  43aba4:	sub	x0, x0, x1
  43aba8:	str	x0, [sp, #328]
  43abac:	ldr	w0, [sp, #236]
  43abb0:	str	w0, [sp, #336]
  43abb4:	ldr	x0, [sp, #376]
  43abb8:	str	x0, [sp, #344]
  43abbc:	ldr	x0, [sp, #384]
  43abc0:	str	x0, [sp, #352]
  43abc4:	str	wzr, [sp, #360]
  43abc8:	b	43abf0 <nftw@plt+0x38070>
  43abcc:	mov	w2, #0x0                   	// #0
  43abd0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43abd4:	add	x1, x1, #0xe70
  43abd8:	ldr	x0, [sp, #384]
  43abdc:	ldr	x3, [sp, #376]
  43abe0:	blr	x3
  43abe4:	mov	w19, #0x0                   	// #0
  43abe8:	b	43acc0 <nftw@plt+0x38140>
  43abec:	str	x23, [sp, #144]
  43abf0:	ldr	w19, [sp, #360]
  43abf4:	cbnz	w19, 43abe4 <nftw@plt+0x38064>
  43abf8:	ldr	w1, [x22, #48]
  43abfc:	ldr	x23, [sp, #176]
  43ac00:	mov	x0, x23
  43ac04:	bl	439db4 <nftw@plt+0x37234>
  43ac08:	mov	x21, x0
  43ac0c:	ldr	w1, [x22, #48]
  43ac10:	mov	x0, x23
  43ac14:	bl	439db4 <nftw@plt+0x37234>
  43ac18:	mov	x23, x0
  43ac1c:	orr	x0, x21, x0
  43ac20:	cbz	x0, 43ac80 <nftw@plt+0x38100>
  43ac24:	ldr	w1, [x22, #48]
  43ac28:	mov	x0, x21
  43ac2c:	bl	439428 <nftw@plt+0x368a8>
  43ac30:	cbnz	w0, 43abec <nftw@plt+0x3806c>
  43ac34:	ldr	x0, [sp, #144]
  43ac38:	add	x21, x21, x0
  43ac3c:	str	x21, [sp, #280]
  43ac40:	add	x23, x23, x0
  43ac44:	str	x23, [sp, #288]
  43ac48:	str	x22, [sp, #296]
  43ac4c:	add	x0, sp, #0x200
  43ac50:	ldp	x0, x1, [x0, #-232]
  43ac54:	ldr	x2, [sp, #208]
  43ac58:	stp	x0, x1, [x2]
  43ac5c:	str	x22, [x2, #16]
  43ac60:	ldr	x5, [sp, #400]
  43ac64:	ldr	x4, [sp, #384]
  43ac68:	ldr	x3, [sp, #376]
  43ac6c:	ldr	x1, [sp, #200]
  43ac70:	ldr	x0, [sp, #192]
  43ac74:	bl	439968 <nftw@plt+0x36de8>
  43ac78:	cbnz	w0, 43abf0 <nftw@plt+0x38070>
  43ac7c:	b	43abe4 <nftw@plt+0x38064>
  43ac80:	ldr	w0, [sp, #360]
  43ac84:	cbnz	w0, 43acc0 <nftw@plt+0x38140>
  43ac88:	ldr	w0, [x20, #8]
  43ac8c:	cmp	w0, #0x11
  43ac90:	b.ne	43ab14 <nftw@plt+0x37f94>  // b.any
  43ac94:	ldr	w19, [sp, #168]
  43ac98:	b	43acc0 <nftw@plt+0x38140>
  43ac9c:	mov	w19, #0x1                   	// #1
  43aca0:	b	43acc0 <nftw@plt+0x38140>
  43aca4:	mov	w19, #0x1                   	// #1
  43aca8:	b	43acc0 <nftw@plt+0x38140>
  43acac:	mov	w19, #0x0                   	// #0
  43acb0:	b	43acc0 <nftw@plt+0x38140>
  43acb4:	mov	w19, #0x1                   	// #1
  43acb8:	b	43acc0 <nftw@plt+0x38140>
  43acbc:	mov	w19, w0
  43acc0:	mov	w0, w19
  43acc4:	ldp	x19, x20, [sp, #64]
  43acc8:	ldp	x21, x22, [sp, #80]
  43accc:	ldp	x23, x24, [sp, #96]
  43acd0:	ldp	x25, x26, [sp, #112]
  43acd4:	ldp	x27, x28, [sp, #128]
  43acd8:	ldp	x29, x30, [sp, #48]
  43acdc:	add	sp, sp, #0x170
  43ace0:	ret
  43ace4:	ldr	x4, [x0]
  43ace8:	ldr	x3, [x1]
  43acec:	cmp	x4, x3
  43acf0:	b.cc	43ad38 <nftw@plt+0x381b8>  // b.lo, b.ul, b.last
  43acf4:	mov	x2, x0
  43acf8:	mov	w0, #0x1                   	// #1
  43acfc:	b.hi	43ad48 <nftw@plt+0x381c8>  // b.pmore
  43ad00:	ldr	x4, [x2, #8]
  43ad04:	ldr	x3, [x1, #8]
  43ad08:	cmp	x4, x3
  43ad0c:	b.cc	43ad48 <nftw@plt+0x381c8>  // b.lo, b.ul, b.last
  43ad10:	b.hi	43ad40 <nftw@plt+0x381c0>  // b.pmore
  43ad14:	stp	x29, x30, [sp, #-16]!
  43ad18:	mov	x29, sp
  43ad1c:	ldr	x1, [x1, #16]
  43ad20:	ldr	x0, [x2, #16]
  43ad24:	ldr	x1, [x1]
  43ad28:	ldr	x0, [x0]
  43ad2c:	bl	402890 <strcmp@plt>
  43ad30:	ldp	x29, x30, [sp], #16
  43ad34:	ret
  43ad38:	mov	w0, #0xffffffff            	// #-1
  43ad3c:	ret
  43ad40:	mov	w0, #0xffffffff            	// #-1
  43ad44:	ret
  43ad48:	ret
  43ad4c:	sub	sp, sp, #0x120
  43ad50:	stp	x29, x30, [sp, #16]
  43ad54:	add	x29, sp, #0x10
  43ad58:	stp	x19, x20, [sp, #32]
  43ad5c:	str	x0, [sp, #176]
  43ad60:	str	x3, [sp, #184]
  43ad64:	str	x5, [sp, #208]
  43ad68:	str	x6, [sp, #112]
  43ad6c:	str	x7, [sp, #120]
  43ad70:	ldr	x0, [x4, #24]
  43ad74:	cbz	x0, 43b400 <nftw@plt+0x38880>
  43ad78:	stp	x21, x22, [sp, #48]
  43ad7c:	stp	x23, x24, [sp, #64]
  43ad80:	stp	x25, x26, [sp, #80]
  43ad84:	stp	x27, x28, [sp, #96]
  43ad88:	mov	x23, x1
  43ad8c:	mov	x21, x2
  43ad90:	mov	x27, x4
  43ad94:	add	x0, x2, #0x58
  43ad98:	str	x0, [sp, #136]
  43ad9c:	add	x28, sp, #0xe0
  43ada0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  43ada4:	add	x0, x0, #0x780
  43ada8:	str	x0, [sp, #216]
  43adac:	mov	x0, x27
  43adb0:	bl	439d08 <nftw@plt+0x37188>
  43adb4:	mov	x1, x0
  43adb8:	cbz	x0, 43b408 <nftw@plt+0x38888>
  43adbc:	ldr	x3, [sp, #120]
  43adc0:	ldr	x2, [sp, #112]
  43adc4:	ldr	x0, [sp, #136]
  43adc8:	bl	4396f0 <nftw@plt+0x36b70>
  43adcc:	mov	x19, x0
  43add0:	cbz	x0, 43b420 <nftw@plt+0x388a0>
  43add4:	ldr	w0, [x0, #8]
  43add8:	cmp	w0, #0x2e
  43addc:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  43ade0:	cset	w25, eq  // eq = none
  43ade4:	cmp	w0, #0x1d
  43ade8:	csinc	w25, w25, wzr, ne  // ne = any
  43adec:	b.eq	43ae44 <nftw@plt+0x382c4>  // b.none
  43adf0:	cbnz	w25, 43ae38 <nftw@plt+0x382b8>
  43adf4:	ldr	x0, [sp, #288]
  43adf8:	str	x0, [sp, #192]
  43adfc:	mov	x22, #0x0                   	// #0
  43ae00:	ldr	x26, [x19, #16]
  43ae04:	cbz	x26, 43b0f8 <nftw@plt+0x38578>
  43ae08:	str	wzr, [sp, #128]
  43ae0c:	str	wzr, [sp, #148]
  43ae10:	str	xzr, [sp, #160]
  43ae14:	str	wzr, [sp, #200]
  43ae18:	str	wzr, [sp, #168]
  43ae1c:	str	xzr, [sp, #152]
  43ae20:	str	wzr, [sp, #172]
  43ae24:	mov	x26, #0x0                   	// #0
  43ae28:	mov	x20, #0x0                   	// #0
  43ae2c:	mov	w0, #0x1                   	// #1
  43ae30:	str	w0, [sp, #204]
  43ae34:	b	43af04 <nftw@plt+0x38384>
  43ae38:	ldr	x0, [sp, #288]
  43ae3c:	str	x0, [sp, #192]
  43ae40:	b	43ae4c <nftw@plt+0x382cc>
  43ae44:	ldr	x0, [sp, #296]
  43ae48:	str	x0, [sp, #192]
  43ae4c:	ldr	x3, [sp, #120]
  43ae50:	ldr	x2, [sp, #112]
  43ae54:	mov	x1, #0x28                  	// #40
  43ae58:	ldr	x0, [sp, #176]
  43ae5c:	bl	435960 <nftw@plt+0x32de0>
  43ae60:	mov	x22, x0
  43ae64:	cbz	x0, 43b438 <nftw@plt+0x388b8>
  43ae68:	stp	xzr, xzr, [x0]
  43ae6c:	stp	xzr, xzr, [x0, #16]
  43ae70:	str	xzr, [x0, #32]
  43ae74:	b	43ae00 <nftw@plt+0x38280>
  43ae78:	ldr	x0, [x19, #24]
  43ae7c:	ldr	w0, [x0, x24]
  43ae80:	cmp	w0, #0x11
  43ae84:	b.ne	43af48 <nftw@plt+0x383c8>  // b.any
  43ae88:	ldr	w0, [sp, #224]
  43ae8c:	cmp	w0, #0x1
  43ae90:	b.eq	43aea8 <nftw@plt+0x38328>  // b.none
  43ae94:	cbz	w25, 43aef4 <nftw@plt+0x38374>
  43ae98:	ldr	w0, [sp, #224]
  43ae9c:	cmp	w0, #0x1
  43aea0:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43aea4:	b	43aeb4 <nftw@plt+0x38334>
  43aea8:	ldr	x0, [sp, #232]
  43aeac:	str	x0, [sp, #184]
  43aeb0:	cbz	w25, 43aef4 <nftw@plt+0x38374>
  43aeb4:	ldr	x26, [sp, #232]
  43aeb8:	mov	w0, #0x1                   	// #1
  43aebc:	str	w0, [sp, #172]
  43aec0:	b	43aef4 <nftw@plt+0x38374>
  43aec4:	cmp	w0, #0x3
  43aec8:	b.ne	43aeec <nftw@plt+0x3836c>  // b.any
  43aecc:	ldr	x0, [x22]
  43aed0:	cbnz	x0, 43aef4 <nftw@plt+0x38374>
  43aed4:	ldr	w0, [sp, #224]
  43aed8:	cmp	w0, #0x4
  43aedc:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43aee0:	ldr	x0, [sp, #232]
  43aee4:	str	x0, [x22]
  43aee8:	b	43aef4 <nftw@plt+0x38374>
  43aeec:	cmp	w0, #0x11
  43aef0:	b.eq	43ae98 <nftw@plt+0x38318>  // b.none
  43aef4:	add	x20, x20, #0x1
  43aef8:	ldr	x0, [x19, #16]
  43aefc:	cmp	x0, x20
  43af00:	b.ls	43b110 <nftw@plt+0x38590>  // b.plast
  43af04:	lsl	x24, x20, #3
  43af08:	ldr	x0, [x19, #24]
  43af0c:	add	x0, x0, x24
  43af10:	ldr	w0, [x0, #4]
  43af14:	str	x28, [sp]
  43af18:	ldr	x7, [x23, #8]
  43af1c:	ldr	x6, [x23, #112]
  43af20:	ldr	x5, [x23, #104]
  43af24:	ldr	w4, [x21, #48]
  43af28:	ldr	w3, [x21, #40]
  43af2c:	ldr	w2, [x21, #44]
  43af30:	mov	x1, x27
  43af34:	bl	439f2c <nftw@plt+0x373ac>
  43af38:	cbz	w0, 43b050 <nftw@plt+0x384d0>
  43af3c:	ldr	w0, [x19, #8]
  43af40:	cmp	w0, #0x11
  43af44:	b.eq	43ae78 <nftw@plt+0x382f8>  // b.none
  43af48:	cbz	w25, 43aef4 <nftw@plt+0x38374>
  43af4c:	ldr	x0, [x19, #24]
  43af50:	add	x2, x0, x24
  43af54:	ldr	w0, [x0, x24]
  43af58:	cmp	w0, #0x55
  43af5c:	b.eq	43b0d4 <nftw@plt+0x38554>  // b.none
  43af60:	b.hi	43afac <nftw@plt+0x3842c>  // b.pmore
  43af64:	cmp	w0, #0x12
  43af68:	b.eq	43b090 <nftw@plt+0x38510>  // b.none
  43af6c:	b.ls	43aec4 <nftw@plt+0x38344>  // b.plast
  43af70:	cmp	w0, #0x31
  43af74:	b.eq	43af80 <nftw@plt+0x38400>  // b.none
  43af78:	cmp	w0, #0x47
  43af7c:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43af80:	ldr	w0, [sp, #128]
  43af84:	cbnz	w0, 43aef4 <nftw@plt+0x38374>
  43af88:	ldr	x5, [sp, #120]
  43af8c:	ldr	x4, [sp, #112]
  43af90:	mov	x3, x28
  43af94:	mov	x1, x21
  43af98:	mov	x0, x23
  43af9c:	bl	43a734 <nftw@plt+0x37bb4>
  43afa0:	cbz	x0, 43aef4 <nftw@plt+0x38374>
  43afa4:	str	x0, [x22]
  43afa8:	b	43aef4 <nftw@plt+0x38374>
  43afac:	cmp	w0, #0x59
  43afb0:	b.eq	43b078 <nftw@plt+0x384f8>  // b.none
  43afb4:	b.ls	43afec <nftw@plt+0x3846c>  // b.plast
  43afb8:	cmp	w0, #0x6e
  43afbc:	b.eq	43afcc <nftw@plt+0x3844c>  // b.none
  43afc0:	mov	w1, #0x2007                	// #8199
  43afc4:	cmp	w0, w1
  43afc8:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43afcc:	ldr	w0, [sp, #224]
  43afd0:	cmp	w0, #0x4
  43afd4:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43afd8:	ldr	x0, [sp, #232]
  43afdc:	str	x0, [x22]
  43afe0:	mov	w0, #0x1                   	// #1
  43afe4:	str	w0, [sp, #128]
  43afe8:	b	43aef4 <nftw@plt+0x38374>
  43afec:	cmp	w0, #0x58
  43aff0:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43aff4:	ldr	w0, [sp, #224]
  43aff8:	cmp	w0, #0x2
  43affc:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43b000:	ldr	x0, [sp, #232]
  43b004:	cbnz	x0, 43b014 <nftw@plt+0x38494>
  43b008:	ldr	x0, [sp, #216]
  43b00c:	str	x0, [x22, #8]
  43b010:	b	43aef4 <nftw@plt+0x38374>
  43b014:	sub	x1, x0, #0x1
  43b018:	ldr	x2, [sp, #208]
  43b01c:	ldr	x2, [x2, #48]
  43b020:	cmp	x1, x2
  43b024:	b.cs	43b040 <nftw@plt+0x384c0>  // b.hs, b.nlast
  43b028:	ldr	x1, [sp, #208]
  43b02c:	ldr	x1, [x1, #56]
  43b030:	add	x0, x1, x0, lsl #3
  43b034:	ldur	x0, [x0, #-8]
  43b038:	str	x0, [x22, #8]
  43b03c:	b	43aef4 <nftw@plt+0x38374>
  43b040:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43b044:	add	x1, x1, #0xe90
  43b048:	mov	x0, x27
  43b04c:	bl	439a40 <nftw@plt+0x36ec0>
  43b050:	mov	w20, #0x0                   	// #0
  43b054:	ldp	x21, x22, [sp, #48]
  43b058:	ldp	x23, x24, [sp, #64]
  43b05c:	ldp	x25, x26, [sp, #80]
  43b060:	ldp	x27, x28, [sp, #96]
  43b064:	mov	w0, w20
  43b068:	ldp	x19, x20, [sp, #32]
  43b06c:	ldp	x29, x30, [sp, #16]
  43b070:	add	sp, sp, #0x120
  43b074:	ret
  43b078:	ldr	w0, [sp, #224]
  43b07c:	cmp	w0, #0x2
  43b080:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43b084:	ldr	x0, [sp, #232]
  43b088:	str	w0, [x22, #16]
  43b08c:	b	43aef4 <nftw@plt+0x38374>
  43b090:	ldr	w0, [sp, #224]
  43b094:	cmp	w0, #0x1
  43b098:	b.eq	43b0c0 <nftw@plt+0x38540>  // b.none
  43b09c:	cmp	w0, #0x2
  43b0a0:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43b0a4:	ldr	x0, [sp, #232]
  43b0a8:	str	x0, [sp, #152]
  43b0ac:	mov	w0, #0x1                   	// #1
  43b0b0:	str	w0, [sp, #200]
  43b0b4:	ldr	w0, [sp, #204]
  43b0b8:	str	w0, [sp, #168]
  43b0bc:	b	43aef4 <nftw@plt+0x38374>
  43b0c0:	ldr	x0, [sp, #232]
  43b0c4:	str	x0, [sp, #152]
  43b0c8:	mov	w0, #0x1                   	// #1
  43b0cc:	str	w0, [sp, #168]
  43b0d0:	b	43aef4 <nftw@plt+0x38374>
  43b0d4:	ldr	w0, [sp, #224]
  43b0d8:	cmp	w0, #0x2
  43b0dc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43b0e0:	b.ne	43aef4 <nftw@plt+0x38374>  // b.any
  43b0e4:	ldr	x0, [sp, #232]
  43b0e8:	str	x0, [sp, #160]
  43b0ec:	mov	w0, #0x1                   	// #1
  43b0f0:	str	w0, [sp, #148]
  43b0f4:	b	43aef4 <nftw@plt+0x38374>
  43b0f8:	str	x26, [sp, #160]
  43b0fc:	str	x26, [sp, #152]
  43b100:	str	wzr, [sp, #148]
  43b104:	str	wzr, [sp, #200]
  43b108:	str	wzr, [sp, #168]
  43b10c:	str	wzr, [sp, #172]
  43b110:	cbz	w25, 43b370 <nftw@plt+0x387f0>
  43b114:	ldr	x0, [x22]
  43b118:	cbz	x0, 43b204 <nftw@plt+0x38684>
  43b11c:	ldr	w0, [sp, #148]
  43b120:	cbnz	w0, 43b220 <nftw@plt+0x386a0>
  43b124:	ldr	w0, [sp, #172]
  43b128:	cmp	w0, #0x0
  43b12c:	ldr	w0, [sp, #168]
  43b130:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43b134:	b.eq	43b358 <nftw@plt+0x387d8>  // b.none
  43b138:	ldr	x0, [sp, #152]
  43b13c:	add	x4, x0, x26
  43b140:	ldr	w1, [sp, #200]
  43b144:	cmp	w1, #0x0
  43b148:	ldr	x7, [sp, #192]
  43b14c:	ldr	x6, [sp, #120]
  43b150:	ldr	x5, [sp, #112]
  43b154:	csel	x4, x4, x0, ne  // ne = any
  43b158:	mov	x3, x26
  43b15c:	mov	x2, x22
  43b160:	mov	x1, x23
  43b164:	ldr	x0, [sp, #176]
  43b168:	bl	4398a4 <nftw@plt+0x36d24>
  43b16c:	mov	w20, w0
  43b170:	cbz	w0, 43b344 <nftw@plt+0x387c4>
  43b174:	ldr	w0, [x19, #12]
  43b178:	cbz	w0, 43b378 <nftw@plt+0x387f8>
  43b17c:	stp	xzr, xzr, [x28]
  43b180:	stp	xzr, xzr, [x28, #16]
  43b184:	str	x28, [sp, #8]
  43b188:	ldr	x0, [sp, #288]
  43b18c:	str	x0, [sp]
  43b190:	ldr	x7, [sp, #120]
  43b194:	ldr	x6, [sp, #112]
  43b198:	ldr	x5, [sp, #208]
  43b19c:	mov	x4, x27
  43b1a0:	ldr	x3, [sp, #184]
  43b1a4:	mov	x2, x21
  43b1a8:	mov	x1, x23
  43b1ac:	ldr	x0, [sp, #176]
  43b1b0:	bl	43ad4c <nftw@plt+0x381cc>
  43b1b4:	cbz	w0, 43b3e8 <nftw@plt+0x38868>
  43b1b8:	ldr	x0, [sp, #248]
  43b1bc:	cbz	x0, 43b378 <nftw@plt+0x387f8>
  43b1c0:	ldr	x3, [sp, #120]
  43b1c4:	ldr	x2, [sp, #112]
  43b1c8:	mov	x1, x28
  43b1cc:	ldr	x0, [sp, #176]
  43b1d0:	bl	435c0c <nftw@plt+0x3308c>
  43b1d4:	cbz	w0, 43b3e8 <nftw@plt+0x38868>
  43b1d8:	ldr	x19, [sp, #224]
  43b1dc:	adrp	x3, 43a000 <nftw@plt+0x37480>
  43b1e0:	add	x3, x3, #0xce4
  43b1e4:	mov	x2, #0x18                  	// #24
  43b1e8:	ldr	x1, [sp, #248]
  43b1ec:	mov	x0, x19
  43b1f0:	bl	43d00c <nftw@plt+0x3a48c>
  43b1f4:	str	x19, [x22, #24]
  43b1f8:	ldr	x0, [sp, #248]
  43b1fc:	str	x0, [x22, #32]
  43b200:	b	43b378 <nftw@plt+0x387f8>
  43b204:	ldr	x4, [sp, #120]
  43b208:	ldr	x3, [sp, #112]
  43b20c:	mov	x2, #0x28                  	// #40
  43b210:	mov	x1, x22
  43b214:	ldr	x0, [sp, #176]
  43b218:	bl	4358b4 <nftw@plt+0x32d34>
  43b21c:	b	43b370 <nftw@plt+0x387f0>
  43b220:	ldr	x0, [x23, #96]
  43b224:	ldr	x1, [sp, #160]
  43b228:	cmp	x0, x1
  43b22c:	b.ls	43b284 <nftw@plt+0x38704>  // b.plast
  43b230:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43b234:	add	x1, x1, #0x3b0
  43b238:	str	x1, [sp, #224]
  43b23c:	ldr	x1, [x23, #88]
  43b240:	str	x1, [sp, #232]
  43b244:	ldr	x2, [sp, #160]
  43b248:	add	x1, x1, x2
  43b24c:	str	x1, [sp, #240]
  43b250:	sub	x0, x0, x2
  43b254:	str	x0, [sp, #248]
  43b258:	ldr	w0, [x23, #120]
  43b25c:	str	w0, [sp, #256]
  43b260:	ldr	x0, [sp, #112]
  43b264:	str	x0, [sp, #264]
  43b268:	ldr	x0, [sp, #120]
  43b26c:	str	x0, [sp, #272]
  43b270:	str	wzr, [sp, #280]
  43b274:	ldr	x0, [sp, #184]
  43b278:	str	x0, [sp, #128]
  43b27c:	mov	x26, x28
  43b280:	b	43b2b8 <nftw@plt+0x38738>
  43b284:	mov	w2, #0x0                   	// #0
  43b288:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43b28c:	add	x1, x1, #0xec8
  43b290:	ldr	x0, [sp, #120]
  43b294:	ldr	x3, [sp, #112]
  43b298:	blr	x3
  43b29c:	mov	w20, #0x0                   	// #0
  43b2a0:	ldp	x21, x22, [sp, #48]
  43b2a4:	ldp	x23, x24, [sp, #64]
  43b2a8:	ldp	x25, x26, [sp, #80]
  43b2ac:	ldp	x27, x28, [sp, #96]
  43b2b0:	b	43b064 <nftw@plt+0x384e4>
  43b2b4:	str	x25, [sp, #128]
  43b2b8:	ldr	w20, [sp, #280]
  43b2bc:	cbnz	w20, 43b29c <nftw@plt+0x3871c>
  43b2c0:	ldr	w1, [x21, #48]
  43b2c4:	mov	x0, x26
  43b2c8:	bl	439db4 <nftw@plt+0x37234>
  43b2cc:	mov	x24, x0
  43b2d0:	ldr	w1, [x21, #48]
  43b2d4:	mov	x0, x26
  43b2d8:	bl	439db4 <nftw@plt+0x37234>
  43b2dc:	mov	x25, x0
  43b2e0:	orr	x0, x24, x0
  43b2e4:	cbz	x0, 43b328 <nftw@plt+0x387a8>
  43b2e8:	ldr	w1, [x21, #48]
  43b2ec:	mov	x0, x24
  43b2f0:	bl	439428 <nftw@plt+0x368a8>
  43b2f4:	cbnz	w0, 43b2b4 <nftw@plt+0x38734>
  43b2f8:	ldr	x7, [sp, #192]
  43b2fc:	ldr	x6, [sp, #120]
  43b300:	ldr	x5, [sp, #112]
  43b304:	ldr	x0, [sp, #128]
  43b308:	add	x4, x25, x0
  43b30c:	add	x3, x24, x0
  43b310:	mov	x2, x22
  43b314:	mov	x1, x23
  43b318:	ldr	x0, [sp, #176]
  43b31c:	bl	4398a4 <nftw@plt+0x36d24>
  43b320:	cbnz	w0, 43b2b8 <nftw@plt+0x38738>
  43b324:	b	43b29c <nftw@plt+0x3871c>
  43b328:	ldr	w0, [sp, #280]
  43b32c:	cbz	w0, 43b174 <nftw@plt+0x385f4>
  43b330:	ldp	x21, x22, [sp, #48]
  43b334:	ldp	x23, x24, [sp, #64]
  43b338:	ldp	x25, x26, [sp, #80]
  43b33c:	ldp	x27, x28, [sp, #96]
  43b340:	b	43b064 <nftw@plt+0x384e4>
  43b344:	ldp	x21, x22, [sp, #48]
  43b348:	ldp	x23, x24, [sp, #64]
  43b34c:	ldp	x25, x26, [sp, #80]
  43b350:	ldp	x27, x28, [sp, #96]
  43b354:	b	43b064 <nftw@plt+0x384e4>
  43b358:	ldr	x4, [sp, #120]
  43b35c:	ldr	x3, [sp, #112]
  43b360:	mov	x2, #0x28                  	// #40
  43b364:	mov	x1, x22
  43b368:	ldr	x0, [sp, #176]
  43b36c:	bl	4358b4 <nftw@plt+0x32d34>
  43b370:	ldr	w0, [x19, #12]
  43b374:	cbnz	w0, 43b398 <nftw@plt+0x38818>
  43b378:	ldr	x0, [x27, #24]
  43b37c:	cbnz	x0, 43adac <nftw@plt+0x3822c>
  43b380:	mov	w20, #0x1                   	// #1
  43b384:	ldp	x21, x22, [sp, #48]
  43b388:	ldp	x23, x24, [sp, #64]
  43b38c:	ldp	x25, x26, [sp, #80]
  43b390:	ldp	x27, x28, [sp, #96]
  43b394:	b	43b064 <nftw@plt+0x384e4>
  43b398:	ldr	x0, [sp, #296]
  43b39c:	str	x0, [sp, #8]
  43b3a0:	ldr	x0, [sp, #288]
  43b3a4:	str	x0, [sp]
  43b3a8:	ldr	x7, [sp, #120]
  43b3ac:	ldr	x6, [sp, #112]
  43b3b0:	ldr	x5, [sp, #208]
  43b3b4:	mov	x4, x27
  43b3b8:	ldr	x3, [sp, #184]
  43b3bc:	mov	x2, x21
  43b3c0:	mov	x1, x23
  43b3c4:	ldr	x0, [sp, #176]
  43b3c8:	bl	43ad4c <nftw@plt+0x381cc>
  43b3cc:	mov	w20, w0
  43b3d0:	cbnz	w0, 43b378 <nftw@plt+0x387f8>
  43b3d4:	ldp	x21, x22, [sp, #48]
  43b3d8:	ldp	x23, x24, [sp, #64]
  43b3dc:	ldp	x25, x26, [sp, #80]
  43b3e0:	ldp	x27, x28, [sp, #96]
  43b3e4:	b	43b064 <nftw@plt+0x384e4>
  43b3e8:	mov	w20, #0x0                   	// #0
  43b3ec:	ldp	x21, x22, [sp, #48]
  43b3f0:	ldp	x23, x24, [sp, #64]
  43b3f4:	ldp	x25, x26, [sp, #80]
  43b3f8:	ldp	x27, x28, [sp, #96]
  43b3fc:	b	43b064 <nftw@plt+0x384e4>
  43b400:	mov	w20, #0x1                   	// #1
  43b404:	b	43b064 <nftw@plt+0x384e4>
  43b408:	mov	w20, #0x1                   	// #1
  43b40c:	ldp	x21, x22, [sp, #48]
  43b410:	ldp	x23, x24, [sp, #64]
  43b414:	ldp	x25, x26, [sp, #80]
  43b418:	ldp	x27, x28, [sp, #96]
  43b41c:	b	43b064 <nftw@plt+0x384e4>
  43b420:	mov	w20, #0x0                   	// #0
  43b424:	ldp	x21, x22, [sp, #48]
  43b428:	ldp	x23, x24, [sp, #64]
  43b42c:	ldp	x25, x26, [sp, #80]
  43b430:	ldp	x27, x28, [sp, #96]
  43b434:	b	43b064 <nftw@plt+0x384e4>
  43b438:	mov	w20, #0x0                   	// #0
  43b43c:	ldp	x21, x22, [sp, #48]
  43b440:	ldp	x23, x24, [sp, #64]
  43b444:	ldp	x25, x26, [sp, #80]
  43b448:	ldp	x27, x28, [sp, #96]
  43b44c:	b	43b064 <nftw@plt+0x384e4>
  43b450:	stp	x29, x30, [sp, #-48]!
  43b454:	mov	x29, sp
  43b458:	stp	x19, x20, [sp, #16]
  43b45c:	stp	x21, x22, [sp, #32]
  43b460:	mov	x20, x0
  43b464:	mov	x19, x1
  43b468:	mov	x21, x2
  43b46c:	mov	x22, x3
  43b470:	ldr	x2, [x1, #32]
  43b474:	cbnz	x2, 43b4a4 <nftw@plt+0x38924>
  43b478:	ldr	x2, [x19, #48]
  43b47c:	mov	x4, x22
  43b480:	mov	x3, x21
  43b484:	lsl	x2, x2, #3
  43b488:	ldr	x1, [x19, #56]
  43b48c:	mov	x0, x20
  43b490:	bl	4358b4 <nftw@plt+0x32d34>
  43b494:	ldp	x19, x20, [sp, #16]
  43b498:	ldp	x21, x22, [sp, #32]
  43b49c:	ldp	x29, x30, [sp], #48
  43b4a0:	ret
  43b4a4:	mov	x4, x3
  43b4a8:	mov	x3, x21
  43b4ac:	lsl	x2, x2, #3
  43b4b0:	ldr	x1, [x1, #40]
  43b4b4:	bl	4358b4 <nftw@plt+0x32d34>
  43b4b8:	b	43b478 <nftw@plt+0x388f8>
  43b4bc:	stp	x29, x30, [sp, #-64]!
  43b4c0:	mov	x29, sp
  43b4c4:	stp	x19, x20, [sp, #16]
  43b4c8:	stp	x21, x22, [sp, #32]
  43b4cc:	str	x23, [sp, #48]
  43b4d0:	mov	x21, x0
  43b4d4:	mov	x20, x1
  43b4d8:	mov	x22, x2
  43b4dc:	mov	x23, x3
  43b4e0:	ldr	x2, [x1]
  43b4e4:	cbz	x2, 43b520 <nftw@plt+0x389a0>
  43b4e8:	mov	x19, #0x0                   	// #0
  43b4ec:	ldr	x5, [x20, #8]
  43b4f0:	add	x5, x5, x19, lsl #5
  43b4f4:	ldr	x2, [x5, #16]
  43b4f8:	mov	x4, x23
  43b4fc:	mov	x3, x22
  43b500:	lsl	x2, x2, #3
  43b504:	ldr	x1, [x5, #24]
  43b508:	mov	x0, x21
  43b50c:	bl	4358b4 <nftw@plt+0x32d34>
  43b510:	add	x19, x19, #0x1
  43b514:	ldr	x2, [x20]
  43b518:	cmp	x2, x19
  43b51c:	b.hi	43b4ec <nftw@plt+0x3896c>  // b.pmore
  43b520:	mov	x4, x23
  43b524:	mov	x3, x22
  43b528:	lsl	x2, x2, #5
  43b52c:	ldr	x1, [x20, #8]
  43b530:	mov	x0, x21
  43b534:	bl	4358b4 <nftw@plt+0x32d34>
  43b538:	str	xzr, [x20]
  43b53c:	str	xzr, [x20, #8]
  43b540:	ldp	x19, x20, [sp, #16]
  43b544:	ldp	x21, x22, [sp, #32]
  43b548:	ldr	x23, [sp, #48]
  43b54c:	ldp	x29, x30, [sp], #64
  43b550:	ret
  43b554:	sub	sp, sp, #0x1d0
  43b558:	stp	x29, x30, [sp, #16]
  43b55c:	add	x29, sp, #0x10
  43b560:	stp	x23, x24, [sp, #64]
  43b564:	stp	x25, x26, [sp, #80]
  43b568:	mov	x24, x0
  43b56c:	str	x3, [sp, #120]
  43b570:	str	x4, [sp, #128]
  43b574:	mov	x26, x6
  43b578:	mov	w0, #0x1                   	// #1
  43b57c:	str	w0, [x6]
  43b580:	ldr	x6, [x1, #32]
  43b584:	cbz	x6, 43b5fc <nftw@plt+0x38a7c>
  43b588:	stp	x19, x20, [sp, #32]
  43b58c:	stp	x27, x28, [sp, #96]
  43b590:	mov	x23, x1
  43b594:	mov	x20, x2
  43b598:	mov	x27, x5
  43b59c:	ldr	x2, [x1, #24]
  43b5a0:	mov	x4, x6
  43b5a4:	mov	x3, #0x0                   	// #0
  43b5a8:	b	43b5b0 <nftw@plt+0x38a30>
  43b5ac:	mov	x4, x7
  43b5b0:	cmp	x4, x3
  43b5b4:	b.ls	43b5f4 <nftw@plt+0x38a74>  // b.plast
  43b5b8:	add	x0, x4, x3
  43b5bc:	lsr	x7, x0, #1
  43b5c0:	and	x0, x0, #0xfffffffffffffffe
  43b5c4:	add	x0, x0, x7
  43b5c8:	lsl	x1, x0, #3
  43b5cc:	mov	x5, x1
  43b5d0:	add	x1, x2, x1
  43b5d4:	ldr	x0, [x2, x0, lsl #3]
  43b5d8:	cmp	x0, x20
  43b5dc:	b.hi	43b5ac <nftw@plt+0x38a2c>  // b.pmore
  43b5e0:	ldr	x0, [x1, #8]
  43b5e4:	cmp	x0, x20
  43b5e8:	b.hi	43c5d4 <nftw@plt+0x39a54>  // b.pmore
  43b5ec:	add	x3, x7, #0x1
  43b5f0:	b	43b5b0 <nftw@plt+0x38a30>
  43b5f4:	ldp	x19, x20, [sp, #32]
  43b5f8:	ldp	x27, x28, [sp, #96]
  43b5fc:	str	wzr, [x26]
  43b600:	mov	w0, #0x0                   	// #0
  43b604:	ldp	x23, x24, [sp, #64]
  43b608:	ldp	x25, x26, [sp, #80]
  43b60c:	ldp	x29, x30, [sp, #16]
  43b610:	add	sp, sp, #0x1d0
  43b614:	ret
  43b618:	add	x0, x22, #0x68
  43b61c:	ldar	x21, [x0]
  43b620:	cmn	x21, #0x1
  43b624:	b.ne	43c640 <nftw@plt+0x39ac0>  // b.any
  43b628:	sub	x19, x19, #0x18
  43b62c:	ldr	x22, [x19, #16]
  43b630:	ldr	x21, [x22, #104]
  43b634:	ldr	x0, [x23, #24]
  43b638:	cmp	x0, x19
  43b63c:	b.cs	43c640 <nftw@plt+0x39ac0>  // b.hs, b.nlast
  43b640:	ldur	x0, [x19, #-24]
  43b644:	cmp	x0, x20
  43b648:	b.hi	43c640 <nftw@plt+0x39ac0>  // b.pmore
  43b64c:	ldur	x0, [x19, #-16]
  43b650:	cmp	x0, x20
  43b654:	b.ls	43c640 <nftw@plt+0x39ac0>  // b.plast
  43b658:	ldr	w0, [x24, #8]
  43b65c:	cbz	w0, 43b620 <nftw@plt+0x38aa0>
  43b660:	b	43b618 <nftw@plt+0x38a98>
  43b664:	add	x0, x22, #0x68
  43b668:	ldar	x21, [x0]
  43b66c:	b	43c648 <nftw@plt+0x39ac8>
  43b670:	ldr	x0, [x19, #16]
  43b674:	str	x0, [sp, #136]
  43b678:	stp	xzr, xzr, [sp, #224]
  43b67c:	str	xzr, [sp, #240]
  43b680:	str	xzr, [sp, #248]
  43b684:	stp	xzr, xzr, [sp, #256]
  43b688:	stp	xzr, xzr, [sp, #272]
  43b68c:	stp	xzr, xzr, [sp, #288]
  43b690:	stp	xzr, xzr, [sp, #304]
  43b694:	ldr	x1, [x0, #56]
  43b698:	ldr	x0, [x23, #80]
  43b69c:	cmp	x1, x0
  43b6a0:	b.cc	43b770 <nftw@plt+0x38bf0>  // b.lo, b.ul, b.last
  43b6a4:	mov	w2, #0x0                   	// #0
  43b6a8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43b6ac:	add	x1, x1, #0xef0
  43b6b0:	mov	x0, x27
  43b6b4:	ldr	x3, [sp, #128]
  43b6b8:	blr	x3
  43b6bc:	ldr	x0, [sp, #240]
  43b6c0:	ldr	x1, [sp, #232]
  43b6c4:	add	x0, x0, x1
  43b6c8:	str	x0, [sp, #240]
  43b6cc:	str	xzr, [sp, #232]
  43b6d0:	mov	x3, x27
  43b6d4:	ldr	x25, [sp, #128]
  43b6d8:	mov	x2, x25
  43b6dc:	add	x1, sp, #0xe0
  43b6e0:	mov	x0, x24
  43b6e4:	bl	435c0c <nftw@plt+0x3308c>
  43b6e8:	mov	x3, x27
  43b6ec:	mov	x2, x25
  43b6f0:	add	x1, sp, #0x100
  43b6f4:	mov	x0, x24
  43b6f8:	bl	43b450 <nftw@plt+0x388d0>
  43b6fc:	str	xzr, [sp, #144]
  43b700:	mov	x0, #0xffffffffffffffff    	// #-1
  43b704:	str	x0, [sp, #136]
  43b708:	mov	x28, #0x0                   	// #0
  43b70c:	mov	w0, #0x0                   	// #0
  43b710:	ldr	w1, [x24, #8]
  43b714:	cbnz	w1, 43c2d8 <nftw@plt+0x39758>
  43b718:	ldr	x1, [sp, #144]
  43b71c:	str	x1, [x22, #112]
  43b720:	str	x21, [x22, #120]
  43b724:	str	x28, [x22, #128]
  43b728:	ldr	x1, [sp, #136]
  43b72c:	str	x1, [x22, #104]
  43b730:	ldr	x1, [sp, #136]
  43b734:	cmn	x1, #0x1
  43b738:	b.ne	43c330 <nftw@plt+0x397b0>  // b.any
  43b73c:	cbz	w0, 43c304 <nftw@plt+0x39784>
  43b740:	mov	x6, x26
  43b744:	mov	x5, x27
  43b748:	ldr	x4, [sp, #128]
  43b74c:	ldr	x3, [sp, #120]
  43b750:	mov	x2, x20
  43b754:	mov	x1, x23
  43b758:	mov	x0, x24
  43b75c:	bl	43b554 <nftw@plt+0x389d4>
  43b760:	ldp	x19, x20, [sp, #32]
  43b764:	ldp	x21, x22, [sp, #48]
  43b768:	ldp	x27, x28, [sp, #96]
  43b76c:	b	43b604 <nftw@plt+0x38a84>
  43b770:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43b774:	add	x2, x2, #0x390
  43b778:	str	x2, [sp, #320]
  43b77c:	ldr	x2, [x23, #72]
  43b780:	str	x2, [sp, #328]
  43b784:	add	x2, x2, x1
  43b788:	str	x2, [sp, #336]
  43b78c:	sub	x0, x0, x1
  43b790:	str	x0, [sp, #344]
  43b794:	ldr	w0, [x23, #120]
  43b798:	str	w0, [sp, #352]
  43b79c:	ldr	x0, [sp, #128]
  43b7a0:	str	x0, [sp, #360]
  43b7a4:	str	x27, [sp, #368]
  43b7a8:	str	wzr, [sp, #376]
  43b7ac:	add	x0, sp, #0x140
  43b7b0:	bl	439b08 <nftw@plt+0x36f88>
  43b7b4:	mov	w1, w0
  43b7b8:	mov	w25, #0x0                   	// #0
  43b7bc:	mov	x2, #0xffffffff            	// #4294967295
  43b7c0:	cmp	x2, w0, uxtw
  43b7c4:	b.eq	43b9e4 <nftw@plt+0x38e64>  // b.none
  43b7c8:	str	x1, [sp, #344]
  43b7cc:	add	x0, sp, #0x140
  43b7d0:	bl	439c7c <nftw@plt+0x370fc>
  43b7d4:	and	w0, w0, #0xffff
  43b7d8:	str	w0, [sp, #256]
  43b7dc:	sub	w0, w0, #0x2
  43b7e0:	cmp	w0, #0x2
  43b7e4:	b.hi	43b9f8 <nftw@plt+0x38e78>  // b.pmore
  43b7e8:	add	x0, sp, #0x140
  43b7ec:	mov	w1, w25
  43b7f0:	mov	x25, x0
  43b7f4:	bl	439c58 <nftw@plt+0x370d8>
  43b7f8:	mov	x1, x0
  43b7fc:	ldp	x2, x3, [sp, #320]
  43b800:	stp	x2, x3, [sp, #384]
  43b804:	ldp	x2, x3, [sp, #336]
  43b808:	stp	x2, x3, [sp, #400]
  43b80c:	ldp	x2, x3, [sp, #352]
  43b810:	stp	x2, x3, [sp, #416]
  43b814:	ldp	x2, x3, [sp, #368]
  43b818:	stp	x2, x3, [sp, #432]
  43b81c:	str	x0, [sp, #408]
  43b820:	mov	x0, x25
  43b824:	bl	439a9c <nftw@plt+0x36f1c>
  43b828:	cbz	w0, 43b6bc <nftw@plt+0x38b3c>
  43b82c:	add	x0, sp, #0x180
  43b830:	bl	439cd4 <nftw@plt+0x37154>
  43b834:	and	w0, w0, #0xff
  43b838:	str	w0, [sp, #260]
  43b83c:	ldr	w0, [sp, #256]
  43b840:	cmp	w0, #0x3
  43b844:	b.gt	43ba0c <nftw@plt+0x38e8c>
  43b848:	mov	w0, #0x1                   	// #1
  43b84c:	str	w0, [sp, #264]
  43b850:	add	x25, sp, #0x180
  43b854:	mov	x0, x25
  43b858:	bl	439cd4 <nftw@plt+0x37154>
  43b85c:	ldr	x28, [sp, #400]
  43b860:	mov	x1, #0x1                   	// #1
  43b864:	mov	x0, x25
  43b868:	bl	439a9c <nftw@plt+0x36f1c>
  43b86c:	mov	w1, #0x0                   	// #0
  43b870:	cbz	w0, 43b884 <nftw@plt+0x38d04>
  43b874:	ldrb	w1, [x28]
  43b878:	eor	w1, w1, #0xffffff80
  43b87c:	sub	w1, w1, #0x80
  43b880:	sxtb	w1, w1
  43b884:	str	w1, [sp, #268]
  43b888:	add	x25, sp, #0x180
  43b88c:	mov	x0, x25
  43b890:	bl	439cd4 <nftw@plt+0x37154>
  43b894:	and	w0, w0, #0xff
  43b898:	str	w0, [sp, #272]
  43b89c:	mov	x0, x25
  43b8a0:	bl	439cd4 <nftw@plt+0x37154>
  43b8a4:	and	w1, w0, #0xff
  43b8a8:	str	w1, [sp, #276]
  43b8ac:	ldr	x0, [sp, #400]
  43b8b0:	str	x0, [sp, #280]
  43b8b4:	sub	w1, w1, #0x1
  43b8b8:	mov	x0, x25
  43b8bc:	bl	439a9c <nftw@plt+0x36f1c>
  43b8c0:	cbz	w0, 43b6bc <nftw@plt+0x38b3c>
  43b8c4:	str	xzr, [sp, #288]
  43b8c8:	ldr	x25, [sp, #400]
  43b8cc:	ldr	x28, [sp, #408]
  43b8d0:	add	x28, x25, x28
  43b8d4:	cmp	x25, x28
  43b8d8:	b.cs	43b90c <nftw@plt+0x38d8c>  // b.hs, b.nlast
  43b8dc:	ldrb	w0, [x25]
  43b8e0:	cbz	w0, 43b90c <nftw@plt+0x38d8c>
  43b8e4:	sub	x1, x28, x25
  43b8e8:	mov	x0, x25
  43b8ec:	bl	402540 <strnlen@plt>
  43b8f0:	add	x0, x0, #0x1
  43b8f4:	add	x25, x25, x0
  43b8f8:	ldr	x0, [sp, #288]
  43b8fc:	add	x0, x0, #0x1
  43b900:	str	x0, [sp, #288]
  43b904:	cmp	x28, x25
  43b908:	b.hi	43b8dc <nftw@plt+0x38d5c>  // b.pmore
  43b90c:	str	xzr, [sp, #296]
  43b910:	ldr	x1, [sp, #288]
  43b914:	cbnz	x1, 43ba20 <nftw@plt+0x38ea0>
  43b918:	ldr	x0, [sp, #400]
  43b91c:	ldrb	w0, [x0]
  43b920:	mov	x28, #0x0                   	// #0
  43b924:	add	x1, sp, #0x180
  43b928:	cbz	w0, 43b96c <nftw@plt+0x38dec>
  43b92c:	str	x21, [sp, #144]
  43b930:	mov	x25, x1
  43b934:	ldr	w0, [sp, #440]
  43b938:	cbnz	w0, 43c1cc <nftw@plt+0x3964c>
  43b93c:	ldr	x21, [sp, #296]
  43b940:	mov	x0, x25
  43b944:	bl	439eec <nftw@plt+0x3736c>
  43b948:	str	x0, [x21, x28]
  43b94c:	ldr	x0, [sp, #296]
  43b950:	ldr	x0, [x0, x28]
  43b954:	cbz	x0, 43c1d4 <nftw@plt+0x39654>
  43b958:	add	x28, x28, #0x8
  43b95c:	ldr	x0, [sp, #400]
  43b960:	ldrb	w0, [x0]
  43b964:	cbnz	w0, 43b934 <nftw@plt+0x38db4>
  43b968:	ldr	x21, [sp, #144]
  43b96c:	mov	x1, #0x1                   	// #1
  43b970:	add	x0, sp, #0x180
  43b974:	bl	439a9c <nftw@plt+0x36f1c>
  43b978:	cbz	w0, 43b6bc <nftw@plt+0x38b3c>
  43b97c:	str	xzr, [sp, #304]
  43b980:	ldr	x25, [sp, #400]
  43b984:	ldr	x28, [sp, #408]
  43b988:	add	x28, x25, x28
  43b98c:	cmp	x25, x28
  43b990:	b.cc	43ba6c <nftw@plt+0x38eec>  // b.lo, b.ul, b.last
  43b994:	ldr	x3, [sp, #368]
  43b998:	ldr	x2, [sp, #360]
  43b99c:	ldr	x1, [sp, #304]
  43b9a0:	lsl	x1, x1, #3
  43b9a4:	mov	x0, x24
  43b9a8:	bl	435960 <nftw@plt+0x32de0>
  43b9ac:	str	x0, [sp, #312]
  43b9b0:	cbz	x0, 43b6bc <nftw@plt+0x38b3c>
  43b9b4:	ldr	x0, [sp, #400]
  43b9b8:	ldrb	w0, [x0]
  43b9bc:	cbz	w0, 43bc14 <nftw@plt+0x39094>
  43b9c0:	mov	x25, #0x0                   	// #0
  43b9c4:	add	x0, sp, #0x180
  43b9c8:	str	x21, [sp, #144]
  43b9cc:	str	x22, [sp, #152]
  43b9d0:	str	x19, [sp, #160]
  43b9d4:	str	x23, [sp, #168]
  43b9d8:	str	x20, [sp, #176]
  43b9dc:	mov	x22, x0
  43b9e0:	b	43bb90 <nftw@plt+0x39010>
  43b9e4:	add	x0, sp, #0x140
  43b9e8:	bl	439b88 <nftw@plt+0x37008>
  43b9ec:	mov	x1, x0
  43b9f0:	mov	w25, #0x1                   	// #1
  43b9f4:	b	43b7c8 <nftw@plt+0x38c48>
  43b9f8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43b9fc:	add	x1, x1, #0xf10
  43ba00:	add	x0, sp, #0x140
  43ba04:	bl	439a40 <nftw@plt+0x36ec0>
  43ba08:	b	43b6bc <nftw@plt+0x38b3c>
  43ba0c:	add	x0, sp, #0x180
  43ba10:	bl	439cd4 <nftw@plt+0x37154>
  43ba14:	and	w0, w0, #0xff
  43ba18:	str	w0, [sp, #264]
  43ba1c:	b	43b850 <nftw@plt+0x38cd0>
  43ba20:	ldr	x3, [sp, #368]
  43ba24:	ldr	x2, [sp, #360]
  43ba28:	lsl	x1, x1, #3
  43ba2c:	mov	x0, x24
  43ba30:	bl	435960 <nftw@plt+0x32de0>
  43ba34:	str	x0, [sp, #296]
  43ba38:	cbnz	x0, 43b918 <nftw@plt+0x38d98>
  43ba3c:	b	43b6bc <nftw@plt+0x38b3c>
  43ba40:	mov	x0, #0x1                   	// #1
  43ba44:	b	43baa8 <nftw@plt+0x38f28>
  43ba48:	mov	x0, #0x1                   	// #1
  43ba4c:	b	43bac8 <nftw@plt+0x38f48>
  43ba50:	mov	x0, #0x1                   	// #1
  43ba54:	add	x25, x25, x0
  43ba58:	ldr	x0, [sp, #304]
  43ba5c:	add	x0, x0, #0x1
  43ba60:	str	x0, [sp, #304]
  43ba64:	cmp	x28, x25
  43ba68:	b.ls	43b994 <nftw@plt+0x38e14>  // b.plast
  43ba6c:	ldrb	w0, [x25]
  43ba70:	cbz	w0, 43b994 <nftw@plt+0x38e14>
  43ba74:	sub	x1, x28, x25
  43ba78:	mov	x0, x25
  43ba7c:	bl	402540 <strnlen@plt>
  43ba80:	mov	x1, x0
  43ba84:	add	x0, x0, #0x1
  43ba88:	add	x2, x25, x0
  43ba8c:	ldrsb	w0, [x25, x0]
  43ba90:	tbz	w0, #31, 43ba40 <nftw@plt+0x38ec0>
  43ba94:	mov	x0, #0x1                   	// #1
  43ba98:	add	x25, x25, x1
  43ba9c:	add	x0, x0, #0x1
  43baa0:	ldrsb	w1, [x25, x0]
  43baa4:	tbnz	w1, #31, 43ba9c <nftw@plt+0x38f1c>
  43baa8:	add	x3, x2, x0
  43baac:	ldrsb	w0, [x2, x0]
  43bab0:	tbz	w0, #31, 43ba48 <nftw@plt+0x38ec8>
  43bab4:	mov	x0, #0x1                   	// #1
  43bab8:	sub	x2, x3, #0x1
  43babc:	add	x0, x0, #0x1
  43bac0:	ldrsb	w1, [x2, x0]
  43bac4:	tbnz	w1, #31, 43babc <nftw@plt+0x38f3c>
  43bac8:	add	x25, x3, x0
  43bacc:	ldrsb	w0, [x3, x0]
  43bad0:	tbz	w0, #31, 43ba50 <nftw@plt+0x38ed0>
  43bad4:	mov	x0, #0x1                   	// #1
  43bad8:	sub	x2, x25, #0x1
  43badc:	add	x0, x0, #0x1
  43bae0:	ldrsb	w1, [x2, x0]
  43bae4:	tbnz	w1, #31, 43badc <nftw@plt+0x38f5c>
  43bae8:	b	43ba54 <nftw@plt+0x38ed4>
  43baec:	sub	x1, x0, #0x1
  43baf0:	ldr	x2, [sp, #288]
  43baf4:	cmp	x1, x2
  43baf8:	b.cs	43bbd8 <nftw@plt+0x39058>  // b.hs, b.nlast
  43bafc:	ldr	x1, [sp, #296]
  43bb00:	add	x0, x1, x0, lsl #3
  43bb04:	ldur	x28, [x0, #-8]
  43bb08:	mov	x0, x28
  43bb0c:	bl	4024f0 <strlen@plt>
  43bb10:	mov	x20, x0
  43bb14:	mov	x0, x19
  43bb18:	bl	4024f0 <strlen@plt>
  43bb1c:	mov	x23, x0
  43bb20:	add	x1, x20, x0
  43bb24:	ldr	x3, [sp, #368]
  43bb28:	ldr	x2, [sp, #360]
  43bb2c:	add	x1, x1, #0x2
  43bb30:	mov	x0, x24
  43bb34:	bl	435960 <nftw@plt+0x32de0>
  43bb38:	mov	x21, x0
  43bb3c:	cbz	x0, 43c20c <nftw@plt+0x3968c>
  43bb40:	mov	x2, x20
  43bb44:	mov	x1, x28
  43bb48:	bl	402490 <memcpy@plt>
  43bb4c:	mov	w0, #0x2f                  	// #47
  43bb50:	strb	w0, [x21, x20]
  43bb54:	add	x0, x20, #0x1
  43bb58:	add	x2, x23, #0x1
  43bb5c:	mov	x1, x19
  43bb60:	add	x0, x21, x0
  43bb64:	bl	402490 <memcpy@plt>
  43bb68:	ldr	x0, [sp, #312]
  43bb6c:	str	x21, [x0, x25]
  43bb70:	mov	x0, x22
  43bb74:	bl	439d08 <nftw@plt+0x37188>
  43bb78:	mov	x0, x22
  43bb7c:	bl	439d08 <nftw@plt+0x37188>
  43bb80:	add	x25, x25, #0x8
  43bb84:	ldr	x0, [sp, #400]
  43bb88:	ldrb	w0, [x0]
  43bb8c:	cbz	w0, 43bc00 <nftw@plt+0x39080>
  43bb90:	ldr	w0, [sp, #440]
  43bb94:	cbnz	w0, 43c1dc <nftw@plt+0x3965c>
  43bb98:	mov	x0, x22
  43bb9c:	bl	439eec <nftw@plt+0x3736c>
  43bba0:	mov	x19, x0
  43bba4:	cbz	x0, 43c1f4 <nftw@plt+0x39674>
  43bba8:	mov	x0, x22
  43bbac:	bl	439d08 <nftw@plt+0x37188>
  43bbb0:	ldrb	w1, [x19]
  43bbb4:	cmp	w1, #0x2f
  43bbb8:	b.eq	43bbcc <nftw@plt+0x3904c>  // b.none
  43bbbc:	cbnz	x0, 43baec <nftw@plt+0x38f6c>
  43bbc0:	ldr	x0, [sp, #136]
  43bbc4:	ldr	x28, [x0, #72]
  43bbc8:	cbnz	x28, 43bb08 <nftw@plt+0x38f88>
  43bbcc:	ldr	x0, [sp, #312]
  43bbd0:	str	x19, [x0, x25]
  43bbd4:	b	43bb70 <nftw@plt+0x38ff0>
  43bbd8:	ldr	x21, [sp, #144]
  43bbdc:	ldr	x22, [sp, #152]
  43bbe0:	ldr	x19, [sp, #160]
  43bbe4:	ldr	x23, [sp, #168]
  43bbe8:	ldr	x20, [sp, #176]
  43bbec:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43bbf0:	add	x1, x1, #0xf30
  43bbf4:	add	x0, sp, #0x140
  43bbf8:	bl	439a40 <nftw@plt+0x36ec0>
  43bbfc:	b	43b6bc <nftw@plt+0x38b3c>
  43bc00:	ldr	x21, [sp, #144]
  43bc04:	ldr	x22, [sp, #152]
  43bc08:	ldr	x19, [sp, #160]
  43bc0c:	ldr	x23, [sp, #168]
  43bc10:	ldr	x20, [sp, #176]
  43bc14:	ldr	w0, [sp, #440]
  43bc18:	cbnz	w0, 43b6bc <nftw@plt+0x38b3c>
  43bc1c:	ldr	x0, [sp, #304]
  43bc20:	cbz	x0, 43bc34 <nftw@plt+0x390b4>
  43bc24:	ldr	x0, [sp, #312]
  43bc28:	ldr	x0, [x0]
  43bc2c:	str	x0, [sp, #144]
  43bc30:	b	43bc40 <nftw@plt+0x390c0>
  43bc34:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  43bc38:	add	x0, x0, #0x780
  43bc3c:	str	x0, [sp, #144]
  43bc40:	ldr	x0, [sp, #344]
  43bc44:	cbz	x0, 43c078 <nftw@plt+0x394f8>
  43bc48:	ldr	x1, [sp, #144]
  43bc4c:	mov	w2, #0x1                   	// #1
  43bc50:	mov	x4, #0x0                   	// #0
  43bc54:	mov	w3, #0x0                   	// #0
  43bc58:	add	x28, sp, #0x140
  43bc5c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x109fc>
  43bc60:	add	x0, x0, #0x780
  43bc64:	str	x0, [sp, #216]
  43bc68:	add	x25, sp, #0xe0
  43bc6c:	str	x21, [sp, #152]
  43bc70:	str	x22, [sp, #160]
  43bc74:	str	x19, [sp, #168]
  43bc78:	mov	x22, x1
  43bc7c:	mov	w21, w2
  43bc80:	mov	w19, w3
  43bc84:	str	x20, [sp, #176]
  43bc88:	mov	x20, x4
  43bc8c:	str	x27, [sp, #184]
  43bc90:	str	x26, [sp, #192]
  43bc94:	b	43bd00 <nftw@plt+0x39180>
  43bc98:	sub	w26, w26, w1
  43bc9c:	ldr	w3, [sp, #272]
  43bca0:	udiv	w1, w26, w3
  43bca4:	add	w19, w1, w19
  43bca8:	ldr	w2, [sp, #264]
  43bcac:	ldr	w0, [sp, #260]
  43bcb0:	mul	w0, w19, w0
  43bcb4:	udiv	w0, w0, w2
  43bcb8:	add	x20, x20, x0
  43bcbc:	udiv	w0, w19, w2
  43bcc0:	msub	w19, w0, w2, w19
  43bcc4:	msub	w1, w1, w3, w26
  43bcc8:	ldr	w26, [sp, #268]
  43bccc:	add	w1, w1, w26
  43bcd0:	add	w21, w21, w1
  43bcd4:	mov	x7, x25
  43bcd8:	ldr	x6, [sp, #368]
  43bcdc:	ldr	x5, [sp, #360]
  43bce0:	mov	w4, w21
  43bce4:	mov	x3, x22
  43bce8:	mov	x2, x20
  43bcec:	mov	x1, x23
  43bcf0:	mov	x0, x24
  43bcf4:	bl	4397d0 <nftw@plt+0x36c50>
  43bcf8:	ldr	x0, [sp, #344]
  43bcfc:	cbz	x0, 43c060 <nftw@plt+0x394e0>
  43bd00:	mov	x0, x28
  43bd04:	bl	439cd4 <nftw@plt+0x37154>
  43bd08:	and	w26, w0, #0xff
  43bd0c:	ldr	w1, [sp, #276]
  43bd10:	cmp	w1, w0, uxtb
  43bd14:	b.ls	43bc98 <nftw@plt+0x39118>  // b.plast
  43bd18:	cbz	w26, 43bd68 <nftw@plt+0x391e8>
  43bd1c:	cmp	w26, #0x5
  43bd20:	b.eq	43c000 <nftw@plt+0x39480>  // b.none
  43bd24:	b.hi	43bf30 <nftw@plt+0x393b0>  // b.pmore
  43bd28:	cmp	w26, #0x3
  43bd2c:	b.eq	43bfc4 <nftw@plt+0x39444>  // b.none
  43bd30:	b.ls	43bef4 <nftw@plt+0x39374>  // b.plast
  43bd34:	cmp	w26, #0x4
  43bd38:	b.ne	43c020 <nftw@plt+0x394a0>  // b.any
  43bd3c:	mov	x0, x28
  43bd40:	bl	439d08 <nftw@plt+0x37188>
  43bd44:	cbz	x0, 43c058 <nftw@plt+0x394d8>
  43bd48:	sub	x1, x0, #0x1
  43bd4c:	ldr	x2, [sp, #304]
  43bd50:	cmp	x1, x2
  43bd54:	b.cs	43bfd4 <nftw@plt+0x39454>  // b.hs, b.nlast
  43bd58:	ldr	x1, [sp, #312]
  43bd5c:	add	x0, x1, x0, lsl #3
  43bd60:	ldur	x22, [x0, #-8]
  43bd64:	b	43bcf8 <nftw@plt+0x39178>
  43bd68:	mov	x0, x28
  43bd6c:	bl	439d08 <nftw@plt+0x37188>
  43bd70:	mov	x27, x0
  43bd74:	mov	x0, x28
  43bd78:	bl	439cd4 <nftw@plt+0x37154>
  43bd7c:	and	w0, w0, #0xff
  43bd80:	cmp	w0, #0x3
  43bd84:	b.eq	43bdc8 <nftw@plt+0x39248>  // b.none
  43bd88:	b.hi	43bdb4 <nftw@plt+0x39234>  // b.pmore
  43bd8c:	cmp	w0, #0x1
  43bd90:	b.eq	43c044 <nftw@plt+0x394c4>  // b.none
  43bd94:	cmp	w0, #0x2
  43bd98:	b.ne	43bec8 <nftw@plt+0x39348>  // b.any
  43bd9c:	ldr	x0, [sp, #136]
  43bda0:	ldr	w1, [x0, #48]
  43bda4:	mov	x0, x28
  43bda8:	bl	439db4 <nftw@plt+0x37234>
  43bdac:	mov	x20, x0
  43bdb0:	b	43bcf8 <nftw@plt+0x39178>
  43bdb4:	cmp	w0, #0x4
  43bdb8:	b.ne	43bec8 <nftw@plt+0x39348>  // b.any
  43bdbc:	mov	x0, x28
  43bdc0:	bl	439d08 <nftw@plt+0x37188>
  43bdc4:	b	43bcf8 <nftw@plt+0x39178>
  43bdc8:	mov	x0, x28
  43bdcc:	bl	439eec <nftw@plt+0x3736c>
  43bdd0:	mov	x22, x0
  43bdd4:	cbz	x0, 43c224 <nftw@plt+0x396a4>
  43bdd8:	mov	x0, x28
  43bddc:	bl	439d08 <nftw@plt+0x37188>
  43bde0:	mov	x26, x0
  43bde4:	mov	x0, x28
  43bde8:	bl	439d08 <nftw@plt+0x37188>
  43bdec:	mov	x0, x28
  43bdf0:	bl	439d08 <nftw@plt+0x37188>
  43bdf4:	ldrb	w0, [x22]
  43bdf8:	cmp	w0, #0x2f
  43bdfc:	b.eq	43bcf8 <nftw@plt+0x39178>  // b.none
  43be00:	cbnz	w26, 43be7c <nftw@plt+0x392fc>
  43be04:	ldr	x0, [sp, #136]
  43be08:	ldr	x0, [x0, #72]
  43be0c:	str	x0, [sp, #200]
  43be10:	ldr	x0, [sp, #200]
  43be14:	bl	4024f0 <strlen@plt>
  43be18:	mov	x26, x0
  43be1c:	mov	x0, x22
  43be20:	bl	4024f0 <strlen@plt>
  43be24:	str	x0, [sp, #208]
  43be28:	add	x1, x26, x0
  43be2c:	ldr	x3, [sp, #368]
  43be30:	ldr	x2, [sp, #360]
  43be34:	add	x1, x1, #0x2
  43be38:	mov	x0, x24
  43be3c:	bl	435960 <nftw@plt+0x32de0>
  43be40:	mov	x27, x0
  43be44:	cbz	x0, 43c240 <nftw@plt+0x396c0>
  43be48:	mov	x2, x26
  43be4c:	ldr	x1, [sp, #200]
  43be50:	bl	402490 <memcpy@plt>
  43be54:	mov	w0, #0x2f                  	// #47
  43be58:	strb	w0, [x27, x26]
  43be5c:	add	x0, x26, #0x1
  43be60:	ldr	x2, [sp, #208]
  43be64:	add	x2, x2, #0x1
  43be68:	mov	x1, x22
  43be6c:	add	x0, x27, x0
  43be70:	bl	402490 <memcpy@plt>
  43be74:	mov	x22, x27
  43be78:	b	43bcf8 <nftw@plt+0x39178>
  43be7c:	sub	w26, w26, #0x1
  43be80:	ldr	x0, [sp, #288]
  43be84:	cmp	x26, x0
  43be88:	b.cs	43be9c <nftw@plt+0x3931c>  // b.hs, b.nlast
  43be8c:	ldr	x0, [sp, #296]
  43be90:	ldr	x0, [x0, x26, lsl #3]
  43be94:	str	x0, [sp, #200]
  43be98:	b	43be10 <nftw@plt+0x39290>
  43be9c:	ldr	x21, [sp, #152]
  43bea0:	ldr	x22, [sp, #160]
  43bea4:	ldr	x19, [sp, #168]
  43bea8:	ldr	x20, [sp, #176]
  43beac:	ldr	x27, [sp, #184]
  43beb0:	ldr	x26, [sp, #192]
  43beb4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43beb8:	add	x1, x1, #0xf68
  43bebc:	add	x0, sp, #0x140
  43bec0:	bl	439a40 <nftw@plt+0x36ec0>
  43bec4:	b	43b6bc <nftw@plt+0x38b3c>
  43bec8:	sub	x1, x27, #0x1
  43becc:	mov	x0, x28
  43bed0:	bl	439a9c <nftw@plt+0x36f1c>
  43bed4:	cbnz	w0, 43bcf8 <nftw@plt+0x39178>
  43bed8:	ldr	x21, [sp, #152]
  43bedc:	ldr	x22, [sp, #160]
  43bee0:	ldr	x19, [sp, #168]
  43bee4:	ldr	x20, [sp, #176]
  43bee8:	ldr	x27, [sp, #184]
  43beec:	ldr	x26, [sp, #192]
  43bef0:	b	43b6bc <nftw@plt+0x38b3c>
  43bef4:	cmp	w26, #0x1
  43bef8:	b.eq	43bf9c <nftw@plt+0x3941c>  // b.none
  43befc:	cmp	w26, #0x2
  43bf00:	b.ne	43c020 <nftw@plt+0x394a0>  // b.any
  43bf04:	mov	x0, x28
  43bf08:	bl	439d08 <nftw@plt+0x37188>
  43bf0c:	add	x19, x0, w19, uxtw
  43bf10:	ldr	w1, [sp, #264]
  43bf14:	ldr	w0, [sp, #260]
  43bf18:	mul	x0, x0, x19
  43bf1c:	udiv	x0, x0, x1
  43bf20:	add	x20, x20, x0
  43bf24:	udiv	x0, x19, x1
  43bf28:	msub	w19, w0, w1, w19
  43bf2c:	b	43bcf8 <nftw@plt+0x39178>
  43bf30:	cmp	w26, #0x9
  43bf34:	b.eq	43c00c <nftw@plt+0x3948c>  // b.none
  43bf38:	b.ls	43bf58 <nftw@plt+0x393d8>  // b.plast
  43bf3c:	cmp	w26, #0xb
  43bf40:	b.ls	43bcf8 <nftw@plt+0x39178>  // b.plast
  43bf44:	cmp	w26, #0xc
  43bf48:	b.ne	43c020 <nftw@plt+0x394a0>  // b.any
  43bf4c:	mov	x0, x28
  43bf50:	bl	439d08 <nftw@plt+0x37188>
  43bf54:	b	43bcf8 <nftw@plt+0x39178>
  43bf58:	cmp	w26, #0x7
  43bf5c:	b.ls	43bcf8 <nftw@plt+0x39178>  // b.plast
  43bf60:	cmp	w26, #0x8
  43bf64:	b.ne	43c020 <nftw@plt+0x394a0>  // b.any
  43bf68:	mov	w0, #0xff                  	// #255
  43bf6c:	sub	w0, w0, w1
  43bf70:	ldr	w1, [sp, #272]
  43bf74:	udiv	w0, w0, w1
  43bf78:	add	w19, w0, w19
  43bf7c:	ldr	w1, [sp, #264]
  43bf80:	ldr	w0, [sp, #260]
  43bf84:	mul	w0, w19, w0
  43bf88:	udiv	w0, w0, w1
  43bf8c:	add	x20, x20, x0
  43bf90:	udiv	w0, w19, w1
  43bf94:	msub	w19, w0, w1, w19
  43bf98:	b	43bcf8 <nftw@plt+0x39178>
  43bf9c:	mov	x7, x25
  43bfa0:	ldr	x6, [sp, #368]
  43bfa4:	ldr	x5, [sp, #360]
  43bfa8:	mov	w4, w21
  43bfac:	mov	x3, x22
  43bfb0:	mov	x2, x20
  43bfb4:	mov	x1, x23
  43bfb8:	mov	x0, x24
  43bfbc:	bl	4397d0 <nftw@plt+0x36c50>
  43bfc0:	b	43bcf8 <nftw@plt+0x39178>
  43bfc4:	mov	x0, x28
  43bfc8:	bl	439e24 <nftw@plt+0x372a4>
  43bfcc:	add	w21, w21, w0
  43bfd0:	b	43bcf8 <nftw@plt+0x39178>
  43bfd4:	ldr	x21, [sp, #152]
  43bfd8:	ldr	x22, [sp, #160]
  43bfdc:	ldr	x19, [sp, #168]
  43bfe0:	ldr	x20, [sp, #176]
  43bfe4:	ldr	x27, [sp, #184]
  43bfe8:	ldr	x26, [sp, #192]
  43bfec:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43bff0:	add	x1, x1, #0xf98
  43bff4:	add	x0, sp, #0x140
  43bff8:	bl	439a40 <nftw@plt+0x36ec0>
  43bffc:	b	43b6bc <nftw@plt+0x38b3c>
  43c000:	mov	x0, x28
  43c004:	bl	439d08 <nftw@plt+0x37188>
  43c008:	b	43bcf8 <nftw@plt+0x39178>
  43c00c:	mov	x0, x28
  43c010:	bl	439c7c <nftw@plt+0x370fc>
  43c014:	add	x20, x20, w0, uxth
  43c018:	mov	w19, #0x0                   	// #0
  43c01c:	b	43bcf8 <nftw@plt+0x39178>
  43c020:	sub	w26, w26, #0x1
  43c024:	ldr	x0, [sp, #280]
  43c028:	ldrb	w26, [x0, w26, uxtw]
  43c02c:	cbz	w26, 43bcf8 <nftw@plt+0x39178>
  43c030:	mov	x0, x28
  43c034:	bl	439d08 <nftw@plt+0x37188>
  43c038:	subs	w26, w26, #0x1
  43c03c:	b.ne	43c030 <nftw@plt+0x394b0>  // b.any
  43c040:	b	43bcf8 <nftw@plt+0x39178>
  43c044:	ldr	x22, [sp, #144]
  43c048:	mov	w19, w26
  43c04c:	mov	w21, #0x1                   	// #1
  43c050:	mov	x20, #0x0                   	// #0
  43c054:	b	43bcf8 <nftw@plt+0x39178>
  43c058:	ldr	x22, [sp, #216]
  43c05c:	b	43bcf8 <nftw@plt+0x39178>
  43c060:	ldr	x21, [sp, #152]
  43c064:	ldr	x22, [sp, #160]
  43c068:	ldr	x19, [sp, #168]
  43c06c:	ldr	x20, [sp, #176]
  43c070:	ldr	x27, [sp, #184]
  43c074:	ldr	x26, [sp, #192]
  43c078:	ldr	w0, [sp, #376]
  43c07c:	cbnz	w0, 43b6bc <nftw@plt+0x38b3c>
  43c080:	ldr	x0, [sp, #248]
  43c084:	cbz	x0, 43b6bc <nftw@plt+0x38b3c>
  43c088:	add	x4, sp, #0xe0
  43c08c:	mov	x3, x27
  43c090:	ldr	x25, [sp, #128]
  43c094:	mov	x2, x25
  43c098:	mov	x1, #0x18                  	// #24
  43c09c:	mov	x0, x24
  43c0a0:	bl	435acc <nftw@plt+0x32f4c>
  43c0a4:	cbz	x0, 43b6bc <nftw@plt+0x38b3c>
  43c0a8:	mov	x1, #0xffffffffffffffff    	// #-1
  43c0ac:	str	x1, [x0]
  43c0b0:	str	xzr, [x0, #8]
  43c0b4:	str	wzr, [x0, #16]
  43c0b8:	str	wzr, [x0, #20]
  43c0bc:	mov	x3, x27
  43c0c0:	mov	x2, x25
  43c0c4:	add	x1, sp, #0xe0
  43c0c8:	mov	x0, x24
  43c0cc:	bl	435c0c <nftw@plt+0x3308c>
  43c0d0:	cbz	w0, 43b6bc <nftw@plt+0x38b3c>
  43c0d4:	ldr	x0, [sp, #224]
  43c0d8:	str	x0, [sp, #136]
  43c0dc:	adrp	x3, 439000 <nftw@plt+0x36480>
  43c0e0:	add	x3, x3, #0x544
  43c0e4:	mov	x2, #0x18                  	// #24
  43c0e8:	ldr	x1, [sp, #248]
  43c0ec:	bl	43d00c <nftw@plt+0x3a48c>
  43c0f0:	ldr	x0, [sp, #248]
  43c0f4:	str	x0, [sp, #144]
  43c0f8:	ldr	w0, [x24, #8]
  43c0fc:	cbnz	w0, 43c5bc <nftw@plt+0x39a3c>
  43c100:	add	x25, x23, #0x80
  43c104:	ldr	x28, [x19, #16]
  43c108:	str	x25, [sp, #176]
  43c10c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43c110:	add	x0, x0, #0x380
  43c114:	str	x0, [sp, #384]
  43c118:	ldr	x0, [x23, #56]
  43c11c:	str	x0, [sp, #392]
  43c120:	ldr	x0, [x28]
  43c124:	str	x0, [sp, #400]
  43c128:	ldr	x0, [x28, #8]
  43c12c:	str	x0, [sp, #408]
  43c130:	ldr	w0, [x23, #120]
  43c134:	str	w0, [sp, #416]
  43c138:	ldr	x0, [sp, #128]
  43c13c:	str	x0, [sp, #424]
  43c140:	str	x27, [sp, #432]
  43c144:	str	wzr, [sp, #440]
  43c148:	add	x1, sp, #0x100
  43c14c:	add	x2, sp, #0x180
  43c150:	str	x21, [sp, #152]
  43c154:	str	x22, [sp, #160]
  43c158:	str	x19, [sp, #168]
  43c15c:	mov	x19, x0
  43c160:	mov	x21, x1
  43c164:	mov	x22, x2
  43c168:	ldr	x0, [sp, #408]
  43c16c:	cbz	x0, 43c25c <nftw@plt+0x396dc>
  43c170:	str	x25, [sp, #8]
  43c174:	str	x25, [sp]
  43c178:	mov	x7, x27
  43c17c:	mov	x6, x19
  43c180:	mov	x5, x21
  43c184:	mov	x4, x22
  43c188:	mov	x3, #0x0                   	// #0
  43c18c:	mov	x2, x28
  43c190:	mov	x1, x23
  43c194:	mov	x0, x24
  43c198:	bl	43ad4c <nftw@plt+0x381cc>
  43c19c:	cbnz	w0, 43c168 <nftw@plt+0x395e8>
  43c1a0:	ldr	x21, [sp, #152]
  43c1a4:	ldr	x22, [sp, #160]
  43c1a8:	ldr	x19, [sp, #168]
  43c1ac:	mov	x28, #0x0                   	// #0
  43c1b0:	mov	x3, x27
  43c1b4:	ldr	x2, [sp, #128]
  43c1b8:	add	x1, sp, #0x100
  43c1bc:	mov	x0, x24
  43c1c0:	bl	43b450 <nftw@plt+0x388d0>
  43c1c4:	mov	w0, #0x1                   	// #1
  43c1c8:	b	43b710 <nftw@plt+0x38b90>
  43c1cc:	ldr	x21, [sp, #144]
  43c1d0:	b	43b6bc <nftw@plt+0x38b3c>
  43c1d4:	ldr	x21, [sp, #144]
  43c1d8:	b	43b6bc <nftw@plt+0x38b3c>
  43c1dc:	ldr	x21, [sp, #144]
  43c1e0:	ldr	x22, [sp, #152]
  43c1e4:	ldr	x19, [sp, #160]
  43c1e8:	ldr	x23, [sp, #168]
  43c1ec:	ldr	x20, [sp, #176]
  43c1f0:	b	43b6bc <nftw@plt+0x38b3c>
  43c1f4:	ldr	x21, [sp, #144]
  43c1f8:	ldr	x22, [sp, #152]
  43c1fc:	ldr	x19, [sp, #160]
  43c200:	ldr	x23, [sp, #168]
  43c204:	ldr	x20, [sp, #176]
  43c208:	b	43b6bc <nftw@plt+0x38b3c>
  43c20c:	ldr	x21, [sp, #144]
  43c210:	ldr	x22, [sp, #152]
  43c214:	ldr	x19, [sp, #160]
  43c218:	ldr	x23, [sp, #168]
  43c21c:	ldr	x20, [sp, #176]
  43c220:	b	43b6bc <nftw@plt+0x38b3c>
  43c224:	ldr	x21, [sp, #152]
  43c228:	ldr	x22, [sp, #160]
  43c22c:	ldr	x19, [sp, #168]
  43c230:	ldr	x20, [sp, #176]
  43c234:	ldr	x27, [sp, #184]
  43c238:	ldr	x26, [sp, #192]
  43c23c:	b	43b6bc <nftw@plt+0x38b3c>
  43c240:	ldr	x21, [sp, #152]
  43c244:	ldr	x22, [sp, #160]
  43c248:	ldr	x19, [sp, #168]
  43c24c:	ldr	x20, [sp, #176]
  43c250:	ldr	x27, [sp, #184]
  43c254:	ldr	x26, [sp, #192]
  43c258:	b	43b6bc <nftw@plt+0x38b3c>
  43c25c:	ldr	x21, [sp, #152]
  43c260:	ldr	x22, [sp, #160]
  43c264:	ldr	x19, [sp, #168]
  43c268:	ldr	x28, [x25, #24]
  43c26c:	cbz	x28, 43c1ac <nftw@plt+0x3962c>
  43c270:	ldr	x0, [sp, #176]
  43c274:	cbz	x0, 43c2b8 <nftw@plt+0x39738>
  43c278:	mov	x3, x27
  43c27c:	ldr	x2, [sp, #128]
  43c280:	ldr	x25, [sp, #176]
  43c284:	mov	x1, x25
  43c288:	mov	x0, x24
  43c28c:	bl	435bf4 <nftw@plt+0x33074>
  43c290:	cbz	x0, 43c1ac <nftw@plt+0x3962c>
  43c294:	str	xzr, [x25, #24]
  43c298:	mov	x21, x0
  43c29c:	adrp	x3, 43a000 <nftw@plt+0x37480>
  43c2a0:	add	x3, x3, #0xce4
  43c2a4:	mov	x2, #0x18                  	// #24
  43c2a8:	mov	x1, x28
  43c2ac:	mov	x0, x21
  43c2b0:	bl	43d00c <nftw@plt+0x3a48c>
  43c2b4:	b	43c1b0 <nftw@plt+0x39630>
  43c2b8:	mov	x3, x27
  43c2bc:	ldr	x2, [sp, #128]
  43c2c0:	add	x1, sp, #0x140
  43c2c4:	mov	x0, x24
  43c2c8:	bl	435c0c <nftw@plt+0x3308c>
  43c2cc:	cbz	w0, 43c1ac <nftw@plt+0x3962c>
  43c2d0:	ldr	x21, [x25]
  43c2d4:	b	43c29c <nftw@plt+0x3971c>
  43c2d8:	add	x1, x22, #0x70
  43c2dc:	ldr	x2, [sp, #144]
  43c2e0:	stlr	x2, [x1]
  43c2e4:	add	x1, x22, #0x78
  43c2e8:	stlr	x21, [x1]
  43c2ec:	add	x1, x22, #0x80
  43c2f0:	stlr	x28, [x1]
  43c2f4:	add	x22, x22, #0x68
  43c2f8:	ldr	x1, [sp, #136]
  43c2fc:	stlr	x1, [x22]
  43c300:	b	43b730 <nftw@plt+0x38bb0>
  43c304:	mov	x4, #0x0                   	// #0
  43c308:	mov	w3, #0x0                   	// #0
  43c30c:	mov	x2, #0x0                   	// #0
  43c310:	mov	x1, x20
  43c314:	mov	x0, x27
  43c318:	ldr	x5, [sp, #120]
  43c31c:	blr	x5
  43c320:	ldp	x19, x20, [sp, #32]
  43c324:	ldp	x21, x22, [sp, #48]
  43c328:	ldp	x27, x28, [sp, #96]
  43c32c:	b	43b604 <nftw@plt+0x38a84>
  43c330:	ldr	x21, [sp, #136]
  43c334:	b	43c654 <nftw@plt+0x39ad4>
  43c338:	mov	x3, x1
  43c33c:	cmp	x2, x3
  43c340:	b.cs	43c584 <nftw@plt+0x39a04>  // b.hs, b.nlast
  43c344:	add	x0, x2, x3
  43c348:	lsr	x1, x0, #1
  43c34c:	and	x0, x0, #0xfffffffffffffffe
  43c350:	add	x0, x0, x1
  43c354:	add	x5, x21, x0, lsl #3
  43c358:	ldr	x0, [x21, x0, lsl #3]
  43c35c:	cmp	x0, x20
  43c360:	b.hi	43c338 <nftw@plt+0x397b8>  // b.pmore
  43c364:	ldr	x0, [x5, #24]
  43c368:	cmp	x0, x20
  43c36c:	b.hi	43c56c <nftw@plt+0x399ec>  // b.pmore
  43c370:	add	x2, x1, #0x1
  43c374:	b	43c33c <nftw@plt+0x397bc>
  43c378:	ldr	x21, [x4, #64]
  43c37c:	cbz	x21, 43c3f8 <nftw@plt+0x39878>
  43c380:	ldrb	w0, [x21]
  43c384:	cmp	w0, #0x2f
  43c388:	b.eq	43c3f8 <nftw@plt+0x39878>  // b.none
  43c38c:	ldr	x23, [x4, #72]
  43c390:	cbz	x23, 43c3f8 <nftw@plt+0x39878>
  43c394:	mov	x0, x21
  43c398:	bl	4024f0 <strlen@plt>
  43c39c:	mov	x25, x0
  43c3a0:	mov	x0, x23
  43c3a4:	bl	4024f0 <strlen@plt>
  43c3a8:	mov	x22, x0
  43c3ac:	add	x1, x25, x0
  43c3b0:	mov	x3, x27
  43c3b4:	ldr	x2, [sp, #128]
  43c3b8:	add	x1, x1, #0x2
  43c3bc:	mov	x0, x24
  43c3c0:	bl	435960 <nftw@plt+0x32de0>
  43c3c4:	mov	x24, x0
  43c3c8:	cbz	x0, 43c404 <nftw@plt+0x39884>
  43c3cc:	mov	x2, x22
  43c3d0:	mov	x1, x23
  43c3d4:	bl	402490 <memcpy@plt>
  43c3d8:	mov	w0, #0x2f                  	// #47
  43c3dc:	strb	w0, [x24, x22]
  43c3e0:	add	x0, x22, #0x1
  43c3e4:	add	x2, x25, #0x1
  43c3e8:	mov	x1, x21
  43c3ec:	add	x0, x24, x0
  43c3f0:	bl	402490 <memcpy@plt>
  43c3f4:	mov	x21, x24
  43c3f8:	ldr	x0, [x19, #16]
  43c3fc:	str	x21, [x0, #80]
  43c400:	b	43c58c <nftw@plt+0x39a0c>
  43c404:	str	wzr, [x26]
  43c408:	mov	w0, #0x0                   	// #0
  43c40c:	ldp	x19, x20, [sp, #32]
  43c410:	ldp	x21, x22, [sp, #48]
  43c414:	ldp	x27, x28, [sp, #96]
  43c418:	b	43b604 <nftw@plt+0x38a84>
  43c41c:	mov	x4, #0x0                   	// #0
  43c420:	ldr	w3, [x5, #16]
  43c424:	ldr	x2, [x5, #8]
  43c428:	mov	x1, x20
  43c42c:	mov	x0, x27
  43c430:	ldr	x5, [sp, #120]
  43c434:	blr	x5
  43c438:	ldp	x19, x20, [sp, #32]
  43c43c:	ldp	x21, x22, [sp, #48]
  43c440:	ldp	x27, x28, [sp, #96]
  43c444:	b	43b604 <nftw@plt+0x38a84>
  43c448:	mov	x6, x2
  43c44c:	cmp	x4, x6
  43c450:	b.cs	43c540 <nftw@plt+0x399c0>  // b.hs, b.nlast
  43c454:	add	x0, x4, x6
  43c458:	lsr	x2, x0, #1
  43c45c:	and	x0, x0, #0xfffffffffffffffe
  43c460:	add	x0, x0, x2
  43c464:	lsl	x1, x0, #3
  43c468:	mov	x7, x1
  43c46c:	add	x1, x3, x1
  43c470:	ldr	x0, [x3, x0, lsl #3]
  43c474:	cmp	x0, x20
  43c478:	b.hi	43c448 <nftw@plt+0x398c8>  // b.pmore
  43c47c:	ldr	x0, [x1, #8]
  43c480:	cmp	x0, x20
  43c484:	b.hi	43c490 <nftw@plt+0x39910>  // b.pmore
  43c488:	add	x4, x2, #0x1
  43c48c:	b	43c44c <nftw@plt+0x398cc>
  43c490:	asr	x0, x7, #3
  43c494:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43c498:	movk	x2, #0xaaab
  43c49c:	mul	x0, x0, x2
  43c4a0:	add	x0, x0, #0x1
  43c4a4:	cmp	x8, x0
  43c4a8:	b.ls	43c4e0 <nftw@plt+0x39960>  // b.plast
  43c4ac:	ldr	x0, [x1, #24]
  43c4b0:	cmp	x0, x20
  43c4b4:	b.hi	43c4e0 <nftw@plt+0x39960>  // b.pmore
  43c4b8:	ldr	x0, [x1, #32]
  43c4bc:	cmp	x0, x20
  43c4c0:	b.ls	43c4e0 <nftw@plt+0x39960>  // b.plast
  43c4c4:	add	x1, x1, #0x18
  43c4c8:	sub	x0, x1, x3
  43c4cc:	asr	x0, x0, #3
  43c4d0:	mul	x0, x0, x2
  43c4d4:	add	x0, x0, #0x1
  43c4d8:	cmp	x8, x0
  43c4dc:	b.hi	43c4ac <nftw@plt+0x3992c>  // b.pmore
  43c4e0:	ldr	x19, [x1, #16]
  43c4e4:	ldr	x0, [x5, #8]
  43c4e8:	str	x0, [sp, #456]
  43c4ec:	ldr	w0, [x5, #16]
  43c4f0:	str	w0, [sp, #452]
  43c4f4:	add	x5, sp, #0x1c4
  43c4f8:	add	x4, sp, #0x1c8
  43c4fc:	mov	x3, x27
  43c500:	ldr	x21, [sp, #120]
  43c504:	mov	x2, x21
  43c508:	mov	x1, x19
  43c50c:	mov	x0, x20
  43c510:	bl	4395a0 <nftw@plt+0x36a20>
  43c514:	cbnz	w0, 43c664 <nftw@plt+0x39ae4>
  43c518:	ldr	x4, [x19]
  43c51c:	ldr	w3, [sp, #452]
  43c520:	ldr	x2, [sp, #456]
  43c524:	mov	x1, x20
  43c528:	mov	x0, x27
  43c52c:	blr	x21
  43c530:	ldp	x19, x20, [sp, #32]
  43c534:	ldp	x21, x22, [sp, #48]
  43c538:	ldp	x27, x28, [sp, #96]
  43c53c:	b	43b604 <nftw@plt+0x38a84>
  43c540:	mov	x4, #0x0                   	// #0
  43c544:	ldr	w3, [x5, #16]
  43c548:	ldr	x2, [x5, #8]
  43c54c:	mov	x1, x20
  43c550:	mov	x0, x27
  43c554:	ldr	x5, [sp, #120]
  43c558:	blr	x5
  43c55c:	ldp	x19, x20, [sp, #32]
  43c560:	ldp	x21, x22, [sp, #48]
  43c564:	ldp	x27, x28, [sp, #96]
  43c568:	b	43b604 <nftw@plt+0x38a84>
  43c56c:	ldr	x8, [x4, #128]
  43c570:	cbz	x8, 43c41c <nftw@plt+0x3989c>
  43c574:	ldr	x3, [x4, #120]
  43c578:	mov	x6, x8
  43c57c:	mov	x4, #0x0                   	// #0
  43c580:	b	43c44c <nftw@plt+0x398cc>
  43c584:	ldr	x0, [x4, #80]
  43c588:	cbz	x0, 43c378 <nftw@plt+0x397f8>
  43c58c:	ldr	x0, [x19, #16]
  43c590:	mov	x4, #0x0                   	// #0
  43c594:	mov	w3, #0x0                   	// #0
  43c598:	ldr	x2, [x0, #80]
  43c59c:	mov	x1, x20
  43c5a0:	mov	x0, x27
  43c5a4:	ldr	x5, [sp, #120]
  43c5a8:	blr	x5
  43c5ac:	ldp	x19, x20, [sp, #32]
  43c5b0:	ldp	x21, x22, [sp, #48]
  43c5b4:	ldp	x27, x28, [sp, #96]
  43c5b8:	b	43b604 <nftw@plt+0x38a84>
  43c5bc:	ldr	x28, [x19, #16]
  43c5c0:	stp	xzr, xzr, [sp, #320]
  43c5c4:	stp	xzr, xzr, [sp, #336]
  43c5c8:	str	x21, [sp, #176]
  43c5cc:	add	x25, sp, #0x140
  43c5d0:	b	43c10c <nftw@plt+0x3958c>
  43c5d4:	stp	x21, x22, [sp, #48]
  43c5d8:	mov	x19, x1
  43c5dc:	asr	x0, x5, #3
  43c5e0:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43c5e4:	movk	x5, #0xaaab
  43c5e8:	mul	x0, x0, x5
  43c5ec:	add	x0, x0, #0x1
  43c5f0:	mov	x1, x5
  43c5f4:	cmp	x6, x0
  43c5f8:	b.ls	43c630 <nftw@plt+0x39ab0>  // b.plast
  43c5fc:	ldr	x0, [x19, #24]
  43c600:	cmp	x0, x20
  43c604:	b.hi	43c630 <nftw@plt+0x39ab0>  // b.pmore
  43c608:	ldr	x0, [x19, #32]
  43c60c:	cmp	x0, x20
  43c610:	b.ls	43c630 <nftw@plt+0x39ab0>  // b.plast
  43c614:	add	x19, x19, #0x18
  43c618:	sub	x0, x19, x2
  43c61c:	asr	x0, x0, #3
  43c620:	mul	x0, x0, x1
  43c624:	add	x0, x0, #0x1
  43c628:	cmp	x6, x0
  43c62c:	b.hi	43c5fc <nftw@plt+0x39a7c>  // b.pmore
  43c630:	ldr	x22, [x19, #16]
  43c634:	ldr	x21, [x22, #104]
  43c638:	cmp	x2, x19
  43c63c:	b.cc	43b640 <nftw@plt+0x38ac0>  // b.lo, b.ul, b.last
  43c640:	ldr	w0, [x24, #8]
  43c644:	cbnz	w0, 43b664 <nftw@plt+0x38ae4>
  43c648:	cbz	x21, 43b670 <nftw@plt+0x38af0>
  43c64c:	cmn	x21, #0x1
  43c650:	b.eq	43c304 <nftw@plt+0x39784>  // b.none
  43c654:	ldr	x4, [x19, #16]
  43c658:	ldr	x3, [x4, #112]
  43c65c:	mov	x2, #0x0                   	// #0
  43c660:	b	43c33c <nftw@plt+0x397bc>
  43c664:	ldp	x19, x20, [sp, #32]
  43c668:	ldp	x21, x22, [sp, #48]
  43c66c:	ldp	x27, x28, [sp, #96]
  43c670:	b	43b604 <nftw@plt+0x38a84>
  43c674:	stp	x29, x30, [sp, #-96]!
  43c678:	mov	x29, sp
  43c67c:	stp	x19, x20, [sp, #16]
  43c680:	stp	x21, x22, [sp, #32]
  43c684:	stp	x23, x24, [sp, #48]
  43c688:	mov	x20, x0
  43c68c:	mov	x23, x1
  43c690:	mov	x21, x2
  43c694:	mov	x24, x3
  43c698:	mov	x22, x4
  43c69c:	ldr	w0, [x0, #8]
  43c6a0:	cbnz	w0, 43c6f0 <nftw@plt+0x39b70>
  43c6a4:	ldr	x19, [x20, #32]
  43c6a8:	cbz	x19, 43c73c <nftw@plt+0x39bbc>
  43c6ac:	str	x25, [sp, #64]
  43c6b0:	add	x25, sp, #0x5c
  43c6b4:	mov	x6, x25
  43c6b8:	mov	x5, x22
  43c6bc:	mov	x4, x24
  43c6c0:	mov	x3, x21
  43c6c4:	mov	x2, x23
  43c6c8:	mov	x1, x19
  43c6cc:	mov	x0, x20
  43c6d0:	bl	43b554 <nftw@plt+0x389d4>
  43c6d4:	cbnz	w0, 43c768 <nftw@plt+0x39be8>
  43c6d8:	ldr	w1, [sp, #92]
  43c6dc:	cbnz	w1, 43c770 <nftw@plt+0x39bf0>
  43c6e0:	ldr	x19, [x19]
  43c6e4:	cbnz	x19, 43c6b4 <nftw@plt+0x39b34>
  43c6e8:	ldr	x25, [sp, #64]
  43c6ec:	b	43c73c <nftw@plt+0x39bbc>
  43c6f0:	str	x25, [sp, #64]
  43c6f4:	add	x19, x20, #0x20
  43c6f8:	add	x25, sp, #0x5c
  43c6fc:	ldar	x19, [x19]
  43c700:	cbz	x19, 43c738 <nftw@plt+0x39bb8>
  43c704:	mov	x6, x25
  43c708:	mov	x5, x22
  43c70c:	mov	x4, x24
  43c710:	mov	x3, x21
  43c714:	mov	x2, x23
  43c718:	mov	x1, x19
  43c71c:	mov	x0, x20
  43c720:	bl	43b554 <nftw@plt+0x389d4>
  43c724:	cbnz	w0, 43c778 <nftw@plt+0x39bf8>
  43c728:	ldr	w1, [sp, #92]
  43c72c:	cbz	w1, 43c6fc <nftw@plt+0x39b7c>
  43c730:	ldr	x25, [sp, #64]
  43c734:	b	43c754 <nftw@plt+0x39bd4>
  43c738:	ldr	x25, [sp, #64]
  43c73c:	mov	x4, #0x0                   	// #0
  43c740:	mov	w3, #0x0                   	// #0
  43c744:	mov	x2, #0x0                   	// #0
  43c748:	mov	x1, x23
  43c74c:	mov	x0, x22
  43c750:	blr	x21
  43c754:	ldp	x19, x20, [sp, #16]
  43c758:	ldp	x21, x22, [sp, #32]
  43c75c:	ldp	x23, x24, [sp, #48]
  43c760:	ldp	x29, x30, [sp], #96
  43c764:	ret
  43c768:	ldr	x25, [sp, #64]
  43c76c:	b	43c754 <nftw@plt+0x39bd4>
  43c770:	ldr	x25, [sp, #64]
  43c774:	b	43c754 <nftw@plt+0x39bd4>
  43c778:	ldr	x25, [sp, #64]
  43c77c:	b	43c754 <nftw@plt+0x39bd4>
  43c780:	sub	sp, sp, #0x290
  43c784:	stp	x29, x30, [sp, #48]
  43c788:	add	x29, sp, #0x30
  43c78c:	stp	x19, x20, [sp, #64]
  43c790:	stp	x21, x22, [sp, #80]
  43c794:	stp	x23, x24, [sp, #96]
  43c798:	stp	x27, x28, [sp, #128]
  43c79c:	mov	x24, x0
  43c7a0:	str	x1, [sp, #208]
  43c7a4:	str	x2, [sp, #272]
  43c7a8:	str	x3, [sp, #264]
  43c7ac:	str	x4, [sp, #280]
  43c7b0:	str	x5, [sp, #288]
  43c7b4:	str	x6, [sp, #216]
  43c7b8:	str	x7, [sp, #168]
  43c7bc:	ldr	x23, [sp, #704]
  43c7c0:	ldr	x27, [sp, #712]
  43c7c4:	stp	xzr, xzr, [sp, #336]
  43c7c8:	str	xzr, [sp, #352]
  43c7cc:	stp	xzr, xzr, [sp, #368]
  43c7d0:	str	xzr, [sp, #384]
  43c7d4:	str	xzr, [sp, #360]
  43c7d8:	str	xzr, [sp, #392]
  43c7dc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43c7e0:	add	x0, x0, #0x380
  43c7e4:	str	x0, [sp, #400]
  43c7e8:	str	x2, [sp, #408]
  43c7ec:	str	x2, [sp, #416]
  43c7f0:	str	x3, [sp, #424]
  43c7f4:	ldr	w0, [sp, #688]
  43c7f8:	str	w0, [sp, #432]
  43c7fc:	str	x23, [sp, #440]
  43c800:	str	x27, [sp, #448]
  43c804:	str	wzr, [sp, #456]
  43c808:	add	x0, sp, #0x200
  43c80c:	stp	xzr, xzr, [x0, #-200]
  43c810:	str	xzr, [sp, #328]
  43c814:	cbz	x3, 43c850 <nftw@plt+0x39cd0>
  43c818:	stp	x25, x26, [sp, #112]
  43c81c:	str	xzr, [sp, #160]
  43c820:	str	xzr, [sp, #176]
  43c824:	add	x28, sp, #0x190
  43c828:	add	x0, sp, #0x138
  43c82c:	str	x0, [sp, #224]
  43c830:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43c834:	add	x0, x0, #0x3a0
  43c838:	str	x0, [sp, #232]
  43c83c:	add	x0, sp, #0x150
  43c840:	str	x0, [sp, #240]
  43c844:	mov	x26, x24
  43c848:	mov	x24, x27
  43c84c:	b	43ca84 <nftw@plt+0x39f04>
  43c850:	str	x3, [sp, #160]
  43c854:	b	43cdbc <nftw@plt+0x3a23c>
  43c858:	mov	x27, x24
  43c85c:	mov	x24, x26
  43c860:	b	43c8b4 <nftw@plt+0x39d34>
  43c864:	mov	x0, x28
  43c868:	bl	439b88 <nftw@plt+0x37008>
  43c86c:	str	x0, [sp, #152]
  43c870:	mov	w0, #0x1                   	// #1
  43c874:	str	w0, [sp, #192]
  43c878:	b	43caac <nftw@plt+0x39f2c>
  43c87c:	mov	x27, x24
  43c880:	mov	x24, x26
  43c884:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43c888:	add	x1, x1, #0xfc8
  43c88c:	add	x0, sp, #0x1d0
  43c890:	bl	439a40 <nftw@plt+0x36ec0>
  43c894:	b	43c8b4 <nftw@plt+0x39d34>
  43c898:	mov	x27, x24
  43c89c:	mov	x24, x26
  43c8a0:	mov	w2, #0x0                   	// #0
  43c8a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1d9fc>
  43c8a8:	add	x1, x1, #0xfe8
  43c8ac:	mov	x0, x27
  43c8b0:	blr	x23
  43c8b4:	ldr	x0, [sp, #160]
  43c8b8:	cbz	x0, 43c928 <nftw@plt+0x39da8>
  43c8bc:	ldr	x19, [sp, #312]
  43c8c0:	add	x21, x19, x0, lsl #3
  43c8c4:	mov	x20, #0x88                  	// #136
  43c8c8:	ldr	x1, [x19]
  43c8cc:	mov	x3, x27
  43c8d0:	mov	x2, x23
  43c8d4:	add	x1, x1, #0x58
  43c8d8:	mov	x0, x24
  43c8dc:	bl	43b4bc <nftw@plt+0x3893c>
  43c8e0:	mov	x4, x27
  43c8e4:	mov	x3, x23
  43c8e8:	mov	x2, x20
  43c8ec:	ldr	x1, [x19], #8
  43c8f0:	mov	x0, x24
  43c8f4:	bl	4358b4 <nftw@plt+0x32d34>
  43c8f8:	cmp	x21, x19
  43c8fc:	b.ne	43c8c8 <nftw@plt+0x39d48>  // b.any
  43c900:	ldr	x0, [sp, #328]
  43c904:	ldr	x1, [sp, #320]
  43c908:	add	x0, x0, x1
  43c90c:	str	x0, [sp, #328]
  43c910:	str	xzr, [sp, #320]
  43c914:	mov	x3, x27
  43c918:	mov	x2, x23
  43c91c:	add	x1, sp, #0x138
  43c920:	mov	x0, x24
  43c924:	bl	435c0c <nftw@plt+0x3308c>
  43c928:	ldr	x0, [sp, #360]
  43c92c:	cbnz	x0, 43cf70 <nftw@plt+0x3a3f0>
  43c930:	ldp	x25, x26, [sp, #112]
  43c934:	mov	w0, #0x0                   	// #0
  43c938:	b	43cf00 <nftw@plt+0x3a380>
  43c93c:	mov	x0, x20
  43c940:	bl	439d08 <nftw@plt+0x37188>
  43c944:	mov	x0, x20
  43c948:	bl	439d08 <nftw@plt+0x37188>
  43c94c:	cbz	x0, 43c984 <nftw@plt+0x39e04>
  43c950:	ldr	w0, [sp, #648]
  43c954:	cbnz	w0, 43cf40 <nftw@plt+0x3a3c0>
  43c958:	add	x21, x21, #0x1
  43c95c:	mov	x0, x20
  43c960:	bl	439d08 <nftw@plt+0x37188>
  43c964:	mov	x0, x20
  43c968:	bl	439cd4 <nftw@plt+0x37154>
  43c96c:	mov	x0, x20
  43c970:	bl	439d08 <nftw@plt+0x37188>
  43c974:	cbz	x0, 43c93c <nftw@plt+0x39dbc>
  43c978:	mov	x0, x20
  43c97c:	bl	439d08 <nftw@plt+0x37188>
  43c980:	b	43c96c <nftw@plt+0x39dec>
  43c984:	mov	x27, x0
  43c988:	str	x0, [sp, #200]
  43c98c:	ldr	w0, [sp, #648]
  43c990:	cbnz	w0, 43cf4c <nftw@plt+0x3a3cc>
  43c994:	cbnz	x21, 43cbe8 <nftw@plt+0x3a068>
  43c998:	add	x0, sp, #0x1d0
  43c99c:	bl	439cd4 <nftw@plt+0x37154>
  43c9a0:	and	w2, w0, #0xff
  43c9a4:	ldr	x3, [sp, #176]
  43c9a8:	str	x3, [x19, #24]
  43c9ac:	ldr	w4, [sp, #192]
  43c9b0:	cmp	w4, #0x0
  43c9b4:	mov	x0, #0xc                   	// #12
  43c9b8:	mov	x1, #0x4                   	// #4
  43c9bc:	csel	x0, x0, x1, ne  // ne = any
  43c9c0:	ldr	x1, [sp, #152]
  43c9c4:	add	x0, x0, x1
  43c9c8:	add	x0, x3, x0
  43c9cc:	str	x0, [sp, #176]
  43c9d0:	str	x0, [x19, #32]
  43c9d4:	ldr	x1, [sp, #480]
  43c9d8:	str	x1, [x19]
  43c9dc:	ldr	x0, [sp, #488]
  43c9e0:	str	x0, [x19, #8]
  43c9e4:	ldr	x0, [sp, #184]
  43c9e8:	sub	x1, x1, x0
  43c9ec:	str	x1, [x19, #16]
  43c9f0:	ldr	w0, [sp, #196]
  43c9f4:	str	w0, [x19, #40]
  43c9f8:	str	w4, [x19, #44]
  43c9fc:	str	w2, [x19, #48]
  43ca00:	str	xzr, [x19, #64]
  43ca04:	str	xzr, [x19, #72]
  43ca08:	str	xzr, [x19, #80]
  43ca0c:	str	xzr, [x19, #56]
  43ca10:	str	xzr, [x19, #104]
  43ca14:	str	xzr, [x19, #112]
  43ca18:	str	xzr, [x19, #120]
  43ca1c:	str	xzr, [x19, #128]
  43ca20:	add	x0, sp, #0x250
  43ca24:	str	x0, [sp, #40]
  43ca28:	ldr	x0, [sp, #240]
  43ca2c:	str	x0, [sp, #32]
  43ca30:	str	x19, [sp, #24]
  43ca34:	str	x24, [sp, #16]
  43ca38:	str	x23, [sp, #8]
  43ca3c:	ldr	x0, [sp, #696]
  43ca40:	str	x0, [sp]
  43ca44:	ldr	w7, [sp, #688]
  43ca48:	ldr	x6, [sp, #664]
  43ca4c:	ldr	x5, [sp, #656]
  43ca50:	ldr	x4, [sp, #680]
  43ca54:	ldr	x3, [sp, #672]
  43ca58:	add	x2, sp, #0x1d0
  43ca5c:	ldr	x1, [sp, #208]
  43ca60:	mov	x0, x26
  43ca64:	bl	43a840 <nftw@plt+0x37cc0>
  43ca68:	cbz	w0, 43cfd8 <nftw@plt+0x3a458>
  43ca6c:	ldr	w0, [sp, #520]
  43ca70:	cbnz	w0, 43cf64 <nftw@plt+0x3a3e4>
  43ca74:	ldr	x0, [sp, #424]
  43ca78:	cbz	x0, 43cda8 <nftw@plt+0x3a228>
  43ca7c:	ldr	w0, [sp, #456]
  43ca80:	cbnz	w0, 43c858 <nftw@plt+0x39cd8>
  43ca84:	ldr	x0, [sp, #416]
  43ca88:	str	x0, [sp, #184]
  43ca8c:	mov	x0, x28
  43ca90:	bl	439b08 <nftw@plt+0x36f88>
  43ca94:	mov	w1, w0
  43ca98:	str	x1, [sp, #152]
  43ca9c:	str	wzr, [sp, #192]
  43caa0:	mov	x1, #0xffffffff            	// #4294967295
  43caa4:	cmp	x1, w0, uxtw
  43caa8:	b.eq	43c864 <nftw@plt+0x39ce4>  // b.none
  43caac:	ldp	x0, x1, [x28]
  43cab0:	stp	x0, x1, [sp, #464]
  43cab4:	ldp	x0, x1, [x28, #16]
  43cab8:	stp	x0, x1, [sp, #480]
  43cabc:	ldp	x0, x1, [x28, #32]
  43cac0:	stp	x0, x1, [sp, #496]
  43cac4:	ldp	x0, x1, [x28, #48]
  43cac8:	add	x2, sp, #0x200
  43cacc:	stp	x0, x1, [x2]
  43cad0:	ldr	x0, [sp, #152]
  43cad4:	str	x0, [sp, #488]
  43cad8:	mov	x1, x0
  43cadc:	mov	x0, x28
  43cae0:	bl	439a9c <nftw@plt+0x36f1c>
  43cae4:	cbz	w0, 43cf1c <nftw@plt+0x3a39c>
  43cae8:	add	x0, sp, #0x1d0
  43caec:	bl	439c7c <nftw@plt+0x370fc>
  43caf0:	and	w0, w0, #0xffff
  43caf4:	str	w0, [sp, #196]
  43caf8:	sub	w0, w0, #0x2
  43cafc:	cmp	w0, #0x2
  43cb00:	b.hi	43c87c <nftw@plt+0x39cfc>  // b.pmore
  43cb04:	ldr	x4, [sp, #224]
  43cb08:	mov	x3, x24
  43cb0c:	mov	x2, x23
  43cb10:	mov	x1, #0x8                   	// #8
  43cb14:	mov	x0, x26
  43cb18:	bl	435acc <nftw@plt+0x32f4c>
  43cb1c:	mov	x20, x0
  43cb20:	cbz	x0, 43cf28 <nftw@plt+0x3a3a8>
  43cb24:	mov	x3, x24
  43cb28:	mov	x2, x23
  43cb2c:	mov	x1, #0x88                  	// #136
  43cb30:	mov	x0, x26
  43cb34:	bl	435960 <nftw@plt+0x32de0>
  43cb38:	mov	x19, x0
  43cb3c:	cbz	x0, 43cf34 <nftw@plt+0x3a3b4>
  43cb40:	str	x0, [x20]
  43cb44:	ldr	x0, [sp, #160]
  43cb48:	add	x0, x0, #0x1
  43cb4c:	str	x0, [sp, #160]
  43cb50:	add	x0, x19, #0x58
  43cb54:	str	x0, [sp, #248]
  43cb58:	stp	xzr, xzr, [x19, #88]
  43cb5c:	ldr	w1, [sp, #192]
  43cb60:	add	x0, sp, #0x1d0
  43cb64:	bl	439c58 <nftw@plt+0x370d8>
  43cb68:	str	xzr, [x19, #88]
  43cb6c:	str	xzr, [x19, #96]
  43cb70:	ldr	x1, [sp, #168]
  43cb74:	cmp	x1, x0
  43cb78:	b.ls	43c898 <nftw@plt+0x39d18>  // b.plast
  43cb7c:	ldr	x1, [sp, #232]
  43cb80:	str	x1, [sp, #528]
  43cb84:	ldr	x1, [sp, #216]
  43cb88:	str	x1, [sp, #536]
  43cb8c:	add	x1, x1, x0
  43cb90:	str	x1, [sp, #544]
  43cb94:	ldr	x1, [sp, #168]
  43cb98:	sub	x0, x1, x0
  43cb9c:	str	x0, [sp, #552]
  43cba0:	ldr	w0, [sp, #688]
  43cba4:	str	w0, [sp, #560]
  43cba8:	str	x23, [sp, #568]
  43cbac:	str	x24, [sp, #576]
  43cbb0:	str	wzr, [sp, #584]
  43cbb4:	add	x0, sp, #0x200
  43cbb8:	ldp	x0, x1, [x0, #16]
  43cbbc:	add	x2, sp, #0x200
  43cbc0:	stp	x0, x1, [x2, #80]
  43cbc4:	ldp	x0, x1, [x2, #32]
  43cbc8:	stp	x0, x1, [x2, #96]
  43cbcc:	ldp	x0, x1, [x2, #48]
  43cbd0:	stp	x0, x1, [x2, #112]
  43cbd4:	ldp	x0, x1, [x2, #64]
  43cbd8:	stp	x0, x1, [x2, #128]
  43cbdc:	mov	x21, #0x0                   	// #0
  43cbe0:	add	x20, sp, #0x250
  43cbe4:	b	43c944 <nftw@plt+0x39dc4>
  43cbe8:	lsl	x20, x21, #5
  43cbec:	mov	x3, x24
  43cbf0:	mov	x2, x23
  43cbf4:	mov	x1, x20
  43cbf8:	mov	x0, x26
  43cbfc:	bl	435960 <nftw@plt+0x32de0>
  43cc00:	str	x0, [x19, #96]
  43cc04:	cbz	x0, 43cf58 <nftw@plt+0x3a3d8>
  43cc08:	str	x21, [x19, #88]
  43cc0c:	mov	x2, x20
  43cc10:	mov	w1, #0x0                   	// #0
  43cc14:	bl	4026f0 <memset@plt>
  43cc18:	ldr	w0, [sp, #584]
  43cc1c:	cbnz	w0, 43cd60 <nftw@plt+0x3a1e0>
  43cc20:	add	x20, sp, #0x210
  43cc24:	str	x26, [sp, #256]
  43cc28:	str	x23, [sp, #704]
  43cc2c:	str	x24, [sp, #712]
  43cc30:	str	x28, [sp, #296]
  43cc34:	b	43cc94 <nftw@plt+0x3a114>
  43cc38:	add	x21, x21, #0x1
  43cc3c:	mov	x0, x22
  43cc40:	bl	439d08 <nftw@plt+0x37188>
  43cc44:	mov	x0, x22
  43cc48:	bl	439d08 <nftw@plt+0x37188>
  43cc4c:	mov	x24, x0
  43cc50:	cbnz	x0, 43cc38 <nftw@plt+0x3a0b8>
  43cc54:	cbnz	x21, 43ccec <nftw@plt+0x3a16c>
  43cc58:	mov	x0, x20
  43cc5c:	bl	439d08 <nftw@plt+0x37188>
  43cc60:	mov	x0, x20
  43cc64:	bl	439d08 <nftw@plt+0x37188>
  43cc68:	mov	x22, #0x0                   	// #0
  43cc6c:	ldr	x1, [x19, #96]
  43cc70:	add	x0, x1, x27
  43cc74:	str	x23, [x1, x27]
  43cc78:	str	w28, [x0, #8]
  43cc7c:	str	w26, [x0, #12]
  43cc80:	str	x21, [x0, #16]
  43cc84:	str	x22, [x0, #24]
  43cc88:	add	x27, x27, #0x20
  43cc8c:	ldr	w0, [sp, #584]
  43cc90:	cbnz	w0, 43cd3c <nftw@plt+0x3a1bc>
  43cc94:	mov	x0, x20
  43cc98:	bl	439d08 <nftw@plt+0x37188>
  43cc9c:	mov	x23, x0
  43cca0:	cbz	x0, 43cd7c <nftw@plt+0x3a1fc>
  43cca4:	mov	x0, x20
  43cca8:	bl	439d08 <nftw@plt+0x37188>
  43ccac:	mov	x28, x0
  43ccb0:	mov	x0, x20
  43ccb4:	bl	439cd4 <nftw@plt+0x37154>
  43ccb8:	and	w26, w0, #0xff
  43ccbc:	ldp	x0, x1, [x20]
  43ccc0:	add	x2, sp, #0x200
  43ccc4:	stp	x0, x1, [x2, #80]
  43ccc8:	ldp	x0, x1, [x20, #16]
  43cccc:	stp	x0, x1, [x2, #96]
  43ccd0:	ldp	x0, x1, [x20, #32]
  43ccd4:	stp	x0, x1, [x2, #112]
  43ccd8:	ldp	x0, x1, [x20, #48]
  43ccdc:	stp	x0, x1, [x2, #128]
  43cce0:	ldr	x21, [sp, #200]
  43cce4:	add	x22, sp, #0x250
  43cce8:	b	43cc44 <nftw@plt+0x3a0c4>
  43ccec:	ldr	x3, [sp, #712]
  43ccf0:	ldr	x2, [sp, #704]
  43ccf4:	lsl	x1, x21, #3
  43ccf8:	ldr	x0, [sp, #256]
  43ccfc:	bl	435960 <nftw@plt+0x32de0>
  43cd00:	mov	x22, x0
  43cd04:	cbz	x0, 43cd6c <nftw@plt+0x3a1ec>
  43cd08:	mov	x25, x0
  43cd0c:	mov	x21, x24
  43cd10:	mov	x0, x20
  43cd14:	bl	439d08 <nftw@plt+0x37188>
  43cd18:	mov	x24, x0
  43cd1c:	mov	x0, x20
  43cd20:	bl	439d08 <nftw@plt+0x37188>
  43cd24:	cbz	x24, 43cc6c <nftw@plt+0x3a0ec>
  43cd28:	str	w24, [x25]
  43cd2c:	str	w0, [x25, #4]
  43cd30:	add	x21, x21, #0x1
  43cd34:	add	x25, x25, #0x8
  43cd38:	b	43cd10 <nftw@plt+0x3a190>
  43cd3c:	ldr	x24, [sp, #256]
  43cd40:	ldr	x23, [sp, #704]
  43cd44:	ldr	x27, [sp, #712]
  43cd48:	mov	x3, x27
  43cd4c:	mov	x2, x23
  43cd50:	ldr	x1, [sp, #248]
  43cd54:	mov	x0, x24
  43cd58:	bl	43b4bc <nftw@plt+0x3893c>
  43cd5c:	b	43c8b4 <nftw@plt+0x39d34>
  43cd60:	mov	x27, x24
  43cd64:	mov	x24, x26
  43cd68:	b	43cd48 <nftw@plt+0x3a1c8>
  43cd6c:	ldr	x24, [sp, #256]
  43cd70:	ldr	x23, [sp, #704]
  43cd74:	ldr	x27, [sp, #712]
  43cd78:	b	43cd48 <nftw@plt+0x3a1c8>
  43cd7c:	ldr	x26, [sp, #256]
  43cd80:	ldr	x23, [sp, #704]
  43cd84:	ldr	x24, [sp, #712]
  43cd88:	ldr	x28, [sp, #296]
  43cd8c:	adrp	x3, 439000 <nftw@plt+0x36480>
  43cd90:	add	x3, x3, #0x580
  43cd94:	mov	x2, #0x20                  	// #32
  43cd98:	ldr	x1, [x19, #88]
  43cd9c:	ldr	x0, [x19, #96]
  43cda0:	bl	43d00c <nftw@plt+0x3a48c>
  43cda4:	b	43c998 <nftw@plt+0x39e18>
  43cda8:	mov	x27, x24
  43cdac:	mov	x24, x26
  43cdb0:	ldr	w0, [sp, #456]
  43cdb4:	cbnz	w0, 43c8b4 <nftw@plt+0x39d34>
  43cdb8:	ldp	x25, x26, [sp, #112]
  43cdbc:	add	x0, sp, #0x200
  43cdc0:	ldp	x0, x1, [x0, #-200]
  43cdc4:	stp	x0, x1, [sp, #368]
  43cdc8:	ldr	x0, [sp, #328]
  43cdcc:	str	x0, [sp, #384]
  43cdd0:	ldr	x0, [sp, #160]
  43cdd4:	str	x0, [sp, #392]
  43cdd8:	mov	x3, x27
  43cddc:	mov	x2, x23
  43cde0:	add	x1, sp, #0x150
  43cde4:	mov	x0, x24
  43cde8:	bl	435c0c <nftw@plt+0x3308c>
  43cdec:	cbz	w0, 43c934 <nftw@plt+0x39db4>
  43cdf0:	mov	x3, x27
  43cdf4:	mov	x2, x23
  43cdf8:	add	x1, sp, #0x170
  43cdfc:	mov	x0, x24
  43ce00:	bl	435c0c <nftw@plt+0x3308c>
  43ce04:	cbz	w0, 43c934 <nftw@plt+0x39db4>
  43ce08:	ldr	x20, [sp, #336]
  43ce0c:	ldr	x22, [sp, #368]
  43ce10:	ldr	x19, [sp, #360]
  43ce14:	ldr	x21, [sp, #392]
  43ce18:	adrp	x3, 439000 <nftw@plt+0x36480>
  43ce1c:	add	x3, x3, #0x4e8
  43ce20:	mov	x2, #0x18                  	// #24
  43ce24:	mov	x1, x19
  43ce28:	mov	x0, x20
  43ce2c:	bl	43d00c <nftw@plt+0x3a48c>
  43ce30:	mov	x3, x27
  43ce34:	mov	x2, x23
  43ce38:	mov	x1, #0xa0                  	// #160
  43ce3c:	mov	x0, x24
  43ce40:	bl	435960 <nftw@plt+0x32de0>
  43ce44:	cbz	x0, 43c934 <nftw@plt+0x39db4>
  43ce48:	str	xzr, [x0]
  43ce4c:	ldr	x1, [sp, #696]
  43ce50:	str	x1, [x0, #8]
  43ce54:	ldr	x1, [sp, #208]
  43ce58:	str	x1, [x0, #16]
  43ce5c:	str	x20, [x0, #24]
  43ce60:	str	x19, [x0, #32]
  43ce64:	str	x22, [x0, #40]
  43ce68:	str	x21, [x0, #48]
  43ce6c:	ldr	x1, [sp, #272]
  43ce70:	str	x1, [x0, #56]
  43ce74:	ldr	x1, [sp, #264]
  43ce78:	str	x1, [x0, #64]
  43ce7c:	ldr	x1, [sp, #280]
  43ce80:	str	x1, [x0, #72]
  43ce84:	ldr	x1, [sp, #288]
  43ce88:	str	x1, [x0, #80]
  43ce8c:	ldr	x1, [sp, #656]
  43ce90:	str	x1, [x0, #88]
  43ce94:	ldr	x1, [sp, #664]
  43ce98:	str	x1, [x0, #96]
  43ce9c:	ldr	x1, [sp, #672]
  43cea0:	str	x1, [x0, #104]
  43cea4:	ldr	x1, [sp, #680]
  43cea8:	str	x1, [x0, #112]
  43ceac:	ldr	w1, [sp, #688]
  43ceb0:	str	w1, [x0, #120]
  43ceb4:	stp	xzr, xzr, [x0, #128]
  43ceb8:	stp	xzr, xzr, [x0, #144]
  43cebc:	ldr	x1, [sp, #728]
  43cec0:	cbz	x1, 43cec8 <nftw@plt+0x3a348>
  43cec4:	str	x0, [x1]
  43cec8:	ldr	w1, [x24, #8]
  43cecc:	add	x3, x24, #0x20
  43ced0:	cbnz	w1, 43cfd0 <nftw@plt+0x3a450>
  43ced4:	ldr	x1, [x24, #32]
  43ced8:	cbz	x1, 43cfa0 <nftw@plt+0x3a420>
  43cedc:	mov	x2, x1
  43cee0:	ldr	x1, [x1]
  43cee4:	cbnz	x1, 43cedc <nftw@plt+0x3a35c>
  43cee8:	str	x0, [x2]
  43ceec:	ldr	x1, [sp, #720]
  43cef0:	adrp	x0, 43c000 <nftw@plt+0x39480>
  43cef4:	add	x0, x0, #0x674
  43cef8:	str	x0, [x1]
  43cefc:	mov	w0, #0x1                   	// #1
  43cf00:	ldp	x19, x20, [sp, #64]
  43cf04:	ldp	x21, x22, [sp, #80]
  43cf08:	ldp	x23, x24, [sp, #96]
  43cf0c:	ldp	x27, x28, [sp, #128]
  43cf10:	ldp	x29, x30, [sp, #48]
  43cf14:	add	sp, sp, #0x290
  43cf18:	ret
  43cf1c:	mov	x27, x24
  43cf20:	mov	x24, x26
  43cf24:	b	43c8b4 <nftw@plt+0x39d34>
  43cf28:	mov	x27, x24
  43cf2c:	mov	x24, x26
  43cf30:	b	43c8b4 <nftw@plt+0x39d34>
  43cf34:	mov	x27, x24
  43cf38:	mov	x24, x26
  43cf3c:	b	43c8b4 <nftw@plt+0x39d34>
  43cf40:	mov	x27, x24
  43cf44:	mov	x24, x26
  43cf48:	b	43c8b4 <nftw@plt+0x39d34>
  43cf4c:	mov	x27, x24
  43cf50:	mov	x24, x26
  43cf54:	b	43c8b4 <nftw@plt+0x39d34>
  43cf58:	mov	x27, x24
  43cf5c:	mov	x24, x26
  43cf60:	b	43c8b4 <nftw@plt+0x39d34>
  43cf64:	mov	x27, x24
  43cf68:	mov	x24, x26
  43cf6c:	b	43c8b4 <nftw@plt+0x39d34>
  43cf70:	ldr	x0, [sp, #352]
  43cf74:	ldr	x1, [sp, #344]
  43cf78:	add	x0, x0, x1
  43cf7c:	str	x0, [sp, #352]
  43cf80:	str	xzr, [sp, #344]
  43cf84:	mov	x3, x27
  43cf88:	mov	x2, x23
  43cf8c:	add	x1, sp, #0x150
  43cf90:	mov	x0, x24
  43cf94:	bl	435c0c <nftw@plt+0x3308c>
  43cf98:	ldp	x25, x26, [sp, #112]
  43cf9c:	b	43c934 <nftw@plt+0x39db4>
  43cfa0:	add	x2, x24, #0x20
  43cfa4:	b	43cee8 <nftw@plt+0x3a368>
  43cfa8:	mov	x2, x1
  43cfac:	ldar	x1, [x2]
  43cfb0:	cbnz	x1, 43cfa8 <nftw@plt+0x3a428>
  43cfb4:	ldxr	x1, [x2]
  43cfb8:	cbnz	x1, 43cfc4 <nftw@plt+0x3a444>
  43cfbc:	stlxr	w4, x0, [x2]
  43cfc0:	cbnz	w4, 43cfb4 <nftw@plt+0x3a434>
  43cfc4:	cmp	x1, #0x0
  43cfc8:	dmb	ish
  43cfcc:	b.eq	43ceec <nftw@plt+0x3a36c>  // b.none
  43cfd0:	mov	x2, x3
  43cfd4:	b	43cfac <nftw@plt+0x3a42c>
  43cfd8:	mov	x27, x24
  43cfdc:	mov	x24, x26
  43cfe0:	b	43c8b4 <nftw@plt+0x39d34>
  43cfe4:	cbz	x2, 43d008 <nftw@plt+0x3a488>
  43cfe8:	mov	x3, #0x0                   	// #0
  43cfec:	ldrb	w4, [x0, x3]
  43cff0:	ldrb	w5, [x1, x3]
  43cff4:	strb	w5, [x0, x3]
  43cff8:	strb	w4, [x1, x3]
  43cffc:	add	x3, x3, #0x1
  43d000:	cmp	x2, x3
  43d004:	b.ne	43cfec <nftw@plt+0x3a46c>  // b.any
  43d008:	ret
  43d00c:	stp	x29, x30, [sp, #-80]!
  43d010:	mov	x29, sp
  43d014:	stp	x21, x22, [sp, #32]
  43d018:	stp	x23, x24, [sp, #48]
  43d01c:	stp	x25, x26, [sp, #64]
  43d020:	mov	x23, x0
  43d024:	mov	x24, x1
  43d028:	mov	x22, x2
  43d02c:	mov	x26, x3
  43d030:	cmp	x1, #0x1
  43d034:	b.ls	43d128 <nftw@plt+0x3a5a8>  // b.plast
  43d038:	stp	x19, x20, [sp, #16]
  43d03c:	b	43d0f8 <nftw@plt+0x3a578>
  43d040:	mov	x2, x22
  43d044:	mov	x1, x19
  43d048:	madd	x0, x22, x21, x23
  43d04c:	bl	43cfe4 <nftw@plt+0x3a464>
  43d050:	add	x20, x20, #0x1
  43d054:	add	x19, x19, x22
  43d058:	cmp	x20, x24
  43d05c:	b.eq	43d0c8 <nftw@plt+0x3a548>  // b.none
  43d060:	mov	x1, x19
  43d064:	mov	x0, x23
  43d068:	blr	x26
  43d06c:	cmp	w0, #0x0
  43d070:	b.le	43d050 <nftw@plt+0x3a4d0>
  43d074:	add	x21, x21, #0x1
  43d078:	cmp	x21, x20
  43d07c:	b.eq	43d050 <nftw@plt+0x3a4d0>  // b.none
  43d080:	b	43d040 <nftw@plt+0x3a4c0>
  43d084:	mov	x2, x22
  43d088:	madd	x1, x21, x22, x23
  43d08c:	mov	x0, x23
  43d090:	bl	43cfe4 <nftw@plt+0x3a464>
  43d094:	cmp	x24, x21, lsl #1
  43d098:	b.hi	43d0cc <nftw@plt+0x3a54c>  // b.pmore
  43d09c:	sub	x1, x24, #0x1
  43d0a0:	madd	x0, x21, x22, x22
  43d0a4:	mov	x3, x26
  43d0a8:	mov	x2, x22
  43d0ac:	sub	x1, x1, x21
  43d0b0:	add	x0, x23, x0
  43d0b4:	bl	43d00c <nftw@plt+0x3a48c>
  43d0b8:	mov	x24, x21
  43d0bc:	b	43d0f0 <nftw@plt+0x3a570>
  43d0c0:	mov	x21, #0x0                   	// #0
  43d0c4:	b	43d094 <nftw@plt+0x3a514>
  43d0c8:	cbnz	x21, 43d084 <nftw@plt+0x3a504>
  43d0cc:	mov	x3, x26
  43d0d0:	mov	x2, x22
  43d0d4:	mov	x1, x21
  43d0d8:	mov	x0, x23
  43d0dc:	bl	43d00c <nftw@plt+0x3a48c>
  43d0e0:	madd	x0, x21, x22, x22
  43d0e4:	add	x23, x23, x0
  43d0e8:	sub	x24, x24, #0x1
  43d0ec:	sub	x24, x24, x21
  43d0f0:	cmp	x24, #0x1
  43d0f4:	b.ls	43d124 <nftw@plt+0x3a5a4>  // b.plast
  43d0f8:	lsr	x1, x24, #1
  43d0fc:	mov	x2, x22
  43d100:	madd	x1, x1, x22, x23
  43d104:	mov	x0, x23
  43d108:	bl	43cfe4 <nftw@plt+0x3a464>
  43d10c:	cmp	x24, #0x1
  43d110:	b.ls	43d0c0 <nftw@plt+0x3a540>  // b.plast
  43d114:	add	x19, x23, x22
  43d118:	mov	x21, #0x0                   	// #0
  43d11c:	mov	x20, #0x1                   	// #1
  43d120:	b	43d060 <nftw@plt+0x3a4e0>
  43d124:	ldp	x19, x20, [sp, #16]
  43d128:	ldp	x21, x22, [sp, #32]
  43d12c:	ldp	x23, x24, [sp, #48]
  43d130:	ldp	x25, x26, [sp, #64]
  43d134:	ldp	x29, x30, [sp], #80
  43d138:	ret
  43d13c:	sub	w0, w0, #0x1c
  43d140:	cmp	w0, #0x34
  43d144:	b.hi	43d164 <nftw@plt+0x3a5e4>  // b.pmore
  43d148:	mov	x1, #0x1                   	// #1
  43d14c:	lsl	x0, x1, x0
  43d150:	mov	x1, #0x1f                  	// #31
  43d154:	movk	x1, #0x1a, lsl #48
  43d158:	tst	x0, x1
  43d15c:	cset	w0, ne  // ne = any
  43d160:	b	43d168 <nftw@plt+0x3a5e8>
  43d164:	mov	w0, #0x0                   	// #0
  43d168:	ret
  43d16c:	mov	x2, x0
  43d170:	ldr	w1, [x0, #40]
  43d174:	ldr	w0, [x0, #44]
  43d178:	cmp	w1, w0
  43d17c:	b.ge	43d1a4 <nftw@plt+0x3a624>  // b.tcont
  43d180:	sbfiz	x0, x1, #1, #32
  43d184:	add	x1, x0, w1, sxtw
  43d188:	ldr	x0, [x2, #32]
  43d18c:	add	x0, x0, x1, lsl #3
  43d190:	str	wzr, [x0, #4]
  43d194:	ldr	w1, [x2, #40]
  43d198:	add	w1, w1, #0x1
  43d19c:	str	w1, [x2, #40]
  43d1a0:	ret
  43d1a4:	mov	x0, #0x0                   	// #0
  43d1a8:	b	43d1a0 <nftw@plt+0x3a620>
  43d1ac:	stp	x29, x30, [sp, #-48]!
  43d1b0:	mov	x29, sp
  43d1b4:	stp	x19, x20, [sp, #16]
  43d1b8:	mov	w19, w1
  43d1bc:	sub	w1, w1, #0x1
  43d1c0:	cmp	w1, #0x4f
  43d1c4:	b.hi	43d240 <nftw@plt+0x3a6c0>  // b.pmore
  43d1c8:	str	x21, [sp, #32]
  43d1cc:	mov	x21, x2
  43d1d0:	mov	x20, x3
  43d1d4:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43d1d8:	add	x2, x2, #0x48
  43d1dc:	ldrb	w1, [x2, w1, uxtw]
  43d1e0:	adr	x2, 43d1ec <nftw@plt+0x3a66c>
  43d1e4:	add	x1, x2, w1, sxtb #2
  43d1e8:	br	x1
  43d1ec:	cmp	x21, #0x0
  43d1f0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43d1f4:	b.ne	43d208 <nftw@plt+0x3a688>  // b.any
  43d1f8:	mov	x0, #0x0                   	// #0
  43d1fc:	ldr	x21, [sp, #32]
  43d200:	b	43d220 <nftw@plt+0x3a6a0>
  43d204:	cbz	x21, 43d248 <nftw@plt+0x3a6c8>
  43d208:	bl	43d16c <nftw@plt+0x3a5ec>
  43d20c:	cbz	x0, 43d254 <nftw@plt+0x3a6d4>
  43d210:	str	w19, [x0]
  43d214:	str	x21, [x0, #8]
  43d218:	str	x20, [x0, #16]
  43d21c:	ldr	x21, [sp, #32]
  43d220:	ldp	x19, x20, [sp, #16]
  43d224:	ldp	x29, x30, [sp], #48
  43d228:	ret
  43d22c:	cbnz	x3, 43d208 <nftw@plt+0x3a688>
  43d230:	mov	x0, x3
  43d234:	ldr	x21, [sp, #32]
  43d238:	b	43d220 <nftw@plt+0x3a6a0>
  43d23c:	ldr	x21, [sp, #32]
  43d240:	mov	x0, #0x0                   	// #0
  43d244:	b	43d220 <nftw@plt+0x3a6a0>
  43d248:	mov	x0, x21
  43d24c:	ldr	x21, [sp, #32]
  43d250:	b	43d220 <nftw@plt+0x3a6a0>
  43d254:	ldr	x21, [sp, #32]
  43d258:	b	43d220 <nftw@plt+0x3a6a0>
  43d25c:	stp	x29, x30, [sp, #-32]!
  43d260:	mov	x29, sp
  43d264:	str	x19, [sp, #16]
  43d268:	mov	x19, x1
  43d26c:	cbz	x1, 43d290 <nftw@plt+0x3a710>
  43d270:	bl	43d16c <nftw@plt+0x3a5ec>
  43d274:	cbz	x0, 43d284 <nftw@plt+0x3a704>
  43d278:	mov	w1, #0x27                  	// #39
  43d27c:	str	w1, [x0]
  43d280:	str	x19, [x0, #8]
  43d284:	ldr	x19, [sp, #16]
  43d288:	ldp	x29, x30, [sp], #32
  43d28c:	ret
  43d290:	mov	x0, x1
  43d294:	b	43d284 <nftw@plt+0x3a704>
  43d298:	cbz	x0, 43d2ec <nftw@plt+0x3a76c>
  43d29c:	mov	x2, x0
  43d2a0:	ldr	w1, [x0]
  43d2a4:	cmp	w1, #0x8
  43d2a8:	b.hi	43d2e0 <nftw@plt+0x3a760>  // b.pmore
  43d2ac:	cmp	w1, #0x6
  43d2b0:	b.hi	43d2f4 <nftw@plt+0x3a774>  // b.pmore
  43d2b4:	sub	w1, w1, #0x1
  43d2b8:	mov	w0, #0x0                   	// #0
  43d2bc:	cmp	w1, #0x1
  43d2c0:	b.hi	43d2dc <nftw@plt+0x3a75c>  // b.pmore
  43d2c4:	stp	x29, x30, [sp, #-16]!
  43d2c8:	mov	x29, sp
  43d2cc:	ldr	x0, [x2, #16]
  43d2d0:	bl	43d298 <nftw@plt+0x3a718>
  43d2d4:	ldp	x29, x30, [sp], #16
  43d2d8:	ret
  43d2dc:	ret
  43d2e0:	cmp	w1, #0x35
  43d2e4:	cset	w0, eq  // eq = none
  43d2e8:	ret
  43d2ec:	mov	w0, #0x0                   	// #0
  43d2f0:	ret
  43d2f4:	mov	w0, #0x1                   	// #1
  43d2f8:	ret
  43d2fc:	cbz	x0, 43d38c <nftw@plt+0x3a80c>
  43d300:	stp	x29, x30, [sp, #-16]!
  43d304:	mov	x29, sp
  43d308:	ldr	w1, [x0]
  43d30c:	cmp	w1, #0x4
  43d310:	b.eq	43d36c <nftw@plt+0x3a7ec>  // b.none
  43d314:	b.ls	43d344 <nftw@plt+0x3a7c4>  // b.plast
  43d318:	sub	w1, w1, #0x1c
  43d31c:	cmp	w1, #0x34
  43d320:	b.hi	43d364 <nftw@plt+0x3a7e4>  // b.pmore
  43d324:	mov	x2, #0x1                   	// #1
  43d328:	lsl	x1, x2, x1
  43d32c:	mov	x2, #0x1f                  	// #31
  43d330:	movk	x2, #0x1a, lsl #48
  43d334:	tst	x1, x2
  43d338:	b.ne	43d380 <nftw@plt+0x3a800>  // b.any
  43d33c:	mov	w0, #0x0                   	// #0
  43d340:	b	43d35c <nftw@plt+0x3a7dc>
  43d344:	cmp	w1, #0x2
  43d348:	b.ne	43d358 <nftw@plt+0x3a7d8>  // b.any
  43d34c:	ldr	x0, [x0, #16]
  43d350:	bl	43d2fc <nftw@plt+0x3a77c>
  43d354:	b	43d35c <nftw@plt+0x3a7dc>
  43d358:	mov	w0, #0x0                   	// #0
  43d35c:	ldp	x29, x30, [sp], #16
  43d360:	ret
  43d364:	mov	w0, #0x0                   	// #0
  43d368:	b	43d35c <nftw@plt+0x3a7dc>
  43d36c:	ldr	x0, [x0, #8]
  43d370:	bl	43d298 <nftw@plt+0x3a718>
  43d374:	cmp	w0, #0x0
  43d378:	cset	w0, eq  // eq = none
  43d37c:	b	43d35c <nftw@plt+0x3a7dc>
  43d380:	ldr	x0, [x0, #8]
  43d384:	bl	43d2fc <nftw@plt+0x3a77c>
  43d388:	b	43d35c <nftw@plt+0x3a7dc>
  43d38c:	mov	w0, #0x0                   	// #0
  43d390:	ret
  43d394:	mov	x4, x0
  43d398:	ldr	x1, [x0, #24]
  43d39c:	ldrb	w0, [x1]
  43d3a0:	cmp	w0, #0x6e
  43d3a4:	b.eq	43d424 <nftw@plt+0x3a8a4>  // b.none
  43d3a8:	sub	w1, w0, #0x30
  43d3ac:	and	w1, w1, #0xff
  43d3b0:	cmp	w1, #0x9
  43d3b4:	b.hi	43d45c <nftw@plt+0x3a8dc>  // b.pmore
  43d3b8:	mov	w7, #0x0                   	// #0
  43d3bc:	mov	w3, w0
  43d3c0:	mov	w0, #0x0                   	// #0
  43d3c4:	mov	w6, #0x7fffffff            	// #2147483647
  43d3c8:	mov	w5, #0x6667                	// #26215
  43d3cc:	movk	w5, #0x6666, lsl #16
  43d3d0:	add	w0, w0, w0, lsl #2
  43d3d4:	add	w0, w3, w0, lsl #1
  43d3d8:	sub	w0, w0, #0x30
  43d3dc:	ldr	x1, [x4, #24]
  43d3e0:	add	x2, x1, #0x1
  43d3e4:	str	x2, [x4, #24]
  43d3e8:	ldrb	w1, [x1, #1]
  43d3ec:	sub	w2, w1, #0x30
  43d3f0:	and	w2, w2, #0xff
  43d3f4:	cmp	w2, #0x9
  43d3f8:	b.hi	43d448 <nftw@plt+0x3a8c8>  // b.pmore
  43d3fc:	mov	w3, w1
  43d400:	sub	w1, w1, #0x30
  43d404:	sub	w1, w6, w1
  43d408:	smull	x2, w1, w5
  43d40c:	asr	x2, x2, #34
  43d410:	sub	w1, w2, w1, asr #31
  43d414:	cmp	w1, w0
  43d418:	b.ge	43d3d0 <nftw@plt+0x3a850>  // b.tcont
  43d41c:	mov	w0, #0xffffffff            	// #-1
  43d420:	ret
  43d424:	add	x0, x1, #0x1
  43d428:	str	x0, [x4, #24]
  43d42c:	ldrb	w0, [x1, #1]
  43d430:	sub	w1, w0, #0x30
  43d434:	and	w1, w1, #0xff
  43d438:	cmp	w1, #0x9
  43d43c:	b.hi	43d454 <nftw@plt+0x3a8d4>  // b.pmore
  43d440:	mov	w7, #0x1                   	// #1
  43d444:	b	43d3bc <nftw@plt+0x3a83c>
  43d448:	cbz	w7, 43d420 <nftw@plt+0x3a8a0>
  43d44c:	neg	w0, w0
  43d450:	b	43d420 <nftw@plt+0x3a8a0>
  43d454:	mov	w0, #0x0                   	// #0
  43d458:	b	43d44c <nftw@plt+0x3a8cc>
  43d45c:	mov	w0, #0x0                   	// #0
  43d460:	b	43d420 <nftw@plt+0x3a8a0>
  43d464:	stp	x29, x30, [sp, #-32]!
  43d468:	mov	x29, sp
  43d46c:	stp	x19, x20, [sp, #16]
  43d470:	mov	x20, x0
  43d474:	bl	43d16c <nftw@plt+0x3a5ec>
  43d478:	mov	x19, x0
  43d47c:	cbz	x0, 43d498 <nftw@plt+0x3a918>
  43d480:	mov	w0, #0x42                  	// #66
  43d484:	str	w0, [x19]
  43d488:	mov	x0, x20
  43d48c:	bl	43d394 <nftw@plt+0x3a814>
  43d490:	sxtw	x0, w0
  43d494:	str	x0, [x19, #8]
  43d498:	mov	x0, x19
  43d49c:	ldp	x19, x20, [sp, #16]
  43d4a0:	ldp	x29, x30, [sp], #32
  43d4a4:	ret
  43d4a8:	stp	x29, x30, [sp, #-32]!
  43d4ac:	mov	x29, sp
  43d4b0:	str	x19, [sp, #16]
  43d4b4:	mov	x19, x0
  43d4b8:	cbnz	w1, 43d4d8 <nftw@plt+0x3a958>
  43d4bc:	ldr	x2, [x0, #24]
  43d4c0:	ldrb	w3, [x2]
  43d4c4:	mov	w0, w1
  43d4c8:	cbz	w3, 43d4ec <nftw@plt+0x3a96c>
  43d4cc:	add	x0, x2, #0x1
  43d4d0:	str	x0, [x19, #24]
  43d4d4:	ldrb	w1, [x2]
  43d4d8:	cmp	w1, #0x68
  43d4dc:	b.eq	43d4f8 <nftw@plt+0x3a978>  // b.none
  43d4e0:	mov	w0, #0x0                   	// #0
  43d4e4:	cmp	w1, #0x76
  43d4e8:	b.eq	43d524 <nftw@plt+0x3a9a4>  // b.none
  43d4ec:	ldr	x19, [sp, #16]
  43d4f0:	ldp	x29, x30, [sp], #32
  43d4f4:	ret
  43d4f8:	mov	x0, x19
  43d4fc:	bl	43d394 <nftw@plt+0x3a814>
  43d500:	ldr	x1, [x19, #24]
  43d504:	ldrb	w2, [x1]
  43d508:	mov	w0, #0x0                   	// #0
  43d50c:	cmp	w2, #0x5f
  43d510:	b.ne	43d4ec <nftw@plt+0x3a96c>  // b.any
  43d514:	add	x1, x1, #0x1
  43d518:	str	x1, [x19, #24]
  43d51c:	mov	w0, #0x1                   	// #1
  43d520:	b	43d4ec <nftw@plt+0x3a96c>
  43d524:	mov	x0, x19
  43d528:	bl	43d394 <nftw@plt+0x3a814>
  43d52c:	ldr	x1, [x19, #24]
  43d530:	ldrb	w2, [x1]
  43d534:	mov	w0, #0x0                   	// #0
  43d538:	cmp	w2, #0x5f
  43d53c:	b.ne	43d4ec <nftw@plt+0x3a96c>  // b.any
  43d540:	add	x1, x1, #0x1
  43d544:	str	x1, [x19, #24]
  43d548:	mov	x0, x19
  43d54c:	bl	43d394 <nftw@plt+0x3a814>
  43d550:	b	43d500 <nftw@plt+0x3a980>
  43d554:	ldr	x2, [x0, #24]
  43d558:	ldrb	w1, [x2]
  43d55c:	cmp	w1, #0x72
  43d560:	mov	w0, #0x56                  	// #86
  43d564:	ccmp	w1, w0, #0x4, ne  // ne = any
  43d568:	mov	w0, #0x4b                  	// #75
  43d56c:	ccmp	w1, w0, #0x4, ne  // ne = any
  43d570:	mov	w0, #0x1                   	// #1
  43d574:	b.eq	43d584 <nftw@plt+0x3aa04>  // b.none
  43d578:	mov	w0, #0x0                   	// #0
  43d57c:	cmp	w1, #0x44
  43d580:	b.eq	43d588 <nftw@plt+0x3aa08>  // b.none
  43d584:	ret
  43d588:	ldrb	w0, [x2, #1]
  43d58c:	and	w1, w0, #0xffffffdf
  43d590:	and	w1, w1, #0xff
  43d594:	sub	w0, w0, #0x77
  43d598:	and	w0, w0, #0xff
  43d59c:	cmp	w1, #0x4f
  43d5a0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  43d5a4:	cset	w0, ls  // ls = plast
  43d5a8:	b	43d584 <nftw@plt+0x3aa04>
  43d5ac:	mov	x2, x1
  43d5b0:	ldr	x3, [x0, #24]
  43d5b4:	ldrb	w1, [x3]
  43d5b8:	cmp	w1, #0x52
  43d5bc:	mov	w4, #0x4f                  	// #79
  43d5c0:	ccmp	w1, w4, #0x4, ne  // ne = any
  43d5c4:	b.ne	43d610 <nftw@plt+0x3aa90>  // b.any
  43d5c8:	stp	x29, x30, [sp, #-16]!
  43d5cc:	mov	x29, sp
  43d5d0:	cmp	w1, #0x52
  43d5d4:	b.eq	43d600 <nftw@plt+0x3aa80>  // b.none
  43d5d8:	ldr	w4, [x0, #72]
  43d5dc:	add	w4, w4, #0x3
  43d5e0:	mov	w1, #0x20                  	// #32
  43d5e4:	str	w4, [x0, #72]
  43d5e8:	add	x3, x3, #0x1
  43d5ec:	str	x3, [x0, #24]
  43d5f0:	mov	x3, #0x0                   	// #0
  43d5f4:	bl	43d1ac <nftw@plt+0x3a62c>
  43d5f8:	ldp	x29, x30, [sp], #16
  43d5fc:	ret
  43d600:	ldr	w4, [x0, #72]
  43d604:	add	w4, w4, #0x2
  43d608:	mov	w1, #0x1f                  	// #31
  43d60c:	b	43d5e4 <nftw@plt+0x3aa64>
  43d610:	mov	x0, x2
  43d614:	ret
  43d618:	stp	x29, x30, [sp, #-32]!
  43d61c:	mov	x29, sp
  43d620:	str	x19, [sp, #16]
  43d624:	mov	x19, x0
  43d628:	ldr	x1, [x0, #24]
  43d62c:	ldrb	w0, [x1]
  43d630:	cmp	w0, #0x5f
  43d634:	b.eq	43d674 <nftw@plt+0x3aaf4>  // b.none
  43d638:	cmp	w0, #0x6e
  43d63c:	b.eq	43d67c <nftw@plt+0x3aafc>  // b.none
  43d640:	mov	x0, x19
  43d644:	bl	43d394 <nftw@plt+0x3a814>
  43d648:	adds	w0, w0, #0x1
  43d64c:	b.mi	43d684 <nftw@plt+0x3ab04>  // b.first
  43d650:	ldr	x1, [x19, #24]
  43d654:	ldrb	w2, [x1]
  43d658:	cmp	w2, #0x5f
  43d65c:	b.ne	43d68c <nftw@plt+0x3ab0c>  // b.any
  43d660:	add	x1, x1, #0x1
  43d664:	str	x1, [x19, #24]
  43d668:	ldr	x19, [sp, #16]
  43d66c:	ldp	x29, x30, [sp], #32
  43d670:	ret
  43d674:	mov	w0, #0x0                   	// #0
  43d678:	b	43d660 <nftw@plt+0x3aae0>
  43d67c:	mov	w0, #0xffffffff            	// #-1
  43d680:	b	43d668 <nftw@plt+0x3aae8>
  43d684:	mov	w0, #0xffffffff            	// #-1
  43d688:	b	43d668 <nftw@plt+0x3aae8>
  43d68c:	mov	w0, #0xffffffff            	// #-1
  43d690:	b	43d668 <nftw@plt+0x3aae8>
  43d694:	stp	x29, x30, [sp, #-32]!
  43d698:	mov	x29, sp
  43d69c:	stp	x19, x20, [sp, #16]
  43d6a0:	mov	x19, x0
  43d6a4:	ldr	x0, [x0, #24]
  43d6a8:	ldrb	w1, [x0]
  43d6ac:	cmp	w1, #0x54
  43d6b0:	b.ne	43d6f0 <nftw@plt+0x3ab70>  // b.any
  43d6b4:	add	x0, x0, #0x1
  43d6b8:	str	x0, [x19, #24]
  43d6bc:	mov	x0, x19
  43d6c0:	bl	43d618 <nftw@plt+0x3aa98>
  43d6c4:	mov	w20, w0
  43d6c8:	mov	x0, #0x0                   	// #0
  43d6cc:	tbnz	w20, #31, 43d6f4 <nftw@plt+0x3ab74>
  43d6d0:	mov	x0, x19
  43d6d4:	bl	43d16c <nftw@plt+0x3a5ec>
  43d6d8:	cbz	x0, 43d6f4 <nftw@plt+0x3ab74>
  43d6dc:	mov	w1, #0x5                   	// #5
  43d6e0:	str	w1, [x0]
  43d6e4:	sxtw	x20, w20
  43d6e8:	str	x20, [x0, #8]
  43d6ec:	b	43d6f4 <nftw@plt+0x3ab74>
  43d6f0:	mov	x0, #0x0                   	// #0
  43d6f4:	ldp	x19, x20, [sp, #16]
  43d6f8:	ldp	x29, x30, [sp], #32
  43d6fc:	ret
  43d700:	ldr	x0, [x0, #8]
  43d704:	ldr	x0, [x0]
  43d708:	ldrb	w1, [x0, #1]
  43d70c:	cmp	w1, #0x63
  43d710:	b.eq	43d71c <nftw@plt+0x3ab9c>  // b.none
  43d714:	mov	w0, #0x0                   	// #0
  43d718:	ret
  43d71c:	ldrb	w0, [x0]
  43d720:	sub	w1, w0, #0x63
  43d724:	and	w1, w1, #0xff
  43d728:	sub	w0, w0, #0x72
  43d72c:	and	w0, w0, #0xff
  43d730:	cmp	w1, #0x1
  43d734:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  43d738:	cset	w0, ls  // ls = plast
  43d73c:	b	43d718 <nftw@plt+0x3ab98>
  43d740:	stp	x29, x30, [sp, #-32]!
  43d744:	mov	x29, sp
  43d748:	stp	x19, x20, [sp, #16]
  43d74c:	mov	x19, x0
  43d750:	ldr	x0, [x0, #24]
  43d754:	ldrb	w1, [x0]
  43d758:	cmp	w1, #0x5f
  43d75c:	b.ne	43d7d0 <nftw@plt+0x3ac50>  // b.any
  43d760:	add	x1, x0, #0x1
  43d764:	str	x1, [x19, #24]
  43d768:	ldrb	w1, [x0, #1]
  43d76c:	mov	w20, #0x1                   	// #1
  43d770:	cmp	w1, #0x5f
  43d774:	b.eq	43d7c0 <nftw@plt+0x3ac40>  // b.none
  43d778:	mov	x0, x19
  43d77c:	bl	43d394 <nftw@plt+0x3a814>
  43d780:	mov	w1, w0
  43d784:	mov	w0, #0x0                   	// #0
  43d788:	tbnz	w1, #31, 43d7d4 <nftw@plt+0x3ac54>
  43d78c:	cmp	w20, #0x1
  43d790:	mov	w0, #0x1                   	// #1
  43d794:	ccmp	w1, #0x9, #0x4, gt
  43d798:	b.le	43d7d4 <nftw@plt+0x3ac54>
  43d79c:	ldr	x1, [x19, #24]
  43d7a0:	ldrb	w2, [x1]
  43d7a4:	mov	w0, #0x0                   	// #0
  43d7a8:	cmp	w2, #0x5f
  43d7ac:	b.ne	43d7d4 <nftw@plt+0x3ac54>  // b.any
  43d7b0:	add	x1, x1, #0x1
  43d7b4:	str	x1, [x19, #24]
  43d7b8:	mov	w0, #0x1                   	// #1
  43d7bc:	b	43d7d4 <nftw@plt+0x3ac54>
  43d7c0:	add	x0, x0, #0x2
  43d7c4:	str	x0, [x19, #24]
  43d7c8:	mov	w20, #0x2                   	// #2
  43d7cc:	b	43d778 <nftw@plt+0x3abf8>
  43d7d0:	mov	w0, #0x1                   	// #1
  43d7d4:	ldp	x19, x20, [sp, #16]
  43d7d8:	ldp	x29, x30, [sp], #32
  43d7dc:	ret
  43d7e0:	mov	x2, x0
  43d7e4:	cbz	x1, 43d818 <nftw@plt+0x3ac98>
  43d7e8:	ldr	w3, [x0, #56]
  43d7ec:	ldr	w4, [x0, #60]
  43d7f0:	mov	w0, #0x0                   	// #0
  43d7f4:	cmp	w3, w4
  43d7f8:	b.ge	43d814 <nftw@plt+0x3ac94>  // b.tcont
  43d7fc:	ldr	x0, [x2, #48]
  43d800:	str	x1, [x0, w3, sxtw #3]
  43d804:	ldr	w0, [x2, #56]
  43d808:	add	w0, w0, #0x1
  43d80c:	str	w0, [x2, #56]
  43d810:	mov	w0, #0x1                   	// #1
  43d814:	ret
  43d818:	mov	w0, #0x0                   	// #0
  43d81c:	b	43d814 <nftw@plt+0x3ac94>
  43d820:	cbz	x1, 43d934 <nftw@plt+0x3adb4>
  43d824:	stp	x29, x30, [sp, #-32]!
  43d828:	mov	x29, sp
  43d82c:	stp	x19, x20, [sp, #16]
  43d830:	mov	x20, x0
  43d834:	mov	x19, x1
  43d838:	ldr	w1, [x1]
  43d83c:	sub	w1, w1, #0x1
  43d840:	cmp	w1, #0x4f
  43d844:	b.hi	43d878 <nftw@plt+0x3acf8>  // b.pmore
  43d848:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43d84c:	add	x0, x0, #0x98
  43d850:	ldrb	w0, [x0, w1, uxtw]
  43d854:	adr	x1, 43d860 <nftw@plt+0x3ace0>
  43d858:	add	x0, x1, w0, sxtb #2
  43d85c:	br	x0
  43d860:	ldr	w0, [x20, #364]
  43d864:	add	w0, w0, #0x1
  43d868:	str	w0, [x20, #364]
  43d86c:	ldr	w0, [x20, #308]
  43d870:	cmp	w0, #0x800
  43d874:	b.le	43d8a4 <nftw@plt+0x3ad24>
  43d878:	ldp	x19, x20, [sp, #16]
  43d87c:	ldp	x29, x30, [sp], #32
  43d880:	ret
  43d884:	ldr	x0, [x19, #8]
  43d888:	ldr	w0, [x0]
  43d88c:	cmp	w0, #0x5
  43d890:	b.ne	43d86c <nftw@plt+0x3acec>  // b.any
  43d894:	ldr	w0, [x20, #348]
  43d898:	add	w0, w0, #0x1
  43d89c:	str	w0, [x20, #348]
  43d8a0:	b	43d86c <nftw@plt+0x3acec>
  43d8a4:	add	w0, w0, #0x1
  43d8a8:	str	w0, [x20, #308]
  43d8ac:	ldr	x1, [x19, #8]
  43d8b0:	mov	x0, x20
  43d8b4:	bl	43d820 <nftw@plt+0x3aca0>
  43d8b8:	ldr	x1, [x19, #16]
  43d8bc:	mov	x0, x20
  43d8c0:	bl	43d820 <nftw@plt+0x3aca0>
  43d8c4:	ldr	w0, [x20, #308]
  43d8c8:	sub	w0, w0, #0x1
  43d8cc:	str	w0, [x20, #308]
  43d8d0:	b	43d878 <nftw@plt+0x3acf8>
  43d8d4:	ldr	x1, [x19, #16]
  43d8d8:	mov	x0, x20
  43d8dc:	bl	43d820 <nftw@plt+0x3aca0>
  43d8e0:	b	43d878 <nftw@plt+0x3acf8>
  43d8e4:	ldr	x1, [x19, #16]
  43d8e8:	mov	x0, x20
  43d8ec:	bl	43d820 <nftw@plt+0x3aca0>
  43d8f0:	b	43d878 <nftw@plt+0x3acf8>
  43d8f4:	ldr	x1, [x19, #16]
  43d8f8:	mov	x0, x20
  43d8fc:	bl	43d820 <nftw@plt+0x3aca0>
  43d900:	b	43d878 <nftw@plt+0x3acf8>
  43d904:	ldr	x1, [x19, #8]
  43d908:	mov	x0, x20
  43d90c:	bl	43d820 <nftw@plt+0x3aca0>
  43d910:	b	43d878 <nftw@plt+0x3acf8>
  43d914:	ldr	x1, [x19, #8]
  43d918:	mov	x0, x20
  43d91c:	bl	43d820 <nftw@plt+0x3aca0>
  43d920:	b	43d878 <nftw@plt+0x3acf8>
  43d924:	ldr	x1, [x19, #8]
  43d928:	mov	x0, x20
  43d92c:	bl	43d820 <nftw@plt+0x3aca0>
  43d930:	b	43d878 <nftw@plt+0x3acf8>
  43d934:	ret
  43d938:	cbz	x2, 43d9d4 <nftw@plt+0x3ae54>
  43d93c:	stp	x29, x30, [sp, #-64]!
  43d940:	mov	x29, sp
  43d944:	stp	x19, x20, [sp, #16]
  43d948:	stp	x21, x22, [sp, #32]
  43d94c:	str	x23, [sp, #48]
  43d950:	mov	x19, x0
  43d954:	mov	x20, x1
  43d958:	add	x22, x1, x2
  43d95c:	mov	x23, #0xff                  	// #255
  43d960:	b	43d984 <nftw@plt+0x3ae04>
  43d964:	ldr	x0, [x19, #256]
  43d968:	add	x1, x0, #0x1
  43d96c:	str	x1, [x19, #256]
  43d970:	strb	w21, [x19, x0]
  43d974:	strb	w21, [x19, #264]
  43d978:	add	x20, x20, #0x1
  43d97c:	cmp	x20, x22
  43d980:	b.eq	43d9c0 <nftw@plt+0x3ae40>  // b.none
  43d984:	ldrb	w21, [x20]
  43d988:	ldr	x0, [x19, #256]
  43d98c:	cmp	x0, #0xff
  43d990:	b.ne	43d964 <nftw@plt+0x3ade4>  // b.any
  43d994:	strb	wzr, [x19, #255]
  43d998:	ldr	x3, [x19, #272]
  43d99c:	ldr	x2, [x19, #280]
  43d9a0:	mov	x1, x23
  43d9a4:	mov	x0, x19
  43d9a8:	blr	x3
  43d9ac:	str	xzr, [x19, #256]
  43d9b0:	ldr	x0, [x19, #320]
  43d9b4:	add	x0, x0, #0x1
  43d9b8:	str	x0, [x19, #320]
  43d9bc:	b	43d964 <nftw@plt+0x3ade4>
  43d9c0:	ldp	x19, x20, [sp, #16]
  43d9c4:	ldp	x21, x22, [sp, #32]
  43d9c8:	ldr	x23, [sp, #48]
  43d9cc:	ldp	x29, x30, [sp], #64
  43d9d0:	ret
  43d9d4:	ret
  43d9d8:	tbnz	w1, #31, 43da04 <nftw@plt+0x3ae84>
  43d9dc:	cbz	x0, 43da04 <nftw@plt+0x3ae84>
  43d9e0:	ldr	w2, [x0]
  43d9e4:	cmp	w2, #0x2f
  43d9e8:	b.ne	43da08 <nftw@plt+0x3ae88>  // b.any
  43d9ec:	cbz	w1, 43da00 <nftw@plt+0x3ae80>
  43d9f0:	sub	w1, w1, #0x1
  43d9f4:	ldr	x0, [x0, #16]
  43d9f8:	cbnz	x0, 43d9e0 <nftw@plt+0x3ae60>
  43d9fc:	b	43da04 <nftw@plt+0x3ae84>
  43da00:	ldr	x0, [x0, #8]
  43da04:	ret
  43da08:	mov	x0, #0x0                   	// #0
  43da0c:	b	43da04 <nftw@plt+0x3ae84>
  43da10:	mov	x2, x0
  43da14:	ldr	x0, [x0, #288]
  43da18:	cbz	x0, 43da3c <nftw@plt+0x3aebc>
  43da1c:	stp	x29, x30, [sp, #-16]!
  43da20:	mov	x29, sp
  43da24:	ldr	x0, [x0, #8]
  43da28:	ldr	w1, [x1, #8]
  43da2c:	ldr	x0, [x0, #16]
  43da30:	bl	43d9d8 <nftw@plt+0x3ae58>
  43da34:	ldp	x29, x30, [sp], #16
  43da38:	ret
  43da3c:	mov	w1, #0x1                   	// #1
  43da40:	str	w1, [x2, #304]
  43da44:	ret
  43da48:	stp	x29, x30, [sp, #-32]!
  43da4c:	mov	x29, sp
  43da50:	stp	x19, x20, [sp, #16]
  43da54:	mov	x19, x1
  43da58:	cbz	x1, 43db20 <nftw@plt+0x3afa0>
  43da5c:	mov	x20, x0
  43da60:	ldr	w2, [x1]
  43da64:	cmp	w2, #0x8
  43da68:	b.eq	43daf4 <nftw@plt+0x3af74>  // b.none
  43da6c:	b.hi	43daac <nftw@plt+0x3af2c>  // b.pmore
  43da70:	cmp	w2, #0x6
  43da74:	b.eq	43db28 <nftw@plt+0x3afa8>  // b.none
  43da78:	b.ls	43da88 <nftw@plt+0x3af08>  // b.plast
  43da7c:	ldr	x1, [x1, #16]
  43da80:	bl	43da48 <nftw@plt+0x3aec8>
  43da84:	b	43dae8 <nftw@plt+0x3af68>
  43da88:	cbz	w2, 43db30 <nftw@plt+0x3afb0>
  43da8c:	cmp	w2, #0x5
  43da90:	b.ne	43db00 <nftw@plt+0x3af80>  // b.any
  43da94:	bl	43da10 <nftw@plt+0x3ae90>
  43da98:	cbz	x0, 43dae8 <nftw@plt+0x3af68>
  43da9c:	ldr	w1, [x0]
  43daa0:	cmp	w1, #0x2f
  43daa4:	csel	x0, x0, xzr, eq  // eq = none
  43daa8:	b	43dae8 <nftw@plt+0x3af68>
  43daac:	sub	w2, w2, #0x18
  43dab0:	cmp	w2, #0x34
  43dab4:	b.hi	43db00 <nftw@plt+0x3af80>  // b.pmore
  43dab8:	mov	x1, #0x1                   	// #1
  43dabc:	lsl	x2, x1, x2
  43dac0:	mov	x0, #0x8001                	// #32769
  43dac4:	movk	x0, #0x410, lsl #16
  43dac8:	movk	x0, #0xc600, lsl #32
  43dacc:	movk	x0, #0x19, lsl #48
  43dad0:	tst	x2, x0
  43dad4:	b.ne	43db38 <nftw@plt+0x3afb8>  // b.any
  43dad8:	tbz	w2, #27, 43db00 <nftw@plt+0x3af80>
  43dadc:	ldr	x1, [x19, #16]
  43dae0:	mov	x0, x20
  43dae4:	bl	43da48 <nftw@plt+0x3aec8>
  43dae8:	ldp	x19, x20, [sp, #16]
  43daec:	ldp	x29, x30, [sp], #32
  43daf0:	ret
  43daf4:	ldr	x1, [x1, #16]
  43daf8:	bl	43da48 <nftw@plt+0x3aec8>
  43dafc:	b	43dae8 <nftw@plt+0x3af68>
  43db00:	ldr	x1, [x19, #8]
  43db04:	mov	x0, x20
  43db08:	bl	43da48 <nftw@plt+0x3aec8>
  43db0c:	cbnz	x0, 43dae8 <nftw@plt+0x3af68>
  43db10:	ldr	x1, [x19, #16]
  43db14:	mov	x0, x20
  43db18:	bl	43da48 <nftw@plt+0x3aec8>
  43db1c:	b	43dae8 <nftw@plt+0x3af68>
  43db20:	mov	x0, x1
  43db24:	b	43dae8 <nftw@plt+0x3af68>
  43db28:	mov	x0, #0x0                   	// #0
  43db2c:	b	43dae8 <nftw@plt+0x3af68>
  43db30:	mov	x0, #0x0                   	// #0
  43db34:	b	43dae8 <nftw@plt+0x3af68>
  43db38:	mov	x0, #0x0                   	// #0
  43db3c:	b	43dae8 <nftw@plt+0x3af68>
  43db40:	mov	x1, x0
  43db44:	mov	w0, #0x0                   	// #0
  43db48:	cbz	x1, 43db6c <nftw@plt+0x3afec>
  43db4c:	ldr	w2, [x1]
  43db50:	cmp	w2, #0x2f
  43db54:	b.ne	43db6c <nftw@plt+0x3afec>  // b.any
  43db58:	ldr	x2, [x1, #8]
  43db5c:	cbz	x2, 43db6c <nftw@plt+0x3afec>
  43db60:	add	w0, w0, #0x1
  43db64:	ldr	x1, [x1, #16]
  43db68:	cbnz	x1, 43db4c <nftw@plt+0x3afcc>
  43db6c:	ret
  43db70:	stp	x29, x30, [sp, #-48]!
  43db74:	mov	x29, sp
  43db78:	stp	x19, x20, [sp, #16]
  43db7c:	stp	x21, x22, [sp, #32]
  43db80:	mov	x22, x0
  43db84:	mov	x21, x1
  43db88:	mov	x19, x2
  43db8c:	add	x2, x1, #0x1
  43db90:	ldr	x3, [x19, #8]
  43db94:	add	x2, x2, x3
  43db98:	ldr	x20, [x19, #16]
  43db9c:	cmp	x2, x20
  43dba0:	b.hi	43dbf0 <nftw@plt+0x3b070>  // b.pmore
  43dba4:	ldr	w0, [x19, #24]
  43dba8:	cbnz	w0, 43dbe0 <nftw@plt+0x3b060>
  43dbac:	ldr	x3, [x19]
  43dbb0:	ldr	x0, [x19, #8]
  43dbb4:	mov	x2, x21
  43dbb8:	mov	x1, x22
  43dbbc:	add	x0, x3, x0
  43dbc0:	bl	402490 <memcpy@plt>
  43dbc4:	ldr	x0, [x19]
  43dbc8:	ldr	x1, [x19, #8]
  43dbcc:	add	x0, x0, x21
  43dbd0:	strb	wzr, [x0, x1]
  43dbd4:	ldr	x1, [x19, #8]
  43dbd8:	add	x21, x1, x21
  43dbdc:	str	x21, [x19, #8]
  43dbe0:	ldp	x19, x20, [sp, #16]
  43dbe4:	ldp	x21, x22, [sp, #32]
  43dbe8:	ldp	x29, x30, [sp], #48
  43dbec:	ret
  43dbf0:	ldr	w0, [x19, #24]
  43dbf4:	cbnz	w0, 43dbe0 <nftw@plt+0x3b060>
  43dbf8:	cbnz	x20, 43dc08 <nftw@plt+0x3b088>
  43dbfc:	mov	x20, #0x2                   	// #2
  43dc00:	cmp	x2, x20
  43dc04:	b.ls	43dc14 <nftw@plt+0x3b094>  // b.plast
  43dc08:	lsl	x20, x20, #1
  43dc0c:	cmp	x2, x20
  43dc10:	b.hi	43dc08 <nftw@plt+0x3b088>  // b.pmore
  43dc14:	mov	x1, x20
  43dc18:	ldr	x0, [x19]
  43dc1c:	bl	402750 <realloc@plt>
  43dc20:	cbz	x0, 43dc30 <nftw@plt+0x3b0b0>
  43dc24:	str	x0, [x19]
  43dc28:	str	x20, [x19, #16]
  43dc2c:	b	43dba4 <nftw@plt+0x3b024>
  43dc30:	ldr	x0, [x19]
  43dc34:	bl	402910 <free@plt>
  43dc38:	str	xzr, [x19]
  43dc3c:	str	xzr, [x19, #8]
  43dc40:	str	xzr, [x19, #16]
  43dc44:	mov	w0, #0x1                   	// #1
  43dc48:	str	w0, [x19, #24]
  43dc4c:	b	43dbe0 <nftw@plt+0x3b060>
  43dc50:	stp	x29, x30, [sp, #-240]!
  43dc54:	mov	x29, sp
  43dc58:	stp	x19, x20, [sp, #16]
  43dc5c:	mov	x19, x0
  43dc60:	cbz	x2, 43dca4 <nftw@plt+0x3b124>
  43dc64:	stp	x21, x22, [sp, #32]
  43dc68:	mov	w20, w1
  43dc6c:	mov	x22, x2
  43dc70:	ldr	w21, [x0, #304]
  43dc74:	cbnz	w21, 441de0 <nftw@plt+0x3f260>
  43dc78:	ldr	w0, [x2]
  43dc7c:	cmp	w0, #0x50
  43dc80:	b.hi	441cdc <nftw@plt+0x3f15c>  // b.pmore
  43dc84:	stp	x23, x24, [sp, #48]
  43dc88:	stp	x25, x26, [sp, #64]
  43dc8c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43dc90:	add	x1, x1, #0xe8
  43dc94:	ldrh	w1, [x1, w0, uxtw #1]
  43dc98:	adr	x2, 43dca4 <nftw@plt+0x3b124>
  43dc9c:	add	x1, x2, w1, sxth #2
  43dca0:	br	x1
  43dca4:	mov	w0, #0x1                   	// #1
  43dca8:	str	w0, [x19, #304]
  43dcac:	b	441de4 <nftw@plt+0x3f264>
  43dcb0:	tbnz	w20, #2, 43dd3c <nftw@plt+0x3b1bc>
  43dcb4:	ldr	x1, [x22, #8]
  43dcb8:	ldrsw	x0, [x22, #16]
  43dcbc:	cbz	x0, 441df0 <nftw@plt+0x3f270>
  43dcc0:	mov	x20, x1
  43dcc4:	add	x22, x1, x0
  43dcc8:	mov	x23, #0xff                  	// #255
  43dccc:	b	43dcf0 <nftw@plt+0x3b170>
  43dcd0:	ldr	x0, [x19, #256]
  43dcd4:	add	x1, x0, #0x1
  43dcd8:	str	x1, [x19, #256]
  43dcdc:	strb	w21, [x19, x0]
  43dce0:	strb	w21, [x19, #264]
  43dce4:	add	x20, x20, #0x1
  43dce8:	cmp	x22, x20
  43dcec:	b.eq	43dd2c <nftw@plt+0x3b1ac>  // b.none
  43dcf0:	ldrb	w21, [x20]
  43dcf4:	ldr	x0, [x19, #256]
  43dcf8:	cmp	x0, #0xff
  43dcfc:	b.ne	43dcd0 <nftw@plt+0x3b150>  // b.any
  43dd00:	strb	wzr, [x19, #255]
  43dd04:	ldr	x3, [x19, #272]
  43dd08:	ldr	x2, [x19, #280]
  43dd0c:	mov	x1, x23
  43dd10:	mov	x0, x19
  43dd14:	blr	x3
  43dd18:	str	xzr, [x19, #256]
  43dd1c:	ldr	x0, [x19, #320]
  43dd20:	add	x0, x0, #0x1
  43dd24:	str	x0, [x19, #320]
  43dd28:	b	43dcd0 <nftw@plt+0x3b150>
  43dd2c:	ldp	x21, x22, [sp, #32]
  43dd30:	ldp	x23, x24, [sp, #48]
  43dd34:	ldp	x25, x26, [sp, #64]
  43dd38:	b	441de4 <nftw@plt+0x3f264>
  43dd3c:	ldr	x20, [x22, #8]
  43dd40:	ldrsw	x22, [x22, #16]
  43dd44:	add	x22, x20, x22
  43dd48:	cmp	x20, x22
  43dd4c:	b.cs	441e00 <nftw@plt+0x3f280>  // b.hs, b.nlast
  43dd50:	mov	x23, #0xff                  	// #255
  43dd54:	mov	x24, #0x0                   	// #0
  43dd58:	b	43de00 <nftw@plt+0x3b280>
  43dd5c:	sub	w1, w0, #0x41
  43dd60:	and	w1, w1, #0xff
  43dd64:	cmp	w1, #0x5
  43dd68:	b.hi	43dda0 <nftw@plt+0x3b220>  // b.pmore
  43dd6c:	sub	w0, w0, #0x37
  43dd70:	sxtw	x0, w0
  43dd74:	add	x2, x0, x2, lsl #4
  43dd78:	add	x21, x21, #0x1
  43dd7c:	cmp	x22, x21
  43dd80:	b.eq	43ddd0 <nftw@plt+0x3b250>  // b.none
  43dd84:	ldrb	w0, [x21]
  43dd88:	sub	w1, w0, #0x30
  43dd8c:	and	w1, w1, #0xff
  43dd90:	cmp	w1, #0x9
  43dd94:	b.hi	43dd5c <nftw@plt+0x3b1dc>  // b.pmore
  43dd98:	sub	w0, w0, #0x30
  43dd9c:	b	43dd70 <nftw@plt+0x3b1f0>
  43dda0:	sub	w1, w0, #0x61
  43dda4:	and	w1, w1, #0xff
  43dda8:	cmp	w1, #0x5
  43ddac:	b.hi	43ddb8 <nftw@plt+0x3b238>  // b.pmore
  43ddb0:	sub	w0, w0, #0x57
  43ddb4:	b	43dd70 <nftw@plt+0x3b1f0>
  43ddb8:	cmp	x22, x21
  43ddbc:	b.ls	43ddd0 <nftw@plt+0x3b250>  // b.plast
  43ddc0:	ldrb	w0, [x21]
  43ddc4:	cmp	w0, #0x5f
  43ddc8:	ccmp	x2, x23, #0x2, eq  // eq = none
  43ddcc:	b.ls	43de44 <nftw@plt+0x3b2c4>  // b.plast
  43ddd0:	ldrb	w21, [x20]
  43ddd4:	ldr	x0, [x19, #256]
  43ddd8:	cmp	x0, #0xff
  43dddc:	b.eq	43de9c <nftw@plt+0x3b31c>  // b.none
  43dde0:	ldr	x0, [x19, #256]
  43dde4:	add	x1, x0, #0x1
  43dde8:	str	x1, [x19, #256]
  43ddec:	strb	w21, [x19, x0]
  43ddf0:	strb	w21, [x19, #264]
  43ddf4:	add	x20, x20, #0x1
  43ddf8:	cmp	x22, x20
  43ddfc:	b.ls	43dec8 <nftw@plt+0x3b348>  // b.plast
  43de00:	sub	x0, x22, x20
  43de04:	cmp	x0, #0x3
  43de08:	b.le	43ddd0 <nftw@plt+0x3b250>
  43de0c:	ldrb	w0, [x20]
  43de10:	cmp	w0, #0x5f
  43de14:	b.ne	43ddd0 <nftw@plt+0x3b250>  // b.any
  43de18:	ldrb	w0, [x20, #1]
  43de1c:	cmp	w0, #0x5f
  43de20:	b.ne	43ddd0 <nftw@plt+0x3b250>  // b.any
  43de24:	ldrb	w0, [x20, #2]
  43de28:	cmp	w0, #0x55
  43de2c:	b.ne	43ddd0 <nftw@plt+0x3b250>  // b.any
  43de30:	add	x21, x20, #0x3
  43de34:	cmp	x22, x21
  43de38:	b.ls	43ddd0 <nftw@plt+0x3b250>  // b.plast
  43de3c:	mov	x2, x24
  43de40:	b	43dd84 <nftw@plt+0x3b204>
  43de44:	and	w20, w2, #0xff
  43de48:	ldr	x0, [x19, #256]
  43de4c:	cmp	x0, #0xff
  43de50:	b.eq	43de70 <nftw@plt+0x3b2f0>  // b.none
  43de54:	ldr	x0, [x19, #256]
  43de58:	add	x1, x0, #0x1
  43de5c:	str	x1, [x19, #256]
  43de60:	strb	w20, [x19, x0]
  43de64:	strb	w20, [x19, #264]
  43de68:	mov	x20, x21
  43de6c:	b	43ddf4 <nftw@plt+0x3b274>
  43de70:	strb	wzr, [x19, #255]
  43de74:	ldr	x3, [x19, #272]
  43de78:	ldr	x2, [x19, #280]
  43de7c:	mov	x1, x23
  43de80:	mov	x0, x19
  43de84:	blr	x3
  43de88:	str	xzr, [x19, #256]
  43de8c:	ldr	x0, [x19, #320]
  43de90:	add	x0, x0, #0x1
  43de94:	str	x0, [x19, #320]
  43de98:	b	43de54 <nftw@plt+0x3b2d4>
  43de9c:	strb	wzr, [x19, #255]
  43dea0:	ldr	x3, [x19, #272]
  43dea4:	ldr	x2, [x19, #280]
  43dea8:	mov	x1, x23
  43deac:	mov	x0, x19
  43deb0:	blr	x3
  43deb4:	str	xzr, [x19, #256]
  43deb8:	ldr	x0, [x19, #320]
  43debc:	add	x0, x0, #0x1
  43dec0:	str	x0, [x19, #320]
  43dec4:	b	43dde0 <nftw@plt+0x3b260>
  43dec8:	ldp	x21, x22, [sp, #32]
  43decc:	ldp	x23, x24, [sp, #48]
  43ded0:	ldp	x25, x26, [sp, #64]
  43ded4:	b	441de4 <nftw@plt+0x3f264>
  43ded8:	ldr	x2, [x22, #8]
  43dedc:	mov	w1, w20
  43dee0:	mov	x0, x19
  43dee4:	bl	441f24 <nftw@plt+0x3f3a4>
  43dee8:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43deec:	add	x21, x21, #0xee8
  43def0:	add	x24, x21, #0x5
  43def4:	mov	x25, #0xff                  	// #255
  43def8:	b	43df1c <nftw@plt+0x3b39c>
  43defc:	ldr	x0, [x19, #256]
  43df00:	add	x1, x0, #0x1
  43df04:	str	x1, [x19, #256]
  43df08:	strb	w23, [x19, x0]
  43df0c:	strb	w23, [x19, #264]
  43df10:	add	x21, x21, #0x1
  43df14:	cmp	x21, x24
  43df18:	b.eq	43df58 <nftw@plt+0x3b3d8>  // b.none
  43df1c:	ldrb	w23, [x21]
  43df20:	ldr	x0, [x19, #256]
  43df24:	cmp	x0, #0xff
  43df28:	b.ne	43defc <nftw@plt+0x3b37c>  // b.any
  43df2c:	strb	wzr, [x19, #255]
  43df30:	ldr	x3, [x19, #272]
  43df34:	ldr	x2, [x19, #280]
  43df38:	mov	x1, x25
  43df3c:	mov	x0, x19
  43df40:	blr	x3
  43df44:	str	xzr, [x19, #256]
  43df48:	ldr	x0, [x19, #320]
  43df4c:	add	x0, x0, #0x1
  43df50:	str	x0, [x19, #320]
  43df54:	b	43defc <nftw@plt+0x3b37c>
  43df58:	ldr	x2, [x22, #16]
  43df5c:	mov	w1, w20
  43df60:	mov	x0, x19
  43df64:	bl	441f24 <nftw@plt+0x3f3a4>
  43df68:	ldr	x0, [x19, #256]
  43df6c:	cmp	x0, #0xff
  43df70:	b.eq	43df9c <nftw@plt+0x3b41c>  // b.none
  43df74:	ldr	x1, [x19, #256]
  43df78:	add	x0, x1, #0x1
  43df7c:	str	x0, [x19, #256]
  43df80:	mov	w0, #0x5d                  	// #93
  43df84:	strb	w0, [x19, x1]
  43df88:	strb	w0, [x19, #264]
  43df8c:	ldp	x21, x22, [sp, #32]
  43df90:	ldp	x23, x24, [sp, #48]
  43df94:	ldp	x25, x26, [sp, #64]
  43df98:	b	441de4 <nftw@plt+0x3f264>
  43df9c:	strb	wzr, [x19, #255]
  43dfa0:	ldr	x3, [x19, #272]
  43dfa4:	ldr	x2, [x19, #280]
  43dfa8:	mov	x1, #0xff                  	// #255
  43dfac:	mov	x0, x19
  43dfb0:	blr	x3
  43dfb4:	str	xzr, [x19, #256]
  43dfb8:	ldr	x0, [x19, #320]
  43dfbc:	add	x0, x0, #0x1
  43dfc0:	str	x0, [x19, #320]
  43dfc4:	b	43df74 <nftw@plt+0x3b3f4>
  43dfc8:	ldr	x2, [x22, #8]
  43dfcc:	mov	w1, w20
  43dfd0:	mov	x0, x19
  43dfd4:	bl	441f24 <nftw@plt+0x3f3a4>
  43dfd8:	tbz	w20, #2, 43e030 <nftw@plt+0x3b4b0>
  43dfdc:	ldr	x0, [x19, #256]
  43dfe0:	cmp	x0, #0xff
  43dfe4:	b.eq	43e0a0 <nftw@plt+0x3b520>  // b.none
  43dfe8:	ldr	x1, [x19, #256]
  43dfec:	add	x0, x1, #0x1
  43dff0:	str	x0, [x19, #256]
  43dff4:	mov	w0, #0x2e                  	// #46
  43dff8:	strb	w0, [x19, x1]
  43dffc:	strb	w0, [x19, #264]
  43e000:	ldr	x23, [x22, #16]
  43e004:	ldr	w0, [x23]
  43e008:	cmp	w0, #0x47
  43e00c:	b.eq	43e0cc <nftw@plt+0x3b54c>  // b.none
  43e010:	mov	x2, x23
  43e014:	mov	w1, w20
  43e018:	mov	x0, x19
  43e01c:	bl	441f24 <nftw@plt+0x3f3a4>
  43e020:	ldp	x21, x22, [sp, #32]
  43e024:	ldp	x23, x24, [sp, #48]
  43e028:	ldp	x25, x26, [sp, #64]
  43e02c:	b	441de4 <nftw@plt+0x3f264>
  43e030:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  43e034:	add	x21, x21, #0x368
  43e038:	add	x24, x21, #0x2
  43e03c:	mov	x25, #0xff                  	// #255
  43e040:	b	43e064 <nftw@plt+0x3b4e4>
  43e044:	ldr	x0, [x19, #256]
  43e048:	add	x1, x0, #0x1
  43e04c:	str	x1, [x19, #256]
  43e050:	strb	w23, [x19, x0]
  43e054:	strb	w23, [x19, #264]
  43e058:	add	x21, x21, #0x1
  43e05c:	cmp	x24, x21
  43e060:	b.eq	43e000 <nftw@plt+0x3b480>  // b.none
  43e064:	ldrb	w23, [x21]
  43e068:	ldr	x0, [x19, #256]
  43e06c:	cmp	x0, #0xff
  43e070:	b.ne	43e044 <nftw@plt+0x3b4c4>  // b.any
  43e074:	strb	wzr, [x19, #255]
  43e078:	ldr	x3, [x19, #272]
  43e07c:	ldr	x2, [x19, #280]
  43e080:	mov	x1, x25
  43e084:	mov	x0, x19
  43e088:	blr	x3
  43e08c:	str	xzr, [x19, #256]
  43e090:	ldr	x0, [x19, #320]
  43e094:	add	x0, x0, #0x1
  43e098:	str	x0, [x19, #320]
  43e09c:	b	43e044 <nftw@plt+0x3b4c4>
  43e0a0:	strb	wzr, [x19, #255]
  43e0a4:	ldr	x3, [x19, #272]
  43e0a8:	ldr	x2, [x19, #280]
  43e0ac:	mov	x1, #0xff                  	// #255
  43e0b0:	mov	x0, x19
  43e0b4:	blr	x3
  43e0b8:	str	xzr, [x19, #256]
  43e0bc:	ldr	x0, [x19, #320]
  43e0c0:	add	x0, x0, #0x1
  43e0c4:	str	x0, [x19, #320]
  43e0c8:	b	43dfe8 <nftw@plt+0x3b468>
  43e0cc:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43e0d0:	add	x21, x21, #0xef0
  43e0d4:	add	x24, x21, #0xd
  43e0d8:	mov	x25, #0xff                  	// #255
  43e0dc:	b	43e100 <nftw@plt+0x3b580>
  43e0e0:	ldr	x0, [x19, #256]
  43e0e4:	add	x1, x0, #0x1
  43e0e8:	str	x1, [x19, #256]
  43e0ec:	strb	w22, [x19, x0]
  43e0f0:	strb	w22, [x19, #264]
  43e0f4:	add	x21, x21, #0x1
  43e0f8:	cmp	x21, x24
  43e0fc:	b.eq	43e13c <nftw@plt+0x3b5bc>  // b.none
  43e100:	ldrb	w22, [x21]
  43e104:	ldr	x0, [x19, #256]
  43e108:	cmp	x0, #0xff
  43e10c:	b.ne	43e0e0 <nftw@plt+0x3b560>  // b.any
  43e110:	strb	wzr, [x19, #255]
  43e114:	ldr	x3, [x19, #272]
  43e118:	ldr	x2, [x19, #280]
  43e11c:	mov	x1, x25
  43e120:	mov	x0, x19
  43e124:	blr	x3
  43e128:	str	xzr, [x19, #256]
  43e12c:	ldr	x0, [x19, #320]
  43e130:	add	x0, x0, #0x1
  43e134:	str	x0, [x19, #320]
  43e138:	b	43e0e0 <nftw@plt+0x3b560>
  43e13c:	ldr	w2, [x23, #16]
  43e140:	add	w2, w2, #0x1
  43e144:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  43e148:	add	x1, x1, #0x3f8
  43e14c:	add	x0, sp, #0x70
  43e150:	bl	4025b0 <sprintf@plt>
  43e154:	add	x0, sp, #0x70
  43e158:	bl	4024f0 <strlen@plt>
  43e15c:	cbz	x0, 43e1cc <nftw@plt+0x3b64c>
  43e160:	add	x21, sp, #0x70
  43e164:	add	x24, x0, x21
  43e168:	mov	x25, #0xff                  	// #255
  43e16c:	b	43e190 <nftw@plt+0x3b610>
  43e170:	ldr	x0, [x19, #256]
  43e174:	add	x1, x0, #0x1
  43e178:	str	x1, [x19, #256]
  43e17c:	strb	w22, [x19, x0]
  43e180:	strb	w22, [x19, #264]
  43e184:	add	x21, x21, #0x1
  43e188:	cmp	x24, x21
  43e18c:	b.eq	43e1cc <nftw@plt+0x3b64c>  // b.none
  43e190:	ldrb	w22, [x21]
  43e194:	ldr	x0, [x19, #256]
  43e198:	cmp	x0, #0xff
  43e19c:	b.ne	43e170 <nftw@plt+0x3b5f0>  // b.any
  43e1a0:	strb	wzr, [x19, #255]
  43e1a4:	ldr	x3, [x19, #272]
  43e1a8:	ldr	x2, [x19, #280]
  43e1ac:	mov	x1, x25
  43e1b0:	mov	x0, x19
  43e1b4:	blr	x3
  43e1b8:	str	xzr, [x19, #256]
  43e1bc:	ldr	x0, [x19, #320]
  43e1c0:	add	x0, x0, #0x1
  43e1c4:	str	x0, [x19, #320]
  43e1c8:	b	43e170 <nftw@plt+0x3b5f0>
  43e1cc:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43e1d0:	add	x21, x21, #0xf00
  43e1d4:	add	x24, x21, #0x3
  43e1d8:	mov	x25, #0xff                  	// #255
  43e1dc:	b	43e200 <nftw@plt+0x3b680>
  43e1e0:	ldr	x0, [x19, #256]
  43e1e4:	add	x1, x0, #0x1
  43e1e8:	str	x1, [x19, #256]
  43e1ec:	strb	w22, [x19, x0]
  43e1f0:	strb	w22, [x19, #264]
  43e1f4:	add	x21, x21, #0x1
  43e1f8:	cmp	x21, x24
  43e1fc:	b.eq	43e23c <nftw@plt+0x3b6bc>  // b.none
  43e200:	ldrb	w22, [x21]
  43e204:	ldr	x0, [x19, #256]
  43e208:	cmp	x0, #0xff
  43e20c:	b.ne	43e1e0 <nftw@plt+0x3b660>  // b.any
  43e210:	strb	wzr, [x19, #255]
  43e214:	ldr	x3, [x19, #272]
  43e218:	ldr	x2, [x19, #280]
  43e21c:	mov	x1, x25
  43e220:	mov	x0, x19
  43e224:	blr	x3
  43e228:	str	xzr, [x19, #256]
  43e22c:	ldr	x0, [x19, #320]
  43e230:	add	x0, x0, #0x1
  43e234:	str	x0, [x19, #320]
  43e238:	b	43e1e0 <nftw@plt+0x3b660>
  43e23c:	ldr	x23, [x23, #8]
  43e240:	b	43e010 <nftw@plt+0x3b490>
  43e244:	stp	x27, x28, [sp, #80]
  43e248:	ldr	x27, [x19, #296]
  43e24c:	str	xzr, [x19, #296]
  43e250:	ldr	x21, [x22, #8]
  43e254:	cbz	x21, 441cec <nftw@plt+0x3f16c>
  43e258:	ldr	x24, [x19, #288]
  43e25c:	add	x26, sp, #0x70
  43e260:	mov	x25, x26
  43e264:	mov	w23, #0x0                   	// #0
  43e268:	ldr	x0, [x19, #296]
  43e26c:	str	x0, [x25]
  43e270:	str	x25, [x19, #296]
  43e274:	str	x21, [x25, #8]
  43e278:	str	wzr, [x25, #16]
  43e27c:	str	x24, [x25, #24]
  43e280:	add	w23, w23, #0x1
  43e284:	ldr	w28, [x21]
  43e288:	mov	w0, w28
  43e28c:	bl	43d13c <nftw@plt+0x3a5bc>
  43e290:	cbz	w0, 441d08 <nftw@plt+0x3f188>
  43e294:	ldr	x21, [x21, #8]
  43e298:	cbz	x21, 441cec <nftw@plt+0x3f16c>
  43e29c:	add	x25, x25, #0x20
  43e2a0:	cmp	w23, #0x4
  43e2a4:	b.ne	43e268 <nftw@plt+0x3b6e8>  // b.any
  43e2a8:	mov	w0, #0x1                   	// #1
  43e2ac:	str	w0, [x19, #304]
  43e2b0:	ldp	x21, x22, [sp, #32]
  43e2b4:	ldp	x23, x24, [sp, #48]
  43e2b8:	ldp	x25, x26, [sp, #64]
  43e2bc:	ldp	x27, x28, [sp, #80]
  43e2c0:	b	441de4 <nftw@plt+0x3f264>
  43e2c4:	ldr	x21, [x21, #16]
  43e2c8:	ldr	w0, [x21]
  43e2cc:	cmp	w0, #0x47
  43e2d0:	b.eq	43e344 <nftw@plt+0x3b7c4>  // b.none
  43e2d4:	ubfiz	x25, x23, #5, #32
  43e2d8:	add	x0, sp, #0x70
  43e2dc:	add	x25, x0, x25
  43e2e0:	add	x28, sp, #0x78
  43e2e4:	ldr	w0, [x21]
  43e2e8:	bl	43d13c <nftw@plt+0x3a5bc>
  43e2ec:	cbz	w0, 441d10 <nftw@plt+0x3f190>
  43e2f0:	cmp	w23, #0x3
  43e2f4:	b.hi	43e368 <nftw@plt+0x3b7e8>  // b.pmore
  43e2f8:	sub	w0, w23, #0x1
  43e2fc:	lsl	x0, x0, #5
  43e300:	add	x1, sp, #0x70
  43e304:	add	x1, x1, x0
  43e308:	ldp	x2, x3, [x1]
  43e30c:	stp	x2, x3, [x25]
  43e310:	ldp	x2, x3, [x1, #16]
  43e314:	stp	x2, x3, [x25, #16]
  43e318:	str	x1, [x25]
  43e31c:	str	x25, [x19, #296]
  43e320:	str	x21, [x28, x0]
  43e324:	add	x1, sp, #0x80
  43e328:	str	wzr, [x1, x0]
  43e32c:	add	x1, sp, #0x88
  43e330:	str	x24, [x1, x0]
  43e334:	add	w23, w23, #0x1
  43e338:	ldr	x21, [x21, #8]
  43e33c:	add	x25, x25, #0x20
  43e340:	b	43e2e4 <nftw@plt+0x3b764>
  43e344:	ldr	x21, [x21, #8]
  43e348:	cbnz	x21, 43e2d4 <nftw@plt+0x3b754>
  43e34c:	mov	w0, #0x1                   	// #1
  43e350:	str	w0, [x19, #304]
  43e354:	ldp	x21, x22, [sp, #32]
  43e358:	ldp	x23, x24, [sp, #48]
  43e35c:	ldp	x25, x26, [sp, #64]
  43e360:	ldp	x27, x28, [sp, #80]
  43e364:	b	441de4 <nftw@plt+0x3f264>
  43e368:	mov	w0, #0x1                   	// #1
  43e36c:	str	w0, [x19, #304]
  43e370:	ldp	x21, x22, [sp, #32]
  43e374:	ldp	x23, x24, [sp, #48]
  43e378:	ldp	x25, x26, [sp, #64]
  43e37c:	ldp	x27, x28, [sp, #80]
  43e380:	b	441de4 <nftw@plt+0x3f264>
  43e384:	str	x24, [sp, #96]
  43e388:	add	x0, sp, #0x60
  43e38c:	str	x0, [x19, #288]
  43e390:	str	x21, [sp, #104]
  43e394:	b	441d1c <nftw@plt+0x3f19c>
  43e398:	ldr	x0, [sp, #96]
  43e39c:	str	x0, [x19, #288]
  43e3a0:	b	441d38 <nftw@plt+0x3f1b8>
  43e3a4:	ldr	x0, [x19, #256]
  43e3a8:	add	x1, x0, #0x1
  43e3ac:	str	x1, [x19, #256]
  43e3b0:	strb	w22, [x19, x0]
  43e3b4:	strb	w22, [x19, #264]
  43e3b8:	ldr	x2, [x24, #8]
  43e3bc:	mov	w1, w20
  43e3c0:	mov	x0, x19
  43e3c4:	bl	441fc0 <nftw@plt+0x3f440>
  43e3c8:	sub	x0, x21, #0x20
  43e3cc:	cmp	x26, x21
  43e3d0:	b.eq	43e41c <nftw@plt+0x3b89c>  // b.none
  43e3d4:	mov	x21, x0
  43e3d8:	mov	x24, x21
  43e3dc:	ldr	w0, [x21, #16]
  43e3e0:	cbnz	w0, 43e3c8 <nftw@plt+0x3b848>
  43e3e4:	ldr	x0, [x19, #256]
  43e3e8:	cmp	x0, #0xff
  43e3ec:	b.ne	43e3a4 <nftw@plt+0x3b824>  // b.any
  43e3f0:	strb	wzr, [x19, #255]
  43e3f4:	ldr	x3, [x19, #272]
  43e3f8:	ldr	x2, [x19, #280]
  43e3fc:	mov	x1, x23
  43e400:	mov	x0, x19
  43e404:	blr	x3
  43e408:	str	xzr, [x19, #256]
  43e40c:	ldr	x0, [x19, #320]
  43e410:	add	x0, x0, #0x1
  43e414:	str	x0, [x19, #320]
  43e418:	b	43e3a4 <nftw@plt+0x3b824>
  43e41c:	str	x27, [x19, #296]
  43e420:	ldp	x21, x22, [sp, #32]
  43e424:	ldp	x23, x24, [sp, #48]
  43e428:	ldp	x25, x26, [sp, #64]
  43e42c:	ldp	x27, x28, [sp, #80]
  43e430:	b	441de4 <nftw@plt+0x3f264>
  43e434:	ldr	x23, [x19, #368]
  43e438:	str	x22, [x19, #368]
  43e43c:	ldr	x24, [x19, #296]
  43e440:	str	xzr, [x19, #296]
  43e444:	ldr	x21, [x22, #8]
  43e448:	tbz	w20, #2, 43e460 <nftw@plt+0x3b8e0>
  43e44c:	ldr	w0, [x21]
  43e450:	cbnz	w0, 43e460 <nftw@plt+0x3b8e0>
  43e454:	ldr	w0, [x21, #16]
  43e458:	cmp	w0, #0x6
  43e45c:	b.eq	43e4f8 <nftw@plt+0x3b978>  // b.none
  43e460:	mov	x2, x21
  43e464:	mov	w1, w20
  43e468:	mov	x0, x19
  43e46c:	bl	441f24 <nftw@plt+0x3f3a4>
  43e470:	ldrb	w0, [x19, #264]
  43e474:	cmp	w0, #0x3c
  43e478:	b.eq	43e538 <nftw@plt+0x3b9b8>  // b.none
  43e47c:	ldr	x0, [x19, #256]
  43e480:	cmp	x0, #0xff
  43e484:	b.eq	43e58c <nftw@plt+0x3ba0c>  // b.none
  43e488:	ldr	x1, [x19, #256]
  43e48c:	add	x0, x1, #0x1
  43e490:	str	x0, [x19, #256]
  43e494:	mov	w0, #0x3c                  	// #60
  43e498:	strb	w0, [x19, x1]
  43e49c:	strb	w0, [x19, #264]
  43e4a0:	ldr	x2, [x22, #16]
  43e4a4:	mov	w1, w20
  43e4a8:	mov	x0, x19
  43e4ac:	bl	441f24 <nftw@plt+0x3f3a4>
  43e4b0:	ldrb	w0, [x19, #264]
  43e4b4:	cmp	w0, #0x3e
  43e4b8:	b.eq	43e5b8 <nftw@plt+0x3ba38>  // b.none
  43e4bc:	ldr	x0, [x19, #256]
  43e4c0:	cmp	x0, #0xff
  43e4c4:	b.eq	43e60c <nftw@plt+0x3ba8c>  // b.none
  43e4c8:	ldr	x1, [x19, #256]
  43e4cc:	add	x0, x1, #0x1
  43e4d0:	str	x0, [x19, #256]
  43e4d4:	mov	w0, #0x3e                  	// #62
  43e4d8:	strb	w0, [x19, x1]
  43e4dc:	strb	w0, [x19, #264]
  43e4e0:	str	x24, [x19, #296]
  43e4e4:	str	x23, [x19, #368]
  43e4e8:	ldp	x21, x22, [sp, #32]
  43e4ec:	ldp	x23, x24, [sp, #48]
  43e4f0:	ldp	x25, x26, [sp, #64]
  43e4f4:	b	441de4 <nftw@plt+0x3f264>
  43e4f8:	mov	x2, #0x6                   	// #6
  43e4fc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43e500:	add	x1, x1, #0xf08
  43e504:	ldr	x0, [x21, #8]
  43e508:	bl	4026a0 <strncmp@plt>
  43e50c:	cbnz	w0, 43e460 <nftw@plt+0x3b8e0>
  43e510:	ldr	x2, [x22, #16]
  43e514:	mov	w1, w20
  43e518:	mov	x0, x19
  43e51c:	bl	441f24 <nftw@plt+0x3f3a4>
  43e520:	mov	x2, #0x2                   	// #2
  43e524:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  43e528:	add	x1, x1, #0x78
  43e52c:	mov	x0, x19
  43e530:	bl	43d938 <nftw@plt+0x3adb8>
  43e534:	b	43e4e0 <nftw@plt+0x3b960>
  43e538:	ldr	x0, [x19, #256]
  43e53c:	cmp	x0, #0xff
  43e540:	b.eq	43e560 <nftw@plt+0x3b9e0>  // b.none
  43e544:	ldr	x1, [x19, #256]
  43e548:	add	x0, x1, #0x1
  43e54c:	str	x0, [x19, #256]
  43e550:	mov	w0, #0x20                  	// #32
  43e554:	strb	w0, [x19, x1]
  43e558:	strb	w0, [x19, #264]
  43e55c:	b	43e47c <nftw@plt+0x3b8fc>
  43e560:	strb	wzr, [x19, #255]
  43e564:	ldr	x3, [x19, #272]
  43e568:	ldr	x2, [x19, #280]
  43e56c:	mov	x1, #0xff                  	// #255
  43e570:	mov	x0, x19
  43e574:	blr	x3
  43e578:	str	xzr, [x19, #256]
  43e57c:	ldr	x0, [x19, #320]
  43e580:	add	x0, x0, #0x1
  43e584:	str	x0, [x19, #320]
  43e588:	b	43e544 <nftw@plt+0x3b9c4>
  43e58c:	strb	wzr, [x19, #255]
  43e590:	ldr	x3, [x19, #272]
  43e594:	ldr	x2, [x19, #280]
  43e598:	mov	x1, #0xff                  	// #255
  43e59c:	mov	x0, x19
  43e5a0:	blr	x3
  43e5a4:	str	xzr, [x19, #256]
  43e5a8:	ldr	x0, [x19, #320]
  43e5ac:	add	x0, x0, #0x1
  43e5b0:	str	x0, [x19, #320]
  43e5b4:	b	43e488 <nftw@plt+0x3b908>
  43e5b8:	ldr	x0, [x19, #256]
  43e5bc:	cmp	x0, #0xff
  43e5c0:	b.eq	43e5e0 <nftw@plt+0x3ba60>  // b.none
  43e5c4:	ldr	x1, [x19, #256]
  43e5c8:	add	x0, x1, #0x1
  43e5cc:	str	x0, [x19, #256]
  43e5d0:	mov	w0, #0x20                  	// #32
  43e5d4:	strb	w0, [x19, x1]
  43e5d8:	strb	w0, [x19, #264]
  43e5dc:	b	43e4bc <nftw@plt+0x3b93c>
  43e5e0:	strb	wzr, [x19, #255]
  43e5e4:	ldr	x3, [x19, #272]
  43e5e8:	ldr	x2, [x19, #280]
  43e5ec:	mov	x1, #0xff                  	// #255
  43e5f0:	mov	x0, x19
  43e5f4:	blr	x3
  43e5f8:	str	xzr, [x19, #256]
  43e5fc:	ldr	x0, [x19, #320]
  43e600:	add	x0, x0, #0x1
  43e604:	str	x0, [x19, #320]
  43e608:	b	43e5c4 <nftw@plt+0x3ba44>
  43e60c:	strb	wzr, [x19, #255]
  43e610:	ldr	x3, [x19, #272]
  43e614:	ldr	x2, [x19, #280]
  43e618:	mov	x1, #0xff                  	// #255
  43e61c:	mov	x0, x19
  43e620:	blr	x3
  43e624:	str	xzr, [x19, #256]
  43e628:	ldr	x0, [x19, #320]
  43e62c:	add	x0, x0, #0x1
  43e630:	str	x0, [x19, #320]
  43e634:	b	43e4c8 <nftw@plt+0x3b948>
  43e638:	ldr	w0, [x19, #312]
  43e63c:	cbz	w0, 43e750 <nftw@plt+0x3bbd0>
  43e640:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43e644:	add	x20, x20, #0xf10
  43e648:	add	x23, x20, #0x5
  43e64c:	mov	x24, #0xff                  	// #255
  43e650:	b	43e674 <nftw@plt+0x3baf4>
  43e654:	ldr	x0, [x19, #256]
  43e658:	add	x1, x0, #0x1
  43e65c:	str	x1, [x19, #256]
  43e660:	strb	w21, [x19, x0]
  43e664:	strb	w21, [x19, #264]
  43e668:	add	x20, x20, #0x1
  43e66c:	cmp	x23, x20
  43e670:	b.eq	43e6b0 <nftw@plt+0x3bb30>  // b.none
  43e674:	ldrb	w21, [x20]
  43e678:	ldr	x0, [x19, #256]
  43e67c:	cmp	x0, #0xff
  43e680:	b.ne	43e654 <nftw@plt+0x3bad4>  // b.any
  43e684:	strb	wzr, [x19, #255]
  43e688:	ldr	x3, [x19, #272]
  43e68c:	ldr	x2, [x19, #280]
  43e690:	mov	x1, x24
  43e694:	mov	x0, x19
  43e698:	blr	x3
  43e69c:	str	xzr, [x19, #256]
  43e6a0:	ldr	x0, [x19, #320]
  43e6a4:	add	x0, x0, #0x1
  43e6a8:	str	x0, [x19, #320]
  43e6ac:	b	43e654 <nftw@plt+0x3bad4>
  43e6b0:	ldr	x2, [x22, #8]
  43e6b4:	add	w2, w2, #0x1
  43e6b8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  43e6bc:	add	x1, x1, #0x3f8
  43e6c0:	add	x0, sp, #0x70
  43e6c4:	bl	4025b0 <sprintf@plt>
  43e6c8:	add	x0, sp, #0x70
  43e6cc:	bl	4024f0 <strlen@plt>
  43e6d0:	cbz	x0, 441e10 <nftw@plt+0x3f290>
  43e6d4:	add	x20, sp, #0x70
  43e6d8:	add	x22, x0, x20
  43e6dc:	mov	x23, #0xff                  	// #255
  43e6e0:	b	43e704 <nftw@plt+0x3bb84>
  43e6e4:	ldr	x0, [x19, #256]
  43e6e8:	add	x1, x0, #0x1
  43e6ec:	str	x1, [x19, #256]
  43e6f0:	strb	w21, [x19, x0]
  43e6f4:	strb	w21, [x19, #264]
  43e6f8:	add	x20, x20, #0x1
  43e6fc:	cmp	x22, x20
  43e700:	b.eq	43e740 <nftw@plt+0x3bbc0>  // b.none
  43e704:	ldrb	w21, [x20]
  43e708:	ldr	x0, [x19, #256]
  43e70c:	cmp	x0, #0xff
  43e710:	b.ne	43e6e4 <nftw@plt+0x3bb64>  // b.any
  43e714:	strb	wzr, [x19, #255]
  43e718:	ldr	x3, [x19, #272]
  43e71c:	ldr	x2, [x19, #280]
  43e720:	mov	x1, x23
  43e724:	mov	x0, x19
  43e728:	blr	x3
  43e72c:	str	xzr, [x19, #256]
  43e730:	ldr	x0, [x19, #320]
  43e734:	add	x0, x0, #0x1
  43e738:	str	x0, [x19, #320]
  43e73c:	b	43e6e4 <nftw@plt+0x3bb64>
  43e740:	ldp	x21, x22, [sp, #32]
  43e744:	ldp	x23, x24, [sp, #48]
  43e748:	ldp	x25, x26, [sp, #64]
  43e74c:	b	441de4 <nftw@plt+0x3f264>
  43e750:	mov	x1, x22
  43e754:	mov	x0, x19
  43e758:	bl	43da10 <nftw@plt+0x3ae90>
  43e75c:	cbz	x0, 43e7a8 <nftw@plt+0x3bc28>
  43e760:	ldr	w1, [x0]
  43e764:	cmp	w1, #0x2f
  43e768:	b.eq	43e79c <nftw@plt+0x3bc1c>  // b.none
  43e76c:	ldr	x21, [x19, #288]
  43e770:	ldr	x1, [x21]
  43e774:	str	x1, [x19, #288]
  43e778:	mov	x2, x0
  43e77c:	mov	w1, w20
  43e780:	mov	x0, x19
  43e784:	bl	441f24 <nftw@plt+0x3f3a4>
  43e788:	str	x21, [x19, #288]
  43e78c:	ldp	x21, x22, [sp, #32]
  43e790:	ldp	x23, x24, [sp, #48]
  43e794:	ldp	x25, x26, [sp, #64]
  43e798:	b	441de4 <nftw@plt+0x3f264>
  43e79c:	ldr	w1, [x19, #316]
  43e7a0:	bl	43d9d8 <nftw@plt+0x3ae58>
  43e7a4:	cbnz	x0, 43e76c <nftw@plt+0x3bbec>
  43e7a8:	mov	w0, #0x1                   	// #1
  43e7ac:	str	w0, [x19, #304]
  43e7b0:	ldp	x21, x22, [sp, #32]
  43e7b4:	ldp	x23, x24, [sp, #48]
  43e7b8:	ldp	x25, x26, [sp, #64]
  43e7bc:	b	441de4 <nftw@plt+0x3f264>
  43e7c0:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43e7c4:	add	x21, x21, #0xf18
  43e7c8:	add	x24, x21, #0x1e
  43e7cc:	mov	x25, #0xff                  	// #255
  43e7d0:	b	43e7f4 <nftw@plt+0x3bc74>
  43e7d4:	ldr	x0, [x19, #256]
  43e7d8:	add	x1, x0, #0x1
  43e7dc:	str	x1, [x19, #256]
  43e7e0:	strb	w23, [x19, x0]
  43e7e4:	strb	w23, [x19, #264]
  43e7e8:	add	x21, x21, #0x1
  43e7ec:	cmp	x21, x24
  43e7f0:	b.eq	43e830 <nftw@plt+0x3bcb0>  // b.none
  43e7f4:	ldrb	w23, [x21]
  43e7f8:	ldr	x0, [x19, #256]
  43e7fc:	cmp	x0, #0xff
  43e800:	b.ne	43e7d4 <nftw@plt+0x3bc54>  // b.any
  43e804:	strb	wzr, [x19, #255]
  43e808:	ldr	x3, [x19, #272]
  43e80c:	ldr	x2, [x19, #280]
  43e810:	mov	x1, x25
  43e814:	mov	x0, x19
  43e818:	blr	x3
  43e81c:	str	xzr, [x19, #256]
  43e820:	ldr	x0, [x19, #320]
  43e824:	add	x0, x0, #0x1
  43e828:	str	x0, [x19, #320]
  43e82c:	b	43e7d4 <nftw@plt+0x3bc54>
  43e830:	ldr	x2, [x22, #8]
  43e834:	mov	w1, w20
  43e838:	mov	x0, x19
  43e83c:	bl	441f24 <nftw@plt+0x3f3a4>
  43e840:	ldp	x21, x22, [sp, #32]
  43e844:	ldp	x23, x24, [sp, #48]
  43e848:	ldp	x25, x26, [sp, #64]
  43e84c:	b	441de4 <nftw@plt+0x3f264>
  43e850:	ldr	x2, [x22, #16]
  43e854:	mov	w1, w20
  43e858:	mov	x0, x19
  43e85c:	bl	441f24 <nftw@plt+0x3f3a4>
  43e860:	ldp	x21, x22, [sp, #32]
  43e864:	ldp	x23, x24, [sp, #48]
  43e868:	ldp	x25, x26, [sp, #64]
  43e86c:	b	441de4 <nftw@plt+0x3f264>
  43e870:	ldr	x0, [x19, #256]
  43e874:	cmp	x0, #0xff
  43e878:	b.eq	43e8b4 <nftw@plt+0x3bd34>  // b.none
  43e87c:	ldr	x1, [x19, #256]
  43e880:	add	x0, x1, #0x1
  43e884:	str	x0, [x19, #256]
  43e888:	mov	w0, #0x7e                  	// #126
  43e88c:	strb	w0, [x19, x1]
  43e890:	strb	w0, [x19, #264]
  43e894:	ldr	x2, [x22, #16]
  43e898:	mov	w1, w20
  43e89c:	mov	x0, x19
  43e8a0:	bl	441f24 <nftw@plt+0x3f3a4>
  43e8a4:	ldp	x21, x22, [sp, #32]
  43e8a8:	ldp	x23, x24, [sp, #48]
  43e8ac:	ldp	x25, x26, [sp, #64]
  43e8b0:	b	441de4 <nftw@plt+0x3f264>
  43e8b4:	strb	wzr, [x19, #255]
  43e8b8:	ldr	x3, [x19, #272]
  43e8bc:	ldr	x2, [x19, #280]
  43e8c0:	mov	x1, #0xff                  	// #255
  43e8c4:	mov	x0, x19
  43e8c8:	blr	x3
  43e8cc:	str	xzr, [x19, #256]
  43e8d0:	ldr	x0, [x19, #320]
  43e8d4:	add	x0, x0, #0x1
  43e8d8:	str	x0, [x19, #320]
  43e8dc:	b	43e87c <nftw@plt+0x3bcfc>
  43e8e0:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43e8e4:	add	x21, x21, #0xf38
  43e8e8:	add	x24, x21, #0xb
  43e8ec:	mov	x25, #0xff                  	// #255
  43e8f0:	b	43e914 <nftw@plt+0x3bd94>
  43e8f4:	ldr	x0, [x19, #256]
  43e8f8:	add	x1, x0, #0x1
  43e8fc:	str	x1, [x19, #256]
  43e900:	strb	w23, [x19, x0]
  43e904:	strb	w23, [x19, #264]
  43e908:	add	x21, x21, #0x1
  43e90c:	cmp	x24, x21
  43e910:	b.eq	43e950 <nftw@plt+0x3bdd0>  // b.none
  43e914:	ldrb	w23, [x21]
  43e918:	ldr	x0, [x19, #256]
  43e91c:	cmp	x0, #0xff
  43e920:	b.ne	43e8f4 <nftw@plt+0x3bd74>  // b.any
  43e924:	strb	wzr, [x19, #255]
  43e928:	ldr	x3, [x19, #272]
  43e92c:	ldr	x2, [x19, #280]
  43e930:	mov	x1, x25
  43e934:	mov	x0, x19
  43e938:	blr	x3
  43e93c:	str	xzr, [x19, #256]
  43e940:	ldr	x0, [x19, #320]
  43e944:	add	x0, x0, #0x1
  43e948:	str	x0, [x19, #320]
  43e94c:	b	43e8f4 <nftw@plt+0x3bd74>
  43e950:	ldr	x2, [x22, #8]
  43e954:	mov	w1, w20
  43e958:	mov	x0, x19
  43e95c:	bl	441f24 <nftw@plt+0x3f3a4>
  43e960:	ldp	x21, x22, [sp, #32]
  43e964:	ldp	x23, x24, [sp, #48]
  43e968:	ldp	x25, x26, [sp, #64]
  43e96c:	b	441de4 <nftw@plt+0x3f264>
  43e970:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43e974:	add	x21, x21, #0xf48
  43e978:	add	x24, x21, #0x8
  43e97c:	mov	x25, #0xff                  	// #255
  43e980:	b	43e9a4 <nftw@plt+0x3be24>
  43e984:	ldr	x0, [x19, #256]
  43e988:	add	x1, x0, #0x1
  43e98c:	str	x1, [x19, #256]
  43e990:	strb	w23, [x19, x0]
  43e994:	strb	w23, [x19, #264]
  43e998:	add	x21, x21, #0x1
  43e99c:	cmp	x24, x21
  43e9a0:	b.eq	43e9e0 <nftw@plt+0x3be60>  // b.none
  43e9a4:	ldrb	w23, [x21]
  43e9a8:	ldr	x0, [x19, #256]
  43e9ac:	cmp	x0, #0xff
  43e9b0:	b.ne	43e984 <nftw@plt+0x3be04>  // b.any
  43e9b4:	strb	wzr, [x19, #255]
  43e9b8:	ldr	x3, [x19, #272]
  43e9bc:	ldr	x2, [x19, #280]
  43e9c0:	mov	x1, x25
  43e9c4:	mov	x0, x19
  43e9c8:	blr	x3
  43e9cc:	str	xzr, [x19, #256]
  43e9d0:	ldr	x0, [x19, #320]
  43e9d4:	add	x0, x0, #0x1
  43e9d8:	str	x0, [x19, #320]
  43e9dc:	b	43e984 <nftw@plt+0x3be04>
  43e9e0:	ldr	x2, [x22, #8]
  43e9e4:	mov	w1, w20
  43e9e8:	mov	x0, x19
  43e9ec:	bl	441f24 <nftw@plt+0x3f3a4>
  43e9f0:	ldp	x21, x22, [sp, #32]
  43e9f4:	ldp	x23, x24, [sp, #48]
  43e9f8:	ldp	x25, x26, [sp, #64]
  43e9fc:	b	441de4 <nftw@plt+0x3f264>
  43ea00:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43ea04:	add	x21, x21, #0xf58
  43ea08:	add	x24, x21, #0x18
  43ea0c:	mov	x25, #0xff                  	// #255
  43ea10:	b	43ea34 <nftw@plt+0x3beb4>
  43ea14:	ldr	x0, [x19, #256]
  43ea18:	add	x1, x0, #0x1
  43ea1c:	str	x1, [x19, #256]
  43ea20:	strb	w23, [x19, x0]
  43ea24:	strb	w23, [x19, #264]
  43ea28:	add	x21, x21, #0x1
  43ea2c:	cmp	x24, x21
  43ea30:	b.eq	43ea70 <nftw@plt+0x3bef0>  // b.none
  43ea34:	ldrb	w23, [x21]
  43ea38:	ldr	x0, [x19, #256]
  43ea3c:	cmp	x0, #0xff
  43ea40:	b.ne	43ea14 <nftw@plt+0x3be94>  // b.any
  43ea44:	strb	wzr, [x19, #255]
  43ea48:	ldr	x3, [x19, #272]
  43ea4c:	ldr	x2, [x19, #280]
  43ea50:	mov	x1, x25
  43ea54:	mov	x0, x19
  43ea58:	blr	x3
  43ea5c:	str	xzr, [x19, #256]
  43ea60:	ldr	x0, [x19, #320]
  43ea64:	add	x0, x0, #0x1
  43ea68:	str	x0, [x19, #320]
  43ea6c:	b	43ea14 <nftw@plt+0x3be94>
  43ea70:	ldr	x2, [x22, #8]
  43ea74:	mov	w1, w20
  43ea78:	mov	x0, x19
  43ea7c:	bl	441f24 <nftw@plt+0x3f3a4>
  43ea80:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43ea84:	add	x21, x21, #0xf78
  43ea88:	add	x24, x21, #0x4
  43ea8c:	mov	x25, #0xff                  	// #255
  43ea90:	b	43eab4 <nftw@plt+0x3bf34>
  43ea94:	ldr	x0, [x19, #256]
  43ea98:	add	x1, x0, #0x1
  43ea9c:	str	x1, [x19, #256]
  43eaa0:	strb	w23, [x19, x0]
  43eaa4:	strb	w23, [x19, #264]
  43eaa8:	add	x21, x21, #0x1
  43eaac:	cmp	x21, x24
  43eab0:	b.eq	43eaf0 <nftw@plt+0x3bf70>  // b.none
  43eab4:	ldrb	w23, [x21]
  43eab8:	ldr	x0, [x19, #256]
  43eabc:	cmp	x0, #0xff
  43eac0:	b.ne	43ea94 <nftw@plt+0x3bf14>  // b.any
  43eac4:	strb	wzr, [x19, #255]
  43eac8:	ldr	x3, [x19, #272]
  43eacc:	ldr	x2, [x19, #280]
  43ead0:	mov	x1, x25
  43ead4:	mov	x0, x19
  43ead8:	blr	x3
  43eadc:	str	xzr, [x19, #256]
  43eae0:	ldr	x0, [x19, #320]
  43eae4:	add	x0, x0, #0x1
  43eae8:	str	x0, [x19, #320]
  43eaec:	b	43ea94 <nftw@plt+0x3bf14>
  43eaf0:	ldr	x2, [x22, #16]
  43eaf4:	mov	w1, w20
  43eaf8:	mov	x0, x19
  43eafc:	bl	441f24 <nftw@plt+0x3f3a4>
  43eb00:	ldp	x21, x22, [sp, #32]
  43eb04:	ldp	x23, x24, [sp, #48]
  43eb08:	ldp	x25, x26, [sp, #64]
  43eb0c:	b	441de4 <nftw@plt+0x3f264>
  43eb10:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43eb14:	add	x21, x21, #0xf80
  43eb18:	add	x24, x21, #0xd
  43eb1c:	mov	x25, #0xff                  	// #255
  43eb20:	b	43eb44 <nftw@plt+0x3bfc4>
  43eb24:	ldr	x0, [x19, #256]
  43eb28:	add	x1, x0, #0x1
  43eb2c:	str	x1, [x19, #256]
  43eb30:	strb	w23, [x19, x0]
  43eb34:	strb	w23, [x19, #264]
  43eb38:	add	x21, x21, #0x1
  43eb3c:	cmp	x21, x24
  43eb40:	b.eq	43eb80 <nftw@plt+0x3c000>  // b.none
  43eb44:	ldrb	w23, [x21]
  43eb48:	ldr	x0, [x19, #256]
  43eb4c:	cmp	x0, #0xff
  43eb50:	b.ne	43eb24 <nftw@plt+0x3bfa4>  // b.any
  43eb54:	strb	wzr, [x19, #255]
  43eb58:	ldr	x3, [x19, #272]
  43eb5c:	ldr	x2, [x19, #280]
  43eb60:	mov	x1, x25
  43eb64:	mov	x0, x19
  43eb68:	blr	x3
  43eb6c:	str	xzr, [x19, #256]
  43eb70:	ldr	x0, [x19, #320]
  43eb74:	add	x0, x0, #0x1
  43eb78:	str	x0, [x19, #320]
  43eb7c:	b	43eb24 <nftw@plt+0x3bfa4>
  43eb80:	ldr	x2, [x22, #8]
  43eb84:	mov	w1, w20
  43eb88:	mov	x0, x19
  43eb8c:	bl	441f24 <nftw@plt+0x3f3a4>
  43eb90:	ldp	x21, x22, [sp, #32]
  43eb94:	ldp	x23, x24, [sp, #48]
  43eb98:	ldp	x25, x26, [sp, #64]
  43eb9c:	b	441de4 <nftw@plt+0x3f264>
  43eba0:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43eba4:	add	x21, x21, #0xf90
  43eba8:	add	x24, x21, #0x12
  43ebac:	mov	x25, #0xff                  	// #255
  43ebb0:	b	43ebd4 <nftw@plt+0x3c054>
  43ebb4:	ldr	x0, [x19, #256]
  43ebb8:	add	x1, x0, #0x1
  43ebbc:	str	x1, [x19, #256]
  43ebc0:	strb	w23, [x19, x0]
  43ebc4:	strb	w23, [x19, #264]
  43ebc8:	add	x21, x21, #0x1
  43ebcc:	cmp	x24, x21
  43ebd0:	b.eq	43ec10 <nftw@plt+0x3c090>  // b.none
  43ebd4:	ldrb	w23, [x21]
  43ebd8:	ldr	x0, [x19, #256]
  43ebdc:	cmp	x0, #0xff
  43ebe0:	b.ne	43ebb4 <nftw@plt+0x3c034>  // b.any
  43ebe4:	strb	wzr, [x19, #255]
  43ebe8:	ldr	x3, [x19, #272]
  43ebec:	ldr	x2, [x19, #280]
  43ebf0:	mov	x1, x25
  43ebf4:	mov	x0, x19
  43ebf8:	blr	x3
  43ebfc:	str	xzr, [x19, #256]
  43ec00:	ldr	x0, [x19, #320]
  43ec04:	add	x0, x0, #0x1
  43ec08:	str	x0, [x19, #320]
  43ec0c:	b	43ebb4 <nftw@plt+0x3c034>
  43ec10:	ldr	x2, [x22, #8]
  43ec14:	mov	w1, w20
  43ec18:	mov	x0, x19
  43ec1c:	bl	441f24 <nftw@plt+0x3f3a4>
  43ec20:	ldp	x21, x22, [sp, #32]
  43ec24:	ldp	x23, x24, [sp, #48]
  43ec28:	ldp	x25, x26, [sp, #64]
  43ec2c:	b	441de4 <nftw@plt+0x3f264>
  43ec30:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43ec34:	add	x21, x21, #0xfa8
  43ec38:	add	x24, x21, #0x10
  43ec3c:	mov	x25, #0xff                  	// #255
  43ec40:	b	43ec64 <nftw@plt+0x3c0e4>
  43ec44:	ldr	x0, [x19, #256]
  43ec48:	add	x1, x0, #0x1
  43ec4c:	str	x1, [x19, #256]
  43ec50:	strb	w23, [x19, x0]
  43ec54:	strb	w23, [x19, #264]
  43ec58:	add	x21, x21, #0x1
  43ec5c:	cmp	x21, x24
  43ec60:	b.eq	43eca0 <nftw@plt+0x3c120>  // b.none
  43ec64:	ldrb	w23, [x21]
  43ec68:	ldr	x0, [x19, #256]
  43ec6c:	cmp	x0, #0xff
  43ec70:	b.ne	43ec44 <nftw@plt+0x3c0c4>  // b.any
  43ec74:	strb	wzr, [x19, #255]
  43ec78:	ldr	x3, [x19, #272]
  43ec7c:	ldr	x2, [x19, #280]
  43ec80:	mov	x1, x25
  43ec84:	mov	x0, x19
  43ec88:	blr	x3
  43ec8c:	str	xzr, [x19, #256]
  43ec90:	ldr	x0, [x19, #320]
  43ec94:	add	x0, x0, #0x1
  43ec98:	str	x0, [x19, #320]
  43ec9c:	b	43ec44 <nftw@plt+0x3c0c4>
  43eca0:	ldr	x2, [x22, #8]
  43eca4:	mov	w1, w20
  43eca8:	mov	x0, x19
  43ecac:	bl	441f24 <nftw@plt+0x3f3a4>
  43ecb0:	ldp	x21, x22, [sp, #32]
  43ecb4:	ldp	x23, x24, [sp, #48]
  43ecb8:	ldp	x25, x26, [sp, #64]
  43ecbc:	b	441de4 <nftw@plt+0x3f264>
  43ecc0:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43ecc4:	add	x21, x21, #0xfc0
  43ecc8:	add	x24, x21, #0x15
  43eccc:	mov	x25, #0xff                  	// #255
  43ecd0:	b	43ecf4 <nftw@plt+0x3c174>
  43ecd4:	ldr	x0, [x19, #256]
  43ecd8:	add	x1, x0, #0x1
  43ecdc:	str	x1, [x19, #256]
  43ece0:	strb	w23, [x19, x0]
  43ece4:	strb	w23, [x19, #264]
  43ece8:	add	x21, x21, #0x1
  43ecec:	cmp	x24, x21
  43ecf0:	b.eq	43ed30 <nftw@plt+0x3c1b0>  // b.none
  43ecf4:	ldrb	w23, [x21]
  43ecf8:	ldr	x0, [x19, #256]
  43ecfc:	cmp	x0, #0xff
  43ed00:	b.ne	43ecd4 <nftw@plt+0x3c154>  // b.any
  43ed04:	strb	wzr, [x19, #255]
  43ed08:	ldr	x3, [x19, #272]
  43ed0c:	ldr	x2, [x19, #280]
  43ed10:	mov	x1, x25
  43ed14:	mov	x0, x19
  43ed18:	blr	x3
  43ed1c:	str	xzr, [x19, #256]
  43ed20:	ldr	x0, [x19, #320]
  43ed24:	add	x0, x0, #0x1
  43ed28:	str	x0, [x19, #320]
  43ed2c:	b	43ecd4 <nftw@plt+0x3c154>
  43ed30:	ldr	x2, [x22, #8]
  43ed34:	mov	w1, w20
  43ed38:	mov	x0, x19
  43ed3c:	bl	441f24 <nftw@plt+0x3f3a4>
  43ed40:	ldp	x21, x22, [sp, #32]
  43ed44:	ldp	x23, x24, [sp, #48]
  43ed48:	ldp	x25, x26, [sp, #64]
  43ed4c:	b	441de4 <nftw@plt+0x3f264>
  43ed50:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43ed54:	add	x21, x21, #0xfd8
  43ed58:	add	x24, x21, #0x11
  43ed5c:	mov	x25, #0xff                  	// #255
  43ed60:	b	43ed84 <nftw@plt+0x3c204>
  43ed64:	ldr	x0, [x19, #256]
  43ed68:	add	x1, x0, #0x1
  43ed6c:	str	x1, [x19, #256]
  43ed70:	strb	w23, [x19, x0]
  43ed74:	strb	w23, [x19, #264]
  43ed78:	add	x21, x21, #0x1
  43ed7c:	cmp	x24, x21
  43ed80:	b.eq	43edc0 <nftw@plt+0x3c240>  // b.none
  43ed84:	ldrb	w23, [x21]
  43ed88:	ldr	x0, [x19, #256]
  43ed8c:	cmp	x0, #0xff
  43ed90:	b.ne	43ed64 <nftw@plt+0x3c1e4>  // b.any
  43ed94:	strb	wzr, [x19, #255]
  43ed98:	ldr	x3, [x19, #272]
  43ed9c:	ldr	x2, [x19, #280]
  43eda0:	mov	x1, x25
  43eda4:	mov	x0, x19
  43eda8:	blr	x3
  43edac:	str	xzr, [x19, #256]
  43edb0:	ldr	x0, [x19, #320]
  43edb4:	add	x0, x0, #0x1
  43edb8:	str	x0, [x19, #320]
  43edbc:	b	43ed64 <nftw@plt+0x3c1e4>
  43edc0:	ldr	x2, [x22, #8]
  43edc4:	mov	w1, w20
  43edc8:	mov	x0, x19
  43edcc:	bl	441f24 <nftw@plt+0x3f3a4>
  43edd0:	ldp	x21, x22, [sp, #32]
  43edd4:	ldp	x23, x24, [sp, #48]
  43edd8:	ldp	x25, x26, [sp, #64]
  43eddc:	b	441de4 <nftw@plt+0x3f264>
  43ede0:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43ede4:	add	x21, x21, #0xff0
  43ede8:	add	x24, x21, #0x1a
  43edec:	mov	x25, #0xff                  	// #255
  43edf0:	b	43ee14 <nftw@plt+0x3c294>
  43edf4:	ldr	x0, [x19, #256]
  43edf8:	add	x1, x0, #0x1
  43edfc:	str	x1, [x19, #256]
  43ee00:	strb	w23, [x19, x0]
  43ee04:	strb	w23, [x19, #264]
  43ee08:	add	x21, x21, #0x1
  43ee0c:	cmp	x24, x21
  43ee10:	b.eq	43ee50 <nftw@plt+0x3c2d0>  // b.none
  43ee14:	ldrb	w23, [x21]
  43ee18:	ldr	x0, [x19, #256]
  43ee1c:	cmp	x0, #0xff
  43ee20:	b.ne	43edf4 <nftw@plt+0x3c274>  // b.any
  43ee24:	strb	wzr, [x19, #255]
  43ee28:	ldr	x3, [x19, #272]
  43ee2c:	ldr	x2, [x19, #280]
  43ee30:	mov	x1, x25
  43ee34:	mov	x0, x19
  43ee38:	blr	x3
  43ee3c:	str	xzr, [x19, #256]
  43ee40:	ldr	x0, [x19, #320]
  43ee44:	add	x0, x0, #0x1
  43ee48:	str	x0, [x19, #320]
  43ee4c:	b	43edf4 <nftw@plt+0x3c274>
  43ee50:	ldr	x2, [x22, #8]
  43ee54:	mov	w1, w20
  43ee58:	mov	x0, x19
  43ee5c:	bl	441f24 <nftw@plt+0x3f3a4>
  43ee60:	ldp	x21, x22, [sp, #32]
  43ee64:	ldp	x23, x24, [sp, #48]
  43ee68:	ldp	x25, x26, [sp, #64]
  43ee6c:	b	441de4 <nftw@plt+0x3f264>
  43ee70:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43ee74:	add	x21, x21, #0x10
  43ee78:	add	x24, x21, #0xf
  43ee7c:	mov	x25, #0xff                  	// #255
  43ee80:	b	43eea4 <nftw@plt+0x3c324>
  43ee84:	ldr	x0, [x19, #256]
  43ee88:	add	x1, x0, #0x1
  43ee8c:	str	x1, [x19, #256]
  43ee90:	strb	w23, [x19, x0]
  43ee94:	strb	w23, [x19, #264]
  43ee98:	add	x21, x21, #0x1
  43ee9c:	cmp	x24, x21
  43eea0:	b.eq	43eee0 <nftw@plt+0x3c360>  // b.none
  43eea4:	ldrb	w23, [x21]
  43eea8:	ldr	x0, [x19, #256]
  43eeac:	cmp	x0, #0xff
  43eeb0:	b.ne	43ee84 <nftw@plt+0x3c304>  // b.any
  43eeb4:	strb	wzr, [x19, #255]
  43eeb8:	ldr	x3, [x19, #272]
  43eebc:	ldr	x2, [x19, #280]
  43eec0:	mov	x1, x25
  43eec4:	mov	x0, x19
  43eec8:	blr	x3
  43eecc:	str	xzr, [x19, #256]
  43eed0:	ldr	x0, [x19, #320]
  43eed4:	add	x0, x0, #0x1
  43eed8:	str	x0, [x19, #320]
  43eedc:	b	43ee84 <nftw@plt+0x3c304>
  43eee0:	ldr	x2, [x22, #8]
  43eee4:	mov	w1, w20
  43eee8:	mov	x0, x19
  43eeec:	bl	441f24 <nftw@plt+0x3f3a4>
  43eef0:	ldp	x21, x22, [sp, #32]
  43eef4:	ldp	x23, x24, [sp, #48]
  43eef8:	ldp	x25, x26, [sp, #64]
  43eefc:	b	441de4 <nftw@plt+0x3f264>
  43ef00:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43ef04:	add	x21, x21, #0x20
  43ef08:	add	x24, x21, #0x13
  43ef0c:	mov	x25, #0xff                  	// #255
  43ef10:	b	43ef34 <nftw@plt+0x3c3b4>
  43ef14:	ldr	x0, [x19, #256]
  43ef18:	add	x1, x0, #0x1
  43ef1c:	str	x1, [x19, #256]
  43ef20:	strb	w23, [x19, x0]
  43ef24:	strb	w23, [x19, #264]
  43ef28:	add	x21, x21, #0x1
  43ef2c:	cmp	x24, x21
  43ef30:	b.eq	43ef70 <nftw@plt+0x3c3f0>  // b.none
  43ef34:	ldrb	w23, [x21]
  43ef38:	ldr	x0, [x19, #256]
  43ef3c:	cmp	x0, #0xff
  43ef40:	b.ne	43ef14 <nftw@plt+0x3c394>  // b.any
  43ef44:	strb	wzr, [x19, #255]
  43ef48:	ldr	x3, [x19, #272]
  43ef4c:	ldr	x2, [x19, #280]
  43ef50:	mov	x1, x25
  43ef54:	mov	x0, x19
  43ef58:	blr	x3
  43ef5c:	str	xzr, [x19, #256]
  43ef60:	ldr	x0, [x19, #320]
  43ef64:	add	x0, x0, #0x1
  43ef68:	str	x0, [x19, #320]
  43ef6c:	b	43ef14 <nftw@plt+0x3c394>
  43ef70:	ldr	x2, [x22, #8]
  43ef74:	mov	w1, w20
  43ef78:	mov	x0, x19
  43ef7c:	bl	441f24 <nftw@plt+0x3f3a4>
  43ef80:	ldp	x21, x22, [sp, #32]
  43ef84:	ldp	x23, x24, [sp, #48]
  43ef88:	ldp	x25, x26, [sp, #64]
  43ef8c:	b	441de4 <nftw@plt+0x3f264>
  43ef90:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43ef94:	add	x21, x21, #0x38
  43ef98:	add	x24, x21, #0x16
  43ef9c:	mov	x25, #0xff                  	// #255
  43efa0:	b	43efc4 <nftw@plt+0x3c444>
  43efa4:	ldr	x0, [x19, #256]
  43efa8:	add	x1, x0, #0x1
  43efac:	str	x1, [x19, #256]
  43efb0:	strb	w23, [x19, x0]
  43efb4:	strb	w23, [x19, #264]
  43efb8:	add	x21, x21, #0x1
  43efbc:	cmp	x24, x21
  43efc0:	b.eq	43f000 <nftw@plt+0x3c480>  // b.none
  43efc4:	ldrb	w23, [x21]
  43efc8:	ldr	x0, [x19, #256]
  43efcc:	cmp	x0, #0xff
  43efd0:	b.ne	43efa4 <nftw@plt+0x3c424>  // b.any
  43efd4:	strb	wzr, [x19, #255]
  43efd8:	ldr	x3, [x19, #272]
  43efdc:	ldr	x2, [x19, #280]
  43efe0:	mov	x1, x25
  43efe4:	mov	x0, x19
  43efe8:	blr	x3
  43efec:	str	xzr, [x19, #256]
  43eff0:	ldr	x0, [x19, #320]
  43eff4:	add	x0, x0, #0x1
  43eff8:	str	x0, [x19, #320]
  43effc:	b	43efa4 <nftw@plt+0x3c424>
  43f000:	ldr	x2, [x22, #8]
  43f004:	mov	w1, w20
  43f008:	mov	x0, x19
  43f00c:	bl	441f24 <nftw@plt+0x3f3a4>
  43f010:	ldp	x21, x22, [sp, #32]
  43f014:	ldp	x23, x24, [sp, #48]
  43f018:	ldp	x25, x26, [sp, #64]
  43f01c:	b	441de4 <nftw@plt+0x3f264>
  43f020:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43f024:	add	x21, x21, #0x50
  43f028:	add	x24, x21, #0x19
  43f02c:	mov	x25, #0xff                  	// #255
  43f030:	b	43f054 <nftw@plt+0x3c4d4>
  43f034:	ldr	x0, [x19, #256]
  43f038:	add	x1, x0, #0x1
  43f03c:	str	x1, [x19, #256]
  43f040:	strb	w23, [x19, x0]
  43f044:	strb	w23, [x19, #264]
  43f048:	add	x21, x21, #0x1
  43f04c:	cmp	x21, x24
  43f050:	b.eq	43f090 <nftw@plt+0x3c510>  // b.none
  43f054:	ldrb	w23, [x21]
  43f058:	ldr	x0, [x19, #256]
  43f05c:	cmp	x0, #0xff
  43f060:	b.ne	43f034 <nftw@plt+0x3c4b4>  // b.any
  43f064:	strb	wzr, [x19, #255]
  43f068:	ldr	x3, [x19, #272]
  43f06c:	ldr	x2, [x19, #280]
  43f070:	mov	x1, x25
  43f074:	mov	x0, x19
  43f078:	blr	x3
  43f07c:	str	xzr, [x19, #256]
  43f080:	ldr	x0, [x19, #320]
  43f084:	add	x0, x0, #0x1
  43f088:	str	x0, [x19, #320]
  43f08c:	b	43f034 <nftw@plt+0x3c4b4>
  43f090:	ldr	x2, [x22, #8]
  43f094:	mov	w1, w20
  43f098:	mov	x0, x19
  43f09c:	bl	441f24 <nftw@plt+0x3f3a4>
  43f0a0:	ldp	x21, x22, [sp, #32]
  43f0a4:	ldp	x23, x24, [sp, #48]
  43f0a8:	ldp	x25, x26, [sp, #64]
  43f0ac:	b	441de4 <nftw@plt+0x3f264>
  43f0b0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43f0b4:	add	x21, x21, #0x70
  43f0b8:	add	x24, x21, #0x15
  43f0bc:	mov	x25, #0xff                  	// #255
  43f0c0:	b	43f0e4 <nftw@plt+0x3c564>
  43f0c4:	ldr	x0, [x19, #256]
  43f0c8:	add	x1, x0, #0x1
  43f0cc:	str	x1, [x19, #256]
  43f0d0:	strb	w23, [x19, x0]
  43f0d4:	strb	w23, [x19, #264]
  43f0d8:	add	x21, x21, #0x1
  43f0dc:	cmp	x24, x21
  43f0e0:	b.eq	43f120 <nftw@plt+0x3c5a0>  // b.none
  43f0e4:	ldrb	w23, [x21]
  43f0e8:	ldr	x0, [x19, #256]
  43f0ec:	cmp	x0, #0xff
  43f0f0:	b.ne	43f0c4 <nftw@plt+0x3c544>  // b.any
  43f0f4:	strb	wzr, [x19, #255]
  43f0f8:	ldr	x3, [x19, #272]
  43f0fc:	ldr	x2, [x19, #280]
  43f100:	mov	x1, x25
  43f104:	mov	x0, x19
  43f108:	blr	x3
  43f10c:	str	xzr, [x19, #256]
  43f110:	ldr	x0, [x19, #320]
  43f114:	add	x0, x0, #0x1
  43f118:	str	x0, [x19, #320]
  43f11c:	b	43f0c4 <nftw@plt+0x3c544>
  43f120:	ldr	x2, [x22, #16]
  43f124:	mov	w1, w20
  43f128:	mov	x0, x19
  43f12c:	bl	441f24 <nftw@plt+0x3f3a4>
  43f130:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43f134:	add	x21, x21, #0xf88
  43f138:	add	x24, x21, #0x5
  43f13c:	mov	x25, #0xff                  	// #255
  43f140:	b	43f164 <nftw@plt+0x3c5e4>
  43f144:	ldr	x0, [x19, #256]
  43f148:	add	x1, x0, #0x1
  43f14c:	str	x1, [x19, #256]
  43f150:	strb	w23, [x19, x0]
  43f154:	strb	w23, [x19, #264]
  43f158:	add	x21, x21, #0x1
  43f15c:	cmp	x24, x21
  43f160:	b.eq	43f1a0 <nftw@plt+0x3c620>  // b.none
  43f164:	ldrb	w23, [x21]
  43f168:	ldr	x0, [x19, #256]
  43f16c:	cmp	x0, #0xff
  43f170:	b.ne	43f144 <nftw@plt+0x3c5c4>  // b.any
  43f174:	strb	wzr, [x19, #255]
  43f178:	ldr	x3, [x19, #272]
  43f17c:	ldr	x2, [x19, #280]
  43f180:	mov	x1, x25
  43f184:	mov	x0, x19
  43f188:	blr	x3
  43f18c:	str	xzr, [x19, #256]
  43f190:	ldr	x0, [x19, #320]
  43f194:	add	x0, x0, #0x1
  43f198:	str	x0, [x19, #320]
  43f19c:	b	43f144 <nftw@plt+0x3c5c4>
  43f1a0:	ldr	x2, [x22, #8]
  43f1a4:	mov	w1, w20
  43f1a8:	mov	x0, x19
  43f1ac:	bl	441f24 <nftw@plt+0x3f3a4>
  43f1b0:	ldp	x21, x22, [sp, #32]
  43f1b4:	ldp	x23, x24, [sp, #48]
  43f1b8:	ldp	x25, x26, [sp, #64]
  43f1bc:	b	441de4 <nftw@plt+0x3f264>
  43f1c0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43f1c4:	add	x21, x21, #0x88
  43f1c8:	add	x24, x21, #0x11
  43f1cc:	mov	x25, #0xff                  	// #255
  43f1d0:	b	43f1f4 <nftw@plt+0x3c674>
  43f1d4:	ldr	x0, [x19, #256]
  43f1d8:	add	x1, x0, #0x1
  43f1dc:	str	x1, [x19, #256]
  43f1e0:	strb	w23, [x19, x0]
  43f1e4:	strb	w23, [x19, #264]
  43f1e8:	add	x21, x21, #0x1
  43f1ec:	cmp	x21, x24
  43f1f0:	b.eq	43f230 <nftw@plt+0x3c6b0>  // b.none
  43f1f4:	ldrb	w23, [x21]
  43f1f8:	ldr	x0, [x19, #256]
  43f1fc:	cmp	x0, #0xff
  43f200:	b.ne	43f1d4 <nftw@plt+0x3c654>  // b.any
  43f204:	strb	wzr, [x19, #255]
  43f208:	ldr	x3, [x19, #272]
  43f20c:	ldr	x2, [x19, #280]
  43f210:	mov	x1, x25
  43f214:	mov	x0, x19
  43f218:	blr	x3
  43f21c:	str	xzr, [x19, #256]
  43f220:	ldr	x0, [x19, #320]
  43f224:	add	x0, x0, #0x1
  43f228:	str	x0, [x19, #320]
  43f22c:	b	43f1d4 <nftw@plt+0x3c654>
  43f230:	ldr	x2, [x22, #8]
  43f234:	mov	w1, w20
  43f238:	mov	x0, x19
  43f23c:	bl	441f24 <nftw@plt+0x3f3a4>
  43f240:	ldp	x21, x22, [sp, #32]
  43f244:	ldp	x23, x24, [sp, #48]
  43f248:	ldp	x25, x26, [sp, #64]
  43f24c:	b	441de4 <nftw@plt+0x3f264>
  43f250:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43f254:	add	x21, x21, #0xa0
  43f258:	add	x24, x21, #0x16
  43f25c:	mov	x25, #0xff                  	// #255
  43f260:	b	43f284 <nftw@plt+0x3c704>
  43f264:	ldr	x0, [x19, #256]
  43f268:	add	x1, x0, #0x1
  43f26c:	str	x1, [x19, #256]
  43f270:	strb	w23, [x19, x0]
  43f274:	strb	w23, [x19, #264]
  43f278:	add	x21, x21, #0x1
  43f27c:	cmp	x21, x24
  43f280:	b.eq	43f2c0 <nftw@plt+0x3c740>  // b.none
  43f284:	ldrb	w23, [x21]
  43f288:	ldr	x0, [x19, #256]
  43f28c:	cmp	x0, #0xff
  43f290:	b.ne	43f264 <nftw@plt+0x3c6e4>  // b.any
  43f294:	strb	wzr, [x19, #255]
  43f298:	ldr	x3, [x19, #272]
  43f29c:	ldr	x2, [x19, #280]
  43f2a0:	mov	x1, x25
  43f2a4:	mov	x0, x19
  43f2a8:	blr	x3
  43f2ac:	str	xzr, [x19, #256]
  43f2b0:	ldr	x0, [x19, #320]
  43f2b4:	add	x0, x0, #0x1
  43f2b8:	str	x0, [x19, #320]
  43f2bc:	b	43f264 <nftw@plt+0x3c6e4>
  43f2c0:	ldr	x2, [x22, #8]
  43f2c4:	mov	w1, w20
  43f2c8:	mov	x0, x19
  43f2cc:	bl	441f24 <nftw@plt+0x3f3a4>
  43f2d0:	ldp	x21, x22, [sp, #32]
  43f2d4:	ldp	x23, x24, [sp, #48]
  43f2d8:	ldp	x25, x26, [sp, #64]
  43f2dc:	b	441de4 <nftw@plt+0x3f264>
  43f2e0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43f2e4:	add	x21, x21, #0xb8
  43f2e8:	add	x24, x21, #0x1a
  43f2ec:	mov	x25, #0xff                  	// #255
  43f2f0:	b	43f314 <nftw@plt+0x3c794>
  43f2f4:	ldr	x0, [x19, #256]
  43f2f8:	add	x1, x0, #0x1
  43f2fc:	str	x1, [x19, #256]
  43f300:	strb	w23, [x19, x0]
  43f304:	strb	w23, [x19, #264]
  43f308:	add	x21, x21, #0x1
  43f30c:	cmp	x21, x24
  43f310:	b.eq	43f350 <nftw@plt+0x3c7d0>  // b.none
  43f314:	ldrb	w23, [x21]
  43f318:	ldr	x0, [x19, #256]
  43f31c:	cmp	x0, #0xff
  43f320:	b.ne	43f2f4 <nftw@plt+0x3c774>  // b.any
  43f324:	strb	wzr, [x19, #255]
  43f328:	ldr	x3, [x19, #272]
  43f32c:	ldr	x2, [x19, #280]
  43f330:	mov	x1, x25
  43f334:	mov	x0, x19
  43f338:	blr	x3
  43f33c:	str	xzr, [x19, #256]
  43f340:	ldr	x0, [x19, #320]
  43f344:	add	x0, x0, #0x1
  43f348:	str	x0, [x19, #320]
  43f34c:	b	43f2f4 <nftw@plt+0x3c774>
  43f350:	ldr	x2, [x22, #8]
  43f354:	mov	w1, w20
  43f358:	mov	x0, x19
  43f35c:	bl	441f24 <nftw@plt+0x3f3a4>
  43f360:	ldp	x21, x22, [sp, #32]
  43f364:	ldp	x23, x24, [sp, #48]
  43f368:	ldp	x25, x26, [sp, #64]
  43f36c:	b	441de4 <nftw@plt+0x3f264>
  43f370:	ldr	x1, [x22, #8]
  43f374:	ldrsw	x0, [x22, #16]
  43f378:	cbz	x0, 441e20 <nftw@plt+0x3f2a0>
  43f37c:	mov	x20, x1
  43f380:	add	x22, x1, x0
  43f384:	mov	x23, #0xff                  	// #255
  43f388:	b	43f3ac <nftw@plt+0x3c82c>
  43f38c:	ldr	x0, [x19, #256]
  43f390:	add	x1, x0, #0x1
  43f394:	str	x1, [x19, #256]
  43f398:	strb	w21, [x19, x0]
  43f39c:	strb	w21, [x19, #264]
  43f3a0:	add	x20, x20, #0x1
  43f3a4:	cmp	x20, x22
  43f3a8:	b.eq	43f3e8 <nftw@plt+0x3c868>  // b.none
  43f3ac:	ldrb	w21, [x20]
  43f3b0:	ldr	x0, [x19, #256]
  43f3b4:	cmp	x0, #0xff
  43f3b8:	b.ne	43f38c <nftw@plt+0x3c80c>  // b.any
  43f3bc:	strb	wzr, [x19, #255]
  43f3c0:	ldr	x3, [x19, #272]
  43f3c4:	ldr	x2, [x19, #280]
  43f3c8:	mov	x1, x23
  43f3cc:	mov	x0, x19
  43f3d0:	blr	x3
  43f3d4:	str	xzr, [x19, #256]
  43f3d8:	ldr	x0, [x19, #320]
  43f3dc:	add	x0, x0, #0x1
  43f3e0:	str	x0, [x19, #320]
  43f3e4:	b	43f38c <nftw@plt+0x3c80c>
  43f3e8:	ldp	x21, x22, [sp, #32]
  43f3ec:	ldp	x23, x24, [sp, #48]
  43f3f0:	ldp	x25, x26, [sp, #64]
  43f3f4:	b	441de4 <nftw@plt+0x3f264>
  43f3f8:	ldr	x1, [x19, #296]
  43f3fc:	cbnz	x1, 43f40c <nftw@plt+0x3c88c>
  43f400:	b	441d60 <nftw@plt+0x3f1e0>
  43f404:	ldr	x1, [x1]
  43f408:	cbz	x1, 441d60 <nftw@plt+0x3f1e0>
  43f40c:	ldr	w2, [x1, #16]
  43f410:	cbnz	w2, 43f404 <nftw@plt+0x3c884>
  43f414:	ldr	x3, [x1, #8]
  43f418:	ldr	w3, [x3]
  43f41c:	sub	w4, w3, #0x19
  43f420:	cmp	w4, #0x2
  43f424:	b.hi	441d54 <nftw@plt+0x3f1d4>  // b.pmore
  43f428:	cmp	w0, w3
  43f42c:	b.ne	43f404 <nftw@plt+0x3c884>  // b.any
  43f430:	ldr	x2, [x22, #8]
  43f434:	mov	w1, w20
  43f438:	mov	x0, x19
  43f43c:	bl	441f24 <nftw@plt+0x3f3a4>
  43f440:	ldp	x21, x22, [sp, #32]
  43f444:	ldp	x23, x24, [sp, #48]
  43f448:	ldp	x25, x26, [sp, #64]
  43f44c:	b	441de4 <nftw@plt+0x3f264>
  43f450:	ldr	x0, [x22, #8]
  43f454:	ldr	w24, [x19, #312]
  43f458:	cbnz	w24, 43f46c <nftw@plt+0x3c8ec>
  43f45c:	ldr	w1, [x0]
  43f460:	mov	w21, w24
  43f464:	cmp	w1, #0x5
  43f468:	b.eq	43f494 <nftw@plt+0x3c914>  // b.none
  43f46c:	ldr	w1, [x0]
  43f470:	cmp	w1, #0x23
  43f474:	b.eq	441d5c <nftw@plt+0x3f1dc>  // b.none
  43f478:	ldr	w2, [x22]
  43f47c:	cmp	w1, w2
  43f480:	b.eq	441d88 <nftw@plt+0x3f208>  // b.none
  43f484:	cmp	w1, #0x24
  43f488:	b.ne	441d60 <nftw@plt+0x3f1e0>  // b.any
  43f48c:	ldr	x2, [x0, #8]
  43f490:	b	43f5d0 <nftw@plt+0x3ca50>
  43f494:	ldr	w5, [x19, #344]
  43f498:	cmp	w5, #0x0
  43f49c:	b.le	43f4cc <nftw@plt+0x3c94c>
  43f4a0:	ldr	x1, [x19, #336]
  43f4a4:	sub	w3, w5, #0x1
  43f4a8:	add	x2, x1, #0x10
  43f4ac:	add	x3, x2, x3, lsl #4
  43f4b0:	mov	x4, x1
  43f4b4:	ldr	x2, [x1]
  43f4b8:	cmp	x0, x2
  43f4bc:	b.eq	441d90 <nftw@plt+0x3f210>  // b.none
  43f4c0:	add	x1, x1, #0x10
  43f4c4:	cmp	x1, x3
  43f4c8:	b.ne	43f4b0 <nftw@plt+0x3c930>  // b.any
  43f4cc:	ldr	w1, [x19, #348]
  43f4d0:	cmp	w1, w5
  43f4d4:	b.le	43f58c <nftw@plt+0x3ca0c>
  43f4d8:	sbfiz	x3, x5, #4, #32
  43f4dc:	ldr	x2, [x19, #336]
  43f4e0:	add	x1, x2, w5, sxtw #4
  43f4e4:	add	w5, w5, #0x1
  43f4e8:	str	w5, [x19, #344]
  43f4ec:	str	x0, [x2, x3]
  43f4f0:	add	x1, x1, #0x8
  43f4f4:	ldr	x2, [x19, #288]
  43f4f8:	cbz	x2, 43f534 <nftw@plt+0x3c9b4>
  43f4fc:	ldr	w4, [x19, #360]
  43f500:	ldr	w3, [x19, #364]
  43f504:	cmp	w4, w3
  43f508:	b.ge	43f5a4 <nftw@plt+0x3ca24>  // b.tcont
  43f50c:	ldr	x3, [x19, #352]
  43f510:	add	x3, x3, w4, sxtw #4
  43f514:	add	w4, w4, #0x1
  43f518:	str	w4, [x19, #360]
  43f51c:	ldr	x4, [x2, #8]
  43f520:	str	x4, [x3, #8]
  43f524:	str	x3, [x1]
  43f528:	mov	x1, x3
  43f52c:	ldr	x2, [x2]
  43f530:	cbnz	x2, 43f4fc <nftw@plt+0x3c97c>
  43f534:	str	xzr, [x1]
  43f538:	ldr	w1, [x19, #304]
  43f53c:	cbnz	w1, 43f5bc <nftw@plt+0x3ca3c>
  43f540:	mov	x1, x0
  43f544:	mov	x0, x19
  43f548:	bl	43da10 <nftw@plt+0x3ae90>
  43f54c:	cbz	x0, 43f574 <nftw@plt+0x3c9f4>
  43f550:	mov	w21, w24
  43f554:	ldr	w1, [x0]
  43f558:	cmp	w1, #0x2f
  43f55c:	b.ne	43f46c <nftw@plt+0x3c8ec>  // b.any
  43f560:	ldr	w1, [x19, #316]
  43f564:	bl	43d9d8 <nftw@plt+0x3ae58>
  43f568:	cbnz	x0, 43f46c <nftw@plt+0x3c8ec>
  43f56c:	cbz	w21, 43f574 <nftw@plt+0x3c9f4>
  43f570:	str	x23, [x19, #288]
  43f574:	mov	w0, #0x1                   	// #1
  43f578:	str	w0, [x19, #304]
  43f57c:	ldp	x21, x22, [sp, #32]
  43f580:	ldp	x23, x24, [sp, #48]
  43f584:	ldp	x25, x26, [sp, #64]
  43f588:	b	441de4 <nftw@plt+0x3f264>
  43f58c:	mov	w0, #0x1                   	// #1
  43f590:	str	w0, [x19, #304]
  43f594:	ldp	x21, x22, [sp, #32]
  43f598:	ldp	x23, x24, [sp, #48]
  43f59c:	ldp	x25, x26, [sp, #64]
  43f5a0:	b	441de4 <nftw@plt+0x3f264>
  43f5a4:	mov	w0, #0x1                   	// #1
  43f5a8:	str	w0, [x19, #304]
  43f5ac:	ldp	x21, x22, [sp, #32]
  43f5b0:	ldp	x23, x24, [sp, #48]
  43f5b4:	ldp	x25, x26, [sp, #64]
  43f5b8:	b	441de4 <nftw@plt+0x3f264>
  43f5bc:	ldp	x21, x22, [sp, #32]
  43f5c0:	ldp	x23, x24, [sp, #48]
  43f5c4:	ldp	x25, x26, [sp, #64]
  43f5c8:	b	441de4 <nftw@plt+0x3f264>
  43f5cc:	mov	x2, #0x0                   	// #0
  43f5d0:	ldr	x0, [x19, #296]
  43f5d4:	str	x0, [sp, #112]
  43f5d8:	add	x0, sp, #0x70
  43f5dc:	str	x0, [x19, #296]
  43f5e0:	str	x22, [sp, #120]
  43f5e4:	str	wzr, [sp, #128]
  43f5e8:	ldr	x0, [x19, #288]
  43f5ec:	str	x0, [sp, #136]
  43f5f0:	cbz	x2, 441d80 <nftw@plt+0x3f200>
  43f5f4:	mov	w1, w20
  43f5f8:	mov	x0, x19
  43f5fc:	bl	441f24 <nftw@plt+0x3f3a4>
  43f600:	ldr	w0, [sp, #128]
  43f604:	cbz	w0, 43f628 <nftw@plt+0x3caa8>
  43f608:	ldr	x0, [sp, #112]
  43f60c:	str	x0, [x19, #296]
  43f610:	cbz	w21, 441e30 <nftw@plt+0x3f2b0>
  43f614:	str	x23, [x19, #288]
  43f618:	ldp	x21, x22, [sp, #32]
  43f61c:	ldp	x23, x24, [sp, #48]
  43f620:	ldp	x25, x26, [sp, #64]
  43f624:	b	441de4 <nftw@plt+0x3f264>
  43f628:	mov	x2, x22
  43f62c:	mov	w1, w20
  43f630:	mov	x0, x19
  43f634:	bl	441fc0 <nftw@plt+0x3f440>
  43f638:	b	43f608 <nftw@plt+0x3ca88>
  43f63c:	tbnz	w20, #2, 43f6cc <nftw@plt+0x3cb4c>
  43f640:	ldr	x0, [x22, #8]
  43f644:	ldr	x22, [x0]
  43f648:	ldrsw	x0, [x0, #8]
  43f64c:	cbz	x0, 441e40 <nftw@plt+0x3f2c0>
  43f650:	mov	x20, x22
  43f654:	add	x22, x22, x0
  43f658:	mov	x23, #0xff                  	// #255
  43f65c:	b	43f680 <nftw@plt+0x3cb00>
  43f660:	ldr	x0, [x19, #256]
  43f664:	add	x1, x0, #0x1
  43f668:	str	x1, [x19, #256]
  43f66c:	strb	w21, [x19, x0]
  43f670:	strb	w21, [x19, #264]
  43f674:	add	x20, x20, #0x1
  43f678:	cmp	x20, x22
  43f67c:	b.eq	43f6bc <nftw@plt+0x3cb3c>  // b.none
  43f680:	ldrb	w21, [x20]
  43f684:	ldr	x0, [x19, #256]
  43f688:	cmp	x0, #0xff
  43f68c:	b.ne	43f660 <nftw@plt+0x3cae0>  // b.any
  43f690:	strb	wzr, [x19, #255]
  43f694:	ldr	x3, [x19, #272]
  43f698:	ldr	x2, [x19, #280]
  43f69c:	mov	x1, x23
  43f6a0:	mov	x0, x19
  43f6a4:	blr	x3
  43f6a8:	str	xzr, [x19, #256]
  43f6ac:	ldr	x0, [x19, #320]
  43f6b0:	add	x0, x0, #0x1
  43f6b4:	str	x0, [x19, #320]
  43f6b8:	b	43f660 <nftw@plt+0x3cae0>
  43f6bc:	ldp	x21, x22, [sp, #32]
  43f6c0:	ldp	x23, x24, [sp, #48]
  43f6c4:	ldp	x25, x26, [sp, #64]
  43f6c8:	b	441de4 <nftw@plt+0x3f264>
  43f6cc:	ldr	x0, [x22, #8]
  43f6d0:	ldr	x22, [x0, #16]
  43f6d4:	ldrsw	x0, [x0, #24]
  43f6d8:	cbz	x0, 441e50 <nftw@plt+0x3f2d0>
  43f6dc:	mov	x20, x22
  43f6e0:	add	x22, x22, x0
  43f6e4:	mov	x23, #0xff                  	// #255
  43f6e8:	b	43f70c <nftw@plt+0x3cb8c>
  43f6ec:	ldr	x0, [x19, #256]
  43f6f0:	add	x1, x0, #0x1
  43f6f4:	str	x1, [x19, #256]
  43f6f8:	strb	w21, [x19, x0]
  43f6fc:	strb	w21, [x19, #264]
  43f700:	add	x20, x20, #0x1
  43f704:	cmp	x20, x22
  43f708:	b.eq	43f748 <nftw@plt+0x3cbc8>  // b.none
  43f70c:	ldrb	w21, [x20]
  43f710:	ldr	x0, [x19, #256]
  43f714:	cmp	x0, #0xff
  43f718:	b.ne	43f6ec <nftw@plt+0x3cb6c>  // b.any
  43f71c:	strb	wzr, [x19, #255]
  43f720:	ldr	x3, [x19, #272]
  43f724:	ldr	x2, [x19, #280]
  43f728:	mov	x1, x23
  43f72c:	mov	x0, x19
  43f730:	blr	x3
  43f734:	str	xzr, [x19, #256]
  43f738:	ldr	x0, [x19, #320]
  43f73c:	add	x0, x0, #0x1
  43f740:	str	x0, [x19, #320]
  43f744:	b	43f6ec <nftw@plt+0x3cb6c>
  43f748:	ldp	x21, x22, [sp, #32]
  43f74c:	ldp	x23, x24, [sp, #48]
  43f750:	ldp	x25, x26, [sp, #64]
  43f754:	b	441de4 <nftw@plt+0x3f264>
  43f758:	ldr	x2, [x22, #8]
  43f75c:	mov	w1, w20
  43f760:	mov	x0, x19
  43f764:	bl	441f24 <nftw@plt+0x3f3a4>
  43f768:	ldp	x21, x22, [sp, #32]
  43f76c:	ldp	x23, x24, [sp, #48]
  43f770:	ldp	x25, x26, [sp, #64]
  43f774:	b	441de4 <nftw@plt+0x3f264>
  43f778:	and	w21, w20, #0x20
  43f77c:	tbnz	w20, #5, 43f7a0 <nftw@plt+0x3cc20>
  43f780:	ldr	x0, [x22, #8]
  43f784:	cbz	x0, 43f874 <nftw@plt+0x3ccf4>
  43f788:	tbz	w20, #6, 43f7dc <nftw@plt+0x3cc5c>
  43f78c:	cbz	w21, 43f874 <nftw@plt+0x3ccf4>
  43f790:	ldp	x21, x22, [sp, #32]
  43f794:	ldp	x23, x24, [sp, #48]
  43f798:	ldp	x25, x26, [sp, #64]
  43f79c:	b	441de4 <nftw@plt+0x3f264>
  43f7a0:	and	w23, w20, #0xffffff9f
  43f7a4:	ldr	x3, [x19, #296]
  43f7a8:	mov	x2, x22
  43f7ac:	mov	w1, w23
  43f7b0:	mov	x0, x19
  43f7b4:	bl	44298c <nftw@plt+0x3fe0c>
  43f7b8:	ldr	x2, [x22, #8]
  43f7bc:	cbz	x2, 43f78c <nftw@plt+0x3cc0c>
  43f7c0:	mov	w1, w23
  43f7c4:	mov	x0, x19
  43f7c8:	bl	441f24 <nftw@plt+0x3f3a4>
  43f7cc:	ldp	x21, x22, [sp, #32]
  43f7d0:	ldp	x23, x24, [sp, #48]
  43f7d4:	ldp	x25, x26, [sp, #64]
  43f7d8:	b	441de4 <nftw@plt+0x3f264>
  43f7dc:	ldr	x0, [x19, #296]
  43f7e0:	str	x0, [sp, #112]
  43f7e4:	add	x0, sp, #0x70
  43f7e8:	str	x0, [x19, #296]
  43f7ec:	str	x22, [sp, #120]
  43f7f0:	str	wzr, [sp, #128]
  43f7f4:	ldr	x0, [x19, #288]
  43f7f8:	str	x0, [sp, #136]
  43f7fc:	ldr	x2, [x22, #8]
  43f800:	and	w1, w20, #0xffffff9f
  43f804:	mov	x0, x19
  43f808:	bl	441f24 <nftw@plt+0x3f3a4>
  43f80c:	ldr	x0, [sp, #112]
  43f810:	str	x0, [x19, #296]
  43f814:	ldr	w0, [sp, #128]
  43f818:	cbnz	w0, 441e60 <nftw@plt+0x3f2e0>
  43f81c:	cbnz	w21, 43f78c <nftw@plt+0x3cc0c>
  43f820:	ldr	x0, [x19, #256]
  43f824:	cmp	x0, #0xff
  43f828:	b.eq	43f848 <nftw@plt+0x3ccc8>  // b.none
  43f82c:	ldr	x1, [x19, #256]
  43f830:	add	x0, x1, #0x1
  43f834:	str	x0, [x19, #256]
  43f838:	mov	w0, #0x20                  	// #32
  43f83c:	strb	w0, [x19, x1]
  43f840:	strb	w0, [x19, #264]
  43f844:	b	43f78c <nftw@plt+0x3cc0c>
  43f848:	strb	wzr, [x19, #255]
  43f84c:	ldr	x3, [x19, #272]
  43f850:	ldr	x2, [x19, #280]
  43f854:	mov	x1, #0xff                  	// #255
  43f858:	mov	x0, x19
  43f85c:	blr	x3
  43f860:	str	xzr, [x19, #256]
  43f864:	ldr	x0, [x19, #320]
  43f868:	add	x0, x0, #0x1
  43f86c:	str	x0, [x19, #320]
  43f870:	b	43f82c <nftw@plt+0x3ccac>
  43f874:	ldr	x3, [x19, #296]
  43f878:	mov	x2, x22
  43f87c:	and	w1, w20, #0xffffff9f
  43f880:	mov	x0, x19
  43f884:	bl	44298c <nftw@plt+0x3fe0c>
  43f888:	ldp	x21, x22, [sp, #32]
  43f88c:	ldp	x23, x24, [sp, #48]
  43f890:	ldp	x25, x26, [sp, #64]
  43f894:	b	441de4 <nftw@plt+0x3f264>
  43f898:	ldr	x23, [x19, #296]
  43f89c:	str	x23, [sp, #112]
  43f8a0:	add	x0, sp, #0x70
  43f8a4:	str	x0, [x19, #296]
  43f8a8:	str	x22, [sp, #120]
  43f8ac:	str	wzr, [sp, #128]
  43f8b0:	ldr	x0, [x19, #288]
  43f8b4:	str	x0, [sp, #136]
  43f8b8:	mov	x0, x23
  43f8bc:	mov	w21, #0x1                   	// #1
  43f8c0:	add	x3, sp, #0x70
  43f8c4:	mov	w6, w21
  43f8c8:	cbnz	x23, 43f918 <nftw@plt+0x3cd98>
  43f8cc:	ldr	x2, [x22, #16]
  43f8d0:	mov	w1, w20
  43f8d4:	mov	x0, x19
  43f8d8:	bl	441f24 <nftw@plt+0x3f3a4>
  43f8dc:	str	xzr, [x19, #296]
  43f8e0:	ldr	w0, [sp, #128]
  43f8e4:	cbz	w0, 43f9bc <nftw@plt+0x3ce3c>
  43f8e8:	ldp	x21, x22, [sp, #32]
  43f8ec:	ldp	x23, x24, [sp, #48]
  43f8f0:	ldp	x25, x26, [sp, #64]
  43f8f4:	b	441de4 <nftw@plt+0x3f264>
  43f8f8:	mov	w0, #0x1                   	// #1
  43f8fc:	str	w0, [x19, #304]
  43f900:	ldp	x21, x22, [sp, #32]
  43f904:	ldp	x23, x24, [sp, #48]
  43f908:	ldp	x25, x26, [sp, #64]
  43f90c:	b	441de4 <nftw@plt+0x3f264>
  43f910:	ldr	x0, [x0]
  43f914:	cbz	x0, 43f96c <nftw@plt+0x3cdec>
  43f918:	ldr	x1, [x0, #8]
  43f91c:	ldr	w1, [x1]
  43f920:	sub	w1, w1, #0x19
  43f924:	cmp	w1, #0x2
  43f928:	b.hi	43f96c <nftw@plt+0x3cdec>  // b.pmore
  43f92c:	ldr	w1, [x0, #16]
  43f930:	cbnz	w1, 43f910 <nftw@plt+0x3cd90>
  43f934:	cmp	w21, #0x3
  43f938:	b.hi	43f8f8 <nftw@plt+0x3cd78>  // b.pmore
  43f93c:	ubfiz	x2, x21, #5, #32
  43f940:	add	x1, x3, x2
  43f944:	ldp	x4, x5, [x0]
  43f948:	stp	x4, x5, [x1]
  43f94c:	ldp	x4, x5, [x0, #16]
  43f950:	stp	x4, x5, [x1, #16]
  43f954:	ldr	x4, [x19, #296]
  43f958:	str	x4, [x3, x2]
  43f95c:	str	x1, [x19, #296]
  43f960:	str	w6, [x0, #16]
  43f964:	add	w21, w21, #0x1
  43f968:	b	43f910 <nftw@plt+0x3cd90>
  43f96c:	ldr	x2, [x22, #16]
  43f970:	mov	w1, w20
  43f974:	mov	x0, x19
  43f978:	bl	441f24 <nftw@plt+0x3f3a4>
  43f97c:	str	x23, [x19, #296]
  43f980:	ldr	w0, [sp, #128]
  43f984:	cbnz	w0, 441e70 <nftw@plt+0x3f2f0>
  43f988:	cmp	w21, #0x1
  43f98c:	b.ls	43f9bc <nftw@plt+0x3ce3c>  // b.plast
  43f990:	sub	w23, w21, #0x1
  43f994:	add	x0, sp, #0x70
  43f998:	add	x23, x0, x23, lsl #5
  43f99c:	sub	w21, w21, #0x1
  43f9a0:	ldr	x2, [x23, #8]
  43f9a4:	mov	w1, w20
  43f9a8:	mov	x0, x19
  43f9ac:	bl	441fc0 <nftw@plt+0x3f440>
  43f9b0:	sub	x23, x23, #0x20
  43f9b4:	cmp	w21, #0x1
  43f9b8:	b.ne	43f99c <nftw@plt+0x3ce1c>  // b.any
  43f9bc:	ldr	x3, [x19, #296]
  43f9c0:	mov	x2, x22
  43f9c4:	mov	w1, w20
  43f9c8:	mov	x0, x19
  43f9cc:	bl	442fe4 <nftw@plt+0x40464>
  43f9d0:	ldp	x21, x22, [sp, #32]
  43f9d4:	ldp	x23, x24, [sp, #48]
  43f9d8:	ldp	x25, x26, [sp, #64]
  43f9dc:	b	441de4 <nftw@plt+0x3f264>
  43f9e0:	ldr	x0, [x19, #296]
  43f9e4:	str	x0, [sp, #112]
  43f9e8:	add	x0, sp, #0x70
  43f9ec:	str	x0, [x19, #296]
  43f9f0:	str	x22, [sp, #120]
  43f9f4:	str	wzr, [sp, #128]
  43f9f8:	ldr	x0, [x19, #288]
  43f9fc:	str	x0, [sp, #136]
  43fa00:	ldr	x2, [x22, #16]
  43fa04:	mov	w1, w20
  43fa08:	mov	x0, x19
  43fa0c:	bl	441f24 <nftw@plt+0x3f3a4>
  43fa10:	ldr	w0, [sp, #128]
  43fa14:	cbz	w0, 43fa30 <nftw@plt+0x3ceb0>
  43fa18:	ldr	x0, [sp, #112]
  43fa1c:	str	x0, [x19, #296]
  43fa20:	ldp	x21, x22, [sp, #32]
  43fa24:	ldp	x23, x24, [sp, #48]
  43fa28:	ldp	x25, x26, [sp, #64]
  43fa2c:	b	441de4 <nftw@plt+0x3f264>
  43fa30:	mov	x2, x22
  43fa34:	mov	w1, w20
  43fa38:	mov	x0, x19
  43fa3c:	bl	441fc0 <nftw@plt+0x3f440>
  43fa40:	b	43fa18 <nftw@plt+0x3ce98>
  43fa44:	ldrsh	w0, [x22, #18]
  43fa48:	cbnz	w0, 43fab4 <nftw@plt+0x3cf34>
  43fa4c:	ldr	x2, [x22, #8]
  43fa50:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  43fa54:	add	x0, x0, #0x2c0
  43fa58:	ldr	x1, [x2, #8]
  43fa5c:	add	x0, x0, #0x100
  43fa60:	cmp	x1, x0
  43fa64:	b.eq	43fa98 <nftw@plt+0x3cf18>  // b.none
  43fa68:	mov	w1, w20
  43fa6c:	mov	x0, x19
  43fa70:	bl	441f24 <nftw@plt+0x3f3a4>
  43fa74:	ldr	x0, [x19, #256]
  43fa78:	cmp	x0, #0xff
  43fa7c:	b.eq	43fb24 <nftw@plt+0x3cfa4>  // b.none
  43fa80:	ldr	x1, [x19, #256]
  43fa84:	add	x0, x1, #0x1
  43fa88:	str	x0, [x19, #256]
  43fa8c:	mov	w0, #0x20                  	// #32
  43fa90:	strb	w0, [x19, x1]
  43fa94:	strb	w0, [x19, #264]
  43fa98:	ldrsh	w0, [x22, #16]
  43fa9c:	cbz	w0, 43fbbc <nftw@plt+0x3d03c>
  43faa0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43faa4:	add	x20, x20, #0xe0
  43faa8:	add	x22, x20, #0x6
  43faac:	mov	x23, #0xff                  	// #255
  43fab0:	b	43fb70 <nftw@plt+0x3cff0>
  43fab4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43fab8:	add	x21, x21, #0xd8
  43fabc:	add	x24, x21, #0x5
  43fac0:	mov	x25, #0xff                  	// #255
  43fac4:	b	43fae8 <nftw@plt+0x3cf68>
  43fac8:	ldr	x0, [x19, #256]
  43facc:	add	x1, x0, #0x1
  43fad0:	str	x1, [x19, #256]
  43fad4:	strb	w23, [x19, x0]
  43fad8:	strb	w23, [x19, #264]
  43fadc:	add	x21, x21, #0x1
  43fae0:	cmp	x21, x24
  43fae4:	b.eq	43fa4c <nftw@plt+0x3cecc>  // b.none
  43fae8:	ldrb	w23, [x21]
  43faec:	ldr	x0, [x19, #256]
  43faf0:	cmp	x0, #0xff
  43faf4:	b.ne	43fac8 <nftw@plt+0x3cf48>  // b.any
  43faf8:	strb	wzr, [x19, #255]
  43fafc:	ldr	x3, [x19, #272]
  43fb00:	ldr	x2, [x19, #280]
  43fb04:	mov	x1, x25
  43fb08:	mov	x0, x19
  43fb0c:	blr	x3
  43fb10:	str	xzr, [x19, #256]
  43fb14:	ldr	x0, [x19, #320]
  43fb18:	add	x0, x0, #0x1
  43fb1c:	str	x0, [x19, #320]
  43fb20:	b	43fac8 <nftw@plt+0x3cf48>
  43fb24:	strb	wzr, [x19, #255]
  43fb28:	ldr	x3, [x19, #272]
  43fb2c:	ldr	x2, [x19, #280]
  43fb30:	mov	x1, #0xff                  	// #255
  43fb34:	mov	x0, x19
  43fb38:	blr	x3
  43fb3c:	str	xzr, [x19, #256]
  43fb40:	ldr	x0, [x19, #320]
  43fb44:	add	x0, x0, #0x1
  43fb48:	str	x0, [x19, #320]
  43fb4c:	b	43fa80 <nftw@plt+0x3cf00>
  43fb50:	ldr	x0, [x19, #256]
  43fb54:	add	x1, x0, #0x1
  43fb58:	str	x1, [x19, #256]
  43fb5c:	strb	w21, [x19, x0]
  43fb60:	strb	w21, [x19, #264]
  43fb64:	add	x20, x20, #0x1
  43fb68:	cmp	x20, x22
  43fb6c:	b.eq	43fbac <nftw@plt+0x3d02c>  // b.none
  43fb70:	ldrb	w21, [x20]
  43fb74:	ldr	x0, [x19, #256]
  43fb78:	cmp	x0, #0xff
  43fb7c:	b.ne	43fb50 <nftw@plt+0x3cfd0>  // b.any
  43fb80:	strb	wzr, [x19, #255]
  43fb84:	ldr	x3, [x19, #272]
  43fb88:	ldr	x2, [x19, #280]
  43fb8c:	mov	x1, x23
  43fb90:	mov	x0, x19
  43fb94:	blr	x3
  43fb98:	str	xzr, [x19, #256]
  43fb9c:	ldr	x0, [x19, #320]
  43fba0:	add	x0, x0, #0x1
  43fba4:	str	x0, [x19, #320]
  43fba8:	b	43fb50 <nftw@plt+0x3cfd0>
  43fbac:	ldp	x21, x22, [sp, #32]
  43fbb0:	ldp	x23, x24, [sp, #48]
  43fbb4:	ldp	x25, x26, [sp, #64]
  43fbb8:	b	441de4 <nftw@plt+0x3f264>
  43fbbc:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43fbc0:	add	x20, x20, #0xe8
  43fbc4:	add	x22, x20, #0x6
  43fbc8:	mov	x23, #0xff                  	// #255
  43fbcc:	b	43fbf0 <nftw@plt+0x3d070>
  43fbd0:	ldr	x0, [x19, #256]
  43fbd4:	add	x1, x0, #0x1
  43fbd8:	str	x1, [x19, #256]
  43fbdc:	strb	w21, [x19, x0]
  43fbe0:	strb	w21, [x19, #264]
  43fbe4:	add	x20, x20, #0x1
  43fbe8:	cmp	x20, x22
  43fbec:	b.eq	43fc2c <nftw@plt+0x3d0ac>  // b.none
  43fbf0:	ldrb	w21, [x20]
  43fbf4:	ldr	x0, [x19, #256]
  43fbf8:	cmp	x0, #0xff
  43fbfc:	b.ne	43fbd0 <nftw@plt+0x3d050>  // b.any
  43fc00:	strb	wzr, [x19, #255]
  43fc04:	ldr	x3, [x19, #272]
  43fc08:	ldr	x2, [x19, #280]
  43fc0c:	mov	x1, x23
  43fc10:	mov	x0, x19
  43fc14:	blr	x3
  43fc18:	str	xzr, [x19, #256]
  43fc1c:	ldr	x0, [x19, #320]
  43fc20:	add	x0, x0, #0x1
  43fc24:	str	x0, [x19, #320]
  43fc28:	b	43fbd0 <nftw@plt+0x3d050>
  43fc2c:	ldp	x21, x22, [sp, #32]
  43fc30:	ldp	x23, x24, [sp, #48]
  43fc34:	ldp	x25, x26, [sp, #64]
  43fc38:	b	441de4 <nftw@plt+0x3f264>
  43fc3c:	ldr	x2, [x22, #8]
  43fc40:	cbz	x2, 43fc50 <nftw@plt+0x3d0d0>
  43fc44:	mov	w1, w20
  43fc48:	mov	x0, x19
  43fc4c:	bl	441f24 <nftw@plt+0x3f3a4>
  43fc50:	ldr	x0, [x22, #16]
  43fc54:	cbz	x0, 441e80 <nftw@plt+0x3f300>
  43fc58:	ldr	x1, [x19, #256]
  43fc5c:	cmp	x1, #0xfd
  43fc60:	b.ls	43fc88 <nftw@plt+0x3d108>  // b.plast
  43fc64:	strb	wzr, [x19, x1]
  43fc68:	ldr	x3, [x19, #272]
  43fc6c:	ldr	x2, [x19, #280]
  43fc70:	mov	x0, x19
  43fc74:	blr	x3
  43fc78:	str	xzr, [x19, #256]
  43fc7c:	ldr	x0, [x19, #320]
  43fc80:	add	x0, x0, #0x1
  43fc84:	str	x0, [x19, #320]
  43fc88:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43fc8c:	add	x21, x21, #0xf0
  43fc90:	add	x25, x21, #0x2
  43fc94:	mov	x26, #0xff                  	// #255
  43fc98:	b	43fcbc <nftw@plt+0x3d13c>
  43fc9c:	ldr	x0, [x19, #256]
  43fca0:	add	x24, x0, #0x1
  43fca4:	str	x24, [x19, #256]
  43fca8:	strb	w23, [x19, x0]
  43fcac:	strb	w23, [x19, #264]
  43fcb0:	add	x21, x21, #0x1
  43fcb4:	cmp	x21, x25
  43fcb8:	b.eq	43fcf8 <nftw@plt+0x3d178>  // b.none
  43fcbc:	ldrb	w23, [x21]
  43fcc0:	ldr	x0, [x19, #256]
  43fcc4:	cmp	x0, #0xff
  43fcc8:	b.ne	43fc9c <nftw@plt+0x3d11c>  // b.any
  43fccc:	strb	wzr, [x19, #255]
  43fcd0:	ldr	x3, [x19, #272]
  43fcd4:	ldr	x2, [x19, #280]
  43fcd8:	mov	x1, x26
  43fcdc:	mov	x0, x19
  43fce0:	blr	x3
  43fce4:	str	xzr, [x19, #256]
  43fce8:	ldr	x0, [x19, #320]
  43fcec:	add	x0, x0, #0x1
  43fcf0:	str	x0, [x19, #320]
  43fcf4:	b	43fc9c <nftw@plt+0x3d11c>
  43fcf8:	ldr	x21, [x19, #320]
  43fcfc:	ldr	x2, [x22, #16]
  43fd00:	mov	w1, w20
  43fd04:	mov	x0, x19
  43fd08:	bl	441f24 <nftw@plt+0x3f3a4>
  43fd0c:	ldr	x0, [x19, #320]
  43fd10:	cmp	x0, x21
  43fd14:	b.eq	43fd28 <nftw@plt+0x3d1a8>  // b.none
  43fd18:	ldp	x21, x22, [sp, #32]
  43fd1c:	ldp	x23, x24, [sp, #48]
  43fd20:	ldp	x25, x26, [sp, #64]
  43fd24:	b	441de4 <nftw@plt+0x3f264>
  43fd28:	ldr	x0, [x19, #256]
  43fd2c:	cmp	x0, x24
  43fd30:	b.eq	43fd44 <nftw@plt+0x3d1c4>  // b.none
  43fd34:	ldp	x21, x22, [sp, #32]
  43fd38:	ldp	x23, x24, [sp, #48]
  43fd3c:	ldp	x25, x26, [sp, #64]
  43fd40:	b	441de4 <nftw@plt+0x3f264>
  43fd44:	sub	x0, x0, #0x2
  43fd48:	str	x0, [x19, #256]
  43fd4c:	ldp	x21, x22, [sp, #32]
  43fd50:	ldp	x23, x24, [sp, #48]
  43fd54:	ldp	x25, x26, [sp, #64]
  43fd58:	b	441de4 <nftw@plt+0x3f264>
  43fd5c:	ldr	x2, [x22, #8]
  43fd60:	ldr	x21, [x22, #16]
  43fd64:	cbz	x2, 43fd74 <nftw@plt+0x3d1f4>
  43fd68:	mov	w1, w20
  43fd6c:	mov	x0, x19
  43fd70:	bl	441f24 <nftw@plt+0x3f3a4>
  43fd74:	ldr	x0, [x19, #256]
  43fd78:	cmp	x0, #0xff
  43fd7c:	b.eq	43fddc <nftw@plt+0x3d25c>  // b.none
  43fd80:	ldr	x1, [x19, #256]
  43fd84:	add	x0, x1, #0x1
  43fd88:	str	x0, [x19, #256]
  43fd8c:	mov	w0, #0x7b                  	// #123
  43fd90:	strb	w0, [x19, x1]
  43fd94:	strb	w0, [x19, #264]
  43fd98:	mov	x2, x21
  43fd9c:	mov	w1, w20
  43fda0:	mov	x0, x19
  43fda4:	bl	441f24 <nftw@plt+0x3f3a4>
  43fda8:	ldr	x0, [x19, #256]
  43fdac:	cmp	x0, #0xff
  43fdb0:	b.eq	43fe08 <nftw@plt+0x3d288>  // b.none
  43fdb4:	ldr	x1, [x19, #256]
  43fdb8:	add	x0, x1, #0x1
  43fdbc:	str	x0, [x19, #256]
  43fdc0:	mov	w0, #0x7d                  	// #125
  43fdc4:	strb	w0, [x19, x1]
  43fdc8:	strb	w0, [x19, #264]
  43fdcc:	ldp	x21, x22, [sp, #32]
  43fdd0:	ldp	x23, x24, [sp, #48]
  43fdd4:	ldp	x25, x26, [sp, #64]
  43fdd8:	b	441de4 <nftw@plt+0x3f264>
  43fddc:	strb	wzr, [x19, #255]
  43fde0:	ldr	x3, [x19, #272]
  43fde4:	ldr	x2, [x19, #280]
  43fde8:	mov	x1, #0xff                  	// #255
  43fdec:	mov	x0, x19
  43fdf0:	blr	x3
  43fdf4:	str	xzr, [x19, #256]
  43fdf8:	ldr	x0, [x19, #320]
  43fdfc:	add	x0, x0, #0x1
  43fe00:	str	x0, [x19, #320]
  43fe04:	b	43fd80 <nftw@plt+0x3d200>
  43fe08:	strb	wzr, [x19, #255]
  43fe0c:	ldr	x3, [x19, #272]
  43fe10:	ldr	x2, [x19, #280]
  43fe14:	mov	x1, #0xff                  	// #255
  43fe18:	mov	x0, x19
  43fe1c:	blr	x3
  43fe20:	str	xzr, [x19, #256]
  43fe24:	ldr	x0, [x19, #320]
  43fe28:	add	x0, x0, #0x1
  43fe2c:	str	x0, [x19, #320]
  43fe30:	b	43fdb4 <nftw@plt+0x3d234>
  43fe34:	ldr	x24, [x22, #8]
  43fe38:	ldr	w23, [x24, #16]
  43fe3c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43fe40:	add	x20, x20, #0xf8
  43fe44:	add	x22, x20, #0x8
  43fe48:	mov	x25, #0xff                  	// #255
  43fe4c:	b	43fe70 <nftw@plt+0x3d2f0>
  43fe50:	ldr	x0, [x19, #256]
  43fe54:	add	x1, x0, #0x1
  43fe58:	str	x1, [x19, #256]
  43fe5c:	strb	w21, [x19, x0]
  43fe60:	strb	w21, [x19, #264]
  43fe64:	add	x20, x20, #0x1
  43fe68:	cmp	x20, x22
  43fe6c:	b.eq	43feac <nftw@plt+0x3d32c>  // b.none
  43fe70:	ldrb	w21, [x20]
  43fe74:	ldr	x0, [x19, #256]
  43fe78:	cmp	x0, #0xff
  43fe7c:	b.ne	43fe50 <nftw@plt+0x3d2d0>  // b.any
  43fe80:	strb	wzr, [x19, #255]
  43fe84:	ldr	x3, [x19, #272]
  43fe88:	ldr	x2, [x19, #280]
  43fe8c:	mov	x1, x25
  43fe90:	mov	x0, x19
  43fe94:	blr	x3
  43fe98:	str	xzr, [x19, #256]
  43fe9c:	ldr	x0, [x19, #320]
  43fea0:	add	x0, x0, #0x1
  43fea4:	str	x0, [x19, #320]
  43fea8:	b	43fe50 <nftw@plt+0x3d2d0>
  43feac:	ldr	x0, [x24, #8]
  43feb0:	ldrb	w0, [x0]
  43feb4:	sub	w0, w0, #0x61
  43feb8:	and	w0, w0, #0xff
  43febc:	cmp	w0, #0x19
  43fec0:	b.hi	43fee4 <nftw@plt+0x3d364>  // b.pmore
  43fec4:	cmp	x1, #0xff
  43fec8:	b.eq	43ff14 <nftw@plt+0x3d394>  // b.none
  43fecc:	ldr	x1, [x19, #256]
  43fed0:	add	x0, x1, #0x1
  43fed4:	str	x0, [x19, #256]
  43fed8:	mov	w0, #0x20                  	// #32
  43fedc:	strb	w0, [x19, x1]
  43fee0:	strb	w0, [x19, #264]
  43fee4:	ldr	x22, [x24, #8]
  43fee8:	add	x0, x22, w23, sxtw
  43feec:	ldurb	w0, [x0, #-1]
  43fef0:	cmp	w0, #0x20
  43fef4:	cset	w0, eq  // eq = none
  43fef8:	sub	w23, w23, w0
  43fefc:	sxtw	x0, w23
  43ff00:	cbz	w23, 441e90 <nftw@plt+0x3f310>
  43ff04:	mov	x20, x22
  43ff08:	add	x22, x22, x0
  43ff0c:	mov	x23, #0xff                  	// #255
  43ff10:	b	43ff5c <nftw@plt+0x3d3dc>
  43ff14:	strb	wzr, [x19, #255]
  43ff18:	ldr	x3, [x19, #272]
  43ff1c:	ldr	x2, [x19, #280]
  43ff20:	mov	x0, x19
  43ff24:	blr	x3
  43ff28:	str	xzr, [x19, #256]
  43ff2c:	ldr	x0, [x19, #320]
  43ff30:	add	x0, x0, #0x1
  43ff34:	str	x0, [x19, #320]
  43ff38:	b	43fecc <nftw@plt+0x3d34c>
  43ff3c:	ldr	x0, [x19, #256]
  43ff40:	add	x1, x0, #0x1
  43ff44:	str	x1, [x19, #256]
  43ff48:	strb	w21, [x19, x0]
  43ff4c:	strb	w21, [x19, #264]
  43ff50:	add	x20, x20, #0x1
  43ff54:	cmp	x20, x22
  43ff58:	b.eq	43ff98 <nftw@plt+0x3d418>  // b.none
  43ff5c:	ldrb	w21, [x20]
  43ff60:	ldr	x0, [x19, #256]
  43ff64:	cmp	x0, #0xff
  43ff68:	b.ne	43ff3c <nftw@plt+0x3d3bc>  // b.any
  43ff6c:	strb	wzr, [x19, #255]
  43ff70:	ldr	x3, [x19, #272]
  43ff74:	ldr	x2, [x19, #280]
  43ff78:	mov	x1, x23
  43ff7c:	mov	x0, x19
  43ff80:	blr	x3
  43ff84:	str	xzr, [x19, #256]
  43ff88:	ldr	x0, [x19, #320]
  43ff8c:	add	x0, x0, #0x1
  43ff90:	str	x0, [x19, #320]
  43ff94:	b	43ff3c <nftw@plt+0x3d3bc>
  43ff98:	ldp	x21, x22, [sp, #32]
  43ff9c:	ldp	x23, x24, [sp, #48]
  43ffa0:	ldp	x25, x26, [sp, #64]
  43ffa4:	b	441de4 <nftw@plt+0x3f264>
  43ffa8:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  43ffac:	add	x21, x21, #0x108
  43ffb0:	add	x24, x21, #0x9
  43ffb4:	mov	x25, #0xff                  	// #255
  43ffb8:	b	43ffdc <nftw@plt+0x3d45c>
  43ffbc:	ldr	x0, [x19, #256]
  43ffc0:	add	x1, x0, #0x1
  43ffc4:	str	x1, [x19, #256]
  43ffc8:	strb	w23, [x19, x0]
  43ffcc:	strb	w23, [x19, #264]
  43ffd0:	add	x21, x21, #0x1
  43ffd4:	cmp	x21, x24
  43ffd8:	b.eq	440018 <nftw@plt+0x3d498>  // b.none
  43ffdc:	ldrb	w23, [x21]
  43ffe0:	ldr	x0, [x19, #256]
  43ffe4:	cmp	x0, #0xff
  43ffe8:	b.ne	43ffbc <nftw@plt+0x3d43c>  // b.any
  43ffec:	strb	wzr, [x19, #255]
  43fff0:	ldr	x3, [x19, #272]
  43fff4:	ldr	x2, [x19, #280]
  43fff8:	mov	x1, x25
  43fffc:	mov	x0, x19
  440000:	blr	x3
  440004:	str	xzr, [x19, #256]
  440008:	ldr	x0, [x19, #320]
  44000c:	add	x0, x0, #0x1
  440010:	str	x0, [x19, #320]
  440014:	b	43ffbc <nftw@plt+0x3d43c>
  440018:	ldr	x2, [x22, #16]
  44001c:	mov	w1, w20
  440020:	mov	x0, x19
  440024:	bl	441f24 <nftw@plt+0x3f3a4>
  440028:	ldp	x21, x22, [sp, #32]
  44002c:	ldp	x23, x24, [sp, #48]
  440030:	ldp	x25, x26, [sp, #64]
  440034:	b	441de4 <nftw@plt+0x3f264>
  440038:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44003c:	add	x21, x21, #0x108
  440040:	add	x24, x21, #0x9
  440044:	mov	x25, #0xff                  	// #255
  440048:	b	44006c <nftw@plt+0x3d4ec>
  44004c:	ldr	x0, [x19, #256]
  440050:	add	x1, x0, #0x1
  440054:	str	x1, [x19, #256]
  440058:	strb	w23, [x19, x0]
  44005c:	strb	w23, [x19, #264]
  440060:	add	x21, x21, #0x1
  440064:	cmp	x21, x24
  440068:	b.eq	4400a8 <nftw@plt+0x3d528>  // b.none
  44006c:	ldrb	w23, [x21]
  440070:	ldr	x0, [x19, #256]
  440074:	cmp	x0, #0xff
  440078:	b.ne	44004c <nftw@plt+0x3d4cc>  // b.any
  44007c:	strb	wzr, [x19, #255]
  440080:	ldr	x3, [x19, #272]
  440084:	ldr	x2, [x19, #280]
  440088:	mov	x1, x25
  44008c:	mov	x0, x19
  440090:	blr	x3
  440094:	str	xzr, [x19, #256]
  440098:	ldr	x0, [x19, #320]
  44009c:	add	x0, x0, #0x1
  4400a0:	str	x0, [x19, #320]
  4400a4:	b	44004c <nftw@plt+0x3d4cc>
  4400a8:	ldr	x0, [x19, #368]
  4400ac:	cbz	x0, 4400c4 <nftw@plt+0x3d544>
  4400b0:	ldr	x1, [x19, #288]
  4400b4:	str	x1, [sp, #112]
  4400b8:	add	x1, sp, #0x70
  4400bc:	str	x1, [x19, #288]
  4400c0:	str	x0, [sp, #120]
  4400c4:	ldr	x2, [x22, #8]
  4400c8:	ldr	w0, [x2]
  4400cc:	cmp	w0, #0x4
  4400d0:	b.eq	440100 <nftw@plt+0x3d580>  // b.none
  4400d4:	mov	w1, w20
  4400d8:	mov	x0, x19
  4400dc:	bl	441f24 <nftw@plt+0x3f3a4>
  4400e0:	ldr	x0, [x19, #368]
  4400e4:	cbz	x0, 441ea0 <nftw@plt+0x3f320>
  4400e8:	ldr	x0, [sp, #112]
  4400ec:	str	x0, [x19, #288]
  4400f0:	ldp	x21, x22, [sp, #32]
  4400f4:	ldp	x23, x24, [sp, #48]
  4400f8:	ldp	x25, x26, [sp, #64]
  4400fc:	b	441de4 <nftw@plt+0x3f264>
  440100:	ldr	x2, [x2, #8]
  440104:	mov	w1, w20
  440108:	mov	x0, x19
  44010c:	bl	441f24 <nftw@plt+0x3f3a4>
  440110:	ldr	x0, [x19, #368]
  440114:	cbz	x0, 440120 <nftw@plt+0x3d5a0>
  440118:	ldr	x0, [sp, #112]
  44011c:	str	x0, [x19, #288]
  440120:	ldrb	w0, [x19, #264]
  440124:	cmp	w0, #0x3c
  440128:	b.eq	4401a4 <nftw@plt+0x3d624>  // b.none
  44012c:	ldr	x0, [x19, #256]
  440130:	cmp	x0, #0xff
  440134:	b.eq	4401f8 <nftw@plt+0x3d678>  // b.none
  440138:	ldr	x1, [x19, #256]
  44013c:	add	x0, x1, #0x1
  440140:	str	x0, [x19, #256]
  440144:	mov	w0, #0x3c                  	// #60
  440148:	strb	w0, [x19, x1]
  44014c:	strb	w0, [x19, #264]
  440150:	ldr	x0, [x22, #8]
  440154:	ldr	x2, [x0, #16]
  440158:	mov	w1, w20
  44015c:	mov	x0, x19
  440160:	bl	441f24 <nftw@plt+0x3f3a4>
  440164:	ldrb	w0, [x19, #264]
  440168:	cmp	w0, #0x3e
  44016c:	b.eq	440224 <nftw@plt+0x3d6a4>  // b.none
  440170:	ldr	x0, [x19, #256]
  440174:	cmp	x0, #0xff
  440178:	b.eq	440278 <nftw@plt+0x3d6f8>  // b.none
  44017c:	ldr	x1, [x19, #256]
  440180:	add	x0, x1, #0x1
  440184:	str	x0, [x19, #256]
  440188:	mov	w0, #0x3e                  	// #62
  44018c:	strb	w0, [x19, x1]
  440190:	strb	w0, [x19, #264]
  440194:	ldp	x21, x22, [sp, #32]
  440198:	ldp	x23, x24, [sp, #48]
  44019c:	ldp	x25, x26, [sp, #64]
  4401a0:	b	441de4 <nftw@plt+0x3f264>
  4401a4:	ldr	x0, [x19, #256]
  4401a8:	cmp	x0, #0xff
  4401ac:	b.eq	4401cc <nftw@plt+0x3d64c>  // b.none
  4401b0:	ldr	x1, [x19, #256]
  4401b4:	add	x0, x1, #0x1
  4401b8:	str	x0, [x19, #256]
  4401bc:	mov	w0, #0x20                  	// #32
  4401c0:	strb	w0, [x19, x1]
  4401c4:	strb	w0, [x19, #264]
  4401c8:	b	44012c <nftw@plt+0x3d5ac>
  4401cc:	strb	wzr, [x19, #255]
  4401d0:	ldr	x3, [x19, #272]
  4401d4:	ldr	x2, [x19, #280]
  4401d8:	mov	x1, #0xff                  	// #255
  4401dc:	mov	x0, x19
  4401e0:	blr	x3
  4401e4:	str	xzr, [x19, #256]
  4401e8:	ldr	x0, [x19, #320]
  4401ec:	add	x0, x0, #0x1
  4401f0:	str	x0, [x19, #320]
  4401f4:	b	4401b0 <nftw@plt+0x3d630>
  4401f8:	strb	wzr, [x19, #255]
  4401fc:	ldr	x3, [x19, #272]
  440200:	ldr	x2, [x19, #280]
  440204:	mov	x1, #0xff                  	// #255
  440208:	mov	x0, x19
  44020c:	blr	x3
  440210:	str	xzr, [x19, #256]
  440214:	ldr	x0, [x19, #320]
  440218:	add	x0, x0, #0x1
  44021c:	str	x0, [x19, #320]
  440220:	b	440138 <nftw@plt+0x3d5b8>
  440224:	ldr	x0, [x19, #256]
  440228:	cmp	x0, #0xff
  44022c:	b.eq	44024c <nftw@plt+0x3d6cc>  // b.none
  440230:	ldr	x1, [x19, #256]
  440234:	add	x0, x1, #0x1
  440238:	str	x0, [x19, #256]
  44023c:	mov	w0, #0x20                  	// #32
  440240:	strb	w0, [x19, x1]
  440244:	strb	w0, [x19, #264]
  440248:	b	440170 <nftw@plt+0x3d5f0>
  44024c:	strb	wzr, [x19, #255]
  440250:	ldr	x3, [x19, #272]
  440254:	ldr	x2, [x19, #280]
  440258:	mov	x1, #0xff                  	// #255
  44025c:	mov	x0, x19
  440260:	blr	x3
  440264:	str	xzr, [x19, #256]
  440268:	ldr	x0, [x19, #320]
  44026c:	add	x0, x0, #0x1
  440270:	str	x0, [x19, #320]
  440274:	b	440230 <nftw@plt+0x3d6b0>
  440278:	strb	wzr, [x19, #255]
  44027c:	ldr	x3, [x19, #272]
  440280:	ldr	x2, [x19, #280]
  440284:	mov	x1, #0xff                  	// #255
  440288:	mov	x0, x19
  44028c:	blr	x3
  440290:	str	xzr, [x19, #256]
  440294:	ldr	x0, [x19, #320]
  440298:	add	x0, x0, #0x1
  44029c:	str	x0, [x19, #320]
  4402a0:	b	44017c <nftw@plt+0x3d5fc>
  4402a4:	ldr	x2, [x22, #8]
  4402a8:	mov	w1, w20
  4402ac:	mov	x0, x19
  4402b0:	bl	443244 <nftw@plt+0x406c4>
  4402b4:	ldp	x21, x22, [sp, #32]
  4402b8:	ldp	x23, x24, [sp, #48]
  4402bc:	ldp	x25, x26, [sp, #64]
  4402c0:	b	441de4 <nftw@plt+0x3f264>
  4402c4:	ldr	x24, [x22, #8]
  4402c8:	ldr	x21, [x22, #16]
  4402cc:	ldr	w0, [x24]
  4402d0:	cmp	w0, #0x32
  4402d4:	b.eq	4403d0 <nftw@plt+0x3d850>  // b.none
  4402d8:	cmp	w0, #0x34
  4402dc:	b.ne	440624 <nftw@plt+0x3daa4>  // b.any
  4402e0:	ldr	x0, [x19, #256]
  4402e4:	cmp	x0, #0xff
  4402e8:	b.eq	44062c <nftw@plt+0x3daac>  // b.none
  4402ec:	ldr	x1, [x19, #256]
  4402f0:	add	x0, x1, #0x1
  4402f4:	str	x0, [x19, #256]
  4402f8:	mov	w0, #0x28                  	// #40
  4402fc:	strb	w0, [x19, x1]
  440300:	strb	w0, [x19, #264]
  440304:	ldr	x2, [x24, #8]
  440308:	mov	w1, w20
  44030c:	mov	x0, x19
  440310:	bl	441f24 <nftw@plt+0x3f3a4>
  440314:	ldr	x0, [x19, #256]
  440318:	cmp	x0, #0xff
  44031c:	b.eq	440658 <nftw@plt+0x3dad8>  // b.none
  440320:	ldr	x1, [x19, #256]
  440324:	add	x0, x1, #0x1
  440328:	str	x0, [x19, #256]
  44032c:	mov	w0, #0x29                  	// #41
  440330:	strb	w0, [x19, x1]
  440334:	strb	w0, [x19, #264]
  440338:	mov	x23, #0x0                   	// #0
  44033c:	cbz	x23, 4406fc <nftw@plt+0x3db7c>
  440340:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440344:	add	x1, x1, #0x128
  440348:	mov	x0, x23
  44034c:	bl	402890 <strcmp@plt>
  440350:	cbz	w0, 440684 <nftw@plt+0x3db04>
  440354:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440358:	add	x1, x1, #0x6b0
  44035c:	mov	x0, x23
  440360:	bl	402890 <strcmp@plt>
  440364:	cbnz	w0, 4406fc <nftw@plt+0x3db7c>
  440368:	ldr	x0, [x19, #256]
  44036c:	cmp	x0, #0xff
  440370:	b.eq	4406a4 <nftw@plt+0x3db24>  // b.none
  440374:	ldr	x1, [x19, #256]
  440378:	add	x0, x1, #0x1
  44037c:	str	x0, [x19, #256]
  440380:	mov	w0, #0x28                  	// #40
  440384:	strb	w0, [x19, x1]
  440388:	strb	w0, [x19, #264]
  44038c:	mov	x2, x21
  440390:	mov	w1, w20
  440394:	mov	x0, x19
  440398:	bl	441f24 <nftw@plt+0x3f3a4>
  44039c:	ldr	x0, [x19, #256]
  4403a0:	cmp	x0, #0xff
  4403a4:	b.eq	4406d0 <nftw@plt+0x3db50>  // b.none
  4403a8:	ldr	x1, [x19, #256]
  4403ac:	add	x0, x1, #0x1
  4403b0:	str	x0, [x19, #256]
  4403b4:	mov	w0, #0x29                  	// #41
  4403b8:	strb	w0, [x19, x1]
  4403bc:	strb	w0, [x19, #264]
  4403c0:	ldp	x21, x22, [sp, #32]
  4403c4:	ldp	x23, x24, [sp, #48]
  4403c8:	ldp	x25, x26, [sp, #64]
  4403cc:	b	441de4 <nftw@plt+0x3f264>
  4403d0:	ldr	x0, [x24, #8]
  4403d4:	ldr	x23, [x0]
  4403d8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4403dc:	add	x1, x1, #0x118
  4403e0:	mov	x0, x23
  4403e4:	bl	402890 <strcmp@plt>
  4403e8:	cbnz	w0, 4403f8 <nftw@plt+0x3d878>
  4403ec:	ldr	w0, [x21]
  4403f0:	cmp	w0, #0x3
  4403f4:	b.eq	440444 <nftw@plt+0x3d8c4>  // b.none
  4403f8:	ldr	w0, [x21]
  4403fc:	cmp	w0, #0x39
  440400:	b.eq	440468 <nftw@plt+0x3d8e8>  // b.none
  440404:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440408:	add	x1, x1, #0x120
  44040c:	mov	x0, x23
  440410:	bl	402890 <strcmp@plt>
  440414:	cbz	w0, 440498 <nftw@plt+0x3d918>
  440418:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44041c:	add	x1, x1, #0x220
  440420:	mov	x0, x23
  440424:	bl	402890 <strcmp@plt>
  440428:	mov	w22, w0
  44042c:	cbz	w0, 440560 <nftw@plt+0x3d9e0>
  440430:	mov	x2, x24
  440434:	mov	w1, w20
  440438:	mov	x0, x19
  44043c:	bl	443244 <nftw@plt+0x406c4>
  440440:	b	44033c <nftw@plt+0x3d7bc>
  440444:	ldr	x0, [x21, #8]
  440448:	ldr	w1, [x0]
  44044c:	cmp	w1, #0x1
  440450:	b.ne	440404 <nftw@plt+0x3d884>  // b.any
  440454:	ldr	x1, [x21, #16]
  440458:	ldr	w1, [x1]
  44045c:	cmp	w1, #0x29
  440460:	csel	x21, x21, x0, ne  // ne = any
  440464:	b	440404 <nftw@plt+0x3d884>
  440468:	ldr	x2, [x21, #8]
  44046c:	mov	w1, w20
  440470:	mov	x0, x19
  440474:	bl	44330c <nftw@plt+0x4078c>
  440478:	mov	x2, x24
  44047c:	mov	w1, w20
  440480:	mov	x0, x19
  440484:	bl	443244 <nftw@plt+0x406c4>
  440488:	ldp	x21, x22, [sp, #32]
  44048c:	ldp	x23, x24, [sp, #48]
  440490:	ldp	x25, x26, [sp, #64]
  440494:	b	441de4 <nftw@plt+0x3f264>
  440498:	mov	x1, x21
  44049c:	mov	x0, x19
  4404a0:	bl	43da48 <nftw@plt+0x3aec8>
  4404a4:	bl	43db40 <nftw@plt+0x3afc0>
  4404a8:	mov	w2, w0
  4404ac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4404b0:	add	x1, x1, #0x3f8
  4404b4:	add	x0, sp, #0x70
  4404b8:	bl	4025b0 <sprintf@plt>
  4404bc:	add	x0, sp, #0x70
  4404c0:	bl	4024f0 <strlen@plt>
  4404c4:	cbz	x0, 441eb0 <nftw@plt+0x3f330>
  4404c8:	add	x20, sp, #0x70
  4404cc:	add	x21, x0, x20
  4404d0:	mov	x23, #0xff                  	// #255
  4404d4:	b	4404f8 <nftw@plt+0x3d978>
  4404d8:	ldr	x0, [x19, #256]
  4404dc:	add	x1, x0, #0x1
  4404e0:	str	x1, [x19, #256]
  4404e4:	strb	w22, [x19, x0]
  4404e8:	strb	w22, [x19, #264]
  4404ec:	add	x20, x20, #0x1
  4404f0:	cmp	x20, x21
  4404f4:	b.eq	440534 <nftw@plt+0x3d9b4>  // b.none
  4404f8:	ldrb	w22, [x20]
  4404fc:	ldr	x0, [x19, #256]
  440500:	cmp	x0, #0xff
  440504:	b.ne	4404d8 <nftw@plt+0x3d958>  // b.any
  440508:	strb	wzr, [x19, #255]
  44050c:	ldr	x3, [x19, #272]
  440510:	ldr	x2, [x19, #280]
  440514:	mov	x1, x23
  440518:	mov	x0, x19
  44051c:	blr	x3
  440520:	str	xzr, [x19, #256]
  440524:	ldr	x0, [x19, #320]
  440528:	add	x0, x0, #0x1
  44052c:	str	x0, [x19, #320]
  440530:	b	4404d8 <nftw@plt+0x3d958>
  440534:	ldp	x21, x22, [sp, #32]
  440538:	ldp	x23, x24, [sp, #48]
  44053c:	ldp	x25, x26, [sp, #64]
  440540:	b	441de4 <nftw@plt+0x3f264>
  440544:	ldr	x1, [x0, #8]
  440548:	mov	x0, x19
  44054c:	bl	43da48 <nftw@plt+0x3aec8>
  440550:	bl	43db40 <nftw@plt+0x3afc0>
  440554:	add	w22, w22, w0
  440558:	ldr	x21, [x21, #16]
  44055c:	cbz	x21, 440588 <nftw@plt+0x3da08>
  440560:	ldr	w0, [x21]
  440564:	cmp	w0, #0x2f
  440568:	b.ne	440588 <nftw@plt+0x3da08>  // b.any
  44056c:	ldr	x0, [x21, #8]
  440570:	cbz	x0, 440588 <nftw@plt+0x3da08>
  440574:	ldr	w1, [x0]
  440578:	cmp	w1, #0x4b
  44057c:	b.eq	440544 <nftw@plt+0x3d9c4>  // b.none
  440580:	add	w22, w22, #0x1
  440584:	b	440558 <nftw@plt+0x3d9d8>
  440588:	mov	w2, w22
  44058c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  440590:	add	x1, x1, #0x3f8
  440594:	add	x0, sp, #0x70
  440598:	bl	4025b0 <sprintf@plt>
  44059c:	add	x0, sp, #0x70
  4405a0:	bl	4024f0 <strlen@plt>
  4405a4:	cbz	x0, 441ec0 <nftw@plt+0x3f340>
  4405a8:	add	x20, sp, #0x70
  4405ac:	add	x22, x0, x20
  4405b0:	mov	x23, #0xff                  	// #255
  4405b4:	b	4405d8 <nftw@plt+0x3da58>
  4405b8:	ldr	x0, [x19, #256]
  4405bc:	add	x1, x0, #0x1
  4405c0:	str	x1, [x19, #256]
  4405c4:	strb	w21, [x19, x0]
  4405c8:	strb	w21, [x19, #264]
  4405cc:	add	x20, x20, #0x1
  4405d0:	cmp	x20, x22
  4405d4:	b.eq	440614 <nftw@plt+0x3da94>  // b.none
  4405d8:	ldrb	w21, [x20]
  4405dc:	ldr	x0, [x19, #256]
  4405e0:	cmp	x0, #0xff
  4405e4:	b.ne	4405b8 <nftw@plt+0x3da38>  // b.any
  4405e8:	strb	wzr, [x19, #255]
  4405ec:	ldr	x3, [x19, #272]
  4405f0:	ldr	x2, [x19, #280]
  4405f4:	mov	x1, x23
  4405f8:	mov	x0, x19
  4405fc:	blr	x3
  440600:	str	xzr, [x19, #256]
  440604:	ldr	x0, [x19, #320]
  440608:	add	x0, x0, #0x1
  44060c:	str	x0, [x19, #320]
  440610:	b	4405b8 <nftw@plt+0x3da38>
  440614:	ldp	x21, x22, [sp, #32]
  440618:	ldp	x23, x24, [sp, #48]
  44061c:	ldp	x25, x26, [sp, #64]
  440620:	b	441de4 <nftw@plt+0x3f264>
  440624:	mov	x23, #0x0                   	// #0
  440628:	b	440430 <nftw@plt+0x3d8b0>
  44062c:	strb	wzr, [x19, #255]
  440630:	ldr	x3, [x19, #272]
  440634:	ldr	x2, [x19, #280]
  440638:	mov	x1, #0xff                  	// #255
  44063c:	mov	x0, x19
  440640:	blr	x3
  440644:	str	xzr, [x19, #256]
  440648:	ldr	x0, [x19, #320]
  44064c:	add	x0, x0, #0x1
  440650:	str	x0, [x19, #320]
  440654:	b	4402ec <nftw@plt+0x3d76c>
  440658:	strb	wzr, [x19, #255]
  44065c:	ldr	x3, [x19, #272]
  440660:	ldr	x2, [x19, #280]
  440664:	mov	x1, #0xff                  	// #255
  440668:	mov	x0, x19
  44066c:	blr	x3
  440670:	str	xzr, [x19, #256]
  440674:	ldr	x0, [x19, #320]
  440678:	add	x0, x0, #0x1
  44067c:	str	x0, [x19, #320]
  440680:	b	440320 <nftw@plt+0x3d7a0>
  440684:	mov	x2, x21
  440688:	mov	w1, w20
  44068c:	mov	x0, x19
  440690:	bl	441f24 <nftw@plt+0x3f3a4>
  440694:	ldp	x21, x22, [sp, #32]
  440698:	ldp	x23, x24, [sp, #48]
  44069c:	ldp	x25, x26, [sp, #64]
  4406a0:	b	441de4 <nftw@plt+0x3f264>
  4406a4:	strb	wzr, [x19, #255]
  4406a8:	ldr	x3, [x19, #272]
  4406ac:	ldr	x2, [x19, #280]
  4406b0:	mov	x1, #0xff                  	// #255
  4406b4:	mov	x0, x19
  4406b8:	blr	x3
  4406bc:	str	xzr, [x19, #256]
  4406c0:	ldr	x0, [x19, #320]
  4406c4:	add	x0, x0, #0x1
  4406c8:	str	x0, [x19, #320]
  4406cc:	b	440374 <nftw@plt+0x3d7f4>
  4406d0:	strb	wzr, [x19, #255]
  4406d4:	ldr	x3, [x19, #272]
  4406d8:	ldr	x2, [x19, #280]
  4406dc:	mov	x1, #0xff                  	// #255
  4406e0:	mov	x0, x19
  4406e4:	blr	x3
  4406e8:	str	xzr, [x19, #256]
  4406ec:	ldr	x0, [x19, #320]
  4406f0:	add	x0, x0, #0x1
  4406f4:	str	x0, [x19, #320]
  4406f8:	b	4403a8 <nftw@plt+0x3d828>
  4406fc:	mov	x2, x21
  440700:	mov	w1, w20
  440704:	mov	x0, x19
  440708:	bl	44330c <nftw@plt+0x4078c>
  44070c:	ldp	x21, x22, [sp, #32]
  440710:	ldp	x23, x24, [sp, #48]
  440714:	ldp	x25, x26, [sp, #64]
  440718:	b	441de4 <nftw@plt+0x3f264>
  44071c:	ldr	x0, [x22, #16]
  440720:	ldr	w0, [x0]
  440724:	cmp	w0, #0x39
  440728:	b.eq	440744 <nftw@plt+0x3dbc4>  // b.none
  44072c:	mov	w0, #0x1                   	// #1
  440730:	str	w0, [x19, #304]
  440734:	ldp	x21, x22, [sp, #32]
  440738:	ldp	x23, x24, [sp, #48]
  44073c:	ldp	x25, x26, [sp, #64]
  440740:	b	441de4 <nftw@plt+0x3f264>
  440744:	ldr	x21, [x22, #8]
  440748:	mov	x0, x21
  44074c:	bl	43d700 <nftw@plt+0x3ab80>
  440750:	cbnz	w0, 440858 <nftw@plt+0x3dcd8>
  440754:	mov	x2, x22
  440758:	mov	w1, w20
  44075c:	mov	x0, x19
  440760:	bl	443408 <nftw@plt+0x40888>
  440764:	cbnz	w0, 441ed0 <nftw@plt+0x3f350>
  440768:	ldr	x0, [x22, #8]
  44076c:	ldr	w1, [x0]
  440770:	cmp	w1, #0x32
  440774:	b.eq	4409b0 <nftw@plt+0x3de30>  // b.none
  440778:	ldr	x0, [x22, #8]
  44077c:	ldr	x0, [x0, #8]
  440780:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440784:	add	x1, x1, #0x138
  440788:	ldr	x0, [x0]
  44078c:	bl	402890 <strcmp@plt>
  440790:	cbnz	w0, 4407a8 <nftw@plt+0x3dc28>
  440794:	ldr	x0, [x22, #16]
  440798:	ldr	x0, [x0, #8]
  44079c:	ldr	w1, [x0]
  4407a0:	cmp	w1, #0x3
  4407a4:	b.eq	440a24 <nftw@plt+0x3dea4>  // b.none
  4407a8:	ldr	x0, [x22, #16]
  4407ac:	ldr	x2, [x0, #8]
  4407b0:	mov	w1, w20
  4407b4:	mov	x0, x19
  4407b8:	bl	44330c <nftw@plt+0x4078c>
  4407bc:	ldr	x21, [x22, #8]
  4407c0:	ldr	x0, [x21, #8]
  4407c4:	ldr	x23, [x0]
  4407c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4407cc:	add	x1, x1, #0x140
  4407d0:	mov	x0, x23
  4407d4:	bl	402890 <strcmp@plt>
  4407d8:	cbnz	w0, 440aa8 <nftw@plt+0x3df28>
  4407dc:	ldr	x0, [x19, #256]
  4407e0:	cmp	x0, #0xff
  4407e4:	b.eq	440a50 <nftw@plt+0x3ded0>  // b.none
  4407e8:	ldr	x1, [x19, #256]
  4407ec:	add	x0, x1, #0x1
  4407f0:	str	x0, [x19, #256]
  4407f4:	mov	w0, #0x5b                  	// #91
  4407f8:	strb	w0, [x19, x1]
  4407fc:	strb	w0, [x19, #264]
  440800:	ldr	x0, [x22, #16]
  440804:	ldr	x2, [x0, #16]
  440808:	mov	w1, w20
  44080c:	mov	x0, x19
  440810:	bl	441f24 <nftw@plt+0x3f3a4>
  440814:	ldr	x0, [x19, #256]
  440818:	cmp	x0, #0xff
  44081c:	b.eq	440a7c <nftw@plt+0x3defc>  // b.none
  440820:	ldr	x1, [x19, #256]
  440824:	add	x0, x1, #0x1
  440828:	str	x0, [x19, #256]
  44082c:	mov	w0, #0x5d                  	// #93
  440830:	strb	w0, [x19, x1]
  440834:	strb	w0, [x19, #264]
  440838:	ldr	x0, [x22, #8]
  44083c:	ldr	w1, [x0]
  440840:	cmp	w1, #0x32
  440844:	b.eq	440ae8 <nftw@plt+0x3df68>  // b.none
  440848:	ldp	x21, x22, [sp, #32]
  44084c:	ldp	x23, x24, [sp, #48]
  440850:	ldp	x25, x26, [sp, #64]
  440854:	b	441de4 <nftw@plt+0x3f264>
  440858:	mov	x2, x21
  44085c:	mov	w1, w20
  440860:	mov	x0, x19
  440864:	bl	443244 <nftw@plt+0x406c4>
  440868:	ldr	x0, [x19, #256]
  44086c:	cmp	x0, #0xff
  440870:	b.eq	4408b4 <nftw@plt+0x3dd34>  // b.none
  440874:	ldr	x1, [x19, #256]
  440878:	add	x0, x1, #0x1
  44087c:	str	x0, [x19, #256]
  440880:	mov	w0, #0x3c                  	// #60
  440884:	strb	w0, [x19, x1]
  440888:	strb	w0, [x19, #264]
  44088c:	ldr	x0, [x22, #16]
  440890:	ldr	x2, [x0, #8]
  440894:	mov	w1, w20
  440898:	mov	x0, x19
  44089c:	bl	441f24 <nftw@plt+0x3f3a4>
  4408a0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4408a4:	add	x21, x21, #0x130
  4408a8:	add	x24, x21, #0x2
  4408ac:	mov	x25, #0xff                  	// #255
  4408b0:	b	440900 <nftw@plt+0x3dd80>
  4408b4:	strb	wzr, [x19, #255]
  4408b8:	ldr	x3, [x19, #272]
  4408bc:	ldr	x2, [x19, #280]
  4408c0:	mov	x1, #0xff                  	// #255
  4408c4:	mov	x0, x19
  4408c8:	blr	x3
  4408cc:	str	xzr, [x19, #256]
  4408d0:	ldr	x0, [x19, #320]
  4408d4:	add	x0, x0, #0x1
  4408d8:	str	x0, [x19, #320]
  4408dc:	b	440874 <nftw@plt+0x3dcf4>
  4408e0:	ldr	x0, [x19, #256]
  4408e4:	add	x1, x0, #0x1
  4408e8:	str	x1, [x19, #256]
  4408ec:	strb	w23, [x19, x0]
  4408f0:	strb	w23, [x19, #264]
  4408f4:	add	x21, x21, #0x1
  4408f8:	cmp	x21, x24
  4408fc:	b.eq	44093c <nftw@plt+0x3ddbc>  // b.none
  440900:	ldrb	w23, [x21]
  440904:	ldr	x0, [x19, #256]
  440908:	cmp	x0, #0xff
  44090c:	b.ne	4408e0 <nftw@plt+0x3dd60>  // b.any
  440910:	strb	wzr, [x19, #255]
  440914:	ldr	x3, [x19, #272]
  440918:	ldr	x2, [x19, #280]
  44091c:	mov	x1, x25
  440920:	mov	x0, x19
  440924:	blr	x3
  440928:	str	xzr, [x19, #256]
  44092c:	ldr	x0, [x19, #320]
  440930:	add	x0, x0, #0x1
  440934:	str	x0, [x19, #320]
  440938:	b	4408e0 <nftw@plt+0x3dd60>
  44093c:	ldr	x0, [x22, #16]
  440940:	ldr	x2, [x0, #16]
  440944:	mov	w1, w20
  440948:	mov	x0, x19
  44094c:	bl	441f24 <nftw@plt+0x3f3a4>
  440950:	ldr	x0, [x19, #256]
  440954:	cmp	x0, #0xff
  440958:	b.eq	440984 <nftw@plt+0x3de04>  // b.none
  44095c:	ldr	x1, [x19, #256]
  440960:	add	x0, x1, #0x1
  440964:	str	x0, [x19, #256]
  440968:	mov	w0, #0x29                  	// #41
  44096c:	strb	w0, [x19, x1]
  440970:	strb	w0, [x19, #264]
  440974:	ldp	x21, x22, [sp, #32]
  440978:	ldp	x23, x24, [sp, #48]
  44097c:	ldp	x25, x26, [sp, #64]
  440980:	b	441de4 <nftw@plt+0x3f264>
  440984:	strb	wzr, [x19, #255]
  440988:	ldr	x3, [x19, #272]
  44098c:	ldr	x2, [x19, #280]
  440990:	mov	x1, #0xff                  	// #255
  440994:	mov	x0, x19
  440998:	blr	x3
  44099c:	str	xzr, [x19, #256]
  4409a0:	ldr	x0, [x19, #320]
  4409a4:	add	x0, x0, #0x1
  4409a8:	str	x0, [x19, #320]
  4409ac:	b	44095c <nftw@plt+0x3dddc>
  4409b0:	ldr	x0, [x0, #8]
  4409b4:	ldr	w1, [x0, #16]
  4409b8:	cmp	w1, #0x1
  4409bc:	b.ne	440778 <nftw@plt+0x3dbf8>  // b.any
  4409c0:	ldr	x0, [x0, #8]
  4409c4:	ldrb	w0, [x0]
  4409c8:	cmp	w0, #0x3e
  4409cc:	b.ne	440778 <nftw@plt+0x3dbf8>  // b.any
  4409d0:	ldr	x0, [x19, #256]
  4409d4:	cmp	x0, #0xff
  4409d8:	b.eq	4409f8 <nftw@plt+0x3de78>  // b.none
  4409dc:	ldr	x1, [x19, #256]
  4409e0:	add	x0, x1, #0x1
  4409e4:	str	x0, [x19, #256]
  4409e8:	mov	w0, #0x28                  	// #40
  4409ec:	strb	w0, [x19, x1]
  4409f0:	strb	w0, [x19, #264]
  4409f4:	b	440778 <nftw@plt+0x3dbf8>
  4409f8:	strb	wzr, [x19, #255]
  4409fc:	ldr	x3, [x19, #272]
  440a00:	ldr	x2, [x19, #280]
  440a04:	mov	x1, #0xff                  	// #255
  440a08:	mov	x0, x19
  440a0c:	blr	x3
  440a10:	str	xzr, [x19, #256]
  440a14:	ldr	x0, [x19, #320]
  440a18:	add	x0, x0, #0x1
  440a1c:	str	x0, [x19, #320]
  440a20:	b	4409dc <nftw@plt+0x3de5c>
  440a24:	ldr	x1, [x0, #16]
  440a28:	ldr	w1, [x1]
  440a2c:	cmp	w1, #0x29
  440a30:	b.eq	440a3c <nftw@plt+0x3debc>  // b.none
  440a34:	mov	w1, #0x1                   	// #1
  440a38:	str	w1, [x19, #304]
  440a3c:	ldr	x2, [x0, #8]
  440a40:	mov	w1, w20
  440a44:	mov	x0, x19
  440a48:	bl	44330c <nftw@plt+0x4078c>
  440a4c:	b	4407bc <nftw@plt+0x3dc3c>
  440a50:	strb	wzr, [x19, #255]
  440a54:	ldr	x3, [x19, #272]
  440a58:	ldr	x2, [x19, #280]
  440a5c:	mov	x1, #0xff                  	// #255
  440a60:	mov	x0, x19
  440a64:	blr	x3
  440a68:	str	xzr, [x19, #256]
  440a6c:	ldr	x0, [x19, #320]
  440a70:	add	x0, x0, #0x1
  440a74:	str	x0, [x19, #320]
  440a78:	b	4407e8 <nftw@plt+0x3dc68>
  440a7c:	strb	wzr, [x19, #255]
  440a80:	ldr	x3, [x19, #272]
  440a84:	ldr	x2, [x19, #280]
  440a88:	mov	x1, #0xff                  	// #255
  440a8c:	mov	x0, x19
  440a90:	blr	x3
  440a94:	str	xzr, [x19, #256]
  440a98:	ldr	x0, [x19, #320]
  440a9c:	add	x0, x0, #0x1
  440aa0:	str	x0, [x19, #320]
  440aa4:	b	440820 <nftw@plt+0x3dca0>
  440aa8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440aac:	add	x1, x1, #0x138
  440ab0:	mov	x0, x23
  440ab4:	bl	402890 <strcmp@plt>
  440ab8:	cbnz	w0, 440ad4 <nftw@plt+0x3df54>
  440abc:	ldr	x0, [x22, #16]
  440ac0:	ldr	x2, [x0, #16]
  440ac4:	mov	w1, w20
  440ac8:	mov	x0, x19
  440acc:	bl	44330c <nftw@plt+0x4078c>
  440ad0:	b	440838 <nftw@plt+0x3dcb8>
  440ad4:	mov	x2, x21
  440ad8:	mov	w1, w20
  440adc:	mov	x0, x19
  440ae0:	bl	443244 <nftw@plt+0x406c4>
  440ae4:	b	440abc <nftw@plt+0x3df3c>
  440ae8:	ldr	x0, [x0, #8]
  440aec:	ldr	w1, [x0, #16]
  440af0:	cmp	w1, #0x1
  440af4:	b.eq	440b08 <nftw@plt+0x3df88>  // b.none
  440af8:	ldp	x21, x22, [sp, #32]
  440afc:	ldp	x23, x24, [sp, #48]
  440b00:	ldp	x25, x26, [sp, #64]
  440b04:	b	441de4 <nftw@plt+0x3f264>
  440b08:	ldr	x0, [x0, #8]
  440b0c:	ldrb	w0, [x0]
  440b10:	cmp	w0, #0x3e
  440b14:	b.eq	440b28 <nftw@plt+0x3dfa8>  // b.none
  440b18:	ldp	x21, x22, [sp, #32]
  440b1c:	ldp	x23, x24, [sp, #48]
  440b20:	ldp	x25, x26, [sp, #64]
  440b24:	b	441de4 <nftw@plt+0x3f264>
  440b28:	ldr	x0, [x19, #256]
  440b2c:	cmp	x0, #0xff
  440b30:	b.eq	440b5c <nftw@plt+0x3dfdc>  // b.none
  440b34:	ldr	x1, [x19, #256]
  440b38:	add	x0, x1, #0x1
  440b3c:	str	x0, [x19, #256]
  440b40:	mov	w0, #0x29                  	// #41
  440b44:	strb	w0, [x19, x1]
  440b48:	strb	w0, [x19, #264]
  440b4c:	ldp	x21, x22, [sp, #32]
  440b50:	ldp	x23, x24, [sp, #48]
  440b54:	ldp	x25, x26, [sp, #64]
  440b58:	b	441de4 <nftw@plt+0x3f264>
  440b5c:	strb	wzr, [x19, #255]
  440b60:	ldr	x3, [x19, #272]
  440b64:	ldr	x2, [x19, #280]
  440b68:	mov	x1, #0xff                  	// #255
  440b6c:	mov	x0, x19
  440b70:	blr	x3
  440b74:	str	xzr, [x19, #256]
  440b78:	ldr	x0, [x19, #320]
  440b7c:	add	x0, x0, #0x1
  440b80:	str	x0, [x19, #320]
  440b84:	b	440b34 <nftw@plt+0x3dfb4>
  440b88:	mov	w0, #0x1                   	// #1
  440b8c:	str	w0, [x19, #304]
  440b90:	ldp	x21, x22, [sp, #32]
  440b94:	ldp	x23, x24, [sp, #48]
  440b98:	ldp	x25, x26, [sp, #64]
  440b9c:	b	441de4 <nftw@plt+0x3f264>
  440ba0:	ldr	x0, [x22, #16]
  440ba4:	ldr	w1, [x0]
  440ba8:	cmp	w1, #0x3b
  440bac:	b.ne	440bc0 <nftw@plt+0x3e040>  // b.any
  440bb0:	ldr	x0, [x0, #16]
  440bb4:	ldr	w0, [x0]
  440bb8:	cmp	w0, #0x3c
  440bbc:	b.eq	440bd8 <nftw@plt+0x3e058>  // b.none
  440bc0:	mov	w0, #0x1                   	// #1
  440bc4:	str	w0, [x19, #304]
  440bc8:	ldp	x21, x22, [sp, #32]
  440bcc:	ldp	x23, x24, [sp, #48]
  440bd0:	ldp	x25, x26, [sp, #64]
  440bd4:	b	441de4 <nftw@plt+0x3f264>
  440bd8:	mov	x2, x22
  440bdc:	mov	w1, w20
  440be0:	mov	x0, x19
  440be4:	bl	443408 <nftw@plt+0x40888>
  440be8:	cbnz	w0, 441ee0 <nftw@plt+0x3f360>
  440bec:	ldr	x24, [x22, #8]
  440bf0:	ldr	x0, [x22, #16]
  440bf4:	ldr	x22, [x0, #8]
  440bf8:	ldr	x0, [x0, #16]
  440bfc:	ldr	x23, [x0, #8]
  440c00:	ldr	x21, [x0, #16]
  440c04:	ldr	x0, [x24, #8]
  440c08:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440c0c:	add	x1, x1, #0x148
  440c10:	ldr	x0, [x0]
  440c14:	bl	402890 <strcmp@plt>
  440c18:	cbnz	w0, 440c80 <nftw@plt+0x3e100>
  440c1c:	mov	x2, x22
  440c20:	mov	w1, w20
  440c24:	mov	x0, x19
  440c28:	bl	44330c <nftw@plt+0x4078c>
  440c2c:	mov	x2, x24
  440c30:	mov	w1, w20
  440c34:	mov	x0, x19
  440c38:	bl	443244 <nftw@plt+0x406c4>
  440c3c:	mov	x2, x23
  440c40:	mov	w1, w20
  440c44:	mov	x0, x19
  440c48:	bl	44330c <nftw@plt+0x4078c>
  440c4c:	mov	x2, #0x3                   	// #3
  440c50:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440c54:	add	x1, x1, #0x150
  440c58:	mov	x0, x19
  440c5c:	bl	43d938 <nftw@plt+0x3adb8>
  440c60:	mov	x2, x21
  440c64:	mov	w1, w20
  440c68:	mov	x0, x19
  440c6c:	bl	44330c <nftw@plt+0x4078c>
  440c70:	ldp	x21, x22, [sp, #32]
  440c74:	ldp	x23, x24, [sp, #48]
  440c78:	ldp	x25, x26, [sp, #64]
  440c7c:	b	441de4 <nftw@plt+0x3f264>
  440c80:	mov	x2, #0x4                   	// #4
  440c84:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440c88:	add	x1, x1, #0x158
  440c8c:	mov	x0, x19
  440c90:	bl	43d938 <nftw@plt+0x3adb8>
  440c94:	ldr	x0, [x22, #8]
  440c98:	cbz	x0, 440cd0 <nftw@plt+0x3e150>
  440c9c:	mov	x2, x22
  440ca0:	mov	w1, w20
  440ca4:	mov	x0, x19
  440ca8:	bl	44330c <nftw@plt+0x4078c>
  440cac:	ldr	x0, [x19, #256]
  440cb0:	cmp	x0, #0xff
  440cb4:	b.eq	440d04 <nftw@plt+0x3e184>  // b.none
  440cb8:	ldr	x1, [x19, #256]
  440cbc:	add	x0, x1, #0x1
  440cc0:	str	x0, [x19, #256]
  440cc4:	mov	w0, #0x20                  	// #32
  440cc8:	strb	w0, [x19, x1]
  440ccc:	strb	w0, [x19, #264]
  440cd0:	mov	x2, x23
  440cd4:	mov	w1, w20
  440cd8:	mov	x0, x19
  440cdc:	bl	441f24 <nftw@plt+0x3f3a4>
  440ce0:	cbz	x21, 441ef0 <nftw@plt+0x3f370>
  440ce4:	mov	x2, x21
  440ce8:	mov	w1, w20
  440cec:	mov	x0, x19
  440cf0:	bl	44330c <nftw@plt+0x4078c>
  440cf4:	ldp	x21, x22, [sp, #32]
  440cf8:	ldp	x23, x24, [sp, #48]
  440cfc:	ldp	x25, x26, [sp, #64]
  440d00:	b	441de4 <nftw@plt+0x3f264>
  440d04:	strb	wzr, [x19, #255]
  440d08:	ldr	x3, [x19, #272]
  440d0c:	ldr	x2, [x19, #280]
  440d10:	mov	x1, #0xff                  	// #255
  440d14:	mov	x0, x19
  440d18:	blr	x3
  440d1c:	str	xzr, [x19, #256]
  440d20:	ldr	x0, [x19, #320]
  440d24:	add	x0, x0, #0x1
  440d28:	str	x0, [x19, #320]
  440d2c:	b	440cb8 <nftw@plt+0x3e138>
  440d30:	mov	w0, #0x1                   	// #1
  440d34:	str	w0, [x19, #304]
  440d38:	ldp	x21, x22, [sp, #32]
  440d3c:	ldp	x23, x24, [sp, #48]
  440d40:	ldp	x25, x26, [sp, #64]
  440d44:	b	441de4 <nftw@plt+0x3f264>
  440d48:	ldr	x1, [x22, #8]
  440d4c:	ldr	w2, [x1]
  440d50:	mov	w21, #0x0                   	// #0
  440d54:	cmp	w2, #0x27
  440d58:	b.eq	440de4 <nftw@plt+0x3e264>  // b.none
  440d5c:	ldr	x0, [x19, #256]
  440d60:	cmp	x0, #0xff
  440d64:	b.eq	441054 <nftw@plt+0x3e4d4>  // b.none
  440d68:	ldr	x1, [x19, #256]
  440d6c:	add	x0, x1, #0x1
  440d70:	str	x0, [x19, #256]
  440d74:	mov	w0, #0x28                  	// #40
  440d78:	strb	w0, [x19, x1]
  440d7c:	strb	w0, [x19, #264]
  440d80:	ldr	x2, [x22, #8]
  440d84:	mov	w1, w20
  440d88:	mov	x0, x19
  440d8c:	bl	441f24 <nftw@plt+0x3f3a4>
  440d90:	ldr	x0, [x19, #256]
  440d94:	cmp	x0, #0xff
  440d98:	b.eq	441080 <nftw@plt+0x3e500>  // b.none
  440d9c:	add	x2, x0, #0x1
  440da0:	str	x2, [x19, #256]
  440da4:	mov	w1, #0x29                  	// #41
  440da8:	strb	w1, [x19, x0]
  440dac:	strb	w1, [x19, #264]
  440db0:	ldr	w0, [x22]
  440db4:	cmp	w0, #0x3e
  440db8:	b.eq	4410d0 <nftw@plt+0x3e550>  // b.none
  440dbc:	cmp	w21, #0x8
  440dc0:	b.eq	44111c <nftw@plt+0x3e59c>  // b.none
  440dc4:	ldr	x2, [x22, #16]
  440dc8:	mov	w1, w20
  440dcc:	mov	x0, x19
  440dd0:	bl	441f24 <nftw@plt+0x3f3a4>
  440dd4:	ldp	x21, x22, [sp, #32]
  440dd8:	ldp	x23, x24, [sp, #48]
  440ddc:	ldp	x25, x26, [sp, #64]
  440de0:	b	441de4 <nftw@plt+0x3f264>
  440de4:	ldr	x1, [x1, #8]
  440de8:	ldr	w21, [x1, #28]
  440dec:	cmp	w21, #0x6
  440df0:	b.ls	440e54 <nftw@plt+0x3e2d4>  // b.plast
  440df4:	cmp	w21, #0x7
  440df8:	b.ne	440d5c <nftw@plt+0x3e1dc>  // b.any
  440dfc:	ldr	x1, [x22, #16]
  440e00:	ldr	w2, [x1]
  440e04:	cbnz	w2, 440d5c <nftw@plt+0x3e1dc>
  440e08:	ldr	w2, [x1, #16]
  440e0c:	cmp	w0, #0x3d
  440e10:	ccmp	w2, #0x1, #0x0, eq  // eq = none
  440e14:	b.ne	440d5c <nftw@plt+0x3e1dc>  // b.any
  440e18:	ldr	x0, [x1, #8]
  440e1c:	ldrb	w0, [x0]
  440e20:	cmp	w0, #0x30
  440e24:	b.eq	441030 <nftw@plt+0x3e4b0>  // b.none
  440e28:	cmp	w0, #0x31
  440e2c:	b.ne	440d5c <nftw@plt+0x3e1dc>  // b.any
  440e30:	mov	x2, #0x4                   	// #4
  440e34:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  440e38:	add	x1, x1, #0xb30
  440e3c:	mov	x0, x19
  440e40:	bl	43d938 <nftw@plt+0x3adb8>
  440e44:	ldp	x21, x22, [sp, #32]
  440e48:	ldp	x23, x24, [sp, #48]
  440e4c:	ldp	x25, x26, [sp, #64]
  440e50:	b	441de4 <nftw@plt+0x3f264>
  440e54:	cbz	w21, 440d5c <nftw@plt+0x3e1dc>
  440e58:	ldr	x1, [x22, #16]
  440e5c:	ldr	w1, [x1]
  440e60:	cbnz	w1, 440d5c <nftw@plt+0x3e1dc>
  440e64:	cmp	w0, #0x3e
  440e68:	b.eq	440eb4 <nftw@plt+0x3e334>  // b.none
  440e6c:	ldr	x2, [x22, #16]
  440e70:	mov	w1, w20
  440e74:	mov	x0, x19
  440e78:	bl	441f24 <nftw@plt+0x3f3a4>
  440e7c:	cmp	w21, #0x4
  440e80:	b.eq	440fe8 <nftw@plt+0x3e468>  // b.none
  440e84:	b.ls	440f08 <nftw@plt+0x3e388>  // b.plast
  440e88:	cmp	w21, #0x5
  440e8c:	b.eq	44100c <nftw@plt+0x3e48c>  // b.none
  440e90:	mov	x2, #0x3                   	// #3
  440e94:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440e98:	add	x1, x1, #0x170
  440e9c:	mov	x0, x19
  440ea0:	bl	43d938 <nftw@plt+0x3adb8>
  440ea4:	ldp	x21, x22, [sp, #32]
  440ea8:	ldp	x23, x24, [sp, #48]
  440eac:	ldp	x25, x26, [sp, #64]
  440eb0:	b	441de4 <nftw@plt+0x3f264>
  440eb4:	ldr	x0, [x19, #256]
  440eb8:	cmp	x0, #0xff
  440ebc:	b.eq	440edc <nftw@plt+0x3e35c>  // b.none
  440ec0:	ldr	x1, [x19, #256]
  440ec4:	add	x0, x1, #0x1
  440ec8:	str	x0, [x19, #256]
  440ecc:	mov	w0, #0x2d                  	// #45
  440ed0:	strb	w0, [x19, x1]
  440ed4:	strb	w0, [x19, #264]
  440ed8:	b	440e6c <nftw@plt+0x3e2ec>
  440edc:	strb	wzr, [x19, #255]
  440ee0:	ldr	x3, [x19, #272]
  440ee4:	ldr	x2, [x19, #280]
  440ee8:	mov	x1, #0xff                  	// #255
  440eec:	mov	x0, x19
  440ef0:	blr	x3
  440ef4:	str	xzr, [x19, #256]
  440ef8:	ldr	x0, [x19, #320]
  440efc:	add	x0, x0, #0x1
  440f00:	str	x0, [x19, #320]
  440f04:	b	440ec0 <nftw@plt+0x3e340>
  440f08:	cmp	w21, #0x2
  440f0c:	b.eq	440f5c <nftw@plt+0x3e3dc>  // b.none
  440f10:	cmp	w21, #0x3
  440f14:	b.ne	440f4c <nftw@plt+0x3e3cc>  // b.any
  440f18:	ldr	x0, [x19, #256]
  440f1c:	cmp	x0, #0xff
  440f20:	b.eq	440fbc <nftw@plt+0x3e43c>  // b.none
  440f24:	ldr	x1, [x19, #256]
  440f28:	add	x0, x1, #0x1
  440f2c:	str	x0, [x19, #256]
  440f30:	mov	w0, #0x6c                  	// #108
  440f34:	strb	w0, [x19, x1]
  440f38:	strb	w0, [x19, #264]
  440f3c:	ldp	x21, x22, [sp, #32]
  440f40:	ldp	x23, x24, [sp, #48]
  440f44:	ldp	x25, x26, [sp, #64]
  440f48:	b	441de4 <nftw@plt+0x3f264>
  440f4c:	ldp	x21, x22, [sp, #32]
  440f50:	ldp	x23, x24, [sp, #48]
  440f54:	ldp	x25, x26, [sp, #64]
  440f58:	b	441de4 <nftw@plt+0x3f264>
  440f5c:	ldr	x0, [x19, #256]
  440f60:	cmp	x0, #0xff
  440f64:	b.eq	440f90 <nftw@plt+0x3e410>  // b.none
  440f68:	ldr	x1, [x19, #256]
  440f6c:	add	x0, x1, #0x1
  440f70:	str	x0, [x19, #256]
  440f74:	mov	w0, #0x75                  	// #117
  440f78:	strb	w0, [x19, x1]
  440f7c:	strb	w0, [x19, #264]
  440f80:	ldp	x21, x22, [sp, #32]
  440f84:	ldp	x23, x24, [sp, #48]
  440f88:	ldp	x25, x26, [sp, #64]
  440f8c:	b	441de4 <nftw@plt+0x3f264>
  440f90:	strb	wzr, [x19, #255]
  440f94:	ldr	x3, [x19, #272]
  440f98:	ldr	x2, [x19, #280]
  440f9c:	mov	x1, #0xff                  	// #255
  440fa0:	mov	x0, x19
  440fa4:	blr	x3
  440fa8:	str	xzr, [x19, #256]
  440fac:	ldr	x0, [x19, #320]
  440fb0:	add	x0, x0, #0x1
  440fb4:	str	x0, [x19, #320]
  440fb8:	b	440f68 <nftw@plt+0x3e3e8>
  440fbc:	strb	wzr, [x19, #255]
  440fc0:	ldr	x3, [x19, #272]
  440fc4:	ldr	x2, [x19, #280]
  440fc8:	mov	x1, #0xff                  	// #255
  440fcc:	mov	x0, x19
  440fd0:	blr	x3
  440fd4:	str	xzr, [x19, #256]
  440fd8:	ldr	x0, [x19, #320]
  440fdc:	add	x0, x0, #0x1
  440fe0:	str	x0, [x19, #320]
  440fe4:	b	440f24 <nftw@plt+0x3e3a4>
  440fe8:	mov	x2, #0x2                   	// #2
  440fec:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  440ff0:	add	x1, x1, #0x160
  440ff4:	mov	x0, x19
  440ff8:	bl	43d938 <nftw@plt+0x3adb8>
  440ffc:	ldp	x21, x22, [sp, #32]
  441000:	ldp	x23, x24, [sp, #48]
  441004:	ldp	x25, x26, [sp, #64]
  441008:	b	441de4 <nftw@plt+0x3f264>
  44100c:	mov	x2, #0x2                   	// #2
  441010:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441014:	add	x1, x1, #0x168
  441018:	mov	x0, x19
  44101c:	bl	43d938 <nftw@plt+0x3adb8>
  441020:	ldp	x21, x22, [sp, #32]
  441024:	ldp	x23, x24, [sp, #48]
  441028:	ldp	x25, x26, [sp, #64]
  44102c:	b	441de4 <nftw@plt+0x3f264>
  441030:	mov	x2, #0x5                   	// #5
  441034:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  441038:	add	x1, x1, #0xb38
  44103c:	mov	x0, x19
  441040:	bl	43d938 <nftw@plt+0x3adb8>
  441044:	ldp	x21, x22, [sp, #32]
  441048:	ldp	x23, x24, [sp, #48]
  44104c:	ldp	x25, x26, [sp, #64]
  441050:	b	441de4 <nftw@plt+0x3f264>
  441054:	strb	wzr, [x19, #255]
  441058:	ldr	x3, [x19, #272]
  44105c:	ldr	x2, [x19, #280]
  441060:	mov	x1, #0xff                  	// #255
  441064:	mov	x0, x19
  441068:	blr	x3
  44106c:	str	xzr, [x19, #256]
  441070:	ldr	x0, [x19, #320]
  441074:	add	x0, x0, #0x1
  441078:	str	x0, [x19, #320]
  44107c:	b	440d68 <nftw@plt+0x3e1e8>
  441080:	strb	wzr, [x19, #255]
  441084:	ldr	x3, [x19, #272]
  441088:	ldr	x2, [x19, #280]
  44108c:	mov	x1, #0xff                  	// #255
  441090:	mov	x0, x19
  441094:	blr	x3
  441098:	ldr	x0, [x19, #320]
  44109c:	add	x0, x0, #0x1
  4410a0:	str	x0, [x19, #320]
  4410a4:	mov	x0, #0x1                   	// #1
  4410a8:	str	x0, [x19, #256]
  4410ac:	mov	w0, #0x29                  	// #41
  4410b0:	strb	w0, [x19]
  4410b4:	strb	w0, [x19, #264]
  4410b8:	ldr	w0, [x22]
  4410bc:	cmp	w0, #0x3e
  4410c0:	b.eq	441100 <nftw@plt+0x3e580>  // b.none
  4410c4:	cmp	w21, #0x8
  4410c8:	b.ne	440dc4 <nftw@plt+0x3e244>  // b.any
  4410cc:	b	441128 <nftw@plt+0x3e5a8>
  4410d0:	cmp	x2, #0xff
  4410d4:	b.ne	441100 <nftw@plt+0x3e580>  // b.any
  4410d8:	strb	wzr, [x19, #255]
  4410dc:	ldr	x3, [x19, #272]
  4410e0:	ldr	x2, [x19, #280]
  4410e4:	mov	x1, #0xff                  	// #255
  4410e8:	mov	x0, x19
  4410ec:	blr	x3
  4410f0:	str	xzr, [x19, #256]
  4410f4:	ldr	x0, [x19, #320]
  4410f8:	add	x0, x0, #0x1
  4410fc:	str	x0, [x19, #320]
  441100:	ldr	x1, [x19, #256]
  441104:	add	x0, x1, #0x1
  441108:	str	x0, [x19, #256]
  44110c:	mov	w0, #0x2d                  	// #45
  441110:	strb	w0, [x19, x1]
  441114:	strb	w0, [x19, #264]
  441118:	b	440dbc <nftw@plt+0x3e23c>
  44111c:	ldr	x0, [x19, #256]
  441120:	cmp	x0, #0xff
  441124:	b.eq	441184 <nftw@plt+0x3e604>  // b.none
  441128:	ldr	x1, [x19, #256]
  44112c:	add	x0, x1, #0x1
  441130:	str	x0, [x19, #256]
  441134:	mov	w0, #0x5b                  	// #91
  441138:	strb	w0, [x19, x1]
  44113c:	strb	w0, [x19, #264]
  441140:	ldr	x2, [x22, #16]
  441144:	mov	w1, w20
  441148:	mov	x0, x19
  44114c:	bl	441f24 <nftw@plt+0x3f3a4>
  441150:	ldr	x0, [x19, #256]
  441154:	cmp	x0, #0xff
  441158:	b.eq	4411b0 <nftw@plt+0x3e630>  // b.none
  44115c:	ldr	x1, [x19, #256]
  441160:	add	x0, x1, #0x1
  441164:	str	x0, [x19, #256]
  441168:	mov	w0, #0x5d                  	// #93
  44116c:	strb	w0, [x19, x1]
  441170:	strb	w0, [x19, #264]
  441174:	ldp	x21, x22, [sp, #32]
  441178:	ldp	x23, x24, [sp, #48]
  44117c:	ldp	x25, x26, [sp, #64]
  441180:	b	441de4 <nftw@plt+0x3f264>
  441184:	strb	wzr, [x19, #255]
  441188:	ldr	x3, [x19, #272]
  44118c:	ldr	x2, [x19, #280]
  441190:	mov	x1, #0xff                  	// #255
  441194:	mov	x0, x19
  441198:	blr	x3
  44119c:	str	xzr, [x19, #256]
  4411a0:	ldr	x0, [x19, #320]
  4411a4:	add	x0, x0, #0x1
  4411a8:	str	x0, [x19, #320]
  4411ac:	b	441128 <nftw@plt+0x3e5a8>
  4411b0:	strb	wzr, [x19, #255]
  4411b4:	ldr	x3, [x19, #272]
  4411b8:	ldr	x2, [x19, #280]
  4411bc:	mov	x1, #0xff                  	// #255
  4411c0:	mov	x0, x19
  4411c4:	blr	x3
  4411c8:	str	xzr, [x19, #256]
  4411cc:	ldr	x0, [x19, #320]
  4411d0:	add	x0, x0, #0x1
  4411d4:	str	x0, [x19, #320]
  4411d8:	b	44115c <nftw@plt+0x3e5dc>
  4411dc:	ldr	w2, [x22, #8]
  4411e0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4411e4:	add	x1, x1, #0x3f8
  4411e8:	add	x0, sp, #0x70
  4411ec:	bl	4025b0 <sprintf@plt>
  4411f0:	add	x0, sp, #0x70
  4411f4:	bl	4024f0 <strlen@plt>
  4411f8:	cbz	x0, 441f00 <nftw@plt+0x3f380>
  4411fc:	add	x20, sp, #0x70
  441200:	add	x22, x0, x20
  441204:	mov	x23, #0xff                  	// #255
  441208:	b	44122c <nftw@plt+0x3e6ac>
  44120c:	ldr	x0, [x19, #256]
  441210:	add	x1, x0, #0x1
  441214:	str	x1, [x19, #256]
  441218:	strb	w21, [x19, x0]
  44121c:	strb	w21, [x19, #264]
  441220:	add	x20, x20, #0x1
  441224:	cmp	x20, x22
  441228:	b.eq	441268 <nftw@plt+0x3e6e8>  // b.none
  44122c:	ldrb	w21, [x20]
  441230:	ldr	x0, [x19, #256]
  441234:	cmp	x0, #0xff
  441238:	b.ne	44120c <nftw@plt+0x3e68c>  // b.any
  44123c:	strb	wzr, [x19, #255]
  441240:	ldr	x3, [x19, #272]
  441244:	ldr	x2, [x19, #280]
  441248:	mov	x1, x23
  44124c:	mov	x0, x19
  441250:	blr	x3
  441254:	str	xzr, [x19, #256]
  441258:	ldr	x0, [x19, #320]
  44125c:	add	x0, x0, #0x1
  441260:	str	x0, [x19, #320]
  441264:	b	44120c <nftw@plt+0x3e68c>
  441268:	ldp	x21, x22, [sp, #32]
  44126c:	ldp	x23, x24, [sp, #48]
  441270:	ldp	x25, x26, [sp, #64]
  441274:	b	441de4 <nftw@plt+0x3f264>
  441278:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44127c:	add	x21, x21, #0x178
  441280:	add	x24, x21, #0xe
  441284:	mov	x25, #0xff                  	// #255
  441288:	b	4412ac <nftw@plt+0x3e72c>
  44128c:	ldr	x0, [x19, #256]
  441290:	add	x1, x0, #0x1
  441294:	str	x1, [x19, #256]
  441298:	strb	w23, [x19, x0]
  44129c:	strb	w23, [x19, #264]
  4412a0:	add	x21, x21, #0x1
  4412a4:	cmp	x21, x24
  4412a8:	b.eq	4412e8 <nftw@plt+0x3e768>  // b.none
  4412ac:	ldrb	w23, [x21]
  4412b0:	ldr	x0, [x19, #256]
  4412b4:	cmp	x0, #0xff
  4412b8:	b.ne	44128c <nftw@plt+0x3e70c>  // b.any
  4412bc:	strb	wzr, [x19, #255]
  4412c0:	ldr	x3, [x19, #272]
  4412c4:	ldr	x2, [x19, #280]
  4412c8:	mov	x1, x25
  4412cc:	mov	x0, x19
  4412d0:	blr	x3
  4412d4:	str	xzr, [x19, #256]
  4412d8:	ldr	x0, [x19, #320]
  4412dc:	add	x0, x0, #0x1
  4412e0:	str	x0, [x19, #320]
  4412e4:	b	44128c <nftw@plt+0x3e70c>
  4412e8:	ldr	x2, [x22, #8]
  4412ec:	mov	w1, w20
  4412f0:	mov	x0, x19
  4412f4:	bl	441f24 <nftw@plt+0x3f3a4>
  4412f8:	ldp	x21, x22, [sp, #32]
  4412fc:	ldp	x23, x24, [sp, #48]
  441300:	ldp	x25, x26, [sp, #64]
  441304:	b	441de4 <nftw@plt+0x3f264>
  441308:	ldr	x2, [x22, #8]
  44130c:	mov	w1, w20
  441310:	mov	x0, x19
  441314:	bl	441f24 <nftw@plt+0x3f3a4>
  441318:	ldr	x2, [x22, #16]
  44131c:	mov	w1, w20
  441320:	mov	x0, x19
  441324:	bl	441f24 <nftw@plt+0x3f3a4>
  441328:	ldp	x21, x22, [sp, #32]
  44132c:	ldp	x23, x24, [sp, #48]
  441330:	ldp	x25, x26, [sp, #64]
  441334:	b	441de4 <nftw@plt+0x3f264>
  441338:	ldrb	w20, [x22, #8]
  44133c:	ldr	x0, [x19, #256]
  441340:	cmp	x0, #0xff
  441344:	b.eq	44136c <nftw@plt+0x3e7ec>  // b.none
  441348:	ldr	x0, [x19, #256]
  44134c:	add	x1, x0, #0x1
  441350:	str	x1, [x19, #256]
  441354:	strb	w20, [x19, x0]
  441358:	strb	w20, [x19, #264]
  44135c:	ldp	x21, x22, [sp, #32]
  441360:	ldp	x23, x24, [sp, #48]
  441364:	ldp	x25, x26, [sp, #64]
  441368:	b	441de4 <nftw@plt+0x3f264>
  44136c:	strb	wzr, [x19, #255]
  441370:	ldr	x3, [x19, #272]
  441374:	ldr	x2, [x19, #280]
  441378:	mov	x1, #0xff                  	// #255
  44137c:	mov	x0, x19
  441380:	blr	x3
  441384:	str	xzr, [x19, #256]
  441388:	ldr	x0, [x19, #320]
  44138c:	add	x0, x0, #0x1
  441390:	str	x0, [x19, #320]
  441394:	b	441348 <nftw@plt+0x3e7c8>
  441398:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44139c:	add	x21, x21, #0x188
  4413a0:	add	x24, x21, #0xa
  4413a4:	mov	x25, #0xff                  	// #255
  4413a8:	b	4413cc <nftw@plt+0x3e84c>
  4413ac:	ldr	x0, [x19, #256]
  4413b0:	add	x1, x0, #0x1
  4413b4:	str	x1, [x19, #256]
  4413b8:	strb	w23, [x19, x0]
  4413bc:	strb	w23, [x19, #264]
  4413c0:	add	x21, x21, #0x1
  4413c4:	cmp	x21, x24
  4413c8:	b.eq	441408 <nftw@plt+0x3e888>  // b.none
  4413cc:	ldrb	w23, [x21]
  4413d0:	ldr	x0, [x19, #256]
  4413d4:	cmp	x0, #0xff
  4413d8:	b.ne	4413ac <nftw@plt+0x3e82c>  // b.any
  4413dc:	strb	wzr, [x19, #255]
  4413e0:	ldr	x3, [x19, #272]
  4413e4:	ldr	x2, [x19, #280]
  4413e8:	mov	x1, x25
  4413ec:	mov	x0, x19
  4413f0:	blr	x3
  4413f4:	str	xzr, [x19, #256]
  4413f8:	ldr	x0, [x19, #320]
  4413fc:	add	x0, x0, #0x1
  441400:	str	x0, [x19, #320]
  441404:	b	4413ac <nftw@plt+0x3e82c>
  441408:	ldr	x2, [x22, #8]
  44140c:	mov	w1, w20
  441410:	mov	x0, x19
  441414:	bl	441f24 <nftw@plt+0x3f3a4>
  441418:	ldr	x0, [x19, #256]
  44141c:	cmp	x0, #0xff
  441420:	b.eq	44144c <nftw@plt+0x3e8cc>  // b.none
  441424:	ldr	x1, [x19, #256]
  441428:	add	x0, x1, #0x1
  44142c:	str	x0, [x19, #256]
  441430:	mov	w0, #0x29                  	// #41
  441434:	strb	w0, [x19, x1]
  441438:	strb	w0, [x19, #264]
  44143c:	ldp	x21, x22, [sp, #32]
  441440:	ldp	x23, x24, [sp, #48]
  441444:	ldp	x25, x26, [sp, #64]
  441448:	b	441de4 <nftw@plt+0x3f264>
  44144c:	strb	wzr, [x19, #255]
  441450:	ldr	x3, [x19, #272]
  441454:	ldr	x2, [x19, #280]
  441458:	mov	x1, #0xff                  	// #255
  44145c:	mov	x0, x19
  441460:	blr	x3
  441464:	str	xzr, [x19, #256]
  441468:	ldr	x0, [x19, #320]
  44146c:	add	x0, x0, #0x1
  441470:	str	x0, [x19, #320]
  441474:	b	441424 <nftw@plt+0x3e8a4>
  441478:	ldr	x1, [x22, #8]
  44147c:	mov	x0, x19
  441480:	bl	43da48 <nftw@plt+0x3aec8>
  441484:	cbz	x0, 4414ac <nftw@plt+0x3e92c>
  441488:	stp	x27, x28, [sp, #80]
  44148c:	bl	43db40 <nftw@plt+0x3afc0>
  441490:	mov	w25, w0
  441494:	ldr	x27, [x22, #8]
  441498:	cmp	w0, #0x0
  44149c:	b.le	441f10 <nftw@plt+0x3f390>
  4414a0:	sub	w28, w0, #0x1
  4414a4:	mov	x26, #0xff                  	// #255
  4414a8:	b	441548 <nftw@plt+0x3e9c8>
  4414ac:	ldr	x2, [x22, #8]
  4414b0:	mov	w1, w20
  4414b4:	mov	x0, x19
  4414b8:	bl	44330c <nftw@plt+0x4078c>
  4414bc:	mov	x2, #0x3                   	// #3
  4414c0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4414c4:	add	x1, x1, #0x348
  4414c8:	mov	x0, x19
  4414cc:	bl	43d938 <nftw@plt+0x3adb8>
  4414d0:	ldp	x21, x22, [sp, #32]
  4414d4:	ldp	x23, x24, [sp, #48]
  4414d8:	ldp	x25, x26, [sp, #64]
  4414dc:	b	441de4 <nftw@plt+0x3f264>
  4414e0:	ldr	x0, [x19, #256]
  4414e4:	add	x1, x0, #0x1
  4414e8:	str	x1, [x19, #256]
  4414ec:	strb	w23, [x19, x0]
  4414f0:	strb	w23, [x19, #264]
  4414f4:	add	x22, x22, #0x1
  4414f8:	cmp	x22, x24
  4414fc:	b.eq	44153c <nftw@plt+0x3e9bc>  // b.none
  441500:	ldrb	w23, [x22]
  441504:	ldr	x0, [x19, #256]
  441508:	cmp	x0, #0xff
  44150c:	b.ne	4414e0 <nftw@plt+0x3e960>  // b.any
  441510:	strb	wzr, [x19, #255]
  441514:	ldr	x3, [x19, #272]
  441518:	ldr	x2, [x19, #280]
  44151c:	mov	x1, x26
  441520:	mov	x0, x19
  441524:	blr	x3
  441528:	str	xzr, [x19, #256]
  44152c:	ldr	x0, [x19, #320]
  441530:	add	x0, x0, #0x1
  441534:	str	x0, [x19, #320]
  441538:	b	4414e0 <nftw@plt+0x3e960>
  44153c:	add	w21, w21, #0x1
  441540:	cmp	w25, w21
  441544:	b.eq	441574 <nftw@plt+0x3e9f4>  // b.none
  441548:	str	w21, [x19, #316]
  44154c:	mov	x2, x27
  441550:	mov	w1, w20
  441554:	mov	x0, x19
  441558:	bl	441f24 <nftw@plt+0x3f3a4>
  44155c:	cmp	w28, w21
  441560:	b.le	44153c <nftw@plt+0x3e9bc>
  441564:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441568:	add	x22, x0, #0xf0
  44156c:	add	x24, x22, #0x2
  441570:	b	441500 <nftw@plt+0x3e980>
  441574:	ldp	x21, x22, [sp, #32]
  441578:	ldp	x23, x24, [sp, #48]
  44157c:	ldp	x25, x26, [sp, #64]
  441580:	ldp	x27, x28, [sp, #80]
  441584:	b	441de4 <nftw@plt+0x3f264>
  441588:	ldr	x23, [x22, #8]
  44158c:	cbnz	x23, 441610 <nftw@plt+0x3ea90>
  441590:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441594:	add	x20, x20, #0x198
  441598:	add	x22, x20, #0x4
  44159c:	mov	x23, #0xff                  	// #255
  4415a0:	b	4415c4 <nftw@plt+0x3ea44>
  4415a4:	ldr	x0, [x19, #256]
  4415a8:	add	x1, x0, #0x1
  4415ac:	str	x1, [x19, #256]
  4415b0:	strb	w21, [x19, x0]
  4415b4:	strb	w21, [x19, #264]
  4415b8:	add	x20, x20, #0x1
  4415bc:	cmp	x22, x20
  4415c0:	b.eq	441600 <nftw@plt+0x3ea80>  // b.none
  4415c4:	ldrb	w21, [x20]
  4415c8:	ldr	x0, [x19, #256]
  4415cc:	cmp	x0, #0xff
  4415d0:	b.ne	4415a4 <nftw@plt+0x3ea24>  // b.any
  4415d4:	strb	wzr, [x19, #255]
  4415d8:	ldr	x3, [x19, #272]
  4415dc:	ldr	x2, [x19, #280]
  4415e0:	mov	x1, x23
  4415e4:	mov	x0, x19
  4415e8:	blr	x3
  4415ec:	str	xzr, [x19, #256]
  4415f0:	ldr	x0, [x19, #320]
  4415f4:	add	x0, x0, #0x1
  4415f8:	str	x0, [x19, #320]
  4415fc:	b	4415a4 <nftw@plt+0x3ea24>
  441600:	ldp	x21, x22, [sp, #32]
  441604:	ldp	x23, x24, [sp, #48]
  441608:	ldp	x25, x26, [sp, #64]
  44160c:	b	441de4 <nftw@plt+0x3f264>
  441610:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441614:	add	x20, x20, #0x1a0
  441618:	add	x22, x20, #0x6
  44161c:	mov	x24, #0xff                  	// #255
  441620:	b	441644 <nftw@plt+0x3eac4>
  441624:	ldr	x0, [x19, #256]
  441628:	add	x1, x0, #0x1
  44162c:	str	x1, [x19, #256]
  441630:	strb	w21, [x19, x0]
  441634:	strb	w21, [x19, #264]
  441638:	add	x20, x20, #0x1
  44163c:	cmp	x20, x22
  441640:	b.eq	441680 <nftw@plt+0x3eb00>  // b.none
  441644:	ldrb	w21, [x20]
  441648:	ldr	x0, [x19, #256]
  44164c:	cmp	x0, #0xff
  441650:	b.ne	441624 <nftw@plt+0x3eaa4>  // b.any
  441654:	strb	wzr, [x19, #255]
  441658:	ldr	x3, [x19, #272]
  44165c:	ldr	x2, [x19, #280]
  441660:	mov	x1, x24
  441664:	mov	x0, x19
  441668:	blr	x3
  44166c:	str	xzr, [x19, #256]
  441670:	ldr	x0, [x19, #320]
  441674:	add	x0, x0, #0x1
  441678:	str	x0, [x19, #320]
  44167c:	b	441624 <nftw@plt+0x3eaa4>
  441680:	mov	w2, w23
  441684:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  441688:	add	x1, x1, #0x3f8
  44168c:	add	x0, sp, #0x70
  441690:	bl	4025b0 <sprintf@plt>
  441694:	add	x0, sp, #0x70
  441698:	bl	4024f0 <strlen@plt>
  44169c:	cbz	x0, 44170c <nftw@plt+0x3eb8c>
  4416a0:	add	x20, sp, #0x70
  4416a4:	add	x22, x20, x0
  4416a8:	mov	x23, #0xff                  	// #255
  4416ac:	b	4416d0 <nftw@plt+0x3eb50>
  4416b0:	ldr	x0, [x19, #256]
  4416b4:	add	x1, x0, #0x1
  4416b8:	str	x1, [x19, #256]
  4416bc:	strb	w21, [x19, x0]
  4416c0:	strb	w21, [x19, #264]
  4416c4:	add	x20, x20, #0x1
  4416c8:	cmp	x22, x20
  4416cc:	b.eq	44170c <nftw@plt+0x3eb8c>  // b.none
  4416d0:	ldrb	w21, [x20]
  4416d4:	ldr	x0, [x19, #256]
  4416d8:	cmp	x0, #0xff
  4416dc:	b.ne	4416b0 <nftw@plt+0x3eb30>  // b.any
  4416e0:	strb	wzr, [x19, #255]
  4416e4:	ldr	x3, [x19, #272]
  4416e8:	ldr	x2, [x19, #280]
  4416ec:	mov	x1, x23
  4416f0:	mov	x0, x19
  4416f4:	blr	x3
  4416f8:	str	xzr, [x19, #256]
  4416fc:	ldr	x0, [x19, #320]
  441700:	add	x0, x0, #0x1
  441704:	str	x0, [x19, #320]
  441708:	b	4416b0 <nftw@plt+0x3eb30>
  44170c:	ldr	x0, [x19, #256]
  441710:	cmp	x0, #0xff
  441714:	b.eq	441740 <nftw@plt+0x3ebc0>  // b.none
  441718:	ldr	x1, [x19, #256]
  44171c:	add	x0, x1, #0x1
  441720:	str	x0, [x19, #256]
  441724:	mov	w0, #0x7d                  	// #125
  441728:	strb	w0, [x19, x1]
  44172c:	strb	w0, [x19, #264]
  441730:	ldp	x21, x22, [sp, #32]
  441734:	ldp	x23, x24, [sp, #48]
  441738:	ldp	x25, x26, [sp, #64]
  44173c:	b	441de4 <nftw@plt+0x3f264>
  441740:	strb	wzr, [x19, #255]
  441744:	ldr	x3, [x19, #272]
  441748:	ldr	x2, [x19, #280]
  44174c:	mov	x1, #0xff                  	// #255
  441750:	mov	x0, x19
  441754:	blr	x3
  441758:	str	xzr, [x19, #256]
  44175c:	ldr	x0, [x19, #320]
  441760:	add	x0, x0, #0x1
  441764:	str	x0, [x19, #320]
  441768:	b	441718 <nftw@plt+0x3eb98>
  44176c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441770:	add	x21, x21, #0x1a8
  441774:	add	x24, x21, #0x1d
  441778:	mov	x25, #0xff                  	// #255
  44177c:	b	4417a0 <nftw@plt+0x3ec20>
  441780:	ldr	x0, [x19, #256]
  441784:	add	x1, x0, #0x1
  441788:	str	x1, [x19, #256]
  44178c:	strb	w23, [x19, x0]
  441790:	strb	w23, [x19, #264]
  441794:	add	x21, x21, #0x1
  441798:	cmp	x21, x24
  44179c:	b.eq	4417dc <nftw@plt+0x3ec5c>  // b.none
  4417a0:	ldrb	w23, [x21]
  4417a4:	ldr	x0, [x19, #256]
  4417a8:	cmp	x0, #0xff
  4417ac:	b.ne	441780 <nftw@plt+0x3ec00>  // b.any
  4417b0:	strb	wzr, [x19, #255]
  4417b4:	ldr	x3, [x19, #272]
  4417b8:	ldr	x2, [x19, #280]
  4417bc:	mov	x1, x25
  4417c0:	mov	x0, x19
  4417c4:	blr	x3
  4417c8:	str	xzr, [x19, #256]
  4417cc:	ldr	x0, [x19, #320]
  4417d0:	add	x0, x0, #0x1
  4417d4:	str	x0, [x19, #320]
  4417d8:	b	441780 <nftw@plt+0x3ec00>
  4417dc:	ldr	x2, [x22, #8]
  4417e0:	mov	w1, w20
  4417e4:	mov	x0, x19
  4417e8:	bl	441f24 <nftw@plt+0x3f3a4>
  4417ec:	ldp	x21, x22, [sp, #32]
  4417f0:	ldp	x23, x24, [sp, #48]
  4417f4:	ldp	x25, x26, [sp, #64]
  4417f8:	b	441de4 <nftw@plt+0x3f264>
  4417fc:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441800:	add	x21, x21, #0x1c8
  441804:	add	x24, x21, #0x1c
  441808:	mov	x25, #0xff                  	// #255
  44180c:	b	441830 <nftw@plt+0x3ecb0>
  441810:	ldr	x0, [x19, #256]
  441814:	add	x1, x0, #0x1
  441818:	str	x1, [x19, #256]
  44181c:	strb	w23, [x19, x0]
  441820:	strb	w23, [x19, #264]
  441824:	add	x21, x21, #0x1
  441828:	cmp	x21, x24
  44182c:	b.eq	44186c <nftw@plt+0x3ecec>  // b.none
  441830:	ldrb	w23, [x21]
  441834:	ldr	x0, [x19, #256]
  441838:	cmp	x0, #0xff
  44183c:	b.ne	441810 <nftw@plt+0x3ec90>  // b.any
  441840:	strb	wzr, [x19, #255]
  441844:	ldr	x3, [x19, #272]
  441848:	ldr	x2, [x19, #280]
  44184c:	mov	x1, x25
  441850:	mov	x0, x19
  441854:	blr	x3
  441858:	str	xzr, [x19, #256]
  44185c:	ldr	x0, [x19, #320]
  441860:	add	x0, x0, #0x1
  441864:	str	x0, [x19, #320]
  441868:	b	441810 <nftw@plt+0x3ec90>
  44186c:	ldr	x2, [x22, #8]
  441870:	mov	w1, w20
  441874:	mov	x0, x19
  441878:	bl	441f24 <nftw@plt+0x3f3a4>
  44187c:	ldp	x21, x22, [sp, #32]
  441880:	ldp	x23, x24, [sp, #48]
  441884:	ldp	x25, x26, [sp, #64]
  441888:	b	441de4 <nftw@plt+0x3f264>
  44188c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441890:	add	x21, x21, #0x1e8
  441894:	add	x24, x21, #0x8
  441898:	mov	x25, #0xff                  	// #255
  44189c:	b	4418c0 <nftw@plt+0x3ed40>
  4418a0:	ldr	x0, [x19, #256]
  4418a4:	add	x1, x0, #0x1
  4418a8:	str	x1, [x19, #256]
  4418ac:	strb	w23, [x19, x0]
  4418b0:	strb	w23, [x19, #264]
  4418b4:	add	x21, x21, #0x1
  4418b8:	cmp	x21, x24
  4418bc:	b.eq	4418fc <nftw@plt+0x3ed7c>  // b.none
  4418c0:	ldrb	w23, [x21]
  4418c4:	ldr	x0, [x19, #256]
  4418c8:	cmp	x0, #0xff
  4418cc:	b.ne	4418a0 <nftw@plt+0x3ed20>  // b.any
  4418d0:	strb	wzr, [x19, #255]
  4418d4:	ldr	x3, [x19, #272]
  4418d8:	ldr	x2, [x19, #280]
  4418dc:	mov	x1, x25
  4418e0:	mov	x0, x19
  4418e4:	blr	x3
  4418e8:	str	xzr, [x19, #256]
  4418ec:	ldr	x0, [x19, #320]
  4418f0:	add	x0, x0, #0x1
  4418f4:	str	x0, [x19, #320]
  4418f8:	b	4418a0 <nftw@plt+0x3ed20>
  4418fc:	ldr	w0, [x19, #312]
  441900:	add	w0, w0, #0x1
  441904:	str	w0, [x19, #312]
  441908:	ldr	x2, [x22, #8]
  44190c:	mov	w1, w20
  441910:	mov	x0, x19
  441914:	bl	441f24 <nftw@plt+0x3f3a4>
  441918:	ldr	w0, [x19, #312]
  44191c:	sub	w0, w0, #0x1
  441920:	str	w0, [x19, #312]
  441924:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441928:	add	x20, x20, #0x1f8
  44192c:	add	x23, x20, #0x2
  441930:	mov	x24, #0xff                  	// #255
  441934:	b	441958 <nftw@plt+0x3edd8>
  441938:	ldr	x0, [x19, #256]
  44193c:	add	x1, x0, #0x1
  441940:	str	x1, [x19, #256]
  441944:	strb	w21, [x19, x0]
  441948:	strb	w21, [x19, #264]
  44194c:	add	x20, x20, #0x1
  441950:	cmp	x20, x23
  441954:	b.eq	441994 <nftw@plt+0x3ee14>  // b.none
  441958:	ldrb	w21, [x20]
  44195c:	ldr	x0, [x19, #256]
  441960:	cmp	x0, #0xff
  441964:	b.ne	441938 <nftw@plt+0x3edb8>  // b.any
  441968:	strb	wzr, [x19, #255]
  44196c:	ldr	x3, [x19, #272]
  441970:	ldr	x2, [x19, #280]
  441974:	mov	x1, x24
  441978:	mov	x0, x19
  44197c:	blr	x3
  441980:	str	xzr, [x19, #256]
  441984:	ldr	x0, [x19, #320]
  441988:	add	x0, x0, #0x1
  44198c:	str	x0, [x19, #320]
  441990:	b	441938 <nftw@plt+0x3edb8>
  441994:	ldr	w2, [x22, #16]
  441998:	add	w2, w2, #0x1
  44199c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4419a0:	add	x1, x1, #0x3f8
  4419a4:	add	x0, sp, #0x70
  4419a8:	bl	4025b0 <sprintf@plt>
  4419ac:	add	x0, sp, #0x70
  4419b0:	bl	4024f0 <strlen@plt>
  4419b4:	cbz	x0, 441a24 <nftw@plt+0x3eea4>
  4419b8:	add	x20, sp, #0x70
  4419bc:	add	x22, x0, x20
  4419c0:	mov	x23, #0xff                  	// #255
  4419c4:	b	4419e8 <nftw@plt+0x3ee68>
  4419c8:	ldr	x0, [x19, #256]
  4419cc:	add	x1, x0, #0x1
  4419d0:	str	x1, [x19, #256]
  4419d4:	strb	w21, [x19, x0]
  4419d8:	strb	w21, [x19, #264]
  4419dc:	add	x20, x20, #0x1
  4419e0:	cmp	x20, x22
  4419e4:	b.eq	441a24 <nftw@plt+0x3eea4>  // b.none
  4419e8:	ldrb	w21, [x20]
  4419ec:	ldr	x0, [x19, #256]
  4419f0:	cmp	x0, #0xff
  4419f4:	b.ne	4419c8 <nftw@plt+0x3ee48>  // b.any
  4419f8:	strb	wzr, [x19, #255]
  4419fc:	ldr	x3, [x19, #272]
  441a00:	ldr	x2, [x19, #280]
  441a04:	mov	x1, x23
  441a08:	mov	x0, x19
  441a0c:	blr	x3
  441a10:	str	xzr, [x19, #256]
  441a14:	ldr	x0, [x19, #320]
  441a18:	add	x0, x0, #0x1
  441a1c:	str	x0, [x19, #320]
  441a20:	b	4419c8 <nftw@plt+0x3ee48>
  441a24:	ldr	x0, [x19, #256]
  441a28:	cmp	x0, #0xff
  441a2c:	b.eq	441a58 <nftw@plt+0x3eed8>  // b.none
  441a30:	ldr	x1, [x19, #256]
  441a34:	add	x0, x1, #0x1
  441a38:	str	x0, [x19, #256]
  441a3c:	mov	w0, #0x7d                  	// #125
  441a40:	strb	w0, [x19, x1]
  441a44:	strb	w0, [x19, #264]
  441a48:	ldp	x21, x22, [sp, #32]
  441a4c:	ldp	x23, x24, [sp, #48]
  441a50:	ldp	x25, x26, [sp, #64]
  441a54:	b	441de4 <nftw@plt+0x3f264>
  441a58:	strb	wzr, [x19, #255]
  441a5c:	ldr	x3, [x19, #272]
  441a60:	ldr	x2, [x19, #280]
  441a64:	mov	x1, #0xff                  	// #255
  441a68:	mov	x0, x19
  441a6c:	blr	x3
  441a70:	str	xzr, [x19, #256]
  441a74:	ldr	x0, [x19, #320]
  441a78:	add	x0, x0, #0x1
  441a7c:	str	x0, [x19, #320]
  441a80:	b	441a30 <nftw@plt+0x3eeb0>
  441a84:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441a88:	add	x20, x20, #0x200
  441a8c:	add	x23, x20, #0xe
  441a90:	mov	x24, #0xff                  	// #255
  441a94:	b	441ab8 <nftw@plt+0x3ef38>
  441a98:	ldr	x0, [x19, #256]
  441a9c:	add	x1, x0, #0x1
  441aa0:	str	x1, [x19, #256]
  441aa4:	strb	w21, [x19, x0]
  441aa8:	strb	w21, [x19, #264]
  441aac:	add	x20, x20, #0x1
  441ab0:	cmp	x20, x23
  441ab4:	b.eq	441af4 <nftw@plt+0x3ef74>  // b.none
  441ab8:	ldrb	w21, [x20]
  441abc:	ldr	x0, [x19, #256]
  441ac0:	cmp	x0, #0xff
  441ac4:	b.ne	441a98 <nftw@plt+0x3ef18>  // b.any
  441ac8:	strb	wzr, [x19, #255]
  441acc:	ldr	x3, [x19, #272]
  441ad0:	ldr	x2, [x19, #280]
  441ad4:	mov	x1, x24
  441ad8:	mov	x0, x19
  441adc:	blr	x3
  441ae0:	str	xzr, [x19, #256]
  441ae4:	ldr	x0, [x19, #320]
  441ae8:	add	x0, x0, #0x1
  441aec:	str	x0, [x19, #320]
  441af0:	b	441a98 <nftw@plt+0x3ef18>
  441af4:	ldr	x2, [x22, #8]
  441af8:	add	w2, w2, #0x1
  441afc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  441b00:	add	x1, x1, #0x3f8
  441b04:	add	x0, sp, #0x70
  441b08:	bl	4025b0 <sprintf@plt>
  441b0c:	add	x0, sp, #0x70
  441b10:	bl	4024f0 <strlen@plt>
  441b14:	cbz	x0, 441b84 <nftw@plt+0x3f004>
  441b18:	add	x20, sp, #0x70
  441b1c:	add	x22, x0, x20
  441b20:	mov	x23, #0xff                  	// #255
  441b24:	b	441b48 <nftw@plt+0x3efc8>
  441b28:	ldr	x0, [x19, #256]
  441b2c:	add	x1, x0, #0x1
  441b30:	str	x1, [x19, #256]
  441b34:	strb	w21, [x19, x0]
  441b38:	strb	w21, [x19, #264]
  441b3c:	add	x20, x20, #0x1
  441b40:	cmp	x20, x22
  441b44:	b.eq	441b84 <nftw@plt+0x3f004>  // b.none
  441b48:	ldrb	w21, [x20]
  441b4c:	ldr	x0, [x19, #256]
  441b50:	cmp	x0, #0xff
  441b54:	b.ne	441b28 <nftw@plt+0x3efa8>  // b.any
  441b58:	strb	wzr, [x19, #255]
  441b5c:	ldr	x3, [x19, #272]
  441b60:	ldr	x2, [x19, #280]
  441b64:	mov	x1, x23
  441b68:	mov	x0, x19
  441b6c:	blr	x3
  441b70:	str	xzr, [x19, #256]
  441b74:	ldr	x0, [x19, #320]
  441b78:	add	x0, x0, #0x1
  441b7c:	str	x0, [x19, #320]
  441b80:	b	441b28 <nftw@plt+0x3efa8>
  441b84:	ldr	x0, [x19, #256]
  441b88:	cmp	x0, #0xff
  441b8c:	b.eq	441bb8 <nftw@plt+0x3f038>  // b.none
  441b90:	ldr	x1, [x19, #256]
  441b94:	add	x0, x1, #0x1
  441b98:	str	x0, [x19, #256]
  441b9c:	mov	w0, #0x7d                  	// #125
  441ba0:	strb	w0, [x19, x1]
  441ba4:	strb	w0, [x19, #264]
  441ba8:	ldp	x21, x22, [sp, #32]
  441bac:	ldp	x23, x24, [sp, #48]
  441bb0:	ldp	x25, x26, [sp, #64]
  441bb4:	b	441de4 <nftw@plt+0x3f264>
  441bb8:	strb	wzr, [x19, #255]
  441bbc:	ldr	x3, [x19, #272]
  441bc0:	ldr	x2, [x19, #280]
  441bc4:	mov	x1, #0xff                  	// #255
  441bc8:	mov	x0, x19
  441bcc:	blr	x3
  441bd0:	str	xzr, [x19, #256]
  441bd4:	ldr	x0, [x19, #320]
  441bd8:	add	x0, x0, #0x1
  441bdc:	str	x0, [x19, #320]
  441be0:	b	441b90 <nftw@plt+0x3f010>
  441be4:	ldr	x2, [x22, #8]
  441be8:	mov	w1, w20
  441bec:	mov	x0, x19
  441bf0:	bl	441f24 <nftw@plt+0x3f3a4>
  441bf4:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  441bf8:	add	x21, x21, #0x210
  441bfc:	add	x24, x21, #0x8
  441c00:	mov	x25, #0xff                  	// #255
  441c04:	b	441c28 <nftw@plt+0x3f0a8>
  441c08:	ldr	x0, [x19, #256]
  441c0c:	add	x1, x0, #0x1
  441c10:	str	x1, [x19, #256]
  441c14:	strb	w23, [x19, x0]
  441c18:	strb	w23, [x19, #264]
  441c1c:	add	x21, x21, #0x1
  441c20:	cmp	x21, x24
  441c24:	b.eq	441c64 <nftw@plt+0x3f0e4>  // b.none
  441c28:	ldrb	w23, [x21]
  441c2c:	ldr	x0, [x19, #256]
  441c30:	cmp	x0, #0xff
  441c34:	b.ne	441c08 <nftw@plt+0x3f088>  // b.any
  441c38:	strb	wzr, [x19, #255]
  441c3c:	ldr	x3, [x19, #272]
  441c40:	ldr	x2, [x19, #280]
  441c44:	mov	x1, x25
  441c48:	mov	x0, x19
  441c4c:	blr	x3
  441c50:	str	xzr, [x19, #256]
  441c54:	ldr	x0, [x19, #320]
  441c58:	add	x0, x0, #0x1
  441c5c:	str	x0, [x19, #320]
  441c60:	b	441c08 <nftw@plt+0x3f088>
  441c64:	ldr	x2, [x22, #16]
  441c68:	mov	w1, w20
  441c6c:	mov	x0, x19
  441c70:	bl	441f24 <nftw@plt+0x3f3a4>
  441c74:	ldr	x0, [x19, #256]
  441c78:	cmp	x0, #0xff
  441c7c:	b.eq	441ca8 <nftw@plt+0x3f128>  // b.none
  441c80:	ldr	x1, [x19, #256]
  441c84:	add	x0, x1, #0x1
  441c88:	str	x0, [x19, #256]
  441c8c:	mov	w0, #0x5d                  	// #93
  441c90:	strb	w0, [x19, x1]
  441c94:	strb	w0, [x19, #264]
  441c98:	ldp	x21, x22, [sp, #32]
  441c9c:	ldp	x23, x24, [sp, #48]
  441ca0:	ldp	x25, x26, [sp, #64]
  441ca4:	b	441de4 <nftw@plt+0x3f264>
  441ca8:	strb	wzr, [x19, #255]
  441cac:	ldr	x3, [x19, #272]
  441cb0:	ldr	x2, [x19, #280]
  441cb4:	mov	x1, #0xff                  	// #255
  441cb8:	mov	x0, x19
  441cbc:	blr	x3
  441cc0:	str	xzr, [x19, #256]
  441cc4:	ldr	x0, [x19, #320]
  441cc8:	add	x0, x0, #0x1
  441ccc:	str	x0, [x19, #320]
  441cd0:	b	441c80 <nftw@plt+0x3f100>
  441cd4:	ldp	x23, x24, [sp, #48]
  441cd8:	ldp	x25, x26, [sp, #64]
  441cdc:	mov	w0, #0x1                   	// #1
  441ce0:	str	w0, [x19, #304]
  441ce4:	ldp	x21, x22, [sp, #32]
  441ce8:	b	441de4 <nftw@plt+0x3f264>
  441cec:	mov	w0, #0x1                   	// #1
  441cf0:	str	w0, [x19, #304]
  441cf4:	ldp	x21, x22, [sp, #32]
  441cf8:	ldp	x23, x24, [sp, #48]
  441cfc:	ldp	x25, x26, [sp, #64]
  441d00:	ldp	x27, x28, [sp, #80]
  441d04:	b	441de4 <nftw@plt+0x3f264>
  441d08:	cmp	w28, #0x2
  441d0c:	b.eq	43e2c4 <nftw@plt+0x3b744>  // b.none
  441d10:	ldr	w0, [x21]
  441d14:	cmp	w0, #0x4
  441d18:	b.eq	43e384 <nftw@plt+0x3b804>  // b.none
  441d1c:	ldr	x2, [x22, #16]
  441d20:	mov	w1, w20
  441d24:	mov	x0, x19
  441d28:	bl	441f24 <nftw@plt+0x3f3a4>
  441d2c:	ldr	w0, [x21]
  441d30:	cmp	w0, #0x4
  441d34:	b.eq	43e398 <nftw@plt+0x3b818>  // b.none
  441d38:	cbz	w23, 43e41c <nftw@plt+0x3b89c>
  441d3c:	sub	w21, w23, #0x1
  441d40:	add	x0, sp, #0x70
  441d44:	add	x21, x0, x21, lsl #5
  441d48:	mov	w22, #0x20                  	// #32
  441d4c:	mov	x23, #0xff                  	// #255
  441d50:	b	43e3d8 <nftw@plt+0x3b858>
  441d54:	mov	w21, w2
  441d58:	b	441d60 <nftw@plt+0x3f1e0>
  441d5c:	mov	x22, x0
  441d60:	ldr	x0, [x19, #296]
  441d64:	str	x0, [sp, #112]
  441d68:	add	x0, sp, #0x70
  441d6c:	str	x0, [x19, #296]
  441d70:	str	x22, [sp, #120]
  441d74:	str	wzr, [sp, #128]
  441d78:	ldr	x0, [x19, #288]
  441d7c:	str	x0, [sp, #136]
  441d80:	ldr	x2, [x22, #8]
  441d84:	b	43f5f4 <nftw@plt+0x3ca74>
  441d88:	mov	x22, x0
  441d8c:	b	441d60 <nftw@plt+0x3f1e0>
  441d90:	ldr	x3, [x19, #328]
  441d94:	mov	x1, x3
  441d98:	cbz	x3, 441dbc <nftw@plt+0x3f23c>
  441d9c:	ldr	x2, [x1]
  441da0:	cmp	x2, x0
  441da4:	b.eq	43f540 <nftw@plt+0x3c9c0>  // b.none
  441da8:	cmp	x3, x1
  441dac:	ccmp	x2, x22, #0x0, ne  // ne = any
  441db0:	b.eq	43f540 <nftw@plt+0x3c9c0>  // b.none
  441db4:	ldr	x1, [x1, #8]
  441db8:	cbnz	x1, 441d9c <nftw@plt+0x3f21c>
  441dbc:	ldr	x23, [x19, #288]
  441dc0:	ldr	x1, [x4, #8]
  441dc4:	str	x1, [x19, #288]
  441dc8:	mov	x1, x0
  441dcc:	mov	x0, x19
  441dd0:	bl	43da10 <nftw@plt+0x3ae90>
  441dd4:	cbz	x0, 43f570 <nftw@plt+0x3c9f0>
  441dd8:	mov	w21, #0x1                   	// #1
  441ddc:	b	43f554 <nftw@plt+0x3c9d4>
  441de0:	ldp	x21, x22, [sp, #32]
  441de4:	ldp	x19, x20, [sp, #16]
  441de8:	ldp	x29, x30, [sp], #240
  441dec:	ret
  441df0:	ldp	x21, x22, [sp, #32]
  441df4:	ldp	x23, x24, [sp, #48]
  441df8:	ldp	x25, x26, [sp, #64]
  441dfc:	b	441de4 <nftw@plt+0x3f264>
  441e00:	ldp	x21, x22, [sp, #32]
  441e04:	ldp	x23, x24, [sp, #48]
  441e08:	ldp	x25, x26, [sp, #64]
  441e0c:	b	441de4 <nftw@plt+0x3f264>
  441e10:	ldp	x21, x22, [sp, #32]
  441e14:	ldp	x23, x24, [sp, #48]
  441e18:	ldp	x25, x26, [sp, #64]
  441e1c:	b	441de4 <nftw@plt+0x3f264>
  441e20:	ldp	x21, x22, [sp, #32]
  441e24:	ldp	x23, x24, [sp, #48]
  441e28:	ldp	x25, x26, [sp, #64]
  441e2c:	b	441de4 <nftw@plt+0x3f264>
  441e30:	ldp	x21, x22, [sp, #32]
  441e34:	ldp	x23, x24, [sp, #48]
  441e38:	ldp	x25, x26, [sp, #64]
  441e3c:	b	441de4 <nftw@plt+0x3f264>
  441e40:	ldp	x21, x22, [sp, #32]
  441e44:	ldp	x23, x24, [sp, #48]
  441e48:	ldp	x25, x26, [sp, #64]
  441e4c:	b	441de4 <nftw@plt+0x3f264>
  441e50:	ldp	x21, x22, [sp, #32]
  441e54:	ldp	x23, x24, [sp, #48]
  441e58:	ldp	x25, x26, [sp, #64]
  441e5c:	b	441de4 <nftw@plt+0x3f264>
  441e60:	ldp	x21, x22, [sp, #32]
  441e64:	ldp	x23, x24, [sp, #48]
  441e68:	ldp	x25, x26, [sp, #64]
  441e6c:	b	441de4 <nftw@plt+0x3f264>
  441e70:	ldp	x21, x22, [sp, #32]
  441e74:	ldp	x23, x24, [sp, #48]
  441e78:	ldp	x25, x26, [sp, #64]
  441e7c:	b	441de4 <nftw@plt+0x3f264>
  441e80:	ldp	x21, x22, [sp, #32]
  441e84:	ldp	x23, x24, [sp, #48]
  441e88:	ldp	x25, x26, [sp, #64]
  441e8c:	b	441de4 <nftw@plt+0x3f264>
  441e90:	ldp	x21, x22, [sp, #32]
  441e94:	ldp	x23, x24, [sp, #48]
  441e98:	ldp	x25, x26, [sp, #64]
  441e9c:	b	441de4 <nftw@plt+0x3f264>
  441ea0:	ldp	x21, x22, [sp, #32]
  441ea4:	ldp	x23, x24, [sp, #48]
  441ea8:	ldp	x25, x26, [sp, #64]
  441eac:	b	441de4 <nftw@plt+0x3f264>
  441eb0:	ldp	x21, x22, [sp, #32]
  441eb4:	ldp	x23, x24, [sp, #48]
  441eb8:	ldp	x25, x26, [sp, #64]
  441ebc:	b	441de4 <nftw@plt+0x3f264>
  441ec0:	ldp	x21, x22, [sp, #32]
  441ec4:	ldp	x23, x24, [sp, #48]
  441ec8:	ldp	x25, x26, [sp, #64]
  441ecc:	b	441de4 <nftw@plt+0x3f264>
  441ed0:	ldp	x21, x22, [sp, #32]
  441ed4:	ldp	x23, x24, [sp, #48]
  441ed8:	ldp	x25, x26, [sp, #64]
  441edc:	b	441de4 <nftw@plt+0x3f264>
  441ee0:	ldp	x21, x22, [sp, #32]
  441ee4:	ldp	x23, x24, [sp, #48]
  441ee8:	ldp	x25, x26, [sp, #64]
  441eec:	b	441de4 <nftw@plt+0x3f264>
  441ef0:	ldp	x21, x22, [sp, #32]
  441ef4:	ldp	x23, x24, [sp, #48]
  441ef8:	ldp	x25, x26, [sp, #64]
  441efc:	b	441de4 <nftw@plt+0x3f264>
  441f00:	ldp	x21, x22, [sp, #32]
  441f04:	ldp	x23, x24, [sp, #48]
  441f08:	ldp	x25, x26, [sp, #64]
  441f0c:	b	441de4 <nftw@plt+0x3f264>
  441f10:	ldp	x21, x22, [sp, #32]
  441f14:	ldp	x23, x24, [sp, #48]
  441f18:	ldp	x25, x26, [sp, #64]
  441f1c:	ldp	x27, x28, [sp, #80]
  441f20:	b	441de4 <nftw@plt+0x3f264>
  441f24:	stp	x29, x30, [sp, #-48]!
  441f28:	mov	x29, sp
  441f2c:	stp	x19, x20, [sp, #16]
  441f30:	mov	x19, x0
  441f34:	cbz	x2, 441f54 <nftw@plt+0x3f3d4>
  441f38:	mov	x20, x2
  441f3c:	ldr	w0, [x2, #4]
  441f40:	cmp	w0, #0x1
  441f44:	b.gt	441f54 <nftw@plt+0x3f3d4>
  441f48:	ldr	w2, [x19, #308]
  441f4c:	cmp	w2, #0x400
  441f50:	b.le	441f68 <nftw@plt+0x3f3e8>
  441f54:	mov	w0, #0x1                   	// #1
  441f58:	str	w0, [x19, #304]
  441f5c:	ldp	x19, x20, [sp, #16]
  441f60:	ldp	x29, x30, [sp], #48
  441f64:	ret
  441f68:	add	w0, w0, #0x1
  441f6c:	str	w0, [x20, #4]
  441f70:	ldr	w0, [x19, #308]
  441f74:	add	w0, w0, #0x1
  441f78:	str	w0, [x19, #308]
  441f7c:	str	x20, [sp, #32]
  441f80:	ldr	x0, [x19, #328]
  441f84:	str	x0, [sp, #40]
  441f88:	add	x0, sp, #0x20
  441f8c:	str	x0, [x19, #328]
  441f90:	mov	x2, x20
  441f94:	mov	x0, x19
  441f98:	bl	43dc50 <nftw@plt+0x3b0d0>
  441f9c:	ldr	x0, [sp, #40]
  441fa0:	str	x0, [x19, #328]
  441fa4:	ldr	w0, [x20, #4]
  441fa8:	sub	w0, w0, #0x1
  441fac:	str	w0, [x20, #4]
  441fb0:	ldr	w0, [x19, #308]
  441fb4:	sub	w0, w0, #0x1
  441fb8:	str	w0, [x19, #308]
  441fbc:	b	441f5c <nftw@plt+0x3f3dc>
  441fc0:	stp	x29, x30, [sp, #-80]!
  441fc4:	mov	x29, sp
  441fc8:	stp	x19, x20, [sp, #16]
  441fcc:	stp	x21, x22, [sp, #32]
  441fd0:	mov	x19, x0
  441fd4:	mov	w22, w1
  441fd8:	mov	x20, x2
  441fdc:	ldr	w0, [x2]
  441fe0:	sub	w0, w0, #0x3
  441fe4:	cmp	w0, #0x4d
  441fe8:	b.hi	442958 <nftw@plt+0x3fdd8>  // b.pmore
  441fec:	stp	x23, x24, [sp, #48]
  441ff0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  441ff4:	add	x1, x1, #0x18c
  441ff8:	ldrh	w0, [x1, w0, uxtw #1]
  441ffc:	adr	x1, 442008 <nftw@plt+0x3f488>
  442000:	add	x0, x1, w0, sxth #2
  442004:	br	x0
  442008:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44200c:	add	x20, x20, #0x228
  442010:	add	x22, x20, #0x9
  442014:	mov	x23, #0xff                  	// #255
  442018:	b	44203c <nftw@plt+0x3f4bc>
  44201c:	ldr	x0, [x19, #256]
  442020:	add	x1, x0, #0x1
  442024:	str	x1, [x19, #256]
  442028:	strb	w21, [x19, x0]
  44202c:	strb	w21, [x19, #264]
  442030:	add	x20, x20, #0x1
  442034:	cmp	x20, x22
  442038:	b.eq	442078 <nftw@plt+0x3f4f8>  // b.none
  44203c:	ldrb	w21, [x20]
  442040:	ldr	x0, [x19, #256]
  442044:	cmp	x0, #0xff
  442048:	b.ne	44201c <nftw@plt+0x3f49c>  // b.any
  44204c:	strb	wzr, [x19, #255]
  442050:	ldr	x3, [x19, #272]
  442054:	ldr	x2, [x19, #280]
  442058:	mov	x1, x23
  44205c:	mov	x0, x19
  442060:	blr	x3
  442064:	str	xzr, [x19, #256]
  442068:	ldr	x0, [x19, #320]
  44206c:	add	x0, x0, #0x1
  442070:	str	x0, [x19, #320]
  442074:	b	44201c <nftw@plt+0x3f49c>
  442078:	ldp	x23, x24, [sp, #48]
  44207c:	b	442558 <nftw@plt+0x3f9d8>
  442080:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  442084:	add	x20, x20, #0x238
  442088:	add	x22, x20, #0x9
  44208c:	mov	x23, #0xff                  	// #255
  442090:	b	4420b4 <nftw@plt+0x3f534>
  442094:	ldr	x0, [x19, #256]
  442098:	add	x1, x0, #0x1
  44209c:	str	x1, [x19, #256]
  4420a0:	strb	w21, [x19, x0]
  4420a4:	strb	w21, [x19, #264]
  4420a8:	add	x20, x20, #0x1
  4420ac:	cmp	x22, x20
  4420b0:	b.eq	4420f0 <nftw@plt+0x3f570>  // b.none
  4420b4:	ldrb	w21, [x20]
  4420b8:	ldr	x0, [x19, #256]
  4420bc:	cmp	x0, #0xff
  4420c0:	b.ne	442094 <nftw@plt+0x3f514>  // b.any
  4420c4:	strb	wzr, [x19, #255]
  4420c8:	ldr	x3, [x19, #272]
  4420cc:	ldr	x2, [x19, #280]
  4420d0:	mov	x1, x23
  4420d4:	mov	x0, x19
  4420d8:	blr	x3
  4420dc:	str	xzr, [x19, #256]
  4420e0:	ldr	x0, [x19, #320]
  4420e4:	add	x0, x0, #0x1
  4420e8:	str	x0, [x19, #320]
  4420ec:	b	442094 <nftw@plt+0x3f514>
  4420f0:	ldp	x23, x24, [sp, #48]
  4420f4:	b	442558 <nftw@plt+0x3f9d8>
  4420f8:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4420fc:	add	x20, x20, #0x248
  442100:	add	x22, x20, #0x6
  442104:	mov	x23, #0xff                  	// #255
  442108:	b	44212c <nftw@plt+0x3f5ac>
  44210c:	ldr	x0, [x19, #256]
  442110:	add	x1, x0, #0x1
  442114:	str	x1, [x19, #256]
  442118:	strb	w21, [x19, x0]
  44211c:	strb	w21, [x19, #264]
  442120:	add	x20, x20, #0x1
  442124:	cmp	x20, x22
  442128:	b.eq	442168 <nftw@plt+0x3f5e8>  // b.none
  44212c:	ldrb	w21, [x20]
  442130:	ldr	x0, [x19, #256]
  442134:	cmp	x0, #0xff
  442138:	b.ne	44210c <nftw@plt+0x3f58c>  // b.any
  44213c:	strb	wzr, [x19, #255]
  442140:	ldr	x3, [x19, #272]
  442144:	ldr	x2, [x19, #280]
  442148:	mov	x1, x23
  44214c:	mov	x0, x19
  442150:	blr	x3
  442154:	str	xzr, [x19, #256]
  442158:	ldr	x0, [x19, #320]
  44215c:	add	x0, x0, #0x1
  442160:	str	x0, [x19, #320]
  442164:	b	44210c <nftw@plt+0x3f58c>
  442168:	ldp	x23, x24, [sp, #48]
  44216c:	b	442558 <nftw@plt+0x3f9d8>
  442170:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  442174:	add	x20, x20, #0x250
  442178:	add	x22, x20, #0x11
  44217c:	mov	x23, #0xff                  	// #255
  442180:	b	4421a4 <nftw@plt+0x3f624>
  442184:	ldr	x0, [x19, #256]
  442188:	add	x1, x0, #0x1
  44218c:	str	x1, [x19, #256]
  442190:	strb	w21, [x19, x0]
  442194:	strb	w21, [x19, #264]
  442198:	add	x20, x20, #0x1
  44219c:	cmp	x20, x22
  4421a0:	b.eq	4421e0 <nftw@plt+0x3f660>  // b.none
  4421a4:	ldrb	w21, [x20]
  4421a8:	ldr	x0, [x19, #256]
  4421ac:	cmp	x0, #0xff
  4421b0:	b.ne	442184 <nftw@plt+0x3f604>  // b.any
  4421b4:	strb	wzr, [x19, #255]
  4421b8:	ldr	x3, [x19, #272]
  4421bc:	ldr	x2, [x19, #280]
  4421c0:	mov	x1, x23
  4421c4:	mov	x0, x19
  4421c8:	blr	x3
  4421cc:	str	xzr, [x19, #256]
  4421d0:	ldr	x0, [x19, #320]
  4421d4:	add	x0, x0, #0x1
  4421d8:	str	x0, [x19, #320]
  4421dc:	b	442184 <nftw@plt+0x3f604>
  4421e0:	ldp	x23, x24, [sp, #48]
  4421e4:	b	442558 <nftw@plt+0x3f9d8>
  4421e8:	str	x25, [sp, #64]
  4421ec:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4421f0:	add	x21, x21, #0x268
  4421f4:	add	x24, x21, #0x9
  4421f8:	mov	x25, #0xff                  	// #255
  4421fc:	b	442220 <nftw@plt+0x3f6a0>
  442200:	ldr	x0, [x19, #256]
  442204:	add	x1, x0, #0x1
  442208:	str	x1, [x19, #256]
  44220c:	strb	w23, [x19, x0]
  442210:	strb	w23, [x19, #264]
  442214:	add	x21, x21, #0x1
  442218:	cmp	x21, x24
  44221c:	b.eq	44225c <nftw@plt+0x3f6dc>  // b.none
  442220:	ldrb	w23, [x21]
  442224:	ldr	x0, [x19, #256]
  442228:	cmp	x0, #0xff
  44222c:	b.ne	442200 <nftw@plt+0x3f680>  // b.any
  442230:	strb	wzr, [x19, #255]
  442234:	ldr	x3, [x19, #272]
  442238:	ldr	x2, [x19, #280]
  44223c:	mov	x1, x25
  442240:	mov	x0, x19
  442244:	blr	x3
  442248:	str	xzr, [x19, #256]
  44224c:	ldr	x0, [x19, #320]
  442250:	add	x0, x0, #0x1
  442254:	str	x0, [x19, #320]
  442258:	b	442200 <nftw@plt+0x3f680>
  44225c:	ldr	x0, [x20, #16]
  442260:	cbz	x0, 44296c <nftw@plt+0x3fdec>
  442264:	cmp	x1, #0xff
  442268:	b.eq	4422c4 <nftw@plt+0x3f744>  // b.none
  44226c:	ldr	x1, [x19, #256]
  442270:	add	x0, x1, #0x1
  442274:	str	x0, [x19, #256]
  442278:	mov	w0, #0x28                  	// #40
  44227c:	strb	w0, [x19, x1]
  442280:	strb	w0, [x19, #264]
  442284:	ldr	x2, [x20, #16]
  442288:	mov	w1, w22
  44228c:	mov	x0, x19
  442290:	bl	441f24 <nftw@plt+0x3f3a4>
  442294:	ldr	x0, [x19, #256]
  442298:	cmp	x0, #0xff
  44229c:	b.eq	4422ec <nftw@plt+0x3f76c>  // b.none
  4422a0:	ldr	x1, [x19, #256]
  4422a4:	add	x0, x1, #0x1
  4422a8:	str	x0, [x19, #256]
  4422ac:	mov	w0, #0x29                  	// #41
  4422b0:	strb	w0, [x19, x1]
  4422b4:	strb	w0, [x19, #264]
  4422b8:	ldp	x23, x24, [sp, #48]
  4422bc:	ldr	x25, [sp, #64]
  4422c0:	b	442558 <nftw@plt+0x3f9d8>
  4422c4:	strb	wzr, [x19, #255]
  4422c8:	ldr	x3, [x19, #272]
  4422cc:	ldr	x2, [x19, #280]
  4422d0:	mov	x0, x19
  4422d4:	blr	x3
  4422d8:	str	xzr, [x19, #256]
  4422dc:	ldr	x0, [x19, #320]
  4422e0:	add	x0, x0, #0x1
  4422e4:	str	x0, [x19, #320]
  4422e8:	b	44226c <nftw@plt+0x3f6ec>
  4422ec:	strb	wzr, [x19, #255]
  4422f0:	ldr	x3, [x19, #272]
  4422f4:	ldr	x2, [x19, #280]
  4422f8:	mov	x1, #0xff                  	// #255
  4422fc:	mov	x0, x19
  442300:	blr	x3
  442304:	str	xzr, [x19, #256]
  442308:	ldr	x0, [x19, #320]
  44230c:	add	x0, x0, #0x1
  442310:	str	x0, [x19, #320]
  442314:	b	4422a0 <nftw@plt+0x3f720>
  442318:	str	x25, [sp, #64]
  44231c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  442320:	add	x21, x21, #0x278
  442324:	add	x24, x21, #0x6
  442328:	mov	x25, #0xff                  	// #255
  44232c:	b	442350 <nftw@plt+0x3f7d0>
  442330:	ldr	x0, [x19, #256]
  442334:	add	x1, x0, #0x1
  442338:	str	x1, [x19, #256]
  44233c:	strb	w23, [x19, x0]
  442340:	strb	w23, [x19, #264]
  442344:	add	x21, x21, #0x1
  442348:	cmp	x21, x24
  44234c:	b.eq	44238c <nftw@plt+0x3f80c>  // b.none
  442350:	ldrb	w23, [x21]
  442354:	ldr	x0, [x19, #256]
  442358:	cmp	x0, #0xff
  44235c:	b.ne	442330 <nftw@plt+0x3f7b0>  // b.any
  442360:	strb	wzr, [x19, #255]
  442364:	ldr	x3, [x19, #272]
  442368:	ldr	x2, [x19, #280]
  44236c:	mov	x1, x25
  442370:	mov	x0, x19
  442374:	blr	x3
  442378:	str	xzr, [x19, #256]
  44237c:	ldr	x0, [x19, #320]
  442380:	add	x0, x0, #0x1
  442384:	str	x0, [x19, #320]
  442388:	b	442330 <nftw@plt+0x3f7b0>
  44238c:	ldr	x0, [x20, #16]
  442390:	cbz	x0, 442978 <nftw@plt+0x3fdf8>
  442394:	cmp	x1, #0xff
  442398:	b.eq	4423f4 <nftw@plt+0x3f874>  // b.none
  44239c:	ldr	x1, [x19, #256]
  4423a0:	add	x0, x1, #0x1
  4423a4:	str	x0, [x19, #256]
  4423a8:	mov	w0, #0x28                  	// #40
  4423ac:	strb	w0, [x19, x1]
  4423b0:	strb	w0, [x19, #264]
  4423b4:	ldr	x2, [x20, #16]
  4423b8:	mov	w1, w22
  4423bc:	mov	x0, x19
  4423c0:	bl	441f24 <nftw@plt+0x3f3a4>
  4423c4:	ldr	x0, [x19, #256]
  4423c8:	cmp	x0, #0xff
  4423cc:	b.eq	44241c <nftw@plt+0x3f89c>  // b.none
  4423d0:	ldr	x1, [x19, #256]
  4423d4:	add	x0, x1, #0x1
  4423d8:	str	x0, [x19, #256]
  4423dc:	mov	w0, #0x29                  	// #41
  4423e0:	strb	w0, [x19, x1]
  4423e4:	strb	w0, [x19, #264]
  4423e8:	ldp	x23, x24, [sp, #48]
  4423ec:	ldr	x25, [sp, #64]
  4423f0:	b	442558 <nftw@plt+0x3f9d8>
  4423f4:	strb	wzr, [x19, #255]
  4423f8:	ldr	x3, [x19, #272]
  4423fc:	ldr	x2, [x19, #280]
  442400:	mov	x0, x19
  442404:	blr	x3
  442408:	str	xzr, [x19, #256]
  44240c:	ldr	x0, [x19, #320]
  442410:	add	x0, x0, #0x1
  442414:	str	x0, [x19, #320]
  442418:	b	44239c <nftw@plt+0x3f81c>
  44241c:	strb	wzr, [x19, #255]
  442420:	ldr	x3, [x19, #272]
  442424:	ldr	x2, [x19, #280]
  442428:	mov	x1, #0xff                  	// #255
  44242c:	mov	x0, x19
  442430:	blr	x3
  442434:	str	xzr, [x19, #256]
  442438:	ldr	x0, [x19, #320]
  44243c:	add	x0, x0, #0x1
  442440:	str	x0, [x19, #320]
  442444:	b	4423d0 <nftw@plt+0x3f850>
  442448:	ldr	x0, [x19, #256]
  44244c:	cmp	x0, #0xff
  442450:	b.eq	442484 <nftw@plt+0x3f904>  // b.none
  442454:	ldr	x1, [x19, #256]
  442458:	add	x0, x1, #0x1
  44245c:	str	x0, [x19, #256]
  442460:	mov	w0, #0x20                  	// #32
  442464:	strb	w0, [x19, x1]
  442468:	strb	w0, [x19, #264]
  44246c:	ldr	x2, [x20, #16]
  442470:	mov	w1, w22
  442474:	mov	x0, x19
  442478:	bl	441f24 <nftw@plt+0x3f3a4>
  44247c:	ldp	x23, x24, [sp, #48]
  442480:	b	442558 <nftw@plt+0x3f9d8>
  442484:	strb	wzr, [x19, #255]
  442488:	ldr	x3, [x19, #272]
  44248c:	ldr	x2, [x19, #280]
  442490:	mov	x1, #0xff                  	// #255
  442494:	mov	x0, x19
  442498:	blr	x3
  44249c:	str	xzr, [x19, #256]
  4424a0:	ldr	x0, [x19, #320]
  4424a4:	add	x0, x0, #0x1
  4424a8:	str	x0, [x19, #320]
  4424ac:	b	442454 <nftw@plt+0x3f8d4>
  4424b0:	tbnz	w22, #2, 442984 <nftw@plt+0x3fe04>
  4424b4:	ldr	x0, [x19, #256]
  4424b8:	cmp	x0, #0xff
  4424bc:	b.eq	4424e0 <nftw@plt+0x3f960>  // b.none
  4424c0:	ldr	x1, [x19, #256]
  4424c4:	add	x0, x1, #0x1
  4424c8:	str	x0, [x19, #256]
  4424cc:	mov	w0, #0x2a                  	// #42
  4424d0:	strb	w0, [x19, x1]
  4424d4:	strb	w0, [x19, #264]
  4424d8:	ldp	x23, x24, [sp, #48]
  4424dc:	b	442558 <nftw@plt+0x3f9d8>
  4424e0:	strb	wzr, [x19, #255]
  4424e4:	ldr	x3, [x19, #272]
  4424e8:	ldr	x2, [x19, #280]
  4424ec:	mov	x1, #0xff                  	// #255
  4424f0:	mov	x0, x19
  4424f4:	blr	x3
  4424f8:	str	xzr, [x19, #256]
  4424fc:	ldr	x0, [x19, #320]
  442500:	add	x0, x0, #0x1
  442504:	str	x0, [x19, #320]
  442508:	b	4424c0 <nftw@plt+0x3f940>
  44250c:	ldr	x0, [x19, #256]
  442510:	cmp	x0, #0xff
  442514:	b.eq	442568 <nftw@plt+0x3f9e8>  // b.none
  442518:	ldr	x1, [x19, #256]
  44251c:	add	x0, x1, #0x1
  442520:	str	x0, [x19, #256]
  442524:	mov	w0, #0x20                  	// #32
  442528:	strb	w0, [x19, x1]
  44252c:	strb	w0, [x19, #264]
  442530:	ldr	x0, [x19, #256]
  442534:	cmp	x0, #0xff
  442538:	b.eq	442594 <nftw@plt+0x3fa14>  // b.none
  44253c:	ldr	x1, [x19, #256]
  442540:	add	x0, x1, #0x1
  442544:	str	x0, [x19, #256]
  442548:	mov	w0, #0x26                  	// #38
  44254c:	strb	w0, [x19, x1]
  442550:	strb	w0, [x19, #264]
  442554:	ldp	x23, x24, [sp, #48]
  442558:	ldp	x19, x20, [sp, #16]
  44255c:	ldp	x21, x22, [sp, #32]
  442560:	ldp	x29, x30, [sp], #80
  442564:	ret
  442568:	strb	wzr, [x19, #255]
  44256c:	ldr	x3, [x19, #272]
  442570:	ldr	x2, [x19, #280]
  442574:	mov	x1, #0xff                  	// #255
  442578:	mov	x0, x19
  44257c:	blr	x3
  442580:	str	xzr, [x19, #256]
  442584:	ldr	x0, [x19, #320]
  442588:	add	x0, x0, #0x1
  44258c:	str	x0, [x19, #320]
  442590:	b	442518 <nftw@plt+0x3f998>
  442594:	strb	wzr, [x19, #255]
  442598:	ldr	x3, [x19, #272]
  44259c:	ldr	x2, [x19, #280]
  4425a0:	mov	x1, #0xff                  	// #255
  4425a4:	mov	x0, x19
  4425a8:	blr	x3
  4425ac:	str	xzr, [x19, #256]
  4425b0:	ldr	x0, [x19, #320]
  4425b4:	add	x0, x0, #0x1
  4425b8:	str	x0, [x19, #320]
  4425bc:	b	44253c <nftw@plt+0x3f9bc>
  4425c0:	ldr	x0, [x19, #256]
  4425c4:	cmp	x0, #0xff
  4425c8:	b.eq	4425f8 <nftw@plt+0x3fa78>  // b.none
  4425cc:	ldr	x1, [x19, #256]
  4425d0:	add	x0, x1, #0x1
  4425d4:	str	x0, [x19, #256]
  4425d8:	mov	w0, #0x20                  	// #32
  4425dc:	strb	w0, [x19, x1]
  4425e0:	strb	w0, [x19, #264]
  4425e4:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4425e8:	add	x20, x20, #0x278
  4425ec:	add	x22, x20, #0x2
  4425f0:	mov	x23, #0xff                  	// #255
  4425f4:	b	442644 <nftw@plt+0x3fac4>
  4425f8:	strb	wzr, [x19, #255]
  4425fc:	ldr	x3, [x19, #272]
  442600:	ldr	x2, [x19, #280]
  442604:	mov	x1, #0xff                  	// #255
  442608:	mov	x0, x19
  44260c:	blr	x3
  442610:	str	xzr, [x19, #256]
  442614:	ldr	x0, [x19, #320]
  442618:	add	x0, x0, #0x1
  44261c:	str	x0, [x19, #320]
  442620:	b	4425cc <nftw@plt+0x3fa4c>
  442624:	ldr	x0, [x19, #256]
  442628:	add	x1, x0, #0x1
  44262c:	str	x1, [x19, #256]
  442630:	strb	w21, [x19, x0]
  442634:	strb	w21, [x19, #264]
  442638:	add	x20, x20, #0x1
  44263c:	cmp	x22, x20
  442640:	b.eq	442680 <nftw@plt+0x3fb00>  // b.none
  442644:	ldrb	w21, [x20]
  442648:	ldr	x0, [x19, #256]
  44264c:	cmp	x0, #0xff
  442650:	b.ne	442624 <nftw@plt+0x3faa4>  // b.any
  442654:	strb	wzr, [x19, #255]
  442658:	ldr	x3, [x19, #272]
  44265c:	ldr	x2, [x19, #280]
  442660:	mov	x1, x23
  442664:	mov	x0, x19
  442668:	blr	x3
  44266c:	str	xzr, [x19, #256]
  442670:	ldr	x0, [x19, #320]
  442674:	add	x0, x0, #0x1
  442678:	str	x0, [x19, #320]
  44267c:	b	442624 <nftw@plt+0x3faa4>
  442680:	ldp	x23, x24, [sp, #48]
  442684:	b	442558 <nftw@plt+0x3f9d8>
  442688:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44268c:	add	x20, x20, #0x280
  442690:	add	x22, x20, #0x8
  442694:	mov	x23, #0xff                  	// #255
  442698:	b	4426bc <nftw@plt+0x3fb3c>
  44269c:	ldr	x0, [x19, #256]
  4426a0:	add	x1, x0, #0x1
  4426a4:	str	x1, [x19, #256]
  4426a8:	strb	w21, [x19, x0]
  4426ac:	strb	w21, [x19, #264]
  4426b0:	add	x20, x20, #0x1
  4426b4:	cmp	x20, x22
  4426b8:	b.eq	4426f8 <nftw@plt+0x3fb78>  // b.none
  4426bc:	ldrb	w21, [x20]
  4426c0:	ldr	x0, [x19, #256]
  4426c4:	cmp	x0, #0xff
  4426c8:	b.ne	44269c <nftw@plt+0x3fb1c>  // b.any
  4426cc:	strb	wzr, [x19, #255]
  4426d0:	ldr	x3, [x19, #272]
  4426d4:	ldr	x2, [x19, #280]
  4426d8:	mov	x1, x23
  4426dc:	mov	x0, x19
  4426e0:	blr	x3
  4426e4:	str	xzr, [x19, #256]
  4426e8:	ldr	x0, [x19, #320]
  4426ec:	add	x0, x0, #0x1
  4426f0:	str	x0, [x19, #320]
  4426f4:	b	44269c <nftw@plt+0x3fb1c>
  4426f8:	ldp	x23, x24, [sp, #48]
  4426fc:	b	442558 <nftw@plt+0x3f9d8>
  442700:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  442704:	add	x20, x20, #0x290
  442708:	add	x22, x20, #0xa
  44270c:	mov	x23, #0xff                  	// #255
  442710:	b	442734 <nftw@plt+0x3fbb4>
  442714:	ldr	x0, [x19, #256]
  442718:	add	x1, x0, #0x1
  44271c:	str	x1, [x19, #256]
  442720:	strb	w21, [x19, x0]
  442724:	strb	w21, [x19, #264]
  442728:	add	x20, x20, #0x1
  44272c:	cmp	x20, x22
  442730:	b.eq	442770 <nftw@plt+0x3fbf0>  // b.none
  442734:	ldrb	w21, [x20]
  442738:	ldr	x0, [x19, #256]
  44273c:	cmp	x0, #0xff
  442740:	b.ne	442714 <nftw@plt+0x3fb94>  // b.any
  442744:	strb	wzr, [x19, #255]
  442748:	ldr	x3, [x19, #272]
  44274c:	ldr	x2, [x19, #280]
  442750:	mov	x1, x23
  442754:	mov	x0, x19
  442758:	blr	x3
  44275c:	str	xzr, [x19, #256]
  442760:	ldr	x0, [x19, #320]
  442764:	add	x0, x0, #0x1
  442768:	str	x0, [x19, #320]
  44276c:	b	442714 <nftw@plt+0x3fb94>
  442770:	ldp	x23, x24, [sp, #48]
  442774:	b	442558 <nftw@plt+0x3f9d8>
  442778:	ldrb	w0, [x19, #264]
  44277c:	cmp	w0, #0x28
  442780:	b.eq	4427a8 <nftw@plt+0x3fc28>  // b.none
  442784:	ldr	x0, [x19, #256]
  442788:	cmp	x0, #0xff
  44278c:	b.eq	4427cc <nftw@plt+0x3fc4c>  // b.none
  442790:	ldr	x1, [x19, #256]
  442794:	add	x0, x1, #0x1
  442798:	str	x0, [x19, #256]
  44279c:	mov	w0, #0x20                  	// #32
  4427a0:	strb	w0, [x19, x1]
  4427a4:	strb	w0, [x19, #264]
  4427a8:	ldr	x2, [x20, #8]
  4427ac:	mov	w1, w22
  4427b0:	mov	x0, x19
  4427b4:	bl	441f24 <nftw@plt+0x3f3a4>
  4427b8:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4427bc:	add	x20, x20, #0x2a0
  4427c0:	add	x22, x20, #0x3
  4427c4:	mov	x23, #0xff                  	// #255
  4427c8:	b	442818 <nftw@plt+0x3fc98>
  4427cc:	strb	wzr, [x19, #255]
  4427d0:	ldr	x3, [x19, #272]
  4427d4:	ldr	x2, [x19, #280]
  4427d8:	mov	x1, #0xff                  	// #255
  4427dc:	mov	x0, x19
  4427e0:	blr	x3
  4427e4:	str	xzr, [x19, #256]
  4427e8:	ldr	x0, [x19, #320]
  4427ec:	add	x0, x0, #0x1
  4427f0:	str	x0, [x19, #320]
  4427f4:	b	442790 <nftw@plt+0x3fc10>
  4427f8:	ldr	x0, [x19, #256]
  4427fc:	add	x1, x0, #0x1
  442800:	str	x1, [x19, #256]
  442804:	strb	w21, [x19, x0]
  442808:	strb	w21, [x19, #264]
  44280c:	add	x20, x20, #0x1
  442810:	cmp	x20, x22
  442814:	b.eq	442854 <nftw@plt+0x3fcd4>  // b.none
  442818:	ldrb	w21, [x20]
  44281c:	ldr	x0, [x19, #256]
  442820:	cmp	x0, #0xff
  442824:	b.ne	4427f8 <nftw@plt+0x3fc78>  // b.any
  442828:	strb	wzr, [x19, #255]
  44282c:	ldr	x3, [x19, #272]
  442830:	ldr	x2, [x19, #280]
  442834:	mov	x1, x23
  442838:	mov	x0, x19
  44283c:	blr	x3
  442840:	str	xzr, [x19, #256]
  442844:	ldr	x0, [x19, #320]
  442848:	add	x0, x0, #0x1
  44284c:	str	x0, [x19, #320]
  442850:	b	4427f8 <nftw@plt+0x3fc78>
  442854:	ldp	x23, x24, [sp, #48]
  442858:	b	442558 <nftw@plt+0x3f9d8>
  44285c:	ldr	x2, [x2, #8]
  442860:	mov	w1, w22
  442864:	mov	x0, x19
  442868:	bl	441f24 <nftw@plt+0x3f3a4>
  44286c:	ldp	x23, x24, [sp, #48]
  442870:	b	442558 <nftw@plt+0x3f9d8>
  442874:	str	x25, [sp, #64]
  442878:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44287c:	add	x21, x21, #0x2a8
  442880:	add	x24, x21, #0xa
  442884:	mov	x25, #0xff                  	// #255
  442888:	b	4428ac <nftw@plt+0x3fd2c>
  44288c:	ldr	x0, [x19, #256]
  442890:	add	x1, x0, #0x1
  442894:	str	x1, [x19, #256]
  442898:	strb	w23, [x19, x0]
  44289c:	strb	w23, [x19, #264]
  4428a0:	add	x21, x21, #0x1
  4428a4:	cmp	x21, x24
  4428a8:	b.eq	4428e8 <nftw@plt+0x3fd68>  // b.none
  4428ac:	ldrb	w23, [x21]
  4428b0:	ldr	x0, [x19, #256]
  4428b4:	cmp	x0, #0xff
  4428b8:	b.ne	44288c <nftw@plt+0x3fd0c>  // b.any
  4428bc:	strb	wzr, [x19, #255]
  4428c0:	ldr	x3, [x19, #272]
  4428c4:	ldr	x2, [x19, #280]
  4428c8:	mov	x1, x25
  4428cc:	mov	x0, x19
  4428d0:	blr	x3
  4428d4:	str	xzr, [x19, #256]
  4428d8:	ldr	x0, [x19, #320]
  4428dc:	add	x0, x0, #0x1
  4428e0:	str	x0, [x19, #320]
  4428e4:	b	44288c <nftw@plt+0x3fd0c>
  4428e8:	ldr	x2, [x20, #8]
  4428ec:	mov	w1, w22
  4428f0:	mov	x0, x19
  4428f4:	bl	441f24 <nftw@plt+0x3f3a4>
  4428f8:	ldr	x0, [x19, #256]
  4428fc:	cmp	x0, #0xff
  442900:	b.eq	442928 <nftw@plt+0x3fda8>  // b.none
  442904:	ldr	x1, [x19, #256]
  442908:	add	x0, x1, #0x1
  44290c:	str	x0, [x19, #256]
  442910:	mov	w0, #0x29                  	// #41
  442914:	strb	w0, [x19, x1]
  442918:	strb	w0, [x19, #264]
  44291c:	ldp	x23, x24, [sp, #48]
  442920:	ldr	x25, [sp, #64]
  442924:	b	442558 <nftw@plt+0x3f9d8>
  442928:	strb	wzr, [x19, #255]
  44292c:	ldr	x3, [x19, #272]
  442930:	ldr	x2, [x19, #280]
  442934:	mov	x1, #0xff                  	// #255
  442938:	mov	x0, x19
  44293c:	blr	x3
  442940:	str	xzr, [x19, #256]
  442944:	ldr	x0, [x19, #320]
  442948:	add	x0, x0, #0x1
  44294c:	str	x0, [x19, #320]
  442950:	b	442904 <nftw@plt+0x3fd84>
  442954:	ldp	x23, x24, [sp, #48]
  442958:	mov	x2, x20
  44295c:	mov	w1, w22
  442960:	mov	x0, x19
  442964:	bl	441f24 <nftw@plt+0x3f3a4>
  442968:	b	442558 <nftw@plt+0x3f9d8>
  44296c:	ldp	x23, x24, [sp, #48]
  442970:	ldr	x25, [sp, #64]
  442974:	b	442558 <nftw@plt+0x3f9d8>
  442978:	ldp	x23, x24, [sp, #48]
  44297c:	ldr	x25, [sp, #64]
  442980:	b	442558 <nftw@plt+0x3f9d8>
  442984:	ldp	x23, x24, [sp, #48]
  442988:	b	442558 <nftw@plt+0x3f9d8>
  44298c:	stp	x29, x30, [sp, #-64]!
  442990:	mov	x29, sp
  442994:	stp	x19, x20, [sp, #16]
  442998:	stp	x21, x22, [sp, #32]
  44299c:	str	x23, [sp, #48]
  4429a0:	mov	x19, x0
  4429a4:	mov	w21, w1
  4429a8:	mov	x22, x2
  4429ac:	mov	x20, x3
  4429b0:	cbz	x3, 4429f8 <nftw@plt+0x3fe78>
  4429b4:	mov	x1, x3
  4429b8:	mov	x3, #0x1                   	// #1
  4429bc:	mov	x2, #0xe000000             	// #234881024
  4429c0:	movk	x2, #0x862, lsl #32
  4429c4:	ldr	w0, [x1, #16]
  4429c8:	cbnz	w0, 4429f8 <nftw@plt+0x3fe78>
  4429cc:	ldr	x0, [x1, #8]
  4429d0:	ldr	w0, [x0]
  4429d4:	cmp	w0, #0x2b
  4429d8:	b.hi	4429f0 <nftw@plt+0x3fe70>  // b.pmore
  4429dc:	lsl	x0, x3, x0
  4429e0:	tst	x0, x2
  4429e4:	b.ne	442a2c <nftw@plt+0x3feac>  // b.any
  4429e8:	tst	x0, #0x1c00000000
  4429ec:	b.ne	442a18 <nftw@plt+0x3fe98>  // b.any
  4429f0:	ldr	x1, [x1]
  4429f4:	cbnz	x1, 4429c4 <nftw@plt+0x3fe44>
  4429f8:	ldr	x23, [x19, #296]
  4429fc:	str	xzr, [x19, #296]
  442a00:	mov	w3, #0x0                   	// #0
  442a04:	mov	x2, x20
  442a08:	mov	w1, w21
  442a0c:	mov	x0, x19
  442a10:	bl	442c24 <nftw@plt+0x400a4>
  442a14:	b	442ac0 <nftw@plt+0x3ff40>
  442a18:	ldrb	w0, [x19, #264]
  442a1c:	and	w0, w0, #0xfffffffd
  442a20:	and	w0, w0, #0xff
  442a24:	cmp	w0, #0x28
  442a28:	b.eq	442a5c <nftw@plt+0x3fedc>  // b.none
  442a2c:	ldrb	w0, [x19, #264]
  442a30:	cmp	w0, #0x20
  442a34:	b.eq	442a5c <nftw@plt+0x3fedc>  // b.none
  442a38:	ldr	x0, [x19, #256]
  442a3c:	cmp	x0, #0xff
  442a40:	b.eq	442b48 <nftw@plt+0x3ffc8>  // b.none
  442a44:	ldr	x1, [x19, #256]
  442a48:	add	x0, x1, #0x1
  442a4c:	str	x0, [x19, #256]
  442a50:	mov	w0, #0x20                  	// #32
  442a54:	strb	w0, [x19, x1]
  442a58:	strb	w0, [x19, #264]
  442a5c:	ldr	x0, [x19, #256]
  442a60:	cmp	x0, #0xff
  442a64:	b.eq	442b74 <nftw@plt+0x3fff4>  // b.none
  442a68:	ldr	x1, [x19, #256]
  442a6c:	add	x0, x1, #0x1
  442a70:	str	x0, [x19, #256]
  442a74:	mov	w0, #0x28                  	// #40
  442a78:	strb	w0, [x19, x1]
  442a7c:	strb	w0, [x19, #264]
  442a80:	ldr	x23, [x19, #296]
  442a84:	str	xzr, [x19, #296]
  442a88:	mov	w3, #0x0                   	// #0
  442a8c:	mov	x2, x20
  442a90:	mov	w1, w21
  442a94:	mov	x0, x19
  442a98:	bl	442c24 <nftw@plt+0x400a4>
  442a9c:	ldr	x0, [x19, #256]
  442aa0:	cmp	x0, #0xff
  442aa4:	b.eq	442ba0 <nftw@plt+0x40020>  // b.none
  442aa8:	ldr	x1, [x19, #256]
  442aac:	add	x0, x1, #0x1
  442ab0:	str	x0, [x19, #256]
  442ab4:	mov	w0, #0x29                  	// #41
  442ab8:	strb	w0, [x19, x1]
  442abc:	strb	w0, [x19, #264]
  442ac0:	ldr	x0, [x19, #256]
  442ac4:	cmp	x0, #0xff
  442ac8:	b.eq	442bcc <nftw@plt+0x4004c>  // b.none
  442acc:	ldr	x1, [x19, #256]
  442ad0:	add	x0, x1, #0x1
  442ad4:	str	x0, [x19, #256]
  442ad8:	mov	w0, #0x28                  	// #40
  442adc:	strb	w0, [x19, x1]
  442ae0:	strb	w0, [x19, #264]
  442ae4:	ldr	x2, [x22, #16]
  442ae8:	cbz	x2, 442af8 <nftw@plt+0x3ff78>
  442aec:	mov	w1, w21
  442af0:	mov	x0, x19
  442af4:	bl	441f24 <nftw@plt+0x3f3a4>
  442af8:	ldr	x0, [x19, #256]
  442afc:	cmp	x0, #0xff
  442b00:	b.eq	442bf8 <nftw@plt+0x40078>  // b.none
  442b04:	ldr	x1, [x19, #256]
  442b08:	add	x0, x1, #0x1
  442b0c:	str	x0, [x19, #256]
  442b10:	mov	w0, #0x29                  	// #41
  442b14:	strb	w0, [x19, x1]
  442b18:	strb	w0, [x19, #264]
  442b1c:	mov	w3, #0x1                   	// #1
  442b20:	mov	x2, x20
  442b24:	mov	w1, w21
  442b28:	mov	x0, x19
  442b2c:	bl	442c24 <nftw@plt+0x400a4>
  442b30:	str	x23, [x19, #296]
  442b34:	ldp	x19, x20, [sp, #16]
  442b38:	ldp	x21, x22, [sp, #32]
  442b3c:	ldr	x23, [sp, #48]
  442b40:	ldp	x29, x30, [sp], #64
  442b44:	ret
  442b48:	strb	wzr, [x19, #255]
  442b4c:	ldr	x3, [x19, #272]
  442b50:	ldr	x2, [x19, #280]
  442b54:	mov	x1, #0xff                  	// #255
  442b58:	mov	x0, x19
  442b5c:	blr	x3
  442b60:	str	xzr, [x19, #256]
  442b64:	ldr	x0, [x19, #320]
  442b68:	add	x0, x0, #0x1
  442b6c:	str	x0, [x19, #320]
  442b70:	b	442a44 <nftw@plt+0x3fec4>
  442b74:	strb	wzr, [x19, #255]
  442b78:	ldr	x3, [x19, #272]
  442b7c:	ldr	x2, [x19, #280]
  442b80:	mov	x1, #0xff                  	// #255
  442b84:	mov	x0, x19
  442b88:	blr	x3
  442b8c:	str	xzr, [x19, #256]
  442b90:	ldr	x0, [x19, #320]
  442b94:	add	x0, x0, #0x1
  442b98:	str	x0, [x19, #320]
  442b9c:	b	442a68 <nftw@plt+0x3fee8>
  442ba0:	strb	wzr, [x19, #255]
  442ba4:	ldr	x3, [x19, #272]
  442ba8:	ldr	x2, [x19, #280]
  442bac:	mov	x1, #0xff                  	// #255
  442bb0:	mov	x0, x19
  442bb4:	blr	x3
  442bb8:	str	xzr, [x19, #256]
  442bbc:	ldr	x0, [x19, #320]
  442bc0:	add	x0, x0, #0x1
  442bc4:	str	x0, [x19, #320]
  442bc8:	b	442aa8 <nftw@plt+0x3ff28>
  442bcc:	strb	wzr, [x19, #255]
  442bd0:	ldr	x3, [x19, #272]
  442bd4:	ldr	x2, [x19, #280]
  442bd8:	mov	x1, #0xff                  	// #255
  442bdc:	mov	x0, x19
  442be0:	blr	x3
  442be4:	str	xzr, [x19, #256]
  442be8:	ldr	x0, [x19, #320]
  442bec:	add	x0, x0, #0x1
  442bf0:	str	x0, [x19, #320]
  442bf4:	b	442acc <nftw@plt+0x3ff4c>
  442bf8:	strb	wzr, [x19, #255]
  442bfc:	ldr	x3, [x19, #272]
  442c00:	ldr	x2, [x19, #280]
  442c04:	mov	x1, #0xff                  	// #255
  442c08:	mov	x0, x19
  442c0c:	blr	x3
  442c10:	str	xzr, [x19, #256]
  442c14:	ldr	x0, [x19, #320]
  442c18:	add	x0, x0, #0x1
  442c1c:	str	x0, [x19, #320]
  442c20:	b	442b04 <nftw@plt+0x3ff84>
  442c24:	cbz	x2, 442fe0 <nftw@plt+0x40460>
  442c28:	stp	x29, x30, [sp, #-112]!
  442c2c:	mov	x29, sp
  442c30:	stp	x19, x20, [sp, #16]
  442c34:	stp	x21, x22, [sp, #32]
  442c38:	mov	x19, x0
  442c3c:	mov	w22, w1
  442c40:	mov	x20, x2
  442c44:	mov	w21, w3
  442c48:	ldr	w0, [x0, #304]
  442c4c:	cbnz	w0, 442ccc <nftw@plt+0x4014c>
  442c50:	ldr	w0, [x2, #16]
  442c54:	cbnz	w0, 442cdc <nftw@plt+0x4015c>
  442c58:	cbnz	w3, 442c6c <nftw@plt+0x400ec>
  442c5c:	ldr	x0, [x2, #8]
  442c60:	ldr	w0, [x0]
  442c64:	bl	43d13c <nftw@plt+0x3a5bc>
  442c68:	cbnz	w0, 442cdc <nftw@plt+0x4015c>
  442c6c:	stp	x23, x24, [sp, #48]
  442c70:	mov	w0, #0x1                   	// #1
  442c74:	str	w0, [x20, #16]
  442c78:	ldr	x23, [x19, #288]
  442c7c:	ldr	x0, [x20, #24]
  442c80:	str	x0, [x19, #288]
  442c84:	ldr	x2, [x20, #8]
  442c88:	ldr	w0, [x2]
  442c8c:	cmp	w0, #0x29
  442c90:	b.eq	442cf4 <nftw@plt+0x40174>  // b.none
  442c94:	cmp	w0, #0x2a
  442c98:	b.eq	442d10 <nftw@plt+0x40190>  // b.none
  442c9c:	cmp	w0, #0x2
  442ca0:	b.eq	442d2c <nftw@plt+0x401ac>  // b.none
  442ca4:	mov	w1, w22
  442ca8:	mov	x0, x19
  442cac:	bl	441fc0 <nftw@plt+0x3f440>
  442cb0:	str	x23, [x19, #288]
  442cb4:	mov	w3, w21
  442cb8:	ldr	x2, [x20]
  442cbc:	mov	w1, w22
  442cc0:	mov	x0, x19
  442cc4:	bl	442c24 <nftw@plt+0x400a4>
  442cc8:	ldp	x23, x24, [sp, #48]
  442ccc:	ldp	x19, x20, [sp, #16]
  442cd0:	ldp	x21, x22, [sp, #32]
  442cd4:	ldp	x29, x30, [sp], #112
  442cd8:	ret
  442cdc:	mov	w3, w21
  442ce0:	ldr	x2, [x20]
  442ce4:	mov	w1, w22
  442ce8:	mov	x0, x19
  442cec:	bl	442c24 <nftw@plt+0x400a4>
  442cf0:	b	442ccc <nftw@plt+0x4014c>
  442cf4:	ldr	x3, [x20]
  442cf8:	mov	w1, w22
  442cfc:	mov	x0, x19
  442d00:	bl	44298c <nftw@plt+0x3fe0c>
  442d04:	str	x23, [x19, #288]
  442d08:	ldp	x23, x24, [sp, #48]
  442d0c:	b	442ccc <nftw@plt+0x4014c>
  442d10:	ldr	x3, [x20]
  442d14:	mov	w1, w22
  442d18:	mov	x0, x19
  442d1c:	bl	442fe4 <nftw@plt+0x40464>
  442d20:	str	x23, [x19, #288]
  442d24:	ldp	x23, x24, [sp, #48]
  442d28:	b	442ccc <nftw@plt+0x4014c>
  442d2c:	ldr	x21, [x19, #296]
  442d30:	str	xzr, [x19, #296]
  442d34:	ldr	x0, [x20, #8]
  442d38:	ldr	x2, [x0, #8]
  442d3c:	mov	w1, w22
  442d40:	mov	x0, x19
  442d44:	bl	441f24 <nftw@plt+0x3f3a4>
  442d48:	str	x21, [x19, #296]
  442d4c:	tbz	w22, #2, 442d9c <nftw@plt+0x4021c>
  442d50:	ldr	x0, [x19, #256]
  442d54:	cmp	x0, #0xff
  442d58:	b.eq	442e18 <nftw@plt+0x40298>  // b.none
  442d5c:	ldr	x1, [x19, #256]
  442d60:	add	x0, x1, #0x1
  442d64:	str	x0, [x19, #256]
  442d68:	mov	w0, #0x2e                  	// #46
  442d6c:	strb	w0, [x19, x1]
  442d70:	strb	w0, [x19, #264]
  442d74:	ldr	x0, [x20, #8]
  442d78:	ldr	x20, [x0, #16]
  442d7c:	ldr	w0, [x20]
  442d80:	cmp	w0, #0x47
  442d84:	b.eq	442e44 <nftw@plt+0x402c4>  // b.none
  442d88:	ldr	w0, [x20]
  442d8c:	bl	43d13c <nftw@plt+0x3a5bc>
  442d90:	cbz	w0, 442fc4 <nftw@plt+0x40444>
  442d94:	ldr	x20, [x20, #8]
  442d98:	b	442d88 <nftw@plt+0x40208>
  442d9c:	stp	x25, x26, [sp, #64]
  442da0:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  442da4:	add	x21, x21, #0x368
  442da8:	add	x25, x21, #0x2
  442dac:	mov	x26, #0xff                  	// #255
  442db0:	b	442dd4 <nftw@plt+0x40254>
  442db4:	ldr	x0, [x19, #256]
  442db8:	add	x1, x0, #0x1
  442dbc:	str	x1, [x19, #256]
  442dc0:	strb	w24, [x19, x0]
  442dc4:	strb	w24, [x19, #264]
  442dc8:	add	x21, x21, #0x1
  442dcc:	cmp	x21, x25
  442dd0:	b.eq	442e10 <nftw@plt+0x40290>  // b.none
  442dd4:	ldrb	w24, [x21]
  442dd8:	ldr	x0, [x19, #256]
  442ddc:	cmp	x0, #0xff
  442de0:	b.ne	442db4 <nftw@plt+0x40234>  // b.any
  442de4:	strb	wzr, [x19, #255]
  442de8:	ldr	x3, [x19, #272]
  442dec:	ldr	x2, [x19, #280]
  442df0:	mov	x1, x26
  442df4:	mov	x0, x19
  442df8:	blr	x3
  442dfc:	str	xzr, [x19, #256]
  442e00:	ldr	x0, [x19, #320]
  442e04:	add	x0, x0, #0x1
  442e08:	str	x0, [x19, #320]
  442e0c:	b	442db4 <nftw@plt+0x40234>
  442e10:	ldp	x25, x26, [sp, #64]
  442e14:	b	442d74 <nftw@plt+0x401f4>
  442e18:	strb	wzr, [x19, #255]
  442e1c:	ldr	x3, [x19, #272]
  442e20:	ldr	x2, [x19, #280]
  442e24:	mov	x1, #0xff                  	// #255
  442e28:	mov	x0, x19
  442e2c:	blr	x3
  442e30:	str	xzr, [x19, #256]
  442e34:	ldr	x0, [x19, #320]
  442e38:	add	x0, x0, #0x1
  442e3c:	str	x0, [x19, #320]
  442e40:	b	442d5c <nftw@plt+0x401dc>
  442e44:	stp	x25, x26, [sp, #64]
  442e48:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  442e4c:	add	x21, x21, #0xef0
  442e50:	add	x25, x21, #0xd
  442e54:	mov	x26, #0xff                  	// #255
  442e58:	b	442e7c <nftw@plt+0x402fc>
  442e5c:	ldr	x0, [x19, #256]
  442e60:	add	x1, x0, #0x1
  442e64:	str	x1, [x19, #256]
  442e68:	strb	w24, [x19, x0]
  442e6c:	strb	w24, [x19, #264]
  442e70:	add	x21, x21, #0x1
  442e74:	cmp	x21, x25
  442e78:	b.eq	442eb8 <nftw@plt+0x40338>  // b.none
  442e7c:	ldrb	w24, [x21]
  442e80:	ldr	x0, [x19, #256]
  442e84:	cmp	x0, #0xff
  442e88:	b.ne	442e5c <nftw@plt+0x402dc>  // b.any
  442e8c:	strb	wzr, [x19, #255]
  442e90:	ldr	x3, [x19, #272]
  442e94:	ldr	x2, [x19, #280]
  442e98:	mov	x1, x26
  442e9c:	mov	x0, x19
  442ea0:	blr	x3
  442ea4:	str	xzr, [x19, #256]
  442ea8:	ldr	x0, [x19, #320]
  442eac:	add	x0, x0, #0x1
  442eb0:	str	x0, [x19, #320]
  442eb4:	b	442e5c <nftw@plt+0x402dc>
  442eb8:	ldr	w2, [x20, #16]
  442ebc:	add	w2, w2, #0x1
  442ec0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  442ec4:	add	x1, x1, #0x3f8
  442ec8:	add	x0, sp, #0x50
  442ecc:	bl	4025b0 <sprintf@plt>
  442ed0:	add	x0, sp, #0x50
  442ed4:	bl	4024f0 <strlen@plt>
  442ed8:	cbz	x0, 442f48 <nftw@plt+0x403c8>
  442edc:	add	x21, sp, #0x50
  442ee0:	add	x25, x0, x21
  442ee4:	mov	x26, #0xff                  	// #255
  442ee8:	b	442f0c <nftw@plt+0x4038c>
  442eec:	ldr	x0, [x19, #256]
  442ef0:	add	x1, x0, #0x1
  442ef4:	str	x1, [x19, #256]
  442ef8:	strb	w24, [x19, x0]
  442efc:	strb	w24, [x19, #264]
  442f00:	add	x21, x21, #0x1
  442f04:	cmp	x25, x21
  442f08:	b.eq	442f48 <nftw@plt+0x403c8>  // b.none
  442f0c:	ldrb	w24, [x21]
  442f10:	ldr	x0, [x19, #256]
  442f14:	cmp	x0, #0xff
  442f18:	b.ne	442eec <nftw@plt+0x4036c>  // b.any
  442f1c:	strb	wzr, [x19, #255]
  442f20:	ldr	x3, [x19, #272]
  442f24:	ldr	x2, [x19, #280]
  442f28:	mov	x1, x26
  442f2c:	mov	x0, x19
  442f30:	blr	x3
  442f34:	str	xzr, [x19, #256]
  442f38:	ldr	x0, [x19, #320]
  442f3c:	add	x0, x0, #0x1
  442f40:	str	x0, [x19, #320]
  442f44:	b	442eec <nftw@plt+0x4036c>
  442f48:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  442f4c:	add	x21, x21, #0xf00
  442f50:	add	x25, x21, #0x3
  442f54:	mov	x26, #0xff                  	// #255
  442f58:	b	442f7c <nftw@plt+0x403fc>
  442f5c:	ldr	x0, [x19, #256]
  442f60:	add	x1, x0, #0x1
  442f64:	str	x1, [x19, #256]
  442f68:	strb	w24, [x19, x0]
  442f6c:	strb	w24, [x19, #264]
  442f70:	add	x21, x21, #0x1
  442f74:	cmp	x25, x21
  442f78:	b.eq	442fb8 <nftw@plt+0x40438>  // b.none
  442f7c:	ldrb	w24, [x21]
  442f80:	ldr	x0, [x19, #256]
  442f84:	cmp	x0, #0xff
  442f88:	b.ne	442f5c <nftw@plt+0x403dc>  // b.any
  442f8c:	strb	wzr, [x19, #255]
  442f90:	ldr	x3, [x19, #272]
  442f94:	ldr	x2, [x19, #280]
  442f98:	mov	x1, x26
  442f9c:	mov	x0, x19
  442fa0:	blr	x3
  442fa4:	str	xzr, [x19, #256]
  442fa8:	ldr	x0, [x19, #320]
  442fac:	add	x0, x0, #0x1
  442fb0:	str	x0, [x19, #320]
  442fb4:	b	442f5c <nftw@plt+0x403dc>
  442fb8:	ldr	x20, [x20, #8]
  442fbc:	ldp	x25, x26, [sp, #64]
  442fc0:	b	442d88 <nftw@plt+0x40208>
  442fc4:	mov	x2, x20
  442fc8:	mov	w1, w22
  442fcc:	mov	x0, x19
  442fd0:	bl	441f24 <nftw@plt+0x3f3a4>
  442fd4:	str	x23, [x19, #288]
  442fd8:	ldp	x23, x24, [sp, #48]
  442fdc:	b	442ccc <nftw@plt+0x4014c>
  442fe0:	ret
  442fe4:	stp	x29, x30, [sp, #-80]!
  442fe8:	mov	x29, sp
  442fec:	stp	x19, x20, [sp, #16]
  442ff0:	stp	x21, x22, [sp, #32]
  442ff4:	stp	x23, x24, [sp, #48]
  442ff8:	mov	x19, x0
  442ffc:	mov	w22, w1
  443000:	mov	x24, x2
  443004:	cbz	x3, 4431b0 <nftw@plt+0x40630>
  443008:	mov	x21, x3
  44300c:	mov	x0, x3
  443010:	ldr	w20, [x0, #16]
  443014:	cbz	w20, 443040 <nftw@plt+0x404c0>
  443018:	ldr	x0, [x0]
  44301c:	cbnz	x0, 443010 <nftw@plt+0x40490>
  443020:	mov	w20, #0x1                   	// #1
  443024:	mov	w3, #0x0                   	// #0
  443028:	mov	x2, x21
  44302c:	mov	w1, w22
  443030:	mov	x0, x19
  443034:	bl	442c24 <nftw@plt+0x400a4>
  443038:	cbz	w20, 4431d4 <nftw@plt+0x40654>
  44303c:	b	4431b0 <nftw@plt+0x40630>
  443040:	ldr	x0, [x0, #8]
  443044:	ldr	w0, [x0]
  443048:	cmp	w0, #0x2a
  44304c:	b.eq	443024 <nftw@plt+0x404a4>  // b.none
  443050:	stp	x25, x26, [sp, #64]
  443054:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  443058:	add	x20, x20, #0x190
  44305c:	add	x25, x20, #0x2
  443060:	mov	x26, #0xff                  	// #255
  443064:	b	443088 <nftw@plt+0x40508>
  443068:	ldr	x0, [x19, #256]
  44306c:	add	x1, x0, #0x1
  443070:	str	x1, [x19, #256]
  443074:	strb	w23, [x19, x0]
  443078:	strb	w23, [x19, #264]
  44307c:	add	x20, x20, #0x1
  443080:	cmp	x20, x25
  443084:	b.eq	443174 <nftw@plt+0x405f4>  // b.none
  443088:	ldrb	w23, [x20]
  44308c:	ldr	x0, [x19, #256]
  443090:	cmp	x0, #0xff
  443094:	b.ne	443068 <nftw@plt+0x404e8>  // b.any
  443098:	strb	wzr, [x19, #255]
  44309c:	ldr	x3, [x19, #272]
  4430a0:	ldr	x2, [x19, #280]
  4430a4:	mov	x1, x26
  4430a8:	mov	x0, x19
  4430ac:	blr	x3
  4430b0:	str	xzr, [x19, #256]
  4430b4:	ldr	x0, [x19, #320]
  4430b8:	add	x0, x0, #0x1
  4430bc:	str	x0, [x19, #320]
  4430c0:	b	443068 <nftw@plt+0x404e8>
  4430c4:	strb	wzr, [x19, #255]
  4430c8:	ldr	x3, [x19, #272]
  4430cc:	ldr	x2, [x19, #280]
  4430d0:	mov	x1, #0xff                  	// #255
  4430d4:	mov	x0, x19
  4430d8:	blr	x3
  4430dc:	str	xzr, [x19, #256]
  4430e0:	ldr	x0, [x19, #320]
  4430e4:	add	x0, x0, #0x1
  4430e8:	str	x0, [x19, #320]
  4430ec:	b	443194 <nftw@plt+0x40614>
  4430f0:	strb	wzr, [x19, #255]
  4430f4:	ldr	x3, [x19, #272]
  4430f8:	ldr	x2, [x19, #280]
  4430fc:	mov	x1, #0xff                  	// #255
  443100:	mov	x0, x19
  443104:	blr	x3
  443108:	str	xzr, [x19, #256]
  44310c:	ldr	x0, [x19, #320]
  443110:	add	x0, x0, #0x1
  443114:	str	x0, [x19, #320]
  443118:	b	4431bc <nftw@plt+0x4063c>
  44311c:	strb	wzr, [x19, #255]
  443120:	ldr	x3, [x19, #272]
  443124:	ldr	x2, [x19, #280]
  443128:	mov	x1, #0xff                  	// #255
  44312c:	mov	x0, x19
  443130:	blr	x3
  443134:	str	xzr, [x19, #256]
  443138:	ldr	x0, [x19, #320]
  44313c:	add	x0, x0, #0x1
  443140:	str	x0, [x19, #320]
  443144:	b	4431e0 <nftw@plt+0x40660>
  443148:	strb	wzr, [x19, #255]
  44314c:	ldr	x3, [x19, #272]
  443150:	ldr	x2, [x19, #280]
  443154:	mov	x1, #0xff                  	// #255
  443158:	mov	x0, x19
  44315c:	blr	x3
  443160:	str	xzr, [x19, #256]
  443164:	ldr	x0, [x19, #320]
  443168:	add	x0, x0, #0x1
  44316c:	str	x0, [x19, #320]
  443170:	b	443218 <nftw@plt+0x40698>
  443174:	mov	w3, #0x0                   	// #0
  443178:	mov	x2, x21
  44317c:	mov	w1, w22
  443180:	mov	x0, x19
  443184:	bl	442c24 <nftw@plt+0x400a4>
  443188:	ldr	x0, [x19, #256]
  44318c:	cmp	x0, #0xff
  443190:	b.eq	4430c4 <nftw@plt+0x40544>  // b.none
  443194:	ldr	x1, [x19, #256]
  443198:	add	x0, x1, #0x1
  44319c:	str	x0, [x19, #256]
  4431a0:	mov	w0, #0x29                  	// #41
  4431a4:	strb	w0, [x19, x1]
  4431a8:	strb	w0, [x19, #264]
  4431ac:	ldp	x25, x26, [sp, #64]
  4431b0:	ldr	x0, [x19, #256]
  4431b4:	cmp	x0, #0xff
  4431b8:	b.eq	4430f0 <nftw@plt+0x40570>  // b.none
  4431bc:	ldr	x1, [x19, #256]
  4431c0:	add	x0, x1, #0x1
  4431c4:	str	x0, [x19, #256]
  4431c8:	mov	w0, #0x20                  	// #32
  4431cc:	strb	w0, [x19, x1]
  4431d0:	strb	w0, [x19, #264]
  4431d4:	ldr	x0, [x19, #256]
  4431d8:	cmp	x0, #0xff
  4431dc:	b.eq	44311c <nftw@plt+0x4059c>  // b.none
  4431e0:	ldr	x1, [x19, #256]
  4431e4:	add	x0, x1, #0x1
  4431e8:	str	x0, [x19, #256]
  4431ec:	mov	w0, #0x5b                  	// #91
  4431f0:	strb	w0, [x19, x1]
  4431f4:	strb	w0, [x19, #264]
  4431f8:	ldr	x2, [x24, #8]
  4431fc:	cbz	x2, 44320c <nftw@plt+0x4068c>
  443200:	mov	w1, w22
  443204:	mov	x0, x19
  443208:	bl	441f24 <nftw@plt+0x3f3a4>
  44320c:	ldr	x0, [x19, #256]
  443210:	cmp	x0, #0xff
  443214:	b.eq	443148 <nftw@plt+0x405c8>  // b.none
  443218:	ldr	x1, [x19, #256]
  44321c:	add	x0, x1, #0x1
  443220:	str	x0, [x19, #256]
  443224:	mov	w0, #0x5d                  	// #93
  443228:	strb	w0, [x19, x1]
  44322c:	strb	w0, [x19, #264]
  443230:	ldp	x19, x20, [sp, #16]
  443234:	ldp	x21, x22, [sp, #32]
  443238:	ldp	x23, x24, [sp, #48]
  44323c:	ldp	x29, x30, [sp], #80
  443240:	ret
  443244:	stp	x29, x30, [sp, #-64]!
  443248:	mov	x29, sp
  44324c:	stp	x19, x20, [sp, #16]
  443250:	mov	x19, x0
  443254:	ldr	w0, [x2]
  443258:	cmp	w0, #0x32
  44325c:	b.eq	443274 <nftw@plt+0x406f4>  // b.none
  443260:	mov	x0, x19
  443264:	bl	441f24 <nftw@plt+0x3f3a4>
  443268:	ldp	x19, x20, [sp, #16]
  44326c:	ldp	x29, x30, [sp], #64
  443270:	ret
  443274:	stp	x21, x22, [sp, #32]
  443278:	ldr	x0, [x2, #8]
  44327c:	ldr	x22, [x0, #8]
  443280:	ldrsw	x0, [x0, #16]
  443284:	cbz	x0, 443304 <nftw@plt+0x40784>
  443288:	str	x23, [sp, #48]
  44328c:	mov	x20, x22
  443290:	add	x22, x22, x0
  443294:	mov	x23, #0xff                  	// #255
  443298:	b	4432bc <nftw@plt+0x4073c>
  44329c:	ldr	x0, [x19, #256]
  4432a0:	add	x1, x0, #0x1
  4432a4:	str	x1, [x19, #256]
  4432a8:	strb	w21, [x19, x0]
  4432ac:	strb	w21, [x19, #264]
  4432b0:	add	x20, x20, #0x1
  4432b4:	cmp	x20, x22
  4432b8:	b.eq	4432f8 <nftw@plt+0x40778>  // b.none
  4432bc:	ldrb	w21, [x20]
  4432c0:	ldr	x0, [x19, #256]
  4432c4:	cmp	x0, #0xff
  4432c8:	b.ne	44329c <nftw@plt+0x4071c>  // b.any
  4432cc:	strb	wzr, [x19, #255]
  4432d0:	ldr	x3, [x19, #272]
  4432d4:	ldr	x2, [x19, #280]
  4432d8:	mov	x1, x23
  4432dc:	mov	x0, x19
  4432e0:	blr	x3
  4432e4:	str	xzr, [x19, #256]
  4432e8:	ldr	x0, [x19, #320]
  4432ec:	add	x0, x0, #0x1
  4432f0:	str	x0, [x19, #320]
  4432f4:	b	44329c <nftw@plt+0x4071c>
  4432f8:	ldp	x21, x22, [sp, #32]
  4432fc:	ldr	x23, [sp, #48]
  443300:	b	443268 <nftw@plt+0x406e8>
  443304:	ldp	x21, x22, [sp, #32]
  443308:	b	443268 <nftw@plt+0x406e8>
  44330c:	stp	x29, x30, [sp, #-48]!
  443310:	mov	x29, sp
  443314:	stp	x19, x20, [sp, #16]
  443318:	str	x21, [sp, #32]
  44331c:	mov	x19, x0
  443320:	mov	w21, w1
  443324:	mov	x20, x2
  443328:	ldr	w0, [x2]
  44332c:	cmp	w0, #0x31
  443330:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  443334:	ccmp	w0, #0x6, #0x4, hi  // hi = pmore
  443338:	b.ne	443348 <nftw@plt+0x407c8>  // b.any
  44333c:	mov	x0, x19
  443340:	bl	441f24 <nftw@plt+0x3f3a4>
  443344:	b	4433a0 <nftw@plt+0x40820>
  443348:	ldr	x0, [x19, #256]
  44334c:	cmp	x0, #0xff
  443350:	b.eq	4433b0 <nftw@plt+0x40830>  // b.none
  443354:	ldr	x1, [x19, #256]
  443358:	add	x0, x1, #0x1
  44335c:	str	x0, [x19, #256]
  443360:	mov	w0, #0x28                  	// #40
  443364:	strb	w0, [x19, x1]
  443368:	strb	w0, [x19, #264]
  44336c:	mov	x2, x20
  443370:	mov	w1, w21
  443374:	mov	x0, x19
  443378:	bl	441f24 <nftw@plt+0x3f3a4>
  44337c:	ldr	x0, [x19, #256]
  443380:	cmp	x0, #0xff
  443384:	b.eq	4433dc <nftw@plt+0x4085c>  // b.none
  443388:	ldr	x1, [x19, #256]
  44338c:	add	x0, x1, #0x1
  443390:	str	x0, [x19, #256]
  443394:	mov	w0, #0x29                  	// #41
  443398:	strb	w0, [x19, x1]
  44339c:	strb	w0, [x19, #264]
  4433a0:	ldp	x19, x20, [sp, #16]
  4433a4:	ldr	x21, [sp, #32]
  4433a8:	ldp	x29, x30, [sp], #48
  4433ac:	ret
  4433b0:	strb	wzr, [x19, #255]
  4433b4:	ldr	x3, [x19, #272]
  4433b8:	ldr	x2, [x19, #280]
  4433bc:	mov	x1, #0xff                  	// #255
  4433c0:	mov	x0, x19
  4433c4:	blr	x3
  4433c8:	str	xzr, [x19, #256]
  4433cc:	ldr	x0, [x19, #320]
  4433d0:	add	x0, x0, #0x1
  4433d4:	str	x0, [x19, #320]
  4433d8:	b	443354 <nftw@plt+0x407d4>
  4433dc:	strb	wzr, [x19, #255]
  4433e0:	ldr	x3, [x19, #272]
  4433e4:	ldr	x2, [x19, #280]
  4433e8:	mov	x1, #0xff                  	// #255
  4433ec:	mov	x0, x19
  4433f0:	blr	x3
  4433f4:	str	xzr, [x19, #256]
  4433f8:	ldr	x0, [x19, #320]
  4433fc:	add	x0, x0, #0x1
  443400:	str	x0, [x19, #320]
  443404:	b	443388 <nftw@plt+0x40808>
  443408:	stp	x29, x30, [sp, #-96]!
  44340c:	mov	x29, sp
  443410:	stp	x19, x20, [sp, #16]
  443414:	stp	x21, x22, [sp, #32]
  443418:	mov	x19, x0
  44341c:	mov	w21, w1
  443420:	ldr	x0, [x2, #8]
  443424:	ldr	x0, [x0, #8]
  443428:	ldr	x0, [x0]
  44342c:	ldrb	w1, [x0]
  443430:	cmp	w1, #0x66
  443434:	b.ne	4437e0 <nftw@plt+0x40c60>  // b.any
  443438:	stp	x23, x24, [sp, #48]
  44343c:	stp	x25, x26, [sp, #64]
  443440:	ldr	x1, [x2, #16]
  443444:	ldr	x24, [x1, #8]
  443448:	ldr	x25, [x1, #16]
  44344c:	ldr	w1, [x25]
  443450:	mov	x26, #0x0                   	// #0
  443454:	cmp	w1, #0x3c
  443458:	b.eq	4434e4 <nftw@plt+0x40964>  // b.none
  44345c:	ldr	w23, [x19, #316]
  443460:	mov	w1, #0xffffffff            	// #-1
  443464:	str	w1, [x19, #316]
  443468:	ldrb	w0, [x0, #1]
  44346c:	cmp	w0, #0x6c
  443470:	b.eq	443550 <nftw@plt+0x409d0>  // b.none
  443474:	b.hi	4434f0 <nftw@plt+0x40970>  // b.pmore
  443478:	cmp	w0, #0x4c
  44347c:	b.eq	443488 <nftw@plt+0x40908>  // b.none
  443480:	cmp	w0, #0x52
  443484:	b.ne	44360c <nftw@plt+0x40a8c>  // b.any
  443488:	str	x27, [sp, #80]
  44348c:	ldr	x0, [x19, #256]
  443490:	cmp	x0, #0xff
  443494:	b.eq	4436e0 <nftw@plt+0x40b60>  // b.none
  443498:	ldr	x1, [x19, #256]
  44349c:	add	x0, x1, #0x1
  4434a0:	str	x0, [x19, #256]
  4434a4:	mov	w0, #0x28                  	// #40
  4434a8:	strb	w0, [x19, x1]
  4434ac:	strb	w0, [x19, #264]
  4434b0:	mov	x2, x25
  4434b4:	mov	w1, w21
  4434b8:	mov	x0, x19
  4434bc:	bl	44330c <nftw@plt+0x4078c>
  4434c0:	mov	x2, x24
  4434c4:	mov	w1, w21
  4434c8:	mov	x0, x19
  4434cc:	bl	443244 <nftw@plt+0x406c4>
  4434d0:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4434d4:	add	x20, x20, #0x348
  4434d8:	add	x25, x20, #0x3
  4434dc:	mov	x27, #0xff                  	// #255
  4434e0:	b	44372c <nftw@plt+0x40bac>
  4434e4:	ldr	x26, [x25, #16]
  4434e8:	ldr	x25, [x25, #8]
  4434ec:	b	44345c <nftw@plt+0x408dc>
  4434f0:	cmp	w0, #0x72
  4434f4:	b.ne	44360c <nftw@plt+0x40a8c>  // b.any
  4434f8:	ldr	x0, [x19, #256]
  4434fc:	cmp	x0, #0xff
  443500:	b.eq	443658 <nftw@plt+0x40ad8>  // b.none
  443504:	ldr	x1, [x19, #256]
  443508:	add	x0, x1, #0x1
  44350c:	str	x0, [x19, #256]
  443510:	mov	w0, #0x28                  	// #40
  443514:	strb	w0, [x19, x1]
  443518:	strb	w0, [x19, #264]
  44351c:	mov	x2, x25
  443520:	mov	w1, w21
  443524:	mov	x0, x19
  443528:	bl	44330c <nftw@plt+0x4078c>
  44352c:	mov	x2, x24
  443530:	mov	w1, w21
  443534:	mov	x0, x19
  443538:	bl	443244 <nftw@plt+0x406c4>
  44353c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  443540:	add	x20, x20, #0x2c0
  443544:	add	x22, x20, #0x4
  443548:	mov	x24, #0xff                  	// #255
  44354c:	b	4436a4 <nftw@plt+0x40b24>
  443550:	str	x27, [sp, #80]
  443554:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  443558:	add	x20, x20, #0x2b8
  44355c:	add	x26, x20, #0x4
  443560:	mov	x27, #0xff                  	// #255
  443564:	b	443588 <nftw@plt+0x40a08>
  443568:	ldr	x0, [x19, #256]
  44356c:	add	x1, x0, #0x1
  443570:	str	x1, [x19, #256]
  443574:	strb	w22, [x19, x0]
  443578:	strb	w22, [x19, #264]
  44357c:	add	x20, x20, #0x1
  443580:	cmp	x20, x26
  443584:	b.eq	4435c4 <nftw@plt+0x40a44>  // b.none
  443588:	ldrb	w22, [x20]
  44358c:	ldr	x0, [x19, #256]
  443590:	cmp	x0, #0xff
  443594:	b.ne	443568 <nftw@plt+0x409e8>  // b.any
  443598:	strb	wzr, [x19, #255]
  44359c:	ldr	x3, [x19, #272]
  4435a0:	ldr	x2, [x19, #280]
  4435a4:	mov	x1, x27
  4435a8:	mov	x0, x19
  4435ac:	blr	x3
  4435b0:	str	xzr, [x19, #256]
  4435b4:	ldr	x0, [x19, #320]
  4435b8:	add	x0, x0, #0x1
  4435bc:	str	x0, [x19, #320]
  4435c0:	b	443568 <nftw@plt+0x409e8>
  4435c4:	mov	x2, x24
  4435c8:	mov	w1, w21
  4435cc:	mov	x0, x19
  4435d0:	bl	443244 <nftw@plt+0x406c4>
  4435d4:	mov	x2, x25
  4435d8:	mov	w1, w21
  4435dc:	mov	x0, x19
  4435e0:	bl	44330c <nftw@plt+0x4078c>
  4435e4:	ldr	x0, [x19, #256]
  4435e8:	cmp	x0, #0xff
  4435ec:	b.eq	44362c <nftw@plt+0x40aac>  // b.none
  4435f0:	ldr	x1, [x19, #256]
  4435f4:	add	x0, x1, #0x1
  4435f8:	str	x0, [x19, #256]
  4435fc:	mov	w0, #0x29                  	// #41
  443600:	strb	w0, [x19, x1]
  443604:	strb	w0, [x19, #264]
  443608:	ldr	x27, [sp, #80]
  44360c:	str	w23, [x19, #316]
  443610:	mov	w0, #0x1                   	// #1
  443614:	ldp	x23, x24, [sp, #48]
  443618:	ldp	x25, x26, [sp, #64]
  44361c:	ldp	x19, x20, [sp, #16]
  443620:	ldp	x21, x22, [sp, #32]
  443624:	ldp	x29, x30, [sp], #96
  443628:	ret
  44362c:	strb	wzr, [x19, #255]
  443630:	ldr	x3, [x19, #272]
  443634:	ldr	x2, [x19, #280]
  443638:	mov	x1, #0xff                  	// #255
  44363c:	mov	x0, x19
  443640:	blr	x3
  443644:	str	xzr, [x19, #256]
  443648:	ldr	x0, [x19, #320]
  44364c:	add	x0, x0, #0x1
  443650:	str	x0, [x19, #320]
  443654:	b	4435f0 <nftw@plt+0x40a70>
  443658:	strb	wzr, [x19, #255]
  44365c:	ldr	x3, [x19, #272]
  443660:	ldr	x2, [x19, #280]
  443664:	mov	x1, #0xff                  	// #255
  443668:	mov	x0, x19
  44366c:	blr	x3
  443670:	str	xzr, [x19, #256]
  443674:	ldr	x0, [x19, #320]
  443678:	add	x0, x0, #0x1
  44367c:	str	x0, [x19, #320]
  443680:	b	443504 <nftw@plt+0x40984>
  443684:	ldr	x0, [x19, #256]
  443688:	add	x1, x0, #0x1
  44368c:	str	x1, [x19, #256]
  443690:	strb	w21, [x19, x0]
  443694:	strb	w21, [x19, #264]
  443698:	add	x20, x20, #0x1
  44369c:	cmp	x20, x22
  4436a0:	b.eq	44360c <nftw@plt+0x40a8c>  // b.none
  4436a4:	ldrb	w21, [x20]
  4436a8:	ldr	x0, [x19, #256]
  4436ac:	cmp	x0, #0xff
  4436b0:	b.ne	443684 <nftw@plt+0x40b04>  // b.any
  4436b4:	strb	wzr, [x19, #255]
  4436b8:	ldr	x3, [x19, #272]
  4436bc:	ldr	x2, [x19, #280]
  4436c0:	mov	x1, x24
  4436c4:	mov	x0, x19
  4436c8:	blr	x3
  4436cc:	str	xzr, [x19, #256]
  4436d0:	ldr	x0, [x19, #320]
  4436d4:	add	x0, x0, #0x1
  4436d8:	str	x0, [x19, #320]
  4436dc:	b	443684 <nftw@plt+0x40b04>
  4436e0:	strb	wzr, [x19, #255]
  4436e4:	ldr	x3, [x19, #272]
  4436e8:	ldr	x2, [x19, #280]
  4436ec:	mov	x1, #0xff                  	// #255
  4436f0:	mov	x0, x19
  4436f4:	blr	x3
  4436f8:	str	xzr, [x19, #256]
  4436fc:	ldr	x0, [x19, #320]
  443700:	add	x0, x0, #0x1
  443704:	str	x0, [x19, #320]
  443708:	b	443498 <nftw@plt+0x40918>
  44370c:	ldr	x0, [x19, #256]
  443710:	add	x1, x0, #0x1
  443714:	str	x1, [x19, #256]
  443718:	strb	w22, [x19, x0]
  44371c:	strb	w22, [x19, #264]
  443720:	add	x20, x20, #0x1
  443724:	cmp	x20, x25
  443728:	b.eq	443768 <nftw@plt+0x40be8>  // b.none
  44372c:	ldrb	w22, [x20]
  443730:	ldr	x0, [x19, #256]
  443734:	cmp	x0, #0xff
  443738:	b.ne	44370c <nftw@plt+0x40b8c>  // b.any
  44373c:	strb	wzr, [x19, #255]
  443740:	ldr	x3, [x19, #272]
  443744:	ldr	x2, [x19, #280]
  443748:	mov	x1, x27
  44374c:	mov	x0, x19
  443750:	blr	x3
  443754:	str	xzr, [x19, #256]
  443758:	ldr	x0, [x19, #320]
  44375c:	add	x0, x0, #0x1
  443760:	str	x0, [x19, #320]
  443764:	b	44370c <nftw@plt+0x40b8c>
  443768:	mov	x2, x24
  44376c:	mov	w1, w21
  443770:	mov	x0, x19
  443774:	bl	443244 <nftw@plt+0x406c4>
  443778:	mov	x2, x26
  44377c:	mov	w1, w21
  443780:	mov	x0, x19
  443784:	bl	44330c <nftw@plt+0x4078c>
  443788:	ldr	x0, [x19, #256]
  44378c:	cmp	x0, #0xff
  443790:	b.eq	4437b4 <nftw@plt+0x40c34>  // b.none
  443794:	ldr	x1, [x19, #256]
  443798:	add	x0, x1, #0x1
  44379c:	str	x0, [x19, #256]
  4437a0:	mov	w0, #0x29                  	// #41
  4437a4:	strb	w0, [x19, x1]
  4437a8:	strb	w0, [x19, #264]
  4437ac:	ldr	x27, [sp, #80]
  4437b0:	b	44360c <nftw@plt+0x40a8c>
  4437b4:	strb	wzr, [x19, #255]
  4437b8:	ldr	x3, [x19, #272]
  4437bc:	ldr	x2, [x19, #280]
  4437c0:	mov	x1, #0xff                  	// #255
  4437c4:	mov	x0, x19
  4437c8:	blr	x3
  4437cc:	str	xzr, [x19, #256]
  4437d0:	ldr	x0, [x19, #320]
  4437d4:	add	x0, x0, #0x1
  4437d8:	str	x0, [x19, #320]
  4437dc:	b	443794 <nftw@plt+0x40c14>
  4437e0:	mov	w0, #0x0                   	// #0
  4437e4:	b	44361c <nftw@plt+0x40a9c>
  4437e8:	cmp	x1, #0x0
  4437ec:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  4437f0:	ccmp	x0, #0x0, #0x4, gt
  4437f4:	b.ne	443800 <nftw@plt+0x40c80>  // b.any
  4437f8:	mov	w0, #0x0                   	// #0
  4437fc:	ret
  443800:	str	wzr, [x0, #4]
  443804:	str	wzr, [x0]
  443808:	str	x1, [x0, #8]
  44380c:	str	w2, [x0, #16]
  443810:	mov	w0, #0x1                   	// #1
  443814:	b	4437fc <nftw@plt+0x40c7c>
  443818:	stp	x29, x30, [sp, #-48]!
  44381c:	mov	x29, sp
  443820:	stp	x19, x20, [sp, #16]
  443824:	str	x21, [sp, #32]
  443828:	mov	x20, x1
  44382c:	mov	w21, w2
  443830:	bl	43d16c <nftw@plt+0x3a5ec>
  443834:	mov	x19, x0
  443838:	mov	w2, w21
  44383c:	mov	x1, x20
  443840:	bl	4437e8 <nftw@plt+0x40c68>
  443844:	cmp	w0, #0x0
  443848:	csel	x0, x19, xzr, ne  // ne = any
  44384c:	ldp	x19, x20, [sp, #16]
  443850:	ldr	x21, [sp, #32]
  443854:	ldp	x29, x30, [sp], #48
  443858:	ret
  44385c:	stp	x29, x30, [sp, #-48]!
  443860:	mov	x29, sp
  443864:	stp	x19, x20, [sp, #16]
  443868:	mov	x19, x0
  44386c:	bl	43d394 <nftw@plt+0x3a814>
  443870:	cmp	w0, #0x0
  443874:	b.le	443958 <nftw@plt+0x40dd8>
  443878:	str	x21, [sp, #32]
  44387c:	mov	w20, w0
  443880:	ldr	x21, [x19, #24]
  443884:	ldr	x0, [x19, #8]
  443888:	sub	x0, x0, x21
  44388c:	cmp	x0, w20, sxtw
  443890:	b.lt	443950 <nftw@plt+0x40dd0>  // b.tstop
  443894:	add	x0, x21, w20, sxtw
  443898:	str	x0, [x19, #24]
  44389c:	ldr	w1, [x19, #16]
  4438a0:	tbz	w1, #2, 4438b0 <nftw@plt+0x40d30>
  4438a4:	ldrb	w1, [x21, w20, sxtw]
  4438a8:	cmp	w1, #0x24
  4438ac:	b.eq	44391c <nftw@plt+0x40d9c>  // b.none
  4438b0:	cmp	w20, #0x9
  4438b4:	b.le	4438f8 <nftw@plt+0x40d78>
  4438b8:	mov	x2, #0x8                   	// #8
  4438bc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4438c0:	add	x1, x1, #0x2c8
  4438c4:	mov	x0, x21
  4438c8:	bl	402850 <memcmp@plt>
  4438cc:	cbnz	w0, 4438f8 <nftw@plt+0x40d78>
  4438d0:	ldrb	w0, [x21, #8]
  4438d4:	cmp	w0, #0x2e
  4438d8:	mov	w1, #0x5f                  	// #95
  4438dc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4438e0:	mov	w1, #0x24                  	// #36
  4438e4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4438e8:	b.ne	4438f8 <nftw@plt+0x40d78>  // b.any
  4438ec:	ldrb	w0, [x21, #9]
  4438f0:	cmp	w0, #0x4e
  4438f4:	b.eq	443928 <nftw@plt+0x40da8>  // b.none
  4438f8:	mov	w2, w20
  4438fc:	mov	x1, x21
  443900:	mov	x0, x19
  443904:	bl	443818 <nftw@plt+0x40c98>
  443908:	str	x0, [x19, #64]
  44390c:	ldr	x21, [sp, #32]
  443910:	ldp	x19, x20, [sp, #16]
  443914:	ldp	x29, x30, [sp], #48
  443918:	ret
  44391c:	add	x0, x0, #0x1
  443920:	str	x0, [x19, #24]
  443924:	b	4438b0 <nftw@plt+0x40d30>
  443928:	ldr	w0, [x19, #72]
  44392c:	add	w0, w0, #0x16
  443930:	sub	w20, w0, w20
  443934:	str	w20, [x19, #72]
  443938:	mov	w2, #0x15                  	// #21
  44393c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  443940:	add	x1, x1, #0x2d8
  443944:	mov	x0, x19
  443948:	bl	443818 <nftw@plt+0x40c98>
  44394c:	b	443908 <nftw@plt+0x40d88>
  443950:	mov	x0, #0x0                   	// #0
  443954:	b	443908 <nftw@plt+0x40d88>
  443958:	mov	x0, #0x0                   	// #0
  44395c:	b	443910 <nftw@plt+0x40d90>
  443960:	stp	x29, x30, [sp, #-48]!
  443964:	mov	x29, sp
  443968:	stp	x19, x20, [sp, #16]
  44396c:	stp	x21, x22, [sp, #32]
  443970:	mov	x19, x0
  443974:	mov	x20, x1
  443978:	ldr	x22, [x0, #64]
  44397c:	ldr	x2, [x0, #24]
  443980:	ldrb	w0, [x2]
  443984:	cmp	w0, #0x42
  443988:	b.ne	4439c8 <nftw@plt+0x40e48>  // b.any
  44398c:	mov	w21, #0x4c                  	// #76
  443990:	add	x2, x2, #0x1
  443994:	str	x2, [x19, #24]
  443998:	mov	x0, x19
  44399c:	bl	44385c <nftw@plt+0x40cdc>
  4439a0:	mov	x3, x0
  4439a4:	mov	x2, x20
  4439a8:	mov	w1, w21
  4439ac:	mov	x0, x19
  4439b0:	bl	43d1ac <nftw@plt+0x3a62c>
  4439b4:	mov	x20, x0
  4439b8:	ldr	x2, [x19, #24]
  4439bc:	ldrb	w0, [x2]
  4439c0:	cmp	w0, #0x42
  4439c4:	b.eq	443990 <nftw@plt+0x40e10>  // b.none
  4439c8:	str	x22, [x19, #64]
  4439cc:	mov	x0, x20
  4439d0:	ldp	x19, x20, [sp, #16]
  4439d4:	ldp	x21, x22, [sp, #32]
  4439d8:	ldp	x29, x30, [sp], #48
  4439dc:	ret
  4439e0:	stp	x29, x30, [sp, #-64]!
  4439e4:	mov	x29, sp
  4439e8:	stp	x19, x20, [sp, #16]
  4439ec:	mov	x19, x0
  4439f0:	ldr	x0, [x0, #24]
  4439f4:	ldrb	w2, [x0]
  4439f8:	mov	x20, #0x0                   	// #0
  4439fc:	cmp	w2, #0x53
  443a00:	b.ne	443a58 <nftw@plt+0x40ed8>  // b.any
  443a04:	add	x2, x0, #0x1
  443a08:	str	x2, [x19, #24]
  443a0c:	ldrb	w2, [x0, #1]
  443a10:	cbz	w2, 443afc <nftw@plt+0x40f7c>
  443a14:	add	x2, x0, #0x2
  443a18:	str	x2, [x19, #24]
  443a1c:	ldrb	w2, [x0, #1]
  443a20:	sub	w0, w2, #0x30
  443a24:	and	w0, w0, #0xff
  443a28:	cmp	w2, #0x5f
  443a2c:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  443a30:	b.hi	443a68 <nftw@plt+0x40ee8>  // b.pmore
  443a34:	mov	w1, #0x0                   	// #0
  443a38:	cmp	w2, #0x5f
  443a3c:	b.ne	443ad4 <nftw@plt+0x40f54>  // b.any
  443a40:	ldr	w0, [x19, #56]
  443a44:	mov	x20, #0x0                   	// #0
  443a48:	cmp	w0, w1
  443a4c:	b.ls	443a58 <nftw@plt+0x40ed8>  // b.plast
  443a50:	ldr	x0, [x19, #48]
  443a54:	ldr	x20, [x0, w1, uxtw #3]
  443a58:	mov	x0, x20
  443a5c:	ldp	x19, x20, [sp, #16]
  443a60:	ldp	x29, x30, [sp], #64
  443a64:	ret
  443a68:	sub	w3, w2, #0x41
  443a6c:	and	w3, w3, #0xff
  443a70:	mov	w0, #0x0                   	// #0
  443a74:	cmp	w3, #0x19
  443a78:	b.ls	443a88 <nftw@plt+0x40f08>  // b.plast
  443a7c:	stp	x21, x22, [sp, #32]
  443a80:	b	443b00 <nftw@plt+0x40f80>
  443a84:	mov	w0, w1
  443a88:	sub	w1, w2, #0x30
  443a8c:	and	w1, w1, #0xff
  443a90:	cmp	w1, #0x9
  443a94:	b.hi	443adc <nftw@plt+0x40f5c>  // b.pmore
  443a98:	add	w1, w0, w0, lsl #3
  443a9c:	add	w1, w2, w1, lsl #2
  443aa0:	sub	w1, w1, #0x30
  443aa4:	cmp	w0, w1
  443aa8:	b.hi	443c2c <nftw@plt+0x410ac>  // b.pmore
  443aac:	ldr	x0, [x19, #24]
  443ab0:	ldrb	w2, [x0]
  443ab4:	cbz	w2, 443a84 <nftw@plt+0x40f04>
  443ab8:	add	x2, x0, #0x1
  443abc:	str	x2, [x19, #24]
  443ac0:	ldrb	w2, [x0]
  443ac4:	cmp	w2, #0x5f
  443ac8:	b.ne	443a84 <nftw@plt+0x40f04>  // b.any
  443acc:	add	w1, w1, #0x1
  443ad0:	b	443a40 <nftw@plt+0x40ec0>
  443ad4:	mov	w0, #0x0                   	// #0
  443ad8:	b	443a88 <nftw@plt+0x40f08>
  443adc:	sub	w1, w2, #0x41
  443ae0:	and	w1, w1, #0xff
  443ae4:	cmp	w1, #0x19
  443ae8:	b.hi	443c24 <nftw@plt+0x410a4>  // b.pmore
  443aec:	add	w1, w0, w0, lsl #3
  443af0:	add	w1, w2, w1, lsl #2
  443af4:	sub	w1, w1, #0x37
  443af8:	b	443aa4 <nftw@plt+0x40f24>
  443afc:	stp	x21, x22, [sp, #32]
  443b00:	ldr	w21, [x19, #16]
  443b04:	ands	w0, w21, #0x8
  443b08:	ubfx	x21, x21, #3, #1
  443b0c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  443b10:	b.eq	443b2c <nftw@plt+0x40fac>  // b.none
  443b14:	ldr	x0, [x19, #24]
  443b18:	ldrb	w0, [x0]
  443b1c:	sub	w0, w0, #0x43
  443b20:	and	w0, w0, #0xff
  443b24:	cmp	w0, #0x1
  443b28:	csinc	w21, w21, wzr, hi  // hi = pmore
  443b2c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  443b30:	add	x20, x20, #0x2c0
  443b34:	add	x20, x20, #0x440
  443b38:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  443b3c:	add	x1, x1, #0x2c0
  443b40:	add	x1, x1, #0x5c8
  443b44:	ldrb	w0, [x20]
  443b48:	cmp	w0, w2
  443b4c:	b.eq	443b68 <nftw@plt+0x40fe8>  // b.none
  443b50:	add	x20, x20, #0x38
  443b54:	cmp	x20, x1
  443b58:	b.ne	443b44 <nftw@plt+0x40fc4>  // b.any
  443b5c:	mov	x20, #0x0                   	// #0
  443b60:	ldp	x21, x22, [sp, #32]
  443b64:	b	443a58 <nftw@plt+0x40ed8>
  443b68:	ldr	x22, [x20, #40]
  443b6c:	cbz	x22, 443b9c <nftw@plt+0x4101c>
  443b70:	str	x23, [sp, #48]
  443b74:	ldr	w23, [x20, #48]
  443b78:	mov	x0, x19
  443b7c:	bl	43d16c <nftw@plt+0x3a5ec>
  443b80:	cbz	x0, 443b94 <nftw@plt+0x41014>
  443b84:	mov	w1, #0x18                  	// #24
  443b88:	str	w1, [x0]
  443b8c:	str	x22, [x0, #8]
  443b90:	str	w23, [x0, #16]
  443b94:	str	x0, [x19, #64]
  443b98:	ldr	x23, [sp, #48]
  443b9c:	cbz	w21, 443bec <nftw@plt+0x4106c>
  443ba0:	ldr	x22, [x20, #24]
  443ba4:	ldr	w21, [x20, #32]
  443ba8:	ldr	w0, [x19, #72]
  443bac:	add	w0, w0, w21
  443bb0:	str	w0, [x19, #72]
  443bb4:	mov	x0, x19
  443bb8:	bl	43d16c <nftw@plt+0x3a5ec>
  443bbc:	mov	x20, x0
  443bc0:	cbz	x0, 443bd4 <nftw@plt+0x41054>
  443bc4:	mov	w0, #0x18                  	// #24
  443bc8:	str	w0, [x20]
  443bcc:	str	x22, [x20, #8]
  443bd0:	str	w21, [x20, #16]
  443bd4:	ldr	x0, [x19, #24]
  443bd8:	ldrb	w0, [x0]
  443bdc:	cmp	w0, #0x42
  443be0:	b.eq	443bf8 <nftw@plt+0x41078>  // b.none
  443be4:	ldp	x21, x22, [sp, #32]
  443be8:	b	443a58 <nftw@plt+0x40ed8>
  443bec:	ldr	x22, [x20, #8]
  443bf0:	ldr	w21, [x20, #16]
  443bf4:	b	443ba8 <nftw@plt+0x41028>
  443bf8:	mov	x1, x20
  443bfc:	mov	x0, x19
  443c00:	bl	443960 <nftw@plt+0x40de0>
  443c04:	mov	x20, x0
  443c08:	mov	x1, x0
  443c0c:	mov	x0, x19
  443c10:	bl	43d7e0 <nftw@plt+0x3ac60>
  443c14:	cmp	w0, #0x0
  443c18:	csel	x20, x20, xzr, ne  // ne = any
  443c1c:	ldp	x21, x22, [sp, #32]
  443c20:	b	443a58 <nftw@plt+0x40ed8>
  443c24:	mov	x20, #0x0                   	// #0
  443c28:	b	443a58 <nftw@plt+0x40ed8>
  443c2c:	mov	x20, #0x0                   	// #0
  443c30:	b	443a58 <nftw@plt+0x40ed8>
  443c34:	cmp	w1, #0x0
  443c38:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
  443c3c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  443c40:	b.eq	443c60 <nftw@plt+0x410e0>  // b.none
  443c44:	str	wzr, [x0, #4]
  443c48:	mov	w3, #0x33                  	// #51
  443c4c:	str	w3, [x0]
  443c50:	str	w1, [x0, #8]
  443c54:	str	x2, [x0, #16]
  443c58:	mov	w0, #0x1                   	// #1
  443c5c:	ret
  443c60:	mov	w0, #0x0                   	// #0
  443c64:	b	443c5c <nftw@plt+0x410dc>
  443c68:	mov	x3, x0
  443c6c:	cmp	x0, #0x0
  443c70:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  443c74:	mov	w0, #0x0                   	// #0
  443c78:	b.eq	443ca4 <nftw@plt+0x41124>  // b.none
  443c7c:	sub	w4, w1, #0x1
  443c80:	mov	w0, #0x0                   	// #0
  443c84:	cmp	w4, #0x4
  443c88:	b.hi	443ca4 <nftw@plt+0x41124>  // b.pmore
  443c8c:	str	wzr, [x3, #4]
  443c90:	mov	w0, #0x7                   	// #7
  443c94:	str	w0, [x3]
  443c98:	str	w1, [x3, #8]
  443c9c:	str	x2, [x3, #16]
  443ca0:	mov	w0, #0x1                   	// #1
  443ca4:	ret
  443ca8:	mov	x3, x0
  443cac:	cmp	x0, #0x0
  443cb0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  443cb4:	mov	w0, #0x0                   	// #0
  443cb8:	b.eq	443ce4 <nftw@plt+0x41164>  // b.none
  443cbc:	sub	w4, w1, #0x1
  443cc0:	mov	w0, #0x0                   	// #0
  443cc4:	cmp	w4, #0x4
  443cc8:	b.hi	443ce4 <nftw@plt+0x41164>  // b.pmore
  443ccc:	str	wzr, [x3, #4]
  443cd0:	mov	w0, #0x8                   	// #8
  443cd4:	str	w0, [x3]
  443cd8:	str	w1, [x3, #8]
  443cdc:	str	x2, [x3, #16]
  443ce0:	mov	w0, #0x1                   	// #1
  443ce4:	ret
  443ce8:	stp	x29, x30, [sp, #-80]!
  443cec:	mov	x29, sp
  443cf0:	stp	x19, x20, [sp, #16]
  443cf4:	mov	x19, x0
  443cf8:	bl	43d554 <nftw@plt+0x3a9d4>
  443cfc:	cbnz	w0, 443d2c <nftw@plt+0x411ac>
  443d00:	ldr	x0, [x19, #24]
  443d04:	ldrb	w2, [x0]
  443d08:	sub	w1, w2, #0x30
  443d0c:	cmp	w1, #0x4a
  443d10:	b.hi	444630 <nftw@plt+0x41ab0>  // b.pmore
  443d14:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  443d18:	add	x3, x3, #0x228
  443d1c:	ldrh	w1, [x3, w1, uxtw #1]
  443d20:	adr	x3, 443d2c <nftw@plt+0x411ac>
  443d24:	add	x1, x3, w1, sxth #2
  443d28:	br	x1
  443d2c:	mov	w2, #0x0                   	// #0
  443d30:	add	x1, sp, #0x48
  443d34:	mov	x0, x19
  443d38:	bl	4457e0 <nftw@plt+0x42c60>
  443d3c:	mov	x20, x0
  443d40:	cbz	x0, 443e40 <nftw@plt+0x412c0>
  443d44:	ldr	x0, [x19, #24]
  443d48:	ldrb	w0, [x0]
  443d4c:	cmp	w0, #0x46
  443d50:	b.eq	443d94 <nftw@plt+0x41214>  // b.none
  443d54:	mov	x0, x19
  443d58:	bl	443ce8 <nftw@plt+0x41168>
  443d5c:	str	x0, [x20]
  443d60:	ldr	x0, [x20]
  443d64:	cbz	x0, 444628 <nftw@plt+0x41aa8>
  443d68:	ldr	w1, [x0]
  443d6c:	sub	w1, w1, #0x1f
  443d70:	cmp	w1, #0x1
  443d74:	b.ls	443da4 <nftw@plt+0x41224>  // b.plast
  443d78:	ldr	x1, [sp, #72]
  443d7c:	mov	x0, x19
  443d80:	bl	43d7e0 <nftw@plt+0x3ac60>
  443d84:	cmp	w0, #0x0
  443d88:	ldr	x20, [sp, #72]
  443d8c:	csel	x20, x20, xzr, ne  // ne = any
  443d90:	b	443e40 <nftw@plt+0x412c0>
  443d94:	mov	x0, x19
  443d98:	bl	444e90 <nftw@plt+0x42310>
  443d9c:	str	x0, [x20]
  443da0:	b	443d60 <nftw@plt+0x411e0>
  443da4:	ldr	x1, [x0, #8]
  443da8:	ldr	x2, [sp, #72]
  443dac:	str	x2, [x0, #8]
  443db0:	ldr	x0, [x20]
  443db4:	str	x0, [sp, #72]
  443db8:	str	x1, [x20]
  443dbc:	b	443d78 <nftw@plt+0x411f8>
  443dc0:	sub	w2, w2, #0x61
  443dc4:	sbfiz	x2, x2, #5, #32
  443dc8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  443dcc:	add	x1, x1, #0x2c0
  443dd0:	add	x1, x1, x2
  443dd4:	mov	x0, x19
  443dd8:	bl	43d25c <nftw@plt+0x3a6dc>
  443ddc:	str	x0, [sp, #72]
  443de0:	ldr	x1, [x0, #8]
  443de4:	ldr	w0, [x19, #72]
  443de8:	ldr	w1, [x1, #8]
  443dec:	add	w0, w0, w1
  443df0:	str	w0, [x19, #72]
  443df4:	ldr	x0, [x19, #24]
  443df8:	add	x0, x0, #0x1
  443dfc:	str	x0, [x19, #24]
  443e00:	b	443e3c <nftw@plt+0x412bc>
  443e04:	add	x0, x0, #0x1
  443e08:	str	x0, [x19, #24]
  443e0c:	mov	x0, x19
  443e10:	bl	44385c <nftw@plt+0x40cdc>
  443e14:	mov	x3, #0x0                   	// #0
  443e18:	mov	x2, x0
  443e1c:	mov	w1, #0x28                  	// #40
  443e20:	mov	x0, x19
  443e24:	bl	43d1ac <nftw@plt+0x3a62c>
  443e28:	str	x0, [sp, #72]
  443e2c:	ldr	x1, [sp, #72]
  443e30:	mov	x0, x19
  443e34:	bl	43d7e0 <nftw@plt+0x3ac60>
  443e38:	cbz	w0, 444640 <nftw@plt+0x41ac0>
  443e3c:	ldr	x20, [sp, #72]
  443e40:	mov	x0, x20
  443e44:	ldp	x19, x20, [sp, #16]
  443e48:	ldp	x29, x30, [sp], #80
  443e4c:	ret
  443e50:	mov	x0, x19
  443e54:	bl	444e90 <nftw@plt+0x42310>
  443e58:	str	x0, [sp, #72]
  443e5c:	b	443e2c <nftw@plt+0x412ac>
  443e60:	mov	x0, x19
  443e64:	bl	445a74 <nftw@plt+0x42ef4>
  443e68:	str	x0, [sp, #72]
  443e6c:	b	443e2c <nftw@plt+0x412ac>
  443e70:	add	x1, x0, #0x1
  443e74:	str	x1, [x19, #24]
  443e78:	ldrb	w0, [x0, #1]
  443e7c:	cmp	w0, #0x5f
  443e80:	b.eq	443f1c <nftw@plt+0x4139c>  // b.none
  443e84:	sub	w0, w0, #0x30
  443e88:	and	w0, w0, #0xff
  443e8c:	cmp	w0, #0x9
  443e90:	b.hi	443f08 <nftw@plt+0x41388>  // b.pmore
  443e94:	ldr	x0, [x19, #24]
  443e98:	add	x2, x0, #0x1
  443e9c:	str	x2, [x19, #24]
  443ea0:	ldrb	w0, [x0, #1]
  443ea4:	sub	w0, w0, #0x30
  443ea8:	and	w0, w0, #0xff
  443eac:	cmp	w0, #0x9
  443eb0:	b.ls	443e94 <nftw@plt+0x41314>  // b.plast
  443eb4:	sub	w2, w2, w1
  443eb8:	mov	x0, x19
  443ebc:	bl	443818 <nftw@plt+0x40c98>
  443ec0:	mov	x20, x0
  443ec4:	cbz	x0, 443f00 <nftw@plt+0x41380>
  443ec8:	ldr	x0, [x19, #24]
  443ecc:	ldrb	w1, [x0]
  443ed0:	cmp	w1, #0x5f
  443ed4:	b.ne	443f24 <nftw@plt+0x413a4>  // b.any
  443ed8:	add	x0, x0, #0x1
  443edc:	str	x0, [x19, #24]
  443ee0:	mov	x0, x19
  443ee4:	bl	443ce8 <nftw@plt+0x41168>
  443ee8:	mov	x3, x0
  443eec:	mov	x2, x20
  443ef0:	mov	w1, #0x2a                  	// #42
  443ef4:	mov	x0, x19
  443ef8:	bl	43d1ac <nftw@plt+0x3a62c>
  443efc:	mov	x20, x0
  443f00:	str	x20, [sp, #72]
  443f04:	b	443e2c <nftw@plt+0x412ac>
  443f08:	mov	x0, x19
  443f0c:	bl	444f68 <nftw@plt+0x423e8>
  443f10:	mov	x20, x0
  443f14:	cbnz	x0, 443ec8 <nftw@plt+0x41348>
  443f18:	b	443f00 <nftw@plt+0x41380>
  443f1c:	mov	x20, #0x0                   	// #0
  443f20:	b	443ec8 <nftw@plt+0x41348>
  443f24:	mov	x20, #0x0                   	// #0
  443f28:	b	443f00 <nftw@plt+0x41380>
  443f2c:	add	x0, x0, #0x1
  443f30:	str	x0, [x19, #24]
  443f34:	mov	x0, x19
  443f38:	bl	443ce8 <nftw@plt+0x41168>
  443f3c:	mov	x20, x0
  443f40:	cbz	x0, 443f68 <nftw@plt+0x413e8>
  443f44:	mov	x0, x19
  443f48:	bl	443ce8 <nftw@plt+0x41168>
  443f4c:	mov	x3, x0
  443f50:	cbz	x0, 443f70 <nftw@plt+0x413f0>
  443f54:	mov	x2, x20
  443f58:	mov	w1, #0x2b                  	// #43
  443f5c:	mov	x0, x19
  443f60:	bl	43d1ac <nftw@plt+0x3a62c>
  443f64:	mov	x20, x0
  443f68:	str	x20, [sp, #72]
  443f6c:	b	443e2c <nftw@plt+0x412ac>
  443f70:	mov	x20, x0
  443f74:	b	443f68 <nftw@plt+0x413e8>
  443f78:	mov	x0, x19
  443f7c:	bl	43d694 <nftw@plt+0x3ab14>
  443f80:	str	x0, [sp, #72]
  443f84:	ldr	x20, [x19, #24]
  443f88:	ldrb	w1, [x20]
  443f8c:	cmp	w1, #0x49
  443f90:	b.ne	443e2c <nftw@plt+0x412ac>  // b.any
  443f94:	ldr	w1, [x19, #80]
  443f98:	cbnz	w1, 443fd8 <nftw@plt+0x41458>
  443f9c:	mov	x1, x0
  443fa0:	mov	x0, x19
  443fa4:	bl	43d7e0 <nftw@plt+0x3ac60>
  443fa8:	mov	x20, #0x0                   	// #0
  443fac:	cbz	w0, 443e40 <nftw@plt+0x412c0>
  443fb0:	ldr	x20, [sp, #72]
  443fb4:	mov	x0, x19
  443fb8:	bl	446be0 <nftw@plt+0x44060>
  443fbc:	mov	x3, x0
  443fc0:	mov	x2, x20
  443fc4:	mov	w1, #0x4                   	// #4
  443fc8:	mov	x0, x19
  443fcc:	bl	43d1ac <nftw@plt+0x3a62c>
  443fd0:	str	x0, [sp, #72]
  443fd4:	b	443e2c <nftw@plt+0x412ac>
  443fd8:	stp	x21, x22, [sp, #32]
  443fdc:	stp	x23, x24, [sp, #48]
  443fe0:	ldr	w24, [x19, #40]
  443fe4:	ldr	w23, [x19, #56]
  443fe8:	ldr	w22, [x19, #72]
  443fec:	mov	x0, x19
  443ff0:	bl	446be0 <nftw@plt+0x44060>
  443ff4:	mov	x21, x0
  443ff8:	ldr	x0, [x19, #24]
  443ffc:	ldrb	w0, [x0]
  444000:	cmp	w0, #0x49
  444004:	b.eq	444024 <nftw@plt+0x414a4>  // b.none
  444008:	str	x20, [x19, #24]
  44400c:	str	w24, [x19, #40]
  444010:	str	w23, [x19, #56]
  444014:	str	w22, [x19, #72]
  444018:	ldp	x21, x22, [sp, #32]
  44401c:	ldp	x23, x24, [sp, #48]
  444020:	b	443e2c <nftw@plt+0x412ac>
  444024:	ldr	x1, [sp, #72]
  444028:	mov	x0, x19
  44402c:	bl	43d7e0 <nftw@plt+0x3ac60>
  444030:	cbz	w0, 444058 <nftw@plt+0x414d8>
  444034:	mov	x3, x21
  444038:	ldr	x2, [sp, #72]
  44403c:	mov	w1, #0x4                   	// #4
  444040:	mov	x0, x19
  444044:	bl	43d1ac <nftw@plt+0x3a62c>
  444048:	str	x0, [sp, #72]
  44404c:	ldp	x21, x22, [sp, #32]
  444050:	ldp	x23, x24, [sp, #48]
  444054:	b	443e2c <nftw@plt+0x412ac>
  444058:	mov	x20, #0x0                   	// #0
  44405c:	ldp	x21, x22, [sp, #32]
  444060:	ldp	x23, x24, [sp, #48]
  444064:	b	443e40 <nftw@plt+0x412c0>
  444068:	ldrb	w0, [x0, #1]
  44406c:	sub	w1, w0, #0x30
  444070:	and	w1, w1, #0xff
  444074:	cmp	w0, #0x5f
  444078:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  44407c:	b.ls	444090 <nftw@plt+0x41510>  // b.plast
  444080:	sub	w0, w0, #0x41
  444084:	and	w0, w0, #0xff
  444088:	cmp	w0, #0x19
  44408c:	b.hi	4440d8 <nftw@plt+0x41558>  // b.pmore
  444090:	mov	w1, #0x0                   	// #0
  444094:	mov	x0, x19
  444098:	bl	4439e0 <nftw@plt+0x40e60>
  44409c:	mov	x20, x0
  4440a0:	str	x0, [sp, #72]
  4440a4:	ldr	x0, [x19, #24]
  4440a8:	ldrb	w0, [x0]
  4440ac:	cmp	w0, #0x49
  4440b0:	b.ne	443e3c <nftw@plt+0x412bc>  // b.any
  4440b4:	mov	x0, x19
  4440b8:	bl	446be0 <nftw@plt+0x44060>
  4440bc:	mov	x3, x0
  4440c0:	mov	x2, x20
  4440c4:	mov	w1, #0x4                   	// #4
  4440c8:	mov	x0, x19
  4440cc:	bl	43d1ac <nftw@plt+0x3a62c>
  4440d0:	str	x0, [sp, #72]
  4440d4:	b	443e2c <nftw@plt+0x412ac>
  4440d8:	mov	x0, x19
  4440dc:	bl	445a74 <nftw@plt+0x42ef4>
  4440e0:	str	x0, [sp, #72]
  4440e4:	cbz	x0, 443e2c <nftw@plt+0x412ac>
  4440e8:	ldr	w0, [x0]
  4440ec:	cmp	w0, #0x18
  4440f0:	b.ne	443e2c <nftw@plt+0x412ac>  // b.any
  4440f4:	b	443e3c <nftw@plt+0x412bc>
  4440f8:	add	x0, x0, #0x1
  4440fc:	str	x0, [x19, #24]
  444100:	mov	x0, x19
  444104:	bl	443ce8 <nftw@plt+0x41168>
  444108:	mov	x3, #0x0                   	// #0
  44410c:	mov	x2, x0
  444110:	mov	w1, #0x24                  	// #36
  444114:	mov	x0, x19
  444118:	bl	43d1ac <nftw@plt+0x3a62c>
  44411c:	str	x0, [sp, #72]
  444120:	b	443e2c <nftw@plt+0x412ac>
  444124:	add	x0, x0, #0x1
  444128:	str	x0, [x19, #24]
  44412c:	mov	x0, x19
  444130:	bl	443ce8 <nftw@plt+0x41168>
  444134:	mov	x3, #0x0                   	// #0
  444138:	mov	x2, x0
  44413c:	mov	w1, #0x22                  	// #34
  444140:	mov	x0, x19
  444144:	bl	43d1ac <nftw@plt+0x3a62c>
  444148:	str	x0, [sp, #72]
  44414c:	b	443e2c <nftw@plt+0x412ac>
  444150:	add	x0, x0, #0x1
  444154:	str	x0, [x19, #24]
  444158:	mov	x0, x19
  44415c:	bl	443ce8 <nftw@plt+0x41168>
  444160:	mov	x3, #0x0                   	// #0
  444164:	mov	x2, x0
  444168:	mov	w1, #0x23                  	// #35
  44416c:	mov	x0, x19
  444170:	bl	43d1ac <nftw@plt+0x3a62c>
  444174:	str	x0, [sp, #72]
  444178:	b	443e2c <nftw@plt+0x412ac>
  44417c:	add	x0, x0, #0x1
  444180:	str	x0, [x19, #24]
  444184:	mov	x0, x19
  444188:	bl	443ce8 <nftw@plt+0x41168>
  44418c:	mov	x3, #0x0                   	// #0
  444190:	mov	x2, x0
  444194:	mov	w1, #0x25                  	// #37
  444198:	mov	x0, x19
  44419c:	bl	43d1ac <nftw@plt+0x3a62c>
  4441a0:	str	x0, [sp, #72]
  4441a4:	b	443e2c <nftw@plt+0x412ac>
  4441a8:	add	x0, x0, #0x1
  4441ac:	str	x0, [x19, #24]
  4441b0:	mov	x0, x19
  4441b4:	bl	443ce8 <nftw@plt+0x41168>
  4441b8:	mov	x3, #0x0                   	// #0
  4441bc:	mov	x2, x0
  4441c0:	mov	w1, #0x26                  	// #38
  4441c4:	mov	x0, x19
  4441c8:	bl	43d1ac <nftw@plt+0x3a62c>
  4441cc:	str	x0, [sp, #72]
  4441d0:	b	443e2c <nftw@plt+0x412ac>
  4441d4:	add	x0, x0, #0x1
  4441d8:	str	x0, [x19, #24]
  4441dc:	mov	x0, x19
  4441e0:	bl	44385c <nftw@plt+0x40cdc>
  4441e4:	mov	x20, x0
  4441e8:	str	x0, [sp, #72]
  4441ec:	ldr	x0, [x19, #24]
  4441f0:	ldrb	w0, [x0]
  4441f4:	cmp	w0, #0x49
  4441f8:	b.eq	444220 <nftw@plt+0x416a0>  // b.none
  4441fc:	mov	x0, x19
  444200:	bl	443ce8 <nftw@plt+0x41168>
  444204:	ldr	x3, [sp, #72]
  444208:	mov	x2, x0
  44420c:	mov	w1, #0x21                  	// #33
  444210:	mov	x0, x19
  444214:	bl	43d1ac <nftw@plt+0x3a62c>
  444218:	str	x0, [sp, #72]
  44421c:	b	443e2c <nftw@plt+0x412ac>
  444220:	mov	x0, x19
  444224:	bl	446be0 <nftw@plt+0x44060>
  444228:	mov	x3, x0
  44422c:	mov	x2, x20
  444230:	mov	w1, #0x4                   	// #4
  444234:	mov	x0, x19
  444238:	bl	43d1ac <nftw@plt+0x3a62c>
  44423c:	str	x0, [sp, #72]
  444240:	b	4441fc <nftw@plt+0x4167c>
  444244:	add	x1, x0, #0x1
  444248:	str	x1, [x19, #24]
  44424c:	ldrb	w1, [x0, #1]
  444250:	mov	x20, #0x0                   	// #0
  444254:	cbz	w1, 443e40 <nftw@plt+0x412c0>
  444258:	add	x1, x0, #0x2
  44425c:	str	x1, [x19, #24]
  444260:	ldrb	w1, [x0, #1]
  444264:	cmp	w1, #0x68
  444268:	b.eq	44453c <nftw@plt+0x419bc>  // b.none
  44426c:	b.hi	4443b4 <nftw@plt+0x41834>  // b.pmore
  444270:	cmp	w1, #0x63
  444274:	b.eq	4444f0 <nftw@plt+0x41970>  // b.none
  444278:	b.ls	4442bc <nftw@plt+0x4173c>  // b.plast
  44427c:	cmp	w1, #0x65
  444280:	b.eq	44450c <nftw@plt+0x4198c>  // b.none
  444284:	cmp	w1, #0x66
  444288:	b.ne	444378 <nftw@plt+0x417f8>  // b.any
  44428c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  444290:	add	x1, x1, #0x2c0
  444294:	add	x1, x1, #0x340
  444298:	mov	x0, x19
  44429c:	bl	43d25c <nftw@plt+0x3a6dc>
  4442a0:	str	x0, [sp, #72]
  4442a4:	ldr	x1, [x0, #8]
  4442a8:	ldr	w0, [x19, #72]
  4442ac:	ldr	w1, [x1, #8]
  4442b0:	add	w0, w0, w1
  4442b4:	str	w0, [x19, #72]
  4442b8:	b	443e3c <nftw@plt+0x412bc>
  4442bc:	cmp	w1, #0x54
  4442c0:	b.eq	4444a4 <nftw@plt+0x41924>  // b.none
  4442c4:	cmp	w1, #0x61
  4442c8:	b.ne	4442e8 <nftw@plt+0x41768>  // b.any
  4442cc:	mov	w2, #0x4                   	// #4
  4442d0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4442d4:	add	x1, x1, #0x2f0
  4442d8:	mov	x0, x19
  4442dc:	bl	443818 <nftw@plt+0x40c98>
  4442e0:	str	x0, [sp, #72]
  4442e4:	b	443e3c <nftw@plt+0x412bc>
  4442e8:	cmp	w1, #0x46
  4442ec:	b.ne	443e40 <nftw@plt+0x412c0>  // b.any
  4442f0:	mov	x0, x19
  4442f4:	bl	43d16c <nftw@plt+0x3a5ec>
  4442f8:	str	x0, [sp, #72]
  4442fc:	mov	w1, #0x2c                  	// #44
  444300:	str	w1, [x0]
  444304:	ldr	x0, [x19, #24]
  444308:	ldrb	w0, [x0]
  44430c:	sub	w0, w0, #0x30
  444310:	and	w0, w0, #0xff
  444314:	cmp	w0, #0x9
  444318:	cset	w2, ls  // ls = plast
  44431c:	ldr	x1, [sp, #72]
  444320:	strh	w2, [x1, #16]
  444324:	b.ls	4445cc <nftw@plt+0x41a4c>  // b.plast
  444328:	ldr	x20, [sp, #72]
  44432c:	mov	x0, x19
  444330:	bl	443ce8 <nftw@plt+0x41168>
  444334:	str	x0, [x20, #8]
  444338:	ldr	x0, [sp, #72]
  44433c:	ldr	x20, [x0, #8]
  444340:	cbz	x20, 443e40 <nftw@plt+0x412c0>
  444344:	mov	x0, x19
  444348:	bl	43d394 <nftw@plt+0x3a814>
  44434c:	ldr	x1, [x19, #24]
  444350:	ldrb	w0, [x1]
  444354:	cbz	w0, 444364 <nftw@plt+0x417e4>
  444358:	add	x0, x1, #0x1
  44435c:	str	x0, [x19, #24]
  444360:	ldrb	w0, [x1]
  444364:	cmp	w0, #0x73
  444368:	cset	w1, eq  // eq = none
  44436c:	ldr	x0, [sp, #72]
  444370:	strh	w1, [x0, #18]
  444374:	b	443e3c <nftw@plt+0x412bc>
  444378:	mov	x20, #0x0                   	// #0
  44437c:	cmp	w1, #0x64
  444380:	b.ne	443e40 <nftw@plt+0x412c0>  // b.any
  444384:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  444388:	add	x1, x1, #0x2c0
  44438c:	add	x1, x1, #0x360
  444390:	mov	x0, x19
  444394:	bl	43d25c <nftw@plt+0x3a6dc>
  444398:	str	x0, [sp, #72]
  44439c:	ldr	x1, [x0, #8]
  4443a0:	ldr	w0, [x19, #72]
  4443a4:	ldr	w1, [x1, #8]
  4443a8:	add	w0, w0, w1
  4443ac:	str	w0, [x19, #72]
  4443b0:	b	443e3c <nftw@plt+0x412bc>
  4443b4:	cmp	w1, #0x73
  4443b8:	b.eq	44459c <nftw@plt+0x41a1c>  // b.none
  4443bc:	b.ls	44442c <nftw@plt+0x418ac>  // b.plast
  4443c0:	cmp	w1, #0x75
  4443c4:	b.eq	44456c <nftw@plt+0x419ec>  // b.none
  4443c8:	cmp	w1, #0x76
  4443cc:	b.ne	44449c <nftw@plt+0x4191c>  // b.any
  4443d0:	ldrb	w1, [x0, #2]
  4443d4:	cmp	w1, #0x5f
  4443d8:	b.eq	4445d8 <nftw@plt+0x41a58>  // b.none
  4443dc:	mov	x0, x19
  4443e0:	bl	43d464 <nftw@plt+0x3a8e4>
  4443e4:	mov	x20, x0
  4443e8:	cbz	x20, 444424 <nftw@plt+0x418a4>
  4443ec:	ldr	x0, [x19, #24]
  4443f0:	ldrb	w1, [x0]
  4443f4:	cmp	w1, #0x5f
  4443f8:	b.ne	4445f0 <nftw@plt+0x41a70>  // b.any
  4443fc:	add	x0, x0, #0x1
  444400:	str	x0, [x19, #24]
  444404:	mov	x0, x19
  444408:	bl	443ce8 <nftw@plt+0x41168>
  44440c:	mov	x3, x0
  444410:	mov	x2, x20
  444414:	mov	w1, #0x2d                  	// #45
  444418:	mov	x0, x19
  44441c:	bl	43d1ac <nftw@plt+0x3a62c>
  444420:	mov	x20, x0
  444424:	str	x20, [sp, #72]
  444428:	b	443e2c <nftw@plt+0x412ac>
  44442c:	cmp	w1, #0x6e
  444430:	b.eq	4445f8 <nftw@plt+0x41a78>  // b.none
  444434:	cmp	w1, #0x70
  444438:	b.ne	444460 <nftw@plt+0x418e0>  // b.any
  44443c:	mov	x0, x19
  444440:	bl	443ce8 <nftw@plt+0x41168>
  444444:	mov	x3, #0x0                   	// #0
  444448:	mov	x2, x0
  44444c:	mov	w1, #0x4b                  	// #75
  444450:	mov	x0, x19
  444454:	bl	43d1ac <nftw@plt+0x3a62c>
  444458:	str	x0, [sp, #72]
  44445c:	b	443e2c <nftw@plt+0x412ac>
  444460:	mov	x20, #0x0                   	// #0
  444464:	cmp	w1, #0x69
  444468:	b.ne	443e40 <nftw@plt+0x412c0>  // b.any
  44446c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  444470:	add	x1, x1, #0x2c0
  444474:	add	x1, x1, #0x400
  444478:	mov	x0, x19
  44447c:	bl	43d25c <nftw@plt+0x3a6dc>
  444480:	str	x0, [sp, #72]
  444484:	ldr	x1, [x0, #8]
  444488:	ldr	w0, [x19, #72]
  44448c:	ldr	w1, [x1, #8]
  444490:	add	w0, w0, w1
  444494:	str	w0, [x19, #72]
  444498:	b	443e3c <nftw@plt+0x412bc>
  44449c:	cmp	w1, #0x74
  4444a0:	b.ne	444638 <nftw@plt+0x41ab8>  // b.any
  4444a4:	mov	x0, x19
  4444a8:	bl	444f68 <nftw@plt+0x423e8>
  4444ac:	mov	x3, #0x0                   	// #0
  4444b0:	mov	x2, x0
  4444b4:	mov	w1, #0x43                  	// #67
  4444b8:	mov	x0, x19
  4444bc:	bl	43d1ac <nftw@plt+0x3a62c>
  4444c0:	str	x0, [sp, #72]
  4444c4:	cbz	x0, 443e2c <nftw@plt+0x412ac>
  4444c8:	ldr	x0, [x19, #24]
  4444cc:	ldrb	w1, [x0]
  4444d0:	cbz	w1, 4444e8 <nftw@plt+0x41968>
  4444d4:	add	x1, x0, #0x1
  4444d8:	str	x1, [x19, #24]
  4444dc:	ldrb	w0, [x0]
  4444e0:	cmp	w0, #0x45
  4444e4:	b.eq	443e2c <nftw@plt+0x412ac>  // b.none
  4444e8:	str	xzr, [sp, #72]
  4444ec:	b	443e2c <nftw@plt+0x412ac>
  4444f0:	mov	w2, #0xe                   	// #14
  4444f4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4444f8:	add	x1, x1, #0x2f8
  4444fc:	mov	x0, x19
  444500:	bl	443818 <nftw@plt+0x40c98>
  444504:	str	x0, [sp, #72]
  444508:	b	443e3c <nftw@plt+0x412bc>
  44450c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  444510:	add	x1, x1, #0x2c0
  444514:	add	x1, x1, #0x380
  444518:	mov	x0, x19
  44451c:	bl	43d25c <nftw@plt+0x3a6dc>
  444520:	str	x0, [sp, #72]
  444524:	ldr	x1, [x0, #8]
  444528:	ldr	w0, [x19, #72]
  44452c:	ldr	w1, [x1, #8]
  444530:	add	w0, w0, w1
  444534:	str	w0, [x19, #72]
  444538:	b	443e3c <nftw@plt+0x412bc>
  44453c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  444540:	add	x1, x1, #0x2c0
  444544:	add	x1, x1, #0x3a0
  444548:	mov	x0, x19
  44454c:	bl	43d25c <nftw@plt+0x3a6dc>
  444550:	str	x0, [sp, #72]
  444554:	ldr	x1, [x0, #8]
  444558:	ldr	w0, [x19, #72]
  44455c:	ldr	w1, [x1, #8]
  444560:	add	w0, w0, w1
  444564:	str	w0, [x19, #72]
  444568:	b	443e3c <nftw@plt+0x412bc>
  44456c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  444570:	add	x1, x1, #0x2c0
  444574:	add	x1, x1, #0x3c0
  444578:	mov	x0, x19
  44457c:	bl	43d25c <nftw@plt+0x3a6dc>
  444580:	str	x0, [sp, #72]
  444584:	ldr	x1, [x0, #8]
  444588:	ldr	w0, [x19, #72]
  44458c:	ldr	w1, [x1, #8]
  444590:	add	w0, w0, w1
  444594:	str	w0, [x19, #72]
  444598:	b	443e3c <nftw@plt+0x412bc>
  44459c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4445a0:	add	x1, x1, #0x2c0
  4445a4:	add	x1, x1, #0x3e0
  4445a8:	mov	x0, x19
  4445ac:	bl	43d25c <nftw@plt+0x3a6dc>
  4445b0:	str	x0, [sp, #72]
  4445b4:	ldr	x1, [x0, #8]
  4445b8:	ldr	w0, [x19, #72]
  4445bc:	ldr	w1, [x1, #8]
  4445c0:	add	w0, w0, w1
  4445c4:	str	w0, [x19, #72]
  4445c8:	b	443e3c <nftw@plt+0x412bc>
  4445cc:	mov	x0, x19
  4445d0:	bl	43d394 <nftw@plt+0x3a814>
  4445d4:	b	444328 <nftw@plt+0x417a8>
  4445d8:	add	x0, x0, #0x3
  4445dc:	str	x0, [x19, #24]
  4445e0:	mov	x0, x19
  4445e4:	bl	444f68 <nftw@plt+0x423e8>
  4445e8:	mov	x20, x0
  4445ec:	b	4443e8 <nftw@plt+0x41868>
  4445f0:	mov	x20, #0x0                   	// #0
  4445f4:	b	444424 <nftw@plt+0x418a4>
  4445f8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4445fc:	add	x1, x1, #0x2c0
  444600:	add	x1, x1, #0x420
  444604:	mov	x0, x19
  444608:	bl	43d25c <nftw@plt+0x3a6dc>
  44460c:	str	x0, [sp, #72]
  444610:	ldr	x1, [x0, #8]
  444614:	ldr	w0, [x19, #72]
  444618:	ldr	w1, [x1, #8]
  44461c:	add	w0, w0, w1
  444620:	str	w0, [x19, #72]
  444624:	b	443e3c <nftw@plt+0x412bc>
  444628:	mov	x20, x0
  44462c:	b	443e40 <nftw@plt+0x412c0>
  444630:	mov	x20, #0x0                   	// #0
  444634:	b	443e40 <nftw@plt+0x412c0>
  444638:	mov	x20, #0x0                   	// #0
  44463c:	b	443e40 <nftw@plt+0x412c0>
  444640:	mov	x20, #0x0                   	// #0
  444644:	b	443e40 <nftw@plt+0x412c0>
  444648:	stp	x29, x30, [sp, #-64]!
  44464c:	mov	x29, sp
  444650:	stp	x19, x20, [sp, #16]
  444654:	mov	x19, x0
  444658:	str	xzr, [sp, #56]
  44465c:	ldr	x0, [x0, #24]
  444660:	ldrb	w1, [x0]
  444664:	cmp	w1, #0x45
  444668:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44466c:	mov	w2, #0x2e                  	// #46
  444670:	ccmp	w1, w2, #0x4, ne  // ne = any
  444674:	b.eq	44475c <nftw@plt+0x41bdc>  // b.none
  444678:	stp	x21, x22, [sp, #32]
  44467c:	add	x21, sp, #0x38
  444680:	mov	w22, #0x4f                  	// #79
  444684:	mov	w20, w2
  444688:	b	4446d4 <nftw@plt+0x41b54>
  44468c:	mov	x0, x19
  444690:	bl	443ce8 <nftw@plt+0x41168>
  444694:	mov	x2, x0
  444698:	cbz	x0, 444764 <nftw@plt+0x41be4>
  44469c:	mov	x3, #0x0                   	// #0
  4446a0:	mov	w1, w20
  4446a4:	mov	x0, x19
  4446a8:	bl	43d1ac <nftw@plt+0x3a62c>
  4446ac:	mov	x2, x0
  4446b0:	str	x0, [x21]
  4446b4:	cbz	x0, 44476c <nftw@plt+0x41bec>
  4446b8:	add	x21, x0, #0x10
  4446bc:	ldr	x0, [x19, #24]
  4446c0:	ldrb	w1, [x0]
  4446c4:	cmp	w1, #0x45
  4446c8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4446cc:	ccmp	w1, w20, #0x4, ne  // ne = any
  4446d0:	b.eq	4446ec <nftw@plt+0x41b6c>  // b.none
  4446d4:	cmp	w1, #0x52
  4446d8:	ccmp	w1, w22, #0x4, ne  // ne = any
  4446dc:	b.ne	44468c <nftw@plt+0x41b0c>  // b.any
  4446e0:	ldrb	w0, [x0, #1]
  4446e4:	cmp	w0, #0x45
  4446e8:	b.ne	44468c <nftw@plt+0x41b0c>  // b.any
  4446ec:	ldr	x2, [sp, #56]
  4446f0:	cbz	x2, 444774 <nftw@plt+0x41bf4>
  4446f4:	ldr	x0, [x2, #16]
  4446f8:	cbz	x0, 444710 <nftw@plt+0x41b90>
  4446fc:	ldp	x21, x22, [sp, #32]
  444700:	mov	x0, x2
  444704:	ldp	x19, x20, [sp, #16]
  444708:	ldp	x29, x30, [sp], #64
  44470c:	ret
  444710:	ldr	x0, [x2, #8]
  444714:	ldr	w1, [x0]
  444718:	cmp	w1, #0x27
  44471c:	b.eq	444728 <nftw@plt+0x41ba8>  // b.none
  444720:	ldp	x21, x22, [sp, #32]
  444724:	b	444700 <nftw@plt+0x41b80>
  444728:	ldr	x0, [x0, #8]
  44472c:	ldr	w1, [x0, #28]
  444730:	cmp	w1, #0x9
  444734:	b.eq	444740 <nftw@plt+0x41bc0>  // b.none
  444738:	ldp	x21, x22, [sp, #32]
  44473c:	b	444700 <nftw@plt+0x41b80>
  444740:	ldr	w1, [x19, #72]
  444744:	ldr	w0, [x0, #8]
  444748:	sub	w0, w1, w0
  44474c:	str	w0, [x19, #72]
  444750:	str	xzr, [x2, #8]
  444754:	ldp	x21, x22, [sp, #32]
  444758:	b	444700 <nftw@plt+0x41b80>
  44475c:	mov	x2, #0x0                   	// #0
  444760:	b	444700 <nftw@plt+0x41b80>
  444764:	ldp	x21, x22, [sp, #32]
  444768:	b	444700 <nftw@plt+0x41b80>
  44476c:	ldp	x21, x22, [sp, #32]
  444770:	b	444700 <nftw@plt+0x41b80>
  444774:	ldp	x21, x22, [sp, #32]
  444778:	b	444700 <nftw@plt+0x41b80>
  44477c:	stp	x29, x30, [sp, #-48]!
  444780:	mov	x29, sp
  444784:	stp	x19, x20, [sp, #16]
  444788:	stp	x21, x22, [sp, #32]
  44478c:	mov	x20, x0
  444790:	ldr	x0, [x0, #24]
  444794:	ldrb	w19, [x0]
  444798:	cbz	w19, 444804 <nftw@plt+0x41c84>
  44479c:	add	x1, x0, #0x1
  4447a0:	str	x1, [x20, #24]
  4447a4:	ldrb	w6, [x0]
  4447a8:	ldrb	w19, [x0, #1]
  4447ac:	cbz	w19, 44491c <nftw@plt+0x41d9c>
  4447b0:	add	x1, x0, #0x2
  4447b4:	str	x1, [x20, #24]
  4447b8:	ldrb	w19, [x0, #1]
  4447bc:	cmp	w6, #0x76
  4447c0:	b.ne	444808 <nftw@plt+0x41c88>  // b.any
  4447c4:	sub	w0, w19, #0x30
  4447c8:	and	w0, w0, #0xff
  4447cc:	cmp	w0, #0x9
  4447d0:	b.hi	444818 <nftw@plt+0x41c98>  // b.pmore
  4447d4:	mov	x0, x20
  4447d8:	bl	44385c <nftw@plt+0x40cdc>
  4447dc:	mov	x21, x0
  4447e0:	mov	x0, x20
  4447e4:	bl	43d16c <nftw@plt+0x3a5ec>
  4447e8:	mov	x22, x0
  4447ec:	mov	x2, x21
  4447f0:	sub	w1, w19, #0x30
  4447f4:	bl	443c34 <nftw@plt+0x410b4>
  4447f8:	cmp	w0, #0x0
  4447fc:	csel	x22, x22, xzr, ne  // ne = any
  444800:	b	444908 <nftw@plt+0x41d88>
  444804:	mov	w6, w19
  444808:	cmp	w6, #0x63
  44480c:	mov	w0, #0x76                  	// #118
  444810:	ccmp	w19, w0, #0x0, eq  // eq = none
  444814:	b.eq	444830 <nftw@plt+0x41cb0>  // b.none
  444818:	mov	w4, #0x43                  	// #67
  44481c:	mov	w3, #0x0                   	// #0
  444820:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  444824:	add	x0, x0, #0x2c0
  444828:	add	x0, x0, #0x5c8
  44482c:	b	4448a8 <nftw@plt+0x41d28>
  444830:	ldr	w19, [x20, #80]
  444834:	ldr	w0, [x20, #76]
  444838:	cmp	w0, #0x0
  44483c:	cset	w0, eq  // eq = none
  444840:	str	w0, [x20, #80]
  444844:	mov	x0, x20
  444848:	bl	443ce8 <nftw@plt+0x41168>
  44484c:	mov	x2, x0
  444850:	ldr	w0, [x20, #80]
  444854:	cbz	w0, 444874 <nftw@plt+0x41cf4>
  444858:	mov	x3, #0x0                   	// #0
  44485c:	mov	w1, #0x35                  	// #53
  444860:	mov	x0, x20
  444864:	bl	43d1ac <nftw@plt+0x3a62c>
  444868:	mov	x22, x0
  44486c:	str	w19, [x20, #80]
  444870:	b	444908 <nftw@plt+0x41d88>
  444874:	mov	x3, #0x0                   	// #0
  444878:	mov	w1, #0x34                  	// #52
  44487c:	mov	x0, x20
  444880:	bl	43d1ac <nftw@plt+0x3a62c>
  444884:	mov	x22, x0
  444888:	b	44486c <nftw@plt+0x41cec>
  44488c:	ldrb	w2, [x5, #1]
  444890:	cmp	w2, w19
  444894:	b.eq	4448dc <nftw@plt+0x41d5c>  // b.none
  444898:	b.hi	4448fc <nftw@plt+0x41d7c>  // b.pmore
  44489c:	add	w3, w1, #0x1
  4448a0:	cmp	w3, w4
  4448a4:	b.eq	444904 <nftw@plt+0x41d84>  // b.none
  4448a8:	sub	w1, w4, w3
  4448ac:	add	w1, w1, w1, lsr #31
  4448b0:	add	w1, w3, w1, asr #1
  4448b4:	sbfiz	x2, x1, #1, #32
  4448b8:	add	x2, x2, w1, sxtw
  4448bc:	add	x21, x0, x2, lsl #3
  4448c0:	ldr	x5, [x0, x2, lsl #3]
  4448c4:	ldrb	w2, [x5]
  4448c8:	cmp	w2, w6
  4448cc:	b.eq	44488c <nftw@plt+0x41d0c>  // b.none
  4448d0:	b.ls	44489c <nftw@plt+0x41d1c>  // b.plast
  4448d4:	mov	w4, w1
  4448d8:	b	4448a0 <nftw@plt+0x41d20>
  4448dc:	mov	x0, x20
  4448e0:	bl	43d16c <nftw@plt+0x3a5ec>
  4448e4:	mov	x22, x0
  4448e8:	cbz	x0, 444908 <nftw@plt+0x41d88>
  4448ec:	mov	w0, #0x32                  	// #50
  4448f0:	str	w0, [x22]
  4448f4:	str	x21, [x22, #8]
  4448f8:	b	444908 <nftw@plt+0x41d88>
  4448fc:	mov	w4, w1
  444900:	b	4448a0 <nftw@plt+0x41d20>
  444904:	mov	x22, #0x0                   	// #0
  444908:	mov	x0, x22
  44490c:	ldp	x19, x20, [sp, #16]
  444910:	ldp	x21, x22, [sp, #32]
  444914:	ldp	x29, x30, [sp], #48
  444918:	ret
  44491c:	cmp	w6, #0x76
  444920:	b.eq	444818 <nftw@plt+0x41c98>  // b.none
  444924:	b	444808 <nftw@plt+0x41c88>
  444928:	stp	x29, x30, [sp, #-48]!
  44492c:	mov	x29, sp
  444930:	stp	x19, x20, [sp, #16]
  444934:	mov	x19, x0
  444938:	ldr	x2, [x0, #24]
  44493c:	ldrb	w1, [x2]
  444940:	sub	w0, w1, #0x30
  444944:	and	w0, w0, #0xff
  444948:	cmp	w0, #0x9
  44494c:	b.ls	4449d8 <nftw@plt+0x41e58>  // b.plast
  444950:	sub	w0, w1, #0x61
  444954:	and	w0, w0, #0xff
  444958:	cmp	w0, #0x19
  44495c:	b.hi	444a1c <nftw@plt+0x41e9c>  // b.pmore
  444960:	cmp	w1, #0x6f
  444964:	b.eq	444a04 <nftw@plt+0x41e84>  // b.none
  444968:	mov	x0, x19
  44496c:	bl	44477c <nftw@plt+0x41bfc>
  444970:	mov	x20, x0
  444974:	cbz	x0, 4449e4 <nftw@plt+0x41e64>
  444978:	ldr	w0, [x0]
  44497c:	cmp	w0, #0x32
  444980:	b.ne	4449e4 <nftw@plt+0x41e64>  // b.any
  444984:	ldr	x2, [x20, #8]
  444988:	ldr	w0, [x19, #72]
  44498c:	add	w1, w0, #0x7
  444990:	ldr	w0, [x2, #16]
  444994:	add	w0, w0, w1
  444998:	str	w0, [x19, #72]
  44499c:	ldr	x0, [x20, #8]
  4449a0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4449a4:	add	x1, x1, #0x308
  4449a8:	ldr	x0, [x0]
  4449ac:	bl	402890 <strcmp@plt>
  4449b0:	cbnz	w0, 4449e4 <nftw@plt+0x41e64>
  4449b4:	mov	x0, x19
  4449b8:	bl	44385c <nftw@plt+0x40cdc>
  4449bc:	mov	x3, x0
  4449c0:	mov	x2, x20
  4449c4:	mov	w1, #0x37                  	// #55
  4449c8:	mov	x0, x19
  4449cc:	bl	43d1ac <nftw@plt+0x3a62c>
  4449d0:	mov	x20, x0
  4449d4:	b	4449e4 <nftw@plt+0x41e64>
  4449d8:	mov	x0, x19
  4449dc:	bl	44385c <nftw@plt+0x40cdc>
  4449e0:	mov	x20, x0
  4449e4:	ldr	x0, [x19, #24]
  4449e8:	ldrb	w0, [x0]
  4449ec:	cmp	w0, #0x42
  4449f0:	b.eq	444d7c <nftw@plt+0x421fc>  // b.none
  4449f4:	mov	x0, x20
  4449f8:	ldp	x19, x20, [sp, #16]
  4449fc:	ldp	x29, x30, [sp], #48
  444a00:	ret
  444a04:	ldrb	w0, [x2, #1]
  444a08:	cmp	w0, #0x6e
  444a0c:	b.ne	444968 <nftw@plt+0x41de8>  // b.any
  444a10:	add	x2, x2, #0x2
  444a14:	str	x2, [x19, #24]
  444a18:	b	444968 <nftw@plt+0x41de8>
  444a1c:	sub	w0, w1, #0x43
  444a20:	and	w0, w0, #0xff
  444a24:	cmp	w0, #0x1
  444a28:	b.ls	444ac4 <nftw@plt+0x41f44>  // b.plast
  444a2c:	cmp	w1, #0x4c
  444a30:	b.eq	444c88 <nftw@plt+0x42108>  // b.none
  444a34:	mov	x20, #0x0                   	// #0
  444a38:	cmp	w1, #0x55
  444a3c:	b.ne	4449f4 <nftw@plt+0x41e74>  // b.any
  444a40:	ldrb	w0, [x2, #1]
  444a44:	cmp	w0, #0x6c
  444a48:	b.eq	444cb4 <nftw@plt+0x42134>  // b.none
  444a4c:	cmp	w0, #0x74
  444a50:	b.ne	4449f4 <nftw@plt+0x41e74>  // b.any
  444a54:	add	x0, x2, #0x1
  444a58:	str	x0, [x19, #24]
  444a5c:	ldrb	w0, [x2, #1]
  444a60:	mov	x20, #0x0                   	// #0
  444a64:	cmp	w0, #0x74
  444a68:	b.ne	4449e4 <nftw@plt+0x41e64>  // b.any
  444a6c:	stp	x21, x22, [sp, #32]
  444a70:	add	x2, x2, #0x2
  444a74:	str	x2, [x19, #24]
  444a78:	mov	x0, x19
  444a7c:	bl	43d618 <nftw@plt+0x3aa98>
  444a80:	mov	w21, w0
  444a84:	tbnz	w0, #31, 444d74 <nftw@plt+0x421f4>
  444a88:	mov	x0, x19
  444a8c:	bl	43d16c <nftw@plt+0x3a5ec>
  444a90:	mov	x20, x0
  444a94:	cbz	x0, 444aa8 <nftw@plt+0x41f28>
  444a98:	mov	w0, #0x48                  	// #72
  444a9c:	str	w0, [x20]
  444aa0:	sxtw	x21, w21
  444aa4:	str	x21, [x20, #8]
  444aa8:	mov	x1, x20
  444aac:	mov	x0, x19
  444ab0:	bl	43d7e0 <nftw@plt+0x3ac60>
  444ab4:	cmp	w0, #0x0
  444ab8:	csel	x20, x20, xzr, ne  // ne = any
  444abc:	ldp	x21, x22, [sp, #32]
  444ac0:	b	4449e4 <nftw@plt+0x41e64>
  444ac4:	stp	x21, x22, [sp, #32]
  444ac8:	ldr	x21, [x19, #64]
  444acc:	cbz	x21, 444b10 <nftw@plt+0x41f90>
  444ad0:	ldr	w0, [x21]
  444ad4:	cbnz	w0, 444b08 <nftw@plt+0x41f88>
  444ad8:	ldr	w0, [x19, #72]
  444adc:	ldr	w1, [x21, #16]
  444ae0:	add	w0, w0, w1
  444ae4:	str	w0, [x19, #72]
  444ae8:	ldrb	w0, [x2]
  444aec:	cmp	w0, #0x43
  444af0:	b.eq	444b54 <nftw@plt+0x41fd4>  // b.none
  444af4:	cmp	w0, #0x44
  444af8:	b.eq	444b18 <nftw@plt+0x41f98>  // b.none
  444afc:	mov	x20, #0x0                   	// #0
  444b00:	ldp	x21, x22, [sp, #32]
  444b04:	b	4449e4 <nftw@plt+0x41e64>
  444b08:	cmp	w0, #0x18
  444b0c:	b.eq	444b40 <nftw@plt+0x41fc0>  // b.none
  444b10:	cmp	w1, #0x43
  444b14:	b.eq	444b54 <nftw@plt+0x41fd4>  // b.none
  444b18:	ldrb	w0, [x2, #1]
  444b1c:	cmp	w0, #0x32
  444b20:	b.eq	444c70 <nftw@plt+0x420f0>  // b.none
  444b24:	b.ls	444c20 <nftw@plt+0x420a0>  // b.plast
  444b28:	cmp	w0, #0x34
  444b2c:	b.eq	444c80 <nftw@plt+0x42100>  // b.none
  444b30:	cmp	w0, #0x35
  444b34:	b.ne	444d4c <nftw@plt+0x421cc>  // b.any
  444b38:	mov	w22, #0x5                   	// #5
  444b3c:	b	444c34 <nftw@plt+0x420b4>
  444b40:	ldr	w0, [x19, #72]
  444b44:	ldr	w1, [x21, #16]
  444b48:	add	w0, w0, w1
  444b4c:	str	w0, [x19, #72]
  444b50:	b	444ae8 <nftw@plt+0x41f68>
  444b54:	ldrb	w0, [x2, #1]
  444b58:	cmp	w0, #0x49
  444b5c:	b.eq	444b88 <nftw@plt+0x42008>  // b.none
  444b60:	cmp	w0, #0x33
  444b64:	b.eq	444bfc <nftw@plt+0x4207c>  // b.none
  444b68:	b.ls	444d90 <nftw@plt+0x42210>  // b.plast
  444b6c:	cmp	w0, #0x34
  444b70:	b.eq	444c14 <nftw@plt+0x42094>  // b.none
  444b74:	mov	w1, #0x0                   	// #0
  444b78:	cmp	w0, #0x35
  444b7c:	b.ne	444dec <nftw@plt+0x4226c>  // b.any
  444b80:	mov	w21, #0x5                   	// #5
  444b84:	b	444da8 <nftw@plt+0x42228>
  444b88:	add	x1, x2, #0x1
  444b8c:	str	x1, [x19, #24]
  444b90:	ldrb	w0, [x2, #2]
  444b94:	cmp	w0, #0x33
  444b98:	b.eq	444bf0 <nftw@plt+0x42070>  // b.none
  444b9c:	b.hi	444bc8 <nftw@plt+0x42048>  // b.pmore
  444ba0:	cmp	w0, #0x31
  444ba4:	b.eq	444df8 <nftw@plt+0x42278>  // b.none
  444ba8:	cmp	w0, #0x32
  444bac:	b.ne	444bbc <nftw@plt+0x4203c>  // b.any
  444bb0:	mov	x2, x1
  444bb4:	mov	w1, #0x1                   	// #1
  444bb8:	b	444da4 <nftw@plt+0x42224>
  444bbc:	mov	x20, #0x0                   	// #0
  444bc0:	ldp	x21, x22, [sp, #32]
  444bc4:	b	4449e4 <nftw@plt+0x41e64>
  444bc8:	cmp	w0, #0x34
  444bcc:	b.eq	444c08 <nftw@plt+0x42088>  // b.none
  444bd0:	cmp	w0, #0x35
  444bd4:	b.ne	444be4 <nftw@plt+0x42064>  // b.any
  444bd8:	mov	x2, x1
  444bdc:	mov	w1, #0x1                   	// #1
  444be0:	b	444b80 <nftw@plt+0x42000>
  444be4:	mov	x20, #0x0                   	// #0
  444be8:	ldp	x21, x22, [sp, #32]
  444bec:	b	4449e4 <nftw@plt+0x41e64>
  444bf0:	mov	x2, x1
  444bf4:	mov	w1, #0x1                   	// #1
  444bf8:	b	444c00 <nftw@plt+0x42080>
  444bfc:	mov	w1, #0x0                   	// #0
  444c00:	mov	w21, #0x3                   	// #3
  444c04:	b	444da8 <nftw@plt+0x42228>
  444c08:	mov	x2, x1
  444c0c:	mov	w1, #0x1                   	// #1
  444c10:	b	444c18 <nftw@plt+0x42098>
  444c14:	mov	w1, #0x0                   	// #0
  444c18:	mov	w21, #0x4                   	// #4
  444c1c:	b	444da8 <nftw@plt+0x42228>
  444c20:	cmp	w0, #0x30
  444c24:	b.eq	444c78 <nftw@plt+0x420f8>  // b.none
  444c28:	mov	w22, #0x2                   	// #2
  444c2c:	cmp	w0, #0x31
  444c30:	b.ne	444c64 <nftw@plt+0x420e4>  // b.any
  444c34:	add	x2, x2, #0x2
  444c38:	str	x2, [x19, #24]
  444c3c:	mov	x0, x19
  444c40:	bl	43d16c <nftw@plt+0x3a5ec>
  444c44:	mov	x20, x0
  444c48:	mov	x2, x21
  444c4c:	mov	w1, w22
  444c50:	bl	443ca8 <nftw@plt+0x41128>
  444c54:	cmp	w0, #0x0
  444c58:	csel	x20, x20, xzr, ne  // ne = any
  444c5c:	ldp	x21, x22, [sp, #32]
  444c60:	b	4449e4 <nftw@plt+0x41e64>
  444c64:	mov	x20, #0x0                   	// #0
  444c68:	ldp	x21, x22, [sp, #32]
  444c6c:	b	4449e4 <nftw@plt+0x41e64>
  444c70:	mov	w22, #0x3                   	// #3
  444c74:	b	444c34 <nftw@plt+0x420b4>
  444c78:	mov	w22, #0x1                   	// #1
  444c7c:	b	444c34 <nftw@plt+0x420b4>
  444c80:	mov	w22, #0x4                   	// #4
  444c84:	b	444c34 <nftw@plt+0x420b4>
  444c88:	add	x2, x2, #0x1
  444c8c:	str	x2, [x19, #24]
  444c90:	mov	x0, x19
  444c94:	bl	44385c <nftw@plt+0x40cdc>
  444c98:	mov	x20, x0
  444c9c:	cbz	x0, 4449f4 <nftw@plt+0x41e74>
  444ca0:	mov	x0, x19
  444ca4:	bl	43d740 <nftw@plt+0x3abc0>
  444ca8:	cbnz	w0, 4449e4 <nftw@plt+0x41e64>
  444cac:	mov	x20, #0x0                   	// #0
  444cb0:	b	4449f4 <nftw@plt+0x41e74>
  444cb4:	add	x0, x2, #0x1
  444cb8:	str	x0, [x19, #24]
  444cbc:	ldrb	w0, [x2, #1]
  444cc0:	mov	x20, #0x0                   	// #0
  444cc4:	cmp	w0, #0x6c
  444cc8:	b.ne	4449e4 <nftw@plt+0x41e64>  // b.any
  444ccc:	stp	x21, x22, [sp, #32]
  444cd0:	add	x2, x2, #0x2
  444cd4:	str	x2, [x19, #24]
  444cd8:	mov	x0, x19
  444cdc:	bl	444648 <nftw@plt+0x41ac8>
  444ce0:	mov	x21, x0
  444ce4:	cbz	x0, 444d58 <nftw@plt+0x421d8>
  444ce8:	ldr	x0, [x19, #24]
  444cec:	ldrb	w1, [x0]
  444cf0:	cmp	w1, #0x45
  444cf4:	b.ne	444d64 <nftw@plt+0x421e4>  // b.any
  444cf8:	add	x0, x0, #0x1
  444cfc:	str	x0, [x19, #24]
  444d00:	mov	x0, x19
  444d04:	bl	43d618 <nftw@plt+0x3aa98>
  444d08:	mov	w22, w0
  444d0c:	tbnz	w0, #31, 444d6c <nftw@plt+0x421ec>
  444d10:	mov	x0, x19
  444d14:	bl	43d16c <nftw@plt+0x3a5ec>
  444d18:	mov	x20, x0
  444d1c:	cbz	x0, 444d30 <nftw@plt+0x421b0>
  444d20:	mov	w0, #0x46                  	// #70
  444d24:	str	w0, [x20]
  444d28:	str	x21, [x20, #8]
  444d2c:	str	w22, [x20, #16]
  444d30:	mov	x1, x20
  444d34:	mov	x0, x19
  444d38:	bl	43d7e0 <nftw@plt+0x3ac60>
  444d3c:	cmp	w0, #0x0
  444d40:	csel	x20, x20, xzr, ne  // ne = any
  444d44:	ldp	x21, x22, [sp, #32]
  444d48:	b	4449e4 <nftw@plt+0x41e64>
  444d4c:	mov	x20, #0x0                   	// #0
  444d50:	ldp	x21, x22, [sp, #32]
  444d54:	b	4449e4 <nftw@plt+0x41e64>
  444d58:	mov	x20, x0
  444d5c:	ldp	x21, x22, [sp, #32]
  444d60:	b	4449e4 <nftw@plt+0x41e64>
  444d64:	ldp	x21, x22, [sp, #32]
  444d68:	b	4449e4 <nftw@plt+0x41e64>
  444d6c:	ldp	x21, x22, [sp, #32]
  444d70:	b	4449e4 <nftw@plt+0x41e64>
  444d74:	ldp	x21, x22, [sp, #32]
  444d78:	b	4449e4 <nftw@plt+0x41e64>
  444d7c:	mov	x1, x20
  444d80:	mov	x0, x19
  444d84:	bl	443960 <nftw@plt+0x40de0>
  444d88:	mov	x20, x0
  444d8c:	b	4449f4 <nftw@plt+0x41e74>
  444d90:	cmp	w0, #0x31
  444d94:	b.eq	444e10 <nftw@plt+0x42290>  // b.none
  444d98:	mov	w1, #0x0                   	// #0
  444d9c:	cmp	w0, #0x32
  444da0:	b.ne	444de0 <nftw@plt+0x42260>  // b.any
  444da4:	mov	w21, #0x2                   	// #2
  444da8:	add	x2, x2, #0x2
  444dac:	str	x2, [x19, #24]
  444db0:	cbnz	w1, 444e04 <nftw@plt+0x42284>
  444db4:	ldr	x22, [x19, #64]
  444db8:	mov	x0, x19
  444dbc:	bl	43d16c <nftw@plt+0x3a5ec>
  444dc0:	mov	x20, x0
  444dc4:	mov	x2, x22
  444dc8:	mov	w1, w21
  444dcc:	bl	443c68 <nftw@plt+0x410e8>
  444dd0:	cmp	w0, #0x0
  444dd4:	csel	x20, x20, xzr, ne  // ne = any
  444dd8:	ldp	x21, x22, [sp, #32]
  444ddc:	b	4449e4 <nftw@plt+0x41e64>
  444de0:	mov	x20, #0x0                   	// #0
  444de4:	ldp	x21, x22, [sp, #32]
  444de8:	b	4449f4 <nftw@plt+0x41e74>
  444dec:	mov	x20, #0x0                   	// #0
  444df0:	ldp	x21, x22, [sp, #32]
  444df4:	b	4449f4 <nftw@plt+0x41e74>
  444df8:	add	x2, x2, #0x3
  444dfc:	str	x2, [x19, #24]
  444e00:	mov	w21, #0x1                   	// #1
  444e04:	mov	x0, x19
  444e08:	bl	443ce8 <nftw@plt+0x41168>
  444e0c:	b	444db4 <nftw@plt+0x42234>
  444e10:	add	x2, x2, #0x2
  444e14:	str	x2, [x19, #24]
  444e18:	mov	w21, #0x1                   	// #1
  444e1c:	b	444db4 <nftw@plt+0x42234>
  444e20:	stp	x29, x30, [sp, #-32]!
  444e24:	mov	x29, sp
  444e28:	stp	x19, x20, [sp, #16]
  444e2c:	mov	x19, x0
  444e30:	ldr	x0, [x0, #24]
  444e34:	ldrb	w2, [x0]
  444e38:	cmp	w2, #0x4a
  444e3c:	b.eq	444e4c <nftw@plt+0x422cc>  // b.none
  444e40:	cbnz	w1, 444e54 <nftw@plt+0x422d4>
  444e44:	mov	x20, #0x0                   	// #0
  444e48:	b	444e64 <nftw@plt+0x422e4>
  444e4c:	add	x0, x0, #0x1
  444e50:	str	x0, [x19, #24]
  444e54:	mov	x0, x19
  444e58:	bl	443ce8 <nftw@plt+0x41168>
  444e5c:	mov	x20, x0
  444e60:	cbz	x0, 444e84 <nftw@plt+0x42304>
  444e64:	mov	x0, x19
  444e68:	bl	444648 <nftw@plt+0x41ac8>
  444e6c:	cbz	x0, 444e84 <nftw@plt+0x42304>
  444e70:	mov	x3, x0
  444e74:	mov	x2, x20
  444e78:	mov	w1, #0x29                  	// #41
  444e7c:	mov	x0, x19
  444e80:	bl	43d1ac <nftw@plt+0x3a62c>
  444e84:	ldp	x19, x20, [sp, #16]
  444e88:	ldp	x29, x30, [sp], #32
  444e8c:	ret
  444e90:	stp	x29, x30, [sp, #-32]!
  444e94:	mov	x29, sp
  444e98:	str	x19, [sp, #16]
  444e9c:	mov	x19, x0
  444ea0:	ldr	w0, [x0, #16]
  444ea4:	tbnz	w0, #18, 444f50 <nftw@plt+0x423d0>
  444ea8:	ldr	w0, [x19, #84]
  444eac:	cmp	w0, #0x800
  444eb0:	b.hi	444f48 <nftw@plt+0x423c8>  // b.pmore
  444eb4:	add	w0, w0, #0x1
  444eb8:	str	w0, [x19, #84]
  444ebc:	ldr	x1, [x19, #24]
  444ec0:	ldrb	w2, [x1]
  444ec4:	mov	x0, #0x0                   	// #0
  444ec8:	cmp	w2, #0x46
  444ecc:	b.eq	444ee8 <nftw@plt+0x42368>  // b.none
  444ed0:	ldr	w1, [x19, #84]
  444ed4:	sub	w1, w1, #0x1
  444ed8:	str	w1, [x19, #84]
  444edc:	ldr	x19, [sp, #16]
  444ee0:	ldp	x29, x30, [sp], #32
  444ee4:	ret
  444ee8:	add	x0, x1, #0x1
  444eec:	str	x0, [x19, #24]
  444ef0:	ldrb	w2, [x1, #1]
  444ef4:	add	x1, x1, #0x2
  444ef8:	cmp	w2, #0x59
  444efc:	csel	x1, x1, x0, eq  // eq = none
  444f00:	str	x1, [x19, #24]
  444f04:	mov	w1, #0x1                   	// #1
  444f08:	mov	x0, x19
  444f0c:	bl	444e20 <nftw@plt+0x422a0>
  444f10:	mov	x1, x0
  444f14:	mov	x0, x19
  444f18:	bl	43d5ac <nftw@plt+0x3aa2c>
  444f1c:	ldr	x1, [x19, #24]
  444f20:	ldrb	w2, [x1]
  444f24:	cmp	w2, #0x45
  444f28:	b.eq	444f3c <nftw@plt+0x423bc>  // b.none
  444f2c:	mov	x0, #0x0                   	// #0
  444f30:	ldr	w1, [x19, #16]
  444f34:	tbz	w1, #18, 444ed0 <nftw@plt+0x42350>
  444f38:	b	444edc <nftw@plt+0x4235c>
  444f3c:	add	x1, x1, #0x1
  444f40:	str	x1, [x19, #24]
  444f44:	b	444f30 <nftw@plt+0x423b0>
  444f48:	mov	x0, #0x0                   	// #0
  444f4c:	b	444edc <nftw@plt+0x4235c>
  444f50:	ldr	x1, [x19, #24]
  444f54:	ldrb	w0, [x1]
  444f58:	cmp	w0, #0x46
  444f5c:	b.eq	444ee8 <nftw@plt+0x42368>  // b.none
  444f60:	mov	x0, #0x0                   	// #0
  444f64:	b	444edc <nftw@plt+0x4235c>
  444f68:	stp	x29, x30, [sp, #-64]!
  444f6c:	mov	x29, sp
  444f70:	stp	x19, x20, [sp, #16]
  444f74:	stp	x21, x22, [sp, #32]
  444f78:	mov	x19, x0
  444f7c:	ldr	w21, [x0, #76]
  444f80:	mov	w0, #0x1                   	// #1
  444f84:	str	w0, [x19, #76]
  444f88:	ldr	x0, [x19, #24]
  444f8c:	ldrb	w1, [x0]
  444f90:	cmp	w1, #0x4c
  444f94:	b.eq	444ff8 <nftw@plt+0x42478>  // b.none
  444f98:	cmp	w1, #0x54
  444f9c:	b.eq	445008 <nftw@plt+0x42488>  // b.none
  444fa0:	cmp	w1, #0x73
  444fa4:	b.eq	445018 <nftw@plt+0x42498>  // b.none
  444fa8:	cmp	w1, #0x66
  444fac:	b.eq	445144 <nftw@plt+0x425c4>  // b.none
  444fb0:	sub	w2, w1, #0x30
  444fb4:	and	w2, w2, #0xff
  444fb8:	cmp	w2, #0x9
  444fbc:	b.hi	4451e8 <nftw@plt+0x42668>  // b.pmore
  444fc0:	mov	x0, x19
  444fc4:	bl	444928 <nftw@plt+0x41da8>
  444fc8:	mov	x20, x0
  444fcc:	cbz	x0, 444fe0 <nftw@plt+0x42460>
  444fd0:	ldr	x0, [x19, #24]
  444fd4:	ldrb	w0, [x0]
  444fd8:	cmp	w0, #0x49
  444fdc:	b.eq	445208 <nftw@plt+0x42688>  // b.none
  444fe0:	str	w21, [x19, #76]
  444fe4:	mov	x0, x20
  444fe8:	ldp	x19, x20, [sp, #16]
  444fec:	ldp	x21, x22, [sp, #32]
  444ff0:	ldp	x29, x30, [sp], #64
  444ff4:	ret
  444ff8:	mov	x0, x19
  444ffc:	bl	446944 <nftw@plt+0x43dc4>
  445000:	mov	x20, x0
  445004:	b	444fe0 <nftw@plt+0x42460>
  445008:	mov	x0, x19
  44500c:	bl	43d694 <nftw@plt+0x3ab14>
  445010:	mov	x20, x0
  445014:	b	444fe0 <nftw@plt+0x42460>
  445018:	ldrb	w2, [x0, #1]
  44501c:	cmp	w2, #0x72
  445020:	b.eq	445094 <nftw@plt+0x42514>  // b.none
  445024:	cmp	w2, #0x70
  445028:	b.eq	445118 <nftw@plt+0x42598>  // b.none
  44502c:	cmp	w1, #0x69
  445030:	mov	w2, #0x74                  	// #116
  445034:	ccmp	w1, w2, #0x4, ne  // ne = any
  445038:	b.ne	445150 <nftw@plt+0x425d0>  // b.any
  44503c:	ldrb	w2, [x0, #1]
  445040:	cmp	w2, #0x6c
  445044:	b.ne	445150 <nftw@plt+0x425d0>  // b.any
  445048:	add	x0, x0, #0x2
  44504c:	str	x0, [x19, #24]
  445050:	mov	x22, #0x0                   	// #0
  445054:	cmp	w1, #0x74
  445058:	b.eq	44522c <nftw@plt+0x426ac>  // b.none
  44505c:	ldr	x0, [x19, #24]
  445060:	ldrb	w0, [x0, #1]
  445064:	mov	x20, #0x0                   	// #0
  445068:	cbz	w0, 444fe0 <nftw@plt+0x42460>
  44506c:	mov	w1, #0x45                  	// #69
  445070:	mov	x0, x19
  445074:	bl	445734 <nftw@plt+0x42bb4>
  445078:	mov	x3, x0
  44507c:	mov	x2, x22
  445080:	mov	w1, #0x31                  	// #49
  445084:	mov	x0, x19
  445088:	bl	43d1ac <nftw@plt+0x3a62c>
  44508c:	mov	x20, x0
  445090:	b	444fe0 <nftw@plt+0x42460>
  445094:	add	x0, x0, #0x2
  445098:	str	x0, [x19, #24]
  44509c:	mov	x0, x19
  4450a0:	bl	443ce8 <nftw@plt+0x41168>
  4450a4:	mov	x20, x0
  4450a8:	mov	x0, x19
  4450ac:	bl	444928 <nftw@plt+0x41da8>
  4450b0:	mov	x22, x0
  4450b4:	ldr	x0, [x19, #24]
  4450b8:	ldrb	w0, [x0]
  4450bc:	cmp	w0, #0x49
  4450c0:	b.eq	4450e0 <nftw@plt+0x42560>  // b.none
  4450c4:	mov	x3, x22
  4450c8:	mov	x2, x20
  4450cc:	mov	w1, #0x1                   	// #1
  4450d0:	mov	x0, x19
  4450d4:	bl	43d1ac <nftw@plt+0x3a62c>
  4450d8:	mov	x20, x0
  4450dc:	b	444fe0 <nftw@plt+0x42460>
  4450e0:	mov	x0, x19
  4450e4:	bl	446be0 <nftw@plt+0x44060>
  4450e8:	mov	x3, x0
  4450ec:	mov	x2, x22
  4450f0:	mov	w1, #0x4                   	// #4
  4450f4:	mov	x0, x19
  4450f8:	bl	43d1ac <nftw@plt+0x3a62c>
  4450fc:	mov	x3, x0
  445100:	mov	x2, x20
  445104:	mov	w1, #0x1                   	// #1
  445108:	mov	x0, x19
  44510c:	bl	43d1ac <nftw@plt+0x3a62c>
  445110:	mov	x20, x0
  445114:	b	444fe0 <nftw@plt+0x42460>
  445118:	add	x0, x0, #0x2
  44511c:	str	x0, [x19, #24]
  445120:	mov	x0, x19
  445124:	bl	446c1c <nftw@plt+0x4409c>
  445128:	mov	x3, #0x0                   	// #0
  44512c:	mov	x2, x0
  445130:	mov	w1, #0x4b                  	// #75
  445134:	mov	x0, x19
  445138:	bl	43d1ac <nftw@plt+0x3a62c>
  44513c:	mov	x20, x0
  445140:	b	444fe0 <nftw@plt+0x42460>
  445144:	ldrb	w1, [x0, #1]
  445148:	cmp	w1, #0x70
  44514c:	b.eq	445184 <nftw@plt+0x42604>  // b.none
  445150:	mov	x0, x19
  445154:	bl	44477c <nftw@plt+0x41bfc>
  445158:	mov	x20, x0
  44515c:	cbz	x0, 444fe0 <nftw@plt+0x42460>
  445160:	ldr	w0, [x0]
  445164:	cmp	w0, #0x32
  445168:	b.eq	44523c <nftw@plt+0x426bc>  // b.none
  44516c:	cmp	w0, #0x33
  445170:	b.eq	44534c <nftw@plt+0x427cc>  // b.none
  445174:	cmp	w0, #0x34
  445178:	b.eq	4456cc <nftw@plt+0x42b4c>  // b.none
  44517c:	mov	x20, #0x0                   	// #0
  445180:	b	444fe0 <nftw@plt+0x42460>
  445184:	add	x1, x0, #0x2
  445188:	str	x1, [x19, #24]
  44518c:	ldrb	w1, [x0, #2]
  445190:	cmp	w1, #0x54
  445194:	b.eq	4451d8 <nftw@plt+0x42658>  // b.none
  445198:	mov	x0, x19
  44519c:	bl	43d618 <nftw@plt+0x3aa98>
  4451a0:	mvn	x1, x0
  4451a4:	mov	x20, #0x0                   	// #0
  4451a8:	tst	x1, #0x7fffffff
  4451ac:	b.eq	444fe0 <nftw@plt+0x42460>  // b.none
  4451b0:	add	w22, w0, #0x1
  4451b4:	mov	x0, x19
  4451b8:	bl	43d16c <nftw@plt+0x3a5ec>
  4451bc:	mov	x20, x0
  4451c0:	cbz	x0, 444fe0 <nftw@plt+0x42460>
  4451c4:	mov	w0, #0x6                   	// #6
  4451c8:	str	w0, [x20]
  4451cc:	sxtw	x0, w22
  4451d0:	str	x0, [x20, #8]
  4451d4:	b	444fe0 <nftw@plt+0x42460>
  4451d8:	add	x0, x0, #0x3
  4451dc:	str	x0, [x19, #24]
  4451e0:	mov	w22, #0x0                   	// #0
  4451e4:	b	4451b4 <nftw@plt+0x42634>
  4451e8:	cmp	w1, #0x6f
  4451ec:	b.ne	44502c <nftw@plt+0x424ac>  // b.any
  4451f0:	ldrb	w1, [x0, #1]
  4451f4:	cmp	w1, #0x6e
  4451f8:	b.ne	445150 <nftw@plt+0x425d0>  // b.any
  4451fc:	add	x0, x0, #0x2
  445200:	str	x0, [x19, #24]
  445204:	b	444fc0 <nftw@plt+0x42440>
  445208:	mov	x0, x19
  44520c:	bl	446be0 <nftw@plt+0x44060>
  445210:	mov	x3, x0
  445214:	mov	x2, x20
  445218:	mov	w1, #0x4                   	// #4
  44521c:	mov	x0, x19
  445220:	bl	43d1ac <nftw@plt+0x3a62c>
  445224:	mov	x20, x0
  445228:	b	444fe0 <nftw@plt+0x42460>
  44522c:	mov	x0, x19
  445230:	bl	443ce8 <nftw@plt+0x41168>
  445234:	mov	x22, x0
  445238:	b	44505c <nftw@plt+0x424dc>
  44523c:	ldr	x0, [x20, #8]
  445240:	ldr	x22, [x0]
  445244:	ldr	w0, [x0, #16]
  445248:	sub	w1, w0, #0x2
  44524c:	ldr	w0, [x19, #72]
  445250:	add	w0, w0, w1
  445254:	str	w0, [x19, #72]
  445258:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44525c:	add	x1, x1, #0x6b0
  445260:	mov	x0, x22
  445264:	bl	402890 <strcmp@plt>
  445268:	cbz	w0, 445290 <nftw@plt+0x42710>
  44526c:	ldr	w0, [x20]
  445270:	cmp	w0, #0x33
  445274:	b.eq	445350 <nftw@plt+0x427d0>  // b.none
  445278:	cmp	w0, #0x34
  44527c:	b.eq	4452d8 <nftw@plt+0x42758>  // b.none
  445280:	cmp	w0, #0x32
  445284:	b.eq	4452b4 <nftw@plt+0x42734>  // b.none
  445288:	mov	x20, #0x0                   	// #0
  44528c:	b	444fe0 <nftw@plt+0x42460>
  445290:	mov	x0, x19
  445294:	bl	443ce8 <nftw@plt+0x41168>
  445298:	mov	x3, x0
  44529c:	mov	x2, x20
  4452a0:	mov	w1, #0x37                  	// #55
  4452a4:	mov	x0, x19
  4452a8:	bl	43d1ac <nftw@plt+0x3a62c>
  4452ac:	mov	x20, x0
  4452b0:	b	444fe0 <nftw@plt+0x42460>
  4452b4:	ldr	x0, [x20, #8]
  4452b8:	ldr	w0, [x0, #20]
  4452bc:	cmp	w0, #0x2
  4452c0:	b.eq	445478 <nftw@plt+0x428f8>  // b.none
  4452c4:	b.gt	445360 <nftw@plt+0x427e0>
  4452c8:	cbz	w0, 445408 <nftw@plt+0x42888>
  4452cc:	cmp	w0, #0x1
  4452d0:	b.ne	445358 <nftw@plt+0x427d8>  // b.any
  4452d4:	cbz	x22, 4456cc <nftw@plt+0x42b4c>
  4452d8:	str	x23, [sp, #48]
  4452dc:	ldrb	w0, [x22]
  4452e0:	cmp	w0, #0x70
  4452e4:	mov	w1, #0x6d                  	// #109
  4452e8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4452ec:	b.ne	4452fc <nftw@plt+0x4277c>  // b.any
  4452f0:	ldrb	w1, [x22, #1]
  4452f4:	cmp	w1, w0
  4452f8:	b.eq	445424 <nftw@plt+0x428a4>  // b.none
  4452fc:	ldr	w0, [x20]
  445300:	cmp	w0, #0x34
  445304:	b.eq	4456e4 <nftw@plt+0x42b64>  // b.none
  445308:	mov	w23, #0x0                   	// #0
  44530c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  445310:	add	x1, x1, #0x220
  445314:	mov	x0, x22
  445318:	bl	402890 <strcmp@plt>
  44531c:	cbz	w0, 44544c <nftw@plt+0x428cc>
  445320:	mov	x0, x19
  445324:	bl	446c1c <nftw@plt+0x4409c>
  445328:	mov	x3, x0
  44532c:	cbnz	w23, 44545c <nftw@plt+0x428dc>
  445330:	ldr	x23, [sp, #48]
  445334:	mov	x2, x20
  445338:	mov	w1, #0x37                  	// #55
  44533c:	mov	x0, x19
  445340:	bl	43d1ac <nftw@plt+0x3a62c>
  445344:	mov	x20, x0
  445348:	b	444fe0 <nftw@plt+0x42460>
  44534c:	mov	x22, #0x0                   	// #0
  445350:	ldr	w0, [x20, #8]
  445354:	b	4452bc <nftw@plt+0x4273c>
  445358:	mov	x20, #0x0                   	// #0
  44535c:	b	444fe0 <nftw@plt+0x42460>
  445360:	cmp	w0, #0x3
  445364:	b.ne	445400 <nftw@plt+0x42880>  // b.any
  445368:	cbz	x22, 445694 <nftw@plt+0x42b14>
  44536c:	str	x23, [sp, #48]
  445370:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  445374:	add	x1, x1, #0x148
  445378:	mov	x0, x22
  44537c:	bl	402890 <strcmp@plt>
  445380:	cbz	w0, 445598 <nftw@plt+0x42a18>
  445384:	ldrb	w0, [x22]
  445388:	cmp	w0, #0x66
  44538c:	b.eq	445604 <nftw@plt+0x42a84>  // b.none
  445390:	cmp	w0, #0x6e
  445394:	b.ne	4456a8 <nftw@plt+0x42b28>  // b.any
  445398:	ldrb	w0, [x22, #1]
  44539c:	cmp	w0, #0x77
  4453a0:	mov	w1, #0x61                  	// #97
  4453a4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4453a8:	b.ne	4456b4 <nftw@plt+0x42b34>  // b.any
  4453ac:	mov	w1, #0x5f                  	// #95
  4453b0:	mov	x0, x19
  4453b4:	bl	445734 <nftw@plt+0x42bb4>
  4453b8:	mov	x22, x0
  4453bc:	mov	x0, x19
  4453c0:	bl	443ce8 <nftw@plt+0x41168>
  4453c4:	mov	x23, x0
  4453c8:	ldr	x0, [x19, #24]
  4453cc:	ldrb	w1, [x0]
  4453d0:	cmp	w1, #0x45
  4453d4:	b.eq	445638 <nftw@plt+0x42ab8>  // b.none
  4453d8:	cmp	w1, #0x70
  4453dc:	b.eq	445648 <nftw@plt+0x42ac8>  // b.none
  4453e0:	cmp	w1, #0x69
  4453e4:	b.ne	4456c0 <nftw@plt+0x42b40>  // b.any
  4453e8:	ldrb	w0, [x0, #1]
  4453ec:	cmp	w0, #0x6c
  4453f0:	b.eq	44567c <nftw@plt+0x42afc>  // b.none
  4453f4:	mov	x20, #0x0                   	// #0
  4453f8:	ldr	x23, [sp, #48]
  4453fc:	b	444fe0 <nftw@plt+0x42460>
  445400:	mov	x20, #0x0                   	// #0
  445404:	b	444fe0 <nftw@plt+0x42460>
  445408:	mov	x3, #0x0                   	// #0
  44540c:	mov	x2, x20
  445410:	mov	w1, #0x36                  	// #54
  445414:	mov	x0, x19
  445418:	bl	43d1ac <nftw@plt+0x3a62c>
  44541c:	mov	x20, x0
  445420:	b	444fe0 <nftw@plt+0x42460>
  445424:	ldr	x0, [x19, #24]
  445428:	ldrb	w1, [x0]
  44542c:	mov	w23, #0x1                   	// #1
  445430:	cmp	w1, #0x5f
  445434:	b.ne	44530c <nftw@plt+0x4278c>  // b.any
  445438:	add	x0, x0, #0x1
  44543c:	str	x0, [x19, #24]
  445440:	b	4452fc <nftw@plt+0x4277c>
  445444:	ldr	x23, [sp, #48]
  445448:	b	44570c <nftw@plt+0x42b8c>
  44544c:	mov	x0, x19
  445450:	bl	446b30 <nftw@plt+0x43fb0>
  445454:	mov	x3, x0
  445458:	b	44532c <nftw@plt+0x427ac>
  44545c:	mov	x2, x3
  445460:	mov	w1, #0x39                  	// #57
  445464:	mov	x0, x19
  445468:	bl	43d1ac <nftw@plt+0x3a62c>
  44546c:	mov	x3, x0
  445470:	ldr	x23, [sp, #48]
  445474:	b	445334 <nftw@plt+0x427b4>
  445478:	cbz	x22, 44568c <nftw@plt+0x42b0c>
  44547c:	str	x23, [sp, #48]
  445480:	mov	x0, x20
  445484:	bl	43d700 <nftw@plt+0x3ab80>
  445488:	cbnz	w0, 445530 <nftw@plt+0x429b0>
  44548c:	ldrb	w0, [x22]
  445490:	cmp	w0, #0x66
  445494:	b.eq	445540 <nftw@plt+0x429c0>  // b.none
  445498:	mov	x0, x19
  44549c:	bl	446c1c <nftw@plt+0x4409c>
  4454a0:	mov	x23, x0
  4454a4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4454a8:	add	x1, x1, #0x138
  4454ac:	mov	x0, x22
  4454b0:	bl	402890 <strcmp@plt>
  4454b4:	cbz	w0, 445550 <nftw@plt+0x429d0>
  4454b8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4454bc:	add	x1, x1, #0x310
  4454c0:	mov	x0, x22
  4454c4:	bl	402890 <strcmp@plt>
  4454c8:	cbz	w0, 4454e0 <nftw@plt+0x42960>
  4454cc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4454d0:	add	x1, x1, #0x318
  4454d4:	mov	x0, x22
  4454d8:	bl	402890 <strcmp@plt>
  4454dc:	cbnz	w0, 445588 <nftw@plt+0x42a08>
  4454e0:	mov	x0, x19
  4454e4:	bl	444928 <nftw@plt+0x41da8>
  4454e8:	mov	x22, x0
  4454ec:	ldr	x0, [x19, #24]
  4454f0:	ldrb	w0, [x0]
  4454f4:	cmp	w0, #0x49
  4454f8:	b.eq	445564 <nftw@plt+0x429e4>  // b.none
  4454fc:	mov	x3, x22
  445500:	mov	x2, x23
  445504:	mov	w1, #0x39                  	// #57
  445508:	mov	x0, x19
  44550c:	bl	43d1ac <nftw@plt+0x3a62c>
  445510:	mov	x3, x0
  445514:	mov	x2, x20
  445518:	mov	w1, #0x38                  	// #56
  44551c:	mov	x0, x19
  445520:	bl	43d1ac <nftw@plt+0x3a62c>
  445524:	mov	x20, x0
  445528:	ldr	x23, [sp, #48]
  44552c:	b	444fe0 <nftw@plt+0x42460>
  445530:	mov	x0, x19
  445534:	bl	443ce8 <nftw@plt+0x41168>
  445538:	mov	x23, x0
  44553c:	b	4454a4 <nftw@plt+0x42924>
  445540:	mov	x0, x19
  445544:	bl	44477c <nftw@plt+0x41bfc>
  445548:	mov	x23, x0
  44554c:	b	4454a4 <nftw@plt+0x42924>
  445550:	mov	w1, #0x45                  	// #69
  445554:	mov	x0, x19
  445558:	bl	445734 <nftw@plt+0x42bb4>
  44555c:	mov	x22, x0
  445560:	b	4454fc <nftw@plt+0x4297c>
  445564:	mov	x0, x19
  445568:	bl	446be0 <nftw@plt+0x44060>
  44556c:	mov	x3, x0
  445570:	mov	x2, x22
  445574:	mov	w1, #0x4                   	// #4
  445578:	mov	x0, x19
  44557c:	bl	43d1ac <nftw@plt+0x3a62c>
  445580:	mov	x22, x0
  445584:	b	4454fc <nftw@plt+0x4297c>
  445588:	mov	x0, x19
  44558c:	bl	446c1c <nftw@plt+0x4409c>
  445590:	mov	x22, x0
  445594:	b	4454fc <nftw@plt+0x4297c>
  445598:	mov	x0, x19
  44559c:	bl	446c1c <nftw@plt+0x4409c>
  4455a0:	mov	x22, x0
  4455a4:	mov	x0, x19
  4455a8:	bl	446c1c <nftw@plt+0x4409c>
  4455ac:	mov	x23, x0
  4455b0:	mov	x0, x19
  4455b4:	bl	446c1c <nftw@plt+0x4409c>
  4455b8:	mov	x3, x0
  4455bc:	cbz	x0, 44569c <nftw@plt+0x42b1c>
  4455c0:	mov	x2, x23
  4455c4:	mov	w1, #0x3c                  	// #60
  4455c8:	mov	x0, x19
  4455cc:	bl	43d1ac <nftw@plt+0x3a62c>
  4455d0:	mov	x3, x0
  4455d4:	mov	x2, x22
  4455d8:	mov	w1, #0x3b                  	// #59
  4455dc:	mov	x0, x19
  4455e0:	bl	43d1ac <nftw@plt+0x3a62c>
  4455e4:	mov	x3, x0
  4455e8:	mov	x2, x20
  4455ec:	mov	w1, #0x3a                  	// #58
  4455f0:	mov	x0, x19
  4455f4:	bl	43d1ac <nftw@plt+0x3a62c>
  4455f8:	mov	x20, x0
  4455fc:	ldr	x23, [sp, #48]
  445600:	b	444fe0 <nftw@plt+0x42460>
  445604:	mov	x0, x19
  445608:	bl	44477c <nftw@plt+0x41bfc>
  44560c:	mov	x22, x0
  445610:	mov	x0, x19
  445614:	bl	446c1c <nftw@plt+0x4409c>
  445618:	mov	x23, x0
  44561c:	mov	x0, x19
  445620:	bl	446c1c <nftw@plt+0x4409c>
  445624:	mov	x3, x0
  445628:	cbnz	x0, 4455c0 <nftw@plt+0x42a40>
  44562c:	mov	x20, x0
  445630:	ldr	x23, [sp, #48]
  445634:	b	444fe0 <nftw@plt+0x42460>
  445638:	add	x0, x0, #0x1
  44563c:	str	x0, [x19, #24]
  445640:	mov	x3, #0x0                   	// #0
  445644:	b	4455c0 <nftw@plt+0x42a40>
  445648:	ldrb	w1, [x0, #1]
  44564c:	cmp	w1, #0x69
  445650:	b.eq	445660 <nftw@plt+0x42ae0>  // b.none
  445654:	mov	x20, #0x0                   	// #0
  445658:	ldr	x23, [sp, #48]
  44565c:	b	444fe0 <nftw@plt+0x42460>
  445660:	add	x0, x0, #0x2
  445664:	str	x0, [x19, #24]
  445668:	mov	w1, #0x45                  	// #69
  44566c:	mov	x0, x19
  445670:	bl	445734 <nftw@plt+0x42bb4>
  445674:	mov	x3, x0
  445678:	b	4455c0 <nftw@plt+0x42a40>
  44567c:	mov	x0, x19
  445680:	bl	446c1c <nftw@plt+0x4409c>
  445684:	mov	x3, x0
  445688:	b	4455c0 <nftw@plt+0x42a40>
  44568c:	mov	x20, x22
  445690:	b	444fe0 <nftw@plt+0x42460>
  445694:	mov	x20, x22
  445698:	b	444fe0 <nftw@plt+0x42460>
  44569c:	mov	x20, x0
  4456a0:	ldr	x23, [sp, #48]
  4456a4:	b	444fe0 <nftw@plt+0x42460>
  4456a8:	mov	x20, #0x0                   	// #0
  4456ac:	ldr	x23, [sp, #48]
  4456b0:	b	444fe0 <nftw@plt+0x42460>
  4456b4:	mov	x20, #0x0                   	// #0
  4456b8:	ldr	x23, [sp, #48]
  4456bc:	b	444fe0 <nftw@plt+0x42460>
  4456c0:	mov	x20, #0x0                   	// #0
  4456c4:	ldr	x23, [sp, #48]
  4456c8:	b	444fe0 <nftw@plt+0x42460>
  4456cc:	ldr	w0, [x20]
  4456d0:	cmp	w0, #0x34
  4456d4:	b.eq	4456fc <nftw@plt+0x42b7c>  // b.none
  4456d8:	str	x23, [sp, #48]
  4456dc:	mov	w23, #0x0                   	// #0
  4456e0:	b	445320 <nftw@plt+0x427a0>
  4456e4:	ldr	x0, [x19, #24]
  4456e8:	ldrb	w1, [x0]
  4456ec:	cmp	w1, #0x5f
  4456f0:	b.eq	445444 <nftw@plt+0x428c4>  // b.none
  4456f4:	mov	w23, #0x0                   	// #0
  4456f8:	b	44530c <nftw@plt+0x4278c>
  4456fc:	ldr	x0, [x19, #24]
  445700:	ldrb	w1, [x0]
  445704:	cmp	w1, #0x5f
  445708:	b.ne	445728 <nftw@plt+0x42ba8>  // b.any
  44570c:	add	x0, x0, #0x1
  445710:	str	x0, [x19, #24]
  445714:	mov	w1, #0x45                  	// #69
  445718:	mov	x0, x19
  44571c:	bl	445734 <nftw@plt+0x42bb4>
  445720:	mov	x3, x0
  445724:	b	445334 <nftw@plt+0x427b4>
  445728:	str	x23, [sp, #48]
  44572c:	mov	w23, #0x0                   	// #0
  445730:	b	445320 <nftw@plt+0x427a0>
  445734:	stp	x29, x30, [sp, #-64]!
  445738:	mov	x29, sp
  44573c:	stp	x19, x20, [sp, #16]
  445740:	stp	x21, x22, [sp, #32]
  445744:	mov	x19, x0
  445748:	and	w22, w1, #0xff
  44574c:	str	xzr, [sp, #56]
  445750:	ldr	x0, [x0, #24]
  445754:	ldrb	w2, [x0]
  445758:	add	x20, sp, #0x38
  44575c:	mov	w21, #0x2e                  	// #46
  445760:	cmp	w2, w1, uxtb
  445764:	b.eq	4457c0 <nftw@plt+0x42c40>  // b.none
  445768:	mov	x0, x19
  44576c:	bl	444f68 <nftw@plt+0x423e8>
  445770:	cbz	x0, 4457b0 <nftw@plt+0x42c30>
  445774:	mov	x3, #0x0                   	// #0
  445778:	mov	x2, x0
  44577c:	mov	w1, w21
  445780:	mov	x0, x19
  445784:	bl	43d1ac <nftw@plt+0x3a62c>
  445788:	str	x0, [x20]
  44578c:	cbz	x0, 4457b0 <nftw@plt+0x42c30>
  445790:	add	x20, x0, #0x10
  445794:	ldr	x0, [x19, #24]
  445798:	ldrb	w1, [x0]
  44579c:	cmp	w1, w22
  4457a0:	b.ne	445768 <nftw@plt+0x42be8>  // b.any
  4457a4:	add	x0, x0, #0x1
  4457a8:	str	x0, [x19, #24]
  4457ac:	ldr	x0, [sp, #56]
  4457b0:	ldp	x19, x20, [sp, #16]
  4457b4:	ldp	x21, x22, [sp, #32]
  4457b8:	ldp	x29, x30, [sp], #64
  4457bc:	ret
  4457c0:	add	x0, x0, #0x1
  4457c4:	str	x0, [x19, #24]
  4457c8:	mov	x3, #0x0                   	// #0
  4457cc:	mov	x2, #0x0                   	// #0
  4457d0:	mov	w1, w21
  4457d4:	mov	x0, x19
  4457d8:	bl	43d1ac <nftw@plt+0x3a62c>
  4457dc:	b	4457b0 <nftw@plt+0x42c30>
  4457e0:	stp	x29, x30, [sp, #-112]!
  4457e4:	mov	x29, sp
  4457e8:	stp	x19, x20, [sp, #16]
  4457ec:	stp	x21, x22, [sp, #32]
  4457f0:	stp	x23, x24, [sp, #48]
  4457f4:	stp	x25, x26, [sp, #64]
  4457f8:	stp	x27, x28, [sp, #80]
  4457fc:	mov	x19, x0
  445800:	mov	x23, x1
  445804:	mov	w26, w2
  445808:	ldr	x0, [x0, #24]
  44580c:	ldrb	w20, [x0]
  445810:	cmp	w2, #0x0
  445814:	mov	w0, #0x1e                  	// #30
  445818:	mov	w1, #0x1b                  	// #27
  44581c:	csel	w0, w0, w1, ne  // ne = any
  445820:	mov	w25, #0x1d                  	// #29
  445824:	mov	w1, #0x1a                  	// #26
  445828:	csel	w25, w25, w1, ne  // ne = any
  44582c:	mov	w24, #0x1c                  	// #28
  445830:	mov	w1, #0x19                  	// #25
  445834:	csel	w24, w24, w1, ne  // ne = any
  445838:	mov	x21, x23
  44583c:	mov	w28, #0x50                  	// #80
  445840:	mov	x22, #0x0                   	// #0
  445844:	mov	w27, #0x4f                  	// #79
  445848:	str	w0, [sp, #108]
  44584c:	b	445888 <nftw@plt+0x42d08>
  445850:	ldr	w0, [x19, #72]
  445854:	add	w0, w0, #0x9
  445858:	str	w0, [x19, #72]
  44585c:	mov	w1, w24
  445860:	mov	x3, x22
  445864:	mov	x2, x22
  445868:	mov	x0, x19
  44586c:	bl	43d1ac <nftw@plt+0x3a62c>
  445870:	mov	x3, x0
  445874:	str	x0, [x21]
  445878:	cbz	x0, 445a34 <nftw@plt+0x42eb4>
  44587c:	add	x21, x0, #0x8
  445880:	ldr	x0, [x19, #24]
  445884:	ldrb	w20, [x0]
  445888:	mov	x0, x19
  44588c:	bl	43d554 <nftw@plt+0x3a9d4>
  445890:	cbz	w0, 4459bc <nftw@plt+0x42e3c>
  445894:	ldr	x0, [x19, #24]
  445898:	add	x1, x0, #0x1
  44589c:	str	x1, [x19, #24]
  4458a0:	cmp	w20, #0x72
  4458a4:	b.eq	445850 <nftw@plt+0x42cd0>  // b.none
  4458a8:	cmp	w20, #0x56
  4458ac:	b.eq	445930 <nftw@plt+0x42db0>  // b.none
  4458b0:	cmp	w20, #0x4b
  4458b4:	b.eq	445948 <nftw@plt+0x42dc8>  // b.none
  4458b8:	ldrb	w1, [x0, #1]
  4458bc:	cbz	w1, 445a30 <nftw@plt+0x42eb0>
  4458c0:	add	x1, x0, #0x2
  4458c4:	str	x1, [x19, #24]
  4458c8:	ldrb	w2, [x0, #1]
  4458cc:	cmp	w2, #0x78
  4458d0:	b.eq	445960 <nftw@plt+0x42de0>  // b.none
  4458d4:	and	w0, w2, #0xffffffdf
  4458d8:	and	w0, w0, #0xff
  4458dc:	cmp	w0, #0x4f
  4458e0:	b.ne	445978 <nftw@plt+0x42df8>  // b.any
  4458e4:	ldr	w0, [x19, #72]
  4458e8:	add	w0, w0, #0x9
  4458ec:	str	w0, [x19, #72]
  4458f0:	mov	x3, x22
  4458f4:	mov	w1, w27
  4458f8:	cmp	w2, #0x4f
  4458fc:	b.ne	445864 <nftw@plt+0x42ce4>  // b.any
  445900:	mov	x0, x19
  445904:	bl	444f68 <nftw@plt+0x423e8>
  445908:	mov	x3, x0
  44590c:	cbz	x0, 445a34 <nftw@plt+0x42eb4>
  445910:	ldr	x0, [x19, #24]
  445914:	ldrb	w1, [x0]
  445918:	cmp	w1, #0x45
  44591c:	b.ne	445a54 <nftw@plt+0x42ed4>  // b.any
  445920:	add	x0, x0, #0x1
  445924:	str	x0, [x19, #24]
  445928:	mov	w1, w27
  44592c:	b	445864 <nftw@plt+0x42ce4>
  445930:	ldr	w0, [x19, #72]
  445934:	add	w0, w0, #0x9
  445938:	str	w0, [x19, #72]
  44593c:	mov	w1, w25
  445940:	mov	x3, x22
  445944:	b	445864 <nftw@plt+0x42ce4>
  445948:	ldr	w0, [x19, #72]
  44594c:	add	w0, w0, #0x6
  445950:	str	w0, [x19, #72]
  445954:	ldr	w1, [sp, #108]
  445958:	mov	x3, x22
  44595c:	b	445864 <nftw@plt+0x42ce4>
  445960:	ldr	w0, [x19, #72]
  445964:	add	w0, w0, #0x11
  445968:	str	w0, [x19, #72]
  44596c:	mov	x3, x22
  445970:	mov	w1, #0x4d                  	// #77
  445974:	b	445864 <nftw@plt+0x42ce4>
  445978:	cmp	w2, #0x77
  44597c:	b.ne	445a5c <nftw@plt+0x42edc>  // b.any
  445980:	ldr	w0, [x19, #72]
  445984:	add	w0, w0, #0x6
  445988:	str	w0, [x19, #72]
  44598c:	mov	x0, x19
  445990:	bl	444648 <nftw@plt+0x41ac8>
  445994:	mov	x3, x0
  445998:	cbz	x0, 445a34 <nftw@plt+0x42eb4>
  44599c:	ldr	x0, [x19, #24]
  4459a0:	ldrb	w1, [x0]
  4459a4:	cmp	w1, #0x45
  4459a8:	b.ne	445a64 <nftw@plt+0x42ee4>  // b.any
  4459ac:	add	x0, x0, #0x1
  4459b0:	str	x0, [x19, #24]
  4459b4:	mov	w1, w28
  4459b8:	b	445864 <nftw@plt+0x42ce4>
  4459bc:	cmp	w20, #0x46
  4459c0:	mov	x3, x21
  4459c4:	ccmp	w26, #0x0, #0x0, eq  // eq = none
  4459c8:	b.ne	445a34 <nftw@plt+0x42eb4>  // b.any
  4459cc:	cmp	x21, x23
  4459d0:	b.eq	445a6c <nftw@plt+0x42eec>  // b.none
  4459d4:	mov	w4, #0x1d                  	// #29
  4459d8:	mov	w3, #0x1e                  	// #30
  4459dc:	mov	w2, #0x1c                  	// #28
  4459e0:	b	4459f8 <nftw@plt+0x42e78>
  4459e4:	str	w4, [x1]
  4459e8:	ldr	x23, [x23]
  4459ec:	add	x23, x23, #0x8
  4459f0:	cmp	x21, x23
  4459f4:	b.eq	445a28 <nftw@plt+0x42ea8>  // b.none
  4459f8:	ldr	x1, [x23]
  4459fc:	ldr	w0, [x1]
  445a00:	cmp	w0, #0x1a
  445a04:	b.eq	4459e4 <nftw@plt+0x42e64>  // b.none
  445a08:	cmp	w0, #0x1b
  445a0c:	b.eq	445a20 <nftw@plt+0x42ea0>  // b.none
  445a10:	cmp	w0, #0x19
  445a14:	b.ne	4459e8 <nftw@plt+0x42e68>  // b.any
  445a18:	str	w2, [x1]
  445a1c:	b	4459e8 <nftw@plt+0x42e68>
  445a20:	str	w3, [x1]
  445a24:	b	4459e8 <nftw@plt+0x42e68>
  445a28:	mov	x3, x23
  445a2c:	b	445a34 <nftw@plt+0x42eb4>
  445a30:	mov	x3, #0x0                   	// #0
  445a34:	mov	x0, x3
  445a38:	ldp	x19, x20, [sp, #16]
  445a3c:	ldp	x21, x22, [sp, #32]
  445a40:	ldp	x23, x24, [sp, #48]
  445a44:	ldp	x25, x26, [sp, #64]
  445a48:	ldp	x27, x28, [sp, #80]
  445a4c:	ldp	x29, x30, [sp], #112
  445a50:	ret
  445a54:	mov	x3, #0x0                   	// #0
  445a58:	b	445a34 <nftw@plt+0x42eb4>
  445a5c:	mov	x3, #0x0                   	// #0
  445a60:	b	445a34 <nftw@plt+0x42eb4>
  445a64:	mov	x3, #0x0                   	// #0
  445a68:	b	445a34 <nftw@plt+0x42eb4>
  445a6c:	mov	x3, x23
  445a70:	b	445a34 <nftw@plt+0x42eb4>
  445a74:	stp	x29, x30, [sp, #-112]!
  445a78:	mov	x29, sp
  445a7c:	stp	x19, x20, [sp, #16]
  445a80:	stp	x21, x22, [sp, #32]
  445a84:	mov	x19, x0
  445a88:	ldr	x1, [x0, #24]
  445a8c:	ldrb	w0, [x1]
  445a90:	cmp	w0, #0x55
  445a94:	b.eq	445e70 <nftw@plt+0x432f0>  // b.none
  445a98:	b.hi	445afc <nftw@plt+0x42f7c>  // b.pmore
  445a9c:	cmp	w0, #0x4e
  445aa0:	b.eq	445b90 <nftw@plt+0x43010>  // b.none
  445aa4:	cmp	w0, #0x53
  445aa8:	b.ne	445f04 <nftw@plt+0x43384>  // b.any
  445aac:	ldrb	w0, [x1, #1]
  445ab0:	cmp	w0, #0x74
  445ab4:	b.eq	445e90 <nftw@plt+0x43310>  // b.none
  445ab8:	mov	w1, #0x0                   	// #0
  445abc:	mov	x0, x19
  445ac0:	bl	4439e0 <nftw@plt+0x40e60>
  445ac4:	mov	x22, x0
  445ac8:	ldr	x0, [x19, #24]
  445acc:	ldrb	w0, [x0]
  445ad0:	cmp	w0, #0x49
  445ad4:	b.ne	445e7c <nftw@plt+0x432fc>  // b.any
  445ad8:	mov	x0, x19
  445adc:	bl	446be0 <nftw@plt+0x44060>
  445ae0:	mov	x3, x0
  445ae4:	mov	x2, x22
  445ae8:	mov	w1, #0x4                   	// #4
  445aec:	mov	x0, x19
  445af0:	bl	43d1ac <nftw@plt+0x3a62c>
  445af4:	mov	x22, x0
  445af8:	b	445e7c <nftw@plt+0x432fc>
  445afc:	cmp	w0, #0x5a
  445b00:	b.ne	445f04 <nftw@plt+0x43384>  // b.any
  445b04:	add	x1, x1, #0x1
  445b08:	str	x1, [x19, #24]
  445b0c:	mov	w1, #0x0                   	// #0
  445b10:	mov	x0, x19
  445b14:	bl	445fbc <nftw@plt+0x4343c>
  445b18:	mov	x22, x0
  445b1c:	cbz	x0, 445e7c <nftw@plt+0x432fc>
  445b20:	ldr	x0, [x19, #24]
  445b24:	ldrb	w1, [x0]
  445b28:	cmp	w1, #0x45
  445b2c:	b.ne	445f54 <nftw@plt+0x433d4>  // b.any
  445b30:	add	x1, x0, #0x1
  445b34:	str	x1, [x19, #24]
  445b38:	ldrb	w1, [x0, #1]
  445b3c:	cmp	w1, #0x73
  445b40:	b.eq	445da8 <nftw@plt+0x43228>  // b.none
  445b44:	cmp	w1, #0x64
  445b48:	b.eq	445dd8 <nftw@plt+0x43258>  // b.none
  445b4c:	mov	x0, x19
  445b50:	bl	445a74 <nftw@plt+0x42ef4>
  445b54:	mov	x3, x0
  445b58:	cbz	x0, 445b6c <nftw@plt+0x42fec>
  445b5c:	ldr	w0, [x0]
  445b60:	sub	w0, w0, #0x46
  445b64:	tst	w0, #0xfffffffd
  445b68:	b.ne	445e14 <nftw@plt+0x43294>  // b.any
  445b6c:	ldr	w0, [x22]
  445b70:	cmp	w0, #0x3
  445b74:	b.eq	445e58 <nftw@plt+0x432d8>  // b.none
  445b78:	mov	x2, x22
  445b7c:	mov	w1, #0x2                   	// #2
  445b80:	mov	x0, x19
  445b84:	bl	43d1ac <nftw@plt+0x3a62c>
  445b88:	mov	x22, x0
  445b8c:	b	445e7c <nftw@plt+0x432fc>
  445b90:	add	x1, x1, #0x1
  445b94:	str	x1, [x19, #24]
  445b98:	mov	w2, #0x1                   	// #1
  445b9c:	add	x1, sp, #0x68
  445ba0:	mov	x0, x19
  445ba4:	bl	4457e0 <nftw@plt+0x42c60>
  445ba8:	mov	x22, x0
  445bac:	cbz	x0, 445e7c <nftw@plt+0x432fc>
  445bb0:	stp	x27, x28, [sp, #80]
  445bb4:	mov	x1, #0x0                   	// #0
  445bb8:	mov	x0, x19
  445bbc:	bl	43d5ac <nftw@plt+0x3aa2c>
  445bc0:	mov	x27, x0
  445bc4:	ldr	x0, [x19, #24]
  445bc8:	ldrb	w20, [x0]
  445bcc:	cbz	w20, 445f84 <nftw@plt+0x43404>
  445bd0:	stp	x23, x24, [sp, #48]
  445bd4:	stp	x25, x26, [sp, #64]
  445bd8:	mov	x23, #0x0                   	// #0
  445bdc:	mov	w24, #0x1                   	// #1
  445be0:	mov	w26, #0x55                  	// #85
  445be4:	mov	w25, #0x4c                  	// #76
  445be8:	mov	w28, #0x4                   	// #4
  445bec:	b	445c64 <nftw@plt+0x430e4>
  445bf0:	ldrb	w0, [x0, #1]
  445bf4:	and	w0, w0, #0xffffffdf
  445bf8:	and	w0, w0, #0xff
  445bfc:	cmp	w0, #0x54
  445c00:	b.ne	445cb0 <nftw@plt+0x43130>  // b.any
  445c04:	mov	x0, x19
  445c08:	bl	443ce8 <nftw@plt+0x41168>
  445c0c:	mov	x21, x0
  445c10:	mov	w1, w24
  445c14:	cbz	x23, 445c34 <nftw@plt+0x430b4>
  445c18:	mov	x3, x21
  445c1c:	mov	x2, x23
  445c20:	mov	x0, x19
  445c24:	bl	43d1ac <nftw@plt+0x3a62c>
  445c28:	mov	x21, x0
  445c2c:	cmp	w20, #0x53
  445c30:	b.eq	445c54 <nftw@plt+0x430d4>  // b.none
  445c34:	ldr	x0, [x19, #24]
  445c38:	ldrb	w20, [x0]
  445c3c:	cmp	w20, #0x45
  445c40:	b.eq	445c60 <nftw@plt+0x430e0>  // b.none
  445c44:	mov	x1, x21
  445c48:	mov	x0, x19
  445c4c:	bl	43d7e0 <nftw@plt+0x3ac60>
  445c50:	cbz	w0, 445d40 <nftw@plt+0x431c0>
  445c54:	ldr	x0, [x19, #24]
  445c58:	ldrb	w20, [x0]
  445c5c:	cbz	w20, 445f7c <nftw@plt+0x433fc>
  445c60:	mov	x23, x21
  445c64:	cmp	w20, #0x44
  445c68:	b.eq	445bf0 <nftw@plt+0x43070>  // b.none
  445c6c:	sub	w2, w20, #0x30
  445c70:	and	w2, w2, #0xff
  445c74:	sub	w1, w20, #0x61
  445c78:	and	w1, w1, #0xff
  445c7c:	cmp	w2, #0x9
  445c80:	ccmp	w1, #0x19, #0x0, hi  // hi = pmore
  445c84:	b.ls	445c98 <nftw@plt+0x43118>  // b.plast
  445c88:	cmp	w20, #0x43
  445c8c:	ccmp	w20, w26, #0x4, ne  // ne = any
  445c90:	ccmp	w20, w25, #0x4, ne  // ne = any
  445c94:	b.ne	445cc0 <nftw@plt+0x43140>  // b.any
  445c98:	mov	x0, x19
  445c9c:	bl	444928 <nftw@plt+0x41da8>
  445ca0:	mov	x21, x0
  445ca4:	mov	w1, w24
  445ca8:	cbnz	x23, 445c18 <nftw@plt+0x43098>
  445cac:	b	445c2c <nftw@plt+0x430ac>
  445cb0:	mov	x0, x19
  445cb4:	bl	444928 <nftw@plt+0x41da8>
  445cb8:	mov	x21, x0
  445cbc:	b	445c10 <nftw@plt+0x43090>
  445cc0:	cmp	w20, #0x53
  445cc4:	b.eq	445cfc <nftw@plt+0x4317c>  // b.none
  445cc8:	cmp	w20, #0x49
  445ccc:	b.eq	445d18 <nftw@plt+0x43198>  // b.none
  445cd0:	cmp	w20, #0x54
  445cd4:	b.eq	445d30 <nftw@plt+0x431b0>  // b.none
  445cd8:	cmp	w20, #0x45
  445cdc:	b.eq	445d4c <nftw@plt+0x431cc>  // b.none
  445ce0:	cmp	w20, #0x4d
  445ce4:	ccmp	x23, #0x0, #0x4, eq  // eq = none
  445ce8:	b.eq	445fa0 <nftw@plt+0x43420>  // b.none
  445cec:	add	x0, x0, #0x1
  445cf0:	str	x0, [x19, #24]
  445cf4:	mov	x21, x23
  445cf8:	b	445c54 <nftw@plt+0x430d4>
  445cfc:	mov	w1, w24
  445d00:	mov	x0, x19
  445d04:	bl	4439e0 <nftw@plt+0x40e60>
  445d08:	mov	x21, x0
  445d0c:	mov	w1, w24
  445d10:	cbnz	x23, 445c18 <nftw@plt+0x43098>
  445d14:	b	445c54 <nftw@plt+0x430d4>
  445d18:	cbz	x23, 445f94 <nftw@plt+0x43414>
  445d1c:	mov	x0, x19
  445d20:	bl	446be0 <nftw@plt+0x44060>
  445d24:	mov	x21, x0
  445d28:	mov	w1, w28
  445d2c:	b	445c18 <nftw@plt+0x43098>
  445d30:	mov	x0, x19
  445d34:	bl	43d694 <nftw@plt+0x3ab14>
  445d38:	mov	x21, x0
  445d3c:	b	445c10 <nftw@plt+0x43090>
  445d40:	ldp	x23, x24, [sp, #48]
  445d44:	ldp	x25, x26, [sp, #64]
  445d48:	b	445f84 <nftw@plt+0x43404>
  445d4c:	str	x23, [x22]
  445d50:	cbz	x23, 445d94 <nftw@plt+0x43214>
  445d54:	cbz	x27, 445d64 <nftw@plt+0x431e4>
  445d58:	ldr	x0, [sp, #104]
  445d5c:	str	x0, [x27, #8]
  445d60:	str	x27, [sp, #104]
  445d64:	ldr	x0, [x19, #24]
  445d68:	ldrb	w1, [x0]
  445d6c:	mov	x22, #0x0                   	// #0
  445d70:	cmp	w1, #0x45
  445d74:	b.ne	445fac <nftw@plt+0x4342c>  // b.any
  445d78:	add	x0, x0, #0x1
  445d7c:	str	x0, [x19, #24]
  445d80:	ldr	x22, [sp, #104]
  445d84:	ldp	x23, x24, [sp, #48]
  445d88:	ldp	x25, x26, [sp, #64]
  445d8c:	ldp	x27, x28, [sp, #80]
  445d90:	b	445e7c <nftw@plt+0x432fc>
  445d94:	mov	x22, x23
  445d98:	ldp	x23, x24, [sp, #48]
  445d9c:	ldp	x25, x26, [sp, #64]
  445da0:	ldp	x27, x28, [sp, #80]
  445da4:	b	445e7c <nftw@plt+0x432fc>
  445da8:	add	x0, x0, #0x2
  445dac:	str	x0, [x19, #24]
  445db0:	mov	x0, x19
  445db4:	bl	43d740 <nftw@plt+0x3abc0>
  445db8:	cbz	w0, 445f5c <nftw@plt+0x433dc>
  445dbc:	mov	w2, #0xe                   	// #14
  445dc0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  445dc4:	add	x1, x1, #0x320
  445dc8:	mov	x0, x19
  445dcc:	bl	443818 <nftw@plt+0x40c98>
  445dd0:	mov	x3, x0
  445dd4:	b	445b6c <nftw@plt+0x42fec>
  445dd8:	add	x0, x0, #0x2
  445ddc:	str	x0, [x19, #24]
  445de0:	mov	x0, x19
  445de4:	bl	43d618 <nftw@plt+0x3aa98>
  445de8:	mov	w20, w0
  445dec:	tbnz	w0, #31, 445f64 <nftw@plt+0x433e4>
  445df0:	mov	x0, x19
  445df4:	bl	445a74 <nftw@plt+0x42ef4>
  445df8:	mov	x21, x0
  445dfc:	cbz	x0, 445e2c <nftw@plt+0x432ac>
  445e00:	ldr	w0, [x0]
  445e04:	sub	w0, w0, #0x46
  445e08:	tst	w0, #0xfffffffd
  445e0c:	b.eq	445e2c <nftw@plt+0x432ac>  // b.none
  445e10:	b	445e1c <nftw@plt+0x4329c>
  445e14:	mov	x21, x3
  445e18:	mov	w20, #0xffffffff            	// #-1
  445e1c:	mov	x0, x19
  445e20:	bl	43d740 <nftw@plt+0x3abc0>
  445e24:	cbz	w0, 445f6c <nftw@plt+0x433ec>
  445e28:	tbnz	w20, #31, 445e50 <nftw@plt+0x432d0>
  445e2c:	mov	x0, x19
  445e30:	bl	43d16c <nftw@plt+0x3a5ec>
  445e34:	mov	x3, x0
  445e38:	cbz	x0, 445b6c <nftw@plt+0x42fec>
  445e3c:	mov	w0, #0x47                  	// #71
  445e40:	str	w0, [x3]
  445e44:	str	w20, [x3, #16]
  445e48:	str	x21, [x3, #8]
  445e4c:	b	445b6c <nftw@plt+0x42fec>
  445e50:	mov	x3, x21
  445e54:	b	445b6c <nftw@plt+0x42fec>
  445e58:	ldr	x0, [x22, #16]
  445e5c:	ldr	w1, [x0]
  445e60:	cmp	w1, #0x29
  445e64:	b.ne	445b78 <nftw@plt+0x42ff8>  // b.any
  445e68:	str	xzr, [x0, #8]
  445e6c:	b	445b78 <nftw@plt+0x42ff8>
  445e70:	mov	x0, x19
  445e74:	bl	444928 <nftw@plt+0x41da8>
  445e78:	mov	x22, x0
  445e7c:	mov	x0, x22
  445e80:	ldp	x19, x20, [sp, #16]
  445e84:	ldp	x21, x22, [sp, #32]
  445e88:	ldp	x29, x30, [sp], #112
  445e8c:	ret
  445e90:	add	x1, x1, #0x2
  445e94:	str	x1, [x19, #24]
  445e98:	mov	w2, #0x3                   	// #3
  445e9c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  445ea0:	add	x1, x1, #0x330
  445ea4:	mov	x0, x19
  445ea8:	bl	443818 <nftw@plt+0x40c98>
  445eac:	mov	x20, x0
  445eb0:	mov	x0, x19
  445eb4:	bl	444928 <nftw@plt+0x41da8>
  445eb8:	mov	x3, x0
  445ebc:	mov	x2, x20
  445ec0:	mov	w1, #0x1                   	// #1
  445ec4:	mov	x0, x19
  445ec8:	bl	43d1ac <nftw@plt+0x3a62c>
  445ecc:	mov	x22, x0
  445ed0:	ldr	w0, [x19, #72]
  445ed4:	add	w0, w0, #0x3
  445ed8:	str	w0, [x19, #72]
  445edc:	ldr	x0, [x19, #24]
  445ee0:	ldrb	w0, [x0]
  445ee4:	cmp	w0, #0x49
  445ee8:	b.ne	445e7c <nftw@plt+0x432fc>  // b.any
  445eec:	mov	x1, x22
  445ef0:	mov	x0, x19
  445ef4:	bl	43d7e0 <nftw@plt+0x3ac60>
  445ef8:	cbnz	w0, 445ad8 <nftw@plt+0x42f58>
  445efc:	mov	x22, #0x0                   	// #0
  445f00:	b	445e7c <nftw@plt+0x432fc>
  445f04:	mov	x0, x19
  445f08:	bl	444928 <nftw@plt+0x41da8>
  445f0c:	mov	x22, x0
  445f10:	ldr	x0, [x19, #24]
  445f14:	ldrb	w0, [x0]
  445f18:	cmp	w0, #0x49
  445f1c:	b.ne	445e7c <nftw@plt+0x432fc>  // b.any
  445f20:	mov	x1, x22
  445f24:	mov	x0, x19
  445f28:	bl	43d7e0 <nftw@plt+0x3ac60>
  445f2c:	cbz	w0, 445f74 <nftw@plt+0x433f4>
  445f30:	mov	x0, x19
  445f34:	bl	446be0 <nftw@plt+0x44060>
  445f38:	mov	x3, x0
  445f3c:	mov	x2, x22
  445f40:	mov	w1, #0x4                   	// #4
  445f44:	mov	x0, x19
  445f48:	bl	43d1ac <nftw@plt+0x3a62c>
  445f4c:	mov	x22, x0
  445f50:	b	445e7c <nftw@plt+0x432fc>
  445f54:	mov	x22, #0x0                   	// #0
  445f58:	b	445e7c <nftw@plt+0x432fc>
  445f5c:	mov	x22, #0x0                   	// #0
  445f60:	b	445e7c <nftw@plt+0x432fc>
  445f64:	mov	x22, #0x0                   	// #0
  445f68:	b	445e7c <nftw@plt+0x432fc>
  445f6c:	mov	x22, #0x0                   	// #0
  445f70:	b	445e7c <nftw@plt+0x432fc>
  445f74:	mov	x22, #0x0                   	// #0
  445f78:	b	445e7c <nftw@plt+0x432fc>
  445f7c:	ldp	x23, x24, [sp, #48]
  445f80:	ldp	x25, x26, [sp, #64]
  445f84:	str	xzr, [x22]
  445f88:	mov	x22, #0x0                   	// #0
  445f8c:	ldp	x27, x28, [sp, #80]
  445f90:	b	445e7c <nftw@plt+0x432fc>
  445f94:	ldp	x23, x24, [sp, #48]
  445f98:	ldp	x25, x26, [sp, #64]
  445f9c:	b	445f84 <nftw@plt+0x43404>
  445fa0:	ldp	x23, x24, [sp, #48]
  445fa4:	ldp	x25, x26, [sp, #64]
  445fa8:	b	445f84 <nftw@plt+0x43404>
  445fac:	ldp	x23, x24, [sp, #48]
  445fb0:	ldp	x25, x26, [sp, #64]
  445fb4:	ldp	x27, x28, [sp, #80]
  445fb8:	b	445e7c <nftw@plt+0x432fc>
  445fbc:	stp	x29, x30, [sp, #-96]!
  445fc0:	mov	x29, sp
  445fc4:	stp	x19, x20, [sp, #16]
  445fc8:	mov	x19, x0
  445fcc:	ldr	x0, [x0, #24]
  445fd0:	ldrb	w2, [x0]
  445fd4:	cmp	w2, #0x47
  445fd8:	mov	w3, #0x54                  	// #84
  445fdc:	ccmp	w2, w3, #0x4, ne  // ne = any
  445fe0:	b.ne	446604 <nftw@plt+0x43a84>  // b.any
  445fe4:	ldr	w2, [x19, #72]
  445fe8:	add	w1, w2, #0x14
  445fec:	str	w1, [x19, #72]
  445ff0:	ldrb	w1, [x0]
  445ff4:	cmp	w1, w3
  445ff8:	b.eq	4460a8 <nftw@plt+0x43528>  // b.none
  445ffc:	mov	x20, #0x0                   	// #0
  446000:	cmp	w1, #0x47
  446004:	b.ne	446640 <nftw@plt+0x43ac0>  // b.any
  446008:	add	x1, x0, #0x1
  44600c:	str	x1, [x19, #24]
  446010:	ldrb	w1, [x0, #1]
  446014:	cbz	w1, 446704 <nftw@plt+0x43b84>
  446018:	add	x1, x0, #0x2
  44601c:	str	x1, [x19, #24]
  446020:	ldrb	w1, [x0, #1]
  446024:	cmp	w1, #0x54
  446028:	b.eq	446468 <nftw@plt+0x438e8>  // b.none
  44602c:	cmp	w1, #0x54
  446030:	b.ls	4463d8 <nftw@plt+0x43858>  // b.plast
  446034:	cmp	w1, #0x56
  446038:	b.eq	44641c <nftw@plt+0x4389c>  // b.none
  44603c:	mov	x20, #0x0                   	// #0
  446040:	cmp	w1, #0x72
  446044:	b.ne	446640 <nftw@plt+0x43ac0>  // b.any
  446048:	mov	x0, x19
  44604c:	bl	43d394 <nftw@plt+0x3a814>
  446050:	cmp	w0, #0x1
  446054:	b.le	44670c <nftw@plt+0x43b8c>
  446058:	ldr	x1, [x19, #24]
  44605c:	ldrb	w2, [x1]
  446060:	cbz	w2, 446714 <nftw@plt+0x43b94>
  446064:	stp	x21, x22, [sp, #32]
  446068:	add	x21, x1, #0x1
  44606c:	str	x21, [x19, #24]
  446070:	ldrb	w1, [x1]
  446074:	mov	x20, #0x0                   	// #0
  446078:	cmp	w1, #0x5f
  44607c:	b.ne	446778 <nftw@plt+0x43bf8>  // b.any
  446080:	stp	x23, x24, [sp, #48]
  446084:	stp	x25, x26, [sp, #64]
  446088:	stp	x27, x28, [sp, #80]
  44608c:	sub	w22, w0, #0x1
  446090:	mov	x24, #0x0                   	// #0
  446094:	mov	w26, #0x41                  	// #65
  446098:	mov	w28, #0x2f                  	// #47
  44609c:	mov	w27, #0x2e                  	// #46
  4460a0:	mov	w25, #0x40                  	// #64
  4460a4:	b	446554 <nftw@plt+0x439d4>
  4460a8:	add	x1, x0, #0x1
  4460ac:	str	x1, [x19, #24]
  4460b0:	ldrb	w1, [x0, #1]
  4460b4:	mov	x20, #0x0                   	// #0
  4460b8:	cbz	w1, 446640 <nftw@plt+0x43ac0>
  4460bc:	add	x1, x0, #0x2
  4460c0:	str	x1, [x19, #24]
  4460c4:	ldrb	w0, [x0, #1]
  4460c8:	cmp	w0, #0x53
  4460cc:	b.eq	446294 <nftw@plt+0x43714>  // b.none
  4460d0:	b.ls	446130 <nftw@plt+0x435b0>  // b.plast
  4460d4:	cmp	w0, #0x63
  4460d8:	b.eq	4462f4 <nftw@plt+0x43774>  // b.none
  4460dc:	b.ls	4461d8 <nftw@plt+0x43658>  // b.plast
  4460e0:	cmp	w0, #0x68
  4460e4:	b.eq	4462b8 <nftw@plt+0x43738>  // b.none
  4460e8:	mov	x20, #0x0                   	// #0
  4460ec:	cmp	w0, #0x76
  4460f0:	b.ne	446640 <nftw@plt+0x43ac0>  // b.any
  4460f4:	mov	w1, #0x76                  	// #118
  4460f8:	mov	x0, x19
  4460fc:	bl	43d4a8 <nftw@plt+0x3a928>
  446100:	mov	x20, #0x0                   	// #0
  446104:	cbz	w0, 446640 <nftw@plt+0x43ac0>
  446108:	mov	w1, #0x0                   	// #0
  44610c:	mov	x0, x19
  446110:	bl	445fbc <nftw@plt+0x4343c>
  446114:	mov	x3, #0x0                   	// #0
  446118:	mov	x2, x0
  44611c:	mov	w1, #0x10                  	// #16
  446120:	mov	x0, x19
  446124:	bl	43d1ac <nftw@plt+0x3a62c>
  446128:	mov	x20, x0
  44612c:	b	446640 <nftw@plt+0x43ac0>
  446130:	cmp	w0, #0x48
  446134:	b.eq	4463b4 <nftw@plt+0x43834>  // b.none
  446138:	b.ls	446174 <nftw@plt+0x435f4>  // b.plast
  44613c:	cmp	w0, #0x49
  446140:	b.eq	446270 <nftw@plt+0x436f0>  // b.none
  446144:	mov	x20, #0x0                   	// #0
  446148:	cmp	w0, #0x4a
  44614c:	b.ne	446640 <nftw@plt+0x43ac0>  // b.any
  446150:	mov	x0, x19
  446154:	bl	443ce8 <nftw@plt+0x41168>
  446158:	mov	x3, #0x0                   	// #0
  44615c:	mov	x2, x0
  446160:	mov	w1, #0x12                  	// #18
  446164:	mov	x0, x19
  446168:	bl	43d1ac <nftw@plt+0x3a62c>
  44616c:	mov	x20, x0
  446170:	b	446640 <nftw@plt+0x43ac0>
  446174:	cmp	w0, #0x43
  446178:	b.eq	446340 <nftw@plt+0x437c0>  // b.none
  44617c:	cmp	w0, #0x46
  446180:	b.ne	4461a8 <nftw@plt+0x43628>  // b.any
  446184:	mov	x0, x19
  446188:	bl	443ce8 <nftw@plt+0x41168>
  44618c:	mov	x3, #0x0                   	// #0
  446190:	mov	x2, x0
  446194:	mov	w1, #0xe                   	// #14
  446198:	mov	x0, x19
  44619c:	bl	43d1ac <nftw@plt+0x3a62c>
  4461a0:	mov	x20, x0
  4461a4:	b	446640 <nftw@plt+0x43ac0>
  4461a8:	mov	x20, #0x0                   	// #0
  4461ac:	cmp	w0, #0x41
  4461b0:	b.ne	446640 <nftw@plt+0x43ac0>  // b.any
  4461b4:	mov	x0, x19
  4461b8:	bl	446a94 <nftw@plt+0x43f14>
  4461bc:	mov	x3, #0x0                   	// #0
  4461c0:	mov	x2, x0
  4461c4:	mov	w1, #0x30                  	// #48
  4461c8:	mov	x0, x19
  4461cc:	bl	43d1ac <nftw@plt+0x3a62c>
  4461d0:	mov	x20, x0
  4461d4:	b	446640 <nftw@plt+0x43ac0>
  4461d8:	cmp	w0, #0x56
  4461dc:	b.eq	446244 <nftw@plt+0x436c4>  // b.none
  4461e0:	cmp	w0, #0x57
  4461e4:	b.ne	44620c <nftw@plt+0x4368c>  // b.any
  4461e8:	mov	x0, x19
  4461ec:	bl	445a74 <nftw@plt+0x42ef4>
  4461f0:	mov	x3, #0x0                   	// #0
  4461f4:	mov	x2, x0
  4461f8:	mov	w1, #0x15                  	// #21
  4461fc:	mov	x0, x19
  446200:	bl	43d1ac <nftw@plt+0x3a62c>
  446204:	mov	x20, x0
  446208:	b	446640 <nftw@plt+0x43ac0>
  44620c:	mov	x20, #0x0                   	// #0
  446210:	cmp	w0, #0x54
  446214:	b.ne	446640 <nftw@plt+0x43ac0>  // b.any
  446218:	add	w2, w2, #0xa
  44621c:	str	w2, [x19, #72]
  446220:	mov	x0, x19
  446224:	bl	443ce8 <nftw@plt+0x41168>
  446228:	mov	x3, #0x0                   	// #0
  44622c:	mov	x2, x0
  446230:	mov	w1, #0xa                   	// #10
  446234:	mov	x0, x19
  446238:	bl	43d1ac <nftw@plt+0x3a62c>
  44623c:	mov	x20, x0
  446240:	b	446640 <nftw@plt+0x43ac0>
  446244:	add	w2, w2, #0xf
  446248:	str	w2, [x19, #72]
  44624c:	mov	x0, x19
  446250:	bl	443ce8 <nftw@plt+0x41168>
  446254:	mov	x3, #0x0                   	// #0
  446258:	mov	x2, x0
  44625c:	mov	w1, #0x9                   	// #9
  446260:	mov	x0, x19
  446264:	bl	43d1ac <nftw@plt+0x3a62c>
  446268:	mov	x20, x0
  44626c:	b	446640 <nftw@plt+0x43ac0>
  446270:	mov	x0, x19
  446274:	bl	443ce8 <nftw@plt+0x41168>
  446278:	mov	x3, #0x0                   	// #0
  44627c:	mov	x2, x0
  446280:	mov	w1, #0xc                   	// #12
  446284:	mov	x0, x19
  446288:	bl	43d1ac <nftw@plt+0x3a62c>
  44628c:	mov	x20, x0
  446290:	b	446640 <nftw@plt+0x43ac0>
  446294:	mov	x0, x19
  446298:	bl	443ce8 <nftw@plt+0x41168>
  44629c:	mov	x3, #0x0                   	// #0
  4462a0:	mov	x2, x0
  4462a4:	mov	w1, #0xd                   	// #13
  4462a8:	mov	x0, x19
  4462ac:	bl	43d1ac <nftw@plt+0x3a62c>
  4462b0:	mov	x20, x0
  4462b4:	b	446640 <nftw@plt+0x43ac0>
  4462b8:	mov	w1, #0x68                  	// #104
  4462bc:	mov	x0, x19
  4462c0:	bl	43d4a8 <nftw@plt+0x3a928>
  4462c4:	mov	x20, #0x0                   	// #0
  4462c8:	cbz	w0, 446640 <nftw@plt+0x43ac0>
  4462cc:	mov	w1, #0x0                   	// #0
  4462d0:	mov	x0, x19
  4462d4:	bl	445fbc <nftw@plt+0x4343c>
  4462d8:	mov	x3, #0x0                   	// #0
  4462dc:	mov	x2, x0
  4462e0:	mov	w1, #0xf                   	// #15
  4462e4:	mov	x0, x19
  4462e8:	bl	43d1ac <nftw@plt+0x3a62c>
  4462ec:	mov	x20, x0
  4462f0:	b	446640 <nftw@plt+0x43ac0>
  4462f4:	mov	w1, #0x0                   	// #0
  4462f8:	mov	x0, x19
  4462fc:	bl	43d4a8 <nftw@plt+0x3a928>
  446300:	mov	x20, #0x0                   	// #0
  446304:	cbz	w0, 446640 <nftw@plt+0x43ac0>
  446308:	mov	w1, #0x0                   	// #0
  44630c:	mov	x0, x19
  446310:	bl	43d4a8 <nftw@plt+0x3a928>
  446314:	cbz	w0, 446640 <nftw@plt+0x43ac0>
  446318:	mov	w1, #0x0                   	// #0
  44631c:	mov	x0, x19
  446320:	bl	445fbc <nftw@plt+0x4343c>
  446324:	mov	x3, #0x0                   	// #0
  446328:	mov	x2, x0
  44632c:	mov	w1, #0x11                  	// #17
  446330:	mov	x0, x19
  446334:	bl	43d1ac <nftw@plt+0x3a62c>
  446338:	mov	x20, x0
  44633c:	b	446640 <nftw@plt+0x43ac0>
  446340:	stp	x21, x22, [sp, #32]
  446344:	mov	x0, x19
  446348:	bl	443ce8 <nftw@plt+0x41168>
  44634c:	mov	x21, x0
  446350:	mov	x0, x19
  446354:	bl	43d394 <nftw@plt+0x3a814>
  446358:	tbnz	w0, #31, 4466f8 <nftw@plt+0x43b78>
  44635c:	ldr	x0, [x19, #24]
  446360:	ldrb	w1, [x0]
  446364:	mov	x20, #0x0                   	// #0
  446368:	cmp	w1, #0x5f
  44636c:	b.eq	446378 <nftw@plt+0x437f8>  // b.none
  446370:	ldp	x21, x22, [sp, #32]
  446374:	b	446640 <nftw@plt+0x43ac0>
  446378:	add	x0, x0, #0x1
  44637c:	str	x0, [x19, #24]
  446380:	mov	x0, x19
  446384:	bl	443ce8 <nftw@plt+0x41168>
  446388:	ldr	w1, [x19, #72]
  44638c:	add	w1, w1, #0x5
  446390:	str	w1, [x19, #72]
  446394:	mov	x3, x21
  446398:	mov	x2, x0
  44639c:	mov	w1, #0xb                   	// #11
  4463a0:	mov	x0, x19
  4463a4:	bl	43d1ac <nftw@plt+0x3a62c>
  4463a8:	mov	x20, x0
  4463ac:	ldp	x21, x22, [sp, #32]
  4463b0:	b	446640 <nftw@plt+0x43ac0>
  4463b4:	mov	x0, x19
  4463b8:	bl	445a74 <nftw@plt+0x42ef4>
  4463bc:	mov	x3, #0x0                   	// #0
  4463c0:	mov	x2, x0
  4463c4:	mov	w1, #0x14                  	// #20
  4463c8:	mov	x0, x19
  4463cc:	bl	43d1ac <nftw@plt+0x3a62c>
  4463d0:	mov	x20, x0
  4463d4:	b	446640 <nftw@plt+0x43ac0>
  4463d8:	cmp	w1, #0x41
  4463dc:	b.eq	446440 <nftw@plt+0x438c0>  // b.none
  4463e0:	mov	x20, #0x0                   	// #0
  4463e4:	cmp	w1, #0x52
  4463e8:	b.ne	446640 <nftw@plt+0x43ac0>  // b.any
  4463ec:	mov	x0, x19
  4463f0:	bl	445a74 <nftw@plt+0x42ef4>
  4463f4:	mov	x20, x0
  4463f8:	mov	x0, x19
  4463fc:	bl	43d464 <nftw@plt+0x3a8e4>
  446400:	mov	x3, x0
  446404:	mov	x2, x20
  446408:	mov	w1, #0x16                  	// #22
  44640c:	mov	x0, x19
  446410:	bl	43d1ac <nftw@plt+0x3a62c>
  446414:	mov	x20, x0
  446418:	b	446640 <nftw@plt+0x43ac0>
  44641c:	mov	x0, x19
  446420:	bl	445a74 <nftw@plt+0x42ef4>
  446424:	mov	x3, #0x0                   	// #0
  446428:	mov	x2, x0
  44642c:	mov	w1, #0x13                  	// #19
  446430:	mov	x0, x19
  446434:	bl	43d1ac <nftw@plt+0x3a62c>
  446438:	mov	x20, x0
  44643c:	b	446640 <nftw@plt+0x43ac0>
  446440:	mov	w1, #0x0                   	// #0
  446444:	mov	x0, x19
  446448:	bl	445fbc <nftw@plt+0x4343c>
  44644c:	mov	x3, #0x0                   	// #0
  446450:	mov	x2, x0
  446454:	mov	w1, #0x17                  	// #23
  446458:	mov	x0, x19
  44645c:	bl	43d1ac <nftw@plt+0x3a62c>
  446460:	mov	x20, x0
  446464:	b	446640 <nftw@plt+0x43ac0>
  446468:	ldrb	w1, [x0, #2]
  44646c:	cbz	w1, 446484 <nftw@plt+0x43904>
  446470:	add	x1, x0, #0x3
  446474:	str	x1, [x19, #24]
  446478:	ldrb	w0, [x0, #2]
  44647c:	cmp	w0, #0x6e
  446480:	b.eq	4464ac <nftw@plt+0x4392c>  // b.none
  446484:	mov	w1, #0x0                   	// #0
  446488:	mov	x0, x19
  44648c:	bl	445fbc <nftw@plt+0x4343c>
  446490:	mov	x3, #0x0                   	// #0
  446494:	mov	x2, x0
  446498:	mov	w1, #0x49                  	// #73
  44649c:	mov	x0, x19
  4464a0:	bl	43d1ac <nftw@plt+0x3a62c>
  4464a4:	mov	x20, x0
  4464a8:	b	446640 <nftw@plt+0x43ac0>
  4464ac:	mov	w1, #0x0                   	// #0
  4464b0:	mov	x0, x19
  4464b4:	bl	445fbc <nftw@plt+0x4343c>
  4464b8:	mov	x3, #0x0                   	// #0
  4464bc:	mov	x2, x0
  4464c0:	mov	w1, #0x4a                  	// #74
  4464c4:	mov	x0, x19
  4464c8:	bl	43d1ac <nftw@plt+0x3a62c>
  4464cc:	mov	x20, x0
  4464d0:	b	446640 <nftw@plt+0x43ac0>
  4464d4:	mov	x0, #0x1                   	// #1
  4464d8:	mov	w23, #0x0                   	// #0
  4464dc:	cmp	w22, #0x0
  4464e0:	b.le	446504 <nftw@plt+0x43984>
  4464e4:	mov	w23, w0
  4464e8:	cmp	w22, w0
  4464ec:	b.le	446504 <nftw@plt+0x43984>
  4464f0:	ldrb	w1, [x21, x0]
  4464f4:	add	x0, x0, #0x1
  4464f8:	cmp	w1, #0x24
  4464fc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  446500:	b.ne	4464e4 <nftw@plt+0x43964>  // b.any
  446504:	mov	w2, w23
  446508:	mov	x1, x21
  44650c:	mov	x0, x19
  446510:	bl	443818 <nftw@plt+0x40c98>
  446514:	mov	x20, x0
  446518:	ldr	x21, [x19, #24]
  44651c:	add	x21, x21, w23, sxtw
  446520:	str	x21, [x19, #24]
  446524:	sub	w22, w22, w23
  446528:	cbz	x0, 446780 <nftw@plt+0x43c00>
  44652c:	cbz	x24, 4465d0 <nftw@plt+0x43a50>
  446530:	mov	x3, x20
  446534:	mov	x2, x24
  446538:	mov	w1, w25
  44653c:	mov	x0, x19
  446540:	bl	43d1ac <nftw@plt+0x3a62c>
  446544:	mov	x24, x0
  446548:	cbz	x0, 446734 <nftw@plt+0x43bb4>
  44654c:	cmp	w22, #0x0
  446550:	b.le	4465d8 <nftw@plt+0x43a58>
  446554:	ldrb	w0, [x21]
  446558:	cbz	w0, 44671c <nftw@plt+0x43b9c>
  44655c:	cmp	w0, #0x24
  446560:	b.ne	4464d4 <nftw@plt+0x43954>  // b.any
  446564:	ldrb	w21, [x21, #1]
  446568:	cmp	w21, #0x53
  44656c:	b.eq	446598 <nftw@plt+0x43a18>  // b.none
  446570:	cmp	w21, #0x5f
  446574:	b.eq	4465a0 <nftw@plt+0x43a20>  // b.none
  446578:	cmp	w21, #0x24
  44657c:	b.eq	4465a4 <nftw@plt+0x43a24>  // b.none
  446580:	mov	x20, #0x0                   	// #0
  446584:	ldp	x21, x22, [sp, #32]
  446588:	ldp	x23, x24, [sp, #48]
  44658c:	ldp	x25, x26, [sp, #64]
  446590:	ldp	x27, x28, [sp, #80]
  446594:	b	446640 <nftw@plt+0x43ac0>
  446598:	mov	w21, w28
  44659c:	b	4465a4 <nftw@plt+0x43a24>
  4465a0:	mov	w21, w27
  4465a4:	mov	x0, x19
  4465a8:	bl	43d16c <nftw@plt+0x3a5ec>
  4465ac:	mov	x20, x0
  4465b0:	cbz	x0, 446758 <nftw@plt+0x43bd8>
  4465b4:	str	w26, [x0]
  4465b8:	str	w21, [x0, #8]
  4465bc:	ldr	x21, [x19, #24]
  4465c0:	add	x21, x21, #0x2
  4465c4:	str	x21, [x19, #24]
  4465c8:	sub	w22, w22, #0x2
  4465cc:	b	44652c <nftw@plt+0x439ac>
  4465d0:	mov	x24, x20
  4465d4:	b	44654c <nftw@plt+0x439cc>
  4465d8:	mov	x3, #0x0                   	// #0
  4465dc:	mov	x2, x24
  4465e0:	mov	w1, #0x3f                  	// #63
  4465e4:	mov	x0, x19
  4465e8:	bl	43d1ac <nftw@plt+0x3a62c>
  4465ec:	mov	x20, x0
  4465f0:	ldp	x21, x22, [sp, #32]
  4465f4:	ldp	x23, x24, [sp, #48]
  4465f8:	ldp	x25, x26, [sp, #64]
  4465fc:	ldp	x27, x28, [sp, #80]
  446600:	b	446640 <nftw@plt+0x43ac0>
  446604:	stp	x21, x22, [sp, #32]
  446608:	mov	w21, w1
  44660c:	mov	x0, x19
  446610:	bl	445a74 <nftw@plt+0x42ef4>
  446614:	mov	x20, x0
  446618:	cbz	x0, 446794 <nftw@plt+0x43c14>
  44661c:	cbz	w21, 446628 <nftw@plt+0x43aa8>
  446620:	ldr	w0, [x19, #16]
  446624:	tbz	w0, #0, 446650 <nftw@plt+0x43ad0>
  446628:	ldr	x0, [x19, #24]
  44662c:	ldrb	w0, [x0]
  446630:	cmp	w0, #0x45
  446634:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  446638:	b.ne	44669c <nftw@plt+0x43b1c>  // b.any
  44663c:	ldp	x21, x22, [sp, #32]
  446640:	mov	x0, x20
  446644:	ldp	x19, x20, [sp, #16]
  446648:	ldp	x29, x30, [sp], #96
  44664c:	ret
  446650:	ldr	w19, [x20]
  446654:	mov	w0, w19
  446658:	bl	43d13c <nftw@plt+0x3a5bc>
  44665c:	cbz	w0, 446668 <nftw@plt+0x43ae8>
  446660:	ldr	x20, [x20, #8]
  446664:	b	446650 <nftw@plt+0x43ad0>
  446668:	cmp	w19, #0x2
  44666c:	b.eq	446678 <nftw@plt+0x43af8>  // b.none
  446670:	ldp	x21, x22, [sp, #32]
  446674:	b	446640 <nftw@plt+0x43ac0>
  446678:	ldr	x19, [x20, #16]
  44667c:	ldr	w0, [x19]
  446680:	bl	43d13c <nftw@plt+0x3a5bc>
  446684:	cbz	w0, 446694 <nftw@plt+0x43b14>
  446688:	ldr	x0, [x19, #8]
  44668c:	str	x0, [x20, #16]
  446690:	b	446678 <nftw@plt+0x43af8>
  446694:	ldp	x21, x22, [sp, #32]
  446698:	b	446640 <nftw@plt+0x43ac0>
  44669c:	mov	x0, x20
  4466a0:	bl	43d2fc <nftw@plt+0x3a77c>
  4466a4:	mov	w1, w0
  4466a8:	mov	x0, x19
  4466ac:	bl	444e20 <nftw@plt+0x422a0>
  4466b0:	mov	x3, x0
  4466b4:	cbz	x0, 44674c <nftw@plt+0x43bcc>
  4466b8:	cbnz	w21, 4466c8 <nftw@plt+0x43b48>
  4466bc:	ldr	w0, [x20]
  4466c0:	cmp	w0, #0x2
  4466c4:	b.eq	4466e4 <nftw@plt+0x43b64>  // b.none
  4466c8:	mov	x2, x20
  4466cc:	mov	w1, #0x3                   	// #3
  4466d0:	mov	x0, x19
  4466d4:	bl	43d1ac <nftw@plt+0x3a62c>
  4466d8:	mov	x20, x0
  4466dc:	ldp	x21, x22, [sp, #32]
  4466e0:	b	446640 <nftw@plt+0x43ac0>
  4466e4:	ldr	w0, [x3]
  4466e8:	cmp	w0, #0x29
  4466ec:	b.ne	4466c8 <nftw@plt+0x43b48>  // b.any
  4466f0:	str	xzr, [x3, #8]
  4466f4:	b	4466c8 <nftw@plt+0x43b48>
  4466f8:	mov	x20, #0x0                   	// #0
  4466fc:	ldp	x21, x22, [sp, #32]
  446700:	b	446640 <nftw@plt+0x43ac0>
  446704:	mov	x20, #0x0                   	// #0
  446708:	b	446640 <nftw@plt+0x43ac0>
  44670c:	mov	x20, #0x0                   	// #0
  446710:	b	446640 <nftw@plt+0x43ac0>
  446714:	mov	x20, #0x0                   	// #0
  446718:	b	446640 <nftw@plt+0x43ac0>
  44671c:	mov	x20, #0x0                   	// #0
  446720:	ldp	x21, x22, [sp, #32]
  446724:	ldp	x23, x24, [sp, #48]
  446728:	ldp	x25, x26, [sp, #64]
  44672c:	ldp	x27, x28, [sp, #80]
  446730:	b	446640 <nftw@plt+0x43ac0>
  446734:	mov	x20, x0
  446738:	ldp	x21, x22, [sp, #32]
  44673c:	ldp	x23, x24, [sp, #48]
  446740:	ldp	x25, x26, [sp, #64]
  446744:	ldp	x27, x28, [sp, #80]
  446748:	b	446640 <nftw@plt+0x43ac0>
  44674c:	mov	x20, x0
  446750:	ldp	x21, x22, [sp, #32]
  446754:	b	446640 <nftw@plt+0x43ac0>
  446758:	ldr	x0, [x19, #24]
  44675c:	add	x0, x0, #0x2
  446760:	str	x0, [x19, #24]
  446764:	ldp	x21, x22, [sp, #32]
  446768:	ldp	x23, x24, [sp, #48]
  44676c:	ldp	x25, x26, [sp, #64]
  446770:	ldp	x27, x28, [sp, #80]
  446774:	b	446640 <nftw@plt+0x43ac0>
  446778:	ldp	x21, x22, [sp, #32]
  44677c:	b	446640 <nftw@plt+0x43ac0>
  446780:	ldp	x21, x22, [sp, #32]
  446784:	ldp	x23, x24, [sp, #48]
  446788:	ldp	x25, x26, [sp, #64]
  44678c:	ldp	x27, x28, [sp, #80]
  446790:	b	446640 <nftw@plt+0x43ac0>
  446794:	ldp	x21, x22, [sp, #32]
  446798:	b	446640 <nftw@plt+0x43ac0>
  44679c:	stp	x29, x30, [sp, #-48]!
  4467a0:	mov	x29, sp
  4467a4:	stp	x19, x20, [sp, #16]
  4467a8:	str	x21, [sp, #32]
  4467ac:	mov	x19, x0
  4467b0:	mov	w21, w1
  4467b4:	ldr	x0, [x0, #24]
  4467b8:	ldrb	w1, [x0]
  4467bc:	cmp	w1, #0x5f
  4467c0:	b.eq	446818 <nftw@plt+0x43c98>  // b.none
  4467c4:	cbnz	w21, 44692c <nftw@plt+0x43dac>
  4467c8:	ldr	x0, [x19, #24]
  4467cc:	ldrb	w1, [x0]
  4467d0:	mov	x20, #0x0                   	// #0
  4467d4:	cmp	w1, #0x5a
  4467d8:	b.ne	446930 <nftw@plt+0x43db0>  // b.any
  4467dc:	add	x0, x0, #0x1
  4467e0:	str	x0, [x19, #24]
  4467e4:	mov	w1, w21
  4467e8:	mov	x0, x19
  4467ec:	bl	445fbc <nftw@plt+0x4343c>
  4467f0:	mov	x20, x0
  4467f4:	cbz	w21, 446930 <nftw@plt+0x43db0>
  4467f8:	ldr	w0, [x19, #16]
  4467fc:	tbz	w0, #0, 446930 <nftw@plt+0x43db0>
  446800:	ldr	x1, [x19, #24]
  446804:	ldrb	w0, [x1]
  446808:	mov	w21, #0x4e                  	// #78
  44680c:	cmp	w0, #0x2e
  446810:	b.eq	4468ec <nftw@plt+0x43d6c>  // b.none
  446814:	b	446930 <nftw@plt+0x43db0>
  446818:	add	x0, x0, #0x1
  44681c:	str	x0, [x19, #24]
  446820:	b	4467c8 <nftw@plt+0x43c48>
  446824:	add	x3, x1, #0x2
  446828:	ldrb	w2, [x1, #2]
  44682c:	sub	w0, w2, #0x61
  446830:	and	w0, w0, #0xff
  446834:	cmp	w2, #0x5f
  446838:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  44683c:	b.hi	446918 <nftw@plt+0x43d98>  // b.pmore
  446840:	ldrb	w2, [x3, #1]!
  446844:	sub	w0, w2, #0x61
  446848:	and	w0, w0, #0xff
  44684c:	cmp	w2, #0x5f
  446850:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  446854:	b.ls	446840 <nftw@plt+0x43cc0>  // b.plast
  446858:	b	446918 <nftw@plt+0x43d98>
  44685c:	ldrb	w0, [x2, #1]!
  446860:	sub	w0, w0, #0x30
  446864:	and	w0, w0, #0xff
  446868:	cmp	w0, #0x9
  44686c:	b.ls	44685c <nftw@plt+0x43cdc>  // b.plast
  446870:	ldrb	w0, [x2]
  446874:	cmp	w0, #0x2e
  446878:	b.ne	4468b4 <nftw@plt+0x43d34>  // b.any
  44687c:	mov	x3, x2
  446880:	ldrb	w0, [x3, #1]
  446884:	sub	w0, w0, #0x30
  446888:	and	w0, w0, #0xff
  44688c:	cmp	w0, #0x9
  446890:	b.hi	4468b0 <nftw@plt+0x43d30>  // b.pmore
  446894:	add	x2, x3, #0x2
  446898:	ldrb	w0, [x3, #2]
  44689c:	sub	w0, w0, #0x30
  4468a0:	and	w0, w0, #0xff
  4468a4:	cmp	w0, #0x9
  4468a8:	b.ls	44685c <nftw@plt+0x43cdc>  // b.plast
  4468ac:	b	446870 <nftw@plt+0x43cf0>
  4468b0:	mov	x2, x3
  4468b4:	str	x2, [x19, #24]
  4468b8:	sub	w2, w2, w1
  4468bc:	mov	x0, x19
  4468c0:	bl	443818 <nftw@plt+0x40c98>
  4468c4:	mov	x3, x0
  4468c8:	mov	x2, x20
  4468cc:	mov	w1, w21
  4468d0:	mov	x0, x19
  4468d4:	bl	43d1ac <nftw@plt+0x3a62c>
  4468d8:	mov	x20, x0
  4468dc:	ldr	x1, [x19, #24]
  4468e0:	ldrb	w0, [x1]
  4468e4:	cmp	w0, #0x2e
  4468e8:	b.ne	446930 <nftw@plt+0x43db0>  // b.any
  4468ec:	ldrb	w0, [x1, #1]
  4468f0:	sub	w2, w0, #0x61
  4468f4:	and	w2, w2, #0xff
  4468f8:	cmp	w0, #0x5f
  4468fc:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  446900:	b.ls	446824 <nftw@plt+0x43ca4>  // b.plast
  446904:	sub	w0, w0, #0x30
  446908:	and	w0, w0, #0xff
  44690c:	cmp	w0, #0x9
  446910:	b.hi	446930 <nftw@plt+0x43db0>  // b.pmore
  446914:	mov	x3, x1
  446918:	ldrb	w0, [x3]
  44691c:	mov	x2, x3
  446920:	cmp	w0, #0x2e
  446924:	b.eq	446880 <nftw@plt+0x43d00>  // b.none
  446928:	b	4468b4 <nftw@plt+0x43d34>
  44692c:	mov	x20, #0x0                   	// #0
  446930:	mov	x0, x20
  446934:	ldp	x19, x20, [sp, #16]
  446938:	ldr	x21, [sp, #32]
  44693c:	ldp	x29, x30, [sp], #48
  446940:	ret
  446944:	stp	x29, x30, [sp, #-48]!
  446948:	mov	x29, sp
  44694c:	stp	x19, x20, [sp, #16]
  446950:	mov	x19, x0
  446954:	ldr	x0, [x0, #24]
  446958:	ldrb	w1, [x0]
  44695c:	mov	x20, #0x0                   	// #0
  446960:	cmp	w1, #0x4c
  446964:	b.ne	4469ac <nftw@plt+0x43e2c>  // b.any
  446968:	add	x1, x0, #0x1
  44696c:	str	x1, [x19, #24]
  446970:	ldrb	w0, [x0, #1]
  446974:	cmp	w0, #0x5f
  446978:	mov	w1, #0x5a                  	// #90
  44697c:	ccmp	w0, w1, #0x4, ne  // ne = any
  446980:	b.ne	4469bc <nftw@plt+0x43e3c>  // b.any
  446984:	mov	w1, #0x0                   	// #0
  446988:	mov	x0, x19
  44698c:	bl	44679c <nftw@plt+0x43c1c>
  446990:	mov	x20, x0
  446994:	ldr	x0, [x19, #24]
  446998:	ldrb	w1, [x0]
  44699c:	cmp	w1, #0x45
  4469a0:	b.ne	446a8c <nftw@plt+0x43f0c>  // b.any
  4469a4:	add	x0, x0, #0x1
  4469a8:	str	x0, [x19, #24]
  4469ac:	mov	x0, x20
  4469b0:	ldp	x19, x20, [sp, #16]
  4469b4:	ldp	x29, x30, [sp], #48
  4469b8:	ret
  4469bc:	mov	x0, x19
  4469c0:	bl	443ce8 <nftw@plt+0x41168>
  4469c4:	mov	x20, x0
  4469c8:	cbz	x0, 4469ac <nftw@plt+0x43e2c>
  4469cc:	str	x21, [sp, #32]
  4469d0:	ldr	w0, [x0]
  4469d4:	cmp	w0, #0x27
  4469d8:	b.eq	446a48 <nftw@plt+0x43ec8>  // b.none
  4469dc:	ldr	x0, [x19, #24]
  4469e0:	ldrb	w1, [x0]
  4469e4:	mov	w21, #0x3d                  	// #61
  4469e8:	cmp	w1, #0x6e
  4469ec:	b.eq	446a68 <nftw@plt+0x43ee8>  // b.none
  4469f0:	ldr	x1, [x19, #24]
  4469f4:	ldrb	w4, [x1]
  4469f8:	cmp	w4, #0x45
  4469fc:	b.eq	446a78 <nftw@plt+0x43ef8>  // b.none
  446a00:	add	x3, x1, #0x1
  446a04:	cbz	w4, 446a80 <nftw@plt+0x43f00>
  446a08:	mov	x2, x3
  446a0c:	str	x3, [x19, #24]
  446a10:	ldrb	w4, [x3], #1
  446a14:	cmp	w4, #0x45
  446a18:	b.ne	446a04 <nftw@plt+0x43e84>  // b.any
  446a1c:	sub	w2, w2, w1
  446a20:	mov	x0, x19
  446a24:	bl	443818 <nftw@plt+0x40c98>
  446a28:	mov	x3, x0
  446a2c:	mov	x2, x20
  446a30:	mov	w1, w21
  446a34:	mov	x0, x19
  446a38:	bl	43d1ac <nftw@plt+0x3a62c>
  446a3c:	mov	x20, x0
  446a40:	ldr	x21, [sp, #32]
  446a44:	b	446994 <nftw@plt+0x43e14>
  446a48:	ldr	x0, [x20, #8]
  446a4c:	ldr	w1, [x0, #28]
  446a50:	cbz	w1, 4469dc <nftw@plt+0x43e5c>
  446a54:	ldr	w1, [x19, #72]
  446a58:	ldr	w0, [x0, #8]
  446a5c:	sub	w0, w1, w0
  446a60:	str	w0, [x19, #72]
  446a64:	b	4469dc <nftw@plt+0x43e5c>
  446a68:	add	x0, x0, #0x1
  446a6c:	str	x0, [x19, #24]
  446a70:	mov	w21, #0x3e                  	// #62
  446a74:	b	4469f0 <nftw@plt+0x43e70>
  446a78:	mov	x2, x1
  446a7c:	b	446a1c <nftw@plt+0x43e9c>
  446a80:	mov	x20, #0x0                   	// #0
  446a84:	ldr	x21, [sp, #32]
  446a88:	b	4469ac <nftw@plt+0x43e2c>
  446a8c:	mov	x20, #0x0                   	// #0
  446a90:	b	4469ac <nftw@plt+0x43e2c>
  446a94:	stp	x29, x30, [sp, #-32]!
  446a98:	mov	x29, sp
  446a9c:	str	x19, [sp, #16]
  446aa0:	mov	x19, x0
  446aa4:	ldr	x0, [x0, #24]
  446aa8:	ldrb	w1, [x0]
  446aac:	cmp	w1, #0x4c
  446ab0:	b.eq	446b08 <nftw@plt+0x43f88>  // b.none
  446ab4:	b.hi	446ad4 <nftw@plt+0x43f54>  // b.pmore
  446ab8:	sub	w1, w1, #0x49
  446abc:	and	w1, w1, #0xff
  446ac0:	cmp	w1, #0x1
  446ac4:	b.hi	446b1c <nftw@plt+0x43f9c>  // b.pmore
  446ac8:	mov	x0, x19
  446acc:	bl	446be0 <nftw@plt+0x44060>
  446ad0:	b	446b10 <nftw@plt+0x43f90>
  446ad4:	cmp	w1, #0x58
  446ad8:	b.ne	446b1c <nftw@plt+0x43f9c>  // b.any
  446adc:	add	x0, x0, #0x1
  446ae0:	str	x0, [x19, #24]
  446ae4:	mov	x0, x19
  446ae8:	bl	444f68 <nftw@plt+0x423e8>
  446aec:	ldr	x1, [x19, #24]
  446af0:	ldrb	w2, [x1]
  446af4:	cmp	w2, #0x45
  446af8:	b.ne	446b28 <nftw@plt+0x43fa8>  // b.any
  446afc:	add	x1, x1, #0x1
  446b00:	str	x1, [x19, #24]
  446b04:	b	446b10 <nftw@plt+0x43f90>
  446b08:	mov	x0, x19
  446b0c:	bl	446944 <nftw@plt+0x43dc4>
  446b10:	ldr	x19, [sp, #16]
  446b14:	ldp	x29, x30, [sp], #32
  446b18:	ret
  446b1c:	mov	x0, x19
  446b20:	bl	443ce8 <nftw@plt+0x41168>
  446b24:	b	446b10 <nftw@plt+0x43f90>
  446b28:	mov	x0, #0x0                   	// #0
  446b2c:	b	446b10 <nftw@plt+0x43f90>
  446b30:	stp	x29, x30, [sp, #-64]!
  446b34:	mov	x29, sp
  446b38:	stp	x19, x20, [sp, #16]
  446b3c:	stp	x21, x22, [sp, #32]
  446b40:	mov	x19, x0
  446b44:	ldr	x22, [x0, #64]
  446b48:	ldr	x0, [x0, #24]
  446b4c:	ldrb	w1, [x0]
  446b50:	cmp	w1, #0x45
  446b54:	b.eq	446bc0 <nftw@plt+0x44040>  // b.none
  446b58:	str	xzr, [sp, #56]
  446b5c:	add	x20, sp, #0x38
  446b60:	mov	w21, #0x2f                  	// #47
  446b64:	mov	x0, x19
  446b68:	bl	446a94 <nftw@plt+0x43f14>
  446b6c:	cbz	x0, 446bb0 <nftw@plt+0x44030>
  446b70:	mov	x3, #0x0                   	// #0
  446b74:	mov	x2, x0
  446b78:	mov	w1, w21
  446b7c:	mov	x0, x19
  446b80:	bl	43d1ac <nftw@plt+0x3a62c>
  446b84:	str	x0, [x20]
  446b88:	cbz	x0, 446bb0 <nftw@plt+0x44030>
  446b8c:	add	x20, x0, #0x10
  446b90:	ldr	x0, [x19, #24]
  446b94:	ldrb	w1, [x0]
  446b98:	cmp	w1, #0x45
  446b9c:	b.ne	446b64 <nftw@plt+0x43fe4>  // b.any
  446ba0:	add	x0, x0, #0x1
  446ba4:	str	x0, [x19, #24]
  446ba8:	str	x22, [x19, #64]
  446bac:	ldr	x0, [sp, #56]
  446bb0:	ldp	x19, x20, [sp, #16]
  446bb4:	ldp	x21, x22, [sp, #32]
  446bb8:	ldp	x29, x30, [sp], #64
  446bbc:	ret
  446bc0:	add	x0, x0, #0x1
  446bc4:	str	x0, [x19, #24]
  446bc8:	mov	x3, #0x0                   	// #0
  446bcc:	mov	x2, #0x0                   	// #0
  446bd0:	mov	w1, #0x2f                  	// #47
  446bd4:	mov	x0, x19
  446bd8:	bl	43d1ac <nftw@plt+0x3a62c>
  446bdc:	b	446bb0 <nftw@plt+0x44030>
  446be0:	ldr	x2, [x0, #24]
  446be4:	ldrb	w1, [x2]
  446be8:	sub	w1, w1, #0x49
  446bec:	and	w1, w1, #0xff
  446bf0:	cmp	w1, #0x1
  446bf4:	b.hi	446c14 <nftw@plt+0x44094>  // b.pmore
  446bf8:	stp	x29, x30, [sp, #-16]!
  446bfc:	mov	x29, sp
  446c00:	add	x2, x2, #0x1
  446c04:	str	x2, [x0, #24]
  446c08:	bl	446b30 <nftw@plt+0x43fb0>
  446c0c:	ldp	x29, x30, [sp], #16
  446c10:	ret
  446c14:	mov	x0, #0x0                   	// #0
  446c18:	ret
  446c1c:	stp	x29, x30, [sp, #-48]!
  446c20:	mov	x29, sp
  446c24:	stp	x19, x20, [sp, #16]
  446c28:	mov	x19, x0
  446c2c:	ldr	x0, [x0, #24]
  446c30:	ldrb	w1, [x0]
  446c34:	cmp	w1, #0x4c
  446c38:	b.eq	446c94 <nftw@plt+0x44114>  // b.none
  446c3c:	cmp	w1, #0x54
  446c40:	b.eq	446ca4 <nftw@plt+0x44124>  // b.none
  446c44:	cmp	w1, #0x73
  446c48:	b.eq	446cb4 <nftw@plt+0x44134>  // b.none
  446c4c:	cmp	w1, #0x66
  446c50:	b.eq	446df4 <nftw@plt+0x44274>  // b.none
  446c54:	sub	w2, w1, #0x30
  446c58:	and	w2, w2, #0xff
  446c5c:	cmp	w2, #0x9
  446c60:	b.hi	446ea8 <nftw@plt+0x44328>  // b.pmore
  446c64:	mov	x0, x19
  446c68:	bl	444928 <nftw@plt+0x41da8>
  446c6c:	mov	x20, x0
  446c70:	cbz	x0, 446c84 <nftw@plt+0x44104>
  446c74:	ldr	x0, [x19, #24]
  446c78:	ldrb	w0, [x0]
  446c7c:	cmp	w0, #0x49
  446c80:	b.eq	446ec8 <nftw@plt+0x44348>  // b.none
  446c84:	mov	x0, x20
  446c88:	ldp	x19, x20, [sp, #16]
  446c8c:	ldp	x29, x30, [sp], #48
  446c90:	ret
  446c94:	mov	x0, x19
  446c98:	bl	446944 <nftw@plt+0x43dc4>
  446c9c:	mov	x20, x0
  446ca0:	b	446c84 <nftw@plt+0x44104>
  446ca4:	mov	x0, x19
  446ca8:	bl	43d694 <nftw@plt+0x3ab14>
  446cac:	mov	x20, x0
  446cb0:	b	446c84 <nftw@plt+0x44104>
  446cb4:	ldrb	w2, [x0, #1]
  446cb8:	cmp	w2, #0x72
  446cbc:	b.eq	446d38 <nftw@plt+0x441b8>  // b.none
  446cc0:	cmp	w2, #0x70
  446cc4:	b.eq	446dc8 <nftw@plt+0x44248>  // b.none
  446cc8:	cmp	w1, #0x69
  446ccc:	mov	w2, #0x74                  	// #116
  446cd0:	ccmp	w1, w2, #0x4, ne  // ne = any
  446cd4:	b.ne	446e00 <nftw@plt+0x44280>  // b.any
  446cd8:	ldrb	w2, [x0, #1]
  446cdc:	cmp	w2, #0x6c
  446ce0:	b.ne	446e00 <nftw@plt+0x44280>  // b.any
  446ce4:	stp	x21, x22, [sp, #32]
  446ce8:	add	x0, x0, #0x2
  446cec:	str	x0, [x19, #24]
  446cf0:	mov	x21, #0x0                   	// #0
  446cf4:	cmp	w1, #0x74
  446cf8:	b.eq	446eec <nftw@plt+0x4436c>  // b.none
  446cfc:	ldr	x0, [x19, #24]
  446d00:	ldrb	w0, [x0, #1]
  446d04:	mov	x20, #0x0                   	// #0
  446d08:	cbz	w0, 4473f8 <nftw@plt+0x44878>
  446d0c:	mov	w1, #0x45                  	// #69
  446d10:	mov	x0, x19
  446d14:	bl	445734 <nftw@plt+0x42bb4>
  446d18:	mov	x3, x0
  446d1c:	mov	x2, x21
  446d20:	mov	w1, #0x31                  	// #49
  446d24:	mov	x0, x19
  446d28:	bl	43d1ac <nftw@plt+0x3a62c>
  446d2c:	mov	x20, x0
  446d30:	ldp	x21, x22, [sp, #32]
  446d34:	b	446c84 <nftw@plt+0x44104>
  446d38:	stp	x21, x22, [sp, #32]
  446d3c:	add	x0, x0, #0x2
  446d40:	str	x0, [x19, #24]
  446d44:	mov	x0, x19
  446d48:	bl	443ce8 <nftw@plt+0x41168>
  446d4c:	mov	x20, x0
  446d50:	mov	x0, x19
  446d54:	bl	444928 <nftw@plt+0x41da8>
  446d58:	mov	x21, x0
  446d5c:	ldr	x0, [x19, #24]
  446d60:	ldrb	w0, [x0]
  446d64:	cmp	w0, #0x49
  446d68:	b.eq	446d8c <nftw@plt+0x4420c>  // b.none
  446d6c:	mov	x3, x21
  446d70:	mov	x2, x20
  446d74:	mov	w1, #0x1                   	// #1
  446d78:	mov	x0, x19
  446d7c:	bl	43d1ac <nftw@plt+0x3a62c>
  446d80:	mov	x20, x0
  446d84:	ldp	x21, x22, [sp, #32]
  446d88:	b	446c84 <nftw@plt+0x44104>
  446d8c:	mov	x0, x19
  446d90:	bl	446be0 <nftw@plt+0x44060>
  446d94:	mov	x3, x0
  446d98:	mov	x2, x21
  446d9c:	mov	w1, #0x4                   	// #4
  446da0:	mov	x0, x19
  446da4:	bl	43d1ac <nftw@plt+0x3a62c>
  446da8:	mov	x3, x0
  446dac:	mov	x2, x20
  446db0:	mov	w1, #0x1                   	// #1
  446db4:	mov	x0, x19
  446db8:	bl	43d1ac <nftw@plt+0x3a62c>
  446dbc:	mov	x20, x0
  446dc0:	ldp	x21, x22, [sp, #32]
  446dc4:	b	446c84 <nftw@plt+0x44104>
  446dc8:	add	x0, x0, #0x2
  446dcc:	str	x0, [x19, #24]
  446dd0:	mov	x0, x19
  446dd4:	bl	446c1c <nftw@plt+0x4409c>
  446dd8:	mov	x3, #0x0                   	// #0
  446ddc:	mov	x2, x0
  446de0:	mov	w1, #0x4b                  	// #75
  446de4:	mov	x0, x19
  446de8:	bl	43d1ac <nftw@plt+0x3a62c>
  446dec:	mov	x20, x0
  446df0:	b	446c84 <nftw@plt+0x44104>
  446df4:	ldrb	w1, [x0, #1]
  446df8:	cmp	w1, #0x70
  446dfc:	b.eq	446e3c <nftw@plt+0x442bc>  // b.none
  446e00:	mov	x0, x19
  446e04:	bl	44477c <nftw@plt+0x41bfc>
  446e08:	mov	x20, x0
  446e0c:	cbz	x0, 446c84 <nftw@plt+0x44104>
  446e10:	stp	x21, x22, [sp, #32]
  446e14:	ldr	w0, [x0]
  446e18:	cmp	w0, #0x32
  446e1c:	b.eq	446efc <nftw@plt+0x4437c>  // b.none
  446e20:	cmp	w0, #0x33
  446e24:	b.eq	447010 <nftw@plt+0x44490>  // b.none
  446e28:	cmp	w0, #0x34
  446e2c:	b.eq	447390 <nftw@plt+0x44810>  // b.none
  446e30:	mov	x20, #0x0                   	// #0
  446e34:	ldp	x21, x22, [sp, #32]
  446e38:	b	446c84 <nftw@plt+0x44104>
  446e3c:	stp	x21, x22, [sp, #32]
  446e40:	add	x1, x0, #0x2
  446e44:	str	x1, [x19, #24]
  446e48:	ldrb	w1, [x0, #2]
  446e4c:	cmp	w1, #0x54
  446e50:	b.eq	446e98 <nftw@plt+0x44318>  // b.none
  446e54:	mov	x0, x19
  446e58:	bl	43d618 <nftw@plt+0x3aa98>
  446e5c:	mvn	x1, x0
  446e60:	mov	x20, #0x0                   	// #0
  446e64:	tst	x1, #0x7fffffff
  446e68:	b.eq	4473e8 <nftw@plt+0x44868>  // b.none
  446e6c:	add	w21, w0, #0x1
  446e70:	mov	x0, x19
  446e74:	bl	43d16c <nftw@plt+0x3a5ec>
  446e78:	mov	x20, x0
  446e7c:	cbz	x0, 4473f0 <nftw@plt+0x44870>
  446e80:	mov	w0, #0x6                   	// #6
  446e84:	str	w0, [x20]
  446e88:	sxtw	x0, w21
  446e8c:	str	x0, [x20, #8]
  446e90:	ldp	x21, x22, [sp, #32]
  446e94:	b	446c84 <nftw@plt+0x44104>
  446e98:	add	x0, x0, #0x3
  446e9c:	str	x0, [x19, #24]
  446ea0:	mov	w21, #0x0                   	// #0
  446ea4:	b	446e70 <nftw@plt+0x442f0>
  446ea8:	cmp	w1, #0x6f
  446eac:	b.ne	446cc8 <nftw@plt+0x44148>  // b.any
  446eb0:	ldrb	w1, [x0, #1]
  446eb4:	cmp	w1, #0x6e
  446eb8:	b.ne	446e00 <nftw@plt+0x44280>  // b.any
  446ebc:	add	x0, x0, #0x2
  446ec0:	str	x0, [x19, #24]
  446ec4:	b	446c64 <nftw@plt+0x440e4>
  446ec8:	mov	x0, x19
  446ecc:	bl	446be0 <nftw@plt+0x44060>
  446ed0:	mov	x3, x0
  446ed4:	mov	x2, x20
  446ed8:	mov	w1, #0x4                   	// #4
  446edc:	mov	x0, x19
  446ee0:	bl	43d1ac <nftw@plt+0x3a62c>
  446ee4:	mov	x20, x0
  446ee8:	b	446c84 <nftw@plt+0x44104>
  446eec:	mov	x0, x19
  446ef0:	bl	443ce8 <nftw@plt+0x41168>
  446ef4:	mov	x21, x0
  446ef8:	b	446cfc <nftw@plt+0x4417c>
  446efc:	ldr	x0, [x20, #8]
  446f00:	ldr	x21, [x0]
  446f04:	ldr	w0, [x0, #16]
  446f08:	sub	w1, w0, #0x2
  446f0c:	ldr	w0, [x19, #72]
  446f10:	add	w0, w0, w1
  446f14:	str	w0, [x19, #72]
  446f18:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  446f1c:	add	x1, x1, #0x6b0
  446f20:	mov	x0, x21
  446f24:	bl	402890 <strcmp@plt>
  446f28:	cbz	w0, 446f54 <nftw@plt+0x443d4>
  446f2c:	ldr	w0, [x20]
  446f30:	cmp	w0, #0x33
  446f34:	b.eq	447014 <nftw@plt+0x44494>  // b.none
  446f38:	cmp	w0, #0x34
  446f3c:	b.eq	446fa0 <nftw@plt+0x44420>  // b.none
  446f40:	cmp	w0, #0x32
  446f44:	b.eq	446f7c <nftw@plt+0x443fc>  // b.none
  446f48:	mov	x20, #0x0                   	// #0
  446f4c:	ldp	x21, x22, [sp, #32]
  446f50:	b	446c84 <nftw@plt+0x44104>
  446f54:	mov	x0, x19
  446f58:	bl	443ce8 <nftw@plt+0x41168>
  446f5c:	mov	x3, x0
  446f60:	mov	x2, x20
  446f64:	mov	w1, #0x37                  	// #55
  446f68:	mov	x0, x19
  446f6c:	bl	43d1ac <nftw@plt+0x3a62c>
  446f70:	mov	x20, x0
  446f74:	ldp	x21, x22, [sp, #32]
  446f78:	b	446c84 <nftw@plt+0x44104>
  446f7c:	ldr	x0, [x20, #8]
  446f80:	ldr	w0, [x0, #20]
  446f84:	cmp	w0, #0x2
  446f88:	b.eq	447138 <nftw@plt+0x445b8>  // b.none
  446f8c:	b.gt	447028 <nftw@plt+0x444a8>
  446f90:	cbz	w0, 4470d0 <nftw@plt+0x44550>
  446f94:	cmp	w0, #0x1
  446f98:	b.ne	44701c <nftw@plt+0x4449c>  // b.any
  446f9c:	cbz	x21, 447390 <nftw@plt+0x44810>
  446fa0:	ldrb	w0, [x21]
  446fa4:	cmp	w0, #0x70
  446fa8:	mov	w1, #0x6d                  	// #109
  446fac:	ccmp	w0, w1, #0x4, ne  // ne = any
  446fb0:	b.ne	446fc0 <nftw@plt+0x44440>  // b.any
  446fb4:	ldrb	w1, [x21, #1]
  446fb8:	cmp	w1, w0
  446fbc:	b.eq	4470f0 <nftw@plt+0x44570>  // b.none
  446fc0:	ldr	w0, [x20]
  446fc4:	cmp	w0, #0x34
  446fc8:	b.eq	4473d0 <nftw@plt+0x44850>  // b.none
  446fcc:	mov	w22, #0x0                   	// #0
  446fd0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  446fd4:	add	x1, x1, #0x220
  446fd8:	mov	x0, x21
  446fdc:	bl	402890 <strcmp@plt>
  446fe0:	cbz	w0, 447110 <nftw@plt+0x44590>
  446fe4:	mov	x0, x19
  446fe8:	bl	446c1c <nftw@plt+0x4409c>
  446fec:	mov	x3, x0
  446ff0:	cbnz	w22, 447120 <nftw@plt+0x445a0>
  446ff4:	mov	x2, x20
  446ff8:	mov	w1, #0x37                  	// #55
  446ffc:	mov	x0, x19
  447000:	bl	43d1ac <nftw@plt+0x3a62c>
  447004:	mov	x20, x0
  447008:	ldp	x21, x22, [sp, #32]
  44700c:	b	446c84 <nftw@plt+0x44104>
  447010:	mov	x21, #0x0                   	// #0
  447014:	ldr	w0, [x20, #8]
  447018:	b	446f84 <nftw@plt+0x44404>
  44701c:	mov	x20, #0x0                   	// #0
  447020:	ldp	x21, x22, [sp, #32]
  447024:	b	446c84 <nftw@plt+0x44104>
  447028:	cmp	w0, #0x3
  44702c:	b.ne	4470c4 <nftw@plt+0x44544>  // b.any
  447030:	cbz	x21, 447354 <nftw@plt+0x447d4>
  447034:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  447038:	add	x1, x1, #0x148
  44703c:	mov	x0, x21
  447040:	bl	402890 <strcmp@plt>
  447044:	cbz	w0, 447254 <nftw@plt+0x446d4>
  447048:	ldrb	w0, [x21]
  44704c:	cmp	w0, #0x66
  447050:	b.eq	4472c0 <nftw@plt+0x44740>  // b.none
  447054:	cmp	w0, #0x6e
  447058:	b.ne	44736c <nftw@plt+0x447ec>  // b.any
  44705c:	ldrb	w0, [x21, #1]
  447060:	cmp	w0, #0x77
  447064:	mov	w1, #0x61                  	// #97
  447068:	ccmp	w0, w1, #0x4, ne  // ne = any
  44706c:	b.ne	447378 <nftw@plt+0x447f8>  // b.any
  447070:	mov	w1, #0x5f                  	// #95
  447074:	mov	x0, x19
  447078:	bl	445734 <nftw@plt+0x42bb4>
  44707c:	mov	x21, x0
  447080:	mov	x0, x19
  447084:	bl	443ce8 <nftw@plt+0x41168>
  447088:	mov	x22, x0
  44708c:	ldr	x0, [x19, #24]
  447090:	ldrb	w1, [x0]
  447094:	cmp	w1, #0x45
  447098:	b.eq	4472f4 <nftw@plt+0x44774>  // b.none
  44709c:	cmp	w1, #0x70
  4470a0:	b.eq	447304 <nftw@plt+0x44784>  // b.none
  4470a4:	cmp	w1, #0x69
  4470a8:	b.ne	447384 <nftw@plt+0x44804>  // b.any
  4470ac:	ldrb	w0, [x0, #1]
  4470b0:	cmp	w0, #0x6c
  4470b4:	b.eq	447338 <nftw@plt+0x447b8>  // b.none
  4470b8:	mov	x20, #0x0                   	// #0
  4470bc:	ldp	x21, x22, [sp, #32]
  4470c0:	b	446c84 <nftw@plt+0x44104>
  4470c4:	mov	x20, #0x0                   	// #0
  4470c8:	ldp	x21, x22, [sp, #32]
  4470cc:	b	446c84 <nftw@plt+0x44104>
  4470d0:	mov	x3, #0x0                   	// #0
  4470d4:	mov	x2, x20
  4470d8:	mov	w1, #0x36                  	// #54
  4470dc:	mov	x0, x19
  4470e0:	bl	43d1ac <nftw@plt+0x3a62c>
  4470e4:	mov	x20, x0
  4470e8:	ldp	x21, x22, [sp, #32]
  4470ec:	b	446c84 <nftw@plt+0x44104>
  4470f0:	ldr	x0, [x19, #24]
  4470f4:	ldrb	w1, [x0]
  4470f8:	mov	w22, #0x1                   	// #1
  4470fc:	cmp	w1, #0x5f
  447100:	b.ne	446fd0 <nftw@plt+0x44450>  // b.any
  447104:	add	x0, x0, #0x1
  447108:	str	x0, [x19, #24]
  44710c:	b	446fc0 <nftw@plt+0x44440>
  447110:	mov	x0, x19
  447114:	bl	446b30 <nftw@plt+0x43fb0>
  447118:	mov	x3, x0
  44711c:	b	446ff0 <nftw@plt+0x44470>
  447120:	mov	x2, x3
  447124:	mov	w1, #0x39                  	// #57
  447128:	mov	x0, x19
  44712c:	bl	43d1ac <nftw@plt+0x3a62c>
  447130:	mov	x3, x0
  447134:	b	446ff4 <nftw@plt+0x44474>
  447138:	cbz	x21, 447348 <nftw@plt+0x447c8>
  44713c:	mov	x0, x20
  447140:	bl	43d700 <nftw@plt+0x3ab80>
  447144:	cbnz	w0, 4471ec <nftw@plt+0x4466c>
  447148:	ldrb	w0, [x21]
  44714c:	cmp	w0, #0x66
  447150:	b.eq	4471fc <nftw@plt+0x4467c>  // b.none
  447154:	mov	x0, x19
  447158:	bl	446c1c <nftw@plt+0x4409c>
  44715c:	mov	x22, x0
  447160:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  447164:	add	x1, x1, #0x138
  447168:	mov	x0, x21
  44716c:	bl	402890 <strcmp@plt>
  447170:	cbz	w0, 44720c <nftw@plt+0x4468c>
  447174:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  447178:	add	x1, x1, #0x310
  44717c:	mov	x0, x21
  447180:	bl	402890 <strcmp@plt>
  447184:	cbz	w0, 44719c <nftw@plt+0x4461c>
  447188:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44718c:	add	x1, x1, #0x318
  447190:	mov	x0, x21
  447194:	bl	402890 <strcmp@plt>
  447198:	cbnz	w0, 447244 <nftw@plt+0x446c4>
  44719c:	mov	x0, x19
  4471a0:	bl	444928 <nftw@plt+0x41da8>
  4471a4:	mov	x21, x0
  4471a8:	ldr	x0, [x19, #24]
  4471ac:	ldrb	w0, [x0]
  4471b0:	cmp	w0, #0x49
  4471b4:	b.eq	447220 <nftw@plt+0x446a0>  // b.none
  4471b8:	mov	x3, x21
  4471bc:	mov	x2, x22
  4471c0:	mov	w1, #0x39                  	// #57
  4471c4:	mov	x0, x19
  4471c8:	bl	43d1ac <nftw@plt+0x3a62c>
  4471cc:	mov	x3, x0
  4471d0:	mov	x2, x20
  4471d4:	mov	w1, #0x38                  	// #56
  4471d8:	mov	x0, x19
  4471dc:	bl	43d1ac <nftw@plt+0x3a62c>
  4471e0:	mov	x20, x0
  4471e4:	ldp	x21, x22, [sp, #32]
  4471e8:	b	446c84 <nftw@plt+0x44104>
  4471ec:	mov	x0, x19
  4471f0:	bl	443ce8 <nftw@plt+0x41168>
  4471f4:	mov	x22, x0
  4471f8:	b	447160 <nftw@plt+0x445e0>
  4471fc:	mov	x0, x19
  447200:	bl	44477c <nftw@plt+0x41bfc>
  447204:	mov	x22, x0
  447208:	b	447160 <nftw@plt+0x445e0>
  44720c:	mov	w1, #0x45                  	// #69
  447210:	mov	x0, x19
  447214:	bl	445734 <nftw@plt+0x42bb4>
  447218:	mov	x21, x0
  44721c:	b	4471b8 <nftw@plt+0x44638>
  447220:	mov	x0, x19
  447224:	bl	446be0 <nftw@plt+0x44060>
  447228:	mov	x3, x0
  44722c:	mov	x2, x21
  447230:	mov	w1, #0x4                   	// #4
  447234:	mov	x0, x19
  447238:	bl	43d1ac <nftw@plt+0x3a62c>
  44723c:	mov	x21, x0
  447240:	b	4471b8 <nftw@plt+0x44638>
  447244:	mov	x0, x19
  447248:	bl	446c1c <nftw@plt+0x4409c>
  44724c:	mov	x21, x0
  447250:	b	4471b8 <nftw@plt+0x44638>
  447254:	mov	x0, x19
  447258:	bl	446c1c <nftw@plt+0x4409c>
  44725c:	mov	x21, x0
  447260:	mov	x0, x19
  447264:	bl	446c1c <nftw@plt+0x4409c>
  447268:	mov	x22, x0
  44726c:	mov	x0, x19
  447270:	bl	446c1c <nftw@plt+0x4409c>
  447274:	mov	x3, x0
  447278:	cbz	x0, 447360 <nftw@plt+0x447e0>
  44727c:	mov	x2, x22
  447280:	mov	w1, #0x3c                  	// #60
  447284:	mov	x0, x19
  447288:	bl	43d1ac <nftw@plt+0x3a62c>
  44728c:	mov	x3, x0
  447290:	mov	x2, x21
  447294:	mov	w1, #0x3b                  	// #59
  447298:	mov	x0, x19
  44729c:	bl	43d1ac <nftw@plt+0x3a62c>
  4472a0:	mov	x3, x0
  4472a4:	mov	x2, x20
  4472a8:	mov	w1, #0x3a                  	// #58
  4472ac:	mov	x0, x19
  4472b0:	bl	43d1ac <nftw@plt+0x3a62c>
  4472b4:	mov	x20, x0
  4472b8:	ldp	x21, x22, [sp, #32]
  4472bc:	b	446c84 <nftw@plt+0x44104>
  4472c0:	mov	x0, x19
  4472c4:	bl	44477c <nftw@plt+0x41bfc>
  4472c8:	mov	x21, x0
  4472cc:	mov	x0, x19
  4472d0:	bl	446c1c <nftw@plt+0x4409c>
  4472d4:	mov	x22, x0
  4472d8:	mov	x0, x19
  4472dc:	bl	446c1c <nftw@plt+0x4409c>
  4472e0:	mov	x3, x0
  4472e4:	cbnz	x0, 44727c <nftw@plt+0x446fc>
  4472e8:	mov	x20, x0
  4472ec:	ldp	x21, x22, [sp, #32]
  4472f0:	b	446c84 <nftw@plt+0x44104>
  4472f4:	add	x0, x0, #0x1
  4472f8:	str	x0, [x19, #24]
  4472fc:	mov	x3, #0x0                   	// #0
  447300:	b	44727c <nftw@plt+0x446fc>
  447304:	ldrb	w1, [x0, #1]
  447308:	cmp	w1, #0x69
  44730c:	b.eq	44731c <nftw@plt+0x4479c>  // b.none
  447310:	mov	x20, #0x0                   	// #0
  447314:	ldp	x21, x22, [sp, #32]
  447318:	b	446c84 <nftw@plt+0x44104>
  44731c:	add	x0, x0, #0x2
  447320:	str	x0, [x19, #24]
  447324:	mov	w1, #0x45                  	// #69
  447328:	mov	x0, x19
  44732c:	bl	445734 <nftw@plt+0x42bb4>
  447330:	mov	x3, x0
  447334:	b	44727c <nftw@plt+0x446fc>
  447338:	mov	x0, x19
  44733c:	bl	446c1c <nftw@plt+0x4409c>
  447340:	mov	x3, x0
  447344:	b	44727c <nftw@plt+0x446fc>
  447348:	mov	x20, x21
  44734c:	ldp	x21, x22, [sp, #32]
  447350:	b	446c84 <nftw@plt+0x44104>
  447354:	mov	x20, x21
  447358:	ldp	x21, x22, [sp, #32]
  44735c:	b	446c84 <nftw@plt+0x44104>
  447360:	mov	x20, x0
  447364:	ldp	x21, x22, [sp, #32]
  447368:	b	446c84 <nftw@plt+0x44104>
  44736c:	mov	x20, #0x0                   	// #0
  447370:	ldp	x21, x22, [sp, #32]
  447374:	b	446c84 <nftw@plt+0x44104>
  447378:	mov	x20, #0x0                   	// #0
  44737c:	ldp	x21, x22, [sp, #32]
  447380:	b	446c84 <nftw@plt+0x44104>
  447384:	mov	x20, #0x0                   	// #0
  447388:	ldp	x21, x22, [sp, #32]
  44738c:	b	446c84 <nftw@plt+0x44104>
  447390:	ldr	w0, [x20]
  447394:	mov	w22, #0x0                   	// #0
  447398:	cmp	w0, #0x34
  44739c:	b.ne	446fe4 <nftw@plt+0x44464>  // b.any
  4473a0:	ldr	x0, [x19, #24]
  4473a4:	ldrb	w1, [x0]
  4473a8:	mov	w22, #0x0                   	// #0
  4473ac:	cmp	w1, #0x5f
  4473b0:	b.ne	446fe4 <nftw@plt+0x44464>  // b.any
  4473b4:	add	x0, x0, #0x1
  4473b8:	str	x0, [x19, #24]
  4473bc:	mov	w1, #0x45                  	// #69
  4473c0:	mov	x0, x19
  4473c4:	bl	445734 <nftw@plt+0x42bb4>
  4473c8:	mov	x3, x0
  4473cc:	b	446ff4 <nftw@plt+0x44474>
  4473d0:	ldr	x0, [x19, #24]
  4473d4:	ldrb	w1, [x0]
  4473d8:	cmp	w1, #0x5f
  4473dc:	b.eq	4473b4 <nftw@plt+0x44834>  // b.none
  4473e0:	mov	w22, #0x0                   	// #0
  4473e4:	b	446fd0 <nftw@plt+0x44450>
  4473e8:	ldp	x21, x22, [sp, #32]
  4473ec:	b	446c84 <nftw@plt+0x44104>
  4473f0:	ldp	x21, x22, [sp, #32]
  4473f4:	b	446c84 <nftw@plt+0x44104>
  4473f8:	ldp	x21, x22, [sp, #32]
  4473fc:	b	446c84 <nftw@plt+0x44104>
  447400:	stp	x29, x30, [sp, #-432]!
  447404:	mov	x29, sp
  447408:	stp	x19, x20, [sp, #16]
  44740c:	stp	x21, x22, [sp, #32]
  447410:	mov	w20, w0
  447414:	mov	x21, x1
  447418:	str	xzr, [x29, #312]
  44741c:	strb	wzr, [x29, #320]
  447420:	str	xzr, [x29, #344]
  447424:	str	xzr, [x29, #352]
  447428:	str	wzr, [x29, #372]
  44742c:	str	xzr, [x29, #376]
  447430:	str	x2, [x29, #328]
  447434:	str	x3, [x29, #336]
  447438:	str	wzr, [x29, #360]
  44743c:	str	wzr, [x29, #364]
  447440:	str	wzr, [x29, #368]
  447444:	str	xzr, [x29, #384]
  447448:	str	xzr, [x29, #392]
  44744c:	str	wzr, [x29, #400]
  447450:	str	wzr, [x29, #404]
  447454:	str	xzr, [x29, #408]
  447458:	str	wzr, [x29, #416]
  44745c:	str	wzr, [x29, #420]
  447460:	add	x0, x29, #0x38
  447464:	bl	43d820 <nftw@plt+0x3aca0>
  447468:	ldr	w0, [x29, #364]
  44746c:	cmp	w0, #0x7ff
  447470:	b.gt	447478 <nftw@plt+0x448f8>
  447474:	str	wzr, [x29, #364]
  447478:	ldr	w3, [x29, #404]
  44747c:	ldr	w2, [x29, #420]
  447480:	mul	w2, w3, w2
  447484:	str	w2, [x29, #420]
  447488:	str	xzr, [x29, #424]
  44748c:	mov	x22, sp
  447490:	mov	w0, #0x1                   	// #1
  447494:	cmp	w3, #0x0
  447498:	csel	w3, w3, w0, gt
  44749c:	sub	sp, sp, w3, sxtw #4
  4474a0:	mov	x1, sp
  4474a4:	cmp	w2, #0x0
  4474a8:	csel	w2, w2, w0, gt
  4474ac:	sub	sp, sp, w2, sxtw #4
  4474b0:	str	x1, [x29, #392]
  4474b4:	mov	x0, sp
  4474b8:	str	x0, [x29, #408]
  4474bc:	add	x19, x29, #0x38
  4474c0:	mov	x2, x21
  4474c4:	mov	w1, w20
  4474c8:	mov	x0, x19
  4474cc:	bl	441f24 <nftw@plt+0x3f3a4>
  4474d0:	mov	sp, x22
  4474d4:	ldr	x1, [x29, #312]
  4474d8:	strb	wzr, [x19, x1]
  4474dc:	ldr	x2, [x29, #336]
  4474e0:	mov	x0, x19
  4474e4:	ldr	x3, [x29, #328]
  4474e8:	blr	x3
  4474ec:	ldr	w0, [x29, #360]
  4474f0:	cmp	w0, #0x0
  4474f4:	cset	w0, eq  // eq = none
  4474f8:	mov	sp, x29
  4474fc:	ldp	x19, x20, [sp, #16]
  447500:	ldp	x21, x22, [sp, #32]
  447504:	ldp	x29, x30, [sp], #432
  447508:	ret
  44750c:	stp	x29, x30, [sp, #-80]!
  447510:	mov	x29, sp
  447514:	stp	x19, x20, [sp, #16]
  447518:	stp	x21, x22, [sp, #32]
  44751c:	mov	w19, w0
  447520:	mov	x20, x1
  447524:	mov	x22, x3
  447528:	str	xzr, [sp, #48]
  44752c:	str	xzr, [sp, #56]
  447530:	str	xzr, [sp, #64]
  447534:	str	wzr, [sp, #72]
  447538:	cbnz	w2, 447580 <nftw@plt+0x44a00>
  44753c:	add	x3, sp, #0x30
  447540:	adrp	x2, 43d000 <nftw@plt+0x3a480>
  447544:	add	x2, x2, #0xb70
  447548:	mov	x1, x20
  44754c:	mov	w0, w19
  447550:	bl	447400 <nftw@plt+0x44880>
  447554:	cbz	w0, 4475c8 <nftw@plt+0x44a48>
  447558:	ldr	w0, [sp, #72]
  44755c:	cmp	w0, #0x0
  447560:	ldr	x0, [sp, #64]
  447564:	csinc	x0, x0, xzr, eq  // eq = none
  447568:	str	x0, [x22]
  44756c:	ldr	x0, [sp, #48]
  447570:	ldp	x19, x20, [sp, #16]
  447574:	ldp	x21, x22, [sp, #32]
  447578:	ldp	x29, x30, [sp], #80
  44757c:	ret
  447580:	sxtw	x0, w2
  447584:	cmp	x0, #0x2
  447588:	b.ls	4475b4 <nftw@plt+0x44a34>  // b.plast
  44758c:	mov	x21, #0x2                   	// #2
  447590:	lsl	x21, x21, #1
  447594:	cmp	x0, x21
  447598:	b.hi	447590 <nftw@plt+0x44a10>  // b.pmore
  44759c:	mov	x0, x21
  4475a0:	bl	402670 <malloc@plt>
  4475a4:	cbz	x0, 4475bc <nftw@plt+0x44a3c>
  4475a8:	str	x0, [sp, #48]
  4475ac:	str	x21, [sp, #64]
  4475b0:	b	44753c <nftw@plt+0x449bc>
  4475b4:	mov	x21, #0x2                   	// #2
  4475b8:	b	44759c <nftw@plt+0x44a1c>
  4475bc:	mov	w0, #0x1                   	// #1
  4475c0:	str	w0, [sp, #72]
  4475c4:	b	44753c <nftw@plt+0x449bc>
  4475c8:	ldr	x0, [sp, #48]
  4475cc:	bl	402910 <free@plt>
  4475d0:	str	xzr, [x22]
  4475d4:	mov	x0, #0x0                   	// #0
  4475d8:	b	447570 <nftw@plt+0x449f0>
  4475dc:	str	x0, [x3]
  4475e0:	add	x4, x0, x2
  4475e4:	str	x4, [x3, #8]
  4475e8:	str	w1, [x3, #16]
  4475ec:	str	x0, [x3, #24]
  4475f0:	lsl	w0, w2, #1
  4475f4:	str	w0, [x3, #44]
  4475f8:	str	wzr, [x3, #40]
  4475fc:	str	w2, [x3, #60]
  447600:	str	wzr, [x3, #56]
  447604:	str	xzr, [x3, #64]
  447608:	str	wzr, [x3, #72]
  44760c:	str	wzr, [x3, #76]
  447610:	str	wzr, [x3, #80]
  447614:	str	wzr, [x3, #84]
  447618:	ret
  44761c:	stp	x29, x30, [sp, #-160]!
  447620:	mov	x29, sp
  447624:	stp	x19, x20, [sp, #16]
  447628:	stp	x21, x22, [sp, #32]
  44762c:	stp	x23, x24, [sp, #48]
  447630:	mov	x20, x0
  447634:	mov	w19, w1
  447638:	mov	x21, x2
  44763c:	mov	x22, x3
  447640:	ldrb	w0, [x0]
  447644:	cmp	w0, #0x5f
  447648:	b.eq	4477a0 <nftw@plt+0x44c20>  // b.none
  44764c:	mov	x2, #0x8                   	// #8
  447650:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  447654:	add	x1, x1, #0x2c8
  447658:	mov	x0, x20
  44765c:	bl	4026a0 <strncmp@plt>
  447660:	cbnz	w0, 4476a0 <nftw@plt+0x44b20>
  447664:	ldrb	w0, [x20, #8]
  447668:	cmp	w0, #0x2e
  44766c:	mov	w1, #0x5f                  	// #95
  447670:	ccmp	w0, w1, #0x4, ne  // ne = any
  447674:	mov	w1, #0x24                  	// #36
  447678:	ccmp	w0, w1, #0x4, ne  // ne = any
  44767c:	b.ne	4476a0 <nftw@plt+0x44b20>  // b.any
  447680:	ldrb	w0, [x20, #9]
  447684:	cmp	w0, #0x44
  447688:	mov	w1, #0x49                  	// #73
  44768c:	ccmp	w0, w1, #0x4, ne  // ne = any
  447690:	b.ne	4476a0 <nftw@plt+0x44b20>  // b.any
  447694:	ldrb	w1, [x20, #10]
  447698:	cmp	w1, #0x5f
  44769c:	b.eq	4477b4 <nftw@plt+0x44c34>  // b.none
  4476a0:	and	w0, w19, #0x10
  4476a4:	mov	w23, #0x0                   	// #0
  4476a8:	tbz	w19, #4, 447808 <nftw@plt+0x44c88>
  4476ac:	mov	x0, x20
  4476b0:	bl	4024f0 <strlen@plt>
  4476b4:	add	x3, x29, #0x48
  4476b8:	mov	x2, x0
  4476bc:	mov	w1, w19
  4476c0:	mov	x0, x20
  4476c4:	bl	4475dc <nftw@plt+0x44a5c>
  4476c8:	and	w0, w19, #0x40000
  4476cc:	tbnz	w19, #18, 4476dc <nftw@plt+0x44b5c>
  4476d0:	ldr	w1, [x29, #116]
  4476d4:	cmp	w1, #0x800
  4476d8:	b.hi	447808 <nftw@plt+0x44c88>  // b.pmore
  4476dc:	mov	x20, sp
  4476e0:	ldrsw	x0, [x29, #116]
  4476e4:	add	x0, x0, x0, lsl #1
  4476e8:	lsl	x0, x0, #3
  4476ec:	add	x0, x0, #0xf
  4476f0:	and	x0, x0, #0xfffffffffffffff0
  4476f4:	sub	sp, sp, x0
  4476f8:	mov	x1, sp
  4476fc:	ldrsw	x0, [x29, #132]
  447700:	lsl	x0, x0, #3
  447704:	add	x0, x0, #0xf
  447708:	and	x0, x0, #0xfffffffffffffff0
  44770c:	sub	sp, sp, x0
  447710:	str	x1, [x29, #104]
  447714:	mov	x0, sp
  447718:	str	x0, [x29, #120]
  44771c:	cmp	w23, #0x1
  447720:	b.eq	447820 <nftw@plt+0x44ca0>  // b.none
  447724:	b.ls	4477c4 <nftw@plt+0x44c44>  // b.plast
  447728:	ldr	x0, [x29, #96]
  44772c:	add	x24, x0, #0xb
  447730:	str	x24, [x29, #96]
  447734:	cmp	w23, #0x2
  447738:	cset	w1, ne  // ne = any
  44773c:	add	w23, w1, #0x44
  447740:	ldrb	w1, [x0, #11]
  447744:	cmp	w1, #0x5f
  447748:	b.ne	447758 <nftw@plt+0x44bd8>  // b.any
  44774c:	ldrb	w1, [x0, #12]
  447750:	cmp	w1, #0x5a
  447754:	b.eq	447834 <nftw@plt+0x44cb4>  // b.none
  447758:	mov	x0, x24
  44775c:	bl	4024f0 <strlen@plt>
  447760:	mov	w2, w0
  447764:	mov	x1, x24
  447768:	add	x0, x29, #0x48
  44776c:	bl	443818 <nftw@plt+0x40c98>
  447770:	mov	x2, x0
  447774:	mov	x3, #0x0                   	// #0
  447778:	mov	w1, w23
  44777c:	add	x0, x29, #0x48
  447780:	bl	43d1ac <nftw@plt+0x3a62c>
  447784:	mov	x23, x0
  447788:	ldr	x24, [x29, #96]
  44778c:	mov	x0, x24
  447790:	bl	4024f0 <strlen@plt>
  447794:	add	x24, x24, x0
  447798:	str	x24, [x29, #96]
  44779c:	b	4477d4 <nftw@plt+0x44c54>
  4477a0:	ldrb	w0, [x20, #1]
  4477a4:	cmp	w0, #0x5a
  4477a8:	b.ne	44764c <nftw@plt+0x44acc>  // b.any
  4477ac:	mov	w23, #0x1                   	// #1
  4477b0:	b	4476ac <nftw@plt+0x44b2c>
  4477b4:	cmp	w0, #0x49
  4477b8:	cset	w23, ne  // ne = any
  4477bc:	add	w23, w23, #0x2
  4477c0:	b	4476ac <nftw@plt+0x44b2c>
  4477c4:	cbnz	w23, 447850 <nftw@plt+0x44cd0>
  4477c8:	add	x0, x29, #0x48
  4477cc:	bl	443ce8 <nftw@plt+0x41168>
  4477d0:	mov	x23, x0
  4477d4:	tbz	w19, #0, 4477e8 <nftw@plt+0x44c68>
  4477d8:	ldr	x0, [x29, #96]
  4477dc:	ldrb	w1, [x0]
  4477e0:	mov	w0, #0x0                   	// #0
  4477e4:	cbnz	w1, 447804 <nftw@plt+0x44c84>
  4477e8:	mov	w0, #0x0                   	// #0
  4477ec:	cbz	x23, 447804 <nftw@plt+0x44c84>
  4477f0:	mov	x3, x22
  4477f4:	mov	x2, x21
  4477f8:	mov	x1, x23
  4477fc:	mov	w0, w19
  447800:	bl	447400 <nftw@plt+0x44880>
  447804:	mov	sp, x20
  447808:	mov	sp, x29
  44780c:	ldp	x19, x20, [sp, #16]
  447810:	ldp	x21, x22, [sp, #32]
  447814:	ldp	x23, x24, [sp, #48]
  447818:	ldp	x29, x30, [sp], #160
  44781c:	ret
  447820:	mov	w1, #0x1                   	// #1
  447824:	add	x0, x29, #0x48
  447828:	bl	44679c <nftw@plt+0x43c1c>
  44782c:	mov	x23, x0
  447830:	b	4477d4 <nftw@plt+0x44c54>
  447834:	add	x0, x0, #0xd
  447838:	str	x0, [x29, #96]
  44783c:	mov	w1, #0x0                   	// #0
  447840:	add	x0, x29, #0x48
  447844:	bl	445fbc <nftw@plt+0x4343c>
  447848:	mov	x2, x0
  44784c:	b	447774 <nftw@plt+0x44bf4>
  447850:	bl	4027f0 <abort@plt>
  447854:	stp	x29, x30, [sp, #-64]!
  447858:	mov	x29, sp
  44785c:	str	x19, [sp, #16]
  447860:	mov	x19, x2
  447864:	str	xzr, [sp, #32]
  447868:	str	xzr, [sp, #40]
  44786c:	str	xzr, [sp, #48]
  447870:	str	wzr, [sp, #56]
  447874:	add	x3, sp, #0x20
  447878:	adrp	x2, 43d000 <nftw@plt+0x3a480>
  44787c:	add	x2, x2, #0xb70
  447880:	bl	44761c <nftw@plt+0x44a9c>
  447884:	cbz	w0, 4478ac <nftw@plt+0x44d2c>
  447888:	ldr	w0, [sp, #56]
  44788c:	cmp	w0, #0x0
  447890:	ldr	x0, [sp, #48]
  447894:	csinc	x0, x0, xzr, eq  // eq = none
  447898:	str	x0, [x19]
  44789c:	ldr	x0, [sp, #32]
  4478a0:	ldr	x19, [sp, #16]
  4478a4:	ldp	x29, x30, [sp], #64
  4478a8:	ret
  4478ac:	ldr	x0, [sp, #32]
  4478b0:	bl	402910 <free@plt>
  4478b4:	str	xzr, [x19]
  4478b8:	mov	x0, #0x0                   	// #0
  4478bc:	b	4478a0 <nftw@plt+0x44d20>
  4478c0:	stp	x29, x30, [sp, #-144]!
  4478c4:	mov	x29, sp
  4478c8:	stp	x19, x20, [sp, #16]
  4478cc:	str	x21, [sp, #32]
  4478d0:	mov	x21, x0
  4478d4:	mov	x20, x1
  4478d8:	mov	x19, x2
  4478dc:	str	wzr, [x1]
  4478e0:	str	wzr, [x2]
  4478e4:	bl	4024f0 <strlen@plt>
  4478e8:	add	x3, x29, #0x38
  4478ec:	mov	x2, x0
  4478f0:	mov	w1, #0x4000                	// #16384
  4478f4:	mov	x0, x21
  4478f8:	bl	4475dc <nftw@plt+0x44a5c>
  4478fc:	ldrsw	x0, [x29, #100]
  447900:	add	x0, x0, x0, lsl #1
  447904:	lsl	x0, x0, #3
  447908:	add	x0, x0, #0xf
  44790c:	and	x0, x0, #0xfffffffffffffff0
  447910:	sub	sp, sp, x0
  447914:	mov	x1, sp
  447918:	ldrsw	x0, [x29, #116]
  44791c:	lsl	x0, x0, #3
  447920:	add	x0, x0, #0xf
  447924:	and	x0, x0, #0xfffffffffffffff0
  447928:	sub	sp, sp, x0
  44792c:	str	x1, [x29, #88]
  447930:	mov	x0, sp
  447934:	str	x0, [x29, #104]
  447938:	mov	w1, #0x1                   	// #1
  44793c:	add	x0, x29, #0x38
  447940:	bl	44679c <nftw@plt+0x43c1c>
  447944:	cbz	x0, 4479cc <nftw@plt+0x44e4c>
  447948:	ldr	w3, [x0]
  44794c:	cmp	w3, #0x7
  447950:	b.eq	4479bc <nftw@plt+0x44e3c>  // b.none
  447954:	b.hi	447994 <nftw@plt+0x44e14>  // b.pmore
  447958:	cmp	w3, #0x2
  44795c:	b.ls	447978 <nftw@plt+0x44df8>  // b.plast
  447960:	sub	w3, w3, #0x3
  447964:	cmp	w3, #0x1
  447968:	b.hi	4479d4 <nftw@plt+0x44e54>  // b.pmore
  44796c:	ldr	x0, [x0, #8]
  447970:	cbnz	x0, 447948 <nftw@plt+0x44dc8>
  447974:	b	447980 <nftw@plt+0x44e00>
  447978:	cbnz	w3, 4479b4 <nftw@plt+0x44e34>
  44797c:	mov	w0, #0x0                   	// #0
  447980:	mov	sp, x29
  447984:	ldp	x19, x20, [sp, #16]
  447988:	ldr	x21, [sp, #32]
  44798c:	ldp	x29, x30, [sp], #144
  447990:	ret
  447994:	cmp	w3, #0x8
  447998:	b.ne	4479ac <nftw@plt+0x44e2c>  // b.any
  44799c:	ldr	w0, [x0, #8]
  4479a0:	str	w0, [x19]
  4479a4:	mov	w0, #0x1                   	// #1
  4479a8:	b	447980 <nftw@plt+0x44e00>
  4479ac:	mov	w0, #0x0                   	// #0
  4479b0:	b	447980 <nftw@plt+0x44e00>
  4479b4:	ldr	x0, [x0, #16]
  4479b8:	b	447970 <nftw@plt+0x44df0>
  4479bc:	ldr	w0, [x0, #8]
  4479c0:	str	w0, [x20]
  4479c4:	mov	w0, #0x1                   	// #1
  4479c8:	b	447980 <nftw@plt+0x44e00>
  4479cc:	mov	w0, #0x0                   	// #0
  4479d0:	b	447980 <nftw@plt+0x44e00>
  4479d4:	mov	w0, #0x0                   	// #0
  4479d8:	b	447980 <nftw@plt+0x44e00>
  4479dc:	stp	x29, x30, [sp, #-32]!
  4479e0:	mov	x29, sp
  4479e4:	add	x2, sp, #0x18
  4479e8:	bl	447854 <nftw@plt+0x44cd4>
  4479ec:	ldp	x29, x30, [sp], #32
  4479f0:	ret
  4479f4:	stp	x29, x30, [sp, #-16]!
  4479f8:	mov	x29, sp
  4479fc:	bl	44761c <nftw@plt+0x44a9c>
  447a00:	ldp	x29, x30, [sp], #16
  447a04:	ret
  447a08:	stp	x29, x30, [sp, #-32]!
  447a0c:	mov	x29, sp
  447a10:	add	x2, sp, #0x18
  447a14:	mov	w1, #0x25                  	// #37
  447a18:	bl	447854 <nftw@plt+0x44cd4>
  447a1c:	ldp	x29, x30, [sp], #32
  447a20:	ret
  447a24:	stp	x29, x30, [sp, #-16]!
  447a28:	mov	x29, sp
  447a2c:	mov	x3, x2
  447a30:	mov	x2, x1
  447a34:	mov	w1, #0x25                  	// #37
  447a38:	bl	44761c <nftw@plt+0x44a9c>
  447a3c:	ldp	x29, x30, [sp], #16
  447a40:	ret
  447a44:	stp	x29, x30, [sp, #-32]!
  447a48:	mov	x29, sp
  447a4c:	add	x2, sp, #0x18
  447a50:	add	x1, sp, #0x1c
  447a54:	bl	4478c0 <nftw@plt+0x44d40>
  447a58:	cmp	w0, #0x0
  447a5c:	ldr	w0, [sp, #28]
  447a60:	csel	w0, w0, wzr, ne  // ne = any
  447a64:	ldp	x29, x30, [sp], #32
  447a68:	ret
  447a6c:	stp	x29, x30, [sp, #-32]!
  447a70:	mov	x29, sp
  447a74:	add	x2, sp, #0x18
  447a78:	add	x1, sp, #0x1c
  447a7c:	bl	4478c0 <nftw@plt+0x44d40>
  447a80:	cmp	w0, #0x0
  447a84:	ldr	w0, [sp, #24]
  447a88:	csel	w0, w0, wzr, ne  // ne = any
  447a8c:	ldp	x29, x30, [sp], #32
  447a90:	ret
  447a94:	mov	w1, #0x2301                	// #8961
  447a98:	movk	w1, #0x6745, lsl #16
  447a9c:	str	w1, [x0]
  447aa0:	mov	w1, #0xab89                	// #43913
  447aa4:	movk	w1, #0xefcd, lsl #16
  447aa8:	str	w1, [x0, #4]
  447aac:	mov	w1, #0xdcfe                	// #56574
  447ab0:	movk	w1, #0x98ba, lsl #16
  447ab4:	str	w1, [x0, #8]
  447ab8:	mov	w1, #0x5476                	// #21622
  447abc:	movk	w1, #0x1032, lsl #16
  447ac0:	str	w1, [x0, #12]
  447ac4:	str	wzr, [x0, #20]
  447ac8:	str	wzr, [x0, #16]
  447acc:	str	wzr, [x0, #24]
  447ad0:	ret
  447ad4:	mov	x2, x0
  447ad8:	mov	x0, x1
  447adc:	ldr	w1, [x2]
  447ae0:	mov	x3, #0x0                   	// #0
  447ae4:	bfxil	x3, x1, #0, #32
  447ae8:	ldr	w1, [x2, #4]
  447aec:	bfi	x3, x1, #32, #32
  447af0:	ldr	w4, [x2, #8]
  447af4:	mov	x1, #0x0                   	// #0
  447af8:	bfxil	x1, x4, #0, #32
  447afc:	ldr	w2, [x2, #12]
  447b00:	bfi	x1, x2, #32, #32
  447b04:	str	x3, [x0]
  447b08:	str	x1, [x0, #8]
  447b0c:	ret
  447b10:	stp	x29, x30, [sp, #-96]!
  447b14:	mov	x29, sp
  447b18:	stp	x21, x22, [sp, #32]
  447b1c:	stp	x23, x24, [sp, #48]
  447b20:	stp	x25, x26, [sp, #64]
  447b24:	stp	x27, x28, [sp, #80]
  447b28:	and	x27, x1, #0xfffffffffffffffc
  447b2c:	add	x27, x0, x27
  447b30:	ldr	w26, [x2]
  447b34:	ldr	w22, [x2, #4]
  447b38:	ldr	w24, [x2, #8]
  447b3c:	ldr	w25, [x2, #12]
  447b40:	ldr	w4, [x2, #16]
  447b44:	add	w4, w4, w1
  447b48:	str	w4, [x2, #16]
  447b4c:	lsr	x5, x1, #32
  447b50:	ldr	w3, [x2, #20]
  447b54:	add	w3, w3, w5
  447b58:	cmp	x1, w4, uxtw
  447b5c:	cinc	w1, w3, hi  // hi = pmore
  447b60:	str	w1, [x2, #20]
  447b64:	cmp	x0, x27
  447b68:	b.cs	448540 <nftw@plt+0x459c0>  // b.hs, b.nlast
  447b6c:	stp	x19, x20, [sp, #16]
  447b70:	mov	w28, #0xa478                	// #42104
  447b74:	movk	w28, #0xd76a, lsl #16
  447b78:	add	w3, w26, w28
  447b7c:	mov	w1, #0xb756                	// #46934
  447b80:	movk	w1, #0xe8c7, lsl #16
  447b84:	add	w4, w25, w1
  447b88:	mov	w1, #0x70db                	// #28891
  447b8c:	movk	w1, #0x2420, lsl #16
  447b90:	add	w1, w24, w1
  447b94:	mov	w5, #0xceee                	// #52974
  447b98:	movk	w5, #0xc1bd, lsl #16
  447b9c:	add	w9, w22, w5
  447ba0:	ldr	w8, [x0]
  447ba4:	eor	w5, w24, w25
  447ba8:	and	w5, w5, w22
  447bac:	eor	w5, w5, w25
  447bb0:	add	w5, w5, w8
  447bb4:	add	w5, w5, w3
  447bb8:	ror	w5, w5, #25
  447bbc:	add	w5, w5, w22
  447bc0:	ldr	w7, [x0, #4]
  447bc4:	eor	w3, w22, w24
  447bc8:	and	w3, w3, w5
  447bcc:	eor	w3, w3, w24
  447bd0:	add	w3, w3, w7
  447bd4:	add	w3, w3, w4
  447bd8:	ror	w3, w3, #20
  447bdc:	add	w3, w5, w3
  447be0:	ldr	w6, [x0, #8]
  447be4:	eor	w4, w5, w22
  447be8:	and	w4, w4, w3
  447bec:	eor	w4, w4, w22
  447bf0:	add	w4, w4, w6
  447bf4:	add	w4, w4, w1
  447bf8:	ror	w4, w4, #15
  447bfc:	add	w4, w3, w4
  447c00:	ldr	w14, [x0, #12]
  447c04:	eor	w1, w5, w3
  447c08:	and	w1, w1, w4
  447c0c:	eor	w1, w1, w5
  447c10:	add	w1, w1, w14
  447c14:	add	w1, w1, w9
  447c18:	ror	w1, w1, #10
  447c1c:	add	w1, w4, w1
  447c20:	eor	w9, w3, w4
  447c24:	and	w9, w9, w1
  447c28:	eor	w9, w9, w3
  447c2c:	add	w5, w9, w5
  447c30:	ldr	w9, [x0, #16]
  447c34:	mov	w10, #0xfaf                 	// #4015
  447c38:	movk	w10, #0xf57c, lsl #16
  447c3c:	add	w10, w9, w10
  447c40:	add	w5, w10, w5
  447c44:	ror	w5, w5, #25
  447c48:	add	w5, w1, w5
  447c4c:	eor	w10, w4, w1
  447c50:	and	w10, w10, w5
  447c54:	eor	w10, w10, w4
  447c58:	add	w3, w10, w3
  447c5c:	ldr	w15, [x0, #20]
  447c60:	mov	w10, #0xc62a                	// #50730
  447c64:	movk	w10, #0x4787, lsl #16
  447c68:	add	w10, w15, w10
  447c6c:	add	w3, w10, w3
  447c70:	ror	w3, w3, #20
  447c74:	add	w3, w5, w3
  447c78:	eor	w10, w1, w5
  447c7c:	and	w10, w10, w3
  447c80:	eor	w10, w10, w1
  447c84:	add	w4, w10, w4
  447c88:	ldr	w11, [x0, #24]
  447c8c:	mov	w10, #0x4613                	// #17939
  447c90:	movk	w10, #0xa830, lsl #16
  447c94:	add	w10, w11, w10
  447c98:	add	w4, w10, w4
  447c9c:	ror	w4, w4, #15
  447ca0:	add	w4, w3, w4
  447ca4:	eor	w10, w5, w3
  447ca8:	and	w10, w10, w4
  447cac:	eor	w10, w10, w5
  447cb0:	add	w1, w10, w1
  447cb4:	ldr	w17, [x0, #28]
  447cb8:	mov	w10, #0x9501                	// #38145
  447cbc:	movk	w10, #0xfd46, lsl #16
  447cc0:	add	w10, w17, w10
  447cc4:	add	w1, w10, w1
  447cc8:	ror	w1, w1, #10
  447ccc:	add	w1, w4, w1
  447cd0:	eor	w23, w3, w4
  447cd4:	and	w23, w23, w1
  447cd8:	eor	w23, w23, w3
  447cdc:	add	w5, w23, w5
  447ce0:	ldr	w20, [x0, #32]
  447ce4:	mov	w10, #0x98d8                	// #39128
  447ce8:	movk	w10, #0x6980, lsl #16
  447cec:	add	w23, w20, w10
  447cf0:	add	w5, w23, w5
  447cf4:	ror	w23, w5, #25
  447cf8:	add	w23, w1, w23
  447cfc:	eor	w10, w4, w1
  447d00:	and	w10, w10, w23
  447d04:	eor	w10, w10, w4
  447d08:	add	w3, w10, w3
  447d0c:	ldr	w5, [x0, #36]
  447d10:	mov	w10, #0xf7af                	// #63407
  447d14:	movk	w10, #0x8b44, lsl #16
  447d18:	add	w10, w5, w10
  447d1c:	add	w3, w10, w3
  447d20:	ror	w10, w3, #20
  447d24:	add	w10, w23, w10
  447d28:	eor	w16, w1, w23
  447d2c:	and	w16, w16, w10
  447d30:	eor	w16, w16, w1
  447d34:	add	w4, w16, w4
  447d38:	ldr	w3, [x0, #40]
  447d3c:	sub	w16, w3, #0xa, lsl #12
  447d40:	sub	w16, w16, #0x44f
  447d44:	add	w4, w16, w4
  447d48:	ror	w16, w4, #15
  447d4c:	add	w16, w10, w16
  447d50:	eor	w12, w23, w10
  447d54:	and	w12, w12, w16
  447d58:	eor	w12, w12, w23
  447d5c:	add	w1, w12, w1
  447d60:	ldr	w13, [x0, #44]
  447d64:	mov	w4, #0xd7be                	// #55230
  447d68:	movk	w4, #0x895c, lsl #16
  447d6c:	add	w12, w13, w4
  447d70:	add	w1, w12, w1
  447d74:	ror	w12, w1, #10
  447d78:	add	w12, w16, w12
  447d7c:	eor	w1, w10, w16
  447d80:	and	w1, w1, w12
  447d84:	eor	w1, w1, w10
  447d88:	add	w23, w1, w23
  447d8c:	ldr	w4, [x0, #48]
  447d90:	mov	w1, #0x1122                	// #4386
  447d94:	movk	w1, #0x6b90, lsl #16
  447d98:	add	w1, w4, w1
  447d9c:	add	w23, w1, w23
  447da0:	ror	w1, w23, #25
  447da4:	add	w1, w12, w1
  447da8:	eor	w19, w16, w12
  447dac:	and	w19, w19, w1
  447db0:	eor	w19, w19, w16
  447db4:	add	w19, w19, w10
  447db8:	ldr	w10, [x0, #52]
  447dbc:	mov	w18, #0x7193                	// #29075
  447dc0:	movk	w18, #0xfd98, lsl #16
  447dc4:	add	w18, w10, w18
  447dc8:	add	w19, w18, w19
  447dcc:	ror	w19, w19, #20
  447dd0:	add	w19, w1, w19
  447dd4:	eor	w21, w12, w1
  447dd8:	and	w21, w21, w19
  447ddc:	eor	w21, w21, w12
  447de0:	add	w21, w21, w16
  447de4:	ldr	w16, [x0, #56]
  447de8:	mov	w18, #0x438e                	// #17294
  447dec:	movk	w18, #0xa679, lsl #16
  447df0:	add	w18, w16, w18
  447df4:	add	w21, w18, w21
  447df8:	ror	w21, w21, #15
  447dfc:	add	w21, w19, w21
  447e00:	eor	w18, w1, w19
  447e04:	and	w18, w18, w21
  447e08:	eor	w18, w18, w1
  447e0c:	add	w18, w18, w12
  447e10:	ldr	w12, [x0, #60]
  447e14:	mov	w23, #0x821                 	// #2081
  447e18:	movk	w23, #0x49b4, lsl #16
  447e1c:	add	w23, w12, w23
  447e20:	add	w18, w23, w18
  447e24:	add	x0, x0, #0x40
  447e28:	ror	w18, w18, #10
  447e2c:	add	w18, w21, w18
  447e30:	eor	w23, w21, w18
  447e34:	and	w23, w23, w19
  447e38:	eor	w23, w23, w21
  447e3c:	add	w1, w23, w1
  447e40:	mov	w23, #0x2562                	// #9570
  447e44:	movk	w23, #0xf61e, lsl #16
  447e48:	add	w23, w7, w23
  447e4c:	add	w1, w23, w1
  447e50:	ror	w1, w1, #27
  447e54:	add	w1, w18, w1
  447e58:	eor	w23, w18, w1
  447e5c:	and	w23, w23, w21
  447e60:	eor	w23, w23, w18
  447e64:	add	w19, w23, w19
  447e68:	mov	w23, #0xb340                	// #45888
  447e6c:	movk	w23, #0xc040, lsl #16
  447e70:	add	w23, w11, w23
  447e74:	add	w19, w23, w19
  447e78:	ror	w19, w19, #23
  447e7c:	add	w19, w1, w19
  447e80:	eor	w23, w1, w19
  447e84:	and	w23, w23, w18
  447e88:	eor	w23, w23, w1
  447e8c:	add	w21, w23, w21
  447e90:	mov	w23, #0x5a51                	// #23121
  447e94:	movk	w23, #0x265e, lsl #16
  447e98:	add	w23, w13, w23
  447e9c:	add	w21, w23, w21
  447ea0:	ror	w21, w21, #18
  447ea4:	add	w21, w19, w21
  447ea8:	eor	w23, w19, w21
  447eac:	and	w23, w23, w1
  447eb0:	eor	w23, w23, w19
  447eb4:	add	w18, w23, w18
  447eb8:	mov	w23, #0xc7aa                	// #51114
  447ebc:	movk	w23, #0xe9b6, lsl #16
  447ec0:	add	w23, w8, w23
  447ec4:	add	w18, w23, w18
  447ec8:	ror	w18, w18, #12
  447ecc:	add	w18, w21, w18
  447ed0:	eor	w23, w21, w18
  447ed4:	and	w23, w23, w19
  447ed8:	eor	w23, w23, w21
  447edc:	add	w1, w23, w1
  447ee0:	mov	w23, #0x105d                	// #4189
  447ee4:	movk	w23, #0xd62f, lsl #16
  447ee8:	add	w23, w15, w23
  447eec:	add	w1, w23, w1
  447ef0:	ror	w1, w1, #27
  447ef4:	add	w1, w18, w1
  447ef8:	eor	w23, w18, w1
  447efc:	and	w23, w23, w21
  447f00:	eor	w23, w23, w18
  447f04:	add	w19, w23, w19
  447f08:	mov	w23, #0x1453                	// #5203
  447f0c:	movk	w23, #0x244, lsl #16
  447f10:	add	w23, w3, w23
  447f14:	add	w19, w23, w19
  447f18:	ror	w19, w19, #23
  447f1c:	add	w19, w1, w19
  447f20:	eor	w23, w1, w19
  447f24:	and	w23, w23, w18
  447f28:	eor	w23, w23, w1
  447f2c:	add	w21, w23, w21
  447f30:	mov	w23, #0xe681                	// #59009
  447f34:	movk	w23, #0xd8a1, lsl #16
  447f38:	add	w23, w12, w23
  447f3c:	add	w21, w23, w21
  447f40:	ror	w21, w21, #18
  447f44:	add	w21, w19, w21
  447f48:	eor	w23, w19, w21
  447f4c:	and	w23, w23, w1
  447f50:	eor	w23, w23, w19
  447f54:	add	w18, w23, w18
  447f58:	mov	w23, #0xfbc8                	// #64456
  447f5c:	movk	w23, #0xe7d3, lsl #16
  447f60:	add	w23, w9, w23
  447f64:	add	w18, w23, w18
  447f68:	ror	w18, w18, #12
  447f6c:	add	w18, w21, w18
  447f70:	eor	w23, w21, w18
  447f74:	and	w23, w23, w19
  447f78:	eor	w23, w23, w21
  447f7c:	add	w1, w23, w1
  447f80:	mov	w23, #0xcde6                	// #52710
  447f84:	movk	w23, #0x21e1, lsl #16
  447f88:	add	w23, w5, w23
  447f8c:	add	w1, w23, w1
  447f90:	ror	w1, w1, #27
  447f94:	add	w1, w18, w1
  447f98:	eor	w23, w18, w1
  447f9c:	and	w23, w23, w21
  447fa0:	eor	w23, w23, w18
  447fa4:	add	w19, w23, w19
  447fa8:	mov	w23, #0x7d6                 	// #2006
  447fac:	movk	w23, #0xc337, lsl #16
  447fb0:	add	w23, w16, w23
  447fb4:	add	w19, w23, w19
  447fb8:	ror	w19, w19, #23
  447fbc:	add	w19, w1, w19
  447fc0:	eor	w23, w1, w19
  447fc4:	and	w23, w23, w18
  447fc8:	eor	w23, w23, w1
  447fcc:	add	w23, w23, w21
  447fd0:	mov	w21, #0xd87                 	// #3463
  447fd4:	movk	w21, #0xf4d5, lsl #16
  447fd8:	add	w21, w14, w21
  447fdc:	add	w21, w21, w23
  447fe0:	ror	w21, w21, #18
  447fe4:	add	w21, w19, w21
  447fe8:	eor	w23, w19, w21
  447fec:	and	w23, w23, w1
  447ff0:	eor	w23, w23, w19
  447ff4:	add	w23, w23, w18
  447ff8:	mov	w18, #0x14ed                	// #5357
  447ffc:	movk	w18, #0x455a, lsl #16
  448000:	add	w18, w20, w18
  448004:	add	w18, w18, w23
  448008:	ror	w18, w18, #12
  44800c:	add	w18, w21, w18
  448010:	eor	w23, w21, w18
  448014:	and	w23, w23, w19
  448018:	eor	w23, w23, w21
  44801c:	add	w23, w23, w1
  448020:	mov	w1, #0xe905                	// #59653
  448024:	movk	w1, #0xa9e3, lsl #16
  448028:	add	w1, w10, w1
  44802c:	add	w1, w1, w23
  448030:	ror	w1, w1, #27
  448034:	add	w1, w18, w1
  448038:	eor	w23, w18, w1
  44803c:	and	w23, w23, w21
  448040:	eor	w23, w23, w18
  448044:	add	w23, w23, w19
  448048:	mov	w19, #0xa3f8                	// #41976
  44804c:	movk	w19, #0xfcef, lsl #16
  448050:	add	w19, w6, w19
  448054:	add	w19, w19, w23
  448058:	ror	w19, w19, #23
  44805c:	add	w19, w1, w19
  448060:	eor	w23, w1, w19
  448064:	and	w23, w23, w18
  448068:	eor	w23, w23, w1
  44806c:	add	w21, w23, w21
  448070:	mov	w23, #0x2d9                 	// #729
  448074:	movk	w23, #0x676f, lsl #16
  448078:	add	w23, w17, w23
  44807c:	add	w23, w23, w21
  448080:	ror	w23, w23, #18
  448084:	add	w23, w19, w23
  448088:	eor	w30, w19, w23
  44808c:	and	w21, w30, w1
  448090:	eor	w21, w21, w19
  448094:	add	w21, w21, w18
  448098:	mov	w18, #0x4c8a                	// #19594
  44809c:	movk	w18, #0x8d2a, lsl #16
  4480a0:	add	w18, w4, w18
  4480a4:	add	w18, w18, w21
  4480a8:	ror	w18, w18, #12
  4480ac:	add	w18, w23, w18
  4480b0:	eor	w30, w30, w18
  4480b4:	add	w1, w30, w1
  4480b8:	sub	w30, w15, #0x5c, lsl #12
  4480bc:	sub	w30, w30, #0x6be
  4480c0:	add	w1, w30, w1
  4480c4:	ror	w1, w1, #28
  4480c8:	add	w1, w18, w1
  4480cc:	eor	w21, w23, w18
  4480d0:	eor	w21, w21, w1
  4480d4:	add	w21, w21, w19
  4480d8:	mov	w19, #0xf681                	// #63105
  4480dc:	movk	w19, #0x8771, lsl #16
  4480e0:	add	w19, w20, w19
  4480e4:	add	w19, w19, w21
  4480e8:	ror	w19, w19, #21
  4480ec:	add	w19, w1, w19
  4480f0:	eor	w21, w18, w1
  4480f4:	eor	w21, w21, w19
  4480f8:	add	w21, w21, w23
  4480fc:	mov	w23, #0x6122                	// #24866
  448100:	movk	w23, #0x6d9d, lsl #16
  448104:	add	w23, w13, w23
  448108:	add	w23, w23, w21
  44810c:	ror	w23, w23, #16
  448110:	add	w23, w19, w23
  448114:	eor	w21, w1, w19
  448118:	eor	w21, w21, w23
  44811c:	add	w18, w21, w18
  448120:	mov	w21, #0x380c                	// #14348
  448124:	movk	w21, #0xfde5, lsl #16
  448128:	add	w21, w16, w21
  44812c:	add	w21, w21, w18
  448130:	ror	w21, w21, #9
  448134:	add	w21, w23, w21
  448138:	eor	w18, w19, w23
  44813c:	eor	w18, w18, w21
  448140:	add	w18, w18, w1
  448144:	mov	w1, #0xea44                	// #59972
  448148:	movk	w1, #0xa4be, lsl #16
  44814c:	add	w1, w7, w1
  448150:	add	w1, w1, w18
  448154:	ror	w1, w1, #28
  448158:	add	w1, w21, w1
  44815c:	eor	w18, w23, w21
  448160:	eor	w18, w18, w1
  448164:	add	w18, w18, w19
  448168:	mov	w19, #0xcfa9                	// #53161
  44816c:	movk	w19, #0x4bde, lsl #16
  448170:	add	w19, w9, w19
  448174:	add	w19, w19, w18
  448178:	ror	w19, w19, #21
  44817c:	add	w19, w1, w19
  448180:	eor	w18, w21, w1
  448184:	eor	w18, w18, w19
  448188:	add	w23, w18, w23
  44818c:	mov	w18, #0x4b60                	// #19296
  448190:	movk	w18, #0xf6bb, lsl #16
  448194:	add	w18, w17, w18
  448198:	add	w18, w18, w23
  44819c:	ror	w18, w18, #16
  4481a0:	add	w18, w19, w18
  4481a4:	eor	w23, w1, w19
  4481a8:	eor	w23, w23, w18
  4481ac:	add	w23, w23, w21
  4481b0:	mov	w21, #0xbc70                	// #48240
  4481b4:	movk	w21, #0xbebf, lsl #16
  4481b8:	add	w21, w3, w21
  4481bc:	add	w21, w21, w23
  4481c0:	ror	w21, w21, #9
  4481c4:	add	w21, w18, w21
  4481c8:	eor	w23, w19, w18
  4481cc:	eor	w23, w23, w21
  4481d0:	add	w23, w23, w1
  4481d4:	mov	w1, #0x7ec6                	// #32454
  4481d8:	movk	w1, #0x289b, lsl #16
  4481dc:	add	w1, w10, w1
  4481e0:	add	w1, w1, w23
  4481e4:	ror	w1, w1, #28
  4481e8:	add	w1, w21, w1
  4481ec:	eor	w23, w18, w21
  4481f0:	eor	w23, w23, w1
  4481f4:	add	w23, w23, w19
  4481f8:	mov	w19, #0x27fa                	// #10234
  4481fc:	movk	w19, #0xeaa1, lsl #16
  448200:	add	w19, w8, w19
  448204:	add	w19, w19, w23
  448208:	ror	w19, w19, #21
  44820c:	add	w19, w1, w19
  448210:	eor	w23, w21, w1
  448214:	eor	w23, w23, w19
  448218:	add	w23, w23, w18
  44821c:	mov	w18, #0x3085                	// #12421
  448220:	movk	w18, #0xd4ef, lsl #16
  448224:	add	w18, w14, w18
  448228:	add	w18, w18, w23
  44822c:	ror	w18, w18, #16
  448230:	add	w18, w19, w18
  448234:	eor	w23, w1, w19
  448238:	eor	w23, w23, w18
  44823c:	add	w23, w23, w21
  448240:	mov	w21, #0x1d05                	// #7429
  448244:	movk	w21, #0x488, lsl #16
  448248:	add	w21, w11, w21
  44824c:	add	w21, w21, w23
  448250:	ror	w21, w21, #9
  448254:	add	w21, w18, w21
  448258:	eor	w23, w19, w18
  44825c:	eor	w23, w23, w21
  448260:	add	w23, w23, w1
  448264:	mov	w1, #0xd039                	// #53305
  448268:	movk	w1, #0xd9d4, lsl #16
  44826c:	add	w1, w5, w1
  448270:	add	w1, w1, w23
  448274:	ror	w1, w1, #28
  448278:	add	w1, w21, w1
  44827c:	eor	w23, w18, w21
  448280:	eor	w23, w23, w1
  448284:	add	w23, w23, w19
  448288:	mov	w19, #0x99e5                	// #39397
  44828c:	movk	w19, #0xe6db, lsl #16
  448290:	add	w19, w4, w19
  448294:	add	w19, w19, w23
  448298:	ror	w19, w19, #21
  44829c:	add	w19, w1, w19
  4482a0:	eor	w23, w21, w1
  4482a4:	eor	w23, w23, w19
  4482a8:	add	w23, w23, w18
  4482ac:	mov	w18, #0x7cf8                	// #31992
  4482b0:	movk	w18, #0x1fa2, lsl #16
  4482b4:	add	w18, w12, w18
  4482b8:	add	w18, w18, w23
  4482bc:	ror	w18, w18, #16
  4482c0:	add	w18, w19, w18
  4482c4:	eor	w23, w1, w19
  4482c8:	eor	w23, w23, w18
  4482cc:	add	w23, w23, w21
  4482d0:	mov	w21, #0x5665                	// #22117
  4482d4:	movk	w21, #0xc4ac, lsl #16
  4482d8:	add	w21, w6, w21
  4482dc:	add	w21, w21, w23
  4482e0:	ror	w21, w21, #9
  4482e4:	add	w21, w18, w21
  4482e8:	orn	w23, w21, w19
  4482ec:	eor	w23, w23, w18
  4482f0:	add	w1, w23, w1
  4482f4:	mov	w23, #0x2244                	// #8772
  4482f8:	movk	w23, #0xf429, lsl #16
  4482fc:	add	w8, w8, w23
  448300:	add	w8, w8, w1
  448304:	ror	w8, w8, #26
  448308:	add	w8, w21, w8
  44830c:	orn	w1, w8, w18
  448310:	eor	w1, w1, w21
  448314:	add	w1, w1, w19
  448318:	mov	w19, #0xff97                	// #65431
  44831c:	movk	w19, #0x432a, lsl #16
  448320:	add	w19, w17, w19
  448324:	add	w19, w19, w1
  448328:	ror	w19, w19, #22
  44832c:	add	w19, w8, w19
  448330:	orn	w1, w19, w21
  448334:	eor	w1, w1, w8
  448338:	add	w1, w1, w18
  44833c:	mov	w18, #0x23a7                	// #9127
  448340:	movk	w18, #0xab94, lsl #16
  448344:	add	w18, w16, w18
  448348:	add	w18, w18, w1
  44834c:	ror	w18, w18, #17
  448350:	add	w18, w19, w18
  448354:	orn	w17, w18, w8
  448358:	eor	w17, w17, w19
  44835c:	add	w21, w17, w21
  448360:	mov	w17, #0xa039                	// #41017
  448364:	movk	w17, #0xfc93, lsl #16
  448368:	add	w17, w15, w17
  44836c:	add	w17, w17, w21
  448370:	ror	w17, w17, #11
  448374:	add	w17, w18, w17
  448378:	orn	w1, w17, w19
  44837c:	eor	w1, w1, w18
  448380:	add	w8, w1, w8
  448384:	mov	w1, #0x59c3                	// #22979
  448388:	movk	w1, #0x655b, lsl #16
  44838c:	add	w1, w4, w1
  448390:	add	w1, w1, w8
  448394:	ror	w1, w1, #26
  448398:	add	w1, w17, w1
  44839c:	orn	w16, w1, w18
  4483a0:	eor	w16, w16, w17
  4483a4:	add	w19, w16, w19
  4483a8:	mov	w16, #0xcc92                	// #52370
  4483ac:	movk	w16, #0x8f0c, lsl #16
  4483b0:	add	w16, w14, w16
  4483b4:	add	w16, w16, w19
  4483b8:	ror	w16, w16, #22
  4483bc:	add	w16, w1, w16
  4483c0:	orn	w15, w16, w17
  4483c4:	eor	w15, w15, w1
  4483c8:	add	w18, w15, w18
  4483cc:	sub	w15, w3, #0x100, lsl #12
  4483d0:	sub	w15, w15, #0xb83
  4483d4:	add	w15, w15, w18
  4483d8:	ror	w15, w15, #17
  4483dc:	add	w15, w16, w15
  4483e0:	orn	w14, w15, w1
  4483e4:	eor	w14, w14, w16
  4483e8:	add	w17, w14, w17
  4483ec:	mov	w14, #0x5dd1                	// #24017
  4483f0:	movk	w14, #0x8584, lsl #16
  4483f4:	add	w14, w7, w14
  4483f8:	add	w14, w14, w17
  4483fc:	ror	w14, w14, #11
  448400:	add	w14, w15, w14
  448404:	orn	w8, w14, w16
  448408:	eor	w8, w8, w15
  44840c:	add	w1, w8, w1
  448410:	mov	w8, #0x7e4f                	// #32335
  448414:	movk	w8, #0x6fa8, lsl #16
  448418:	add	w8, w20, w8
  44841c:	add	w8, w8, w1
  448420:	ror	w8, w8, #26
  448424:	add	w8, w14, w8
  448428:	orn	w4, w8, w15
  44842c:	eor	w4, w4, w14
  448430:	add	w16, w4, w16
  448434:	mov	w4, #0xe6e0                	// #59104
  448438:	movk	w4, #0xfe2c, lsl #16
  44843c:	add	w4, w12, w4
  448440:	add	w4, w4, w16
  448444:	ror	w4, w4, #22
  448448:	add	w4, w8, w4
  44844c:	orn	w3, w4, w14
  448450:	eor	w3, w3, w8
  448454:	add	w15, w3, w15
  448458:	mov	w3, #0x4314                	// #17172
  44845c:	movk	w3, #0xa301, lsl #16
  448460:	add	w3, w11, w3
  448464:	add	w3, w3, w15
  448468:	ror	w3, w3, #17
  44846c:	add	w3, w4, w3
  448470:	orn	w7, w3, w8
  448474:	eor	w7, w7, w4
  448478:	add	w14, w7, w14
  44847c:	mov	w7, #0x11a1                	// #4513
  448480:	movk	w7, #0x4e08, lsl #16
  448484:	add	w7, w10, w7
  448488:	add	w7, w7, w14
  44848c:	ror	w7, w7, #11
  448490:	add	w7, w3, w7
  448494:	orn	w1, w7, w4
  448498:	eor	w1, w1, w3
  44849c:	add	w8, w1, w8
  4484a0:	mov	w1, #0x7e82                	// #32386
  4484a4:	movk	w1, #0xf753, lsl #16
  4484a8:	add	w1, w9, w1
  4484ac:	add	w1, w1, w8
  4484b0:	ror	w1, w1, #26
  4484b4:	add	w1, w7, w1
  4484b8:	orn	w8, w1, w3
  4484bc:	eor	w8, w8, w7
  4484c0:	add	w8, w8, w4
  4484c4:	mov	w4, #0xf235                	// #62005
  4484c8:	movk	w4, #0xbd3a, lsl #16
  4484cc:	add	w4, w13, w4
  4484d0:	add	w4, w4, w8
  4484d4:	ror	w4, w4, #22
  4484d8:	add	w4, w1, w4
  4484dc:	orn	w8, w4, w7
  4484e0:	eor	w8, w8, w1
  4484e4:	add	w8, w8, w3
  4484e8:	mov	w3, #0xd2bb                	// #53947
  4484ec:	movk	w3, #0x2ad7, lsl #16
  4484f0:	add	w3, w6, w3
  4484f4:	add	w3, w3, w8
  4484f8:	ror	w3, w3, #17
  4484fc:	add	w3, w4, w3
  448500:	orn	w6, w3, w1
  448504:	eor	w6, w6, w4
  448508:	add	w7, w6, w7
  44850c:	mov	w6, #0xd391                	// #54161
  448510:	movk	w6, #0xeb86, lsl #16
  448514:	add	w5, w5, w6
  448518:	add	w5, w5, w7
  44851c:	ror	w5, w5, #11
  448520:	add	w5, w3, w5
  448524:	add	w26, w26, w1
  448528:	add	w22, w22, w5
  44852c:	add	w24, w24, w3
  448530:	add	w25, w25, w4
  448534:	cmp	x27, x0
  448538:	b.hi	447b78 <nftw@plt+0x44ff8>  // b.pmore
  44853c:	ldp	x19, x20, [sp, #16]
  448540:	str	w26, [x2]
  448544:	str	w22, [x2, #4]
  448548:	str	w24, [x2, #8]
  44854c:	str	w25, [x2, #12]
  448550:	ldp	x21, x22, [sp, #32]
  448554:	ldp	x23, x24, [sp, #48]
  448558:	ldp	x25, x26, [sp, #64]
  44855c:	ldp	x27, x28, [sp, #80]
  448560:	ldp	x29, x30, [sp], #96
  448564:	ret
  448568:	stp	x29, x30, [sp, #-48]!
  44856c:	mov	x29, sp
  448570:	stp	x19, x20, [sp, #16]
  448574:	stp	x21, x22, [sp, #32]
  448578:	mov	x19, x0
  44857c:	mov	x22, x1
  448580:	ldr	w0, [x0, #24]
  448584:	ldr	w2, [x19, #16]
  448588:	add	w2, w0, w2
  44858c:	str	w2, [x19, #16]
  448590:	cmp	w2, w0
  448594:	b.cs	4485a4 <nftw@plt+0x45a24>  // b.hs, b.nlast
  448598:	ldr	w1, [x19, #20]
  44859c:	add	w1, w1, #0x1
  4485a0:	str	w1, [x19, #20]
  4485a4:	mov	w20, #0x78                  	// #120
  4485a8:	sub	w1, w20, w0
  4485ac:	mov	w20, #0x38                  	// #56
  4485b0:	sub	w20, w20, w0
  4485b4:	cmp	w0, #0x38
  4485b8:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  4485bc:	mov	w21, w0
  4485c0:	add	x0, x21, #0x1c
  4485c4:	mov	x2, x20
  4485c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4485cc:	add	x1, x1, #0x8a8
  4485d0:	add	x0, x19, x0
  4485d4:	bl	402490 <memcpy@plt>
  4485d8:	ldr	w2, [x19, #16]
  4485dc:	add	x20, x20, x21
  4485e0:	add	x1, x19, x20
  4485e4:	lsl	w0, w2, #3
  4485e8:	str	w0, [x1, #28]
  4485ec:	ldr	w0, [x19, #20]
  4485f0:	extr	w0, w0, w2, #29
  4485f4:	str	w0, [x1, #32]
  4485f8:	mov	x2, x19
  4485fc:	add	x1, x20, #0x8
  448600:	add	x0, x19, #0x1c
  448604:	bl	447b10 <nftw@plt+0x44f90>
  448608:	mov	x1, x22
  44860c:	mov	x0, x19
  448610:	bl	447ad4 <nftw@plt+0x44f54>
  448614:	ldp	x19, x20, [sp, #16]
  448618:	ldp	x21, x22, [sp, #32]
  44861c:	ldp	x29, x30, [sp], #48
  448620:	ret
  448624:	stp	x29, x30, [sp, #-80]!
  448628:	mov	x29, sp
  44862c:	stp	x19, x20, [sp, #16]
  448630:	stp	x21, x22, [sp, #32]
  448634:	stp	x23, x24, [sp, #48]
  448638:	mov	x19, x0
  44863c:	mov	x22, x1
  448640:	mov	x21, x2
  448644:	ldr	w24, [x2, #24]
  448648:	cbnz	w24, 4486dc <nftw@plt+0x45b5c>
  44864c:	cmp	x22, #0x40
  448650:	b.ls	4486c4 <nftw@plt+0x45b44>  // b.plast
  448654:	tst	x19, #0x3
  448658:	b.eq	44876c <nftw@plt+0x45bec>  // b.none
  44865c:	stp	x25, x26, [sp, #64]
  448660:	sub	x25, x22, #0x41
  448664:	lsr	x25, x25, #6
  448668:	add	x23, x25, #0x1
  44866c:	add	x23, x19, x23, lsl #6
  448670:	add	x20, x21, #0x1c
  448674:	mov	x24, #0x40                  	// #64
  448678:	ldp	x0, x1, [x19]
  44867c:	stp	x0, x1, [x20]
  448680:	ldp	x0, x1, [x19, #16]
  448684:	stp	x0, x1, [x20, #16]
  448688:	ldp	x0, x1, [x19, #32]
  44868c:	stp	x0, x1, [x20, #32]
  448690:	ldp	x0, x1, [x19, #48]
  448694:	stp	x0, x1, [x20, #48]
  448698:	mov	x2, x21
  44869c:	mov	x1, x24
  4486a0:	mov	x0, x20
  4486a4:	bl	447b10 <nftw@plt+0x44f90>
  4486a8:	add	x19, x19, #0x40
  4486ac:	cmp	x19, x23
  4486b0:	b.ne	448678 <nftw@plt+0x45af8>  // b.any
  4486b4:	sub	x22, x22, #0x40
  4486b8:	sub	x22, x22, x25, lsl #6
  4486bc:	mov	x19, x23
  4486c0:	ldp	x25, x26, [sp, #64]
  4486c4:	cbnz	x22, 44878c <nftw@plt+0x45c0c>
  4486c8:	ldp	x19, x20, [sp, #16]
  4486cc:	ldp	x21, x22, [sp, #32]
  4486d0:	ldp	x23, x24, [sp, #48]
  4486d4:	ldp	x29, x30, [sp], #80
  4486d8:	ret
  4486dc:	mov	w23, w24
  4486e0:	mov	x20, #0x80                  	// #128
  4486e4:	sub	x20, x20, x23
  4486e8:	cmp	x20, x1
  4486ec:	csel	x20, x20, x1, ls  // ls = plast
  4486f0:	add	x0, x23, #0x1c
  4486f4:	mov	x2, x20
  4486f8:	mov	x1, x19
  4486fc:	add	x0, x21, x0
  448700:	bl	402490 <memcpy@plt>
  448704:	ldr	w0, [x21, #24]
  448708:	add	w0, w0, w20
  44870c:	str	w0, [x21, #24]
  448710:	add	x23, x23, x20
  448714:	cmp	x23, #0x40
  448718:	b.hi	448728 <nftw@plt+0x45ba8>  // b.pmore
  44871c:	add	x19, x19, x20
  448720:	sub	x22, x22, x20
  448724:	b	44864c <nftw@plt+0x45acc>
  448728:	stp	x25, x26, [sp, #64]
  44872c:	add	x25, x21, #0x1c
  448730:	and	x26, x23, #0xffffffffffffffc0
  448734:	mov	x2, x21
  448738:	mov	x1, x26
  44873c:	mov	x0, x25
  448740:	bl	447b10 <nftw@plt+0x44f90>
  448744:	add	x1, x26, #0x1c
  448748:	and	x2, x23, #0x3f
  44874c:	add	x1, x21, x1
  448750:	mov	x0, x25
  448754:	bl	402490 <memcpy@plt>
  448758:	add	w0, w24, w20
  44875c:	and	w0, w0, #0x3f
  448760:	str	w0, [x21, #24]
  448764:	ldp	x25, x26, [sp, #64]
  448768:	b	44871c <nftw@plt+0x45b9c>
  44876c:	and	x20, x22, #0xffffffffffffffc0
  448770:	mov	x2, x21
  448774:	mov	x1, x20
  448778:	mov	x0, x19
  44877c:	bl	447b10 <nftw@plt+0x44f90>
  448780:	add	x19, x19, x20
  448784:	and	x22, x22, #0x3f
  448788:	b	4486c4 <nftw@plt+0x45b44>
  44878c:	mov	x2, x22
  448790:	mov	x1, x19
  448794:	add	x0, x21, #0x1c
  448798:	bl	402490 <memcpy@plt>
  44879c:	str	w22, [x21, #24]
  4487a0:	b	4486c8 <nftw@plt+0x45b48>
  4487a4:	stp	x29, x30, [sp, #-208]!
  4487a8:	mov	x29, sp
  4487ac:	stp	x19, x20, [sp, #16]
  4487b0:	str	x21, [sp, #32]
  4487b4:	mov	x20, x0
  4487b8:	mov	x21, x1
  4487bc:	mov	x19, x2
  4487c0:	add	x0, sp, #0x30
  4487c4:	bl	447a94 <nftw@plt+0x44f14>
  4487c8:	add	x2, sp, #0x30
  4487cc:	mov	x1, x21
  4487d0:	mov	x0, x20
  4487d4:	bl	448624 <nftw@plt+0x45aa4>
  4487d8:	mov	x1, x19
  4487dc:	add	x0, sp, #0x30
  4487e0:	bl	448568 <nftw@plt+0x459e8>
  4487e4:	ldp	x19, x20, [sp, #16]
  4487e8:	ldr	x21, [sp, #32]
  4487ec:	ldp	x29, x30, [sp], #208
  4487f0:	ret
  4487f4:	mov	x12, #0x1130                	// #4400
  4487f8:	sub	sp, sp, x12
  4487fc:	stp	x29, x30, [sp]
  448800:	mov	x29, sp
  448804:	stp	x19, x20, [sp, #16]
  448808:	stp	x21, x22, [sp, #32]
  44880c:	str	x23, [sp, #48]
  448810:	mov	x21, x0
  448814:	mov	x23, x1
  448818:	add	x0, sp, #0x1, lsl #12
  44881c:	add	x0, x0, #0x90
  448820:	bl	447a94 <nftw@plt+0x44f14>
  448824:	mov	x20, #0x1000                	// #4096
  448828:	mov	x22, #0x1                   	// #1
  44882c:	b	448864 <nftw@plt+0x45ce4>
  448830:	add	x2, sp, #0x1, lsl #12
  448834:	add	x2, x2, #0x90
  448838:	mov	x1, x19
  44883c:	add	x0, sp, #0x48
  448840:	bl	448624 <nftw@plt+0x45aa4>
  448844:	b	4488a8 <nftw@plt+0x45d28>
  448848:	mov	w20, #0x1                   	// #1
  44884c:	b	4488b8 <nftw@plt+0x45d38>
  448850:	add	x2, sp, #0x1, lsl #12
  448854:	add	x2, x2, #0x90
  448858:	mov	x1, x20
  44885c:	add	x0, sp, #0x48
  448860:	bl	447b10 <nftw@plt+0x44f90>
  448864:	mov	x19, #0x0                   	// #0
  448868:	mov	x3, x21
  44886c:	sub	x2, x20, x19
  448870:	mov	x1, x22
  448874:	add	x0, sp, #0x48
  448878:	add	x0, x0, x19
  44887c:	bl	4028d0 <fread@plt>
  448880:	add	x19, x19, x0
  448884:	cmp	x19, #0xfff
  448888:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  44888c:	b.ne	448868 <nftw@plt+0x45ce8>  // b.any
  448890:	cbnz	x0, 448850 <nftw@plt+0x45cd0>
  448894:	mov	x0, x21
  448898:	bl	402b70 <ferror@plt>
  44889c:	mov	w20, w0
  4488a0:	cbnz	w0, 448848 <nftw@plt+0x45cc8>
  4488a4:	cbnz	x19, 448830 <nftw@plt+0x45cb0>
  4488a8:	mov	x1, x23
  4488ac:	add	x0, sp, #0x1, lsl #12
  4488b0:	add	x0, x0, #0x90
  4488b4:	bl	448568 <nftw@plt+0x459e8>
  4488b8:	mov	w0, w20
  4488bc:	ldp	x19, x20, [sp, #16]
  4488c0:	ldp	x21, x22, [sp, #32]
  4488c4:	ldr	x23, [sp, #48]
  4488c8:	ldp	x29, x30, [sp]
  4488cc:	mov	x12, #0x1130                	// #4400
  4488d0:	add	sp, sp, x12
  4488d4:	ret
  4488d8:	stp	x29, x30, [sp, #-48]!
  4488dc:	mov	x29, sp
  4488e0:	stp	x19, x20, [sp, #16]
  4488e4:	str	x21, [sp, #32]
  4488e8:	mov	x20, x0
  4488ec:	cbz	x0, 448968 <nftw@plt+0x45de8>
  4488f0:	ldr	x0, [x0]
  4488f4:	cbz	x0, 448958 <nftw@plt+0x45dd8>
  4488f8:	mov	x1, #0x1                   	// #1
  4488fc:	sub	x3, x20, #0x8
  448900:	mov	w0, w1
  448904:	add	x1, x1, #0x1
  448908:	ldr	x2, [x3, x1, lsl #3]
  44890c:	cbnz	x2, 448900 <nftw@plt+0x45d80>
  448910:	add	w0, w0, #0x1
  448914:	sbfiz	x0, x0, #3, #32
  448918:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  44891c:	mov	x21, x0
  448920:	ldr	x0, [x20]
  448924:	cbz	x0, 448960 <nftw@plt+0x45de0>
  448928:	mov	x19, #0x0                   	// #0
  44892c:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  448930:	str	x0, [x21, x19]
  448934:	add	x19, x19, #0x8
  448938:	ldr	x0, [x20, x19]
  44893c:	cbnz	x0, 44892c <nftw@plt+0x45dac>
  448940:	str	xzr, [x21, x19]
  448944:	mov	x0, x21
  448948:	ldp	x19, x20, [sp, #16]
  44894c:	ldr	x21, [sp, #32]
  448950:	ldp	x29, x30, [sp], #48
  448954:	ret
  448958:	mov	w0, #0x0                   	// #0
  44895c:	b	448910 <nftw@plt+0x45d90>
  448960:	mov	x19, #0x0                   	// #0
  448964:	b	448940 <nftw@plt+0x45dc0>
  448968:	mov	x21, x0
  44896c:	b	448944 <nftw@plt+0x45dc4>
  448970:	cbz	x0, 4489b0 <nftw@plt+0x45e30>
  448974:	stp	x29, x30, [sp, #-32]!
  448978:	mov	x29, sp
  44897c:	stp	x19, x20, [sp, #16]
  448980:	mov	x20, x0
  448984:	ldr	x0, [x0]
  448988:	cbz	x0, 44899c <nftw@plt+0x45e1c>
  44898c:	mov	x19, x20
  448990:	bl	402910 <free@plt>
  448994:	ldr	x0, [x19, #8]!
  448998:	cbnz	x0, 448990 <nftw@plt+0x45e10>
  44899c:	mov	x0, x20
  4489a0:	bl	402910 <free@plt>
  4489a4:	ldp	x19, x20, [sp, #16]
  4489a8:	ldp	x29, x30, [sp], #32
  4489ac:	ret
  4489b0:	ret
  4489b4:	stp	x29, x30, [sp, #-112]!
  4489b8:	mov	x29, sp
  4489bc:	stp	x19, x20, [sp, #16]
  4489c0:	stp	x23, x24, [sp, #48]
  4489c4:	mov	x19, x0
  4489c8:	mov	x24, x0
  4489cc:	cbz	x0, 448b98 <nftw@plt+0x46018>
  4489d0:	stp	x21, x22, [sp, #32]
  4489d4:	stp	x25, x26, [sp, #64]
  4489d8:	stp	x27, x28, [sp, #80]
  4489dc:	bl	4024f0 <strlen@plt>
  4489e0:	add	x0, x0, #0x1
  4489e4:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  4489e8:	str	x0, [sp, #104]
  4489ec:	mov	x25, #0x0                   	// #0
  4489f0:	mov	x24, #0x0                   	// #0
  4489f4:	mov	w26, #0x0                   	// #0
  4489f8:	mov	w27, #0x0                   	// #0
  4489fc:	mov	w21, #0x0                   	// #0
  448a00:	mov	w23, #0x0                   	// #0
  448a04:	mov	w22, #0x0                   	// #0
  448a08:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  448a0c:	add	x20, x20, #0xe68
  448a10:	mov	x28, x0
  448a14:	b	448a98 <nftw@plt+0x45f18>
  448a18:	mov	x0, #0x40                  	// #64
  448a1c:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  448a20:	mov	x24, x0
  448a24:	mov	w26, #0x8                   	// #8
  448a28:	b	448ad8 <nftw@plt+0x45f58>
  448a2c:	cbz	w21, 448af0 <nftw@plt+0x45f70>
  448a30:	strb	w0, [x1], #1
  448a34:	mov	w21, w3
  448a38:	ldrb	w0, [x19, #1]!
  448a3c:	cbz	w0, 448a60 <nftw@plt+0x45ee0>
  448a40:	ldrh	w2, [x20, w0, sxtw #1]
  448a44:	tbz	w2, #6, 448a2c <nftw@plt+0x45eac>
  448a48:	orr	w2, w22, w23
  448a4c:	orr	w2, w2, w21
  448a50:	cbnz	w2, 448a2c <nftw@plt+0x45eac>
  448a54:	mov	w21, w2
  448a58:	mov	w23, w2
  448a5c:	mov	w22, w2
  448a60:	strb	wzr, [x1]
  448a64:	mov	x0, x28
  448a68:	bl	44a838 <_obstack_memory_used@@Base+0x234>
  448a6c:	str	x0, [x24, x25]
  448a70:	add	w27, w27, #0x1
  448a74:	add	x25, x25, #0x8
  448a78:	str	xzr, [x24, x25]
  448a7c:	ldrb	w0, [x19]
  448a80:	ldrh	w1, [x20, w0, sxtw #1]
  448a84:	tbz	w1, #6, 448a94 <nftw@plt+0x45f14>
  448a88:	ldrb	w0, [x19, #1]!
  448a8c:	ldrh	w1, [x20, w0, sxtw #1]
  448a90:	tbnz	w1, #6, 448a88 <nftw@plt+0x45f08>
  448a94:	cbz	w0, 448b84 <nftw@plt+0x46004>
  448a98:	ldrb	w0, [x19]
  448a9c:	ldrh	w0, [x20, x0, lsl #1]
  448aa0:	tbz	w0, #6, 448ab0 <nftw@plt+0x45f30>
  448aa4:	ldrb	w0, [x19, #1]!
  448aa8:	ldrh	w0, [x20, x0, lsl #1]
  448aac:	tbnz	w0, #6, 448aa4 <nftw@plt+0x45f24>
  448ab0:	cbz	w26, 448ac0 <nftw@plt+0x45f40>
  448ab4:	sub	w0, w26, #0x1
  448ab8:	cmp	w0, w27
  448abc:	b.gt	448adc <nftw@plt+0x45f5c>
  448ac0:	cbz	x24, 448a18 <nftw@plt+0x45e98>
  448ac4:	lsl	w26, w26, #1
  448ac8:	sbfiz	x1, x26, #3, #32
  448acc:	mov	x0, x24
  448ad0:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  448ad4:	mov	x24, x0
  448ad8:	str	xzr, [x24, x25]
  448adc:	ldrb	w0, [x19]
  448ae0:	cbz	w0, 448b7c <nftw@plt+0x45ffc>
  448ae4:	mov	x1, x28
  448ae8:	mov	w3, #0x0                   	// #0
  448aec:	b	448a40 <nftw@plt+0x45ec0>
  448af0:	cmp	w0, #0x5c
  448af4:	b.eq	448b44 <nftw@plt+0x45fc4>  // b.none
  448af8:	cbz	w22, 448b0c <nftw@plt+0x45f8c>
  448afc:	cmp	w0, #0x27
  448b00:	b.eq	448b4c <nftw@plt+0x45fcc>  // b.none
  448b04:	strb	w0, [x1], #1
  448b08:	b	448a38 <nftw@plt+0x45eb8>
  448b0c:	cbz	w23, 448b24 <nftw@plt+0x45fa4>
  448b10:	cmp	w0, #0x22
  448b14:	b.eq	448b54 <nftw@plt+0x45fd4>  // b.none
  448b18:	strb	w0, [x1], #1
  448b1c:	mov	w21, w22
  448b20:	b	448a38 <nftw@plt+0x45eb8>
  448b24:	cmp	w0, #0x27
  448b28:	b.eq	448b60 <nftw@plt+0x45fe0>  // b.none
  448b2c:	cmp	w0, #0x22
  448b30:	b.eq	448b6c <nftw@plt+0x45fec>  // b.none
  448b34:	strb	w0, [x1], #1
  448b38:	mov	w21, w23
  448b3c:	mov	w22, w23
  448b40:	b	448a38 <nftw@plt+0x45eb8>
  448b44:	mov	w21, #0x1                   	// #1
  448b48:	b	448a38 <nftw@plt+0x45eb8>
  448b4c:	mov	w22, w21
  448b50:	b	448a38 <nftw@plt+0x45eb8>
  448b54:	mov	w21, w22
  448b58:	mov	w23, w22
  448b5c:	b	448a38 <nftw@plt+0x45eb8>
  448b60:	mov	w21, w23
  448b64:	mov	w22, #0x1                   	// #1
  448b68:	b	448a38 <nftw@plt+0x45eb8>
  448b6c:	mov	w21, w23
  448b70:	mov	w22, w23
  448b74:	mov	w23, #0x1                   	// #1
  448b78:	b	448a38 <nftw@plt+0x45eb8>
  448b7c:	mov	x1, x28
  448b80:	b	448a60 <nftw@plt+0x45ee0>
  448b84:	ldr	x0, [sp, #104]
  448b88:	bl	402910 <free@plt>
  448b8c:	ldp	x21, x22, [sp, #32]
  448b90:	ldp	x25, x26, [sp, #64]
  448b94:	ldp	x27, x28, [sp, #80]
  448b98:	mov	x0, x24
  448b9c:	ldp	x19, x20, [sp, #16]
  448ba0:	ldp	x23, x24, [sp, #48]
  448ba4:	ldp	x29, x30, [sp], #112
  448ba8:	ret
  448bac:	cbz	x1, 448c78 <nftw@plt+0x460f8>
  448bb0:	stp	x29, x30, [sp, #-80]!
  448bb4:	mov	x29, sp
  448bb8:	stp	x19, x20, [sp, #16]
  448bbc:	stp	x25, x26, [sp, #64]
  448bc0:	mov	x26, x0
  448bc4:	mov	x20, x1
  448bc8:	ldr	x19, [x0]
  448bcc:	cbz	x19, 448c20 <nftw@plt+0x460a0>
  448bd0:	stp	x21, x22, [sp, #32]
  448bd4:	stp	x23, x24, [sp, #48]
  448bd8:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  448bdc:	add	x22, x22, #0xe68
  448be0:	mov	w23, #0x5c                  	// #92
  448be4:	mov	w25, #0x27                  	// #39
  448be8:	ldrb	w2, [x19]
  448bec:	mov	w24, #0x22                  	// #34
  448bf0:	cbnz	w2, 448c58 <nftw@plt+0x460d8>
  448bf4:	mov	x1, x20
  448bf8:	mov	w0, #0xa                   	// #10
  448bfc:	bl	4025e0 <fputc@plt>
  448c00:	cmn	w0, #0x1
  448c04:	b.eq	448cac <nftw@plt+0x4612c>  // b.none
  448c08:	ldr	x19, [x26, #8]!
  448c0c:	cbnz	x19, 448be8 <nftw@plt+0x46068>
  448c10:	mov	w0, #0x0                   	// #0
  448c14:	ldp	x21, x22, [sp, #32]
  448c18:	ldp	x23, x24, [sp, #48]
  448c1c:	b	448c9c <nftw@plt+0x4611c>
  448c20:	mov	w0, #0x0                   	// #0
  448c24:	b	448c9c <nftw@plt+0x4611c>
  448c28:	mov	x1, x20
  448c2c:	mov	w0, w23
  448c30:	bl	4025e0 <fputc@plt>
  448c34:	cmn	w0, #0x1
  448c38:	b.eq	448c80 <nftw@plt+0x46100>  // b.none
  448c3c:	mov	x1, x20
  448c40:	mov	w0, w21
  448c44:	bl	4025e0 <fputc@plt>
  448c48:	cmn	w0, #0x1
  448c4c:	b.eq	448c90 <nftw@plt+0x46110>  // b.none
  448c50:	ldrb	w2, [x19, #1]!
  448c54:	cbz	w2, 448bf4 <nftw@plt+0x46074>
  448c58:	mov	w21, w2
  448c5c:	ldrh	w1, [x22, w2, sxtw #1]
  448c60:	tbnz	w1, #6, 448c28 <nftw@plt+0x460a8>
  448c64:	cmp	w2, #0x5c
  448c68:	ccmp	w2, w25, #0x4, ne  // ne = any
  448c6c:	ccmp	w2, w24, #0x4, ne  // ne = any
  448c70:	b.eq	448c28 <nftw@plt+0x460a8>  // b.none
  448c74:	b	448c3c <nftw@plt+0x460bc>
  448c78:	mov	w0, #0x1                   	// #1
  448c7c:	ret
  448c80:	mov	w0, #0x1                   	// #1
  448c84:	ldp	x21, x22, [sp, #32]
  448c88:	ldp	x23, x24, [sp, #48]
  448c8c:	b	448c9c <nftw@plt+0x4611c>
  448c90:	mov	w0, #0x1                   	// #1
  448c94:	ldp	x21, x22, [sp, #32]
  448c98:	ldp	x23, x24, [sp, #48]
  448c9c:	ldp	x19, x20, [sp, #16]
  448ca0:	ldp	x25, x26, [sp, #64]
  448ca4:	ldp	x29, x30, [sp], #80
  448ca8:	ret
  448cac:	mov	w0, #0x1                   	// #1
  448cb0:	ldp	x21, x22, [sp, #32]
  448cb4:	ldp	x23, x24, [sp, #48]
  448cb8:	b	448c9c <nftw@plt+0x4611c>
  448cbc:	stp	x29, x30, [sp, #-272]!
  448cc0:	mov	x29, sp
  448cc4:	stp	x25, x26, [sp, #64]
  448cc8:	mov	x26, x0
  448ccc:	ldr	x0, [x1]
  448cd0:	str	x0, [sp, #136]
  448cd4:	ldr	w0, [x26]
  448cd8:	cmp	w0, #0x1
  448cdc:	b.le	448f98 <nftw@plt+0x46418>
  448ce0:	stp	x19, x20, [sp, #16]
  448ce4:	stp	x21, x22, [sp, #32]
  448ce8:	stp	x23, x24, [sp, #48]
  448cec:	stp	x27, x28, [sp, #80]
  448cf0:	mov	x25, x1
  448cf4:	mov	w19, #0x1                   	// #1
  448cf8:	mov	w23, #0x7d0                 	// #2000
  448cfc:	mov	w22, #0x0                   	// #0
  448d00:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  448d04:	add	x0, x0, #0x140
  448d08:	str	x0, [sp, #104]
  448d0c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  448d10:	add	x0, x0, #0xe68
  448d14:	str	x0, [sp, #112]
  448d18:	b	448e64 <nftw@plt+0x462e4>
  448d1c:	ldr	x2, [x0]
  448d20:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  448d24:	add	x1, x1, #0x8e8
  448d28:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  448d2c:	ldr	x0, [x0, #1392]
  448d30:	bl	402b30 <fprintf@plt>
  448d34:	mov	w0, #0x1                   	// #1
  448d38:	bl	44a630 <_obstack_memory_used@@Base+0x2c>
  448d3c:	ldr	x0, [x25]
  448d40:	ldr	x2, [x0]
  448d44:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  448d48:	add	x1, x1, #0x918
  448d4c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  448d50:	ldr	x0, [x0, #1392]
  448d54:	bl	402b30 <fprintf@plt>
  448d58:	mov	w0, #0x1                   	// #1
  448d5c:	bl	44a630 <_obstack_memory_used@@Base+0x2c>
  448d60:	cbz	w0, 448f5c <nftw@plt+0x463dc>
  448d64:	ldr	x0, [sp, #128]
  448d68:	bl	4489b4 <nftw@plt+0x45e34>
  448d6c:	mov	x28, x0
  448d70:	ldr	x0, [x25]
  448d74:	ldr	x1, [sp, #136]
  448d78:	cmp	x0, x1
  448d7c:	b.eq	448e3c <nftw@plt+0x462bc>  // b.none
  448d80:	ldr	x0, [x28]
  448d84:	cbz	x0, 448e44 <nftw@plt+0x462c4>
  448d88:	mov	x24, #0x0                   	// #0
  448d8c:	add	x24, x24, #0x1
  448d90:	lsl	x0, x24, #3
  448d94:	str	x0, [sp, #120]
  448d98:	ldr	x0, [x28, x24, lsl #3]
  448d9c:	cbnz	x0, 448d8c <nftw@plt+0x4620c>
  448da0:	ldr	x0, [x25]
  448da4:	ldr	x0, [x0, x21, lsl #3]
  448da8:	bl	402910 <free@plt>
  448dac:	ldrsw	x1, [x26]
  448db0:	add	x1, x1, #0x1
  448db4:	add	x1, x1, x24
  448db8:	lsl	x1, x1, #3
  448dbc:	ldr	x0, [x25]
  448dc0:	bl	44a790 <_obstack_memory_used@@Base+0x18c>
  448dc4:	str	x0, [x25]
  448dc8:	ldr	w2, [x26]
  448dcc:	sub	w2, w2, w19
  448dd0:	add	x1, x27, #0x8
  448dd4:	add	x21, x21, x24
  448dd8:	sbfiz	x2, x2, #3, #32
  448ddc:	add	x1, x0, x1
  448de0:	add	x0, x0, x21, lsl #3
  448de4:	bl	4024a0 <memmove@plt>
  448de8:	ldr	x0, [x25]
  448dec:	ldr	x2, [sp, #120]
  448df0:	mov	x1, x28
  448df4:	add	x0, x0, x27
  448df8:	bl	402490 <memcpy@plt>
  448dfc:	ldr	w0, [x26]
  448e00:	sub	w0, w0, #0x1
  448e04:	add	w24, w0, w24
  448e08:	str	w24, [x26]
  448e0c:	mov	x0, x28
  448e10:	bl	402910 <free@plt>
  448e14:	ldr	x0, [sp, #128]
  448e18:	bl	402910 <free@plt>
  448e1c:	mov	w19, w22
  448e20:	mov	x0, x20
  448e24:	bl	402620 <fclose@plt>
  448e28:	mov	w22, w19
  448e2c:	b	448e54 <nftw@plt+0x462d4>
  448e30:	mov	x24, #0x0                   	// #0
  448e34:	str	xzr, [sp, #120]
  448e38:	b	448da0 <nftw@plt+0x46220>
  448e3c:	mov	x0, x1
  448e40:	b	448f7c <nftw@plt+0x463fc>
  448e44:	mov	x24, #0x0                   	// #0
  448e48:	str	xzr, [sp, #120]
  448e4c:	b	448da0 <nftw@plt+0x46220>
  448e50:	mov	w22, w19
  448e54:	add	w19, w22, #0x1
  448e58:	ldr	w0, [x26]
  448e5c:	cmp	w0, w19
  448e60:	b.le	448f88 <nftw@plt+0x46408>
  448e64:	ldr	x0, [x25]
  448e68:	sxtw	x21, w19
  448e6c:	sbfiz	x27, x19, #3, #32
  448e70:	ldr	x20, [x0, x21, lsl #3]
  448e74:	ldrb	w1, [x20]
  448e78:	cmp	w1, #0x40
  448e7c:	b.ne	448e50 <nftw@plt+0x462d0>  // b.any
  448e80:	subs	w23, w23, #0x1
  448e84:	b.eq	448d1c <nftw@plt+0x4619c>  // b.none
  448e88:	add	x20, x20, #0x1
  448e8c:	add	x2, sp, #0x90
  448e90:	mov	x1, x20
  448e94:	mov	w0, #0x0                   	// #0
  448e98:	bl	402ac0 <__xstat@plt>
  448e9c:	tbnz	w0, #31, 448e50 <nftw@plt+0x462d0>
  448ea0:	ldr	w0, [sp, #160]
  448ea4:	and	w0, w0, #0xf000
  448ea8:	cmp	w0, #0x4, lsl #12
  448eac:	b.eq	448d3c <nftw@plt+0x461bc>  // b.none
  448eb0:	ldr	x1, [sp, #104]
  448eb4:	mov	x0, x20
  448eb8:	bl	402650 <fopen@plt>
  448ebc:	mov	x20, x0
  448ec0:	cbz	x0, 448e50 <nftw@plt+0x462d0>
  448ec4:	mov	w2, #0x2                   	// #2
  448ec8:	mov	x1, #0x0                   	// #0
  448ecc:	bl	4027e0 <fseek@plt>
  448ed0:	cmn	w0, #0x1
  448ed4:	b.eq	448e20 <nftw@plt+0x462a0>  // b.none
  448ed8:	mov	x0, x20
  448edc:	bl	4025a0 <ftell@plt>
  448ee0:	mov	x24, x0
  448ee4:	cmn	x0, #0x1
  448ee8:	b.eq	448e20 <nftw@plt+0x462a0>  // b.none
  448eec:	mov	w2, #0x0                   	// #0
  448ef0:	mov	x1, #0x0                   	// #0
  448ef4:	mov	x0, x20
  448ef8:	bl	4027e0 <fseek@plt>
  448efc:	cmn	w0, #0x1
  448f00:	b.eq	448e20 <nftw@plt+0x462a0>  // b.none
  448f04:	add	x0, x24, #0x1
  448f08:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  448f0c:	str	x0, [sp, #128]
  448f10:	mov	x3, x20
  448f14:	mov	x2, x24
  448f18:	mov	x1, #0x1                   	// #1
  448f1c:	bl	4028d0 <fread@plt>
  448f20:	mov	x28, x0
  448f24:	cmp	x24, x0
  448f28:	b.eq	448f38 <nftw@plt+0x463b8>  // b.none
  448f2c:	mov	x0, x20
  448f30:	bl	402b70 <ferror@plt>
  448f34:	cbnz	w0, 448e20 <nftw@plt+0x462a0>
  448f38:	ldr	x1, [sp, #128]
  448f3c:	strb	wzr, [x1, x28]
  448f40:	ldrb	w0, [x1]
  448f44:	cbz	w0, 448f5c <nftw@plt+0x463dc>
  448f48:	ldr	x2, [sp, #112]
  448f4c:	ldrh	w2, [x2, w0, sxtw #1]
  448f50:	tbz	w2, #6, 448d60 <nftw@plt+0x461e0>
  448f54:	ldrb	w0, [x1, #1]!
  448f58:	cbnz	w0, 448f48 <nftw@plt+0x463c8>
  448f5c:	mov	x0, #0x8                   	// #8
  448f60:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  448f64:	mov	x28, x0
  448f68:	str	xzr, [x0]
  448f6c:	ldr	x0, [x25]
  448f70:	ldr	x1, [sp, #136]
  448f74:	cmp	x1, x0
  448f78:	b.ne	448e30 <nftw@plt+0x462b0>  // b.any
  448f7c:	bl	4488d8 <nftw@plt+0x45d58>
  448f80:	str	x0, [x25]
  448f84:	b	448d80 <nftw@plt+0x46200>
  448f88:	ldp	x19, x20, [sp, #16]
  448f8c:	ldp	x21, x22, [sp, #32]
  448f90:	ldp	x23, x24, [sp, #48]
  448f94:	ldp	x27, x28, [sp, #80]
  448f98:	ldp	x25, x26, [sp, #64]
  448f9c:	ldp	x29, x30, [sp], #272
  448fa0:	ret
  448fa4:	mov	x1, x0
  448fa8:	cbz	x0, 448fd4 <nftw@plt+0x46454>
  448fac:	ldr	x2, [x0]
  448fb0:	mov	w0, #0x0                   	// #0
  448fb4:	cbz	x2, 448fd0 <nftw@plt+0x46450>
  448fb8:	mov	x2, #0x1                   	// #1
  448fbc:	sub	x1, x1, #0x8
  448fc0:	mov	w0, w2
  448fc4:	add	x2, x2, #0x1
  448fc8:	ldr	x3, [x1, x2, lsl #3]
  448fcc:	cbnz	x3, 448fc0 <nftw@plt+0x46440>
  448fd0:	ret
  448fd4:	mov	w0, #0x0                   	// #0
  448fd8:	b	448fd0 <nftw@plt+0x46450>
  448fdc:	stp	x29, x30, [sp, #-16]!
  448fe0:	mov	x29, sp
  448fe4:	bl	402890 <strcmp@plt>
  448fe8:	ldp	x29, x30, [sp], #16
  448fec:	ret
  448ff0:	stp	x29, x30, [sp, #-16]!
  448ff4:	mov	x29, sp
  448ff8:	bl	4026a0 <strncmp@plt>
  448ffc:	ldp	x29, x30, [sp], #16
  449000:	ret
  449004:	mov	x2, x0
  449008:	ldrb	w1, [x2], #1
  44900c:	cbz	w1, 449048 <nftw@plt+0x464c8>
  449010:	mov	w0, #0x0                   	// #0
  449014:	mov	w5, #0x2f                  	// #47
  449018:	mov	w4, #0x43                  	// #67
  44901c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449020:	add	x3, x3, #0xd68
  449024:	cmp	w1, #0x5c
  449028:	csel	w1, w1, w5, ne  // ne = any
  44902c:	mul	w0, w0, w4
  449030:	sub	w0, w0, #0x71
  449034:	ldrb	w1, [x3, w1, sxtw]
  449038:	add	w0, w1, w0
  44903c:	ldrb	w1, [x2], #1
  449040:	cbnz	w1, 449024 <nftw@plt+0x464a4>
  449044:	ret
  449048:	mov	w0, #0x0                   	// #0
  44904c:	b	449044 <nftw@plt+0x464c4>
  449050:	stp	x29, x30, [sp, #-16]!
  449054:	mov	x29, sp
  449058:	bl	402890 <strcmp@plt>
  44905c:	cmp	w0, #0x0
  449060:	cset	w0, eq  // eq = none
  449064:	ldp	x29, x30, [sp], #16
  449068:	ret
  44906c:	stp	x29, x30, [sp, #-48]!
  449070:	mov	x29, sp
  449074:	stp	x19, x20, [sp, #16]
  449078:	str	x21, [sp, #32]
  44907c:	mov	x19, x1
  449080:	bl	44a254 <nftw@plt+0x476d4>
  449084:	mov	x20, x0
  449088:	mov	x0, x19
  44908c:	bl	44a254 <nftw@plt+0x476d4>
  449090:	mov	x19, x0
  449094:	mov	x1, x0
  449098:	mov	x0, x20
  44909c:	bl	449050 <nftw@plt+0x464d0>
  4490a0:	mov	w21, w0
  4490a4:	mov	x0, x20
  4490a8:	bl	402910 <free@plt>
  4490ac:	mov	x0, x19
  4490b0:	bl	402910 <free@plt>
  4490b4:	mov	w0, w21
  4490b8:	ldp	x19, x20, [sp, #16]
  4490bc:	ldr	x21, [sp, #32]
  4490c0:	ldp	x29, x30, [sp], #48
  4490c4:	ret
  4490c8:	cbz	x0, 4490e4 <nftw@plt+0x46564>
  4490cc:	stp	x29, x30, [sp, #-16]!
  4490d0:	mov	x29, sp
  4490d4:	mov	w1, #0x2                   	// #2
  4490d8:	bl	402a60 <__fsetlocking@plt>
  4490dc:	ldp	x29, x30, [sp], #16
  4490e0:	ret
  4490e4:	ret
  4490e8:	stp	x29, x30, [sp, #-16]!
  4490ec:	mov	x29, sp
  4490f0:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4490f4:	ldr	x0, [x0, #1424]
  4490f8:	cbz	x0, 449104 <nftw@plt+0x46584>
  4490fc:	mov	w1, #0x2                   	// #2
  449100:	bl	402a60 <__fsetlocking@plt>
  449104:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  449108:	ldr	x0, [x0, #1416]
  44910c:	cbz	x0, 449118 <nftw@plt+0x46598>
  449110:	mov	w1, #0x2                   	// #2
  449114:	bl	402a60 <__fsetlocking@plt>
  449118:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44911c:	ldr	x0, [x0, #1392]
  449120:	cbz	x0, 44912c <nftw@plt+0x465ac>
  449124:	mov	w1, #0x2                   	// #2
  449128:	bl	402a60 <__fsetlocking@plt>
  44912c:	ldp	x29, x30, [sp], #16
  449130:	ret
  449134:	stp	x29, x30, [sp, #-32]!
  449138:	mov	x29, sp
  44913c:	str	x19, [sp, #16]
  449140:	bl	402650 <fopen@plt>
  449144:	mov	x19, x0
  449148:	cbz	x0, 449154 <nftw@plt+0x465d4>
  44914c:	mov	w1, #0x2                   	// #2
  449150:	bl	402a60 <__fsetlocking@plt>
  449154:	mov	x0, x19
  449158:	ldr	x19, [sp, #16]
  44915c:	ldp	x29, x30, [sp], #32
  449160:	ret
  449164:	stp	x29, x30, [sp, #-32]!
  449168:	mov	x29, sp
  44916c:	str	x19, [sp, #16]
  449170:	bl	402700 <fdopen@plt>
  449174:	mov	x19, x0
  449178:	cbz	x0, 449184 <nftw@plt+0x46604>
  44917c:	mov	w1, #0x2                   	// #2
  449180:	bl	402a60 <__fsetlocking@plt>
  449184:	mov	x0, x19
  449188:	ldr	x19, [sp, #16]
  44918c:	ldp	x29, x30, [sp], #32
  449190:	ret
  449194:	stp	x29, x30, [sp, #-32]!
  449198:	mov	x29, sp
  44919c:	str	x19, [sp, #16]
  4491a0:	bl	402930 <freopen@plt>
  4491a4:	mov	x19, x0
  4491a8:	cbz	x0, 4491b4 <nftw@plt+0x46634>
  4491ac:	mov	w1, #0x2                   	// #2
  4491b0:	bl	402a60 <__fsetlocking@plt>
  4491b4:	mov	x0, x19
  4491b8:	ldr	x19, [sp, #16]
  4491bc:	ldp	x29, x30, [sp], #32
  4491c0:	ret
  4491c4:	cmp	x1, x0
  4491c8:	cset	w0, eq  // eq = none
  4491cc:	ret
  4491d0:	asr	x1, x0, #32
  4491d4:	sub	w1, w1, w0
  4491d8:	mov	w2, #0xadcc                	// #44492
  4491dc:	movk	w2, #0xbdec, lsl #16
  4491e0:	add	w1, w1, w2
  4491e4:	mov	w2, #0x109a                	// #4250
  4491e8:	movk	w2, #0x2, lsl #16
  4491ec:	eor	w1, w1, w2
  4491f0:	mov	w2, #0x2785                	// #10117
  4491f4:	movk	w2, #0x5c24, lsl #16
  4491f8:	add	w0, w2, w0
  4491fc:	sub	w0, w0, w1
  449200:	eor	w0, w0, w1, lsl #8
  449204:	mov	w3, #0x5234                	// #21044
  449208:	movk	w3, #0x4213, lsl #16
  44920c:	sub	w3, w3, w1
  449210:	sub	w3, w3, w0
  449214:	eor	w3, w3, w0, lsr #13
  449218:	sub	w1, w1, w0
  44921c:	sub	w1, w1, w3
  449220:	eor	w1, w1, w3, lsr #12
  449224:	sub	w0, w0, w3
  449228:	sub	w0, w0, w1
  44922c:	eor	w0, w0, w1, lsl #16
  449230:	sub	w3, w3, w1
  449234:	sub	w3, w3, w0
  449238:	eor	w3, w3, w0, lsr #5
  44923c:	sub	w1, w1, w0
  449240:	sub	w1, w1, w3
  449244:	eor	w1, w1, w3, lsr #3
  449248:	sub	w2, w0, w3
  44924c:	sub	w2, w2, w1
  449250:	eor	w2, w2, w1, lsl #10
  449254:	sub	w1, w3, w1
  449258:	sub	w0, w1, w2
  44925c:	eor	w0, w0, w2, lsr #15
  449260:	ret
  449264:	mov	x2, x0
  449268:	mov	w3, #0x1e                  	// #30
  44926c:	mov	w0, #0x0                   	// #0
  449270:	adrp	x5, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449274:	add	x5, x5, #0x970
  449278:	cmp	w3, w0
  44927c:	b.eq	4492a8 <nftw@plt+0x46728>  // b.none
  449280:	sub	w1, w3, w0
  449284:	add	w1, w0, w1, lsr #1
  449288:	ubfiz	x4, x1, #4, #32
  44928c:	ldr	w4, [x5, x4]
  449290:	cmp	x4, x2
  449294:	b.cc	4492a0 <nftw@plt+0x46720>  // b.lo, b.ul, b.last
  449298:	mov	w3, w1
  44929c:	b	449278 <nftw@plt+0x466f8>
  4492a0:	add	w0, w1, #0x1
  4492a4:	b	449278 <nftw@plt+0x466f8>
  4492a8:	ubfiz	x1, x0, #4, #32
  4492ac:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4492b0:	add	x3, x3, #0x970
  4492b4:	ldr	w1, [x3, x1]
  4492b8:	cmp	x1, x2
  4492bc:	b.cc	4492c4 <nftw@plt+0x46744>  // b.lo, b.ul, b.last
  4492c0:	ret
  4492c4:	stp	x29, x30, [sp, #-16]!
  4492c8:	mov	x29, sp
  4492cc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4492d0:	add	x1, x1, #0x948
  4492d4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  4492d8:	ldr	x0, [x0, #1392]
  4492dc:	bl	402b30 <fprintf@plt>
  4492e0:	bl	4027f0 <abort@plt>
  4492e4:	stp	x29, x30, [sp, #-64]!
  4492e8:	mov	x29, sp
  4492ec:	stp	x19, x20, [sp, #16]
  4492f0:	stp	x21, x22, [sp, #32]
  4492f4:	stp	x23, x24, [sp, #48]
  4492f8:	mov	x19, x0
  4492fc:	ldr	x24, [x0, #24]
  449300:	ldr	x20, [x0, #32]
  449304:	add	x23, x24, x20, lsl #3
  449308:	ldr	x1, [x0, #40]
  44930c:	ldr	x0, [x0, #48]
  449310:	sub	x1, x1, x0
  449314:	lsl	x0, x1, #1
  449318:	cmp	x20, x1, lsl #1
  44931c:	b.cc	449388 <nftw@plt+0x46808>  // b.lo, b.ul, b.last
  449320:	lsl	x1, x1, #3
  449324:	cmp	x1, #0x20
  449328:	mov	x2, #0x20                  	// #32
  44932c:	csel	x1, x1, x2, cs  // cs = hs, nlast
  449330:	cmp	x20, x1
  449334:	b.hi	449388 <nftw@plt+0x46808>  // b.pmore
  449338:	ldr	w21, [x19, #104]
  44933c:	ldr	x3, [x19, #88]
  449340:	cbz	x3, 4493a4 <nftw@plt+0x46824>
  449344:	mov	x2, #0x8                   	// #8
  449348:	mov	x1, x20
  44934c:	ldr	x0, [x19, #80]
  449350:	blr	x3
  449354:	cbz	x0, 4494d0 <nftw@plt+0x46950>
  449358:	str	x0, [x19, #24]
  44935c:	str	x20, [x19, #32]
  449360:	str	w21, [x19, #104]
  449364:	ldr	x0, [x19, #40]
  449368:	ldr	x1, [x19, #48]
  44936c:	sub	x0, x0, x1
  449370:	str	x0, [x19, #40]
  449374:	str	xzr, [x19, #48]
  449378:	mov	x20, x24
  44937c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449380:	add	x22, x22, #0x970
  449384:	b	4493cc <nftw@plt+0x4684c>
  449388:	bl	449264 <nftw@plt+0x466e4>
  44938c:	mov	w21, w0
  449390:	ubfiz	x1, x21, #4, #32
  449394:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449398:	add	x0, x0, #0x970
  44939c:	ldr	w20, [x0, x1]
  4493a0:	b	44933c <nftw@plt+0x467bc>
  4493a4:	ldr	x2, [x19, #64]
  4493a8:	mov	x1, #0x8                   	// #8
  4493ac:	mov	x0, x20
  4493b0:	blr	x2
  4493b4:	b	449354 <nftw@plt+0x467d4>
  4493b8:	bl	4027f0 <abort@plt>
  4493bc:	str	x21, [x6]
  4493c0:	add	x20, x20, #0x8
  4493c4:	cmp	x23, x20
  4493c8:	b.ls	449488 <nftw@plt+0x46908>  // b.plast
  4493cc:	ldr	x21, [x20]
  4493d0:	cmp	x21, #0x1
  4493d4:	b.ls	4493c0 <nftw@plt+0x46840>  // b.plast
  4493d8:	ldr	x1, [x19]
  4493dc:	mov	x0, x21
  4493e0:	blr	x1
  4493e4:	ldr	w3, [x19, #104]
  4493e8:	ubfiz	x2, x3, #4, #32
  4493ec:	add	x1, x22, x2
  4493f0:	ldr	w5, [x22, x2]
  4493f4:	ldr	w7, [x1, #12]
  4493f8:	mov	w8, w0
  4493fc:	ldr	w1, [x1, #4]
  449400:	mul	x1, x1, x8
  449404:	lsr	x2, x1, #32
  449408:	sub	w1, w0, w2
  44940c:	add	w1, w2, w1, lsr #1
  449410:	lsr	w1, w1, w7
  449414:	msub	w1, w1, w5, w0
  449418:	ldr	x2, [x19, #24]
  44941c:	add	x6, x2, w1, uxtw #3
  449420:	ldr	x4, [x2, w1, uxtw #3]
  449424:	cbz	x4, 4493bc <nftw@plt+0x4683c>
  449428:	cmp	x4, #0x1
  44942c:	b.eq	4493b8 <nftw@plt+0x46838>  // b.none
  449430:	ldr	x4, [x19, #32]
  449434:	ubfiz	x3, x3, #4, #32
  449438:	add	x3, x22, x3
  44943c:	ldr	w3, [x3, #8]
  449440:	mul	x3, x3, x8
  449444:	lsr	x3, x3, #32
  449448:	add	w6, w0, #0x1
  44944c:	sub	w0, w0, w3
  449450:	add	w0, w3, w0, lsr #1
  449454:	lsr	w0, w0, w7
  449458:	sub	w5, w5, #0x2
  44945c:	msub	w0, w0, w5, w6
  449460:	add	w1, w1, w0
  449464:	sub	w3, w1, w4
  449468:	cmp	x4, w1, uxtw
  44946c:	csel	w1, w3, w1, ls  // ls = plast
  449470:	add	x6, x2, w1, uxtw #3
  449474:	ldr	x3, [x2, w1, uxtw #3]
  449478:	cbz	x3, 4493bc <nftw@plt+0x4683c>
  44947c:	cmp	x3, #0x1
  449480:	b.ne	449460 <nftw@plt+0x468e0>  // b.any
  449484:	bl	4027f0 <abort@plt>
  449488:	ldr	x1, [x19, #72]
  44948c:	cbz	x1, 4494b0 <nftw@plt+0x46930>
  449490:	mov	x0, x24
  449494:	blr	x1
  449498:	mov	w0, #0x1                   	// #1
  44949c:	ldp	x19, x20, [sp, #16]
  4494a0:	ldp	x21, x22, [sp, #32]
  4494a4:	ldp	x23, x24, [sp, #48]
  4494a8:	ldp	x29, x30, [sp], #64
  4494ac:	ret
  4494b0:	ldr	x2, [x19, #96]
  4494b4:	mov	w0, #0x1                   	// #1
  4494b8:	cbz	x2, 44949c <nftw@plt+0x4691c>
  4494bc:	mov	x1, x24
  4494c0:	ldr	x0, [x19, #80]
  4494c4:	blr	x2
  4494c8:	mov	w0, #0x1                   	// #1
  4494cc:	b	44949c <nftw@plt+0x4691c>
  4494d0:	mov	w0, #0x0                   	// #0
  4494d4:	b	44949c <nftw@plt+0x4691c>
  4494d8:	ldr	x0, [x0, #32]
  4494dc:	ret
  4494e0:	ldr	x1, [x0, #40]
  4494e4:	ldr	x0, [x0, #48]
  4494e8:	sub	x0, x1, x0
  4494ec:	ret
  4494f0:	stp	x29, x30, [sp, #-96]!
  4494f4:	mov	x29, sp
  4494f8:	stp	x19, x20, [sp, #16]
  4494fc:	stp	x21, x22, [sp, #32]
  449500:	stp	x23, x24, [sp, #48]
  449504:	stp	x25, x26, [sp, #64]
  449508:	stp	x27, x28, [sp, #80]
  44950c:	mov	x27, x1
  449510:	mov	x26, x2
  449514:	mov	x25, x3
  449518:	mov	x20, x4
  44951c:	mov	x21, x5
  449520:	mov	x24, x6
  449524:	bl	449264 <nftw@plt+0x466e4>
  449528:	mov	w22, w0
  44952c:	ubfiz	x1, x22, #4, #32
  449530:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449534:	add	x0, x0, #0x970
  449538:	ldr	w28, [x0, x1]
  44953c:	mov	x2, #0x70                  	// #112
  449540:	mov	x1, #0x1                   	// #1
  449544:	mov	x0, x20
  449548:	blr	x21
  44954c:	mov	x19, x0
  449550:	cbz	x0, 449590 <nftw@plt+0x46a10>
  449554:	mov	x2, #0x8                   	// #8
  449558:	mov	x1, x28
  44955c:	mov	x0, x20
  449560:	blr	x21
  449564:	mov	x23, x0
  449568:	str	x0, [x19, #24]
  44956c:	cbz	x0, 4495b0 <nftw@plt+0x46a30>
  449570:	str	x28, [x19, #32]
  449574:	str	w22, [x19, #104]
  449578:	str	x27, [x19]
  44957c:	str	x26, [x19, #8]
  449580:	str	x25, [x19, #16]
  449584:	str	x20, [x19, #80]
  449588:	str	x21, [x19, #88]
  44958c:	str	x24, [x19, #96]
  449590:	mov	x0, x19
  449594:	ldp	x19, x20, [sp, #16]
  449598:	ldp	x21, x22, [sp, #32]
  44959c:	ldp	x23, x24, [sp, #48]
  4495a0:	ldp	x25, x26, [sp, #64]
  4495a4:	ldp	x27, x28, [sp, #80]
  4495a8:	ldp	x29, x30, [sp], #96
  4495ac:	ret
  4495b0:	cbz	x24, 4495c8 <nftw@plt+0x46a48>
  4495b4:	mov	x1, x19
  4495b8:	mov	x0, x20
  4495bc:	blr	x24
  4495c0:	mov	x19, x23
  4495c4:	b	449590 <nftw@plt+0x46a10>
  4495c8:	mov	x19, x0
  4495cc:	b	449590 <nftw@plt+0x46a10>
  4495d0:	stp	x29, x30, [sp, #-96]!
  4495d4:	mov	x29, sp
  4495d8:	stp	x19, x20, [sp, #16]
  4495dc:	stp	x21, x22, [sp, #32]
  4495e0:	stp	x23, x24, [sp, #48]
  4495e4:	stp	x25, x26, [sp, #64]
  4495e8:	str	x27, [sp, #80]
  4495ec:	mov	x26, x1
  4495f0:	mov	x25, x2
  4495f4:	mov	x24, x3
  4495f8:	mov	x19, x4
  4495fc:	mov	x21, x5
  449600:	mov	x23, x6
  449604:	bl	449264 <nftw@plt+0x466e4>
  449608:	mov	w20, w0
  44960c:	ubfiz	x1, x20, #4, #32
  449610:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449614:	add	x0, x0, #0x970
  449618:	ldr	w27, [x0, x1]
  44961c:	mov	x1, #0x70                  	// #112
  449620:	mov	x0, #0x1                   	// #1
  449624:	blr	x19
  449628:	mov	x19, x0
  44962c:	cbz	x0, 449664 <nftw@plt+0x46ae4>
  449630:	mov	x1, #0x8                   	// #8
  449634:	mov	x0, x27
  449638:	blr	x21
  44963c:	mov	x22, x0
  449640:	str	x0, [x19, #24]
  449644:	cbz	x0, 449684 <nftw@plt+0x46b04>
  449648:	str	x27, [x19, #32]
  44964c:	str	w20, [x19, #104]
  449650:	str	x26, [x19]
  449654:	str	x25, [x19, #8]
  449658:	str	x24, [x19, #16]
  44965c:	str	x21, [x19, #64]
  449660:	str	x23, [x19, #72]
  449664:	mov	x0, x19
  449668:	ldp	x19, x20, [sp, #16]
  44966c:	ldp	x21, x22, [sp, #32]
  449670:	ldp	x23, x24, [sp, #48]
  449674:	ldp	x25, x26, [sp, #64]
  449678:	ldr	x27, [sp, #80]
  44967c:	ldp	x29, x30, [sp], #96
  449680:	ret
  449684:	cbz	x23, 449698 <nftw@plt+0x46b18>
  449688:	mov	x0, x19
  44968c:	blr	x23
  449690:	mov	x19, x22
  449694:	b	449664 <nftw@plt+0x46ae4>
  449698:	mov	x19, x0
  44969c:	b	449664 <nftw@plt+0x46ae4>
  4496a0:	stp	x29, x30, [sp, #-16]!
  4496a4:	mov	x29, sp
  4496a8:	mov	x6, x5
  4496ac:	mov	x5, x4
  4496b0:	bl	4495d0 <nftw@plt+0x46a50>
  4496b4:	ldp	x29, x30, [sp], #16
  4496b8:	ret
  4496bc:	str	x1, [x0]
  4496c0:	str	x2, [x0, #8]
  4496c4:	str	x3, [x0, #16]
  4496c8:	str	x4, [x0, #80]
  4496cc:	str	x5, [x0, #88]
  4496d0:	str	x6, [x0, #96]
  4496d4:	ret
  4496d8:	stp	x29, x30, [sp, #-16]!
  4496dc:	mov	x29, sp
  4496e0:	adrp	x5, 402000 <memcpy@plt-0x490>
  4496e4:	add	x5, x5, #0x910
  4496e8:	adrp	x4, 44a000 <nftw@plt+0x47480>
  4496ec:	add	x4, x4, #0x744
  4496f0:	bl	4496a0 <nftw@plt+0x46b20>
  4496f4:	ldp	x29, x30, [sp], #16
  4496f8:	ret
  4496fc:	stp	x29, x30, [sp, #-16]!
  449700:	mov	x29, sp
  449704:	adrp	x5, 402000 <memcpy@plt-0x490>
  449708:	add	x5, x5, #0x910
  44970c:	adrp	x4, 402000 <memcpy@plt-0x490>
  449710:	add	x4, x4, #0x710
  449714:	bl	4496a0 <nftw@plt+0x46b20>
  449718:	ldp	x29, x30, [sp], #16
  44971c:	ret
  449720:	stp	x29, x30, [sp, #-48]!
  449724:	mov	x29, sp
  449728:	stp	x19, x20, [sp, #16]
  44972c:	str	x21, [sp, #32]
  449730:	mov	x20, x0
  449734:	ldr	x21, [x0, #24]
  449738:	ldr	x0, [x0, #16]
  44973c:	cbz	x0, 449774 <nftw@plt+0x46bf4>
  449740:	ldr	x19, [x20, #32]
  449744:	subs	w19, w19, #0x1
  449748:	b.mi	449774 <nftw@plt+0x46bf4>  // b.first
  44974c:	sxtw	x19, w19
  449750:	b	44975c <nftw@plt+0x46bdc>
  449754:	sub	x19, x19, #0x1
  449758:	tbnz	w19, #31, 449774 <nftw@plt+0x46bf4>
  44975c:	ldr	x0, [x21, x19, lsl #3]
  449760:	cmp	x0, #0x1
  449764:	b.ls	449754 <nftw@plt+0x46bd4>  // b.plast
  449768:	ldr	x1, [x20, #16]
  44976c:	blr	x1
  449770:	b	449754 <nftw@plt+0x46bd4>
  449774:	ldr	x1, [x20, #72]
  449778:	cbz	x1, 4497a0 <nftw@plt+0x46c20>
  44977c:	mov	x0, x21
  449780:	blr	x1
  449784:	ldr	x1, [x20, #72]
  449788:	mov	x0, x20
  44978c:	blr	x1
  449790:	ldp	x19, x20, [sp, #16]
  449794:	ldr	x21, [sp, #32]
  449798:	ldp	x29, x30, [sp], #48
  44979c:	ret
  4497a0:	ldr	x2, [x20, #96]
  4497a4:	cbz	x2, 449790 <nftw@plt+0x46c10>
  4497a8:	mov	x1, x21
  4497ac:	ldr	x0, [x20, #80]
  4497b0:	blr	x2
  4497b4:	ldr	x2, [x20, #96]
  4497b8:	mov	x1, x20
  4497bc:	ldr	x0, [x20, #80]
  4497c0:	blr	x2
  4497c4:	b	449790 <nftw@plt+0x46c10>
  4497c8:	stp	x29, x30, [sp, #-48]!
  4497cc:	mov	x29, sp
  4497d0:	stp	x19, x20, [sp, #16]
  4497d4:	stp	x21, x22, [sp, #32]
  4497d8:	mov	x20, x0
  4497dc:	ldr	x22, [x0, #32]
  4497e0:	ldr	x21, [x0, #24]
  4497e4:	ldr	x0, [x0, #16]
  4497e8:	cbz	x0, 44981c <nftw@plt+0x46c9c>
  4497ec:	subs	w19, w22, #0x1
  4497f0:	b.mi	44981c <nftw@plt+0x46c9c>  // b.first
  4497f4:	sxtw	x19, w19
  4497f8:	b	449804 <nftw@plt+0x46c84>
  4497fc:	sub	x19, x19, #0x1
  449800:	tbnz	w19, #31, 44981c <nftw@plt+0x46c9c>
  449804:	ldr	x0, [x21, x19, lsl #3]
  449808:	cmp	x0, #0x1
  44980c:	b.ls	4497fc <nftw@plt+0x46c7c>  // b.plast
  449810:	ldr	x1, [x20, #16]
  449814:	blr	x1
  449818:	b	4497fc <nftw@plt+0x46c7c>
  44981c:	cmp	x22, #0x20, lsl #12
  449820:	b.ls	4498c0 <nftw@plt+0x46d40>  // b.plast
  449824:	mov	x0, #0x80                  	// #128
  449828:	bl	449264 <nftw@plt+0x466e4>
  44982c:	mov	w19, w0
  449830:	sbfiz	x1, x0, #4, #32
  449834:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449838:	add	x0, x0, #0x970
  44983c:	ldr	w21, [x0, x1]
  449840:	ldr	x1, [x20, #72]
  449844:	cbz	x1, 449890 <nftw@plt+0x46d10>
  449848:	ldr	x0, [x20, #24]
  44984c:	blr	x1
  449850:	ldr	x3, [x20, #88]
  449854:	cbz	x3, 4498a8 <nftw@plt+0x46d28>
  449858:	mov	x2, #0x8                   	// #8
  44985c:	sxtw	x1, w21
  449860:	ldr	x0, [x20, #80]
  449864:	blr	x3
  449868:	str	x0, [x20, #24]
  44986c:	sxtw	x21, w21
  449870:	str	x21, [x20, #32]
  449874:	str	w19, [x20, #104]
  449878:	str	xzr, [x20, #48]
  44987c:	str	xzr, [x20, #40]
  449880:	ldp	x19, x20, [sp, #16]
  449884:	ldp	x21, x22, [sp, #32]
  449888:	ldp	x29, x30, [sp], #48
  44988c:	ret
  449890:	ldr	x2, [x20, #96]
  449894:	cbz	x2, 449850 <nftw@plt+0x46cd0>
  449898:	ldr	x1, [x20, #24]
  44989c:	ldr	x0, [x20, #80]
  4498a0:	blr	x2
  4498a4:	b	449850 <nftw@plt+0x46cd0>
  4498a8:	ldr	x2, [x20, #64]
  4498ac:	mov	x1, #0x8                   	// #8
  4498b0:	sxtw	x0, w21
  4498b4:	blr	x2
  4498b8:	str	x0, [x20, #24]
  4498bc:	b	44986c <nftw@plt+0x46cec>
  4498c0:	lsl	x2, x22, #3
  4498c4:	mov	w1, #0x0                   	// #0
  4498c8:	mov	x0, x21
  4498cc:	bl	4026f0 <memset@plt>
  4498d0:	b	449878 <nftw@plt+0x46cf8>
  4498d4:	stp	x29, x30, [sp, #-80]!
  4498d8:	mov	x29, sp
  4498dc:	stp	x19, x20, [sp, #16]
  4498e0:	stp	x21, x22, [sp, #32]
  4498e4:	stp	x23, x24, [sp, #48]
  4498e8:	str	x25, [sp, #64]
  4498ec:	mov	x20, x0
  4498f0:	mov	x24, x1
  4498f4:	mov	w22, w2
  4498f8:	ldr	w0, [x0, #56]
  4498fc:	add	w0, w0, #0x1
  449900:	str	w0, [x20, #56]
  449904:	mov	w25, w2
  449908:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44990c:	add	x2, x2, #0x970
  449910:	ldr	w1, [x20, #104]
  449914:	lsl	x1, x1, #4
  449918:	add	x3, x2, x1
  44991c:	ldr	w0, [x3, #4]
  449920:	mul	x0, x0, x25
  449924:	lsr	x0, x0, #32
  449928:	sub	w19, w22, w0
  44992c:	add	w19, w0, w19, lsr #1
  449930:	ldr	w0, [x3, #12]
  449934:	lsr	w19, w19, w0
  449938:	ldr	w0, [x2, x1]
  44993c:	msub	w19, w19, w0, w22
  449940:	ldr	x0, [x20, #24]
  449944:	ldr	x21, [x0, w19, uxtw #3]
  449948:	cbz	x21, 4499f0 <nftw@plt+0x46e70>
  44994c:	ldr	x23, [x20, #32]
  449950:	cmp	x21, #0x1
  449954:	b.eq	44996c <nftw@plt+0x46dec>  // b.none
  449958:	ldr	x2, [x20, #8]
  44995c:	mov	x1, x24
  449960:	mov	x0, x21
  449964:	blr	x2
  449968:	cbnz	w0, 4499f0 <nftw@plt+0x46e70>
  44996c:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449970:	add	x2, x2, #0x970
  449974:	ldr	w1, [x20, #104]
  449978:	lsl	x1, x1, #4
  44997c:	add	x3, x2, x1
  449980:	ldr	w0, [x3, #8]
  449984:	mul	x25, x0, x25
  449988:	lsr	x25, x25, #32
  44998c:	add	w4, w22, #0x1
  449990:	sub	w22, w22, w25
  449994:	add	w22, w25, w22, lsr #1
  449998:	ldr	w0, [x3, #12]
  44999c:	lsr	w22, w22, w0
  4499a0:	ldr	w0, [x2, x1]
  4499a4:	sub	w0, w0, #0x2
  4499a8:	msub	w22, w22, w0, w4
  4499ac:	ldr	w0, [x20, #60]
  4499b0:	add	w0, w0, #0x1
  4499b4:	str	w0, [x20, #60]
  4499b8:	add	w19, w19, w22
  4499bc:	sub	w0, w19, w23
  4499c0:	cmp	x23, w19, uxtw
  4499c4:	csel	w19, w0, w19, ls  // ls = plast
  4499c8:	ldr	x0, [x20, #24]
  4499cc:	ldr	x21, [x0, w19, uxtw #3]
  4499d0:	cbz	x21, 4499f0 <nftw@plt+0x46e70>
  4499d4:	cmp	x21, #0x1
  4499d8:	b.eq	4499ac <nftw@plt+0x46e2c>  // b.none
  4499dc:	ldr	x2, [x20, #8]
  4499e0:	mov	x1, x24
  4499e4:	mov	x0, x21
  4499e8:	blr	x2
  4499ec:	cbz	w0, 4499ac <nftw@plt+0x46e2c>
  4499f0:	mov	x0, x21
  4499f4:	ldp	x19, x20, [sp, #16]
  4499f8:	ldp	x21, x22, [sp, #32]
  4499fc:	ldp	x23, x24, [sp, #48]
  449a00:	ldr	x25, [sp, #64]
  449a04:	ldp	x29, x30, [sp], #80
  449a08:	ret
  449a0c:	stp	x29, x30, [sp, #-32]!
  449a10:	mov	x29, sp
  449a14:	stp	x19, x20, [sp, #16]
  449a18:	mov	x19, x0
  449a1c:	mov	x20, x1
  449a20:	ldr	x1, [x0]
  449a24:	mov	x0, x20
  449a28:	blr	x1
  449a2c:	mov	w2, w0
  449a30:	mov	x1, x20
  449a34:	mov	x0, x19
  449a38:	bl	4498d4 <nftw@plt+0x46d54>
  449a3c:	ldp	x19, x20, [sp, #16]
  449a40:	ldp	x29, x30, [sp], #32
  449a44:	ret
  449a48:	stp	x29, x30, [sp, #-96]!
  449a4c:	mov	x29, sp
  449a50:	stp	x19, x20, [sp, #16]
  449a54:	stp	x21, x22, [sp, #32]
  449a58:	stp	x23, x24, [sp, #48]
  449a5c:	stp	x25, x26, [sp, #64]
  449a60:	mov	x20, x0
  449a64:	mov	x24, x1
  449a68:	mov	w26, w2
  449a6c:	mov	w25, w3
  449a70:	ldr	x22, [x0, #32]
  449a74:	cmp	w3, #0x1
  449a78:	b.eq	449b3c <nftw@plt+0x46fbc>  // b.none
  449a7c:	str	x27, [sp, #80]
  449a80:	mov	w21, w26
  449a84:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449a88:	add	x2, x2, #0x970
  449a8c:	ldr	w1, [x20, #104]
  449a90:	lsl	x1, x1, #4
  449a94:	add	x3, x2, x1
  449a98:	ldr	w0, [x3, #4]
  449a9c:	mul	x0, x0, x21
  449aa0:	lsr	x0, x0, #32
  449aa4:	sub	w19, w26, w0
  449aa8:	add	w19, w0, w19, lsr #1
  449aac:	ldr	w0, [x3, #12]
  449ab0:	lsr	w19, w19, w0
  449ab4:	ldr	w0, [x2, x1]
  449ab8:	msub	w19, w19, w0, w26
  449abc:	ldr	w0, [x20, #56]
  449ac0:	add	w0, w0, #0x1
  449ac4:	str	w0, [x20, #56]
  449ac8:	ubfiz	x27, x19, #3, #32
  449acc:	ldr	x0, [x20, #24]
  449ad0:	add	x23, x0, x27
  449ad4:	ldr	x0, [x0, w19, uxtw #3]
  449ad8:	cbz	x0, 449c34 <nftw@plt+0x470b4>
  449adc:	cmp	x0, #0x1
  449ae0:	b.eq	449af8 <nftw@plt+0x46f78>  // b.none
  449ae4:	ldr	x2, [x20, #8]
  449ae8:	mov	x1, x24
  449aec:	blr	x2
  449af0:	mov	x23, #0x0                   	// #0
  449af4:	cbnz	w0, 449b6c <nftw@plt+0x46fec>
  449af8:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  449afc:	add	x2, x2, #0x970
  449b00:	ldr	w1, [x20, #104]
  449b04:	lsl	x1, x1, #4
  449b08:	add	x3, x2, x1
  449b0c:	ldr	w0, [x3, #8]
  449b10:	mul	x21, x0, x21
  449b14:	lsr	x0, x21, #32
  449b18:	add	w4, w26, #0x1
  449b1c:	sub	w21, w26, w0
  449b20:	add	w21, w0, w21, lsr #1
  449b24:	ldr	w0, [x3, #12]
  449b28:	lsr	w21, w21, w0
  449b2c:	ldr	w0, [x2, x1]
  449b30:	sub	w0, w0, #0x2
  449b34:	msub	w21, w21, w0, w4
  449b38:	b	449b84 <nftw@plt+0x47004>
  449b3c:	add	x0, x22, x22, lsl #1
  449b40:	ldr	x1, [x20, #40]
  449b44:	cmp	x0, x1, lsl #2
  449b48:	b.ls	449b54 <nftw@plt+0x46fd4>  // b.plast
  449b4c:	str	x27, [sp, #80]
  449b50:	b	449a80 <nftw@plt+0x46f00>
  449b54:	mov	x0, x20
  449b58:	bl	4492e4 <nftw@plt+0x46764>
  449b5c:	cbz	w0, 449c14 <nftw@plt+0x47094>
  449b60:	str	x27, [sp, #80]
  449b64:	ldr	x22, [x20, #32]
  449b68:	b	449a80 <nftw@plt+0x46f00>
  449b6c:	ldr	x23, [x20, #24]
  449b70:	add	x23, x23, x27
  449b74:	ldr	x27, [sp, #80]
  449b78:	b	449bf8 <nftw@plt+0x47078>
  449b7c:	cmp	x23, #0x0
  449b80:	csel	x23, x23, x1, ne  // ne = any
  449b84:	ldr	w0, [x20, #60]
  449b88:	add	w0, w0, #0x1
  449b8c:	str	w0, [x20, #60]
  449b90:	add	w19, w19, w21
  449b94:	sub	w0, w19, w22
  449b98:	cmp	x22, w19, uxtw
  449b9c:	csel	w19, w0, w19, ls  // ls = plast
  449ba0:	ubfiz	x26, x19, #3, #32
  449ba4:	ldr	x0, [x20, #24]
  449ba8:	add	x1, x0, x26
  449bac:	ldr	x0, [x0, w19, uxtw #3]
  449bb0:	cbz	x0, 449bdc <nftw@plt+0x4705c>
  449bb4:	cmp	x0, #0x1
  449bb8:	b.eq	449b7c <nftw@plt+0x46ffc>  // b.none
  449bbc:	ldr	x2, [x20, #8]
  449bc0:	mov	x1, x24
  449bc4:	blr	x2
  449bc8:	cbz	w0, 449b84 <nftw@plt+0x47004>
  449bcc:	ldr	x23, [x20, #24]
  449bd0:	add	x23, x23, x26
  449bd4:	ldr	x27, [sp, #80]
  449bd8:	b	449bf8 <nftw@plt+0x47078>
  449bdc:	cbz	w25, 449c1c <nftw@plt+0x4709c>
  449be0:	cbz	x23, 449c38 <nftw@plt+0x470b8>
  449be4:	ldr	x0, [x20, #48]
  449be8:	sub	x0, x0, #0x1
  449bec:	str	x0, [x20, #48]
  449bf0:	str	xzr, [x23]
  449bf4:	ldr	x27, [sp, #80]
  449bf8:	mov	x0, x23
  449bfc:	ldp	x19, x20, [sp, #16]
  449c00:	ldp	x21, x22, [sp, #32]
  449c04:	ldp	x23, x24, [sp, #48]
  449c08:	ldp	x25, x26, [sp, #64]
  449c0c:	ldp	x29, x30, [sp], #96
  449c10:	ret
  449c14:	mov	x23, #0x0                   	// #0
  449c18:	b	449bf8 <nftw@plt+0x47078>
  449c1c:	mov	x23, x0
  449c20:	ldr	x27, [sp, #80]
  449c24:	b	449bf8 <nftw@plt+0x47078>
  449c28:	mov	x23, x0
  449c2c:	ldr	x27, [sp, #80]
  449c30:	b	449bf8 <nftw@plt+0x47078>
  449c34:	cbz	w25, 449c28 <nftw@plt+0x470a8>
  449c38:	ldr	x0, [x20, #40]
  449c3c:	add	x0, x0, #0x1
  449c40:	str	x0, [x20, #40]
  449c44:	ldr	x23, [x20, #24]
  449c48:	add	x23, x23, w19, uxtw #3
  449c4c:	ldr	x27, [sp, #80]
  449c50:	b	449bf8 <nftw@plt+0x47078>
  449c54:	stp	x29, x30, [sp, #-48]!
  449c58:	mov	x29, sp
  449c5c:	stp	x19, x20, [sp, #16]
  449c60:	str	x21, [sp, #32]
  449c64:	mov	x19, x0
  449c68:	mov	x20, x1
  449c6c:	mov	w21, w2
  449c70:	ldr	x1, [x0]
  449c74:	mov	x0, x20
  449c78:	blr	x1
  449c7c:	mov	w3, w21
  449c80:	mov	w2, w0
  449c84:	mov	x1, x20
  449c88:	mov	x0, x19
  449c8c:	bl	449a48 <nftw@plt+0x46ec8>
  449c90:	ldp	x19, x20, [sp, #16]
  449c94:	ldr	x21, [sp, #32]
  449c98:	ldp	x29, x30, [sp], #48
  449c9c:	ret
  449ca0:	stp	x29, x30, [sp, #-32]!
  449ca4:	mov	x29, sp
  449ca8:	stp	x19, x20, [sp, #16]
  449cac:	mov	x19, x0
  449cb0:	mov	w3, #0x0                   	// #0
  449cb4:	bl	449a48 <nftw@plt+0x46ec8>
  449cb8:	cbz	x0, 449ce4 <nftw@plt+0x47164>
  449cbc:	mov	x20, x0
  449cc0:	ldr	x1, [x19, #16]
  449cc4:	cbz	x1, 449cd0 <nftw@plt+0x47150>
  449cc8:	ldr	x0, [x0]
  449ccc:	blr	x1
  449cd0:	mov	x0, #0x1                   	// #1
  449cd4:	str	x0, [x20]
  449cd8:	ldr	x0, [x19, #48]
  449cdc:	add	x0, x0, #0x1
  449ce0:	str	x0, [x19, #48]
  449ce4:	ldp	x19, x20, [sp, #16]
  449ce8:	ldp	x29, x30, [sp], #32
  449cec:	ret
  449cf0:	stp	x29, x30, [sp, #-32]!
  449cf4:	mov	x29, sp
  449cf8:	stp	x19, x20, [sp, #16]
  449cfc:	mov	x19, x0
  449d00:	mov	x20, x1
  449d04:	ldr	x1, [x0]
  449d08:	mov	x0, x20
  449d0c:	blr	x1
  449d10:	mov	w2, w0
  449d14:	mov	x1, x20
  449d18:	mov	x0, x19
  449d1c:	bl	449ca0 <nftw@plt+0x47120>
  449d20:	ldp	x19, x20, [sp, #16]
  449d24:	ldp	x29, x30, [sp], #32
  449d28:	ret
  449d2c:	stp	x29, x30, [sp, #-32]!
  449d30:	mov	x29, sp
  449d34:	stp	x19, x20, [sp, #16]
  449d38:	mov	x20, x1
  449d3c:	ldr	x1, [x0, #24]
  449d40:	cmp	x1, x20
  449d44:	b.hi	449d94 <nftw@plt+0x47214>  // b.pmore
  449d48:	mov	x19, x0
  449d4c:	ldr	x0, [x0, #32]
  449d50:	add	x0, x1, x0, lsl #3
  449d54:	cmp	x20, x0
  449d58:	b.cs	449d94 <nftw@plt+0x47214>  // b.hs, b.nlast
  449d5c:	ldr	x0, [x20]
  449d60:	cmp	x0, #0x1
  449d64:	b.ls	449d94 <nftw@plt+0x47214>  // b.plast
  449d68:	ldr	x1, [x19, #16]
  449d6c:	cbz	x1, 449d74 <nftw@plt+0x471f4>
  449d70:	blr	x1
  449d74:	mov	x0, #0x1                   	// #1
  449d78:	str	x0, [x20]
  449d7c:	ldr	x0, [x19, #48]
  449d80:	add	x0, x0, #0x1
  449d84:	str	x0, [x19, #48]
  449d88:	ldp	x19, x20, [sp, #16]
  449d8c:	ldp	x29, x30, [sp], #32
  449d90:	ret
  449d94:	bl	4027f0 <abort@plt>
  449d98:	stp	x29, x30, [sp, #-48]!
  449d9c:	mov	x29, sp
  449da0:	stp	x19, x20, [sp, #16]
  449da4:	stp	x21, x22, [sp, #32]
  449da8:	mov	x22, x1
  449dac:	mov	x21, x2
  449db0:	ldr	x19, [x0, #24]
  449db4:	ldr	x20, [x0, #32]
  449db8:	add	x20, x19, x20, lsl #3
  449dbc:	b	449dcc <nftw@plt+0x4724c>
  449dc0:	add	x19, x19, #0x8
  449dc4:	cmp	x20, x19
  449dc8:	b.ls	449de8 <nftw@plt+0x47268>  // b.plast
  449dcc:	ldr	x0, [x19]
  449dd0:	cmp	x0, #0x1
  449dd4:	b.ls	449dc0 <nftw@plt+0x47240>  // b.plast
  449dd8:	mov	x1, x21
  449ddc:	mov	x0, x19
  449de0:	blr	x22
  449de4:	cbnz	w0, 449dc0 <nftw@plt+0x47240>
  449de8:	ldp	x19, x20, [sp, #16]
  449dec:	ldp	x21, x22, [sp, #32]
  449df0:	ldp	x29, x30, [sp], #48
  449df4:	ret
  449df8:	stp	x29, x30, [sp, #-48]!
  449dfc:	mov	x29, sp
  449e00:	stp	x19, x20, [sp, #16]
  449e04:	str	x21, [sp, #32]
  449e08:	mov	x19, x0
  449e0c:	mov	x20, x1
  449e10:	mov	x21, x2
  449e14:	ldr	x3, [x0, #40]
  449e18:	ldr	x0, [x0, #48]
  449e1c:	sub	x3, x3, x0
  449e20:	lsl	x3, x3, #3
  449e24:	cmp	x3, #0x20
  449e28:	mov	x0, #0x20                  	// #32
  449e2c:	csel	x3, x3, x0, cs  // cs = hs, nlast
  449e30:	ldr	x0, [x19, #32]
  449e34:	cmp	x0, x3
  449e38:	b.hi	449e5c <nftw@plt+0x472dc>  // b.pmore
  449e3c:	mov	x2, x21
  449e40:	mov	x1, x20
  449e44:	mov	x0, x19
  449e48:	bl	449d98 <nftw@plt+0x47218>
  449e4c:	ldp	x19, x20, [sp, #16]
  449e50:	ldr	x21, [sp, #32]
  449e54:	ldp	x29, x30, [sp], #48
  449e58:	ret
  449e5c:	mov	x0, x19
  449e60:	bl	4492e4 <nftw@plt+0x46764>
  449e64:	b	449e3c <nftw@plt+0x472bc>
  449e68:	ldr	w1, [x0, #56]
  449e6c:	movi	d0, #0x0
  449e70:	cbz	w1, 449e84 <nftw@plt+0x47304>
  449e74:	ldr	w0, [x0, #60]
  449e78:	ucvtf	d0, w0
  449e7c:	ucvtf	d1, w1
  449e80:	fdiv	d0, d0, d1
  449e84:	ret
  449e88:	mov	x2, x0
  449e8c:	ldrb	w1, [x2], #1
  449e90:	cbz	w1, 449eb0 <nftw@plt+0x47330>
  449e94:	mov	w0, #0x0                   	// #0
  449e98:	mov	w3, #0x43                  	// #67
  449e9c:	madd	w0, w0, w3, w1
  449ea0:	sub	w0, w0, #0x71
  449ea4:	ldrb	w1, [x2], #1
  449ea8:	cbnz	w1, 449e9c <nftw@plt+0x4731c>
  449eac:	ret
  449eb0:	mov	w0, #0x0                   	// #0
  449eb4:	b	449eac <nftw@plt+0x4732c>
  449eb8:	tst	x0, #0x3
  449ebc:	b.eq	449fd4 <nftw@plt+0x47454>  // b.none
  449ec0:	cmp	w1, #0xb
  449ec4:	b.ls	449fc0 <nftw@plt+0x47440>  // b.plast
  449ec8:	mov	w5, w1
  449ecc:	mov	w8, #0x79b9                	// #31161
  449ed0:	movk	w8, #0x9e37, lsl #16
  449ed4:	mov	w7, w8
  449ed8:	ldrb	w4, [x0, #5]
  449edc:	ldrb	w3, [x0, #6]
  449ee0:	lsl	w3, w3, #16
  449ee4:	add	w4, w3, w4, lsl #8
  449ee8:	ldrb	w3, [x0, #7]
  449eec:	ldrb	w6, [x0, #4]
  449ef0:	add	w3, w6, w3, lsl #24
  449ef4:	add	w4, w4, w3
  449ef8:	add	w4, w4, w8
  449efc:	ldrb	w3, [x0, #9]
  449f00:	ldrb	w6, [x0, #10]
  449f04:	lsl	w6, w6, #16
  449f08:	add	w3, w6, w3, lsl #8
  449f0c:	ldrb	w6, [x0, #11]
  449f10:	ldrb	w8, [x0, #8]
  449f14:	add	w6, w8, w6, lsl #24
  449f18:	add	w3, w3, w6
  449f1c:	add	w2, w3, w2
  449f20:	ldrb	w6, [x0, #1]
  449f24:	ldrb	w3, [x0, #2]
  449f28:	lsl	w3, w3, #16
  449f2c:	add	w6, w3, w6, lsl #8
  449f30:	ldrb	w3, [x0, #3]
  449f34:	ldrb	w8, [x0], #12
  449f38:	add	w3, w8, w3, lsl #24
  449f3c:	add	w6, w6, w3
  449f40:	add	w3, w4, w2
  449f44:	sub	w6, w6, w3
  449f48:	add	w6, w6, w7
  449f4c:	eor	w6, w6, w2, lsr #13
  449f50:	sub	w4, w4, w2
  449f54:	sub	w4, w4, w6
  449f58:	eor	w4, w4, w6, lsl #8
  449f5c:	sub	w2, w2, w6
  449f60:	sub	w3, w2, w4
  449f64:	eor	w3, w3, w4, lsr #13
  449f68:	sub	w2, w6, w4
  449f6c:	sub	w2, w2, w3
  449f70:	eor	w2, w2, w3, lsr #12
  449f74:	sub	w4, w4, w3
  449f78:	sub	w4, w4, w2
  449f7c:	eor	w4, w4, w2, lsl #16
  449f80:	sub	w3, w3, w2
  449f84:	sub	w3, w3, w4
  449f88:	eor	w3, w3, w4, lsr #5
  449f8c:	sub	w2, w2, w4
  449f90:	sub	w2, w2, w3
  449f94:	eor	w7, w2, w3, lsr #3
  449f98:	sub	w4, w4, w3
  449f9c:	sub	w4, w4, w7
  449fa0:	eor	w8, w4, w7, lsl #10
  449fa4:	sub	w2, w3, w7
  449fa8:	sub	w2, w2, w8
  449fac:	eor	w2, w2, w8, lsr #15
  449fb0:	sub	w5, w5, #0xc
  449fb4:	cmp	w5, #0xb
  449fb8:	b.hi	449ed8 <nftw@plt+0x47358>  // b.pmore
  449fbc:	b	44a080 <nftw@plt+0x47500>
  449fc0:	mov	w5, w1
  449fc4:	mov	w8, #0x79b9                	// #31161
  449fc8:	movk	w8, #0x9e37, lsl #16
  449fcc:	mov	w7, w8
  449fd0:	b	44a080 <nftw@plt+0x47500>
  449fd4:	cmp	w1, #0xb
  449fd8:	b.ls	44a0c8 <nftw@plt+0x47548>  // b.plast
  449fdc:	mov	w5, w1
  449fe0:	mov	w8, #0x79b9                	// #31161
  449fe4:	movk	w8, #0x9e37, lsl #16
  449fe8:	mov	w7, w8
  449fec:	ldr	w6, [x0]
  449ff0:	add	w6, w7, w6
  449ff4:	ldr	w4, [x0, #4]
  449ff8:	add	w4, w8, w4
  449ffc:	ldr	w3, [x0, #8]
  44a000:	add	w2, w2, w3
  44a004:	add	w3, w4, w2
  44a008:	sub	w6, w6, w3
  44a00c:	eor	w6, w6, w2, lsr #13
  44a010:	sub	w4, w4, w2
  44a014:	sub	w4, w4, w6
  44a018:	eor	w4, w4, w6, lsl #8
  44a01c:	sub	w2, w2, w6
  44a020:	sub	w2, w2, w4
  44a024:	eor	w2, w2, w4, lsr #13
  44a028:	sub	w6, w6, w4
  44a02c:	sub	w6, w6, w2
  44a030:	eor	w6, w6, w2, lsr #12
  44a034:	sub	w4, w4, w2
  44a038:	sub	w4, w4, w6
  44a03c:	eor	w4, w4, w6, lsl #16
  44a040:	sub	w2, w2, w6
  44a044:	sub	w2, w2, w4
  44a048:	eor	w2, w2, w4, lsr #5
  44a04c:	sub	w6, w6, w4
  44a050:	sub	w6, w6, w2
  44a054:	eor	w7, w6, w2, lsr #3
  44a058:	sub	w4, w4, w2
  44a05c:	sub	w4, w4, w7
  44a060:	eor	w8, w4, w7, lsl #10
  44a064:	sub	w2, w2, w7
  44a068:	sub	w2, w2, w8
  44a06c:	eor	w2, w2, w8, lsr #15
  44a070:	add	x0, x0, #0xc
  44a074:	sub	w5, w5, #0xc
  44a078:	cmp	w5, #0xb
  44a07c:	b.hi	449fec <nftw@plt+0x4746c>  // b.pmore
  44a080:	add	w2, w2, w1
  44a084:	cmp	w5, #0x6
  44a088:	b.eq	44a1bc <nftw@plt+0x4763c>  // b.none
  44a08c:	b.ls	44a0dc <nftw@plt+0x4755c>  // b.plast
  44a090:	cmp	w5, #0x9
  44a094:	b.eq	44a0bc <nftw@plt+0x4753c>  // b.none
  44a098:	b.ls	44a19c <nftw@plt+0x4761c>  // b.plast
  44a09c:	cmp	w5, #0xa
  44a0a0:	b.eq	44a0b4 <nftw@plt+0x47534>  // b.none
  44a0a4:	cmp	w5, #0xb
  44a0a8:	b.ne	44a12c <nftw@plt+0x475ac>  // b.any
  44a0ac:	ldrb	w1, [x0, #10]
  44a0b0:	add	w2, w2, w1, lsl #24
  44a0b4:	ldrb	w1, [x0, #9]
  44a0b8:	add	w2, w2, w1, lsl #16
  44a0bc:	ldrb	w1, [x0, #8]
  44a0c0:	add	w2, w2, w1, lsl #8
  44a0c4:	b	44a1ac <nftw@plt+0x4762c>
  44a0c8:	mov	w5, w1
  44a0cc:	mov	w8, #0x79b9                	// #31161
  44a0d0:	movk	w8, #0x9e37, lsl #16
  44a0d4:	mov	w7, w8
  44a0d8:	b	44a080 <nftw@plt+0x47500>
  44a0dc:	cmp	w5, #0x3
  44a0e0:	b.eq	44a100 <nftw@plt+0x47580>  // b.none
  44a0e4:	b.ls	44a10c <nftw@plt+0x4758c>  // b.plast
  44a0e8:	cmp	w5, #0x4
  44a0ec:	b.eq	44a0f8 <nftw@plt+0x47578>  // b.none
  44a0f0:	ldrb	w1, [x0, #4]
  44a0f4:	add	w8, w8, w1
  44a0f8:	ldrb	w1, [x0, #3]
  44a0fc:	add	w7, w7, w1, lsl #24
  44a100:	ldrb	w1, [x0, #2]
  44a104:	add	w7, w7, w1, lsl #16
  44a108:	b	44a11c <nftw@plt+0x4759c>
  44a10c:	cmp	w5, #0x1
  44a110:	b.eq	44a124 <nftw@plt+0x475a4>  // b.none
  44a114:	cmp	w5, #0x2
  44a118:	b.ne	44a12c <nftw@plt+0x475ac>  // b.any
  44a11c:	ldrb	w1, [x0, #1]
  44a120:	add	w7, w7, w1, lsl #8
  44a124:	ldrb	w0, [x0]
  44a128:	add	w7, w7, w0
  44a12c:	add	w6, w8, w2
  44a130:	sub	w6, w7, w6
  44a134:	eor	w6, w6, w2, lsr #13
  44a138:	sub	w4, w8, w2
  44a13c:	sub	w3, w4, w6
  44a140:	eor	w3, w3, w6, lsl #8
  44a144:	sub	w2, w2, w6
  44a148:	sub	w2, w2, w3
  44a14c:	eor	w2, w2, w3, lsr #13
  44a150:	sub	w0, w6, w3
  44a154:	sub	w0, w0, w2
  44a158:	eor	w0, w0, w2, lsr #12
  44a15c:	sub	w3, w3, w2
  44a160:	sub	w3, w3, w0
  44a164:	eor	w3, w3, w0, lsl #16
  44a168:	sub	w1, w2, w0
  44a16c:	sub	w1, w1, w3
  44a170:	eor	w1, w1, w3, lsr #5
  44a174:	sub	w2, w0, w3
  44a178:	sub	w2, w2, w1
  44a17c:	eor	w2, w2, w1, lsr #3
  44a180:	sub	w0, w3, w1
  44a184:	sub	w0, w0, w2
  44a188:	eor	w0, w0, w2, lsl #10
  44a18c:	sub	w1, w1, w2
  44a190:	sub	w1, w1, w0
  44a194:	eor	w0, w1, w0, lsr #15
  44a198:	ret
  44a19c:	cmp	w5, #0x7
  44a1a0:	b.eq	44a1b4 <nftw@plt+0x47634>  // b.none
  44a1a4:	cmp	w5, #0x8
  44a1a8:	b.ne	44a12c <nftw@plt+0x475ac>  // b.any
  44a1ac:	ldrb	w1, [x0, #7]
  44a1b0:	add	w8, w8, w1, lsl #24
  44a1b4:	ldrb	w1, [x0, #6]
  44a1b8:	add	w8, w8, w1, lsl #16
  44a1bc:	ldrb	w1, [x0, #5]
  44a1c0:	add	w8, w8, w1, lsl #8
  44a1c4:	b	44a0f0 <nftw@plt+0x47570>
  44a1c8:	ret
  44a1cc:	ldrb	w1, [x0]
  44a1d0:	cbz	w1, 44a1e8 <nftw@plt+0x47668>
  44a1d4:	add	x2, x0, #0x1
  44a1d8:	cmp	w1, #0x2f
  44a1dc:	csel	x0, x0, x2, ne  // ne = any
  44a1e0:	ldrb	w1, [x2], #1
  44a1e4:	cbnz	w1, 44a1d8 <nftw@plt+0x47658>
  44a1e8:	ret
  44a1ec:	ldrb	w2, [x0]
  44a1f0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44a1f4:	add	x1, x1, #0xe68
  44a1f8:	ldrh	w1, [x1, x2, lsl #1]
  44a1fc:	mov	w2, #0x88                  	// #136
  44a200:	tst	w2, w1
  44a204:	b.eq	44a218 <nftw@plt+0x47698>  // b.none
  44a208:	ldrb	w2, [x0, #1]
  44a20c:	add	x1, x0, #0x2
  44a210:	cmp	w2, #0x3a
  44a214:	csel	x0, x1, x0, eq  // eq = none
  44a218:	ldrb	w1, [x0]
  44a21c:	cbz	w1, 44a23c <nftw@plt+0x476bc>
  44a220:	add	x2, x0, #0x1
  44a224:	mov	w3, #0x5c                  	// #92
  44a228:	cmp	w1, #0x2f
  44a22c:	ccmp	w1, w3, #0x4, ne  // ne = any
  44a230:	csel	x0, x0, x2, ne  // ne = any
  44a234:	ldrb	w1, [x2], #1
  44a238:	cbnz	w1, 44a228 <nftw@plt+0x476a8>
  44a23c:	ret
  44a240:	stp	x29, x30, [sp, #-16]!
  44a244:	mov	x29, sp
  44a248:	bl	44a1cc <nftw@plt+0x4764c>
  44a24c:	ldp	x29, x30, [sp], #16
  44a250:	ret
  44a254:	mov	x12, #0x1020                	// #4128
  44a258:	sub	sp, sp, x12
  44a25c:	stp	x29, x30, [sp]
  44a260:	mov	x29, sp
  44a264:	str	x19, [sp, #16]
  44a268:	mov	x19, x0
  44a26c:	add	x1, sp, #0x20
  44a270:	bl	402a30 <realpath@plt>
  44a274:	cmp	x0, #0x0
  44a278:	csel	x0, x0, x19, ne  // ne = any
  44a27c:	bl	402770 <strdup@plt>
  44a280:	ldr	x19, [sp, #16]
  44a284:	ldp	x29, x30, [sp]
  44a288:	mov	x12, #0x1020                	// #4128
  44a28c:	add	sp, sp, x12
  44a290:	ret
  44a294:	stp	x29, x30, [sp, #-16]!
  44a298:	mov	x29, sp
  44a29c:	mov	x2, x0
  44a2a0:	ldrb	w0, [x0, #80]
  44a2a4:	tbz	w0, #0, 44a2bc <nftw@plt+0x4773c>
  44a2a8:	ldr	x3, [x2, #56]
  44a2ac:	ldr	x0, [x2, #72]
  44a2b0:	blr	x3
  44a2b4:	ldp	x29, x30, [sp], #16
  44a2b8:	ret
  44a2bc:	ldr	x2, [x2, #56]
  44a2c0:	mov	x0, x1
  44a2c4:	blr	x2
  44a2c8:	b	44a2b4 <nftw@plt+0x47734>
  44a2cc:	stp	x29, x30, [sp, #-16]!
  44a2d0:	mov	x29, sp
  44a2d4:	mov	x2, x0
  44a2d8:	ldrb	w0, [x0, #80]
  44a2dc:	tbz	w0, #0, 44a2f4 <nftw@plt+0x47774>
  44a2e0:	ldr	x3, [x2, #64]
  44a2e4:	ldr	x0, [x2, #72]
  44a2e8:	blr	x3
  44a2ec:	ldp	x29, x30, [sp], #16
  44a2f0:	ret
  44a2f4:	ldr	x2, [x2, #64]
  44a2f8:	mov	x0, x1
  44a2fc:	blr	x2
  44a300:	b	44a2ec <nftw@plt+0x4776c>
  44a304:	stp	x29, x30, [sp, #-48]!
  44a308:	mov	x29, sp
  44a30c:	stp	x19, x20, [sp, #16]
  44a310:	stp	x21, x22, [sp, #32]
  44a314:	mov	x19, x0
  44a318:	cmp	x2, #0x0
  44a31c:	mov	x0, #0x10                  	// #16
  44a320:	csel	x20, x2, x0, ne  // ne = any
  44a324:	cmp	x1, #0x0
  44a328:	mov	x0, #0xfe0                 	// #4064
  44a32c:	csel	x1, x1, x0, ne  // ne = any
  44a330:	str	x1, [x19]
  44a334:	sub	x22, x20, #0x1
  44a338:	str	x22, [x19, #48]
  44a33c:	mov	x0, x19
  44a340:	bl	44a294 <nftw@plt+0x47714>
  44a344:	mov	x21, x0
  44a348:	cbz	x0, 44a39c <nftw@plt+0x4781c>
  44a34c:	str	x21, [x19, #8]
  44a350:	add	x2, x21, #0x10
  44a354:	add	x2, x2, x22
  44a358:	neg	x20, x20
  44a35c:	and	x20, x2, x20
  44a360:	str	x20, [x19, #16]
  44a364:	str	x20, [x19, #24]
  44a368:	ldr	x0, [x19]
  44a36c:	add	x0, x21, x0
  44a370:	str	x0, [x21]
  44a374:	str	x0, [x19, #32]
  44a378:	str	xzr, [x21, #8]
  44a37c:	ldrb	w0, [x19, #80]
  44a380:	and	w0, w0, #0xfffffff9
  44a384:	strb	w0, [x19, #80]
  44a388:	mov	w0, #0x1                   	// #1
  44a38c:	ldp	x19, x20, [sp, #16]
  44a390:	ldp	x21, x22, [sp, #32]
  44a394:	ldp	x29, x30, [sp], #48
  44a398:	ret
  44a39c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44a3a0:	ldr	x0, [x0, #1336]
  44a3a4:	blr	x0
  44a3a8:	b	44a34c <nftw@plt+0x477cc>
  44a3ac:	stp	x29, x30, [sp, #-16]!
  44a3b0:	mov	x29, sp
  44a3b4:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44a3b8:	add	x2, x2, #0xc50
  44a3bc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  44a3c0:	add	x1, x1, #0x8a8
  44a3c4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44a3c8:	ldr	x0, [x0, #1392]
  44a3cc:	bl	402b30 <fprintf@plt>
  44a3d0:	mov	w0, #0x1                   	// #1
  44a3d4:	bl	402520 <exit@plt>

000000000044a3d8 <_obstack_begin@@Base>:
  44a3d8:	stp	x29, x30, [sp, #-16]!
  44a3dc:	mov	x29, sp
  44a3e0:	str	x3, [x0, #56]
  44a3e4:	str	x4, [x0, #64]
  44a3e8:	ldrb	w3, [x0, #80]
  44a3ec:	and	w3, w3, #0xfffffffe
  44a3f0:	strb	w3, [x0, #80]
  44a3f4:	bl	44a304 <nftw@plt+0x47784>
  44a3f8:	ldp	x29, x30, [sp], #16
  44a3fc:	ret

000000000044a400 <_obstack_begin_1@@Base>:
  44a400:	stp	x29, x30, [sp, #-16]!
  44a404:	mov	x29, sp
  44a408:	str	x3, [x0, #56]
  44a40c:	str	x4, [x0, #64]
  44a410:	str	x5, [x0, #72]
  44a414:	ldrb	w3, [x0, #80]
  44a418:	orr	w3, w3, #0x1
  44a41c:	strb	w3, [x0, #80]
  44a420:	bl	44a304 <nftw@plt+0x47784>
  44a424:	ldp	x29, x30, [sp], #16
  44a428:	ret

000000000044a42c <_obstack_newchunk@@Base>:
  44a42c:	stp	x29, x30, [sp, #-64]!
  44a430:	mov	x29, sp
  44a434:	stp	x19, x20, [sp, #16]
  44a438:	stp	x21, x22, [sp, #32]
  44a43c:	str	x23, [sp, #48]
  44a440:	mov	x19, x0
  44a444:	ldr	x22, [x0, #8]
  44a448:	ldr	x21, [x0, #24]
  44a44c:	ldr	x0, [x0, #16]
  44a450:	sub	x21, x21, x0
  44a454:	add	x3, x21, x1
  44a458:	ldr	x0, [x19, #48]
  44a45c:	add	x0, x3, x0
  44a460:	lsr	x20, x21, #3
  44a464:	add	x20, x20, #0x64
  44a468:	add	x1, x20, x0
  44a46c:	ldr	x2, [x19]
  44a470:	cmp	x2, x0
  44a474:	csel	x2, x2, x0, cs  // cs = hs, nlast
  44a478:	cmp	x2, x1
  44a47c:	csel	x20, x2, x1, cs  // cs = hs, nlast
  44a480:	cmp	x21, x3
  44a484:	ccmp	x3, x0, #0x2, ls  // ls = plast
  44a488:	b.ls	44a520 <_obstack_newchunk@@Base+0xf4>  // b.plast
  44a48c:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44a490:	ldr	x0, [x0, #1336]
  44a494:	blr	x0
  44a498:	mov	x23, #0x0                   	// #0
  44a49c:	str	x23, [x19, #8]
  44a4a0:	str	x22, [x23, #8]
  44a4a4:	add	x1, x23, x20
  44a4a8:	str	x1, [x19, #32]
  44a4ac:	mov	x2, x23
  44a4b0:	str	x1, [x2], #16
  44a4b4:	ldr	x20, [x19, #48]
  44a4b8:	add	x2, x2, x20
  44a4bc:	bic	x20, x2, x20
  44a4c0:	mov	x2, x21
  44a4c4:	ldr	x1, [x19, #16]
  44a4c8:	mov	x0, x20
  44a4cc:	bl	402490 <memcpy@plt>
  44a4d0:	ldrb	w0, [x19, #80]
  44a4d4:	tbnz	w0, #1, 44a4f4 <_obstack_newchunk@@Base+0xc8>
  44a4d8:	ldr	x0, [x19, #48]
  44a4dc:	add	x1, x22, #0x10
  44a4e0:	add	x1, x1, x0
  44a4e4:	bic	x0, x1, x0
  44a4e8:	ldr	x1, [x19, #16]
  44a4ec:	cmp	x1, x0
  44a4f0:	b.eq	44a538 <_obstack_newchunk@@Base+0x10c>  // b.none
  44a4f4:	str	x20, [x19, #16]
  44a4f8:	add	x20, x20, x21
  44a4fc:	str	x20, [x19, #24]
  44a500:	ldrb	w0, [x19, #80]
  44a504:	and	w0, w0, #0xfffffffd
  44a508:	strb	w0, [x19, #80]
  44a50c:	ldp	x19, x20, [sp, #16]
  44a510:	ldp	x21, x22, [sp, #32]
  44a514:	ldr	x23, [sp, #48]
  44a518:	ldp	x29, x30, [sp], #64
  44a51c:	ret
  44a520:	mov	x1, x20
  44a524:	mov	x0, x19
  44a528:	bl	44a294 <nftw@plt+0x47714>
  44a52c:	mov	x23, x0
  44a530:	cbnz	x0, 44a49c <_obstack_newchunk@@Base+0x70>
  44a534:	b	44a48c <_obstack_newchunk@@Base+0x60>
  44a538:	ldr	x0, [x22, #8]
  44a53c:	str	x0, [x23, #8]
  44a540:	mov	x1, x22
  44a544:	mov	x0, x19
  44a548:	bl	44a2cc <nftw@plt+0x4774c>
  44a54c:	b	44a4f4 <_obstack_newchunk@@Base+0xc8>

000000000044a550 <_obstack_allocated_p@@Base>:
  44a550:	ldr	x0, [x0, #8]
  44a554:	cbnz	x0, 44a564 <_obstack_allocated_p@@Base+0x14>
  44a558:	b	44a578 <_obstack_allocated_p@@Base+0x28>
  44a55c:	ldr	x0, [x0, #8]
  44a560:	cbz	x0, 44a578 <_obstack_allocated_p@@Base+0x28>
  44a564:	cmp	x1, x0
  44a568:	b.ls	44a55c <_obstack_allocated_p@@Base+0xc>  // b.plast
  44a56c:	ldr	x2, [x0]
  44a570:	cmp	x2, x1
  44a574:	b.cc	44a55c <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  44a578:	cmp	x0, #0x0
  44a57c:	cset	w0, ne  // ne = any
  44a580:	ret

000000000044a584 <_obstack_free@@Base>:
  44a584:	stp	x29, x30, [sp, #-48]!
  44a588:	mov	x29, sp
  44a58c:	stp	x19, x20, [sp, #16]
  44a590:	str	x21, [sp, #32]
  44a594:	mov	x19, x0
  44a598:	mov	x21, x1
  44a59c:	ldr	x1, [x0, #8]
  44a5a0:	cbnz	x1, 44a5cc <_obstack_free@@Base+0x48>
  44a5a4:	cbz	x21, 44a5f4 <_obstack_free@@Base+0x70>
  44a5a8:	bl	4027f0 <abort@plt>
  44a5ac:	ldr	x20, [x1, #8]
  44a5b0:	mov	x0, x19
  44a5b4:	bl	44a2cc <nftw@plt+0x4774c>
  44a5b8:	ldrb	w2, [x19, #80]
  44a5bc:	orr	w2, w2, #0x2
  44a5c0:	strb	w2, [x19, #80]
  44a5c4:	cbz	x20, 44a5a4 <_obstack_free@@Base+0x20>
  44a5c8:	mov	x1, x20
  44a5cc:	cmp	x21, x1
  44a5d0:	b.ls	44a5ac <_obstack_free@@Base+0x28>  // b.plast
  44a5d4:	ldr	x0, [x1]
  44a5d8:	cmp	x0, x21
  44a5dc:	b.cc	44a5ac <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  44a5e0:	str	x21, [x19, #24]
  44a5e4:	str	x21, [x19, #16]
  44a5e8:	ldr	x0, [x1]
  44a5ec:	str	x0, [x19, #32]
  44a5f0:	str	x1, [x19, #8]
  44a5f4:	ldp	x19, x20, [sp, #16]
  44a5f8:	ldr	x21, [sp, #32]
  44a5fc:	ldp	x29, x30, [sp], #48
  44a600:	ret

000000000044a604 <_obstack_memory_used@@Base>:
  44a604:	ldr	x1, [x0, #8]
  44a608:	cbz	x1, 44a628 <_obstack_memory_used@@Base+0x24>
  44a60c:	mov	x0, #0x0                   	// #0
  44a610:	ldr	x2, [x1]
  44a614:	sub	x2, x2, x1
  44a618:	add	x0, x0, x2
  44a61c:	ldr	x1, [x1, #8]
  44a620:	cbnz	x1, 44a610 <_obstack_memory_used@@Base+0xc>
  44a624:	ret
  44a628:	mov	x0, #0x0                   	// #0
  44a62c:	b	44a624 <_obstack_memory_used@@Base+0x20>
  44a630:	stp	x29, x30, [sp, #-32]!
  44a634:	mov	x29, sp
  44a638:	str	x19, [sp, #16]
  44a63c:	mov	w19, w0
  44a640:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44a644:	ldr	x0, [x0, #3408]
  44a648:	cbz	x0, 44a650 <_obstack_memory_used@@Base+0x4c>
  44a64c:	blr	x0
  44a650:	mov	w0, w19
  44a654:	bl	402520 <exit@plt>
  44a658:	adrp	x1, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44a65c:	str	x0, [x1, #1344]
  44a660:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44a664:	ldr	x0, [x0, #2680]
  44a668:	cbz	x0, 44a670 <_obstack_memory_used@@Base+0x6c>
  44a66c:	ret
  44a670:	stp	x29, x30, [sp, #-16]!
  44a674:	mov	x29, sp
  44a678:	bl	402530 <sbrk@plt>
  44a67c:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44a680:	str	x0, [x1, #2680]
  44a684:	ldp	x29, x30, [sp], #16
  44a688:	ret
  44a68c:	stp	x29, x30, [sp, #-32]!
  44a690:	mov	x29, sp
  44a694:	stp	x19, x20, [sp, #16]
  44a698:	mov	x19, x0
  44a69c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44a6a0:	ldr	x20, [x0, #2680]
  44a6a4:	cbz	x20, 44a6f8 <_obstack_memory_used@@Base+0xf4>
  44a6a8:	mov	x0, #0x0                   	// #0
  44a6ac:	bl	402530 <sbrk@plt>
  44a6b0:	sub	x5, x0, x20
  44a6b4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44a6b8:	ldr	x2, [x0, #1344]
  44a6bc:	ldrb	w0, [x2]
  44a6c0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x109fc>
  44a6c4:	add	x1, x1, #0x780
  44a6c8:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x119fc>
  44a6cc:	add	x3, x3, #0x698
  44a6d0:	cmp	w0, #0x0
  44a6d4:	mov	x4, x19
  44a6d8:	csel	x3, x3, x1, ne  // ne = any
  44a6dc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44a6e0:	add	x1, x1, #0x68
  44a6e4:	adrp	x0, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44a6e8:	ldr	x0, [x0, #1392]
  44a6ec:	bl	402b30 <fprintf@plt>
  44a6f0:	mov	w0, #0x1                   	// #1
  44a6f4:	bl	44a630 <_obstack_memory_used@@Base+0x2c>
  44a6f8:	mov	x0, #0x0                   	// #0
  44a6fc:	bl	402530 <sbrk@plt>
  44a700:	adrp	x5, 48d000 <_obstack_memory_used@@Base+0x429fc>
  44a704:	add	x5, x5, #0x598
  44a708:	sub	x5, x0, x5
  44a70c:	b	44a6b4 <_obstack_memory_used@@Base+0xb0>
  44a710:	stp	x29, x30, [sp, #-32]!
  44a714:	mov	x29, sp
  44a718:	str	x19, [sp, #16]
  44a71c:	cmp	x0, #0x0
  44a720:	csinc	x19, x0, xzr, ne  // ne = any
  44a724:	mov	x0, x19
  44a728:	bl	402670 <malloc@plt>
  44a72c:	cbz	x0, 44a73c <_obstack_memory_used@@Base+0x138>
  44a730:	ldr	x19, [sp, #16]
  44a734:	ldp	x29, x30, [sp], #32
  44a738:	ret
  44a73c:	mov	x0, x19
  44a740:	bl	44a68c <_obstack_memory_used@@Base+0x88>
  44a744:	stp	x29, x30, [sp, #-32]!
  44a748:	mov	x29, sp
  44a74c:	stp	x19, x20, [sp, #16]
  44a750:	mov	x20, x0
  44a754:	mov	x19, x1
  44a758:	cmp	x0, #0x0
  44a75c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  44a760:	b.ne	44a76c <_obstack_memory_used@@Base+0x168>  // b.any
  44a764:	mov	x19, #0x1                   	// #1
  44a768:	mov	x20, x19
  44a76c:	mov	x1, x19
  44a770:	mov	x0, x20
  44a774:	bl	402710 <calloc@plt>
  44a778:	cbz	x0, 44a788 <_obstack_memory_used@@Base+0x184>
  44a77c:	ldp	x19, x20, [sp, #16]
  44a780:	ldp	x29, x30, [sp], #32
  44a784:	ret
  44a788:	mul	x0, x20, x19
  44a78c:	bl	44a68c <_obstack_memory_used@@Base+0x88>
  44a790:	stp	x29, x30, [sp, #-32]!
  44a794:	mov	x29, sp
  44a798:	str	x19, [sp, #16]
  44a79c:	cmp	x1, #0x0
  44a7a0:	csinc	x19, x1, xzr, ne  // ne = any
  44a7a4:	cbz	x0, 44a7c0 <_obstack_memory_used@@Base+0x1bc>
  44a7a8:	mov	x1, x19
  44a7ac:	bl	402750 <realloc@plt>
  44a7b0:	cbz	x0, 44a7cc <_obstack_memory_used@@Base+0x1c8>
  44a7b4:	ldr	x19, [sp, #16]
  44a7b8:	ldp	x29, x30, [sp], #32
  44a7bc:	ret
  44a7c0:	mov	x0, x19
  44a7c4:	bl	402670 <malloc@plt>
  44a7c8:	b	44a7b0 <_obstack_memory_used@@Base+0x1ac>
  44a7cc:	mov	x0, x19
  44a7d0:	bl	44a68c <_obstack_memory_used@@Base+0x88>
  44a7d4:	stp	x29, x30, [sp, #-48]!
  44a7d8:	mov	x29, sp
  44a7dc:	stp	x19, x20, [sp, #16]
  44a7e0:	stp	x21, x22, [sp, #32]
  44a7e4:	mov	x22, x0
  44a7e8:	mov	x19, x1
  44a7ec:	mov	x20, x2
  44a7f0:	mov	x0, x2
  44a7f4:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  44a7f8:	mov	x21, x0
  44a7fc:	cmp	x20, x19
  44a800:	b.hi	44a824 <_obstack_memory_used@@Base+0x220>  // b.pmore
  44a804:	mov	x2, x19
  44a808:	mov	x1, x22
  44a80c:	mov	x0, x21
  44a810:	bl	402490 <memcpy@plt>
  44a814:	ldp	x19, x20, [sp, #16]
  44a818:	ldp	x21, x22, [sp, #32]
  44a81c:	ldp	x29, x30, [sp], #48
  44a820:	ret
  44a824:	sub	x2, x20, x19
  44a828:	mov	w1, #0x0                   	// #0
  44a82c:	add	x0, x0, x19
  44a830:	bl	4026f0 <memset@plt>
  44a834:	b	44a804 <_obstack_memory_used@@Base+0x200>
  44a838:	stp	x29, x30, [sp, #-32]!
  44a83c:	mov	x29, sp
  44a840:	stp	x19, x20, [sp, #16]
  44a844:	mov	x20, x0
  44a848:	bl	4024f0 <strlen@plt>
  44a84c:	add	x19, x0, #0x1
  44a850:	mov	x0, x19
  44a854:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  44a858:	mov	x2, x19
  44a85c:	mov	x1, x20
  44a860:	bl	402490 <memcpy@plt>
  44a864:	ldp	x19, x20, [sp, #16]
  44a868:	ldp	x29, x30, [sp], #32
  44a86c:	ret
  44a870:	stp	x29, x30, [sp, #-32]!
  44a874:	mov	x29, sp
  44a878:	stp	x19, x20, [sp, #16]
  44a87c:	mov	w20, w0
  44a880:	bl	402790 <strerror@plt>
  44a884:	cbz	x0, 44a894 <_obstack_memory_used@@Base+0x290>
  44a888:	ldp	x19, x20, [sp, #16]
  44a88c:	ldp	x29, x30, [sp], #32
  44a890:	ret
  44a894:	adrp	x19, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44a898:	add	x19, x19, #0xa80
  44a89c:	mov	w2, w20
  44a8a0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44a8a4:	add	x1, x1, #0xb0
  44a8a8:	mov	x0, x19
  44a8ac:	bl	4025b0 <sprintf@plt>
  44a8b0:	mov	x0, x19
  44a8b4:	b	44a888 <_obstack_memory_used@@Base+0x284>
  44a8b8:	stp	x29, x30, [sp, #-32]!
  44a8bc:	mov	x29, sp
  44a8c0:	stp	x19, x20, [sp, #16]
  44a8c4:	mov	x20, x0
  44a8c8:	bl	402540 <strnlen@plt>
  44a8cc:	mov	x19, x0
  44a8d0:	add	x0, x0, #0x1
  44a8d4:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  44a8d8:	strb	wzr, [x0, x19]
  44a8dc:	mov	x2, x19
  44a8e0:	mov	x1, x20
  44a8e4:	bl	402490 <memcpy@plt>
  44a8e8:	ldp	x19, x20, [sp, #16]
  44a8ec:	ldp	x29, x30, [sp], #32
  44a8f0:	ret
  44a8f4:	stp	x29, x30, [sp, #-80]!
  44a8f8:	mov	x29, sp
  44a8fc:	stp	x19, x20, [sp, #16]
  44a900:	str	x21, [sp, #32]
  44a904:	mov	x21, x0
  44a908:	mov	x19, x1
  44a90c:	ldp	x2, x3, [x1]
  44a910:	stp	x2, x3, [sp, #48]
  44a914:	ldp	x2, x3, [x1, #16]
  44a918:	stp	x2, x3, [sp, #64]
  44a91c:	add	x1, sp, #0x30
  44a920:	bl	44a960 <_obstack_memory_used@@Base+0x35c>
  44a924:	sxtw	x0, w0
  44a928:	bl	44a710 <_obstack_memory_used@@Base+0x10c>
  44a92c:	mov	x20, x0
  44a930:	ldp	x2, x3, [x19]
  44a934:	stp	x2, x3, [sp, #48]
  44a938:	ldp	x2, x3, [x19, #16]
  44a93c:	stp	x2, x3, [sp, #64]
  44a940:	add	x2, sp, #0x30
  44a944:	mov	x1, x21
  44a948:	bl	4029b0 <vsprintf@plt>
  44a94c:	mov	x0, x20
  44a950:	ldp	x19, x20, [sp, #16]
  44a954:	ldr	x21, [sp, #32]
  44a958:	ldp	x29, x30, [sp], #80
  44a95c:	ret
  44a960:	stp	x29, x30, [sp, #-112]!
  44a964:	mov	x29, sp
  44a968:	stp	x19, x20, [sp, #16]
  44a96c:	stp	x21, x22, [sp, #32]
  44a970:	stp	x23, x24, [sp, #48]
  44a974:	mov	x19, x1
  44a978:	str	x0, [sp, #104]
  44a97c:	bl	4024f0 <strlen@plt>
  44a980:	add	w23, w0, #0x1
  44a984:	ldp	x0, x1, [x19]
  44a988:	stp	x0, x1, [sp, #72]
  44a98c:	ldp	x0, x1, [x19, #16]
  44a990:	stp	x0, x1, [sp, #88]
  44a994:	adrp	x22, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44a998:	add	x22, x22, #0xc8
  44a99c:	adrp	x21, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44a9a0:	add	x21, x21, #0xd0
  44a9a4:	ldr	x0, [sp, #104]
  44a9a8:	ldrb	w1, [x0]
  44a9ac:	cbz	w1, 44aca8 <_obstack_memory_used@@Base+0x6a4>
  44a9b0:	add	x1, x0, #0x1
  44a9b4:	str	x1, [sp, #104]
  44a9b8:	ldrb	w0, [x0]
  44a9bc:	cmp	w0, #0x25
  44a9c0:	b.ne	44a9a4 <_obstack_memory_used@@Base+0x3a0>  // b.any
  44a9c4:	ldr	x19, [sp, #104]
  44a9c8:	ldrb	w20, [x19]
  44a9cc:	mov	w1, w20
  44a9d0:	mov	x0, x22
  44a9d4:	bl	402940 <strchr@plt>
  44a9d8:	cbz	x0, 44a9e8 <_obstack_memory_used@@Base+0x3e4>
  44a9dc:	add	x19, x19, #0x1
  44a9e0:	str	x19, [sp, #104]
  44a9e4:	b	44a9c4 <_obstack_memory_used@@Base+0x3c0>
  44a9e8:	cmp	w20, #0x2a
  44a9ec:	b.ne	44aa80 <_obstack_memory_used@@Base+0x47c>  // b.any
  44a9f0:	add	x19, x19, #0x1
  44a9f4:	str	x19, [sp, #104]
  44a9f8:	ldr	w1, [sp, #96]
  44a9fc:	ldr	x0, [sp, #72]
  44aa00:	tbnz	w1, #31, 44aa54 <_obstack_memory_used@@Base+0x450>
  44aa04:	add	x1, x0, #0xb
  44aa08:	and	x1, x1, #0xfffffffffffffff8
  44aa0c:	str	x1, [sp, #72]
  44aa10:	ldr	w24, [x0]
  44aa14:	cmp	w24, #0x0
  44aa18:	cneg	w24, w24, lt  // lt = tstop
  44aa1c:	add	w24, w24, w23
  44aa20:	ldr	x1, [sp, #104]
  44aa24:	ldrb	w0, [x1]
  44aa28:	cmp	w0, #0x2e
  44aa2c:	b.eq	44aa98 <_obstack_memory_used@@Base+0x494>  // b.none
  44aa30:	ldr	x20, [sp, #104]
  44aa34:	ldrb	w19, [x20]
  44aa38:	mov	w1, w19
  44aa3c:	mov	x0, x21
  44aa40:	bl	402940 <strchr@plt>
  44aa44:	cbz	x0, 44ab20 <_obstack_memory_used@@Base+0x51c>
  44aa48:	add	x20, x20, #0x1
  44aa4c:	str	x20, [sp, #104]
  44aa50:	b	44aa30 <_obstack_memory_used@@Base+0x42c>
  44aa54:	add	w2, w1, #0x8
  44aa58:	str	w2, [sp, #96]
  44aa5c:	cmp	w2, #0x0
  44aa60:	b.le	44aa74 <_obstack_memory_used@@Base+0x470>
  44aa64:	add	x1, x0, #0xb
  44aa68:	and	x1, x1, #0xfffffffffffffff8
  44aa6c:	str	x1, [sp, #72]
  44aa70:	b	44aa10 <_obstack_memory_used@@Base+0x40c>
  44aa74:	ldr	x0, [sp, #80]
  44aa78:	add	x0, x0, w1, sxtw
  44aa7c:	b	44aa10 <_obstack_memory_used@@Base+0x40c>
  44aa80:	mov	w2, #0xa                   	// #10
  44aa84:	add	x1, sp, #0x68
  44aa88:	mov	x0, x19
  44aa8c:	bl	4024e0 <strtoul@plt>
  44aa90:	add	w24, w23, w0
  44aa94:	b	44aa20 <_obstack_memory_used@@Base+0x41c>
  44aa98:	add	x0, x1, #0x1
  44aa9c:	str	x0, [sp, #104]
  44aaa0:	ldrb	w2, [x1, #1]
  44aaa4:	cmp	w2, #0x2a
  44aaa8:	b.ne	44ab0c <_obstack_memory_used@@Base+0x508>  // b.any
  44aaac:	add	x1, x1, #0x2
  44aab0:	str	x1, [sp, #104]
  44aab4:	ldr	w1, [sp, #96]
  44aab8:	ldr	x0, [sp, #72]
  44aabc:	tbnz	w1, #31, 44aae0 <_obstack_memory_used@@Base+0x4dc>
  44aac0:	add	x1, x0, #0xb
  44aac4:	and	x1, x1, #0xfffffffffffffff8
  44aac8:	str	x1, [sp, #72]
  44aacc:	ldr	w0, [x0]
  44aad0:	cmp	w0, #0x0
  44aad4:	cneg	w0, w0, lt  // lt = tstop
  44aad8:	add	w24, w24, w0
  44aadc:	b	44aa30 <_obstack_memory_used@@Base+0x42c>
  44aae0:	add	w2, w1, #0x8
  44aae4:	str	w2, [sp, #96]
  44aae8:	cmp	w2, #0x0
  44aaec:	b.le	44ab00 <_obstack_memory_used@@Base+0x4fc>
  44aaf0:	add	x1, x0, #0xb
  44aaf4:	and	x1, x1, #0xfffffffffffffff8
  44aaf8:	str	x1, [sp, #72]
  44aafc:	b	44aacc <_obstack_memory_used@@Base+0x4c8>
  44ab00:	ldr	x0, [sp, #80]
  44ab04:	add	x0, x0, w1, sxtw
  44ab08:	b	44aacc <_obstack_memory_used@@Base+0x4c8>
  44ab0c:	mov	w2, #0xa                   	// #10
  44ab10:	add	x1, sp, #0x68
  44ab14:	bl	4024e0 <strtoul@plt>
  44ab18:	add	w24, w24, w0
  44ab1c:	b	44aa30 <_obstack_memory_used@@Base+0x42c>
  44ab20:	add	w23, w24, #0x1e
  44ab24:	cmp	w19, #0x67
  44ab28:	b.ls	44ab88 <_obstack_memory_used@@Base+0x584>  // b.plast
  44ab2c:	sub	w19, w19, #0x69
  44ab30:	and	w19, w19, #0xff
  44ab34:	cmp	w19, #0xf
  44ab38:	b.hi	44ab90 <_obstack_memory_used@@Base+0x58c>  // b.pmore
  44ab3c:	mov	x1, #0x1                   	// #1
  44ab40:	lsl	x1, x1, x19
  44ab44:	mov	x0, #0x9041                	// #36929
  44ab48:	tst	x1, x0
  44ab4c:	b.ne	44abc4 <_obstack_memory_used@@Base+0x5c0>  // b.any
  44ab50:	mov	x0, #0xa0                  	// #160
  44ab54:	tst	x1, x0
  44ab58:	b.ne	44ac6c <_obstack_memory_used@@Base+0x668>  // b.any
  44ab5c:	tbz	w1, #10, 44ab90 <_obstack_memory_used@@Base+0x58c>
  44ab60:	ldr	w1, [sp, #96]
  44ab64:	ldr	x0, [sp, #72]
  44ab68:	tbnz	w1, #31, 44ac40 <_obstack_memory_used@@Base+0x63c>
  44ab6c:	add	x1, x0, #0xf
  44ab70:	and	x1, x1, #0xfffffffffffffff8
  44ab74:	str	x1, [sp, #72]
  44ab78:	ldr	x0, [x0]
  44ab7c:	bl	4024f0 <strlen@plt>
  44ab80:	add	w23, w23, w0
  44ab84:	b	44ab90 <_obstack_memory_used@@Base+0x58c>
  44ab88:	cmp	w19, #0x44
  44ab8c:	b.hi	44ab9c <_obstack_memory_used@@Base+0x598>  // b.pmore
  44ab90:	add	x20, x20, #0x1
  44ab94:	str	x20, [sp, #104]
  44ab98:	b	44a9a4 <_obstack_memory_used@@Base+0x3a0>
  44ab9c:	sub	w19, w19, #0x45
  44aba0:	mov	x0, #0x1                   	// #1
  44aba4:	lsl	x19, x0, x19
  44aba8:	mov	x0, #0x5                   	// #5
  44abac:	movk	x0, #0x7, lsl #32
  44abb0:	tst	x19, x0
  44abb4:	b.ne	44ac00 <_obstack_memory_used@@Base+0x5fc>  // b.any
  44abb8:	mov	x0, #0xc0080000            	// #3221749760
  44abbc:	tst	x19, x0
  44abc0:	b.eq	44ab90 <_obstack_memory_used@@Base+0x58c>  // b.none
  44abc4:	ldr	w1, [sp, #96]
  44abc8:	ldr	x0, [sp, #72]
  44abcc:	tbnz	w1, #31, 44abe0 <_obstack_memory_used@@Base+0x5dc>
  44abd0:	add	x0, x0, #0xb
  44abd4:	and	x0, x0, #0xfffffffffffffff8
  44abd8:	str	x0, [sp, #72]
  44abdc:	b	44ab90 <_obstack_memory_used@@Base+0x58c>
  44abe0:	add	w1, w1, #0x8
  44abe4:	str	w1, [sp, #96]
  44abe8:	cmp	w1, #0x0
  44abec:	b.le	44ab90 <_obstack_memory_used@@Base+0x58c>
  44abf0:	add	x0, x0, #0xb
  44abf4:	and	x0, x0, #0xfffffffffffffff8
  44abf8:	str	x0, [sp, #72]
  44abfc:	b	44ab90 <_obstack_memory_used@@Base+0x58c>
  44ac00:	ldr	w1, [sp, #100]
  44ac04:	ldr	x0, [sp, #72]
  44ac08:	tbnz	w1, #31, 44ac20 <_obstack_memory_used@@Base+0x61c>
  44ac0c:	add	x0, x0, #0xf
  44ac10:	and	x0, x0, #0xfffffffffffffff8
  44ac14:	str	x0, [sp, #72]
  44ac18:	add	w23, w24, #0x151
  44ac1c:	b	44ab90 <_obstack_memory_used@@Base+0x58c>
  44ac20:	add	w1, w1, #0x10
  44ac24:	str	w1, [sp, #100]
  44ac28:	cmp	w1, #0x0
  44ac2c:	b.le	44ac18 <_obstack_memory_used@@Base+0x614>
  44ac30:	add	x0, x0, #0xf
  44ac34:	and	x0, x0, #0xfffffffffffffff8
  44ac38:	str	x0, [sp, #72]
  44ac3c:	b	44ac18 <_obstack_memory_used@@Base+0x614>
  44ac40:	add	w2, w1, #0x8
  44ac44:	str	w2, [sp, #96]
  44ac48:	cmp	w2, #0x0
  44ac4c:	b.le	44ac60 <_obstack_memory_used@@Base+0x65c>
  44ac50:	add	x1, x0, #0xf
  44ac54:	and	x1, x1, #0xfffffffffffffff8
  44ac58:	str	x1, [sp, #72]
  44ac5c:	b	44ab78 <_obstack_memory_used@@Base+0x574>
  44ac60:	ldr	x0, [sp, #80]
  44ac64:	add	x0, x0, w1, sxtw
  44ac68:	b	44ab78 <_obstack_memory_used@@Base+0x574>
  44ac6c:	ldr	w1, [sp, #96]
  44ac70:	ldr	x0, [sp, #72]
  44ac74:	tbnz	w1, #31, 44ac88 <_obstack_memory_used@@Base+0x684>
  44ac78:	add	x0, x0, #0xf
  44ac7c:	and	x0, x0, #0xfffffffffffffff8
  44ac80:	str	x0, [sp, #72]
  44ac84:	b	44ab90 <_obstack_memory_used@@Base+0x58c>
  44ac88:	add	w1, w1, #0x8
  44ac8c:	str	w1, [sp, #96]
  44ac90:	cmp	w1, #0x0
  44ac94:	b.le	44ab90 <_obstack_memory_used@@Base+0x58c>
  44ac98:	add	x0, x0, #0xf
  44ac9c:	and	x0, x0, #0xfffffffffffffff8
  44aca0:	str	x0, [sp, #72]
  44aca4:	b	44ab90 <_obstack_memory_used@@Base+0x58c>
  44aca8:	mov	w0, w23
  44acac:	ldp	x19, x20, [sp, #16]
  44acb0:	ldp	x21, x22, [sp, #32]
  44acb4:	ldp	x23, x24, [sp, #48]
  44acb8:	ldp	x29, x30, [sp], #112
  44acbc:	ret
  44acc0:	b	44b578 <_obstack_memory_used@@Base+0xf74>
  44acc4:	nop
  44acc8:	b	44b580 <_obstack_memory_used@@Base+0xf7c>
  44accc:	nop
  44acd0:	stp	x29, x30, [sp, #-64]!
  44acd4:	mov	x29, sp
  44acd8:	str	x23, [sp, #48]
  44acdc:	mov	x23, x0
  44ace0:	ldarb	w0, [x0]
  44ace4:	tst	w0, #0xff
  44ace8:	b.ne	44ad44 <_obstack_memory_used@@Base+0x740>  // b.any
  44acec:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44acf0:	ldr	x0, [x0, #3880]
  44acf4:	cbz	x0, 44ad54 <_obstack_memory_used@@Base+0x750>
  44acf8:	stp	x19, x20, [sp, #16]
  44acfc:	mov	w19, #0x100                 	// #256
  44ad00:	mov	w20, #0x1                   	// #1
  44ad04:	stp	x21, x22, [sp, #32]
  44ad08:	mov	w21, w19
  44ad0c:	ldaxr	w0, [x23]
  44ad10:	cbnz	w0, 44ad1c <_obstack_memory_used@@Base+0x718>
  44ad14:	stlxr	w1, w19, [x23]
  44ad18:	cbnz	w1, 44ad0c <_obstack_memory_used@@Base+0x708>
  44ad1c:	cmp	w0, #0x0
  44ad20:	b.ne	44ad7c <_obstack_memory_used@@Base+0x778>  // b.any
  44ad24:	mov	w0, #0x1                   	// #1
  44ad28:	ldp	x19, x20, [sp, #16]
  44ad2c:	ldp	x21, x22, [sp, #32]
  44ad30:	ldr	x23, [sp, #48]
  44ad34:	ldp	x29, x30, [sp], #64
  44ad38:	ret
  44ad3c:	ldp	x19, x20, [sp, #16]
  44ad40:	ldp	x21, x22, [sp, #32]
  44ad44:	mov	w0, #0x0                   	// #0
  44ad48:	ldr	x23, [sp, #48]
  44ad4c:	ldp	x29, x30, [sp], #64
  44ad50:	ret
  44ad54:	ldrb	w0, [x23]
  44ad58:	cbnz	w0, 44ad44 <_obstack_memory_used@@Base+0x740>
  44ad5c:	ldrb	w0, [x23, #1]
  44ad60:	cbnz	w0, 44adf4 <_obstack_memory_used@@Base+0x7f0>
  44ad64:	mov	w2, #0x1                   	// #1
  44ad68:	strb	w2, [x23, #1]
  44ad6c:	mov	w0, #0x1                   	// #1
  44ad70:	ldr	x23, [sp, #48]
  44ad74:	ldp	x29, x30, [sp], #64
  44ad78:	ret
  44ad7c:	orr	w22, w19, #0x10000
  44ad80:	mov	w3, w0
  44ad84:	cmp	w20, w3
  44ad88:	b.eq	44ad3c <_obstack_memory_used@@Base+0x738>  // b.none
  44ad8c:	cmp	w19, w3
  44ad90:	b.ne	44adb0 <_obstack_memory_used@@Base+0x7ac>  // b.any
  44ad94:	mov	w3, w22
  44ad98:	ldaxr	w2, [x23]
  44ad9c:	cmp	w2, w0
  44ada0:	b.ne	44adac <_obstack_memory_used@@Base+0x7a8>  // b.any
  44ada4:	stlxr	w1, w22, [x23]
  44ada8:	cbnz	w1, 44ad98 <_obstack_memory_used@@Base+0x794>
  44adac:	b.ne	44ade4 <_obstack_memory_used@@Base+0x7e0>  // b.any
  44adb0:	mov	x1, x23
  44adb4:	mov	w4, #0x0                   	// #0
  44adb8:	mov	w2, #0x0                   	// #0
  44adbc:	mov	x0, #0x62                  	// #98
  44adc0:	bl	402af0 <syscall@plt>
  44adc4:	ldaxr	w0, [x23]
  44adc8:	cbnz	w0, 44add4 <_obstack_memory_used@@Base+0x7d0>
  44adcc:	stlxr	w1, w21, [x23]
  44add0:	cbnz	w1, 44adc4 <_obstack_memory_used@@Base+0x7c0>
  44add4:	cmp	w0, #0x0
  44add8:	mov	w3, w0
  44addc:	b.eq	44ad24 <_obstack_memory_used@@Base+0x720>  // b.none
  44ade0:	b	44ad84 <_obstack_memory_used@@Base+0x780>
  44ade4:	cmp	w20, w2
  44ade8:	b.eq	44ad3c <_obstack_memory_used@@Base+0x738>  // b.none
  44adec:	cbnz	w2, 44adb0 <_obstack_memory_used@@Base+0x7ac>
  44adf0:	b	44adc4 <_obstack_memory_used@@Base+0x7c0>
  44adf4:	mov	x0, #0x8                   	// #8
  44adf8:	stp	x19, x20, [sp, #16]
  44adfc:	stp	x21, x22, [sp, #32]
  44ae00:	bl	44b8f0 <_obstack_memory_used@@Base+0x12ec>
  44ae04:	mov	x19, x0
  44ae08:	bl	44aee8 <_obstack_memory_used@@Base+0x8e4>
  44ae0c:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44ae10:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44ae14:	mov	x0, x19
  44ae18:	ldr	x2, [x2, #4016]
  44ae1c:	ldr	x1, [x1, #3896]
  44ae20:	bl	44c708 <_obstack_memory_used@@Base+0x2104>
  44ae24:	nop
  44ae28:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44ae2c:	ldr	x1, [x1, #3880]
  44ae30:	cbnz	x1, 44ae3c <_obstack_memory_used@@Base+0x838>
  44ae34:	strb	wzr, [x0, #1]
  44ae38:	ret
  44ae3c:	ldaxr	w1, [x0]
  44ae40:	stlxr	w2, wzr, [x0]
  44ae44:	cbnz	w2, 44ae3c <_obstack_memory_used@@Base+0x838>
  44ae48:	tbz	w1, #16, 44ae38 <_obstack_memory_used@@Base+0x834>
  44ae4c:	mov	x1, x0
  44ae50:	mov	w3, #0x7fffffff            	// #2147483647
  44ae54:	mov	w2, #0x1                   	// #1
  44ae58:	mov	x0, #0x62                  	// #98
  44ae5c:	b	402af0 <syscall@plt>
  44ae60:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44ae64:	ldr	x1, [x1, #3880]
  44ae68:	cbz	x1, 44ae84 <_obstack_memory_used@@Base+0x880>
  44ae6c:	mov	w2, #0x1                   	// #1
  44ae70:	ldaxr	w1, [x0]
  44ae74:	stlxr	w3, w2, [x0]
  44ae78:	cbnz	w3, 44ae70 <_obstack_memory_used@@Base+0x86c>
  44ae7c:	tbnz	w1, #16, 44ae94 <_obstack_memory_used@@Base+0x890>
  44ae80:	ret
  44ae84:	strb	wzr, [x0, #1]
  44ae88:	mov	w1, #0x1                   	// #1
  44ae8c:	stlrb	w1, [x0]
  44ae90:	ret
  44ae94:	mov	x1, x0
  44ae98:	mov	w3, #0x7fffffff            	// #2147483647
  44ae9c:	mov	x0, #0x62                  	// #98
  44aea0:	b	402af0 <syscall@plt>
  44aea4:	nop
  44aea8:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44aeac:	ldr	x1, [x1, #4056]
  44aeb0:	add	x1, x1, #0x10
  44aeb4:	str	x1, [x0]
  44aeb8:	b	44ba28 <_obstack_memory_used@@Base+0x1424>
  44aebc:	nop
  44aec0:	stp	x29, x30, [sp, #-32]!
  44aec4:	mov	x29, sp
  44aec8:	str	x19, [sp, #16]
  44aecc:	mov	x19, x0
  44aed0:	bl	44aea8 <_obstack_memory_used@@Base+0x8a4>
  44aed4:	mov	x0, x19
  44aed8:	mov	x1, #0x8                   	// #8
  44aedc:	ldr	x19, [sp, #16]
  44aee0:	ldp	x29, x30, [sp], #32
  44aee4:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44aee8:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44aeec:	ldr	x1, [x1, #4056]
  44aef0:	add	x1, x1, #0x10
  44aef4:	str	x1, [x0]
  44aef8:	ret
  44aefc:	nop
  44af00:	stp	x29, x30, [sp, #-32]!
  44af04:	cmp	x0, #0x0
  44af08:	mov	x29, sp
  44af0c:	str	x19, [sp, #16]
  44af10:	csinc	x19, x0, xzr, ne  // ne = any
  44af14:	mov	x0, x19
  44af18:	bl	402670 <malloc@plt>
  44af1c:	cbz	x0, 44af2c <_obstack_memory_used@@Base+0x928>
  44af20:	ldr	x19, [sp, #16]
  44af24:	ldp	x29, x30, [sp], #32
  44af28:	ret
  44af2c:	bl	44c7f8 <_obstack_memory_used@@Base+0x21f4>
  44af30:	cbz	x0, 44af3c <_obstack_memory_used@@Base+0x938>
  44af34:	blr	x0
  44af38:	b	44af14 <_obstack_memory_used@@Base+0x910>
  44af3c:	mov	x0, #0x8                   	// #8
  44af40:	bl	44b8f0 <_obstack_memory_used@@Base+0x12ec>
  44af44:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44af48:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44af4c:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44af50:	ldr	x3, [x3, #3992]
  44af54:	ldr	x2, [x2, #3920]
  44af58:	add	x3, x3, #0x10
  44af5c:	ldr	x1, [x1, #3904]
  44af60:	str	x3, [x0]
  44af64:	bl	44c708 <_obstack_memory_used@@Base+0x2104>
  44af68:	b	44af00 <_obstack_memory_used@@Base+0x8fc>
  44af6c:	nop
  44af70:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44af74:	ldr	x1, [x1, #4008]
  44af78:	add	x1, x1, #0x10
  44af7c:	str	x1, [x0]
  44af80:	b	44b338 <_obstack_memory_used@@Base+0xd34>
  44af84:	nop
  44af88:	stp	x29, x30, [sp, #-32]!
  44af8c:	mov	x29, sp
  44af90:	str	x19, [sp, #16]
  44af94:	mov	x19, x0
  44af98:	bl	44af70 <_obstack_memory_used@@Base+0x96c>
  44af9c:	mov	x0, x19
  44afa0:	mov	x1, #0x18                  	// #24
  44afa4:	ldr	x19, [sp, #16]
  44afa8:	ldp	x29, x30, [sp], #32
  44afac:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44afb0:	stp	x29, x30, [sp, #-64]!
  44afb4:	cmp	x4, x2
  44afb8:	mov	x29, sp
  44afbc:	stp	x19, x20, [sp, #16]
  44afc0:	mov	x19, x0
  44afc4:	mov	x20, x1
  44afc8:	b.eq	44afec <_obstack_memory_used@@Base+0x9e8>  // b.none
  44afcc:	ldr	x0, [x19, #16]
  44afd0:	mov	x1, x20
  44afd4:	ldp	x19, x20, [sp, #16]
  44afd8:	ldr	x5, [x0]
  44afdc:	ldr	x5, [x5, #64]
  44afe0:	ldp	x29, x30, [sp], #64
  44afe4:	mov	x16, x5
  44afe8:	br	x16
  44afec:	ldr	x1, [x3, #8]
  44aff0:	ldr	x0, [x0, #8]
  44aff4:	cmp	x0, x1
  44aff8:	b.eq	44b020 <_obstack_memory_used@@Base+0xa1c>  // b.none
  44affc:	ldrb	w5, [x0]
  44b000:	cmp	w5, #0x2a
  44b004:	b.eq	44afcc <_obstack_memory_used@@Base+0x9c8>  // b.none
  44b008:	stp	x2, x3, [sp, #40]
  44b00c:	str	x4, [sp, #56]
  44b010:	bl	402890 <strcmp@plt>
  44b014:	ldp	x2, x3, [sp, #40]
  44b018:	ldr	x4, [sp, #56]
  44b01c:	cbnz	w0, 44afcc <_obstack_memory_used@@Base+0x9c8>
  44b020:	mov	w0, #0x6                   	// #6
  44b024:	ldp	x19, x20, [sp, #16]
  44b028:	ldp	x29, x30, [sp], #64
  44b02c:	ret
  44b030:	stp	x29, x30, [sp, #-96]!
  44b034:	mov	x29, sp
  44b038:	stp	x21, x22, [sp, #32]
  44b03c:	mov	x22, x3
  44b040:	mov	x21, x1
  44b044:	stp	x25, x26, [sp, #64]
  44b048:	mov	w26, w2
  44b04c:	ldr	x25, [x0, #8]
  44b050:	stp	x19, x20, [sp, #16]
  44b054:	mov	x19, x4
  44b058:	ldr	x3, [x3, #8]
  44b05c:	stp	x23, x24, [sp, #48]
  44b060:	mov	x20, x7
  44b064:	mov	x23, x6
  44b068:	cmp	x25, x3
  44b06c:	b.eq	44b09c <_obstack_memory_used@@Base+0xa98>  // b.none
  44b070:	stp	x27, x28, [sp, #80]
  44b074:	mov	x24, x5
  44b078:	mov	x27, x0
  44b07c:	ldrb	w28, [x25]
  44b080:	cmp	w28, #0x2a
  44b084:	b.eq	44b0d8 <_obstack_memory_used@@Base+0xad4>  // b.none
  44b088:	mov	x1, x3
  44b08c:	mov	x0, x25
  44b090:	bl	402890 <strcmp@plt>
  44b094:	cbnz	w0, 44b0d8 <_obstack_memory_used@@Base+0xad4>
  44b098:	ldp	x27, x28, [sp, #80]
  44b09c:	str	x19, [x20]
  44b0a0:	str	w26, [x20, #8]
  44b0a4:	tbnz	x21, #63, 44b128 <_obstack_memory_used@@Base+0xb24>
  44b0a8:	add	x1, x19, x21
  44b0ac:	mov	w2, #0x6                   	// #6
  44b0b0:	cmp	x23, x1
  44b0b4:	mov	w0, #0x0                   	// #0
  44b0b8:	csinc	w2, w2, wzr, eq  // eq = none
  44b0bc:	str	w2, [x20, #16]
  44b0c0:	ldp	x19, x20, [sp, #16]
  44b0c4:	ldp	x21, x22, [sp, #32]
  44b0c8:	ldp	x23, x24, [sp, #48]
  44b0cc:	ldp	x25, x26, [sp, #64]
  44b0d0:	ldp	x29, x30, [sp], #96
  44b0d4:	ret
  44b0d8:	cmp	x19, x23
  44b0dc:	b.eq	44b140 <_obstack_memory_used@@Base+0xb3c>  // b.none
  44b0e0:	ldr	x0, [x27, #16]
  44b0e4:	mov	x7, x20
  44b0e8:	mov	x6, x23
  44b0ec:	mov	x5, x24
  44b0f0:	mov	x4, x19
  44b0f4:	mov	x3, x22
  44b0f8:	ldr	x8, [x0]
  44b0fc:	mov	w2, w26
  44b100:	mov	x1, x21
  44b104:	ldp	x19, x20, [sp, #16]
  44b108:	ldp	x21, x22, [sp, #32]
  44b10c:	ldp	x23, x24, [sp, #48]
  44b110:	ldp	x25, x26, [sp, #64]
  44b114:	ldp	x27, x28, [sp, #80]
  44b118:	ldp	x29, x30, [sp], #96
  44b11c:	ldr	x8, [x8, #56]
  44b120:	mov	x16, x8
  44b124:	br	x16
  44b128:	cmn	x21, #0x2
  44b12c:	mov	w0, #0x0                   	// #0
  44b130:	b.ne	44b0c0 <_obstack_memory_used@@Base+0xabc>  // b.any
  44b134:	mov	w1, #0x1                   	// #1
  44b138:	str	w1, [x20, #16]
  44b13c:	b	44b0c0 <_obstack_memory_used@@Base+0xabc>
  44b140:	ldr	x1, [x24, #8]
  44b144:	cmp	x25, x1
  44b148:	b.eq	44b160 <_obstack_memory_used@@Base+0xb5c>  // b.none
  44b14c:	cmp	w28, #0x2a
  44b150:	b.eq	44b0e0 <_obstack_memory_used@@Base+0xadc>  // b.none
  44b154:	mov	x0, x25
  44b158:	bl	402890 <strcmp@plt>
  44b15c:	cbnz	w0, 44b0e0 <_obstack_memory_used@@Base+0xadc>
  44b160:	mov	w0, #0x0                   	// #0
  44b164:	ldp	x27, x28, [sp, #80]
  44b168:	str	w26, [x20, #12]
  44b16c:	b	44b0c0 <_obstack_memory_used@@Base+0xabc>
  44b170:	stp	x29, x30, [sp, #-48]!
  44b174:	mov	x29, sp
  44b178:	stp	x19, x20, [sp, #16]
  44b17c:	mov	x19, x1
  44b180:	mov	x20, x2
  44b184:	stp	x21, x22, [sp, #32]
  44b188:	mov	x22, x0
  44b18c:	mov	x21, x3
  44b190:	bl	44b458 <_obstack_memory_used@@Base+0xe54>
  44b194:	tst	w0, #0xff
  44b198:	b.ne	44b1c8 <_obstack_memory_used@@Base+0xbc4>  // b.any
  44b19c:	ldr	x0, [x22, #16]
  44b1a0:	mov	x3, x21
  44b1a4:	mov	x2, x20
  44b1a8:	mov	x1, x19
  44b1ac:	ldp	x19, x20, [sp, #16]
  44b1b0:	ldr	x4, [x0]
  44b1b4:	ldp	x21, x22, [sp, #32]
  44b1b8:	ldp	x29, x30, [sp], #48
  44b1bc:	ldr	x4, [x4, #48]
  44b1c0:	mov	x16, x4
  44b1c4:	br	x16
  44b1c8:	ldp	x19, x20, [sp, #16]
  44b1cc:	ldp	x21, x22, [sp, #32]
  44b1d0:	ldp	x29, x30, [sp], #48
  44b1d4:	ret
  44b1d8:	ret
  44b1dc:	nop
  44b1e0:	mov	w0, #0x0                   	// #0
  44b1e4:	ret
  44b1e8:	mov	w0, #0x0                   	// #0
  44b1ec:	ret
  44b1f0:	stp	x29, x30, [sp, #-32]!
  44b1f4:	mov	x29, sp
  44b1f8:	str	x19, [sp, #16]
  44b1fc:	mov	x19, x0
  44b200:	bl	44b1d8 <_obstack_memory_used@@Base+0xbd4>
  44b204:	mov	x0, x19
  44b208:	mov	x1, #0x10                  	// #16
  44b20c:	ldr	x19, [sp, #16]
  44b210:	ldp	x29, x30, [sp], #32
  44b214:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44b218:	ldr	x2, [x0, #8]
  44b21c:	ldr	x1, [x1, #8]
  44b220:	cmp	x2, x1
  44b224:	b.eq	44b25c <_obstack_memory_used@@Base+0xc58>  // b.none
  44b228:	ldrb	w3, [x2]
  44b22c:	mov	w0, #0x0                   	// #0
  44b230:	cmp	w3, #0x2a
  44b234:	b.eq	44b258 <_obstack_memory_used@@Base+0xc54>  // b.none
  44b238:	stp	x29, x30, [sp, #-16]!
  44b23c:	mov	x0, x2
  44b240:	mov	x29, sp
  44b244:	bl	402890 <strcmp@plt>
  44b248:	cmp	w0, #0x0
  44b24c:	cset	w0, eq  // eq = none
  44b250:	ldp	x29, x30, [sp], #16
  44b254:	ret
  44b258:	ret
  44b25c:	mov	w0, #0x1                   	// #1
  44b260:	ret
  44b264:	nop
  44b268:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44b26c:	add	x0, x0, #0x138
  44b270:	ret
  44b274:	nop
  44b278:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b27c:	ldr	x1, [x1, #3992]
  44b280:	add	x1, x1, #0x10
  44b284:	str	x1, [x0]
  44b288:	b	44ba28 <_obstack_memory_used@@Base+0x1424>
  44b28c:	nop
  44b290:	stp	x29, x30, [sp, #-32]!
  44b294:	mov	x29, sp
  44b298:	str	x19, [sp, #16]
  44b29c:	mov	x19, x0
  44b2a0:	bl	44b278 <_obstack_memory_used@@Base+0xc74>
  44b2a4:	mov	x0, x19
  44b2a8:	mov	x1, #0x8                   	// #8
  44b2ac:	ldr	x19, [sp, #16]
  44b2b0:	ldp	x29, x30, [sp], #32
  44b2b4:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44b2b8:	stp	x29, x30, [sp, #-64]!
  44b2bc:	mov	x29, sp
  44b2c0:	ldr	x4, [x0]
  44b2c4:	str	xzr, [sp, #40]
  44b2c8:	str	xzr, [sp, #56]
  44b2cc:	add	x3, sp, #0x28
  44b2d0:	ldr	x4, [x4, #48]
  44b2d4:	str	x19, [sp, #16]
  44b2d8:	mov	x19, x2
  44b2dc:	mov	x2, #0x1000000000          	// #68719476736
  44b2e0:	str	x2, [sp, #48]
  44b2e4:	ldr	x2, [x19]
  44b2e8:	blr	x4
  44b2ec:	ldr	w0, [sp, #48]
  44b2f0:	and	w0, w0, #0x6
  44b2f4:	cmp	w0, #0x6
  44b2f8:	b.ne	44b314 <_obstack_memory_used@@Base+0xd10>  // b.any
  44b2fc:	ldr	x1, [sp, #40]
  44b300:	str	x1, [x19]
  44b304:	mov	w0, #0x1                   	// #1
  44b308:	ldr	x19, [sp, #16]
  44b30c:	ldp	x29, x30, [sp], #64
  44b310:	ret
  44b314:	mov	w0, #0x0                   	// #0
  44b318:	ldr	x19, [sp, #16]
  44b31c:	ldp	x29, x30, [sp], #64
  44b320:	ret
  44b324:	nop
  44b328:	cmp	x4, x2
  44b32c:	mov	w0, #0x6                   	// #6
  44b330:	csinc	w0, w0, wzr, eq  // eq = none
  44b334:	ret
  44b338:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b33c:	ldr	x1, [x1, #4048]
  44b340:	add	x1, x1, #0x10
  44b344:	str	x1, [x0]
  44b348:	b	44b1d8 <_obstack_memory_used@@Base+0xbd4>
  44b34c:	nop
  44b350:	stp	x29, x30, [sp, #-32]!
  44b354:	mov	x29, sp
  44b358:	str	x19, [sp, #16]
  44b35c:	mov	x19, x0
  44b360:	bl	44b338 <_obstack_memory_used@@Base+0xd34>
  44b364:	mov	x0, x19
  44b368:	mov	x1, #0x10                  	// #16
  44b36c:	ldr	x19, [sp, #16]
  44b370:	ldp	x29, x30, [sp], #32
  44b374:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44b378:	stp	x29, x30, [sp, #-64]!
  44b37c:	cmp	x4, x6
  44b380:	mov	x29, sp
  44b384:	stp	x19, x20, [sp, #16]
  44b388:	mov	x20, x4
  44b38c:	mov	x19, x7
  44b390:	stp	x21, x22, [sp, #32]
  44b394:	mov	w21, w2
  44b398:	ldr	x22, [x0, #8]
  44b39c:	str	x23, [sp, #48]
  44b3a0:	mov	x23, x3
  44b3a4:	b.eq	44b3f4 <_obstack_memory_used@@Base+0xdf0>  // b.none
  44b3a8:	ldr	x1, [x3, #8]
  44b3ac:	cmp	x1, x22
  44b3b0:	b.eq	44b3cc <_obstack_memory_used@@Base+0xdc8>  // b.none
  44b3b4:	ldrb	w0, [x22]
  44b3b8:	cmp	w0, #0x2a
  44b3bc:	b.eq	44b3dc <_obstack_memory_used@@Base+0xdd8>  // b.none
  44b3c0:	mov	x0, x22
  44b3c4:	bl	402890 <strcmp@plt>
  44b3c8:	cbnz	w0, 44b3dc <_obstack_memory_used@@Base+0xdd8>
  44b3cc:	mov	w0, #0x1                   	// #1
  44b3d0:	str	x20, [x19]
  44b3d4:	str	w21, [x19, #8]
  44b3d8:	str	w0, [x19, #16]
  44b3dc:	mov	w0, #0x0                   	// #0
  44b3e0:	ldp	x19, x20, [sp, #16]
  44b3e4:	ldp	x21, x22, [sp, #32]
  44b3e8:	ldr	x23, [sp, #48]
  44b3ec:	ldp	x29, x30, [sp], #64
  44b3f0:	ret
  44b3f4:	ldr	x1, [x5, #8]
  44b3f8:	cmp	x1, x22
  44b3fc:	b.eq	44b438 <_obstack_memory_used@@Base+0xe34>  // b.none
  44b400:	ldrb	w0, [x22]
  44b404:	cmp	w0, #0x2a
  44b408:	b.eq	44b428 <_obstack_memory_used@@Base+0xe24>  // b.none
  44b40c:	mov	x0, x22
  44b410:	bl	402890 <strcmp@plt>
  44b414:	cbz	w0, 44b438 <_obstack_memory_used@@Base+0xe34>
  44b418:	ldr	x1, [x23, #8]
  44b41c:	cmp	x22, x1
  44b420:	b.ne	44b3c0 <_obstack_memory_used@@Base+0xdbc>  // b.any
  44b424:	b	44b3cc <_obstack_memory_used@@Base+0xdc8>
  44b428:	ldr	x0, [x3, #8]
  44b42c:	cmp	x0, x22
  44b430:	b.ne	44b3dc <_obstack_memory_used@@Base+0xdd8>  // b.any
  44b434:	b	44b3cc <_obstack_memory_used@@Base+0xdc8>
  44b438:	str	w21, [x19, #12]
  44b43c:	mov	w0, #0x0                   	// #0
  44b440:	ldp	x19, x20, [sp, #16]
  44b444:	ldp	x21, x22, [sp, #32]
  44b448:	ldr	x23, [sp, #48]
  44b44c:	ldp	x29, x30, [sp], #64
  44b450:	ret
  44b454:	nop
  44b458:	stp	x29, x30, [sp, #-48]!
  44b45c:	mov	x29, sp
  44b460:	ldr	x0, [x0, #8]
  44b464:	stp	x19, x20, [sp, #16]
  44b468:	mov	x20, x2
  44b46c:	ldr	x1, [x1, #8]
  44b470:	str	x21, [sp, #32]
  44b474:	mov	x19, x3
  44b478:	cmp	x0, x1
  44b47c:	b.eq	44b498 <_obstack_memory_used@@Base+0xe94>  // b.none
  44b480:	ldrb	w2, [x0]
  44b484:	mov	w21, #0x0                   	// #0
  44b488:	cmp	w2, #0x2a
  44b48c:	b.eq	44b4b0 <_obstack_memory_used@@Base+0xeac>  // b.none
  44b490:	bl	402890 <strcmp@plt>
  44b494:	cbnz	w0, 44b4b0 <_obstack_memory_used@@Base+0xeac>
  44b498:	mov	x0, #0x10                  	// #16
  44b49c:	mov	w1, #0x6                   	// #6
  44b4a0:	mov	w21, #0x1                   	// #1
  44b4a4:	str	x20, [x19]
  44b4a8:	str	w1, [x19, #8]
  44b4ac:	str	x0, [x19, #16]
  44b4b0:	mov	w0, w21
  44b4b4:	ldp	x19, x20, [sp, #16]
  44b4b8:	ldr	x21, [sp, #32]
  44b4bc:	ldp	x29, x30, [sp], #48
  44b4c0:	ret
  44b4c4:	nop
  44b4c8:	stp	x29, x30, [sp, #-48]!
  44b4cc:	mov	x29, sp
  44b4d0:	stp	x19, x20, [sp, #16]
  44b4d4:	mov	x20, x0
  44b4d8:	mov	x19, x1
  44b4dc:	ldr	x0, [x0, #8]
  44b4e0:	ldr	x1, [x1, #8]
  44b4e4:	cmp	x0, x1
  44b4e8:	b.eq	44b550 <_obstack_memory_used@@Base+0xf4c>  // b.none
  44b4ec:	stp	x21, x22, [sp, #32]
  44b4f0:	mov	x22, x2
  44b4f4:	mov	w21, w3
  44b4f8:	ldrb	w2, [x0]
  44b4fc:	cmp	w2, #0x2a
  44b500:	b.eq	44b520 <_obstack_memory_used@@Base+0xf1c>  // b.none
  44b504:	bl	402890 <strcmp@plt>
  44b508:	cbnz	w0, 44b520 <_obstack_memory_used@@Base+0xf1c>
  44b50c:	mov	w0, #0x1                   	// #1
  44b510:	ldp	x19, x20, [sp, #16]
  44b514:	ldp	x21, x22, [sp, #32]
  44b518:	ldp	x29, x30, [sp], #48
  44b51c:	ret
  44b520:	cmp	w21, #0x3
  44b524:	b.hi	44b560 <_obstack_memory_used@@Base+0xf5c>  // b.pmore
  44b528:	ldr	x3, [x19]
  44b52c:	mov	x2, x22
  44b530:	mov	x1, x20
  44b534:	mov	x0, x19
  44b538:	ldp	x19, x20, [sp, #16]
  44b53c:	ldp	x21, x22, [sp, #32]
  44b540:	ldp	x29, x30, [sp], #48
  44b544:	ldr	x3, [x3, #40]
  44b548:	mov	x16, x3
  44b54c:	br	x16
  44b550:	mov	w0, #0x1                   	// #1
  44b554:	ldp	x19, x20, [sp, #16]
  44b558:	ldp	x29, x30, [sp], #48
  44b55c:	ret
  44b560:	mov	w0, #0x0                   	// #0
  44b564:	ldp	x19, x20, [sp, #16]
  44b568:	ldp	x21, x22, [sp, #32]
  44b56c:	ldp	x29, x30, [sp], #48
  44b570:	ret
  44b574:	nop
  44b578:	b	402910 <free@plt>
  44b57c:	nop
  44b580:	b	44b578 <_obstack_memory_used@@Base+0xf74>
  44b584:	nop
  44b588:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44b58c:	add	x0, x0, #0x180
  44b590:	ret
  44b594:	nop
  44b598:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44b59c:	add	x0, x0, #0x1a8
  44b5a0:	ret
  44b5a4:	nop
  44b5a8:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b5ac:	ldr	x1, [x1, #4000]
  44b5b0:	add	x1, x1, #0x10
  44b5b4:	str	x1, [x0]
  44b5b8:	b	44ba28 <_obstack_memory_used@@Base+0x1424>
  44b5bc:	nop
  44b5c0:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b5c4:	ldr	x1, [x1, #3984]
  44b5c8:	add	x1, x1, #0x10
  44b5cc:	str	x1, [x0]
  44b5d0:	b	44ba28 <_obstack_memory_used@@Base+0x1424>
  44b5d4:	nop
  44b5d8:	stp	x29, x30, [sp, #-32]!
  44b5dc:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b5e0:	mov	x29, sp
  44b5e4:	ldr	x1, [x1, #4000]
  44b5e8:	str	x19, [sp, #16]
  44b5ec:	mov	x19, x0
  44b5f0:	add	x1, x1, #0x10
  44b5f4:	str	x1, [x0]
  44b5f8:	bl	44ba28 <_obstack_memory_used@@Base+0x1424>
  44b5fc:	mov	x0, x19
  44b600:	mov	x1, #0x8                   	// #8
  44b604:	ldr	x19, [sp, #16]
  44b608:	ldp	x29, x30, [sp], #32
  44b60c:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44b610:	stp	x29, x30, [sp, #-32]!
  44b614:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b618:	mov	x29, sp
  44b61c:	ldr	x1, [x1, #3984]
  44b620:	str	x19, [sp, #16]
  44b624:	mov	x19, x0
  44b628:	add	x1, x1, #0x10
  44b62c:	str	x1, [x0]
  44b630:	bl	44ba28 <_obstack_memory_used@@Base+0x1424>
  44b634:	mov	x0, x19
  44b638:	mov	x1, #0x8                   	// #8
  44b63c:	ldr	x19, [sp, #16]
  44b640:	ldp	x29, x30, [sp], #32
  44b644:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44b648:	stp	x29, x30, [sp, #-48]!
  44b64c:	mov	x29, sp
  44b650:	stp	x19, x20, [sp, #16]
  44b654:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b658:	mov	x19, x0
  44b65c:	ldr	x0, [x20, #3880]
  44b660:	str	x21, [sp, #32]
  44b664:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44b668:	cbz	x0, 44b678 <_obstack_memory_used@@Base+0x1074>
  44b66c:	add	x0, x21, #0xab0
  44b670:	bl	402ad0 <pthread_mutex_lock@plt>
  44b674:	cbnz	w0, 44b770 <_obstack_memory_used@@Base+0x116c>
  44b678:	add	x0, x21, #0xab0
  44b67c:	sub	x5, x19, #0x10
  44b680:	ldr	x1, [x0, #48]
  44b684:	cbz	x1, 44b700 <_obstack_memory_used@@Base+0x10fc>
  44b688:	ldur	x6, [x19, #-16]
  44b68c:	add	x4, x5, x6
  44b690:	cmp	x1, x4
  44b694:	b.hi	44b700 <_obstack_memory_used@@Base+0x10fc>  // b.pmore
  44b698:	ldr	x2, [x1, #8]
  44b69c:	b.eq	44b754 <_obstack_memory_used@@Base+0x1150>  // b.none
  44b6a0:	add	x0, x0, #0x30
  44b6a4:	cbnz	x2, 44b6c0 <_obstack_memory_used@@Base+0x10bc>
  44b6a8:	b	44b6dc <_obstack_memory_used@@Base+0x10d8>
  44b6ac:	ldr	x3, [x2, #8]
  44b6b0:	add	x0, x1, #0x8
  44b6b4:	cbz	x3, 44b73c <_obstack_memory_used@@Base+0x1138>
  44b6b8:	mov	x1, x2
  44b6bc:	mov	x2, x3
  44b6c0:	cmp	x4, x2
  44b6c4:	b.cc	44b6ac <_obstack_memory_used@@Base+0x10a8>  // b.lo, b.ul, b.last
  44b6c8:	b.ne	44b768 <_obstack_memory_used@@Base+0x1164>  // b.any
  44b6cc:	ldp	x2, x3, [x4]
  44b6d0:	str	x3, [x1, #8]
  44b6d4:	ldr	x1, [x0]
  44b6d8:	add	x6, x6, x2
  44b6dc:	ldr	x2, [x1]
  44b6e0:	add	x3, x1, x2
  44b6e4:	cmp	x5, x3
  44b6e8:	b.eq	44b730 <_obstack_memory_used@@Base+0x112c>  // b.none
  44b6ec:	ldr	x1, [x1, #8]
  44b6f0:	stp	x6, x1, [x19, #-16]
  44b6f4:	ldr	x0, [x0]
  44b6f8:	str	x5, [x0, #8]
  44b6fc:	b	44b70c <_obstack_memory_used@@Base+0x1108>
  44b700:	add	x0, x21, #0xab0
  44b704:	stur	x1, [x19, #-8]
  44b708:	str	x5, [x0, #48]
  44b70c:	ldr	x20, [x20, #3880]
  44b710:	cbz	x20, 44b720 <_obstack_memory_used@@Base+0x111c>
  44b714:	add	x0, x21, #0xab0
  44b718:	bl	402b00 <pthread_mutex_unlock@plt>
  44b71c:	cbnz	w0, 44b774 <_obstack_memory_used@@Base+0x1170>
  44b720:	ldp	x19, x20, [sp, #16]
  44b724:	ldr	x21, [sp, #32]
  44b728:	ldp	x29, x30, [sp], #48
  44b72c:	ret
  44b730:	add	x6, x2, x6
  44b734:	str	x6, [x1]
  44b738:	b	44b70c <_obstack_memory_used@@Base+0x1108>
  44b73c:	ldr	x1, [x1, #8]
  44b740:	ldr	x2, [x1]
  44b744:	add	x3, x1, x2
  44b748:	cmp	x5, x3
  44b74c:	b.ne	44b6ec <_obstack_memory_used@@Base+0x10e8>  // b.any
  44b750:	b	44b730 <_obstack_memory_used@@Base+0x112c>
  44b754:	ldr	x1, [x1]
  44b758:	add	x6, x1, x6
  44b75c:	stp	x6, x2, [x19, #-16]
  44b760:	str	x5, [x0, #48]
  44b764:	b	44b70c <_obstack_memory_used@@Base+0x1108>
  44b768:	ldr	x1, [x0]
  44b76c:	b	44b6dc <_obstack_memory_used@@Base+0x10d8>
  44b770:	bl	402b90 <nftw@plt+0x10>
  44b774:	mov	x0, #0x8                   	// #8
  44b778:	bl	44b8f0 <_obstack_memory_used@@Base+0x12ec>
  44b77c:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b780:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b784:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b788:	ldr	x3, [x3, #3984]
  44b78c:	ldr	x2, [x2, #4064]
  44b790:	add	x3, x3, #0x10
  44b794:	ldr	x1, [x1, #4040]
  44b798:	str	x3, [x0]
  44b79c:	bl	44c708 <_obstack_memory_used@@Base+0x2104>
  44b7a0:	cmn	x1, #0x1
  44b7a4:	b.ne	44b7ac <_obstack_memory_used@@Base+0x11a8>  // b.any
  44b7a8:	bl	44c4a8 <_obstack_memory_used@@Base+0x1ea4>
  44b7ac:	bl	459208 <_obstack_memory_used@@Base+0xec04>
  44b7b0:	stp	x29, x30, [sp, #-48]!
  44b7b4:	mov	x29, sp
  44b7b8:	stp	x19, x20, [sp, #16]
  44b7bc:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b7c0:	mov	x19, x0
  44b7c4:	ldr	x0, [x20, #3880]
  44b7c8:	str	x21, [sp, #32]
  44b7cc:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44b7d0:	cbz	x0, 44b7e0 <_obstack_memory_used@@Base+0x11dc>
  44b7d4:	add	x0, x21, #0xab0
  44b7d8:	bl	402ad0 <pthread_mutex_lock@plt>
  44b7dc:	cbnz	w0, 44b87c <_obstack_memory_used@@Base+0x1278>
  44b7e0:	add	x3, x21, #0xab0
  44b7e4:	adds	x0, x19, #0x10
  44b7e8:	mov	x19, #0x10                  	// #16
  44b7ec:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  44b7f0:	add	x0, x0, #0xf
  44b7f4:	ldr	x19, [x3, #48]
  44b7f8:	and	x0, x0, #0xfffffffffffffff0
  44b7fc:	cbz	x19, 44b848 <_obstack_memory_used@@Base+0x1244>
  44b800:	add	x3, x3, #0x30
  44b804:	b	44b810 <_obstack_memory_used@@Base+0x120c>
  44b808:	add	x3, x2, #0x8
  44b80c:	cbz	x19, 44b848 <_obstack_memory_used@@Base+0x1244>
  44b810:	mov	x2, x19
  44b814:	ldp	x1, x19, [x19]
  44b818:	cmp	x0, x1
  44b81c:	b.hi	44b808 <_obstack_memory_used@@Base+0x1204>  // b.pmore
  44b820:	sub	x1, x1, x0
  44b824:	cmp	x1, #0xf
  44b828:	b.ls	44b870 <_obstack_memory_used@@Base+0x126c>  // b.plast
  44b82c:	add	x4, x2, x0
  44b830:	str	x19, [x4, #8]
  44b834:	str	x1, [x2, x0]
  44b838:	ldr	x2, [x3]
  44b83c:	add	x19, x2, #0x10
  44b840:	str	x0, [x2]
  44b844:	str	x4, [x3]
  44b848:	ldr	x20, [x20, #3880]
  44b84c:	cbz	x20, 44b85c <_obstack_memory_used@@Base+0x1258>
  44b850:	add	x0, x21, #0xab0
  44b854:	bl	402b00 <pthread_mutex_unlock@plt>
  44b858:	cbnz	w0, 44b880 <_obstack_memory_used@@Base+0x127c>
  44b85c:	mov	x0, x19
  44b860:	ldp	x19, x20, [sp, #16]
  44b864:	ldr	x21, [sp, #32]
  44b868:	ldp	x29, x30, [sp], #48
  44b86c:	ret
  44b870:	str	x19, [x3]
  44b874:	add	x19, x2, #0x10
  44b878:	b	44b848 <_obstack_memory_used@@Base+0x1244>
  44b87c:	bl	402b90 <nftw@plt+0x10>
  44b880:	mov	x0, #0x8                   	// #8
  44b884:	bl	44b8f0 <_obstack_memory_used@@Base+0x12ec>
  44b888:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b88c:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b890:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44b894:	ldr	x3, [x3, #3984]
  44b898:	ldr	x2, [x2, #4064]
  44b89c:	add	x3, x3, #0x10
  44b8a0:	ldr	x1, [x1, #4040]
  44b8a4:	str	x3, [x0]
  44b8a8:	bl	44c708 <_obstack_memory_used@@Base+0x2104>
  44b8ac:	cmn	x1, #0x1
  44b8b0:	b.ne	44b8b8 <_obstack_memory_used@@Base+0x12b4>  // b.any
  44b8b4:	bl	44c4a8 <_obstack_memory_used@@Base+0x1ea4>
  44b8b8:	bl	459208 <_obstack_memory_used@@Base+0xec04>
  44b8bc:	nop
  44b8c0:	stp	x29, x30, [sp, #-32]!
  44b8c4:	mov	x29, sp
  44b8c8:	str	x19, [sp, #16]
  44b8cc:	adrp	x19, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44b8d0:	add	x19, x19, #0xab0
  44b8d4:	ldr	x0, [x19, #56]
  44b8d8:	cbz	x0, 44b8e4 <_obstack_memory_used@@Base+0x12e0>
  44b8dc:	bl	402910 <free@plt>
  44b8e0:	str	xzr, [x19, #56]
  44b8e4:	ldr	x19, [sp, #16]
  44b8e8:	ldp	x29, x30, [sp], #32
  44b8ec:	ret
  44b8f0:	stp	x29, x30, [sp, #-32]!
  44b8f4:	mov	x29, sp
  44b8f8:	str	x19, [sp, #16]
  44b8fc:	add	x19, x0, #0x80
  44b900:	mov	x0, x19
  44b904:	bl	402670 <malloc@plt>
  44b908:	mov	x1, x0
  44b90c:	cbz	x0, 44b940 <_obstack_memory_used@@Base+0x133c>
  44b910:	stp	xzr, xzr, [x1]
  44b914:	add	x0, x1, #0x80
  44b918:	stp	xzr, xzr, [x1, #16]
  44b91c:	stp	xzr, xzr, [x1, #32]
  44b920:	stp	xzr, xzr, [x1, #48]
  44b924:	stp	xzr, xzr, [x1, #64]
  44b928:	stp	xzr, xzr, [x1, #80]
  44b92c:	stp	xzr, xzr, [x1, #96]
  44b930:	stp	xzr, xzr, [x1, #112]
  44b934:	ldr	x19, [sp, #16]
  44b938:	ldp	x29, x30, [sp], #32
  44b93c:	ret
  44b940:	mov	x0, x19
  44b944:	bl	44b7b0 <_obstack_memory_used@@Base+0x11ac>
  44b948:	mov	x1, x0
  44b94c:	cbnz	x0, 44b910 <_obstack_memory_used@@Base+0x130c>
  44b950:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44b954:	nop
  44b958:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44b95c:	add	x1, x1, #0xab0
  44b960:	sub	x0, x0, #0x80
  44b964:	ldr	x2, [x1, #56]
  44b968:	cmp	x0, x2
  44b96c:	b.ls	44b994 <_obstack_memory_used@@Base+0x1390>  // b.plast
  44b970:	ldr	x1, [x1, #64]
  44b974:	add	x2, x2, x1
  44b978:	cmp	x0, x2
  44b97c:	b.cs	44b994 <_obstack_memory_used@@Base+0x1390>  // b.hs, b.nlast
  44b980:	stp	x29, x30, [sp, #-16]!
  44b984:	mov	x29, sp
  44b988:	bl	44b648 <_obstack_memory_used@@Base+0x1044>
  44b98c:	ldp	x29, x30, [sp], #16
  44b990:	ret
  44b994:	b	402910 <free@plt>
  44b998:	stp	x29, x30, [sp, #-16]!
  44b99c:	mov	x0, #0x70                  	// #112
  44b9a0:	mov	x29, sp
  44b9a4:	bl	402670 <malloc@plt>
  44b9a8:	cbz	x0, 44b9d0 <_obstack_memory_used@@Base+0x13cc>
  44b9ac:	stp	xzr, xzr, [x0]
  44b9b0:	stp	xzr, xzr, [x0, #16]
  44b9b4:	stp	xzr, xzr, [x0, #32]
  44b9b8:	stp	xzr, xzr, [x0, #48]
  44b9bc:	stp	xzr, xzr, [x0, #64]
  44b9c0:	stp	xzr, xzr, [x0, #80]
  44b9c4:	stp	xzr, xzr, [x0, #96]
  44b9c8:	ldp	x29, x30, [sp], #16
  44b9cc:	ret
  44b9d0:	mov	x0, #0x70                  	// #112
  44b9d4:	bl	44b7b0 <_obstack_memory_used@@Base+0x11ac>
  44b9d8:	cbnz	x0, 44b9ac <_obstack_memory_used@@Base+0x13a8>
  44b9dc:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44b9e0:	adrp	x2, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44b9e4:	add	x2, x2, #0xab0
  44b9e8:	mov	x1, x0
  44b9ec:	ldr	x3, [x2, #56]
  44b9f0:	cmp	x0, x3
  44b9f4:	b.ls	44ba1c <_obstack_memory_used@@Base+0x1418>  // b.plast
  44b9f8:	ldr	x2, [x2, #64]
  44b9fc:	add	x3, x3, x2
  44ba00:	cmp	x0, x3
  44ba04:	b.cs	44ba1c <_obstack_memory_used@@Base+0x1418>  // b.hs, b.nlast
  44ba08:	stp	x29, x30, [sp, #-16]!
  44ba0c:	mov	x29, sp
  44ba10:	bl	44b648 <_obstack_memory_used@@Base+0x1044>
  44ba14:	ldp	x29, x30, [sp], #16
  44ba18:	ret
  44ba1c:	mov	x0, x1
  44ba20:	b	402910 <free@plt>
  44ba24:	nop
  44ba28:	ret
  44ba2c:	nop
  44ba30:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44ba34:	ldr	x1, [x1, #3944]
  44ba38:	add	x1, x1, #0x10
  44ba3c:	str	x1, [x0]
  44ba40:	b	44ba28 <_obstack_memory_used@@Base+0x1424>
  44ba44:	nop
  44ba48:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44ba4c:	add	x0, x0, #0x228
  44ba50:	ret
  44ba54:	nop
  44ba58:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44ba5c:	add	x0, x0, #0x238
  44ba60:	ret
  44ba64:	nop
  44ba68:	stp	x29, x30, [sp, #-32]!
  44ba6c:	mov	x29, sp
  44ba70:	str	x19, [sp, #16]
  44ba74:	mov	x19, x0
  44ba78:	bl	44ba28 <_obstack_memory_used@@Base+0x1424>
  44ba7c:	mov	x0, x19
  44ba80:	mov	x1, #0x8                   	// #8
  44ba84:	ldr	x19, [sp, #16]
  44ba88:	ldp	x29, x30, [sp], #32
  44ba8c:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44ba90:	stp	x29, x30, [sp, #-32]!
  44ba94:	mov	x29, sp
  44ba98:	str	x19, [sp, #16]
  44ba9c:	mov	x19, x0
  44baa0:	bl	44ba30 <_obstack_memory_used@@Base+0x142c>
  44baa4:	mov	x0, x19
  44baa8:	mov	x1, #0x8                   	// #8
  44baac:	ldr	x19, [sp, #16]
  44bab0:	ldp	x29, x30, [sp], #32
  44bab4:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44bab8:	ret
  44babc:	nop
  44bac0:	stp	x29, x30, [sp, #-32]!
  44bac4:	mov	x29, sp
  44bac8:	str	x19, [sp, #16]
  44bacc:	mov	x19, x0
  44bad0:	bl	44bab8 <_obstack_memory_used@@Base+0x14b4>
  44bad4:	mov	x0, x19
  44bad8:	mov	x1, #0x8                   	// #8
  44badc:	ldr	x19, [sp, #16]
  44bae0:	ldp	x29, x30, [sp], #32
  44bae4:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44bae8:	ret
  44baec:	nop
  44baf0:	stp	x29, x30, [sp, #-32]!
  44baf4:	mov	x29, sp
  44baf8:	str	x19, [sp, #16]
  44bafc:	mov	x19, x0
  44bb00:	bl	44bae8 <_obstack_memory_used@@Base+0x14e4>
  44bb04:	mov	x0, x19
  44bb08:	mov	x1, #0x8                   	// #8
  44bb0c:	ldr	x19, [sp, #16]
  44bb10:	ldp	x29, x30, [sp], #32
  44bb14:	b	44acc0 <_obstack_memory_used@@Base+0x6bc>
  44bb18:	ret
  44bb1c:	nop
  44bb20:	b	44ba48 <_obstack_memory_used@@Base+0x1444>
  44bb24:	nop
  44bb28:	ret
  44bb2c:	nop
  44bb30:	b	44ba58 <_obstack_memory_used@@Base+0x1454>
  44bb34:	nop
  44bb38:	stp	x29, x30, [sp, #-64]!
  44bb3c:	mov	x29, sp
  44bb40:	stp	x19, x20, [sp, #16]
  44bb44:	mov	x19, x1
  44bb48:	mov	x20, x0
  44bb4c:	mov	x0, x1
  44bb50:	ldr	x1, [x1]
  44bb54:	ldr	x1, [x1, #16]
  44bb58:	str	x21, [sp, #32]
  44bb5c:	mov	x21, x2
  44bb60:	ldr	x2, [x2]
  44bb64:	str	x2, [sp, #56]
  44bb68:	blr	x1
  44bb6c:	tst	w0, #0xff
  44bb70:	b.eq	44bb80 <_obstack_memory_used@@Base+0x157c>  // b.none
  44bb74:	ldr	x0, [sp, #56]
  44bb78:	ldr	x0, [x0]
  44bb7c:	str	x0, [sp, #56]
  44bb80:	ldr	x4, [x20]
  44bb84:	mov	x1, x19
  44bb88:	mov	x0, x20
  44bb8c:	add	x2, sp, #0x38
  44bb90:	mov	w3, #0x1                   	// #1
  44bb94:	ldr	x4, [x4, #32]
  44bb98:	blr	x4
  44bb9c:	tst	w0, #0xff
  44bba0:	b.eq	44bbac <_obstack_memory_used@@Base+0x15a8>  // b.none
  44bba4:	ldr	x1, [sp, #56]
  44bba8:	str	x1, [x21]
  44bbac:	ldp	x19, x20, [sp, #16]
  44bbb0:	ldr	x21, [sp, #32]
  44bbb4:	ldp	x29, x30, [sp], #64
  44bbb8:	ret
  44bbbc:	nop
  44bbc0:	and	w5, w0, #0xff
  44bbc4:	cmp	w5, #0x50
  44bbc8:	b.eq	44bce0 <_obstack_memory_used@@Base+0x16dc>  // b.none
  44bbcc:	and	w4, w5, #0xf
  44bbd0:	cmp	w4, #0x4
  44bbd4:	b.eq	44bbf0 <_obstack_memory_used@@Base+0x15ec>  // b.none
  44bbd8:	b.ls	44bc04 <_obstack_memory_used@@Base+0x1600>  // b.plast
  44bbdc:	cmp	w4, #0xb
  44bbe0:	b.eq	44bd04 <_obstack_memory_used@@Base+0x1700>  // b.none
  44bbe4:	b.ls	44bc60 <_obstack_memory_used@@Base+0x165c>  // b.plast
  44bbe8:	cmp	w4, #0xc
  44bbec:	b.ne	44bd14 <_obstack_memory_used@@Base+0x1710>  // b.any
  44bbf0:	mov	x0, x2
  44bbf4:	ldr	x4, [x0], #8
  44bbf8:	cbnz	x4, 44bcc0 <_obstack_memory_used@@Base+0x16bc>
  44bbfc:	str	x4, [x3]
  44bc00:	ret
  44bc04:	cmp	w4, #0x2
  44bc08:	b.eq	44bcf4 <_obstack_memory_used@@Base+0x16f0>  // b.none
  44bc0c:	b.ls	44bc28 <_obstack_memory_used@@Base+0x1624>  // b.plast
  44bc10:	cmp	w4, #0x3
  44bc14:	b.ne	44bd14 <_obstack_memory_used@@Base+0x1710>  // b.any
  44bc18:	mov	x0, x2
  44bc1c:	ldr	w4, [x0], #4
  44bc20:	cbz	x4, 44bbfc <_obstack_memory_used@@Base+0x15f8>
  44bc24:	b	44bcc0 <_obstack_memory_used@@Base+0x16bc>
  44bc28:	cbz	w4, 44bbf0 <_obstack_memory_used@@Base+0x15ec>
  44bc2c:	cmp	w4, #0x1
  44bc30:	b.ne	44bd14 <_obstack_memory_used@@Base+0x1710>  // b.any
  44bc34:	mov	x0, x2
  44bc38:	mov	x4, #0x0                   	// #0
  44bc3c:	mov	w7, #0x0                   	// #0
  44bc40:	ldrb	w8, [x0], #1
  44bc44:	and	x6, x8, #0x7f
  44bc48:	lsl	x6, x6, x7
  44bc4c:	add	w7, w7, #0x7
  44bc50:	orr	x4, x4, x6
  44bc54:	tbnz	w8, #7, 44bc40 <_obstack_memory_used@@Base+0x163c>
  44bc58:	cbz	x4, 44bbfc <_obstack_memory_used@@Base+0x15f8>
  44bc5c:	b	44bcc0 <_obstack_memory_used@@Base+0x16bc>
  44bc60:	cmp	w4, #0x9
  44bc64:	b.eq	44bc80 <_obstack_memory_used@@Base+0x167c>  // b.none
  44bc68:	cmp	w4, #0xa
  44bc6c:	b.ne	44bd14 <_obstack_memory_used@@Base+0x1710>  // b.any
  44bc70:	mov	x0, x2
  44bc74:	ldrsh	x4, [x0], #2
  44bc78:	cbz	x4, 44bbfc <_obstack_memory_used@@Base+0x15f8>
  44bc7c:	b	44bcc0 <_obstack_memory_used@@Base+0x16bc>
  44bc80:	mov	x0, x2
  44bc84:	mov	x4, #0x0                   	// #0
  44bc88:	mov	w7, #0x0                   	// #0
  44bc8c:	ldrb	w8, [x0], #1
  44bc90:	and	x6, x8, #0x7f
  44bc94:	lsl	x6, x6, x7
  44bc98:	add	w7, w7, #0x7
  44bc9c:	orr	x4, x4, x6
  44bca0:	tbnz	w8, #7, 44bc8c <_obstack_memory_used@@Base+0x1688>
  44bca4:	cmp	w7, #0x3f
  44bca8:	b.hi	44bbf8 <_obstack_memory_used@@Base+0x15f4>  // b.pmore
  44bcac:	tbz	w8, #6, 44bbf8 <_obstack_memory_used@@Base+0x15f4>
  44bcb0:	mov	x6, #0xffffffffffffffff    	// #-1
  44bcb4:	lsl	x7, x6, x7
  44bcb8:	orr	x4, x4, x7
  44bcbc:	nop
  44bcc0:	and	w6, w5, #0x70
  44bcc4:	cmp	w6, #0x10
  44bcc8:	csel	x1, x2, x1, eq  // eq = none
  44bccc:	add	x4, x4, x1
  44bcd0:	tbz	w5, #7, 44bbfc <_obstack_memory_used@@Base+0x15f8>
  44bcd4:	ldr	x4, [x4]
  44bcd8:	str	x4, [x3]
  44bcdc:	ret
  44bce0:	add	x0, x2, #0x7
  44bce4:	and	x0, x0, #0xfffffffffffffff8
  44bce8:	ldr	x4, [x0], #8
  44bcec:	str	x4, [x3]
  44bcf0:	ret
  44bcf4:	mov	x0, x2
  44bcf8:	ldrh	w4, [x0], #2
  44bcfc:	cbz	x4, 44bbfc <_obstack_memory_used@@Base+0x15f8>
  44bd00:	b	44bcc0 <_obstack_memory_used@@Base+0x16bc>
  44bd04:	mov	x0, x2
  44bd08:	ldrsw	x4, [x0], #4
  44bd0c:	cbz	x4, 44bbfc <_obstack_memory_used@@Base+0x15f8>
  44bd10:	b	44bcc0 <_obstack_memory_used@@Base+0x16bc>
  44bd14:	stp	x29, x30, [sp, #-16]!
  44bd18:	mov	x29, sp
  44bd1c:	bl	4027f0 <abort@plt>
  44bd20:	stp	x29, x30, [sp, #-32]!
  44bd24:	mov	x3, x0
  44bd28:	mov	x29, sp
  44bd2c:	ldrb	w0, [x0, #40]
  44bd30:	cmp	w0, #0xff
  44bd34:	b.eq	44bdc0 <_obstack_memory_used@@Base+0x17bc>  // b.none
  44bd38:	and	w4, w0, #0x7
  44bd3c:	cmp	w4, #0x2
  44bd40:	b.eq	44bda0 <_obstack_memory_used@@Base+0x179c>  // b.none
  44bd44:	b.ls	44bd70 <_obstack_memory_used@@Base+0x176c>  // b.plast
  44bd48:	cmp	w4, #0x3
  44bd4c:	neg	x2, x1, lsl #2
  44bd50:	b.ne	44bd94 <_obstack_memory_used@@Base+0x1790>  // b.any
  44bd54:	ldp	x1, x4, [x3, #16]
  44bd58:	add	x3, sp, #0x18
  44bd5c:	add	x2, x4, x2
  44bd60:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44bd64:	ldr	x0, [sp, #24]
  44bd68:	ldp	x29, x30, [sp], #32
  44bd6c:	ret
  44bd70:	cbnz	w4, 44bd9c <_obstack_memory_used@@Base+0x1798>
  44bd74:	neg	x2, x1, lsl #3
  44bd78:	ldp	x1, x4, [x3, #16]
  44bd7c:	add	x3, sp, #0x18
  44bd80:	add	x2, x4, x2
  44bd84:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44bd88:	ldr	x0, [sp, #24]
  44bd8c:	ldp	x29, x30, [sp], #32
  44bd90:	ret
  44bd94:	cmp	w4, #0x4
  44bd98:	b.eq	44bd74 <_obstack_memory_used@@Base+0x1770>  // b.none
  44bd9c:	bl	4027f0 <abort@plt>
  44bda0:	neg	x2, x1, lsl #1
  44bda4:	ldp	x1, x4, [x3, #16]
  44bda8:	add	x3, sp, #0x18
  44bdac:	add	x2, x4, x2
  44bdb0:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44bdb4:	ldr	x0, [sp, #24]
  44bdb8:	ldp	x29, x30, [sp], #32
  44bdbc:	ret
  44bdc0:	ldp	x1, x4, [x3, #16]
  44bdc4:	mov	x2, #0x0                   	// #0
  44bdc8:	add	x3, sp, #0x18
  44bdcc:	add	x2, x4, x2
  44bdd0:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44bdd4:	ldr	x0, [sp, #24]
  44bdd8:	ldp	x29, x30, [sp], #32
  44bddc:	ret
  44bde0:	stp	x29, x30, [sp, #-64]!
  44bde4:	mov	x29, sp
  44bde8:	stp	x21, x22, [sp, #32]
  44bdec:	mov	x22, x0
  44bdf0:	mvn	x0, x3
  44bdf4:	stp	x19, x20, [sp, #16]
  44bdf8:	add	x21, sp, #0x38
  44bdfc:	mov	x20, x1
  44be00:	ldr	x19, [x22, #24]
  44be04:	str	x2, [sp, #56]
  44be08:	add	x19, x19, x0
  44be0c:	nop
  44be10:	mov	x1, #0x0                   	// #0
  44be14:	mov	w3, #0x0                   	// #0
  44be18:	ldrb	w4, [x19], #1
  44be1c:	and	x2, x4, #0x7f
  44be20:	lsl	x2, x2, x3
  44be24:	add	w3, w3, #0x7
  44be28:	orr	x1, x1, x2
  44be2c:	tbnz	w4, #7, 44be18 <_obstack_memory_used@@Base+0x1814>
  44be30:	cbz	x1, 44be60 <_obstack_memory_used@@Base+0x185c>
  44be34:	mov	x0, x22
  44be38:	bl	44bd20 <_obstack_memory_used@@Base+0x171c>
  44be3c:	mov	x2, x21
  44be40:	mov	x1, x20
  44be44:	bl	44bb38 <_obstack_memory_used@@Base+0x1534>
  44be48:	ands	w0, w0, #0xff
  44be4c:	b.eq	44be10 <_obstack_memory_used@@Base+0x180c>  // b.none
  44be50:	ldp	x19, x20, [sp, #16]
  44be54:	ldp	x21, x22, [sp, #32]
  44be58:	ldp	x29, x30, [sp], #64
  44be5c:	ret
  44be60:	mov	w0, #0x0                   	// #0
  44be64:	ldp	x19, x20, [sp, #16]
  44be68:	ldp	x21, x22, [sp, #32]
  44be6c:	ldp	x29, x30, [sp], #64
  44be70:	ret
  44be74:	nop
  44be78:	and	w3, w0, #0xff
  44be7c:	cmp	w3, #0xff
  44be80:	b.eq	44bed0 <_obstack_memory_used@@Base+0x18cc>  // b.none
  44be84:	and	w2, w3, #0x70
  44be88:	mov	x0, x1
  44be8c:	cmp	w2, #0x30
  44be90:	b.eq	44bed8 <_obstack_memory_used@@Base+0x18d4>  // b.none
  44be94:	b.hi	44bea4 <_obstack_memory_used@@Base+0x18a0>  // b.pmore
  44be98:	cmp	w2, #0x20
  44be9c:	b.ne	44beb0 <_obstack_memory_used@@Base+0x18ac>  // b.any
  44bea0:	b	458e58 <_obstack_memory_used@@Base+0xe854>
  44bea4:	cmp	w2, #0x40
  44bea8:	b.ne	44bec8 <_obstack_memory_used@@Base+0x18c4>  // b.any
  44beac:	b	458e20 <_obstack_memory_used@@Base+0xe81c>
  44beb0:	b.hi	44bebc <_obstack_memory_used@@Base+0x18b8>  // b.pmore
  44beb4:	tst	w3, #0x60
  44beb8:	b.eq	44bed0 <_obstack_memory_used@@Base+0x18cc>  // b.none
  44bebc:	stp	x29, x30, [sp, #-16]!
  44bec0:	mov	x29, sp
  44bec4:	bl	4027f0 <abort@plt>
  44bec8:	cmp	w2, #0x50
  44becc:	b.ne	44bebc <_obstack_memory_used@@Base+0x18b8>  // b.any
  44bed0:	mov	x0, #0x0                   	// #0
  44bed4:	ret
  44bed8:	b	458e50 <_obstack_memory_used@@Base+0xe84c>
  44bedc:	nop
  44bee0:	stp	x29, x30, [sp, #-48]!
  44bee4:	mov	x29, sp
  44bee8:	stp	x19, x20, [sp, #16]
  44beec:	mov	x19, x1
  44bef0:	mov	x20, x2
  44bef4:	stp	x21, x22, [sp, #32]
  44bef8:	mov	x1, #0x0                   	// #0
  44befc:	mov	x21, x0
  44bf00:	cbz	x0, 44bf0c <_obstack_memory_used@@Base+0x1908>
  44bf04:	bl	458e20 <_obstack_memory_used@@Base+0xe81c>
  44bf08:	mov	x1, x0
  44bf0c:	str	x1, [x20]
  44bf10:	ldrb	w22, [x19], #1
  44bf14:	cmp	w22, #0xff
  44bf18:	b.ne	44bfa0 <_obstack_memory_used@@Base+0x199c>  // b.any
  44bf1c:	mov	x0, x19
  44bf20:	str	x1, [x20, #8]
  44bf24:	ldrb	w1, [x0], #1
  44bf28:	strb	w1, [x20, #40]
  44bf2c:	cmp	w1, #0xff
  44bf30:	b.eq	44bfd8 <_obstack_memory_used@@Base+0x19d4>  // b.none
  44bf34:	mov	x5, #0x0                   	// #0
  44bf38:	mov	w3, #0x0                   	// #0
  44bf3c:	nop
  44bf40:	ldrb	w4, [x0], #1
  44bf44:	and	x1, x4, #0x7f
  44bf48:	lsl	x1, x1, x3
  44bf4c:	add	w3, w3, #0x7
  44bf50:	orr	x5, x5, x1
  44bf54:	tbnz	w4, #7, 44bf40 <_obstack_memory_used@@Base+0x193c>
  44bf58:	add	x5, x0, x5
  44bf5c:	str	x5, [x20, #24]
  44bf60:	ldrb	w1, [x0], #1
  44bf64:	mov	x5, #0x0                   	// #0
  44bf68:	mov	w3, #0x0                   	// #0
  44bf6c:	strb	w1, [x20, #41]
  44bf70:	ldrb	w4, [x0], #1
  44bf74:	and	x1, x4, #0x7f
  44bf78:	lsl	x1, x1, x3
  44bf7c:	add	w3, w3, #0x7
  44bf80:	orr	x5, x5, x1
  44bf84:	tbnz	w4, #7, 44bf70 <_obstack_memory_used@@Base+0x196c>
  44bf88:	add	x5, x0, x5
  44bf8c:	ldp	x21, x22, [sp, #32]
  44bf90:	str	x5, [x20, #32]
  44bf94:	ldp	x19, x20, [sp, #16]
  44bf98:	ldp	x29, x30, [sp], #48
  44bf9c:	ret
  44bfa0:	mov	x1, x21
  44bfa4:	mov	w0, w22
  44bfa8:	bl	44be78 <_obstack_memory_used@@Base+0x1874>
  44bfac:	mov	x1, x0
  44bfb0:	mov	x2, x19
  44bfb4:	mov	w0, w22
  44bfb8:	add	x3, x20, #0x8
  44bfbc:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44bfc0:	mov	x19, x0
  44bfc4:	mov	x0, x19
  44bfc8:	ldrb	w1, [x0], #1
  44bfcc:	strb	w1, [x20, #40]
  44bfd0:	cmp	w1, #0xff
  44bfd4:	b.ne	44bf34 <_obstack_memory_used@@Base+0x1930>  // b.any
  44bfd8:	str	xzr, [x20, #24]
  44bfdc:	b	44bf60 <_obstack_memory_used@@Base+0x195c>
  44bfe0:	stp	x29, x30, [sp, #-240]!
  44bfe4:	cmp	w0, #0x1
  44bfe8:	mov	x29, sp
  44bfec:	str	wzr, [sp, #156]
  44bff0:	str	xzr, [sp, #160]
  44bff4:	b.ne	44c058 <_obstack_memory_used@@Base+0x1a54>  // b.any
  44bff8:	stp	x19, x20, [sp, #16]
  44bffc:	mov	x20, #0xd500                	// #54528
  44c000:	movk	x20, #0xbcd4, lsl #16
  44c004:	movk	x20, #0xaabc, lsl #32
  44c008:	stp	x21, x22, [sp, #32]
  44c00c:	movk	x20, #0xb8b1, lsl #48
  44c010:	add	x0, x2, x20
  44c014:	stp	x23, x24, [sp, #48]
  44c018:	cmp	x0, #0x1
  44c01c:	stp	x25, x26, [sp, #64]
  44c020:	mov	w22, w1
  44c024:	mov	x21, x3
  44c028:	stp	x27, x28, [sp, #80]
  44c02c:	mov	x19, x4
  44c030:	str	x0, [sp, #104]
  44c034:	cset	w0, ls  // ls = plast
  44c038:	str	w0, [sp, #128]
  44c03c:	cmp	w1, #0x6
  44c040:	csel	w27, w0, wzr, eq  // eq = none
  44c044:	cbz	w27, 44c064 <_obstack_memory_used@@Base+0x1a60>
  44c048:	ldur	x26, [x3, #-16]
  44c04c:	cbnz	x26, 44c1d8 <_obstack_memory_used@@Base+0x1bd4>
  44c050:	mov	x0, x21
  44c054:	bl	44c848 <_obstack_memory_used@@Base+0x2244>
  44c058:	mov	w0, #0x3                   	// #3
  44c05c:	ldp	x29, x30, [sp], #240
  44c060:	ret
  44c064:	mov	x0, x4
  44c068:	bl	458e18 <_obstack_memory_used@@Base+0xe814>
  44c06c:	str	x0, [sp, #112]
  44c070:	cbz	x0, 44c23c <_obstack_memory_used@@Base+0x1c38>
  44c074:	ldr	x1, [sp, #112]
  44c078:	add	x0, sp, #0xc0
  44c07c:	mov	x2, x0
  44c080:	str	x0, [sp, #120]
  44c084:	mov	x0, x19
  44c088:	bl	44bee0 <_obstack_memory_used@@Base+0x18dc>
  44c08c:	mov	x20, x0
  44c090:	ldrb	w0, [sp, #232]
  44c094:	mov	x1, x19
  44c098:	bl	44be78 <_obstack_memory_used@@Base+0x1874>
  44c09c:	mov	x3, x0
  44c0a0:	add	x1, sp, #0x9c
  44c0a4:	mov	x0, x19
  44c0a8:	str	x3, [sp, #208]
  44c0ac:	bl	458df8 <_obstack_memory_used@@Base+0xe7f4>
  44c0b0:	ldr	w3, [sp, #156]
  44c0b4:	ldr	x1, [sp, #224]
  44c0b8:	cmp	w3, #0x0
  44c0bc:	cset	x3, eq  // eq = none
  44c0c0:	sub	x23, x0, x3
  44c0c4:	cmp	x20, x1
  44c0c8:	b.cs	44c1a0 <_obstack_memory_used@@Base+0x1b9c>  // b.hs, b.nlast
  44c0cc:	add	x26, sp, #0xa8
  44c0d0:	add	x25, sp, #0xb0
  44c0d4:	add	x24, sp, #0xb8
  44c0d8:	ldrb	w28, [sp, #233]
  44c0dc:	mov	x1, #0x0                   	// #0
  44c0e0:	mov	w0, w28
  44c0e4:	bl	44be78 <_obstack_memory_used@@Base+0x1874>
  44c0e8:	mov	x2, x20
  44c0ec:	mov	x3, x26
  44c0f0:	mov	x1, x0
  44c0f4:	mov	w0, w28
  44c0f8:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44c0fc:	ldrb	w20, [sp, #233]
  44c100:	mov	x28, x0
  44c104:	mov	x1, #0x0                   	// #0
  44c108:	mov	w0, w20
  44c10c:	bl	44be78 <_obstack_memory_used@@Base+0x1874>
  44c110:	mov	x2, x28
  44c114:	mov	x3, x25
  44c118:	mov	x1, x0
  44c11c:	mov	w0, w20
  44c120:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44c124:	ldrb	w20, [sp, #233]
  44c128:	mov	x28, x0
  44c12c:	mov	x1, #0x0                   	// #0
  44c130:	mov	w0, w20
  44c134:	bl	44be78 <_obstack_memory_used@@Base+0x1874>
  44c138:	mov	x3, x24
  44c13c:	mov	x1, x0
  44c140:	mov	x2, x28
  44c144:	mov	w0, w20
  44c148:	bl	44bbc0 <_obstack_memory_used@@Base+0x15bc>
  44c14c:	mov	x20, x0
  44c150:	mov	w3, #0x0                   	// #0
  44c154:	mov	x0, #0x0                   	// #0
  44c158:	ldrb	w4, [x20], #1
  44c15c:	and	x1, x4, #0x7f
  44c160:	lsl	x1, x1, x3
  44c164:	add	w3, w3, #0x7
  44c168:	orr	x0, x0, x1
  44c16c:	tbnz	w4, #7, 44c158 <_obstack_memory_used@@Base+0x1b54>
  44c170:	ldr	x3, [sp, #168]
  44c174:	ldr	x1, [sp, #192]
  44c178:	add	x1, x1, x3
  44c17c:	cmp	x1, x23
  44c180:	b.hi	44c1a0 <_obstack_memory_used@@Base+0x1b9c>  // b.pmore
  44c184:	ldr	x3, [sp, #176]
  44c188:	add	x1, x1, x3
  44c18c:	cmp	x1, x23
  44c190:	b.hi	44c21c <_obstack_memory_used@@Base+0x1c18>  // b.pmore
  44c194:	ldr	x0, [sp, #224]
  44c198:	cmp	x0, x20
  44c19c:	b.hi	44c0d8 <_obstack_memory_used@@Base+0x1ad4>  // b.pmore
  44c1a0:	tbz	w22, #0, 44c25c <_obstack_memory_used@@Base+0x1c58>
  44c1a4:	mov	w24, #0x0                   	// #0
  44c1a8:	mov	x26, #0x0                   	// #0
  44c1ac:	mov	x23, #0x0                   	// #0
  44c1b0:	ldr	x0, [sp, #104]
  44c1b4:	cmp	x0, #0x1
  44c1b8:	mov	w0, #0x6                   	// #6
  44c1bc:	b.hi	44c240 <_obstack_memory_used@@Base+0x1c3c>  // b.pmore
  44c1c0:	ldr	x2, [sp, #112]
  44c1c4:	stur	w24, [x21, #-36]
  44c1c8:	ldr	x1, [sp, #160]
  44c1cc:	stp	x23, x2, [x21, #-32]
  44c1d0:	stp	x26, x1, [x21, #-16]
  44c1d4:	b	44c240 <_obstack_memory_used@@Base+0x1c3c>
  44c1d8:	ldur	w24, [x3, #-36]
  44c1dc:	ldur	x0, [x3, #-24]
  44c1e0:	str	x0, [sp, #112]
  44c1e4:	tbnz	w24, #31, 44c270 <_obstack_memory_used@@Base+0x1c6c>
  44c1e8:	mov	x2, x21
  44c1ec:	mov	x0, x19
  44c1f0:	mov	w1, #0x0                   	// #0
  44c1f4:	bl	458d98 <_obstack_memory_used@@Base+0xe794>
  44c1f8:	sxtw	x2, w24
  44c1fc:	mov	x0, x19
  44c200:	mov	w1, #0x1                   	// #1
  44c204:	bl	458d98 <_obstack_memory_used@@Base+0xe794>
  44c208:	mov	x0, x19
  44c20c:	mov	x1, x26
  44c210:	bl	458e10 <_obstack_memory_used@@Base+0xe80c>
  44c214:	mov	w0, #0x7                   	// #7
  44c218:	b	44c240 <_obstack_memory_used@@Base+0x1c3c>
  44c21c:	ldr	x26, [sp, #184]
  44c220:	cbz	x26, 44c23c <_obstack_memory_used@@Base+0x1c38>
  44c224:	ldr	x1, [sp, #200]
  44c228:	add	x26, x26, x1
  44c22c:	cbnz	x0, 44c2a8 <_obstack_memory_used@@Base+0x1ca4>
  44c230:	cbz	x26, 44c23c <_obstack_memory_used@@Base+0x1c38>
  44c234:	and	w24, w22, #0x1
  44c238:	tbz	w22, #0, 44c1e8 <_obstack_memory_used@@Base+0x1be4>
  44c23c:	mov	w0, #0x8                   	// #8
  44c240:	ldp	x19, x20, [sp, #16]
  44c244:	ldp	x21, x22, [sp, #32]
  44c248:	ldp	x23, x24, [sp, #48]
  44c24c:	ldp	x25, x26, [sp, #64]
  44c250:	ldp	x27, x28, [sp, #80]
  44c254:	ldp	x29, x30, [sp], #240
  44c258:	ret
  44c25c:	tbnz	w22, #3, 44c26c <_obstack_memory_used@@Base+0x1c68>
  44c260:	ldr	x0, [sp, #104]
  44c264:	cmp	x0, #0x1
  44c268:	b.ls	44c050 <_obstack_memory_used@@Base+0x1a4c>  // b.plast
  44c26c:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c270:	ldr	x1, [sp, #112]
  44c274:	add	x2, sp, #0xc0
  44c278:	mov	x0, x19
  44c27c:	bl	44bee0 <_obstack_memory_used@@Base+0x18dc>
  44c280:	ldrb	w0, [sp, #232]
  44c284:	mov	x1, x19
  44c288:	bl	44be78 <_obstack_memory_used@@Base+0x1874>
  44c28c:	mov	x2, x0
  44c290:	ldrb	w0, [sp, #232]
  44c294:	mov	x1, x19
  44c298:	str	x2, [sp, #208]
  44c29c:	bl	44be78 <_obstack_memory_used@@Base+0x1874>
  44c2a0:	stur	x0, [x21, #-16]
  44c2a4:	b	44c1e8 <_obstack_memory_used@@Base+0x1be4>
  44c2a8:	ldr	x4, [sp, #224]
  44c2ac:	sub	x0, x0, #0x1
  44c2b0:	add	x23, x4, x0
  44c2b4:	cbz	x26, 44c23c <_obstack_memory_used@@Base+0x1c38>
  44c2b8:	cbz	x23, 44c234 <_obstack_memory_used@@Base+0x1c30>
  44c2bc:	and	w0, w22, #0x8
  44c2c0:	str	w0, [sp, #132]
  44c2c4:	tbnz	w22, #3, 44c474 <_obstack_memory_used@@Base+0x1e70>
  44c2c8:	ldr	x0, [sp, #104]
  44c2cc:	adrp	x6, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c2d0:	cmp	x0, #0x1
  44c2d4:	ldr	x6, [x6, #3976]
  44c2d8:	b.ls	44c480 <_obstack_memory_used@@Base+0x1e7c>  // b.plast
  44c2dc:	add	x28, sp, #0xa0
  44c2e0:	mov	x5, #0x1                   	// #1
  44c2e4:	nop
  44c2e8:	mov	x25, x23
  44c2ec:	mov	x24, #0x0                   	// #0
  44c2f0:	mov	w1, #0x0                   	// #0
  44c2f4:	nop
  44c2f8:	ldrb	w2, [x25], #1
  44c2fc:	and	x0, x2, #0x7f
  44c300:	lsl	x0, x0, x1
  44c304:	add	w1, w1, #0x7
  44c308:	orr	x24, x24, x0
  44c30c:	tbnz	w2, #7, 44c2f8 <_obstack_memory_used@@Base+0x1cf4>
  44c310:	cmp	w1, #0x3f
  44c314:	b.hi	44c32c <_obstack_memory_used@@Base+0x1d28>  // b.pmore
  44c318:	lsl	x0, x5, x1
  44c31c:	neg	x0, x0
  44c320:	orr	x0, x24, x0
  44c324:	tst	x2, #0x40
  44c328:	csel	x24, x0, x24, ne  // ne = any
  44c32c:	mov	x8, x25
  44c330:	mov	x20, #0x0                   	// #0
  44c334:	mov	w1, #0x0                   	// #0
  44c338:	ldrb	w2, [x8], #1
  44c33c:	and	x0, x2, #0x7f
  44c340:	lsl	x0, x0, x1
  44c344:	add	w1, w1, #0x7
  44c348:	orr	x20, x20, x0
  44c34c:	tbnz	w2, #7, 44c338 <_obstack_memory_used@@Base+0x1d34>
  44c350:	cmp	w1, #0x3f
  44c354:	b.hi	44c36c <_obstack_memory_used@@Base+0x1d68>  // b.pmore
  44c358:	lsl	x0, x5, x1
  44c35c:	neg	x0, x0
  44c360:	orr	x0, x20, x0
  44c364:	tst	x2, #0x40
  44c368:	csel	x20, x0, x20, ne  // ne = any
  44c36c:	cmp	x24, #0x0
  44c370:	cbz	x24, 44c434 <_obstack_memory_used@@Base+0x1e30>
  44c374:	b.gt	44c3d8 <_obstack_memory_used@@Base+0x1dd4>
  44c378:	ldr	w0, [sp, #132]
  44c37c:	cmp	w0, #0x0
  44c380:	ldr	w0, [sp, #128]
  44c384:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  44c388:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  44c38c:	b.ne	44c43c <_obstack_memory_used@@Base+0x1e38>  // b.any
  44c390:	ldr	x0, [sp, #216]
  44c394:	mvn	x8, x24
  44c398:	mov	x9, #0x0                   	// #0
  44c39c:	mov	w1, #0x0                   	// #0
  44c3a0:	add	x8, x0, x8
  44c3a4:	nop
  44c3a8:	ldrb	w2, [x8], #1
  44c3ac:	and	x0, x2, #0x7f
  44c3b0:	lsl	x0, x0, x1
  44c3b4:	add	w1, w1, #0x7
  44c3b8:	orr	x9, x9, x0
  44c3bc:	tbnz	w2, #7, 44c3a8 <_obstack_memory_used@@Base+0x1da4>
  44c3c0:	cmp	x9, #0x0
  44c3c4:	cset	w0, eq  // eq = none
  44c3c8:	cbnz	w0, 44c414 <_obstack_memory_used@@Base+0x1e10>
  44c3cc:	cbz	x20, 44c46c <_obstack_memory_used@@Base+0x1e68>
  44c3d0:	add	x23, x25, x20
  44c3d4:	b	44c2e8 <_obstack_memory_used@@Base+0x1ce4>
  44c3d8:	ldr	x0, [sp, #120]
  44c3dc:	mov	x1, x24
  44c3e0:	str	x6, [sp, #136]
  44c3e4:	bl	44bd20 <_obstack_memory_used@@Base+0x171c>
  44c3e8:	cbz	x0, 44c414 <_obstack_memory_used@@Base+0x1e10>
  44c3ec:	ldr	x6, [sp, #136]
  44c3f0:	mov	x5, #0x1                   	// #1
  44c3f4:	cbz	x6, 44c3cc <_obstack_memory_used@@Base+0x1dc8>
  44c3f8:	mov	x1, x6
  44c3fc:	mov	x2, x28
  44c400:	bl	44bb38 <_obstack_memory_used@@Base+0x1534>
  44c404:	tst	w0, #0xff
  44c408:	mov	x5, #0x1                   	// #1
  44c40c:	ldr	x6, [sp, #136]
  44c410:	b.eq	44c3cc <_obstack_memory_used@@Base+0x1dc8>  // b.none
  44c414:	tbnz	w22, #0, 44c1b0 <_obstack_memory_used@@Base+0x1bac>
  44c418:	ldr	w0, [sp, #132]
  44c41c:	cbnz	w0, 44c42c <_obstack_memory_used@@Base+0x1e28>
  44c420:	ldr	x0, [sp, #104]
  44c424:	cmp	x0, #0x1
  44c428:	b.ls	44c1e4 <_obstack_memory_used@@Base+0x1be0>  // b.plast
  44c42c:	tbz	w24, #31, 44c1e8 <_obstack_memory_used@@Base+0x1be4>
  44c430:	bl	44c630 <_obstack_memory_used@@Base+0x202c>
  44c434:	mov	w27, #0x1                   	// #1
  44c438:	b	44c3cc <_obstack_memory_used@@Base+0x1dc8>
  44c43c:	ldr	x0, [sp, #120]
  44c440:	mov	x1, x6
  44c444:	ldr	x2, [sp, #160]
  44c448:	mov	x3, x24
  44c44c:	str	x6, [sp, #136]
  44c450:	bl	44bde0 <_obstack_memory_used@@Base+0x17dc>
  44c454:	and	w0, w0, #0xff
  44c458:	eor	w0, w0, #0x1
  44c45c:	mov	x5, #0x1                   	// #1
  44c460:	ldr	x6, [sp, #136]
  44c464:	cbz	w0, 44c3cc <_obstack_memory_used@@Base+0x1dc8>
  44c468:	b	44c414 <_obstack_memory_used@@Base+0x1e10>
  44c46c:	cbnz	w27, 44c234 <_obstack_memory_used@@Base+0x1c30>
  44c470:	b	44c23c <_obstack_memory_used@@Base+0x1c38>
  44c474:	adrp	x6, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c478:	ldr	x6, [x6, #3952]
  44c47c:	b	44c2dc <_obstack_memory_used@@Base+0x1cd8>
  44c480:	mov	x0, x21
  44c484:	ldr	x1, [x0], #32
  44c488:	tbz	w1, #0, 44c490 <_obstack_memory_used@@Base+0x1e8c>
  44c48c:	ldur	x0, [x21, #-80]
  44c490:	ldur	x6, [x0, #-112]
  44c494:	str	x0, [sp, #160]
  44c498:	b	44c2dc <_obstack_memory_used@@Base+0x1cd8>
  44c49c:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44c4a0:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c4a4:	nop
  44c4a8:	stp	x29, x30, [sp, #-112]!
  44c4ac:	mov	x29, sp
  44c4b0:	stp	x19, x20, [sp, #16]
  44c4b4:	mov	x19, x0
  44c4b8:	stp	x21, x22, [sp, #32]
  44c4bc:	str	x23, [sp, #48]
  44c4c0:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44c4c4:	ldp	x0, x21, [x19, #-64]
  44c4c8:	ldur	x1, [x19, #-16]
  44c4cc:	str	x1, [sp, #80]
  44c4d0:	ldur	w20, [x19, #-36]
  44c4d4:	ldur	x19, [x19, #-24]
  44c4d8:	bl	44c5f0 <_obstack_memory_used@@Base+0x1fec>
  44c4dc:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44c4e0:	bl	44ca08 <_obstack_memory_used@@Base+0x2404>
  44c4e4:	ldr	x22, [x0]
  44c4e8:	ldr	x0, [x22, #80]
  44c4ec:	tbz	w0, #0, 44c570 <_obstack_memory_used@@Base+0x1f6c>
  44c4f0:	ldr	x22, [x22]
  44c4f4:	add	x23, sp, #0x40
  44c4f8:	mov	x1, x19
  44c4fc:	mov	x2, x23
  44c500:	mov	x0, #0x0                   	// #0
  44c504:	bl	44bee0 <_obstack_memory_used@@Base+0x18dc>
  44c508:	ldur	x1, [x22, #-112]
  44c50c:	sxtw	x20, w20
  44c510:	mov	x3, x20
  44c514:	mov	x2, x22
  44c518:	mov	x0, x23
  44c51c:	bl	44bde0 <_obstack_memory_used@@Base+0x17dc>
  44c520:	tst	w0, #0xff
  44c524:	b.ne	44c58c <_obstack_memory_used@@Base+0x1f88>  // b.any
  44c528:	adrp	x19, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c52c:	mov	x3, x20
  44c530:	mov	x0, x23
  44c534:	mov	x2, #0x0                   	// #0
  44c538:	ldr	x1, [x19, #4024]
  44c53c:	bl	44bde0 <_obstack_memory_used@@Base+0x17dc>
  44c540:	tst	w0, #0xff
  44c544:	b.eq	44c590 <_obstack_memory_used@@Base+0x1f8c>  // b.none
  44c548:	mov	x0, #0x8                   	// #8
  44c54c:	bl	44b8f0 <_obstack_memory_used@@Base+0x12ec>
  44c550:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c554:	adrp	x2, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c558:	ldr	x1, [x19, #4024]
  44c55c:	ldr	x3, [x3, #3944]
  44c560:	ldr	x2, [x2, #3936]
  44c564:	add	x3, x3, #0x10
  44c568:	str	x3, [x0]
  44c56c:	bl	44c708 <_obstack_memory_used@@Base+0x2104>
  44c570:	add	x22, x22, #0x70
  44c574:	b	44c4f4 <_obstack_memory_used@@Base+0x1ef0>
  44c578:	mov	x19, x0
  44c57c:	bl	44c938 <_obstack_memory_used@@Base+0x2334>
  44c580:	bl	44c938 <_obstack_memory_used@@Base+0x2334>
  44c584:	mov	x0, x19
  44c588:	bl	459208 <_obstack_memory_used@@Base+0xec04>
  44c58c:	bl	44c768 <_obstack_memory_used@@Base+0x2164>
  44c590:	mov	x0, x21
  44c594:	bl	44c598 <_obstack_memory_used@@Base+0x1f94>
  44c598:	stp	x29, x30, [sp, #-16]!
  44c59c:	mov	x29, sp
  44c5a0:	blr	x0
  44c5a4:	bl	4027f0 <abort@plt>
  44c5a8:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44c5ac:	bl	4027f0 <abort@plt>
  44c5b0:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c5b4:	mov	x2, x0
  44c5b8:	ldr	x1, [x1, #3888]
  44c5bc:	ldaxr	x0, [x1]
  44c5c0:	stlxr	w3, x2, [x1]
  44c5c4:	cbnz	w3, 44c5bc <_obstack_memory_used@@Base+0x1fb8>
  44c5c8:	ret
  44c5cc:	nop
  44c5d0:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c5d4:	ldr	x0, [x0, #3888]
  44c5d8:	ldar	x0, [x0]
  44c5dc:	ret
  44c5e0:	stp	x29, x30, [sp, #-16]!
  44c5e4:	mov	x29, sp
  44c5e8:	bl	44c5d0 <_obstack_memory_used@@Base+0x1fcc>
  44c5ec:	bl	44c598 <_obstack_memory_used@@Base+0x1f94>
  44c5f0:	stp	x29, x30, [sp, #-16]!
  44c5f4:	mov	x29, sp
  44c5f8:	blr	x0
  44c5fc:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c600:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c604:	mov	x2, x0
  44c608:	ldr	x1, [x1, #3968]
  44c60c:	ldaxr	x0, [x1]
  44c610:	stlxr	w3, x2, [x1]
  44c614:	cbnz	w3, 44c60c <_obstack_memory_used@@Base+0x2008>
  44c618:	ret
  44c61c:	nop
  44c620:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44c624:	ldr	x0, [x0, #3968]
  44c628:	ldar	x0, [x0]
  44c62c:	ret
  44c630:	stp	x29, x30, [sp, #-16]!
  44c634:	mov	x29, sp
  44c638:	bl	44c620 <_obstack_memory_used@@Base+0x201c>
  44c63c:	bl	44c5f0 <_obstack_memory_used@@Base+0x1fec>
  44c640:	stp	x29, x30, [sp, #-32]!
  44c644:	cmp	w0, #0x1
  44c648:	mov	x29, sp
  44c64c:	b.hi	44c698 <_obstack_memory_used@@Base+0x2094>  // b.pmore
  44c650:	sub	x0, x1, #0x60
  44c654:	ldaxr	w2, [x0]
  44c658:	sub	w2, w2, #0x1
  44c65c:	stlxr	w3, w2, [x0]
  44c660:	cbnz	w3, 44c654 <_obstack_memory_used@@Base+0x2050>
  44c664:	cbnz	w2, 44c690 <_obstack_memory_used@@Base+0x208c>
  44c668:	ldur	x2, [x1, #-72]
  44c66c:	str	x19, [sp, #16]
  44c670:	add	x19, x1, #0x20
  44c674:	cbz	x2, 44c680 <_obstack_memory_used@@Base+0x207c>
  44c678:	mov	x0, x19
  44c67c:	blr	x2
  44c680:	mov	x0, x19
  44c684:	ldr	x19, [sp, #16]
  44c688:	ldp	x29, x30, [sp], #32
  44c68c:	b	44b958 <_obstack_memory_used@@Base+0x1354>
  44c690:	ldp	x29, x30, [sp], #32
  44c694:	ret
  44c698:	ldur	x0, [x1, #-56]
  44c69c:	str	x19, [sp, #16]
  44c6a0:	bl	44c598 <_obstack_memory_used@@Base+0x1f94>
  44c6a4:	nop
  44c6a8:	stp	x29, x30, [sp, #-32]!
  44c6ac:	mov	x29, sp
  44c6b0:	stp	x19, x20, [sp, #16]
  44c6b4:	mov	x19, x0
  44c6b8:	sub	x20, x0, #0x80
  44c6bc:	stur	wzr, [x0, #-128]
  44c6c0:	stp	x1, x2, [x0, #-112]
  44c6c4:	bl	44c620 <_obstack_memory_used@@Base+0x201c>
  44c6c8:	stur	x0, [x19, #-96]
  44c6cc:	bl	44c5d0 <_obstack_memory_used@@Base+0x1fcc>
  44c6d0:	mov	x3, x0
  44c6d4:	mov	x2, #0x2b00                	// #11008
  44c6d8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x19fc>
  44c6dc:	movk	x2, #0x432b, lsl #16
  44c6e0:	add	x1, x1, #0x640
  44c6e4:	movk	x2, #0x5543, lsl #32
  44c6e8:	stur	x3, [x19, #-88]
  44c6ec:	movk	x2, #0x474e, lsl #48
  44c6f0:	stp	x2, x1, [x19, #-32]
  44c6f4:	mov	x0, x20
  44c6f8:	ldp	x19, x20, [sp, #16]
  44c6fc:	ldp	x29, x30, [sp], #32
  44c700:	ret
  44c704:	nop
  44c708:	stp	x29, x30, [sp, #-48]!
  44c70c:	mov	x29, sp
  44c710:	stp	x19, x20, [sp, #16]
  44c714:	mov	x19, x0
  44c718:	mov	x20, x1
  44c71c:	str	x21, [sp, #32]
  44c720:	mov	x21, x2
  44c724:	bl	44ca30 <_obstack_memory_used@@Base+0x242c>
  44c728:	mov	x3, x0
  44c72c:	mov	x2, x21
  44c730:	mov	x1, x20
  44c734:	mov	x0, x19
  44c738:	ldr	w4, [x3, #8]
  44c73c:	add	w4, w4, #0x1
  44c740:	str	w4, [x3, #8]
  44c744:	bl	44c6a8 <_obstack_memory_used@@Base+0x20a4>
  44c748:	mov	x19, x0
  44c74c:	mov	w0, #0x1                   	// #1
  44c750:	str	w0, [x19], #96
  44c754:	mov	x0, x19
  44c758:	bl	458f78 <_obstack_memory_used@@Base+0xe974>
  44c75c:	mov	x0, x19
  44c760:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44c764:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c768:	stp	x29, x30, [sp, #-32]!
  44c76c:	mov	x29, sp
  44c770:	str	x19, [sp, #16]
  44c774:	bl	44ca30 <_obstack_memory_used@@Base+0x242c>
  44c778:	ldr	w2, [x0, #8]
  44c77c:	ldr	x1, [x0]
  44c780:	add	w2, w2, #0x1
  44c784:	str	w2, [x0, #8]
  44c788:	cbz	x1, 44c7c4 <_obstack_memory_used@@Base+0x21c0>
  44c78c:	mov	x3, #0xd500                	// #54528
  44c790:	ldr	x2, [x1, #80]
  44c794:	movk	x3, #0xbcd4, lsl #16
  44c798:	movk	x3, #0xaabc, lsl #32
  44c79c:	movk	x3, #0xb8b1, lsl #48
  44c7a0:	add	x2, x2, x3
  44c7a4:	cmp	x2, #0x1
  44c7a8:	b.ls	44c7c8 <_obstack_memory_used@@Base+0x21c4>  // b.plast
  44c7ac:	str	xzr, [x0]
  44c7b0:	add	x19, x1, #0x50
  44c7b4:	mov	x0, x19
  44c7b8:	bl	459318 <_obstack_memory_used@@Base+0xed14>
  44c7bc:	mov	x0, x19
  44c7c0:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44c7c4:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c7c8:	ldr	w0, [x1, #40]
  44c7cc:	neg	w0, w0
  44c7d0:	str	w0, [x1, #40]
  44c7d4:	b	44c7b0 <_obstack_memory_used@@Base+0x21ac>
  44c7d8:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44c7dc:	mov	x2, x0
  44c7e0:	add	x1, x1, #0xaf8
  44c7e4:	ldaxr	x0, [x1]
  44c7e8:	stlxr	w3, x2, [x1]
  44c7ec:	cbnz	w3, 44c7e4 <_obstack_memory_used@@Base+0x21e0>
  44c7f0:	ret
  44c7f4:	nop
  44c7f8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44c7fc:	add	x0, x0, #0xaf8
  44c800:	ldar	x0, [x0]
  44c804:	ret
  44c808:	stp	x29, x30, [sp, #-16]!
  44c80c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44c810:	add	x1, x1, #0x2c8
  44c814:	mov	x2, #0x1b                  	// #27
  44c818:	mov	x29, sp
  44c81c:	mov	w0, #0x2                   	// #2
  44c820:	bl	4027d0 <write@plt>
  44c824:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c828:	stp	x29, x30, [sp, #-16]!
  44c82c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44c830:	add	x1, x1, #0x2e8
  44c834:	mov	x2, #0x1e                  	// #30
  44c838:	mov	x29, sp
  44c83c:	mov	w0, #0x2                   	// #2
  44c840:	bl	4027d0 <write@plt>
  44c844:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c848:	stp	x29, x30, [sp, #-32]!
  44c84c:	mov	x29, sp
  44c850:	str	x19, [sp, #16]
  44c854:	cbz	x0, 44c880 <_obstack_memory_used@@Base+0x227c>
  44c858:	mov	x19, x0
  44c85c:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44c860:	mov	x1, #0xd500                	// #54528
  44c864:	movk	x1, #0xbcd4, lsl #16
  44c868:	ldr	x0, [x19]
  44c86c:	movk	x1, #0xaabc, lsl #32
  44c870:	movk	x1, #0xb8b1, lsl #48
  44c874:	add	x0, x0, x1
  44c878:	cmp	x0, #0x1
  44c87c:	b.ls	44c884 <_obstack_memory_used@@Base+0x2280>  // b.plast
  44c880:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c884:	ldur	x0, [x19, #-56]
  44c888:	bl	44c598 <_obstack_memory_used@@Base+0x1f94>
  44c88c:	nop
  44c890:	ldur	x0, [x0, #-8]
  44c894:	ret
  44c898:	stp	x29, x30, [sp, #-32]!
  44c89c:	mov	x29, sp
  44c8a0:	str	x19, [sp, #16]
  44c8a4:	mov	x19, x0
  44c8a8:	bl	44ca30 <_obstack_memory_used@@Base+0x242c>
  44c8ac:	mov	x1, x0
  44c8b0:	mov	x2, x19
  44c8b4:	mov	x4, #0xd500                	// #54528
  44c8b8:	movk	x4, #0xbcd4, lsl #16
  44c8bc:	movk	x4, #0xaabc, lsl #32
  44c8c0:	ldr	x3, [x2], #-80
  44c8c4:	movk	x4, #0xb8b1, lsl #48
  44c8c8:	ldr	x0, [x0]
  44c8cc:	add	x3, x3, x4
  44c8d0:	cmp	x3, #0x1
  44c8d4:	b.ls	44c8ec <_obstack_memory_used@@Base+0x22e8>  // b.plast
  44c8d8:	cbnz	x0, 44c930 <_obstack_memory_used@@Base+0x232c>
  44c8dc:	str	x2, [x1]
  44c8e0:	ldr	x19, [sp, #16]
  44c8e4:	ldp	x29, x30, [sp], #32
  44c8e8:	ret
  44c8ec:	ldur	w3, [x19, #-40]
  44c8f0:	mov	w5, #0x1                   	// #1
  44c8f4:	ldr	w4, [x1, #8]
  44c8f8:	cmp	w3, #0x0
  44c8fc:	sub	w5, w5, w3
  44c900:	csinc	w3, w5, w3, lt  // lt = tstop
  44c904:	stur	w3, [x19, #-40]
  44c908:	sub	w3, w4, #0x1
  44c90c:	str	w3, [x1, #8]
  44c910:	cmp	x0, x2
  44c914:	b.eq	44c920 <_obstack_memory_used@@Base+0x231c>  // b.none
  44c918:	stur	x0, [x19, #-48]
  44c91c:	str	x2, [x1]
  44c920:	ldur	x0, [x19, #-8]
  44c924:	ldr	x19, [sp, #16]
  44c928:	ldp	x29, x30, [sp], #32
  44c92c:	ret
  44c930:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c934:	nop
  44c938:	stp	x29, x30, [sp, #-16]!
  44c93c:	mov	x29, sp
  44c940:	bl	44ca08 <_obstack_memory_used@@Base+0x2404>
  44c944:	ldr	x1, [x0]
  44c948:	cbz	x1, 44c988 <_obstack_memory_used@@Base+0x2384>
  44c94c:	mov	x3, #0xd500                	// #54528
  44c950:	ldr	x2, [x1, #80]
  44c954:	movk	x3, #0xbcd4, lsl #16
  44c958:	movk	x3, #0xaabc, lsl #32
  44c95c:	movk	x3, #0xb8b1, lsl #48
  44c960:	add	x2, x2, x3
  44c964:	cmp	x2, #0x1
  44c968:	b.hi	44c9a8 <_obstack_memory_used@@Base+0x23a4>  // b.pmore
  44c96c:	ldr	w2, [x1, #40]
  44c970:	tbnz	w2, #31, 44c990 <_obstack_memory_used@@Base+0x238c>
  44c974:	subs	w2, w2, #0x1
  44c978:	b.eq	44c9b8 <_obstack_memory_used@@Base+0x23b4>  // b.none
  44c97c:	cmn	w2, #0x1
  44c980:	b.eq	44c9cc <_obstack_memory_used@@Base+0x23c8>  // b.none
  44c984:	str	w2, [x1, #40]
  44c988:	ldp	x29, x30, [sp], #16
  44c98c:	ret
  44c990:	adds	w2, w2, #0x1
  44c994:	b.ne	44c984 <_obstack_memory_used@@Base+0x2380>  // b.any
  44c998:	ldr	x3, [x1, #32]
  44c99c:	str	x3, [x0]
  44c9a0:	str	w2, [x1, #40]
  44c9a4:	b	44c988 <_obstack_memory_used@@Base+0x2384>
  44c9a8:	str	xzr, [x0]
  44c9ac:	add	x0, x1, #0x50
  44c9b0:	ldp	x29, x30, [sp], #16
  44c9b4:	b	459420 <_obstack_memory_used@@Base+0xee1c>
  44c9b8:	ldr	x2, [x1, #32]
  44c9bc:	str	x2, [x0]
  44c9c0:	add	x0, x1, #0x50
  44c9c4:	ldp	x29, x30, [sp], #16
  44c9c8:	b	459420 <_obstack_memory_used@@Base+0xee1c>
  44c9cc:	bl	44c5e0 <_obstack_memory_used@@Base+0x1fdc>
  44c9d0:	stp	x29, x30, [sp, #-16]!
  44c9d4:	mov	x29, sp
  44c9d8:	bl	44ca30 <_obstack_memory_used@@Base+0x242c>
  44c9dc:	ldr	w0, [x0, #8]
  44c9e0:	ldp	x29, x30, [sp], #16
  44c9e4:	cmp	w0, #0x0
  44c9e8:	cset	w0, ne  // ne = any
  44c9ec:	ret
  44c9f0:	stp	x29, x30, [sp, #-16]!
  44c9f4:	mov	x29, sp
  44c9f8:	bl	44ca30 <_obstack_memory_used@@Base+0x242c>
  44c9fc:	ldr	w0, [x0, #8]
  44ca00:	ldp	x29, x30, [sp], #16
  44ca04:	ret
  44ca08:	stp	x29, x30, [sp, #-16]!
  44ca0c:	mrs	x1, tpidr_el0
  44ca10:	movz	x0, #0x0, lsl #16
  44ca14:	movk	x0, #0x10
  44ca18:	nop
  44ca1c:	nop
  44ca20:	mov	x29, sp
  44ca24:	add	x0, x1, x0
  44ca28:	ldp	x29, x30, [sp], #16
  44ca2c:	ret
  44ca30:	stp	x29, x30, [sp, #-16]!
  44ca34:	mrs	x1, tpidr_el0
  44ca38:	movz	x0, #0x0, lsl #16
  44ca3c:	movk	x0, #0x10
  44ca40:	nop
  44ca44:	nop
  44ca48:	mov	x29, sp
  44ca4c:	add	x0, x1, x0
  44ca50:	ldp	x29, x30, [sp], #16
  44ca54:	ret
  44ca58:	stp	x29, x30, [sp, #-64]!
  44ca5c:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  44ca60:	mov	x29, sp
  44ca64:	ldrb	w1, [x0, #2816]
  44ca68:	cbnz	w1, 44cb50 <_obstack_memory_used@@Base+0x254c>
  44ca6c:	mov	w1, #0x1                   	// #1
  44ca70:	strb	w1, [x0, #2816]
  44ca74:	bl	456b90 <_obstack_memory_used@@Base+0xc58c>
  44ca78:	cbz	x0, 44cb24 <_obstack_memory_used@@Base+0x2520>
  44ca7c:	stp	x19, x20, [sp, #16]
  44ca80:	mov	w4, #0xffffffff            	// #-1
  44ca84:	add	x3, sp, #0x3c
  44ca88:	ldr	x19, [x0, #8]
  44ca8c:	stp	x21, x22, [sp, #32]
  44ca90:	adrp	x21, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44ca94:	mov	x2, #0x0                   	// #0
  44ca98:	mov	x1, #0x0                   	// #0
  44ca9c:	ldrb	w0, [x19]
  44caa0:	str	w4, [sp, #60]
  44caa4:	cmp	w0, #0x2a
  44caa8:	cinc	x19, x19, eq  // eq = none
  44caac:	mov	x0, x19
  44cab0:	bl	4569c8 <_obstack_memory_used@@Base+0xc3c4>
  44cab4:	mov	x20, x0
  44cab8:	ldr	x22, [x21, #3912]
  44cabc:	mov	x1, #0x1                   	// #1
  44cac0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44cac4:	mov	x2, #0x30                  	// #48
  44cac8:	add	x0, x0, #0x328
  44cacc:	ldr	x3, [x22]
  44cad0:	bl	402950 <fwrite@plt>
  44cad4:	ldr	w0, [sp, #60]
  44cad8:	ldr	x1, [x22]
  44cadc:	cbz	w0, 44cb18 <_obstack_memory_used@@Base+0x2514>
  44cae0:	mov	x0, x19
  44cae4:	bl	402500 <fputs@plt>
  44cae8:	ldr	x3, [x21, #3912]
  44caec:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44caf0:	mov	x2, #0x2                   	// #2
  44caf4:	add	x0, x0, #0x360
  44caf8:	mov	x1, #0x1                   	// #1
  44cafc:	ldr	x3, [x3]
  44cb00:	bl	402950 <fwrite@plt>
  44cb04:	ldr	w0, [sp, #60]
  44cb08:	cbnz	w0, 44cb14 <_obstack_memory_used@@Base+0x2510>
  44cb0c:	mov	x0, x20
  44cb10:	bl	402910 <free@plt>
  44cb14:	bl	44c768 <_obstack_memory_used@@Base+0x2164>
  44cb18:	mov	x0, x20
  44cb1c:	bl	402500 <fputs@plt>
  44cb20:	b	44cae8 <_obstack_memory_used@@Base+0x24e4>
  44cb24:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44cb28:	mov	x2, #0x2d                  	// #45
  44cb2c:	mov	x1, #0x1                   	// #1
  44cb30:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44cb34:	ldr	x3, [x3, #3912]
  44cb38:	add	x0, x0, #0x368
  44cb3c:	ldr	x3, [x3]
  44cb40:	bl	402950 <fwrite@plt>
  44cb44:	stp	x19, x20, [sp, #16]
  44cb48:	stp	x21, x22, [sp, #32]
  44cb4c:	bl	4027f0 <abort@plt>
  44cb50:	adrp	x3, 48c000 <_obstack_memory_used@@Base+0x419fc>
  44cb54:	mov	x2, #0x1d                  	// #29
  44cb58:	mov	x1, #0x1                   	// #1
  44cb5c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44cb60:	ldr	x3, [x3, #3912]
  44cb64:	add	x0, x0, #0x308
  44cb68:	stp	x19, x20, [sp, #16]
  44cb6c:	ldr	x3, [x3]
  44cb70:	stp	x21, x22, [sp, #32]
  44cb74:	bl	402950 <fwrite@plt>
  44cb78:	bl	4027f0 <abort@plt>
  44cb7c:	mov	x19, x1
  44cb80:	cmp	x1, #0x1
  44cb84:	b.ne	44cbe0 <_obstack_memory_used@@Base+0x25dc>  // b.any
  44cb88:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44cb8c:	ldr	x1, [x0]
  44cb90:	ldr	x1, [x1, #16]
  44cb94:	blr	x1
  44cb98:	mov	x20, x0
  44cb9c:	ldr	x3, [x21, #3912]
  44cba0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44cba4:	mov	x1, x19
  44cba8:	add	x0, x0, #0x398
  44cbac:	mov	x2, #0xb                   	// #11
  44cbb0:	ldr	x3, [x3]
  44cbb4:	bl	402950 <fwrite@plt>
  44cbb8:	ldr	x1, [x21, #3912]
  44cbbc:	mov	x0, x20
  44cbc0:	ldr	x1, [x1]
  44cbc4:	bl	402500 <fputs@plt>
  44cbc8:	ldr	x21, [x21, #3912]
  44cbcc:	mov	w0, #0xa                   	// #10
  44cbd0:	ldr	x1, [x21]
  44cbd4:	bl	4025e0 <fputc@plt>
  44cbd8:	bl	44c938 <_obstack_memory_used@@Base+0x2334>
  44cbdc:	bl	4027f0 <abort@plt>
  44cbe0:	bl	44c898 <_obstack_memory_used@@Base+0x2294>
  44cbe4:	bl	44c938 <_obstack_memory_used@@Base+0x2334>
  44cbe8:	bl	4027f0 <abort@plt>
  44cbec:	mov	x19, x0
  44cbf0:	bl	44c938 <_obstack_memory_used@@Base+0x2334>
  44cbf4:	mov	x0, x19
  44cbf8:	bl	459208 <_obstack_memory_used@@Base+0xec04>
  44cbfc:	nop
  44cc00:	sub	w5, w1, #0x1
  44cc04:	mov	x4, x0
  44cc08:	cmp	w5, #0x4f
  44cc0c:	b.ls	44cc18 <_obstack_memory_used@@Base+0x2614>  // b.plast
  44cc10:	mov	x0, #0x0                   	// #0
  44cc14:	ret
  44cc18:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44cc1c:	add	x0, x0, #0x3a4
  44cc20:	ldrb	w0, [x0, w5, uxtw]
  44cc24:	adr	x5, 44cc30 <_obstack_memory_used@@Base+0x262c>
  44cc28:	add	x0, x5, w0, sxtb #2
  44cc2c:	br	x0
  44cc30:	cbz	x3, 44cc10 <_obstack_memory_used@@Base+0x260c>
  44cc34:	ldp	w0, w5, [x4, #40]
  44cc38:	cmp	w0, w5
  44cc3c:	b.ge	44cc10 <_obstack_memory_used@@Base+0x260c>  // b.tcont
  44cc40:	mov	w5, #0x18                  	// #24
  44cc44:	add	w7, w0, #0x1
  44cc48:	ldr	x6, [x4, #32]
  44cc4c:	smull	x5, w0, w5
  44cc50:	add	x0, x6, x5
  44cc54:	str	wzr, [x0, #4]
  44cc58:	str	w7, [x4, #40]
  44cc5c:	str	w1, [x6, x5]
  44cc60:	stp	x2, x3, [x0, #8]
  44cc64:	ret
  44cc68:	cbnz	x2, 44cc34 <_obstack_memory_used@@Base+0x2630>
  44cc6c:	mov	x0, #0x0                   	// #0
  44cc70:	b	44cc14 <_obstack_memory_used@@Base+0x2610>
  44cc74:	cmp	x2, #0x0
  44cc78:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  44cc7c:	b.ne	44cc34 <_obstack_memory_used@@Base+0x2630>  // b.any
  44cc80:	mov	x0, #0x0                   	// #0
  44cc84:	b	44cc14 <_obstack_memory_used@@Base+0x2610>
  44cc88:	ldr	x3, [x0, #24]
  44cc8c:	mov	x2, x1
  44cc90:	mov	w4, #0x4f                  	// #79
  44cc94:	ldrb	w1, [x3]
  44cc98:	cmp	w1, #0x52
  44cc9c:	ccmp	w1, w4, #0x4, ne  // ne = any
  44cca0:	b.ne	44cccc <_obstack_memory_used@@Base+0x26c8>  // b.any
  44cca4:	ldr	w5, [x0, #72]
  44cca8:	cmp	w1, #0x52
  44ccac:	mov	w1, #0x20                  	// #32
  44ccb0:	add	w4, w5, #0x3
  44ccb4:	b.eq	44ccd4 <_obstack_memory_used@@Base+0x26d0>  // b.none
  44ccb8:	add	x3, x3, #0x1
  44ccbc:	str	x3, [x0, #24]
  44ccc0:	str	w4, [x0, #72]
  44ccc4:	mov	x3, #0x0                   	// #0
  44ccc8:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44cccc:	mov	x0, x2
  44ccd0:	ret
  44ccd4:	add	w4, w5, #0x2
  44ccd8:	add	x3, x3, #0x1
  44ccdc:	str	x3, [x0, #24]
  44cce0:	mov	w1, #0x1f                  	// #31
  44cce4:	str	w4, [x0, #72]
  44cce8:	mov	x3, #0x0                   	// #0
  44ccec:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ccf0:	cbz	x1, 44cdd0 <_obstack_memory_used@@Base+0x27cc>
  44ccf4:	stp	x29, x30, [sp, #-32]!
  44ccf8:	mov	x29, sp
  44ccfc:	stp	x19, x20, [sp, #16]
  44cd00:	mov	x20, x0
  44cd04:	mov	x19, x1
  44cd08:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44cd0c:	add	x0, x0, #0x3f4
  44cd10:	ldr	w1, [x19]
  44cd14:	sub	w1, w1, #0x1
  44cd18:	cmp	w1, #0x4f
  44cd1c:	b.ls	44cd2c <_obstack_memory_used@@Base+0x2728>  // b.plast
  44cd20:	ldp	x19, x20, [sp, #16]
  44cd24:	ldp	x29, x30, [sp], #32
  44cd28:	ret
  44cd2c:	ldrb	w1, [x0, w1, uxtw]
  44cd30:	adr	x2, 44cd3c <_obstack_memory_used@@Base+0x2738>
  44cd34:	add	x1, x2, w1, sxtb #2
  44cd38:	br	x1
  44cd3c:	ldr	x0, [x19, #8]
  44cd40:	ldr	w0, [x0]
  44cd44:	cmp	w0, #0x5
  44cd48:	b.ne	44cd58 <_obstack_memory_used@@Base+0x2754>  // b.any
  44cd4c:	ldr	w0, [x20, #348]
  44cd50:	add	w0, w0, #0x1
  44cd54:	str	w0, [x20, #348]
  44cd58:	ldr	w0, [x20, #308]
  44cd5c:	cmp	w0, #0x800
  44cd60:	b.gt	44cd20 <_obstack_memory_used@@Base+0x271c>
  44cd64:	ldr	x1, [x19, #8]
  44cd68:	add	w0, w0, #0x1
  44cd6c:	str	w0, [x20, #308]
  44cd70:	mov	x0, x20
  44cd74:	bl	44ccf0 <_obstack_memory_used@@Base+0x26ec>
  44cd78:	ldr	x1, [x19, #16]
  44cd7c:	mov	x0, x20
  44cd80:	bl	44ccf0 <_obstack_memory_used@@Base+0x26ec>
  44cd84:	ldr	w0, [x20, #308]
  44cd88:	sub	w0, w0, #0x1
  44cd8c:	str	w0, [x20, #308]
  44cd90:	ldp	x19, x20, [sp, #16]
  44cd94:	ldp	x29, x30, [sp], #32
  44cd98:	ret
  44cd9c:	ldr	x19, [x19, #8]
  44cda0:	cbnz	x19, 44cd10 <_obstack_memory_used@@Base+0x270c>
  44cda4:	b	44cd20 <_obstack_memory_used@@Base+0x271c>
  44cda8:	ldr	x19, [x19, #16]
  44cdac:	cbnz	x19, 44cd10 <_obstack_memory_used@@Base+0x270c>
  44cdb0:	b	44cd20 <_obstack_memory_used@@Base+0x271c>
  44cdb4:	ldr	w0, [x20, #364]
  44cdb8:	add	w0, w0, #0x1
  44cdbc:	str	w0, [x20, #364]
  44cdc0:	ldr	w0, [x20, #308]
  44cdc4:	cmp	w0, #0x800
  44cdc8:	b.gt	44cd20 <_obstack_memory_used@@Base+0x271c>
  44cdcc:	b	44cd64 <_obstack_memory_used@@Base+0x2760>
  44cdd0:	ret
  44cdd4:	nop
  44cdd8:	cbz	x2, 44ce78 <_obstack_memory_used@@Base+0x2874>
  44cddc:	stp	x29, x30, [sp, #-48]!
  44cde0:	mov	x29, sp
  44cde4:	stp	x19, x20, [sp, #16]
  44cde8:	mov	x20, x1
  44cdec:	mov	x19, x0
  44cdf0:	stp	x21, x22, [sp, #32]
  44cdf4:	add	x22, x1, x2
  44cdf8:	ldr	x1, [x0, #256]
  44cdfc:	b	44ce20 <_obstack_memory_used@@Base+0x281c>
  44ce00:	mov	x0, x1
  44ce04:	add	x1, x1, #0x1
  44ce08:	str	x1, [x19, #256]
  44ce0c:	add	x20, x20, #0x1
  44ce10:	cmp	x20, x22
  44ce14:	strb	w21, [x19, x0]
  44ce18:	strb	w21, [x19, #264]
  44ce1c:	b.eq	44ce68 <_obstack_memory_used@@Base+0x2864>  // b.none
  44ce20:	ldrb	w21, [x20]
  44ce24:	cmp	x1, #0xff
  44ce28:	b.ne	44ce00 <_obstack_memory_used@@Base+0x27fc>  // b.any
  44ce2c:	ldp	x3, x2, [x19, #272]
  44ce30:	strb	wzr, [x19, #255]
  44ce34:	mov	x0, x19
  44ce38:	add	x20, x20, #0x1
  44ce3c:	blr	x3
  44ce40:	ldr	x2, [x19, #320]
  44ce44:	mov	x0, #0x0                   	// #0
  44ce48:	mov	x1, #0x1                   	// #1
  44ce4c:	str	x1, [x19, #256]
  44ce50:	add	x2, x2, x1
  44ce54:	str	x2, [x19, #320]
  44ce58:	strb	w21, [x19, x0]
  44ce5c:	cmp	x20, x22
  44ce60:	strb	w21, [x19, #264]
  44ce64:	b.ne	44ce20 <_obstack_memory_used@@Base+0x281c>  // b.any
  44ce68:	ldp	x19, x20, [sp, #16]
  44ce6c:	ldp	x21, x22, [sp, #32]
  44ce70:	ldp	x29, x30, [sp], #48
  44ce74:	ret
  44ce78:	ret
  44ce7c:	nop
  44ce80:	ldr	x3, [x0]
  44ce84:	mov	x6, x0
  44ce88:	ldrb	w4, [x3]
  44ce8c:	cmp	w4, #0x6e
  44ce90:	b.eq	44cf1c <_obstack_memory_used@@Base+0x2918>  // b.none
  44ce94:	sub	w0, w4, #0x30
  44ce98:	and	w0, w0, #0xff
  44ce9c:	cmp	w0, #0x9
  44cea0:	b.hi	44cf44 <_obstack_memory_used@@Base+0x2940>  // b.pmore
  44cea4:	mov	w9, #0x0                   	// #0
  44cea8:	mov	w8, #0xcccd                	// #52429
  44ceac:	add	x3, x3, #0x1
  44ceb0:	mov	w0, #0x0                   	// #0
  44ceb4:	mov	w7, #0x7fffffff            	// #2147483647
  44ceb8:	movk	w8, #0xcccc, lsl #16
  44cebc:	b	44ced0 <_obstack_memory_used@@Base+0x28cc>
  44cec0:	umull	x1, w1, w8
  44cec4:	lsr	x1, x1, #35
  44cec8:	cmp	w1, w0
  44cecc:	b.lt	44cf14 <_obstack_memory_used@@Base+0x2910>  // b.tstop
  44ced0:	str	x3, [x6]
  44ced4:	add	w0, w0, w0, lsl #2
  44ced8:	add	x3, x3, #0x1
  44cedc:	ldurb	w1, [x3, #-1]
  44cee0:	add	w5, w4, w0, lsl #1
  44cee4:	sub	w0, w5, #0x30
  44cee8:	sub	w2, w1, #0x30
  44ceec:	mov	w4, w1
  44cef0:	sub	w1, w7, w2
  44cef4:	and	w2, w2, #0xff
  44cef8:	cmp	w2, #0x9
  44cefc:	b.ls	44cec0 <_obstack_memory_used@@Base+0x28bc>  // b.plast
  44cf00:	cmp	w9, #0x0
  44cf04:	mov	w1, #0x30                  	// #48
  44cf08:	sub	w5, w1, w5
  44cf0c:	csel	w0, w5, w0, ne  // ne = any
  44cf10:	ret
  44cf14:	mov	w0, #0xffffffff            	// #-1
  44cf18:	ret
  44cf1c:	add	x1, x3, #0x1
  44cf20:	str	x1, [x0]
  44cf24:	ldrb	w4, [x3, #1]
  44cf28:	sub	w0, w4, #0x30
  44cf2c:	and	w0, w0, #0xff
  44cf30:	cmp	w0, #0x9
  44cf34:	b.hi	44cf44 <_obstack_memory_used@@Base+0x2940>  // b.pmore
  44cf38:	mov	x3, x1
  44cf3c:	mov	w9, #0x1                   	// #1
  44cf40:	b	44cea8 <_obstack_memory_used@@Base+0x28a4>
  44cf44:	mov	w0, #0x0                   	// #0
  44cf48:	ret
  44cf4c:	nop
  44cf50:	mov	x1, x0
  44cf54:	ldr	w0, [x0, #40]
  44cf58:	ldr	w2, [x1, #44]
  44cf5c:	cmp	w0, w2
  44cf60:	b.ge	44cfac <_obstack_memory_used@@Base+0x29a8>  // b.tcont
  44cf64:	stp	x29, x30, [sp, #-16]!
  44cf68:	mov	w2, #0x18                  	// #24
  44cf6c:	add	w5, w0, #0x1
  44cf70:	mov	x29, sp
  44cf74:	ldr	x3, [x1, #32]
  44cf78:	smull	x2, w0, w2
  44cf7c:	mov	w4, #0x42                  	// #66
  44cf80:	add	x0, x1, #0x18
  44cf84:	add	x10, x3, x2
  44cf88:	str	wzr, [x10, #4]
  44cf8c:	str	w5, [x1, #40]
  44cf90:	str	w4, [x3, x2]
  44cf94:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44cf98:	sxtw	x0, w0
  44cf9c:	str	x0, [x10, #8]
  44cfa0:	mov	x0, x10
  44cfa4:	ldp	x29, x30, [sp], #16
  44cfa8:	ret
  44cfac:	mov	x10, #0x0                   	// #0
  44cfb0:	mov	x0, x10
  44cfb4:	ret
  44cfb8:	ldr	x1, [x0, #24]
  44cfbc:	mov	x10, x0
  44cfc0:	ldrb	w0, [x1]
  44cfc4:	cmp	w0, #0x5f
  44cfc8:	b.eq	44d00c <_obstack_memory_used@@Base+0x2a08>  // b.none
  44cfcc:	cmp	w0, #0x6e
  44cfd0:	b.eq	44d024 <_obstack_memory_used@@Base+0x2a20>  // b.none
  44cfd4:	stp	x29, x30, [sp, #-16]!
  44cfd8:	add	x0, x10, #0x18
  44cfdc:	mov	x29, sp
  44cfe0:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44cfe4:	adds	w0, w0, #0x1
  44cfe8:	b.mi	44d01c <_obstack_memory_used@@Base+0x2a18>  // b.first
  44cfec:	ldr	x1, [x10, #24]
  44cff0:	ldrb	w2, [x1]
  44cff4:	cmp	w2, #0x5f
  44cff8:	b.ne	44d01c <_obstack_memory_used@@Base+0x2a18>  // b.any
  44cffc:	add	x1, x1, #0x1
  44d000:	str	x1, [x10, #24]
  44d004:	ldp	x29, x30, [sp], #16
  44d008:	ret
  44d00c:	add	x1, x1, #0x1
  44d010:	mov	w0, #0x0                   	// #0
  44d014:	str	x1, [x10, #24]
  44d018:	ret
  44d01c:	mov	w0, #0xffffffff            	// #-1
  44d020:	b	44d004 <_obstack_memory_used@@Base+0x2a00>
  44d024:	mov	w0, #0xffffffff            	// #-1
  44d028:	ret
  44d02c:	nop
  44d030:	ldr	x1, [x0, #24]
  44d034:	ldrb	w2, [x1]
  44d038:	cmp	w2, #0x54
  44d03c:	b.ne	44d0a8 <_obstack_memory_used@@Base+0x2aa4>  // b.any
  44d040:	stp	x29, x30, [sp, #-16]!
  44d044:	add	x1, x1, #0x1
  44d048:	mov	x11, x0
  44d04c:	mov	x29, sp
  44d050:	str	x1, [x0, #24]
  44d054:	bl	44cfb8 <_obstack_memory_used@@Base+0x29b4>
  44d058:	tbnz	w0, #31, 44d09c <_obstack_memory_used@@Base+0x2a98>
  44d05c:	ldp	w1, w2, [x11, #40]
  44d060:	cmp	w1, w2
  44d064:	b.ge	44d09c <_obstack_memory_used@@Base+0x2a98>  // b.tcont
  44d068:	mov	w2, #0x18                  	// #24
  44d06c:	add	w5, w1, #0x1
  44d070:	ldr	x3, [x11, #32]
  44d074:	smull	x2, w1, w2
  44d078:	sxtw	x1, w0
  44d07c:	mov	w4, #0x5                   	// #5
  44d080:	add	x0, x3, x2
  44d084:	str	wzr, [x0, #4]
  44d088:	str	w5, [x11, #40]
  44d08c:	str	w4, [x3, x2]
  44d090:	str	x1, [x0, #8]
  44d094:	ldp	x29, x30, [sp], #16
  44d098:	ret
  44d09c:	mov	x0, #0x0                   	// #0
  44d0a0:	ldp	x29, x30, [sp], #16
  44d0a4:	ret
  44d0a8:	mov	x0, #0x0                   	// #0
  44d0ac:	ret
  44d0b0:	mov	x10, x0
  44d0b4:	stp	x29, x30, [sp, #-16]!
  44d0b8:	add	x0, x0, #0x18
  44d0bc:	mov	x29, sp
  44d0c0:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44d0c4:	cmp	w0, #0x0
  44d0c8:	b.le	44d1c0 <_obstack_memory_used@@Base+0x2bbc>
  44d0cc:	mov	w1, w0
  44d0d0:	sxtw	x3, w0
  44d0d4:	ldr	x0, [x10, #8]
  44d0d8:	ldr	x2, [x10, #24]
  44d0dc:	sub	x0, x0, x2
  44d0e0:	cmp	x0, w1, sxtw
  44d0e4:	b.lt	44d1b8 <_obstack_memory_used@@Base+0x2bb4>  // b.tstop
  44d0e8:	ldr	w0, [x10, #16]
  44d0ec:	add	x3, x2, x3
  44d0f0:	str	x3, [x10, #24]
  44d0f4:	tbz	w0, #2, 44d104 <_obstack_memory_used@@Base+0x2b00>
  44d0f8:	ldrb	w0, [x2, w1, sxtw]
  44d0fc:	cmp	w0, #0x24
  44d100:	b.eq	44d1cc <_obstack_memory_used@@Base+0x2bc8>  // b.none
  44d104:	ldp	w0, w3, [x10, #40]
  44d108:	cmp	w1, #0x9
  44d10c:	b.gt	44d148 <_obstack_memory_used@@Base+0x2b44>
  44d110:	cmp	w3, w0
  44d114:	b.le	44d1b8 <_obstack_memory_used@@Base+0x2bb4>
  44d118:	ldr	x4, [x10, #32]
  44d11c:	mov	w5, #0x18                  	// #24
  44d120:	add	w3, w0, #0x1
  44d124:	smaddl	x0, w0, w5, x4
  44d128:	str	wzr, [x0, #4]
  44d12c:	str	w3, [x10, #40]
  44d130:	cbz	x2, 44d1b8 <_obstack_memory_used@@Base+0x2bb4>
  44d134:	stp	xzr, x2, [x0]
  44d138:	str	w1, [x0, #16]
  44d13c:	str	x0, [x10, #64]
  44d140:	ldp	x29, x30, [sp], #16
  44d144:	ret
  44d148:	mov	x4, #0x475f                	// #18271
  44d14c:	ldr	x5, [x2]
  44d150:	movk	x4, #0x4f4c, lsl #16
  44d154:	movk	x4, #0x4142, lsl #32
  44d158:	movk	x4, #0x5f4c, lsl #48
  44d15c:	cmp	x5, x4
  44d160:	b.ne	44d18c <_obstack_memory_used@@Base+0x2b88>  // b.any
  44d164:	ldrb	w4, [x2, #8]
  44d168:	mov	w6, #0x5f                  	// #95
  44d16c:	mov	w5, #0x24                  	// #36
  44d170:	cmp	w4, #0x2e
  44d174:	ccmp	w4, w6, #0x4, ne  // ne = any
  44d178:	ccmp	w4, w5, #0x4, ne  // ne = any
  44d17c:	b.ne	44d18c <_obstack_memory_used@@Base+0x2b88>  // b.any
  44d180:	ldrb	w4, [x2, #9]
  44d184:	cmp	w4, #0x4e
  44d188:	b.eq	44d1e4 <_obstack_memory_used@@Base+0x2be0>  // b.none
  44d18c:	cmp	w3, w0
  44d190:	b.le	44d1b8 <_obstack_memory_used@@Base+0x2bb4>
  44d194:	ldr	x4, [x10, #32]
  44d198:	mov	w5, #0x18                  	// #24
  44d19c:	add	w3, w0, #0x1
  44d1a0:	smaddl	x0, w0, w5, x4
  44d1a4:	str	wzr, [x0, #4]
  44d1a8:	str	w3, [x10, #40]
  44d1ac:	stp	xzr, x2, [x0]
  44d1b0:	str	w1, [x0, #16]
  44d1b4:	b	44d13c <_obstack_memory_used@@Base+0x2b38>
  44d1b8:	mov	x0, #0x0                   	// #0
  44d1bc:	b	44d13c <_obstack_memory_used@@Base+0x2b38>
  44d1c0:	mov	x0, #0x0                   	// #0
  44d1c4:	ldp	x29, x30, [sp], #16
  44d1c8:	ret
  44d1cc:	add	x3, x3, #0x1
  44d1d0:	str	x3, [x10, #24]
  44d1d4:	cmp	w1, #0x9
  44d1d8:	ldp	w0, w3, [x10, #40]
  44d1dc:	b.le	44d110 <_obstack_memory_used@@Base+0x2b0c>
  44d1e0:	b	44d148 <_obstack_memory_used@@Base+0x2b44>
  44d1e4:	ldr	w2, [x10, #72]
  44d1e8:	cmp	w3, w0
  44d1ec:	add	w2, w2, #0x16
  44d1f0:	sub	w1, w2, w1
  44d1f4:	str	w1, [x10, #72]
  44d1f8:	b.le	44d1b8 <_obstack_memory_used@@Base+0x2bb4>
  44d1fc:	mov	w1, #0x18                  	// #24
  44d200:	add	w2, w0, #0x1
  44d204:	ldr	x3, [x10, #32]
  44d208:	smull	x1, w0, w1
  44d20c:	str	w2, [x10, #40]
  44d210:	mov	w4, #0x15                  	// #21
  44d214:	add	x0, x3, x1
  44d218:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44d21c:	add	x2, x2, #0x2d8
  44d220:	str	xzr, [x3, x1]
  44d224:	str	x2, [x0, #8]
  44d228:	str	w4, [x0, #16]
  44d22c:	b	44d13c <_obstack_memory_used@@Base+0x2b38>
  44d230:	ldr	x3, [x0, #24]
  44d234:	mov	x11, x0
  44d238:	ldr	x13, [x0, #64]
  44d23c:	mov	x12, x1
  44d240:	ldrb	w0, [x3]
  44d244:	cmp	w0, #0x42
  44d248:	b.ne	44d2a0 <_obstack_memory_used@@Base+0x2c9c>  // b.any
  44d24c:	stp	x29, x30, [sp, #-16]!
  44d250:	mov	x29, sp
  44d254:	nop
  44d258:	add	x3, x3, #0x1
  44d25c:	str	x3, [x11, #24]
  44d260:	mov	x0, x11
  44d264:	bl	44d0b0 <_obstack_memory_used@@Base+0x2aac>
  44d268:	mov	x3, x0
  44d26c:	mov	x2, x12
  44d270:	mov	x0, x11
  44d274:	mov	w1, #0x4c                  	// #76
  44d278:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44d27c:	ldr	x3, [x11, #24]
  44d280:	mov	x12, x0
  44d284:	ldrb	w0, [x3]
  44d288:	cmp	w0, #0x42
  44d28c:	b.eq	44d258 <_obstack_memory_used@@Base+0x2c54>  // b.none
  44d290:	str	x13, [x11, #64]
  44d294:	mov	x0, x12
  44d298:	ldp	x29, x30, [sp], #16
  44d29c:	ret
  44d2a0:	mov	x0, x1
  44d2a4:	str	x13, [x11, #64]
  44d2a8:	ret
  44d2ac:	nop
  44d2b0:	mov	x14, x0
  44d2b4:	ldr	x0, [x0, #24]
  44d2b8:	ldrb	w2, [x0]
  44d2bc:	cmp	w2, #0x53
  44d2c0:	b.ne	44d330 <_obstack_memory_used@@Base+0x2d2c>  // b.any
  44d2c4:	add	x2, x0, #0x1
  44d2c8:	str	x2, [x14, #24]
  44d2cc:	ldrb	w2, [x0, #1]
  44d2d0:	cbnz	w2, 44d338 <_obstack_memory_used@@Base+0x2d34>
  44d2d4:	ldr	w0, [x14, #16]
  44d2d8:	and	w1, w1, #0x1
  44d2dc:	ands	w3, w0, #0x8
  44d2e0:	ubfx	x4, x0, #3, #1
  44d2e4:	csel	w1, w1, wzr, eq  // eq = none
  44d2e8:	cbz	w1, 44d304 <_obstack_memory_used@@Base+0x2d00>
  44d2ec:	ldr	x0, [x14, #24]
  44d2f0:	ldrb	w0, [x0]
  44d2f4:	sub	w0, w0, #0x43
  44d2f8:	and	w0, w0, #0xff
  44d2fc:	cmp	w0, #0x1
  44d300:	csinc	w4, w4, wzr, hi  // hi = pmore
  44d304:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x409fc>
  44d308:	add	x0, x0, #0xdf0
  44d30c:	add	x3, x0, #0x188
  44d310:	mov	w1, #0x74                  	// #116
  44d314:	b	44d31c <_obstack_memory_used@@Base+0x2d18>
  44d318:	ldrb	w1, [x0]
  44d31c:	cmp	w1, w2
  44d320:	b.eq	44d40c <_obstack_memory_used@@Base+0x2e08>  // b.none
  44d324:	add	x0, x0, #0x38
  44d328:	cmp	x0, x3
  44d32c:	b.ne	44d318 <_obstack_memory_used@@Base+0x2d14>  // b.any
  44d330:	mov	x0, #0x0                   	// #0
  44d334:	ret
  44d338:	add	x2, x0, #0x2
  44d33c:	str	x2, [x14, #24]
  44d340:	ldrb	w2, [x0, #1]
  44d344:	sub	w5, w2, #0x30
  44d348:	cmp	w2, #0x5f
  44d34c:	and	w0, w5, #0xff
  44d350:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  44d354:	b.hi	44d37c <_obstack_memory_used@@Base+0x2d78>  // b.pmore
  44d358:	cmp	w2, #0x5f
  44d35c:	mov	w1, #0x0                   	// #0
  44d360:	b.ne	44d390 <_obstack_memory_used@@Base+0x2d8c>  // b.any
  44d364:	ldr	w0, [x14, #56]
  44d368:	cmp	w0, w1
  44d36c:	b.ls	44d330 <_obstack_memory_used@@Base+0x2d2c>  // b.plast
  44d370:	ldr	x0, [x14, #48]
  44d374:	ldr	x0, [x0, w1, uxtw #3]
  44d378:	ret
  44d37c:	sub	w0, w2, #0x41
  44d380:	and	w0, w0, #0xff
  44d384:	cmp	w0, #0x19
  44d388:	b.hi	44d2d4 <_obstack_memory_used@@Base+0x2cd0>  // b.pmore
  44d38c:	nop
  44d390:	mov	w3, #0x0                   	// #0
  44d394:	nop
  44d398:	add	w1, w3, w3, lsl #3
  44d39c:	sub	w6, w2, #0x41
  44d3a0:	mov	w4, w1
  44d3a4:	and	w5, w5, #0xff
  44d3a8:	add	w1, w2, w1, lsl #2
  44d3ac:	and	w6, w6, #0xff
  44d3b0:	sub	w1, w1, #0x37
  44d3b4:	add	w2, w2, w4, lsl #2
  44d3b8:	cmp	w5, #0x9
  44d3bc:	b.hi	44d400 <_obstack_memory_used@@Base+0x2dfc>  // b.pmore
  44d3c0:	sub	w1, w2, #0x30
  44d3c4:	cmp	w3, w1
  44d3c8:	b.hi	44d330 <_obstack_memory_used@@Base+0x2d2c>  // b.pmore
  44d3cc:	ldr	x4, [x14, #24]
  44d3d0:	mov	w3, w1
  44d3d4:	add	x0, x4, #0x1
  44d3d8:	ldrb	w2, [x4]
  44d3dc:	cbz	w2, 44d3f0 <_obstack_memory_used@@Base+0x2dec>
  44d3e0:	str	x0, [x14, #24]
  44d3e4:	ldrb	w2, [x4]
  44d3e8:	cmp	w2, #0x5f
  44d3ec:	b.eq	44d3f8 <_obstack_memory_used@@Base+0x2df4>  // b.none
  44d3f0:	sub	w5, w2, #0x30
  44d3f4:	b	44d398 <_obstack_memory_used@@Base+0x2d94>
  44d3f8:	add	w1, w1, #0x1
  44d3fc:	b	44d364 <_obstack_memory_used@@Base+0x2d60>
  44d400:	cmp	w6, #0x19
  44d404:	b.ls	44d3c4 <_obstack_memory_used@@Base+0x2dc0>  // b.plast
  44d408:	b	44d330 <_obstack_memory_used@@Base+0x2d2c>
  44d40c:	ldr	x5, [x0, #40]
  44d410:	ldp	w1, w3, [x14, #40]
  44d414:	cbz	x5, 44d450 <_obstack_memory_used@@Base+0x2e4c>
  44d418:	ldr	w9, [x0, #48]
  44d41c:	cmp	w3, w1
  44d420:	b.le	44d508 <_obstack_memory_used@@Base+0x2f04>
  44d424:	mov	w8, #0x18                  	// #24
  44d428:	ldr	x7, [x14, #32]
  44d42c:	smull	x6, w1, w8
  44d430:	add	w1, w1, #0x1
  44d434:	add	x2, x7, x6
  44d438:	str	wzr, [x2, #4]
  44d43c:	str	w1, [x14, #40]
  44d440:	str	w8, [x7, x6]
  44d444:	str	x5, [x2, #8]
  44d448:	str	w9, [x2, #16]
  44d44c:	str	x2, [x14, #64]
  44d450:	cbz	w4, 44d4ac <_obstack_memory_used@@Base+0x2ea8>
  44d454:	ldr	w2, [x0, #32]
  44d458:	ldr	x5, [x0, #24]
  44d45c:	cmp	w1, w3
  44d460:	ldr	w0, [x14, #72]
  44d464:	add	w0, w0, w2
  44d468:	str	w0, [x14, #72]
  44d46c:	b.ge	44d500 <_obstack_memory_used@@Base+0x2efc>  // b.tcont
  44d470:	mov	w4, #0x18                  	// #24
  44d474:	add	w6, w1, #0x1
  44d478:	ldr	x3, [x14, #32]
  44d47c:	smull	x1, w1, w4
  44d480:	add	x0, x3, x1
  44d484:	str	wzr, [x0, #4]
  44d488:	str	w6, [x14, #40]
  44d48c:	str	w4, [x3, x1]
  44d490:	str	x5, [x0, #8]
  44d494:	str	w2, [x0, #16]
  44d498:	ldr	x1, [x14, #24]
  44d49c:	ldrb	w1, [x1]
  44d4a0:	cmp	w1, #0x42
  44d4a4:	b.eq	44d4b8 <_obstack_memory_used@@Base+0x2eb4>  // b.none
  44d4a8:	ret
  44d4ac:	ldr	w2, [x0, #16]
  44d4b0:	ldr	x5, [x0, #8]
  44d4b4:	b	44d45c <_obstack_memory_used@@Base+0x2e58>
  44d4b8:	stp	x29, x30, [sp, #-16]!
  44d4bc:	mov	x1, x0
  44d4c0:	mov	x0, x14
  44d4c4:	mov	x29, sp
  44d4c8:	bl	44d230 <_obstack_memory_used@@Base+0x2c2c>
  44d4cc:	cbz	x0, 44d4f4 <_obstack_memory_used@@Base+0x2ef0>
  44d4d0:	ldp	w1, w2, [x14, #56]
  44d4d4:	cmp	w1, w2
  44d4d8:	b.ge	44d4f4 <_obstack_memory_used@@Base+0x2ef0>  // b.tcont
  44d4dc:	ldr	x3, [x14, #48]
  44d4e0:	add	w2, w1, #0x1
  44d4e4:	str	x0, [x3, w1, sxtw #3]
  44d4e8:	str	w2, [x14, #56]
  44d4ec:	ldp	x29, x30, [sp], #16
  44d4f0:	ret
  44d4f4:	mov	x0, #0x0                   	// #0
  44d4f8:	ldp	x29, x30, [sp], #16
  44d4fc:	ret
  44d500:	mov	x0, #0x0                   	// #0
  44d504:	b	44d498 <_obstack_memory_used@@Base+0x2e94>
  44d508:	mov	x2, #0x0                   	// #0
  44d50c:	str	x2, [x14, #64]
  44d510:	b	44d450 <_obstack_memory_used@@Base+0x2e4c>
  44d514:	nop
  44d518:	mov	x10, x0
  44d51c:	cbnz	w1, 44d538 <_obstack_memory_used@@Base+0x2f34>
  44d520:	ldr	x0, [x0, #24]
  44d524:	ldrb	w1, [x0]
  44d528:	cbz	w1, 44d578 <_obstack_memory_used@@Base+0x2f74>
  44d52c:	add	x1, x0, #0x1
  44d530:	str	x1, [x10, #24]
  44d534:	ldrb	w1, [x0]
  44d538:	stp	x29, x30, [sp, #-16]!
  44d53c:	cmp	w1, #0x68
  44d540:	mov	x29, sp
  44d544:	b.eq	44d5b4 <_obstack_memory_used@@Base+0x2fb0>  // b.none
  44d548:	cmp	w1, #0x76
  44d54c:	b.ne	44d56c <_obstack_memory_used@@Base+0x2f68>  // b.any
  44d550:	add	x11, x10, #0x18
  44d554:	mov	x0, x11
  44d558:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44d55c:	ldr	x0, [x10, #24]
  44d560:	ldrb	w1, [x0]
  44d564:	cmp	w1, #0x5f
  44d568:	b.eq	44d580 <_obstack_memory_used@@Base+0x2f7c>  // b.none
  44d56c:	mov	w0, #0x0                   	// #0
  44d570:	ldp	x29, x30, [sp], #16
  44d574:	ret
  44d578:	mov	w0, #0x0                   	// #0
  44d57c:	ret
  44d580:	add	x0, x0, #0x1
  44d584:	str	x0, [x10, #24]
  44d588:	mov	x0, x11
  44d58c:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44d590:	ldr	x0, [x10, #24]
  44d594:	ldrb	w1, [x0]
  44d598:	cmp	w1, #0x5f
  44d59c:	b.ne	44d56c <_obstack_memory_used@@Base+0x2f68>  // b.any
  44d5a0:	add	x1, x0, #0x1
  44d5a4:	str	x1, [x10, #24]
  44d5a8:	mov	w0, #0x1                   	// #1
  44d5ac:	ldp	x29, x30, [sp], #16
  44d5b0:	ret
  44d5b4:	add	x0, x10, #0x18
  44d5b8:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44d5bc:	b	44d590 <_obstack_memory_used@@Base+0x2f8c>
  44d5c0:	mov	x2, x0
  44d5c4:	mov	w3, #0x56                  	// #86
  44d5c8:	mov	w0, #0x4b                  	// #75
  44d5cc:	ldrb	w1, [x2]
  44d5d0:	cmp	w1, #0x72
  44d5d4:	ccmp	w1, w3, #0x4, ne  // ne = any
  44d5d8:	ccmp	w1, w0, #0x4, ne  // ne = any
  44d5dc:	mov	w0, #0x1                   	// #1
  44d5e0:	b.eq	44d5f0 <_obstack_memory_used@@Base+0x2fec>  // b.none
  44d5e4:	cmp	w1, #0x44
  44d5e8:	mov	w0, #0x0                   	// #0
  44d5ec:	b.eq	44d5f4 <_obstack_memory_used@@Base+0x2ff0>  // b.none
  44d5f0:	ret
  44d5f4:	ldrb	w0, [x2, #1]
  44d5f8:	and	w1, w0, #0xffffffdf
  44d5fc:	sub	w0, w0, #0x77
  44d600:	cmp	w1, #0x4f
  44d604:	and	w0, w0, #0xff
  44d608:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  44d60c:	cset	w0, ls  // ls = plast
  44d610:	ret
  44d614:	nop
  44d618:	ldr	x1, [x0, #24]
  44d61c:	mov	x10, x0
  44d620:	ldrb	w0, [x1]
  44d624:	cmp	w0, #0x5f
  44d628:	b.eq	44d634 <_obstack_memory_used@@Base+0x3030>  // b.none
  44d62c:	mov	w0, #0x1                   	// #1
  44d630:	ret
  44d634:	stp	x29, x30, [sp, #-16]!
  44d638:	add	x0, x1, #0x1
  44d63c:	mov	x29, sp
  44d640:	str	x0, [x10, #24]
  44d644:	ldrb	w0, [x1, #1]
  44d648:	cmp	w0, #0x5f
  44d64c:	b.eq	44d670 <_obstack_memory_used@@Base+0x306c>  // b.none
  44d650:	add	x0, x10, #0x18
  44d654:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44d658:	mov	w1, w0
  44d65c:	mov	w0, #0x0                   	// #0
  44d660:	tbnz	w1, #31, 44d668 <_obstack_memory_used@@Base+0x3064>
  44d664:	mov	w0, #0x1                   	// #1
  44d668:	ldp	x29, x30, [sp], #16
  44d66c:	ret
  44d670:	mov	x0, x10
  44d674:	add	x1, x1, #0x2
  44d678:	str	x1, [x0, #24]!
  44d67c:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44d680:	tbnz	w0, #31, 44d6b0 <_obstack_memory_used@@Base+0x30ac>
  44d684:	cmp	w0, #0x9
  44d688:	b.le	44d664 <_obstack_memory_used@@Base+0x3060>
  44d68c:	ldr	x1, [x10, #24]
  44d690:	mov	w0, #0x0                   	// #0
  44d694:	ldrb	w2, [x1]
  44d698:	cmp	w2, #0x5f
  44d69c:	b.ne	44d668 <_obstack_memory_used@@Base+0x3064>  // b.any
  44d6a0:	add	x1, x1, #0x1
  44d6a4:	mov	w0, #0x1                   	// #1
  44d6a8:	str	x1, [x10, #24]
  44d6ac:	b	44d668 <_obstack_memory_used@@Base+0x3064>
  44d6b0:	mov	w0, #0x0                   	// #0
  44d6b4:	b	44d668 <_obstack_memory_used@@Base+0x3064>
  44d6b8:	cbnz	x0, 44d6d4 <_obstack_memory_used@@Base+0x30d0>
  44d6bc:	b	44d6e0 <_obstack_memory_used@@Base+0x30dc>
  44d6c0:	cmp	w1, #0x0
  44d6c4:	b.le	44d6e8 <_obstack_memory_used@@Base+0x30e4>
  44d6c8:	ldr	x0, [x0, #16]
  44d6cc:	sub	w1, w1, #0x1
  44d6d0:	cbz	x0, 44d6e4 <_obstack_memory_used@@Base+0x30e0>
  44d6d4:	ldr	w2, [x0]
  44d6d8:	cmp	w2, #0x2f
  44d6dc:	b.eq	44d6c0 <_obstack_memory_used@@Base+0x30bc>  // b.none
  44d6e0:	mov	x0, #0x0                   	// #0
  44d6e4:	ret
  44d6e8:	b.ne	44d6e0 <_obstack_memory_used@@Base+0x30dc>  // b.any
  44d6ec:	ldr	x0, [x0, #8]
  44d6f0:	ret
  44d6f4:	nop
  44d6f8:	mov	x2, x0
  44d6fc:	ldr	x0, [x0, #288]
  44d700:	cbz	x0, 44d718 <_obstack_memory_used@@Base+0x3114>
  44d704:	ldr	x1, [x1]
  44d708:	ldr	x0, [x0, #8]
  44d70c:	ldr	x0, [x0, #16]
  44d710:	tbnz	w1, #31, 44d720 <_obstack_memory_used@@Base+0x311c>
  44d714:	b	44d6b8 <_obstack_memory_used@@Base+0x30b4>
  44d718:	mov	w1, #0x1                   	// #1
  44d71c:	str	w1, [x2, #304]
  44d720:	ret
  44d724:	nop
  44d728:	cbz	x1, 44d7fc <_obstack_memory_used@@Base+0x31f8>
  44d72c:	stp	x29, x30, [sp, #-48]!
  44d730:	mov	x29, sp
  44d734:	stp	x21, x22, [sp, #32]
  44d738:	mov	x21, #0x8001                	// #32769
  44d73c:	movk	x21, #0x410, lsl #16
  44d740:	movk	x21, #0xc600, lsl #32
  44d744:	stp	x19, x20, [sp, #16]
  44d748:	mov	x20, x0
  44d74c:	mov	x19, x1
  44d750:	mov	x22, #0x1                   	// #1
  44d754:	movk	x21, #0x19, lsl #48
  44d758:	ldr	w2, [x19]
  44d75c:	cmp	w2, #0x8
  44d760:	b.eq	44d778 <_obstack_memory_used@@Base+0x3174>  // b.none
  44d764:	b.hi	44d7cc <_obstack_memory_used@@Base+0x31c8>  // b.pmore
  44d768:	cmp	w2, #0x6
  44d76c:	b.eq	44d780 <_obstack_memory_used@@Base+0x317c>  // b.none
  44d770:	cmp	w2, #0x7
  44d774:	b.ne	44d794 <_obstack_memory_used@@Base+0x3190>  // b.any
  44d778:	ldr	x19, [x19, #16]
  44d77c:	cbnz	x19, 44d758 <_obstack_memory_used@@Base+0x3154>
  44d780:	mov	x0, #0x0                   	// #0
  44d784:	ldp	x19, x20, [sp, #16]
  44d788:	ldp	x21, x22, [sp, #32]
  44d78c:	ldp	x29, x30, [sp], #48
  44d790:	ret
  44d794:	cbz	w2, 44d780 <_obstack_memory_used@@Base+0x317c>
  44d798:	cmp	w2, #0x5
  44d79c:	b.ne	44d7e8 <_obstack_memory_used@@Base+0x31e4>  // b.any
  44d7a0:	add	x1, x19, #0x8
  44d7a4:	mov	x0, x20
  44d7a8:	bl	44d6f8 <_obstack_memory_used@@Base+0x30f4>
  44d7ac:	cbz	x0, 44d780 <_obstack_memory_used@@Base+0x317c>
  44d7b0:	ldr	w1, [x0]
  44d7b4:	cmp	w1, #0x2f
  44d7b8:	b.ne	44d780 <_obstack_memory_used@@Base+0x317c>  // b.any
  44d7bc:	ldp	x19, x20, [sp, #16]
  44d7c0:	ldp	x21, x22, [sp, #32]
  44d7c4:	ldp	x29, x30, [sp], #48
  44d7c8:	ret
  44d7cc:	sub	w2, w2, #0x18
  44d7d0:	cmp	w2, #0x34
  44d7d4:	b.hi	44d7e8 <_obstack_memory_used@@Base+0x31e4>  // b.pmore
  44d7d8:	lsl	x2, x22, x2
  44d7dc:	tst	x2, x21
  44d7e0:	b.ne	44d780 <_obstack_memory_used@@Base+0x317c>  // b.any
  44d7e4:	tbnz	w2, #27, 44d778 <_obstack_memory_used@@Base+0x3174>
  44d7e8:	ldr	x1, [x19, #8]
  44d7ec:	mov	x0, x20
  44d7f0:	bl	44d728 <_obstack_memory_used@@Base+0x3124>
  44d7f4:	cbz	x0, 44d778 <_obstack_memory_used@@Base+0x3174>
  44d7f8:	b	44d784 <_obstack_memory_used@@Base+0x3180>
  44d7fc:	mov	x0, #0x0                   	// #0
  44d800:	ret
  44d804:	nop
  44d808:	stp	x29, x30, [sp, #-48]!
  44d80c:	mov	x29, sp
  44d810:	stp	x19, x20, [sp, #16]
  44d814:	mov	x19, x2
  44d818:	add	x2, x1, #0x1
  44d81c:	stp	x21, x22, [sp, #32]
  44d820:	mov	x21, x1
  44d824:	mov	x22, x0
  44d828:	ldp	x1, x20, [x19, #8]
  44d82c:	add	x1, x2, x1
  44d830:	ldr	w2, [x19, #24]
  44d834:	cmp	x1, x20
  44d838:	b.hi	44d87c <_obstack_memory_used@@Base+0x3278>  // b.pmore
  44d83c:	cbnz	w2, 44d86c <_obstack_memory_used@@Base+0x3268>
  44d840:	ldp	x3, x0, [x19]
  44d844:	mov	x1, x22
  44d848:	mov	x2, x21
  44d84c:	add	x0, x3, x0
  44d850:	bl	402490 <memcpy@plt>
  44d854:	ldp	x0, x1, [x19]
  44d858:	add	x0, x0, x21
  44d85c:	strb	wzr, [x0, x1]
  44d860:	ldr	x1, [x19, #8]
  44d864:	add	x1, x1, x21
  44d868:	str	x1, [x19, #8]
  44d86c:	ldp	x19, x20, [sp, #16]
  44d870:	ldp	x21, x22, [sp, #32]
  44d874:	ldp	x29, x30, [sp], #48
  44d878:	ret
  44d87c:	cbnz	w2, 44d86c <_obstack_memory_used@@Base+0x3268>
  44d880:	cbz	x20, 44d8b8 <_obstack_memory_used@@Base+0x32b4>
  44d884:	nop
  44d888:	lsl	x20, x20, #1
  44d88c:	cmp	x1, x20
  44d890:	b.hi	44d888 <_obstack_memory_used@@Base+0x3284>  // b.pmore
  44d894:	ldr	x0, [x19]
  44d898:	mov	x1, x20
  44d89c:	bl	402750 <realloc@plt>
  44d8a0:	cbz	x0, 44d8c8 <_obstack_memory_used@@Base+0x32c4>
  44d8a4:	ldr	w2, [x19, #24]
  44d8a8:	str	x0, [x19]
  44d8ac:	str	x20, [x19, #16]
  44d8b0:	cbz	w2, 44d840 <_obstack_memory_used@@Base+0x323c>
  44d8b4:	b	44d86c <_obstack_memory_used@@Base+0x3268>
  44d8b8:	cmp	x1, #0x2
  44d8bc:	mov	x20, #0x2                   	// #2
  44d8c0:	b.hi	44d888 <_obstack_memory_used@@Base+0x3284>  // b.pmore
  44d8c4:	b	44d894 <_obstack_memory_used@@Base+0x3290>
  44d8c8:	ldr	x0, [x19]
  44d8cc:	bl	402910 <free@plt>
  44d8d0:	stp	xzr, xzr, [x19]
  44d8d4:	mov	w0, #0x1                   	// #1
  44d8d8:	str	xzr, [x19, #16]
  44d8dc:	str	w0, [x19, #24]
  44d8e0:	b	44d86c <_obstack_memory_used@@Base+0x3268>
  44d8e4:	nop
  44d8e8:	stp	x29, x30, [sp, #-112]!
  44d8ec:	mov	x29, sp
  44d8f0:	ldr	x2, [x0, #24]
  44d8f4:	stp	x19, x20, [sp, #16]
  44d8f8:	mov	x19, x0
  44d8fc:	str	xzr, [sp, #104]
  44d900:	ldrb	w3, [x2]
  44d904:	cmp	w3, w1, uxtb
  44d908:	b.eq	44e008 <_obstack_memory_used@@Base+0x3a04>  // b.none
  44d90c:	stp	x21, x22, [sp, #32]
  44d910:	add	x21, sp, #0x68
  44d914:	mov	w22, #0x1                   	// #1
  44d918:	stp	x23, x24, [sp, #48]
  44d91c:	and	w23, w1, #0xff
  44d920:	mov	w24, #0x6d                  	// #109
  44d924:	stp	x25, x26, [sp, #64]
  44d928:	ldr	w25, [x19, #76]
  44d92c:	str	w22, [x19, #76]
  44d930:	ldrb	w0, [x2]
  44d934:	cmp	w0, #0x4c
  44d938:	b.eq	44db08 <_obstack_memory_used@@Base+0x3504>  // b.none
  44d93c:	cmp	w0, #0x54
  44d940:	b.eq	44db98 <_obstack_memory_used@@Base+0x3594>  // b.none
  44d944:	cmp	w0, #0x73
  44d948:	b.eq	44dac8 <_obstack_memory_used@@Base+0x34c4>  // b.none
  44d94c:	cmp	w0, #0x66
  44d950:	b.ne	44d9ec <_obstack_memory_used@@Base+0x33e8>  // b.any
  44d954:	ldrb	w0, [x2, #1]
  44d958:	cmp	w0, #0x70
  44d95c:	b.eq	44dba8 <_obstack_memory_used@@Base+0x35a4>  // b.none
  44d960:	mov	x0, x19
  44d964:	bl	450308 <_obstack_memory_used@@Base+0x5d04>
  44d968:	mov	x20, x0
  44d96c:	cbz	x0, 44d9cc <_obstack_memory_used@@Base+0x33c8>
  44d970:	ldr	w0, [x0]
  44d974:	cmp	w0, #0x32
  44d978:	b.eq	44dc10 <_obstack_memory_used@@Base+0x360c>  // b.none
  44d97c:	cmp	w0, #0x34
  44d980:	b.eq	44e028 <_obstack_memory_used@@Base+0x3a24>  // b.none
  44d984:	b.hi	44d9c8 <_obstack_memory_used@@Base+0x33c4>  // b.pmore
  44d988:	cmp	w0, #0x33
  44d98c:	b.ne	44d9c8 <_obstack_memory_used@@Base+0x33c4>  // b.any
  44d990:	ldr	w0, [x20, #8]
  44d994:	cmp	w0, #0x2
  44d998:	b.eq	44d9c8 <_obstack_memory_used@@Base+0x33c4>  // b.none
  44d99c:	b.gt	44d9c8 <_obstack_memory_used@@Base+0x33c4>
  44d9a0:	cbnz	w0, 44ddd8 <_obstack_memory_used@@Base+0x37d4>
  44d9a4:	mov	x2, x20
  44d9a8:	mov	x0, x19
  44d9ac:	mov	x3, #0x0                   	// #0
  44d9b0:	mov	w1, #0x36                  	// #54
  44d9b4:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44d9b8:	mov	x20, x0
  44d9bc:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44d9c0:	ldr	x27, [sp, #80]
  44d9c4:	nop
  44d9c8:	mov	x20, #0x0                   	// #0
  44d9cc:	str	w25, [x19, #76]
  44d9d0:	mov	x0, x20
  44d9d4:	ldp	x19, x20, [sp, #16]
  44d9d8:	ldp	x21, x22, [sp, #32]
  44d9dc:	ldp	x23, x24, [sp, #48]
  44d9e0:	ldp	x25, x26, [sp, #64]
  44d9e4:	ldp	x29, x30, [sp], #112
  44d9e8:	ret
  44d9ec:	sub	w1, w0, #0x30
  44d9f0:	and	w1, w1, #0xff
  44d9f4:	cmp	w1, #0x9
  44d9f8:	b.hi	44db18 <_obstack_memory_used@@Base+0x3514>  // b.pmore
  44d9fc:	mov	x0, x19
  44da00:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44da04:	mov	x20, x0
  44da08:	cbz	x0, 44d9cc <_obstack_memory_used@@Base+0x33c8>
  44da0c:	ldr	x0, [x19, #24]
  44da10:	ldrb	w1, [x0]
  44da14:	cmp	w1, #0x49
  44da18:	b.eq	44da78 <_obstack_memory_used@@Base+0x3474>  // b.none
  44da1c:	str	w25, [x19, #76]
  44da20:	mov	x2, x20
  44da24:	mov	x0, x19
  44da28:	mov	x3, #0x0                   	// #0
  44da2c:	mov	w1, #0x2e                  	// #46
  44da30:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44da34:	str	x0, [x21]
  44da38:	cbz	x0, 44daa8 <_obstack_memory_used@@Base+0x34a4>
  44da3c:	ldr	x2, [x19, #24]
  44da40:	add	x21, x0, #0x10
  44da44:	ldrb	w0, [x2]
  44da48:	cmp	w0, w23
  44da4c:	b.ne	44d928 <_obstack_memory_used@@Base+0x3324>  // b.any
  44da50:	ldr	x20, [sp, #104]
  44da54:	add	x2, x2, #0x1
  44da58:	str	x2, [x19, #24]
  44da5c:	mov	x0, x20
  44da60:	ldp	x19, x20, [sp, #16]
  44da64:	ldp	x21, x22, [sp, #32]
  44da68:	ldp	x23, x24, [sp, #48]
  44da6c:	ldp	x25, x26, [sp, #64]
  44da70:	ldp	x29, x30, [sp], #112
  44da74:	ret
  44da78:	add	x0, x0, #0x1
  44da7c:	str	x0, [x19, #24]
  44da80:	mov	x0, x19
  44da84:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44da88:	mov	x3, x0
  44da8c:	mov	x2, x20
  44da90:	mov	x0, x19
  44da94:	mov	w1, #0x4                   	// #4
  44da98:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44da9c:	mov	x20, x0
  44daa0:	str	w25, [x19, #76]
  44daa4:	cbnz	x20, 44da20 <_obstack_memory_used@@Base+0x341c>
  44daa8:	mov	x20, #0x0                   	// #0
  44daac:	mov	x0, x20
  44dab0:	ldp	x19, x20, [sp, #16]
  44dab4:	ldp	x21, x22, [sp, #32]
  44dab8:	ldp	x23, x24, [sp, #48]
  44dabc:	ldp	x25, x26, [sp, #64]
  44dac0:	ldp	x29, x30, [sp], #112
  44dac4:	ret
  44dac8:	ldrb	w0, [x2, #1]
  44dacc:	cmp	w0, #0x72
  44dad0:	b.eq	44dd58 <_obstack_memory_used@@Base+0x3754>  // b.none
  44dad4:	cmp	w0, #0x70
  44dad8:	b.ne	44d960 <_obstack_memory_used@@Base+0x335c>  // b.any
  44dadc:	add	x2, x2, #0x2
  44dae0:	str	x2, [x19, #24]
  44dae4:	mov	x0, x19
  44dae8:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44daec:	mov	x2, x0
  44daf0:	mov	x3, #0x0                   	// #0
  44daf4:	mov	x0, x19
  44daf8:	mov	w1, #0x4b                  	// #75
  44dafc:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44db00:	mov	x20, x0
  44db04:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44db08:	mov	x0, x19
  44db0c:	bl	450eb0 <_obstack_memory_used@@Base+0x68ac>
  44db10:	mov	x20, x0
  44db14:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44db18:	cmp	w0, #0x6f
  44db1c:	b.ne	44db38 <_obstack_memory_used@@Base+0x3534>  // b.any
  44db20:	ldrb	w0, [x2, #1]
  44db24:	cmp	w0, #0x6e
  44db28:	b.ne	44d960 <_obstack_memory_used@@Base+0x335c>  // b.any
  44db2c:	add	x2, x2, #0x2
  44db30:	str	x2, [x19, #24]
  44db34:	b	44d9fc <_obstack_memory_used@@Base+0x33f8>
  44db38:	cmp	w0, #0x69
  44db3c:	mov	w1, #0x74                  	// #116
  44db40:	ccmp	w0, w1, #0x4, ne  // ne = any
  44db44:	b.ne	44d960 <_obstack_memory_used@@Base+0x335c>  // b.any
  44db48:	ldrb	w1, [x2, #1]
  44db4c:	cmp	w1, #0x6c
  44db50:	b.ne	44d960 <_obstack_memory_used@@Base+0x335c>  // b.any
  44db54:	add	x1, x2, #0x2
  44db58:	str	x1, [x19, #24]
  44db5c:	cmp	w0, #0x74
  44db60:	mov	x20, #0x0                   	// #0
  44db64:	b.eq	44dea8 <_obstack_memory_used@@Base+0x38a4>  // b.none
  44db68:	ldrb	w0, [x1, #1]
  44db6c:	cbz	w0, 44d9c8 <_obstack_memory_used@@Base+0x33c4>
  44db70:	mov	w1, #0x45                  	// #69
  44db74:	mov	x0, x19
  44db78:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44db7c:	mov	x3, x0
  44db80:	mov	x2, x20
  44db84:	mov	x0, x19
  44db88:	mov	w1, #0x31                  	// #49
  44db8c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44db90:	mov	x20, x0
  44db94:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44db98:	mov	x0, x19
  44db9c:	bl	44d030 <_obstack_memory_used@@Base+0x2a2c>
  44dba0:	mov	x20, x0
  44dba4:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44dba8:	add	x0, x2, #0x2
  44dbac:	str	x0, [x19, #24]
  44dbb0:	ldrb	w0, [x2, #2]
  44dbb4:	cmp	w0, #0x54
  44dbb8:	b.eq	44dd48 <_obstack_memory_used@@Base+0x3744>  // b.none
  44dbbc:	mov	x0, x19
  44dbc0:	bl	44cfb8 <_obstack_memory_used@@Base+0x29b4>
  44dbc4:	mvn	x1, x0
  44dbc8:	tst	x1, #0x7fffffff
  44dbcc:	b.eq	44d9c8 <_obstack_memory_used@@Base+0x33c4>  // b.none
  44dbd0:	add	w0, w0, #0x1
  44dbd4:	ldp	w1, w2, [x19, #40]
  44dbd8:	cmp	w1, w2
  44dbdc:	b.ge	44d9c8 <_obstack_memory_used@@Base+0x33c4>  // b.tcont
  44dbe0:	mov	w3, #0x18                  	// #24
  44dbe4:	add	w4, w1, #0x1
  44dbe8:	ldr	x2, [x19, #32]
  44dbec:	smull	x1, w1, w3
  44dbf0:	mov	w3, #0x6                   	// #6
  44dbf4:	sxtw	x0, w0
  44dbf8:	add	x20, x2, x1
  44dbfc:	str	wzr, [x20, #4]
  44dc00:	str	w4, [x19, #40]
  44dc04:	str	w3, [x2, x1]
  44dc08:	str	x0, [x20, #8]
  44dc0c:	b	44da1c <_obstack_memory_used@@Base+0x3418>
  44dc10:	ldr	x2, [x20, #8]
  44dc14:	ldr	w0, [x19, #72]
  44dc18:	ldr	w1, [x2, #16]
  44dc1c:	ldr	x26, [x2]
  44dc20:	sub	w1, w1, #0x2
  44dc24:	add	w0, w0, w1
  44dc28:	str	w0, [x19, #72]
  44dc2c:	ldrb	w1, [x26]
  44dc30:	cmp	w1, #0x73
  44dc34:	b.eq	44dd24 <_obstack_memory_used@@Base+0x3720>  // b.none
  44dc38:	str	x27, [sp, #80]
  44dc3c:	ldr	w27, [x2, #20]
  44dc40:	cmp	w27, #0x1
  44dc44:	b.eq	44ddf0 <_obstack_memory_used@@Base+0x37ec>  // b.none
  44dc48:	b.le	44ddcc <_obstack_memory_used@@Base+0x37c8>
  44dc4c:	cmp	w27, #0x2
  44dc50:	b.eq	44df10 <_obstack_memory_used@@Base+0x390c>  // b.none
  44dc54:	cmp	w27, #0x3
  44dc58:	b.ne	44d9c0 <_obstack_memory_used@@Base+0x33bc>  // b.any
  44dc5c:	cmp	w1, #0x71
  44dc60:	b.eq	44dec4 <_obstack_memory_used@@Base+0x38c0>  // b.none
  44dc64:	ldrb	w0, [x26]
  44dc68:	cmp	w0, #0x66
  44dc6c:	b.eq	44e094 <_obstack_memory_used@@Base+0x3a90>  // b.none
  44dc70:	cmp	w0, #0x6e
  44dc74:	b.ne	44df00 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44dc78:	ldrb	w0, [x26, #1]
  44dc7c:	mov	w1, #0x61                  	// #97
  44dc80:	cmp	w0, #0x77
  44dc84:	ccmp	w0, w1, #0x4, ne  // ne = any
  44dc88:	b.ne	44df00 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44dc8c:	mov	w1, #0x5f                  	// #95
  44dc90:	mov	x0, x19
  44dc94:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44dc98:	mov	x26, x0
  44dc9c:	mov	x0, x19
  44dca0:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44dca4:	ldr	x1, [x19, #24]
  44dca8:	mov	x27, x0
  44dcac:	ldrb	w0, [x1]
  44dcb0:	cmp	w0, #0x45
  44dcb4:	b.eq	44e0f4 <_obstack_memory_used@@Base+0x3af0>  // b.none
  44dcb8:	cmp	w0, #0x70
  44dcbc:	b.eq	44e0cc <_obstack_memory_used@@Base+0x3ac8>  // b.none
  44dcc0:	cmp	w0, #0x69
  44dcc4:	b.ne	44df00 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44dcc8:	ldrb	w0, [x1, #1]
  44dccc:	cmp	w0, #0x6c
  44dcd0:	b.ne	44df00 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44dcd4:	mov	x0, x19
  44dcd8:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44dcdc:	mov	x3, x0
  44dce0:	mov	x2, x27
  44dce4:	mov	w1, #0x3c                  	// #60
  44dce8:	mov	x0, x19
  44dcec:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44dcf0:	mov	x2, x26
  44dcf4:	mov	x3, x0
  44dcf8:	mov	w1, #0x3b                  	// #59
  44dcfc:	mov	x0, x19
  44dd00:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44dd04:	mov	x3, x0
  44dd08:	mov	x2, x20
  44dd0c:	mov	x0, x19
  44dd10:	mov	w1, #0x3a                  	// #58
  44dd14:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44dd18:	mov	x20, x0
  44dd1c:	ldr	x27, [sp, #80]
  44dd20:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44dd24:	ldrb	w0, [x26, #1]
  44dd28:	cmp	w0, #0x74
  44dd2c:	b.ne	44dc38 <_obstack_memory_used@@Base+0x3634>  // b.any
  44dd30:	ldrb	w0, [x26, #2]
  44dd34:	cbnz	w0, 44dc38 <_obstack_memory_used@@Base+0x3634>
  44dd38:	mov	x0, x19
  44dd3c:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44dd40:	mov	x3, x0
  44dd44:	b	44de34 <_obstack_memory_used@@Base+0x3830>
  44dd48:	add	x2, x2, #0x3
  44dd4c:	mov	w0, #0x0                   	// #0
  44dd50:	str	x2, [x19, #24]
  44dd54:	b	44dbd4 <_obstack_memory_used@@Base+0x35d0>
  44dd58:	add	x2, x2, #0x2
  44dd5c:	str	x2, [x19, #24]
  44dd60:	mov	x0, x19
  44dd64:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44dd68:	mov	x20, x0
  44dd6c:	mov	x0, x19
  44dd70:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44dd74:	ldr	x1, [x19, #24]
  44dd78:	mov	x26, x0
  44dd7c:	mov	x3, x26
  44dd80:	ldrb	w0, [x1]
  44dd84:	cmp	w0, #0x49
  44dd88:	b.ne	44ddb4 <_obstack_memory_used@@Base+0x37b0>  // b.any
  44dd8c:	add	x1, x1, #0x1
  44dd90:	str	x1, [x19, #24]
  44dd94:	mov	x0, x19
  44dd98:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44dd9c:	mov	x3, x0
  44dda0:	mov	x2, x26
  44dda4:	mov	x0, x19
  44dda8:	mov	w1, #0x4                   	// #4
  44ddac:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ddb0:	mov	x3, x0
  44ddb4:	mov	x2, x20
  44ddb8:	mov	x0, x19
  44ddbc:	mov	w1, #0x1                   	// #1
  44ddc0:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ddc4:	mov	x20, x0
  44ddc8:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44ddcc:	cbnz	w27, 44d9c0 <_obstack_memory_used@@Base+0x33bc>
  44ddd0:	ldr	x27, [sp, #80]
  44ddd4:	b	44d9a4 <_obstack_memory_used@@Base+0x33a0>
  44ddd8:	cmp	w0, #0x1
  44dddc:	b.ne	44d9c8 <_obstack_memory_used@@Base+0x33c4>  // b.any
  44dde0:	mov	x0, x19
  44dde4:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44dde8:	mov	x3, x0
  44ddec:	b	44de34 <_obstack_memory_used@@Base+0x3830>
  44ddf0:	ldrb	w0, [x26]
  44ddf4:	cmp	w0, #0x70
  44ddf8:	ccmp	w0, w24, #0x4, ne  // ne = any
  44ddfc:	b.eq	44de78 <_obstack_memory_used@@Base+0x3874>  // b.none
  44de00:	mov	w27, #0x0                   	// #0
  44de04:	cmp	w1, #0x73
  44de08:	b.ne	44de4c <_obstack_memory_used@@Base+0x3848>  // b.any
  44de0c:	ldrb	w0, [x26, #1]
  44de10:	cmp	w0, #0x50
  44de14:	b.ne	44de4c <_obstack_memory_used@@Base+0x3848>  // b.any
  44de18:	ldrb	w0, [x26, #2]
  44de1c:	cbnz	w0, 44de4c <_obstack_memory_used@@Base+0x3848>
  44de20:	mov	x0, x19
  44de24:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44de28:	mov	x3, x0
  44de2c:	cbnz	w27, 44de5c <_obstack_memory_used@@Base+0x3858>
  44de30:	ldr	x27, [sp, #80]
  44de34:	mov	x2, x20
  44de38:	mov	x0, x19
  44de3c:	mov	w1, #0x37                  	// #55
  44de40:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44de44:	mov	x20, x0
  44de48:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44de4c:	mov	x0, x19
  44de50:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44de54:	mov	x3, x0
  44de58:	cbz	w27, 44de30 <_obstack_memory_used@@Base+0x382c>
  44de5c:	mov	x2, x3
  44de60:	mov	x0, x19
  44de64:	mov	w1, #0x39                  	// #57
  44de68:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44de6c:	mov	x3, x0
  44de70:	ldr	x27, [sp, #80]
  44de74:	b	44de34 <_obstack_memory_used@@Base+0x3830>
  44de78:	ldrb	w2, [x26, #1]
  44de7c:	cmp	w2, w0
  44de80:	b.ne	44de00 <_obstack_memory_used@@Base+0x37fc>  // b.any
  44de84:	ldr	x0, [x19, #24]
  44de88:	ldrb	w2, [x0]
  44de8c:	cmp	w2, #0x5f
  44de90:	b.ne	44de04 <_obstack_memory_used@@Base+0x3800>  // b.any
  44de94:	add	x0, x0, #0x1
  44de98:	str	x0, [x19, #24]
  44de9c:	mov	w27, #0x0                   	// #0
  44dea0:	ldrb	w1, [x26]
  44dea4:	b	44de04 <_obstack_memory_used@@Base+0x3800>
  44dea8:	mov	x0, x19
  44deac:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44deb0:	ldr	x1, [x19, #24]
  44deb4:	mov	x20, x0
  44deb8:	ldrb	w0, [x1, #1]
  44debc:	cbnz	w0, 44db70 <_obstack_memory_used@@Base+0x356c>
  44dec0:	b	44d9c8 <_obstack_memory_used@@Base+0x33c4>
  44dec4:	ldrb	w0, [x26, #1]
  44dec8:	cmp	w0, #0x75
  44decc:	b.ne	44dc64 <_obstack_memory_used@@Base+0x3660>  // b.any
  44ded0:	ldrb	w0, [x26, #2]
  44ded4:	cbnz	w0, 44dc64 <_obstack_memory_used@@Base+0x3660>
  44ded8:	mov	x0, x19
  44dedc:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44dee0:	mov	x26, x0
  44dee4:	mov	x0, x19
  44dee8:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44deec:	mov	x27, x0
  44def0:	mov	x0, x19
  44def4:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44def8:	mov	x3, x0
  44defc:	cbnz	x0, 44dce0 <_obstack_memory_used@@Base+0x36dc>
  44df00:	mov	x20, #0x0                   	// #0
  44df04:	ldr	x27, [sp, #80]
  44df08:	str	w25, [x19, #76]
  44df0c:	b	44d9d0 <_obstack_memory_used@@Base+0x33cc>
  44df10:	ldr	x0, [x20, #8]
  44df14:	ldr	x0, [x0]
  44df18:	ldrb	w1, [x0, #1]
  44df1c:	cmp	w1, #0x63
  44df20:	b.eq	44e054 <_obstack_memory_used@@Base+0x3a50>  // b.none
  44df24:	ldrb	w0, [x26]
  44df28:	cmp	w0, #0x66
  44df2c:	b.eq	44e084 <_obstack_memory_used@@Base+0x3a80>  // b.none
  44df30:	mov	x0, x19
  44df34:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44df38:	mov	x27, x0
  44df3c:	ldrb	w1, [x26]
  44df40:	cmp	w1, #0x63
  44df44:	b.ne	44df70 <_obstack_memory_used@@Base+0x396c>  // b.any
  44df48:	ldrb	w0, [x26, #1]
  44df4c:	cmp	w0, #0x6c
  44df50:	b.ne	44df70 <_obstack_memory_used@@Base+0x396c>  // b.any
  44df54:	ldrb	w0, [x26, #2]
  44df58:	cbnz	w0, 44df70 <_obstack_memory_used@@Base+0x396c>
  44df5c:	mov	x0, x19
  44df60:	mov	w1, #0x45                  	// #69
  44df64:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44df68:	mov	x26, x0
  44df6c:	b	44dfa8 <_obstack_memory_used@@Base+0x39a4>
  44df70:	cmp	w1, #0x64
  44df74:	b.ne	44dfdc <_obstack_memory_used@@Base+0x39d8>  // b.any
  44df78:	ldrb	w0, [x26, #1]
  44df7c:	cmp	w0, #0x74
  44df80:	b.ne	44dfdc <_obstack_memory_used@@Base+0x39d8>  // b.any
  44df84:	ldrb	w0, [x26, #2]
  44df88:	cbnz	w0, 44dfdc <_obstack_memory_used@@Base+0x39d8>
  44df8c:	mov	x0, x19
  44df90:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44df94:	ldr	x1, [x19, #24]
  44df98:	mov	x26, x0
  44df9c:	ldrb	w0, [x1]
  44dfa0:	cmp	w0, #0x49
  44dfa4:	b.eq	44e0a0 <_obstack_memory_used@@Base+0x3a9c>  // b.none
  44dfa8:	mov	x2, x27
  44dfac:	mov	x3, x26
  44dfb0:	mov	w1, #0x39                  	// #57
  44dfb4:	mov	x0, x19
  44dfb8:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44dfbc:	mov	x3, x0
  44dfc0:	mov	x2, x20
  44dfc4:	mov	x0, x19
  44dfc8:	mov	w1, #0x38                  	// #56
  44dfcc:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44dfd0:	mov	x20, x0
  44dfd4:	ldr	x27, [sp, #80]
  44dfd8:	b	44daa0 <_obstack_memory_used@@Base+0x349c>
  44dfdc:	cmp	w1, #0x70
  44dfe0:	b.ne	44dff8 <_obstack_memory_used@@Base+0x39f4>  // b.any
  44dfe4:	ldrb	w0, [x26, #1]
  44dfe8:	cmp	w0, #0x74
  44dfec:	b.ne	44dff8 <_obstack_memory_used@@Base+0x39f4>  // b.any
  44dff0:	ldrb	w0, [x26, #2]
  44dff4:	cbz	w0, 44df8c <_obstack_memory_used@@Base+0x3988>
  44dff8:	mov	x0, x19
  44dffc:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e000:	mov	x26, x0
  44e004:	b	44dfa8 <_obstack_memory_used@@Base+0x39a4>
  44e008:	add	x2, x2, #0x1
  44e00c:	str	x2, [x0, #24]
  44e010:	ldp	x19, x20, [sp, #16]
  44e014:	mov	x3, #0x0                   	// #0
  44e018:	ldp	x29, x30, [sp], #112
  44e01c:	mov	w1, #0x2e                  	// #46
  44e020:	mov	x2, #0x0                   	// #0
  44e024:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e028:	ldr	x0, [x19, #24]
  44e02c:	ldrb	w1, [x0]
  44e030:	cmp	w1, #0x5f
  44e034:	b.ne	44dde0 <_obstack_memory_used@@Base+0x37dc>  // b.any
  44e038:	add	x0, x0, #0x1
  44e03c:	str	x0, [x19, #24]
  44e040:	mov	w1, #0x45                  	// #69
  44e044:	mov	x0, x19
  44e048:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44e04c:	mov	x3, x0
  44e050:	b	44de34 <_obstack_memory_used@@Base+0x3830>
  44e054:	ldrb	w0, [x0]
  44e058:	sub	w1, w0, #0x72
  44e05c:	sub	w0, w0, #0x63
  44e060:	and	w1, w1, #0xff
  44e064:	and	w0, w0, #0xff
  44e068:	cmp	w1, #0x1
  44e06c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  44e070:	b.hi	44df24 <_obstack_memory_used@@Base+0x3920>  // b.pmore
  44e074:	mov	x0, x19
  44e078:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44e07c:	mov	x27, x0
  44e080:	b	44df3c <_obstack_memory_used@@Base+0x3938>
  44e084:	mov	x0, x19
  44e088:	bl	450308 <_obstack_memory_used@@Base+0x5d04>
  44e08c:	mov	x27, x0
  44e090:	b	44df3c <_obstack_memory_used@@Base+0x3938>
  44e094:	mov	x0, x19
  44e098:	bl	450308 <_obstack_memory_used@@Base+0x5d04>
  44e09c:	b	44dee0 <_obstack_memory_used@@Base+0x38dc>
  44e0a0:	add	x1, x1, #0x1
  44e0a4:	str	x1, [x19, #24]
  44e0a8:	mov	x0, x19
  44e0ac:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44e0b0:	mov	x3, x0
  44e0b4:	mov	x2, x26
  44e0b8:	mov	x0, x19
  44e0bc:	mov	w1, #0x4                   	// #4
  44e0c0:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e0c4:	mov	x26, x0
  44e0c8:	b	44dfa8 <_obstack_memory_used@@Base+0x39a4>
  44e0cc:	ldrb	w0, [x1, #1]
  44e0d0:	cmp	w0, #0x69
  44e0d4:	b.ne	44df00 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44e0d8:	add	x1, x1, #0x2
  44e0dc:	str	x1, [x19, #24]
  44e0e0:	mov	x0, x19
  44e0e4:	mov	w1, #0x45                  	// #69
  44e0e8:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44e0ec:	mov	x3, x0
  44e0f0:	b	44dce0 <_obstack_memory_used@@Base+0x36dc>
  44e0f4:	add	x1, x1, #0x1
  44e0f8:	mov	x3, #0x0                   	// #0
  44e0fc:	str	x1, [x19, #24]
  44e100:	b	44dce0 <_obstack_memory_used@@Base+0x36dc>
  44e104:	nop
  44e108:	ldr	x2, [x0, #24]
  44e10c:	ldrb	w1, [x2]
  44e110:	cmp	w1, #0x4c
  44e114:	b.eq	44e2a4 <_obstack_memory_used@@Base+0x3ca0>  // b.none
  44e118:	cmp	w1, #0x54
  44e11c:	b.eq	44e328 <_obstack_memory_used@@Base+0x3d24>  // b.none
  44e120:	stp	x29, x30, [sp, #-48]!
  44e124:	cmp	w1, #0x73
  44e128:	mov	x29, sp
  44e12c:	stp	x19, x20, [sp, #16]
  44e130:	mov	x19, x0
  44e134:	b.eq	44e1ec <_obstack_memory_used@@Base+0x3be8>  // b.none
  44e138:	cmp	w1, #0x66
  44e13c:	b.eq	44e180 <_obstack_memory_used@@Base+0x3b7c>  // b.none
  44e140:	sub	w3, w1, #0x30
  44e144:	and	w3, w3, #0xff
  44e148:	cmp	w3, #0x9
  44e14c:	b.hi	44e2a8 <_obstack_memory_used@@Base+0x3ca4>  // b.pmore
  44e150:	mov	x0, x19
  44e154:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44e158:	mov	x20, x0
  44e15c:	cbz	x0, 44e290 <_obstack_memory_used@@Base+0x3c8c>
  44e160:	ldr	x0, [x19, #24]
  44e164:	ldrb	w1, [x0]
  44e168:	cmp	w1, #0x49
  44e16c:	b.eq	44e400 <_obstack_memory_used@@Base+0x3dfc>  // b.none
  44e170:	mov	x0, x20
  44e174:	ldp	x19, x20, [sp, #16]
  44e178:	ldp	x29, x30, [sp], #48
  44e17c:	ret
  44e180:	ldrb	w1, [x2, #1]
  44e184:	cmp	w1, #0x70
  44e188:	b.eq	44e228 <_obstack_memory_used@@Base+0x3c24>  // b.none
  44e18c:	mov	x0, x19
  44e190:	bl	450308 <_obstack_memory_used@@Base+0x5d04>
  44e194:	mov	x20, x0
  44e198:	cbz	x0, 44e290 <_obstack_memory_used@@Base+0x3c8c>
  44e19c:	ldr	w0, [x0]
  44e1a0:	cmp	w0, #0x32
  44e1a4:	b.eq	44e32c <_obstack_memory_used@@Base+0x3d28>  // b.none
  44e1a8:	cmp	w0, #0x34
  44e1ac:	b.eq	44e758 <_obstack_memory_used@@Base+0x4154>  // b.none
  44e1b0:	b.hi	44e290 <_obstack_memory_used@@Base+0x3c8c>  // b.pmore
  44e1b4:	cmp	w0, #0x33
  44e1b8:	b.ne	44e290 <_obstack_memory_used@@Base+0x3c8c>  // b.any
  44e1bc:	ldr	w0, [x20, #8]
  44e1c0:	cmp	w0, #0x2
  44e1c4:	b.eq	44e290 <_obstack_memory_used@@Base+0x3c8c>  // b.none
  44e1c8:	b.gt	44e290 <_obstack_memory_used@@Base+0x3c8c>
  44e1cc:	cbnz	w0, 44e4f4 <_obstack_memory_used@@Base+0x3ef0>
  44e1d0:	mov	x2, x20
  44e1d4:	mov	x0, x19
  44e1d8:	ldp	x19, x20, [sp, #16]
  44e1dc:	mov	x3, #0x0                   	// #0
  44e1e0:	ldp	x29, x30, [sp], #48
  44e1e4:	mov	w1, #0x36                  	// #54
  44e1e8:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e1ec:	ldrb	w1, [x2, #1]
  44e1f0:	cmp	w1, #0x72
  44e1f4:	b.eq	44e42c <_obstack_memory_used@@Base+0x3e28>  // b.none
  44e1f8:	cmp	w1, #0x70
  44e1fc:	b.ne	44e18c <_obstack_memory_used@@Base+0x3b88>  // b.any
  44e200:	add	x2, x2, #0x2
  44e204:	str	x2, [x0, #24]
  44e208:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e20c:	mov	x2, x0
  44e210:	mov	x0, x19
  44e214:	mov	x3, #0x0                   	// #0
  44e218:	ldp	x19, x20, [sp, #16]
  44e21c:	mov	w1, #0x4b                  	// #75
  44e220:	ldp	x29, x30, [sp], #48
  44e224:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e228:	add	x1, x2, #0x2
  44e22c:	str	x1, [x0, #24]
  44e230:	ldrb	w1, [x2, #2]
  44e234:	cmp	w1, #0x54
  44e238:	b.eq	44e5b8 <_obstack_memory_used@@Base+0x3fb4>  // b.none
  44e23c:	bl	44cfb8 <_obstack_memory_used@@Base+0x29b4>
  44e240:	mvn	x1, x0
  44e244:	add	w0, w0, #0x1
  44e248:	tst	x1, #0x7fffffff
  44e24c:	b.eq	44e290 <_obstack_memory_used@@Base+0x3c8c>  // b.none
  44e250:	ldp	w1, w2, [x19, #40]
  44e254:	cmp	w1, w2
  44e258:	b.ge	44e290 <_obstack_memory_used@@Base+0x3c8c>  // b.tcont
  44e25c:	mov	w3, #0x18                  	// #24
  44e260:	add	w4, w1, #0x1
  44e264:	ldr	x2, [x19, #32]
  44e268:	smull	x1, w1, w3
  44e26c:	mov	w3, #0x6                   	// #6
  44e270:	sxtw	x0, w0
  44e274:	add	x20, x2, x1
  44e278:	str	wzr, [x20, #4]
  44e27c:	str	w4, [x19, #40]
  44e280:	str	w3, [x2, x1]
  44e284:	str	x0, [x20, #8]
  44e288:	b	44e170 <_obstack_memory_used@@Base+0x3b6c>
  44e28c:	ldp	x21, x22, [sp, #32]
  44e290:	mov	x20, #0x0                   	// #0
  44e294:	mov	x0, x20
  44e298:	ldp	x19, x20, [sp, #16]
  44e29c:	ldp	x29, x30, [sp], #48
  44e2a0:	ret
  44e2a4:	b	450eb0 <_obstack_memory_used@@Base+0x68ac>
  44e2a8:	cmp	w1, #0x6f
  44e2ac:	b.ne	44e2c8 <_obstack_memory_used@@Base+0x3cc4>  // b.any
  44e2b0:	ldrb	w0, [x2, #1]
  44e2b4:	cmp	w0, #0x6e
  44e2b8:	b.ne	44e18c <_obstack_memory_used@@Base+0x3b88>  // b.any
  44e2bc:	add	x2, x2, #0x2
  44e2c0:	str	x2, [x19, #24]
  44e2c4:	b	44e150 <_obstack_memory_used@@Base+0x3b4c>
  44e2c8:	cmp	w1, #0x69
  44e2cc:	mov	w3, #0x74                  	// #116
  44e2d0:	ccmp	w1, w3, #0x4, ne  // ne = any
  44e2d4:	b.ne	44e18c <_obstack_memory_used@@Base+0x3b88>  // b.any
  44e2d8:	ldrb	w3, [x2, #1]
  44e2dc:	cmp	w3, #0x6c
  44e2e0:	b.ne	44e18c <_obstack_memory_used@@Base+0x3b88>  // b.any
  44e2e4:	add	x3, x2, #0x2
  44e2e8:	str	x3, [x0, #24]
  44e2ec:	cmp	w1, #0x74
  44e2f0:	mov	x20, #0x0                   	// #0
  44e2f4:	b.eq	44e4e4 <_obstack_memory_used@@Base+0x3ee0>  // b.none
  44e2f8:	ldrb	w0, [x3, #1]
  44e2fc:	cbz	w0, 44e290 <_obstack_memory_used@@Base+0x3c8c>
  44e300:	mov	x0, x19
  44e304:	mov	w1, #0x45                  	// #69
  44e308:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44e30c:	mov	x3, x0
  44e310:	mov	x2, x20
  44e314:	mov	x0, x19
  44e318:	ldp	x19, x20, [sp, #16]
  44e31c:	mov	w1, #0x31                  	// #49
  44e320:	ldp	x29, x30, [sp], #48
  44e324:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e328:	b	44d030 <_obstack_memory_used@@Base+0x2a2c>
  44e32c:	ldr	x2, [x20, #8]
  44e330:	stp	x21, x22, [sp, #32]
  44e334:	ldr	w0, [x19, #72]
  44e338:	ldr	w1, [x2, #16]
  44e33c:	ldr	x21, [x2]
  44e340:	sub	w1, w1, #0x2
  44e344:	add	w0, w0, w1
  44e348:	str	w0, [x19, #72]
  44e34c:	ldrb	w1, [x21]
  44e350:	cmp	w1, #0x73
  44e354:	b.eq	44e47c <_obstack_memory_used@@Base+0x3e78>  // b.none
  44e358:	ldr	w22, [x2, #20]
  44e35c:	cmp	w22, #0x1
  44e360:	b.eq	44e52c <_obstack_memory_used@@Base+0x3f28>  // b.none
  44e364:	b.le	44e520 <_obstack_memory_used@@Base+0x3f1c>
  44e368:	cmp	w22, #0x2
  44e36c:	b.eq	44e5e4 <_obstack_memory_used@@Base+0x3fe0>  // b.none
  44e370:	cmp	w22, #0x3
  44e374:	b.ne	44e28c <_obstack_memory_used@@Base+0x3c88>  // b.any
  44e378:	cmp	w1, #0x71
  44e37c:	b.ne	44e674 <_obstack_memory_used@@Base+0x4070>  // b.any
  44e380:	ldrb	w0, [x21, #1]
  44e384:	cmp	w0, #0x75
  44e388:	b.ne	44e674 <_obstack_memory_used@@Base+0x4070>  // b.any
  44e38c:	ldrb	w0, [x21, #2]
  44e390:	cbnz	w0, 44e674 <_obstack_memory_used@@Base+0x4070>
  44e394:	mov	x0, x19
  44e398:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e39c:	mov	x21, x0
  44e3a0:	mov	x0, x19
  44e3a4:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e3a8:	mov	x22, x0
  44e3ac:	mov	x0, x19
  44e3b0:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e3b4:	mov	x3, x0
  44e3b8:	cbz	x0, 44e28c <_obstack_memory_used@@Base+0x3c88>
  44e3bc:	mov	x2, x22
  44e3c0:	mov	x0, x19
  44e3c4:	mov	w1, #0x3c                  	// #60
  44e3c8:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e3cc:	mov	x2, x21
  44e3d0:	mov	x3, x0
  44e3d4:	mov	w1, #0x3b                  	// #59
  44e3d8:	mov	x0, x19
  44e3dc:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e3e0:	mov	x3, x0
  44e3e4:	mov	x2, x20
  44e3e8:	mov	x0, x19
  44e3ec:	ldp	x19, x20, [sp, #16]
  44e3f0:	mov	w1, #0x3a                  	// #58
  44e3f4:	ldp	x21, x22, [sp, #32]
  44e3f8:	ldp	x29, x30, [sp], #48
  44e3fc:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e400:	add	x0, x0, #0x1
  44e404:	str	x0, [x19, #24]
  44e408:	mov	x0, x19
  44e40c:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44e410:	mov	x3, x0
  44e414:	mov	x2, x20
  44e418:	mov	x0, x19
  44e41c:	ldp	x19, x20, [sp, #16]
  44e420:	mov	w1, #0x4                   	// #4
  44e424:	ldp	x29, x30, [sp], #48
  44e428:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e42c:	add	x2, x2, #0x2
  44e430:	stp	x21, x22, [sp, #32]
  44e434:	str	x2, [x0, #24]
  44e438:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44e43c:	mov	x20, x0
  44e440:	mov	x0, x19
  44e444:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44e448:	ldr	x1, [x19, #24]
  44e44c:	mov	x21, x0
  44e450:	mov	x3, x21
  44e454:	ldrb	w0, [x1]
  44e458:	cmp	w0, #0x49
  44e45c:	b.eq	44e4b8 <_obstack_memory_used@@Base+0x3eb4>  // b.none
  44e460:	mov	x2, x20
  44e464:	mov	x0, x19
  44e468:	ldp	x19, x20, [sp, #16]
  44e46c:	mov	w1, #0x1                   	// #1
  44e470:	ldp	x21, x22, [sp, #32]
  44e474:	ldp	x29, x30, [sp], #48
  44e478:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e47c:	ldrb	w0, [x21, #1]
  44e480:	cmp	w0, #0x74
  44e484:	b.ne	44e358 <_obstack_memory_used@@Base+0x3d54>  // b.any
  44e488:	ldrb	w0, [x21, #2]
  44e48c:	cbnz	w0, 44e358 <_obstack_memory_used@@Base+0x3d54>
  44e490:	mov	x0, x19
  44e494:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44e498:	mov	x2, x20
  44e49c:	mov	x3, x0
  44e4a0:	mov	x0, x19
  44e4a4:	mov	w1, #0x37                  	// #55
  44e4a8:	ldp	x19, x20, [sp, #16]
  44e4ac:	ldp	x21, x22, [sp, #32]
  44e4b0:	ldp	x29, x30, [sp], #48
  44e4b4:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e4b8:	add	x1, x1, #0x1
  44e4bc:	str	x1, [x19, #24]
  44e4c0:	mov	x0, x19
  44e4c4:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44e4c8:	mov	x3, x0
  44e4cc:	mov	x2, x21
  44e4d0:	mov	x0, x19
  44e4d4:	mov	w1, #0x4                   	// #4
  44e4d8:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e4dc:	mov	x3, x0
  44e4e0:	b	44e460 <_obstack_memory_used@@Base+0x3e5c>
  44e4e4:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44e4e8:	mov	x20, x0
  44e4ec:	ldr	x3, [x19, #24]
  44e4f0:	b	44e2f8 <_obstack_memory_used@@Base+0x3cf4>
  44e4f4:	cmp	w0, #0x1
  44e4f8:	b.ne	44e290 <_obstack_memory_used@@Base+0x3c8c>  // b.any
  44e4fc:	mov	x0, x19
  44e500:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e504:	mov	x3, x0
  44e508:	mov	x2, x20
  44e50c:	mov	x0, x19
  44e510:	ldp	x19, x20, [sp, #16]
  44e514:	mov	w1, #0x37                  	// #55
  44e518:	ldp	x29, x30, [sp], #48
  44e51c:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e520:	cbnz	w22, 44e28c <_obstack_memory_used@@Base+0x3c88>
  44e524:	ldp	x21, x22, [sp, #32]
  44e528:	b	44e1d0 <_obstack_memory_used@@Base+0x3bcc>
  44e52c:	ldrb	w0, [x21]
  44e530:	mov	w2, #0x6d                  	// #109
  44e534:	cmp	w0, #0x70
  44e538:	ccmp	w0, w2, #0x4, ne  // ne = any
  44e53c:	b.ne	44e54c <_obstack_memory_used@@Base+0x3f48>  // b.any
  44e540:	ldrb	w2, [x21, #1]
  44e544:	cmp	w2, w0
  44e548:	b.eq	44e584 <_obstack_memory_used@@Base+0x3f80>  // b.none
  44e54c:	mov	w22, #0x0                   	// #0
  44e550:	cmp	w1, #0x73
  44e554:	b.ne	44e5a8 <_obstack_memory_used@@Base+0x3fa4>  // b.any
  44e558:	ldrb	w0, [x21, #1]
  44e55c:	cmp	w0, #0x50
  44e560:	b.ne	44e5a8 <_obstack_memory_used@@Base+0x3fa4>  // b.any
  44e564:	ldrb	w0, [x21, #2]
  44e568:	cbnz	w0, 44e5a8 <_obstack_memory_used@@Base+0x3fa4>
  44e56c:	mov	x0, x19
  44e570:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44e574:	mov	x3, x0
  44e578:	cbnz	w22, 44e5c8 <_obstack_memory_used@@Base+0x3fc4>
  44e57c:	ldp	x21, x22, [sp, #32]
  44e580:	b	44e508 <_obstack_memory_used@@Base+0x3f04>
  44e584:	ldr	x0, [x19, #24]
  44e588:	ldrb	w2, [x0]
  44e58c:	cmp	w2, #0x5f
  44e590:	b.ne	44e550 <_obstack_memory_used@@Base+0x3f4c>  // b.any
  44e594:	add	x0, x0, #0x1
  44e598:	str	x0, [x19, #24]
  44e59c:	mov	w22, #0x0                   	// #0
  44e5a0:	ldrb	w1, [x21]
  44e5a4:	b	44e550 <_obstack_memory_used@@Base+0x3f4c>
  44e5a8:	mov	x0, x19
  44e5ac:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e5b0:	mov	x3, x0
  44e5b4:	b	44e578 <_obstack_memory_used@@Base+0x3f74>
  44e5b8:	add	x2, x2, #0x3
  44e5bc:	mov	w0, #0x0                   	// #0
  44e5c0:	str	x2, [x19, #24]
  44e5c4:	b	44e250 <_obstack_memory_used@@Base+0x3c4c>
  44e5c8:	mov	x2, x3
  44e5cc:	mov	x0, x19
  44e5d0:	mov	w1, #0x39                  	// #57
  44e5d4:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e5d8:	mov	x3, x0
  44e5dc:	ldp	x21, x22, [sp, #32]
  44e5e0:	b	44e508 <_obstack_memory_used@@Base+0x3f04>
  44e5e4:	ldr	x0, [x20, #8]
  44e5e8:	ldr	x0, [x0]
  44e5ec:	ldrb	w1, [x0, #1]
  44e5f0:	cmp	w1, #0x63
  44e5f4:	b.eq	44e79c <_obstack_memory_used@@Base+0x4198>  // b.none
  44e5f8:	ldrb	w0, [x21]
  44e5fc:	cmp	w0, #0x66
  44e600:	b.eq	44e7cc <_obstack_memory_used@@Base+0x41c8>  // b.none
  44e604:	mov	x0, x19
  44e608:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e60c:	mov	x22, x0
  44e610:	ldrb	w1, [x21]
  44e614:	cmp	w1, #0x63
  44e618:	b.ne	44e6f4 <_obstack_memory_used@@Base+0x40f0>  // b.any
  44e61c:	ldrb	w0, [x21, #1]
  44e620:	cmp	w0, #0x6c
  44e624:	b.ne	44e6f4 <_obstack_memory_used@@Base+0x40f0>  // b.any
  44e628:	ldrb	w0, [x21, #2]
  44e62c:	cbnz	w0, 44e6f4 <_obstack_memory_used@@Base+0x40f0>
  44e630:	mov	x0, x19
  44e634:	mov	w1, #0x45                  	// #69
  44e638:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44e63c:	mov	x21, x0
  44e640:	mov	x3, x21
  44e644:	mov	x2, x22
  44e648:	mov	x0, x19
  44e64c:	mov	w1, #0x39                  	// #57
  44e650:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e654:	mov	x3, x0
  44e658:	mov	x2, x20
  44e65c:	mov	x0, x19
  44e660:	ldp	x19, x20, [sp, #16]
  44e664:	mov	w1, #0x38                  	// #56
  44e668:	ldp	x21, x22, [sp, #32]
  44e66c:	ldp	x29, x30, [sp], #48
  44e670:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e674:	ldrb	w0, [x21]
  44e678:	cmp	w0, #0x66
  44e67c:	b.eq	44e7f4 <_obstack_memory_used@@Base+0x41f0>  // b.none
  44e680:	cmp	w0, #0x6e
  44e684:	b.ne	44e28c <_obstack_memory_used@@Base+0x3c88>  // b.any
  44e688:	ldrb	w0, [x21, #1]
  44e68c:	mov	w1, #0x61                  	// #97
  44e690:	cmp	w0, #0x77
  44e694:	ccmp	w0, w1, #0x4, ne  // ne = any
  44e698:	b.ne	44e28c <_obstack_memory_used@@Base+0x3c88>  // b.any
  44e69c:	mov	w1, #0x5f                  	// #95
  44e6a0:	mov	x0, x19
  44e6a4:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44e6a8:	mov	x21, x0
  44e6ac:	mov	x0, x19
  44e6b0:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44e6b4:	ldr	x1, [x19, #24]
  44e6b8:	mov	x22, x0
  44e6bc:	ldrb	w0, [x1]
  44e6c0:	cmp	w0, #0x45
  44e6c4:	b.eq	44e828 <_obstack_memory_used@@Base+0x4224>  // b.none
  44e6c8:	cmp	w0, #0x70
  44e6cc:	b.eq	44e800 <_obstack_memory_used@@Base+0x41fc>  // b.none
  44e6d0:	cmp	w0, #0x69
  44e6d4:	b.ne	44e28c <_obstack_memory_used@@Base+0x3c88>  // b.any
  44e6d8:	ldrb	w0, [x1, #1]
  44e6dc:	cmp	w0, #0x6c
  44e6e0:	b.ne	44e28c <_obstack_memory_used@@Base+0x3c88>  // b.any
  44e6e4:	mov	x0, x19
  44e6e8:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e6ec:	mov	x3, x0
  44e6f0:	b	44e3bc <_obstack_memory_used@@Base+0x3db8>
  44e6f4:	cmp	w1, #0x64
  44e6f8:	b.ne	44e784 <_obstack_memory_used@@Base+0x4180>  // b.any
  44e6fc:	ldrb	w0, [x21, #1]
  44e700:	cmp	w0, #0x74
  44e704:	b.ne	44e784 <_obstack_memory_used@@Base+0x4180>  // b.any
  44e708:	ldrb	w0, [x21, #2]
  44e70c:	cbnz	w0, 44e784 <_obstack_memory_used@@Base+0x4180>
  44e710:	mov	x0, x19
  44e714:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44e718:	ldr	x1, [x19, #24]
  44e71c:	mov	x21, x0
  44e720:	ldrb	w0, [x1]
  44e724:	cmp	w0, #0x49
  44e728:	b.ne	44e640 <_obstack_memory_used@@Base+0x403c>  // b.any
  44e72c:	add	x1, x1, #0x1
  44e730:	str	x1, [x19, #24]
  44e734:	mov	x0, x19
  44e738:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44e73c:	mov	x3, x0
  44e740:	mov	x2, x21
  44e744:	mov	x0, x19
  44e748:	mov	w1, #0x4                   	// #4
  44e74c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e750:	mov	x21, x0
  44e754:	b	44e640 <_obstack_memory_used@@Base+0x403c>
  44e758:	ldr	x0, [x19, #24]
  44e75c:	ldrb	w1, [x0]
  44e760:	cmp	w1, #0x5f
  44e764:	b.ne	44e4fc <_obstack_memory_used@@Base+0x3ef8>  // b.any
  44e768:	add	x0, x0, #0x1
  44e76c:	str	x0, [x19, #24]
  44e770:	mov	w1, #0x45                  	// #69
  44e774:	mov	x0, x19
  44e778:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44e77c:	mov	x3, x0
  44e780:	b	44e508 <_obstack_memory_used@@Base+0x3f04>
  44e784:	cmp	w1, #0x70
  44e788:	b.eq	44e7dc <_obstack_memory_used@@Base+0x41d8>  // b.none
  44e78c:	mov	x0, x19
  44e790:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e794:	mov	x21, x0
  44e798:	b	44e640 <_obstack_memory_used@@Base+0x403c>
  44e79c:	ldrb	w0, [x0]
  44e7a0:	sub	w1, w0, #0x63
  44e7a4:	sub	w0, w0, #0x72
  44e7a8:	and	w1, w1, #0xff
  44e7ac:	and	w0, w0, #0xff
  44e7b0:	cmp	w1, #0x1
  44e7b4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  44e7b8:	b.hi	44e5f8 <_obstack_memory_used@@Base+0x3ff4>  // b.pmore
  44e7bc:	mov	x0, x19
  44e7c0:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44e7c4:	mov	x22, x0
  44e7c8:	b	44e610 <_obstack_memory_used@@Base+0x400c>
  44e7cc:	mov	x0, x19
  44e7d0:	bl	450308 <_obstack_memory_used@@Base+0x5d04>
  44e7d4:	mov	x22, x0
  44e7d8:	b	44e610 <_obstack_memory_used@@Base+0x400c>
  44e7dc:	ldrb	w0, [x21, #1]
  44e7e0:	cmp	w0, #0x74
  44e7e4:	b.ne	44e78c <_obstack_memory_used@@Base+0x4188>  // b.any
  44e7e8:	ldrb	w0, [x21, #2]
  44e7ec:	cbz	w0, 44e710 <_obstack_memory_used@@Base+0x410c>
  44e7f0:	b	44e78c <_obstack_memory_used@@Base+0x4188>
  44e7f4:	mov	x0, x19
  44e7f8:	bl	450308 <_obstack_memory_used@@Base+0x5d04>
  44e7fc:	b	44e39c <_obstack_memory_used@@Base+0x3d98>
  44e800:	ldrb	w0, [x1, #1]
  44e804:	cmp	w0, #0x69
  44e808:	b.ne	44e28c <_obstack_memory_used@@Base+0x3c88>  // b.any
  44e80c:	add	x1, x1, #0x2
  44e810:	str	x1, [x19, #24]
  44e814:	mov	x0, x19
  44e818:	mov	w1, #0x45                  	// #69
  44e81c:	bl	44d8e8 <_obstack_memory_used@@Base+0x32e4>
  44e820:	mov	x3, x0
  44e824:	b	44e3bc <_obstack_memory_used@@Base+0x3db8>
  44e828:	add	x1, x1, #0x1
  44e82c:	mov	x3, #0x0                   	// #0
  44e830:	str	x1, [x19, #24]
  44e834:	b	44e3bc <_obstack_memory_used@@Base+0x3db8>
  44e838:	ldr	x2, [x0, #24]
  44e83c:	ldrb	w1, [x2]
  44e840:	cmp	w1, #0x4c
  44e844:	b.eq	44e8d0 <_obstack_memory_used@@Base+0x42cc>  // b.none
  44e848:	stp	x29, x30, [sp, #-32]!
  44e84c:	mov	x29, sp
  44e850:	stp	x19, x20, [sp, #16]
  44e854:	mov	x19, x0
  44e858:	b.hi	44e878 <_obstack_memory_used@@Base+0x4274>  // b.pmore
  44e85c:	sub	w1, w1, #0x49
  44e860:	and	w1, w1, #0xff
  44e864:	cmp	w1, #0x1
  44e868:	b.hi	44e8c0 <_obstack_memory_used@@Base+0x42bc>  // b.pmore
  44e86c:	ldp	x19, x20, [sp, #16]
  44e870:	ldp	x29, x30, [sp], #32
  44e874:	b	44e9a8 <_obstack_memory_used@@Base+0x43a4>
  44e878:	cmp	w1, #0x58
  44e87c:	b.ne	44e8c0 <_obstack_memory_used@@Base+0x42bc>  // b.any
  44e880:	add	x2, x2, #0x1
  44e884:	ldr	w20, [x0, #76]
  44e888:	mov	w1, #0x1                   	// #1
  44e88c:	str	x2, [x0, #24]
  44e890:	str	w1, [x0, #76]
  44e894:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44e898:	str	w20, [x19, #76]
  44e89c:	ldr	x1, [x19, #24]
  44e8a0:	ldrb	w2, [x1]
  44e8a4:	cmp	w2, #0x45
  44e8a8:	b.ne	44e8d4 <_obstack_memory_used@@Base+0x42d0>  // b.any
  44e8ac:	add	x1, x1, #0x1
  44e8b0:	str	x1, [x19, #24]
  44e8b4:	ldp	x19, x20, [sp, #16]
  44e8b8:	ldp	x29, x30, [sp], #32
  44e8bc:	ret
  44e8c0:	mov	x0, x19
  44e8c4:	ldp	x19, x20, [sp, #16]
  44e8c8:	ldp	x29, x30, [sp], #32
  44e8cc:	b	44f720 <_obstack_memory_used@@Base+0x511c>
  44e8d0:	b	450eb0 <_obstack_memory_used@@Base+0x68ac>
  44e8d4:	mov	x0, #0x0                   	// #0
  44e8d8:	b	44e8b4 <_obstack_memory_used@@Base+0x42b0>
  44e8dc:	nop
  44e8e0:	stp	x29, x30, [sp, #-64]!
  44e8e4:	mov	x29, sp
  44e8e8:	ldr	x1, [x0, #24]
  44e8ec:	stp	x19, x20, [sp, #16]
  44e8f0:	mov	x19, x0
  44e8f4:	str	x21, [sp, #32]
  44e8f8:	ldr	x21, [x0, #64]
  44e8fc:	ldrb	w2, [x1]
  44e900:	cmp	w2, #0x45
  44e904:	b.eq	44e984 <_obstack_memory_used@@Base+0x4380>  // b.none
  44e908:	add	x20, sp, #0x38
  44e90c:	str	xzr, [sp, #56]
  44e910:	b	44e934 <_obstack_memory_used@@Base+0x4330>
  44e914:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e918:	str	x0, [x20]
  44e91c:	add	x20, x0, #0x10
  44e920:	cbz	x0, 44e950 <_obstack_memory_used@@Base+0x434c>
  44e924:	ldr	x1, [x19, #24]
  44e928:	ldrb	w0, [x1]
  44e92c:	cmp	w0, #0x45
  44e930:	b.eq	44e964 <_obstack_memory_used@@Base+0x4360>  // b.none
  44e934:	mov	x0, x19
  44e938:	bl	44e838 <_obstack_memory_used@@Base+0x4234>
  44e93c:	mov	x3, #0x0                   	// #0
  44e940:	mov	x2, x0
  44e944:	mov	w1, #0x2f                  	// #47
  44e948:	mov	x0, x19
  44e94c:	cbnz	x2, 44e914 <_obstack_memory_used@@Base+0x4310>
  44e950:	mov	x0, #0x0                   	// #0
  44e954:	ldp	x19, x20, [sp, #16]
  44e958:	ldr	x21, [sp, #32]
  44e95c:	ldp	x29, x30, [sp], #64
  44e960:	ret
  44e964:	add	x1, x1, #0x1
  44e968:	str	x1, [x19, #24]
  44e96c:	str	x21, [x19, #64]
  44e970:	ldp	x19, x20, [sp, #16]
  44e974:	ldr	x21, [sp, #32]
  44e978:	ldr	x0, [sp, #56]
  44e97c:	ldp	x29, x30, [sp], #64
  44e980:	ret
  44e984:	add	x1, x1, #0x1
  44e988:	mov	x3, #0x0                   	// #0
  44e98c:	ldr	x21, [sp, #32]
  44e990:	str	x1, [x0, #24]
  44e994:	ldp	x19, x20, [sp, #16]
  44e998:	mov	x2, #0x0                   	// #0
  44e99c:	ldp	x29, x30, [sp], #64
  44e9a0:	mov	w1, #0x2f                  	// #47
  44e9a4:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44e9a8:	ldr	x3, [x0, #24]
  44e9ac:	ldrb	w1, [x3]
  44e9b0:	sub	w1, w1, #0x49
  44e9b4:	and	w1, w1, #0xff
  44e9b8:	cmp	w1, #0x1
  44e9bc:	b.hi	44e9cc <_obstack_memory_used@@Base+0x43c8>  // b.pmore
  44e9c0:	add	x3, x3, #0x1
  44e9c4:	str	x3, [x0, #24]
  44e9c8:	b	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44e9cc:	mov	x0, #0x0                   	// #0
  44e9d0:	ret
  44e9d4:	nop
  44e9d8:	stp	x29, x30, [sp, #-48]!
  44e9dc:	mov	w3, #0x54                  	// #84
  44e9e0:	mov	x29, sp
  44e9e4:	ldr	x2, [x0, #24]
  44e9e8:	stp	x19, x20, [sp, #16]
  44e9ec:	mov	x19, x0
  44e9f0:	str	x21, [sp, #32]
  44e9f4:	mov	w21, w1
  44e9f8:	ldrb	w1, [x2]
  44e9fc:	cmp	w1, #0x47
  44ea00:	ccmp	w1, w3, #0x4, ne  // ne = any
  44ea04:	b.ne	44ea90 <_obstack_memory_used@@Base+0x448c>  // b.any
  44ea08:	ldr	w3, [x0, #72]
  44ea0c:	add	w1, w3, #0x14
  44ea10:	str	w1, [x0, #72]
  44ea14:	ldrb	w1, [x2]
  44ea18:	cmp	w1, #0x54
  44ea1c:	b.eq	44ebb4 <_obstack_memory_used@@Base+0x45b0>  // b.none
  44ea20:	cmp	w1, #0x47
  44ea24:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44ea28:	add	x1, x2, #0x1
  44ea2c:	str	x1, [x0, #24]
  44ea30:	ldrb	w1, [x2, #1]
  44ea34:	cbz	w1, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44ea38:	add	x1, x2, #0x2
  44ea3c:	str	x1, [x0, #24]
  44ea40:	ldrb	w1, [x2, #1]
  44ea44:	cmp	w1, #0x54
  44ea48:	b.eq	44ef50 <_obstack_memory_used@@Base+0x494c>  // b.none
  44ea4c:	b.hi	44ec1c <_obstack_memory_used@@Base+0x4618>  // b.pmore
  44ea50:	cmp	w1, #0x41
  44ea54:	b.eq	44ef98 <_obstack_memory_used@@Base+0x4994>  // b.none
  44ea58:	cmp	w1, #0x52
  44ea5c:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44ea60:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44ea64:	mov	x11, x0
  44ea68:	mov	x0, x19
  44ea6c:	bl	44cf50 <_obstack_memory_used@@Base+0x294c>
  44ea70:	mov	x3, x0
  44ea74:	mov	x0, x19
  44ea78:	mov	x2, x11
  44ea7c:	ldp	x19, x20, [sp, #16]
  44ea80:	mov	w1, #0x16                  	// #22
  44ea84:	ldr	x21, [sp, #32]
  44ea88:	ldp	x29, x30, [sp], #48
  44ea8c:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ea90:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44ea94:	mov	x20, x0
  44ea98:	cbz	x0, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44ea9c:	cbz	w21, 44eaec <_obstack_memory_used@@Base+0x44e8>
  44eaa0:	ldr	w0, [x19, #16]
  44eaa4:	tbnz	w0, #0, 44eaec <_obstack_memory_used@@Base+0x44e8>
  44eaa8:	mov	x1, #0x1f                  	// #31
  44eaac:	mov	x2, #0x1                   	// #1
  44eab0:	movk	x1, #0x1a, lsl #48
  44eab4:	ldr	w3, [x20]
  44eab8:	sub	w0, w3, #0x1c
  44eabc:	cmp	w0, #0x34
  44eac0:	b.hi	44ead0 <_obstack_memory_used@@Base+0x44cc>  // b.pmore
  44eac4:	lsl	x0, x2, x0
  44eac8:	tst	x0, x1
  44eacc:	b.ne	44ee04 <_obstack_memory_used@@Base+0x4800>  // b.any
  44ead0:	cmp	w3, #0x2
  44ead4:	b.eq	44ee0c <_obstack_memory_used@@Base+0x4808>  // b.none
  44ead8:	mov	x0, x20
  44eadc:	ldp	x19, x20, [sp, #16]
  44eae0:	ldr	x21, [sp, #32]
  44eae4:	ldp	x29, x30, [sp], #48
  44eae8:	ret
  44eaec:	ldr	x0, [x19, #24]
  44eaf0:	ldrb	w0, [x0]
  44eaf4:	cmp	w0, #0x45
  44eaf8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  44eafc:	b.eq	44ead8 <_obstack_memory_used@@Base+0x44d4>  // b.none
  44eb00:	mov	x1, #0x1f                  	// #31
  44eb04:	mov	x4, x20
  44eb08:	mov	x2, #0x1                   	// #1
  44eb0c:	movk	x1, #0x1a, lsl #48
  44eb10:	ldr	w3, [x4]
  44eb14:	cmp	w3, #0x4
  44eb18:	b.eq	44ee80 <_obstack_memory_used@@Base+0x487c>  // b.none
  44eb1c:	sub	w0, w3, #0x1c
  44eb20:	b.hi	44ed10 <_obstack_memory_used@@Base+0x470c>  // b.pmore
  44eb24:	cmp	w3, #0x2
  44eb28:	b.ne	44eb34 <_obstack_memory_used@@Base+0x4530>  // b.any
  44eb2c:	ldr	x4, [x4, #16]
  44eb30:	cbnz	x4, 44eb10 <_obstack_memory_used@@Base+0x450c>
  44eb34:	mov	w1, #0x0                   	// #0
  44eb38:	mov	x0, x19
  44eb3c:	bl	450860 <_obstack_memory_used@@Base+0x625c>
  44eb40:	mov	x3, x0
  44eb44:	cbz	x0, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44eb48:	cbnz	w21, 44eb68 <_obstack_memory_used@@Base+0x4564>
  44eb4c:	ldr	w0, [x20]
  44eb50:	cmp	w0, #0x2
  44eb54:	b.ne	44eb68 <_obstack_memory_used@@Base+0x4564>  // b.any
  44eb58:	ldr	w0, [x3]
  44eb5c:	cmp	w0, #0x29
  44eb60:	b.ne	44eb68 <_obstack_memory_used@@Base+0x4564>  // b.any
  44eb64:	str	xzr, [x3, #8]
  44eb68:	mov	x2, x20
  44eb6c:	mov	x0, x19
  44eb70:	ldp	x19, x20, [sp, #16]
  44eb74:	mov	w1, #0x3                   	// #3
  44eb78:	ldr	x21, [sp, #32]
  44eb7c:	ldp	x29, x30, [sp], #48
  44eb80:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44eb84:	cmp	w1, #0x68
  44eb88:	b.eq	44f12c <_obstack_memory_used@@Base+0x4b28>  // b.none
  44eb8c:	cmp	w1, #0x76
  44eb90:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44eb94:	bl	44d518 <_obstack_memory_used@@Base+0x2f14>
  44eb98:	cbnz	w0, 44ee54 <_obstack_memory_used@@Base+0x4850>
  44eb9c:	mov	x20, #0x0                   	// #0
  44eba0:	mov	x0, x20
  44eba4:	ldp	x19, x20, [sp, #16]
  44eba8:	ldr	x21, [sp, #32]
  44ebac:	ldp	x29, x30, [sp], #48
  44ebb0:	ret
  44ebb4:	add	x1, x2, #0x1
  44ebb8:	str	x1, [x0, #24]
  44ebbc:	ldrb	w1, [x2, #1]
  44ebc0:	cbz	w1, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44ebc4:	add	x1, x2, #0x2
  44ebc8:	str	x1, [x0, #24]
  44ebcc:	ldrb	w1, [x2, #1]
  44ebd0:	cmp	w1, #0x53
  44ebd4:	b.eq	44f09c <_obstack_memory_used@@Base+0x4a98>  // b.none
  44ebd8:	b.hi	44ed90 <_obstack_memory_used@@Base+0x478c>  // b.pmore
  44ebdc:	cmp	w1, #0x48
  44ebe0:	b.eq	44f078 <_obstack_memory_used@@Base+0x4a74>  // b.none
  44ebe4:	b.hi	44ed5c <_obstack_memory_used@@Base+0x4758>  // b.pmore
  44ebe8:	cmp	w1, #0x43
  44ebec:	b.eq	44f018 <_obstack_memory_used@@Base+0x4a14>  // b.none
  44ebf0:	cmp	w1, #0x46
  44ebf4:	b.ne	44ed30 <_obstack_memory_used@@Base+0x472c>  // b.any
  44ebf8:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44ebfc:	mov	x2, x0
  44ec00:	mov	x0, x19
  44ec04:	mov	x3, #0x0                   	// #0
  44ec08:	ldp	x19, x20, [sp, #16]
  44ec0c:	mov	w1, #0xe                   	// #14
  44ec10:	ldr	x21, [sp, #32]
  44ec14:	ldp	x29, x30, [sp], #48
  44ec18:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ec1c:	cmp	w1, #0x56
  44ec20:	b.eq	44ef2c <_obstack_memory_used@@Base+0x4928>  // b.none
  44ec24:	cmp	w1, #0x72
  44ec28:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44ec2c:	add	x0, x0, #0x18
  44ec30:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44ec34:	cmp	w0, #0x1
  44ec38:	b.le	44eb9c <_obstack_memory_used@@Base+0x4598>
  44ec3c:	ldr	x1, [x19, #24]
  44ec40:	ldrb	w2, [x1]
  44ec44:	cbz	w2, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44ec48:	add	x8, x1, #0x1
  44ec4c:	str	x8, [x19, #24]
  44ec50:	ldrb	w1, [x1]
  44ec54:	cmp	w1, #0x5f
  44ec58:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44ec5c:	sub	w9, w0, #0x1
  44ec60:	mov	x2, #0x0                   	// #0
  44ec64:	mov	w11, #0x18                  	// #24
  44ec68:	mov	w10, #0x41                  	// #65
  44ec6c:	ldrb	w0, [x8]
  44ec70:	cbz	w0, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44ec74:	cmp	w0, #0x24
  44ec78:	b.ne	44eec4 <_obstack_memory_used@@Base+0x48c0>  // b.any
  44ec7c:	ldrb	w0, [x8, #1]
  44ec80:	cmp	w0, #0x53
  44ec84:	b.eq	44efd0 <_obstack_memory_used@@Base+0x49cc>  // b.none
  44ec88:	cmp	w0, #0x5f
  44ec8c:	b.eq	44efc8 <_obstack_memory_used@@Base+0x49c4>  // b.none
  44ec90:	cmp	w0, #0x24
  44ec94:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44ec98:	ldp	w1, w3, [x19, #40]
  44ec9c:	ldr	x8, [x19, #24]
  44eca0:	cmp	w1, w3
  44eca4:	add	x8, x8, #0x2
  44eca8:	b.ge	44f160 <_obstack_memory_used@@Base+0x4b5c>  // b.tcont
  44ecac:	ldr	x5, [x19, #32]
  44ecb0:	smull	x4, w1, w11
  44ecb4:	add	w1, w1, #0x1
  44ecb8:	sub	w9, w9, #0x2
  44ecbc:	add	x3, x5, x4
  44ecc0:	str	wzr, [x3, #4]
  44ecc4:	str	w1, [x19, #40]
  44ecc8:	str	w10, [x5, x4]
  44eccc:	str	w0, [x3, #8]
  44ecd0:	str	x8, [x19, #24]
  44ecd4:	cbz	x2, 44efc0 <_obstack_memory_used@@Base+0x49bc>
  44ecd8:	mov	x0, x19
  44ecdc:	mov	w1, #0x40                  	// #64
  44ece0:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ece4:	mov	x2, x0
  44ece8:	cbz	x0, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44ecec:	cmp	w9, #0x0
  44ecf0:	b.gt	44ec6c <_obstack_memory_used@@Base+0x4668>
  44ecf4:	mov	x0, x19
  44ecf8:	mov	x3, #0x0                   	// #0
  44ecfc:	ldp	x19, x20, [sp, #16]
  44ed00:	mov	w1, #0x3f                  	// #63
  44ed04:	ldr	x21, [sp, #32]
  44ed08:	ldp	x29, x30, [sp], #48
  44ed0c:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ed10:	cmp	w0, #0x34
  44ed14:	b.hi	44eb34 <_obstack_memory_used@@Base+0x4530>  // b.pmore
  44ed18:	lsl	x0, x2, x0
  44ed1c:	tst	x0, x1
  44ed20:	b.eq	44eb34 <_obstack_memory_used@@Base+0x4530>  // b.none
  44ed24:	ldr	x4, [x4, #8]
  44ed28:	cbnz	x4, 44eb10 <_obstack_memory_used@@Base+0x450c>
  44ed2c:	b	44eb34 <_obstack_memory_used@@Base+0x4530>
  44ed30:	cmp	w1, #0x41
  44ed34:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44ed38:	bl	44e838 <_obstack_memory_used@@Base+0x4234>
  44ed3c:	mov	x2, x0
  44ed40:	mov	x0, x19
  44ed44:	mov	x3, #0x0                   	// #0
  44ed48:	ldp	x19, x20, [sp, #16]
  44ed4c:	mov	w1, #0x30                  	// #48
  44ed50:	ldr	x21, [sp, #32]
  44ed54:	ldp	x29, x30, [sp], #48
  44ed58:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ed5c:	cmp	w1, #0x49
  44ed60:	b.eq	44f108 <_obstack_memory_used@@Base+0x4b04>  // b.none
  44ed64:	cmp	w1, #0x4a
  44ed68:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44ed6c:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44ed70:	mov	x2, x0
  44ed74:	mov	x0, x19
  44ed78:	mov	x3, #0x0                   	// #0
  44ed7c:	ldp	x19, x20, [sp, #16]
  44ed80:	mov	w1, #0x12                  	// #18
  44ed84:	ldr	x21, [sp, #32]
  44ed88:	ldp	x29, x30, [sp], #48
  44ed8c:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ed90:	cmp	w1, #0x63
  44ed94:	b.eq	44f0c0 <_obstack_memory_used@@Base+0x4abc>  // b.none
  44ed98:	b.hi	44eb84 <_obstack_memory_used@@Base+0x4580>  // b.pmore
  44ed9c:	cmp	w1, #0x56
  44eda0:	b.eq	44efec <_obstack_memory_used@@Base+0x49e8>  // b.none
  44eda4:	cmp	w1, #0x57
  44eda8:	b.ne	44edd0 <_obstack_memory_used@@Base+0x47cc>  // b.any
  44edac:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44edb0:	mov	x2, x0
  44edb4:	mov	x0, x19
  44edb8:	mov	x3, #0x0                   	// #0
  44edbc:	ldp	x19, x20, [sp, #16]
  44edc0:	mov	w1, #0x15                  	// #21
  44edc4:	ldr	x21, [sp, #32]
  44edc8:	ldp	x29, x30, [sp], #48
  44edcc:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44edd0:	cmp	w1, #0x54
  44edd4:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44edd8:	add	w3, w3, #0xa
  44eddc:	str	w3, [x0, #72]
  44ede0:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44ede4:	mov	x2, x0
  44ede8:	mov	x0, x19
  44edec:	mov	x3, #0x0                   	// #0
  44edf0:	ldp	x19, x20, [sp, #16]
  44edf4:	mov	w1, #0xa                   	// #10
  44edf8:	ldr	x21, [sp, #32]
  44edfc:	ldp	x29, x30, [sp], #48
  44ee00:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ee04:	ldr	x20, [x20, #8]
  44ee08:	b	44eab4 <_obstack_memory_used@@Base+0x44b0>
  44ee0c:	ldr	x3, [x20, #16]
  44ee10:	mov	x1, #0x1f                  	// #31
  44ee14:	mov	x2, #0x1                   	// #1
  44ee18:	movk	x1, #0x1a, lsl #48
  44ee1c:	ldr	w0, [x3]
  44ee20:	sub	w0, w0, #0x1c
  44ee24:	cmp	w0, #0x34
  44ee28:	b.hi	44ead8 <_obstack_memory_used@@Base+0x44d4>  // b.pmore
  44ee2c:	lsl	x0, x2, x0
  44ee30:	tst	x0, x1
  44ee34:	b.eq	44ead8 <_obstack_memory_used@@Base+0x44d4>  // b.none
  44ee38:	ldr	x3, [x3, #8]
  44ee3c:	str	x3, [x20, #16]
  44ee40:	ldr	w0, [x3]
  44ee44:	sub	w0, w0, #0x1c
  44ee48:	cmp	w0, #0x34
  44ee4c:	b.ls	44ee2c <_obstack_memory_used@@Base+0x4828>  // b.plast
  44ee50:	b	44ead8 <_obstack_memory_used@@Base+0x44d4>
  44ee54:	mov	x0, x19
  44ee58:	mov	w1, #0x0                   	// #0
  44ee5c:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  44ee60:	mov	x2, x0
  44ee64:	mov	x0, x19
  44ee68:	mov	x3, #0x0                   	// #0
  44ee6c:	ldp	x19, x20, [sp, #16]
  44ee70:	mov	w1, #0x10                  	// #16
  44ee74:	ldr	x21, [sp, #32]
  44ee78:	ldp	x29, x30, [sp], #48
  44ee7c:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ee80:	ldr	x1, [x4, #8]
  44ee84:	cbz	x1, 44eeb0 <_obstack_memory_used@@Base+0x48ac>
  44ee88:	ldr	w0, [x1]
  44ee8c:	sub	w2, w0, #0x1
  44ee90:	cmp	w0, #0x8
  44ee94:	b.hi	44eeb8 <_obstack_memory_used@@Base+0x48b4>  // b.pmore
  44ee98:	cmp	w0, #0x6
  44ee9c:	b.hi	44eb34 <_obstack_memory_used@@Base+0x4530>  // b.pmore
  44eea0:	cmp	w2, #0x1
  44eea4:	b.hi	44eeb0 <_obstack_memory_used@@Base+0x48ac>  // b.pmore
  44eea8:	ldr	x1, [x1, #16]
  44eeac:	cbnz	x1, 44ee88 <_obstack_memory_used@@Base+0x4884>
  44eeb0:	mov	w1, #0x1                   	// #1
  44eeb4:	b	44eb38 <_obstack_memory_used@@Base+0x4534>
  44eeb8:	cmp	w0, #0x35
  44eebc:	cset	w1, ne  // ne = any
  44eec0:	b	44eb38 <_obstack_memory_used@@Base+0x4534>
  44eec4:	mov	x1, #0x1                   	// #1
  44eec8:	b	44eed0 <_obstack_memory_used@@Base+0x48cc>
  44eecc:	mov	x1, x4
  44eed0:	cmp	w9, w1
  44eed4:	mov	w5, w1
  44eed8:	b.le	44eef0 <_obstack_memory_used@@Base+0x48ec>
  44eedc:	ldrb	w3, [x8, x1]
  44eee0:	add	x4, x1, #0x1
  44eee4:	cmp	w3, #0x24
  44eee8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  44eeec:	b.ne	44eecc <_obstack_memory_used@@Base+0x48c8>  // b.any
  44eef0:	ldp	w3, w0, [x19, #40]
  44eef4:	cmp	w3, w0
  44eef8:	b.ge	44efd8 <_obstack_memory_used@@Base+0x49d4>  // b.tcont
  44eefc:	ldr	x4, [x19, #32]
  44ef00:	add	w0, w3, #0x1
  44ef04:	sub	w9, w9, w5
  44ef08:	smaddl	x3, w3, w11, x4
  44ef0c:	str	wzr, [x3, #4]
  44ef10:	str	w0, [x19, #40]
  44ef14:	stp	xzr, x8, [x3]
  44ef18:	ldr	x8, [x19, #24]
  44ef1c:	str	w5, [x3, #16]
  44ef20:	add	x8, x8, x1
  44ef24:	str	x8, [x19, #24]
  44ef28:	b	44ecd4 <_obstack_memory_used@@Base+0x46d0>
  44ef2c:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44ef30:	mov	x2, x0
  44ef34:	mov	x0, x19
  44ef38:	mov	x3, #0x0                   	// #0
  44ef3c:	ldp	x19, x20, [sp, #16]
  44ef40:	mov	w1, #0x13                  	// #19
  44ef44:	ldr	x21, [sp, #32]
  44ef48:	ldp	x29, x30, [sp], #48
  44ef4c:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ef50:	ldrb	w1, [x2, #2]
  44ef54:	cbz	w1, 44ef6c <_obstack_memory_used@@Base+0x4968>
  44ef58:	add	x1, x2, #0x3
  44ef5c:	str	x1, [x0, #24]
  44ef60:	ldrb	w1, [x2, #2]
  44ef64:	cmp	w1, #0x6e
  44ef68:	b.eq	44f16c <_obstack_memory_used@@Base+0x4b68>  // b.none
  44ef6c:	mov	x0, x19
  44ef70:	mov	w1, #0x0                   	// #0
  44ef74:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  44ef78:	mov	x2, x0
  44ef7c:	mov	x0, x19
  44ef80:	mov	x3, #0x0                   	// #0
  44ef84:	ldp	x19, x20, [sp, #16]
  44ef88:	mov	w1, #0x49                  	// #73
  44ef8c:	ldr	x21, [sp, #32]
  44ef90:	ldp	x29, x30, [sp], #48
  44ef94:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ef98:	mov	w1, #0x0                   	// #0
  44ef9c:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  44efa0:	mov	x2, x0
  44efa4:	mov	x0, x19
  44efa8:	ldp	x19, x20, [sp, #16]
  44efac:	mov	x3, #0x0                   	// #0
  44efb0:	ldr	x21, [sp, #32]
  44efb4:	mov	w1, #0x17                  	// #23
  44efb8:	ldp	x29, x30, [sp], #48
  44efbc:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44efc0:	mov	x2, x3
  44efc4:	b	44ecec <_obstack_memory_used@@Base+0x46e8>
  44efc8:	mov	w0, #0x2e                  	// #46
  44efcc:	b	44ec98 <_obstack_memory_used@@Base+0x4694>
  44efd0:	mov	w0, #0x2f                  	// #47
  44efd4:	b	44ec98 <_obstack_memory_used@@Base+0x4694>
  44efd8:	ldr	x0, [x19, #24]
  44efdc:	mov	x20, #0x0                   	// #0
  44efe0:	add	x1, x0, x1
  44efe4:	str	x1, [x19, #24]
  44efe8:	b	44ead8 <_obstack_memory_used@@Base+0x44d4>
  44efec:	add	w3, w3, #0xf
  44eff0:	str	w3, [x0, #72]
  44eff4:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44eff8:	mov	x2, x0
  44effc:	mov	x0, x19
  44f000:	mov	x3, #0x0                   	// #0
  44f004:	ldp	x19, x20, [sp, #16]
  44f008:	mov	w1, #0x9                   	// #9
  44f00c:	ldr	x21, [sp, #32]
  44f010:	ldp	x29, x30, [sp], #48
  44f014:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f018:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f01c:	mov	x20, x0
  44f020:	add	x0, x19, #0x18
  44f024:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44f028:	tbnz	w0, #31, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44f02c:	ldr	x0, [x19, #24]
  44f030:	ldrb	w1, [x0]
  44f034:	cmp	w1, #0x5f
  44f038:	b.ne	44eb9c <_obstack_memory_used@@Base+0x4598>  // b.any
  44f03c:	add	x0, x0, #0x1
  44f040:	str	x0, [x19, #24]
  44f044:	mov	x0, x19
  44f048:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f04c:	mov	x2, x0
  44f050:	ldr	w1, [x19, #72]
  44f054:	mov	x3, x20
  44f058:	ldr	x21, [sp, #32]
  44f05c:	add	w1, w1, #0x5
  44f060:	str	w1, [x19, #72]
  44f064:	mov	x0, x19
  44f068:	ldp	x19, x20, [sp, #16]
  44f06c:	mov	w1, #0xb                   	// #11
  44f070:	ldp	x29, x30, [sp], #48
  44f074:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f078:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44f07c:	mov	x2, x0
  44f080:	mov	x0, x19
  44f084:	mov	x3, #0x0                   	// #0
  44f088:	ldp	x19, x20, [sp, #16]
  44f08c:	mov	w1, #0x14                  	// #20
  44f090:	ldr	x21, [sp, #32]
  44f094:	ldp	x29, x30, [sp], #48
  44f098:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f09c:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f0a0:	mov	x2, x0
  44f0a4:	mov	x0, x19
  44f0a8:	mov	x3, #0x0                   	// #0
  44f0ac:	ldp	x19, x20, [sp, #16]
  44f0b0:	mov	w1, #0xd                   	// #13
  44f0b4:	ldr	x21, [sp, #32]
  44f0b8:	ldp	x29, x30, [sp], #48
  44f0bc:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f0c0:	mov	w1, #0x0                   	// #0
  44f0c4:	bl	44d518 <_obstack_memory_used@@Base+0x2f14>
  44f0c8:	cbz	w0, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44f0cc:	mov	x0, x19
  44f0d0:	mov	w1, #0x0                   	// #0
  44f0d4:	bl	44d518 <_obstack_memory_used@@Base+0x2f14>
  44f0d8:	cbz	w0, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44f0dc:	mov	x0, x19
  44f0e0:	mov	w1, #0x0                   	// #0
  44f0e4:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  44f0e8:	mov	x2, x0
  44f0ec:	mov	x0, x19
  44f0f0:	mov	x3, #0x0                   	// #0
  44f0f4:	ldp	x19, x20, [sp, #16]
  44f0f8:	mov	w1, #0x11                  	// #17
  44f0fc:	ldr	x21, [sp, #32]
  44f100:	ldp	x29, x30, [sp], #48
  44f104:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f108:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f10c:	mov	x2, x0
  44f110:	mov	x0, x19
  44f114:	mov	x3, #0x0                   	// #0
  44f118:	ldp	x19, x20, [sp, #16]
  44f11c:	mov	w1, #0xc                   	// #12
  44f120:	ldr	x21, [sp, #32]
  44f124:	ldp	x29, x30, [sp], #48
  44f128:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f12c:	bl	44d518 <_obstack_memory_used@@Base+0x2f14>
  44f130:	cbz	w0, 44eb9c <_obstack_memory_used@@Base+0x4598>
  44f134:	mov	x0, x19
  44f138:	mov	w1, #0x0                   	// #0
  44f13c:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  44f140:	mov	x2, x0
  44f144:	mov	x0, x19
  44f148:	mov	x3, #0x0                   	// #0
  44f14c:	ldp	x19, x20, [sp, #16]
  44f150:	mov	w1, #0xf                   	// #15
  44f154:	ldr	x21, [sp, #32]
  44f158:	ldp	x29, x30, [sp], #48
  44f15c:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f160:	mov	x20, #0x0                   	// #0
  44f164:	str	x8, [x19, #24]
  44f168:	b	44ead8 <_obstack_memory_used@@Base+0x44d4>
  44f16c:	mov	w1, #0x0                   	// #0
  44f170:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  44f174:	mov	x2, x0
  44f178:	mov	x0, x19
  44f17c:	ldp	x19, x20, [sp, #16]
  44f180:	mov	x3, #0x0                   	// #0
  44f184:	ldr	x21, [sp, #32]
  44f188:	mov	w1, #0x4a                  	// #74
  44f18c:	ldp	x29, x30, [sp], #48
  44f190:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f194:	nop
  44f198:	stp	x29, x30, [sp, #-112]!
  44f19c:	mov	x29, sp
  44f1a0:	ldr	x2, [x0, #24]
  44f1a4:	stp	x19, x20, [sp, #16]
  44f1a8:	ldrb	w1, [x2]
  44f1ac:	cmp	w1, #0x55
  44f1b0:	b.eq	44f398 <_obstack_memory_used@@Base+0x4d94>  // b.none
  44f1b4:	mov	x19, x0
  44f1b8:	b.hi	44f268 <_obstack_memory_used@@Base+0x4c64>  // b.pmore
  44f1bc:	cmp	w1, #0x4e
  44f1c0:	b.eq	44f3b0 <_obstack_memory_used@@Base+0x4dac>  // b.none
  44f1c4:	cmp	w1, #0x53
  44f1c8:	b.ne	44f338 <_obstack_memory_used@@Base+0x4d34>  // b.any
  44f1cc:	ldrb	w1, [x2, #1]
  44f1d0:	cmp	w1, #0x74
  44f1d4:	b.ne	44f2f8 <_obstack_memory_used@@Base+0x4cf4>  // b.any
  44f1d8:	ldp	w0, w1, [x0, #40]
  44f1dc:	add	x2, x2, #0x2
  44f1e0:	str	x2, [x19, #24]
  44f1e4:	cmp	w0, w1
  44f1e8:	b.ge	44f66c <_obstack_memory_used@@Base+0x5068>  // b.tcont
  44f1ec:	mov	w3, #0x18                  	// #24
  44f1f0:	add	w1, w0, #0x1
  44f1f4:	ldr	x2, [x19, #32]
  44f1f8:	smull	x0, w0, w3
  44f1fc:	str	w1, [x19, #40]
  44f200:	mov	w3, #0x3                   	// #3
  44f204:	add	x20, x2, x0
  44f208:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44f20c:	add	x1, x1, #0x330
  44f210:	str	xzr, [x2, x0]
  44f214:	str	x1, [x20, #8]
  44f218:	str	w3, [x20, #16]
  44f21c:	mov	x0, x19
  44f220:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44f224:	mov	x2, x20
  44f228:	mov	x3, x0
  44f22c:	mov	w1, #0x1                   	// #1
  44f230:	mov	x0, x19
  44f234:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f238:	mov	x20, x0
  44f23c:	ldr	w1, [x19, #72]
  44f240:	ldr	x2, [x19, #24]
  44f244:	add	w1, w1, #0x3
  44f248:	str	w1, [x19, #72]
  44f24c:	ldrb	w0, [x2]
  44f250:	cmp	w0, #0x49
  44f254:	b.eq	44f618 <_obstack_memory_used@@Base+0x5014>  // b.none
  44f258:	mov	x0, x20
  44f25c:	ldp	x19, x20, [sp, #16]
  44f260:	ldp	x29, x30, [sp], #112
  44f264:	ret
  44f268:	cmp	w1, #0x5a
  44f26c:	b.ne	44f338 <_obstack_memory_used@@Base+0x4d34>  // b.any
  44f270:	add	x2, x2, #0x1
  44f274:	str	x2, [x0, #24]
  44f278:	mov	w1, #0x0                   	// #0
  44f27c:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  44f280:	mov	x20, x0
  44f284:	cbz	x0, 44f330 <_obstack_memory_used@@Base+0x4d2c>
  44f288:	ldr	x0, [x19, #24]
  44f28c:	ldrb	w1, [x0]
  44f290:	cmp	w1, #0x45
  44f294:	b.ne	44f330 <_obstack_memory_used@@Base+0x4d2c>  // b.any
  44f298:	add	x1, x0, #0x1
  44f29c:	str	x1, [x19, #24]
  44f2a0:	ldrb	w1, [x0, #1]
  44f2a4:	cmp	w1, #0x73
  44f2a8:	b.eq	44f694 <_obstack_memory_used@@Base+0x5090>  // b.none
  44f2ac:	cmp	w1, #0x64
  44f2b0:	b.eq	44f53c <_obstack_memory_used@@Base+0x4f38>  // b.none
  44f2b4:	mov	x0, x19
  44f2b8:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44f2bc:	mov	x3, x0
  44f2c0:	cbz	x0, 44f2d4 <_obstack_memory_used@@Base+0x4cd0>
  44f2c4:	ldr	w0, [x0]
  44f2c8:	sub	w0, w0, #0x46
  44f2cc:	tst	w0, #0xfffffffd
  44f2d0:	b.ne	44f6e8 <_obstack_memory_used@@Base+0x50e4>  // b.any
  44f2d4:	ldr	w0, [x20]
  44f2d8:	cmp	w0, #0x3
  44f2dc:	b.eq	44f654 <_obstack_memory_used@@Base+0x5050>  // b.none
  44f2e0:	mov	x2, x20
  44f2e4:	mov	x0, x19
  44f2e8:	mov	w1, #0x2                   	// #2
  44f2ec:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f2f0:	mov	x20, x0
  44f2f4:	b	44f258 <_obstack_memory_used@@Base+0x4c54>
  44f2f8:	mov	w1, #0x0                   	// #0
  44f2fc:	bl	44d2b0 <_obstack_memory_used@@Base+0x2cac>
  44f300:	ldr	x1, [x19, #24]
  44f304:	mov	x20, x0
  44f308:	ldrb	w0, [x1]
  44f30c:	cmp	w0, #0x49
  44f310:	b.ne	44f258 <_obstack_memory_used@@Base+0x4c54>  // b.any
  44f314:	mov	x0, x19
  44f318:	b	44f378 <_obstack_memory_used@@Base+0x4d74>
  44f31c:	mov	x0, x19
  44f320:	bl	44d618 <_obstack_memory_used@@Base+0x3014>
  44f324:	cbnz	w0, 44f578 <_obstack_memory_used@@Base+0x4f74>
  44f328:	ldp	x21, x22, [sp, #32]
  44f32c:	nop
  44f330:	mov	x20, #0x0                   	// #0
  44f334:	b	44f258 <_obstack_memory_used@@Base+0x4c54>
  44f338:	mov	x0, x19
  44f33c:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44f340:	ldr	x1, [x19, #24]
  44f344:	mov	x20, x0
  44f348:	ldrb	w0, [x1]
  44f34c:	cmp	w0, #0x49
  44f350:	b.ne	44f258 <_obstack_memory_used@@Base+0x4c54>  // b.any
  44f354:	cbz	x20, 44f330 <_obstack_memory_used@@Base+0x4d2c>
  44f358:	ldp	w1, w0, [x19, #56]
  44f35c:	cmp	w1, w0
  44f360:	b.ge	44f330 <_obstack_memory_used@@Base+0x4d2c>  // b.tcont
  44f364:	ldr	x3, [x19, #48]
  44f368:	mov	x0, x19
  44f36c:	add	w2, w1, #0x1
  44f370:	str	x20, [x3, w1, sxtw #3]
  44f374:	str	w2, [x19, #56]
  44f378:	bl	44e9a8 <_obstack_memory_used@@Base+0x43a4>
  44f37c:	mov	x3, x0
  44f380:	mov	x2, x20
  44f384:	mov	x0, x19
  44f388:	mov	w1, #0x4                   	// #4
  44f38c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f390:	mov	x20, x0
  44f394:	b	44f258 <_obstack_memory_used@@Base+0x4c54>
  44f398:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44f39c:	mov	x20, x0
  44f3a0:	mov	x0, x20
  44f3a4:	ldp	x19, x20, [sp, #16]
  44f3a8:	ldp	x29, x30, [sp], #112
  44f3ac:	ret
  44f3b0:	stp	x21, x22, [sp, #32]
  44f3b4:	add	x2, x2, #0x1
  44f3b8:	add	x1, sp, #0x68
  44f3bc:	str	x2, [x0, #24]
  44f3c0:	mov	w2, #0x1                   	// #1
  44f3c4:	bl	4505d0 <_obstack_memory_used@@Base+0x5fcc>
  44f3c8:	mov	x22, x0
  44f3cc:	cbz	x0, 44f648 <_obstack_memory_used@@Base+0x5044>
  44f3d0:	mov	x1, #0x0                   	// #0
  44f3d4:	mov	x0, x19
  44f3d8:	stp	x23, x24, [sp, #48]
  44f3dc:	bl	44cc88 <_obstack_memory_used@@Base+0x2684>
  44f3e0:	mov	x23, x0
  44f3e4:	ldr	x1, [x19, #24]
  44f3e8:	ldrb	w20, [x1]
  44f3ec:	cbz	w20, 44f4a4 <_obstack_memory_used@@Base+0x4ea0>
  44f3f0:	mov	x21, #0x0                   	// #0
  44f3f4:	mov	w24, #0x4c                  	// #76
  44f3f8:	stp	x25, x26, [sp, #64]
  44f3fc:	mov	w25, #0x55                  	// #85
  44f400:	cmp	w20, #0x44
  44f404:	b.eq	44f4b8 <_obstack_memory_used@@Base+0x4eb4>  // b.none
  44f408:	sub	w2, w20, #0x30
  44f40c:	sub	w0, w20, #0x61
  44f410:	and	w2, w2, #0xff
  44f414:	and	w0, w0, #0xff
  44f418:	cmp	w2, #0x9
  44f41c:	mov	x26, x21
  44f420:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  44f424:	b.ls	44f438 <_obstack_memory_used@@Base+0x4e34>  // b.plast
  44f428:	cmp	w20, #0x43
  44f42c:	ccmp	w20, w25, #0x4, ne  // ne = any
  44f430:	ccmp	w20, w24, #0x4, ne  // ne = any
  44f434:	b.ne	44f504 <_obstack_memory_used@@Base+0x4f00>  // b.any
  44f438:	mov	x0, x19
  44f43c:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44f440:	mov	x21, x0
  44f444:	cbz	x26, 44f460 <_obstack_memory_used@@Base+0x4e5c>
  44f448:	mov	w1, #0x1                   	// #1
  44f44c:	mov	x3, x21
  44f450:	mov	x2, x26
  44f454:	mov	x0, x19
  44f458:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f45c:	mov	x21, x0
  44f460:	cmp	w20, #0x53
  44f464:	ldr	x1, [x19, #24]
  44f468:	b.eq	44f498 <_obstack_memory_used@@Base+0x4e94>  // b.none
  44f46c:	ldrb	w20, [x1]
  44f470:	cmp	w20, #0x45
  44f474:	b.eq	44f4ec <_obstack_memory_used@@Base+0x4ee8>  // b.none
  44f478:	cbz	x21, 44f4a0 <_obstack_memory_used@@Base+0x4e9c>
  44f47c:	ldp	w0, w2, [x19, #56]
  44f480:	cmp	w0, w2
  44f484:	b.ge	44f4a0 <_obstack_memory_used@@Base+0x4e9c>  // b.tcont
  44f488:	ldr	x3, [x19, #48]
  44f48c:	add	w2, w0, #0x1
  44f490:	str	x21, [x3, w0, sxtw #3]
  44f494:	str	w2, [x19, #56]
  44f498:	ldrb	w20, [x1]
  44f49c:	cbnz	w20, 44f400 <_obstack_memory_used@@Base+0x4dfc>
  44f4a0:	ldp	x25, x26, [sp, #64]
  44f4a4:	mov	x20, #0x0                   	// #0
  44f4a8:	ldp	x23, x24, [sp, #48]
  44f4ac:	str	xzr, [x22]
  44f4b0:	ldp	x21, x22, [sp, #32]
  44f4b4:	b	44f258 <_obstack_memory_used@@Base+0x4c54>
  44f4b8:	ldrb	w0, [x1, #1]
  44f4bc:	and	w0, w0, #0xffffffdf
  44f4c0:	and	w0, w0, #0xff
  44f4c4:	cmp	w0, #0x54
  44f4c8:	mov	x0, x19
  44f4cc:	b.ne	44f4f4 <_obstack_memory_used@@Base+0x4ef0>  // b.any
  44f4d0:	mov	x26, x21
  44f4d4:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f4d8:	mov	x21, x0
  44f4dc:	mov	w1, #0x1                   	// #1
  44f4e0:	cbnz	x26, 44f44c <_obstack_memory_used@@Base+0x4e48>
  44f4e4:	ldr	x1, [x19, #24]
  44f4e8:	b	44f46c <_obstack_memory_used@@Base+0x4e68>
  44f4ec:	mov	x26, x21
  44f4f0:	b	44f428 <_obstack_memory_used@@Base+0x4e24>
  44f4f4:	mov	x26, x21
  44f4f8:	bl	4509d0 <_obstack_memory_used@@Base+0x63cc>
  44f4fc:	mov	x21, x0
  44f500:	b	44f4dc <_obstack_memory_used@@Base+0x4ed8>
  44f504:	cmp	w20, #0x53
  44f508:	b.eq	44f5b8 <_obstack_memory_used@@Base+0x4fb4>  // b.none
  44f50c:	cmp	w20, #0x49
  44f510:	b.eq	44f674 <_obstack_memory_used@@Base+0x5070>  // b.none
  44f514:	cmp	w20, #0x54
  44f518:	b.eq	44f710 <_obstack_memory_used@@Base+0x510c>  // b.none
  44f51c:	cmp	w20, #0x45
  44f520:	b.eq	44f5d4 <_obstack_memory_used@@Base+0x4fd0>  // b.none
  44f524:	cmp	w20, #0x4d
  44f528:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  44f52c:	b.eq	44f4a0 <_obstack_memory_used@@Base+0x4e9c>  // b.none
  44f530:	add	x1, x1, #0x1
  44f534:	str	x1, [x19, #24]
  44f538:	b	44f498 <_obstack_memory_used@@Base+0x4e94>
  44f53c:	stp	x21, x22, [sp, #32]
  44f540:	add	x0, x0, #0x2
  44f544:	str	x0, [x19, #24]
  44f548:	mov	x0, x19
  44f54c:	bl	44cfb8 <_obstack_memory_used@@Base+0x29b4>
  44f550:	mov	w21, w0
  44f554:	tbnz	w0, #31, 44f328 <_obstack_memory_used@@Base+0x4d24>
  44f558:	mov	x0, x19
  44f55c:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44f560:	mov	x11, x0
  44f564:	cbz	x0, 44f578 <_obstack_memory_used@@Base+0x4f74>
  44f568:	ldr	w0, [x0]
  44f56c:	sub	w0, w0, #0x46
  44f570:	tst	w0, #0xfffffffd
  44f574:	b.ne	44f31c <_obstack_memory_used@@Base+0x4d18>  // b.any
  44f578:	ldp	w1, w0, [x19, #40]
  44f57c:	cmp	w1, w0
  44f580:	b.ge	44f704 <_obstack_memory_used@@Base+0x5100>  // b.tcont
  44f584:	mov	w2, #0x18                  	// #24
  44f588:	add	w4, w1, #0x1
  44f58c:	ldr	x0, [x19, #32]
  44f590:	smull	x1, w1, w2
  44f594:	mov	w2, #0x47                  	// #71
  44f598:	add	x3, x0, x1
  44f59c:	str	wzr, [x3, #4]
  44f5a0:	str	w4, [x19, #40]
  44f5a4:	str	w2, [x0, x1]
  44f5a8:	str	x11, [x3, #8]
  44f5ac:	str	w21, [x3, #16]
  44f5b0:	ldp	x21, x22, [sp, #32]
  44f5b4:	b	44f2d4 <_obstack_memory_used@@Base+0x4cd0>
  44f5b8:	mov	x0, x19
  44f5bc:	mov	w1, #0x1                   	// #1
  44f5c0:	bl	44d2b0 <_obstack_memory_used@@Base+0x2cac>
  44f5c4:	mov	x21, x0
  44f5c8:	cbnz	x26, 44f448 <_obstack_memory_used@@Base+0x4e44>
  44f5cc:	ldr	x1, [x19, #24]
  44f5d0:	b	44f498 <_obstack_memory_used@@Base+0x4e94>
  44f5d4:	str	x21, [x22]
  44f5d8:	cbz	x21, 44f640 <_obstack_memory_used@@Base+0x503c>
  44f5dc:	cbz	x23, 44f5ec <_obstack_memory_used@@Base+0x4fe8>
  44f5e0:	ldr	x0, [sp, #104]
  44f5e4:	str	x0, [x23, #8]
  44f5e8:	str	x23, [sp, #104]
  44f5ec:	ldr	x0, [x19, #24]
  44f5f0:	ldrb	w1, [x0]
  44f5f4:	cmp	w1, #0x45
  44f5f8:	b.ne	44f640 <_obstack_memory_used@@Base+0x503c>  // b.any
  44f5fc:	add	x0, x0, #0x1
  44f600:	ldp	x21, x22, [sp, #32]
  44f604:	ldp	x23, x24, [sp, #48]
  44f608:	ldp	x25, x26, [sp, #64]
  44f60c:	str	x0, [x19, #24]
  44f610:	ldr	x20, [sp, #104]
  44f614:	b	44f258 <_obstack_memory_used@@Base+0x4c54>
  44f618:	cbz	x20, 44f330 <_obstack_memory_used@@Base+0x4d2c>
  44f61c:	ldp	w0, w1, [x19, #56]
  44f620:	cmp	w0, w1
  44f624:	b.ge	44f330 <_obstack_memory_used@@Base+0x4d2c>  // b.tcont
  44f628:	ldr	x2, [x19, #48]
  44f62c:	add	w1, w0, #0x1
  44f630:	str	x20, [x2, w0, sxtw #3]
  44f634:	mov	x0, x19
  44f638:	str	w1, [x19, #56]
  44f63c:	b	44f378 <_obstack_memory_used@@Base+0x4d74>
  44f640:	ldp	x23, x24, [sp, #48]
  44f644:	ldp	x25, x26, [sp, #64]
  44f648:	mov	x20, #0x0                   	// #0
  44f64c:	ldp	x21, x22, [sp, #32]
  44f650:	b	44f258 <_obstack_memory_used@@Base+0x4c54>
  44f654:	ldr	x0, [x20, #16]
  44f658:	ldr	w1, [x0]
  44f65c:	cmp	w1, #0x29
  44f660:	b.ne	44f2e0 <_obstack_memory_used@@Base+0x4cdc>  // b.any
  44f664:	str	xzr, [x0, #8]
  44f668:	b	44f2e0 <_obstack_memory_used@@Base+0x4cdc>
  44f66c:	mov	x20, #0x0                   	// #0
  44f670:	b	44f21c <_obstack_memory_used@@Base+0x4c18>
  44f674:	cbz	x21, 44f4a0 <_obstack_memory_used@@Base+0x4e9c>
  44f678:	add	x1, x1, #0x1
  44f67c:	str	x1, [x19, #24]
  44f680:	mov	x0, x19
  44f684:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44f688:	mov	x21, x0
  44f68c:	mov	w1, #0x4                   	// #4
  44f690:	b	44f44c <_obstack_memory_used@@Base+0x4e48>
  44f694:	add	x0, x0, #0x2
  44f698:	str	x0, [x19, #24]
  44f69c:	mov	x0, x19
  44f6a0:	bl	44d618 <_obstack_memory_used@@Base+0x3014>
  44f6a4:	cbz	w0, 44f330 <_obstack_memory_used@@Base+0x4d2c>
  44f6a8:	ldp	w0, w1, [x19, #40]
  44f6ac:	cmp	w0, w1
  44f6b0:	b.ge	44f708 <_obstack_memory_used@@Base+0x5104>  // b.tcont
  44f6b4:	mov	w3, #0x18                  	// #24
  44f6b8:	add	w1, w0, #0x1
  44f6bc:	ldr	x2, [x19, #32]
  44f6c0:	smull	x0, w0, w3
  44f6c4:	str	w1, [x19, #40]
  44f6c8:	mov	w4, #0xe                   	// #14
  44f6cc:	add	x3, x2, x0
  44f6d0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44f6d4:	add	x1, x1, #0x320
  44f6d8:	str	xzr, [x2, x0]
  44f6dc:	str	x1, [x3, #8]
  44f6e0:	str	w4, [x3, #16]
  44f6e4:	b	44f2d4 <_obstack_memory_used@@Base+0x4cd0>
  44f6e8:	mov	x0, x19
  44f6ec:	str	x3, [sp, #88]
  44f6f0:	bl	44d618 <_obstack_memory_used@@Base+0x3014>
  44f6f4:	ldr	x3, [sp, #88]
  44f6f8:	cbnz	w0, 44f2d4 <_obstack_memory_used@@Base+0x4cd0>
  44f6fc:	mov	x20, #0x0                   	// #0
  44f700:	b	44f258 <_obstack_memory_used@@Base+0x4c54>
  44f704:	ldp	x21, x22, [sp, #32]
  44f708:	mov	x3, #0x0                   	// #0
  44f70c:	b	44f2d4 <_obstack_memory_used@@Base+0x4cd0>
  44f710:	mov	x0, x19
  44f714:	bl	44d030 <_obstack_memory_used@@Base+0x2a2c>
  44f718:	mov	x21, x0
  44f71c:	b	44f4dc <_obstack_memory_used@@Base+0x4ed8>
  44f720:	stp	x29, x30, [sp, #-80]!
  44f724:	mov	x29, sp
  44f728:	ldr	x4, [x0, #24]
  44f72c:	stp	x19, x20, [sp, #16]
  44f730:	mov	x19, x0
  44f734:	mov	x0, x4
  44f738:	bl	44d5c0 <_obstack_memory_used@@Base+0x2fbc>
  44f73c:	cbnz	w0, 44f77c <_obstack_memory_used@@Base+0x5178>
  44f740:	ldrb	w1, [x4]
  44f744:	sub	w0, w1, #0x30
  44f748:	cmp	w0, #0x4a
  44f74c:	b.ls	44f764 <_obstack_memory_used@@Base+0x5160>  // b.plast
  44f750:	mov	x20, #0x0                   	// #0
  44f754:	mov	x0, x20
  44f758:	ldp	x19, x20, [sp, #16]
  44f75c:	ldp	x29, x30, [sp], #80
  44f760:	ret
  44f764:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x209fc>
  44f768:	add	x2, x2, #0x444
  44f76c:	ldrh	w0, [x2, w0, uxtw #1]
  44f770:	adr	x2, 44f77c <_obstack_memory_used@@Base+0x5178>
  44f774:	add	x0, x2, w0, sxth #2
  44f778:	br	x0
  44f77c:	add	x1, sp, #0x48
  44f780:	mov	x0, x19
  44f784:	mov	w2, #0x0                   	// #0
  44f788:	stp	x21, x22, [sp, #32]
  44f78c:	bl	4505d0 <_obstack_memory_used@@Base+0x5fcc>
  44f790:	mov	x21, x0
  44f794:	cbz	x0, 44f828 <_obstack_memory_used@@Base+0x5224>
  44f798:	ldr	x0, [x19, #24]
  44f79c:	ldrb	w0, [x0]
  44f7a0:	cmp	w0, #0x46
  44f7a4:	mov	x0, x19
  44f7a8:	b.eq	44f81c <_obstack_memory_used@@Base+0x5218>  // b.none
  44f7ac:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f7b0:	str	x0, [x21]
  44f7b4:	cbz	x0, 44f828 <_obstack_memory_used@@Base+0x5224>
  44f7b8:	ldr	w1, [x0]
  44f7bc:	ldr	x20, [sp, #72]
  44f7c0:	sub	w1, w1, #0x1f
  44f7c4:	cmp	w1, #0x1
  44f7c8:	b.ls	44f800 <_obstack_memory_used@@Base+0x51fc>  // b.plast
  44f7cc:	cbz	x20, 44f828 <_obstack_memory_used@@Base+0x5224>
  44f7d0:	ldp	w0, w1, [x19, #56]
  44f7d4:	cmp	w0, w1
  44f7d8:	b.ge	44f828 <_obstack_memory_used@@Base+0x5224>  // b.tcont
  44f7dc:	ldr	x2, [x19, #48]
  44f7e0:	add	w1, w0, #0x1
  44f7e4:	ldp	x21, x22, [sp, #32]
  44f7e8:	str	x20, [x2, w0, sxtw #3]
  44f7ec:	mov	x0, x20
  44f7f0:	str	w1, [x19, #56]
  44f7f4:	ldp	x19, x20, [sp, #16]
  44f7f8:	ldp	x29, x30, [sp], #80
  44f7fc:	ret
  44f800:	ldr	x1, [x0, #8]
  44f804:	str	x20, [x0, #8]
  44f808:	ldr	x0, [x21]
  44f80c:	str	x0, [sp, #72]
  44f810:	str	x1, [x21]
  44f814:	ldr	x20, [sp, #72]
  44f818:	b	44f7cc <_obstack_memory_used@@Base+0x51c8>
  44f81c:	bl	4508f0 <_obstack_memory_used@@Base+0x62ec>
  44f820:	str	x0, [x21]
  44f824:	b	44f7b4 <_obstack_memory_used@@Base+0x51b0>
  44f828:	ldp	x21, x22, [sp, #32]
  44f82c:	b	44f750 <_obstack_memory_used@@Base+0x514c>
  44f830:	ldp	w2, w3, [x19, #40]
  44f834:	sub	w1, w1, #0x61
  44f838:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x409fc>
  44f83c:	add	x0, x0, #0xdf0
  44f840:	sbfiz	x1, x1, #5, #32
  44f844:	add	x0, x0, #0x188
  44f848:	add	x1, x0, x1
  44f84c:	cmp	w2, w3
  44f850:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44f854:	mov	w0, #0x18                  	// #24
  44f858:	add	w6, w2, #0x1
  44f85c:	ldr	x3, [x19, #32]
  44f860:	smull	x2, w2, w0
  44f864:	ldr	w7, [x1, #8]
  44f868:	mov	w5, #0x27                  	// #39
  44f86c:	add	x20, x3, x2
  44f870:	ldr	w0, [x19, #72]
  44f874:	add	x4, x4, #0x1
  44f878:	add	w0, w0, w7
  44f87c:	str	wzr, [x20, #4]
  44f880:	str	w6, [x19, #40]
  44f884:	str	w5, [x3, x2]
  44f888:	str	x1, [x20, #8]
  44f88c:	str	x4, [x19, #24]
  44f890:	str	w0, [x19, #72]
  44f894:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  44f898:	mov	x0, x19
  44f89c:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44f8a0:	mov	x20, x0
  44f8a4:	str	x0, [sp, #72]
  44f8a8:	cbz	x20, 44f750 <_obstack_memory_used@@Base+0x514c>
  44f8ac:	ldp	w0, w1, [x19, #56]
  44f8b0:	cmp	w0, w1
  44f8b4:	b.ge	44f750 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  44f8b8:	ldr	x2, [x19, #48]
  44f8bc:	add	w1, w0, #0x1
  44f8c0:	str	x20, [x2, w0, sxtw #3]
  44f8c4:	str	w1, [x19, #56]
  44f8c8:	ldr	x20, [sp, #72]
  44f8cc:	mov	x0, x20
  44f8d0:	ldp	x19, x20, [sp, #16]
  44f8d4:	ldp	x29, x30, [sp], #80
  44f8d8:	ret
  44f8dc:	mov	x0, x19
  44f8e0:	bl	4508f0 <_obstack_memory_used@@Base+0x62ec>
  44f8e4:	mov	x20, x0
  44f8e8:	str	x0, [sp, #72]
  44f8ec:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44f8f0:	add	x4, x4, #0x1
  44f8f4:	str	x4, [x19, #24]
  44f8f8:	mov	x0, x19
  44f8fc:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f900:	mov	x2, x0
  44f904:	mov	x3, #0x0                   	// #0
  44f908:	mov	x0, x19
  44f90c:	mov	w1, #0x26                  	// #38
  44f910:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f914:	mov	x20, x0
  44f918:	str	x0, [sp, #72]
  44f91c:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44f920:	add	x4, x4, #0x1
  44f924:	str	x4, [x19, #24]
  44f928:	mov	x0, x19
  44f92c:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f930:	mov	x2, x0
  44f934:	mov	x3, #0x0                   	// #0
  44f938:	mov	x0, x19
  44f93c:	mov	w1, #0x24                  	// #36
  44f940:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f944:	mov	x20, x0
  44f948:	str	x0, [sp, #72]
  44f94c:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44f950:	add	x4, x4, #0x1
  44f954:	str	x4, [x19, #24]
  44f958:	mov	x0, x19
  44f95c:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44f960:	mov	x2, x0
  44f964:	mov	x3, #0x0                   	// #0
  44f968:	mov	x0, x19
  44f96c:	mov	w1, #0x25                  	// #37
  44f970:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44f974:	mov	x20, x0
  44f978:	str	x0, [sp, #72]
  44f97c:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44f980:	add	x0, x4, #0x1
  44f984:	str	x0, [x19, #24]
  44f988:	ldrb	w0, [x4, #1]
  44f98c:	cbz	w0, 44f750 <_obstack_memory_used@@Base+0x514c>
  44f990:	add	x0, x4, #0x2
  44f994:	str	x0, [x19, #24]
  44f998:	ldrb	w0, [x4, #1]
  44f99c:	cmp	w0, #0x68
  44f9a0:	b.eq	450118 <_obstack_memory_used@@Base+0x5b14>  // b.none
  44f9a4:	b.hi	44fcfc <_obstack_memory_used@@Base+0x56f8>  // b.pmore
  44f9a8:	cmp	w0, #0x63
  44f9ac:	b.eq	4500d8 <_obstack_memory_used@@Base+0x5ad4>  // b.none
  44f9b0:	b.ls	44fcac <_obstack_memory_used@@Base+0x56a8>  // b.plast
  44f9b4:	cmp	w0, #0x65
  44f9b8:	b.eq	4501b8 <_obstack_memory_used@@Base+0x5bb4>  // b.none
  44f9bc:	cmp	w0, #0x66
  44f9c0:	b.ne	44ff18 <_obstack_memory_used@@Base+0x5914>  // b.any
  44f9c4:	ldp	w0, w1, [x19, #40]
  44f9c8:	cmp	w0, w1
  44f9cc:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44f9d0:	mov	w1, #0x18                  	// #24
  44f9d4:	add	w5, w0, #0x1
  44f9d8:	ldr	x3, [x19, #32]
  44f9dc:	smull	x0, w0, w1
  44f9e0:	ldr	w2, [x19, #72]
  44f9e4:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  44f9e8:	add	x1, x1, #0xdf0
  44f9ec:	add	x20, x3, x0
  44f9f0:	add	x1, x1, #0x4c8
  44f9f4:	mov	w4, #0x27                  	// #39
  44f9f8:	str	wzr, [x20, #4]
  44f9fc:	add	w2, w2, #0x9
  44fa00:	str	w5, [x19, #40]
  44fa04:	str	w4, [x3, x0]
  44fa08:	str	x1, [x20, #8]
  44fa0c:	str	w2, [x19, #72]
  44fa10:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  44fa14:	add	x4, x4, #0x1
  44fa18:	str	x4, [x19, #24]
  44fa1c:	mov	x0, x19
  44fa20:	bl	44d0b0 <_obstack_memory_used@@Base+0x2aac>
  44fa24:	str	x0, [sp, #72]
  44fa28:	ldr	x1, [x19, #24]
  44fa2c:	mov	x20, x0
  44fa30:	ldrb	w0, [x1]
  44fa34:	cmp	w0, #0x49
  44fa38:	b.eq	44fff8 <_obstack_memory_used@@Base+0x59f4>  // b.none
  44fa3c:	mov	x0, x19
  44fa40:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fa44:	ldr	x3, [sp, #72]
  44fa48:	mov	x2, x0
  44fa4c:	mov	w1, #0x21                  	// #33
  44fa50:	mov	x0, x19
  44fa54:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fa58:	mov	x20, x0
  44fa5c:	str	x0, [sp, #72]
  44fa60:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fa64:	add	x4, x4, #0x1
  44fa68:	str	x4, [x19, #24]
  44fa6c:	mov	x0, x19
  44fa70:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fa74:	mov	x2, x0
  44fa78:	mov	x3, #0x0                   	// #0
  44fa7c:	mov	x0, x19
  44fa80:	mov	w1, #0x22                  	// #34
  44fa84:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fa88:	mov	x20, x0
  44fa8c:	str	x0, [sp, #72]
  44fa90:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fa94:	ldrb	w0, [x4, #1]
  44fa98:	sub	w1, w0, #0x30
  44fa9c:	cmp	w0, #0x5f
  44faa0:	and	w1, w1, #0xff
  44faa4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  44faa8:	b.ls	44fabc <_obstack_memory_used@@Base+0x54b8>  // b.plast
  44faac:	sub	w0, w0, #0x41
  44fab0:	and	w0, w0, #0xff
  44fab4:	cmp	w0, #0x19
  44fab8:	b.hi	44ffd4 <_obstack_memory_used@@Base+0x59d0>  // b.pmore
  44fabc:	mov	w1, #0x0                   	// #0
  44fac0:	mov	x0, x19
  44fac4:	bl	44d2b0 <_obstack_memory_used@@Base+0x2cac>
  44fac8:	str	x0, [sp, #72]
  44facc:	ldr	x1, [x19, #24]
  44fad0:	mov	x20, x0
  44fad4:	ldrb	w0, [x1]
  44fad8:	cmp	w0, #0x49
  44fadc:	b.ne	44f754 <_obstack_memory_used@@Base+0x5150>  // b.any
  44fae0:	add	x1, x1, #0x1
  44fae4:	str	x1, [x19, #24]
  44fae8:	mov	x0, x19
  44faec:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44faf0:	mov	x3, x0
  44faf4:	mov	x2, x20
  44faf8:	mov	x0, x19
  44fafc:	mov	w1, #0x4                   	// #4
  44fb00:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fb04:	mov	x20, x0
  44fb08:	str	x0, [sp, #72]
  44fb0c:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fb10:	mov	x0, x19
  44fb14:	stp	x21, x22, [sp, #32]
  44fb18:	bl	44d030 <_obstack_memory_used@@Base+0x2a2c>
  44fb1c:	ldr	x21, [x19, #24]
  44fb20:	str	x0, [sp, #72]
  44fb24:	mov	x20, x0
  44fb28:	ldrb	w0, [x21]
  44fb2c:	cmp	w0, #0x49
  44fb30:	b.eq	44ff58 <_obstack_memory_used@@Base+0x5954>  // b.none
  44fb34:	ldp	x21, x22, [sp, #32]
  44fb38:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fb3c:	add	x4, x4, #0x1
  44fb40:	str	x4, [x19, #24]
  44fb44:	mov	x0, x19
  44fb48:	bl	44d0b0 <_obstack_memory_used@@Base+0x2aac>
  44fb4c:	mov	x2, x0
  44fb50:	mov	x3, #0x0                   	// #0
  44fb54:	mov	x0, x19
  44fb58:	mov	w1, #0x28                  	// #40
  44fb5c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fb60:	mov	x20, x0
  44fb64:	str	x0, [sp, #72]
  44fb68:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fb6c:	add	x4, x4, #0x1
  44fb70:	str	x4, [x19, #24]
  44fb74:	mov	x0, x19
  44fb78:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fb7c:	mov	x2, x0
  44fb80:	mov	x3, #0x0                   	// #0
  44fb84:	mov	x0, x19
  44fb88:	mov	w1, #0x23                  	// #35
  44fb8c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fb90:	mov	x20, x0
  44fb94:	str	x0, [sp, #72]
  44fb98:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fb9c:	add	x3, x4, #0x1
  44fba0:	str	x3, [x19, #24]
  44fba4:	ldrb	w0, [x4, #1]
  44fba8:	cmp	w0, #0x5f
  44fbac:	b.eq	44ffcc <_obstack_memory_used@@Base+0x59c8>  // b.none
  44fbb0:	sub	w0, w0, #0x30
  44fbb4:	and	w0, w0, #0xff
  44fbb8:	cmp	w0, #0x9
  44fbbc:	b.hi	450024 <_obstack_memory_used@@Base+0x5a20>  // b.pmore
  44fbc0:	mov	x1, x3
  44fbc4:	nop
  44fbc8:	mov	x4, x1
  44fbcc:	add	x1, x1, #0x1
  44fbd0:	str	x1, [x19, #24]
  44fbd4:	ldrb	w0, [x1]
  44fbd8:	sub	w0, w0, #0x30
  44fbdc:	and	w0, w0, #0xff
  44fbe0:	cmp	w0, #0x9
  44fbe4:	b.ls	44fbc8 <_obstack_memory_used@@Base+0x55c4>  // b.plast
  44fbe8:	ldp	w0, w5, [x19, #40]
  44fbec:	sub	x2, x1, x3
  44fbf0:	cmp	w0, w5
  44fbf4:	b.ge	44f750 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  44fbf8:	mov	w7, #0x18                  	// #24
  44fbfc:	add	w6, w0, #0x1
  44fc00:	ldr	x5, [x19, #32]
  44fc04:	smull	x0, w0, w7
  44fc08:	cmp	w2, #0x0
  44fc0c:	add	x20, x5, x0
  44fc10:	str	wzr, [x20, #4]
  44fc14:	str	w6, [x19, #40]
  44fc18:	b.le	44f750 <_obstack_memory_used@@Base+0x514c>
  44fc1c:	str	xzr, [x5, x0]
  44fc20:	str	x3, [x20, #8]
  44fc24:	str	w2, [x20, #16]
  44fc28:	ldrb	w0, [x4, #1]
  44fc2c:	mov	x3, x1
  44fc30:	cmp	w0, #0x5f
  44fc34:	b.ne	44f750 <_obstack_memory_used@@Base+0x514c>  // b.any
  44fc38:	add	x3, x3, #0x1
  44fc3c:	str	x3, [x19, #24]
  44fc40:	mov	x0, x19
  44fc44:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fc48:	mov	x3, x0
  44fc4c:	mov	x2, x20
  44fc50:	mov	x0, x19
  44fc54:	mov	w1, #0x2a                  	// #42
  44fc58:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fc5c:	mov	x20, x0
  44fc60:	str	x0, [sp, #72]
  44fc64:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fc68:	add	x4, x4, #0x1
  44fc6c:	str	x4, [x19, #24]
  44fc70:	mov	x0, x19
  44fc74:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fc78:	mov	x20, x0
  44fc7c:	cbz	x0, 44f750 <_obstack_memory_used@@Base+0x514c>
  44fc80:	mov	x0, x19
  44fc84:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fc88:	mov	x3, x0
  44fc8c:	cbz	x0, 44f750 <_obstack_memory_used@@Base+0x514c>
  44fc90:	mov	x2, x20
  44fc94:	mov	x0, x19
  44fc98:	mov	w1, #0x2b                  	// #43
  44fc9c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fca0:	mov	x20, x0
  44fca4:	str	x0, [sp, #72]
  44fca8:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fcac:	cmp	w0, #0x54
  44fcb0:	b.eq	44fd7c <_obstack_memory_used@@Base+0x5778>  // b.none
  44fcb4:	cmp	w0, #0x61
  44fcb8:	b.ne	44fe10 <_obstack_memory_used@@Base+0x580c>  // b.any
  44fcbc:	ldp	w0, w1, [x19, #40]
  44fcc0:	cmp	w0, w1
  44fcc4:	b.ge	44f750 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  44fcc8:	mov	w3, #0x18                  	// #24
  44fccc:	add	w1, w0, #0x1
  44fcd0:	ldr	x2, [x19, #32]
  44fcd4:	smull	x0, w0, w3
  44fcd8:	str	w1, [x19, #40]
  44fcdc:	mov	w3, #0x4                   	// #4
  44fce0:	add	x20, x2, x0
  44fce4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  44fce8:	add	x1, x1, #0x2f0
  44fcec:	str	xzr, [x2, x0]
  44fcf0:	str	x1, [x20, #8]
  44fcf4:	str	w3, [x20, #16]
  44fcf8:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  44fcfc:	cmp	w0, #0x73
  44fd00:	b.eq	4500a0 <_obstack_memory_used@@Base+0x5a9c>  // b.none
  44fd04:	b.ls	44fdd8 <_obstack_memory_used@@Base+0x57d4>  // b.plast
  44fd08:	cmp	w0, #0x75
  44fd0c:	b.eq	450208 <_obstack_memory_used@@Base+0x5c04>  // b.none
  44fd10:	cmp	w0, #0x76
  44fd14:	b.ne	44fd74 <_obstack_memory_used@@Base+0x5770>  // b.any
  44fd18:	ldrb	w0, [x4, #2]
  44fd1c:	cmp	w0, #0x5f
  44fd20:	b.eq	4502a0 <_obstack_memory_used@@Base+0x5c9c>  // b.none
  44fd24:	mov	x0, x19
  44fd28:	bl	44cf50 <_obstack_memory_used@@Base+0x294c>
  44fd2c:	mov	x20, x0
  44fd30:	cbz	x20, 44f750 <_obstack_memory_used@@Base+0x514c>
  44fd34:	ldr	x0, [x19, #24]
  44fd38:	ldrb	w1, [x0]
  44fd3c:	cmp	w1, #0x5f
  44fd40:	b.ne	44f750 <_obstack_memory_used@@Base+0x514c>  // b.any
  44fd44:	add	x0, x0, #0x1
  44fd48:	str	x0, [x19, #24]
  44fd4c:	mov	x0, x19
  44fd50:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fd54:	mov	x3, x0
  44fd58:	mov	x2, x20
  44fd5c:	mov	x0, x19
  44fd60:	mov	w1, #0x2d                  	// #45
  44fd64:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fd68:	mov	x20, x0
  44fd6c:	str	x0, [sp, #72]
  44fd70:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fd74:	cmp	w0, #0x74
  44fd78:	b.ne	44f750 <_obstack_memory_used@@Base+0x514c>  // b.any
  44fd7c:	ldr	w20, [x19, #76]
  44fd80:	mov	w0, #0x1                   	// #1
  44fd84:	str	w0, [x19, #76]
  44fd88:	mov	x0, x19
  44fd8c:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  44fd90:	str	w20, [x19, #76]
  44fd94:	mov	x2, x0
  44fd98:	mov	x3, #0x0                   	// #0
  44fd9c:	mov	x0, x19
  44fda0:	mov	w1, #0x43                  	// #67
  44fda4:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fda8:	str	x0, [sp, #72]
  44fdac:	mov	x20, x0
  44fdb0:	cbz	x0, 44f750 <_obstack_memory_used@@Base+0x514c>
  44fdb4:	ldr	x0, [x19, #24]
  44fdb8:	ldrb	w1, [x0]
  44fdbc:	cbz	w1, 44f750 <_obstack_memory_used@@Base+0x514c>
  44fdc0:	add	x1, x0, #0x1
  44fdc4:	str	x1, [x19, #24]
  44fdc8:	ldrb	w0, [x0]
  44fdcc:	cmp	w0, #0x45
  44fdd0:	b.ne	44f750 <_obstack_memory_used@@Base+0x514c>  // b.any
  44fdd4:	b	44f8ac <_obstack_memory_used@@Base+0x52a8>
  44fdd8:	cmp	w0, #0x6e
  44fddc:	b.eq	450168 <_obstack_memory_used@@Base+0x5b64>  // b.none
  44fde0:	cmp	w0, #0x70
  44fde4:	b.ne	44fec0 <_obstack_memory_used@@Base+0x58bc>  // b.any
  44fde8:	mov	x0, x19
  44fdec:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fdf0:	mov	x3, #0x0                   	// #0
  44fdf4:	mov	x2, x0
  44fdf8:	mov	w1, #0x4b                  	// #75
  44fdfc:	mov	x0, x19
  44fe00:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44fe04:	mov	x20, x0
  44fe08:	str	x0, [sp, #72]
  44fe0c:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44fe10:	cmp	w0, #0x46
  44fe14:	b.ne	44f750 <_obstack_memory_used@@Base+0x514c>  // b.any
  44fe18:	ldp	w0, w1, [x19, #40]
  44fe1c:	cmp	w0, w1
  44fe20:	b.ge	4502dc <_obstack_memory_used@@Base+0x5cd8>  // b.tcont
  44fe24:	mov	w2, #0x18                  	// #24
  44fe28:	add	w3, w0, #0x1
  44fe2c:	ldr	x1, [x19, #32]
  44fe30:	smull	x0, w0, w2
  44fe34:	mov	w2, #0x2c                  	// #44
  44fe38:	add	x20, x1, x0
  44fe3c:	str	wzr, [x20, #4]
  44fe40:	str	w3, [x19, #40]
  44fe44:	str	x20, [sp, #72]
  44fe48:	str	w2, [x1, x0]
  44fe4c:	ldrb	w0, [x4, #2]
  44fe50:	sub	w0, w0, #0x30
  44fe54:	and	w0, w0, #0xff
  44fe58:	cmp	w0, #0x9
  44fe5c:	cset	w1, ls  // ls = plast
  44fe60:	strh	w1, [x20, #16]
  44fe64:	b.hi	44fe74 <_obstack_memory_used@@Base+0x5870>  // b.pmore
  44fe68:	add	x0, x19, #0x18
  44fe6c:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44fe70:	ldr	x20, [sp, #72]
  44fe74:	mov	x0, x19
  44fe78:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  44fe7c:	str	x0, [x20, #8]
  44fe80:	ldr	x1, [sp, #72]
  44fe84:	ldr	x0, [x1, #8]
  44fe88:	cbz	x0, 44f750 <_obstack_memory_used@@Base+0x514c>
  44fe8c:	add	x0, x19, #0x18
  44fe90:	bl	44ce80 <_obstack_memory_used@@Base+0x287c>
  44fe94:	ldr	x1, [x19, #24]
  44fe98:	ldrb	w0, [x1]
  44fe9c:	cbz	w0, 44feac <_obstack_memory_used@@Base+0x58a8>
  44fea0:	add	x0, x1, #0x1
  44fea4:	str	x0, [x19, #24]
  44fea8:	ldrb	w0, [x1]
  44feac:	ldr	x20, [sp, #72]
  44feb0:	cmp	w0, #0x73
  44feb4:	cset	w0, eq  // eq = none
  44feb8:	strh	w0, [x20, #18]
  44febc:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  44fec0:	cmp	w0, #0x69
  44fec4:	b.ne	44f750 <_obstack_memory_used@@Base+0x514c>  // b.any
  44fec8:	ldp	w0, w1, [x19, #40]
  44fecc:	cmp	w0, w1
  44fed0:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44fed4:	mov	w1, #0x18                  	// #24
  44fed8:	add	w5, w0, #0x1
  44fedc:	ldr	x3, [x19, #32]
  44fee0:	smull	x0, w0, w1
  44fee4:	ldr	w2, [x19, #72]
  44fee8:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  44feec:	add	x1, x1, #0xdf0
  44fef0:	add	x20, x3, x0
  44fef4:	add	x1, x1, #0x588
  44fef8:	mov	w4, #0x27                  	// #39
  44fefc:	str	wzr, [x20, #4]
  44ff00:	add	w2, w2, #0x8
  44ff04:	str	w5, [x19, #40]
  44ff08:	str	w4, [x3, x0]
  44ff0c:	str	x1, [x20, #8]
  44ff10:	str	w2, [x19, #72]
  44ff14:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  44ff18:	cmp	w0, #0x64
  44ff1c:	b.ne	44f750 <_obstack_memory_used@@Base+0x514c>  // b.any
  44ff20:	ldp	w0, w1, [x19, #40]
  44ff24:	cmp	w0, w1
  44ff28:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44ff2c:	mov	w1, #0x18                  	// #24
  44ff30:	add	w5, w0, #0x1
  44ff34:	ldr	x3, [x19, #32]
  44ff38:	smull	x0, w0, w1
  44ff3c:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  44ff40:	add	x1, x1, #0xdf0
  44ff44:	ldr	w2, [x19, #72]
  44ff48:	add	x1, x1, #0x4e8
  44ff4c:	add	x20, x3, x0
  44ff50:	mov	w4, #0x27                  	// #39
  44ff54:	b	44f9f8 <_obstack_memory_used@@Base+0x53f4>
  44ff58:	ldr	w0, [x19, #80]
  44ff5c:	cbnz	w0, 450050 <_obstack_memory_used@@Base+0x5a4c>
  44ff60:	cbz	x20, 44f828 <_obstack_memory_used@@Base+0x5224>
  44ff64:	ldp	w0, w1, [x19, #56]
  44ff68:	cmp	w0, w1
  44ff6c:	b.ge	44f828 <_obstack_memory_used@@Base+0x5224>  // b.tcont
  44ff70:	ldr	x2, [x19, #48]
  44ff74:	add	w1, w0, #0x1
  44ff78:	mov	x3, #0x0                   	// #0
  44ff7c:	str	x20, [x2, w0, sxtw #3]
  44ff80:	str	w1, [x19, #56]
  44ff84:	ldrb	w0, [x21]
  44ff88:	sub	w0, w0, #0x49
  44ff8c:	and	w0, w0, #0xff
  44ff90:	cmp	w0, #0x1
  44ff94:	b.hi	44ffac <_obstack_memory_used@@Base+0x59a8>  // b.pmore
  44ff98:	add	x21, x21, #0x1
  44ff9c:	str	x21, [x19, #24]
  44ffa0:	mov	x0, x19
  44ffa4:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  44ffa8:	mov	x3, x0
  44ffac:	mov	x2, x20
  44ffb0:	mov	x0, x19
  44ffb4:	mov	w1, #0x4                   	// #4
  44ffb8:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  44ffbc:	mov	x20, x0
  44ffc0:	str	x0, [sp, #72]
  44ffc4:	ldp	x21, x22, [sp, #32]
  44ffc8:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  44ffcc:	mov	x20, #0x0                   	// #0
  44ffd0:	b	44fc38 <_obstack_memory_used@@Base+0x5634>
  44ffd4:	mov	x0, x19
  44ffd8:	bl	44f198 <_obstack_memory_used@@Base+0x4b94>
  44ffdc:	str	x0, [sp, #72]
  44ffe0:	mov	x20, x0
  44ffe4:	cbz	x0, 44f750 <_obstack_memory_used@@Base+0x514c>
  44ffe8:	ldr	w0, [x0]
  44ffec:	cmp	w0, #0x18
  44fff0:	b.ne	44f8ac <_obstack_memory_used@@Base+0x52a8>  // b.any
  44fff4:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  44fff8:	add	x1, x1, #0x1
  44fffc:	str	x1, [x19, #24]
  450000:	mov	x0, x19
  450004:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  450008:	mov	x3, x0
  45000c:	mov	x2, x20
  450010:	mov	x0, x19
  450014:	mov	w1, #0x4                   	// #4
  450018:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  45001c:	str	x0, [sp, #72]
  450020:	b	44fa3c <_obstack_memory_used@@Base+0x5438>
  450024:	ldr	w20, [x19, #76]
  450028:	mov	w0, #0x1                   	// #1
  45002c:	str	w0, [x19, #76]
  450030:	mov	x0, x19
  450034:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  450038:	str	w20, [x19, #76]
  45003c:	mov	x20, x0
  450040:	cbz	x0, 44f750 <_obstack_memory_used@@Base+0x514c>
  450044:	ldr	x1, [x19, #24]
  450048:	ldrb	w0, [x1]
  45004c:	b	44fc2c <_obstack_memory_used@@Base+0x5628>
  450050:	ldr	w22, [x19, #56]
  450054:	add	x0, x21, #0x1
  450058:	ldr	w20, [x19, #72]
  45005c:	str	x23, [sp, #48]
  450060:	str	x0, [x19, #24]
  450064:	mov	x0, x19
  450068:	ldr	w23, [x19, #40]
  45006c:	bl	44e8e0 <_obstack_memory_used@@Base+0x42dc>
  450070:	ldr	x1, [x19, #24]
  450074:	ldrb	w1, [x1]
  450078:	cmp	w1, #0x49
  45007c:	b.eq	450258 <_obstack_memory_used@@Base+0x5c54>  // b.none
  450080:	str	x21, [x19, #24]
  450084:	str	w23, [x19, #40]
  450088:	str	w22, [x19, #56]
  45008c:	str	w20, [x19, #72]
  450090:	ldp	x21, x22, [sp, #32]
  450094:	ldr	x23, [sp, #48]
  450098:	ldr	x20, [sp, #72]
  45009c:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  4500a0:	ldp	w0, w1, [x19, #40]
  4500a4:	cmp	w0, w1
  4500a8:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  4500ac:	mov	w1, #0x18                  	// #24
  4500b0:	add	w5, w0, #0x1
  4500b4:	ldr	x3, [x19, #32]
  4500b8:	smull	x0, w0, w1
  4500bc:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  4500c0:	add	x1, x1, #0xdf0
  4500c4:	ldr	w2, [x19, #72]
  4500c8:	add	x1, x1, #0x568
  4500cc:	add	x20, x3, x0
  4500d0:	mov	w4, #0x27                  	// #39
  4500d4:	b	44fefc <_obstack_memory_used@@Base+0x58f8>
  4500d8:	ldp	w0, w1, [x19, #40]
  4500dc:	cmp	w0, w1
  4500e0:	b.ge	44f750 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  4500e4:	mov	w3, #0x18                  	// #24
  4500e8:	add	w1, w0, #0x1
  4500ec:	ldr	x2, [x19, #32]
  4500f0:	smull	x0, w0, w3
  4500f4:	str	w1, [x19, #40]
  4500f8:	mov	w3, #0xe                   	// #14
  4500fc:	add	x20, x2, x0
  450100:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  450104:	add	x1, x1, #0x2f8
  450108:	str	xzr, [x2, x0]
  45010c:	str	x1, [x20, #8]
  450110:	str	w3, [x20, #16]
  450114:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  450118:	ldp	w0, w1, [x19, #40]
  45011c:	cmp	w0, w1
  450120:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  450124:	mov	w1, #0x18                  	// #24
  450128:	add	w5, w0, #0x1
  45012c:	ldr	x3, [x19, #32]
  450130:	smull	x0, w0, w1
  450134:	ldr	w2, [x19, #72]
  450138:	mov	w4, #0x27                  	// #39
  45013c:	add	x20, x3, x0
  450140:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  450144:	add	x1, x1, #0xdf0
  450148:	add	w2, w2, #0x4
  45014c:	add	x1, x1, #0x528
  450150:	str	wzr, [x20, #4]
  450154:	str	w5, [x19, #40]
  450158:	str	w4, [x3, x0]
  45015c:	str	x1, [x20, #8]
  450160:	str	w2, [x19, #72]
  450164:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  450168:	ldp	w0, w1, [x19, #40]
  45016c:	cmp	w0, w1
  450170:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  450174:	mov	w1, #0x18                  	// #24
  450178:	add	w5, w0, #0x1
  45017c:	ldr	x3, [x19, #32]
  450180:	smull	x0, w0, w1
  450184:	ldr	w2, [x19, #72]
  450188:	mov	w4, #0x27                  	// #39
  45018c:	add	x20, x3, x0
  450190:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  450194:	add	x1, x1, #0xdf0
  450198:	add	w2, w2, #0x11
  45019c:	add	x1, x1, #0x5a8
  4501a0:	str	wzr, [x20, #4]
  4501a4:	str	w5, [x19, #40]
  4501a8:	str	w4, [x3, x0]
  4501ac:	str	x1, [x20, #8]
  4501b0:	str	w2, [x19, #72]
  4501b4:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  4501b8:	ldp	w0, w1, [x19, #40]
  4501bc:	cmp	w0, w1
  4501c0:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  4501c4:	mov	w1, #0x18                  	// #24
  4501c8:	add	w5, w0, #0x1
  4501cc:	ldr	x3, [x19, #32]
  4501d0:	smull	x0, w0, w1
  4501d4:	ldr	w2, [x19, #72]
  4501d8:	mov	w4, #0x27                  	// #39
  4501dc:	add	x20, x3, x0
  4501e0:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  4501e4:	add	x1, x1, #0xdf0
  4501e8:	add	w2, w2, #0xa
  4501ec:	add	x1, x1, #0x508
  4501f0:	str	wzr, [x20, #4]
  4501f4:	str	w5, [x19, #40]
  4501f8:	str	w4, [x3, x0]
  4501fc:	str	x1, [x20, #8]
  450200:	str	w2, [x19, #72]
  450204:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  450208:	ldp	w0, w1, [x19, #40]
  45020c:	cmp	w0, w1
  450210:	b.ge	4502f0 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  450214:	mov	w1, #0x18                  	// #24
  450218:	add	w5, w0, #0x1
  45021c:	ldr	x3, [x19, #32]
  450220:	smull	x0, w0, w1
  450224:	ldr	w2, [x19, #72]
  450228:	mov	w4, #0x27                  	// #39
  45022c:	add	x20, x3, x0
  450230:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x409fc>
  450234:	add	x1, x1, #0xdf0
  450238:	add	w2, w2, #0x7
  45023c:	add	x1, x1, #0x548
  450240:	str	wzr, [x20, #4]
  450244:	str	w5, [x19, #40]
  450248:	str	w4, [x3, x0]
  45024c:	str	x1, [x20, #8]
  450250:	str	w2, [x19, #72]
  450254:	b	44f754 <_obstack_memory_used@@Base+0x5150>
  450258:	ldr	x2, [sp, #72]
  45025c:	cbz	x2, 4502d0 <_obstack_memory_used@@Base+0x5ccc>
  450260:	ldp	w4, w1, [x19, #56]
  450264:	cmp	w4, w1
  450268:	b.ge	4502d0 <_obstack_memory_used@@Base+0x5ccc>  // b.tcont
  45026c:	ldr	x6, [x19, #48]
  450270:	add	w5, w4, #0x1
  450274:	mov	x3, x0
  450278:	mov	w1, #0x4                   	// #4
  45027c:	mov	x0, x19
  450280:	str	x2, [x6, w4, sxtw #3]
  450284:	str	w5, [x19, #56]
  450288:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  45028c:	mov	x20, x0
  450290:	str	x0, [sp, #72]
  450294:	ldp	x21, x22, [sp, #32]
  450298:	ldr	x23, [sp, #48]
  45029c:	b	44f8a8 <_obstack_memory_used@@Base+0x52a4>
  4502a0:	add	x4, x4, #0x3
  4502a4:	stp	x21, x22, [sp, #32]
  4502a8:	mov	w1, #0x1                   	// #1
  4502ac:	ldr	w21, [x19, #76]
  4502b0:	mov	x0, x19
  4502b4:	str	x4, [x19, #24]
  4502b8:	str	w1, [x19, #76]
  4502bc:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  4502c0:	mov	x20, x0
  4502c4:	str	w21, [x19, #76]
  4502c8:	ldp	x21, x22, [sp, #32]
  4502cc:	b	44fd30 <_obstack_memory_used@@Base+0x572c>
  4502d0:	ldp	x21, x22, [sp, #32]
  4502d4:	ldr	x23, [sp, #48]
  4502d8:	b	44f750 <_obstack_memory_used@@Base+0x514c>
  4502dc:	mov	x0, #0x0                   	// #0
  4502e0:	stp	x21, x22, [sp, #32]
  4502e4:	str	x23, [sp, #48]
  4502e8:	str	wzr, [x0]
  4502ec:	brk	#0x3e8
  4502f0:	mov	x0, #0x0                   	// #0
  4502f4:	str	xzr, [sp, #72]
  4502f8:	stp	x21, x22, [sp, #32]
  4502fc:	str	x23, [sp, #48]
  450300:	ldr	x0, [x0, #8]
  450304:	brk	#0x3e8
  450308:	stp	x29, x30, [sp, #-32]!
  45030c:	mov	x29, sp
  450310:	ldr	x1, [x0, #24]
  450314:	stp	x19, x20, [sp, #16]
  450318:	mov	x19, x0
  45031c:	ldrb	w10, [x1]
  450320:	cbz	w10, 4503e4 <_obstack_memory_used@@Base+0x5de0>
  450324:	add	x2, x1, #0x1
  450328:	str	x2, [x0, #24]
  45032c:	ldrb	w10, [x1, #1]
  450330:	ldrb	w8, [x1]
  450334:	cbnz	w10, 4503ec <_obstack_memory_used@@Base+0x5de8>
  450338:	adrp	x5, 48b000 <_obstack_memory_used@@Base+0x409fc>
  45033c:	add	x5, x5, #0xdf0
  450340:	add	x5, x5, #0x5c8
  450344:	mov	w4, #0x43                  	// #67
  450348:	mov	w2, #0x0                   	// #0
  45034c:	mov	w7, #0x18                  	// #24
  450350:	sub	w1, w4, w2
  450354:	add	w1, w1, w1, lsr #31
  450358:	add	w1, w2, w1, asr #1
  45035c:	smull	x3, w1, w7
  450360:	add	x9, x5, x3
  450364:	ldr	x3, [x5, x3]
  450368:	ldrb	w6, [x3]
  45036c:	cmp	w6, w8
  450370:	b.eq	450394 <_obstack_memory_used@@Base+0x5d90>  // b.none
  450374:	b.ls	4503dc <_obstack_memory_used@@Base+0x5dd8>  // b.plast
  450378:	mov	w4, w1
  45037c:	cmp	w2, w4
  450380:	b.ne	450350 <_obstack_memory_used@@Base+0x5d4c>  // b.any
  450384:	mov	x0, #0x0                   	// #0
  450388:	ldp	x19, x20, [sp, #16]
  45038c:	ldp	x29, x30, [sp], #32
  450390:	ret
  450394:	ldrb	w3, [x3, #1]
  450398:	cmp	w3, w10
  45039c:	b.ne	450374 <_obstack_memory_used@@Base+0x5d70>  // b.any
  4503a0:	ldp	w0, w1, [x19, #40]
  4503a4:	cmp	w0, w1
  4503a8:	b.ge	450384 <_obstack_memory_used@@Base+0x5d80>  // b.tcont
  4503ac:	ldr	x2, [x19, #32]
  4503b0:	smull	x7, w0, w7
  4503b4:	add	w1, w0, #0x1
  4503b8:	mov	w3, #0x32                  	// #50
  4503bc:	add	x0, x2, x7
  4503c0:	str	wzr, [x0, #4]
  4503c4:	str	w1, [x19, #40]
  4503c8:	str	w3, [x2, x7]
  4503cc:	str	x9, [x0, #8]
  4503d0:	ldp	x19, x20, [sp, #16]
  4503d4:	ldp	x29, x30, [sp], #32
  4503d8:	ret
  4503dc:	add	w2, w1, #0x1
  4503e0:	b	45037c <_obstack_memory_used@@Base+0x5d78>
  4503e4:	mov	w8, #0x0                   	// #0
  4503e8:	b	450338 <_obstack_memory_used@@Base+0x5d34>
  4503ec:	add	x2, x1, #0x2
  4503f0:	str	x2, [x0, #24]
  4503f4:	cmp	w8, #0x76
  4503f8:	ldrb	w10, [x1, #1]
  4503fc:	b.ne	450458 <_obstack_memory_used@@Base+0x5e54>  // b.any
  450400:	sub	w11, w10, #0x30
  450404:	and	w1, w11, #0xff
  450408:	cmp	w1, #0x9
  45040c:	b.hi	450338 <_obstack_memory_used@@Base+0x5d34>  // b.pmore
  450410:	bl	44d0b0 <_obstack_memory_used@@Base+0x2aac>
  450414:	mov	x2, x0
  450418:	ldp	w1, w0, [x19, #40]
  45041c:	cmp	w1, w0
  450420:	b.ge	450384 <_obstack_memory_used@@Base+0x5d80>  // b.tcont
  450424:	mov	w0, #0x18                  	// #24
  450428:	add	w4, w1, #0x1
  45042c:	ldr	x3, [x19, #32]
  450430:	smull	x1, w1, w0
  450434:	add	x0, x3, x1
  450438:	str	wzr, [x0, #4]
  45043c:	str	w4, [x19, #40]
  450440:	cbz	x2, 450384 <_obstack_memory_used@@Base+0x5d80>
  450444:	mov	x4, #0x33                  	// #51
  450448:	str	x4, [x3, x1]
  45044c:	str	w11, [x0, #8]
  450450:	str	x2, [x0, #16]
  450454:	b	450388 <_obstack_memory_used@@Base+0x5d84>
  450458:	cmp	w10, #0x76
  45045c:	mov	w1, #0x63                  	// #99
  450460:	ccmp	w8, w1, #0x0, eq  // eq = none
  450464:	b.ne	450338 <_obstack_memory_used@@Base+0x5d34>  // b.any
  450468:	ldp	w1, w20, [x0, #76]
  45046c:	cmp	w1, #0x0
  450470:	cset	w1, eq  // eq = none
  450474:	str	w1, [x0, #80]
  450478:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  45047c:	mov	x2, x0
  450480:	ldr	w1, [x19, #80]
  450484:	mov	x3, #0x0                   	// #0
  450488:	cbz	w1, 4504a8 <_obstack_memory_used@@Base+0x5ea4>
  45048c:	mov	x0, x19
  450490:	mov	w1, #0x35                  	// #53
  450494:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  450498:	str	w20, [x19, #80]
  45049c:	ldp	x19, x20, [sp, #16]
  4504a0:	ldp	x29, x30, [sp], #32
  4504a4:	ret
  4504a8:	mov	x0, x19
  4504ac:	mov	w1, #0x34                  	// #52
  4504b0:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  4504b4:	str	w20, [x19, #80]
  4504b8:	b	45049c <_obstack_memory_used@@Base+0x5e98>
  4504bc:	nop
  4504c0:	stp	x29, x30, [sp, #-64]!
  4504c4:	mov	x29, sp
  4504c8:	stp	x19, x20, [sp, #16]
  4504cc:	mov	x19, x0
  4504d0:	mov	w0, #0x2e                  	// #46
  4504d4:	str	xzr, [sp, #56]
  4504d8:	ldr	x2, [x19, #24]
  4504dc:	ldrb	w1, [x2]
  4504e0:	cmp	w1, #0x45
  4504e4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4504e8:	ccmp	w1, w0, #0x4, ne  // ne = any
  4504ec:	b.eq	450580 <_obstack_memory_used@@Base+0x5f7c>  // b.none
  4504f0:	add	x20, sp, #0x38
  4504f4:	stp	x21, x22, [sp, #32]
  4504f8:	mov	w22, w0
  4504fc:	mov	w21, #0x4f                  	// #79
  450500:	cmp	w1, #0x52
  450504:	mov	x0, x19
  450508:	ccmp	w1, w21, #0x4, ne  // ne = any
  45050c:	b.ne	45051c <_obstack_memory_used@@Base+0x5f18>  // b.any
  450510:	ldrb	w1, [x2, #1]
  450514:	cmp	w1, #0x45
  450518:	b.eq	45055c <_obstack_memory_used@@Base+0x5f58>  // b.none
  45051c:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  450520:	mov	x2, x0
  450524:	mov	x3, #0x0                   	// #0
  450528:	mov	x0, x19
  45052c:	mov	w1, #0x2e                  	// #46
  450530:	cbz	x2, 45057c <_obstack_memory_used@@Base+0x5f78>
  450534:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  450538:	str	x0, [x20]
  45053c:	add	x20, x0, #0x10
  450540:	cbz	x0, 45057c <_obstack_memory_used@@Base+0x5f78>
  450544:	ldr	x2, [x19, #24]
  450548:	ldrb	w1, [x2]
  45054c:	cmp	w1, #0x45
  450550:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  450554:	ccmp	w1, w22, #0x4, ne  // ne = any
  450558:	b.ne	450500 <_obstack_memory_used@@Base+0x5efc>  // b.any
  45055c:	ldr	x0, [sp, #56]
  450560:	cbz	x0, 45057c <_obstack_memory_used@@Base+0x5f78>
  450564:	ldr	x1, [x0, #16]
  450568:	cbz	x1, 450590 <_obstack_memory_used@@Base+0x5f8c>
  45056c:	ldp	x21, x22, [sp, #32]
  450570:	ldp	x19, x20, [sp, #16]
  450574:	ldp	x29, x30, [sp], #64
  450578:	ret
  45057c:	ldp	x21, x22, [sp, #32]
  450580:	mov	x0, #0x0                   	// #0
  450584:	ldp	x19, x20, [sp, #16]
  450588:	ldp	x29, x30, [sp], #64
  45058c:	ret
  450590:	ldr	x1, [x0, #8]
  450594:	ldr	w2, [x1]
  450598:	cmp	w2, #0x27
  45059c:	b.ne	45056c <_obstack_memory_used@@Base+0x5f68>  // b.any
  4505a0:	ldr	x1, [x1, #8]
  4505a4:	ldr	w2, [x1, #28]
  4505a8:	cmp	w2, #0x9
  4505ac:	b.ne	45056c <_obstack_memory_used@@Base+0x5f68>  // b.any
  4505b0:	ldr	w2, [x1, #8]
  4505b4:	ldr	w1, [x19, #72]
  4505b8:	ldp	x21, x22, [sp, #32]
  4505bc:	sub	w1, w1, w2
  4505c0:	str	w1, [x19, #72]
  4505c4:	str	xzr, [x0, #8]
  4505c8:	b	450570 <_obstack_memory_used@@Base+0x5f6c>
  4505cc:	nop
  4505d0:	stp	x29, x30, [sp, #-96]!
  4505d4:	cmp	w2, #0x0
  4505d8:	mov	x29, sp
  4505dc:	stp	x19, x20, [sp, #16]
  4505e0:	mov	x19, x0
  4505e4:	mov	w0, #0x1b                  	// #27
  4505e8:	stp	x21, x22, [sp, #32]
  4505ec:	mov	x20, x1
  4505f0:	mov	w22, #0x1c                  	// #28
  4505f4:	ldr	x4, [x19, #24]
  4505f8:	stp	x23, x24, [sp, #48]
  4505fc:	mov	w23, #0x1d                  	// #29
  450600:	stp	x25, x26, [sp, #64]
  450604:	mov	w25, #0x1e                  	// #30
  450608:	csel	w25, w25, w0, ne  // ne = any
  45060c:	ldrb	w5, [x4]
  450610:	mov	w0, #0x1a                  	// #26
  450614:	csel	w23, w23, w0, ne  // ne = any
  450618:	mov	w0, #0x19                  	// #25
  45061c:	mov	w24, w2
  450620:	csel	w22, w22, w0, ne  // ne = any
  450624:	mov	x21, x1
  450628:	mov	x0, x4
  45062c:	mov	w26, #0x1                   	// #1
  450630:	bl	44d5c0 <_obstack_memory_used@@Base+0x2fbc>
  450634:	cbz	w0, 450750 <_obstack_memory_used@@Base+0x614c>
  450638:	add	x0, x4, #0x1
  45063c:	str	x0, [x19, #24]
  450640:	cmp	w5, #0x72
  450644:	b.eq	450710 <_obstack_memory_used@@Base+0x610c>  // b.none
  450648:	cmp	w5, #0x56
  45064c:	b.eq	4507b0 <_obstack_memory_used@@Base+0x61ac>  // b.none
  450650:	cmp	w5, #0x4b
  450654:	b.eq	4507c8 <_obstack_memory_used@@Base+0x61c4>  // b.none
  450658:	ldrb	w0, [x4, #1]
  45065c:	cbz	w0, 4506f0 <_obstack_memory_used@@Base+0x60ec>
  450660:	add	x0, x4, #0x2
  450664:	str	x0, [x19, #24]
  450668:	ldrb	w0, [x4, #1]
  45066c:	cmp	w0, #0x78
  450670:	b.eq	4507e0 <_obstack_memory_used@@Base+0x61dc>  // b.none
  450674:	and	w1, w0, #0xffffffdf
  450678:	cmp	w1, #0x4f
  45067c:	and	w1, w1, #0xff
  450680:	b.ne	4507f8 <_obstack_memory_used@@Base+0x61f4>  // b.any
  450684:	ldr	w2, [x19, #72]
  450688:	cmp	w0, #0x4f
  45068c:	add	w0, w2, #0x9
  450690:	str	w0, [x19, #72]
  450694:	b.ne	45083c <_obstack_memory_used@@Base+0x6238>  // b.any
  450698:	str	x27, [sp, #80]
  45069c:	mov	x0, x19
  4506a0:	ldr	w27, [x19, #76]
  4506a4:	str	w26, [x19, #76]
  4506a8:	bl	44e108 <_obstack_memory_used@@Base+0x3b04>
  4506ac:	str	w27, [x19, #76]
  4506b0:	mov	x3, x0
  4506b4:	cbz	x0, 450854 <_obstack_memory_used@@Base+0x6250>
  4506b8:	ldr	x0, [x19, #24]
  4506bc:	ldrb	w1, [x0]
  4506c0:	cmp	w1, #0x45
  4506c4:	b.ne	450854 <_obstack_memory_used@@Base+0x6250>  // b.any
  4506c8:	add	x0, x0, #0x1
  4506cc:	mov	w1, #0x4f                  	// #79
  4506d0:	ldr	x27, [sp, #80]
  4506d4:	str	x0, [x19, #24]
  4506d8:	mov	x2, #0x0                   	// #0
  4506dc:	mov	x0, x19
  4506e0:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  4506e4:	str	x0, [x20]
  4506e8:	cbnz	x0, 450738 <_obstack_memory_used@@Base+0x6134>
  4506ec:	nop
  4506f0:	mov	x20, #0x0                   	// #0
  4506f4:	mov	x0, x20
  4506f8:	ldp	x19, x20, [sp, #16]
  4506fc:	ldp	x21, x22, [sp, #32]
  450700:	ldp	x23, x24, [sp, #48]
  450704:	ldp	x25, x26, [sp, #64]
  450708:	ldp	x29, x30, [sp], #96
  45070c:	ret
  450710:	ldr	w0, [x19, #72]
  450714:	mov	w1, w22
  450718:	mov	x3, #0x0                   	// #0
  45071c:	add	w0, w0, #0x9
  450720:	str	w0, [x19, #72]
  450724:	mov	x0, x19
  450728:	mov	x2, #0x0                   	// #0
  45072c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  450730:	str	x0, [x20]
  450734:	cbz	x0, 4506f0 <_obstack_memory_used@@Base+0x60ec>
  450738:	ldr	x4, [x19, #24]
  45073c:	add	x20, x0, #0x8
  450740:	mov	x0, x4
  450744:	ldrb	w5, [x4]
  450748:	bl	44d5c0 <_obstack_memory_used@@Base+0x2fbc>
  45074c:	cbnz	w0, 450638 <_obstack_memory_used@@Base+0x6034>
  450750:	cmp	w5, #0x46
  450754:	eor	w24, w24, #0x1
  450758:	cset	w0, eq  // eq = none
  45075c:	tst	w24, w0
  450760:	b.eq	4506f4 <_obstack_memory_used@@Base+0x60f0>  // b.none
  450764:	cmp	x20, x21
  450768:	b.eq	4506f4 <_obstack_memory_used@@Base+0x60f0>  // b.none
  45076c:	mov	w3, #0x1d                  	// #29
  450770:	mov	w2, #0x1e                  	// #30
  450774:	mov	w1, #0x1c                  	// #28
  450778:	b	450790 <_obstack_memory_used@@Base+0x618c>
  45077c:	cmp	w0, #0x19
  450780:	b.eq	45084c <_obstack_memory_used@@Base+0x6248>  // b.none
  450784:	add	x21, x21, #0x8
  450788:	cmp	x20, x21
  45078c:	b.eq	4506f4 <_obstack_memory_used@@Base+0x60f0>  // b.none
  450790:	ldr	x21, [x21]
  450794:	ldr	w0, [x21]
  450798:	cmp	w0, #0x1a
  45079c:	b.eq	450844 <_obstack_memory_used@@Base+0x6240>  // b.none
  4507a0:	cmp	w0, #0x1b
  4507a4:	b.ne	45077c <_obstack_memory_used@@Base+0x6178>  // b.any
  4507a8:	str	w2, [x21]
  4507ac:	b	450784 <_obstack_memory_used@@Base+0x6180>
  4507b0:	ldr	w0, [x19, #72]
  4507b4:	mov	w1, w23
  4507b8:	mov	x3, #0x0                   	// #0
  4507bc:	add	w0, w0, #0x9
  4507c0:	str	w0, [x19, #72]
  4507c4:	b	450724 <_obstack_memory_used@@Base+0x6120>
  4507c8:	ldr	w0, [x19, #72]
  4507cc:	mov	w1, w25
  4507d0:	mov	x3, #0x0                   	// #0
  4507d4:	add	w0, w0, #0x6
  4507d8:	str	w0, [x19, #72]
  4507dc:	b	450724 <_obstack_memory_used@@Base+0x6120>
  4507e0:	ldr	w0, [x19, #72]
  4507e4:	mov	x3, #0x0                   	// #0
  4507e8:	mov	w1, #0x4d                  	// #77
  4507ec:	add	w0, w0, #0x11
  4507f0:	str	w0, [x19, #72]
  4507f4:	b	450724 <_obstack_memory_used@@Base+0x6120>
  4507f8:	cmp	w0, #0x77
  4507fc:	b.ne	4506f0 <_obstack_memory_used@@Base+0x60ec>  // b.any
  450800:	ldr	w1, [x19, #72]
  450804:	mov	x0, x19
  450808:	add	w1, w1, #0x6
  45080c:	str	w1, [x19, #72]
  450810:	bl	4504c0 <_obstack_memory_used@@Base+0x5ebc>
  450814:	mov	x3, x0
  450818:	cbz	x0, 4506f0 <_obstack_memory_used@@Base+0x60ec>
  45081c:	ldr	x0, [x19, #24]
  450820:	ldrb	w1, [x0]
  450824:	cmp	w1, #0x45
  450828:	b.ne	4506f0 <_obstack_memory_used@@Base+0x60ec>  // b.any
  45082c:	add	x0, x0, #0x1
  450830:	mov	w1, #0x50                  	// #80
  450834:	str	x0, [x19, #24]
  450838:	b	450724 <_obstack_memory_used@@Base+0x6120>
  45083c:	mov	x3, #0x0                   	// #0
  450840:	b	450724 <_obstack_memory_used@@Base+0x6120>
  450844:	str	w3, [x21]
  450848:	b	450784 <_obstack_memory_used@@Base+0x6180>
  45084c:	str	w1, [x21]
  450850:	b	450784 <_obstack_memory_used@@Base+0x6180>
  450854:	ldr	x27, [sp, #80]
  450858:	b	4506f0 <_obstack_memory_used@@Base+0x60ec>
  45085c:	nop
  450860:	stp	x29, x30, [sp, #-32]!
  450864:	mov	x29, sp
  450868:	stp	x19, x20, [sp, #16]
  45086c:	mov	x19, x0
  450870:	ldr	x0, [x0, #24]
  450874:	ldrb	w2, [x0]
  450878:	cmp	w2, #0x4a
  45087c:	b.eq	4508e0 <_obstack_memory_used@@Base+0x62dc>  // b.none
  450880:	cbz	w1, 4508bc <_obstack_memory_used@@Base+0x62b8>
  450884:	mov	x0, x19
  450888:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  45088c:	mov	x20, x0
  450890:	cbz	x0, 4508d0 <_obstack_memory_used@@Base+0x62cc>
  450894:	mov	x0, x19
  450898:	bl	4504c0 <_obstack_memory_used@@Base+0x5ebc>
  45089c:	mov	x3, x0
  4508a0:	cbz	x0, 4508d0 <_obstack_memory_used@@Base+0x62cc>
  4508a4:	mov	x2, x20
  4508a8:	mov	x0, x19
  4508ac:	ldp	x19, x20, [sp, #16]
  4508b0:	mov	w1, #0x29                  	// #41
  4508b4:	ldp	x29, x30, [sp], #32
  4508b8:	b	44cc00 <_obstack_memory_used@@Base+0x25fc>
  4508bc:	mov	x0, x19
  4508c0:	mov	x20, #0x0                   	// #0
  4508c4:	bl	4504c0 <_obstack_memory_used@@Base+0x5ebc>
  4508c8:	mov	x3, x0
  4508cc:	cbnz	x0, 4508a4 <_obstack_memory_used@@Base+0x62a0>
  4508d0:	mov	x0, #0x0                   	// #0
  4508d4:	ldp	x19, x20, [sp, #16]
  4508d8:	ldp	x29, x30, [sp], #32
  4508dc:	ret
  4508e0:	add	x0, x0, #0x1
  4508e4:	str	x0, [x19, #24]
  4508e8:	b	450884 <_obstack_memory_used@@Base+0x6280>
  4508ec:	nop
  4508f0:	stp	x29, x30, [sp, #-32]!
  4508f4:	mov	x29, sp
  4508f8:	str	x19, [sp, #16]
  4508fc:	mov	x19, x0
  450900:	ldr	w0, [x0, #16]
  450904:	tbnz	w0, #18, 450940 <_obstack_memory_used@@Base+0x633c>
  450908:	ldr	w1, [x19, #84]
  45090c:	cmp	w1, #0x800
  450910:	b.hi	450950 <_obstack_memory_used@@Base+0x634c>  // b.pmore
  450914:	ldr	x2, [x19, #24]
  450918:	add	w0, w1, #0x1
  45091c:	str	w0, [x19, #84]
  450920:	mov	x0, #0x0                   	// #0
  450924:	ldrb	w3, [x2]
  450928:	cmp	w3, #0x46
  45092c:	b.eq	450960 <_obstack_memory_used@@Base+0x635c>  // b.none
  450930:	str	w1, [x19, #84]
  450934:	ldr	x19, [sp, #16]
  450938:	ldp	x29, x30, [sp], #32
  45093c:	ret
  450940:	ldr	x2, [x19, #24]
  450944:	ldrb	w0, [x2]
  450948:	cmp	w0, #0x46
  45094c:	b.eq	450960 <_obstack_memory_used@@Base+0x635c>  // b.none
  450950:	mov	x0, #0x0                   	// #0
  450954:	ldr	x19, [sp, #16]
  450958:	ldp	x29, x30, [sp], #32
  45095c:	ret
  450960:	add	x4, x2, #0x1
  450964:	str	x4, [x19, #24]
  450968:	add	x3, x2, #0x2
  45096c:	mov	w1, #0x1                   	// #1
  450970:	ldrb	w2, [x2, #1]
  450974:	mov	x0, x19
  450978:	cmp	w2, #0x59
  45097c:	csel	x2, x3, x4, eq  // eq = none
  450980:	str	x2, [x19, #24]
  450984:	bl	450860 <_obstack_memory_used@@Base+0x625c>
  450988:	mov	x1, x0
  45098c:	mov	x0, x19
  450990:	bl	44cc88 <_obstack_memory_used@@Base+0x2684>
  450994:	ldr	x1, [x19, #24]
  450998:	ldrb	w2, [x1]
  45099c:	cmp	w2, #0x45
  4509a0:	b.eq	4509c0 <_obstack_memory_used@@Base+0x63bc>  // b.none
  4509a4:	mov	x0, #0x0                   	// #0
  4509a8:	ldr	w1, [x19, #16]
  4509ac:	tbnz	w1, #18, 450954 <_obstack_memory_used@@Base+0x6350>
  4509b0:	ldr	w1, [x19, #84]
  4509b4:	sub	w1, w1, #0x1
  4509b8:	str	w1, [x19, #84]
  4509bc:	b	450934 <_obstack_memory_used@@Base+0x6330>
  4509c0:	add	x1, x1, #0x1
  4509c4:	str	x1, [x19, #24]
  4509c8:	b	4509a8 <_obstack_memory_used@@Base+0x63a4>
  4509cc:	nop
  4509d0:	stp	x29, x30, [sp, #-48]!
  4509d4:	mov	x29, sp
  4509d8:	ldr	x3, [x0, #24]
  4509dc:	stp	x19, x20, [sp, #16]
  4509e0:	mov	x19, x0
  4509e4:	ldrb	w2, [x3]
  4509e8:	sub	w1, w2, #0x30
  4509ec:	and	w1, w1, #0xff
  4509f0:	cmp	w1, #0x9
  4509f4:	b.ls	450b04 <_obstack_memory_used@@Base+0x6500>  // b.plast
  4509f8:	sub	w1, w2, #0x61
  4509fc:	and	w1, w1, #0xff
  450a00:	cmp	w1, #0x19
  450a04:	b.hi	450a4c <_obstack_memory_used@@Base+0x6448>  // b.pmore
  450a08:	cmp	w2, #0x6f
  450a0c:	b.eq	450bcc <_obstack_memory_used@@Base+0x65c8>  // b.none
  450a10:	mov	x0, x19
  450a14:	bl	450308 <_obstack_memory_used@@Base+0x5d04>
  450a18:	mov	x20, x0
  450a1c:	cbz	x0, 450a2c <_obstack_memory_used@@Base+0x6428>
  450a20:	ldr	w0, [x0]
  450a24:	cmp	w0, #0x32
  450a28:	b.eq	450b30 <_obstack_memory_used@@Base+0x652c>  // b.none
  450a2c:	ldr	x0, [x19, #24]
  450a30:	ldrb	w1, [x0]
  450a34:	cmp	w1, #0x42
  450a38:	b.eq	450b1c <_obstack_memory_used@@Base+0x6518>  // b.none
  450a3c:	mov	x0, x20
  450a40:	ldp	x19, x20, [sp, #16]
  450a44:	ldp	x29, x30, [sp], #48
  450a48:	ret
  450a4c:	sub	w1, w2, #0x43
  450a50:	and	w1, w1, #0xff
  450a54:	cmp	w1, #0x1
  450a58:	b.ls	450be4 <_obstack_memory_used@@Base+0x65e0>  // b.plast
  450a5c:	cmp	w2, #0x4c
  450a60:	b.eq	450b98 <_obstack_memory_used@@Base+0x6594>  // b.none
  450a64:	cmp	w2, #0x55
  450a68:	b.ne	450bb8 <_obstack_memory_used@@Base+0x65b4>  // b.any
  450a6c:	ldrb	w1, [x3, #1]
  450a70:	cmp	w1, #0x6c
  450a74:	b.eq	450ca8 <_obstack_memory_used@@Base+0x66a4>  // b.none
  450a78:	cmp	w1, #0x74
  450a7c:	b.ne	450bb8 <_obstack_memory_used@@Base+0x65b4>  // b.any
  450a80:	add	x1, x3, #0x1
  450a84:	str	x1, [x0, #24]
  450a88:	mov	x20, #0x0                   	// #0
  450a8c:	ldrb	w1, [x3, #1]
  450a90:	cmp	w1, #0x74
  450a94:	b.ne	450a34 <_obstack_memory_used@@Base+0x6430>  // b.any
  450a98:	add	x3, x3, #0x2
  450a9c:	str	x3, [x0, #24]
  450aa0:	bl	44cfb8 <_obstack_memory_used@@Base+0x29b4>
  450aa4:	tbnz	w0, #31, 450a2c <_obstack_memory_used@@Base+0x6428>
  450aa8:	ldp	w1, w2, [x19, #40]
  450aac:	cmp	w1, w2
  450ab0:	b.ge	450e70 <_obstack_memory_used@@Base+0x686c>  // b.tcont
  450ab4:	ldp	x7, x3, [x19, #24]
  450ab8:	mov	w2, #0x18                  	// #24
  450abc:	add	w6, w1, #0x1
  450ac0:	mov	w4, #0x48                  	// #72
  450ac4:	smull	x1, w1, w2
  450ac8:	sxtw	x0, w0
  450acc:	ldp	w2, w5, [x19, #56]
  450ad0:	add	x20, x3, x1
  450ad4:	cmp	w2, w5
  450ad8:	str	wzr, [x20, #4]
  450adc:	str	w6, [x19, #40]
  450ae0:	str	w4, [x3, x1]
  450ae4:	str	x0, [x20, #8]
  450ae8:	b.ge	450e64 <_obstack_memory_used@@Base+0x6860>  // b.tcont
  450aec:	ldr	x1, [x19, #48]
  450af0:	add	w0, w2, #0x1
  450af4:	str	x20, [x1, w2, sxtw #3]
  450af8:	str	w0, [x19, #56]
  450afc:	ldrb	w1, [x7]
  450b00:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450b04:	bl	44d0b0 <_obstack_memory_used@@Base+0x2aac>
  450b08:	mov	x20, x0
  450b0c:	ldr	x3, [x19, #24]
  450b10:	ldrb	w1, [x3]
  450b14:	cmp	w1, #0x42
  450b18:	b.ne	450a3c <_obstack_memory_used@@Base+0x6438>  // b.any
  450b1c:	mov	x1, x20
  450b20:	mov	x0, x19
  450b24:	ldp	x19, x20, [sp, #16]
  450b28:	ldp	x29, x30, [sp], #48
  450b2c:	b	44d230 <_obstack_memory_used@@Base+0x2c2c>
  450b30:	ldr	x1, [x20, #8]
  450b34:	ldr	w0, [x19, #72]
  450b38:	ldr	x2, [x1]
  450b3c:	add	w0, w0, #0x7
  450b40:	ldr	w1, [x1, #16]
  450b44:	add	w0, w0, w1
  450b48:	str	w0, [x19, #72]
  450b4c:	ldrb	w0, [x2]
  450b50:	cmp	w0, #0x6c
  450b54:	b.ne	450a2c <_obstack_memory_used@@Base+0x6428>  // b.any
  450b58:	ldrb	w0, [x2, #1]
  450b5c:	cmp	w0, #0x69
  450b60:	b.ne	450a2c <_obstack_memory_used@@Base+0x6428>  // b.any
  450b64:	ldrb	w0, [x2, #2]
  450b68:	cbnz	w0, 450a2c <_obstack_memory_used@@Base+0x6428>
  450b6c:	mov	x0, x19
  450b70:	bl	44d0b0 <_obstack_memory_used@@Base+0x2aac>
  450b74:	mov	x2, x20
  450b78:	mov	x3, x0
  450b7c:	mov	w1, #0x37                  	// #55
  450b80:	mov	x0, x19
  450b84:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  450b88:	mov	x20, x0
  450b8c:	ldr	x3, [x19, #24]
  450b90:	ldrb	w1, [x3]
  450b94:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450b98:	add	x3, x3, #0x1
  450b9c:	str	x3, [x0, #24]
  450ba0:	bl	44d0b0 <_obstack_memory_used@@Base+0x2aac>
  450ba4:	mov	x20, x0
  450ba8:	cbz	x0, 450bb8 <_obstack_memory_used@@Base+0x65b4>
  450bac:	mov	x0, x19
  450bb0:	bl	44d618 <_obstack_memory_used@@Base+0x3014>
  450bb4:	cbnz	w0, 450a2c <_obstack_memory_used@@Base+0x6428>
  450bb8:	mov	x20, #0x0                   	// #0
  450bbc:	mov	x0, x20
  450bc0:	ldp	x19, x20, [sp, #16]
  450bc4:	ldp	x29, x30, [sp], #48
  450bc8:	ret
  450bcc:	ldrb	w0, [x3, #1]
  450bd0:	cmp	w0, #0x6e
  450bd4:	b.ne	450a10 <_obstack_memory_used@@Base+0x640c>  // b.any
  450bd8:	add	x3, x3, #0x2
  450bdc:	str	x3, [x19, #24]
  450be0:	b	450a10 <_obstack_memory_used@@Base+0x640c>
  450be4:	ldr	x0, [x0, #64]
  450be8:	cbz	x0, 450bfc <_obstack_memory_used@@Base+0x65f8>
  450bec:	ldr	w1, [x0]
  450bf0:	cbz	w1, 450c78 <_obstack_memory_used@@Base+0x6674>
  450bf4:	cmp	w1, #0x18
  450bf8:	b.eq	450c78 <_obstack_memory_used@@Base+0x6674>  // b.none
  450bfc:	cmp	w2, #0x43
  450c00:	b.eq	450d58 <_obstack_memory_used@@Base+0x6754>  // b.none
  450c04:	ldrb	w1, [x3, #1]
  450c08:	cmp	w1, #0x32
  450c0c:	b.eq	450e5c <_obstack_memory_used@@Base+0x6858>  // b.none
  450c10:	b.hi	450dcc <_obstack_memory_used@@Base+0x67c8>  // b.pmore
  450c14:	cmp	w1, #0x30
  450c18:	b.eq	450df8 <_obstack_memory_used@@Base+0x67f4>  // b.none
  450c1c:	cmp	w1, #0x31
  450c20:	mov	w4, #0x2                   	// #2
  450c24:	b.ne	450de0 <_obstack_memory_used@@Base+0x67dc>  // b.any
  450c28:	add	x1, x3, #0x2
  450c2c:	ldr	w2, [x19, #44]
  450c30:	str	x1, [x19, #24]
  450c34:	ldr	w1, [x19, #40]
  450c38:	cmp	w1, w2
  450c3c:	b.ge	450dec <_obstack_memory_used@@Base+0x67e8>  // b.tcont
  450c40:	mov	w6, #0x18                  	// #24
  450c44:	add	w5, w1, #0x1
  450c48:	ldr	x2, [x19, #32]
  450c4c:	smull	x1, w1, w6
  450c50:	add	x20, x2, x1
  450c54:	str	wzr, [x20, #4]
  450c58:	str	w5, [x19, #40]
  450c5c:	cbz	x0, 450dec <_obstack_memory_used@@Base+0x67e8>
  450c60:	mov	x5, #0x8                   	// #8
  450c64:	str	x5, [x2, x1]
  450c68:	str	w4, [x20, #8]
  450c6c:	str	x0, [x20, #16]
  450c70:	ldrb	w1, [x3, #2]
  450c74:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450c78:	ldr	w2, [x0, #16]
  450c7c:	ldr	w1, [x19, #72]
  450c80:	add	w1, w1, w2
  450c84:	str	w1, [x19, #72]
  450c88:	ldrb	w1, [x3]
  450c8c:	cmp	w1, #0x43
  450c90:	mov	w2, w1
  450c94:	b.eq	450d58 <_obstack_memory_used@@Base+0x6754>  // b.none
  450c98:	cmp	w1, #0x44
  450c9c:	b.eq	450c04 <_obstack_memory_used@@Base+0x6600>  // b.none
  450ca0:	mov	x20, #0x0                   	// #0
  450ca4:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450ca8:	add	x1, x3, #0x1
  450cac:	str	x1, [x0, #24]
  450cb0:	mov	x20, #0x0                   	// #0
  450cb4:	ldrb	w1, [x3, #1]
  450cb8:	cmp	w1, #0x6c
  450cbc:	b.ne	450a34 <_obstack_memory_used@@Base+0x6430>  // b.any
  450cc0:	add	x3, x3, #0x2
  450cc4:	str	x3, [x0, #24]
  450cc8:	bl	4504c0 <_obstack_memory_used@@Base+0x5ebc>
  450ccc:	mov	x11, x0
  450cd0:	ldr	x0, [x19, #24]
  450cd4:	ldrb	w1, [x0]
  450cd8:	cbz	x11, 450a34 <_obstack_memory_used@@Base+0x6430>
  450cdc:	cmp	w1, #0x45
  450ce0:	b.ne	450a34 <_obstack_memory_used@@Base+0x6430>  // b.any
  450ce4:	add	x0, x0, #0x1
  450ce8:	str	x0, [x19, #24]
  450cec:	mov	x0, x19
  450cf0:	bl	44cfb8 <_obstack_memory_used@@Base+0x29b4>
  450cf4:	tbnz	w0, #31, 450e70 <_obstack_memory_used@@Base+0x686c>
  450cf8:	ldp	w1, w2, [x19, #40]
  450cfc:	ldr	x4, [x19, #24]
  450d00:	cmp	w1, w2
  450d04:	b.ge	450e80 <_obstack_memory_used@@Base+0x687c>  // b.tcont
  450d08:	mov	w2, #0x18                  	// #24
  450d0c:	add	w6, w1, #0x1
  450d10:	ldr	x3, [x19, #32]
  450d14:	smull	x1, w1, w2
  450d18:	ldp	w2, w7, [x19, #56]
  450d1c:	add	x20, x3, x1
  450d20:	mov	w5, #0x46                  	// #70
  450d24:	cmp	w2, w7
  450d28:	str	wzr, [x20, #4]
  450d2c:	str	w6, [x19, #40]
  450d30:	str	w5, [x3, x1]
  450d34:	str	x11, [x20, #8]
  450d38:	str	w0, [x20, #16]
  450d3c:	b.ge	450e80 <_obstack_memory_used@@Base+0x687c>  // b.tcont
  450d40:	ldr	x1, [x19, #48]
  450d44:	add	w0, w2, #0x1
  450d48:	str	x20, [x1, w2, sxtw #3]
  450d4c:	str	w0, [x19, #56]
  450d50:	ldrb	w1, [x4]
  450d54:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450d58:	str	x21, [sp, #32]
  450d5c:	ldrb	w1, [x3, #1]
  450d60:	cmp	w1, #0x49
  450d64:	b.eq	450e08 <_obstack_memory_used@@Base+0x6804>  // b.none
  450d68:	sub	w2, w1, #0x31
  450d6c:	and	w2, w2, #0xff
  450d70:	cmp	w2, #0x4
  450d74:	b.hi	450e50 <_obstack_memory_used@@Base+0x684c>  // b.pmore
  450d78:	sub	w21, w1, #0x30
  450d7c:	add	x3, x3, #0x2
  450d80:	str	x3, [x19, #24]
  450d84:	ldp	w1, w2, [x19, #40]
  450d88:	cmp	w1, w2
  450d8c:	b.ge	450e8c <_obstack_memory_used@@Base+0x6888>  // b.tcont
  450d90:	mov	w4, #0x18                  	// #24
  450d94:	add	w3, w1, #0x1
  450d98:	smull	x1, w1, w4
  450d9c:	ldp	x4, x2, [x19, #24]
  450da0:	add	x20, x2, x1
  450da4:	str	wzr, [x20, #4]
  450da8:	str	w3, [x19, #40]
  450dac:	cbz	x0, 450e40 <_obstack_memory_used@@Base+0x683c>
  450db0:	mov	x3, #0x7                   	// #7
  450db4:	str	x3, [x2, x1]
  450db8:	str	w21, [x20, #8]
  450dbc:	str	x0, [x20, #16]
  450dc0:	ldr	x21, [sp, #32]
  450dc4:	ldrb	w1, [x4]
  450dc8:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450dcc:	cmp	w1, #0x34
  450dd0:	b.eq	450e00 <_obstack_memory_used@@Base+0x67fc>  // b.none
  450dd4:	cmp	w1, #0x35
  450dd8:	mov	w4, #0x5                   	// #5
  450ddc:	b.eq	450c28 <_obstack_memory_used@@Base+0x6624>  // b.none
  450de0:	mov	w1, w2
  450de4:	mov	x20, #0x0                   	// #0
  450de8:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450dec:	ldrb	w1, [x3, #2]
  450df0:	mov	x20, #0x0                   	// #0
  450df4:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450df8:	mov	w4, #0x1                   	// #1
  450dfc:	b	450c28 <_obstack_memory_used@@Base+0x6624>
  450e00:	mov	w4, #0x4                   	// #4
  450e04:	b	450c28 <_obstack_memory_used@@Base+0x6624>
  450e08:	add	x0, x3, #0x1
  450e0c:	str	x0, [x19, #24]
  450e10:	ldrb	w1, [x3, #2]
  450e14:	sub	w0, w1, #0x31
  450e18:	and	w0, w0, #0xff
  450e1c:	cmp	w0, #0x4
  450e20:	b.hi	450ea0 <_obstack_memory_used@@Base+0x689c>  // b.pmore
  450e24:	add	x3, x3, #0x3
  450e28:	str	x3, [x19, #24]
  450e2c:	sub	w21, w1, #0x30
  450e30:	mov	x0, x19
  450e34:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  450e38:	ldr	x0, [x19, #64]
  450e3c:	b	450d84 <_obstack_memory_used@@Base+0x6780>
  450e40:	ldrb	w1, [x4]
  450e44:	mov	x20, #0x0                   	// #0
  450e48:	ldr	x21, [sp, #32]
  450e4c:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450e50:	mov	x20, #0x0                   	// #0
  450e54:	ldr	x21, [sp, #32]
  450e58:	b	450bbc <_obstack_memory_used@@Base+0x65b8>
  450e5c:	mov	w4, #0x3                   	// #3
  450e60:	b	450c28 <_obstack_memory_used@@Base+0x6624>
  450e64:	ldrb	w1, [x7]
  450e68:	mov	x20, #0x0                   	// #0
  450e6c:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450e70:	ldr	x0, [x19, #24]
  450e74:	mov	x20, #0x0                   	// #0
  450e78:	ldrb	w1, [x0]
  450e7c:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450e80:	ldrb	w1, [x4]
  450e84:	mov	x20, #0x0                   	// #0
  450e88:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450e8c:	ldr	x0, [x19, #24]
  450e90:	mov	x20, #0x0                   	// #0
  450e94:	ldr	x21, [sp, #32]
  450e98:	ldrb	w1, [x0]
  450e9c:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450ea0:	ldrb	w1, [x3, #1]
  450ea4:	mov	x20, #0x0                   	// #0
  450ea8:	ldr	x21, [sp, #32]
  450eac:	b	450a34 <_obstack_memory_used@@Base+0x6430>
  450eb0:	ldr	x2, [x0, #24]
  450eb4:	ldrb	w1, [x2]
  450eb8:	cmp	w1, #0x4c
  450ebc:	b.ne	450fa4 <_obstack_memory_used@@Base+0x69a0>  // b.any
  450ec0:	stp	x29, x30, [sp, #-32]!
  450ec4:	add	x1, x2, #0x1
  450ec8:	mov	w4, #0x5a                  	// #90
  450ecc:	mov	x29, sp
  450ed0:	str	x19, [sp, #16]
  450ed4:	mov	x19, x0
  450ed8:	str	x1, [x0, #24]
  450edc:	ldrb	w3, [x2, #1]
  450ee0:	cmp	w3, #0x5f
  450ee4:	ccmp	w3, w4, #0x4, ne  // ne = any
  450ee8:	b.eq	450f64 <_obstack_memory_used@@Base+0x6960>  // b.none
  450eec:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  450ef0:	mov	x2, x0
  450ef4:	cbz	x0, 450f54 <_obstack_memory_used@@Base+0x6950>
  450ef8:	ldr	w0, [x0]
  450efc:	cmp	w0, #0x27
  450f00:	b.eq	45101c <_obstack_memory_used@@Base+0x6a18>  // b.none
  450f04:	ldr	x0, [x19, #24]
  450f08:	mov	w1, #0x3d                  	// #61
  450f0c:	ldrb	w4, [x0]
  450f10:	cmp	w4, #0x6e
  450f14:	b.ne	450f2c <_obstack_memory_used@@Base+0x6928>  // b.any
  450f18:	add	x3, x0, #0x1
  450f1c:	str	x3, [x19, #24]
  450f20:	mov	w1, #0x3e                  	// #62
  450f24:	ldrb	w4, [x0, #1]
  450f28:	mov	x0, x3
  450f2c:	cmp	w4, #0x45
  450f30:	b.eq	451044 <_obstack_memory_used@@Base+0x6a40>  // b.none
  450f34:	add	x3, x0, #0x1
  450f38:	b	450f4c <_obstack_memory_used@@Base+0x6948>
  450f3c:	str	x3, [x19, #24]
  450f40:	ldrb	w4, [x3], #1
  450f44:	cmp	w4, #0x45
  450f48:	b.eq	450fc8 <_obstack_memory_used@@Base+0x69c4>  // b.none
  450f4c:	mov	x5, x3
  450f50:	cbnz	w4, 450f3c <_obstack_memory_used@@Base+0x6938>
  450f54:	mov	x0, #0x0                   	// #0
  450f58:	ldr	x19, [sp, #16]
  450f5c:	ldp	x29, x30, [sp], #32
  450f60:	ret
  450f64:	cmp	w3, #0x5f
  450f68:	b.eq	450fac <_obstack_memory_used@@Base+0x69a8>  // b.none
  450f6c:	add	x1, x1, #0x1
  450f70:	str	x1, [x19, #24]
  450f74:	mov	x0, x19
  450f78:	mov	w1, #0x0                   	// #0
  450f7c:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  450f80:	ldr	x1, [x19, #24]
  450f84:	ldrb	w2, [x1]
  450f88:	cmp	w2, #0x45
  450f8c:	b.ne	450f54 <_obstack_memory_used@@Base+0x6950>  // b.any
  450f90:	add	x1, x1, #0x1
  450f94:	str	x1, [x19, #24]
  450f98:	ldr	x19, [sp, #16]
  450f9c:	ldp	x29, x30, [sp], #32
  450fa0:	ret
  450fa4:	mov	x0, #0x0                   	// #0
  450fa8:	ret
  450fac:	add	x1, x2, #0x2
  450fb0:	str	x1, [x19, #24]
  450fb4:	mov	x0, #0x0                   	// #0
  450fb8:	ldrb	w2, [x2, #2]
  450fbc:	cmp	w2, w4
  450fc0:	b.ne	450f88 <_obstack_memory_used@@Base+0x6984>  // b.any
  450fc4:	b	450f6c <_obstack_memory_used@@Base+0x6968>
  450fc8:	sub	w5, w5, w0
  450fcc:	ldp	w3, w4, [x19, #40]
  450fd0:	cmp	w3, w4
  450fd4:	b.ge	45103c <_obstack_memory_used@@Base+0x6a38>  // b.tcont
  450fd8:	mov	w4, #0x18                  	// #24
  450fdc:	add	w7, w3, #0x1
  450fe0:	ldr	x6, [x19, #32]
  450fe4:	smull	x4, w3, w4
  450fe8:	cmp	w5, #0x0
  450fec:	add	x3, x6, x4
  450ff0:	str	wzr, [x3, #4]
  450ff4:	str	w7, [x19, #40]
  450ff8:	b.le	45103c <_obstack_memory_used@@Base+0x6a38>
  450ffc:	str	xzr, [x6, x4]
  451000:	str	x0, [x3, #8]
  451004:	str	w5, [x3, #16]
  451008:	mov	x0, x19
  45100c:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  451010:	ldr	x1, [x19, #24]
  451014:	ldrb	w2, [x1]
  451018:	b	450f88 <_obstack_memory_used@@Base+0x6984>
  45101c:	ldr	x0, [x2, #8]
  451020:	ldr	w1, [x0, #28]
  451024:	cbz	w1, 450f04 <_obstack_memory_used@@Base+0x6900>
  451028:	ldr	w1, [x0, #8]
  45102c:	ldr	w0, [x19, #72]
  451030:	sub	w0, w0, w1
  451034:	str	w0, [x19, #72]
  451038:	b	450f04 <_obstack_memory_used@@Base+0x6900>
  45103c:	mov	x3, #0x0                   	// #0
  451040:	b	451008 <_obstack_memory_used@@Base+0x6a04>
  451044:	mov	w5, #0x0                   	// #0
  451048:	b	450fcc <_obstack_memory_used@@Base+0x69c8>
  45104c:	nop
  451050:	stp	x29, x30, [sp, #-224]!
  451054:	mov	x29, sp
  451058:	stp	x19, x20, [sp, #16]
  45105c:	mov	x19, x0
  451060:	cbz	x2, 4510e8 <_obstack_memory_used@@Base+0x6ae4>
  451064:	stp	x21, x22, [sp, #32]
  451068:	ldr	w22, [x0, #304]
  45106c:	cbnz	w22, 4510b0 <_obstack_memory_used@@Base+0x6aac>
  451070:	ldr	w0, [x2]
  451074:	mov	x20, x2
  451078:	cmp	w0, #0x50
  45107c:	b.ls	451090 <_obstack_memory_used@@Base+0x6a8c>  // b.plast
  451080:	mov	w0, #0x1                   	// #1
  451084:	ldp	x21, x22, [sp, #32]
  451088:	str	w0, [x19, #304]
  45108c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  451090:	mov	w21, w1
  451094:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x209fc>
  451098:	add	x1, x1, #0x4dc
  45109c:	stp	x23, x24, [sp, #48]
  4510a0:	ldrh	w1, [x1, w0, uxtw #1]
  4510a4:	adr	x2, 4510b0 <_obstack_memory_used@@Base+0x6aac>
  4510a8:	add	x1, x2, w1, sxth #2
  4510ac:	br	x1
  4510b0:	ldp	x21, x22, [sp, #32]
  4510b4:	ldp	x19, x20, [sp, #16]
  4510b8:	ldp	x29, x30, [sp], #224
  4510bc:	ret
  4510c0:	ldr	x0, [x20, #16]
  4510c4:	ldr	w1, [x0]
  4510c8:	cmp	w1, #0x3b
  4510cc:	b.ne	4510e0 <_obstack_memory_used@@Base+0x6adc>  // b.any
  4510d0:	ldr	x0, [x0, #16]
  4510d4:	ldr	w0, [x0]
  4510d8:	cmp	w0, #0x3c
  4510dc:	b.eq	4545c8 <_obstack_memory_used@@Base+0x9fc4>  // b.none
  4510e0:	ldp	x21, x22, [sp, #32]
  4510e4:	ldp	x23, x24, [sp, #48]
  4510e8:	mov	w0, #0x1                   	// #1
  4510ec:	str	w0, [x19, #304]
  4510f0:	ldp	x19, x20, [sp, #16]
  4510f4:	ldp	x29, x30, [sp], #224
  4510f8:	ret
  4510fc:	ldp	x1, x2, [x19, #288]
  451100:	add	x0, sp, #0x60
  451104:	stp	x2, x20, [sp, #96]
  451108:	str	wzr, [sp, #112]
  45110c:	str	x1, [sp, #120]
  451110:	str	x0, [x19, #296]
  451114:	ldr	x2, [x20, #8]
  451118:	mov	x0, x19
  45111c:	mov	w1, w21
  451120:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451124:	ldr	w0, [sp, #112]
  451128:	cbz	w0, 4534d4 <_obstack_memory_used@@Base+0x8ed0>
  45112c:	ldr	x0, [sp, #96]
  451130:	str	x0, [x19, #296]
  451134:	cbz	w22, 452d08 <_obstack_memory_used@@Base+0x8704>
  451138:	ldp	x21, x22, [sp, #32]
  45113c:	str	x23, [x19, #288]
  451140:	ldp	x23, x24, [sp, #48]
  451144:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  451148:	ldr	x4, [x19, #296]
  45114c:	cbz	x4, 451288 <_obstack_memory_used@@Base+0x6c84>
  451150:	mov	x1, x4
  451154:	nop
  451158:	ldr	w2, [x1, #16]
  45115c:	cbnz	w2, 45117c <_obstack_memory_used@@Base+0x6b78>
  451160:	ldr	x2, [x1, #8]
  451164:	ldr	w2, [x2]
  451168:	sub	w3, w2, #0x19
  45116c:	cmp	w3, #0x2
  451170:	b.hi	454128 <_obstack_memory_used@@Base+0x9b24>  // b.pmore
  451174:	cmp	w0, w2
  451178:	b.eq	454148 <_obstack_memory_used@@Base+0x9b44>  // b.none
  45117c:	ldr	x1, [x1]
  451180:	cbnz	x1, 451158 <_obstack_memory_used@@Base+0x6b54>
  451184:	b	451288 <_obstack_memory_used@@Base+0x6c84>
  451188:	ldp	x23, x24, [sp, #48]
  45118c:	b	451080 <_obstack_memory_used@@Base+0x6a7c>
  451190:	ldr	x2, [x20, #8]
  451194:	mov	w22, #0x0                   	// #0
  451198:	ldr	w1, [x2]
  45119c:	cmp	w1, #0x27
  4511a0:	b.eq	4539b0 <_obstack_memory_used@@Base+0x93ac>  // b.none
  4511a4:	ldr	x1, [x19, #256]
  4511a8:	add	x0, x1, #0x1
  4511ac:	cmp	x1, #0xff
  4511b0:	b.ne	4511dc <_obstack_memory_used@@Base+0x6bd8>  // b.any
  4511b4:	ldp	x3, x2, [x19, #272]
  4511b8:	strb	wzr, [x19, #255]
  4511bc:	mov	x0, x19
  4511c0:	blr	x3
  4511c4:	ldr	x3, [x19, #320]
  4511c8:	mov	x0, #0x1                   	// #1
  4511cc:	mov	x1, #0x0                   	// #0
  4511d0:	add	x3, x3, x0
  4511d4:	ldr	x2, [x20, #8]
  4511d8:	str	x3, [x19, #320]
  4511dc:	str	x0, [x19, #256]
  4511e0:	mov	w0, #0x28                  	// #40
  4511e4:	strb	w0, [x19, x1]
  4511e8:	mov	w1, w21
  4511ec:	strb	w0, [x19, #264]
  4511f0:	mov	x0, x19
  4511f4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4511f8:	ldr	x1, [x19, #256]
  4511fc:	cmp	x1, #0xff
  451200:	b.eq	4540a0 <_obstack_memory_used@@Base+0x9a9c>  // b.none
  451204:	add	x3, x1, #0x1
  451208:	str	x3, [x19, #256]
  45120c:	mov	w0, #0x29                  	// #41
  451210:	strb	w0, [x19, x1]
  451214:	strb	w0, [x19, #264]
  451218:	ldr	w0, [x20]
  45121c:	cmp	w0, #0x3e
  451220:	b.eq	454164 <_obstack_memory_used@@Base+0x9b60>  // b.none
  451224:	cmp	w22, #0x8
  451228:	b.eq	453f44 <_obstack_memory_used@@Base+0x9940>  // b.none
  45122c:	ldr	x2, [x20, #16]
  451230:	mov	w1, w21
  451234:	mov	x0, x19
  451238:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45123c:	ldp	x21, x22, [sp, #32]
  451240:	ldp	x23, x24, [sp, #48]
  451244:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  451248:	ldr	w2, [x19, #312]
  45124c:	ldr	x0, [x20, #8]
  451250:	ldr	w1, [x0]
  451254:	cbnz	w2, 451264 <_obstack_memory_used@@Base+0x6c60>
  451258:	cmp	w1, #0x5
  45125c:	mov	w22, #0x0                   	// #0
  451260:	b.eq	454524 <_obstack_memory_used@@Base+0x9f20>  // b.none
  451264:	cmp	w1, #0x23
  451268:	ldr	x4, [x19, #296]
  45126c:	b.eq	45357c <_obstack_memory_used@@Base+0x8f78>  // b.none
  451270:	ldr	w2, [x20]
  451274:	cmp	w2, w1
  451278:	b.eq	45357c <_obstack_memory_used@@Base+0x8f78>  // b.none
  45127c:	cmp	w1, #0x24
  451280:	b.eq	452ce4 <_obstack_memory_used@@Base+0x86e0>  // b.none
  451284:	nop
  451288:	ldr	x1, [x19, #288]
  45128c:	add	x0, sp, #0x60
  451290:	stp	x4, x20, [sp, #96]
  451294:	str	wzr, [sp, #112]
  451298:	str	x1, [sp, #120]
  45129c:	str	x0, [x19, #296]
  4512a0:	b	451114 <_obstack_memory_used@@Base+0x6b10>
  4512a4:	ldr	x2, [x20, #8]
  4512a8:	mov	w1, w21
  4512ac:	mov	x0, x19
  4512b0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4512b4:	tbz	w21, #2, 453ee8 <_obstack_memory_used@@Base+0x98e4>
  4512b8:	ldr	x1, [x19, #256]
  4512bc:	add	x0, x1, #0x1
  4512c0:	cmp	x1, #0xff
  4512c4:	b.ne	4512ec <_obstack_memory_used@@Base+0x6ce8>  // b.any
  4512c8:	ldp	x3, x2, [x19, #272]
  4512cc:	strb	wzr, [x19, #255]
  4512d0:	mov	x0, x19
  4512d4:	blr	x3
  4512d8:	ldr	x2, [x19, #320]
  4512dc:	mov	x0, #0x1                   	// #1
  4512e0:	mov	x1, #0x0                   	// #0
  4512e4:	add	x2, x2, x0
  4512e8:	str	x2, [x19, #320]
  4512ec:	str	x0, [x19, #256]
  4512f0:	mov	w0, #0x2e                  	// #46
  4512f4:	strb	w0, [x19, x1]
  4512f8:	strb	w0, [x19, #264]
  4512fc:	ldr	x23, [x20, #16]
  451300:	ldr	w0, [x23]
  451304:	cmp	w0, #0x47
  451308:	b.eq	4541a0 <_obstack_memory_used@@Base+0x9b9c>  // b.none
  45130c:	mov	x2, x23
  451310:	mov	w1, w21
  451314:	mov	x0, x19
  451318:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45131c:	ldp	x21, x22, [sp, #32]
  451320:	ldp	x23, x24, [sp, #48]
  451324:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  451328:	ldp	x3, x4, [x19, #288]
  45132c:	add	x0, sp, #0x60
  451330:	ldr	x2, [x20, #16]
  451334:	str	x0, [x19, #296]
  451338:	mov	w1, w21
  45133c:	mov	x0, x19
  451340:	stp	x4, x20, [sp, #96]
  451344:	str	wzr, [sp, #112]
  451348:	str	x3, [sp, #120]
  45134c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451350:	ldr	w0, [sp, #112]
  451354:	cbz	w0, 453e64 <_obstack_memory_used@@Base+0x9860>
  451358:	ldr	x0, [sp, #96]
  45135c:	ldp	x21, x22, [sp, #32]
  451360:	ldp	x23, x24, [sp, #48]
  451364:	str	x0, [x19, #296]
  451368:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45136c:	ldr	x2, [x20, #8]
  451370:	cbz	x2, 451380 <_obstack_memory_used@@Base+0x6d7c>
  451374:	mov	w1, w21
  451378:	mov	x0, x19
  45137c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451380:	ldr	x0, [x20, #16]
  451384:	cbz	x0, 454110 <_obstack_memory_used@@Base+0x9b0c>
  451388:	ldr	x22, [x19, #256]
  45138c:	cmp	x22, #0xfd
  451390:	b.ls	4513bc <_obstack_memory_used@@Base+0x6db8>  // b.plast
  451394:	strb	wzr, [x19, x22]
  451398:	mov	x1, x22
  45139c:	mov	x0, x19
  4513a0:	mov	x22, #0x0                   	// #0
  4513a4:	ldp	x3, x2, [x19, #272]
  4513a8:	blr	x3
  4513ac:	str	xzr, [x19, #256]
  4513b0:	ldr	x0, [x19, #320]
  4513b4:	add	x0, x0, #0x1
  4513b8:	str	x0, [x19, #320]
  4513bc:	mov	w23, #0x2c                  	// #44
  4513c0:	mov	x24, #0x0                   	// #0
  4513c4:	b	4513e8 <_obstack_memory_used@@Base+0x6de4>
  4513c8:	mov	x0, x22
  4513cc:	add	x22, x22, #0x1
  4513d0:	str	x22, [x19, #256]
  4513d4:	strb	w23, [x19, x0]
  4513d8:	strb	w23, [x19, #264]
  4513dc:	mov	w23, #0x20                  	// #32
  4513e0:	cbnz	x24, 45351c <_obstack_memory_used@@Base+0x8f18>
  4513e4:	mov	x24, #0x1                   	// #1
  4513e8:	cmp	x22, #0xff
  4513ec:	b.ne	4513c8 <_obstack_memory_used@@Base+0x6dc4>  // b.any
  4513f0:	ldp	x3, x2, [x19, #272]
  4513f4:	strb	wzr, [x19, #255]
  4513f8:	mov	x1, x22
  4513fc:	mov	x0, x19
  451400:	mov	x22, #0x1                   	// #1
  451404:	blr	x3
  451408:	ldr	x1, [x19, #320]
  45140c:	mov	x0, #0x0                   	// #0
  451410:	add	x1, x1, x22
  451414:	str	x1, [x19, #320]
  451418:	b	4513d0 <_obstack_memory_used@@Base+0x6dcc>
  45141c:	ldr	x2, [x20, #16]
  451420:	mov	w1, w21
  451424:	mov	x0, x19
  451428:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45142c:	ldp	x21, x22, [sp, #32]
  451430:	ldp	x23, x24, [sp, #48]
  451434:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  451438:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  45143c:	add	x24, x24, #0x1c8
  451440:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451444:	add	x24, x24, #0x1c
  451448:	add	x22, x22, #0x1c9
  45144c:	mov	w23, #0x67                  	// #103
  451450:	ldr	x1, [x19, #256]
  451454:	b	451478 <_obstack_memory_used@@Base+0x6e74>
  451458:	mov	x0, x1
  45145c:	add	x1, x1, #0x1
  451460:	str	x1, [x19, #256]
  451464:	cmp	x22, x24
  451468:	strb	w23, [x19, x0]
  45146c:	strb	w23, [x19, #264]
  451470:	b.eq	45311c <_obstack_memory_used@@Base+0x8b18>  // b.none
  451474:	ldrb	w23, [x22], #1
  451478:	cmp	x1, #0xff
  45147c:	b.ne	451458 <_obstack_memory_used@@Base+0x6e54>  // b.any
  451480:	ldp	x3, x2, [x19, #272]
  451484:	strb	wzr, [x19, #255]
  451488:	mov	x0, x19
  45148c:	blr	x3
  451490:	ldr	x2, [x19, #320]
  451494:	mov	x1, #0x1                   	// #1
  451498:	mov	x0, #0x0                   	// #0
  45149c:	add	x2, x2, x1
  4514a0:	str	x2, [x19, #320]
  4514a4:	b	451460 <_obstack_memory_used@@Base+0x6e5c>
  4514a8:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4514ac:	add	x22, x22, #0x1e8
  4514b0:	add	x24, x22, #0x8
  4514b4:	mov	w23, #0x7b                  	// #123
  4514b8:	ldr	x1, [x19, #256]
  4514bc:	b	4514e4 <_obstack_memory_used@@Base+0x6ee0>
  4514c0:	mov	x0, x1
  4514c4:	add	x1, x1, #0x1
  4514c8:	str	x1, [x19, #256]
  4514cc:	add	x22, x22, #0x1
  4514d0:	strb	w23, [x19, x0]
  4514d4:	cmp	x24, x22
  4514d8:	strb	w23, [x19, #264]
  4514dc:	b.eq	453138 <_obstack_memory_used@@Base+0x8b34>  // b.none
  4514e0:	ldrb	w23, [x22]
  4514e4:	cmp	x1, #0xff
  4514e8:	b.ne	4514c0 <_obstack_memory_used@@Base+0x6ebc>  // b.any
  4514ec:	ldp	x3, x2, [x19, #272]
  4514f0:	strb	wzr, [x19, #255]
  4514f4:	mov	x0, x19
  4514f8:	blr	x3
  4514fc:	ldr	x2, [x19, #320]
  451500:	mov	x1, #0x1                   	// #1
  451504:	mov	x0, #0x0                   	// #0
  451508:	add	x2, x2, x1
  45150c:	str	x2, [x19, #320]
  451510:	b	4514c8 <_obstack_memory_used@@Base+0x6ec4>
  451514:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451518:	add	x23, x23, #0x200
  45151c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451520:	add	x23, x23, #0xe
  451524:	add	x21, x21, #0x201
  451528:	mov	w22, #0x7b                  	// #123
  45152c:	ldr	x1, [x19, #256]
  451530:	b	451554 <_obstack_memory_used@@Base+0x6f50>
  451534:	mov	x0, x1
  451538:	add	x1, x1, #0x1
  45153c:	str	x1, [x19, #256]
  451540:	cmp	x23, x21
  451544:	strb	w22, [x19, x0]
  451548:	strb	w22, [x19, #264]
  45154c:	b.eq	45302c <_obstack_memory_used@@Base+0x8a28>  // b.none
  451550:	ldrb	w22, [x21], #1
  451554:	cmp	x1, #0xff
  451558:	b.ne	451534 <_obstack_memory_used@@Base+0x6f30>  // b.any
  45155c:	ldp	x3, x2, [x19, #272]
  451560:	strb	wzr, [x19, #255]
  451564:	mov	x0, x19
  451568:	blr	x3
  45156c:	ldr	x2, [x19, #320]
  451570:	mov	x1, #0x1                   	// #1
  451574:	mov	x0, #0x0                   	// #0
  451578:	add	x2, x2, x1
  45157c:	str	x2, [x19, #320]
  451580:	b	45153c <_obstack_memory_used@@Base+0x6f38>
  451584:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451588:	add	x24, x24, #0xa0
  45158c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451590:	add	x24, x24, #0x16
  451594:	add	x22, x22, #0xa1
  451598:	mov	w23, #0x74                  	// #116
  45159c:	ldr	x1, [x19, #256]
  4515a0:	b	4515c4 <_obstack_memory_used@@Base+0x6fc0>
  4515a4:	mov	x0, x1
  4515a8:	add	x1, x1, #0x1
  4515ac:	str	x1, [x19, #256]
  4515b0:	cmp	x24, x22
  4515b4:	strb	w23, [x19, x0]
  4515b8:	strb	w23, [x19, #264]
  4515bc:	b.eq	453100 <_obstack_memory_used@@Base+0x8afc>  // b.none
  4515c0:	ldrb	w23, [x22], #1
  4515c4:	cmp	x1, #0xff
  4515c8:	b.ne	4515a4 <_obstack_memory_used@@Base+0x6fa0>  // b.any
  4515cc:	ldp	x3, x2, [x19, #272]
  4515d0:	strb	wzr, [x19, #255]
  4515d4:	mov	x0, x19
  4515d8:	blr	x3
  4515dc:	ldr	x2, [x19, #320]
  4515e0:	mov	x1, #0x1                   	// #1
  4515e4:	mov	x0, #0x0                   	// #0
  4515e8:	add	x2, x2, x1
  4515ec:	str	x2, [x19, #320]
  4515f0:	b	4515ac <_obstack_memory_used@@Base+0x6fa8>
  4515f4:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4515f8:	add	x24, x24, #0xf18
  4515fc:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451600:	add	x24, x24, #0x1e
  451604:	add	x22, x22, #0xf19
  451608:	mov	w23, #0x74                  	// #116
  45160c:	ldr	x1, [x19, #256]
  451610:	b	451634 <_obstack_memory_used@@Base+0x7030>
  451614:	mov	x0, x1
  451618:	add	x1, x1, #0x1
  45161c:	str	x1, [x19, #256]
  451620:	cmp	x24, x22
  451624:	strb	w23, [x19, x0]
  451628:	strb	w23, [x19, #264]
  45162c:	b.eq	453010 <_obstack_memory_used@@Base+0x8a0c>  // b.none
  451630:	ldrb	w23, [x22], #1
  451634:	cmp	x1, #0xff
  451638:	b.ne	451614 <_obstack_memory_used@@Base+0x7010>  // b.any
  45163c:	ldp	x3, x2, [x19, #272]
  451640:	strb	wzr, [x19, #255]
  451644:	mov	x0, x19
  451648:	blr	x3
  45164c:	ldr	x2, [x19, #320]
  451650:	mov	x1, #0x1                   	// #1
  451654:	mov	x0, #0x0                   	// #0
  451658:	add	x2, x2, x1
  45165c:	str	x2, [x19, #320]
  451660:	b	45161c <_obstack_memory_used@@Base+0x7018>
  451664:	ldp	x2, x20, [x20, #8]
  451668:	cbz	x2, 451678 <_obstack_memory_used@@Base+0x7074>
  45166c:	mov	w1, w21
  451670:	mov	x0, x19
  451674:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451678:	ldr	x1, [x19, #256]
  45167c:	add	x0, x1, #0x1
  451680:	cmp	x1, #0xff
  451684:	b.ne	4516ac <_obstack_memory_used@@Base+0x70a8>  // b.any
  451688:	ldp	x3, x2, [x19, #272]
  45168c:	strb	wzr, [x19, #255]
  451690:	mov	x0, x19
  451694:	blr	x3
  451698:	ldr	x2, [x19, #320]
  45169c:	mov	x0, #0x1                   	// #1
  4516a0:	mov	x1, #0x0                   	// #0
  4516a4:	add	x2, x2, x0
  4516a8:	str	x2, [x19, #320]
  4516ac:	str	x0, [x19, #256]
  4516b0:	mov	w0, #0x7b                  	// #123
  4516b4:	strb	w0, [x19, x1]
  4516b8:	mov	x2, x20
  4516bc:	strb	w0, [x19, #264]
  4516c0:	mov	w1, w21
  4516c4:	mov	x0, x19
  4516c8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4516cc:	ldr	x1, [x19, #256]
  4516d0:	add	x0, x1, #0x1
  4516d4:	cmp	x1, #0xff
  4516d8:	b.ne	451700 <_obstack_memory_used@@Base+0x70fc>  // b.any
  4516dc:	ldp	x3, x2, [x19, #272]
  4516e0:	strb	wzr, [x19, #255]
  4516e4:	mov	x0, x19
  4516e8:	blr	x3
  4516ec:	ldr	x2, [x19, #320]
  4516f0:	mov	x0, #0x1                   	// #1
  4516f4:	mov	x1, #0x0                   	// #0
  4516f8:	add	x2, x2, x0
  4516fc:	str	x2, [x19, #320]
  451700:	str	x0, [x19, #256]
  451704:	mov	w0, #0x7d                  	// #125
  451708:	strb	w0, [x19, x1]
  45170c:	strb	w0, [x19, #264]
  451710:	ldp	x21, x22, [sp, #32]
  451714:	ldp	x23, x24, [sp, #48]
  451718:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45171c:	ldr	x22, [x20, #8]
  451720:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451724:	add	x20, x20, #0xf8
  451728:	mov	w21, #0x6f                  	// #111
  45172c:	add	x24, x20, #0x8
  451730:	ldr	w23, [x22, #16]
  451734:	ldr	x1, [x19, #256]
  451738:	b	451760 <_obstack_memory_used@@Base+0x715c>
  45173c:	mov	x0, x1
  451740:	add	x1, x1, #0x1
  451744:	str	x1, [x19, #256]
  451748:	add	x20, x20, #0x1
  45174c:	strb	w21, [x19, x0]
  451750:	cmp	x24, x20
  451754:	strb	w21, [x19, #264]
  451758:	b.eq	452f34 <_obstack_memory_used@@Base+0x8930>  // b.none
  45175c:	ldrb	w21, [x20]
  451760:	cmp	x1, #0xff
  451764:	b.ne	45173c <_obstack_memory_used@@Base+0x7138>  // b.any
  451768:	ldp	x3, x2, [x19, #272]
  45176c:	strb	wzr, [x19, #255]
  451770:	mov	x0, x19
  451774:	blr	x3
  451778:	ldr	x2, [x19, #320]
  45177c:	mov	x1, #0x1                   	// #1
  451780:	mov	x0, #0x0                   	// #0
  451784:	add	x2, x2, x1
  451788:	str	x2, [x19, #320]
  45178c:	b	451744 <_obstack_memory_used@@Base+0x7140>
  451790:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451794:	add	x22, x22, #0x108
  451798:	add	x24, x22, #0x9
  45179c:	mov	w23, #0x6f                  	// #111
  4517a0:	ldr	x1, [x19, #256]
  4517a4:	b	4517cc <_obstack_memory_used@@Base+0x71c8>
  4517a8:	mov	x0, x1
  4517ac:	add	x1, x1, #0x1
  4517b0:	str	x1, [x19, #256]
  4517b4:	add	x22, x22, #0x1
  4517b8:	strb	w23, [x19, x0]
  4517bc:	cmp	x22, x24
  4517c0:	strb	w23, [x19, #264]
  4517c4:	b.eq	452d74 <_obstack_memory_used@@Base+0x8770>  // b.none
  4517c8:	ldrb	w23, [x22]
  4517cc:	cmp	x1, #0xff
  4517d0:	b.ne	4517a8 <_obstack_memory_used@@Base+0x71a4>  // b.any
  4517d4:	ldp	x3, x2, [x19, #272]
  4517d8:	strb	wzr, [x19, #255]
  4517dc:	mov	x0, x19
  4517e0:	blr	x3
  4517e4:	ldr	x2, [x19, #320]
  4517e8:	mov	x1, #0x1                   	// #1
  4517ec:	mov	x0, #0x0                   	// #0
  4517f0:	add	x2, x2, x1
  4517f4:	str	x2, [x19, #320]
  4517f8:	b	4517b0 <_obstack_memory_used@@Base+0x71ac>
  4517fc:	ldr	x2, [x20, #8]
  451800:	mov	w1, w21
  451804:	mov	x0, x19
  451808:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  45180c:	add	x22, x22, #0x210
  451810:	mov	w23, #0x20                  	// #32
  451814:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451818:	add	x24, x22, #0x8
  45181c:	ldr	x1, [x19, #256]
  451820:	b	451848 <_obstack_memory_used@@Base+0x7244>
  451824:	mov	x0, x1
  451828:	add	x1, x1, #0x1
  45182c:	str	x1, [x19, #256]
  451830:	add	x22, x22, #0x1
  451834:	strb	w23, [x19, x0]
  451838:	cmp	x24, x22
  45183c:	strb	w23, [x19, #264]
  451840:	b.eq	452d14 <_obstack_memory_used@@Base+0x8710>  // b.none
  451844:	ldrb	w23, [x22]
  451848:	cmp	x1, #0xff
  45184c:	b.ne	451824 <_obstack_memory_used@@Base+0x7220>  // b.any
  451850:	ldp	x3, x2, [x19, #272]
  451854:	strb	wzr, [x19, #255]
  451858:	mov	x0, x19
  45185c:	blr	x3
  451860:	ldr	x2, [x19, #320]
  451864:	mov	x1, #0x1                   	// #1
  451868:	mov	x0, #0x0                   	// #0
  45186c:	add	x2, x2, x1
  451870:	str	x2, [x19, #320]
  451874:	b	45182c <_obstack_memory_used@@Base+0x7228>
  451878:	ldr	x2, [x20, #8]
  45187c:	mov	w1, w21
  451880:	mov	x0, x19
  451884:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451888:	ldp	x21, x22, [sp, #32]
  45188c:	ldp	x23, x24, [sp, #48]
  451890:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  451894:	and	w22, w21, #0xffffff9f
  451898:	ldr	x3, [x19, #296]
  45189c:	tbnz	w21, #5, 454070 <_obstack_memory_used@@Base+0x9a6c>
  4518a0:	ldr	x2, [x20, #8]
  4518a4:	cbz	x2, 4518ac <_obstack_memory_used@@Base+0x72a8>
  4518a8:	tbz	w21, #6, 4543a4 <_obstack_memory_used@@Base+0x9da0>
  4518ac:	mov	w1, w22
  4518b0:	add	x2, x20, #0x10
  4518b4:	mov	x0, x19
  4518b8:	bl	4556f8 <_obstack_memory_used@@Base+0xb0f4>
  4518bc:	ldp	x21, x22, [sp, #32]
  4518c0:	ldp	x23, x24, [sp, #48]
  4518c4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4518c8:	ldr	x23, [x20, #8]
  4518cc:	ldr	x1, [x19, #256]
  4518d0:	cbz	x23, 45373c <_obstack_memory_used@@Base+0x9138>
  4518d4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4518d8:	add	x20, x20, #0x1a0
  4518dc:	add	x22, x20, #0x6
  4518e0:	mov	w21, #0x7b                  	// #123
  4518e4:	b	45190c <_obstack_memory_used@@Base+0x7308>
  4518e8:	mov	x0, x1
  4518ec:	add	x1, x1, #0x1
  4518f0:	str	x1, [x19, #256]
  4518f4:	add	x20, x20, #0x1
  4518f8:	strb	w21, [x19, x0]
  4518fc:	cmp	x22, x20
  451900:	strb	w21, [x19, #264]
  451904:	b.eq	4537b0 <_obstack_memory_used@@Base+0x91ac>  // b.none
  451908:	ldrb	w21, [x20]
  45190c:	cmp	x1, #0xff
  451910:	b.ne	4518e8 <_obstack_memory_used@@Base+0x72e4>  // b.any
  451914:	ldp	x3, x2, [x19, #272]
  451918:	strb	wzr, [x19, #255]
  45191c:	mov	x0, x19
  451920:	blr	x3
  451924:	ldr	x2, [x19, #320]
  451928:	mov	x1, #0x1                   	// #1
  45192c:	mov	x0, #0x0                   	// #0
  451930:	add	x2, x2, x1
  451934:	str	x2, [x19, #320]
  451938:	b	4518f0 <_obstack_memory_used@@Base+0x72ec>
  45193c:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451940:	add	x24, x24, #0x88
  451944:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451948:	add	x24, x24, #0x11
  45194c:	add	x22, x22, #0x89
  451950:	mov	w23, #0x68                  	// #104
  451954:	ldr	x1, [x19, #256]
  451958:	b	45197c <_obstack_memory_used@@Base+0x7378>
  45195c:	mov	x0, x1
  451960:	add	x1, x1, #0x1
  451964:	str	x1, [x19, #256]
  451968:	cmp	x22, x24
  45196c:	strb	w23, [x19, x0]
  451970:	strb	w23, [x19, #264]
  451974:	b.eq	4533dc <_obstack_memory_used@@Base+0x8dd8>  // b.none
  451978:	ldrb	w23, [x22], #1
  45197c:	cmp	x1, #0xff
  451980:	b.ne	45195c <_obstack_memory_used@@Base+0x7358>  // b.any
  451984:	ldp	x3, x2, [x19, #272]
  451988:	strb	wzr, [x19, #255]
  45198c:	mov	x0, x19
  451990:	blr	x3
  451994:	ldr	x2, [x19, #320]
  451998:	mov	x1, #0x1                   	// #1
  45199c:	mov	x0, #0x0                   	// #0
  4519a0:	add	x2, x2, x1
  4519a4:	str	x2, [x19, #320]
  4519a8:	b	451964 <_obstack_memory_used@@Base+0x7360>
  4519ac:	ldrsw	x22, [x20, #16]
  4519b0:	ldr	x20, [x20, #8]
  4519b4:	cbz	x22, 4548a4 <_obstack_memory_used@@Base+0xa2a0>
  4519b8:	add	x22, x20, x22
  4519bc:	ldr	x1, [x19, #256]
  4519c0:	b	4519e4 <_obstack_memory_used@@Base+0x73e0>
  4519c4:	mov	x0, x1
  4519c8:	add	x1, x1, #0x1
  4519cc:	str	x1, [x19, #256]
  4519d0:	add	x20, x20, #0x1
  4519d4:	strb	w21, [x19, x0]
  4519d8:	cmp	x22, x20
  4519dc:	strb	w21, [x19, #264]
  4519e0:	b.eq	4534e8 <_obstack_memory_used@@Base+0x8ee4>  // b.none
  4519e4:	ldrb	w21, [x20]
  4519e8:	cmp	x1, #0xff
  4519ec:	b.ne	4519c4 <_obstack_memory_used@@Base+0x73c0>  // b.any
  4519f0:	ldp	x3, x2, [x19, #272]
  4519f4:	strb	wzr, [x19, #255]
  4519f8:	mov	x0, x19
  4519fc:	blr	x3
  451a00:	ldr	x2, [x19, #320]
  451a04:	mov	x1, #0x1                   	// #1
  451a08:	mov	x0, #0x0                   	// #0
  451a0c:	add	x2, x2, x1
  451a10:	str	x2, [x19, #320]
  451a14:	b	4519cc <_obstack_memory_used@@Base+0x73c8>
  451a18:	ldp	x1, x5, [x19, #288]
  451a1c:	add	x23, sp, #0x60
  451a20:	stp	x5, x20, [sp, #96]
  451a24:	mov	w22, #0x1                   	// #1
  451a28:	mov	w6, w22
  451a2c:	str	wzr, [sp, #112]
  451a30:	str	x1, [sp, #120]
  451a34:	str	x23, [x19, #296]
  451a38:	mov	x24, x5
  451a3c:	mov	x0, x5
  451a40:	mov	x5, x23
  451a44:	cbnz	x24, 451a90 <_obstack_memory_used@@Base+0x748c>
  451a48:	b	454bd4 <_obstack_memory_used@@Base+0xa5d0>
  451a4c:	ldr	w1, [x0, #16]
  451a50:	cbnz	w1, 451a88 <_obstack_memory_used@@Base+0x7484>
  451a54:	cmp	w22, #0x3
  451a58:	b.hi	454390 <_obstack_memory_used@@Base+0x9d8c>  // b.pmore
  451a5c:	ubfiz	x1, x22, #5, #32
  451a60:	add	w22, w22, #0x1
  451a64:	add	x4, x23, x1
  451a68:	ldp	x2, x3, [x0]
  451a6c:	stp	x2, x3, [x4]
  451a70:	ldp	x2, x3, [x0, #16]
  451a74:	stp	x2, x3, [x4, #16]
  451a78:	str	x5, [x23, x1]
  451a7c:	mov	x5, x4
  451a80:	str	x4, [x19, #296]
  451a84:	str	w6, [x0, #16]
  451a88:	ldr	x0, [x0]
  451a8c:	cbz	x0, 451aa4 <_obstack_memory_used@@Base+0x74a0>
  451a90:	ldr	x1, [x0, #8]
  451a94:	ldr	w1, [x1]
  451a98:	sub	w1, w1, #0x19
  451a9c:	cmp	w1, #0x2
  451aa0:	b.ls	451a4c <_obstack_memory_used@@Base+0x7448>  // b.plast
  451aa4:	ldr	x2, [x20, #16]
  451aa8:	mov	x0, x19
  451aac:	mov	w1, w21
  451ab0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451ab4:	str	x24, [x19, #296]
  451ab8:	ldr	w0, [sp, #112]
  451abc:	cbnz	w0, 45411c <_obstack_memory_used@@Base+0x9b18>
  451ac0:	ubfiz	x0, x22, #5, #32
  451ac4:	cmp	w22, #0x1
  451ac8:	add	x23, x23, x0
  451acc:	b.eq	451af0 <_obstack_memory_used@@Base+0x74ec>  // b.none
  451ad0:	ldur	x2, [x23, #-24]
  451ad4:	sub	w22, w22, #0x1
  451ad8:	mov	w1, w21
  451adc:	mov	x0, x19
  451ae0:	sub	x23, x23, #0x20
  451ae4:	bl	454ef8 <_obstack_memory_used@@Base+0xa8f4>
  451ae8:	cmp	w22, #0x1
  451aec:	b.ne	451ad0 <_obstack_memory_used@@Base+0x74cc>  // b.any
  451af0:	ldr	x3, [x19, #296]
  451af4:	mov	w1, w21
  451af8:	add	x2, x20, #0x8
  451afc:	mov	x0, x19
  451b00:	bl	455d78 <_obstack_memory_used@@Base+0xb774>
  451b04:	ldp	x21, x22, [sp, #32]
  451b08:	ldp	x23, x24, [sp, #48]
  451b0c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  451b10:	ldrsh	w0, [x20, #18]
  451b14:	cbnz	w0, 453e78 <_obstack_memory_used@@Base+0x9874>
  451b18:	ldr	x2, [x20, #8]
  451b1c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x409fc>
  451b20:	add	x0, x0, #0xdf0
  451b24:	add	x0, x0, #0x288
  451b28:	ldr	x1, [x2, #8]
  451b2c:	cmp	x1, x0
  451b30:	b.eq	45396c <_obstack_memory_used@@Base+0x9368>  // b.none
  451b34:	mov	w1, w21
  451b38:	mov	x0, x19
  451b3c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451b40:	ldr	x0, [x19, #256]
  451b44:	add	x1, x0, #0x1
  451b48:	cmp	x0, #0xff
  451b4c:	b.ne	451b78 <_obstack_memory_used@@Base+0x7574>  // b.any
  451b50:	ldp	x3, x2, [x19, #272]
  451b54:	strb	wzr, [x19, #255]
  451b58:	mov	x1, x0
  451b5c:	mov	x0, x19
  451b60:	blr	x3
  451b64:	ldr	x2, [x19, #320]
  451b68:	mov	x1, #0x1                   	// #1
  451b6c:	mov	x0, #0x0                   	// #0
  451b70:	add	x2, x2, x1
  451b74:	str	x2, [x19, #320]
  451b78:	str	x1, [x19, #256]
  451b7c:	mov	w2, #0x20                  	// #32
  451b80:	strb	w2, [x19, x0]
  451b84:	strb	w2, [x19, #264]
  451b88:	ldrsh	w0, [x20, #16]
  451b8c:	cbnz	w0, 453880 <_obstack_memory_used@@Base+0x927c>
  451b90:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451b94:	add	x20, x20, #0xe8
  451b98:	add	x22, x20, #0x6
  451b9c:	mov	w21, #0x5f                  	// #95
  451ba0:	b	451bc8 <_obstack_memory_used@@Base+0x75c4>
  451ba4:	mov	x0, x1
  451ba8:	add	x1, x1, #0x1
  451bac:	str	x1, [x19, #256]
  451bb0:	add	x20, x20, #0x1
  451bb4:	strb	w21, [x19, x0]
  451bb8:	cmp	x20, x22
  451bbc:	strb	w21, [x19, #264]
  451bc0:	b.eq	4538f4 <_obstack_memory_used@@Base+0x92f0>  // b.none
  451bc4:	ldrb	w21, [x20]
  451bc8:	cmp	x1, #0xff
  451bcc:	b.ne	451ba4 <_obstack_memory_used@@Base+0x75a0>  // b.any
  451bd0:	ldp	x3, x2, [x19, #272]
  451bd4:	strb	wzr, [x19, #255]
  451bd8:	mov	x0, x19
  451bdc:	blr	x3
  451be0:	ldr	x2, [x19, #320]
  451be4:	mov	x1, #0x1                   	// #1
  451be8:	mov	x0, #0x0                   	// #0
  451bec:	add	x2, x2, x1
  451bf0:	str	x2, [x19, #320]
  451bf4:	b	451bac <_obstack_memory_used@@Base+0x75a8>
  451bf8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451bfc:	add	x24, x24, #0xfc0
  451c00:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451c04:	add	x24, x24, #0x15
  451c08:	add	x22, x22, #0xfc1
  451c0c:	mov	w23, #0x6e                  	// #110
  451c10:	ldr	x1, [x19, #256]
  451c14:	b	451c38 <_obstack_memory_used@@Base+0x7634>
  451c18:	mov	x0, x1
  451c1c:	add	x1, x1, #0x1
  451c20:	str	x1, [x19, #256]
  451c24:	cmp	x24, x22
  451c28:	strb	w23, [x19, x0]
  451c2c:	strb	w23, [x19, #264]
  451c30:	b.eq	4533f8 <_obstack_memory_used@@Base+0x8df4>  // b.none
  451c34:	ldrb	w23, [x22], #1
  451c38:	cmp	x1, #0xff
  451c3c:	b.ne	451c18 <_obstack_memory_used@@Base+0x7614>  // b.any
  451c40:	ldp	x3, x2, [x19, #272]
  451c44:	strb	wzr, [x19, #255]
  451c48:	mov	x0, x19
  451c4c:	blr	x3
  451c50:	ldr	x2, [x19, #320]
  451c54:	mov	x1, #0x1                   	// #1
  451c58:	mov	x0, #0x0                   	// #0
  451c5c:	add	x2, x2, x1
  451c60:	str	x2, [x19, #320]
  451c64:	b	451c20 <_obstack_memory_used@@Base+0x761c>
  451c68:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451c6c:	add	x24, x24, #0xfd8
  451c70:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451c74:	add	x24, x24, #0x11
  451c78:	add	x22, x22, #0xfd9
  451c7c:	mov	w23, #0x76                  	// #118
  451c80:	ldr	x1, [x19, #256]
  451c84:	b	451ca8 <_obstack_memory_used@@Base+0x76a4>
  451c88:	mov	x0, x1
  451c8c:	add	x1, x1, #0x1
  451c90:	str	x1, [x19, #256]
  451c94:	cmp	x24, x22
  451c98:	strb	w23, [x19, x0]
  451c9c:	strb	w23, [x19, #264]
  451ca0:	b.eq	453414 <_obstack_memory_used@@Base+0x8e10>  // b.none
  451ca4:	ldrb	w23, [x22], #1
  451ca8:	cmp	x1, #0xff
  451cac:	b.ne	451c88 <_obstack_memory_used@@Base+0x7684>  // b.any
  451cb0:	ldp	x3, x2, [x19, #272]
  451cb4:	strb	wzr, [x19, #255]
  451cb8:	mov	x0, x19
  451cbc:	blr	x3
  451cc0:	ldr	x2, [x19, #320]
  451cc4:	mov	x1, #0x1                   	// #1
  451cc8:	mov	x0, #0x0                   	// #0
  451ccc:	add	x2, x2, x1
  451cd0:	str	x2, [x19, #320]
  451cd4:	b	451c90 <_obstack_memory_used@@Base+0x768c>
  451cd8:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451cdc:	add	x24, x24, #0xff0
  451ce0:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451ce4:	add	x24, x24, #0x1a
  451ce8:	add	x22, x22, #0xff1
  451cec:	mov	w23, #0x63                  	// #99
  451cf0:	ldr	x1, [x19, #256]
  451cf4:	b	451d18 <_obstack_memory_used@@Base+0x7714>
  451cf8:	mov	x0, x1
  451cfc:	add	x1, x1, #0x1
  451d00:	str	x1, [x19, #256]
  451d04:	cmp	x24, x22
  451d08:	strb	w23, [x19, x0]
  451d0c:	strb	w23, [x19, #264]
  451d10:	b.eq	453430 <_obstack_memory_used@@Base+0x8e2c>  // b.none
  451d14:	ldrb	w23, [x22], #1
  451d18:	cmp	x1, #0xff
  451d1c:	b.ne	451cf8 <_obstack_memory_used@@Base+0x76f4>  // b.any
  451d20:	ldp	x3, x2, [x19, #272]
  451d24:	strb	wzr, [x19, #255]
  451d28:	mov	x0, x19
  451d2c:	blr	x3
  451d30:	ldr	x2, [x19, #320]
  451d34:	mov	x1, #0x1                   	// #1
  451d38:	mov	x0, #0x0                   	// #0
  451d3c:	add	x2, x2, x1
  451d40:	str	x2, [x19, #320]
  451d44:	b	451d00 <_obstack_memory_used@@Base+0x76fc>
  451d48:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451d4c:	add	x24, x24, #0x10
  451d50:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451d54:	add	x24, x24, #0xf
  451d58:	add	x22, x22, #0x11
  451d5c:	mov	w23, #0x6a                  	// #106
  451d60:	ldr	x1, [x19, #256]
  451d64:	b	451d88 <_obstack_memory_used@@Base+0x7784>
  451d68:	mov	x0, x1
  451d6c:	add	x1, x1, #0x1
  451d70:	str	x1, [x19, #256]
  451d74:	cmp	x22, x24
  451d78:	strb	w23, [x19, x0]
  451d7c:	strb	w23, [x19, #264]
  451d80:	b.eq	452d90 <_obstack_memory_used@@Base+0x878c>  // b.none
  451d84:	ldrb	w23, [x22], #1
  451d88:	cmp	x1, #0xff
  451d8c:	b.ne	451d68 <_obstack_memory_used@@Base+0x7764>  // b.any
  451d90:	ldp	x3, x2, [x19, #272]
  451d94:	strb	wzr, [x19, #255]
  451d98:	mov	x0, x19
  451d9c:	blr	x3
  451da0:	ldr	x2, [x19, #320]
  451da4:	mov	x1, #0x1                   	// #1
  451da8:	mov	x0, #0x0                   	// #0
  451dac:	add	x2, x2, x1
  451db0:	str	x2, [x19, #320]
  451db4:	b	451d70 <_obstack_memory_used@@Base+0x776c>
  451db8:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451dbc:	add	x24, x24, #0x70
  451dc0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451dc4:	add	x24, x24, #0x15
  451dc8:	add	x22, x22, #0x71
  451dcc:	mov	w23, #0x72                  	// #114
  451dd0:	ldr	x1, [x19, #256]
  451dd4:	b	451df8 <_obstack_memory_used@@Base+0x77f4>
  451dd8:	mov	x0, x1
  451ddc:	add	x1, x1, #0x1
  451de0:	str	x1, [x19, #256]
  451de4:	cmp	x24, x22
  451de8:	strb	w23, [x19, x0]
  451dec:	strb	w23, [x19, #264]
  451df0:	b.eq	452dc8 <_obstack_memory_used@@Base+0x87c4>  // b.none
  451df4:	ldrb	w23, [x22], #1
  451df8:	cmp	x1, #0xff
  451dfc:	b.ne	451dd8 <_obstack_memory_used@@Base+0x77d4>  // b.any
  451e00:	ldp	x3, x2, [x19, #272]
  451e04:	strb	wzr, [x19, #255]
  451e08:	mov	x0, x19
  451e0c:	blr	x3
  451e10:	ldr	x2, [x19, #320]
  451e14:	mov	x1, #0x1                   	// #1
  451e18:	mov	x0, #0x0                   	// #0
  451e1c:	add	x2, x2, x1
  451e20:	str	x2, [x19, #320]
  451e24:	b	451de0 <_obstack_memory_used@@Base+0x77dc>
  451e28:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451e2c:	add	x24, x24, #0x38
  451e30:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451e34:	add	x24, x24, #0x16
  451e38:	add	x22, x22, #0x39
  451e3c:	mov	w23, #0x54                  	// #84
  451e40:	ldr	x1, [x19, #256]
  451e44:	b	451e68 <_obstack_memory_used@@Base+0x7864>
  451e48:	mov	x0, x1
  451e4c:	add	x1, x1, #0x1
  451e50:	str	x1, [x19, #256]
  451e54:	cmp	x22, x24
  451e58:	strb	w23, [x19, x0]
  451e5c:	strb	w23, [x19, #264]
  451e60:	b.eq	453388 <_obstack_memory_used@@Base+0x8d84>  // b.none
  451e64:	ldrb	w23, [x22], #1
  451e68:	cmp	x1, #0xff
  451e6c:	b.ne	451e48 <_obstack_memory_used@@Base+0x7844>  // b.any
  451e70:	ldp	x3, x2, [x19, #272]
  451e74:	strb	wzr, [x19, #255]
  451e78:	mov	x0, x19
  451e7c:	blr	x3
  451e80:	ldr	x2, [x19, #320]
  451e84:	mov	x1, #0x1                   	// #1
  451e88:	mov	x0, #0x0                   	// #0
  451e8c:	add	x2, x2, x1
  451e90:	str	x2, [x19, #320]
  451e94:	b	451e50 <_obstack_memory_used@@Base+0x784c>
  451e98:	ldr	x1, [x20, #8]
  451e9c:	mov	x0, x19
  451ea0:	mov	w24, #0x0                   	// #0
  451ea4:	bl	44d728 <_obstack_memory_used@@Base+0x3124>
  451ea8:	cbz	x0, 4548bc <_obstack_memory_used@@Base+0xa2b8>
  451eac:	stp	x25, x26, [sp, #64]
  451eb0:	ldr	w1, [x0]
  451eb4:	cmp	w1, #0x2f
  451eb8:	b.ne	453564 <_obstack_memory_used@@Base+0x8f60>  // b.any
  451ebc:	ldr	x1, [x0, #8]
  451ec0:	cbz	x1, 453564 <_obstack_memory_used@@Base+0x8f60>
  451ec4:	ldr	x0, [x0, #16]
  451ec8:	add	w24, w24, #0x1
  451ecc:	cbnz	x0, 451eb0 <_obstack_memory_used@@Base+0x78ac>
  451ed0:	ldr	x25, [x20, #8]
  451ed4:	sub	w26, w24, #0x1
  451ed8:	b	451ee8 <_obstack_memory_used@@Base+0x78e4>
  451edc:	add	w22, w22, #0x1
  451ee0:	cmp	w22, w24
  451ee4:	b.ge	45350c <_obstack_memory_used@@Base+0x8f08>  // b.tcont
  451ee8:	str	w22, [x19, #316]
  451eec:	mov	x2, x25
  451ef0:	mov	w1, w21
  451ef4:	mov	x0, x19
  451ef8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451efc:	cmp	w26, w22
  451f00:	b.le	451edc <_obstack_memory_used@@Base+0x78d8>
  451f04:	mov	w20, #0x2c                  	// #44
  451f08:	mov	x23, #0x0                   	// #0
  451f0c:	ldr	x1, [x19, #256]
  451f10:	b	451f34 <_obstack_memory_used@@Base+0x7930>
  451f14:	mov	x0, x1
  451f18:	add	x1, x1, #0x1
  451f1c:	str	x1, [x19, #256]
  451f20:	strb	w20, [x19, x0]
  451f24:	strb	w20, [x19, #264]
  451f28:	mov	w20, #0x20                  	// #32
  451f2c:	cbnz	x23, 451edc <_obstack_memory_used@@Base+0x78d8>
  451f30:	mov	x23, #0x1                   	// #1
  451f34:	cmp	x1, #0xff
  451f38:	b.ne	451f14 <_obstack_memory_used@@Base+0x7910>  // b.any
  451f3c:	ldp	x3, x2, [x19, #272]
  451f40:	strb	wzr, [x19, #255]
  451f44:	mov	x0, x19
  451f48:	blr	x3
  451f4c:	ldr	x2, [x19, #320]
  451f50:	mov	x1, #0x1                   	// #1
  451f54:	mov	x0, #0x0                   	// #0
  451f58:	add	x2, x2, x1
  451f5c:	str	x2, [x19, #320]
  451f60:	b	451f1c <_obstack_memory_used@@Base+0x7918>
  451f64:	ldr	x2, [x20, #8]
  451f68:	mov	w1, w21
  451f6c:	mov	x0, x19
  451f70:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451f74:	add	x24, x24, #0xee8
  451f78:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  451f7c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  451f80:	add	x24, x24, #0x5
  451f84:	add	x22, x22, #0xee9
  451f88:	mov	w23, #0x5b                  	// #91
  451f8c:	ldr	x1, [x19, #256]
  451f90:	b	451fb4 <_obstack_memory_used@@Base+0x79b0>
  451f94:	mov	x0, x1
  451f98:	add	x1, x1, #0x1
  451f9c:	str	x1, [x19, #256]
  451fa0:	cmp	x24, x22
  451fa4:	strb	w23, [x19, x0]
  451fa8:	strb	w23, [x19, #264]
  451fac:	b.eq	452ed4 <_obstack_memory_used@@Base+0x88d0>  // b.none
  451fb0:	ldrb	w23, [x22], #1
  451fb4:	cmp	x1, #0xff
  451fb8:	b.ne	451f94 <_obstack_memory_used@@Base+0x7990>  // b.any
  451fbc:	ldp	x3, x2, [x19, #272]
  451fc0:	strb	wzr, [x19, #255]
  451fc4:	mov	x0, x19
  451fc8:	blr	x3
  451fcc:	ldr	x2, [x19, #320]
  451fd0:	mov	x1, #0x1                   	// #1
  451fd4:	mov	x0, #0x0                   	// #0
  451fd8:	add	x2, x2, x1
  451fdc:	str	x2, [x19, #320]
  451fe0:	b	451f9c <_obstack_memory_used@@Base+0x7998>
  451fe4:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451fe8:	add	x24, x24, #0xb8
  451fec:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  451ff0:	add	x24, x24, #0x1a
  451ff4:	add	x22, x22, #0xb9
  451ff8:	mov	w23, #0x6e                  	// #110
  451ffc:	ldr	x1, [x19, #256]
  452000:	b	452024 <_obstack_memory_used@@Base+0x7a20>
  452004:	mov	x0, x1
  452008:	add	x1, x1, #0x1
  45200c:	str	x1, [x19, #256]
  452010:	cmp	x24, x22
  452014:	strb	w23, [x19, x0]
  452018:	strb	w23, [x19, #264]
  45201c:	b.eq	452e9c <_obstack_memory_used@@Base+0x8898>  // b.none
  452020:	ldrb	w23, [x22], #1
  452024:	cmp	x1, #0xff
  452028:	b.ne	452004 <_obstack_memory_used@@Base+0x7a00>  // b.any
  45202c:	ldp	x3, x2, [x19, #272]
  452030:	strb	wzr, [x19, #255]
  452034:	mov	x0, x19
  452038:	blr	x3
  45203c:	ldr	x2, [x19, #320]
  452040:	mov	x1, #0x1                   	// #1
  452044:	mov	x0, #0x0                   	// #0
  452048:	add	x2, x2, x1
  45204c:	str	x2, [x19, #320]
  452050:	b	45200c <_obstack_memory_used@@Base+0x7a08>
  452054:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  452058:	add	x24, x24, #0x20
  45205c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  452060:	add	x24, x24, #0x13
  452064:	add	x22, x22, #0x21
  452068:	mov	w23, #0x67                  	// #103
  45206c:	ldr	x1, [x19, #256]
  452070:	b	452094 <_obstack_memory_used@@Base+0x7a90>
  452074:	mov	x0, x1
  452078:	add	x1, x1, #0x1
  45207c:	str	x1, [x19, #256]
  452080:	cmp	x24, x22
  452084:	strb	w23, [x19, x0]
  452088:	strb	w23, [x19, #264]
  45208c:	b.eq	452dac <_obstack_memory_used@@Base+0x87a8>  // b.none
  452090:	ldrb	w23, [x22], #1
  452094:	cmp	x1, #0xff
  452098:	b.ne	452074 <_obstack_memory_used@@Base+0x7a70>  // b.any
  45209c:	ldp	x3, x2, [x19, #272]
  4520a0:	strb	wzr, [x19, #255]
  4520a4:	mov	x0, x19
  4520a8:	blr	x3
  4520ac:	ldr	x2, [x19, #320]
  4520b0:	mov	x1, #0x1                   	// #1
  4520b4:	mov	x0, #0x0                   	// #0
  4520b8:	add	x2, x2, x1
  4520bc:	str	x2, [x19, #320]
  4520c0:	b	45207c <_obstack_memory_used@@Base+0x7a78>
  4520c4:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4520c8:	add	x24, x24, #0x50
  4520cc:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4520d0:	add	x24, x24, #0x19
  4520d4:	add	x22, x22, #0x51
  4520d8:	mov	w23, #0x54                  	// #84
  4520dc:	ldr	x1, [x19, #256]
  4520e0:	b	452104 <_obstack_memory_used@@Base+0x7b00>
  4520e4:	mov	x0, x1
  4520e8:	add	x1, x1, #0x1
  4520ec:	str	x1, [x19, #256]
  4520f0:	cmp	x24, x22
  4520f4:	strb	w23, [x19, x0]
  4520f8:	strb	w23, [x19, #264]
  4520fc:	b.eq	4533a4 <_obstack_memory_used@@Base+0x8da0>  // b.none
  452100:	ldrb	w23, [x22], #1
  452104:	cmp	x1, #0xff
  452108:	b.ne	4520e4 <_obstack_memory_used@@Base+0x7ae0>  // b.any
  45210c:	ldp	x3, x2, [x19, #272]
  452110:	strb	wzr, [x19, #255]
  452114:	mov	x0, x19
  452118:	blr	x3
  45211c:	ldr	x2, [x19, #320]
  452120:	mov	x1, #0x1                   	// #1
  452124:	mov	x0, #0x0                   	// #0
  452128:	add	x2, x2, x1
  45212c:	str	x2, [x19, #320]
  452130:	b	4520ec <_obstack_memory_used@@Base+0x7ae8>
  452134:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  452138:	add	x22, x22, #0xf48
  45213c:	add	x24, x22, #0x8
  452140:	mov	w23, #0x56                  	// #86
  452144:	ldr	x1, [x19, #256]
  452148:	b	452170 <_obstack_memory_used@@Base+0x7b6c>
  45214c:	mov	x0, x1
  452150:	add	x1, x1, #0x1
  452154:	str	x1, [x19, #256]
  452158:	add	x22, x22, #0x1
  45215c:	strb	w23, [x19, x0]
  452160:	cmp	x24, x22
  452164:	strb	w23, [x19, #264]
  452168:	b.eq	4532f0 <_obstack_memory_used@@Base+0x8cec>  // b.none
  45216c:	ldrb	w23, [x22]
  452170:	cmp	x1, #0xff
  452174:	b.ne	45214c <_obstack_memory_used@@Base+0x7b48>  // b.any
  452178:	ldp	x3, x2, [x19, #272]
  45217c:	strb	wzr, [x19, #255]
  452180:	mov	x0, x19
  452184:	blr	x3
  452188:	ldr	x2, [x19, #320]
  45218c:	mov	x1, #0x1                   	// #1
  452190:	mov	x0, #0x0                   	// #0
  452194:	add	x2, x2, x1
  452198:	str	x2, [x19, #320]
  45219c:	b	452154 <_obstack_memory_used@@Base+0x7b50>
  4521a0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4521a4:	add	x24, x24, #0xf58
  4521a8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4521ac:	add	x24, x24, #0x18
  4521b0:	add	x22, x22, #0xf59
  4521b4:	mov	w23, #0x63                  	// #99
  4521b8:	ldr	x1, [x19, #256]
  4521bc:	b	4521e0 <_obstack_memory_used@@Base+0x7bdc>
  4521c0:	mov	x0, x1
  4521c4:	add	x1, x1, #0x1
  4521c8:	str	x1, [x19, #256]
  4521cc:	cmp	x24, x22
  4521d0:	strb	w23, [x19, x0]
  4521d4:	strb	w23, [x19, #264]
  4521d8:	b.eq	45330c <_obstack_memory_used@@Base+0x8d08>  // b.none
  4521dc:	ldrb	w23, [x22], #1
  4521e0:	cmp	x1, #0xff
  4521e4:	b.ne	4521c0 <_obstack_memory_used@@Base+0x7bbc>  // b.any
  4521e8:	ldp	x3, x2, [x19, #272]
  4521ec:	strb	wzr, [x19, #255]
  4521f0:	mov	x0, x19
  4521f4:	blr	x3
  4521f8:	ldr	x2, [x19, #320]
  4521fc:	mov	x1, #0x1                   	// #1
  452200:	mov	x0, #0x0                   	// #0
  452204:	add	x2, x2, x1
  452208:	str	x2, [x19, #320]
  45220c:	b	4521c8 <_obstack_memory_used@@Base+0x7bc4>
  452210:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  452214:	add	x24, x24, #0xf80
  452218:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  45221c:	add	x24, x24, #0xd
  452220:	add	x22, x22, #0xf81
  452224:	mov	w23, #0x74                  	// #116
  452228:	ldr	x1, [x19, #256]
  45222c:	b	452250 <_obstack_memory_used@@Base+0x7c4c>
  452230:	mov	x0, x1
  452234:	add	x1, x1, #0x1
  452238:	str	x1, [x19, #256]
  45223c:	cmp	x24, x22
  452240:	strb	w23, [x19, x0]
  452244:	strb	w23, [x19, #264]
  452248:	b.eq	452e64 <_obstack_memory_used@@Base+0x8860>  // b.none
  45224c:	ldrb	w23, [x22], #1
  452250:	cmp	x1, #0xff
  452254:	b.ne	452230 <_obstack_memory_used@@Base+0x7c2c>  // b.any
  452258:	ldp	x3, x2, [x19, #272]
  45225c:	strb	wzr, [x19, #255]
  452260:	mov	x0, x19
  452264:	blr	x3
  452268:	ldr	x2, [x19, #320]
  45226c:	mov	x1, #0x1                   	// #1
  452270:	mov	x0, #0x0                   	// #0
  452274:	add	x2, x2, x1
  452278:	str	x2, [x19, #320]
  45227c:	b	452238 <_obstack_memory_used@@Base+0x7c34>
  452280:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  452284:	add	x24, x24, #0xf90
  452288:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  45228c:	add	x24, x24, #0x12
  452290:	add	x22, x22, #0xf91
  452294:	mov	w23, #0x74                  	// #116
  452298:	ldr	x1, [x19, #256]
  45229c:	b	4522c0 <_obstack_memory_used@@Base+0x7cbc>
  4522a0:	mov	x0, x1
  4522a4:	add	x1, x1, #0x1
  4522a8:	str	x1, [x19, #256]
  4522ac:	cmp	x24, x22
  4522b0:	strb	w23, [x19, x0]
  4522b4:	strb	w23, [x19, #264]
  4522b8:	b.eq	452e80 <_obstack_memory_used@@Base+0x887c>  // b.none
  4522bc:	ldrb	w23, [x22], #1
  4522c0:	cmp	x1, #0xff
  4522c4:	b.ne	4522a0 <_obstack_memory_used@@Base+0x7c9c>  // b.any
  4522c8:	ldp	x3, x2, [x19, #272]
  4522cc:	strb	wzr, [x19, #255]
  4522d0:	mov	x0, x19
  4522d4:	blr	x3
  4522d8:	ldr	x2, [x19, #320]
  4522dc:	mov	x1, #0x1                   	// #1
  4522e0:	mov	x0, #0x0                   	// #0
  4522e4:	add	x2, x2, x1
  4522e8:	str	x2, [x19, #320]
  4522ec:	b	4522a8 <_obstack_memory_used@@Base+0x7ca4>
  4522f0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4522f4:	add	x24, x24, #0xfa8
  4522f8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4522fc:	add	x24, x24, #0x10
  452300:	add	x22, x22, #0xfa9
  452304:	mov	w23, #0x74                  	// #116
  452308:	ldr	x1, [x19, #256]
  45230c:	b	452330 <_obstack_memory_used@@Base+0x7d2c>
  452310:	mov	x0, x1
  452314:	add	x1, x1, #0x1
  452318:	str	x1, [x19, #256]
  45231c:	cmp	x24, x22
  452320:	strb	w23, [x19, x0]
  452324:	strb	w23, [x19, #264]
  452328:	b.eq	4532d4 <_obstack_memory_used@@Base+0x8cd0>  // b.none
  45232c:	ldrb	w23, [x22], #1
  452330:	cmp	x1, #0xff
  452334:	b.ne	452310 <_obstack_memory_used@@Base+0x7d0c>  // b.any
  452338:	ldp	x3, x2, [x19, #272]
  45233c:	strb	wzr, [x19, #255]
  452340:	mov	x0, x19
  452344:	blr	x3
  452348:	ldr	x2, [x19, #320]
  45234c:	mov	x1, #0x1                   	// #1
  452350:	mov	x0, #0x0                   	// #0
  452354:	add	x2, x2, x1
  452358:	str	x2, [x19, #320]
  45235c:	b	452318 <_obstack_memory_used@@Base+0x7d14>
  452360:	stp	x25, x26, [sp, #64]
  452364:	ldr	x25, [x20, #8]
  452368:	ldr	x22, [x19, #296]
  45236c:	str	xzr, [x19, #296]
  452370:	cbz	x25, 454428 <_obstack_memory_used@@Base+0x9e24>
  452374:	add	x23, sp, #0x60
  452378:	mov	x2, #0x1f                  	// #31
  45237c:	ldr	x6, [x19, #288]
  452380:	mov	x3, x23
  452384:	mov	x0, #0x0                   	// #0
  452388:	mov	w24, #0x0                   	// #0
  45238c:	mov	x1, #0x1                   	// #1
  452390:	movk	x2, #0x1a, lsl #48
  452394:	str	wzr, [x3, #16]
  452398:	add	w24, w24, #0x1
  45239c:	str	x0, [x3]
  4523a0:	mov	x4, x3
  4523a4:	ldr	w5, [x25]
  4523a8:	str	x25, [x3, #8]
  4523ac:	str	x6, [x3, #24]
  4523b0:	sub	w0, w5, #0x1c
  4523b4:	cmp	w0, #0x34
  4523b8:	b.hi	4523c8 <_obstack_memory_used@@Base+0x7dc4>  // b.pmore
  4523bc:	lsl	x0, x1, x0
  4523c0:	tst	x0, x2
  4523c4:	b.ne	453548 <_obstack_memory_used@@Base+0x8f44>  // b.any
  4523c8:	str	x3, [x19, #296]
  4523cc:	cmp	w5, #0x2
  4523d0:	b.eq	454308 <_obstack_memory_used@@Base+0x9d04>  // b.none
  4523d4:	cmp	w5, #0x4
  4523d8:	b.ne	4523e8 <_obstack_memory_used@@Base+0x7de4>  // b.any
  4523dc:	add	x0, sp, #0x50
  4523e0:	stp	x6, x25, [sp, #80]
  4523e4:	str	x0, [x19, #288]
  4523e8:	ldr	x2, [x20, #16]
  4523ec:	mov	x0, x19
  4523f0:	mov	w1, w21
  4523f4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4523f8:	ldr	w0, [x25]
  4523fc:	cmp	w0, #0x4
  452400:	b.ne	45240c <_obstack_memory_used@@Base+0x7e08>  // b.any
  452404:	ldr	x0, [sp, #80]
  452408:	str	x0, [x19, #288]
  45240c:	sub	w20, w24, #0x1
  452410:	mov	w24, #0x20                  	// #32
  452414:	ubfiz	x0, x20, #5, #32
  452418:	add	x23, x23, x0
  45241c:	b	452424 <_obstack_memory_used@@Base+0x7e20>
  452420:	sub	w20, w20, #0x1
  452424:	ldr	w0, [x23, #16]
  452428:	cbnz	w0, 452480 <_obstack_memory_used@@Base+0x7e7c>
  45242c:	ldr	x0, [x19, #256]
  452430:	add	x1, x0, #0x1
  452434:	cmp	x0, #0xff
  452438:	b.ne	452464 <_obstack_memory_used@@Base+0x7e60>  // b.any
  45243c:	ldp	x3, x2, [x19, #272]
  452440:	strb	wzr, [x19, #255]
  452444:	mov	x1, x0
  452448:	mov	x0, x19
  45244c:	blr	x3
  452450:	ldr	x2, [x19, #320]
  452454:	mov	x1, #0x1                   	// #1
  452458:	mov	x0, #0x0                   	// #0
  45245c:	add	x2, x2, x1
  452460:	str	x2, [x19, #320]
  452464:	str	x1, [x19, #256]
  452468:	mov	w1, w21
  45246c:	ldr	x2, [x23, #8]
  452470:	strb	w24, [x19, x0]
  452474:	strb	w24, [x19, #264]
  452478:	mov	x0, x19
  45247c:	bl	454ef8 <_obstack_memory_used@@Base+0xa8f4>
  452480:	sub	x23, x23, #0x20
  452484:	cbnz	w20, 452420 <_obstack_memory_used@@Base+0x7e1c>
  452488:	ldp	x23, x24, [sp, #48]
  45248c:	ldp	x25, x26, [sp, #64]
  452490:	str	x22, [x19, #296]
  452494:	ldp	x21, x22, [sp, #32]
  452498:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45249c:	ldr	x22, [x20, #8]
  4524a0:	ldr	x24, [x19, #296]
  4524a4:	str	xzr, [x19, #296]
  4524a8:	ldr	x23, [x19, #368]
  4524ac:	str	x20, [x19, #368]
  4524b0:	tbz	w21, #2, 4524c8 <_obstack_memory_used@@Base+0x7ec4>
  4524b4:	ldr	w0, [x22]
  4524b8:	cbnz	w0, 4524c8 <_obstack_memory_used@@Base+0x7ec4>
  4524bc:	ldr	w0, [x22, #16]
  4524c0:	cmp	w0, #0x6
  4524c4:	b.eq	4547c0 <_obstack_memory_used@@Base+0xa1bc>  // b.none
  4524c8:	mov	x0, x19
  4524cc:	mov	x2, x22
  4524d0:	mov	w1, w21
  4524d4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4524d8:	ldrb	w0, [x19, #264]
  4524dc:	cmp	w0, #0x3c
  4524e0:	b.eq	454028 <_obstack_memory_used@@Base+0x9a24>  // b.none
  4524e4:	ldr	x1, [x19, #256]
  4524e8:	add	x0, x1, #0x1
  4524ec:	cmp	x1, #0xff
  4524f0:	b.ne	452518 <_obstack_memory_used@@Base+0x7f14>  // b.any
  4524f4:	ldp	x3, x2, [x19, #272]
  4524f8:	strb	wzr, [x19, #255]
  4524fc:	mov	x0, x19
  452500:	blr	x3
  452504:	ldr	x2, [x19, #320]
  452508:	mov	x0, #0x1                   	// #1
  45250c:	mov	x1, #0x0                   	// #0
  452510:	add	x2, x2, x0
  452514:	str	x2, [x19, #320]
  452518:	str	x0, [x19, #256]
  45251c:	mov	w0, #0x3c                  	// #60
  452520:	strb	w0, [x19, x1]
  452524:	mov	w1, w21
  452528:	strb	w0, [x19, #264]
  45252c:	mov	x0, x19
  452530:	ldr	x2, [x20, #16]
  452534:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452538:	ldrb	w0, [x19, #264]
  45253c:	cmp	w0, #0x3e
  452540:	b.eq	453fe0 <_obstack_memory_used@@Base+0x99dc>  // b.none
  452544:	ldr	x1, [x19, #256]
  452548:	add	x0, x1, #0x1
  45254c:	cmp	x1, #0xff
  452550:	b.ne	452578 <_obstack_memory_used@@Base+0x7f74>  // b.any
  452554:	ldp	x3, x2, [x19, #272]
  452558:	strb	wzr, [x19, #255]
  45255c:	mov	x0, x19
  452560:	blr	x3
  452564:	ldr	x2, [x19, #320]
  452568:	mov	x0, #0x1                   	// #1
  45256c:	mov	x1, #0x0                   	// #0
  452570:	add	x2, x2, x0
  452574:	str	x2, [x19, #320]
  452578:	str	x0, [x19, #256]
  45257c:	mov	w0, #0x3e                  	// #62
  452580:	strb	w0, [x19, x1]
  452584:	strb	w0, [x19, #264]
  452588:	ldp	x21, x22, [sp, #32]
  45258c:	str	x24, [x19, #296]
  452590:	str	x23, [x19, #368]
  452594:	ldp	x23, x24, [sp, #48]
  452598:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45259c:	ldr	w0, [x19, #312]
  4525a0:	cbz	w0, 45366c <_obstack_memory_used@@Base+0x9068>
  4525a4:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4525a8:	add	x23, x23, #0xf10
  4525ac:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4525b0:	add	x23, x23, #0x5
  4525b4:	add	x21, x21, #0xf11
  4525b8:	mov	w22, #0x61                  	// #97
  4525bc:	ldr	x1, [x19, #256]
  4525c0:	b	4525e4 <_obstack_memory_used@@Base+0x7fe0>
  4525c4:	mov	x0, x1
  4525c8:	add	x1, x1, #0x1
  4525cc:	str	x1, [x19, #256]
  4525d0:	cmp	x23, x21
  4525d4:	strb	w22, [x19, x0]
  4525d8:	strb	w22, [x19, #264]
  4525dc:	b.eq	4536b4 <_obstack_memory_used@@Base+0x90b0>  // b.none
  4525e0:	ldrb	w22, [x21], #1
  4525e4:	cmp	x1, #0xff
  4525e8:	b.ne	4525c4 <_obstack_memory_used@@Base+0x7fc0>  // b.any
  4525ec:	ldp	x3, x2, [x19, #272]
  4525f0:	strb	wzr, [x19, #255]
  4525f4:	mov	x0, x19
  4525f8:	blr	x3
  4525fc:	ldr	x2, [x19, #320]
  452600:	mov	x1, #0x1                   	// #1
  452604:	mov	x0, #0x0                   	// #0
  452608:	add	x2, x2, x1
  45260c:	str	x2, [x19, #320]
  452610:	b	4525cc <_obstack_memory_used@@Base+0x7fc8>
  452614:	ldr	x1, [x19, #256]
  452618:	add	x0, x1, #0x1
  45261c:	cmp	x1, #0xff
  452620:	b.ne	452648 <_obstack_memory_used@@Base+0x8044>  // b.any
  452624:	ldp	x3, x2, [x19, #272]
  452628:	strb	wzr, [x19, #255]
  45262c:	mov	x0, x19
  452630:	blr	x3
  452634:	ldr	x2, [x19, #320]
  452638:	mov	x0, #0x1                   	// #1
  45263c:	mov	x1, #0x0                   	// #0
  452640:	add	x2, x2, x0
  452644:	str	x2, [x19, #320]
  452648:	str	x0, [x19, #256]
  45264c:	mov	w0, #0x7e                  	// #126
  452650:	strb	w0, [x19, x1]
  452654:	mov	w1, w21
  452658:	strb	w0, [x19, #264]
  45265c:	mov	x0, x19
  452660:	ldr	x2, [x20, #16]
  452664:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452668:	ldp	x21, x22, [sp, #32]
  45266c:	ldp	x23, x24, [sp, #48]
  452670:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452674:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  452678:	add	x24, x24, #0xf38
  45267c:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  452680:	add	x24, x24, #0xb
  452684:	add	x22, x22, #0xf39
  452688:	mov	w23, #0x76                  	// #118
  45268c:	ldr	x1, [x19, #256]
  452690:	b	4526b4 <_obstack_memory_used@@Base+0x80b0>
  452694:	mov	x0, x1
  452698:	add	x1, x1, #0x1
  45269c:	str	x1, [x19, #256]
  4526a0:	cmp	x24, x22
  4526a4:	strb	w23, [x19, x0]
  4526a8:	strb	w23, [x19, #264]
  4526ac:	b.eq	452e48 <_obstack_memory_used@@Base+0x8844>  // b.none
  4526b0:	ldrb	w23, [x22], #1
  4526b4:	cmp	x1, #0xff
  4526b8:	b.ne	452694 <_obstack_memory_used@@Base+0x8090>  // b.any
  4526bc:	ldp	x3, x2, [x19, #272]
  4526c0:	strb	wzr, [x19, #255]
  4526c4:	mov	x0, x19
  4526c8:	blr	x3
  4526cc:	ldr	x2, [x19, #320]
  4526d0:	mov	x1, #0x1                   	// #1
  4526d4:	mov	x0, #0x0                   	// #0
  4526d8:	add	x2, x2, x1
  4526dc:	str	x2, [x19, #320]
  4526e0:	b	45269c <_obstack_memory_used@@Base+0x8098>
  4526e4:	ldr	x0, [x20, #16]
  4526e8:	ldr	w0, [x0]
  4526ec:	cmp	w0, #0x39
  4526f0:	b.ne	4510e0 <_obstack_memory_used@@Base+0x6adc>  // b.any
  4526f4:	ldr	x2, [x20, #8]
  4526f8:	ldr	x0, [x2, #8]
  4526fc:	ldr	x0, [x0]
  452700:	ldrb	w1, [x0, #1]
  452704:	cmp	w1, #0x63
  452708:	b.eq	454440 <_obstack_memory_used@@Base+0x9e3c>  // b.none
  45270c:	add	x3, x20, #0x10
  452710:	mov	w1, w21
  452714:	mov	x0, x19
  452718:	bl	4561b0 <_obstack_memory_used@@Base+0xbbac>
  45271c:	cbnz	w0, 4547a8 <_obstack_memory_used@@Base+0xa1a4>
  452720:	ldr	x0, [x20, #8]
  452724:	ldr	w1, [x0]
  452728:	cmp	w1, #0x32
  45272c:	b.eq	45491c <_obstack_memory_used@@Base+0xa318>  // b.none
  452730:	ldr	x0, [x0, #8]
  452734:	ldr	x1, [x0]
  452738:	ldrb	w0, [x1]
  45273c:	subs	w0, w0, #0x63
  452740:	b.ne	452754 <_obstack_memory_used@@Base+0x8150>  // b.any
  452744:	ldrb	w0, [x1, #1]
  452748:	subs	w0, w0, #0x6c
  45274c:	b.ne	452754 <_obstack_memory_used@@Base+0x8150>  // b.any
  452750:	ldrb	w0, [x1, #2]
  452754:	ldr	x1, [x20, #16]
  452758:	ldr	x2, [x1, #8]
  45275c:	cbnz	w0, 45276c <_obstack_memory_used@@Base+0x8168>
  452760:	ldr	w0, [x2]
  452764:	cmp	w0, #0x3
  452768:	b.eq	4549e0 <_obstack_memory_used@@Base+0xa3dc>  // b.none
  45276c:	mov	w1, w21
  452770:	mov	x0, x19
  452774:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  452778:	ldr	x2, [x20, #8]
  45277c:	ldr	x0, [x2, #8]
  452780:	ldr	x0, [x0]
  452784:	ldrb	w1, [x0]
  452788:	cmp	w1, #0x69
  45278c:	b.ne	4546f8 <_obstack_memory_used@@Base+0xa0f4>  // b.any
  452790:	ldrb	w3, [x0, #1]
  452794:	cmp	w3, #0x78
  452798:	b.ne	4546f8 <_obstack_memory_used@@Base+0xa0f4>  // b.any
  45279c:	ldrb	w3, [x0, #2]
  4527a0:	cbnz	w3, 4546f8 <_obstack_memory_used@@Base+0xa0f4>
  4527a4:	ldr	x1, [x19, #256]
  4527a8:	cmp	x1, #0xff
  4527ac:	b.ne	4527d4 <_obstack_memory_used@@Base+0x81d0>  // b.any
  4527b0:	ldp	x3, x2, [x19, #272]
  4527b4:	strb	wzr, [x19, #255]
  4527b8:	mov	x0, x19
  4527bc:	blr	x3
  4527c0:	str	xzr, [x19, #256]
  4527c4:	ldr	x0, [x19, #320]
  4527c8:	mov	x1, #0x0                   	// #0
  4527cc:	add	x0, x0, #0x1
  4527d0:	str	x0, [x19, #320]
  4527d4:	add	x0, x1, #0x1
  4527d8:	str	x0, [x19, #256]
  4527dc:	mov	w0, #0x5b                  	// #91
  4527e0:	strb	w0, [x19, x1]
  4527e4:	strb	w0, [x19, #264]
  4527e8:	mov	w1, w21
  4527ec:	mov	x0, x19
  4527f0:	ldr	x2, [x20, #16]
  4527f4:	ldr	x2, [x2, #16]
  4527f8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4527fc:	ldr	x1, [x19, #256]
  452800:	cmp	x1, #0xff
  452804:	b.ne	45282c <_obstack_memory_used@@Base+0x8228>  // b.any
  452808:	ldp	x3, x2, [x19, #272]
  45280c:	strb	wzr, [x19, #255]
  452810:	mov	x0, x19
  452814:	blr	x3
  452818:	str	xzr, [x19, #256]
  45281c:	ldr	x0, [x19, #320]
  452820:	mov	x1, #0x0                   	// #0
  452824:	add	x0, x0, #0x1
  452828:	str	x0, [x19, #320]
  45282c:	add	x0, x1, #0x1
  452830:	str	x0, [x19, #256]
  452834:	mov	w0, #0x5d                  	// #93
  452838:	strb	w0, [x19, x1]
  45283c:	strb	w0, [x19, #264]
  452840:	ldr	x0, [x20, #8]
  452844:	ldr	w1, [x0]
  452848:	cmp	w1, #0x32
  45284c:	b.eq	454900 <_obstack_memory_used@@Base+0xa2fc>  // b.none
  452850:	ldp	x21, x22, [sp, #32]
  452854:	ldp	x23, x24, [sp, #48]
  452858:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45285c:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  452860:	add	x24, x24, #0x178
  452864:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  452868:	add	x24, x24, #0xe
  45286c:	add	x22, x22, #0x179
  452870:	mov	w23, #0x6a                  	// #106
  452874:	ldr	x1, [x19, #256]
  452878:	b	45289c <_obstack_memory_used@@Base+0x8298>
  45287c:	mov	x0, x1
  452880:	add	x1, x1, #0x1
  452884:	str	x1, [x19, #256]
  452888:	cmp	x24, x22
  45288c:	strb	w23, [x19, x0]
  452890:	strb	w23, [x19, #264]
  452894:	b.eq	45344c <_obstack_memory_used@@Base+0x8e48>  // b.none
  452898:	ldrb	w23, [x22], #1
  45289c:	cmp	x1, #0xff
  4528a0:	b.ne	45287c <_obstack_memory_used@@Base+0x8278>  // b.any
  4528a4:	ldp	x3, x2, [x19, #272]
  4528a8:	strb	wzr, [x19, #255]
  4528ac:	mov	x0, x19
  4528b0:	blr	x3
  4528b4:	ldr	x2, [x19, #320]
  4528b8:	mov	x1, #0x1                   	// #1
  4528bc:	mov	x0, #0x0                   	// #0
  4528c0:	add	x2, x2, x1
  4528c4:	str	x2, [x19, #320]
  4528c8:	b	452884 <_obstack_memory_used@@Base+0x8280>
  4528cc:	ldr	x2, [x20, #8]
  4528d0:	mov	w1, w21
  4528d4:	mov	x0, x19
  4528d8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4528dc:	ldr	x2, [x20, #16]
  4528e0:	mov	w1, w21
  4528e4:	mov	x0, x19
  4528e8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4528ec:	ldp	x21, x22, [sp, #32]
  4528f0:	ldp	x23, x24, [sp, #48]
  4528f4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4528f8:	ldr	x1, [x19, #256]
  4528fc:	ldrb	w20, [x20, #8]
  452900:	add	x0, x1, #0x1
  452904:	cmp	x1, #0xff
  452908:	b.ne	452930 <_obstack_memory_used@@Base+0x832c>  // b.any
  45290c:	ldp	x3, x2, [x19, #272]
  452910:	strb	wzr, [x19, #255]
  452914:	mov	x0, x19
  452918:	blr	x3
  45291c:	ldr	x2, [x19, #320]
  452920:	mov	x0, #0x1                   	// #1
  452924:	mov	x1, #0x0                   	// #0
  452928:	add	x2, x2, x0
  45292c:	str	x2, [x19, #320]
  452930:	str	x0, [x19, #256]
  452934:	strb	w20, [x19, x1]
  452938:	strb	w20, [x19, #264]
  45293c:	ldp	x21, x22, [sp, #32]
  452940:	ldp	x23, x24, [sp, #48]
  452944:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452948:	ldr	w2, [x20, #8]
  45294c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  452950:	add	x1, x1, #0x3f8
  452954:	add	x20, sp, #0x60
  452958:	mov	x0, x20
  45295c:	bl	4025b0 <sprintf@plt>
  452960:	mov	x0, x20
  452964:	bl	4024f0 <strlen@plt>
  452968:	cbz	x0, 454898 <_obstack_memory_used@@Base+0xa294>
  45296c:	add	x22, x20, x0
  452970:	ldr	x1, [x19, #256]
  452974:	b	452998 <_obstack_memory_used@@Base+0x8394>
  452978:	mov	x0, x1
  45297c:	add	x1, x1, #0x1
  452980:	str	x1, [x19, #256]
  452984:	add	x20, x20, #0x1
  452988:	strb	w21, [x19, x0]
  45298c:	cmp	x20, x22
  452990:	strb	w21, [x19, #264]
  452994:	b.eq	453500 <_obstack_memory_used@@Base+0x8efc>  // b.none
  452998:	ldrb	w21, [x20]
  45299c:	cmp	x1, #0xff
  4529a0:	b.ne	452978 <_obstack_memory_used@@Base+0x8374>  // b.any
  4529a4:	ldp	x3, x2, [x19, #272]
  4529a8:	strb	wzr, [x19, #255]
  4529ac:	mov	x0, x19
  4529b0:	blr	x3
  4529b4:	ldr	x2, [x19, #320]
  4529b8:	mov	x1, #0x1                   	// #1
  4529bc:	mov	x0, #0x0                   	// #0
  4529c0:	add	x2, x2, x1
  4529c4:	str	x2, [x19, #320]
  4529c8:	b	452980 <_obstack_memory_used@@Base+0x837c>
  4529cc:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4529d0:	add	x24, x24, #0x188
  4529d4:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4529d8:	add	x24, x24, #0xa
  4529dc:	add	x22, x22, #0x189
  4529e0:	mov	w23, #0x64                  	// #100
  4529e4:	ldr	x1, [x19, #256]
  4529e8:	b	452a0c <_obstack_memory_used@@Base+0x8408>
  4529ec:	mov	x0, x1
  4529f0:	add	x1, x1, #0x1
  4529f4:	str	x1, [x19, #256]
  4529f8:	cmp	x22, x24
  4529fc:	strb	w23, [x19, x0]
  452a00:	strb	w23, [x19, #264]
  452a04:	b.eq	453274 <_obstack_memory_used@@Base+0x8c70>  // b.none
  452a08:	ldrb	w23, [x22], #1
  452a0c:	cmp	x1, #0xff
  452a10:	b.ne	4529ec <_obstack_memory_used@@Base+0x83e8>  // b.any
  452a14:	ldp	x3, x2, [x19, #272]
  452a18:	strb	wzr, [x19, #255]
  452a1c:	mov	x0, x19
  452a20:	blr	x3
  452a24:	ldr	x2, [x19, #320]
  452a28:	mov	x1, #0x1                   	// #1
  452a2c:	mov	x0, #0x0                   	// #0
  452a30:	add	x2, x2, x1
  452a34:	str	x2, [x19, #320]
  452a38:	b	4529f4 <_obstack_memory_used@@Base+0x83f0>
  452a3c:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  452a40:	add	x24, x24, #0x1a8
  452a44:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  452a48:	add	x24, x24, #0x1d
  452a4c:	add	x22, x22, #0x1a9
  452a50:	mov	w23, #0x67                  	// #103
  452a54:	ldr	x1, [x19, #256]
  452a58:	b	452a7c <_obstack_memory_used@@Base+0x8478>
  452a5c:	mov	x0, x1
  452a60:	add	x1, x1, #0x1
  452a64:	str	x1, [x19, #256]
  452a68:	cmp	x22, x24
  452a6c:	strb	w23, [x19, x0]
  452a70:	strb	w23, [x19, #264]
  452a74:	b.eq	4534b8 <_obstack_memory_used@@Base+0x8eb4>  // b.none
  452a78:	ldrb	w23, [x22], #1
  452a7c:	cmp	x1, #0xff
  452a80:	b.ne	452a5c <_obstack_memory_used@@Base+0x8458>  // b.any
  452a84:	ldp	x3, x2, [x19, #272]
  452a88:	strb	wzr, [x19, #255]
  452a8c:	mov	x0, x19
  452a90:	blr	x3
  452a94:	ldr	x2, [x19, #320]
  452a98:	mov	x1, #0x1                   	// #1
  452a9c:	mov	x0, #0x0                   	// #0
  452aa0:	add	x2, x2, x1
  452aa4:	str	x2, [x19, #320]
  452aa8:	b	452a64 <_obstack_memory_used@@Base+0x8460>
  452aac:	ldrsw	x22, [x20, #16]
  452ab0:	ldr	x20, [x20, #8]
  452ab4:	tbnz	w21, #2, 453584 <_obstack_memory_used@@Base+0x8f80>
  452ab8:	cbz	x22, 4549c8 <_obstack_memory_used@@Base+0xa3c4>
  452abc:	add	x22, x20, x22
  452ac0:	ldr	x1, [x19, #256]
  452ac4:	b	452ae8 <_obstack_memory_used@@Base+0x84e4>
  452ac8:	mov	x0, x1
  452acc:	add	x1, x1, #0x1
  452ad0:	str	x1, [x19, #256]
  452ad4:	add	x20, x20, #0x1
  452ad8:	strb	w21, [x19, x0]
  452adc:	cmp	x22, x20
  452ae0:	strb	w21, [x19, #264]
  452ae4:	b.eq	45398c <_obstack_memory_used@@Base+0x9388>  // b.none
  452ae8:	ldrb	w21, [x20]
  452aec:	cmp	x1, #0xff
  452af0:	b.ne	452ac8 <_obstack_memory_used@@Base+0x84c4>  // b.any
  452af4:	ldp	x3, x2, [x19, #272]
  452af8:	strb	wzr, [x19, #255]
  452afc:	mov	x0, x19
  452b00:	blr	x3
  452b04:	ldr	x2, [x19, #320]
  452b08:	mov	x1, #0x1                   	// #1
  452b0c:	mov	x0, #0x0                   	// #0
  452b10:	add	x2, x2, x1
  452b14:	str	x2, [x19, #320]
  452b18:	b	452ad0 <_obstack_memory_used@@Base+0x84cc>
  452b1c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  452b20:	add	x22, x22, #0x108
  452b24:	add	x24, x22, #0x9
  452b28:	mov	w23, #0x6f                  	// #111
  452b2c:	ldr	x1, [x19, #256]
  452b30:	b	452b58 <_obstack_memory_used@@Base+0x8554>
  452b34:	mov	x0, x1
  452b38:	add	x1, x1, #0x1
  452b3c:	str	x1, [x19, #256]
  452b40:	add	x22, x22, #0x1
  452b44:	strb	w23, [x19, x0]
  452b48:	cmp	x22, x24
  452b4c:	strb	w23, [x19, #264]
  452b50:	b.eq	453468 <_obstack_memory_used@@Base+0x8e64>  // b.none
  452b54:	ldrb	w23, [x22]
  452b58:	cmp	x1, #0xff
  452b5c:	b.ne	452b34 <_obstack_memory_used@@Base+0x8530>  // b.any
  452b60:	ldp	x3, x2, [x19, #272]
  452b64:	strb	wzr, [x19, #255]
  452b68:	mov	x0, x19
  452b6c:	blr	x3
  452b70:	ldr	x2, [x19, #320]
  452b74:	mov	x1, #0x1                   	// #1
  452b78:	mov	x0, #0x0                   	// #0
  452b7c:	add	x2, x2, x1
  452b80:	str	x2, [x19, #320]
  452b84:	b	452b3c <_obstack_memory_used@@Base+0x8538>
  452b88:	ldr	x2, [x20, #8]
  452b8c:	mov	w1, w21
  452b90:	mov	x0, x19
  452b94:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  452b98:	ldp	x21, x22, [sp, #32]
  452b9c:	ldp	x23, x24, [sp, #48]
  452ba0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452ba4:	ldp	x22, x20, [x20, #8]
  452ba8:	ldr	w0, [x22]
  452bac:	cmp	w0, #0x32
  452bb0:	b.eq	453ad4 <_obstack_memory_used@@Base+0x94d0>  // b.none
  452bb4:	cmp	w0, #0x34
  452bb8:	b.ne	454e1c <_obstack_memory_used@@Base+0xa818>  // b.any
  452bbc:	ldr	x1, [x19, #256]
  452bc0:	add	x0, x1, #0x1
  452bc4:	cmp	x1, #0xff
  452bc8:	b.ne	452bf0 <_obstack_memory_used@@Base+0x85ec>  // b.any
  452bcc:	ldp	x3, x2, [x19, #272]
  452bd0:	strb	wzr, [x19, #255]
  452bd4:	mov	x0, x19
  452bd8:	blr	x3
  452bdc:	ldr	x2, [x19, #320]
  452be0:	mov	x0, #0x1                   	// #1
  452be4:	mov	x1, #0x0                   	// #0
  452be8:	add	x2, x2, x0
  452bec:	str	x2, [x19, #320]
  452bf0:	str	x0, [x19, #256]
  452bf4:	mov	w0, #0x28                  	// #40
  452bf8:	strb	w0, [x19, x1]
  452bfc:	mov	w1, w21
  452c00:	strb	w0, [x19, #264]
  452c04:	mov	x0, x19
  452c08:	ldr	x2, [x22, #8]
  452c0c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452c10:	ldr	x1, [x19, #256]
  452c14:	add	x0, x1, #0x1
  452c18:	cmp	x1, #0xff
  452c1c:	b.ne	452c44 <_obstack_memory_used@@Base+0x8640>  // b.any
  452c20:	ldp	x3, x2, [x19, #272]
  452c24:	strb	wzr, [x19, #255]
  452c28:	mov	x0, x19
  452c2c:	blr	x3
  452c30:	ldr	x2, [x19, #320]
  452c34:	mov	x0, #0x1                   	// #1
  452c38:	mov	x1, #0x0                   	// #0
  452c3c:	add	x2, x2, x0
  452c40:	str	x2, [x19, #320]
  452c44:	str	x0, [x19, #256]
  452c48:	mov	w0, #0x29                  	// #41
  452c4c:	strb	w0, [x19, x1]
  452c50:	strb	w0, [x19, #264]
  452c54:	mov	w1, w21
  452c58:	mov	x2, x20
  452c5c:	mov	x0, x19
  452c60:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  452c64:	ldp	x21, x22, [sp, #32]
  452c68:	ldp	x23, x24, [sp, #48]
  452c6c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452c70:	ldr	x0, [x20, #8]
  452c74:	tbnz	w21, #2, 453900 <_obstack_memory_used@@Base+0x92fc>
  452c78:	ldrsw	x22, [x0, #8]
  452c7c:	ldr	x20, [x0]
  452c80:	cbz	x22, 454ae8 <_obstack_memory_used@@Base+0xa4e4>
  452c84:	add	x22, x20, x22
  452c88:	ldr	x1, [x19, #256]
  452c8c:	b	452cb0 <_obstack_memory_used@@Base+0x86ac>
  452c90:	mov	x0, x1
  452c94:	add	x1, x1, #0x1
  452c98:	str	x1, [x19, #256]
  452c9c:	add	x20, x20, #0x1
  452ca0:	strb	w21, [x19, x0]
  452ca4:	cmp	x22, x20
  452ca8:	strb	w21, [x19, #264]
  452cac:	b.eq	453974 <_obstack_memory_used@@Base+0x9370>  // b.none
  452cb0:	ldrb	w21, [x20]
  452cb4:	cmp	x1, #0xff
  452cb8:	b.ne	452c90 <_obstack_memory_used@@Base+0x868c>  // b.any
  452cbc:	ldp	x3, x2, [x19, #272]
  452cc0:	strb	wzr, [x19, #255]
  452cc4:	mov	x0, x19
  452cc8:	blr	x3
  452ccc:	ldr	x2, [x19, #320]
  452cd0:	mov	x1, #0x1                   	// #1
  452cd4:	mov	x0, #0x0                   	// #0
  452cd8:	add	x2, x2, x1
  452cdc:	str	x2, [x19, #320]
  452ce0:	b	452c98 <_obstack_memory_used@@Base+0x8694>
  452ce4:	ldr	x2, [x0, #8]
  452ce8:	add	x0, sp, #0x60
  452cec:	ldr	x1, [x19, #288]
  452cf0:	stp	x4, x20, [sp, #96]
  452cf4:	str	wzr, [sp, #112]
  452cf8:	str	x1, [sp, #120]
  452cfc:	str	x0, [x19, #296]
  452d00:	cbnz	x2, 451118 <_obstack_memory_used@@Base+0x6b14>
  452d04:	b	451114 <_obstack_memory_used@@Base+0x6b10>
  452d08:	ldp	x21, x22, [sp, #32]
  452d0c:	ldp	x23, x24, [sp, #48]
  452d10:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452d14:	ldr	x2, [x20, #16]
  452d18:	mov	w1, w21
  452d1c:	mov	x0, x19
  452d20:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452d24:	ldr	x1, [x19, #256]
  452d28:	add	x0, x1, #0x1
  452d2c:	cmp	x1, #0xff
  452d30:	b.ne	452d58 <_obstack_memory_used@@Base+0x8754>  // b.any
  452d34:	ldp	x3, x2, [x19, #272]
  452d38:	strb	wzr, [x19, #255]
  452d3c:	mov	x0, x19
  452d40:	blr	x3
  452d44:	ldr	x2, [x19, #320]
  452d48:	mov	x0, #0x1                   	// #1
  452d4c:	mov	x1, #0x0                   	// #0
  452d50:	add	x2, x2, x0
  452d54:	str	x2, [x19, #320]
  452d58:	str	x0, [x19, #256]
  452d5c:	mov	w0, #0x5d                  	// #93
  452d60:	strb	w0, [x19, x1]
  452d64:	strb	w0, [x19, #264]
  452d68:	ldp	x21, x22, [sp, #32]
  452d6c:	ldp	x23, x24, [sp, #48]
  452d70:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452d74:	ldr	x2, [x20, #16]
  452d78:	mov	w1, w21
  452d7c:	mov	x0, x19
  452d80:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452d84:	ldp	x21, x22, [sp, #32]
  452d88:	ldp	x23, x24, [sp, #48]
  452d8c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452d90:	ldr	x2, [x20, #8]
  452d94:	mov	w1, w21
  452d98:	mov	x0, x19
  452d9c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452da0:	ldp	x21, x22, [sp, #32]
  452da4:	ldp	x23, x24, [sp, #48]
  452da8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452dac:	ldr	x2, [x20, #8]
  452db0:	mov	w1, w21
  452db4:	mov	x0, x19
  452db8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452dbc:	ldp	x21, x22, [sp, #32]
  452dc0:	ldp	x23, x24, [sp, #48]
  452dc4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452dc8:	ldr	x2, [x20, #16]
  452dcc:	mov	w1, w21
  452dd0:	mov	x0, x19
  452dd4:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  452dd8:	add	x24, x24, #0xf88
  452ddc:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  452de0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452de4:	add	x24, x24, #0x5
  452de8:	add	x22, x22, #0xf89
  452dec:	mov	w23, #0x20                  	// #32
  452df0:	ldr	x1, [x19, #256]
  452df4:	b	452e18 <_obstack_memory_used@@Base+0x8814>
  452df8:	mov	x0, x1
  452dfc:	add	x1, x1, #0x1
  452e00:	str	x1, [x19, #256]
  452e04:	cmp	x22, x24
  452e08:	strb	w23, [x19, x0]
  452e0c:	strb	w23, [x19, #264]
  452e10:	b.eq	452eb8 <_obstack_memory_used@@Base+0x88b4>  // b.none
  452e14:	ldrb	w23, [x22], #1
  452e18:	cmp	x1, #0xff
  452e1c:	b.ne	452df8 <_obstack_memory_used@@Base+0x87f4>  // b.any
  452e20:	ldp	x3, x2, [x19, #272]
  452e24:	strb	wzr, [x19, #255]
  452e28:	mov	x0, x19
  452e2c:	blr	x3
  452e30:	ldr	x2, [x19, #320]
  452e34:	mov	x1, #0x1                   	// #1
  452e38:	mov	x0, #0x0                   	// #0
  452e3c:	add	x2, x2, x1
  452e40:	str	x2, [x19, #320]
  452e44:	b	452e00 <_obstack_memory_used@@Base+0x87fc>
  452e48:	ldr	x2, [x20, #8]
  452e4c:	mov	w1, w21
  452e50:	mov	x0, x19
  452e54:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452e58:	ldp	x21, x22, [sp, #32]
  452e5c:	ldp	x23, x24, [sp, #48]
  452e60:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452e64:	ldr	x2, [x20, #8]
  452e68:	mov	w1, w21
  452e6c:	mov	x0, x19
  452e70:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452e74:	ldp	x21, x22, [sp, #32]
  452e78:	ldp	x23, x24, [sp, #48]
  452e7c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452e80:	ldr	x2, [x20, #8]
  452e84:	mov	w1, w21
  452e88:	mov	x0, x19
  452e8c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452e90:	ldp	x21, x22, [sp, #32]
  452e94:	ldp	x23, x24, [sp, #48]
  452e98:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452e9c:	ldr	x2, [x20, #8]
  452ea0:	mov	w1, w21
  452ea4:	mov	x0, x19
  452ea8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452eac:	ldp	x21, x22, [sp, #32]
  452eb0:	ldp	x23, x24, [sp, #48]
  452eb4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452eb8:	ldr	x2, [x20, #8]
  452ebc:	mov	w1, w21
  452ec0:	mov	x0, x19
  452ec4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452ec8:	ldp	x21, x22, [sp, #32]
  452ecc:	ldp	x23, x24, [sp, #48]
  452ed0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452ed4:	ldr	x2, [x20, #16]
  452ed8:	mov	w1, w21
  452edc:	mov	x0, x19
  452ee0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  452ee4:	ldr	x1, [x19, #256]
  452ee8:	add	x0, x1, #0x1
  452eec:	cmp	x1, #0xff
  452ef0:	b.ne	452f18 <_obstack_memory_used@@Base+0x8914>  // b.any
  452ef4:	ldp	x3, x2, [x19, #272]
  452ef8:	strb	wzr, [x19, #255]
  452efc:	mov	x0, x19
  452f00:	blr	x3
  452f04:	ldr	x2, [x19, #320]
  452f08:	mov	x0, #0x1                   	// #1
  452f0c:	mov	x1, #0x0                   	// #0
  452f10:	add	x2, x2, x0
  452f14:	str	x2, [x19, #320]
  452f18:	str	x0, [x19, #256]
  452f1c:	mov	w0, #0x5d                  	// #93
  452f20:	strb	w0, [x19, x1]
  452f24:	strb	w0, [x19, #264]
  452f28:	ldp	x21, x22, [sp, #32]
  452f2c:	ldp	x23, x24, [sp, #48]
  452f30:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  452f34:	ldr	x20, [x22, #8]
  452f38:	ldrb	w0, [x20]
  452f3c:	sub	w0, w0, #0x61
  452f40:	and	w0, w0, #0xff
  452f44:	cmp	w0, #0x19
  452f48:	b.hi	452f90 <_obstack_memory_used@@Base+0x898c>  // b.pmore
  452f4c:	add	x0, x1, #0x1
  452f50:	cmp	x1, #0xff
  452f54:	b.ne	452f80 <_obstack_memory_used@@Base+0x897c>  // b.any
  452f58:	ldp	x3, x2, [x19, #272]
  452f5c:	strb	wzr, [x19, #255]
  452f60:	mov	x0, x19
  452f64:	blr	x3
  452f68:	ldr	x2, [x19, #320]
  452f6c:	mov	x0, #0x1                   	// #1
  452f70:	mov	x1, #0x0                   	// #0
  452f74:	add	x2, x2, x0
  452f78:	ldr	x20, [x22, #8]
  452f7c:	str	x2, [x19, #320]
  452f80:	str	x0, [x19, #256]
  452f84:	mov	w0, #0x20                  	// #32
  452f88:	strb	w0, [x19, x1]
  452f8c:	strb	w0, [x19, #264]
  452f90:	sxtw	x22, w23
  452f94:	sub	w0, w23, #0x1
  452f98:	add	x1, x20, x22
  452f9c:	sxtw	x0, w0
  452fa0:	ldurb	w1, [x1, #-1]
  452fa4:	cmp	w1, #0x20
  452fa8:	csel	x22, x22, x0, ne  // ne = any
  452fac:	cbz	x22, 45488c <_obstack_memory_used@@Base+0xa288>
  452fb0:	add	x22, x20, x22
  452fb4:	ldr	x1, [x19, #256]
  452fb8:	b	452fdc <_obstack_memory_used@@Base+0x89d8>
  452fbc:	mov	x0, x1
  452fc0:	add	x1, x1, #0x1
  452fc4:	str	x1, [x19, #256]
  452fc8:	add	x20, x20, #0x1
  452fcc:	strb	w21, [x19, x0]
  452fd0:	cmp	x22, x20
  452fd4:	strb	w21, [x19, #264]
  452fd8:	b.eq	4534f4 <_obstack_memory_used@@Base+0x8ef0>  // b.none
  452fdc:	ldrb	w21, [x20]
  452fe0:	cmp	x1, #0xff
  452fe4:	b.ne	452fbc <_obstack_memory_used@@Base+0x89b8>  // b.any
  452fe8:	ldp	x3, x2, [x19, #272]
  452fec:	strb	wzr, [x19, #255]
  452ff0:	mov	x0, x19
  452ff4:	blr	x3
  452ff8:	ldr	x2, [x19, #320]
  452ffc:	mov	x1, #0x1                   	// #1
  453000:	mov	x0, #0x0                   	// #0
  453004:	add	x2, x2, x1
  453008:	str	x2, [x19, #320]
  45300c:	b	452fc4 <_obstack_memory_used@@Base+0x89c0>
  453010:	ldr	x2, [x20, #8]
  453014:	mov	w1, w21
  453018:	mov	x0, x19
  45301c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453020:	ldp	x21, x22, [sp, #32]
  453024:	ldp	x23, x24, [sp, #48]
  453028:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45302c:	ldr	x2, [x20, #8]
  453030:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  453034:	add	x1, x1, #0x3f8
  453038:	add	x20, sp, #0x60
  45303c:	add	w2, w2, #0x1
  453040:	mov	x0, x20
  453044:	bl	4025b0 <sprintf@plt>
  453048:	mov	x0, x20
  45304c:	bl	4024f0 <strlen@plt>
  453050:	ldr	x1, [x19, #256]
  453054:	cbz	x0, 4530b4 <_obstack_memory_used@@Base+0x8ab0>
  453058:	add	x22, x20, x0
  45305c:	b	453080 <_obstack_memory_used@@Base+0x8a7c>
  453060:	mov	x0, x1
  453064:	add	x1, x1, #0x1
  453068:	str	x1, [x19, #256]
  45306c:	add	x20, x20, #0x1
  453070:	strb	w21, [x19, x0]
  453074:	cmp	x22, x20
  453078:	strb	w21, [x19, #264]
  45307c:	b.eq	4530b4 <_obstack_memory_used@@Base+0x8ab0>  // b.none
  453080:	ldrb	w21, [x20]
  453084:	cmp	x1, #0xff
  453088:	b.ne	453060 <_obstack_memory_used@@Base+0x8a5c>  // b.any
  45308c:	ldp	x3, x2, [x19, #272]
  453090:	strb	wzr, [x19, #255]
  453094:	mov	x0, x19
  453098:	blr	x3
  45309c:	ldr	x2, [x19, #320]
  4530a0:	mov	x1, #0x1                   	// #1
  4530a4:	mov	x0, #0x0                   	// #0
  4530a8:	add	x2, x2, x1
  4530ac:	str	x2, [x19, #320]
  4530b0:	b	453068 <_obstack_memory_used@@Base+0x8a64>
  4530b4:	add	x0, x1, #0x1
  4530b8:	cmp	x1, #0xff
  4530bc:	b.ne	4530e4 <_obstack_memory_used@@Base+0x8ae0>  // b.any
  4530c0:	ldp	x3, x2, [x19, #272]
  4530c4:	strb	wzr, [x19, #255]
  4530c8:	mov	x0, x19
  4530cc:	blr	x3
  4530d0:	ldr	x2, [x19, #320]
  4530d4:	mov	x0, #0x1                   	// #1
  4530d8:	mov	x1, #0x0                   	// #0
  4530dc:	add	x2, x2, x0
  4530e0:	str	x2, [x19, #320]
  4530e4:	str	x0, [x19, #256]
  4530e8:	mov	w0, #0x7d                  	// #125
  4530ec:	strb	w0, [x19, x1]
  4530f0:	strb	w0, [x19, #264]
  4530f4:	ldp	x21, x22, [sp, #32]
  4530f8:	ldp	x23, x24, [sp, #48]
  4530fc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453100:	ldr	x2, [x20, #8]
  453104:	mov	w1, w21
  453108:	mov	x0, x19
  45310c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453110:	ldp	x21, x22, [sp, #32]
  453114:	ldp	x23, x24, [sp, #48]
  453118:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45311c:	ldr	x2, [x20, #8]
  453120:	mov	w1, w21
  453124:	mov	x0, x19
  453128:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45312c:	ldp	x21, x22, [sp, #32]
  453130:	ldp	x23, x24, [sp, #48]
  453134:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453138:	ldr	w3, [x19, #312]
  45313c:	mov	w1, w21
  453140:	ldr	x2, [x20, #8]
  453144:	add	w3, w3, #0x1
  453148:	str	w3, [x19, #312]
  45314c:	mov	x0, x19
  453150:	mov	w21, #0x29                  	// #41
  453154:	mov	x22, #0x0                   	// #0
  453158:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45315c:	ldr	w0, [x19, #312]
  453160:	ldr	x1, [x19, #256]
  453164:	sub	w0, w0, #0x1
  453168:	str	w0, [x19, #312]
  45316c:	b	453194 <_obstack_memory_used@@Base+0x8b90>
  453170:	mov	x0, x1
  453174:	add	x1, x1, #0x1
  453178:	str	x1, [x19, #256]
  45317c:	cmp	x22, #0x1
  453180:	strb	w21, [x19, x0]
  453184:	strb	w21, [x19, #264]
  453188:	mov	w21, #0x23                  	// #35
  45318c:	b.eq	4531c4 <_obstack_memory_used@@Base+0x8bc0>  // b.none
  453190:	mov	x22, #0x1                   	// #1
  453194:	cmp	x1, #0xff
  453198:	b.ne	453170 <_obstack_memory_used@@Base+0x8b6c>  // b.any
  45319c:	ldp	x3, x2, [x19, #272]
  4531a0:	strb	wzr, [x19, #255]
  4531a4:	mov	x0, x19
  4531a8:	blr	x3
  4531ac:	ldr	x2, [x19, #320]
  4531b0:	mov	x1, #0x1                   	// #1
  4531b4:	mov	x0, #0x0                   	// #0
  4531b8:	add	x2, x2, x1
  4531bc:	str	x2, [x19, #320]
  4531c0:	b	453178 <_obstack_memory_used@@Base+0x8b74>
  4531c4:	ldr	w2, [x20, #16]
  4531c8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4531cc:	add	x1, x1, #0x3f8
  4531d0:	add	x20, sp, #0x60
  4531d4:	add	w2, w2, #0x1
  4531d8:	mov	x0, x20
  4531dc:	bl	4025b0 <sprintf@plt>
  4531e0:	mov	x0, x20
  4531e4:	bl	4024f0 <strlen@plt>
  4531e8:	ldr	x1, [x19, #256]
  4531ec:	cbz	x0, 45324c <_obstack_memory_used@@Base+0x8c48>
  4531f0:	add	x23, x20, x0
  4531f4:	b	453218 <_obstack_memory_used@@Base+0x8c14>
  4531f8:	mov	x0, x1
  4531fc:	add	x1, x1, #0x1
  453200:	str	x1, [x19, #256]
  453204:	add	x20, x20, #0x1
  453208:	strb	w21, [x19, x0]
  45320c:	cmp	x23, x20
  453210:	strb	w21, [x19, #264]
  453214:	b.eq	45324c <_obstack_memory_used@@Base+0x8c48>  // b.none
  453218:	ldrb	w21, [x20]
  45321c:	cmp	x1, #0xff
  453220:	b.ne	4531f8 <_obstack_memory_used@@Base+0x8bf4>  // b.any
  453224:	ldp	x3, x2, [x19, #272]
  453228:	strb	wzr, [x19, #255]
  45322c:	mov	x0, x19
  453230:	blr	x3
  453234:	ldr	x2, [x19, #320]
  453238:	mov	x1, #0x1                   	// #1
  45323c:	mov	x0, #0x0                   	// #0
  453240:	add	x2, x2, x1
  453244:	str	x2, [x19, #320]
  453248:	b	453200 <_obstack_memory_used@@Base+0x8bfc>
  45324c:	cmp	x1, #0xff
  453250:	b.eq	453ab0 <_obstack_memory_used@@Base+0x94ac>  // b.none
  453254:	add	x22, x1, #0x1
  453258:	str	x22, [x19, #256]
  45325c:	mov	w0, #0x7d                  	// #125
  453260:	strb	w0, [x19, x1]
  453264:	strb	w0, [x19, #264]
  453268:	ldp	x21, x22, [sp, #32]
  45326c:	ldp	x23, x24, [sp, #48]
  453270:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453274:	ldr	x2, [x20, #8]
  453278:	mov	w1, w21
  45327c:	mov	x0, x19
  453280:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453284:	ldr	x1, [x19, #256]
  453288:	add	x0, x1, #0x1
  45328c:	cmp	x1, #0xff
  453290:	b.ne	4532b8 <_obstack_memory_used@@Base+0x8cb4>  // b.any
  453294:	ldp	x3, x2, [x19, #272]
  453298:	strb	wzr, [x19, #255]
  45329c:	mov	x0, x19
  4532a0:	blr	x3
  4532a4:	ldr	x2, [x19, #320]
  4532a8:	mov	x0, #0x1                   	// #1
  4532ac:	mov	x1, #0x0                   	// #0
  4532b0:	add	x2, x2, x0
  4532b4:	str	x2, [x19, #320]
  4532b8:	str	x0, [x19, #256]
  4532bc:	mov	w0, #0x29                  	// #41
  4532c0:	strb	w0, [x19, x1]
  4532c4:	strb	w0, [x19, #264]
  4532c8:	ldp	x21, x22, [sp, #32]
  4532cc:	ldp	x23, x24, [sp, #48]
  4532d0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4532d4:	ldr	x2, [x20, #8]
  4532d8:	mov	w1, w21
  4532dc:	mov	x0, x19
  4532e0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4532e4:	ldp	x21, x22, [sp, #32]
  4532e8:	ldp	x23, x24, [sp, #48]
  4532ec:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4532f0:	ldr	x2, [x20, #8]
  4532f4:	mov	w1, w21
  4532f8:	mov	x0, x19
  4532fc:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453300:	ldp	x21, x22, [sp, #32]
  453304:	ldp	x23, x24, [sp, #48]
  453308:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45330c:	ldr	x2, [x20, #8]
  453310:	mov	w1, w21
  453314:	mov	x0, x19
  453318:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  45331c:	add	x22, x22, #0xf78
  453320:	mov	w23, #0x2d                  	// #45
  453324:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453328:	add	x24, x22, #0x4
  45332c:	ldr	x1, [x19, #256]
  453330:	b	453358 <_obstack_memory_used@@Base+0x8d54>
  453334:	mov	x0, x1
  453338:	add	x1, x1, #0x1
  45333c:	str	x1, [x19, #256]
  453340:	add	x22, x22, #0x1
  453344:	strb	w23, [x19, x0]
  453348:	cmp	x24, x22
  45334c:	strb	w23, [x19, #264]
  453350:	b.eq	4533c0 <_obstack_memory_used@@Base+0x8dbc>  // b.none
  453354:	ldrb	w23, [x22]
  453358:	cmp	x1, #0xff
  45335c:	b.ne	453334 <_obstack_memory_used@@Base+0x8d30>  // b.any
  453360:	ldp	x3, x2, [x19, #272]
  453364:	strb	wzr, [x19, #255]
  453368:	mov	x0, x19
  45336c:	blr	x3
  453370:	ldr	x2, [x19, #320]
  453374:	mov	x1, #0x1                   	// #1
  453378:	mov	x0, #0x0                   	// #0
  45337c:	add	x2, x2, x1
  453380:	str	x2, [x19, #320]
  453384:	b	45333c <_obstack_memory_used@@Base+0x8d38>
  453388:	ldr	x2, [x20, #8]
  45338c:	mov	w1, w21
  453390:	mov	x0, x19
  453394:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453398:	ldp	x21, x22, [sp, #32]
  45339c:	ldp	x23, x24, [sp, #48]
  4533a0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4533a4:	ldr	x2, [x20, #8]
  4533a8:	mov	w1, w21
  4533ac:	mov	x0, x19
  4533b0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4533b4:	ldp	x21, x22, [sp, #32]
  4533b8:	ldp	x23, x24, [sp, #48]
  4533bc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4533c0:	ldr	x2, [x20, #16]
  4533c4:	mov	w1, w21
  4533c8:	mov	x0, x19
  4533cc:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4533d0:	ldp	x21, x22, [sp, #32]
  4533d4:	ldp	x23, x24, [sp, #48]
  4533d8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4533dc:	ldr	x2, [x20, #8]
  4533e0:	mov	w1, w21
  4533e4:	mov	x0, x19
  4533e8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4533ec:	ldp	x21, x22, [sp, #32]
  4533f0:	ldp	x23, x24, [sp, #48]
  4533f4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4533f8:	ldr	x2, [x20, #8]
  4533fc:	mov	w1, w21
  453400:	mov	x0, x19
  453404:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453408:	ldp	x21, x22, [sp, #32]
  45340c:	ldp	x23, x24, [sp, #48]
  453410:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453414:	ldr	x2, [x20, #8]
  453418:	mov	w1, w21
  45341c:	mov	x0, x19
  453420:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453424:	ldp	x21, x22, [sp, #32]
  453428:	ldp	x23, x24, [sp, #48]
  45342c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453430:	ldr	x2, [x20, #8]
  453434:	mov	w1, w21
  453438:	mov	x0, x19
  45343c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453440:	ldp	x21, x22, [sp, #32]
  453444:	ldp	x23, x24, [sp, #48]
  453448:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45344c:	ldr	x2, [x20, #8]
  453450:	mov	w1, w21
  453454:	mov	x0, x19
  453458:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45345c:	ldp	x21, x22, [sp, #32]
  453460:	ldp	x23, x24, [sp, #48]
  453464:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453468:	ldr	x1, [x19, #368]
  45346c:	cbz	x1, 453480 <_obstack_memory_used@@Base+0x8e7c>
  453470:	ldr	x2, [x19, #288]
  453474:	add	x0, sp, #0x60
  453478:	stp	x2, x1, [sp, #96]
  45347c:	str	x0, [x19, #288]
  453480:	ldr	x2, [x20, #8]
  453484:	ldr	w0, [x2]
  453488:	cmp	w0, #0x4
  45348c:	b.eq	453d78 <_obstack_memory_used@@Base+0x9774>  // b.none
  453490:	mov	x0, x19
  453494:	mov	w1, w21
  453498:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45349c:	ldr	x0, [x19, #368]
  4534a0:	cbz	x0, 454194 <_obstack_memory_used@@Base+0x9b90>
  4534a4:	ldr	x0, [sp, #96]
  4534a8:	ldp	x21, x22, [sp, #32]
  4534ac:	ldp	x23, x24, [sp, #48]
  4534b0:	str	x0, [x19, #288]
  4534b4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4534b8:	ldr	x2, [x20, #8]
  4534bc:	mov	w1, w21
  4534c0:	mov	x0, x19
  4534c4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4534c8:	ldp	x21, x22, [sp, #32]
  4534cc:	ldp	x23, x24, [sp, #48]
  4534d0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4534d4:	mov	x2, x20
  4534d8:	mov	w1, w21
  4534dc:	mov	x0, x19
  4534e0:	bl	454ef8 <_obstack_memory_used@@Base+0xa8f4>
  4534e4:	b	45112c <_obstack_memory_used@@Base+0x6b28>
  4534e8:	ldp	x21, x22, [sp, #32]
  4534ec:	ldp	x23, x24, [sp, #48]
  4534f0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4534f4:	ldp	x21, x22, [sp, #32]
  4534f8:	ldp	x23, x24, [sp, #48]
  4534fc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453500:	ldp	x21, x22, [sp, #32]
  453504:	ldp	x23, x24, [sp, #48]
  453508:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45350c:	ldp	x21, x22, [sp, #32]
  453510:	ldp	x23, x24, [sp, #48]
  453514:	ldp	x25, x26, [sp, #64]
  453518:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45351c:	ldr	x2, [x20, #16]
  453520:	mov	x0, x19
  453524:	mov	w1, w21
  453528:	ldr	x20, [x19, #320]
  45352c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453530:	ldr	x0, [x19, #320]
  453534:	cmp	x0, x20
  453538:	b.eq	454130 <_obstack_memory_used@@Base+0x9b2c>  // b.none
  45353c:	ldp	x21, x22, [sp, #32]
  453540:	ldp	x23, x24, [sp, #48]
  453544:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453548:	ldr	x25, [x25, #8]
  45354c:	cbz	x25, 454424 <_obstack_memory_used@@Base+0x9e20>
  453550:	add	x3, x3, #0x20
  453554:	cmp	w24, #0x4
  453558:	b.eq	4540f8 <_obstack_memory_used@@Base+0x9af4>  // b.none
  45355c:	mov	x0, x4
  453560:	b	452394 <_obstack_memory_used@@Base+0x7d90>
  453564:	ldr	x25, [x20, #8]
  453568:	cbnz	w24, 451ed4 <_obstack_memory_used@@Base+0x78d0>
  45356c:	ldp	x21, x22, [sp, #32]
  453570:	ldp	x23, x24, [sp, #48]
  453574:	ldp	x25, x26, [sp, #64]
  453578:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45357c:	mov	x20, x0
  453580:	b	451288 <_obstack_memory_used@@Base+0x6c84>
  453584:	add	x21, x20, x22
  453588:	cmp	x21, x20
  45358c:	b.ls	4549d4 <_obstack_memory_used@@Base+0xa3d0>  // b.plast
  453590:	mov	w23, #0x5f                  	// #95
  453594:	b	4535e4 <_obstack_memory_used@@Base+0x8fe0>
  453598:	ldr	x1, [x19, #256]
  45359c:	add	x0, x1, #0x1
  4535a0:	cmp	x1, #0xff
  4535a4:	b.ne	4535cc <_obstack_memory_used@@Base+0x8fc8>  // b.any
  4535a8:	ldp	x3, x2, [x19, #272]
  4535ac:	strb	wzr, [x19, #255]
  4535b0:	mov	x0, x19
  4535b4:	blr	x3
  4535b8:	ldr	x2, [x19, #320]
  4535bc:	mov	x0, #0x1                   	// #1
  4535c0:	mov	x1, #0x0                   	// #0
  4535c4:	add	x2, x2, x0
  4535c8:	str	x2, [x19, #320]
  4535cc:	str	x0, [x19, #256]
  4535d0:	strb	w22, [x19, x1]
  4535d4:	strb	w22, [x19, #264]
  4535d8:	add	x20, x20, #0x1
  4535dc:	cmp	x21, x20
  4535e0:	b.ls	453998 <_obstack_memory_used@@Base+0x9394>  // b.plast
  4535e4:	sub	x0, x21, x20
  4535e8:	ldrb	w22, [x20]
  4535ec:	cmp	x0, #0x3
  4535f0:	b.le	453598 <_obstack_memory_used@@Base+0x8f94>
  4535f4:	cmp	w22, #0x5f
  4535f8:	b.ne	453598 <_obstack_memory_used@@Base+0x8f94>  // b.any
  4535fc:	ldrb	w0, [x20, #1]
  453600:	cmp	w0, #0x5f
  453604:	b.ne	453598 <_obstack_memory_used@@Base+0x8f94>  // b.any
  453608:	ldrb	w0, [x20, #2]
  45360c:	cmp	w0, #0x55
  453610:	b.ne	453598 <_obstack_memory_used@@Base+0x8f94>  // b.any
  453614:	add	x24, x20, #0x3
  453618:	cmp	x21, x24
  45361c:	b.ls	453598 <_obstack_memory_used@@Base+0x8f94>  // b.plast
  453620:	mov	x2, #0x0                   	// #0
  453624:	b	453640 <_obstack_memory_used@@Base+0x903c>
  453628:	mov	w0, w1
  45362c:	sxtw	x0, w0
  453630:	add	x24, x24, #0x1
  453634:	add	x2, x0, x2, lsl #4
  453638:	cmp	x21, x24
  45363c:	b.eq	453598 <_obstack_memory_used@@Base+0x8f94>  // b.none
  453640:	ldrb	w0, [x24]
  453644:	sub	w1, w0, #0x30
  453648:	and	w3, w1, #0xff
  45364c:	cmp	w3, #0x9
  453650:	b.ls	453628 <_obstack_memory_used@@Base+0x9024>  // b.plast
  453654:	sub	w1, w0, #0x41
  453658:	and	w1, w1, #0xff
  45365c:	cmp	w1, #0x5
  453660:	b.hi	454664 <_obstack_memory_used@@Base+0xa060>  // b.pmore
  453664:	sub	w0, w0, #0x37
  453668:	b	45362c <_obstack_memory_used@@Base+0x9028>
  45366c:	add	x1, x20, #0x8
  453670:	mov	x0, x19
  453674:	bl	44d6f8 <_obstack_memory_used@@Base+0x30f4>
  453678:	mov	x2, x0
  45367c:	cbz	x0, 4510e0 <_obstack_memory_used@@Base+0x6adc>
  453680:	ldr	w1, [x0]
  453684:	cmp	w1, #0x2f
  453688:	b.eq	4546e0 <_obstack_memory_used@@Base+0xa0dc>  // b.none
  45368c:	ldr	x20, [x19, #288]
  453690:	mov	w1, w21
  453694:	mov	x0, x19
  453698:	ldr	x3, [x20]
  45369c:	str	x3, [x19, #288]
  4536a0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4536a4:	ldp	x21, x22, [sp, #32]
  4536a8:	ldp	x23, x24, [sp, #48]
  4536ac:	str	x20, [x19, #288]
  4536b0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4536b4:	ldr	x2, [x20, #8]
  4536b8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4536bc:	add	x1, x1, #0x3f8
  4536c0:	add	x20, sp, #0x60
  4536c4:	add	w2, w2, #0x1
  4536c8:	mov	x0, x20
  4536cc:	bl	4025b0 <sprintf@plt>
  4536d0:	mov	x0, x20
  4536d4:	bl	4024f0 <strlen@plt>
  4536d8:	cbz	x0, 454adc <_obstack_memory_used@@Base+0xa4d8>
  4536dc:	add	x22, x20, x0
  4536e0:	ldr	x1, [x19, #256]
  4536e4:	b	453708 <_obstack_memory_used@@Base+0x9104>
  4536e8:	mov	x0, x1
  4536ec:	add	x1, x1, #0x1
  4536f0:	str	x1, [x19, #256]
  4536f4:	add	x20, x20, #0x1
  4536f8:	strb	w21, [x19, x0]
  4536fc:	cmp	x22, x20
  453700:	strb	w21, [x19, #264]
  453704:	b.eq	4539a4 <_obstack_memory_used@@Base+0x93a0>  // b.none
  453708:	ldrb	w21, [x20]
  45370c:	cmp	x1, #0xff
  453710:	b.ne	4536e8 <_obstack_memory_used@@Base+0x90e4>  // b.any
  453714:	ldp	x3, x2, [x19, #272]
  453718:	strb	wzr, [x19, #255]
  45371c:	mov	x0, x19
  453720:	blr	x3
  453724:	ldr	x2, [x19, #320]
  453728:	mov	x1, #0x1                   	// #1
  45372c:	mov	x0, #0x0                   	// #0
  453730:	add	x2, x2, x1
  453734:	str	x2, [x19, #320]
  453738:	b	4536f0 <_obstack_memory_used@@Base+0x90ec>
  45373c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  453740:	add	x20, x20, #0x198
  453744:	add	x22, x20, #0x4
  453748:	mov	w21, #0x74                  	// #116
  45374c:	b	453774 <_obstack_memory_used@@Base+0x9170>
  453750:	mov	x0, x1
  453754:	add	x1, x1, #0x1
  453758:	str	x1, [x19, #256]
  45375c:	add	x20, x20, #0x1
  453760:	strb	w21, [x19, x0]
  453764:	cmp	x20, x22
  453768:	strb	w21, [x19, #264]
  45376c:	b.eq	4537a4 <_obstack_memory_used@@Base+0x91a0>  // b.none
  453770:	ldrb	w21, [x20]
  453774:	cmp	x1, #0xff
  453778:	b.ne	453750 <_obstack_memory_used@@Base+0x914c>  // b.any
  45377c:	ldp	x3, x2, [x19, #272]
  453780:	strb	wzr, [x19, #255]
  453784:	mov	x0, x19
  453788:	blr	x3
  45378c:	ldr	x2, [x19, #320]
  453790:	mov	x1, #0x1                   	// #1
  453794:	mov	x0, #0x0                   	// #0
  453798:	add	x2, x2, x1
  45379c:	str	x2, [x19, #320]
  4537a0:	b	453758 <_obstack_memory_used@@Base+0x9154>
  4537a4:	ldp	x21, x22, [sp, #32]
  4537a8:	ldp	x23, x24, [sp, #48]
  4537ac:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4537b0:	mov	w2, w23
  4537b4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  4537b8:	add	x1, x1, #0x3f8
  4537bc:	add	x20, sp, #0x60
  4537c0:	mov	x0, x20
  4537c4:	bl	4025b0 <sprintf@plt>
  4537c8:	mov	x0, x20
  4537cc:	bl	4024f0 <strlen@plt>
  4537d0:	ldr	x1, [x19, #256]
  4537d4:	cbz	x0, 453834 <_obstack_memory_used@@Base+0x9230>
  4537d8:	add	x22, x20, x0
  4537dc:	b	453800 <_obstack_memory_used@@Base+0x91fc>
  4537e0:	mov	x0, x1
  4537e4:	add	x1, x1, #0x1
  4537e8:	str	x1, [x19, #256]
  4537ec:	add	x20, x20, #0x1
  4537f0:	strb	w21, [x19, x0]
  4537f4:	cmp	x20, x22
  4537f8:	strb	w21, [x19, #264]
  4537fc:	b.eq	453834 <_obstack_memory_used@@Base+0x9230>  // b.none
  453800:	ldrb	w21, [x20]
  453804:	cmp	x1, #0xff
  453808:	b.ne	4537e0 <_obstack_memory_used@@Base+0x91dc>  // b.any
  45380c:	ldp	x3, x2, [x19, #272]
  453810:	strb	wzr, [x19, #255]
  453814:	mov	x0, x19
  453818:	blr	x3
  45381c:	ldr	x2, [x19, #320]
  453820:	mov	x1, #0x1                   	// #1
  453824:	mov	x0, #0x0                   	// #0
  453828:	add	x2, x2, x1
  45382c:	str	x2, [x19, #320]
  453830:	b	4537e8 <_obstack_memory_used@@Base+0x91e4>
  453834:	add	x0, x1, #0x1
  453838:	cmp	x1, #0xff
  45383c:	b.ne	453864 <_obstack_memory_used@@Base+0x9260>  // b.any
  453840:	ldp	x3, x2, [x19, #272]
  453844:	strb	wzr, [x19, #255]
  453848:	mov	x0, x19
  45384c:	blr	x3
  453850:	ldr	x2, [x19, #320]
  453854:	mov	x0, #0x1                   	// #1
  453858:	mov	x1, #0x0                   	// #0
  45385c:	add	x2, x2, x0
  453860:	str	x2, [x19, #320]
  453864:	str	x0, [x19, #256]
  453868:	mov	w0, #0x7d                  	// #125
  45386c:	strb	w0, [x19, x1]
  453870:	strb	w0, [x19, #264]
  453874:	ldp	x21, x22, [sp, #32]
  453878:	ldp	x23, x24, [sp, #48]
  45387c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453880:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  453884:	add	x20, x20, #0xe0
  453888:	add	x22, x20, #0x6
  45388c:	mov	w21, #0x5f                  	// #95
  453890:	b	4538b8 <_obstack_memory_used@@Base+0x92b4>
  453894:	mov	x0, x1
  453898:	add	x1, x1, #0x1
  45389c:	str	x1, [x19, #256]
  4538a0:	add	x20, x20, #0x1
  4538a4:	strb	w21, [x19, x0]
  4538a8:	cmp	x20, x22
  4538ac:	strb	w21, [x19, #264]
  4538b0:	b.eq	4538e8 <_obstack_memory_used@@Base+0x92e4>  // b.none
  4538b4:	ldrb	w21, [x20]
  4538b8:	cmp	x1, #0xff
  4538bc:	b.ne	453894 <_obstack_memory_used@@Base+0x9290>  // b.any
  4538c0:	ldp	x3, x2, [x19, #272]
  4538c4:	strb	wzr, [x19, #255]
  4538c8:	mov	x0, x19
  4538cc:	blr	x3
  4538d0:	ldr	x2, [x19, #320]
  4538d4:	mov	x1, #0x1                   	// #1
  4538d8:	mov	x0, #0x0                   	// #0
  4538dc:	add	x2, x2, x1
  4538e0:	str	x2, [x19, #320]
  4538e4:	b	45389c <_obstack_memory_used@@Base+0x9298>
  4538e8:	ldp	x21, x22, [sp, #32]
  4538ec:	ldp	x23, x24, [sp, #48]
  4538f0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4538f4:	ldp	x21, x22, [sp, #32]
  4538f8:	ldp	x23, x24, [sp, #48]
  4538fc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453900:	ldrsw	x22, [x0, #24]
  453904:	ldr	x20, [x0, #16]
  453908:	cbz	x22, 4549bc <_obstack_memory_used@@Base+0xa3b8>
  45390c:	add	x22, x20, x22
  453910:	ldr	x1, [x19, #256]
  453914:	b	453938 <_obstack_memory_used@@Base+0x9334>
  453918:	mov	x0, x1
  45391c:	add	x1, x1, #0x1
  453920:	str	x1, [x19, #256]
  453924:	add	x20, x20, #0x1
  453928:	strb	w21, [x19, x0]
  45392c:	cmp	x20, x22
  453930:	strb	w21, [x19, #264]
  453934:	b.eq	453980 <_obstack_memory_used@@Base+0x937c>  // b.none
  453938:	ldrb	w21, [x20]
  45393c:	cmp	x1, #0xff
  453940:	b.ne	453918 <_obstack_memory_used@@Base+0x9314>  // b.any
  453944:	ldp	x3, x2, [x19, #272]
  453948:	strb	wzr, [x19, #255]
  45394c:	mov	x0, x19
  453950:	blr	x3
  453954:	ldr	x2, [x19, #320]
  453958:	mov	x1, #0x1                   	// #1
  45395c:	mov	x0, #0x0                   	// #0
  453960:	add	x2, x2, x1
  453964:	str	x2, [x19, #320]
  453968:	b	453920 <_obstack_memory_used@@Base+0x931c>
  45396c:	ldr	x1, [x19, #256]
  453970:	b	451b88 <_obstack_memory_used@@Base+0x7584>
  453974:	ldp	x21, x22, [sp, #32]
  453978:	ldp	x23, x24, [sp, #48]
  45397c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453980:	ldp	x21, x22, [sp, #32]
  453984:	ldp	x23, x24, [sp, #48]
  453988:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45398c:	ldp	x21, x22, [sp, #32]
  453990:	ldp	x23, x24, [sp, #48]
  453994:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453998:	ldp	x21, x22, [sp, #32]
  45399c:	ldp	x23, x24, [sp, #48]
  4539a0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4539a4:	ldp	x21, x22, [sp, #32]
  4539a8:	ldp	x23, x24, [sp, #48]
  4539ac:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4539b0:	ldr	x1, [x2, #8]
  4539b4:	ldr	w22, [x1, #28]
  4539b8:	cmp	w22, #0x6
  4539bc:	b.hi	453a54 <_obstack_memory_used@@Base+0x9450>  // b.pmore
  4539c0:	cbz	w22, 4511a4 <_obstack_memory_used@@Base+0x6ba0>
  4539c4:	ldr	x1, [x20, #16]
  4539c8:	ldr	w1, [x1]
  4539cc:	cbnz	w1, 4511a4 <_obstack_memory_used@@Base+0x6ba0>
  4539d0:	cmp	w0, #0x3e
  4539d4:	b.eq	454d58 <_obstack_memory_used@@Base+0xa754>  // b.none
  4539d8:	ldr	x2, [x20, #16]
  4539dc:	mov	w1, w21
  4539e0:	mov	x0, x19
  4539e4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4539e8:	cmp	w22, #0x4
  4539ec:	b.eq	454d38 <_obstack_memory_used@@Base+0xa734>  // b.none
  4539f0:	b.hi	454bfc <_obstack_memory_used@@Base+0xa5f8>  // b.pmore
  4539f4:	cmp	w22, #0x2
  4539f8:	b.eq	454ce8 <_obstack_memory_used@@Base+0xa6e4>  // b.none
  4539fc:	cmp	w22, #0x3
  453a00:	b.ne	454e30 <_obstack_memory_used@@Base+0xa82c>  // b.any
  453a04:	ldr	x1, [x19, #256]
  453a08:	cmp	x1, #0xff
  453a0c:	b.ne	453a34 <_obstack_memory_used@@Base+0x9430>  // b.any
  453a10:	ldp	x3, x2, [x19, #272]
  453a14:	strb	wzr, [x19, #255]
  453a18:	mov	x0, x19
  453a1c:	blr	x3
  453a20:	str	xzr, [x19, #256]
  453a24:	ldr	x0, [x19, #320]
  453a28:	mov	x1, #0x0                   	// #0
  453a2c:	add	x0, x0, #0x1
  453a30:	str	x0, [x19, #320]
  453a34:	add	x0, x1, #0x1
  453a38:	str	x0, [x19, #256]
  453a3c:	mov	w0, #0x6c                  	// #108
  453a40:	strb	w0, [x19, x1]
  453a44:	strb	w0, [x19, #264]
  453a48:	ldp	x21, x22, [sp, #32]
  453a4c:	ldp	x23, x24, [sp, #48]
  453a50:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453a54:	cmp	w22, #0x7
  453a58:	b.ne	4511a4 <_obstack_memory_used@@Base+0x6ba0>  // b.any
  453a5c:	ldr	x1, [x20, #16]
  453a60:	ldr	w3, [x1]
  453a64:	cbnz	w3, 4511a4 <_obstack_memory_used@@Base+0x6ba0>
  453a68:	ldr	w3, [x1, #16]
  453a6c:	cmp	w0, #0x3d
  453a70:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  453a74:	b.ne	4511a4 <_obstack_memory_used@@Base+0x6ba0>  // b.any
  453a78:	ldr	x0, [x1, #8]
  453a7c:	ldrb	w0, [x0]
  453a80:	cmp	w0, #0x30
  453a84:	b.eq	454e3c <_obstack_memory_used@@Base+0xa838>  // b.none
  453a88:	cmp	w0, #0x31
  453a8c:	b.ne	4511a4 <_obstack_memory_used@@Base+0x6ba0>  // b.any
  453a90:	mov	x0, x19
  453a94:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  453a98:	mov	x2, #0x4                   	// #4
  453a9c:	add	x1, x1, #0xb30
  453aa0:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  453aa4:	ldp	x21, x22, [sp, #32]
  453aa8:	ldp	x23, x24, [sp, #48]
  453aac:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453ab0:	ldp	x3, x2, [x19, #272]
  453ab4:	strb	wzr, [x19, #255]
  453ab8:	mov	x0, x19
  453abc:	blr	x3
  453ac0:	ldr	x0, [x19, #320]
  453ac4:	mov	x1, #0x0                   	// #0
  453ac8:	add	x0, x0, #0x1
  453acc:	str	x0, [x19, #320]
  453ad0:	b	453258 <_obstack_memory_used@@Base+0x8c54>
  453ad4:	ldr	x0, [x22, #8]
  453ad8:	ldr	x23, [x0]
  453adc:	ldrb	w0, [x23]
  453ae0:	subs	w1, w0, #0x61
  453ae4:	b.ne	453af8 <_obstack_memory_used@@Base+0x94f4>  // b.any
  453ae8:	ldrb	w1, [x23, #1]
  453aec:	subs	w1, w1, #0x64
  453af0:	b.ne	453af8 <_obstack_memory_used@@Base+0x94f4>  // b.any
  453af4:	ldrb	w1, [x23, #2]
  453af8:	ldr	w2, [x20]
  453afc:	cbnz	w1, 453b08 <_obstack_memory_used@@Base+0x9504>
  453b00:	cmp	w2, #0x3
  453b04:	b.eq	454b00 <_obstack_memory_used@@Base+0xa4fc>  // b.none
  453b08:	cmp	w2, #0x39
  453b0c:	b.eq	454ba8 <_obstack_memory_used@@Base+0xa5a4>  // b.none
  453b10:	cmp	w0, #0x73
  453b14:	b.ne	453be4 <_obstack_memory_used@@Base+0x95e0>  // b.any
  453b18:	ldrb	w1, [x23, #1]
  453b1c:	cmp	w1, #0x5a
  453b20:	b.ne	453c30 <_obstack_memory_used@@Base+0x962c>  // b.any
  453b24:	ldrb	w3, [x23, #2]
  453b28:	cbnz	w3, 453c30 <_obstack_memory_used@@Base+0x962c>
  453b2c:	mov	x1, x20
  453b30:	mov	x0, x19
  453b34:	bl	44d728 <_obstack_memory_used@@Base+0x3124>
  453b38:	cbnz	x0, 453b54 <_obstack_memory_used@@Base+0x9550>
  453b3c:	b	453b60 <_obstack_memory_used@@Base+0x955c>
  453b40:	ldr	x1, [x0, #8]
  453b44:	cbz	x1, 453b60 <_obstack_memory_used@@Base+0x955c>
  453b48:	ldr	x0, [x0, #16]
  453b4c:	add	w3, w3, #0x1
  453b50:	cbz	x0, 453b60 <_obstack_memory_used@@Base+0x955c>
  453b54:	ldr	w1, [x0]
  453b58:	cmp	w1, #0x2f
  453b5c:	b.eq	453b40 <_obstack_memory_used@@Base+0x953c>  // b.none
  453b60:	mov	w2, w3
  453b64:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  453b68:	add	x1, x1, #0x3f8
  453b6c:	add	x20, sp, #0x60
  453b70:	mov	x0, x20
  453b74:	bl	4025b0 <sprintf@plt>
  453b78:	mov	x0, x20
  453b7c:	bl	4024f0 <strlen@plt>
  453b80:	cbz	x0, 454cb4 <_obstack_memory_used@@Base+0xa6b0>
  453b84:	add	x22, x20, x0
  453b88:	ldr	x1, [x19, #256]
  453b8c:	b	453bb0 <_obstack_memory_used@@Base+0x95ac>
  453b90:	mov	x0, x1
  453b94:	add	x1, x1, #0x1
  453b98:	str	x1, [x19, #256]
  453b9c:	add	x20, x20, #0x1
  453ba0:	strb	w21, [x19, x0]
  453ba4:	cmp	x20, x22
  453ba8:	strb	w21, [x19, #264]
  453bac:	b.eq	454ab8 <_obstack_memory_used@@Base+0xa4b4>  // b.none
  453bb0:	ldrb	w21, [x20]
  453bb4:	cmp	x1, #0xff
  453bb8:	b.ne	453b90 <_obstack_memory_used@@Base+0x958c>  // b.any
  453bbc:	ldp	x3, x2, [x19, #272]
  453bc0:	strb	wzr, [x19, #255]
  453bc4:	mov	x0, x19
  453bc8:	blr	x3
  453bcc:	ldr	x2, [x19, #320]
  453bd0:	mov	x1, #0x1                   	// #1
  453bd4:	mov	x0, #0x0                   	// #0
  453bd8:	add	x2, x2, x1
  453bdc:	str	x2, [x19, #320]
  453be0:	b	453b98 <_obstack_memory_used@@Base+0x9594>
  453be4:	mov	x0, x19
  453be8:	mov	x2, x22
  453bec:	mov	w1, w21
  453bf0:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  453bf4:	ldrb	w0, [x23]
  453bf8:	cmp	w0, #0x67
  453bfc:	b.ne	453cc0 <_obstack_memory_used@@Base+0x96bc>  // b.any
  453c00:	ldrb	w1, [x23, #1]
  453c04:	cmp	w1, #0x73
  453c08:	b.ne	453cc0 <_obstack_memory_used@@Base+0x96bc>  // b.any
  453c0c:	ldrb	w1, [x23, #2]
  453c10:	cbnz	w1, 453cc0 <_obstack_memory_used@@Base+0x96bc>
  453c14:	mov	w1, w21
  453c18:	mov	x2, x20
  453c1c:	mov	x0, x19
  453c20:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453c24:	ldp	x21, x22, [sp, #32]
  453c28:	ldp	x23, x24, [sp, #48]
  453c2c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453c30:	cmp	w0, #0x73
  453c34:	b.ne	453be4 <_obstack_memory_used@@Base+0x95e0>  // b.any
  453c38:	ldrb	w0, [x23, #1]
  453c3c:	cmp	w0, #0x50
  453c40:	b.ne	453be4 <_obstack_memory_used@@Base+0x95e0>  // b.any
  453c44:	ldrb	w0, [x23, #2]
  453c48:	mov	w3, #0x0                   	// #0
  453c4c:	cbz	w0, 453c60 <_obstack_memory_used@@Base+0x965c>
  453c50:	b	453be4 <_obstack_memory_used@@Base+0x95e0>
  453c54:	add	w3, w3, #0x1
  453c58:	ldr	x20, [x20, #16]
  453c5c:	cbz	x20, 454724 <_obstack_memory_used@@Base+0xa120>
  453c60:	ldr	w0, [x20]
  453c64:	cmp	w0, #0x2f
  453c68:	b.ne	454724 <_obstack_memory_used@@Base+0xa120>  // b.any
  453c6c:	ldr	x0, [x20, #8]
  453c70:	cbz	x0, 454724 <_obstack_memory_used@@Base+0xa120>
  453c74:	ldr	w1, [x0]
  453c78:	cmp	w1, #0x4b
  453c7c:	b.ne	453c54 <_obstack_memory_used@@Base+0x9650>  // b.any
  453c80:	ldr	x1, [x0, #8]
  453c84:	mov	x0, x19
  453c88:	bl	44d728 <_obstack_memory_used@@Base+0x3124>
  453c8c:	mov	w1, #0x0                   	// #0
  453c90:	cbnz	x0, 453cac <_obstack_memory_used@@Base+0x96a8>
  453c94:	b	453cb8 <_obstack_memory_used@@Base+0x96b4>
  453c98:	ldr	x2, [x0, #8]
  453c9c:	cbz	x2, 453cb8 <_obstack_memory_used@@Base+0x96b4>
  453ca0:	ldr	x0, [x0, #16]
  453ca4:	add	w1, w1, #0x1
  453ca8:	cbz	x0, 453cb8 <_obstack_memory_used@@Base+0x96b4>
  453cac:	ldr	w2, [x0]
  453cb0:	cmp	w2, #0x2f
  453cb4:	b.eq	453c98 <_obstack_memory_used@@Base+0x9694>  // b.none
  453cb8:	add	w3, w3, w1
  453cbc:	b	453c58 <_obstack_memory_used@@Base+0x9654>
  453cc0:	cmp	w0, #0x73
  453cc4:	b.ne	452c54 <_obstack_memory_used@@Base+0x8650>  // b.any
  453cc8:	ldrb	w0, [x23, #1]
  453ccc:	cmp	w0, #0x74
  453cd0:	b.ne	452c54 <_obstack_memory_used@@Base+0x8650>  // b.any
  453cd4:	ldrb	w0, [x23, #2]
  453cd8:	cbnz	w0, 452c54 <_obstack_memory_used@@Base+0x8650>
  453cdc:	ldr	x1, [x19, #256]
  453ce0:	cmp	x1, #0xff
  453ce4:	b.ne	453d08 <_obstack_memory_used@@Base+0x9704>  // b.any
  453ce8:	ldp	x3, x2, [x19, #272]
  453cec:	strb	wzr, [x19, #255]
  453cf0:	mov	x0, x19
  453cf4:	blr	x3
  453cf8:	ldr	x0, [x19, #320]
  453cfc:	mov	x1, #0x0                   	// #0
  453d00:	add	x0, x0, #0x1
  453d04:	str	x0, [x19, #320]
  453d08:	add	x0, x1, #0x1
  453d0c:	str	x0, [x19, #256]
  453d10:	mov	w0, #0x28                  	// #40
  453d14:	strb	w0, [x19, x1]
  453d18:	strb	w0, [x19, #264]
  453d1c:	mov	w1, w21
  453d20:	mov	x2, x20
  453d24:	mov	x0, x19
  453d28:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453d2c:	ldr	x1, [x19, #256]
  453d30:	cmp	x1, #0xff
  453d34:	b.ne	453d58 <_obstack_memory_used@@Base+0x9754>  // b.any
  453d38:	ldp	x3, x2, [x19, #272]
  453d3c:	strb	wzr, [x19, #255]
  453d40:	mov	x0, x19
  453d44:	blr	x3
  453d48:	ldr	x0, [x19, #320]
  453d4c:	mov	x1, #0x0                   	// #0
  453d50:	add	x0, x0, #0x1
  453d54:	str	x0, [x19, #320]
  453d58:	add	x0, x1, #0x1
  453d5c:	str	x0, [x19, #256]
  453d60:	mov	w0, #0x29                  	// #41
  453d64:	strb	w0, [x19, x1]
  453d68:	strb	w0, [x19, #264]
  453d6c:	ldp	x21, x22, [sp, #32]
  453d70:	ldp	x23, x24, [sp, #48]
  453d74:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453d78:	ldr	x2, [x2, #8]
  453d7c:	mov	x0, x19
  453d80:	mov	w1, w21
  453d84:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453d88:	ldr	x0, [x19, #368]
  453d8c:	cbz	x0, 453d98 <_obstack_memory_used@@Base+0x9794>
  453d90:	ldr	x0, [sp, #96]
  453d94:	str	x0, [x19, #288]
  453d98:	ldr	x1, [x19, #256]
  453d9c:	ldrb	w2, [x19, #264]
  453da0:	mov	x0, x1
  453da4:	cmp	w2, #0x3c
  453da8:	b.eq	454800 <_obstack_memory_used@@Base+0xa1fc>  // b.none
  453dac:	add	x1, x0, #0x1
  453db0:	cmp	x0, #0xff
  453db4:	b.ne	453de0 <_obstack_memory_used@@Base+0x97dc>  // b.any
  453db8:	ldp	x3, x2, [x19, #272]
  453dbc:	strb	wzr, [x19, #255]
  453dc0:	mov	x1, x0
  453dc4:	mov	x0, x19
  453dc8:	blr	x3
  453dcc:	ldr	x2, [x19, #320]
  453dd0:	mov	x1, #0x1                   	// #1
  453dd4:	mov	x0, #0x0                   	// #0
  453dd8:	add	x2, x2, x1
  453ddc:	str	x2, [x19, #320]
  453de0:	str	x1, [x19, #256]
  453de4:	mov	w2, #0x3c                  	// #60
  453de8:	strb	w2, [x19, x0]
  453dec:	mov	w1, w21
  453df0:	strb	w2, [x19, #264]
  453df4:	mov	x0, x19
  453df8:	ldr	x2, [x20, #8]
  453dfc:	ldr	x2, [x2, #16]
  453e00:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453e04:	ldrb	w0, [x19, #264]
  453e08:	cmp	w0, #0x3e
  453e0c:	b.eq	454844 <_obstack_memory_used@@Base+0xa240>  // b.none
  453e10:	ldr	x0, [x19, #256]
  453e14:	add	x1, x0, #0x1
  453e18:	cmp	x0, #0xff
  453e1c:	b.ne	453e48 <_obstack_memory_used@@Base+0x9844>  // b.any
  453e20:	ldp	x3, x2, [x19, #272]
  453e24:	strb	wzr, [x19, #255]
  453e28:	mov	x1, x0
  453e2c:	mov	x0, x19
  453e30:	blr	x3
  453e34:	ldr	x2, [x19, #320]
  453e38:	mov	x1, #0x1                   	// #1
  453e3c:	mov	x0, #0x0                   	// #0
  453e40:	add	x2, x2, x1
  453e44:	str	x2, [x19, #320]
  453e48:	str	x1, [x19, #256]
  453e4c:	mov	w1, #0x3e                  	// #62
  453e50:	strb	w1, [x19, x0]
  453e54:	strb	w1, [x19, #264]
  453e58:	ldp	x21, x22, [sp, #32]
  453e5c:	ldp	x23, x24, [sp, #48]
  453e60:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453e64:	mov	x2, x20
  453e68:	mov	w1, w21
  453e6c:	mov	x0, x19
  453e70:	bl	454ef8 <_obstack_memory_used@@Base+0xa8f4>
  453e74:	b	451358 <_obstack_memory_used@@Base+0x6d54>
  453e78:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  453e7c:	add	x24, x24, #0xd8
  453e80:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  453e84:	add	x24, x24, #0x5
  453e88:	add	x22, x22, #0xd9
  453e8c:	mov	w23, #0x5f                  	// #95
  453e90:	ldr	x1, [x19, #256]
  453e94:	b	453eb8 <_obstack_memory_used@@Base+0x98b4>
  453e98:	mov	x0, x1
  453e9c:	add	x1, x1, #0x1
  453ea0:	str	x1, [x19, #256]
  453ea4:	cmp	x24, x22
  453ea8:	strb	w23, [x19, x0]
  453eac:	strb	w23, [x19, #264]
  453eb0:	b.eq	451b18 <_obstack_memory_used@@Base+0x7514>  // b.none
  453eb4:	ldrb	w23, [x22], #1
  453eb8:	cmp	x1, #0xff
  453ebc:	b.ne	453e98 <_obstack_memory_used@@Base+0x9894>  // b.any
  453ec0:	ldp	x3, x2, [x19, #272]
  453ec4:	strb	wzr, [x19, #255]
  453ec8:	mov	x0, x19
  453ecc:	blr	x3
  453ed0:	ldr	x2, [x19, #320]
  453ed4:	mov	x1, #0x1                   	// #1
  453ed8:	mov	x0, #0x0                   	// #0
  453edc:	add	x2, x2, x1
  453ee0:	str	x2, [x19, #320]
  453ee4:	b	453ea0 <_obstack_memory_used@@Base+0x989c>
  453ee8:	mov	x23, #0x0                   	// #0
  453eec:	mov	w22, #0x3a                  	// #58
  453ef0:	ldr	x1, [x19, #256]
  453ef4:	b	453f14 <_obstack_memory_used@@Base+0x9910>
  453ef8:	mov	x0, x1
  453efc:	add	x1, x1, #0x1
  453f00:	str	x1, [x19, #256]
  453f04:	strb	w22, [x19, x0]
  453f08:	strb	w22, [x19, #264]
  453f0c:	cbnz	x23, 4512fc <_obstack_memory_used@@Base+0x6cf8>
  453f10:	mov	x23, #0x1                   	// #1
  453f14:	cmp	x1, #0xff
  453f18:	b.ne	453ef8 <_obstack_memory_used@@Base+0x98f4>  // b.any
  453f1c:	ldp	x3, x2, [x19, #272]
  453f20:	strb	wzr, [x19, #255]
  453f24:	mov	x0, x19
  453f28:	blr	x3
  453f2c:	ldr	x2, [x19, #320]
  453f30:	mov	x1, #0x1                   	// #1
  453f34:	mov	x0, #0x0                   	// #0
  453f38:	add	x2, x2, x1
  453f3c:	str	x2, [x19, #320]
  453f40:	b	453f00 <_obstack_memory_used@@Base+0x98fc>
  453f44:	ldr	x1, [x19, #256]
  453f48:	cmp	x1, #0xff
  453f4c:	b.ne	453f70 <_obstack_memory_used@@Base+0x996c>  // b.any
  453f50:	ldp	x3, x2, [x19, #272]
  453f54:	strb	wzr, [x19, #255]
  453f58:	mov	x0, x19
  453f5c:	blr	x3
  453f60:	ldr	x0, [x19, #320]
  453f64:	mov	x1, #0x0                   	// #0
  453f68:	add	x0, x0, #0x1
  453f6c:	str	x0, [x19, #320]
  453f70:	add	x0, x1, #0x1
  453f74:	str	x0, [x19, #256]
  453f78:	mov	w0, #0x5b                  	// #91
  453f7c:	strb	w0, [x19, x1]
  453f80:	strb	w0, [x19, #264]
  453f84:	mov	w1, w21
  453f88:	mov	x0, x19
  453f8c:	ldr	x2, [x20, #16]
  453f90:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  453f94:	ldr	x1, [x19, #256]
  453f98:	cmp	x1, #0xff
  453f9c:	b.ne	453fc0 <_obstack_memory_used@@Base+0x99bc>  // b.any
  453fa0:	ldp	x3, x2, [x19, #272]
  453fa4:	strb	wzr, [x19, #255]
  453fa8:	mov	x0, x19
  453fac:	blr	x3
  453fb0:	ldr	x0, [x19, #320]
  453fb4:	mov	x1, #0x0                   	// #0
  453fb8:	add	x0, x0, #0x1
  453fbc:	str	x0, [x19, #320]
  453fc0:	add	x0, x1, #0x1
  453fc4:	str	x0, [x19, #256]
  453fc8:	mov	w0, #0x5d                  	// #93
  453fcc:	strb	w0, [x19, x1]
  453fd0:	strb	w0, [x19, #264]
  453fd4:	ldp	x21, x22, [sp, #32]
  453fd8:	ldp	x23, x24, [sp, #48]
  453fdc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  453fe0:	ldr	x0, [x19, #256]
  453fe4:	cmp	x0, #0xff
  453fe8:	b.ne	454010 <_obstack_memory_used@@Base+0x9a0c>  // b.any
  453fec:	ldp	x3, x2, [x19, #272]
  453ff0:	strb	wzr, [x19, #255]
  453ff4:	mov	x1, x0
  453ff8:	mov	x0, x19
  453ffc:	blr	x3
  454000:	ldr	x1, [x19, #320]
  454004:	mov	x0, #0x0                   	// #0
  454008:	add	x1, x1, #0x1
  45400c:	str	x1, [x19, #320]
  454010:	add	x1, x0, #0x1
  454014:	str	x1, [x19, #256]
  454018:	mov	w2, #0x20                  	// #32
  45401c:	strb	w2, [x19, x0]
  454020:	strb	w2, [x19, #264]
  454024:	b	452548 <_obstack_memory_used@@Base+0x7f44>
  454028:	ldr	x0, [x19, #256]
  45402c:	cmp	x0, #0xff
  454030:	b.ne	454058 <_obstack_memory_used@@Base+0x9a54>  // b.any
  454034:	ldp	x3, x2, [x19, #272]
  454038:	strb	wzr, [x19, #255]
  45403c:	mov	x1, x0
  454040:	mov	x0, x19
  454044:	blr	x3
  454048:	ldr	x1, [x19, #320]
  45404c:	mov	x0, #0x0                   	// #0
  454050:	add	x1, x1, #0x1
  454054:	str	x1, [x19, #320]
  454058:	add	x1, x0, #0x1
  45405c:	str	x1, [x19, #256]
  454060:	mov	w2, #0x20                  	// #32
  454064:	strb	w2, [x19, x0]
  454068:	strb	w2, [x19, #264]
  45406c:	b	4524e8 <_obstack_memory_used@@Base+0x7ee4>
  454070:	add	x2, x20, #0x10
  454074:	mov	w1, w22
  454078:	mov	x0, x19
  45407c:	bl	4556f8 <_obstack_memory_used@@Base+0xb0f4>
  454080:	ldr	x2, [x20, #8]
  454084:	cbz	x2, 4548b0 <_obstack_memory_used@@Base+0xa2ac>
  454088:	mov	w1, w22
  45408c:	mov	x0, x19
  454090:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  454094:	ldp	x21, x22, [sp, #32]
  454098:	ldp	x23, x24, [sp, #48]
  45409c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4540a0:	ldp	x3, x2, [x19, #272]
  4540a4:	strb	wzr, [x19, #255]
  4540a8:	mov	x0, x19
  4540ac:	blr	x3
  4540b0:	ldr	x0, [x19, #320]
  4540b4:	mov	w1, #0x29                  	// #41
  4540b8:	strb	w1, [x19]
  4540bc:	strb	w1, [x19, #264]
  4540c0:	mov	x1, #0x1                   	// #1
  4540c4:	add	x0, x0, x1
  4540c8:	str	x1, [x19, #256]
  4540cc:	str	x0, [x19, #320]
  4540d0:	ldr	w0, [x20]
  4540d4:	cmp	w0, #0x3e
  4540d8:	b.ne	451224 <_obstack_memory_used@@Base+0x6c20>  // b.any
  4540dc:	ldr	x1, [x19, #256]
  4540e0:	mov	w0, #0x2d                  	// #45
  4540e4:	add	x2, x1, #0x1
  4540e8:	str	x2, [x19, #256]
  4540ec:	strb	w0, [x19, x1]
  4540f0:	strb	w0, [x19, #264]
  4540f4:	b	451224 <_obstack_memory_used@@Base+0x6c20>
  4540f8:	ldp	x21, x22, [sp, #32]
  4540fc:	ldp	x23, x24, [sp, #48]
  454100:	ldp	x25, x26, [sp, #64]
  454104:	str	x4, [x19, #296]
  454108:	str	w1, [x19, #304]
  45410c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454110:	ldp	x21, x22, [sp, #32]
  454114:	ldp	x23, x24, [sp, #48]
  454118:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45411c:	ldp	x21, x22, [sp, #32]
  454120:	ldp	x23, x24, [sp, #48]
  454124:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454128:	mov	w22, #0x0                   	// #0
  45412c:	b	451288 <_obstack_memory_used@@Base+0x6c84>
  454130:	ldr	x0, [x19, #256]
  454134:	cmp	x0, x22
  454138:	b.eq	4548ec <_obstack_memory_used@@Base+0xa2e8>  // b.none
  45413c:	ldp	x21, x22, [sp, #32]
  454140:	ldp	x23, x24, [sp, #48]
  454144:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454148:	ldr	x2, [x20, #8]
  45414c:	mov	w1, w21
  454150:	mov	x0, x19
  454154:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  454158:	ldp	x21, x22, [sp, #32]
  45415c:	ldp	x23, x24, [sp, #48]
  454160:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454164:	cmp	x3, #0xff
  454168:	b.ne	4540dc <_obstack_memory_used@@Base+0x9ad8>  // b.any
  45416c:	ldp	x4, x2, [x19, #272]
  454170:	strb	wzr, [x19, #255]
  454174:	mov	x0, x19
  454178:	mov	x1, x3
  45417c:	blr	x4
  454180:	str	xzr, [x19, #256]
  454184:	ldr	x0, [x19, #320]
  454188:	add	x0, x0, #0x1
  45418c:	str	x0, [x19, #320]
  454190:	b	4540dc <_obstack_memory_used@@Base+0x9ad8>
  454194:	ldp	x21, x22, [sp, #32]
  454198:	ldp	x23, x24, [sp, #48]
  45419c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4541a0:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4541a4:	add	x24, x24, #0xef0
  4541a8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4541ac:	add	x24, x24, #0xd
  4541b0:	add	x22, x22, #0xef1
  4541b4:	mov	w20, #0x7b                  	// #123
  4541b8:	ldr	x1, [x19, #256]
  4541bc:	b	4541e0 <_obstack_memory_used@@Base+0x9bdc>
  4541c0:	mov	x0, x1
  4541c4:	add	x1, x1, #0x1
  4541c8:	str	x1, [x19, #256]
  4541cc:	cmp	x24, x22
  4541d0:	strb	w20, [x19, x0]
  4541d4:	strb	w20, [x19, #264]
  4541d8:	b.eq	454210 <_obstack_memory_used@@Base+0x9c0c>  // b.none
  4541dc:	ldrb	w20, [x22], #1
  4541e0:	cmp	x1, #0xff
  4541e4:	b.ne	4541c0 <_obstack_memory_used@@Base+0x9bbc>  // b.any
  4541e8:	ldp	x3, x2, [x19, #272]
  4541ec:	strb	wzr, [x19, #255]
  4541f0:	mov	x0, x19
  4541f4:	blr	x3
  4541f8:	ldr	x2, [x19, #320]
  4541fc:	mov	x1, #0x1                   	// #1
  454200:	mov	x0, #0x0                   	// #0
  454204:	add	x2, x2, x1
  454208:	str	x2, [x19, #320]
  45420c:	b	4541c8 <_obstack_memory_used@@Base+0x9bc4>
  454210:	ldr	w2, [x23, #16]
  454214:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  454218:	add	x1, x1, #0x3f8
  45421c:	add	x20, sp, #0x60
  454220:	add	w2, w2, #0x1
  454224:	mov	x0, x20
  454228:	bl	4025b0 <sprintf@plt>
  45422c:	mov	x0, x20
  454230:	bl	4024f0 <strlen@plt>
  454234:	ldr	x1, [x19, #256]
  454238:	cbz	x0, 454298 <_obstack_memory_used@@Base+0x9c94>
  45423c:	add	x24, x20, x0
  454240:	b	454264 <_obstack_memory_used@@Base+0x9c60>
  454244:	mov	x0, x1
  454248:	add	x1, x1, #0x1
  45424c:	str	x1, [x19, #256]
  454250:	add	x20, x20, #0x1
  454254:	strb	w22, [x19, x0]
  454258:	cmp	x24, x20
  45425c:	strb	w22, [x19, #264]
  454260:	b.eq	454298 <_obstack_memory_used@@Base+0x9c94>  // b.none
  454264:	ldrb	w22, [x20]
  454268:	cmp	x1, #0xff
  45426c:	b.ne	454244 <_obstack_memory_used@@Base+0x9c40>  // b.any
  454270:	ldp	x3, x2, [x19, #272]
  454274:	strb	wzr, [x19, #255]
  454278:	mov	x0, x19
  45427c:	blr	x3
  454280:	ldr	x2, [x19, #320]
  454284:	mov	x1, #0x1                   	// #1
  454288:	mov	x0, #0x0                   	// #0
  45428c:	add	x2, x2, x1
  454290:	str	x2, [x19, #320]
  454294:	b	45424c <_obstack_memory_used@@Base+0x9c48>
  454298:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  45429c:	add	x20, x20, #0xf00
  4542a0:	add	x24, x20, #0x3
  4542a4:	mov	w22, #0x7d                  	// #125
  4542a8:	b	4542d0 <_obstack_memory_used@@Base+0x9ccc>
  4542ac:	mov	x0, x1
  4542b0:	add	x1, x1, #0x1
  4542b4:	str	x1, [x19, #256]
  4542b8:	add	x20, x20, #0x1
  4542bc:	strb	w22, [x19, x0]
  4542c0:	cmp	x24, x20
  4542c4:	strb	w22, [x19, #264]
  4542c8:	b.eq	454300 <_obstack_memory_used@@Base+0x9cfc>  // b.none
  4542cc:	ldrb	w22, [x20]
  4542d0:	cmp	x1, #0xff
  4542d4:	b.ne	4542ac <_obstack_memory_used@@Base+0x9ca8>  // b.any
  4542d8:	ldp	x3, x2, [x19, #272]
  4542dc:	strb	wzr, [x19, #255]
  4542e0:	mov	x0, x19
  4542e4:	blr	x3
  4542e8:	ldr	x2, [x19, #320]
  4542ec:	mov	x1, #0x1                   	// #1
  4542f0:	mov	x0, #0x0                   	// #0
  4542f4:	add	x2, x2, x1
  4542f8:	str	x2, [x19, #320]
  4542fc:	b	4542b4 <_obstack_memory_used@@Base+0x9cb0>
  454300:	ldr	x23, [x23, #8]
  454304:	b	45130c <_obstack_memory_used@@Base+0x6d08>
  454308:	ldr	x25, [x25, #16]
  45430c:	ldr	w5, [x25]
  454310:	cmp	w5, #0x47
  454314:	b.eq	4549ac <_obstack_memory_used@@Base+0xa3a8>  // b.none
  454318:	ubfiz	x3, x24, #5, #32
  45431c:	sub	w0, w5, #0x1c
  454320:	mov	x1, #0x1f                  	// #31
  454324:	add	x3, x23, x3
  454328:	cmp	w0, #0x34
  45432c:	mov	x2, #0x1                   	// #1
  454330:	movk	x1, #0x1a, lsl #48
  454334:	b.hi	4523d4 <_obstack_memory_used@@Base+0x7dd0>  // b.pmore
  454338:	lsl	x0, x2, x0
  45433c:	tst	x0, x1
  454340:	b.eq	4523d4 <_obstack_memory_used@@Base+0x7dd0>  // b.none
  454344:	cmp	w24, #0x4
  454348:	b.eq	454428 <_obstack_memory_used@@Base+0x9e24>  // b.none
  45434c:	ldp	x8, x9, [x3, #-32]
  454350:	stur	x25, [x3, #-24]
  454354:	ldp	x4, x5, [x3, #-16]
  454358:	stur	wzr, [x3, #-16]
  45435c:	stp	x8, x9, [x3]
  454360:	sub	x0, x3, #0x20
  454364:	add	w24, w24, #0x1
  454368:	ldr	x25, [x25, #8]
  45436c:	stp	x4, x5, [x3, #16]
  454370:	ldr	w5, [x25]
  454374:	stp	x6, x0, [x3, #-8]
  454378:	sub	w0, w5, #0x1c
  45437c:	str	x3, [x19, #296]
  454380:	cmp	w0, #0x34
  454384:	add	x3, x3, #0x20
  454388:	b.ls	454338 <_obstack_memory_used@@Base+0x9d34>  // b.plast
  45438c:	b	4523d4 <_obstack_memory_used@@Base+0x7dd0>
  454390:	mov	w0, #0x1                   	// #1
  454394:	ldp	x21, x22, [sp, #32]
  454398:	ldp	x23, x24, [sp, #48]
  45439c:	str	w0, [x19, #304]
  4543a0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4543a4:	ldr	x4, [x19, #288]
  4543a8:	add	x0, sp, #0x60
  4543ac:	str	x0, [x19, #296]
  4543b0:	mov	w1, w22
  4543b4:	mov	x0, x19
  4543b8:	stp	x3, x20, [sp, #96]
  4543bc:	str	wzr, [sp, #112]
  4543c0:	str	x4, [sp, #120]
  4543c4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4543c8:	ldr	w0, [sp, #112]
  4543cc:	ldr	x1, [sp, #96]
  4543d0:	str	x1, [x19, #296]
  4543d4:	cbnz	w0, 454af4 <_obstack_memory_used@@Base+0xa4f0>
  4543d8:	ldr	x1, [x19, #256]
  4543dc:	cmp	x1, #0xff
  4543e0:	b.ne	454408 <_obstack_memory_used@@Base+0x9e04>  // b.any
  4543e4:	ldp	x3, x2, [x19, #272]
  4543e8:	strb	wzr, [x19, #255]
  4543ec:	mov	x0, x19
  4543f0:	blr	x3
  4543f4:	str	xzr, [x19, #256]
  4543f8:	ldr	x0, [x19, #320]
  4543fc:	mov	x1, #0x0                   	// #0
  454400:	add	x0, x0, #0x1
  454404:	str	x0, [x19, #320]
  454408:	add	x0, x1, #0x1
  45440c:	str	x0, [x19, #256]
  454410:	mov	w0, #0x20                  	// #32
  454414:	strb	w0, [x19, x1]
  454418:	strb	w0, [x19, #264]
  45441c:	ldr	x3, [x19, #296]
  454420:	b	4518ac <_obstack_memory_used@@Base+0x72a8>
  454424:	str	x3, [x19, #296]
  454428:	mov	w0, #0x1                   	// #1
  45442c:	ldp	x21, x22, [sp, #32]
  454430:	ldp	x23, x24, [sp, #48]
  454434:	ldp	x25, x26, [sp, #64]
  454438:	str	w0, [x19, #304]
  45443c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454440:	ldrb	w0, [x0]
  454444:	sub	w1, w0, #0x63
  454448:	sub	w0, w0, #0x72
  45444c:	and	w1, w1, #0xff
  454450:	and	w0, w0, #0xff
  454454:	cmp	w1, #0x1
  454458:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  45445c:	b.hi	45270c <_obstack_memory_used@@Base+0x8108>  // b.pmore
  454460:	mov	w1, w21
  454464:	mov	x0, x19
  454468:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  45446c:	ldr	x1, [x19, #256]
  454470:	cmp	x1, #0xff
  454474:	b.ne	45449c <_obstack_memory_used@@Base+0x9e98>  // b.any
  454478:	ldp	x3, x2, [x19, #272]
  45447c:	strb	wzr, [x19, #255]
  454480:	mov	x0, x19
  454484:	blr	x3
  454488:	str	xzr, [x19, #256]
  45448c:	ldr	x0, [x19, #320]
  454490:	mov	x1, #0x0                   	// #0
  454494:	add	x0, x0, #0x1
  454498:	str	x0, [x19, #320]
  45449c:	add	x0, x1, #0x1
  4544a0:	str	x0, [x19, #256]
  4544a4:	mov	w0, #0x3c                  	// #60
  4544a8:	strb	w0, [x19, x1]
  4544ac:	strb	w0, [x19, #264]
  4544b0:	mov	w1, w21
  4544b4:	mov	x0, x19
  4544b8:	mov	w22, #0x3e                  	// #62
  4544bc:	ldr	x2, [x20, #16]
  4544c0:	mov	x23, #0x0                   	// #0
  4544c4:	ldr	x2, [x2, #8]
  4544c8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4544cc:	ldr	x1, [x19, #256]
  4544d0:	b	4544f4 <_obstack_memory_used@@Base+0x9ef0>
  4544d4:	mov	x0, x1
  4544d8:	add	x1, x1, #0x1
  4544dc:	str	x1, [x19, #256]
  4544e0:	strb	w22, [x19, x0]
  4544e4:	strb	w22, [x19, #264]
  4544e8:	mov	w22, #0x28                  	// #40
  4544ec:	cbnz	x23, 45467c <_obstack_memory_used@@Base+0xa078>
  4544f0:	mov	x23, #0x1                   	// #1
  4544f4:	cmp	x1, #0xff
  4544f8:	b.ne	4544d4 <_obstack_memory_used@@Base+0x9ed0>  // b.any
  4544fc:	ldp	x3, x2, [x19, #272]
  454500:	strb	wzr, [x19, #255]
  454504:	mov	x0, x19
  454508:	blr	x3
  45450c:	ldr	x2, [x19, #320]
  454510:	mov	x1, #0x1                   	// #1
  454514:	mov	x0, #0x0                   	// #0
  454518:	add	x2, x2, x1
  45451c:	str	x2, [x19, #320]
  454520:	b	4544dc <_obstack_memory_used@@Base+0x9ed8>
  454524:	ldr	w4, [x19, #344]
  454528:	ldr	x5, [x19, #336]
  45452c:	cmp	w4, #0x0
  454530:	b.le	454b24 <_obstack_memory_used@@Base+0xa520>
  454534:	sub	w3, w4, #0x1
  454538:	add	x1, x5, #0x10
  45453c:	mov	x2, x5
  454540:	add	x3, x1, w3, uxtw #4
  454544:	b	454554 <_obstack_memory_used@@Base+0x9f50>
  454548:	add	x2, x2, #0x10
  45454c:	cmp	x3, x2
  454550:	b.eq	454b24 <_obstack_memory_used@@Base+0xa520>  // b.none
  454554:	ldr	x1, [x2]
  454558:	cmp	x0, x1
  45455c:	b.ne	454548 <_obstack_memory_used@@Base+0x9f44>  // b.any
  454560:	ldr	x4, [x19, #328]
  454564:	mov	x1, x4
  454568:	cbnz	x4, 454584 <_obstack_memory_used@@Base+0x9f80>
  45456c:	b	454988 <_obstack_memory_used@@Base+0xa384>
  454570:	cmp	x3, x20
  454574:	ccmp	x4, x1, #0x4, eq  // eq = none
  454578:	b.ne	454590 <_obstack_memory_used@@Base+0x9f8c>  // b.any
  45457c:	ldr	x1, [x1, #8]
  454580:	cbz	x1, 454988 <_obstack_memory_used@@Base+0xa384>
  454584:	ldr	x3, [x1]
  454588:	cmp	x3, x0
  45458c:	b.ne	454570 <_obstack_memory_used@@Base+0x9f6c>  // b.any
  454590:	add	x1, x0, #0x8
  454594:	mov	x0, x19
  454598:	bl	44d6f8 <_obstack_memory_used@@Base+0x30f4>
  45459c:	cbz	x0, 4510e0 <_obstack_memory_used@@Base+0x6adc>
  4545a0:	mov	w22, #0x0                   	// #0
  4545a4:	ldr	w1, [x0]
  4545a8:	cmp	w1, #0x2f
  4545ac:	b.ne	451264 <_obstack_memory_used@@Base+0x6c60>  // b.any
  4545b0:	ldr	w1, [x19, #316]
  4545b4:	tbnz	w1, #31, 454cc0 <_obstack_memory_used@@Base+0xa6bc>
  4545b8:	bl	44d6b8 <_obstack_memory_used@@Base+0x30b4>
  4545bc:	cbz	x0, 454cd4 <_obstack_memory_used@@Base+0xa6d0>
  4545c0:	ldr	w1, [x0]
  4545c4:	b	451264 <_obstack_memory_used@@Base+0x6c60>
  4545c8:	ldr	x2, [x20, #8]
  4545cc:	add	x3, x20, #0x10
  4545d0:	mov	w1, w21
  4545d4:	mov	x0, x19
  4545d8:	bl	4561b0 <_obstack_memory_used@@Base+0xbbac>
  4545dc:	cbnz	w0, 454aac <_obstack_memory_used@@Base+0xa4a8>
  4545e0:	ldp	x24, x3, [x20, #8]
  4545e4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4545e8:	add	x1, x1, #0x148
  4545ec:	ldr	x0, [x24, #8]
  4545f0:	ldp	x22, x2, [x3, #8]
  4545f4:	ldr	x0, [x0]
  4545f8:	ldp	x23, x20, [x2, #8]
  4545fc:	bl	402890 <strcmp@plt>
  454600:	cbnz	w0, 454a0c <_obstack_memory_used@@Base+0xa408>
  454604:	mov	x2, x22
  454608:	mov	w1, w21
  45460c:	mov	x0, x19
  454610:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454614:	mov	x2, x24
  454618:	mov	w1, w21
  45461c:	mov	x0, x19
  454620:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  454624:	mov	x2, x23
  454628:	mov	w1, w21
  45462c:	mov	x0, x19
  454630:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454634:	mov	x0, x19
  454638:	mov	x2, #0x3                   	// #3
  45463c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  454640:	add	x1, x1, #0x150
  454644:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  454648:	mov	w1, w21
  45464c:	mov	x2, x20
  454650:	mov	x0, x19
  454654:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454658:	ldp	x21, x22, [sp, #32]
  45465c:	ldp	x23, x24, [sp, #48]
  454660:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454664:	sub	w1, w0, #0x61
  454668:	and	w1, w1, #0xff
  45466c:	cmp	w1, #0x5
  454670:	b.hi	454c30 <_obstack_memory_used@@Base+0xa62c>  // b.pmore
  454674:	sub	w0, w0, #0x57
  454678:	b	45362c <_obstack_memory_used@@Base+0x9028>
  45467c:	ldr	x2, [x20, #16]
  454680:	mov	w1, w21
  454684:	mov	x0, x19
  454688:	ldr	x2, [x2, #16]
  45468c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  454690:	ldr	x1, [x19, #256]
  454694:	cmp	x1, #0xff
  454698:	b.ne	4546c0 <_obstack_memory_used@@Base+0xa0bc>  // b.any
  45469c:	ldp	x3, x2, [x19, #272]
  4546a0:	strb	wzr, [x19, #255]
  4546a4:	mov	x0, x19
  4546a8:	blr	x3
  4546ac:	str	xzr, [x19, #256]
  4546b0:	ldr	x0, [x19, #320]
  4546b4:	mov	x1, #0x0                   	// #0
  4546b8:	add	x0, x0, #0x1
  4546bc:	str	x0, [x19, #320]
  4546c0:	add	x0, x1, #0x1
  4546c4:	str	x0, [x19, #256]
  4546c8:	mov	w0, #0x29                  	// #41
  4546cc:	strb	w0, [x19, x1]
  4546d0:	strb	w0, [x19, #264]
  4546d4:	ldp	x21, x22, [sp, #32]
  4546d8:	ldp	x23, x24, [sp, #48]
  4546dc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4546e0:	ldr	w1, [x19, #316]
  4546e4:	tbnz	w1, #31, 45368c <_obstack_memory_used@@Base+0x9088>
  4546e8:	bl	44d6b8 <_obstack_memory_used@@Base+0x30b4>
  4546ec:	mov	x2, x0
  4546f0:	cbnz	x0, 45368c <_obstack_memory_used@@Base+0x9088>
  4546f4:	b	4510e0 <_obstack_memory_used@@Base+0x6adc>
  4546f8:	cmp	w1, #0x63
  4546fc:	b.eq	454ac4 <_obstack_memory_used@@Base+0xa4c0>  // b.none
  454700:	mov	w1, w21
  454704:	mov	x0, x19
  454708:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  45470c:	ldr	x2, [x20, #16]
  454710:	mov	w1, w21
  454714:	mov	x0, x19
  454718:	ldr	x2, [x2, #16]
  45471c:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454720:	b	452840 <_obstack_memory_used@@Base+0x823c>
  454724:	mov	w2, w3
  454728:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  45472c:	add	x1, x1, #0x3f8
  454730:	add	x20, sp, #0x60
  454734:	mov	x0, x20
  454738:	bl	4025b0 <sprintf@plt>
  45473c:	mov	x0, x20
  454740:	bl	4024f0 <strlen@plt>
  454744:	cbz	x0, 454da0 <_obstack_memory_used@@Base+0xa79c>
  454748:	add	x22, x20, x0
  45474c:	ldr	x1, [x19, #256]
  454750:	b	454774 <_obstack_memory_used@@Base+0xa170>
  454754:	mov	x0, x1
  454758:	add	x1, x1, #0x1
  45475c:	str	x1, [x19, #256]
  454760:	add	x20, x20, #0x1
  454764:	strb	w21, [x19, x0]
  454768:	cmp	x22, x20
  45476c:	strb	w21, [x19, #264]
  454770:	b.eq	4547b4 <_obstack_memory_used@@Base+0xa1b0>  // b.none
  454774:	ldrb	w21, [x20]
  454778:	cmp	x1, #0xff
  45477c:	b.ne	454754 <_obstack_memory_used@@Base+0xa150>  // b.any
  454780:	ldp	x3, x2, [x19, #272]
  454784:	strb	wzr, [x19, #255]
  454788:	mov	x0, x19
  45478c:	blr	x3
  454790:	ldr	x2, [x19, #320]
  454794:	mov	x1, #0x1                   	// #1
  454798:	mov	x0, #0x0                   	// #0
  45479c:	add	x2, x2, x1
  4547a0:	str	x2, [x19, #320]
  4547a4:	b	45475c <_obstack_memory_used@@Base+0xa158>
  4547a8:	ldp	x21, x22, [sp, #32]
  4547ac:	ldp	x23, x24, [sp, #48]
  4547b0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4547b4:	ldp	x21, x22, [sp, #32]
  4547b8:	ldp	x23, x24, [sp, #48]
  4547bc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4547c0:	ldr	x0, [x22, #8]
  4547c4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  4547c8:	mov	x2, #0x6                   	// #6
  4547cc:	add	x1, x1, #0xf08
  4547d0:	bl	4026a0 <strncmp@plt>
  4547d4:	cbnz	w0, 4524c8 <_obstack_memory_used@@Base+0x7ec4>
  4547d8:	ldr	x2, [x20, #16]
  4547dc:	mov	w1, w21
  4547e0:	mov	x0, x19
  4547e4:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4547e8:	mov	x0, x19
  4547ec:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x129fc>
  4547f0:	mov	x2, #0x2                   	// #2
  4547f4:	add	x1, x1, #0x78
  4547f8:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  4547fc:	b	452588 <_obstack_memory_used@@Base+0x7f84>
  454800:	cmp	x1, #0xff
  454804:	b.ne	45482c <_obstack_memory_used@@Base+0xa228>  // b.any
  454808:	ldp	x3, x2, [x19, #272]
  45480c:	strb	wzr, [x19, #255]
  454810:	mov	x0, x19
  454814:	blr	x3
  454818:	str	xzr, [x19, #256]
  45481c:	ldr	x0, [x19, #320]
  454820:	mov	x1, #0x0                   	// #0
  454824:	add	x0, x0, #0x1
  454828:	str	x0, [x19, #320]
  45482c:	add	x0, x1, #0x1
  454830:	str	x0, [x19, #256]
  454834:	mov	w2, #0x20                  	// #32
  454838:	strb	w2, [x19, x1]
  45483c:	strb	w2, [x19, #264]
  454840:	b	453dac <_obstack_memory_used@@Base+0x97a8>
  454844:	ldr	x1, [x19, #256]
  454848:	cmp	x1, #0xff
  45484c:	b.ne	454874 <_obstack_memory_used@@Base+0xa270>  // b.any
  454850:	ldp	x3, x2, [x19, #272]
  454854:	strb	wzr, [x19, #255]
  454858:	mov	x0, x19
  45485c:	blr	x3
  454860:	str	xzr, [x19, #256]
  454864:	ldr	x0, [x19, #320]
  454868:	mov	x1, #0x0                   	// #0
  45486c:	add	x0, x0, #0x1
  454870:	str	x0, [x19, #320]
  454874:	add	x0, x1, #0x1
  454878:	str	x0, [x19, #256]
  45487c:	mov	w2, #0x20                  	// #32
  454880:	strb	w2, [x19, x1]
  454884:	strb	w2, [x19, #264]
  454888:	b	453e14 <_obstack_memory_used@@Base+0x9810>
  45488c:	ldp	x21, x22, [sp, #32]
  454890:	ldp	x23, x24, [sp, #48]
  454894:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454898:	ldp	x21, x22, [sp, #32]
  45489c:	ldp	x23, x24, [sp, #48]
  4548a0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4548a4:	ldp	x21, x22, [sp, #32]
  4548a8:	ldp	x23, x24, [sp, #48]
  4548ac:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4548b0:	ldp	x21, x22, [sp, #32]
  4548b4:	ldp	x23, x24, [sp, #48]
  4548b8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4548bc:	ldr	x2, [x20, #8]
  4548c0:	mov	w1, w21
  4548c4:	mov	x0, x19
  4548c8:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  4548cc:	mov	x0, x19
  4548d0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  4548d4:	mov	x2, #0x3                   	// #3
  4548d8:	add	x1, x1, #0x348
  4548dc:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  4548e0:	ldp	x21, x22, [sp, #32]
  4548e4:	ldp	x23, x24, [sp, #48]
  4548e8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4548ec:	sub	x22, x22, #0x2
  4548f0:	ldp	x23, x24, [sp, #48]
  4548f4:	str	x22, [x19, #256]
  4548f8:	ldp	x21, x22, [sp, #32]
  4548fc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454900:	ldr	x0, [x0, #8]
  454904:	ldr	w1, [x0, #16]
  454908:	cmp	w1, #0x1
  45490c:	b.eq	454c90 <_obstack_memory_used@@Base+0xa68c>  // b.none
  454910:	ldp	x21, x22, [sp, #32]
  454914:	ldp	x23, x24, [sp, #48]
  454918:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  45491c:	ldr	x1, [x0, #8]
  454920:	ldr	w2, [x1, #16]
  454924:	cmp	w2, #0x1
  454928:	b.ne	452730 <_obstack_memory_used@@Base+0x812c>  // b.any
  45492c:	ldr	x1, [x1, #8]
  454930:	ldrb	w1, [x1]
  454934:	cmp	w1, #0x3e
  454938:	b.ne	452730 <_obstack_memory_used@@Base+0x812c>  // b.any
  45493c:	ldr	x1, [x19, #256]
  454940:	cmp	x1, #0xff
  454944:	b.ne	45496c <_obstack_memory_used@@Base+0xa368>  // b.any
  454948:	ldp	x3, x2, [x19, #272]
  45494c:	strb	wzr, [x19, #255]
  454950:	mov	x0, x19
  454954:	blr	x3
  454958:	str	xzr, [x19, #256]
  45495c:	ldr	x0, [x19, #320]
  454960:	mov	x1, #0x0                   	// #0
  454964:	add	x0, x0, #0x1
  454968:	str	x0, [x19, #320]
  45496c:	add	x0, x1, #0x1
  454970:	str	x0, [x19, #256]
  454974:	mov	w0, #0x28                  	// #40
  454978:	strb	w0, [x19, x1]
  45497c:	strb	w0, [x19, #264]
  454980:	ldr	x0, [x20, #8]
  454984:	b	452730 <_obstack_memory_used@@Base+0x812c>
  454988:	ldr	x2, [x2, #8]
  45498c:	add	x1, x0, #0x8
  454990:	ldr	x23, [x19, #288]
  454994:	str	x2, [x19, #288]
  454998:	mov	x0, x19
  45499c:	bl	44d6f8 <_obstack_memory_used@@Base+0x30f4>
  4549a0:	cbz	x0, 454cd8 <_obstack_memory_used@@Base+0xa6d4>
  4549a4:	mov	w22, #0x1                   	// #1
  4549a8:	b	4545a4 <_obstack_memory_used@@Base+0x9fa0>
  4549ac:	ldr	x25, [x25, #8]
  4549b0:	cbz	x25, 454428 <_obstack_memory_used@@Base+0x9e24>
  4549b4:	ldr	w5, [x25]
  4549b8:	b	454318 <_obstack_memory_used@@Base+0x9d14>
  4549bc:	ldp	x21, x22, [sp, #32]
  4549c0:	ldp	x23, x24, [sp, #48]
  4549c4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4549c8:	ldp	x21, x22, [sp, #32]
  4549cc:	ldp	x23, x24, [sp, #48]
  4549d0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4549d4:	ldp	x21, x22, [sp, #32]
  4549d8:	ldp	x23, x24, [sp, #48]
  4549dc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  4549e0:	ldr	x0, [x2, #16]
  4549e4:	ldr	w0, [x0]
  4549e8:	cmp	w0, #0x29
  4549ec:	b.eq	4549f8 <_obstack_memory_used@@Base+0xa3f4>  // b.none
  4549f0:	mov	w0, #0x1                   	// #1
  4549f4:	str	w0, [x19, #304]
  4549f8:	ldr	x2, [x2, #8]
  4549fc:	mov	w1, w21
  454a00:	mov	x0, x19
  454a04:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454a08:	b	452778 <_obstack_memory_used@@Base+0x8174>
  454a0c:	mov	x0, x19
  454a10:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  454a14:	mov	x2, #0x4                   	// #4
  454a18:	add	x1, x1, #0x158
  454a1c:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  454a20:	ldr	x0, [x22, #8]
  454a24:	cbz	x0, 454a7c <_obstack_memory_used@@Base+0xa478>
  454a28:	mov	w1, w21
  454a2c:	mov	x2, x22
  454a30:	mov	x0, x19
  454a34:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454a38:	ldr	x1, [x19, #256]
  454a3c:	cmp	x1, #0xff
  454a40:	b.ne	454a68 <_obstack_memory_used@@Base+0xa464>  // b.any
  454a44:	ldp	x3, x2, [x19, #272]
  454a48:	strb	wzr, [x19, #255]
  454a4c:	mov	x0, x19
  454a50:	blr	x3
  454a54:	str	xzr, [x19, #256]
  454a58:	ldr	x0, [x19, #320]
  454a5c:	mov	x1, #0x0                   	// #0
  454a60:	add	x0, x0, #0x1
  454a64:	str	x0, [x19, #320]
  454a68:	add	x0, x1, #0x1
  454a6c:	str	x0, [x19, #256]
  454a70:	mov	w0, #0x20                  	// #32
  454a74:	strb	w0, [x19, x1]
  454a78:	strb	w0, [x19, #264]
  454a7c:	mov	x2, x23
  454a80:	mov	w1, w21
  454a84:	mov	x0, x19
  454a88:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  454a8c:	cbz	x20, 454c24 <_obstack_memory_used@@Base+0xa620>
  454a90:	mov	w1, w21
  454a94:	mov	x2, x20
  454a98:	mov	x0, x19
  454a9c:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454aa0:	ldp	x21, x22, [sp, #32]
  454aa4:	ldp	x23, x24, [sp, #48]
  454aa8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454aac:	ldp	x21, x22, [sp, #32]
  454ab0:	ldp	x23, x24, [sp, #48]
  454ab4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454ab8:	ldp	x21, x22, [sp, #32]
  454abc:	ldp	x23, x24, [sp, #48]
  454ac0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454ac4:	ldrb	w1, [x0, #1]
  454ac8:	cmp	w1, #0x6c
  454acc:	b.ne	454700 <_obstack_memory_used@@Base+0xa0fc>  // b.any
  454ad0:	ldrb	w0, [x0, #2]
  454ad4:	cbz	w0, 45470c <_obstack_memory_used@@Base+0xa108>
  454ad8:	b	454700 <_obstack_memory_used@@Base+0xa0fc>
  454adc:	ldp	x21, x22, [sp, #32]
  454ae0:	ldp	x23, x24, [sp, #48]
  454ae4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454ae8:	ldp	x21, x22, [sp, #32]
  454aec:	ldp	x23, x24, [sp, #48]
  454af0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454af4:	ldp	x21, x22, [sp, #32]
  454af8:	ldp	x23, x24, [sp, #48]
  454afc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454b00:	ldr	x1, [x20, #8]
  454b04:	ldr	w2, [x1]
  454b08:	cmp	w2, #0x1
  454b0c:	b.ne	453b10 <_obstack_memory_used@@Base+0x950c>  // b.any
  454b10:	ldr	x2, [x20, #16]
  454b14:	ldr	w2, [x2]
  454b18:	cmp	w2, #0x29
  454b1c:	csel	x20, x20, x1, ne  // ne = any
  454b20:	b	453b10 <_obstack_memory_used@@Base+0x950c>
  454b24:	ldr	w1, [x19, #348]
  454b28:	cmp	w4, w1
  454b2c:	b.ge	454b94 <_obstack_memory_used@@Base+0xa590>  // b.tcont
  454b30:	sbfiz	x1, x4, #4, #32
  454b34:	add	w2, w4, #0x1
  454b38:	ldr	x3, [x19, #288]
  454b3c:	str	w2, [x19, #344]
  454b40:	str	x0, [x5, x1]
  454b44:	add	x1, x5, w4, sxtw #4
  454b48:	add	x1, x1, #0x8
  454b4c:	cbz	x3, 454cac <_obstack_memory_used@@Base+0xa6a8>
  454b50:	ldr	w2, [x19, #360]
  454b54:	ldr	w6, [x19, #364]
  454b58:	sbfiz	x5, x2, #4, #32
  454b5c:	b	454b8c <_obstack_memory_used@@Base+0xa588>
  454b60:	ldr	x4, [x19, #352]
  454b64:	add	w2, w2, #0x1
  454b68:	ldr	x7, [x3, #8]
  454b6c:	add	x4, x4, x5
  454b70:	str	w2, [x19, #360]
  454b74:	add	x5, x5, #0x10
  454b78:	str	x7, [x4, #8]
  454b7c:	str	x4, [x1]
  454b80:	mov	x1, x4
  454b84:	ldr	x3, [x3]
  454b88:	cbz	x3, 454cac <_obstack_memory_used@@Base+0xa6a8>
  454b8c:	cmp	w6, w2
  454b90:	b.gt	454b60 <_obstack_memory_used@@Base+0xa55c>
  454b94:	mov	w0, #0x1                   	// #1
  454b98:	ldp	x21, x22, [sp, #32]
  454b9c:	ldp	x23, x24, [sp, #48]
  454ba0:	str	w0, [x19, #304]
  454ba4:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454ba8:	ldr	x2, [x20, #8]
  454bac:	mov	w1, w21
  454bb0:	mov	x0, x19
  454bb4:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  454bb8:	mov	x2, x22
  454bbc:	mov	w1, w21
  454bc0:	mov	x0, x19
  454bc4:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  454bc8:	ldp	x21, x22, [sp, #32]
  454bcc:	ldp	x23, x24, [sp, #48]
  454bd0:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454bd4:	ldr	x2, [x20, #16]
  454bd8:	mov	x0, x19
  454bdc:	mov	w1, w21
  454be0:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  454be4:	str	xzr, [x19, #296]
  454be8:	ldr	w0, [sp, #112]
  454bec:	cbz	w0, 451af0 <_obstack_memory_used@@Base+0x74ec>
  454bf0:	ldp	x21, x22, [sp, #32]
  454bf4:	ldp	x23, x24, [sp, #48]
  454bf8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454bfc:	cmp	w22, #0x5
  454c00:	b.eq	454dac <_obstack_memory_used@@Base+0xa7a8>  // b.none
  454c04:	mov	x0, x19
  454c08:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  454c0c:	mov	x2, #0x3                   	// #3
  454c10:	add	x1, x1, #0x170
  454c14:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  454c18:	ldp	x21, x22, [sp, #32]
  454c1c:	ldp	x23, x24, [sp, #48]
  454c20:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454c24:	ldp	x21, x22, [sp, #32]
  454c28:	ldp	x23, x24, [sp, #48]
  454c2c:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454c30:	cmp	x21, x24
  454c34:	b.ls	453598 <_obstack_memory_used@@Base+0x8f94>  // b.plast
  454c38:	cmp	x2, #0xff
  454c3c:	ccmp	w0, w23, #0x0, ls  // ls = plast
  454c40:	b.ne	453598 <_obstack_memory_used@@Base+0x8f94>  // b.any
  454c44:	ldr	x1, [x19, #256]
  454c48:	and	w22, w2, #0xff
  454c4c:	cmp	x1, #0xff
  454c50:	b.ne	454c78 <_obstack_memory_used@@Base+0xa674>  // b.any
  454c54:	ldp	x3, x2, [x19, #272]
  454c58:	strb	wzr, [x19, #255]
  454c5c:	mov	x0, x19
  454c60:	blr	x3
  454c64:	str	xzr, [x19, #256]
  454c68:	ldr	x0, [x19, #320]
  454c6c:	mov	x1, #0x0                   	// #0
  454c70:	add	x0, x0, #0x1
  454c74:	str	x0, [x19, #320]
  454c78:	add	x0, x1, #0x1
  454c7c:	str	x0, [x19, #256]
  454c80:	strb	w22, [x19, x1]
  454c84:	mov	x20, x24
  454c88:	strb	w22, [x19, #264]
  454c8c:	b	4535d8 <_obstack_memory_used@@Base+0x8fd4>
  454c90:	ldr	x0, [x0, #8]
  454c94:	ldrb	w0, [x0]
  454c98:	cmp	w0, #0x3e
  454c9c:	b.eq	454dcc <_obstack_memory_used@@Base+0xa7c8>  // b.none
  454ca0:	ldp	x21, x22, [sp, #32]
  454ca4:	ldp	x23, x24, [sp, #48]
  454ca8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454cac:	str	xzr, [x1]
  454cb0:	b	454590 <_obstack_memory_used@@Base+0x9f8c>
  454cb4:	ldp	x21, x22, [sp, #32]
  454cb8:	ldp	x23, x24, [sp, #48]
  454cbc:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454cc0:	ldr	w1, [x20]
  454cc4:	ldr	x4, [x19, #296]
  454cc8:	cmp	w1, #0x2f
  454ccc:	csel	x20, x20, x0, ne  // ne = any
  454cd0:	b	451288 <_obstack_memory_used@@Base+0x6c84>
  454cd4:	cbz	w22, 4510e0 <_obstack_memory_used@@Base+0x6adc>
  454cd8:	ldp	x21, x22, [sp, #32]
  454cdc:	str	x23, [x19, #288]
  454ce0:	ldp	x23, x24, [sp, #48]
  454ce4:	b	4510e8 <_obstack_memory_used@@Base+0x6ae4>
  454ce8:	ldr	x1, [x19, #256]
  454cec:	cmp	x1, #0xff
  454cf0:	b.ne	454d18 <_obstack_memory_used@@Base+0xa714>  // b.any
  454cf4:	ldp	x3, x2, [x19, #272]
  454cf8:	strb	wzr, [x19, #255]
  454cfc:	mov	x0, x19
  454d00:	blr	x3
  454d04:	str	xzr, [x19, #256]
  454d08:	ldr	x0, [x19, #320]
  454d0c:	mov	x1, #0x0                   	// #0
  454d10:	add	x0, x0, #0x1
  454d14:	str	x0, [x19, #320]
  454d18:	add	x0, x1, #0x1
  454d1c:	str	x0, [x19, #256]
  454d20:	mov	w0, #0x75                  	// #117
  454d24:	strb	w0, [x19, x1]
  454d28:	strb	w0, [x19, #264]
  454d2c:	ldp	x21, x22, [sp, #32]
  454d30:	ldp	x23, x24, [sp, #48]
  454d34:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454d38:	mov	x0, x19
  454d3c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  454d40:	mov	x2, #0x2                   	// #2
  454d44:	add	x1, x1, #0x160
  454d48:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  454d4c:	ldp	x21, x22, [sp, #32]
  454d50:	ldp	x23, x24, [sp, #48]
  454d54:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454d58:	ldr	x1, [x19, #256]
  454d5c:	cmp	x1, #0xff
  454d60:	b.ne	454d88 <_obstack_memory_used@@Base+0xa784>  // b.any
  454d64:	ldp	x3, x2, [x19, #272]
  454d68:	strb	wzr, [x19, #255]
  454d6c:	mov	x0, x19
  454d70:	blr	x3
  454d74:	str	xzr, [x19, #256]
  454d78:	ldr	x0, [x19, #320]
  454d7c:	mov	x1, #0x0                   	// #0
  454d80:	add	x0, x0, #0x1
  454d84:	str	x0, [x19, #320]
  454d88:	add	x0, x1, #0x1
  454d8c:	str	x0, [x19, #256]
  454d90:	mov	w0, #0x2d                  	// #45
  454d94:	strb	w0, [x19, x1]
  454d98:	strb	w0, [x19, #264]
  454d9c:	b	4539d8 <_obstack_memory_used@@Base+0x93d4>
  454da0:	ldp	x21, x22, [sp, #32]
  454da4:	ldp	x23, x24, [sp, #48]
  454da8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454dac:	mov	x0, x19
  454db0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  454db4:	mov	x2, #0x2                   	// #2
  454db8:	add	x1, x1, #0x168
  454dbc:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  454dc0:	ldp	x21, x22, [sp, #32]
  454dc4:	ldp	x23, x24, [sp, #48]
  454dc8:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454dcc:	ldr	x1, [x19, #256]
  454dd0:	cmp	x1, #0xff
  454dd4:	b.ne	454dfc <_obstack_memory_used@@Base+0xa7f8>  // b.any
  454dd8:	ldp	x3, x2, [x19, #272]
  454ddc:	strb	wzr, [x19, #255]
  454de0:	mov	x0, x19
  454de4:	blr	x3
  454de8:	str	xzr, [x19, #256]
  454dec:	ldr	x0, [x19, #320]
  454df0:	mov	x1, #0x0                   	// #0
  454df4:	add	x0, x0, #0x1
  454df8:	str	x0, [x19, #320]
  454dfc:	add	x0, x1, #0x1
  454e00:	str	x0, [x19, #256]
  454e04:	mov	w0, #0x29                  	// #41
  454e08:	strb	w0, [x19, x1]
  454e0c:	strb	w0, [x19, #264]
  454e10:	ldp	x21, x22, [sp, #32]
  454e14:	ldp	x23, x24, [sp, #48]
  454e18:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454e1c:	mov	x2, x22
  454e20:	mov	w1, w21
  454e24:	mov	x0, x19
  454e28:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  454e2c:	b	452c54 <_obstack_memory_used@@Base+0x8650>
  454e30:	ldp	x21, x22, [sp, #32]
  454e34:	ldp	x23, x24, [sp, #48]
  454e38:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454e3c:	mov	x0, x19
  454e40:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1a9fc>
  454e44:	mov	x2, #0x5                   	// #5
  454e48:	add	x1, x1, #0xb38
  454e4c:	bl	44cdd8 <_obstack_memory_used@@Base+0x27d4>
  454e50:	ldp	x21, x22, [sp, #32]
  454e54:	ldp	x23, x24, [sp, #48]
  454e58:	b	4510b4 <_obstack_memory_used@@Base+0x6ab0>
  454e5c:	nop
  454e60:	stp	x29, x30, [sp, #-48]!
  454e64:	mov	x29, sp
  454e68:	stp	x19, x20, [sp, #16]
  454e6c:	mov	x20, x0
  454e70:	cbz	x2, 454ee0 <_obstack_memory_used@@Base+0xa8dc>
  454e74:	ldr	w3, [x2, #4]
  454e78:	mov	x19, x2
  454e7c:	cmp	w3, #0x1
  454e80:	b.gt	454ee0 <_obstack_memory_used@@Base+0xa8dc>
  454e84:	ldr	w4, [x0, #308]
  454e88:	cmp	w4, #0x400
  454e8c:	b.gt	454ee0 <_obstack_memory_used@@Base+0xa8dc>
  454e90:	add	w3, w3, #0x1
  454e94:	add	w4, w4, #0x1
  454e98:	str	w3, [x2, #4]
  454e9c:	add	x3, sp, #0x20
  454ea0:	str	w4, [x0, #308]
  454ea4:	ldr	x4, [x0, #328]
  454ea8:	str	x3, [x0, #328]
  454eac:	stp	x2, x4, [sp, #32]
  454eb0:	bl	451050 <_obstack_memory_used@@Base+0x6a4c>
  454eb4:	ldr	w1, [x19, #4]
  454eb8:	ldr	x0, [sp, #40]
  454ebc:	str	x0, [x20, #328]
  454ec0:	ldr	w0, [x20, #308]
  454ec4:	sub	w1, w1, #0x1
  454ec8:	str	w1, [x19, #4]
  454ecc:	sub	w0, w0, #0x1
  454ed0:	str	w0, [x20, #308]
  454ed4:	ldp	x19, x20, [sp, #16]
  454ed8:	ldp	x29, x30, [sp], #48
  454edc:	ret
  454ee0:	mov	w0, #0x1                   	// #1
  454ee4:	str	w0, [x20, #304]
  454ee8:	ldp	x19, x20, [sp, #16]
  454eec:	ldp	x29, x30, [sp], #48
  454ef0:	ret
  454ef4:	nop
  454ef8:	stp	x29, x30, [sp, #-64]!
  454efc:	mov	x29, sp
  454f00:	stp	x19, x20, [sp, #16]
  454f04:	mov	x19, x0
  454f08:	ldr	w0, [x2]
  454f0c:	stp	x21, x22, [sp, #32]
  454f10:	mov	x20, x2
  454f14:	sub	w0, w0, #0x3
  454f18:	mov	w21, w1
  454f1c:	cmp	w0, #0x4d
  454f20:	b.ls	454f40 <_obstack_memory_used@@Base+0xa93c>  // b.plast
  454f24:	mov	x2, x20
  454f28:	mov	w1, w21
  454f2c:	mov	x0, x19
  454f30:	ldp	x19, x20, [sp, #16]
  454f34:	ldp	x21, x22, [sp, #32]
  454f38:	ldp	x29, x30, [sp], #64
  454f3c:	b	454e60 <_obstack_memory_used@@Base+0xa85c>
  454f40:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x209fc>
  454f44:	add	x1, x1, #0x580
  454f48:	ldrh	w0, [x1, w0, uxtw #1]
  454f4c:	adr	x1, 454f58 <_obstack_memory_used@@Base+0xa954>
  454f50:	add	x0, x1, w0, sxth #2
  454f54:	br	x0
  454f58:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  454f5c:	add	x20, x20, #0x228
  454f60:	add	x22, x20, #0x9
  454f64:	mov	w21, #0x20                  	// #32
  454f68:	ldr	x1, [x19, #256]
  454f6c:	b	454f94 <_obstack_memory_used@@Base+0xa990>
  454f70:	mov	x0, x1
  454f74:	add	x1, x1, #0x1
  454f78:	str	x1, [x19, #256]
  454f7c:	add	x20, x20, #0x1
  454f80:	strb	w21, [x19, x0]
  454f84:	cmp	x22, x20
  454f88:	strb	w21, [x19, #264]
  454f8c:	b.eq	45514c <_obstack_memory_used@@Base+0xab48>  // b.none
  454f90:	ldrb	w21, [x20]
  454f94:	cmp	x1, #0xff
  454f98:	b.ne	454f70 <_obstack_memory_used@@Base+0xa96c>  // b.any
  454f9c:	ldp	x3, x2, [x19, #272]
  454fa0:	strb	wzr, [x19, #255]
  454fa4:	mov	x0, x19
  454fa8:	blr	x3
  454fac:	ldr	x2, [x19, #320]
  454fb0:	mov	x1, #0x1                   	// #1
  454fb4:	mov	x0, #0x0                   	// #0
  454fb8:	add	x2, x2, x1
  454fbc:	str	x2, [x19, #320]
  454fc0:	b	454f78 <_obstack_memory_used@@Base+0xa974>
  454fc4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  454fc8:	add	x20, x20, #0x238
  454fcc:	add	x22, x20, #0x9
  454fd0:	mov	w21, #0x20                  	// #32
  454fd4:	ldr	x1, [x19, #256]
  454fd8:	b	455000 <_obstack_memory_used@@Base+0xa9fc>
  454fdc:	mov	x0, x1
  454fe0:	add	x1, x1, #0x1
  454fe4:	str	x1, [x19, #256]
  454fe8:	add	x20, x20, #0x1
  454fec:	strb	w21, [x19, x0]
  454ff0:	cmp	x20, x22
  454ff4:	strb	w21, [x19, #264]
  454ff8:	b.eq	45514c <_obstack_memory_used@@Base+0xab48>  // b.none
  454ffc:	ldrb	w21, [x20]
  455000:	cmp	x1, #0xff
  455004:	b.ne	454fdc <_obstack_memory_used@@Base+0xa9d8>  // b.any
  455008:	ldp	x3, x2, [x19, #272]
  45500c:	strb	wzr, [x19, #255]
  455010:	mov	x0, x19
  455014:	blr	x3
  455018:	ldr	x2, [x19, #320]
  45501c:	mov	x1, #0x1                   	// #1
  455020:	mov	x0, #0x0                   	// #0
  455024:	add	x2, x2, x1
  455028:	str	x2, [x19, #320]
  45502c:	b	454fe4 <_obstack_memory_used@@Base+0xa9e0>
  455030:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  455034:	add	x20, x20, #0x248
  455038:	add	x22, x20, #0x6
  45503c:	mov	w21, #0x20                  	// #32
  455040:	ldr	x1, [x19, #256]
  455044:	b	45506c <_obstack_memory_used@@Base+0xaa68>
  455048:	mov	x0, x1
  45504c:	add	x1, x1, #0x1
  455050:	str	x1, [x19, #256]
  455054:	add	x20, x20, #0x1
  455058:	strb	w21, [x19, x0]
  45505c:	cmp	x22, x20
  455060:	strb	w21, [x19, #264]
  455064:	b.eq	45514c <_obstack_memory_used@@Base+0xab48>  // b.none
  455068:	ldrb	w21, [x20]
  45506c:	cmp	x1, #0xff
  455070:	b.ne	455048 <_obstack_memory_used@@Base+0xaa44>  // b.any
  455074:	ldp	x3, x2, [x19, #272]
  455078:	strb	wzr, [x19, #255]
  45507c:	mov	x0, x19
  455080:	blr	x3
  455084:	ldr	x2, [x19, #320]
  455088:	mov	x1, #0x1                   	// #1
  45508c:	mov	x0, #0x0                   	// #0
  455090:	add	x2, x2, x1
  455094:	str	x2, [x19, #320]
  455098:	b	455050 <_obstack_memory_used@@Base+0xaa4c>
  45509c:	ldr	x2, [x2, #8]
  4550a0:	b	454f28 <_obstack_memory_used@@Base+0xa924>
  4550a4:	ldr	x0, [x19, #256]
  4550a8:	cmp	x0, #0xff
  4550ac:	b.eq	455668 <_obstack_memory_used@@Base+0xb064>  // b.none
  4550b0:	add	x1, x0, #0x1
  4550b4:	str	x1, [x19, #256]
  4550b8:	mov	w2, #0x20                  	// #32
  4550bc:	strb	w2, [x19, x0]
  4550c0:	strb	w2, [x19, #264]
  4550c4:	b	4552b4 <_obstack_memory_used@@Base+0xacb0>
  4550c8:	ldr	x0, [x19, #256]
  4550cc:	add	x1, x0, #0x1
  4550d0:	cmp	x0, #0xff
  4550d4:	b.eq	4556c0 <_obstack_memory_used@@Base+0xb0bc>  // b.none
  4550d8:	str	x1, [x19, #256]
  4550dc:	mov	w2, #0x20                  	// #32
  4550e0:	strb	w2, [x19, x0]
  4550e4:	strb	w2, [x19, #264]
  4550e8:	mov	x21, #0x0                   	// #0
  4550ec:	mov	w20, #0x26                  	// #38
  4550f0:	b	455110 <_obstack_memory_used@@Base+0xab0c>
  4550f4:	mov	x0, x1
  4550f8:	add	x1, x1, #0x1
  4550fc:	str	x1, [x19, #256]
  455100:	strb	w20, [x19, x0]
  455104:	strb	w20, [x19, #264]
  455108:	cbnz	x21, 45514c <_obstack_memory_used@@Base+0xab48>
  45510c:	mov	x21, #0x1                   	// #1
  455110:	cmp	x1, #0xff
  455114:	b.ne	4550f4 <_obstack_memory_used@@Base+0xaaf0>  // b.any
  455118:	ldp	x3, x2, [x19, #272]
  45511c:	strb	wzr, [x19, #255]
  455120:	mov	x0, x19
  455124:	blr	x3
  455128:	ldr	x2, [x19, #320]
  45512c:	mov	x0, #0x0                   	// #0
  455130:	mov	x1, #0x1                   	// #1
  455134:	str	x1, [x19, #256]
  455138:	add	x2, x2, x1
  45513c:	str	x2, [x19, #320]
  455140:	strb	w20, [x19, x0]
  455144:	strb	w20, [x19, #264]
  455148:	cbz	x21, 45510c <_obstack_memory_used@@Base+0xab08>
  45514c:	ldp	x19, x20, [sp, #16]
  455150:	ldp	x21, x22, [sp, #32]
  455154:	ldp	x29, x30, [sp], #64
  455158:	ret
  45515c:	ldr	x1, [x19, #256]
  455160:	add	x0, x1, #0x1
  455164:	cmp	x1, #0xff
  455168:	b.eq	455698 <_obstack_memory_used@@Base+0xb094>  // b.none
  45516c:	str	x0, [x19, #256]
  455170:	mov	w0, #0x20                  	// #32
  455174:	strb	w0, [x19, x1]
  455178:	mov	w1, w21
  45517c:	strb	w0, [x19, #264]
  455180:	mov	x0, x19
  455184:	ldr	x2, [x20, #16]
  455188:	ldp	x19, x20, [sp, #16]
  45518c:	ldp	x21, x22, [sp, #32]
  455190:	ldp	x29, x30, [sp], #64
  455194:	b	454e60 <_obstack_memory_used@@Base+0xa85c>
  455198:	tbnz	w21, #2, 45514c <_obstack_memory_used@@Base+0xab48>
  45519c:	ldr	x1, [x19, #256]
  4551a0:	add	x0, x1, #0x1
  4551a4:	cmp	x1, #0xff
  4551a8:	b.ne	4551d0 <_obstack_memory_used@@Base+0xabcc>  // b.any
  4551ac:	ldp	x3, x2, [x19, #272]
  4551b0:	strb	wzr, [x19, #255]
  4551b4:	mov	x0, x19
  4551b8:	blr	x3
  4551bc:	ldr	x2, [x19, #320]
  4551c0:	mov	x0, #0x1                   	// #1
  4551c4:	mov	x1, #0x0                   	// #0
  4551c8:	add	x2, x2, x0
  4551cc:	str	x2, [x19, #320]
  4551d0:	str	x0, [x19, #256]
  4551d4:	mov	w0, #0x2a                  	// #42
  4551d8:	strb	w0, [x19, x1]
  4551dc:	strb	w0, [x19, #264]
  4551e0:	b	45514c <_obstack_memory_used@@Base+0xab48>
  4551e4:	ldrb	w0, [x19, #264]
  4551e8:	cmp	w0, #0x28
  4551ec:	b.eq	455234 <_obstack_memory_used@@Base+0xac30>  // b.none
  4551f0:	ldr	x1, [x19, #256]
  4551f4:	add	x0, x1, #0x1
  4551f8:	cmp	x1, #0xff
  4551fc:	b.ne	455224 <_obstack_memory_used@@Base+0xac20>  // b.any
  455200:	ldp	x3, x2, [x19, #272]
  455204:	strb	wzr, [x19, #255]
  455208:	mov	x0, x19
  45520c:	blr	x3
  455210:	ldr	x2, [x19, #320]
  455214:	mov	x0, #0x1                   	// #1
  455218:	mov	x1, #0x0                   	// #0
  45521c:	add	x2, x2, x0
  455220:	str	x2, [x19, #320]
  455224:	str	x0, [x19, #256]
  455228:	mov	w0, #0x20                  	// #32
  45522c:	strb	w0, [x19, x1]
  455230:	strb	w0, [x19, #264]
  455234:	ldr	x2, [x20, #8]
  455238:	mov	w1, w21
  45523c:	mov	x0, x19
  455240:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  455244:	add	x20, x20, #0x2a0
  455248:	mov	w21, #0x3a                  	// #58
  45524c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  455250:	add	x22, x20, #0x3
  455254:	ldr	x1, [x19, #256]
  455258:	b	455280 <_obstack_memory_used@@Base+0xac7c>
  45525c:	mov	x0, x1
  455260:	add	x1, x1, #0x1
  455264:	str	x1, [x19, #256]
  455268:	add	x20, x20, #0x1
  45526c:	strb	w21, [x19, x0]
  455270:	cmp	x22, x20
  455274:	strb	w21, [x19, #264]
  455278:	b.eq	45514c <_obstack_memory_used@@Base+0xab48>  // b.none
  45527c:	ldrb	w21, [x20]
  455280:	cmp	x1, #0xff
  455284:	b.ne	45525c <_obstack_memory_used@@Base+0xac58>  // b.any
  455288:	ldp	x3, x2, [x19, #272]
  45528c:	strb	wzr, [x19, #255]
  455290:	mov	x0, x19
  455294:	blr	x3
  455298:	ldr	x2, [x19, #320]
  45529c:	mov	x1, #0x1                   	// #1
  4552a0:	mov	x0, #0x0                   	// #0
  4552a4:	add	x2, x2, x1
  4552a8:	str	x2, [x19, #320]
  4552ac:	b	455264 <_obstack_memory_used@@Base+0xac60>
  4552b0:	ldr	x1, [x19, #256]
  4552b4:	cmp	x1, #0xff
  4552b8:	b.eq	455640 <_obstack_memory_used@@Base+0xb03c>  // b.none
  4552bc:	add	x0, x1, #0x1
  4552c0:	str	x0, [x19, #256]
  4552c4:	mov	w0, #0x26                  	// #38
  4552c8:	strb	w0, [x19, x1]
  4552cc:	strb	w0, [x19, #264]
  4552d0:	ldp	x19, x20, [sp, #16]
  4552d4:	ldp	x21, x22, [sp, #32]
  4552d8:	ldp	x29, x30, [sp], #64
  4552dc:	ret
  4552e0:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4552e4:	add	x22, x22, #0x278
  4552e8:	stp	x23, x24, [sp, #48]
  4552ec:	add	x24, x22, #0x6
  4552f0:	mov	w23, #0x20                  	// #32
  4552f4:	ldr	x1, [x19, #256]
  4552f8:	b	455320 <_obstack_memory_used@@Base+0xad1c>
  4552fc:	mov	x0, x1
  455300:	add	x1, x1, #0x1
  455304:	str	x1, [x19, #256]
  455308:	add	x22, x22, #0x1
  45530c:	strb	w23, [x19, x0]
  455310:	cmp	x24, x22
  455314:	strb	w23, [x19, #264]
  455318:	b.eq	455588 <_obstack_memory_used@@Base+0xaf84>  // b.none
  45531c:	ldrb	w23, [x22]
  455320:	cmp	x1, #0xff
  455324:	b.ne	4552fc <_obstack_memory_used@@Base+0xacf8>  // b.any
  455328:	ldp	x3, x2, [x19, #272]
  45532c:	strb	wzr, [x19, #255]
  455330:	mov	x0, x19
  455334:	blr	x3
  455338:	ldr	x2, [x19, #320]
  45533c:	mov	x1, #0x1                   	// #1
  455340:	mov	x0, #0x0                   	// #0
  455344:	add	x2, x2, x1
  455348:	str	x2, [x19, #320]
  45534c:	b	455304 <_obstack_memory_used@@Base+0xad00>
  455350:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  455354:	add	x22, x22, #0x268
  455358:	stp	x23, x24, [sp, #48]
  45535c:	add	x24, x22, #0x9
  455360:	mov	w23, #0x20                  	// #32
  455364:	ldr	x1, [x19, #256]
  455368:	b	455390 <_obstack_memory_used@@Base+0xad8c>
  45536c:	mov	x0, x1
  455370:	add	x1, x1, #0x1
  455374:	str	x1, [x19, #256]
  455378:	add	x22, x22, #0x1
  45537c:	strb	w23, [x19, x0]
  455380:	cmp	x22, x24
  455384:	strb	w23, [x19, #264]
  455388:	b.eq	455588 <_obstack_memory_used@@Base+0xaf84>  // b.none
  45538c:	ldrb	w23, [x22]
  455390:	cmp	x1, #0xff
  455394:	b.ne	45536c <_obstack_memory_used@@Base+0xad68>  // b.any
  455398:	ldp	x3, x2, [x19, #272]
  45539c:	strb	wzr, [x19, #255]
  4553a0:	mov	x0, x19
  4553a4:	blr	x3
  4553a8:	ldr	x2, [x19, #320]
  4553ac:	mov	x1, #0x1                   	// #1
  4553b0:	mov	x0, #0x0                   	// #0
  4553b4:	add	x2, x2, x1
  4553b8:	str	x2, [x19, #320]
  4553bc:	b	455374 <_obstack_memory_used@@Base+0xad70>
  4553c0:	stp	x23, x24, [sp, #48]
  4553c4:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4553c8:	add	x24, x24, #0x2a8
  4553cc:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4553d0:	add	x24, x24, #0xa
  4553d4:	add	x22, x22, #0x2a9
  4553d8:	mov	w23, #0x20                  	// #32
  4553dc:	ldr	x1, [x19, #256]
  4553e0:	b	455404 <_obstack_memory_used@@Base+0xae00>
  4553e4:	mov	x0, x1
  4553e8:	add	x1, x1, #0x1
  4553ec:	str	x1, [x19, #256]
  4553f0:	cmp	x22, x24
  4553f4:	strb	w23, [x19, x0]
  4553f8:	strb	w23, [x19, #264]
  4553fc:	b.eq	455638 <_obstack_memory_used@@Base+0xb034>  // b.none
  455400:	ldrb	w23, [x22], #1
  455404:	cmp	x1, #0xff
  455408:	b.ne	4553e4 <_obstack_memory_used@@Base+0xade0>  // b.any
  45540c:	ldp	x3, x2, [x19, #272]
  455410:	strb	wzr, [x19, #255]
  455414:	mov	x0, x19
  455418:	blr	x3
  45541c:	ldr	x2, [x19, #320]
  455420:	mov	x1, #0x1                   	// #1
  455424:	mov	x0, #0x0                   	// #0
  455428:	add	x2, x2, x1
  45542c:	str	x2, [x19, #320]
  455430:	b	4553ec <_obstack_memory_used@@Base+0xade8>
  455434:	ldr	x1, [x19, #256]
  455438:	b	4550e8 <_obstack_memory_used@@Base+0xaae4>
  45543c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  455440:	add	x20, x20, #0x280
  455444:	add	x22, x20, #0x8
  455448:	mov	w21, #0x63                  	// #99
  45544c:	ldr	x1, [x19, #256]
  455450:	b	455478 <_obstack_memory_used@@Base+0xae74>
  455454:	mov	x0, x1
  455458:	add	x1, x1, #0x1
  45545c:	str	x1, [x19, #256]
  455460:	add	x20, x20, #0x1
  455464:	strb	w21, [x19, x0]
  455468:	cmp	x22, x20
  45546c:	strb	w21, [x19, #264]
  455470:	b.eq	45514c <_obstack_memory_used@@Base+0xab48>  // b.none
  455474:	ldrb	w21, [x20]
  455478:	cmp	x1, #0xff
  45547c:	b.ne	455454 <_obstack_memory_used@@Base+0xae50>  // b.any
  455480:	ldp	x3, x2, [x19, #272]
  455484:	strb	wzr, [x19, #255]
  455488:	mov	x0, x19
  45548c:	blr	x3
  455490:	ldr	x2, [x19, #320]
  455494:	mov	x1, #0x1                   	// #1
  455498:	mov	x0, #0x0                   	// #0
  45549c:	add	x2, x2, x1
  4554a0:	str	x2, [x19, #320]
  4554a4:	b	45545c <_obstack_memory_used@@Base+0xae58>
  4554a8:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4554ac:	add	x22, x22, #0x290
  4554b0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4554b4:	add	x22, x22, #0xa
  4554b8:	add	x20, x20, #0x291
  4554bc:	mov	w21, #0x69                  	// #105
  4554c0:	ldr	x1, [x19, #256]
  4554c4:	b	4554e8 <_obstack_memory_used@@Base+0xaee4>
  4554c8:	mov	x0, x1
  4554cc:	add	x1, x1, #0x1
  4554d0:	str	x1, [x19, #256]
  4554d4:	cmp	x20, x22
  4554d8:	strb	w21, [x19, x0]
  4554dc:	strb	w21, [x19, #264]
  4554e0:	b.eq	45514c <_obstack_memory_used@@Base+0xab48>  // b.none
  4554e4:	ldrb	w21, [x20], #1
  4554e8:	cmp	x1, #0xff
  4554ec:	b.ne	4554c8 <_obstack_memory_used@@Base+0xaec4>  // b.any
  4554f0:	ldp	x3, x2, [x19, #272]
  4554f4:	strb	wzr, [x19, #255]
  4554f8:	mov	x0, x19
  4554fc:	blr	x3
  455500:	ldr	x2, [x19, #320]
  455504:	mov	x1, #0x1                   	// #1
  455508:	mov	x0, #0x0                   	// #0
  45550c:	add	x2, x2, x1
  455510:	str	x2, [x19, #320]
  455514:	b	4554d0 <_obstack_memory_used@@Base+0xaecc>
  455518:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  45551c:	add	x22, x22, #0x250
  455520:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  455524:	add	x22, x22, #0x11
  455528:	add	x20, x20, #0x251
  45552c:	mov	w21, #0x20                  	// #32
  455530:	ldr	x1, [x19, #256]
  455534:	b	455558 <_obstack_memory_used@@Base+0xaf54>
  455538:	mov	x0, x1
  45553c:	add	x1, x1, #0x1
  455540:	str	x1, [x19, #256]
  455544:	cmp	x22, x20
  455548:	strb	w21, [x19, x0]
  45554c:	strb	w21, [x19, #264]
  455550:	b.eq	45514c <_obstack_memory_used@@Base+0xab48>  // b.none
  455554:	ldrb	w21, [x20], #1
  455558:	cmp	x1, #0xff
  45555c:	b.ne	455538 <_obstack_memory_used@@Base+0xaf34>  // b.any
  455560:	ldp	x3, x2, [x19, #272]
  455564:	strb	wzr, [x19, #255]
  455568:	mov	x0, x19
  45556c:	blr	x3
  455570:	ldr	x2, [x19, #320]
  455574:	mov	x1, #0x1                   	// #1
  455578:	mov	x0, #0x0                   	// #0
  45557c:	add	x2, x2, x1
  455580:	str	x2, [x19, #320]
  455584:	b	455540 <_obstack_memory_used@@Base+0xaf3c>
  455588:	ldr	x2, [x20, #16]
  45558c:	cbz	x2, 4556ec <_obstack_memory_used@@Base+0xb0e8>
  455590:	add	x0, x1, #0x1
  455594:	cmp	x1, #0xff
  455598:	b.ne	4555c4 <_obstack_memory_used@@Base+0xafc0>  // b.any
  45559c:	ldp	x3, x2, [x19, #272]
  4555a0:	strb	wzr, [x19, #255]
  4555a4:	mov	x0, x19
  4555a8:	blr	x3
  4555ac:	ldr	x3, [x19, #320]
  4555b0:	mov	x0, #0x1                   	// #1
  4555b4:	mov	x1, #0x0                   	// #0
  4555b8:	add	x3, x3, x0
  4555bc:	ldr	x2, [x20, #16]
  4555c0:	str	x3, [x19, #320]
  4555c4:	str	x0, [x19, #256]
  4555c8:	mov	w0, #0x28                  	// #40
  4555cc:	strb	w0, [x19, x1]
  4555d0:	strb	w0, [x19, #264]
  4555d4:	mov	w1, w21
  4555d8:	mov	x0, x19
  4555dc:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4555e0:	ldr	x1, [x19, #256]
  4555e4:	add	x0, x1, #0x1
  4555e8:	cmp	x1, #0xff
  4555ec:	b.ne	455614 <_obstack_memory_used@@Base+0xb010>  // b.any
  4555f0:	ldp	x3, x2, [x19, #272]
  4555f4:	strb	wzr, [x19, #255]
  4555f8:	mov	x0, x19
  4555fc:	blr	x3
  455600:	ldr	x2, [x19, #320]
  455604:	mov	x0, #0x1                   	// #1
  455608:	mov	x1, #0x0                   	// #0
  45560c:	add	x2, x2, x0
  455610:	str	x2, [x19, #320]
  455614:	str	x0, [x19, #256]
  455618:	mov	w0, #0x29                  	// #41
  45561c:	strb	w0, [x19, x1]
  455620:	strb	w0, [x19, #264]
  455624:	ldp	x19, x20, [sp, #16]
  455628:	ldp	x21, x22, [sp, #32]
  45562c:	ldp	x23, x24, [sp, #48]
  455630:	ldp	x29, x30, [sp], #64
  455634:	ret
  455638:	ldr	x2, [x20, #8]
  45563c:	b	4555d4 <_obstack_memory_used@@Base+0xafd0>
  455640:	ldp	x3, x2, [x19, #272]
  455644:	strb	wzr, [x19, #255]
  455648:	mov	x0, x19
  45564c:	blr	x3
  455650:	ldr	x2, [x19, #320]
  455654:	mov	x0, #0x1                   	// #1
  455658:	mov	x1, #0x0                   	// #0
  45565c:	add	x2, x2, x0
  455660:	str	x2, [x19, #320]
  455664:	b	4552c0 <_obstack_memory_used@@Base+0xacbc>
  455668:	ldp	x3, x2, [x19, #272]
  45566c:	strb	wzr, [x19, #255]
  455670:	mov	x1, x0
  455674:	mov	x0, x19
  455678:	blr	x3
  45567c:	ldr	x0, [x19, #320]
  455680:	mov	w2, #0x20                  	// #32
  455684:	mov	x1, #0x1                   	// #1
  455688:	strb	w2, [x19]
  45568c:	add	x0, x0, x1
  455690:	str	x0, [x19, #320]
  455694:	b	4552bc <_obstack_memory_used@@Base+0xacb8>
  455698:	ldp	x3, x2, [x19, #272]
  45569c:	strb	wzr, [x19, #255]
  4556a0:	mov	x0, x19
  4556a4:	blr	x3
  4556a8:	ldr	x2, [x19, #320]
  4556ac:	mov	x0, #0x1                   	// #1
  4556b0:	mov	x1, #0x0                   	// #0
  4556b4:	add	x2, x2, x0
  4556b8:	str	x2, [x19, #320]
  4556bc:	b	45516c <_obstack_memory_used@@Base+0xab68>
  4556c0:	ldp	x3, x2, [x19, #272]
  4556c4:	strb	wzr, [x19, #255]
  4556c8:	mov	x1, x0
  4556cc:	mov	x0, x19
  4556d0:	blr	x3
  4556d4:	ldr	x2, [x19, #320]
  4556d8:	mov	x1, #0x1                   	// #1
  4556dc:	mov	x0, #0x0                   	// #0
  4556e0:	add	x2, x2, x1
  4556e4:	str	x2, [x19, #320]
  4556e8:	b	4550d8 <_obstack_memory_used@@Base+0xaad4>
  4556ec:	ldp	x23, x24, [sp, #48]
  4556f0:	b	45514c <_obstack_memory_used@@Base+0xab48>
  4556f4:	nop
  4556f8:	stp	x29, x30, [sp, #-64]!
  4556fc:	mov	x29, sp
  455700:	stp	x19, x20, [sp, #16]
  455704:	mov	x19, x0
  455708:	mov	x20, x3
  45570c:	stp	x21, x22, [sp, #32]
  455710:	mov	x21, x2
  455714:	stp	x23, x24, [sp, #48]
  455718:	mov	w23, w1
  45571c:	cbz	x3, 455760 <_obstack_memory_used@@Base+0xb15c>
  455720:	mov	x2, #0xe000000             	// #234881024
  455724:	mov	x4, #0x1                   	// #1
  455728:	movk	x2, #0x862, lsl #32
  45572c:	ldr	w0, [x3, #16]
  455730:	cbnz	w0, 455760 <_obstack_memory_used@@Base+0xb15c>
  455734:	ldr	x0, [x3, #8]
  455738:	ldr	w0, [x0]
  45573c:	cmp	w0, #0x2b
  455740:	b.hi	455758 <_obstack_memory_used@@Base+0xb154>  // b.pmore
  455744:	lsl	x0, x4, x0
  455748:	tst	x0, x2
  45574c:	b.ne	455828 <_obstack_memory_used@@Base+0xb224>  // b.any
  455750:	tst	x0, #0x1c00000000
  455754:	b.ne	4558f4 <_obstack_memory_used@@Base+0xb2f0>  // b.any
  455758:	ldr	x3, [x3]
  45575c:	cbnz	x3, 45572c <_obstack_memory_used@@Base+0xb128>
  455760:	ldr	x22, [x19, #296]
  455764:	str	xzr, [x19, #296]
  455768:	mov	w1, w23
  45576c:	mov	x2, x20
  455770:	mov	x0, x19
  455774:	mov	w3, #0x0                   	// #0
  455778:	bl	4559a8 <_obstack_memory_used@@Base+0xb3a4>
  45577c:	ldr	x1, [x19, #256]
  455780:	cmp	x1, #0xff
  455784:	b.eq	4558b8 <_obstack_memory_used@@Base+0xb2b4>  // b.none
  455788:	add	x0, x1, #0x1
  45578c:	str	x0, [x19, #256]
  455790:	mov	w2, #0x28                  	// #40
  455794:	strb	w2, [x19, x1]
  455798:	strb	w2, [x19, #264]
  45579c:	ldr	x2, [x21]
  4557a0:	cbz	x2, 4557b4 <_obstack_memory_used@@Base+0xb1b0>
  4557a4:	mov	x0, x19
  4557a8:	mov	w1, w23
  4557ac:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  4557b0:	ldr	x0, [x19, #256]
  4557b4:	cmp	x0, #0xff
  4557b8:	b.eq	4557fc <_obstack_memory_used@@Base+0xb1f8>  // b.none
  4557bc:	add	x1, x0, #0x1
  4557c0:	str	x1, [x19, #256]
  4557c4:	mov	w3, #0x29                  	// #41
  4557c8:	strb	w3, [x19, x0]
  4557cc:	mov	x2, x20
  4557d0:	strb	w3, [x19, #264]
  4557d4:	mov	w1, w23
  4557d8:	mov	x0, x19
  4557dc:	mov	w3, #0x1                   	// #1
  4557e0:	bl	4559a8 <_obstack_memory_used@@Base+0xb3a4>
  4557e4:	ldp	x23, x24, [sp, #48]
  4557e8:	str	x22, [x19, #296]
  4557ec:	ldp	x19, x20, [sp, #16]
  4557f0:	ldp	x21, x22, [sp, #32]
  4557f4:	ldp	x29, x30, [sp], #64
  4557f8:	ret
  4557fc:	ldp	x3, x2, [x19, #272]
  455800:	strb	wzr, [x19, #255]
  455804:	mov	x1, x0
  455808:	mov	x0, x19
  45580c:	blr	x3
  455810:	ldr	x2, [x19, #320]
  455814:	mov	x1, #0x1                   	// #1
  455818:	mov	x0, #0x0                   	// #0
  45581c:	add	x2, x2, x1
  455820:	str	x2, [x19, #320]
  455824:	b	4557c0 <_obstack_memory_used@@Base+0xb1bc>
  455828:	ldrb	w0, [x19, #264]
  45582c:	ldr	x1, [x19, #256]
  455830:	cmp	w0, #0x20
  455834:	b.eq	455858 <_obstack_memory_used@@Base+0xb254>  // b.none
  455838:	cmp	x1, #0xff
  45583c:	b.eq	455938 <_obstack_memory_used@@Base+0xb334>  // b.none
  455840:	add	x2, x1, #0x1
  455844:	str	x2, [x19, #256]
  455848:	mov	w0, #0x20                  	// #32
  45584c:	strb	w0, [x19, x1]
  455850:	mov	x1, x2
  455854:	strb	w0, [x19, #264]
  455858:	cmp	x1, #0xff
  45585c:	b.eq	455910 <_obstack_memory_used@@Base+0xb30c>  // b.none
  455860:	add	x0, x1, #0x1
  455864:	str	x0, [x19, #256]
  455868:	mov	w24, #0x28                  	// #40
  45586c:	strb	w24, [x19, x1]
  455870:	mov	x0, x19
  455874:	strb	w24, [x19, #264]
  455878:	mov	x2, x20
  45587c:	ldr	x22, [x19, #296]
  455880:	str	xzr, [x19, #296]
  455884:	mov	w1, w23
  455888:	mov	w3, #0x0                   	// #0
  45588c:	bl	4559a8 <_obstack_memory_used@@Base+0xb3a4>
  455890:	ldr	x0, [x19, #256]
  455894:	cmp	x0, #0xff
  455898:	b.eq	455964 <_obstack_memory_used@@Base+0xb360>  // b.none
  45589c:	add	x1, x0, #0x1
  4558a0:	str	x1, [x19, #256]
  4558a4:	mov	w2, #0x29                  	// #41
  4558a8:	strb	w2, [x19, x0]
  4558ac:	strb	w2, [x19, #264]
  4558b0:	cmp	x1, #0xff
  4558b4:	b.ne	455788 <_obstack_memory_used@@Base+0xb184>  // b.any
  4558b8:	ldp	x3, x2, [x19, #272]
  4558bc:	strb	wzr, [x19, #255]
  4558c0:	mov	x0, x19
  4558c4:	blr	x3
  4558c8:	mov	w1, #0x28                  	// #40
  4558cc:	strb	w1, [x19]
  4558d0:	strb	w1, [x19, #264]
  4558d4:	mov	x0, #0x1                   	// #1
  4558d8:	ldr	x1, [x19, #320]
  4558dc:	ldr	x2, [x21]
  4558e0:	add	x1, x1, x0
  4558e4:	str	x0, [x19, #256]
  4558e8:	str	x1, [x19, #320]
  4558ec:	cbnz	x2, 4557a4 <_obstack_memory_used@@Base+0xb1a0>
  4558f0:	b	4557bc <_obstack_memory_used@@Base+0xb1b8>
  4558f4:	ldrb	w0, [x19, #264]
  4558f8:	ldr	x1, [x19, #256]
  4558fc:	and	w2, w0, #0xfffffffd
  455900:	cmp	w2, #0x28
  455904:	b.ne	455830 <_obstack_memory_used@@Base+0xb22c>  // b.any
  455908:	cmp	x1, #0xff
  45590c:	b.ne	455860 <_obstack_memory_used@@Base+0xb25c>  // b.any
  455910:	ldp	x3, x2, [x19, #272]
  455914:	strb	wzr, [x19, #255]
  455918:	mov	x0, x19
  45591c:	blr	x3
  455920:	ldr	x2, [x19, #320]
  455924:	mov	x0, #0x1                   	// #1
  455928:	mov	x1, #0x0                   	// #0
  45592c:	add	x2, x2, x0
  455930:	str	x2, [x19, #320]
  455934:	b	455864 <_obstack_memory_used@@Base+0xb260>
  455938:	ldp	x3, x2, [x19, #272]
  45593c:	strb	wzr, [x19, #255]
  455940:	mov	x0, x19
  455944:	blr	x3
  455948:	ldr	x0, [x19, #320]
  45594c:	mov	w2, #0x20                  	// #32
  455950:	mov	x1, #0x1                   	// #1
  455954:	strb	w2, [x19]
  455958:	add	x0, x0, x1
  45595c:	str	x0, [x19, #320]
  455960:	b	455860 <_obstack_memory_used@@Base+0xb25c>
  455964:	ldp	x3, x2, [x19, #272]
  455968:	strb	wzr, [x19, #255]
  45596c:	mov	x1, x0
  455970:	mov	x0, x19
  455974:	blr	x3
  455978:	strb	w24, [x19, #264]
  45597c:	mov	w0, #0x2829                	// #10281
  455980:	strh	w0, [x19]
  455984:	ldr	x1, [x19, #320]
  455988:	mov	x0, #0x2                   	// #2
  45598c:	ldr	x2, [x21]
  455990:	add	x1, x1, #0x1
  455994:	str	x0, [x19, #256]
  455998:	str	x1, [x19, #320]
  45599c:	cbnz	x2, 4557a4 <_obstack_memory_used@@Base+0xb1a0>
  4559a0:	b	4557bc <_obstack_memory_used@@Base+0xb1b8>
  4559a4:	nop
  4559a8:	cbz	x2, 455c04 <_obstack_memory_used@@Base+0xb600>
  4559ac:	stp	x29, x30, [sp, #-112]!
  4559b0:	mov	x29, sp
  4559b4:	stp	x23, x24, [sp, #48]
  4559b8:	mov	x24, #0x1f                  	// #31
  4559bc:	movk	x24, #0x1a, lsl #48
  4559c0:	stp	x19, x20, [sp, #16]
  4559c4:	mov	w20, w1
  4559c8:	mov	x19, x2
  4559cc:	stp	x21, x22, [sp, #32]
  4559d0:	mov	w21, w3
  4559d4:	mov	w22, #0x1                   	// #1
  4559d8:	stp	x25, x26, [sp, #64]
  4559dc:	mov	x26, x0
  4559e0:	mov	x25, #0x1                   	// #1
  4559e4:	b	455a28 <_obstack_memory_used@@Base+0xb424>
  4559e8:	ldr	x1, [x19, #24]
  4559ec:	cmp	w5, #0x29
  4559f0:	ldr	x23, [x26, #288]
  4559f4:	str	w22, [x19, #16]
  4559f8:	str	x1, [x26, #288]
  4559fc:	b.eq	455a74 <_obstack_memory_used@@Base+0xb470>  // b.none
  455a00:	cmp	w5, #0x2a
  455a04:	b.eq	455aa4 <_obstack_memory_used@@Base+0xb4a0>  // b.none
  455a08:	cmp	w5, #0x2
  455a0c:	b.eq	455ad4 <_obstack_memory_used@@Base+0xb4d0>  // b.none
  455a10:	mov	w1, w20
  455a14:	mov	x0, x26
  455a18:	bl	454ef8 <_obstack_memory_used@@Base+0xa8f4>
  455a1c:	str	x23, [x26, #288]
  455a20:	ldr	x19, [x19]
  455a24:	cbz	x19, 455a8c <_obstack_memory_used@@Base+0xb488>
  455a28:	ldr	w2, [x26, #304]
  455a2c:	cbnz	w2, 455a8c <_obstack_memory_used@@Base+0xb488>
  455a30:	ldr	w2, [x19, #16]
  455a34:	cbnz	w2, 455a20 <_obstack_memory_used@@Base+0xb41c>
  455a38:	ldr	x2, [x19, #8]
  455a3c:	ldr	w5, [x2]
  455a40:	cbnz	w21, 4559e8 <_obstack_memory_used@@Base+0xb3e4>
  455a44:	sub	w4, w5, #0x1c
  455a48:	cmp	w4, #0x34
  455a4c:	b.hi	4559e8 <_obstack_memory_used@@Base+0xb3e4>  // b.pmore
  455a50:	lsl	x4, x25, x4
  455a54:	tst	x4, x24
  455a58:	b.ne	455a20 <_obstack_memory_used@@Base+0xb41c>  // b.any
  455a5c:	ldr	x1, [x19, #24]
  455a60:	cmp	w5, #0x29
  455a64:	ldr	x23, [x26, #288]
  455a68:	str	w22, [x19, #16]
  455a6c:	str	x1, [x26, #288]
  455a70:	b.ne	455a00 <_obstack_memory_used@@Base+0xb3fc>  // b.any
  455a74:	ldr	x3, [x19]
  455a78:	add	x2, x2, #0x10
  455a7c:	mov	w1, w20
  455a80:	mov	x0, x26
  455a84:	bl	4556f8 <_obstack_memory_used@@Base+0xb0f4>
  455a88:	str	x23, [x26, #288]
  455a8c:	ldp	x19, x20, [sp, #16]
  455a90:	ldp	x21, x22, [sp, #32]
  455a94:	ldp	x23, x24, [sp, #48]
  455a98:	ldp	x25, x26, [sp, #64]
  455a9c:	ldp	x29, x30, [sp], #112
  455aa0:	ret
  455aa4:	ldr	x3, [x19]
  455aa8:	mov	w1, w20
  455aac:	mov	x0, x26
  455ab0:	add	x2, x2, #0x8
  455ab4:	bl	455d78 <_obstack_memory_used@@Base+0xb774>
  455ab8:	str	x23, [x26, #288]
  455abc:	ldp	x19, x20, [sp, #16]
  455ac0:	ldp	x21, x22, [sp, #32]
  455ac4:	ldp	x23, x24, [sp, #48]
  455ac8:	ldp	x25, x26, [sp, #64]
  455acc:	ldp	x29, x30, [sp], #112
  455ad0:	ret
  455ad4:	ldr	x2, [x2, #8]
  455ad8:	mov	w1, w20
  455adc:	ldr	x21, [x26, #296]
  455ae0:	str	xzr, [x26, #296]
  455ae4:	mov	x0, x26
  455ae8:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  455aec:	str	x21, [x26, #296]
  455af0:	tbz	w20, #2, 455ba8 <_obstack_memory_used@@Base+0xb5a4>
  455af4:	ldr	x1, [x26, #256]
  455af8:	add	x0, x1, #0x1
  455afc:	cmp	x1, #0xff
  455b00:	b.ne	455b28 <_obstack_memory_used@@Base+0xb524>  // b.any
  455b04:	ldp	x3, x2, [x26, #272]
  455b08:	strb	wzr, [x26, #255]
  455b0c:	mov	x0, x26
  455b10:	blr	x3
  455b14:	ldr	x2, [x26, #320]
  455b18:	mov	x0, #0x1                   	// #1
  455b1c:	mov	x1, #0x0                   	// #0
  455b20:	add	x2, x2, x0
  455b24:	str	x2, [x26, #320]
  455b28:	str	x0, [x26, #256]
  455b2c:	mov	w0, #0x2e                  	// #46
  455b30:	strb	w0, [x26, x1]
  455b34:	strb	w0, [x26, #264]
  455b38:	ldr	x0, [x19, #8]
  455b3c:	ldr	x21, [x0, #16]
  455b40:	ldr	w2, [x21]
  455b44:	cmp	w2, #0x47
  455b48:	b.eq	455c08 <_obstack_memory_used@@Base+0xb604>  // b.none
  455b4c:	mov	x1, #0x1f                  	// #31
  455b50:	mov	x3, #0x1                   	// #1
  455b54:	movk	x1, #0x1a, lsl #48
  455b58:	sub	w2, w2, #0x1c
  455b5c:	cmp	w2, #0x34
  455b60:	b.hi	455b70 <_obstack_memory_used@@Base+0xb56c>  // b.pmore
  455b64:	lsl	x2, x3, x2
  455b68:	tst	x2, x1
  455b6c:	b.ne	455b9c <_obstack_memory_used@@Base+0xb598>  // b.any
  455b70:	mov	x2, x21
  455b74:	mov	w1, w20
  455b78:	mov	x0, x26
  455b7c:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  455b80:	str	x23, [x26, #288]
  455b84:	ldp	x19, x20, [sp, #16]
  455b88:	ldp	x21, x22, [sp, #32]
  455b8c:	ldp	x23, x24, [sp, #48]
  455b90:	ldp	x25, x26, [sp, #64]
  455b94:	ldp	x29, x30, [sp], #112
  455b98:	ret
  455b9c:	ldr	x21, [x21, #8]
  455ba0:	ldr	w2, [x21]
  455ba4:	b	455b58 <_obstack_memory_used@@Base+0xb554>
  455ba8:	mov	x22, #0x0                   	// #0
  455bac:	mov	w21, #0x3a                  	// #58
  455bb0:	ldr	x1, [x26, #256]
  455bb4:	b	455bd4 <_obstack_memory_used@@Base+0xb5d0>
  455bb8:	mov	x0, x1
  455bbc:	add	x1, x1, #0x1
  455bc0:	str	x1, [x26, #256]
  455bc4:	strb	w21, [x26, x0]
  455bc8:	strb	w21, [x26, #264]
  455bcc:	cbnz	x22, 455b38 <_obstack_memory_used@@Base+0xb534>
  455bd0:	mov	x22, #0x1                   	// #1
  455bd4:	cmp	x1, #0xff
  455bd8:	b.ne	455bb8 <_obstack_memory_used@@Base+0xb5b4>  // b.any
  455bdc:	ldp	x3, x2, [x26, #272]
  455be0:	strb	wzr, [x26, #255]
  455be4:	mov	x0, x26
  455be8:	blr	x3
  455bec:	ldr	x2, [x26, #320]
  455bf0:	mov	x1, #0x1                   	// #1
  455bf4:	mov	x0, #0x0                   	// #0
  455bf8:	add	x2, x2, x1
  455bfc:	str	x2, [x26, #320]
  455c00:	b	455bc0 <_obstack_memory_used@@Base+0xb5bc>
  455c04:	ret
  455c08:	adrp	x24, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  455c0c:	add	x24, x24, #0xef0
  455c10:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  455c14:	add	x24, x24, #0xd
  455c18:	add	x22, x22, #0xef1
  455c1c:	mov	w19, #0x7b                  	// #123
  455c20:	ldr	x1, [x26, #256]
  455c24:	b	455c48 <_obstack_memory_used@@Base+0xb644>
  455c28:	mov	x0, x1
  455c2c:	add	x1, x1, #0x1
  455c30:	str	x1, [x26, #256]
  455c34:	cmp	x22, x24
  455c38:	strb	w19, [x26, x0]
  455c3c:	strb	w19, [x26, #264]
  455c40:	b.eq	455c78 <_obstack_memory_used@@Base+0xb674>  // b.none
  455c44:	ldrb	w19, [x22], #1
  455c48:	cmp	x1, #0xff
  455c4c:	b.ne	455c28 <_obstack_memory_used@@Base+0xb624>  // b.any
  455c50:	ldp	x3, x2, [x26, #272]
  455c54:	strb	wzr, [x26, #255]
  455c58:	mov	x0, x26
  455c5c:	blr	x3
  455c60:	ldr	x2, [x26, #320]
  455c64:	mov	x1, #0x1                   	// #1
  455c68:	mov	x0, #0x0                   	// #0
  455c6c:	add	x2, x2, x1
  455c70:	str	x2, [x26, #320]
  455c74:	b	455c30 <_obstack_memory_used@@Base+0xb62c>
  455c78:	ldr	w2, [x21, #16]
  455c7c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x119fc>
  455c80:	add	x1, x1, #0x3f8
  455c84:	add	x19, sp, #0x50
  455c88:	add	w2, w2, #0x1
  455c8c:	mov	x0, x19
  455c90:	bl	4025b0 <sprintf@plt>
  455c94:	mov	x0, x19
  455c98:	bl	4024f0 <strlen@plt>
  455c9c:	ldr	x1, [x26, #256]
  455ca0:	cbz	x0, 455d00 <_obstack_memory_used@@Base+0xb6fc>
  455ca4:	add	x24, x19, x0
  455ca8:	b	455ccc <_obstack_memory_used@@Base+0xb6c8>
  455cac:	mov	x0, x1
  455cb0:	add	x1, x1, #0x1
  455cb4:	str	x1, [x26, #256]
  455cb8:	add	x19, x19, #0x1
  455cbc:	strb	w22, [x26, x0]
  455cc0:	cmp	x24, x19
  455cc4:	strb	w22, [x26, #264]
  455cc8:	b.eq	455d00 <_obstack_memory_used@@Base+0xb6fc>  // b.none
  455ccc:	ldrb	w22, [x19]
  455cd0:	cmp	x1, #0xff
  455cd4:	b.ne	455cac <_obstack_memory_used@@Base+0xb6a8>  // b.any
  455cd8:	ldp	x3, x2, [x26, #272]
  455cdc:	strb	wzr, [x26, #255]
  455ce0:	mov	x0, x26
  455ce4:	blr	x3
  455ce8:	ldr	x2, [x26, #320]
  455cec:	mov	x1, #0x1                   	// #1
  455cf0:	mov	x0, #0x0                   	// #0
  455cf4:	add	x2, x2, x1
  455cf8:	str	x2, [x26, #320]
  455cfc:	b	455cb4 <_obstack_memory_used@@Base+0xb6b0>
  455d00:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x1e9fc>
  455d04:	add	x19, x19, #0xf00
  455d08:	add	x24, x19, #0x3
  455d0c:	mov	w22, #0x7d                  	// #125
  455d10:	b	455d38 <_obstack_memory_used@@Base+0xb734>
  455d14:	mov	x0, x1
  455d18:	add	x1, x1, #0x1
  455d1c:	str	x1, [x26, #256]
  455d20:	add	x19, x19, #0x1
  455d24:	strb	w22, [x26, x0]
  455d28:	cmp	x24, x19
  455d2c:	strb	w22, [x26, #264]
  455d30:	b.eq	455d68 <_obstack_memory_used@@Base+0xb764>  // b.none
  455d34:	ldrb	w22, [x19]
  455d38:	cmp	x1, #0xff
  455d3c:	b.ne	455d14 <_obstack_memory_used@@Base+0xb710>  // b.any
  455d40:	ldp	x3, x2, [x26, #272]
  455d44:	strb	wzr, [x26, #255]
  455d48:	mov	x0, x26
  455d4c:	blr	x3
  455d50:	ldr	x2, [x26, #320]
  455d54:	mov	x1, #0x1                   	// #1
  455d58:	mov	x0, #0x0                   	// #0
  455d5c:	add	x2, x2, x1
  455d60:	str	x2, [x26, #320]
  455d64:	b	455d1c <_obstack_memory_used@@Base+0xb718>
  455d68:	ldr	x21, [x21, #8]
  455d6c:	ldr	w2, [x21]
  455d70:	b	455b4c <_obstack_memory_used@@Base+0xb548>
  455d74:	nop
  455d78:	stp	x29, x30, [sp, #-64]!
  455d7c:	mov	x29, sp
  455d80:	stp	x19, x20, [sp, #16]
  455d84:	mov	x19, x0
  455d88:	mov	x20, x3
  455d8c:	stp	x21, x22, [sp, #32]
  455d90:	mov	x0, x3
  455d94:	mov	w21, w1
  455d98:	stp	x23, x24, [sp, #48]
  455d9c:	mov	x22, x2
  455da0:	cbz	x3, 455dcc <_obstack_memory_used@@Base+0xb7c8>
  455da4:	nop
  455da8:	ldr	w4, [x0, #16]
  455dac:	cbz	w4, 455eb8 <_obstack_memory_used@@Base+0xb8b4>
  455db0:	ldr	x0, [x0]
  455db4:	cbnz	x0, 455da8 <_obstack_memory_used@@Base+0xb7a4>
  455db8:	mov	x2, x20
  455dbc:	mov	w1, w21
  455dc0:	mov	x0, x19
  455dc4:	mov	w3, #0x0                   	// #0
  455dc8:	bl	4559a8 <_obstack_memory_used@@Base+0xb3a4>
  455dcc:	ldr	x23, [x19, #256]
  455dd0:	cmp	x23, #0xff
  455dd4:	b.eq	455ee4 <_obstack_memory_used@@Base+0xb8e0>  // b.none
  455dd8:	add	x1, x23, #0x1
  455ddc:	str	x1, [x19, #256]
  455de0:	mov	w0, #0x20                  	// #32
  455de4:	strb	w0, [x19, x23]
  455de8:	strb	w0, [x19, #264]
  455dec:	cmp	x1, #0xff
  455df0:	b.eq	455e7c <_obstack_memory_used@@Base+0xb878>  // b.none
  455df4:	add	x0, x1, #0x1
  455df8:	str	x0, [x19, #256]
  455dfc:	mov	w2, #0x5b                  	// #91
  455e00:	strb	w2, [x19, x1]
  455e04:	strb	w2, [x19, #264]
  455e08:	ldr	x2, [x22]
  455e0c:	cbz	x2, 455e20 <_obstack_memory_used@@Base+0xb81c>
  455e10:	mov	x0, x19
  455e14:	mov	w1, w21
  455e18:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  455e1c:	ldr	x0, [x19, #256]
  455e20:	cmp	x0, #0xff
  455e24:	b.eq	455e50 <_obstack_memory_used@@Base+0xb84c>  // b.none
  455e28:	add	x1, x0, #0x1
  455e2c:	str	x1, [x19, #256]
  455e30:	mov	w1, #0x5d                  	// #93
  455e34:	strb	w1, [x19, x0]
  455e38:	strb	w1, [x19, #264]
  455e3c:	ldp	x19, x20, [sp, #16]
  455e40:	ldp	x21, x22, [sp, #32]
  455e44:	ldp	x23, x24, [sp, #48]
  455e48:	ldp	x29, x30, [sp], #64
  455e4c:	ret
  455e50:	ldp	x3, x2, [x19, #272]
  455e54:	strb	wzr, [x19, #255]
  455e58:	mov	x1, x0
  455e5c:	mov	x0, x19
  455e60:	blr	x3
  455e64:	ldr	x2, [x19, #320]
  455e68:	mov	x1, #0x1                   	// #1
  455e6c:	mov	x0, #0x0                   	// #0
  455e70:	add	x2, x2, x1
  455e74:	str	x2, [x19, #320]
  455e78:	b	455e2c <_obstack_memory_used@@Base+0xb828>
  455e7c:	ldp	x3, x2, [x19, #272]
  455e80:	strb	wzr, [x19, #255]
  455e84:	mov	x0, x19
  455e88:	blr	x3
  455e8c:	mov	w1, #0x5b                  	// #91
  455e90:	strb	w1, [x19]
  455e94:	strb	w1, [x19, #264]
  455e98:	mov	x0, #0x1                   	// #1
  455e9c:	ldr	x1, [x19, #320]
  455ea0:	ldr	x2, [x22]
  455ea4:	add	x1, x1, x0
  455ea8:	str	x0, [x19, #256]
  455eac:	str	x1, [x19, #320]
  455eb0:	cbnz	x2, 455e10 <_obstack_memory_used@@Base+0xb80c>
  455eb4:	b	455e28 <_obstack_memory_used@@Base+0xb824>
  455eb8:	ldr	x0, [x0, #8]
  455ebc:	ldr	w0, [x0]
  455ec0:	cmp	w0, #0x2a
  455ec4:	b.ne	455f28 <_obstack_memory_used@@Base+0xb924>  // b.any
  455ec8:	mov	w1, w21
  455ecc:	mov	x2, x20
  455ed0:	mov	x0, x19
  455ed4:	mov	w3, #0x0                   	// #0
  455ed8:	bl	4559a8 <_obstack_memory_used@@Base+0xb3a4>
  455edc:	ldr	x1, [x19, #256]
  455ee0:	b	455dec <_obstack_memory_used@@Base+0xb7e8>
  455ee4:	ldp	x3, x2, [x19, #272]
  455ee8:	strb	wzr, [x19, #255]
  455eec:	mov	x1, x23
  455ef0:	mov	x0, x19
  455ef4:	blr	x3
  455ef8:	mov	w1, #0x5b20                	// #23328
  455efc:	mov	w0, #0x5b                  	// #91
  455f00:	strh	w1, [x19]
  455f04:	strb	w0, [x19, #264]
  455f08:	mov	x0, #0x2                   	// #2
  455f0c:	ldr	x1, [x19, #320]
  455f10:	ldr	x2, [x22]
  455f14:	add	x1, x1, #0x1
  455f18:	str	x0, [x19, #256]
  455f1c:	str	x1, [x19, #320]
  455f20:	cbnz	x2, 455e10 <_obstack_memory_used@@Base+0xb80c>
  455f24:	b	455e28 <_obstack_memory_used@@Base+0xb824>
  455f28:	mov	w24, #0x20                  	// #32
  455f2c:	mov	x23, #0x0                   	// #0
  455f30:	ldr	x1, [x19, #256]
  455f34:	b	455f5c <_obstack_memory_used@@Base+0xb958>
  455f38:	mov	x0, x1
  455f3c:	add	x1, x1, #0x1
  455f40:	str	x1, [x19, #256]
  455f44:	cmp	x23, #0x1
  455f48:	strb	w24, [x19, x0]
  455f4c:	strb	w24, [x19, #264]
  455f50:	mov	w24, #0x28                  	// #40
  455f54:	b.eq	455fa0 <_obstack_memory_used@@Base+0xb99c>  // b.none
  455f58:	mov	x23, #0x1                   	// #1
  455f5c:	cmp	x1, #0xff
  455f60:	b.ne	455f38 <_obstack_memory_used@@Base+0xb934>  // b.any
  455f64:	ldp	x3, x2, [x19, #272]
  455f68:	strb	wzr, [x19, #255]
  455f6c:	mov	x0, x19
  455f70:	blr	x3
  455f74:	ldr	x2, [x19, #320]
  455f78:	mov	x0, #0x0                   	// #0
  455f7c:	mov	x1, #0x1                   	// #1
  455f80:	str	x1, [x19, #256]
  455f84:	add	x2, x2, x1
  455f88:	str	x2, [x19, #320]
  455f8c:	strb	w24, [x19, x0]
  455f90:	cmp	x23, #0x1
  455f94:	strb	w24, [x19, #264]
  455f98:	mov	w24, #0x28                  	// #40
  455f9c:	b.ne	455f58 <_obstack_memory_used@@Base+0xb954>  // b.any
  455fa0:	mov	w1, w21
  455fa4:	mov	x2, x20
  455fa8:	mov	x0, x19
  455fac:	mov	w3, #0x0                   	// #0
  455fb0:	bl	4559a8 <_obstack_memory_used@@Base+0xb3a4>
  455fb4:	ldr	x1, [x19, #256]
  455fb8:	cmp	x1, #0xff
  455fbc:	b.eq	455fd8 <_obstack_memory_used@@Base+0xb9d4>  // b.none
  455fc0:	add	x23, x1, #0x1
  455fc4:	str	x23, [x19, #256]
  455fc8:	mov	w0, #0x29                  	// #41
  455fcc:	strb	w0, [x19, x1]
  455fd0:	strb	w0, [x19, #264]
  455fd4:	b	455dd0 <_obstack_memory_used@@Base+0xb7cc>
  455fd8:	ldp	x3, x2, [x19, #272]
  455fdc:	strb	wzr, [x19, #255]
  455fe0:	mov	x0, x19
  455fe4:	blr	x3
  455fe8:	ldr	x0, [x19, #320]
  455fec:	mov	w1, #0x29                  	// #41
  455ff0:	strb	w1, [x19]
  455ff4:	add	x0, x0, #0x1
  455ff8:	str	x0, [x19, #320]
  455ffc:	b	455dd8 <_obstack_memory_used@@Base+0xb7d4>
  456000:	ldr	w4, [x2]
  456004:	cmp	w4, #0x32
  456008:	b.eq	456010 <_obstack_memory_used@@Base+0xba0c>  // b.none
  45600c:	b	454e60 <_obstack_memory_used@@Base+0xa85c>
  456010:	stp	x29, x30, [sp, #-48]!
  456014:	mov	x29, sp
  456018:	stp	x19, x20, [sp, #16]
  45601c:	mov	x19, x0
  456020:	ldr	x0, [x2, #8]
  456024:	stp	x21, x22, [sp, #32]
  456028:	ldrsw	x22, [x0, #16]
  45602c:	ldr	x20, [x0, #8]
  456030:	cbz	x22, 4560a8 <_obstack_memory_used@@Base+0xbaa4>
  456034:	add	x22, x20, x22
  456038:	ldr	x1, [x19, #256]
  45603c:	b	456060 <_obstack_memory_used@@Base+0xba5c>
  456040:	mov	x2, x1
  456044:	add	x1, x1, #0x1
  456048:	str	x1, [x19, #256]
  45604c:	add	x20, x20, #0x1
  456050:	cmp	x20, x22
  456054:	strb	w21, [x19, x2]
  456058:	strb	w21, [x19, #264]
  45605c:	b.eq	4560a8 <_obstack_memory_used@@Base+0xbaa4>  // b.none
  456060:	ldrb	w21, [x20]
  456064:	cmp	x1, #0xff
  456068:	b.ne	456040 <_obstack_memory_used@@Base+0xba3c>  // b.any
  45606c:	ldp	x3, x2, [x19, #272]
  456070:	strb	wzr, [x19, #255]
  456074:	mov	x0, x19
  456078:	add	x20, x20, #0x1
  45607c:	blr	x3
  456080:	ldr	x0, [x19, #320]
  456084:	mov	x2, #0x0                   	// #0
  456088:	mov	x1, #0x1                   	// #1
  45608c:	str	x1, [x19, #256]
  456090:	add	x0, x0, x1
  456094:	str	x0, [x19, #320]
  456098:	strb	w21, [x19, x2]
  45609c:	cmp	x20, x22
  4560a0:	strb	w21, [x19, #264]
  4560a4:	b.ne	456060 <_obstack_memory_used@@Base+0xba5c>  // b.any
  4560a8:	ldp	x19, x20, [sp, #16]
  4560ac:	ldp	x21, x22, [sp, #32]
  4560b0:	ldp	x29, x30, [sp], #48
  4560b4:	ret
  4560b8:	stp	x29, x30, [sp, #-48]!
  4560bc:	mov	x29, sp
  4560c0:	str	x21, [sp, #32]
  4560c4:	mov	w21, w1
  4560c8:	ldr	w1, [x2]
  4560cc:	stp	x19, x20, [sp, #16]
  4560d0:	mov	x20, x2
  4560d4:	cmp	w1, #0x31
  4560d8:	mov	x19, x0
  4560dc:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4560e0:	b.ls	456170 <_obstack_memory_used@@Base+0xbb6c>  // b.plast
  4560e4:	cmp	w1, #0x6
  4560e8:	b.eq	456170 <_obstack_memory_used@@Base+0xbb6c>  // b.none
  4560ec:	ldr	x1, [x0, #256]
  4560f0:	cmp	x1, #0xff
  4560f4:	b.eq	45618c <_obstack_memory_used@@Base+0xbb88>  // b.none
  4560f8:	add	x0, x1, #0x1
  4560fc:	str	x0, [x19, #256]
  456100:	mov	w0, #0x28                  	// #40
  456104:	strb	w0, [x19, x1]
  456108:	mov	x2, x20
  45610c:	strb	w0, [x19, #264]
  456110:	mov	w1, w21
  456114:	mov	x0, x19
  456118:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45611c:	ldr	x1, [x19, #256]
  456120:	add	x0, x1, #0x1
  456124:	cmp	x1, #0xff
  456128:	b.ne	456150 <_obstack_memory_used@@Base+0xbb4c>  // b.any
  45612c:	ldp	x3, x2, [x19, #272]
  456130:	strb	wzr, [x19, #255]
  456134:	mov	x0, x19
  456138:	blr	x3
  45613c:	ldr	x2, [x19, #320]
  456140:	mov	x0, #0x1                   	// #1
  456144:	mov	x1, #0x0                   	// #0
  456148:	add	x2, x2, x0
  45614c:	str	x2, [x19, #320]
  456150:	str	x0, [x19, #256]
  456154:	mov	w0, #0x29                  	// #41
  456158:	strb	w0, [x19, x1]
  45615c:	strb	w0, [x19, #264]
  456160:	ldp	x19, x20, [sp, #16]
  456164:	ldr	x21, [sp, #32]
  456168:	ldp	x29, x30, [sp], #48
  45616c:	ret
  456170:	mov	x2, x20
  456174:	mov	w1, w21
  456178:	mov	x0, x19
  45617c:	ldp	x19, x20, [sp, #16]
  456180:	ldr	x21, [sp, #32]
  456184:	ldp	x29, x30, [sp], #48
  456188:	b	454e60 <_obstack_memory_used@@Base+0xa85c>
  45618c:	ldp	x3, x2, [x0, #272]
  456190:	strb	wzr, [x0, #255]
  456194:	blr	x3
  456198:	ldr	x2, [x19, #320]
  45619c:	mov	x0, #0x1                   	// #1
  4561a0:	mov	x1, #0x0                   	// #0
  4561a4:	add	x2, x2, x0
  4561a8:	str	x2, [x19, #320]
  4561ac:	b	4560fc <_obstack_memory_used@@Base+0xbaf8>
  4561b0:	stp	x29, x30, [sp, #-80]!
  4561b4:	mov	x29, sp
  4561b8:	stp	x19, x20, [sp, #16]
  4561bc:	mov	x19, x0
  4561c0:	ldr	x0, [x2, #8]
  4561c4:	stp	x21, x22, [sp, #32]
  4561c8:	mov	w22, w1
  4561cc:	ldr	x0, [x0]
  4561d0:	ldrb	w1, [x0]
  4561d4:	cmp	w1, #0x66
  4561d8:	b.ne	45636c <_obstack_memory_used@@Base+0xbd68>  // b.any
  4561dc:	ldr	x1, [x3]
  4561e0:	stp	x23, x24, [sp, #48]
  4561e4:	stp	x25, x26, [sp, #64]
  4561e8:	mov	x25, #0x0                   	// #0
  4561ec:	ldp	x23, x26, [x1, #8]
  4561f0:	ldr	w1, [x26]
  4561f4:	cmp	w1, #0x3c
  4561f8:	b.eq	456434 <_obstack_memory_used@@Base+0xbe30>  // b.none
  4561fc:	ldr	w21, [x19, #316]
  456200:	mov	w1, #0xffffffff            	// #-1
  456204:	str	w1, [x19, #316]
  456208:	ldrb	w0, [x0, #1]
  45620c:	cmp	w0, #0x6c
  456210:	b.eq	456454 <_obstack_memory_used@@Base+0xbe50>  // b.none
  456214:	b.hi	456380 <_obstack_memory_used@@Base+0xbd7c>  // b.pmore
  456218:	cmp	w0, #0x4c
  45621c:	b.eq	456228 <_obstack_memory_used@@Base+0xbc24>  // b.none
  456220:	cmp	w0, #0x52
  456224:	b.ne	45634c <_obstack_memory_used@@Base+0xbd48>  // b.any
  456228:	ldr	x1, [x19, #256]
  45622c:	add	x0, x1, #0x1
  456230:	cmp	x1, #0xff
  456234:	b.eq	456514 <_obstack_memory_used@@Base+0xbf10>  // b.none
  456238:	str	x0, [x19, #256]
  45623c:	mov	w0, #0x28                  	// #40
  456240:	strb	w0, [x19, x1]
  456244:	mov	x2, x26
  456248:	strb	w0, [x19, #264]
  45624c:	mov	w1, w22
  456250:	mov	x0, x19
  456254:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x1b9fc>
  456258:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  45625c:	add	x20, x20, #0x348
  456260:	mov	w1, w22
  456264:	mov	x2, x23
  456268:	mov	x0, x19
  45626c:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  456270:	add	x26, x20, #0x3
  456274:	mov	w24, #0x2e                  	// #46
  456278:	ldr	x1, [x19, #256]
  45627c:	b	4562a4 <_obstack_memory_used@@Base+0xbca0>
  456280:	mov	x0, x1
  456284:	add	x1, x1, #0x1
  456288:	str	x1, [x19, #256]
  45628c:	add	x20, x20, #0x1
  456290:	cmp	x26, x20
  456294:	strb	w24, [x19, x0]
  456298:	strb	w24, [x19, #264]
  45629c:	b.eq	4562e8 <_obstack_memory_used@@Base+0xbce4>  // b.none
  4562a0:	ldrb	w24, [x20]
  4562a4:	cmp	x1, #0xff
  4562a8:	b.ne	456280 <_obstack_memory_used@@Base+0xbc7c>  // b.any
  4562ac:	ldp	x3, x2, [x19, #272]
  4562b0:	strb	wzr, [x19, #255]
  4562b4:	mov	x0, x19
  4562b8:	add	x20, x20, #0x1
  4562bc:	blr	x3
  4562c0:	ldr	x2, [x19, #320]
  4562c4:	mov	x0, #0x0                   	// #0
  4562c8:	mov	x1, #0x1                   	// #1
  4562cc:	str	x1, [x19, #256]
  4562d0:	add	x2, x2, x1
  4562d4:	str	x2, [x19, #320]
  4562d8:	strb	w24, [x19, x0]
  4562dc:	cmp	x26, x20
  4562e0:	strb	w24, [x19, #264]
  4562e4:	b.ne	4562a0 <_obstack_memory_used@@Base+0xbc9c>  // b.any
  4562e8:	mov	x2, x23
  4562ec:	mov	w1, w22
  4562f0:	mov	x0, x19
  4562f4:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  4562f8:	mov	x2, x25
  4562fc:	mov	w1, w22
  456300:	mov	x0, x19
  456304:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  456308:	ldr	x1, [x19, #256]
  45630c:	add	x0, x1, #0x1
  456310:	cmp	x1, #0xff
  456314:	b.ne	45633c <_obstack_memory_used@@Base+0xbd38>  // b.any
  456318:	ldp	x3, x2, [x19, #272]
  45631c:	strb	wzr, [x19, #255]
  456320:	mov	x0, x19
  456324:	blr	x3
  456328:	ldr	x2, [x19, #320]
  45632c:	mov	x0, #0x1                   	// #1
  456330:	mov	x1, #0x0                   	// #0
  456334:	add	x2, x2, x0
  456338:	str	x2, [x19, #320]
  45633c:	str	x0, [x19, #256]
  456340:	mov	w0, #0x29                  	// #41
  456344:	strb	w0, [x19, x1]
  456348:	strb	w0, [x19, #264]
  45634c:	ldp	x23, x24, [sp, #48]
  456350:	mov	w0, #0x1                   	// #1
  456354:	ldp	x25, x26, [sp, #64]
  456358:	str	w21, [x19, #316]
  45635c:	ldp	x19, x20, [sp, #16]
  456360:	ldp	x21, x22, [sp, #32]
  456364:	ldp	x29, x30, [sp], #80
  456368:	ret
  45636c:	mov	w0, #0x0                   	// #0
  456370:	ldp	x19, x20, [sp, #16]
  456374:	ldp	x21, x22, [sp, #32]
  456378:	ldp	x29, x30, [sp], #80
  45637c:	ret
  456380:	cmp	w0, #0x72
  456384:	b.ne	45634c <_obstack_memory_used@@Base+0xbd48>  // b.any
  456388:	ldr	x1, [x19, #256]
  45638c:	add	x0, x1, #0x1
  456390:	cmp	x1, #0xff
  456394:	b.eq	4564ec <_obstack_memory_used@@Base+0xbee8>  // b.none
  456398:	str	x0, [x19, #256]
  45639c:	mov	w0, #0x28                  	// #40
  4563a0:	strb	w0, [x19, x1]
  4563a4:	mov	x2, x26
  4563a8:	strb	w0, [x19, #264]
  4563ac:	mov	w1, w22
  4563b0:	mov	x0, x19
  4563b4:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  4563b8:	bl	4560b8 <_obstack_memory_used@@Base+0xbab4>
  4563bc:	add	x20, x20, #0x2c0
  4563c0:	mov	w1, w22
  4563c4:	mov	x2, x23
  4563c8:	mov	x0, x19
  4563cc:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  4563d0:	add	x22, x20, #0x4
  4563d4:	mov	w24, #0x2e                  	// #46
  4563d8:	ldr	x1, [x19, #256]
  4563dc:	b	456404 <_obstack_memory_used@@Base+0xbe00>
  4563e0:	mov	x0, x1
  4563e4:	add	x1, x1, #0x1
  4563e8:	str	x1, [x19, #256]
  4563ec:	add	x20, x20, #0x1
  4563f0:	strb	w24, [x19, x0]
  4563f4:	cmp	x20, x22
  4563f8:	strb	w24, [x19, #264]
  4563fc:	b.eq	45634c <_obstack_memory_used@@Base+0xbd48>  // b.none
  456400:	ldrb	w24, [x20]
  456404:	cmp	x1, #0xff
  456408:	b.ne	4563e0 <_obstack_memory_used@@Base+0xbddc>  // b.any
  45640c:	ldp	x3, x2, [x19, #272]
  456410:	strb	wzr, [x19, #255]
  456414:	mov	x0, x19
  456418:	blr	x3
  45641c:	ldr	x2, [x19, #320]
  456420:	mov	x1, #0x1                   	// #1
  456424:	mov	x0, #0x0                   	// #0
  456428:	add	x2, x2, x1
  45642c:	str	x2, [x19, #320]
  456430:	b	4563e8 <_obstack_memory_used@@Base+0xbde4>
  456434:	ldr	w21, [x19, #316]
  456438:	mov	w1, #0xffffffff            	// #-1
  45643c:	ldr	x25, [x26, #16]
  456440:	ldr	x26, [x26, #8]
  456444:	str	w1, [x19, #316]
  456448:	ldrb	w0, [x0, #1]
  45644c:	cmp	w0, #0x6c
  456450:	b.ne	456214 <_obstack_memory_used@@Base+0xbc10>  // b.any
  456454:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  456458:	add	x20, x20, #0x2b8
  45645c:	add	x25, x20, #0x4
  456460:	mov	w24, #0x28                  	// #40
  456464:	ldr	x1, [x19, #256]
  456468:	b	456490 <_obstack_memory_used@@Base+0xbe8c>
  45646c:	mov	x0, x1
  456470:	add	x1, x1, #0x1
  456474:	str	x1, [x19, #256]
  456478:	add	x20, x20, #0x1
  45647c:	cmp	x25, x20
  456480:	strb	w24, [x19, x0]
  456484:	strb	w24, [x19, #264]
  456488:	b.eq	4564d4 <_obstack_memory_used@@Base+0xbed0>  // b.none
  45648c:	ldrb	w24, [x20]
  456490:	cmp	x1, #0xff
  456494:	b.ne	45646c <_obstack_memory_used@@Base+0xbe68>  // b.any
  456498:	ldp	x3, x2, [x19, #272]
  45649c:	strb	wzr, [x19, #255]
  4564a0:	mov	x0, x19
  4564a4:	add	x20, x20, #0x1
  4564a8:	blr	x3
  4564ac:	ldr	x2, [x19, #320]
  4564b0:	mov	x0, #0x0                   	// #0
  4564b4:	mov	x1, #0x1                   	// #1
  4564b8:	str	x1, [x19, #256]
  4564bc:	add	x2, x2, x1
  4564c0:	str	x2, [x19, #320]
  4564c4:	strb	w24, [x19, x0]
  4564c8:	cmp	x25, x20
  4564cc:	strb	w24, [x19, #264]
  4564d0:	b.ne	45648c <_obstack_memory_used@@Base+0xbe88>  // b.any
  4564d4:	mov	x2, x23
  4564d8:	mov	w1, w22
  4564dc:	mov	x0, x19
  4564e0:	bl	456000 <_obstack_memory_used@@Base+0xb9fc>
  4564e4:	mov	x2, x26
  4564e8:	b	4562fc <_obstack_memory_used@@Base+0xbcf8>
  4564ec:	ldp	x3, x2, [x19, #272]
  4564f0:	strb	wzr, [x19, #255]
  4564f4:	mov	x0, x19
  4564f8:	blr	x3
  4564fc:	ldr	x2, [x19, #320]
  456500:	mov	x0, #0x1                   	// #1
  456504:	mov	x1, #0x0                   	// #0
  456508:	add	x2, x2, x0
  45650c:	str	x2, [x19, #320]
  456510:	b	456398 <_obstack_memory_used@@Base+0xbd94>
  456514:	ldp	x3, x2, [x19, #272]
  456518:	strb	wzr, [x19, #255]
  45651c:	mov	x0, x19
  456520:	blr	x3
  456524:	ldr	x2, [x19, #320]
  456528:	mov	x0, #0x1                   	// #1
  45652c:	mov	x1, #0x0                   	// #0
  456530:	add	x2, x2, x0
  456534:	str	x2, [x19, #320]
  456538:	b	456238 <_obstack_memory_used@@Base+0xbc34>
  45653c:	nop
  456540:	sub	sp, sp, #0x230
  456544:	stp	x29, x30, [sp]
  456548:	mov	x29, sp
  45654c:	stp	x19, x20, [sp, #16]
  456550:	mov	x19, x0
  456554:	mov	x20, x1
  456558:	stp	x21, x22, [sp, #32]
  45655c:	mov	x21, x2
  456560:	stp	x23, x24, [sp, #48]
  456564:	stp	x25, x26, [sp, #64]
  456568:	str	x27, [sp, #80]
  45656c:	ldrb	w24, [x0]
  456570:	cmp	w24, #0x5f
  456574:	b.eq	456720 <_obstack_memory_used@@Base+0xc11c>  // b.none
  456578:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1f9fc>
  45657c:	mov	x0, x19
  456580:	add	x1, x1, #0x2c8
  456584:	mov	x2, #0x8                   	// #8
  456588:	mov	w23, #0x0                   	// #0
  45658c:	bl	4026a0 <strncmp@plt>
  456590:	cbnz	w0, 4565e0 <_obstack_memory_used@@Base+0xbfdc>
  456594:	ldrb	w0, [x19, #8]
  456598:	mov	w2, #0x5f                  	// #95
  45659c:	mov	w1, #0x24                  	// #36
  4565a0:	cmp	w0, #0x2e
  4565a4:	ccmp	w0, w2, #0x4, ne  // ne = any
  4565a8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4565ac:	b.ne	4565e0 <_obstack_memory_used@@Base+0xbfdc>  // b.any
  4565b0:	ldrb	w0, [x19, #9]
  4565b4:	mov	w1, #0x49                  	// #73
  4565b8:	cmp	w0, #0x44
  4565bc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4565c0:	b.ne	4565e0 <_obstack_memory_used@@Base+0xbfdc>  // b.any
  4565c4:	ldrb	w1, [x19, #10]
  4565c8:	cmp	w1, w2
  4565cc:	b.ne	4565e0 <_obstack_memory_used@@Base+0xbfdc>  // b.any
  4565d0:	cmp	w0, #0x49
  4565d4:	cset	w23, ne  // ne = any
  4565d8:	add	w23, w23, #0x2
  4565dc:	nop
  4565e0:	mov	x0, x19
  4565e4:	bl	4024f0 <strlen@plt>
  4565e8:	mov	x3, x0
  4565ec:	mov	w1, #0x11                  	// #17
  4565f0:	add	x0, x19, x0
  4565f4:	stp	x19, x0, [x29, #96]
  4565f8:	lsl	w4, w3, #1
  4565fc:	str	w1, [x29, #112]
  456600:	cmp	w4, #0x800
  456604:	str	x19, [x29, #120]
  456608:	mov	w0, #0x0                   	// #0
  45660c:	stp	wzr, w4, [x29, #136]
  456610:	stp	wzr, w3, [x29, #152]
  456614:	stp	xzr, xzr, [x29, #160]
  456618:	str	xzr, [x29, #176]
  45661c:	b.hi	4566fc <_obstack_memory_used@@Base+0xc0f8>  // b.pmore
  456620:	mov	x22, sp
  456624:	mov	w27, #0x18                  	// #24
  456628:	sbfiz	x3, x3, #3, #32
  45662c:	cmp	w23, #0x1
  456630:	add	x3, x3, #0xf
  456634:	smsubl	x0, w4, w27, x22
  456638:	and	x3, x3, #0xfffffffffffffff0
  45663c:	mov	sp, x0
  456640:	mov	x25, sp
  456644:	sub	sp, sp, x3
  456648:	mov	x0, sp
  45664c:	str	x25, [x29, #128]
  456650:	str	x0, [x29, #144]
  456654:	b.eq	456760 <_obstack_memory_used@@Base+0xc15c>  // b.none
  456658:	sub	w0, w23, #0x2
  45665c:	cmp	w0, #0x1
  456660:	b.hi	4567a4 <_obstack_memory_used@@Base+0xc1a0>  // b.pmore
  456664:	cmp	w23, #0x2
  456668:	ldrb	w0, [x19, #11]
  45666c:	add	x24, x19, #0xb
  456670:	str	x24, [x29, #120]
  456674:	cset	w1, ne  // ne = any
  456678:	cmp	w0, #0x5f
  45667c:	add	w23, w1, #0x44
  456680:	b.eq	456734 <_obstack_memory_used@@Base+0xc130>  // b.none
  456684:	cmp	w4, #0x0
  456688:	b.le	456888 <_obstack_memory_used@@Base+0xc284>
  45668c:	mov	x0, x24
  456690:	bl	4024f0 <strlen@plt>
  456694:	mov	w1, #0x1                   	// #1
  456698:	str	wzr, [x25, #4]
  45669c:	str	w1, [x29, #136]
  4566a0:	cmp	w0, #0x0
  4566a4:	b.le	456888 <_obstack_memory_used@@Base+0xc284>
  4566a8:	add	x26, x29, #0x60
  4566ac:	str	wzr, [x25]
  4566b0:	str	x24, [x25, #8]
  4566b4:	str	w0, [x25, #16]
  4566b8:	mov	w1, w23
  4566bc:	mov	x2, x25
  4566c0:	mov	x3, #0x0                   	// #0
  4566c4:	mov	x0, x26
  4566c8:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  4566cc:	mov	x19, x0
  4566d0:	ldr	x23, [x29, #120]
  4566d4:	mov	x0, x23
  4566d8:	bl	4024f0 <strlen@plt>
  4566dc:	add	x1, x23, x0
  4566e0:	str	x1, [x29, #120]
  4566e4:	ldrb	w0, [x23, x0]
  4566e8:	cmp	w0, #0x0
  4566ec:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4566f0:	b.ne	4567c4 <_obstack_memory_used@@Base+0xc1c0>  // b.any
  4566f4:	mov	sp, x22
  4566f8:	mov	w0, #0x0                   	// #0
  4566fc:	mov	sp, x29
  456700:	ldp	x29, x30, [sp]
  456704:	ldp	x19, x20, [sp, #16]
  456708:	ldp	x21, x22, [sp, #32]
  45670c:	ldp	x23, x24, [sp, #48]
  456710:	ldp	x25, x26, [sp, #64]
  456714:	ldr	x27, [sp, #80]
  456718:	add	sp, sp, #0x230
  45671c:	ret
  456720:	ldrb	w0, [x0, #1]
  456724:	mov	w23, #0x1                   	// #1
  456728:	cmp	w0, #0x5a
  45672c:	b.ne	456578 <_obstack_memory_used@@Base+0xbf74>  // b.any
  456730:	b	4565e0 <_obstack_memory_used@@Base+0xbfdc>
  456734:	ldrb	w0, [x19, #12]
  456738:	cmp	w0, #0x5a
  45673c:	b.ne	456684 <_obstack_memory_used@@Base+0xc080>  // b.any
  456740:	add	x26, x29, #0x60
  456744:	add	x19, x19, #0xd
  456748:	mov	x0, x26
  45674c:	mov	w1, #0x0                   	// #0
  456750:	str	x19, [x29, #120]
  456754:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  456758:	mov	x25, x0
  45675c:	b	4566b8 <_obstack_memory_used@@Base+0xc0b4>
  456760:	cmp	w24, #0x5f
  456764:	b.ne	4566f4 <_obstack_memory_used@@Base+0xc0f0>  // b.any
  456768:	ldrb	w0, [x19, #1]
  45676c:	cmp	w0, #0x5a
  456770:	b.ne	4566f4 <_obstack_memory_used@@Base+0xc0f0>  // b.any
  456774:	add	x26, x29, #0x60
  456778:	add	x19, x19, #0x2
  45677c:	mov	w1, w23
  456780:	mov	x0, x26
  456784:	str	x19, [x29, #120]
  456788:	bl	44e9d8 <_obstack_memory_used@@Base+0x43d4>
  45678c:	ldr	w3, [x29, #112]
  456790:	mov	x19, x0
  456794:	tbnz	w3, #0, 456894 <_obstack_memory_used@@Base+0xc290>
  456798:	ldr	x0, [x29, #120]
  45679c:	ldrb	w0, [x0]
  4567a0:	b	4566e8 <_obstack_memory_used@@Base+0xc0e4>
  4567a4:	add	x0, x29, #0x60
  4567a8:	bl	44f720 <_obstack_memory_used@@Base+0x511c>
  4567ac:	ldr	x3, [x29, #120]
  4567b0:	mov	x19, x0
  4567b4:	ldrb	w0, [x3]
  4567b8:	cmp	w0, #0x0
  4567bc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4567c0:	b.eq	4566f4 <_obstack_memory_used@@Base+0xc0f0>  // b.none
  4567c4:	add	x2, x29, #0x208
  4567c8:	add	x23, x29, #0xb8
  4567cc:	mov	x0, x23
  4567d0:	mov	x1, x19
  4567d4:	str	xzr, [x29, #440]
  4567d8:	stp	xzr, xzr, [x2]
  4567dc:	stp	xzr, xzr, [x2, #16]
  4567e0:	strb	wzr, [x29, #448]
  4567e4:	stp	x20, x21, [x29, #456]
  4567e8:	stp	xzr, xzr, [x29, #472]
  4567ec:	stp	xzr, xzr, [x29, #488]
  4567f0:	stp	xzr, xzr, [x29, #504]
  4567f4:	bl	44ccf0 <_obstack_memory_used@@Base+0x26ec>
  4567f8:	ldr	w0, [x29, #492]
  4567fc:	cmp	w0, #0x7ff
  456800:	b.gt	456808 <_obstack_memory_used@@Base+0xc204>
  456804:	str	wzr, [x29, #492]
  456808:	ldr	w3, [x29, #532]
  45680c:	mov	w4, #0x1                   	// #1
  456810:	ldr	w6, [x29, #548]
  456814:	mov	x20, sp
  456818:	cmp	w3, #0x0
  45681c:	mov	x2, x19
  456820:	csel	w5, w3, w4, gt
  456824:	mov	x0, x23
  456828:	mov	w1, #0x11                  	// #17
  45682c:	str	xzr, [x29, #552]
  456830:	mul	w3, w3, w6
  456834:	sub	sp, sp, w5, sxtw #4
  456838:	str	w3, [x29, #548]
  45683c:	mov	x5, sp
  456840:	cmp	w3, #0x0
  456844:	str	x5, [x29, #520]
  456848:	csel	w3, w3, w4, gt
  45684c:	sub	sp, sp, w3, sxtw #4
  456850:	mov	x3, sp
  456854:	str	x3, [x29, #536]
  456858:	bl	454e60 <_obstack_memory_used@@Base+0xa85c>
  45685c:	mov	sp, x20
  456860:	ldr	x1, [x29, #440]
  456864:	mov	x0, x23
  456868:	ldp	x3, x2, [x29, #456]
  45686c:	strb	wzr, [x23, x1]
  456870:	blr	x3
  456874:	ldr	w0, [x29, #488]
  456878:	mov	sp, x22
  45687c:	cmp	w0, #0x0
  456880:	cset	w0, eq  // eq = none
  456884:	b	4566fc <_obstack_memory_used@@Base+0xc0f8>
  456888:	add	x26, x29, #0x60
  45688c:	mov	x25, #0x0                   	// #0
  456890:	b	4566b8 <_obstack_memory_used@@Base+0xc0b4>
  456894:	ldr	x6, [x29, #120]
  456898:	ldrb	w0, [x6]
  45689c:	cmp	w0, #0x2e
  4568a0:	b.ne	4566e8 <_obstack_memory_used@@Base+0xc0e4>  // b.any
  4568a4:	nop
  4568a8:	ldrb	w0, [x6, #1]
  4568ac:	sub	w1, w0, #0x61
  4568b0:	cmp	w0, #0x5f
  4568b4:	and	w1, w1, #0xff
  4568b8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  4568bc:	b.ls	45699c <_obstack_memory_used@@Base+0xc398>  // b.plast
  4568c0:	sub	w0, w0, #0x30
  4568c4:	and	w0, w0, #0xff
  4568c8:	cmp	w0, #0x9
  4568cc:	ldrb	w0, [x6]
  4568d0:	b.hi	4566e8 <_obstack_memory_used@@Base+0xc0e4>  // b.pmore
  4568d4:	mov	x3, x6
  4568d8:	cmp	w0, #0x2e
  4568dc:	b.ne	45692c <_obstack_memory_used@@Base+0xc328>  // b.any
  4568e0:	ldrb	w4, [x3, #1]
  4568e4:	sub	w4, w4, #0x30
  4568e8:	and	w4, w4, #0xff
  4568ec:	cmp	w4, #0x9
  4568f0:	b.hi	45692c <_obstack_memory_used@@Base+0xc328>  // b.pmore
  4568f4:	ldrb	w4, [x3, #2]
  4568f8:	add	x3, x3, #0x2
  4568fc:	sub	w5, w4, #0x30
  456900:	and	w5, w5, #0xff
  456904:	cmp	w5, #0x9
  456908:	b.hi	456924 <_obstack_memory_used@@Base+0xc320>  // b.pmore
  45690c:	nop
  456910:	ldrb	w4, [x3, #1]!
  456914:	sub	w5, w4, #0x30
  456918:	and	w5, w5, #0xff
  45691c:	cmp	w5, #0x9
  456920:	b.ls	456910 <_obstack_memory_used@@Base+0xc30c>  // b.plast
  456924:	cmp	w4, #0x2e
  456928:	b.eq	4568e0 <_obstack_memory_used@@Base+0xc2dc>  // b.none
  45692c:	ldp	w0, w1, [x29, #136]
  456930:	str	x3, [x29, #120]
  456934:	sub	x4, x3, x6
  456938:	cmp	w0, w1
  45693c:	b.ge	456994 <_obstack_memory_used@@Base+0xc390>  // b.tcont
  456940:	ldr	x2, [x29, #128]
  456944:	smull	x1, w0, w27
  456948:	add	w0, w0, #0x1
  45694c:	cmp	w4, #0x0
  456950:	add	x3, x2, x1
  456954:	str	wzr, [x3, #4]
  456958:	str	w0, [x29, #136]
  45695c:	b.le	456994 <_obstack_memory_used@@Base+0xc390>
  456960:	str	xzr, [x2, x1]
  456964:	str	x6, [x3, #8]
  456968:	str	w4, [x3, #16]
  45696c:	mov	x2, x19
  456970:	mov	x0, x26
  456974:	mov	w1, #0x4e                  	// #78
  456978:	bl	44cc00 <_obstack_memory_used@@Base+0x25fc>
  45697c:	ldr	x6, [x29, #120]
  456980:	mov	x19, x0
  456984:	ldrb	w0, [x6]
  456988:	cmp	w0, #0x2e
  45698c:	b.eq	4568a8 <_obstack_memory_used@@Base+0xc2a4>  // b.none
  456990:	b	4566e8 <_obstack_memory_used@@Base+0xc0e4>
  456994:	mov	x3, #0x0                   	// #0
  456998:	b	45696c <_obstack_memory_used@@Base+0xc368>
  45699c:	ldrb	w0, [x6, #2]
  4569a0:	add	x3, x6, #0x2
  4569a4:	b	4569ac <_obstack_memory_used@@Base+0xc3a8>
  4569a8:	ldrb	w0, [x3, #1]!
  4569ac:	sub	w1, w0, #0x61
  4569b0:	cmp	w0, #0x5f
  4569b4:	and	w1, w1, #0xff
  4569b8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  4569bc:	b.ls	4569a8 <_obstack_memory_used@@Base+0xc3a4>  // b.plast
  4569c0:	b	4568d8 <_obstack_memory_used@@Base+0xc2d4>
  4569c4:	nop
  4569c8:	stp	x29, x30, [sp, #-96]!
  4569cc:	mov	x29, sp
  4569d0:	stp	x21, x22, [sp, #32]
  4569d4:	mov	x21, x3
  4569d8:	cbz	x0, 456aa8 <_obstack_memory_used@@Base+0xc4a4>
  4569dc:	stp	x19, x20, [sp, #16]
  4569e0:	cmp	x1, #0x0
  4569e4:	mov	x19, x1
  4569e8:	mov	x20, x2
  4569ec:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  4569f0:	b.eq	456aa4 <_obstack_memory_used@@Base+0xc4a0>  // b.none
  4569f4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x29fc>
  4569f8:	add	x2, sp, #0x40
  4569fc:	add	x1, x1, #0x808
  456a00:	stp	xzr, xzr, [sp, #64]
  456a04:	str	xzr, [sp, #80]
  456a08:	str	wzr, [sp, #88]
  456a0c:	bl	456540 <_obstack_memory_used@@Base+0xbf3c>
  456a10:	cbz	w0, 456afc <_obstack_memory_used@@Base+0xc4f8>
  456a14:	ldr	w0, [sp, #88]
  456a18:	str	x23, [sp, #48]
  456a1c:	ldr	x22, [sp, #64]
  456a20:	cbnz	w0, 456a80 <_obstack_memory_used@@Base+0xc47c>
  456a24:	ldr	x23, [sp, #80]
  456a28:	cbz	x22, 456b20 <_obstack_memory_used@@Base+0xc51c>
  456a2c:	cbz	x19, 456af0 <_obstack_memory_used@@Base+0xc4ec>
  456a30:	mov	x0, x22
  456a34:	bl	4024f0 <strlen@plt>
  456a38:	ldr	x1, [x20]
  456a3c:	cmp	x0, x1
  456a40:	b.cs	456ac8 <_obstack_memory_used@@Base+0xc4c4>  // b.hs, b.nlast
  456a44:	add	x2, x0, #0x1
  456a48:	mov	x1, x22
  456a4c:	mov	x0, x19
  456a50:	bl	402490 <memcpy@plt>
  456a54:	mov	x0, x22
  456a58:	mov	x22, x19
  456a5c:	bl	402910 <free@plt>
  456a60:	cbz	x21, 456ad8 <_obstack_memory_used@@Base+0xc4d4>
  456a64:	ldp	x19, x20, [sp, #16]
  456a68:	ldr	x23, [sp, #48]
  456a6c:	str	wzr, [x21]
  456a70:	mov	x0, x22
  456a74:	ldp	x21, x22, [sp, #32]
  456a78:	ldp	x29, x30, [sp], #96
  456a7c:	ret
  456a80:	mov	x23, #0x1                   	// #1
  456a84:	cbnz	x22, 456a2c <_obstack_memory_used@@Base+0xc428>
  456a88:	cbz	x21, 456b44 <_obstack_memory_used@@Base+0xc540>
  456a8c:	mov	w0, #0xffffffff            	// #-1
  456a90:	mov	x22, #0x0                   	// #0
  456a94:	ldp	x19, x20, [sp, #16]
  456a98:	ldr	x23, [sp, #48]
  456a9c:	str	w0, [x21]
  456aa0:	b	456a70 <_obstack_memory_used@@Base+0xc46c>
  456aa4:	ldp	x19, x20, [sp, #16]
  456aa8:	cbz	x21, 456b0c <_obstack_memory_used@@Base+0xc508>
  456aac:	mov	w0, #0xfffffffd            	// #-3
  456ab0:	str	w0, [x21]
  456ab4:	mov	x22, #0x0                   	// #0
  456ab8:	mov	x0, x22
  456abc:	ldp	x21, x22, [sp, #32]
  456ac0:	ldp	x29, x30, [sp], #96
  456ac4:	ret
  456ac8:	mov	x0, x19
  456acc:	bl	402910 <free@plt>
  456ad0:	str	x23, [x20]
  456ad4:	cbnz	x21, 456a64 <_obstack_memory_used@@Base+0xc460>
  456ad8:	mov	x0, x22
  456adc:	ldp	x19, x20, [sp, #16]
  456ae0:	ldp	x21, x22, [sp, #32]
  456ae4:	ldr	x23, [sp, #48]
  456ae8:	ldp	x29, x30, [sp], #96
  456aec:	ret
  456af0:	cbz	x20, 456a60 <_obstack_memory_used@@Base+0xc45c>
  456af4:	str	x23, [x20]
  456af8:	b	456ad4 <_obstack_memory_used@@Base+0xc4d0>
  456afc:	ldr	x0, [sp, #64]
  456b00:	bl	402910 <free@plt>
  456b04:	cbnz	x21, 456b30 <_obstack_memory_used@@Base+0xc52c>
  456b08:	ldp	x19, x20, [sp, #16]
  456b0c:	mov	x22, #0x0                   	// #0
  456b10:	mov	x0, x22
  456b14:	ldp	x21, x22, [sp, #32]
  456b18:	ldp	x29, x30, [sp], #96
  456b1c:	ret
  456b20:	cbz	x21, 456b44 <_obstack_memory_used@@Base+0xc540>
  456b24:	cmp	x23, #0x1
  456b28:	b.eq	456a8c <_obstack_memory_used@@Base+0xc488>  // b.none
  456b2c:	ldr	x23, [sp, #48]
  456b30:	mov	w0, #0xfffffffe            	// #-2
  456b34:	mov	x22, #0x0                   	// #0
  456b38:	ldp	x19, x20, [sp, #16]
  456b3c:	str	w0, [x21]
  456b40:	b	456a70 <_obstack_memory_used@@Base+0xc46c>
  456b44:	mov	x22, #0x0                   	// #0
  456b48:	ldp	x19, x20, [sp, #16]
  456b4c:	ldr	x23, [sp, #48]
  456b50:	b	456b10 <_obstack_memory_used@@Base+0xc50c>
  456b54:	nop
  456b58:	cmp	x0, #0x0
  456b5c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  456b60:	b.eq	456b84 <_obstack_memory_used@@Base+0xc580>  // b.none
  456b64:	stp	x29, x30, [sp, #-16]!
  456b68:	mov	x29, sp
  456b6c:	bl	456540 <_obstack_memory_used@@Base+0xbf3c>
  456b70:	cmp	w0, #0x0
  456b74:	ldp	x29, x30, [sp], #16
  456b78:	mov	w0, #0xfffffffe            	// #-2
  456b7c:	csel	w0, wzr, w0, ne  // ne = any
  456b80:	ret
  456b84:	mov	w0, #0xfffffffd            	// #-3
  456b88:	ret
  456b8c:	nop
  456b90:	stp	x29, x30, [sp, #-16]!
  456b94:	mov	x29, sp
  456b98:	bl	44ca30 <_obstack_memory_used@@Base+0x242c>
  456b9c:	ldr	x0, [x0]
  456ba0:	cbz	x0, 456bb4 <_obstack_memory_used@@Base+0xc5b0>
  456ba4:	ldr	x1, [x0, #80]
  456ba8:	ldr	x0, [x0]
  456bac:	tbz	w1, #0, 456bb4 <_obstack_memory_used@@Base+0xc5b0>
  456bb0:	ldur	x0, [x0, #-112]
  456bb4:	ldp	x29, x30, [sp], #16
  456bb8:	ret
  456bbc:	nop
  456bc0:	and	w5, w0, #0xff
  456bc4:	cmp	w5, #0x50
  456bc8:	b.eq	456ce0 <_obstack_memory_used@@Base+0xc6dc>  // b.none
  456bcc:	and	w4, w5, #0xf
  456bd0:	cmp	w4, #0x4
  456bd4:	b.eq	456bf0 <_obstack_memory_used@@Base+0xc5ec>  // b.none
  456bd8:	b.ls	456c04 <_obstack_memory_used@@Base+0xc600>  // b.plast
  456bdc:	cmp	w4, #0xb
  456be0:	b.eq	456d04 <_obstack_memory_used@@Base+0xc700>  // b.none
  456be4:	b.ls	456c60 <_obstack_memory_used@@Base+0xc65c>  // b.plast
  456be8:	cmp	w4, #0xc
  456bec:	b.ne	456d14 <_obstack_memory_used@@Base+0xc710>  // b.any
  456bf0:	mov	x0, x2
  456bf4:	ldr	x4, [x0], #8
  456bf8:	cbnz	x4, 456cc0 <_obstack_memory_used@@Base+0xc6bc>
  456bfc:	str	x4, [x3]
  456c00:	ret
  456c04:	cmp	w4, #0x2
  456c08:	b.eq	456cf4 <_obstack_memory_used@@Base+0xc6f0>  // b.none
  456c0c:	b.ls	456c28 <_obstack_memory_used@@Base+0xc624>  // b.plast
  456c10:	cmp	w4, #0x3
  456c14:	b.ne	456d14 <_obstack_memory_used@@Base+0xc710>  // b.any
  456c18:	mov	x0, x2
  456c1c:	ldr	w4, [x0], #4
  456c20:	cbz	x4, 456bfc <_obstack_memory_used@@Base+0xc5f8>
  456c24:	b	456cc0 <_obstack_memory_used@@Base+0xc6bc>
  456c28:	cbz	w4, 456bf0 <_obstack_memory_used@@Base+0xc5ec>
  456c2c:	cmp	w4, #0x1
  456c30:	b.ne	456d14 <_obstack_memory_used@@Base+0xc710>  // b.any
  456c34:	mov	x0, x2
  456c38:	mov	x4, #0x0                   	// #0
  456c3c:	mov	w7, #0x0                   	// #0
  456c40:	ldrb	w8, [x0], #1
  456c44:	and	x6, x8, #0x7f
  456c48:	lsl	x6, x6, x7
  456c4c:	add	w7, w7, #0x7
  456c50:	orr	x4, x4, x6
  456c54:	tbnz	w8, #7, 456c40 <_obstack_memory_used@@Base+0xc63c>
  456c58:	cbz	x4, 456bfc <_obstack_memory_used@@Base+0xc5f8>
  456c5c:	b	456cc0 <_obstack_memory_used@@Base+0xc6bc>
  456c60:	cmp	w4, #0x9
  456c64:	b.eq	456c80 <_obstack_memory_used@@Base+0xc67c>  // b.none
  456c68:	cmp	w4, #0xa
  456c6c:	b.ne	456d14 <_obstack_memory_used@@Base+0xc710>  // b.any
  456c70:	mov	x0, x2
  456c74:	ldrsh	x4, [x0], #2
  456c78:	cbz	x4, 456bfc <_obstack_memory_used@@Base+0xc5f8>
  456c7c:	b	456cc0 <_obstack_memory_used@@Base+0xc6bc>
  456c80:	mov	x0, x2
  456c84:	mov	x4, #0x0                   	// #0
  456c88:	mov	w7, #0x0                   	// #0
  456c8c:	ldrb	w8, [x0], #1
  456c90:	and	x6, x8, #0x7f
  456c94:	lsl	x6, x6, x7
  456c98:	add	w7, w7, #0x7
  456c9c:	orr	x4, x4, x6
  456ca0:	tbnz	w8, #7, 456c8c <_obstack_memory_used@@Base+0xc688>
  456ca4:	cmp	w7, #0x3f
  456ca8:	b.hi	456bf8 <_obstack_memory_used@@Base+0xc5f4>  // b.pmore
  456cac:	tbz	w8, #6, 456bf8 <_obstack_memory_used@@Base+0xc5f4>
  456cb0:	mov	x6, #0xffffffffffffffff    	// #-1
  456cb4:	lsl	x7, x6, x7
  456cb8:	orr	x4, x4, x7
  456cbc:	nop
  456cc0:	and	w6, w5, #0x70
  456cc4:	cmp	w6, #0x10
  456cc8:	csel	x1, x2, x1, eq  // eq = none
  456ccc:	add	x4, x4, x1
  456cd0:	tbz	w5, #7, 456bfc <_obstack_memory_used@@Base+0xc5f8>
  456cd4:	ldr	x4, [x4]
  456cd8:	str	x4, [x3]
  456cdc:	ret
  456ce0:	add	x0, x2, #0x7
  456ce4:	and	x0, x0, #0xfffffffffffffff8
  456ce8:	ldr	x4, [x0], #8
  456cec:	str	x4, [x3]
  456cf0:	ret
  456cf4:	mov	x0, x2
  456cf8:	ldrh	w4, [x0], #2
  456cfc:	cbz	x4, 456bfc <_obstack_memory_used@@Base+0xc5f8>
  456d00:	b	456cc0 <_obstack_memory_used@@Base+0xc6bc>
  456d04:	mov	x0, x2
  456d08:	ldrsw	x4, [x0], #4
  456d0c:	cbz	x4, 456bfc <_obstack_memory_used@@Base+0xc5f8>
  456d10:	b	456cc0 <_obstack_memory_used@@Base+0xc6bc>
  456d14:	stp	x29, x30, [sp, #-16]!
  456d18:	mov	x29, sp
  456d1c:	bl	4027f0 <abort@plt>
  456d20:	and	w0, w0, #0xff
  456d24:	cmp	w0, #0xff
  456d28:	b.eq	456d74 <_obstack_memory_used@@Base+0xc770>  // b.none
  456d2c:	and	w2, w0, #0x70
  456d30:	cmp	w2, #0x30
  456d34:	b.eq	456d8c <_obstack_memory_used@@Base+0xc788>  // b.none
  456d38:	b.hi	456d4c <_obstack_memory_used@@Base+0xc748>  // b.pmore
  456d3c:	cmp	w2, #0x20
  456d40:	b.ne	456d5c <_obstack_memory_used@@Base+0xc758>  // b.any
  456d44:	ldr	x0, [x1, #808]
  456d48:	ret
  456d4c:	cmp	w2, #0x40
  456d50:	b.ne	456d7c <_obstack_memory_used@@Base+0xc778>  // b.any
  456d54:	ldr	x0, [x1, #824]
  456d58:	ret
  456d5c:	b.hi	456d68 <_obstack_memory_used@@Base+0xc764>  // b.pmore
  456d60:	tst	w0, #0x60
  456d64:	b.eq	456d74 <_obstack_memory_used@@Base+0xc770>  // b.none
  456d68:	stp	x29, x30, [sp, #-16]!
  456d6c:	mov	x29, sp
  456d70:	bl	4027f0 <abort@plt>
  456d74:	mov	x0, #0x0                   	// #0
  456d78:	ret
  456d7c:	cmp	w2, #0x50
  456d80:	mov	x0, #0x0                   	// #0
  456d84:	b.ne	456d68 <_obstack_memory_used@@Base+0xc764>  // b.any
  456d88:	ret
  456d8c:	ldr	x0, [x1, #816]
  456d90:	ret
  456d94:	nop
  456d98:	str	xzr, [x3, #1568]
  456d9c:	cmp	x0, x1
  456da0:	b.cs	457530 <_obstack_memory_used@@Base+0xcf2c>  // b.hs, b.nlast
  456da4:	stp	x29, x30, [sp, #-112]!
  456da8:	mov	x29, sp
  456dac:	stp	x21, x22, [sp, #32]
  456db0:	mov	x21, x2
  456db4:	mov	x22, x1
  456db8:	stp	x19, x20, [sp, #16]
  456dbc:	mov	x20, x3
  456dc0:	ldr	x2, [x21, #792]
  456dc4:	stp	x23, x24, [sp, #48]
  456dc8:	adrp	x23, 46b000 <_obstack_memory_used@@Base+0x209fc>
  456dcc:	ldr	x5, [x21, #832]
  456dd0:	stp	x25, x26, [sp, #64]
  456dd4:	add	x23, x23, #0x61c
  456dd8:	ldr	x1, [x20, #1608]
  456ddc:	stp	x27, x28, [sp, #80]
  456de0:	add	x5, x2, x5, lsr #63
  456de4:	add	x27, x29, #0x68
  456de8:	cmp	x1, x5
  456dec:	mov	x25, #0x0                   	// #0
  456df0:	mov	w24, #0x1                   	// #1
  456df4:	mov	w26, #0x5                   	// #5
  456df8:	b.cs	456ec8 <_obstack_memory_used@@Base+0xc8c4>  // b.hs, b.nlast
  456dfc:	nop
  456e00:	mov	x19, x0
  456e04:	ldrb	w4, [x19], #1
  456e08:	and	w5, w4, #0xc0
  456e0c:	cmp	w5, #0x40
  456e10:	b.eq	4573c4 <_obstack_memory_used@@Base+0xcdc0>  // b.none
  456e14:	cmp	w5, #0x80
  456e18:	b.eq	4573e8 <_obstack_memory_used@@Base+0xcde4>  // b.none
  456e1c:	cmp	w5, #0xc0
  456e20:	b.eq	4573d8 <_obstack_memory_used@@Base+0xcdd4>  // b.none
  456e24:	cmp	w4, #0x2f
  456e28:	b.hi	457540 <_obstack_memory_used@@Base+0xcf3c>  // b.pmore
  456e2c:	ldrh	w2, [x23, w4, uxtw #1]
  456e30:	adr	x3, 456e3c <_obstack_memory_used@@Base+0xc838>
  456e34:	add	x2, x3, w2, sxth #2
  456e38:	br	x2
  456e3c:	mov	x1, #0x0                   	// #0
  456e40:	mov	w0, #0x0                   	// #0
  456e44:	ldrb	w3, [x19], #1
  456e48:	and	x2, x3, #0x7f
  456e4c:	lsl	x2, x2, x0
  456e50:	add	w0, w0, #0x7
  456e54:	orr	x1, x1, x2
  456e58:	tbnz	w3, #7, 456e44 <_obstack_memory_used@@Base+0xc840>
  456e5c:	mov	x4, #0x0                   	// #0
  456e60:	mov	w2, #0x0                   	// #0
  456e64:	nop
  456e68:	ldrb	w3, [x19], #1
  456e6c:	and	x0, x3, #0x7f
  456e70:	lsl	x0, x0, x2
  456e74:	add	w2, w2, #0x7
  456e78:	orr	x4, x4, x0
  456e7c:	tbnz	w3, #7, 456e68 <_obstack_memory_used@@Base+0xc864>
  456e80:	ldr	x0, [x20, #1624]
  456e84:	cmp	x1, #0x61
  456e88:	mul	x4, x4, x0
  456e8c:	b.hi	456ea4 <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  456e90:	lsl	x1, x1, #4
  456e94:	neg	x4, x4
  456e98:	add	x0, x20, x1
  456e9c:	str	w24, [x0, #8]
  456ea0:	str	x4, [x20, x1]
  456ea4:	cmp	x22, x19
  456ea8:	b.ls	456ec8 <_obstack_memory_used@@Base+0xc8c4>  // b.plast
  456eac:	ldr	x2, [x21, #792]
  456eb0:	mov	x0, x19
  456eb4:	ldr	x5, [x21, #832]
  456eb8:	ldr	x1, [x20, #1608]
  456ebc:	add	x5, x2, x5, lsr #63
  456ec0:	cmp	x1, x5
  456ec4:	b.cc	456e00 <_obstack_memory_used@@Base+0xc7fc>  // b.lo, b.ul, b.last
  456ec8:	mov	sp, x29
  456ecc:	ldp	x19, x20, [sp, #16]
  456ed0:	ldp	x21, x22, [sp, #32]
  456ed4:	ldp	x23, x24, [sp, #48]
  456ed8:	ldp	x25, x26, [sp, #64]
  456edc:	ldp	x27, x28, [sp, #80]
  456ee0:	ldp	x29, x30, [sp], #112
  456ee4:	ret
  456ee8:	mov	x1, #0x0                   	// #0
  456eec:	mov	w0, #0x0                   	// #0
  456ef0:	ldrb	w3, [x19], #1
  456ef4:	and	x2, x3, #0x7f
  456ef8:	lsl	x2, x2, x0
  456efc:	add	w0, w0, #0x7
  456f00:	orr	x1, x1, x2
  456f04:	tbnz	w3, #7, 456ef0 <_obstack_memory_used@@Base+0xc8ec>
  456f08:	str	x1, [x21, #848]
  456f0c:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  456f10:	mov	x1, #0x0                   	// #0
  456f14:	mov	w0, #0x0                   	// #0
  456f18:	ldrb	w3, [x19], #1
  456f1c:	and	x2, x3, #0x7f
  456f20:	lsl	x2, x2, x0
  456f24:	add	w0, w0, #0x7
  456f28:	orr	x1, x1, x2
  456f2c:	tbnz	w3, #7, 456f18 <_obstack_memory_used@@Base+0xc914>
  456f30:	cmp	x1, #0x61
  456f34:	b.hi	456f48 <_obstack_memory_used@@Base+0xc944>  // b.pmore
  456f38:	lsl	x1, x1, #4
  456f3c:	add	x0, x20, x1
  456f40:	str	w26, [x0, #8]
  456f44:	str	x19, [x20, x1]
  456f48:	mov	x3, #0x0                   	// #0
  456f4c:	mov	w1, #0x0                   	// #0
  456f50:	ldrb	w2, [x19], #1
  456f54:	and	x0, x2, #0x7f
  456f58:	lsl	x0, x0, x1
  456f5c:	add	w1, w1, #0x7
  456f60:	orr	x3, x3, x0
  456f64:	tbnz	w2, #7, 456f50 <_obstack_memory_used@@Base+0xc94c>
  456f68:	add	x19, x19, x3
  456f6c:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  456f70:	mov	x1, #0x0                   	// #0
  456f74:	mov	w0, #0x0                   	// #0
  456f78:	ldrb	w3, [x19], #1
  456f7c:	and	x2, x3, #0x7f
  456f80:	lsl	x2, x2, x0
  456f84:	add	w0, w0, #0x7
  456f88:	orr	x1, x1, x2
  456f8c:	tbnz	w3, #7, 456f78 <_obstack_memory_used@@Base+0xc974>
  456f90:	mov	x4, #0x0                   	// #0
  456f94:	mov	w2, #0x0                   	// #0
  456f98:	ldrb	w3, [x19], #1
  456f9c:	and	x0, x3, #0x7f
  456fa0:	lsl	x0, x0, x2
  456fa4:	add	w2, w2, #0x7
  456fa8:	orr	x4, x4, x0
  456fac:	tbnz	w3, #7, 456f98 <_obstack_memory_used@@Base+0xc994>
  456fb0:	cmp	w2, #0x3f
  456fb4:	b.hi	456fcc <_obstack_memory_used@@Base+0xc9c8>  // b.pmore
  456fb8:	mov	x0, #0xffffffffffffffff    	// #-1
  456fbc:	tst	x3, #0x40
  456fc0:	lsl	x0, x0, x2
  456fc4:	orr	x0, x4, x0
  456fc8:	csel	x4, x0, x4, ne  // ne = any
  456fcc:	ldr	x0, [x20, #1624]
  456fd0:	cmp	x1, #0x61
  456fd4:	mul	x4, x4, x0
  456fd8:	b.hi	456ea4 <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  456fdc:	lsl	x1, x1, #4
  456fe0:	mov	w2, #0x4                   	// #4
  456fe4:	add	x0, x20, x1
  456fe8:	str	w2, [x0, #8]
  456fec:	str	x4, [x20, x1]
  456ff0:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  456ff4:	mov	x1, #0x0                   	// #0
  456ff8:	mov	w0, #0x0                   	// #0
  456ffc:	ldrb	w3, [x19], #1
  457000:	and	x2, x3, #0x7f
  457004:	lsl	x2, x2, x0
  457008:	add	w0, w0, #0x7
  45700c:	orr	x1, x1, x2
  457010:	tbnz	w3, #7, 456ffc <_obstack_memory_used@@Base+0xc9f8>
  457014:	mov	x4, #0x0                   	// #0
  457018:	mov	w2, #0x0                   	// #0
  45701c:	nop
  457020:	ldrb	w3, [x19], #1
  457024:	and	x0, x3, #0x7f
  457028:	lsl	x0, x0, x2
  45702c:	add	w2, w2, #0x7
  457030:	orr	x4, x4, x0
  457034:	tbnz	w3, #7, 457020 <_obstack_memory_used@@Base+0xca1c>
  457038:	b	456fcc <_obstack_memory_used@@Base+0xc9c8>
  45703c:	mov	x1, #0x0                   	// #0
  457040:	mov	w0, #0x0                   	// #0
  457044:	ldrb	w3, [x19], #1
  457048:	and	x2, x3, #0x7f
  45704c:	lsl	x2, x2, x0
  457050:	add	w0, w0, #0x7
  457054:	orr	x1, x1, x2
  457058:	tbnz	w3, #7, 457044 <_obstack_memory_used@@Base+0xca40>
  45705c:	cmp	w0, #0x3f
  457060:	b.hi	457078 <_obstack_memory_used@@Base+0xca74>  // b.pmore
  457064:	mov	x2, #0xffffffffffffffff    	// #-1
  457068:	tst	x3, #0x40
  45706c:	lsl	x0, x2, x0
  457070:	orr	x0, x1, x0
  457074:	csel	x1, x0, x1, ne  // ne = any
  457078:	ldr	x0, [x20, #1624]
  45707c:	mul	x1, x0, x1
  457080:	str	x1, [x20, #1576]
  457084:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457088:	mov	x1, #0x0                   	// #0
  45708c:	mov	w0, #0x0                   	// #0
  457090:	ldrb	w3, [x19], #1
  457094:	and	x2, x3, #0x7f
  457098:	lsl	x2, x2, x0
  45709c:	add	w0, w0, #0x7
  4570a0:	orr	x1, x1, x2
  4570a4:	tbnz	w3, #7, 457090 <_obstack_memory_used@@Base+0xca8c>
  4570a8:	mov	x3, #0x0                   	// #0
  4570ac:	mov	w2, #0x0                   	// #0
  4570b0:	str	x1, [x20, #1584]
  4570b4:	nop
  4570b8:	ldrb	w1, [x19], #1
  4570bc:	and	x0, x1, #0x7f
  4570c0:	lsl	x0, x0, x2
  4570c4:	add	w2, w2, #0x7
  4570c8:	orr	x3, x3, x0
  4570cc:	tbnz	w1, #7, 4570b8 <_obstack_memory_used@@Base+0xcab4>
  4570d0:	cmp	w2, #0x3f
  4570d4:	b.hi	4570ec <_obstack_memory_used@@Base+0xcae8>  // b.pmore
  4570d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4570dc:	tst	x1, #0x40
  4570e0:	lsl	x0, x0, x2
  4570e4:	orr	x0, x3, x0
  4570e8:	csel	x3, x0, x3, ne  // ne = any
  4570ec:	ldr	x0, [x20, #1624]
  4570f0:	str	w24, [x20, #1600]
  4570f4:	mul	x3, x0, x3
  4570f8:	str	x3, [x20, #1576]
  4570fc:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457100:	mov	x1, #0x0                   	// #0
  457104:	mov	w0, #0x0                   	// #0
  457108:	ldrb	w3, [x19], #1
  45710c:	and	x2, x3, #0x7f
  457110:	lsl	x2, x2, x0
  457114:	add	w0, w0, #0x7
  457118:	orr	x1, x1, x2
  45711c:	tbnz	w3, #7, 457108 <_obstack_memory_used@@Base+0xcb04>
  457120:	mov	x4, #0x0                   	// #0
  457124:	mov	w2, #0x0                   	// #0
  457128:	ldrb	w3, [x19], #1
  45712c:	and	x0, x3, #0x7f
  457130:	lsl	x0, x0, x2
  457134:	add	w2, w2, #0x7
  457138:	orr	x4, x4, x0
  45713c:	tbnz	w3, #7, 457128 <_obstack_memory_used@@Base+0xcb24>
  457140:	cmp	w2, #0x3f
  457144:	b.hi	45715c <_obstack_memory_used@@Base+0xcb58>  // b.pmore
  457148:	mov	x0, #0xffffffffffffffff    	// #-1
  45714c:	tst	x3, #0x40
  457150:	lsl	x0, x0, x2
  457154:	orr	x0, x4, x0
  457158:	csel	x4, x0, x4, ne  // ne = any
  45715c:	ldr	x0, [x20, #1624]
  457160:	cmp	x1, #0x61
  457164:	mul	x4, x4, x0
  457168:	b.hi	456ea4 <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  45716c:	lsl	x1, x1, #4
  457170:	add	x0, x20, x1
  457174:	str	w24, [x0, #8]
  457178:	str	x4, [x20, x1]
  45717c:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457180:	mov	x1, #0x0                   	// #0
  457184:	mov	w0, #0x0                   	// #0
  457188:	ldrb	w3, [x19], #1
  45718c:	and	x2, x3, #0x7f
  457190:	lsl	x2, x2, x0
  457194:	add	w0, w0, #0x7
  457198:	orr	x1, x1, x2
  45719c:	tbnz	w3, #7, 457188 <_obstack_memory_used@@Base+0xcb84>
  4571a0:	cmp	x1, #0x61
  4571a4:	b.hi	4571bc <_obstack_memory_used@@Base+0xcbb8>  // b.pmore
  4571a8:	lsl	x1, x1, #4
  4571ac:	mov	w2, #0x3                   	// #3
  4571b0:	add	x0, x20, x1
  4571b4:	str	w2, [x0, #8]
  4571b8:	str	x19, [x20, x1]
  4571bc:	mov	x3, #0x0                   	// #0
  4571c0:	mov	w1, #0x0                   	// #0
  4571c4:	nop
  4571c8:	ldrb	w2, [x19], #1
  4571cc:	and	x0, x2, #0x7f
  4571d0:	lsl	x0, x0, x1
  4571d4:	add	w1, w1, #0x7
  4571d8:	orr	x3, x3, x0
  4571dc:	tbnz	w2, #7, 4571c8 <_obstack_memory_used@@Base+0xcbc4>
  4571e0:	add	x19, x19, x3
  4571e4:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4571e8:	mov	x1, #0x0                   	// #0
  4571ec:	mov	w0, #0x0                   	// #0
  4571f0:	ldrb	w3, [x19], #1
  4571f4:	and	x2, x3, #0x7f
  4571f8:	lsl	x2, x2, x0
  4571fc:	add	w0, w0, #0x7
  457200:	orr	x1, x1, x2
  457204:	tbnz	w3, #7, 4571f0 <_obstack_memory_used@@Base+0xcbec>
  457208:	str	x1, [x20, #1576]
  45720c:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457210:	mov	x1, #0x0                   	// #0
  457214:	mov	w0, #0x0                   	// #0
  457218:	ldrb	w3, [x19], #1
  45721c:	and	x2, x3, #0x7f
  457220:	lsl	x2, x2, x0
  457224:	add	w0, w0, #0x7
  457228:	orr	x1, x1, x2
  45722c:	tbnz	w3, #7, 457218 <_obstack_memory_used@@Base+0xcc14>
  457230:	str	x1, [x20, #1584]
  457234:	str	w24, [x20, #1600]
  457238:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  45723c:	mov	x1, #0x0                   	// #0
  457240:	mov	w0, #0x0                   	// #0
  457244:	ldrb	w3, [x19], #1
  457248:	and	x2, x3, #0x7f
  45724c:	lsl	x2, x2, x0
  457250:	add	w0, w0, #0x7
  457254:	orr	x1, x1, x2
  457258:	tbnz	w3, #7, 457244 <_obstack_memory_used@@Base+0xcc40>
  45725c:	mov	x3, #0x0                   	// #0
  457260:	mov	w2, #0x0                   	// #0
  457264:	str	x1, [x20, #1584]
  457268:	ldrb	w1, [x19], #1
  45726c:	and	x0, x1, #0x7f
  457270:	lsl	x0, x0, x2
  457274:	add	w2, w2, #0x7
  457278:	orr	x3, x3, x0
  45727c:	tbnz	w1, #7, 457268 <_obstack_memory_used@@Base+0xcc64>
  457280:	str	x3, [x20, #1576]
  457284:	str	w24, [x20, #1600]
  457288:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  45728c:	mov	x1, #0x0                   	// #0
  457290:	mov	w0, #0x0                   	// #0
  457294:	ldrb	w3, [x19], #1
  457298:	and	x2, x3, #0x7f
  45729c:	lsl	x2, x2, x0
  4572a0:	add	w0, w0, #0x7
  4572a4:	orr	x1, x1, x2
  4572a8:	tbnz	w3, #7, 457294 <_obstack_memory_used@@Base+0xcc90>
  4572ac:	mov	x4, #0x0                   	// #0
  4572b0:	mov	w2, #0x0                   	// #0
  4572b4:	nop
  4572b8:	ldrb	w3, [x19], #1
  4572bc:	and	x0, x3, #0x7f
  4572c0:	lsl	x0, x0, x2
  4572c4:	add	w2, w2, #0x7
  4572c8:	orr	x4, x4, x0
  4572cc:	tbnz	w3, #7, 4572b8 <_obstack_memory_used@@Base+0xccb4>
  4572d0:	cmp	x1, #0x61
  4572d4:	b.hi	456ea4 <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  4572d8:	lsl	x1, x1, #4
  4572dc:	mov	w2, #0x2                   	// #2
  4572e0:	add	x0, x20, x1
  4572e4:	str	w2, [x0, #8]
  4572e8:	str	x4, [x20, x1]
  4572ec:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4572f0:	mov	x1, #0x0                   	// #0
  4572f4:	mov	w0, #0x0                   	// #0
  4572f8:	ldrb	w3, [x19], #1
  4572fc:	and	x2, x3, #0x7f
  457300:	lsl	x2, x2, x0
  457304:	add	w0, w0, #0x7
  457308:	orr	x1, x1, x2
  45730c:	tbnz	w3, #7, 4572f8 <_obstack_memory_used@@Base+0xccf4>
  457310:	cmp	x1, #0x61
  457314:	b.hi	456ea4 <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  457318:	add	x1, x20, x1, lsl #4
  45731c:	str	wzr, [x1, #8]
  457320:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457324:	mov	x1, #0x0                   	// #0
  457328:	mov	w0, #0x0                   	// #0
  45732c:	ldrb	w3, [x19], #1
  457330:	and	x2, x3, #0x7f
  457334:	lsl	x2, x2, x0
  457338:	add	w0, w0, #0x7
  45733c:	orr	x1, x1, x2
  457340:	tbnz	w3, #7, 45732c <_obstack_memory_used@@Base+0xcd28>
  457344:	cmp	x1, #0x61
  457348:	b.hi	456ea4 <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  45734c:	add	x1, x20, x1, lsl #4
  457350:	mov	w0, #0x6                   	// #6
  457354:	str	w0, [x1, #8]
  457358:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  45735c:	mov	x1, #0x0                   	// #0
  457360:	mov	w0, #0x0                   	// #0
  457364:	ldrb	w3, [x19], #1
  457368:	and	x2, x3, #0x7f
  45736c:	lsl	x2, x2, x0
  457370:	add	w0, w0, #0x7
  457374:	orr	x1, x1, x2
  457378:	tbnz	w3, #7, 457364 <_obstack_memory_used@@Base+0xcd60>
  45737c:	b	457310 <_obstack_memory_used@@Base+0xcd0c>
  457380:	mov	x1, #0x0                   	// #0
  457384:	mov	w0, #0x0                   	// #0
  457388:	ldrb	w3, [x19], #1
  45738c:	and	x2, x3, #0x7f
  457390:	lsl	x2, x2, x0
  457394:	add	w0, w0, #0x7
  457398:	orr	x1, x1, x2
  45739c:	tbnz	w3, #7, 457388 <_obstack_memory_used@@Base+0xcd84>
  4573a0:	mov	x4, #0x0                   	// #0
  4573a4:	mov	w2, #0x0                   	// #0
  4573a8:	ldrb	w3, [x19], #1
  4573ac:	and	x0, x3, #0x7f
  4573b0:	lsl	x0, x0, x2
  4573b4:	add	w2, w2, #0x7
  4573b8:	orr	x4, x4, x0
  4573bc:	tbnz	w3, #7, 4573a8 <_obstack_memory_used@@Base+0xcda4>
  4573c0:	b	45715c <_obstack_memory_used@@Base+0xcb58>
  4573c4:	ldr	x0, [x20, #1632]
  4573c8:	and	x4, x4, #0x3f
  4573cc:	madd	x4, x4, x0, x1
  4573d0:	str	x4, [x20, #1608]
  4573d4:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4573d8:	ubfiz	x4, x4, #4, #6
  4573dc:	add	x4, x20, x4
  4573e0:	str	wzr, [x4, #8]
  4573e4:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4573e8:	and	w4, w4, #0x3f
  4573ec:	mov	x1, #0x0                   	// #0
  4573f0:	mov	w5, #0x0                   	// #0
  4573f4:	nop
  4573f8:	ldrb	w6, [x19], #1
  4573fc:	and	x0, x6, #0x7f
  457400:	lsl	x0, x0, x5
  457404:	add	w5, w5, #0x7
  457408:	orr	x1, x1, x0
  45740c:	tbnz	w6, #7, 4573f8 <_obstack_memory_used@@Base+0xcdf4>
  457410:	ubfiz	x4, x4, #4, #6
  457414:	ldr	x2, [x20, #1624]
  457418:	add	x0, x20, x4
  45741c:	mul	x1, x1, x2
  457420:	str	w24, [x0, #8]
  457424:	str	x1, [x20, x4]
  457428:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  45742c:	ldr	x0, [x20, #544]
  457430:	eor	x0, x0, #0x1
  457434:	str	x0, [x20, #544]
  457438:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  45743c:	ldrb	w28, [x20, #1648]
  457440:	mov	x1, x21
  457444:	mov	w0, w28
  457448:	bl	456d20 <_obstack_memory_used@@Base+0xc71c>
  45744c:	mov	x2, x19
  457450:	mov	x1, x0
  457454:	mov	x3, x27
  457458:	mov	w0, w28
  45745c:	bl	456bc0 <_obstack_memory_used@@Base+0xc5bc>
  457460:	mov	x19, x0
  457464:	ldr	x1, [x29, #104]
  457468:	str	x1, [x20, #1608]
  45746c:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457470:	ldrb	w2, [x0, #1]
  457474:	add	x19, x0, #0x2
  457478:	ldr	x0, [x20, #1632]
  45747c:	madd	x1, x2, x0, x1
  457480:	str	x1, [x20, #1608]
  457484:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457488:	ldurh	w2, [x0, #1]
  45748c:	add	x19, x0, #0x3
  457490:	ldr	x0, [x20, #1632]
  457494:	madd	x1, x2, x0, x1
  457498:	str	x1, [x20, #1608]
  45749c:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4574a0:	ldur	w2, [x0, #1]
  4574a4:	add	x19, x0, #0x5
  4574a8:	ldr	x0, [x20, #1632]
  4574ac:	madd	x1, x2, x0, x1
  4574b0:	str	x1, [x20, #1608]
  4574b4:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4574b8:	cbz	x25, 457534 <_obstack_memory_used@@Base+0xcf30>
  4574bc:	mov	x3, x25
  4574c0:	ldr	x25, [x25, #1568]
  4574c4:	mov	x1, x20
  4574c8:	mov	x0, x3
  4574cc:	mov	x2, #0x648                 	// #1608
  4574d0:	bl	402490 <memcpy@plt>
  4574d4:	str	x0, [x20, #1568]
  4574d8:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4574dc:	ldr	x28, [x20, #1568]
  4574e0:	mov	x0, x20
  4574e4:	mov	x2, #0x648                 	// #1608
  4574e8:	mov	x1, x28
  4574ec:	bl	402490 <memcpy@plt>
  4574f0:	str	x25, [x28, #1568]
  4574f4:	mov	x25, x28
  4574f8:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  4574fc:	mov	w0, #0x2                   	// #2
  457500:	mov	x3, #0x0                   	// #0
  457504:	mov	w1, #0x0                   	// #0
  457508:	str	x19, [x20, #1592]
  45750c:	str	w0, [x20, #1600]
  457510:	ldrb	w2, [x19], #1
  457514:	and	x0, x2, #0x7f
  457518:	lsl	x0, x0, x1
  45751c:	add	w1, w1, #0x7
  457520:	orr	x3, x3, x0
  457524:	tbnz	w2, #7, 457510 <_obstack_memory_used@@Base+0xcf0c>
  457528:	add	x19, x19, x3
  45752c:	b	456ea4 <_obstack_memory_used@@Base+0xc8a0>
  457530:	ret
  457534:	sub	sp, sp, #0x650
  457538:	mov	x3, sp
  45753c:	b	4574c4 <_obstack_memory_used@@Base+0xcec0>
  457540:	bl	4027f0 <abort@plt>
  457544:	nop
  457548:	adrp	x2, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45754c:	add	x1, x2, #0xb08
  457550:	mov	w0, #0x8                   	// #8
  457554:	strb	w0, [x2, #2824]
  457558:	strb	w0, [x1, #1]
  45755c:	strb	w0, [x1, #2]
  457560:	strb	w0, [x1, #3]
  457564:	strb	w0, [x1, #4]
  457568:	strb	w0, [x1, #5]
  45756c:	strb	w0, [x1, #6]
  457570:	strb	w0, [x1, #7]
  457574:	strb	w0, [x1, #8]
  457578:	strb	w0, [x1, #9]
  45757c:	strb	w0, [x1, #10]
  457580:	strb	w0, [x1, #11]
  457584:	strb	w0, [x1, #12]
  457588:	strb	w0, [x1, #13]
  45758c:	strb	w0, [x1, #14]
  457590:	strb	w0, [x1, #15]
  457594:	strb	w0, [x1, #16]
  457598:	strb	w0, [x1, #17]
  45759c:	strb	w0, [x1, #18]
  4575a0:	strb	w0, [x1, #19]
  4575a4:	strb	w0, [x1, #20]
  4575a8:	strb	w0, [x1, #21]
  4575ac:	strb	w0, [x1, #22]
  4575b0:	strb	w0, [x1, #23]
  4575b4:	strb	w0, [x1, #24]
  4575b8:	strb	w0, [x1, #25]
  4575bc:	strb	w0, [x1, #26]
  4575c0:	strb	w0, [x1, #27]
  4575c4:	strb	w0, [x1, #28]
  4575c8:	strb	w0, [x1, #29]
  4575cc:	strb	w0, [x1, #30]
  4575d0:	strb	w0, [x1, #31]
  4575d4:	strb	w0, [x1, #64]
  4575d8:	strb	w0, [x1, #46]
  4575dc:	strb	w0, [x1, #65]
  4575e0:	strb	w0, [x1, #66]
  4575e4:	strb	w0, [x1, #67]
  4575e8:	strb	w0, [x1, #68]
  4575ec:	strb	w0, [x1, #69]
  4575f0:	strb	w0, [x1, #70]
  4575f4:	strb	w0, [x1, #71]
  4575f8:	strb	w0, [x1, #72]
  4575fc:	strb	w0, [x1, #73]
  457600:	strb	w0, [x1, #74]
  457604:	strb	w0, [x1, #75]
  457608:	strb	w0, [x1, #76]
  45760c:	strb	w0, [x1, #77]
  457610:	strb	w0, [x1, #78]
  457614:	strb	w0, [x1, #79]
  457618:	strb	w0, [x1, #80]
  45761c:	strb	w0, [x1, #81]
  457620:	strb	w0, [x1, #82]
  457624:	strb	w0, [x1, #83]
  457628:	strb	w0, [x1, #84]
  45762c:	strb	w0, [x1, #85]
  457630:	strb	w0, [x1, #86]
  457634:	strb	w0, [x1, #87]
  457638:	strb	w0, [x1, #88]
  45763c:	strb	w0, [x1, #89]
  457640:	strb	w0, [x1, #90]
  457644:	strb	w0, [x1, #91]
  457648:	strb	w0, [x1, #92]
  45764c:	strb	w0, [x1, #93]
  457650:	strb	w0, [x1, #94]
  457654:	strb	w0, [x1, #95]
  457658:	strb	w0, [x1, #48]
  45765c:	strb	w0, [x1, #49]
  457660:	strb	w0, [x1, #50]
  457664:	strb	w0, [x1, #51]
  457668:	strb	w0, [x1, #52]
  45766c:	strb	w0, [x1, #53]
  457670:	strb	w0, [x1, #54]
  457674:	strb	w0, [x1, #55]
  457678:	strb	w0, [x1, #56]
  45767c:	strb	w0, [x1, #57]
  457680:	strb	w0, [x1, #58]
  457684:	strb	w0, [x1, #59]
  457688:	strb	w0, [x1, #60]
  45768c:	strb	w0, [x1, #61]
  457690:	strb	w0, [x1, #62]
  457694:	strb	w0, [x1, #63]
  457698:	strb	w0, [x1, #96]
  45769c:	ret
  4576a0:	stp	x29, x30, [sp, #-112]!
  4576a4:	mov	x2, #0x680                 	// #1664
  4576a8:	mov	x29, sp
  4576ac:	stp	x19, x20, [sp, #16]
  4576b0:	mov	x20, x0
  4576b4:	mov	x19, x1
  4576b8:	mov	x0, x1
  4576bc:	mov	w1, #0x0                   	// #0
  4576c0:	bl	4026f0 <memset@plt>
  4576c4:	str	xzr, [x20, #800]
  4576c8:	ldr	x2, [x20, #792]
  4576cc:	str	xzr, [x20, #848]
  4576d0:	cbz	x2, 457a44 <_obstack_memory_used@@Base+0xd440>
  4576d4:	ldr	d0, [x20, #832]
  4576d8:	add	x1, x20, #0x328
  4576dc:	stp	x21, x22, [sp, #32]
  4576e0:	cmge	d0, d0, #0
  4576e4:	fmov	x0, d0
  4576e8:	add	x0, x2, x0
  4576ec:	bl	45ade0 <_obstack_memory_used@@Base+0x107dc>
  4576f0:	mov	x22, x0
  4576f4:	cbz	x0, 457aa8 <_obstack_memory_used@@Base+0xd4a4>
  4576f8:	ldrsw	x1, [x0, #4]
  4576fc:	stp	x23, x24, [sp, #48]
  457700:	add	x23, x0, #0x4
  457704:	sub	x23, x23, x1
  457708:	ldr	x0, [x20, #824]
  45770c:	str	x0, [x19, #1608]
  457710:	add	x21, x23, #0x9
  457714:	mov	x0, x21
  457718:	bl	4024f0 <strlen@plt>
  45771c:	ldrb	w1, [x23, #9]
  457720:	add	x2, x0, #0x1
  457724:	add	x2, x21, x2
  457728:	cmp	w1, #0x65
  45772c:	b.eq	457918 <_obstack_memory_used@@Base+0xd314>  // b.none
  457730:	ldrb	w6, [x23, #8]
  457734:	ldrb	w3, [x2]
  457738:	cmp	w6, #0x3
  45773c:	b.hi	457b88 <_obstack_memory_used@@Base+0xd584>  // b.pmore
  457740:	stp	x25, x26, [sp, #64]
  457744:	stp	x27, x28, [sp, #80]
  457748:	mov	x5, #0x0                   	// #0
  45774c:	mov	w4, #0x0                   	// #0
  457750:	b	457758 <_obstack_memory_used@@Base+0xd154>
  457754:	ldrb	w3, [x2]
  457758:	and	x1, x3, #0x7f
  45775c:	add	x2, x2, #0x1
  457760:	lsl	x1, x1, x4
  457764:	add	w4, w4, #0x7
  457768:	orr	x5, x5, x1
  45776c:	tbnz	w3, #7, 457754 <_obstack_memory_used@@Base+0xd150>
  457770:	mov	x0, #0x0                   	// #0
  457774:	mov	w3, #0x0                   	// #0
  457778:	str	x5, [x19, #1632]
  45777c:	nop
  457780:	mov	x5, x2
  457784:	ldrb	w4, [x2], #1
  457788:	and	x1, x4, #0x7f
  45778c:	lsl	x1, x1, x3
  457790:	add	w3, w3, #0x7
  457794:	orr	x0, x0, x1
  457798:	tbnz	w4, #7, 457780 <_obstack_memory_used@@Base+0xd17c>
  45779c:	cmp	w3, #0x3f
  4577a0:	b.hi	4577b8 <_obstack_memory_used@@Base+0xd1b4>  // b.pmore
  4577a4:	mov	x1, #0xffffffffffffffff    	// #-1
  4577a8:	tst	x4, #0x40
  4577ac:	lsl	x3, x1, x3
  4577b0:	orr	x3, x0, x3
  4577b4:	csel	x0, x3, x0, ne  // ne = any
  4577b8:	str	x0, [x19, #1624]
  4577bc:	cmp	w6, #0x1
  4577c0:	mov	x4, #0x0                   	// #0
  4577c4:	mov	w3, #0x0                   	// #0
  4577c8:	b.eq	457934 <_obstack_memory_used@@Base+0xd330>  // b.none
  4577cc:	nop
  4577d0:	ldrb	w0, [x2], #1
  4577d4:	and	x1, x0, #0x7f
  4577d8:	lsl	x1, x1, x3
  4577dc:	add	w3, w3, #0x7
  4577e0:	orr	x4, x4, x1
  4577e4:	tbnz	w0, #7, 4577d0 <_obstack_memory_used@@Base+0xd1cc>
  4577e8:	mov	w0, #0xffffffff            	// #-1
  4577ec:	str	x4, [x19, #1640]
  4577f0:	strb	w0, [x19, #1649]
  4577f4:	ldrb	w3, [x21]
  4577f8:	cmp	w3, #0x7a
  4577fc:	b.eq	457954 <_obstack_memory_used@@Base+0xd350>  // b.none
  457800:	mov	x24, #0x0                   	// #0
  457804:	cbz	w3, 457bec <_obstack_memory_used@@Base+0xd5e8>
  457808:	add	x21, x21, #0x1
  45780c:	add	x25, sp, #0x68
  457810:	mov	w26, #0x1                   	// #1
  457814:	b	45783c <_obstack_memory_used@@Base+0xd238>
  457818:	cmp	w3, #0x52
  45781c:	b.eq	457998 <_obstack_memory_used@@Base+0xd394>  // b.none
  457820:	cmp	w3, #0x50
  457824:	b.eq	4579a4 <_obstack_memory_used@@Base+0xd3a0>  // b.none
  457828:	cmp	w3, #0x53
  45782c:	b.ne	457a58 <_obstack_memory_used@@Base+0xd454>  // b.any
  457830:	strb	w26, [x19, #1651]
  457834:	ldrb	w3, [x21], #1
  457838:	cbz	w3, 457854 <_obstack_memory_used@@Base+0xd250>
  45783c:	cmp	w3, #0x4c
  457840:	b.ne	457818 <_obstack_memory_used@@Base+0xd214>  // b.any
  457844:	ldrb	w0, [x2], #1
  457848:	strb	w0, [x19, #1649]
  45784c:	ldrb	w3, [x21], #1
  457850:	cbnz	w3, 45783c <_obstack_memory_used@@Base+0xd238>
  457854:	cbz	x24, 457a54 <_obstack_memory_used@@Base+0xd450>
  457858:	ldr	w1, [x23]
  45785c:	mov	x0, x24
  457860:	mov	x3, x19
  457864:	mov	x2, x20
  457868:	add	x1, x1, #0x4
  45786c:	add	x1, x23, x1
  457870:	bl	456d98 <_obstack_memory_used@@Base+0xc794>
  457874:	ldrb	w0, [x19, #1648]
  457878:	cmp	w0, #0xff
  45787c:	b.eq	457b80 <_obstack_memory_used@@Base+0xd57c>  // b.none
  457880:	and	w0, w0, #0x7
  457884:	cmp	w0, #0x2
  457888:	b.eq	457b78 <_obstack_memory_used@@Base+0xd574>  // b.none
  45788c:	b.ls	4579ec <_obstack_memory_used@@Base+0xd3e8>  // b.plast
  457890:	cmp	w0, #0x3
  457894:	mov	x21, #0x10                  	// #16
  457898:	b.ne	4579dc <_obstack_memory_used@@Base+0xd3d8>  // b.any
  45789c:	ldrb	w0, [x19, #1650]
  4578a0:	add	x21, x22, x21
  4578a4:	ldrb	w24, [x19, #1649]
  4578a8:	cbz	w0, 457a04 <_obstack_memory_used@@Base+0xd400>
  4578ac:	mov	x0, #0x0                   	// #0
  4578b0:	mov	w2, #0x0                   	// #0
  4578b4:	nop
  4578b8:	ldrb	w3, [x21], #1
  4578bc:	and	x1, x3, #0x7f
  4578c0:	lsl	x1, x1, x2
  4578c4:	add	w2, w2, #0x7
  4578c8:	orr	x0, x0, x1
  4578cc:	tbnz	w3, #7, 4578b8 <_obstack_memory_used@@Base+0xd2b4>
  4578d0:	add	x23, x21, x0
  4578d4:	cmp	w24, #0xff
  4578d8:	b.ne	457a7c <_obstack_memory_used@@Base+0xd478>  // b.any
  4578dc:	ldr	w1, [x22]
  4578e0:	mov	x0, x23
  4578e4:	mov	x3, x19
  4578e8:	mov	x2, x20
  4578ec:	add	x1, x1, #0x4
  4578f0:	add	x1, x22, x1
  4578f4:	bl	456d98 <_obstack_memory_used@@Base+0xc794>
  4578f8:	ldp	x21, x22, [sp, #32]
  4578fc:	mov	w0, #0x0                   	// #0
  457900:	ldp	x23, x24, [sp, #48]
  457904:	ldp	x25, x26, [sp, #64]
  457908:	ldp	x27, x28, [sp, #80]
  45790c:	ldp	x19, x20, [sp, #16]
  457910:	ldp	x29, x30, [sp], #112
  457914:	ret
  457918:	ldrb	w0, [x23, #10]
  45791c:	cmp	w0, #0x68
  457920:	b.ne	457730 <_obstack_memory_used@@Base+0xd12c>  // b.any
  457924:	ldr	x0, [x2], #8
  457928:	add	x21, x23, #0xb
  45792c:	str	x0, [x19, #1656]
  457930:	b	457730 <_obstack_memory_used@@Base+0xd12c>
  457934:	ldrb	w0, [x2]
  457938:	add	x2, x5, #0x2
  45793c:	str	x0, [x19, #1640]
  457940:	mov	w0, #0xffffffff            	// #-1
  457944:	strb	w0, [x19, #1649]
  457948:	ldrb	w3, [x21]
  45794c:	cmp	w3, #0x7a
  457950:	b.ne	457800 <_obstack_memory_used@@Base+0xd1fc>  // b.any
  457954:	mov	x0, #0x0                   	// #0
  457958:	mov	w3, #0x0                   	// #0
  45795c:	nop
  457960:	ldrb	w4, [x2], #1
  457964:	and	x1, x4, #0x7f
  457968:	lsl	x1, x1, x3
  45796c:	add	w3, w3, #0x7
  457970:	orr	x0, x0, x1
  457974:	tbnz	w4, #7, 457960 <_obstack_memory_used@@Base+0xd35c>
  457978:	mov	w1, #0x1                   	// #1
  45797c:	strb	w1, [x19, #1650]
  457980:	add	x24, x2, x0
  457984:	add	x0, x21, #0x1
  457988:	ldrb	w3, [x21, #1]
  45798c:	cbz	w3, 457858 <_obstack_memory_used@@Base+0xd254>
  457990:	mov	x21, x0
  457994:	b	457808 <_obstack_memory_used@@Base+0xd204>
  457998:	ldrb	w0, [x2], #1
  45799c:	strb	w0, [x19, #1648]
  4579a0:	b	457834 <_obstack_memory_used@@Base+0xd230>
  4579a4:	mov	x27, x2
  4579a8:	mov	x1, x20
  4579ac:	ldrb	w28, [x27], #1
  4579b0:	mov	w0, w28
  4579b4:	bl	456d20 <_obstack_memory_used@@Base+0xc71c>
  4579b8:	mov	x2, x27
  4579bc:	mov	x1, x0
  4579c0:	mov	x3, x25
  4579c4:	mov	w0, w28
  4579c8:	bl	456bc0 <_obstack_memory_used@@Base+0xc5bc>
  4579cc:	mov	x2, x0
  4579d0:	ldr	x1, [sp, #104]
  4579d4:	str	x1, [x19, #1616]
  4579d8:	b	457834 <_obstack_memory_used@@Base+0xd230>
  4579dc:	cmp	w0, #0x4
  4579e0:	mov	x21, #0x18                  	// #24
  4579e4:	b.eq	45789c <_obstack_memory_used@@Base+0xd298>  // b.none
  4579e8:	bl	4027f0 <abort@plt>
  4579ec:	mov	x21, #0x18                  	// #24
  4579f0:	cbnz	w0, 4579e8 <_obstack_memory_used@@Base+0xd3e4>
  4579f4:	ldrb	w0, [x19, #1650]
  4579f8:	add	x21, x22, x21
  4579fc:	ldrb	w24, [x19, #1649]
  457a00:	cbnz	w0, 4578ac <_obstack_memory_used@@Base+0xd2a8>
  457a04:	mov	x23, x21
  457a08:	cmp	w24, #0xff
  457a0c:	b.eq	4578dc <_obstack_memory_used@@Base+0xd2d8>  // b.none
  457a10:	mov	x1, x20
  457a14:	mov	w0, w24
  457a18:	bl	456d20 <_obstack_memory_used@@Base+0xc71c>
  457a1c:	mov	x1, x0
  457a20:	mov	x2, x21
  457a24:	mov	w0, w24
  457a28:	add	x3, sp, #0x68
  457a2c:	bl	456bc0 <_obstack_memory_used@@Base+0xc5bc>
  457a30:	ldr	x1, [sp, #104]
  457a34:	mov	x23, x0
  457a38:	str	x1, [x20, #800]
  457a3c:	b	4578dc <_obstack_memory_used@@Base+0xd2d8>
  457a40:	ldp	x21, x22, [sp, #32]
  457a44:	mov	w0, #0x5                   	// #5
  457a48:	ldp	x19, x20, [sp, #16]
  457a4c:	ldp	x29, x30, [sp], #112
  457a50:	ret
  457a54:	mov	x24, x2
  457a58:	cbnz	x24, 457858 <_obstack_memory_used@@Base+0xd254>
  457a5c:	ldp	x25, x26, [sp, #64]
  457a60:	ldp	x27, x28, [sp, #80]
  457a64:	mov	w0, #0x3                   	// #3
  457a68:	ldp	x19, x20, [sp, #16]
  457a6c:	ldp	x21, x22, [sp, #32]
  457a70:	ldp	x23, x24, [sp, #48]
  457a74:	ldp	x29, x30, [sp], #112
  457a78:	ret
  457a7c:	mov	x1, x20
  457a80:	mov	w0, w24
  457a84:	bl	456d20 <_obstack_memory_used@@Base+0xc71c>
  457a88:	mov	x1, x0
  457a8c:	mov	x2, x21
  457a90:	mov	w0, w24
  457a94:	add	x3, sp, #0x68
  457a98:	bl	456bc0 <_obstack_memory_used@@Base+0xc5bc>
  457a9c:	ldr	x0, [sp, #104]
  457aa0:	str	x0, [x20, #800]
  457aa4:	b	4578dc <_obstack_memory_used@@Base+0xd2d8>
  457aa8:	ldr	x0, [x20, #792]
  457aac:	mov	w1, #0x1168                	// #4456
  457ab0:	movk	w1, #0xd280, lsl #16
  457ab4:	ldr	w2, [x0]
  457ab8:	cmp	w2, w1
  457abc:	b.ne	457a40 <_obstack_memory_used@@Base+0xd43c>  // b.any
  457ac0:	ldr	w1, [x0, #4]
  457ac4:	mov	w0, #0x1                   	// #1
  457ac8:	movk	w0, #0xd400, lsl #16
  457acc:	cmp	w1, w0
  457ad0:	b.ne	457a40 <_obstack_memory_used@@Base+0xd43c>  // b.any
  457ad4:	ldr	x6, [x20, #784]
  457ad8:	mov	w3, #0x1                   	// #1
  457adc:	mov	x1, x19
  457ae0:	mov	w2, w3
  457ae4:	add	x8, x6, #0x130
  457ae8:	mov	x4, #0x1f                  	// #31
  457aec:	mov	x5, #0x130                 	// #304
  457af0:	mov	x0, #0x8                   	// #8
  457af4:	str	x5, [x19, #1576]
  457af8:	str	x4, [x19, #1584]
  457afc:	str	w3, [x19, #1600]
  457b00:	str	w2, [x1, #8]
  457b04:	str	x0, [x1], #16
  457b08:	add	x0, x0, #0x8
  457b0c:	cmp	x0, #0x100
  457b10:	b.ne	457b00 <_obstack_memory_used@@Base+0xd4fc>  // b.any
  457b14:	ldr	w0, [x6, #592]
  457b18:	add	x5, x6, #0x250
  457b1c:	cbz	w0, 457bac <_obstack_memory_used@@Base+0xd5a8>
  457b20:	mov	w7, #0x8001                	// #32769
  457b24:	add	x4, x19, #0x600
  457b28:	add	x9, x6, x19
  457b2c:	movk	w7, #0x4650, lsl #16
  457b30:	mov	w3, #0x1                   	// #1
  457b34:	b	457b48 <_obstack_memory_used@@Base+0xd544>
  457b38:	ldr	w0, [x5, #4]
  457b3c:	add	x5, x5, x0
  457b40:	ldr	w0, [x5]
  457b44:	cbz	w0, 457bac <_obstack_memory_used@@Base+0xd5a8>
  457b48:	cmp	w0, w7
  457b4c:	b.ne	457b38 <_obstack_memory_used@@Base+0xd534>  // b.any
  457b50:	sub	x2, x5, #0x520
  457b54:	add	x0, x19, #0x400
  457b58:	sub	x2, x2, x9
  457b5c:	nop
  457b60:	str	w3, [x0, #8]
  457b64:	add	x1, x2, x0
  457b68:	str	x1, [x0], #16
  457b6c:	cmp	x4, x0
  457b70:	b.ne	457b60 <_obstack_memory_used@@Base+0xd55c>  // b.any
  457b74:	b	457b38 <_obstack_memory_used@@Base+0xd534>
  457b78:	mov	x21, #0xc                   	// #12
  457b7c:	b	45789c <_obstack_memory_used@@Base+0xd298>
  457b80:	mov	x21, #0x8                   	// #8
  457b84:	b	45789c <_obstack_memory_used@@Base+0xd298>
  457b88:	cmp	w3, #0x8
  457b8c:	b.ne	457a64 <_obstack_memory_used@@Base+0xd460>  // b.any
  457b90:	ldrb	w0, [x2, #1]
  457b94:	cbnz	w0, 457a64 <_obstack_memory_used@@Base+0xd460>
  457b98:	stp	x25, x26, [sp, #64]
  457b9c:	add	x2, x2, #0x2
  457ba0:	stp	x27, x28, [sp, #80]
  457ba4:	ldrb	w3, [x2]
  457ba8:	b	457748 <_obstack_memory_used@@Base+0xd144>
  457bac:	mov	w3, #0x1                   	// #1
  457bb0:	strb	w3, [x19, #1651]
  457bb4:	add	x1, x6, #0x230
  457bb8:	mov	w5, #0x4                   	// #4
  457bbc:	ldr	x2, [x8, #264]
  457bc0:	sub	x1, x1, x8
  457bc4:	mov	x4, #0x60                  	// #96
  457bc8:	mov	w0, #0x0                   	// #0
  457bcc:	sub	x8, x2, x8
  457bd0:	ldp	x21, x22, [sp, #32]
  457bd4:	str	x1, [x19, #496]
  457bd8:	str	w3, [x19, #504]
  457bdc:	str	x8, [x19, #1536]
  457be0:	str	w5, [x19, #1544]
  457be4:	str	x4, [x19, #1640]
  457be8:	b	45790c <_obstack_memory_used@@Base+0xd308>
  457bec:	mov	x24, x2
  457bf0:	b	457858 <_obstack_memory_used@@Base+0xd254>
  457bf4:	nop
  457bf8:	stp	x29, x30, [sp, #-80]!
  457bfc:	mov	x29, sp
  457c00:	stp	x21, x22, [sp, #32]
  457c04:	mov	x21, x0
  457c08:	ldr	x0, [x1, #832]
  457c0c:	stp	x19, x20, [sp, #16]
  457c10:	mov	x20, x1
  457c14:	stp	x23, x24, [sp, #48]
  457c18:	tbz	x0, #62, 457c24 <_obstack_memory_used@@Base+0xd620>
  457c1c:	ldrb	w1, [x1, #887]
  457c20:	cbnz	w1, 457c2c <_obstack_memory_used@@Base+0xd628>
  457c24:	ldr	x1, [x20, #248]
  457c28:	cbz	x1, 457ce8 <_obstack_memory_used@@Base+0xd6e4>
  457c2c:	adrp	x24, 48e000 <__environ@@GLIBC_2.17+0xa68>
  457c30:	add	x23, x21, #0x358
  457c34:	add	x24, x24, #0xb08
  457c38:	add	x22, x20, #0x358
  457c3c:	mov	x19, #0x0                   	// #0
  457c40:	b	457c64 <_obstack_memory_used@@Base+0xd660>
  457c44:	cbz	x0, 457c58 <_obstack_memory_used@@Base+0xd654>
  457c48:	ldrb	w2, [x19, x24]
  457c4c:	cmp	w2, #0x8
  457c50:	b.ne	457d54 <_obstack_memory_used@@Base+0xd750>  // b.any
  457c54:	str	x1, [x0]
  457c58:	add	x19, x19, #0x1
  457c5c:	cmp	x19, #0x61
  457c60:	b.eq	457ca0 <_obstack_memory_used@@Base+0xd69c>  // b.none
  457c64:	ldrb	w2, [x23, x19]
  457c68:	ldr	x0, [x21, x19, lsl #3]
  457c6c:	ldr	x1, [x20, x19, lsl #3]
  457c70:	cbnz	w2, 457d54 <_obstack_memory_used@@Base+0xd750>
  457c74:	ldrb	w2, [x22, x19]
  457c78:	cbnz	w2, 457c44 <_obstack_memory_used@@Base+0xd640>
  457c7c:	cmp	x1, #0x0
  457c80:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  457c84:	ccmp	x0, x1, #0x4, ne  // ne = any
  457c88:	b.eq	457c58 <_obstack_memory_used@@Base+0xd654>  // b.none
  457c8c:	ldrb	w2, [x24, x19]
  457c90:	add	x19, x19, #0x1
  457c94:	bl	402490 <memcpy@plt>
  457c98:	cmp	x19, #0x61
  457c9c:	b.ne	457c64 <_obstack_memory_used@@Base+0xd660>  // b.any
  457ca0:	ldr	x0, [x21, #832]
  457ca4:	tbz	x0, #62, 457cb0 <_obstack_memory_used@@Base+0xd6ac>
  457ca8:	ldrb	w0, [x21, #887]
  457cac:	cbnz	w0, 457cd0 <_obstack_memory_used@@Base+0xd6cc>
  457cb0:	ldr	x1, [x21, #248]
  457cb4:	mov	x0, #0x0                   	// #0
  457cb8:	cbz	x1, 457d14 <_obstack_memory_used@@Base+0xd710>
  457cbc:	ldp	x19, x20, [sp, #16]
  457cc0:	ldp	x21, x22, [sp, #32]
  457cc4:	ldp	x23, x24, [sp, #48]
  457cc8:	ldp	x29, x30, [sp], #80
  457ccc:	ret
  457cd0:	mov	x0, #0x0                   	// #0
  457cd4:	ldp	x19, x20, [sp, #16]
  457cd8:	ldp	x21, x22, [sp, #32]
  457cdc:	ldp	x23, x24, [sp, #48]
  457ce0:	ldp	x29, x30, [sp], #80
  457ce4:	ret
  457ce8:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  457cec:	ldr	x2, [x20, #784]
  457cf0:	ldrb	w1, [x1, #2855]
  457cf4:	cmp	w1, #0x8
  457cf8:	b.ne	457d54 <_obstack_memory_used@@Base+0xd750>  // b.any
  457cfc:	str	x2, [sp, #72]
  457d00:	tbz	x0, #62, 457d08 <_obstack_memory_used@@Base+0xd704>
  457d04:	strb	wzr, [x20, #887]
  457d08:	add	x0, sp, #0x48
  457d0c:	str	x0, [x20, #248]
  457d10:	b	457c2c <_obstack_memory_used@@Base+0xd628>
  457d14:	ldr	x1, [x20, #832]
  457d18:	ldr	x0, [x20, #248]
  457d1c:	tbnz	x1, #62, 457d48 <_obstack_memory_used@@Base+0xd744>
  457d20:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  457d24:	ldrb	w1, [x1, #2855]
  457d28:	cmp	w1, #0x8
  457d2c:	b.ne	457d54 <_obstack_memory_used@@Base+0xd750>  // b.any
  457d30:	ldr	x0, [x0]
  457d34:	ldr	x2, [x21, #784]
  457d38:	ldr	x1, [x20, #848]
  457d3c:	sub	x0, x0, x2
  457d40:	add	x0, x0, x1
  457d44:	b	457cbc <_obstack_memory_used@@Base+0xd6b8>
  457d48:	ldrb	w1, [x20, #887]
  457d4c:	cbz	w1, 457d20 <_obstack_memory_used@@Base+0xd71c>
  457d50:	b	457d34 <_obstack_memory_used@@Base+0xd730>
  457d54:	bl	4027f0 <abort@plt>
  457d58:	sub	sp, sp, #0x260
  457d5c:	cmp	x0, x1
  457d60:	stp	x29, x30, [sp]
  457d64:	mov	x29, sp
  457d68:	str	x3, [sp, #96]
  457d6c:	b.cs	4581c4 <_obstack_memory_used@@Base+0xdbc0>  // b.hs, b.nlast
  457d70:	stp	x19, x20, [sp, #16]
  457d74:	mov	x19, x0
  457d78:	mov	w20, #0x1                   	// #1
  457d7c:	stp	x21, x22, [sp, #32]
  457d80:	mov	x21, x1
  457d84:	add	x22, sp, #0x60
  457d88:	stp	x23, x24, [sp, #48]
  457d8c:	adrp	x23, 46b000 <_obstack_memory_used@@Base+0x209fc>
  457d90:	mov	x24, x2
  457d94:	add	x23, x23, #0x67c
  457d98:	stp	x25, x26, [sp, #64]
  457d9c:	adrp	x25, 46b000 <_obstack_memory_used@@Base+0x209fc>
  457da0:	add	x25, x25, #0x85c
  457da4:	nop
  457da8:	mov	x4, x19
  457dac:	ldrb	w5, [x4], #1
  457db0:	sub	w0, w5, #0x3
  457db4:	cmp	w0, #0xee
  457db8:	b.ls	457dc0 <_obstack_memory_used@@Base+0xd7bc>  // b.plast
  457dbc:	bl	4027f0 <abort@plt>
  457dc0:	ldrh	w0, [x23, w0, uxtw #1]
  457dc4:	adr	x1, 457dd0 <_obstack_memory_used@@Base+0xd7cc>
  457dc8:	add	x0, x1, w0, sxth #2
  457dcc:	br	x0
  457dd0:	mov	x3, #0x0                   	// #0
  457dd4:	mov	w1, #0x0                   	// #0
  457dd8:	ldrb	w2, [x4], #1
  457ddc:	and	x0, x2, #0x7f
  457de0:	lsl	x0, x0, x1
  457de4:	add	w1, w1, #0x7
  457de8:	orr	x3, x3, x0
  457dec:	tbnz	w2, #7, 457dd8 <_obstack_memory_used@@Base+0xd7d4>
  457df0:	cmp	w1, #0x3f
  457df4:	b.ls	458158 <_obstack_memory_used@@Base+0xdb54>  // b.plast
  457df8:	sub	w5, w5, #0x70
  457dfc:	cmp	w5, #0x61
  457e00:	b.gt	457dbc <_obstack_memory_used@@Base+0xd7b8>
  457e04:	ldr	x2, [x24, #832]
  457e08:	sxtw	x1, w5
  457e0c:	ldr	x0, [x24, x1, lsl #3]
  457e10:	tbz	x2, #62, 457e20 <_obstack_memory_used@@Base+0xd81c>
  457e14:	add	x1, x24, x1
  457e18:	ldrb	w1, [x1, #856]
  457e1c:	cbnz	w1, 457e40 <_obstack_memory_used@@Base+0xd83c>
  457e20:	cmp	w5, #0x2e
  457e24:	b.eq	4581b8 <_obstack_memory_used@@Base+0xdbb4>  // b.none
  457e28:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  457e2c:	add	x1, x1, #0xb08
  457e30:	ldrb	w1, [x1, w5, sxtw]
  457e34:	cmp	w1, #0x8
  457e38:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  457e3c:	ldr	x0, [x0]
  457e40:	add	x0, x3, x0
  457e44:	mov	w3, w20
  457e48:	mov	x19, x4
  457e4c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  457e50:	mov	w3, w20
  457e54:	add	x19, x19, #0x9
  457e58:	ldur	x0, [x19, #-8]
  457e5c:	nop
  457e60:	cmp	w3, #0x3f
  457e64:	b.gt	457dbc <_obstack_memory_used@@Base+0xd7b8>
  457e68:	add	w20, w3, #0x1
  457e6c:	str	x0, [x22, w3, sxtw #3]
  457e70:	cmp	x21, x19
  457e74:	b.hi	457da8 <_obstack_memory_used@@Base+0xd7a4>  // b.pmore
  457e78:	cbz	w20, 457dbc <_obstack_memory_used@@Base+0xd7b8>
  457e7c:	sub	w20, w20, #0x1
  457e80:	add	x0, sp, #0x60
  457e84:	ldp	x29, x30, [sp]
  457e88:	ldr	x0, [x0, w20, sxtw #3]
  457e8c:	ldp	x19, x20, [sp, #16]
  457e90:	ldp	x21, x22, [sp, #32]
  457e94:	ldp	x23, x24, [sp, #48]
  457e98:	ldp	x25, x26, [sp, #64]
  457e9c:	add	sp, sp, #0x260
  457ea0:	ret
  457ea4:	sub	w5, w5, #0x50
  457ea8:	cmp	w5, #0x61
  457eac:	b.gt	457dbc <_obstack_memory_used@@Base+0xd7b8>
  457eb0:	ldr	x2, [x24, #832]
  457eb4:	sxtw	x1, w5
  457eb8:	ldr	x0, [x24, x1, lsl #3]
  457ebc:	tbz	x2, #62, 457ecc <_obstack_memory_used@@Base+0xd8c8>
  457ec0:	add	x1, x24, x1
  457ec4:	ldrb	w1, [x1, #856]
  457ec8:	cbnz	w1, 457e44 <_obstack_memory_used@@Base+0xd840>
  457ecc:	cmp	w5, #0x2e
  457ed0:	b.eq	4581a4 <_obstack_memory_used@@Base+0xdba0>  // b.none
  457ed4:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  457ed8:	add	x1, x1, #0xb08
  457edc:	ldrb	w1, [x1, w5, sxtw]
  457ee0:	cmp	w1, #0x8
  457ee4:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  457ee8:	mov	w3, w20
  457eec:	mov	x19, x4
  457ef0:	ldr	x0, [x0]
  457ef4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  457ef8:	sub	w0, w5, #0x30
  457efc:	mov	w3, w20
  457f00:	mov	x19, x4
  457f04:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  457f08:	cmp	w20, #0x1
  457f0c:	b.le	457dbc <_obstack_memory_used@@Base+0xd7b8>
  457f10:	sub	w3, w20, #0x2
  457f14:	sub	w20, w20, #0x1
  457f18:	sub	w5, w5, #0x1a
  457f1c:	cmp	w5, #0x14
  457f20:	ldr	x1, [x22, w20, sxtw #3]
  457f24:	ldr	x0, [x22, w3, sxtw #3]
  457f28:	b.hi	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.pmore
  457f2c:	ldrh	w2, [x25, w5, uxtw #1]
  457f30:	adr	x5, 457f3c <_obstack_memory_used@@Base+0xd938>
  457f34:	add	x2, x5, w2, sxth #2
  457f38:	br	x2
  457f3c:	cbz	w20, 457dbc <_obstack_memory_used@@Base+0xd7b8>
  457f40:	sub	w3, w20, #0x1
  457f44:	cmp	w5, #0x20
  457f48:	ldr	x0, [x22, w3, sxtw #3]
  457f4c:	b.eq	4584a0 <_obstack_memory_used@@Base+0xde9c>  // b.none
  457f50:	b.hi	457f70 <_obstack_memory_used@@Base+0xd96c>  // b.pmore
  457f54:	cmp	w5, #0x19
  457f58:	b.eq	4581d4 <_obstack_memory_used@@Base+0xdbd0>  // b.none
  457f5c:	cmp	w5, #0x1f
  457f60:	b.ne	458144 <_obstack_memory_used@@Base+0xdb40>  // b.any
  457f64:	neg	x0, x0
  457f68:	mov	x19, x4
  457f6c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  457f70:	cmp	w5, #0x23
  457f74:	b.eq	458178 <_obstack_memory_used@@Base+0xdb74>  // b.none
  457f78:	cmp	w5, #0x94
  457f7c:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  457f80:	ldrb	w1, [x19, #1]
  457f84:	add	x19, x19, #0x2
  457f88:	cmp	w1, #0x4
  457f8c:	b.eq	458390 <_obstack_memory_used@@Base+0xdd8c>  // b.none
  457f90:	b.hi	4584bc <_obstack_memory_used@@Base+0xdeb8>  // b.pmore
  457f94:	cmp	w1, #0x1
  457f98:	b.ne	4584ac <_obstack_memory_used@@Base+0xdea8>  // b.any
  457f9c:	ldrb	w0, [x0]
  457fa0:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  457fa4:	cmp	w20, #0x2
  457fa8:	b.le	457dbc <_obstack_memory_used@@Base+0xd7b8>
  457fac:	sub	w1, w20, #0x2
  457fb0:	sub	w2, w20, #0x1
  457fb4:	sub	w0, w20, #0x3
  457fb8:	mov	x19, x4
  457fbc:	sxtw	x1, w1
  457fc0:	sxtw	x2, w2
  457fc4:	sxtw	x0, w0
  457fc8:	ldr	x5, [x22, x1, lsl #3]
  457fcc:	ldr	x3, [x22, x2, lsl #3]
  457fd0:	ldr	x4, [x22, x0, lsl #3]
  457fd4:	str	x5, [x22, x2, lsl #3]
  457fd8:	str	x4, [x22, x1, lsl #3]
  457fdc:	str	x3, [x22, x0, lsl #3]
  457fe0:	b	457e70 <_obstack_memory_used@@Base+0xd86c>
  457fe4:	cmp	w20, #0x1
  457fe8:	b.le	457dbc <_obstack_memory_used@@Base+0xd7b8>
  457fec:	sub	w0, w20, #0x2
  457ff0:	sub	w1, w20, #0x1
  457ff4:	mov	x19, x4
  457ff8:	sxtw	x0, w0
  457ffc:	sxtw	x1, w1
  458000:	ldr	x3, [x22, x0, lsl #3]
  458004:	ldr	x2, [x22, x1, lsl #3]
  458008:	str	x3, [x22, x1, lsl #3]
  45800c:	str	x2, [x22, x0, lsl #3]
  458010:	b	457e70 <_obstack_memory_used@@Base+0xd86c>
  458014:	ldrb	w3, [x19, #1]
  458018:	sub	w1, w20, #0x1
  45801c:	add	x19, x19, #0x2
  458020:	sxtw	x2, w1
  458024:	cmp	x3, w1, sxtw
  458028:	b.ge	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.tcont
  45802c:	sub	x1, x2, x3
  458030:	mov	w3, w20
  458034:	ldr	x0, [x22, x1, lsl #3]
  458038:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  45803c:	cmp	w20, #0x1
  458040:	b.le	457dbc <_obstack_memory_used@@Base+0xd7b8>
  458044:	sub	w0, w20, #0x2
  458048:	mov	x19, x4
  45804c:	mov	w3, w20
  458050:	ldr	x0, [x22, w0, sxtw #3]
  458054:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458058:	cbz	w20, 457dbc <_obstack_memory_used@@Base+0xd7b8>
  45805c:	sub	w20, w20, #0x1
  458060:	mov	x19, x4
  458064:	b	457e70 <_obstack_memory_used@@Base+0xd86c>
  458068:	cbz	w20, 457dbc <_obstack_memory_used@@Base+0xd7b8>
  45806c:	sub	w0, w20, #0x1
  458070:	mov	x19, x4
  458074:	mov	w3, w20
  458078:	ldr	x0, [x22, w0, sxtw #3]
  45807c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458080:	ldursh	x1, [x19, #1]
  458084:	add	x19, x19, #0x3
  458088:	add	x19, x19, x1
  45808c:	b	457e70 <_obstack_memory_used@@Base+0xd86c>
  458090:	ldrb	w0, [x19, #1]
  458094:	mov	w3, w20
  458098:	add	x19, x19, #0x2
  45809c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4580a0:	ldrb	w26, [x19, #1]
  4580a4:	mov	x1, x24
  4580a8:	mov	w0, w26
  4580ac:	bl	456d20 <_obstack_memory_used@@Base+0xc71c>
  4580b0:	add	x2, x19, #0x2
  4580b4:	mov	x1, x0
  4580b8:	add	x3, sp, #0x58
  4580bc:	mov	w0, w26
  4580c0:	bl	456bc0 <_obstack_memory_used@@Base+0xc5bc>
  4580c4:	mov	x19, x0
  4580c8:	mov	w3, w20
  4580cc:	ldr	x0, [sp, #88]
  4580d0:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4580d4:	cbz	w20, 457dbc <_obstack_memory_used@@Base+0xd7b8>
  4580d8:	sub	w20, w20, #0x1
  4580dc:	add	x1, x19, #0x3
  4580e0:	ldr	x0, [x22, w20, sxtw #3]
  4580e4:	cbz	x0, 458170 <_obstack_memory_used@@Base+0xdb6c>
  4580e8:	ldursh	x19, [x19, #1]
  4580ec:	add	x19, x1, x19
  4580f0:	b	457e70 <_obstack_memory_used@@Base+0xd86c>
  4580f4:	ldursw	x0, [x19, #1]
  4580f8:	mov	w3, w20
  4580fc:	add	x19, x19, #0x5
  458100:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458104:	ldur	w0, [x19, #1]
  458108:	mov	w3, w20
  45810c:	add	x19, x19, #0x5
  458110:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458114:	ldursh	x0, [x19, #1]
  458118:	mov	w3, w20
  45811c:	add	x19, x19, #0x3
  458120:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458124:	ldurh	w0, [x19, #1]
  458128:	mov	w3, w20
  45812c:	add	x19, x19, #0x3
  458130:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458134:	ldrsb	x0, [x19, #1]
  458138:	mov	w3, w20
  45813c:	add	x19, x19, #0x2
  458140:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458144:	cmp	w5, #0x6
  458148:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  45814c:	mov	x19, x4
  458150:	ldr	x0, [x0]
  458154:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458158:	mov	x0, #0xffffffffffffffff    	// #-1
  45815c:	tst	x2, #0x40
  458160:	lsl	x0, x0, x1
  458164:	orr	x0, x3, x0
  458168:	csel	x3, x0, x3, ne  // ne = any
  45816c:	b	457df8 <_obstack_memory_used@@Base+0xd7f4>
  458170:	mov	x19, x1
  458174:	b	457e70 <_obstack_memory_used@@Base+0xd86c>
  458178:	mov	x6, #0x0                   	// #0
  45817c:	mov	w2, #0x0                   	// #0
  458180:	ldrb	w5, [x4], #1
  458184:	and	x1, x5, #0x7f
  458188:	lsl	x1, x1, x2
  45818c:	add	w2, w2, #0x7
  458190:	orr	x6, x6, x1
  458194:	tbnz	w5, #7, 458180 <_obstack_memory_used@@Base+0xdb7c>
  458198:	add	x0, x0, x6
  45819c:	mov	x19, x4
  4581a0:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4581a4:	cntd	x0
  4581a8:	mov	w3, w20
  4581ac:	mov	x19, x4
  4581b0:	sxtw	x0, w0
  4581b4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4581b8:	cntd	x0
  4581bc:	sxtw	x0, w0
  4581c0:	b	457e40 <_obstack_memory_used@@Base+0xd83c>
  4581c4:	mov	x0, x3
  4581c8:	ldp	x29, x30, [sp]
  4581cc:	add	sp, sp, #0x260
  4581d0:	ret
  4581d4:	cmp	x0, #0x0
  4581d8:	mov	x19, x4
  4581dc:	cneg	x0, x0, lt  // lt = tstop
  4581e0:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4581e4:	mov	x19, x4
  4581e8:	mov	w1, #0x0                   	// #0
  4581ec:	mov	x4, #0x0                   	// #0
  4581f0:	ldrb	w2, [x19], #1
  4581f4:	and	x0, x2, #0x7f
  4581f8:	lsl	x0, x0, x1
  4581fc:	add	w1, w1, #0x7
  458200:	orr	x4, x4, x0
  458204:	tbnz	w2, #7, 4581f0 <_obstack_memory_used@@Base+0xdbec>
  458208:	mov	x3, #0x0                   	// #0
  45820c:	mov	w1, #0x0                   	// #0
  458210:	ldrb	w2, [x19], #1
  458214:	and	x0, x2, #0x7f
  458218:	lsl	x0, x0, x1
  45821c:	add	w1, w1, #0x7
  458220:	orr	x3, x3, x0
  458224:	tbnz	w2, #7, 458210 <_obstack_memory_used@@Base+0xdc0c>
  458228:	cmp	w1, #0x3f
  45822c:	b.hi	458244 <_obstack_memory_used@@Base+0xdc40>  // b.pmore
  458230:	mov	x0, #0xffffffffffffffff    	// #-1
  458234:	tst	x2, #0x40
  458238:	lsl	x0, x0, x1
  45823c:	orr	x0, x3, x0
  458240:	csel	x3, x0, x3, ne  // ne = any
  458244:	cmp	w4, #0x61
  458248:	mov	w1, w4
  45824c:	b.gt	457dbc <_obstack_memory_used@@Base+0xd7b8>
  458250:	ldr	x2, [x24, #832]
  458254:	sxtw	x4, w4
  458258:	ldr	x0, [x24, x4, lsl #3]
  45825c:	tbz	x2, #62, 45826c <_obstack_memory_used@@Base+0xdc68>
  458260:	add	x4, x24, x4
  458264:	ldrb	w2, [x4, #856]
  458268:	cbnz	w2, 45828c <_obstack_memory_used@@Base+0xdc88>
  45826c:	cmp	w1, #0x2e
  458270:	b.eq	458480 <_obstack_memory_used@@Base+0xde7c>  // b.none
  458274:	adrp	x2, 48e000 <__environ@@GLIBC_2.17+0xa68>
  458278:	add	x2, x2, #0xb08
  45827c:	ldrb	w1, [x2, w1, sxtw]
  458280:	cmp	w1, #0x8
  458284:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  458288:	ldr	x0, [x0]
  45828c:	add	x0, x3, x0
  458290:	mov	w3, w20
  458294:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458298:	mov	x19, x4
  45829c:	mov	x0, #0x0                   	// #0
  4582a0:	mov	w2, #0x0                   	// #0
  4582a4:	nop
  4582a8:	ldrb	w4, [x19], #1
  4582ac:	and	x1, x4, #0x7f
  4582b0:	lsl	x1, x1, x2
  4582b4:	add	w2, w2, #0x7
  4582b8:	orr	x0, x0, x1
  4582bc:	tbnz	w4, #7, 4582a8 <_obstack_memory_used@@Base+0xdca4>
  4582c0:	mov	w3, w20
  4582c4:	cmp	w2, #0x3f
  4582c8:	b.hi	457e60 <_obstack_memory_used@@Base+0xd85c>  // b.pmore
  4582cc:	tbz	w4, #6, 457e60 <_obstack_memory_used@@Base+0xd85c>
  4582d0:	mov	x1, #0xffffffffffffffff    	// #-1
  4582d4:	lsl	x2, x1, x2
  4582d8:	orr	x0, x0, x2
  4582dc:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4582e0:	mov	x19, x4
  4582e4:	mov	x0, #0x0                   	// #0
  4582e8:	mov	w2, #0x0                   	// #0
  4582ec:	nop
  4582f0:	ldrb	w3, [x19], #1
  4582f4:	and	x1, x3, #0x7f
  4582f8:	lsl	x1, x1, x2
  4582fc:	add	w2, w2, #0x7
  458300:	orr	x0, x0, x1
  458304:	tbnz	w3, #7, 4582f0 <_obstack_memory_used@@Base+0xdcec>
  458308:	mov	w3, w20
  45830c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458310:	mov	x19, x4
  458314:	mov	x3, #0x0                   	// #0
  458318:	mov	w1, #0x0                   	// #0
  45831c:	nop
  458320:	ldrb	w2, [x19], #1
  458324:	and	x0, x2, #0x7f
  458328:	lsl	x0, x0, x1
  45832c:	add	w1, w1, #0x7
  458330:	orr	x3, x3, x0
  458334:	tbnz	w2, #7, 458320 <_obstack_memory_used@@Base+0xdd1c>
  458338:	cmp	w3, #0x61
  45833c:	mov	w1, w3
  458340:	b.gt	457dbc <_obstack_memory_used@@Base+0xd7b8>
  458344:	ldr	x2, [x24, #832]
  458348:	sxtw	x3, w3
  45834c:	ldr	x0, [x24, x3, lsl #3]
  458350:	tbz	x2, #62, 458360 <_obstack_memory_used@@Base+0xdd5c>
  458354:	add	x3, x24, x3
  458358:	ldrb	w2, [x3, #856]
  45835c:	cbnz	w2, 458290 <_obstack_memory_used@@Base+0xdc8c>
  458360:	cmp	w1, #0x2e
  458364:	b.eq	458490 <_obstack_memory_used@@Base+0xde8c>  // b.none
  458368:	adrp	x2, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45836c:	add	x2, x2, #0xb08
  458370:	ldrb	w1, [x2, w1, sxtw]
  458374:	cmp	w1, #0x8
  458378:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  45837c:	mov	w3, w20
  458380:	ldr	x0, [x0]
  458384:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458388:	mov	x19, x4
  45838c:	b	457e70 <_obstack_memory_used@@Base+0xd86c>
  458390:	ldr	w0, [x0]
  458394:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458398:	cmp	x0, x1
  45839c:	mov	x19, x4
  4583a0:	cset	x0, ne  // ne = any
  4583a4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4583a8:	cmp	x0, x1
  4583ac:	mov	x19, x4
  4583b0:	cset	x0, lt  // lt = tstop
  4583b4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4583b8:	cmp	x0, x1
  4583bc:	mov	x19, x4
  4583c0:	cset	x0, le
  4583c4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4583c8:	cmp	x0, x1
  4583cc:	mov	x19, x4
  4583d0:	cset	x0, gt
  4583d4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4583d8:	cmp	x0, x1
  4583dc:	mov	x19, x4
  4583e0:	cset	x0, ge  // ge = tcont
  4583e4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4583e8:	cmp	x0, x1
  4583ec:	mov	x19, x4
  4583f0:	cset	x0, eq  // eq = none
  4583f4:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4583f8:	eor	x0, x0, x1
  4583fc:	mov	x19, x4
  458400:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458404:	mov	x19, x4
  458408:	asr	x0, x0, x1
  45840c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458410:	mov	x19, x4
  458414:	lsr	x0, x0, x1
  458418:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  45841c:	mov	x19, x4
  458420:	lsl	x0, x0, x1
  458424:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458428:	add	x0, x0, x1
  45842c:	mov	x19, x4
  458430:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458434:	orr	x0, x0, x1
  458438:	mov	x19, x4
  45843c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458440:	mul	x0, x0, x1
  458444:	mov	x19, x4
  458448:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  45844c:	udiv	x2, x0, x1
  458450:	mov	x19, x4
  458454:	msub	x0, x2, x1, x0
  458458:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  45845c:	sub	x0, x0, x1
  458460:	mov	x19, x4
  458464:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458468:	sdiv	x0, x0, x1
  45846c:	mov	x19, x4
  458470:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458474:	and	x0, x0, x1
  458478:	mov	x19, x4
  45847c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  458480:	cntd	x0
  458484:	sxtw	x0, w0
  458488:	add	x0, x3, x0
  45848c:	b	458290 <_obstack_memory_used@@Base+0xdc8c>
  458490:	cntd	x0
  458494:	mov	w3, w20
  458498:	sxtw	x0, w0
  45849c:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4584a0:	mvn	x0, x0
  4584a4:	mov	x19, x4
  4584a8:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4584ac:	cmp	w1, #0x2
  4584b0:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  4584b4:	ldrh	w0, [x0]
  4584b8:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4584bc:	cmp	w1, #0x8
  4584c0:	b.ne	457dbc <_obstack_memory_used@@Base+0xd7b8>  // b.any
  4584c4:	ldr	x0, [x0]
  4584c8:	b	457e60 <_obstack_memory_used@@Base+0xd85c>
  4584cc:	nop
  4584d0:	sub	sp, sp, #0x440
  4584d4:	mov	x2, #0x3c0                 	// #960
  4584d8:	stp	x29, x30, [sp]
  4584dc:	mov	x29, sp
  4584e0:	stp	x27, x28, [sp, #80]
  4584e4:	add	x28, sp, #0x80
  4584e8:	mov	x27, x0
  4584ec:	stp	x19, x20, [sp, #16]
  4584f0:	stp	x21, x22, [sp, #32]
  4584f4:	stp	x23, x24, [sp, #48]
  4584f8:	stp	x25, x26, [sp, #64]
  4584fc:	str	x1, [sp, #104]
  458500:	mov	x1, x0
  458504:	mov	x0, x28
  458508:	bl	402490 <memcpy@plt>
  45850c:	ldr	x1, [sp, #960]
  458510:	tbz	x1, #62, 45851c <_obstack_memory_used@@Base+0xdf18>
  458514:	ldrb	w0, [sp, #1015]
  458518:	cbnz	w0, 458524 <_obstack_memory_used@@Base+0xdf20>
  45851c:	ldr	x0, [x28, #248]
  458520:	cbz	x0, 4587f0 <_obstack_memory_used@@Base+0xe1ec>
  458524:	ldr	x0, [x27, #832]
  458528:	tbz	x0, #62, 458530 <_obstack_memory_used@@Base+0xdf2c>
  45852c:	strb	wzr, [x27, #887]
  458530:	ldr	x0, [sp, #104]
  458534:	ldr	w0, [x0, #1600]
  458538:	str	xzr, [x27, #248]
  45853c:	cmp	w0, #0x1
  458540:	b.ne	458590 <_obstack_memory_used@@Base+0xdf8c>  // b.any
  458544:	ldr	x0, [sp, #104]
  458548:	ldr	x0, [x0, #1584]
  45854c:	cmp	w0, #0x61
  458550:	b.gt	458758 <_obstack_memory_used@@Base+0xe154>
  458554:	sxtw	x2, w0
  458558:	ldr	x3, [x28, x2, lsl #3]
  45855c:	tbnz	x1, #62, 4587d0 <_obstack_memory_used@@Base+0xe1cc>
  458560:	cmp	w0, #0x2e
  458564:	b.eq	4587e4 <_obstack_memory_used@@Base+0xe1e0>  // b.none
  458568:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45856c:	add	x0, x0, #0xb08
  458570:	ldrb	w0, [x0, x2]
  458574:	cmp	w0, #0x8
  458578:	b.ne	458758 <_obstack_memory_used@@Base+0xe154>  // b.any
  45857c:	ldr	x3, [x3]
  458580:	ldr	x0, [sp, #104]
  458584:	ldr	x0, [x0, #1576]
  458588:	add	x22, x3, x0
  45858c:	b	4585d4 <_obstack_memory_used@@Base+0xdfd0>
  458590:	cmp	w0, #0x2
  458594:	b.ne	458758 <_obstack_memory_used@@Base+0xe154>  // b.any
  458598:	ldr	x0, [sp, #104]
  45859c:	mov	x1, #0x0                   	// #0
  4585a0:	mov	w3, #0x0                   	// #0
  4585a4:	ldr	x0, [x0, #1592]
  4585a8:	ldrb	w4, [x0], #1
  4585ac:	and	x2, x4, #0x7f
  4585b0:	lsl	x2, x2, x3
  4585b4:	add	w3, w3, #0x7
  4585b8:	orr	x1, x1, x2
  4585bc:	tbnz	w4, #7, 4585a8 <_obstack_memory_used@@Base+0xdfa4>
  4585c0:	add	x1, x0, x1
  4585c4:	mov	x2, x28
  4585c8:	mov	x3, #0x0                   	// #0
  4585cc:	bl	457d58 <_obstack_memory_used@@Base+0xd754>
  4585d0:	mov	x22, x0
  4585d4:	ldr	x25, [sp, #104]
  4585d8:	adrp	x23, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4585dc:	add	x26, x27, #0x358
  4585e0:	add	x20, x23, #0xb08
  4585e4:	add	x21, sp, #0x3d8
  4585e8:	mov	x24, #0x0                   	// #0
  4585ec:	mov	w19, #0x1                   	// #1
  4585f0:	str	x22, [x27, #784]
  4585f4:	nop
  4585f8:	ldr	w2, [x25, #8]
  4585fc:	cmp	w2, #0x3
  458600:	b.eq	4586a4 <_obstack_memory_used@@Base+0xe0a0>  // b.none
  458604:	b.hi	4586e8 <_obstack_memory_used@@Base+0xe0e4>  // b.pmore
  458608:	cmp	w2, #0x1
  45860c:	b.eq	45875c <_obstack_memory_used@@Base+0xe158>  // b.none
  458610:	cmp	w2, #0x2
  458614:	b.ne	45863c <_obstack_memory_used@@Base+0xe038>  // b.any
  458618:	ldr	x0, [x25]
  45861c:	ldrb	w2, [x21, w0, sxtw]
  458620:	sxtw	x1, w0
  458624:	cbnz	w2, 458774 <_obstack_memory_used@@Base+0xe170>
  458628:	ldr	x2, [x27, #832]
  45862c:	ldr	x0, [x28, x1, lsl #3]
  458630:	tbnz	x2, #62, 4586e0 <_obstack_memory_used@@Base+0xe0dc>
  458634:	nop
  458638:	str	x0, [x27, x24, lsl #3]
  45863c:	add	x24, x24, #0x1
  458640:	add	x25, x25, #0x10
  458644:	cmp	x24, #0x62
  458648:	add	x26, x26, #0x1
  45864c:	b.ne	4585f8 <_obstack_memory_used@@Base+0xdff4>  // b.any
  458650:	ldr	x3, [sp, #104]
  458654:	ldr	x0, [x27, #832]
  458658:	ldrb	w2, [x3, #1651]
  45865c:	orr	x1, x0, #0x8000000000000000
  458660:	and	x0, x0, #0x7fffffffffffffff
  458664:	cmp	w2, #0x0
  458668:	csel	x0, x0, x1, eq  // eq = none
  45866c:	ldp	x29, x30, [sp]
  458670:	orr	x1, x0, #0x2000000000000000
  458674:	ldp	x19, x20, [sp, #16]
  458678:	ldp	x21, x22, [sp, #32]
  45867c:	ldp	x23, x24, [sp, #48]
  458680:	ldp	x25, x26, [sp, #64]
  458684:	str	x0, [x27, #832]
  458688:	ldr	x2, [x3, #544]
  45868c:	tst	x2, #0x1
  458690:	csel	x0, x1, x0, ne  // ne = any
  458694:	str	x0, [x27, #832]
  458698:	ldp	x27, x28, [sp, #80]
  45869c:	add	sp, sp, #0x440
  4586a0:	ret
  4586a4:	ldr	x0, [x25]
  4586a8:	mov	x1, #0x0                   	// #0
  4586ac:	mov	w4, #0x0                   	// #0
  4586b0:	ldrb	w5, [x0], #1
  4586b4:	and	x2, x5, #0x7f
  4586b8:	lsl	x2, x2, x4
  4586bc:	add	w4, w4, #0x7
  4586c0:	orr	x1, x1, x2
  4586c4:	tbnz	w5, #7, 4586b0 <_obstack_memory_used@@Base+0xe0ac>
  4586c8:	add	x1, x0, x1
  4586cc:	mov	x3, x22
  4586d0:	mov	x2, x28
  4586d4:	bl	457d58 <_obstack_memory_used@@Base+0xd754>
  4586d8:	ldr	x1, [x27, #832]
  4586dc:	tbz	x1, #62, 458638 <_obstack_memory_used@@Base+0xe034>
  4586e0:	strb	wzr, [x26]
  4586e4:	b	458638 <_obstack_memory_used@@Base+0xe034>
  4586e8:	cmp	w2, #0x4
  4586ec:	b.eq	458744 <_obstack_memory_used@@Base+0xe140>  // b.none
  4586f0:	cmp	w2, #0x5
  4586f4:	b.ne	45863c <_obstack_memory_used@@Base+0xe038>  // b.any
  4586f8:	ldr	x0, [x25]
  4586fc:	mov	x1, #0x0                   	// #0
  458700:	mov	w4, #0x0                   	// #0
  458704:	nop
  458708:	ldrb	w5, [x0], #1
  45870c:	and	x2, x5, #0x7f
  458710:	lsl	x2, x2, x4
  458714:	add	w4, w4, #0x7
  458718:	orr	x1, x1, x2
  45871c:	tbnz	w5, #7, 458708 <_obstack_memory_used@@Base+0xe104>
  458720:	add	x1, x0, x1
  458724:	mov	x3, x22
  458728:	mov	x2, x28
  45872c:	bl	457d58 <_obstack_memory_used@@Base+0xd754>
  458730:	ldrb	w1, [x24, x20]
  458734:	cmp	w1, #0x8
  458738:	b.hi	458758 <_obstack_memory_used@@Base+0xe154>  // b.pmore
  45873c:	strb	w19, [x26]
  458740:	b	458638 <_obstack_memory_used@@Base+0xe034>
  458744:	ldr	x0, [x25]
  458748:	ldrb	w1, [x24, x20]
  45874c:	add	x0, x22, x0
  458750:	cmp	w1, #0x8
  458754:	b.ls	45873c <_obstack_memory_used@@Base+0xe138>  // b.plast
  458758:	bl	4027f0 <abort@plt>
  45875c:	ldr	x1, [x27, #832]
  458760:	ldr	x0, [x25]
  458764:	add	x0, x22, x0
  458768:	tbz	x1, #62, 458638 <_obstack_memory_used@@Base+0xe034>
  45876c:	strb	wzr, [x26]
  458770:	b	458638 <_obstack_memory_used@@Base+0xe034>
  458774:	cmp	w0, #0x61
  458778:	b.gt	458758 <_obstack_memory_used@@Base+0xe154>
  45877c:	ldr	x4, [sp, #960]
  458780:	ldr	x2, [x28, x1, lsl #3]
  458784:	tbz	x4, #62, 4587a8 <_obstack_memory_used@@Base+0xe1a4>
  458788:	mov	x0, x2
  45878c:	nop
  458790:	add	x1, x23, #0xb08
  458794:	ldrb	w1, [x24, x1]
  458798:	cmp	w1, #0x8
  45879c:	b.hi	458758 <_obstack_memory_used@@Base+0xe154>  // b.pmore
  4587a0:	strb	w19, [x26]
  4587a4:	b	458638 <_obstack_memory_used@@Base+0xe034>
  4587a8:	cmp	w0, #0x2e
  4587ac:	b.eq	4587c4 <_obstack_memory_used@@Base+0xe1c0>  // b.none
  4587b0:	ldrb	w0, [x20, x1]
  4587b4:	cmp	w0, #0x8
  4587b8:	b.ne	458758 <_obstack_memory_used@@Base+0xe154>  // b.any
  4587bc:	ldr	x0, [x2]
  4587c0:	b	458790 <_obstack_memory_used@@Base+0xe18c>
  4587c4:	cntd	x0
  4587c8:	sxtw	x0, w0
  4587cc:	b	458790 <_obstack_memory_used@@Base+0xe18c>
  4587d0:	add	x1, sp, #0x3d8
  4587d4:	ldrb	w1, [x1, x2]
  4587d8:	cbnz	w1, 458580 <_obstack_memory_used@@Base+0xdf7c>
  4587dc:	cmp	w0, #0x2e
  4587e0:	b.ne	458568 <_obstack_memory_used@@Base+0xdf64>  // b.any
  4587e4:	cntd	x0
  4587e8:	sxtw	x3, w0
  4587ec:	b	458580 <_obstack_memory_used@@Base+0xdf7c>
  4587f0:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  4587f4:	ldr	x2, [x27, #784]
  4587f8:	ldrb	w0, [x0, #2855]
  4587fc:	cmp	w0, #0x8
  458800:	b.ne	458758 <_obstack_memory_used@@Base+0xe154>  // b.any
  458804:	str	x2, [sp, #120]
  458808:	tbz	x1, #62, 458810 <_obstack_memory_used@@Base+0xe20c>
  45880c:	strb	wzr, [sp, #1015]
  458810:	add	x0, sp, #0x78
  458814:	str	x0, [x28, #248]
  458818:	b	458524 <_obstack_memory_used@@Base+0xdf20>
  45881c:	nop
  458820:	sub	sp, sp, #0x6d0
  458824:	stp	x29, x30, [sp]
  458828:	mov	x29, sp
  45882c:	xpaclri
  458830:	stp	x19, x20, [sp, #16]
  458834:	mov	x19, x0
  458838:	mov	x20, x30
  45883c:	stp	x21, x22, [sp, #32]
  458840:	mov	x22, x1
  458844:	mov	x21, x2
  458848:	mov	w1, #0x0                   	// #0
  45884c:	mov	x2, #0x3c0                 	// #960
  458850:	str	x23, [sp, #48]
  458854:	bl	4026f0 <memset@plt>
  458858:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  45885c:	str	x20, [x19, #792]
  458860:	str	x0, [x19, #832]
  458864:	add	x23, sp, #0x50
  458868:	mov	x1, x23
  45886c:	mov	x0, x19
  458870:	bl	4576a0 <_obstack_memory_used@@Base+0xd09c>
  458874:	cbnz	w0, 458a68 <_obstack_memory_used@@Base+0xe464>
  458878:	adrp	x0, 48c000 <_obstack_memory_used@@Base+0x419fc>
  45887c:	adrp	x20, 48e000 <__environ@@GLIBC_2.17+0xa68>
  458880:	ldr	x0, [x0, #3880]
  458884:	cbz	x0, 45890c <_obstack_memory_used@@Base+0xe308>
  458888:	add	x0, x20, #0xb08
  45888c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0xc9fc>
  458890:	add	x0, x0, #0x64
  458894:	add	x1, x1, #0x548
  458898:	bl	402860 <pthread_once@plt>
  45889c:	cbnz	w0, 45890c <_obstack_memory_used@@Base+0xe308>
  4588a0:	add	x20, x20, #0xb08
  4588a4:	ldrb	w0, [x20, #31]
  4588a8:	cmp	w0, #0x8
  4588ac:	b.ne	458a68 <_obstack_memory_used@@Base+0xe464>  // b.any
  4588b0:	ldr	x0, [x19, #832]
  4588b4:	str	x22, [sp, #72]
  4588b8:	tbz	x0, #62, 4588c0 <_obstack_memory_used@@Base+0xe2bc>
  4588bc:	strb	wzr, [x19, #887]
  4588c0:	add	x0, sp, #0x48
  4588c4:	mov	x3, #0x1f                  	// #31
  4588c8:	mov	w2, #0x1                   	// #1
  4588cc:	str	x0, [x19, #248]
  4588d0:	mov	x1, x23
  4588d4:	mov	x0, x19
  4588d8:	str	xzr, [sp, #1656]
  4588dc:	str	x3, [sp, #1664]
  4588e0:	str	w2, [sp, #1680]
  4588e4:	bl	4584d0 <_obstack_memory_used@@Base+0xdecc>
  4588e8:	mov	x30, x21
  4588ec:	xpaclri
  4588f0:	ldp	x21, x22, [sp, #32]
  4588f4:	ldr	x23, [sp, #48]
  4588f8:	str	x30, [x19, #792]
  4588fc:	ldp	x29, x30, [sp]
  458900:	ldp	x19, x20, [sp, #16]
  458904:	add	sp, sp, #0x6d0
  458908:	ret
  45890c:	ldrb	w0, [x20, #2824]
  458910:	add	x3, x20, #0xb08
  458914:	cbnz	w0, 4588a0 <_obstack_memory_used@@Base+0xe29c>
  458918:	mov	w4, #0x8                   	// #8
  45891c:	strb	w4, [x20, #2824]
  458920:	strb	w4, [x3, #1]
  458924:	strb	w4, [x3, #2]
  458928:	strb	w4, [x3, #3]
  45892c:	strb	w4, [x3, #4]
  458930:	strb	w4, [x3, #5]
  458934:	strb	w4, [x3, #6]
  458938:	strb	w4, [x3, #7]
  45893c:	strb	w4, [x3, #8]
  458940:	strb	w4, [x3, #9]
  458944:	strb	w4, [x3, #10]
  458948:	strb	w4, [x3, #11]
  45894c:	strb	w4, [x3, #12]
  458950:	strb	w4, [x3, #13]
  458954:	strb	w4, [x3, #14]
  458958:	strb	w4, [x3, #15]
  45895c:	strb	w4, [x3, #16]
  458960:	strb	w4, [x3, #17]
  458964:	strb	w4, [x3, #18]
  458968:	strb	w4, [x3, #19]
  45896c:	strb	w4, [x3, #20]
  458970:	strb	w4, [x3, #21]
  458974:	strb	w4, [x3, #22]
  458978:	strb	w4, [x3, #23]
  45897c:	strb	w4, [x3, #24]
  458980:	strb	w4, [x3, #25]
  458984:	strb	w4, [x3, #26]
  458988:	strb	w4, [x3, #27]
  45898c:	strb	w4, [x3, #28]
  458990:	strb	w4, [x3, #29]
  458994:	strb	w4, [x3, #30]
  458998:	strb	w4, [x3, #31]
  45899c:	strb	w4, [x3, #64]
  4589a0:	strb	w4, [x3, #46]
  4589a4:	strb	w4, [x3, #65]
  4589a8:	strb	w4, [x3, #66]
  4589ac:	strb	w4, [x3, #67]
  4589b0:	strb	w4, [x3, #68]
  4589b4:	strb	w4, [x3, #69]
  4589b8:	strb	w4, [x3, #70]
  4589bc:	strb	w4, [x3, #71]
  4589c0:	strb	w4, [x3, #72]
  4589c4:	strb	w4, [x3, #73]
  4589c8:	strb	w4, [x3, #74]
  4589cc:	strb	w4, [x3, #75]
  4589d0:	strb	w4, [x3, #76]
  4589d4:	strb	w4, [x3, #77]
  4589d8:	strb	w4, [x3, #78]
  4589dc:	strb	w4, [x3, #79]
  4589e0:	strb	w4, [x3, #80]
  4589e4:	strb	w4, [x3, #81]
  4589e8:	strb	w4, [x3, #82]
  4589ec:	strb	w4, [x3, #83]
  4589f0:	strb	w4, [x3, #84]
  4589f4:	strb	w4, [x3, #85]
  4589f8:	strb	w4, [x3, #86]
  4589fc:	strb	w4, [x3, #87]
  458a00:	strb	w4, [x3, #88]
  458a04:	strb	w4, [x3, #89]
  458a08:	strb	w4, [x3, #90]
  458a0c:	strb	w4, [x3, #91]
  458a10:	strb	w4, [x3, #92]
  458a14:	strb	w4, [x3, #93]
  458a18:	strb	w4, [x3, #94]
  458a1c:	strb	w4, [x3, #95]
  458a20:	strb	w4, [x3, #48]
  458a24:	strb	w4, [x3, #49]
  458a28:	strb	w4, [x3, #50]
  458a2c:	strb	w4, [x3, #51]
  458a30:	strb	w4, [x3, #52]
  458a34:	strb	w4, [x3, #53]
  458a38:	strb	w4, [x3, #54]
  458a3c:	strb	w4, [x3, #55]
  458a40:	strb	w4, [x3, #56]
  458a44:	strb	w4, [x3, #57]
  458a48:	strb	w4, [x3, #58]
  458a4c:	strb	w4, [x3, #59]
  458a50:	strb	w4, [x3, #60]
  458a54:	strb	w4, [x3, #61]
  458a58:	strb	w4, [x3, #62]
  458a5c:	strb	w4, [x3, #63]
  458a60:	strb	w4, [x3, #96]
  458a64:	b	4588a0 <_obstack_memory_used@@Base+0xe29c>
  458a68:	bl	4027f0 <abort@plt>
  458a6c:	nop
  458a70:	stp	x29, x30, [sp, #-32]!
  458a74:	mov	x29, sp
  458a78:	stp	x19, x20, [sp, #16]
  458a7c:	mov	x20, x1
  458a80:	mov	x19, x0
  458a84:	bl	4584d0 <_obstack_memory_used@@Base+0xdecc>
  458a88:	ldr	x0, [x20, #1640]
  458a8c:	add	x1, x20, x0, lsl #4
  458a90:	ldr	w1, [x1, #8]
  458a94:	cmp	w1, #0x6
  458a98:	b.ne	458aac <_obstack_memory_used@@Base+0xe4a8>  // b.any
  458a9c:	str	xzr, [x19, #792]
  458aa0:	ldp	x19, x20, [sp, #16]
  458aa4:	ldp	x29, x30, [sp], #32
  458aa8:	ret
  458aac:	cmp	w0, #0x61
  458ab0:	b.gt	458b20 <_obstack_memory_used@@Base+0xe51c>
  458ab4:	ldr	x2, [x19, #832]
  458ab8:	sxtw	x1, w0
  458abc:	ldr	x17, [x19, x1, lsl #3]
  458ac0:	tbz	x2, #62, 458ad0 <_obstack_memory_used@@Base+0xe4cc>
  458ac4:	add	x2, x19, x1
  458ac8:	ldrb	w2, [x2, #856]
  458acc:	cbnz	w2, 458af0 <_obstack_memory_used@@Base+0xe4ec>
  458ad0:	cmp	w0, #0x2e
  458ad4:	b.eq	458b14 <_obstack_memory_used@@Base+0xe510>  // b.none
  458ad8:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  458adc:	add	x0, x0, #0xb08
  458ae0:	ldrb	w0, [x0, x1]
  458ae4:	cmp	w0, #0x8
  458ae8:	b.ne	458b20 <_obstack_memory_used@@Base+0xe51c>  // b.any
  458aec:	ldr	x17, [x17]
  458af0:	ldr	x0, [x20, #544]
  458af4:	str	x17, [x19, #792]
  458af8:	tbz	w0, #0, 458b04 <_obstack_memory_used@@Base+0xe500>
  458afc:	ldr	x16, [x19, #784]
  458b00:	autia1716
  458b04:	str	x17, [x19, #792]
  458b08:	ldp	x19, x20, [sp, #16]
  458b0c:	ldp	x29, x30, [sp], #32
  458b10:	ret
  458b14:	cntd	x0
  458b18:	sxtw	x17, w0
  458b1c:	b	458af0 <_obstack_memory_used@@Base+0xe4ec>
  458b20:	bl	4027f0 <abort@plt>
  458b24:	nop
  458b28:	sub	sp, sp, #0x6c0
  458b2c:	stp	x29, x30, [sp]
  458b30:	mov	x29, sp
  458b34:	stp	x19, x20, [sp, #16]
  458b38:	mov	x19, x1
  458b3c:	stp	x21, x22, [sp, #32]
  458b40:	mov	x21, x0
  458b44:	add	x22, sp, #0x40
  458b48:	stp	x23, x24, [sp, #48]
  458b4c:	mov	x24, x2
  458b50:	mov	x23, #0x1                   	// #1
  458b54:	nop
  458b58:	mov	x1, x22
  458b5c:	mov	x0, x19
  458b60:	bl	4576a0 <_obstack_memory_used@@Base+0xd09c>
  458b64:	ldr	x3, [x19, #784]
  458b68:	ldr	x1, [x19, #832]
  458b6c:	ldr	x2, [x21, #24]
  458b70:	sub	x1, x3, x1, lsr #63
  458b74:	cmp	x2, x1
  458b78:	cset	w20, eq  // eq = none
  458b7c:	lsl	w20, w20, #2
  458b80:	cbnz	w0, 458bcc <_obstack_memory_used@@Base+0xe5c8>
  458b84:	ldr	x5, [sp, #1680]
  458b88:	cbz	x5, 458bb4 <_obstack_memory_used@@Base+0xe5b0>
  458b8c:	ldr	x2, [x21]
  458b90:	mov	x4, x19
  458b94:	mov	x3, x21
  458b98:	orr	w1, w20, #0x2
  458b9c:	mov	w0, #0x1                   	// #1
  458ba0:	blr	x5
  458ba4:	cmp	w0, #0x7
  458ba8:	b.eq	458be8 <_obstack_memory_used@@Base+0xe5e4>  // b.none
  458bac:	cmp	w0, #0x8
  458bb0:	b.ne	458bcc <_obstack_memory_used@@Base+0xe5c8>  // b.any
  458bb4:	cbnz	w20, 458c04 <_obstack_memory_used@@Base+0xe600>
  458bb8:	add	x23, x23, #0x1
  458bbc:	mov	x1, x22
  458bc0:	mov	x0, x19
  458bc4:	bl	458a70 <_obstack_memory_used@@Base+0xe46c>
  458bc8:	b	458b58 <_obstack_memory_used@@Base+0xe554>
  458bcc:	mov	w0, #0x2                   	// #2
  458bd0:	ldp	x29, x30, [sp]
  458bd4:	ldp	x19, x20, [sp, #16]
  458bd8:	ldp	x21, x22, [sp, #32]
  458bdc:	ldp	x23, x24, [sp, #48]
  458be0:	add	sp, sp, #0x6c0
  458be4:	ret
  458be8:	str	x23, [x24]
  458bec:	ldp	x29, x30, [sp]
  458bf0:	ldp	x19, x20, [sp, #16]
  458bf4:	ldp	x21, x22, [sp, #32]
  458bf8:	ldp	x23, x24, [sp, #48]
  458bfc:	add	sp, sp, #0x6c0
  458c00:	ret
  458c04:	bl	4027f0 <abort@plt>
  458c08:	sub	sp, sp, #0x6d0
  458c0c:	stp	x29, x30, [sp]
  458c10:	mov	x29, sp
  458c14:	stp	x19, x20, [sp, #16]
  458c18:	mov	x20, x0
  458c1c:	stp	x21, x22, [sp, #32]
  458c20:	mov	x21, x1
  458c24:	add	x22, sp, #0x50
  458c28:	stp	x23, x24, [sp, #48]
  458c2c:	mov	x23, #0x1                   	// #1
  458c30:	stp	x25, x26, [sp, #64]
  458c34:	mov	x26, x2
  458c38:	ldp	x25, x24, [x0, #16]
  458c3c:	b	458c90 <_obstack_memory_used@@Base+0xe68c>
  458c40:	blr	x25
  458c44:	mov	w2, w0
  458c48:	mov	x4, x21
  458c4c:	mov	x3, x20
  458c50:	mov	w1, #0xa                   	// #10
  458c54:	mov	w0, #0x1                   	// #1
  458c58:	cbnz	w2, 458cdc <_obstack_memory_used@@Base+0xe6d8>
  458c5c:	ldr	x5, [sp, #1696]
  458c60:	cbz	x5, 458c80 <_obstack_memory_used@@Base+0xe67c>
  458c64:	ldr	x2, [x20]
  458c68:	blr	x5
  458c6c:	mov	w19, w0
  458c70:	cmp	w0, #0x7
  458c74:	b.eq	458d00 <_obstack_memory_used@@Base+0xe6fc>  // b.none
  458c78:	cmp	w0, #0x8
  458c7c:	b.ne	458cdc <_obstack_memory_used@@Base+0xe6d8>  // b.any
  458c80:	add	x23, x23, #0x1
  458c84:	mov	x1, x22
  458c88:	mov	x0, x21
  458c8c:	bl	458a70 <_obstack_memory_used@@Base+0xe46c>
  458c90:	mov	x1, x22
  458c94:	mov	x0, x21
  458c98:	bl	4576a0 <_obstack_memory_used@@Base+0xd09c>
  458c9c:	cmp	w0, #0x0
  458ca0:	mov	w19, w0
  458ca4:	mov	x5, x24
  458ca8:	mov	x4, x21
  458cac:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  458cb0:	b.ne	458cdc <_obstack_memory_used@@Base+0xe6d8>  // b.any
  458cb4:	cmp	w0, #0x5
  458cb8:	mov	x3, x20
  458cbc:	mov	w1, #0xa                   	// #10
  458cc0:	mov	w0, #0x1                   	// #1
  458cc4:	ldr	x2, [x20]
  458cc8:	b.ne	458c40 <_obstack_memory_used@@Base+0xe63c>  // b.any
  458ccc:	mov	w1, #0x1a                  	// #26
  458cd0:	mov	w0, #0x1                   	// #1
  458cd4:	blr	x25
  458cd8:	cbz	w0, 458d00 <_obstack_memory_used@@Base+0xe6fc>
  458cdc:	mov	w19, #0x2                   	// #2
  458ce0:	mov	w0, w19
  458ce4:	ldp	x29, x30, [sp]
  458ce8:	ldp	x19, x20, [sp, #16]
  458cec:	ldp	x21, x22, [sp, #32]
  458cf0:	ldp	x23, x24, [sp, #48]
  458cf4:	ldp	x25, x26, [sp, #64]
  458cf8:	add	sp, sp, #0x6d0
  458cfc:	ret
  458d00:	str	x23, [x26]
  458d04:	mov	w0, w19
  458d08:	ldp	x29, x30, [sp]
  458d0c:	ldp	x19, x20, [sp, #16]
  458d10:	ldp	x21, x22, [sp, #32]
  458d14:	ldp	x23, x24, [sp, #48]
  458d18:	ldp	x25, x26, [sp, #64]
  458d1c:	add	sp, sp, #0x6d0
  458d20:	ret
  458d24:	nop
  458d28:	cmp	w1, #0x61
  458d2c:	b.gt	458d84 <_obstack_memory_used@@Base+0xe780>
  458d30:	ldr	x4, [x0, #832]
  458d34:	sxtw	x3, w1
  458d38:	ldr	x2, [x0, x3, lsl #3]
  458d3c:	tbz	x4, #62, 458d4c <_obstack_memory_used@@Base+0xe748>
  458d40:	add	x0, x0, x3
  458d44:	ldrb	w0, [x0, #856]
  458d48:	cbnz	w0, 458d7c <_obstack_memory_used@@Base+0xe778>
  458d4c:	cmp	w1, #0x2e
  458d50:	b.eq	458d70 <_obstack_memory_used@@Base+0xe76c>  // b.none
  458d54:	adrp	x0, 48e000 <__environ@@GLIBC_2.17+0xa68>
  458d58:	add	x0, x0, #0xb08
  458d5c:	ldrb	w0, [x0, w1, sxtw]
  458d60:	cmp	w0, #0x8
  458d64:	b.ne	458d84 <_obstack_memory_used@@Base+0xe780>  // b.any
  458d68:	ldr	x0, [x2]
  458d6c:	ret
  458d70:	cntd	x0
  458d74:	sxtw	x0, w0
  458d78:	ret
  458d7c:	mov	x0, x2
  458d80:	ret
  458d84:	stp	x29, x30, [sp, #-16]!
  458d88:	mov	x29, sp
  458d8c:	bl	4027f0 <abort@plt>
  458d90:	ldr	x0, [x0, #784]
  458d94:	ret
  458d98:	cmp	w1, #0x61
  458d9c:	b.gt	458de0 <_obstack_memory_used@@Base+0xe7dc>
  458da0:	ldr	x5, [x0, #832]
  458da4:	adrp	x3, 48e000 <__environ@@GLIBC_2.17+0xa68>
  458da8:	add	x3, x3, #0xb08
  458dac:	sxtw	x4, w1
  458db0:	ldrb	w1, [x3, w1, sxtw]
  458db4:	tbz	x5, #62, 458dc4 <_obstack_memory_used@@Base+0xe7c0>
  458db8:	add	x3, x0, x4
  458dbc:	ldrb	w3, [x3, #856]
  458dc0:	cbnz	w3, 458dd8 <_obstack_memory_used@@Base+0xe7d4>
  458dc4:	cmp	w1, #0x8
  458dc8:	ldr	x0, [x0, x4, lsl #3]
  458dcc:	b.ne	458de0 <_obstack_memory_used@@Base+0xe7dc>  // b.any
  458dd0:	str	x2, [x0]
  458dd4:	ret
  458dd8:	str	x2, [x0, x4, lsl #3]
  458ddc:	ret
  458de0:	stp	x29, x30, [sp, #-16]!
  458de4:	mov	x29, sp
  458de8:	bl	4027f0 <abort@plt>
  458dec:	nop
  458df0:	ldr	x0, [x0, #792]
  458df4:	ret
  458df8:	ldr	x2, [x0, #832]
  458dfc:	ldr	x0, [x0, #792]
  458e00:	lsr	x2, x2, #63
  458e04:	str	w2, [x1]
  458e08:	ret
  458e0c:	nop
  458e10:	str	x1, [x0, #792]
  458e14:	ret
  458e18:	ldr	x0, [x0, #800]
  458e1c:	ret
  458e20:	ldr	x0, [x0, #824]
  458e24:	ret
  458e28:	stp	x29, x30, [sp, #-48]!
  458e2c:	sub	x0, x0, #0x1
  458e30:	mov	x29, sp
  458e34:	add	x1, sp, #0x18
  458e38:	bl	45ade0 <_obstack_memory_used@@Base+0x107dc>
  458e3c:	ldr	x1, [sp, #40]
  458e40:	cmp	x0, #0x0
  458e44:	ldp	x29, x30, [sp], #48
  458e48:	csel	x0, x1, x0, ne  // ne = any
  458e4c:	ret
  458e50:	ldr	x0, [x0, #816]
  458e54:	ret
  458e58:	ldr	x0, [x0, #808]
  458e5c:	ret
  458e60:	sub	sp, sp, #0xa70
  458e64:	mov	x2, #0x3c0                 	// #960
  458e68:	add	x3, sp, #0x30
  458e6c:	stp	x29, x30, [sp]
  458e70:	mov	x29, sp
  458e74:	stp	x19, x20, [sp, #16]
  458e78:	mov	x20, x1
  458e7c:	mov	w1, #0x0                   	// #0
  458e80:	str	x21, [sp, #32]
  458e84:	mov	x21, x0
  458e88:	mov	x0, x3
  458e8c:	bl	4026f0 <memset@plt>
  458e90:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  458e94:	add	x19, sp, #0x3f0
  458e98:	add	x21, x21, #0x1
  458e9c:	mov	x1, x19
  458ea0:	str	x21, [sp, #840]
  458ea4:	str	x2, [sp, #880]
  458ea8:	bl	4576a0 <_obstack_memory_used@@Base+0xd09c>
  458eac:	cbnz	w0, 458f58 <_obstack_memory_used@@Base+0xe954>
  458eb0:	ldr	w0, [sp, #2608]
  458eb4:	cmp	w0, #0x2
  458eb8:	b.eq	458f58 <_obstack_memory_used@@Base+0xe954>  // b.none
  458ebc:	sub	x4, x20, x20, lsl #3
  458ec0:	mov	x1, #0xffffffffffffe680    	// #-6528
  458ec4:	mov	x0, x19
  458ec8:	add	x5, x19, #0x620
  458ecc:	add	x4, x4, x1
  458ed0:	add	x2, x20, #0x334
  458ed4:	b	458eec <_obstack_memory_used@@Base+0xe8e8>
  458ed8:	str	xzr, [x4, x2, lsl #3]
  458edc:	add	x0, x0, #0x10
  458ee0:	add	x2, x2, #0x1
  458ee4:	cmp	x0, x5
  458ee8:	b.eq	458f1c <_obstack_memory_used@@Base+0xe918>  // b.none
  458eec:	ldrb	w3, [x0, #8]
  458ef0:	strb	w3, [x2]
  458ef4:	cmp	w3, #0x1
  458ef8:	b.eq	458f04 <_obstack_memory_used@@Base+0xe900>  // b.none
  458efc:	cmp	w3, #0x2
  458f00:	b.ne	458ed8 <_obstack_memory_used@@Base+0xe8d4>  // b.any
  458f04:	ldr	x3, [x0]
  458f08:	str	x3, [x4, x2, lsl #3]
  458f0c:	add	x0, x0, #0x10
  458f10:	add	x2, x2, #0x1
  458f14:	cmp	x0, x5
  458f18:	b.ne	458eec <_obstack_memory_used@@Base+0xe8e8>  // b.any
  458f1c:	ldr	x1, [sp, #896]
  458f20:	mov	x0, x20
  458f24:	ldr	x2, [sp, #2584]
  458f28:	stp	x2, x1, [x20, #16]
  458f2c:	ldr	x2, [sp, #2592]
  458f30:	strh	w2, [x20, #816]
  458f34:	ldr	x1, [sp, #2648]
  458f38:	strh	w1, [x20, #818]
  458f3c:	ldr	x2, [sp, #2664]
  458f40:	str	x2, [x20, #8]
  458f44:	ldp	x29, x30, [sp]
  458f48:	ldp	x19, x20, [sp, #16]
  458f4c:	ldr	x21, [sp, #32]
  458f50:	add	sp, sp, #0xa70
  458f54:	ret
  458f58:	mov	x0, #0x0                   	// #0
  458f5c:	ldp	x29, x30, [sp]
  458f60:	ldp	x19, x20, [sp, #16]
  458f64:	ldr	x21, [sp, #32]
  458f68:	add	sp, sp, #0xa70
  458f6c:	ret
  458f70:	ret
  458f74:	nop
  458f78:	sub	sp, sp, #0xec0
  458f7c:	stp	x29, x30, [sp]
  458f80:	mov	x29, sp
  458f84:	stp	x21, x22, [sp, #64]
  458f88:	add	x21, sp, #0xc0
  458f8c:	add	x22, sp, #0x840
  458f90:	stp	x0, x1, [sp, #16]
  458f94:	add	x1, sp, #0xec0
  458f98:	stp	x2, x3, [sp, #32]
  458f9c:	mov	x2, x30
  458fa0:	stp	x19, x20, [sp, #48]
  458fa4:	mov	x20, x0
  458fa8:	add	x19, sp, #0x480
  458fac:	mov	x0, x21
  458fb0:	stp	x23, x24, [sp, #80]
  458fb4:	stp	x25, x26, [sp, #96]
  458fb8:	stp	x27, x28, [sp, #112]
  458fbc:	stp	d8, d9, [sp, #128]
  458fc0:	stp	d10, d11, [sp, #144]
  458fc4:	stp	d12, d13, [sp, #160]
  458fc8:	stp	d14, d15, [sp, #176]
  458fcc:	bl	458820 <_obstack_memory_used@@Base+0xe21c>
  458fd0:	mov	x1, x21
  458fd4:	mov	x0, x19
  458fd8:	mov	x2, #0x3c0                 	// #960
  458fdc:	bl	402490 <memcpy@plt>
  458fe0:	b	459014 <_obstack_memory_used@@Base+0xea10>
  458fe4:	cbnz	w2, 459080 <_obstack_memory_used@@Base+0xea7c>
  458fe8:	ldr	x5, [sp, #3728]
  458fec:	cbz	x5, 459008 <_obstack_memory_used@@Base+0xea04>
  458ff0:	ldr	x2, [x20]
  458ff4:	blr	x5
  458ff8:	cmp	w0, #0x6
  458ffc:	b.eq	459088 <_obstack_memory_used@@Base+0xea84>  // b.none
  459000:	cmp	w0, #0x8
  459004:	b.ne	459080 <_obstack_memory_used@@Base+0xea7c>  // b.any
  459008:	mov	x1, x22
  45900c:	mov	x0, x19
  459010:	bl	458a70 <_obstack_memory_used@@Base+0xe46c>
  459014:	mov	x1, x22
  459018:	mov	x0, x19
  45901c:	bl	4576a0 <_obstack_memory_used@@Base+0xd09c>
  459020:	mov	w2, w0
  459024:	mov	w1, #0x1                   	// #1
  459028:	mov	x4, x19
  45902c:	mov	x3, x20
  459030:	mov	w0, w1
  459034:	cmp	w2, #0x5
  459038:	b.ne	458fe4 <_obstack_memory_used@@Base+0xe9e0>  // b.any
  45903c:	mov	x4, #0x0                   	// #0
  459040:	mov	w0, w2
  459044:	ldp	x29, x30, [sp]
  459048:	ldp	x0, x1, [sp, #16]
  45904c:	ldp	x2, x3, [sp, #32]
  459050:	ldp	x19, x20, [sp, #48]
  459054:	ldp	x21, x22, [sp, #64]
  459058:	ldp	x23, x24, [sp, #80]
  45905c:	ldp	x25, x26, [sp, #96]
  459060:	ldp	x27, x28, [sp, #112]
  459064:	ldp	d8, d9, [sp, #128]
  459068:	ldp	d10, d11, [sp, #144]
  45906c:	ldp	d12, d13, [sp, #160]
  459070:	ldp	d14, d15, [sp, #176]
  459074:	add	sp, sp, #0xec0
  459078:	add	sp, sp, x4
  45907c:	ret
  459080:	mov	w2, #0x3                   	// #3
  459084:	b	45903c <_obstack_memory_used@@Base+0xea38>
  459088:	ldr	x4, [sp, #1936]
  45908c:	mov	x1, x21
  459090:	ldr	x3, [sp, #1984]
  459094:	mov	x2, #0x3c0                 	// #960
  459098:	mov	x0, x19
  45909c:	sub	x3, x4, x3, lsr #63
  4590a0:	stp	xzr, x3, [x20, #16]
  4590a4:	bl	402490 <memcpy@plt>
  4590a8:	mov	x2, x22
  4590ac:	mov	x1, x19
  4590b0:	mov	x0, x20
  4590b4:	bl	458b28 <_obstack_memory_used@@Base+0xe524>
  4590b8:	mov	w2, w0
  4590bc:	cmp	w0, #0x7
  4590c0:	b.ne	45903c <_obstack_memory_used@@Base+0xea38>  // b.any
  4590c4:	mov	x1, x19
  4590c8:	mov	x0, x21
  4590cc:	bl	457bf8 <_obstack_memory_used@@Base+0xd5f4>
  4590d0:	mov	x4, x0
  4590d4:	ldr	x2, [sp, #1024]
  4590d8:	ldr	x1, [sp, #1944]
  4590dc:	tbz	x2, #61, 4590f0 <_obstack_memory_used@@Base+0xeaec>
  4590e0:	mov	x17, x1
  4590e4:	ldr	x16, [sp, #976]
  4590e8:	pacia1716
  4590ec:	mov	x1, x17
  4590f0:	ldr	x0, [sp, #1936]
  4590f4:	bl	458f70 <_obstack_memory_used@@Base+0xe96c>
  4590f8:	str	x1, [x29, #8]
  4590fc:	b	459040 <_obstack_memory_used@@Base+0xea3c>
  459100:	sub	sp, sp, #0x850
  459104:	stp	x29, x30, [sp]
  459108:	mov	x29, sp
  45910c:	stp	x19, x20, [sp, #48]
  459110:	mov	x19, x0
  459114:	mov	x20, x2
  459118:	stp	x21, x22, [sp, #64]
  45911c:	add	x22, sp, #0xd0
  459120:	mov	x21, x1
  459124:	stp	x0, x1, [sp, #16]
  459128:	mov	x0, x22
  45912c:	add	x1, sp, #0x850
  459130:	stp	x2, x3, [sp, #32]
  459134:	mov	x2, x30
  459138:	stp	x23, x24, [sp, #80]
  45913c:	add	x23, sp, #0x490
  459140:	stp	x25, x26, [sp, #96]
  459144:	stp	x27, x28, [sp, #112]
  459148:	stp	d8, d9, [sp, #128]
  45914c:	stp	d10, d11, [sp, #144]
  459150:	stp	d12, d13, [sp, #160]
  459154:	stp	d14, d15, [sp, #176]
  459158:	bl	458820 <_obstack_memory_used@@Base+0xe21c>
  45915c:	mov	x1, x22
  459160:	mov	x2, #0x3c0                 	// #960
  459164:	mov	x0, x23
  459168:	bl	402490 <memcpy@plt>
  45916c:	stp	x21, x20, [x19, #16]
  459170:	mov	x0, x19
  459174:	mov	x1, x23
  459178:	add	x2, sp, #0xc8
  45917c:	bl	458c08 <_obstack_memory_used@@Base+0xe604>
  459180:	cmp	w0, #0x7
  459184:	mov	x4, #0x0                   	// #0
  459188:	b.eq	4591c8 <_obstack_memory_used@@Base+0xebc4>  // b.none
  45918c:	ldp	x29, x30, [sp]
  459190:	ldp	x0, x1, [sp, #16]
  459194:	ldp	x2, x3, [sp, #32]
  459198:	ldp	x19, x20, [sp, #48]
  45919c:	ldp	x21, x22, [sp, #64]
  4591a0:	ldp	x23, x24, [sp, #80]
  4591a4:	ldp	x25, x26, [sp, #96]
  4591a8:	ldp	x27, x28, [sp, #112]
  4591ac:	ldp	d8, d9, [sp, #128]
  4591b0:	ldp	d10, d11, [sp, #144]
  4591b4:	ldp	d12, d13, [sp, #160]
  4591b8:	ldp	d14, d15, [sp, #176]
  4591bc:	add	sp, sp, #0x850
  4591c0:	add	sp, sp, x4
  4591c4:	ret
  4591c8:	mov	x1, x23
  4591cc:	mov	x0, x22
  4591d0:	bl	457bf8 <_obstack_memory_used@@Base+0xd5f4>
  4591d4:	mov	x4, x0
  4591d8:	ldr	x2, [sp, #1040]
  4591dc:	ldr	x1, [sp, #1960]
  4591e0:	tbz	x2, #61, 4591f4 <_obstack_memory_used@@Base+0xebf0>
  4591e4:	mov	x17, x1
  4591e8:	ldr	x16, [sp, #992]
  4591ec:	pacia1716
  4591f0:	mov	x1, x17
  4591f4:	ldr	x0, [sp, #1952]
  4591f8:	bl	458f70 <_obstack_memory_used@@Base+0xe96c>
  4591fc:	str	x1, [x29, #8]
  459200:	b	45918c <_obstack_memory_used@@Base+0xeb88>
  459204:	nop
  459208:	sub	sp, sp, #0x850
  45920c:	stp	x29, x30, [sp]
  459210:	mov	x29, sp
  459214:	stp	x19, x20, [sp, #48]
  459218:	mov	x19, x0
  45921c:	add	x20, sp, #0xd0
  459220:	stp	x0, x1, [sp, #16]
  459224:	mov	x0, x20
  459228:	add	x1, sp, #0x850
  45922c:	stp	x2, x3, [sp, #32]
  459230:	mov	x2, x30
  459234:	stp	x21, x22, [sp, #64]
  459238:	add	x21, sp, #0x490
  45923c:	stp	x23, x24, [sp, #80]
  459240:	stp	x25, x26, [sp, #96]
  459244:	stp	x27, x28, [sp, #112]
  459248:	stp	d8, d9, [sp, #128]
  45924c:	stp	d10, d11, [sp, #144]
  459250:	stp	d12, d13, [sp, #160]
  459254:	stp	d14, d15, [sp, #176]
  459258:	bl	458820 <_obstack_memory_used@@Base+0xe21c>
  45925c:	mov	x1, x20
  459260:	mov	x0, x21
  459264:	mov	x2, #0x3c0                 	// #960
  459268:	bl	402490 <memcpy@plt>
  45926c:	ldr	x0, [x19, #16]
  459270:	cbnz	x0, 459300 <_obstack_memory_used@@Base+0xecfc>
  459274:	mov	x0, x19
  459278:	add	x2, sp, #0xc8
  45927c:	mov	x1, x21
  459280:	bl	458b28 <_obstack_memory_used@@Base+0xe524>
  459284:	cmp	w0, #0x7
  459288:	b.ne	459314 <_obstack_memory_used@@Base+0xed10>  // b.any
  45928c:	mov	x1, x21
  459290:	mov	x0, x20
  459294:	bl	457bf8 <_obstack_memory_used@@Base+0xd5f4>
  459298:	mov	x4, x0
  45929c:	ldr	x2, [sp, #1040]
  4592a0:	ldr	x1, [sp, #1960]
  4592a4:	tbz	x2, #61, 4592b8 <_obstack_memory_used@@Base+0xecb4>
  4592a8:	mov	x17, x1
  4592ac:	ldr	x16, [sp, #992]
  4592b0:	pacia1716
  4592b4:	mov	x1, x17
  4592b8:	ldr	x0, [sp, #1952]
  4592bc:	bl	458f70 <_obstack_memory_used@@Base+0xe96c>
  4592c0:	str	x1, [x29, #8]
  4592c4:	ldp	x29, x30, [sp]
  4592c8:	ldp	x0, x1, [sp, #16]
  4592cc:	ldp	x2, x3, [sp, #32]
  4592d0:	ldp	x19, x20, [sp, #48]
  4592d4:	ldp	x21, x22, [sp, #64]
  4592d8:	ldp	x23, x24, [sp, #80]
  4592dc:	ldp	x25, x26, [sp, #96]
  4592e0:	ldp	x27, x28, [sp, #112]
  4592e4:	ldp	d8, d9, [sp, #128]
  4592e8:	ldp	d10, d11, [sp, #144]
  4592ec:	ldp	d12, d13, [sp, #160]
  4592f0:	ldp	d14, d15, [sp, #176]
  4592f4:	add	sp, sp, #0x850
  4592f8:	add	sp, sp, x4
  4592fc:	ret
  459300:	mov	x0, x19
  459304:	add	x2, sp, #0xc8
  459308:	mov	x1, x21
  45930c:	bl	458c08 <_obstack_memory_used@@Base+0xe604>
  459310:	b	459284 <_obstack_memory_used@@Base+0xec80>
  459314:	bl	4027f0 <abort@plt>
  459318:	sub	sp, sp, #0x850
  45931c:	stp	x29, x30, [sp]
  459320:	mov	x29, sp
  459324:	stp	x0, x1, [sp, #16]
  459328:	ldr	x1, [x0, #16]
  45932c:	stp	x2, x3, [sp, #32]
  459330:	stp	x19, x20, [sp, #48]
  459334:	mov	x19, x0
  459338:	stp	x21, x22, [sp, #64]
  45933c:	stp	x23, x24, [sp, #80]
  459340:	stp	x25, x26, [sp, #96]
  459344:	stp	x27, x28, [sp, #112]
  459348:	stp	d8, d9, [sp, #128]
  45934c:	stp	d10, d11, [sp, #144]
  459350:	stp	d12, d13, [sp, #160]
  459354:	stp	d14, d15, [sp, #176]
  459358:	cbnz	x1, 4593a0 <_obstack_memory_used@@Base+0xed9c>
  45935c:	bl	458f78 <_obstack_memory_used@@Base+0xe974>
  459360:	mov	x4, #0x0                   	// #0
  459364:	ldp	x29, x30, [sp]
  459368:	ldp	x0, x1, [sp, #16]
  45936c:	ldp	x2, x3, [sp, #32]
  459370:	ldp	x19, x20, [sp, #48]
  459374:	ldp	x21, x22, [sp, #64]
  459378:	ldp	x23, x24, [sp, #80]
  45937c:	ldp	x25, x26, [sp, #96]
  459380:	ldp	x27, x28, [sp, #112]
  459384:	ldp	d8, d9, [sp, #128]
  459388:	ldp	d10, d11, [sp, #144]
  45938c:	ldp	d12, d13, [sp, #160]
  459390:	ldp	d14, d15, [sp, #176]
  459394:	add	sp, sp, #0x850
  459398:	add	sp, sp, x4
  45939c:	ret
  4593a0:	add	x20, sp, #0xd0
  4593a4:	mov	x2, x30
  4593a8:	mov	x0, x20
  4593ac:	add	x1, sp, #0x850
  4593b0:	add	x21, sp, #0x490
  4593b4:	bl	458820 <_obstack_memory_used@@Base+0xe21c>
  4593b8:	mov	x1, x20
  4593bc:	mov	x2, #0x3c0                 	// #960
  4593c0:	mov	x0, x21
  4593c4:	bl	402490 <memcpy@plt>
  4593c8:	mov	x0, x19
  4593cc:	mov	x1, x21
  4593d0:	add	x2, sp, #0xc8
  4593d4:	bl	458c08 <_obstack_memory_used@@Base+0xe604>
  4593d8:	cmp	w0, #0x7
  4593dc:	b.ne	45941c <_obstack_memory_used@@Base+0xee18>  // b.any
  4593e0:	mov	x1, x21
  4593e4:	mov	x0, x20
  4593e8:	bl	457bf8 <_obstack_memory_used@@Base+0xd5f4>
  4593ec:	mov	x4, x0
  4593f0:	ldr	x2, [sp, #1040]
  4593f4:	ldr	x1, [sp, #1960]
  4593f8:	tbz	x2, #61, 45940c <_obstack_memory_used@@Base+0xee08>
  4593fc:	mov	x17, x1
  459400:	ldr	x16, [sp, #992]
  459404:	pacia1716
  459408:	mov	x1, x17
  45940c:	ldr	x0, [sp, #1952]
  459410:	bl	458f70 <_obstack_memory_used@@Base+0xe96c>
  459414:	str	x1, [x29, #8]
  459418:	b	459364 <_obstack_memory_used@@Base+0xed60>
  45941c:	bl	4027f0 <abort@plt>
  459420:	ldr	x2, [x0, #8]
  459424:	mov	x1, x0
  459428:	cbz	x2, 459438 <_obstack_memory_used@@Base+0xee34>
  45942c:	mov	x16, x2
  459430:	mov	w0, #0x1                   	// #1
  459434:	br	x16
  459438:	ret
  45943c:	nop
  459440:	sub	sp, sp, #0xae0
  459444:	mov	x2, x30
  459448:	stp	x29, x30, [sp]
  45944c:	mov	x29, sp
  459450:	stp	x19, x20, [sp, #16]
  459454:	add	x20, sp, #0xa0
  459458:	stp	x21, x22, [sp, #32]
  45945c:	mov	x22, x1
  459460:	add	x21, sp, #0x460
  459464:	add	x1, sp, #0xae0
  459468:	stp	x23, x24, [sp, #48]
  45946c:	mov	x23, x0
  459470:	mov	x0, x20
  459474:	stp	x25, x26, [sp, #64]
  459478:	stp	x27, x28, [sp, #80]
  45947c:	stp	d8, d9, [sp, #96]
  459480:	stp	d10, d11, [sp, #112]
  459484:	stp	d12, d13, [sp, #128]
  459488:	stp	d14, d15, [sp, #144]
  45948c:	bl	458820 <_obstack_memory_used@@Base+0xe21c>
  459490:	b	4594b0 <_obstack_memory_used@@Base+0xeeac>
  459494:	blr	x23
  459498:	cbnz	w0, 4594d4 <_obstack_memory_used@@Base+0xeed0>
  45949c:	cmp	w19, #0x5
  4594a0:	b.eq	4594d8 <_obstack_memory_used@@Base+0xeed4>  // b.none
  4594a4:	mov	x1, x21
  4594a8:	mov	x0, x20
  4594ac:	bl	458a70 <_obstack_memory_used@@Base+0xe46c>
  4594b0:	mov	x1, x21
  4594b4:	mov	x0, x20
  4594b8:	bl	4576a0 <_obstack_memory_used@@Base+0xd09c>
  4594bc:	mov	w19, w0
  4594c0:	cmp	w0, #0x0
  4594c4:	mov	x1, x22
  4594c8:	mov	x0, x20
  4594cc:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  4594d0:	b.eq	459494 <_obstack_memory_used@@Base+0xee90>  // b.none
  4594d4:	mov	w19, #0x3                   	// #3
  4594d8:	mov	w0, w19
  4594dc:	ldp	x29, x30, [sp]
  4594e0:	ldp	x19, x20, [sp, #16]
  4594e4:	ldp	x21, x22, [sp, #32]
  4594e8:	ldp	x23, x24, [sp, #48]
  4594ec:	ldp	x25, x26, [sp, #64]
  4594f0:	ldp	x27, x28, [sp, #80]
  4594f4:	ldp	d8, d9, [sp, #96]
  4594f8:	ldp	d10, d11, [sp, #112]
  4594fc:	ldp	d12, d13, [sp, #128]
  459500:	ldp	d14, d15, [sp, #144]
  459504:	add	sp, sp, #0xae0
  459508:	ret
  45950c:	nop
  459510:	ldr	x3, [x1, #8]
  459514:	mov	w4, #0x1                   	// #1
  459518:	ldr	x1, [x2, #8]
  45951c:	cmp	x3, x1
  459520:	csetm	w0, cc  // cc = lo, ul, last
  459524:	csel	w0, w0, w4, ls  // ls = plast
  459528:	ret
  45952c:	nop
  459530:	stp	x29, x30, [sp, #-112]!
  459534:	mov	x29, sp
  459538:	stp	x21, x22, [sp, #32]
  45953c:	lsl	w21, w3, #1
  459540:	stp	x25, x26, [sp, #64]
  459544:	add	w25, w21, #0x1
  459548:	cmp	w25, w4
  45954c:	b.ge	459624 <_obstack_memory_used@@Base+0xf020>  // b.tcont
  459550:	mov	w22, w3
  459554:	stp	x19, x20, [sp, #16]
  459558:	mov	x20, x2
  45955c:	stp	x23, x24, [sp, #48]
  459560:	mov	w23, w4
  459564:	mov	x24, x1
  459568:	stp	x27, x28, [sp, #80]
  45956c:	mov	x27, x0
  459570:	b	4595c8 <_obstack_memory_used@@Base+0xefc4>
  459574:	ldr	x2, [x20, x26]
  459578:	blr	x24
  45957c:	ldr	x3, [sp, #104]
  459580:	tbnz	w0, #31, 459634 <_obstack_memory_used@@Base+0xf030>
  459584:	ldr	x1, [x20, x28, lsl #3]
  459588:	mov	w21, w25
  45958c:	sxtw	x26, w22
  459590:	mov	x2, x1
  459594:	mov	w22, w21
  459598:	mov	x0, x27
  45959c:	lsl	w21, w21, #1
  4595a0:	ldr	x1, [x20, x26, lsl #3]
  4595a4:	blr	x24
  4595a8:	tbz	w0, #31, 459618 <_obstack_memory_used@@Base+0xf014>
  4595ac:	ldr	x1, [x19]
  4595b0:	add	w25, w21, #0x1
  4595b4:	ldr	x0, [x20, x26, lsl #3]
  4595b8:	str	x1, [x20, x26, lsl #3]
  4595bc:	str	x0, [x19]
  4595c0:	cmp	w23, w25
  4595c4:	b.le	459618 <_obstack_memory_used@@Base+0xf014>
  4595c8:	sbfiz	x19, x25, #3, #32
  4595cc:	sxtw	x28, w25
  4595d0:	add	x26, x19, #0x8
  4595d4:	add	w21, w25, #0x1
  4595d8:	add	x3, x20, x26
  4595dc:	str	x3, [sp, #104]
  4595e0:	cmp	w21, w23
  4595e4:	add	x19, x20, x19
  4595e8:	mov	x0, x27
  4595ec:	ldr	x1, [x20, x28, lsl #3]
  4595f0:	b.lt	459574 <_obstack_memory_used@@Base+0xef70>  // b.tstop
  4595f4:	sxtw	x26, w22
  4595f8:	mov	x2, x1
  4595fc:	mov	w21, w25
  459600:	mov	x0, x27
  459604:	mov	w22, w21
  459608:	ldr	x1, [x20, x26, lsl #3]
  45960c:	lsl	w21, w21, #1
  459610:	blr	x24
  459614:	tbnz	w0, #31, 4595ac <_obstack_memory_used@@Base+0xefa8>
  459618:	ldp	x19, x20, [sp, #16]
  45961c:	ldp	x23, x24, [sp, #48]
  459620:	ldp	x27, x28, [sp, #80]
  459624:	ldp	x21, x22, [sp, #32]
  459628:	ldp	x25, x26, [sp, #64]
  45962c:	ldp	x29, x30, [sp], #112
  459630:	ret
  459634:	mov	x19, x3
  459638:	ldr	x1, [x20, x26]
  45963c:	b	45958c <_obstack_memory_used@@Base+0xef88>
  459640:	stp	x29, x30, [sp, #-80]!
  459644:	mov	x29, sp
  459648:	stp	x19, x20, [sp, #16]
  45964c:	ldr	x19, [x2, #8]
  459650:	stp	x21, x22, [sp, #32]
  459654:	mov	x22, x2
  459658:	stp	x23, x24, [sp, #48]
  45965c:	add	x21, x2, #0x10
  459660:	lsr	x20, x19, #1
  459664:	mov	x23, x0
  459668:	mov	x24, x1
  45966c:	subs	w20, w20, #0x1
  459670:	b.mi	4596a8 <_obstack_memory_used@@Base+0xf0a4>  // b.first
  459674:	str	x25, [sp, #64]
  459678:	mov	w25, w19
  45967c:	nop
  459680:	mov	w3, w20
  459684:	mov	w4, w25
  459688:	mov	x2, x21
  45968c:	sub	w20, w20, #0x1
  459690:	mov	x1, x24
  459694:	mov	x0, x23
  459698:	bl	459530 <_obstack_memory_used@@Base+0xef2c>
  45969c:	cmn	w20, #0x1
  4596a0:	b.ne	459680 <_obstack_memory_used@@Base+0xf07c>  // b.any
  4596a4:	ldr	x25, [sp, #64]
  4596a8:	sub	w19, w19, #0x1
  4596ac:	cmp	w19, #0x0
  4596b0:	sxtw	x19, w19
  4596b4:	b.le	4596ec <_obstack_memory_used@@Base+0xf0e8>
  4596b8:	ldr	x1, [x21, x19, lsl #3]
  4596bc:	mov	w4, w19
  4596c0:	ldr	x0, [x22, #16]
  4596c4:	str	x1, [x22, #16]
  4596c8:	str	x0, [x21, x19, lsl #3]
  4596cc:	mov	x2, x21
  4596d0:	sub	x19, x19, #0x1
  4596d4:	mov	x1, x24
  4596d8:	mov	x0, x23
  4596dc:	mov	w3, #0x0                   	// #0
  4596e0:	bl	459530 <_obstack_memory_used@@Base+0xef2c>
  4596e4:	cmp	w19, #0x0
  4596e8:	b.gt	4596b8 <_obstack_memory_used@@Base+0xf0b4>
  4596ec:	ldp	x19, x20, [sp, #16]
  4596f0:	ldp	x21, x22, [sp, #32]
  4596f4:	ldp	x23, x24, [sp, #48]
  4596f8:	ldp	x29, x30, [sp], #80
  4596fc:	ret
  459700:	and	w0, w0, #0xff
  459704:	cmp	w0, #0xff
  459708:	b.eq	459758 <_obstack_memory_used@@Base+0xf154>  // b.none
  45970c:	and	w1, w0, #0x7
  459710:	cmp	w1, #0x2
  459714:	b.eq	459750 <_obstack_memory_used@@Base+0xf14c>  // b.none
  459718:	b.ls	459744 <_obstack_memory_used@@Base+0xf140>  // b.plast
  45971c:	cmp	w1, #0x3
  459720:	mov	w0, #0x4                   	// #4
  459724:	b.ne	45972c <_obstack_memory_used@@Base+0xf128>  // b.any
  459728:	ret
  45972c:	cmp	w1, w0
  459730:	mov	w0, #0x8                   	// #8
  459734:	b.eq	459728 <_obstack_memory_used@@Base+0xf124>  // b.none
  459738:	stp	x29, x30, [sp, #-16]!
  45973c:	mov	x29, sp
  459740:	bl	4027f0 <abort@plt>
  459744:	mov	w0, #0x8                   	// #8
  459748:	cbnz	w1, 459738 <_obstack_memory_used@@Base+0xf134>
  45974c:	ret
  459750:	mov	w0, w1
  459754:	ret
  459758:	mov	w0, #0x0                   	// #0
  45975c:	ret
  459760:	and	w5, w0, #0xff
  459764:	cmp	w5, #0x50
  459768:	b.eq	459880 <_obstack_memory_used@@Base+0xf27c>  // b.none
  45976c:	and	w4, w5, #0xf
  459770:	cmp	w4, #0x4
  459774:	b.eq	459790 <_obstack_memory_used@@Base+0xf18c>  // b.none
  459778:	b.ls	4597a4 <_obstack_memory_used@@Base+0xf1a0>  // b.plast
  45977c:	cmp	w4, #0xb
  459780:	b.eq	4598a4 <_obstack_memory_used@@Base+0xf2a0>  // b.none
  459784:	b.ls	459800 <_obstack_memory_used@@Base+0xf1fc>  // b.plast
  459788:	cmp	w4, #0xc
  45978c:	b.ne	4598b4 <_obstack_memory_used@@Base+0xf2b0>  // b.any
  459790:	mov	x0, x2
  459794:	ldr	x4, [x0], #8
  459798:	cbnz	x4, 459860 <_obstack_memory_used@@Base+0xf25c>
  45979c:	str	x4, [x3]
  4597a0:	ret
  4597a4:	cmp	w4, #0x2
  4597a8:	b.eq	459894 <_obstack_memory_used@@Base+0xf290>  // b.none
  4597ac:	b.ls	4597c8 <_obstack_memory_used@@Base+0xf1c4>  // b.plast
  4597b0:	cmp	w4, #0x3
  4597b4:	b.ne	4598b4 <_obstack_memory_used@@Base+0xf2b0>  // b.any
  4597b8:	mov	x0, x2
  4597bc:	ldr	w4, [x0], #4
  4597c0:	cbz	x4, 45979c <_obstack_memory_used@@Base+0xf198>
  4597c4:	b	459860 <_obstack_memory_used@@Base+0xf25c>
  4597c8:	cbz	w4, 459790 <_obstack_memory_used@@Base+0xf18c>
  4597cc:	cmp	w4, #0x1
  4597d0:	b.ne	4598b4 <_obstack_memory_used@@Base+0xf2b0>  // b.any
  4597d4:	mov	x0, x2
  4597d8:	mov	x4, #0x0                   	// #0
  4597dc:	mov	w7, #0x0                   	// #0
  4597e0:	ldrb	w8, [x0], #1
  4597e4:	and	x6, x8, #0x7f
  4597e8:	lsl	x6, x6, x7
  4597ec:	add	w7, w7, #0x7
  4597f0:	orr	x4, x4, x6
  4597f4:	tbnz	w8, #7, 4597e0 <_obstack_memory_used@@Base+0xf1dc>
  4597f8:	cbz	x4, 45979c <_obstack_memory_used@@Base+0xf198>
  4597fc:	b	459860 <_obstack_memory_used@@Base+0xf25c>
  459800:	cmp	w4, #0x9
  459804:	b.eq	459820 <_obstack_memory_used@@Base+0xf21c>  // b.none
  459808:	cmp	w4, #0xa
  45980c:	b.ne	4598b4 <_obstack_memory_used@@Base+0xf2b0>  // b.any
  459810:	mov	x0, x2
  459814:	ldrsh	x4, [x0], #2
  459818:	cbz	x4, 45979c <_obstack_memory_used@@Base+0xf198>
  45981c:	b	459860 <_obstack_memory_used@@Base+0xf25c>
  459820:	mov	x0, x2
  459824:	mov	x4, #0x0                   	// #0
  459828:	mov	w7, #0x0                   	// #0
  45982c:	ldrb	w8, [x0], #1
  459830:	and	x6, x8, #0x7f
  459834:	lsl	x6, x6, x7
  459838:	add	w7, w7, #0x7
  45983c:	orr	x4, x4, x6
  459840:	tbnz	w8, #7, 45982c <_obstack_memory_used@@Base+0xf228>
  459844:	cmp	w7, #0x3f
  459848:	b.hi	459798 <_obstack_memory_used@@Base+0xf194>  // b.pmore
  45984c:	tbz	w8, #6, 459798 <_obstack_memory_used@@Base+0xf194>
  459850:	mov	x6, #0xffffffffffffffff    	// #-1
  459854:	lsl	x7, x6, x7
  459858:	orr	x4, x4, x7
  45985c:	nop
  459860:	and	w6, w5, #0x70
  459864:	cmp	w6, #0x10
  459868:	csel	x1, x2, x1, eq  // eq = none
  45986c:	add	x4, x4, x1
  459870:	tbz	w5, #7, 45979c <_obstack_memory_used@@Base+0xf198>
  459874:	ldr	x4, [x4]
  459878:	str	x4, [x3]
  45987c:	ret
  459880:	add	x0, x2, #0x7
  459884:	and	x0, x0, #0xfffffffffffffff8
  459888:	ldr	x4, [x0], #8
  45988c:	str	x4, [x3]
  459890:	ret
  459894:	mov	x0, x2
  459898:	ldrh	w4, [x0], #2
  45989c:	cbz	x4, 45979c <_obstack_memory_used@@Base+0xf198>
  4598a0:	b	459860 <_obstack_memory_used@@Base+0xf25c>
  4598a4:	mov	x0, x2
  4598a8:	ldrsw	x4, [x0], #4
  4598ac:	cbz	x4, 45979c <_obstack_memory_used@@Base+0xf198>
  4598b0:	b	459860 <_obstack_memory_used@@Base+0xf25c>
  4598b4:	stp	x29, x30, [sp, #-16]!
  4598b8:	mov	x29, sp
  4598bc:	bl	4027f0 <abort@plt>
  4598c0:	stp	x29, x30, [sp, #-48]!
  4598c4:	mov	x29, sp
  4598c8:	stp	x19, x20, [sp, #16]
  4598cc:	mov	x20, x0
  4598d0:	add	x19, x0, #0x9
  4598d4:	mov	x0, x19
  4598d8:	bl	4024f0 <strlen@plt>
  4598dc:	ldrb	w3, [x20, #8]
  4598e0:	add	x0, x0, #0x1
  4598e4:	add	x2, x19, x0
  4598e8:	cmp	w3, #0x3
  4598ec:	b.hi	4599b8 <_obstack_memory_used@@Base+0xf3b4>  // b.pmore
  4598f0:	ldrb	w0, [x20, #9]
  4598f4:	cmp	w0, #0x7a
  4598f8:	b.eq	45990c <_obstack_memory_used@@Base+0xf308>  // b.none
  4598fc:	mov	w0, #0x0                   	// #0
  459900:	ldp	x19, x20, [sp, #16]
  459904:	ldp	x29, x30, [sp], #48
  459908:	ret
  45990c:	ldrsb	w1, [x2], #1
  459910:	tbnz	w1, #31, 45990c <_obstack_memory_used@@Base+0xf308>
  459914:	nop
  459918:	mov	x0, x2
  45991c:	ldrsb	w1, [x2], #1
  459920:	tbnz	w1, #31, 459918 <_obstack_memory_used@@Base+0xf314>
  459924:	cmp	w3, #0x1
  459928:	b.eq	4599b0 <_obstack_memory_used@@Base+0xf3ac>  // b.none
  45992c:	nop
  459930:	ldrsb	w0, [x2], #1
  459934:	tbnz	w0, #31, 459930 <_obstack_memory_used@@Base+0xf32c>
  459938:	add	x19, x20, #0xa
  45993c:	nop
  459940:	ldrsb	w1, [x2], #1
  459944:	tbnz	w1, #31, 459940 <_obstack_memory_used@@Base+0xf33c>
  459948:	ldrb	w0, [x20, #10]
  45994c:	add	x20, sp, #0x28
  459950:	cmp	w0, #0x52
  459954:	b.ne	459974 <_obstack_memory_used@@Base+0xf370>  // b.any
  459958:	b	4599a0 <_obstack_memory_used@@Base+0xf39c>
  45995c:	add	x2, x2, #0x1
  459960:	cmp	w0, #0x4c
  459964:	b.ne	4598fc <_obstack_memory_used@@Base+0xf2f8>  // b.any
  459968:	ldrb	w0, [x19, #1]!
  45996c:	cmp	w0, #0x52
  459970:	b.eq	4599a0 <_obstack_memory_used@@Base+0xf39c>  // b.none
  459974:	cmp	w0, #0x50
  459978:	b.ne	45995c <_obstack_memory_used@@Base+0xf358>  // b.any
  45997c:	ldrb	w0, [x2], #1
  459980:	mov	x3, x20
  459984:	mov	x1, #0x0                   	// #0
  459988:	and	w0, w0, #0x7f
  45998c:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459990:	mov	x2, x0
  459994:	ldrb	w0, [x19, #1]!
  459998:	cmp	w0, #0x52
  45999c:	b.ne	459974 <_obstack_memory_used@@Base+0xf370>  // b.any
  4599a0:	ldrb	w0, [x2]
  4599a4:	ldp	x19, x20, [sp, #16]
  4599a8:	ldp	x29, x30, [sp], #48
  4599ac:	ret
  4599b0:	add	x2, x0, #0x2
  4599b4:	b	459938 <_obstack_memory_used@@Base+0xf334>
  4599b8:	ldrb	w1, [x19, x0]
  4599bc:	mov	w0, #0xff                  	// #255
  4599c0:	cmp	w1, #0x8
  4599c4:	b.ne	459900 <_obstack_memory_used@@Base+0xf2fc>  // b.any
  4599c8:	ldrb	w1, [x2, #1]
  4599cc:	cbnz	w1, 459900 <_obstack_memory_used@@Base+0xf2fc>
  4599d0:	add	x2, x2, #0x2
  4599d4:	b	4598f0 <_obstack_memory_used@@Base+0xf2ec>
  4599d8:	and	w0, w0, #0xff
  4599dc:	cmp	w0, #0xff
  4599e0:	b.eq	459a18 <_obstack_memory_used@@Base+0xf414>  // b.none
  4599e4:	and	w3, w0, #0x70
  4599e8:	cmp	w3, #0x20
  4599ec:	b.eq	459a30 <_obstack_memory_used@@Base+0xf42c>  // b.none
  4599f0:	b.ls	459a04 <_obstack_memory_used@@Base+0xf400>  // b.plast
  4599f4:	cmp	w3, #0x30
  4599f8:	b.ne	459a20 <_obstack_memory_used@@Base+0xf41c>  // b.any
  4599fc:	ldr	x0, [x2]
  459a00:	ret
  459a04:	tst	w0, #0x60
  459a08:	b.eq	459a18 <_obstack_memory_used@@Base+0xf414>  // b.none
  459a0c:	stp	x29, x30, [sp, #-16]!
  459a10:	mov	x29, sp
  459a14:	bl	4027f0 <abort@plt>
  459a18:	mov	x0, #0x0                   	// #0
  459a1c:	ret
  459a20:	cmp	w3, #0x50
  459a24:	mov	x0, #0x0                   	// #0
  459a28:	b.ne	459a0c <_obstack_memory_used@@Base+0xf408>  // b.any
  459a2c:	ret
  459a30:	ldr	x0, [x1]
  459a34:	ret
  459a38:	stp	x29, x30, [sp, #-64]!
  459a3c:	mov	x29, sp
  459a40:	stp	x21, x22, [sp, #32]
  459a44:	mov	x22, x2
  459a48:	ldrh	w21, [x0, #32]
  459a4c:	add	x2, x0, #0x10
  459a50:	stp	x19, x20, [sp, #16]
  459a54:	mov	x19, x0
  459a58:	ubfx	x21, x21, #3, #8
  459a5c:	mov	x20, x1
  459a60:	add	x1, x0, #0x8
  459a64:	mov	w0, w21
  459a68:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459a6c:	add	x2, x20, #0x8
  459a70:	mov	x20, x0
  459a74:	mov	x1, x20
  459a78:	add	x3, sp, #0x30
  459a7c:	mov	w0, w21
  459a80:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459a84:	ldrh	w0, [x19, #32]
  459a88:	add	x2, x22, #0x8
  459a8c:	mov	x1, x20
  459a90:	add	x3, sp, #0x38
  459a94:	ubfx	x0, x0, #3, #8
  459a98:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459a9c:	ldp	x2, x1, [sp, #48]
  459aa0:	mov	w3, #0x1                   	// #1
  459aa4:	ldp	x19, x20, [sp, #16]
  459aa8:	ldp	x21, x22, [sp, #32]
  459aac:	cmp	x2, x1
  459ab0:	csetm	w0, cc  // cc = lo, ul, last
  459ab4:	csel	w0, w0, w3, ls  // ls = plast
  459ab8:	ldp	x29, x30, [sp], #64
  459abc:	ret
  459ac0:	stp	x29, x30, [sp, #-128]!
  459ac4:	mov	x29, sp
  459ac8:	stp	x21, x22, [sp, #32]
  459acc:	add	x22, x0, #0x8
  459ad0:	stp	x23, x24, [sp, #48]
  459ad4:	add	x23, x0, #0x10
  459ad8:	stp	x25, x26, [sp, #64]
  459adc:	mov	x26, x0
  459ae0:	ldrh	w0, [x0, #32]
  459ae4:	stp	x19, x20, [sp, #16]
  459ae8:	mov	x19, x1
  459aec:	mov	x20, x2
  459af0:	ubfx	x24, x0, #3, #8
  459af4:	mov	x1, x22
  459af8:	mov	x2, x23
  459afc:	mov	x0, x24
  459b00:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459b04:	ldr	w1, [x19]
  459b08:	cbz	w1, 459b9c <_obstack_memory_used@@Base+0xf598>
  459b0c:	stp	x27, x28, [sp, #80]
  459b10:	add	x27, sp, #0x70
  459b14:	mov	x25, x0
  459b18:	mov	x21, #0x0                   	// #0
  459b1c:	add	x0, sp, #0x78
  459b20:	str	x0, [sp, #104]
  459b24:	nop
  459b28:	ldr	w1, [x19, #4]
  459b2c:	cbz	w1, 459b84 <_obstack_memory_used@@Base+0xf580>
  459b30:	ldrb	w0, [x26, #32]
  459b34:	tbz	w0, #2, 459b68 <_obstack_memory_used@@Base+0xf564>
  459b38:	add	x28, x19, #0x4
  459b3c:	sub	x28, x28, w1, sxtw
  459b40:	cmp	x28, x21
  459b44:	b.eq	459b68 <_obstack_memory_used@@Base+0xf564>  // b.none
  459b48:	mov	x0, x28
  459b4c:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  459b50:	mov	x2, x23
  459b54:	mov	w24, w0
  459b58:	mov	x1, x22
  459b5c:	mov	x21, x28
  459b60:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459b64:	mov	x25, x0
  459b68:	cbnz	w24, 459bb8 <_obstack_memory_used@@Base+0xf5b4>
  459b6c:	ldp	x1, x0, [x19, #8]
  459b70:	stp	x1, x0, [sp, #112]
  459b74:	cbz	x1, 459b84 <_obstack_memory_used@@Base+0xf580>
  459b78:	sub	x1, x20, x1
  459b7c:	cmp	x1, x0
  459b80:	b.cc	459c20 <_obstack_memory_used@@Base+0xf61c>  // b.lo, b.ul, b.last
  459b84:	ldr	w1, [x19]
  459b88:	add	x1, x1, #0x4
  459b8c:	add	x19, x19, x1
  459b90:	ldr	w1, [x19]
  459b94:	cbnz	w1, 459b28 <_obstack_memory_used@@Base+0xf524>
  459b98:	ldp	x27, x28, [sp, #80]
  459b9c:	mov	x0, #0x0                   	// #0
  459ba0:	ldp	x19, x20, [sp, #16]
  459ba4:	ldp	x21, x22, [sp, #32]
  459ba8:	ldp	x23, x24, [sp, #48]
  459bac:	ldp	x25, x26, [sp, #64]
  459bb0:	ldp	x29, x30, [sp], #128
  459bb4:	ret
  459bb8:	and	w28, w24, #0xff
  459bbc:	mov	x3, x27
  459bc0:	add	x2, x19, #0x8
  459bc4:	mov	x1, x25
  459bc8:	mov	w0, w28
  459bcc:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459bd0:	ldr	x3, [sp, #104]
  459bd4:	mov	x2, x0
  459bd8:	mov	x1, #0x0                   	// #0
  459bdc:	and	w0, w28, #0xf
  459be0:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459be4:	mov	w0, w28
  459be8:	bl	459700 <_obstack_memory_used@@Base+0xf0fc>
  459bec:	lsl	w2, w0, #3
  459bf0:	cmp	w0, #0x8
  459bf4:	mov	x0, #0x1                   	// #1
  459bf8:	ldr	x1, [sp, #112]
  459bfc:	lsl	x2, x0, x2
  459c00:	sub	x2, x2, #0x1
  459c04:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  459c08:	tst	x1, x2
  459c0c:	b.eq	459b84 <_obstack_memory_used@@Base+0xf580>  // b.none
  459c10:	ldr	x0, [sp, #120]
  459c14:	sub	x1, x20, x1
  459c18:	cmp	x1, x0
  459c1c:	b.cs	459b84 <_obstack_memory_used@@Base+0xf580>  // b.hs, b.nlast
  459c20:	mov	x0, x19
  459c24:	ldp	x19, x20, [sp, #16]
  459c28:	ldp	x21, x22, [sp, #32]
  459c2c:	ldp	x23, x24, [sp, #48]
  459c30:	ldp	x25, x26, [sp, #64]
  459c34:	ldp	x27, x28, [sp, #80]
  459c38:	ldp	x29, x30, [sp], #128
  459c3c:	ret
  459c40:	stp	x29, x30, [sp, #-80]!
  459c44:	add	x3, x1, #0x4
  459c48:	mov	x29, sp
  459c4c:	stp	x21, x22, [sp, #32]
  459c50:	mov	x21, x1
  459c54:	ldrsw	x1, [x1, #4]
  459c58:	stp	x19, x20, [sp, #16]
  459c5c:	mov	x20, x2
  459c60:	add	x19, x0, #0x10
  459c64:	str	x23, [sp, #48]
  459c68:	add	x23, x0, #0x8
  459c6c:	sub	x0, x3, x1
  459c70:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  459c74:	and	w22, w0, #0xff
  459c78:	mov	x2, x19
  459c7c:	mov	x1, x23
  459c80:	mov	w0, w22
  459c84:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459c88:	mov	x1, x0
  459c8c:	add	x3, sp, #0x40
  459c90:	add	x2, x21, #0x8
  459c94:	mov	w0, w22
  459c98:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459c9c:	add	x1, x20, #0x4
  459ca0:	ldrsw	x0, [x20, #4]
  459ca4:	sub	x0, x1, x0
  459ca8:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  459cac:	mov	x2, x19
  459cb0:	and	w19, w0, #0xff
  459cb4:	mov	x1, x23
  459cb8:	mov	w0, w19
  459cbc:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459cc0:	mov	x1, x0
  459cc4:	add	x2, x20, #0x8
  459cc8:	add	x3, sp, #0x48
  459ccc:	mov	w0, w19
  459cd0:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459cd4:	ldp	x2, x1, [sp, #64]
  459cd8:	mov	w3, #0x1                   	// #1
  459cdc:	ldp	x19, x20, [sp, #16]
  459ce0:	ldp	x21, x22, [sp, #32]
  459ce4:	cmp	x2, x1
  459ce8:	csetm	w0, cc  // cc = lo, ul, last
  459cec:	csel	w0, w0, w3, ls  // ls = plast
  459cf0:	ldr	x23, [sp, #48]
  459cf4:	ldp	x29, x30, [sp], #80
  459cf8:	ret
  459cfc:	nop
  459d00:	stp	x29, x30, [sp, #-112]!
  459d04:	mov	x29, sp
  459d08:	stp	x21, x22, [sp, #32]
  459d0c:	mov	x21, x0
  459d10:	ldr	w0, [x1]
  459d14:	cbz	w0, 459e78 <_obstack_memory_used@@Base+0xf874>
  459d18:	stp	x19, x20, [sp, #16]
  459d1c:	mov	x19, x1
  459d20:	mov	w20, #0x0                   	// #0
  459d24:	stp	x25, x26, [sp, #64]
  459d28:	add	x25, sp, #0x68
  459d2c:	add	x26, x21, #0x8
  459d30:	stp	x27, x28, [sp, #80]
  459d34:	add	x27, x21, #0x10
  459d38:	mov	x22, #0x0                   	// #0
  459d3c:	mov	x4, #0x0                   	// #0
  459d40:	stp	x23, x24, [sp, #48]
  459d44:	mov	x23, #0x0                   	// #0
  459d48:	ldr	w2, [x19, #4]
  459d4c:	cbz	w2, 459e14 <_obstack_memory_used@@Base+0xf810>
  459d50:	add	x28, x19, #0x4
  459d54:	and	w24, w20, #0xff
  459d58:	sub	x28, x28, w2, sxtw
  459d5c:	cmp	x28, x4
  459d60:	b.eq	459db8 <_obstack_memory_used@@Base+0xf7b4>  // b.none
  459d64:	mov	x0, x28
  459d68:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  459d6c:	mov	w20, w0
  459d70:	cmp	w0, #0xff
  459d74:	b.eq	459e54 <_obstack_memory_used@@Base+0xf850>  // b.none
  459d78:	and	w24, w0, #0xff
  459d7c:	mov	x2, x27
  459d80:	mov	w0, w24
  459d84:	mov	x1, x26
  459d88:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459d8c:	mov	x23, x0
  459d90:	ldrh	w2, [x21, #32]
  459d94:	and	w0, w2, #0x7f8
  459d98:	cmp	w0, #0x7f8
  459d9c:	b.eq	459e48 <_obstack_memory_used@@Base+0xf844>  // b.none
  459da0:	ubfx	x2, x2, #3, #8
  459da4:	cmp	w2, w20
  459da8:	b.eq	459db8 <_obstack_memory_used@@Base+0xf7b4>  // b.none
  459dac:	ldrb	w0, [x21, #32]
  459db0:	orr	w0, w0, #0x4
  459db4:	strb	w0, [x21, #32]
  459db8:	mov	x3, x25
  459dbc:	add	x2, x19, #0x8
  459dc0:	mov	x1, x23
  459dc4:	mov	w0, w24
  459dc8:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459dcc:	mov	w0, w24
  459dd0:	bl	459700 <_obstack_memory_used@@Base+0xf0fc>
  459dd4:	lsl	w2, w0, #3
  459dd8:	cmp	w0, #0x8
  459ddc:	mov	x0, #0x1                   	// #1
  459de0:	ldr	x3, [sp, #104]
  459de4:	lsl	x2, x0, x2
  459de8:	sub	x2, x2, #0x1
  459dec:	mov	x4, x28
  459df0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  459df4:	tst	x3, x2
  459df8:	b.eq	459e14 <_obstack_memory_used@@Base+0xf810>  // b.none
  459dfc:	ldr	x0, [x21]
  459e00:	add	x22, x22, #0x1
  459e04:	cmp	x0, x3
  459e08:	b.ls	459e10 <_obstack_memory_used@@Base+0xf80c>  // b.plast
  459e0c:	str	x3, [x21]
  459e10:	mov	x4, x28
  459e14:	ldr	w2, [x19]
  459e18:	add	x2, x2, #0x4
  459e1c:	add	x19, x19, x2
  459e20:	ldr	w0, [x19]
  459e24:	cbnz	w0, 459d48 <_obstack_memory_used@@Base+0xf744>
  459e28:	ldp	x19, x20, [sp, #16]
  459e2c:	ldp	x23, x24, [sp, #48]
  459e30:	ldp	x25, x26, [sp, #64]
  459e34:	ldp	x27, x28, [sp, #80]
  459e38:	mov	x0, x22
  459e3c:	ldp	x21, x22, [sp, #32]
  459e40:	ldp	x29, x30, [sp], #112
  459e44:	ret
  459e48:	bfi	w2, w24, #3, #8
  459e4c:	strh	w2, [x21, #32]
  459e50:	b	459db8 <_obstack_memory_used@@Base+0xf7b4>
  459e54:	mov	x22, #0xffffffffffffffff    	// #-1
  459e58:	mov	x0, x22
  459e5c:	ldp	x19, x20, [sp, #16]
  459e60:	ldp	x21, x22, [sp, #32]
  459e64:	ldp	x23, x24, [sp, #48]
  459e68:	ldp	x25, x26, [sp, #64]
  459e6c:	ldp	x27, x28, [sp, #80]
  459e70:	ldp	x29, x30, [sp], #112
  459e74:	ret
  459e78:	mov	x22, #0x0                   	// #0
  459e7c:	b	459e38 <_obstack_memory_used@@Base+0xf834>
  459e80:	stp	x29, x30, [sp, #-112]!
  459e84:	mov	x29, sp
  459e88:	stp	x21, x22, [sp, #32]
  459e8c:	add	x21, x0, #0x8
  459e90:	add	x22, x0, #0x10
  459e94:	stp	x27, x28, [sp, #80]
  459e98:	mov	x28, x0
  459e9c:	ldrh	w0, [x0, #32]
  459ea0:	stp	x19, x20, [sp, #16]
  459ea4:	mov	x19, x2
  459ea8:	mov	x20, x1
  459eac:	stp	x25, x26, [sp, #64]
  459eb0:	ubfx	x26, x0, #3, #8
  459eb4:	mov	x2, x22
  459eb8:	mov	x1, x21
  459ebc:	mov	x0, x26
  459ec0:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459ec4:	ldr	w2, [x19]
  459ec8:	cbz	w2, 459f60 <_obstack_memory_used@@Base+0xf95c>
  459ecc:	add	x25, sp, #0x68
  459ed0:	stp	x23, x24, [sp, #48]
  459ed4:	mov	x24, x0
  459ed8:	mov	x23, #0x0                   	// #0
  459edc:	nop
  459ee0:	ldr	w2, [x19, #4]
  459ee4:	cbz	w2, 459f48 <_obstack_memory_used@@Base+0xf944>
  459ee8:	ldrb	w0, [x28, #32]
  459eec:	tbz	w0, #2, 459f20 <_obstack_memory_used@@Base+0xf91c>
  459ef0:	add	x27, x19, #0x4
  459ef4:	sub	x27, x27, w2, sxtw
  459ef8:	cmp	x27, x23
  459efc:	b.eq	459f20 <_obstack_memory_used@@Base+0xf91c>  // b.none
  459f00:	mov	x0, x27
  459f04:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  459f08:	mov	x2, x22
  459f0c:	mov	w26, w0
  459f10:	mov	x1, x21
  459f14:	mov	x23, x27
  459f18:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  459f1c:	mov	x24, x0
  459f20:	cbnz	w26, 459f78 <_obstack_memory_used@@Base+0xf974>
  459f24:	ldr	x0, [x19, #8]
  459f28:	cbz	x0, 459f48 <_obstack_memory_used@@Base+0xf944>
  459f2c:	ldr	x2, [x20]
  459f30:	cbz	x2, 459f48 <_obstack_memory_used@@Base+0xf944>
  459f34:	ldr	x3, [x2, #8]
  459f38:	add	x0, x3, #0x2
  459f3c:	add	x3, x3, #0x1
  459f40:	str	x3, [x2, #8]
  459f44:	str	x19, [x2, x0, lsl #3]
  459f48:	ldr	w2, [x19]
  459f4c:	add	x2, x2, #0x4
  459f50:	add	x19, x19, x2
  459f54:	ldr	w2, [x19]
  459f58:	cbnz	w2, 459ee0 <_obstack_memory_used@@Base+0xf8dc>
  459f5c:	ldp	x23, x24, [sp, #48]
  459f60:	ldp	x19, x20, [sp, #16]
  459f64:	ldp	x21, x22, [sp, #32]
  459f68:	ldp	x25, x26, [sp, #64]
  459f6c:	ldp	x27, x28, [sp, #80]
  459f70:	ldp	x29, x30, [sp], #112
  459f74:	ret
  459f78:	mov	x3, x25
  459f7c:	add	x2, x19, #0x8
  459f80:	mov	x1, x24
  459f84:	and	w27, w26, #0xff
  459f88:	mov	w0, w27
  459f8c:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  459f90:	mov	w0, w27
  459f94:	bl	459700 <_obstack_memory_used@@Base+0xf0fc>
  459f98:	lsl	w2, w0, #3
  459f9c:	cmp	w0, #0x8
  459fa0:	mov	x0, #0x1                   	// #1
  459fa4:	ldr	x3, [sp, #104]
  459fa8:	lsl	x2, x0, x2
  459fac:	sub	x2, x2, #0x1
  459fb0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  459fb4:	tst	x2, x3
  459fb8:	b.ne	459f2c <_obstack_memory_used@@Base+0xf928>  // b.any
  459fbc:	b	459f48 <_obstack_memory_used@@Base+0xf944>
  459fc0:	stp	x29, x30, [sp, #-128]!
  459fc4:	cmp	x1, #0x2f
  459fc8:	mov	x29, sp
  459fcc:	stp	x19, x20, [sp, #16]
  459fd0:	mov	x19, x2
  459fd4:	ldr	w2, [x2, #40]
  459fd8:	ldr	x13, [x0]
  459fdc:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  459fe0:	ldr	x3, [x0, #16]
  459fe4:	b.ne	45a124 <_obstack_memory_used@@Base+0xfb20>  // b.any
  459fe8:	cmp	x1, #0x19
  459fec:	b.ls	45a0fc <_obstack_memory_used@@Base+0xfaf8>  // b.plast
  459ff0:	mov	x10, #0x0                   	// #0
  459ff4:	mov	x15, #0x0                   	// #0
  459ff8:	ldrh	w4, [x0, #24]
  459ffc:	cbz	w4, 45a114 <_obstack_memory_used@@Base+0xfb10>
  45a000:	mov	w0, #0x38                  	// #56
  45a004:	mov	w7, #0xe550                	// #58704
  45a008:	mov	x11, #0x0                   	// #0
  45a00c:	mov	x12, #0x0                   	// #0
  45a010:	umaddl	x4, w4, w0, x3
  45a014:	mov	x8, #0x0                   	// #0
  45a018:	mov	x6, #0x0                   	// #0
  45a01c:	mov	x9, #0x0                   	// #0
  45a020:	movk	w7, #0x6474, lsl #16
  45a024:	mov	x14, #0x1                   	// #1
  45a028:	b	45a048 <_obstack_memory_used@@Base+0xfa44>
  45a02c:	cmp	w0, w7
  45a030:	b.eq	45a10c <_obstack_memory_used@@Base+0xfb08>  // b.none
  45a034:	cmp	w0, #0x2
  45a038:	csel	x6, x6, x3, ne  // ne = any
  45a03c:	add	x3, x3, #0x38
  45a040:	cmp	x4, x3
  45a044:	b.eq	45a090 <_obstack_memory_used@@Base+0xfa8c>  // b.none
  45a048:	ldr	w0, [x3]
  45a04c:	cmp	w0, #0x1
  45a050:	b.ne	45a02c <_obstack_memory_used@@Base+0xfa28>  // b.any
  45a054:	ldr	x0, [x3, #16]
  45a058:	ldr	x5, [x19]
  45a05c:	add	x0, x13, x0
  45a060:	cmp	x5, x0
  45a064:	b.cc	45a03c <_obstack_memory_used@@Base+0xfa38>  // b.lo, b.ul, b.last
  45a068:	ldr	x2, [x3, #40]
  45a06c:	add	x3, x3, #0x38
  45a070:	add	x2, x0, x2
  45a074:	cmp	x5, x2
  45a078:	csel	x11, x11, x2, cs  // cs = hs, nlast
  45a07c:	csel	x12, x12, x0, cs  // cs = hs, nlast
  45a080:	csel	x8, x8, x14, cs  // cs = hs, nlast
  45a084:	cmp	x4, x3
  45a088:	b.ne	45a048 <_obstack_memory_used@@Base+0xfa44>  // b.any
  45a08c:	nop
  45a090:	cbz	x8, 45a114 <_obstack_memory_used@@Base+0xfb10>
  45a094:	cmp	x1, #0x2f
  45a098:	b.ls	45a0d4 <_obstack_memory_used@@Base+0xfad0>  // b.plast
  45a09c:	adrp	x1, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45a0a0:	add	x1, x1, #0xb70
  45a0a4:	cmp	x10, #0x0
  45a0a8:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  45a0ac:	ldr	x0, [x1, #8]
  45a0b0:	b.eq	45a0c8 <_obstack_memory_used@@Base+0xfac4>  // b.none
  45a0b4:	ldr	x2, [x10, #40]
  45a0b8:	str	x2, [x15, #40]
  45a0bc:	str	x0, [x10, #40]
  45a0c0:	mov	x0, x10
  45a0c4:	str	x10, [x1, #8]
  45a0c8:	stp	x12, x11, [x0]
  45a0cc:	stp	x13, x9, [x0, #16]
  45a0d0:	str	x6, [x0, #32]
  45a0d4:	cbz	x9, 45a114 <_obstack_memory_used@@Base+0xfb10>
  45a0d8:	ldr	x0, [x9, #16]
  45a0dc:	add	x20, x13, x0
  45a0e0:	ldrb	w0, [x13, x0]
  45a0e4:	cmp	w0, #0x1
  45a0e8:	b.eq	45a184 <_obstack_memory_used@@Base+0xfb80>  // b.none
  45a0ec:	mov	w0, #0x1                   	// #1
  45a0f0:	ldp	x19, x20, [sp, #16]
  45a0f4:	ldp	x29, x30, [sp], #128
  45a0f8:	ret
  45a0fc:	mov	w0, #0xffffffff            	// #-1
  45a100:	ldp	x19, x20, [sp, #16]
  45a104:	ldp	x29, x30, [sp], #128
  45a108:	ret
  45a10c:	mov	x9, x3
  45a110:	b	45a03c <_obstack_memory_used@@Base+0xfa38>
  45a114:	mov	w0, #0x0                   	// #0
  45a118:	ldp	x19, x20, [sp, #16]
  45a11c:	ldp	x29, x30, [sp], #128
  45a120:	ret
  45a124:	ldp	x6, x7, [x0, #32]
  45a128:	adrp	x4, 48d000 <_obstack_memory_used@@Base+0x429fc>
  45a12c:	adrp	x5, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45a130:	ldr	x2, [x4, #1384]
  45a134:	cmp	x6, x2
  45a138:	b.eq	45a258 <_obstack_memory_used@@Base+0xfc54>  // b.none
  45a13c:	add	x2, x5, #0xb70
  45a140:	str	x6, [x4, #1384]
  45a144:	add	x4, x2, #0x40
  45a148:	add	x2, x2, #0x1c0
  45a14c:	str	x7, [x5, #2928]
  45a150:	stp	xzr, xzr, [x4, #-48]
  45a154:	stur	x4, [x4, #-8]
  45a158:	add	x4, x4, #0x30
  45a15c:	cmp	x2, x4
  45a160:	b.ne	45a150 <_obstack_memory_used@@Base+0xfb4c>  // b.any
  45a164:	add	x5, x5, #0xb70
  45a168:	mov	x10, #0x0                   	// #0
  45a16c:	add	x2, x5, #0x10
  45a170:	mov	x15, #0x0                   	// #0
  45a174:	str	xzr, [x5, #392]
  45a178:	str	x2, [x5, #8]
  45a17c:	str	wzr, [x19, #40]
  45a180:	b	459ff8 <_obstack_memory_used@@Base+0xf9f4>
  45a184:	stp	x21, x22, [sp, #32]
  45a188:	add	x22, x19, #0x8
  45a18c:	mov	x1, x22
  45a190:	stp	x23, x24, [sp, #48]
  45a194:	add	x23, x19, #0x10
  45a198:	mov	x2, x23
  45a19c:	ldrb	w21, [x20, #1]
  45a1a0:	mov	w0, w21
  45a1a4:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  45a1a8:	add	x3, sp, #0x40
  45a1ac:	mov	x1, x0
  45a1b0:	add	x2, x20, #0x4
  45a1b4:	mov	w0, w21
  45a1b8:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a1bc:	ldrb	w24, [x20, #2]
  45a1c0:	mov	x21, x0
  45a1c4:	cmp	w24, #0xff
  45a1c8:	b.eq	45a1d8 <_obstack_memory_used@@Base+0xfbd4>  // b.none
  45a1cc:	ldrb	w0, [x20, #3]
  45a1d0:	cmp	w0, #0x3b
  45a1d4:	b.eq	45a2b8 <_obstack_memory_used@@Base+0xfcb4>  // b.none
  45a1d8:	ldr	x2, [x19]
  45a1dc:	mov	x3, #0x4                   	// #4
  45a1e0:	ldp	x5, x4, [x19, #8]
  45a1e4:	add	x0, sp, #0x50
  45a1e8:	ldr	x1, [sp, #64]
  45a1ec:	stp	xzr, x5, [sp, #80]
  45a1f0:	stp	x4, x1, [sp, #96]
  45a1f4:	str	x3, [sp, #112]
  45a1f8:	bl	459ac0 <_obstack_memory_used@@Base+0xf4bc>
  45a1fc:	str	x0, [x19, #32]
  45a200:	cbz	x0, 45a3d0 <_obstack_memory_used@@Base+0xfdcc>
  45a204:	ldrsw	x1, [x0, #4]
  45a208:	add	x0, x0, #0x4
  45a20c:	sub	x0, x0, x1
  45a210:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  45a214:	and	w20, w0, #0xff
  45a218:	mov	x2, x23
  45a21c:	mov	x1, x22
  45a220:	mov	w0, w20
  45a224:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  45a228:	ldr	x2, [x19, #32]
  45a22c:	mov	x1, x0
  45a230:	add	x3, sp, #0x48
  45a234:	mov	w0, w20
  45a238:	add	x2, x2, #0x8
  45a23c:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a240:	ldr	x1, [sp, #72]
  45a244:	mov	w0, #0x1                   	// #1
  45a248:	ldp	x21, x22, [sp, #32]
  45a24c:	ldp	x23, x24, [sp, #48]
  45a250:	str	x1, [x19, #24]
  45a254:	b	45a100 <_obstack_memory_used@@Base+0xfafc>
  45a258:	ldr	x2, [x5, #2928]
  45a25c:	add	x8, x5, #0xb70
  45a260:	cmp	x2, x7
  45a264:	b.ne	45a13c <_obstack_memory_used@@Base+0xfb38>  // b.any
  45a268:	ldr	x7, [x8, #8]
  45a26c:	cbz	x7, 459ff0 <_obstack_memory_used@@Base+0xf9ec>
  45a270:	mov	x10, x7
  45a274:	mov	x15, #0x0                   	// #0
  45a278:	ldr	x6, [x19]
  45a27c:	ldp	x2, x4, [x10]
  45a280:	cmp	x6, x2
  45a284:	b.cc	45a290 <_obstack_memory_used@@Base+0xfc8c>  // b.lo, b.ul, b.last
  45a288:	cmp	x6, x4
  45a28c:	b.cc	45a3e8 <_obstack_memory_used@@Base+0xfde4>  // b.lo, b.ul, b.last
  45a290:	orr	x2, x2, x4
  45a294:	cbz	x2, 459ff8 <_obstack_memory_used@@Base+0xf9f4>
  45a298:	ldr	x2, [x10, #40]
  45a29c:	cbz	x2, 459ff8 <_obstack_memory_used@@Base+0xf9f4>
  45a2a0:	mov	x15, x10
  45a2a4:	mov	x10, x2
  45a2a8:	ldp	x2, x4, [x10]
  45a2ac:	cmp	x6, x2
  45a2b0:	b.cc	45a290 <_obstack_memory_used@@Base+0xfc8c>  // b.lo, b.ul, b.last
  45a2b4:	b	45a288 <_obstack_memory_used@@Base+0xfc84>
  45a2b8:	mov	x2, x23
  45a2bc:	mov	x1, x22
  45a2c0:	mov	w0, w24
  45a2c4:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  45a2c8:	add	x3, sp, #0x48
  45a2cc:	mov	x1, x0
  45a2d0:	mov	x2, x21
  45a2d4:	mov	w0, w24
  45a2d8:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a2dc:	ldr	x3, [sp, #72]
  45a2e0:	cbz	x3, 45a3c0 <_obstack_memory_used@@Base+0xfdbc>
  45a2e4:	ands	x5, x0, #0x3
  45a2e8:	ldr	x2, [x19]
  45a2ec:	b.ne	45a1dc <_obstack_memory_used@@Base+0xfbd8>  // b.any
  45a2f0:	ldrsw	x1, [x0]
  45a2f4:	add	x1, x1, x20
  45a2f8:	cmp	x1, x2
  45a2fc:	b.hi	45a3c0 <_obstack_memory_used@@Base+0xfdbc>  // b.pmore
  45a300:	sub	x3, x3, #0x1
  45a304:	lsl	x1, x3, #3
  45a308:	add	x21, x0, x1
  45a30c:	ldrsw	x1, [x0, x1]
  45a310:	add	x1, x1, x20
  45a314:	cmp	x1, x2
  45a318:	b.ls	45a35c <_obstack_memory_used@@Base+0xfd58>  // b.plast
  45a31c:	cmp	x5, x3
  45a320:	b.cs	45a40c <_obstack_memory_used@@Base+0xfe08>  // b.hs, b.nlast
  45a324:	add	x1, x5, x3
  45a328:	lsr	x1, x1, #1
  45a32c:	lsl	x4, x1, #3
  45a330:	add	x21, x0, x4
  45a334:	ldrsw	x4, [x0, x4]
  45a338:	add	x4, x4, x20
  45a33c:	cmp	x4, x2
  45a340:	b.hi	45a3e0 <_obstack_memory_used@@Base+0xfddc>  // b.pmore
  45a344:	add	x5, x1, #0x1
  45a348:	lsl	x1, x5, #3
  45a34c:	ldrsw	x1, [x0, x1]
  45a350:	add	x1, x1, x20
  45a354:	cmp	x1, x2
  45a358:	b.ls	45a31c <_obstack_memory_used@@Base+0xfd18>  // b.plast
  45a35c:	ldrsw	x22, [x21, #4]
  45a360:	add	x22, x22, x20
  45a364:	add	x1, x22, #0x4
  45a368:	ldrsw	x0, [x22, #4]
  45a36c:	sub	x0, x1, x0
  45a370:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  45a374:	and	w23, w0, #0xff
  45a378:	mov	w0, w23
  45a37c:	bl	459700 <_obstack_memory_used@@Base+0xf0fc>
  45a380:	mov	w2, w0
  45a384:	mov	x1, #0x0                   	// #0
  45a388:	add	x2, x2, #0x8
  45a38c:	add	x3, sp, #0x50
  45a390:	add	x2, x22, x2
  45a394:	and	w0, w23, #0xf
  45a398:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a39c:	ldrsw	x0, [x21]
  45a3a0:	ldr	x1, [sp, #80]
  45a3a4:	add	x20, x0, x20
  45a3a8:	ldr	x2, [x19]
  45a3ac:	add	x0, x20, x1
  45a3b0:	cmp	x2, x0
  45a3b4:	b.cs	45a3bc <_obstack_memory_used@@Base+0xfdb8>  // b.hs, b.nlast
  45a3b8:	str	x22, [x19, #32]
  45a3bc:	str	x20, [x19, #24]
  45a3c0:	mov	w0, #0x1                   	// #1
  45a3c4:	ldp	x21, x22, [sp, #32]
  45a3c8:	ldp	x23, x24, [sp, #48]
  45a3cc:	b	45a100 <_obstack_memory_used@@Base+0xfafc>
  45a3d0:	mov	w0, #0x1                   	// #1
  45a3d4:	ldp	x21, x22, [sp, #32]
  45a3d8:	ldp	x23, x24, [sp, #48]
  45a3dc:	b	45a0f0 <_obstack_memory_used@@Base+0xfaec>
  45a3e0:	mov	x3, x1
  45a3e4:	b	45a31c <_obstack_memory_used@@Base+0xfd18>
  45a3e8:	cmp	x10, x7
  45a3ec:	ldp	x13, x9, [x10, #16]
  45a3f0:	b.eq	45a0d4 <_obstack_memory_used@@Base+0xfad0>  // b.none
  45a3f4:	add	x5, x5, #0xb70
  45a3f8:	ldr	x0, [x10, #40]
  45a3fc:	str	x0, [x15, #40]
  45a400:	str	x10, [x5, #8]
  45a404:	str	x7, [x10, #40]
  45a408:	b	45a0d4 <_obstack_memory_used@@Base+0xfad0>
  45a40c:	bl	4027f0 <abort@plt>
  45a410:	stp	x29, x30, [sp, #-160]!
  45a414:	mov	x29, sp
  45a418:	stp	x19, x20, [sp, #16]
  45a41c:	mov	x19, x1
  45a420:	ldrb	w1, [x0, #32]
  45a424:	stp	x23, x24, [sp, #48]
  45a428:	mov	x24, x0
  45a42c:	tbz	w1, #0, 45a498 <_obstack_memory_used@@Base+0xfe94>
  45a430:	stp	x27, x28, [sp, #80]
  45a434:	ldr	x27, [x24, #24]
  45a438:	tbnz	w1, #2, 45a50c <_obstack_memory_used@@Base+0xff08>
  45a43c:	ldrh	w0, [x24, #32]
  45a440:	tst	w0, #0x7f8
  45a444:	b.ne	45a66c <_obstack_memory_used@@Base+0x10068>  // b.any
  45a448:	mov	x2, #0x0                   	// #0
  45a44c:	ldr	x1, [x27, #8]
  45a450:	b	45a474 <_obstack_memory_used@@Base+0xfe70>
  45a454:	add	x0, x1, x2
  45a458:	lsr	x0, x0, #1
  45a45c:	add	x3, x0, #0x2
  45a460:	ldr	x20, [x27, x3, lsl #3]
  45a464:	ldr	x3, [x20, #8]
  45a468:	cmp	x19, x3
  45a46c:	b.cs	45a4f4 <_obstack_memory_used@@Base+0xfef0>  // b.hs, b.nlast
  45a470:	mov	x1, x0
  45a474:	cmp	x1, x2
  45a478:	b.hi	45a454 <_obstack_memory_used@@Base+0xfe50>  // b.pmore
  45a47c:	ldp	x27, x28, [sp, #80]
  45a480:	mov	x20, #0x0                   	// #0
  45a484:	mov	x0, x20
  45a488:	ldp	x19, x20, [sp, #16]
  45a48c:	ldp	x23, x24, [sp, #48]
  45a490:	ldp	x29, x30, [sp], #160
  45a494:	ret
  45a498:	stp	x25, x26, [sp, #64]
  45a49c:	ldr	w25, [x0, #32]
  45a4a0:	stp	x21, x22, [sp, #32]
  45a4a4:	tst	x25, #0xfffff800
  45a4a8:	lsr	w25, w25, #11
  45a4ac:	b.ne	45a714 <_obstack_memory_used@@Base+0x10110>  // b.any
  45a4b0:	ldr	x20, [x0, #24]
  45a4b4:	tbz	w1, #1, 45a5c4 <_obstack_memory_used@@Base+0xffc0>
  45a4b8:	ldr	x1, [x20]
  45a4bc:	cbnz	x1, 45a4d0 <_obstack_memory_used@@Base+0xfecc>
  45a4c0:	b	45a5f0 <_obstack_memory_used@@Base+0xffec>
  45a4c4:	ldr	x1, [x20, #8]!
  45a4c8:	add	x25, x25, x0
  45a4cc:	cbz	x1, 45a5d8 <_obstack_memory_used@@Base+0xffd4>
  45a4d0:	mov	x0, x24
  45a4d4:	bl	459d00 <_obstack_memory_used@@Base+0xf6fc>
  45a4d8:	cmn	x0, #0x1
  45a4dc:	b.ne	45a4c4 <_obstack_memory_used@@Base+0xfec0>  // b.any
  45a4e0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x209fc>
  45a4e4:	mov	x1, #0x7f8                 	// #2040
  45a4e8:	add	x0, x0, #0x888
  45a4ec:	stp	x0, x1, [x24, #24]
  45a4f0:	b	45a5f0 <_obstack_memory_used@@Base+0xffec>
  45a4f4:	ldr	x2, [x20, #16]
  45a4f8:	add	x3, x3, x2
  45a4fc:	cmp	x19, x3
  45a500:	b.cc	45a9e8 <_obstack_memory_used@@Base+0x103e4>  // b.lo, b.ul, b.last
  45a504:	add	x2, x0, #0x1
  45a508:	b	45a474 <_obstack_memory_used@@Base+0xfe70>
  45a50c:	ldr	x28, [x27, #8]
  45a510:	cbz	x28, 45a47c <_obstack_memory_used@@Base+0xfe78>
  45a514:	add	x0, x24, #0x8
  45a518:	add	x23, sp, #0x88
  45a51c:	stp	x21, x22, [sp, #32]
  45a520:	add	x22, sp, #0x90
  45a524:	stp	x25, x26, [sp, #64]
  45a528:	add	x26, x24, #0x10
  45a52c:	mov	x25, #0x0                   	// #0
  45a530:	str	x0, [sp, #96]
  45a534:	b	45a554 <_obstack_memory_used@@Base+0xff50>
  45a538:	ldr	x1, [sp, #144]
  45a53c:	add	x0, x0, x1
  45a540:	cmp	x0, x19
  45a544:	b.hi	45a9e0 <_obstack_memory_used@@Base+0x103dc>  // b.pmore
  45a548:	add	x25, x24, #0x1
  45a54c:	cmp	x25, x28
  45a550:	b.cs	45a65c <_obstack_memory_used@@Base+0x10058>  // b.hs, b.nlast
  45a554:	add	x24, x25, x28
  45a558:	lsr	x24, x24, #1
  45a55c:	add	x0, x24, #0x2
  45a560:	ldr	x20, [x27, x0, lsl #3]
  45a564:	add	x1, x20, #0x4
  45a568:	ldrsw	x0, [x20, #4]
  45a56c:	sub	x0, x1, x0
  45a570:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  45a574:	ldr	x1, [sp, #96]
  45a578:	and	w21, w0, #0xff
  45a57c:	mov	x2, x26
  45a580:	mov	w0, w21
  45a584:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  45a588:	mov	x1, x0
  45a58c:	mov	x3, x23
  45a590:	add	x2, x20, #0x8
  45a594:	mov	w0, w21
  45a598:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a59c:	mov	x3, x22
  45a5a0:	mov	x2, x0
  45a5a4:	mov	x1, #0x0                   	// #0
  45a5a8:	and	w0, w21, #0xf
  45a5ac:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a5b0:	ldr	x0, [sp, #136]
  45a5b4:	cmp	x0, x19
  45a5b8:	b.ls	45a538 <_obstack_memory_used@@Base+0xff34>  // b.plast
  45a5bc:	mov	x28, x24
  45a5c0:	b	45a54c <_obstack_memory_used@@Base+0xff48>
  45a5c4:	mov	x1, x20
  45a5c8:	bl	459d00 <_obstack_memory_used@@Base+0xf6fc>
  45a5cc:	mov	x25, x0
  45a5d0:	cmn	x0, #0x1
  45a5d4:	b.eq	45a4e0 <_obstack_memory_used@@Base+0xfedc>  // b.none
  45a5d8:	ldr	w0, [x24, #32]
  45a5dc:	tst	x25, #0xffffffffffe00000
  45a5e0:	b.eq	45aa24 <_obstack_memory_used@@Base+0x10420>  // b.none
  45a5e4:	and	w0, w0, #0x7ff
  45a5e8:	str	w0, [x24, #32]
  45a5ec:	cbnz	x25, 45a714 <_obstack_memory_used@@Base+0x10110>
  45a5f0:	ldr	x0, [x24]
  45a5f4:	cmp	x0, x19
  45a5f8:	b.hi	45a650 <_obstack_memory_used@@Base+0x1004c>  // b.pmore
  45a5fc:	ldrb	w1, [x24, #32]
  45a600:	ldr	x21, [x24, #24]
  45a604:	tbnz	w1, #0, 45aa68 <_obstack_memory_used@@Base+0x10464>
  45a608:	tbz	w1, #1, 45a9c0 <_obstack_memory_used@@Base+0x103bc>
  45a60c:	ldr	x1, [x21]
  45a610:	cbnz	x1, 45a620 <_obstack_memory_used@@Base+0x1001c>
  45a614:	b	45a650 <_obstack_memory_used@@Base+0x1004c>
  45a618:	ldr	x1, [x21, #8]!
  45a61c:	cbz	x1, 45a650 <_obstack_memory_used@@Base+0x1004c>
  45a620:	mov	x2, x19
  45a624:	mov	x0, x24
  45a628:	bl	459ac0 <_obstack_memory_used@@Base+0xf4bc>
  45a62c:	mov	x20, x0
  45a630:	cbz	x0, 45a618 <_obstack_memory_used@@Base+0x10014>
  45a634:	mov	x0, x20
  45a638:	ldp	x19, x20, [sp, #16]
  45a63c:	ldp	x21, x22, [sp, #32]
  45a640:	ldp	x23, x24, [sp, #48]
  45a644:	ldp	x25, x26, [sp, #64]
  45a648:	ldp	x29, x30, [sp], #160
  45a64c:	ret
  45a650:	ldp	x21, x22, [sp, #32]
  45a654:	ldp	x25, x26, [sp, #64]
  45a658:	b	45a480 <_obstack_memory_used@@Base+0xfe7c>
  45a65c:	ldp	x21, x22, [sp, #32]
  45a660:	ldp	x25, x26, [sp, #64]
  45a664:	ldp	x27, x28, [sp, #80]
  45a668:	b	45a480 <_obstack_memory_used@@Base+0xfe7c>
  45a66c:	stp	x25, x26, [sp, #64]
  45a670:	ubfx	x25, x0, #3, #8
  45a674:	add	x2, x24, #0x10
  45a678:	add	x1, x24, #0x8
  45a67c:	mov	x0, x25
  45a680:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  45a684:	mov	x24, x0
  45a688:	ldr	x28, [x27, #8]
  45a68c:	cbz	x28, 45a660 <_obstack_memory_used@@Base+0x1005c>
  45a690:	and	w0, w25, #0xf
  45a694:	add	x23, sp, #0x88
  45a698:	mov	x26, #0x0                   	// #0
  45a69c:	stp	x21, x22, [sp, #32]
  45a6a0:	add	x22, sp, #0x90
  45a6a4:	str	w0, [sp, #96]
  45a6a8:	b	45a6c8 <_obstack_memory_used@@Base+0x100c4>
  45a6ac:	ldr	x1, [sp, #144]
  45a6b0:	add	x0, x0, x1
  45a6b4:	cmp	x0, x19
  45a6b8:	b.hi	45a9e0 <_obstack_memory_used@@Base+0x103dc>  // b.pmore
  45a6bc:	add	x26, x21, #0x1
  45a6c0:	cmp	x26, x28
  45a6c4:	b.cs	45a65c <_obstack_memory_used@@Base+0x10058>  // b.hs, b.nlast
  45a6c8:	add	x21, x28, x26
  45a6cc:	mov	x3, x23
  45a6d0:	mov	x1, x24
  45a6d4:	mov	w0, w25
  45a6d8:	lsr	x21, x21, #1
  45a6dc:	add	x2, x21, #0x2
  45a6e0:	ldr	x20, [x27, x2, lsl #3]
  45a6e4:	add	x2, x20, #0x8
  45a6e8:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a6ec:	mov	x2, x0
  45a6f0:	ldrb	w0, [sp, #96]
  45a6f4:	mov	x3, x22
  45a6f8:	mov	x1, #0x0                   	// #0
  45a6fc:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45a700:	ldr	x0, [sp, #136]
  45a704:	cmp	x0, x19
  45a708:	b.ls	45a6ac <_obstack_memory_used@@Base+0x100a8>  // b.plast
  45a70c:	mov	x28, x21
  45a710:	b	45a6c0 <_obstack_memory_used@@Base+0x100bc>
  45a714:	add	x20, x25, #0x2
  45a718:	lsl	x20, x20, #3
  45a71c:	mov	x0, x20
  45a720:	bl	402670 <malloc@plt>
  45a724:	str	x0, [sp, #144]
  45a728:	mov	x1, x0
  45a72c:	cbz	x0, 45a5f0 <_obstack_memory_used@@Base+0xffec>
  45a730:	str	xzr, [x1, #8]
  45a734:	mov	x0, x20
  45a738:	bl	402670 <malloc@plt>
  45a73c:	str	x0, [sp, #152]
  45a740:	cbz	x0, 45a748 <_obstack_memory_used@@Base+0x10144>
  45a744:	str	xzr, [x0, #8]
  45a748:	ldrb	w0, [x24, #32]
  45a74c:	ldr	x20, [x24, #24]
  45a750:	tbz	w0, #1, 45a9fc <_obstack_memory_used@@Base+0x103f8>
  45a754:	ldr	x2, [x20]
  45a758:	cbz	x2, 45aa60 <_obstack_memory_used@@Base+0x1045c>
  45a75c:	add	x22, sp, #0x90
  45a760:	mov	x1, x22
  45a764:	mov	x0, x24
  45a768:	bl	459e80 <_obstack_memory_used@@Base+0xf87c>
  45a76c:	ldr	x2, [x20, #8]!
  45a770:	cbnz	x2, 45a760 <_obstack_memory_used@@Base+0x1015c>
  45a774:	ldr	x0, [sp, #144]
  45a778:	str	x0, [sp, #96]
  45a77c:	str	x0, [sp, #120]
  45a780:	cbz	x0, 45a790 <_obstack_memory_used@@Base+0x1018c>
  45a784:	ldr	x0, [x0, #8]
  45a788:	cmp	x0, x25
  45a78c:	b.ne	45aa60 <_obstack_memory_used@@Base+0x1045c>  // b.any
  45a790:	ldrb	w0, [x24, #32]
  45a794:	tbnz	w0, #2, 45a9f0 <_obstack_memory_used@@Base+0x103ec>
  45a798:	ldrh	w1, [x24, #32]
  45a79c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0xe9fc>
  45a7a0:	adrp	x20, 459000 <_obstack_memory_used@@Base+0xe9fc>
  45a7a4:	add	x0, x0, #0xa38
  45a7a8:	tst	w1, #0x7f8
  45a7ac:	add	x20, x20, #0x510
  45a7b0:	csel	x20, x20, x0, eq  // eq = none
  45a7b4:	ldr	x22, [sp, #152]
  45a7b8:	cbz	x22, 45aa10 <_obstack_memory_used@@Base+0x1040c>
  45a7bc:	ldr	x1, [sp, #96]
  45a7c0:	stp	x27, x28, [sp, #80]
  45a7c4:	ldr	x0, [x1, #8]
  45a7c8:	str	x0, [sp, #104]
  45a7cc:	cbz	x0, 45aa50 <_obstack_memory_used@@Base+0x1044c>
  45a7d0:	adrp	x3, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45a7d4:	add	x3, x3, #0xb70
  45a7d8:	add	x0, x0, #0x1
  45a7dc:	add	x28, x1, #0x10
  45a7e0:	add	x27, x3, #0x190
  45a7e4:	mov	x21, x28
  45a7e8:	mov	x23, x27
  45a7ec:	lsl	x0, x0, #3
  45a7f0:	mov	x26, #0x10                  	// #16
  45a7f4:	str	x0, [sp, #112]
  45a7f8:	ldr	x0, [sp, #112]
  45a7fc:	str	x27, [x22, x26]
  45a800:	cmp	x0, x26
  45a804:	b.eq	45a860 <_obstack_memory_used@@Base+0x1025c>  // b.none
  45a808:	cmp	x21, x23
  45a80c:	mov	x27, x21
  45a810:	b.ne	45a830 <_obstack_memory_used@@Base+0x1022c>  // b.any
  45a814:	b	45a850 <_obstack_memory_used@@Base+0x1024c>
  45a818:	sub	x3, x27, x28
  45a81c:	add	x0, x22, x3
  45a820:	ldr	x27, [x0, #16]
  45a824:	str	xzr, [x0, #16]
  45a828:	cmp	x27, x23
  45a82c:	b.eq	45a850 <_obstack_memory_used@@Base+0x1024c>  // b.none
  45a830:	ldr	x2, [x27]
  45a834:	mov	x0, x24
  45a838:	ldr	x1, [x21, #8]
  45a83c:	blr	x20
  45a840:	tbnz	w0, #31, 45a818 <_obstack_memory_used@@Base+0x10214>
  45a844:	add	x21, x21, #0x8
  45a848:	add	x26, x26, #0x8
  45a84c:	b	45a7f8 <_obstack_memory_used@@Base+0x101f4>
  45a850:	mov	x27, x23
  45a854:	add	x21, x21, #0x8
  45a858:	add	x26, x26, #0x8
  45a85c:	b	45a7f8 <_obstack_memory_used@@Base+0x101f4>
  45a860:	add	x6, x22, #0x10
  45a864:	mov	x5, #0x0                   	// #0
  45a868:	mov	x3, #0x0                   	// #0
  45a86c:	mov	x0, #0x0                   	// #0
  45a870:	b	45a894 <_obstack_memory_used@@Base+0x10290>
  45a874:	ldr	x4, [sp, #96]
  45a878:	add	x1, x3, #0x2
  45a87c:	add	x3, x3, #0x1
  45a880:	str	x2, [x4, x1, lsl #3]
  45a884:	ldr	x1, [sp, #104]
  45a888:	add	x0, x0, #0x1
  45a88c:	cmp	x1, x0
  45a890:	b.eq	45a8b0 <_obstack_memory_used@@Base+0x102ac>  // b.none
  45a894:	ldr	x1, [x6, x0, lsl #3]
  45a898:	ldr	x2, [x28, x0, lsl #3]
  45a89c:	cbnz	x1, 45a874 <_obstack_memory_used@@Base+0x10270>
  45a8a0:	add	x1, x5, #0x2
  45a8a4:	add	x5, x5, #0x1
  45a8a8:	str	x2, [x22, x1, lsl #3]
  45a8ac:	b	45a884 <_obstack_memory_used@@Base+0x10280>
  45a8b0:	ldp	x0, x2, [sp, #144]
  45a8b4:	str	x0, [sp, #96]
  45a8b8:	ldr	x0, [sp, #120]
  45a8bc:	str	x3, [x0, #8]
  45a8c0:	ldr	x0, [sp, #96]
  45a8c4:	str	x5, [x22, #8]
  45a8c8:	ldr	x1, [x2, #8]
  45a8cc:	ldr	x0, [x0, #8]
  45a8d0:	add	x0, x0, x1
  45a8d4:	cmp	x0, x25
  45a8d8:	b.ne	45aa64 <_obstack_memory_used@@Base+0x10460>  // b.any
  45a8dc:	mov	x1, x20
  45a8e0:	mov	x0, x24
  45a8e4:	bl	459640 <_obstack_memory_used@@Base+0xf03c>
  45a8e8:	ldr	x25, [sp, #152]
  45a8ec:	ldr	x22, [x25, #8]
  45a8f0:	cbz	x22, 45a994 <_obstack_memory_used@@Base+0x10390>
  45a8f4:	ldr	x0, [sp, #144]
  45a8f8:	str	x0, [sp, #96]
  45a8fc:	add	x27, x0, #0x10
  45a900:	ldr	x28, [x0, #8]
  45a904:	nop
  45a908:	add	x0, x25, x22, lsl #3
  45a90c:	sub	x23, x22, #0x1
  45a910:	ldr	x26, [x0, #8]
  45a914:	cbz	x28, 45aa30 <_obstack_memory_used@@Base+0x1042c>
  45a918:	add	x22, x22, x28
  45a91c:	mov	x21, x28
  45a920:	sub	x22, x22, #0x1
  45a924:	b	45a938 <_obstack_memory_used@@Base+0x10334>
  45a928:	ldr	x0, [x27, x21, lsl #3]
  45a92c:	str	x0, [x27, x22, lsl #3]
  45a930:	sub	x22, x22, #0x1
  45a934:	cbz	x21, 45a970 <_obstack_memory_used@@Base+0x1036c>
  45a938:	mov	x28, x21
  45a93c:	sub	x21, x21, #0x1
  45a940:	mov	x2, x26
  45a944:	mov	x0, x24
  45a948:	ldr	x1, [x27, x21, lsl #3]
  45a94c:	blr	x20
  45a950:	cmp	w0, #0x0
  45a954:	b.gt	45a928 <_obstack_memory_used@@Base+0x10324>
  45a958:	ldr	x0, [sp, #96]
  45a95c:	add	x22, x22, #0x2
  45a960:	str	x26, [x0, x22, lsl #3]
  45a964:	cbz	x23, 45a97c <_obstack_memory_used@@Base+0x10378>
  45a968:	mov	x22, x23
  45a96c:	b	45a908 <_obstack_memory_used@@Base+0x10304>
  45a970:	mov	x22, x23
  45a974:	mov	x28, #0x0                   	// #0
  45a978:	b	45a958 <_obstack_memory_used@@Base+0x10354>
  45a97c:	ldr	x2, [sp, #96]
  45a980:	ldr	x1, [x25, #8]
  45a984:	ldr	x0, [x2, #8]
  45a988:	ldr	x25, [sp, #152]
  45a98c:	add	x0, x0, x1
  45a990:	str	x0, [x2, #8]
  45a994:	mov	x0, x25
  45a998:	bl	402910 <free@plt>
  45a99c:	ldp	x27, x28, [sp, #80]
  45a9a0:	ldr	x1, [sp, #144]
  45a9a4:	ldrb	w0, [x24, #32]
  45a9a8:	ldr	x2, [x24, #24]
  45a9ac:	str	x2, [x1]
  45a9b0:	orr	w0, w0, #0x1
  45a9b4:	str	x1, [x24, #24]
  45a9b8:	strb	w0, [x24, #32]
  45a9bc:	b	45a5f0 <_obstack_memory_used@@Base+0xffec>
  45a9c0:	mov	x1, x21
  45a9c4:	mov	x2, x19
  45a9c8:	mov	x0, x24
  45a9cc:	bl	459ac0 <_obstack_memory_used@@Base+0xf4bc>
  45a9d0:	mov	x20, x0
  45a9d4:	ldp	x21, x22, [sp, #32]
  45a9d8:	ldp	x25, x26, [sp, #64]
  45a9dc:	b	45a484 <_obstack_memory_used@@Base+0xfe80>
  45a9e0:	ldp	x21, x22, [sp, #32]
  45a9e4:	ldp	x25, x26, [sp, #64]
  45a9e8:	ldp	x27, x28, [sp, #80]
  45a9ec:	b	45a484 <_obstack_memory_used@@Base+0xfe80>
  45a9f0:	adrp	x20, 459000 <_obstack_memory_used@@Base+0xe9fc>
  45a9f4:	add	x20, x20, #0xc40
  45a9f8:	b	45a7b4 <_obstack_memory_used@@Base+0x101b0>
  45a9fc:	mov	x2, x20
  45aa00:	add	x1, sp, #0x90
  45aa04:	mov	x0, x24
  45aa08:	bl	459e80 <_obstack_memory_used@@Base+0xf87c>
  45aa0c:	b	45a774 <_obstack_memory_used@@Base+0x10170>
  45aa10:	ldr	x2, [sp, #96]
  45aa14:	mov	x1, x20
  45aa18:	mov	x0, x24
  45aa1c:	bl	459640 <_obstack_memory_used@@Base+0xf03c>
  45aa20:	b	45a9a0 <_obstack_memory_used@@Base+0x1039c>
  45aa24:	bfi	w0, w25, #11, #21
  45aa28:	str	w0, [x24, #32]
  45aa2c:	b	45a5ec <_obstack_memory_used@@Base+0xffe8>
  45aa30:	ldr	x2, [sp, #96]
  45aa34:	add	x1, x22, #0x1
  45aa38:	str	x26, [x2, x1, lsl #3]
  45aa3c:	cbz	x23, 45a97c <_obstack_memory_used@@Base+0x10378>
  45aa40:	sub	x23, x22, #0x2
  45aa44:	mov	x22, x23
  45aa48:	ldr	x26, [x0]
  45aa4c:	b	45a958 <_obstack_memory_used@@Base+0x10354>
  45aa50:	mov	x2, x22
  45aa54:	mov	x5, #0x0                   	// #0
  45aa58:	mov	x3, #0x0                   	// #0
  45aa5c:	b	45a8b8 <_obstack_memory_used@@Base+0x102b4>
  45aa60:	stp	x27, x28, [sp, #80]
  45aa64:	bl	4027f0 <abort@plt>
  45aa68:	ldp	x21, x22, [sp, #32]
  45aa6c:	ldp	x25, x26, [sp, #64]
  45aa70:	b	45a430 <_obstack_memory_used@@Base+0xfe2c>
  45aa74:	nop
  45aa78:	stp	x29, x30, [sp, #-48]!
  45aa7c:	mov	x5, #0xffffffffffffffff    	// #-1
  45aa80:	mov	x4, #0x7f8                 	// #2040
  45aa84:	mov	x29, sp
  45aa88:	stp	x19, x20, [sp, #16]
  45aa8c:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x419fc>
  45aa90:	mov	x19, x1
  45aa94:	ldr	x1, [x20, #3880]
  45aa98:	str	x21, [sp, #32]
  45aa9c:	stp	x5, x2, [x19]
  45aaa0:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45aaa4:	stp	x3, x0, [x19, #16]
  45aaa8:	str	x4, [x19, #32]
  45aaac:	cbz	x1, 45aabc <_obstack_memory_used@@Base+0x104b8>
  45aab0:	add	x0, x21, #0xb70
  45aab4:	add	x0, x0, #0x198
  45aab8:	bl	402ad0 <pthread_mutex_lock@plt>
  45aabc:	add	x1, x21, #0xb70
  45aac0:	ldr	w0, [x1, #464]
  45aac4:	ldr	x2, [x1, #456]
  45aac8:	str	x2, [x19, #40]
  45aacc:	str	x19, [x1, #456]
  45aad0:	cbz	w0, 45ab04 <_obstack_memory_used@@Base+0x10500>
  45aad4:	ldr	x20, [x20, #3880]
  45aad8:	cbz	x20, 45aaf4 <_obstack_memory_used@@Base+0x104f0>
  45aadc:	add	x0, x21, #0xb70
  45aae0:	ldp	x19, x20, [sp, #16]
  45aae4:	add	x0, x0, #0x198
  45aae8:	ldr	x21, [sp, #32]
  45aaec:	ldp	x29, x30, [sp], #48
  45aaf0:	b	402b00 <pthread_mutex_unlock@plt>
  45aaf4:	ldp	x19, x20, [sp, #16]
  45aaf8:	ldr	x21, [sp, #32]
  45aafc:	ldp	x29, x30, [sp], #48
  45ab00:	ret
  45ab04:	add	x1, x1, #0x1d0
  45ab08:	mov	w0, #0x1                   	// #1
  45ab0c:	str	w0, [x1]
  45ab10:	b	45aad4 <_obstack_memory_used@@Base+0x104d0>
  45ab14:	nop
  45ab18:	cbz	x0, 45ab28 <_obstack_memory_used@@Base+0x10524>
  45ab1c:	ldr	w4, [x0]
  45ab20:	cbz	w4, 45ab28 <_obstack_memory_used@@Base+0x10524>
  45ab24:	b	45aa78 <_obstack_memory_used@@Base+0x10474>
  45ab28:	ret
  45ab2c:	nop
  45ab30:	cbz	x0, 45ab48 <_obstack_memory_used@@Base+0x10544>
  45ab34:	ldr	w2, [x0]
  45ab38:	cbz	w2, 45ab48 <_obstack_memory_used@@Base+0x10544>
  45ab3c:	mov	x3, #0x0                   	// #0
  45ab40:	mov	x2, #0x0                   	// #0
  45ab44:	b	45aa78 <_obstack_memory_used@@Base+0x10474>
  45ab48:	ret
  45ab4c:	nop
  45ab50:	stp	x29, x30, [sp, #-32]!
  45ab54:	mov	x29, sp
  45ab58:	str	x19, [sp, #16]
  45ab5c:	mov	x19, x0
  45ab60:	ldr	w0, [x0]
  45ab64:	cbnz	w0, 45ab74 <_obstack_memory_used@@Base+0x10570>
  45ab68:	ldr	x19, [sp, #16]
  45ab6c:	ldp	x29, x30, [sp], #32
  45ab70:	ret
  45ab74:	mov	x0, #0x30                  	// #48
  45ab78:	bl	402670 <malloc@plt>
  45ab7c:	mov	x1, x0
  45ab80:	mov	x0, x19
  45ab84:	ldr	x19, [sp, #16]
  45ab88:	mov	x3, #0x0                   	// #0
  45ab8c:	ldp	x29, x30, [sp], #32
  45ab90:	mov	x2, #0x0                   	// #0
  45ab94:	b	45aa78 <_obstack_memory_used@@Base+0x10474>
  45ab98:	stp	x29, x30, [sp, #-48]!
  45ab9c:	mov	x5, #0xffffffffffffffff    	// #-1
  45aba0:	mov	x4, #0x7fa                 	// #2042
  45aba4:	mov	x29, sp
  45aba8:	stp	x19, x20, [sp, #16]
  45abac:	adrp	x20, 48c000 <_obstack_memory_used@@Base+0x419fc>
  45abb0:	mov	x19, x1
  45abb4:	ldr	x1, [x20, #3880]
  45abb8:	str	x21, [sp, #32]
  45abbc:	stp	x5, x2, [x19]
  45abc0:	adrp	x21, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45abc4:	stp	x3, x0, [x19, #16]
  45abc8:	str	x4, [x19, #32]
  45abcc:	cbz	x1, 45abdc <_obstack_memory_used@@Base+0x105d8>
  45abd0:	add	x0, x21, #0xb70
  45abd4:	add	x0, x0, #0x198
  45abd8:	bl	402ad0 <pthread_mutex_lock@plt>
  45abdc:	add	x1, x21, #0xb70
  45abe0:	ldr	w0, [x1, #464]
  45abe4:	ldr	x2, [x1, #456]
  45abe8:	str	x2, [x19, #40]
  45abec:	str	x19, [x1, #456]
  45abf0:	cbz	w0, 45ac24 <_obstack_memory_used@@Base+0x10620>
  45abf4:	ldr	x20, [x20, #3880]
  45abf8:	cbz	x20, 45ac14 <_obstack_memory_used@@Base+0x10610>
  45abfc:	add	x0, x21, #0xb70
  45ac00:	ldp	x19, x20, [sp, #16]
  45ac04:	add	x0, x0, #0x198
  45ac08:	ldr	x21, [sp, #32]
  45ac0c:	ldp	x29, x30, [sp], #48
  45ac10:	b	402b00 <pthread_mutex_unlock@plt>
  45ac14:	ldp	x19, x20, [sp, #16]
  45ac18:	ldr	x21, [sp, #32]
  45ac1c:	ldp	x29, x30, [sp], #48
  45ac20:	ret
  45ac24:	add	x1, x1, #0x1d0
  45ac28:	mov	w0, #0x1                   	// #1
  45ac2c:	str	w0, [x1]
  45ac30:	b	45abf4 <_obstack_memory_used@@Base+0x105f0>
  45ac34:	nop
  45ac38:	mov	x3, #0x0                   	// #0
  45ac3c:	mov	x2, #0x0                   	// #0
  45ac40:	b	45ab98 <_obstack_memory_used@@Base+0x10594>
  45ac44:	nop
  45ac48:	stp	x29, x30, [sp, #-32]!
  45ac4c:	mov	x29, sp
  45ac50:	str	x19, [sp, #16]
  45ac54:	mov	x19, x0
  45ac58:	mov	x0, #0x30                  	// #48
  45ac5c:	bl	402670 <malloc@plt>
  45ac60:	mov	x1, x0
  45ac64:	mov	x0, x19
  45ac68:	ldr	x19, [sp, #16]
  45ac6c:	mov	x3, #0x0                   	// #0
  45ac70:	ldp	x29, x30, [sp], #32
  45ac74:	mov	x2, #0x0                   	// #0
  45ac78:	b	45ab98 <_obstack_memory_used@@Base+0x10594>
  45ac7c:	nop
  45ac80:	stp	x29, x30, [sp, #-48]!
  45ac84:	mov	x29, sp
  45ac88:	stp	x19, x20, [sp, #16]
  45ac8c:	cbz	x0, 45ad58 <_obstack_memory_used@@Base+0x10754>
  45ac90:	mov	x20, x0
  45ac94:	ldr	w0, [x0]
  45ac98:	cbz	w0, 45ad58 <_obstack_memory_used@@Base+0x10754>
  45ac9c:	stp	x21, x22, [sp, #32]
  45aca0:	adrp	x21, 48c000 <_obstack_memory_used@@Base+0x419fc>
  45aca4:	adrp	x22, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45aca8:	ldr	x0, [x21, #3880]
  45acac:	cbz	x0, 45acbc <_obstack_memory_used@@Base+0x106b8>
  45acb0:	add	x0, x22, #0xb70
  45acb4:	add	x0, x0, #0x198
  45acb8:	bl	402ad0 <pthread_mutex_lock@plt>
  45acbc:	add	x2, x22, #0xb70
  45acc0:	ldr	x1, [x2, #456]
  45acc4:	cbz	x1, 45ad0c <_obstack_memory_used@@Base+0x10708>
  45acc8:	add	x2, x2, #0x1c8
  45accc:	b	45acd8 <_obstack_memory_used@@Base+0x106d4>
  45acd0:	add	x2, x19, #0x28
  45acd4:	cbz	x1, 45ad0c <_obstack_memory_used@@Base+0x10708>
  45acd8:	ldr	x0, [x1, #24]
  45acdc:	mov	x19, x1
  45ace0:	ldr	x1, [x1, #40]
  45ace4:	cmp	x20, x0
  45ace8:	b.ne	45acd0 <_obstack_memory_used@@Base+0x106cc>  // b.any
  45acec:	str	x1, [x2]
  45acf0:	ldr	x21, [x21, #3880]
  45acf4:	cbnz	x21, 45ad6c <_obstack_memory_used@@Base+0x10768>
  45acf8:	mov	x0, x19
  45acfc:	ldp	x19, x20, [sp, #16]
  45ad00:	ldp	x21, x22, [sp, #32]
  45ad04:	ldp	x29, x30, [sp], #48
  45ad08:	ret
  45ad0c:	add	x2, x22, #0xb70
  45ad10:	ldr	x19, [x2, #472]
  45ad14:	cbz	x19, 45ad8c <_obstack_memory_used@@Base+0x10788>
  45ad18:	add	x2, x2, #0x1d8
  45ad1c:	b	45ad38 <_obstack_memory_used@@Base+0x10734>
  45ad20:	ldr	x1, [x0]
  45ad24:	cmp	x20, x1
  45ad28:	b.eq	45ada4 <_obstack_memory_used@@Base+0x107a0>  // b.none
  45ad2c:	add	x2, x19, #0x28
  45ad30:	ldr	x19, [x19, #40]
  45ad34:	cbz	x19, 45ad8c <_obstack_memory_used@@Base+0x10788>
  45ad38:	ldrb	w1, [x19, #32]
  45ad3c:	ldr	x0, [x19, #24]
  45ad40:	tbnz	w1, #0, 45ad20 <_obstack_memory_used@@Base+0x1071c>
  45ad44:	cmp	x20, x0
  45ad48:	b.ne	45ad2c <_obstack_memory_used@@Base+0x10728>  // b.any
  45ad4c:	ldr	x0, [x19, #40]
  45ad50:	str	x0, [x2]
  45ad54:	b	45acf0 <_obstack_memory_used@@Base+0x106ec>
  45ad58:	mov	x19, #0x0                   	// #0
  45ad5c:	mov	x0, x19
  45ad60:	ldp	x19, x20, [sp, #16]
  45ad64:	ldp	x29, x30, [sp], #48
  45ad68:	ret
  45ad6c:	add	x0, x22, #0xb70
  45ad70:	add	x0, x0, #0x198
  45ad74:	bl	402b00 <pthread_mutex_unlock@plt>
  45ad78:	mov	x0, x19
  45ad7c:	ldp	x19, x20, [sp, #16]
  45ad80:	ldp	x21, x22, [sp, #32]
  45ad84:	ldp	x29, x30, [sp], #48
  45ad88:	ret
  45ad8c:	ldr	x21, [x21, #3880]
  45ad90:	cbz	x21, 45ada0 <_obstack_memory_used@@Base+0x1079c>
  45ad94:	add	x0, x22, #0xb70
  45ad98:	add	x0, x0, #0x198
  45ad9c:	bl	402b00 <pthread_mutex_unlock@plt>
  45ada0:	bl	4027f0 <abort@plt>
  45ada4:	ldr	x1, [x19, #40]
  45ada8:	str	x1, [x2]
  45adac:	bl	402910 <free@plt>
  45adb0:	b	45acf0 <_obstack_memory_used@@Base+0x106ec>
  45adb4:	nop
  45adb8:	b	45ac80 <_obstack_memory_used@@Base+0x1067c>
  45adbc:	nop
  45adc0:	ldr	w1, [x0]
  45adc4:	cbnz	w1, 45adcc <_obstack_memory_used@@Base+0x107c8>
  45adc8:	ret
  45adcc:	stp	x29, x30, [sp, #-16]!
  45add0:	mov	x29, sp
  45add4:	bl	45ac80 <_obstack_memory_used@@Base+0x1067c>
  45add8:	ldp	x29, x30, [sp], #16
  45addc:	b	402910 <free@plt>
  45ade0:	stp	x29, x30, [sp, #-128]!
  45ade4:	mov	x29, sp
  45ade8:	stp	x23, x24, [sp, #48]
  45adec:	adrp	x23, 48e000 <__environ@@GLIBC_2.17+0xa68>
  45adf0:	add	x2, x23, #0xb70
  45adf4:	stp	x19, x20, [sp, #16]
  45adf8:	mov	x20, x0
  45adfc:	add	x0, x2, #0x1d0
  45ae00:	stp	x21, x22, [sp, #32]
  45ae04:	mov	x22, x1
  45ae08:	ldr	w0, [x0]
  45ae0c:	cbnz	w0, 45ae70 <_obstack_memory_used@@Base+0x1086c>
  45ae10:	mov	w2, #0x1                   	// #1
  45ae14:	adrp	x0, 459000 <_obstack_memory_used@@Base+0xe9fc>
  45ae18:	add	x1, sp, #0x50
  45ae1c:	add	x0, x0, #0xfc0
  45ae20:	stp	x20, xzr, [sp, #80]
  45ae24:	stp	xzr, xzr, [sp, #96]
  45ae28:	str	xzr, [sp, #112]
  45ae2c:	str	w2, [sp, #120]
  45ae30:	bl	4028e0 <dl_iterate_phdr@plt>
  45ae34:	tbnz	w0, #31, 45af84 <_obstack_memory_used@@Base+0x10980>
  45ae38:	ldr	x21, [sp, #112]
  45ae3c:	cbz	x21, 45ae58 <_obstack_memory_used@@Base+0x10854>
  45ae40:	ldr	x0, [sp, #88]
  45ae44:	str	x0, [x22]
  45ae48:	ldr	x0, [sp, #96]
  45ae4c:	str	x0, [x22, #8]
  45ae50:	ldr	x0, [sp, #104]
  45ae54:	str	x0, [x22, #16]
  45ae58:	mov	x0, x21
  45ae5c:	ldp	x19, x20, [sp, #16]
  45ae60:	ldp	x21, x22, [sp, #32]
  45ae64:	ldp	x23, x24, [sp, #48]
  45ae68:	ldp	x29, x30, [sp], #128
  45ae6c:	ret
  45ae70:	stp	x25, x26, [sp, #64]
  45ae74:	adrp	x25, 48c000 <_obstack_memory_used@@Base+0x419fc>
  45ae78:	ldr	x0, [x25, #3880]
  45ae7c:	cbz	x0, 45ae88 <_obstack_memory_used@@Base+0x10884>
  45ae80:	add	x0, x2, #0x198
  45ae84:	bl	402ad0 <pthread_mutex_lock@plt>
  45ae88:	add	x0, x23, #0xb70
  45ae8c:	ldr	x19, [x0, #472]
  45ae90:	cbnz	x19, 45aea0 <_obstack_memory_used@@Base+0x1089c>
  45ae94:	b	45af1c <_obstack_memory_used@@Base+0x10918>
  45ae98:	ldr	x19, [x19, #40]
  45ae9c:	cbz	x19, 45af1c <_obstack_memory_used@@Base+0x10918>
  45aea0:	ldr	x0, [x19]
  45aea4:	cmp	x20, x0
  45aea8:	b.cc	45ae98 <_obstack_memory_used@@Base+0x10894>  // b.lo, b.ul, b.last
  45aeac:	mov	x1, x20
  45aeb0:	mov	x0, x19
  45aeb4:	bl	45a410 <_obstack_memory_used@@Base+0xfe0c>
  45aeb8:	mov	x21, x0
  45aebc:	cbz	x0, 45af1c <_obstack_memory_used@@Base+0x10918>
  45aec0:	ldr	x25, [x25, #3880]
  45aec4:	cbnz	x25, 45af8c <_obstack_memory_used@@Base+0x10988>
  45aec8:	ldrb	w0, [x19, #32]
  45aecc:	ldr	x1, [x19, #8]
  45aed0:	str	x1, [x22]
  45aed4:	ldr	x1, [x19, #16]
  45aed8:	str	x1, [x22, #8]
  45aedc:	tbnz	w0, #2, 45af9c <_obstack_memory_used@@Base+0x10998>
  45aee0:	ldrh	w20, [x19, #32]
  45aee4:	ubfx	x20, x20, #3, #8
  45aee8:	add	x2, x19, #0x10
  45aeec:	add	x1, x19, #0x8
  45aef0:	mov	w0, w20
  45aef4:	bl	4599d8 <_obstack_memory_used@@Base+0xf3d4>
  45aef8:	add	x3, sp, #0x50
  45aefc:	mov	x1, x0
  45af00:	add	x2, x21, #0x8
  45af04:	mov	w0, w20
  45af08:	bl	459760 <_obstack_memory_used@@Base+0xf15c>
  45af0c:	ldr	x0, [sp, #80]
  45af10:	ldp	x25, x26, [sp, #64]
  45af14:	str	x0, [x22, #16]
  45af18:	b	45ae58 <_obstack_memory_used@@Base+0x10854>
  45af1c:	add	x24, x23, #0xb70
  45af20:	add	x26, x24, #0x1d8
  45af24:	nop
  45af28:	ldr	x19, [x24, #456]
  45af2c:	cbz	x19, 45afb4 <_obstack_memory_used@@Base+0x109b0>
  45af30:	ldr	x2, [x19, #40]
  45af34:	mov	x1, x20
  45af38:	mov	x0, x19
  45af3c:	str	x2, [x24, #456]
  45af40:	bl	45a410 <_obstack_memory_used@@Base+0xfe0c>
  45af44:	mov	x21, x0
  45af48:	ldr	x2, [x24, #472]
  45af4c:	cbz	x2, 45afcc <_obstack_memory_used@@Base+0x109c8>
  45af50:	mov	x0, x26
  45af54:	ldr	x3, [x19]
  45af58:	b	45af68 <_obstack_memory_used@@Base+0x10964>
  45af5c:	add	x0, x2, #0x28
  45af60:	ldr	x2, [x2, #40]
  45af64:	cbz	x2, 45af74 <_obstack_memory_used@@Base+0x10970>
  45af68:	ldr	x1, [x2]
  45af6c:	cmp	x1, x3
  45af70:	b.cs	45af5c <_obstack_memory_used@@Base+0x10958>  // b.hs, b.nlast
  45af74:	str	x2, [x19, #40]
  45af78:	str	x19, [x0]
  45af7c:	cbz	x21, 45af28 <_obstack_memory_used@@Base+0x10924>
  45af80:	b	45aec0 <_obstack_memory_used@@Base+0x108bc>
  45af84:	mov	x21, #0x0                   	// #0
  45af88:	b	45ae58 <_obstack_memory_used@@Base+0x10854>
  45af8c:	add	x0, x23, #0xb70
  45af90:	add	x0, x0, #0x198
  45af94:	bl	402b00 <pthread_mutex_unlock@plt>
  45af98:	b	45aec8 <_obstack_memory_used@@Base+0x108c4>
  45af9c:	add	x1, x21, #0x4
  45afa0:	ldrsw	x0, [x21, #4]
  45afa4:	sub	x0, x1, x0
  45afa8:	bl	4598c0 <_obstack_memory_used@@Base+0xf2bc>
  45afac:	and	w20, w0, #0xff
  45afb0:	b	45aee8 <_obstack_memory_used@@Base+0x108e4>
  45afb4:	ldr	x25, [x25, #3880]
  45afb8:	cbz	x25, 45afd4 <_obstack_memory_used@@Base+0x109d0>
  45afbc:	add	x0, x24, #0x198
  45afc0:	bl	402b00 <pthread_mutex_unlock@plt>
  45afc4:	ldp	x25, x26, [sp, #64]
  45afc8:	b	45ae10 <_obstack_memory_used@@Base+0x1080c>
  45afcc:	mov	x0, x26
  45afd0:	b	45af74 <_obstack_memory_used@@Base+0x10970>
  45afd4:	ldp	x25, x26, [sp, #64]
  45afd8:	b	45ae10 <_obstack_memory_used@@Base+0x1080c>
  45afdc:	nop
  45afe0:	stp	x29, x30, [sp, #-64]!
  45afe4:	mov	x29, sp
  45afe8:	stp	x19, x20, [sp, #16]
  45afec:	adrp	x20, 48b000 <_obstack_memory_used@@Base+0x409fc>
  45aff0:	add	x20, x20, #0xd98
  45aff4:	stp	x21, x22, [sp, #32]
  45aff8:	adrp	x21, 48b000 <_obstack_memory_used@@Base+0x409fc>
  45affc:	add	x21, x21, #0xd78
  45b000:	sub	x20, x20, x21
  45b004:	mov	w22, w0
  45b008:	stp	x23, x24, [sp, #48]
  45b00c:	mov	x23, x1
  45b010:	mov	x24, x2
  45b014:	bl	402450 <memcpy@plt-0x40>
  45b018:	cmp	xzr, x20, asr #3
  45b01c:	b.eq	45b048 <_obstack_memory_used@@Base+0x10a44>  // b.none
  45b020:	asr	x20, x20, #3
  45b024:	mov	x19, #0x0                   	// #0
  45b028:	ldr	x3, [x21, x19, lsl #3]
  45b02c:	mov	x2, x24
  45b030:	add	x19, x19, #0x1
  45b034:	mov	x1, x23
  45b038:	mov	w0, w22
  45b03c:	blr	x3
  45b040:	cmp	x20, x19
  45b044:	b.ne	45b028 <_obstack_memory_used@@Base+0x10a24>  // b.any
  45b048:	ldp	x19, x20, [sp, #16]
  45b04c:	ldp	x21, x22, [sp, #32]
  45b050:	ldp	x23, x24, [sp, #48]
  45b054:	ldp	x29, x30, [sp], #64
  45b058:	ret
  45b05c:	nop
  45b060:	ret

Disassembly of section .fini:

000000000045b064 <.fini>:
  45b064:	stp	x29, x30, [sp, #-16]!
  45b068:	mov	x29, sp
  45b06c:	ldp	x29, x30, [sp], #16
  45b070:	ret
